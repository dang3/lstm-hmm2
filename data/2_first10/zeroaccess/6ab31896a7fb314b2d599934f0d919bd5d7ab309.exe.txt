push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
call
dec
mov
stos
cmpsb
sub
lods
add
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
cmp
testl
pop
dec
or
and
or
pop
jge
push
orl
cmp
lods
adc
frstor
stc
inc
je
rorb
ret
lcall
inc
xchg
dec
jno
orl
test
mov
movsb
rorl
cmp
fmull
int3
stos
shll
jo
jge
jno
outsb
inc
icebp
push
mov
or
adc
inc
out
leave
xchg
jle
stos
add
mov
sbb
and
mov
gs
jmp
pop
or
pop
sub
xchg
adc
inc
push
and
insb
mov
mov
in
fs
sub
sbb
jp
jns
shrl
in
mov
js
fsubp
xchg
aad
fimull
hlt
cmc
dec
mov
mov
movsl
jb
dec
cli
jae
cld
xchg
and
sbb
xchg
aad
addr16
mov
mov
sbb
movsl
mov
das
mov
xchg
xchg
jecxz
add
sbbl
sbb
rolb
push
nop
mov
mov
pop
push
sbb
cmp
and
cmp
jmp
sbb
rcll
loope
ja
mov
hlt
les
in
dec
push
sub
daa
push
xor
inc
adc
adcl
call
mov
fldl
sbb
fldcw
fistpll
out
pop
ss
sbb
out
lods
lret
pusha
repnz
or
pop
out
lods
outsb
lods
gs
dec
and
inc
xor
sti
lods
xlat
xor
mov
roll
int
xor
push
mov
int3
negl
add
cmp
jno
mov
mov
iret
push
adc
outsb
xchg
es
loopne
es
adc
jbe
ja
mov
or
pop
adc
bound
sub
xlat
ror
ja
pop
clc
xorl
inc
mov
enter
movsl
inc
outsb
arpl
sahf
xchg
fs
mov
fwait
inc
dec
mov
or
mov
mov
popf
push
or
stos
push
dec
and
inc
ror
xlat
jmp
cmp
into
and
inc
mov
ss
pop
adc
pop
push
pop
mov
add
aam
push
adcb
add
ss
repnz
sbb
lcall
sub
dec
inc
js
out
cmc
pop
ret
pandn
sbb
push
pop
out
sbb
dec
int3
outsb
scas
mov
mov
ret
jge
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
jo
cmpb
adc
adc
pop
loopne
lods
pop
imul
pop
in
xlat
jnp
fadds
adc
nop
mov
movsl
xor
test
jmp
outsl
dec
lahf
cmpsl
inc
std
testb
in
sbb
xlat
jmp
lahf
lds
cmp
mull
lea
cld
outsl
out
dec
xchg
int
dec
pushf
adc
lcall
mov
xor
lods
xchg
inc
sbb
loope
push
mov
rorl
loope
or
dec
adcl
call
or
ljmp
push
cmp
stc
sbb
jo
xor
push
sub
push
nop
ret
addr16
adc
mov
leave
in
hlt
test
test
shrb
cmc
xchg
dec
or
mov
bswap
pop
dec
push
leave
test
add
mov
mov
add
rolb
jne
test
sub
adc
mov
dec
mulb
inc
adc
mov
negb
enter
loope
and
pop
in
dec
aas
cmpsb
jbe
popf
and
ret
mov
mov
or
inc
into
adc
sub
fmull
icebp
fmuls
lcall
out
adc
adc
pop
mov
outsb
loopne
ret
xchg
jge
or
stos
mov
in
mov
mov
jbe
rorb
dec
adc
inc
xchg
push
pop
sub
xchg
aas
aam
jp
sbbb
repnz
and
jnp
fwait
push
jnp
inc
aam
or
out
pop
and
aas
insb
cmp
xchg
or
lahf
xchg
dec
push
inc
test
loop
mov
mov
xor
gs
mov
jle
js
stc
aas
stos
mov
daa
stos
loopne
adc
jae
jno
push
pop
sbb
clc
icebp
pop
mov
das
subb
mov
lds
jnp
push
sub
popl
scas
xchg
mov
enter
add
js
stc
in
push
sbb
aaa
call
sarl
dec
inc
imul
push
repnz
and
hlt
leave
pop
dec
xorb
sbb
imul
loope
fprem1
ret
adc
pop
repnz
out
cmp
hlt
adc
cs
dec
testl
adc
repz
jg
adc
or
stos
cmp
out
out
cli
popa
test
fs
xchg
xor
cmpl
loope
rorb
out
mov
in
adc
inc
inc
enter
adc
shrl
enter
sub
lds
out
sub
adc
push
in
cmp
pop
pushf
dec
bound
icebp
imul
mov
jecxz
in
pop
adc
mov
adc
xchg
pop
push
insb
pusha
arpl
xor
cmp
and
add
sbb
bound
das
movsb
loop
into
xchg
pop
outsl
lcall
push
scas
mov
lods
xchg
pop
fcoml
xor
pop
dec
enter
rorb
insb
xchg
in
fcomps
fimuls
es
mov
jo
clc
cmp
inc
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
ljmp
lea
inc
add
jmp
movsl
into
jge
fisubs
mov
mov
jecxz
pop
mov
daa
je
je
cmpsb
mov
mov
push
and
cmp
dec
jle
loope
or
lock
add
sbb
pop
cltd
push
aad
in
xchg
inc
arpl
cmpsl
xchg
aam
pop
cmp
leave
nop
testl
out
rorb
shl
dec
mov
and
daa
mov
mov
out
div
out
and
jo
pop
push
cltd
ret
jno
adc
add
ss
enter
dec
push
mov
xor
jle
sar
fstpt
push
sbb
cmpsb
divb
mov
push
out
mov
int
lock
xchg
pop
imull
enter
mov
ljmp
imul
cmp
sti
sbb
mov
imul
test
jno
sbb
inc
cmc
and
loopne
sbb
mov
call
or
jne
out
add
in
inc
xchg
daa
mov
test
int3
cwtl
and
or
leave
sbb
pop
inc
mov
repz
push
sahf
xchg
pushf
repz
popf
movsb
jl
sub
mov
jg
mov
xor
push
fwait
imul
xchg
imul
int
sti
adc
push
mov
mov
or
pop
add
xor
js
sbb
xchg
cltd
xor
shlb
arpl
mov
mov
icebp
jnp
push
cmp
es
xor
xchg
leave
movsl
mov
out
pushf
cmc
mov
std
test
sbb
mov
lds
xorl
and
jae
jno
lods
jmp
fwait
jae
fwait
mov
sub
ss
cmpsb
test
jl
jle
inc
lcall
pusha
mov
out
adc
ret
push
ss
dec
ret
pop
outsb
loop
gs
mov
std
jecxz
pop
sbb
pop
add
mov
adc
mov
dec
in
orb
inc
in
scas
cmp
lock
sti
cmc
outsl
jae
fnsave
sub
addr16
bound
jmp
mov
jbe
pop
cmp
dec
rcll
repnz
and
jg
push
stos
jecxz
cmp
dec
xchg
mov
xchg
and
mov
add
sub
lods
pop
sbb
cmp
mov
xchg
sti
pop
add
stos
scas
into
sub
or
sbb
divb
in
arpl
gs
fs
stc
std
subb
loope
mov
shrl
jp
ss
lods
stos
call
xchg
xor
sub
inc
mov
sub
movsl
jno
dec
mov
imul
lahf
ficoms
fwait
or
cmp
das
rclb
cmpb
out
mov
fdivrl
sub
cwtl
mov
clc
xor
test
push
mov
mov
mov
imul
or
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
sbb
lods
add
adc
adc
adc
push
cmp
xor
mov
sub
ret
adc
or
in
inc
fdiv
fbld
xchg
mov
fisubrs
out
push
inc
pop
int3
arpl
shl
mov
int3
pop
mov
dec
cmp
scas
lcall
jbe
push
dec
and
fcom
adc
js
fldl
cmp
stc
imul
lds
xor
mov
xor
insl
or
mov
clc
int
ret
in
adc
and
fidivrs
dec
into
mov
fwait
out
xchg
das
xchg
into
and
inc
sbb
sti
mov
adc
mov
push
mov
jnp
sub
mov
cmc
xor
and
inc
xor
or
shr
push
jl
cmovb
dec
and
cs
loope
adc
mov
and
dec
or
pop
sub
add
adc
pop
rcrl
or
insl
out
mov
popa
out
stc
mov
outsl
fmuls
jl
ret
mov
cltd
inc
outsl
in
frstor
cltd
sbb
stos
sbb
mov
faddp
and
xchg
jle
ljmp
jne
mov
or
int
into
push
test
nop
push
dec
pop
movsb
fstps
iret
rcrb
movlpd
les
jo
add
cwtl
cld
dec
pop
pop
mov
fadds
xchg
xor
adc
mov
call
inc
subb
out
pop
jae
in
mov
shll
fisttpl
and
adc
into
inc
es
push
stos
call
or
inc
pop
adc
or
popa
nop
das
out
xor
mov
into
stc
aas
xchg
out
add
stos
mov
popf
xlat
inc
loop
xor
sbbl
push
jno
sub
push
mov
faddl
push
mov
stos
mov
jbe
nop
fldt
add
xor
orb
in
clc
dec
inc
int
and
aam
adc
iret
sub
lods
push
adc
rcll
adc
sub
inc
sarl
dec
daa
lock
cmpsl
push
ss
mov
sbb
push
movsb
mov
jnp
mov
and
pop
icebp
pop
incb
add
pop
inc
lods
enter
nop
sbb
das
jmp
in
dec
scas
dec
mov
pushf
xlat
fs
loopne
sbb
dec
add
inc
lret
icebp
loopne
mov
add
movsb
jb
jmp
mov
xchg
jl
aas
mov
popf
adc
scas
mov
push
xlat
and
mov
aad
in
es
jbe
adc
out
pop
cmpsb
xchg
xlat
pusha
arpl
pop
push
and
imul
xchg
push
imul
jmp
sub
iret
jg
push
je
adc
mov
cld
push
sarl
dec
add
or
xchg
xor
aaa
cltd
push
call
add
dec
outsl
call
idivl
popf
aad
lret
push
enter
sbb
adc
fcomip
cwtl
pop
cmpsb
xor
sub
aam
adcb
cmp
pop
rolb
cmp
sarb
cmp
cvtps2pi
add
adc
add
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
mov
std
adc
adc
adc
das
adcb
out
cmp
lahf
pushf
sub
xchg
loop
es
out
movups
sub
imul
sti
negl
jne
or
loopne
sbb
rcrb
pop
mov
cmp
pop
fwait
pop
add
jg
mov
sbb
mov
dec
mov
push
clc
in
xchg
mov
mov
negl
pop
mov
ds
or
mov
test
in
adc
dec
sbb
xor
imul
or
add
pop
pop
mov
jne
mov
inc
push
adc
push
mov
mov
xchg
mov
mov
rolb
mov
repz
pop
cmpb
adc
cmp
sub
imulb
insb
add
or
dec
dec
mov
into
sbb
adc
insb
les
mov
and
sbb
aam
inc
xor
cmc
fmul
push
out
pushf
sub
daa
icebp
inc
mov
push
lret
insl
mov
dec
pop
xor
cld
cwtl
loopne
fcoml
xor
cmp
xor
pop
ss
shl
pop
xchg
cmp
cwtl
call
jbe
push
aaa
xor
int3
push
adc
jb
and
mov
or
notl
dec
iret
mov
fs
scas
inc
subb
push
push
cmp
fs
sbb
sahf
mov
arpl
mov
stos
xchg
outsb
cmp
jo
les
test
fwait
xchg
inc
iret
fucomi
mov
inc
xchg
repnz
sbb
es
movsb
aaa
int3
fstl
mov
jns
pop
add
xchg
cmp
adc
js
sbb
or
adc
loopne
cwtl
insb
loopne
pop
and
jb
iret
test
adc
dec
push
jbe
cwtl
inc
push
add
mov
push
adc
mov
xchg
repnz
mov
push
and
ds
movsl
xor
add
cmp
dec
outsb
enter
xchg
sarl
sbb
lods
movsb
pop
adc
and
repz
out
loope
jp
in
lods
pushf
mov
ja
and
inc
jmp
mov
mov
stc
cmp
pop
stc
adc
sbb
subb
fs
gs
push
ljmp
mov
out
push
hlt
outsl
lods
mov
aad
cld
fisubrl
and
sbb
aam
test
xchg
ja
into
lea
sub
jge
into
orl
pop
pop
lods
bound
jge
inc
jecxz
jae
cmp
stc
jno
fldenv
xor
xchg
ds
mov
ja
fistps
sti
sbb
mov
int3
ret
rcl
ficoms
pushf
cmp
push
xor
sub
gs
test
cmpsl
test
mov
xorb
lods
jl
sbb
aad
shll
jno
lcall
inc
mov
push
lahf
lcall
nop
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
ret
popf
repz
adc
adc
mov
lods
jle
decb
cmp
sbb
mov
lret
add
shll
xor
jmp
movsl
xchg
inc
cmp
jl
mov
sub
shll
pop
inc
xor
pop
clc
pop
fmuls
mov
mov
adc
sbb
jae
mov
mov
imul
inc
mov
mov
outsl
data16
outsb
xlat
inc
into
outsb
sub
mov
test
push
test
push
std
inc
out
out
ret
fisubrs
cmp
in
adc
dec
stos
mov
cmpsl
lahf
mov
in
dec
int3
es
dec
xor
and
fxtract
mov
jns
mov
sahf
xchg
inc
lea
mov
add
lahf
xchg
mov
push
hlt
fisubs
jle
dec
mov
mov
pop
bound
test
push
stc
xchg
testb
ret
gs
ss
orl
movb
jo
mov
daa
loope
inc
testb
and
inc
cli
clc
jne
cmp
or
into
aam
or
movsb
dec
or
pop
je
mov
xor
scas
rcll
mov
jmp
lcall
cwtl
mov
dec
mov
inc
gs
lcall
cmp
out
gs
lahf
sahf
test
test
addl
mov
in
orb
mov
mov
adc
stos
pushl
mov
dec
loope
nop
ficoms
mov
sub
fcmovne
adc
sub
push
fs
xor
xchg
lods
sahf
mov
xor
inc
aaa
sbb
push
cwtl
outsw
fwait
sti
in
xor
out
jp
mov
sub
je
or
dec
mov
stos
jb
jl
jae
inc
or
adc
push
cmp
iret
push
jbe
fs
inc
mov
insl
or
inc
inc
xor
dec
jo
jecxz
mull
sahf
cmp
cld
mov
movsb
push
jno
fsubrl
sub
pop
mov
dec
fdivs
outsl
test
je
or
outsl
clc
sahf
dec
and
dec
jge
jbe
out
cmc
or
loop
xchg
sbb
xchg
inc
inc
lds
loop
test
out
ret
cmpsl
cmc
insl
dec
in
jbe
pop
out
out
test
mov
lcall
mov
pop
daa
outsl
lret
xor
cld
push
sbb
sahf
and
xchg
es
fdivrp
xchg
mov
push
sub
push
sub
loop
xchg
enter
rcl
out
sbb
xchg
in
dec
js
xor
or
iret
js
daa
or
je
mov
xlat
cld
pop
adc
fwait
add
in
mov
inc
popf
rcll
lock
jp
stos
lock
sahf
outsb
dec
push
and
mov
push
lods
es
leave
cmp
stc
pop
cmpsl
aam
pop
jmp
int3
in
or
shlb
setns
mov
jmp
xchg
cltd
bound
and
push
jo
push
lock
js
jmp
adc
adc
dec
insl
repz
sub
ret
jb
jae
out
movsl
loopne
mov
mov
add
roll
xchg
pop
addl
pop
mov
lock
scas
mov
xchg
xor
repz
push
into
jl
xchg
inc
sbb
loop
nop
in
divb
in
in
adc
scas
test
outsb
enter
cmp
fadd
repnz
jp
repnz
bound
cltd
loopne
dec
stc
aas
sbb
das
lahf
adcb
or
xor
sub
ds
jae
stos
andl
pop
pop
sarl
cwtl
mov
push
out
and
pop
add
and
scas
xchg
repz
xchg
mov
nop
lods
lods
xchg
jge
movsl
mov
sub
mov
ljmp
aas
pusha
push
pushf
sub
cmp
cmpsb
mov
ret
mov
popa
movsb
test
push
push
mov
jecxz
xor
sbb
fcomip
mov
dec
jb
pop
fadd
dec
adc
pop
adc
rcl
jbe
push
cwtl
into
push
and
push
lret
push
cmp
jg
add
lods
xchg
stos
adc
lock
and
mov
or
jno
add
cmpsl
fidivrl
inc
push
mov
inc
imul
lods
push
mov
rolb
aaa
sub
aad
addl
pop
sub
ds
and
add
rcr
dec
outsb
test
imul
or
loop
or
push
cmp
enter
lahf
insb
jae
cld
test
mov
idiv
push
lea
adc
push
fcomi
inc
mov
loopne
or
leave
adc
in
arpl
lret
mov
pop
in
aas
std
movsb
and
inc
bound
imul
mov
push
out
mov
push
enter
stos
sbb
mov
mov
test
and
mov
dec
pop
call
inc
mov
sub
arpl
cmpsb
inc
lret
xchg
mov
pusha
stos
imulb
cmc
xor
adc
xchg
loopne
pop
dec
xchg
aas
mov
xchg
ds
cmp
ds
mov
jb
repz
fadds
xchg
lea
pop
movsl
nop
or
inc
inc
test
jae
testb
scas
mul
aad
sbb
push
mov
fs
loop
repnz
xchg
adc
cmp
push
rorb
or
in
adc
sub
bound
push
dec
hlt
mov
sbb
outsb
in
push
jo
stos
jne
pusha
sub
ss
jl
shrb
insb
cmp
lods
in
cltd
pop
orb
sub
push
adc
and
xchg
xor
mov
xor
inc
das
inc
adc
xor
insl
xor
sub
jbe
ja
push
test
sbb
jne
xchg
test
mov
mov
mov
test
mov
adc
imul
add
xor
bound
shrd
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
sbb
adc
adc
adc
inc
dec
cld
pop
lock
pop
mov
dec
mov
mov
or
xchg
and
cmc
enter
inc
sbbl
imul
or
loopne
push
push
push
cmpl
cmp
sbb
fisubl
int3
rcll
sbb
je
dec
ss
sub
icebp
aaa
in
test
les
pop
stos
sar
cmpsb
pushf
lods
or
ss
in
push
or
adc
cmp
pop
inc
pop
adc
out
sahf
sub
xchg
mov
mov
push
mov
and
in
test
loopne
shll
hlt
adc
add
repnz
ja
movsl
das
cli
imul
int3
push
pop
push
add
adc
inc
call
retw
pop
push
pop
inc
sbb
shl
fucomip
int3
aaa
scas
push
orb
jns
es
jns
gs
int
jp
in
inc
cmp
in
hlt
fcom
into
adc
cs
in
pop
pop
scas
jp
cmp
xchg
lret
das
mov
ljmp
sbb
dec
jp
imul
pop
hlt
loope
adc
enter
mov
mov
leave
and
test
add
jp
ret
ss
movsb
push
adc
mov
or
or
jne
cs
jle
pop
shrb
jle
jge
aaa
lods
shrl
adc
dec
jbe
adcb
les
in
jne
or
cmp
in
std
push
stos
int3
mov
cmpsb
and
xchg
sbb
or
nop
popf
out
add
cmpsb
cwtl
add
pusha
cmp
or
or
test
push
mov
xchg
and
into
jp
jo
das
ljmp
xor
mov
incb
xchg
adc
inc
adc
data16
adc
mov
test
jge
aad
pop
call
mov
call
jo
shl
mov
test
inc
jo
or
mov
stc
mov
or
cli
iret
push
xchg
sub
ret
mov
mov
clc
and
lods
sub
sub
pop
int
jecxz
jmp
ja
jmp
lret
pop
rcll
xchg
cli
gs
xorb
xor
adcl
xchg
shlb
dec
mov
xchg
mov
pushf
jmp
mov
xchg
dec
sub
movb
or
pop
adc
cwtl
fimuls
cmp
dec
sbb
dec
aad
dec
push
fidivrs
adc
outsl
cmp
das
stos
jno
dec
push
sbb
cmp
and
ss
cmpsl
test
adc
cmp
dec
dec
aas
pop
xor
sub
cmp
dec
movhps
notl
lock
outsl
out
cmpsb
adc
add
mov
add
xor
bound
movsb
repnz
mov
cli
jg
ds
loope
and
xor
imul
gs
testl
xchg
xchg
icebp
mov
shll
leave
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
cltd
fdivrl
adc
adc
rclb
test
or
and
add
mov
lods
and
inc
xchg
sbb
sbb
movsb
addr16
sbb
adc
jo
pop
outsl
pminub
gs
stc
or
add
jns
js
shlb
push
jp
dec
movsb
sbb
xchg
lock
lahf
int
in
and
pop
les
les
aam
dec
mov
mov
mov
mov
popa
daa
adc
mov
ret
test
sub
lahf
xlat
adc
adc
dec
out
sbb
jecxz
jno
jecxz
fs
add
push
or
movsl
push
push
fwait
loopne
sub
add
lcall
push
cmpsl
pop
icebp
xor
aam
inc
loope
int3
jge
or
mov
sbb
cmpsl
xor
or
mov
cld
add
push
out
sarl
jl
lods
mov
filds
cmp
jae
enter
jo
outsl
repz
inc
or
mov
arpl
dec
xlat
mov
ljmp
lea
push
xchg
cmp
cmpsl
mov
ja
lret
lock
mov
test
push
lcall
das
sub
faddp
loopne
mov
les
test
mov
leave
mov
mov
push
mov
insb
sbb
movb
test
adc
xor
stc
out
cwtl
pop
in
jge
je
out
lea
xorl
rorb
xchg
xchg
aaa
pop
fcmovb
mov
dec
or
cmpsl
cld
loope
cmp
jb
jl
insb
jo
stos
int
sub
cmc
loope
aaa
add
xor
push
leave
negb
mov
ret
out
xchg
cmpsl
insb
das
mov
cmp
lret
jge
push
xor
out
adc
mov
jno
xchg
lock
inc
xchg
inc
or
in
das
inc
mov
xor
scas
mov
push
test
imul
les
or
add
fldl
pop
mov
mov
icebp
pop
in
les
fwait
cli
sbb
lods
leavew
scas
mov
push
push
out
push
inc
push
push
cmpsl
cmc
lds
orb
mov
mov
or
mov
aas
inc
mull
jae
lods
cmp
dec
in
add
and
dec
or
loopne
pop
sbb
or
mov
rcll
test
mov
scas
adc
adc
jl
add
push
lret
ret
fisttps
fsubl
push
jns
scas
sbb
push
test
push
xlat
dec
xchg
jge
sbb
cmp
push
ja
inc
push
nop
stos
mulb
pushf
inc
lret
inc
xor
psllw
add
xor
pop
push
adc
cltd
inc
movsl
cs
stos
pop
and
jge
mov
xchg
sti
mov
clc
lods
test
movsb
fldl
bswap
jb
cli
sub
jae
scas
lea
dec
xlat
xchg
popl
cmpb
lcall
push
pop
dec
fldl
sbb
cltd
repz
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
js
out
stos
fcoms
adc
adc
xchg
xchg
sbb
enter
movb
jge
pop
bound
movsl
fildll
dec
jae
cmp
arpl
movsb
dec
ret
adc
sbb
mov
xchg
js
pop
xchg
jb
mov
testb
enter
inc
pop
mov
inc
push
cmp
popf
or
sub
std
in
sbb
flds
imul
in
dec
imul
arpl
mov
xor
push
clc
fiadds
fldt
aaa
addl
mov
test
and
mov
lods
sub
sbbb
stos
mov
js
out
xlat
int
mov
mov
scas
outsl
dec
push
gs
scas
out
xchg
movsb
out
push
jp
dec
loop
pop
adc
test
xchg
bound
in
les
dec
in
pusha
fimuls
and
insb
jmp
addr16
scas
mov
outsl
lret
test
je
sti
aas
out
je
out
les
push
sub
loope
and
insb
jo
aam
stc
and
repz
fnstenv
in
and
fldl
inc
xor
addb
mov
jae
mov
lret
sti
and
mov
testl
mov
jge
lcall
ja
jg
and
std
icebp
imul
into
movsl
mov
mov
add
push
clc
cmpsl
sub
mov
jge
sahf
mov
stc
or
insb
nop
add
mov
pop
test
mov
ja
sbb
push
movsb
hlt
push
daa
add
adc
cli
inc
inc
sbb
jge
ss
les
out
sub
fs
stos
add
or
dec
or
or
and
cmpsb
pop
sbb
sub
or
jno
add
out
xor
sub
dec
mov
xlat
out
mov
mov
push
mov
insb
cmp
or
jecxz
jmp
push
ja
pushf
popf
ficoms
fwait
lods
insl
daa
push
divl
lea
mov
dec
xchg
sub
sub
or
daa
xchg
cmp
dec
adc
sti
pop
inc
mov
arpl
adcl
ret
sbb
pop
std
add
leave
lods
pop
test
pusha
fcmovbe
jmp
call
pop
sbb
insb
aad
out
xor
rolb
inc
pop
dec
push
mov
or
add
add
rcrl
shrl
dec
bnd
mov
cmpsl
ljmp
loope
sub
adc
push
dec
mov
fisttpl
xchg
or
or
mov
movsl
lods
test
mov
jno
frstor
mov
cmpb
push
inc
jno
lcall
pop
popf
shl
js
push
mov
int3
out
setae
jge
or
dec
outsl
pop
in
mov
sahf
and
stos
fdivrs
icebp
pop
ss
or
push
xor
push
lret
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
nop
data16
adc
adc
adc
repnz
jo
xchg
je
stc
mov
dec
out
int3
pop
push
dec
adc
inc
mov
iret
mov
cmc
sti
xchg
jge
sbb
sub
dec
daa
inc
and
xorb
dec
das
ret
push
ret
aaa
loope
pop
cmp
mov
les
and
pop
jecxz
aaa
dec
lods
adc
xor
jne
icebp
cwtl
cmp
push
mov
lret
enter
cltd
out
cmc
jns
sbb
int3
out
fdivrs
shrb
or
xor
pcmpgtb
mov
mov
sti
push
shrl
into
cmpsl
xor
dec
add
push
or
cltd
jecxz
dec
dec
jb
test
shlb
mov
iret
aas
xor
mov
fbstp
fdiv
cmp
sbb
loopne
cmpsb
iret
sbb
lcall
adc
fisttpll
ss
push
cmp
xchg
push
lea
lret
push
clc
insb
lcall
mov
daa
pop
ds
pop
orb
mov
adc
test
mov
testl
pop
mov
mov
leave
stos
rep
dec
xor
icebp
loope
shrd
pop
dec
or
test
fwait
jno
ret
jae
sub
filds
inc
inc
scas
sub
sbb
testb
loope
mov
test
push
pop
cltd
into
das
sbb
and
jae
mov
mov
ffree
push
push
cld
mov
add
icebp
adc
xor
xlat
xlat
testb
dec
inc
filds
and
lods
sbb
pop
push
xchg
dec
imul
jno
xchg
pusha
xchg
shrb
frstor
push
frstor
loopne
pop
stos
adc
nop
sbb
loopne
jns
mov
test
push
mov
out
insl
sbb
scas
pop
fisttpl
lret
nop
inc
mov
and
xchg
rcl
jle
movsb
call
pop
sub
or
cmp
xor
adc
repz
test
dec
lods
mov
xor
mov
outsb
xor
aaa
enter
popa
movsl
xchg
adc
jae
adc
dec
xor
int3
xchg
mov
aam
adc
sub
adc
int
pop
adcb
and
add
lahf
dec
sbb
or
cmp
push
add
lods
xlat
push
dec
and
out
data16
xchg
xchg
bound
cmp
fnstcw
cs
cmc
sbb
inc
inc
fdivl
sbb
daa
daa
lahf
es
out
or
jge
and
cwtl
push
and
mov
lods
xchg
mov
jg
stc
stc
aaa
imul
or
imulb
push
ret
sub
cmp
sbb
hlt
fcomip
jo
repnz
je
fistpll
push
and
adc
pop
mov
scas
mov
rcrl
sbb
pop
in
sahf
arpl
add
inc
pop
xchg
xchg
sbb
int
push
mov
fwait
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
cmp
jle
int3
adc
adc
adc
adc
jnp
insb
mov
fwait
mov
xchg
cmp
iret
inc
sbb
in
cwtl
leave
sti
cmp
push
subl
mov
push
frstor
adc
mov
xchg
add
mov
stos
gs
or
outsb
cmp
push
sub
lods
hlt
sbb
pop
les
insl
lea
mov
dec
pop
dec
in
in
pop
in
cmp
and
or
xchg
shll
test
and
or
psubusw
add
jmp
in
inc
inc
out
dec
cmp
mov
xor
in
sbb
data16
dec
jle
mov
ljmp
adc
mov
sbb
mov
mov
lock
mov
pop
cmpsl
xlat
adc
xchg
cs
push
pop
cmp
fmuls
pushf
into
push
sub
dec
mov
inc
outsb
xor
or
lods
mov
sub
pop
int3
sub
sti
add
sub
pushw
pop
jmp
xchg
jle
or
stos
repz
push
popf
cwtl
mov
mov
push
fidivl
je
mov
aas
xor
fcomi
xlat
adc
out
mov
in
outsl
fwait
xor
jbe
js
js
outsl
in
xor
xor
or
xor
out
jecxz
xchg
or
xlat
or
ret
xchg
jmp
sbb
xchg
add
mov
shll
lods
stc
xlat
jmp
movsl
pusha
add
in
adc
lea
push
cmpl
adc
xor
addr16
mov
sahf
xchg
pop
xchg
push
inc
sti
jp
push
je
mov
lcall
adc
pop
xor
mov
int3
aas
mov
mov
lods
inc
icebp
mov
xchg
aaa
jno
sub
pusha
popf
jge
les
push
push
decl
sub
cmc
pop
lcall
mov
pop
inc
and
out
adc
sahf
and
cltd
fcmovbe
mov
xor
fwait
sarb
jl
push
mov
lock
or
rcrb
push
xor
and
aad
scas
adc
xor
xchg
adc
test
es
leave
test
bound
xchg
pop
add
inc
jnp
xchg
repz
pop
jge
xchg
scas
jle
mov
and
repz
movsb
mov
nop
std
mov
mov
pushf
mov
pop
jle
push
cltd
call
cmp
lret
cld
mov
sbbl
push
aam
in
mov
hlt
inc
call
lea
dec
pop
sbb
adcb
insl
stos
adc
add
in
pushf
inc
dec
jmp
cs
ret
imull
cmpsl
jne
or
decb
dec
das
in
daa
imul
pop
lods
fsts
dec
jbe
in
jp
rcrb
sbb
mov
ror
inc
pop
fisttpll
es
and
and
and
stos
das
or
fcmove
jle
flds
pop
push
cld
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
imul
adc
adc
adc
and
push
lock
xor
and
mov
inc
pop
xchg
cmp
scas
lods
jbe
out
push
xchg
sub
daa
je
sub
test
es
mov
ja
andps
adc
push
iret
mov
mov
xchg
cltd
jnp
jle
xchg
fwait
xor
pop
fwait
add
jo
imul
xchg
adc
das
xchg
mov
inc
fnstenv
mov
andl
test
xchg
pushf
pop
dec
lock
int
rcll
pop
cli
jns
bound
adc
cli
cwtl
scas
adc
cld
jecxz
lods
mov
xor
fisubrs
rclb
popf
adc
repnz
and
aas
push
arpl
test
fisttps
loope
cltd
into
jle
in
pop
imul
call
mov
dec
mov
xchg
mov
xor
pop
mov
scas
inc
mov
mov
stos
lea
cmp
sub
jo
std
imull
leave
gs
arpl
jle
xchg
pusha
xchg
mov
xor
sahf
dec
stos
push
and
mov
jae
aas
xchg
jb
push
aad
push
outsb
inc
push
arpl
data16
xor
pop
and
into
dec
or
shll
adc
cmp
fisttpll
subl
mov
fcmovnu
sti
add
adc
cmc
push
fsubrl
mov
add
push
sub
pop
mov
addl
mov
xchg
icebp
xchg
mov
mov
repnz
pop
add
push
inc
std
cmp
fisubrl
pop
mov
xchg
pusha
subl
in
push
mov
and
pop
xchg
testl
fwait
push
xor
adc
stc
pop
in
push
xchg
das
scas
ret
inc
pop
int
nop
or
out
dec
dec
loop
push
xchg
rcr
mov
cmp
cmpsb
in
lods
inc
loopne
dec
movsb
add
mov
in
adc
xchg
push
fsubrs
xchg
push
ret
pop
movsl
stc
jl
pop
inc
fwait
or
push
push
jmp
hlt
je,pn
imul
pop
imul
mov
js
ds
jb
rorb
outsl
into
pop
and
mov
xchg
push
fldl
ja
adcl
loopne
inc
ds
cwtl
cmpl
jle
idivb
fdivr
push
adc
mov
in
inc
cmpsb
test
cli
incb
das
jg
push
pop
insb
outsl
and
jecxz
mov
adc
sbb
and
mov
in
cmp
std
dec
sub
bnd
xchg
mov
and
or
fisttpll
stc
das
mov
out
decl
cmpsl
jmp
lret
std
imul
and
pop
mov
out
add
mov
nop
pop
sbbl
xlat
pop
sbb
aad
nop
xchg
pop
outsb
pushf
add
mov
loopne
adc
push
in
dec
insl
popf
xchg
test
and
xchg
and
sub
cld
aam
or
sbb
outsl
xor
pop
gs
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
shl
xlat
jns
insl
nop
mov
dec
mov
inc
add
in
aam
mov
add
lahf
fnsave
xchg
mov
in
test
sbb
hlt
imul
int
jnp
mov
and
fdivp
subb
enterw
jbe
inc
adc
sbb
das
hlt
push
icebp
and
mov
sub
lret
adc
pop
inc
xchg
add
je
mov
sub
dec
jle
sub
out
lret
roll
push
movsl
das
inc
jecxz
pop
push
mov
sbb
divb
dec
in
xor
ljmp
cmp
stos
pusha
jbe
andl
fildl
insl
aam
repz
out
aam
dec
fwait
adc
mov
push
fisttps
mov
dec
dec
aam
inc
cmp
mov
cmp
aam
jno
das
mov
pop
cld
and
mov
scas
fstpl
mov
or
in
add
lea
les
jmp
sub
jns
les
mov
ja
dec
mov
out
lds
push
push
negb
dec
inc
dec
or
mov
push
in
movsl
inc
mov
scas
imul
fiadds
pop
fs
movsl
aam
movsb
test
nop
rorb
mov
pushf
pop
jbe
rcl
idivb
sbb
hlt
xchg
fxch
dec
mov
fcmove
fcoms
mov
pop
inc
push
call
sbb
sarl
mov
shrl
faddl
adc
mov
cmp
out
js
mov
mov
leave
jge
pop
lds
ss
icebp
fldcw
rcrb
adc
mov
sti
jmp
sarb
cmc
push
jne
add
cmp
call
leave
es
mov
cmpsl
jge
dec
jp
or
ret
addr16
ds
ss
arpl
outsl
push
jb
mov
fs
sbb
inc
ja
cmc
cmp
in
call
jle
cmp
mov
jb
mov
arpl
pop
imul
mov
out
gs
add
or
and
xchg
sti
push
lahf
fidivs
faddp
test
lds
push
call
cmp
and
testb
xchg
pop
js
jnp
pop
outsb
cli
inc
pop
xor
repnz
jecxz
add
cmp
icebp
dec
mov
rolb
loopne
cmpsb
mov
ret
aad
xlat
movsb
xchg
andl
inc
push
test
jae
mov
add
flds
and
and
push
shr
push
jmp
sbb
roll
shlb
xor
aaa
push
cld
mov
test
mov
ss
mov
fninit
add
xor
xchg
int
into
mov
sbb
jge
jns
imul
addb
adc
and
ret
mov
lret
pop
cld
mov
add
adc
dec
pop
push
gs
and
aas
and
sbb
shrl
leave
lods
shrl
xor
outsb
push
cmp
mov
dec
sub
push
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
lods
push
mov
adc
xchg
xor
mov
xchg
xor
cmp
jno
imul
ret
inc
xlat
jo
out
or
cmc
rcll
add
dec
sub
or
fsubrl
adc
mov
cmc
pop
add
call
dec
xchg
insb
aad
test
xorl
dec
cmp
clc
mov
loopne
mov
rcr
jne
hlt
ror
shll
testl
loope
jl
xlat
lahf
ljmp
jae
pop
pop
inc
mov
inc
mov
hlt
outsl
pusha
push
daa
lret
jle
xchg
test
ds
ret
mov
je
outsb
ljmp
or
in
jns
xor
adc
mov
mov
sbb
in
int
mov
or
ret
daa
repz
es
int
pop
add
daa
es
lds
outsb
pop
add
rcrl
out
ret
push
popa
in
enter
nop
outsl
scas
inc
jmp
lods
pop
ss
test
xchg
sub
testb
add
stc
or
cmp
in
or
lea
mov
xor
xchg
mov
xchg
and
hlt
popf
jle
pop
out
cmpsb
jle
popa
cmp
jne
inc
adc
sbb
push
enter
call
jg
or
pop
xor
cld
cli
mov
out
adc
lock
sti
test
xchg
jmp
dec
adc
nop
addr16
mov
pop
adcl
cmp
sbbl
repnz
pushf
leave
js
shll
xchg
mov
in
lret
add
or
dec
xchg
xor
in
push
cld
mov
adc
push
cld
ficoml
js
add
shrb
or
cmpsl
jnp
adc
dec
aas
movsb
test
ja
test
iret
lret
loope
aaa
test
xchg
sbb
inc
ret
mov
or
lcall
jnp
xchg
push
mov
lahf
add
test
leave
fiadds
je
shlb
pop
in
fdivl
das
cwtl
das
pop
insb
or
cmp
jecxz
data16
pop
sub
int3
mov
jae
add
clc
adc
sarl
call
lods
stos
mov
es
xchg
popa
ss
sahf
mov
movsb
lea
mov
dec
push
clc
out
mov
push
aad
jp
imul
aad
jno
stc
ljmp
or
pop
mov
ds
cmp
xorl
gs
loope
and
out
or
push
jmp
pop
xor
add
loop
dec
and
push
imul
jecxz
scas
addr16
mov
cmpsb
add
or
mov
xor
add
inc
xchg
movsl
inc
lret
pop
pusha
cltd
adc
iret
cmc
in
fwait
or
shll
inc
jo
test
iret
jno
notb
fs
and
popf
push
inc
xlat
inc
sbb
add
inc
or
aas
fiaddl
imul
sti
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
insb
mov
adc
adc
adc
dec
ljmp
mov
ret
xchg
sub
ljmp
mov
pop
enter
mov
mov
add
out
cmp
mov
fistpll
mov
jge
imulb
pop
lcall
jl
and
jne
scas
or
lret
sub
jle
mov
cmovne
lea
cmp
cld
sub
je
or
cwtl
sti
cltd
jnp
js
rcrl
cmp
cmp
mov
mov
sub
cmp
aas
inc
sbb
and
jge
mov
and
xlat
jns
xorb
les
out
push
flds
sub
lcall
add
dec
test
lcall
xor
jne
jp
lods
mov
mov
in
hlt
jno
in
rcrb
inc
adc
fnstenv
jge
xchg
pop
pop
jle
pop
test
adc
imul
push
in
cmpsb
stos
inc
inc
icebp
imull
rcll
and
xchg
int
test
arpl
dec
out
divl
lock
fbstp
pop
inc
or
mov
jne
data16
push
dec
dec
or
mov
test
xor
mov
testl
popf
sub
ret
dec
pop
hlt
mov
jns
sub
push
mov
mov
stc
cmpsb
mov
ja
mov
adc
or
ds
pop
xor
mov
fsub
ret
outsl
jecxz
inc
sub
adc
lds
popa
frstor
data16
jno
add
sarb
inc
ret
or
mov
sbb
sbbb
xor
sbbl
daa
loopne
int
stos
arpl
imul
dec
es
fwait
sub
xor
xchg
je
in
xor
mov
insb
xchg
movsl
xor
mov
testb
inc
mov
or
mov
in
lods
clc
mov
mov
mov
sbb
outsb
pop
dec
cli
leave
inc
insl
ret
sbb
push
push
cltd
aad
mov
sub
xor
cwtl
shl
cltd
or
pop
jle
mov
pop
cmpsl
pushf
mov
je
jl
pop
add
pop
inc
outsb
lret
sub
inc
mov
and
adc
cmpsb
dec
and
push
lea
icebp
inc
inc
rclb
mov
sbb
push
jge
push
mov
fldz
push
adc
push
push
mov
mov
ja
jo
mov
imul
mov
out
loope
jecxz
cmp
jp
dec
push
cmc
mov
adc
dec
sub
mov
mov
es
sti
mov
frstor
xchg
or
std
mov
loop
mov
fcoms
out
mov
push
orl
std
cmpb
mov
faddp
stos
jbe
std
pop
push
mov
mov
fildll
xchg
loopne
jecxz
lcall
sbb
cld
lahf
mov
mov
jae
dec
imul
xchg
test
adcb
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
push
jb
insb
hlt
scas
adc
adc
adc
jno
xor
shr
or
test
mov
sub
xchg
and
adc
sub
iret
aam
aaa
dec
pop
sbb
add
mov
xor
stos
lahf
ljmp
adc
push
or
shlb
pop
cmpsl
cli
jbe
sub
lret
add
aas
mov
sub
cmp
push
xchg
mov
sub
aas
cmc
cmp
js
mov
test
insl
sub
mov
mov
sbb
mov
mov
dec
sub
xchg
les
cmp
xlat
js
or
push
adc
pusha
mov
mov
or
push
imul
das
sub
out
inc
adc
and
into
into
bound
mov
mov
mov
sub
pop
push
or
adc
sti
adc
sbb
mov
xor
in
adc
scas
mov
mov
subb
pop
add
roll
js
testb
adc
push
jg
mov
or
fwait
mov
aaa
cs
divl
fs
push
jo
or
or
xor
lock
push
divl
adc
fcoms
in
inc
cmp
repnz
xchg
jl
jns
sbb
lock
and
lcall
icebp
mov
lods
mov
add
scas
mov
repnz
sbb
addb
dec
scas
pop
out
sti
in
sub
and
xor
popa
cmp
xor
adc
daa
cs
cmpb
pop
dec
ret
sub
out
fs
out
sbb
test
mov
jno
cmp
jnp
xor
jge
inc
shrl
test
pushw
fistpll
andl
push
xchg
rclb
imul
or
pop
stos
out
dec
jns
enter
pop
push
pop
sti
inc
out
dec
jp
cmc
fs
lret
pop
pushf
lock
imul
lea
mov
cmpsl
pusha
sub
repnz
lahf
add
push
push
js
fld
fcom
xchg
xor
insl
and
dec
cmp
and
insb
lods
jns
adc
jns
xor
mov
rcrl
loope
inc
push
div
fldenv
int3
mov
or
dec
pop
xchg
cmc
pop
jmp
pushf
vphsubbw
imul
lods
inc
scas
test
pop
jo
test
xlat
pop
push
mov
xchg
mov
out
lcall
mov
adc
sti
push
divb
sub
push
test
sbb
fwait
aam
cmpsb
icebp
shl
pop
sub
sbb
mov
sub
cli
in
mov
or
inc
stc
fsubs
out
mov
mov
popa
shl
movsb
or
arpl
jmp
loope
push
fldt
dec
loop
insl
rol
stc
mov
in
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
cli
xor
inc
movsb
adc
adc
adc
shrl
cbtw
addb
cmp
sbb
mov
rcrb
jmp
test
pop
pop
cmp
in
ja
aaa
lahf
lds
dec
jmp
aam
stos
inc
shlb
jae
push
adc
mov
adc
cmpsb
add
repnz
dec
mov
inc
xor
add
mov
stos
mov
lods
xchg
or
hlt
out
out
pop
or
mov
mov
scas
and
movsb
test
pop
xchg
into
jns
dec
addl
push
insl
fs
movsl
jne
ror
sbb
pop
sahf
bound
pop
stc
sub
into
and
pushf
mov
push
mov
adc
ja
aaa
jnp
mov
repnz
pushf
dec
and
dec
lods
ds
lahf
in
and
cmpsl
or
sbb
xlat
movsb
xchg
addb
push
aas
or
ret
insb
orb
xor
inc
mov
xchg
xor
out
mov
jge
out
out
sub
jo
ret
addl
inc
inc
push
and
or
btr
hlt
sarl
les
dec
idiv
mov
mov
jns
xchg
xor
loope
cltd
cmp
test
es
push
adc
das
popf
dec
stos
daa
xlat
fstps
scas
mov
and
xchg
sti
nop
inc
loop
lock
inc
data16
jb
test
stos
pop
inc
in
roll
cltd
cmpsb
sub
incl
loop
pop
data16
push
sbb
dec
sub
sbb
xchg
aas
mov
fstpt
add
jmp
or
shrl
in
or
mov
lds
sahf
adcb
mov
out
xor
pop
cltd
enter
pop
mov
es
bnd
xchg
dec
fs
daa
fldcw
jg
lcall
das
hlt
je
xor
stos
and
stc
mov
test
imul
fidivl
jmp
push
sbb
jg
cmp
aam
cli
mov
and
xor
push
or
imul
or
add
aam
pop
pop
mov
adc
rorb
insb
les
arpl
inc
fwait
ret
xorb
mov
insw
push
push
das
mov
jno
mov
ljmp
jp
aam
outsl
popa
xchg
pop
adc
jmp
cs
cmpsb
movsb
shlb
fs
in
fsts
out
inc
cmpl
cmc
xchg
sub
or
iret
stos
fidivl
out
sbb
push
adc
mov
push
push
ret
out
in
repnz
xor
inc
cmp
cmp
mov
fwait
add
repz
scas
inc
jge
and
mov
pop
test
movsb
aad
and
sahf
aad
lret
cwtl
test
cld
pop
inc
fcmovb
add
sahf
arpl
into
xchg
mov
adc
filds
push
or
stc
testl
repz
insb
mov
jae
jno
orb
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
ljmp
adc
adc
xchg
cwtl
sub
xor
push
cmp
push
clc
aam
push
inc
push
mov
and
push
inc
dec
or
push
popf
push
lea
xchg
sbb
pop
mov
imul
push
mov
gs
dec
add
push
jo
cli
sub
stc
jne
mov
enter
and
inc
inc
lods
cli
daa
mov
cmp
shlb
out
shl
sub
jmp
sbb
shll
fcoms
sub
cli
mov
cmp
orl
mov
and
cmp
nop
shll
sub
nop
ret
pop
lds
adc
std
bound
mov
test
ret
bnd
and
or
cmp
hlt
xor
fistpl
add
dec
jae
xor
cmc
push
xor
mov
out
js
lock
mov
sbb
scas
lcall
call
add
inc
mov
jle
lds
rolb
jae,pt
push
pop
fimuls
push
inc
fimuls
sbb
mov
lods
ret
nop
movsl
push
push
dec
or
sti
lock
lods
dec
pop
and
pop
ds
arpl
cli
sbb
fadd
ds
sbb
inc
or
mov
dec
fidivl
jns
mov
iret
addr16
cmp
dec
pop
lar
jle
pushl
xchg
and
mov
adc
shll
cmp
mov
push
fistl
loopne
ja
cli
lods
loopne
lahf
push
fsubrl
ret
aad
pop
sti
enter
mov
mov
jl
aaa
imull
ret
cmc
jne
sub
imul
and
ss
push
jbe
fcmovbe
pop
popf
cmc
mov
out
sbb
adc
push
aad
dec
pop
mulb
addr16
and
fimuls
inc
jmp
adc
dec
cwtl
sbb
xchg
addr16
inc
aam
xchg
dec
ljmp
mov
ljmp
pop
mov
enter
cmovb
mov
loope
xor
mov
aas
vmwrite
fcompl
jb
mov
stos
iret
shll
lods
push
adc
inc
cmp
std
inc
fwait
divb
jmp
mov
fwait
pop
inc
nop
fists
leave
jecxz
scas
sti
fistpll
pop
mov
push
xlat
sub
bound
popf
sbb
cmpsb
fistpl
cli
popa
andl
jns
int3
andl
mov
push
push
and
movsb
pop
out
jle
pop
fsubrp
fldt
and
je
sub
xlat
mov
test
sbb
aad
enter
sahf
mov
jb
mov
sub
lret
je
das
popf
out
shrl
push
push
sbb
rorb
push
inc
and
sbbb
mov
adc
aaa
insb
shrb
and
mov
jnp
movsb
or
rorl
push
sahf
and
pop
mov
in
push
xchg
xchg
fidivrl
jne
mov
jae
cli
xor
pop
lods
in
cmpsl
movsb
mov
sub
xor
shl
xor
or
add
mov
jmp
xor
and
push
loopne
mov
adc
adc
sub
loop
push
xchg
jg
adc
and
lret
out
mov
push
jae
xchg
std
in
jb
pop
mov
sbb
sbb
cmpsl
adc
stos
pop
sub
pusha
out
xchg
jne
in
mov
pushf
fcomp
pop
iret
mov
dec
push
xor
lods
mov
inc
and
sbb
mov
xchg
incb
pop
sahf
mov
dec
mov
push
bound
mov
pop
push
enter
icebp
dec
shll
pop
jne
mov
gs
jge
xchg
mov
addr16
mov
inc
or
push
add
jl
mov
fs
or
push
jnp
xchg
in
add
leave
push
out
scas
repnz
mov
leave
aaa
pop
push
int3
rclb
fstps
sub
jmp
out
xchg
xor
ljmp
movsl
in
popa
mov
sbb
loope
cmpsl
out
jne
das
jl
mov
jmp
popf
push
lahf
adc
out
dec
add
js
mov
push
into
cmp
or
cs
test
adc
gs
aam
xor
dec
inc
jl
jo
mov
hlt
fsubs
pusha
mov
jns
loopne
jecxz
sbb
pop
in
daa
mov
mov
idivl
pop
mov
int3
test
pop
push
cmp
mov
faddp
lret
mov
push
jmp
mov
or
xor
lds
adc
gs
push
mov
cmp
cmp
jne
gs
adc
pop
dec
xchg
add
push
add
push
mov
scas
or
xor
adc
sbbl
loop
mov
into
adc
lea
xchg
or
inc
std
sub
pop
cmc
ror
es
jbe
mov
notl
enter
popf
std
push
fdivl
pop
rcrb
push
repz
or
orl
lds
cwtl
mov
pop
out
and
mov
out
arpl
and
xor
xchg
add
jecxz
pop
lds
les
imul
enter
mov
push
pop
inc
pop
cltd
roll
scas
out
dec
sub
push
xchg
test
popf
cmpsl
jbe
cli
add
cmp
cmp
xor
adc
mov
jmp
jbe
and
mov
dec
xlat
pop
sub
xchg
xchg
cmpsl
inc
inc
fldcw
aas
and
push
imul
xorl
mov
adc
rol
stc
jg
fmull
and
pop
add
rorb
fdivs
data16
int3
fdivl
dec
jbe
xor
das
aad
dec
jmp
mov
clc
in
ljmp
push
inc
push
outsb
outsl
sarb
inc
mov
mov
or
dec
mov
fisubs
stos
dec
add
xlat
mov
cmp
inc
jg
cmp
sub
mov
test
and
mov
test
insl
push
movsl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
call
nop
adc
adc
adc
pop
fidivrs
lcall
fistps
pop
xor
sub
pminsw
jb
cmpl
mov
lcall
hlt
mov
dec
xchg
cmpsl
clc
inc
aaa
in
mov
add
mov
adc
nop
xor
in
pop
js
dec
jg
sub
sahf
jne
arpl
loopne
jecxz
fwait
cmpsb
aad
popa
cltd
and
push
push
stos
mov
js
lods
movsb
in
ret
push
lds
test
dec
sub
push
into
loop
or
sub
daa
lds
gs
mov
sti
roll
pop
mov
jg
mov
int
fldenv
jmp
fld1
inc
push
and
outsl
test
bound
lcall
out
sub
jge
pushf
into
scas
ret
or
xor
aad
xchg
rorb
or
in
mov
xlat
jg
ret
orl
mov
mov
inc
fistps
sbb
push
fldenv
jae
jmp
cmp
sbb
js
loopne
mov
and
in
dec
dec
mov
int
push
pop
mov
pop
in
iret
push
push
jl
xorb
fisttps
mov
ret
test
dec
or
jne
sub
mov
xchg
lods
xor
add
jae
jl
mov
outsb
and
push
push
xor
aam
and
jb
mov
mov
mov
add
cmpsl
out
pop
push
int
fwait
mov
mov
lret
stc
lcall
jl
aam
cmpsb
fisubrl
dec
pop
lahf
mov
mov
imul
lods
icebp
xor
fimuls
pop
pop
outsb
cmpsb
mov
lahf
shrl
push
cmp
popa
inc
popa
stc
mov
sbb
dec
jne
mov
jmp
jp
sbb
mov
call
cmc
cs
repnz
cmc
push
sbb
add
mov
add
enter
mov
ja
aad
sbb
mov
xchg
cmp
mov
decb
popa
icebp
push
fisubs
fidivl
sub
loopne
fdivl
mov
mov
js
out
sub
fdivs
jmp
inc
mov
push
daa
inc
lods
push
pop
out
or
add
mov
cli
dec
inc
jle
aam
mov
dec
mov
in
pop
add
test
or
idiv
add
pop
aaa
adc
insl
sahf
ja
scas
test
bound
loop
mov
lock
dec
jnp
mov
in
aad
pop
loope
lret
jp
and
out
dec
cli
movsl
fcmovu
jne
push
ss
sub
jnp
cmp
sti
enter
shrb
movsl
and
lods
in
sbb
pop
dec
adc
cmp
sub
inc
mov
dec
sub
add
pop
add
cld
loope
pop
outsl
fs
xorl
pop
loopne
ljmp
mov
es
fistpll
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
mov
mov
adc
adc
sbb
xor
cwtl
repnz
fimull
xor
aas
lret
js
add
lods
sbb
push
mov
lea
jae
int
jbe
xor
ds
and
orb
mov
movsl
push
or
add
pop
pop
stos
repz
mov
jmp
mov
bound
rorl
inc
jp
jo
aam
jp
push
sbb
and
ljmp
pushf
inc
sbb
mov
xchg
and
fldcw
clc
sbb
sub
inc
push
ret
ret
xlat
sub
fbstp
mov
jecxz
dec
push
xor
insl
pop
jle
dec
fnsave
leave
push
xchg
cmp
popf
into
int
aam
cmp
loop
sti
pop
inc
jns
inc
test
outsb
popf
ljmp
mov
xor
jecxz
pop
xor
dec
test
sbb
inc
cli
in
les
push
cmp
xlat
push
push
jge
mov
sub
and
pop
movsl
in
iret
jge
dec
in
orl
iret
test
jne
aaa
les
enter
mov
ror
push
repnz
jecxz
dec
mov
popf
pop
jg
fwait
push
push
pop
lret
add
imulb
add
push
daa
out
insl
lgs
cli
pop
rcrb
sbb
cltd
addl
cwtl
sbb
idivl
xor
hlt
ja
das
ljmp
inc
push
rclb
enter
push
mov
ret
push
rcrb
or
popa
jo
dec
pop
jge
out
jge
or
add
lret
iret
sub
xchg
in
jns
push
cld
xorl
popa
fsts
push
jae
shrl
dec
pop
mov
add
add
pop
in
dec
xor
movsl
adc
mov
divl
sbb
or
jp
pusha
out
or
mov
add
int3
xchg
scas
insb
insl
leave
or
sub
xchg
lds
xchg
sbb
fildl
add
inc
idivl
mov
inc
xor
mov
cwtl
lock
dec
xchg
jo
cmpsl
je
fucom
xlat
mov
push
fldcw
repnz
int3
call
push
push
outsb
mov
sub
pop
sbbb
lock
pop
nop
stc
xchg
xchg
xchg
add
xor
push
mov
push
mov
sbb
cmpsb
lcall
ficoml
pop
pop
inc
shlb
bound
adc
and
jecxz
stos
ret
cmp
shl
cli
cli
sbb
inc
out
outsb
fimull
loopne
pop
jl
mov
pop
xor
mov
and
roll
mov
lea
adc
nop
push
adc
jne
les
fdivs
xchg
cs
mov
adc
xchg
leave
add
imul
mov
int3
shrl
xchg
pop
push
pop
or
and
repnz
push
pop
inc
adc
sbb
xchg
mov
push
or
icebp
xchg
outsl
aad
negl
xchg
and
mov
mov
inc
xchg
enter
fadd
xchg
or
movsl
imul
lret
jmp
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
adc
pop
xor
xor
lret
arpl
frstor
pop
arpl
arpl
stc
fwait
in
scas
pop
or
imul
sbb
and
icebp
jge
sub
dec
pop
xor
mov
xchg
cmp
sub
scas
push
or
mov
dec
repnz
shrb
pop
ret
scas
push
stos
in
mov
inc
sub
pop
jb
mov
and
xor
shll
dec
xor
std
xchg
add
jmp
xchg
jnp
xchg
movb
adc
cmp
cmp
loop
shrb
fs
outsb
cmpsl
mov
push
cmc
into
insl
dec
pop
sar
dec
cmp
or
mov
xor
stc
scas
sub
dec
add
xchg
jmp
or
add
pop
les
lds
ret
ds
lret
shll
fcompl
out
sbb
or
addr16
insl
mov
xor
mov
xor
xor
dec
pop
imul
jmp
outsl
dec
iret
sub
es
inc
ror
leave
pop
aam
add
gs
call
jp
hlt
pusha
repz
in
adc
push
push
sbb
inc
mov
ret
inc
cmpsl
pop
popf
inc
jae
xlat
xchg
or
fisubl
scas
fs
add
push
xchg
pop
mov
stos
and
sbb
inc
or
mov
test
adc
jne
add
cld
push
int
push
sbb
addr16
popa
or
cmp
mov
fcomps
out
je
lock
cwtl
ud2
jl
sub
je
out
adcl
enter
xchg
sbb
jle
mov
lods
pop
clc
sahf
sub
add
or
push
rclb
fucomp
mov
shrb
std
arpl
cmp
push
inc
xchg
sahf
test
dec
leave
jmp
addr16
test
mov
scas
xlat
lret
xchg
and
pop
or
shl
sbb
xor
cwtl
mov
in
or
xchg
movsb
xchg
rcll
add
movb
mov
pop
fsts
ds
push
pop
jbe
xchg
popa
jnp
inc
inc
mov
in
pushf
jb
inc
enter
adc
xchg
push
fisubl
mov
or
or
xor
stc
repnz
fwait
or
ja
out
inc
push
push
imul
dec
push
xor
in
fldt
movsb
mov
adc
fsubp
cmpsb
cmpl
xchg
xchg
push
cmp
sub
pop
retw
scas
push
cmpsl
das
pushf
hlt
out
adc
dec
notl
hlt
mov
cmp
stc
mov
in
test
popf
lea
cltd
sub
lods
fldl
add
push
mov
cltd
fwait
orl
and
les
lret
jnp
shll
lds
ljmp
mov
addr16
dec
out
mov
pop
or
and
mov
clc
and
adc
repz
das
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
push
jl
adc
adc
pop
in
pop
mulb
pop
jns
mov
push
sbb
sbb
fldl
movsb
iret
jbe
cmpsl
cmp
std
fs
inc
outsb
sub
push
lret
outsb
and
inc
jns
push
inc
jp
inc
movsl
rcr
loope
call
mov
pop
cmpsl
adc
push
fsubs
jle
test
xorb
and
je
xchg
cmp
ljmp
sbb
sbb
jp
mov
mov
jae
or
mov
mov
popf
fs
push
mov
lret
or
mov
lret
xorb
hlt
xor
adc
jnp
mov
in
imul
out
mov
imul
sub
loope
mov
ss
clc
add
pop
mov
sub
and
aam
cmp
push
testb
xchg
mov
addr16
inc
out
das
lock
xchg
mov
cmpsb
jl
push
or
jl
push
imul
std
lods
sub
stos
nop
inc
nop
es
call
pop
jp
out
aad
jmp
adc
in
popa
sub
sbb
fsts
inc
xor
mov
jl
push
push
pop
stc
sbb
out
pop
inc
ret
stc
sub
xor
jae
and
fwait
mov
xchg
dec
xor
shrl
gs
xlat
int
mov
mov
mul
xor
faddl
outsl
imulb
mov
sbbl
mov
add
lods
or
and
push
gs
negb
jecxz
ds
adc
push
mov
xchg
cltd
push
push
sbb
mov
dec
dec
sub
jle
push
mov
xor
xchg
xor
mov
into
xchg
jns
jne
mov
and
movsb
mov
lods
ja
xchg
adc
add
addr16
shl
dec
add
aad
xchg
jbe
cmp
pusha
or
jae
pop
jb
xor
sub
fistl
sub
xchg
int
inc
pop
gs
test
xor
fsubl
ljmp
push
pop
stos
push
pushf
inc
jl
inc
test
mov
cli
cmc
xor
daa
fs
mull
js
in
fsubrs
fiadds
mov
repz
xchg
int3
pop
push
aam
js
xor
std
les
sahf
push
cli
xor
pop
arpl
push
dec
int3
dec
mov
pop
add
pop
xchg
push
push
push
jnp
mov
mov
divl
xchg
jmp
imul
jnp
mov
adc
jp
jno
push
adc
xor
ss
dec
sarl
pop
push
orl
cwtl
lock
cmpl
jnp
mov
rorl
mov
arpl
or
and
mov
push
xchg
pop
pop
fcompl
test
ret
fisubrl
fidivl
ss
dec
jno
popf
test
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
mov
je
adc
adc
rcr
xor
adc
xor
iret
shlb
mov
mov
push
mov
sahf
mov
je
xchg
enter
jp
es
popa
xchg
push
in
bsf
pop
aaa
inc
push
push
fsubl
test
mov
pop
adc
cmp
add
xchg
popf
xchg
cmc
push
mov
push
stc
shrl
stos
mov
stc
mov
xlat
and
packssdw
or
jge
cmp
int3
xlat
inc
mov
jecxz
add
loopne
test
pop
mov
mov
scas
shl
cmc
mov
xchg
xor
dec
out
fsubs
add
loopne
jne
stos
insl
loopne
inc
push
sbb
imul
mov
xchg
stos
inc
aam
leave
push
or
icebp
push
xor
imul
sbb
sub
mov
jbe
jmp
xchg
iret
push
std
jmp
pop
es
push
loop
into
test
mov
pop
sbb
int3
aas
sub
sbbb
int3
and
xor
mov
push
cmp
fidivrs
popf
enter
test
add
jnp
test
xchg
sbb
mov
push
repz
jmp
pop
mov
adc
mov
dec
scas
mov
fbstp
xchg
sub
std
jl
mov
sub
in
ja
shrb
push
push
ret
jno
cld
scas
and
add
ja
mov
addb
dec
jbe
cltd
mov
jne
repnz
fwait
daa
jle
call
fwait
push
movsb
std
fidivs
dec
insb
xchg
mov
sbb
sahf
mov
inc
repnz
mov
icebp
daa
xor
cmp
push
dec
push
out
inc
pop
es
enter
xchg
inc
and
loope
lods
adcb
std
movsb
push
adc
fstps
aam
mov
push
scas
iret
pop
arpl
xchg
inc
dec
andb
or
test
int
cmp
sbb
test
mov
jp
add
or
out
subb
xor
mov
shrl
lahf
push
and
xchg
inc
dec
mov
mov
roll
orb
int
das
testb
mov
popf
lcall
pop
sub
or
shlb
popf
dec
rcr
out
add
arpl
sahf
xchg
mov
pop
xor
mov
and
adc
pop
and
aam
add
fimull
push
iret
sub
sub
stc
mov
push
fidivrs
pop
sahf
or
lret
or
and
cs
jmp
aaa
xchg
insl
test
inc
pushf
push
sbb
and
addr16
add
icebp
lods
push
aad
fisubrl
jge
pushf
xor
out
jge
pmullw
sbb
notb
push
xchg
pop
popf
xchg
je
cmp
xor
and
outsl
hlt
add
and
lahf
or
cli
roll
sub
mov
cmp
mov
and
lret
mov
mov
cmpsb
pop
sti
pushf
pushf
in
push
adc
clc
cld
in
mov
call
cld
insl
xchg
js
in
push
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
or
adc
clc
lcall
insl
mov
adc
pop
les
push
push
add
call
ds
imul
roll
dec
push
lods
jp
in
insb
cld
popf
insl
sbb
push
xchg
lods
pushw
push
outsb
sub
push
jns
out
idivb
jo
out
cwtl
test
imul
stc
test
xor
pop
and
xchg
lock
xchg
add
push
stos
mov
mov
fidivs
dec
int3
ret
ds
mov
push
push
sub
jo
sub
xor
and
adc
sbb
movsl
mov
xchg
leave
add
daa
xchg
rolb
sub
je
cmp
sti
std
cwtl
mov
cmc
addr16
out
sbb
fcmovnu
cmpsl
or
outsb
sbb
ds
xor
cwtl
push
mov
shr
and
icebp
insl
pop
dec
loopne
lock
in
dec
faddl
or
test
roll
mov
mov
test
call
dec
loop
or
sub
pop
sahf
jnp
rolb
cmp
adc
sahf
mov
mov
mov
mov
mov
dec
lds
xlat
jb
outsb
je
mov
xor
xchg
mov
mov
xor
clc
xor
imul
lcall
add
fs
movsl
push
pop
jae
mov
fwait
mov
sbb
and
lahf
xor
ud1
aam
sub
mov
push
dec
dec
inc
cwtl
xorb
outsl
and
jl
gs
int
sbb
lds
xchg
clc
mov
cmc
add
jle
movsb
push
rcrb
cmc
aas
jl
jo
mov
mov
xchg
std
rclb
mov
xor
sbb
xor
jb
sarl
pop
int3
sarb
sbb
or
xchg
in
sti
std
push
xchg
popa
ficompl
and
or
xchg
aam
jb
jns
rep
cmp
cmp
hlt
add
lahf
sahf
push
inc
xchg
mov
inc
cmp
jns
imul
aaa
ret
xchg
and
cmp
and
sbbb
add
xchg
popa
mov
xlat
xchg
filds
and
out
add
xchg
pop
mov
popf
mov
out
idivl
push
lcall
fs
fisubs
call
jl
mov
adc
xor
dec
add
mov
xchg
sbb
adc
jne
inc
lds
loop
out
sbbl
pop
xlat
xchg
in
mov
flds
jno
push
shl
outsl
mov
outsl
pop
mov
jge
jno
cmp
and
out
out
pop
addr16
dec
cmp
out
nop
push
sub
mov
mov
sub
pop
xor
mov
sbb
jecxz
mov
sub
jg
inc
test
pop
sbb
mov
mov
mov
clc
movsl
xchg
add
mov
push
xchg
or
mov
mov
inc
flds
pop
mov
orl
or
in
mull
inc
fmuls
xor
pop
fsts
addr16
push
push
loope
jns
cmp
push
lock
pop
cli
test
pushf
out
pop
testb
xor
nop
fcoml
mov
push
cmc
call
xorl
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
and
xor
subl
dec
sub
imul
lds
bound
test
mov
bound
jae
dec
lcall
jns
mov
icebp
or
fs
and
int
pusha
popf
jmp
and
lock
mov
popa
pushf
dec
or
imulb
xor
mov
movsl
enter
pop
fs
test
push
shrl
jg
mov
jbe
cs
mov
nop
or
fldenv
push
roll
xchg
sbb
and
cld
pusha
push
lds
jmp
shll
inc
pushf
adc
push
xor
mulb
lea
sahf
cs
lock
jmp
add
mov
dec
stos
dec
jno
imul
jle
inc
push
mov
ds
lcall
sbb
fisttpll
jb
lea
fistpll
push
pop
fsubrl
jo
sbb
dec
add
divl
test
sub
loop
xchg
das
test
cli
mov
mov
into
psrad
xchg
cld
sub
inc
jle
xor
mov
in
xchg
jnp
sysenter
mov
or
loope
je
mov
fisttpll
fsubs
loope
dec
adc
in
outsl
xor
pop
arpl
nop
iret
bound
mov
jb
mov
and
and
aas
rcrb
js
stc
mov
dec
cmp
mov
cwtl
mov
sar
xchg
xchg
cmpsl
jne
sbb
sbb
test
dec
fimull
sbb
adc
mov
in
test
adc
imul
cmp
je
movsb
cmpsb
mov
xchg
hlt
xchg
nop
xchg
pusha
shll
loopne
je
mov
aas
shrb
sbb
fmull
jmp
and
xchg
xchg
daa
in
xor
ficoml
sti
scas
btc
xchg
mov
xor
iret
jno
sbbb
jb
cmp
push
cmp
mov
shr
insl
outsl
lcall
dec
into
dec
sbbl
cli
popa
add
loope
shld
pop
or
push
test
in
ljmp
inc
cmp
ret
inc
pop
ds
push
les
popf
mov
mov
mov
gs
push
xor
insb
add
xchg
pop
loopne
mov
xlat
dec
mov
or
cwtl
mov
pop
xlat
subb
mov
mov
xchg
pop
in
lcall
jbe
mov
pop
pushf
cmp
dec
sbb
popa
cmp
add
out
into
add
sti
pusha
aad
adc
cmpl
test
sub
cltd
inc
jae
cmc
stos
leave
mov
dec
pop
imul
lock
cmp
mov
sti
adc
test
mov
adc
adc
in
pusha
inc
loop
mov
cmp
fstp
mov
data16
dec
mov
jo
test
add
insb
movsb
inc
or
push
sbb
push
mov
xchg
fstps
fimull
lea
sarb
out
popa
sbb
fs
lret
nop
das
jnp
push
fimull
stc
call
lds
repnz
cmc
lods
leave
pop
sbb
mov
sub
icebp
lahf
nop
mov
fs
push
int3
and
cli
sti
sub
fsts
mov
adc
mov
and
lcall
mov
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
dec
mov
mov
loopne
call
bound
dec
les
pop
rorl
or
sub
mov
les
push
fistpll
mov
cmp
out
xor
mov
pop
sbb
jle
add
mov
push
loopne
clc
xchg
xor
adc
fdiv
xor
pushf
daa
cmpsl
inc
jecxz
pop
mov
shrb
xchg
out
aam
xor
lahf
or
loopne
jle
les
ja
or
add
adc
adc
sub
jnp
xchg
xchg
aad
adc
mov
lret
lock
jg
loop
in
iret
fistps
add
jb
mov
and
jle
mov
mov
sub
pop
out
sub
stc
and
xor
mov
push
in
xchg
mov
outsl
xor
mov
cmp
and
jo
insb
or
sub
fsts
xchg
mov
push
mov
adc
testl
call
into
rcrl
and
inc
mov
andb
out
jle
clc
and
jl
mov
pop
ret
mov
cmpsl
pop
lods
adcb
xchg
test
xchg
inc
and
inc
fmull
mul
ret
scas
loope
adcb
push
imul
lods
lahf
inc
xor
xchg
fiaddl
gs
inc
jmp
add
xchg
push
xor
cmp
out
popa
outsb
dec
pop
arpl
cmp
mov
mov
xchg
pop
dec
pop
movsl
daa
pushf
jl
js
ja
xorl
addr16
inc
inc
mov
sub
cltd
test
rol
jecxz
dec
rclb
push
xchg
add
lods
xchg
rcrl
jae
ja
add
xor
dec
pusha
pop
js
xchg
int
bound
add
lea
push
lock
xchg
xchg
repnz
arpl
js
push
jge
dec
test
nop
cmp
dec
sub
sub
add
sub
jo
fistpl
hlt
stc
cwtl
ret
adc
xor
lret
scas
call
pop
adc
xor
movsb
in
cmp
add
add
pop
mov
sub
aaa
xor
lds
fwait
nop
jmp
xor
gs
sbb
cld
pop
pop
leave
movsb
xor
mov
jle
cltd
test
and
xor
inc
loope
call
mov
jl
or
cmpl
movq
sti
jb
mov
jp
lahf
or
sti
pop
adc
and
popa
and
fdivl
loope
xor
mov
fimuls
sti
dec
in
repnz
dec
data16
push
mov
inc
test
out
dec
pop
mov
inc
roll
sub
push
cmp
icebp
dec
imul
adc
and
pop
int3
push
cwtl
call
fnstenv
fstps
aam
push
push
sbb
idiv
jo
icebp
inc
negb
inc
sti
jmp
stos
jae
nop
subb
pop
xlat
inc
clc
jo
scas
shl
fcomp
pop
dec
imul
fneni(8087
out
xor
xchg
sub
lahf
icebp
pop
sub
and
pushf
pop
push
jp
nop
adc
cmp
loop
js
jns
and
dec
mov
in
sub
lods
push
cmp
jne
mov
scas
mov
jp
and
test
mov
out
jne
sbb
hlt
jmp
sub
add
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
push
pop
adc
mov
add
pop
adc
shlb
add
movsl
sahf
lds
and
add
cmpsl
xchg
add
mov
xchg
repz
jns
jbe
test
pop
addr16
pop
nop
aas
in
cmp
fbstp
loope
in
daa
addr16
push
shrl
xchg
mov
add
aad
xor
ret
je
inc
pusha
pop
add
sbb
dec
inc
test
icebp
adc
bnd
rorl
xor
fidivrl
mov
xlat
push
lods
outsb
js
fstl
fistpl
push
jbe
in
fwait
dec
inc
into
int
xchg
fwait
add
jg
lahf
outsl
cwtl
loopne
aad
cmpsb
add
push
cmp
lock
fdivrp
jbe
inc
test
inc
mov
xchg
cmp
mov
mov
or
mov
rcrl
dec
inc
outsl
mov
inc
shrb
jo
rcll
movsl
xchg
xor
adc
cmc
scas
dec
subb
data16
gs
in
inc
addr16
sbb
loope
lds
cli
call
negb
and
stos
popf
mov
mov
push
add
xchg
mov
inc
pushf
pop
int3
xchg
cld
mov
mov
jmp
and
fnsave
inc
adc
fcompp
sub
jae
fldcw
jg
xchg
pushw
xchg
mov
xchg
dec
add
clc
cmp
pop
cmp
push
repz
sar
fstp
cmpsl
push
sub
pop
into
push
mov
shrb
pop
cmc
repnz
into
adc
cld
loopne
jl
lret
xor
sbb
ja
adc
es
sbb
and
cwtl
data16
lea
xchg
mov
xor
pop
sbb
sub
sbb
cmp
pop
cmpsl
int
sbb
jae
andb
mov
mov
scas
add
mov
ret
call
xor
mov
jmp
mov
mov
inc
sub
lret
pop
xorb
push
data16
inc
lcall
mov
mov
push
push
pusha
insb
ret
dec
enter
jo
xor
enter
push
cmp
add
mov
mov
adc
add
into
data16
sbb
ss
dec
push
cmp
imul
pop
sub
stos
mov
xchg
clc
push
sete
mov
shr
ljmp
mov
push
andl
mov
and
cs
sbb
dec
or
pushf
in
popf
push
nop
mov
and
lea
mov
push
xchg
mov
ret
test
mov
cmp
inc
cmp
rcrl
hlt
ret
mov
push
xchg
pop
pop
push
sti
push
enter
int
jg
stos
adc
hlt
push
add
stos
test
or
inc
push
mov
ror
pop
imul
enter
or
sbb
add
into
nop
mov
pop
dec
jbe
out
cli
nop
clc
orl
pop
mov
inc
lock
mov
inc
mov
push
pop
fsubrs
cmpsb
push
pop
jbe
dec
adc
aad
movsl
add
xor
jl
mov
mov
jnp
rorb
cmp
xchg
pusha
xlat
push
call
jg
push
jmp
adc
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
jecxz
lods
notb
adc
sbb
xor
and
push
pop
jp
sub
ds
int
or
fcmovnbe
push
jl
dec
shl
int3
cmp
das
rcll
jbe
dec
in
or
rorb
lock
xlat
rorb
das
insb
xchg
cmpl
fdiv
call
mov
cmp
cltd
dec
push
in
or
xchg
ljmp
push
in
ss
mov
sbb
outsb
sbb
or
or
mov
pop
and
jg
subb
xchg
out
xchg
dec
xor
xchg
push
aam
test
test
add
pop
mov
insb
mov
add
fnstcw
cmp
mov
subb
mov
nop
mov
jp
jnp
pop
push
icebp
fdivrp
int3
xchg
pop
inc
movsl
jnp
loope
xchg
pusha
loope
push
nop
push
movsb
outsb
lock
xor
scas
leave
shrl
jg
inc
dec
mov
fmull
es
xor
xchg
pop
sub
inc
comiss
xchg
outsb
pop
cmp
cmpsb
je,pn
inc
sbb
andl
scas
push
adc
xor
cmp
iret
mov
dec
pop
sar
adc
mov
clc
add
pop
out
pop
fwait
adc
fs
jo
mov
inc
mov
cld
shrl
sub
cmp
jnp
xor
cmp
xchg
daa
fwait
aad
mov
sub
cmpb
aam
or
mov
fidivs
sbb
add
cli
cmp
imul
pop
shlb
jae
in
je
push
inc
cmp
pop
xor
ror
jmp
out
in
and
mov
imul
dec
or
pushf
dec
dec
je
stos
mov
loope
push
mov
push
cmp
test
pop
push
stc
punpcklbw
lahf
sub
jl
cmp
sbb
lcall
jno
call
lods
jb
dec
andb
cs
mov
mov
fidivrs
fs
mov
rol
pop
inc
ljmp
push
dec
add
jecxz
popa
add
dec
mov
dec
aad
cmp
movsl
insl
lods
inc
idiv
jb
xchg
insl
mov
sbb
jmp
lea
in
cmp
popa
mov
outsb
xor
cltd
pop
sub
notb
pop
cmp
gs
fiadds
mov
adc
mov
call
jbe
ja
mov
ljmp
cmp
add
jb
lods
or
insb
call
lea
pusha
lea
popf
and
sbb
push
stos
or
nop
fwait
adc
sub
and
fidivrl
scas
sub
push
enter
imul
inc
sbb
ja
into
jae
arpl
mov
rolb
or
rclb
jbe
cmp
cmpsl
clc
in
fimull
cmp
in
and
shlb
xchg
enter
std
xchg
ror
sbb
lret
xlat
mov
test
addb
fldenv
cld
mov
icebp
add
loop
and
rolb
sbb
unpckhps
scas
roll
xlat
mov
dec
scas
sbb
loopne
push
jb
subl
bnd
sbb
pop
iret
inc
mov
aas
cmpsb
pop
fwait
cltd
stos
push
sbb
sti
inc
iret
mov
push
jo
loop
jns
sbbb
jne
mov
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
js
dec
adc
mov
adc
jb
and
mov
push
cli
and
push
jns
testb
ret
sahf
cltd
or
xor
roll
ds
scas
push
rorl
lahf
push
pusha
inc
push
xchg
loope
jl
fdivl
enter
add
and
and
enter
insl
or
jbe
fistpll
pop
xchg
xchg
or
pushf
cmp
push
xchg
imul
scas
arpl
repz
push
insl
int
subb
repz
inc
and
insl
mov
sbb
sub
jge
shl
mov
aas
xorb
repz
jmp
in
ljmp
adc
sbb
shll
jo
ret
sub
hlt
cmpsb
in
testb
fimull
xor
adcl
sbb
xchg
xor
xchg
imul
fistpl
or
xor
pop
inc
popl
cltd
sarl
and
rcl
add
and
cmp
or
inc
aam
xchg
stos
fcomps
jg
int
into
lods
xchg
mov
mov
mov
jle
shlb
das
and
and
flds
xchg
cli
lds
xor
dec
mov
in
cmp
loopne
jns
rclb
adc
sar
xchg
jge
fldl
mov
cmpsb
inc
dec
outsl
xor
je
xor
xchg
cmp
ja
and
push
lahf
pop
inc
test
es
mov
in
fs
movb
push
pop
loopne
xor
sub
cwtl
lods
jmp
in
js
lods
mov
stc
xchg
lock
subl
lret
shrb
clc
ret
es
cmovno
jp
lret
lea
movsl
push
hlt
jge,pt
mov
repnz
adc
push
in
push
cmpb
gs
imul
fst
iret
mov
loopne
aas
cltd
ljmp
add
pop
rcl
mov
insb
cmp
jno
aaa
cmpsl
test
stos
or
jg
add
mov
adc
rcrl
addr16
mov
xchg
mov
push
sub
aad
jae
daa
dec
int
adc
call
mov
orb
stos
mov
sub
or
mov
xor
cwtl
cmp
jae
mov
push
cmp
adc
scas
xchg
mov
popf
mov
test
push
jo
sbb
jmp
mov
inc
xchg
test
cmpb
pop
mov
mov
or
loop
shll
adc
int
das
xchg
mov
cmp
pop
fbstp
fimuls
mov
repz
dec
jle
stos
pop
mov
mov
fbld
xor
ss
xchg
and
roll
pushf
loopne
ja
inc
mov
popa
xchg
roll
jb
ret
sbbl
pop
jnp
pop
mov
add
lret
loopne
das
mov
cltd
stos
lds
test
mov
add
imul
push
and
cwtl
pop
outsl
pop
or
jge
in
jg
mov
cmp
mull
push
cmp
inc
jp
mov
mov
pop
lcall
into
jns
mov
push
xchg
pusha
jg
or
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
pop
push
stos
xor
adc
adc
xchg
jno
icebp
push
jo
aam
mov
xor
mov
int3
lcall
shlb
fisubrs
mov
call
push
xchg
in
xchg
dec
or
push
test
add
xorb
dec
cmp
fistpll
insb
ja
dec
cwtl
dec
test
lock
mov
cmp
adc
and
xor
cmpsb
push
ja
cmp
dec
cmp
repz
mov
push
movsl
inc
push
add
or
ds
gs
call
fisttpl
xchg
push
sbbb
jae
jns
aam
sbb
or
mov
or
jnp
pop
push
pop
daa
add
ljmp
outsl
ja
js
shlb
dec
pop
adc
mov
mov
mov
and
ja
clc
testl
push
clc
clc
in
adc
rcrl
daa
test
pop
sub
pop
fbld
in
out
sbb
inc
out
inc
mov
rorb
mov
mov
adc
cmp
imul
sub
mov
ss
fidivl
inc
inc
shl
mov
jg
sub
test
mov
lret
sub
adc
sbb
jmp
pop
popa
imul
adc
enter
xchg
dec
jo
loop
cmp
add
pop
lock
ja
cmpsb
aaa
xchg
ficoms
call
cmp
int3
ret
pop
inc
scas
or
rorl
fcompl
mov
pop
or
loop
mov
sub
mov
arpl
dec
jle
push
sbb
push
lea
mov
mov
jmp
ljmp
ret
jle
jg
dec
pop
xchg
push
cmp
push
adc
ret
add
notb
orl
addb
sub
mov
xlat
pushf
push
xchg
fadds
sbb
add
ret
xchg
lret
adc
dec
in
xchg
jnp
inc
insl
dec
mov
subl
mov
or
push
shlb
pop
pop
mov
jp
fistpl
jmp
fisttpll
rorl
cwtl
dec
xor
cs
pop
xchg
pop
xchg
jno
lahf
repnz
xor
cmpsl
std
dec
fcmovne
and
sub
dec
bound
rorb
pop
xlat
stos
scas
add
dec
and
xchg
std
xchg
inc
add
daa
dec
push
inc
call
jp
call
adc
fdivrs
es
adc
and
xchg
or
dec
sub
jl
insb
lock
fistps
clc
lcall
loopne
test
add
xchg
int
push
pop
jb
int
jae
ds
mov
cmp
fdiv
xor
cmp
cmpsb
sbb
inc
inc
inc
adc
inc
insl
sbb
subb
outsl
out
or
lea
or
rclb
jns
xchg
cltd
dec
push
push
dec
jbe
in
ret
sti
outsl
cli
mov
push
stc
mov
call
push
rcrb
push
inc
xchg
ss
sub
sbb
std
mov
or
imul
outsl
and
push
jecxz
out
push
dec
sbb
ss
lods
cmc
mov
xchg
mov
mov
adc
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
mov
mov
adc
mov
fadds
add
add
fiaddl
test
in
nop
adc
fstpl
mov
lcall
dec
into
mov
lods
stos
pop
ret
inc
popf
jns
movsb
pusha
push
es
mov
mov
cli
repz
sbb
mov
pop
shll
dec
and
dec
sti
jne
ror
call
andb
shr
cmp
clc
mov
jl
and
inc
cli
iret
shrb
pop
xchg
adc
and
pop
cmpsb
xchg
pop
cmp
mov
xchg
pop
pop
and
in
scas
aaa
xor
aad
jge
and
dec
cmc
stc
fmul
fs
sub
scas
mov
mov
enter
stc
gs
fs
and
stc
cmp
xor
shlb
mov
jnp
mov
jb
sbb
xor
outsb
push
mov
push
lahf
mov
cmpsw
xor
mov
push
jbe
jnp
cmp
jg
jno
and
and
push
pop
repz
stos
ficoml
fstl
xor
cmpsl
daa
sbb
cs
pop
jmp
iret
scas
push
call
rcl
jp
and
jns
loopne
pop
adc
jns
icebp
jb
std
push
call
adc
or
aad
stc
rcrl
cmpsl
jle
sar
xlat
in
push
add
push
xchg
cli
adc
add
je
cmpsl
push
lret
dec
cmp
jb
loop
pop
mov
je
stos
aad
adc
inc
insb
mov
sbb
mov
imulb
pop
and
mov
movsb
cwtl
push
sub
movsb
push
and
aam
xchg
test
cmc
jp
ja,pt
cmc
push
dec
mov
mov
mov
cmp
mov
in
pop
call
into
xchg
cli
sbb
jg
sub
cmp
out
stc
repnz
idivb
push
pusha
cmp
test
sub
sub
loope
std
mov
test
bound
sub
push
and
stos
fldl
into
mov
push
xor
data16
pop
out
inc
inc
in
je
or
mov
sbb
push
sysenter
cmp
loopne
out
cs
je
dec
jmp
cmpsl
data16
into
fisubl
sub
add
pop
popa
aad
and
mov
mov
adc
sub
jo
outsl
js
dec
sub
xor
cmpsb
pushf
lret
adc
lods
cmp
or
ror
std
lret
jnp
aas
or
xchg
add
and
cmpsb
mov
negl
inc
or
rcll
push
and
out
adc
push
cmp
mov
out
jle
pop
push
push
adc
mov
pop
jp
or
gs
cmp
shl
or
das
shll
mov
mov
inc
inc
lock
pop
loopne
pop
in
pop
int3
push
ret
jne
arpl
popa
data16
mov
and
sub
mov
jmp
dec
sti
adc
pop
ret
jl
xor
scas
pop
clc
or
fildll
and
aam
mov
push
push
sarl
scas
std
xchg
or
push
data16
mov
or
rcrl
js
push
rol
subl
popf
repz
sti
add
sub
add
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
in
or
adc
adc
xor
jmp
push
out
fs
ds
cmp
xchg
jecxz
std
mov
cmp
jnp
cmp
mov
aam
cmp
pop
stc
xlat
aas
in
shll
push
or
dec
test
cld
fcom
push
scas
lea
cmpsb
dec
dec
hlt
aas
cltd
mov
mov
inc
cmp
fwait
jle
mov
ljmp
xor
mov
push
push
lahf
xchg
sub
jo
pop
test
add
xor
mov
jo
mov
mov
insl
and
mov
mov
jmp
loop
add
jnp
jg
nop
loopne
jb
ss
cmp
pop
pop
jge
lahf
xor
ret
inc
add
fstps
pushw
pop
lea
int
popa
xchg
rorb
test
jle
pop
scas
adc
mov
movsl
mov
mov
outsl
es
ret
cld
ret
mov
cmpsb
mov
pop
repnz
stos
stos
mov
inc
lods
mov
cwtl
jmp
gs
adc
inc
mov
adc
fcmovb
ret
aaa
shl
scas
adc
sbb
push
xlat
push
sbbb
and
cmp
das
push
and
mov
jns
xor
lods
mov
xlat
pop
xchg
imul
les
outsl
mov
aad
icebp
cmpsb
clc
pop
or
mov
inc
sbb
xor
insb
rorl
movb
adc
aad
and
pop
adc
rorb
or
pop
sub
dec
jo
test
pop
push
out
mov
fwait
enter
test
or
fstps
hlt
mov
push
bound
incl
sbb
fs
sbb
sbb
ret
int
daa
cmp
cmp
shl
ret
sub
mov
pop
mov
pop
test
sar
divb
hlt
daa
sub
pop
add
pop
addr16
fcompl
aaa
fsts
jns,pt
xchg
mov
insb
sub
outsl
into
inc
cmpsb
inc
push
xor
outsb
inc
test
sbb
dec
sub
pop
push
out
cmp
aam
cmpsb
arpl
jmp
and
in
sbb
push
add
xchg
xor
add
pop
push
jns
add
loope
aas
push
or
pop
ja
add
ret
jecxz
sar
xchg
jge
addr16
add
or
pop
orl
and
je
sahf
fwait
dec
sbb
sahf
xchg
arpl
ret
push
addb
fsub
xchg
inc
arpl
insb
xchg
enter
mov
mov
adc
jo
pop
rcrl
cmp
xor
pop
in
push
pop
jno
xor
inc
or
movsb
pusha
push
jl
pop
cmp
andl
lods
push
jns
mov
fwait
mov
jge
stos
ficomps
in
std
popa
mov
jo
aam
sub
xchg
imul
jo
adc
imul
push
int
push
in
and
ret
xlat
sub
adc
add
filds
cmp
aam
pushf
and
gs
or
push
dec
xchg
or
adc
lods
push
sahf
aam
scas
leave
sub
cli
mov
and
pop
push
jnp
push
stc
jp
and
mov
and
bound
jne
pushf
cmp
mov
add
enter
sti
or
mov
out
rclb
xor
add
inc
cld
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
mov
adc
adc
dec
xor
movsb
cmc
and
aas
adc
xchg
add
popa
dec
xor
dec
fistl
mov
incl
insl
aaa
stos
or
fidivrl
rcr
adc
jo
dec
adc
jmp
push
scas
cli
push
cltd
xchg
ret
xchg
dec
scas
dec
movl
inc
add
xor
dec
dec
loopne
popf
fstpl
dec
sarb
mov
push
fildll
or
out
incb
push
adc
filds
pop
and
jae
mov
and
or
or
mov
mov
out
into
fmull
add
jle
mov
pop
mov
popa
sti
mov
popf
mov
push
sbb
add
push
cmp
cmp
xor
jmp
jl
mov
iret
rcrl
xchg
xchg
rolb
jle
stos
jl
sub
cwtl
ror
mov
mov
adc
dec
outsb
or
rolb
and
fldcw
jns
popa
fisttpll
sarb
push
cmp
sbb
add
pop
das
push
push
repz
mov
aad
xchg
mov
dec
jne
les
mov
mov
insl
scas
adc
sub
ret
jmp
ret
out
push
pushf
push
pop
xchg
fistpll
shr
adc
fwait
xlat
and
mov
mov
jns
xor
inc
out
mov
fwait
jb
or
lcall
sub
ret
mov
test
aad
sub
cld
fwait
jmp
into
leave
mov
repnz
add
rcl
std
into
cmp
data16
adc
rcrb
out
inc
mov
sahf
out
and
pop
stos
gs
push
push
lret
les
jns
lret
or
in
loop
xchg
xchg
lcall
test
mov
cld
xchg
or
and
daa
push
pop
mov
add
dec
loope
ret
pushf
adc
jmp
mov
jo
push
push
inc
outsb
jmp
rcll
loopne
aaa
sbb
enter
push
popa
lcall
mov
xchg
stos
jae
and
mov
inc
adc
cmc
ret
push
cwtl
negl
fucomi
xor
out
cmp
loopne
rolb
lea
push
je
maxps
cs
inc
movsb
popa
inc
std
and
xor
loop
xor
mov
fildl
sbb
mov
sti
in
ss
rcl
gs
push
pop
xchg
xchg
mov
call
out
lock
fistpl
push
pop
jnp
fistl
or
sub
or
loope
ds
mov
cwtl
std
jl
xor
lods
sbb
push
adc
mov
jnp
lods
fld
ljmp
clc
xor
loopne
push
cmpsb
mov
mov
pop
fldt
inc
mov
out
aas
lret
add
push
mov
aad
int
es
add
jae
stc
sub
xorl
rorl
sbb
stc
push
xchg
in
or
mov
dec
dec
inc
and
ret
xchg
jg
mov
cltd
mov
add
pop
insb
popl
cmpsl
xlat
fstpl
xor
dec
xor
fisttpll
push
xlat
xor
xor
pop
adc
dec
pop
aad
outsb
adc
out
ljmp
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
adc
mov
test
adc
adc
das
test
ss
jbe
mov
jno
idivb
fsubl
add
jle
jbe
scas
ss
mov
packuswb
insb
or
aaa
cmpsl
sub
add
pop
or
pusha
xchg
filds
sbb
xor
adc
sub
fidivs
xor
sbb
dec
push
sti
mov
pop
cld
add
inc
stc
mov
mov
pop
or
fldz
mov
test
pop
xor
lret
inc
mov
leave
loop
fcomps
add
cmpsb
aaa
in
out
inc
push
bnd
xchg
ret
push
test
xchg
and
xchg
inc
into
adc
mov
inc
ljmp
rcrl
add
sub
addr16
and
out
jae
push
lahf
cld
xchg
jmp
mov
mov
jg
pushf
push
pop
push
loop
xchg
mov
push
mov
movsb
or
push
jp
mov
and
sbb
jne
fcomps
or
outsl
jnp
ss
push
mov
cmp
aad
or
xor
mov
add
out
insb
jno
lret
jbe
inc
pop
mov
movsb
push
dec
sbb
cs
cmpsb
dec
cld
and
mov
lea
mov
jnp
testb
scas
jbe
gs
adc
sbb
mov
mov
xchg
sbb
std
movsb
out
imul
sbb
push
push
cmp
je
in
push
sub
addl
xor
aas
and
cmpsb
jae
aaa
dec
mov
pushf
cmpl
lahf
ljmp
ds
dec
and
aad
out
and
je
add
inc
lcall
cmp
dec
xchg
out
pusha
jle
popa
mov
xor
roll
mov
mov
xchg
sbb
and
push
pop
push
in
jg
mov
lds
jb
xor
xchg
leave
pop
lahf
es
add
leave
xor
sub
and
mov
adc
adc
pop
les
mov
and
pop
push
clc
fsubrl
popa
push
in
inc
adc
xor
daa
and
xchg
clc
jno
push
sub
pop
jmp
in
mov
lret
mov
xor
push
adc
inc
sbb
add
cmpb
push
insb
mov
inc
add
repnz
das
mov
jae
mov
mov
sbb
outsl
jl
test
mov
pop
sar
jg
pop
ss
mov
fldcw
push
insl
xchg
ss
mov
outsb
xchg
mov
outsb
mov
inc
data16
cmp
add
add
rolb
sub
movsl
mov
adcb
and
add
mov
or
inc
leave
cli
dec
aas
cmp
test
or
jae
int3
mov
movsb
aaa
or
sub
and
scas
leave
inc
pop
loop
call
iret
xor
ret
pop
xchg
lcall
enter
fmuls
insl
jmp
jg
cld
mul
mov
roll
pop
daa
adc
push
lock
mov
cmp
in
or
sbb
movsb
test
sub
clc
pushf
xlat
std
in
daa
mov
add
cli
dec
insb
lret
sbb
imul
lcall
mov
inc
hlt
xor
add
clc
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
push
sahf
test
inc
sbb
adc
inc
mov
xor
mov
pop
xchg
mov
mov
fsts
add
pop
rcrb
popf
jmp
arpl
pop
mov
and
jno
and
nop
icebp
sub
add
shrb
xchg
inc
sub
jp
movsl
mov
pop
mov
sub
enter
cld
in
or
xchg
push
mov
pop
into
xchg
mov
pop
enter
daa
lahf
sti
push
pop
mov
adc
filds
lret
insb
add
in
adc
stos
rorl
int
xchg
in
mov
dec
shll
inc
iret
xor
jnp
fldt
pop
rclb
repz
je
nop
xchg
mov
lret
fdiv
xor
fnstsw
test
pop
jo
into
scas
xor
push
pushl
pop
mov
mov
jmp
rcrb
in
xchg
mov
sbb
push
or
out
xchg
pop
mov
lods
adc
xor
leave
pop
fnstenv
cmp
sbb
mov
sub
iret
test
popf
rorl
pop
int
arpl
add
push
clc
xchg
ret
fwait
lahf
dec
imul
adc
dec
pop
mov
push
jbe
sub
in
jge
cmp
mov
mov
push
jg
mov
mov
push
xor
xlat
xchg
gs
ss
and
mov
test
movsb
push
loopne
out
pop
in
movsb
stos
imul
mov
or
push
test
stos
mov
stos
push
cmp
out
out
add
cmpb
scas
add
fmuls
test
mov
jae
lea
call
inc
andl
std
insb
add
das
mov
out
cmp
xor
test
mov
lahf
push
cld
dec
pop
pop
jb
inc
fdivs
adc
xor
inc
cmp
insl
popf
push
mov
stos
rcrb
pop
pop
mov
fisubrs
insb
ljmp
rcrb
jnp
call
stos
inc
sub
xlat
pop
adc
jg
push
hlt
pop
xchg
xchg
cmp
mov
lret
inc
xlat
cmp
push
movsl
jae
shll
addb
js
cld
add
sub
divb
jno
test
xchg
in
xchg
add
mov
cmp
popa
arpl
gs
daa
xchg
add
jae
stos
jp
mov
sub
mov
fdivrs
lock
in
dec
hlt
xchg
gs
dec
in
sub
js
mov
mov
shll
xchg
sbb
arpl
les
loopne
out
jle
jg
mov
mov
or
scas
mov
jecxz
push
jnp
xchg
lret
jmp
jge
dec
pop
sbb
outsb
add
pop
mov
jne
mov
stc
xchg
push
jle
inc
movsb
gs
xchg
cmp
andb
sub
jnp
sbb
negb
inc
dec
mov
leave
mov
popf
cli
test
pop
aaa
sbb
popa
test
jmp
push
adc
cmp
jmp
ret
leave
orl
inc
push
mov
out
and
lods
or
lcall
cmp
dec
mov
mov
add
out
in
mov
push
lea
cmp
fmull
fwait
xlat
adc
push
cmp
pop
mov
sub
loopne
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
mov
lcall
jmp
jne
mov
inc
mov
test
push
cmpsl
sbbl
adc
aam
mov
dec
pop
sub
jmp
pop
movsb
movsb
adc
inc
into
adc
lcall
xor
mov
lea
ss
or
jecxz
in
xchg
call
cmc
ret
push
dec
xor
ffree
xchg
orb
scas
push
pop
stc
scas
fldenv
push
cmp
lahf
test
mov
jns
shrb
addr16
add
and
sti
mov
out
xchg
js
in
jb
jae
dec
mov
mov
xorb
or
cltd
incb
lcall
subb
mov
fucomp
dec
and
and
loop
inc
sarl
dec
add
fsubs
fs
jecxz
loop
leave
repz
mov
gs
or
mov
jo
jge
sub
js
icebp
daa
and
imul
insl
inc
or
push
sub
lods
das
and
jmp
hlt
or
mov
clc
insb
pop
ds
sub
sub
and
mov
in
dec
push
mov
mov
jnp
lds
rep
stos
mov
leave
insl
jl
mov
daa
sbb
push
cmpsl
int3
sub
sar
sbb
ja
jl
pusha
fidivl
hlt
mov
sub
add
aad
xlat
aas
ja,pn
inc
jecxz
push
cmp
xorb
in
popa
je
jge
and
jl
cmp
cmp
or
jns
and
push
jb
outsb
or
jle
push
fidivrs
xchg
lret
pop
lahf
shll
ljmp
dec
push
inc
xchg
mov
pop
aas
push
pusha
cmpsb
pusha
test
mov
test
in
aam
and
xchg
xor
stc
fildl
jge
or
pop
dec
out
arpl
mov
icebp
dec
mov
adc
popa
jecxz
add
xchg
ljmp
jle
lahf
sub
inc
mov
mov
add
xor
cmpsl
push
pop
lahf
xor
push
enter
scas
aas
push
mov
lock
sbb
test
dec
mov
adc
or
or
push
or
aaa
mov
pop
cmpsb
jge
jae
sub
popf
pop
data16
cmc
jae
loope
sub
mov
push
or
xchg
lea
movsl
cmp
cld
mov
jne
test
pushl
mov
outsl
adc
cmp
dec
pop
std
fdivrs
adc
into
jecxz
xor
jae
pop
mov
push
sbb
dec
cmpsb
dec
sub
pop
shld
pop
loopne
clc
in
and
sbb
dec
add
aad
jo
movsb
push
dec
jg
pop
loop
adc
push
jl
dec
xchg
into
mov
dec
enter
pop
xchg
fistl
pop
notb
mov
xchg
inc
int3
imull
scas
test
sub
sbb
shrb
cltd
adc
fsubr
mov
mov
mull
jae
test
lods
pop
push
in
mov
push
and
stc
pop
sbb
in
call
xchg
jne
aad
test
lret
testl
inc
gs
loope
imul
cmp
mov
push
fnstenv
aam
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
cmp
mov
mov
adc
mov
mov
lods
pop
inc
sahf
ret
mov
or
fcoms
cli
mov
pop
adc
hlt
in
dec
push
outsb
push
movsl
mov
and
testl
adc
inc
lods
sub
adc
push
rcrb
jmp
xchg
subl
faddl
jge
xchg
xor
in
add
jge
and
fs
mov
enter
adc
call
xchg
ror
test
popf
stos
mov
mov
js
lods
jne
push
dec
sahf
mov
into
andb
das
mov
pop
icebp
lret
jg
les
mov
push
scas
mov
jecxz
jecxz
pop
into
add
test
dec
inc
sub
lock
out
mov
add
sbb
ds
sub
mov
push
sbb
and
or
sub
adc
call
jp
lea
mov
push
aas
push
sbb
sahf
popf
adc
mov
cld
inc
jo
add
sti
punpckhbw
add
cli
jmp
cmc
mov
pop
in
dec
out
outsb
xlat
loopne
dec
push
adc
test
push
popa
adc
fldenv
or
lret
enter
test
jbe
insl
xchg
movsb
test
cmp
addr16
inc
cwtl
cmp
mov
mov
mov
cmpsb
fidivl
loop
adc
sub
jge
pop
movsb
out
lods
xor
popf
cmp
xor
inc
jno
or
punpcklbw
mov
std
fsubl
ljmp
push
ljmp
inc
xor
pop
out
aam
inc
clc
push
subb
mov
push
pop
inc
lods
xchg
pop
aad
lock
push
jecxz
into
lods
mov
mov
jns
imul
pop
pusha
inc
insl
jle
shl
iret
pop
and
sub
fdiv
sbb
into
mov
jno
xor
xor
nop
pop
sub
out
leave
lock
lahf
das
mov
dec
pop
enter
add
fmull
xor
out
pop
cmp
jb
cwtl
inc
and
pop
jle
dec
les
add
lahf
out
mov
push
mov
mov
jmp
imul
fistl
clc
mov
sbb
xor
jmp
adc
push
push
jbe
jbe
cltd
and
enter
push
test
push
push
rcrl
pop
adc
flds
pop
inc
dec
mov
mov
sbb
mov
jg
mov
ds
sbb
cwtl
add
into
int3
arpl
enter
lahf
jae
or
imul
das
mov
ficoms
out
inc
lods
adc
and
push
and
or
loope
sarl
decl
sbb
or
xchg
call
pop
ret
mov
inc
icebp
mov
aaa
mov
mov
cli
lahf
jo
adcb
jmp
daa
rclb
push
xor
mov
jns
add
sbb
push
lds
shr
ss
and
aam
scas
xchg
cs
fildl
xor
test
sbb
arpl
enter
lods
jp
scas
dec
pushf
sub
mov
dec
ss
stos
adc
cli
add
cli
lret
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
xor
or
adc
jbe
das
ret
pusha
sub
mov
inc
sbb
dec
jns
scas
jmp
push
shll
xchg
jl
in
adc
test
jb
lcall
repz
jmp
lock
mov
pop
lds
fnsave
aaa
sbb
pop
mov
aad
test
jp
push
popf
xchg
les
adc
mov
insb
icebp
xchg
repnz
push
test
aaa
xchg
mov
adc
adc
repz
enter
pusha
fnstcw
jne
xchg
pop
jg
sbb
loope
jns
fisubrl
mov
add
pop
dec
cld
dec
mov
popa
rcl
xor
and
fldl
int
sbb
dec
out
xchg
adc
insb
push
subl
pop
xor
mov
mov
aad
or
out
dec
sti
fwait
pop
adc
out
pop
push
adc
enter
jle
xchg
mov
dec
xchg
xchg
xor
mov
pop
insb
bound
inc
loopne
mov
call
movsb
fs
jp
pusha
pop
mov
xorb
imul
pop
or
pushf
push
pop
sbb
dec
or
jmp
test
in
adc
test
mov
sarl
ds
jmp
outsb
push
adc
jae
popf
add
xchg
shll
xchg
in
int3
pop
xchg
pop
mov
stos
outsl
push
pop
dec
lock
sbbl
sysret
push
in
jae
lret
ret
nop
or
lock
ret
cmp
push
mov
das
dec
leave
jb
mov
fbstp
rcll
push
nop
lret
loopne
das
adc
pop
mov
loop
outsl
sarb
sub
and
mov
sub
stc
clc
xchg
adc
loopne
pop
mov
mov
xchg
sarb
jnp
adc
mov
cltd
xor
int
cwtl
sub
dec
add
inc
in
cmpsl
fdiv
sti
pop
fdivrs
ret
fwait
jne
adc
add
icebp
dec
mov
cwtl
aad
pusha
int3
jle
enter
dec
push
outsb
pop
movsb
dec
lcall
dec
loop
lret
aaa
lds
add
movsl
pop
mov
test
lret
pop
outsl
sar
orb
int3
cli
dec
cwtl
stos
sub
jo
iret
adc
stc
and
and
fsubp
mov
ret
cld
imul
ljmp
sbb
and
lock
sub
enter
sbb
pop
daa
pop
and
cmp
add
cld
dec
pop
sbb
mov
and
or
in
imul
sub
push
out
pop
add
lods
push
insb
repz
pop
inc
jp
popf
sbb
mov
sbb
mov
xor
je
mov
inc
stc
stos
and
inc
sahf
push
pop
fcmovnu
ja
movsb
mov
or
aam
mov
lods
or
inc
fwait
inc
divl
mov
ss
pop
das
xor
adc
cmp
mov
push
shr
pop
dec
pop
test
jo
xchg
or
dec
jo
jl
popf
std
je
subl
pushf
mov
mov
adc
xchg
fldenv
repnz
xchg
xchg
and
mov
xchg
not
popf
dec
or
scas
adc
sub
je
dec
add
cmpsl
lods
es
out
ret
xor
fistl
xor
jmp
cmp
ja
pop
aaa
and
or
mov
mov
adc
pop
xor
ljmp
cmp
in
repz
xor
lret
jno
popa
fdivr
in
ret
xlat
mov
scas
pop
cmc
cmp
out
rcr
pop
incl
adc
call
jge
lcall
jnp
lret
aam
int
push
mov
mov
sti
fwait
out
dec
shlb
cmpsl
or
ret
xlat
xchg
rolb
xorl
arpl
stos
je
cwtl
and
jle
sub
lods
xchg
pushf
sbb
dec
aas
fwait
push
lods
or
int3
test
das
xor
jle
inc
push
push
dec
mov
fldl
loop
arpl
xor
xor
test
pushf
test
or
popf
jae
popa
push
sbb
push
rcll
sbb
pop
roll
pushf
mov
mov
call
int3
icebp
cld
or
inc
pop
shrl
sub
pop
lock
js
cs
enter
int
arpl
pop
mov
outsb
das
mov
xchg
outsl
ss
push
clc
rcl
in
sahf
scas
jne
lcall
cmp
stc
push
jl
out
jmp
jmp
sti
gs
outsb
test
xchg
jecxz
in
in
mov
stc
cmp
jb
scas
test
data16
pusha
pop
out
je
push
sbb
pushf
and
mov
sbb
fmull
dec
addr16
mov
mov
jge
mov
cs
push
imul
shr
insb
in
pop
mov
and
pushf
sahf
xchg
ficoms
loop
mov
lahf
test
shrb
mov
xchg
xchg
pop
les
cmp
arpl
push
pop
add
inc
xlat
daa
leave
push
jl
mov
lds
mov
dec
adc
cwtl
std
aad
mov
fbld
aaa
popf
pop
enter
std
into
fbstp
mov
shlb
in
jecxz
loopne
inc
lock
cmpsb
movsl
push
jp
aaa
cli
xchg
lret
mov
lahf
sti
test
mov
xchg
cmpsb
inc
sahf
push
into
adc
into
xor
leave
cmp
mov
jge
inc
fnstcw
test
cltd
ds
sub
popa
repz
xchg
adc
inc
sbb
dec
mov
push
push
and
jno
adc
scas
mov
and
insb
mov
dec
lods
andb
repz
pop
out
push
test
xor
ljmp
int
xchg
add
lcall
adc
push
dec
dec
fsubl
xor
add
lret
xor
fmul
andl
insl
int3
repnz
xchg
jge
mov
xor
lds
mov
gs
hlt
call
jl
roll
dec
ror
popa
bound
mov
push
lahf
cmp
fildl
push
push
push
les
dec
xchg
inc
xor
out
xor
mov
aad
dec
cli
jp
dec
push
or
dec
adc
jp
pop
rcrb
mul
push
subb
mov
inc
std
jg
hlt
push
shr
fildl
cmp
adc
out
inc
bound
xor
add
xor
xor
xor
sbb
scas
push
flds
out
mov
bound
fs
in
mov
dec
pop
jns
mov
xor
out
test
idivb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
mov
repz
xor
or
dec
mov
or
jb
jno
cmpsl
xor
movsb
lcall
pop
or
xchg
in
add
dec
push
js
rolb
scas
sub
push
xor
xlat
add
frstor
das
jle
jmp
mov
or
into
and
sub
mov
ljmp
sar
shl
sub
pushf
mov
loop
lret
xchg
iret
xor
adcl
inc
jge
xchg
adc
sbb
mov
aaa
mov
mov
push
enter
pop
imul
jbe
mov
mov
adc
rcrb
pop
hlt
and
cmp
mov
lret
pop
pop
jbe
rcrl
in
lcall
jge
jnp
test
or
ret
std
pop
and
popa
leave
add
js
imul
imul
push
into
jp
jge
xor
add
cmpsb
lea
pop
xor
push
hlt
lret
lahf
mov
xchg
inc
mov
outsl
jno
push
dec
dec
xchg
xchg
add
mov
adc
test
inc
cmp
and
bound
scas
inc
test
push
inc
dec
push
push
adc
pusha
out
xor
fwait
loope
dec
push
xor
lret
and
mov
mov
es
out
fdivs
fidivrs
dec
push
add
jo
cli
push
mov
xchg
mov
test
inc
fiadds
leave
or
sbb
out
mov
idivl
xor
ficoml
mov
je
cld
idiv
sbb
shr
in
cmp
pop
or
fsubs
pop
sbb
sti
inc
pushf
sbb
aaa
pop
ret
cmp
pop
pop
push
sbb
vmovd
neg
inc
insb
lret
decb
in
sbb
test
jbe
xor
scas
out
mov
cmp
rcrb
stos
test
lcall
adc
xchg
mov
cmp
sbb
repz
cmp
stos
push
pop
outsb
cs
daa
xchg
xchg
jo
aas
dec
stos
cwtl
sbb
addr16
loopne
stos
jl
and
inc
inc
shrl
cmp
jns
and
loope
fcompl
sti
cmc
movsbl
loopne
adc
mov
or
popl
xor
add
pop
adc
sahf
mov
jmp
dec
xchg
push
jns
mov
loop
subl
inc
enter
cmpsb
xchg
and
and
ja
cmp
adc
adc
test
inc
xor
fistpll
sti
add
xor
and
leave
testl
out
pop
lods
sub
leave
lret
lods
outsl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
jecxz
jp
out
lock
adc
adc
dec
subl
mov
sub
and
fwait
pop
mov
mov
aam
xor
fsubrs
and
and
sbb
test
cmp
push
mov
icebp
fwait
push
int3
testl
cmpl
pop
mov
jb
mov
getsec
fdivl
out
mov
repz
and
clc
stc
leave
pop
sub
sbb
mov
dec
dec
mov
int3
imul
scas
dec
ss
loop
dec
dec
push
addr16
clc
xor
push
fimuls
bnd
lock
in
push
rcrl
fsub
mov
xor
xor
imul
xchg
sub
push
jo
leave
xchg
adc
xor
cld
jge
pusha
andb
xchg
sbb
scas
push
mov
dec
jno
sub
mov
jge
loopne
inc
sub
push
test
loopne
jp
add
inc
mov
xchg
xchg
lret
xchg
or
mov
mov
mov
sbb
mov
push
inc
loope
aaa
scas
cmp
mov
inc
iret
sub
push
cmc
push
notl
sbb
xor
jne
and
add
daa
push
add
mov
adc
inc
mov
push
xchg
lods
jo
mov
dec
ficompl
std
gs
mov
inc
push
arpl
adc
lret
fistpl
adc
pushf
test
xor
pop
dec
loopne
in
lahf
jg
dec
in
or
aaa
jmp
inc
push
and
lret
mov
mov
popa
jecxz
sub
enter
ds
xor
ds
sub
addr16
jmp
icebp
orl
mov
mov
and
stos
aas
stos
pop
outsb
rol
cld
ret
mov
dec
bound
xor
mov
add
sbb
mov
cmp
repz
shll
lods
stos
mov
or
lret
pop
adc
iret
inc
mov
stos
enter
sub
rclb
and
pop
outsb
hlt
fisttps
cmp
pop
mov
pop
inc
imul
cmp
or
imulb
and
lahf
gs
xchg
lods
mov
jecxz
sbb
xchg
push
cltd
push
ja
inc
sub
pop
xor
fstpt
gs
pop
dec
mov
push
add
les
cli
add
pop
push
loope
or
push
xchg
mov
dec
add
mov
push
test
sub
mov
jmp
xchg
xchg
fisttps
ret
fisubs
imul
adc
push
div
xchg
mov
daa
dec
pop
mov
cs
mov
mov
aaa
dec
dec
cmc
inc
jl
int
stc
test
add
out
stc
jno
inc
not
jle
mov
repnz
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
mov
mov
adc
adc
je
ljmp
xorl
int
and
push
cmp
mov
push
push
inc
cmp
pop
or
fincstp
aam
xor
cmp
nop
cmpsb
mov
push
lds
fs
adc
adc
outsb
mov
mov
test
jg
shlb
clc
inc
popf
and
xor
das
mov
lret
mov
dec
xor
push
fistl
mov
cld
hlt
jecxz
pop
mov
loope
add
in
pop
sub
rorl
xchg
dec
add
mov
test
inc
cmp
cmp
rcl
pop
scas
ret
ja
xchg
pop
pop
pop
rorl
ss
cmpl
js
pop
clc
and
dec
lock
icebp
loope
lret
jb
pop
stos
clc
push
xlat
pop
scas
addl
xchg
daa
sub
faddl
cmp
sbb
push
mov
iret
dec
addr16
in
jb
push
aaa
js
ficompl
repz
cmpsl
jle
lcall
cmp
mov
in
lret
pop
pop
mov
jp
push
lahf
xchg
stos
lock
repz
lock
lahf
std
mov
add
inc
addl
fwait
mov
ds
stc
and
dec
ss
icebp
xchg
jns
mov
mov
movsl
aas
div
cld
and
sbb
mov
sbbb
int3
jbe
inc
push
dec
popf
jbe
shlb
sub
enter
in
sbb
add
lret
adc
jae
js
push
test
out
loope
out
out
into
cmp
jg
cltd
outsl
mov
lcall
fmull
fcompl
jo
sub
fbstp
cld
jo
repnz
dec
out
out
pop
sbb
sub
test
das
push
cmp
rol
sbb
enter
jb
fdivs
inc
test
mov
cwtl
movsl
das
cli
filds
repz
push
lret
into
mov
adc
sub
les
cs
push
mov
or
popa
das
jg
xlat
out
inc
mov
xchg
jp
fildl
jae
jb
xchg
dec
adcb
jns
push
sti
push
xor
dec
test
adc
jmp
mov
cs
scas
sub
ja
mull
push
cmp
bnd
jg
fcoml
shll
movsl
fucomip
push
xchg
roll
mov
sbb
push
jo
fadds
xor
ss
jnp
lock
cmp
pop
mov
lahf
clc
mov
push
je
inc
mov
and
shlb
js
add
nop
std
push
sar
int3
push
add
lahf
mov
and
jp
test
mov
push
mov
dec
rcll
adc
jg
aam
dec
pop
in
xor
leave
push
dec
rcrb
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
and
insb
dec
jecxz
adc
adc
adc
lret
cmp
push
pcmpeqw
popf
jge
clc
adc
mov
sub
hlt
repz
add
sbb
in
cmp
mov
sub
sarl
cmpsl
test
sahf
inc
iret
and
je
lods
mov
loope
mov
and
and
outsb
inc
xor
sub
push
scas
adc
add
cltd
pop
fisttpl
xlat
add
jne
jno
push
adc
mov
adc
sub
mov
roll
adcl
jb
js
dec
and
insl
add
pop
mov
mov
mov
test
adc
bound
cmp
pusha
pop
fs
cmpsl
addr16
adc
nopl
push
out
test
and
push
imul
sar
pop
daa
mov
rorb
xchg
in
movsb
clc
pop
jge
or
shlb
mov
push
or
jmp
xor
jmp
mov
inc
pop
das
cmp
fisubrl
shrb
add
pop
mov
ficoms
call
add
roll
add
fcoms
cmp
or
xchg
dec
jle
insb
jl
mov
fmull
jmp
sbb
rcl
shrb
popa
out
rclb
xor
xchg
jecxz
adc
test
popf
sbb
mov
push
jmp
sbb
push
add
shl
repz
pushf
adc
mov
cltd
ret
jmp
test
dec
mov
xchg
dec
sbbb
js
dec
stos
repnz
negl
push
sub
pop
dec
into
cli
mov
test
mov
cs
mov
insl
jae
push
addr16
pop
shll
push
in
adc
dec
push
mov
push
jp
das
mov
mov
or
cmp
jnp
cmp
sbb
mov
fadds
add
inc
jmp
ljmp
mov
outsl
in
iret
das
idivl
test
and
sbbl
xor
mov
xchg
cmp
jnp
cmp
inc
and
out
aaa
aad
sbb
xchg
jae
add
xchg
jns
jp
cwtl
sub
movsb
mov
outsl
xor
pop
std
gs
xchg
add
sub
nop
push
out
movsl
pop
aaa
push
xchg
sub
push
hlt
in
push
pop
testl
loope
rcrb
push
mov
mov
add
jecxz
aas
scas
aam
mov
xor
lock
jb
push
aaa
inc
lods
shr
dec
ja
jne
lea
add
test
sahf
mov
ds
xor
cmp
cld
mov
lods
xchg
subl
test
out
iret
adc
pop
dec
sbb
sbb
rcrb
stos
adc
insb
movsl
and
rcll
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
dec
push
sbb
adc
adc
add
call
inc
sbb
cwtl
jne
in
lret
mov
roll
xchg
ret
xor
sbb
loope
fisttps
lods
aas
test
pop
xchg
xor
xlat
inc
add
pop
add
sub
pop
mov
scas
scas
fs
add
inc
roll
int3
lds
and
add
sahf
int
ret
out
mov
loopne
xor
xchg
data16
cmpsl
out
je
jl
pusha
xor
sub
adc
out
movsl
lods
and
call
mov
int
icebp
mov
stos
daa
jecxz
dec
cmp
and
call
es
jle
jae
xor
xor
lock
orl
push
and
popa
loopne
sbb
pop
pop
cmpsl
xorl
mov
inc
pusha
cmpsl
decb
inc
push
ss
inc
mov
in
inc
jb
jecxz
das
fwait
and
xor
dec
addr16
popa
sahf
imul
gs
add
loopne
sub
mov
pop
push
pushf
cmp
arpl
push
jbe
into
jle
adc
mov
aas
out
je
sbb
fsts
jg
mov
inc
jmp
mov
mov
mov
sti
idivb
enter
jmp
sub
xor
push
dec
sub
popa
jl
jp
lahf
xchg
cmp
push
mov
dec
jno
test
daa
dec
cltd
mov
pop
cmp
iret
jno
xchg
mov
sub
test
push
outsl
ret
aas
shrl
xor
dec
mov
in
movsb
cmp
je
daa
sub
pop
mov
pop
xchg
add
or
mov
mov
icebp
cmp
or
push
jp
scas
sub
bound
gs
dec
mov
loop
aam
je
and
divb
les
mov
fsts
pop
das
cmpsb
lahf
mov
push
add
popf
sub
out
mov
lahf
aas
lret
add
pop
and
jno
fdivr
movsl
rorb
add
hlt
fldcw
xchg
fsubr
dec
int3
mov
xor
jge
cltd
loopne
pop
sbb
loopne
jge
fwait
dec
sti
lods
into
xor
in
add
sub
sti
mov
add
add
or
push
test
adc
out
popf
fisttps
push
sbb
sub
test
sbb
bound
pop
or
sub
fwait
sub
push
lock
psadbw
pop
aam
sub
jb
daa
add
push
pop
adc
dec
dec
mov
mov
xor
rorl
inc
in
sbb
dec
mov
in
dec
xchg
push
sar
ficomps
and
movsl
adc
hlt
push
xor
xchg
es
cmp
cmp
aas
jns
pop
popa
ret
adc
mov
xlat
xchg
xor
icebp
aam
icebp
in
in
fiaddl
adc
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
cmpsl
sbb
cmp
adc
enter
jmp
aad
adc
daa
movsl
jb
push
rclb
ss
dec
popl
imul
jae
xlat
in
ja
enter
jae
cltd
test
cli
das
cmp
dec
das
fisttps
mov
outsb
adc
ret
int
fmuls
mov
retw
add
das
into
xor
add
pushf
xchg
adc
xchg
sub
mov
or
pop
fstpt
movsb
cmp
cltd
inc
movsb
iret
xchg
mov
mov
out
mov
mov
divb
jge
clc
fs
inc
and
enter
xchg
ficomps
lcall
mov
jb
sbb
lds
sub
aas
dec
xor
cli
add
addr16
dec
add
fucomp
imul
sbb
les
idiv
cmpsb
push
mov
mov
lock
inc
mov
mov
cmp
dec
dec
loopne
mov
mov
mov
lahf
mov
pop
mov
sub
iret
xor
jp
int
cld
imul
es
ds
std
inc
test
mov
mov
out
enter
dec
add
jns
xchg
or
cwtl
leave
push
leave
fiadds
push
aad
push
mov
mov
adc
mov
fsts
bound
lds
pushf
packsswb
dec
out
jp
adc
loop
out
lock
jns
cld
xchg
sbb
insl
mov
xchg
shll
mov
push
adc
adc
or
int
push
mov
dec
das
testl
cmpsl
adc
pop
lods
test
xchg
mov
sbb
jo
ljmp
movsl
push
lret
dec
aaa
insb
xchg
push
sbb
and
dec
and
les
insb
int
addb
inc
and
popa
dec
mov
int3
ss
loopne
xchg
iret
mov
adc
pextrw
sub
bound
in
ret
mov
xchg
xchg
and
mov
add
sub
mov
or
repnz
push
mov
xor
xor
cs
or
shrb
dec
sub
pop
push
mov
call
js
and
push
movsb
jmp
mov
pop
fisubrl
out
bound
cmp
push
sbb
fwait
pop
cs
push
or
fs
inc
mov
rcrl
lahf
loopne
sub
daa
lds
loope
int3
sbb
insb
aad
addr16
int
cld
add
ss
sbb
cmc
mov
pop
addr16
mov
cmp
jl
inc
scas
cmpxchg
mov
xchg
sbb
fstpt
or
lods
cmova
xor
test
scas
pusha
sub
imulb
sub
dec
push
push
or
mov
xchg
stos
fwait
fs
jp
ss
les
lock
push
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
fs
stos
pop
aad
adc
adc
adc
pop
sbb
les
fidivs
mov
cld
cli
iret
sti
arpl
jno
fwait
jp
adc
pop
test
and
cmp
es
xchg
and
sbb
pop
jge
push
push
push
mov
pop
rcr
lods
fisubrs
jnp
cmp
cmp
or
popa
push
pop
call
jp
stos
or
sbb
add
addr16
nop
scas
mov
sbb
loope
iret
and
in
sub
push
lock
aad
lods
les
orb
push
loopne
mov
push
dec
sub
push
push
rcrb
pop
mov
cmp
mov
lods
test
scas
pop
pop
push
sub
mull
lock
jae
or
dec
xor
negl
pop
ret
loopne
pcmpeqb
or
dec
fistpll
pop
xchg
push
dec
dec
jl
jg
ret
sti
adc
pop
lahf
and
and
sahf
mov
cli
jp
push
lods
outsl
es
xchg
addl
dec
lods
mov
outsl
and
adc
push
repnz
fildll
fildll
cmp
sbb
ret
sub
inc
cwtl
sbb
adc
insb
stc
pop
push
dec
add
add
cmpsl
repnz
int
movsb
fistpl
jno
loop
test
aaa
sub
iret
push
roll
jae
daa
out
rcll
sbb
xchg
out
repz
push
inc
push
in
movsl
mov
push
jl
rcrl
out
in
rcll
and
mov
sub
addl
bound
sbb
sbb
mov
push
outsb
xchg
pusha
push
or
fimuls
sbbb
sub
jno
insl
inc
cld
pop
stos
cmp
mov
xor
sbb
in
push
sbb
add
mov
mov
cltd
daa
mov
mov
lcall
sub
and
inc
test
cwtl
adc
pushf
mov
imul
dec
cmpsb
sbb
mov
fisubl
out
dec
adc
cmp
cmc
dec
test
clc
add
repnz
std
mov
mov
ficoms
jno
sahf
mov
push
lcall
mov
lods
inc
and
inc
les
outsl
pop
fisubs
seto
inc
pop
cmp
xchg
inc
stos
dec
inc
rorb
sub
test
add
out
aaa
icebp
fmuls
popa
dec
sub
mov
mov
sti
push
pop
cmp
or
les
cmp
sub
arpl
push
sbb
insb
cli
mov
or
outsb
mov
xchg
sub
stos
mov
str
sti
xchg
movsl
xchg
scas
and
and
test
push
mov
and
js
rcr
adc
mov
mov
test
mov
sub
push
mov
xchg
pop
push
and
jp
jl
ret
mov
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
scas
or
xchg
movlps
jo
dec
ljmp
or
pop
call
add
sub
mov
xchg
pop
out
xchg
shll
jge
push
addr16
jp
sahf
pop
fbstp
pop
and
or
mov
cmp
push
xor
ret
out
shlb
or
fs
je
sub
rcrl
add
hlt
dec
stos
pusha
pushf
mov
call
push
mov
lahf
jge
fstpl
add
mov
addl
xor
aaa
stos
mov
cs
push
js
jge
test
jp
das
jno
fildll
pop
xchg
test
leave
dec
and
xor
out
lods
call
jne
movsl
orl
aad
pop
push
xor
arpl
xor
loop
xchg
out
iret
ljmp
hlt
out
cs
insl
movsl
out
hlt
je
movsb
adc
and
outsb
lcall
cld
in
xchg
cmpl
sbb
jmp
mov
adc
adc
pop
and
push
std
adcl
sbb
je
ficomps
xchg
mov
xor
cltd
jle
ja
shrb
push
cmpsb
mov
icebp
fidivrl
mov
repz
cli
adc
pop
test
addb
out
xorl
stos
movsb
xor
aam
cmp
adc
adc
inc
mov
jp
sti
rolb
in
rcrl
lahf
and
xor
mov
jno
stc
mov
mov
pop
popf
mov
mov
inc
xchg
movsl
loope
inc
jns
lcall
add
jle
pop
fucomp
out
cs
lds
xchg
sbb
xor
and
clc
sbb
push
cmpsl
shr
add
push
sbb
gs
mov
mov
loope
xchg
or
push
and
repnz
add
repnz
mov
test
iret
and
lock
frstor
aaa
bound
js
loope
call
enter
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
pop
mov
xchg
movlps
sub
ljmp
inc
xor
call
fs
mov
inc
aas
mov
and
ja
aam
pop
or
outsb
daa
add
xchg
cmp
and
int3
fisttpl
xchg
dec
stc
js
in
adc
aaa
fwait
mov
in
mov
push
cltd
add
ret
or
sub
and
jge
xchg
push
clc
and
fisubrs
sub
xchg
ret
cmp
push
dec
nop
sbb
fisttpll
or
xchg
pop
lods
mov
cmc
imul
cs
add
cwtl
xchg
ret
dec
mov
hlt
pop
dec
out
repz
scas
int3
push
xor
outsb
push
xor
dec
pop
rcrb
mov
fnstcw
aad
jp
push
ja
iret
xor
fld
xor
cmp
sbb
mov
movsl
cmp
dec
jmp
mov
ljmpw
mov
out
mov
sub
mov
cmpsl
adc
xchg
icebp
scas
mov
jg
pop
icebp
fs
push
jle
pop
dec
fiadds
movsb
call
dec
xchg
pushf
das
jp
fwait
insl
int3
leave
jne
loop
jmp
mov
fimuls
and
jns
adc
push
je
imul
repz
xor
jp
xchg
cmp
add
and
xor
push
stos
pop
cmpsb
cmp
adcb
xchg
fimull
pushf
movsb
pop
es
lods
sti
bound
pop
jp
push
cmp
popa
xchg
rclb
fwait
and
sub
jns
out
fcoms
cmp
pop
ret
push
hlt
pop
jp
xor
stos
or
dec
int
jne
push
inc
fdivp
cmp
test
xchg
inc
mov
mov
sbb
cli
jge
sub
push
or
cmp
xchg
and
push
outsl
push
outsl
or
adc
sub
shrl
pop
rcrl
jae
jle
movsl
addr16
test
mov
shl
bound
pop
scas
pop
inc
jns
sub
subb
fwait
dec
sub
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
repnz
add
adc
xchg
movlps
jno
ljmp
xchg
mov
or
pushf
inc
pop
jbe
int
lret
jp
add
pop
loope
mov
push
xchg
pcmpeqb
xchg
sub
jno
gs
pushf
std
or
repz
out
xorl
jp
rcll
fwait
outsl
jle
sbb
add
outsl
movsl
out
out
mov
add
int3
frstor
dec
mov
adc
cwtl
and
adcb
jl
stos
out
or
mov
adc
pop
cld
stos
repz
and
push
xchg
sub
sbb
pusha
fstpl
xchg
ss
leave
lcall
cmp
stos
pop
jg
jg
movsb
aaa
lret
test
dec
sub
jae
loope
xor
jb
mov
loope
out
push
pop
push
xor
cs
in
enter
mov
mov
xchg
mov
iret
cmp
xor
cpuid
fiadds
popf
jmp
xor
jnp
movsb
cmp
cmpsb
notl
pop
pop
lods
nop
pop
xchg
jmp
test
push
gs
lock
xor
outsl
sbb
shlb
movsb
shlb
imul
mov
fcmovbe
mov
pop
fs
call
popf
adc
cmpsl
repz
dec
fidivrs
mov
icebp
push
cmp
jmp
lods
cs
sbb
sbb
pop
inc
push
sbb
push
aaa
adc
pop
ds
sbb
push
jg
mov
mov
adc
in
cmp
pop
fistl
dec
xchg
mov
add
jo
add
adc
scas
mov
jns
inc
xchg
push
sbb
xor
mov
sbb
and
les
fsubrl
jmp
cmp
popa
insb
mov
pop
ja
movsl
faddl
adc
mov
push
and
lcall
mov
stos
xchg
mov
loope
int
jnp
mov
in
pusha
aad
subb
inc
decl
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
dec
insb
les
xchg
movlps
jns
loop
pop
lret
test
rorb
rolb
mov
push
loop
cwtl
test
fistpll
enter
xchg
sbb
xchg
outsb
add
sbb
pop
ljmp
cmpsb
pop
sub
push
inc
xchg
inc
stos
mov
sarb
xor
cltd
loop
data16
push
xchg
add
lock
and
push
add
cmp
jns
push
cmpsb
fldt
mov
out
push
push
aas
sbb
mov
inc
sahf
dec
mov
imul
pop
lahf
test
js
in
push
nop
mov
jb
push
adc
cmp
adc
jecxz
xchg
xor
fmull
pushf
loopne
vmovlpd
add
xchg
iret
loopne
rorb
daa
mov
mov
push
pop
je,pn
and
add
add
es
xchg
out
stos
xchg
add
dec
pop
int
jecxz
cmp
push
pop
rcrb
cmpsl
mov
or
push
mov
mov
sarb
xlat
cmpsb
repz
pop
arpl
push
jo
xor
cld
mov
push
jae
or
dec
shl
mov
push
movsl
push
mov
push
pop
jp
scas
stos
xchg
icebp
mov
mov
push
mov
cmp
popf
sti
xchg
adc
or
mov
dec
inc
mov
push
cmp
inc
clc
fmulp
xor
push
adc
mov
or
icebp
sti
cmp
cmc
sub
loop
cwtl
int
jnp
mov
mov
mov
imulb
push
and
inc
and
out
or
mov
pushf
into
or
mov
fists
cmp
adc
add
cmp
jb
aas
xchg
dec
ret
jo
sbb
mov
insl
mov
add
fidivs
dec
cld
test
and
cltd
sbb
jo
mov
pcmpgtd
sub
push
sub
lahf
gs
mov
mov
arpl
mov
pop
mov
sub
add
pushf
jecxz
push
pop
xchg
ret
add
addr16
popa
popf
xor
and
pop
sbb
mov
add
push
mov
aam
dec
or
xor
lret
add
add
je
repnz
add
add
adc
loope
jle
sub
ds
sub
or
pop
js
xchg
rcl
add
or
stos
jmp
mov
jns
test
mov
sbb
add
and
arpl
aaa
xor
or
call
lds
and
push
xor
std
into
int
and
dec
movb
orl
rorl
push
dec
or
sbb
rclb
stos
xchg
jmp
cltd
lahf
pop
jo
xchg
pop
xchg
cwtl
repnz
jmp
jnp
divl
or
cmp
xor
dec
outsb
into
mov
mov
fsubrl
add
nop
out
popf
cltd
mov
outsl
shll
sub
sbb
mov
add
mov
mov
mov
jb
cli
sub
inc
aas
dec
inc
leave
lea
dec
xchg
sub
and
mov
sub
xchg
test
scas
dec
dec
cwtl
lock
cmp
fisubl
pop
dec
inc
or
xor
call
pop
jle
js
ficoml
sbb
dec
int3
aaa
fisttps
inc
mov
push
or
call
mov
push
mov
repnz
jnp
arpl
pop
std
lret
adc
pushf
jge
mov
xor
movsb
jbe
xchg
mov
cmp
sbb
jns
pop
mov
call
dec
push
xor
mov
shrb
jbe
xor
pop
into
dec
and
int
cmpsl
repz
add
enter
xchg
add
into
in
adc
test
mov
sbb
pop
pop
xrelease
sub
call
jmp
add
outsb
inc
mov
inc
leave
mov
pop
dec
sbb
adc
and
fst
and
int3
mov
shrb
test
lods
push
xor
outsl
inc
lahf
adc
push
rcll
out
cmp
sbbb
inc
clc
inc
test
dec
aas
cmp
xor
cli
sub
cmp
es
add
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
sub
xchg
movlps
jp
in
loope
mov
into
jge
cmpsb
push
je
push
aad
mov
rcrl
and
jmp
scas
push
shrb
pop
pop
pop
mov
mov
jge
arpl
jbe
out
sbb
mov
enter
in
js
mov
xor
test
pop
fst
lea
clc
and
xor
dec
lods
dec
jne
aaa
cmc
xchg
push
icebp
pop
test
das
mov
cmp
and
push
inc
jg
leave
xor
jo
lods
mov
imul
cmp
iret
les
or
xchg
fs
jmp
push
jbe
sub
leave
xchg
popf
hlt
arpl
bound
mov
push
jg
sbb
mov
iret
mov
push
mov
jnp
mov
insl
mov
jae
aad
pop
pop
xor
jg
sub
outsb
mov
sbb
popf
shll
and
push
test
pop
add
pop
mov
pop
in
in
xchg
js
fsubp
mov
pop
js
dec
movsb
fmulp
push
fidivrl
shrl
sub
xor
or
jnp
out
mov
call
push
xor
imul
in
dec
cwtl
test
xchg
cmpsb
push
jge
or
cmp
loopne
xlat
pop
pop
push
lret
mov
xchg
xor
xchg
pop
imul
mov
bnd
ja
fiadds
xor
int
adc
clc
dec
cmp
fsubrs
sbb
cltd
inc
xchg
mov
lock
stos
pop
push
bound
sti
int3
arpl
adc
pop
hlt
sub
cwtl
jg
in
imul
xchg
mov
rclb
fistl
iret
decl
mov
push
sub
adc
test
out
cmpsl
mov
subl
mov
or
fists
or
faddl
push
xor
out
fsts
adc
stc
xchg
pop
xor
divl
loope
dec
or
je
jmp
imul
and
push
cmp
mov
popf
mov
xchg
je
sub
add
hlt
imul
jne
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
push
add
adc
add
adc
and
shrl
xor
stc
cmp
sbb
mov
cs
jnp
fdivr
test
pop
sbb
push
sbb
scas
sti
jecxz
fistps
incl
push
int
lahf
and
mov
mov
sub
add
mov
xchg
mov
lret
cmpsb
mov
and
xchg
jne
sbb
mov
out
imul
xchg
lds
sahf
insl
inc
movsb
or
dec
mov
fildl
push
int3
inc
add
fcmovnu
test
rorl
push
inc
mov
sbb
out
jnp
lock
movsb
xchg
adc
xchg
outsb
mov
stos
jecxz
push
ret
mov
dec
adc
cmp
roll
ss
cmpl
sti
jecxz
push
stc
daa
inc
xchg
ret
lret
fadds
mov
je
sbb
sti
aam
add
push
ljmp
jl
jo
mov
sub
push
pop
or
xor
outsl
mov
into
rcl
fs
push
add
sbb
xchg
imul
cs
push
dec
pushf
popf
add
or
decb
in
in
xchg
sbb
fs
into
push
loope
clc
adc
adc
daa
inc
jg
dec
repz
data16
pop
into
add
add
mov
pop
mov
mov
xor
pop
shlb
xchg
or
push
jns
hlt
movsl
sbb
leave
in
leave
push
mov
mov
push
pop
jge
call
xchg
jno
rcrl
ljmp
ja
sbb
add
decb
ss
sub
push
pop
xor
fs
sub
testl
into
cs
mov
cmp
jno
testb
xchg
sti
mov
add
pop
sbb
xchg
pop
inc
mov
jae
jmp
sbb
incb
fwait
bound
sub
out
test
lods
push
icebp
add
mulb
enter
icebp
fsubl
hlt
and
push
fimuls
mov
xchg
sbb
mulb
out
in
addr16
outsb
push
add
lods
pop
popf
pop
cltd
pop
gs
push
mull
sar
movsl
mov
mov
xchg
shrl
push
lret
sub
aad
mov
jne
fsts
push
std
inc
xor
icebp
sbb
imul
movsb
mov
faddl
pop
mov
or
les
push
das
xchg
jae
shll
aad
lock
push
daa
cwtl
in
test
mov
dec
inc
cmpb
xchg
xchg
into
test
fcmovb
aas
pop
jg
mov
and
iret
pop
and
dec
push
test
push
leave
sbb
int
lcall
sar
jno
call
les
jmp
xor
push
sti
cmp
jo
push
ds
push
dec
mov
lock
sbb
or
aaa
sub
cltd
push
sub
mov
mov
xchg
nop
les
fistpl
mov
hlt
rolb
inc
repz
popf
or
pop
pop
shlb
enter
out
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
aaa
jle,pn
cmpsl
adc
add
adc
sbb
out
repz
divb
bound
xchg
xchg
rcl
stos
sbb
or
out
inc
loopne
xchg
cmp
pop
test
clc
aaa
test
notb
and
dec
add
bnd
icebp
cltd
inc
inc
fistps
int
stc
ss
mov
mov
adc
and
adc
enter
cmp
add
test
or
test
out
stos
or
push
mov
adc
loope
inc
push
xor
add
cmp
int3
cmp
or
lahf
daa
dec
fcmovu
pop
sub
mov
iret
cli
push
leave
inc
push
mov
mov
mov
sbbl
lea
iret
inc
stos
dec
aam
ljmp
xchg
inc
push
insb
outsl
mov
add
jns
int
jg
inc
jo
xor
sbbl
cmp
adc
mov
into
adc
gs
in
inc
icebp
outsb
mov
out
movsb
pop
jmp
in
and
test
jb
mov
sub
fdivr
add
mov
xor
push
xor
call
test
pop
xor
dec
das
fistpl
imul
mov
lock
fldcw
add
add
pop
sub
das
xchg
push
xor
mov
push
push
xor
mov
mov
mov
or
jb
cmp
rcrb
adc
es
fcomps
xchg
xor
and
or
sbb
fwait
imul
sub
pop
int
fiadds
out
xor
and
testl
hlt
inc
jmp
add
cmp
int
or
notl
test
loopne
in
add
stos
sbb
mov
add
sub
push
scas
repz
pop
mov
movb
cwtl
xchg
push
add
sub
mov
andl
and
ffree
dec
aam
mov
test
or
sub
or
test
fldl
inc
lds
sub
add
inc
xchg
jp
xchg
ucomiss
in
mov
aas
mov
lds
add
sub
daa
ret
ja
and
mov
and
clc
movsb
negb
pushf
mov
sbb
imul
js
inc
mov
mov
pop
sub
and
ds
insl
push
pop
or
mov
mov
aad
cmp
rcr
add
push
insl
inc
jnp
jne
mov
test
enter
rcrl
cltd
xchg
mov
inc
sub
add
pop
ljmp
xor
je
pusha
cwtl
and
jae
outsb
js
cmc
jns
add
xor
and
xchg
shll
pop
addr16
xor
nop
cld
cwtl
das
fucomip
add
xor
push
add
int
jge
dec
fisubrs
pushl
xor
iret
out
jl
lahf
cmp
sub
mov
hlt
sbb
xchg
adc
and
xchg
cmp
mov
mov
pop
cmp
ds
or
or
ja
ljmp
stc
cli
dec
gs
mov
mov
xor
movsb
ss
mov
push
movl
xchg
nop
mov
and
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
sbb
adc
add
adc
call
jg
bound
sub
ret
testl
push
int3
icebp
mov
xchg
shl
mov
pop
sbb
xor
jl
stc
popa
sbb
jb
cmp
xor
add
scas
jmp
punpckhwd
jno
call
mov
inc
sbb
or
mov
or
cld
pop
insb
pop
arpl
inc
into
jnp
jle
sbb
mov
push
mov
insl
sbb
mov
sub
jg
or
es
stos
add
jne
jmp
rcrb
adc
sbb
roll
scas
cmp
int
ljmp
mov
std
insb
mov
jno
movsb
out
pop
leave
push
imul
pop
mov
fdivrl
cwtl
test
cltd
cmp
sbb
les
loop
lds
cmpsl
lret
scas
pop
sub
in
pop
cmp
push
sbb
inc
dec
add
loopne
rorb
adc
in
add
dec
add
adc
enter
andb
sbb
push
mov
imul
les
adc
sub
fidivrl
jecxz
adc
mov
test
shll
sbbl
into
sub
sbb
mov
pushf
or
dec
jbe
mov
enter
daa
rcr
andl
pop
insl
cwtl
dec
and
push
in
cwtl
ds
pop
pop
adc
lods
push
xchg
pop
mov
xchg
inc
loopne
iret
jns
inc
jge
inc
mov
xor
jno
std
pop
jno
sub
jecxz
xor
das
inc
sub
adc
roll
mov
loope
add
and
js
imul
inc
imul
xchg
lock
sub
lock
sahf
rcll
adc
dec
and
xor
sub
lea
cmpsl
mov
test
xor
in
int3
lods
push
out
jae
jno
lahf
jbe
sbb
arpl
inc
mov
aaa
xlat
mov
sbb
shll
mov
or
adc
movsb
xchg
ja
add
ds
push
out
dec
fs
lock
cmpsl
mov
je
sti
mov
popf
sti
ret
mov
xor
inc
inc
icebp
aam
and
add
adc
mov
lock
lods
rcrb
adc
sub
inc
push
pop
or
lret
cmp
cmp
dec
in
jg
rcrl
lods
dec
repnz
mov
jns
mov
or
es
in
push
or
loope
jecxz
push
lahf
pop
js
or
add
add
sti
ds
mov
dec
icebp
mov
add
xor
sti
pop
mov
push
jb
daa
es
mov
pop
int
shlb
rolb
in
inc
arpl
inc
gs
inc
in
enter
imul
sub
or
dec
add
push
loop
push
bound
inc
loop
loope
mov
cmc
ret
jo
add
push
or
dec
dec
adc
add
push
cmp
or
and
pop
dec
cmp
cmp
lahf
adc
ja
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
mov
out
enter
jne
adc
lret
sbb
movsb
data16
imul
fdivl
or
xor
lcall
mov
mov
fwait
outsb
scas
je
jg
xchg
aas
mov
push
mov
inc
cld
into
xchg
jp
fsubrs
and
mov
lea
jg
mov
outsl
adc
movsb
cmpsb
pop
arpl
or
sub
cmpsl
rclb
lods
inc
mov
add
outsl
mov
adc
push
mov
inc
mov
outsb
stc
js
stos
sub
dec
mov
xchg
mov
sbb
sbb
and
inc
aas
out
add
jno
out
stos
push
mov
aaa
ret
or
and
popf
mov
and
inc
jg
cs
dec
iret
dec
pushf
dec
ret
leave
add
stos
lcall
ret
add
add
sbb
dec
add
lods
jmp
or
and
jo
push
rep
cwtl
sbb
mov
bound
lods
jp
mov
fwait
pop
aaa
xchg
add
frstor
inc
xor
jno
dec
in
ja
jbe
push
cmp
adc
popa
test
arpl
inc
lock
adc
cmpsb
test
jg
repz
fnstsw
fcoms
push
and
ds
xchg
das
sbb
sub
into
push
mov
push
test
rcrb
stos
sbb
pop
inc
cmp
rol
sub
leave
inc
sbb
fsubrs
jns
andb
out
test
ret
cbtw
rcrb
mov
sbb
pop
mov
xor
std
ret
insb
mov
dec
sbb
mov
fmull
xchg
stos
dec
and
sbb
aaa
adc
pinsrw
rolb
iret
jl
jg
shll
das
leave
sub
adc
in
mov
sti
jb
adc
inc
dec
pop
mov
shrb
jmp
sub
das
stos
fwait
inc
cwtl
mov
push
pop
add
jecxz
mov
push
jl
das
bound
cmc
add
adcb
movsl
dec
out
scas
call
rol
xchg
dec
push
jl
xchg
push
pop
into
sahf
shrb
out
pop
xchg
loop
imul
sbb
mov
inc
clc
mov
sbb
fimull
mov
adc
inc
sahf
mov
push
sub
sbb
push
mov
std
or
clc
movsl
stos
hlt
cld
inc
pushf
in
adc
cld
stos
xchg
xchg
xchg
rcrb
mov
mov
int3
push
lcall
ljmp
add
test
jecxz
int3
mov
pop
js
int3
push
xor
cli
inc
cmp
mov
xchg
call
lret
xor
adc
into
pop
popf
popa
imul
dec
jno
dec
mov
pop
jns
imul
mov
lret
cmp
ret
xorb
jns
idivl
das
je
enter
inc
add
orl
jmp
rcrb
adc
pop
out
lock
out
jge
into
or
jecxz
xchg
enter
sahf
fisubs
jo
or
pop
mov
and
imul
cwtl
sbb
enter
mov
stos
jne
adc
addr16
dec
push
bound
imul
pop
cmp
enter
es
pop
adc
lcall
xchg
inc
pop
mov
pop
arpl
insb
shr
imulb
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
shrb
js
xchg
adc
jne
adc
icebp
addr16
loope
sbb
in
in
xor
ret
push
jae
jl
push
daa
hlt
das
xor
in
push
dec
in
cld
test
dec
fiadds
cwtl
fst
jne
adc
js
cmc
dec
in
fcompl
int
das
into
cmc
sahf
es
in
jp
pop
scas
mov
sub
adc
jg
pushf
xor
clc
jle
pop
mov
dec
ret
les
out
jbe
inc
fiadds
mov
jb
inc
jge
out
sbb
push
lods
iret
aam
mov
sub
sbb
call
pop
ja
aad
scas
and
ret
popa
test
push
dec
sub
jbe,pn
pop
xchg
pop
js
xchg
dec
cmp
or
addr16
leave
xor
aas
sub
xchg
mov
or
out
scas
jae
ret
ds
mov
clc
ss
fisttpll
pop
pop
pop
scas
inc
aad
lods
dec
xchg
and
addr16
sti
sub
scas
loopne
mov
mov
adc
xchg
movsb
or
xor
bound
add
ljmp
pop
test
and
and
dec
add
cmp
aad
cmpsb
ss
lods
lock
push
mov
cmp
mov
and
lods
push
cmp
pop
xchg
cmp
jmp
mov
ja
movsb
xchg
add
outsl
pop
fldl
and
pushf
xor
ljmp
mov
ja
pop
out
imul
pop
and
cmp
push
adc
int3
pop
int3
mov
aam
fsubl
push
aad
mov
sbb
cmp
or
iret
jnp
cmp
lcall
dec
lcall
jge
inc
mov
sbb
jb
aas
mov
push
or
test
mov
xor
jmp
out
xchg
test
enter
add
jge
add
cmc
jae
sub
xor
ret
inc
js
pop
lds
mov
push
pop
lret
sbb
and
inc
inc
xchg
sbb
cld
iret
in
fstpt
dec
mov
mov
in
aad
add
ja
psrad
xchg
clc
int
mov
mov
cmp
orb
xchg
push
or
jns
aas
adc
nop
cltd
add
lahf
into
and
out
push
or
mov
jle
push
outsl
or
dec
shll
pop
pop
xchg
xor
cmp
mov
mov
adc
stc
jg
inc
add
xchg
jg
rcr
addr16
in
fadds
push
imul
mov
jecxz
sbb
jbe
inc
test
mov
fimuls
lods
es
inc
and
test
dec
xchg
pop
sahf
mov
ds
add
fisubrl
dec
xor
dec
pop
jmp
add
inc
insl
clc
push
push
pop
mov
mov
fwait
jmp
pop
xchg
outsl
push
adc
mov
add
dec
fbstp
cmc
lods
xor
aaa
movsb
test
adc
cmp
sarb
fimull
ret
aaa
dec
sub
xorl
sub
fcompl
fstpl
cmp
jmp
cmp
cmp
pusha
push
adcl
cwtl
sub
das
enter
mov
lahf
mov
arpl
mov
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
aad
mov
fimull
adc
out
out
call
mov
sbb
mov
ret
outsb
dec
push
in
xchg
clc
aas
out
fs
and
cli
test
pop
lods
jmp
in
cli
shll
adc
clc
ljmp
fwait
mov
cmp
fisubrs
push
ret
test
add
dec
push
fidivrs
jmp
enter
pop
push
sub
test
pop
add
jo
pop
mov
shl
pushl
adc
addl
fistpll
xchg
jno
test
inc
in
leave
pop
cmpsb
aas
flds
out
daa
pop
loope
inc
jecxz
ljmp
lock
lods
loope
xor
ss
mov
fs
sub
mov
dec
ss
fists
or
mov
pop
stos
mov
pop
jp
in
cmpsl
pop
lret
cld
adc
lret
hlt
add
divl
pop
aas
mov
sbb
push
out
pop
icebp
out
push
stc
mov
inc
fwait
sbb
imul
pop
movsl
cmp
lods
aaa
movsbl
mov
push
fisubrs
jle
aas
and
adc
and
mov
xchg
cmp
int
cld
ror
es
fists
fsubs
popf
add
rorb
lret
dec
rcll
mov
jmp
pushf
push
sbb
cmpl
fistps
dec
mov
ljmp
pop
outsb
jle
aad
xchg
rorl
fmuls
cmpsb
nop
fsubr
jg
in
pusha
sbbb
ja
sahf
mov
in
pop
sti
mov
jl
testb
pop
jle
jae
inc
mov
cmpl
jmp
mov
dec
pushf
xor
xor
add
scas
ds
pop
int
mov
or
mov
adc
cmp
ficoml
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
stos
sarb
xchg
adc
movlps
push
js
loope
cmp
faddl
js
sub
adc
mov
rol
sbb
lahf
mov
or
loopne
test
loopne
sub
sti
stos
insl
sbb
add
mov
popf
fisttps
mov
stos
cmpsb
sti
mov
scas
jnp
mov
push
xlat
add
mov
sbb
in
add
jne
in
daa
xor
mov
jg
cmc
addr16
dec
mov
lods
test
or
jae
sti
push
mov
pushl
and
and
aad
sub
cmpsl
jb
in
test
andl
fistpl
or
jge
mov
push
mov
sahf
jl
aas
stos
scas
loop
mov
push
mov
daa
jae
mov
repz
xor
icebp
mov
push
push
and
ljmp
jno
dec
xchg
cmc
mov
mov
jo
xchg
mov
add
mov
movsb
sti
test
add
inc
jmp
movb
dec
fdivrl
sbb
imul
mov
fcomps
mull
in
push
out
repz
inc
jmp
sbbb
dec
dec
loopne
mov
dec
or
insl
cmpsl
ret
scas
sub
repz
or
mov
adc
push
mov
pop
and
mov
aaa
stos
and
mov
popa
ret
push
test
into
loope
push
sti
aam
mov
sub
andl
xor
ret
sub
ja
mov
scas
sbb
add
inc
mov
fbstp
push
cmp
addr16
inc
aaa
jb
push
mov
adc
aas
jg
inc
aam
xchg
inc
aad
sbb
adc
cmp
push
xor
lret
or
psrlq
inc
mov
xor
dec
int
aad
xchg
cmp
in
bound
int
out
xchg
fwait
jle
sahf
jno
add
in
xchg
out
pushf
ljmp
mov
xchg
in
fwait
push
test
jg
mov
pop
in
out
sbb
fcoml
lods
mov
in
dec
into
jle
cmp
rclb
xor
loop
xor
mov
cmpsb
jl
and
mov
filds
lcall
push
inc
add
test
add
add
cli
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
jae
stos
sub
adc
decb
adc
pusha
push
pop
sbb
sahf
movsl
xchg
dec
fnstsw
pop
loop
mov
sbb
sub
mov
or
jne
inc
jmp
imul
xchg
ret
mov
roll
pop
icebp
sti
mov
push
pop
and
addr16
sbbl
repnz
mov
dec
insb
xchg
popf
shrb
daa
lcall
pop
ljmp
cmp
cmp
add
out
addr16
shr
in
or
mov
sbb
rorl
stc
sub
cwtl
mov
mov
jg
in
pusha
clc
fisttpll
sub
or
inc
or
mov
jmp
mov
cwtl
mov
and
xchg
mov
or
xor
xchg
mov
mov
adc
pop
ficoms
jae
movsb
sub
in
sahf
mov
cmp
frstor
out
ret
and
jp
mov
inc
push
fdivr
mov
outsb
fwait
out
data16
dec
fistpll
jmp
lds
int3
idivb
sahf
sub
adc
xchg
clc
daa
loopne
movsl
cwtl
jle
jb
subb
xor
jne
pushf
lea
and
mov
lods
cmc
xchg
cwtl
mov
cmp
ss
mov
mov
fidivrs
scas
mov
dec
jbe
xchg
pop
mov
and
and
fnstsw
jle,pt
dec
clc
add
jns
lret
ja
ret
sbb
pop
sahf
mov
sbb
pop
pushf
xor
or
and
aas
sbb
jl
je
pop
xor
sti
pcmpgtd
aaa
data16
cwtl
in
mov
mov
push
push
push
mov
adc
dec
dec
mov
add
adc
aaa
or
lock
ficompl
fbstp
and
js
cltd
in
and
inc
iret
fsts
pop
imul
dec
int3
ja
jp
daa
pop
repnz
or
dec
pop
ret
and
dec
add
pop
fwait
and
cmc
test
adc
and
andb
lock
clc
cld
pop
adc
pmaxsw
sbb
adc
cmp
stos
sub
push
adc
cmp
stos
cmp
and
jns
or
mov
daa
mov
or
add
sbb
pop
mov
pop
call
mov
add
loope
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
cmp
jnp
adc
movlps
stos
or
insb
or
jbe
dec
out
jmp
gs
rol
ds
adc
inc
cmc
inc
or
pop
leave
xor
and
repz
dec
mov
sub
fdivr
push
jle
pop
arpl
cmp
das
es
pop
sbb
jae
mov
dec
cmp
addr16
mov
adc
data16
xor
cmp
ret
cs
loopne
dec
xor
adc
cs
aam
into
add
call
std
lret
pusha
cmp
jbe
cmp
inc
cmp
ds
lds
inc
lret
mov
outsl
fistps
dec
mov
dec
jle
push
pop
aam
mov
jne
or
movsl
xor
lods
call
add
dec
cs
in
mov
scas
arpl
adc
sbb
or
inc
xchg
sbb
jp
push
cmpl
fimuls
or
out
lods
push
enter
out
add
fsubl
stc
cltd
add
test
or
push
cmp
pushl
out
pusha
lock
mov
adcl
mov
xor
ffreep
jg
adc
mov
lods
mov
lods
mov
cmp
cmp
sbb
jl
insb
mov
inc
pop
pop
mov
sub
mov
stos
or
sahf
push
lret
mov
scas
call
je
cwtl
jl
cwtl
arpl
xor
jmp
mov
fwait
movsl
and
mov
adc
idiv
pop
add
pop
pop
mov
mov
and
loope
jae
cmp
ss
mov
mov
sub
insl
and
int3
testl
inc
and
test
sub
add
imul
mov
sbb
sar
icebp
jl
push
lds
pop
popa
ds
lock
outsb
mov
push
pop
sbb
mov
mov
test
mov
outsl
lret
and
sbb
aaa
cwtl
arpl
sub
pop
sub
and
add
push
pushf
sahf
in
fcmove
testl
jmp
into
lahf
sahf
insb
pop
scas
xchg
rcr
and
mov
push
loopne,pt
fwait
and
outsb
push
insb
cmp
in
add
imul
mov
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
jno
mov
decb
adc
mov
mov
jbe
inc
cwtl
pop
pop
xchg
push
test
mov
stos
int3
dec
subb
add
pop
or
fdivrl
mov
imull
insl
sub
ret
cld
repnz
scas
fidivrl
fs
pop
or
negb
and
cmc
int
push
cmp
dec
js
pop
in
mov
lcall
dec
pop
std
lret
xchg
into
ds
sti
in
fisttpl
ficoms
push
or
out
mov
popf
inc
mov
aaa
out
movl
aam
pop
xchg
xor
adc
popf
or
push
out
xchg
and
push
iret
adc
sub
fcmovu
or
data16
loope
sub
mov
negl
bound
or
or
popa
shl
ja
jae
adc
jp
out
push
add
push
test
jns
push
mov
mov
mov
inc
out
into
in
and
in
in
in
cmpsb
sbb
les
add
je
cmp
fsubrl
jge
ret
shlb
loop
ficompl
cmp
and
hlt
xchg
lahf
sbb
fisubs
nop
test
lods
cmp
hlt
leave
pop
lock
inc
pop
dec
adc
cmc
and
sbb
xorb
pextrw
mov
inc
xchg
add
leave
shll
mov
dec
push
stos
stc
sbb
push
jle
and
movsl
xchg
mov
bound
sub
or
sub
push
sub
in
xchg
xchg
in
mov
mov
nop
push
push
lcall
imul
xor
and
xchg
les
js
mov
test
mov
xor
pop
loopne
xor
int
icebp
adc
fs
and
jne
test
hlt
jg
fistpl
insl
leave
in
repnz
rcrb
xlat
mov
int
ret
xchg
jb
fisubrs
popf
mov
ss
std
cmpsl
jae
push
and
sub
js
push
iret
push
fwait
pop
loope
mov
subb
mov
xchg
cmp
in
mov
mov
push
dec
push
mov
push
stos
push
ror
push
outsl
in
sti
pop
test
jp
fsub
inc
int
mov
inc
mov
pusha
lcall
lea
mov
or
inc
sti
int
sub
mov
pusha
shl
call
mov
jmp
js
cmc
repz
sub
out
out
stos
loop
adc
decb
adc
xchg
sbb
icebp
sti
inc
pop
inc
lods
mov
int3
frstor
fsubp
or
aas
mov
xor
adc
cmpl
aaa
xchg
mov
mov
mov
imull
push
clc
cmc
icebp
stos
pop
aad
xor
push
mov
cld
ret
je
pop
and
arpl
shrl
jmp
outsl
sub
adcb
aam
pop
cs
fcmovb
cltd
mov
sub
stos
dec
faddl
negb
dec
ds
fcomps
test
pop
les
out
fwait
cmc
leave
push
mov
out
push
out
loop
add
fmuls
or
xchg
cwtl
ljmp
xchg
aaa
and
mov
cwtl
sbb
cmp
dec
sahf
enter
push
imul
inc
jl
adc
fwait
push
testl
jg
lds
test
lock
inc
lcall
mov
por
out
jp
pusha
pop
outsb
aaa
or
mov
je
es
fs
inc
push
mov
pop
aaa
call
inc
jbe
mov
sub
rcrb
xchg
fsubrs
sbb
mov
xor
daa
stc
stc
xchg
cmp
dec
out
out
sarb
fdivp
cmpsl
pop
and
mov
pop
jle
das
insl
cmpsb
leave
sub
mov
lock
lahf
in
xchg
insl
jo
or
scas
xchg
jle
aad
or
addb
lock
sub
pop
pushf
addb
jno
movsb
arpl
pop
mov
mov
dec
pop
jg
sbb
push
cmp
mov
pop
jns
mov
ficompl
out
enter
jnp
inc
cmpl
pop
scas
pushf
rcrl
xchg
std
fwait
repz
add
adc
rcll
mov
insl
lock
jecxz
jbe
or
sub
sbb
lods
ds
idivb
inc
clc
and
jecxz
test
lea
hlt
cltd
hlt
mov
ret
testb
xchg
lret
cmp
inc
out
jge
repz
jg
out
cmpl
fists
fmuls
pop
push
das
xlat
and
movsb
call
lret
jo
sti
cmpsl
mov
aad
cmp
sbb
or
xchg
adc
mov
dec
lret
lret
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
mov
decb
adc
js
fwait
loopne
clc
adc
mov
adc
loopne
fiadds
mov
rorl
fsubrs
vandnpd
int3
sbb
pop
idivl
fmull
inc
mov
addb
and
in
enter
iret
cmp
test
ljmp
mov
sub
xchg
std
or
repz
mov
cld
sbb
jge
push
test
pop
mov
xor
aas
cmp
call
popf
add
movsb
jmp
cs
pop
jecxz
jp
add
push
sub
or
fsubr
pop
ficompl
lock
subl
call
rcrb
data16
jne
roll
dec
sub
xor
lods
ja
inc
fisttpll
stc
bound
jg
push
add
or
cmp
out
jle
pop
outsl
cmc
test
add
sar
arpl
or
stc
mov
cli
sarb
test
cmp
adc
cwtl
jo
and
insb
dec
dec
scas
jg
push
sub
out
pop
in
or
out
push
popf
in
repnz
adc
stos
shr
aas
xchg
je
orl
pop
cmc
leave
daa
fldcw
sbb
jo
std
jmp
adc
add
out
lods
sbb
push
stos
decb
xchg
dec
xchg
lods
mov
dec
inc
imul
push
les
aad
sub
push
movsl
cld
push
imul
lods
mov
dec
sarb
dec
jns
loope
pop
sbbl
jae
imul
xor
mov
fs
cwtl
fistl
dec
xor
in
pop
dec
adc
mov
rol
sbb
sbb
repz
inc
aad
jae
mov
lods
and
dec
loope
jnp
mov
add
jl
lock
jbe
mov
push
in
mov
stc
outsl
shll
or
insl
rcrl
sti
fwait
sub
mov
mov
mov
adcl
jne
mov
lret
xor
mov
stos
fwait
sti
pop
sub
inc
sbb
das
adc
xor
das
xor
aas
rcll
incb
jmp
loopne
lds
outsl
or
sbb
jmp
push
fs
movsb
int
shrb
mov
inc
xchg
or
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
in
and
mov
decb
adc
ja
add
mov
jae
ss
push
mov
frstor
dec
xchg
divb
cmp
jmp
aaa
add
es
push
xor
in
xchg
stc
int3
pop
pushf
pop
mov
inc
xchg
add
or
adc
push
jmp
sub
stos
inc
subl
lret
stc
fbstp
loope
jecxz
jns
lock
int
pop
aaa
and
ss
inc
push
sbb
adc
lea
or
xor
cmc
mov
mov
pop
xchg
lock
popa
xchg
mov
push
sbb
stos
imull
mov
add
in
in
pop
pusha
sub
xor
cmpsl
mov
repz
pop
adc
rorl
mull
add
mov
or
and
dec
xchg
das
mov
and
xorl
xchg
cs
jne
jmp
mov
or
sub
aaa
ss
add
fwait
into
pop
and
pop
jg
fs
xor
push
mov
sti
xor
dec
push
out
sahf
pop
cmc
add
mov
sub
push
push
das
fstpl
cmp
ret
dec
xchg
xor
scas
out
andl
xchg
adc
dec
sbb
aam
mov
xor
nop
out
adc
lahf
arpl
adcl
add
pusha
push
lds
pop
out
dec
xchg
aaa
or
popf
or
addb
test
cmp
mov
mov
xor
fmuls
incl
mov
push
dec
addr16
sti
andb
cmp
sub
ljmp
fxch
pop
ret
jns
inc
pushf
cmp
push
loop
imul
insb
lods
decb
test
pusha
cmp
mov
aad
push
test
pop
xchg
jno
fimull
scas
mov
ljmp
push
mov
xor
int3
imul
xor
cmp
add
mov
repnz
push
sub
roll
ds
cmp
loope
xor
repz
adc
in
loope
jb
sbb
sbb
mov
js
aas
iret
lret
xor
es
sbb
js
insl
push
aam
addl
and
decl
clc
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
sbb
push
mov
decb
adc
push
xor
call
or
insl
xchg
popf
cmp
mov
and
jne
adc
adcl
push
fcomps
ss
or
je
adc
out
test
push
sbb
xchg
jae
jns
dec
push
mul
pop
mov
cs
adc
pop
lock
arpl
in
call
xor
cmp
inc
xchg
cmpsb
dec
add
jmp
pop
pusha
out
sbb
rcr
iret
add
outsb
lret
rclb
or
repz
xchg
icebp
mov
sbbl
enter
subl
cmc
sub
pop
mov
dec
dec
data16
or
xlat
pop
lahf
inc
add
or
fcomps
add
mov
lods
adc
push
dec
mov
mov
sub
jle
into
jae
xchg
xor
adc
sbb
xchg
xor
iret
movsl
mov
adc
dec
sarl
xchg
mov
lock
fdivs
jmp
ffree
mov
xchg
cmpb
popa
mov
test
insb
pop
inc
pop
das
repnz
mov
insl
jns
jmp
in
aad
cmpsb
pop
loop
push
sub
mov
push
cmp
sbb
popf
cld
dec
and
mov
add
stos
lods
inc
sbb
sbb
mov
jge
scas
sub
aas
incl
scas
add
test
outsb
adc
insl
in
and
adc
cmpsl
std
fidivrl
cmc
fistps
lret
icebp
mov
pop
mov
jno
cmpsb
fsubl
cwtl
mov
ficomps
lret
movsb
rcrl
loopne
or
xor
mov
mov
lcall
cmpsl
push
and
or
js
or
loopw
mov
ficoml
imul
push
sub
inc
pop
leave
push
fwait
pop
jo
jl
push
cmc
jb
xlat
push
js
mov
lds
fwait
push
inc
lock
inc
int
lret
cmp
sbb
aam
cmp
enter
lret
mov
sahf
int
lock
xor
fmuls
cmp
or
dec
or
push
dec
scas
push
test
movsb
daa
jmp
imul
inc
scas
push
pusha
data16
mov
movl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
lret
jp
adc
decb
adc
sbb
sbb
insb
ret
sbb
test
xor
addr16
in
push
xor
lds
xchg
xchg
cli
es
push
or
and
dec
push
add
jmp
adc
ljmp
mov
or
push
call
pop
jae
sbb
es
ja
and
aad
mov
dec
sbb
or
mov
inc
mov
jbe
xchg
or
push
xchg
jecxz
lret
mov
cmp
jmp
icebp
adc
push
lds
push
out
lods
pop
scas
in
adc
jne
sub
shl
test
xchg
cmp
call
outsl
popa
ss
lss
mov
out
fwait
repz
jo
addr16
xchg
dec
je
mov
pop
outsb
sub
fcompl
push
jg
mov
mov
push
jle
xor
xchg
lds
ja
mov
pop
push
jbe
and
xchg
mov
dec
outsl
call
adc
mov
mov
pop
cmc
nop
mov
xchg
mov
push
mov
inc
fildl
pop
cmp
jno
mov
and
inc
orb
insb
loope
cmp
fistpl
rorb
jne
xchg
adc
add
not
int3
fwait
insb
pusha
or
cld
in
mov
sub
cltd
mov
or
jbe
test
in
jmp
fidivl
aad
adc
xchg
adc
popa
push
fiadds
push
sahf
or
into
fbld
lock
sbb
fisubl
xor
xchg
inc
xchg
xchg
jae
add
and
mov
jae
cmp
cmc
mov
jmp
fcmovbe
loop
call
dec
mov
insb
pusha
rorl
cs
arpl
pop
cltd
outsb
inc
mov
test
fmulp
jns
dec
inc
xchg
push
sahf
fmull
out
push
sbb
cwtl
xchg
inc
lock
dec
lahf
lock
js
sbb
sbb
fistps
stos
shlb
int
rolb
mov
and
std
and
dec
jo
or
je
outsl
push
les
out
test
or
cld
sar
mov
out
cmp
pop
and
icebp
lcall
push
cmpl
and
ret
scas
stc
mov
fistl
incb
add
cmp
pop
incl
add
add
add
xorl
js
cmp
pop
adc
decb
adc
cmp
std
push
icebp
lock
cmc
fistpll
jb
cbtw
sahf
mov
fistl
and
lret
mov
shll
adc
adc
sahf
aam
cmp
mov
ss
call
sub
call
add
das
sbbl
subb
loop
aas
cmp
pop
mov
cmp
in
repnz
fwait
test
jg
xor
imul
jb
loope
addr16
sbbl
xor
shrl
imul
dec
in
fs
test
sub
xor
mov
mov
mov
into
xchg
cmpb
mov
ds
repz
jge
outsl
and
pop
repz
rcl
mov
add
mov
or
sub
xor
cwtl
movsb
dec
inc
outsl
adcl
mov
pushf
pusha
je
xchg
shll
and
cltd
sbb
std
dec
bound
push
movsb
mov
mov
arpl
pop
jle
pushl
sub
sahf
xor
pop
jl
adc
jbe
xchg
insb
xchg
aam
fwait
outsb
out
nop
cld
shrb
mov
cld
jbe
cmp
add
enter
jbe
pushf
pusha
arpl
inc
movsl
loope
test
mov
invd
mov
movsl
cmp
imul
fimull
lods
xorb
dec
mov
inc
setnp
clc
jnp
sbb
xchg
adc
ds
and
sbb
mov
add
push
xor
or
jbe
xchg
sbbl
fbstp
mov
xchg
jmp
inc
mov
xor
push
aas
and
cmp
aad
inc
mov
test
fildl
das
sti
loopnew
mov
cltd
jne
sbb
xor
mov
inc
fstpl
sub
ror
mov
leave
out
arpl
aaa
and
ljmp
push
js
sbbb
xchg
jo
jge
gs
and
loopne
mov
pop
inc
inc
jno
mov
stc
movsb
mov
sub
adc
cmpsb
fwait
or
lret
dec
scas
movsl
cmp
lods
or
add
pop
hlt
push
cld
mov
xchg
xchg
rorb
mov
mov
inc
cmp
jmp
icebp
bt
cmp
sbb
adc
decb
adc
push
xchg
int3
xor
mov
mov
mov
ds
cli
dec
cmp
dec
cmc
fwait
lret
hlt
mov
cli
cs
pop
add
xor
movsl
shll
movzwl
xchg
cltd
fiadds
data16
lds
shlb
aad
mov
xor
movsb
cmpsl
xchg
dec
movsl
push
pop
dec
cs
jmp
pop
cmp
mov
dec
sahf
cmp
xor
rcrb
or
movsb
sub
xchg
cmp
in
loopne
rorl
mov
out
xchg
scas
jbe
add
jno
fstpl
cmp
adc
lret
test
das
in
xor
mov
dec
addr16
pop
add
mov
inc
xchg
pop
xchg
fadds
jns
fs
movsb
ret
aad
mov
enter
mov
leave
mov
cmp
mov
dec
push
push
inc
pop
enter
mov
aam
push
lret
mov
in
or
or
mov
fildl
inc
les
cmp
cs
add
dec
mov
xchg
out
out
movb
cmp
lea
sbb
inc
shrl
lock
repz
lods
adcl
shlb
sub
sahf
add
jne
fiadds
fimull
adc
cltd
ret
pop
enter
leave
or
xor
bound
out
ljmp
shl
mov
dec
xchg
out
or
inc
sub
or
jns
sub
fwait
mov
decl
mov
push
mov
popf
into
nop
clc
nop
int
pop
or
cltd
je
sbb
and
sub
mov
dec
gs
popf
dec
xorb
xor
jns
mov
in
xor
pop
sub
mov
ss
ljmp
inc
icebp
xchg
mov
cmp
mov
xor
fs
mov
nop
or
bound
test
xlat
test
and
pop
out
mov
out
stos
push
push
jle
fisttpl
xchg
sbb
xchg
stc
push
pop
inc
sub
dec
xlat
enter
lea
in
iret
push
cmp
inc
xchg
mov
outsl
mov
loop
jg
dec
cmpsl
jno
jno
cmpsb
addr16
pushw
fadds
xlat
adc
movsl
sbb
mov
lcall
scas
mov
cs
loopne
popa
and
movsb
or
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
jl
lods
daa
dec
adc
decb
adc
test
dec
xor
stos
stc
dec
adc
pop
jo
data16
bound
sub
mov
jne
cwtl
push
outsl
or
sbb
iret
aam
sub
leave
int
popa
je
aam
bound
les
push
mov
sub
sbb
shrb
in
xor
pop
add
xchg
jecxz
lods
push
in
adc
cmp
in
clc
or
mov
mov
pop
and
test
jne
loop
andb
sbb
sub
adc
and
jne
cwtl
nop
gs
ds
jecxz
push
ret
and
jbe
inc
mov
fnstcw
std
mov
jecxz
xor
mov
testb
add
pop
jl
inc
jns
push
pop
out
add
cmp
repz
mov
jp
shlb
xor
sbb
dec
icebp
ret
xchg
leave
jp
or
lret
mov
jo
cltd
sahf
clc
xchg
mov
push
xor
int
add
and
pusha
push
pop
xor
lds
popf
mov
shrb
mov
push
push
and
cmp
mov
pop
add
mov
dec
add
lcall
pop
inc
mov
negb
je
les
leave
subl
into
sbbl
clc
int3
rorl
mov
cmp
inc
test
out
mov
xorl
mov
sub
test
nop
movsb
add
jge
loopne
and
inc
or
movsb
dec
jno
lcall
stc
push
sbb
icebp
pushf
int3
mov
cmp
or
pop
inc
lcall
push
mov
ja
stos
test
outsl
lods
sub
ja
mov
ficomps
or
add
cmc
jmp
fwait
sahf
mov
lock
xor
jle
cmp
mov
aam
stos
dec
mov
sahf
and
test
sahf
pusha
mov
int3
pusha
arpl
dec
sub
dec
jmp
ret
adc
adc
test
movsb
cmp
jbe
cli
repz
jg
sbb
push
lcall
jnp
pop
and
cld
xchg
push
xor
and
lods
les
shlb
stc
adcb
push
inc
add
ljmp
and
mov
pusha
lods
adc
fildll
movsl
imul
sub
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
dec
push
push
dec
adc
decb
adc
icebp
adc
jle
stos
in
xor
jo
fmulp
stc
cmp
dec
mov
inc
int3
dec
sbb
popl
movsl
ret
in
shll
aam
stos
sub
xchg
sbbl
mov
mov
addb
inc
cmpsb
xor
insl
dec
fsub
pusha
mov
nop
sub
fdivr
rcl
shll
aaa
push
cwtl
pop
lods
and
out
div
jle
sub
test
stc
pop
test
pop
cmp
mov
fdivs
xchg
rcl
mov
add
and
xor
push
pop
inc
xor
jo,pt
adc
aam
lods
shlb
test
mov
aam
into
mov
jle
aaa
pop
cmp
int3
xchg
and
push
jbe
sub
or
inc
or
outsl
sbb
in
das
inc
subl
mov
and
mov
mov
cmp
xor
xor
sbb
mov
cmc
out
xchg
add
arpl
sub
cmpl
push
ljmp
mov
and
jne
xchg
mov
sbb
and
pop
inc
pop
push
xor
cmp
mov
aaa
pop
ret
add
shl
clc
pop
sbb
loopne
add
dec
xor
xchg
adc
enter
jl
sbb
std
pop
inc
iret
cmp
xchg
hlt
and
xlat
je
sbb
in
mov
movsl
mov
in
push
or
out
sub
dec
dec
test
cmp
sbb
inc
xchg
xor
jnp
adc
mov
sub
or
addr16
xchg
repz
clc
xor
imul
fistps
out
pusha
sub
push
jnp
mov
mov
inc
neg
xlat
cmp
cmpb
test
and
movsl
pop
or
mov
int
movsb
mov
arpl
icebp
add
mov
lea
add
pop
xlat
stos
inc
xor
popa
ret
jns
ficoms
inc
lds
shll
mov
cmpsl
clc
ret
nop
enter
push
adc
push
push
push
fst
shll
fs
inc
sub
ljmp
fcomip
addr16
mov
xchg
sub
mov
jl
stos
cmpsl
mov
leave
cmp
stos
call
test
xor
or
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
adc
jg
rcrb
sbb
mov
mov
pusha
pop
das
in
and
sarb
sbb
adc
pusha
pop
loope
popa
mov
sbb
pop
stos
nop
test
aas
mov
test
pop
cld
mov
out
mov
cmp
cltd
ficomps
mov
adc
fs
xchg
cmp
sub
jno
xor
stos
out
mov
cld
stos
cmp
xlat
ja
add
mov
cmp
ficoml
mov
sahf
js
sub
cmpsb
neg
cld
and
mov
iret
pop
je
sbb
inc
or
xchg
adc
mov
mov
mov
fidivrs
out
dec
roll
sub
daa
cmpsb
sub
ret
mov
push
fidivs
inc
jg
lea
push
jl
ret
int3
and
mov
pop
adc
and
fs
push
shrl
in
jno
add
aaa
add
and
mov
shr
xor
in
fnstsw
dec
adc
mov
push
aas
pop
insl
push
test
sbb
xlat
shll
mov
mov
pop
icebp
cmpsb
ja,pn
imul
leave
lods
out
xor
pop
xlat
xchg
xor
cld
es
mov
push
push
repnz
insl
xchg
sbbb
and
jmp
sbb
sahf
test
push
mov
mov
pop
mov
inc
sbb
mov
lret
xchg
mov
pop
xchg
fnstenv
cmpsb
jl
ss
pop
or
mov
lock
add
enter
popf
decl
push
lock
lahf
push
ss
movsl
ret
repz
mov
lods
adc
xchg
jno
push
rsm
outsb
or
fsubrl
int
addr16
pusha
arpl
mov
and
xor
and
adc
sbb
jb
cmp
mov
cltd
addb
test
addr16
in
lret
and
shll
mov
sub
fimull
add
push
and
mov
or
cmp
test
and
xchg
mov
clc
loopne
call
or
pop
icebp
mov
stos
jecxz
mov
rclb
jecxz
jmp
mov
lods
loope
sbb
mov
add
inc
adc
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
pop
imul
mov
bound
lods
addr16
in
mov
inc
mov
mov
pop
xor
jp
mov
lea
sbb
loopne
sbb
roll
hlt
mov
sbb
into
inc
fstps
shll
pop
inc
sbb
ljmp
adc
frstor
scas
xchg
out
inc
out
in
mov
pop
xor
add
cmc
mov
call
mov
push
sub
ds
mov
ds
add
ret
dec
cs
sub
jl
pushf
movsl
int3
mov
leave
rcr
aaa
jns
pusha
push
test
imul
lea
add
and
dec
lods
scas
push
out
xchg
and
jnp
mov
push
jle
adc
sbb
je
inc
imul
sar
arpl
mov
gs
test
dec
es
mov
add
pop
scas
lahf
ss
push
andb
inc
mov
ficompl
out
ret
arpl
jg
out
push
lret
sbb
push
mov
inc
into
mov
pop
jmp
stos
or
cli
aas
adc
jl
and
or
sub
dec
add
call
and
sti
mov
jns
stos
int3
push
mov
fmull
mov
or
repz
xchg
lcall
sub
xor
ljmp
fwait
aaa
mov
xchg
mov
mov
xchg
sub
push
pop
mov
cs
rcll
outsl
mov
push
test
and
es
mov
clc
sub
rcl
lahf
fnsave
movzbl
sbb
jae
out
lods
in
in
add
inc
shrl
addr16
inc
mov
xchg
jle
inc
sbb
sti
in
jp
xchg
xor
insl
push
pop
xchg
adcb
fisubrs
mov
out
push
sbb
push
dec
cmpl
sub
mov
aaa
outsl
mov
ljmp
push
or
adc
mov
dec
imul
and
arpl
int3
adc
js
add
jmp
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
fstpt
lods
sarb
adc
mov
enter
push
mov
fnstcw
out
cmpsb
fisttpl
insl
ljmp
mov
xchg
lea
sahf
pushf
sub
push
xlat
mov
aam
dec
xchg
js
jg
jae
push
in
in
jo
ss
les
iret
inc
outsb
or
cmc
push
aad
and
test
je
sub
inc
xlat
adc
jb
xchg
mov
fwait
mov
mov
ror
adc
cmp
push
notl
or
push
dec
imul
loope
xchg
pushf
sti
inc
in
ficoml
hlt
inc
mov
pop
push
pop
hlt
cmp
je
mov
lods
call
les
sbb
into
in
xchg
pop
scas
inc
dec
subb
or
out
push
sbb
jmp
xchg
xor
xlat
in
in
das
jbe
cs
pop
je
bound
fimull
std
sub
js
dec
lahf
sub
cmp
sub
adc
std
push
mov
jae
ror
add
jmp
out
mov
enter
mov
jo
cmp
xchg
out
mov
adc
push
inc
imul
cmp
lock
outsb
push
mov
fcompl
incb
mov
push
rcll
stc
or
push
xchg
cmp
rcll
mov
lahf
adc
add
scas
or
inc
cmp
dec
push
stos
cmpsl
pop
call
push
popf
into
mov
repnz
insl
xor
and
or
cmp
adc
pop
into
roll
imul
test
addr16
push
lods
in
data16
push
pop
sbb
pop
sub
or
and
mov
psubusb
jmp
aas
adc
hlt
cmp
jno
sub
mov
sarl
mov
test
mov
dec
xor
mov
stos
filds
mov
fs
pop
jg
addr16
into
push
add
test
pop
les
and
dec
rclb
daa
sbb
popf
pop
sbb
push
pop
enter
iret
sub
jle
loop
dec
cmp
cmp
pop
cmp
fwait
ret
jne
arpl
mov
push
imul
pop
mov
cmpsb
push
jbe
loope
rolb
out
fcmovne
jl
xchg
daa
in
das
cltd
mov
cmp
cmpsb
cli
mov
inc
lcall
add
sub
fcmovnbe
push
pop
push
mov
sbb
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
pop
push
push
cmp
adc
aas
push
pop
notb
stc
je
std
jge
mov
cmpl
xor
push
shr
call
jae
xchg
rorb
lock
outsl
lret
inc
sub
dec
inc
xor
pop
mov
inc
add
add
lock
call
pop
movl
xor
adc
mov
ja
xchg
shrl
pop
out
int
hlt
dec
mov
inc
mov
out
pop
sbbl
scas
pop
lahf
jecxz
outsb
aas
stc
popa
sub
pusha
je
push
cmpsb
cmp
xor
mov
pop
ljmp
fcom
mov
insl
js
std
dec
into
pop
inc
dec
jb
push
aaa
or
inc
adc
sub
inc
pop
xor
out
cmp
scas
push
pop
in
fistps
dec
or
jne
sbb
fbstp
mov
jg
repz
mov
push
add
sahf
jnp
int3
enter
sub
mov
lds
add
mov
jg
inc
stc
daa
adc
or
fldenv
jecxz
pop
inc
pusha
ljmp
int
loope
push
inc
mov
ss
mov
ret
int3
lret
jo
test
pop
in
adc
clc
pop
xchg
dec
and
jnp
dec
cmp
mov
and
aad
fsubrl
jbe
shlb
and
enter
addr16
in
lods
xchg
and
test
mov
sub
xchg
inc
rcrb
xor
clc
orb
fdivr
jge
iret
jge
cmp
dec
call
icebp
and
aas
les
iret
pushf
xchg
adc
add
cmpsb
loopne
jle
fidivl
fsubp
lret
in
lret
jne
nop
insl
icebp
xchg
push
xor
lods
lods
jne
out
cmc
xor
adc
lcall
lds
lret
rolb
adc
repnz
dec
xor
fsubrl
bound
cltd
lods
mov
push
inc
mov
sbb
cmp
jb
mov
out
sub
aam
repnz
leave
or
mov
ljmp
test
dec
scas
int3
sbbb
je
loope
mov
repz
mov
push
cli
pop
ljmp
sub
ror
pop
call
adc
inc
sahf
jb
and
into
std
std
cmp
mov
add
pusha
cmpsl
mov
xor
in
jmp
lods
aaa
inc
jg
fsubs
xor
call
dec
cmp
rcl
nop
idivl
jnp
sahf
push
cwtl
xor
das
nop
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
mov
inc
stos
lret
das
adc
popf
movlps
pusha
mov
sbb
sub
ret
ret
mov
ljmp
scas
cmpb
add
or
pop
sub
aad
push
test
aam
sbb
or
push
orb
roll
pop
mov
test
sub
push
pop
jne
das
cwtl
jmp
xchg
push
sub
xorl
mov
ljmp
xchg
and
lods
sub
stos
xchg
das
mov
mov
pushf
mov
xor
outsl
sub
outsl
cwtl
jnp
mov
sub
jbe
and
mov
push
pop
cwtl
cwtl
or
cmpsb
add
hlt
push
push
movsb
outsl
ror
fwait
ret
notl
inc
mov
imul
sbb
add
pop
pop
xor
js
cwtl
stos
cmp
push
je
pop
xor
sub
lret
arpl
outsb
icebp
jl
jnp
or
push
movsl
cmp
push
jp
test
add
fisubrl
sub
aam
test
sbb
adc
mov
idivl
inc
dec
fdivs
mov
in
xchg
pop
shlb
push
fcoml
shrl
jns
dec
imull
cld
ffreep
ffree
sbb
ret
pop
dec
mov
dec
jecxz
mov
pop
cs
inc
ss
pop
ljmp
jecxz
and
cmp
inc
adcb
scas
ret
xchg
jno
mov
scas
adc
nop
cld
je,pn
test
rolb
call
enter
and
cmpsl
lea
lret
insl
pop
arpl
shrb
arpl
incl
mov
mov
xlat
test
cmpsl
stos
adc
xor
fiaddl
add
jo
into
cmp
sub
adc
mov
movsb
lods
and
je
fmuls
adc
scas
stc
add
mov
or
leave
jne
out
mov
dec
loope
push
shlb
inc
and
mov
pop
scas
pushf
dec
mov
add
pop
jne
jecxz
xchg
cmp
rol
jo
push
cmp
sub
push
mov
cmp
sbb
fadds
xchg
cli
les
js
fs
pushl
mov
cmc
pop
ret
mov
add
repz
push
test
push
add
ret
add
cwtl
pop
divb
shrl
mov
dec
jns
jne
cmp
jb
jno
insb
mov
pop
cmp
push
pop
out
add
jbe
mov
loopne
sub
push
shlb
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
adc
daa
iret
cmp
gs
mov
pop
cmc
add
pop
add
je
jbe
push
inc
popf
sbb
push
and
xchg
mov
shlb
hlt
mov
inc
jb
iret
or
inc
cs
insl
cmp
fadds
mov
cmc
jae
icebp
rolb
jg
adc
jmp
or
push
test
xchg
mov
sysexit
data16
push
adc
xorl
pop
incl
mov
or
adc
in
aam
add
mov
add
jp
insb
iret
mov
xlat
out
mov
mov
jp
lea
pop
lea
xchg
jno
in
jno
ja
js
cmc
cmc
adc
inc
sbb
jg
inc
mov
int3
sub
adc
nop
lcall
adc
fisubrs
xchg
adc
sub
mov
mov
rclb
and
add
outsl
xor
jmp
adc
or
or
int3
inc
add
in
sub
xlat
ja
in
sub
mov
inc
cmp
pop
mov
inc
pop
in
aas
push
cmp
iret
pop
cltd
ret
dec
mov
call
mov
cmp
push
arpl
aad
dec
fxam
add
push
inc
adc
sub
out
xor
andb
push
xor
xlat
xor
sbb
cmpsl
xor
and
cmpsl
data16
push
shr
fstpt
nop
imul
push
xor
xchg
fdivs
lock
xlat
inc
ret
sarl
xor
or
cmpsl
xchg
push
or
fstpt
in
push
dec
inc
mov
add
mov
xchg
mov
jb
sbb
jmp
dec
mov
and
or
pop
cwtl
inc
adc
pop
aas
icebp
fxch
int
pop
sub
stos
sub
addr16
push
cmp
sbb
xchg
mov
stos
int
imul
shrb
sub
sub
pop
push
cmc
mov
xor
and
test
sub
stos
or
or
jl
and
fwait
dec
or
add
jae
cmc
dec
iret
inc
hlt
sti
sub
aam
add
mov
inc
mov
into
loope
jbe
mov
sub
ret
inc
clc
fdivr
scas
add
clc
push
pusha
gs
mov
inc
xor
inc
lcall
js
loope
mov
pop
push
jb
call
fcmovu
aas
mov
lret
push
out
in
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
js
or
int3
jg
or
mov
jmp
les
push
mov
test
sub
push
mov
lcall
sbb
and
xchg
jecxz
inc
dec
insb
and
sahf
mov
inc
and
fmulp
lods
popf
push
insl
aam
lods
push
incb
xor
pop
xor
idivb
rolb
push
add
mov
mov
jge
enter
pop
cmp
inc
or
and
or
pop
push
fwait
cmp
or
xor
fcompl
cld
rorl
lea
pusha
gs
js
pop
not
std
pusha
inc
xlat
pop
adc
in
data16
into
int
xor
mov
xacquire
xchg
repnz
mov
call
divb
mov
adc
bound
sahf
and
rcl
lock
mov
rorb
xchg
pop
xlat
and
cmp
outsl
or
pop
add
in
and
outsl
xlat
insl
inc
inc
ljmp
fcomip
stc
sub
dec
or
fistps
push
test
push
ds
xorb
pusha
xor
pcmpgtb
stc
lds
out
stos
mov
sti
xchg
jo
and
cltd
mov
mov
inc
clc
mov
pop
mov
les
jecxz
sbb
lret
es
sbb
mov
cmp
dec
jl
outsl
pop
popa
mov
inc
imul
test
scas
aaa
or
cs
sbb
arpl
mov
int3
add
or
jmp
or
mov
imul
cld
sbb
scas
cmp
jmp
std
cltd
scas
lahf
js
jo
imul
pop
mov
mov
dec
je
dec
push
cmpsb
pop
lods
or
in
enter
or
outsb
mov
arpl
and
dec
lret
adc
scas
pop
cmc
pop
inc
push
fcomip
jecxz
xchg
fdivl
cli
mov
cmpsl
mov
xor
mov
das
dec
jp
xchg
scas
test
jp
addr16
mov
xchg
adc
sbb
inc
mov
mov
mov
mov
jmp
pop
jo
aad
outsb
mov
mov
test
cmp
scas
mov
xor
jns
add
push
cmp
cmpsl
sbb
movsb
loop
mov
outsl
add
cmp
mov
imul
lret
pop
int
aad
sbb
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
mov
adc
movlps
add
mov
sub
sbb
jg
or
mov
ljmp
test
xchg
or
lods
add
in
lret
lahf
mov
cmpsb
jo
pop
lock
pop
xchg
inc
xchg
rcrb
sbb
sbbb
int
adc
mov
dec
incb
clc
push
pop
mov
idivl
ficoml
mov
fs
dec
push
mov
test
push
subl
aam
fldt
mov
mov
and
xor
jle
scas
push
xchg
or
dec
push
mov
lods
fstpt
gs
jo
je
pop
sbb
inc
repz
outsb
stos
mov
sbb
mov
mov
enter
popf
cwtl
and
popf
pop
add
mov
cs
push
rorl
ret
mov
cmp
cwtl
mov
imul
and
cwtl
inc
pop
mov
mov
xchg
push
int3
cmp
push
ds
jmp
std
int
les
cmpb
cmp
mov
loop
out
fs
mov
sahf
lret
and
sub
xchg
jne
ss
mov
push
js
sbb
mov
jmp
pusha
jns
ja
icebp
push
popf
pop
sbb
roll
fists
popa
lods
test
sub
stos
mov
clc
enter
dec
pop
cmp
mov
aam
in
mov
pop
adc
mov
cmp
push
mov
pop
sub
push
push
adc
loope
stos
pushf
inc
rorl
xchg
push
mov
jnp
push
pop
dec
sti
add
aam
add
int3
pop
and
jmp
cmc
icebp
fsts
mov
dec
fdivp
test
add
outsl
loop
subl
bound
push
xchg
adc
adc
xor
lret
jecxz
mov
aam
sbb
ret
into
and
outsb
push
ret
push
test
test
cmp
in
andl
inc
pop
nop
xchg
cli
lock
dec
movsl
lock
testl
and
mov
inc
xchg
xchg
insl
mov
neg
adc
ret
mov
hlt
aad
mov
add
fisttps
ds
and
cmp
loope
mov
test
mov
test
mov
lret
push
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
int3
mov
push
sbb
adc
lock
mov
movsl
and
imul
push
mov
jp
repz
movsb
push
rcl
out
mov
into
mov
sub
out
arpl
xchg
and
test
sub
push
in
or
pop
xor
xchg
or
cmp
mov
out
lret
mov
mov
pop
cltd
insb
dec
rcrl
out
idivb
mov
andl
out
lea
mov
xchg
push
mov
rorb
jmp
jbe
testl
cmp
jno
aam
pop
aad
enter
fidivs
jns
adc
lock
pushf
hlt
movsb
test
out
fiadds
push
xor
cmp
cmp
and
iret
dec
xor
nop
mov
pop
movsb
mov
sbb
or
cltd
in
inc
jecxz
js
rorl
cmp
adc
mov
xor
call
jno
dec
das
add
lods
pushf
popf
popa
mov
mov
stos
cmp
outsb
adc
cmp
xchg
sti
sub
cmp
mov
inc
push
fidivs
pop
js
or
xor
dec
pop
adc
jmp
adc
mull
mov
cmp
sub
ss
xchg
jmp
fdivrl
adc
xor
lret
sub
xor
into
xchg
mov
push
sub
add
jmp
fnsave
insl
lcall
clc
daa
outsl
mov
push
imul
xchg
ja
in
mov
mov
cmp
and
stos
and
addl
loop
leave
ss
rorb
loope
and
lds
xchg
mov
and
xor
addl
mov
ss
mov
add
xor
scas
xor
pop
and
push
xchg
adc
inc
or
adc
aam
or
test
insl
xchg
sub
jbe
frstor
imul
loopne
and
sahf
fwait
jle
mov
test
ret
push
ljmp
mov
jo
or
and
rclb
loopne
push
lcall
mov
in
rcl
dec
int
int3
hlt
je
dec
call
jle
jmp
bound
outsb
push
sub
xchg
mov
mov
fildl
push
mov
xor
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
std
test
adc
adc
nop
aam
stos
or
arpl
and
sti
mov
loope
ljmp
xchg
mov
dec
hlt
xchg
outsb
push
add
clc
mov
dec
xchg
das
jl
icebp
decl
mov
xor
test
push
in
mov
mov
cmp
inc
dec
jbe
jae
pushf
rorb
faddp
cli
mov
into
and
sbb
lret
popa
sub
fnsave
or
int3
push
xorb
outsl
jne
xor
jnp
addl
aaa
push
shrb
inc
fwait
inc
fisubrs
ja
mov
inc
movsl
cmpsb
jmp
or
lret
pop
push
in
dec
push
cld
std
rcr
or
test
popa
push
notb
xor
jno
mov
push
or
xchg
xchg
push
sub
jg
inc
movsl
push
into
mov
dec
icebp
pop
in
lahf
insb
arpl
mov
test
insl
mov
data16
int
jecxz
adc
fs
xor
push
dec
cli
fsts
stos
scas
vaddss
add
add
xor
mov
shl
jecxz
out
cmc
das
setne
aad
sub
repz
mov
cmp
out
arpl
lods
mov
mov
inc
or
ljmp
mov
and
outsb
add
and
xchg
outsb
pop
movsb
lret
xchg
inc
pop
ret
rcrl
loope
call
mov
fmuls
inc
sub
mov
xchg
push
dec
jo
int3
jg
enter
mov
pop
sti
xor
cli
mov
into
popa
scas
mov
js
mov
imul
es
push
dec
mov
rcrl
dec
cmp
adc
jno
cmc
les
mov
fidivl
mov
mov
mov
xor
popa
in
sarl
and
mov
mov
stos
mov
lds
push
sbbb
or
or
movsb
inc
pushl
pop
jb
adc
push
aas
xor
and
stos
mov
xor
xor
js
cli
in
mov
mov
flds
jo
or
push
mov
push
mov
ficoml
inc
in
fistps
pop
outsl
add
or
or
cli
xchg
rcrb
jg
adc
jp
jge
lods
negl
mull
push
sahf
mov
fcmovne
je
fwait
xchg
testl
inc
and
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
mov
unpckhps
iret
movlps
loopne
mov
jecxz
xor
rolb
ds
inc
scas
xor
pop
dec
shl
js
xor
mov
cmp
cmp
cmpsb
out
jmp
add
inc
pusha
xor
push
pop
ret
push
or
jmp
ss
sbb
sbb
mov
es
imul
fildl
mov
orb
add
addl
sub
mov
mov
and
icebp
sbb
icebp
cmp
lret
dec
sub
fimuls
jnp
ret
lds
pop
leave
add
adc
sbb
xchg
xchg
dec
ret
fs
dec
mov
xchg
leave
lock
insb
add
or
jmp
fsubrp
inc
mov
es
leave
xchg
xchg
stos
jecxz
jbe
addr16
add
cli
push
dec
es
out
mov
int3
mov
mov
int
and
sbb
popf
cltd
adcl
mov
cltd
loop
shll
sbb
and
push
dec
mov
inc
lds
push
cs
int
dec
push
ret
fucomp
movsl
paddq
out
idivl
xchg
adc
sub
ret
cmc
xchg
ljmp
test
ja
rcll
int
lock
pop
mov
xchg
push
inc
mov
pusha
jno
mov
pop
xor
cltd
push
add
test
scas
lods
lcall
inc
addl
aaa
push
jge
xchg
sbb
or
inc
mov
lcall
cmpsl
insl
sbb
xchg
fstpl
gs
sbb
mov
mov
mov
jg
stos
lret
test
sub
push
dec
not
andb
xor
add
shl
sub
andl
mov
mov
ss
push
sbbl
cld
lods
and
leave
inc
loope
or
push
jg
xor
shrb
test
sub
lret
sbb
push
mov
icebp
dec
andb
push
aad
scas
lret
pushf
inc
adc
cli
nop
mov
imull
add
mov
lahf
mov
mov
mov
in
push
mov
add
movb
das
mov
stos
dec
xchg
rol
dec
sub
ljmp
jmp
push
pop
xchg
negb
in
out
inc
orl
mov
push
push
or
or
jmp
dec
pop
imul
enter
xor
test
adc
sbb
lods
sbb
xchg
daa
sub
std
pop
push
lods
pop
cmp
sbb
jno
clc
mov
xlat
pop
faddl
jge
jmp
enter
les
test
jne
out
fcmovne
jg
imul
dec
and
dec
dec
into
jns
cmp
cmp
add
lret
pop
adc
outsl
pop
ret
jmp
and
aad
cmp
pusha
xchg
mov
and
les
aaa
sub
sub
cmpl
sbb
rcl
jo
adc
js
dec
xchg
add
int3
mov
xor
adc
movb
xchg
lret
mov
int3
bound
lea
sub
rclb
fs
add
fmul
adc
movsl
xlat
lea
movsb
jno
scas
push
cmp
mov
pushf
mov
sub
add
in
scas
sbb
push
daa
mov
fwait
jne
repz
ds
fstpt
in
sub
popa
data16
fiaddl
fidivrl
push
aas
int3
xor
frstor
pop
movsb
pop
pop
test
xlat
movsl
push
mov
jnp
fidivrl
scas
mov
cs
data16
and
aad
push
sahf
fstl
mov
sti
inc
mov
fmuls
or
adc
clc
mov
addb
addr16
add
jbe
movsl
jo
cwtl
xor
jno
pop
insl
int3
sbb
lcall
cmp
mov
mov
punpcklwd
dec
int
pop
mov
mov
and
sbb
addr16
cmp
hlt
or
cs
imul
or
jno
cld
jl
out
imul
mov
or
sti
cmpsb
shll
movsl
lcall
jnp
push
adc
inc
movsl
cmp
cmp
jne
jg
pop
iret
and
dec
sub
xlat
adc
sbb
cmp
sbb
and
jne
imul
out
bound
xchg
inc
repnz
fstps
mov
add
inc
cmp
push
jmp
adc
lret
adc
push
fisttps
into
std
adc
inc
and
inc
ja
sbb
std
sub
xor
jle
inc
lock
fwait
xchg
dec
xchg
movb
inc
mov
repnz
sbb
std
adc
push
lock
lcall
in
insb
out
sbb
roll
cmpsb
sti
xchg
mov
lods
xor
pop
outsl
fadds
jmp
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
mov
push
cs
jmp
cmpsl
adc
xor
addl
popl
push
inc
mov
push
jae
clc
and
stos
arpl
in
jl
bound
movsl
dec
nop
lahf
adc
inc
jb
and
mov
mov
loop
out
in
idiv
cmp
push
outsl
sbb
add
add
jge
jnp
add
je
mov
imul
and
dec
rcrl
mov
inc
or
xchg
int3
mov
and
xchg
cwtl
scas
je
ja
shl
add
popf
out
pop
xchg
cmp
mov
inc
andl
rcrb
cmp
push
repnz
aad
xchg
nop
aad
sub
loop
jbe
cmp
scas
vmovdqu
mov
jns
es
xor
movsb
lods
mov
push
je
mov
push
ss
mov
das
iret
scas
adc
jge
cmc
pop
ja
add
in
jp
shll
push
sub
fcmovbe
jp
insb
sub
mov
testb
shl
stc
fsubrs
mov
gs
and
out
push
mov
pop
imul
int
push
mov
mov
mov
push
xor
popf
scas
data16
xor
sub
mov
fcmovnu
jp
mov
fnstsw
inc
sbb
inc
jo
inc
addr16
inc
inc
ljmp
adc
outsl
and
mov
in
cmp
sub
push
dec
cmp
scas
cwtl
push
stos
and
lds
ja
outsb
mov
xchg
mov
jg
clc
jb
xor
xlat
mov
mov
imul
ret
cmp
ljmp
rcl
inc
pop
int
jle
test
jb
xchg
jno
add
cmpsb
fbld
testl
and
pop
cmc
negl
movsb
adc
pop
xchg
fidivl
sub
xor
push
test
inc
dec
ss
push
or
test
push
lock
xor
lods
ret
or
jp
and
rcll
cli
ficompl
aas
loopne
xchg
pop
mov
sbb
decl
xchg
add
sub
push
imul
add
and
scas
jne
inc
xchg
xor
popa
mov
sub
inc
adc
imul
jg
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
and
adc
adc
mov
pop
push
jg
add
pop
and
inc
inc
xchg
xor
andb
repnz
call
adc
notb
push
cmp
aad
jo
push
sub
imul
sarl
cwtl
xchg
mov
js
je
fwait
or
popa
mov
push
adc
add
cmp
cmp
adc
loopne
loope
in
lods
rcrl
leave
repz
jecxz
mulb
fcomps
popa
jns
xchg
ficomps
aaa
push
int3
mov
andl
outsl
pop
or
or
pop
add
stos
sub
mov
cmp
lods
xchg
cltd
sub
sub
sahf
xchg
enter
jbe
std
icebp
xchg
mov
sub
test
in
psllq
out
xchg
lcall
xchg
fdivrl
cmp
push
adc
nop
loop
repz
std
es
pop
clc
pop
jle
and
repz
xchg
add
movsl
mov
test
lret
divb
or
in
pop
aaa
enter
bnd
mov
addl
lds
or
mov
xor
and
jnp
repz
das
pushf
inc
xchg
push
das
je
jae
sbb
and
stos
jno
aaa
ret
hlt
inc
aam
mov
push
push
addb
inc
loopne
xlat
sbb
cmpsl
pop
pop
int3
cmp
adc
cld
jmp
inc
cwtl
xchg
shr
xor
out
xchg
out
rcrl
ja
adc
fld
scas
cmc
cmp
pushl
inc
outsl
stos
addr16
outsl
xchg
sahf
push
in
lret
ret
daa
mov
jnp
lods
sbb
mov
lea
mov
jae
dec
sub
mov
aaa
fbstp
pop
cmp
cwtd
mov
call
loop
mov
and
repnz
or
in
mov
sub
adc
push
or
addb
pop
adc
dec
sub
in
jae
lcall
push
cmc
xor
scas
add
push
mov
jge
push
scas
jno
pop
adc
loope
in
icebp
add
shrb
repnz
test
fdivrs
shrb
and
mov
lock
and
es
sub
cmp
aas
xor
dec
insb
mov
in
ficoms
jp
push
shll
push
xor
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
jg
add
push
xchg
loop
pop
xor
data16
movsl
clc
inc
lods
jo
push
sub
push
xchg
adc
lds
adcb
imul
mov
aaa
loopne
cli
cmp
cli
subl
add
inc
add
xchg
ds
clc
fdivs
push
out
dec
mov
int3
stos
and
cmpl
inc
sbb
jmp
movl
xor
rol
sub
je
push
enter
jne
shlb
aam
scas
ret
pop
test
sbb
dec
mov
jl
in
das
jne
out
lcall
fwait
mov
mov
loop
cmpsb
lods
mov
stos
push
or
mov
sbb
mov
clc
jno
dec
leave
and
loope
xchg
mov
push
out
sbb
ds
in
arpl
nop
mov
mov
or
and
jae
mov
or
xchg
fwait
xchg
andb
dec
lea
xor
outsl
push
xor
inc
jle
cmp
jne
mov
aad
mov
cmp
movsb
imul
mov
or
fucom
pop
lds
arpl
test
pop
je
push
push
pop
xor
pop
or
aaa
loope
ss
lock
push
imul
cmc
mov
dec
fistpl
nop
cli
adc
test
std
xchg
xchg
imul
cmp
mov
scas
adc
mov
movb
cmp
adc
dec
outsb
rcrb
dec
loop
jns
popa
jbe
into
or
shrl
push
insl
fdiv
adc
in
mov
add
insb
mov
jae
jo
dec
insl
fildl
pop
mov
js
in
mov
pushf
insb
out
or
xchg
cmp
or
mov
mov
xchg
aas
pop
aad
insl
adc
jne
adcl
shlb
idivl
push
mov
or
mov
pop
add
and
xchg
fistps
je
push
add
or
pop
sbb
cli
or
sub
mov
xchg
outsb
ret
add
movsl
out
lock
add
xchg
or
xor
cmpsb
adc
or
mov
out
mov
cld
or
mov
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
mov
stc
adc
adc
sub
das
lock
mov
add
mov
or
mov
pusha
and
pop
jge
jo
es
ss
aam
notl
test
call
mov
pop
or
aaa
xor
pusha
jecxz
orl
hlt
dec
pop
jno
aam
push
cld
int3
cmc
sbb
pushf
scas
ja
add
push
stos
inc
xchg
xchg
mov
out
xchg
push
rclb
add
aas
jb
xchg
sbb
sbb
lret
lods
add
scas
cmp
add
rorb
ret
mov
add
imul
ljmp
das
dec
mov
cld
inc
push
enter
mov
dec
std
pop
imull
push
push
stc
adc
xchg
xchg
and
daa
push
dec
or
adc
sti
or
jl
mov
mov
sbb
repnz
push
lahf
inc
jno
divb
cld
mov
stc
sti
jmp
out
mov
out
pop
loop
dec
mov
sar
sbb
cmpsl
lret
ljmp
push
test
pop
add
or
cs
jp
dec
mov
ss
daa
and
imul
pushf
dec
imul
sbb
sub
mov
mov
pop
repnz
push
movsb
fcompl
xchg
xchg
sbb
cwtl
ss
ficoml
jge
jl
dec
inc
push
imul
push
shlb
fisubs
out
js
daa
dec
inc
enter
das
push
pushf
mov
add
push
out
into
jne
leave
out
jl
and
cld
mov
adc
cmp
cli
aaa
add
clc
leave
outsb
sub
outsb
push
test
dec
fisttps
in
xor
mov
stc
mov
fistl
and
dec
js
push
or
mov
jg
pop
pop
sti
movsb
inc
aad
loop
fildl
popl
pop
adc
call
mov
xchg
div
testb
bound
bound
or
insl
lock
pop
aas
mov
pusha
ret
xchg
push
ret
lock
sar
jl
addl
and
xchg
xorb
bound
out
mov
and
repz
jns
and
iret
mov
push
sbb
sbb
movsl
imul
push
stos
lcall
sbb
or
cmc
cmp
lahf
loopne
jbe
pop
inc
sti
stc
sub
std
popa
mov
fyl2x
es
inc
and
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
add
xor
adc
adc
xchg
and
pop
lods
lods
lret
iret
lock
push
insb
pop
inc
inc
pop
shl
push
add
movsl
sar
mov
clc
arpl
ficomps
push
outsb
imul
jg
jmp
mov
push
aaa
and
push
adcl
sbb
pop
lret
cmp
adc
dec
repnz
mov
jae
cmp
xchg
push
mov
jg
add
xchg
aaa
dec
stc
cmpsb
hlt
mov
ret
jne
repnz
cmp
adc
mov
leave
and
inc
cmp
inc
lahf
or
movb
ja
fidivs
std
cwtl
or
pushf
nop
sbb
lcall
ja
aad
shll
ret
loopne
xchg
mov
cmp
roll
xlat
cmp
out
jns
jo
hlt
inc
mov
mov
pop
push
out
mov
je
cmc
ffreep
hlt
mov
cmp
mov
ffree
idivb
scas
mov
jo
or
mov
mov
jmp
stos
mov
rolb
ret
in
mov
fisubrs
and
lcall
xor
in
or
push
mov
fadd
mov
in
ljmp
pusha
xor
fstpl
dec
repnz
mov
pop
pop
push
adc
or
xor
mov
jecxz
flds
adc
push
sub
or
mov
and
mov
popa
jno
loop
xor
sbb
or
push
popf
rol
adc
mov
in
lods
cmp
ds
test
inc
cmp
mov
mov
sub
pop
or
aaa
push
pop
pop
jne
adc
mov
pop
clc
shlb
arpl
dec
pop
or
jns
push
ja
adc
fcmovne
es
sub
negl
mov
pop
pop
mov
and
nop
push
mov
jnp
mov
pop
rep
pop
cltd
sbb
jo
mov
push
imul
inc
in
sbb
out
jp
fwait
pop
loopne
stos
xor
pop
mov
ret
cwtl
daa
fwait
mov
rcr
mov
lods
lahf
or
mov
lahf
out
sub
inc
xor
adc
fisubrl
jne
test
fimuls
push
repz
dec
jp
lret
js
outsb
int
into
push
push
ss
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
pop
inc
stos
jmp
adc
adc
dec
jb
mov
mov
sbbl
inc
mov
xchg
xchg
xchg
xchg
xor
sbb
out
ds
mov
mov
sub
jmp
lret
enter
sbb
add
sub
loope
lock
data16
jae
mov
jae
stos
push
jmp
pop
ljmp
mov
xor
je
mov
pushf
outsb
push
lcall
hlt
loop
bound
inc
or
cmp
sub
adc
fcoms
loope
gs
jl
das
lahf
mov
filds
lock
push
pop
ret
lods
mov
dec
mov
xor
fcmovu
ds
addb
lock
aad
inc
test
sbb
push
stc
js
cmpsl
ljmp
xchg
or
out
sub
mov
or
xchg
jge
jnp
pop
pop
es
outsb
mov
sahf
inc
insl
repz
inc
mov
push
xor
and
inc
and
shlb
sub
xor
mov
push
push
fnstenv
test
xchg
push
aas
sbb
mov
xor
mov
lcall
fstps
in
out
daa
adc
dec
movsb
aaa
arpl
mov
mov
push
jl
into
loope
xchg
pop
insb
xchg
xor
popf
adc
ja
test
in
ljmp
xor
inc
rol
add
and
std
aas
loope
das
mov
mov
xchg
icebp
push
xchg
stos
and
cmp
fisubs
jmp
sub
dec
mov
jo
pop
adc
adc
ja
sbb
ljmp
push
loope
int3
stos
mov
mov
push
fdivs
inc
fsubs
pushf
inc
imul
mov
adc
xor
lods
ret
cmpsl
and
addl
test
test
ss
and
sub
out
push
lods
and
mov
push
jle
push
xchg
jo
test
js
xchg
jmp
cmp
scas
inc
xchg
and
lret
xchg
jecxz
sahf
jecxz
shll
arpl
lods
lea
push
bound
mov
out
or
in
outsb
or
mov
pop
jge
pop
aam
sub
inc
and
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
imul
fldl
scas
icebp
nop
imul
dec
or
mov
jbe
and
push
or
add
mov
push
dec
aad
pop
push
rcll
push
xor
daa
dec
cwtl
dec
arpl
movsb
sub
jno
popa
push
stos
add
mov
in
ror
imul
pushf
jl
hlt
and
cmc
mov
hlt
imul
sbb
test
dec
inc
xchg
push
dec
mov
push
sti
adcb
js
aam
lret
ds
out
sub
mov
inc
mov
mov
sbb
xchg
enter
sbb
mov
les
xchg
mov
push
cs
scas
ja
jae
fidivrl
insb
stos
inc
mov
xor
jae
ja
mov
mov
inc
arpl
icebp
mov
or
test
push
roll
pop
divl
in
mov
cld
jb
scas
mov
movsb
cmp
leave
je
dec
clc
mov
adc
dec
test
lret
clc
jg
jne
mov
aas
push
add
lret
fstl
lods
scas
or
xchg
test
sub
sbb
cmpb
sub
sbb
xchg
cmp
jns
loop
sub
mov
call
fcoms
test
adc
sbb
mov
rolb
mov
arpl
push
stos
xor
lret
mov
incb
pop
js
sbb
mov
xlat
mov
inc
mov
fwait
jae
and
push
sub
mov
xor
jo
cs
int3
cmpsb
jns
mov
adc
ds
jl
mov
in
pusha
fs
push
fisttpll
push
out
jo
sbb
lock
inc
daa
mov
and
xor
add
mov
rcll
xor
repnz
mov
pop
scas
in
add
loop
imull
call
xchg
mov
mov
mov
mov
test
sbb
push
or
rcll
rorl
fidivrs
cltd
ret
fisubs
xor
icebp
mov
sti
and
lret
out
sbb
add
aam
fldl
test
jmp
scas
or
mov
jl
and
pushaw
and
mov
roll
adc
jmp
jae
les
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
dec
mov
iret
movlps
mov
inc
call
mov
pop
mov
je
call
fsubl
and
mov
imul
adc
push
fs
and
cmp
push
es
and
mov
aas
push
xor
das
add
into
dec
fs
cs
idivl
inc
in
cltd
lods
fwait
cs
cld
add
insb
icebp
jae
das
ficoms
cwtl
ficoml
jecxz
aam
mov
sbb
in
in
in
jmp
fstpl
test
pop
mov
jnp
sbb
push
inc
clc
ret
mov
pop
mov
jle
int
lahf
lods
xchg
and
cmp
inc
shrl
fidivl
je
pop
imul
frstor
pop
mull
fwait
push
sarb
sahf
mov
fsubrs
aam
pop
je
stos
add
loopne
outsb
testb
mov
fcmove
push
pop
jo
xlat
rorb
scas
push
push
xor
addb
clc
aam
in
stc
in
loop
cmp
sbb
scas
cmp
cmp
mov
cltd
cmpb
imul
das
mov
gs
jecxz
inc
xchg
loope
ljmp
lods
stc
dec
sbbb
jmp
add
sti
mov
int3
jmp
pop
or
loopne
jl
push
and
mov
mov
and
cmp
dec
jnp
mov
or
lahf
cmp
push
cs
je
std
popf
ss
cld
into
xor
dec
and
xorb
idivb
data16
mov
test
mov
push
add
sahf
sarb
lcall
mov
dec
or
popa
adc
mov
or
cmpsb
fisubs
dec
mov
adc
xchg
scas
repnz
call
gs
mov
js
mov
imul
lret
cltd
xchg
dec
cmp
xor
jg
mov
dec
inc
shll
das
push
daa
xchg
or
jmp
push
jne
insb
mov
fs
adc
movsl
sbb
iret
insb
lahf
cld
sub
jecxz
jnp
pop
dec
add
es
sub
push
push
insl
and
pop
jle
test
std
pushf
cmp
out
cli
xor
jge
fists
dec
ds
loop
ds
sub
push
mov
idiv
stos
fs
outsb
insb
inc
mov
xor
adc
lods
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
mov
adc
adc
xor
shrl
jo
in
lahf
push
in
add
jl
mov
and
rol
or
jl
adc
dec
in
lahf
lock
mov
adc
mov
cltd
mov
mov
jno
lcall
add
rclb
mov
subl
dec
ret
lret
and
or
mov
cmc
add
fdivrl
sub
jp
repnz
jno
add
dec
pushf
and
pushf
xchg
test
fistl
mov
lods
sub
pop
cltd
xorb
fadd
xchg
addr16
nop
mov
inc
inc
add
sub
mov
inc
cs
add
mov
jp
push
jle
fs
or
fdivr
std
sbb
xchg
repz
add
push
je
int3
and
mov
popf
ffreep
cld
inc
mov
and
icebp
sub
push
push
mov
stos
sbb
mov
or
jo
add
popf
adc
jl
popa
inc
lock
lods
es
arpl
cli
lock
mov
das
and
into
les
mov
test
mov
stos
mov
add
xchg
push
mov
inc
aaa
adc
fidivs
jge
aaa
mov
dec
mov
movsl
jb
fisubrl
sbb
lahf
sar
or
xlat
add
lods
fs
cwtl
insl
dec
add
in
andl
jo
mov
sbbb
dec
ja
or
xchg
insl
imul
mov
les
scas
sbb
into
push
pop
mov
popa
movsb
fsubrl
sub
fs
jp
cld
sahf
jg
bound
push
lods
rol
addl
jge
cmp
jns
shll
adc
leave
mov
pop
add
mov
jecxz
mov
sub
incb
cmp
jl
pop
inc
insl
arpl
mov
adc
and
jnp
jg
xor
inc
jae
push
sbb
inc
cltd
pop
and
rclb
mov
jno
xor
mov
arpl
xchg
dec
ljmp
out
lret
or
jb
in
cltd
inc
push
mov
or
and
mov
mov
pop
imulb
inc
and
and
jge
mov
int
or
jge
xor
adc
pop
aam
and
adc
mov
push
sbb
pusha
add
aam
pop
mov
addl
and
mov
inc
add
add
inc
and
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
cmp
fcmovnu
adc
adc
shlb
xor
nop
cld
into
mov
pop
cmpsb
pushf
daa
sub
clc
rclb
fcomps
and
imul
fcompl
or
dec
es
leave
jnp
pop
jp
sub
arpl
nop
in
push
fmulp
je
mov
inc
ljmp
insl
shll
mov
cs
pop
xchg
cmpl
xchg
add
and
xorl
in
lock
imul
fmul
mov
movsl
cmc
pop
jecxz
xchg
jns
and
xor
dec
jle
unpckhps
and
cltd
sbb
int3
out
add
sbb
add
inc
dec
test
mov
popa
jne
pop
iret
xchg
sbb
out
push
and
loope
sti
mov
jne
arpl
sub
pop
insb
rcrl
or
cli
and
inc
add
push
fidivl
stos
mov
dec
data16
es
sti
and
adc
int
out
and
popl
stos
pop
aaa
mov
dec
add
xor
jbe
fnstsw
cli
xchg
mov
mov
dec
aaa
sqrtps
jg
xchg
lods
push
aad
mov
mov
jmp
addr16
add
push
out
ja
mov
adc
cli
fsubrl
sbbl
or
rorl
push
jge
push
cld
fld
mov
fisttps
dec
das
jo
xor
sub
sbb
dec
not
aad
daa
mov
cmp
mov
lods
push
push
pop
shll
dec
xchg
out
jl
cltd
or
out
add
ret
adc
addr16
inc
jmp
push
addr16
sbb
mov
dec
cs
mov
sub
test
aad
xchg
and
pop
fnsave
xchg
adc
push
ja
fisubs
adc
inc
mov
adc
xor
lret
mov
shlb
test
in
fadds
fwait
or
jae
jbe
jmp
sub
inc
sub
idivl
mov
insb
daa
mov
pop
adc
or
repz
push
dec
loop
jb
mov
dec
xchg
dec
mov
inc
xchg
iret
repnz
mov
loopne
test
pop
lret
cs
or
rcrl
push
jo
ret
mov
pop
stos
jne
sbb
add
scas
aam
dec
xor
adc
stos
mov
mulb
add
loop
movl
bound
push
aaa
or
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
jle
rclb
adc
in
out
cltd
add
repnz
cmpsl
add
jae
sub
cli
push
lcall
shrl
ss
lock
mov
jmp
cmp
cmpsb
inc
outsl
das
dec
xor
scas
lods
jmp
faddl
sahf
push
mov
jl
pop
jl
shlb
bound
cmpb
ret
sbb
mov
inc
mov
jmp
pop
jle
xchg
cmp
dec
mov
sbb
out
xor
test
js
xchg
jl
stos
mov
mov
adc
stc
jge
pop
jbe
pushf
fs
pop
rorl
sbb
xchg
into
test
imulb
adc
rclb
pop
inc
stos
dec
cs
and
mov
inc
ss
cmp
mov
jne
out
adc
loope
jmp
cld
pusha
jo
jp
cwtl
rorb
lahf
fsts
sub
pop
fcmovbe
movl
cmp
cmp
rclb
add
lret
mov
mov
mov
repnz
adc
lret
inc
stos
ret
leave
stc
call
inc
pop
jns
dec
xlat
pop
mov
and
mov
popf
xchg
xor
xlat
mov
orb
sbbl
xchg
dec
fnstcw
jle
iret
stos
cmpsb
mov
popl
push
jp
mov
jge
insl
bound
lahf
in
or
mov
test
lahf
test
das
cmp
daa
bound
mov
xchg
shlb
sbb
test
stos
out
xor
or
jmp
loop
stc
inc
adc
loope
addr16
cmp
dec
sub
mov
packuswb
jg
jge
mov
push
jecxz
dec
aad
bound
outsl
push
sbb
addr16
out
pop
popa
inc
add
addr16
repz
ss
dec
mov
stos
xchg
scas
cli
cltd
mov
fsts
outsb
outsb
adc
sub
call
sahf
decb
lods
xchg
pop
test
jo
pop
imul
xor
cli
xor
or
sub
leave
dec
ljmp
stos
mov
cmp
dec
dec
sbb
cmp
add
enter
clc
and
inc
hlt
cmpsl
push
mov
scas
jmp
cmp
imul
imul
loope
aad
outsb
mov
xchg
xor
mov
jne
arpl
std
mov
call
cs
test
and
jp
jno
xor
subb
xor
hlt
mov
lret
and
filds
mov
xchg
pop
fidivrs
pop
mov
mov
rcrl
jno
add
xchg
pop
adc
sub
in
inc
mulb
cmp
jp
sbb
in
popa
sarb
fimull
loop
pusha
mov
xchg
jbe
add
mov
popa
pop
pop
jnp
sbb
stos
mov
xlat
stc
adc
fadds
iret
bound
pop
nop
outsl
xchg
insb
adc
arpl
mov
test
xchg
lds
cltd
sbb
and
jno
insb
dec
rcr
sbb
lret
adc
leave
int
jecxz
sub
adc
jmp
cmp
pop
push
arpl
int
in
xchg
or
or
insl
push
lret
or
ficompl
pop
lret
jb
mov
adc
mov
sbbl
xchg
test
mov
inc
cld
and
cmp
aam
push
jo
and
push
js
shll
ds
jle
icebp
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
inc
sub
das
into
adc
adc
mov
mov
repnz
add
arpl
xchg
push
ljmp
inc
and
sbbb
fiaddl
test
mov
enter
ljmp
or
cmp
imul
cli
sub
pop
pop
jne
ret
test
pop
cwtl
lea
adc
fcmovnb
ljmp
pop
jge
in
adc
fcmovb
test
dec
repz
je
push
mov
data16
cmpsl
loope
jp
int3
push
xor
jb
pop
jecxz
xchg
iret
outsb
daa
pop
ja
je
mov
loop
gs
inc
mov
cmpsl
js
sbb
xlat
addr16
mov
popa
les
lahf
cltd
and
pop
lock
mov
jno
push
xor
xor
les
loopne
pop
mov
xchg
mov
movsl
sbb
jnp
daa
pop
lret
push
sahf
lds
xorl
mov
mov
pop
std
inc
aaa
or
sbb
bound
jbe
std
jl
sub
mov
scas
pop
aam
xchg
out
fucomi
mov
cld
movsl
mov
cmpsb
outsb
ja
xchg
mov
push
sbb
mov
int
sti
movsl
lds
mov
cld
pop
aaa
fistps
cmc
cmp
mov
dec
fucomp
pop
xchg
push
xadd
dec
push
test
aad
xchg
jb
jne
testl
push
adc
fdivrl
inc
mov
repz
jmp
cmp
inc
jmp
lcall
push
enter
cmpsl
stc
pop
cmp
xchg
or
aam
add
xor
mov
stc
jp
jnp
push
fdiv
adc
sub
sbb
movsb
pop
jno
push
push
dec
dec
push
sbb
cmp
daa
jecxz
cli
sbb
xlat
aas
call
cmc
sbb
mov
dec
xchg
ret
push
lods
mov
xchg
gs
dec
sub
int3
xchg
fcmovne
xchg
fdivrs
xchg
imul
mov
incb
scas
dec
jne
pcmpgtw
adc
xlat
clc
movsl
mov
orl
xchg
mov
imul
in
shll
push
sbbb
repz
mulb
mov
xchg
and
addr16
sub
add
jl
stos
jl
add
cmovo
pop
jg
hlt
mov
mov
pop
mov
jo
sar
mov
testb
mov
xchg
push
test
mov
rcrb
inc
iret
filds
adc
pop
mov
xorb
inc
int
adc
repz
jae
iret
pop
in
fisubl
mov
je
lret
frstor
pop
push
mov
into
cmp
insl
fwait
lds
and
int3
fwait
fs
add
push
and
in
mov
jecxz
std
pop
iret
mov
and
and
icebp
cmc
pusha
fs
inc
and
paddb
repnz
pop
out
ss
lahf
out
es
out
dec
std
mov
in
mov
jle
loope
xor
and
imul
push
inc
jne
insb
call
pusha
mov
int
sub
jl
lret
push
fdiv
sbb
xlat
or
push
addr16
aad
leave
in
xorb
jbe,pt
fildll
push
je
rcll
aas
dec
or
add
lods
addr16
aad
mov
fists
cmp
mov
jo
push
mov
movsl
mov
divb
jbe
and
les
icebp
and
decl
roll
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
aaa
call
popf
dec
xor
lcall
mov
jns
jae
jg
xchg
xor
ljmp
xor
std
test
mov
test
aam
fisubrs
xorl
and
jecxz
loopnew
mov
scas
imul
pusha
mov
push
iret
js
mov
aaa
xlat
loope
sub
push
add
cmp
sti
loop
icebp
jmp
push
adc
lret
ljmp
out
cmp
sub
aad
cmp
push
push
xchg
int3
ja
jb
dec
ljmp
xchg
sbb
adc
iret
inc
lods
push
in
repz
sub
inc
lret
and
fildl
push
jnp
daa
pop
push
sub
cltd
jecxz
cmp
ja
pusha
mov
mov
cltd
stos
mov
mov
ja
dec
jp
or
shlb
fdivs
int3
pop
mov
in
fmull
mov
aad
in
sbb
pop
jge
pop
and
lds
insb
dec
push
push
push
pop
lods
adc
nop
and
aaa
fwait
xlat
xchg
clc
loopne
pop
dec
xchg
sbb
mov
sub
enter
movsb
nop
xor
out
cwtl
push
cli
push
movsl
rcrb
jnp
cmp
ret
mov
mov
add
mov
cmp
mov
sbb
lahf
mov
mov
sub
js
xchg
pop
into
and
adcl
adc
mov
out
aam
outsb
push
jb
pop
inc
ja
shrb
mov
mov
xor
cli
mov
mov
lods
or
sahf
xchg
inc
shl
jae
lea
nop
lahf
jge
rcl
not
dec
mov
cmp
and
ficoms
je
fwait
insb
shlb
or
clc
adc
rorl
or
arpl
in
shll
jecxz
pop
jne
lods
scas
and
or
xchg
stos
adc
rcll
mov
dec
and
mov
lret
push
jb
lret
je
cmpsl
sub
imul
pop
sbb
pop
push
addl
loopne
add
and
dec
imul
stos
or
push
inc
test
fwait
andb
outsb
mov
subl
mov
mov
js
and
xchg
aam
pop
and
in
cmp
iret
fists
inc
push
mov
push
loopne
cwtl
imul
cmpl
lods
arpl
dec
nop
aad
push
test
mov
mov
cmpsb
ja,pt
inc
loopne
leave
mov
push
xor
scas
insb
cld
or
cmpsb
dec
xchg
dec
sti
jns
ljmp
or
in
jb
imul
aad
and
jle
shrb
dec
shll
pop
xchg
adc
enter
jnp
scas
test
mov
pop
js
sbbb
dec
and
div
rolb
cmpsb
inc
jno
jmp
movb
pop
lods
into
mov
or
shl
lods
xor
jae
fistl
insb
push
stos
mov
test
stc
and
xor
ret
mov
pushf
inc
out
mov
pop
in
stos
shlb
jno
cmpsb
mov
cmp
xchg
adc
test
popf
xchg
jne
xlat
insb
mov
mov
aaa
cmovs
insl
push
pop
je
mov
js
xor
aaa
cmp
shrl
cmpl
test
push
and
sub
sub
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
or
pusha
mov
adc
mov
nop
cld
in
inc
push
in
int
xchg
and
xchg
inc
rorl
cmp
dec
std
or
lcall
fwait
into
dec
pop
clc
jle
cmp
mov
jno
and
gs
mov
stc
inc
inc
inc
out
fldcw
mov
popa
and
xor
sub
jbe
or
icebp
leave
outsb
dec
cmpsb
inc
or
sbb
sbbl
les
jmp
sar
sbb
jne
cld
ja
and
lods
out
mov
pushf
push
fldl
dec
cmp
fidivrl
push
cmp
push
pop
inc
and
push
fnstsw
inc
ret
ret
test
add
cld
pop
clc
gs
or
lret
mov
add
adc
insl
into
hlt
out
jo
shlb
dec
loopne
or
pop
sbb
jmp
ljmp
xchg
adc
mov
fstpt
mov
mov
bound
lods
test
fsts
mov
data16
add
dec
enter
int
dec
jmp
outsb
pop
dec
and
jl
cli
nop
pop
repz
push
sbb
fdivrl
adc
xor
mov
inc
inc
sbbl
cmpsl
popa
call
enter
cld
out
sub
ljmp
or
insb
sub
out
push
add
fsts
mov
xlat
pop
decb
lock
mov
xor
pop
iret
mov
pushw
stc
inc
pop
cltd
test
fidivrl
fcmovnu
jbe
ficomps
jecxz
mov
dec
inc
sbb
inc
lret
sbb
push
or
insl
inc
sbb
insl
cs
push
jecxz
ficompl
sub
xor
sahf
ret
pop
jo
xor
icebp
inc
cmc
imul
cs
push
push
call
sbbb
call
inc
add
mov
push
cld
add
lret
nop
sbb
bound
scas
nop
mov
mov
in
inc
sbbb
mov
sbb
dec
dec
adc
aaa
push
xor
dec
jns
inc
fistps
push
mov
inc
cmp
xchg
mov
sub
loopne
fdivr
mov
lret
inc
lods
inc
gs
and
cltd
sub
pushf
jne
mov
mov
shll
mov
cs
fcomps
jne
lds
mov
out
mov
roll
fcompl
push
mov
lret
adc
push
sbb
movsb
jo
aaa
mov
cmpsw
or
hlt
jmp
out
xchg
popf
jg
fnstenv
mov
mov
popf
stc
cmp
fsub
xlat
pop
jge
sbb
mov
push
hlt
xchg
repz
insl
sbb
nop
xchg
sbb
push
mov
sub
add
fcomps
mov
or
call
lcall
add
popa
or
notb
pop
sar
loope
cs
fidivl
test
sbb
mov
sbb
and
push
xor
scas
sub
out
add
xchg
imul
inc
mov
lods
xor
je
mov
int
cli
imulb
ljmp
mov
jo
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
fldt
xchg
mov
or
int3
or
dec
xor
out
ret
mov
call
rcrl
mov
lret
mov
mov
loope
ret
mov
jg
ds
decb
ja
sarb
cmpsb
sbb
push
xlat
inc
ss
xlat
jae
jmp
ss
xor
sti
cli
dec
enter
xor
pop
clc
cmc
insb
lods
loop
sub
aam
int3
fldenv
jle
outsl
cltd
cmp
and
push
aaa
mov
jnp
je
xchg
mov
scas
push
sub
xor
pop
and
push
jns
and
cmp
pusha
sub
sti
xor
lahf
jo
dec
jnp
ds
shll
jl
pop
push
push
sub
xchg
loopne
imul
divl
es
mov
fadds
dec
mov
ljmp
in
rcll
lods
incb
outsl
fimuls
mov
loopne
adc
sbb
or
into
adc
into
cmp
push
fidivrs
fidivrs
les
xchg
scas
jp
sbb
into
jge
adc
fistpll
aam
sbb
add
fldcw
xchg
gs
shlb
xchg
mov
mov
out
sahf
jecxz
push
push
imul
jne
or
sub
fsubrs
aam
sub
mov
jp
and
imul
call
jl
xchg
aam
push
std
leave
mov
in
push
out
pop
stc
xor
inc
push
cltd
push
popa
mov
push
mov
adc
sub
jg
lods
js
int3
xchg
mov
sub
aam
pop
sahf
or
inc
jecxz
xor
xor
push
adc
out
push
shl
inc
out
push
hlt
push
scas
arpl
ret
addr16
fcmovb
mul
xor
inc
cmpsb
fdivl
fcoms
dec
pop
aam
divb
sbb
lret
xor
sbb
fs
and
enter
push
cmc
or
xchg
rcrb
daa
shlb
inc
cmp
sbb
sub
subb
icebp
pop
lds
adc
imul
pop
push
add
ja
lcall
xchg
movsl
div
mov
cli
push
cld
xor
adc
or
daa
std
aaa
cmpsb
inc
repnz
dec
aaa
sarb
dec
call
cmp
push
sbb
mov
jo
repz
ret
mov
mov
xchg
sub
jbe
cmp
fs
cmp
mov
aam
adc
xchg
dec
test
adc
adc
mov
mov
push
mov
mov
or
pop
loope
inc
mov
cmp
out
push
sarb
cmp
daa
xchg
je
sbb
daa
jmp
push
inc
das
adcb
filds
cmp
ficompl
and
lret
fdivrs
outsl
int
scas
mov
sub
jbe
cmp
hlt
mov
pop
std
add
imul
inc
xor
mov
mov
xlat
ljmp
dec
fstl
pop
jb
add
adcb
clc
ss
inc
dec
mov
inc
sti
jno
jecxz
icebp
cltd
fs
dec
jp
lret
and
icebp
mov
xchg
out
test
fstps
or
push
insl
cmp
jo,pn
test
jecxz
test
pushl
bound
add
add
jle
add
inc
test
insb
add
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
fnstcw
adc
adc
dec
xor
clc
call
mov
xchg
fstp
sbb
xchg
cmc
fimull
popa
dec
stos
sbb
mov
cmpsb
xchg
out
imul
fs
fs
add
stos
and
mov
pop
lods
aam
loope
subb
jmp
addl
and
sbb
or
add
xchg
fsubs
lahf
mov
cmpb
addl
insb
add
ret
sub
sarb
jg
inc
repnz
rclb
inc
repz
daa
fisttps
and
xor
sub
push
xchg
xor
dec
popa
add
cmp
in
pop
test
push
cwtl
int
jp
lcall
add
mov
ljmp
imul
insb
push
lods
mov
add
mov
xor
mov
add
fdivrs
lcall
mov
pop
aas
lea
ficoml
scas
jecxz
xor
fsubrp
dec
test
inc
fcmove
inc
add
mov
inc
lods
and
popf
jmp
and
aaa
lea
mov
repnz
aaa
add
add
sbbb
aad
cs
movsb
cmp
xchg
pusha
sub
jnp
call
lret
mov
popa
and
add
dec
pop
subb
mov
stc
pop
test
xchg
mov
test
jno
lock
aad
int3
in
ljmp
ljmp
pushf
mov
mov
pop
mov
inc
test
rol
mov
daa
cli
inc
pop
test
xor
repnz
icebp
xchg
mov
fs
mov
dec
mov
mov
insl
aad
pop
fiaddl
xchg
int
repz
mov
out
inc
ficomps
xor
cmpsb
jae
sub
sub
ficomps
mov
dec
lahf
dec
das
movsl
aad
lret
stc
outsl
push
std
subl
loope
mov
xor
jp
andl
fdivp
pop
jecxz
out
add
mov
add
bound
adc
nop
sbbl
es
lret
pop
jl
xor
out
sub
test
cmp
test
lods
addl
dec
or
shrb
or
lea
sbbb
ss
mov
dec
fwait
mov
adc
sbb
lcall
push
sti
les
pop
sbb
rcl
xor
jbe
push
mov
jno
test
dec
inc
or
cmovs
inc
bound
rcl
cmpsl
insb
outsb
push
dec
movntdq
stos
aad
ss
mov
xor
mov
in
adc
out
sarb
lahf
inc
outsb
loop
ja
int3
xor
inc
xchg
shll
xor
inc
jne
mov
push
or
shl
lea
jne
dec
pop
pop
adc
fistpll
add
sbb
and
pusha
xlat
nop
sub
inc
jno
mov
aaa
pop
add
sub
adc
fwait
ss
cmpsl
pop
int
inc
gs
push
jne
ret
sbb
jl
mov
es
loop
lret
jae
mov
cmp
xchg
inc
sbb
pop
or
movsb
decl
pushl
xor
jmp
or
mov
mov
mov
sub
push
movsb
adc
adc
cmp
scas
cvtdq2ps
dec
fildll
mov
mov
dec
loop
ljmp
lea
push
fiadds
xchg
imul
xor
push
pop
stos
in
or
jle
mov
scas
xchg
add
sbb
ja
adc
or
xor
adc
rorl
data16
std
xor
xchg
sub
add
popf
xchg
cld
push
aam
or
es
inc
repnz
les
rcr
push
imul
insl
pop
shll
mov
jecxz
addr16
sbb
add
xchg
data16
mov
cmpsb
push
push
in
pop
dec
into
push
xor
test
and
divb
push
inc
lahf
jne
icebp
in
xchg
aaa
push
push
or
popa
test
ja
jle
nop
les
cltd
or
sub
notb
pop
xor
insl
cmp
cmpsl
arpl
mov
jns
imul
cs
cmp
push
movsb
fs
pusha
scas
mov
fiaddl
sub
invd
push
inc
inc
xchg
push
mov
scas
and
push
into
mov
loopne
push
dec
push
icebp
mov
push
loopne
jle
rcrb
jl
jno
arpl
push
mov
and
xchg
clc
stos
jne
xchg
jp
add
lret
mov
mov
xchg
pop
mov
adcb
lock
jecxz,pt
idivl
dec
sbb
scas
and
cwtl
sti
add
test
incb
mov
xchg
lea
in
in
jo
dec
call
cmp
cmp
test
and
adc
adc
inc
mov
enter
lcall
and
es
cmp
and
lret
test
inc
jns
shlb
xor
sub
inc
aas
pop
adc
in
lahf
test
iret
mov
mov
jns
mov
push
cmp
popa
nop
xchg
dec
dec
mov
or
cmpsb
inc
xlat
and
clc
xor
xor
scas
cs
testl
aaa
shll
int
out
shlb
pop
imul
arpl
sub
ret
dec
pop
xor
leave
mov
inc
xlat
xchg
jmp
jb
inc
in
or
adc
bound
subb
or
sbb
jge
xchg
mov
jl
mov
enter
add
dec
adc
es
aaa
ss
inc
nop
xor
mov
lret
lods
fcmovbe
les
or
sbb
mov
pop
dec
xor
and
dec
sti
add
lods
and
inc
sub
jp,pt
daa
dec
aad
decb
test
mov
and
sbb
stos
lds
push
xor
das
daa
xor
mov
cmp
daa
adc
pop
add
fbstp
xchg
or
add
jecxz
dec
mov
xchg
aad
mov
ja
icebp
mov
jg
xchg
nop
jge
sarl
add
dec
in
xor
add
sub
and
inc
sbb
sbb
lahf
loope
popf
cltd
xchg
imul
add
mov
jo
into
push
outsb
ljmp
inc
in
shrd
hlt
lods
outsb
into
dec
and
lcall
lock
aam
xchg
aam
lea
in
iret
dec
ss
pop
cwtl
out
lret
jle
stos
xchg
test
pop
mov
call
mov
mov
mov
mov
xor
jmp
movl
ds
mov
jle
pushf
adc
adc
movsb
fdivrl
dec
xchg
into
xchg
ret
andl
mov
xchg
pop
xchg
xlat
pushf
inc
mov
cli
adc
push
dec
ret
push
push
stc
add
fwait
push
test
lods
mov
enter
rol
shrl
stc
jmp
loopne
add
mov
xor
and
cmpsl
hlt
cmc
rclb
mov
enter
and
or
or
mov
inc
xor
lods
inc
daa
mov
jb
repnz
cltd
popf
cmp
test
xor
popf
push
dec
lods
cmp
fcomi
cmp
std
mov
mov
ljmp
and
adc
pop
sbb
outsl
xchg
mov
mov
das
dec
push
mov
jae
movsl
cld
fnsave
cltd
and
dec
mov
push
and
fs
mov
insl
iret
stos
adc
test
shll
xor
or
dec
scas
cmp
push
mov
adc
adc
push
sbb
lret
dec
int3
mov
jno
fsubrs
mov
insl
dec
mov
rcrl
out
xchg
sub
or
cmpsb
adc
mov
sbbb
jecxz
xchg
push
sub
jae
jnp
xchg
and
fcomip
adc
adc
dec
cli
aaa
jae
adc
xor
shll
adc
adc
in
sbb
push
xor
lds
mov
jne
out
cltd
arpl
and
aam
ret
mov
pop
jecxz
jmp
xor
adc
pop
inc
movb
sahf
push
std
jo
in
xorb
cmpsl
add
cli
inc
cmp
add
sarb
and
add
ficoml
addb
cltd
add
and
stos
in
fsubr
sub
cmp
test
cwtl
loope
mov
xchg
or
lcall
sub
ret
jno
adcb
jle
notl
lahf
into
mov
std
lret
in
repz
and
xchg
sbb
sbb
aaa
pop
jl
insb
and
scas
rcrb
loope
int
ficoms
push
xchg
mov
stc
lock
shll
pop
xchg
push
sub
xor
mov
adc
pushf
jnp
outsl
push
sbb
or
pop
outsl
mov
idivl
leave
addb
cmc
mov
in
mov
inc
mov
loopne
iret
mov
cmp
inc
inc
arpl
push
lcall
lahf
sbb
xbegin
mov
fs
mov
pop
xchg
and
sbb
or
sbb
mov
call
out
cs
imulb
sub
xor
inc
andb
ret
sbb
adc
stos
cmpsl
jmp
aas
fiaddl
cmpsb
mov
dec
jns
and
mov
in
pop
jnp
cwtl
jp
add
xor
insb
jb
cmp
pusha
fsubl
iret
adc
shll
in
inc
mov
add
stc
sbb
push
push
cmp
xchg
call
les
push
fs
pushl
jecxz
inc
push
test
xchg
notb
jne
sti
sarb
xchg
mov
pop
aam
ds
dec
jg
dec
pop
cwtl
mov
in
xchg
xchg
push
decb
push
sbb
addr16
fidivrs
imul
xor
jmp
jge
jmp
cmp
mov
js
pop
punpckhdq
adc
adc
or
leave
cmp
add
fcomps
jle
daa
inc
add
test
popf
xchg
mov
das
imul
adcb
int3
push
in
outsb
test
repz
repnz
ljmp
dec
test
adc
fcmovne
fstpl
mov
ret
inc
push
int
cmpsl
pop
and
mov
inc
stc
in
and
cmp
cld
inc
add
lock
jp
sub
stc
idivb
adc
and
test
mov
jbe
sbb
mull
push
and
sahf
inc
scas
xlat
scas
xor
cltd
mov
inc
adc
rcrb
dec
xor
arpl
xor
daa
pop
cwtl
jg
push
push
out
dec
fs
inc
add
aam
negb
adc
ficomps
in
sub
data16
pop
ror
add
push
or
jmp
fstl
mov
test
mov
push
or
add
imull
adc
aam
dec
cli
out
pop
pusha
daa
loopne
xchg
sub
inc
ret
sub
lods
xchg
cs
add
and
arpl
lret
loope
mov
mov
pusha
adc
xchg
fwait
mov
stos
mov
leave
leave
outsl
inc
sti
and
mov
inc
xor
sbb
fisubl
xor
in
call
jo
into
out
pop
pop
and
ret
push
sti
roll
add
cmp
out
es
mov
mov
adcb
loopne
leave
inc
loop
imul
test
cwtl
jle
push
aas
femms
add
xchg
daa
repz
cmpsl
mov
xor
lods
jae
leave
daa
push
push
les
xchg
xchg
pop
hlt
xorb
push
mov
push
xchg
xchg
push
inc
sbb
shll
xchg
mov
outsl
pop
mov
fisubs
test
sahf
cmp
cwtl
mov
mov
sahf
pusha
divb
aad
sbb
xchg
in
cwtl
lret
hlt
out
cmp
adc
jne
mov
and
adc
aad
pop
dec
icebp
and
out
jg
add
imul
fimull
nop
push
adc
jmp
orl
xchg
dec
rolb
int3
mov
pop
mov
mov
mov
leave
cld
int
or
sub
add
lods
mov
pusha
lods
pop
cltd
mov
jo
and
push
mov
dec
mov
and
and
push
es
inc
pop
xchg
xor
insb
cmp
lret
stc
out
cmpsl
gs
fisubrs
mov
or
mov
sbbb
cmp
dec
or
and
aas
std
sub
insb
int
jg
and
out
add
js
imul
push
or
ret
mov
sub
aaa
push
fcoms
movsl
iret
adc
sub
gs
sub
jg
or
push
je
pop
xchg
adc
clc
jae
push
rorb
cmovo
inc
mov
decl
dec
and
push
jns
filds
adc
pop
aad
xor
aaa
push
in
repnz
clc
andb
dec
loope
test
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
std
jle
xchg
adc
adc
pop
xchg
jmp
push
inc
les
into
cmp
sbb
xor
cmp
mov
jmp
outsl
fs
int3
mov
pop
xlat
adc
mov
lock
xor
aad
dec
mov
ucomiss
mov
popf
arpl
rcr
mov
imul
mov
jns
push
aam
mov
jp
mov
dec
fwait
inc
push
jae
inc
fdiv
cmp
lret
add
std
jecxz
push
in
aam
rcr
cmpsl
pop
push
xchg
stos
shlb
sbb
jmp
roll
and
or
loope
dec
int3
js
pop
loopne
in
in
dec
dec
cs
adc
setl
jl
leave
jbe
dec
cmpsl
repz
adc
or
fdivrs
mov
jns
and
cmpsl
mov
mov
fildll
incl
enter
cli
psubq
xchg
cwtl
dec
jge
cmp
xor
in
push
fwait
mov
data16
mov
xchg
clc
andl
ss
adc
mov
push
inc
jp
push
mov
dec
cmp
mov
jg
and
cmp
shlb
or
stos
divl
frstor
pushf
lahf
jns
fcompl
sar
and
xchg
stc
fwait
testl
sbb
popf
push
lock
mov
mov
inc
int3
mov
jb
xchg
testb
not
jp
dec
pop
int
sub
popa
inc
ss
imul
test
ja
lret
mov
sbb
add
aas
pop
int
stc
pop
adc
and
fidivrs
test
sbb
movsb
insb
and
orb
repnz
push
cmp
dec
add
stc
les
out
sbbb
mov
push
xlat
add
mov
scas
enter
sahf
pushf
iret
lcall
push
lret
stc
js
mov
ljmp
rclb
mov
gs
into
mov
mov
cmp
dec
jge
xor
jmp
mov
xorl
cwtl
in
test
mov
ja
sarl
push
mov
push
outsl
pop
dec
inc
inc
jae
sti
push
lea
in
sbb
pop
leave
push
sarl
out
in
test
mov
lea
popf
dec
lods
push
hlt
pop
xor
xchg
dec
mov
and
out
je
cs
stc
xchg
adc
pop
addb
pop
sub
adc
pop
push
add
add
lds
imulb
mov
insb
xor
popa
push
mulb
add
int
rolb
or
fcmovbe
push
push
fildl
clc
mov
mov
call
sbb
call
call
inc
and
lock
arpl
sarl
test
add
dec
outsb
ret
ret
aad
lahf
lea
jo
xor
insl
call
in
jae
jne
les
jl
adc
ss
js
rcrb
insb
call
addl
and
sub
push
into
pop
in
movsl
push
insl
or
xchg
jp
hlt
jge
mov
push
fcomi
mov
jb
cmp
push
je
movsl
gs
push
outsl
mov
sbb
adc
or
cmpsb
shlb
or
cmc
xlat
stc
inc
aaa
aas
xor
mov
jmp
sahf
pop
pop
adc
lahf
sbb
mov
stos
adc
adc
mov
loopne
or
mov
cmp
xor
hlt
push
imulb
cmp
xor
push
or
sub
and
lcall
cld
jle
mov
inc
stc
or
dec
inc
jb
inc
cli
scas
fmull
fwait
lret
xor
sbb
cs
xchg
push
jnp
in
xchg
call
pop
xor
mov
movb
xchg
cmp
adc
jae
ffree
push
popa
loopne
adc
scas
jbe
sub
pop
pop
pusha
dec
pushf
outsb
and
nop
sub
push
in
add
shl
xor
imul
es
cld
in
cmp
aaa
dec
and
std
xchg
dec
lock
jbe
lret
aam
jl
sarl
adc
fldcw
cmpb
push
xchg
adc
pushf
xor
adc
stos
push
dec
rcll
pop
ljmp
pop
shll
mov
jle
dec
loop
push
ret
jmp
xchg
mov
mov
lock
aas
dec
mov
dec
out
int
lahf
scas
xchg
xchg
stos
in
into
outsb
mov
jmp
cld
loopne
inc
repz
test
jns
stc
jbe
or
out
aaa
in
lods
call
pusha
mov
push
sahf
add
xorl
mov
and
xchg
and
ljmp
repz
pop
test
fisubrs
mov
inc
add
jno
stos
ss
aas
push
mull
inc
jecxz
push
inc
rorb
dec
cmp
pop
adc
std
mov
and
cmp
test
das
lea
mov
leave
xor
cli
lcall
pop
jno
loopne
pop
lock
fisubrl
pushf
frstor
dec
into
test
dec
icebp
das
jp
cs
pop
mov
push
addr16
mov
es
aaa
jbe
mov
add
inc
xor
dec
jns
xchg
dec
xchg
cmp
pop
scas
cmc
sub
adc
dec
or
dec
lock
dec
sbb
imul
insb
repnz
out
push
stos
movsl
pop
and
ret
je
cmp
hlt
inc
add
add
outsl
in
repz
scas
cmc
testl
stc
ljmp
insb
outsl
xor
sub
xchg
push
mov
jle
nop
push
shll
cmp
adc
mov
mov
shll
or
cli
fimuls
ss
mov
xchg
inc
cmp
xchg
popf
inc
push
cmp
add
call
push
shlb
clc
scas
xor
inc
lret
xchg
push
push
push
mov
sub
sub
jge
js
add
lods
in
or
adc
les
xor
mov
movsb
sbb
jmp
and
ja
pusha
loopne
adc
rcrl
mov
xlat
insb
gs
xor
lods
mov
adc
stos
bound
inc
fimuls
and
mov
mov
pushf
sti
push
mov
cmpl
notl
call
stc
pop
pop
sbb
lds
mov
andb
jae
mov
rorb
mov
hlt
lcall
mov
xchg
fwait
cmc
push
clc
rcll
add
enter
decl
lea
test
incl
lret
fmuls
fdivr
decl
inc
dec
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
sub
adcb
out
push
loope
nop
mov
xchg
xchg
repnz
fcmovu
outsl
pop
repz
add
sbb
or
test
xchg
or
cwtl
mov
inc
loopne
xchg
je
jmp
jbe
arpl
stos
jg
dec
jo
cli
xchg
sub
pop
clc
mov
jne
mov
sbb
repnz
stc
insl
jecxz
sahf
xor
pusha
into
push
jnp
mov
jnp
fwait
mov
pop
insb
aaa
testl
fs
lods
and
mov
ret
test
lods
and
hlt
in
inc
mov
mov
leave
or
out
or
outsb
ljmp
cmp
and
xchg
lahf
jbe
push
jp
std
jmp
mov
adc
dec
inc
inc
jmp
cvtpi2ps
rcrb
sbb
test
sub
push
jnp
xlat
fdivs
stc
lret
psubsw
push
inc
std
test
iret
out
ss
jne
loopne
adc
je
mov
in
or
xchg
mov
mov
ljmp
lret
sbb
insb
lea
and
pop
push
ret
test
sbb
scas
mov
ds
mov
and
aam
in
enter
mov
inc
cmp
scas
sub
adc
mov
and
xor
imul
push
xor
sub
scas
mov
dec
xchg
sbb
ja
ror
js
cmp
xlat
in
sub
scas
sbb
loopne
add
js
xor
push
mov
repnz
jbe
lods
stc
int
pushf
dec
and
add
or
push
inc
enter
add
int3
ret
sub
call
repnz
jle
scas
daa
rcrl
sub
insl
mov
int3
inc
xlat
cli
mov
inc
clc
testb
xor
insl
scas
rcll
stos
popa
out
pop
out
push
mov
push
and
xchg
fbstp
lock
xor
xchg
pop
or
and
cmc
dec
jo
add
in
out
mov
adc
xlat
imul
into
mov
pop
sti
aam
lret
sbbb
outsl
clc
das
xchg
mov
rcrb
xchg
dec
div
mov
int
push
push
iret
jmp
and
ret
fisubs
mov
mov
xchg
pop
add
cld
adc
cmp
jg
clc
push
sidtl
pop
add
repz
push
jbe
imul
rol
daa
sub
popf
es
insb
pop
sbb
cmc
cld
ds
push
lock
sub
or
bound
call
xor
inc
mov
and
mov
fcmovnb
and
xchg
sti
xchg
in
div
mov
add
jns
xor
mov
sbb
jnp
mov
push
les
xchg
sub
push
out
shufps
xor
and
sbb
scas
aam
lock
mov
mov
or
sub
inc
mov
xchg
fisttpll
gs
ret
je
adc
push
sbb
ds
or
jno
cwtl
cld
aaa
mov
jb
popa
and
push
inc
shrd
push
lahf
ret
dec
iret
rclb
dec
mov
shll
push
jg
rcl
inc
ljmp
call
incl
mov
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
xchg
ljmp
stos
adc
adc
fstpl
push
xchg
imul
pop
test
lds
sbb
cld
adc
stos
gs
aam
arpl
and
or
push
add
ds
lods
fisubrs
aam
icebp
xor
and
and
nop
inc
ret
sub
and
or
cmpsb
insb
jmp
mov
jno
push
and
dec
inc
cmpsb
data16
adc
mov
xchg
lret
rclb
adc
jecxz
idivb
inc
aad
lock
jnp
sbb
pusha
jns
xchg
loop
inc
ds
ss
xchg
je
dec
xor
lret
sbb
push
cmp
imul
lcall
sub
js
cld
gs
ss
fildll
xchg
fisubs
popf
sbb
stos
rolb
stc
add
lods
ss
test
mov
xchg
dec
or
add
xchg
roll
out
fisubl
xor
mov
xor
and
popf
pop
hlt
jno
cmp
mov
int
scas
push
sub
addr16
sub
movsb
push
repnz
jge
stos
inc
sub
js
adc
rclb
mov
sbb
pop
or
pop
je
jne
or
mov
cmpsb
or
xor
sub
mov
pop
cmp
xorb
in
cwtl
rolb
mov
andnps
stc
pop
pop
sub
dec
divl
lret
adc
arpl
leave
out
jge
lods
push
imulb
sub
aam
insb
sbb
fidivs
test
out
sub
inc
out
nop
pop
dec
test
sbb
std
xchg
and
notl
adc
push
insb
and
jle
lret
mov
outsb
xchg
mov
xor
in
ja
into
sbb
add
push
int
pop
mov
repz
insl
inc
mov
xchg
push
push
movsl
shrb
xor
jae
push
out
xor
pop
push
cmp
pop
and
and
adc
lods
popa
sub
jl
jmp
inc
adc
dec
clc
rclb
scas
xor
push
mov
pop
cwtl
bound
test
xlat
je
and
cmp
out
push
inc
stc
out
pop
stos
ror
cmp
mov
or
testb
cltd
pop
push
rorl
pop
mov
mov
adc
mov
cs
pop
mov
divb
popf
gs
fcmovnb
lock
mov
mov
sbb
cmc
test
daa
stc
inc
sub
cmp
pusha
and
ja
push
jbe
xlat
popa
pusha
out
xor
mov
xlat
cmp
arpl
and
push
jle
and
adc
scas
cltd
sbb
mov
xchg
add
cmp
push
inc
imul
pop
cli
mov
xlat
icebp
ds
cwtl
add
add
or
jecxz
adc
mov
cmpsb
loope
mov
sbb
fcomp
xchg
mov
and
jnp
inc
rorl
clc
adcl
in
xor
add
lret
movsb
jo
adc
out
sub
dec
mov
sti
push
inc
add
pop
mov
push
repz
leave
ljmp
dec
push
xchg
cltd
pop
daa
push
mov
iret
or
xchg
lods
and
sbb
repnz
stc
ret
clc
decl
dec
lds
decl
jmp
mov
clc
mov
sub
jle
mov
push
jo
adc
push
mov
xchg
movsl
dec
mov
ret
push
sub
mov
xchg
and
mov
push
mov
addr16
repnz
clts
pop
sbb
xchg
scas
or
cmp
leave
sarl
popf
pop
jnp
testl
and
push
inc
mov
add
fs
mov
jg
jns
or
data16
insb
fstpl
lret
mulb
ss
adc
outsl
rorb
mov
outsb
hlt
popf
inc
mov
sahf
imul
arpl
lcall
jecxz
test
pop
movsl
cmp
movsb
cmp
mov
jle
xchg
hlt
and
shlb
mov
mov
jecxz
lock
mov
sbb
cli
sub
mov
sti
cmp
imul
inc
test
mov
xor
jo
lods
lock
add
jnp
das
push
or
popw
pushf
push
orb
stos
xchg
mov
sub
and
aas
lods
add
and
aam
mov
mov
push
sub
out
outsb
fcompl
aaa
data16
scas
pop
push
ret
lock
out
add
dec
scas
mov
dec
iret
cmp
and
in
xlat
rorb
mov
or
clc
and
pop
fs
jp
xor
inc
lcall
or
jbe
aad
ret
fwait
int3
js
dec
ret
xchg
pop
dec
pop
das
shll
xchg
rcll
imul
adc
clc
mov
jb
call
inc
lods
je
dec
xchg
or
mov
das
mov
enter
sbb
sub
sub
xchg
jl
out
xor
das
mov
ret
nop
stos
cld
rcrl
stos
fistps
clc
enter
vaddps
loopne
sbb
pop
repz
xchg
insl
adc
mov
js
xchg
lcall
or
or
cli
dec
mov
mov
stos
jle
out
cltd
adc
leave
add
int
mov
dec
cli
in
shrl
loop
push
aaa
pop
mov
dec
orl
dec
addr16
push
scas
inc
sub
xchg
sbb
jg
jp
shrb
sbb
ljmp
pop
ds
mov
mov
xchg
cmp
xchg
fdivl
loop
test
push
xchg
jg
xchg
ds
ret
adc
fdivrl
into
jo
lds
sbb
testl
mov
xorl
inc
loope
andl
jmp
sub
or
scas
and
pop
push
mov
pop
sbb
jge
jo
inc
out
cli
rcrb
and
or
mov
mov
mov
iret
aaa
dec
ficompl
int3
movsl
or
xchg
shll
arpl
adc
sbb
add
cmc
sub
loopne
dec
into
js
push
ficomps
dec
jne
sub
push
push
jb
or
mov
mov
data16
inc
jg
mov
mov
push
mov
ss
in
fs
daa
dec
xchg
es
cmp
inc
aad
fcmove
or
or
dec
or
daa
loop
and
repnz
mov
mov
movsb
notl
sbb
add
sub
inc
push
andb
mov
pop
mov
mov
xor
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
shrl
adc
test
lcall
outsl
inc
push
jo
inc
and
xlat
and
je
or
fs
adc
xchg
shrb
stos
insl
mov
push
mov
jmp
insb
imul
jp
inc
xor
add
and
aam
xchg
sti
or
mov
sbb
popf
lahf
mov
jb
nop
fnsave
loop
mov
out
or
dec
imul
adc
movsb
mov
lahf
shrl
test
test
pop
lret
pop
sub
add
and
jmp
dec
fstpl
cmp
jb
cld
or
addl
lods
jb
mov
out
enter
movsb
jmp
push
jg
xchg
cmpsb
xchg
stc
sti
cmp
add
sbb
push
mov
adc
lods
jl
in
jae
and
sbb
cmp
aad
ss
mov
adc
cmp
lods
mov
cs
mov
cs
sub
popa
hlt
stos
loope
loopne
mov
out
xchg
les
divb
push
pop
orb
mov
cmpsb
or
cmp
inc
int
test
and
inc
pop
mov
lods
xchg
xor
jmp
das
mov
addr16
cwtl
shlb
inc
nop
add
add
shrl
mov
ljmp
sub
sarl
popf
push
xor
aad
cli
xchg
cmpsb
fstp
cmp
sbb
dec
movsb
pop
mov
jmp
das
push
mov
arpl
fld
in
jne
cwtd
sub
adc
fcompl
cwtl
push
fadds
ja
cmp
scas
pop
dec
mov
js
jno
lret
addr16
imul
pop
mov
test
xlat
mov
call
or
cmp
dec
add
or
cmp
xchg
mov
mov
repz
jecxz
push
inc
mov
or
mov
mov
ret
sub
jl
fcoml
jbe
pop
add
fs
xor
aas
and
lret
idivl
fsubs
loopne
int
insb
in
xlat
fcomip
push
fcomps
xchg
fwait
mov
cltd
and
xchg
fcoml
sbbb
pop
lods
ja
cmp
scas
loop
pushf
adc
mov
pusha
stc
pop
scas
ret
mov
andl
mov
xchg
stos
and
aam
int3
lods
push
cltd
mov
clc
mov
xor
mov
bound
fstpt
xchg
sbb
pop
sbb
pop
push
mov
and
out
je
or
test
into
scas
mov
jge
movsb
je
dec
push
imul
push
lock
nop
andl
cmp
scas
add
cmpsl
mov
cltd
sti
xor
rcl
das
lods
push
xor
mov
xor
dec
nop
in
mov
push
sahf
xor
lock
out
shr
jmp
jno
jae
xchg
and
into
cmpsb
mov
inc
push
sahf
das
sub
dec
fwait
pop
lea
mov
gs
jns
and
cmp
mov
mov
jecxz
fidivrs
popa
xor
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
out
add
test
movsl
cmpsb
xchg
mov
pop
add
jbe
jno
add
nop
les
repnz
fcomi
or
jb
lahf
add
sbb
js
mov
hlt
and
push
shll
add
xchg
loop
cmc
push
js
inc
in
repz
mulb
cmpsl
cltd
imull
mov
jmp
les
cmpsb
nop
mov
fadd
sub
sahf
frstor
in
dec
test
int3
inc
mov
ds
inc
inc
cmp
in
xor
xor
mov
imul
icebp
pop
xlat
lcall
cmp
xor
and
mov
and
or
test
movsl
mov
adc
stos
insl
mull
mov
imul
push
cmp
cmp
mov
cmp
test
push
inc
cmpb
roll
mov
sbb
int
mov
jo
mov
mov
push
add
mov
lret
and
push
cmp
push
mov
int
in
lret
test
ljmp
mov
loopne
fistpll
mov
xor
dec
test
ret
and
nop
sbb
mov
push
gs
fists
lea
and
sti
scas
xor
sbb
mov
mov
test
stc
pop
xor
dec
inc
cltd
aaa
sarb
mov
scas
in
xchg
push
fstp
jb
lahf
mov
ret
adc
int
shrl
stos
fidivrs
mov
push
jnp
mov
imul
mov
adcb
mov
dec
inc
xor
dec
cld
mov
enter
mov
mov
adc
pop
sub
jp
icebp
dec
sub
imul
pop
and
out
hlt
pop
adc
mov
dec
in
and
notl
lds
rcl
xchg
fs
pop
jge
shl
dec
insb
insl
xchg
test
mov
cmpsb
push
ja
outsl
push
adc
jg
dec
jecxz
iret
pushf
rorb
ds
push
out
xchg
fstpt
je
pop
jnp
dec
adc
movsl
add
adc
sub
repz
cmp
mov
into
xchg
adc
mov
in
cmp
sbb
in
clc
pop
daa
inc
sbb
mov
push
mov
imul
rcll
mov
insb
cmp
sbb
sbb
mov
sarl
je
cltd
mov
ss
stc
dec
imul
repnz
inc
ss
jle
outsl
cld
push
fucomip
lock
xchg
adc
pop
testb
jge
insl
js
jp
xchg
leave
push
ljmp
imull
es
out
xchg
punpckldq
dec
jecxz
cmc
xchg
fs
sub
sub
jo
sub
cltd
and
fildl
sub
add
pop
push
mov
mov
cmp
sub
sub
mov
dec
inc
mov
jmp
xlat
mov
out
sti
push
xor
mov
mov
sub
cmpsb
adc
loope
cmp
jp
sti
sub
mov
push
repz
cmp
pop
mov
adc
xchg
test
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
adc
adc
adc
fisttps
cli
mov
sub
push
adc
mov
repz
mov
scas
popa
xchg
and
movsl
stos
ja
lcall
xor
mov
push
or
cli
push
add
cmp
pop
push
xor
xchg
stos
lods
jecxz
mov
cltd
push
addr16
or
inc
push
xchg
xor
clc
pop
add
std
inc
testl
adc
je
add
sbb
push
push
and
aam
lret
shll
clc
add
jg
stos
stos
xchg
sahf
iret
adc
jge
inc
int3
mov
or
aad
cltd
add
mov
testl
fwait
inc
mov
and
in
add
aas
lcall
mov
and
or
sar
jne
shll
mov
sbb
dec
jecxz
mov
in
pop
es
pop
pop
popl
cmp
cmp
cmp
out
push
xchg
repnz
cmc
cwtl
mov
xlat
test
mov
sbb
mov
mov
xchg
add
mov
sbb
aad
mov
test
mov
insb
scas
sub
insl
mov
ret
adc
das
pop
data16
out
xchg
mov
mov
mov
mov
in
inc
sbb
aas
mov
mov
xor
lock
repnz
aam
mov
enter
lahf
in
cmp
lea
xor
xchg
testl
cld
cmc
push
mov
dec
push
or
xchg
adc
add
dec
push
pop
movsl
inc
std
sbb
sub
dec
mov
out
or
mov
jmp
mov
scas
addb
pop
dec
shl
push
lahf
sbb
xlat
mov
mov
scas
or
xchg
cmpsl
outsl
enter
cmp
dec
ds
fmulp
sub
inc
pop
into
in
data16
mov
mov
ret
jl
lcall
push
sub
lods
pop
sub
cld
out
repz
out
sbb
push
push
sbb
sbb
lock
or
add
push
clc
pushf
mov
jne
lods
or
arpl
xlat
ds
push
adc
daa
loope
xor
test
dec
lds
dec
inc
sar
sub
jmp
test
jne
xchg
xor
ficompl
int3
cmp
mov
push
les
adc
pop
inc
mov
pop
dec
pop
and
push
repz
loopne
aad
out
lock
sti
cmpsl
and
adc
push
fwait
and
pop
repnz
push
das
mov
cmp
ret
or
xor
inc
out
shrl
mov
enter
mov
mov
push
sub
fmull
mov
and
stos
iret
lds
inc
adc
bound
ja
movsb
int3
xorb
aam
xchg
stos
or
std
aaa
lods
mov
jmp
mov
cltd
jp
sub
and
lea
cmpsb
dec
mov
lods
or
fnstcw
sub
fistpll
inc
cmp
adc
sbb
rol
jns
arpl
xchg
fiaddl
rcll
insl
adc
pause
hlt
cli
sbb
aaa
aad
hlt
cld
sbb
pop
not
xlat
jo
jne
jne
pusha
jg
sbb
lds
rdtsc
xchg
rcrl
lock
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
xchg
jb
or
fimuls
pop
leave
or
jp
sahf
arpl
xor
cmp
shl
pop
sbb
lret
adcb
jbe
xor
andb
popa
xlat
sub
lods
in
pop
pop
loope
jmp
repnz
lea
dec
mov
adc
in
shll
aaa
lahf
sbb
mov
into
ja
inc
jbe
xor
inc
rclb
push
mov
sbb
pop
sti
adc
mov
cmp
in
dec
push
jno
lret
inc
mov
lret
mov
icebp
out
cmp
cmpsl
jns
mov
repnz
pusha
popa
js
scas
push
movsl
push
inc
in
pop
mov
push
lds
movsb
js
push
xchg
jge
ss
mov
repz
xor
mov
sahf
ljmp
mov
fstpl
cmp
jbe
jl
stos
mov
and
and
int
and
lcall
ja
jns
popf
jle
mov
lods
sub
xchg
loopne
mov
cs
and
sub
add
mov
sbb
add
loopne
mov
stc
mov
addr16
outsl
adc
and
sub
je
jp
dec
test
jge
ret
adc
out
pop
push
adc
xor
xchg
lret
decb
push
xor
lret
aas
shl
fildl
pop
or
adcl
dec
push
fmull
shrb
aas
dec
mov
in
loop
fs
or
adc
mov
lret
dec
jb
lods
stos
inc
cwtl
je
addr16
inc
inc
push
sub
mov
sub
fldcw
scas
xlat
rep
sub
test
jns
adcl
pusha
jb
sbbb
inc
sbb
or
xchg
clc
adc
mov
push
roll
inc
mov
imul
fwait
or
xchg
pusha
or
mov
mov
in
mov
mov
cmp
test
cmp
data16
mov
mov
sbb
dec
test
or
xchg
fisttpl
insb
aad
xor
mov
inc
in
ficoms
and
jne
jns
fucomi
dec
int3
out
cmp
xchg
aas
gs
xor
test
fcoml
in
xchg
fwait
xchg
xchg
test
outsl
adc
mov
fsubrl
stos
das
or
adc
rorl
mov
sub
repnz
repnz
push
test
cld
loop
xor
sub
mov
stos
inc
sub
push
xchg
addr16
lods
cmp
push
or
testb
or
loopne
test
jge
and
ficomps
fimull
bts
hlt
outsl
test
sub
repnz
loope
ret
notb
ficoml
xor
fdivrp
push
mov
stos
es
out
mov
outsl
jmp
ret
cmp
cmp
clc
mov
mov
adc
stc
mov
shlb
add
and
aas
sub
and
pop
dec
sbb
leave
cmp
xchg
and
mov
sub
cmp
dec
div
mov
mov
cmp
scas
mov
mov
popa
mov
sbb
pop
mov
sbb
bound
mov
sub
jecxz
pusha
pop
or
lcall
pop
test
dec
xchg
fisubrl
loope
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
aaa
out
stos
inc
dec
adc
adc
inc
adc
add
inc
sti
sub
push
jle
out
call
ret
and
inc
cmp
push
js
lea
sub
je
dec
int3
out
int
bound
cld
jle
mov
xchg
add
mov
lret
xor
push
mov
xor
sti
sti
loopne
or
bound
sahf
pop
cmpsb
add
aam
mov
xor
int3
mov
mov
sub
and
in
mov
pop
add
mov
xchg
ljmp
jg
and
xchg
mov
adc
inc
push
jmp
jb
push
int3
cs
rorl
outsl
and
das
adc
dec
addr16
shlb
xchg
aam
clc
loopne
cli
lahf
pop
cmp
add
cmp
stos
das
push
cmpsl
push
loopne
sbb
sbb
pop
pop
dec
addr16
inc
xchg
pop
fstp
xchg
pop
jp
sub
jle
in
out
inc
mov
jnp
mov
out
sbb
mov
pop
rolb
dec
cmp
shlb
aas
jg
movsl
outsl
js
xchg
pop
loope
insl
push
mov
loope
xchg
or
out
mov
pop
icebp
push
ja
pop
mov
lds
cmpl
ds
ja
or
icebp
inc
xchg
mov
loop
mov
std
mov
push
push
int
daa
sub
jge
fwait
jg
imul
sub
push
int
dec
inc
mov
mov
xor
and
js
lods
cwtl
adc
out
pop
jns
ret
shl
lahf
lcall
pop
frstor
xchg
data16
fucomp
xchg
movsl
pop
push
pushl
jb
fldl
add
cli
testb
pop
sub
jnp
or
xchg
jle
mov
mov
cmp
jl
xor
pop
enter
xor
sub
les
lahf
out
js
daa
lahf
dec
icebp
les
cmpsb
push
lret
pop
ret
xor
dec
imul
xorb
daa
pop
xchg
xchg
ljmp
scas
test
or
pop
push
fidivs
popa
cltd
in
push
outsb
nop
cmp
lcall
scas
pop
xchg
jnp
mov
xlat
cmp
adc
jne
xor
jmp
movsl
sahf
insl
stos
sub
or
leave
stos
fsubrl
fwait
push
mov
adc
out
sbb
ja
movsl
or
fcompl
lds
aam
loope
loop
dec
mov
cmp
and
and
cmp
push
mov
sbb
pop
sub
adc
loop
mov
cmp
lahf
lahf
and
jnp
inc
rclb
mov
xchg
addr16
fs
cmp
push
lods
faddl
push
jb
cmp
mov
sti
lahf
das
cli
mov
leave
xor
js
mov
test
call
push
das
fiaddl
xlat
mov
adc
les
addw
xor
aad
dec
cmpsl
loopne
mov
dec
jbe
pusha
pusha
andl
jg
xor
sbb
movsb
leave
push
loope
xor
mov
movsl
dec
or
clc
sub
icebp
mov
test
dec
pop
cld
lds
and
aas
or
idivb
dec
or
ret
cmpsl
add
pop
movsb
jbe
xlat
iret
fistl
call
enter
jge
cmp
out
dec
mov
test
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
ds
jg
mov
int3
into
lods
adc
pop
sbb
cmc
outsl
jmp
ret
cmp
mov
jl
stos
xor
jne
lds
in
rorb
andl
jns
repz
sub
pop
cld
mov
outsb
sar
lcall
cmpsl
ret
rcl
xchg
movsb
leave
adc
scas
sub
mov
jb
jo
jb
and
aad
lods
stos
jne
push
inc
testb
xor
or
test
sub
loopne
int3
mov
fimuls
call
stos
std
call
sub
test
xchg
lret
idiv
xlat
pop
sahf
mov
rcrl
jl
cli
pop
aam
sarl
push
out
jmp
fmuls
mov
lret
nop
pop
jge
test
stc
rclb
pop
jg
int
mov
in
or
in
pop
sbb
in
cmp
dec
pop
mov
arpl
jp
stos
jbe
pop
sti
bound
or
mov
in
aad
repz
loop
push
cwtl
inc
leave
sahf
lea
mov
js
stos
mov
lret
xchg
jle
dec
jmp
arpl
xchg
out
cmp
pop
sbb
gs
sub
out
pusha
mov
rcr
test
cli
inc
push
jne
push
sub
cmpsl
pop
jp
mov
outsl
test
cmpsb
pop
rclb
mov
jne
jns
push
pop
pop
lock
sub
das
adcl
jnp
addr16
mov
sub
test
in
jecxz
movb
in
cmp
in
dec
rclb
cmc
bnd
iret
je
loope
pop
mov
jne
ret
xlat
scas
xchg
ljmp
out
mov
inc
in
adc
imul
fwait
gs
mov
xor
pop
dec
push
push
mov
pushf
in
lcall
or
decl
lret
orl
imul
int
push
in
xchg
cmp
repnz
jecxz
inc
popa
test
mov
pop
fildl
scas
inc
mov
mov
clc
cmp
aad
fwait
mov
dec
out
adc
popf
mov
test
add
jb
jge
sub
and
pop
daa
jl
mov
nop
scas
sarb
or
notb
int3
add
xor
fistpl
in
mov
addb
imul
dec
dec
iret
lret
loopne
scas
push
loop
adc
ret
cmpb
push
and
arpl
mov
sahf
adc
add
cmp
mov
pop
lcall
imul
jl
lcall
sbb
sub
dec
in
fld
cmpsl
add
outsl
mov
push
sarb
test
adc
and
lcall
inc
cwtl
call
or
pop
cmp
inc
scas
jno
adc
insl
clc
lahf
xor
jmp
aas
xchg
or
ret
lods
add
movsb
in
jg
push
jle
shl
xor
fwait
jle
fwait
sub
fxch
inc
jo
sahf
push
stc
cmp
inc
jo
adc
adc
add
pop
sub
pusha
inc
fnstenv
xlat
out
jle
fcom
xchg
insl
fistpl
jp
scas
iret
mov
scas
testb
fmull
clc
or
inc
adcl
mov
popf
mov
jno
sbb
scas
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
stos
insb
js
adc
adc
movsl
push
fnsave
push
stos
and
mov
icebp
stc
lahf
div
cmp
bound
iret
rcrl
das
mov
push
adc
addl
push
cmp
push
pop
xchg
ror
lahf
cs
mov
js
or
scas
push
cmpb
push
out
lret
cmp
mull
das
int3
pop
and
and
mov
data16
xchg
inc
sbb
push
das
clc
mov
ljmp
xor
adc
pop
insl
iret
sbb
lea
adc
or
stc
outsl
nop
lret
ds
mov
cmpb
pop
incl
jae
push
xlat
or
mov
repz
mov
into
ret
hlt
rcr
pop
test
and
adc
sub
mov
cli
add
cmc
pushl
xor
sbb
into
push
mov
pop
push
cmp
pop
mov
mov
fisubl
mov
or
mov
mov
cmp
ss
jne
rclb
or
dec
outsb
mov
push
jbe
repz
sbb
push
cmpsb
dec
je
icebp
xchg
les
push
pop
loop
pop
cmpsl
add
fstpl
jle
in
dec
cmc
movsl
fcmovb
leave
mov
xchg
jae
movsb
je
push
mov
add
xor
xchg
sub
es
test
sub
arpl
shrl
jne
ss
lods
aad
lahf
and
add
xlat
mov
jno
psrlw
clc
movsb
aas
je
mov
jae
cmp
mov
out
lret
jle
push
cli
jg
inc
fnsave
mov
repz
push
js
mov
pop
into
jo
cmp
xor
test
xor
push
not
das
mov
div
cltd
in
dec
cmp
xlat
mov
cmp
push
xor
lds
mov
insl
pop
mov
mov
leave
pop
xor
sub
imul
inc
inc
test
in
mov
sub
push
fdivp
or
lahf
ficoms
adc
dec
rclb
decb
pushf
andb
movsl
stos
cld
pop
cwtl
leave
or
mov
imul
jne
or
and
ja
xchg
inc
xchg
adc
ljmp
data16
jle
mov
dec
aas
mov
inc
xlat
sbb
pop
dec
mov
add
movsl
adc
pop
jns
test
lea
jbe
in
out
push
sub
mov
cmpsb
mov
xlat
mov
xchg
jne
adc
aas
nop
call
xchg
jmp
cmp
sbb
insb
mov
out
negb
pop
add
pop
or
ror
sub
add
cmp
push
mov
jp
in
xchg
jns
sti
push
mov
mov
sbb
or
ja
out
xor
jmp
orl
fwait
xchg
pop
fwait
and
dec
push
xchg
sub
and
cld
mov
test
push
jo
lds
pop
or
push
xchg
push
inc
xchg
lds
mov
jo
mov
stos
mov
imul
jno
cmpsb
aam
lea
loopne
es
lret
jne
adc
sbb
adc
lcall
jmp
push
xchg
rclb
add
sbb
mov
jmp
pop
adc
mov
into
xor
out
popf
addb
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
push
jno
mov
stos
adc
adc
jne
call
push
lock
jg
xor
mov
cltd
and
sar
and
mov
clc
pop
jmp
push
xor
lods
lcall
adc
cmpsl
loop
sbb
sbb
jp
fwait
js
mov
repnz
sub
mov
lahf
scas
or
sub
fidivs
aam
fisttps
popa
out
mov
ss
push
aas
jg
scas
cltd
xchg
or
imul
xchg
pop
mov
addr16
cmp
xor
dec
adc
mov
xchg
cmp
xchg
add
sub
push
mov
outsl
jg
or
add
movsl
push
inc
cmp
shl
push
es
addb
bound
push
mov
xchg
pop
pop
hlt
cmpsb
repz
movsl
push
sbb
cmp
jg
cli
sbb
outsb
daa
daa
dec
cmpsl
add
popa
dec
jmp
or
fisttps
or
push
shrl
xchg
sub
hlt
and
dec
xchg
dec
dec
xor
lock
scas
xchg
dec
jmp
ficomps
jo
inc
mov
cmpsl
adc
js
mov
scas
jnp
jns
lds
loop
mov
pop
imul
jmp
and
out
rcrl
xchg
mul
stos
jbe
cwtl
test
ja
xchg
subl
stc
fistl
jb
aaa
add
jg
mov
pop
outsb
cs
adc
loopne
mov
pop
scas
mov
jne
pop
andl
add
inc
xchg
icebp
sti
add
inc
add
dec
rorb
lods
jge
sbb
repz
ds
mov
stc
push
mov
test
add
jb
ret
out
jno
ret
push
jmp
inc
cli
lcall
mov
lods
shrl
stos
lock
mov
xchg
pop
mov
jp
xchg
sbbl
add
sbb
jb
imul
mov
pop
inc
xchg
sbb
xor
aas
cltd
mov
mov
adc
jle
lds
cs
xchg
sbb
loop
scas
outsb
pop
mov
and
and
lock
cmp
lea
jo
in
push
fildll
negb
lds
add
jo
mov
fdivrs
hlt
lock
negb
cvtdq2ps
and
dec
cmc
jo
and
adc
scas
jbe
xor
jo
mov
mov
test
mov
dec
push
lds
adc
adc
sarl
fldl
call
neg
xchg
aad
out
outsb
mov
enter
inc
sti
add
mov
sub
or
sbb
pusha
sbb
mov
fists
mov
dec
dec
push
pop
data16
cmp
lahf
incl
xor
pop
pusha
es
dec
jo
cld
or
test
mov
mov
divb
jne
cwtl
ret
loop
mov
xchg
cwtl
fidivrl
ficoms
xchg
adc
gs
popa
xor
loopne
call
iret
jnp
dec
push
xchg
cmc
stc
daa
sub
cmc
fisubrs
xor
fisubrl
lods
stos
xchg
inc
lea
push
adc
xor
fisttpl
leave
dec
adcl
jae
ss
jl
insb
imul
stos
xchg
mov
int
aaa
or
push
dec
divl
sarb
or
test
decl
test
add
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
push
push
xor
adc
int
pop
into
mov
push
bound
testb
repz
cmc
mov
inc
decb
cltd
imul
inc
sbb
ss
lods
aaa
xchg
out
xchg
js
and
push
decl
cmp
sbb
adc
pusha
popa
or
fildl
dec
jl
stos
mov
xchg
jl
push
outsb
clc
mov
arpl
data16
aam
mov
nop
es
sub
repnz
xchg
push
cmp
push
iret
xor
or
add
mov
daa
sub
add
cmp
xorb
push
xchg
call
xchg
push
mov
dec
out
cli
ficomps
inc
cs
adc
inc
cmp
dec
das
jmp
cs
loopne
push
mov
loopne
xchg
or
mov
jp
sub
and
cmpsb
sbb
mov
cmp
add
cld
rcrl
fsubs
dec
xor
cld
sub
inc
ror
mov
fstp
push
hlt
shrb
cmp
jg
push
mov
mov
lcall
call
sbb
mov
sub
lret
stos
xchg
fisubs
sub
xchg
out
orl
iret
add
pop
imul
dec
loope
push
mov
push
out
stc
xchg
cmpsb
mov
ss
push
mov
jl
or
jge
lods
stos
loopne
loopne
icebp
lods
dec
add
fsubrs
std
lahf
lahf
lret
in
xchg
mov
sbb
aam
lahf
iret
sbb
stos
lods
out
and
push
pop
or
loopne
ret
lds
adc
dec
out
sbb
lock
daa
shrb
sar
jne
test
add
xchg
pop
dec
mov
nop
stos
loop
sub
dec
xor
aad
push
stos
mov
pop
cmp
inc
shr
lmsw
mov
push
inc
daa
sbb
rcrl
fwait
lret
add
jnp
aaa
rcl
fcomps
pushf
sbb
cmp
leave
ret
dec
cmp
jecxz
out
subb
mov
or
sub
pop
jnp
fdivl
and
jl
xchg
test
or
arpl
push
mov
imull
add
pop
daa
cmp
push
lret
jo
test
sub
xchg
ja
or
cld
mov
aaa
mov
mov
sub
loop
idivb
inc
mov
ffreep
cwtl
testl
outsb
sbb
icebp
cwtl
sub
mov
and
dec
or
and
ljmp
pushf
pusha
jno
les
loopne
iret
cwtl
fs
xchg
pop
loope
ret
xchg
test
mov
mov
dec
stos
jmp
repnz
out
call
push
jb
mov
iret
lret
aad
popf
test
sti
cmp
fcompl
inc
push
inc
int3
mov
sbb
cmp
jecxz
das
imul
imul
add
fisubrl
add
push
ljmp
icebp
cli
pop
inc
pop
xchg
or
push
pop
mov
jge
sbb
push
mov
xchg
jne
cmc
cmp
push
xorb
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
imul
mov
stos
adc
adc
push
ljmp
imul
aaa
sbb
xor
subl
mov
inc
fists
push
fsts
push
sub
and
daa
inc
imul
pop
adc
movsl
dec
fsubl
repnz
jnp
push
or
push
sbb
cmp
mov
adc
test
nop
lock
push
sahf
enter
pop
into
push
inc
push
dec
or
mov
push
ljmp
lret
cmp
sub
adc
loopne
mov
mov
xchg
jno
push
test
adc
mov
cmp
dec
pop
xor
movsb
inc
pop
dec
int3
jno
inc
lret
and
sub
jnp
adc
mov
mov
ret
fnstcw
ret
in
fistpl
jge
add
sub
les
in
or
mov
ss
inc
inc
ret
inc
and
mov
sub
inc
add
mov
and
js
call
stos
lods
or
call
jae
jmp
and
xchg
add
cld
xchg
push
and
ss
in
movsl
lods
jno
jno
pop
frstor
and
mov
js
test
movl
dec
in
cmpsb
add
rolb
sub
or
cmp
pusha
enter
stc
pop
jnp
into
inc
dec
enter
jg
add
cmpsl
xchg
and
out
shll
negl
in
je
fidivl
pop
xchg
xlat
mov
jle
lock
ret
xchg
std
sub
outsb
jle
fcmovb
push
dec
cs
xchg
jmp
paddw
xor
inc
lret
push
nop
dec
lret
mov
testl
rolb
mull
push
add
cs
mov
or
mov
movsl
lahf
mov
insb
int
int3
cld
insb
adc
mov
xchg
out
pop
mov
arpl
sbb
scas
adc
mov
jmp
cmp
cmpsl
inc
cmc
mov
adc
dec
jne
fsts
pop
add
add
scas
cwtl
push
cmc
jno
xchg
pop
out
pop
push
sar
daa
pusha
or
mov
out
push
insl
push
or
mov
mov
test
pop
inc
pop
nop
dec
lcall
cmp
sub
jecxz
push
movsb
jmp
mov
add
cmp
jb
cmp
ss
jo
push
out
inc
jecxz
and
lods
cmpl
insb
arpl
fmull
xchg
xchg
cld
mov
shld
add
and
xchg
ret
jne
mov
xlat
lret
outsl
bound
dec
lret
jle
inc
test
das
rcr
adc
add
pop
and
fistl
mov
cli
sbb
sbb
insb
jbe
xchg
ds
xlat
xor
and
inc
sbb
fwait
mov
and
fwait
jns
std
test
xchg
ja
or
xor
addr16
addr16
dec
test
pop
mov
cmp
push
jge
mov
cmp
push
xchg
mov
into
pop
pop
das
mov
sahf
adc
jg
aaa
adc
jg
sahf
mov
aas
mov
mov
pop
jo
loop
shll
aaa
mov
fwait
push
or
sti
mov
or
scas
movsb
jl
mov
popw
fs
and
ds
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
fs
jmp
in
out
insb
or
int
inc
lods
push
lods
add
xor
add
in
enter
movsl
mov
mov
sarb
add
insb
sahf
outsl
test
fdivr
pop
xchg
mov
test
or
in
xchg
ret
cmp
mov
outsl
enter
push
cltd
xlat
add
jno
hlt
inc
add
sbb
lods
stos
subb
sub
fisubrl
or
int
dec
into
or
insb
fbstp
lea
push
mov
mov
push
std
mov
pop
xchg
shl
push
sahf
int
fwait
cmp
fsts
sti
lock
sub
or
jle
mov
leave
or
negl
std
mov
inc
or
jne
test
push
pop
arpl
fs
push
mov
in
pop
xor
adc
fdivrl
cmc
cli
xor
ljmp
xor
pop
shrl
pextrw
lea
fcoml
int3
aam
lahf
xchg
or
inc
int3
push
add
in
push
xor
ret
lds
jbe
aam
jmp
fmull
inc
inc
push
in
xchg
lret
push
sub
ficomps
enter
sub
xchg
push
fisttpl
fcomip
add
lea
or
xor
push
int
lret
sub
icebp
jne
xchg
add
pop
lock
xchg
sub
dec
xchg
inc
inc
enter
orb
stos
inc
fisubrs
pop
stos
fwait
in
mov
in
or
adc
push
and
stos
jbe
in
test
insl
cmp
and
cmpl
scas
mov
sub
pop
add
and
add
imul
lcall
fldl
jbe
andl
dec
insb
ja
sbb
push
out
leave
test
cs
xlat
pop
in
imul
xchg
test
cmp
inc
fsubs
insb
clc
pop
jl
pop
sub
pusha
cmpb
mov
rorl
in
addl
movsl
pop
nop
push
ret
into
push
aad
scas
mov
popf
or
xchg
or
cmpsb
out
fstpl
jecxz
xor
cmpsl
mov
push
mov
sub
sti
leave
addb
in
add
mov
sbb
out
jns
push
mov
fsubs
iret
push
xchg
out
pop
sub
lcall
nop
and
xor
sbb
push
in
decl
xor
cld
xchg
test
cmp
push
sbb
push
jne
imul
xor
cmp
shrb
and
jbe
aas
or
mov
pop
dec
cmp
mov
iret
sbb
dec
xor
or
dec
fcmovnb
repnz
ret
xor
aam
xor
aad
xchg
dec
repz
xchg
fsubrl
cmp
dec
mov
pop
cmp
cmp
cmpsb
je
inc
imul
ljmp
dec
add
xor
xchg
fcmovnbe
xchg
xor
rcll
jmp
push
pop
pop
rol
mov
lods
js
sti
rclb
jne
lea
and
mov
jae
adc
in
daa
das
dec
andb
stos
subl
cmpsl
mov
out
xor
lds
adc
mov
aaa
xchg
pushf
jne
push
sbb
or
fwait
test
lods
jle
aam
mov
cli
mov
lret
pop
outsb
pushf
mov
insl
fiaddl
adc
mov
icebp
insb
mov
loop
push
pop
xchg
mov
adc
sbb
adcl
add
test
jmp
or
mov
adc
outsl
push
push
sbb
adc
addr16
push
call
into
imul
sub
dec
leave
and
push
push
and
stos
stos
pusha
jbe
jl
sbb
data16
mov
push
xchg
fcoms
pop
inc
sub
mov
jle
push
inc
fadds
cmpsb
pop
add
adc
push
jae
push
cmp
test
fsubp
sti
push
mov
push
js
insb
enter
jae
aas
lds
addr16
mov
scas
leave
dec
or
dec
push
adc
jnp
add
insb
outsb
push
cltd
cmpsb
lret
and
jae
jl
jle
repz
movsl
push
pushl
cwtl
fldcw
add
add
aam
xchg
xor
or
mov
lock
cmpsb
shr
jo
mov
mov
fiadds
int3
cmp
sbb
pop
inc
mov
jbe
cmp
push
xor
add
or
add
sbbl
sub
or
and
out
int
ret
bound
out
push
mov
dec
push
movsl
mov
xchg
sbb
sahf
pop
adc
xchg
std
loope
xchg
mov
ds
jge
xchg
outsb
mov
and
mov
push
xor
jo
cmp
cltd
inc
or
std
ja
movsl
aam
inc
fld
mov
push
xor
push
push
aas
add
pop
ret
roll
pop
sub
jbe
jo
aam
mov
jp
dec
cmpsb
sbb
pop
dec
faddl
and
xchg
jnp
out
icebp
adc
sub
gs
jecxz
push
cmpsb
test
fsts
mov
xchg
int
sahf
pop
movb
js
idivl
hlt
nop
inc
push
inc
mov
xor
pop
in
sbbb
mov
cmpsl
lock
pusha
cmp
movsl
xchg
inc
insl
and
imull
stc
mov
jo
xorl
shlb
mov
ja
test
enter
bound
add
jl
addb
push
or
arpl
daa
fstpl
add
dec
aas
mov
sti
sbb
xor
sbbl
dec
call
loope
mov
xor
and
mov
and
sbb
cmc
testb
and
mov
xor
and
fyl2xp1
xchg
push
sub
push
xchg
push
clc
push
in
xchg
sub
dec
push
xor
cmc
je
jnp
pop
in
lret
mov
imul
int
dec
fwait
or
fisttps
nop
cmp
pop
inc
pop
push
int
push
in
mov
cmc
hlt
push
ficoml
cwtl
dec
pusha
addb
rcrb
mov
mov
lret
mov
ret
popf
test
inc
lods
xchg
lods
lock
fisubrs
or
fdivl
mov
push
in
inc
sbb
or
mov
testb
fwait
mov
mov
fwait
jne
xor
sbb
pop
adc
and
push
or
mov
mov
jb
cwtl
pop
dec
sub
jp
loopne
mov
shr
jnp
jmp
mov
push
jns
out
scas
or
jae
push
pop
fsubrl
or
xchg
pushf
adc
mov
les
push
inc
lods
fs
jmp
sub
shrl
push
xor
pop
jl
aaa
sub
rcll
xchg
mov
and
push
sub
cmp
jno
shlb
decl
lock
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
jns
push
adc
adc
iret
push
pop
es
leave
clc
jp
cmpb
mov
cmp
pop
aad
adc
sti
sbb
pop
leave
inc
aam
pop
inc
push
xor
xchg
mov
xchg
push
mov
sub
adc
test
fisubs
add
rorb
mov
mov
stos
cld
sti
leave
imul
inc
adc
rolb
int
push
shll
jb
mov
or
in
mov
push
pop
daa
call
aas
pop
sub
pop
pop
inc
sti
fmuls
mov
pop
subb
loop
stc
test
cs
pop
mov
in
adc
sub
nop
xchg
add
aas
fildl
arpl
xchg
in
or
int3
mov
xor
orl
dec
out
mov
fisubrl
sub
xchg
xor
ffreep
inc
subb
ficomps
dec
cld
pop
pop
scas
gs
aas
std
imul
xor
aam
fisubrl
arpl
pusha
or
mov
das
or
or
mov
lret
jle
imul
jl
int
mov
jle
jge
movsl
dec
repz
int3
mov
cld
lret
movsl
sbb
mov
mov
jne
dec
cld
aas
sbb
rclb
adc
inc
shll
shlb
insb
sbb
out
lds
and
popa
outsb
inc
push
xor
mov
jge
mov
cmp
cmp
test
dec
cmpb
jle
xchg
and
push
cmp
test
mov
adc
pop
add
jne
dec
dec
add
or
mulb
jmp
iret
jecxz
sbb
out
ret
jmp
push
add
scas
push
xor
xlat
add
pop
jno
add
xor
lret
pmaxub
push
cs
dec
icebp
jge
rorb
push
mov
cmc
lea
stos
hlt
pop
sbb
in
adc
jb
scas
lret
jb
mov
mov
pop
jns
int3
push
mov
incb
es
mov
pop
fwait
sub
mov
aam
push
jl
fisubrs
sub
dec
xorl
fldcw
ljmp
popf
aaa
stc
es
sbb
int
or
pushf
shlb
pop
fidivrl
dec
hlt
aas
dec
addr16
sbb
test
mov
dec
cmpps
clc
sbb
mov
roll
aas
repz
or
ds
inc
movsb
rolb
out
mov
inc
repnz
cwtl
mov
jb
or
test
lcall
mov
stc
jle
aaa
imul
dec
mov
cmp
sub
adc
dec
cmp
mov
push
stc
ss
xor
or
mov
repnz
scas
int3
fwait
out
test
jmp
mov
rcl
or
mov
xor
lods
pop
add
xor
stos
mov
pop
jl
push
jmp
push
mov
xlat
das
jmp
add
push
or
mov
enter
sbb
cmc
pop
orb
and
loope
cli
jecxz
idivb
or
fbstp
mov
pop
jp
sahf
je
shll
push
sbb
jmp
add
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
dec
xor
inc
push
xchg
inc
push
or
jae
push
sub
inc
inc
pop
cmc
lea
or
addr16
dec
aaa
aas
aaa
cld
sub
dec
add
stos
hlt
loopne
gs
cwtl
insb
fisubrs
inc
pushf
sub
in
rorl
push
ja
sub
cmp
jmp
pop
xor
dec
movsl
out
adc
sub
jae
lahf
cmc
fcoml
pop
stc
movsl
pop
or
mov
adc
or
push
pop
fs
push
lods
push
xor
cltd
arpl
stos
das
jge
push
cli
add
push
dec
pop
mov
mov
ja
push
adc
add
mov
scas
xchg
daa
pusha
jae
pop
jg
cld
xchg
push
arpl
pop
cmp
xchg
insb
jmp
mov
sahf
lds
loopne
dec
mov
out
lea
loopne
sbb
mov
push
dec
rcll
dec
push
testl
sub
xor
add
andb
or
movsl
inc
mov
into
push
mov
sbb
xor
add
mov
xor
popf
adc
dec
xchg
mov
push
in
jo
ror
lods
movsb
dec
out
arpl
xchg
add
add
fmuls
cli
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
