push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
loope
mov
sahf
adc
sbb
push
ffreep
mov
mov
clc
out
or
push
mov
adc
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
add
mov
and
int
mov
out
in
xchg
cli
pop
notb
pop
movsb
stos
out
movsl
pushf
popf
xchg
dec
cltd
sarb
pop
xchg
cld
pushf
sub
mov
enter
mov
add
or
iret
mov
jns
mov
push
loopne
xchg
out
pop
pop
scas
and
inc
mov
out
mov
and
and
sbb
sub
test
cmp
mov
aam
insl
mov
adc
repz
bound
lods
mov
jbe
stos
inc
js
pushf
pop
cs
inc
jns
ret
jo
inc
lods
xor
mov
xlat
les
add
and
cmp
imul
push
cmp
xor
mov
sbb
cmp
cmpsl
or
push
cmp
sahf
xor
cmp
pushf
add
in
lods
mov
mov
adcl
fsubr
outsl
call
xor
xor
leave
mov
cmp
adc
scas
push
fisubs
dec
aas
xchg
mov
push
ret
inc
lcall
lahf
jge
adc
outsb
push
cmp
pop
shll
pop
jecxz
in
cmp
add
decl
push
testb
daa
insb
hlt
jb
or
xor
rcll
pop
push
je
mov
mov
cmp
cmpsb
sbb
aaa
scas
adc
pop
push
aad
sahf
and
adc
hlt
jo
test
add
mov
repnz
push
cli
xor
xor
sahf
inc
lret
std
aam
jle
ficoms
mov
pusha
jl
in
ljmp
add
jecxz
testb
aaa
inc
push
mul
jae
sbb
loope
mov
fdivrl
and
push
int
test
pop
rolb
cli
daa
inc
xchg
dec
data16
filds
push
pop
mov
dec
push
mov
repnz
jle
int
adcb
jge
ja
popa
cmp
adc
xchg
outsl
sti
mov
int3
stos
add
test
sub
cmc
sub
cmpsb
push
sbb
mov
imul
not
jecxz
cmp
fmul
loopne
pop
inc
icebp
imul
push
cli
add
pop
addr16
ds
int3
in
xor
daa
stos
call
mov
nop
inc
sub
cmp
sarl
xchg
pop
adc
mov
xor
xor
mov
mov
and
repz
mov
movsb
xor
xchg
rcl
movsb
in
insb
and
push
jne
mov
test
push
nop
sub
test
jns
ret
movsl
push
movsb
jp
jg
xlat
xchg
repnz
in
mov
pop
stos
and
icebp
scas
and
and
lret
call
dec
loope
mov
push
mov
adc
insl
sub
dec
ljmp
add
mov
jp
or
mov
xchg
adc
xchg
xchg
and
pop
out
or
fwait
movb
jbe
mov
ret
jbe
dec
mov
push
mov
ret
outsl
addl
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jo
adc
sbb
ljmp
xor
inc
fwait
int
mov
cmp
dec
fwait
xchg
sbb
aaa
jmp
pop
xor
orl
adc
cmp
push
or
add
ret
inc
adc
pushf
leave
lock
jns
aaa
fistpll
dec
rorb
mov
mov
and
sarb
mov
or
mov
stos
jnp
enter
and
ss
push
xchg
sub
outsl
or
lock
cli
inc
sbb
mov
and
lds
xchg
cmp
fisttpl
pop
clc
push
fmull
add
lds
or
xor
js
xor
mov
or
add
push
xchg
inc
mov
ja
jle
jl
xchg
and
and
pushf
pop
cli
insb
lahf
mov
sbb
push
test
out
push
inc
push
jo
sub
pop
mov
int3
add
mov
adc
mov
scas
push
movsb
add
xchg
push
shrl
outsb
inc
mov
gs
cmpsb
pop
pop
dec
mov
rorb
sub
sub
test
lea
push
jae
jae
in
sbb
andl
and
loop
cmp
mov
add
mov
out
orl
out
add
add
xchg
mov
ret
int
icebp
jge
out
cmc
xchg
adc
lcall
scas
lods
adc
cs
out
outsb
or
cmp
push
adc
xchg
outsl
or
aam
sbb
push
jl
push
sti
cmc
adc
fbld
mov
pushf
pop
rclb
rcrb
daa
dec
add
sub
sub
jmp
bound
aad
jl
repz
aam
sbb
cs
sub
xor
push
dec
fidivrs
aas
pop
cmpsl
and
hlt
dec
jbe
xor
mov
pop
fucomi
mov
cmp
sti
and
lods
pop
incb
mov
jbe
dec
pop
pop
jb
ss
sti
cmp
inc
adc
push
push
xchg
cmp
std
or
add
rcll
push
add
adc
mov
rcll
jns
xorb
push
dec
add
sub
std
lcall
jle
pop
aam
add
pusha
cli
dec
dec
push
xchg
xchg
xchg
out
xchg
divl
out
mov
lahf
sbb
or
bound
or
enter
xor
pop
xchg
ret
aad
sarl
popf
mulb
sti
pop
adc
and
lock
js
sarb
test
in
adc
aad
or
loope
outsb
mov
inc
pop
sti
adcb
stc
lods
sarb
fucomp
pop
push
jno
add
lea
ret
aas
movsb
or
adc
dec
lock
xor
jne
adc
loopne
jae
push
dec
lret
pop
add
cmp
adc
or
rorb
dec
loop
nop
sbb
jnp
and
sbb
jns
jne
in
in
inc
pop
in
arpl
sbb
inc
sbbl
xor
sub
gs
mov
pop
mov
lcall
push
jecxz
adc
and
xchg
fs
data16
xchg
add
sub
or
stos
lods
icebp
fidivl
cmp
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
loope
jle
or
sbb
cmp
stc
fcmovnbe
dec
mov
xorb
stos
in
mov
pop
push
lret
inc
std
adc
or
shl
or
inc
out
int3
dec
scas
outsb
outsl
loope
mov
pop
fwait
cmp
das
ret
push
mov
cmpl
pop
and
jno
popa
fwait
pop
in
std
sub
mov
les
je,pt
ljmp
js
mov
sti
fsubrs
push
outsl
mov
fsubrl
bound
lret
mov
inc
mov
adc
xchg
pop
inc
add
jbe
mov
xor
or
jl
test
push
jb
xchg
push
repz
xchg
xlat
loopne
aad
clc
push
push
cmp
lret
mov
popf
repnz
loop
mov
lret
outsb
mov
push
push
ret
shrb
add
ret
int
add
and
adc
mov
xchg
push
jle
popf
and
pop
lret
lds
imul
adc
mov
hlt
int3
sub
jl
ja
dec
jle
pushf
mov
rcrb
out
cmc
adc
pop
mov
in
sub
xor
push
popa
addb
int
mov
pop
lock
jmp
sub
or
add
enter
or
subb
pop
pop
xchg
das
lahf
fs
pop
pop
movsb
ss
mov
xor
add
pop
dec
nop
xchg
or
xor
loope
push
sbb
pop
mov
add
data16
jns
nop
mov
add
cmp
inc
and
aam
imul
data16
lcall
inc
push
cmpsl
dec
loop
lea
xchg
mov
pop
xorl
adc
mov
xchg
ret
mov
jno
adc
inc
or
out
je
jl
sbbb
dec
mov
repnz
pop
outsl
out
mov
or
jb
sub
clc
mov
jp
adc
sbb
cwtl
lods
cmp
stc
push
enter
add
rclb
roll
out
hlt
idiv
out
xchg
lods
pop
lret
aam
cwtl
jbe
or
inc
js
clc
adc
fcomi
pop
test
pop
xchg
loop
sbb
cltd
pop
movsb
iret
dec
pop
push
inc
orl
int3
jge
arpl
lret
shrb
jmp
stc
dec
add
mov
cmc
fwait
ss
dec
dec
std
xor
cltd
cmp
scas
push
js
pushf
roll
js
sbbb
fcoml
scas
inc
push
cmp
insb
cmp
mov
sub
xchg
shl
lcall
cmp
mov
mov
sbb
inc
lods
cmpsl
aaa
mov
stos
xchg
xor
jne
mov
xchg
inc
insb
mov
addr16
push
add
cmp
pusha
jo
jl
push
repz
fidivrs
or
push
cmc
adc
lods
pop
sti
leave
in
loope
inc
add
add
mov
sub
push
test
loopne
in
push
mov
xchg
out
fwait
mov
adc
rorb
in
cwtl
xor
jmp
pmaxub
jns
ret
repnz
out
std
js
mov
mov
inc
xchg
xchg
add
jp
xor
jne
mov
fbstp
testl
and
out
out
jae
sbb
mov
and
adc
sarb
stos
fdivp
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
mov
insl
scas
ljmp
pop
fs
ljmp
cmp
mov
sbb
fs
xor
or
dec
pop
ljmp
inc
adc
inc
fistps
loope
outsb
and
repz
mov
pop
insl
lods
aam
cmp
pop
into
loop
pop
loopne
aas
cmpsl
inc
mov
lahf
call
lods
jb
push
jae
mov
fwait
or
or
ret
add
mov
daa
jns
imul
pusha
adc
hlt
mov
rcrb
int
sarl
loopne
xchg
inc
bsf
fwait
jnp
aaa
fwait
sbb
gs
pop
addr16
push
rep
and
es
es
and
xchg
xchg
push
add
iret
dec
int
mov
loop
mov
jns
jo
xchg
pop
iret
xor
clc
fistpl
rorb
push
and
mov
js
aad
mov
jge
xchg
aam
mov
aam
test
popa
push
sbb
rolb
testb
pop
sub
shll
sub
mov
and
or
in
inc
jno
pop
shrl
pop
inc
pop
test
in
dec
ret
pushf
imul
movsb
mov
loopne
out
add
in
jb
and
mov
jns
dec
xor
add
or
in
ss
loop
out
cltd
cli
rorl
mov
push
movsl
jp
ja
stc
call
imul
outsl
cmp
sub
insb
addr16
jp
jecxz
cmp
cmp
data16
idivb
into
mov
xlat
dec
xchg
or
in
xor
ret
shlb
ficoms
mov
imul
in
sub
outsb
xchg
int
loop
adc
push
neg
xor
shl
adc
cmc
jnp
mov
mov
pop
data16
stos
adc
dec
mov
aad
leave
or
cmpsb
aam
mov
adc
sub
xor
adc
jo
push
mov
addl
sbbl
and
sub
leave
jb
aam
sbb
mov
les
mov
enter
dec
lea
dec
incb
sbb
mov
jmp
enter
jns
arpl
fs
and
xor
loopne
xor
loopne
inc
mov
mov
imul
jmp
test
out
test
les
cmpsl
mov
dec
sbb
inc
lds
lret
xor
mov
ljmp
push
push
jo
je
stos
pop
xchg
bound
push
ljmp
jb
mov
int
mov
les
sahf
or
xchg
shlb
stc
cmc
push
mov
fbstp
cwtl
fisttps
adc
fbstp
or
add
in
push
pop
cmp
repz
fistpl
test
xor
outsb
sub
cwtl
pop
rcl
mov
jp
into
mov
rclb
daa
xchg
xchg
adc
and
pop
loop
out
lock
push
dec
push
mov
ret
inc
add
jbe
pop
ret
lds
and
ja
lods
mov
and
mov
pop
int
aas
jecxz
adc
mov
in
sbb
fidivrl
inc
nop
jb
add
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
arpl
movb
int3
and
jecxz
testb
adc
in
xor
and
cltd
dec
cmp
sti
rcr
sbbb
xor
test
imul
mov
add
mov
mov
lahf
nop
sbb
cmc
add
xchg
sahf
dec
flds
dec
sbb
scas
mov
out
mov
stos
cli
jecxz
hlt
inc
ficoml
and
out
fsubl
mov
add
dec
rcr
popa
cli
and
push
dec
ljmp
pop
roll
add
sub
xor
xorb
mov
gs
mov
scas
sahf
xchg
loopne
cmp
imul
xchg
das
xchg
mov
lcall
icebp
sub
sbb
outsb
out
jae
in
sub
lfs
jmp
sti
pop
xchg
repz
in
add
lahf
inc
xchg
test
je
int3
dec
subl
aam
or
xchg
jne
and
jns
leave
push
inc
gs
mov
mov
xchg
pop
cmp
sub
jecxz
imul
ja
loope
fistpl
loopne
sbb
sub
imul
call
frstor
ret
adc
inc
fcmovbe
xchg
insb
subl
cs
mov
push
xorb
pop
or
add
scas
insl
sbbb
mov
adc
clc
addr16
adc
cmc
rorl
mov
or
mov
addr16
dec
fistpll
xchg
mov
add
pop
dec
movsl
jge
and
sbb
insl
cmovl
xchg
ret
pop
pop
and
cmp
cwtl
sub
es
adc
sub
jb
add
lds
mov
loopne
movsl
lahf
xchg
in
sub
inc
fstpt
sbb
push
mov
cltd
cmp
mov
lcall
repz
and
sub
xchg
mov
jg
xchg
push
cld
rcll
aad
shl
cli
inc
push
call
add
hlt
iret
aad
xor
mov
arpl
mov
mov
mov
jge
popa
push
xchg
nop
popa
mov
mov
fsubs
mov
movsl
fdivr
test
mov
jns
gs
outsl
movsl
jbe
or
iret
jp
notl
jmp
std
std
or
jnp
jl
dec
mov
mov
sub
call
jmp
adc
aas
push
sbbl
call
dec
lods
add
ds
sti
fsubl
ja
adc
adc
lret
mov
sub
in
fildl
xchg
sub
dec
cmp
test
sbb
icebp
mov
xchg
fdiv
ds
out
stc
outsl
stc
mov
stc
fbstp
cltd
push
push
xlat
mov
lret
sub
mov
outsl
in
out
mov
jo
push
cmp
scas
sbb
xor
jg
lahf
aam
cmp
cmpsl
jbe
mov
add
jmp
or
and
outsl
ret
fs
pop
push
imul
add
notb
push
mov
cmpsl
aas
pop
jp
loope
sahf
imul
stc
shlb
insb
outsl
cmp
pop
and
arpl
enter
dec
iret
adc
lds
dec
and
push
inc
in
ret
in
xchg
sbb
dec
jno
les
or
xchg
addl
inc
add
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
mov
sahf
adc
sbb
cmp
mov
jnp
repnz
shrl
scas
pusha
sub
mov
sub
std
std
push
adc
mov
div
jecxz
cmp
pcmpeqw
sahf
mov
jae
pushf
mov
aad
stos
stos
jecxz
cmpsl
xor
pop
cmc
mov
icebp
into
sub
pop
or
mov
lods
dec
ja
pop
mov
mov
push
and
xchg
cmpsl
fnstsw
lret
push
das
xor
bound
out
in
in
jns
mov
mov
mov
add
pushf
push
inc
movsl
pop
cmp
mov
fidivrs
notb
sbb
ret
mov
push
fsubp
mov
iret
push
clc
xchg
cli
xor
adc
fcmovnbe
imul
jns
jns
jne
xchg
mov
rcl
popl
shl
lret
pushf
lods
or
cmpsb
or
std
sti
in
mov
out
dec
mov
aaa
push
sbb
bnd
cli
push
in
das
cmpsb
cmpsb
mov
ret
adc
xchg
mov
pop
std
orl
jl
xor
inc
dec
ds
adc
xabort
scas
push
repz
cmp
push
insb
pop
daa
sub
daa
out
int
pop
out
xor
mov
dec
roll
mov
fadd
pop
fmuls
mov
xor
dec
xlat
sbb
and
xor
or
xchg
repz
or
pop
bnd
insb
flds
shrb
xor
pop
pop
mov
fbstp
and
adc
xor
cmp
cwtl
or
imul
sti
sub
cld
mov
push
std
mov
adc
xchg
mov
jp
jne
daa
xchg
sub
pop
xor
lahf
xchg
push
cli
js
push
fwait
adc
repnz
movsb
push
orl
inc
pop
repz
in
fst
dec
inc
pop
xchg
imul
addl
stc
popa
in
inc
sbb
sub
inc
call
add
xchg
add
imul
push
test
jb
xor
nop
es
pop
int3
cmp
adc
jnp
lahf
add
cltd
xor
filds
jge
sahf
xchg
shlb
cmp
and
cltd
xor
and
icebp
sbb
cmpsb
mov
jnp
push
daa
pop
xor
enter
daa
in
mov
pop
adc
loope
jbe
lods
loope
pop
aad
xchg
adc
pop
nop
xchg
roll
dec
mov
dec
aad
jmp
inc
testb
mov
jns
xchg
dec
std
aas
lahf
xorl
sub
add
cmpsl
push
xchg
jb
mov
add
push
icebp
mov
add
sub
pop
mov
jge
xlat
sbb
push
rorb
cmp
divl
dec
stos
pop
insb
xchg
mov
in
or
xorl
ret
jmp
nop
mov
dec
mov
loopne
sub
add
inc
ficoml
dec
in
push
ss
push
jo
cmp
fildll
xchg
movsb
sub
mov
pushf
int
push
cmpsb
sti
add
mov
mov
xchg
notl
and
orl
loopne
into
jge
aaa
dec
jle
mov
ficoms
pop
push
jo
lret
arpl
add
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
js
stos
cmp
adc
sbb
pop
sub
pusha
mov
in
jmp
cwtl
mov
data16
mov
test
nop
cwtl
mov
dec
jae
popl
insb
pop
xchg
sbb
lea
cmp
jb
and
add
lss
cmc
in
inc
test
out
xchg
xchg
ljmp
cli
xchg
gs
leave
mov
movsl
mov
xchg
cmpsb
inc
and
xor
adc
push
xor
mov
mov
leave
xor
std
inc
fldenv
push
pushf
push
mov
in
sbb
dec
jmp
jge
mov
sbbl
cld
jmp
add
sub
adc
mov
out
outsb
push
fcmovnu
nop
pop
mulb
lahf
insl
pushf
imul
mov
lret
arpl
nop
paddq
hlt
or
lea
ss
inc
dec
mov
push
adc
xor
xchg
hlt
jne
xor
out
mov
data16
enter
cltd
pop
sbbb
imul
loop
mov
fsubl
jb
das
mov
into
subl
add
sbb
jno
cs
mov
and
cli
fwait
and
shrb
and
cmp
mov
sub
push
fst
sub
xchg
ret
sbb
jp
lret
imul
mov
in
lcall
push
fisubrl
fnstcw
fldt
arpl
pop
out
test
rcpps
repz
fldenv
insb
jnp
jne
rcrb
fistpl
dec
sbbl
addr16
adc
push
lods
dec
es
int3
cbtw
movsb
adc
jl
jle
arpl
shlb
pop
lret
lock
cmpl
pop
mov
addb
or
mov
aam
js
jmp
mov
andl
stos
add
mov
movsb
inc
sub
mov
repnz
sub
dec
cmc
add
cmp
mov
jp
sti
and
mov
add
cmp
outsl
or
xor
jge
xchg
aam
mov
jne
cmc
or
daa
mov
pop
popf
lahf
rolb
popf
arpl
loope
incb
and
rcrb
push
push
test
xor
mov
popf
cmp
xchg
rcll
int3
adc
push
mov
out
cmp
jno
pop
sti
nop
in
push
add
mov
xchg
in
fs
jmp
sub
fidivrs
pushfw
das
xor
and
jo
cltd
into
inc
decb
xchg
pop
cmpsl
dec
jne
mov
fsubs
cli
xlat
add
jl
push
mov
cmp
pop
hlt
push
sub
pop
dec
rorl
or
loop
xor
xchg
push
push
call
inc
dec
add
push
shlb
cs
lcall
ret
bound
data16
sti
push
or
xor
out
mov
sarb
mov
leave
jae
daa
push
or
jge
push
fistpl
mov
in
mov
dec
mov
das
jb
in
jle
jno
xchg
mov
mov
cwtl
xchg
out
adc
popa
aam
decb
nop
fmull
gs
jmp
inc
sbb
dec
sub
mov
iret
xor
dec
push
cld
add
xchg
mov
pcmpeqd
cmp
in
cmp
movl
jne
jmp
sbb
fldt
sbb
or
sub
sbb
sahf
adc
sbb
xchg
lret
sub
pushf
int3
js
sti
mov
sbb
jle
xchg
in
sti
psrld
test
add
sub
cmp
mov
pop
cmpsb
and
jo
icebp
xchg
pushf
xor
mov
mov
dec
xchg
dec
pop
xchg
sub
mov
ss
dec
or
sbb
ss
stos
xor
inc
pop
inc
js
xor
rorb
pop
out
test
cli
fxch
mov
ret
repz
jnp
int3
lds
fs
adc
and
mov
jle
lret
inc
push
push
sbbb
xchg
add
jg
dec
dec
cmp
push
mov
mov
jno
out
gs
or
or
pop
xor
fsubl
dec
xchg
out
xchg
ds
cld
dec
and
mov
stc
sbb
loope
bound
js
ss
mov
add
cmp
push
shr
test
sbb
push
add
jecxz
int3
jb
adcb
mov
mov
fbstp
mov
or
mov
mov
mov
cwtl
subl
fwait
insl
test
cmpsl
mov
dec
mov
push
push
xchg
lret
rcr
nop
mov
cmpsb
imul
cmp
push
pop
inc
test
mov
push
dec
cld
jne
dec
jl
in
jns
je
push
lcall
sub
mov
mov
inc
fisubrs
aad
insl
addr16
lods
cmp
or
je
mov
lea
push
dec
ja
ja
movsl
pop
ret
and
jg
mov
push
sub
orb
es
adc
adc
das
inc
gs
stos
cmpl
cltd
dec
inc
cli
inc
push
push
pop
maxps
pop
or
mov
mov
pop
fildl
cmp
repnz
and
add
pop
std
sub
bound
sbb
push
iret
mov
fwait
aad
xor
push
inc
mov
stc
xor
sub
jae
dec
sarl
jb
pop
inc
jge
and
push
jp
cli
xchg
xchg
repnz
js
push
fwait
cli
inc
cmp
notb
lret
outsb
xchg
pusha
je
mov
dec
daa
jnp
sbbl
dec
aad
push
mov
rorl
pop
xchg
out
lea
jb
pop
call
pop
or
scas
adc
xor
pop
movsb
mov
add
push
or
xchg
call
cmc
outsl
fists
xor
jecxz
es
cmp
push
jmp
push
mov
add
call
mov
cmc
cmp
test
fistps
sub
enter
inc
dec
add
push
mov
mov
lret
mov
stc
inc
xor
push
addr16
sub
data16
in
or
mov
mov
dec
jp
cmpsl
int3
mov
scas
shll
jb
xchg
popa
cmp
je
push
xchg
dec
mov
lods
jg
and
fdivrl
in
cmc
test
pop
pop
mov
dec
xchg
or
mov
sub
out
es
jno
gs
test
pusha
in
shll
xchg
fdiv
jae
cli
adc
inc
hlt
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
or
insb
inc
sti
ret
out
and
std
and
and
jge
popa
xor
or
fadds
and
mov
ljmp
sbb
mov
aad
sbb
dec
sub
and
mov
or
mov
out
out
std
test
mov
pop
in
ret
lods
xor
dec
jge
lcall
sub
sub
or
jnp
pop
inc
xchg
cli
xchg
add
xor
ljmp
xor
xchg
push
loope
leave
adc
push
inc
mov
jg
out
lods
dec
jo
lcall
cmpsl
push
jle
cmovge
mov
add
push
adc
inc
cmp
cs
jbe
imul
sub
pop
scas
cwtl
lods
push
lcall
shlb
fdivs
mov
and
cmp
mov
dec
add
rol
pop
jle
movsl
popa
inc
inc
icebp
cltd
inc
mov
jmp
sub
xor
cmp
jne
cmp
cmp
mov
or
xchg
jbe
mov
mov
cmp
mov
cmp
outsl
popa
mov
mov
lock
cld
dec
mov
mov
addr16
imul
repz
ja
xchg
pushf
or
adc
xchg
pushf
fidivl
mov
out
lcall
mov
lahf
pop
push
xlat
loop
jno
pop
sbb
mov
add
mov
dec
pop
pop
inc
hlt
mov
call
inc
jb
sbb
ret
fnstcw
adcb
mov
and
adc
mov
in
outsl
loop
out
mov
lds
in
push
rcrl
jns
xor
pop
imull
inc
mov
pop
push
scas
loope
pushf
scas
lock
dec
ss
cs
mulb
in
adc
cmc
fst
push
pop
scas
cmp
mov
or
cmp
sub
aaa
andl
data16
push
dec
shlb
pop
aas
cli
pop
sbb
lret
repz
std
bound
jp
mov
dec
xchg
pop
aaa
mov
mov
push
and
inc
fldl
sub
out
xor
xchg
jae
dec
xor
inc
cmp
or
sub
lahf
pusha
mov
push
mov
push
or
jbe
mov
mov
subl
ss
jp
jmp
scas
dec
or
cltd
cmpl
dec
push
ja
test
jp
data16
pop
push
xchg
and
inc
inc
les
idivl
jns
in
xchg
mov
clc
mov
mov
dec
arpl
hlt
cs
inc
mov
movsl
fcmovnb
and
repnz
add
flds
and
xor
lods
jbe
xor
mov
cmpb
cmpsb
stos
ficoml
sub
xor
aam
in
adc
loop
mov
dec
push
push
mov
adc
jnp
jmp
repnz
mov
dec
and
bound
hlt
aad
cwtl
mov
cltd
lcall
fldl
orb
bound
push
clc
cmpsl
sub
pop
mov
pop
test
inc
jne
lret
xchg
jnp
int3
arpl
int
jp
popa
aam
ljmp
scas
loop
iret
test
or
push
rclb
mov
jecxz
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
jl
xlat
sbb
sahf
adc
sbb
cmpb
cmp
pop
call
and
repz
add
or
enter
out
movsb
inc
popa
scas
mov
mov
lahf
push
sub
test
pushf
ss
stos
aam
fsubrl
in
jo
xchg
xor
fisttps
add
add
insl
add
or
sarb
jmp
aaa
mov
jg
and
xchg
add
or
fcompp
test
push
movsl
xchg
cmpsb
lret
and
push
mov
inc
mov
push
xlat
fs
fadds
add
and
sub
sbb
sbb
mov
jae
mov
mov
ss
mov
sbb
js
mov
mov
mov
sbb
push
pop
stos
push
pop
out
sbb
add
ja
lds
test
add
sbb
hlt
jg
pop
fsubrp
lret
outsl
lods
in
inc
mov
mov
lcall
cmp
fidivs
dec
movsb
mov
pop
or
cltd
in
mov
popf
pop
sbb
push
cmp
mov
aad
add
dec
insl
jns
sarl
jg
in
lret
xchg
dec
movsl
and
jmp
fstl
mov
fmull
inc
jno
test
movsb
ds
or
xchg
mov
xchg
mov
xor
imul
in
xchg
push
cli
repnz
mov
sbb
adc
mov
imul
push
hlt
sbbl
sbb
push
mov
aad
paddq
xchg
test
push
xor
cmpl
loopne
cs
mov
mov
jp
lret
mov
out
popa
xor
mov
push
add
cmpsb
ja
cltd
mov
movsl
nop
xor
jl
loop
pushf
out
enter
mov
jae
cmpsb
cmpb
hlt
jp
jne
fadds
mov
mov
mov
outsb
jle
cmpsb
cltd
jmp
push
int
loop
xor
jo
xor
push
pop
add
lock
mov
xor
popf
push
lods
push
sbb
cltd
xor
sub
int3
mov
idivb
adc
mov
mov
inc
loop
sub
and
add
fldl
jl
xchg
movsl
push
imul
inc
mov
pop
push
push
aas
cli
sbb
pop
inc
daa
fs
add
into
xor
xor
pop
dec
outsb
sahf
dec
outsl
xor
repnz
mov
repz
adc
leave
and
stos
sarl
adc
repz
in
sub
sub
sbb
cltd
enter
ficoms
icebp
inc
lods
and
adc
mov
pop
push
mov
add
dec
add
jns
js
mov
dec
mov
in
fstpt
or
out
or
mov
jg
xor
xlat
jns
jg
icebp
fidivrs
insl
mov
pop
mov
inc
and
cmp
inc
push
inc
jge
lret
pushf
test
iret
scas
aad
push
mov
lahf
xchg
xchg
pop
mov
das
mov
jo
pop
insl
inc
lret
dec
jbe
mov
jbe
sub
xchg
sbb
jmp
cmp
push
xlat
jb
jo
repnz
cmp
je
ret
out
mov
mov
aad
mov
xchg
jne
lock
push
add
sbb
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
cmp
iret
sbb
sahf
adc
sbb
mov
shll
movsb
jbe
stc
dec
mov
push
dec
je
mov
push
add
sub
inc
mov
jae
je
jbe
mov
mov
daa
movsb
sbb
or
push
jecxz
inc
cmpsb
mov
aas
movsb
mov
call
adc
dec
dec
aad
outsl
les
pusha
add
xchg
adc
cltd
mov
sub
sbb
cmp
mov
movhps
push
sub
repnz
out
adc
mov
push
loope
stos
stc
add
std
clc
cwtl
or
out
sub
cli
sahf
in
aas
xlat
js
movsb
jle
nop
dec
aaa
xchg
arpl
jnp
pop
pop
call
mov
insb
mov
clc
addr16
mov
rcrl
add
pop
or
mov
xor
ss
cs
mov
cld
inc
mov
inc
mov
cmp
mov
int3
mov
inc
rcrb
idivb
insl
xor
fstpt
jmp
xchg
xchg
jne
clc
pop
and
ss
dec
xchg
ja
lods
repnz
push
int3
sbb
cmp
fistl
sti
and
dec
jns
pop
cmp
imul
sahf
lds
or
stc
sbb
adc
sbb
jp
sahf
add
push
movsl
fldenv
fcmovnu
es
lock
or
add
pop
shr
xchg
int3
hlt
repnz
push
xchg
subl
sub
lods
in
mov
stos
repz
aaa
pop
jae
or
pop
sbb
mov
adc
pusha
xchg
rcr
mov
mov
mov
lods
xchg
pop
pop
out
cwtl
test
inc
jge
arpl
adcb
lahf
repz
call
sub
shrb
cwtl
mov
rorb
or
add
mov
loopne
inc
add
and
inc
fs
mov
sbb
or
xchg
jmp
mov
lods
jae
filds
dec
loop
into
mov
fdivrp
out
popl
hlt
clc
stc
adc
jns
jbe
in
jp
bound
aam
inc
ss
imul
mov
lret
pop
fwait
outsl
mov
cmp
jae
in
test
xor
and
in
push
or
nop
mov
ja
aaa
sub
fcom
mov
sub
lods
lock
lds
jg
addl
or
or
rcrb
pop
adc
fistps
xchg
stos
rorb
subb
mov
orb
cmp
jmp
xor
or
popa
push
sub
xor
xor
pop
das
adc
lcall
stc
roll
clc
rclb
sti
cmp
aas
pushf
cmc
xchg
repz
popa
fcoms
add
mov
sbb
pop
and
dec
xchg
inc
movsl
pop
or
ret
xorl
mov
addb
call
loop
mov
test
xchg
stos
cmp
ljmp
rolb
and
add
repnz
mov
push
jo
and
pop
mov
add
cmp
mov
mov
push
out
add
pusha
inc
mov
pop
mov
icebp
mov
lods
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
scas
xchg
imul
addr16
mov
cli
or
mov
push
pop
and
shrl
xchg
popl
pushf
fcoms
jnp
xchg
subb
addr16
jge
int
fisubrl
sub
dec
inc
subb
fsubl
cltd
adc
int3
sub
mov
test
das
mov
push
std
les
add
mov
repnz
mov
lahf
orl
lock
sbb
ja
jne
sbb
add
sti
jnp
nop
fstpl
xchg
push
dec
call
mov
cmp
push
mov
cld
popa
pop
jbe
stc
lods
fcom
ret
testb
ljmp
or
mov
jmp
xor
dec
invd
fs
sbb
out
dec
aas
sub
jle
mov
in
inc
xchg
int3
rorl
and
dec
shr
loop
or
insl
mov
addr16
xchg
mov
cltd
test
push
mov
mov
arpl
adc
sbb
data16
jb
cmpsl
dec
cmp
imul
decb
mov
ret
inc
xor
enter
add
adc
mov
dec
dec
mov
cmp
mov
xor
or
jg
enter
xchg
std
repz
js
add
inc
shlb
mov
stos
leave
or
fimull
pop
add
mov
mov
cmp
xor
cwtl
cmp
pop
xchg
ret
scas
push
push
mov
inc
cmpsb
sti
fs
push
mov
ds
xchg
out
cli
imul
test
repnz
adc
cmpsb
lea
into
neg
and
out
loop
sub
cli
arpl
mov
lret
fs
and
test
mov
xchg
inc
xchg
cmpsb
cmp
outsl
in
mov
movsb
or
rol
cld
dec
dec
ljmp
mov
mov
andl
sub
inc
testl
pop
add
cmpsb
sub
mov
and
inc
push
mov
and
test
xchg
xchg
aaa
mov
in
adc
cmpsb
push
sarb
nop
jb
mov
or
cwtl
push
outsb
rorb
sahf
mov
lods
and
xor
mov
cli
jecxz
sbb
repz
jnp
popf
in
icebp
popf
cmp
push
jmp
push
inc
les
hlt
fwait
das
cli
push
mov
enter
or
push
mov
in
js
stos
in
popa
ljmp
xchg
mov
push
or
cmp
arpl
cld
pop
adc
in
xchg
test
test
insb
or
call
dec
xor
jnp
cmp
sahf
out
jo
aaa
xchg
fsubl
mov
add
push
dec
fists
and
xchg
jo
sbb
adc
lahf
mov
dec
cmp
cmpb
push
imul
jl
inc
dec
dec
cmp
jnp
dec
stos
add
mov
pop
inc
mov
scas
mov
pop
ja
inc
dec
or
data16
std
rolb
imul
out
or
or
jae
lcall
inc
fbld
jne
insb
sbb
pusha
aas
jl
adcl
sbb
fnstsw
sti
push
sarl
test
xchg
in
sub
movups
cltd
stos
dec
rorl
xor
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
call
rcrl
sahf
adc
sbb
mov
outsb
stos
scas
fmull
in
jg
sahf
rcll
mov
or
pop
push
clc
push
sub
push
gs
adcl
out
dec
push
mov
xchg
pop
or
in
insb
cmp
sahf
inc
out
mov
das
inc
mov
push
jl
lock
test
fldenv
jmp
fsubrs
add
lds
jae
push
movsb
cmp
shlb
dec
cltd
mov
jmp
inc
xor
hlt
push
lds
int
dec
inc
call
mov
leave
sarl
lahf
enter
xchg
pushf
movlps
and
orb
bound
test
cltd
jmp
push
repnz
enter
or
pop
pop
xchg
nop
adc
outsb
shrl
mov
dec
adc
ret
scas
cwtl
xchg
sbb
lock
mov
nop
fstl
adc
adc
test
out
sbb
inc
dec
out
fcmovne
aad
clc
shl
jae
loope
imul
cmpsb
mov
add
movq
push
fildl
clc
cmp
fstp
lret
or
jmp
mov
int
scas
ss
std
mov
adc
insl
mov
leave
xchg
mov
rcl
out
xor
sub
ja
fcoml
shlb
scas
pop
mov
sbb
je
les
lods
icebp
cmpsl
leave
out
mov
in
shlb
pop
xchg
jl
imul
add
dec
mov
add
ss
cmp
cmp
stc
lods
or
push
je
jbe
test
or
adc
scas
inc
cld
jle
jg
fistps
cld
aam
rcll
sbb
cli
movsb
mov
xor
pop
mov
dec
and
or
test
dec
cltd
pop
fdivrl
xchg
mov
je
stos
rcll
mov
inc
loop,pn
pop
mov
jmp
test
loopne
or
add
push
rcll
sub
fisttpll
jl
sbb
xchg
stos
adc
clc
jae
pop
outsl
inc
leave
popf
lock
cmpsb
shlb
push
mov
ja
jmp
addb
loope
scas
bound
jg
pop
mov
cld
push
mov
add
cwtl
jbe
testb
enter
dec
icebp
sub
xchg
jo
sub
inc
fstpt
jae
sti
icebp
test
mov
add
int3
jl
movsb
stos
repz
push
add
jmp
cmpsl
loop
nop
or
sub
dec
fs
mov
rclb
pusha
out
lds
jge
iret
daa
mov
cmp
mov
pop
xchg
aad
mov
test
mov
inc
xlat
push
gs
cmp
mov
mov
aad
addr16
xor
or
dec
insb
or
or
sbb
mov
sbb
aad
movsb
subb
vcvtss2sd
test
aad
ja
cmp
push
cld
idivl
daa
sub
popa
push
adcb
xor
sbb
jmp
or
sti
pop
insl
clc
and
inc
fs
lods
mov
scas
push
in
dec
das
repz
xor
inc
pop
jg
mov
dec
movsb
popf
xchg
fcompl
jb
push
in
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
and
adc
mov
sbb
pop
in
stc
mov
mov
xchg
add
jle
push
lahf
into
and
sub
cli
add
rcrl
or
sbb
sbb
sub
nop
leave
jno
test
jb
dec
xchg
sbbl
movsb
cwtl
sbb
jbe
pusha
sbb
ret
xor
inc
ret
mov
mov
xchg
cmp
sbb
mov
add
sub
adc
xchg
adc
jp
bound
popa
add
xchg
xchg
sbb
mov
jge
cltd
ljmp
stos
cmp
dec
or
sbb
cmp
mov
fnstsw
lcall
cli
shrb
clc
cmp
inc
ja
ja
mov
addl
fsubrl
mov
cmp
lock
cltd
std
push
rolb
ljmp
jb
stos
sbb
jb
xor
loope
adc
push
add
mov
pop
sbb
scas
rcrl
lds
add
jl
pop
cmp
sbb
pop
or
pop
jae
mov
push
mov
pop
sub
in
sub
cs
push
xor
nop
dec
imul
pop
inc
sub
mov
mov
pop
dec
scas
add
xchg
cld
dec
inc
cmp
insl
sahf
rorl
xor
popa
lcall
jle
fisttps
arpl
in
adc
movsl
sub
out
add
es
aam
cwtl
pop
mov
or
adc
inc
mov
hlt
lahf
fadd
call
or
cmpsl
cmpsb
rclb
add
in
test
ljmp
bound
jge
fsubs
repz
xor
mov
pop
cmpsl
aaa
imul
pop
cmpsb
inc
push
jmp
fwait
sub
or
sbb
adc
notb
inc
repz
mov
pop
inc
addr16
mov
adc
hlt
mov
dec
aam
and
shlb
or
pop
out
jmp
fcmove
mov
fistpl
daa
dec
jmp
addr16
pop
pop
out
sbb
inc
cmpb
mov
jae
daa
in
dec
sub
sbb
test
subps
xchg
adc
add
xchg
out
jmp
cmp
insb
push
jl
pop
imul
mov
mov
mov
jecxz
or
addr16
popa
and
sbb
sub
out
shll
mov
popa
add
pop
std
or
aaa
lcall
aas
insl
icebp
add
add
in
adcb
and
push
push
sbb
jp
es
or
aas
pop
mov
dec
fldt
rcrb
or
lret
and
ficompl
dec
lods
mov
pop
dec
mov
mov
sbb
mov
pop
roll
call
and
cld
mov
jge
sti
mov
in
aas
pop
inc
add
movsl
push
add
cld
dec
push
pop
mov
pop
jle
xchg
andb
and
push
xchg
jl
lret
por
negl
adc
add
jbe,pn
push
in
roll
push
cltd
lds
aas
aam
push
scas
xchg
js
add
ret
lods
sbb
test
adc
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
xchg
stos
insl
mov
sbb
test
sub
test
jge
push
jg
pop
ret
fcoml
cmpb
addl
lret
out
xor
mov
js
sbb
add
stc
cmp
repz
mov
jne
rorl
xor
xchg
leave
cmp
insl
lret
adc
dec
cli
or
imul
and
sti
loope
sbb
idivb
push
roll
or
dec
sbb
dec
push
inc
pop
test
or
push
imul
push
fsubl
or
pop
in
inc
xchg
sbb
testb
loop
pop
shrl
cld
ja
jbe
inc
sbb
hlt
and
in
in
dec
pop
pop
cmp
cmp
push
mov
mov
or
mov
jecxz
inc
addl
sbb
dec
xchg
lea
outsb
cmpsb
fsubrp
xor
movsb
test
mov
xor
add
sbb
push
sub
cmp
mov
aad
xchg
cmp
mov
adc
shlb
insb
mov
mov
dec
fadds
mov
mov
fsubrs
xchg
push
in
cmpl
frstor
add
popa
dec
call
dec
or
cmpsl
pop
push
pop
push
insb
dec
dec
hlt
cmp
add
jb
mov
sub
xor
cmp
les
jno
in
iret
enter
stos
test
jno
push
out
pop
mov
mov
push
xchg
test
jmp
in
adc
or
int
sub
bswap
mov
sti
xchg
ja
mov
push
add
adc
xchg
popa
aaa
cs
sbb
adc
inc
arpl
out
shrb
mov
dec
rclb
neg
jb
mov
mov
cmp
sbb
std
gs
icebp
aam
jbe
xor
std
cli
in
sbb
xchg
enter
insl
mov
sahf
imull
and
clc
or
fwait
jp
sbb
xor
mov
scas
xchg
jmp
fdivrl
cltd
push
jmp
jb
cli
jmp
and
je
and
mov
popf
push
ret
ss
sbb
mov
jbe
adc
adc
jg
ret
adc
pextrw
dec
cld
frstor
shll
xchg
xor
in
dec
inc
ret
rcr
push
fnstsw
shll
loopne
push
jne
or
sbb
xchg
mov
subl
sbb
fstpt
inc
and
fiaddl
xlat
daa
jle
mov
mov
xchg
cmp
push
add
rorl
fmull
sarl
sbb
jl
fidivrl
mov
pop
arpl
cmp
fildl
add
stos
nop
call
jg
sbb
std
in
jns
sub
xlat
or
inc
adc
addr16
xor
scas
xor
pushf
ja
xlat
cld
jae
xor
sbb
jne
sbb
hlt
insb
addb
xor
xor
mov
movsb
mov
xorb
std
sbb
gs
jbe
jns
dec
push
mov
inc
inc
dec
cltd
mov
xchg
pop
push
inc
pop
sbb
mov
push
xorb
addb
pop
add
mov
dec
aad
arpl
movsb
negl
add
inc
lods
sar
int
xlat
jg
or
les
shrb
lret
sub
in
stos
adc
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
cmp
repnz
sbb
test
mov
mov
mov
shl
cmp
add
das
inc
xchg
mov
pop
xchg
adc
and
push
and
add
lret
jecxz
fisubs
jge
xchg
pop
sar
push
jne
xor
mov
bound
cmpsb
lret
gs
pop
cmc
imul
cmp
loop
adc
ret
mov
push
pop
icebp
arpl
inc
mov
in
andl
dec
xchg
in
push
or
js
push
clc
dec
add
lret
mov
xchg
imul
cmp
mov
push
sbb
xchg
add
arpl
xor
mov
jo
idivl
jmp
ret
test
adc
sahf
mov
psubd
or
mov
fidivs
xor
or
frstor
push
adc
jle
aas
sbb
fisttps
stos
xor
int3
dec
loop
js
pop
or
cs
sbb
push
jne
sahf
push
push
lret
inc
in
pop
jne
mov
loop
movsl
ret
adc
push
les
and
xor
js
jecxz
push
fnsave
push
cmovb
mov
lods
nop
jns
shll
clc
scas
sbb
jg
mov
pushf
xchg
in
pop
pop
insb
mov
push
shll
dec
xchg
push
arpl
pop
xchg
sub
dec
ds
sub
in
jno
mov
cli
mov
call
cmp
das
or
ret
push
sti
scas
mov
out
xchg
bound
fnsave
insb
inc
addl
mov
mov
pop
mov
mov
or
pcmpgtd
lahf
sub
add
sub
add
lock
in
lods
add
or
faddp
mov
add
xchg
mov
inc
fimuls
jnp
pop
sbb
mov
ja
outsb
adc
or
pop
lret
test
movsl
lea
movsl
mov
xchg
testb
xchg
jnp
jmp
ds
roll
cmp
jnp
pop
inc
jne
ficoml
bound
or
popa
lods
cmp
xchg
pop
addl
or
hlt
xchg
imul
sub
js
addr16
jl
xchg
ja
pushf
xchg
sbb
push
mov
add
adc
int3
jbe
pop
rolb
add
lretw
jge
outsb
adcl
insb
mov
jno
jb
push
cmpsb
push
jae
ja
dec
mov
mov
cs
sbb
push
mov
cmc
cmp
adc
cmp
aad
mov
fidivl
mov
nop
jg
dec
into
lcall
lret
jg
ficoml
fistpll
in
cmp
adc
or
data16
mov
arpl
jg
jae
sub
mov
mov
aas
jne
aad
dec
xor
arpl
push
cmpl
popa
lea
fcomps
int
ss
mov
sub
cmc
xor
jp
xor
in
adc
push
jb
pop
dec
in
or
js
sti
xchg
lock
icebp
push
enter
pop
and
sti
lcall
cmp
adc
adc
or
rolb
sub
jnp
sub
adc
cmpsb
cmp
sbb
in
lds
out
dec
add
mov
pop
decb
inc
int3
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
popf
and
mov
sahf
adc
sbb
pop
loope
or
sti
dec
xchg
push
lods
mov
mov
les
and
mov
adc
push
push
popf
jae
sbb
ds
stos
fidivrs
sub
lods
insb
xor
jp
sub
mov
mov
xor
in
or
sbb
lret
jp
adc
dec
mov
adc
repnz
ja
mov
cld
jle
mov
mov
dec
shlb
or
shrl
pop
das
xor
and
ja
sti
cld
pusha
out
sub
push
mov
fisubs
adc
mov
adc
or
pop
adc
adc
add
adcl
pop
dec
xchg
test
ret
push
fsubrl
adc
dec
sbb
and
subl
inc
dec
scas
pop
repnz
daa
icebp
sbb
jge
fldcw
mov
aad
lock
xor
mov
ret
dec
xchg
jecxz
das
stos
adc
sbb
pop
sub
rorl
jae
sbb
gs
js,pn
adc
and
pusha
movsl
mov
imul
lret
cmp
dec
adc
mov
mov
aam
mov
jno
aad
and
rol
and
sub
jmp
and
addr16
cmp
lahf
mov
adc
mov
xchg
inc
mov
lods
aaa
mov
filds
push
imul
and
dec
cmpl
mov
add
hlt
shlb
icebp
mov
je
inc
ds
out
mov
rorb
pop
sub
cmpsb
add
aad
scas
outsb
imul
xchg
fadd
pop
adc
aam
pop
cmpsl
test
pop
push
jecxz
mov
outsb
xchg
sub
aas
jl
sub
pushf
sbbl
push
fcoms
adc
pop
clc
push
lods
jno
mov
imulb
movl
enter
movsb
outsb
cs
pop
mov
adc
jns
xor
daa
adc
test
mov
mov
sbb
lock
mov
adc
cs
cmp
fidivs
pop
mov
cs
mov
ficompl
push
ror
jecxz
or
inc
sahf
xor
in
ret
cmpsb
sbb
push
dec
mov
imul
rcl
push
inc
pusha
ret
mov
fnsave
cmp
fldt
ds
out
hlt
lds
push
mov
and
rorl
jb
loopne
or
out
push
arpl
test
repnz
mov
cltd
aas
sbb
pop
mov
dec
jns
clc
mov
orl
pop
dec
adc
orb
lcall
dec
jnp
cmp
pop
jb
add
xchg
int
gs
mov
sti
insb
sub
jmp
xor
mov
push
fcompl
mov
sbb
dec
add
dec
flds
testb
jbe
dec
cmc
mov
nop
mov
test
add
imul
xor
mov
movsb
inc
les
inc
push
cmpsb
xchg
imul
cld
sahf
loopne
sub
inc
mov
xchg
jmp
pop
inc
adc
cmp
cmp
mov
dec
jmp
cld
cltd
or
add
cltd
sub
in
add
ret
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
inc
iret
mov
scas
pusha
adc
cli
jl
add
stos
push
lock
sar
addr16
iret
sbb
lahf
mov
xor
pushf
cmc
dec
cmpsb
xor
outsl
and
pop
lds
subb
push
pop
sbb
mov
xlat
mov
jecxz
out
leave
in
or
insb
loopne
out
jb
shl
cs
cmp
stos
jno
xchg
or
mov
xchg
lds
xchg
inc
jl
and
fwait
fs
pop
popa
pushf
es
ds
inc
movsl
fidivrl
mov
lods
inc
fisttps
cld
data16
adc
and
mov
fnsave
mov
andb
push
lea
test
daa
rorl
jae
push
mov
sahf
add
loop
mov
sub
sti
loopne
loope
sub
xor
sbb
sbb
xchg
mov
sub
jmp
ss
popa
into
adc
ret
test
inc
sub
loopne
iret
cmp
jecxz
stos
sti
pop
push
fmuls
inc
lds
std
pop
nop
mov
inc
dec
jnp
dec
jecxz
ret
rcr
lock
push
add
int3
and
mov
adc
inc
jae
or
push
int
insb
jo
repz
pop
imul
push
insb
loop
lret
cmp
cltd
adc
xchg
ret
inc
sbb
or
jge
dec
mov
inc
sub
xor
push
xor
imul
pop
xchg
mov
cmpsb
dec
fwait
xlat
fcom
mov
push
or
out
test
mov
insl
jo
cs
xchg
fcomp
pop
repnz
mov
lock
or
sbb
inc
pop
xor
sarb
scas
xor
xchg
aas
pop
test
adc
push
pushf
rcr
and
dec
imul
sahf
pop
loop
and
dec
xor
sub
sarb
mov
jb
fwait
push
mov
adc
enter
cltd
mov
xor
and
gs
lock
fwait
movsl
cmp
inc
outsl
cmpl
and
pushf
lcall
fiadds
int
shr
pop
dec
pop
xor
popf
fldcw
adc
jg
bound
sub
inc
adc
jecxz
push
pop
pop
add
jnp
mov
in
addr16
dec
fcoms
add
call
lods
sub
xlat
std
call
adcb
dec
jae
notb
pop
jg
hlt
sub
pop
xor
sahf
mov
shlb
outsl
inc
movsl
adc
rolb
jno
sbb
xchg
jno
std
lods
mov
add
lods
outsl
inc
and
pop
popf
dec
shlb
xchg
mov
dec
mov
movsl
push
dec
idivb
xchg
cwtl
data16
enter
and
mov
pop
in
mov
pop
cmc
dec
mov
stos
fisubs
sub
js
mov
mov
iret
cmc
sbb
xor
xchg
and
mov
cmp
icebp
push
push
mov
add
loop
call
adc
and
push
jno
add
stos
sub
inc
xchg
in
and
cwtl
loop
adc
jne
adc
xchg
push
push
dec
mov
adc
imul
jns
xor
out
jae
out
rorl
lret
je
mov
jmp
jb
pop
dec
lods
lret
jp
cli
test
jge
xchg
jae
jnp
pop
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
aaa
mov
notl
shll
xor
inc
mov
inc
hlt
subl
mov
mov
fiaddl
inc
leave
aad
lods
dec
aas
sub
cld
xchg
inc
mov
dec
pusha
add
xchg
or
push
mov
mov
das
xor
and
lods
arpl
mov
jmp
in
imul
mov
cmpsl
rolb
addr16
imul
shlb
cmp
cmp
shlb
daa
jno
hlt
js
fwait
shrb
bound
rdtsc
movsl
rep
jns
lret
inc
xchg
rorl
mov
cwtl
push
mov
pop
sbb
fistpll
cmp
std
arpl
mov
xchg
es
gs
jle
cmpsl
sbb
adc
in
jno
and
orb
lods
lods
fsubr
stc
lcall
dec
xor
and
arpl
cmc
and
cmpsb
les
and
adc
je
mov
cmp
hlt
jns
ja
dec
mov
xor
xor
mov
int
shlb
loopne
adc
xor
aas
adc
nop
insl
add
shrb
inc
shrl
xchg
jle
mov
stc
insl
cmp
pop
sbb
scas
mov
mov
and
repnz
xchg
loope
lods
sbb
or
outsl
shrb
xchg
lret
test
mov
mov
gs
adc
sub
mov
push
pop
in
dec
cmp
inc
mov
daa
sbb
ret
sbb
mov
je
cmp
in
jne
add
mov
dec
je
sub
pop
loop
loop
pop
xchg
adc
and
test
jns
mov
notl
dec
mov
nop
mov
jle
xchg
push
jge
lods
mov
sub
and
adc
add
cwtl
mov
sbb
jne
pop
or
xchg
mov
fmul
orb
or
dec
outsb
loopne
lret
push
pop
lock
clc
rcr
aas
rcl
mov
repz
pop
insb
mov
mov
mov
mov
daa
scas
cmp
add
and
xchg
loop
sti
imul
inc
push
mov
fcmovb
xchg
or
or
ja
sti
jl
push
adc
mov
leave
add
mov
mov
pop
pop
cmc
jbe
mov
sbb
mov
fidivl
sub
inc
ljmp
sub
ret
push
push
mov
jl
fs
mov
and
pop
lock
adc
mov
mov
loope
adc
and
push
js
loop
je
add
icebp
inc
pop
lcall
bnd
push
or
pop
sarb
dec
cmp
outsb
jp
popa
mov
jno
cltd
arpl
dec
sub
les
mov
test
add
jmp
into
sbb
das
sbb
js
cmpsl
push
aam
loopne
into
sbb
aad
loope
push
dec
imul
xchg
adc
and
xor
gs
es
sbb
int3
bts
sbb
idivl
push
lret
inc
ret
popa
in
jbe
hlt
xchg
push
or
push
fiadds
int
rcrb
mov
in
fcmovbe
adc
xor
dec
pop
jmp
sbb
rcrl
lcall
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
adc
jo
mov
sbb
out
fistpl
mov
es
fsubrs
or
xchg
sbb
sbb
or
pop
push
daa
adc
dec
cmp
lret
pusha
je
inc
dec
mov
negb
xor
inc
out
xor
pop
lretw
lcall
mov
je
cmpl
lea
inc
cmp
leave
mov
sub
jbe
mov
jp
pop
jae
mov
and
and
maskmovq
notl
lahf
mov
jb
out
pop
faddl
jg
pop
out
ss
inc
xchg
inc
fdivs
fnsave
mov
adcb
jg
pop
into
jle
mov
test
rorl
rcrl
fstps
lret
xchg
sbb
jns
xchg
or
add
imul
and
popl
xchg
add
out
mov
mov
adc
jo
mov
ret
into
cmp
pop
je
add
sub
mov
lret
loop
std
scas
sahf
xchg
aaa
addr16
jp
in
pop
mov
insl
enter
gs
mov
outsb
shrl
and
lahf
cwtl
inc
inc
sbbl
inc
cltd
pop
lahf
mov
out
sub
cmp
mov
xlat
push
clc
jmp
lcall
sub
or
idivl
inc
mov
inc
mov
rolb
test
cwtl
into
xchg
jg
loop
mov
mov
das
shrb
sbbb
and
pop
or
aaa
imul
mov
and
das
aam
dec
lret
jecxz
inc
out
das
sub
stos
hlt
add
cwtl
fucom
mov
iret
dec
pop
nop
and
fcomps
pop
xor
int3
pop
or
adc
mov
cmp
int3
mov
test
xchg
lret
inc
arpl
inc
adc
sbb
test
test
loope
cltd
andb
insb
push
nop
mov
sub
and
jl
adc
xchg
in
jae
aad
add
pushf
gs
cmp
fadd
dec
jb
repz
fimuls
call
repz
mov
push
xor
insl
je
idivb
test
call
xorb
dec
pop
das
andl
inc
js
pop
nop
shl
cmc
cmp
cmp
dec
stos
movsl
push
in
shrl
popa
into
leave
aam
push
add
xor
rcll
clc
lea
mov
cli
outsl
jno
cmp
iret
xchg
dec
jae
push
and
in
mov
xchg
notl
or
cli
or
inc
mov
lods
add
cmpsb
adc
jno
imul
push
popf
mov
into
jbe
neg
cmpsl
lcall
mov
lahf
js
scas
xchg
imul
jbe
lret
fs
nop
inc
bound
add
add
adc
fsubp
sub
adc
cwtl
icebp
mov
ss
inc
pop
pop
lock
mov
lret
sbb
mov
pop
fldl
in
xorb
imul
dec
imul
mov
mov
cmp
jmp
in
cmc
lods
mov
lods
xor
pop
xor
ljmp
cs
xlat
sub
lret
imul
ss
push
jbe
out
aad
nop
pushf
cltd
xor
inc
fdivs
out
inc
mov
sbb
popf
lock
mov
mov
shlb
xchg
lods
push
cmp
std
popa
scas
xlat
ljmp
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
adc
mov
sahf
adc
sbb
mov
inc
add
imul
dec
adc
leave
fidivrs
jecxz
or
push
add
mov
pushl
pop
enter
or
xor
sbb
push
nop
in
cld
imul
jge
shll
mov
ljmp
and
cmp
into
sbb
and
in
imull
xchg
mov
fsts
stos
add
mov
xchg
sbb
cwtl
sahf
pop
sub
and
xchg
sub
mov
shrb
scas
pop
jo
push
dec
pop
test
adc
add
push
out
stos
mov
push
push
int
movsl
out
dec
call
inc
shl
pop
in
jp,pt
xchg
adc
hlt
adc
fwait
aaa
cmp
inc
in
or
cmp
xchg
imul
adc
mov
sbb
mov
lock
push
add
adc
adc
jmp
jmp
test
orl
cmpsb
pushf
dec
add
test
mov
inc
add
call
sub
outsl
test
cmp
xor
enter
lcall
pop
pop
popf
lcallw
mov
loope
sbb
push
jo
mov
insl
aad
mov
arpl
sbb
and
cmp
out
adc
jbe
pop
fistl
mov
lret
pop
cli
sbb
add
dec
mov
insl
push
lret
sbb
sub
popa
jp
aam
mov
ljmp
ja
cmp
stos
sbb
add
movsb
inc
mov
xor
xchg
xor
dec
sub
xorl
sub
aaa
cmpsl
sub
or
mov
movsl
xchg
int
popa
lahf
sar
push
mov
bound
loop
addr16
jmp
dec
mov
popf
fistl
fidivrl
cltd
js
stc
stc
jbe
divl
pop
pop
sbb
test
out
stos
or
ror
rcl
repz
xlat
inc
jae
mov
xchg
popa
mov
add
pusha
movsb
lcall
pop
xor
sub
out
pushf
rol
insl
in
or
call
outsb
mov
jge
fs
mov
mov
jmp
ljmp
int
jno
lods
or
add
pop
lods
and
xor
mov
repz
and
dec
sbb
jecxz
add
rcll
jns
ljmp
fisubs
push
jge
daa
or
inc
mov
or
dec
clc
adc
popf
cmp
sbb
jb
push
negb
add
pop
adcb
xchg
test
hlt
test
popf
cmpsb
xchg
xchg
jnp
das
stos
sub
int3
es
fs
fmuls
jne
mov
test
xchg
mov
jbe
push
cwtd
bound
gs
inc
and
pop
loope
sub
push
xor
sub
cmp
or
gs
sti
sub
rcrl
xlat
lea
dec
icebp
xor
mov
dec
add
cld
xchg
enter
and
nop
flds
out
fimuls
fnstcw
mov
xor
add
hlt
sub
dec
imul
lds
push
aaa
xor
and
pop
dec
cmpsb
fldcw
sahf
lea
daa
data16
int3
mov
pop
cmc
jmp
fbld
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
xor
pop
jge
sbb
mov
sub
lock
and
or
hlt
mov
push
shlb
std
scas
push
cmp
and
jne
lret
js
sbb
lret
dec
es
roll
xchg
mov
sbb
lret
push
xchg
push
mov
jg
cs
iret
mov
jns
xor
add
int3
insb
and
aas
xor
mov
jg
outsl
mov
aas
and
push
aad
mov
jne,pn
insb
dec
xor
mov
adc
ljmp
dec
push
enter
mov
add
add
inc
adc
data16
cmpsb
jge
lret
xchg
scas
dec
sbb
in
sarl
inc
jb
shll
movsb
enter
mov
xchg
lock
loope
xor
dec
in
stos
jecxz
and
pop
xchg
cmpb
arpl
stos
pop
xor
insl
fisubrs
xchg
or
fcoms
inc
push
pushf
insb
mov
cld
ret
jmp
inc
mov
test
ret
into
mov
mov
ljmp
adc
scas
cmp
fs
push
mov
pop
add
mov
jl
popa
std
and
js
and
repnz
sbb
mov
subb
mov
push
in
aad
or
stos
mov
mov
mov
cmp
fsts
or
jle
adc
cmp
call
push
lcall
ret
imul
dec
movzwl
ljmp
pop
lods
mov
adc
adc
rcrl
rol
pusha
roll
call
andl
add
push
in
cmc
lock
lret
mov
cld
ja
bound
push
pop
shrb
xchg
lea
add
pop
and
stos
inc
imul
sub
adc
mov
in
and
sbb
inc
pop
push
inc
filds
jge
add
mov
popa
stos
in
test
sub
scas
stos
cmp
fs
aaa
xchg
dec
sahf
out
mov
push
mov
inc
ret
adc
dec
inc
inc
adc
int
les
jbe
sbb
stos
je
clc
sbbl
imul
inc
mov
test
add
popa
lea
dec
test
jmp
mov
imul
mov
xor
xor
mov
into
mov
shrl
pushf
test
xchg
add
push
mov
mov
in
mov
imulb
push
mov
lahf
rol
sub
out
mov
jmp
cwtl
pusha
mov
aad
cmpsb
pop
mov
push
mov
push
cwtl
sarb
xchg
inc
scas
mov
mov
inc
fidivrl
test
xchg
mov
pop
sbb
push
push
or
hlt
pusha
shrl
push
push
mov
ljmp
mov
mov
cmp
hlt
rclb
mov
ja
iret
clc
jmp
sub
and
push
fs
dec
icebp
pop
rorl
das
subb
xor
xchg
leave
inc
into
sti
push
mov
pop
jg
sub
jg
inc
push
cmp
ret
mov
push
pusha
in
and
repnz
and
mov
pop
mov
jmp
repnz
jmp
imul
pushf
pop
jle
shrl
popf
jne
sbb
mov
jp
test
inc
ret
test
inc
sub
mov
sbb
mov
gs
cwtl
push
or
mov
dec
adcl
push
xchg
add
jge
xchg
mov
orl
in
jae
std
addb
arpl
mov
mov
mov
pushf
ret
icebp
in
mov
and
push
pop
cwtl
jp
push
cmpsb
test
es
nop
psubd
xchg
movsb
cmp
xor
jge
andb
mov
leave
push
sahf
aad
pop
stos
dec
adc
or
dec
icebp
jecxz
xlat
sti
mov
inc
iret
loop
dec
ret
mov
rclb
aad
stos
incl
aad
and
push
cwtl
imul
sub
lcall
pop
mov
fnsave
or
ja
leave
ds
sbb
xlat
or
cli
loop
mov
cmpb
and
mov
pop
sub
mov
or
push
inc
dec
out
jne
popa
mov
mov
cmp
inc
jmp
push
push
ret
or
add
jns
jno
and
mov
dec
xchg
mov
cs
faddl
pop
xor
nop
sub
jbe
mov
inc
dec
xlat
jnp
xor
and
in
daa
arpl
iret
and
pop
jnp
inc
mov
loop
push
int
cmpsb
sbb
daa
popf
mov
push
jg
mov
pop
call
aaa
shll
dec
divb
test
pop
adcl
in
lods
lods
or
loop
rcrb
pop
add
inc
mov
mov
or
mov
cld
inc
push
cltd
push
adc
adc
add
cmp
aaa
and
cmp
dec
pop
sbb
dec
sub
sub
cmp
incl
data16
jmp
into
fldt
shl
pop
aas
addr16
xchg
sbb
sbb
popw
test
repz
push
fcmovbe
in
insl
cmp
rcrl
icebp
mov
cli
loopne
xor
fisubl
sub
xor
sbb
call
xor
jg
dec
fucompp
lock
lret
inc
call
in
mov
cmp
stos
scas
xor
loope
clc
imul
out
mulb
icebp
push
adc
mov
jae
sub
fcoml
fisubs
aad
jmp
ljmp
pop
stos
mov
shrb
bound
fdivrs
jl
fsub
subl
pop
in
dec
pop
stc
sbb
jnp
or
aam
rol
nop
jl
data16
dec
pop
out
popf
pcmpeqd
push
call
test
pop
sbb
bound
rol
scas
insb
push
push
and
pop
mov
lret
out
lahf
inc
push
inc
mov
out
int3
mov
pop
fcmovne
xchg
sbb
cmp
out
fwait
stos
pop
mov
mov
out
jmp
or
mov
leave
mov
lahf
xchg
stos
mov
mov
dec
push
push
fistpll
adc
fs
sahf
sub
cmpsb
jmp
mov
rcll
movsl
rcrl
popa
js
ficoml
mov
pop
test
rcr
adc
int3
shl
adc
mov
jb
aas
mov
pop
sub
lea
fldenv
movb
add
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
outsl
sbb
sahf
adc
sbb
popa
pop
das
mov
xchg
out
jmp
test
jbe
cmpsl
cmpsl
out
push
mov
add
fnstsw
lea
push
shr
fiadds
sub
mulb
and
mov
push
pop
or
les
jp
call
adc
lret
popf
inc
std
and
cs
sub
shlb
cmp
add
xchg
push
mov
sub
loop
fstl
or
repnz
cld
mov
xchg
mov
xchg
in
adc
ds
lret
xor
into
mov
jno,pt
mov
mov
sti
lods
sti
arpl
lcall
mov
and
loope
jge
insb
cmc
dec
mov
push
sahf
icebp
or
xchg
test
xchg
fwait
stos
inc
aas
daa
mov
jne
es
icebp
inc
mov
sbb
mov
and
into
adc
add
cmpsb
imulb
mov
cli
out
and
cmc
jl
in
aad
adc
jb
mov
mov
inc
dec
test
sub
xchg
cmc
ret
pop
pop
fiadds
leave
sub
jno
cmp
test
stos
cmp
fucomi
xchg
call
fisttpl
pop
test
test
imul
or
lret
ds
xlat
cmp
or
or
shrl
dec
mov
xor
mov
popf
outsl
xchg
into
mov
sahf
ret
inc
gs
xchg
fstp
mov
xor
inc
aaa
movsl
rolb
and
add
mov
addr16
ds
dec
adc
and
mov
mov
jecxz
cmp
xchg
or
jno
lahf
cli
insl
sbb
sbb
mov
popa
sbb
xchg
lock
add
inc
or
xchg
cmpsl
sub
add
sahf
ret
xchg
sbb
and
cld
pushf
out
or
rclb
out
sahf
insb
nop
gs
hlt
cli
push
inc
cs
pop
mov
cmpsl
cld
and
or
or
adc
pop
test
push
or
push
mov
cld
cmc
pop
out
ds
out
dec
out
sbb
xor
aas
popa
pop
mov
dec
stc
cmpsl
fcompl
mov
mov
push
jnp
add
xchg
inc
loope
nop
popa
add
sub
add
lcall
ljmp
into
sbb
sub
adc
jns
lock
aas
in
add
cmp
scas
outsb
xchg
inc
push
int3
mov
add
xor
test
iret
xor
mov
mov
dec
adc
test
mov
mov
add
pop
aaa
pop
es
adc
out
shl
scas
pop
xchg
arpl
dec
enter
inc
cmp
inc
int
and
sbb
aad
sub
ret
hlt
cld
movsb
xchg
push
push
sahf
shlb
dec
push
mov
sub
sub
ljmp
inc
lds
push
and
aad
andl
xor
fcompl
and
test
gs
scas
and
out
pop
cmp
daa
jmp
repz
inc
aad
es
in
xchg
adc
mov
add
leave
movsl
addr16
jl
xor
mov
cmp
push
cmpsl
sarl
push
fcoms
popf
jns
add
repz
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
jl
sbb
sahf
adc
sbb
popf
jp
xchg
movsl
lods
and
push
pop
aas
dec
mov
frstor
xchg
cmp
ja
or
xchg
pop
lret
mov
fwait
jns
and
xor
jne
ficoms
adc
pop
push
out
pusha
lds
push
push
movsl
stos
xchg
outsw
rcl
lea
incl
inc
enter
push
pop
and
xchg
aam
pop
xchg
adc
lods
jp
repz
outsl
shr
int3
aam
and
pop
fs
ret
push
sbb
push
push
fsubrs
roll
outsl
ret
data16
mov
fs
movsl
aad
mov
jmp
or
push
jge
clc
cltd
out
loope,pn
sbb
fcmovbe
adc
jle
sbb
pop
lock
pop
mov
jae
in
sub
push
mov
lods
jo
stc
push
dec
push
divl
aam
pusha
jp
jg
sarl
sub
xchg
cmc
ret
rcll
int
jmp
sbb
mov
subl
jbe
enter
jl
test
push
ljmp
pusha
fs
loope
inc
inc
sti
mov
test
sbb
jnp
or
lods
adc
ret
addr16
lret
data16
out
or
mov
jo
sbb
sub
stc
int
push
add
mov
mov
loop
cmp
pop
stos
shrb
xlat
add
repz
mov
push
or
or
push
test
cmp
sub
mov
cmp
adc
cmp
divb
pop
faddp
sbb
orl
jl
push
inc
adc
cmp
outsb
push
jae
pop
pop
ljmp
cld
iret
mov
test
ljmp
in
aam
mov
test
aas
cs
in
push
out
popf
dec
rcr
xchg
divl
es
popf
pushfw
push
int3
lcall
out
pop
and
nop
xor
jo
jle
mov
inc
sbb
in
out
dec
lcall
xchg
lds
xor
push
sarl
bound
enter
nop
mov
xchg
aas
into
iret
jae
push
jle
jns
lcall
dec
mov
cmc
or
adc
and
add
mov
test
mov
outsb
fiaddl
or
fsubl
cwtl
mov
dec
test
aad
sbb
push
jecxz
leave
leave
mov
mov
and
sti
loope
adc
enter
das
in
subl
sub
xor
cld
in
xchg
fisubs
mov
push
inc
std
and
jno
scas
mov
sbb
dec
daa
jns
and
sub
jecxz
dec
mov
xchg
test
mov
push
mov
mov
sbb
mov
loopne
and
mov
inc
je
cmc
negb
xor
rorl
xchg
adc
movsb
jnp
sub
sar
fcomps
mov
popf
sbb
push
sub
lret
loop
notb
ja
cmp
pusha
and
hlt
mov
out
movsl
sarl
shll
int3
dec
push
jmp
mov
or
ret
mov
daa
out
loop
inc
push
jnp
cld
jae
mov
xchg
cwtl
push
pushf
ss
mov
test
bound
cmpl
mov
push
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
mov
mov
ret
pop
push
sbb
xchg
andl
mov
int3
sub
pop
out
stos
xlat
ss
mov
push
mov
mov
pop
inc
fs
cld
jo
ds
ja
mov
push
lods
insb
lods
sarb
shll
into
mov
sahf
pop
daa
jno
dec
test
push
push
lcall
inc
repnz
in
fdivrl
fstp
add
cmpsl
ljmp
and
roll
dec
xor
aas
test
jb
jne
add
jne
mov
adc
loope
addb
lret
roll
jmp
lods
sub
cli
dec
and
dec
xchg
add
clc
jmp
repz
stos
cld
test
repnz
dec
loopne
sahf
pop
inc
fcoms
mov
mov
iret
or
dec
dec
out
push
dec
aaa
sub
pop
add
jmp
xor
outsb
cmp
out
sub
loop
cmpsb
and
test
add
js
and
mov
add
arpl
and
fisubs
push
push
push
add
mov
jae
loopne
jb
mov
insb
das
loope
jb
incl
iret
in
lods
cmc
mov
mov
mov
pop
ja
and
mov
push
sbb
aas
and
or
stos
loopne
push
jo
mov
pushf
adc
stc
sbb
repz
fstl
inc
cmp
fmul
adcl
sbb
inc
aam
adc
popl
scas
dec
sbb
sti
mov
inc
and
adc
fcmovnbe
nop
push
inc
cmp
dec
lret
add
and
push
loope
push
std
shll
test
lahf
jl
jae
pusha
adc
mov
or
loopne
mov
subb
jae
outsb
imul
iret
and
sbb
sahf
and
adc
dec
fimuls
pop
xchg
ficoms
lcall
scas
movsb
mov
adc
stos
xchg
stos
cmp
pop
test
jg
aam
add
sub
xchg
mov
outsb
sub
fisttpl
sub
and
sbb
xchg
test
addb
sarl
mov
stc
loopne
and
dec
fsubl
xchg
call
je
pop
rorb
lret
pop
xor
xchg
icebp
jb
and
dec
lea
inc
jp
sub
sahf
or
dec
sbb
arpl
dec
mov
outsb
dec
xchg
xor
mov
out
or
loop
cmc
pop
stc
jno
rorb
inc
subb
leave
test
jle
cmp
cs
mov
fcomps
lods
jno
inc
ficomps
cwtl
dec
or
pop
xchg
ret
xchg
sub
lcall
mov
aad
aad
xchg
push
ja
ret
xor
push
das
push
cmp
mov
mov
mov
ds
sbb
pop
mov
popa
lods
sub
rol
cmpsl
adc
mov
push
orl
leave
popa
or
mov
mov
jmp
stos
cltd
sub
sti
test
or
push
sub
clc
mov
jge
cmp
xchg
jns
mov
and
sub
add
mov
popf
fs
xor
scas
xchg
or
jge
dec
mov
xlat
aas
mov
bound
mov
push
out
enter
ror
xchg
montmul
cmpsb
andl
xor
and
sbb
shlb
mov
push
mov
jmp
pop
jno
mov
xchg
lock
sbb
pushf
mov
push
hlt
dec
lds
int
clc
jp
cmp
pop
decb
jl
push
notb
aam
fcompl
cs
mov
adc
cmp
imul
mov
sahf
xlat
jnp
shll
std
or
mov
mov
cmp
mov
inc
push
pop
mov
jl
mov
inc
lds
jnp
in
xchg
add
jg
and
aad
mov
das
inc
add
insl
out
gs
nop
roll
sti
ljmp
dec
addb
lcall
push
mov
push
in
mov
adc
inc
fs
dec
hlt
fisubrs
leave
xlat
roll
cs
in
lds
cs
xor
xchg
mov
test
adcl
ret
and
imul
sar
rolb
movsb
fnsave
into
test
test
negb
sbb
popf
aad
jp
push
add
pop
dec
ret
into
rolb
cmp
adc
sub
movsb
mov
repz
xchg
dec
pop
sub
movsb
mov
cltd
pop
inc
jl
insl
inc
cmc
sub
scas
popa
or
or
lret
imulb
pop
sarb
dec
and
jg
sbbb
stos
dec
jno
cld
out
push
cmpsl
push
leave
insl
into
arpl
dec
out
sti
imul
adc
pushf
repz
aaa
mov
sub
add
imul
dec
xchg
mov
addr16
insl
rorl
jns
insb
loope
fcmovnb
add
or
mov
add
inc
and
xlat
jmp
out
dec
mov
cmpsb
inc
orb
mov
adc
into
pop
jle
lock
scas
fcompl
sbb
fsub
jno
or
pop
dec
or
int3
mov
in
ss
data16
push
clc
movsl
decl
popa
mov
orb
sbb
xchg
lcall
fldenv
addb
pop
test
xchg
push
mov
cmpl
xchg
gs
mov
fcmovbe
mov
rcll
mov
add
sbb
in
ss
adc
je
push
xlat
or
imul
dec
push
sub
pop
fwait
inc
cmp
popf
loope
dec
sub
add
fstpl
fdivs
in
xchg
cmp
js
int
cld
aaa
data16
inc
sbb
in
or
in
clc
jg
shlb
jo
jb
cmp
xchg
dec
mov
cmp
or
and
or
add
lock
jge
cmc
push
fstpl
in
ret
mov
mov
addr16
das
stos
imul
mov
shrb
adc
cmp
mov
sahf
xchg
in
push
pop
push
incl
jge
inc
test
cltd
dec
xchg
inc
aam
mov
jecxz
pop
movsb
add
nop
push
mov
push
cltd
lock
push
cli
push
xor
pusha
mov
jnp
mov
movsb
lahf
adc
jne
mov
dec
pop
jmp
testb
insb
fsubl
pop
jmp
in
push
shll
dec
mov
repz
stc
xchg
inc
cmp
fidivl
pop
xlat
lods
xchg
mov
test
mov
stc
add
jp
sub
xchg
movsl
ret
sub
lret
mov
iret
nop
out
call
lods
rolb
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
push
addr16
sbb
and
jno
xlat
sub
and
jp
xchg
adc
and
push
jne
push
fwait
xor
mov
icebp
idivl
pop
pop
or
cli
mov
xor
test
rcl
pop
into
aam
jg
xchg
insb
out
or
adc
add
call
cmp
pop
xchg
xor
aad
mov
call
dec
pusha
js
ss
push
push
mov
sbb
les
test
sar
jae
push
jecxz
mov
xchg
clc
sbb
outsl
in
movsl
ja
adc
je
cmp
sbb
mov
pop
fiadds
imul
fnstsw
xchg
movsb
ret
fstp
and
or
pop
test
jbe
jle
int
aam
std
nop
cwtl
xchg
xor
sub
fildll
xor
rcrl
jns
push
jae
inc
fcmovnu
jbe
adc
pop
test
dec
ret
push
clc
lret
pop
pop
lahf
ret
cmc
add
cmpsl
sub
je
into
out
stos
mov
adc
data16
mov
dec
ljmp
sbb
test
cmp
cmc
subl
jge
sub
adc
mov
mov
xchg
fwait
popf
sbb
lea
mov
pop
xchg
popa
dec
in
pushf
data16
cmp
jnp
or
inc
insb
in
scas
stos
adc
jp
nop
pushf
cs
push
shll
mov
pusha
scas
imulb
nop
in
shlb
fwait
sbb
and
push
mov
push
push
int3
sub
sbb
push
cmp
das
add
stos
shll
sub
add
jae
dec
xorl
inc
dec
jo
inc
inc
mov
mov
repnz
test
xor
xabort
xchg
lcall
xchg
pop
stos
int
sbb
push
add
cmc
inc
jp
adc
jae
mov
mov
es
mov
icebp
jns
and
insl
movsb
xlat
insl
enter
inc
test
sub
lea
sub
mov
stos
js
add
adc
fldenv
lcall
je
scas
mov
dec
or
scas
mov
mov
popa
mov
sbbb
jge
mov
jecxz
add
scas
jo
pushl
sub
add
mov
lahf
and
repnz
les
cmpsl
sbb
clc
push
push
add
fmull
rcrl
push
in
or
push
mov
lea
mov
imul
push
sahf
inc
fisubrl
and
loop
pop
lods
arpl
ss
mov
pop
dec
pop
sarb
out
aaa
call
and
int
xor
bswap
jecxz
jns
fmuls
mov
xchg
fsubrl
jmp
xchg
sbb
jno
pop
insb
into
inc
mov
mov
outsl
aad
jg
and
out
xor
cltd
das
pop
mov
lea
mov
cwtl
pop
jns
aaa
and
pop
pop
inc
addr16
mov
mov
push
mov
js
sbb
sub
lea
jbe
mov
std
dec
or
cwtl
js
inc
xor
add
inc
inc
scas
fisttpll
scas
dec
out
sahf
lods
add
xchg
scas
add
xchg
jns
mov
daa
cmp
mov
cmp
push
jns
push
and
mov
pop
pop
adc
rorb
movsb
ret
rorl
add
add
and
sbb
outsl
push
mov
sbb
add
mov
push
cmp
jg
cli
or
adc
pushf
cli
jmp
lcall
lds
outsl
jmp
xchg
ret
out
mov
pop
jnp
outsb
out
mov
lock
inc
mov
addr16
fstl
das
sub
add
xor
fdivrl
xchg
jmp
stc
cmpsl
ficompl
adc
cmovno
test
xchg
sarl
fstps
sbb
cwtl
mov
mov
popa
iret
cli
cli
adc
xlat
pop
outsb
push
imul
push
xchg
jae
push
jo
arpl
mull
idivb
daa
inc
outsl
push
mov
xchg
mov
xor
test
cmp
push
ljmp
lea
mov
in
cmp
imul
cltd
push
rorb
popf
push
push
dec
mov
stc
cs
out
into
add
mov
lods
hlt
jecxz
dec
pushf
jg
mov
add
pushl
mov
dec
into
push
or
sbb
and
jae
pop
push
adc
push
stos
ljmp
lock
or
dec
mov
jge
jns
shrl
cmpsb
sub
cmc
xor
xchg
jmp
imul
pop
cmp
aad
ficoml
fdivrs
out
out
out
test
adc
sbb
shl
lret
lock
mov
in
jl
popf
mov
cs
bswap
adc
dec
iret
repz
mov
xchg
inc
or
icebp
mov
jnp
xchg
and
insb
out
jne
or
les
inc
and
arpl
cmovg
sub
sbb
dec
dec
mov
scas
xchg
movsl
and
push
fnstsw
lock
push
adc
push
or
add
pop
je
or
pusha
and
imul
flds
lahf
xor
bound
pop
add
mov
dec
dec
add
repz
outsb
jbe
enter
int
pop
xchg
cmp
adc
jae
sti
jmp
push
addr16
dec
and
xor
mov
mov
push
cwtl
mov
out
shl
std
xbegin
or
sbb
adc
outsb
xchg
cmp
outsl
xor
inc
jg
imul
and
fs
xor
leave
jo
xchg
sti
xchg
icebp
mov
fsub
popf
pop
mov
inc
iret
lods
ret
pop
jae
xor
cmp
add
and
mov
lahf
test
call
lret
xchg
sub
adc
xor
push
in
cmpsl
push
pop
sbb
or
rcll
xchg
sbb
mov
adc
mov
outsl
insb
sbb
jle
and
mov
cltd
cmc
cld
pop
sub
fdivrs
inc
and
or
jae
imul
cmpsb
cs
sub
sbb
cltd
outsl
sub
pop
jo
hlt
pop
adc
mov
add
jo
fisttps
andl
out
jp
adc
xor
mov
dec
mov
rcr
push
push
lods
xchg
cli
adc
sub
imul
fisubrs
in
jecxz
pop
out
push
xchg
inc
pushf
iret
sti
test
outsl
nop
sbb
scas
daa
outsl
jne
jbe
adc
mov
pop
es
mov
adc
mov
mov
loopne
fdivs
inc
testl
push
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
call
sbb
sahf
adc
sbb
sbb
fbstp
push
push
push
push
scas
xor
jg
insl
pop
dec
mov
mov
xchg
sbb
stos
mov
in
dec
bound
call
popf
pop
inc
notb
jae
loop
test
pop
xchg
jne
andb
icebp
test
xchg
cld
repnz
jecxz
mov
adc
dec
xor
shlb
inc
and
gs
loopne
mov
outsb
sub
in
cltd
je
sub
dec
sbb
jb
pushf
mov
jecxz
jmp
sbb
jmp
aaa
push
lock
sub
dec
iret
sub
inc
stc
cmpsb
mov
cmp
mov
ret
pop
push
rolb
pop
rcrl
sbb
subl
jecxz
jno
popf
dec
lcall
daa
sbb
push
inc
inc
ja
aas
cmpsl
xchg
cli
xchg
sub
mov
lods
lds
roll
cli
iret
mov
mov
push
ja
mov
push
frstor
jb
dec
push
push
jmp
insl
xlat
lret
and
push
cli
xlat
add
subl
xor
loop
cmc
ret
cmp
sbb
mov
dec
in
stc
mov
in
jne
pop
or
comiss
mov
mov
jnp
scas
inc
pop
shrl
push
test
push
rclb
pop
adc
lods
nop
lret
imul
pop
jno
dec
aad
ret
sub
mov
loopne
fisttpll
pushf
pop
imul
inc
out
add
and
mov
cwtl
loop
data16
das
cwtl
add
fs
xor
repnz
loopne
push
fimull
xor
inc
cmp
jl
xor
xchg
ds
xchg
lods
insl
adc
lahf
push
pusha
mov
es
sub
out
xor
mov
xchg
mov
pop
pop
mov
pop
cmp
lcall
push
xchg
adc
lret
inc
arpl
loop
iret
sub
adc
jne
nop
and
aas
roll
cmp
cmc
or
push
pop
out
mov
and
inc
xchg
lret
mov
xchg
mov
aam
xor
dec
les
cli
imul
or
int
sub
repz
jns
push
xor
in
xchg
cwtl
clc
leave
fisttpl
xor
pop
gs
sbb
mov
adc
loop
fwait
jbe
pop
jb
cltd
xor
dec
iret
inc
jecxz
and
pusha
mov
xchg
insl
sbb
cmpsb
cmp
mov
ret
leave
ret
push
fucom
lcall
xchg
pop
push
nop
sbb
jp
loop
rorl
xchg
arpl
cmp
inc
cmpsl
mov
je
ds
shrb
xor
lret
xor
daa
xchg
mov
cltd
xchg
adc
jnp
add
xchg
inc
out
ds
out
frstor
xorb
data16
push
pushf
ficoms
ss
or
pop
and
fdivrl
dec
outsb
mov
add
dec
fldenv
lret
in
push
push
inc
mov
aad
push
sbb
ret
divl
jbe
aam
sbb
in
cmpsl
retw
test
adc
rorb
ret
mov
adc
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
push
cmp
sbb
xchg
mov
dec
daa
hlt
pop
dec
jle
push
and
xlat
pop
setl
cmp
jl
jnp
mov
lahf
jnp
mov
push
cmp
leave
xorb
inc
mov
loope
push
mov
adc
std
dec
rclb
fistpll
call
push
iret
xchg
dec
fisttpl
inc
rclb
icebp
out
pop
out
pop
cmp
xchg
std
mov
pushf
xchg
or
jp
mov
push
mov
xor
fcoms
dec
sub
add
push
adc
xchg
lods
pop
in
out
sub
cmp
fidivl
xchg
rorl
ja
mov
sbb
mov
push
or
mov
addr16
loope
jp
cmp
insl
cmp
movb
push
adc
add
leave
sub
cmp
xor
repz
lds
daa
test
fcoml
enter
mov
jnp
fs
xor
push
jb
mov
sbb
mov
dec
stos
repz
inc
sub
test
or
jbe
xorl
mov
add
std
jo
cwtl
mov
dec
xchg
ss
fmul
mov
sub
mov
xor
movsl
mov
mov
lea
ret
fucom
dec
xchg
mov
adc
fisttpll
call
outsl
in
jle
jne
mov
hlt
arpl
sti
sbb
mov
insl
xor
das
push
fcomps
sbb
call
xor
jb
pop
mov
push
and
in
push
pop
ja
dec
orb
mov
lret
fdivr
or
fdiv
xchg
or
loope
ss
jns
inc
ja
aas
xchg
adcb
xchg
leave
lods
sti
sbb
cld
shll
or
sbb
add
jbe
push
cmp
scas
cmpb
lcall
lock
in
inc
push
mov
test
enter
mov
int
and
cmp
in
mov
adc
lods
icebp
scas
mov
pop
mov
ret
clc
fcmovbe
pop
pop
out
js
or
sbb
pop
xchg
xchg
out
data16
lcall
adc
jb
sub
xor
pop
xchg
cmp
cmpb
enter
lea
cmpsb
push
loop
daa
jp
fstps
out
lcall
xor
flds
cwtl
dec
vpmacsww
xchg
pop
push
sbb
pop
test
cltd
stos
lcall
sahf
paddusw
push
fisttps
adc
mov
sub
into
gs
and
inc
xor
cwtl
imul
or
push
cmp
xchg
out
push
xor
enter
mov
or
mov
bound
jbe
or
cld
js
cmp
and
xchg
mov
outsb
rorl
loope
push
dec
push
dec
pop
ret
push
mov
add
push
outsb
aas
sub
and
nop
push
push
and
add
push
rol
mov
mov
and
loop
jmp
pop
jp
loop
push
idivl
lods
pop
repz
scas
xorl
pop
outsb
dec
js
in
sub
gs
std
lock
jne
sarb
jbe
cld
sub
sbb
test
arpl
call
cli
scas
xor
dec
or
xlat
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
pop
mov
sbb
sahf
adc
sbb
je
cmpsl
sub
das
push
and
dec
stos
enter
mov
andb
mov
adc
xchg
cmp
ljmp
or
in
loop
aaa
xorb
lods
mov
cwtl
jl
jb
inc
lods
fwait
jo
popa
imul
mov
aam
testl
jns
xor
adc
jb
mov
mov
mul
mov
pop
mov
mov
sbb
faddl
out
cmp
js
dec
xchg
pop
xor
or
sub
sub
add
mov
cli
inc
add
inc
not
lock
dec
loope
fsts
sub
outsl
or
test
add
dec
inc
in
pop
sub
pop
cmp
scas
subl
push
inc
mov
cmpl
sub
jo
pop
neg
push
push
and
das
jmp
cmpsl
cltd
je
or
stos
lock
leave
jnp
cmpsl
mov
int3
mov
in
scas
push
inc
dec
jns
pop
sbb
mov
sbb
mov
mov
arpl
fwait
mov
inc
jnp
ja
imul
bnd
jnp
mull
and
mov
inc
pop
scas
adc
pop
dec
xor
loope
addr16
xor
cmp
pushf
fcomip
das
mov
adc
xor
popaw
inc
mov
call
pop
fwait
cmpsl
xchg
nop
mov
push
pop
shl
push
cltd
xchg
xchg
dec
jo
lret
adc
xor
mov
jbe
mov
sub
dec
out
push
scas
adc
test
dec
pop
cmp
dec
xor
sbb
jmp
mov
cmp
rorl
pop
out
clc
pop
sbb
cmpsl
or
jmp
sub
add
lret
sub
mov
sub
ljmp
fdivrs
inc
inc
fmull
stos
in
nop
cltd
xchg
cmp
ja,pt
nop
cmc
pop
cmc
mov
rcrb
jle
mov
jb
movsb
lds
cmc
gs
dec
call
dec
ficoms
or
imul
adc
dec
mov
outsl
mov
mov
les
icebp
push
icebp
inc
popa
mov
inc
push
bound
sbb
outsb
pop
sub
fimuls
clc
out
cmp
movsb
push
dec
aad
sbb
lret
aas
add
xchg
xchg
jecxz
adc
imul
aaa
pop
icebp
and
enter
daa
jbe
pop
icebp
shrb
and
sbb
movnti
jo
pushf
ss
jmp
imulb
setg
mov
jne
or
mov
mov
adc
adc
mov
es
es
insl
push
test
mov
mov
dec
inc
icebp
dec
out
or
icebp
mov
add
sub
jnp
cli
pop
bsr
mov
out
xchg
sti
sahf
mov
iret
test
test
and
lock
fcmovnb
mov
jp
repnz
outsl
fsub
pop
imul
loopne
lret
sbb
xor
mov
jno
fisttpl
pushf
inc
xchg
loope
or
insb
and
scas
dec
push
imul
xchg
cltd
mov
sbb
adc
xchg
cmp
mov
pop
mov
mov
rcl
je
popa
in
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
pop
push
jle
sub
sbb
stc
adc
test
add
outsb
es
and
mov
daa
push
xor
xor
xchg
mov
mov
adc
or
lahf
clc
mov
out
push
push
shrb
fimuls
cmc
cmpsb
pop
in
popf
fnstcw
jnp
cli
lds
mov
adc
xchg
jp
shrb
pop
ficoml
xchg
add
insb
dec
and
mov
imul
xchg
jnp
mov
nop
enter
cmp
add
out
xchg
add
ja
pop
mov
xchg
mov
arpl
popf
xchg
mov
dec
mov
insb
stc
sbb
mov
into
std
xlat
mov
into
cmp
std
cmpsb
in
fwait
jno
in
insb
inc
imul
inc
imul
es
adcl
pop
rcll
in
bound
or
fimuls
fwait
mov
lahf
fs
sahf
xchg
loopne
cmp
frstor
jmp
dec
inc
out
or
mov
jne
stos
jno
leave
or
adc
repz
mov
sahf
and
imul
pop
push
mov
xor
ja
jae
sub
popf
push
xchg
ret
fimull
shlb
lahf
mov
enter
pop
hlt
pop
add
jecxz
mov
outsl
or
xchg
insb
and
and
and
insb
mov
lea
mov
sti
nop
xchg
adc
mov
insl
xchg
cmp
and
into
popa
out
jno
pop
mov
add
dec
mov
and
movsl
xor
pop
cs
xlat
pop
push
fs
rcrl
cld
loopne
out
lcall
xchg
cmp
jbe
jg
decb
mov
enter
push
fcmovb
cmp
popa
in
push
ss
fcmovnbe
iret
gs
xchg
movsb
push
stos
out
jmp
cmp
nop
mov
xor
and
mov
jge
int3
in
add
jbe
sbb
jle
jge,pt
divb
mov
push
sub
into
adc
push
inc
dec
jl
ret
gs
outsb
cld
scas
cmp
jmp
cmpb
jno
into
push
fwait
pop
es
xchg
pop
dec
lahf
int3
movsl
imul
sub
inc
jp
and
test
fstpt
add
lcall
push
pop
scas
int3
sub
jmp
xchg
jne
push
jle
cmp
inc
aam
cli
in
mov
js
enter
xor
dec
jecxz
dec
lds
pop
sub
cmp
sbb
cwtl
fistps
fs
inc
and
scas
sbb
jmp
push
mov
stos
add
sub
push
dec
pusha
sbb
adc
push
repz
xlat
icebp
add
das
outsb
in
inc
push
cmc
pop
add
cmp
loopne
add
andb
das
jae
jae
daa
aad
js
cmp
mov
dec
lahf
xor
sub
mov
pop
mov
pcmpgtd
cmp
inc
lahf
xor
jle
das
ret
xchg
adc
pop
js
flds
dec
jb
pushf
ljmp
jmp
pop
rolb
xchg
push
and
je
xchg
clc
jge
clc
iret
gs
divb
add
or
dec
jp
dec
aad
nop
add
roll
or
mov
cmovs
into
clc
loop
ljmp
lock
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
fidivs
push
and
sbb
sbb
xchg
inc
cwtl
es
movsb
push
fnstcw
jle
es
test
sub
scas
iret
jl
pop
test
mov
outsl
data16
pop
int
out
sub
out
pop
aam
push
js
xchg
push
lds
push
xchg
xchg
pop
and
in
and
xor
mov
mov
push
cli
jo
lock
pop
inc
adc
dec
push
lods
jbe
pop
leave
or
dec
xor
pop
cmp
xlat
sti
push
lret
jg
mov
adc
xlat
js
outsb
test
mov
lahf
rclb
xchg
fcmovu
xchg
outsb
sahf
mov
into
and
add
mov
daa
push
xchg
aas
in
mov
xchg
into
movsb
mov
adc
inc
add
gs
inc
daa
push
ljmp
lcall
shlb
mov
clc
cs
adc
cmp
mov
fbstp
lods
push
xchg
call
in
cmpsl
insb
fidivrl
jb
inc
mov
lret
pusha
push
and
rorl
out
lods
mov
aam
add
fsubl
cltd
ficoml
jnp
lret
imul
push
addr16
sbb
xor
lods
mov
or
lods
imul
push
lcall
cmp
hlt
aad
sti
xchg
je
mov
ds
jecxz
stos
ror
fisubs
or
sti
xor
iret
inc
sbb
or
ja
aaa
lea
cltd
shl
insb
shll
mov
clc
dec
pop
add
jmp
jbe
sub
les
stos
lods
shrl
xor
rorb
adc
mov
adc
cmp
cmp
jae
fwait
leave
mov
or
jge
stos
dec
adc
and
fwait
ret
xchg
dec
int
push
push
push
loopne
test
lock
stc
pop
jo
pop
test
lcall
pusha
inc
mov
mov
ficoms
fisubrs
test
sbbl
add
lea
cli
lret
xchg
imul
addb
jno
test
xchg
js
push
inc
cmp
sahf
mov
out
inc
xchg
repz
mov
inc
add
bound
daa
sbb
xor
add
inc
ja
or
push
adc
xor
out
cli
push
mov
arpl
add
mov
lods
scas
adc
stos
idiv
cli
pop
into
jmp
add
arpl
cmp
cltd
jo
mov
rolb
in
fbstp
mov
xchg
icebp
subb
mov
or
mov
xor
incb
shr
sbb
scas
jns
inc
cli
loop
lret
sbb
jae
xor
xor
ja
xchg
fistps
outsb
pop
push
shlb
pop
aaa
rcrl
icebp
cltd
outsb
sbb
lods
mov
rcr
adc
add
iret
cld
pop
shr
and
xor
movsb
xchg
push
ror
push
orl
pop
pop
outsl
inc
jb
xchg
mov
bound
cmp
aad
nop
imul
push
aad
nop
inc
adc
lods
cmp
test
sarl
into
push
xor
bound
scas
or
push
mov
rcrb
jae
or
or
fs
fdivrl
cmp
mov
jmp
inc
pop
adc
fdivs
sbb
aam
inc
loopne
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
orb
sbb
sbb
fimuls
subl
xlat
push
mov
test
sub
mov
mov
or
push
pop
lods
insl
push
outsl
inc
or
adc
sahf
jg
pop
pop
xchg
sub
cmp
and
int
inc
sbb
xor
shll
out
push
jae
or
xchg
dec
push
mov
mov
leave
out
fisttpl
sub
movsb
clc
mov
loope,pt
icebp
sub
and
cmp
dec
scas
in
and
ret
xchg
xchg
ror
clc
pop
loopne
hlt
jno
lea
shll
pop
push
add
pop
std
jmp
cmp
sahf
repnz
lret
pop
mov
mov
dec
test
pop
sub
cmp
or
mov
push
xchg
sub
popf
fidivrl
mov
mov
sarl
mov
pop
icebp
lcall
ret
insl
loope
cwtl
xlat
sub
mov
popf
cmp
mov
addr16
mov
xor
stc
es
imul
push
sbb
xor
pusha
lcall
inc
mov
adc
js
adc
inc
fstps
lods
lods
jo
mov
jg,pt
and
popa
push
test
jae
test
inc
lock
es
lds
or
dec
or
mov
cmpsl
or
int3
aad
xlat
stos
inc
mov
aam
scas
std
sub
leave
outsl
adc
jae
scas
outsb
mov
sub
ss
jo
add
xchg
rcrb
fstps
cmpl
dec
sub
push
aas
xor
add
jb
xor
int
outsb
and
lret
sbb
outsb
fnstenv
add
push
sub
pop
test
push
adc
sub
stos
fwait
jle
add
push
pushf
ja
mov
xor
test
pusha
int
int3
xchg
push
dec
idivl
cmpsl
insl
rcrb
fstpl
fimull
inc
add
xorl
jae
js
mov
adc
test
xchg
hlt
mov
insl
gs
jns
cmc
in
in
mov
and
jb
loopne
add
xchg
int3
push
pop
dec
cmpsl
mov
sub
out
inc
push
jbe
fistpll
xchg
mov
adc
cmpsl
mov
push
mov
jp
sub
outsl
insl
popf
pop
lcall
les
fwait
xchg
xchg
fwait
add
cmpsb
clc
cmp
add
clc
mov
or
xchg
out
push
xchg
lea
pop
add
rorl
shl
pusha
inc
clc
or
mov
or
sub
bound
mov
mov
dec
lahf
lds
std
dec
jne
mov
xchg
int
subl
mov
scas
arpl
sub
dec
cld
push
xor
sti
adc
cltd
arpl
cmp
imull
xor
mov
pop
popf
in
xchg
jno
decl
out
insb
or
rolb
add
mov
loop
sbb
mov
push
ljmp
mov
and
or
out
jbe
cs
fadds
jl
jne
sub
pop
std
jmp
jns
push
int
and
ret
loopne
dec
dec
sarb
clc
or
fsubrs
or
je
jmp
jmp
into
cmpb
leave
outsb
lods
xor
cmp
add
xchg
jae
lock
rorl
xchg
or
and
in
xchg
pop
xchg
scas
mov
popf
stos
dec
scas
arpl
ror
xchg
push
sbb
ss
das
cmpsb
xor
lcall
inc
add
cld
mov
xchg
addb
dec
loopne
xchg
add
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
fidivrs
or
sbb
outsb
adc
sbb
xchg
fimuls
hlt
movsb
pusha
in
notb
jns
pop
mov
and
sti
fldl
xchg
push
and
test
dec
clc
dec
push
jae
mov
push
jne
and
xor
fdivl
dec
xchg
dec
dec
hlt
loope
xchg
dec
inc
in
mul
repz
jge
dec
pop
mov
incb
jp
mov
push
mov
lcall
sub
sti
testb
idivb
sti
iret
xorl
sbb
mov
push
pop
mov
jb
or
lock
lods
jne
cwtl
insb
sarl
lock
adcl
sub
int
cwtl
insb
leave
les
adc
cmp
mov
push
jno
cs
mov
stos
and
push
xchg
mov
lods
and
adc
outsl
dec
cmp
ja
cli
testb
xor
sbb
cs
stc
movsl
cvttps2pi
aam
jp
pushf
shlb
inc
shl
aas
push
xchg
inc
lock
xchg
mov
hlt
insl
xor
cmpsb
or
lods
cmp
sub
jecxz
dec
jne
cs
stos
cs
mov
scas
sbb
in
stos
fldenv
jbe
sbb
sub
pushf
sbb
push
ss
movsb
xchg
and
in
mov
ret
xor
cwtl
lods
cmp
xchg
jbe
sub
add
aad
incl
push
in
outsb
add
fcoms
jge
stc
mov
dec
aas
adc
inc
flds
ficoml
scas
sahf
sti
insl
fld
ret
es
aad
lods
pop
addr16
xor
addr16
sti
jp
push
mov
shrl
sar
aad
mov
leave
loope
mov
inc
pop
mov
lds
sti
pop
adc
into
insl
pop
lahf
pop
jg
fwait
mov
imul
aaa
ss
pop
gs
mov
repz
mov
imul
pop
pop
mov
add
imul
adc
inc
xor
inc
shrl
add
add
jb
inc
mov
loope
xchg
repz
jl
xor
sbb
add
xchg
push
mov
sbb
push
mov
cmc
and
int
pushf
imul
xor
loop
dec
lret
add
dec
and
das
stc
fisubrs
sarb
out
mov
lods
xor
mov
dec
cmp
push
in
mov
mov
push
stc
icebp
ret
cmp
adc
xchg
dec
push
dec
mov
xchg
push
sbb
loope
mov
cmp
cmp
pop
dec
xor
loope
dec
in
or
add
lret
loopne
outsb
pusha
jmp
mov
lds
ljmp
mov
xchg
add
rorl
clc
mov
repz
cmp
add
mov
aad
out
into
inc
xor
lahf
inc
sbb
aam
push
push
fdiv
cmp
cmpsl
jae
cmc
ljmp
xor
jp
loope
push
fldt
push
mov
add
mov
inc
dec
push
inc
mov
sar
cmp
insl
cmp
fcmovu
lock
xor
cmp
mov
add
je
adc
nop
insb
sti
lods
out
sbb
pop
lea
dec
mov
mov
sub
inc
mov
fsubs
cmp
xchg
mov
rol
movsl
lds
mov
cmp
in
mov
or
pop
es
jae
mov
fstps
stos
jl
mov
mov
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
cli
sub
mov
outsb
adc
sbb
sbb
dec
cmp
lock
movb
add
hlt
inc
adc
adc
enter
test
jo
sub
outsl
js
push
sbb
jl
mov
ljmp
push
lods
pop
pusha
test
cmp
mov
mov
sub
jb
incb
insl
xchg
jle
inc
cwtl
clc
cmp
icebp
dec
fisttpll
cltd
fistps
xchg
jo
pop
jb
out
add
out
sahf
loopne
cld
sbb
addr16
mov
sbb
add
mov
cmp
adc
dec
lret
outsb
jp
lods
dec
ljmp
in
xor
shll
push
movsl
pop
in
adc
jecxz
jecxz
outsb
add
jecxz
xor
std
dec
insl
or
pop
addr16
cmpsl
mov
and
movsb
dec
fstp
daa
lods
or
dec
test
sbb
aaa
repz
sbb
nop
cmpsb
sbb
or
cmp
mov
xchg
or
mov
clc
repnz
lds
lods
sub
sbb
decb
push
add
repz
and
pop
loope
jecxz
or
push
in
sub
popf
ds
gs
aas
int3
mov
popf
lret
dec
dec
out
cs
mov
repnz
dec
sub
add
and
lret
es
scas
xor
call
in
movsl
daa
push
sub
fimull
and
rorb
nop
sti
mov
mov
clc
or
mov
cmpsl
loop
jo
out
mov
lcall
cmp
int3
in
andb
pop
jno
cmp
scas
push
xchg
jp
dec
adc
inc
dec
mov
mov
mov
orb
mov
mov
mov
addl
test
cmp
test
test
imul
pop
add
ljmp
mov
lea
xor
inc
cmp
imul
sub
lock
push
ret
mov
das
icebp
add
repz
inc
xchg
in
push
gs
loop
test
rcrl
scas
imul
push
add
mov
inc
lods
test
xor
rcll
xchg
mov
push
jbe
or
mov
sub
shll
add
loope
pop
aaa
fldcw
sbb
jle
mov
scas
outsb
test
pushf
mov
pusha
cmp
pop
andb
icebp
adc
adc
mov
xchg
sbb
jo
xlat
xor
in
xor
negb
jb
inc
jb
rol
test
fnstcw
dec
cmpsb
cwtl
inc
sub
outsl
adc
and
adc
out
lds
js
imul
std
xchg
xor
gs
pop
adc
jl
lods
pop
hlt
mov
or
nopl
sbb
push
negb
fsin
out
and
ljmp
mov
sub
xor
psubq
scas
faddl
xchg
iret
inc
or
enter
pop
push
subl
sarb
incl
int
in
mov
add
pusha
sub
mov
test
sbb
outsb
xor
clc
rcr
imul
adc
mov
mov
dec
cmp
push
fdivs
hlt
dec
outsl
aad
jbe
jns
sbb
dec
adc
mov
mov
inc
in
push
mov
popa
adc
mov
pop
and
lods
in
lods
loope
mov
test
pop
mov
mov
inc
cmc
repz
inc
loopne
dec
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
xor
jo
add
sbb
aas
jge
xor
insl
int3
and
outsl
and
xchg
out
repnz
push
sbb
ret
cwtl
mov
aaa
pop
cmpb
in
popl
xchg
dec
call
mov
mov
adc
inc
xchg
sbb
mov
sbb
push
subb
jnp
sbb
pop
shr
arpl
clc
hlt
mov
cmp
mov
inc
push
aas
jmp
xor
add
and
mov
mov
add
out
jecxz
cmp
adc
ljmp
data16
or
push
ds
out
insb
insb
mov
nop
js
call
jae
fadd
rorb
movsb
jbe
mov
jne
mov
sbb
stc
xor
stos
mov
xor
jmp
inc
xchg
mov
inc
jo
ror
cmp
mov
jb
xchg
xlat
sub
aad
cmpsb
sub
pop
pop
mov
orb
std
roll
test
jnp
sbb
add
popf
inc
dec
or
aaa
nop
clc
enter
xchg
sub
push
insl
aad
or
mov
jne
into
pop
insl
mov
jp
ds
mov
push
mov
pusha
hlt
mov
pop
test
repnz
pop
or
addr16
and
mov
lock
nop
jne
repnz
jl
cli
and
das
ss
andb
jl
mov
pop
pusha
jp
jns
lahf
cmp
sub
jmp
test
sub
ss
popf
xchg
call
jmp
hlt
push
lods
xchg
sti
in
xchg
push
dec
repz
int3
xor
test
ljmp
mov
in
stos
sbb
push
fwait
cmp
cmp
push
pop
fs
adc
int3
adc
mov
push
inc
xor
mov
xchg
fsubr
mov
shll
push
mov
lret
xchg
mov
push
rcll
push
mov
adc
dec
or
ret
decl
cld
push
inc
pusha
rcrl
out
cmp
movsb
aas
insl
ret
test
int3
inc
mov
sbb
inc
mov
jp
add
xchg
das
mov
test
enter
mov
mov
inc
sbb
stos
push
sahf
aaa
pop
loopne
or
mov
ss
lds
das
push
mov
cld
icebp
sub
cmp
xchg
or
mov
repnz
daa
mov
cmp
mov
jmp
or
cmc
cmp
adc
adc
hlt
mov
stos
or
lock
notl
je
inc
xchg
mov
decb
inc
or
je
push
movsl
lods
movsl
pushf
cmc
sbb
pop
mov
mov
lcall
in
lahf
cmp
dec
lret
out
mov
lret
push
out
xchg
push
insb
dec
inc
scas
lods
ror
push
add
fnstsw
sub
js
mov
pop
pop
push
add
jne
loopne
sub
xchg
out
loopne
sahf
and
xchg
aas
push
adc
push
pop
push
jne
adc
dec
mov
mov
push
shr
cmc
ret
in
mov
lock
xchg
in
dec
xchg
pop
adc
pop
in
lcall
sbb
jbe
sbb
test
ret
mov
xor
out
pop
cmp
add
push
xchg
xchg
add
jns
pop
or
mov
loopne
pop
pop
testl
sti
cmpsb
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
dec
out
mov
outsb
adc
sbb
js
sub
sbb
dec
xlat
fcoml
pop
leave
das
and
ret
lret
ret
jae
ljmp
test
andb
dec
mov
push
ret
adc
call
iret
mov
sub
lds
xor
lock
xchg
jl
and
into
push
adc
imul
inc
pop
test
jle
mov
jge
lcall
jnp
adc
test
out
mov
bswap
pushf
xchg
and
call
lcall
cltd
icebp
lds
xor
inc
xchg
test
sub
inc
in
sbb
cmp
push
mov
cmc
pop
bound
fs
in
ret
ja
push
mov
enter
in
lock
dec
pop
xchg
and
int
rcrb
dec
jbe
jbe
mov
mov
xlat
pop
inc
xchg
int3
ret
insb
cmpsl
inc
test
xchg
mov
add
cs
popa
imul
dec
out
movsb
xor
ja
std
in
fcoml
in
push
popf
jb
cmp
and
out
mov
mov
inc
xchg
js
xlat
ret
cwtl
mov
xchg
mov
jg
push
dec
jle
jmp
fadds
es
fstpl
or
inc
div
mov
pop
xor
mov
lret
insb
sbb
scas
movsl
adc
jle
neg
decb
push
jnp
jecxz
stos
xlat
jge
push
push
test
mov
pop
sub
mov
into
ja
cmp
lret
test
in
ficoms
ss
push
push
cwtl
or
adcl
xor
addb
test
leave
inc
push
mov
imul
cmp
fwait
mov
push
out
ds
rorb
push
sbb
mov
mov
or
pusha
lret
xlat
pop
repz
fsts
inc
adc
inc
je
mov
cmp
inc
clc
inc
scas
hlt
jmp
test
xchg
xor
popf
dec
and
aas
out
cltd
lret
jg
ss
mov
or
or
add
or
scas
stos
mov
mov
out
loopne
rorl
scas
popf
dec
sbb
dec
mov
fcomps
mov
or
pop
int3
fs
movsb
xor
and
jb
lret
sti
adc
ss
dec
aaa
aaa
mov
ficoms
pop
dec
push
sub
aam
dec
pop
lret
outsl
sbbb
mov
and
fwait
std
ja
repnz
push
rcrl
sub
leavew
sub
out
cmp
mov
xchg
outsb
pop
sbb
les
jb
ret
or
out
inc
mov
pop
jge
push
xchg
movsl
xor
pop
mov
nop
aas
pop
lea
jns
ljmp
fwait
into
arpl
lods
idivb
jbe
dec
inc
push
cmpsb
in
pop
fsts
les
fmull
daa
jbe
mov
dec
jae
mov
push
adcl
pop
subl
mov
cmp
mov
and
in
mov
mov
out
sbb
fwait
mov
loop
push
dec
mov
out
mov
pop
xchg
sub
or
rcr
fists
scas
lods
jns
std
sub
movaps
pushf
or
cld
fcomps
mov
pop
pop
movsl
int3
push
ljmp
mov
int3
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jle
cmc
sbb
outsb
adc
sbb
cmp
add
or
and
stc
sub
cmc
movsb
movsl
inc
adc
and
jmp
ja
xchg
mov
arpl
pop
in
add
add
test
insb
push
dec
jg
incb
jo
jl
inc
add
add
iret
jecxz
stos
in
lods
fcmovbe
inc
jo
in
cmp
shlb
enter
lcall
nop
jae
inc
popa
jbe
test
aaa
clc
popf
xor
dec
push
sahf
push
dec
mov
lods
fs
call
cli
ss
pop
rcr
aaa
cmp
scas
test
pop
ret
aam
add
fnstcw
les
cmpsb
call
xor
mov
xchg
mov
sub
add
pop
subb
addr16
mov
rcrl
jb
jg
pop
xor
popa
lret
cmp
clc
aam
xor
xchg
lret
ds
sub
orps
mov
sub
pop
add
add
xchg
je
adc
pushf
jae
push
mov
lods
lds
jae
je
loop
push
sub
imul
mov
mov
rcr
stc
or
inc
jo
fwait
xorl
test
orb
sti
lods
out
inc
les
insl
out
int
ss
xchg
shlb
clc
push
cmp
outsl
addr16
xor
bound
push
ficomps
jmp
or
cmp
aam
loopne
cmpsl
daa
add
mov
add
leave
test
scas
das
shrl
negl
fiadds
in
xor
sbb
sbbb
jge
outsl
mov
dec
sahf
shl
incb
pop
xor
test
dec
pop
xchg
mov
mov
or
cmp
clc
mov
in
cli
insb
bnd
loopne
cld
adc
fwait
lea
das
xor
xorb
insl
inc
jg
add
stos
xor
cwtl
cmp
loopne
sub
loop
aad
cld
cwtl
divb
iret
cmpsb
lock
pushf
pop
xor
outsb
repz
aaa
sub
inc
xor
and
dec
mov
out
js
add
sbb
stos
data16
xchg
fucomip
out
sbb
sbb
hlt
sahf
mov
mov
mov
lds
add
xchg
mov
inc
loopne
std
xchg
sub
sar
jno
daa
leave
mov
jge
adc
fdivrl
sub
lahf
or
je
dec
test
daa
jg
repz
mov
imul
mov
cmp
fsubrl
xchg
jns
iret
jne
icebp
inc
fwait
cwtl
cmp
sahf
push
mov
rcr
arpl
cmpsb
or
dec
int3
push
fwait
mov
mov
daa
ljmp
mov
jnp
ret
and
cld
bnd
add
test
out
or
into
insb
jnp
jb
les
dec
jle
inc
jbe
jae
lods
mov
icebp
push
mov
ret
emms
mov
leave
cmp
pop
push
je
xor
in
in
mov
xchg
mov
out
mov
dec
xchg
mov
fbstp
int
mov
pop
loop
adc
fistps
cltd
sti
xlat
push
fwait
pop
loop
orl
pop
mov
test
in
mov
je
rcll
sub
jmp
push
jns
jg
decb
repnz
cld
rclb
shlb
sbb
mov
out
rolb
and
repnz
stc
sbb
dec
xchg
call
xchg
pop
push
push
cmpb
pop
mov
mov
jle
imul
outsb
push
mov
loope
lods
pop
imul
andl
add
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
ljmp
push
je
daa
push
lods
in
add
scas
xor
xchg
in
shlb
aas
or
sub
mov
mov
sub
jae
pop
int
or
mov
push
in
push
cmpsb
push
jmp
out
divl
clc
add
or
loope
in
mov
cmpsb
mov
push
loope
scas
clc
loope
adc
jb
add
xor
insb
xorl
pop
rclb
leave
leave
test
test
fsubrl
pop
sbb
out
out
sti
lret
mov
xchg
mov
sbb
and
pop
ja
inc
cld
fldt
test
rorl
inc
mov
adc
mov
lcall
jo
addr16
icebp
mov
int3
xor
cld
bound
mov
xchg
mov
lods
out
jecxz
adc
dec
push
mov
cmpsb
repz
sub
inc
loop
into
addr16
cmpsb
cli
xchg
adc
test
sub
dec
and
cmp
pmaxub
push
dec
mov
sub
jle
xor
in
mov
jmp
inc
daa
aas
inc
in
sub
aam
in
in
inc
jbe
push
outsl
ret
fdiv
movq
daa
mov
stos
enter
fmuls
in
sub
mov
jbe
cltd
sub
mov
mov
dec
fnstsw
ret
mov
aas
or
cmp
adc
mov
xlat
mov
ljmp
inc
or
lea
mov
jge
add
push
inc
push
sub
repz
cmp
std
sbb
loop
enter
push
cmp
aad
in
push
movsl
mov
mov
mov
mov
jno
inc
add
mov
fisttps
xchg
xchg
add
xchg
mov
jmp
sub
loope
or
ret
out
mov
test
add
push
add
mov
fwait
sahf
loope
jne
outsb
bound
cmpsb
sbb
and
orb
jmp
jle
in
es
inc
aas
push
subb
mov
xor
xchg
shlb
loope
pushf
mov
cmpsb
lcall
mov
mov
outsb
loopne
fildl
xor
lea
cmp
fldl
mov
cld
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
and
call
sbb
inc
mov
xchg
ret
fisttps
push
aam
xor
into
pop
adc
mov
mov
sbb
mov
add
mov
push
mov
test
je
inc
aam
int
dec
fimull
mov
insl
mov
pushf
adc
xchg
mov
rcll
mov
mov
add
fiadds
jp
shl
out
pusha
fwait
aad
or
push
outsl
adc
xlat
jg
pop
xor
push
dec
cmp
dec
rep
rcll
mov
adc
shlb
jecxz
ljmp
xchg
sahf
es
xchg
jbe
leave
cmpsl
lds
inc
push
and
jno
rclb
sub
fcmovnb
dec
sbb
fwait
pop
cmp
push
in
lds
pop
addr16
ljmp
mov
xor
cmpsb
mov
xchg
sub
leave
or
mov
cwtl
fld1
out
ss
cli
lock
mov
mov
pop
shr
add
jbe
pop
add
push
cmp
mov
ss
les
and
push
movsb
sub
jb
push
pop
mov
or
test
jbe,pt
or
icebp
in
adc
inc
dec
cmp
add
mov
bswap
push
outsl
sub
stos
pop
mov
pushf
jle
fs
adc
clc
sub
sbb
adc
pop
fwait
or
ficompl
pop
rolb
mov
loop
xchg
jle
mov
inc
test
and
dec
imul
jne
pushf
or
bound
mov
fbstp
sub
dec
push
cwtl
aas
loop
inc
fadd
rcl
jmp
in
test
test
xor
out
ss
cmc
movsb
int
jl
sub
xor
xor
in
pop
mov
xchg
push
stc
lcall
aas
xchg
loope
mov
push
icebp
test
cli
insb
pop
mov
in
mov
insl
cmp
pop
ds
in
mov
xchg
ljmp
call
inc
fdiv
es
adc
pusha
cs
movsb
jp
cmp
stos
lea
inc
cld
xor
ja
pop
mov
test
cmpsb
mov
adc
leave
push
jo
test
pusha
add
test
jle
imul
jl
sbb
mov
mov
daa
stos
xor
xor
pop
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
rorl
sbb
adc
sbb
or
ret
popf
scas
fwait
adc
xchg
lea
insb
inc
hlt
push
adc
xor
and
fildll
sub
jns
pop
mov
cmp
mov
cmpsb
dec
add
push
cmp
mov
inc
std
sti
xlat
aad
scas
inc
into
cs
shr
and
or
mov
and
xchg
inc
iret
adc
push
leave
rcl
orb
mov
xor
incl
nop
pop
mov
xchg
pop
popa
dec
inc
and
scas
jns
mov
sub
pop
jne
out
push
adc
jge
xor
test
pusha
mov
mov
cld
mov
push
xchg
repz
lahf
pusha
pop
out
pop
arpl
inc
push
loop
jnp
sbb
stos
idivb
jns
dec
pop
add
lahf
cwtl
adc
jp
jb,pn
cmp
in
inc
inc
push
shlb
lret
mov
sbb
inc
jno
insl
mov
repz
out
push
xchg
mov
mov
cmc
xor
ljmp
out
cmpsl
inc
push
test
movsl
pushw
xchg
or
and
negb
stos
lcall
add
push
xchg
fcmove
inc
test
dec
xchg
mov
stc
inc
xor
jne
bound
pop
shll
int
clc
sub
mov
push
push
repnz
lret
jno
sub
push
fcmovb
mov
lock
or
notl
les
orb
std
imulb
jne
xchg
cmp
cltd
outsl
push
pop
ja
cltd
adc
scas
pop
fnstenv
orb
push
mov
mov
fs
rorb
nop
mov
movsb
js
test
je
jmp
jge
mov
and
inc
cmpsl
sti
rcrl
fwait
adc
xlat
cmp
enter
data16
sahf
rol
mov
adc
popf
push
stos
aad
repz
and
je
mov
cmp
and
dec
jge
jno
fcoms
addr16
cmpsb
add
lret
xor
mov
jae
jae
add
daa
add
lret
push
lds
jae
adc
stc
add
pop
xchg
sub
pop
ja
pop
dec
xor
movb
in
mov
mov
popf
fs
xor
flds
and
out
rolb
movzbl
test
gs
mov
loopne
shr
mov
fdivs
sbb
pop
into
sbb
jae
in
pop
arpl
adc
sbb
dec
inc
fistps
mov
sub
mov
push
mov
arpl
and
cli
push
jg
add
lret
jo
enter
or
dec
pop
insl
fisubrs
fcoml
mov
inc
fs
pop
mov
fwait
pop
movb
sub
cmp
pop
pop
push
jp
lret
sub
cmp
ja
lret
and
push
sbb
mov
cs
dec
inc
cltd
sub
jp
inc
adc
lcall
icebp
adcl
xor
xchg
pushf
xlat
pop
mov
sbb
or
lods
sbb
mov
push
aas
jno
push
shl
repz
mov
xlat
mov
cmp
sub
sub
cmc
cmp
mov
sti
vpcmpeqd
aad
mov
xor
sbb
aaa
sub
addl
jo
or
out
out
aam
push
dec
outsl
lods
cmp
and
mov
adc
fnsave
movsl
sahf
mov
lock
arpl
sub
pop
dec
lcall
xchg
gs
test
inc
cmp
insb
inc
xchg
inc
mov
fs
leave
iret
sub
and
in
xchg
sub
pop
pop
sbb
out
sahf
push
stos
popa
out
imul
sbb
lds
je
mov
into
insl
push
lea
or
adc
call
sbb
cmp
cmpsl
dec
ret
push
push
test
jecxz
cmpsl
neg
fdivrl
sahf
jg
push
xor
loopne
jae
aam
mov
testl
xchg
mov
mov
adc
mov
mov
inc
lods
sbb
lea
xor
push
inc
push
push
andb
or
xchg
mov
mov
loope
cmc
jp
fcomps
fstpt
add
sbbl
daa
xlat
imul
nop
fidivrs
push
dec
adc
lcall
mov
in
pop
shrb
xor
adcb
cmp
jl
cmp
and
arpl
jns
in
xchg
sub
mov
and
or
xor
sbb
cmp
enter
pusha
ret
lds
loopne
mov
call
and
xchg
in
inc
das
jecxz
sbb
jne
cmp
dec
stc
pusha
fcomps
pop
mov
sub
mov
xchg
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
mov
rclb
sbb
scas
clc
sbb
lods
add
mov
inc
push
test
nop
mov
pop
stos
pop
push
cmp
ljmp
add
add
or
inc
sbb
mov
lds
arpl
mov
mov
cmp
mov
mov
xchg
sti
negl
cmpsl
sbb
int3
sahf
jmp
cs
push
je
pop
and
mov
xchg
sarl
lahf
js
ljmp
ret
sub
loopne
and
aad
lea
movl
or
or
inc
in
xor
stos
add
fcom
aas
gs
fmull
fisubrl
and
leave
int3
jb
stos
std
inc
mov
adc
mov
insb
ret
push
scas
lret
stos
sub
xchg
or
in
jecxz
imul
jbe
xchg
repz
out
gs
dec
popa
sub
cs
cmpsb
and
cli
ja
adc
mov
aad
xlat
pop
xlat
fnstcw
adcl
xchg
mov
lret
cwtl
movsl
or
cmc
cmc
cmp
jle
xor
xchg
sahf
and
mov
dec
outsl
and
aam
and
scas
loopne
js
or
dec
pop
mov
mov
out
sbb
test
cmp
fistpl
sbb
jo
in
lods
xchg
inc
mov
pop
jbe
pop
and
mov
loop
test
fistpll
rolb
inc
cmp
mov
test
roll
mov
xor
imulb
sbb
sbb
icebp
mov
sub
sub
xchg
outsb
sub
mov
adc
stos
insl
loopne
inc
test
fs
cmp
cmc
scas
loope
lds
sub
inc
aam
mov
testb
hlt
adc
xor
adc
ffreep
loopne
mov
sbb
lock
sub
xorl
popf
es
cli
mov
cmc
xlat
mov
repnz
cmc
lcall
loope
repnz
gs
mov
aaa
dec
hlt
pop
xor
stos
in
shll
mov
cld
cmpsl
int
adc
xor
xchg
int
test
xchg
jb
dec
fiadds
push
mov
mov
lahf
insl
push
push
test
mov
inc
inc
push
inc
push
mov
mov
xchg
jl
popf
aam
pushf
xchg
push
repz
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
jne
mov
rclb
sbb
outsb
stos
clc
mov
mov
pop
cmc
lahf
inc
fwait
repz
xor
cmpsl
jno
push
ret
add
mov
out
mov
roll
xchg
or
xorb
mov
mov
je
and
lret
pop
sbb
xor
pop
jmp
mov
ljmp
loope
sbb
insb
jae
inc
pop
loope
xor
or
and
xor
sbb
pop
sub
arpl
lods
es
cmc
dec
cmpsb
daa
jno
ret
mov
mov
in
aas
in
sbb
push
ret
repnz
adc
and
or
xchg
sbb
sbb
push
ds
out
jge
stc
jb
cmpsb
adc
add
iret
xor
clc
enter
popl
jo
jle
sub
addr16
add
imulb
orl
adc
in
rcr
cmp
push
mov
jl
icebp
push
and
adc
pop
call
mov
pop
xlat
es
or
or
push
push
dec
xlat
jb
mov
jecxz
mov
adc
scas
jge
or
cmp
shll
leave
into
pushf
pushf
sbb
das
or
imul
call
jae
inc
push
push
cmp
xor
mov
stc
shrb
roll
call
jae
add
shl
jo
mov
or
fiaddl
sbb
lock
jge
xor
xchg
dec
mov
xchg
aam
pop
insb
dec
loopne
ror
addr16
inc
xorl
mov
out
lds
adc
mov
addr16
movsl
cli
pop
adc
fnstenv
push
inc
xor
ret
xchg
int
pusha
outsl
out
cltd
movsb
out
jbe
in
xchg
inc
idivb
jmp
adc
fmulp
lods
cmp
mov
sub
fldt
std
loope
imul
js
aas
lret
je
adc
popf
jbe
stos
inc
loope
and
fwait
push
xchg
mov
cmp
inc
xor
faddl
mov
xlat
push
jl
dec
jns
mov
mov
pop
and
inc
negl
enter
sub
mov
push
xchg
cli
popa
stos
ss
shll
sbbl
cli
push
sti
adcb
ja
xor
push
enter
jl
adcl
xor
pop
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
out
mov
rclb
sbb
es
filds
jecxz
push
mov
push
movsl
sub
sahf
hlt
mov
mov
jno
jp
out
jp
add
or
ss
pop
push
sbb
add
imul
cltd
sarl
adc
pusha
lahf
mov
adc
xor
and
sub
mov
or
pop
movswl
sbb
shlb
leave
enter
arpl
loopne
push
addb
or
in
sub
pop
push
cmp
or
pop
mov
out
dec
and
scas
dec
mov
xchg
mov
push
mov
or
add
lcall
test
pop
xchg
and
mov
push
repnz
stos
mov
int3
mov
in
iret
jecxz
or
daa
dec
push
in
mov
inc
addl
xlat
lods
or
sbb
stos
in
xor
int3
fisubs
insl
inc
ja
cli
xor
bound
xorps
nop
lods
cmpsb
dec
add
inc
lret
or
xlat
shlb
adc
pop
mov
faddl
out
icebp
dec
je
adc
test
push
fldl
or
sahf
lret
jle
mov
stos
jb
popf
in
xlat
or
or
mov
rcll
pop
sub
sub
repnz
mov
adc
pop
ret
cld
mov
les
mov
sbb
std
and
inc
cmp
adc
mov
iret
dec
sub
sahf
jbe
jmp
jnp
mov
clc
inc
aad
pop
hlt
ja
dec
inc
dec
jnp
or
jmp
loope
and
pop
pop
xor
into
jp
mov
pop
shrb
cld
insl
xchg
mov
pushf
mov
and
pop
mov
sahf
andl
sbb
or
dec
xor
jno
dec
lret
jmp
mov
lret
inc
enter
jp
pop
dec
out
mov
fidivrl
lods
mov
mov
cltd
call
lahf
push
cs
and
xchg
push
cmp
scas
int
cwtl
mov
jo
mov
pop
scas
mov
or
adc
leave
not
dec
jo
lea
cwtl
sbb
push
and
test
lock
cmpsl
push
fs
ffree
lret
leave
scas
in
push
js
mov
les
pop
dec
shrb
lock
add
jmp
sub
mov
inc
pop
and
leave
out
jle
pushf
outsl
mov
enter
adc
sbb
dec
jns
xchg
adcb
sahf
cmp
jecxz
lock
sbb
xor
mov
test
fbld
outsl
adc
lea
push
cmpsb
push
lcall
xor
xchg
inc
insb
sahf
sbb
adc
adcl
push
scas
jmp
mov
dec
mov
ds
fcomi
mov
js
mov
stos
mov
xchg
sub
data16
and
sbb
jns
push
loopne
lock
mov
aad
add
inc
fsubs
fildll
mov
sub
mov
or
inc
lods
or
test
movsl
sbb
icebp
movsb
sub
mov
mov
mov
mov
mov
bound
and
cmp
mov
icebp
daa
push
out
lahf
sti
aad
insb
js
mov
sub
sbb
pop
pop
scas
add
shr
lahf
mov
and
popl
in
xchg
xor
or
fldcw
xchg
insl
enter
cmp
movd
mov
stos
aad
cmc
lock
xor
mov
inc
mov
xchg
inc
ds
push
push
inc
rcrl
clc
xchg
xchg
and
sbb
call
lcall
in
outsl
sbb
inc
lahf
pusha
xor
decb
xlat
sti
pusha
fistps
add
mov
jmp
iret
inc
inc
loop
dec
mov
xchg
inc
dec
pop
orl
mul
repz
pop
cs
pushl
sub
movaps
icebp
cmc
fwait
cmp
pushf
jge
lcall
or
cmp
hlt
cwtl
and
mov
pushf
mov
push
dec
fmulp
in
adc
xor
xor
pop
and
dec
repnz
pop
inc
ja,pt
dec
cmp
sti
mov
mov
inc
mov
push
pop
sarl
ret
add
mov
bound
jge
mov
adc
jp
mov
adc
pop
sti
xor
lcall
insb
lcall
mov
and
cmpsl
mov
test
outsl
jl
fisttpll
push
rorl
push
mov
nop
pop
push
cmp
insl
aaa
jecxz
daa
scas
fcoml
mov
dec
dec
push
lock
or
hlt
and
add
xor
loop
add
lea
mov
or
loope
pop
lcall
insl
add
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
jle
loopne
imul
or
out
jno
outsb
sti
mov
pop
or
pop
mov
fs
dec
test
loopne
test
push
pushf
adc
jp
sahf
dec
xchg
lock
popf
movsl
stc
xlat
cmp
stc
fsubl
rcl
pop
mov
movsb
xchg
xor
sbb
cmpl
cs
ljmp
pop
inc
cwtl
popa
mov
cmp
das
loop
push
inc
dec
ljmp
sbb
sbb
mov
das
push
pop
mov
scas
mov
movsl
sub
out
cltd
xchg
imul
test
cmc
inc
imul
xchg
or
dec
pop
repz
clc
inc
mov
pop
hlt
jmp
cmp
and
mov
mov
push
cmp
aaa
lahf
or
inc
fs
aam
cli
mov
lock
lahf
xchg
std
cs
and
daa
mov
bound
push
xchg
jecxz
mov
fidivl
in
or
rcr
push
jae
orl
add
xor
mov
mov
insb
in
ja
sub
jnp
and
pop
jle
data16
mul
or
jno
jbe
shrl
scas
inc
push
sbb
push
addl
xor
jp
lret
leave
shlb
push
mulb
dec
lcall
or
add
test
notb
xor
jnp
fstp
lods
pop
cmp
push
cs
fistpll
test
movsb
imul
cmp
cli
stos
lea
movsl
jns
dec
in
xchg
mov
sbb
xor
jae
cltd
test
gs
aas
push
xor
inc
xchg
test
cmp
test
and
mov
negl
int3
mov
xchg
gs
push
and
testl
mov
aad
sub
or
imulb
xchg
cmpsb
test
mov
xchg
mov
bound
in
lods
or
lcall
pop
ljmp
rolb
rcrb
and
les
pop
dec
pushf
imul
lcall
cmp
out
enter
jbe
lock
mov
add
mov
sahf
in
sub
fisttpll
dec
pop
pop
add
hlt
xchg
jae
mov
outsb
and
ss
out
pop
dec
pop
imull
or
push
sarl
xchg
inc
dec
pop
nop
insb
std
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
jns
xor
sbb
adc
sbb
bnd
imul
test
xchg
dec
mov
aaa
dec
dec
mov
mov
lcall
jne
xchg
out
xor
mov
or
std
in
inc
pop
xor
inc
repnz
jge
enter
mov
gs
nop
loop
dec
mov
ret
out
stos
push
xor
addr16
mov
pop
rolb
or
aam
xor
or
jg
inc
adc
adc
inc
arpl
or
ret
xor
subb
mov
xchg
sbb
pop
push
and
loopne
ret
jns
je
mov
push
ljmp
mov
es
cwtl
push
xchg
inc
bound
xlat
mov
loope
shlb
lret
push
xor
aam
mov
scas
cli
sub
jne
sbb
dec
and
push
push
loopne
inc
and
jl
lods
inc
sub
out
or
ret
jne
add
xor
mov
cmp
inc
daa
lahf
push
je
rclb
xchg
adc
je
pop
or
aas
cltd
adc
lods
loopne
movsb
outsb
pop
loopne
mov
cli
dec
lret
jbe
mov
fs
mov
sub
cmp
dec
sub
jbe
movsl
pop
testb
xor
adc
xor
or
in
sbb
ret
inc
inc
pop
lahf
mov
jge
add
jmp
xchg
jle
rcrb
test
stos
cmp
push
dec
mov
sbb
mov
or
sbb
push
or
shlb
adc
in
ds
xchg
jnp
aam
in
pusha
push
ss
mov
xor
out
sbb
ds
mov
dec
sub
mov
push
popa
mov
push
mov
mov
inc
and
pop
call
cmpsl
xor
stc
mov
addr16
pop
arpl
hlt
pop
add
aas
rolb
inc
shll
sbb
aaa
or
hlt
xchg
sub
jns
inc
loop
fcoml
xchg
stc
push
ja
inc
js
in
inc
push
jge
shl
gs
cmp
pop
and
dec
mov
fimuls
sbb
or
aam
ret
bound
and
frstor
in
scas
cmp
dec
push
xor
cmp
lock
mov
mov
pop
gs
repnz
mov
push
inc
leave
add
test
scas
mov
jnp
push
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
cs
mov
rclb
sbb
push
fistpll
xor
add
ja
test
addr16
xchg
ret
sub
sub
sarb
pusha
jl
mov
lret
mov
fistpll
pusha
lcall
subl
jg
in
xchg
sub
clc
cmpsb
add
sub
cli
es
sub
xor
pop
pop
rolb
dec
mov
push
lret
push
rorb
clc
cmp
sbb
fldz
adc
nop
cmp
adc
mov
and
shll
sbbb
xchg
adc
and
lds
popa
mull
arpl
mov
jbe
mov
stc
inc
stos
pop
mov
clc
xchg
mov
clc
and
ror
pop
jle
inc
fimuls
in
and
lahf
jno
sbb
shlb
push
adc
jl
cmpsl
sbb
aas
jmp
jae
sub
iret
ljmp
jle
xor
adc
xchg
out
int3
jnp
push
xor
inc
mov
movsl
hlt
cmp
clc
sub
jno
fcomps
test
dec
cs
popa
arpl
bound
insb
rdpmc
test
dec
mov
jae
mov
aaa
cmp
dec
fldt
stos
arpl
pop
mov
cmp
movsl
mov
into
cmpsb
ja
jns
nop
push
imul
iret
pop
shlb
pushf
inc
adc
add
lahf
jnp
jb
es
xchg
sbb
jno
cmp
and
jl
outsb
cli
mov
daa
ljmp
sbb
daa
jne
or
xor
sti
imul
repnz
mov
shr
mov
int
cld
and
ret
inc
and
inc
or
mov
outsl
xor
adc
lahf
sbbb
mov
xchg
xchg
xchg
mov
push
mov
insl
mov
jbe
and
add
push
repnz
shr
pop
push
inc
sbb
leave
and
fisttps
and
orl
in
jmp
mov
scas
sarb
insb
popf
mov
or
test
mov
xchg
mov
pop
movsb
pushf
push
mov
push
and
rcrb
call
dec
sbbl
stos
xchg
xchg
out
outsl
adc
imul
out
inc
xor
cwtl
ret
mov
pop
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
cmp
jle
mov
sbb
adc
sbb
lret
idivl
cld
rcrl
jg
mov
fwait
inc
cmpsb
pop
jecxz
popf
cli
stos
jmp
sub
lods
rol
sbb
push
and
and
xor
rclb
pcmpgtd
mov
xchg
shrb
sub
pop
pop
pop
dec
jne
fidivl
push
out
or
push
jmp
pop
pushf
sub
or
pop
inc
out
push
cmc
stc
push
rorl
lret
cmp
mov
xlat
sbb
inc
les
addl
push
sbb
push
insl
fcmovbe
mov
inc
jmp
stos
fsubrl
jns
outsl
xchg
ret
stos
scas
movsl
fisttpll
outsb
in
dec
mov
push
fidivs
insb
push
push
fisttpll
dec
idivb
arpl
cmp
pusha
xor
adc
lret
jle
pop
sti
mov
test
aas
push
mov
fldenv
loopne
ljmp
icebp
sahf
lock
mov
or
mov
push
jle
push
pushf
pop
cmp
pop
xchg
xchg
mov
imul
mov
psllq
mov
push
arpl
repnz
out
and
adc
xor
sbb
sbb
mov
dec
addr16
aad
mov
push
pop
jle
push
cmc
push
xor
jmp
cmp
cmp
lahf
les
imul
sub
scas
xor
fwait
pop
mov
les
add
es
cltd
imul
das
lods
jmp
dec
add
push
jp
arpl
inc
hlt
sub
pop
mov
sbb
imul
cld
xlat
bound
cli
loopne
mov
mov
aam
leave
aad
imul
adc
adc
adcl
mov
lods
sub
shlb
inc
aas
popa
les
psllw
mov
sbb
xor
pop
inc
cwtl
cmp
call
mov
test
rolb
xchg
push
mov
or
jge
mov
js
dec
shlb
lahf
imul
lock
cmc
mov
push
js
mov
addr16
pushf
sbb
repnz
pop
fcoml
mov
mov
outsb
sub
fwait
repnz
or
mov
xchg
fisubs
pusha
adc
jge
cmp
or
lcall
mov
mov
inc
lcall
jge
jo
sbb
rclb
sbb
test
pop
bound
xor
data16
out
cs
repz
xchg
insb
jg
sahf
in
outsb
cmp
dec
inc
cwtl
in
inc
mov
jb
sti
dec
mulb
add
inc
jns
sbb
out
xor
and
fisttpl
push
add
dec
ret
inc
cs
loop
cs
cmp
xchg
or
mov
testb
in
and
jecxz
lock
dec
test
imul
das
and
fisttpll
stc
cld
out
cs
aas
sub
xor
mov
lahf
dec
into
xchg
push
cmp
cmpsb
fs
sbb
or
test
push
lret
gs
sbb
ja
adc
cld
xchg
shrl
decl
xlat
xchg
jb
sarb
dec
sbb
cmp
push
xor
adc
adc
pop
dec
sahf
mov
mov
loop
cmp
inc
idivb
notb
je
push
jno
or
imul
enter
pusha
lret
pop
push
push
in
xchg
cmp
jmp
gs
sbb
inc
test
xor
xchg
jmp
out
sub
cmp
imul
sub
subb
out
fldenv
pop
mov
enter
dec
shlb
jmp
xor
add
fidivl
mov
sub
cmp
fcmovnbe
test
imul
mov
inc
shl
repz
cmp
sahf
cwtl
cli
add
out
xchg
lret
pop
mov
ret
ficompl
call
out
bound
push
enter
out
cmp
lea
sub
mov
add
adc
fwait
sti
xor
daa
or
cmc
push
dec
cli
mov
dec
pop
sub
scas
mov
sub
loope
in
imul
mov
push
inc
pop
sti
clc
orl
cmpsl
pop
in
dec
into
fsubrs
push
inc
fisttps
mov
roll
or
sub
mov
jmp
scas
add
loopne
xor
test
jbe
out
cwtl
enter
mov
xlat
mov
shr
lods
add
push
mov
outsb
orb
lahf
mov
stc
xchg
int3
stos
sahf
cmp
lret
leave
adc
pop
dec
mov
out
loope
insl
fldz
mov
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
dec
lea
test
sbb
lahf
fildll
shlb
cmp
jg
cmp
lcall
dec
dec
cmp
mov
les
mov
adc
shlb
decl
cmpsl
fs
mov
dec
mov
and
adc
cmpsb
sbb
and
sbb
mov
dec
cmp
and
clc
add
xchg
cmp
jle
sub
in
scas
leave
out
sub
jb
outsl
or
adc
inc
in
aaa
sub
cmpsl
lock
inc
pop
nop
mov
and
or
cmpsl
push
jno
add
pop
xchg
mov
mov
mov
adc
mov
ljmp
mov
mov
push
jg
sbb
mov
dec
dec
xor
lret
mov
xchg
lcall
sbb
subb
mov
ficoms
push
xor
fistps
test
add
test
dec
sub
sub
jecxz
add
push
xor
cmp
jno
dec
dec
mov
nop
cmp
push
ljmp
mov
aaa
scas
xchg
fwait
xchg
fidivrs
in
hlt
mov
xchg
scas
lods
jb
push
ds
xchg
adcl
adc
xor
mov
ror
xchg
mov
xchg
jl
and
and
and
xor
int3
out
mov
fimuls
fstps
adcl
mov
xchg
repz
mov
out
adc
xchg
push
jb
loope
cmp
jne
out
xchg
cmc
mov
lds
inc
and
ja
imul
mov
incl
cmp
sbb
lods
rolb
fimuls
rcrl
cltd
adc
cld
pcmpgtd
dec
push
lock
lods
pop
or
pop
add
push
adc
mov
into
cwtl
mov
test
aam
scas
pop
fldt
xor
xlat
or
das
push
push
xchg
in
bound
inc
clc
cltd
dec
cmp
xchg
clc
and
pop
insl
pop
popf
fs
pop
mov
cmp
cs
sub
pop
int
ret
mov
mov
js
rorb
out
repnz
lret
adc
xchg
add
into
call
adc
mov
mov
insb
xlat
xor
das
pop
adc
in
mov
dec
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
rcrl
xor
imul
cli
nop
sbb
aas
or
cltd
test
xchg
xchg
dec
pop
jg
pop
cmp
ljmp
insl
es
cmp
lcall
mov
std
shrb
sub
or
add
mov
insb
ljmp
ss
and
xorb
mov
loope
dec
push
push
pop
out
out
push
push
inc
lahf
aas
iret
jge
repz
add
push
scas
lds
fsubrl
aas
inc
stc
sub
lcall
cmp
mov
push
mov
popf
cmp
test
xchg
dec
lods
adc
int3
adc
repnz
xchg
fisubs
stos
cmpsl
out
clc
bound
dec
cmp
push
pusha
insl
pop
mov
adc
adc
shll
push
sbb
pusha
sub
adc
push
dec
int
outsl
pop
sbb
pop
lds
stc
outsb
add
mov
jg
dec
in
icebp
ret
lret
popf
mov
sub
push
js
cmp
jg
push
inc
jno
insb
sti
jmp
repz
cld
pop
leave
push
inc
imul
outsb
dec
scas
in
adc
cwtl
testb
xlat
in
ja
jae
das
pusha
ret
add
subb
loope
leave
cmpsb
mov
push
out
add
adc
add
mov
xlat
dec
loope
data16
pop
ja
inc
rorl
lods
ret
push
shll
dec
mov
dec
or
adc
pop
mov
jmp
out
icebp
push
pop
aaa
ret
stc
xchg
jp
lahf
or
pushf
or
daa
sti
adc
pop
and
int3
cmp
fsts
push
push
inc
test
or
lcall
sub
xchg
sub
stos
jp
rclb
jnp
rorl
ljmp
cmp
sahf
inc
call
xlat
stos
pushf
fisttps
add
stos
pop
int3
sti
push
dec
gs
inc
pop
pop
mov
cmp
adc
negl
lcall
jno
cmpsl
sbb
lock
sub
and
cmp
or
into
inc
jne
addl
and
dec
sub
fsubrs
sbb
in
movsl
fbstp
sub
cwtl
sahf
in
scas
outsb
rcll
add
lods
cmpsl
lds
cmpl
xor
inc
add
adc
fists
test
inc
mov
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
mov
sahf
sbb
mov
add
cmpsl
test
orl
mov
xchg
pusha
and
aaa
pop
xchg
xchg
lret
cmovno
dec
pop
cmp
or
or
inc
out
mov
les
stos
out
ja,pn
mov
out
mov
das
and
and
lret
inc
sbb
int3
mov
lock
ljmp
xchg
xorl
or
mov
mov
int3
ds
pop
jnp
pop
mov
popa
mov
incl
int3
mov
adc
xchg
arpl
lods
rorl
lds
push
roll
icebp
insl
jae
adc
test
add
mov
aad
cli
sbb
mov
xchg
leave
xor
dec
loope
fwait
daa
jg
movsb
sbb
dec
inc
adc
cmpsl
into
loope
dec
cli
cmp
jb
out
xchg
pop
xor
nop
imul
cltd
loopne
iret
aad
loope
or
xchg
cmp
push
adc
dec
iret
ds
sbb
jp
call
jne
andb
adc
cmc
sbb
loopne
iret
cmp
aas
jo
stos
add
in
mov
das
nop
sbb
les
pop
out
add
push
scas
stc
js
inc
adc
xchg
repnz
movsb
rorl
clc
pop
push
mov
rorb
and
and
or
jp
lcall
sub
ja
cmp
mov
fcomi
insl
addr16
test
sbb
data16
movsb
cwtl
jae
jne
cmp
cmp
jbe
mov
pop
sub
xchg
cmp
out
in
dec
les
rcrl
sti
adc
xor
sub
push
jmp
mov
test
sti
cmp
sub
pop
mov
ljmp
jmp
popf
push
aaa
jge
jnp,pn
cs
cmpsb
addr16
iret
fistpll
jge
lods
loop
cmp
adc
into
out
mov
std
aam
lahf
cmc
adc
lods
fcoms
ljmp
push
popf
in
sub
test
jg
hlt
xor
enter
jl
ss
xor
popa
popf
and
mov
mov
cmpsb
jo
push
inc
je
ljmp
cmp
in
sub
lods
outsb
jle
fsubl
pop
mov
in
popf
push
int3
inc
je
lret
lahf
loope
daa
add
inc
out
std
add
fidivrl
stc
jl
arpl
les
sbb
add
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
jbe
push
cwtl
sbb
mov
push
pushf
mov
icebp
push
outsb
mov
ret
cltd
pop
xor
inc
enter
popw
sub
cli
jl
fnstenv
fcmovnb
or
test
test
decb
pop
adc
lahf
cmp
je
and
or
or
lahf
mov
or
subl
push
cmp
stc
add
jnp
xor
pop
fs
cmpsl
add
jb
jp
xor
sbb
cmpb
nop
jns
jmp
xor
cmp
xchg
mov
ljmp
jo
insb
fwait
inc
adc
jp
pop
int
push
or
cmp
jb
mov
repz
xchg
inc
add
cmp
shll
gs
popa
jl
pop
add
shr
enter
popf
xor
ret
cltd
jle
sub
arpl
das
jns
mov
sub
xchg
add
jo
enter
ficoms
addr16
pop
cmp
ja
xlat
sub
out
das
repnz
or
in
aam
fdivrl
daa
mov
jp
add
xchg
push
fldt
push
xor
mull
pop
mov
or
repz
cmc
or
int
and
je
out
sub
mov
es
std
sbb
xor
cltd
shrb
dec
adc
lret
in
mov
aad
daa
jge
test
movsb
jns
dec
mull
dec
adc
push
xor
decl
push
int3
sbb
dec
add
in
mov
std
outsb
mov
cs
mov
leave
inc
mov
ja
sub
cld
and
inc
sti
call
loope
popa
out
jo
mov
lds
mov
add
ds
in
dec
fnstenv
mov
loopne
xchg
aas
leave
push
mov
sbb
push
jb
cmp
adc
les
push
mov
push
jl
and
fidivl
data16
aaa
gs
add
push
sub
add
in
cmp
adcb
adc
mov
enter
clc
das
in
loope
jb
outsl
dec
and
imul
cmc
xor
sbb
arpl
sub
pop
dec
in
dec
faddl
std
pop
enter
xor
stc
xor
pop
cmp
add
lea
dec
sarb
inc
mov
imul
daa
je
stos
inc
or
xor
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
mov
cmp
xchg
sbb
mov
push
lock
enter
jg
mov
or
adc
mov
dec
jnp
bound
sahf
loop
push
and
cmp
lock
cmc
loopne
lds
jp
fdivl
ds
lds
js
jl
movsb
mov
hlt
testb
jmp
cwtl
and
lcall
cmpsb
mov
adcb
lods
mov
int3
sub
inc
dec
inc
dec
iret
fidivs
pushl
stos
sbb
mov
or
fs
sbb
fs
or
cmp
push
sbb
inc
push
xor
stos
xor
repnz
stos
daa
leave
push
aas
scas
lcall
cmpsb
xchg
xchg
mov
dec
sub
repnz
loope
add
pop
or
fbld
sub
mov
jnp
xlat
inc
mov
xor
int3
mov
stos
fs
add
movsb
ficompl
add
movsb
fdivs
ja
jle
in
mov
cs
aas
es
pop
pop
sahf
cld
jo
jle
push
flds
stos
test
mov
jecxz
lea
add
adc
or
mov
movsb
cmp
xchg
mov
cwtl
lret
sbb
sub
mov
bound
rorl
pop
fcoml
push
fistps
sub
test
adc
stos
inc
mull
jge
aad
push
fisttpll
stos
and
ds
cmp
inc
inc
add
push
stc
mov
pop
imul
sub
xorb
shll
daa
mov
cmpsb
pop
or
jg
in
push
scas
cmp
cmp
ffree
mov
push
jge
jle
fldt
aad
test
and
cmp
loope
xchg
xchg
and
loope
and
fdivl
adc
jns
jbe
mov
loop
push
mov
sti
andb
mov
notb
jne
xchg
es
jne
mov
inc
xchg
inc
jp
fwait
inc
mov
pop
add
movsb
popl
xchg
push
fsts
fs
int
sbb
test
in
pop
sbb
jb
push
in
add
inc
xor
cmc
xchg
xor
cltd
or
push
outsb
fimull
push
iret
int3
cld
or
sub
mov
adc
inc
lock
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
jno
dec
push
mov
sbb
jnp
es
fldenv
iret
pusha
je
sbb
mov
in
sbb
mov
sbb
insb
or
hlt
cmc
loopne
lods
sbb
cmp
xchg
lea
pop
nop
adc
mov
rcll
ljmp
xchg
lret
sbb
loop
mov
xchg
out
in
sub
lds
sar
in
jp
push
jmp
add
test
dec
jb
clc
and
add
lret
inc
jae
loop
xor
add
mov
ss
xor
lcall
in
ret
pop
pop
pop
lret
mov
insb
and
cmp
and
mov
jl
into
movsl
push
leave
jbe
arpl
scas
add
or
daa
jbe
push
jno
adc
loope
imul
dec
pushf
ds
inc
repz
imul
enter
int3
push
xor
addb
sbb
jl
fnstcw
divb
or
lock
aaa
xchg
mov
xor
inc
mov
sub
pop
mov
push
ficoms
mov
out
mov
mov
xor
or
and
push
gs
dec
dec
mov
movsb
mov
mov
js
mov
lods
jmp
pop
sub
loopne
push
add
popa
das
cltd
add
mov
fcmovb
movsl
pop
and
in
aam
fmul
imul
xor
stos
syscall
aam
pusha
mov
pop
cmpsb
out
lret
fsubr
dec
jge
push
ljmp
sarl
lds
mov
in
mov
lret
xor
push
int
aam
xchg
lret
pop
jge
lcall
jg
jno
cmp
and
dec
loopne
mov
cmp
enter
mov
imul
les
or
xchg
shrl
push
sarl
or
movsb
pop
mov
call
mov
scas
mov
sahf
xor
jae
mov
and
jp
je
jle
scas
mov
int3
push
or
dec
cmc
xchg
add
push
jbe
jge
ror
hlt
and
add
jmp
mov
mov
push
scas
icebp
xor
fwait
push
mov
jp
and
xchg
mov
cmp
fdivrl
push
xor
decb
std
pop
dec
in
pop
inc
shlb
movsb
and
es
hlt
and
enter
cmpsb
push
mov
add
sub
lds
fwait
pop
aas
xchg
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
jo
test
cmpsb
test
mov
shl
out
loop
xchg
mov
mov
loop
call
cmpsl
mov
mov
insl
adc
movsb
ficomps
call
or
or
jmp
out
mov
insb
dec
inc
inc
and
xor
jo
clc
arpl
sbb
fsubl
jle
xor
mov
adc
inc
pop
notl
mov
push
xor
addb
lahf
add
and
inc
sub
mov
rcrb
test
int3
dec
xor
out
movsb
dec
sub
into
mov
outsl
add
xor
or
push
pop
or
and
and
xchg
in
in
pop
iret
shl
push
add
jle
cmp
cmpsl
les
jnp
lret
cs
push
sub
xchg
sbbb
in
adc
adc
cwtl
cmp
xlat
push
inc
insb
inc
iret
call
in
shll
pop
or
jno
xchg
pusha
xor
lds
ss
mov
mov
lahf
xor
pop
fistpll
mov
jmp
jo
push
int3
enter
gs
or
inc
popf
add
push
shll
or
xor
inc
and
test
popf
push
push
out
jae
test
sub
ficomps
cmp
pop
stc
arpl
mov
aas
and
das
decb
ret
movsb
imul
cmp
fistl
cmp
fs
pop
push
sbb
sarl
sbb
das
jnp
xchg
into
lock
push
lret
jae
rol
cmp
sahf
mov
sub
aaa
sarb
push
lods
push
roll
in
mov
fst
dec
sub
arpl
arpl
mov
or
mov
cmp
dec
frstor
inc
mov
popf
out
ja
hlt
push
xor
lcall
insb
cwtl
lea
rcr
dec
sarl
scas
jmp
push
xchg
mov
fs
jb
mov
mov
xor
movsl
xor
ret
clc
aad
fidivs
pop
mov
adc
add
cld
ja
adc
pushf
jae
es
adc
add
std
push
jne
add
cltd
mov
mov
jl
fwait
push
jle
aad
dec
fdiv
adc
and
test
jmp
mov
mov
fistl
jmp
mov
mov
pop
add
mov
movl
mov
mov
sub
jmp
test
mov
push
outsb
popa
jo
sbbb
lcall
cs
loopne
shrb
aaa
lcall
adc
je
and
add
in
adc
mov
inc
xchg
cwtl
ficoml
dec
or
idiv
lret
push
pusha
testb
daa
das
loop
lods
jle
inc
mov
fstps
sub
out
mov
call
popf
cmovbe
ret
lahf
jg
cmp
inc
int3
cwtl
jnp
fwait
xor
xor
shr
fstps
jo
dec
dec
xor
dec
insl
xor
ret
mov
sbb
ret
test
lods
or
insb
divl
lock
and
xchg
jmp
fsub
sub
addr16
arpl
icebp
stos
lock
enter
mov
and
test
cwtl
cmpsl
jg
pop
mov
push
stc
add
mov
jp
ja
mov
std
mov
or
mov
sub
repz
lret
cmpsl
adc
aam
xchg
push
mov
daa
xchg
cli
aam
ja
cmp
int
adc
shll
in
push
pop
jnp
xchg
test
pop
imul
mov
rorb
stos
mov
jge
xchg
roll
adc
xchg
lods
sbb
lret
mov
sbb
aas
xchg
outsb
test
out
jecxz
in
rorl
xor
adc
jbe
dec
je
sub
jl
shll
jp
idivl
dec
int3
popf
add
out
hlt
mov
fnsave
insb
lds
int3
movsl
sub
mov
repnz
sti
and
dec
addb
idivb
push
js
leave
mov
scas
xor
sahf
enter
icebp
jecxz
xor
arpl
and
jmp
fdivrl
icebp
idivb
lret
icebp
mov
stos
out
incb
mov
cmp
leave
mov
xlat
or
rorl
rcll
pushf
int3
addl
push
dec
cmp
dec
data16
push
adcl
push
dec
sub
out
mov
xlat
add
cwtl
jecxz
fwait
inc
testb
pop
insl
and
push
dec
mov
xchg
inc
adc
mov
out
xchg
mov
push
mov
mov
jmp
mov
lret
mov
sbb
testl
adc
jl
mov
mov
and
or
push
loop
call
inc
jge
pop
popf
xchg
push
xchg
dec
testl
cmp
and
mov
lret
cli
sub
cld
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
sbb
sbb
jno
sbb
scas
dec
sub
into
pop
xlat
stos
dec
jae
mov
ljmp
js
in
xor
jecxz
add
cmp
xlat
cwtl
lret
lock
mov
cli
mov
xlat
dec
arpl
xor
pop
popf
xor
sbb
jno
push
adc
in
filds
subl
mov
sub
cmp
jb
mov
and
je
xor
outsl
adc
lods
subl
loop
mov
jg
pushf
mov
sti
sub
outsl
cwtl
push
lds
out
pop
add
jp
icebp
or
pop
lret
out
clc
lods
pop
call
mov
cmp
mov
int
aas
mov
sub
and
inc
movaps
fwait
pop
pop
lret
rol
mov
mov
stos
mov
sbb
sub
dec
movsl
aad
mov
iret
jbe
ljmp
pop
into
inc
test
xchg
jns
mov
bound
push
adc
ret
andb
mov
mov
dec
jp
movsb
scas
in
out
sub
cmp
fsubs
sbb
sub
cli
sti
rcrb
pop
add
push
imull
sbb
into
fstpt
cmovno
andb
test
inc
pop
ja
mov
and
inc
xor
mov
jb
mov
lret
xor
mov
out
pop
repz
dec
aaa
inc
lea
cmpsl
out
pop
add
mov
mov
add
mov
or
push
lahf
jo
sub
lret
pop
call
fdivs
dec
sbb
adc
loopne
stos
mov
test
loop
jl
adc
jne
add
sub
or
mov
into
pop
les
les
sub
mov
mov
mov
ret
dec
hlt
mov
les
pop
cmovbe
cmp
out
je
es
add
data16
pushf
cmc
xchg
ja
out
imul
popf
mov
pusha
aad
mov
js
fcomps
mov
jbe
sub
push
or
inc
out
das
loopne
sbb
inc
test
lret
scas
nop
xor
push
push
sbb
push
lret
xor
aad
es
jmp
add
test
dec
sbb
add
test
pushl
test
decl
test
push
adc
add
test
ljmp
data16
add
inc
clc
shrb
add
jle
add
jo
add
dec
sub
sub
test
sbb
jno
sbb
sub
add
dec
mov
pushf
cmp
rcll
sbb
mov
mov
dec
mov
xchg
out
add
outsb
xor
push
mov
daa
mov
and
adc
and
into
sarb
push
aam
mov
mov
gs
mov
shrl
and
cmp
push
mov
hlt
cld
mov
lahf
fcompl
sti
dec
mov
push
mov
xchg
gs
or
loop
iret
mov
add
dec
push
mov
add
push
cltd
and
xor
lds
cs
sbb
cli
pop
and
insl
test
rcrb
mov
pop
rclb
xor
leave
inc
dec
push
shr
mov
add
imul
int
jle
push
insb
hlt
dec
jg
cmp
fisubl
dec
adc
jp
and
scas
fsub
push
jecxz
mov
xchg
push
stc
les
cltd
call
mov
scas
pop
mov
mov
ror
push
jo
push
jo
in
sbb
clc
iret
test
enter
xor
jae
dec
pop
dec
andb
jns
dec
dec
fdivs
xor
in
jno
loope
cwtl
cmp
and
fcoms
into
push
lock
fwait
pop
mov
lret
add
clc
mov
fwait
jp
xchg
jo
aam
movsb
test
pushf
shlb
js,pn
dec
xor
repz
cmpl
js
add
mov
xor
inc
dec
jae
mov
jl
je
pushf
fs
cld
inc
push
pop
and
mov
jo
lea
mov
or
xchg
push
cld
fs
in
daa
jle
pop
lret
push
jp
mov
stos
shl
stc
mov
cmc
fdiv
pop
dec
dec
nop
int
mov
pop
call
xchg
loopne
sub
sbb
adc
out
pop
push
dec
xchg
push
cmp
and
call
arpl
jbe
outsb
loop
jl
arpl
inc
mov
pusha
add
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
outsl
mov
je
sbb
sbb
inc
inc
jae
insl
mov
js
sub
out
notb
and
mov
jg
pop
shrb
pop
sbb
dec
push
cmc
rclb
mov
repz
add
pushf
xchg
add
aaa
dec
ficoms
sarb
stos
and
fdivs
pop
outsl
lret
shrb
dec
cmp
adc
cmp
sub
iret
add
push
test
inc
mov
or
bound
mov
pop
test
negl
outsl
call
icebp
scas
in
mov
mov
xor
data16
popf
mov
dec
fcompl
inc
or
les
pushf
lahf
add
xor
lock
mov
sahf
stc
leave
test
xchg
inc
cmp
adc
push
jmp
test
std
sub
sub
shlb
andb
fisubs
mov
adc
add
and
sub
jle
mov
je,pt
icebp
adc
dec
inc
je
xor
xor
lea
push
fidivrs
shlb
jno
mov
fucom
mov
inc
mov
push
faddl
mov
or
push
push
or
in
xchg
and
push
xor
mov
mov
xchg
add
lret
cmpsl
mov
sub
push
cmp
xor
lret
loop
jae
leave
scas
stos
stc
dec
in
fisttps
das
adc
fistpll
inc
push
pop
aad
call
push
shrb
push
xor
add
push
push
test
add
mov
lds
pop
inc
sub
loope
inc
aad
add
jecxz
pop
pushf
imul
sbb
xchg
push
xchg
icebp
data16
adc
mov
icebp
aad
cld
leave
int
mov
sub
out
mov
in
pusha
mov
aaa
aam
aaa
das
sbb
addr16
mov
lock
iret
or
dec
faddp
jg
or
xlat
or
hlt
popf
add
xor
out
push
not
add
ret
adc
add
xchg
loope
dec
pop
call
sbb
cmp
add
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
cmp
jb
iret
fldl2e
jb
sahf
lock
negl
mov
mov
sub
popa
ja
or
es
pop
mov
ret
mov
mov
xchg
xor
mov
cmp
adc
mov
test
sub
mov
mov
mov
mov
xchg
insb
ret
int
sub
lds
loope
dec
push
orl
push
scas
dec
cmp
ret
fwait
les
into
cwtl
or
xchg
outsb
jl
int3
dec
xchg
ficomps
push
lret
and
sbb
fidivs
out
adc
pop
clc
fldcw
mov
jnp
rcll
xchg
das
pop
sbb
sahf
sar
popa
mov
lods
popa
lret
jmp
and
outsl
pop
ret
xchg
jmp
in
lcall
scas
add
clc
inc
mov
fcmovnbe
xor
push
pop
jb
fdivrl
nop
sub
mov
sti
std
mov
lea
iret
push
sub
popf
jo
inc
ret
jbe
mov
pop
andl
or
inc
lahf
mov
mov
dec
mov
gs
in
dec
jecxz
pop
scas
dec
pop
adc
ret
pop
stos
push
les
sub
xor
cmp
fmull
pop
mov
push
lcall
lods
in
sarl
mov
dec
lock
xchg
xor
sub
mov
xchg
add
pusha
out
into
int
pop
sub
push
out
out
jns
bound
xor
inc
add
pop
xchg
lea
inc
pop
sub
sub
lods
xorb
dec
in
pop
movsb
mov
mov
or
mov
clc
push
gs
jmp
iret
add
sti
fstpt
mov
inc
repz
add
push
hlt
int3
add
stc
popa
std
lods
repnz
or
es
xchg
pop
push
jg
decl
out
inc
dec
jle
call
pop
push
lret
xchg
push
bound
mov
cmp
pop
push
cwtl
jbe
jne
mov
filds
les
gs
cwtl
fdivs
dec
jmp
lods
and
push
push
dec
or
or
dec
jno
cwtl
lret
fdivrl
mov
push
mov
sbb
add
add
ret
nop
jmp
pop
and
xor
pop
sbb
dec
jle
push
sbb
sbb
inc
jecxz
imull
mov
scas
push
sbb
mov
jecxz
lea
pop
xchg
ds
aad
jp
mov
pop
hlt
sbb
mov
decl
nop
and
arpl
fdivl
ret
fisttpll
stc
loope
mov
mov
add
shll
leave
or
pop
jne
addr16
cltd
sbb
add
stos
test
daa
jg
push
inc
sub
mov
sahf
fistpll
ret
fsts
das
adc
ss
lcall
fwait
add
fwait
sub
mov
dec
cltd
jl
aas
out
out
sbb
sub
dec
push
imul
mov
mov
sub
fidivs
pop
lret
dec
shll
jo
ret
mov
pushf
test
testb
cmp
mov
or
sub
ret
fnstsw
fucom
mov
aam
jge
test
push
pop
sub
jns
xor
rcrl
mov
bound
js
mov
aaa
mov
mov
mov
loope
jb
pop
push
mov
jp
cmp
repnz
sarl
sbb
shlb
xorl
push
in
mov
or
les
insl
xchg
push
imul
lret
sti
in
movsb
jle
inc
leave
fldt
imul
add
lds
mov
xorl
or
orl
jecxz
cs
mov
outsl
xchg
ficomps
push
cmp
fdivrp
aad
jo
pop
stos
sub
rol
mov
dec
inc
and
xchg
inc
add
ljmp
inc
xchg
imul
inc
andb
xor
aas
or
imul
sub
cmc
fwait
add
or
int3
jmp
ss
inc
sbb
lds
sar
je
sub
jbe
movsl
mov
test
iret
jo
pop
fmuls
sbbb
pop
inc
sbb
flds
mov
push
mov
push
ja
shlb
adc
frstor
or
inc
mov
out
jp
inc
or
sub
xchg
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
sbb
fnstsw
data16
jno
sbb
mov
or
add
mov
pop
cmp
sti
adc
iret
cli
inc
stos
pop
outsl
xchg
fwait
sub
sbb
aaa
lret
stos
push
mov
fs
sub
bound
sub
push
xorl
sub
jge
loope
xchg
rcr
aaa
movzwl
arpl
dec
dec
jecxz
cwtl
icebp
test
jb
cmp
mov
cmpsl
ret
movsl
test
push
sbb
andb
jo
cmp
fistl
lock
pop
in
cmp
sub
hlt
jbe
adc
dec
xchg
mov
jae
inc
pushl
inc
pop
sub
push
dec
aas
lock
push
mov
nop
cmp
lret
bound
mov
aas
jno
push
rcr
and
lods
push
sub
inc
pop
mov
jbe
fwait
xchg
xor
std
iret
sbb
negl
adc
fsubrl
mov
and
inc
xchg
sbb
lret
roll
pop
ret
sbb
add
cwtl
scas
lahf
test
xchg
sub
mov
mov
jno
dec
sub
and
test
adc
push
pushf
in
push
outsl
nop
shrl
stos
sbb
les
rcll
scas
sbb
xor
or
xlat
mov
sub
xorl
lea
inc
popa
mov
sub
aas
lods
dec
inc
inc
pop
inc
test
repz
mov
sbb
fiadds
loopne
lret
or
repnz
das
push
push
ret
pop
pop
out
out
ret
push
add
arpl
cmp
push
test
sub
jne
sub
jg
ficoms
push
cwtl
xorb
and
sbb
sub
test
mov
jg
test
xor
or
fildl
jns
ret
fsubs
cmp
mov
movsb
add
push
jmp
xor
test
and
cwtl
aaa
pop
test
mov
sub
lods
xor
sarb
fistps
insb
movsl
test
ja
dec
adc
sbb
repnz
out
out
lds
mov
cli
fsubs
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
shlb
jle
pusha
sbb
jno
sbb
xlat
jo
imull
mov
in
add
jno
cs
lods
cmp
popf
out
jno
mov
imull
shrb
jno
lret
mov
mov
jmp
rcr
add
sar
or
xchg
add
and
pop
in
popa
adc
mov
andb
arpl
inc
mov
push
sbbl
jns
cmp
cmp
push
ret
shl
cmp
xlat
out
cwtl
mov
cmp
jbe
sbb
jmp
scas
jbe
rclb
push
out
mov
or
ret
add
lods
dec
int3
inc
ret
loop
sbb
js
xchg
cmp
xchg
dec
ja
sub
notb
sbb
out
xor
das
jbe
imul
test
mulb
dec
arpl
popa
pop
inc
jo
xor
daa
sbb
and
movb
ljmp
mov
mov
adc
in
repz
xor
xchg
shlb
and
xchg
or
push
mulb
repnz
es
xor
stc
mov
lret
shrb
in
mov
dec
dec
push
loop
mov
cld
in
js
mov
loopne
mov
jp
shrb
daa
rclb
mov
fists
fld
xor
pusha
mov
shl
clc
bound
rep
xchg
sbb
inc
push
stos
jbe
and
cld
test
jmp
and
mov
add
std
imul
push
mov
js
xor
stos
sub
aad
cmp
aam
adc
pushf
sarb
insl
xchg
fmull
xorl
leave
add
push
repnz
push
sbb
insb
nop
push
pop
inc
lahf
push
dec
pop
mov
xchg
popf
fnstsw
inc
into
mov
and
adc
push
mov
stos
leave
cli
dec
mov
and
sti
stc
adc
in
pop
in
pop
ja
mov
sub
and
and
xlat
addr16
dec
jmp
xchg
mov
ljmp
shrb
and
cmpsb
lcall
mov
mov
mov
mov
lahf
mov
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
bndstx
pop
sbb
jno
sbb
pop
pop
sub
test
xchg
mov
loopne
xor
test
sbb
fisttpl
mov
icebp
test
movsb
and
pop
cs
shl
gs
mov
stc
jl
in
clc
push
cs
mov
cmp
les
out
adc
xor
xchg
daa
cmp
dec
jmp
in
arpl
arpl
sub
pop
fucom
fisubs
add
paddsw
mov
jge
lds
pushf
pop
sbb
sbb
mov
pop
push
jae
movswl
enter
inc
rol
mov
int3
pop
cmp
push
leave
rorl
xchg
sub
out
rol
mov
out
add
sub
repnz
loope
xor
jns
dec
xchg
mov
jne
stc
fwait
cwtl
pop
fcomi
loope
dec
cmpsb
fwait
or
mov
xchg
in
out
rclb
incb
cs
icebp
jecxz
xor
scas
call
in
pop
cli
add
cli
push
xchg
das
mov
outsb
xchg
xchg
roll
and
dec
jg
pusha
jge
in
mov
mov
lret
xchg
loop
mov
mov
int3
imul
pop
jo
xor
mov
jle
repnz
cmp
push
add
lcall
out
jg
dec
or
test
mull
lea
leave
or
mov
jbe
inc
aad
or
dec
cld
mov
xor
loop
call
fisubrl
lcall
fs
bnd
loopne
sti
cmp
push
push
pop
mov
mov
dec
sarb
in
inc
xor
jbe
pop
popf
add
cs
jbe
mov
movsb
add
int3
and
icebp
sbb
clc
xchg
cld
push
cld
add
aam
inc
rolb
inc
shlb
jae
test
cmp
push
mov
sbb
cmpsl
in
das
xchg
jmp
sbb
pop
fdivr
inc
push
ds
into
ds
dec
imul
lcall
and
inc
sbb
mov
nop
aaa
mov
lods
aaa
and
pushf
add
fs
test
cmp
ret
xor
adc
int
cmc
loop
dec
sbb
in
hlt
xchg
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
xor
les
lret
mov
and
xor
jle
push
in
rorl
pop
xchg
cmp
fmuls
xchg
enter
lret
or
jp
je
ret
pop
pop
mov
pop
xchg
jns
xor
enter
test
cmp
sub
aam
ds
gs
shr
and
mov
add
xor
loope
sub
xorl
dec
mov
mov
outsb
dec
data16
xchg
dec
arpl
mov
out
loope
rcrb
jns
mov
add
ss
aaa
stos
inc
scas
lret
jo
out
andl
mov
cmp
push
adc
loope
cmp
xor
sbb
pop
pop
cmp
pusha
loop
pop
pop
icebp
jae
fidivl
mov
fistpll
jae
out
jmp
out
mov
addr16
stc
xor
loope
push
inc
xchg
or
jecxz
dec
jl
leave
sub
xchg
inc
cmp
dec
xor
in
pop
xor
xor
sbb
stos
pusha
inc
inc
mov
mov
push
jle
loope
sti
pop
cli
aam
sub
cltd
pop
int
add
cmp
push
mov
inc
mov
xchg
sbb
out
clc
xchg
fcom
xor
popl
add
push
dec
xchg
and
les
jge
popa
testb
push
movsl
orb
shl
popa
inc
lds
xlat
mov
pushf
lea
xchg
mov
cli
loope
insl
ret
mov
cli
xchg
pop
mov
xchg
loop
rol
xchg
cmpsl
cmp
xchg
or
sbb
inc
shlb
pop
jns
cmp
in
mov
cli
loop
mov
xor
pop
orl
xor
push
sub
fidivrs
out
std
add
mov
sbb
adc
xchg
and
cmp
or
adc
xchg
sbb
inc
or
fisttps
sahf
int
sbb
flds
test
inc
jne
mov
mov
jle
int
outsl
test
cmpsb
popa
and
enter
lret
adc
cli
in
push
sbb
and
fcmovnu
aam
push
inc
dec
jo
std
jle
and
push
pop
aaa
cmp
push
mov
add
jnp
sub
fsub
or
test
dec
or
ds
mov
add
out
xchg
std
xchg
testb
movsl
cmp
sub
ret
cwtl
lods
lods
nop
scas
dec
sbb
negl
repz
mov
mov
xor
sbbb
cmp
xor
les
leave
add
out
movsb
mov
scas
notl
test
imul
sahf
fucomip
or
dec
sti
fcmovbe
push
cltd
xchg
pop
inc
call
sbbb
and
adc
pusha
xor
add
cmp
dec
lahf
push
sub
imul
shll
dec
sub
pop
gs
cmpsl
pop
inc
pop
xchg
sub
dec
inc
cmp
sub
lahf
data16
outsb
sbb
pusha
iret
lods
into
rcr
or
fldt
inc
sbb
lret
and
pop
lret
sti
movb
mov
pusha
cld
in
stc
add
rol
fdivrs
ret
jae
inc
clc
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
add
jnp
fdivl
or
daa
scas
arpl
sub
cld
jb
fs
loop
addr16
and
pop
cli
inc
popa
cwtl
jl
icebp
cs
xor
pop
aad
int3
scas
in
cmp
dec
sbb
pop
push
inc
jmp
push
clc
jp
mov
outsb
test
cld
jne
push
sti
mov
add
pop
das
and
cmp
pop
sar
xlat
sub
sti
aam
cli
mov
fbstp
mov
jle
das
mov
faddl
test
nop
dec
lea
movb
or
adc
mov
scas
add
mov
bound
ja
clc
push
jecxz
inc
add
xor
or
cmp
pushf
inc
roll
sti
pop
mov
imul
cwtl
dec
xchg
out
stc
or
inc
push
add
rcll
xchg
nop
dec
xchg
xor
sub
sbb
pop
mov
or
pop
in
loop
mov
int3
cmp
arpl
mov
aaa
mov
push
adc
cmp
rcll
sahf
lret
xchg
xor
mov
ds
ret
sub
push
cmp
inc
mov
jno
xor
aaa
sbb
insb
jae
out
and
call
ficoms
hlt
lret
enter
or
popf
fistl
out
xor
pop
icebp
push
push
mov
xor
and
lret
and
jmp
shlb
fidivrs
push
ja
dec
test
push
popl
mov
scas
pop
fnstcw
add
push
fsubp
xor
cltd
inc
xor
andb
push
pop
aaa
out
cwtl
loope
xlat
inc
jne
insl
ret
add
cmp
insl
lock
and
cmpsl
sub
sbb
dec
add
lds
push
push
and
and
dec
mov
mov
pop
jae
test
insl
cmp
adc
mov
adc
push
daa
mov
pushf
pop
inc
sbb
xchg
lcall
call
in
sub
fcomps
sub
loope,pt
dec
push
sbb
fwait
shll
movsb
outsl
test
cli
lret
imul
dec
mov
iret
fldt
adc
inc
jl
sahf
int
push
adc
stos
or
dec
lret
or
rorl
jbe
out
je
push
dec
adc
inc
andb
xchg
jle
mul
or
inc
test
lods
mov
pop
std
jecxz
test
pusha
xchg
aaa
fimuls
push
lds
cwtl
leave
hlt
adc
lock
mov
xchg
clc
pop
filds
jge
or
lret
inc
mov
inc
adc
sbb
lds
out
sub
mov
mov
mov
clc
cld
test
xorb
xor
sub
sbb
add
nop
lahf
sbb
pop
cmp
fistpl
setnp
fwait
out
adc
mov
sbb
orb
push
and
stos
dec
or
or
ss
inc
dec
shlb
shll
loopne
mov
cwtl
loop
out
call
fadd
sub
daa
fs
jl
divl
jne
bound
pop
mov
in
outsb
mov
mov
dec
jl
out
pop
out
test
mov
punpcklwd
add
popa
xlat
addl
enter
fwait
pop
pop
cmp
jno
daa
add
fwait
loopne
jno
xchg
insb
fbstp
lahf
lret
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
out
mov
stos
adc
sbb
jns
out
aaa
dec
xchg
xchg
pop
jg
divl
xchg
inc
mov
jg
fdivrs
xchg
cli
dec
jb
xchg
and
adc
cld
outsb
daa
cmp
cmpsb
scas
inc
jg
mov
mov
dec
push
js
sbb
push
test
popf
dec
xchg
push
fidivrl
pop
int3
cmp
mov
dec
inc
mov
pop
lcall
jne
leave
sub
mov
sbb
cmp
pushf
outsb
jge
add
jmp
movsb
inc
test
ret
dec
xchg
push
sbb
in
xchg
push
jecxz
movsl
xchg
ds
add
jl
sbb
lret
dec
mul
mov
xchg
dec
or
jmp
ja
movsl
pusha
bound
mov
ret
inc
dec
int3
cli
mov
sub
shll
dec
js
jl
mov
add
jp
lret
pop
jnp
cmp
fistl
mov
sub
push
jle
xchg
movsl
stos
sub
push
pop
pop
lods
push
sub
sbb
pop
add
pop
jns
ret
hlt
and
imul
movsl
xorb
dec
sbb
leave
and
push
jecxz
inc
mov
cmp
loopne
clc
imul
cmp
mov
sbb
xor
fistl
dec
enter
shrd
rcll
shrl
test
and
xor
mov
jg
popf
popa
aad
cmp
adcl
xor
hlt
adc
movsl
dec
fisubrl
sub
pop
dec
das
popf
xchg
pop
loopne
in
dec
sbb
jmp
xor
mov
mov
out
mov
add
fdivl
xor
jne
sub
adc
orb
push
insl
cmp
mov
mov
sbb
mov
push
push
hlt
in
comiss
shr
lods
fs
int3
push
arpl
fs
mov
rol
xor
cwtl
add
fcomps
cmp
into
xor
mov
stos
in
out
xor
and
fs
inc
push
jge
test
cld
sbb
out
xchg
in
out
push
xchg
repnz
pop
div
jecxz
nop
sub
in
mov
mov
mov
pushf
ret
sbb
add
or
inc
dec
adc
ret
inc
scas
mov
fists
jp
aas
add
add
das
cli
out
out
lret
mov
mov
pop
scas
sbb
mov
add
jg
jne
mov
movsb
into
pop
fmull
xchg
xor
mov
and
pusha
mov
sbb
dec
mov
aaa
out
push
lret
loope
jmp
pop
call
dec
jmp
insb
adc
and
mov
push
dec
fs
push
fnstcw
xor
sub
inc
push
lods
dec
or
js
aas
data16
dec
xchg
aam
mov
mov
out
test
pop
js
sbb
jmp
push
jne
ljmp
sarl
sbb
or
jns
dec
loope
cs
push
test
sbb
scas
lahf
xchg
and
daa
mov
ljmp
and
pop
sti
xor
push
inc
lock
mov
lcallw
jl
push
decb
mov
lods
push
add
rcr
divb
std
fmuls
mov
aas
es
push
testl
iret
fldenv
xchg
add
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
jno
fs
sbb
stos
adc
sbb
jns
das
scas
rcrl
xchg
push
jmp
pop
adc
jne
push
cmp
sbbl
or
or
aaa
and
shrl
lret
push
adc
mov
cmp
loop
idivl
pusha
imul
imul
popf
test
push
jp
mov
in
stos
jl
loope
sbb
mov
loopne
lea
xor
fstps
jecxz
adc
loope
mov
fisubrl
push
adc
test
mov
inc
mov
gs
push
int
outsb
cmp
stos
ss
jbe
sbb
push
jae
shlb
mov
adc
aaa
lret
fstpt
adcb
lcall
leave
jo
nop
cmp
inc
adc
inc
stc
cmc
mov
add
imul
dec
adc
ljmp
and
lret
mov
in
rorb
xor
add
aam
mov
in
stos
mov
int
adc
hlt
in
repz
adc
mov
fsubrl
jo
cmp
push
loop
and
addr16
jae
or
fdivs
jecxz
push
imul
adc
data16
cmpsl
jle
test
xchg
pop
in
aaa
ret
fisttpll
adc
sbbl
dec
inc
insl
mov
sar
popf
xchg
cmp
jge
mov
mov
xchg
sahf
lock
cmp
xchg
sub
pusha
fwait
out
popf
and
and
jg
outsb
lcall
jmp
mov
ja
xchg
xchg
lcall
or
inc
lods
dec
sbb
lcall
inc
icebp
or
push
out
pusha
sarl
cmpsl
sbb
xor
inc
sbb
loopne
iret
mov
xorb
cmp
jns
aas
mov
jmp
pushf
stos
mov
imul
dec
mov
fiadds
daa
loope
cld
pop
push
mov
add
mov
dec
cli
shrb
nop
into
mov
xchg
push
sbb
lods
fadd
xchg
cmp
out
fadd
inc
cmc
push
ss
out
xchg
push
jo
call
out
push
jnp
adc
fcomps
xchg
test
fimull
pop
pop
idivl
repz
nop
cmpsb
pop
loopne
scas
xor
push
test
js
pop
addb
and
shll
sbbb
push
lahf
nopl
mov
sbb
out
mov
pusha
jbe
fwait
imul
xchg
les
stc
jno
lods
add
sub
arpl
jb
pop
stc
in
jmp
pop
xor
inc
pop
and
add
out
out
mov
adc
mov
sbb
repnz
mov
or
fisubl
dec
xor
pop
gs
fwait
dec
out
fsubrl
xchg
cmp
xchg
add
jmp
loope
arpl
aam
int3
xor
fcomps
into
int
cmp
or
sub
dec
mov
ficompl
pop
jg
lahf
sub
and
jae
daa
mov
lret
xchg
ss
lock
jne
gs
loop
mov
mov
pop
dec
les
lock
fwait
xchg
insl
push
scas
stc
mov
dec
rcrl
lcall
mov
divb
xchg
out
mov
in
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
jl
jle
cmp
sbb
lret
mov
bound
xor
ljmp
arpl
xchg
popf
mov
ss
sub
fcmovu
inc
nop
mov
int3
cli
test
lcall
jge
xchg
jmp
sub
inc
dec
or
inc
lret
cmp
mov
dec
push
or
push
fwait
ja
hlt
jle
insl
push
jl
int3
add
push
imul
cmp
jle
mov
sbb
xor
stos
call
mov
pop
rclb
pop
sbb
out
outsl
mov
cmc
mov
stc
outsb
pop
xchg
shrb
js
cmc
adc
fnsave
fsubrs
push
rorl
nop
mov
xor
outsb
stc
es
arpl
sahf
lahf
andl
scas
sbb
jmp
adcb
pop
ja
dec
lcall
push
fadd
sbb
cmp
mov
pop
jmp
or
cld
dec
loop
leave
in
out
inc
or
xchg
sbb
daa
subb
in
mov
hlt
lahf
add
push
je
adc
call
jge
inc
fwait
aaa
movsl
cld
jne
adc
push
mov
rorl
or
dec
pop
xorb
mov
sub
fidivrs
mov
push
adc
cltd
test
mov
sbb
aaa
push
cmp
and
cs
jmp
jge
inc
andb
insb
dec
inc
js
jle
loopne
cmp
ds
into
sahf
inc
xor
sbb
fucomip
add
rol
je
fs
and
lret
rorb
sub
es
push
cmp
or
aad
mov
call
cmp
ret
xlat
ja
stos
pushf
bound
xchg
and
mov
add
mov
out
icebp
mov
jno
lods
outsb
in
sub
pushf
cmp
cli
mov
mov
jp
pop
imul
test
inc
lods
arpl
adc
inc
lcall
adc
xchg
outsb
xlat
xchg
or
mov
xchg
mov
inc
xchg
xchg
mov
test
dec
faddl
cmpsl
stos
movsb
mov
cmp
jns
dec
fisubl
mov
nop
test
stos
out
dec
mov
sbb
pop
cwtl
enter
mov
push
sti
xor
mov
fsub
xchg
mov
lds
dec
jecxz
cmp
lea
mov
inc
test
sub
jbe
test
cwtl
dec
push
popa
fidivl
daa
mov
and
adc
sub
or
cmpsl
popa
cmp
mov
pop
fnstenv
inc
sub
rorb
mov
push
cwtl
cmp
clc
dec
in
inc
mov
into
bound
mov
in
xor
nop
shl
fdivs
das
loop
jle
mov
outsl
fstps
sbb
imulb
fdivrl
imul
sahf
movb
stos
int
dec
sub
cmp
icebp
dec
mov
lods
pop
jg
shl
inc
mov
add
ret
popf
adc
or
callw
mov
push
jle
ljmp
mov
lret
incl
fptan
fldenv
inc
and
rcr
push
sub
xchg
fstps
insl
cmp
add
leave
call
movl
dec
fcoms
pop
add
add
fimuls
icebp
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
addr16
sub
sbb
andb
movsb
xchg
mov
dec
push
push
iret
adc
loope
and
xchg
dec
xor
sbb
xchg
xchg
das
lock
mov
dec
iret
js
mov
in
mov
jge
orb
adc
int3
icebp
aam
mov
jl
jle
cmpsl
cmp
fildl
pop
push
xor
imul
leave
lahf
push
subl
sarl
push
mov
mov
jl
mov
insb
notb
push
or
xchg
mov
mov
push
hlt
mov
and
sbbl
mov
mov
shr
inc
gs
icebp
sub
fstpt
or
iret
xchg
cs
js
scas
xor
shr
sub
adc
das
subb
mov
roll
fnstsw
adc
scas
push
mul
mov
mov
loop
fwait
push
iret
inc
xlat
subb
push
cwtl
and
sbb
cmpsb
mov
push
arpl
mov
or
test
or
es
push
movsl
mov
test
mov
xor
jne
popa
nop
lock
cmp
xor
nop
lock
and
adc
add
adc
push
stos
jl
add
pop
xor
fnstenv
fwait
lret
loop
lea
push
add
cwtl
sub
out
stc
mov
jbe
lods
mov
test
mov
and
push
jno
sbb
aaa
ja
xor
in
adc
mov
fimuls
xor
add
mov
adc
dec
scas
xlat
das
adc
fdivrs
push
inc
mov
int
adcb
cld
push
lcall
cltd
xchg
lcall
inc
pop
stc
sahf
in
sub
or
mov
cmpsl
movsb
cmp
shll
inc
jle
iret
fcompl
pushl
sub
jo
enter
mov
xchg
jae
cmc
xchg
scas
and
nop
or
fs
cmp
push
mov
inc
xchg
add
shlb
iret
jp
inc
jae
pop
and
test
sub
lods
xchg
and
jno
inc
mov
cmp
loopne
sbb
out
pop
enter
out
negl
mov
out
and
leave
scas
icebp
nop
mov
mov
outsl
mov
push
adc
inc
mov
pop
push
jge
fldcw
push
rcl
xor
lods
jp
nop
cmp
cmpsl
jns
out
push
dec
inc
lods
pusha
adc
dec
les
fisubrs
loop
pop
inc
nop
sub
test
xor
bound
out
add
add
scas
pop
cli
push
shl
sbb
sarb
jo
fsubs
fidivs
fistl
pop
inc
mov
mov
cmpsb
das
sub
adc
jg
mov
sub
daa
mov
mov
inc
sub
pop
addr16
imul
lods
sbb
and
xchg
sbb
mov
addr16
sbb
sub
sbb
xchg
in
pop
ret
sub
mov
jne
adc
mov
pop
lods
add
jae
call
loope
lock
lock
mov
dec
ljmp
and
and
jmp
in
int3
xchg
repnz
stos
cmp
mov
and
or
lds
das
mov
mov
xchg
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
or
sbb
sbb
adc
sbb
aaa
leave
or
mov
in
jns
mov
xor
push
inc
pop
push
aas
cmc
fcoms
inc
bound
push
mov
push
movsb
iret
pusha
daa
jnp
divb
shll
addb
jne
adc
arpl
mov
adc
mov
mov
je
sbb
fistpl
cld
dec
daa
cwtl
pop
sar
mov
pop
or
mov
cwtl
add
jb
sbb
mov
push
mov
xor
and
mov
jge
jmp
ret
jae
rorl
shlb
and
and
and
addr16
xor
mov
pop
mov
repz
jmp
sub
repnz
adc
sarb
xor
loope
je
jle
push
test
popf
inc
xor
mov
and
test
mov
loop
pop
jge
adc
push
repnz
push
inc
mov
aad
add
call
inc
push
inc
mov
fwait
ja
imul
inc
dec
mov
dec
fbstp
cmc
cmc
sahf
or
dec
dec
pusha
ficomps
push
xor
pop
out
mov
xchg
pop
or
je
inc
mov
jmp
jbe
mov
outsl
lcall
scas
xor
mov
lods
cmp
push
mov
xorb
call
jl
mov
aas
sbb
test
inc
xor
jbe
sbb
add
push
mov
int3
lcall
adc
ja
xchg
pusha
aad
lret
subb
jne
pop
shlb
aam
jae
push
lods
mov
shll
push
and
mov
fdivrs
push
inc
push
pop
dec
ret
aad
loope
rorb
inc
mov
cs
mov
and
sbb
dec
lods
int
inc
cltd
fcmovne
les
in
xchg
inc
sub
lcall
sub
pop
loope
cmpsb
ja
mov
mov
add
in
loope
ret
sub
and
insl
sbb
popf
xor
mov
sub
mov
jecxz
jae
mov
push
lods
inc
clc
cmp
mov
or
cmp
call
in
mov
pop
jb
mov
cld
jnp
push
xor
fcomp
ret
xchg
pop
push
mov
push
cmc
mov
insb
stos
mov
mov
jns
aam
cmp
orb
fcompl
pop
call
push
inc
xchg
sub
xchg
xor
loop
test
pop
or
test
jle
imul
cwtl
cli
je
mov
jae
repnz
add
adc
lds
andl
fdivp
mov
sbb
inc
xchg
mov
push
inc
or
mov
in
cmpsl
shrb
jg
outsl
pop
repnz
jecxz
or
xor
out
or
lods
mov
xlat
test
mov
push
sbb
fcmovnu
pop
sub
sbb
mov
mov
in
sub
inc
sbb
pop
rorb
and
xchg
cmp
add
push
push
push
shlb
out
inc
std
push
dec
mov
sub
mov
rcll
push
mov
ds
xor
out
loop
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
gs
shlb
sbb
adc
sbb
xor
clc
std
popa
out
ret
repz
repnz
in
pusha
test
ret
mov
iret
adcl
and
nop
mov
arpl
test
fidivl
cmpsb
sti
bound
adc
and
sub
add
imul
andl
shl
jns
pop
cmpb
cltd
cwtl
movsl
jne
push
pushf
daa
pop
cmpb
rdtsc
popa
push
aaa
out
lret
or
sbb
and
js
and
dec
test
sti
sub
clc
ss
mov
rcl
xor
or
push
cmp
jge
xor
xadd
pop
fdivrl
adc
mov
or
cltd
loopne
mov
into
jmp
add
cld
and
fnstcw
sub
rclb
and
mov
test
inc
add
data16
in
xlat
call
lods
stos
ja
cmp
or
scas
icebp
or
cmc
sbb
xchg
add
jecxz
push
fisubl
es
mov
mov
insb
cmp
mov
scas
popf
test
jae
push
mov
lret
pop
addr16
daa
leave
testb
arpl
fst
sbb
xor
jns
outsb
dec
ret
clc
cwtl
shl
xor
mov
adc
std
out
fcoml
sub
or
adc
or
in
out
jle
stos
mov
lds
pop
ja
arpl
and
sbb
out
fisttpl
loopne
fdivr
push
and
push
int3
jecxz
outsl
inc
xorb
loop
cmpsl
stos
outsw
outsb
test
loope
out
mov
fdivp
stc
in
nop
or
std
repz
fcmovne
xchg
and
aas
fdivrs
add
insl
nop
sbb
adc
test
aam
lret
out
pop
mov
lahf
nop
enter
imul
nop
in
stc
cmp
cs
pop
jb
stos
or
stc
daa
in
fsubl
and
repz
imull
cmpsb
ja
andl
js
out
adc
or
xchg
loop
push
aaa
mov
bound
insl
test
bound
sbb
or
cmp
pusha
add
out
pop
jae
sub
jle
push
pop
ds
into
sub
sbb
fdivs
in
xlat
stc
lret
add
incl
imul
cld
pushf
or
add
add
clc
loope
popa
les
ret
scas
clc
pop
cmp
movsb
movsl
loopne
pusha
in
addr16
ja
cs
mov
bound
lret
push
imul
push
sbb
mov
sub
mov
outsl
pop
in
sub
orl
mov
pop
jge
clc
ret
or
and
and
rolb
push
xchg
insl
or
and
lea
sbb
imul
add
ljmp
mov
ret
pop
push
movsl
outsl
lods
ja
pop
arpl
pop
push
pop
ds
emms
mov
ret
repnz
jle
andb
jp
imul
xchg
inc
std
mov
xor
sub
mov
cmp
dec
jnp
in
cld
aaa
dec
bound
sahf
out
mov
test
mov
jnp
pop
push
leave
push
xchg
sti
rcl
cmc
mov
push
testb
lods
pop
js
aas
lea
adc
dec
inc
into
test
push
xchg
and
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
jae
push
sbb
sbb
adc
sbb
jbe
movb
and
test
pop
push
movzwl
neg
cmpsb
mov
dec
jo
add
in
leave
jl
test
mov
mov
cmp
jle
arpl
push
sti
and
xor
int3
xor
js
jg
cltd
push
mov
mov
shlb
pop
add
out
or
mov
pop
inc
iret
repz
mov
stc
inc
pop
fdivr
fdivs
nop
mov
scas
out
xchg
mov
enter
lret
test
lods
pusha
push
push
pop
sbb
jae
jne
cmpsl
hlt
mov
cld
popa
outsl
cltd
jg
sub
sbb
xor
and
lock
pop
jb
xor
int3
pusha
test
out
cli
jp
es
fstps
sbbb
fdivs
stos
loop
sub
scas
pop
popa
popf
push
mov
push
push
clc
cmpsb
fsubrp
outsl
fwait
add
dec
pushf
xchg
cmp
stos
push
leave
pop
sahf
cwtl
outsb
push
loopne
in
jnp
loopne
xor
pop
jle
ss
lock
rclb
aam
xchg
mov
ja
lahf
dec
pop
stc
cmp
push
inc
and
push
out
int3
imul
pop
xchg
pop
mov
dec
xchg
js
data16
out
insl
and
sub
pusha
xor
cmp
sahf
xchg
pop
testl
and
sbb
pop
test
push
mov
cmp
aad
pushf
ss
cmp
sbb
pop
scas
shrb
mov
fildl
cmp
pop
jnp
inc
xchg
stos
gs
push
jg
ds
and
cmp
gs
xchg
vmovdqu
cli
sbb
xchg
addr16
adc
jb
dec
les
sarl
out
or
xchg
sub
push
mov
mov
add
popa
add
and
je
insb
and
ja
add
lods
fdivl
cmp
pusha
fldcw
daa
insl
pop
xchg
adc
push
cmpsb
arpl
add
adc
fdivrs
mov
mov
pop
mov
int
imul
push
mov
jo
add
or
fwait
pop
xor
lcall
aaa
sti
xchg
pop
pop
mov
inc
push
pusha
aad
inc
xchg
or
leave
mov
loope
sbbb
movsl
scas
xor
das
mov
testb
repz
jl
jae
or
and
fidivrl
jecxz
cmp
adc
out
lea
dec
and
imull
pop
pop
inc
xor
xor
pop
xchg
add
push
cmp
cmpsb
mov
xor
and
jp
repz
mov
pop
ja
add
sbb
cmp
mov
lea
rorl
pop
repnz
mov
cmc
imul
pop
cwtl
mov
lods
imulb
out
dec
xor
lret
mov
pop
jp
out
into
jo
adc
daa
pop
jnp
mov
or
call
cwtl
hlt
jbe
je
fbstp
jb
pop
dec
cmp
inc
lock
sti
inc
gs
cli
sub
cmp
add
push
xor
cmpsl
jmp
jl
lea
test
dec
mov
out
cmp
mov
roll
push
sbb
fisubl
inc
imul
cmc
mov
mov
push
fdivrp
cmp
ret
dec
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
pop
jnp
inc
push
push
sbb
loop
das
stc
mov
les
push
sub
pop
jle
out
or
sbb
mov
or
mov
mov
gs
add
adc
andl
add
ljmp
rcrl
enter
imul
adc
xchg
aam
mov
out
aam
jle
mov
pop
shlb
repnz
push
shl
jne
jmp
out
shll
mov
in
and
adc
pop
xor
adc
xor
xor
shlb
outsl
push
push
or
xchg
xchg
daa
xchg
fcmovb
push
mov
xchg
jne
xor
push
sub
cmp
push
movsl
push
sbb
insb
cli
je
ss
xchg
gs
lret
jbe
xchg
cli
mov
lret
xor
cmpsl
scas
inc
imul
popa
dec
sarb
aad
ret
jb
inc
in
mov
stc
lods
notrack
insb
xchg
mov
ss
jp
in
xor
xor
lret
cmp
lahf
jno
insl
dec
cmpb
xor
lahf
aas
jmp
pop
pop
in
lcall
push
add
rol
adc
and
pusha
dec
loope
test
in
adc
mov
mov
adc
es
and
or
testl
ja
and
and
jmp
lret
popf
sbb
jge
leave
addr16
fdivrl
mov
sub
dec
punpckhwd
adc
xchg
ljmp
lahf
add
pop
out
mov
test
divb
movsb
adc
xchg
idivl
inc
push
sarb
mov
sti
shrb
mov
fsubrs
or
fistl
add
bound
js
dec
js
or
sub
das
adc
xor
jnp
lds
xchg
hlt
call
cmp
das
mull
push
repnz
adc
sub
or
sbb
mov
lods
jecxz
dec
or
sar
pop
push
cld
stos
cwtl
xlat
lret
faddp
bound
cmpsb
lcall
sbbl
push
pop
mov
or
push
and
mov
mov
pop
notl
push
or
sbb
enter
imulb
sub
jo
pop
add
test
mov
jo
jne
adc
les
mov
jecxz
pop
mov
or
bound
mov
sub
pop
fadds
lock
lds
mov
jns
cmp
shr
orb
sub
adc
hlt
scas
icebp
and
mov
invd
sub
mov
testb
cmpsb
or
cli
stos
and
mov
rorb
mov
aam
aaa
jnp
mov
jle
jbe
je
add
cmp
push
adc
and
mov
mov
loope
sub
sub
in
jne
ret
add
data16
mov
xor
xor
add
push
and
mov
lret
inc
pushf
inc
repz
xchg
push
xor
es
fstps
std
shll
mov
enter
in
xlat
in
cmp
sbb
pop
or
xchg
dec
scas
fdivl
ret
mov
test
shrl
rorl
popa
sbb
jecxz
add
add
fmuls
lea
xchg
cmp
lret
or
push
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
mov
sbb
enter
mov
mov
pop
sbb
sub
xor
add
xor
xor
cmp
out
inc
mov
mov
in
fucomi
and
das
sbb
xchg
inc
icebp
mov
ss
xor
lods
and
jns
inc
pop
stos
sub
jae
mov
insl
inc
mov
jo
mov
ret
imul
xchg
loop
push
frstor
gs
mov
mov
lahf
and
lods
jg
pop
loop
adc
mov
cmc
pop
mov
sub
test
out
cltd
inc
aam
jbe
sti
int3
iret
cmp
lret
popa
or
mov
add
sbbb
std
pop
cli
and
jb
add
lock
in
enter
gs
or
dec
es
cmpsl
out
lcall
jne
xor
and
js
shrb
push
push
mov
cs
pushf
cwtl
add
push
pop
inc
movsl
pop
fstps
push
mov
cmc
mov
cwtl
das
clc
icebp
and
jecxz
push
dec
push
inc
dec
loope
shlb
psubusb
and
test
jmp
mov
pop
pop
sti
cltd
jp
dec
jno
std
jl
addb
pop
stos
jp
out
mov
nop
fs
fisttpll
loope
cmp
jne
jno
jle
lret
test
mov
or
jnp
jne
push
enter
mov
les
pop
jae
mov
cmp
ret
adc
dec
sub
push
pusha
cld
fistl
arpl
or
sub
jle
cmp
shlb
jle
jecxz
xor
inc
enter
inc
xor
jb
jnp
lods
das
mov
mov
mov
push
icebp
or
mov
add
mov
in
mov
lcall
and
pusha
out
lret
ss
test
lds
mov
lea
jb
ljmp
imul
shll
hlt
arpl
or
imul
mov
pop
push
rcll
adc
pop
stos
xchg
inc
sbb
dec
and
lret
dec
sub
nop
inc
jmp
mov
inc
push
push
lods
test
or
dec
icebp
repnz
shll
dec
xor
pop
xlat
ds
repnz
cmpsl
jno
mov
mov
inc
cmp
imul
mov
popa
jbe
call
add
scas
mov
decb
inc
add
jp
add
adc
outsl
dec
xchg
pop
inc
pop
dec
aam
dec
call
add
mov
icebp
out
jne
mov
int3
lock
lods
and
fwait
sti
xchg
imul
aaa
outsl
or
inc
mov
jg
sub
cld
push
sub
sbb
jl
mov
ja
mov
pop
lret
cwtl
imul
xchg
hlt
xlat
mov
sbb
push
jnp
cld
xchg
lea
movl
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
mov
push
sbb
rcll
sub
pusha
icebp
adc
ja
push
andnps
inc
leave
aad
test
jns
insb
lods
and
cmp
and
or
mov
out
iret
les
mov
cmpsb
xor
push
sbb
and
push
mov
dec
mov
push
dec
cmp
bound
in
inc
mov
cmp
dec
mov
mov
cmpsl
fs
xor
and
clc
test
jp
cmp
push
loop
mov
rcrl
jns
in
mov
push
jecxz
pop
adc
inc
int3
movsb
cmp
xchg
sbb
int3
add
rclb
sub
dec
and
cmpl
scas
cwtl
addr16
lret
push
pop
mov
or
in
mov
inc
lds
lcall
pusha
sub
xor
dec
addr16
cli
lods
std
loope
sahf
or
outsb
pop
sub
loope
xchg
sub
xchg
mov
enter
int3
mov
xchg
sub
inc
push
jmp
mov
test
or
cmc
xchg
and
or
xchg
out
idivl
dec
fcmovbe
cmpsl
push
dec
mov
lods
ficompl
ficoml
addb
fisubrl
fstl
fdivl
mov
imul
xorb
pop
cwtl
mov
cmp
loop
dec
lea
repz
lret
and
enter
mov
popa
xor
mov
das
inc
fwait
iret
movsl
cmp
mov
imul
adc
fxch
mov
repz
lock
iret
cltd
push
sub
lea
mov
adc
into
popa
out
popf
push
xchg
jb
dec
xor
xor
ss
icebp
insl
notl
xchg
outsb
aam
test
push
cmp
ficompl
rcrb
out
out
sub
mov
push
clc
cs
sub
jb
data16
and
push
sbb
ret
icebp
mov
rorb
jge
xchg
mov
pop
push
sub
out
push
mov
lea
add
test
lret
and
imul
test
pop
xor
hlt
lcall
sbb
mov
sbb
loope
mov
lock
dec
cs
movsl
push
pop
dec
push
mov
add
add
and
jp
and
push
or
or
movsl
mov
jl
iret
sub
les
shlb
lret
push
push
pop
and
mov
xlat
daa
pop
xchg
hlt
mov
xchg
inc
cmp
test
push
rclb
sub
fistps
es
scas
inc
mov
iret
mov
fisttpl
mov
loopne
rorb
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
adc
mov
push
sbb
sbb
fisubs
push
dec
pop
add
sbbl
sbbb
fstpt
or
cmp
daa
cmp
xor
mov
sub
arpl
andb
mov
outsl
and
int
sbb
cli
cmp
lock
mov
xor
fwait
mov
pop
or
xlat
jae
xchg
lea
lcall
inc
mov
nop
outsb
or
fsubl
jnp
cld
fldcw
aas
lods
and
mov
shlb
fiadds
sti
cwtl
insl
std
pop
lods
sub
iret
int3
add
jle
adc
dec
add
clc
mov
mov
inc
xor
cmc
mov
sahf
mov
jp
sbb
pop
jns
mov
scas
mov
repnz
dec
cltd
mov
jp
lods
iret
addr16
dec
movsl
add
inc
in
loope
out
fisttpl
popf
xor
rcll
push
out
mov
jns
sbb
mov
sbbl
sar
lea
sub
pop
cltd
call
lret
test
insl
stos
nop
mov
js
sub
adc
xchg
xor
mov
mov
dec
xor
push
or
mov
mov
aaa
adcb
mov
test
loop
inc
mov
mov
jo
jne
cli
inc
lea
ja
mov
lods
lea
pushf
xor
jge
push
dec
xchg
and
jle
lahf
push
add
fcom
aaa
test
enter
push
scas
mov
movsl
mov
out
sbb
mov
clc
cwtl
lret
fdivrs
cmp
movl
sbb
xor
daa
in
xchg
aad
movq
mov
fidivrs
xor
mov
add
adc
sti
test
jnp
fs
push
in
mov
mov
xchg
jl
xlat
mov
mov
xchg
shlb
cmp
or
pop
inc
cli
rcrl
dec
xlat
dec
insb
fnsave
lcall
lods
test
mov
dec
repz
push
mov
mov
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
push
cld
push
sbb
cmp
sub
dec
test
int3
test
mov
in
or
aad
mov
dec
insb
push
xchg
pop
hlt
fcomps
mov
icebp
shlb
cwtl
jle
aam
repnz
es
adc
mov
pop
enter
sbb
add
jno
rorl
ds
adc
inc
popa
call
popf
inc
shrb
or
mov
aam
xor
in
js
cmpsl
mov
inc
and
xchg
mov
inc
lret
ljmp
shr
sub
mov
cli
or
out
in
sbb
sbb
hlt
or
cmp
adc
adc
into
push
jp
mov
inc
jbe
jb
imul
pop
ds
daa
adc
ss
arpl
push
lahf
aaa
pop
mov
mov
sub
sub
pop
mov
sarl
mov
ljmp
xchg
cmp
out
ljmp
shr
hlt
cmp
gs
dec
sub
mov
cld
add
sub
pushf
add
scas
inc
lock
sbb
cmp
push
data16
xchg
sti
mov
movsb
or
push
int
leave
inc
daa
dec
lcall
adc
mov
pop
push
gs
xor
out
jno
nop
mov
int
cmp
movsb
scas
xor
dec
outsb
scas
xor
leave
shll
jl
adc
fdivs
out
pop
jle
popf
mov
addr16
sub
push
sti
arpl
lea
jno
addr16
push
cmp
push
fxch
pop
sbb
push
sbb
and
in
adc
jmp
arpl
jmp
sub
jae
mov
sub
addl
push
test
imulb
fildl
mov
xor
or
mov
clc
jno
add
sti
inc
out
xchg
xchg
je
test
mov
cwtl
aam
jno
lretw
ret
inc
pop
sub
and
leave
and
adc
mov
cld
sti
fadds
add
dec
hlt
push
adc
mov
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
jmp
mov
sub
pop
test
or
addr16
push
in
mov
jnp
orb
or
jecxz
xchg
cwtl
popf
cltd
sbb
rolb
aaa
outsb
jle
xlat
xor
cmp
cs
pop
add
repz
or
adc
ss
fnstenv
inc
mov
mov
or
movsb
pop
int
pop
jne
leave
inc
adc
sbb
xchg
inc
add
mov
fs
mov
sub
shlb
mov
psubw
outsl
cmp
mov
mov
mov
push
xor
pop
shlb
int
jl
loop
repnz
dec
dec
add
iret
and
lock
or
arpl
add
or
cld
xchg
push
fisttpl
adc
inc
mov
adc
int
push
inc
inc
inc
and
fcom
mov
push
cmp
add
nop
stc
int
mov
jle
push
cmp
hlt
aas
inc
lods
mov
out
push
push
pop
sbbl
fistps
nop
nop
test
shrb
mov
pop
nop
inc
lock
adc
xchg
daa
sub
nop
scas
lcall
jae
xor
icebp
call
mov
fs
mov
mov
test
out
mov
outsl
xchg
in
mov
pushf
std
loopne
ret
negb
sub
leave
insb
add
stos
std
pushf
inc
fistl
adc
pop
in
lahf
mov
pop
in
push
ds
jmp
mov
lea
outsb
xor
test
adc
and
pop
mov
push
jecxz
repz
movsb
sub
icebp
xlat
jns
inc
repz
ljmp
push
jle
add
ljmp
mov
mov
sti
mov
cmp
xlat
jne
leave
xor
adc
inc
mov
bound
add
adc
cmpsb
mov
gs
lret
icebp
push
lcall
aam
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
loopne
jo
hlt
push
sbb
adc
sbb
inc
and
mov
mov
std
clc
repz
std
and
sahf
in
pop
out
shrl
mov
insb
lret
scas
in
ss
xchg
cmp
flds
cmpsb
add
add
repz
data16
lea
cli
inc
orl
inc
rorb
ret
outsl
js
cmp
push
cltd
ret
inc
xchg
sub
movsb
dec
jg
pop
mov
adc
cmp
or
sub
outsb
daa
les
xor
add
push
lahf
xor
enter
pop
or
andb
mov
add
and
inc
mov
push
popf
mov
pop
lahf
cmp
lods
jge
push
pop
cmpsb
sub
pushl
dec
fdivs
shr
push
xchg
loop
rorb
pop
lcall
out
int3
cmc
lods
and
mov
push
sbb
repz
jmp
lds
cli
aas
or
sbb
cltd
inc
add
mov
ljmp
fcoml
out
cmp
mov
addr16
repnz
mov
jnp
aad
pop
stc
dec
pop
js
popa
adc
xchg
sub
or
lcall
orb
in
call
xlat
daa
fisubrl
cmpsl
lahf
idivb
movl
pushf
in
mov
loopne
mov
xchg
jle
mov
xor
adc
shll
popa
test
sub
in
and
or
fistpll
cmpsl
sbb
aam
mov
sbb
stos
mov
push
xorl
mov
repnz
xchg
test
cmp
mov
inc
dec
pushl
fildl
dec
fs
shlb
mov
mov
pop
push
push
xor
or
in
pusha
mov
int
lcall
inc
dec
insl
dec
test
pop
call
les
dec
test
out
xlat
lds
and
popf
icebp
mov
insb
jb
scas
scas
test
pop
sub
imul
fisttpll
rcll
push
cmc
mov
dec
inc
mov
sti
ja
lods
ret
cmpsl
cmpxchg
sarb
lret
pop
andb
aad
push
mov
repz
inc
xchg
cmp
fisubrs
xchg
out
gs
lahf
out
filds
lret
shll
loope
cmpsb
cld
push
shlb
pop
fdivr
inc
fidivrl
and
jp
xchg
push
xchg
and
pop
mov
lock
nop
lret
xor
pop
jnp
sbb
clc
leave
push
pop
cld
shlb
cs
xor
shll
cmpsl
out
and
std
stos
sub
sbb
stos
inc
jp
mov
push
jne
js
xlat
adc
xchg
mov
fiaddl
mov
fldcw
aaa
sti
nop
and
mov
in
out
mov
and
fdivrp
leave
mov
cli
xchg
mov
or
cmp
in
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
push
sbb
nop
ret
negb
xlat
int3
push
loop
sbb
cmc
sub
adc
push
push
inc
jnp
imul
mov
data16
xor
lods
ret
rcrb
test
mov
mov
cmpsl
out
pusha
xor
test
lahf
movsb
fiadds
lahf
rcll
push
cmp
out
fsub
scas
inc
movsl
xchg
aas
fidivs
paddb
jecxz
adc
out
push
lret
mov
js
fdivl
stos
sub
ljmp
outsl
out
mov
xor
add
lret
icebp
call
fcoms
ss
and
mov
loope
lock
adc
aad
push
push
ljmp
cmp
jno
test
xor
jmp
or
push
jae
pusha
mov
push
lret
or
mov
pop
push
pop
in
add
cli
aam
dec
add
jnp
sbb
cwtl
andb
jp
jecxz
push
stos
nop
aaa
imul
mov
data16
pushf
in
jle
in
or
in
jo
mov
not
adc
lods
jns
iret
pop
fistpll
daa
inc
jns
jmp
xchg
enter
inc
xchg
adc
xchg
jnp
xor
push
xor
or
mov
xchg
and
fisubrs
repz
push
push
cmp
lea
ss
mov
pushf
sub
outsl
lcall
iret
sbb
aas
lret
mov
jmp
stos
cmpsl
xor
mov
stos
push
dec
lahf
cmp
pop
sub
xor
icebp
in
insb
pusha
fidivrl
adc
cld
pop
fidivl
lds
sbb
stc
rcrl
adc
mov
mov
pop
loope
ds
notl
inc
mov
pop
ljmp
mov
pop
xor
das
mov
icebp
data16
inc
mov
cvttps2pi
in
clc
cmpsb
pop
cmpsl
jo
and
test
stos
out
sub
bound
lds
and
xchg
add
dec
loopne
icebp
daa
lahf
mov
sbb
push
ret
jno
out
adc
lock
ret
mov
push
scas
sahf
mov
fdivp
push
pop
inc
sahf
cmp
std
xor
sub
ja
push
test
cmp
repz
dec
mov
dec
aas
add
pop
add
sbb
xor
add
xor
ds
cmp
sbb
jbe
jp
ret
ss
and
out
fimuls
sub
jo
lahf
jbe
adc
sbb
pusha
out
push
dec
stos
jnp
jns
fadds
push
shlb
jg
pop
negb
jno
inc
pop
xchg
inc
and
adc
cltd
sub
roll
stc
stos
mov
mov
sbb
xor
fistpll
adc
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
pushf
idivb
and
push
xchg
retw
dec
pop
dec
rolb
mov
cltd
mov
loop
in
push
lret
in
and
jbe
xor
imul
jno
and
or
xor
sub
sbb
xor
sarl
nop
psrlw
imul
mov
mov
mov
lahf
inc
jge
sahf
lahf
loop
adcl
push
hlt
sub
insl
cmp
sbb
lds
lar
pop
cli
push
xor
repz
sbb
mov
push
push
ret
pop
sbb
mov
mov
add
cltd
into
mov
sar
mov
mov
push
popa
jmp
inc
xchg
cmpsl
mov
sahf
aam
hlt
fsubs
mov
xchg
pop
sub
into
outsb
out
in
shl
insb
test
leave
lret
pop
rorl
jge
inc
jns
adc
rcrl
inc
outsb
sub
scas
inc
xorb
push
cltd
fstps
mov
fldcw
jg
jne
gs
fsub
mov
loopne
xchg
out
pop
mov
mov
faddl
xor
fisubrl
inc
jl
mov
gs
out
add
loop
icebp
fcmovne
sbb
in
push
mov
movsl
adcl
mov
rclb
push
mov
push
xor
mov
dec
out
mov
in
dec
fbld
cmp
jecxz
pusha
sub
test
lcall
jb
iret
dec
and
pushf
testb
or
push
rcll
pushf
dec
clc
or
out
or
lahf
call
dec
sbb
lods
stos
out
inc
cmp
repnz
xchg
jg
pop
pop
pop
jbe
dec
insl
out
ret
lock
fcomi
cmp
movsb
jb
mov
sbb
mov
bound
mov
rep
xchg
mov
sub
pop
adc
outsb
dec
stos
push
xchg
movsb
loopne
shufps
aad
xor
xor
and
jnp
push
fmuls
in
fimull
adc
les
ds
dec
loop
xor
aad
sti
mov
lock
mov
adc
mov
add
inc
push
sbb
ret
mov
push
pop
neg
jns
inc
and
andb
lcall
mov
bound
push
jae
int3
jle
rclb
dec
movsb
mov
dec
push
adc
sub
add
sti
fiaddl
fidivrl
pop
das
outsl
inc
jecxz
je
dec
push
out
push
mov
in
mov
ror
das
or
pop
out
or
mov
xor
xor
in
rsm
mov
popf
add
mov
jb
push
pop
xor
outsl
jb
cwtl
rcl
clc
cwtl
enter
ficompl
add
add
pop
clc
aad
gs
mov
inc
xchg
and
xor
cld
test
arpl
xchg
in
xor
xor
inc
mov
add
lea
sub
in
xchg
dec
xchg
jge
pushf
outsl
imul
loopne
aam
mov
out
and
push
subl
or
xchg
mov
std
mov
push
fdivl
jbe
mov
dec
dec
js
pop
inc
mull
push
push
rcrb
in
mov
jae
cmp
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
call
sahf
xchg
mov
sub
divb
inc
and
push
jae
inc
mov
fnsave
les
add
xor
push
and
nop
mov
neg
or
test
outsb
xchg
sbb
xor
popf
mov
int3
sub
xor
mov
int3
roll
lret
mov
rorl
pusha
or
sbb
addr16
pop
cwtl
je
jmp
xchg
mov
js
popf
insl
cmc
lahf
inc
ret
movsl
push
pop
push
add
pusha
ret
push
cld
stc
adc
orb
push
stos
clc
icebp
lahf
mov
cmp
mov
adc
aad
iret
mov
mov
xchg
arpl
inc
push
stos
mov
xchg
pop
inc
loop
insl
out
adc
xchg
lods
dec
addr16
cmp
pop
mov
not
gs
sbb
testb
xlat
movsb
into
push
pushf
fsubrp
cmp
jp
and
js
xor
and
and
add
or
adc
fs
fcomip
mov
pop
icebp
shlb
push
popa
xor
and
xor
loop
mov
and
push
es
enter
fwait
mov
insb
sbb
inc
push
gs
cmpsl
dec
paddw
test
addr16
xchg
notb
aam
jmp
mov
pushf
jns
xchg
cli
enter
add
es
les
rclb
jno
mov
sahf
sub
scas
xor
push
rolb
iret
push
dec
pop
sarl
jmp
add
sti
ret
xlat
scas
mov
into
add
sub
pop
jo
out
fcomps
xchg
aad
sub
shll
cmp
mov
pop
push
and
leave
adc
and
imul
push
mov
mov
icebp
mov
popa
mov
push
dec
mov
push
aaa
xor
andb
xchg
dec
sbb
scas
mul
leave
bound
or
mov
outsl
rclb
ss
jbe
or
pop
in
rolb
push
and
pop
bound
lods
insb
mov
xchg
inc
filds
sub
sbb
pop
pop
dec
xchg
dec
inc
testl
jne
cltd
dec
iret
in
xor
sub
insb
push
sub
fisubs
jmp
in
inc
dec
scas
inc
fsubl
and
lcall
sbb
mulb
int
sarb
mov
je
pop
jmp
test
addr16
adc
inc
shrl
fnstenv
and
and
jecxz
mov
jp
lods
add
enter
ret
adc
mov
xor
sbb
push
mov
lea
adc
mov
adc
add
invd
push
dec
dec
outsl
mov
mov
or
adc
adc
in
add
mov
jge
popf
sti
or
cmp
and
mov
fmull
dec
sbb
ret
jnp
je
loopne
sbb
sub
aad
pop
mov
leave
stos
popa
scas
dec
cmp
insb
sbb
rorl
and
mov
adc
outsl
xor
jne
pop
imul
pop
mov
daa
pop
loopne,pt
test
or
inc
sub
xor
push
std
pop
lock
sbb
jp
jmp
adc
push
mov
fisttpll
movl
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
mov
stos
push
fsts
sbb
dec
daa
ljmp
mov
dec
adc
sarb
rcll
fdivl
bnd
ret
xor
and
out
mov
dec
aaa
cmc
shl
mov
sbbl
mov
enter
sbb
fcoms
aaa
xor
mov
dec
test
or
mov
inc
enter
call
mov
lds
mov
xchg
xor
jmp
popa
out
sbb
lret
pop
pop
iret
push
notl
xchg
mov
dec
mov
vandps
cs
cmp
cwtl
cmp
sub
mov
in
test
popa
call
stos
sub
mov
xchg
xor
arpl
out
stc
dec
xchg
mov
test
and
adc
pop
xor
cli
mov
das
inc
jp
cltd
rol
scas
inc
fwait
shlb
jbe
imul
test
insb
repnz
shrl
dec
lds
pop
xor
arpl
ss
js
ja
aad
loope
lret
mov
mov
mov
push
orb
loop
jmp
out
push
fsubrs
popf
or
mov
add
or
outsb
aaa
movsb
mov
outsb
jnp
fstpl
add
mov
sub
sbb
mov
jo
pop
pop
nop
mov
clc
pusha
lret
cmp
sub
push
mov
test
insb
mov
lock
sub
mov
jge
inc
sbb
mov
mov
mov
es
mov
sarl
jb
pop
push
jno
add
notl
adc
sbb
fmuls
jle
mov
cs
and
mov
enter
int
and
jl
adc
imull
xlat
iretw
jg
popl
cmpsl
mov
pop
cmpsb
aad
cmp
jp
std
inc
adc
push
sub
out
int3
scas
add
out
in
and
call
ret
mov
push
or
out
inc
add
mov
mov
mov
jle
outsb
xor
test
inc
lods
imul
ljmp
sbb
or
sub
sbb
test
outsb
cld
or
and
hlt
mov
push
jb
cli
repnz
out
cmp
and
pop
pop
movsl
fwait
enter
xchg
aaa
cmp
pusha
mov
lds
mov
iret
mov
push
in
mov
add
mov
adc
ds
fs
sub
lods
ja
adc
sahf
mov
or
push
sub
add
xchg
and
xor
sbb
out
dec
mov
adc
hlt
sbb
je
xor
dec
add
adc
outsl
sbb
push
cli
push
loope
pushf
out
out
jbe
or
shr
cmp
lods
pop
jp
xchg
and
pop
sbb
popa
shll
cmpl
repnz
fildl
icebp
clc
std
sub
jae
das
cltd
lds
insb
add
pop
repnz
push
test
jmp
es
sbbb
cmpb
ss
xor
lcall
ret
jl
push
movsl
cmp
xchg
ljmp
xor
cmp
add
add
movb
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
xchg
and
not
push
sbb
repz
mov
cmp
dec
in
out
lea
test
jo
mov
shll
outsl
stos
sahf
jnp
fisubrl
fidivrl
inc
dec
inc
fnsave
lock
scas
push
jl
repz
jle
jb
movsb
call
jge
scas
cltd
aaa
hlt
mov
fnsave
daa
aam
orb
pusha
or
popf
mov
cmp
inc
mov
add
icebp
inc
aad
pop
stos
lods
fdivs
push
scas
pop
stos
sbb
sbb
sub
in
nop
xchg
movsl
push
dec
pop
cmp
mov
sbb
dec
push
stc
mov
and
test
lds
sbb
xchg
push
fimull
in
or
imul
cmp
jae
xchg
ss
pop
sbb
mov
loopne
push
int
mov
hlt
or
pusha
mov
mov
dec
mov
into
pusha
pushf
xchg
adc
inc
fsts
add
aas
aad
fisubs
in
dec
hlt
insl
jo
dec
pop
mov
and
jne
std
int3
jne
jne
mov
pop
jl
lahf
lret
dec
or
push
repnz
aad
sbb
leave
push
pop
inc
js
rcl
xor
mov
dec
fdivs
push
sbb
mov
cwtl
cmp
bound
dec
push
cli
xor
dec
jge
orl
scas
out
scas
int3
mov
call
arpl
es
into
js
xchg
jge
in
ret
shrl
sub
aaa
xchg
inc
mov
das
mov
ficompl
shll
das
add
mov
fimull
ficompl
aad
and
lods
insl
prefetch
or
add
je
jle
dec
call
jle
andb
jecxz
inc
test
scas
pop
scas
mov
sbb
insb
cs
mov
cmp
cmpsb
mov
xchg
inc
flds
push
rclb
clc
xchg
mov
jl
xchg
mov
cmp
negl
lcall
daa
mov
ror
xchg
test
push
pop
jg
pop
stos
sahf
pusha
test
ss
push
in
andb
scas
jp
aad
sub
dec
adc
das
rclb
daa
outsl
test
sbb
int3
push
mov
inc
call
jp
push
xor
lret
lock
aas
in
lret
outsb
jle
jg
outsl
negl
sbb
lea
add
push
mov
jne
pop
or
mov
es
fildl
neg
cltd
pop
repnz
test
leave
les
enter
insb
mov
imul
ror
imul
mov
mov
mov
sahf
fs
sub
jmp
ror
xlat
lea
push
jl
jae
iret
push
inc
jg
and
cmc
sub
pop
push
loopne
sbb
push
lret
jecxz
xchg
into
jmp
addb
test
stos
mov
daa
inc
or
xchg
sub
scas
fcmovnb
hlt
mov
mov
jns
popa
rcrl
imul
ljmp
ror
sbb
pop
push
cmp
in
push
or
rcl
ljmp
loope
mov
ficoms
inc
jo
xchg
and
push
scas
mov
push
shlb
jl
and
cmp
addb
and
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
mov
stos
lcall
sbb
dec
sub
pop
add
add
and
xchg
dec
out
lods
lcall
sarb
jg
lret
xchg
add
inc
xchg
mov
jmp
push
lods
bound
clc
mov
add
xor
jecxz
mov
icebp
ficomps
lods
clc
fwait
lods
jne
dec
jbe
xchg
or
icebp
inc
lahf
stos
push
pop
in
sbb
fmul
xor
loope
sbbl
and
insb
scas
sub
cmp
mov
iret
inc
call
cmp
or
sbb
mov
xchg
lret
bound
add
pop
in
inc
pop
cli
mov
insb
dec
in
addr16
gs
pop
arpl
lahf
lods
test
and
lds
jbe
ja
out
in
sub
jmp
rorb
pop
stos
sub
cmp
jge
add
sarl
and
in
lods
mov
gs
adc
and
cli
rcrl
xor
push
dec
test
sbb
add
pop
cmpsb
mov
rcrl
mov
lock
adc
mov
ficompl
mov
and
inc
mov
jle
jp
js
pusha
sub
pop
arpl
pop
movsb
push
aas
lret
push
int3
in
jl
call
arpl
mov
and
pop
dec
repz
adcl
or
mov
mov
mov
mov
add
testl
or
pop
add
int3
sbb
rorb
jo
negb
jns
ss
pop
pop
xchg
or
out
dec
sti
cmp
pusha
push
mov
push
push
andl
xlat
mov
outsl
sub
repnz
stc
cld
adc
cmpsb
into
mov
ss
or
push
jp
push
push
mov
cld
jo
xlat
pushf
xchg
lahf
pop
xor
scas
xchg
mov
ljmp
xor
in
shrb
addr16
or
xchg
rorb
pop
inc
adc
xchg
push
mov
movsb
and
fcmovnb
inc
sarl
mov
hlt
cmp
dec
cmp
xchg
dec
fwait
xchg
dec
push
mov
fadd
cmc
lret
xchg
mov
mov
xor
test
sub
enter
sbb
hlt
adc
sub
mov
xor
ds
xor
add
cmp
dec
xor
mov
mov
adc
cmc
into
inc
mov
push
pop
mov
ja
addr16
cmp
dec
or
rcrb
sbb
jns
pop
add
repnz
into
shll
data16
sbb
push
mov
mov
fsubrs
dec
mov
cs
xor
mov
ret
iret
push
jmp
mov
sbb
repz
cmp
movsb
aam
div
push
adc
pop
pop
push
dec
sub
pop
fwait
and
xor
dec
pop
xchg
jg
lods
push
out
movsb
and
dec
ror
pop
pop
pop
push
cltd
cmc
pop
popf
negb
sti
lahf
jg
mov
inc
push
test
pop
test
mov
leave
mov
push
cs
mov
shlb
sub
lret
cmp
mov
shr
fs
and
lods
mov
sbb
xchg
sub
add
leave
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
enter
ret
push
sbb
loopne
mov
mov
xchg
in
push
mov
mov
lret
js
push
jle
jmp
cmpsb
jae
jne
jg
pop
inc
or
pusha
cmp
rclb
pop
cwtl
sub
pop
rolb
ret
adc
icebp
pop
fcomp
cmpb
mov
xor
sbb
or
int
push
push
je
adc
push
sahf
adc
ret
insl
adc
mov
cltd
scas
shlb
ja
daa
jp
cli
mov
jmp
lahf
or
adc
mov
fwait
or
test
mov
mov
enter
stc
jb
hlt
test
dec
jo
cmpsb
sbb
add
leave
insl
stos
jno
mov
addr16
mov
sbb
jecxz
cmpsb
roll
cld
xchg
cmp
xor
mov
sub
sub
inc
or
xor
inc
stos
inc
mov
mov
sbb
xchg
sub
xor
stos
sub
sub
dec
cmpl
ds
test
outsb
cmc
into
push
subb
aaa
inc
inc
repz
out
and
popf
sbb
idivb
fisttpll
leave
xor
sub
push
inc
aas
les
xor
mov
cs
leave
sbb
test
push
jmp
mov
adc
paddsw
push
adcb
push
vmovaps
mov
test
lods
push
pop
repnz
push
and
xchg
and
sub
iret
inc
add
adc
ret
mov
ljmp
jp
and
add
movsb
xchg
add
ss
pop
cld
push
sbb
ret
jb
xor
sub
fucomi
cmp
lods
jne
mov
repnz
jae
inc
xchg
pop
xchg
cld
jle
lods
pop
push
call
rol
hlt
nop
sub
jge
loope
cmp
or
mov
push
jae
fs
push
add
ljmp
push
ss
insb
mov
xlat
jne
cmp
xchg
jb
cmp
push
or
test
out
push
sbbb
pcmpgtb
and
test
mov
in
add
out
sti
jecxz
dec
pop
xchg
mov
mov
push
call
jp
cld
lret
mov
lods
cld
out
mov
and
jmp
adc
pop
scas
arpl
lcall
hlt
aam
jecxz
fistpl
pop
cmp
and
imul
xchg
mov
movsl
push
ficoms
das
test
mov
mov
add
ja
aaa
cmp
sub
inc
imull
dec
pop
pop
fdivl
add
scas
clc
jo
les
pop
cmp
jl
sti
inc
adc
loope
mov
lret
es
ret
es
mov
hlt
xchg
ret
fdivl
add
ret
push
push
push
fcmovnbe
hlt
hlt
cwtl
sbb
scas
test
adc
rorb
push
mov
xor
xor
jp
jg
sub
inc
fsts
das
add
insl
sti
sub
mov
pop
dec
push
xchg
in
jp
add
or
fnstsw
adc
sub
imul
lods
fildll
stos
faddl
push
nop
jo
lahf
int
dec
mov
negl
les
mov
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
out
jle
mov
sbb
dec
and
sbb
daa
pop
jp
call
mov
daa
ds
nop
pop
dec
xor
push
sbb
push
cs
sub
ret
leave
mov
jp
int
ret
sub
in
rclb
out
popa
stc
dec
leave
sub
mov
adc
pop
popf
ret
adc
and
push
push
ljmp
lret
call
and
jae
mov
inc
aaa
cltd
lods
imul
jne
and
fwait
outsl
pop
mov
test
js
sbb
adc
or
or
sub
add
or
inc
xchg
shrl
add
add
enter
scas
pop
inc
or
popf
xor
and
push
cmp
push
jle
pop
dec
jge
or
loope
in
out
fnstcw
je
mov
push
push
add
push
cmp
mov
push
stc
repz
xor
addb
mov
out
lahf
xor
and
and
pcmpgtd
and
cmp
mov
add
test
lock
add
popf
outsl
mov
jp
lahf
in
imul
int3
xor
divl
xor
loopne
add
ss
movsl
mov
sbb
push
mov
xor
xchg
pop
repz
outsb
movsl
cmp
push
jo
rolb
dec
jnp
repnz
mov
test
push
xor
dec
cld
inc
inc
add
xchg
push
cmc
insb
divb
cmc
dec
jp
and
sub
lods
lahf
test
insb
cmp
fwait
or
lods
push
cld
add
sti
decl
subl
jns
and
add
adc
clc
pop
shrl
xchg
bound
xchg
aad
dec
dec
clc
cmp
mov
sbb
cmp
sub
sub
cmc
jo
cmp
jl
mov
sbb
push
mov
das
scas
jno
push
adc
push
xchg
pop
clc
loop
push
mov
xchg
fs
push
test
xlat
adc
lea
inc
jns
mov
adc
adc
insb
shlb
xchg
imulb
mov
in
push
dec
mov
in
adc
popf
inc
movsl
push
je
jns
movsl
mov
mov
pop
scas
adc
sbb
repz
lahf
jae
cmp
mov
icebp
das
sbb
inc
out
popf
dec
adc
sbbb
ja
test
in
push
out
insb
rorb
cmp
insb
das
pop
pop
jo
pop
hlt
je
mov
test
pop
cld
cmp
sub
add
or
mov
sbb
push
mov
fldl
mov
jg
int
mov
cld
je
pop
shll
xlat
ror
icebp
or
pushl
insb
in
or
ja
cmp
pop
addr16
or
or
rol
sub
sbb
pop
jne
sarl
dec
std
out
adc
mov
stc
sbbl
add
mov
insb
clc
mov
cmp
xchg
lea
lahf
cs
or
rolb
pop
add
stos
inc
enter
roll
pop
and
mov
sub
push
sbb
jne
dec
sti
jl
sbb
lahf
arpl
sarl
xchg
dec
outsl
stos
aaa
mov
and
xor
pop
mov
ret
das
mov
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
test
imul
or
or
imul
sbb
cwtl
jmp
and
mov
lret
mov
shrb
and
scas
mov
leave
pop
adcb
sbb
rcr
sahf
iret
lret
jno
sbb
push
push
mov
fwait
stos
dec
dec
es
adc
fs
cld
subl
cmp
lret
and
push
pop
sti
xacquire
iret
ds
jmp
ja
adc
pop
add
movsb
sbb
fs
xor
stc
xor
cmp
and
ret
cltd
dec
repnz
std
pop
fs
cmc
xchg
lock
pop
fcmovnbe
ljmp
mov
xchg
dec
js
push
cmpb
repnz
js
and
sub
pushf
jmp
je
jecxz
ret
dec
mov
push
rorl
xchg
inc
notl
inc
or
cmpb
bound
fmul
push
fstpl
jecxz
gs
xor
or
mov
lret
in
add
inc
push
sub
mov
xor
scas
leave
iret
aam
mov
jae
inc
clc
or
xchg
inc
sub
xor
mov
and
test
dec
lods
outsl
pop
fimuls
ds
sub
pop
add
and
or
cwtl
leave
mov
push
daa
enter
sti
push
pop
fs
xchg
incl
shrb
ja
adc
dec
xchg
add
testl
mov
movl
inc
push
mov
test
pop
dec
jecxz
jnp
fcmovnu
lahf
rcr
test
negb
clc
push
pop
je
or
scas
jo
jnp
ds
add
fdivr
andb
inc
mov
or
push
test
dec
inc
inc
in
and
cmpb
push
sbb
int
xor
push
scas
inc
popa
jmp
lret
popa
hlt
insl
sub
mov
adc
ret
cs
gs
imull
int3
add
lahf
ds
and
xor
jl
imul
mov
orl
adc
orb
gs
or
cmc
test
loopne
xor
insl
jbe
push
inc
and
mov
mov
xchg
fadds
loop
pop
push
xor
lods
xchg
loope
mov
mov
pop
cs
add
mov
jnp
jp
rclb
pop
mov
ds
out
xor
int
aam
and
sub
dec
lods
pusha
ficomps
cwtl
jmp
mov
sbb
rcl
insl
ret
mov
jb
sti
aam
imul
push
adc
rcrl
aam
ficompl
inc
push
cmpsl
imul
sbb
sub
aam
sub
lds
icebp
xchg
adc
fldcw
cwtl
mov
in
jae
add
stos
mov
jae
pop
scas
out
lcall
xchg
imul
adc
lock
mov
pop
pop
cmp
push
int
ja
call
rcr
test
ljmp
lods
cmp
xorb
les
in
dec
add
loope,pt
test
das
pop
enter
or
fs
fwait
adc
cmc
and
mov
inc
cmp
shll
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
lret
mov
mov
xor
outsb
je
std
aaa
mov
jg
lods
jmp
sub
std
aad
test
and
sbb
push
xor
pop
mov
addr16
jmp
fs
push
and
sbb
mov
faddl
mov
cmp
test
fdivs
fnstcw
out
ds
out
xchg
ret
testl
push
mov
push
add
dec
lret
xchg
inc
enter
mov
mov
adc
jb
dec
fadds
loop
add
popa
lret
sub
test
test
testl
mov
ret
cmp
das
dec
pop
stos
or
add
ret
push
test
xor
in
sbb
insl
inc
pop
cli
int
jne
push
negb
ljmp
mov
inc
fmul
sahf
icebp
dec
test
xchg
subb
cltd
pushf
loope
or
adc
sbb
cmp
xchg
test
inc
jns
pop
movb
sub
repz
rorl
ljmp
je
loopne
mov
mov
lods
mov
or
inc
push
adc
iret
lret
fcom
add
or
repz
jns
cmpsb
push
testb
sub
jge
push
loop
jne
add
cmc
adc
pop
repnz
repz
mov
fwait
and
mov
lret
inc
lahf
aad
cs
and
mov
movsb
lret
cmp
add
jo
push
int
not
shrb
shr
push
clc
cmp
adc
mov
cltd
push
xchg
cltd
and
leave
dec
push
data16
push
adc
in
scas
mov
sbb
add
std
ret
lret
arpl
or
insl
add
jbe
jecxz
jl
or
leave
ja
jl
or
sub
cli
fst
neg
jne
inc
inc
jne
xchg
jecxz
int3
pop
sti
pop
fs
or
mov
test
sahf
sti
cmpsb
adc
dec
daa
clc
or
mov
dec
fadds
lock
and
shll
mov
out
in
sub
adc
push
xchg
dec
sub
push
add
mov
imul
mov
out
xor
inc
mov
jle
in
sahf
add
jl
cmc
aam
out
mov
sbb
pop
sbb
jnp
xorb
enter
fcomps
xor
push
pop
clc
xchg
fstps
pop
stos
std
popf
out
xor
repz
scas
sub
xor
push
ret
push
xlat
xor
nop
mov
inc
cwtl
call
adc
pop
mov
jle
sbb
xor
cmp
mov
fistpl
les
outsl
mov
xor
in
pop
lock
int
dec
sub
sbb
loop
xchg
sub
pop
lea
inc
mov
cs
pop
dec
adc
mov
sti
outsl
lcall
wbinvd
xchg
repnz
nopl
lods
fildl
loop
cmp
cmpsb
lods
mov
push
loope
ret
or
add
outsb
leave
sahf
push
cli
dec
sub
out
sbb
push
sub
xor
add
xlat
inc
push
xchg
nop
movsl
xor
fwait
sahf
push
subl
cmpsb
loopne
xor
xor
fwait
adc
xchg
ja
pusha
mov
rorl
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
add
dec
push
movsl
push
sbb
into
es
jmp
pop
rcrl
in
pop
jbe
xor
cmp
bound
sub
fistps
mov
push
aaa
out
cwtl
lret
mov
sbb
mov
dec
inc
sub
pop
ja
cwtl
push
fisttpll
sub
inc
sbb
int3
adc
leave
lods
das
inc
add
push
push
inc
mov
lods
jnp
or
xchg
fpatan
mov
fst
xchg
add
push
jp
lcall
lahf
xor
pop
mov
pop
rcrl
ljmp
imul
push
jns
inc
ss
mov
jb
cltd
mov
in
fisubs
cmp
bound
or
stos
aas
jecxz
and
out
rcl
int
cmpsb
mov
popa
mov
lcall
das
test
fisubl
rclb
cmpb
mov
fsubrs
push
arpl
push
sbb
and
dec
cs
int3
aaa
add
ds
shll
fsubrl
push
sbb
add
mov
or
inc
pop
scas
jl
pop
lret
daa
jg
fdivr
cmp
push
lcall
orb
push
pop
adc
mov
clc
mov
mov
adc
cmp
push
inc
jno
in
out
sti
aad
out
push
lods
jge
test
pop
mov
sti
movsb
lret
xor
cmp
jle
jno
and
inc
xchg
addr16
test
insb
add
hlt
adc
jmp
or
and
lock
cli
xchg
sbb
lret
ret
mov
jecxz
neg
pop
iret
daa
pop
inc
jg
ljmp
pushf
add
adc
dec
nop
les
stos
outsb
jecxz
inc
mov
add
stos
xor
outsl
push
add
jge
push
dec
push
pop
jl
pop
add
sub
mov
inc
and
sub
pushf
out
pop
or
add
mov
loope
push
dec
push
out
push
push
insb
push
inc
pop
push
xor
das
movaps
fwait
and
xchg
sbb
push
fdivrs
cmpsb
daa
mov
clc
loope
aad
jp
jmp
jp
dec
mov
cwtl
lret
pop
xor
adc
sbb
mov
mov
movsl
pop
xchg
lea
fistl
stos
mov
gs
pop
imul
ret
es
sbb
jecxz,pn
inc
int3
sbb
gs
and
sti
das
xor
insl
push
icebp
cmp
xchg
mov
jle
or
int3
and
sub
jbe
jo
jl
and
sbb
fwait
lret
and
mov
loop
xor
jnp
push
xor
xor
jo
ss
mov
shll
xchg
pop
insb
push
xor
push
mov
xchg
in
loope
inc
xchg
xchg
clc
ret
mov
std
cmp
push
jne
daa
pusha
xor
xor
sbb
in
push
pop
imul
cmp
mov
jno
and
daa
push
data16
out
or
xor
xchg
cmp
xor
sarl
mov
jle
xchg
shr
imul
sub
test
aam
mov
out
push
adc
mov
xor
inc
pop
dec
scas
out
ret
and
adc
hlt
dec
mov
xchg
pushl
jle
jne
outsb
xchg
xchg
aad
add
lods
and
cmp
push
mov
sti
rolb
movsl
leave
shll
dec
cltd
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
mov
orl
lcall
push
out
shll
out
fwait
xchg
cmpsb
test
pop
cmp
mov
pop
sub
test
lahf
cmp
inc
pop
push
jp
addb
dec
jp
lret
mov
fldcw
in
adc
movb
lods
inc
in
daa
shrl
dec
mov
push
sti
mov
sub
push
dec
jmp
mov
loopne
cli
and
or
aaa
inc
aas
iret
sub
subb
icebp
lret
jae
pop
add
xor
xchg
kmovd
dec
pop
in
movsl
inc
shll
rcrb
movsb
push
add
add
mov
pusha
and
adc
loope
jle
dec
xor
mov
cmp
adc
cli
sub
inc
pop
aaa
mov
mov
mov
cs
cltd
test
mov
add
imul
icebp
add
outsl
dec
xor
insb
fisubs
sarl
xor
xchg
mov
mov
loopne
jg
dec
mov
pusha
pop
repz
in
add
inc
int3
inc
fistl
xchg
mov
popa
imul
std
add
das
xchg
repz
adc
cmpsb
hlt
sub
dec
inc
mov
leave
push
inc
cs
jo
xchg
or
fidivrl
subb
jecxz
sbb
rorl
ljmp
inc
push
push
lods
out
insb
pop
call
xchg
cwtl
mov
mov
mov
xchg
lahf
movsl
sbb
scas
arpl
cmp
outsl
jae
popa
fwait
pusha
pop
mov
cmp
mov
push
aas
and
mov
push
std
test
cltd
lret
sbb
push
and
cmc
add
fldt
dec
pop
jg
xor
stos
ret
mov
inc
je
push
imul
cltd
xchg
adc
cmp
in
in
sub
fimull
call
mov
int3
sbb
jne
stc
pop
movsb
sub
xor
int
pop
push
cmp
mov
mov
fs
test
inc
movsb
or
cltd
data16
xor
mov
popa
aas
dec
cmpsl
jne
cmp
push
xchg
xor
outsb
fnsave
inc
xchg
mov
cmp
lcall
jno
iretw
sbb
push
loopne
outsl
loop
test
daa
xor
out
cmpsb
xchg
ret
notb
pusha
inc
shrb
cmp
add
sahf
outsl
mov
pushl
xor
xchg
int3
stos
mov
mov
push
es
cmp
pop
cltd
sbb
pop
xchg
jno
in
mov
insb
dec
or
jp
cwtl
rolb
cmp
xlat
mov
mov
loope
xchg
cmp
mov
push
popf
mov
cmc
cmp
das
rorl
sbb
sbb
icebp
mov
pop
pop
leave
push
cmpsb
leave
xchg
cs
jge
push
insb
jp
adc
es
sub
dec
in
mov
xchg
mov
push
call
pop
mov
jns
jecxz
mov
fwait
gs
xchg
mov
dec
test
enter
jbe
mov
dec
pop
xchg
and
cmpl
imul
dec
sbb
cmpsb
push
add
into
out
jecxz
cwtl
mov
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
cmpl
xchg
push
sbb
mov
fmul
mov
pop
in
sahf
adc
lods
popf
push
mov
cmc
into
andl
add
lcall
xchg
rclb
jo
testl
hlt
movsl
dec
jb
or
pop
cmp
lret
lahf
call
hlt
inc
fsub
outsb
sahf
sub
inc
pop
xchg
sub
lret
push
orb
rcll
cli
mov
cwtl
xor
cmpl
cmp
sub
sbb
sbb
pop
mov
xor
icebp
xchg
and
mov
lods
clc
dec
movsb
jne
fcompl
mul
mov
cltd
test
sub
test
daa
mov
mov
inc
lock
cmpsl
push
sbb
aas
or
js
stos
mov
jbe
adc
push
sarb
pop
sub
cld
xchg
gs
xor
jo
aam
and
inc
fildl
xchg
fimuls
xor
jb
out
call
inc
jl
fiadds
into
jge
jne
popf
mov
dec
push
enter
or
push
nop
jmp
arpl
fst
mov
mull
sbb
ret
es
nop
fadds
xchg
lock
xor
cmp
pop
push
xchg
inc
jbe
shrb
rep
push
cltd
mov
sti
aas
enter
lds
outsb
sub
incb
and
jp
mov
pop
shrb
int3
cwtl
andl
repz
push
imul
insb
xchg
jns
mov
inc
inc
shrb
xchg
inc
jg
fiadds
and
xor
sbb
push
adc
mov
imul
jno
cmp
ret
mov
push
add
push
out
push
mov
mov
xchg
dec
ret
test
xchg
cmp
inc
mov
jnp
push
inc
dec
test
in
loope
xor
pop
lret
lret
mov
cmp
stos
push
add
addl
mov
inc
push
xor
stos
mov
mov
in
jle
sub
cmpsb
xchg
loop
pop
lods
test
lahf
sbb
loopne
repz
out
stos
mov
rcr
jle
inc
imul
cmp
dec
jl
sbb
imul
gs
add
orl
gs
jp
popfw
dec
dec
push
add
jle
je
push
xchg
mov
pop
call
inc
cmc
ss
out
mov
mov
dec
jge
mov
dec
add
loopne
ja
cmp
lea
cmp
hlt
sub
sbb
mov
mov
out
lea
aad
popl
mov
emms
and
int3
pop
aas
movsl
push
inc
jno
fs
ds
add
pop
sbb
mov
push
loop
loop
xor
les
sbb
mov
and
xchg
adc
cmp
dec
iret
test
out
out
shll
xchg
add
push
jae
jmp
push
ficompl
sub
xchg
cmp
das
mov
mov
outsl
icebp
loop
pop
movsl
adc
cmp
lock
lahf
xchg
jbe
decl
xchg
dec
ss
jns
add
stos
clc
mov
xor
push
xchg
add
leave
insl
sbb
outsb
outsl
out
inc
js
das
repz
stos
popa
fadd
jg
out
aam
cmp
test
rcl
xor
scas
pop
and
bnd
jns
shrd
shr
mov
mov
mov
jmp
push
or
sbb
push
in
push
push
sbb
lds
add
xchg
das
and
xor
mov
inc
cmp
sbb
mov
cli
and
cmp
sbb
fists
jmp
mov
push
or
aas
xchg
daa
call
sarb
movsb
std
lret
cmc
bound
and
or
loopne
mov
mov
mov
xchg
xchg
push
adc
xchg
sahf
popa
fimuls
sbb
out
dec
push
pop
stc
sarb
fists
scas
pop
xor
sbb
ret
cmc
divl
xchg
pop
out
clc
jo
aas
jmp
xchg
out
add
pop
popf
sub
sbb
mov
aad
push
xchg
inc
adcb
adc
sbb
pop
xor
xor
cmovbe
mov
push
push
cmpsl
mov
fsubr
mov
test
mov
lea
and
cld
sbb
pushf
sub
xor
push
mov
stos
es
jge
dec
mov
dec
cmp
or
roll
arpl
adc
std
sub
rcll
mov
or
xchg
sub
mov
jmp
adc
fiadds
mov
push
popa
aad
es
or
xor
ror
pop
les
xchg
sbbb
xchg
xchg
jns
divb
pop
cltd
pusha
sub
adc
out
and
lahf
test
lods
xor
sbb
mov
clc
andl
mov
or
pop
cld
xchg
int
ret
xor
inc
sarl
cmpsb
out
ja
mov
sub
int
pop
xor
xor
divb
icebp
cltd
rcll
and
daa
out
sbb
add
jns
fsub
data16
std
push
data16
sub
in
jnp
dec
int
pop
dec
mov
fdivl
cmpb
sbb
fsubr
and
jne
jae
mov
mov
or
sub
jle
push
mov
xlat
and
fxch
adc
mov
dec
dec
xor
xchg
inc
push
and
dec
adc
lret
fwait
mov
push
mov
scas
jns
mov
lods
jo
mov
push
fadds
fcomps
inc
adc
cmc
iret
inc
sti
mov
pop
in
mov
sbb
pusha
rcrb
lret
cmp
mov
repz
out
nop
mov
movb
xchg
callw
lock
data16
sbb
lahf
push
cltd
jge
popa
mov
jbe
loopne
sbb
mov
pop
idivb
mov
aad
orl
sub
stc
imul
fstl
xchg
mov
mov
aas
cmp
stos
or
ja
sbb
pop
cld
adc
cmp
shlb
lcall
sub
in
push
adc
test
sbb
in
nop
out
cli
dec
or
frstor
push
nop
bound
and
push
mov
mov
fmuls
sti
ljmp
loope
dec
call
add
cld
dec
pop
clc
push
jl
rcrb
insl
insb
xchg
jae
mov
mov
aad
xor
mov
cltd
jbe
rcr
in
cmc
mov
dec
mov
inc
inc
lret
lahf
lahf
shr
nop
xchg
loope
rol
mov
sbb
in
loopne
sarb
in
or
push
adc
cwtl
cs
cmpsl
sbb
and
and
pusha
std
rcl
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
mov
push
mov
sbb
jge
sub
sub
push
pusha
or
and
and
xchg
dec
inc
sbb
fstpl
or
mov
mov
in
es
leave
pop
inc
push
and
lods
in
xchg
mull
aad
in
sbb
add
iret
je
sahf
repnz
pop
fldcw
jge
xor
insl
mov
sub
popf
cmpsb
or
imul
xchg
ret
mov
imul
arpl
outsb
add
ljmp
xchg
mov
xor
xor
sub
decl
xchg
lods
arpl
test
mov
push
dec
out
inc
pop
pop
pushf
cld
or
int
outsl
jp
rclb
sbb
mov
xorb
addr16
mov
call
pop
lahf
fisubrs
xchg
or
sbb
je
push
mov
jl
sarb
movsb
mov
outsl
lods
jge
fbstp
movsb
clc
or
inc
sbb
cmc
cld
xchg
mov
loop
outsb
in
add
cltd
cmpl
push
outsl
shrb
pop
mov
in
loope
or
je
mov
loop
sbb
xlat
test
push
jecxz
jo
popf
cmc
repnz
addr16
jae
sar
ret
imul
pop
add
xor
pop
pop
adc
pop
xor
xchg
xchg
lahf
ffreep
or
jae
xchg
loopne
push
push
int3
mov
jns
or
mov
paddw
push
sub
or
rcr
lahf
and
sub
gs
xlat
cmp
ljmp
cmp
mov
jb
sub
test
int3
scas
jmp
pop
mov
sub
pop
repnz
sti
aam
insb
in
lret
sbb
loop
pop
int
std
cmp
repz
push
xor
into
push
dec
mov
dec
add
shll
and
rcll
cmp
inc
enter
lods
test
jb
mov
sahf
pop
jne
int
imul
xor
adc
xchg
adc
cmp
xchg
inc
mov
and
xor
jp
lahf
jae
or
xchg
mov
aam
or
push
xchg
lcall
mov
push
dec
call
xchg
dec
jnp
push
mov
sub
enter
push
clc
dec
or
dec
ljmp
fldl2e
or
jmp
jbe
jle
cs
dec
js
shrb
lahf
mov
or
push
dec
fstpt
je
mov
push
push
mov
inc
out
popa
in
mov
push
push
imull
mov
test
mov
stos
mov
clc
mov
fdivl
aam
test
cltd
std
push
lahf
out
sub
mov
out
lods
pusha
jl
inc
icebp
je
out
push
imul
jbe
sbb
addr16
adc
popf
push
sbb
pop
dec
rclb
cmp
xor
mov
add
jge
addb
jae
lods
int
jno
lods
push
shlb
rcr
xchg
and
mov
jae
imul
dec
aam
nop
lret
fldenv
int
cmp
add
inc
jnp
jge
jo
cmp
push
inc
mov
dec
fimull
fdivr
jae
mov
mov
sub
adc
test
cli
sub
xchg
shlb
lret
push
and
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
mov
xor
sbb
jl
and
arpl
mov
jnp
iret
scas
fwait
pusha
sub
dec
and
ljmp
add
dec
shl
adc
lds
cmp
cmp
ds
jno
jge
push
scas
decl
fnstcw
cmpsl
xchg
or
inc
cli
cmp
jmp
sub
daa
cmpsb
xlat
mov
mov
push
lods
pop
jo
cs
inc
icebp
mov
repz
ret
mov
push
cmp
and
scas
xchg
sub
push
jge
pusha
cmp
fmul
dec
add
push
lcall
xchg
ret
and
mov
cmp
or
fcmovb
mov
pop
gs
inc
add
sbb
dec
xchg
adc
adc
fs
and
pop
jecxz
inc
lock
andl
cld
mov
cmpsb
mov
pusha
sbb
das
scas
aaa
outsb
sub
lods
dec
pop
cmp
dec
cmp
ror
push
xor
aam
dec
addl
shll
jle
enter
shr
mov
mov
pop
lahf
movsb
mov
in
push
push
in
mov
sbb
push
leave
les
repz
outsl
cltd
mov
mov
mov
push
arpl
shrl
int
sub
mov
fwait
lods
mov
scas
faddl
xchg
outsl
pushf
jnp
mov
ret
sbb
push
imul
movsl
outsb
jmp
add
mov
sbb
scas
add
pop
clc
shlb
gs
pop
out
and
arpl
loop
sub
lret
insl
pop
xchg
cs
lea
dec
xchg
loope
sbb
mov
inc
clc
push
inc
test
out
mov
push
les
in
sahf
jnp
push
cs
mov
sbb
in
loope
dec
cmp
push
sub
mov
jmp
mov
lods
mov
ds
mov
and
jp
cmp
pop
cmpsl
iret
outsb
loopne
mov
dec
mov
je
mov
ret
and
dec
in
sbb
mov
xlat
cs
stc
jle
mov
fistps
das
aam
fstl
loopne
xchg
xor
add
outsl
mov
hlt
aaa
xchg
pop
sbb
mov
cli
jno
sbb
out
sbb
jno
stos
mov
ja
pop
inc
xchg
ss
cmovbe
xor
leave
cltd
push
sub
mov
inc
inc
cmp
push
arpl
sbb
push
mov
cmp
inc
je
or
cmp
bound
ljmp
pop
icebp
inc
jle
sub
pushl
movsb
addl
push
cmc
xchg
stos
movsb
mov
push
xlat
jmp
in
arpl
cmp
mov
in
pushf
inc
mov
add
test
mov
jecxz
repnz
sahf
iret
movsl
jl
mov
pop
movsl
adc
dec
and
mov
jno
stos
arpl
test
das
and
inc
or
sub
mov
out
adc
cld
lods
jmp
fwait
jmp
xchg
cmc
inc
sahf
or
out
xchg
fidivl
mov
mov
test
xchg
xor
dec
hlt
addr16
sbb
into
cmp
mov
ss
push
cmp
out
cs
dec
enter
cmp
and
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
imul
sbb
inc
daa
jo
adc
sub
and
and
sub
mov
add
add
sbb
shl
daa
shlb
sbb
paddd
int
mov
lret
push
mov
mov
sbb
cmpsb
loop
pop
xchg
sub
aam
hlt
mov
outsb
repz
sub
roll
aad
int
inc
xor
dec
push
push
jle
sub
jne
or
jg
stos
pushl
das
jmp
adc
add
add
dec
mov
dec
cltd
rcrl
mov
or
roll
mov
shl
clc
push
inc
and
sbb
add
jp
push
adc
movq
popf
add
shl
in
jg
dec
fldl
loop
out
pushf
je
cwtl
into
lahf
loopne
xor
sbb
adc
insl
leave
aam
xorb
xor
xor
pop
popf
insb
jle
push
adc
lahf
mov
or
mov
mov
shlb
ljmp
add
loopne
adc
cmpsb
push
das
sbb
mov
in
add
inc
int
lods
dec
xchg
addr16
popa
dec
ss
xor
int
adc
std
push
xchg
ja
sub
out
push
repz
or
sbb
out
mov
lahf
or
jg
jo
pop
cmp
mov
clc
xor
out
lods
insb
inc
fnstenv
add
inc
push
aad
aad
pop
lds
push
jnp
lea
mov
mov
lret
in
sarb
out
loop
xor
xlat
xchg
mov
pop
in
mov
pop
rclb
scas
ret
sub
cwtl
mov
imull
mov
mov
mov
push
mov
ficomps
and
movsl
int3
das
inc
ss
push
int
bound
iret
frstor
rcr
pop
cmc
mov
cld
jmp
jae
xor
pop
dec
jle
out
inc
imulb
adc
scas
push
lock
test
aam
popf
mov
pop
dec
jecxz
sbb
xor
xchg
dec
jns
imul
out
jno
cmpsb
mov
mov
addr16
adc
mov
fs
sbb
pushf
xor
stc
int3
sbb
push
cwtl
jae
add
mov
xchg
cld
popa
fmulp
fsubrl
pop
sub
data16
mov
in
and
jmp
xor
sbb
adc
jp
rorb
cltd
shll
push
popf
dec
ret
clc
cmp
mov
adc
sub
insl
call
fbld
mov
dec
lock
adc
adc
movsb
movsb
adc
fcmovnbe
data16
into
inc
movsb
jp
sub
sbb
jne
mov
fists
in
lahf
sahf
fcmovnu
out
jl
pop
outsl
ds
xchg
fcompl
jge
inc
mov
test
movsl
push
sti
ret
push
push
movsb
insb
inc
repnz
ja
mov
addl
je
pusha
in
jl
sbb
xchg
mov
pop
push
dec
inc
pop
mov
call
cs
fidivrl
lods
imul
xor
cmp
mov
aas
sub
shrb
adc
pop
fstpt
pop
lods
test
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
decb
sbb
in
sbb
enter
push
addl
dec
popa
repnz
xlat
jae
mov
push
sub
sti
out
xchg
sahf
andb
or
jl
cmpsl
push
mov
aam
mov
push
jmp
inc
loope
scas
test
repz
cli
int3
cmp
lret
inc
fwait
xor
sarb
add
iret
shlb
pop
and
mov
insl
lods
mov
std
inc
lods
out
xor
mov
mov
adc
iret
mov
cltd
cmp
movsb
pop
mov
es
cmp
shr
sbb
push
popa
add
mov
gs
movsl
in
pop
shll
lock
imul
cmc
mov
daa
lods
fiadds
jg
testb
in
aaa
dec
stos
adc
mov
call
xor
sub
mov
sbb
iret
ljmp
lcall
or
pop
ficoms
mov
pop
jle
mov
pop
jg
les
hlt
mov
mov
or
dec
pop
mov
fwait
inc
xchg
push
cmpsb
mov
inc
dec
pop
insb
push
jg
lret
and
stc
pop
cmp
pop
xor
pop
jno
pop
hlt
in
mov
xchg
cmp
jge
lds
sub
scas
mov
add
enter
xchg
andb
or
cmp
mov
sub
push
xchg
cmp
hlt
in
call
push
loope
jb
cmpsb
or
jle
and
in
out
outsl
hlt
dec
mov
test
sbb
push
pop
fcmovnu
cli
in
push
lahf
push
push
xor
jne
inc
mov
add
pop
inc
add
inc
fucomip
jecxz
ss
mov
pop
cli
mov
movsb
subl
xchg
les
icebp
inc
or
or
mov
push
fiadds
and
nop
mov
aad
add
xchg
ret
xlat
test
mov
daa
adc
dec
jge
pusha
data16
pop
push
inc
and
xor
iret
mov
inc
rdpmc
jl
mov
dec
fisttps
xchg
out
out
in
loop
test
sbb
inc
inc
mov
pop
cli
sbb
aaa
xchg
testl
bound
inc
push
mov
sbb
ljmp
adc
push
inc
xlat
pop
mov
push
cmp
loop
ljmp
ljmp
jbe
rorb
orb
ds
ret
push
pop
cltd
add
mov
mov
xchg
cs
pop
sub
popa
xchg
cmc
int3
pxor
mov
dec
mov
mov
cmp
lods
mov
mov
push
lret
xchg
inc
imul
in
add
push
sbbl
dec
roll
cmp
mov
popa
call
xchg
mov
push
xchg
dec
cmp
xchg
cmp
jle
ret
cmc
xor
out
arpl
repz
rorb
or
loop
mov
mov
inc
inc
sbb
gs
cltd
call
lret
xacquire
sbbl
test
outsl
push
fmul
inc
test
dec
bound
ljmp
movsb
shr
pop
popa
pop
in
adc
es
add
lcall
ret
add
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
cltd
das
outsl
mov
imul
mov
xorl
pop
cltd
xor
insl
dec
sub
xor
pop
lahf
and
sbb
ficoml
pop
call
in
std
xchg
repz
and
inc
sub
imul
dec
dec
mov
xor
rorb
inc
lret
add
fsubrs
sub
dec
lods
sbb
cmp
cmpsl
lret
jg
ljmp
cld
xchg
mov
and
inc
int3
push
xchg
mov
sbb
jmp
fiaddl
lock
lods
lret
pop
loope
sbb
fisubl
push
lock
nop
jnp
lods
icebp
mov
les
or
inc
add
and
addb
into
mov
xchg
cmp
aaa
insb
out
cmp
sub
std
jg
aas
adc
adc
xor
sub
or
cmp
mov
adc
test
sbb
cwtl
dec
add
std
std
ds
cmpb
mov
dec
pop
jmp
cs
or
les
add
or
imul
loop
dec
inc
jle
mov
sub
lea
aaa
ljmp
in
lahf
pop
push
cmp
adc
bound
ja
lds
fnstsw
or
xor
sub
jl
dec
sbbl
jmp
jp
sub
into
or
add
pop
and
inc
lea
insb
rcl
sub
dec
es
jle
lea
cmp
out
dec
imul
xor
inc
mov
jae
or
xor
in
dec
adc
repz
inc
orb
sub
adc
jae
cmp
add
test
add
jns
mov
xor
xchg
sbb
negb
pop
mov
sub
pushf
xchg
xor
jne
in
jmp
mov
aaa
addr16
dec
sub
sub
cmp
xchg
adc
int
cld
pop
adc
hlt
mov
cld
inc
and
mov
adc
and
popa
mov
ja
mov
in
push
test
fs
dec
cmp
aas
pop
jecxz
dec
stc
bswap
fs
mov
sub
pmaddwd
das
sbb
pop
xchg
and
std
dec
add
scas
shll
pop
and
cmpsl
and
or
cmp
fdivl
dec
in
mov
push
clc
jns
jne
dec
push
pop
insb
adc
repnz
popa
lret
add
popf
js
jae
xchg
clc
rcr
fidivs
add
mov
cli
mov
lods
les
orl
cmp
mov
pusha
mul
mov
ljmp
push
arpl
int
iret
pusha
inc
lock
sub
mov
xchg
ss
sub
adc
cmpsl
notl
sbb
jmp
lahf
shlb
xchg
mov
mov
lds
push
jnp
sub
jno
fistps
adc
enter
xchg
dec
ss
pop
mov
fisubrl
jge
loopne
push
popa
cmp
cmpsb
cld
outsb
out
lahf
xor
stos
sub
mov
aad
inc
pop
add
orl
jae
lea
add
cmp
popf
test
inc
sub
sbb
cmp
stc
cmp
lret
jg
mov
fs
cmc
mov
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
inc
daa
loop
testl
sbb
insb
or
aad
ja
jle
xchg
aad
push
je
inc
imul
jl
dec
adc
mov
dec
scas
pushf
mov
inc
iret
cltd
pop
in
push
cmp
rol
mov
pop
shrl
pop
ret
test
rcll
cmp
pop
bound
insl
push
xor
sub
pop
mov
repz
mov
jl
jecxz
je
jl
jo
sbb
adc
mov
push
inc
mov
add
inc
test
adc
xor
cli
mov
lock
sbb
pop
adc
cmpxchg
icebp
jnp
fsts
andb
jge
mov
sub
out
mov
out
mov
mov
aaa
dec
addr16
bnd
testb
cld
cwtl
in
push
dec
test
and
es
and
adc
lret
mov
add
mov
xchg
xor
cmpsl
mov
push
sub
ret
ret
cwtl
sarb
or
repz
in
pop
sub
gs
negl
pusha
adc
inc
push
in
sbb
int3
es
add
push
or
pop
cmp
cmp
dec
dec
dec
dec
cmpsb
inc
repz
mov
inc
jbe
je
add
loopne
pxor
pop
pop
pop
jmp
lahf
dec
and
pop
orl
dec
outsb
fwait
into
jle
les
pop
les
inc
dec
jl
mov
push
lcall
inc
lds
scas
je
rcrl
sub
mov
icebp
add
cmp
mov
insb
adc
test
push
xor
dec
pop
incb
movl
dec
inc
mov
xchg
inc
lods
lods
in
js
scas
adc
push
imul
xor
fucomp
fists
pop
movsb
push
pop
xor
test
xchg
les
xchg
nop
xchg
inc
test
or
cmp
mov
movb
in
in
leave
popa
or
mov
fadds
imul
scas
lss
adc
xor
cs
repnz
cmp
xor
pop
ljmp
andb
mov
mov
scas
outsl
scas
lret
outsb
jle
adc
dec
es
cmpsl
dec
in
cwtl
int
imul
dec
in
jge
rcrb
mov
idivl
push
and
shll
jno
add
mov
or
ds
push
mov
inc
add
scas
les
fld
ret
outsl
pop
into
into
aad
fldl
add
ret
adc
sbb
leave
enter
lret
stos
fisubl
sbb
clc
inc
mov
movsb
add
bound
shll
lea
jge
mov
cltd
dec
pop
mov
lcall
mov
lods
int3
leave
pop
pop
xor
cs
cmp
push
sti
xchg
or
dec
sbb
pop
xchg
push
dec
fcomp
popa
popa
js
push
imul
stc
dec
push
sbb
aaa
pushf
push
mov
leave
imul
pop
lret
mov
repz
inc
movsb
xor
or
shrl
jno
mov
imul
mov
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
sbb
stos
ss
push
sbb
aas
sub
mov
jmp
and
out
mov
mov
cmp
mov
loope
scas
cmc
xchg
int
imul
push
cmp
dec
sbb
push
inc
pop
adc
xchg
jnp
sub
out
adc
jmp
lahf
repz
xlat
int3
or
jl
or
in
sarl
xchg
decl
cltd
mov
mov
sbb
sar
lahf
mov
and
pop
mov
es
dec
nop
adc
push
push
int
pop
mov
inc
aam
push
fcoms
in
popf
mov
sbb
popf
hlt
aam
jl
ljmp
lds
push
pop
mov
lret
dec
adc
or
lcall
mov
inc
aam
out
fisttpll
dec
push
call
popf
or
stos
sub
rcrb
ret
and
mov
aas
les
mov
cmp
xor
bound
dec
int
pop
sub
push
cmp
mov
imull
push
sbb
adc
dec
repnz
push
clc
push
add
jo
mov
dec
jge
pop
arpl
mov
sbb
inc
addr16
xor
mov
sub
push
stos
cmp
divl
cwtl
sub
movsl
sti
pusha
repz
jns
mov
sbb
push
add
stos
jge
mov
sub
int
or
les
push
aaa
and
lcall
cld
xchg
inc
mov
fcomps
test
in
xchg
hlt
fcomi
or
rorb
add
pop
int
idiv
ds
sbb
and
stos
mov
jle
pop
imul
in
cwtl
jg
faddl
dec
test
xchg
stc
inc
dec
in
fs
jecxz
mov
aas
mov
popa
in
popf
xchg
rcrl
jne
xchg
push
and
adc
leave
inc
sub
pop
lahf
loop
jae
jnp
pop
push
test
adc
adc
enter
ja
xchg
inc
insb
adc
inc
dec
mov
jno
out
not
or
cmpsl
sub
lds
orb
mov
fldt
ja
aas
aam
rcrl
sbb
loop
jbe
stos
adc
out
arpl
std
inc
out
mov
inc
cmp
sahf
stos
jnp
pop
or
sub
roll
or
sub
jl
mov
shr
ficoms
xor
push
or
push
aas
mov
pop
and
fldenv
sbb
push
pop
shrb
int3
mov
push
push
ss
mov
test
and
sbb
ret
mov
add
mov
dec
stos
jle
fcmovnu
push
mov
call
ljmp
aam
mov
jecxz
jmp
sti
inc
sub
andb
lret
pop
movsl
fcomps
out
inc
lret
movsb
test
fwait
dec
adc
movb
loopne
jo
inc
xchg
jge
addr16
bound
mov
xchg
clc
push
sbb
push
sbb
xchg
and
mov
js
pop
xchg
pushf
mov
out
addr16
push
push
fcoms
sbb
push
das
fldl
push
mov
inc
jne
and
pop
iret
jge
pop
mov
rcll
jg
mov
sahf
jmp
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
mov
push
push
push
sbb
xchg
es
xchg
xor
arpl
imul
enter
xchg
dec
pop
inc
dec
dec
jb
xor
xor
call
cmp
mov
jae
imul
or
lock
out
jb
mov
gs
xor
pusha
cld
cmpsb
aaa
shll
incb
cld
adc
inc
dec
or
dec
cld
mov
inc
in
push
xchg
adc
cmpl
shll
test
scas
pop
push
lods
icebp
push
aaa
in
or
mov
mov
xor
popa
add
rcrl
stos
push
into
xchg
or
lds
mov
repz
enter
lods
sti
add
dec
add
inc
cwtl
cli
pop
push
int
sbb
and
pop
pop
jns
jge
in
aas
adc
movsb
mov
cmc
fidivl
xlat
adc
or
or
gs
push
mov
out
decl
aaa
jmp
pop
cmp
jecxz
in
adc
les
jecxz
add
jne
mov
xchg
adc
incb
adc
xchg
push
jne
testl
jbe
mov
das
mov
fisubrl
sub
fildll
push
sub
clc
xlat
jg
mul
outsb
xor
fs
dec
xchg
mov
test
cmp
lret
cmpsl
mov
outsl
push
dec
fiadds
mov
out
xchg
jl
cmpsb
pusha
xchg
hlt
int3
addl
idivb
push
inc
sub
jo
push
jmp
pop
lds
mov
fwait
ret
cld
cld
or
loope
fsubl
or
or
mov
in
push
mov
ret
adc
sub
jle
js
adc
dec
jmp
jno
imul
jle
push
sbbb
fwait
inc
fadd
cmc
cmc
xchg
sbb
test
cmp
imul
cld
jge
movsb
addr16
stc
popa
dec
push
lret
imul
cmc
xor
mov
loop
sub
mov
push
pusha
out
pop
cmpb
imul
xchg
scas
lock
cmp
pop
adc
add
int3
sub
ljmp
flds
jp
push
mov
cli
mov
cmp
and
or
cmp
lea
imul
faddl
pop
loope
into
adc
pop
stc
xchg
loope
outsl
loopne
xor
mov
or
pop
add
xor
rcr
and
add
push
pop
shll
dec
out
push
inc
dec
test
pop
inc
push
mov
test
or
dec
jecxz
xor
fsubr
andb
inc
jmp
mov
sub
add
inc
fld1
ljmpw
xchg
pop
mov
popf
leave
jo
popa
mov
iret
lahf
je
loopne
mov
pop
inc
test
out
jge
lock
ret
aas
filds
cmp
inc
dec
cmp
jg
jecxz
sbb
cmp
bound
iret
iret
push
pop
xor
das
das
in
add
cmp
xor
hlt
mov
sbb
inc
inc
xchg
addr16
add
cmp
lahf
mov
xchg
mov
leave
pop
cwtl
dec
mov
sub
insl
ds
ja
jnp
iret
fnstcw
mov
repz
loopne
add
nop
dec
dec
mov
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
mov
mov
adc
mov
dec
rorl
in
stc
int
mov
pop
xor
xchg
sahf
lods
mov
jne
mov
test
xor
rcll
test
das
adc
xor
out
jns
xor
sub
add
cs
mov
sbb
cmp
cmp
test
je
dec
test
jge
lcall
jno
adc
lds
test
pop
stos
fmuls
mov
push
adc
jge
sub
mov
or
pop
pop
ja
cmp
mov
push
mov
and
pop
dec
stc
add
aas
push
inc
in
rcr
sbb
test
bnd
mov
mov
fneni(8087
push
inc
or
mov
adc
rcll
sbbl
add
loop
aas
test
cmp
loop
lock
sbb
jle
cmp
in
or
inc
push
push
aam
dec
jg
push
mov
mov
lock
cmc
xor
or
push
inc
adc
icebp
sahf
fldl
ficompl
pop
fstl
pop
dec
fwait
ret
sub
call
push
mov
xchg
inc
jecxz
out
inc
lret
insb
or
fimull
jns
es
addr16
xchg
test
inc
enter
mov
sub
popf
das
adc
jle
jb
addl
in
push
jl
xchg
repnz
pop
push
addr16
mov
cltd
and
popa
stc
ds
and
insb
or
lahf
mov
and
dec
scas
xlat
add
jp
push
mov
push
iret
dec
popf
push
push
fs
pop
and
push
dec
dec
ret
adc
stos
aam
mov
iret
std
mov
lcall
mov
push
in
mov
push
mov
fcomi
xchg
sbb
sti
int3
add
jmp
adc
sahf
daa
cmp
jge
std
ffreep
cltd
adc
out
cmpb
push
mov
iret
pusha
or
sub
and
and
stos
xor
in
es
xchg
xor
icebp
mov
ljmp
shlb
andb
pop
pushf
mov
add
and
pop
stc
cmp
loopne
orb
lods
int3
jns
adc
mov
jno
scas
mov
mov
and
mov
inc
dec
test
std
cmpsl
addr16
sbb
ljmp
inc
cmp
sbb
add
mov
adc
je
jl
sbb
shrb
mov
nop
pop
popa
pop
adc
push
in
pop
sub
mov
addr16
add
mov
leave
clc
mov
and
test
fimuls
pusha
ret
adc
aam
sbb
out
sub
mov
inc
adc
lret
rorl
in
pop
pop
imul
das
or
in
xor
dec
pop
jecxz
shr
pop
xchg
mov
outsl
or
and
jmp
xor
pop
fsubr
dec
inc
pop
mov
push
xlat
xor
rorb
sub
testb
flds
dec
and
enter
rcrl
repnz
aam
pop
xor
adc
jns
fs
cmp
mull
repz
fucom
ja
loopne
xor
fildl
notb
sub
aad
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
push
push
sbb
fidivs
inc
hlt
andl
add
addr16
andb
cwtl
sub
std
fwait
jno
xchg
aaa
adc
shlb
loope
dec
inc
insl
mov
jbe
pop
lods
fsubrs
scas
cmp
add
adc
adc
pop
and
out
xor
jne
out
and
jne
shrb
pop
mov
dec
rcrl
mov
mov
vmovntpd
and
adc
lret
enter
mov
fwait
mov
shr
sub
adc
inc
movsl
xchg
frstor
adc
call
scas
sub
pop
fsubrp
fildll
sbb
out
mov
dec
and
jmp
ret
imul
push
in
cmp
cli
outsl
jns
cld
daa
jecxz
int
imul
xor
adc
repz
jle
test
nop
and
sti
mov
scas
xlat
mov
xchg
or
push
jns
outsb
aad
in
loope
daa
pop
mov
inc
dec
mov
movl
aad
push
cmp
leave
jns
aaa
and
outsl
shll
xchg
outsb
orl
xor
enter
aam
aas
xchg
aas
test
sti
arpl
push
xchg
int3
mov
mov
xchg
fwait
nop
cmp
sub
push
lahf
xchg
cwtl
xchg
sbb
xchg
cmp
ret
imul
push
dec
xchg
xchg
push
cmpsb
xlat
dec
jo
icebp
mov
push
in
inc
xchg
inc
inc
cmc
pop
dec
push
enter
dec
push
sub
and
mov
sbb
xor
test
pop
test
imull
ja
out
xchg
and
xor
cmp
add
arpl
push
dec
and
adc
mov
popa
fldenv
sbb
mov
or
iret
mov
out
das
jmp
pop
int3
adc
mov
xchg
push
addr16
movsb
push
and
in
test
leave
sbb
loop
lret
dec
shr
adc
mov
inc
push
out
or
or
ljmp
inc
mov
and
stos
push
test
xchg
mov
call
repnz
movsb
sub
loopne
jnp
data16
xchg
jle
ljmp
adc
aad
and
je
js
loopne
cld
movsl
add
arpl
mov
xchg
mov
lods
add
fsts
test
in
orl
pop
iret
pop
aad
add
xor
xchg
subb
xchg
and
mov
inc
lods
cltd
cmpsl
xor
call
aad
cmp
leave
fisubrl
sub
xchg
repnz
mov
dec
sbb
pop
push
dec
call
leave
ret
mov
std
add
inc
cmp
mov
int3
push
cmpsb
push
cmp
data16
mov
pusha
mov
sub
stos
add
rclb
pop
cmp
lcall
pop
sbb
and
mov
adc
idivb
cltd
es
fbld
scas
cmp
lea
clc
ljmp
push
cltd
cmp
insb
inc
inc
or
push
pop
inc
inc
mov
rorb
push
push
xor
inc
inc
aaa
nop
inc
gs
aas
dec
inc
int3
fdivrl
hlt
ds
inc
and
sbb
add
inc
ret
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
lret
imul
sbb
lret
lea
or
push
stos
jne
lcall
int3
jo
ret
jmp
mov
fwait
xor
nop
clc
push
and
dec
mov
adc
xchg
repz
nop
xchg
je
rcrl
inc
xchg
mov
jnp
idiv
dec
push
into
fisubs
cmp
mov
aaa
scas
pop
xlat
mov
jecxz
pusha
ret
fs
push
sub
mov
xchg
das
cmp
or
ret
adc
add
loop
rcrb
out
aas
pushf
addl
cmp
popa
mov
mov
andb
jb
mov
xor
outsb
cmp
and
orb
dec
je
sahf
mov
sbbl
fucomp
jne
clc
mov
scas
jno
pop
leave
bound
rclb
js
xchg
mov
into
arpl
aad
in
fsubs
xor
repz
inc
movsb
jae
xor
xor
push
sti
adc
pop
aas
or
jecxz
adc
adc
sbb
dec
rcll
es
stos
sub
lds
adc
imul
das
cmpb
jge
sti
xlat
mov
xor
divl
or
aaa
inc
adc
mov
push
cmp
pop
mov
aad
xchg
cmpsb
rolb
jno
cmp
pop
cs
inc
and
jp
inc
repz
mov
mov
and
lcall
inc
fwait
sub
je
into
xor
jne
push
push
in
adc
and
ss
cld
inc
fstl
mov
test
cmpl
mov
sbb
std
xor
dec
dec
cmpl
adc
fnsave
or
sbb
inc
mov
insl
xor
mov
inc
jge
inc
push
jb
arpl
cmp
in
rcrl
mov
xchg
xchg
xchg
sbb
mov
aaa
js
jmp
fs
mov
sub
inc
xorl
pop
push
sti
pop
push
mov
push
pop
dec
or
mov
jns
jmp
mov
add
push
je
adc
ja
lret
add
push
mov
push
mov
xchg
pop
out
push
repz
in
push
inc
or
inc
adc
shrl
push
jno
imul
push
add
das
push
sbb
or
adc
add
and
mov
jle
xchg
pop
adc
mov
nop
jmp
pop
insl
cmc
adc
shrb
jmp
xor
dec
nop
xlat
sbb
xor
pusha
repz
adc
cmpsb
or
jb
jns
adc
fs
out
ss
js
mov
cmp
sahf
mov
es
aaa
jp
jb
dec
or
movl
xchg
dec
aaa
movsl
dec
call
pop
mov
into
idiv
sub
orb
push
dec
int
sbb
adc
xor
addr16
or
xlat
pop
pop
orb
and
jl
fistps
stos
cmpsb
test
ret
fwait
mov
xchg
jg
jno
aaa
iret
inc
popa
out
sbb
cli
imulb
lret
pop
cltd
jns
out
mov
shr
add
add
and
xor
nop
push
stos
imul
sbb
pop
daa
test
jne
cmc
pop
add
fbstp
cmp
push
es
push
aas
dec
aad
dec
cmpsb
lret
fists
test
or
je
sbb
aam
stos
pop
push
fs
mov
cmp
nop
aaa
and
mov
or
mov
rcr
sti
int
adc
sub
xor
pop
push
or
dec
mov
mov
std
in
inc
pop
outsl
mov
mov
mov
inc
jb
sbb
sbb
cmp
lods
sub
or
dec
sub
int
lcall
mov
test
shrl
pop
pop
fs
ficompl
adc
sahf
jmp
mov
std
int3
shll
pextrw
in
repz
mov
mov
in
mov
sbb
pop
lock
aam
fs
or
aas
add
jns
int
adc
shlb
loop
or
incb
cld
cwtl
sbb
addb
sub
add
cmpsb
pushf
ljmp
or
mov
jmp
in
bound
hlt
pusha
xchg
sarb
test
in
data16
cmp
and
add
xor
outsb
ds
xor
add
mov
or
cld
push
daa
xchg
insl
arpl
fdivrs
fucom
jo
inc
shlb
aad
jle
pop
or
add
dec
das
mulb
jne
jl
add
clc
nop
out
dec
imul
popf
xchg
add
jo
imul
mov
ds
sub
pusha
and
in
fildl
jae
clc
cmpb
aam
xchg
mov
ss
mov
lds
adc
cmp
mov
xor
xor
sub
stc
and
mov
imul
and
mov
adc
rcr
in
je
out
stos
mov
xchg
xchg
inc
cwtl
jns
mov
roll
inc
cmp
dec
rolb
mov
data16
aas
loope
push
mov
insb
mov
pop
dec
or
out
dec
and
stc
xchg
jae
xlat
shll
int
ret
mov
lret
mov
sbb
jae
dec
sub
cmpsb
dec
test
mov
test
lret
push
sub
jl
movsl
xchg
dec
movsb
push
jle
sbb
fs
aaa
pusha
push
jo
jle
stc
push
iret
in
pop
push
adc
fsubl
pop
test
aam
repnz
fbld
mov
ljmp
arpl
mov
or
or
xor
int
stos
or
push
pusha
loopne
imul
sbb
mov
xchg
and
loopne
leave
call
add
sub
lret
cmpsb
iret
or
or
pop
sub
cli
std
jge
out
inc
test
cmp
repz
dec
sbb
sahf
jbe
xlat
icebp
std
in
lcall
lcall
or
addr16
stos
mov
rol
iret
push
cmp
mov
std
lret
dec
jl
adc
popa
inc
jmp
adc
adc
jnp
in
out
jbe
popf
push
dec
xor
and
ja
mov
es
stos
out
iret
mov
and
ret
ret
sbb
cmpsl
pop
clc
shl
into
adc
xlat
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
sbb
sbb
fisubs
movsb
xor
mov
arpl
xor
aaa
fiaddl
add
jne
int3
ds
and
mov
jbe
out
inc
xor
ret
ja
mov
les
push
push
stos
mov
lock
insl
adc
mov
dec
and
mov
insl
mov
xlat
adc
jb
xchg
mov
pop
and
int3
xchg
inc
mov
pop
sub
int3
jo
add
scas
jne
mov
inc
sub
push
push
lock
fcoml
fbstp
bswap
inc
sbb
and
outsl
fistl
lods
jns
pop
mov
std
mov
inc
aaa
mov
xor
ds
and
aad
sti
jbe
lahf
hlt
mov
gs
jl
inc
ds
jp
cmp
lea
inc
pop
push
xchg
movsb
jnp
arpl
scas
lret
jo
rcrb
scas
dec
inc
add
sbb
ficoml
push
mov
fincstp
fdivl
lahf
repz
aad
sahf
xchg
cmp
outsl
mov
mov
in
jno
xor
cli
xchg
shl
xchg
aam
xchg
or
mov
mov
dec
push
icebp
xor
fdivs
cmp
test
scas
into
enter
jge
into
jae
xchg
push
xchg
push
sti
inc
add
cmpsl
and
xor
dec
data16
pop
adc
mov
je
mov
xchg
popf
into
add
adc
push
js
aaa
aam
jmp
jbe
cmpsb
pop
xlat
xor
adc
test
fsubs
dec
data16
push
inc
jae
mov
mov
push
out
in
test
andl
mov
lods
js
leave
lcall
mov
lcall
xor
sub
stos
jno
mov
cmp
xor
and
dec
fst
or
push
jg
ja
ljmp
xchg
and
push
int3
lahf
test
test
xchg
std
sub
or
repz
repz
cwtl
hlt
xchg
lods
addr16
xchg
movsl
fiaddl
sub
jmp
test
lods
sbb
adcl
inc
mov
leave
cmc
stos
fidivs
mov
mov
xchg
and
lret
movsb
andb
xor
hlt
fs
and
mov
jno
sti
cs
lods
push
cmp
dec
mov
push
inc
call
mulb
mov
cmpsb
mov
test
fbstp
pop
outsl
push
insl
mov
mov
xor
cltd
adc
bound
jae
pop
je
sbb
sbb
mov
cmp
push
cs
mov
out
push
shrb
xchg
xchg
push
mov
fwait
sub
insl
ljmp
addr16
mov
adcl
add
xor
xor
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
mov
mov
fbstp
pop
lcall
mov
rorb
xchg
sbb
bound
mov
and
fwait
xor
jno
inc
jo
fbstp
sarl
into
pop
test
sub
xchg
add
mov
push
insb
add
fs
mov
rcll
nop
fucom
jns
push
push
hlt
cwtl
or
or
loope
mov
add
dec
ret
sub
in
roll
or
cmpsb
xor
test
outsl
and
cwtl
icebp
mov
jg
pusha
inc
cmp
mov
addb
and
sbb
sub
int
sbb
and
mov
mov
mov
sti
mov
jne
rcll
out
cwtl
mov
je
mov
andl
cli
and
ja
push
cs
mov
lds
into
inc
out
cltd
xchg
add
out
pop
shrb
adc
sub
ficomps
adc
fwait
stc
scas
testb
rorb
xchg
jo
dec
push
push
mov
repnz
outsl
aad
xchg
dec
xor
mull
leave
pop
lcall
cld
into
inc
push
add
xchg
jmp
dec
daa
jns
push
add
hlt
loop
push
pop
sbb
inc
add
inc
movsb
or
mov
es
dec
mov
cli
divb
mov
sti
lret
es
pop
ds
test
adc
movnti
sub
aam
icebp
push
xchg
dec
es
cld
push
sub
mov
sar
xchg
sbb
mov
int
clc
cmpsl
xchg
stos
cmp
pop
jmp
or
and
popf
sarl
clts
xchg
outsl
add
add
push
dec
int3
inc
scas
sbb
mov
push
inc
cmp
addl
and
cli
out
arpl
pop
sbb
xor
xchg
sbb
int3
dec
fs
mov
jp
push
sbb
outsb
repnz
pop
scas
cmp
movsb
aas
jmp
push
scas
xchg
dec
arpl
sub
xor
xor
shlb
mov
clc
sub
mov
jecxz
jno
mov
mov
stos
out
mov
mov
sbb
cli
outsl
xchg
popf
xchg
push
nop
jb
mov
pushf
inc
pop
mov
pushf
neg
pop
lret
pusha
mov
cmp
mov
pop
push
mov
ret
add
inc
data16
push
and
loopne
sub
pop
mov
cwtl
sub
or
arpl
push
pop
lret
jnp
leave
fidivs
and
cmp
sbb
in
frstor
out
test
sbb
add
ds
push
in
sub
pushf
pop
scas
lret
repz
inc
mov
int
push
cli
dec
cmp
std
push
out
lods
adc
leave
jmp
xchg
maxps
idivl
sub
jmp
mov
pop
add
outsl
add
cmpl
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
arpl
sbb
xor
cs
inc
push
or
mov
sti
jno
sub
and
popa
push
push
jle
pop
xchg
jbe
add
inc
xchg
mov
xchg
cld
cmp
sub
xor
out
mov
mov
js
mov
pop
loope
cmc
mov
pop
push
loopne
push
fs
dec
sbb
addb
or
add
add
adc
push
xlat
mov
clc
cmp
out
lret
mov
sbb
cltd
pop
scas
mov
pop
fists
mov
daa
adc
fimull
mov
adc
into
shlb
mov
pushf
mov
stc
cmpsb
into
and
fidivl
jge
pop
into
jnp,pn
ret
push
mov
add
sub
xchg
call
mov
stos
sub
dec
in
ja
pop
movsb
push
sbb
dec
mov
imul
push
dec
fisubl
or
push
sbb
aas
and
js
mov
std
loopne
sbb
ds
bound
add
push
and
ja
out
and
jns
adc
cmp
aas
cmp
fisubl
lods
sub
call
sbb
inc
and
idiv
inc
sub
lods
sub
ror
and
xchg
mov
dec
int3
roll
cmp
inc
sub
ds
stc
cs
negl
push
inc
arpl
scas
jecxz
xchg
repnz
orl
push
pusha
negl
jb
repz
fstps
mov
fistps
pop
lret
bound
mov
sti
loopne
int3
inc
frstor
mov
imul
stos
pop
mov
ret
movsl
inc
and
aad
push
jle
gs
inc
inc
cmp
jp
test
negl
jmp
jo
sbb
ret
mov
xchg
xchg
mov
mov
sub
sti
dec
pop
xchg
and
or
test
adc
loopne
test
xor
cmpsb
add
shlb
pop
cmp
divl
cmp
out
std
inc
in
sbb
add
bound
outsl
lods
jmp
jo
mov
push
cmp
mov
nop
mov
sbb
mov
push
mov
mov
push
xchg
xor
les
popa
and
fwait
sub
add
stos
push
mov
pushf
xchg
lds
test
sahf
lock
push
mov
xchg
test
push
mov
fs
ficoml
jge
cmp
fldenv
push
sub
mov
or
add
in
dec
add
std
cmpl
cmp
sarb
cmp
add
pop
mov
xchg
inc
sarb
jmp
cmc
imul
rorl
pop
push
sbb
mov
mov
repz
dec
fwait
mov
orl
sub
mov
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
movb
lods
sbb
sbb
out
fldcw
sub
mov
lcall
mov
iret
add
cmp
stc
sbb
scas
out
andb
ficomps
push
and
lcall
sub
add
imul
push
mull
sbb
jmp
cmpsb
adc
imul
push
movsb
ftst
in
jae
and
lds
sbb
xchg
push
mov
repz
fildl
ficoms
pop
div
adcb
adc
jmp
dec
mov
dec
xor
pop
test
xchg
scas
lret
mov
outsl
sbb
mov
sbb
push
das
mov
js
imul
iret
add
subb
xor
sub
dec
shrl
mov
mov
jmp
inc
and
inc
fwait
jmp
dec
addr16
jecxz
jns
mov
cmp
out
mov
mov
add
int3
or
std
arpl
dec
add
hlt
je
fxam
popa
add
in
out
dec
sub
dec
inc
inc
sbbb
sbb
mov
test
cmp
sub
push
push
cld
cmpsb
icebp
pop
add
ret
arpl
push
sarl
loopne
inc
or
cltd
sbb
xor
lds
aaa
stc
cltd
dec
insl
fnsave
mov
lods
mov
repnz
and
jb
inc
sarb
scas
popf
fsub
lds
mov
pop
xor
add
jp
xchg
and
inc
es
rcrl
movsl
stc
dec
pop
and
mov
ljmp
sarb
pop
leave
dec
movsl
mov
adcb
ds
dec
aam
dec
fdivr
push
in
mov
xor
leave
mov
mov
jle
out
mov
lcall
out
out
xor
or
dec
mov
rclb
clc
outsb
push
sahf
mov
int3
je
outsb
pop
mov
popf
cwtl
push
lret
ret
adc
gs
and
inc
mov
cmp
clc
pop
popf
je
jmp
cmp
adc
xorb
mov
mov
aam
ret
aaa
gs
and
fcmove
dec
push
mov
xchg
pop
pop
bound
push
mov
or
xor
movsb
jle
mov
out
fwait
push
adc
or
std
mov
incl
or
rclb
xchg
mov
xlat
dec
mov
movsb
or
adc
inc
push
cmp
jp
sub
xchg
movsl
xchg
inc
inc
mov
add
sub
call
fwait
adc
cmp
les
mov
mov
rolb
ljmp
popa
cld
sti
test
add
rcll
pop
xor
adc
pop
in
cmp
ret
inc
daa
lds
xchg
cli
out
rcll
bound
outsl
lcall
inc
push
dec
dec
or
mov
movsb
adc
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
or
push
sbb
or
es
and
jns
lret
dec
jae
inc
popf
sti
sub
lds
jg
test
loope
add
pop
jge
cltd
test
out
xchg
sub
js
xor
xchg
arpl
xlat
daa
movsb
push
inc
push
outsb
mov
or
lds
mov
fucomp
jae
ret
sub
iret
xchg
mov
shlb
dec
jnp
inc
push
lock
push
xchg
push
loopne
int
xor
das
sub
push
fstpt
jae
sti
sub
push
addr16
movsl
adc
insl
and
sti
fistpll
push
mov
mov
lock
xchg
lcall
inc
xchg
fidivl
call
add
sbb
mov
and
xor
xchg
mov
push
jl
sti
jecxz
inc
push
inc
or
or
cli
rdmsr
push
rorb
ret
mov
or
xor
xor
fsub
xchg
lahf
ljmp
call
or
adc
ja
gs
cmp
cmp
mov
mov
jne
lret
bound
insl
movsb
pusha
sbb
xchg
movsb
inc
mov
ljmp
pop
stos
imul
xchg
cmp
sbb
lods
lock
xchg
mov
push
rcrl
mov
or
lahf
dec
cmc
push
repnz
incb
popf
xlat
shrb
cli
jbe
pop
pop
mov
clc
add
mov
cmp
mov
jle
cmp
loopne
lret
call
cld
hlt
and
js
lods
setae
jmp
cmpsl
in
xor
fucomip
shrl
sub
adcb
xor
pop
and
add
ret
fisttpl
inc
cld
test
jne
in
sub
loop
jmp
subl
adc
mov
in
testl
or
cli
bound
ret
inc
das
and
cmpsb
pop
call
xchg
and
jno
jnp
mov
sbb
mov
ret
jecxz
push
mov
xor
xor
xor
adc
lds
ds
divl
push
mov
ret
call
js
inc
pop
xor
mov
sub
clc
ds
movsl
dec
push
jmp
or
test
shll
jo
push
sar
dec
jge
or
xchg
pusha
push
mov
rcrb
insb
faddl
xchg
jae
enter
in
push
or
mov
dec
xor
push
ds
push
push
dec
dec
push
fs
call
xchg
jo
and
decl
popf
adc
jns
popf
inc
adc
cmc
out
sti
scas
jne
jo
push
mov
cmp
add
int3
xchg
out
pop
xchg
std
sub
inc
add
inc
pushf
les
or
je
adc
pop
sub
arpl
xchg
repnz
jb
int
adc
lea
and
sbb
and
add
push
sub
mov
sbb
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
es
sbb
adc
sbb
and
push
mov
adc
dec
pop
jp
cmpsb
pusha
add
mov
rol
fimull
inc
cmp
push
mov
fdivrl
adc
jle
cmp
out
xchg
data16
jbe
dec
test
pop
sbb
sti
shlb
jo
add
or
shll
pop
out
or
and
sub
lahf
insl
cmp
insb
xchg
add
sarl
sti
mov
or
imul
sbbl
xchg
aam
adc
and
cmc
int
repnz
add
inc
test
push
mov
cli
jb
daa
aam
movsl
test
ret
sti
iret
fld
and
sub
loop
in
mov
push
lock
fcoms
cmpsl
or
lahf
decl
fildll
cmpsl
jl
cwtl
mov
mov
lods
ja
pop
inc
ss
inc
cmpsl
mov
addr16
mulw
aad
pop
shrl
pusha
decl
daa
mov
mov
push
ds
pushf
cmp
test
js
jmp
push
and
or
jge
mov
cmp
sub
sbb
xor
out
xchg
imul
test
stc
rcrb
push
es
lahf
or
stos
sub
leave
mov
popa
imul
sub
dec
sub
cs
pop
mov
enter
mov
addr16
sbb
bound
add
push
mov
jmp
ss
stos
stos
shlb
add
mov
fcoml
out
insb
ss
sub
adc
jnp
ja
mov
sub
dec
mov
sbbb
es
cmp
mov
mov
mov
insl
enter
shl
lret
stos
ja
dec
stos
dec
jmp
sbb
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
sub
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
mov
inc
add
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
loopne
inc
add
and
inc
add
add
and
clc
and
inc
add
jle
add
es
add
add
and
inc
add
inc
add
inc
add
push
movsb
scas
or
movsb
lock
inc
add
inc
add
es
add
es
add
and
dec
es
add
es
add
lcall
pop
es
add
inc
add
and
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
iret
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
aam
inc
add
sub
pop
loop
js
lcall
and
add
shlb
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
inc
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
and
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
popl
inc
add
addl
das
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
push
lea
add
add
add
add
add
add
add
lea
add
add
xor
add
call
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
add
add
nop
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
jo
add
jl
add
xchg
xchg
add
add
ret
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
add
mov
add
add
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
inc
mov
add
add
bound
add
jp
add
mov
add
scas
mov
add
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
push
mov
add
mov
add
add
rorb
add
out
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
add
cmpsb
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
mov
add
add
pop
mov
add
add
test
add
add
ret
add
mov
add
mov
add
mov
add
mov
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
pop
lea
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
add
push
xchg
add
xchg
add
add
push
xchg
add
add
add
add
nop
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
jo
add
jl
add
xchg
xchg
add
add
ret
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
add
mov
add
add
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
inc
mov
add
add
bound
add
jp
add
mov
add
scas
mov
add
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
push
mov
add
mov
add
add
rorb
add
out
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
add
cmpsb
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
mov
add
add
pop
mov
add
add
test
add
add
ret
add
mov
add
mov
add
mov
add
mov
add
add
