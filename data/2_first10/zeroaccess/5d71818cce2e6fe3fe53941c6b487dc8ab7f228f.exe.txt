push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
mov
xchg
ja
test
bound
xor
sahf
aam
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
fcompl
pop
aaa
mov
test
xchg
hlt
mov
leave
inc
aad
or
ficompl
mov
mov
mov
add
jl
push
jbe
and
mov
mov
mov
xor
int3
cmp
cmp
or
mov
sahf
mov
imul
fiaddl
add
int3
in
movsb
popa
jbe
test
or
mov
pop
inc
popf
add
xor
dec
jae
push
xbegin
xchg
sub
mov
inc
nop
lods
jl
and
push
xor
pushf
aam
mov
jecxz
outsb
pop
adc
and
pop
inc
movsl
ss
mov
notl
mov
rcll
test
mov
mov
into
pop
xor
mov
push
outsb
in
sub
pop
sub
and
cli
adc
addr16
outsb
aad
addr16
fldcw
or
mov
add
mov
ficoml
xor
ja
imul
mov
in
lock
ret
dec
pop
movsl
rcrl
dec
lds
inc
into
out
icebp
stos
inc
cmpsb
ret
cmpsl
or
lods
ja
loopne
pop
imull
push
jmp
or
mov
fwait
jnp
jl
and
nop
xchg
fdivr
fs
incb
push
push
and
pop
jne
lret
jno
aam
aad
or
inc
mov
or
pop
jne
pop
fcmovbe
xchg
jp
xor
ud1
imul
loop
push
jbe
int3
je
arpl
ficoms
mov
inc
dec
xor
lds
lret
pop
push
or
fwait
sub
sahf
xor
inc
insl
lret
pushf
ret
cmp
gs
and
xor
inc
dec
and
iret
add
loope
pop
mov
aaa
std
sbb
fcomps
mov
test
xor
lret
mov
jns
adc
mov
pop
imull
outsb
daa
mov
sbb
add
push
rorb
mov
fisttps
bound
dec
ret
mov
sub
mov
pop
popf
adc
mov
addr16
test
push
jl
cld
es
push
adc
shlb
jge
xchg
lods
loop
push
and
or
pop
das
mov
jecxz
push
or
push
test
mov
xchg
cli
xchg
iret
fisubrl
sub
cmc
jo
fisttps
aam
andb
xchg
ljmp
lret
outsb
andps
add
in
jle
scas
aad
pushf
scas
shlb
jl
xchg
fdivl
mov
and
and
pop
xor
adc
arpl
pop
aas
add
subb
sbb
roll
test
mov
out
popf
jne
mov
ret
mov
and
cmpsl
xchg
mov
andl
add
ja
and
enter
adc
pusha
test
test
shl
test
imul
cmp
pop
inc
mov
fneni(8087
pop
mov
pop
push
mov
and
cmp
jle
std
das
leave
sub
xchg
aam
or
sub
jno
rclb
fldt
es
xchg
faddl
out
dec
push
push
dec
in
push
ss
cli
adc
mov
movsl
mov
sbb
shrl
cltd
jl
push
imul
adcb
test
filds
stc
mov
je
jmp
fs
or
popa
inc
mov
pop
js
imul
pop
mov
jb
and
mov
xchg
or
movsb
push
popf
mov
into
aas
ds
lahf
jge
pop
aad
stos
aad
xor
cmpl
loope
aad
push
popf
dec
sub
lret
je
lret
fdivl
loope
inc
fisttpll
xchg
daa
push
mov
mov
test
cmp
mov
xorb
lcall
inc
dec
jb
insb
jbe
jle
adc
dec
pusha
or
jl
mov
or
mov
mov
or
outsb
push
inc
adc
mov
push
jb,pt
movsb
mov
inc
sti
std
shlb
call
pop
icebp
push
loopne
xchg
add
ffree
shll
data16
mov
dec
std
out
stos
mov
cmp
ljmp
mov
hlt
loop
jmp
mov
add
or
cld
and
gs
and
sbb
cmp
cmp
xchg
iret
add
sub
clc
adc
stos
jge
psraw
fstpl
lods
adc
mov
lret
sub
enter
inc
sbb
imul
mov
mov
lods
xor
mov
xorl
push
fnstenv
xor
lcall
das
add
jnp
jge
dec
sbb
fnstcw
aad
call
mov
int
daa
incb
cmpsl
pop
pop
jno
fldl2e
cmp
fwait
sbb
scas
repnz
mov
push
sub
out
push
sub
iret
das
cmpsb
sbb
sti
or
xor
daa
jns
imul
and
jmp
jl
mov
cmc
mov
scas
movl
test
xor
add
adc
mov
xor
xor
dec
xchg
stos
enter
dec
jne
push
xor
cli
add
mov
pop
xor
lahf
sub
add
fldl2e
fldt
fsub
xchg
cli
dec
cmp
and
push
lods
les
mov
fildll
mov
and
out
cmc
movsb
scas
pop
mov
ret
rclb
aaa
lcall
stc
cmp
cld
pop
mov
mov
jns
mov
mov
in
mov
sub
fs
adc
loopne
repz
js
scas
push
fadd
lock
loopne
inc
dec
inc
add
dec
mov
pop
test
mov
jne
outsb
fdivs
movb
out
mov
mov
ficoms
cli
xor
mov
fldt
mov
repnz
scas
mull
fisttpll
in
test
pop
and
mov
dec
jl
jge
sbb
scas
cmc
and
test
adc
filds
mov
adc
test
ja
cmp
lret
js
push
aas
add
pop
cmp
mov
subb
cmc
xor
push
xor
sub
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
mov
mov
xchg
je
jno
cmp
add
repz
hlt
out
cmpsl
mov
lret
push
fbstp
add
mov
dec
mov
loope
in
jb
inc
sub
jno
loope
cltd
fists
add
xchg
ja
insl
jmp
add
aas
xchg
iret
xchg
mov
or
jge
pop
mov
orb
sbb
or
les
and
loopne
xchg
add
int3
adcl
test
repz
inc
push
mov
mov
push
lock
push
rcrl
mov
je
sbbl
mov
jbe
pop
push
aaa
jbe
push
xchg
mov
push
push
je
orl
pop
dec
xchg
jmp
mov
mov
add
in
call
inc
inc
pushf
call
inc
aas
test
jns
lcall
cwtl
insb
mov
insl
and
xor
or
mov
sbb
repz
daa
jge
out
lea
dec
mov
call
xlat
imul
cmpsl
push
sbb
jbe
outsb
pop
in
pop
popf
sti
xchg
into
add
xchg
jne
roll
inc
cmp
mov
push
scas
ss
push
jmp
jne
pop
mov
rorl
insl
jbe
jmp
icebp
movsb
xchg
gs
mov
lods
add
sahf
sahf
adcb
add
imul
pop
icebp
sbbl
imulb
jbe
inc
push
test
push
movsl
and
mov
cmp
adc
mov
cmc
inc
push
je
pmaxsw
and
add
in
shll
movl
sub
sbb
hlt
sbb
shr
lcall
and
cmc
or
mov
popf
gs
sbb
lret
hlt
jno
jo
mov
mov
sub
ja
loop
push
jle
pop
and
and
and
sbb
cmp
imul
imul
fists
mov
adc
pop
pop
ret
ljmp
test
jg
mov
leave
ljmp
mov
mov
fstl
jbe
adc
mov
les
add
test
aas
adc
adcb
mov
sahf
xor
in
sbb
pop
mov
idivb
push
js
push
add
sti
in
mov
inc
dec
and
sbb
andl
sahf
arpl
loopne
lods
addr16
cli
sbb
dec
daa
sbb
sbb
loop
popa
outsb
mov
ret
sbb
pop
cmp
lods
stos
inc
insl
dec
ficoms
mov
ss
mov
and
rcll
xor
and
popf
adc
mov
mov
les
lock
mov
mov
push
ss
push
push
mul
cwtl
pushf
inc
stos
ss
fs
inc
pop
xchg
cmpsl
xchg
lods
fstps
add
dec
aaa
loopne
fnstsw
or
rclb
mov
call
lock
rolb
roll
sbb
shl
nop
std
dec
sbb
scas
cmpsl
movsb
pop
add
inc
or
arpl
sbb
imul
sbb
ja
adc
and
jecxz
sub
pushf
ret
pop
das
pop
cmp
jle
sbb
int
jae
mov
sbb
mov
push
fsubl
xlat
fdivr
dec
pushf
pusha
loope
je
pop
xor
cmp
pop
out
mov
or
mov
jae
arpl
les
add
ljmp
shl
mov
cmpb
and
push
jle
xorb
sbb
insl
push
test
sbb
cmp
and
adc
jb
cmp
jecxz
and
jge
loope
dec
int3
mov
cmpsl
mov
iret
stc
dec
jbe
insl
testl
mov
jo
jnp
bound
test
in
pop
popf
mov
inc
mov
outsl
scas
mov
dec
or
pop
xchg
mov
test
scas
xor
or
fistpll
adc
dec
ja
flds
and
xchg
and
lods
mov
rcrb
pop
fistpl
jg
imul
gs
and
or
cld
insb
lds
and
sbb
jge
mov
pop
enter
push
mov
push
mov
sbb
testb
popl
and
clc
adc
stos
push
mov
fcomps
pop
xor
sbb
cmc
lods
out
jne
test
test
dec
pop
cli
rolb
push
jg
hlt
pop
fsub
pusha
dec
repnz
push
lret
xor
jne
inc
lcall
daa
mov
push
lret
in
inc
bound
ret
mov
jge
sti
cmpb
cmp
jne
xor
sbb
xchg
cmp
fdivl
adc
mov
dec
adc
sbb
inc
cmpl
js
cmpsb
lcall
fiaddl
or
cmpsb
pop
xor
and
push
adc
test
adc
fsts
push
repnz
inc
pusha
in
push
imul
fs
sbb
callw
cmp
jnp
repz
addr16
dec
sbb
loop
pushf
push
mov
push
mov
ljmp
pop
testl
stos
push
jnp
add
xor
cmp
mov
mov
lds
in
jns
sahf
or
lcall
shll
cmp
shll
fxch
mov
es
movsl
fcompl
aas
pop
divl
mov
roll
jae
fwait
loop
adc
aaa
cmp
mov
mov
sub
subl
clc
push
dec
fwait
call
pop
pop
les
ficoml
cmp
pop
cmc
dec
fxch
mov
mov
sub
or
xchg
nop
mov
testl
cmp
sbb
xchg
push
mov
popa
ret
and
out
test
xor
jg
aas
lods
es
aad
mov
adc
and
lds
pop
push
outsl
dec
decb
sbb
pushf
adc
push
lods
cmp
in
pop
in
or
jmp
mov
sbb
jp
and
dec
int
mov
dec
sbb
es
push
lcall
pop
pusha
sbb
nop
in
popf
adc
mov
test
js
das
and
push
dec
push
inc
vpaddd
push
jo
sub
fistl
push
pop
push
jb
xchg
int
or
ljmp
insl
scas
jge
psubusw
pop
daa
xor
dec
jne
xchg
push
cmp
dec
pop
inc
sbb
cmpsl
pusha
xchg
ja
sbb
repz
push
inc
push
xlat
aad
mov
xor
inc
push
jne
sti
xchg
lahf
lds
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
loopne
push
mov
xchg
mov
dec
push
xchg
jmp
jl
adc
shrl
fbstp
test
mov
insb
lods
pop
jb
aas
out
add
xchg
cmp
jae
mov
lds
notl
addr16
add
adc
cmp
mov
sub
inc
in
scas
cmp
loope
xor
bound
mov
xlat
sbb
inc
rcrb
dec
sbb
pusha
mov
jp
das
hlt
pushf
jno
icebp
cwtl
jno
into
xchg
adc
lret
cld
sub
push
push
lahf
imul
inc
mov
inc
loop
adc
ret
mov
jb
inc
popa
test
rcll
jb
mov
pop
pushl
fs
dec
xchg
imul
flds
pop
pop
shrl
xor
push
pop
lods
inc
pop
lcall
or
movsb
dec
mov
stc
xchg
movsl
addr16
jg
xlat
cld
jp
cmp
jbe
sbb
inc
fnstcw
gs
xor
mov
sbb
es
sbb
sahf
lods
mov
cltd
mov
cmp
push
xchg
fistl
leave
fdivl
jns
jmp
pop
clc
fs
sub
mov
addps
push
pop
les
cwtl
sub
jae
mov
mov
and
mov
pop
arpl
xor
stos
or
std
sarl
outsb
mov
lods
cmc
es
iret
les
ljmp
sbb
xchg
in
insb
and
pushf
xor
jecxz
jnp
lds
mov
lds
fimuls
ss
lock
fcompl
add
arpl
jge
js
adc
cmp
out
fwait
imul
sub
sahf
mov
cmpsl
icebp
adc
jbe
xchg
test
add
addr16
pop
mov
aas
cmp
sub
shl
mov
cmp
aaa
sub
clc
andb
and
xchg
inc
mov
push
jmp
inc
nop
xchg
xchg
lea
ret
sti
jnp
jecxz
xlat
mov
add
adc
shll
test
sub
insl
pop
xchg
es
jae
push
les
mov
cmp
out
add
into
xor
push
push
jle
sbb
add
int
ficompl
mov
pop
inc
std
mov
add
ds
inc
or
rorl
xor
mov
mov
push
sub
push
or
jg
dec
in
scas
add
fstpt
adc
mov
cmp
push
xor
jl
or
or
fistps
mov
loop
sahf
xor
in
add
fstp
add
loope
stc
mov
and
sub
inc
ds
mov
int
test
xor
loop
inc
mov
in
jecxz
mov
jbe
xchg
fisubl
frstor
cltd
cmp
adc
or
cmp
dec
int3
xlat
mull
mov
lret
ficompl
dec
pop
mov
cmpb
popf
xor
cmp
and
imul
fidivs
addb
pop
push
xor
and
cmpsb
push
sbb
pop
push
js
pop
stos
stos
fisttps
test
sbb
ss
or
cltd
sbb
dec
pop
xchg
xchg
jns
mov
leave
addr16
pop
cwtl
push
pop
je
orl
mov
pop
movsb
sbb
inc
or
push
mov
xlat
mov
cmp
jg
push
rcrl
mov
pop
hlt
push
push
mov
mov
mov
cmp
sub
nop
mov
es
adc
lea
xchg
sbb
xor
dec
inc
outsl
rolb
adc
scas
hlt
loop
add
push
sar
iret
arpl
xor
movsl
xlat
xor
mov
inc
icebp
dec
daa
mov
pop
arpl
jg
or
jle
jb
shrb
sbb
call
cmp
adc
xorl
dec
push
jmp
into
sub
hlt
movsl
push
fwait
xor
pop
sti
push
adc
add
pop
mov
aad
sub
cmp
mov
outsb
gs
mov
nop
sbb
loope
mov
pop
jecxz
mov
pop
inc
or
mov
xchg
into
hlt
icebp
imul
cmp
popa
pusha
int
xor
inc
iret
fcmovb
nop
sub
ja
ds
in
mov
xor
mov
pushf
sti
popf
mov
test
loop
imul
mov
push
nop
and
jecxz
sbb
jle
pop
mov
xor
push
loop
jb
push
sbb
pop
jno
push
jb
push
jecxz
add
test
sahf
mov
xor
daa
push
jo
adc
add
repnz
int3
jns
mov
mov
inc
fisubrs
popa
mov
xchg
movsl
outsl
or
movsl
dec
mov
adc
aad
cltd
jnp
mov
fisubl
add
in
push
or
shlb
jae
test
sahf
inc
stos
mov
dec
cwtl
pushf
add
push
sub
mov
push
lds
adc
cmpsb
cmc
jnp
and
cmp
mov
in
sahf
cmp
leave
jge
jne
xor
lahf
cs
cmp
outsl
insl
in
enter
out
mov
outsb
fcmovbe
inc
shlb
arpl
pop
out
dec
imul
sbb
inc
nop
std
cmc
out
xchg
xchg
pushf
xlat
jecxz
xchg
or
mov
push
pop
and
mov
aaa
ds
in
pushf
out
jnp
xchg
js
add
adc
mov
enter
adc
pop
movsb
fwait
inc
mov
cmp
rclb
xchg
mov
push
jno
loop
imul
xor
es
jmp
or
lret
jge
inc
int3
in
arpl
loop
iret
lret
sbb
mov
cmpsb
imul
repz
xor
mov
inc
cld
ljmp
ss
shr
xchg
jmp
std
shr
lds
nop
inc
xchg
test
cli
push
out
add
push
dec
xchg
xlat
cltd
xchg
test
push
fistps
cmp
sahf
pop
sbb
cs
fnstsw
sarb
xor
xor
dec
lds
sub
in
inc
jns
mov
sti
repz
jmp
dec
sbb
push
iret
in
out
bswap
cmc
divb
aam
mov
das
stc
std
xchg
sub
and
mov
jmp
sbb
loopne
into
jmp
icebp
lock
adc
dec
ret
das
loope
inc
inc
add
push
iret
js
push
stc
test
call
cmp
sbb
cmp
sub
xchg
jg
ficoml
arpl
adc
movsb
outsl
mov
push
das
movsl
stc
dec
mov
sub
mov
out
js
add
shlb
push
push
jecxz
icebp
test
movsl
adc
cmp
pusha
sub
pop
and
ds
scas
mov
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
jl
js
cwtl
out
ja
push
test
and
dec
loop
cli
dec
sub
shll
sub
js
jg
fstps
jae
leave
cmp
jle
scas
imul
or
dec
popa
inc
addr16
add
or
das
fwait
cmp
clc
fs
jo
and
cmc
jo
popa
ficoms
and
repz
out
call
xor
add
mov
fs
mov
inc
rorb
in
xchg
fbld
pop
pusha
sbb
insb
adc
adcl
cmc
lods
insl
cmp
sub
xchg
jge
mov
pop
int3
shl
jge
xchg
cmp
call
insb
outsb
imul
adc
mov
mov
out
lds
sbbl
and
cmpb
jmp
cmp
cmp
shr
ret
hlt
push
out
cmp
ljmp
sti
adc
xchg
out
jl,pn
and
or
fidivs
pop
mov
sbb
adc
aam
mov
mov
jge
cmpl
jle
into
add
fwait
and
push
aad
adc
or
add
sbb
jno
xor
pop
gs
mov
imulb
inc
call
shlb
pop
lahf
cli
mov
xchg
fstpl
js
fildl
dec
dec
popa
rolb
pop
popf
or
or
adc
popa
add
jns
mov
movsb
and
shlb
pop
push
inc
add
push
xchg
and
notl
jp
sub
push
xlat
jle
cltd
mov
cmp
mov
mov
inc
imul
out
pushf
mov
cld
shll
cmp
add
push
mov
inc
lahf
mov
push
jae
jbe
sbb
push
aam
and
push
xchg
mov
lods
and
mov
mov
inc
lock
bound
push
mov
in
pop
cmpsl
rcrl
pop
mov
nop
mov
inc
lahf
and
dec
cwtl
shrb
cmpsl
lea
fcomps
jmp
clc
mov
sbb
in
fstpt
inc
lods
daa
fadd
loopne
inc
insb
stos
hlt
icebp
add
jno
and
push
pop
xor
add
ret
add
inc
popf
inc
mov
cmp
in
fwait
imul
cli
xorb
mov
push
lea
inc
mov
stos
cwtl
jno
int
insb
cmp
lahf
mov
aaa
push
mov
xorl
ljmp
loope
imul
push
scas
dec
jae
push
lret
fisubrl
jae
int3
mov
jo
xor
cltd
dec
pop
das
outsb
std
imul
jno
leave
push
divl
and
xor
int3
lahf
xchg
jl
cmpsl
iret
popf
movq
mov
fisttps
icebp
jmp
or
mov
sahf
imul
push
cmp
movsb
into
adc
js
xor
orl
xlat
jnp
iret
mov
cmp
cld
cmp
fwait
popa
mov
movsl
cmp
mov
sbb
mov
das
test
mov
or
arpl
scas
fwait
dec
dec
mov
fpatan
jne
and
std
bound
or
dec
incb
cmpsb
iret
je
mov
cmp
xorl
cmpsb
call
in
cli
nop
xor
imul
add
stos
ret
xor
sbb
adc
xchg
mov
or
fs
pop
mov
test
mov
sbb
jmp
lock
lret
push
ljmp
mov
adc
push
push
leave
shrb
cmp
ficomps
insb
add
in
outsb
ja
or
mov
outsl
jno
push
pop
dec
cld
movb
jbe
leave
xchg
fdivl
xor
mov
repnz
call
mov
cmp
ljmp
mov
or
jae
loop
cmp
xchg
jne
lods
inc
inc
out
cmp
mov
stc
and
test
inc
jle
bound
push
int3
daa
xor
jle
sahf
aas
les
into
addl
cwtl
pop
sbb
cmp
test
fisttps
mov
xchg
lods
add
add
testl
dec
clc
adc
inc
adc
cs
mov
add
ficoms
cltd
lcall
adc
pop
xor
jns
in
xchg
mov
push
cli
push
adc
dec
lcall
cwtl
mov
in
xor
or
sub
inc
insl
xchg
ljmp
push
push
xor
popa
jmp
add
add
jno
jmp
push
lret
add
sbb
sbb
jmp
loop
and
dec
xchg
mov
lcall
pushf
lret
dec
jge
ljmp
mov
or
and
dec
mov
ds
mov
test
push
xchg
xor
paddd
repz
pusha
push
cmp
cmp
filds
fnstenv
add
call
out
test
sub
repnz
push
pcmpeqd
movsb
xchg
jbe
or
inc
mov
mov
stos
or
inc
stc
shrb
cmpsb
push
test
xorl
mov
jne
jmp
call
push
je
cs
and
sbb
xor
pop
rcrw
push
cmp
jmp
push
addr16
out
fstl
jae
mov
outsb
pop
push
sbb
nop
movsb
or
jb
mov
addb
pop
mov
xor
daa
or
jnp
fidivl
jle
push
xlat
gs
dec
lods
dec
mov
sub
mov
loope
fsubrl
fstpt
sbbl
mov
mov
cmp
pop
push
push
xor
lcall
adc
add
arpl
fs
loope
dec
mov
ret
pop
ret
xchg
xor
and
add
xchg
movsb
das
lods
mov
movsl
loopne
ja
jmp
daa
jp
add
mov
mov
sub
pop
cmpsb
cmpsl
cld
lock
mov
mov
xchg
mov
ret
xor
xchg
insl
das
iret
je
cmp
sahf
jns
sub
cmp
xor
inc
insb
xchg
or
mov
je
jge
fwait
sub
or
fldl
jno
in
xlat
rolb
repnz
cmp
mov
dec
repz
clc
jnp
lahf
mov
mov
imul
mov
cwtl
jnp
sub
int
stos
push
sub
fwait
mov
cmp
mov
pop
cmp
cmp
adc
cs
pop
and
aam
aad
mov
inc
mov
jmp
mov
inc
and
jg
push
push
sbb
mov
bound
outsl
ret
ja
fldenv
xor
repz
sti
cmp
adc
out
in
xor
outsl
dec
xchg
scas
pusha
xor
bound
mov
inc
add
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
fnstcw
push
das
aam
ja
inc
mov
push
in
mov
les
adc
pop
mov
fldt
hlt
in
mov
mov
shll
adc
rclb
testb
ficomps
mov
xlat
rorb
and
sub
dec
js
mov
or
jge
leave
decb
mov
ret
xchg
jne
cli
adc
test
insl
test
dec
aad
xor
or
adc
out
mov
mov
cmp
push
cmpsl
sub
mov
daa
clc
or
mov
icebp
loop,pn
lods
push
xorb
subl
mov
pop
call
out
cld
push
pushf
and
pop
jp
mov
xchg
adc
jne
mov
fst
test
push
push
push
daa
xchg
mov
in
sub
in
test
sbb
rclb
inc
jl
push
jge
fdivl
sahf
mov
mov
scas
enter
scas
aam
cmc
or
mov
add
xchg
sahf
dec
iret
lcall
and
in
daa
adc
std
jno
rcrl
and
mov
push
daa
inc
jecxz
out
xchg
into
push
xchg
cld
ja
pop
filds
mov
andb
or
mov
out
mov
jl
dec
dec
or
adc
jns
pop
add
cmp
in
xor
mov
cmp
push
jne
clc
fdivr
xchg
shl
aas
add
inc
lret
and
scas
cmp
outsb
nop
adc
es
jne
xchg
jne
sub
jecxz
xchg
push
shld
adc
es
call
pop
daa
aad
and
lds
or
imul
xor
mov
fs
and
es
rorl
loope
stc
mov
jae
movsl
pop
sbb
cmp
mov
enter
clc
inc
and
dec
mov
stos
test
jbe
xor
leave
dec
lods
pusha
adc
push
das
movsl
hlt
inc
scas
enter
xor
and
sub
mov
in
xor
fstl
jb
lret
sbb
imul
mov
push
imull
lods
push
dec
jae
adc
imul
jecxz
add
daa
xor
xchg
rolb
xchg
jge
push
out
pop
rcl
inc
xchg
pop
xor
dec
test
inc
jle
mov
xchg
xor
pop
fs
pop
xchg
sbb
int3
pop
dec
lret
xor
ret
inc
fcmovnbe
mov
das
pop
push
sbb
pushf
xchg
iret
test
xchg
int
add
in
aaa
out
outsb
in
xor
pop
pop
and
inc
fmul
nop
cmp
push
ds
push
dec
jmp
aas
loop
popa
adc
or
xor
in
imul
sub
sub
inc
sub
pop
dec
jp
movsb
es
xchg
cmp
leave
clc
jbe
popa
or
bound
lds
cmp
cld
xchg
iret
lcall
sahf
mov
nop
orb
pop
ret
mov
inc
jbe
adc
je
adc
out
outsb
out
call
or
dec
sub
jmp
sbb
out
lahf
mov
jns
mov
or
mov
or
xchg
and
cmp
lret
out
mov
imul
cmc
andl
loopne
leave
mov
int
mov
mov
aam
push
sbb
addl
ret
out
cmp
out
push
and
addr16
das
int
mov
xchg
loope
rcr
push
mov
cmc
dec
and
add
mov
pop
out
and
xchg
ret
or
cs
sahf
xor
fsubs
and
jns
mov
shlb
inc
and
cs
jl
scas
int3
pop
or
data16
push
fisttpll
pushf
mov
frstor
push
cmp
inc
jp
sbb
rcrb
mov
stc
mov
ffree
out
fmulp
mov
mov
mov
loop
in
cmpsl
add
bound
dec
cli
or
scas
cmp
pop
sub
dec
repz
dec
and
sub
lret
sub
sub
data16
or
out
inc
popa
mov
sbb
fadd
xor
mov
push
loop
dec
out
sub
xor
pop
and
stos
push
fdivrl
scas
mov
das
scas
inc
fstpl
imul
push
mov
mov
shlb
ljmp
mov
xor
add
push
push
and
into
pop
jnp
mov
add
aam
cmpsb
sub
cld
aaa
push
int3
mov
pop
pop
stos
aam
mov
push
mov
push
adcb
xor
dec
fsts
pop
push
jno
jnp
icebp
dec
dec
popf
stc
mov
shlb
push
insb
lret
xchg
movsb
shll
rclb
xchg
lahf
int
or
sbb
leave
adc
addb
xor
push
xchg
scas
push
jnp
sub
sbb
sbbl
adc
xchg
lahf
push
xor
mov
fs
and
cmpsb
sbb
add
adc
mov
cs
xchg
xchg
jne
insb
xchg
push
in
insl
mov
pop
adc
inc
outsl
repnz
lods
sub
mov
cld
mov
test
pop
push
mov
mov
sub
mov
push
aaa
xor
or
lcall
dec
push
and
inc
lods
and
sbb
lock
cwtl
mov
pop
inc
cmp
and
jbe
out
addr16
or
call
les
stc
push
out
sub
fidivl
add
adc
test
push
aaa
jle
jg
and
cmpsl
jecxz
or
movsl
push
cmp
int
sbb
jbe
push
inc
sub
push
insb
inc
je
pop
pop
adcl
fwait
icebp
rol
stos
or
xchg
nop
mov
mov
mov
insb
pop
and
inc
jbe
fmuls
fwait
sub
loop
es
push
sbb
xor
add
lock
cmpsl
mov
xchg
negl
mov
fcmovnb
rcrl
adc
es
dec
scas
jmp
xchg
jb
mov
imul
es
mov
mov
jbe
jecxz
pop
pusha
and
int
inc
popa
sahf
ljmp
sbb
cwtl
and
and
cmpsl
rclb
add
sub
out
int3
jmp
push
pop
rcl
inc
sub
xor
sbb
jne
dec
or
xchg
leave
test
filds
ficompl
lock
pop
push
jns
adc
lret
xor
fdivrl
inc
stos
pop
fcoms
je
je
es
add
test
sbb
popa
pop
lock
adc
mov
jp
mov
ja
clc
jecxz
xor
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
xchg
ret
pop
sub
pushf
mov
or
aas
sub
rolb
gs
sbb
mov
add
mov
sbb
jmp
insb
push
jae
stos
xchg
cs
fcompl
push
adc
xchg
mov
test
push
mov
ficompl
mov
subb
push
jnp
icebp
js
dec
push
adc
xor
push
inc
js
sbb
faddl
movsb
int3
add
test
fsubrs
push
push
mov
dec
cs
mov
or
and
ret
rol
outsb
nop
cmp
addr16
mov
pop
in
mov
add
cmp
mov
movsl
jo
lcall
addb
jae
inc
mov
xorb
fwait
cld
pop
aas
pop
jbe
in
pop
push
imul
and
fstpl
inc
aam
jmp
mov
in
in
int3
xchg
lret
inc
pop
mov
in
adc
mov
sbb
aam
or
adc
lcall
xchg
jno
mov
outsb
int
xor
mov
mov
test
mov
and
jge
cwtl
xchg
add
pop
orl
pushf
pop
sub
repz
mov
xor
lea
adc
add
xor
mov
xor
lahf
xchg
shrb
sub
bound
loop
bound
push
lock
xchg
test
mov
test
lods
jecxz
add
fdivl
cmp
xor
ljmp
fidivrs
or
leave
adc
xor
cld
cli
inc
icebp
push
pushf
shlb
lcall
xchg
jo
and
rolb
aaa
in
fs
adc
jecxz
add
lret
jp
ds
cs
adc
mov
cmp
jle
imul
out
mov
insl
fnstenv
jae
scas
dec
outsb
fidivrs
fistpl
pop
jge
jb
pop
addr16
mov
cld
sub
fsub
faddp
out
aam
in
ljmp
scas
daa
lock
popa
cld
xor
push
dec
sbb
xorb
cld
pop
jmp
adc
test
fsub
pop
mov
pop
fisttpll
mov
addr16
cmp
es
xor
inc
inc
andl
mov
fld
inc
and
jmp
aam
pop
int
lea
das
adc
cmp
mov
imul
xchg
or
and
and
push
lahf
ret
rcr
pushf
adcl
mov
cmpsl
jge
in
jns
pop
inc
das
lods
into
cmpsl
mov
jmp
push
pop
repnz
inc
push
jae
lods
pop
or
jno
scas
imul
ss
enter
clc
int
cmc
pop
mov
mov
test
push
je
sub
lcall
xorl
in
repz
test
jg
jno
insl
mov
rol
andl
xor
or
mov
adc
movsl
push
push
mov
cmpsb
fadds
mov
pop
sbb
lea
ss
mov
mov
cmp
push
cmp
dec
pusha
testb
popa
mov
ror
jle
dec
test
lods
xor
pop
filds
cmp
push
lock
cmpsb
dec
imul
add
cmc
jmp
je
pushf
cmpsb
into
xchg
cmpsb
and
subl
pop
in
inc
pop
movb
incl
aad
xchg
push
dec
sub
push
dec
scas
push
loopne
sbb
xor
jno
dec
imul
jmp
ja
rcrb
fst
daa
shll
dec
sbb
lcall
in
clc
mov
push
out
cmp
pop
mov
mov
gs
mov
and
imul
inc
push
xchg
mov
leave
mov
cltd
jl
pop
adc
or
fdivs
mov
xchg
shlb
cmpsl
mov
cmpsb
popa
in
pop
cmp
mov
ficompl
inc
jmp
pop
cmpsl
xor
adc
stos
inc
xor
xchg
mov
xchg
dec
fs
es
cld
das
mov
int3
jo
shrl
outsb
fs
push
out
add
mov
pop
jl
daa
insb
inc
ja
aam
mov
xchg
fildl
incl
push
popf
mov
pop
pop
mov
adcl
repnz
push
or
push
or
arpl
popa
mov
in
fsubrp
mov
or
fwait
daa
mov
dec
std
das
jecxz
add
mov
mov
xchg
cmp
mov
push
subb
imul
mov
mov
dec
test
add
mov
divl
js
ljmp
adc
lds
je
pop
int3
pop
mov
pop
loop
insb
xchg
adc
mov
mov
mov
pop
push
scas
mov
js
out
mov
add
std
xchg
fistl
adc
ret
or
cmp
xor
sub
add
xchg
or
insb
or
ret
ds
cld
push
inc
scas
mov
mov
xchg
loope
andb
add
je
mov
out
lss
in
insl
lcall
jb
mov
test
pop
push
fldl
and
and
inc
test
pop
or
jp
les
and
mov
sahf
cmp
add
roll
cmp
popf
es
ret
xchg
mov
lds
clc
cvttps2pi
call
ds
cmpsl
lods
lea
xlat
adc
push
push
mov
fcoms
and
outsl
hlt
loop
jo
fs
cld
push
icebp
xor
mov
popa
jne
or
jmp
xchg
aad
scas
js
pop
in
mov
stos
sub
movl
add
mov
std
lcall
mov
mov
mov
shrl
push
int
mov
inc
xlat
xchg
int3
popa
addl
cmp
repz
inc
movsl
hlt
or
shrb
lods
loopne
cltd
popa
ds
or
xor
mov
scas
cmp
add
jno
and
filds
dec
add
dec
pop
and
fwait
push
sub
aam
adc
sbb
mov
sbb
or
pop
mov
mov
lods
movsl
mov
mov
cld
out
rcrl
inc
fwait
repz
imul
sbb
sbb
xchg
sti
mov
neg
or
mov
push
pop
repnz
popf
mov
pop
or
mov
mov
insl
ficoml
sbb
dec
out
and
mov
ja
xchg
mov
dec
jns
pop
icebp
rorb
pop
hlt
or
test
test
jae
lcall
xor
shl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
out
mov
xchg
mov
push
outsl
jnp
incb
push
sbb
scas
cld
mov
mov
and
jl
push
ss
xchg
cmpsl
leave
mov
lods
stos
lds
jecxz
mov
lahf
cmp
fbld
sub
mov
sub
out
sub
jle
add
test
add
jecxz
mov
or
sub
loop
adc
inc
xor
sub
jnp
cld
enter
stos
push
pop
enter
out
jle
std
dec
sbb
bound
push
insb
mov
pop
cmp
lds
lock
enter
mov
lahf
popa
in
jb
stos
jbe
ja
lds
test
inc
rcrl
cmp
pop
das
cmpsl
push
test
adc
sti
xchg
xchg
call
inc
dec
pcmpgtb
scas
mov
popa
dec
scas
jg
xchg
ret
push
push
pop
xchg
mov
fisubrl
add
adc
clc
stos
mov
addr16
sbb
inc
out
popf
sub
xchg
inc
push
cmp
add
and
mov
scas
jg
lahf
cmpsb
or
xchg
jo
mov
or
xchg
movsb
dec
nop
dec
inc
fs
mov
lods
pop
inc
push
dec
fistpll
movsl
js
sti
and
pop
inc
fidivl
cwtl
mov
shll
stos
cmc
andl
je
std
aad
jbe
mov
scas
sub
inc
cld
test
loopne
ds
push
es
xor
in
xchg
adc
sub
loopne
fucomp
call
pop
test
pop
dec
cwtl
divl
add
mov
aas
adc
mov
leave
das
jns
addr16
xorb
pushf
mov
mov
cmp
add
fstps
cwtl
inc
aaa
jg
fistpll
out
out
stc
aam
or
lcall
mov
pushl
cmc
cli
adc
hlt
cmp
outsb
cmp
aaa
mov
sub
fmuls
add
shll
orl
jae
jne
push
xchg
push
xchg
call
dec
jmp
add
mov
scas
rclb
xchg
pop
addr16
popf
xchg
push
data16
sbb
mov
adc
mov
xchg
fisttpll
fildll
sti
shll
push
mov
fwait
add
mov
and
adc
out
inc
sub
inc
leave
fistpll
mov
into
xlat
sub
in
repz
mov
jmp
mov
sbb
xchg
movsl
test
gs
mov
pop
cli
lcall
inc
mov
mov
and
push
test
and
pop
aam
dec
add
adc
aas
pop
popa
or
and
test
mov
pop
sbb
mov
out
inc
mov
call
lcall
shll
inc
add
lds
imul
mov
addb
cli
xchg
dec
insb
call
stc
and
and
jge
mov
test
xor
adc
ficomps
xchg
mov
inc
sub
mov
rclb
mov
repz
dec
fadd
cmp
xor
movsl
mov
das
dec
jbe
mov
mov
decb
stos
scas
test
mov
aam
push
aaa
jae
sub
add
and
lret
shlb
mov
xchg
pop
jae
ljmp
push
ds
icebp
lcall
into
stos
cmp
xor
aaa
rclb
imul
or
pop
cmp
cmpsb
leave
add
jnp
mov
enter
inc
xchg
xchg
or
dec
in
adcb
push
andl
ljmp
mov
fs
xchg
cmpsl
mov
add
dec
stc
jl
aam
add
or
rcl
lea
shr
push
lret
xor
inc
es
push
dec
insb
fnstsw
sbb
jnp
rcll
sub
dec
pop
movsb
cli
jle
push
ret
mov
mov
stos
std
mov
gs
adc
jle
lds
adc
ss
jns
arpl
daa
sub
leave
jno
stos
mov
cs
clc
mov
gs
dec
in
adc
add
dec
stc
mov
cmpl
addr16
xlat
int
es
das
icebp
sbb
out
aas
les
loopne
cmp
push
push
in
fadd
cmc
add
ficoml
repnz
movsl
enter
fists
fisttps
fnstsw
hlt
fcompl
sbb
bound
loopne
fimull
or
pop
sub
adc
mov
jmp
xchg
jne
negb
bound
idiv
sbb
inc
jne
sub
and
jb
je
shll
lss
mov
xchg
sub
orl
cwtl
loope
or
out
hlt
dec
add
cwtl
xchg
insb
fcoml
push
ss
xchg
dec
mov
out
xchg
sub
sbb
push
mov
negl
push
mov
push
icebp
jp
ret
rolb
add
pop
js
ror
jmp
fwait
or
sbb
jnp
js
mov
clc
ficomps
lea
inc
jecxz
aam
jge
inc
rolb
jp
xor
jne
fisubrs
xchg
mov
js
jbe
insl
sub
aas
jno
mov
fisttpll
and
dec
test
maskmovq
testl
mov
mov
push
pop
das
xor
mov
cmpsb
inc
xchg
in
jmp
pushf
xchg
movsb
mov
andb
fcos
push
cwtl
lock
pop
ror
and
js
mov
or
test
pushf
mov
stc
lock
xor
imul
das
inc
sbb
mov
sub
pop
mov
fidivrl
scas
fimuls
imul
mov
pop
flds
pop
jl
out
fisttps
sub
xchg
xor
outsl
xchg
in
sbb
xchg
add
dec
test
iret
sub
out
inc
mov
inc
sbb
xor
xchg
mov
inc
aam
fimuls
ss
rcr
cmp
dec
and
jge
jecxz
cmp
xchg
pop
fmull
mov
jg
adc
adcb
xchg
mov
inc
jbe
lahf
sub
imul
adc
fsubl
xlat
adc
notl
aad
and
jge
xlat
jmp
xchg
pusha
fadds
and
mov
push
jmp
rorl
cmc
adc
jbe
push
inc
xchg
mov
das
fadds
sub
cwtl
jg
pop
lret
unpckhps
or
test
popf
jae
pusha
test
mov
inc
pop
xlat
leave
fwait
popf
lods
dec
push
mov
idivb
xchg
out
adcb
cltd
adc
and
mov
push
or
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
inc
pushf
cmp
xchg
jl
in
jp
sub
jl
addr16
scas
nop
out
shl
xchg
stc
je
ret
sub
mov
mov
mov
jecxz
or
out
int
dec
jle
jecxz
jle
cwtl
mov
push
out
bound
clc
mov
xchg
jo
mov
outsl
jb
and
lret
pop
loop
mov
dec
mov
lock
fisubs
and
iret
cmp
xchg
cli
xor
jmp
add
shrb
mov
push
add
cmpsb
ss
data16
cmp
or
insb
add
hlt
repz
pop
in
test
mov
mov
inc
jg
nop
imul
leave
test
cmp
cmc
dec
sti
out
adc
out
adc
popf
and
addr16
mov
sub
mov
pop
sbb
icebp
jnp
jmp
aaa
shl
ljmp
sbb
das
int3
adc
fsub
add
sbb
out
inc
dec
in
cmpsl
loopne
xchg
das
rcrb
and
and
aam
push
mov
or
inc
mov
lret
scas
aas
pop
in
imul
das
enter
ja
test
xchg
pusha
xor
aam
lcall
mov
add
repnz
cmc
and
jb
stc
jb
sar
in
mov
dec
std
inc
out
movsb
adc
mov
mov
ljmp
xor
mov
fwait
dec
mov
mov
lcall
icebp
bound
push
or
shlb
xchg
int3
fnstcw
sbb
cmp
xor
or
es
fucom
or
scas
dec
push
mov
jecxz
jns
mov
iret
shr
test
repnz
pop
add
fsubrs
les
cli
xchg
mov
fwait
clc
jae
mov
pop
jbe
call
aad
dec
push
cmpsl
stc
adc
and
jne
subb
bound
sub
pop
adc
int3
leave
mov
stos
or
mov
adc
inc
cld
in
lock
stos
loopne
xor
cmp
nop
xchg
in
sbb
repnz
cmpsl
stos
popf
iret
sbb
aam
ja
icebp
mov
fisttpl
fadd
aas
testl
mov
sub
loop
cmp
or
xchg
push
mov
outsb
sbb
loope
inc
in
xchg
jnp
jo
sub
or
ss
or
in
pushf
add
in
dec
pop
jge
xchg
or
fistpl
jl
pop
mov
addb
xchg
add
and
repz
fists
xchg
int
push
and
cmc
ljmp
arpl
dec
mov
mov
pushf
add
push
std
outsl
aas
pop
and
ljmp
inc
jg
aas
mov
inc
hlt
movsl
into
imul
or
lret
loop
mov
mov
ds
mov
mov
adc
imul
js
pop
jg
jae
cmp
push
cld
jg
jmp
stos
mov
jns
mov
sbb
or
dec
je
and
jle
mov
insb
mov
pop
pushf
rolb
cmpsb
sbb
sub
sub
mov
mov
jnp
cmpb
inc
test
mov
mov
outsl
push
mov
adc
cmp
sbb
sub
lea
mov
inc
add
mov
insl
mov
push
insb
dec
cs
and
pop
dec
fucomp
jae
repz
cmc
cmp
iret
cmp
dec
cli
sarl
aam
add
into
mov
test
lret
out
push
aam
xor
lret
pusha
mov
sbb
lods
sbb
incb
ja
in
in
mov
lahf
std
arpl
test
mov
pusha
adc
push
adc
cmp
cs
mov
pop
clc
int3
in
ja
test
mov
inc
mov
mov
pop
in
les
jl
out
cmc
je
xchg
ds
push
mov
sbb
mov
add
enter
inc
jmp
dec
out
test
das
pop
push
fisttps
mov
inc
js
push
mov
fs
sbb
add
push
inc
subl
sbbl
sbb
and
in
je
mov
lahf
mov
loopne
mov
mov
aam
stos
fwait
jno
rcrb
iret
addr16
outsl
push
adc
call
aaa
adc
out
inc
jmp
sbb
inc
aaa
sbb
adc
out
mov
cmp
out
push
das
add
shl
mov
pushf
cmpsl
dec
adc
mov
xor
cmp
cmc
test
pop
ljmp
sbb
dec
sub
testb
push
cmpsb
ret
daa
mov
xorb
push
outsb
scas
or
sbb
and
sarl
arpl
xchg
sub
ret
jge
test
ja
call
ficoml
rcll
ret
xchg
inc
andb
loope
pop
push
add
cmpsl
fcoml
xlat
pop
nop
cmc
into
mov
divb
xchg
mov
or
loopne
inc
imul
jno
adc
inc
mov
lcall
or
jmp
in
arpl
int
jmp
jp
jnp
lcall
push
mov
xor
add
or
ds
lret
lret
mov
mov
sub
push
mov
jo
jmp
mov
cltd
icebp
fs
fxch
jno
aad
sahf
loopne
jmp
pop
insb
dec
cmp
sbb
dec
cld
lds
orb
mov
aas
out
fbld
add
push
jg
lcall
pop
adc
scas
int3
pop
popf
add
mov
xor
loopne
stos
xlat
pop
into
shufps
test
repz
dec
push
adc
mov
jmp
jle
sub
dec
jmp
mov
jecxz
xor
loope
mov
movsl
fists
add
sub
orb
js
cmp
mov
test
int3
cmp
lods
fildl
popa
sbb
xchg
sbb
out
leave
sbb
pusha
in
aaa
ss
outsb
mov
xor
fdivrs
pop
pushf
push
and
mov
orb
or
dec
dec
jnp
dec
or
aaa
js
imul
jle
popf
jle
mov
inc
and
mov
jle
add
pop
add
or
repnz
mov
xchg
jnp
addl
adc
adc
bound
stos
nop
push
xor
push
popa
test
in
and
mov
xchg
incl
inc
xchg
cmp
addr16
xor
pusha
data16
cmpsl
inc
test
fiadds
out
dec
mov
mov
pop
outsb
pop
popf
fidivrl
test
cmp
sub
in
popf
aaa
xor
shrb
mov
cmp
cmp
jbe
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
adc
mov
ja
adc
cltd
pusha
out
inc
xchg
in
or
es
and
cmpb
jl
fldt
xor
rolb
lret
js,pn
mov
das
pop
jo
sbbb
xor
or
cmpsl
leave
push
fucom
xor
inc
adc
mov
xchg
dec
add
and
cmp
sbb
dec
cmpsl
shl
ljmp
cmc
test
mov
mov
mov
xor
pushf
pop
mov
or
push
gs
pop
cmpl
add
fldl
adc
aam
sbb
pop
ficompl
rolb
mov
pop
divl
pop
ds
jae
push
cmp
xchg
rcrl
test
cmpsb
xchg
ret
and
pop
pop
scas
adc
xor
jp
dec
push
rcr
xor
jae
mov
mov
or
cmp
jno
sti
xchg
dec
mov
adc
push
and
daa
mov
sub
mov
push
mov
icebp
mov
jnp
mov
mov
ljmp
scas
mov
mov
pop
emms
pop
mov
int3
fisttpl
jl
call
loope
push
xchg
sub
scas
jmp
sahf
and
jp
pop
pop
je
push
jge
xor
mov
loop
or
pop
repz
loope
aaa
cmp
scas
inc
lea
rorl
pop
adcb
je
popf
inc
jae
aas
and
mov
xor
inc
adc
lea
cmc
stos
mov
mov
xor
clc
xchg
xchg
inc
mov
outsl
mov
add
out
jecxz
imul
stos
push
adc
mov
rolb
xchg
das
sbb
in
repz
pop
sbb
jae
decl
sub
xor
push
xor
mov
outsb
push
mov
inc
inc
inc
pop
pop
aaa
sub
inc
xchg
call
stos
mov
pop
or
inc
out
mov
icebp
jle
dec
mov
or
dec
xchg
rolb
sub
cmp
popa
mov
adc
mov
call
shlb
negb
punpcklbw
fnstcw
fcomps
hlt
pop
popf
dec
mov
cmp
repnz
lods
subl
and
cmp
shll
mov
roll
icebp
sarl
jp
xor
mov
daa
pslld
push
and
jo
pop
cmp
stc
mov
std
cld
xchg
and
sub
push
pop
hlt
movsb
push
or
mov
test
cmp
xchg
cmp
mov
test
cmp
push
add
cmp
push
les
out
inc
daa
pop
cli
push
jecxz
and
xchg
lea
pop
mov
adc
fildll
out
jmp
movhps
nop
mov
in
jmp
pop
sbb
fcomps
mov
loopne
int3
mov
sub
ret
sbb
int3
push
jns
inc
jp
push
jmp
mov
xchg
mov
mov
bound
leave
outsb
push
cmp
cmpsl
jbe
adc
dec
inc
int
rcrl
mov
out
lea
loope
jnp
scas
aam
sahf
jmp
xchg
cmp
jns
cmp
xlat
lock
push
sbb
or
sarl
cmovns
popa
out
imul
in
in
fidivrl
cs
push
repz
test
outsb
in
movsb
sbb
repz
fisttps
dec
cmc
leave
sub
xchg
ret
lahf
mov
lahf
cmp
repz
mov
imul
setne
movsl
push
aaa
push
arpl
xor
gs
and
shlb
pop
mov
mov
flds
sub
fmul
jns
push
shlw
fsubr
sub
addr16
mov
mov
in
mov
aas
mov
dec
das
adc
jne
push
out
enter
push
pop
das
sbb
jmp
push
lock
xchg
pop
outsl
pop
lods
movsl
lods
aaa
loopne
js
mov
das
jae
xchg
push
lahf
repnz
cli
mov
inc
xor
sub
div
in
lcall
add
push
pop
push
fsts
fldt
or
and
jg
and
jnp
loope
int3
mov
sti
mov
bound
jnp
sbb
daa
mov
mov
add
mov
lcall
pop
sbb
xor
scas
jmp
or
adc
arpl
jle
iret
mov
mov
push
push
xor
add
push
scas
aaa
dec
dec
pop
jmp
idivb
mov
sub
mov
ja
iret
loopne
dec
aas
add
scas
test
fldenv
pop
dec
push
rcrl
inc
clc
lahf
dec
pop
mov
mov
sbb
popf
aad
divl
sub
xchg
bound
and
notb
sbb
stos
mov
fstp
lcall
add
leave
icebp
ljmp
subl
dec
mov
into
repz
xor
fucomi
sbb
push
mov
push
sbb
and
sub
stos
aad
cmpsb
xor
lret
mov
push
pop
push
jle
or
mov
jg
fwait
or
movl
sahf
and
sbb
test
daa
sbb
or
bound
pop
jne
es
or
push
xor
xchg
stos
mov
cmp
mov
add
sub
addb
loope
pop
push
test
jg
mov
das
lahf
roll
stos
out
inc
inc
js
inc
popa
outsl
mov
push
hlt
inc
divb
arpl
cld
addr16
xor
or
imul
mov
outsb
inc
fdivp
cmp
jle
dec
jecxz
jp
inc
jg
push
js
imul
xor
inc
pop
jae
pop
mov
addb
out
test
inc
jne
mov
rorl
daa
and
add
ja
inc
lret
popa
add
and
ret
std
std
leave
clc
mov
leave
sbb
push
push
aad
adc
sub
scas
xorb
dec
dec
aad
dec
dec
ljmp
mov
cld
out
dec
sbb
push
push
xorl
jo
lret
notb
mov
insb
mov
sub
inc
sbb
push
add
aas
dec
rorl
hlt
in
jmp
dec
mov
pusha
mov
mov
cmp
lods
cmc
test
dec
inc
js
xchg
inc
add
pop
fdivrl
dec
ljmp
int
mov
cwtl
pusha
das
mov
stc
imul
movsb
jns
inc
jge
test
lock
cmp
pop
add
cs
outsl
push
jg
adc
test
add
loopne
push
orl
xor
lret
fimull
icebp
sub
bound
push
mov
mov
movsb
mov
push
jne
mov
xchg
add
xchg
xlat
mov
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
data16
es
jp
ja
fsubrp
push
outsb
mov
and
xchg
mov
sbb
cmpl
jbe
lfs
fcompl
jo
or
leave
xor
and
sarl
gs
movsb
mov
rol
sarb
movsb
xchg
bswap
fs
std
bound
loope
cmp
add
add
cld
outsb
fbld
pop
shlb
add
cmp
ror
movsb
pop
bound
sbb
jecxz
and
xchg
pop
icebp
insb
cmpsl
push
fists
aad
sti
int3
cwtl
mov
mov
addb
loopne
xchg
cmpsb
adc
push
jl
das
rol
aam
push
nop
sbb
insb
xor
pop
mov
xchg
mov
cmpl
sti
mov
je
add
adc
cmp
inc
aaa
jp
in
outsb
push
sahf
imul
add
push
jo
pop
loopne
and
push
mov
dec
sbbl
in
adc
imulb
in
lock
xchg
jns
and
xor
std
lret
cmp
ds
nop
mov
sar
outsl
fdivr
cltd
adc
jae
out
xor
js
mov
inc
daa
aad
in
xchg
cmc
xor
test
add
mov
or
jl
stos
lret
sahf
mov
adc
stc
mov
pop
inc
call
xor
fimull
call
lret
mov
fwait
xor
loopne
inc
ss
sub
call
sub
stc
add
cmpsb
test
mov
aas
sahf
testl
shll
in
mov
lcall
mov
loope
cmpsb
repnz
sub
cmp
dec
stc
jg
sahf
daa
push
in
out
dec
gs
or
pop
mov
adc
fldenv
in
int3
pushf
mov
xor
mov
inc
add
jno
test
insl
inc
and
addl
hlt
pop
andl
or
pop
inc
aaa
aad
sbb
xor
inc
fisttpll
dec
lahf
je
sub
or
add
mov
inc
scas
sub
or
addr16
dec
sub
sub
push
jbe
inc
mov
and
lods
icebp
outsb
mov
mov
or
push
inc
fistl
jle
stos
push
xor
mov
data16
or
xchg
sbb
jno
xor
jae
dec
cmp
icebp
es
fdivrs
pop
int
xor
out
imul
out
xchg
pop
cmpsl
sub
mov
jp
push
fidivrl
ret
iret
add
adc
cmpsl
int3
cltd
jbe
loope
loope
inc
mov
nop
popf
mov
xor
lds
mov
pop
xchg
testl
and
sbb
mov
int
data16
inc
inc
aas
jecxz
pop
mov
movsl
shrb
xchg
ret
and
repnz
mov
sbb
cmc
stos
jg
mov
out
dec
rorl
mov
mov
xlat
sbb
adc
loopne
lahf
aaa
test
sub
or
mov
scas
jb
inc
sbbl
imul
mov
imul
inc
mov
cmp
sub
mov
popf
shlb
ja
push
movsb
sub
mov
lods
or
cld
sbb
xor
ret
mov
mov
dec
in
cmpsl
imul
das
fcmovu
sub
aad
loop
lock
add
shl
lret
movsb
cs
lods
xchg
inc
add
add
lret
add
sti
rcrl
jno
cmp
ss
into
bound
imul
pop
dec
mov
mov
imulb
and
mov
dec
adc
mov
fdivl
bound
int3
ljmp
jbe
js
push
cltd
adc
scas
rolb
push
popl
lret
addl
insb
int
pop
adcl
aam
mov
or
je
cwtl
test
pop
adcl
fwait
or
out
mov
sahf
lahf
loopne
fwait
mov
or
pop
mov
je
out
clc
inc
push
addb
inc
inc
lock
lods
idivl
adc
daa
add
mov
ja
iret
push
lds
cmpsb
inc
xchg
pop
ss
aaa
or
xor
mov
and
cmp
mov
and
outsl
cmpsb
in
out
mov
xor
and
dec
outsb
cmpxchg
cmc
scas
imul
sub
cmp
jle
pop
sub
in
mov
mov
in
or
repnz
mov
mov
enter
push
imull
pusha
inc
inc
adc
xor
jg,pt
mov
push
clc
sarl
loope
jb
mov
aam
or
fistpl
and
fwait
aaa
bound
xor
xchg
jo
adc
test
mov
pop
lock
pop
cltd
sub
in
sub
imul
pop
sbb
ljmp
je
xrelease
jl
xor
mov
out
cmp
scas
mov
daa
xchg
outsb
or
insl
shlb
inc
dec
popa
das
movsl
add
pop
push
and
repz
adc
in
mov
adc
mov
pop
aaa
jns
lods
dec
fmuls
xchg
push
outsb
pusha
imul
out
pop
or
pop
pop
sarl
or
adc
rorl
repnz
jecxz
out
cs
mov
add
fwait
insl
xchg
xor
insl
jo
fisttps
rol
mov
and
push
add
idivl
mov
mov
lret
mov
sbb
fdivr
pushf
imul
xor
outsb
push
fdivrl
fstl
cmpsl
insb
cmpsb
jmp
push
scas
mov
jae
xchg
xor
les
fs
mov
into
fcompl
ret
or
rorb
mov
rcll
ss
mov
loope
mov
popa
std
loope
sub
insl
push
shl
insl
pop
pop
andb
flds
cmpsb
xchg
insb
call
jnp
xchg
cmc
scas
sbb
fdivp
cmpl
test
inc
sbbb
pop
scas
loop
popf
outsb
pop
xor
aas
and
out
idivl
add
inc
pop
push
loope
loop
cmp
sbb
xchg
pop
shl
sub
pop
leave
add
xchg
enter
sbbl
gs
les
sub
inc
sbb
xor
inc
inc
stos
push
inc
fcoml
sub
andl
pushf
pop
lea
mov
dec
and
xchg
fdivrl
imul
jae
push
out
push
mov
lock
push
inc
loope
xor
lods
mov
mov
jbe
shll
out
adc
mov
push
out
int3
lret
inc
cmp
push
inc
add
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
rcl
jl
pusha
push
ja
test
pop
xchg
and
add
ficoml
add
cwtl
jge
or
mov
imul
inc
push
jnp
fidivrl
ret
jae
rorb
outsb
repz
push
sbb
sbb
in
movsb
fsubrl
fbld
xchg
jecxz
subb
repnz
mov
clc
xchg
aas
add
inc
sub
fwait
xchg
xchg
adc
mov
xor
cli
xor
idivl
aad
nop
jae
push
mov
jecxz
pop
dec
pop
sbb
cmp
pop
adc
je
lret
cs
scas
sub
nop
dec
inc
leave
lods
add
not
in
sub
aam
popf
int3
mov
mov
xchg
sbb
lcall
movsl
outsl
fmuls
dec
stc
and
cmp
in
repnz
sub
ljmp
fwait
loop
pushf
push
stc
pop
lods
call
pop
mov
inc
jne
jb
jge
rorl
int3
fwait
jmp
add
lds
pushf
es
sub
lcall
mov
test
scas
jno
add
xorl
iret
adc
or
jge
mov
inc
xchg
das
outsl
nop
test
pop
roll
rorb
scas
mov
lock
pop
inc
jae
mov
inc
loop
addr16
ljmp
or
lret
insl
and
sbb
add
xchg
jns
mov
pop
sub
and
jecxz
mov
aam
sbb
test
aaa
sbb
adc
gs
mov
and
cmp
aaa
xor
adc
gs
push
shlb
dec
xchg
cmp
jb
aaa
pop
movsb
lret
cs
sub
aad
movsb
hlt
sbb
adc
sub
outsb
jle
sbb
lods
push
push
xor
push
movsb
jp
adc
mov
push
nop
jne
repnz
mov
pop
or
mov
dec
mov
and
sti
cmp
mov
jp
adc
lret
add
ss
add
cwtl
sbb
jb
test
pop
push
jne
mov
test
cmp
scas
mov
aas
ror
sahf
lahf
sbb
push
mov
mov
je
in
and
fidivrl
aam
cmc
cld
sti
lock
int
pop
sub
cmp
inc
shr
and
lcall
test
stc
pop
loop
addr16
fwait
sbb
sbb
mov
sarl
aad
xchg
mov
clc
out
scas
jnp
fs
pop
js
xor
lea
mov
fldcw
xor
sub
sbb
xor
pminsw
inc
aad
cmc
sbb
jbe
in
or
je
mov
and
subl
jb
sub
mov
lods
fsubl
adc
int3
mov
sub
in
lea
lds
not
xchg
push
inc
rorl
adc
stos
xchg
dec
or
je
insl
rorb
jbe
ja
in
dec
push
in
in
cmp
push
adc
xor
push
shrb
movsl
popa
lcall
fimull
leave
xchg
adc
das
sbb
movsb
jg
out
or
pusha
jge
jge
mov
je
clc
push
adc
xor
adc
pop
add
adc
out
jp
jno
sbb
sbb
push
inc
cmp
sbb
lds
xor
xor
shrl
or
cmp
jne
hlt
dec
faddl
fcmovne
dec
jle
lods
hlt
repz
dec
lock
in
xchg
cld
push
push
pop
inc
ss
dec
mov
lret
mov
xor
stc
add
lret
adc
and
mov
scas
adc
dec
stos
orb
mov
jp
out
dec
data16
sub
test
or
pop
mov
pushf
mov
mov
push
fcmove
add
mov
lcall
jbe
add
push
fidivl
lret
sti
test
push
stc
jp
adc
into
xor
call
or
negl
ror
cli
mov
imul
fsubr
mov
dec
aam
pop
jns
les
pop
adc
xor
mov
jns
jecxz
outsb
sbb
xor
xor
int
je
out
cmp
fists
pop
scas
call
dec
pushf
ja
test
mov
xchg
pop
in
jp
fisttpll
call
stos
dec
xchg
js
xchg
dec
pop
scas
push
add
subb
rorb
pop
push
pop
add
add
sub
jg
les
je
fcompl
js
fsqrt
rol
ljmp
adc
lret
mov
int3
mov
cmpsl
in
mov
test
pushf
xor
mov
mov
jecxz
dec
filds
pop
mov
lret
jnp
jl
test
jmp
xor
xlat
in
mov
cli
mov
cltd
stos
mov
or
mov
es
mov
in
cmpsb
loop
xchg
or
and
movsl
es
fisubs
aaa
es
not
sub
ja
loopne
inc
out
movsl
shl
iret
faddl
iret
mul
xchg
stos
inc
cmpsb
fwait
lret
shll
in
lods
mov
lods
cmp
subb
cmp
in
clc
push
jg
mov
inc
sahf
push
rcll
jns
icebp
mov
xor
sti
test
pop
pop
sub
imul
aam
call
push
jbe
popf
lahf
cltd
aam
pusha
or
mov
xor
aad
xchg
gs
pop
pop
xchg
sub
jmp
pushf
jne
lods
cs
ja
lea
adc
sub
add
enter
js
sub
lret
xchg
cmp
mov
dec
mov
pop
and
xchg
pop
fsubs
cmp
xchg
push
and
adc
insb
sbb
adc
dec
inc
xlat
inc
gs
inc
mov
sbb
in
xchg
je
add
insl
push
cmpsl
mov
jecxz
adc
mov
aad
pop
add
push
sbb
and
sub
mov
enter
mov
sti
int
adc
out
aad
sbb
pop
xchg
mov
cld
pop
sahf
adc
je
mov
mov
int
js
inc
call
xor
push
mov
sbb
stc
xchg
adc
xorb
lock
sbb
stos
mov
idivb
outsl
sbb
inc
cmpsl
sbb
lret
cld
mov
hlt
pop
pop
cmp
push
adc
dec
in
jne
lds
aaa
imul
cvtpi2ps
jb
ret
mov
ret
xchg
and
cs
movb
xchg
pop
loope
xchg
pop
mov
push
lret
dec
psrlw
les
jl
mov
loop
mov
ss
mov
mov
dec
jl
lods
cmp
sarl
lcall
jno
arpl
test
and
aaa
cmp
add
xchg
jg
test
pop
loopne
inc
mov
push
orb
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
xchg
adc
stos
rcl
gs
push
decb
inc
aad
jle
cwtl
and
cs
in
or
sub
into
xor
xchg
aaa
xor
inc
imul
jb
dec
mov
inc
jb
clc
in
xor
push
aam
push
leave
adc
inc
loop
inc
lds
repnz
inc
stos
daa
push
std
pop
xor
js
push
scas
rorl
push
mov
sbb
mov
fs
ror
in
dec
push
mov
pop
xchg
jmp
xlat
pop
sbb
pusha
jle
es
gs
lods
xchg
stc
inc
adc
cmc
and
movsl
scas
mov
test
insb
faddp
stos
orl
adc
ret
jge
test
test
lahf
pop
cmp
cwtl
lret
push
jg
jae
inc
cld
cmp
jno
adc
jecxz
sub
mulb
into
in
movsb
cmp
pop
lret
xchg
aam
rcrl
in
in
loopne
jp
or
xchg
shll
adc
fsincos
addb
popa
cmpsl
adc
sti
sub
scas
mov
adc
clc
mov
sub
dec
aas
xchg
sbbb
aad
lcall
arpl
mov
push
cs
shrb
sub
jg
stos
in
mov
sbb
dec
adc
idivb
jg
lahf
aam
add
movb
outsl
pop
inc
jbe
pushf
mov
lcall
das
rolb
lret
hlt
bound
mov
and
xchg
sub
mov
out
sahf
imul
or
gs
or
jae
repz
dec
adc
fsubrs
bound
push
dec
pusha
or
push
sbb
xor
sti
out
add
ds
adc
pop
mov
gs
jle
mov
jb
stc
cmp
daa
ljmp
sub
mov
dec
jecxz
lods
push
call
scas
outsb
out
js
cs
sub
popf
jle
or
mov
jno
cmp
inc
hlt
lcall
daa
pop
rcl
adc
lock
mov
in
pop
and
xchg
mov
push
in
dec
lret
test
push
imul
pop
mov
or
iret
pop
jbe
ljmp
fisubl
call
pushf
je
xor
lods
arpl
add
cmp
sub
ret
push
inc
outsl
jecxz
pop
cmove
fbld
cmp
jmp
cmpsb
popa
dec
mov
pop
cli
test
xchg
xlat
or
andl
add
movsl
lret
ficompl
push
shrl
call
cmp
aas
enter
add
in
mov
and
mov
fstpt
ljmp
xchg
test
push
aad
popf
adc
pop
ret
adcb
add
rorl
imulb
or
push
adcb
enter
fcomps
cmp
roll
add
imul
and
pop
sbb
incl
push
push
aas
cli
out
mov
dec
add
xchg
scas
cwtl
loope
push
xchg
ja
xlat
je
cwtl
in
dec
add
movsb
sub
lods
ss
cmpb
js
push
cld
dec
arpl
lret
cld
gs
dec
adc
mov
imul
inc
jmp
xorl
dec
daa
in
adc
and
pop
jnp
cltd
in
jle
icebp
bound
mov
orl
clc
lret
jo
pop
insl
aaa
test
or
sbbb
bound
xchg
cmc
mov
pop
jbe
lods
jp
sbb
bound
adc
push
jl
pusha
in
and
jbe
dec
repz
pop
movsl
scas
daa
xchg
idiv
stos
test
ljmp
aad
cmc
cmc
jae
xchg
push
mov
addr16
or
movb
fiaddl
jmp
and
std
lcall
cld
sub
outsl
sbb
mov
jbe
mov
jle
ja
push
pusha
push
mov
rcl
repz
jb
xchg
mov
fcoms
xchg
out
jnp
adc
cmp
and
andb
mov
lock
pushf
stos
cmc
pop
xchg
mov
ret
jns
lret
mov
jl
shr
and
or
mov
pusha
push
sub
ret
iret
pop
jae
inc
outsl
dec
enter
into
rcll
call
pop
mov
dec
mov
or
sub
aad
out
sub
js
clc
sti
loop
cmpsb
xchg
mov
test
jg
or
pusha
cmp
adc
xor
in
pushl
arpl
fwait
mov
sub
sbb
sub
cs
sbb
push
adc
stos
push
xchg
xor
fadds
pusha
sbb
or
and
ss
cmp
roll
cwtl
lret
repz
xor
imul
imul
aaa
or
cltd
in
fimull
stc
repnz
mov
cld
jle
cmp
sbb
mov
xchg
ficoml
and
dec
push
and
pop
enter
and
push
add
call
fidivs
push
aam
ljmp
mov
scas
dec
test
mov
es
sub
sbb
xchg
repnz
je
popf
adc
sarl
push
add
cmp
xchg
xchg
cmp
xchg
inc
push
pop
fldt
shrl
and
negl
add
mov
inc
cmc
sbb
aam
mov
into
add
jmp
js
add
scas
shll
pop
push
add
or
arpl
lods
call
and
js
cmpb
mov
or
and
xchg
push
push
mov
mov
xchg
iret
insb
mov
mov
xchg
sbb
xor
add
pop
test
push
cmp
pop
mov
mov
mov
xchg
ss
sbbl
test
outsl
movsl
ss
das
test
sub
and
ljmp
dec
dec
xlat
mov
out
dec
imul
test
iret
sahf
sbb
stos
jge
push
repnz
movsl
xorl
out
dec
lock
cmp
xchg
shll
shll
insb
adc
sub
pop
cmp
fcmovnbe
mov
out
sarl
inc
scas
mov
xchg
dec
or
jmp
incl
lock
cmp
loopne
cmp
or
push
dec
ss
mov
jns
mov
dec
and
jnp
adc
in
inc
pop
inc
cmp
sahf
aam
add
fidivl
add
pusha
xor
shll
jo
pushf
or
std
hlt
sbb
aad
xchg
push
imul
lock
cli
bnd
lods
inc
xor
daa
sarl
sbb
xchg
insb
aad
popw
test
mov
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
push
xor
outsl
dec
ja
and
push
lcall
leave
mov
int
push
ret
add
sub
mul
movsb
cmp
nop
jecxz
cmp
movsl
hlt
jecxz
lret
xchg
or
mov
data16
jp
out
push
mov
scas
xchg
push
mov
lock
sub
pop
lock
sub
adc
stc
adc
test
ljmp
test
test
loope
pop
dec
lea
jmp
pop
loop
ss
outsb
pop
xorb
fimull
dec
pop
xor
enter
stos
mov
test
jp
push
je
fistl
test
dec
ret
out
adc
xchg
and
cmp
cwtl
jnp
add
notl
mov
pop
xchg
test
or
out
enter
ja
pop
sti
leave
pop
es
shrl
cwtl
mov
jmp
mov
lods
sub
js
aaa
adc
push
xchg
mov
sbb
in
iret
mov
fistps
fstps
repz
es
pop
cmp
adc
insl
roll
push
add
aas
jae
push
lret
jp
cmp
in
sbb
ror
xor
testb
imul
push
sub
das
testl
in
mov
sub
loop
fiaddl
mov
dec
gs
xchg
lods
je
sub
jg
test
cmp
add
ret
out
dec
shrl
fistpll
pop
repz
xor
fsubrs
jecxz
movsb
adc
xchg
pop
xor
jno
xchg
test
xchg
scas
arpl
jbe
xchg
arpl
inc
mov
jae
subl
je
test
xor
divl
or
out
test
int
push
ret
add
or
jbe
xor
sti
out
push
cs
jo
push
rorl
fisubrs
jb
jae
mov
out
out
mov
out
outsb
mov
jmp
mov
push
mov
push
jne
xor
push
aam
cmp
dec
and
jno
mov
adc
movsb
cwtl
aam
jns
pop
adc
mov
add
shrl
jae
xchg
cli
dec
enter
ds
xchg
mov
cmp
enter
push
pop
or
test
sbb
test
add
xor
cld
cltd
or
jb
cmpsl
test
fisubrl
ret
adc
push
popf
push
xchg
mov
aad
or
pop
je
add
push
push
jnp
push
mov
pop
sbb
jmp
ss
sarl
push
popa
sbb
aaa
mov
inc
pop
mov
xor
adc
inc
mov
jge
and
cld
jge,pt
mov
ja
push
out
insb
jge
sub
mov
add
ret
lds
jecxz
xchg
pop
jo
sub
in
xchg
fsubrl
jbe
stos
inc
das
dec
stc
and
ret
xchg
pop
out
jbe
lock
jae
mov
in
jae
ret
jl
dec
cld
mov
sbb
jge
out
outsl
pop
dec
jmp
mov
out
push
inc
call
push
sbb
sub
sar
xor
adc
outsb
jl
lea
ret
test
mov
lret
adc
insl
or
sub
jmp
push
dec
add
xchg
sbb
out
fdivrs
dec
and
cmp
or
test
push
sarl
dec
or
adc
in
jae
inc
mov
aaa
movsl
shlb
jmp
je
xor
jnp
pop
and
add
add
xor
loop
dec
cltd
lods
test
rcl
push
or
lods
jmp
sub
repz
xor
scas
mull
xor
jle
movsl
insl
lret
inc
sub
xor
lock
daa
cmp
das
pop
push
jecxz
and
inc
xchg
lea
jne
cmp
xor
insb
outsl
sbb
mov
sub
scas
and
cmp
lahf
push
mov
dec
adcb
lret
push
fs
jg
lock
cltd
cmpsb
cltd
mov
mov
out
fistl
push
mov
outsl
mov
xor
call
faddl
adc
dec
jmp
jecxz
mov
addr16
iret
cmp
pusha
push
sbb
sub
aad
add
pop
int3
dec
jb
out
loop
xchg
outsb
insb
int3
or
push
test
jmp
frstor
sub
sub
mov
pop
inc
aaa
fmull
int
pusha
dec
xchg
insb
stos
xchg
mov
jle
adc
clc
jmp
add
sbb
jns
pop
repz
sub
sti
mov
adc
adc
push
rcl
pusha
xchg
jp
jp
mov
shll
pop
inc
rorb
pop
addr16
js
test
xchg
pusha
adc
ds
jmp
loopne
cli
adc
or
pop
xor
subb
push
mov
pop
imul
sbb
pop
cmp
ljmp
scas
xchg
xchg
adc
mov
stc
jbe
jo
mov
imul
ffreep
clc
dec
push
rcrb
ljmp
mov
icebp
insb
mov
in
repnz
cmp
rcrb
insb
pop
cld
repz
jno
sub
jo
or
adc
lock
dec
pop
or
popf
nop
cmpsb
jge
add
fldt
push
lods
lret
in
lock
xchg
xor
jno
sub
sahf
or
imul
dec
inc
call
bound
xchg
push
inc
pushf
loope
xchg
int3
testl
mov
das
pushl
repnz
fstl
push
fmuls
inc
js
inc
icebp
mov
pop
enter
push
lret
bound
inc
mov
mov
cli
mov
int3
int
xor
mov
adc
stc
das
rcrb
mov
ret
lret
and
inc
cmpsb
adc
fstpt
clc
xchg
and
fadd
pop
data16
adc
cmp
jmp
mov
add
pop
lretw
push
pop
push
dec
cwtl
xor
and
repz
adc
je
mov
fisubl
add
sub
loope
sbb
push
add
es
ds
push
cmp
push
jne
xchg
fwait
leave
sti
icebp
ja
sub
xor
lahf
dec
sub
push
enter
test
js
pop
lea
pop
dec
mov
push
inc
mov
mov
sbb
div
sbb
push
push
divl
and
cs
test
sbb
ss
mov
test
fistpll
sahf
rorb
inc
mov
dec
dec
sbb
or
adc
push
imul
mov
loop
in
cltd
push
jmp
dec
xor
ret
xlat
arpl
movsb
cmp
mov
sbb
inc
inc
shrl
outsl
arpl
sahf
cmp
push
cmp
les
rorb
push
inc
dec
insb
ret
idivb
push
add
and
stos
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
xlat
loopne
dec
call
add
sti
push
sbb
fisubrs
call
dec
push
sti
imul
test
sub
fsub
inc
fiaddl
sbb
pop
and
mov
lea
ds
inc
push
cmp
stc
test
push
mov
xchg
and
mov
inc
fildll
stos
xchg
mov
cltd
inc
mov
adc
dec
insl
fsubrl
cmp
cmpxchg
dec
add
iret
dec
outsl
push
outsl
cmpsl
jns
aaa
cmp
pop
ficomps
fnstenv
popf
pop
scas
push
add
stos
test
push
test
dec
pop
stos
scas
xor
jo
push
lcall
test
mov
stc
pop
mov
and
mov
jge
mov
or
mov
outsb
sub
adc
pop
roll
push
xchg
leave
dec
jb
aad
stos
or
pop
sbb
dec
and
pop
lret
mov
into
std
mov
es
jno
xchg
fnstenv
and
sub
jmp
xchg
mov
lcall
test
pop
outsb
cmp
or
lods
dec
xor
jp
sbb
je
int
or
mov
or
stos
rcrl
mov
cmpsb
or
push
and
insb
and
mov
fsubl
jle
fidivrl
ja
mov
pop
xchg
loope
pushl
lock
jmp
and
and
aad
and
das
out
jmp
inc
mov
or
jns
xor
hlt
push
adc
sub
das
mov
das
lds
push
out
je
pushf
aas
xchg
cmc
mov
sbb
mov
pop
loopne
push
in
dec
fistps
jmp
test
hlt
lret
loope
ss
repz
mov
jmp
inc
add
aam
in
enter
sbb
pop
xor
add
sub
push
xor
mov
movsb
or
shr
xor
pop
js
imul
insb
jmp
xlat
mov
dec
loop
mov
adc
gs
or
pop
rcrl
push
sub
sbb
jge
cmc
fwait
sbb
xchg
mov
mov
sbb
xchg
xchg
outsb
fisttpll
das
and
sub
adc
js
cwtl
push
push
push
sbb
movsb
inc
dec
add
mov
popa
shll
mov
cli
movsb
cmp
inc
mov
mov
icebp
in
adc
insb
sbb
popa
add
es
adc
jb
jbe
push
jl
test
roll
jp
sti
push
pop
iret
int3
sub
nop
xchg
lret
test
xlat
lods
mov
jmp
xchg
rolb
jne
push
or
filds
sbb
out
pushl
add
sbb
test
scas
or
lods
adc
ss
pop
inc
cmp
sbb
inc
xchg
pop
int3
sarl
ss
outsb
cmp
and
sub
mov
inc
adc
call
sti
sbb
dec
and
pop
out
jmp
push
cli
sub
aas
sub
scas
mov
fucomi
jle
lods
add
add
or
div
test
sahf
lahf
xor
add
daa
lods
add
adc
mov
and
std
xchg
ret
sub
adc
rorb
xor
lods
ret
jb
or
cmpl
or
test
imul
push
fidivs
fistpl
aad
push
lret
pop
incb
inc
xchg
insl
sbb
fidivrs
push
dec
mov
into
roll
sti
xlat
fidivrl
pop
ret
pop
xchg
scas
jg
mov
outsb
pop
dec
out
loopne
push
mov
lea
pop
mov
ljmp
xchg
ja
mov
iret
lods
pop
testb
mov
scas
xor
iret
lods
push
and
xor
xchg
popa
xor
adc
lahf
insb
int
pop
sbb
xor
xchg
push
aaa
into
lods
pop
je
arpl
xor
fbld
xlat
dec
loop
xchg
popf
cmpl
mov
dec
sahf
or
adc
mov
js
jp
mov
push
mov
jg
es
xchg
inc
scas
pop
or
adcl
lods
aaa
or
ja
xchg
nop
push
mov
cmc
addr16
add
mov
mov
test
xor
or
dec
lahf
cs
sbb
fmul
and
pop
sbb
cmpsb
stc
or
in
dec
mov
pop
xchg
test
bnd
notb
and
sti
addr16
loopne
sub
mov
cmp
aad
cmp
lret
xchg
xchg
push
jl
out
out
jno
dec
adc
stos
fisubrl
cmpsl
cmp
nop
shrb
rcrl
push
lds
pushf
push
adc
jns
xchg
or
xor
pop
fs
ja
inc
mov
sbb
jno
pop
fs
push
in
cmp
jge,pt
mov
lahf
sbbl
cmp
in
addr16
leave
addb
jge
inc
jne
adcl
or
cmpsb
in
sti
xchg
push
mov
lcall
and
and
std
add
inc
pop
fbld
sbb
inc
loop
sbb
lds
fisubrs
and
ret
enter
jbe
lcall
addr16
jne
addr16
and
inc
lret
dec
xchg
push
push
mov
scas
mov
adc
bound
scas
mull
into
stc
dec
mov
xchg
xor
lcall
shl
imul
push
ds
out
cli
rcrb
xchg
dec
push
inc
pop
sbb
test
sub
jno
mov
ficomps
mov
xchg
pop
int3
sbb
lea
outsb
push
mov
and
jo
dec
jecxz
scas
push
cmp
divb
dec
js
idivb
jg
cmpb
loope
sbb
fld
ljmp
jae
and
mov
jns
xchg
ret
dec
cmp
addr16
in
mov
inc
lret
jne
cmc
xchg
add
jne
push
out
fs
mov
or
xchg
test
pushf
js
and
mov
pop
xchg
xchg
cmovp
mov
sbb
stos
jno
inc
enter
jo
int
sbb
fwait
ret
xor
xchg
in
popaw
cmp
daa
imul
mov
cmp
aas
sub
cmpsb
dec
push
xor
shlb
int
push
inc
xchg
mov
mov
mov
lret
jnp
xor
ret
xor
repz
inc
out
cmp
imul
leave
pop
push
add
faddl
mov
pop
sub
in
rorl
pop
out
mov
inc
pop
aaa
inc
icebp
xor
dec
shrb
pop
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
inc
mulb
subb
ja
xchg
scas
pop
adc
lcall
pop
aaa
dec
gs
inc
push
popf
cmpl
cmpsl
in
xor
sbbl
shr
and
std
test
and
leave
pushf
mov
popf
shl
pop
loopne
adc
xlat
pop
adcb
pop
jg
icebp
mov
test
xor
into
push
xor
mov
or
sub
dec
andb
rorl
ret
addr16
push
add
sbb
lret
scas
in
int
fstps
and
ret
imul
popa
mov
jp
shrl
pop
sahf
and
xchg
movsl
test
js
dec
outsb
xchg
sbb
xchg
add
cmpsb
lret
mov
sbb
jge
cwtl
pop
add
sub
push
stc
iret
xchg
fidivrs
dec
data16
xor
add
inc
xchg
cmpsb
sbb
adc
or
xorb
ret
pop
dec
das
and
jecxz
mov
and
xor
and
sbb
mov
jge
pusha
sub
sahf
in
sub
popf
pop
repnz
outsb
mov
xor
les
outsl
in
push
out
xor
and
in
stos
mov
push
cmp
or
out
jae
mov
neg
popa
pop
insb
push
imul
inc
mov
sti
insb
cltd
xchg
rclb
or
test
fsts
push
xor
mov
ret
and
cli
and
arpl
dec
bnd
repnz
je
cs
lock
push
mov
int3
scas
and
xchg
push
test
push
in
sbb
mov
push
test
mov
mov
ffree
movsl
push
fucomp
jae
cmp
push
aam
push
outsl
push
xor
mov
push
jnp
imul
cmp
lcall
xchg
jle
dec
jge
or
mov
pop
loope
sub
pushf
shr
cmc
insl
les
call
jbe
or
xor
popa
repz
cmpsl
fisubl
mov
movsb
xchg
xchg
add
sahf
sbb
mov
in
enter
xchg
lds
push
notl
les
xorb
icebp
cs
mov
or
mov
push
mov
nop
in
add
icebp
and
jg
inc
xor
lds
sub
cmc
push
push
in
add
mov
jp
pop
ret
adc
repnz
cmc
aaa
faddl
mov
mov
push
call
out
add
mov
lret
loopne
rcl
in
mov
or
bound
ss
mov
jg
mov
cmpl
inc
mov
mov
cmp
xor
pusha
adc
inc
push
stos
rorl
iret
adc
fprem
xchg
cmp
cmpb
mov
inc
fbld
fsubp
cli
notl
sub
sbb
out
or
dec
sahf
sub
insb
cmpsb
test
xor
dec
pop
cmpsb
sub
imul
ja
dec
pop
aaa
idivb
inc
cmp
mov
test
jg
lea
add
jbe
fimull
shr
pushf
dec
inc
xchg
stos
sub
xor
loopne
or
pusha
insb
xorl
outsb
shll
mov
add
xchg
outsb
iret
mov
shlb
loopne
mov
insl
mov
jo
cwtl
inc
jecxz
mov
jns
movsb
mov
jmp
dec
add
out
pop
sbb
inc
lcall
sub
pop
xlat
sbb
mov
xor
pop
daa
idivb
fbld
ds
out
mov
outsb
pop
aam
cmp
sub
test
sbb
pop
jl
cmp
push
adc
lret
jb
in
js
fwait
or
or
inc
xor
adc
jl
dec
adc
ffree
outsl
rclb
adc
imulb
or
mov
mov
fdivrp
or
push
add
rcrb
movb
outsl
pop
push
push
push
notb
divb
fs
and
xchg
jno
sub
outsl
seta
adc
mov
andl
pushf
lahf
icebp
shll
add
mov
push
cmp
mov
mov
cmp
outsb
add
loope
lods
outsb
rcrb
xchg
cltd
fisubrs
or
adc
std
jne
rcr
cmpsl
dec
sub
insl
mov
or
xlat
push
mov
pop
daa
xchg
mov
jg
sub
mov
xchg
aam
add
clc
lods
leave
mov
push
sbb
pushf
sbb
xor
inc
cmovle
or
mov
jmp
shrl
popf
cmp
clc
nop
test
lods
jae
insl
sub
sbb
mov
mov
jg
insl
outsl
fadds
stos
adc
icebp
xor
push
xor
and
pushaw
mov
fists
dec
cs
test
or
ds
mov
div
icebp
jge
mov
xor
mov
push
push
fistpll
std
clc
mov
ficoml
aas
int3
pop
push
cwtl
mov
dec
jmp
and
fstps
add
adc
push
pop
pushl
frstor
pop
scas
subl
dec
pop
arpl
adc
cmp
jb
push
rolb
mov
dec
shrb
push
mov
negl
insb
ret
pop
sbb
lret
loopne
push
and
das
mov
xchg
mov
mov
cmp
cli
sbb
pop
sub
adc
std
and
sub
fdiv
out
add
mov
jo
push
push
stos
aas
enter
push
sahf
daa
jno
hlt
and
and
in
adc
imul
push
insb
cmp
add
gs
cmpsl
mov
jne
mov
lea
enter
push
ss
mov
iret
sub
mov
jp
pop
test
sbb
mov
mov
xchg
mov
and
xchg
push
aaa
xor
lods
mov
in
inc
fs
test
mov
negl
in
adc
mov
pop
hlt
enter
shl
out
dec
and
and
fpatan
jns
fwait
pop
add
mov
outsl
jnp
sarl
xor
pop
adc
dec
inc
cmp
cmpsb
rcr
pushf
or
addb
or
and
and
subl
mov
sub
inc
stos
ret
repz
xchg
mov
xor
adc
es
inc
mov
les
pop
daa
push
xchg
pop
mov
dec
pop
or
in
shrb
xor
mov
je
mov
fnstcw
punpckhbw
insb
gs
inc
fistpll
enter
andb
jge
pop
addr16
fldt
addr16
dec
xchg
dec
pop
xchg
sub
add
out
rorl
enter
leave
push
movsl
lret
sbb
gs
stos
out
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
push
jbe
mov
sbb
ja
jle
pop
imul
mov
fucom
pop
rcll
imul
lcall
adc
mov
popa
or
nop
add
arpl
neg
push
push
frstor
std
lret
shrb
js
repnz
mov
dec
jo
or
imul
pop
mov
push
imulb
fistl
mov
hlt
sbb
xchg
xchg
push
addr16
push
loopne
jo
sbb
enter
dec
ljmp
lods
and
push
filds
ljmp
sub
push
dec
or
xchg
stc
xorl
push
cmpsl
or
fs
mov
je
gs
mov
xor
rcll
insb
int
cltd
shl
push
arpl
inc
pusha
mov
inc
pop
dec
imul
cmp
icebp
cmp
jbe
in
fdivrs
push
pop
xor
in
ljmp
dec
int
lcall
lahf
fmuls
loopne
cmc
int3
sub
sbb
ret
jne
mov
xchg
inc
popa
push
loopne
idiv
jae
adc
mov
ja
sub
sahf
push
js
movsb
pop
bnd
or
and
into
xchg
sub
pop
cmpsl
fistl
jbe
out
bound
stos
loope
jbe
lods
adc
jno
cmp
xchg
je
adc
int
leave
xchg
and
and
inc
fistps
cmp
shr
fidivrs
lock
and
cmp
pop
fdivl
loopne
jg
lcall
rorb
lods
mov
ss
clc
movsb
cwtl
add
icebp
pop
sub
jg
add
js
out
push
push
push
push
push
ret
call
pop
jbe
jnp
in
mov
or
js
insb
repnz
push
lret
mov
ret
outsb
mov
roll
mov
sbb
pop
adc
inc
dec
push
add
and
and
movsl
test
rclb
push
pusha
scas
sbb
faddp
lds
scas
dec
das
cmpl
inc
out
jmp
rorl
les
aad
popf
xor
stos
les
cmp
mov
leave
adc
pop
push
ja
push
das
pop
adc
test
mov
add
or
sub
xorw
stc
mov
ret
fcmovnu
fsubrs
inc
fwait
dec
jno
std
cmp
xchg
and
cmp
fcompl
mov
es
icebp
les
mov
je
jae
std
fistpl
aam
cmp
adc
insl
sbb
out
cmc
inc
lock
pop
sub
jle
cmc
lahf
fimuls
es
dec
adc
dec
or
rcl
cld
sbb
les
lock
clc
popf
andb
mov
mov
rol
and
nop
or
dec
into
cmpsb
das
add
adc
xchg
mov
mov
cmp
dec
sub
js
rcrl
call
mov
xor
or
or
js
sti
imul
arpl
pop
mov
xchg
jne
es
sub
sub
push
jbe
add
cmp
lock
sbb
fwait
dec
mov
push
pop
adc
inc
adc
pop
ss
lahf
rcr
mov
cmp
mov
cld
add
out
mov
or
aad
push
outsl
mov
imul
xor
inc
out
leave
rorb
add
cwtl
pop
cmp
sub
sub
add
mov
inc
lods
fmuls
push
add
pusha
pop
xchg
mov
icebp
movsl
inc
sub
mov
mov
pop
lods
lock
test
mov
bound
and
mov
cli
xchg
mov
xchg
lods
sub
loopne
lret
sbb
dec
mov
insb
test
adc
inc
cltd
inc
sbb
cmp
adc
test
add
cwtl
xchg
cmpsb
hlt
sub
popf
es
fiaddl
aas
sub
pop
inc
rorb
call
cmpsb
adc
out
repz
jno
fsubl
inc
pop
adc
lahf
cmpsl
lods
fbstp
stos
dec
aas
sub
scas
inc
inc
ja
inc
or
stc
xchg
lods
loope
enter
sub
lret
sub
cltd
ret
pop
outsl
cwtl
and
cmp
movb
mov
sub
jb
int
cmc
movsb
adcl
cs
inc
daa
dec
lods
add
lods
jg
jg
sbb
ljmp
xor
dec
cltd
sahf
or
ja
lcall
rcll
jne
arpl
addr16
or
mov
pushf
int
inc
scas
add
popl
cli
in
aad
mov
outsl
sbb
aaa
popf
test
mov
mov
mov
test
inc
adc
and
fcom
enter
inc
push
movsl
inc
sub
std
lcall
test
inc
mov
push
stos
std
push
cmp
or
insl
lods
xlat
bound
mov
gs
mov
mov
icebp
stos
movsl
or
push
mov
add
popa
sbb
cmp
loope
sub
loopne
out
cmpsl
dec
inc
jp
adc
cld
xchg
inc
imulb
sub
int
mov
insb
xchg
dec
imul
test
std
and
pop
jp
gs
fisubrs
leave
cltd
sbbl
pop
out
nop
jno
bound
sbb
xchg
daa
mov
addr16
dec
fwait
mov
and
mov
icebp
mov
out
cmp
mov
pop
sbb
push
or
inc
or
popf
imul
mov
mov
rorb
sub
mov
xchg
imul
push
cld
jbe
xchg
pushf
aas
scas
mov
out
push
xchg
std
sti
aas
push
ss
in
mov
and
adc
movb
pop
jbe
mov
jb
fstps
lods
xor
adc
repnz
iret
mov
sub
jge
sti
addr16
fdivr
aas
mov
shrl
sbb
in
cmp
pop
subb
add
addr16
or
push
jae
inc
push
sub
call
inc
push
adc
adc
fisubrl
sub
es
sbb
cmc
xchg
jne
frstor
pop
aaa
out
or
out
and
push
cmpsb
adc
mov
inc
mov
shll
jp
pop
outsb
mov
cmp
mov
mov
mov
shrb
clc
mov
xchg
mov
mov
pop
jne
mov
insb
fdivr
int3
mov
sbb
dec
out
mov
in
cmp
add
jecxz
cld
and
jmp
movsl
xor
mov
dec
ja,pn
cmp
loopne
inc
lret
mov
flds
in
fisttpl
adc
rolb
mov
adc
sub
add
test
jae
mov
xor
xchg
dec
push
ret
sbb
jns
jno
sub
pop
adc
repz
and
inc
jb
inc
inc
jb
xchg
jno
aad
xor
or
addl
shl
imul
jmp
add
or
or
adc
mov
add
jg
jmp
addr16
cmp
out
jl
scas
wbinvd
gs
imul
jbe
push
lret
push
dec
mov
adc
ljmp
sbb
or
add
hlt
ds
loopne
mov
pop
or
enter
mov
mov
jl
mov
push
mov
jp
fisubrl
jno
cltd
loop
add
mov
push
mov
bound
mov
push
cmp
aas
leave
fdivs
xor
add
cli
jmp
sarl
fildll
je
jae
stos
and
dec
pop
sub
sbb
fs
scas
js
or
je
out
add
rcrb
scas
xchg
lds
icebp
rol
push
adc
ss
pop
js
jmp
rcrl
sub
mov
in
decb
mov
int3
pop
aad
bound
mov
add
mov
or
and
jge
add
test
pop
or
push
dec
cld
sti
loopne
notb
mov
ret
fidivrs
mov
jge
insb
test
movsl
in
dec
call
dec
into
mov
fbld
ret
dec
jle
dec
push
sbb
cli
jmp
imulb
xchg
mov
xor
inc
mov
stos
push
pop
cmp
ret
inc
add
pop
pop
cmp
mov
inc
mov
mov
xchg
push
test
outsl
add
mov
xchg
xor
jecxz
daa
and
jle
or
cmp
out
pop
out
inc
lahf
mov
ficompl
cs
adc
test
fimuls
adc
push
xchg
jne
mov
mov
add
pop
nop
repz
push
aad
jo,pn
jmp
add
dec
fcoml
clc
cld
and
lods
mov
sub
sub
xchg
stos
push
std
sub
inc
cmpsl
xor
incl
outsl
popl
mov
dec
mov
adc
aas
push
cmc
rorl
xor
xrelease
popa
xchg
outsl
into
dec
fwait
subb
sbb
mov
mov
testl
ja
cmc
or
mov
icebp
push
imul
les
mov
push
xchg
or
push
sbb
sub
mov
jnp
outsb
push
dec
idivb
aam
aas
and
pop
mov
xlat
push
jmp
pop
or
outsb
imul
test
add
sub
xor
mov
out
orl
mov
daa
iret
jne
data16
dec
mov
xchg
outsb
xchg
sub
movsb
jns
aam
cmp
xlat
jb
jp
in
pusha
test
jno
cli
sub
adc
ja
jb
mov
adc
inc
and
mov
jg
jno
pop
mov
ds
push
mov
in
pop
dec
jb
popf
lods
clc
pop
mov
jnp
sub
int
jg
js
mov
inc
inc
dec
and
int3
xchg
jb,pt
je
ljmp
cmp
mov
lahf
enter
test
add
dec
divl
sti
mov
mov
andb
in
mov
addb
sbbl
mov
movsb
aas
imul
add
mov
mov
adc
leave
push
lret
adcl
in
cmp
xchg
add
xchg
cmp
cld
inc
js
sub
lods
das
popa
loope
push
xchg
add
repz
or
sahf
mov
mov
and
jnp
aas
jb
dec
jecxz
movsl
loop
mov
fcmove
sahf
pop
pushf
aas
dec
lods
popa
adc
and
fbld
dec
xchg
loopne
in
popa
and
inc
in
mov
pusha
cmpsl
xchg
sbb
subl
adc
xchg
test
push
inc
pop
xor
xchg
mov
xorl
xchg
and
popf
push
enter
inc
cs
xor
iret
sbb
fnstcw
cmpsl
mov
mov
icebp
pop
sub
cmp
and
sbb
cmpsb
xchg
lods
mov
nop
xor
fbstp
fldenv
int
and
or
cld
cmp
addr16
aam
jmp
and
pop
add
xchg
cmp
dec
mov
inc
pushf
dec
cmpsb
xchg
push
clc
loopne
clc
dec
mov
leave
xchg
out
add
inc
add
jno
movsb
mov
inc
jmp
outsl
cs
fimull
mov
xor
or
out
test
outsl
dec
dec
mov
clc
pop
mov
fstpt
inc
loop
jns
jp
add
hlt
sub
inc
pop
test
ds
sub
pop
cld
aaa
jecxz
mov
sbb
cmp
push
sub
lods
jnp
push
jg
fwait
xchg
adc
and
and
ftst
fwait
aaa
sub
fimull
in
jle
ret
movsl
jp
movl
and
xchg
mov
jo
push
dec
js
cmp
and
cmpsl
adc
dec
jmp
jge
adc
movsb
cmpsb
jns
dec
push
int3
in
sahf
pop
out
mov
repz
fdivl
add
sub
popf
pusha
imul
jl
pop
xor
xor
adc
cli
repz
leave
ret
je
jg
push
ret
jns
push
dec
inc
jb
insl
pop
clc
sbb
fwait
push
dec
dec
or
pusha
dec
mov
aaa
pop
xchg
and
ljmp
and
dec
loop
stos
or
popf
ss
inc
shll
lret
negb
xchg
mov
mov
jo
mov
or
lahf
lcall
pop
xor
gs
or
xchg
bound
mov
cmc
and
sbb
dec
pop
pop
cmc
insb
mov
sbb
in
insl
xor
clc
insl
push
mov
hlt
bound
mov
clc
fs
in
mov
mov
fisttps
and
or
xchg
inc
lock
sub
sbb
mov
loopne
jg
push
mov
mov
pop
movsl
lcall
ficompl
std
shlb
in
aam
loopne
jge
jle
das
cmp
cmp
cmp
push
cmp
mov
popa
pop
mov
ljmp
movsb
lock
cmp
inc
hlt
jg
mov
cmc
sahf
inc
and
loopne
ret
jmp
pop
cmc
inc
pop
xchg
aaa
pushf
fstpl
mov
lods
fwait
jp
rorb
and
jmp
push
add
push
ret
fwait
movd
test
pop
dec
sub
xor
adc
inc
sub
xor
lods
jge
or
pop
add
mov
in
pushf
mov
mov
adc
xor
ficoml
movsl
jne
push
xchg
xor
jecxz
adc
xchg
dec
mov
push
std
sub
pop
dec
adc
mov
loopne
and
pop
sbbb
push
jns
jno
ja
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
punpcklwd
xchg
or
ja
int3
sbb
pop
es
pop
push
push
mov
lret
jno
shl
jecxz
adc
xchg
cmpsb
dec
sbb
pop
mov
gs
shrl
mov
add
add
mov
aas
test
inc
push
inc
adc
inc
bound
pusha
pop
mov
call
mov
and
or
mov
mov
mov
pop
push
out
or
xchg
into
cmp
in
int
xor
mov
mov
test
cmp
sbb
pop
call
xor
pop
out
and
ficoml
or
and
adc
add
cs
popf
inc
xchg
fwait
xchg
cmp
fcoms
in
incl
sbb
notl
jne
ret
jmp
mov
pop
dec
fsubs
jnp
testb
cli
outsl
pop
mov
add
dec
jg
out
mov
jae
fwait
scas
rorb
xor
jle
loope
mov
sub
sbb
cmc
dec
or
push
stos
mull
ficoml
arpl
jecxz
out
jp
or
xchg
hlt
xchg
xchg
pop
pop
mov
and
mov
pop
fwait
mov
pop
ret
dec
stos
jnp
mov
add
sbb
movsb
xchg
pushf
ror
mov
add
and
rcll
cmpsb
xor
push
aas
int3
inc
mov
jecxz
cmpl
clc
jo
andb
imul
fnsave
mov
es
out
dec
sbb
cmc
inc
insb
xor
inc
hlt
pop
inc
test
and
in
cmp
jo
shr
push
sub
imul
std
test
inc
scas
push
xchg
jno
xchg
pop
inc
inc
dec
dec
cmc
inc
movsb
ret
jb
fists
cmp
adc
ss
mov
leave
cld
mov
xor
rol
loop
push
xor
incb
mov
push
cmp
out
mov
cmp
test
cmpsb
mov
pop
mov
push
std
or
sub
out
out
lock
dec
inc
outsb
mov
or
push
mov
data16
add
jae
or
add
sbb
xor
dec
or
movsb
leave
and
gs
and
sub
daa
lea
rol
cld
aam
add
push
test
xchg
scas
and
mov
sbb
les
mov
sub
ss
movsb
xchg
aam
inc
push
add
cmp
dec
xchg
mov
or
xchg
daa
addr16
mov
sbb
mov
pop
sbb
xchg
push
int
mov
arpl
sahf
ljmp
lea
xchg
cmp
sbb
lds
stos
cmp
leave
mov
in
mov
bound
or
or
jae
int
mov
xchg
dec
jo
xor
sbb
pop
imul
cmpb
jg
test
cmp
pop
lock
xchg
adc
inc
cmc
sti
ds
orb
enter
push
inc
icebp
into
pop
mov
call
sub
jl
xchg
and
cmpb
ljmp
mov
negl
push
push
cmp
nop
xrstors
scas
shr
stos
scas
xor
imul
mov
arpl
push
stos
sbb
mov
decl
jbe
ds
mov
push
out
fucom
pcmpgtw
add
cmp
mov
orb
cmp
mov
push
test
fildl
stos
popa
push
mov
add
out
xor
xor
and
test
inc
mov
mov
add
dec
outsl
sub
pop
aam
jge
loope
dec
stc
test
dec
jne
cmc
and
cmc
mov
pop
arpl
mov
repz
mov
ss
nop
fbld
mov
cmp
shl
and
xchg
xchg
cmp
cmc
jns
jp
aaa
cmp
imul
cld
xor
and
jmp
addr16
fnstsw
gs
fisttpl
mov
jle
out
rcrl
sbb
adc
gs
imul
dec
cmp
imul
and
sti
addr16
cmp
sahf
mov
xchg
adc
cmp
and
inc
int
in
sbb
fisttps
int3
sbb
divb
inc
sub
mov
adc
and
inc
xchg
aad
push
jle
daa
dec
mov
roll
jp
push
mov
cmc
mov
or
lods
int
icebp
test
cmpl
addl
mov
popf
sbb
mov
cmpsl
sub
ret
and
pop
leave
or
pop
adc
push
xchg
push
inc
faddl
leavew
std
cmp
lds
imul
aas
scas
sbb
adcb
mov
sub
movb
imul
call
cmpsb
pushf
into
pop
test
cltd
jno
push
or
movsl
lock
lock
inc
cmp
dec
cmp
test
cmp
push
jg
sbb
dec
mov
pop
int3
xor
mov
cmpsb
pop
insl
lods
out
insb
jge
sub
xchg
push
mov
popa
stos
fists
mov
cmp
add
cli
ds
mov
aad
pop
pop
push
xor
loop
xor
pusha
jne
cld
sbb
inc
jge
pop
lahf
pushf
mov
xor
jo
pop
lock
push
sbb
out
add
push
movsl
fidivrl
fsin
je
call
sub
dec
mov
incb
shrb
push
or
push
fwait
jecxz
jge
mov
inc
fisubrs
jge
adc
push
in
dec
jbe
iret
popa
pop
int3
popa
fsubp
inc
mov
add
adcb
push
sbb
sbb
pop
cmp
sti
pop
mov
pop
das
insb
mov
jmp
dec
in
cwtl
pop
int
cmpsb
xor
adcl
mov
insl
fadds
mov
sub
jno
fnstsw
andl
stos
cld
push
or
or
imulb
mov
int3
sub
jge
xor
sbb
inc
stos
mov
stc
rcrb
sarb
fildll
movsb
xchg
loope
mov
sub
pop
lods
push
pop
mov
daa
out
mov
or
sbb
popf
mov
mov
inc
xor
pop
loopne
xchg
and
test
jo
subl
mov
xchg
stos
jno
lods
out
cwtl
clc
pop
mov
xchg
cmp
test
cmc
push
mov
cmp
sub
and
rcll
adc
jne
stc
mov
in
scas
jb
mov
pushf
test
jecxz
pop
cmp
and
push
push
mov
pop
shll
xor
push
bnd
push
stos
or
popl
in
mov
xor
imul
jbe
sub
in
loope
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
dec
mov
add
inc
push
pushf
fwait
cmp
xchg
add
add
push
sti
leave
cmp
sbb
inc
pusha
test
push
push
pop
int
sahf
mov
stos
mov
lods
add
jae
mov
jne
jmp
pop
lahf
push
cmp
jns
xchg
fs
jmp
mov
inc
pop
adc
pop
daa
add
outsl
testb
lods
test
setne
nop
aam
stos
test
out
pop
in
jle
rcrl
jne
mov
push
sub
pusha
push
jg
icebp
hlt
subl
nop
shrl
rcrl
push
mov
stos
cmp
add
xchg
pushw
sbb
sub
out
sub
imul
imul
xchg
test
inc
fcompl
int
in
leave
push
push
daa
cmp
loopne
ljmp
and
jae
adc
fnstcw
cli
jnp
pop
dec
xor
sbb
hlt
mov
push
inc
daa
enter
loop
rorl
push
idiv
lock
mov
pop
cmp
ss
xchg
and
pop
cmpb
ret
sub
daa
fldl
call
in
sub
stos
cmpb
push
loopne
mov
or
ret
fpatan
jbe
sub
jno
cmc
adc
lock
push
repnz
inc
mov
cmpsl
mov
push
or
mov
and
push
add
fstps
outsb
or
xor
mov
stos
insb
out
mov
pop
fs
adcl
iret
sahf
pop
in
xor
aaa
push
mov
in
fs
mov
xchg
sbb
lds
ret
rol
out
sub
shlb
enter
shrb
ret
fsts
pop
pop
mov
xchg
mov
mov
pop
pop
xchg
xchg
xorl
and
push
add
adc
cltd
insl
push
push
adc
mov
push
dec
jmp
bound
or
test
sub
rol
cmpsb
pusha
in
sbb
add
or
arpl
loopne
movsb
daa
adc
imul
cmp
aad
loopne
pop
mov
lock
adc
mov
push
mov
pop
push
xor
cmp
test
outsl
sub
test
stos
out
fwait
andl
cld
lods
ja
jb
mov
test
in
ds
adc
inc
in
shll
xor
aad
push
sub
sbb
clc
add
push
mov
jbe
mov
sub
push
mul
ss
mov
fnstsw
and
ss
push
push
inc
cmp
ljmp
fdivrl
int3
inc
push
mov
repnz
insl
pop
movb
adc
ficoml
jge
jg
cmpsl
pusha
sub
jbe
add
cmpsl
xchg
and
push
push
add
repz
nop
jb
in
cli
xor
loope
adc
or
push
into
shrl
xchg
and
mov
scas
lea
push
shll
dec
xchg
in
dec
daa
sub
or
ret
hlt
jns
std
jne
lret
xor
ret
and
or
into
cmp
fs
or
ss
jge
xor
dec
ret
sub
push
push
sub
cltd
pop
shll
ss
xor
sub
push
add
mov
pop
mov
js
push
movsl
imul
out
push
cmc
mov
mov
movsb
sub
mov
mov
mulb
sbb
mov
xor
mov
sbb
in
sbb
mov
rcrl
out
rcll
cmp
inc
mov
cmp
outsb
pusha
and
mov
aam
aaa
xchg
fbstp
push
pop
add
adc
fwait
or
mov
push
clc
xor
mov
push
jnp
pop
mov
lea
xor
dec
lcall
jbe
cmpsb
add
push
cmp
out
je
jae
data16
sub
or
ret
fstl
repnz
push
addr16
sbb
mov
out
cmp
mov
xor
xor
adc
orb
jg
lret
push
icebp
push
cmp
or
sahf
dec
jl
jle
mov
scas
sub
dec
cmpsl
ret
or
call
aam
mov
mulb
nop
out
ret
clc
nop
pop
imul
or
insb
pop
loopne
in
iret
dec
xlat
bnd
repz
add
iret
icebp
dec
adc
enter
xchg
jo
in
and
adc
mov
addr16
add
test
push
shl
out
cmp
arpl
mov
sbb
inc
rcrl
push
mov
sbb
in
loopne
mov
jle
gs
scas
xchg
shlb
movsb
push
sub
out
mov
mov
fnstenv
leave
xor
fwait
push
subb
loopne
ljmp
mov
fs
jg,pn
test
mov
add
pop
jbe
into
pop
cli
loope
into
call
mov
xchg
cltd
test
inc
pusha
mov
push
sti
mov
cltd
sbb
daa
or
shll
aam
add
shll
ficoml
aam
dec
mov
ror
pop
iret
test
sub
mov
xchg
rol
adc
arpl
mov
pop
out
sub
shlb
push
inc
insb
sti
lret
or
add
xor
push
mov
push
negl
mov
ficomps
imul
pop
into
ja
xchg
push
cld
in
out
dec
push
rol
fldl
stc
notb
inc
fists
push
lret
aas
imul
sarl
or
ja
dec
aam
dec
mov
in
sub
and
xor
jbe
ds
mov
mov
or
movsl
xor
cmp
cmp
or
pop
daa
adc
and
mov
popa
dec
jnp
imul
or
mov
insw
mov
movsb
jb
lock
ljmp
add
pavgb
mov
cmp
jnp
repnz
push
cmp
imul
cmc
add
mov
fcoml
adcb
or
push
jle
leave
int
stos
xchg
movsb
pop
imul
mov
mov
mov
jbe
call
daa
test
adc
and
gs
cmp
out
add
xor
inc
mov
mov
insl
repz
pop
shl
sub
call
cwtl
push
and
scas
xchg
push
pusha
test
test
lahf
test
pop
xchg
push
shl
pop
jle
push
das
aam
sub
jmp
push
push
mov
mov
mov
sbb
adc
aas
mov
ret
aam
in
and
or
mov
ja
add
xor
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
je
xchg
sbb
and
repnz
rorl
in
mov
lahf
or
int3
adc
adc
clc
mov
js
mov
dec
das
mov
lcall
leave
cmp
or
das
jae
mov
in
jecxz
inc
imulb
mov
cli
jae
add
daa
push
xor
rcr
add
or
xchg
hlt
movsb
cmpsb
adc
in
sahf
in
shll
mov
cld
adc
orl
dec
mov
xchg
mov
popf
gs
xchg
push
jnp
and
adc
adc
dec
in
cmp
in
sub
push
fs
pop
and
sbb
vmovddup
inc
mov
inc
movsl
out
jmp
mov
push
jg
jg
mov
pusha
mov
cmc
mov
fistl
jp
pop
stos
gs
push
mov
adc
add
jle
test
sbb
fdivp
out
cli
ret
subl
fcom
sbb
push
int3
dec
push
cmp
mov
cmp
std
stos
mov
xor
mov
andb
xor
push
push
fstpl
jo
enter
sub
sti
and
imul
mov
cld
pop
pushf
loop
mov
testb
jle
push
loop
inc
jnp
shld
mov
xor
sbb
sbb
popa
repz
xor
loope
insl
shlb
stos
mov
xor
xchg
and
ljmp
xchg
in
mov
mov
in
rolb
jnp
stos
dec
adc
lret
mov
pop
cltd
testl
dec
xlat
ss
add
adc
ds
gs
test
cmpsb
inc
shlb
add
or
adc
pop
pop
add
push
cmp
pop
lahf
pop
dec
add
lock
ss
jmpw
xor
stos
inc
loop
inc
xchg
inc
aam
inc
loopne
xor
stos
and
out
jns
xchg
mov
cld
push
xchg
sahf
xlat
add
and
dec
pop
rcll
pop
outsb
icebp
mov
aas
sub
icebp
mov
sbb
or
fdivrs
pusha
xor
cmp
mov
lcall
iret
clc
ss
jnp
sbb
adc
lahf
rep
rcr
inc
stos
and
sbb
sub
test
jge
dec
jl
frstpm(287
mov
into
aad
jge
mov
inc
sub
fmull
cmpsb
jp
and
inc
stc
inc
test
insl
jle
and
sahf
jl
popa
bnd
push
xchg
or
xchg
sub
das
sbb
popf
cmp
mov
inc
mov
icebp
cmpsl
inc
mov
jge
in
ljmp
sbb
xchg
push
adc
ficompl
push
inc
jns
sbb
and
and
or
xor
add
loopne
dec
mov
addr16
cli
addl
xchg
jnp
ja
pop
cmp
cmc
repz
cmp
fisttps
mov
xor
outsb
jno
add
mov
repz
faddl
cltd
in
nop
ret
idivb
push
leave
inc
add
jb
inc
mov
xor
loop
fsubl
cmp
imul
pop
jae
xor
dec
xor
push
or
enter
js
jnp
aas
pusha
jb
mov
push
adc
test
ret
loop
test
xor
inc
xchg
pop
xchg
jnp
mov
bound
mov
stos
andl
out
or
out
and
fadd
jmp
jmp
mov
add
adc
push
and
jle
add
std
mov
shlb
loope
mov
cs
movsl
faddp
inc
jmp
mov
ret
add
pop
jnp
fisubrl
mov
xchg
cmp
xchg
xchg
mov
je
inc
adc
mov
fcmovbe
vpsraw
jo
xchg
and
push
pusha
cld
mov
dec
push
and
xor
cwtl
cmp
das
sub
jp
xchg
hlt
push
pop
adc
xor
inc
push
fnstsw
or
pop
leave
popl
hlt
ret
sarb
adc
cmp
and
fstp
xor
call
mov
rcll
jns
addr16
popa
ljmp
call
mov
pop
pop
les
push
out
push
inc
inc
mov
aam
and
sub
js
xor
insb
popa
sub
push
mov
jecxz
lock
adc
into
and
fldcw
xorb
test
out
repnz
and
lret
sbb
mov
loopne,pn
les
loopne
sbb
in
imul
cmp
popa
adc
imul
mov
xchg
fdiv
inc
jge
mov
mov
mov
dec
neg
mov
addb
and
jl
push
adc
cmpsl
ds
mov
std
loope
mov
outsl
leave
xor
test
sahf
xor
mov
mov
or
mov
mov
jo
pop
jp
push
stc
sbbl
addb
jno
or
daa
int3
inc
push
jle
cmc
int
xchg
subl
shll
stos
jecxz
pop
lock
jo
sti
fldl
aad
push
pop
jo
insb
mov
and
pop
mov
mov
loope
inc
test
loop
ret
mov
std
jno
ss
iret
jbe
xchg
jb
or
mov
sbb
push
cmp
adc
or
xchg
out
fstps
adc
test
xchg
stc
addb
and
flds
or
xchg
jae
data16
push
mov
cmpsl
into
pop
push
xchg
sbb
out
xor
loope
jp
cmp
pop
jl
testb
mov
inc
loop
insb
pusha
pusha
adc
movsb
mov
sbb
mov
and
in
push
mulb
sub
mov
sbb
and
out
sbbb
rclb
xchg
mov
sub
jno
or
inc
ret
adc
test
jno
lcall
inc
inc
cmp
jmp
fcoml
int
push
push
adc
mov
mov
pop
popa
xlat
lea
push
dec
jne
xchg
rclb
sbb
and
repz
xorb
push
imull
gs
jecxz
jge
push
icebp
sbb
cli
mov
jmp
and
and
movsl
aam
cs
loope
bound
and
add
scas
cmpb
shl
loopne
popa
mov
mov
mov
mov
dec
es
mov
jle
jecxz
cmpsb
push
sbb
dec
mov
dec
outsl
lods
dec
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
cmpsl
mov
xchg
xorb
dec
cmp
aam
mov
imul
aas
mov
xchg
dec
lds
push
lahf
test
jmp
lods
test
mov
jp
xor
in
pop
dec
add
addr16
shlb
popa
enter
adc
out
into
mov
cmp
adc
xchg
enter
adc
jge
add
push
jbe
push
pop
add
popa
arpl
push
fs
cltd
idiv
jmp
out
jl
cmc
mov
daa
push
push
sub
dec
cmp
cmpsl
orl
mov
adc
push
mov
int3
xor
sub
push
cmp
push
movsl
dec
jg
icebp
push
fcomip
cli
and
mov
mov
cmpsb
lret
jae
jl
sbb
arpl
and
out
lds
lret
jecxz
nop
add
jecxz
pshufw
mov
xor
out
out
outsl
sub
dec
jmp
lods
test
lea
aas
add
cs
mov
ss
das
rcr
sbb
pop
out
and
stos
lods
sub
push
test
dec
nop
test
cwtl
cltd
mov
ret
adc
ljmp
insb
pop
mov
mov
enter
pop
xchg
jp
pop
loop
mov
mov
xchg
jo
mov
push
fildll
mov
push
push
mov
dec
mov
pop
mov
std
pop
rolb
push
hlt
or
outsl
push
es
push
push
sub
data16
int
cld
adc
in
mov
mov
lahf
fcoms
sbb
fnstenv
push
add
push
sbb
repz
inc
addr16
out
jae
loop
ret
jp
jmp
repnz
out
mov
adc
cld
pop
mov
xchg
and
push
cmp
and
cmp
jo
outsl
inc
cmp
nop
mov
or
jmp
js
fbstp
inc
iret
repz
test
ds
clc
xor
stos
test
leave
xchg
jmp
mov
and
push
adc
cmpsb
repnz
orb
xor
dec
and
mov
mov
outsl
loope
test
addr16
cwtl
sahf
mov
or
xchg
pop
sub
test
rolb
adc
ficomps
dec
add
ljmp
pop
cs
mov
pop
repnz
ret
push
fstps
xorb
lea
cmp
xor
push
dec
mov
outsb
enter
jmp
mov
mov
imul
stos
and
out
stos
insb
fcmovnb
cs
in
cs
mov
adcl
aas
fucomp
sbb
fnstenv
andb
pop
leave
sub
nop
push
xor
xchg
les
shrb
movsl
cs
shr
cmpsl
cli
stc
push
repz
inc
cs
andl
in
jge
mov
mov
mov
mov
ret
or
dec
inc
xlat
lahf
add
cld
stos
dec
fcoms
jnp
int
sub
mov
adc
fisubrs
popf
das
mov
lret
daa
lods
std
xchg
jle
mov
mov
add
out
test
jge
test
or
push
push
sub
push
jnp
push
or
daa
lds
mov
sarb
push
adc
inc
jle
pop
jne
sbb
imul
loop
xchg
jg
rcll
cmp
push
and
aaa
dec
out
jnp
xchg
jno
jl
jg
bound
pop
loope
fld
imul
test
jge
outsb
outsl
pusha
iret
rcrb
mov
iret
mov
cmp
or
div
mov
xchg
dec
fisubl
fsub
cmp
push
add
inc
dec
aad
int3
or
ja
xor
es
sahf
mov
sbb
dec
mov
stos
aad
in
xchg
dec
lods
iret
xchg
mov
xchg
or
jle
mov
mov
mov
leave
ja
inc
cmp
xchg
xchg
jb
xchg
jg
xchg
jmp
sub
mov
out
push
xchg
cmp
inc
and
arpl
push
jecxz
hlt
mov
shrb
pop
jecxz
mov
jg
mov
lods
and
dec
mov
loop
shll
or
adc
adc
imul
mov
jge
jnp
daa
inc
lret
cmp
cltd
fstpt
cmp
push
popa
xor
mov
xchg
and
adc
mov
fwait
jle
fcoms
shl
lcall
sub
lock
fdivrp
cmp
es
out
xchg
scas
push
bnd
into
mov
jle
aas
dec
xchg
xchg
pushl
lea
fwait
test
cld
xchg
test
inc
stc
data16
std
inc
stos
aam
test
andb
xor
leave
in
sbb
aaa
inc
mov
sbb
pop
pushf
aad
imul
std
jno
jo
xchg
sbb
imul
sbb
ret
inc
fnstcw
fnstenv
fistl
mov
lock
daa
gs
lds
push
sub
push
bound
and
pop
sbb
xchg
stos
leave
and
movsl
out
pop
jbe
leave
scas
outsl
cmp
push
inc
xchg
sahf
cltd
sbb
and
sbb
outsl
repz
sarl
inc
repz
lahf
push
inc
pop
pop
cmp
xor
jg
pop
jmp
int
jp
jge
incl
bound
adc
or
push
inc
daa
jmp
and
stos
jge
mov
rol
call
cmp
cld
jo
jg
xor
aas
mov
pop
jo
iret
mov
cld
push
pop
lret
xchg
jp
push
mov
adc
xchg
insl
int3
push
fistpll
subl
jl
jl
xchg
add
sub
mov
push
jne
loopne
test
fdivrs
and
push
dec
fnstcw
cmp
shl
mov
fnstenv
in
out
iret
mov
sub
push
xor
loope
mov
cwtl
xchg
pop
xchg
sub
jecxz
sub
movsl
popl
aam
mov
nop
lods
rorl
or
js
cmp
movd
inc
sbbb
inc
loopne
jne
pop
cwtl
adc
in
pop
jae
ljmp
shrb
fidivl
jecxz
jns
les
cmp
mov
stos
fcmovnbe
xor
jp
std
jmp
xor
inc
pusha
fnstcw
sub
leave
out
jl
fs
and
jle
leave
popa
xor
mov
in
in
sahf
and
ljmp
jp
mov
jb
data16
or
and
or
dec
outsl
rcrb
sbb
inc
das
scas
ja
dec
jbe
jp
nop
sub
jle
jg
xor
mov
sarl
adc
orb
xchg
lcall
mov
rol
nop
movb
pop
push
lret
hlt
rol
pop
and
push
jo
push
xor
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
bound
sub
pi2fw
out
popa
dec
mov
sub
int
pop
icebp
int
fcmovnu
stos
mov
fs
xchg
push
int3
add
aas
fsubrs
neg
fistps
or
and
push
mov
test
sarb
int
mov
lods
xchg
xchg
into
dec
add
pushf
xchg
jnp
loop
mov
sub
mov
gs
shlb
adc
or
add
pop
push
aaa
pushf
enter
push
repz
sbb
subb
jmp
jae
out
pop
popa
nop
orb
push
push
inc
add
and
mov
mov
sti
push
inc
mov
les
sbb
popa
decl
icebp
fldt
dec
jp
add
mov
scas
mov
and
mov
lea
mov
add
outsl
xchg
push
add
or
and
ljmp
les
pop
call
insl
imul
pop
push
mov
sbb
xlat
pop
or
out
inc
xchg
push
dec
fisttpl
es
pop
enter
mov
push
repz
push
orl
rcr
daa
jno
and
pop
xchg
std
xor
xor
jne
mov
mov
int3
aam
fbld
ljmp
cmp
add
fidivl
xchg
mul
test
lods
jae
mov
out
push
pop
fisttpl
lds
out
xchg
jg
adc
iret
mov
mov
inc
adc
jmp
mov
lcall
int3
and
cmp
xor
in
aad
bound
mov
andw
pop
stos
mov
or
pop
cmp
xor
lods
adc
sbb
repz
dec
mov
rolb
xor
stc
xchg
and
rclb
jno
push
enter
loopne
or
out
dec
out
jo
sub
xor
xchg
mov
insb
sub
andb
insb
jg
jmp
jp
sti
std
fcmovnbe
mov
dec
int3
pop
das
cltd
add
ljmp
daa
sub
std
fadd
hlt
jmp
nop
ds
pop
add
btr
out
sub
xchg
push
ret
sbbl
shrb
xor
popw
xchg
push
rclb
scas
loop
iret
mov
add
cmp
lea
mov
add
fildl
cmpsb
notb
mov
and
cmp
xor
test
or
xchg
pop
push
jno
or
inc
mov
adc
xor
test
divl
jae
daa
pop
repz
into
adc
lods
mov
call
dec
leave
add
or
lret
loop
xor
fsubr
std
cmp
jle
adc
lock
clc
cltd
notb
and
cmp
push
scas
mov
incl
je
dec
repz
cmp
adc
das
leave
cwtl
xchg
dec
mov
ret
cli
dec
jno
subl
fcoms
decb
fcompl
outsl
mov
jge
push
lret
lcall
jle
int3
xor
aam
dec
mov
xor
ret
scas
call
mov
lahf
loope
sti
add
ds
fsubrl
or
aad
sahf
mov
sbb
movsl
int3
add
jmp
cmp
inc
xor
mulb
out
mov
scas
adc
out
add
cmp
shlb
shl
cmpsl
cmovge
aaa
pop
mov
test
sbb
push
lock
mov
lahf
xchg
jnp
xchg
sub
or
add
pop
movsb
inc
xlat
or
aaa
adc
mov
in
fcoms
stos
mov
xchg
hlt
xchg
loop
rcll
dec
icebp
fidivrl
out
sbb
data16
es
adc
mov
testl
add
mov
lea
mov
lret
push
inc
enter
notl
mov
cmpsb
sbb
daa
mov
mov
pusha
pusha
sub
mov
shl
daa
jg
inc
je
mov
jne
fs
sub
adc
test
mov
psubusb
fimuls
adc
ficomps
lret
jle
mov
push
adc
xabort
sbb
push
dec
jge
sbb
push
sti
pop
lds
aad
nop
sbb
std
sbbb
js
fmuls
jo
daa
jmp
fidivrl
pop
in
hlt
shll
daa
xchg
repz
cmp
mov
mov
jmp
pop
cltd
lods
dec
adc
ljmp
push
in
mov
dec
jnp
xorb
mov
inc
mov
mov
pusha
test
in
leave
outsb
mov
and
add
bound
xor
dec
sub
ljmp
pop
icebp
and
jg
lock
test
cmp
adc
mov
fimuls
negb
leave
jns
add
jb
inc
daa
inc
xchg
out
pop
jb
out
and
push
xchg
lahf
cs
int
xchg
mov
jne
mov
mov
mov
stos
sbb
daa
leave
mov
dec
sti
xchg
cmpsl
mov
ljmp
push
cld
mov
lcall
and
arpl
in
add
pop
sbb
shr
xorl
les
xchg
dec
aam
xor
fs
into
stc
rcll
outsb
dec
push
gs
or
cld
ja
cmp
jbe
mov
dec
data16
das
jo
mov
arpl
mov
aas
lcall
pop
or
xor
adcb
ja
jmp
mov
lock
repz
xchg
nop
push
loope
jns
popf
jne
loopne
setbe
icebp
add
loope
lahf
and
rclb
push
fists
inc
ss
xchg
xor
fstpt
mov
mov
pushf
inc
nop
or
jg
js
rcrb
imul
dec
insl
jns
or
mov
fldcw
sbb
sub
xchg
jl
aas
adc
xor
outsb
test
cmpb
sbb
pop
out
shlb
into
sub
add
dec
rclb
push
mov
xor
fs
xchg
cmp
iret
arpl
nop
xor
leavew
jecxz,pn
call
jmp
test
or
push
test
mov
mov
fwait
xchg
push
mov
shlb
xor
cmpsl
bound
cmp
and
ficomps
pop
cmp
and
das
mov
pop
shl
mov
cmp
xchg
pushf
cmp
dec
fistpll
addr16
lret
lods
mov
xchg
je
divl
icebp
pop
aas
lds
stos
shll
mov
push
xorb
mov
mov
ror
jno
or
add
sub
dec
pop
or
imul
out
roll
rorb
push
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
ss
shrb
punpckhdq
push
insl
repnz
mov
pushf
or
or
ret
sbb
outsl
and
out
sbb
in
movsl
fstl
mov
add
sub
fldcw
call
sub
divb
cmpsb
sbb
mov
cmp
sub
mov
repz
cltd
popf
push
mov
lock
jne
outsb
inc
test
sub
sub
sub
bound
out
lds
or
mov
nop
imul
jae
orb
push
mov
repnz
sti
jne
jp
pop
test
cwtl
shlb
jne
push
jge
rorl
shlb
lea
sti
inc
xchg
mov
add
or
sbb
outsb
xchg
inc
in
cmp
xchg
addl
test
lds
xchg
or
pop
jecxz
sub
in
pop
sbbb
add
cld
dec
aaa
adc
mov
add
les
jo
ss
test
lret
clc
gs
mov
xchg
loopne
ljmp
pop
jns
int3
adc
in
outsl
mov
inc
adc
pop
xor
fwait
pop
mov
fisubs
sub
sarb
rol
sbb
dec
add
hlt
mov
dec
adc
fistpl
out
adc
mov
cld
adc
pop
aam
fcomi
jle
push
arpl
ret
mov
outsb
dec
xchg
mov
in
mov
xor
add
aad
push
jle
mov
scas
xchg
clc
xor
cwtl
jmp
shrl
dec
or
pop
lock
sbb
call
cld
mov
sub
pop
fidivrl
xchg
or
leave
in
dec
scas
and
xor
shl
aam
dec
push
sti
sub
lret
push
cld
mov
xchg
sti
jmp
cmpl
cmp
mov
mov
loope
jbe
inc
jns
fidivrs
mov
daa
mov
inc
negb
or
jb
add
push
sti
lods
inc
ja
jp
mov
lds
out
jge
dec
sub
sbb
sbb
movsl
lods
mov
fs
icebp
movsl
rcr
out
mov
dec
out
add
out
imul
jnp,pn
sub
lahf
loopne
loope
cmp
and
mov
push
mov
jl
icebp
imul
inc
test
mov
cs
loop
addr16
sub
mov
mov
or
mov
lods
int
push
jmp
out
or
pop
movsl
dec
popf
in
mov
dec
ja
pop
xor
dec
mov
imul
cmpsl
js
cmc
dec
iret
es
sbb
xor
and
push
pop
shll
addb
push
or
es
mov
mov
ficoms
push
pop
aad
cltd
add
xchg
es
xchg
or
push
into
cmp
gs
rorb
lods
inc
lock
fcmovu
jl
mov
out
ffree
dec
and
outsl
hlt
jl
adc
ds
ffree
sub
cmp
ret
jno
jl
pop
dec
sbb
ljmp
push
sbb
sbb
lea
adc
pop
sub
movsl
jae
sbb
movsl
mov
mov
jle
les
jae
mov
ss
cltd
dec
xchg
nop
and
cmp
dec
and
lret
sbb
or
cmpsb
and
lret
lcall
cmp
or
push
adc
repnz
dec
dec
out
or
cltd
aaa
sbb
push
mov
or
cmp
adc
adc
pushf
xor
loopne,pn
adc
xor
jge
in
jb
movsb
mov
repnz
sub
stos
hlt
in
fidivrs
or
cmp
sub
and
cld
dec
or
cs
adc
sti
pop
and
lea
adc
dec
stos
dec
out
pop
pop
add
cmp
cmpsl
jns
imul
fwait
cmp
adc
insl
dec
mov
dec
stc
pop
fistpll
and
and
hlt
shll
imul
fstpt
rorl
mov
mov
pop
sub
stos
inc
push
push
hlt
mov
insb
loope
jecxz
jmp
les
jle
xor
not
mov
aas
sub
cs
lods
jnp
div
ss
rcr
sub
rcrl
jnp
pusha
je
jae
mull
fs
sti
dec
jg
cmp
outsl
dec
mov
mov
cmpb
ror
xchg
push
mov
mov
std
adcb
fcomp
lcall
jne
sub
out
add
sbb
mov
lds
or
scas
cmc
inc
lods
add
jbe
rep
xchg
fsts
bound
push
lods
mov
mov
mov
and
push
mov
mov
sti
inc
pop
add
xchg
sub
nop
and
push
rol
movsl
lret
ljmp
ljmp
xchg
mov
cltd
add
sbb
lret
sub
xor
mov
push
insb
jp
sahf
fiaddl
cmp
ror
aaa
hlt
inc
sbb
dec
in
jge
sarb
dec
pop
divl
or
jp
loope
cmpsb
and
mov
scas
fcom
sub
pushf
in
cmp
fisttpl
mov
outsl
enter
les
and
or
inc
and
and
push
orl
jg
in
int
ret
add
orl
dec
clc
das
icebp
mov
and
movsb
xor
xor
xchg
rol
add
xor
mov
push
cli
mov
test
cmp
addb
push
data16
ror
mov
je
jp
cwtl
cmp
incl
jb
mov
sbb
jno
popf
fdiv
daa
clc
mov
xchg
lods
std
dec
outsb
and
push
mov
push
xchg
pop
insb
inc
jnp
sbb
push
pop
out
mov
incl
sub
test
xchg
add
pushf
shlb
push
or
outsl
adc
or
call
rcrl
mov
add
loope
and
cmp
lret
imulb
mov
incb
jle
mov
stc
fmul
test
sub
lahf
push
jnp
push
je
pop
sub
negl
sbb
addl
addl
insl
repnz
test
mov
dec
pop
pop
pop
pop
pushf
arpl
dec
sbb
icebp
fwait
mov
fxch
fcoml
gs
xor
repz
or
push
xchg
in
mov
pop
rcrb
lock
xorb
addr16
push
sti
sub
aas
pop
dec
pop
cmpsb
imul
stc
or
xlat
adc
movsl
pop
test
sub
lods
sub
out
scas
adc
fsts
jo
movsl
fldl
aad
mov
adc
push
inc
lods
push
dec
aas
stos
int
lock
xor
repz
out
sbb
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
shll
dec
aaa
mov
ja
ja
push
xchg
mov
inc
dec
mov
cmp
add
mov
adc
mov
pop
dec
push
mov
push
imul
pusha
inc
xor
clc
lods
aam
pop
xchg
addl
rorl
dec
xchg
adc
aas
inc
push
rcrb
rorl
xchg
lds
sbb
call
sbb
adc
push
scas
mov
push
jl
addr16
dec
lods
cmp
addr16
xchg
mov
stos
cmc
jns
lds
mov
or
xchg
inc
mov
hlt
lods
popl
mov
out
and
mov
cmpsl
int3
jge
mov
mov
ss
imul
xchg
popf
xlat
test
fisubrl
mov
push
mov
mov
ret
sbb
add
mov
mov
fisubs
shrb
cmp
jo
pop
sub
insl
cmp
and
xchg
fstl
loop
sbb
ds
fwait
mulb
test
pop
cmp
movsl
ret
lahf
mov
mov
test
cmp
in
cmp
mov
jmp
xchg
push
jnp
mov
ds
in
test
arpl
add
outsl
jno
nop
aaa
dec
inc
sar
xchg
fcmove
push
cmp
sbb
test
jl
jg
cmpl
pop
popa
mov
imul
push
fdivrs
push
mov
push
and
or
xor
in
mov
arpl
out
jne
int
mov
int3
sarl
or
pop
outsb
imul
xor
mov
rolb
inc
or
int3
xchg
adc
lea
xor
lahf
push
or
mov
xchg
push
fsubl
scas
enter
push
ds
sbb
xor
movsb
push
cwtl
pop
mov
jmp
fistpl
mov
dec
fdivrl
test
inc
inc
add
leave
insl
pop
out
js
cld
fildll
mov
push
outsl
fld
add
xor
push
fs
pmaxsw
fwait
dec
and
divb
inc
or
aad
inc
inc
into
mov
fs
mov
lret
std
cmp
push
or
bound
je
add
enter
xor
inc
xlat
mov
cwtl
mov
inc
sbb
or
popf
in
inc
add
popa
daa
imul
icebp
mov
xchg
sbb
rcll
pop
cmp
add
sti
cmp
ds
sbb
repz
mov
push
push
jo
push
inc
mov
pop
xchg
stc
movsb
and
cmp
call
add
lahf
pop
push
add
leave
cwtl
es
cmpsl
pop
call
lahf
pop
push
into
fs
and
xchg
or
sbb
inc
ljmp
xchg
or
pushf
test
loopne
std
orb
push
pusha
lds
push
xor
sbb
adc
roll
jne
rcrl
pop
pop
jbe
mov
jg
aaa
stos
push
and
mov
lret
loope
add
arpl
or
push
cwtl
cmpsb
rcr
imul
xchg
jle
out
cld
les
add
push
dec
jbe
cltd
inc
xchg
pop
and
lds
jmp
sbb
aad
push
add
pop
scas
cmp
jns
add
fnsave
add
ljmp
mov
pop
imul
stc
cmp
cltd
aas
loop
mov
xor
mov
dec
or
repz
stos
mov
or
insb
dec
mov
xor
inc
push
sub
sub
leave
jp
ja
js
lret
out
mov
sarl
rcl
sbb
inc
loopne
pushf
push
mov
pop
xchg
mov
xchg
jnp
and
arpl
lahf
into
mov
sarb
jae
inc
fcmove
movsl
pop
movsb
xchg
cmpsl
imul
iret
testb
and
cmp
frstor
clc
mov
mov
xchg
push
imul
jge
in
pop
xchg
stos
out
dec
fisubrl
jge
rorl
jno
mov
test
jl
pop
or
push
pop
popf
pop
jae
fists
cwtl
fidivl
in
sub
jge
mov
into
cmp
syscall
scas
es
out
ffreep
push
dec
jae
loopne
push
xchg
jns
mov
stos
icebp
divb
daa
aad
inc
lock
inc
outsl
testl
push
out
ror
pushf
rcr
ljmp
shl
adc
cmp
mov
pop
mov
ds
mov
and
clc
and
notl
cmp
ficompl
jno
mov
add
dec
inc
leave
sub
sub
pop
ss
enter
jo
in
cmp
adc
push
ss
mov
or
xchg
dec
aas
mov
dec
inc
ja
rdtsc
xor
jl
mov
and
fsubp
stos
lock
daa
lock
inc
fistl
mov
or
push
xor
add
cs
icebp
inc
fmull
jno
loopne
jp
fnsave
scas
push
shrb
cld
push
jp
sub
ljmp
ds
inc
jnp
imull
xor
push
inc
out
inc
arpl
add
adc
jns
lea
movsl
adc
notb
push
out
pop
dec
and
ds
inc
xchg
lods
xor
int3
addb
add
sub
and
mov
lods
rcrb
in
pop
or
aad
test
and
sbb
jbe
stc
fcompl
sbb
imul
sub
mov
insl
sbb
or
jae
jge
movsb
pop
ss
inc
adcl
mov
cmp
push
cld
and
xlat
push
xchg
js
subl
imul
sti
sarb
jns
pop
push
jge
pop
xchg
test
sbb
xchg
xchg
fstl
stos
xor
jno
inc
pop
sub
and
mov
sbb
or
shll
stos
not
push
int
lods
loopne
in
dec
jecxz
sbbb
or
data16
movsl
adc
sub
pushf
cmp
or
fidivl
shrb
repz
xchg
call
das
mov
repz
ljmp
loop
mov
loop
mov
and
decl
cld
cli
out
push
imul
mov
ret
rcrl
add
push
orb
pop
add
adc
fcmove
mov
mov
stos
sbb
dec
or
imul
xor
jp
mov
jb
and
stc
fsubrl
sub
outsl
or
mov
std
pop
xlat
pusha
test
lods
gs
jns
mov
outsb
das
push
mov
stc
pop
mov
push
pop
rcl
or
inc
orl
sub
fwait
and
jbe
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
sub
or
xchg
mov
movl
mov
pop
push
std
jb
daa
repz
cld
inc
dec
lcall
repnz
mov
adc
jns
test
dec
xchg
xchg
test
or
mov
insl
add
fwait
sahf
sub
push
movsl
fimull
repz
loopne
movsb
push
insl
pusha
leave
jecxz
ja
aad
out
lds
pusha
jle
sbb
jle
add
inc
popf
adc
adcb
push
sub
mov
push
pop
cwtl
xchg
rclb
into
push
shl
popa
cmp
lcall
xchg
push
sub
loope
movsb
mov
push
lcall
adc
cwtl
pusha
int3
data16
inc
lods
lret
inc
test
push
push
inc
aas
mov
cmp
xchg
lock
sarb
fcomp
mov
push
sub
jbe
add
mov
mov
sub
cwtl
imul
outsl
adc
into
mov
imulb
adc
test
pop
loope
addl
inc
xor
out
idiv
jle
popa
int
adcb
ljmp
movsl
mov
in
orb
add
xor
lea
bound
inc
xchg
mov
adc
inc
add
ret
je
inc
bound
mov
mov
xchg
mov
xchg
test
xlat
push
dec
in
mov
pop
xchg
lahf
dec
and
push
scas
sbb
int
inc
pop
add
add
jle
inc
mov
sbb
adcl
and
mov
test
repz
lock
inc
cli
repz
int3
sbb
jle
xchg
in
sub
and
repz
mov
jns
and
mov
insl
ret
xchg
mov
std
cltd
mov
stos
sbb
pop
insl
pop
jg
mov
jp
in
push
not
sub
adc
nop
sub
xchg
fisttpll
lcall
sbbb
movsl
rcrb
into
ds
fs
fcmovnb
adc
adc
adc
push
cs
fsubrs
mov
in
xchg
insb
ja
or
lahf
mov
mov
imul
cmp
mov
mov
mov
jmp
dec
and
shll
icebp
outsb
pop
adc
xchg
insl
cmp
push
jne
adc
out
cmpsb
int3
loope
lahf
shrl
es
testl
pushf
cld
je
add
sub
dec
fstps
cmp
push
scas
out
pop
into
inc
shrb
out
push
push
push
pop
rclb
add
ja
sub
inc
and
enter
sbb
call
fadds
push
loope
mov
das
push
les
cmp
inc
jecxz
jbe
loopne
inc
std
cmp
and
rcll
xchg
add
dec
jae
lods
lahf
push
push
or
sbb
push
xchg
lock
cmc
jnp
cmp
cmp
outsl
mov
mov
stos
and
lret
and
dec
mov
scas
testb
inc
sub
adc
notb
fdivr
insb
rolb
sub
mov
sub
popf
mov
jns
minps
and
inc
roll
or
mov
ret
adc
xor
lret
jle
gs
sahf
pop
jbe
addr16
jae
sbb
lods
push
or
pmaxub
cmp
xchg
dec
sbb
ret
rorb
test
mov
outsl
imul
push
pop
leave
aas
sub
rolb
push
insb
xor
mov
ljmp
pop
push
dec
jecxz
inc
push
add
iret
jp
mov
sub
repz
aaa
rolb
pop
adc
stos
ret
jnp
movsl
arpl
testl
mov
and
cli
ret
les
cmp
scas
fsubl
sbb
or
push
and
fwait
aas
add
add
push
cltd
xchg
or
mov
pop
or
mov
xchg
lods
cmp
cmp
mov
hlt
dec
xor
lret
inc
jecxz
sarb
jb
jnp
adc
shll
pop
in
push
gs
addr16
jno
and
cs
jl
jmp
popf
out
cli
inc
or
fs
mov
test
mov
arpl
or
test
pop
xor
xor
scas
or
inc
shl
dec
pop
add
icebp
and
and
inc
out
dec
lea
lahf
cli
or
pop
dec
imul
imull
jmp
fs
aam
adc
and
xchg
cmp
addr16
popf
cmp
daa
or
jae
lods
sbb
insb
push
rorb
and
pushf
scas
leave
push
jmp
out
popf
pushf
pop
test
cwtl
mov
xchg
sbb
dec
insb
js
cwtl
clc
push
jecxz
rorb
dec
adc
aas
inc
or
jo
into
xchg
ljmp
cld
fdivl
loope
movsl
mov
mov
or
rcll
or
cmp
cmp
push
adc
jne
aad
imul
or
xor
mov
pop
gs
insb
mov
in
inc
cmpb
mov
mov
je
cld
sub
gs
sub
jmp
xor
sub
xchg
xchg
clc
cmp
test
jne
pushf
pushf
push
mov
lods
cmpsb
or
test
and
into
mov
mov
add
push
sbb
xchg
fstpl
popf
mov
cli
mov
xchg
cmp
icebp
sbb
or
movups
stc
xchg
mov
xchg
inc
cmp
inc
shll
test
pop
popf
out
nop
sub
lods
movsb
lea
shrb
jo
mov
cmp
filds
js
call
cmp
shl
or
movsl
jmp
mov
je
loopne
or
or
or
lea
and
int
js
sbb
icebp
or
outsb
sub
insb
dec
js
push
sbb
mov
mov
ja
xchg
jbe
shl
mov
sub
jle
adc
mov
inc
jle
stc
mov
mov
mov
retw
ret
sbb
push
iret
pop
cmp
push
add
jns
sbb
add
mov
pop
inc
xor
div
xchg
lods
test
int
test
add
jle
je
iret
adc
lods
pusha
mov
dec
and
fwait
pop
imul
add
clc
mov
add
cmp
inc
adc
test
lock
push
call
adc
or
xchg
stos
dec
dec
lahf
jne
sbb
fistpll
insl
xor
ljmp
xchg
xchg
rcrl
adc
out
lret
bnd
cmp
xchg
mov
andb
fimull
or
adc
inc
cmc
lea
cli
push
sbb
xchg
sbbb
mov
out
dec
cs
jg
clc
jne
xor
jnp
add
push
add
push
push
inc
sbbb
idivb
xor
jbe
cld
xchg
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
push
je
dec
xchg
ja
jp
mov
xchg
pop
ljmp
enter
movsl
push
ret
mov
and
adcl
andl
hlt
cltd
pop
addl
int3
iret
cmc
loope
jns
dec
ret
mov
scas
sbb
inc
out
jbe
sbb
and
push
push
leave
outsl
mov
ds
jmp
pop
es
in
popa
jo
adc
push
mov
pushf
inc
xchg
lea
inc
inc
call
repz
out
sub
and
out
fcmovnu
adc
inc
jl
xorl
ss
jne
mov
or
subb
push
inc
cld
cmp
paddb
incl
sahf
cld
ljmp
cs
add
xchg
pop
in
pop
outsl
add
pop
mov
cwtl
pop
fsts
and
jns
xor
insb
dec
in
out
cmp
ret
sub
push
int
fs
jg
cmp
call
cmc
inc
add
call
imul
adc
scas
imul
jecxz
pushf
mov
mov
inc
popf
fistl
add
insb
mov
test
jo
sub
sbb
std
or
sar
mov
cmp
or
ss
pop
movsb
fsts
mov
aad
sbb
ja
dec
lret
sub
rol
in
popa
gs
ret
sti
leave
repnz
mov
push
imul
jbe
jnp
lret
cmp
jno
lahf
lahf
fildl
and
or
lea
sbb
dec
orb
pop
cmp
sub
pop
jne
ds
arpl
int
push
and
pop
push
es
int3
sub
out
mov
shl
mov
xchg
imul
mov
jnp
int
jne
xchg
push
mov
jns
inc
or
pop
or
adc
cmp
pop
dec
pop
fldcw
xchg
push
add
js
mov
scas
stc
inc
sub
sbb
enter
jp
mov
mov
and
call
sub
dec
adc
mov
mov
mov
xchg
test
push
or
push
mov
dec
cwtl
mov
add
inc
mov
inc
out
adc
pop
add
inc
arpl
mov
jmp
jge
or
out
loopne
inc
add
repnz
pop
arpl
push
xor
call
stc
pop
xchg
add
movsl
and
lret
cmpsl
and
xlat
into
dec
cmp
pop
dec
xor
push
je
and
jne
and
lcall
xchg
dec
out
pop
jbe
imul
popl
jge
pop
wbinvd
pop
addr16
dec
sbb
fcmovne
fcoms
cld
stos
xor
xor
nop
jbe
push
frstor
pop
jecxz
mov
fmuls
push
mov
sub
push
sahf
out
adc
out
daa
mov
mov
cltd
jmp
bnd
lea
adc
loop
push
push
in
outsl
in
dec
mov
sbb
jbe
and
fwait
inc
mov
inc
push
inc
inc
mov
or
push
shlb
dec
gs
xchg
xchg
mov
jp
and
xor
and
add
hlt
lret
mov
insb
in
or
and
inc
jl
mov
add
and
cmp
stc
jl
imul
pop
loope
add
mov
test
mov
cmp
and
add
dec
cmpsb
jecxz
in
inc
cmp
cmp
repz
ss
shlb
cmpsb
dec
adc
jb
cmp
adc
popa
loopne
sub
jle
es
or
in
fadds
cmp
out
std
jae
or
dec
or
out
pop
out
mov
add
out
mov
push
sahf
push
lcall
mov
sub
out
fisttps
mov
push
out
fidivrs
fbstp
mov
scas
fcmovu
jb
ja
mov
jns
push
pop
mov
jg
inc
ffreep
iret
es
xchg
cwtl
or
xchg
jae
popf
jae
je
cmp
jp
push
pop
jnp
shlb
and
xor
in
int3
xor
push
mov
sub
int
xor
cmc
dec
add
adc
push
lret
push
and
inc
cwtl
leave
repz
push
into
dec
adc
pop
mov
inc
rol
jbe
leave
mov
stos
lock
lret
sub
js
push
add
cmp
imul
push
xor
sti
pop
sub
popa
ret
and
ds
stos
pop
pop
ror
loope
aaa
ror
incl
test
data16
add
sbb
fistpll
mov
popa
dec
loopne
jnp
movsb
jg
jg
jg
push
gs
arpl
xchg
pop
scas
cmpsl
iret
add
add
dec
inc
xchg
out
leave
mov
aam
dec
ss
fiadds
aad
movsl
shlb
sub
mov
clc
fsubp
xor
xchg
repz
outsl
popf
lcall
pop
push
pop
aas
xor
inc
cwtl
and
jns
jg
aad
repz
mov
cmc
mov
pop
repz
fsubp
pop
aam
jmp
fisubs
pop
mov
icebp
pop
jp
rcrb
and
mov
into
cmp
lds
mov
jne
push
sub
in
inc
xchg
sbb
adc
fcoml
or
xchg
cmp
push
and
cmp
pop
movsl
push
xor
and
xchg
mov
push
fnstenv
jo
pop
icebp
cmp
xlat
sub
in
scas
out
adc
pop
jae
fs
jp
adc
out
daa
add
imul
xlat
insl
adc
incl
aaa
cwtl
sbb
scas
mov
sti
jle
stos
add
aad
lods
hlt
mov
jb
stos
mov
lcall
xor
aaa
rorl
xorb
pop
mov
xchg
inc
lahf
stc
std
negl
cmc
loope
xchg
xor
adc
mov
cmpsl
test
push
push
mov
push
cltd
pop
nop
out
push
sbbb
pop
dec
std
cltd
inc
daa
insb
out
or
movsl
inc
inc
fldln2
mov
std
neg
or
mov
xchg
add
jbe
data16
aaa
test
lods
sbb
mov
push
insl
loop
or
jb
imul
pushf
gs
xchg
xlat
sbbl
xchg
fwait
lds
frstpm(287
sub
mov
xor
arpl
jno
add
daa
adc
add
sarl
in
dec
rorb
rcl
ficomps
mov
orl
sub
imul
insb
inc
leave
inc
mov
imul
lret
jmp
out
dec
cmp
pop
shrl
loope
arpl
ret
mov
cli
jge
mov
mov
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
adc
ja
adc
ret
sbb
aaa
stos
push
and
or
pop
mov
dec
mull
inc
or
js
pop
cwtl
lcall
xchg
or
mov
repnz
lcall
sbb
hlt
cmp
inc
in
icebp
js
outsb
out
mov
jae
imul
addr16
in
sub
enter
xchg
jno
mov
cmp
js
shlb
mov
out
mov
inc
jmp
std
clc
cwtl
imul
cmp
sub
repnz
fildl
cmp
repnz
mov
lahf
push
sub
nop
push
pusha
and
fcomps
mov
in
mov
cmp
xchg
leave
gs
test
mov
cmp
mov
ret
int3
pushf
mov
loope
sub
jnp
decl
fdivl
lcall
dec
xor
es
lock
sbbl
cmp
clc
sub
sub
jne
mov
mov
mov
mov
xchg
push
sub
push
cld
jnp
imul
sbb
xchg
inc
lret
dec
shrb
push
and
sbb
aad
mov
inc
pushf
dec
aad
loopne
setge
stos
dec
xor
ja
repz
enter
ja
inc
sub
mov
pop
je
push
faddl
cmp
loopne
insb
push
into
popa
aam
test
adc
outsl
arpl
dec
outsl
sub
mov
lds
add
pop
pop
enter
push
push
stc
out
sub
mov
xorb
xchg
aad
mov
mov
jno
lds
mov
clc
mov
dec
adc
mov
push
pop
mov
xor
sub
push
sbb
cwtl
std
and
aaa
mov
pop
out
fimuls
es
scas
aam
inc
mov
rcll
loopne
push
stos
add
jns
cmp
xchg
mov
arpl
test
sub
and
js
jg
ret
jmp
mov
stos
mov
mov
lret
dec
xor
cltd
sti
scas
mov
mov
mov
fisubrs
das
imul
fisttpll
jl
xor
repnz
aaa
cmp
and
inc
sti
push
mov
jg
cmp
pushf
and
and
addr16
adc
jns
mov
pop
push
mov
sub
lods
pop
dec
xor
ret
mov
sub
jno
sub
inc
lahf
lods
mov
jp
adcl
xor
adc
add
std
or
gs
xorl
test
icebp
dec
shlb
sub
cmp
xchg
push
add
arpl
sarl
lret
sbb
aas
lea
add
jecxz
dec
add
jno
sub
adc
jbe
sti
cmp
mov
jecxz
xor
jnp
into
dec
mov
and
push
sbb
push
add
xchg
js
aas
je
cli
sbb
add
sub
xchg
shll
cmp
mov
jl
xchg
enter
adc
sbb
adc
jne
fs
mov
xchg
aad
ja
inc
loope
pop
movsb
xor
cs
xor
shr
jb
mov
movsl
pop
shr
out
add
fdivrp
ficompl
mov
pop
jge
xlat
jecxz
out
xchg
std
fcomps
xor
mov
lcall
or
in
xchg
xchg
shrb
stc
push
xor
push
xchg
shlb
cmpsl
mov
out
sahf
cmp
lret
mov
lret
rcr
out
mov
ljmp
inc
xor
push
movsl
jmp
mov
xchg
std
dec
je
inc
in
push
ja
sub
jecxz
ss
mov
push
pop
frstor
xor
jle
push
scas
jne
cmpsb
orb
ds
gs
dec
rolb
lods
into
loop
mov
push
xor
out
inc
imul
inc
adc
arpl
insl
push
lret
xchg
je
js
xlat
xchg
fstps
loope
push
dec
fnstenv
or
aas
gs
call
cwtl
std
data16
call
mov
adc
push
jg
cmc
repnz
mov
push
out
cmp
pushl
fs
ja
jle,pt
inc
inc
pop
insl
incl
sub
add
dec
inc
bound
sarb
mov
iret
xor
sbb
int
ljmp
je
mov
xor
sbb
dec
xchg
inc
stos
hlt
arpl
inc
lods
mov
test
je
test
adc
popf
push
mov
inc
fisttpll
mov
ret
imul
mov
xchg
rorl
sbb
inc
xor
mov
out
mov
dec
les
pop
ja
jle
pop
scas
dec
cmp
cmp
out
out
mov
xchg
fldenv
sbb
fcomp
call
mov
addr16
mov
popa
cwtl
into
xchg
sti
fsub
xorb
inc
ds
mov
cmp
inc
jne
mov
fcomps
push
pop
inc
movsl
cmp
mov
pop
lcall
inc
das
inc
lret
pop
movsl
mov
sbb
sub
inc
shrl
sbb
and
xor
cs
dec
cmp
push
lret
test
scas
rorb
push
pop
inc
mov
out
fcoml
test
or
test
sub
mov
xor
and
rcll
mov
movsb
push
fsubs
mov
push
bound
pop
int
fs
push
jae
or
stc
imul
idiv
sub
outsl
sahf
in
sub
jmp
dec
add
pop
ret
xchg
mov
xchg
add
cmp
repnz
das
and
dec
mov
lret
loope
and
inc
cmpsl
and
mov
lods
mov
jae
imul
repz
jp
popf
push
jp
lcall
hlt
ret
rcll
lahf
loopne
popa
add
js
inc
sti
shl
mov
adc
and
lods
fisttps
imul
out
pop
cmc
ss
push
in
jbe
das
enter
mov
inc
rcll
jmp
ja
aad
cmp
jbe
xchg
jecxz
lret
fstps
icebp
inc
js
imul
mov
mov
rorl
adc
cs
xlat
inc
add
add
jecxz
xor
sbb
or
adc
in
scas
in
sahf
cmpl
pop
mov
jge
inc
cltd
and
cmp
push
lret
call
sub
inc
mov
mov
ds
in
int
in
and
test
adc
or
dec
jnp
pushf
or
push
lods
inc
lret
jge
add
arpl
jb
push
roll
lahf
add
cld
loop
sbb
push
or
jl
dec
in
mov
mov
jmp
aam
inc
test
addr16
add
das
push
repz
push
outsl
ja
or
movl
out
inc
ss
xchg
xchg
cmp
sbb
xor
cld
addl
or
sub
mov
inc
mov
add
scas
add
fcmovnbe
lahf
cmp
clc
ja
aaa
pop
xchg
popa
sbb
xchg
xor
and
jno
cld
cmc
out
ja
cmp
lock
dec
dec
pop
lret
sub
inc
sub
test
push
cmp
inc
xlat
xor
andb
ljmp
sbb
hlt
jo
adc
fnstenv
adc
int3
push
addr16
sbb
xlat
fisubs
adc
outsl
mov
cmp
pop
dec
adc
cli
or
inc
or
in
mov
add
mov
out
pop
mov
adc
sbb
pop
push
addr16
push
imul
test
mov
inc
mov
xchg
add
adc
push
lcall
popf
mov
jne,pn
outsl
add
cld
rclb
cwtl
mov
push
adc
nop
ja
dec
arpl
push
dec
and
je
or
dec
xor
lret
sbbb
inc
pop
loop
xor
fsubs
add
adc
jg
hlt
fcomps
inc
or
dec
call
daa
dec
repz
pop
cmc
dec
js
add
test
fidivrl
mov
ss
pop
xor
out
outsl
adc
xor
popf
sub
sbb
fwait
mov
push
or
cwtl
adc
std
movsl
or
and
adc
das
xchg
xchg
ja
jb
and
mov
dec
lock
xlat
adc
mov
mov
mov
gs
sbb
fimuls
inc
mov
mov
adc
lods
rcl
dec
xchg
lods
sub
into
pop
cwtl
flds
scas
push
sub
insb
push
adc
repnz
or
cmp
lret
cmc
loope
loopne
push
mov
dec
int3
inc
fidivrs
test
js
add
push
and
test
into
loope
call
jo
pop
mov
inc
jno
push
orl
mov
cmp
std
jo
mov
jo
push
dec
jmp
jno
mov
xor
clc
mov
xchg
sbbb
adc
pop
ret
dec
sarb
xlat
je
sub
jp
cmp
fcoms
sub
mov
dec
sub
xchg
mov
push
out
cwtl
lcall
sbb
adc
ljmp
and
sub
int3
test
push
clc
cmpsb
jle
push
mov
xchg
mov
icebp
sub
icebp
jl
sbb
dec
ss
das
clc
push
dec
lea
outsb
pop
xchg
push
js
jne
bnd
adc
sub
mov
test
pop
add
lcall
jno
xor
lcall
xor
fwait
mov
jge
xchg
push
addr16
fistpll
push
and
inc
inc
les
std
aam
mov
lahf
mov
lea
outsb
and
ss
scas
cmp
mov
mov
or
jecxz
fisttpll
push
pop
add
gs
cmp
or
icebp
push
mov
fs
insb
mov
adc
sahf
or
mov
push
xor
mov
push
sbb
arpl
das
jecxz
test
mov
cmc
mov
xor
test
push
call
push
leave
hlt
mov
ret
jp
mov
mov
or
xor
aas
lret
fcoms
test
das
fstp
xchg
insb
push
repz
scas
mov
jl
sbb
pop
inc
loope
pop
dec
mov
test
aad
mov
cwtl
mov
rcrl
and
cmc
movsl
fimull
sarb
out
out
outsl
lea
sbb
cmp
dec
lods
aas
faddp
aaa
jg
push
fidivl
jg
sub
nop
aam
insb
aam
cld
push
mov
mov
iret
mov
sbb
incl
mov
negb
int
shll
jne
aam
xchg
add
sub
cltd
mov
mov
aas
sub
cmp
or
loop
adc
mov
push
cwtl
inc
mov
outsl
or
push
push
adc
mov
sub
loope
in
cmp
test
movsl
icebp
sbb
mov
lret
clc
xor
stos
xchg
jb
mov
cwtl
ja
outsl
mov
hlt
call
stos
adc
dec
pop
dec
repnz
imul
adcb
std
shl
adc
inc
xchg
adc
fxch
fmuls
and
pop
ljmp
testl
cltd
mov
xor
mov
sarb
mov
into
rcl
lods
outsl
pusha
iret
and
arpl
add
pop
mov
in
mov
and
test
jo
js
inc
xchg
jl
inc
pop
and
addr16
fadds
js
inc
sbb
gs
inc
pop
ds
or
dec
rcl
sub
gs
test
or
movl
mov
jne
mov
std
icebp
mov
fidivrl
out
push
pop
iret
sbb
lret
loopne
mov
sahf
in
mov
cmp
cmpsb
mov
mov
out
cwtl
jne
cmp
repz
test
es
shlb
xorb
leave
mov
mov
pop
dec
pop
sub
pop
inc
repnz
jp
jbe
rorl
inc
adc
out
cld
inc
dec
and
test
je
popf
inc
dec
or
jns
das
jecxz
mov
mov
test
mov
push
adc
add
lret
or
push
popa
ja
push
cmp
into
pop
mov
lcall
cld
cwtl
mov
mov
mov
add
sbb
and
inc
loopne
or
adc
adc
cwtl
lods
xchg
add
mov
mov
mov
outsb
scas
xor
mov
scas
cmpsl
sub
pop
xor
jnp
inc
cli
adc
loopne
stos
push
and
or
data16
std
xor
test
sbb
add
adc
cmp
fiaddl
xchg
cmp
mov
lods
iret
out
inc
push
inc
lods
push
jbe,pn
hlt
popa
shl
jle
jp
mov
xchg
mov
sub
cmpsb
sbb
cli
aas
gs
adc
and
sar
or
pop
add
test
loope
vphadddq
int3
or
xchg
jne
movsb
jmp
push
sarb
and
popf
push
repnz
mov
lock
xchg
in
outsb
pop
les
adc
cmp
or
imul
fdivr
in
pop
lods
ljmp
jge
hlt
mov
out
mov
inc
test
test
pop
xor
lcall
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
ss
lock
ja
subl
and
push
dec
call
mov
and
and
and
ljmp
repnz
pop
push
addr16
je
test
fadd
dec
and
iret
cmpsb
inc
mov
mov
push
pop
add
pusha
fs
es
cwtl
ss
ficoms
pusha
or
inc
ja
push
push
dec
rorl
push
cli
fimull
and
adc
jge
cmp
out
scas
call
pop
pop
inc
mov
sub
into
in
das
lods
arpl
std
xchg
push
loopne
daa
dec
mov
jae
sub
inc
outsl
cmc
pop
mov
lahf
mov
add
inc
xor
push
jecxz
stc
movsb
dec
cmc
xchg
scas
fidivrs
xchg
divb
jne
outsl
insb
jecxz
jle
cmp
cmova
pop
xchg
repz
inc
pop
addr16
pminub
out
fwait
push
adc
sahf
xor
cmc
add
mov
inc
pushf
jne
cmp
fwait
je
sub
idivl
fdivr
jmp
imul
or
imul
mov
fsts
mull
sbb
jle
cmpsl
mov
dec
push
xchg
aas
lods
xchg
push
dec
test
les
adc
dec
fscale
into
mov
adc
clc
cs
inc
cld
push
dec
test
cli
xchg
arpl
inc
sahf
dec
stos
enter
push
test
fs
mov
repnz
lock
lea
ljmp
inc
mov
xor
xchg
out
add
mov
stos
ror
xor
mov
fnstenv
leave
pop
lods
ljmp
fdivl
push
stc
and
out
adc
aas
rcrb
cmp
push
cmp
xchg
divb
jl
push
cmp
jnp
pop
mov
insl
dec
or
push
jecxz
out
test
test
cmpb
ficoml
mov
xor
xchg
js
into
adc
lods
add
xchg
mov
mov
push
mov
fs
mov
popf
mov
daa
sbb
pop
cmc
shrb
xchg
repnz
or
mov
dec
add
and
popa
cmp
push
int3
xchg
cli
push
xchg
mov
dec
inc
shll
inc
mov
mov
inc
imul
imul
sbb
mov
fbstp
push
loope
shll
jle
cmp
sub
jl
push
enter
and
sub
mov
mov
scas
bound
rcrb
mov
push
out
out
lods
mov
adc
mov
ljmp
sbb
adc
sbb
sbb
stc
jge
and
ds
xor
daa
mov
fisubrl
les
add
stc
in
sbb
jne
adcb
das
pop
or
dec
idivl
pop
jl
test
lret
mov
xchg
lret
inc
jno
outsl
jle
mov
sbb
std
inc
adc
imul
fsubrl
test
popf
test
ja
xchg
pop
in
xchg
adc
lock
mov
leave
mov
inc
pusha
insl
aaa
pop
add
bound
pop
dec
call
leave
jns
push
pushf
daa
or
stc
lods
dec
mov
sub
aaa
xchg
xchg
or
pusha
xchg
ret
add
mov
xchg
std
aaa
subb
dec
das
xchg
fcoml
xchg
stos
mov
adc
addb
pushf
psrad
push
mov
inc
lcall
lcall
and
in
mov
mov
cmpsb
popw
popa
or
sub
add
in
xlat
lea
and
loopne
lods
xor
fistpll
les
adc
int
sarl
mov
cld
js
inc
test
repz
xchg
fdivl
adc
inc
clc
mov
mov
jge
xor
xchg
aas
sub
div
pushf
mov
add
shrb
frstor
test
js
lds
testl
out
shlb
stos
inc
loopne
pop
inc
jnp
push
push
inc
hlt
mov
movl
shlb
or
mov
adc
bound
jo
adc
sbb
jne
aam
sbb
adc
pop
cmpsb
imul
jnp
nop
out
int
in
mov
mov
test
pop
ja
push
push
sub
lahf
loop
call
aam
cmp
mov
popl
sbb
lods
popa
sbb
shlb
js
leave
fstpl
xor
pop
adc
and
sbb
mov
rorb
push
mov
push
xchg
fnclex
sbb
mov
fwait
out
push
leave
lret
add
xchg
mov
push
sub
sub
faddl
ja
js
ljmp
test
test
pusha
aad
shlb
push
push
movsb
test
int
inc
push
stos
pop
pop
ljmp
sub
push
add
in
cmp
int
into
ja
leave
push
adc
xor
mov
dec
add
mov
aas
dec
aam
mov
inc
lods
cmp
insb
sub
and
int3
out
and
pop
fs
scas
add
or
dec
fildl
das
cmc
mov
mov
cs
push
adc
sub
inc
inc
dec
cld
enter
sub
pop
mov
fs
imul
clc
xchg
mov
mov
jb
clc
lds
sti
fwait
dec
add
ret
sub
sub
mov
xchg
and
or
mull
in
arpl
movsl
xchg
lds
pop
jne
out
repz
mov
stos
test
dec
dec
pop
mov
faddl
dec
xchg
icebp
push
mov
lret
dec
jecxz
into
dec
hlt
into
jle
shrb
and
jbe
test
xchg
adc
iret
push
adc
sbb
ds
push
mov
cwtl
and
roll
mov
dec
pop
cld
sub
mov
pushf
test
cld
xor
loopne
mov
sbb
test
inc
push
mov
orb
adc
inc
xchg
data16
fwait
loopne
mov
jl
cli
mov
pop
stc
jb
leave
fisubs
clc
insb
push
fnstenv
xor
dec
outsb
push
into
mov
jne
aam
dec
mov
pop
xchg
mov
push
pop
or
jge
mov
test
xlat
test
mov
pop
lock
xorl
cmp
inc
pop
jae
out
fwait
mov
into
xor
mov
ds
enter
cmpsl
pop
mov
jmp
sub
xor
shl
jmp
cli
adc
cltd
popf
mov
xchg
jge
lret
xchg
lcall
ja
shr
dec
xchg
jg
push
inc
bound
mov
dec
out
in
jecxz
lock
xorb
push
and
daa
push
add
mov
mov
cmpsb
repnz
adcb
add
and
movsl
jg
not
lods
adc
enter
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
adc
dec
push
add
sub
push
push
mov
rclb
lea
bound
ficomps
rorl
fdivrl
movsb
sbb
aas
rcll
icebp
out
test
adc
lcall
cmp
push
das
or
mov
xlat
xchg
dec
pushf
xor
or
int
mov
out
mov
ljmp
es
add
add
xchg
lods
cwtl
push
xchg
test
lods
inc
sub
sub
dec
jb
ret
pop
arpl
pop
addr16
jb
mulb
sti
popf
push
jae,pt
mov
jmp
mov
xor
subl
mov
xlat
repnz
jb
jnp
testb
xor
int
les
dec
xor
push
insb
dec
xchg
add
leave
pop
test
xchg
insb
inc
out
out
add
jecxz
maxps
xchg
xchg
xor
push
cmp
inc
cwtl
jne
test
loope
xor
add
push
test
or
in
xchg
jecxz
and
sbb
jp
std
xor
inc
xor
in
sbb
aaa
lret
pusha
mov
fcmovu
cmp
jne
fldcw
pusha
lret
mov
lret
cmp
add
addr16
sbb
xor
or
xchg
into
sub
cmp
sub
mov
mov
pop
stos
nop
insl
lahf
ret
jecxz
jmp
prefetch
or
mov
push
dec
pop
adc
movsl
cld
loopne
sarl
rcr
add
scas
in
pusha
push
data16
daa
mov
cmpsb
lcall
repz
mov
jp
mov
scas
mov
mov
fildll
cbtw
cmp
hlt
sti
jb
clc
xorl
clc
aam
dec
push
add
sbb
sbb
mov
jmp
mov
adc
cmpsl
std
sub
out
mov
xor
int
data16
pop
fmuls
cmp
loop
imul
adc
andl
cmp
cmpxchg
mov
adc
push
xchg
out
ret
cs
mov
push
cmp
jnp
adc
or
push
push
out
test
ret
cld
inc
mov
movsb
cwtl
xchg
sahf
leave
movsl
outsb
insb
mov
pusha
jmp
mov
xor
pop
xlat
aaa
testl
pop
sub
jge
or
aaa
mov
daa
mov
jne
in
xchg
mov
pop
pop
push
movsb
pop
inc
mov
cs
fimuls
sbbl
mov
pop
and
pushf
or
mov
mov
int
call
mov
pop
icebp
popa
cltd
push
test
cmp
lcall
test
inc
testl
nop
mov
cmpsl
jl
sar
lods
adc
lret
push
pusha
or
xor
aas
adc
aas
sti
pushf
outsl
xchg
jecxz
xchg
outsl
add
push
inc
rorb
cmpsl
repnz
dec
out
out
and
mov
xchg
ja
movsb
ljmp
pop
adc
cltd
lea
icebp
ret
cmp
or
add
jle
les
ret
cmp
movsl
cmp
xchg
jg
imul
fwait
outsb
lods
lods
out
loopne
pusha
inc
aas
leave
and
je
fst
add
mov
and
cmpl
fstps
mov
cmp
daa
loopne
add
nop
add
mov
lahf
fsts
xchg
push
push
test
pop
std
push
mov
mov
push
jg
stc
popf
xchg
xlat
add
inc
xchg
stc
jae
xchg
subb
dec
std
and
lods
subb
dec
sbb
push
mov
and
jb
je
adc
lea
cwtl
or
mov
loopne
push
lcall
adc
fs
aaa
leave
add
cmpsl
and
sub
aad
bound
pop
rclb
adc
xlat
jns
mov
cmp
sub
dec
lret
inc
sbb
jl
imul
testl
lret
dec
loop
adc
dec
outsl
push
js
mov
insl
add
stos
xchg
mov
nop
sahf
and
mov
idivb
cmpl
adc
inc
jg
std
mov
sub
jns
stos
in
xchg
push
pop
ds
pop
jae
mov
cmpsb
jns
shll
data16
pusha
jmp
outsb
lret
mov
or
push
out
cmpsb
sbb
dec
or
dec
cmp
mov
fst
pushf
jne
jecxz
outsl
pusha
xchg
xor
mov
test
lcall
lahf
shr
jl
ja
sub
and
add
rcl
mov
test
push
test
sbb
test
nop
daa
xchg
mov
mov
xchg
cmp
movsb
aam
lret
sub
lcall
ror
push
add
push
jmp
lds
popf
mov
jnp
aaa
mov
cld
jmp
lds
dec
lret
xor
jmp
addr16
aad
fdivrs
dec
fcom
add
loopne
add
cmp
jne
cmp
dec
or
sarl
cwtl
push
pop
inc
dec
sbb
subl
jno
pop
movsb
xchg
sbb
cwtl
mov
les
lahf
mov
aas
sbb
out
into
pop
es
adc
fidivrl
aam
shll
push
ret
js
mov
icebp
cs
dec
addr16
ljmp
movb
adc
sarl
jno
std
cmc
scas
jge
outsb
loopne
or
mov
add
outsb
cmp
mov
sub
or
in
gs
ret
in
pop
outsb
mov
xchg
stos
aad
stos
fistps
sub
xlat
dec
cmp
inc
mov
jae
or
inc
push
ljmp
out
sbb
mov
inc
ja
mov
dec
jle
push
outsb
jg
xor
and
jbe
xchg
test
pop
sbb
movsl
sbb
xchg
dec
addr16
sbbb
paddw
add
dec
imul
sbb
xorl
adc
psubsw
push
xchg
jns
xor
jge
sub
imul
xchg
sub
cmc
aad
adc
jp
adc
leave
cld
jmp
mov
in
stos
das
pop
stos
push
mov
mov
sub
sub
es
fnstenv
jae
rol
mov
xchg
decl
stos
ror
and
faddl
mov
inc
jge
fsubs
push
sub
push
fstpt
mov
ret
mov
sti
xor
arpl
jae
mov
popa
lahf
inc
cmp
pushf
sbbb
movsb
adc
jns
add
sbb
sbb
add
mov
push
xchg
int
push
mov
mov
pop
in
inc
lret
lahf
mov
test
add
add
shlb
rol
push
xor
mov
mov
mov
jmp
sti
test
sbbl
mov
aas
ja
add
push
dec
adc
add
or
and
cmpb
push
fimuls
jl
insl
in
jae
add
add
cmp
mov
xchg
xchg
unpcklps
out
rorb
shlb
scas
test
push
lock
adc
clc
and
push
dec
mov
int
lahf
adc
mov
roll
jne
pop
mov
mov
xchg
and
scas
and
nop
mov
movsl
adc
and
repnz
inc
add
leave
ss
outsb
daa
xchg
je
aas
adc
xchg
js
js
clc
and
mov
push
enter
mov
lret
daa
jecxz
mov
lods
lock
daa
test
mov
stos
pushf
adc
add
mov
in
mov
add
jl
sbb
xor
mov
pop
push
xor
push
or
test
pop
mov
loop
sbb
inc
aaa
inc
cmp
stos
mov
dec
js
add
push
repz
jg
jecxz
mov
ret
push
inc
fwait
cmp
push
pop
mov
jns
push
sbb
iret
and
addr16
sbbl
stos
lcall
dec
mov
clc
outsb
dec
cmp
insb
fildl
sbb
mov
pop
std
pushf
ret
test
das
dec
mov
pop
pop
cmp
fisttpll
arpl
leave
imul
ret
cltd
xchg
or
mov
inc
mov
shlb
adc
mov
adc
cmpsl
mov
ds
enter
mov
mov
addb
pop
xchg
adc
xor
aad
mov
out
xor
lods
dec
xchg
xchg
push
cs
imul
push
test
pop
mov
and
or
addl
lock
jb
mov
mov
mov
or
dec
aam
push
enter
lock
sbb
mov
out
and
aas
aad
xlat
sti
iret
adc
and
jo
bound
push
scas
popf
lods
or
pop
xor
mov
pop
test
inc
push
mov
mov
sbb
inc
cmp
aad
sti
movsb
xor
out
mov
arpl
aad
sbbb
lahf
gs
std
sahf
fmull
leave
or
jo
fsubl
fdivr
cs
and
jp
movsb
pop
daa
mov
and
sbb
mov
lods
push
dec
nop
mov
mov
cmp
lret
jno
fidivrl
sub
inc
fmuls
int
xchg
cmp
clc
repnz
jb
jmp
lds
mov
sbbb
sub
mov
iret
stc
ja
push
dec
mov
cmp
fsubrl
shll
cmp
pop
adc
xor
sbb
cmp
pop
stos
or
sti
push
mov
sahf
stos
rcl
and
add
arpl
fdivrs
mov
fwait
jne
push
sbb
shl
push
pop
stos
sub
adc
out
add
call
xchg
outsb
push
push
xchg
pop
pop
lcall
push
pop
push
repnz
jecxz
mov
lret
mov
push
inc
test
rcrb
xchg
sub
lcall
inc
aam
mov
jmp
cmpsl
mov
xchg
jecxz
arpl
shrb
loopne
cmc
dec
pop
out
xorb
jmp
lahf
ljmp
scas
sbb
xchg
mov
in
ljmp
inc
push
dec
and
rcr
jge
cmp
in
jge
lds
or
popf
int
adc
inc
stc
stos
mov
jne
mov
cmp
mov
mov
popa
add
xor
sub
repz
pop
pop
iret
dec
lea
inc
jb
out
inc
xor
cmp
mov
out
arpl
imul
jge
jle
and
mov
mov
imul
lahf
push
fmuls
jle
out
sub
lcall
jl
or
sub
sar
or
lock
cmp
mov
jae
sub
mov
fsubrs
inc
add
jnp
cmpsl
stos
stos
and
in
jnp
adc
call
mov
pop
cmp
ret
mov
or
loop
xor
ficomps
bound
cmp
js
dec
aad
cmpsl
loope
adc
cmp
mov
js
sbbb
mov
and
popa
mov
divb
mov
push
out
add
mov
xor
jl
and
push
xlat
mov
push
fisubrl
push
outsl
out
in
push
imul
ret
fstpl
push
shr
inc
pushf
nop
adc
adc
scas
fucomp
jae
push
mov
sub
pop
ds
popa
stc
loopne
xor
sub
mov
mov
dec
sbb
test
sbb
std
sub
cmp
psubsb
push
out
mov
fcmovnu
push
leave
mov
lods
pop
call
and
sub
mov
dec
mov
pop
add
and
shll
add
mov
push
lds
cmpsb
and
pop
popa
mov
test
adc
stos
sub
cmp
cmp
cs
adc
jbe
cmp
loope
sbb
subl
sbb
xchg
mov
inc
loope
movsl
mov
cmpsb
and
imul
jecxz
xchg
scas
add
and
jo
shrl
sbb
xor
mov
imul
nop
add
and
dec
hlt
sbb
scas
ja
test
aam
adc
mov
ficompl
mov
orl
shll
mov
lea
ljmp
movsl
jae
jnp
call
cmp
xor
mov
ljmp
jae
pop
xchg
add
mov
fdiv
add
fidivl
sub
lret
and
cmp
bound
and
mov
movsl
jmp
into
imul
insb
cmp
shlb
add
test
cltd
jp
push
ret
jb
adc
jne
movsb
stos
test
lea
mov
sub
data16
xor
inc
mov
mov
jecxz
or
cwtl
jl
inc
scas
xor
rcll
pop
inc
jp
clc
xor
push
sbb
pop
mov
and
std
idivb
inc
lds
int
aaa
xor
xchg
pop
mov
fcomp
mov
mov
adc
jmp
call
push
mov
jb
call
cmpb
sbb
dec
jo
pushf
shlb
bound
and
xlat
or
rclb
out
pop
nop
clc
pushf
mov
jb
add
lds
imul
or
jae
cli
inc
mov
iret
adc
cmovnp
xchg
and
fcomip
scas
mov
bound
scas
mov
lret
xchg
sub
popf
vmovsd
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
fs
xor
pminub
jle
sbb
mov
mov
push
xchg
mov
aam
mov
add
mov
add
imul
pusha
aam
push
xchg
jl
ret
dec
push
cld
enter
cmp
movsl
imull
sbb
mov
dec
mov
jb
push
xlat
inc
pop
loop
ja
imul
jecxz
fiaddl
cmpsl
sbb
test
in
xchg
ja
sbb
lahf
inc
xchg
negb
test
ret
inc
adc
test
pop
ds
cmp
cmp
jecxz
inc
push
jmp
xchg
clc
mov
nop
mov
in
inc
push
enter
push
add
fiaddl
xchg
pop
xchg
pop
xor
or
test
insl
dec
stc
inc
int3
add
lret
call
dec
dec
enter
fildl
lock
jno
inc
sbbl
inc
sbb
xchg
sbb
mov
mov
and
fsubl
out
les
cmp
jo
bts
mov
mov
movsl
shlb
and
sbb
jg
icebp
inc
dec
sbb
lock
xchg
dec
sarl
or
jmp
adc
hlt
cmc
pop
xchg
imul
fsubrl
out
mov
add
cmp
cwtl
dec
sbb
push
lret
fsqrt
ret
movsb
sub
imull
or
pop
ljmp
inc
and
and
enter
pop
pop
inc
adc
inc
mov
aaa
xchg
add
sbb
pop
jne
popf
add
dec
xor
jle
out
les
push
jmp
fwait
xor
aam
push
loopne
push
aas
out
and
push
push
fwait
or
push
bound
pop
rorb
je
pop
or
and
pop
mov
rcl
loopne
inc
sub
sbb
xchg
outsl
xchg
sbb
jno
mov
mov
mov
imul
js
add
push
das
xchg
xchg
test
mov
or
pop
aam
test
xor
pop
jb
lcall
lret
push
ss
aas
pop
test
addl
ds
dec
jmp
cmpsl
push
adc
add
fsubs
shl
pop
pop
xchg
mov
add
cmpsb
es
lahf
mov
adc
dec
icebp
adc
pop
addr16
test
aas
push
loope
pop
popf
xchg
imul
les
pop
popf
out
push
adc
dec
in
jle
es
sub
adc
loope
push
jne
mov
xchg
shll
fcomps
jecxz
jns
lret
xorb
pop
push
push
push
adc
test
inc
dec
and
jnp
in
push
xlat
jbe
mov
pop
daa
inc
dec
std
or
pop
xchg
fs
jne
mov
cmp
mov
test
add
stc
cmp
jbe
insl
ss
int3
jnp
lea
push
and
in
cmpsl
xchg
sub
mov
mov
mov
cmp
adc
xchg
push
fucomip
mov
scas
mov
xchg
cmp
cwtl
sahf
mov
sbb
dec
jge
inc
orb
pop
ss
cs
fadds
movsb
in
xlat
loope
scas
ss
int3
fcoml
jne
cmpsl
pushfw
push
dec
inc
mov
jmp
sahf
mov
push
bound
out
jle
arpl
call
lods
mov
push
mov
negb
test
aad
push
ficomps
leave
pop
repz
cltd
pop
dec
jl
icebp
popf
inc
cmp
in
adc
xor
pop
dec
gs
xor
and
adc
loop
dec
cwtl
ss
cli
push
aad
xchg
insb
je
ficompl
fidivs
dec
xor
je
pushf
xor
mov
mov
out
shrl
arpl
ja
push
push
jns
xchg
pushf
negl
mov
lock
or
js
jae
push
xchg
dec
std
dec
mov
clc
testb
outsl
lock
push
popa
ficomps
mov
push
into
lock
xor
xor
stos
rcrl
prefetch
push
push
xor
pop
outsl
dec
in
mov
int
add
dec
pcmpeqd
dec
sub
mov
cmc
mov
lock
aaa
insl
push
xchg
mov
in
mov
cmpl
in
insl
cmp
xor
test
dec
cld
sub
pop
lret
dec
shr
xor
push
imul
arpl
repz
ret
je
icebp
or
mov
mov
dec
xchg
sub
data16
enter
mov
mov
mov
negb
pop
add
xchg
mov
sub
xor
lret
push
pop
xchg
mov
mov
les
push
mov
adcb
mov
mov
cs
and
pop
lahf
fwait
pop
jb
push
xchg
dec
jmp
cmp
bnd
addr16
adc
adc
sbb
adc
sub
or
data16
fwait
xchg
popf
push
xlat
addr16
out
pusha
aad
mov
pop
mov
insb
dec
and
inc
sub
or
fcmove
add
or
push
adc
rclb
adc
aam
lret
lahf
lock
mov
cld
stos
mov
orb
dec
jno
inc
andl
les
xor
push
repz
out
mov
push
sti
or
push
stos
xor
rcl
fmuls
mov
ds
sub
or
mov
in
orl
jnp
lahf
dec
jp,pn
ja
push
pop
aam
jbe
aam
mov
shll
lock
in
and
shrl
pop
dec
cmpsl
lock
mov
in
aad
push
in
jmp
repnz
ss
push
mov
jl
xor
mov
pop
ss
es
into
movsb
jbe
or
aad
sub
add
outsl
dec
mov
loope
cmp
daa
or
dec
push
repz
jbe
out
pop
daa
testb
cmpsl
leave
sbb
xor
mov
xchg
xchg
popf
adc
add
insl
jnp
inc
push
cmp
loop
in
ss
ja
xchg
jp
bound
aaa
jno
jns
aad
mov
mov
sbb
out
loopne
jge
lcall
dec
mov
xchg
sub
jns
cmp
fsubrs
dec
sub
add
sub
rorl
jae
push
adc
mov
or
and
lahf
sarl
mov
mov
or
test
popa
imul
pop
add
pop
gs
aam
sub
push
fidivrl
dec
pop
test
fdivp
inc
lcall
in
lret
lea
out
or
shll
or
mov
xchg
or
mov
pop
cmp
mov
xlat
jg
aad
rcrl
in
in
lock
inc
push
mov
mov
mov
fisubs
inc
dec
jb
inc
dec
mov
jge
and
cli
es
loope
mov
push
xor
cli
and
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
pf2iw
jecxz
and
out
js
std
push
or
xchg
jecxz
mov
fbstp
scas
xchg
sbb
std
or
and
nop
jo
sub
add
jge
int
sub
lret
xchg
adc
cmpsl
repnz
inc
wrmsr
cwtl
mov
in
and
xor
outsb
mov
cwtl
mov
popf
jle
fldenv
pop
cmpsl
clc
mov
dec
jmp
rcrl
jno
in
adc
bound
pop
fbld
leave
test
lcall
cmp
insl
pop
adc
jno
cmovns
lea
negl
xchg
test
jecxz
popa
aad
out
loope
cmpsb
aad
add
push
jo
sbb
andb
mov
xchg
sub
inc
gs
ja
roll
pushf
jge
ja
xor
ds
and
scas
std
sbbb
insb
ret
jecxz
or
ror
sub
push
stos
adc
movsb
cltd
dec
mov
movsb
or
lods
fisubl
leave
mov
mov
sahf
ret
popf
out
xchg
and
pop
or
xchg
jmp
dec
bound
out
andb
xor
xorl
pop
and
add
dec
cmpsb
imul
andb
orb
add
jmp
and
adc
cmp
xor
aas
pop
xchg
adc
push
add
mov
mov
pop
cld
cmp
insl
cmp
sbb
push
aas
mov
call
adc
repz
fcom
sbb
inc
jg
clc
mov
and
inc
cmp
and
jp
mov
fstpl
int3
and
aaa
sub
jle
cmp
and
hlt
xchg
faddl
and
in
jmp
rolb
mov
shl
mov
lret
fidivrs
push
cld
mov
sub
mov
leave
inc
orl
mov
out
daa
hlt
adc
or
mov
sub
aad
inc
pop
jp
inc
fisubrl
iret
push
call
or
rcrl
popf
sbb
insl
inc
rcrb
aaa
jno
mov
test
mov
sbb
lods
dec
mov
add
add
cmc
inc
les
outsl
and
dec
push
xchg
adc
inc
mov
pushf
in
fmull
aaa
jg
jge
pop
movsl
jo
mov
mov
xor
and
jne
in
dec
repz
pop
stos
ja
xchg
dec
aas
cli
pop
stc
icebp
and
stos
and
test
test
cld
mov
xor
repz
mov
and
dec
xchg
inc
push
shlb
xchg
pop
xchg
mov
dec
mov
fwait
inc
mov
dec
sahf
mov
sbb
lret
and
cmpsl
jbe
pop
mov
inc
loop
adc
and
mov
fcomps
mov
lret
sub
push
and
sar
and
iret
fstpl
or
mov
cmpsb
pop
or
jae
jnp
jne
push
push
test
mov
bound
add
cs
dec
adc
mov
cmp
push
push
xor
hlt
mov
xor
push
dec
iret
mov
mov
cmc
imul
mov
jl
fnstsw
loop
add
pushf
cli
out
cld
xlat
xchg
jae
pcmpeqb
dec
xchg
adc
sbb
add
repz
mov
mov
mov
adc
popf
mov
into
xchg
add
es
cld
pop
inc
sti
out
aad
hlt
push
push
lahf
xor
arpl
jl
pop
inc
add
push
sub
cmpsb
xor
lods
adc
mov
stos
rcll
test
std
and
into
sub
movsl
lds
mov
insb
sar
jne
xor
push
push
insb
mov
push
testb
xchg
ljmp
scas
xchg
movsl
sbb
sbb
lods
xor
adc
cmp
clc
insb
call
cmp
in
cmp
push
cld
jg
fistl
mov
mov
fstpl
out
cmp
xchg
mov
es
add
sti
add
icebp
imul
outsl
ljmp
popa
mov
stos
or
mov
add
sub
test
popa
shlb
jns
ljmp
out
rorb
sub
and
cli
pop
js
clc
adc
outsb
insb
jb
cli
inc
dec
dec
loope
outsl
and
jo
xchg
or
and
jp
clc
aas
jecxz
movsb
jp
ror
pusha
fbstp
in
shlb
xor
sbbb
jle
xor
inc
pop
pop
adcb
int3
sbb
jo
mov
mov
loopne
dec
jmp
int
and
xchg
xchg
sbb
outsb
out
jecxz
mov
adc
jns
imul
mov
sbb
ror
sahf
xor
pop
rcr
jo
mov
cmp
push
fs
jnp
je
sar
jne
fidivrl
hlt
andl
outsb
dec
dec
stos
adc
push
adc
sub
jp
xchg
push
fists
emms
push
ret
mov
xchg
fisubl
or
jl
cltd
cwtl
loop
lds
test
rolb
icebp
xchg
mov
fwait
pop
push
rorl
inc
adc
mov
shlb
cmp
mov
movsb
std
loopne
jo
lcall
jo
hlt
jg
xchg
mov
jmp
fists
sub
xchg
icebp
call
mov
movsb
les
push
mov
popf
mov
and
cltd
sbb
xchg
sti
xchg
enter
cmp
aam
dec
mov
sub
frstor
cmpsl
pop
push
jp
imul
movsb
js
xchg
mov
cmp
aam
xchg
pop
outsb
jp
adc
bound
xchg
xor
cmp
lret
std
cmp
scas
inc
or
mov
xlat
jno
jno
xor
pushf
adc
cmp
outsl
gs
adc
lods
sub
or
jbe
inc
cmp
pushf
fistpll
ds
jl
mov
outsl
mov
fldcw
jmp
sarb
xor
add
push
sti
arpl
mov
fs
push
and
je
inc
je
pop
or
push
scas
pop
xorb
lods
adc
cmp
mov
inc
inc
and
icebp
out
mov
mov
mov
cmc
rcl
or
xchg
mov
adc
pop
xchg
cmp
push
ficomps
mov
in
sbb
out
fcomps
jo
shlb
insl
shl
fwait
ja
add
mov
imul
stc
shrb
out
jnp
gs
xchg
xchg
dec
std
mov
and
lock
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
arpl
js
adc
mulps
ljmp
repz
loopne
push
hlt
inc
test
insb
cmp
xchg
sbb
out
mov
adc
mov
dec
repnz
inc
xchg
mov
mov
inc
rcll
adc
es
jmp
daa
aas
aad
stos
fsub
arpl
imul
push
mov
add
mov
mov
or
dec
adc
push
mov
lods
fucomp
sbb
cmp
jge
cmpsl
mov
shrl
addl
jmp
xor
popf
ret
add
xor
jae
in
sahf
mov
les
or
imul
imul
dec
aas
lcall
and
cmp
in
add
sub
into
inc
outsl
mov
inc
inc
pushf
add
lods
cmp
and
or
jp
xor
aam
outsb
mov
out
lock
mov
and
das
aam
repnz
dec
movsl
xor
mov
iret
xor
pop
pop
movsl
add
outsl
call
out
arpl
stos
xor
push
cmp
xor
ret
je
in
mov
lret
repnz
fildl
js
jmp
movsl
outsl
dec
mov
sbb
sbb
enter
fbld
clc
push
mov
and
in
stos
insb
subl
mulb
dec
sub
jecxz
xor
dec
mov
fldcw
mov
sti
clc
arpl
in
jno
mov
cmp
jne
lret
or
dec
jp
lods
out
hlt
mov
cli
shll
jno
and
sti
pop
sub
xor
xor
sub
xchg
pop
xor
mov
mov
int3
enter
lahf
sbb
jae
xor
clc
inc
mov
sub
sub
jecxz
shll
inc
mov
insl
dec
fcoml
aaa
push
outsb
mov
rorb
mov
and
mov
inc
xchg
hlt
idivb
inc
sub
scas
xor
sub
jno
ret
jg
pop
adc
popf
lret
das
xor
dec
jg
cmp
jae
insl
and
and
cmpsl
dec
aas
aad
bound
sub
leave
mov
xchg
add
pop
cld
pop
mov
dec
test
loopne
icebp
aam
sbb
add
cltd
adc
push
rolb
pusha
outsb
ja
mov
jl
or
rcrb
mov
int
test
push
sbb
lods
and
jne
aad
stos
bound
out
stos
lock
out
push
in
add
add
adcl
jns
dec
rcr
dec
cmp
xor
and
push
out
adc
lcall
outsl
push
leave
imul
mov
aaa
mov
inc
push
int3
sbb
std
sub
dec
daa
sti
mov
sbb
ret
test
lds
inc
xor
mov
jne
movsb
fcmovnu
test
shll
push
clc
pusha
loope
ja
cwtl
lea
pop
and
jge
xor
call
call
out
es
jmp
sub
mov
xchg
and
and
les
adcb
mov
push
sti
hlt
jb
adc
mov
sahf
and
and
xchg
xchg
stc
stc
stc
adc
fwait
lea
imul
mov
xchg
mov
xchg
jbe
imul
decl
out
inc
sbb
cmp
mov
xchg
ds
test
inc
jmp
adc
jecxz
stos
mov
adc
loop
mul
push
dec
push
dec
dec
mov
enter
std
pop
cwtl
inc
and
subl
cmp
fists
and
mov
cwtl
add
xchg
mov
sbb
out
pop
pop
jmp
mov
rcl
push
jl
test
and
shlb
roll
dec
pusha
fadd
xchg
push
pop
stos
xchg
and
mov
jno
xchg
xor
fisttpll
pushf
jecxz
jns
in
push
ret
sbb
dec
mov
movsb
xor
fidivrl
sbb
arpl
bound
pop
andb
imul
add
movsb
test
scas
sub
mov
ss
inc
aaa
std
jnp
idivb
adc
stc
dec
push
maxps
cmpsl
into
ret
xlat
fisubl
aaa
cli
cmc
push
inc
adc
lods
xor
je
aaa
out
mov
insl
mov
mov
jno
fnstsw
aaa
leave
les
pop
scas
push
mov
mov
jg
repnz
mov
or
pop
sahf
shrl
ret
cmp
cltd
fisttpl
test
cltd
jno
movsl
cmpsb
cmpl
lahf
adcb
flds
in
test
mov
push
inc
fwait
sbb
sbb
movsl
std
lea
ljmp
not
dec
cmp
pop
add
and
cmpsb
sub
shlb
mov
bound
mov
sub
imul
sbb
pop
das
jl
xchg
xchg
ret
je
adc
inc
cmp
imul
std
jge
jae
movsb
cltd
inc
cmp
pushf
in
and
icebp
jle
add
clc
clc
push
pop
call
test
mov
icebp
sbb
add
and
mov
inc
mov
push
mov
addr16
jnp
inc
xchg
gs
push
imul
xlat
ja
mov
or
out
in
add
inc
sti
jp
inc
inc
mov
xchg
psrlw
sbb
out
lods
lods
out
and
sub
sub
dec
push
pop
jns
imul
arpl
movsl
std
ja
push
aaa
push
mov
mov
xchg
push
jle
push
sahf
stos
imul
jmp
arpl
jns
jns
cmpsb
and
mov
inc
sbb
push
jle
rorl
popa
sti
imul
dec
and
sbb
push
fbstp
cmc
scas
inc
leave
push
jns
sbb
out
push
in
sar
jae
out
lods
push
mov
lcall
push
xchg
je
jne
sub
dec
jne
or
iret
mov
dec
cmpb
mov
int3
lock
data16
lret
leave
scas
or
ret
mov
and
fdivrl
sub
jge
lret
add
add
pop
js
mov
out
mov
jle
push
xchg
addl
sub
loopne
add
xchg
add
and
cmp
mov
inc
lcall
es
in
push
mov
outsb
jp
mov
sti
ret
nop
push
mov
pop
popa
pop
ret
mov
enter
fmul
xchg
ficoml
mov
cmpsb
jg
test
ja
add
cltd
pop
loop
scas
jl
or
and
and
mov
int
push
add
dec
dec
adc
dec
jmp
xchg
pop
test
loope
cmp
cmp
outsl
mov
inc
shlb
or
adc
mov
fdivrl
or
pop
add
sti
push
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
add
ja
xchg
out
add
inc
mov
ret
add
push
cmpsl
jno
repz
daa
xchg
jl
lock
movl
push
shll
filds
or
in
jmp
mov
lret
mov
add
loop
pop
jmp
add
ret
sbb
cmp
int
stos
imul
popf
lock
adc
inc
fbld
mov
lret
mov
int3
xchg
bnd
lahf
fstpl
mov
icebp
aaa
lret
and
insb
orb
push
or
push
clc
xchg
lcall
and
add
inc
cwtl
inc
insl
fidivrl
enter
jnp
test
pop
adc
inc
mov
xchg
jbe
ljmp
out
test
adc
jno
pushf
aad
shlb
and
jns
pop
xchg
pushf
cld
into
inc
les
and
inc
cmpsl
mov
inc
mov
imul
aas
sub
jge
inc
mov
js
add
mov
lahf
push
xchg
add
dec
les
jge
lahf
rcrb
sbb
jle
ss
mov
in
rolb
fiaddl
jmp
jle
push
rorl
jno
jge
pusha
cli
sbb
lret
rcrl
js
mov
sbb
jnp
add
insl
testb
pop
shl
cmp
push
bswap
stos
and
mov
pop
adc
dec
lahf
cmp
ljmp
jbe
lds
loopne
scas
and
push
jp
pop
cmpsl
pop
or
inc
hlt
adc
cmpsb
xor
fidivs
jl
insl
inc
xchg
lock
icebp
mov
cmp
mov
call
mov
pop
loope
sbb
sbb
lret
imul
push
sbb
pop
movsb
test
loope
cld
pusha
jne
cs
cmp
dec
jp
mov
or
or
js
ret
iret
xor
jp
int3
push
stos
mov
inc
dec
sbb
or
sbb
aas
jns
mov
in
fiadds
ret
sub
mov
sbb
xlat
sarb
aas
xchg
lods
and
dec
rol
test
and
lock
dec
sbb
pushf
pop
cmp
repnz
dec
jmp
stos
sbb
sbb
push
adc
pop
mov
xchg
or
in
shrb
xchg
shlb
fcmovnb
mov
repz
pop
and
aam
repnz
cmpsb
xor
es
jo
mov
pop
hlt
daa
in
stc
loop
mov
add
stos
pusha
xchg
daa
aad
xchg
ret
lods
daa
sub
loop
cwtl
lret
mov
adc
sti
jne
popa
in
stos
jecxz
mov
xor
add
jnp
js
or
push
hlt
sbb
pop
ficoms
jne
adc
arpl
test
scas
mov
inc
cwtl
cwtl
sbbb
push
js
test
cs
adc
mov
arpl
fnstsw
mov
shll
mov
push
test
enter
sti
jno
in
inc
jno
dec
and
add
and
cmp
push
into
push
inc
and
test
mov
push
cmpsl
mov
addr16
jecxz
cmpsl
sub
movsl
gs
insb
push
lcall
out
xchg
popa
jnp
popf
jnp
dec
mov
aad
and
sub
cmc
pop
xchg
push
mull
xchg
mov
xor
fs
in
push
std
mov
jp
fisubrl
lods
ss
mov
mov
pop
ret
pop
aaa
fldenv
add
out
das
flds
aam
pop
dec
push
xor
cmp
sub
shl
outsl
jno
mov
popa
arpl
or
paddusw
or
jo
or
lods
fnstenv
jb
fidivrl
cmp
shr
pop
ds
scas
cmp
inc
les
and
divl
adc
and
mov
frstor
pop
mov
sbb
jmp
mov
jbe
xor
jnp
mov
insl
and
xchg
js
out
cmp
sub
mov
loop
mov
notl
pop
in
ret
int3
pop
mov
cmp
aad
bound
push
scas
lret
imul
popa
add
loop
pop
lahf
dec
pop
fidivrs
push
pop
std
mov
mov
adc
aas
pop
outsb
and
push
mov
jne
std
jmp
ret
xorl
add
lahf
or
xor
jg
repnz
mov
dec
jmp
not
iret
and
xor
test
mov
inc
seto
mov
jne
push
daa
sub
scas
iret
and
std
jb
mov
out
mov
pop
pop
stos
xor
push
mov
jae
scas
push
cltd
mov
pop
icebp
aas
sahf
test
out
lods
bound
sub
test
push
xor
mov
lret
inc
sub
xorb
out
incl
jbe
or
push
fstpl
aam
aam
test
test
ret
dec
ret
add
imul
sbb
mov
lret
icebp
ret
mov
fwait
clc
xchg
js
dec
jle
popa
mov
jge
push
cld
push
sbb
loopne
jo
add
nop
push
ja
jmp
push
imul
sbb
inc
jecxz
mov
push
aaa
cmp
aaa
mov
es
pop
jae
inc
int
and
jl
push
add
mov
jae
cmp
xchg
imul
sbb
idivl
adc
outsl
hlt
mov
mov
pop
xchg
mov
lods
test
mov
test
mov
push
fsubp
call
shrb
lret
fisubrs
repz
sub
fstpl
lret
enter
mov
sbb
sbb
sbb
fldl
fstl
idiv
daa
mov
push
out
int3
push
out
pop
push
xchg
scas
out
xchg
jne
cmpsb
adc
adc
xchg
stos
push
in
jbe
insl
cmp
inc
sub
enter
cmp
ds
push
jle
lcall
dec
sbbb
adc
clc
data16
or
out
lret
jmp
dec
mov
prefetch
cmc
out
xchg
jg
movsl
xor
dec
out
rclb
cwtl
popa
fiadds
shrb
sub
push
es
fimuls
shll
mov
inc
pop
les
mov
imul
mov
bound
test
mov
in
icebp
xchg
jns
call
imul
pop
jl
dec
out
jb
in
loop
sub
pop
pop
push
and
mov
mov
stos
xchg
mov
sarb
idivb
xor
pushf
xchg
sahf
dec
lret
cs
loopne
dec
in
das
pop
and
xor
test
imul
leave
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
rorl
fidivrs
dec
push
stos
push
mov
stos
xchg
mul
inc
fildl
rorb
int
mov
xchg
mov
lods
xlat
jge
adc
push
cmp
repz
adc
in
cmp
sbbb
orl
and
int
lds
ljmp
dec
or
adc
in
js
gs
inc
cmpsb
mov
loop
add
dec
fdivl
mov
or
cld
in
call
dec
sti
imul
pop
iret
test
push
lds
roll
mov
and
jns
cmc
inc
rcrb
xorb
jmp
or
jae
loop
rep
mov
js
cld
mov
mov
add
and
mov
aas
out
dec
lcall
jns
or
sbb
mov
call
movsb
mov
push
xorb
adc
jmp
push
dec
dec
aaa
jecxz
loopne
das
jp
call
mov
aam
push
das
shrb
addr16
test
je
or
ljmp
testb
icebp
adc
out
inc
loopne
dec
mov
jnp
out
out
stc
imul
outsl
ljmp
fidivrs
push
adc
add
scas
adc
and
sub
int
lods
cmp
pushf
sub
out
dec
add
xor
movsl
dec
xchg
push
push
cmp
shrb
jbe
adc
sub
push
inc
cld
lods
jle
dec
xchg
mov
xchg
sahf
lret
mov
scas
pop
mov
fsubl
inc
in
mov
add
hlt
enter
mov
insl
jae
addr16
repz
lea
inc
jle
mov
int3
popf
notl
adc
mov
add
mov
dec
mov
inc
dec
cmc
or
insb
mov
mov
stos
frstor
les
movsb
mov
mov
xchg
jae
call
lock
or
outsb
mov
and
ss
insl
addb
add
es
mov
mov
jnp
inc
ret
jnp
cltd
add
xor
add
push
sbb
hlt
mov
outsb
hlt
add
xchg
dec
jnp
mov
cmpsb
or
stos
sub
cmp
jnp
xchg
jecxz
insl
or
adc
dec
imul
push
clc
shr
imul
dec
pushf
jb
mov
rcl
lods
add
lret
pop
add
cmpsl
pusha
mov
and
cmp
xor
fldl2t
add
inc
xchg
jno
aaa
scas
scas
pop
mov
and
test
jb
adc
test
pop
repnz
ss
inc
mov
adc
adc
les
mov
stc
int3
xchg
cmp
inc
push
adc
in
adc
cld
subl
pop
loope
push
and
mov
std
test
test
test
test
mov
in
in
xlat
hlt
mov
nop
pop
adc
roll
aam
sub
lahf
mov
popa
push
sub
mov
xor
sti
into
mov
leave
stos
xchg
add
mov
adc
add
enter
lahf
mov
inc
or
mov
inc
xor
roll
fs
sar
jp
in
cmp
jns
mov
or
iret
or
fidivrl
inc
or
adc
ret
addr16
outsb
enter
add
jg
lods
ja
mov
jbe
jne
jae
insl
repz
xchg
test
or
ja
outsb
repz
or
adc
stos
jae
lahf
push
cmp
cltd
gs
push
xchg
xor
inc
or
adc
rcrb
mov
adc
jb
cmp
rol
and
jno
push
or
inc
cli
xor
add
inc
iret
push
les
rcrl
sbb
sub
inc
cmpsl
ss
lret
inc
mov
int
popf
sbb
push
dec
mov
cmp
jecxz
testb
bound
loopne
aaa
dec
in
xchg
jg
loop
push
daa
inc
shlb
pop
in
jae
sub
dec
std
popf
orb
inc
xor
push
ljmp
mov
cmpsb
mov
jbe
sub
das
add
adc
xchg
imul
and
xchg
or
test
fmul
mov
mov
fistpll
and
xor
fxch
cmp
dec
je
or
inc
sub
pop
adc
sbb
mov
sti
sbb
into
inc
cmpsl
fisubrs
lret
jg
sbb
mov
adc
dec
mov
lods
sub
adc
ret
scas
jge
es
mov
cmpsb
mov
sbb
push
out
arpl
lds
loope
iret
int
cmp
push
xlat
xlat
xchg
fs
jne
lock
movsl
adc
xchg
jb
mov
and
call
cwtl
sbb
or
loopne
pop
dec
xchg
ljmp
aad
test
movb
mov
shl
push
mov
add
add
leave
nop
and
mov
cmc
jns
in
out
mov
jg
jne
push
xor
stc
pop
mov
les
das
sarl
xlat
xor
or
xor
outsl
mov
jns
mov
nop
mov
test
dec
out
mov
ror
lret
std
mov
add
pop
icebp
inc
adc
ret
pop
jo
pop
xor
mov
mov
cmpsl
push
daa
push
insb
clc
lcall
nopl
outsl
sbb
cli
dec
test
inc
mov
outsb
dec
cmp
mov
loopne
push
push
dec
add
inc
and
push
and
xor
cs
fwait
sbb
xchg
or
mov
cwtl
paddusw
jp
sub
enter
xor
arpl
imul
jmp
js
xlat
call
loop
sti
fsts
aam
rorb
mov
lret
mov
pop
or
int3
les
xlat
adc
sbb
pop
push
ret
pushf
mov
es
inc
dec
test
test
fdivr
inc
add
mov
out
scas
dec
cli
pop
push
sub
mov
sbb
pop
popfw
stos
psadbw
sarb
xor
add
fistps
sbb
and
pop
loop
sbb
pushf
mov
imul
sti
mov
pushf
icebp
xorl
data16
mov
adc
jg
lret
sub
clc
out
pop
dec
sbb
sub
into
mov
pop
sub
mov
mov
ja
sub
xlat
ja
mov
or
sbb
jmp
test
and
xchg
dec
stc
sub
cmp
lret
mov
test
pop
cmp
ja
push
dec
insl
mov
aad
bound
int
mov
rcrb
filds
xchg
bound
inc
iret
std
dec
iret
test
mov
cmp
stos
mov
inc
adc
add
inc
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
xor
push
movsb
push
jecxz
es
dec
mov
pop
decb
inc
imul
loop
out
je
add
or
stos
fcmovnb
incb
inc
lock
xchg
outsl
sbb
mov
sub
mov
cli
hlt
daa
or
ljmp
ja
out
cmc
ret
xor
fldl
cmp
roll
adc
sbb
cmpsb
mov
mov
popa
pop
fstl
cmpsl
loope
and
or
outsb
es
xor
push
sub
pop
pop
or
dec
stos
mov
xor
inc
sbb
dec
or
sub
int3
xor
and
jg
or
and
dec
pop
adcl
pop
jbe
jne
jmp
cwtl
bound
mov
adc
and
jb
inc
or
insb
insb
cmp
in
pop
call
jnp
ljmp
jb
or
pop
sub
scas
loope
pop
sub
mov
pusha
sbb
fnsave
mov
dec
xor
cwtl
dec
lea
sub
xlat
push
ds
or
or
xchg
dec
in
xor
fistps
jns
add
aam
sbb
lock
sub
mov
std
sahf
jns
pop
popa
aas
inc
insl
jnp
pop
pop
xchg
mov
push
mov
cmc
mov
xchg
imul
popf
jecxz
jne
out
clc
nop
enter
add
movsb
push
popa
mov
and
push
pop
in
ja
push
adc
inc
inc
dec
fcoml
pop
daa
mov
or
or
test
out
jo
xor
fdivrp
ds
fbld
lods
cs
lods
sahf
or
jbe
xor
mov
test
sub
mov
inc
outsb
insb
add
dec
dec
dec
dec
jnp
mov
mov
das
push
inc
clc
js
testl
stc
imul
imul
sarl
sti
adcl
sahf
call
lods
in
lret
jp
or
mov
push
cmp
fisttps
sbb
dec
incl
lds
dec
jne
push
fstps
lcall
dec
lods
or
nop
sbb
int
jae
adc
push
push
test
cwtl
imul
push
mov
in
cmc
and
fcmove
pop
ljmp
or
or
cmp
push
sbb
ret
mov
fwait
leave
mov
imulb
pusha
lcall
in
out
inc
and
pushf
jp
rolb
shl
enter
int3
fsts
lret
and
mov
dec
fbld
out
xor
imul
adc
mov
xlat
icebp
stc
cld
inc
insl
mov
or
lods
fbstp
xchg
aaa
dec
insl
std
nop
inc
cmpb
rorb
js
stos
mov
lcall
push
addr16
stos
js
mov
push
fdiv
adc
and
shlb
cmp
push
test
cmp
or
outsb
clc
lock
bound
aam
xchg
xchg
cmp
sbb
mov
lret
out
fiadds
sbb
popa
adc
adc
mov
mov
aaa
in
add
xchg
xchg
movsb
icebp
add
stos
mov
ret
jno
add
movsl
and
ror
xor
out
roll
rclb
xchg
mov
stos
rorb
mov
xor
mov
mov
inc
add
enter
inc
rolb
paddw
xchg
scas
sbb
dec
xchg
enter
pop
imul
pushf
cmpb
mov
xchg
adc
inc
lahf
push
dec
pusha
stc
jb
pop
sbb
pop
mov
push
notb
or
insb
fldl
jo
cld
movsb
jo
pop
stos
incb
fiadds
fidivrs
stos
aas
xchg
sub
cmc
dec
jno
je
cmp
mov
adc
xchg
or
xor
xor
nop
inc
dec
cmp
call
push
add
imul
mov
dec
rolb
push
pop
push
mov
cmovne
in
lea
sbbl
fisubs
cmp
or
shlb
inc
andb
cs
dec
mov
fwait
mov
je
call
js
lds
sub
xchg
pushf
mov
adc
dec
lods
and
cs
and
sbb
mov
fld
sub
inc
aaa
lret
mov
mov
call
shrb
dec
push
xchg
in
mov
cli
imul
int
nop
and
pop
nop
sar
lret
add
jmp
dec
pop
test
test
xor
repnz
xchg
call
icebp
aam
or
repz
xlat
mov
adc
jp
aad
lcall
loope
jbe
dec
je
sar
inc
and
inc
addr16
ljmp
ss
out
mov
stc
mov
lret
xor
movsb
push
lcall
ds
test
fstps
fstpl
pop
cmp
or
mov
adc
dec
out
fiaddl
in
test
enter
adc
lock
clc
es
and
rorb
adc
sub
push
pop
clc
pop
inc
mov
jle
lock
mov
add
xchg
jo
pop
out
outsl
or
mov
pop
int
xor
and
adc
pop
lods
adc
or
mov
xchg
lcall
aad
pop
xchg
lretw
and
xchg
or
push
ljmp
jmp
test
js
lret
lcall
xor
outsl
add
sub
leave
pop
pop
cmp
jb
jae
pop
int3
adc
in
mov
add
aas
fbstp
dec
in
push
jl
or
mov
mov
mov
icebp
sahf
cmp
mov
jecxz
inc
cmp
jae
sahf
mov
and
dec
out
jnp
mov
cmc
in
insb
cwtl
push
push
arpl
mov
fadds
add
cmp
adc
loope
push
push
pop
sub
and
stc
push
push
adc
cmp
in
mov
aad
int
xchg
push
push
dec
repnz
in
lods
dec
push
xchg
inc
into
push
inc
jp
adc
jns
sub
fsubrs
mov
iret
fcoml
int3
push
popf
push
adc
sahf
stc
jbe
int
lahf
test
add
lret
lret
jge
fs
insb
cmpsl
popa
dec
adc
dec
cmp
popa
es
cmovne
es
sbb
xchg
enter
ja
mov
pusha
nop
ljmp
pop
add
sbb
xor
inc
sub
cld
lret
sub
mov
push
and
ficoms
sti
or
inc
lret
adc
push
jnp
mov
add
and
pop
popf
mov
mov
and
loope
js
mov
and
orl
fadds
add
ljmp
sub
push
aam
ja
pop
enter
pop
stc
cmp
into
pop
sbb
dec
insl
clc
cmp
stos
scas
mov
sar
pop
dec
ret
cmp
in
stos
loop
push
pop
mov
insb
adc
repnz
pop
lret
or
jns
inc
and
add
mov
mov
mov
test
dec
inc
mov
cmpsb
adc
xorb
and
cwtl
dec
cmpb
rorb
test
lock
test
lock
add
in
pop
jae
inc
mov
je
ljmp
into
inc
push
mov
gs
push
stos
cltd
xor
roll
test
add
jns
or
cmp
es
pop
and
adc
jno
mov
lods
inc
insl
jno
pushl
jp
leave
cmp
stos
jmp
and
mov
or
mov
or
push
mov
or
cs
jae
les
adc
outsb
sbb
test
rclb
xlat
jne
push
sub
test
hlt
push
and
test
pop
repnz
or
stos
insl
dec
mov
sub
dec
lods
pop
stos
test
mov
inc
ja
in
scas
xor
cmp
mov
jmp
jb
jecxz
loop
and
jbe
mov
testb
add
mov
dec
pop
scas
ss
adc
sbb
sahf
mov
faddl
mov
popa
mov
fcomp
push
loope
ficomps
xchg
in
lahf
mov
data16
pop
sbb
mov
add
pop
jno
adc
or
mov
pop
shlb
ljmp
jle
adc
out
add
lret
xchg
xchg
mov
cmpsb
loopne
xor
mov
mov
inc
sub
fdivp
lcall
movsl
into
leave
call
shl
sbb
dec
lret
and
mov
mov
inc
or
ret
pop
test
popa
xor
jmp
cmp
lea
mull
lret
jmp
popf
mov
js
cwtl
repz
lcall
pop
push
pop
insl
or
roll
pushf
imul
out
push
mov
mov
shl
cltd
sti
and
inc
sub
bound
std
sbb
aam
roll
fildl
sub
push
mov
das
mov
xchg
pop
js
loopne
shll
push
pop
mov
aad
mov
fimuls
movsl
outsl
mulb
addl
mov
cld
scas
mov
mov
into
and
decl
or
add
add
xor
and
in
xor
dec
aas
jne
add
push
sti
push
jnp
incl
insl
push
scas
lret
xchg
enter
push
mov
addl
pop
jne
or
loopne
sti
jo
enter
mov
add
xchg
lret
jecxz
dec
addr16
ja
ljmp
and
das
test
cmp
xchg
mov
pop
sti
fdivl
jge
cwtl
bound
js
addr16
scas
out
mov
push
mov
cwtl
pop
adc
ret
or
int
imul
mov
jno
push
test
pop
pushw
sbb
jl
test
sbb
xchg
and
sub
mov
xor
and
inc
sub
or
pop
inc
or
mov
lock
cmp
push
iret
pop
push
es
das
mov
lahf
popf
stos
mov
jns
push
idivl
cmc
icebp
cmpsl
mov
pop
test
ret
aad
repz
jp
in
mov
cmpl
pop
xorl
dec
xchg
daa
imul
pop
iret
sbb
add
push
dec
lock
in
inc
add
or
add
sub
out
jge
out
xor
sub
dec
xlat
lods
bound
push
scas
xor
ss
adc
aad
loop
mov
je
jo
xchg
data16
ficomps
sub
jne
stos
pop
xor
outsl
mov
xchg
bound
xchg
inc
sti
cs
adc
addr16
push
repnz
adc
jb
sub
mov
ret
xchg
es
jg
out
mov
or
jmp
sbb
adc
cmp
lret
stc
fs
testl
jl
dec
sub
ljmp
and
pop
xchg
gs
je
pop
jae
test
fcomi
push
xchg
shlb
xor
roll
sahf
dec
push
not
inc
and
mov
lret
jae
adc
cmp
cmc
popa
ja
and
add
xor
jno
dec
xchg
popa
lods
sbb
mov
and
dec
iret
push
xor
and
fwait
add
add
icebp
dec
jmp
or
aas
add
jge
imul
mov
add
add
ljmp
jnp
add
mov
mov
pop
or
cltd
rolb
sbb
cwtl
lods
cltd
cld
mov
cmpsl
in
dec
xor
shrl
lea
fs
int
call
insb
sbb
sub
test
push
adcb
xor
outsl
pop
shrl
cmp
mov
inc
out
and
movsb
xor
cmc
fsubs
sbb
into
int3
fwait
xor
cmp
jecxz
push
xchg
pop
jmp
sti
pop
cmp
push
movsb
in
add
adc
cmp
movsl
pop
mov
filds
jecxz
jge
stos
or
push
mov
dec
or
mov
pop
gs
add
daa
fs
mov
loopne
shll
mov
sbb
repz
loope
push
cmc
ret
ss
orb
shlb
mov
xlat
mov
lcall
mov
dec
push
push
xchg
mov
jbe
int
lret
mov
push
sub
pop
mov
add
in
pop
in
lea
imul
enter
gs
shl
mov
adc
stos
adc
jp
stos
in
jmp
push
pop
adc
loopne
shl
jno
adc
jae
in
call
and
push
loope
pop
cmpsb
push
daa
xchg
cmp
hlt
cmp
fcomps
js
test
sub
push
inc
cmpsl
mov
mov
pop
mov
jne
dec
outsb
or
push
lock
aad
jno
les
icebp
inc
icebp
adc
cld
and
and
cmp
cmp
test
dec
mov
or
jp
mov
and
pop
or
xor
test
ret
jecxz
jg
and
ljmp
dec
movl
dec
push
xor
arpl
in
mov
fcompl
cwtl
loope
cmp
mov
push
scas
imul
xor
cmp
ljmp
jne
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
mov
mov
ja
cmp
popa
and
sbb
into
inc
mov
inc
mov
call
std
popa
sbb
jecxz
test
jae
mov
xlat
pop
push
rcr
pop
ret
pop
lds
mov
mov
out
mov
aaa
pop
sarb
hlt
scas
gs
enter
adc
mov
lds
cmpsl
dec
jge
in
jl
sub
cwtl
loop
mov
mov
shlb
push
cltd
arpl
sahf
ret
loop
push
adc
jl
cmp
test
jo
xor
lea
add
add
xchg
outsl
in
shrl
xchg
and
movsb
sub
add
shll
inc
enter
xor
push
add
rcll
mov
sub
add
out
and
add
fsubr
sbb
insb
xchg
jmp
int
fstpl
repnz
outsb
les
inc
xchg
clc
jle
add
jecxz
test
xchg
aaa
lahf
or
sahf
pop
rcrl
lahf
pop
test
and
jmp
mov
mov
sub
frstor
out
mov
dec
outsl
in
shll
mov
fnsave
inc
test
or
push
scas
movsb
xorb
pop
test
cmpsb
divb
mov
shll
jae
imul
jnp
lahf
out
push
adc
sbb
movsl
and
sahf
cld
pop
hlt
loopne
cmp
push
jb
dec
test
out
clc
fldenv
daa
push
pop
andb
xor
xor
push
fisubs
adc
dec
sub
in
pop
rorb
lret
push
push
lahf
movsb
push
mov
mov
js
mov
add
jp
shrl
xor
cmp
lds
aad
jb
js
push
lret
dec
lahf
fldt
fstps
movsl
lods
mov
fbstp
les
sub
sti
push
addr16
fdivl
sub
mov
lret
cmp
lock
mov
mov
jno
push
xor
xchg
sub
addr16
jp
push
fsubl
jb
dec
and
movsl
jp
xadd
fstl
push
ljmp
mov
iret
add
cmp
add
jno
xor
lret
aad
insb
lods
jle
int
pop
ja
and
in
mov
jns
enter
add
dec
push
out
aaa
mov
or
adc
push
shl
loope
or
mov
push
loopne
jg
pop
dec
into
lods
xchg
scas
loopne
repnz
push
lods
mov
icebp
xchg
pop
fisubrs
pop
aas
jg
addr16
mov
out
bnd
cwtl
psubusw
jecxz
add
jl
jmp
inc
fdivl
xchg
sub
call
xchg
les
mov
ficompl
pop
cwtl
in
repz
aad
dec
and
ja
xor
imul
xchg
pop
imul
out
cmp
into
adc
cmp
ret
mov
cmp
js
mov
shll
cmp
sub
jmp
sbb
xor
sub
jno
and
push
lret
fs
addb
pop
ret
mov
clc
xor
imul
outsl
fiadds
mov
jmp
movsl
xorb
xchg
mov
adc
les
inc
xor
loop
xorb
adc
fwait
pop
jecxz
sbb
or
jno
jg
scas
push
cmp
jmp
call
insl
pop
test
or
ja
pop
xchg
sbb
imul
jl
mov
sub
sbb
pop
scas
pop
or
xor
jmp
jle
out
xchg
bound
sarl
jo
loopne
inc
decb
fyl2xp1
sbb
dec
outsb
aas
ret
es
cmp
shl
jle
cmpsb
xor
adc
leave
mov
and
adc
push
jmp
pop
je
incl
dec
pusha
or
callw
movsb
xchg
lcall
insb
jne
cli
sub
sbb
dec
jl
loopne
jne
dec
orl
cwtl
out
adc
les
cli
jl
pop
stos
inc
lock
fdivl
cmpsl
test
mov
mov
mov
and
loop
dec
xchg
inc
or
enter
jle
sub
sub
add
sub
mov
jbe
adc
jbe
xchg
aaa
inc
xchg
mov
jle
mov
mov
mov
mov
push
adc
repz
cmp
push
and
adc
sbb
inc
rcrb
shlb
inc
daa
add
inc
jp
sbb
xor
push
fcmove
add
or
sbb
dec
fisubrl
enter
dec
or
clc
push
inc
test
sbb
outsb
iret
jg
mov
sub
aas
xor
xchg
pop
pop
lret
ljmp
pop
mov
test
fiadds
vpunpcklqdq
jge
rclb
jnp
gs
sbb
ljmp
inc
mov
js
fwait
std
mov
inc
mov
mov
addr16
mov
insl
sub
inc
movsl
out
gs
jmp
cmp
insl
arpl
dec
aam
add
rclb
or
movsb
pop
add
jno
ret
inc
pop
daa
pop
push
dec
or
mov
pop
pushf
imul
ds
je
repnz
dec
dec
mov
sahf
dec
jae
push
mov
and
xchg
in
arpl
and
adc
into
mov
je
pop
pop
andb
push
iret
out
shlb
mov
jns
leave
test
pop
fimuls
mov
xchg
fsub
jle
movsl
insl
das
cmp
loop
cmp
pop
outsl
jge
add
sbbl
pop
mov
mov
sbbl
lods
jns
pop
je
or
out
fwait
xor
popa
xchg
sbbl
push
xchg
test
push
push
jae
mov
stc
sbb
dec
cmc
mov
inc
fldl
push
sahf
outsb
fbld
iret
cmc
sub
pop
xchg
adc
leave
sbb
cld
pushf
sub
gs
movsb
mov
sbb
jge
movsl
and
test
dec
xchg
mov
and
stos
in
inc
pop
in
rclb
lcall
push
push
lods
not
xchg
xchg
ffree
subl
sbb
divb
pop
leave
cmp
lods
loopne
push
loop
test
cmp
fwait
mov
mov
leave
inc
pushf
adc
stc
stc
scas
or
data16
jge
lea
int
call
filds
inc
push
repnz
sub
and
mov
movsb
jae
push
mov
imul
push
daa
lods
and
scas
fnstsw
stos
stos
in
push
in
loope
movsl
push
cmp
add
fld
andb
test
js
or
out
std
mov
jecxz
mov
adc
adc
lods
enter
add
ljmp
imul
scas
sbb
xor
sub
stos
adc
xchg
les
jns
icebp
movsl
outsb
inc
lretw
aaa
cmp
inc
aad
mov
aaa
pop
inc
paddsb
shrb
icebp
push
outsl
aam
pop
push
stos
rorb
xchg
xor
aas
pop
or
fcmovne
jb
rcrl
test
lock
xchg
inc
and
mov
push
lods
adc
cld
sarb
and
pop
popa
mov
push
fst
or
pop
bound
pop
leave
dec
daa
cli
aad
jne
sub
nop
or
mov
mov
fdivs
mov
cmc
and
dec
xor
stos
push
cmp
add
out
jnp
bound
ss
jge
lret
hlt
imul
ljmp
push
pushf
cmp
out
push
imul
sbbl
ret
adc
popa
xchg
add
leave
fs
insb
stc
fmul
dec
xchg
mov
mov
xchg
out
inc
push
pandn
push
xchg
xorb
shr
insb
data16
xchg
out
or
loop
lcall
in
je
or
inc
lcall
xor
adc
lea
cwtl
dec
cmpsb
out
xor
mov
insl
jne
inc
inc
and
mov
mov
cwtl
ja
fldcw
xchg
dec
sub
fisttpll
xchg
dec
add
cmp
hlt
and
mov
aas
in
in
push
loop
pop
adc
mov
mov
call
subl
or
mov
sub
insb
nop
inc
loop
in
ja
je
mov
insb
xor
xor
sub
pop
sahf
int3
clc
push
jmp
push
lret
cmp
out
iret
dec
xor
jae
add
push
sbb
fiaddl
ficompl
loop
xchg
mov
mov
mov
mov
xor
movsb
xchg
xchg
ret
scas
out
xchg
fsubr
rclb
dec
and
repz
xchg
les
sbb
imul
arpl
xchg
fcomps
nop
xor
popf
call
pusha
cmp
in
xchg
test
add
aaa
adc
sub
ret
subl
out
arpl
call
xchg
mov
in
nop
inc
lods
mov
orb
sbb
cmp
insl
aas
das
enter
pop
sub
xlat
push
dec
inc
jmp
iret
jg
repnz
movhps
sahf
jbe
std
insl
arpl
sbb
shl
xor
mov
dec
mov
add
jge
loope
mov
push
test
jb
lahf
out
pop
xor
xlat
call
fldcw
shlb
scas
push
sub
int3
shll
adc
jle
test
ljmp
test
loope
jp
cmpl
int3
faddp
xor
cmp
push
xchg
cli
cld
pop
aaa
pop
cmp
das
in
add
jg
push
outsb
sub
mov
pusha
pop
in
add
inc
data16
mov
xchg
divb
cwtl
sub
add
test
jl
out
and
mov
mov
push
inc
jns
mulb
jo
insb
mov
in
repz
sub
ret
shr
inc
fsubrl
and
fstl
add
das
jl
jno
test
jns
xchg
es
fisttps
aad
fcom
xchg
push
shll
fstp
movl
lea
outsl
xor
jb
pop
dec
add
dec
adc
dec
sbb
sbb
xchg
nop
sbb
hlt
inc
inc
push
or
gs
add
orl
or
and
scas
into
arpl
jg
mov
movsl
in
scas
ret
sub
shrb
clc
and
lock
test
ljmp
dec
dec
xchg
sbb
jp
cli
out
iret
pop
add
xchg
xor
stos
mov
cmp
pop
xor
mov
hlt
add
addr16
xor
cltd
dec
jbe
xchg
jno
test
pop
mov
iret
into
pop
or
test
fsubrl
push
scas
out
inc
rolb
leave
or
jge
pop
mov
call
pop
lock
shr
cmpsl
sarl
sti
xchg
fs
mov
addr16
cmp
dec
fwait
inc
cmp
sbb
cwtl
bound
jne
test
movsl
inc
mov
jmp
jmp
daa
in
std
mov
or
sbb
add
rcl
mov
add
xor
cmp
test
or
mov
cmp
inc
pop
sub
xor
pop
dec
inc
inc
mov
and
push
cmpsl
xor
inc
cmp
jge
nop
sbb
ret
enter
sbb
out
aam
lea
and
cmpsb
sbb
cmp
jns
sbb
lcall
add
popa
xor
and
fcoms
lret
cmp
jae
mov
mov
sub
sub
sub
mov
cmpb
fwait
dec
jnp
dec
xor
xor
sub
mov
and
mov
aad
lods
mov
mov
dec
mov
mov
iret
loop
sub
mov
cmp
xchg
les
pop
dec
mov
sbb
add
push
push
mov
jae
in
pop
test
jnp
mov
test
ss
or
scas
pop
pop
push
and
xchg
jmp
popf
mov
adc
dec
in
nop
movlps
cmp
lahf
jbe
and
or
arpl
lcall
rcl
data16
hlt
push
mov
jg
call
push
fcom
daa
add
add
testb
icebp
pop
push
xchg
inc
iret
push
dec
lahf
test
arpl
outsb
mov
mov
xchg
decl
aam
out
mov
test
subb
or
lret
ss
repz
xor
mov
mulb
push
fstpt
outsl
imull
pop
sahf
mov
push
and
lret
dec
mov
lods
out
mov
mov
jecxz
mov
adc
mov
push
je
ret
mov
lds
push
insb
movsl
mov
pop
cli
inc
push
inc
orl
sbb
mov
lahf
test
subb
xchg
inc
es
adc
pop
call
dec
negb
push
loop
pop
fnstenv
mov
rcrl
jmp
jge
inc
gs
mov
cmp
or
ljmp
pusha
jmp
jno
pop
adc
xor
mov
cmp
xor
jbe
cmp
mov
dec
dec
and
ljmp
in
outsb
push
lea
pop
sahf
push
add
or
jno
push
lods
mov
adc
mov
sbb
enter
addb
sub
push
cmpsl
fldl
pop
add
fstpt
pop
xchg
mov
inc
mov
shlb
mov
in
mov
xor
cli
push
pop
add
daa
sbbl
pop
lock
hlt
pop
scas
movl
dec
lock
xchg
out
lock
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
mov
cmp
xchg
nop
pop
adc
pop
cld
and
fisubrs
dec
jp
scas
out
adc
or
cmpsl
inc
jnp
add
ja
or
int
dec
jge
mov
push
int3
mov
adc
ret
test
inc
lret
mov
dec
push
push
aas
push
sbb
inc
and
ret
dec
outsl
jmp
or
xchg
mov
scas
push
cmpsb
fistpl
icebp
std
stos
push
pop
push
add
dec
xchg
cltd
lret
xor
fbstp
neg
xchg
cmp
xchg
shr
dec
rcr
add
push
jns
xlat
adc
pop
sbb
lahf
out
or
add
jns
in
pop
jo
mov
lret
and
cmp
inc
fstps
jbe
shr
mov
pop
std
push
insl
adc
xchg
dec
xlat
push
lods
xor
mov
mov
imul
lcall
enter
cmp
fnsave
push
data16
fisubrl
jnp
pop
ss
and
int3
cmp
ret
or
fcmovnbe
mov
jo
mov
in
hlt
xor
icebp
xchg
fld
pop
stos
cli
sbb
jmp
rcll
xor
sub
cld
sarl
add
sub
adcb
mov
push
and
pusha
cltd
xor
mov
pusha
and
or
int3
jmp
fs
cmp
jp
shlb
imull
subl
insl
out
mov
mov
repnz
stc
push
lret
dec
jecxz
adc
je
mov
popf
es
xor
jno
push
insl
mov
sbb
sarb
or
pop
dec
shlb
scas
pushl
mov
and
or
stc
leave
jg
repnz
pushf
jbe
adcb
xchg
loop
pop
sbbl
add
pop
mov
jb
cmp
insb
into
lods
andb
arpl
gs
and
das
loop
popf
jno
mov
loope
pushf
mov
xchg
mov
mov
and
pop
cmp
int
adc
sub
and
outsl
out
pusha
sti
daa
push
inc
xchg
cmpsl
xchg
aad
stc
leave
test
and
jne
or
or
pop
mov
add
lahf
mov
je
dec
mov
mov
pop
cmc
and
repnz
mov
or
or
xor
or
xchg
sub
lock
jo
lds
aam
or
mov
dec
sub
lea
js
add
std
iret
je
lcall
xlat
jnp
adc
lret
std
sbb
lret
mov
adc
pop
ficomps
mov
fsubrs
mov
xor
jl
cmpsl
jle
sub
mov
outsl
mov
js
xor
cltd
ret
push
xor
lods
push
lahf
mov
loopne
scas
insb
ret
jp
test
hlt
sub
mov
test
mov
inc
mov
dec
push
sub
inc
jl
test
out
clc
cmp
sbb
mov
cmp
lcall
movsl
add
test
dec
mov
inc
jp
mov
std
dec
in
mov
insl
and
out
popa
push
loope
sub
ret
push
nop
sbb
pop
test
and
xor
sbb
mov
ja
pop
and
daa
cmpsb
mov
and
mov
dec
push
inc
xor
test
scas
pop
pop
imul
push
out
sub
fildll
icebp
push
out
mov
outsl
nop
pusha
clc
cmc
inc
movsb
inc
std
adc
mov
jge
inc
pop
pop
adc
or
jmp
bound
mov
xchg
sti
xchg
stc
jp
mov
jge
int3
sbb
int3
es
stc
cmpl
push
popf
sub
out
mov
in
roll
enter
mov
mov
xchg
nop
mov
jp
dec
add
pop
movsb
lcall
mov
push
imul
dec
mov
test
xchg
jmp
xor
icebp
jge
je
mov
stos
inc
cmp
sub
enter
sub
xor
dec
push
sub
fs
arpl
sbb
sbb
and
sti
call
inc
fbld
mov
cli
jge
mov
sub
jg
fs
pop
pop
dec
dec
sbb
sahf
leave
out
fdivrs
mov
sarl
or
jae
cld
mov
mov
push
dec
bound
mov
push
add
pusha
sub
jbe
fidivrs
jns
xchg
lds
fidivrs
pusha
push
ja
or
or
xor
jne
fisttpl
stos
enter
add
sub
pop
scas
add
lcall
mov
jmp
mov
jecxz
mov
mov
test
mov
addr16
mov
add
test
aad
leave
jns
mov
movsl
imul
movl
andb
gs
adc
cmpsl
jnp
or
lret
mov
inc
xor
adc
adc
mov
das
ds
jg
push
shrb
movzwl
aad
mov
stos
mov
push
mov
insl
jbe
or
cmp
pusha
popa
mov
popf
cmpsb
mov
daa
ds
mov
push
movsl
xchg
xchg
mov
js
xchg
loop
add
ja
popf
and
into
mov
sub
and
popf
jmp
xchg
add
xor
xchg
pop
add
in
sub
push
mov
call
leave
mov
push
dec
xchg
lods
in
add
orl
sahf
dec
out
jae
testb
push
loop
shlb
push
mov
mov
push
and
popa
cmpsl
in
pop
push
addr16
outsl
xorb
pop
cmp
mov
icebp
dec
out
shrl
jecxz
xchg
mov
fldt
xchg
dec
and
pushf
pop
push
pop
jge
stc
xor
pop
dec
add
xchg
cmp
cmp
ret
pop
loopne
hlt
mov
sub
lret
pop
jmp
mov
sbb
sub
mov
xor
push
xor
mov
stos
mov
fwait
movsl
mov
jo
ss
push
adc
cltd
pop
mov
lods
out
sub
dec
xchg
nop
xchg
clc
pop
cmp
xor
and
loop
cmp
lods
jmp
hlt
scas
add
adc
sbb
adc
mov
imull
jge
lods
or
sbb
mov
pop
mov
mov
out
daa
iret
popa
mov
mov
out
pop
ds
or
rcr
test
cld
jno
and
popf
nop
xchg
jge
lea
jecxz
xchg
addl
pop
mov
int
lret
jnp
mov
pop
test
stc
jle
mov
js
cs
popa
adcl
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
inc
daa
dec
push
enter
xchg
mov
loope
popa
sar
ljmp
out
shll
push
addr16
pop
ja
pop
pop
mov
int3
imul
mov
push
or
sbb
push
add
gs
loopne
add
adc
sub
sbb
aad
mov
jge
pop
mov
outsb
daa
dec
int3
mov
push
int
sbb
push
sar
jno
shl
add
xchg
addr16
jnp
adc
lods
in
mov
mov
sub
dec
int
lods
sbb
mov
adc
lcall
cmpsl
push
xchg
mov
mov
or
mov
int
std
test
cmp
and
jb
push
cwtl
fists
pop
arpl
notb
dec
sarb
pop
inc
sbb
stc
jle
in
rolb
mov
movsl
mov
cmp
mov
lret
loop,pt
sbbb
andb
sarl
lods
mov
mov
xchg
cmp
xchg
loop
sub
ds
lahf
sub
fwait
bnd
and
lds
call
jge
lret
mov
ret
jl
jg
push
mov
xor
cld
sub
push
stos
bound
and
out
inc
fcoms
pushf
cld
fsts
jnp
pusha
mov
push
push
xchg
inc
clc
pop
xchg
jp
insb
cmp
out
test
es
mov
dec
scas
popa
lret
addr16
push
cmp
push
mov
scas
push
data16
jg
inc
or
fiadds
movsb
jb
daa
add
js
adc
jb
aad
jge
push
enter
add
mov
cltd
lret
adc
mov
cmp
xorl
jns
sub
nop
push
stos
loop
jae
test
bswap
cltd
sbb
popa
push
push
cmp
ljmp
pop
sbb
adc
into
xchg
cli
and
testb
jl
jmp
adc
out
arpl
cmp
cmp
loopne
dec
sbb
mov
cmp
xor
and
push
icebp
mov
rcrb
test
js
rol
add
daa
outsb
xor
rcl
in
aaa
out
push
fiaddl
add
fisttpll
imul
sbb
cli
movsb
ss
fdivrs
add
sahf
pop
push
or
push
inc
cmp
jns
mov
add
int3
andl
pop
stc
add
or
mov
dec
mov
loopne
shl
sub
out
push
in
insl
and
sahf
icebp
lcall
movsl
add
test
jge
or
adc
push
in
sub
and
or
sahf
or
xor
adc
in
inc
inc
clc
rcl
fsts
out
xchg
xlat
adc
shrl
repz
mov
cltd
movsb
xchg
ret
mov
jge
sub
cltd
sbb
jg
jnp
rcrb
xor
loope
imul
clc
pop
fildll
imul
push
push
push
push
xchg
pop
jo
addb
cmp
mov
pop
ja
xlat
add
add
cmp
lods
int3
xchg
xchg
cltd
into
out
cmp
stos
pop
adc
inc
push
xchg
je
jmp
mov
inc
or
push
mov
aam
xchg
mov
mov
adc
insl
add
leave
lahf
arpl
push
gs
push
xchg
out
dec
xchg
add
andl
cmc
or
fistl
push
push
and
jg
xchg
sub
imul
addr16
mov
arpl
insb
cmp
xchg
in
enter
and
mov
data16
push
add
shl
aam
ss
in
xchg
ja
mov
addr16
push
clc
fdivs
mov
jmp
imul
push
mov
loope
sarl
test
jne
rorl
call
fs
dec
insb
xchg
jmp
inc
sar
movsb
fcoml
jnp
fadds
jnp
mov
outsb
push
push
icebp
shrb
inc
lahf
mov
insb
adc
pop
fidivl
scas
lods
inc
adc
adc
push
push
shr
dec
mov
dec
sub
jbe
ret
mov
push
fidivrl
add
or
aam
test
testb
or
xchg
shlb
outsl
rcrl
movsl
mov
pop
dec
inc
cld
push
xchg
lods
hlt
stos
sub
bnd
bnd
arpl
fisubrl
sahf
jg
ljmp
push
mov
pop
outsl
cli
add
jecxz
popa
cmpsl
sbb
fisttps
in
movsb
push
jp
stc
imul
out
pop
jae
xchg
pop
jmp
loopne
sbbb
jno
addl
push
dec
or
mov
mov
mov
add
shr
fldl
inc
call
insl
mov
xchg
add
push
nop
dec
aas
jno
insb
push
push
scas
push
popl
push
xor
das
test
push
test
sbb
xchg
es
xchg
inc
sbb
stos
loop
xchg
jo
add
fstsw
std
pop
dec
cmpsb
jbe
jecxz
ja
pop
xlat
in
pop
orb
cmpsb
xor
jp
pop
xchg
movsb
jge
mov
out
aam
mov
xchg
pushf
cmp
xchg
divb
adc
mov
dec
repz
mov
pop
iret
pop
add
cwtl
cmc
add
add
sbb
mov
lahf
mov
out
add
insb
sbbl
iret
add
jns
jg
in
xchg
out
gs
add
cmp
xchg
cltd
test
jecxz
or
hlt
jo
xor
pop
xchg
mov
iret
movsb
dec
je
mov
cmp
js
loopne
shlb
fmulp
and
mov
and
js
or
or
shlb
cmpsl
mov
out
les
nop
and
jp
mov
es
out
xor
jne
sti
les
mov
test
pop
inc
add
int3
add
mov
mov
loop
jp
fisubrs
lock
push
in
sub
mov
push
sub
push
push
popa
mov
inc
inc
lret
cmc
fs
pop
or
cmp
or
lods
jo
cs
lods
mov
xor
push
inc
adc
adc
or
imulb
mov
add
inc
cmpl
cmpb
adc
adcl
xorl
mul
sahf
jmp
jb
mul
scas
xchg
xlat
xor
push
add
cmpsl
out
jnp
adc
mov
sbb
mov
push
xchg
sub
gs
push
aam
sub
or
ret
xchg
xchg
add
popa
rcrl
push
rolb
sbb
lods
rorl
fistps
pushl
scas
aas
fadds
int3
aam
lcall
mov
ljmp
repz
cmp
jo
xor
ss
push
push
lds
cmp
cwtl
les
adc
add
icebp
fwait
shrd
shr
jmp
and
add
loop
es
pop
js
sub
dec
pop
js
ja
arpl
push
xchg
test
inc
add
cmp
imul
xchg
mov
imul
repnz
les
in
cmpsl
or
movsl
xor
dec
cld
arpl
hlt
rcrl
adc
and
fmul
in
dec
fsubs
dec
push
adc
mov
xor
xchg
leave
xchg
xchg
inc
aas
add
pop
mov
fldcw
mov
not
sbb
cmc
pop
pop
in
in
out
cmp
loopne
jmp
jnp
sub
lret
lcall
gs
rol
and
cld
test
subl
loopne
cld
pop
ficoml
loope
jg
push
aaa
mov
lea
sbb
loop
add
push
stos
xchg
mov
in
and
fldl
iret
cld
rorb
jg
insl
sub
inc
fucom
pop
push
dec
imul
pop
sub
in
scas
push
inc
std
mov
js
ljmp
jns
pop
jne
bound
call
aas
xor
inc
movsl
js
fwait
dec
aas
shlb
sbb
xchg
pop
orl
or
push
inc
gs
inc
push
frstor
hlt
xlat
lcall
rol
cmp
cltd
jne
lods
xchg
imul
sbb
add
jp
pop
pop
fstps
and
lret
push
mov
push
inc
out
xor
dec
jbe
push
pusha
cmc
mov
or
mov
fldt
repnz
lret
push
outsl
push
mov
jne
mov
xchg
inc
and
mov
add
pop
imulb
cltd
icebp
pop
xchg
in
lahf
xor
jno
push
sub
out
push
jb
dec
cmp
inc
rol
js,pn
prefetchwt1
mov
out
mov
mov
lea
ficompl
jne
cmc
lods
mov
lods
cwtl
lods
add
jae
mov
into
cltd
mov
mov
xchg
mov
daa
jl
adc
dec
fwait
sbb
fdivl
adc
pop
hlt
testb
mov
jl
xchg
out
outsl
sub
mov
push
test
mov
hlt
jecxz
iret
test
adc
jg
iret
cmc
nop
loope
push
xchg
jle
dec
loop
xchg
inc
rcrb
fisubs
enter
and
add
xchg
rcrb
fs
pusha
and
call
push
ss
push
pop
add
enter
xor
incl
sub
in
rcrb
mov
clc
out
inc
or
adc
mov
fisttpll
test
lods
jbe
rorl
leave
xlat
sbbl
gs
sbb
xchg
xor
lea
out
sbb
mov
jge
add
xor
sub
cltd
fcmovne
xchg
enter
jno
jle
mov
xchg
out
push
jecxz
insb
lock
cli
scas
clc
mov
stos
add
cmp
fldt
xor
mov
jns
iret
cwtl
stos
xchg
dec
pop
movsl
or
cmpsb
cmp
or
aam
adc
cltd
lock
lock
int
in
pusha
adc
stos
fisttpll
dec
insl
int
jmp
scas
and
inc
aaa
out
jecxz
mov
into
jns
inc
mov
call
xchg
sahf
push
cltd
mov
ret
in
stos
lret
inc
inc
dec
test
ss
sbb
aas
push
out
daa
enter
add
cmpl
xor
decl
cli
sti
xchg
push
lds
pusha
int
sbb
repz
sbb
or
add
ret
out
cmpsl
push
or
sahf
sub
loop
push
jmp
dec
mov
cmpb
loop
movl
cmp
cld
inc
or
call
jmp
popa
fdiv
jno
rcrb
lods
push
jge
xchg
cmpsl
lods
inc
or
or
movl
or
out
dec
mov
ficomps
xor
mov
sarl
jl
out
pusha
int3
loop
push
xchg
aaa
add
xor
cmc
movb
jnp,pn
movups
jne
iret
and
loop
movsb
dec
sahf
in
lcall
jns
jnp
adc
mov
or
outsl
adc
mov
xlat
fiadds
dec
arpl
outsb
cmc
fmull
pop
mov
mov
mov
jbe
js
mov
test
outsb
in
xor
sbb
les
jnp
cmp
dec
in
dec
push
pop
adc
or
fcompl
in
ret
aas
cmp
inc
sarl
add
aad
mov
ret
cmp
sbb
cmc
mov
cli
cmp
xchg
mov
mov
adc
jae
inc
mov
movb
aas
sbb
mov
pcmpgtb
clc
icebp
push
aas
test
jmp
movsb
push
movsl
loopne
jns
popf
push
mulb
aas
shrb
dec
test
mov
xor
xor
adc
fwait
popf
mov
and
jg
aad
out
fnsetpm(287
test
sbb
adc
pop
in
cwtl
movsb
jmp
push
cmp
dec
xchg
dec
notl
add
in
popa
test
mov
mov
inc
xor
iret
out
mov
xchg
fidivl
lahf
aam
cs
xchg
imul
stos
mov
ss
addr16
push
xlat
dec
sbb
je
addr16
lds
hlt
int3
and
div
bound
cmc
mov
pop
int3
js
fnsave
push
je
aas
xor
fcompl
cmp
fs
sub
sbb
pop
and
mov
lods
mov
shll
pop
xchg
into
scas
rcl
jb
call
cmpsl
ret
scas
cmp
popa
adc
xchg
mov
lret
mov
cmpsb
arpl
imul
dec
inc
in
jno
jecxz
addr16
popf
bound
xchg
das
test
cmpsb
add
or
ss
ret
insb
in
repz
mov
dec
int3
mov
das
cli
mov
xchg
call
inc
outsb
repz
aaa
mov
sub
xchg
jne
popa
out
aad
adc
lret
or
aam
decl
add
pop
imul
pop
enter
fisubrl
ret
lahf
in
jae
adc
cmp
cmpsl
lret
mov
enter
xlat
enter
mov
push
into
fwait
xor
adc
jecxz
jns
shlb
str
lcall
inc
jno
shrb
jg
icebp
add
das
adc
sbb
pop
lods
pusha
jmp
testl
loopne
mov
into
repz
or
stos
mov
adc
cmp
or
jns
lods
mov
and
and
cmp
popf
xchg
add
adc
pop
lock
adc
jp
jb
inc
scas
shll
dec
or
mov
repnz
cmc
in
adc
push
pop
mov
xchg
jge
add
inc
xor
sub
adc
mov
imul
or
cwtl
pop
mov
jbe
xor
scas
pop
xchg
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
push
push
ja
lods
repz
sbb
or
push
out
loope
jbe
and
sub
mov
sbb
sbb
xor
adc
mov
push
sub
mov
mov
jp
idivb
inc
xchg
imul
mov
lods
pushf
loope
insb
pop
push
dec
testb
add
lahf
add
mov
jge
dec
sub
xor
mov
into
mov
push
xlat
pop
pushf
sbbl
loop,pn
pop
adc
mov
and
lahf
xorl
inc
mov
dec
adc
insb
sti
pusha
lahf
xchg
xchg
adc
jmp
sub
jnp
mov
mov
or
cltd
push
xchg
sbb
call
mov
int
lods
xchg
adc
outsl
mov
andb
loope
mov
jnp
pop
and
inc
and
mov
lds
xor
pop
xchg
repnz
repz
push
and
fistl
fstl
mov
repz
dec
outsb
fsubr
inc
call
lea
mov
sub
xor
mov
sbb
cmp
pop
movhps
mov
in
sbb
cwtl
inc
mov
sbb
popa
das
sub
add
sub
cmp
pop
xchg
mov
xor
icebp
cmpsl
pusha
stc
mov
aam
cltd
xchg
into
cmp
aad
jnp
jmp
outsb
jo
or
les
mov
xor
inc
mov
push
xchg
cmpsb
mov
xor
mov
xchg
lret
mov
pop
test
fisubrs
insl
pop
pop
clc
mov
movsl
push
decl
mov
mov
repnz
cmpsb
add
loope
jle
jbe
cwtl
jl
mov
mov
pushf
dec
inc
clc
std
andb
pop
jmp
and
aad
sbb
mov
inc
sbb
add
rol
push
loopne
xchg
pop
xor
repz
cs
adc
fcmovu
mov
jbe
and
hlt
add
or
movzbl
clc
jbe
fnstsw
dec
xchg
push
shlb
test
sti
mov
imul
add
pop
into
jns
int3
push
scas
andl
ret
or
mov
inc
mov
and
xor
xchg
jbe
xchg
jb
pop
mov
xchg
xchg
scas
ds
dec
stos
in
adc
pop
jns
std
mov
push
sub
in
pop
addr16
sub
inc
pop
loopne
jno
rorl
dec
add
inc
xchg
test
js
fsubs
and
repz
enter
les
das
mov
sub
inc
or
sbb
add
xchg
loopne
hlt
pushf
testl
out
test
add
stc
sbb
cmp
sub
xchg
jns
adc
enter
pop
cmp
movsb
icebp
jle
sub
mov
cmp
xchg
mov
mov
lods
insb
mov
xor
jle
inc
xor
rcll
sti
pop
enter
daa
lods
push
inc
jae
push
push
lea
ds
rcll
pop
sbb
mov
inc
jl
dec
sub
mov
or
lcall
xchg
inc
aas
dec
jnp
fsubrs
xchg
iret
xchg
mov
dec
pop
cmpsl
mov
mov
inc
popa
stos
inc
mov
hlt
push
in
aaa
mov
lds
add
nop
mov
cmp
xor
inc
inc
push
jae
pop
and
mov
mov
mov
and
rcr
mov
xchg
clc
mov
xor
jp
pop
sahf
pusha
xchg
dec
dec
or
mov
out
dec
sub
popf
pop
push
jecxz
jl
scas
hlt
ds
cmc
dec
jo
pop
mov
pusha
ljmp
push
mov
decb
push
and
push
dec
addr16
out
stos
imul
jb
mov
es
outsl
xor
and
inc
cmpsl
movsl
inc
add
xor
roll
add
cmp
mov
xchg
mov
inc
adc
stos
push
pop
stos
incb
dec
leave
pop
popf
sub
cs
ja
adc
jmp
jmp
inc
xchg
test
jae
xchg
out
daa
mov
mov
filds
test
fisubrl
add
fdiv
mov
loopne
inc
cmp
mov
insl
ds
mov
addr16
nop
push
and
jge
pushf
push
aaa
imulb
fidivrl
pop
mov
push
repnz
rorl
sbb
mov
clc
insb
sub
mov
ss
fs
lcall
push
stos
rcrl
adc
loopne
push
xchg
cmp
cld
test
in
jge
xor
repz
mov
adc
mov
movsl
aaa
lahf
push
rclb
pop
cld
push
scas
in
push
mov
or
insb
xchg
cmp
pop
jne
push
add
jo
mov
test
dec
negl
push
test
sub
adc
movsl
lods
in
push
test
push
call
and
ds
mov
popf
mov
or
mov
inc
mov
xor
ret
popa
jecxz
xchg
sub
std
gs
dec
fsubs
adc
and
pop
jns
pop
adc
and
jbe
inc
adc
and
ja
divl
sahf
and
sub
testl
pop
test
repnz
shll
cltd
xchg
xor
adc
mov
xchg
in
or
insl
sbbb
repz
mov
cs
cmp
nop
xor
shlb
cmpsb
xor
add
xor
sub
dec
mov
xchg
stos
movsb
pop
pop
out
loop
into
dec
inc
data16
cmpsl
adc
and
mov
inc
mov
dec
cmp
cs
shlb
xor
clc
scas
jge
testb
push
pop
fbstp
sti
out
adc
les
xor
jnp
or
mov
rorb
cwtl
mov
mov
dec
inc
popa
lea
push
pop
fstl
or
iret
push
push
xor
push
mov
test
add
icebp
gs
cmp
mov
pop
popf
ds
jno
add
mov
push
shlb
inc
test
dec
dec
mov
movb
push
or
testb
sbb
daa
cmp
call
in
enter
daa
fstl
xlat
test
aam
inc
sbb
mov
loope
int
movsb
jg
cmp
dec
lds
mov
sbb
aam
inc
inc
mov
push
je
sub
sahf
lret
mov
enter
jmp
cmp
adc
xchg
xor
lds
sar
or
xor
sub
bound
cld
jmp
or
pop
inc
or
and
jo
adc
xchg
cltd
mov
sti
push
mov
es
add
jg
hlt
pop
cs
fmuls
lea
fbstp
jge
iret
out
stos
ret
dec
sbb
sbb
hlt
mov
mov
dec
adc
mov
sub
jbe
xchg
sub
sub
and
sbb
sbb
pmaddwd
jp
xchg
cmp
decb
add
arpl
cmp
div
in
mov
mov
clc
xchg
into
dec
inc
push
dec
push
cmpsb
and
pop
pushf
out
ret
js
aas
loop
lret
scas
jb
daa
pop
in
jge
cmp
pop
fs
std
fs
adc
push
xor
xchg
stos
imul
cli
mov
outsb
sbb
xchg
jno
in
int
lods
loop
sbb
insb
and
cmp
mov
scas
filds
nop
or
xchg
sahf
jmp
iret
sub
testb
into
push
inc
xor
mov
cmp
das
lret
jnp
push
mov
or
mov
call
sahf
fucomp
xorb
inc
int3
scas
xor
out
outsl
or
cmpb
fnstcw
testb
xor
and
fcomip
mov
inc
and
cmp
xor
out
jecxz
aaa
sub
pop
push
js
stc
jno
mov
cltd
jp
dec
add
ss
scas
jmp
imul
and
sub
clc
inc
imul
aas
insb
sub
xchg
shll
jg
cmp
push
mov
sub
adc
out
stos
cmpsb
add
popa
xlat
cltd
fimuls
jo
inc
lret
xor
fcomps
movsb
sbb
imul
jmp
lock
ret
jp
mov
and
sbb
stc
inc
ss
pop
pusha
jmp
cmpl
icebp
in
mov
jae
cltd
jle
hlt
repnz
sub
push
cmp
shl
insl
btr
cmpb
fmuls
sub
test
push
jg
popf
mov
insl
xchg
xor
lcall
dec
shl
sub
push
push
in
mov
xchg
test
neg
iret
lret
sahf
xchg
jno
jmp
dec
push
mov
sbb
das
out
mov
pop
rolb
dec
push
jmp
loope
out
xchg
push
sub
test
cmp
mov
push
or
repz
or
add
bound
mov
push
pop
jmp
sub
decl
and
push
in
arpl
jne
aad
fwait
and
cmc
btr
lods
lea
hlt
cltd
mov
adc
fdivs
inc
js
outsb
repz
dec
inc
rorl
dec
mov
pop
mov
cltd
je
scas
fisttpll
ja
scas
xchg
sub
mov
imul
or
xor
iret
push
out
loopne
call
xchg
push
push
jne
jmp
pusha
push
mov
cmpsl
jge
inc
out
push
lods
hlt
out
call
sub
int
mov
xchg
dec
loopne
fldl
inc
movsb
lcall
shll
dec
pop
movsl
dec
call
push
push
nop
push
pop
js
push
jnp
add
aam
arpl
and
or
sbb
cmp
ficoml
or
dec
subl
sbb
jge
or
subl
push
insb
leave
cld
jmp
jmp
in
lea
xlat
xchg
mov
outsl
aaa
xor
jmp
push
adc
mov
test
enter
lock
aad
int3
fs
lahf
test
mov
sbb
lea
cs
jne
pop
rcrl
sub
lods
ret
sbb
pop
pop
into
scas
movsl
push
jg
jg
test
jo
int3
jp
pop
xchg
hlt
pop
add
inc
xchg
dec
fisttps
pop
pop
mov
lahf
lcall
aad
shrl
inc
ljmp
sub
xchg
mov
mov
mov
fcomps
sarb
leave
or
or
std
jnp
mov
iret
inc
and
fwait
out
pop
stos
push
xchg
push
inc
idivb
adc
movsb
dec
out
adc
add
pop
add
fwait
rclb
sbb
add
mov
fcompl
pusha
and
ret
push
push
loop
insl
inc
int3
int3
pop
std
push
cmp
lret
pop
das
mov
xor
xchg
or
jne
ret
into
xchg
scas
stc
out
mov
dec
jge
pop
push
jp
dec
mov
cmp
lods
and
sahf
jmp
pop
ljmp
stos
xchg
loop
cmp
loop
mov
insl
or
shll
out
ret
jmp
jb
cwtl
sub
pop
add
das
cmp
sub
jb
call
cmp
push
mov
inc
in
mov
mov
ss
or
aas
ret
push
outsb
cmpsb
sbbb
icebp
push
adc
sub
add
cmp
icebp
adcl
int3
mov
xchg
fsts
push
xor
dec
loope
mov
push
call
dec
sub
or
repz
pop
aaa
push
sub
adc
in
dec
jmp
in
and
repz
sub
push
jns
jmp
mulb
mov
inc
insl
and
add
jl
repnz
mov
jl
mov
or
imul
sbbl
repz
or
stc
mov
cmp
dec
es
mov
enter
aaa
fwait
sti
pop
push
inc
pop
push
cmp
push
pop
lods
daa
or
sbb
lret
mov
dec
movsb
in
aam
inc
inc
ficoms
fsubs
mov
stc
inc
fs
fadd
lds
pop
and
inc
pop
sbb
mov
lcall
rorl
cmp
push
ja
push
leave
das
cld
adc
sbb
jbe
add
call
in
in
mov
add
iret
push
sbb
clc
aaa
pushf
enter
inc
cmp
xchg
push
lret
adcl
lret
xor
xrelease
jecxz
insb
jmp
add
mov
jp
cmpsl
fisttpll
dec
or
push
xchg
lcall
je
mov
mov
std
insb
sbb
push
jns
hlt
push
outsl
mov
out
stos
xchg
popf
in
add
lret
mov
xchg
stc
jp
mov
pop
pop
and
sahf
adc
jnp
sub
mov
add
ret
push
cmpsb
cmp
mov
daa
cmp
sarl
and
test
lcall
insb
xor
loopne
jnp
in
xor
fwait
imul
ja
fdiv
lods
mov
jle
loopne
cmp
mov
mov
mov
add
jmp
aaa
cltd
fcoms
aam
loopne
xor
and
in
sub
push
ja
pop
inc
aas
dec
dec
dec
dec
imul
dec
mov
loopne
movsb
pop
outsb
push
in
xchg
fucomp
cltd
aad
jo
sub
push
mul
imul
or
ror
adc
iret
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
mov
stos
cs
lret
and
imul
das
xor
test
jmp
or
hlt
leave
dec
and
test
aam
cmpsb
popa
test
stc
sub
push
arpl
push
hlt
icebp
loopne
mov
bound
insl
xchg
fnstsw
flds
lock
xchg
inc
jmp
mov
movsb
clc
inc
mov
call
inc
aaa
xor
loop
cld
insl
lods
repz
dec
mov
xor
int3
and
pushf
jmp
sbb
jl
mov
in
sbb
mov
xchg
es
xor
jns
add
repnz
aad
dec
lods
imul
adc
mov
dec
sbb
cmp
mov
add
cmpsb
mov
cmp
leave
lods
xchg
and
movsb
push
mov
cmc
sarl
mov
dec
pop
cmp
pushf
push
xchg
dec
hlt
push
mov
push
fsubs
pop
lds
scas
push
mov
rclb
mov
loop
test
or
test
cmpsb
in
sarb
mov
aad
aaa
test
idivl
mov
outsb
xor
sbb
pop
inc
adcl
in
pop
fldt
or
fildll
in
das
mov
add
and
and
scas
push
fistpl
testb
dec
insb
sahf
daa
cwtl
call
clc
and
xchg
pop
hlt
adc
mov
xor
mov
dec
dec
inc
enter
pop
jnp
aas
sbb
xchg
popf
or
jo
and
xor
xchg
addr16
hlt
jecxz
pop
mov
inc
adc
xchg
pop
popa
adc
sbb
mov
mov
jge
insl
adc
sbb
xor
lock
leave
stos
testb
xor
push
int
bound
add
jmp
cmpsl
or
inc
cltd
mov
adcl
ret
ror
inc
ljmp
sub
ret
fcompl
adc
mov
dec
dec
add
push
xor
xor
repz
movb
or
dec
mov
hlt
xor
jb
mov
xchg
push
fsubl
cmp
cltd
xor
scas
gs
inc
or
adc
dec
clc
fnstsw
popf
std
mov
inc
or
push
mov
shlb
inc
repnz
mov
adc
xor
roll
mov
and
and
repnz
rclb
cwtl
mov
fidivl
jae
cmc
into
imul
imul
lret
xlat
shl
test
sbb
and
jle
jl
xor
pop
xchg
std
addr16
js
mov
jle
jmp
lret
pushf
xchg
inc
xor
out
push
arpl
push
cmp
test
pop
loop
test
xor
insl
in
out
add
jb
jno
mov
fisubrs
cwtl
ljmp
sbbl
out
sbb
cmp
pop
jbe
push
rcll
jns
aam
lods
and
mov
xchg
jge
shrl
repz
or
cmpsb
shrb
and
or
pushf
shl
sub
mov
int
arpl
mov
popa
cmpb
pop
push
cmpsl
lods
roll
inc
or
adc
popa
imul
jle
lret
xor
fadd
cmpsl
pop
inc
jecxz
dec
je
jle
lret
xor
pop
xchg
inc
cmp
ret
imul
mov
bound
jecxz
nop
test
and
mov
xchg
xorl
sbb
daa
hlt
sbb
cmpsl
faddl
cltd
mov
sbb
repnz
dec
sub
sbb
lods
clc
jbe
inc
test
add
or
sub
xor
xchg
iret
push
inc
adc
cmp
mov
bound
sub
adc
mov
jno
mov
lea
mov
cmp
faddp
adc
outsb
mov
push
aaa
gs
iret
stc
pop
push
decl
push
lret
sub
mov
push
fists
push
stc
cmp
xchg
and
mov
mov
xchg
insl
or
fcoms
test
loop
scas
daa
jle
add
mov
repnz
or
xorb
out
xor
stos
test
adc
rorl
addr16
and
das
add
jl
adc
fdivs
lods
push
mov
dec
repnz
push
jno
or
fmull
into
sub
pop
pop
mov
dec
in
sarl
std
mov
outsl
testl
les
icebp
cwtl
mov
mov
das
push
cmp
ljmp
loop
ret
orl
lahf
and
out
decb
pop
popf
mov
aas
adc
aaa
in
mov
cmc
aad
test
aam
fnsave
sub
stc
clc
das
push
out
jae
xchg
jns
xor
push
mov
fwait
mov
or
gs
loope
jl
sub
mov
cmp
push
scas
mov
jp
gs
fnstenv
mov
negl
inc
int
jnp
mov
call
orb
in
filds
xchg
or
dec
int3
out
sbb
pop
out
sub
test
cmp
clc
lcall
loope
pop
adc
jbe
int
lahf
repz
sub
cmc
xlat
or
and
jnp
enter
jle
int3
pop
push
mov
in
pop
mov
ret
dec
and
test
add
jns
out
mov
lret
mov
jmp
mov
dec
jl
das
lock
push
vcvtsd2si
lods
sbb
xchg
push
jecxz
mov
in
jg
lock
xchg
cmpsl
rcl
cmp
jo
inc
sarl
mov
aaa
adc
aad
test
outsb
in
leave
shlb
jo
cmpl
mov
xchg
or
mov
mov
mov
or
pushl
es
mov
push
shlb
push
mov
jae
jno
in
ds
hlt
inc
dec
arpl
push
sub
xor
loope
aaa
testl
pop
mov
iret
add
pop
cmp
sub
das
ss
inc
xlat
ret
in
xor
shl
dec
and
loopne
xchg
insb
repz
out
loop
or
rclb
xchg
mov
dec
mov
inc
push
jbe
das
lcall
pop
addr16
bound
jge
ror
sub
call
loope,pt
inc
xchg
fsubrs
mov
into
mov
or
cmp
fiaddl
out
mov
xchg
int
add
add
xchg
fstpt
sbb
sbb
xchg
mov
push
mov
inc
mov
or
push
aaa
push
ljmp
mov
jge
mov
enter
xor
in
push
shlb
shrl
fsubrl
out
xchg
cmp
inc
mov
lods
enter
add
movsb
xor
shl
jmp
xlat
mov
iret
or
push
mov
mov
adc
xchg
daa
pop
pop
repnz
aaa
daa
jb
push
jb
mov
aaa
cwtl
dec
test
mov
clc
xchg
ljmp
pop
movsl
ss
adc
insb
jg
adc
daa
push
rclb
out
xchg
xor
mov
sbb
or
push
aaa
xchg
push
ret
das
xchg
dec
adc
mov
enter
adcb
imul
jae
movsb
notb
sbb
sbb
or
lock
ret
jnp
adc
inc
mov
sbb
jno
out
andl
test
mov
mov
mov
inc
push
sub
push
adc
jmp
push
fs
xchg
fsts
add
or
movsb
sub
pop
icebp
adc
movsl
sahf
rcll
cld
mov
or
lcall
daa
jecxz
xchg
sahf
loop
into
adc
out
mov
enter
sti
xchg
divps
jl
dec
js
jns
fs
or
aas
std
test
push
cmp
or
add
jle
push
mov
icebp
push
lret
sbbb
pop
icebp
dec
sti
mov
pushf
mov
aam
out
jno
cmp
mov
inc
ret
xchg
cltd
dec
inc
jp
push
sub
jecxz
out
iret
add
adc
mov
nop
push
or
stos
in
dec
ret
adc
xorl
imul
sub
ret
xorl
fiadds
rcrl
xchg
dec
sbb
test
jae
fsubrl
mov
adc
push
test
ss
dec
inc
xchg
inc
mov
out
jg
out
scas
push
dec
shll
clc
stc
xchg
in
or
add
icebp
adc
sub
mov
lods
js
mov
cmc
xor
stc
notl
cmp
sub
adc
inc
cli
in
dec
sbb
push
and
daa
lds
bnd
cltd
mov
sbb
fwait
jmp
loop
ficomps
add
cmp
sub
sarl
out
push
mov
pop
insb
sub
jne
pop
inc
repz
push
inc
adc
mov
rcrl
mov
test
fisubl
outsl
stos
rolb
add
xchg
pop
fbstp
jo
pop
loop
xchg
or
pop
outsb
cltd
mov
repz
mov
mov
push
add
jae
fcmovnbe
xor
movsb
aad
jecxz
sbb
pop
test
addr16
dec
rorl
jp
jecxz
lods
push
fmulp
xor
subl
mov
dec
fstpt
mov
inc
fimuls
int
ds
xor
or
mov
in
lds
xlat
ret
shll
jbe
mov
ljmp
frstor
mov
fcmovne
lret
in
aad
and
fwait
cmp
adc
inc
lret
inc
ret
cmp
lahf
dec
psubsw
jb
into
subl
mov
pop
cmp
push
jge
add
xchg
push
dec
je
loop
outsl
sahf
mov
shrb
pop
std
imull
ja
or
bound
push
out
negb
js
jnp
aam
and
repnz
jb
cmp
xor
lret
xchg
adc
push
or
xor
repz
inc
mov
adc
arpl
enter
xchg
pop
pop
pushf
mov
jne
int
rclb
aad
enter
sbb
xchg
inc
lods
jecxz
xor
mov
mov
imul
jbe
mov
in
lods
add
push
push
dec
lods
ret
adcb
mov
jl
and
push
xchg
jl
jg
jae
sub
adc
pop
addl
rcrl
xchg
sub
int
fstl
jge
ret
adc
std
xchg
es
test
inc
cmpsl
std
dec
add
mov
pop
imul
out
push
xor
add
test
out
pop
scas
cmp
inc
je
add
sahf
sbb
xor
out
sbb
lahf
bnd
adc
ret
lds
inc
inc
or
pop
inc
or
push
mov
dec
or
sti
cld
add
jbe
add
adc
xor
bound
aam
pop
xor
push
jle
inc
jle
outsb
fstl
pop
scas
inc
or
adc
or
sub
sub
push
push
outsb
out
lret
call
dec
pop
adc
push
push
sbb
cmp
aas
loop
orl
js
sub
xor
jecxz
cmp
into
je
cmp
sbb
dec
iret
sbb
mov
or
xchg
pusha
fs
inc
mov
push
inc
mov
cwtl
xor
imull
push
push
xlat
xor
lret
movsl
and
decb
fstpt
sub
push
clc
mov
ja
jg
jno
jl
rclb
cmp
clc
sbb
or
fisttpll
fdivrs
shll
arpl
incl
cltd
loopne
cmp
push
sbb
mov
mov
imul
xchg
cmp
pusha
jge
mov
mov
sbb
jae
jecxz
idivb
les
sub
in
fmulp
sbb
or
pusha
dec
push
dec
clc
lret
sbb
jae
gs
dec
push
call
bnd
outsl
xchg
jns
fcoml
xchg
mov
and
in
or
and
into
jae
test
mov
cmp
or
xor
sub
ljmp
mov
out
mov
lds
push
popf
dec
adcl
sti
jmp
icebp
or
jecxz
imul
std
test
push
lods
insl
pushf
push
pushf
inc
xchg
xchg
std
fnstenv
aas
add
jne
xor
mov
jns
mov
sub
and
repz
out
pop
ds
add
mov
jg
dec
and
mov
sbb
push
aad
push
ds
aas
inc
sub
enter
test
gs
int
clc
pop
jecxz
lret
mov
repnz
cmp
bound
mov
pand
xor
xchg
xchg
inc
aad
outsl
sbb
lret
loopne
in
or
add
mov
mov
xor
popf
mov
xor
loop
jne
arpl
adc
or
cmc
mov
push
dec
adc
add
mov
mov
pop
mov
scas
movsl
addl
mov
stos
cwtl
das
sub
add
fsubl
leave
pop
out
jecxz
push
ret
sarl
ficompl
push
int
repz
adc
jle
cmpsb
lahf
dec
sbb
sbb
sbb
mov
mov
pop
ret
ja
lods
iret
sbb
xchg
push
in
call
std
sbbb
pop
inc
out
inc
mov
mov
cmpsb
push
sti
sarb
pop
lods
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
adc
xchg
push
mov
adcb
es
jle
ss
sbb
push
pop
lods
and
movsb
fisubl
mov
mov
mov
add
and
pop
pop
jle
xchg
aam
test
jg
inc
inc
mov
push
pop
outsl
lods
icebp
pop
xchg
sub
dec
mov
dec
cmpsl
pop
fisttpl
sahf
js
adc
insl
mov
push
rcr
data16
test
cltd
out
jmp
aad
or
inc
insl
mov
enter
pusha
or
call
sbb
jns
lcall
jbe
sti
adc
imul
adcl
sub
mov
popf
daa
decl
aas
mov
cld
sbb
insl
jle
xchg
and
lret
mov
js
adc
into
hlt
jl
sbb
xor
adc
pop
mov
fnstcw
leave
jbe
pop
jg
adc
ss
in
dec
mov
leave
dec
das
push
mov
or
in
jno
enter
mov
mov
iret
jno
or
push
sbb
dec
add
test
sbb
push
fnstcw
aas
ljmp
stos
popf
imul
stc
mov
ljmp
fmull
mov
js
lea
dec
mov
fisttps
sbb
cmc
fnstcw
pop
jle
xlat
jb
push
dec
dec
sarb
das
mov
mov
sbb
and
cmp
mov
push
stc
mov
fcmovnbe
xchg
adc
and
jne
stos
mov
xor
das
lret
sbb
addl
mul
les
aad
stos
ret
leave
lods
scas
inc
mov
add
sub
fdivl
sbb
cmpsb
and
cld
sbb
push
fsubrl
and
mov
adc
out
enter
inc
int
or
add
mov
mov
and
or
sbb
sub
pushf
jo
jmp
aas
cmp
xor
xor
arpl
fwait
lret
pop
and
lock
add
mov
sti
ljmp
aas
sbb
loopne
xlat
lret
inc
cmp
pop
mov
lds
pop
pop
push
subb
lcall
jo
fwait
icebp
or
xchg
xorb
jbe
cmc
and
les
sbb
ja
jg
fmull
xor
jo
popa
flds
ljmp
sub
and
mov
mov
push
jo
inc
jbe
ja
jns
dec
fnstsw
jno
sbb
loop
test
cmp
mov
shll
xor
movsl
loopne
repz
xchg
dec
loopne
push
stos
std
addr16
shrb
cmp
inc
cwtl
adc
cli
sub
ja
sbb
test
ljmp
push
xor
mov
push
andb
mov
push
add
cmp
xchg
inc
out
fcmovnbe
inc
stc
pushf
mov
dec
xchg
jge
and
xor
dec
inc
push
mov
jecxz
jle
enter
mov
test
sbb
ret
adc
xor
sti
dec
hlt
loope
ret
mov
rorb
mov
mov
ffreep
sahf
inc
mov
stos
jmp
xor
push
popf
and
add
sahf
loopne
sbb
and
or
mov
testb
dec
outsb
cmpsb
push
rclb
out
inc
jno
and
jb
jle
mov
ljmp
lds
cmpsb
ss
sbb
je
es
mov
bound
lret
sub
jae
inc
faddl
dec
aaa
push
xchg
mov
icebp
movaps
lods
push
push
sarl
shl
mov
and
jns
lds
fwait
icebp
jb
sub
push
in
mov
nop
dec
sbb
sti
mov
adc
cmp
sbb
push
jo
push
add
cs
addr16
dec
mov
aaa
outsl
push
lds
out
lret
repz
pop
out
imul
clc
les
mov
out
sbb
addr16
sbb
sar
in
cmc
subb
xorb
test
pusha
mov
pop
add
mov
sub
xchg
sti
dec
mov
sub
mov
push
cmp
pop
stc
jmp
lea
mov
les
xor
sbb
or
fwait
pusha
add
bound
adc
sub
pop
leave
addr16
rcr
jg
aam
adc
bsr
xor
rorb
cltd
cmp
cwtl
addr16
adc
cmc
ret
stos
lds
aad
xor
jmp
bound
cltd
ja
mov
or
push
dec
subb
sub
out
cmp
rcrl
inc
adc
add
push
add
jb
mov
aaa
cmp
pop
out
fcom
fdivrp
sub
and
pop
push
popf
in
jl
dec
sti
stos
pop
jle
fs
bound
mov
cmpsb
das
xor
movsl
mov
stos
loop
push
test
sbb
imul
mov
ljmp
insl
pusha
push
inc
sbbb
pushf
roll
idivw
shl
jno
fs
push
jbe
mov
add
in
mov
and
xor
fs
mov
repnz
jae
mov
in
jae
sub
lods
sbb
jno
mov
addb
hlt
cmp
jnp
in
or
pop
add
fidivs
push
xchg
add
xor
cmp
rcl
aam
jns
icebp
ljmp
mov
sub
imul
in
mov
int3
push
jne
sbb
in
jmp
imul
mov
mov
mov
test
xlat
adc
enter
movsb
sub
sbb
test
or
mov
and
lods
mov
out
push
xor
mov
add
ficomps
sub
or
xchg
xlat
xchg
inc
js
cltd
xchg
inc
cmp
and
xchg
movsb
jp
inc
sti
int3
cld
in
adc
les
lods
aas
jecxz
aam
sbbb
fmull
in
cmpsb
mov
or
aad
nop
mov
sbb
cmp
aad
loop
add
jecxz
mov
stc
push
or
dec
adc
cmpsb
push
out
mov
hlt
cmp
in
fiadds
fs
pop
mov
jecxz
ljmp
mov
mov
shr
data16
xchg
aas
dec
push
stos
push
std
inc
addb
push
xchg
shrb
lret
leave
je
jecxz
lods
or
mull
andl
dec
pop
lods
inc
xlat
lret
test
mov
mov
pop
mov
mov
mov
xor
cmp
orb
xchg
or
sbb
pusha
fisttps
cmp
push
mov
in
mov
jbe
xor
jg
fiaddl
or
int3
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
dec
xchg
lcall
adc
clc
cmp
in
les
xchg
jg
mov
ficomps
pushf
out
in
jge
leave
psraw
push
cmpsb
jp
aam
jno
mov
daa
imul
jno
pop
fcmovne
push
icebp
data16
pushf
jp
cli
hlt
mov
jne
push
cli
int
cmc
mov
mov
ds
adc
shrl
jge
sti
cli
add
aas
frstor
mov
insb
sbb
lret
jecxz
lods
inc
inc
aaa
cmp
shlb
jecxz
loopne
dec
jmp
out
ds
in
stos
cmp
pusha
lahf
je
pop
sub
mov
xchg
sub
push
cmp
or
lds
xor
jne
add
xchg
or
test
xchg
jmp
adc
inc
mov
push
xchg
cmp
jmp
andb
icebp
inc
stos
and
repnz
movsl
pop
push
adc
js
stos
push
pop
xchg
sti
cmp
ja
stos
and
clc
fidivl
xchg
lahf
pusha
sub
mov
je
mov
stos
or
jno
push
cld
pop
in
lcall
into
jp
test
repz
pop
mov
movsl
iret
fidivs
testb
jl
cmpsl
ss
movsl
mov
andb
lock
ja
and
bound
fninit
out
nop
inc
roll
mov
jne
stos
or
inc
je
arpl
jl
jb
insb
cli
cmp
xor
sbb
mov
mov
dec
ret
push
leave
inc
in
xor
fistl
cmpsb
mov
mov
fdivl
scas
or
insb
fmul
xor
fcoms
inc
cmc
fs
sub
repnz
mov
cmp
adc
adc
sub
stc
mov
mov
sarb
xchg
mov
sub
mov
and
pop
fs
das
adc
jb
cmp
xchg
movsl
insb
mov
inc
fistps
popf
cmp
mov
push
mov
sbb
push
daa
jno
fnstenv
add
adc
lret
jl
subl
inc
aam
notl
and
dec
add
and
cmp
xchg
add
or
cld
pop
fwait
xor
ljmpw
std
mov
ss
nop
jne
in
jnp
gs
push
sbb
adc
jnp
pop
mov
test
popa
mov
sub
loopne
push
mov
pop
popf
fucom
push
test
jns
cmc
sbb
pop
stos
arpl
stos
ds
sbb
mov
outsb
sbb
and
push
popf
mov
jg
jmp
cld
call
lcall
scas
enter
xchg
bound
jge
hlt
jp
xchg
cmp
inc
jno
mov
shrb
mov
xchg
movsb
sti
pushf
or
cmp
and
stos
aaa
aam
sbb
xchg
mov
cmp
addr16
lahf
cli
add
mov
xchg
xchg
rclb
jmp
mov
orb
cld
test
sub
testl
les
adc
push
mov
cwtl
push
xchg
nop
push
xlat
sub
mov
ficoml
dec
or
mov
push
leave
adc
add
xchg
cmp
test
mov
hlt
test
mov
push
test
lods
test
xchg
cmp
xchg
mov
mov
lock
cmpsb
leave
jle,pt
jge
dec
lods
enter
jle
pop
xchg
or
lret
imul
pop
cmp
sub
xor
pop
dec
and
icebp
popf
jmp
mov
inc
mov
lea
stc
sub
insb
loop
mov
mov
int3
pushf
imul
adc
mov
cmp
sub
sub
mov
mov
shrb
in
out
enter
lods
mov
add
xchg
out
repnz
ror
xchg
push
imul
pusha
enter
add
inc
pushf
jle
adc
sarb
stos
push
pop
push
cmp
or
sbb
mov
out
fsqrt
dec
popf
and
add
and
jp
insl
bound
jmp
sub
movsb
repnz
insl
inc
loopne
xor
sti
xchg
imul
incb
sub
cmpl
mov
mull
sti
jle
push
jno
mov
outsb
hlt
popf
cmp
pop
out
lcall
leave
aam
push
push
xor
add
test
lahf
loopne
adc
outsl
loope
jp
jb
js
pop
pop
ficomps
mov
fcom
pop
addb
push
js
jecxz
cmp
gs
js
das
shrb
mov
pop
stos
cwtl
add
out
popa
pop
mov
loopne
inc
dec
xor
inc
icebp
mov
pop
rorl
mov
push
inc
shrb
xchg
xor
shll
fistl
movl
xor
in
out
sti
push
inc
push
call
ljmp
iret
daa
dec
ljmp
mov
dec
pop
cmp
pop
shll
xlat
xchg
push
mov
fs
in
cmp
in
sbb
into
jg
mov
dec
jne
subl
test
out
dec
imul
dec
and
push
mov
xlat
mov
xor
push
loopne
data16
or
in
pop
and
inc
cmp
xchg
movsl
sub
stos
mov
insl
sub
rep
cmpsb
fsub
push
jnp
jae
xchg
xor
clc
mov
pusha
cmpsl
jb
nop
mov
shll
ficoms
fadds
cld
push
dec
xor
ret
sbb
dec
cli
movsl
and
mov
lret
ror
nop
std
aas
mov
jl
pop
leave
pcmpeqw
aam
sub
out
sahf
or
in
shlb
mov
mov
rcr
inc
inc
pushf
cmpsb
mov
aaa
jle
stos
and
xchg
push
mov
mov
and
lret
sbb
aam
cmp
ljmp
pop
sbb
push
jp
ss
adc
shrl
pop
ds
adc
shll
in
movsl
gs
inc
add
ja
cld
shlb
negb
into
movsb
or
mov
sub
fnstsw
xor
shll
jo
mov
scas
xchg
jmp
jmp
imul
cmp
mov
shl
inc
shrb
out
dec
cmc
pop
cmp
iret
mov
icebp
dec
sahf
popl
roll
mov
imul
in
shll
xchg
in
movsl
xchg
fidivrl
mov
jns
xchg
jle
stc
mov
sti
icebp
cmpsl
xchg
ret
xchg
lret
xor
jl
ds
dec
inc
and
mov
aad
xchg
pop
push
daa
inc
dec
jbe
mov
int3
dec
clc
cld
inc
fistpll
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
enter
or
ja
out
pop
jbe
mov
adc
je
inc
fmuls
repz
flds
ds
out
stos
fidivrl
ljmp
xor
arpl
es
out
xor
xor
rcl
fisubrl
shrl
and
out
sarl
mov
stos
out
and
dec
or
rolb
push
aas
mov
adc
xor
mov
or
pop
ja
pop
pop
lds
pop
add
frstor
mov
push
push
lds
mov
jmp
inc
nop
jl
or
mov
jmp
push
push
inc
mov
mov
pop
aas
adcl
mov
ss
inc
enter
ret
and
lret
gs
das
in
cmp
pop
adc
repz
xchg
cmpsb
clc
push
jne
mov
stos
sub
faddl
repz
in
in
sub
std
jl
jg
int
cwtl
xchg
lock
dec
test
gs
push
jecxz
dec
dec
enter
test
pop
push
loop
adc
or
xchg
leave
jle
add
cmpsb
movsl
mov
lret
jo
je
je
leave
lods
xchg
arpl
jge
test
cmpsl
mov
push
push
push
pop
sub
lds
idivb
jae
cs
mov
push
dec
pop
insb
lods
pop
test
add
rcrb
adc
dec
test
sub
xor
in
mov
inc
lcall
cmp
movsl
add
inc
pop
gs
into
and
mov
lret
std
gs
push
loopne
xchg
jns
je
push
push
mov
lret
insb
add
push
inc
or
xor
pop
lret
sub
mov
mov
cld
add
xchg
das
cmp
in
test
jnp
cmp
into
into
inc
jne
lahf
fcomip
sbb
or
push
sbb
popa
pop
int
xor
rclb
fisubl
lahf
in
shl
lret
adc
push
pop
pusha
pop
setg
jle
decl
shlb
jne
ret
jecxz,pt
cmp
push
clc
or
rcll
loopne
aaa
inc
popf
and
pop
xor
incl
xor
xlat
adc
or
lret
pop
shrb
daa
sub
push
lcall
icebp
mov
lods
stc
xchg
push
sub
call
sbb
inc
add
dec
stos
movsl
sub
test
add
sbb
cmp
popf
sbb
dec
add
sub
cwtl
and
popa
sbb
scas
add
sub
arpl
and
es
xlat
fadd
inc
scas
fidivs
hlt
jmp
in
and
add
mov
ret
adc
push
inc
fwait
jnp
test
cmp
int3
ret
rcrl
fs
icebp
adc
push
shlb
or
in
imul
in
jb
push
out
dec
lcall
int3
out
scas
cs
fsubs
ficomps
dec
in
in
and
call
nop
lcall
and
data16
and
out
loop
add
mov
iret
mov
push
cmc
sbb
test
lods
add
andb
xor
mov
inc
xchg
push
and
mov
andb
sbb
mov
xor
negb
clc
mov
pusha
jbe
rcll
popf
in
outsl
negl
sbb
mov
movsb
pop
jle
test
stc
adcl
movsl
fnsave
repz
test
div
push
mov
in
pusha
test
jbe
mov
mov
pushf
adcl
push
ret
sub
scas
push
push
sbb
or
in
mov
cmp
cmp
sbb
dec
adc
fbstp
movsb
inc
mov
pop
js
dec
subl
push
mov
pop
adc
int3
mov
pmulhuw
pop
mov
pop
xchg
ret
mov
scas
sub
out
push
or
mov
xchg
adc
mov
jb
push
or
jbe
enter
repz
outsb
or
gs
movsl
fsubl
pop
fcoml
xor
fstl
mov
arpl
jl
adc
mov
jmp
pop
pop
xor
sti
sbb
leave
les
in
rol
and
mov
push
stos
xor
ds
fiaddl
xlat
cmp
pop
pushl
scas
fcomi
scas
xor
lods
jmp
pop
mov
xchg
in
xlat
adc
push
fucomp
mov
inc
mov
cmp
push
pop
pop
cs
fildl
mov
xchg
push
sub
xor
jb
pusha
jmp
lret
jmp
and
pushw
insb
inc
xor
out
loop
xchg
lret
sbb
out
repz
xor
sbb
adc
push
ret
pop
cmp
pop
push
fwait
add
iret
jp
push
out
dec
adc
push
sbb
ficoml
dec
fs
lret
sub
and
lcall
sub
ja
and
or
test
fmuls
hlt
dec
rol
mov
std
addr16
mov
ss
fdivs
mov
adc
nop
in
push
bound
dec
inc
outsb
sqrtps
mov
push
cmp
pop
mov
cmp
xchg
ljmp
into
and
jecxz
pop
cld
outsb
cmpsl
insl
push
and
pop
and
jmp
jmp
aas
xor
test
cli
push
mov
enter
arpl
or
adc
xor
cmc
add
mov
lret
push
popf
jbe
adc
imul
xor
adc
pop
mov
jns
push
idivb
ret
jecxz
aaa
push
daa
sbb
mov
mov
fwait
cmp
dec
frstor
and
jl
imul
push
cwtl
mov
cmpsb
out
push
and
les
fs
lahf
aas
mov
cmpsl
inc
lret
or
mov
fidivl
aad
in
pop
mov
iret
rcrl
xchg
rcrb
xor
cmova
data16
and
jno
mov
xor
ret
movsb
and
dec
mov
mov
andl
inc
mov
jne
stos
mov
jbe
add
andl
movsb
sti
pop
xchg
mov
add
sbbl
test
rcrb
sub
adc
mov
inc
insb
jmp
aad
imul
xchg
rep
sub
jb
jbe
mov
mov
mov
js
mov
fs
inc
or
out
xchg
outsl
xlat
dec
cmp
pop
sbb
jle
inc
inc
jge
int
pop
arpl
sub
repz
xchg
mov
mov
imul
into
mov
fcompl
aas
push
cwtl
add
call
jmp
mov
jns
js
inc
sbb
mov
imull
add
add
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
and
cmp
pmulhrw
stos
mov
imul
outsb
pop
jecxz
shl
push
in
push
xor
movb
jmp
rcll
push
jl
outsb
insb
out
mov
sahf
push
pushf
aaa
adc
cmc
jecxz
popf
or
push
push
scas
inc
pop
inc
push
add
lcall
shrb
xlat
adc
xchg
add
cltd
xchg
xchg
std
cmp
xchg
mov
icebp
insb
clc
mov
sbb
xchg
xchg
mov
xchg
in
clc
mov
sahf
mov
ret
xchg
mov
aam
jbe
xchg
push
jecxz
sbb
pop
mov
pop
mov
test
inc
sub
pushf
jo
mov
insl
or
xchg
pop
scas
xorb
xor
jp
and
loop
fwait
sahf
daa
pop
call
pop
jp
jb
and
in
push
push
decl
idivl
cmp
int
ret
fists
popf
inc
pop
or
mov
pop
rcr
dec
sub
aaa
dec
insb
cmpsb
clc
bound
xlat
je
mov
adc
lods
mov
add
and
mov
cmp
jbe
mov
push
out
out
xor
cmpsb
dec
fbld
and
sbbl
aaa
or
mov
pushf
lods
or
in
sub
inc
sub
xor
sub
cmpsb
movsl
push
js
jg
xchg
inc
into
mov
pushf
jle
inc
sti
cmp
cmp
mov
mov
notl
in
lock
cmp
in
loope
jge,pn
fnstsw
mov
ja
adc
pop
lds
sub
xchg
and
cltd
push
pop
xor
sti
fisttpll
dec
fwait
dec
jbe
aas
in
or
add
clc
mov
not
out
xor
lret
push
insb
rcl
adcl
outsl
mov
inc
or
push
jno
arpl
fdivr
dec
rcrb
xor
jmp
into
pop
inc
out
or
test
xor
loop
mov
or
fcoms
cmpsl
pop
ljmp
ds
xchg
inc
fiaddl
scas
out
xchg
pop
fisubs
mov
fldt
or
sbb
outsl
jg
pop
cli
jmp
mov
stc
ja
test
mov
or
ss
clc
mov
mov
aaa
xor
sub
hlt
cmp
mov
jo
push
andb
icebp
mov
shrl
scas
icebp
sub
fdivrl
cwtl
push
add
js
nop
aas
enter
dec
xchg
addr16
or
repnz
lret
mov
jno
movsb
in
inc
sub
loopne
montmul
cmpsb
mov
pop
dec
inc
fidivl
jnp
cmp
iret
shl
stos
or
stos
add
and
lods
outsb
mov
cld
adc
pop
sub
push
sbb
jb
repz
mov
mov
and
push
and
pop
clc
pop
sub
push
sub
mov
cmp
adc
pop
fwait
sbb
sbb
lds
xchg
mov
inc
push
jmp
adcb
pop
rcll
and
ds
repz
orl
pop
or
lds
and
pop
mov
mov
ss
sbb
xor
into
imul
sbb
jnp
push
push
sub
adc
sub
sbb
inc
push
outsb
mov
stc
into
lock
inc
orl
fsubrs
inc
cmpsb
les
mov
adc
jecxz
cmpsl
mov
inc
push
inc
scas
fiadds
int3
adc
insb
test
mov
es
adcb
xchg
or
inc
out
subl
std
xor
mull
or
nop
sti
dec
mov
jl
fs
mov
jns
inc
or
add
lds
dec
xchg
mov
add
sbb
outsl
push
shll
inc
sbb
mov
xchg
or
pop
sub
dec
mov
loope
popa
push
repz
aad
mulb
test
arpl
jecxz
mov
mov
lock
inc
pusha
out
cmp
in
fdivrl
or
ljmp
addb
sarb
jbe
xor
mov
push
cli
lds
arpl
xor
xchg
ret
sbb
sub
or
dec
loope
inc
mov
add
adc
int
lcall
in
fsubl
cmp
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
