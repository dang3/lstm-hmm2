push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
xorl
pop
addl
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
lcall
cltd
inc
or
inc
mov
outsb
rcll
mov
xchg
push
hlt
mov
cld
and
fxam
mov
sbb
inc
adc
popa
fdivr
pop
pop
ret
adc
push
inc
adc
out
xor
dec
push
push
add
pop
stos
add
lods
xor
add
ja
clc
xor
pop
movsb
das
sbb
and
push
test
les
das
dec
mov
lret
mov
and
add
sbb
push
pop
scas
lret
jnp
ja
in
lds
pop
insl
lret
insb
decl
ret
lcall
sub
inc
arpl
push
or
repz
mov
loope
neg
mov
or
jmp
pop
loope
push
test
faddl
cmpsl
rsqrtps
daa
pop
imul
xchg
jecxz
cmp
sbbb
jnp
fldcw
cmp
test
lods
outsb
xor
push
js
mov
ljmp
mov
pop
dec
and
shl
push
loopne
cld
int
fmuls
cld
sbb
pop
rcll
nop
enter
int3
adc
std
clc
stc
out
jmp
mov
adc
jbe
push
push
cld
and
loopne
stos
dec
inc
enter
imul
shll
sti
aas
xor
ss
cltd
outsl
xlat
or
pushf
xchg
jo
cmp
jnp
ljmp
and
je
fists
sub
cmp
arpl
stos
test
xchg
xchg
adc
loop
pop
xor
lea
icebp
test
cwtl
loop
insb
cmpb
push
xor
in
pop
sub
mov
roll
push
adc
sub
bound
lret
sub
pop
pop
mov
sub
lods
jns
mov
mov
les
fists
add
push
adc
jmp
cmp
push
add
loope
les
dec
gs
data16
sub
and
adc
mov
in
jae
add
andl
mov
mov
jecxz
lea
lcall
ret
mov
js
add
and
mov
add
dec
mov
bound
bound
fwait
and
cmp
test
cmp
clc
aam
sbb
push
js
test
std
or
sbb
fsub
je
lds
movsb
mov
aas
cmp
cmp
cmpb
mov
cmp
mov
arpl
push
loop
push
add
sbb
pop
adc
cmp
cmp
adc
pop
mov
fistl
sbb
mov
in
icebp
rorl
sub
ljmp
cmp
and
dec
iret
iret
or
cltd
subb
sub
movsl
cmp
imul
outsb
insb
call
dec
and
bound
dec
cmc
xlat
rcrl
enter
sub
xchg
lret
enter
or
sbb
ljmp
and
test
mov
stos
clc
mov
sub
clc
clc
push
lret
jmp
adc
fwait
adc
pushf
ds
mov
daa
icebp
push
in
xchg
scas
cwtl
divb
iret
mov
pushf
cmp
jl
scas
jns
sbb
lods
pmaddwd
fstpl
cwtl
rorb
push
call
jl
sbb
lods
mov
inc
dec
cmp
rcll
push
sub
and
orl
push
xchg
or
jecxz
lret
and
out
sub
dec
inc
loopne
xchg
lods
inc
movsb
mov
dec
popf
jo
imul
jb
mov
loopne
or
push
inc
add
ljmp
cmp
cmpsl
stos
out
out
lods
push
dec
fwait
add
iret
in
adc
pop
xor
and
les
sub
fisttpll
out
adc
cmp
xchg
out
sub
arpl
mov
dec
push
mov
jecxz
call
mov
subl
cmpsl
cli
sub
rcll
repz
pop
ret
loope
xor
or
mov
jno,pn
mov
add
mov
loope
sub
daa
insl
outsl
mov
adc
fwait
sub
push
mov
scas
xchg
test
mov
inc
fmull
push
movsb
add
lahf
push
int3
daa
hlt
addr16
xor
ret
clc
and
add
sub
add
mov
test
jl
mov
loopne
sbb
sar
inc
in
outsl
jb
mov
jp
xchg
insl
push
call
mov
loopne
addr16
fimuls
xor
iret
mov
push
repz
dec
sbb
imul
stos
loop
jge
xchg
mov
xchg
cld
cmp
xor
push
lcall
adc
enter
push
mov
loope
add
es
inc
adc
jge
xor
mov
xchg
jae
aad
scas
shl
pusha
fldt
testl
or
sbb
dec
call
imul
sar
fadds
and
sbb
shlb
jge
pop
subl
cmp
mov
dec
mov
repz
sub
cmpsl
add
mov
mov
or
push
loopne
lret
sub
in
push
outsb
enter
ljmp
add
pop
imul
sbb
adc
clc
roll
and
adc
fsubs
fildl
stos
inc
sbb
cmp
jbe
mov
jbe
test
push
ss
jnp
mov
inc
sti
scas
ror
inc
repnz
aas
xor
in
jg
xor
push
pop
push
sub
add
or
in
shl
inc
mov
iret
dec
fistl
push
sbb
aaa
push
cmpsb
mov
push
sahf
sub
cmc
push
cmp
stc
push
outsl
mov
sti
mov
in
pop
dec
addr16
push
std
lcall
sbb
cmp
mov
daa
dec
cltd
das
push
push
ficoms
sbb
mov
pop
xchg
das
and
mov
xor
sbb
jle
dec
sbb
movsl
xchg
inc
in
test
pop
test
xlat
jp
rolb
push
or
lahf
or
jl
in
fldt
sarl
pop
sub
jecxz
idivb
scas
out
inc
test
xor
dec
fstl
int3
push
loopne
imul
jne
idiv
loop
xor
pop
adc
es
pusha
fscale
jg
movsb
cwtl
cmp
lods
push
stc
adc
lret
mov
std
dec
shrl
mov
dec
sarl
cmc
popa
out
test
and
sbb
loope
cmp
mov
jle
imul
and
and
insl
pusha
imul
adc
fnstsw
dec
movsb
test
cmp
pop
mov
push
mov
clc
adc
xor
hlt
repz
addl
cmp
dec
adc
jno
and
push
push
dec
or
or
dec
repnz
inc
nop
mov
adc
scas
dec
rorl
test
icebp
aad
dec
sbb
int
add
arpl
push
adc
cmpsl
cmpsl
xchg
imul
inc
stos
pop
push
out
mov
add
dec
sub
fcmove
and
data16
mov
mov
add
mov
test
pop
cmp
test
mov
pop
fwait
xchg
dec
cmp
dec
jge
aad
popa
inc
add
push
add
xchg
test
push
mov
scas
sahf
jecxz
mov
mov
fcmovu
sub
mov
cmpb
cmp
mov
jns
in
mov
fldcw
sub
mov
adc
inc
add
pop
ret
ds
add
dec
jbe
and
and
or
in
out
dec
sbb
jg
xchg
push
xchg
in
hlt
test
mov
cmc
popa
aam
test
rcrb
and
lret
stc
dec
mov
fstps
pop
ja
scas
arpl
add
lods
lds
sarb
hlt
iret
mov
sub
cmp
daa
ss
push
xlat
mov
lods
add
push
dec
jp
cmpsl
inc
jecxz
cmpsl
out
jecxz
mov
jmp
pop
push
jl
cs
arpl
sbb
sbb
and
or
lods
push
sbb
or
or
mov
loope
mov
sbb
dec
push
out
push
enter
mov
add
jmp
fisttpl
cmp
inc
fildl
int3
sub
fwait
pushf
ljmp
lock
imul
xor
xchg
add
test
sahf
fistps
nop
mov
pop
sbb
fdivr
std
insb
mov
data16
movsb
jne
pop
dec
out
fcompl
gs
add
adc
movsb
mov
adc
mov
rcll
dec
and
setle
fldenv
xor
cmp
pop
dec
cmp
sarl
pop
ds
sbb
push
ja
mov
sbb
mov
aas
cld
rolb
mov
fwait
dec
cwtl
mov
xor
loope
and
imul
dec
insb
jmp
sbb
xchg
scas
xchg
xchg
pop
and
and
lods
into
or
and
sub
add
sub
cmp
cmc
push
or
out
pop
mov
pop
clc
int
loope
pop
repz
shll
xorl
sub
inc
rcll
enter
stos
pop
xchg
xor
test
test
xchg
pop
je
add
push
dec
push
jb
push
push
pop
cmp
mov
xchg
insb
lea
dec
add
nop
and
out
adc
ljmp
mov
push
mov
cmpsl
mov
out
movsb
sub
inc
loope
jbe
add
xlat
inc
daa
jnp
test
jge
cltd
sbb
jl
movsl
mov
inc
inc
fdivs
aad
rol
lret
aad
stos
push
pop
inc
pusha
hlt
xorl
in
push
leave
dec
pop
jnp
lahf
add
cmp
pop
pop
cmp
inc
push
or
jbe
adc
cmp
lea
jae
scas
pop
adc
iret
add
js
jg
adc
in
adc
ret
fisubl
mov
repnz
pop
shrl
adc
daa
testl
fdivr
dec
push
dec
scas
fbld
jnp
mov
filds
popf
mov
jecxz
add
in
scas
lds
xchg
pop
mov
hlt
rol
mov
pushf
xor
mov
daa
sub
inc
push
mov
lea
lods
sub
div
sbb
sub
in
lods
sbb
mov
in
std
mov
mov
out
mov
sub
shlb
psubq
xchg
xchg
adc
addr16
push
and
je
imul
and
mov
out
pop
enter
or
shll
jecxz
xchg
idivb
sbb
adc
or
mov
inc
and
lahf
movsl
repz
jo
pop
jmp
fdivs
lcall
adc
jg
mov
pushf
mov
lods
mov
lock
fsubl
lods
jb
out
das
push
lock
and
icebp
hlt
mov
test
mov
mov
mov
cmp
adc
call
dec
insb
mov
dec
addr16
repz
sahf
push
push
loop
xor
or
arpl
scas
mov
xor
push
ret
sti
sbb
xor
adc
pop
fistl
aas
fbld
push
inc
adc
jg
mov
add
push
cmp
adcl
gs
inc
and
jmp
cmp
sbb
cld
mov
adc
pop
jnp
mov
fsts
inc
adc
xchg
loopne
or
cmp
or
pop
sti
mov
ror
or
mov
xor
mov
es
push
xor
std
or
mov
ret
repz
arpl
addb
out
push
imul
movsl
dec
inc
gs
mov
dec
xchg
lret
and
and
jecxz
push
movsl
or
lods
lea
call
dec
mov
add
xchg
ds
enter
rorb
rcll
int
jns
and
lds
andb
add
ja
pop
adcl
mov
pop
mov
fmuls
je
xor
jmp
xchg
add
hlt
jmp
js
dec
inc
loopne
lret
xor
mov
ret
in
push
adc
shrl
push
inc
sub
sub
lcall
push
pop
push
mov
mov
ds
mov
daa
jecxz
je
fmulp
jo
or
int
or
adc
sbb
cmp
push
pop
iret
aam
scas
sti
movsl
aaa
int3
lret
or
push
into
arpl
adc
popa
test
insl
sahf
sbb
xlat
outsl
pop
shr
mov
add
das
add
pop
scas
popf
adc
pop
in
jne
inc
mov
leave
rcrb
xlat
jnp
icebp
adc
sub
and
adc
into
push
pop
dec
cltd
cmp
fs
sbb
push
xchg
insl
lods
jl
out
xor
xlat
das
sbb
mov
test
pop
adcb
fstl
lods
push
inc
gs
adc
pop
add
jno
test
push
into
aaa
jnp
loope
push
xchg
push
cmpl
movsb
or
bnd
jno
test
mov
ret
fisubrs
dec
dec
outsb
fs
pop
mov
out
inc
jl
jge
adc
mov
push
xchg
aas
dec
cmc
cmpsl
xchg
je
xchg
insb
sub
xchg
jle
jle
cmp
cmp
mov
mov
jl
movsl
jae
add
mov
inc
and
xchg
out
outsl
ret
loope
or
int3
push
cwtl
or
insl
fnclex
ret
jge
push
outsb
fldt
mov
adc
dec
in
cmpsb
push
mov
in
mov
movb
jbe
shll
dec
inc
das
lret
imul
loopne
notb
pushf
iret
push
sar
cmpsb
adc
xor
mov
sahf
jno
xor
out
and
rolb
mov
pop
cmp
inc
add
push
xlat
cwtl
test
inc
popf
lods
clc
imul
xor
lret
xchg
push
aas
jecxz
xor
arpl
aad
loop
fldl
ficoml
adc
movsl
hlt
mov
ljmp
mov
adc
dec
mov
add
orl
pop
out
out
or
cmp
sbb
cmc
xlat
fucomip
lds
jnp
outsb
dec
add
shll
shll
jle
xlat
pop
and
push
andb
mov
push
jno
and
mov
cmp
aaa
cmpsl
in
mov
cmp
test
hlt
sub
lods
es
subb
rorb
sub
or
push
nop
add
out
xchg
scas
jge
jbe
mov
dec
movsb
push
out
or
ret
scas
sbbb
xlat
mov
cltd
movsl
les
mov
and
mov
xchg
lret
addr16
inc
in
clc
inc
jmp
std
pop
xchg
fildll
add
repnz
mov
cmp
push
push
xchg
stos
stos
adc
xchg
jecxz
dec
sbb
adc
mov
sbb
xorb
andb
in
inc
addr16
jo
mov
fstps
pop
popa
insb
mov
lods
cmpsb
xchg
stos
jl
mov
imul
loopne
lock
push
imul
xchg
pop
pop
xchg
and
shll
cmp
lea
hlt
movsb
test
dec
ficompl
nop
push
movsb
stos
loope
push
pop
pop
push
cmp
aam
clc
jle
sub
movsl
mov
xchg
mov
inc
push
shrl
xchg
pusha
mov
pop
mov
mov
mov
and
cmp
fsubrl
cli
lret
jbe
pop
mov
jmp
push
cmp
or
sub
jge
and
das
bound
pop
rcll
imul
lods
popa
xor
sbb
xchg
inc
inc
xor
sub
outsb
lea
fidivl
sbb
adc
outsb
mov
jmp
mov
mov
and
adc
xchg
mov
arpl
lock
lret
adc
popf
ret
and
mov
insb
filds
xlat
sub
pusha
cmp
repnz
ret
movsl
add
jbe
fstp
loop
sbb
sub
or
xchg
cli
out
push
xchg
xchg
outsl
dec
or
test
jns
or
or
add
and
xchg
js
mov
or
or
arpl
fnstenv
xchg
repnz
and
sbb
mov
sub
jle
or
inc
in
pop
pushf
clc
sub
dec
jnp
negb
xchg
xor
pop
push
shll
inc
cmp
mov
adc
fsts
push
flds
dec
mov
loop
xchg
in
cmp
push
insb
loopne
lock
push
ljmp
ret
and
mov
inc
inc
aas
pop
into
sub
xchg
aad
cmp
mov
in
adc
mov
adc
subb
cmp
arpl
cmc
lds
or
jb
sahf
loop
mov
in
into
xor
and
sub
sti
jecxz
repnz
mov
inc
out
jnp
leave
nop
lcall
ljmp
popf
pop
mov
inc
into
mov
push
push
dec
and
andl
lods
repz
dec
inc
xor
arpl
arpl
dec
push
mov
and
lods
sbb
jmp
lods
xchg
in
inc
nop
pushl
xor
rol
mov
ret
loope
orl
inc
cmpl
pop
movb
mov
adc
jbe
sar
insl
inc
ret
dec
in
rolb
jge
mov
mov
and
pushf
arpl
repz
imul
push
aad
and
push
inc
mov
push
mov
pop
xchg
test
sbb
sbb
es
insl
stos
cs
adc
fbstp
push
in
lahf
cs
loopne
jg
loope
test
xchg
pop
lods
aam
fwait
and
add
mov
mov
inc
sbb
mov
xor
mov
jnp
call
xchg
cmp
repz
xchg
lret
fcomi
out
xchg
and
xlat
cwtl
cmp
adc
push
cmp
movsb
jl
adc
mov
add
ss
push
jp
arpl
sub
lods
ss
ds
xlat
xor
ljmp
repz
add
jnp
call
adc
jg
out
mov
pop
test
add
fsubl
test
es
ljmp
and
ficoml
pushf
into
sbb
cmp
mov
sbbb
pop
stos
mov
xorl
mov
test
jge
fsts
add
mov
jl
pop
mov
sub
out
inc
xchg
or
fwait
push
push
jmp
lods
push
sahf
xlat
and
gs
dec
ret
imul
sub
aaa
movsl
or
scas
inc
pop
pop
movsb
push
nop
push
mov
fdivr
xchg
idivb
stos
mov
mov
mov
daa
pop
inc
enter
movsl
add
or
mov
sahf
jl
lea
fimuls
xor
lea
out
hlt
mov
lods
test
jecxz
popf
loope
ljmp
jb
mov
push
xchg
cmpsb
jae
mov
dec
lea
pop
pop
and
mov
cmpsb
mov
ret
pop
aam
jge
movsl
xor
loope
mov
loope
mov
aad
lods
je
fistpl
hlt
rclb
into
test
sar
push
pusha
add
loope
imul
and
imulb
mov
in
lods
data16
pop
adc
lret
bound
std
movl
stos
in
mov
dec
aad
dec
in
sbb
jl
jecxz
scas
mov
inc
cli
jecxz
jecxz
sbb
popa
movsb
rcrb
loop
mov
leave
add
into
inc
push
jnp
push
int
jo
jge
sub
or
fcmove
fwait
jbe
lret
pop
push
xor
xchg
jne
mov
dec
and
clc
mov
mov
int3
push
and
pushf
ja
cli
mov
cwtl
and
dec
mov
test
test
mov
xor
scas
dec
or
or
inc
jne
call
mov
rolb
pop
adc
jmp
mov
sahf
sub
xor
hlt
test
inc
jns
xchg
xchg
mov
mov
loop
xchg
xor
and
pop
insl
lret
or
out
push
push
jo
xlat
icebp
push
js
push
daa
gs
dec
ja
leave
jp
mov
pop
cli
jae
mov
mov
sbb
icebp
std
shll
cld
hlt
fiaddl
adc
into
jnp
pop
xchg
mov
mov
jne
cmp
mov
adc
mov
adc
daa
cs
lock
and
arpl
xchg
jo
mov
stc
jmp
push
xor
pop
aaa
adc
sub
test
and
mov
add
minps
inc
daa
and
stc
enter
jno
in
push
and
jo
pop
inc
lea
movsl
cmp
aas
push
push
movsl
mov
inc
adc
or
idivl
add
dec
in
mov
pop
in
sarb
daa
push
mov
mov
or
shlb
push
mov
push
pop
mov
dec
push
pusha
jb
xor
mov
out
or
mov
fcmovb
mov
mov
inc
leave
cmp
inc
push
jns
jp
dec
xlat
sidtl
repnz
jmp
add
jle
popa
ficompl
enter
jns
xchg
pop
mov
out
sub
xchg
push
inc
leave
pop
mov
inc
mov
notb
mov
fsub
je
xlat
mov
sbb
or
pop
lea
test
sti
push
cwtl
ss
and
push
sbb
cli
in
add
pop
jl
ret
cld
stc
cmp
es
mov
outsb
in
cld
xchg
insl
mov
sbbb
fldcw
mov
dec
or
imul
inc
sbb
push
popa
sub
mov
add
shlb
pop
flds
mov
lcall
xchg
push
jmp
add
adc
insb
pop
lahf
jbe
decb
insl
pop
mov
outsl
dec
jns
cmp
or
or
adc
push
dec
ds
int3
mov
mov
jnp
and
loope
dec
enter
jbe
outsb
out
push
lret
bts
mov
dec
pop
stos
jge
inc
mov
inc
lret
lahf
fisubs
ja
add
test
pop
popf
sbbl
pop
sbb
and
pop
daa
scas
pop
sub
and
inc
adc
pop
pusha
pop
js
inc
popa
sbb
pop
xchg
sbb
pushf
fldt
or
cmp
adc
mov
xor
mov
mov
or
or
in
mov
push
out
pushf
and
rol
out
data16
jp
sub
or
push
xor
mov
fdivrl
test
call
mov
or
mov
xor
aam
add
fwait
xchg
out
sahf
sbb
inc
fstpl
and
mov
into
hlt
ret
push
std
pop
jo
push
and
inc
pop
cmpsb
sbb
adc
fcoms
clc
dec
or
outsb
jo
add
adc
pushl
stos
inc
xchg
fisubrl
push
ret
cli
mov
add
enter
hlt
dec
jmp
and
dec
pop
xor
mov
fldcw
es
or
movl
cmpsl
add
pop
inc
in
data16
cmp
pop
mov
out
or
inc
add
xchg
out
xchg
sub
push
jl
pop
iret
cmp
xchg
push
jmp
or
push
adc
test
imul
setno
ds
shrb
and
or
pop
sub
xchg
xchg
inc
push
aam
lods
lods
push
aas
sti
mov
add
filds
ret
testb
pop
push
or
arpl
aaa
fmul
lahf
or
loope
or
insb
cmpsb
js
mov
jmp
mov
ljmp
adc
push
andps
and
jns
jmp
popf
xchg
xlat
mov
jno
in
pop
fnstenv
fisttps
ret
jno
lret
shrb
stc
jb
push
orb
or
mov
mov
mov
out
mov
mov
inc
adc
sub
lcall
aam
daa
sahf
mov
xor
cmp
xchg
or
add
in
push
scas
insb
add
into
cmpsb
sub
and
out
jge
xor
jl
icebp
shrl
jle
xorl
cld
xadd
xor
int
push
sbbb
repz
adc
movsl
pop
fisubl
mov
jge
outsl
fistl
popf
add
dec
jp
punpcklbw
or
adc
xor
dec
dec
hlt
iret
je
or
insl
lods
repz
jo
rcr
and
test
mov
xchg
pop
pushf
mov
dec
pusha
push
xorb
inc
js
adc
mov
outsb
mov
xchg
push
in
outsl
mov
ss
push
jecxz
push
test
ret
adc
repnz
cld
aad
add
inc
stos
jnp,pn
and
mov
add
jb
test
jg
sub
shlb
repnz
jmp
mov
rcll
adc
outsl
adc
jle
popf
out
xor
push
jbe
xchg
push
push
and
data16
mov
fwait
mov
je
imulb
sbb
arpl
pop
repz
aaa
and
pusha
icebp
shr
dec
cmp
inc
sub
dec
mov
icebp
sbb
add
loopne
scas
je
inc
mov
stos
not
xor
aaa
xor
call
sub
adc
adc
lret
ds
xor
xchg
cmc
arpl
cmc
lods
mov
cltd
or
jge
mov
loop
sub
xchg
pop
sbb
push
dec
popa
fisttpll
dec
cld
gs
xchg
xchg
jno
sti
cmp
sbb
jmp
xchg
jns
ja
movsb
push
notl
or
mov
jns
pop
jno
mov
les
es
push
imul
cmc
cmp
test
sub
cmp
int3
xor
xchg
dec
pop
out
sub
aas
cmpsb
mov
aaa
fimuls
adc
xchg
mov
loopne
jo
inc
cmp
mov
jl
or
push
daa
shrl
lea
xchg
lea
nop
add
or
push
out
and
test
xchg
ljmp
lcall
out
jmp
and
insb
addr16
jle
lret
jle
rcl
call
adc
rol
iret
cmpsb
mov
push
sbb
xchg
lock
leave
in
pop
adc
mov
sub
xchg
rol
jecxz
and
xchg
test
aaa
mov
cmp
adc
cld
scas
adc
loopne
mov
mov
repz
out
nop
aas
scas
inc
pop
imul
das
jmp
mov
mov
fldcw
int
in
pop
add
push
movsl
pusha
bound
push
sub
xor
mov
mov
push
ss
aad
cmp
cmp
imul
dec
mov
adc
sub
in
cs
inc
idivb
jg
mov
js
sbb
aas
jbe
add
scas
sti
jno
scas
mov
mov
mov
cmpsb
xor
xchg
aam
fs
pop
test
jle
add
in
inc
hlt
xchg
xchg
push
scas
fnstcw
jns
repnz
in
movsb
add
xchg
out
mov
rcr
mov
insb
shr
dec
jmp
pcmpeqb
xchg
cli
insl
or
mov
pop
mov
mov
bound
xlat
ret
cmp
push
xlat
mov
insb
or
js
aad
cli
das
insl
bound
dec
jg
push
sub
jp
sbb
inc
mov
and
mov
addl
add
arpl
pop
ficoml
dec
popa
xchg
jecxz
pusha
icebp
and
nop
xchg
negl
addb
adc
lret
push
arpl
xor
xchg
test
push
faddl
or
popa
sbb
mov
mov
add
mov
test
jne
pop
cmp
xlat
movsl
sub
repz
lods
je
dec
sub
orl
jge
xchg
in
idivb
repz
sbb
and
rclb
out
bound
in
movsb
sti
xor
push
cld
ret
popf
aaa
mov
or
lock
sub
dec
jne
out
idivl
xchg
cltd
mov
jmp
push
fwait
jne
mov
jmp
shrl
jmp
pop
mov
daa
lahf
push
cs
mov
adc
inc
sub
xchg
sahf
add
fidivs
add
inc
mov
in
or
into
loope
mov
test
loop
xor
neg
cmpsl
jmp
popa
inc
mov
nop
mov
iret
mov
testl
xor
xlat
push
adc
repnz
mov
adc
scas
xchg
in
subb
pop
ljmp
insl
xchg
test
push
mov
push
lock
and
stos
das
or
enter
xchg
or
sarb
gs
shrb
jl
mov
xchg
cli
jp
andb
pop
or
jecxz
dec
nop
jbe
rcll
cwtl
out
adc
in
je
repnz
sub
adc
and
jnp
repnz
sub
inc
shrl
imul
or
push
ljmp
jmp
fmul
adc
sbb
jmp
imul
jle
les
xor
adc
fidivrl
jmp
jp
pop
xor
fcomp
pop
sbbb
inc
xor
jb
bound
es
sbb
or
cltd
inc
cmpsl
mov
imul
cmp
pop
mov
adcl
jo
push
dec
repz
or
fcmovnbe
mov
and
ds
aaa
stos
ficoms
dec
xor
lods
ret
icebp
jno
aas
sub
shlb
xchg
in
or
and
in
push
sbb
mov
cmp
push
cmp
mov
popf
jno
mov
imul
adc
ficomps
or
sbb
jae
push
sub
std
add
cmp
clc
fs
mov
in
mov
mov
push
sub
and
into
dec
fnsave
xor
add
roll
xchg
xchg
dec
push
mov
into
xchg
push
insl
sbbl
add
and
dec
dec
dec
jle
sbb
iret
sub
xchg
or
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
pop
addl
mov
xchg
fs
push
xchg
mov
mov
or
cltd
cwtl
jno,pt
gs
icebp
test
cmp
or
push
adc
dec
fstpt
rolb
js
mov
xor
add
pop
mov
lret
sbb
inc
sbb
in
das
repnz
aad
into
icebp
push
xchg
dec
jg
call
imull
repnz
and
sub
jmp
inc
inc
loop
adc
jmp
jle
sbb
pop
data16
loopne
pop
mov
lods
out
and
mov
mov
negl
jne
or
jmp
dec
cmpsl
pop
xlat
mov
adc
jge
and
ret
jno
out
jecxz
mov
sbb
popf
jg
dec
sub
pop
jp
sub
mov
jge
pushf
adc
pop
addl
pushf
fldl
sub
dec
lret
nop
aad
cs
dec
add
repnz
cmpsl
jmp
aad
sub
test
cmp
push
sbb
pop
xlat
add
cld
adc
cltd
hlt
adc
jnp
xchg
push
inc
out
pop
and
js
mov
call
out
insb
dec
sbb
xchg
push
jp
call
outsl
stos
xor
insl
sub
lock
orb
jle
and
xchg
cmp
fsubrs
inc
push
pop
push
ds
sarb
leave
sbb
jecxz
push
les
sbb
sarb
push
mov
pop
adc
subl
cltd
jb
pushf
push
sub
pop
mov
shl
inc
mov
mov
cmc
pusha
pop
xor
mov
and
cmp
pop
fsubp
insb
dec
sbb
imul
icebp
adc
add
xor
subb
cli
mov
sbb
ljmp
fs
xchg
out
mov
repz
sbb
lods
sub
dec
dec
loop
stos
xor
fldenv
jge
aad
inc
xor
sub
dec
sub
xor
adc
repnz
mov
stos
fimull
insl
imul
out
sbb
and
lds
iret
dec
test
and
ficomps
pushf
lcall
mov
jmp
mov
loop
dec
js
imul
dec
or
jo
dec
lock
inc
sarl
mov
hlt
ret
xor
insb
dec
inc
inc
enter
pusha
shlb
xchg
dec
pop
mov
xchg
scas
ljmp
fwait
mov
popa
ss
das
stc
jle
out
mov
outsl
pop
pop
sti
not
lds
and
cmp
test
aad
inc
pextrw
sbb
enter
pusha
cmp
pop
add
sub
mov
fwait
sub
outsl
mov
add
mov
outsb
mov
push
xchg
data16
ffree
push
filds
fisttpl
popf
pop
in
mov
cs
aaa
xor
push
stc
int3
pop
xchg
pop
jecxz
pop
pop
imul
shrb
pop
loop
addb
push
faddp
inc
cmc
cld
test
cmp
negl
lret
inc
xchg
lds
das
movb
sahf
ja
or
shrl
xchg
sub
cmp
pusha
mov
ljmp
xor
dec
mov
or
sahf
mov
movsl
popf
clc
dec
jmp
es
ret
push
or
sub
lahf
mov
inc
mov
adc
cmp
imul
lds
mov
add
mov
mov
xchg
pop
aaa
mov
mov
outsl
imul
sbb
sub
clc
sub
or
pushf
cmp
push
push
xchg
add
push
add
sub
jecxz
jmp
push
sub
shlb
xchg
jno
pop
decb
outsb
or
sub
jl
pop
sub
sarl
movsb
lods
cmc
fisubs
popa
std
or
jle
lock
repz
nop
sbb
aaa
add
roll
cmp
movsl
lods
xchg
adc
cltd
or
push
dec
and
sbb
cmp
pushf
or
insl
adc
lahf
mov
jbe
data16
shrl
lea
xor
mov
movsl
mov
fs
push
xchg
jl
pop
xor
or
movsl
lahf
or
fwait
push
cmp
fucom
inc
sub
cmc
stos
or
dec
or
push
add
mov
cmp
mov
stc
xchg
ds
icebp
push
push
dec
push
mov
pop
mov
xor
mov
inc
out
sahf
or
xchg
jne
cmp
js
xor
mov
xchg
movsl
xor
cltd
sub
dec
lret
data16
test
insb
stos
mov
add
pop
or
pop
out
mov
or
adc
cmpsl
rorl
cmpsb
aaa
fwait
lret
dec
xchg
adc
dec
adc
repz
mov
mov
and
lods
pop
mov
enter
popa
movb
div
out
in
push
pop
xor
in
inc
jle
popa
add
inc
and
jnp
cmp
sbb
push
adc
aaa
jns
mov
push
or
je
mov
loope
sarb
cld
sub
sbb
imul
and
lock
sub
or
dec
lods
mov
xor
and
mov
ret
daa
sbb
jno
adc
repz
and
daa
ss
insl
gs
sahf
pop
jbe
xor
leave
push
xchg
pushf
js
repz
movsl
rolb
xchg
xor
inc
xor
pushf
das
mov
jb
mov
cmp
cmpsl
aas
adc
cmpsb
xor
dec
jno
xor
fsubr
adc
jmp
push
mov
pop
subb
dec
std
mov
fcom
add
js
sub
jnp
mov
in
mov
call
xchg
cld
pop
out
insb
lods
stos
cltd
scas
jo
mov
mov
pop
push
icebp
push
mov
divb
lahf
pop
pop
rclb
lock
test
jp
inc
adc
pop
popa
loope
cld
cltd
ret
add
ret
std
fsubl
push
and
lods
cmp
mov
loopne
into
repnz
lret
mov
cmp
movsl
ret
xor
fdivrl
sbb
cs
dec
lds
mull
sbb
and
negb
pop
movsb
dec
clc
mov
mov
mov
fisubrl
repz
mov
ret
int3
inc
stc
mov
mov
in
jno
inc
add
mov
cmpsb
fcmovnb
pop
dec
sti
dec
pushf
ret
xor
in
adcl
arpl
das
popa
mov
dec
xchg
ret
cmp
stc
sbb
inc
pop
fwait
pop
xchg
fdiv
popa
sub
rcl
mov
stos
mov
pop
mov
jmp
int
xchg
mov
sbb
ljmp
jae
lret
cmpsl
adc
popa
ficomps
loope
lock
mov
subps
xor
test
notb
icebp
cld
pop
mov
xor
in
lahf
pop
scas
cli
add
movsb
loopne
movsl
in
sub
fmull
jo
orl
imul
bound
bound
push
cld
push
ficompl
popa
sbb
stos
add
jb
sub
in
adc
sbb
in
or
sub
jne
adc
sub
jnp
sub
cmpsl
sub
subb
jb
or
mov
cmp
leave
push
add
std
adc
lock
std
pop
cld
xchg
mov
in
xor
mov
lods
mov
xor
push
and
pop
loop
ror
out
cmp
jecxz
adc
stos
push
ds
rclb
cwtl
shrl
movsl
xchg
repnz
out
xchg
ljmp
inc
movsb
jbe
mov
jne
mov
lcall
sub
out
movsl
or
fidivl
mov
sarb
pop
mov
repz
mov
mov
sub
test
icebp
cmp
out
mov
pop
es
sbb
xchg
mov
jno
or
outsb
push
cmc
dec
or
xchg
add
xchg
jns
sbb
push
ljmp
ljmp
add
loop
fdivl
sub
inc
pop
mov
scas
mov
test
xlat
add
fwait
fidivrs
fs
rcr
call
stc
add
ret
xor
xor
stos
popf
lahf
xchg
adc
mov
int3
jmp
insb
fdivs
sti
je
mov
enter
out
je
cmpsb
mov
int3
xchg
insl
out
hlt
adc
rol
ror
lods
aam
adc
or
loop
cmc
pusha
adc
push
xchg
xchg
xchg
adc
js
jg
add
mov
mov
call
in
cmp
lock
in
xor
dec
cmp
adc
lcall
fiaddl
sub
push
jns
inc
bound
add
adc
jnp
in
rcll
hlt
and
ds
pop
iret
sbbb
mov
jb
cli
mov
dec
movsb
js
fdivr
sbb
shlb
cs
push
hlt
xor
div
aaa
fdivrl
xor
js
sbb
test
push
flds
xchg
iret
cmp
fmull
fs
cmp
fidivs
data16
nop
pop
push
lahf
jp
pop
icebp
add
out
movl
je
bound
pop
mul
add
mov
cmp
pop
in
ret
mov
and
dec
or
sub
ret
mov
sbb
xor
push
mov
shll
push
aam
cmp
and
jle
inc
pop
mov
sub
adc
xlat
push
adc
std
popf
or
sbb
fstpt
cmpsb
mov
cwtl
aad
push
pop
xchg
mov
push
xor
dec
daa
mov
addr16
xor
mov
add
shll
fs
int
xor
outsb
cmp
repnz
out
and
sbb
das
fnstenv
cli
es
mov
xchg
push
mov
aad
outsb
mov
stc
jnp
lods
repnz
es
arpl
scas
scas
rol
punpckldq
xor
cld
xchg
arpl
sbb
mov
jo
mov
mov
xchg
cwtl
add
fstps
jmp
lock
test
push
sub
mov
cld
imul
and
loope,pt
nop
outsl
out
mov
lcall
sarb
idivl
sub
inc
popf
mov
nop
pop
insb
pop
mov
mov
and
push
jae
sub
aaa
xchg
or
push
js
out
or
jb
and
mov
ret
and
add
dec
pushl
jmp
out
sbb
loopew
pop
fcoms
out
in
hlt
mov
cmp
xor
cwtl
adc
rolb
sbb
icebp
pop
jb
ret
scas
ret
cs
sbb
fidivrl
mov
mov
repz
push
lds
mov
and
ret
xchg
push
stc
insb
subl
dec
test
int3
xor
daa
sbb
xchg
lock
jbe
mov
test
es
fsubrs
aaa
xchg
and
jnp
mov
mov
or
les
sahf
and
ret
stos
sti
push
lds
pushf
or
mov
dec
mov
fbstp
icebp
stos
xlat
dec
add
inc
in
lods
frstor
in
push
mov
int
clc
mov
inc
imul
stos
xchg
pop
dec
int3
imul
loop
fstl
add
sbb
lods
mov
testb
or
add
sahf
add
enter
sub
daa
pop
repz
out
lret
pop
enter
out
ficoml
into
sub
xchg
push
ja
mov
shlb
fdivrl
repnz
xchg
sub
sub
int3
inc
pop
arpl
testl
jmp
lea
rolb
test
out
push
mov
push
sti
test
and
dec
mov
sahf
push
xchg
inc
popf
push
push
xchg
dec
imul
leave
jbe
movsb
mov
nop
rep
aam
clc
hlt
into
or
outsb
sbb
aaa
les
mov
push
inc
push
into
push
arpl
push
gs
sbb
add
xorb
adc
mov
xor
std
xchg
cmp
pushf
insb
cmc
jge
dec
jp
xorb
scas
jns
mov
repnz
xor
stc
notb
test
test
push
pop
orl
inc
rorl
add
mov
push
nop
jge
dec
insl
sbb
lahf
lahf
cmp
in
stc
push
aad
repz
lcall
into
pop
adc
adc
movsb
jp
ret
ds
or
popa
adc
xor
jmp
lock
inc
mov
fsubrs
sbb
inc
xor
jl
stc
mov
mov
mov
lret
mov
xchg
das
cmp
jg
jle
mov
jmp
inc
dec
jbe
lds
aam
insb
jecxz
jmp
and
mulb
jns
jmp
ja
adc
out
mov
mov
xor
xchg
and
xchg
sub
pop
ds
int
or
adc
or
mov
test
test
aad
push
xor
mov
out
add
mov
cmpsl
push
aad
test
lea
cmp
int3
es
jl
ss
fldenv
mov
jno
lods
cmp
repz
jp
sarb
fistl
popa
aaa
sbb
dec
and
iret
loopne
adc
push
dec
mov
jg
icebp
mov
inc
mov
push
mov
movsl
aad
test
xchg
mov
jmp
pushf
lods
xchg
insl
mov
aas
ror
call
pop
addr16
aad
push
aam
and
mov
loope
mov
xchg
pushf
in
popf
cmp
bound
adc
inc
pushf
adc
mov
arpl
fisttpl
out
dec
jo
jnp
repnz
cli
outsb
pusha
dec
inc
dec
sub
push
imul
pop
mov
dec
and
jecxz
push
push
dec
leave
aad
orl
stc
scas
jnp
lahf
xchg
stos
js
mov
mov
lea
dec
loope
adc
dec
sbb
or
mov
faddp
ficompl
pop
mov
mov
cmp
sub
xchg
lcall
arpl
subl
fwait
roll
aaa
lods
push
pushf
enter
jnp
nop
jbe
xor
dec
mov
cmpsb
push
cmc
pop
mov
fldt
add
xor
incl
sub
test
cmpsl
inc
repz
push
cmp
pop
repz
mov
insl
popf
popl
movsl
fsubl
rol
pop
mov
adc
pop
push
and
js
lods
inc
ret
mov
adc
movl
xor
mov
pushl
enter
iret
and
iret
jo
push
rol
inc
jge
or
pop
filds
sub
push
cmp
push
cmp
out
insl
into
dec
out
pusha
mov
cld
and
mov
or
cmp
inc
inc
addr16
jnp
insl
dec
xorl
loopne
mov
loop
stc
nop
lds
out
mov
xchg
adc
xchg
mov
in
in
cwtl
inc
shl
popa
mov
rcrb
movsl
sub
dec
jno
push
add
mov
andl
pop
jo
mov
xchg
shl
repnz
jae
mov
jae
dec
add
js
sub
cmpsl
inc
xor
ret
repnz
lahf
add
mov
nop
cmp
or
aas
stos
inc
and
leave
and
push
in
and
roll
fadds
mov
mov
rorl
in
sarl
sarb
dec
pop
pop
pop
in
es
mov
les
sub
mov
scas
dec
pop
jg
xchg
data16
ret
subl
icebp
xor
nop
xchg
dec
pop
dec
xor
shll
dec
mov
jp
push
repz
call
pop
popl
sbb
push
gs
aaa
insb
sbb
jbe
sbb
in
rolb
pusha
sbb
lods
cmp
push
sbb
sarb
enter
enter
insb
ficompl
jmp
adc
fs
pop
xor
jecxz
push
adc
adc
int
inc
pop
andl
int3
and
lods
sub
cmp
andl
inc
push
pop
xor
push
jne
das
inc
xchg
cltd
inc
and
or
xchg
cmp
ret
lret
shr
int3
lahf
xlat
insl
add
pop
and
pushf
movsb
int
or
sti
dec
and
lahf
lods
jmp
mov
xchg
sub
fs
js
and
xchg
cmp
ret
sub
pop
jb
add
sbb
push
jne
ljmp
push
in
push
movsb
faddl
mov
xor
cltd
mov
ss
roll
loope
sub
fsubrl
mov
pusha
lock
xchg
sbb
and
popf
pop
in
sbb
subb
stos
nop
pop
lret
sub
dec
xchg
jbe
jg
cmpl
repnz
adc
js
jle
jb
leave
adcb
dec
mov
adc
add
push
hlt
aas
cmpsb
adc
sub
pop
or
in
add
es
jecxz
sbb
mov
and
movb
mov
push
mov
push
xchg
xchg
jbe
xor
stos
mov
xchg
cmp
outsb
call
insb
sbb
loopne
scas
pop
inc
adc
lret
in
rcl
dec
cmpsl
outsl
loope
pop
jmp
in
aam
mov
push
mov
loop
push
in
loopne
mov
das
add
addr16
mov
fldl
movsb
mov
mov
nop
pop
fs
xchg
cmpsl
xchg
adc
mov
ret
cmp
das
popf
pop
movsl
dec
cmp
imul
in
js
xor
leave
gs
sahf
xor
iret
push
stos
lea
xor
movsl
jmp
nop
xor
push
jecxz
in
dec
bound
imul
and
mov
mov
push
sub
and
push
inc
adc
rorl
xlat
loopne
xchg
xchg
fdivs
nop
scas
adc
ljmp
rcrl
sbb
pushf
mov
inc
inc
shl
add
jb
dec
jo
sti
mov
pop
jb
dec
aad
fmull
adc
mov
mov
shlb
inc
insb
xor
hlt
pop
iret
fistl
loop
fidivl
mov
dec
mov
pop
inc
xchg
movsl
cmp
cmp
cmc
mov
inc
fucomi
adc
mov
push
or
or
rol
notl
mov
stc
dec
aas
and
add
jge
mov
cmp
nop
mov
sbb
xor
mov
inc
fcomi
mov
nop
ret
cmp
pop
mov
daa
and
jg
inc
addr16
dec
xchg
movsl
jl
arpl
mov
xor
rorb
cltd
test
xor
js
sub
in
stos
arpl
push
inc
inc
push
jg
or
cmp
xchg
pop
xchg
jne
xor
ret
addr16
rcl
out
cmp
pushf
add
dec
xchg
lock
fdiv
dec
ficomps
add
inc
jg
inc
push
psubsb
lods
sbb
icebp
int
add
out
lock
insb
jno
adc
lret
subb
mov
jle
and
test
pop
loopne
inc
out
int
sub
xor
rcrb
loop
lock
lret
xor
daa
loopne
sbb
out
ret
jle
xorb
daa
pushf
imul
sub
lods
icebp
jp
jno
lods
rorl
xchg
scas
xchg
cmp
out
imul
pop
push
sahf
pop
pop
pop
and
addr16
fcoml
inc
jecxz
sub
popa
imul
and
and
mov
sub
stc
add
dec
imul
mov
jnp
test
lret
jp
imul
sbb
cltd
inc
inc
mov
cmc
pop
lods
ds
pop
sahf
cmp
mull
adc
mov
pop
sub
dec
mov
into
mov
dec
pop
mov
inc
jl
add
ja
sbb
rol
rclb
mov
dec
mov
lret
lcall
repnz
push
aaa
jb
insb
std
cmp
push
repz
ret
pop
mov
scas
insb
rol
sbb
dec
ret
cmpsl
mov
out
cmpsl
lock
jnp,pn
jecxz
in
inc
bound
and
dec
bound
xchg
cmp
mov
ficomps
sbb
dec
ret
nop
dec
dec
pusha
test
sti
bnd
and
mov
add
faddl
or
push
mov
jg
xor
icebp
jns
pop
xor
lret
setp
mov
dec
and
movsb
cltd
xchg
adcb
aad
mov
ss
ja
mov
pop
push
add
xor
xchg
jnp
or
lea
loop
enter
sub
add
jge
jl
insb
repz
cwtl
subl
clc
f2xm1
idivl
mov
out
aas
iret
jae
repnz
jae
inc
xor
cmp
fwait
les
fwait
xor
fcom
iret
and
out
call
out
xchg
mov
mov
fsubrs
sub
push
into
dec
loop
and
aaa
inc
sbb
cmp
int
sub
cmp
and
outsb
and
jp
mov
test
ja
sub
mov
loope
mov
pop
fmull
fnstcw
jbe
cli
mov
inc
lret
cmp
out
jge
xchg
nop
outsl
mov
and
sbb
add
pushf
pop
xchg
push
lret
loope
push
inc
rcl
mov
mov
dec
lods
std
pop
xchg
dec
call
in
and
leave
iret
adcb
mov
cwtl
mov
es
mov
xchg
add
jns
jbe
imul
sahf
ds
dec
sub
mov
fidivrl
or
mov
int
fstpl
loope
dec
sbb
adc
imul
mov
and
loopne
sar
cs
sti
cmp
jle
loop
xchg
xor
mov
nop
cli
lock
std
call
shrl
cs
in
jb
jnp
out
repz
into
mov
pushf
xchg
or
sub
mov
cs
jle
loope
into
pop
push
mov
cwtl
sbb
push
inc
xor
push
push
xor
sahf
imul
inc
das
xlat
les
jae
or
repz
testl
popf
test
bound
and
mov
lods
add
and
lret
mov
or
call
xchg
inc
mov
lret
mov
and
jp
mov
cmp
mov
add
repz
push
xor
xchg
ss
out
add
insl
pop
leave
and
sub
jae
jle
insb
xor
inc
lods
scas
enter
sti
scas
scas
sbb
or
sarl
pushf
cmpsb
adc
mov
sbb
push
cmp
out
aaa
gs
fadd
repz
fstpt
adc
mov
pushf
or
lahf
decb
xor
ss
bound
in
and
jns
icebp
pop
add
cmp
jb
and
loop
push
cmpsl
adc
or
push
xor
jmp
ret
pop
cmc
insl
xchg
cli
jno
fs
and
ret
cmc
jg
arpl
fcmove
out
mov
lea
add
mov
cmp
xchg
xor
movsl
pop
ficoml
lret
lret
movsl
mov
pop
or
or
xor
inc
adc
xor
insl
mov
pop
cwtl
mov
gs
push
divl
and
test
cli
jl
xor
scas
inc
daa
arpl
ret
cmp
pushf
enter
test
call
mov
push
flds
mov
addl
push
mov
add
cmp
sub
popf
mov
rclb
pop
inc
out
pop
je
jne
insb
sbb
cmp
push
out
adc
into
sub
and
xchg
inc
lods
in
stos
xor
mov
adc
sahf
je
stc
mov
xor
xor
and
dec
shrb
fsubp
out
cmp
fistl
fbld
and
pop
jmp
push
imul
pop
dec
andl
pop
sbb
lret
pushf
push
jo
cmp
lds
cs
out
enter
sub
outsb
xchg
adc
sbb
lret
aaa
insb
mov
cmc
dec
inc
bound
add
sub
test
fwait
jno
dec
jbe
jns
outsb
stos
pop
mulb
pop
in
add
dec
lods
pop
inc
adc
shlb
add
cwtl
or
pop
mov
pop
jno
pushf
stos
jp
adc
mov
mov
test
inc
mov
outsb
sub
adc
pushl
mov
push
imul
add
dec
or
or
push
test
jg
adc
sarb
cmc
loope
xlat
push
mov
push
movsl
ja
mov
or
jmp
repz
sbb
cld
loop
clc
xor
and
mov
mov
jmp
adc
inc
andb
sahf
xchg
stc
jl
test
inc
lcall
sarb
loop
sub
lret
out
movsl
jo
or
adc
jp
pop
adc
xchg
sub
add
jne
mov
int3
jmp
loope
adc
or
mov
fnstcw
popa
fldcw
add
xchg
aaa
es
ret
out
jmp
lods
xlat
bound
aaa
jl
leave
ds
outsb
mov
xchg
mov
std
cmc
sub
push
cmp
inc
adc
xor
in
or
fdivrl
shr
mov
rcrb
movsl
adc
xor
outsl
dec
daa
push
and
into
push
push
ds
cmc
movsb
and
rorb
aam
cmc
mov
push
cmp
mov
jno
mov
xchg
imul
sbb
outsl
lods
lahf
mov
mov
mov
insl
and
repz
dec
aam
and
dec
fsubrs
jne
outsb
scas
jmp
inc
cmpsl
sti
jne
adc
ss
sbb
aaa
outsb
lcall
test
loope
or
in
ss
imul
add
test
cmp
pushf
and
xchg
sub
xlat
push
mov
dec
or
daa
adc
negb
stc
int
loopne
cmp
je
pop
push
cmp
xor
sub
sub
mov
xchg
lea
mov
les
aaa
lcall
push
daa
pop
dec
fsqrt
jo
jmp
sub
cmp
adc
ljmp
mov
out
notl
pop
pop
lods
sti
mov
bnd
jb
sub
push
rcrb
das
mov
js
jne
push
in
pusha
daa
mov
out
sub
popf
insl
pop
scas
jl
cld
daa
xor
cli
mov
sbb
mov
xor
lea
test
daa
pop
fists
cli
jne
jg
adc
mov
cmc
fisttps
and
push
lret
es
test
dec
or
lahf
or
mov
jb
mov
mov
and
pop
fmul
xchg
sub
xor
push
cmpsl
pop
pop
xchg
add
stos
adc
adc
push
icebp
xor
jmp
mov
cmc
mov
sbb
aas
cmpsl
adc
iret
jbe
hlt
and
cmpsb
cmp
and
movswl
ds
jmp
dec
sbb
mov
popf
jp
dec
scas
and
in
jns
mov
loope
mov
pop
push
cli
ret
daa
testl
std
out
loop
stos
setl
pop
xchg
push
shll
lret
fwait
lds
dec
imulb
dec
icebp
daa
xchg
das
pop
filds
adc
in
lds
cmp
popf
jg
mov
stc
mov
xor
mov
out
ficompl
int
icebp
cmpsb
mov
mov
sbbl
scas
std
cmp
insb
nop
xor
xchg
stc
push
jg
pop
xorl
into
sbb
inc
insl
scas
cmp
test
sbb
mov
out
or
and
push
mov
xchg
cmp
int3
shlb
dec
push
fimull
sbb
xchg
jmp
mov
inc
ljmp
into
sub
sbb
out
sbb
cmp
push
dec
adc
and
xchg
sbb
lods
out
adc
shlb
inc
cmp
and
jo
cmp
mov
std
dec
cmp
sti
sbb
lods
cs
dec
or
cmp
sbb
das
rcll
jo
push
push
dec
pop
lea
popf
add
loop
pop
aaa
jle
fucomp
xchg
mov
adcb
je
outsb
push
cmp
pusha
popa
out
iret
clc
pop
xorl
sub
push
ja
or
icebp
fdivrs
ror
call
pop
push
jnp
sbb
mov
ds
lahf
mov
movsb
data16
icebp
mov
js
jae
add
cld
xchg
cmp
test
repnz
cmp
mov
mov
jnp
push
cwtl
sub
mov
sub
sub
jnp
push
mov
pop
pop
fwait
dec
int
adc
inc
xor
push
stos
mov
test
pop
fistpl
pop
jne
ret
sub
or
ss
rcrb
jbe
out
sub
mov
in
xchg
repnz
aad
lock
ds
jne
lret
jnp
mov
mov
xor
test
shlb
add
push
add
xchg
jp
mov
mov
adc
push
es
xor
into
test
pushf
in
mov
stos
lods
data16
or
mov
jecxz
cmpsl
jp
jg
jns
xchg
sar
std
mov
insb
lods
jl
inc
jl
pop
nop
int3
or
inc
insl
or
mov
out
jne
mov
int
out
into
jg
mov
xor
cmp
sahf
dec
imul
out
cmpsb
sbb
sbb
dec
or
mov
outsw
and
out
pop
xor
mov
mov
jmp
cmpsl
pop
xchg
cmpsb
mov
mov
add
jns
mov
and
cli
flds
aad
cs
stc
js
mov
orps
das
xor
dec
sbb
jnp
push
dec
outsb
sbb
push
jae
cmp
jl
testl
xor
push
clc
dec
pop
push
and
or
mov
mov
push
and
inc
jecxz
adc
xchg
lcall
decb
push
movsl
fwait
imulb
movsl
xlat
sub
cli
lods
push
xchg
mov
scas
filds
mov
xlat
fucomi
push
lock
adc
ljmp
int3
ja
xor
gs
mov
mov
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
test
jp
pop
cmp
xorl
sbb
mull
flds
loope
jge
jbe
and
lcall
loope
xor
inc
cmp
fsubs
xchg
mov
sbbb
leave
xor
inc
fstpl
mov
repz
cmpsb
daa
cmc
imul
mov
loopne
hlt
mov
xchg
js,pt
cmp
inc
mov
jp
repnz
test
cmp
rcrb
loopne
cwtl
and
popa
mov
rcll
aas
sbb
sahf
scas
outsb
lcall
mov
clc
push
adc
xchg
lock
pop
inc
lcall
add
sub
dec
sub
rcl
shll
inc
outsb
scas
cmp
and
lea
imul
sub
pop
push
add
fs
or
add
orb
mov
loope,pn
les
xchg
mov
mov
nop
lods
push
pop
in
mov
xchg
pop
xor
aas
out
mov
jg
and
sbb
push
and
mov
sub
jnp
sub
xchg
stos
jno
xchg
and
dec
xor
repnz
and
pop
lret
push
cmp
enter
mov
stos
sarl
int
pop
pusha
inc
ss
fs
aas
inc
and
in
pop
cs
jge
cmp
inc
jbe
mov
cli
cmc
cmp
fisttps
dec
dec
jns
imull
cli
add
dec
jl
out
cmp
jmp
xor
dec
cmp
sbb
or
pop
les
mov
scas
shl
xchg
popf
shll
outsl
add
lret
and
pop
cmpsl
loop
jmp
or
aam
shl
pusha
lret
jl
sub
cs
and
aad
fmuls
push
pusha
pop
jmp
sbbl
enter
lods
xor
pop
xchg
mov
mov
adc
xor
sub
push
cmp
enter
dec
and
dec
inc
jle
jo
add
aam
pop
mov
jg
sbb
add
pop
push
mov
cmp
leave
es
int
xor
pop
mov
lcall
push
push
mov
xchg
decb
fisubs
in
cmp
xchg
sahf
add
adc
das
pop
mov
mov
pusha
stos
xchg
aam
aam
xor
in
and
dec
addl
fistps
ja
jge
mov
push
cld
add
xchg
mov
rcrb
add
cmpsl
cmp
xor
mov
les
push
js
xor
jle
fs
scas
jmp
out
pop
in
test
cmp
mov
sbb
push
lret
xchg
stos
loope
hlt
hlt
or
pop
xchg
cwtl
sub
pop
popf
adc
cmpsl
jne
dec
xchg
adc
rorb
je
insl
dec
lahf
dec
mov
movsb
pop
stos
jle
or
cmp
and
dec
stc
fs
sub
pushl
in
rdpmc
lods
adcb
xchg
fpatan
dec
loope
mov
mov
sbb
imul
arpl
gs
mov
mov
mov
loopne
jne
insb
push
pop
jbe
mov
jge
sub
aad
lds
adc
popa
ret
mov
lret
popa
xor
xchg
xchg
cs
imul
ljmp
jge
cmc
iret
or
xchg
int3
cmpsl
fiaddl
sub
test
dec
or
adcl
ror
lahf
fisttps
ss
cmc
fbstp
cli
add
dec
outsl
xor
daa
cld
fwait
jl
lret
enter
lods
lahf
scas
sbb
push
inc
fsubr
stos
xor
mov
cmp
jmp
mov
jo
pop
mov
or
jbe
lods
hlt
insb
leave
popl
loop
cmc
popa
sbb
push
jb
call
dec
movsl
rolb
in
or
mov
sahf
xor
xor
sbb
adc
adc
push
adc
mov
ja
in
gs
xor
sub
mov
cmpsl
push
jbe
stos
mov
orb
out
sub
mov
test
lock
push
push
sbb
cmp
negl
or
jae
dec
adc
xor
enter
push
test
cmp
mov
inc
sub
mov
daa
arpl
loope
mov
jge
popa
or
lret
cltd
aaa
inc
pushf
add
jno
dec
xor
pop
lea
sub
mov
inc
movsl
call
inc
addl
jl
add
sarl
fildll
outsl
popf
xchg
mov
les
mov
mov
std
shrl
shl
inc
mov
xchg
sub
xlat
sbb
dec
jmp
mov
test
cmpsb
pop
lea
jne
adc
lret
pop
and
jg
xchg
and
ret
out
enter
sbb
xabort
adc
popa
jp
mov
std
add
pop
inc
adc
adc
cli
xchg
mov
mov
inc
mov
or
ret
pop
add
out
xor
push
jae
in
scas
sub
int3
xlat
jle
or
in
push
ret
dec
lret
push
out
mov
scas
pop
jl
jl
fwait
push
hlt
andb
int3
movsl
cmp
lds
lahf
pop
out
xor
and
mov
cli
xor
xor
insb
lods
popl
adc
inc
adc
out
mov
xchg
push
int
mov
push
mov
pop
adc
pop
sub
sbb
cmp
pusha
mov
ffree
fisubs
pop
mov
lods
and
sbb
mov
jmp
sub
cmp
adc
inc
test
xchg
jno
pop
sbb
lret
fwait
cld
test
mov
lcall
repz
mov
and
mov
mov
inc
rcr
adcl
negl
sbb
ret
imul
stc
call
nop
clc
adc
das
lods
push
fucomp
pop
xor
cltd
clc
mov
shl
cltd
inc
int
mov
xchg
jecxz
sub
sub
and
js
sub
cld
and
cltd
movsl
sub
push
outsl
jl
cli
xor
inc
cmp
xchg
mov
shll
xlat
arpl
out
add
test
jmp
push
out
xor
popf
div
test
iret
pop
jne
in
fidivl
xchg
dec
iret
mov
scas
sbb
enter
cmc
jl
jae
inc
push
mov
dec
add
xchg
cltd
dec
arpl
adc
push
push
es
sti
outsb
loop
add
mov
mov
sahf
and
subl
push
pop
or
adc
in
clc
repnz
enter
stc
lret
sub
cmp
mov
cltd
scas
jae
sti
or
pop
ud1
or
cbtw
stos
sar
rclb
ret
push
cwtl
lret
push
aad
mov
mov
xchg
inc
lds
push
adcb
int
sub
jg
xchg
push
ud0
scas
lods
mov
push
sti
jle
jg
fs
add
insl
mov
aas
adc
test
adc
xor
lahf
call
rclb
andb
dec
xor
jbe
add
nop
sbb
push
xlat
inc
fbstp
cmpsb
mov
inc
sbb
mov
mov
inc
imulb
push
fistpll
das
xchg
push
fprem1
lcall
movsb
xchg
gs
outsb
add
ljmp
pop
push
shlb
mov
rorb
sti
and
xorl
lahf
push
js
add
neg
fadds
in
push
leave
enter
popf
popf
jno
roll
mov
or
xor
cli
mov
dec
sbbb
sarl
imul
fstps
push
popa
push
xchg
fwait
lds
sub
es
adc
or
popf
or
add
push
aam
sbb
mov
lea
int
dec
or
push
loopne,pt
add
mov
cltd
shrl
or
mov
dec
lock
cmp
in
fwait
cld
push
andb
and
adcl
bound
movsl
sbb
pop
xlat
insl
or
cmp
inc
mov
fs
xor
pop
inc
lret
fisubl
mov
pop
dec
divl
aas
and
sar
addr16
and
adc
xchg
inc
outsb
lret
cli
fldenv
mov
lods
dec
loop
cwtl
dec
pop
inc
sbb
adc
aam
ljmp
int
movsl
inc
or
or
jmp
mov
inc
xstore-rng
cmpsl
inc
js
mov
mov
sub
call
or
jae
xchg
mov
fldl
adc
mov
gs
mov
push
pop
xchg
mov
out
pop
test
int
in
out
dec
addl
xlat
xchg
dec
test
cld
dec
fbld
addr16
mov
dec
add
mov
ljmp
or
inc
jo
and
jo
inc
mov
xlat
in
int
pop
sub
aam
lcall
push
mov
or
cmp
aas
frstor
mov
lods
and
pushf
fstpt
mov
lret
aad
aaa
push
jge
mov
pop
int
sub
push
popf
inc
xchg
cwtl
push
icebp
sbb
rcrb
push
mov
pushl
sub
cld
jbe
pop
add
pop
push
mov
sbb
pop
cmp
jnp
jae
mov
cwtl
lock
pop
dec
pop
xor
jae
xchg
enter
loop
xchg
adc
ljmp
xchg
test
cmpsl
bound
ss
pop
shl
les
cmp
push
sub
in
jo
sub
mull
sbb
fnsave
xchg
imul
mov
and
rep
lcall
mov
pop
cmp
pop
popf
mov
loop
loopne
icebp
push
ljmp
rol
out
jae
push
jae
adc
std
je
clc
shrl
mov
outsl
xlat
lret
shlb
dec
or
sbbb
in
xchg
add
push
lcall
shrb
sub
push
ret
adc
out
testb
popf
push
fstpt
into
in
add
lods
or
jae
into
adc
mov
int3
mov
adc
dec
mov
xlat
or
in
jae
fcoml
std
adc
inc
call
xchg
mov
aad
rorl
xor
xlat
cmpl
fdivrl
data16
add
xchg
cmpsl
movsl
adc
addl
jne
and
repz
adc
jno
mov
mov
int
xchg
xor
addr16
in
fbstp
dec
leave
add
push
fstpt
pop
add
dec
neg
gs
sbb
jmp
movsl
outsl
fstpl
jle
xchg
xorb
test
sbb
push
sub
cmp
mov
xchg
or
popa
jns
or
movsb
and
mov
adc
or
aam
packssdw
lods
je
out
int
cmp
sub
sbb
xor
popf
mov
push
xchg
repnz
and
mov
mov
bswap
out
clc
test
jecxz
cmpb
push
mov
subl
xor
cmpl
js
adc
cmp
lock
jge
adc
mov
mov
lods
or
test
xor
gs
and
cmp
cld
add
ficoms
adc
cmpsl
inc
out
sbb
into
mov
mov
add
adc
cwtl
adc
clc
imul
jg
inc
jo
rcrb
sbb
repnz
or
mov
jae
ja
adc
mov
mov
sbb
into
hlt
out
jge
xchg
and
push
mov
icebp
dec
xor
jecxz
sbb
mov
sbb
cmp
xchg
stc
or
enter
es
xor
push
xor
sub
lahf
sub
es
xchg
mov
xor
dec
jle
ja
inc
push
shr
inc
rcrl
daa
sub
popf
out
sti
push
xchg
mov
jmp
mov
imul
add
enter
lcall
enter
push
and
inc
jbe
pop
fsts
sub
mov
adc
or
push
mov
stos
sbb
inc
sbb
push
inc
aaa
jno
jae
daa
dec
xchg
inc
cmp
in
xchg
xor
outsl
jl
aad
sti
lea
loop
or
rcrb
cmpsl
xorl
sbb
mov
cmp
aas
xor
sbb
mov
fadds
iret
or
adc
sub
sti
push
ja
or
repnz
movsl
mov
lock
pop
or
inc
adcl
push
mov
out
or
mov
xchg
jl
fcmove
enter
add
out
inc
and
pushf
dec
mov
lea
cli
adc
cmp
inc
setb
sub
int3
fdivrs
jne
icebp
into
call
jb
xchg
cld
or
mov
dec
or
dec
and
mov
test
fcom
aas
mov
stos
add
push
push
fs
dec
dec
dec
xchg
pop
leave
add
mov
divb
rolb
pop
cwtl
insb
lcall
inc
xchg
mov
data16
scas
jo
mov
pop
mov
jmp
cmp
dec
push
cmc
dec
sub
imul
shlb
lds
cmc
arpl
lds
andb
imull
fldt
mov
mov
push
jo
jmp
fiaddl
jp
jbe
js
push
imul
adc
cmp
cmc
push
clc
arpl
hlt
and
xchg
int3
push
xor
push
jo
xor
push
sarl
push
xor
add
push
jle
sub
cmp
mov
xor
cwtl
and
aas
dec
push
push
in
outsb
ja
push
cmc
xchg
insl
sbb
or
mov
pop
xchg
popa
sti
mov
and
pop
cmc
push
and
xchg
clc
rcr
add
cmp
and
das
mov
test
fiadds
iret
outsl
ret
imul
ficoms
ret
daa
rorb
jne
shr
test
out
adc
data16
push
jmp
lcall
push
dec
mov
dec
loop
push
pop
adc
fisubrs
in
mov
cmpsl
push
movsl
lea
jae
in
jo
bound
in
lock
movsb
cli
add
inc
notb
jbe
lods
sub
xorl
call
xchg
outsl
fsts
fsubp
std
pop
pop
sbb
add
inc
dec
cltd
inc
ds
fwait
adc
sub
popf
xlat
xor
sbb
inc
call
or
call
ret
loop
loopne
fsubrl
pushf
es
popa
push
dec
inc
mov
mov
mov
mov
enter
out
mov
mov
lahf
out
pop
xchg
push
negb
loop
hlt
mov
cmp
mov
sub
pop
es
and
pop
test
sbb
in
ficoml
dec
sbb
repnz
ret
sti
dec
add
sbb
xchg
cmp
push
clc
stc
add
xchg
jo
sahf
sarl
into
aam
scas
jns
lock
inc
xor
in
aaa
xchg
rcll
xchg
mov
mov
mov
ds
dec
mov
in
icebp
bnd
decl
out
dec
xor
dec
stos
aas
sbb
or
inc
adc
mov
scas
test
decb
cli
lcall
add
or
mov
and
imul
orb
cld
inc
mov
push
pop
cmc
mov
mov
fdivl
aaa
das
adc
mov
popl
add
scas
sbb
sub
outsl
lss
jnp
fists
mov
mov
sarl
in
ss
idivl
mov
je
dec
add
ret
and
scas
in
cltd
into
lahf
jg
orl
cli
xor
or
outsl
jmp
lea
rolb
add
adc
xchg
push
mov
in
or
hlt
jb
sub
dec
aad
cmp
testl
bound
push
andl
jge
sbb
scas
mov
push
inc
add
mov
xchg
pushf
sub
popa
cmp
adc
add
dec
pop
push
mov
sub
popa
pop
hlt
insl
push
sbb
sbb
ljmp
fsts
test
pop
mov
clc
xlat
inc
mov
insb
mov
repz
in
shlb
jns
pusha
lea
adc
and
mov
rol
mov
leave
call
ret
xchg
push
fisubrs
aas
int
xchg
mov
xor
mov
mov
and
ret
aad
insl
sub
pop
and
inc
loop
out
lods
inc
mov
leave
imul
in
push
flds
je
add
jbe
out
sbb
mov
in
enter
into
lret
fsubrs
lret
pinsrw
xchg
mov
mov
enter
dec
xor
push
scas
add
push
cmp
mov
test
notb
mov
push
xchg
jae
xchg
dec
fists
pop
imul
mov
mov
cli
pusha
addl
xlat
repnz
icebp
adcb
outsb
data16
mov
imul
cmp
mov
aas
ret
testl
cld
pop
lcall
xor
arpl
mov
ss
sub
mov
xchg
lret
lcall
mov
lret
in
fstl
test
mov
push
aas
in
adc
inc
and
scas
sub
xor
fs
adc
loop
inc
push
sub
adc
and
jo
sub
lock
icebp
movsl
xor
orl
in
or
xor
push
push
mov
ret
push
jmp
push
pop
popl
shrb
out
pop
push
add
sti
mov
xor
in
leave
testl
faddl
movsb
sbb
add
xchg
and
and
xchg
cwtl
push
dec
lods
jp
popa
sbb
shrl
mov
fisubs
sbb
cmp
call
and
testb
daa
lods
dec
adc
pop
jl
inc
pop
std
or
sbbl
loope
push
pop
mov
jge
jp
or
mov
add
mov
jbe
fs
ja
jmp
push
cmp
mov
dec
mov
jg
aas
sbb
bnd
fistpl
leave
pop
in
stos
and
cmp
ja
xchg
test
int3
cmp
push
sbb
stos
and
add
cmpb
insl
xchg
pop
mul
and
sbb
mov
cld
sbb
dec
fwait
or
in
pushf
les
cmp
mov
or
cwtl
movsl
xor
mov
clc
je
insb
mov
ficomps
aam
stos
mov
pusha
pusha
or
daa
movsl
stos
xorl
push
lret
out
in
hlt
pop
xor
shll
adc
cmp
stos
mov
jae
rcrl
mov
clc
lods
adc
add
hlt
insb
ret
ret
xlat
xor
mov
push
cmpsb
cmp
push
add
cmpsb
sahf
mov
xor
ss
inc
out
call
adc
push
push
cmp
movsb
push
stos
push
ss
add
out
sub
cmp
jp
cs
movsl
mov
mov
imul
add
fcoms
mov
dec
mov
fcom
arpl
ss
pop
mov
jo
cmp
popa
mov
sarl
stc
push
inc
jl
sbb
xor
xchg
mov
mov
jp
pop
dec
dec
test
pop
sub
sahf
out
push
push
sbb
adc
aaa
scas
gs
cld
outsl
push
int
mov
mov
xor
scas
ret
xor
insb
cld
mulb
mov
cmpsb
push
fisubs
insb
lcall
dec
mov
icebp
sub
stos
cmp
inc
adc
sub
aam
jp
and
mov
jne
addr16
in
lds
xor
jb
pop
xchg
repnz
mov
cmp
sbb
popf
add
leave
xchg
mov
lea
mov
aam
in
dec
add
into
test
negl
nop
adc
pop
imul
xor
add
add
dec
es
rorl
jns
sub
sub
daa
sarl
int
je
fistl
xchg
xchg
cmp
mov
test
lods
lods
xchg
pusha
arpl
mov
xorb
pop
add
pusha
seto
push
mov
mov
loop
daa
sarb
pop
inc
fs
dec
andb
gs
ss
mov
std
data16
popa
cwtl
cmp
adc
jo
push
xor
loope
je
sub
sahf
stos
xchg
xor
mov
stos
dec
testl
and
push
mov
and
push
xchg
or
int
js
jge
aad
loop
pcmpeqb
pop
or
inc
rclb
outsb
ds
rcr
lods
pop
xchg
cld
xchg
add
jmp
xchg
rol
iret
mov
mov
sbb
cmpsl
dec
mov
hlt
cmp
dec
lea
dec
jae
lods
push
stos
xor
fildll
leave
cmp
movsb
enter
fwait
out
ret
mov
mov
dec
pusha
sub
ja
xchg
jge
mov
jbe
loopne
add
pop
out
icebp
in
jo
add
fmuls
jns
clc
jge
xchg
imul
cmp
mov
sbb
pop
inc
cmp
addr16
daa
cs
roll
bound
in
pop
jg
dec
add
ror
sahf
outsb
dec
enter
mov
and
js
add
in
mov
outsb
arpl
push
aas
sbb
mov
mov
insl
dec
aad
inc
test
call
mov
fnstenv
dec
adc
in
mov
dec
or
push
or
cltd
ja
insl
hlt
inc
cmpsb
xchg
outsl
lds
push
mov
test
push
inc
adc
roll
iret
pop
push
pop
cli
sub
mov
push
cld
insl
sub
stos
insb
movsl
xor
sar
xor
sbb
and
cmp
mov
int3
in
push
adc
movsl
clc
xchg
jmp
fs
leave
mov
jmp
cmpsb
mov
imull
push
or
inc
enter
and
and
and
push
inc
jnp
sub
pop
enter
xor
jecxz
xor
cwtl
mov
in
cs
xor
roll
in
xor
iret
call
mov
dec
mov
push
cli
cmp
add
fimull
mov
add
sbb
jbe
push
scas
test
push
jno
ret
pop
push
lcall
mov
imul
stc
push
cli
add
push
cmovnp
cmp
sub
lds
or
mov
add
mov
insl
push
push
js
add
cltd
xlat
adc
dec
inc
mov
cltd
stc
fldenv
mov
stc
jp
inc
ljmp
sbb
jp
out
inc
stos
fdivrs
ret
or
add
xchg
mov
gs
inc
int3
sub
cmc
shlb
add
add
fstps
or
xchg
jb
fldpi
push
add
iret
orb
inc
jnp
add
pop
shr
mov
inc
fidivl
or
testb
std
in
leave
xor
push
dec
dec
or
pop
jmp
rorl
iret
inc
clc
mov
out
outsb
sti
lods
mov
ret
fldl2t
xchg
mov
xchg
mov
loope
imul
push
lret
xor
and
dec
jp
roll
mov
scas
or
mov
lcall
add
push
movsb
or
cmp
pop
je
repnz
adc
adc
mov
popf
out
or
push
xchg
mov
cmc
ret
xchg
dec
scas
std
incb
js
mov
pop
test
cmp
mov
mov
les
xchg
ret
cltd
fadds
jnp
cmpsl
imul
addr16
test
in
adc
out
and
dec
add
push
adc
shlb
dec
icebp
pop
iret
lret
js
les
inc
pop
incl
lds
jb
xchg
inc
sbb
add
fadd
popf
sbb
pop
push
add
xchg
or
mov
stos
mov
jge
xchg
nop
jecxz
bound
adc
xor
inc
xchg
xchg
js
icebp
xchg
inc
mov
pop
jae
int3
jb
pusha
pop
xchg
push
adcb
mov
cmp
pop
jecxz
or
call
mov
push
or
std
inc
loope
ret
loop
lods
sub
in
or
add
jecxz
mov
push
sub
lds
imul
xchg
xchg
jne
in
inc
push
incb
mov
push
mov
dec
aas
popf
xchg
inc
xchg
pop
and
in
jnp
lahf
cmp
ret
jne
push
test
icebp
xchg
cs
adc
mov
adc
push
mov
dec
in
sub
mov
xchg
lds
aam
popf
loop
ret
mov
sbb
dec
and
cld
adc
in
sahf
sbb
jae
into
scas
loop
inc
fnstsw
push
or
data16
fcmovu
hlt
ret
mov
xchg
push
mov
jle
rcrb
rol
fstpl
fsubs
cmp
or
mov
mov
fstps
int3
lods
test
jns
rcrl
jl
aad
int3
xor
sub
mov
dec
hlt
das
addb
add
push
rorb
subl
xchg
jae
outsb
mov
jne
arpl
push
mov
and
mov
and
jo
mov
out
push
inc
inc
adc
ret
and
in
in
mov
daa
cmp
adc
pushf
push
pop
out
aad
jnp
into
or
outsb
mov
lods
xchg
lock
lahf
mov
lock
dec
jae
or
mov
stos
cmpsb
sub
lahf
jne
repz
and
in
jmp
icebp
popf
dec
es
lea
and
add
mov
pop
sahf
in
fisubrl
xorb
int3
cwtl
jp
cli
jae
xor
enter
imulb
sub
mov
inc
ret
lret
lods
lcall
push
push
and
in
sbb
movsl
xchg
push
in
cltd
insl
sbbb
xchg
sbb
sub
inc
dec
cli
mov
adc
into
sarb
lea
jnp
clc
cmpsb
lods
xor
xor
test
dec
pop
cmp
test
movsl
jns
sarl
xchg
int3
sub
scas
arpl
mov
pop
lea
fsubr
and
fiadds
mov
dec
enter
pop
sub
std
mov
cmp
pop
push
rcl
enter
into
pushf
fwait
scas
cmpsb
jmp
popa
sub
das
push
or
xchg
sub
fs
mov
mov
adc
mull
jp
scas
inc
pushf
lret
xor
fsts
adc
adc
sarl
jle
mov
stc
sub
jmp
bound
nop
jo
mov
cwtl
leave
cmp
leave
push
xor
aas
jp
adc
and
in
or
push
sbb
push
push
or
dec
jnp
roll
dec
sahf
push
ds
scas
pop
fcmovne
cmp
cmp
xor
or
push
jns
arpl
dec
movsb
insb
test
outsb
fisttpl
or
arpl
into
call
test
add
fldln2
in
nop
push
mov
es
ljmp
lret
cmp
seto
jl
fcompl
cmp
movb
xor
inc
sbb
pop
insb
mov
or
test
les
ljmp
or
xor
loop
mov
js
loope
cmp
sti
sbb
sbb
mov
sbb
and
dec
inc
stos
and
fwait
ja
aaa
mov
lods
shlb
mov
sbb
add
add
mov
insl
cmp
xchg
xlat
aam
test
push
fisttps
and
mov
pop
dec
push
xchg
sub
in
dec
xchg
xor
ror
jb
fimuls
bound
insb
clc
push
mov
add
movsl
push
mov
out
mov
dec
shlb
pop
loope
jle
jmp
xorb
jge
or
dec
orb
into
mov
lahf
test
xchg
pop
ret
imul
outsl
fcoml
test
xchg
repnz
dec
jge
jge
inc
adc
push
and
cltd
and
push
mov
aad
shlb
std
cmc
mov
sbb
push
aaa
fisttpl
push
push
mov
loop
push
and
mov
jle
sbb
fsubrs
pop
or
and
mov
dec
test
jb
push
xlat
stos
mov
jl
icebp
or
jo
fnsetpm(287
mul
jne
xchg
push
mov
fstp
jmp
and
nop
cli
add
mov
lret
push
push
call
jl
enter
sbb
inc
dec
insb
ljmp
pop
int3
add
push
je
xchg
aaa
mov
test
xchg
pop
lea
out
xchg
jl
xchg
xor
fwait
cmp
pusha
and
daa
jno
imul
add
jmp
mov
mov
imul
xchg
jbe
jp
out
push
push
popl
or
push
idivb
popa
scas
mov
fwait
mov
jbe
outsl
loopne
arpl
decb
lcall
inc
dec
add
dec
sbb
mov
repz
sub
sbb
sub
test
in
adc
outsb
push
jg
movsb
add
fsubl
push
cmpsb
testl
divl
imul
adc
insb
cmpsb
xor
imul
repz
and
jo
aas
decb
add
ror
jo
jecxz
shll
xor
push
and
aam
movsb
fadds
push
push
xchg
pop
or
les
mov
xchg
mov
in
test
xor
jno
and
xchg
and
and
xchg
push
cmc
mov
ljmp
int
mov
push
ret
xchg
flds
or
jp
adcl
cmp
mov
pusha
enter
repnz
push
sub
or
call
pushf
in
data16
xchg
dec
sbb
js
push
icebp
scas
ljmp
enter
or
jb
mov
fnstenv
outsl
sub
inc
bound
mov
dec
lcall
nop
cmp
and
mov
adc
add
and
rorb
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
addl
rorb
cmp
sub
add
cmp
push
adc
xchg
dec
inc
outsl
movsb
mov
pop
push
rcrl
lods
clc
add
mov
jbe
enter
adc
jge
movsl
jo
scas
adc
adc
mov
lahf
dec
dec
stc
inc
cmp
mov
or
movsl
cli
cs
cmp
aas
push
outsb
in
ret
aad
bound
pop
mov
test
das
dec
jo
mov
lods
out
insl
xor
test
add
std
push
mov
lcall
fstl
jge
movsl
repnz
pop
add
add
sub
inc
adc
push
outsb
sbb
jl
hlt
ss
pop
push
dec
vandnpd
fbstp
add
cmp
movsl
imul
iret
ja
cwtl
lods
data16
mov
rorb
adc
inc
jmp
sbb
fnsave
mov
subl
dec
jmp
aas
popf
and
fimull
xchg
add
into
push
push
nop
mov
cmp
xor
push
fisttpll
arpl
sbb
out
sub
cmp
jne
gs
dec
outsb
mov
mov
mov
mov
sarl
lret
xor
scas
push
mov
ja
jo
lret
add
add
rol
push
dec
mov
pop
cmp
or
xchg
sub
xlat
repz
sbb
jmp
inc
mov
xor
mov
adc
jg
xlat
cmp
sbb
cli
icebp
sub
pop
notb
cld
test
sub
popa
loopne
std
sub
mov
jecxz
or
pop
pop
scas
xchg
xchg
aad
add
dec
push
mov
aaa
fcmovu
movsb
in
test
dec
add
jae
push
and
lret
mov
gs
lret
xor
sbb
and
or
push
pop
inc
cmpsl
sbb
inc
loop
mov
adc
mov
repz
movsb
push
js
in
pop
jb,pt
push
rol
sub
mov
cmc
movsl
aad
lock
jecxz
mov
mov
lea
jb
cltd
std
inc
mov
xchg
lahf
out
rcl
stos
mov
sti
xor
fwait
cmp
es
pop
push
pusha
inc
add
xor
xchg
or
pop
and
xchg
mov
add
or
test
ljmp
mov
sub
jecxz
loope
xlat
sub
rcrl
add
jbe
stc
es
pop
rolb
lsl
mov
cli
pop
mov
ja
sub
lods
mov
aaa
mov
gs
pushf
inc
shl
xchg
jno
jg
outsb
cli
sbb
in
pop
testl
xchg
les
daa
cwtl
mov
mov
pop
mov
lock
rol
mov
push
jg
xchg
movsl
out
addb
sub
add
in
jno
or
sbb
inc
pusha
push
jecxz
stc
fdivr
into
cmpsl
xlat
jmp
xchg
lcall
mov
into
mov
or
mov
xlat
lret
cmp
add
or
rolb
bound
test
out
adc
cmp
adc
aam
ss
inc
push
inc
bound
jmp
pop
add
testb
or
lds
insl
out
imul
cld
subb
mov
and
pushf
fisttpl
lahf
xor
jbe
leave
jno
hlt
jecxz
dec
ret
inc
pop
mov
enter
push
outsb
lret
cmpsb
mov
inc
sti
sarl
pop
and
jmp
aaa
pop
fs
cmp
jno
xor
xlat
jbe
repz
ss
mov
out
sbb
xchg
addr16
pop
push
call
jecxz
xor
rorb
lcall
pop
inc
cmp
dec
cmc
movb
insb
sbb
in
ret
cmp
jmp
xchg
jmp
imul
aaa
bound
sub
dec
filds
test
mov
mov
push
pop
xor
cwtl
aaa
sbb
mov
or
cmp
sahf
rolb
out
lret
cmp
mov
orb
cmp
dec
mov
inc
int
imul
jbe
or
and
xor
mov
ja
jns
or
ja
and
sub
fsubr
faddl
and
dec
sbb
ljmp
sub
ljmp
mov
mov
inc
adc
adc
out
cli
xor
cmp
arpl
and
sti
pop
cmpsb
pushf
cli
popf
sub
mov
mov
xor
add
push
sbb
push
jmp
pop
cmc
sub
lods
lret
enter
cmp
std
out
dec
cmp
leave
outsb
push
jo
shlb
and
xchg
clc
pop
jbe
jb
mov
cmpsb
aad
jle
jnp
es
dec
mov
lret
add
push
jecxz
cmpsb
mov
stos
xor
leave
outsl
pop
pop
or
ret
mov
xor
mull
cmp
jne
and
push
mov
pop
mov
stos
or
out
cmp
mov
mul
jb
push
pop
adc
xchg
dec
cmp
mov
addl
adcb
cli
dec
pop
cmp
jp
jg
add
insl
outsl
sahf
adc
stc
roll
mov
lods
mov
mov
mov
testb
std
vmread
leave
frstor
pop
inc
or
adc
cmp
cmc
dec
int
dec
and
fwait
mov
mov
inc
lods
or
gs
add
lock
arpl
xchg
test
cwtl
notl
int
xor
push
xchg
push
scas
jno
sbbb
std
fisubl
loop
and
rorl
cmp
popl
mov
mov
xor
setle
adc
addr16
outsl
cmp
jge
test
dec
xchg
loopne
push
loopne
pop
roll
lea
cltd
inc
shlb
cmp
sbbb
xchg
clc
sub
aad
xor
push
dec
pop
mov
pop
mov
mov
frstor
dec
mov
movsl
mov
pop
cmp
arpl
pop
mov
and
push
cs
hlt
imul
ret
push
xchg
adc
push
arpl
jne
jae
mov
cld
outsb
xchg
jo
es
mov
lds
xchg
pop
shll
sbb
fwait
bsf
add
add
jae
fiaddl
ja
mov
add
jle
mov
mov
sbb
cli
or
repz
adc
pop
or
xchg
cs
xchg
add
pushf
xor
out
test
fdivp
inc
or
lret
cld
movsl
pop
dec
dec
imul
sbb
addr16
out
shlb
ret
inc
jno
loop
pop
xchg
pusha
adc
jae
imulb
and
mov
lods
test
jge
mov
or
mov
call
nop
leave
mov
popf
mov
data16
add
inc
scas
cmp
jecxz
dec
ds
cmc
cmp
mov
mov
or
loop
mov
mov
iret
shlb
or
pop
dec
idiv
fstpl
aaa
xchg
inc
les
dec
cs
lea
call
stc
add
mov
ljmp
mov
test
mov
sbb
imul
pop
mov
adc
xor
ljmp
push
push
dec
mov
loopne
int3
mov
mov
out
mov
arpl
xor
lret
push
xor
hlt
sub
in
out
or
iret
mov
rcrb
les
sub
dec
and
pop
push
shll
sub
pop
push
cmpsl
jo
xchg
mov
xchg
push
jae
pop
mov
stc
add
fsubl
push
lods
fs
jecxz
repnz
rorb
xchg
mov
call
testl
movsl
adc
arpl
sub
xchg
aam
xchg
sbbb
lcall
adc
loopne
sbb
test
sbb
lods
cld
stos
xor
mulb
enter
jns
orb
sbb
lret
push
loopne
ja
fwait
int3
xchg
lock
dec
pop
cmpl
cmpsb
add
cmpsb
push
inc
push
dec
or
jg
cmpl
jbe
rol
xor
jbe
leave
dec
jae
pop
insl
jne
mov
push
out
adc
mov
mov
jae
mov
sub
fldenv
jge
test
adc
test
test
mov
das
cmpsb
sub
adc
jns
jnp
arpl
outsl
and
jb
xor
js
cmp
sub
mov
loopne
sub
sbb
xchg
mov
shll
into
and
xor
and
iret
aaa
cmp
mov
mov
inc
fidivrl
js
lea
test
leave
dec
test
ret
jo
jmp
mov
adc
mov
inc
adc
xor
push
add
mov
in
mov
cs
test
mov
push
add
mov
jno
subl
and
out
insb
repnz
cmpsb
xchg
lcall
inc
pop
pop
add
jmp
shrb
push
or
ss
push
mov
jl
pop
icebp
cld
call
add
jg
jns
ljmp
sti
pop
mov
in
pop
nop
popf
jecxz
jb
xor
mov
mov
out
xor
lcall
lcall
scas
mov
lret
daa
or
daa
loope
sbb
push
push
jl
cs
pop
loope
and
ss
mov
mov
xchg
mov
test
push
es
sub
mov
mov
lret
and
lcall
dec
stos
mov
inc
mov
cs
dec
adc
mov
jns
cmp
jmp
xchg
mov
cmp
push
rorl
push
sti
addr16
push
lods
mov
cli
cmpsb
push
xor
in
dec
fdivp
pop
fwait
lock
xchg
pop
lods
jl
data16
inc
mov
aas
test
jnp
inc
add
daa
lock
in
out
fsubl
loop
adc
cmp
daa
fadd
sti
xchg
xacquire
and
mov
cmp
leave
dec
mov
sub
push
dec
push
pusha
xlat
rcr
mov
mov
dec
lret
pushf
lock
sub
and
aaa
jbe
and
or
cmp
mov
sbb
ret
jo
stos
push
pop
cwtl
outsb
shll
and
ds
jae
ja
hlt
sbb
mov
mov
sti
js
jge
pop
dec
push
icebp
cmp
mov
and
xchg
and
pop
jle
push
xlat
std
iret
fsub
aas
and
sbb
jg
es
fists
mov
gs
mov
adc
push
xorl
push
cwtl
sbb
jp
daa
cmpb
sti
push
or
ss
mov
fwait
test
leave
dec
mov
test
xor
xchg
aad
in
adcl
out
jmp
mov
sbb
rclb
popf
mov
in
pextrw
mov
jg
mov
stc
dec
dec
arpl
cmp
adc
ss
fmul
mov
or
or
add
or
in
add
std
cli
insb
sbb
inc
movb
fimuls
je
in
pop
xchg
jl
mov
imul
cmpsb
ds
pop
jge
xor
mov
insl
hlt
sub
int
jo
out
dec
and
push
adc
or
out
xchg
movsl
jne
jle
out
iret
sub
push
sahf
fs
add
jmp
pop
add
jmp
or
mov
pop
sub
xchg
movb
cmc
sti
add
sbb
cmc
dec
xor
mov
nop
mov
cmp
jno
mov
ds
enter
fcmovnbe
mov
jo
mov
jnp
aad
lods
shll
movsb
sbb
icebp
dec
ss
scas
stc
adc
int3
or
test
int3
loop
push
psubw
push
pop
sbb
addr16
lret
mov
imul
push
jb
sub
jnp
xchg
ds
int
movsb
pop
jmp
lcall
pop
pop
cmp
cmp
add
shl
or
mov
jge
std
or
insl
cmc
pop
or
clc
lods
inc
push
orb
mov
jae
push
loope
clc
adc
jae
std
dec
xchg
daa
decb
lcall
outsb
jg
outsl
fcomi
mov
pusha
cmpsl
dec
in
and
add
mov
clc
dec
xor
xchg
addr16
loop
xchg
inc
inc
adc
jecxz
cmc
and
call
cmp
or
push
add
out
and
dec
cli
cli
and
icebp
cmp
or
lret
mul
sub
aam
es
arpl
out
mov
mov
mov
dec
and
lcall
nop
or
sub
push
pusha
mov
imul
dec
mov
xchg
mov
mov
stos
mov
inc
fwait
iret
ret
mov
add
dec
jo
and
mov
mov
jg
dec
ljmp
jno
push
in
xor
dec
jnp
cmp
mov
push
scas
sub
mov
xchg
ret
fdivrl
mov
xor
sub
shll
push
inc
loope
mov
xor
dec
jns
dec
add
es
stc
dec
repz
sub
pop
jmp
aaa
int3
inc
push
adc
sti
mov
adc
into
and
cli
ds
mov
test
bound
out
and
das
add
loop
adc
fiaddl
sbb
adc
dec
push
or
jge
push
xchg
mov
insb
adc
cmpl
rclb
andb
loope
dec
jp
js
ss
dec
cmc
mov
inc
sbb
or
jne
push
jle
fstpt
cmp
mov
test
loop
ljmp
mov
adc
sub
mov
adc
dec
sbb
repnz
test
ja
dec
into
dec
jmp
fs
icebp
dec
lods
rolb
or
pop
icebp
or
je
mov
in
movsb
daa
loope
sub
outsl
mov
in
aad
lret
jbe
ret
xor
push
jl
cli
dec
loopne
sbb
add
hlt
dec
mov
jbe
fs
loope
pop
xor
or
psrlq
mov
jge
add
mov
mov
sbb
call
insb
jb
push
push
outsb
test
and
mulb
ret
into
into
lock
jnp
daa
pop
add
inc
xchg
mov
std
mov
xchg
loope
subb
xchg
cld
mov
ret
fnsave
jb
lock
addr16
cmpsb
loope
sbb
jbe
jno
push
mov
std
iret
in
mov
mov
push
xchg
dec
test
xchg
lods
mov
inc
push
movsb
adcb
cmp
cmp
inc
sub
ret
ret
roll
sbb
cmp
mov
imul
or
jo
cmp
xor
xchg
jb
ret
int
or
int3
mov
lods
mov
movsb
fs
jg
mov
bnd
fxch
enter
int3
mov
sbb
ficoml
sub
push
dec
xor
and
sub
pop
mov
cmc
notb
fldt
cmp
mov
push
push
mov
dec
mov
aaa
push
ja
lock
std
repz
lods
cmpsb
sbb
fmuls
pop
inc
idivb
mov
adc
pop
pop
rcr
push
adc
or
adc
ljmp
lock
sub
jne
push
dec
push
popl
pushf
pop
popf
dec
out
push
and
ds
xor
and
loopne
pop
pop
dec
insb
loope
stos
mov
out
mov
dec
sahf
adc
outsb
add
hlt
imulb
lods
ljmp
nop
ss
out
test
aad
lods
xor
sbb
cmp
push
out
sub
imul
mov
jae
aas
stos
aas
xchg
push
ds
int3
scas
pop
push
mov
push
imul
scas
sub
lret
dec
fisubrl
outsb
push
test
inc
and
lret
es
mov
add
je
in
loope
sbb
push
xor
inc
dec
es
bound
and
push
pop
add
dec
lcall
rcrb
andl
jge
cld
cmc
leave
jae
inc
stc
ds
xchg
inc
sbb
mov
inc
imul
cltd
punpckhwd
enter
and
pop
xor
inc
fs
repz
les
mov
arpl
or
xor
push
cmp
mov
pop
fsubr
jne
or
movsb
mov
or
hlt
in
cmp
imul
pop
inc
sbb
outsl
orb
aaa
or
sbb
lock
dec
dec
sti
loopne
daa
fadds
jecxz
js
insl
scas
xor
push
cli
push
adc
pop
daa
loop
pop
addr16
rcll
cmc
rorb
inc
cmpsb
pop
ss
pushf
pop
test
orb
loopne
sbb
faddl
lods
rolb
in
aad
pushf
outsb
gs
dec
cmp
adc
dec
test
rolb
test
fs
adc
int3
nop
aam
adc
mov
fimull
jns
add
cmpsb
call
hlt
push
sub
mov
cmpsl
mov
and
pusha
lds
mov
pop
out
push
add
in
lock
sbb
cmpsb
xor
lock
mov
inc
push
xor
cld
jo
ljmp
cmp
imul
fnsave
adc
add
pop
lret
sub
cs
xchg
iret
pop
lret
mov
lcall
sbb
aad
pop
dec
or
or
out
jge
adc
mov
rcrb
in
add
js
lea
jo
ss
cltd
imul
mov
test
cs
add
cs
testb
inc
sbb
nop
incb
cmp
fdivl
and
lcall
rorb
imul
js
xchg
pop
push
test
neg
aad
xchg
xor
psraw
scas
int3
mov
ret
jl
test
fnsave
das
mov
pop
or
ret
xchg
inc
and
aas
mov
leave
movsl
jle
fwait
dec
or
test
xchg
pushf
cmp
pop
xchg
adc
mov
mov
mov
lea
pusha
pop
jle
or
xchg
sbb
nop
inc
fdivs
je
add
addr16
aas
jne
inc
rcrb
in
pop
popf
es
enter
das
and
xorl
stos
and
rcrb
popa
push
pop
ror
sahf
outsb
inc
and
imul
je
arpl
adc
mov
mov
jge
stos
pop
adc
icebp
add
stos
dec
add
xchg
addl
test
adc
jp
pushf
in
in
or
or
outsl
lds
repnz
or
mov
sahf
pop
outsl
aam
jp
dec
xchg
inc
aam
pop
jae
and
popa
sbb
sbb
dec
rcr
adc
aad
clc
out
or
inc
inc
rorb
pushl
adc
sbb
cwtl
add
ljmp
dec
or
push
lahf
xor
push
xor
xchg
or
loop
jle
cltd
stos
aam
add
fcoms
adc
movsb
sbb
pop
lret
xor
sbb
repz
out
sub
pop
cld
outsl
loope
sbb
xor
test
divl
dec
pop
or
lahf
loopne
jae
repnz
dec
insb
mov
mov
pop
xor
data16
aad
dec
aas
cli
mov
mov
jne
lret
es
pop
lock
dec
add
rcl
or
xorps
mov
ljmp
push
stos
adc
inc
mov
repnz
push
in
add
xlat
mov
xchg
in
cmpl
push
movsl
icebp
fs
mov
sub
inc
sbb
push
test
shll
xor
mov
cld
fmull
popf
or
clc
jno
aam
push
int
push
aaa
lret
lret
sbb
dec
jmp
dec
popf
insl
cmc
rorb
or
dec
xor
ja
imul
enter
mov
push
pop
push
fildll
ljmp
dec
dec
dec
cmp
push
sbb
push
mov
mov
sub
cmpsl
add
es
mov
jo
aaa
xor
outsl
test
stos
ds
cmc
pop
or
dec
lea
aad
fndisi(8087
inc
add
bound
loopne
adc
jg
pushf
sub
icebp
cld
movsl
shlb
negb
test
iret
mov
jg
leave
test
test
pop
pop
or
fwait
push
cmp
push
jb
ffree
outsb
fidivrl
into
push
out
rcrl
call
mov
lret
movsb
push
bnd
and
lcall
fnsetpm(287
push
mov
imul
jmp
lock
out
imul
mov
pop
or
mov
push
push
push
repnz
jnp
mov
xchg
cmp
in
jae
icebp
mov
mov
les
cmp
stc
mov
rolb
sub
dec
imul
xor
lret
sti
lea
js
xchg
cmc
mov
inc
ret
push
arpl
test
jmp
popf
push
in
out
sub
mov
sbb
inc
dec
push
push
inc
fldenv
mov
add
insl
inc
push
test
repnz
mov
ds
add
mov
sbb
test
imul
mov
arpl
stos
dec
adc
stos
std
adcb
es
std
xchg
inc
decw
xor
pop
mov
sub
test
sbb
dec
add
loope
out
xchg
mov
gs
inc
xchg
rcll
les
push
push
test
loopne
cmp
jbe
sub
fstpt
cmc
out
cld
mov
jmp
shll
mov
jmp
in
mov
repz
js
imul
or
or
mov
clc
in
dec
int3
rcl
sbb
fnstsw
loope
pusha
adc
mov
sar
xor
lock
out
dec
pop
push
push
adc
inc
xchg
adcb
das
test
iret
push
loop
sub
mov
or
or
add
ljmp
punpckhbw
inc
cmpsl
adc
outsl
jnp
inc
mov
mov
or
sub
bnd
jo
jnp
jno
mov
cmp
jb
jmp
daa
or
inc
sbb
add
push
rcrl
lds
rcrl
lock
jg
dec
in
xchg
pop
sub
and
out
pop
pop
js
xchg
jle
sub
mov
pop
cmp
imul
adc
sbb
cmp
lret
sbb
mov
xlat
mov
pusha
inc
fmuls
jl
fisttpll
repz
fyl2xp1
or
mov
rcrl
repz
mov
pop
adc
in
sbb
shrl
xlat
xor
jmp
loopne
scas
or
cmp
jnp
or
and
sahf
jmp
mov
mov
push
cltd
sub
scas
daa
xchg
mov
orb
xchg
adc
dec
mov
mov
sub
or
enter
fsubs
daa
out
and
xchg
movsb
repz
scas
iret
push
push
lods
mov
lret
xchg
in
into
and
insb
ret
sbb
dec
ljmp
shrl
push
jne
test
daa
ss
dec
mov
xchg
rcrl
mov
pop
loop
jle
cmpsb
fmuls
jne
push
lret
mov
hlt
xor
pop
cmpb
sub
xor
jno
sub
out
lret
daa
subl
sub
jle
sub
inc
test
lahf
fldcw
lahf
jbe
js
sbb
cmp
mov
and
or
sub
sub
cmp
sbb
mov
loope
adc
sub
push
mov
dec
sbb
jo
mov
subb
jl
nop
sub
jmp
jns
fdivr
repnz
in
cmpl
cmc
into
push
mov
popa
mov
xchg
and
push
add
inc
jnp
dec
inc
mov
divb
daa
cltd
arpl
and
into
sub
aas
adc
gs
out
inc
add
xlat
and
mov
es
inc
shr
adc
repnz
pop
lods
incl
jp
fmull
fwait
stos
or
sbbb
push
icebp
int
mov
mov
push
ret
cmp
inc
in
mov
push
inc
in
jno
inc
mov
xchg
pop
repnz
jle
add
cwtl
out
fidivl
loop
mov
gs
dec
adc
loop
jg
jns
and
mov
imul
dec
and
adc
subl
sbbb
push
pop
call
xchg
pop
push
pop
inc
sbb
push
lds
dec
test
jle
jg
inc
pusha
push
test
cmp
jle
aaa
add
testb
mov
out
add
xchg
sub
cmp
mov
rolb
in
mov
push
out
test
xchg
or
add
sahf
int
insb
jb
leave
mov
or
test
dec
and
out
data16
and
das
ret
dec
mov
testl
aam
xchg
fistps
sub
je
shlb
imul
pop
data16
out
cmp
mov
in
rolb
mov
jecxz
lcall
mov
pop
mov
sarl
push
aas
stos
movsl
add
loop
sti
adc
xchg
out
pop
fdiv
jne
pop
loope
loop
or
push
scas
pop
popf
les
cwtl
jne
test
in
cmp
jo
mov
cmp
mov
add
xor
xchg
lds
test
in
jp
jo
hlt
dec
xchg
pop
sbbb
push
sbb
and
popa
leave
shl
repz
fisubrs
out
imul
shll
and
sbb
push
iret
mov
clc
pop
pop
out
and
loope
mov
pushl
fisttpll
add
stc
mov
or
jmp
shlb
mov
popf
testb
aaa
jo
icebp
out
aam
or
in
nop
and
fstl
in
sbb
ret
pop
inc
pop
dec
mov
and
bts
dec
loopne
enter
icebp
sbb
loope
scas
mul
test
adc
xor
rol
shll
and
xlat
sub
cmp
int3
divl
cli
mov
loop
mov
cmp
mov
aas
xchg
mov
push
mov
push
cmp
rcr
and
repnz
jp
pop
ret
pop
adc
dec
pop
mov
adcl
or
adc
mov
mov
xor
lea
jl
movsb
in
repz
inc
pop
leave
pop
int3
inc
je
ficomps
mov
loopne
push
leave
ficompl
push
mov
xor
icebp
mov
movsl
add
mulb
shrl
out
mov
and
stos
lods
jge
mov
outsb
cmpl
mov
xorl
addl
pop
fmuls
es
cmpsb
icebp
ret
pop
pop
mov
repz
rcrl
sub
inc
inc
sub
fisubl
mov
testl
pop
jns
in
mov
xor
ljmp
lret
js
mov
mov
add
in
jmp
mov
inc
mov
lods
xorw
and
test
das
inc
lea
add
out
inc
jg
inc
xchg
andnps
iret
and
xchg
movsl
arpl
in
add
pop
imul
inc
scas
lret
aad
out
xlat
dec
sbb
or
sub
mov
adc
mov
cli
scas
fistps
movsl
stos
int
shll
sub
ja
cwtl
sbb
push
insl
arpl
sub
cmc
fsubrl
insb
mov
push
bound
jge
fwait
sub
int3
sbb
or
ficoms
ljmp
sbb
jmp
mov
scas
xlat
push
cmc
loope
cmpsl
insb
pop
or
lea
int3
mov
jbe
mov
sbbb
mov
lods
pop
inc
cmp
jno
pop
test
nop
push
mov
imul
and
xor
cmpsb
pop
les
rol
or
out
cmp
push
xchg
xchg
int3
and
fs
repnz
sarb
ret
push
sub
fdivl
mov
into
mov
pushf
adcb
mov
cwtl
dec
push
outsb
rorb
insl
cld
or
outsl
pop
push
inc
mov
mov
mov
mov
in
xchg
and
dec
pop
jb
lret
xchg
jp
push
mov
adc
inc
mov
imulb
jb
jne
call
imul
inc
jb
xchg
sub
stos
ret
adc
mov
popa
fcomi
adc
sub
sbb
movsb
aad
rep
cwtl
mov
mov
xchg
out
jb
jnp
mov
add
mov
fiaddl
mov
lahf
adc
adc
xor
cltd
xchg
fstp
clc
mov
jmp
jne
cmp
dec
adc
clc
icebp
cmc
aam
seta
jp
sti
mov
mov
hlt
mov
jbe
aam
and
pop
cmp
mov
dec
fistl
cmp
cwtl
jbe
mov
mov
push
sbb
xor
or
xor
jb
lock
in
arpl
sub
fcmovbe
ret
jl
dec
cmp
iret
or
dec
or
sub
nop
jle
cmp
outsl
jecxz
imul
loop
mov
jle
lods
fiaddl
lret
pushf
pop
outsl
outsb
mov
mov
cmp
lods
scas
push
in
lcall
add
in
ficoml
incb
push
jns
andl
adc
cmp
in
cmc
jnp
mov
call
inc
mov
int
add
xchg
std
jns
imul
dec
mov
push
mov
push
lods
pusha
into
jp
fsubrs
test
adc
dec
add
lret
cmp
movsb
jnp
lret
cmpsl
divb
jns
mov
mov
out
insb
popa
inc
ficoms
out
xchg
hlt
inc
outsb
cltd
mov
and
inc
jle
pop
xchg
xor
xor
push
mov
sbb
jg
mov
and
ror
movsb
jmp
insl
inc
cmpsl
or
std
or
jno
or
sub
imul
pop
xchg
ret
loope
xchg
sub
aas
push
xorb
lds
and
adc
insb
xor
push
pop
or
cmpsb
dec
push
dec
scas
jno
mov
outsb
and
out
sub
loop
aas
push
test
lods
pop
or
mov
xchg
mov
xor
jge
pusha
dec
sub
aam
fidivrl
push
aad
rcl
dec
cs
out
and
imul
lret
push
adc
mov
loope
and
mov
sbb
dec
clc
ds
adc
sub
enter
mov
push
add
fistps
xor
movl
pop
and
mov
sub
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
push
mov
popf
cmp
or
fucom
xor
call
cs
loopne
out
sbb
xchg
leave
jns
rcr
mov
scas
cmpb
mov
lods
movsl
pop
loope
out
cltd
mov
ret
fstps
jns
cs
shr
inc
adc
inc
xchg
aam
stc
and
sbb
add
fldl
pop
arpl
stos
xchg
lds
repnz
scas
mov
adc
or
mov
mov
jno
mov
hlt
xor
adc
leave
adc
pop
mov
jno
pop
shlb
xchg
testb
jnp
adc
je
mov
cltd
inc
fsub
int
pop
mov
les
jl
nop
les
xchg
addl
les
jns
pop
das
clc
sbb
cltd
mov
adc
adcl
gs
dec
mov
mov
cld
mov
push
jne
les
stc
mov
adc
jnp
jg
sub
and
cmp
ljmp
pop
repz
pop
inc
sub
push
shll
aam
add
dec
push
inc
sahf
jecxz
call
or
in
xor
add
push
inc
incb
ljmp
cmpsb
fbld
dec
push
lcall
cli
rclb
dec
jmp
xlat
loope
stos
inc
jbe
sub
hlt
cmp
xor
mov
negl
mov
out
sub
sbbl
add
lret
dec
and
jle
nop
icebp
in
adc
mov
inc
add
xor
xchg
imul
rcrl
cmpsb
cs
and
gs
jge
fsubs
inc
mov
ljmp
sarl
fs
out
sbb
jnp
std
inc
rcrb
mov
repz
cld
sbb
mov
dec
jmp
pop
test
jle
rcr
xor
dec
jp
dec
add
aam
jmp
sub
inc
out
lret
inc
mulb
or
xchg
xchg
pop
pop
cmc
hlt
popa
scas
cmp
stc
inc
lock
jns
test
xchg
jnp
sbb
dec
and
mov
jnp
cmc
call
dec
xor
aad
push
roll
jae
push
outsb
fisubrl
push
ljmp
sbb
xchg
fisubs
imul
push
add
and
leave
add
inc
push
xor
lahf
les
je
and
out
push
push
sbb
sti
jg
std
movsb
xchg
lds
cmp
or
push
sbb
repnz
push
hlt
out
dec
gs
cltd
dec
lea
pop
paddq
test
in
sbb
das
push
sbb
addr16
sbb
loop
jbe
fucomi
mov
pop
flds
pop
cmp
stos
lods
jnp
jecxz
cmp
idiv
mov
fs
xchg
movsb
popl
pop
adc
pop
sub
int3
shl
shrl
movsb
out
pop
or
push
mov
lds
test
inc
push
push
shll
adc
scas
sbb
xor
or
cmp
xor
sub
cmp
movsl
out
data16
lret
adcl
fildll
or
scas
push
imul
or
test
das
data16
mov
hlt
jo
jecxz
popf
jle
mov
out
cwtl
push
xchg
stos
pop
mov
paddw
mov
cmc
push
bound
pop
lret
dec
sbb
push
std
and
out
push
push
pop
push
xlat
mov
popf
enter
andps
cmp
xor
push
in
mov
lds
ljmp
js
mov
lret
sub
xor
and
jb
into
notl
pusha
in
mov
jne
sbb
cmp
fcomps
ret
or
xor
sub
sbb
push
sbb
add
xorb
inc
sti
cmpsl
jb
or
lds
sub
xor
sbb
push
sbb
xchg
dec
orb
push
mov
mov
jo
insl
into
mov
les
push
ja
adc
cld
pop
cmpsl
mov
push
cmp
sub
fdivrs
inc
sub
and
fistpll
pop
jge
clc
or
loop
outsl
movsb
add
add
push
sbb
es
popf
sahf
divb
dec
cs
roll
divb
xchg
out
or
xchg
adc
jnp
ljmp
mov
sbb
mov
imul
iret
inc
addl
sub
or
push
push
jge
mov
and
pop
lock
lods
xchg
test
mov
lea
xchg
andl
fstpl
mov
outsl
lret
int
mov
or
out
stos
push
jp
push
enter
fsts
jns
mov
xor
sbb
adc
push
jb
sub
adc
bnd
mov
and
test
movsb
test
rol
arpl
cmp
cmp
das
pop
scas
jg
mov
sub
shll
mov
or
push
subb
mov
mov
shrl
mov
mov
pop
std
test
sub
inc
jo
mov
outsb
mov
cld
imul
int
stc
cmpsb
punpckhwd
jmp
xlat
adc
jb
sbb
inc
fisubrl
aad
push
in
into
adc
lock
outsb
pusha
sbbl
pop
fxch
mov
sbb
int
dec
clc
mov
stos
fnstcw
xor
mov
mul
adc
xor
repz
pop
in
adc
dec
jge
sub
arpl
inc
push
lret
inc
fstpl
pop
pushf
test
test
and
mov
lcall
adc
push
test
inc
cmc
sti
jl
or
leave
aad
rorl
cmovge
popa
pushf
dec
push
jge
loop
pushf
fwait
cld
or
cmc
push
test
jecxz
mov
inc
out
ja
adc
xchg
xor
mov
push
xor
pop
sbb
push
adc
push
jge
cmp
test
adc
mov
or
pop
or
xchg
ret
pop
xor
mov
inc
rol
addr16
cmpsl
fwait
test
pushf
sti
sub
cmp
xorb
imul
inc
sub
mov
inc
call
lahf
lds
xor
insb
inc
dec
and
js
jnp
xchg
cmpsb
sbb
and
mov
clc
fimuls
outsb
sbb
jle
stos
xor
outsl
es
lea
and
sbb
and
jp
inc
jp
adc
into
push
xchg
ljmp
ret
repz
clc
xchg
out
leave
pop
inc
fwait
out
pop
icebp
imul
and
test
fistpll
or
jl
jne,pt
lcall
int
fs
sti
push
scas
insb
mov
lods
push
sar
xor
pop
out
aaa
movsl
xor
insb
cwtl
test
aas
xchg
shlb
push
mov
imul
inc
mov
mov
pop
jle
jl
push
jnp
sbb
inc
adc
cld
in
cmpsb
pop
orl
push
ret
aas
adc
dec
pushf
roll
pop
rcrl
lret
fdivrl
pop
xchg
js
nop
nop
xor
pop
dec
enter
es
jo
xchg
add
cmp
nop
mov
ljmp
mov
bound
mov
sbbl
mov
or
push
push
push
sub
push
cmp
fwait
arpl
add
jb
fistpll
pop
push
imul
xor
popa
cltd
adc
jmp
loop
cmpsl
jno
adc
loopne
push
jbe
std
cltd
leave
fsts
inc
pop
jnp
fsubp
shlb
push
mov
mov
das
xchg
cmp
scas
loopne
sbb
and
pop
test
andl
cmp
fs
mov
dec
ja
push
push
push
add
pop
mov
ljmp
dec
dec
outsb
sahf
int
inc
popa
adc
mov
gs
sub
cwtl
sarl
test
xchg
dec
cmpsb
repnz
dec
jne
jl
mov
sbb
cli
negl
jmp
xor
lods
jb
imul
in
jp
lcall
imul
push
jne
int3
sub
loop
lds
repnz
mov
xchg
mov
fisubl
aad
inc
mov
mov
inc
mov
test
inc
push
lcall
xor
leave
fildl
mov
adc
sbb
sub
jmp
inc
jl
aas
mov
inc
scas
xor
or
repnz
xchg
imul
xchg
je
pop
lds
adc
popa
sahf
test
push
jecxz
sbb
add
push
sub
mov
mov
insb
inc
xchg
xchg
dec
xor
sub
push
pop
jne
dec
adc
xchg
scas
nop
arpl
popf
nop
ja
leave
pop
cmpsb
sub
lods
leave
inc
inc
jp
adc
in
fnstcw
jae
and
lods
aas
inc
mov
imull
fmull
fwait
in
pushw
les
lahf
out
inc
and
jnp
out
jmp
sbb
jb
jecxz
mov
mov
inc
ds
push
test
and
roll
xchg
pop
push
jnp
hlt
add
cmp
dec
roll
es
push
adc
addr16
sti
xrelease
mov
inc
push
xchg
push
ret
incl
jbe
stos
jns
lcall
paddq
inc
cmp
and
ja
xor
daa
ficoms
pop
mov
xchg
mov
mov
aas
mov
btc
cwtl
or
repz
mov
aam
push
aas
mov
shll
add
addr16
into
or
xor
movb
xchg
add
xchg
cmp
les
mov
cltd
xor
out
mov
aam
xchg
mov
gs
xor
jb
mov
and
xor
push
out
mov
ljmp
or
pop
push
sti
out
push
jg
dec
jle
mov
inc
inc
sub
sub
les
xchg
lea
adcb
pusha
lds
cmp
jge
cmp
cmc
dec
add
mov
xchg
stos
push
imul
outsl
sbb
mov
xchg
cmp
mov
decb
dec
loop
adc
or
or
pop
push
in
mov
push
pop
sarl
jns
and
mov
mov
enter
mov
test
xchg
mov
lods
ret
in
rcll
inc
cmc
jae
pop
sub
mov
lods
je
and
and
push
mov
sbb
in
in
mov
or
imul
int3
and
push
adc
inc
pusha
push
or
shll
and
xchg
test
iret
xchg
inc
inc
sbb
arpl
pop
mov
fdivrp
andl
bound
xchg
stc
jbe
icebp
xchg
xchg
jns
mov
clc
aas
insb
bound
jp
xor
or
leave
out
sahf
ret
pop
adc
shrb
cmpsb
xor
inc
scas
pop
sub
jle
xchg
adc
mov
and
mov
aas
test
data16
bound
push
jb
xor
test
cmp
push
inc
je
pop
cmpb
outsb
aaa
imul
pushf
test
cli
push
push
test
cmpsl
cmp
jae
pop
xor
ds
mov
cwtl
push
and
ss
lods
add
add
shll
loopne
mov
cmpsb
ret
push
cs
test
mov
lea
xchg
mov
sti
pop
push
push
shrl
jle
ljmp
les
cwtl
mov
sahf
push
sub
pop
sub
pusha
pushf
es
lock
cmpsl
mov
rcrl
mov
mov
int
hlt
cmp
adc
jecxz
or
adc
fiadds
inc
daa
sub
mov
cmp
loop
out
call
mov
or
repnz
js
fimuls
and
inc
outsl
fs
out
sbb
out
cmc
jnp
add
sbb
fdivrl
mov
test
pop
scas
adc
shl
nop
sbb
pop
inc
in
fidivl
loop
dec
jnp
dec
sti
shrb
rcrb
ljmp
pop
xchg
addr16
or
add
push
inc
cli
fdiv
jp
fadds
jg
jecxz
mov
idivl
mov
imul
jmp
loop
int
xchg
in
xor
and
loope
in
jmp
shrb
mov
jne
lea
int3
inc
pop
sub
out
or
test
jecxz
std
add
scas
cmp
lods
ja
jg
inc
inc
int3
xor
or
lea
lods
in
cs
pop
inc
or
add
paddb
cmp
pop
movsl
cmp
pop
out
or
movsb
inc
adc
mov
mov
dec
out
sbb
mov
mov
mov
cmp
sbb
hlt
pop
xor
repnz
inc
jecxz
mov
add
jl
cltd
mov
repnz
push
dec
inc
jae
jo
iret
movsb
iret
lock
repz
mov
pop
sbb
call
sbbb
dec
ret
ror
repz
pop
xchg
es
int
adc
testb
sub
cmp
stc
into
fwait
inc
sarl
daa
fstpt
fistps
insb
push
xchg
inc
adc
iret
cli
call
mov
stos
adc
fsubr
aad
leave
sub
inc
or
popf
lret
cltd
les
ret
stos
pop
cmpb
xor
bound
xor
sahf
stc
pop
mov
cmp
cmpsl
negb
pop
cmpsb
int3
inc
daa
xlat
cmpsl
outsl
mov
xor
sub
push
inc
sbb
lcall
pusha
out
mov
cmp
lds
sub
in
push
pop
dec
inc
push
push
hlt
lret
mulb
pop
test
inc
sub
adc
imul
dec
sub
stos
testb
cli
test
lds
setp
imul
jns
xchg
std
into
sbb
add
stc
aam
xchg
stos
bound
jno
inc
test
xor
test
out
rcrl
jb
adc
pop
sbb
rcrb
fidivl
clc
inc
dec
mov
js
shlb
loope
cld
push
jp
xor
lret
pop
sbb
mov
icebp
int3
gs
or
aad
mov
cmp
or
xchg
xchg
sub
scas
mov
push
cwtl
inc
decb
sbb
stos
outsl
push
mov
xor
jp
adc
mov
je
cmpsl
sub
xor
in
inc
inc
ja
in
nop
rcrb
insl
stc
xchg
cmpsl
pop
addr16
sbb
xchg
lret
sub
sbb
jns
jns
loop
fbld
subb
mov
fwait
jno
lret
lret
in
xchg
push
jle
mov
popf
fnstenv
dec
stc
jmp
fsubl
out
push
fstpt
mov
push
lock
sub
or
xorb
call
cmpsl
roll
jnp
adc
int3
cltd
mov
xor
push
pop
clc
lea
pop
scas
outsb
jmp
adc
or
add
lods
scas
mov
out
int3
mov
dec
mov
and
or
mov
push
das
xor
and
stos
add
push
mov
sub
cmp
jb
js
mov
out
dec
mov
in
cmp
mov
pop
popa
xchg
test
jp
aaa
enter
sub
and
out
xchg
into
sub
jge
sub
jp
gs
bound
pop
scas
fcmove
cmp
bnd
mov
scas
sub
adc
and
out
cmp
mov
sbb
pop
gs
dec
out
daa
sub
pusha
sbb
add
mov
adc
fstpt
cmp
sbb
xchg
into
pop
mov
dec
adc
jmp
bound
lods
cmp
ds
loopne
pop
fs
cmp
add
or
xlat
and
rcrl
pop
mov
je
dec
pushf
pop
roll
lahf
xchg
daa
pop
mov
jl
insb
and
mov
mov
call
cmc
shlb
std
dec
frstor
dec
stos
add
adc
cmp
jnp
xchg
fadds
mov
push
xchg
jne
mov
jne
sbb
mov
jmp
push
adcl
bound
push
mov
out
xchg
inc
lds
jo
jb
ror
sub
or
ja
mov
cmpsl
cmc
dec
jnp
js
test
xlat
adc
aas
jl
ljmp
bnd
loope
add
pop
gs
mov
ret
adcl
in
outsl
in
mov
sbb
mov
cs
xchg
icebp
add
add
push
daa
movsb
addr16
lret
cmpsb
add
test
ja
push
fwait
add
adc
jge
inc
call
xor
mov
jae
test
out
pop
popf
pop
dec
int
adc
loop
or
aam
shll
daa
test
out
cltd
fs
test
addr16
cs
cmc
lods
int
bound
clc
lock
push
jmp
imul
icebp
scas
jecxz
sbb
sbb
in
inc
pop
xlat
pop
xchg
int3
cmp
add
pop
mov
cwtl
xchg
add
imul
in
aas
in
cli
jle
mov
data16
sti
movsl
xlat
sub
push
data16
mov
add
mov
dec
out
mov
scas
popf
jl
cmpl
lret
mov
lods
fsubr
ja
scas
test
sub
xchg
addr16
mov
orb
dec
je
mov
pop
int3
movsl
rorl
pushf
cwtl
xchg
and
mov
imul
aad
xor
mov
mov
or
cmp
mov
mov
aas
sub
inc
sub
sbb
xchg
std
xchg
pop
add
mov
sbb
ljmp
repnz
sti
idivl
popf
or
and
adc
out
sub
dec
addb
jns
sbb
xor
add
or
jbe
pop
hlt
add
xchg
xchg
stos
gs
dec
inc
test
lods
xor
into
gs
out
or
pop
stos
and
dec
xchg
xchg
xchg
popa
sarb
sbb
add
jle
mull
fwait
testl
shl
jnp
pop
clc
pushf
mov
or
inc
mov
les
roll
xchg
int
lret
pop
inc
xor
mov
adc
test
pusha
lea
cs
sbb
cltd
mov
lret
sar
movsb
sub
inc
fwait
movsb
jne
xor
shll
out
imul
mov
mov
bound
into
sbb
imul
inc
dec
jmp
insl
xchg
or
inc
mov
icebp
sbb
in
int3
rcrl
sub
sub
cmp
imul
and
push
jl
cmp
push
roll
mov
fadds
setb
lock
sbb
mov
push
or
outsl
mov
and
jecxz
push
cs
and
cmp
xor
outsb
and
dec
notb
mov
jl
aaa
popa
inc
pop
aaa
jge
pusha
call
fsub
mov
scas
dec
ret
loop
movsb
push
add
mov
outsb
maxps
push
ret
test
arpl
dec
xchg
aas
iret
ljmp
mov
sbb
sti
shrl
imul
aas
dec
daa
loop
daa
xor
dec
movsl
xor
mov
dec
jmp
fwait
mov
js
cmpsb
das
repnz
aad
shl
cmp
into
outsl
or
or
fiadds
les
push
mov
std
and
mov
ja
push
jl
gs
mov
mov
mov
test
adc
dec
add
pop
mov
popf
addr16
sub
mov
cmc
mov
in
cltd
cmp
sbb
ret
adc
ficoms
inc
sbb
push
ljmp
or
push
nop
popf
dec
outsl
scas
push
ficoms
mov
sub
mov
in
sahf
ljmp
xlat
lods
and
pop
gs
add
pop
cmc
scas
cmp
and
dec
scas
enter
es
push
and
imul
and
pop
sbb
std
mov
xchg
aas
sub
ds
jbe
pop
pop
mov
hlt
bound
sbb
jno
mov
xchg
cmp
dec
xor
shll
nop
sub
mov
add
xchg
mov
outsl
insl
pop
popa
mov
aaa
push
fwait
mov
prefetch
or
insb
lea
add
mov
pop
jnp
fmulp
add
jbe
outsb
dec
cmpsl
mov
aad
ret
cmpsb
mov
add
test
in
adc
popf
inc
fisttpl
or
in
cmp
and
mov
mov
test
cmp
cmc
push
fdivrp
and
gs
jmp
jmp
rcrl
push
push
out
int
push
push
enter
jp
mov
fstpt
scas
int3
shll
sub
cmc
inc
push
repnz
mov
sub
dec
push
jecxz
xchg
inc
hlt
push
dec
js
jnp
adc
xchg
cli
jno
and
pop
movsl
stos
das
shrb
loopne
push
pop
dec
lock
cld
sahf
pandn
insl
mov
push
xor
pop
test
xchg
rcll
add
xor
mov
popf
sbb
scas
mov
repnz
das
cmc
pop
or
xor
sub
lds
into
loopne
adc
outsl
or
loop
mov
ret
rcrl
cli
or
jo
lret
jle
mov
mov
out
enter
pop
xor
movsl
stos
dec
frstor
int3
push
test
xlat
sbb
mov
ds
dec
jg
sbb
fwait
popa
sub
call
pop
div
sbb
hlt
adc
repz
cmp
xchg
jg
das
push
icebp
xorl
imul
add
and
je
add
ss
cltd
mov
cmp
es
adc
mov
jmp
push
ds
enter
sti
test
sbb
xor
leave
sbb
adc
pop
daa
imul
pop
add
mov
daa
mov
cltd
xchg
insb
out
sbb
dec
pop
and
in
pop
icebp
xor
fwait
in
cmp
insl
inc
sub
or
inc
arpl
or
mov
add
pushf
xor
std
mov
dec
add
bound
or
stc
mov
nop
lea
xchg
into
outsl
lods
imul
sub
fnstsw
scas
cltd
ret
add
imul
jnp
fwait
nop
imul
sub
je
sbb
test
push
ret
sub
hlt
in
sbb
loopne
outsl
push
test
iret
hlt
jnp
pop
sbb
in
scas
push
fs
xor
cmp
cwtl
sub
aaa
outsl
cmp
and
add
inc
mov
dec
or
mov
jmp
xchg
xlat
arpl
repz
stc
or
and
sbb
in
jge
notb
dec
sbb
addl
cmp
cmp
mov
lods
sub
add
sahf
fldl
xlat
push
out
or
pushf
and
mov
xlat
arpl
xorl
cmp
ja
pop
negl
lcall
xchg
sub
mov
test
adc
mov
test
mov
ss
rcrl
nop
push
pop
jl
fnstcw
mov
ficoml
dec
sbb
mov
mov
jns
shll
dec
add
and
outsl
sarl
mov
xorl
cmp
push
stc
jbe
cmpsb
shr
arpl
cmp
jae
and
dec
test
add
aas
arpl
repnz
jno
adc
mov
lcall
push
push
sub
sub
push
rcrb
scas
shrb
sbb
cmc
xchg
jmp
xchg
into
in
loope
jmp
inc
or
in
inc
aaa
lea
lds
pop
fs
jg
and
popa
test
sbb
pusha
out
data16
stos
sub
imul
addb
xchg
xchg
addr16
hlt
sti
mov
test
cmp
lods
and
and
ret
stos
or
test
pushf
mov
or
clc
mov
cltd
push
xor
dec
cmp
adc
fisubl
add
cmp
push
adc
stc
mov
mov
cmp
cmp
outsb
mov
xorl
mov
jno
sbb
je
std
test
and
mov
pop
dec
cmp
cmp
insb
cmpsb
jnp
mov
aas
xchg
push
pop
mov
je
xchg
incl
fldl
push
pushf
mov
sub
fwait
or
pop
pop
popa
push
adc
sbb
outsl
test
sbb
mov
shlb
jnp
adc
stc
xchg
aas
outsl
add
movl
xor
repnz
and
adc
add
sub
inc
cmp
sbb
pop
adc
cmp
stos
xchg
mov
dec
jp
jmp
das
push
adc
pop
out
rolb
stc
lea
mov
jne
mov
sub
pop
call
stos
popl
adc
mov
adc
mov
or
ja
stos
push
imull
fdivrl
out
aam
xchg
cmpsl
adc
and
jmp
gs
arpl
stos
insl
dec
add
mov
dec
jne
push
mov
inc
mov
mov
push
fcompl
fs
inc
xchg
dec
push
add
pop
jl
push
loopne
stc
mov
sub
push
ss
std
xchg
out
fisubrl
mov
xchg
and
push
jp
pop
add
test
iret
mov
cld
or
add
testb
or
push
popf
dec
mov
ljmp
push
cmp
fwait
test
je
enter
lock
jb
sub
sbb
in
sahf
xchg
cmp
sub
pop
pop
scas
test
or
jne
jmp
jb
test
mov
xchg
mov
mov
sub
into
pop
les
adc
jns
add
adc
jmp
jp
jbe
xchg
enter
cmp
das
and
insl
repz
loopne
cmpsl
lcall
pop
jg
out
nop
mov
fwait
jne
ljmp
mov
sahf
inc
addr16
repnz
leave
pop
aam
and
push
pop
std
bound
testl
fsubrl
ljmp
stc
in
inc
cmpsl
cmp
rolb
ljmp
sub
pushf
clc
or
pushf
add
or
js
loop
inc
and
add
test
rcll
or
push
or
lock
loop
loopne
bound
adc
and
inc
fdivrp
test
lret
fcompl
int
repnz
sub
add
dec
dec
sub
sbb
pop
mov
das
pop
negb
test
sub
lods
add
jmp
push
or
adc
loope
shrl
mov
clc
jbe
repz
or
insl
ds
add
push
cld
or
aaa
fcmovbe
movsb
cmp
xchg
mov
in
in
data16
pop
xchg
mov
jmp
sbb
popa
imul
aaa
xor
xchg
mov
dec
imul
xchg
mov
aad
mov
nop
out
es
iret
repnz
repnz
lds
into
cmp
test
sub
jb
mov
jns
mov
mov
fildl
adc
cmp
adc
nop
cld
lahf
push
push
sbb
inc
sub
fsub
jecxz
fimull
sar
repnz
dec
pop
sti
mov
lret
mov
fnstcw
sub
adc
inc
lcall
loop
pusha
loopne
aaa
sub
jb
sar
daa
sbb
xor
mov
xchg
aaa
push
push
test
lea
adc
inc
cmp
cld
sbb
pop
popf
mov
xchg
shl
inc
inc
roll
fsubl
sbb
iret
test
fistps
int
lret
clc
aas
ftst
inc
int
pop
cli
out
out
dec
fs
sbb
xchg
lret
cmp
xlat
push
and
mov
or
xor
push
jb
jl
sbb
cmp
xor
inc
lock
mov
dec
sub
aaa
xchg
cmpsl
jl
inc
sti
mov
lahf
dec
int3
lahf
mov
inc
es
mov
lahf
cltd
jo
outsl
in
xchg
jecxz
cmp
cmc
shrb
add
sbb
scas
xchg
icebp
dec
push
push
stc
inc
jge
fs
test
jmp
mov
stc
sub
vandps
leave
sbb
test
insl
push
gs
or
cmpsl
fmul
mov
push
mov
xor
mov
pop
xchg
jae
cmpxchg
xor
imul
dec
lock
dec
mov
push
shl
push
jb
dec
or
popf
lahf
jb
filds
out
inc
pop
cmp
out
sub
xor
into
sbb
subb
push
mov
fdivrs
xor
std
mov
sbb
dec
pop
daa
and
mov
mov
push
and
mov
mov
fcompl
jle
clc
inc
sahf
btr
pop
mov
pop
push
movsb
inc
sbb
aad
sets
adc
loopne
lock
call
sub
push
les
je
ficompl
push
cmp
call
in
add
popa
mov
daa
insb
out
mov
pushf
pop
jmp
mov
xchg
jl
xchg
sub
das
imul
mov
mov
inc
int
sub
sub
int
outsl
imul
int
push
out
jbe
lahf
mov
mov
fwait
insl
cmpsb
xchg
push
mov
jno
outsb
mov
loop
lock
cmp
subb
jns
loop
push
mov
inc
adc
sub
pop
xchg
call
push
cmp
xorl
test
enter
mov
test
pop
int3
repz
xor
cld
jno
ficomps
jle
and
cmp
out
adc
arpl
ds
fbld
jle
mov
dec
pushf
jecxz
mov
sbb
in
cmp
popa
fstpl
pop
test
dec
aas
jno
lret
icebp
mov
test
add
adc
jbe
mov
xor
pop
jl
xor
aas
adc
pop
fldt
fadd
or
scas
mov
jg
rcll
arpl
mov
mov
scas
out
aam
in
aaa
adc
testl
dec
jnp
ret
push
cmp
push
int3
sub
repz
push
xchg
push
aad
jnp
out
jb
push
add
popf
push
adcl
or
pop
pop
daa
out
cmp
rol
test
push
jecxz
sub
lcall
sahf
mov
inc
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
cmp
xchg
rolb
subl
cmp
call
in
mov
dec
pusha
in
cmp
mov
inc
adc
lds
add
xor
inc
mov
adc
pop
push
mov
mov
into
pushf
dec
cld
xor
inc
cwtl
pop
mov
ss
test
mov
sub
les
mov
inc
xchg
and
es
dec
adc
test
in
add
inc
mov
sbb
lods
add
into
mov
cmp
loop
aas
fisubs
lods
xchg
inc
sbb
sarl
cwtl
adc
jg
push
jnp
sbb
mov
push
jns
loop
xchg
ss
mov
lea
dec
push
add
mov
jp
add
cmovbe
adc
ljmp
mov
and
cmp
mov
mov
outsl
fnstcw
xchg
jbe
out
sbb
sarl
and
fcompl
data16
pop
sbb
jp
cmp
sbb
sbb
jbe
inc
enter
out
lahf
jle
fstp
inc
xchg
into
fcoml
out
cmc
data16
xchg
ss
imul
repz
or
clc
pop
xor
orl
inc
jnp
scas
mov
mov
mov
in
mov
push
shlb
xchg
scas
in
fsubrs
cltd
or
mov
out
mov
mov
xchg
enter
pop
movsl
jge
loop
lcall
push
fistl
cmp
xor
push
cmp
jg
mov
incb
mov
adc
mov
push
mov
in
mov
xor
lods
dec
jns
ds
shll
inc
leave
fnsave
dec
sahf
push
imul
xchg
subb
xchg
or
and
stc
dec
cmp
add
fldcw
repz
hlt
xchg
cmp
jnp
push
sbb
jmp
sub
adc
pop
mov
mov
cmpsl
lods
or
cmp
dec
imul
mov
xor
xor
mov
push
inc
pop
add
mov
push
xor
sbb
in
cmpl
jmp
roll
jo
push
dec
aas
leave
sbb
iret
arpl
fs
inc
adc
pop
je
xchg
mov
call
add
mov
cli
jg
iret
mov
cmp
mov
enter
or
add
les
imul
mov
inc
loop
repz
inc
in
inc
push
push
popa
pop
adc
or
imul
lahf
out
dec
dec
sub
adc
jecxz
mov
xchg
sub
xor
in
outsb
sbb
push
mov
iret
stc
mov
mov
stos
cmp
mov
dec
mov
fdivrs
movsb
int3
js
mov
incl
sub
pop
mov
sub
add
jmp
sbb
xchg
cwtl
sbb
rcrl
push
fsubrl
sahf
and
mov
inc
sbbb
cmp
xchg
xchg
push
xchg
jbe
rcll
loope
mov
push
mov
mov
cld
sub
push
insl
fidivl
cmp
mov
std
push
jmp
sub
xor
xlat
dec
xor
xor
adc
cwtl
xor
pop
cmp
and
and
cltd
add
mov
sub
and
loope
push
fidivrl
jnp
int3
dec
xchg
into
adc
mov
test
pop
cmp
mov
push
aas
ja
cs
hlt
enter
in
pop
in
inc
and
fsubrs
dec
dec
popa
or
loopne
dec
addr16
jmp
cmp
jmp
sbb
mov
andl
inc
mov
popa
xchg
daa
sbb
and
cmp
dec
jnp
push
inc
in
or
jecxz
jge
popf
pushf
xor
popf
dec
rcrb
loopne
loopne
pop
push
dec
dec
pop
push
pmovmskb
push
mov
rclb
imul
mov
dec
cmpsb
aad
inc
leave
js
std
pusha
das
jb
addr16
nop
dec
xor
mov
mov
insb
data16
jne
cmp
xor
xchg
stos
mov
cli
cli
inc
movsb
mov
mov
das
fcomps
fcompl
or
xchg
loop
shrl
or
jecxz
loope
inc
pop
stos
andb
inc
mov
lods
push
adc
pop
xor
scas
fldenv
movsl
mov
xor
adc
mov
xchg
inc
mov
mov
sub
mov
jg
xor
test
sub
lahf
lahf
call
std
adc
push
sbb
pop
and
arpl
test
sub
call
je
int
pop
clc
pushl
mov
push
pusha
repnz
stos
loope
scas
in
pop
fsubr
iret
insb
popa
mov
lret
xorb
scas
ret
aas
mov
add
mov
fstpl
mov
jg
clc
addb
in
push
inc
adc
cli
dec
test
repnz
mov
mov
icebp
loopne
dec
cs
push
enter
xor
repnz
pushf
jle
add
pop
fs
dec
aas
and
adc
movsb
lcall
shlb
lods
inc
add
sbb
sbb
outsb
lods
fucomi
pcmpeqb
test
jbe
ss
push
ror
inc
xor
jbe
jno
pop
xlat
jb
pop
adc
ds
lcall
cmpsb
push
ret
pop
mov
test
ss
jno
sbbb
and
nop
xor
sub
idivb
mov
sub
dec
cs
ljmp
rorl
add
adc
pop
dec
jmp
pushf
dec
fdivrl
push
push
inc
or
mov
fwait
adc
mov
ljmp
insb
xlat
scas
push
enter
mov
aaa
lods
frstor
mov
mov
dec
push
push
xorb
cmp
dec
mov
pop
out
push
leave
xor
pop
subl
lret
out
pop
cmp
pop
incb
and
adc
inc
call
sbb
ret
add
insl
test
push
je
stos
lods
sahf
push
pop
sub
shlb
daa
push
push
inc
push
movsb
adc
inc
fldcw
jp
stos
pop
imul
add
scas
pop
repz
rcl
mov
mov
jg
daa
cmp
xlat
sbb
out
aam
rorb
lds
testb
inc
xor
mov
filds
mov
in
cmp
test
pop
scas
add
dec
bswap
ja,pt
jb
jmp
rcrl
mov
add
pop
int3
ljmp
pop
mov
nop
add
ret
ret
imul
popf
mov
lret
test
rol
cmc
push
and
mov
pop
sbb
mov
push
outsb
pop
aam
scas
loop
inc
jo
mov
int3
or
loop
mov
mov
out
jl
daa
push
mov
flds
stc
pop
push
in
pop
and
push
jmp
imul
shrb
inc
pop
push
sub
rcrb
ds
jo
mov
pop
xchg
add
inc
aaa
sub
jmp
adc
pop
fisttpll
sbb
call
aaa
fiadds
or
subl
cmpb
xor
xlat
out
sub
or
xor
mov
mov
mov
ficoml
in
xchg
xlat
pop
sbb
gs
xchg
pusha
xor
sbb
data16
sbb
out
movsl
pop
cmp
sbb
pop
and
pop
pushf
ds
jp
add
xchg
jb
pop
or
shlb
cmp
fstl
mov
pop
mov
dec
mov
ljmp
cmc
mov
out
in
mov
movsb
addr16
jae
jge
sbb
jb
pop
inc
lds
adc
scas
repz
xchg
call
mov
fs
adc
sahf
test
cmp
lcall
or
cmp
int3
hlt
xchg
push
repnz
sbb
ret
lret
mov
ftst
cmc
dec
add
inc
pushf
or
dec
mov
jmp
cltd
lods
cmp
jbe
or
xor
xchg
adc
in
add
and
adc
push
dec
in
sbb
or
leave
sub
cmp
lcall
aaa
cwtl
cs
fistpl
hlt
mov
in
mov
and
dec
pusha
call
inc
push
aad
cmp
jo
leave
scas
aad
repz
decl
cli
adc
dec
cmp
push
ret
mov
cmp
fs
add
loopne
mov
xor
jno
sbb
jl
or
vpcmpeqb
mov
in
cwtl
push
push
stc
xchg
add
mov
mov
add
leave
fisttpl
aaa
dec
test
sub
dec
or
mov
inc
shrb
hlt
xor
shlb
cmp
xor
movsb
pop
notl
shrb
mov
push
jb
mov
call
cmp
stc
sub
adc
je
sbb
inc
adc
pushw
cwtl
adc
loopne
outsl
pop
adc
sub
fcompl
jnp
xchg
shll
test
outsb
sahf
out
mov
das
jns
arpl
dec
stos
xchg
sbb
testb
stos
cld
dec
lret
in
jmp
int3
mov
push
jne
push
mov
mov
adc
sahf
mov
adc
push
dec
ja
mov
mov
std
mov
aad
add
outsb
cld
fcoml
test
xor
mov
je
add
jnp
push
push
mov
ficoml
repnz
aad
inc
rcll
and
cli
movsb
inc
and
cmc
test
dec
outsb
fdivrs
ss
xchg
test
push
mov
lods
jno
push
sub
xor
push
pop
insb
test
mov
fwait
mov
sub
sbb
sub
aas
ret
bound
pop
neg
int3
sti
mov
jp
je
test
repnz
ljmp
inc
mov
xchg
mov
clc
cwtl
cmp
pop
iret
cmp
in
sti
jbe
cmpl
jnp
pop
rolb
mov
jo
push
imul
inc
clc
popf
push
and
loope
dec
push
lahf
cmp
mov
sub
test
and
mov
cmp
sbb
ja
stc
xchg
mov
das
jecxz
addl
add
jnp
mov
sbb
gs
cli
negl
xchg
cmp
stos
pop
mov
mov
dec
or
lret
or
stc
push
test
mov
lods
xor
or
enter
popl
cwtl
jae
pop
mov
rorb
mov
divb
inc
jge
test
adc
outsb
roll
xor
jge
xchg
aas
stos
jg
xchg
mov
aas
push
dec
fdivrl
mov
jmp
gs
negb
loopne
xchg
scas
adc
and
add
into
ljmp
mov
js
pusha
or
sbb
xor
xchg
xchg
fprem1
lock
cmp
adc
sbb
mov
or
stos
pop
xchg
push
lahf
in
push
aas
mov
push
pop
icebp
fdivl
rclb
jno
addb
mov
sets
jae
dec
cmp
pop
mov
test
adc
rorl
add
sub
loop
aad
pop
xchg
enter
stc
jbe
pop
sti
mov
adc
cmp
add
cmpsb
sub
repz
sub
mov
enter
add
or
cmp
cltd
sub
fdiv
pop
imul
fstl
ret
mov
push
lahf
pop
jmp
xchg
test
dec
cmpsl
mov
repnz
fbld
cmp
add
adc
mov
pusha
mov
imul
mov
sub
xchg
ret
jecxz
fwait
adc
lds
shll
mov
stos
xor
je
or
fs
inc
cmp
xchg
or
les
movsl
adc
xchg
push
cs
test
fldenv
add
jb
aad
cwtl
loope
arpl
fidivrs
lret
test
in
sub
pop
adcb
cwtl
add
push
fucom
mov
aad
fwait
sbb
arpl
roll
push
bound
out
dec
push
dec
mov
imul
bound
ljmp
dec
aas
mov
pop
shlb
orl
mov
int
xchg
test
data16
addl
shrb
mov
ja
rolb
je
pop
sbbb
iret
jge
inc
mov
mov
out
mov
rorl
ret
mov
jmp
rclb
cmp
inc
stc
lods
pop
jmp
decb
dec
rcll
dec
pop
mov
out
in
add
aad
jbe
pusha
xchg
xchg
int
lods
sti
add
cli
mov
cmp
xchg
test
lods
add
push
xor
testl
mov
add
fldpi
pusha
out
pop
ror
mov
mov
mov
loop
sbb
add
push
popa
jge
cltd
iret
test
dec
sbb
dec
into
dec
xchg
sub
mov
push
repnz
into
movsl
mov
inc
aad
mov
in
enter
xchg
dec
scas
mov
and
je
push
loop
bound
jp
test
popa
xor
mov
sub
cmp
xor
loope
or
es
repnz
adc
and
cmpsb
mov
jns
fnsave
and
cmpsl
mov
dec
push
xchg
in
pop
clc
lods
movsl
ljmp
pop
nop
xchg
cmp
push
std
pop
subl
ret
cltd
hlt
push
ss
popa
and
sbbl
call
sub
fstl
lock
xor
sbb
dec
xchg
jnp
lret
xchg
add
jne
inc
sub
jno
push
adc
jo
mov
and
jge
std
aam
xor
hlt
sarb
inc
imul
aas
out
sbb
dec
sbb
lret
stos
loop
sbb
movsb
mov
dec
rorb
sbb
insl
cwtl
mov
aad
push
lods
lea
lods
fiaddl
push
imul
out
shlb
mov
ret
add
int3
mov
push
imul
mov
sub
scas
icebp
hlt
inc
icebp
mov
cmpsl
cmp
add
dec
dec
push
aaa
lret
fistl
repz
pop
and
lret
fcomi
jle
sub
mov
sub
mov
push
lret
lds
xchg
les
adc
out
xchg
stos
dec
cmp
call
cmp
repnz
jle
mov
add
fadd
roll
cltd
outsb
xchg
call
rclb
out
mov
imul
jmp
fmuls
inc
int3
es
sbb
pop
xor
daa
jge
cmp
push
iret
into
ficomps
or
in
enter
aad
pop
xchg
testb
mov
mov
ds
aad
cltd
sbb
pop
and
xchg
testl
mov
jl
ljmp
pop
or
call
imul
cmpl
xchg
inc
sti
mov
movsl
imul
testl
loop
mov
xchg
iret
inc
enter
in
cmp
mov
mov
xchg
xlat
add
cltd
push
das
cmpsl
stc
scas
into
pushf
sti
movsl
loop
hlt
inc
stos
fistpl
add
out
loopne
push
or
mov
movzbl
push
repz
mov
mov
or
mov
sub
imul
xchg
dec
lcall
daa
sub
lret
fs
jbe
clc
std
push
cmpb
xor
std
jle
into
pushf
and
pop
mov
pushf
pusha
or
rcll
mov
and
mov
push
icebp
mov
stos
xor
and
add
out
lds
dec
xchg
xor
inc
sahf
insl
ret
nop
jne
std
shl
dec
outsl
pop
aam
outsl
jne
les
jmp
inc
xorl
cltd
fdivp
lea
dec
nop
movsb
and
jl
cmp
lcall
movsl
lcall
xchg
data16
mov
mov
out
imul
adc
mov
ss
aaa
sbbl
jle
lock
inc
sbb
scas
and
xor
or
andb
jae
mov
cltd
iret
xchg
insl
stc
mov
out
test
into
jp
mov
inc
inc
lcall
mov
xorl
sbb
sbb
mov
xor
mov
fildll
push
in
repnz
push
hlt
mov
mov
xchg
mov
inc
mov
adcl
aas
call
push
testb
push
mov
insl
cs
fucom
sub
jmp
mov
repnz
xchg
mov
fwait
loopne
in
pop
cld
imul
adc
push
jnp
imul
pop
xchg
jmp
mov
lds
outsl
push
fs
add
cmpsb
insl
scas
lcall
arpl
dec
sbb
hlt
xchg
adc
loope
mov
mov
popf
jae
nop
out
inc
push
enter
int3
popl
dec
adcl
xchg
std
scas
dec
dec
std
daa
das
pop
mov
popa
test
or
lods
in
jmp
jl
pop
xchg
int
and
mov
inc
repz
xchg
mov
mov
or
ja
inc
push
rol
cld
popf
fldt
xchg
pop
jge
repnz
cmpsl
add
push
gs
lret
inc
in
movl
loopne
mov
jnp
sti
fiaddl
clc
repz
and
into
shlb
inc
fs
movl
or
call
xor
mov
inc
bound
mov
jmp
enter
movsl
xchg
test
test
pop
xchg
push
lcall
jne
outsl
jne
add
jno
jmp
or
icebp
xchg
aaa
ljmp
lret
sti
test
inc
mov
pop
fiadds
sbb
jb
add
cld
aaa
and
xor
orl
cmp
or
jnp
dec
adc
or
mov
insl
mov
xchg
outsl
dec
stc
push
jae
cld
push
pop
inc
mov
lret
fbld
push
jae
fs
fnstsw
insb
xchg
dec
dec
inc
rcrl
mov
icebp
loopne
iret
pop
xor
sub
cmpsb
xor
shrl
pusha
xchg
mov
and
xchg
mov
loope
test
stc
jbe
loop
scas
imul
fcmovnb
negl
das
jmp
cltd
pop
in
popa
add
fcmovne
add
mov
cli
jle
fcompl
fbld
lret
lea
push
nop
cld
cmp
sub
ret
fldenv
cmc
xor
cltd
hlt
cmpsb
out
add
mov
out
push
mov
mov
pop
adc
loope
das
mov
std
sub
inc
push
adc
mov
imul
repnz
push
mov
lea
int3
inc
fmul
dec
add
pop
adcb
call
out
ret
push
rclb
data16
loop
negl
adc
push
add
imul
jge
add
mov
lcall
pop
lret
push
jl
les
dec
scas
push
or
into
cmc
xchg
sbb
fisubrs
hlt
jl
call
xchg
mov
pop
imul
cmp
jae
inc
sti
lcall
dec
jb
cmc
jle
sbb
fwait
jecxz
push
jnp
std
inc
pop
outsb
lods
add
jmp
jbe
outsl
sub
negl
pop
and
fistl
stos
xor
jnp
in
xor
pop
ds
pusha
dec
gs
subl
push
out
mov
and
andb
adc
sub
mov
lock
or
insb
xor
dec
dec
or
xor
bound
int
mov
push
adc
iret
ret
cmp
push
pop
enter
or
fdiv
imul
lcall
push
mov
xchg
adc
push
mov
jo
mov
bnd
mov
sbb
enter
in
sub
out
add
jmp
sub
cwtl
inc
jno
dec
cmp
aad
or
push
popf
lods
jl
bound
in
push
inc
dec
push
daa
ja
out
movsb
out
jns
imul
xor
lds
jl
rcr
shll
fbstp
repz
xchg
dec
andl
sub
add
dec
fs
in
push
cmpsb
xchg
dec
aaa
out
dec
sub
lahf
sbb
sti
loop
ds
cwtl
adc
sub
scas
mov
mov
push
jp
jno
into
or
push
cmpsb
sti
jp
cmpsl
jns
in
sar
test
js
sub
test
push
filds
and
mov
push
rorb
mov
or
push
mov
loop
incb
imul
and
aam
pop
jmp
mov
ret
imul
faddl
push
xchg
addr16
in
jno
fs
dec
xchg
popf
hlt
movsl
loopne
paddsw
mov
push
aam
mov
or
sub
mov
adc
clc
in
sti
les
mov
or
inc
fnsave
pusha
sub
jle
notb
enter
lods
ljmp
rcrl
and
test
fsubs
lods
subb
mov
lahf
cltd
nop
sub
or
frstor
outsl
ror
js
push
jo
stos
xchg
jp
and
sub
out
test
mov
rcll
mov
scas
mov
cwtl
fdivrs
xor
fisubl
test
std
js
xchg
sbb
push
arpl
ret
stc
je
lcall
or
and
js
lds
ficompl
loop
xor
popl
and
xchg
lahf
fimuls
inc
jns
push
repz
jmp
lret
add
cmp
out
jb
pop
adc
dec
mov
addr16
fistpl
cs
loopne
inc
pop
mov
adc
adc
outsb
dec
pop
sbbl
adc
jne
out
inc
fsubrl
movsl
jle
mov
aam
nop
std
call
dec
lcall
clc
dec
in
inc
xor
shl
repz
inc
push
imul
mov
and
std
loope
inc
ret
push
out
icebp
push
gs
movsb
pop
jo
or
cmp
xorl
decl
mov
into
das
icebp
stc
in
xchg
or
jmp
test
leave
inc
nop
hlt
dec
ret
pop
aaa
xor
dec
ss
cli
dec
std
movl
inc
mov
jp
jle
xor
sbb
ja
push
push
mov
imul
add
jo
dec
push
insl
shl
mov
enter
push
push
bnd
mov
flds
sbb
test
lods
lods
xchg
mov
pop
xor
sub
push
aas
mov
cmc
pop
testb
dec
xchg
xchg
add
xor
xor
inc
jae
or
jnp
push
cmp
mov
rclb
pop
dec
and
adc
out
and
jbe
out
popf
mov
cwtl
daa
aas
call
or
out
lahf
aam
jecxz
jmp
push
cltd
daa
jp
or
jnp
or
push
test
fdivl
cmpsl
ret
push
dec
popf
out
inc
dec
push
mov
xchg
pop
add
cli
pop
js
dec
je
sbb
push
fucompp
xchg
cmpsl
add
pop
jmp
and
arpl
decl
dec
aad
adc
pushf
dec
mov
mov
cli
bound
jl
jmp
loope
xchg
sub
cld
ret
pop
gs
es
and
stc
mov
outsb
adc
ficoms
and
in
loope
fnstcw
xchg
aam
xor
test
xchg
pop
std
sub
adc
jno
cmp
pop
pop
lahf
xchg
cmc
mov
daa
orb
sub
push
fs
xchg
push
stos
mov
or
pop
add
aas
lcall
sbb
movswl
loopne
imul
push
lret
pop
add
push
bound
stos
xlat
mov
mov
add
insb
xchg
popa
test
out
das
inc
mov
xor
cs
and
lea
push
or
int3
addr16
lods
xor
cmp
sbbb
iret
out
vpshufhw
outsl
mov
xchg
arpl
popa
pop
int
fst
inc
icebp
lahf
push
push
inc
inc
cli
jo
out
cmpsl
mov
xchg
jo
and
repnz
push
es
push
rcr
sub
dec
mov
ljmp
out
add
inc
call
out
cmc
xchg
cmp
jmp
es
dec
je
dec
mov
and
int3
mov
lods
enter
fisttpl
stos
aam
lret
mov
das
mov
loopne
mov
xchg
cs
jecxz
imul
inc
loopne
lods
mov
dec
dec
lds
jg
lods
es
mov
gs
xchg
sete
fstpt
jne
push
ja
lods
jo
jns
dec
arpl
sub
dec
fisttpl
sahf
push
and
or
cmp
sub
inc
and
fwait
jb
jo
lcall
in
lret
pop
lret
fs
lock
jle
dec
mov
sbb
xchg
sub
push
xchg
inc
jne
bound
das
mov
mov
cld
out
xlat
mov
sbb
call
push
aaa
xor
andl
and
jnp
mov
nop
mov
insb
stos
push
mov
movsl
sub
add
xor
xlat
cs
or
lods
dec
pusha
adc
xor
xor
jns
in
loop
pushf
repz
lea
in
jae
mov
add
pop
xchg
aas
pop
jge
rcrl
sti
shlb
negl
push
push
adc
mov
fistpl
mov
pop
xchg
aaa
test
adc
pop
and
imul
push
jae
mov
stos
pop
xchg
pop
pop
and
mov
in
in
pop
sub
dec
push
xchg
test
cmp
xor
xchg
subb
mov
mov
add
leave
mov
arpl
shlb
inc
adc
dec
loopne
push
cmpl
shrl
jo
rcrl
pop
cmp
push
sti
sbb
or
lahf
pop
nop
dec
mov
sahf
cmp
mov
aas
dec
es
mov
fsubr
rcr
daa
or
sub
mov
add
xchg
pop
add
mov
xor
push
jb
push
push
jg
pop
mov
push
mov
mov
lds
outsl
test
cmp
ljmp
les
dec
jmp
push
inc
xlat
popf
test
rcr
jb
xor
outsl
mov
pop
cmp
push
mov
in
push
dec
in
fidivrl
shlb
aas
icebp
dec
mov
mov
and
repz
jle
xchg
pushf
int
out
jnp
movsl
push
pop
sbb
and
outsb
jns
rcrl
in
imul
pop
popf
std
ret
leave
jp
addr16
pop
sbb
mov
and
xchg
xchg
in
fcomp
and
mov
je
dec
push
xor
lsl
or
lahf
pop
arpl
in
sbb
dec
adc
fwait
mov
sub
outsl
mov
pop
mov
pop
mov
hlt
pop
inc
aam
dec
or
popf
lods
jbe
insl
hlt
xor
mov
lock
inc
jmp
lahf
fs
in
jge
aas
push
or
sbb
stos
ret
aas
insl
out
push
stc
rol
xor
das
std
mov
mov
pop
inc
and
mov
pop
lds
loopne
repnz
mov
in
push
xor
aaa
lods
add
lock
fisttps
cmp
lods
inc
pop
jl
sahf
xchg
sbb
mov
xlat
add
mov
popf
xor
mov
testl
mov
push
add
jo
push
xchg
es
rolb
inc
push
ret
mov
inc
lods
ljmp
sbb
push
push
pop
mov
scas
repz
js
push
repz
loop
ret
mov
xor
push
ljmp
shlb
int3
negb
mov
push
lds
mov
das
movsb
jmp
int
xor
stos
mov
push
lcall
inc
std
in
mov
push
and
enter
rcrb
push
sub
dec
mov
dec
insb
in
push
stc
dec
daa
mul
iret
out
addr16
xor
sbb
mov
push
test
add
pop
inc
lahf
aad
jnp
adc
clc
xchg
stc
pop
xor
lret
mov
ret
adc
idivl
mov
push
xlat
sbb
hlt
lods
adc
inc
gs
fcmove
add
call
push
or
popf
imul
mov
mov
xor
out
cltd
shll
loopne
arpl
aaa
es
add
push
addl
and
nop
stc
stos
shrb
ss
test
mov
sub
add
iret
bound
jno
mov
mov
les
push
xchg
test
mov
push
or
jmp
popa
call
je
xor
lock
mov
xchg
push
jns
mov
shll
add
ret
adc
cmpsl
ss
lret
push
test
out
mov
movaps
lods
es
bound
outsw
dec
xor
daa
popf
fcomps
adc
sbb
shrl
mov
clc
aas
fs
ss
push
jecxz
jo
cmp
insb
shl
imul
mov
das
xchg
cmp
call
orl
xor
sub
push
cmp
shl
mov
imull
sarl
adc
sti
pop
push
lret
push
int3
inc
jmp
std
jo
arpl
nop
add
stos
cwtl
jg
push
imul
sub
dec
and
jbe
adc
cld
rcrl
sbb
stos
dec
nop
jae
popf
inc
jmp
lea
push
lret
pop
stos
outsl
adc
mov
imul
mov
xchg
insb
insl
dec
sub
jp
push
mov
add
insl
je
cmp
cmp
pop
lcall
gs
ljmp
hlt
pop
mov
xor
jmp
pusha
push
lock
adc
add
add
or
mov
pop
cltd
xor
pop
pop
pop
jnp
jmp
mov
push
bound
lock
test
aam
dec
mov
ds
jp
sub
scas
fwait
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
flds
scas
addl
movsb
sbb
adc
xchg
mov
dec
dec
imul
mov
repz
sub
jp
xor
jno
dec
and
adc
xlat
in
jmp
mov
ret
cmc
jno
jno
and
sbbl
ds
jge
xlat
mov
icebp
and
mov
xor
mov
fbstp
cmp
movhps
loopne
popf
idivl
dec
sub
push
and
sbb
imul
xchg
es
sbbl
nop
mov
mov
in
add
ja
popa
mov
mov
adc
push
add
gs
fdiv
mov
test
cmp
and
sbb
out
xlat
push
xor
inc
int3
mov
cmp
mov
icebp
les
inc
push
xchg
pop
out
fmull
push
lret
imul
rcrl
mov
inc
or
movsl
in
or
ss
or
cmp
loop
cmp
mov
addb
mov
lods
xor
push
ds
xor
je
fiadds
imul
orl
fs
cmp
mov
out
and
sub
sub
out
pcmpgtb
jae
jo
mov
xor
pop
cwtl
xchg
add
xchg
mov
int3
dec
arpl
fwait
mov
adc
mov
imul
inc
aaa
or
sub
jmp
data16
testb
dec
jmp
sbbb
sahf
fs
cmc
mov
adc
fwait
mov
adc
cld
int
dec
fisttpll
jbe
xor
push
test
fldcw
push
test
out
filds
out
shll
add
addr16
dec
xchg
adc
sbb
repnz
xchg
pop
and
sub
cmpsl
mov
xor
and
dec
and
dec
leave
xor
and
pop
cmpsb
jecxz
jns
pop
or
jl
adc
ret
pushl
in
fstl
jns
sub
sbb
cmp
inc
stos
fidivrl
test
xchg
enter
add
and
adc
ds
dec
cs
or
xchg
aaa
inc
xchg
xchg
xlat
clc
cmpsb
or
mov
movsb
lea
imulb
int3
mov
jp
hlt
bound
add
inc
and
iret
mov
stc
aad
ror
pop
inc
imul
fst
out
lret
insb
or
stos
mov
int
jmp
dec
notb
loope
xchg
mov
xchg
addr16
push
push
inc
insb
outsb
jg
push
mov
xchg
cltd
jg
and
lcall
in
jp
jp
loop
xor
push
mov
push
js
test
cmp
js
rol
sbb
or
les
outsl
in
lret
jbe
sub
jmp
iret
xchg
cld
xor
cmp
mov
pop
fmuls
jne
xchg
dec
push
insl
or
sbb
push
add
sub
and
das
in
icebp
cwtl
and
imul
xor
jge
jae
and
pop
cmp
cmp
insl
inc
cmpxchg
fcmovbe
cmpb
dec
repz
jb
stc
dec
out
fstps
test
iret
lock
cmp
or
test
jp
dec
xor
lret
aas
rolb
dec
inc
out
mov
add
inc
xor
xlat
or
fbstp
or
adc
and
lock
cmp
test
popf
ss
mov
int
or
outsb
xchg
popf
push
shrb
rorl
push
movsb
addr16
mov
cmp
jecxz
xchg
mov
adc
inc
xchg
into
or
inc
adc
cltd
mov
add
notb
add
cmp
dec
xor
add
lds
out
les
scas
sbb
mov
cmp
imul
add
in
or
jo
movsb
adc
mov
xchg
into
push
push
das
cmpsl
add
mov
ret
jecxz
frstor
pop
adc
add
push
push
push
pop
sti
push
dec
lea
stos
add
test
in
loop
or
pop
cld
xor
lods
bound
or
jae
xor
enter
into
and
roll
sub
nop
test
ljmp
mov
cltd
adc
in
cmpsb
insb
js
jle
and
je
mov
cmp
out
jge
into
cltd
hlt
popf
or
add
mov
jne
faddl
or
fdivrl
movsl
jecxz
pop
jno
add
mov
aaa
inc
test
inc
clc
bound
adc
mov
push
xor
dec
cmp
mov
jae
popf
pop
pop
into
mov
mov
push
data16
fidivrs
sbb
scas
dec
add
ds
xchg
push
cmpsb
jae
icebp
sti
sub
nop
mov
sub
adc
inc
or
int3
orb
aad
jge
mov
pushf
pushf
add
out
xor
mov
xchg
negb
hlt
imul
loop
mov
dec
pop
ljmp
aad
cwtl
inc
or
shr
cmp
mov
xchg
out
in
sbb
sub
rcrl
hlt
test
jmp
mov
push
outsb
pop
pushf
insb
gs
pop
rorb
mov
imul
push
dec
mov
dec
add
fs
stos
push
xchg
cwtl
and
and
fisubs
and
divl
adc
jge
in
push
cwtl
addr16
lahf
xor
bound
je
pop
inc
push
in
cltd
adc
and
popa
mov
push
mov
test
mov
adc
movl
dec
jno
add
dec
in
fiadds
pop
adcl
mov
xor
sahf
fsubrl
xor
scas
sbb
mov
jg
clc
sub
pop
test
pop
divl
loopne
testl
pop
mov
std
scas
sbb
mov
adc
rcrl
jg
insb
rol
jnp
pop
xchg
inc
jecxz
les
lds
push
ljmp
mov
test
mov
inc
scas
lcall
mov
int3
jmp
stos
enter
sahf
mov
test
sub
lods
es
popl
adc
aas
jne
mov
scas
jb
or
xorl
mov
movd
int
sahf
jne
cmp
fchs
push
jmp
in
mull
jl
cmp
in
scas
test
inc
cmp
ljmp
mov
cmp
stos
inc
mov
dec
push
jle
adc
lret
lods
xchg
outsl
ja
aam
mov
or
aad
pop
inc
in
movsb
mov
cmp
insb
push
or
into
loop
push
pop
aad
loopne
mov
fdivl
int
adc
push
gs
testb
ficomps
sbbb
lahf
lock
icebp
push
mov
xor
cmpb
data16
and
rolb
lret
cmp
aaa
xchg
xchg
and
sub
and
xchg
pop
push
pop
ror
xor
pop
jnp
cmpsl
leave
push
cmpb
fwait
sahf
sarl
test
movl
push
fiaddl
push
inc
cmp
cmp
faddl
mov
cmp
out
lods
mov
ret
mov
sbb
jne
lock
and
fdivrl
lcall
rorl
mov
sub
fcmovb
dec
test
sahf
jno
pushl
fsubs
cwtl
xchg
jmp
pushf
fidivs
test
loope
ds
popf
jo
out
movsl
xor
push
cmp
inc
xchg
lea
or
cmpsl
inc
push
pop
push
stc
xor
shr
and
pushl
call
xor
dec
or
mov
inc
pop
out
jbe
jae
mov
adc
mov
mov
adc
jne
fldlg2
xchg
in
jbe
loop
cwtl
add
push
push
jle
outsb
into
pop
adc
adc
xchg
add
push
mov
xchg
addr16
jo
mov
call
cltd
mov
aas
stc
mov
push
addr16
fucom
cmc
add
das
dec
inc
bound
xor
bound
stos
lods
push
dec
rorb
sub
xor
icebp
jle
cmpsl
cmp
mov
cmp
add
pushl
jmp
repnz
inc
jp
fwait
xchg
push
mov
pop
sbb
xchg
jecxz
leave
dec
fisttps
jne
mov
xchg
xchg
adcb
pop
xchg
fnstsw
adc
adc
lea
sub
insl
xchg
push
jnp
stc
es
and
adc
dec
aas
mov
fnsave
ss
mov
insl
cmpsl
mov
xor
xor
cld
and
inc
xchg
mov
push
xorl
jb
imul
xchg
dec
push
mov
xchg
aad
cmp
lods
add
lcall
or
pusha
sahf
imul
mov
jns
or
or
mov
cmp
scas
jge
push
inc
rcll
bswap
sbb
jns
sub
mov
leave
xchg
fwait
divb
jg
xchg
popa
xchg
daa
sti
call
outsb
cmp
mov
jno
aam
cmp
jle
jbe
test
sub
cmpsb
sti
pop
mov
and
xchg
inc
je
mov
sbb
cli
push
add
and
mov
lret
jns
xor
cmpsl
adc
popf
adc
cltd
pushf
or
adc
cmp
push
stos
divb
cmp
mov
adc
icebp
daa
push
and
xchg
out
inc
xor
jmp
stos
push
call
adc
cmp
pop
sbb
push
add
test
cwtl
jo
sbb
cmp
sub
xor
cli
inc
adc
xchg
pop
adc
cli
xchg
inc
int3
stos
hlt
adcb
sbb
mov
pop
int3
sbb
fildll
lahf
insl
addr16
or
clc
ljmp
shl
out
lds
mov
xchg
or
mov
xchg
add
add
imul
roll
sub
sub
outsb
mov
fdivrl
jb
popa
aaa
outsb
sbb
mov
lcall
inc
outsb
sub
sti
mov
sbb
cmp
sahf
aad
mov
and
jg
sub
jb
je
mov
xchg
add
icebp
fists
sub
mov
hlt
pop
mov
out
push
ret
in
cmc
jl
push
mov
pop
shll
mov
fmull
xchg
push
std
nop
lret
cmc
ss
xor
mov
je
lcall
xchg
and
cmp
icebp
push
mov
lds
sbb
loope
cmpsb
js
incl
or
repnz
push
cmp
gs
negb
out
xor
int3
mov
push
fidivl
mov
in
jb
sbb
pop
cmp
testb
adc
icebp
pushf
jmp
test
adc
jmp
inc
outsb
in
sbb
mov
int3
in
cmp
pop
ret
add
lods
jl
lock
fucompp
ljmp
add
out
and
rcl
mov
push
lcall
dec
mov
filds
xchg
jbe
or
jb
mov
in
inc
cmpsl
aas
xor
and
or
ret
cltd
scas
sub
xchg
mov
sub
pop
test
loopne
sahf
mov
jns
and
sub
imul
xchg
or
das
pop
nop
jae
mov
scas
mov
jl
nop
mov
addr16
outsl
inc
mov
dec
cmp
aam
push
inc
sub
iret
shlb
test
das
or
in
testb
jne
movl
push
in
pop
mov
dec
ss
cld
insl
jl
sahf
cs
movsb
or
gs
xor
or
fisttps
pop
data16
sarl
loopne
and
inc
hlt
jne
jge
fcmovnu
mov
pop
xorl
add
pop
jb
jge
fdivrp
pushf
jmp
roll
push
push
pop
dec
add
into
inc
es
fadd
clc
pop
pusha
aas
pusha
ror
loopne
insl
pop
daa
dec
aam
cmp
mov
mov
xchg
into
nop
push
xchg
push
daa
inc
jge
in
sbb
mov
jp
out
loop
call
in
movsl
out
ljmp
mov
push
out
cmp
jg
loopne
mov
xlat
jb
fstpl
add
dec
jne
mov
mov
fwait
xchg
adc
and
push
sub
sbb
bound
into
inc
gs
imul
push
jns
push
pusha
push
fs
or
sbb
pop
xchg
dec
subb
cmp
aas
sbb
ret
xorl
adc
mov
mov
movsb
sbb
sub
test
xor
mov
hlt
add
bound
adc
repz
stc
test
xchg
sbb
addl
imulb
jo
or
arpl
jg
mov
jnp
ja
and
xor
lahf
movsl
or
pop
cld
cmc
outsb
xchg
sbb
mov
je
test
mov
push
notb
inc
out
test
fs
addb
push
in
lret
inc
shr
or
sbb
int
jno
cwtl
out
sub
out
lods
cltd
movsl
pop
cmp
pop
or
data16
or
pop
repnz
pushw
pop
xchg
xchg
clc
imul
test
mov
fisubs
fstpl
int
cmp
cli
cwtl
mov
lock
mov
fcoms
xor
and
mov
pop
repnz
frstor
aam
dec
jae
jb
mov
sbb
pop
pop
pop
sub
add
in
xchg
outsb
popa
test
push
aaa
or
inc
inc
jae
movsl
push
lock
cld
shll
mov
jmp
rep
sbb
xchg
push
cmp
mov
addr16
push
cmp
mov
inc
imul
pop
xor
divl
sahf
mov
rep
int3
sub
dec
popf
addb
fcoms
jl
enter
bound
mov
out
subl
pop
or
dec
ja
sub
sub
cmp
std
xor
test
jecxz
dec
cli
sub
sti
les
mov
push
test
addr16
push
in
sahf
pop
out
mov
stos
int3
dec
stc
gs
out
jo
mov
and
scas
xor
sahf
lret
movsl
test
pusha
std
aam
jno
pop
divb
push
cwtl
pop
mov
xor
aas
jo
xorb
mov
adc
cmp
repnz
add
mov
sarl
bound
push
pusha
add
lea
push
fmulp
mov
pop
dec
sbb
jbe
aam
adcl
inc
push
pop
mov
outsb
mov
dec
ss
mov
sub
out
mov
ljmp
dec
cltd
inc
mov
outsb
mov
or
adc
pop
loope
rol
add
mov
insb
rorl
jnp
pop
mov
pop
fsubs
mov
add
xchg
push
sub
addr16
lock
mov
mov
outsl
and
or
add
xlat
loopne
adc
scas
shlb
xchg
mov
inc
fs
jl
cld
push
or
adc
fisttps
insb
movsl
adc
sbb
add
pop
icebp
push
push
and
cmp
push
inc
loopne
inc
les
pop
mov
and
aaa
in
or
inc
sbb
hlt
pushf
into
por
jns
and
push
sbb
dec
mov
pop
mov
lret
sub
lahf
jmp
sahf
lcall
in
mov
lahf
ss
mov
push
bound
add
shlb
cld
popa
xor
ret
and
stos
xor
sbb
outsl
arpl
mov
lods
xchg
xor
cld
lods
cmp
outsb
fsubr
je
lds
and
mov
lods
inc
fwait
dec
ja
add
xlat
mov
lock
jne
xor
sti
dec
xor
ret
adc
sbb
dec
aas
or
hlt
xor
mov
fadds
xor
pop
dec
jo
in
push
fildll
add
cmp
mov
or
lret
or
daa
insb
movsl
int3
movsl
sub
adcl
sub
shl
lret
dec
mov
add
push
adc
sub
arpl
mov
ss
je
ds
sbb
in
jne
mov
scas
daa
jle
stc
scas
ret
testb
add
pop
xor
mov
imul
mov
sub
iret
in
ss
loopne
enter
xchg
insl
mov
mov
xchg
pop
ja
mov
jmp
or
aas
push
mov
stos
imul
outsb
imul
and
cmp
ret
jecxz
pop
cs
mov
scas
cmc
popa
cli
mov
cmpsb
xchg
ljmp
cmp
cmp
push
pushf
insb
dec
iret
in
dec
int3
cmp
add
dec
mov
lret
push
mov
lret
ljmp
movsl
sahf
pusha
pop
outsl
dec
repnz
xlat
ja
push
push
push
clc
aad
or
arpl
outsl
dec
int3
cmpsb
dec
es
push
sbb
scas
rcll
js
data16
fcompl
push
add
outsl
dec
adc
nop
sahf
jp
stos
fcoms
fmuls
cmp
ljmp
jae
adc
cld
stos
sub
jmp
jns
ds
sub
dec
mov
fmuls
test
dec
mov
icebp
or
insl
ja
mov
xlat
push
mov
mov
xor
add
xchg
movd
aad
jno
mov
xchg
inc
lock
hlt
test
lcall
pop
pop
mov
idivb
sbb
in
hlt
push
lock
xor
fnstsw
xor
loop
dec
pop
sbb
fbld
mov
and
and
into
sub
scas
je
push
push
pop
xor
ljmp
fistl
or
dec
xchg
and
sub
adc
mov
jo
enter
je
clc
ds
mov
mov
scas
outsb
xor
sub
lds
lods
or
cmpsl
dec
jne
lret
dec
mov
and
cmp
scas
sbb
or
jmp
sub
das
scas
dec
les
movsl
mov
es
push
dec
cmp
aaa
sbb
aam
push
fsubl
enter
icebp
jns
jecxz
xor
jo
push
pop
push
fisttps
addr16
push
add
adc
xor
sub
mov
cltd
cs
mov
daa
push
inc
mov
jne
dec
mov
xchg
addr16
add
out
mov
mov
adc
mov
and
mov
or
sbb
jno
pop
ljmp
xor
arpl
pop
lcall
sbb
pop
sbb
mov
jae
je
sub
jmp
mov
fisttps
addr16
fidivrl
gs
jae
pop
inc
inc
cli
shll
insl
cli
fsubrl
mov
ljmp
ja
iret
add
fidivrl
pop
popa
add
and
xor
imul
sub
fs
movsl
out
outsb
bound
xchg
orb
sub
dec
jo
xor
inc
push
jae
inc
andb
outsl
iret
or
icebp
push
xchg
push
loop
out
aaa
sbb
sub
lea
decl
cmp
cmp
inc
ja
jmp
cltd
dec
ljmp
leave
pop
mov
daa
xchg
aas
and
inc
sbb
fldl
mov
cmc
in
dec
out
stos
inc
add
push
pop
mov
andl
clc
and
out
cmpsl
orw
in
xchg
mov
jle
je
inc
cmpsb
push
in
test
mov
out
or
test
jp
lea
push
adc
popa
inc
inc
dec
popa
pusha
nop
clc
outsb
fbstp
scas
repz
dec
inc
push
loopne
aas
das
push
jge
scas
xor
pop
bound
fs
and
xchg
es
cwtl
imul
or
popf
mov
jno
fdivrl
movd
divb
add
or
in
int
into
leave
add
je
clc
rclb
mov
mov
ss
les
je
add
lds
aas
mov
rcr
xchg
daa
adc
jae
sbb
pop
mov
cli
sub
pusha
xchg
cmc
rolb
fimuls
adc
enter
jmp
fiaddl
xor
inc
sbb
into
mov
rol
or
add
je
jne
adc
push
sbb
lret
jne
hlt
out
ds
mov
and
mov
xchg
iret
xor
push
cmp
mov
fnstsw
stos
xchg
mov
loope
das
inc
stos
int
mov
repnz
lret
mov
leave
pop
xlat
scas
ror
pop
cmp
mov
add
movsl
push
rorl
or
adc
sbb
sub
sub
cltd
mov
in
rcrl
xlat
mov
sub
in
jl
repz
int3
mov
jo
sub
pop
test
xchg
add
mov
xor
out
repz
dec
clc
cmpsb
xor
leave
aad
clc
inc
out
aas
jmp
cwtl
xchg
dec
into
mov
aad
mov
int3
adc
dec
aas
ja
pusha
cmp
mov
test
ds
insl
scas
in
lods
dec
mov
mov
enter
imul
das
sbb
shlb
in
les
pop
cld
fwait
mov
xchg
lcall
pushf
popf
mov
mov
mov
xchg
fimuls
pop
xlat
nop
push
movl
mov
int3
xor
lcall
or
mov
mov
lret
pop
mov
dec
and
adc
lret
pop
cmp
or
fcmove
fxch
dec
sub
outsl
and
cmp
divl
jb
mov
stc
lea
dec
jmp
rcrb
push
push
push
data16
push
adcb
or
cmp
lea
inc
or
jge
push
ljmp
push
cli
xchg
pop
test
repz
les
xor
mov
mov
fcomp
std
dec
arpl
add
scas
xor
fbld
sbb
outsl
xchg
sbbl
adc
sbb
ficomps
popf
fwait
ja
mov
inc
jo
into
or
mov
cmp
loop,pt
loop
repnz
ret
dec
adc
adc
inc
arpl
add
push
fwait
aaa
into
je
add
cmp
subl
or
testl
adc
movsb
ljmp
jecxz
mov
or
mov
stos
push
pop
test
mov
cmpsb
dec
xchg
bound
rcr
xchg
jo
dec
test
jp
sahf
mov
add
xlat
lock
xchg
pop
and
xchg
in
sub
lods
fmulp
jbe
mul
jp
clc
xchg
cmp
dec
push
sbb
insb
xchg
dec
pop
adc
adc
mov
mov
aaa
push
push
mov
sbb
test
call
idivl
lods
cmp
inc
mov
cmp
mov
pop
adc
jae
mov
cmpsl
sub
pushf
stos
jo
dec
ds
mov
dec
icebp
sub
sub
mov
cwtl
add
lcall
mov
inc
das
ja
fcoms
loop
jne
dec
jo
inc
cltd
int3
jb
sahf
scas
dec
mov
enter
jne
mov
push
push
enter
mov
push
negl
xor
jp
fcomps
pop
test
imul
popa
push
mov
scas
enter
cmp
aam
daa
sbb
mov
or
daa
out
mov
ret
xchg
xlat
mov
mov
pop
out
add
pop
sahf
scas
mov
insl
sub
and
out
outsb
xlat
inc
cmc
icebp
cmpl
cmc
push
rorb
ret
iret
movl
repnz
data16
out
or
icebp
jle
dec
push
mov
fnstsw
stos
movzbl
and
notb
sub
pop
jns
pop
push
mov
mov
jecxz
add
push
and
repnz
mov
sbb
test
iret
sub
dec
stos
or
mov
xor
dec
arpl
pusha
dec
push
cld
imul
outsb
jno
push
js
jb
lcall
pop
fxch
out
inc
inc
fdivrs
sbb
inc
lds
adcl
sbb
scas
pop
fs
insb
xchg
add
out
cwtl
inc
popf
mov
cmpsb
xchg
imul
fs
lds
fdivr
cmpl
jl
inc
repnz
mov
cmp
adc
sub
and
das
mov
inc
cmpsb
lods
sarl
jb
jge
pusha
cs
data16
out
jns
dec
stc
shll
out
pushf
dec
jg
in
cmpsl
fsubrs
in
adc
jl
mov
iret
in
and
aas
xchg
outsb
nop
adc
out
test
test
add
icebp
jle
xchg
aas
fwait
and
add
adc
inc
lds
in
cmp
out
imul
mov
xor
das
sub
push
push
dec
add
jnp
loopne
mov
sub
push
dec
sub
push
adc
lock
fistpl
adc
std
lret
sbb
bound
pop
pop
adc
inc
jmp
pusha
jp
int
fcomps
push
das
cltd
loopne
xor
dec
sub
push
rcrb
add
hlt
and
mov
pop
or
adc
insb
add
ljmp
xchg
faddl
aam
xchg
or
fsubs
popf
int3
and
subb
sbb
lods
imul
test
or
pop
sub
enter
call
add
pop
or
loopne
xchg
pop
testb
out
fucom
sahf
pop
mov
dec
out
push
jno
je
out
mov
mov
jb
addr16
lcall
add
sub
jnp
nop
int3
jb
and
xchg
mov
mov
pop
hlt
mov
imul
adcb
jge
aam
adc
and
ja
loop
pop
pop
into
lods
jns
xchg
push
ret
fdiv
dec
mov
into
out
lock
lods
aam
lods
fcmovu
pop
push
mov
pushf
push
nop
jne
ror
mov
and
cmp
xchg
adc
ljmp
add
xor
lea
mov
out
inc
jae
and
psubsb
test
xchg
xlat
mov
jmp
pop
bound
or
fs
push
imul
push
out
mov
adc
jne
movsl
jg
ss
adc
jno
jnp
mov
cld
jle
xchg
lahf
or
jb
dec
jne
testl
mov
out
int3
ret
movsl
fcompl
pop
mov
xchg
xor
scas
js
jne
imul
mov
aas
out
sarb
add
repnz
pop
mov
bound
inc
push
mov
or
mov
cwtl
and
mov
push
loope
and
mov
mov
cmpsb
test
stc
lds
test
lods
xchg
imul
push
jno
cmp
or
test
lahf
shl
sub
fdivrs
inc
push
icebp
push
or
test
xor
std
xor
dec
pop
dec
sbb
push
mov
imul
mov
ret
lret
cmpsb
rorb
gs
ret
mov
jbe
push
ret
inc
aas
sub
movsb
xchg
daa
xor
xchg
fistpl
loopne
push
inc
jg
add
orl
xlat
test
mov
mov
and
pushf
out
xor
fldl
test
lock
js
sub
loopnew
lods
lcall
lret
ret
repz
jecxz
sbb
xor
and
xchg
das
in
loope
mov
push
int3
push
inc
in
jb
out
dec
xchg
xorb
jb
mov
jb
or
shrb
insl
add
jo
jns
ss
adc
jecxz
push
cmp
mov
pop
inc
lahf
fisubs
sbb
cli
mov
iret
adc
insb
cmp
pop
enter
sbb
ds
bound
pop
mov
add
sub
adc
inc
jmp
adcl
sahf
or
jb
adc
enter
aam
pop
or
pop
push
and
cltd
fsubrs
ja
pop
and
inc
daa
xor
or
mov
cmp
jbe
sub
cmc
fs
incl
fdiv
sbb
pop
jo
es
or
jae
add
sbb
in
call
push
das
mov
shl
xor
int
jo
daa
mov
push
push
jl
cltd
add
pushf
push
push
in
pop
mov
mov
and
add
jne
cmpsl
and
pop
nop
ror
movq
push
je
int3
stc
in
xchg
pop
fwait
shl
shl
ds
repnz
dec
mov
xor
dec
jno
aas
popf
lahf
pop
inc
inc
repz
scas
cmc
pop
shrb
mov
scas
or
inc
and
out
pop
jg
lret
jmp
ret
inc
jb
pop
je
add
sbb
pop
mov
dec
sarl
and
jecxz
addl
div
inc
dec
ljmp
pop
sub
or
ja
mov
adc
inc
mov
out
fimuls
dec
movsb
aaa
in
imul
xchg
js
cmp
sahf
pop
and
inc
sbb
jmp
insb
sub
movsl
pushf
mov
jl
cmp
xor
and
pop
enter
fs
inc
aas
lret
scas
out
mov
push
adc
push
enter
popa
jg
xor
and
sbb
test
in
int3
pop
add
negb
loopne
or
pop
push
out
push
inc
adc
jle
inc
xchg
inc
xor
push
in
stos
shl
inc
cmc
push
xor
es
xchg
mov
js
push
adc
int
rol
or
adc
jl
cmp
cmp
test
clc
cltd
das
out
outsl
pop
inc
daa
xor
subb
or
jbe
push
xor
xchg
testl
sbb
cmp
sbb
nop
mov
movsb
mov
jecxz
clc
mov
adc
bound
lea
jbe
aad
outsb
lcall
xchg
push
enter
mov
xor
push
movsl
dec
call
mov
cs
popf
loopw
push
add
jb
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
sub
imul
add
nop
adc
inc
dec
leave
push
mov
jno
aaa
mov
inc
pop
push
sub
cltd
or
leave
lcall
gs
dec
add
push
scas
or
push
pop
push
push
cmpsb
or
rclb
pop
mov
rcrb
das
xor
sub
iret
xchg
mov
xchg
imul
movsb
jge
xchg
scas
add
cld
pop
sbb
pop
xchg
push
mov
dec
scas
int3
xor
enter
or
cmpsl
flds
push
inc
xchg
mov
sbb
cmpsl
cmp
mov
dec
fnsave
mov
data16
test
mov
movsb
shrl
into
cmpps
or
lret
scas
xchg
scas
fwait
xor
sarl
cmp
addr16
jge
cmp
mov
xorl
mov
push
jae
orl
xchg
mov
shrl
mov
aam
mov
insb
fisttps
mov
std
nopl
addr16
repz
outsb
sbb
inc
cmp
repnz
sub
pop
lods
shl
sti
insb
mov
scas
loop
cmc
rclb
inc
sub
inc
push
xchg
loop
test
int3
push
ret
das
stos
pop
mov
mov
movsl
fisttpl
sar
adc
ret
out
lods
shl
push
xor
pop
inc
stos
in
mov
and
int3
or
sbb
push
xchg
mov
pop
jge
ljmp
imul
popf
lret
sahf
jp
or
js
mov
mov
jb
dec
dec
scas
dec
jge
aas
testl
fcomp
and
xor
push
and
mov
out
fs
jecxz
mov
movsb
xor
clc
enter
or
mov
loope
stos
fs
fidivs
mov
and
and
xor
mov
sarl
mov
or
xchg
jae
rcrl
lea
add
push
xchg
mov
outsb
add
rolb
outsl
les
sbb
imul
push
sub
cld
jle
jns
pop
inc
or
sbb
mov
push
rcr
or
push
inc
add
rcll
push
cmpl
ds
inc
in
fcoml
fsub
mov
jg
sbb
sub
das
adc
pop
imul
xchg
push
scas
xchg
jbe
in
mov
add
icebp
xor
icebp
push
adc
push
leave
int3
repnz
lret
jns
mov
sbb
sub
and
jmp
sbb
xor
fimuls
inc
rorb
push
mov
or
or
pop
push
pop
addr16
sbb
cli
pop
xchg
cmpsb
in
mov
stc
aad
jns
les
hlt
push
jno
pop
into
outsl
mov
mov
je
in
in
scas
test
insl
rolb
adcl
das
dec
push
and
insb
jno
enter
outsb
inc
push
or
mov
in
lods
mov
pop
xor
mov
test
scas
std
and
cmp
scas
xchg
call
mov
add
xchg
enter
dec
aaa
pop
xchg
movsl
cmp
add
jno
adc
loopne
cltd
dec
clc
adc
lret
leave
repz
scas
in
imul
loopne
fisubs
jb
daa
sahf
movsl
outsb
xchg
mov
add
sub
stos
cmp
xchg
jne
jmp
dec
enter
insb
inc
stos
out
add
xor
aaa
cmpsl
push
dec
icebp
movsb
leave
shl
insl
xchg
insb
mov
and
or
cmpsl
bound
jns
jb
dec
mov
fwait
stos
dec
jl
xor
mov
pusha
cs
test
xchg
inc
outsb
adc
outsl
adc
aam
lahf
or
out
jnp
jle
pusha
fwait
adcb
roll
sub
xor
sbb
lret
leave
leave
sbb
xor
dec
test
pop
pop
out
mov
pop
add
jl
ret
push
cmp
mov
popa
push
pop
mov
testb
inc
push
push
sbb
int
cmpsl
push
sub
jl
add
sbb
fadds
push
mov
dec
in
out
cltd
sti
test
push
das
mov
mov
lea
xor
divl
movsb
xchg
mov
adc
add
es
mov
into
sti
lock
sbb
pop
xor
push
in
aaa
loop
sbb
imul
xchg
jbe
mov
jne
jecxz
data16
imul
jbe
mov
mov
jno
or
ret
mov
idiv
and
shll
or
and
jp
and
je
mov
outsl
dec
dec
mov
inc
xor
pop
mov
std
test
xor
outsb
mov
sub
push
push
mov
dec
add
cmpsl
mov
adc
pusha
sbb
xor
out
adc
faddl
js
sbb
adc
inc
push
shlb
fisubs
mov
ljmp
fsubl
pop
pop
push
mov
imulb
cmp
jecxz
andl
ret
scas
fstps
stc
add
jg
pop
and
clc
rorl
rcr
into
movsb
cmp
in
xchg
insl
and
in
in
out
mov
imul
ds
pop
push
xlat
movsl
cmpsb
fistl
pop
es
jecxz
out
lea
cmc
mov
sbb
xchg
cmpsl
loope
jb
repz
dec
in
pop
inc
xlat
lods
xchg
pop
mov
pop
sar
repz
add
mov
nop
and
cmp
test
push
leave
and
add
sbb
dec
inc
mov
gs
sub
mov
inc
jmp
adc
xchg
in
jno
imul
daa
aad
outsl
add
xor
and
dec
lahf
adc
dec
lea
pop
mov
and
inc
and
stos
jecxz
or
clc
push
jg
aam
mov
dec
xlat
mov
mov
xor
fsts
or
stos
pop
rcrl
in
xor
adc
addb
insb
and
dec
jecxz
loope
add
hlt
clc
adc
or
jmp
leave
sub
mov
pop
data16
xor
cwtl
imul
out
fistpll
add
and
mov
hlt
call
push
mov
inc
cmp
mov
sahf
or
push
imul
and
mov
mov
loope
xchg
xchg
mov
push
add
add
ja
inc
push
bound
enter
dec
mov
idivl
push
in
ds
pop
iret
jno
mov
or
aaa
dec
test
cmp
xor
dec
and
pop
mov
insb
ret
mov
jle
outsb
xor
movsl
and
sbb
lds
fisttps
and
cli
and
imul
andb
dec
push
les
xor
je
sub
cmp
jnp
xor
cmp
add
adcb
push
and
loopne
push
cmp
dec
out
aaa
rcll
adc
adc
xor
jb
or
jne
lcall
ret
push
push
dec
pop
lret
dec
inc
xchg
aad
mov
test
dec
xchg
aad
mov
push
push
cmp
and
sub
imulb
mov
sub
mov
fxch
adc
mov
inc
in
adc
cmp
xor
mov
mov
jge
js
pop
xchg
push
or
add
xchg
stc
mov
xorl
nop
js
dec
in
ret
roll
jl
pop
jp
test
mov
scas
mov
mov
notl
xor
bound
pop
cli
shlb
push
cltd
arpl
cmp
jp
push
pop
popa
pushf
xchg
adc
ret
mov
mov
sbb
ret
sub
push
xor
xor
jno
xchg
lds
sub
adc
cld
in
push
sbb
jo
imul
mov
jo
pop
jns
or
clc
icebp
push
movsb
mov
fisubs
jle
sbb
aas
insb
es
and
lods
sbb
gs
jnp
lods
adc
mov
mov
ret
dec
gs
adc
xchg
nop
movsl
xor
xchg
clc
mov
xchg
sahf
sub
lods
inc
mov
ret
dec
adcl
sbb
cmp
xchg
pop
roll
sbb
data16
sbb
sub
sub
mov
cld
pop
push
pop
sub
pop
rol
lods
shlb
in
add
mov
pop
or
shlb
and
or
inc
pusha
iret
add
aas
lea
into
mov
or
fildl
ror
jo
adc
decb
xor
into
in
dec
pop
or
test
loope
mov
xchg
loope
xchg
or
inc
iret
lcall
sub
push
lcall
fwait
rcrb
jb
add
pusha
ds
inc
jno
push
imul
sub
nop
mov
repnz
subl
sbb
mov
push
sub
mov
outsb
mov
jmp
adc
in
and
cmp
addl
gs
ds
mov
mov
mov
shrb
xlat
lods
dec
les
pop
sub
and
mov
mov
cmp
jno
cwtl
cmp
sbb
dec
cmp
lret
inc
xor
int3
ret
jmp
smsw
insb
mov
xor
jp
loopne
lods
xchg
xchg
insb
leave
mov
and
int3
lcall
inc
add
fistpll
neg
mov
push
inc
outsl
das
fidivs
test
push
mov
push
mov
mov
adc
mov
sub
aad
pop
leave
repnz
cmp
popa
xchg
rorb
xor
loope
sbb
mov
mov
jbe
and
scas
data16
imul
xchg
std
sti
lock
imul
mov
jle
lods
xor
ljmp
or
cmp
js
fnstsw
shll
push
mov
repnz
lods
aaa
adc
jp
insb
cltd
incb
ret
cld
insl
mov
lds
mov
xor
jno
pop
stos
lods
dec
imul
or
sbbb
xchg
psubsw
xor
hlt
dec
push
xchg
fs
sahf
test
int3
xchg
xchg
cmp
cli
mov
push
pusha
fwait
out
lods
cli
mov
lcall
arpl
xor
add
cmp
in
add
popf
pop
popf
xchg
sbb
mov
add
add
sbb
lods
mov
push
cmp
xorl
mov
adc
mov
or
sub
and
pushf
scas
addr16
decb
gs
into
push
xchg
jecxz
adc
shll
movsb
mov
pop
sbb
fsubs
sbb
fs
lcall
loopne
sysret
push
das
sbb
cmc
pop
outsb
adcl
ret
mov
lret
clc
mov
mov
test
inc
dec
push
inc
adc
vunpckhps
fdivr
stos
sti
ret
stos
jecxz
int3
les
add
dec
lods
mov
shll
cmp
fcmovnbe
stos
les
scas
mov
and
in
sbb
jne
outsl
push
push
push
and
lock
sbb
mov
jbe
shll
bound
test
shrb
and
jmp
lds
mov
jno
pushf
int3
loop
loop
je
adc
and
fldpi
push
push
jbe
pop
sbb
mov
cli
wbinvd
insb
pop
and
imul
mov
fwait
rorb
xor
xchg
jge
jle
iret
sti
inc
subb
xchg
das
movsb
pop
jo
leave
cmc
or
pop
gs
icebp
fmuls
int
sahf
pop
jmp
mov
or
repnz
stos
les
icebp
or
jae
stc
mov
in
cmp
fdivs
or
sti
in
mov
cli
cmpsl
cmp
shrl
mov
or
dec
fxch
xchg
adc
fsubl
shlb
dec
outsb
dec
mov
stos
push
out
jae
loope
aaa
scas
out
into
mull
int
mov
or
fwait
dec
in
sbb
jne
mov
cmpsb
js
mov
sub
mov
push
mov
scas
cmpsl
test
jmp
cld
ja
sbb
jns
xchg
test
jno
sbb
or
mov
and
fidivrl
sbb
inc
repz
add
shrl
test
jge
daa
lock
cmc
sub
jge
dec
stos
dec
ret
cld
lahf
sahf
mov
xchg
ljmp
dec
lahf
daa
out
dec
jb
dec
je
push
shld
popf
imul
jno
xchg
jg
movsb
mov
sub
and
outsb
xlat
pop
call
mov
cmc
lcall
xchg
and
lock
sub
xchg
fdivrs
push
push
data16
outsl
pop
jp
pop
mov
out
lods
sub
out
inc
fsubrl
xor
pushf
push
inc
sahf
or
cmpl
dec
xor
hlt
jbe
addr16
leave
nop
cmpl
xchg
insl
cmp
add
adc
mov
cmp
neg
fs
addl
mov
jbe
inc
or
cmpsl
fdivrl
xor
xor
cmp
into
adc
aas
and
int
mov
mov
pusha
sbb
je
ret
outsl
mov
jo
push
push
das
and
iret
sub
clc
mov
imulb
or
sub
and
sub
shl
shll
jbe
fcoms
daa
jl
mov
aas
push
mov
adc
cwtl
sub
fidivrl
pop
jle
cwtl
in
adc
xchg
rorl
sub
pop
ret
daa
sub
push
sub
add
push
sbb
movsl
repz
mov
popf
lahf
adc
jl
sub
ja
outsb
int3
mov
cltd
es
jl
add
stos
mov
add
sbb
enter
xlat
es
pop
aad
cli
loope
mov
jmp
dec
ja
iret
mov
xchg
sub
movsb
adc
adc
sahf
add
repnz
lea
ja
cmc
push
push
clc
stos
out
out
dec
mov
inc
lods
popa
pusha
mov
push
test
pop
mov
outsl
ret
mov
mov
scas
mov
jl
aam
mov
xchg
and
sub
fcos
rcll
xor
jbe
adc
call
sbb
ja
sub
lods
outsl
cmp
inc
sahf
jo,pn
testb
scas
push
lock
cmpsb
lret
addr16
dec
or
jp
iret
cmpsl
stc
inc
shlb
in
push
pop
imul
movsl
push
pusha
xchg
xchg
push
nop
imul
jne
xor
and
sbb
cmp
cmp
lea
xchg
scas
mov
aaa
pop
sub
jmp
bnd
jmp
sbb
jne
push
cld
pop
dec
cmp
sbb
rorb
jl
cmp
dec
jnp
and
leave
adc
lret
adc
aaa
data16
sub
in
shlb
insl
stos
in
stos
sub
mov
lret
lock
adc
add
xchg
das
or
jmp
or
leave
mov
push
sbb
rol
hlt
pop
or
push
ljmp
mov
cmp
sub
in
fadds
pushf
insb
mov
outsl
popa
imul
std
cmp
push
cmc
cmp
mov
inc
inc
movsb
xchg
cmp
sbb
push
int3
popa
xor
mov
or
loop
ds
sbb
scas
and
popa
hlt
inc
lock
dec
xchg
lods
sub
test
pop
dec
sub
imul
mov
mov
sbb
faddl
mov
push
data16
outsl
inc
xchg
mov
sub
pusha
pop
into
lar
stos
dec
xchg
and
test
mov
xchg
orb
arpl
dec
dec
and
jne
mov
adc
popa
stos
pop
nop
and
and
out
fwait
movsb
int
roll
pop
addr16
out
out
adc
mov
pop
jle
mov
cmp
rorb
mov
sub
mov
sub
cmp
push
lcall
insb
mov
lea
cli
aam
repz
aad
sub
mov
cmp
leave
xchg
pop
mov
out
or
imul
and
pop
jg
notl
iret
xor
mov
mov
inc
mov
iret
or
js,pt
sbb
sbb
push
mov
inc
dec
ja
fnstcw
jge
int
daa
mov
or
mov
rclb
sub
test
lcall
push
test
insl
into
mov
mov
push
cmp
lcall
scas
sbb
rclb
sahf
or
mov
jae
cmp
sbb
cmp
mov
push
xchg
enter
imul
andl
lock
and
rclb
pop
test
pop
pop
mov
imul
cmp
mov
push
adc
inc
les
sahf
leave
add
hlt
sbb
xchg
test
add
repz
ret
negb
ss
mov
sbb
pop
mov
cli
ror
cli
mov
negb
imul
jle
cld
ss
das
mov
or
push
ss
or
or
push
repz
test
xchg
shlb
push
mov
jmp
loope
adc
out
paddb
enter
test
mov
lods
push
jecxz
mov
push
fs
add
cmpsb
repnz
insb
push
imul
call
inc
aaa
sarl
daa
jp
push
lret
push
test
loope
sbb
cmc
enter
test
add
cmp
mov
pop
jbe
inc
cmovnp
fisubl
insl
cs
popa
or
pop
jmp
or
jl
xchg
stc
push
cmovns
lods
add
std
loope
cmpsb
fwait
xor
jo
fnsave
outsb
pop
fldt
push
nop
inc
push
and
pop
or
sub
mov
and
lahf
sbb
lock
cwtd
push
xorb
sbb
jbe
push
shl
add
repnz
mov
push
shl
hlt
in
sub
lret
cmp
lea
sub
and
jl
ss
addb
outsb
xor
xor
nop
and
mov
xor
int
stos
xchg
sub
sbb
cmpsb
jne
xchg
pop
sbb
fisttpl
fsub
aam
rolb
aaa
pop
sbb
sub
inc
out
lret
pop
cmp
add
inc
daa
repnz
pop
inc
mov
pop
mov
stos
and
or
fisttpll
icebp
cs
xchg
push
fwait
push
pushf
jl
stos
jno
dec
in
xor
mov
imul
mov
pop
or
ljmp
div
cltd
mov
or
std
mov
jg
das
push
adc
sbb
lret
enter
jns
xchg
pop
imul
das
nop
and
ja
pop
push
divl
mov
jmp
mov
adc
sbb
test
cwtl
or
test
fstps
mov
inc
cmp
add
lods
mov
adcl
jge
dec
adc
std
test
pop
loopne
into
dec
ficomps
sub
adc
loopne
dec
dec
inc
movsl
mov
inc
dec
out
inc
mov
pop
xchg
mov
push
xor
aam
dec
jl
psadbw
das
dec
aaa
pusha
in
and
or
repnz
lahf
cmovg
jbe
fs
mov
dec
adc
or
adcb
pop
out
test
mov
cmp
and
shlb
xchg
pop
fsubp
pushw
loopne
add
aad
insb
cmp
mov
sub
fldenv
shl
loopne
jne
fldt
jne
cmp
sub
mov
mov
adc
sahf
movsl
dec
call
iret
or
notb
mov
es
sbb
sahf
fcoml
inc
mov
mov
ja
mov
mov
mov
mov
mov
mov
mov
sbb
dec
jecxz
xchg
cmp
lret
or
icebp
push
in
fwait
jge
dec
add
cmovnp
rclb
push
mov
daa
orb
cmp
ds
and
sub
loope
cld
dec
jo
int3
rolb
mov
adc
jne
push
lea
popf
mov
push
mov
rorl
jnp
fisubrl
int3
pushf
push
insb
or
lods
mov
adc
jl
xchg
lret
mov
bound
pop
ret
jmp
mov
cmp
xchg
pop
and
in
out
mov
xchg
push
outsl
mov
or
sbb
mov
pop
movsb
test
jne
insl
mov
mov
push
cmpsb
and
in
push
dec
or
js
inc
rcr
mov
aaa
call
cmp
mov
fsts
sub
or
mov
ss
or
mov
push
sbb
xchg
xchg
jne
into
movsb
mov
mov
fcmovb
mov
hlt
jae
sub
adc
push
cld
pop
inc
adc
fstpl
nop
rclb
arpl
adc
sub
ds
lock
scas
daa
jnp
adc
jg
rclb
or
dec
xor
jl
inc
pop
scas
lods
mov
xchg
fwait
push
repz
adc
add
mov
sub
xchg
xlat
bound
ss
mov
fmull
xor
cmp
dec
xchg
ljmp
xchg
xor
lret
xchg
pop
imul
adc
es
int
sti
hlt
dec
inc
ja
xor
sti
andl
pop
sub
fcoml
jns
in
imul
mov
in
jnp
rcr
addr16
mov
sbb
inc
mov
mov
iret
or
push
std
mov
and
stc
and
andb
das
adc
xchg
mov
xor
pop
ss
jge
insb
inc
in
mov
adc
and
inc
scas
jle
bnd
int
push
pop
data16
cmpsl
jb
mov
scas
dec
ds
pop
inc
add
jns
sub
dec
mov
mov
out
inc
shr
imul
cld
xor
jl
enter
lds
movsl
fsubs
scas
bnd
and
dec
sbb
cmp
mov
or
lock
out
mov
adc
dec
add
in
jb
cmp
pop
xor
add
jnp
out
xor
inc
cmp
int3
pop
popa
pop
mov
push
jp
nop
mov
inc
xor
ficoml
lret
mov
jle
std
or
lcall
bound
or
je
mov
add
cmp
pop
mov
cmc
sbb
mov
push
ficoms
cmp
ficoms
dec
jl
xor
sti
jecxz
push
addb
minps
mov
shll
jb
and
les
xor
test
outsb
aam
std
ds
or
mov
inc
out
mov
pop
xlat
inc
fmull
orb
inc
sbb
sub
inc
push
mov
mov
push
xor
mov
loope
mov
jno
out
mov
mov
cli
out
add
mov
mov
mov
mov
mov
cwtl
out
mov
xchg
push
and
mov
rorl
adc
adc
sbb
mov
andl
lea
ss
inc
dec
push
outsl
gs
push
shlb
sbb
inc
jmp
hlt
mov
dec
mov
add
or
mov
test
mov
push
pop
enter
fildll
bound
inc
psubb
jmp
jb
adc
fmull
lahf
push
dec
jns
repz
imull
add
lods
cmp
test
loop
mov
push
lahf
sub
scas
bnd
adc
and
loopne
dec
xor
xchg
test
ja
pop
outsb
pop
fwait
push
je
cmpsl
jg
sahf
and
mov
idivl
pop
xor
lods
adc
sbb
lret
or
std
testl
pop
dec
bound
insb
jg
test
xchg
shrl
outsb
cwtl
gs
add
addr16
mov
test
hlt
stos
in
inc
adc
out
fcmovu
sub
pop
cmp
inc
sti
lcall
mulb
adc
shl
xchg
into
daa
negb
adc
pop
xor
lcall
shll
mov
loopne
sahf
xchg
addr16
xchg
sub
xor
scas
mov
loop
xor
fwait
dec
sbb
imul
pop
mov
cmc
addr16
lds
mov
sti
mov
hlt
mov
fldz
pop
insb
or
jb
ret
sbb
stc
idiv
stc
sub
push
mov
or
int3
int
add
dec
enter
dec
les
add
out
je
ret
int
inc
imul
push
pusha
and
mov
gs
mov
ljmp
aaa
sub
mov
imul
push
cwtl
fcoml
popa
lods
xor
repz
jbe
mov
cmp
ret
add
call
pushf
pop
push
jl
clc
int3
cmpsl
rorl
xchg
jae
test
mov
jg
test
push
mov
jb
lcall
or
adc
xor
inc
shrl
and
jo
stc
ret
push
loop
sub
xchg
cs
lock
lahf
push
mov
sti
call
mov
adc
mov
jge
imul
addr16
lods
cmp
mov
ja
fisubl
popf
pop
jb
jmp
ljmp
fcmovnb
outsl
xchg
ljmp
lds
pop
inc
xor
mov
xchg
inc
ret
jle
rolb
sub
roll
insl
mov
outsb
fwait
and
push
outsl
scas
mov
sahf
mov
pop
mov
mov
and
mov
push
inc
cmc
fiaddl
insb
fcmovnu
xor
mov
les
shlb
cmc
jo
push
cmp
std
popa
push
and
jmp
xchg
push
out
das
lods
sbb
out
jbe
cmpsl
xchg
inc
inc
insb
in
xlat
sub
ret
mov
sub
and
jmp
scas
adc
aam
imul
pop
or
insl
mov
loope
fcom
aam
daa
pop
stos
sub
xor
stos
repnz
jmp
lock
sub
sub
jl
rorb
push
xlat
dec
cmp
in
xchg
mov
jno
jmp
xchg
push
adc
scas
shrl
push
sarl
mov
leave
adc
pop
mov
and
push
orb
int3
xor
push
xchg
mov
add
pop
cmp
pop
out
cld
ret
shrb
and
fldcw
sti
mov
mov
mov
icebp
inc
jae
adc
in
ja
out
loopne
rorl
xchg
cmp
hlt
lea
xchg
movb
bound
xor
xor
mov
cmpsb
iret
aam
fcmovbe
cmp
mov
xchg
pop
icebp
outsl
adc
and
mov
mov
xchg
fsubl
movsb
clc
jmp
xor
xor
add
jae
sahf
mov
jb
inc
lret
test
cmp
cmc
mov
pop
loopne
ret
mov
ret
aad
fcoml
sbb
pop
sub
pop
es
add
push
aam
leave
pop
pop
fs
pop
bound
dec
imul
sub
dec
int
popa
push
push
mov
mov
mov
and
les
insl
xor
testl
dec
pop
ja
jge
lds
imull
push
jno
xor
mov
jne
iret
pop
and
insb
je
cmp
adc
mov
xchg
out
mov
cmpsl
test
mov
sbb
hlt
fistps
adc
fcmove
xchg
adc
mov
mov
lcall
cmp
insl
dec
mov
call
mov
cs
pop
jge
jl
es
test
jae
xor
lcall
loop
xlat
mov
and
cmp
add
arpl
cmp
pop
imul
mov
jg
xor
jg
aam
ficoms
stos
rcrb
cli
fdivrs
push
stc
adc
int
mov
arpl
stos
std
out
xchg
push
xor
mov
lods
mov
loope
mov
insl
jge
pop
sub
stc
add
push
lock
lea
pop
repz
inc
int3
ja
lret
sarl
and
or
mov
lret
push
lea
mov
inc
pop
fwait
inc
push
nop
mov
popf
cwtl
ficomps
lret
mov
or
push
jp
push
call
loopne
lods
ja
lods
add
inc
sbb
mov
adc
iret
mov
fldt
daa
pop
enter
icebp
ret
movsl
add
or
addl
and
fs
ret
xchg
je
fisubrl
cmp
xchg
lods
jecxz
fbstp
mov
stos
fld
lods
fldl
adc
mov
adc
inc
dec
and
cmp
push
mov
pop
rorb
ljmp
arpl
mov
std
faddl
cmp
dec
adc
push
cld
mov
dec
lock
push
dec
xchg
xor
lds
adc
cli
das
push
sbb
mov
sbb
subb
ja
xchg
subb
cmp
cmpsl
daa
les
pop
pusha
xchg
jp
pushf
in
mov
mov
push
xchg
je
leave
cmp
cmc
insb
mov
mov
push
fst
in
or
fs
pusha
lods
testl
dec
out
cmp
cmp
fistps
inc
movsb
cmp
jge
xor
mov
or
xor
fistl
push
test
sub
push
mov
clc
push
pop
out
scas
or
je
xor
jle
push
xor
loopne
repz
dec
cmp
ss
sahf
repz
gs
push
fwait
ret
ret
inc
mov
shll
sub
sub
in
lcall
test
push
fdivrs
adcb
mov
test
outsl
jp
xchg
arpl
cs
nop
adc
and
cmp
mov
mov
pop
mov
movsb
pop
dec
xchg
mov
out
xchg
lret
pop
or
aas
and
and
adc
cltd
out
xlat
movsb
hlt
lret
dec
sub
nop
dec
xchg
call
dec
mov
ss
sti
scas
cmc
call
xchg
test
mov
add
adc
arpl
cmpl
out
or
mov
stc
mov
lret
lock
pop
mov
das
mov
pop
fs
push
neg
sarb
sub
xchg
cmp
jae
mov
sbb
pushf
adc
sbb
scas
stc
adc
icebp
int3
call
push
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
sub
movsl
ljmp
addl
dec
out
push
fs
jns
fsubrp
inc
inc
loope
xor
jmp
mov
les
insl
es
addr16
ret
mov
mov
mov
pusha
or
xlat
in
fwait
int3
in
adc
add
push
cld
cmp
icebp
mov
inc
push
sbb
jnp
int
pop
fstps
xchg
test
movsl
jne
outsl
or
aas
sub
aas
ss
adc
mov
inc
popa
lock
leave
cli
xchg
dec
out
fistl
ret
cwtl
mov
ret
push
ljmp
cld
and
rolb
cli
mov
mov
mov
pop
jge
lds
inc
adc
jg
add
inc
lahf
out
gs
ret
mov
sahf
sbb
rep
nop
or
add
push
cmp
mov
popf
cwtl
shlb
cwtl
test
add
ror
mov
or
xchg
inc
mov
subb
lock
mov
pusha
pop
mov
xlat
jb
data16
pop
inc
fnstenv
add
xchg
daa
pop
push
sbb
popaw
push
mov
stc
mov
dec
inc
sub
mov
es
fsts
andl
fcomps
pop
call
in
scas
inc
insl
sub
int
cld
ds
test
cmp
mov
jnp
in
in
cmpsl
repz
dec
xor
cmpsl
dec
mull
push
lret
fs
bound
sub
out
test
sub
sarl
inc
cmp
iret
mov
ret
jnp
outsb
sbb
int
in
xchg
and
enterw
and
mov
fadd
jl
out
arpl
int3
sub
fisttps
divl
out
arpl
loope
adc
out
mov
jno
xchg
mov
ja
xchg
sub
je
mov
push
fwait
pop
push
jp
inc
pop
in
subl
add
repz
popl
mov
repnz
jb
pop
lods
or
sbb
shl
popf
hlt
bound
push
inc
es
andl
shrb
add
pop
mov
adc
repz
push
das
and
mov
data16
mov
jns
in
push
pushf
xor
addl
mov
xchg
dec
sbb
pop
pop
and
cld
rorb
adcl
aas
cwtl
and
lahf
push
out
sbb
jecxz
in
iret
sub
jmp
aas
out
jns
push
sub
xchg
lahf
fistps
ss
rol
imul
jbe
and
adc
adc
xor
push
mov
xor
inc
add
push
push
mov
and
cld
xchg
faddl
push
jns
stc
subl
and
sub
mov
adc
mov
stos
cli
xor
out
mov
jmp
pop
pop
adc
jae
repz
pop
fs
fwait
cli
rorb
push
scas
popa
out
mov
out
push
inc
lods
lods
je
in
sbb
push
into
jg
outsl
push
scas
adc
sub
xchg
inc
lds
data16
clc
xchg
or
jp
cmp
testl
xor
jle
mov
or
outsb
cmp
fs
adc
push
jecxz
in
add
or
das
aas
xchg
cmpsb
dec
xchg
out
scas
icebp
cwtl
fst
pop
mov
mov
sub
int
ljmp
out
cmc
outsb
and
adc
scas
shrl
adc
xor
aaa
lds
push
test
out
mov
mov
mov
mov
sub
inc
imul
sub
roll
cmpsb
daa
xchg
stc
outsb
outsl
aas
add
push
xchg
xchg
mov
mov
pop
fadds
imulb
inc
mov
loopne
push
bound
push
cmp
out
dec
jmp
fdivr
add
addr16
imul
inc
lds
popf
push
leave
sahf
insl
jmp
lea
sub
add
popa
gs
insb
fstpt
cmp
or
jge
jbe
mov
in
adc
cld
sarb
lcall
and
stos
sti
mov
sub
cmpsb
mov
xor
std
cmp
rclb
pop
pop
sbb
push
and
push
lcall
shl
ret
lahf
stc
fwait
aad
subl
pop
repz
lods
jg
xor
aaa
and
adc
and
fmuls
xchg
sub
ss
sub
icebp
test
push
std
mov
inc
xor
mov
push
cld
cwtl
stos
aaa
and
mov
adc
es
sbb
adc
dec
cmpb
sbb
clc
sbb
push
and
mov
mov
push
or
pop
push
pop
cmpsl
ss
shll
jb
aaa
mov
cmp
ja
ret
sbb
popf
fldln2
sub
dec
lea
pop
pusha
andl
push
lods
jmp
repnz
dec
out
data16
xor
xchg
mov
pop
ds
incb
and
adc
mov
icebp
jl
int
pusha
scas
mov
pusha
sbb
pop
xchg
rclb
iret
dec
aam
cmp
nop
cmpsl
sbb
pop
imul
lcall
enter
ja
std
faddl
or
jl
cmp
push
repz
stos
or
fs
popf
jmp
add
lret
fildll
push
rcrl
idivl
fcmovne
sub
js
repnz
add
mov
out
jbe
adc
in
add
addr16
imul
fs
push
fwait
gs
and
lret
rcr
xor
lods
inc
call
mov
jecxz
pop
cli
push
aad
dec
push
push
and
sbb
and
inc
or
jb
ficomps
sub
mov
xlat
cld
and
shl
push
aam
pop
insb
in
cs
in
ret
mov
mov
push
pop
push
pop
push
or
push
dec
sub
mov
cwtl
sahf
jo
push
repnz
enter
popf
or
js
les
shll
dec
lret
les
aas
in
mov
and
and
subb
mov
push
cmpsl
xchg
mov
pop
add
sbb
mov
cli
adc
adc
cmpsl
lret
pop
xor
test
xchg
pusha
pop
sbbl
push
out
cmp
clc
fwait
frstor
adc
and
sbb
in
mov
ret
sub
jbe
adc
test
mov
xchg
ljmp
add
push
inc
sub
scas
mov
loope
inc
fimull
gs
imul
lock
jbe
xor
lea
xor
mov
jecxz
cmp
push
repz
out
push
pop
mov
mov
dec
jnp
mov
repz
mov
fs
and
push
push
int
out
xchg
adc
jne
popa
dec
push
jae
ds
test
xchg
pushf
cs
add
dec
iret
dec
js
in
shl
iret
fucom
mov
sub
icebp
sbb
pop
imul
popf
das
js
outsl
sbb
pop
adc
movsb
inc
les
inc
aam
cs
cmp
outsl
sbb
popa
in
ja
aam
test
inc
lret
cmpl
push
lods
out
mov
push
push
xchg
push
fs
jne
test
pop
inc
sbb
jb
or
mov
test
test
faddl
xchg
jmp
sbb
push
cmp
and
xlat
sub
pusha
sahf
in
shrl
xor
pop
xlat
test
pop
xchg
rcll
fldt
es
call
dec
sbbl
mov
and
mov
jmp
test
xchg
js
xchg
xchg
add
push
fbld
add
out
inc
and
pop
pop
mov
lret
fdivr
jp
in
jmp
les
mov
aaa
pop
or
push
adc
jg
repnz
jae
adc
inc
and
nop
jmp
bound
xlat
mov
in
lock
push
xchg
cwtl
stc
jbe
insl
test
sahf
push
pop
addb
jl
lock
push
push
dec
push
xor
sub
adc
cmpb
jle
and
mov
nop
nop
mov
mov
jecxz
add
add
lret
cmpsb
push
lods
push
pop
call
mov
push
repz
jge
icebp
inc
mov
stos
fsub
data16
les
cmc
shll
pop
jl
test
dec
adc
fistpll
cmp
fnstcw
jb
fsubs
adcl
cwtl
pop
std
push
stc
shrl
mov
test
iret
enter
mov
rcrb
sarb
jle
rclb
mov
dec
cmc
mov
xchg
pusha
sbb
iret
test
test
insl
or
cltd
mov
lods
add
push
pop
or
inc
cmp
add
rcl
orl
adc
adc
out
sti
lret
shl
push
push
incl
sbb
call
fwait
pop
add
or
inc
push
iret
ja
jns
aad
movsb
mov
or
aad
dec
mov
sbb
pop
and
movsl
in
mov
mov
out
addr16
jne
scas
cmpsb
lret
mov
shll
adc
jae
in
push
fdivr
jb
mov
cmp
fnstsw
and
sub
mov
es
loopne
pop
ljmp
lcall
fucompp
fs
cmp
push
push
les
ds
pop
dec
pop
jmp
cld
out
add
pop
mov
cmp
push
arpl
out
jmp
roll
stos
rclb
xchg
int
nop
dec
adc
in
movsl
mov
ret
test
hlt
mov
aaa
pop
out
inc
mov
rclb
mov
es
jns
inc
jmp
lahf
mov
fucom
sub
mov
jo
fisubs
jmp
dec
aaa
cmp
hlt
xchg
addl
insl
mov
in
xchg
ja
sbb
inc
daa
jo
lret
pop
das
xor
inc
out
cmp
addr16
dec
lds
dec
xchg
lods
or
mov
mov
sbb
mov
dec
mov
mov
push
and
pop
aas
jns
sub
hlt
imul
pop
clc
xchg
xor
sub
pop
xor
ss
inc
mull
pop
xlat
test
push
mov
adc
add
daa
xchg
out
lods
lahf
pop
movsl
jle
mov
jmp
inc
popl
xchg
xchg
shll
add
test
jno
icebp
push
mov
xor
sub
push
jns
cs
fwait
mov
pusha
lods
loope
pop
xor
xor
pop
push
xchg
call
xor
or
mov
xchg
xchg
mov
mov
enter
xchg
imul
mov
outsb
fldt
addl
jbe
jecxz
test
cmp
adc
pop
aam
mov
sbb
xor
dec
dec
sub
sysenter
cmpsl
in
jb
inc
aam
xor
mov
jbe
repnz
ja
jecxz
adc
lds
pop
cs
imul
cmpsl
cwtl
push
add
sbbl
and
idivb
mov
jmp
sbb
leave
push
jle
call
adc
mov
jno
sbb
push
push
fcompl
xor
cld
outsl
lock
mov
inc
std
pop
data16
js
fisttpll
ja
mov
adcl
test
out
xchg
dec
xorb
sahf
insl
mov
roll
in
lods
xchg
mov
mov
out
jecxz
icebp
mov
or
xor
sbb
cld
int3
lea
jnp
lret
and
ljmp
idivl
lods
pop
jno
mov
pop
std
add
jae
mov
push
mov
add
bound
lret
pop
sbb
fildll
stos
insl
pushf
jecxz
and
sub
add
cmp
adc
adc
je
out
pop
andl
push
in
sbb
push
adc
jno
mov
pop
or
test
sbb
ljmp
repz
clc
mov
fidivrs
ret
lea
lock
fnstenv
lods
mov
aaa
enter
arpl
jle
cmp
xchg
addl
cmp
or
jne
and
push
or
movsl
loop
inc
adc
sbb
add
mov
push
sub
mov
in
pop
imul
lret
scas
cmpsb
movsl
decb
adc
xchg
cmp
pop
pushf
cltd
adc
mov
cwtl
jecxz
or
outsl
sbb
jl
cmp
mov
add
xchg
or
jmp
pop
jmp
loope
xchg
dec
mov
fistl
push
xchg
inc
fsubs
icebp
fs
pop
cwtl
mov
or
ficoms
mov
aad
jecxz
or
into
add
mov
lea
pop
jp
adc
test
cmpsl
sbb
jo
test
and
sub
inc
out
mov
fdivrl
xor
sbb
int
or
jno
cltd
mov
pop
pop
imul
and
out
popf
cmp
xlat
jl
mov
xor
lods
push
fildl
scas
out
pop
subl
lret
int3
push
mov
sbb
loope
push
mov
cmpsb
insl
aas
lret
or
mov
and
jmp
dec
inc
push
hlt
adc
aas
mov
cmp
gs
stos
mov
push
xchg
stos
pop
jle
xor
fistpl
xchg
ja
fiaddl
xor
mov
and
leave
pop
iret
mov
or
mov
scas
pushf
cmp
inc
clc
mov
aad
lret
cmp
pop
pop
rcll
push
out
mov
fidivrl
pop
or
loopne
stos
fimuls
hlt
mov
rcl
ret
ds
dec
mov
mov
repz
xchg
mov
aad
fidivs
add
lcall
mov
or
lods
or
add
mov
inc
or
imul
adc
mov
pop
es
xor
cmp
hlt
es
ja
test
inc
test
ret
mov
mov
mov
or
jne
jno
into
popf
or
insl
ds
pop
pop
push
in
xchg
mov
movsb
jno
dec
lods
xchg
adc
lock
and
andb
mov
pop
imul
test
cmp
mov
mov
adc
jl
add
test
xor
mov
cmpl
inc
ret
es
xor
inc
call
jb
mov
mov
test
out
andl
mov
fwait
movsl
cmp
adc
dec
push
test
insl
sbb
cmp
and
ret
jno
insl
repnz
mov
in
jae
pop
mov
jnp
add
xchg
mov
data16
inc
fistl
lret
enter
jle
inc
add
adc
xor
enter
mov
xor
clc
pop
xor
ret
add
sbb
in
mov
sbb
gs
sub
scas
mov
loop
sub
mov
inc
sahf
jecxz
push
mov
in
xor
outsb
pop
iret
popf
jecxz
cli
out
fildl
jmp
lds
cmpsl
sbb
into
push
mov
lods
je
push
outsb
cmpsb
mov
movl
push
jns
push
mov
mov
out
loopne
es
dec
inc
insl
mov
jns
adc
xchg
push
xorl
add
rcl
cld
icebp
shll
cmp
es
xchg
or
cmp
adc
xor
push
mov
mov
inc
ljmp
or
es
push
mov
mov
push
mov
rorb
mov
enter
mov
ja
sub
and
nopl
dec
in
add
loopne
insl
aam
jno
inc
push
in
test
adc
and
pop
pop
add
out
xchg
fsub
xlat
dec
mov
dec
jl
insl
ret
and
lods
jns
inc
icebp
sbb
cmp
jecxz
js
into
aam
fldt
xchg
nop
and
loope
add
rolb
jg
aad
dec
in
stc
lahf
push
icebp
jecxz
nop
xlat
push
pushf
test
faddl
mov
and
xor
addr16
fmull
sbb
push
xlat
add
inc
stc
inc
scas
pop
cmpsl
movsl
sbb
rolb
pop
push
xor
addr16
jecxz
fisubs
fnclex
ret
push
jg
js
mov
out
fisttpll
sub
stc
adc
fmuls
jge
rcll
add
test
add
dec
fisubrl
sahf
push
cmp
fdivs
jle
insl
pop
nop
roll
mov
test
aam
out
out
pop
dec
add
and
and
pop
sbb
jne
mov
pop
in
int
add
andl
pusha
aas
fs
add
add
or
mov
les
and
fildl
es
or
mov
push
xor
inc
in
mov
roll
int
jecxz
fstl
sub
pop
lret
dec
sbb
scas
daa
pop
sub
addl
mov
ja
cli
inc
sbb
jo
jnp
xor
jne
mov
jne
cltd
jae
push
in
cld
sahf
mov
mov
mov
imulb
inc
sbb
dec
popa
arpl
pop
pusha
mov
out
adc
lret
jns
jnp
int3
sbb
jecxz
arpl
shlb
into
cmp
cmp
sahf
jecxz
or
sbb
push
lock
inc
clc
sub
mov
jp
addr16
lret
jnp
je
or
push
inc
loope
icebp
fadds
xor
dec
adc
shlb
or
aad
sti
jbe
js
out
mov
push
add
xor
mov
loop
mov
fmull
fisubrl
inc
or
fnstenv
popa
or
addr16
xlat
pop
pop
mov
fs
pop
data16
aaa
icebp
clc
int
jge
cmc
cmc
aaa
daa
push
cs
xchg
mov
jne
mov
loopne
push
pop
dec
inc
rcrb
add
jnp
mov
mov
mov
arpl
std
out
inc
aam
mov
fistpl
sub
ret
xor
push
lods
outsb
sti
pop
cmp
adc
lahf
adc
insb
sub
xchg
mov
mov
cmp
inc
inc
jb
daa
rcrb
movsb
add
sbb
cmp
xchg
sub
mov
and
xchg
xor
cltd
xchg
out
dec
or
scas
inc
and
cld
push
xor
jecxz
cmc
rcr
xchg
ss
hlt
les
rcll
xchg
mov
bound
add
rolb
sbb
imul
sub
mov
lea
lret
adc
fildl
ret
mov
sub
pusha
mov
fstpt
inc
outsl
ja
addb
sahf
test
mov
add
lds
jmp
iret
in
iret
das
mov
jbe
je
notb
loop
cmp
pop
rorb
sbb
jl
add
jo
dec
scas
adc
fs
jecxz
pop
insl
out
pop
sbb
mov
or
data16
dec
aad
cmp
xchg
aaa
popf
push
insl
adc
mov
in
test
int3
stos
cwtl
mov
push
rclb
cmp
push
inc
cmpl
push
nop
aam
fisubs
mov
mov
in
pop
cmp
add
push
jmp
jle
into
cmp
mov
xchg
test
xlat
jne
ja
mov
push
mov
aas
jo
xor
into
jne
stc
test
outsb
cmp
jae
test
stos
sahf
lock
inc
sahf
dec
mov
lret
and
sbb
sbb
pop
repnz
or
and
shll
mov
push
push
std
sbb
or
test
dec
push
lret
push
jbe
rcll
bound
adc
loope
adc
adc
sbb
xor
xchg
bound
imul
in
mov
popa
push
sub
push
xlat
adc
xor
xor
insl
and
shrb
sub
mov
mov
lock
and
arpl
ret
dec
psllw
lret
lods
repz
and
pop
sbb
loope
test
push
loop
jg
subb
scas
repnz
repnz
cltd
mov
pop
clc
cmp
rcrl
pop
ret
inc
adc
in
pushl
clc
scas
or
nop
scas
push
pop
inc
mov
lock
fs
lods
push
mov
cmp
adc
repz
fisttpl
push
push
mov
push
push
sbb
dec
repnz
and
inc
lahf
loope
roll
add
add
subl
mov
xor
mov
sbb
push
xor
test
xchg
faddl
or
addr16
aas
mov
jae
lret
pop
lahf
pop
mov
ret
mov
add
cmp
xor
xchg
lods
cmp
fisubl
lahf
sub
or
add
in
test
ret
cmpsb
fsubp
pop
or
test
xchg
lahf
dec
xchg
cmp
push
shlb
dec
xchg
into
roll
mov
push
adc
daa
lods
addr16
adc
jge
adc
insl
mov
inc
or
cmp
mov
fwait
ja
pop
popf
call
inc
cmp
negl
jle
subb
fcoms
enter
xor
pusha
pop
in
aad
mov
inc
mov
jl
cltd
inc
xchg
inc
xchg
xchg
sub
notl
or
push
adc
pop
rorb
sub
mov
mov
jmp
cwtl
movsl
sbbl
das
and
icebp
cmp
xchg
popl
ftst
add
cmp
arpl
adc
outsb
sahf
imul
add
repnz
jp
mov
flds
inc
sub
movsb
loopne
loop
dec
loope
dec
xchg
xlat
imul
cli
xor
rolb
btc
test
popf
pop
sub
dec
mov
into
cmpsb
in
xor
jg
jno
out
lds
cmpsl
imul
lahf
jle
or
cltd
cmpsb
movl
push
mov
mov
mov
jb
cmpsb
fstps
lods
xorl
jbe
icebp
mov
sub
rorb
or
xchg
iret
and
mov
int
in
out
xor
imul
and
in
cmp
sub
inc
test
pcmpeqw
pop
sbbb
xor
jne
popa
loope
stc
daa
insl
xchg
mov
push
movsb
ret
lea
jge
int3
in
sub
dec
pushf
fdivrl
orl
cmp
and
mov
mov
mov
pop
je
lods
jne
or
inc
loopne
test
mov
or
rcl
and
out
xor
into
test
xor
cmpsb
push
std
xlat
jle
je
repz
xchg
xchg
sub
adc
xor
mov
rclb
bound
xchg
jno
mov
inc
xor
dec
in
stos
xor
mov
out
fidivs
sbb
or
jge
xchg
stos
je
aam
popf
cmp
ret
insb
or
xor
stc
out
rcr
cwtl
add
loop
pushf
loopne
dec
and
outsl
cmp
pop
addb
out
or
pop
out
jge
nop
pmulhw
xchg
fs
aas
adc
shll
cmp
aam
hlt
pop
in
rorb
push
lds
loop
push
jo
fs
push
push
out
xchg
and
test
inc
xchg
aam
mov
xchg
fsubrs
xchg
mov
adc
xor
mov
inc
mov
push
addl
xlat
dec
dec
dec
insb
and
js
in
movsb
xor
xlat
das
jbe
xchg
inc
icebp
xchg
idivl
xchg
out
iret
adc
sbb
in
mov
inc
adc
fs
ffreep
repnz
rcrb
xchg
xchg
xchg
loope
dec
cmovne
cmc
or
pop
pop
sbb
pop
stos
test
js
rcll
loopne
fnstsw
cmp
dec
cmp
je
or
push
xchg
xor
lcall
xor
out
inc
pop
mov
xorb
cmp
push
or
es
enter
jae
cltd
xor
or
stc
jb
loopne
aad
in
cmp
xlat
pop
js
cmp
jge
push
rcll
xor
adc
xor
mov
sbb
nop
mov
rorb
cli
cwtl
sub
lret
pop
pop
mov
shr
fwait
clc
sbb
or
imull
movsb
stc
xor
lcall
xchg
pop
int
dec
inc
mov
in
xor
push
sbb
test
lcall
mov
subl
sub
and
shrb
sbbl
adc
lcall
movb
cwtl
sbb
and
lods
mov
or
push
or
mov
stos
mov
adc
mov
pop
into
scas
std
push
cmc
in
jle
mov
jae
aam
jae
push
inc
adc
xchg
adc
cwtl
and
stos
fiaddl
add
add
mov
aad
sbb
psrlq
pop
push
sahf
jb
cmc
inc
sub
lret
xchg
daa
xchg
inc
test
lock
jg
aam
xchg
inc
incb
mov
and
adc
insb
stc
fstpt
push
sbb
dec
or
aam
inc
cmpsl
testl
cs
cmp
sbb
arpl
into
hlt
sub
js
cld
dec
mov
pop
inc
xchg
lret
enter
aaa
dec
lret
mov
repz
sahf
sub
xchg
mov
fldenv
lock
fcmovnbe
jbe
sub
pop
pop
cs
lods
sub
lret
fistl
adc
roll
add
lods
lcall
xchg
gs
mov
int3
mov
les
clc
cltd
pop
test
cltd
sub
push
xlat
dec
xor
rcl
mov
pop
mov
test
sbb
fs
je
inc
out
mov
leave
out
pop
jnp
call
clc
rorl
dec
lds
mov
adc
fcoms
fs
mov
mulb
daa
ret
xlat
shl
push
add
lcall
add
mov
xchg
lret
cmp
adc
cmp
loope
pop
int3
incl
shlb
dec
loopne
cmpsb
mov
std
pop
stos
lcall
mov
push
add
pmuludq
and
dec
fisubs
fadds
adc
jae
out
xor
in
les
sbb
mov
data16
cli
and
pop
jg
and
dec
popa
arpl
aas
mov
inc
or
aam
xor
shll
sbb
push
mov
sub
lea
lret
rorb
out
jb
call
xchg
xlat
mov
dec
mov
lret
or
cmp
ljmp
lcall
aas
aas
cld
xchg
push
xchg
into
and
mov
adc
mov
jbe
sbb
test
jmp
xchg
and
jb
push
add
or
mov
movsl
lcall
fwait
sahf
pop
in
mov
inc
cs
fbstp
adc
mov
or
or
mov
mov
push
test
bound
and
fdivrp
mov
mov
imul
popf
pop
push
add
test
mov
out
mov
mov
inc
cmp
jmp
int3
push
jl
sub
imul
mov
xchg
sarb
jecxz
shll
or
into
notl
add
pushf
mov
imul
ret
add
faddl
xchg
xchg
aaa
xchg
jmp
mov
sbb
fmul
fstpl
dec
aam
repnz
stos
icebp
cld
movsb
pop
inc
cmp
push
or
cmpsl
ds
scas
pop
cmpsb
jp
xor
rorb
dec
mov
aas
imul
jnp
dec
dec
loopne
aad
adc
push
dec
rcrl
testb
push
icebp
mov
test
xchg
inc
sub
sub
dec
lahf
push
adc
adc
mov
sbb
mov
pop
sarb
mov
icebp
pop
push
jmp
loopne
cmp
insb
fdivrp
inc
data16
add
in
push
hlt
imul
or
mov
dec
xor
mov
pushf
loop
or
cmp
add
xchg
mov
adc
lret
inc
or
inc
ja
lea
xchg
aaa
pushf
jae
js
xchg
sbb
shll
lds
pop
aas
enter
inc
stos
mov
jge
sub
psllq
inc
shlb
pushf
into
sbb
ret
jg
sub
cmp
ss
inc
inc
lret
in
push
jecxz
push
fiaddl
aas
push
inc
mov
xchg
push
mov
mov
inc
push
push
cli
in
filds
hlt
mov
dec
clc
jne
subb
fwait
lea
pop
pop
fcos
mov
int
fsubp
arpl
mov
jmp
cwtl
das
scas
sbb
fisubrs
cmc
sbb
push
lock
xchg
scas
push
sub
lret
dec
adc
es
repnz
jnp
mov
orb
cmp
xchg
ret
jo
testb
pop
add
int3
std
es
stos
dec
rcr
dec
push
pop
dec
cwtl
or
aas
pop
sub
mov
ljmp
loop
jecxz
xorl
xor
testb
aaa
xchg
sbb
push
repnz
or
jno
jg
or
mov
inc
inc
ret
xchg
pop
xor
rclb
jge
push
mov
inc
mov
enter
xchg
scas
aas
out
and
hlt
aas
mov
stc
ret
test
mov
cmp
rolb
int
cli
xchg
sub
pop
fbstp
fiaddl
mov
xchg
pusha
cmp
loop
not
lea
cwtl
jl
stos
dec
xchg
xor
lock
xchg
xchg
inc
mov
jmp
mov
dec
adc
push
xchg
sbb
mov
push
xor
cs
enter
aam
add
add
xchg
xchg
and
adc
push
ret
or
repz
mov
xorb
push
mov
fsubrs
bound
sarb
mov
jae
push
jp
mov
or
out
push
or
jo
sub
sbb
lods
add
mov
stc
or
and
repnz
dec
cs
push
cli
testb
fisubl
out
int3
push
test
dec
es
imul
adc
pop
or
jmp
mov
mov
pop
imul
sub
inc
test
xor
inc
cs
xor
dec
out
mov
jb
loope
sbb
leave
out
jg
xor
lea
insl
fwait
sbb
test
xchg
pop
cmp
das
fcmovnb
mov
loop
std
inc
fstpl
or
sahf
int3
pop
fdivl
push
mov
cli
test
jb
xor
scas
jo
pop
sub
cli
pop
lret
fisttpll
call
stos
fdivs
shrb
lret
jmp
adc
test
fldcw
adcl
addl
fnstcw
jb
in
push
mov
xchg
ret
sub
icebp
xchg
repnz
cwtl
push
js
mov
out
loope
push
mov
xchg
mov
push
sbb
rcrb
icebp
loop
test
addr16
push
test
adc
leave
xor
lahf
lods
loopne
add
fs
mov
fwait
call
jbe
xchg
aam
sbb
xlat
or
sbb
mov
add
dec
mov
test
out
mov
cmpsb
jne
outsl
sub
jle
ja
divl
ret
iret
cmpsb
dec
pop
xchg
mov
mov
mov
jecxz
xchg
xor
jns
ss
icebp
mov
pop
aas
cmpsb
mov
adc
mov
in
sub
shl
sbb
cmp
cmp
jbe
sub
cmpsl
cltd
or
push
mov
pop
nop
jmp
pop
cmp
xchg
cmp
push
lahf
cs
pop
mov
pop
sub
mov
cld
pop
rolb
lahf
add
std
mov
sub
pushl
leave
inc
cli
push
cmp
add
adc
mov
push
xchg
inc
sbb
mov
jnp
imulb
pop
push
jns
mov
sbb
int
ret
push
add
mov
daa
repz
mov
mov
dec
cmc
add
jb
or
out
or
cmpl
inc
sub
pop
xor
mov
push
dec
mov
mov
clc
div
ficoml
xor
xor
cmp
popa
push
adc
cmpsl
nop
jne
sbb
ficoms
and
adc
cmpsb
lock
and
flds
cmp
mov
mov
xchg
mov
pop
stc
cld
mov
hlt
daa
pop
inc
scas
mov
dec
inc
pop
in
pop
jo
ljmp
shr
sahf
inc
std
or
jl
ret
dec
repz
jmp
jge
add
ficomps
adc
repnz
inc
jnp
fists
popf
repz
movsl
insl
test
cltd
mov
dec
jbe
arpl
pop
movsl
xor
or
sub
cli
adc
and
fs
push
jle
cmc
mov
fs
cltd
les
lods
std
adc
ret
arpl
mov
jb
xor
fnsave
fdivl
dec
cmpsl
imul
fisttpll
loop
subl
mov
adc
pop
mov
stos
fcomip
mov
xchg
orb
repz
into
in
adc
fnstenv
cmp
cwtl
adc
push
inc
bnd
fdivrp
testl
mov
fstpt
iret
js
mov
gs
loop
orl
xorb
and
les
pusha
push
adc
mov
push
dec
add
push
inc
dec
push
fistps
mov
fucomip
fs
aas
pop
inc
imul
mov
mov
neg
dec
inc
mov
popa
dec
cmp
xchg
stc
roll
and
fisubl
mov
xor
cli
xchg
or
pop
cmp
and
pop
jle
jbe
mov
std
leave
and
ret
xchg
cltd
adc
std
mov
adc
or
adc
mov
jae
stos
daa
aas
out
mov
lds
bound
aas
aad
sbb
mov
jl
mov
mov
clc
icebp
lds
jle
xchg
inc
mov
pusha
in
jmp
psubq
push
jg
cmp
daa
pop
pop
imul
ds
stos
ss
xor
xor
int3
in
rolb
lahf
dec
loopne
rclb
dec
and
dec
icebp
xchg
jnp
cld
pop
shrl
and
test
pusha
sti
mov
test
mov
push
fisttps
xor
mov
jge
adc
lahf
aad
jno
shl
rclb
and
dec
addr16
sti
test
pop
jbe
jl
adc
loop
inc
stc
sub
push
mov
daa
repnz
imul
sbb
hlt
addr16
xchg
in
and
xor
mov
es
imul
rorl
cmc
fiadds
add
or
sub
pop
jne
sbb
sub
and
jno
and
int3
call
shlb
mov
xchg
fnstcw
mov
ret
and
mov
cmpsl
jecxz
js
jp
pop
ss
sahf
xorb
dec
xor
sbb
scas
lock
pop
xor
fs
pop
in
xchg
rcrb
jnp
inc
xlat
roll
sti
mov
neg
ss
jle
out
leave
sarb
push
outsb
test
inc
pop
cs
jecxz
imul
fcomps
dec
movsb
ret
xor
mov
ljmp
fstpl
stos
mov
push
cld
rclb
popf
fs
mov
mov
mov
std
xchg
ljmp
jmp
imul
shlb
push
cmp
push
and
push
inc
sub
movsl
ss
inc
popf
addr16
sarb
int
or
popf
stos
mov
add
adc
sbb
xor
lret
out
add
es
mov
mov
and
pop
xchg
shl
xor
push
imulb
stos
subb
shl
lea
xor
mov
xorl
mov
add
pushf
bound
aam
hlt
mov
or
jmp
and
iret
dec
mov
je
mov
ds
das
mov
popa
or
scas
dec
lahf
scas
data16
mov
jecxz
inc
lahf
sar
cmp
dec
sub
loope
bound
push
lock
movsb
shlb
sahf
mov
stc
cmpsb
xor
int
inc
cmp
and
xor
push
ja
push
jb
dec
inc
insb
pop
fists
mov
lods
stc
mov
insb
xchg
adc
mov
lret
movsb
subl
test
sbb
insb
test
out
in
lret
out
jl
shlb
rcrb
loop
imul
stos
dec
push
lret
test
movsb
add
lods
sahf
sbb
mov
pop
cmpsl
dec
divb
testb
sub
stc
mov
daa
xchg
jb
lret
mov
jne
or
ljmp
or
pop
movsl
in
mov
sub
mov
fistpl
jle
fucompp
ret
mov
mov
xor
rol
movsl
add
aas
in
ja
jmp
push
hlt
imul
push
sub
into
clc
fwait
pop
mov
in
and
jne
scas
gs
js
cwtl
push
jmp
loopne
push
mov
xor
enter
outsl
sahf
test
pop
je
dec
adc
xchg
xor
add
mov
mov
inc
out
mov
out
sub
add
lods
push
sbb
rol
icebp
or
push
out
dec
sub
inc
adcb
fld1
adc
jecxz
shrb
imul
push
push
jmp
sub
insb
sbb
xor
test
jecxz
cltd
scas
bswap
inc
loop
rclb
mov
mov
lahf
mov
pop
imul
mov
gs
ljmp
jl
cs
clc
aaa
sbb
lahf
push
inc
and
icebp
imul
sub
aaa
push
pop
aaa
fists
pushf
int3
lea
fstpl
mov
movl
ljmp
mov
daa
xor
jb
and
cmpsl
mov
mov
adc
popl
ja
push
and
jle
js
add
std
jg
aad
jae
ljmp
ss
or
mov
outsb
push
outsl
gs
cmc
mulps
xchg
jp
xor
fists
out
cmp
jmp
insb
push
add
xchg
mov
pusha
and
jmp
jne
cmp
cmp
mov
iret
and
pop
repnz
jae
push
lods
xor
pop
or
test
and
push
lea
out
cmpb
aad
lods
movsb
jle
or
xor
mov
inc
popf
dec
negl
or
fdivrs
pop
sbb
fistpll
xchg
jl
mov
test
fnsave
loopne
mov
shll
jbe
jmp
push
outsl
push
mov
movsl
jecxz
test
inc
cs
jle
test
test
cmp
mov
xor
xchg
and
lret
add
jbe
or
scas
xchg
fadds
xor
push
push
dec
enter
mov
dec
mov
jl
mov
add
xor
jbe
pusha
sbb
xor
dec
stos
jge
inc
sbb
pop
or
dec
mov
in
sbbl
dec
dec
ds
adc
jg
fistps
je
inc
out
mov
insl
jbe
popa
sbb
cmc
mov
pop
adc
pop
outsl
mov
imul
or
loop
popa
andl
outsl
addr16
dec
jmp
add
pop
rclb
mov
dec
xor
jge
xchg
pop
js
mov
sbb
fucomip
jae
add
sbb
pop
dec
mov
mov
popa
push
inc
inc
cmp
out
adc
xchg
mov
adc
data16
inc
test
sub
hlt
mov
test
and
lret
push
mov
int
sti
into
cmp
xor
sbb
dec
cmp
in
insb
mov
repz
mov
mov
xor
and
andb
pop
xor
ror
imul
cli
dec
mov
mov
or
sarl
lret
xor
cld
or
mov
pushf
push
xchg
mov
push
add
inc
mov
shll
bound
mov
add
idivb
mov
fstpt
outsl
jg
xor
ds
ja
mov
fwait
test
push
push
test
pop
in
pop
test
cmp
ret
add
pop
ds
stos
cmp
das
xor
test
mov
imul
pop
inc
xchg
das
cmp
mov
lahf
shrd
cli
cmp
jmp
push
mov
dec
xor
pop
jo
mov
addr16
arpl
es
filds
repz
movsb
mov
and
iret
cmpsb
mov
cmp
xchg
cmpsb
notl
enter
scas
cmp
mov
push
ja
jp
sub
cwtl
dec
scas
xor
mov
jg
pop
in
inc
mov
shll
mov
mov
adc
jl
fs
cmp
mov
adc
mov
xchg
lds
and
adc
dec
dec
dec
push
shll
lock
mov
fmull
mov
mov
je
jecxz
dec
mov
push
mov
popa
xchg
or
adcl
cmp
and
sbb
fisubs
or
xchg
and
fwait
push
inc
mov
pop
inc
adc
jns
push
sbb
lea
mov
push
mov
adc
xchg
push
outsl
es
imul
sub
sub
es
and
add
or
outsl
jecxz
enter
out
xor
into
filds
inc
mov
pop
mov
inc
xchg
pop
push
sti
lock
xor
out
fsts
xor
test
mov
mov
sbb
xchg
mov
ret
mov
pop
jecxz
cmp
or
and
loopne
pslld
sbb
clc
pop
scas
pusha
in
scas
movsb
cmc
loopne
xor
mov
rol
fucomi
push
inc
shll
fwait
xor
fwait
inc
rclb
xchg
push
sbb
outsb
testb
mov
stos
cmp
push
jb
enter
jmp
push
imul
jae
gs
stos
mov
xor
fwait
jl
xchg
or
jns
incl
test
mov
mov
std
jecxz
cmp
xchg
outsl
scas
loop
dec
mov
jl
iret
add
std
nop
push
lea
outsl
orl
sbb
rcl
xchg
sub
push
mov
cmpb
mov
inc
push
cmp
jecxz
mov
es
mov
lea
push
popa
pop
pop
shl
repz
pop
cs
add
fs
and
and
lret
and
out
xchg
xor
jo
loop
cmp
mov
mov
adc
jo
jns
icebp
cld
es
push
lock
testl
popa
into
and
jmp
adc
mov
cmp
fwait
addb
lret
loope
mov
jo
xchg
scas
cli
or
and
adc
repnz
jle
pushf
inc
bound
fcompl
roll
push
inc
jle
loope
dec
insb
popa
pop
xchg
jl
dec
jmp
bnd
sub
or
inc
mov
out
sbb
cmc
fucomip
mov
push
icebp
jb
push
and
cwtl
xor
fldt
je
rorb
movsl
fcomip
scas
cmp
sbb
adc
cmpsl
aas
mov
mov
sub
pop
and
fwait
repnz
sub
mov
repz
or
push
fs
mov
mov
repnz
outsb
adc
je
dec
push
call
dec
cmp
mov
daa
xchg
sarb
mov
pop
insb
mov
mov
andl
add
xchg
pop
ds
imul
mov
inc
add
mov
jle
pop
mov
xchg
test
xor
push
js
pop
xor
mov
inc
mov
scas
call
jmp
flds
cli
sbb
lcall
and
and
lods
dec
push
loopne
data16
adc
xchg
arpl
push
xchg
dec
jb
lcall
and
sbb
xchg
push
out
stos
pop
jb
divl
pop
xchg
lahf
test
aas
adc
and
pop
pop
mov
js
fwait
mov
es
mov
popl
rcll
shr
leave
inc
xchg
jle
cmp
and
xlat
repz
ret
cltd
xchg
pop
pop
cmp
stos
jmp
xor
lcall
sub
push
sbb
lahf
repnz
push
mov
shll
in
out
add
fisubrl
insb
add
sbb
pop
xchg
xchg
mov
sub
sbb
jbe
push
push
in
clc
mov
mov
out
sbb
add
or
gs
add
and
loop
test
out
mov
mov
sbb
mov
out
sahf
stos
inc
inc
stos
lock
cltd
cmc
rcll
pusha
imul
rolb
int
jae
je
rcl
push
movsb
int3
jns
cs
cmp
int3
mov
mov
sub
mov
sbb
xor
sbb
sub
xorb
inc
leave
jbe
dec
mov
pop
add
pop
fsubs
lcall
shll
stos
stc
xor
addr16
mov
pop
and
dec
out
movsl
mov
bnd
pop
mov
dec
mov
js
rorl
dec
xor
es
cltd
cmp
sub
in
dec
pop
lahf
jae
mov
xlat
insl
xchg
test
int
movsb
mov
sbb
aam
xchg
lret
seta
inc
arpl
out
mov
mov
fwait
xor
ret
fcmovne
movsb
cmpsb
neg
shrb
mov
cld
outsl
sbb
flds
sbb
das
aad
add
mov
nop
shrl
cwtl
xchg
sbb
pop
inc
lahf
push
fmull
pop
mov
sub
iret
test
mov
push
fldenv
insb
and
arpl
aaa
pop
ficoml
mov
adc
pop
or
inc
fimull
outsl
repnz
iret
dec
xchg
imul
sbb
gs
cmp
lock
iret
inc
sahf
movsb
mov
das
add
cmp
fidivs
pop
and
cld
shr
push
repz
jne
push
ja
jecxz
mov
mov
push
dec
pop
push
into
inc
pop
imul
mov
push
lods
lea
dec
add
cmpsl
scas
inc
pushl
adc
popf
lret
test
push
pushf
and
sub
pop
and
popf
mov
fdiv
adc
push
mov
xlat
je
adc
addb
inc
sahf
push
pop
in
or
push
in
into
xor
ret
or
push
mov
jne
movsb
jecxz
iret
push
jb
mov
sbb
loope
cmp
pop
lret
sbb
push
nop
or
loopne
shll
xchg
and
outsl
outsl
std
mov
push
das
daa
cpuid
sub
cwtl
mov
sbb
fiadds
xor
mov
rcl
push
mov
inc
xor
std
sub
lock
jns
cmp
push
scas
addl
pop
jmp
sbb
cmp
inc
pop
push
insl
nop
das
jge
inc
test
inc
aad
cmp
inc
jmp
imul
jo
jl
lock
movb
cltd
xchg
addl
fildl
rorb
sbb
inc
popa
leave
std
cmc
pop
xor
test
push
xchg
jns
or
adc
xor
pop
lock
dec
es
jae
xor
xchg
lods
cld
push
dec
lret
hlt
popa
or
cmp
jge
jp
sub
cmp
push
aas
adc
sub
shlb
popa
push
jl
rcrl
out
pop
scas
mov
pushl
jae
sbb
mov
push
mov
jecxz
int
cmpsb
inc
xlat
dec
pop
add
adc
incl
hlt
popf
notl
mov
sub
in
inc
rcll
jbe
inc
pop
mov
outsl
and
inc
mov
or
or
das
add
test
xchg
push
add
rorb
sbb
nop
in
dec
loop
pop
xor
aam
jl
dec
frstor
imul
les
adc
and
xchg
jl
cmc
enter
dec
pop
js
and
lock
mov
sbb
popa
imul
pop
jae
sbb
sub
in
adc
icebp
xchg
push
orb
xchg
jp
mov
fs
mov
mov
fsubs
sarb
arpl
dec
xor
mov
cmpsl
or
adc
pop
inc
or
hlt
mov
pusha
cmp
mov
daa
xchg
cmp
inc
xor
outsb
pushf
jnp
cmp
mov
lret
jb
jbe
jge
mov
adc
data16
js
or
ds
call
cltd
lea
out
arpl
das
dec
or
push
sahf
arpl
sbb
sbb
jns
inc
out
add
jp
jne
dec
xor
adc
sahf
jne
xchg
or
loope
and
and
je
and
sub
or
pop
mov
or
enter
pop
sbb
mov
nop
fcomps
xchg
cmpsl
test
sub
pop
inc
adc
inc
bsf
idiv
je
cltd
mov
adc
add
lret
mov
nop
adc
in
xchg
mov
inc
cltd
sub
outsb
popf
nop
in
add
push
std
je
inc
fsubrs
mov
mov
fnsave
inc
fwait
mov
push
enter
sub
pop
xchg
jnp
inc
push
js
add
sbb
orb
jne
pop
sbb
mov
jbe
lock
test
jp
cmp
mov
pop
sbb
lods
inc
stos
lcall
mov
dec
mov
shrl
mov
cltd
cli
es
push
inc
lret
sarl
lock
pop
jp
insl
lret
jge
fldenv
cld
data16
jno
out
jbe
out
adc
test
js
ds
int
mov
mov
cmp
pop
and
dec
jae
hlt
stos
hlt
cmp
and
loop
sbb
push
push
sub
cmp
in
mov
sub
sar
ds
fadd
xchg
inc
clc
out
aaa
or
sbb
push
int
cli
lret
std
xor
mov
push
pushf
cmc
imul
insb
movsl
pop
scas
or
in
rorl
add
jb
sbb
dec
push
xor
adc
adc
gs
call
add
insl
xchg
decb
rclb
sbb
lret
xchg
mov
mov
xchg
mov
movsl
or
inc
ja
add
je
push
and
mov
gs
je
jp
mov
out
mov
sbb
mov
bnd
cmpsb
jp
push
scas
loopne
mov
rclb
aaa
cmp
fisttpl
out
sbb
es
push
sbbl
popl
hlt
and
adc
mov
jecxz
add
mov
sbb
lcall
mov
xchg
cld
push
ja
cmc
imul
and
rcrl
subl
xor
out
sub
lretw
call
shl
rcl
ret
jge
mov
push
dec
into
adc
loopne
xchg
adc
aaa
xchg
jo
pop
push
fildl
adc
lret
xchg
outsl
ja
fwait
sbb
rol
or
jg
roll
lds
cmpsl
out
xchg
xchg
add
shll
jge
stos
jns
or
and
arpl
xchg
mov
loopne
sub
test
adc
fimull
imul
xor
pop
inc
push
push
and
mov
mov
mov
mov
mov
dec
adc
subb
stc
sub
adc
push
test
jle
dec
jle
jp
roll
mov
mov
jle
pop
mov
push
mov
push
sti
shlb
xor
add
int3
popf
arpl
and
pop
mov
js
scas
mov
sbbb
xor
xchg
cmp
je
call
into
clc
mov
mov
push
pop
jecxz
jmp
jne
cld
in
jle
adc
ror
test
sub
jg
ds
in
ljmp
jns
adc
inc
shl
cmp
adc
insl
inc
jnp
pop
das
mov
or
mov
dec
fidivrs
fidivs
dec
or
sub
dec
std
rcrl
jge
in
stc
imul
mov
repz
jmp
and
push
out
jl
rclb
cmp
jp
test
mov
jge
ds
sub
subl
jge
fists
lcall
clc
or
dec
xchg
popf
lret
fsubp
sub
shl
inc
pop
mov
dec
cwtl
jle
jae
dec
mov
push
cmpsb
push
sub
cmp
leave
dec
ret
scas
ljmp
dec
jb
and
push
pusha
sbb
jge
inc
sar
mov
mov
jge
out
mov
subb
out
inc
push
push
jbe
mov
sahf
jecxz
and
cmp
push
adc
repz
movsb
lds
xchg
je
pop
stos
cs
push
subb
mov
rcrl
mov
cltd
cld
and
cli
enter
lcall
mov
jg
mov
inc
dec
cs
fs
pop
arpl
or
adc
mov
in
mov
outsl
loope
sub
pop
jae
push
adc
je
shrl
in
or
mov
pop
out
add
push
rol
scas
push
jge
push
pushf
ror
push
inc
clc
outsb
mov
cltd
fwait
xor
hlt
enter
int
pusha
or
dec
orl
mov
mov
lret
xchg
sahf
ret
mov
aad
mov
pop
stos
mov
dec
in
mov
lods
outsl
mov
mov
iret
push
xchg
jge
sti
cmc
gs
insl
mov
ljmp
test
and
or
lret
mov
mov
adc
jae
lods
or
loop
nop
call
xchg
xchg
xor
js
mov
aam
pop
in
pop
xchg
rcll
mov
pushf
push
cmpsl
mov
dec
fisubrl
push
repnz
xor
xchg
jge
cs
mov
adc
pop
in
jmp
add
cmp
hlt
icebp
popf
or
je
sub
testl
ffree
xor
push
push
out
push
popf
sbb
stc
mov
sbb
pop
sbb
xchg
push
fs
xchg
inc
sarb
dec
inc
std
jg
shrb
sti
xchg
dec
mov
xor
and
test
inc
les
xchg
xor
push
dec
dec
test
mov
dec
dec
mov
xchg
jmp
push
cwtl
leave
sahf
xor
xchg
ret
adc
pop
or
aad
fnstsw
loop
cmp
sub
test
or
dec
push
pop
jmp
adc
enter
loopne
mov
push
shll
and
xor
nop
mov
rclb
shll
sbb
sbb
push
enter
jge
push
pop
mov
das
dec
and
jmp
add
data16
mov
jo
mov
test
jns
test
sahf
dec
imul
pop
pop
enter
mov
xlat
add
cmp
xor
jnp
sbb
aam
fs
or
stc
pusha
out
pop
ja
insb
mov
dec
outsl
movsb
in
in
dec
lods
outsl
inc
addb
lds
pop
scas
jns
lods
ja
test
int3
sti
add
rclb
xor
aad
rolb
mov
jl
lods
stos
adc
sub
cmp
or
mov
jecxz
or
pusha
xchg
nop
mov
popf
mov
aad
in
xchg
lret
sub
dec
frstor
loope
xchg
fcompl
lods
cmp
ljmp
add
pop
and
add
gs
pop
mov
dec
aas
decl
dec
sti
std
cltd
mov
inc
fs
mov
adc
cs
or
push
xchg
fisubrl
imul
sti
iret
mov
pop
lea
cltd
mov
ret
sbb
xor
cmp
adc
icebp
push
adc
mov
cmc
lods
cmpsl
insl
xchg
inc
jmp
pop
xchg
pop
jb
lea
add
add
roll
clc
xorl
push
cwtl
lret
sbb
arpl
mov
inc
mov
or
nop
jmp
pop
pop
or
inc
push
adc
imul
test
dec
dec
daa
mov
sbb
cmp
pop
dec
cli
pushf
ljmp
cmpsl
jmp
rcl
sbbb
mov
jnp
les
mov
imul
pop
mov
lahf
sbb
in
dec
ja
add
mov
scas
sbb
xchg
inc
je
sbb
jnp
mov
cmpsb
jmp
fnsave
sub
and
aam
lret
push
xor
sub
fs
mov
jns
test
cmpsb
fwait
jg
fnsave
or
dec
inc
mov
jbe
mov
mov
pop
rclb
push
test
mov
mov
xor
sarl
pop
insl
push
xchg
sub
fwait
aam
dec
gs
movsb
and
pop
xchg
loopne
jb
lahf
ljmp
and
sub
pop
out
pop
adc
fwait
inc
dec
sahf
stos
rorb
mul
push
pop
imul
in
add
jmp
notb
mov
adc
inc
cmpsl
xchg
sahf
mov
fbstp
pop
push
jae
cmp
clc
mov
dec
xlat
sub
inc
adc
cmp
scas
pop
repz
test
in
xor
adc
inc
testl
xchg
adcl
testb
pop
jo
push
lret
popf
cmc
cmpsl
ja
pop
add
enter
pop
xorb
popa
cmp
sbbl
sahf
loopne
mov
sub
fimuls
or
inc
sbb
xchg
shr
sti
test
cwtl
mov
icebp
loop
data16
or
mov
add
pushf
lds
push
out
inc
inc
pop
lcall
out
or
jmp
cmp
sbb
add
fldenv
adc
dec
movsb
ja
push
popa
sar
dec
aaa
adc
sbb
push
adcl
movsl
call
jl
fisttpll
inc
sbb
sbb
add
int
rep
and
in
lret
jmp
pusha
jb
push
mov
test
mov
shlb
in
fdivs
inc
imul
and
xor
ucomiss
shr
sbb
jge
shlb
out
mov
repnz
pop
jne
xor
dec
repnz
jnp
sbb
and
hlt
fisubl
lahf
fucomip
ds
mov
push
arpl
lcall
fdivl
mov
loope
cltd
outsb
push
lcall
jp
lahf
rol
ss
movsb
push
jle
mov
jbe
xor
bound
js
mov
push
js
int
aad
push
test
mov
jp
movsb
imul
lahf
mov
mov
dec
addl
mov
lahf
cmp
loop
in
lcall
cli
inc
shlb
sub
push
dec
jle
jns
push
jmp
mov
shlb
push
pop
mov
addr16
lahf
cmp
push
xor
nop
out
mov
cmp
mov
sti
push
sub
sbb
in
push
repnz
xchg
pop
jno
push
jp
scas
iret
mov
in
adc
or
stos
mov
xchg
mov
insb
cmp
cmp
sbb
out
into
cmp
push
cmp
lret
add
sahf
or
xor
push
xor
inc
jbe
mov
inc
sub
pop
mov
lret
push
dec
fdivs
push
sub
xchg
jbe
fsubrl
loope
stos
mov
jmp
mov
xchg
stc
sub
jae
jb
inc
scas
xlat
aaa
adc
cmp
call
inc
frstor
enter
ljmp
xchg
mov
das
test
mov
iret
adc
loope
jecxz
adc
sub
jmp
in
imul
xor
or
add
mov
rcr
pop
xchg
push
rcrb
mov
adc
loop
or
stos
inc
or
xchg
test
das
stc
pop
mov
adc
cmp
xlat
mov
rcrb
fnsave
mov
icebp
inc
pop
jg
out
sbb
in
shlb
jge
mov
pushf
inc
adc
lcallw
inc
cmp
jl
fucomp
movsb
subb
pusha
and
movsb
lahf
add
lahf
cmp
bound
jmp
scas
sub
mov
lea
adc
dec
cmp
xor
mov
jp
add
adc
sbb
push
subb
mov
out
xor
mov
push
out
xchg
les
imul
rcr
inc
cmp
xor
mov
cmp
mov
fxch
repz
xchg
das
or
lea
into
in
jo
cs
nop
mov
jo
mov
pop
push
lcall
lahf
xchg
cmp
add
insb
stos
movsb
pop
jg
push
outsl
sar
out
adc
push
mov
ja
push
pop
xchg
lea
mov
mov
add
sbb
subb
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
mov
pop
pop
addl
pop
ds
mov
jp
inc
pop
jno
decb
cwtl
and
cmc
pushf
pop
or
add
push
test
loope
and
sub
xchg
xor
cmpsb
loopne
pop
daa
xchg
enter
inc
test
or
in
mov
pop
jle
repz
sub
mov
shlb
out
test
pop
mov
mov
pop
cmc
push
ja
out
dec
dec
mov
sbb
out
hlt
int3
test
add
cmp
movsb
mov
lahf
leave
add
mov
push
mul
fdivrl
lcall
and
push
ljmp
shlb
sahf
fdivrl
mov
cmp
stc
ljmp
in
sbb
ljmp
jl,pt
addb
scas
dec
daa
push
jl
push
add
jmp
gs
inc
adc
scas
das
sbb
cmpsb
lods
dec
jg
jmp
push
loope
ds
shll
sar
cmp
ja
insb
in
les
pop
and
adc
jle
je
fmuls
ds
cwtl
fmull
adc
fimull
fwait
adc
xchg
icebp
pop
adc
mov
int
dec
into
mov
add
xor
ret
jmp
es
mov
les
dec
bound
jle
repz
lods
fldcw
sub
mov
stc
imul
sbb
lahf
leave
sahf
jmp
ljmp
fsts
lds
lods
pop
jne
sbb
icebp
jg
and
ja
fsubrl
jecxz
rorb
mov
fimuls
xor
xor
adc
movsb
pusha
mov
xchg
inc
mov
mov
jo
in
sbbb
mov
mov
pop
in
and
add
clc
sbbb
push
mov
orb
fisubs
mov
jecxz
dec
xchg
or
sete
xchg
or
ljmp
nop
fcoms
push
cmpsb
scas
outsl
jne
jge
das
lcall
rcrb
mov
jmp
insl
pop
pop
ret
pop
mov
test
cmp
push
test
fcom
mov
jo
dec
mov
push
fisttpll
cmpl
fnsave
xchg
sbb
into
sub
jnp
mov
popf
fldl
sti
xor
or
adc
jmp
arpl
rclb
cmp
insl
ds
sti
jo
pushf
mov
test
jmp
out
fs
fbstp
ja
push
into
sub
int
test
aaa
jns
mov
adc
aas
in
jne
push
mov
stos
push
pop
mov
lods
mov
out
add
pop
loop
fs
mov
and
fwait
repz
movsb
imul
inc
mov
pushf
sbb
sbb
pushf
rcll
sub
push
scas
scas
jge
es
adc
hlt
rclb
inc
mov
in
pop
jb
inc
int
push
int
sbb
stos
int
sub
mov
adc
jae
daa
xor
mov
sub
or
cmp
or
loope
in
push
out
jno
sub
xor
imul
jge
in
in
pop
cs
mov
in
ljmp
lret
xchg
cltd
ret
aaa
dec
cmp
jle
call
adcl
mov
lcall
nop
mov
mov
xor
mov
mov
sbb
pop
add
out
or
mov
jns
popa
outsb
add
inc
pop
add
cmpsb
sbb
push
repz
nop
cmp
push
push
jae
sbb
nop
ss
outsb
xchg
pop
into
mov
xchg
mov
scas
rolb
push
add
xlat
sub
fiadds
in
pop
sti
inc
dec
push
addr16
mov
out
cwtl
daa
lcall
outsb
mov
xchg
in
pop
bound
mov
dec
fldenv
or
xchg
mov
mov
or
jb
lahf
insb
clc
inc
repz
insl
sbb
fwait
adc
mov
cmp
push
scas
mov
cmp
mov
cmp
arpl
and
std
and
pop
pop
pushl
hlt
xor
mov
fsts
push
nop
xor
cwtl
and
push
inc
pop
test
inc
xor
mov
xchg
into
cmpsb
enter
dec
dec
push
inc
lahf
jmp
mov
mov
stos
ja
inc
test
jae
sub
cmp
decl
push
sub
lock
sub
std
imul
mov
dec
into
hlt
aad
cmp
int
fsubrl
sub
outsl
xchg
fisubrs
ljmp
or
or
aad
jle
cmp
cmp
aam
dec
pusha
aam
xchg
lea
jecxz
hlt
jg
mov
testl
fnsave
addl
insl
jae
push
xor
adc
mov
frstor
inc
pusha
xor
jne
imul
cs
dec
inc
cmpsl
add
sbb
fimull
cmp
jmp
inc
jbe
jmp
sbb
hlt
je
mov
jns
xchg
add
std
sub
lods
les
test
dec
mov
sub
sub
jle
push
or
mov
cmp
jo
pushf
xor
push
dec
fistpl
and
mov
ds
sbb
inc
mov
mov
sub
jmp
mov
or
xchg
lods
cmpb
and
fiaddl
dec
repnz
cmc
inc
pop
push
or
cmp
outsl
inc
icebp
popa
cmp
stos
jb
out
repz
mov
lock
and
jge
aaa
jne
mov
jg
dec
clc
std
pop
and
in
lea
shlb
lods
hlt
sbb
xor
out
mov
pop
outsb
sbbl
or
push
mov
cmpsl
cmp
mov
or
incb
into
mov
adc
adc
cmp
aam
jae
inc
clc
movsl
iret
xchg
int3
outsl
scas
flds
pop
mov
loope
lahf
mov
dec
push
ret
xchg
pop
push
or
out
incb
or
dec
imul
rcl
sbb
pop
xor
roll
pop
dec
lret
out
xchg
js
inc
xor
jmp
movsl
icebp
cmpsb
icebp
ret
add
xorl
pop
lods
mov
push
outsl
shll
push
mov
mov
test
or
int
int
sub
cmpsl
gs
mov
out
iret
mov
jns
mov
subb
lods
mov
gs
ss
rorl
lret
cmc
pusha
add
icebp
in
leave
cli
scas
xchg
testb
jle
cmpsl
movsl
add
sub
add
jns
outsb
out
shll
mov
cmp
cmp
mov
lret
jns
pop
xchg
bound
ljmp
mov
cmp
mov
or
lods
mov
mov
ds
jmp
movsl
cli
fists
add
mov
pop
mov
add
sub
or
sbb
movb
loopne
out
sub
movsl
inc
movsb
rcrb
jb
push
stos
cli
je
cwtl
jmp
ficompl
or
ds
cmpsb
in
jp
bound
mov
sti
inc
scas
mov
mov
popa
das
pop
sti
push
add
push
cmp
loopne
or
push
movsl
test
mov
sbb
shrb
lcall
adc
add
jmp
repz
xor
jae
or
insl
out
xchg
jl
fisttps
mov
aam
mov
xchg
dec
ja
test
sahf
popa
data16
jno
scas
pusha
jl
add
not
xchg
into
push
filds
mov
jg
sti
int3
sbb
insl
sbb
loop
pop
inc
ret
push
out
idivb
pop
sbb
push
or
lret
in
mov
jmp
inc
popl
jmp
mov
aas
cmp
dec
mov
xor
std
cmpsl
jb
inc
movsl
inc
lods
mov
or
movl
xchg
dec
mov
xchg
popa
pushf
cmc
jns
loope
xchg
inc
fnclex
mov
adcb
lret
add
mov
mov
outsl
ds
pop
mov
cmp
push
stos
and
mov
mov
sub
subl
std
cs
ljmp
stos
pop
arpl
or
pop
mov
iret
pushf
testb
cmp
mov
inc
leave
xchg
cli
mov
ds
mov
bnd
adcl
mov
clc
jge
inc
add
adc
es
xor
popf
dec
and
push
rcll
and
rcll
xchg
ja
and
cmp
lret
inc
mov
cwtl
int3
or
mov
mov
movsb
popf
pop
stos
mov
mov
adc
dec
cmp
mov
int3
dec
inc
rcrl
mov
inc
or
mov
pop
andb
pop
cmpsb
xchg
lahf
push
cmc
call
imul
adc
sub
cmp
cmp
lds
notb
sbb
fsubrl
into
sti
shlb
fimuls
dec
adc
push
or
pop
jnp
ljmp
xor
sub
push
cmpsb
rcl
shrl
rorl
in
lahf
mov
sarl
adc
ficoml
inc
je
xor
ss
popf
jbe
rcr
push
aam
rcl
popa
push
pop
xor
xchg
mov
push
sti
sti
mov
test
out
dec
test
push
mov
gs
cmp
fmul
sbb
or
mov
insb
divl
clc
fs
push
out
rcrl
jne
mov
in
and
xchg
hlt
xor
stos
aas
mov
mov
sbb
pop
add
adc
ja
std
fbld
pop
push
outsl
sub
into
cmp
fmuls
dec
mov
sbb
int
test
dec
adc
xchg
or
sti
sub
movsb
in
mov
dec
mov
adc
cmp
stos
mov
jo
loop
and
mov
sbb
adc
xchg
leave
lahf
add
loope
imul
pop
arpl
add
pop
loop
mov
xor
add
lock
jle
testb
xchg
mov
nop
test
push
mov
xor
lret
sub
stc
in
mov
ljmp
js
hlt
dec
je
adc
mov
fs
ret
lcall
in
mov
lds
dec
loope
or
outsl
push
pusha
cmp
xchg
push
pop
sbb
adc
and
leave
hlt
ss
mov
test
pop
xchg
sub
ss
in
movsl
inc
icebp
sbb
mov
pop
repnz
ret
inc
add
cmp
xlat
push
call
cli
leave
lcall
inc
pop
cmp
lods
sbb
pop
inc
cwtl
cmp
dec
mov
stos
jle
mov
pop
jo
xor
dec
inc
and
outsl
pop
jle
push
ss
pop
dec
sahf
and
jnp
bound
loop
dec
arpl
or
mov
test
mov
gs
out
cltd
add
popa
jne
jecxz
xchg
int3
fidivl
push
xlat
out
jl
mov
add
jnp
pop
jno
mov
dec
push
imul
ret
test
adc
mov
mov
mov
movsb
xor
mov
outsl
pop
xchg
in
in
cld
dec
popf
imul
mov
ljmp
add
shll
lcall
inc
mov
sbb
es
mov
sbb
inc
mov
pop
sbb
adc
lods
retw
add
jnp
shrl
popa
cmp
enter
add
add
mov
rorb
daa
push
sbb
popl
adc
int
sbb
lock
sbb
ret
mov
pop
adc
xchg
stc
mov
dec
add
push
iret
fstpt
sbb
sbb
loopne
and
stos
mov
cmp
push
out
mov
mov
mul
dec
mov
mov
into
inc
jl
mov
test
inc
cmpsb
sub
rcl
pop
mov
movsl
js
and
xor
add
push
fwait
pushf
clc
decl
shrl
int
fs
popl
push
adc
ss
lcall
in
add
outsb
incb
dec
lods
int3
das
cmpsb
cmpsl
push
repnz
push
lea
mov
faddl
pop
imul
flds
push
cmp
loopne
mov
shl
jp
sub
ja
bound
aaa
sub
fnsave
shlb
push
into
cld
and
popf
fcoml
outsb
sbb
add
xchg
lret
lods
gs
jb
in
aaa
repz
push
scas
aam
jnp
jp
scas
cmc
rcrb
sub
push
sbb
push
jl
roll
test
add
addr16
mov
lahf
loopne
fnstsw
and
add
mov
ja
dec
insb
mov
loopne
cwtl
in
sbb
dec
push
adc
nop
sbb
in
mov
jecxz
ds
mov
mov
repnz
mov
mov
cmp
sbb
test
pop
jae
dec
xchg
jl
rcrb
shrl
leave
insb
fldt
jo
adc
jae
mov
sbb
cmp
fdivr
pop
xchg
dec
mov
das
bound
test
push
pop
stc
jmp
arpl
sub
das
push
xchg
add
data16
out
jmp
adc
sbb
leave
aaa
ds
push
andb
sbbl
dec
add
stc
xchg
mov
sbb
pop
mov
repnz
mov
xor
pop
and
mov
push
imul
je
xor
xor
add
and
push
pop
iret
mov
xlat
sbb
bound
lock
stos
bound
mov
test
mov
out
cli
fsubl
inc
icebp
das
fldln2
lea
mov
sub
fstl
loope
nop
mov
fwait
incb
pop
add
xor
mov
add
sarb
jl
gs
ret
iret
clc
add
inc
sbb
jmp
jle
lock
jecxz
jae
cmp
push
test
out
fcompl
lock
mov
jb
mov
add
outsb
popl
inc
and
lea
aam
faddl
jne
in
cmp
xor
or
out
mov
adc
xchg
into
mov
add
call
jl
jbe
add
add
or
pop
std
ljmp
shr
imul
sbb
loopne
inc
int
push
cmpsl
push
mov
mov
xchg
pop
add
scas
cmpl
shll
or
ficoml
sbb
adc
mov
repz
out
add
add
and
dec
mov
sahf
cld
in
push
sub
jns
std
loope
xchg
fcom
push
sbb
leave
cltd
push
outsb
push
repnz
in
dec
mov
and
push
pop
jge
pop
jg
pop
jae
stos
call
les
out
add
or
push
xchg
jbe
cmp
and
pop
lea
insb
imul
ret
dec
in
cmc
daa
mov
int3
test
pop
out
daa
cmp
dec
cli
lret
mov
loopne
movsl
jne
sbb
push
hlt
mov
ret
pop
insb
fs
pushf
jp
or
out
repz
mov
mov
mov
js
mov
mov
xchg
rcrb
add
fcmovnb
in
fwait
push
mov
test
ret
lcall
sbb
aam
loopne
sbbb
fcmovb
mov
lods
jno
sti
iret
sbb
xorl
sub
mov
inc
xchg
fdivrl
call
sub
inc
popa
ret
out
es
pop
cmc
lods
ss
mov
sbb
loop
pop
aam
sbb
and
stos
fidivrl
pop
mov
fs
xchg
clc
fmuls
stos
mov
pop
push
push
sbb
sub
cwtl
pop
xor
sbb
jbe
xchg
jg
mov
popa
subl
and
aam
mov
cwtl
sbb
shl
in
mov
xchg
pop
imul
cmp
nop
push
xor
rcrb
mov
mov
pusha
cmp
test
addr16
adc
test
dec
dec
jns
xor
sbb
into
out
cmpps
pop
adc
fimuls
xchg
je
cwtl
push
cmp
pop
lret
dec
lods
dec
insl
or
nop
gs
test
ret
jge
sub
pop
fldcw
mov
test
repz
xchg
xchg
ret
pop
scas
push
lods
dec
fstpt
lret
xor
lods
pusha
daa
xor
or
movsb
movsl
test
mov
cmpsl
imul
jmp
jle
pushf
les
adcb
out
rorl
and
cmp
jp
orl
popl
or
sbb
inc
sbb
and
mov
add
data16
out
mov
dec
pop
repnz
push
fmuls
cmp
imul
gs
bound
jg
push
pop
mov
mov
outsb
mov
insb
fisttps
xchg
movsl
lcall
je
int
mov
cmp
mov
int3
fistl
mov
mov
inc
lods
movsl
mov
jne
add
jo
cs
out
jl
lret
dec
out
mov
mov
call
mov
loope
mov
fsubrs
push
adcl
mov
in
je
push
loope
mov
aas
loop
fs
dec
inc
cmpsl
push
mov
dec
push
addr16
inc
fimull
lahf
mov
mov
or
jne
push
jle
lret
idivl
into
dec
or
or
lods
cwtl
mov
divl
je
dec
pusha
enter
rcll
mov
push
or
jp
mov
xor
or
xchg
fsubrl
repnz
jo
lcall
mov
fdiv
dec
mov
mov
cmpl
test
inc
inc
and
sub
cli
pop
sbb
in
inc
in
popa
rolb
jl
pop
xchg
fcompl
xchg
imul
mov
and
pop
add
cli
inc
jmp
jb
gs
loope
lret
testl
mov
int3
push
or
pop
cmp
mov
imul
add
jb
outsb
push
gs
addl
xlat
lods
dec
xor
leave
mov
sub
jp
mov
hlt
pusha
and
add
fidivs
and
iret
push
fists
insb
jnp
in
clc
shlb
adc
test
xor
hlt
sarb
repz
mov
stos
fsts
pop
jbe
mov
jo
jae
pushf
ja
roll
imul
fmuls
hlt
add
mov
cmp
lods
and
pushf
rorb
mov
dec
xchg
mov
loop
dec
nop
add
add
addb
sarb
insb
push
add
or
xor
xchg
or
std
imul
adc
jnp
arpl
out
mov
sbb
xor
mov
rcll
test
xor
push
dec
jl
inc
repnz
push
loopne
pop
bound
jnp
pop
mov
aad
pop
sbb
movsl
inc
out
lret
push
fadds
int3
inc
pop
pushf
sahf
movups
push
jecxz
jb
cld
std
pop
inc
or
pop
dec
mov
inc
out
sarb
imulb
sar
aas
ds
in
jns
ja
fisubrl
std
xchg
pop
adc
dec
mov
xor
xor
sbb
out
fs
sub
outsb
rolb
push
std
adc
insl
jmp
repz
sbb
movb
adc
repz
gs
loope
adc
cmp
ret
lahf
mov
decl
std
pop
mov
into
ljmp
rorl
sub
insb
sub
fnsaves
fiadds
jg
jnp
jbe
pop
fnsave
and
add
call
movsb
scas
jle
sbb
arpl
push
test
fnstcw
fbld
push
scas
arpl
inc
jb
sbb
enter
in
cwtl
stc
inc
mov
add
into
inc
scas
dec
cltd
jb
mov
loopne
adc
mov
fsubs
ret
adcb
cwtl
scas
jl
inc
cmc
jb
lcall
sarb
lret
cs
push
mov
jle
lock
andl
add
pop
cli
mov
sbb
iret
orl
adc
fs
cmpsb
xchg
aas
cmp
jp
jbe
cld
aam
mov
stos
adc
sub
mov
aas
jae
fcomi
jmp
sbb
iret
push
jnp
mov
add
sub
cltd
movsb
add
test
aam
push
hlt
lock
sub
cmp
xchg
adc
dec
cmp
inc
pop
imul
pop
adc
mov
xchg
outsl
jl
xchg
movsb
mov
and
xlat
lods
or
and
cmp
and
sbb
ja
aaa
call
jns
and
push
shlb
call
fisubrs
sahf
adc
arpl
fsubp
sti
popa
mov
push
sub
leave
push
adc
push
dec
popf
jp
shl
jo
fwait
sbb
negb
idivb
jb
int
and
mov
lock
inc
inc
jae
xchg
loop
xor
cltd
es
movl
xor
xchg
fimull
mov
pop
lods
imul
shrb
mov
cld
adc
pop
gs
ret
mov
aas
pushw
rdpmc
cs
dec
jnp
dec
xor
or
int
jo
pop
add
xchg
pop
call
mov
lock
dec
mov
js
jle
push
std
test
push
ret
sub
pop
es
movsl
ret
jmp
insb
pop
xchg
xchg
dec
pop
sbb
sbbl
sbb
or
dec
add
xchg
xor
das
shrl
je
and
jle
cmp
movl
jg
out
add
imul
add
dec
push
adc
xchg
fstl
add
xchg
mov
stc
int
inc
sub
jnp
cmp
fistpl
xchg
jb
add
adcb
inc
jg
test
cmp
fstps
mov
mov
cmpsl
lds
leave
out
sub
cmp
stos
mov
jecxz
das
fs
pop
testb
sbb
mov
fcoml
xchg
jle
stos
or
inc
xor
pop
popf
ds
or
out
nop
sahf
and
lea
mov
ss
add
cmpsb
dec
xor
lret
xchg
pop
sbb
and
sub
addr16
dec
arpl
pop
xor
rcl
add
pmuludq
sbbb
ss
xchg
rol
movsl
movsl
or
push
test
rcrb
imul
mov
jecxz
adc
adc
lcall
enter
and
jmp
inc
pop
data16
ficoml
mov
in
sub
cmp
mov
jo
test
icebp
arpl
mov
pusha
outsb
xchg
ja
fbld
iret
loop
data16
jp
sbb
xchg
stos
or
lock
mov
jecxz
lds
cmpsb
je
pop
sbb
pop
out
dec
push
adcb
xchg
jno
or
xor
sti
rcrl
mov
inc
aad
inc
push
sub
push
out
mov
std
call
jl
je
push
loope
push
rcr
outsb
std
addr16
incb
inc
sub
jnp
es
pushf
sarb
mov
adc
and
push
pop
sti
dec
add
inc
js
mov
add
push
hlt
xchg
pop
fisttpl
pop
adc
insb
in
leave
jns
lods
cltd
adc
loop
lods
movsb
add
mov
xchg
pop
sarl
sbb
and
arpl
mov
xorb
pop
dec
sbb
dec
xchg
test
sahf
mulb
pushf
push
je
scas
test
mov
xchg
mov
lods
insb
jmp
jnp
arpl
cmp
add
cs
cmp
push
xchg
lods
mov
inc
xor
ljmp
pop
bound
inc
stos
movsb
add
in
mov
loopne
add
mov
test
hlt
mov
mov
negb
lret
mov
mov
cmp
leave
fimull
cmp
mov
xchg
je
dec
les
ds
notl
jge
pushf
xchg
cmpb
xchg
aas
movsb
jl
sbb
out
inc
push
cmp
sti
jae
push
sbb
ret
lea
adc
cwtl
andb
das
clc
int3
aam
jmp
jecxz
inc
sub
adc
mov
shl
int3
in
cmp
or
incb
aam
mov
lret
imul
xor
dec
or
and
int
sub
rcrb
adcb
ret
neg
push
ds
pop
lcall
jbe
cmp
inc
cld
push
inc
imul
dec
adcb
shll
insl
addl
cmpb
cli
les
lock
push
pop
icebp
test
mov
xchg
cltd
mov
lret
push
mov
mov
xchg
mov
data16
faddl
pop
mov
jmp
add
mov
je
cli
inc
push
push
dec
add
add
ficompl
xchg
dec
ret
add
mov
push
adc
add
shrb
sub
jge
xor
mov
leave
cmp
mov
out
pop
mov
cmp
pop
test
push
dec
pusha
mov
sbb
in
push
in
nop
insb
aas
jp
push
mov
shl
push
jp
jl
inc
mov
pop
inc
mov
inc
test
shl
sbb
push
ret
pop
scas
nop
inc
les
push
pop
dec
imul
lahf
pop
dec
add
xor
outsb
inc
mov
mov
add
int3
rol
xlat
xor
int3
insl
in
mov
popf
xor
mov
sti
nop
adc
pusha
stc
sbb
or
cmp
mov
loopne
xor
cmp
inc
xchg
fcmovu
xor
dec
das
sbb
ret
arpl
push
enter
pop
xor
cltd
sarl
stos
clc
hlt
and
lahf
mov
cwtl
sahf
cmpl
push
cmpsl
scas
pop
dec
stos
mov
rclb
mov
popf
jbe
lods
mov
mov
pop
xchg
mov
xchg
pop
lret
aam
dec
ror
insl
push
push
adc
sub
lahf
cmp
push
loope
addl
pushf
arpl
lods
stc
jmp
mov
jecxz
clc
or
jmp
in
mov
test
xor
adc
popa
pop
cs
pop
ret
je
jmp
mov
bound
insb
pop
stos
add
mov
dec
scas
add
addr16
xchg
out
push
xor
sub
test
push
jo
mov
mov
fs
inc
push
repz
leave
push
mov
add
in
jb
dec
push
cld
inc
lret
xchg
adc
jae
mov
sub
add
movsb
pop
adc
test
inc
sub
insl
mov
mov
incl
xchg
jb
out
pop
dec
in
fbld
sbb
jle
enter
divl
fisttpl
sub
enter
jecxz
dec
jp
cli
pop
stc
out
popf
mov
push
fcomi
pushf
cwtl
nop
jp
stos
and
sbbb
je
pop
cmp
inc
data16
rcrl
sub
pushf
dec
jo
mov
jno
mov
mov
ds
lret
push
jmp
andl
sub
cmp
mov
jmp
shl
xchg
out
pop
cmp
jbe
icebp
push
loopne
jl
sub
shl
inc
enter
pop
repnz
les
and
aam
xor
or
add
fsubrl
fstpl
xchg
jg
add
test
push
out
inc
out
test
push
xlat
arpl
xor
mov
pop
shlb
or
sub
cmpsb
or
lods
sub
push
xchg
imul
sub
lock
stos
pop
pushf
movsl
repz
lods
ja
dec
adc
add
stos
dec
sahf
mov
pop
daa
mov
stc
sbb
sub
inc
dec
rcr
out
out
es
xchg
mov
pop
mov
popa
pop
lock
repnz
lcall
dec
mov
adc
cs
cmp
nop
lahf
pop
out
aaa
dec
jl
sbbb
stos
stc
out
sub
test
xchg
test
and
repnz
sbb
mov
vmread
push
fists
icebp
jne
test
add
and
mov
stc
enter
mov
mov
xor
xor
in
hlt
mov
jnp
mov
jbe
jo
lea
xor
or
subl
addb
cld
or
lods
fsub
jg
sub
xchg
hlt
inc
xchg
push
imul
jge
mov
lea
xrelease
stos
stc
shlb
sub
xchg
xor
sbb
inc
imul
addr16
leave
inc
dec
repnz
or
shr
fists
arpl
int
enter
mov
cmp
fisubs
int
outsb
sbb
fs
in
lods
test
ffreep
inc
nop
inc
sub
cmpsl
outsl
xorb
xchg
mov
mov
dec
cmpsb
fcompl
xchg
lods
or
push
jo
xor
jmp
mov
mov
pop
xor
mov
xor
xchg
cmp
xor
insl
mov
sub
cmpsb
test
push
xchg
sbb
scas
outsb
or
adc
fstpl
pushf
stc
sub
and
add
jge
daa
out
sub
mov
adc
dec
popf
jg
lea
sti
sbb
cmc
jbe
xor
push
cmpl
movsl
adc
leave
mov
dec
cmp
pop
pushf
mov
out
sar
dec
mov
lahf
ret
roll
sbb
adc
xor
cmp
ds
push
inc
cmc
pusha
xor
push
xor
inc
xlat
or
jno
push
push
or
jbe
dec
mov
xor
or
fsin
sti
int3
les
push
xor
inc
pop
test
push
sub
inc
test
repz
jo
cmp
jns
jns
push
aas
psraw
push
leave
jb
adc
popf
jnp
mov
add
jecxz
mov
mov
std
shrb
stos
dec
adc
mov
sbb
movsl
cmc
das
cmpsb
jg
push
popa
cmc
inc
add
xor
push
pop
adc
and
dec
xor
mov
pop
jbe
dec
and
adc
lock
adc
lock
add
xor
call
or
xor
xchg
cmp
lahf
out
mov
popa
lea
lock
pusha
sbb
and
pop
add
mov
jb
sub
mov
sub
cmp
cwtl
mov
cmpsl
mov
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
rorl
addb
loopne
add
insl
pop
cli
jb
or
dec
out
idivl
jge
and
fidivl
call
lret
repz
shrl
push
inc
imul
xchg
pop
mov
adc
sbb
out
jecxz
xor
outsb
sbb
pop
push
jecxz
pop
in
fimuls
push
fcmovnb
cmp
cmpsb
or
push
cmp
xchg
jb
nop
push
and
adc
shll
inc
pop
daa
add
imul
xchg
and
stos
cmp
mov
cmpsb
pop
cmpsl
mov
sbb
je
push
mov
mov
mov
mov
das
sbb
or
daa
out
cli
cli
mov
sbb
lock
div
add
xlat
mov
add
ret
stos
popa
jns
inc
cwtl
mov
dec
jmp
jmp
and
popa
in
sub
in
or
ljmp
pop
mov
and
pusha
outsl
sbb
mov
jmp
fs
xor
jnp
inc
iret
cmpsl
ror
xchg
inc
scas
xchg
loopne
and
ljmp
cmpsl
ja
mov
js
and
movsl
movsl
bound
pushf
lods
pushf
mov
mov
popf
incl
jge
push
data16
mov
lcall
fistpl
rcrl
je
adcl
loope
fimuls
stos
jns
xor
jo
data16
rorb
jp
into
push
cmp
out
sbbb
insb
iret
sbb
js
test
adc
lods
sbb
in
cwtl
xchg
stos
fisttpll
fwait
adc
adc
sbb
sbb
mov
dec
stos
xchg
lcall
ljmp
add
gs
sub
xchg
mov
shlb
lcall
movsb
mov
movsb
insl
dec
mov
adc
out
adc
mov
jo
mov
iret
mov
or
inc
dec
pop
sbb
icebp
and
loopne
dec
xor
cmp
fcmovnu
pop
shrl
int3
add
or
cmpsl
shll
add
push
loopne
dec
ds
lahf
jmp
inc
push
mov
rol
pop
dec
fdivrs
divl
hlt
lret
movsl
mov
jae
fildll
ss
jno
enter
fst
mov
push
dec
loopne
jae
repz
movsb
fcomi
mov
test
outsb
stc
cltd
push
jg
clc
aas
pop
lcall
adc
lahf
int3
mov
and
adc
mov
lcall
in
mov
add
fisubrs
out
lds
add
stc
lds
outsb
jo
cwtl
nop
xchg
pop
mov
pop
out
je
fwait
pushf
jnp
add
adcl
inc
jecxz
sub
sbb
mov
push
nop
pop
les
mov
movsb
inc
jno
add
dec
dec
rcrb
jmp
add
loope
jmp
pop
pop
test
mov
popa
cmp
fcoms
lods
lcall
arpl
insb
pop
push
sub
sub
sbb
sbb
sub
mov
xor
bound
arpl
ljmp
add
pop
call
leave
sub
ret
int
xor
cmp
sbb
and
or
hlt
mov
mov
and
adc
popa
shll
pushf
cmp
fsubr
xchg
push
adc
mov
out
or
arpl
xchg
leave
xchg
jae
mov
std
in
scas
fistl
jle
arpl
std
rcr
shll
pop
xchg
sub
sbb
pushf
adc
in
jo
gs
sbb
sbb
subb
inc
pop
jbe
jmp
xchg
mov
icebp
cmp
sbb
and
lods
lods
out
jge
lods
cmp
dec
push
jg
dec
test
xlat
mov
lock
clc
cmp
popa
std
aad
cmpb
add
cmpsb
out
test
mov
mov
push
fwait
jl
shrl
dec
inc
pop
jmp
movsl
xchg
imul
lds
mov
jecxz
add
inc
fwait
dec
sti
pop
xlat
push
inc
pop
test
aam
xchg
insl
sbb
das
into
ds
push
xchg
cmp
xchg
push
inc
add
arpl
add
subb
mov
cmpsb
shrb
sub
mov
sub
aad
jle
pushf
xor
lea
out
add
sbb
mov
fisttpll
push
icebp
mov
or
pop
jbe
jns
inc
jl
sbb
out
std
mov
sbbl
sub
inc
dec
pop
fwait
add
enter
outsl
lods
xor
inc
pop
ret
push
cmpsb
clc
cli
jle
jg
mov
push
cmp
fcoml
das
fnstsw
xor
shr
out
add
pop
lret
fcomip
cwtl
fistpll
dec
jle
pop
gs
int3
jl
inc
or
sub
jecxz
sar
stos
add
mov
or
popa
or
imul
xchg
dec
mov
or
dec
fsub
shrl
sbb
ret
addr16
and
adc
rorb
mov
xor
movsl
jbe
repz
adc
push
mov
loop
jno
pmulhuw
fscale
pop
mull
jo
push
gs
push
push
repz
mov
xchg
imul
fcmovnu
pop
add
scas
loopne
rorb
sbb
xor
adc
and
lret
inc
mov
loop
dec
lret
mov
xchg
and
pop
jno
stos
add
rolb
addr16
jmp
and
sbb
ficomps
and
mov
out
scas
fwait
cs
inc
push
mov
loop
mov
lods
jl
pusha
cmpsl
jo
add
cs
dec
movsl
shlb
push
sub
jns
testl
push
test
aad
sbb
in
ja
les
lcall
repnz
flds
jmp
bound
fstps
push
loope
adc
lret
mov
push
rorb
and
imulb
clc
sbb
xorl
push
or
and
xorl
pop
mov
cmpsb
out
pop
scas
sub
data16
cltd
pop
or
repz
xlat
rol
and
scas
insl
xor
test
out
dec
sub
xor
clc
sub
jno
mov
lret
out
pop
adc
sbb
dec
pop
in
dec
push
jbe
cmpsb
jge
sahf
lods
push
xchg
mov
jge
into
ss
pop
jl
outsl
das
imull
adc
push
loop
inc
inc
movsb
dec
orb
sbb
pop
movsl
mov
pop
pop
dec
xor
insl
js
add
rclb
iret
faddl
mov
push
dec
pop
test
stos
das
ja
push
sbb
pop
lahf
lahf
cmp
test
loopne
int
ret
add
sub
sbb
pop
cmp
mov
xchg
add
inc
scas
push
sarl
adc
or
dec
push
loopne
cwtd
push
icebp
push
mov
adc
sbb
sub
testl
mov
test
insb
jo
mov
loop
mov
and
inc
pop
repz
jnp
mov
cs
jo
icebp
sub
ja
gs
pop
pusha
dec
xchg
inc
add
in
clc
cmp
or
lea
or
in
clc
adc
mov
rcl
and
cmc
daa
nop
insb
fwait
push
push
pusha
dec
inc
std
pop
mov
mov
inc
sub
scas
scas
and
or
push
inc
sbb
pop
pop
dec
fstl
dec
mov
mov
mov
mov
add
mov
or
jo
xor
push
imul
xchg
fbstp
dec
xlat
insb
hlt
adc
xor
mov
cli
mov
mov
outsb
adc
mov
jae
test
fstpt
aam
jne
inc
loopne
clc
xor
shll
loope
cltd
mov
jle
fnstsw
adc
andl
popa
pusha
fwait
sub
int
arpl
cmpsl
xor
ljmp
jb
fadds
mov
orb
and
sbb
push
std
xchg
dec
loopne
out
scas
jns
dec
jg
mov
sub
shlb
js
mov
sbbb
das
xchg
xor
mov
mov
inc
mov
dec
arpl
xor
mov
mov
lahf
mov
jns
sti
adc
inc
adc
pop
and
and
in
inc
ret
ret
int3
add
inc
nop
lcall
add
dec
out
jns
test
rclb
aas
xchg
insb
xor
pop
in
push
mov
shll
lfs
out
mov
add
mov
jae
cmc
test
push
insb
lods
das
maskmovq
notl
push
fucom
jecxz
xchg
lea
loop
scas
push
fldenv
dec
mov
les
scas
adc
dec
and
bound
pushf
repz
xchg
ss
and
mov
cmp
inc
xchg
popa
mov
pop
dec
jnp
adc
fdivl
fldt
mov
movsl
fsts
lods
addl
lret
sti
fistpl
sub
mov
and
js
jnp
xchg
popa
push
mov
mov
shll
mov
mov
jmp
jo
enter
popa
movsb
fiaddl
cmp
cmp
div
mov
jle
dec
inc
push
xchg
cmp
and
enter
lcall
out
xchg
fsubl
xor
lcall
mov
fdiv
inc
cmpsb
cmp
pushf
inc
mov
das
mov
mov
xor
sbbb
call
mov
xlat
lods
test
movsl
pop
adc
cs
jnp
jecxz
dec
fsubl
ss
sbbb
sahf
or
flds
adc
mov
mov
jne
lea
sbb
mov
mov
repz
sub
cwtl
pop
aaa
ja
or
push
lahf
in
call
pop
pop
sti
or
jecxz
jbe
lcall
adc
filds
cli
fisubrl
lret
mov
push
lahf
push
sub
pusha
or
mov
data16
leavew
idivl
inc
dec
fcomps
lcall
in
jl
outsl
add
jbe
lods
aaa
aad
cltd
pushf
outsb
sbb
dec
push
push
xor
sbb
sub
add
fistps
fsubrs
jnp
addr16
addr16
shl
lods
mov
shl
mov
shr
sbb
add
test
xchg
jecxz
cmp
xor
dec
jns
xchg
and
xor
fwait
aad
out
cmpsb
lret
xchg
loope
sbb
aam
fs
icebp
sahf
and
add
add
push
dec
mov
les
pushl
inc
repz
dec
pop
push
sub
adc
repz
shrb
pop
stc
add
push
enter
pop
pushf
in
rorb
mov
es
in
fisttpll
adc
cmpsb
push
ds
pop
push
push
popa
sbb
in
sub
xchg
jbe
fldenv
inc
xchg
dec
lcall
sub
or
adc
nop
sub
jns
and
push
pushf
cs
push
xchg
push
pop
jle
call
inc
rorb
add
pusha
cli
int3
enter
stc
fwait
jmp
out
sub
xor
shll
dec
inc
scas
stos
pop
jo
sti
sbb
xor
pop
leave
jmp
adc
or
mov
cmp
jle
mov
lods
gs
push
pop
je
andl
cmp
pop
push
xchg
fdivs
pop
xor
xchg
cmp
and
pop
and
cmp
mov
test
pop
cmp
dec
aad
sbbl
pop
and
arpl
scas
ja
pop
xor
or
out
pop
js
and
imul
movsl
arpl
test
out
jmp
add
inc
leave
xchg
leave
jae
divl
xor
insl
fidivrs
fistpl
mov
cmp
repnz
jl,pt
je
hlt
lcall
mov
xchg
stos
dec
fwait
std
aas
cli
mov
and
xor
xor
nop
mov
xor
sub
js
bnd
psubusw
rclb
and
outsl
lret
pop
popf
mov
adc
inc
mov
fwait
jb
outsl
xor
popf
mov
std
popa
fs
push
movsl
test
dec
cmpsl
pop
jno
movsb
mov
xor
aas
in
lds
dec
mov
xchg
xor
cli
jae
je
scas
cmp
adcb
je
enter
rclb
ret
imul
jle
sahf
imul
vsubsd
fcmovnb
scas
lret
cld
cmp
inc
xchg
and
mov
and
pop
push
test
push
out
iret
jo
enter
in
fsubs
divb
sbb
adc
sub
mov
cwtl
fwait
add
sahf
dec
mov
mov
mov
mov
add
mov
test
or
push
je
jb
call
inc
xchg
and
mov
sbb
mov
out
in
xchg
cmpb
movsb
jle
jp
lret
push
cmp
pop
fnstsw
sbb
pop
cmpsl
sub
sub
push
push
test
xchg
repnz
adc
fiaddl
push
adc
pusha
xchg
stc
mov
inc
jo
push
push
inc
adc
test
in
xor
xchg
jmp
pusha
mov
mov
lock
enter
pop
test
pushf
das
std
rorb
cmp
adc
stos
inc
fcomps
inc
xor
and
add
out
int
xchg
inc
ljmp
subl
leave
and
inc
jecxz
push
insb
mov
adc
pop
jle
push
push
push
lods
dec
dec
xchg
mov
test
pop
subl
int
mov
std
xorb
ja
iret
xor
aad
pop
fsubp
mov
iret
stos
repz
dec
ret
or
data16
mov
push
es
inc
inc
xchg
and
sti
xor
jnp
pushf
push
stc
loope
mov
pop
sbb
push
jp
sbb
push
outsl
sub
lods
ds
ss
cmpsl
sub
jnp
out
out
add
xchg
xor
push
adc
addl
sub
inc
jo
imul
jae
mov
or
rcrb
nop
outsb
or
jae
inc
aam
jnp
ss
xchg
stc
je,pn
pusha
dec
xor
cs
cmpsb
loop
mov
push
loopne
iret
inc
cs
or
imull
jno
cmp
iret
hlt
dec
mov
xor
or
cs
lcall
imul
jl
sub
push
add
aad
mov
ljmp
decb
or
sbb
mov
or
jle
mov
sub
icebp
and
ljmp
push
mov
or
repz
lods
mov
jae
xor
hlt
in
jp
loop
jo
jbe
or
fistps
fimuls
mov
ss
dec
mov
jmp
mov
xchg
sub
or
mov
loopne
in
push
into
sbb
pop
repnz
enter
mov
mov
stc
es
xor
cld
push
mov
add
or
cltd
adc
lds
std
jno
fldenv
ds
or
adc
loopne
mov
add
mov
xor
or
dec
aad
ljmp
push
pop
cmpsb
shrl
cmp
push
test
leave
loop
and
jae
mov
xor
rol
cmp
js
aam
sbb
insl
jle
ret
sub
push
fstps
ret
bound
sbb
sbb
cli
push
orl
push
xor
cmp
pop
jg
xchg
lcall
testb
dec
cmpsl
xor
push
cmc
xor
adc
and
jae
jae
or
mov
int3
inc
loop
ret
pop
xor
outsb
push
jecxz
pop
enter
and
xor
or
add
stc
mov
prefetchwt1
push
in
pop
jbe
jecxz
mov
sub
sub
cs
jbe
ret
pusha
xchg
mov
mov
repz
mov
jo
stos
pop
lods
fimuls
mov
sub
js
and
xchg
pusha
cmp
cmp
les
or
inc
adc
cmp
aas
imul
jnp
shll
test
adc
clc
adc
arpl
js
int3
bound
sub
mov
outsl
mov
xor
pop
xor
daa
mov
inc
sarb
inc
loopne
add
push
hlt
add
cltd
lds
jp
adc
pop
aas
icebp
mov
adc
out
push
sbb
xor
mov
xchg
push
lea
inc
mov
lret
push
jl
lock
push
ds
pop
inc
push
xor
out
xchg
sub
movsl
test
add
orl
sbb
mov
out
faddp
std
lock
xacquire
outsb
das
pop
xchg
mov
add
mov
fiadds
roll
mov
pop
ljmp
add
inc
loope
dec
push
stos
adc
hlt
std
pop
lods
xchg
sbb
fs
sub
orb
in
fimull
inc
sub
into
int3
xchg
fcom
and
pause
test
or
loope
das
pop
adc
leave
add
cmpsl
push
jb
dec
lds
push
or
fxtract
les
test
int3
out
es
pushf
dec
mov
dec
cmp
dec
rcr
hlt
jns
loop
xor
and
in
pop
xor
roll
jo
xchg
mov
mov
xchg
xchg
enter
mov
insl
cmp
fs
and
test
je
mov
and
push
inc
xchg
inc
xchg
sbb
jo
idivb
sub
lea
mov
and
mov
mov
out
jnp
test
mov
mov
test
cmp
outsl
sti
inc
fs
mov
push
mov
push
pop
cwtl
insb
add
mov
addr16
repnz
mov
lock
cmp
lock
pop
cmp
or
leave
movsb
call
mov
inc
cli
dec
pop
lret
adc
call
test
rol
pop
dec
sub
sarb
hlt
nop
dec
and
shll
inc
aas
inc
cmp
fmulp
fwait
xchg
adcl
scas
scas
lds
mov
jnp
test
pop
imull
mov
xchg
adc
ficoms
mov
inc
addr16
jb
ljmp
xor
lret
and
fwait
lods
jne
or
popf
es
add
sar
xchg
fsubs
clc
lret
mov
pop
jg
icebp
pop
jge
jns
and
lea
dec
in
jp
subb
jp
push
adc
repz
push
es
rcl
in
push
outsl
inc
rcrb
outsb
adc
and
mov
push
adc
mov
cli
pop
jno
int
mov
std
add
fwait
addr16
outsl
mov
insb
mov
mov
cs
sbb
mov
sbb
daa
cvtpi2ps
int3
jmp
xchg
sub
mov
cmc
fwait
xchg
push
arpl
insb
das
and
push
addb
mov
lret
scas
loop
sub
stc
and
test
mov
push
xor
sub
push
aam
mov
pop
shrl
jo
aaa
jnp
test
pop
popf
dec
inc
lods
mov
cmp
dec
incb
add
mov
test
icebp
push
mov
arpl
add
jge
sub
idivl
adc
jnp
jno
adc
or
movq
pop
int3
xchg
jbe
pavgb
cmpsb
lds
adc
fisttpll
loopne
loopne
xor
movups
in
mov
addr16
addl
sbb
or
or
dec
adcb
push
push
mov
mov
mov
pop
sti
dec
sbb
push
xchg
push
mov
push
adc
fisubl
movsb
push
mov
jmp
cltd
mov
js
adc
cmp
imul
jno
movsl
xor
mov
filds
stc
out
xchg
lods
inc
sbb
lret
decl
cmpsb
inc
out
lret
sbb
das
imul
stos
jbe
aas
jnp
inc
pop
cmp
pop
iret
dec
and
push
adc
pop
leave
addr16
nop
or
xor
inc
mov
fidivrs
lret
lret
call
and
or
mov
mov
shrb
sub
push
dec
icebp
and
add
cmc
cld
scas
pop
mov
or
sbb
mov
aad
adc
daa
test
aam
mov
pmulhw
sbb
and
fistl
jne
dec
cmc
mov
jb
sbb
gs
inc
fisubl
ljmp
jg
hlt
in
lret
mov
pop
mov
add
or
in
aad
lods
repz
ret
ljmp
inc
mov
sbb
sub
fldz
bound
cld
call
or
out
aad
into
lock
outsl
int3
pusha
adc
sub
cld
popf
in
xchg
cmc
push
xchg
adc
or
mov
in
outsl
mov
dec
popa
xor
push
in
push
cli
jno
aad
add
jno
sbb
in
push
scas
push
dec
jb
xor
fnsave
pop
adc
push
iret
aad
les
inc
add
jo
les
mov
pop
add
stos
jp
dec
push
add
sub
jp
push
fcomip
xorb
pop
iret
test
sbb
mov
sbb
cmp
cmp
arpl
add
lret
cwtl
mov
mov
scas
or
into
mov
push
scas
pop
rorl
xorb
mov
or
dec
iret
dec
cmp
xorb
in
aaa
sbb
cmp
shll
pop
adc
mov
gs
jmp
ljmp
cltd
pop
insl
sbb
mov
sbb
inc
and
sbb
inc
push
mov
mov
lock
and
ficoml
sti
nop
gs
jmp
hlt
mov
movsb
inc
sbb
push
mov
mov
aas
int3
sbb
sub
lods
add
test
fucomip
sbb
mov
add
inc
dec
rol
push
lods
fwait
add
cmpsb
sbb
aam
enter
push
cmpsb
add
cli
jp
jmp
popa
rolb
addr16
xchg
cmp
dec
push
adc
int3
sbb
mulb
add
mov
jmp
push
test
in
aas
ljmpw
dec
fwait
and
stos
out
cld
into
scas
mov
data16
iret
pop
push
cmpsl
mov
mov
outsl
lods
xchg
arpl
xchg
stos
mov
das
xchg
clc
lods
stos
repnz
jno
imul
and
test
mov
sub
ljmp
jno
sarb
adc
sub
lds
ljmp
pop
sub
jbe
sbb
in
ret
mov
jno
xor
push
sbb
push
mov
jl
inc
xor
enter
test
imul
fwait
push
loope
ds
jno
mov
xchg
adc
in
adc
loopne
bound
xor
int3
mov
dec
sub
push
out
jg
aaa
aam
dec
cmp
fiaddl
cmpsb
out
hlt
mov
cmp
clc
sti
or
loopne
sub
mov
add
sbb
jp
push
xlat
sbb
push
mov
repnz
bound
adc
cwtl
mov
lret
gs
shll
sbb
mov
push
xchg
inc
xchg
or
fwait
add
xchg
popf
xchg
daa
xchg
add
push
xor
repnz
mov
add
mov
xlat
mov
xor
push
inc
dec
scas
mov
sbb
or
das
push
fucom
insl
inc
pop
out
aas
int3
arpl
add
jnp
andb
cltd
push
dec
aas
sub
test
sarl
lods
je
dec
clc
sbbl
mov
shlb
add
aad
daa
lahf
hlt
sub
or
orl
pop
mov
xchg
mov
cmp
enter
inc
cmc
lds
insl
or
adc
add
repnz
in
sbb
xor
adc
cmp
stc
aaa
sub
dec
cmp
push
inc
test
shlb
leave
or
pop
mov
jnp
pushf
lcall
pop
pop
jnp
aaa
das
mov
mov
shlb
cmp
ret
sbb
sarb
repnz
inc
pop
out
adc
dec
paddb
xor
nop
mov
cmp
jo
adc
and
mov
or
jnp
fcoms
stos
iret
pushf
jno
or
dec
push
push
scas
jno
sahf
daa
in
movsb
xchg
xor
or
jnp
lea
sub
repz
dec
out
sbb
lahf
xor
push
scas
sahf
jecxz
xorl
movl
adc
andb
and
pop
mov
mov
dec
dec
or
outsl
hlt
add
popf
jmp
push
fwait
test
xchg
fmull
xor
mov
jo
xchg
aas
repz
adc
mov
loope
jg
and
xor
sarb
xchg
push
dec
add
shrl
incb
xchg
dec
fsubs
mov
mov
pusha
mov
movsb
stos
inc
dec
mov
mov
aaa
add
mov
out
cltd
sbb
fsubrs
daa
xchg
sbb
dec
cmpb
lods
leave
jae
daa
mov
sarl
mov
cltd
cmp
movsb
xor
inc
or
jne
into
mov
roll
mov
sti
adc
mov
mov
push
mov
lahf
add
cmpsl
push
xchg
cld
mov
pop
mov
sub
jge
aas
xorb
xor
sub
jmp
fwait
gs
pop
scas
cmpb
fnstenv
push
xchg
out
popa
xor
enter
out
nop
dec
ljmp
pop
xchg
fnsave
push
ret
sub
addb
popf
loop
sbb
enter
push
enter
lahf
xchg
inc
pushf
js
adc
adc
push
gs
add
mov
sub
nop
jp
fidivrs
xchg
push
stos
int
xchg
test
adc
out
fisubrl
pop
addr16
pop
cmp
repnz
mov
sbb
sub
push
leave
sub
lret
add
cmp
repnz
push
in
into
pop
adc
cmp
push
lret
xchg
jns
lods
js
jo
and
cmc
jle
and
and
sub
mov
jne
xor
out
in
lds
sub
jns
adc
fstps
call
sarb
xchg
dec
and
out
xchg
pop
mov
xor
mov
pop
ljmp
insb
cltd
pop
mov
movsl
mov
mov
and
lret
push
inc
add
mov
xchg
jne
or
scas
cltd
xchg
aaa
test
or
addb
pop
or
into
jo
xchg
adc
or
repnz
cmp
movsb
out
outsb
roll
mov
sbb
sti
aad
push
sahf
add
out
es
aad
sbb
push
mov
ret
fs
adc
cli
js
xor
in
dec
xchg
jp
push
jno
in
adc
cmp
mov
repz
xchg
add
or
mov
jl
fldpi
out
jnp
mov
or
sub
stos
inc
pop
clc
push
pop
add
pop
jne
fsin
xchg
fcoml
cmpl
sub
mov
popf
arpl
fadds
je
sub
icebp
mov
mov
jne
in
xchg
cltd
xchg
shrl
inc
aaa
fsub
movsl
int
mov
push
movsl
rol
sbb
xchg
cld
std
mov
lods
xchg
inc
pop
fmuls
movb
subl
xor
mov
ss
xchg
ja
mov
shl
sti
jl
ljmp
movsb
sbb
jbe
fnstcw
xchg
pop
mov
dec
vmulsd
push
mov
test
lea
stos
jmp
pop
mov
add
ljmp
nop
push
arpl
aas
into
sub
jl
jo
mov
in
cmpsl
test
loop
pusha
jge
lahf
or
fmuls
adc
pop
jmp
pop
dec
adc
jo
imul
mov
push
or
or
pop
xchg
call
pop
push
jp
or
push
push
xchg
imul
jl
bound
sub
cmp
xchg
rolb
popw
jle
out
scas
add
sub
inc
mov
inc
jnp
mov
into
subl
addr16
dec
dec
test
cmpsl
xchg
jmp
cmpsb
cmp
sub
push
sar
lods
jmp
out
jg
mov
lds
sub
insl
inc
xor
stos
or
dec
xlat
arpl
adc
fwait
push
xor
insl
in
mov
fidivrs
push
into
sahf
std
adc
xor
idivl
inc
jne
mov
and
xor
inc
insb
sahf
ficoml
idivb
das
or
sbb
mov
fwait
shlb
mov
push
insb
lock
dec
shlb
jle
lods
test
enter
xor
jl
repnz
sahf
add
test
or
out
es
push
js
xchg
sub
inc
add
jns
aad
in
cltd
jg
gs
mov
pop
loop
imul
lahf
stc
xchg
cli
shlb
xor
stc
fistl
int3
fiaddl
jl
imul
cmpsl
mov
adc
push
fmul
dec
jge
sbb
jmp
rcl
jg
xchg
or
dec
popa
les
push
pushf
aas
popa
push
dec
jnp
mov
pop
cmp
mov
xchg
xchg
popa
in
add
and
fadds
mov
sbb
jne
sbb
cmpsb
in
hlt
sahf
jns
sbb
xor
cmp
xor
pusha
sbb
mov
dec
jbe
jl
ret
lods
aas
push
mov
fidivrl
dec
dec
and
dec
pop
xor
das
inc
mov
shlb
jp
mov
hlt
mov
push
pushf
xchg
jno
rcrb
test
sbb
fbstp
cmc
mov
insb
lods
and
cmpsl
rorb
xchg
mov
int
push
fildll
mov
jns
lahf
xor
adc
push
sub
xchg
xlat
test
scas
dec
jl
push
test
dec
ja
imul
int3
mov
int3
push
jge
xchg
xor
pop
in
je
out
sub
xchg
aam
cmpsb
xlat
mov
shlb
sbb
and
mov
scas
fsubrl
pop
mov
push
jo
mov
xor
popa
pusha
cmp
cmp
xchg
scas
or
cwtl
push
je
mov
mov
inc
daa
bnd
lods
cmp
clc
insl
xor
push
or
pop
cli
vcmppd
outsb
ret
insl
sub
xor
push
and
negl
cmc
jmp
pop
mov
mov
pop
iret
add
es
sbb
jecxz
in
cmp
fstpl
mov
mov
pop
cwtl
cmpsl
test
sub
mov
es
mov
std
push
sbb
mov
jbe
inc
dec
adc
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
jecxz
rcll
aad
sbb
addl
mov
mov
cli
mov
cmpsb
push
inc
adc
xchg
mov
pop
jmp
cmp
cli
or
sbb
jbe
into
aaa
ja
xor
ret
cmc
fisubl
jae
gs
aaa
xchg
out
cltd
in
pop
sub
jg,pn
xlat
imul
lret
or
inc
xchg
les
mov
aad
les
fisubl
or
inc
pop
xchg
jo
sub
cmp
mov
xchg
jbe
mov
adc
lds
sbb
xchg
loopne
test
out
sub
pop
jne
pushf
ret
dec
mov
xor
xchg
mov
pop
stos
push
lret
dec
jl
or
and
loope
aad
sbb
in
je
jb
das
jp
cmp
push
aad
and
ja
repz
mov
mov
inc
adc
xchg
mov
mov
mov
jne
test
lock
fwait
enter
dec
mov
adc
xchg
mov
push
scas
in
inc
mov
mov
mov
xchg
fld
ficoms
data16
lcall
cld
fisubs
cmp
mov
adc
cs
sti
and
lahf
cwtl
jmp
pop
cmp
xchg
lcall
inc
lock
js
sub
nop
cld
xchg
cmp
pop
push
stos
enter
fcoms
sub
or
xor
adc
xchg
in
std
sbb
cs
stos
push
add
daa
cwtl
inc
stc
stos
xor
adc
dec
cmc
add
fcomip
sub
repnz
add
je
negl
add
lods
insb
in
jmp
lock
jne
sbb
movsb
mov
insb
inc
ffreep
dec
cmp
aam
das
pmullw
sbb
test
or
mov
jmp
sbb
scas
xlat
or
jp
xor
shlb
jle
sti
mov
cmpsl
add
mov
shll
sub
jecxz
dec
jge
data16
and
stos
push
and
stos
lods
repnz
or
nop
clc
pop
inc
cmpsl
stc
ret
mov
mov
outsb
ds
mov
jle
test
jl
cmpsb
ds
mov
inc
hlt
lds
shll
ljmp
cmpsl
sbb
lds
lock
cmc
and
and
mov
jp
add
xor
jb
scas
inc
stc
shrb
jns
ja
bnd
imul
xchg
adc
xor
loop
jge
mov
test
repnz
inc
xchg
loop
decb
fwait
cmp
sbb
lret
sub
sub
addr16
data16
dec
js
gs
fdivrl
jmp
mov
ja
jp
aaa
pusha
push
pop
nop
repz
ljmp
or
pop
aaa
fldl
mov
xchg
enter
sub
inc
arpl
lea
out
mov
mov
in
cltd
fldz
pop
add
loope
pop
cmc
inc
fisttpll
dec
cmp
es
adc
int3
mov
ret
cwtl
jl
adc
sbb
xchg
cld
clc
mov
ljmp
fisubrl
jp
iret
idiv
mov
hlt
xchg
xor
sub
addr16
sub
loop
cmpsb
sub
nop
pop
nop
shll
xchg
cltd
pop
aam
sub
and
sub
lea
mov
insl
xchg
shll
sub
insl
mov
daa
call
add
pop
xor
pop
arpl
adc
dec
pop
mov
andl
lea
jg
ljmp
cmp
fisubl
aaa
stos
popl
xorl
lods
mov
add
rcrb
or
fbstp
scas
cmc
js
stc
ret
push
insb
cmp
fucomi
popa
pop
mov
insl
push
mov
dec
mov
dec
notb
pop
repnz
je
movsl
ljmp
jne
cmp
pop
loop
dec
inc
mulb
mov
outsl
in
add
ret
push
inc
push
push
mov
mov
dec
jl
add
jae
cld
mov
movlps
pop
jge
inc
ljmp
add
jo
stos
fs
aad
std
push
dec
sub
cmc
jmp
popf
xchg
pop
push
mov
pop
push
clc
mov
lret
outsl
rcrb
fsub
shlb
fcoml
and
pop
or
cs
les
jns
xor
scas
arpl
mov
aaa
sub
pop
xchg
pushf
push
xchg
cli
xchg
ficoml
mulb
into
mov
adc
mov
popa
sbb
mov
cmp
outsl
adc
fidivs
sbbb
cmp
fyl2x
dec
sub
add
jns
sbb
aas
jnp
fcomp
pop
fimuls
outsb
outsb
cmpsb
sbb
int
mov
mov
ret
test
xor
pop
fwait
cmpsb
push
mov
pop
mov
adc
xchg
test
sub
int
jne
lock
push
cmp
adc
in
out
pop
bound
int3
in
shrb
stc
pop
add
push
inc
sti
bnd
mov
sub
fimull
aam
jmp
in
cmp
or
cmp
mov
imul
mov
cltd
stc
jecxz
push
jp
cltd
ficomps
les
pop
inc
jo
sbb
mov
orl
jg
jle
outsl
cltd
stc
push
pop
pop
popa
xor
adc
outsl
add
or
add
cmp
xchg
add
movsb
adc
fstl
jl
out
pop
sub
push
das
pop
add
cli
out
fs
clc
sbb
xlat
mov
push
in
pushf
fsubrs
adc
mov
fdivs
cmpsl
cwtl
in
out
xor
sarl
push
imul
jge
jnp
sahf
call
cmp
pop
add
dec
mov
jnp
jl
cmp
sbb
das
out
cmp
hlt
cmp
sbb
daa
dec
pop
mov
sub
push
in
jnp
mov
leave
xor
dec
pop
adc
pop
rcll
mov
jge
sbb
mov
mov
insb
sbb
cmp
enter
aas
cmpsl
outsb
mov
or
les
data16
cld
rolb
pop
dec
add
mov
push
mov
out
or
pop
mov
inc
movsb
jne
arpl
shlb
enter
jp
mov
iret
push
cmpsb
push
sub
fistpl
into
imul
fistps
cmp
jb
jae
in
inc
pop
add
pop
sub
add
gs
xchg
mov
cmpsl
inc
outsl
test
xchg
aad
daa
addr16
mov
and
shr
or
and
ljmp
xor
mov
cmp
daa
jae
pop
ja
std
xchg
pusha
inc
xchg
jo
xchg
mov
ret
scas
inc
sub
aas
mov
pop
stos
push
jecxz
aaa
shrl
mov
mov
scas
and
pop
cltd
pop
lds
adc
mov
push
loopne
jo
loopne
sub
stc
leave
cltd
and
push
xchg
insb
idivb
jp
cmp
ds
xchg
adc
push
int3
popf
pop
xchg
nop
mov
ja
xor
add
dec
insl
test
xchg
add
lahf
movsb
add
fisubrs
xchg
jle
out
push
loop
jae
mov
hlt
and
adcl
dec
sub
pop
fdiv
testl
je
lods
xchg
mov
jo
test
cmp
xchg
push
lahf
push
shl
inc
dec
lret
xor
mov
and
call
out
insl
push
icebp
mov
mov
in
jecxz
lret
jl
scas
mov
sbb
mov
fnstenv
call
jo
imul
outsb
addr16
cmp
pop
ss
ja
ficomps
push
out
xor
sbb
insb
movsl
and
test
push
loopne
push
and
out
and
fs
lods
pusha
mov
jmp
pushf
mov
jns
addb
jge
mov
mov
push
nop
and
xor
enter
push
push
mov
cmp
movsl
add
mov
push
loope
pusha
into
subb
and
inc
movsl
xor
nop
mov
or
sahf
pop
sbb
int
dec
mov
or
pop
pop
hlt
add
inc
fldl
and
outsl
enter
inc
pop
add
icebp
lods
imul
or
call
and
lock
mov
jnp
sar
fbstp
test
inc
test
test
pop
int
insl
ret
lods
cmp
sbb
xor
pop
nop
ljmp
lahf
sub
pusha
push
jecxz
xor
push
ja
xchg
sbb
jl
cmp
dec
xor
leave
add
imul
insb
push
sahf
stos
jo
adcb
ss
jge
mov
pushf
push
dec
jl
cmc
dec
inc
mov
sub
cmpsl
ds
dec
or
mov
ljmp
xor
mov
mov
into
pop
push
cmp
pop
lods
lea
inc
push
int
adc
dec
lock
cwtl
adc
scas
mov
mov
cmp
dec
es
cmc
ret
lcall
and
lea
add
mov
push
pop
loopne
mov
lcall
mov
or
push
in
pop
sub
pop
out
xchg
call
jno
push
sub
out
or
mov
dec
sbb
repz
stos
out
in
sub
movb
dec
sbb
test
clc
in
xchg
cld
inc
sarb
inc
xchg
inc
push
and
int
insb
mov
inc
repnz
sahf
mov
lods
popf
inc
and
mov
mov
mov
xor
fwait
mov
mov
rcll
jl
pop
mov
cmp
mov
push
call
inc
test
pop
dec
adcl
stos
in
jnp
fwait
sbb
fistl
jae
cmp
cmp
or
mov
dec
cmp
and
push
and
jo
je
mov
jle
arpl
daa
cli
lcall
pop
int3
dec
ja
jo
rcll
cmp
cltd
mov
adc
out
jg
push
sbb
jo
pushf
jmp
add
int
mov
into
adc
add
or
mov
in
pop
stos
call
nop
mov
je
dec
xchg
jg
xor
add
and
cwtl
jp
aad
call
cmpsb
sbb
sub
cmpsl
mov
xlat
std
sub
cmp
or
loop
addb
sub
fs
roll
and
addl
loope
xchg
and
insl
add
sbb
push
add
mov
cltd
push
push
mov
mov
or
dec
movsb
out
adc
pop
xchg
js
cli
incl
inc
sbb
pop
push
inc
sar
mov
movsl
sbb
dec
ficoml
movlps
xor
push
jp
adc
dec
cmp
push
jo
aaa
iret
inc
fiadds
mov
mov
mov
cvtpi2ps
inc
lret
sub
or
pop
fistl
ret
divl
inc
loopne
push
push
sbb
iret
xor
rolb
ss
xor
sbb
xchg
daa
mov
js
jg
pushf
mov
in
mov
push
inc
xchg
sti
outsl
pop
inc
and
repz
inc
jbe
jbe
mov
popa
out
add
sub
daa
dec
cmp
and
fs
xchg
add
jg
jbe
mov
or
dec
pop
sarl
sub
fmul
xchg
inc
outsb
push
xor
fidivrs
cmovnp
mov
and
test
adc
out
push
xchg
mov
lcall
int3
add
lahf
mov
jge
xor
jns
sahf
adc
pop
test
sahf
adc
fwait
ret
movsb
push
ja
popa
rclb
mov
mov
xchg
addr16
lahf
xchg
mov
ret
cmc
mov
lods
dec
loopne
or
inc
xor
stos
rcl
jge
mov
xlat
sbb
stos
stos
or
xchg
xor
xchg
and
or
aaa
out
rcrb
mov
jecxz
add
xchg
sahf
inc
movsb
adc
xchg
mov
hlt
sti
js
cmpsb
and
adc
rep
xor
sub
cmp
divl
icebp
arpl
pop
xor
outsb
addr16
inc
ljmp
test
push
jb
xor
sbb
insb
loopne
sbb
xchg
pop
dec
xchg
int
sub
insl
xlat
mov
das
sub
dec
xchg
inc
movsb
out
jle
fnstsw
das
push
adc
and
int3
push
je
rorb
lds
or
shrb
push
xor
mov
push
mov
repz
or
pop
scas
fadds
mov
cmp
iret
xchg
mov
pop
mov
icebp
mov
cmc
daa
fildl
out
xchg
mov
aad
mov
mov
enter
mov
or
cmp
out
mov
fwait
aaa
jne
lods
mov
push
sbb
test
add
pusha
jmp
cltd
xchg
fsubl
int
scas
scas
in
scas
inc
sbb
out
imul
popa
xlat
dec
and
xchg
subl
push
pop
inc
mov
aad
cmp
in
mov
or
push
cmp
std
jbe
pop
lcall
mov
add
mov
gs
dec
outsb
inc
and
push
xchg
xor
jne
mov
xchg
dec
icebp
mov
arpl
movl
pop
lret
dec
mov
lods
int3
int3
test
fimuls
je
mov
and
dec
dec
cmpb
xor
mov
in
xor
or
add
cmp
mov
sub
or
jle
shlb
testb
xor
pop
divl
pop
or
mov
push
imul
cltd
mov
dec
bound
lea
pop
mov
pop
movsl
aaa
sbb
lods
push
repz
call
enter
sbbl
cmpsb
mov
jle
pop
stos
cmp
mov
sbb
xor
lock
pop
das
out
addl
pushf
xlat
pop
sbbl
push
push
push
pop
in
or
jl
jbe
leave
sbb
xchg
dec
addl
outsl
xor
ret
std
mov
popf
test
sub
inc
imulb
inc
call
xchg
test
mov
aas
fldcw
or
jbe
lcall
mov
ja
xor
imul
les
adc
inc
xlat
xchg
xchg
adc
ds
and
jmp
or
sbb
sub
pusha
add
pushf
sub
std
iret
push
mov
lods
pop
xchg
sbb
stc
xchg
jnp
js
pop
mov
inc
aas
scas
mov
push
lods
stos
jbe
dec
mov
mov
cmpsl
cmpb
fwait
mov
jmp
mov
sti
dec
lock
sbb
cld
mov
mov
shl
mov
lds
rcr
jne
jg
lcall
aam
push
sbbb
mov
jl
mov
inc
push
ljmp
cwtl
ds
pusha
sub
and
out
mov
xor
xchg
ret
pop
aam
nop
out
mov
push
dec
lock
dec
pop
and
mov
inc
out
call
movsl
shlb
mov
dec
adc
xchg
sub
fmuls
jnp
cmp
adc
and
push
inc
xchg
xor
lret
addr16
xor
mov
cmp
fs
mov
pop
mov
inc
cld
mov
testl
loope
data16
enter
pop
out
sarb
out
test
in
xchg
or
and
js
js
sbb
negw
pop
call
stos
cs
mov
pop
out
push
sarb
cmp
lret
or
inc
cli
nop
mov
xchg
adc
rcl
ret
mov
cld
or
adc
pop
jbe
pop
xor
fwait
stos
into
add
cmp
in
sub
fs
xor
jno
enter
aad
test
clc
xchg
jmp
outsl
lcall
fstpt
sbb
mov
out
aaa
nop
bound
in
fidivrl
and
mov
or
std
jp
daa
mov
jge
mov
mov
cld
pop
or
xor
sbb
js
into
imul
mov
lret
iret
push
movsb
inc
dec
lret
ss
out
pop
stos
and
test
cmpsb
pushf
lret
sti
xor
jl
cmp
pop
or
xor
xchg
jo,pn
inc
mov
jp
jl
mov
cmpsb
aad
jp
push
lock
gs
gs
mov
in
mov
dec
scas
pop
sbb
push
fldpi
out
mov
xchg
shlb
sub
subl
inc
aaa
or
sar
push
pushf
dec
fwait
lods
mov
fwait
mov
sub
ss
pop
pop
stc
negl
mov
or
enter
int
cmp
jp
mov
jp
imull
jp
xor
mov
xorps
in
sti
and
mov
mov
xor
jno
pushf
out
cli
pop
sub
in
dec
sti
push
outsb
in
out
cli
std
jg
mov
int
cli
orl
fwait
adc
sbb
mov
imul
sbb
fisttpl
popf
movsl
in
data16
mov
inc
into
mov
loop
adc
xchg
or
sub
mov
xlat
adc
inc
mov
and
ret
lret
stos
dec
sbb
sbb
cmp
dec
aam
sub
mov
jb
stos
pop
lcall
shr
insl
dec
cltd
mov
push
in
fwait
inc
lret
mov
and
sbb
addb
lahf
and
iret
aas
out
mov
add
jne
je
cmp
jo
add
decb
cwtl
push
add
std
jg
cmp
adc
jmp
sub
jae
mov
xchg
pop
inc
scas
pop
jbe
fs
dec
shrb
out
nop
fidivl
sub
lret
inc
jle
jne
adc
cltd
das
xor
lock
sbb
fidivrl
inc
mov
movsb
pop
cwtl
pop
sub
sub
shrl
ss
lds
lret
pop
leave
frstor
push
dec
dec
or
imul
outsb
push
adc
je
mov
mov
int
dec
idivb
test
imul
lret
mov
sub
and
cmp
add
icebp
in
xor
xor
or
in
cmp
xor
in
repnz
icebp
jnp
mov
pop
addr16
clc
cbtw
sub
jno
pusha
jne
pusha
outsl
fisttps
jl
std
adc
in
xor
sbb
shrb
sahf
mov
push
mov
and
stc
or
lret
push
mov
stos
imull
out
sahf
mov
fwait
aam
dec
cmp
inc
jns
in
inc
das
inc
dec
jbe
xor
or
cmc
movsl
inc
xchg
ss
push
cmp
lret
jb
nop
sub
pop
cltd
dec
push
xor
movsl
outsl
or
dec
lea
mov
in
inc
mov
out
movsl
or
pusha
ds
sub
leave
stos
aas
dec
in
pop
add
cmp
sbb
mov
add
push
or
daa
mov
mov
dec
sbb
imul
testb
adc
xor
ss
cmpsl
mov
mov
sbb
or
pop
outsl
mov
jecxz
pop
int
sbb
and
jae
or
mov
loopne
mov
dec
pop
icebp
xchg
cld
sti
and
int
and
xor
sub
ljmp
push
and
ds
call
lods
mov
popf
mov
enter
add
inc
cld
push
xchg
ret
xor
pop
cmp
dec
sbb
fwait
stc
xor
mov
outsl
mov
jno
cmp
testb
cmp
sbb
jae
jge
xor
push
push
mov
insl
insl
jg
jns
cltd
push
push
jbe
es
arpl
test
pushf
pushf
sbb
cmp
cmc
xor
xchg
push
mov
mov
xchg
outsb
outsl
popa
cmpsl
daa
lock
xchg
jg
mov
enter
sbb
mov
test
add
mov
cmc
dec
cmpsb
mov
adc
ljmp
or
add
scas
ss
pop
jl
adc
pop
sbb
xchg
mov
sahf
subl
mov
mov
mov
jae
jo
pusha
xor
in
cli
mov
shlb
push
add
les
mov
les
dec
push
test
add
fldl
lds
or
fstp
retw
in
sub
cmp
ss
mov
inc
mov
xor
jge
xor
dec
jg
dec
arpl
cmp
pop
mov
insl
mov
addr16
leave
fcomip
dec
out
inc
fcoml
mov
jne
mov
mov
push
mov
div
fidivs
adc
repz
frstor
pop
rcr
jmp
and
mov
xor
lea
dec
cmp
and
mov
sbb
inc
or
pop
sti
mov
mov
sbb
sbb
xchg
lock
xlat
xor
call
out
or
push
lods
ret
leave
adc
adc
mov
mov
sbb
push
into
lds
sub
insb
fdivr
mov
test
scas
jb
xor
inc
fsubr
nop
inc
add
leave
mov
sahf
test
addb
mov
and
sbb
push
pop
jp
mov
add
popf
pushf
jmp
mov
and
sub
ficompl
jg
mov
xchg
or
mov
repz
jecxz
loope
cmpsb
lds
or
lea
dec
fldt
xchg
testb
aas
push
sbb
mov
stos
cmpsl
or
stos
jo
mov
hlt
hlt
or
test
movsb
loop
gs
xor
subl
xchg
test
pop
adc
cltd
lahf
es
inc
or
in
test
xchg
in
inc
adc
and
out
icebp
testl
rcll
addb
pop
insl
inc
out
push
std
and
pop
mov
push
orl
sahf
pop
mov
jae
shr
jb
aas
adc
test
data16
and
jl
int3
cmp
and
das
or
pop
push
iret
ja
xor
push
rcl
imul
sets
inc
icebp
packuswb
aas
and
mov
dec
pop
cltd
leave
pop
add
push
xor
sub
js
cmp
ret
cltd
negb
dec
and
mov
inc
cmc
out
stc
jmp
stos
adc
leave
fwait
int
loop
fwait
aad
rorl
out
clc
pop
sbb
pop
jle
pop
int3
imul
sbb
add
leave
cltd
mov
or
mov
mov
popa
sub
push
out
xchg
sbb
add
cvtps2pi
mov
ljmp
mov
sbb
cmp
jns
mov
dec
pop
movsb
jo
sub
or
dec
lock
std
je
push
jg
add
xchg
push
in
out
mov
rclb
add
movb
adc
dec
cmp
enter
cmc
sbb
in
pop
push
mov
xchg
pushf
lds
out
repnz
and
ljmp
lods
xchg
dec
imul
fcoml
fincstp
ficomps
push
test
xor
jo
push
cs
ret
pop
adc
icebp
inc
cmp
and
xor
add
into
cli
jae
loope
cli
cmp
mov
mov
push
pop
nop
test
clc
xchg
popl
push
jp
out
mov
push
aam
test
dec
rolb
pusha
scas
cltd
and
int
ja
mov
in
es
mov
push
cmp
jmp
cli
add
sub
push
pop
out
xor
or
sti
in
cmp
imul
sbb
pop
xchg
jae
ja
dec
fisubl
aad
aas
out
test
jle
scas
pusha
ljmp
mov
inc
cmp
mov
or
mov
mov
das
xchg
sub
pop
ljmp
aaa
sahf
les
push
lcall
or
adc
and
pop
add
shlb
aad
jne
jg
mov
out
inc
jmp
push
stos
fcomip
dec
add
enter
fwait
cltd
xor
aas
xor
out
sbb
mov
fadd
mov
ljmp
cmp
cmpsl
cltd
push
push
je
out
ror
rclw
xor
lods
incb
inc
inc
mov
mov
mov
mov
ds
daa
and
pop
in
cmp
shll
mov
movsl
popa
adc
mov
cmp
add
fdiv
cmp
mov
add
inc
fisubrl
xchg
cmpsb
popf
lea
pop
aam
in
inc
xor
idivb
inc
dec
ds
pushf
cmp
or
cli
imul
fisubs
stc
add
sbb
jge
cltd
fnstsw
push
push
mov
sti
or
ds
adc
orb
outsb
in
push
pusha
das
lret
xor
pop
jle
into
adc
pop
int
xchg
fwait
js
fisubs
cmp
fwait
sub
dec
push
daa
dec
jns
movsb
daa
xor
fldcw
out
loopne
imul
nop
pushf
dec
adc
aad
in
out
andnps
xor
imul
je
out
or
popf
add
pop
jnp
jge
sbb
push
sahf
fimuls
cltd
lea
xor
mov
cmp
add
je
out
jle
xor
and
dec
test
cmp
fs
lret
scas
mov
sbb
adc
mov
daa
add
xchg
sbb
pusha
jne
aam
adc
icebp
xor
jno
mov
dec
push
popa
mov
cmp
pop
nop
daa
enter
push
imul
mov
sti
mov
add
push
sarl
pop
imul
jo
mov
pop
adc
xor
jle
call
add
inc
js
jne
jmp
loop
cmpsb
fs
ja
ret
in
jmp
and
mov
sbb
jmp
or
push
sbb
jp
dec
popa
movsb
xchg
xchg
push
aam
in
and
inc
fidivrs
sub
mov
imul
mov
pop
adc
add
adc
cmp
rolb
out
out
mov
jp
dec
xchg
adcb
out
stos
mov
fmul
repnz
sahf
orl
or
inc
adc
inc
jl
sti
cltd
mov
fimull
push
xlat
push
loopne
lods
mov
inc
push
jb
xchg
flds
clc
inc
lds
sbb
js
int
push
in
add
push
inc
int3
out
cmc
sbb
and
sub
push
xor
arpl
inc
push
outsl
xor
out
xchg
loope
jnp
sub
xchg
ret
out
es
lods
mov
shrl
xchg
adc
fs
inc
pop
iret
lock
inc
add
push
mov
sub
jg
sbb
sub
cmp
push
sbb
imul
inc
in
add
and
cltd
push
dec
xchg
cmp
sahf
jl
push
lret
jno
adc
aas
fcmovb
test
aaa
cmp
mov
lock
pop
cwtl
in
push
test
sbb
push
out
repz
sahf
cmp
popa
mov
hlt
mov
push
mov
push
test
fnstsw
jecxz
jnp
insl
ljmp
ss
mov
push
lds
aaa
adc
push
in
push
add
xor
mov
out
hlt
pop
aad
pop
int3
jno
into
clc
arpl
outsb
icebp
cmpsb
pop
xchg
jae
ljmp
cmp
mov
jno
loopw
out
adc
xor
xchg
xchg
push
test
mov
jecxz
scas
xchg
pop
dec
jne
bound
xor
clc
xchg
int
push
xor
mov
sbb
dec
imul
cmp
scas
mov
adc
repnz
pop
in
push
aas
inc
sbb
pusha
dec
pushf
and
sti
cltd
pop
mov
pop
or
inc
push
sub
jecxz
imul
test
cmpsl
sub
cwtl
push
scas
push
fs
cs
mov
scas
adc
or
or
lea
imul
pop
pop
lds
mov
stc
cmp
inc
addb
test
and
pop
jp
mov
sti
lock
and
push
sub
lods
jns
lret
icebp
das
fwait
loop
insb
push
mov
stc
dec
rorb
ret
popf
inc
mov
xchg
sqrtps
fiadds
aad
repz
or
rcr
mov
inc
fs
mov
cmpsl
rclb
mov
add
sbb
pop
adc
push
mov
pop
lcall
data16
sti
stc
add
jo
fidivs
icebp
dec
xchg
inc
inc
pop
lahf
icebp
mov
addr16
pop
arpl
aam
mov
aam
mov
cmpsb
push
jle
add
lock
push
add
ds
mov
push
inc
stos
xorb
pop
push
and
jg
mov
pusha
mov
sbb
push
ret
iret
adc
out
loopne
inc
test
aaa
cwtl
loope
mov
fstpl
das
xchg
dec
pusha
add
scas
jmp
clc
pop
jb
pop
lock
cmp
fimuls
mov
subl
test
outsl
sbb
pop
popf
or
jge
stos
into
test
lcall
ds
fisttpl
pop
jl
cld
int3
in
inc
and
push
jae
dec
or
pop
xor
mov
push
test
lods
in
test
jle
inc
into
mov
loopne
ds
fcomi
call
imul
mov
std
pop
pop
scas
test
rcll
pop
mov
data16
sub
mov
fildll
movsl
adc
fsubs
or
bound
adc
lock
cmp
scas
xor
mov
icebp
jg
jno
sbb
imul
mov
mov
sbb
mov
xchg
shlb
and
jle
cmc
or
inc
mov
push
fucom
sub
lods
jae
adc
adc
sbb
jne
mov
je
inc
mov
xchg
mov
and
and
xor
pop
ljmp
jge
inc
pmaddwd
leave
xchg
call
sar
in
iret
mov
mov
cmp
sub
aam
pop
call
pop
aad
cld
scas
test
les
push
xchg
pop
or
push
pushf
movsb
fildll
push
xor
leave
rcr
inc
jmp
mov
push
stos
std
xor
iret
fists
push
xor
aam
lods
pusha
jae
es
dec
xchg
xor
mov
pop
mov
xchg
stos
into
pop
enterw
lock
cli
sti
insl
mov
lea
jle
ror
imul
and
lret
cmpsb
mov
addr16
mov
jmp
pusha
sub
cmp
dec
sbb
pop
inc
stos
sub
mov
jecxz
xor
mov
sub
scas
push
gs
daa
int
or
xchg
pop
jle
pop
sti
mov
mov
mov
mov
dec
and
stos
mov
leave
cmp
leave
popa
add
out
movsb
jg
and
cmp
cmp
in
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
dec
shll
add
mul
fimuls
mov
push
pop
or
push
mov
outsl
in
sub
inc
cmp
ret
mov
pushf
stc
fldl
mov
fisubs
jae
addb
add
inc
int3
and
sub
jecxz
hlt
dec
aam
xchg
sub
mov
jge
bound
sub
fmul
stc
xchg
sub
sbb
lahf
lret
clc
xchg
cltd
ret
or
and
mov
adc
xlat
out
inc
ss
cmp
pop
sbbl
push
ss
inc
pop
outsl
xchg
adc
sti
cltd
inc
orl
std
ret
adc
mov
lret
js
jo
xchg
jbe
test
lods
rcrl
stos
in
stos
int
and
sub
stos
out
add
cli
and
mov
mov
dec
scas
std
aaa
int
sahf
push
test
in
pop
pusha
cmp
dec
dec
dec
xchg
xchg
clc
push
mov
xor
roll
in
insb
das
lock
xor
push
leave
lea
test
inc
mov
repnz
sub
popf
dec
adc
lret
cmpb
cmp
aas
cmp
test
mov
fidivl
jbe
hlt
jns
inc
out
cli
xchg
andl
mov
mov
add
xchg
aam
pop
add
mov
repnz
lcall
adc
ficomps
inc
dec
push
aaa
pop
add
inc
and
cmc
adc
loope
jge
cmp
xor
outsl
and
loop
rcrl
aad
imul
out
adc
loop
fs
aas
es
jne
sti
push
loopne
out
adc
push
clc
push
and
mov
push
mov
add
rclb
scas
jecxz
ret
div
andl
pop
imul
fimull
cmp
jbe
sub
mov
mov
inc
xlat
jns
jl
push
popa
daa
sbb
jno
add
lods
xchg
inc
push
test
cmp
cwtl
dec
jmp
pop
rcrb
mov
lea
enter
mov
shr
iret
mov
leave
xchg
mov
xchg
aam
jbe
or
adc
lock
shll
dec
dec
or
add
pop
insl
clc
sbb
mov
fcomps
nop
adc
dec
mov
into
divl
pop
inc
sbb
lods
popfw
push
aas
adc
jae
mov
popa
das
mov
mov
cmp
push
in
xor
xchg
lret
xor
lcall
sahf
aad
lret
sbb
sbb
add
js
dec
nop
mov
jge
js
in
sub
push
sub
push
sub
dec
add
enter
cmove
movsl
jne
jbe
es
pop
insb
repz
xrelease
jl
sub
scas
adc
mov
lahf
nop
ds
fidivrl
cmp
subb
and
cli
dec
dec
xor
jle
pop
scas
jb
sub
xchg
and
sbb
out
arpl
leave
shlb
jecxz
jb
or
jmp
xchg
inc
cmp
cmp
testb
bound
int
mov
xchg
push
cmp
adc
les
outsb
mov
lock
cld
mov
xchg
gs
push
fiaddl
jecxz
dec
mov
cmpsl
pop
lcall
rcr
xor
dec
mov
mov
std
fcomp
lret
ja
fwait
test
or
cmp
push
mov
mov
sbb
inc
add
dec
lahf
mov
imul
imul
jns
adc
stos
mov
push
xchg
arpl
imulb
ljmp
notb
jle
adc
dec
or
pop
mov
aaa
pop
and
pinsrw
mov
movsl
mov
ret
leave
arpl
sub
rcrb
stos
add
repnz
pop
push
push
pop
inc
sar
mov
iret
xor
jg
inc
insl
stos
test
pop
cmpsb
xor
push
mov
aad
push
dec
cwtl
in
insl
mov
jp
or
cmp
lret
or
jo
jle
push
ja
mov
inc
or
insl
test
xorb
mov
mov
jbe
shlb
mov
sahf
loop
mov
add
arpl
push
ljmp
mov
push
dec
jnp
mov
cmp
jno
push
aas
imul
dec
dec
adc
loopne
cli
loopne
lret
add
scas
ljmp
push
and
and
in
shlb
push
aam
cltd
out
or
lcall
js
shlb
lods
adc
inc
jl
clc
add
in
mov
fistpll
int
jmp
add
push
mov
int
pop
add
imul
cs
inc
testl
stos
cmp
insb
lahf
xor
push
xlat
sbb
push
and
xchg
out
xorl
jmp
pop
xor
mov
imul
push
add
inc
jb
sub
dec
push
cwtl
out
imul
push
dec
jbe
or
and
orl
aas
out
adc
cmp
jne
imul
xchg
adc
sub
pop
push
ret
lret
lret
nop
out
call
cmp
js
pushl
es
js
mov
fisubrs
inc
jb
test
rol
imul
push
mov
jo
inc
mov
mov
inc
cli
sbb
cmp
loope
shl
cmc
inc
out
cwtl
ja
add
aam
int
aad
xor
and
jge
lret
loop
lock
jp
mov
inc
mov
xchg
dec
cmpsl
imul
xchg
adc
mov
inc
add
dec
xchg
cmpsb
xchg
add
lea
lea
test
sub
push
xchg
fldcw
jg
push
repz
push
or
mov
sbb
jno
mov
rcll
mov
lret
enter
or
add
cmc
add
lret
aad
xchg
call
enter
inc
lcall
js
add
rolb
jnp
shll
pop
jle
out
push
mov
stc
lcall
inc
pop
or
xchg
sti
add
xchg
rcll
push
cmpl
inc
es
scas
nopl
aad
lret
cmp
movl
ljmp
sbb
mov
sub
sub
enter
stc
aam
mov
jne
and
sub
cmpl
cmp
xchg
jb
sarl
and
pop
cmp
adcb
movsb
sub
mov
dec
push
adc
repz
insb
jb
or
dec
cmpsl
pop
enter
nop
lds
dec
int
je
rdpmc
int
ror
jge
push
lcall
mov
add
and
sbb
adc
ficoms
sub
loop
xchg
xchg
imul
mov
push
cvttps2pi
out
sub
subb
dec
jae
sub
std
xchg
mov
lea
pop
ret
cltd
push
aas
stos
loop
sbb
sbb
test
ds
rcll
hlt
sbb
and
sub
sahf
xorl
xchg
push
hlt
filds
inc
shrl
jmp
imul
adc
mov
push
int3
fs
cmp
xchg
movsl
push
jecxz
cwtl
or
mov
inc
aam
sarb
mov
jb
or
repnz
jbe
fistpl
fisubl
push
jne
loop
rcl
pop
leave
loope
imul
aad
movsb
mov
shrl
push
mov
shl
and
stos
cmpsl
cmp
cwtl
xchg
hlt
push
or
mov
mov
sarb
jl
fwait
lock
jge
out
mov
mov
xor
ja
inc
push
nop
push
fcomps
push
push
cld
jp
out
jle
pop
subl
inc
mov
jb
add
push
aas
mov
mov
cld
push
and
outsl
fs
mov
mov
cmpps
cld
push
and
push
int
test
mov
add
mov
into
and
leave
cmp
aas
bound
call
sbb
pop
ljmp
xor
and
mov
sahf
shrl
jae
push
dec
aaa
loopne
push
add
loope
bound
mov
cmp
jg
mov
shlb
movsl
mov
addr16
es
xchg
rorb
sub
sbb
test
cmc
std
lods
cmpsb
cmp
xchg
jne
pop
inc
pop
mov
mov
sub
outsl
xchg
push
dec
pop
daa
sbb
inc
rcrl
xchg
popa
jns
pop
idiv
adc
outsl
lcall
es
push
paddq
movsl
mov
loope
mov
stos
push
fucomp
fisubrs
jns
cmp
add
nop
mov
inc
cmpsb
adc
icebp
sti
pop
xchg
mov
xor
cmp
pusha
ljmp
mov
jne
lds
cmpb
sbb
inc
push
in
cld
or
xor
aad
cmp
xlat
jle
jno
arpl
pop
cmp
cs
test
xor
lds
insl
arpl
in
mov
std
mov
cmp
xchg
and
pop
mov
lods
xchg
cmp
shrl
xor
inc
and
xchg
es
cmp
je
out
les
test
inc
cmc
mov
orl
in
pushf
loopne
pop
lret
clc
adc
leave
xor
aaa
inc
hlt
cmp
pop
push
insb
int
add
leave
testl
test
jo
dec
sahf
xor
dec
or
sbb
in
nop
dec
pop
cmp
icebp
or
loope
sbb
inc
fs
push
mov
mov
dec
pop
bound
scas
dec
push
popf
inc
push
push
sbb
cwtl
xchg
roll
pop
scas
mov
scas
icebp
mov
fistpl
out
cltd
push
inc
sbb
fsubr
fiadds
scas
xor
mov
mov
jo
mov
inc
mov
cmp
push
add
ret
mov
inc
ss
or
lods
mov
shll
aas
inc
sbb
movsl
sub
dec
out
adc
pushf
sbb
lahf
sarb
pop
mov
ja
xor
xchg
mov
loopne
inc
scas
push
mov
or
int
jmp
fcmove
sub
jnp
add
sahf
push
jns
into
lret
mov
xor
jle
xchg
pushf
fs
lock
int
cmp
mov
leave
cmp
sub
and
lea
xor
aaa
jle
push
je
dec
inc
mov
loope
out
aaa
fisttpll
mov
shll
scas
div
lds
jmp
cmp
xchg
arpl
loope
notb
hlt
loop
jbe
inc
jnp
fmul
cld
outsl
lea
repz
loope
rcrb
xlat
and
jae
popf
cmc
arpl
data16
xchg
addl
icebp
fdiv
jb
sub
jno
scas
and
sub
repnz
fadds
stos
lahf
jl
inc
fcmovu
inc
mov
sub
das
or
or
repz
shlb
iret
dec
dec
imul
in
data16
cltd
icebp
lock
rorb
imul
jne
jb
movsl
inc
into
popa
fdiv
imul
sbb
and
mov
mov
xchg
inc
and
js
sahf
fiadds
xor
loope
mov
push
hlt
xor
test
xor
inc
push
push
arpl
cld
fsts
das
cmp
mov
not
aaa
test
mov
imulb
jae
jp
imul
cmp
push
ljmp
mov
aad
loopne
cmp
jge
add
pop
adc
or
scas
mov
subl
nop
repnz
adc
sub
mov
lret
and
movl
adc
in
dec
cmp
jmp
pusha
adc
jnp
aaa
xchg
adc
cmpsl
mov
jl
lmsw
push
adc
es
jno
jmp
or
stos
jmp
popf
sbb
jno
mov
outsb
xlat
lret
inc
lock
cli
popa
dec
cld
jo
push
into
adc
cmp
int3
xchg
jno
scas
push
inc
mov
or
xor
adc
xor
add
in
jge
dec
xor
stos
push
and
dec
repz
popf
mov
mov
pop
repz
dec
fistpll
or
mov
sub
inc
sub
xchg
jbe
je
xchg
adc
test
cmp
sbb
mov
xchg
fwait
lfs
inc
adc
add
addl
cmp
mov
repnz
xor
mov
push
xlat
ss
adc
xor
sbb
decb
fs
push
mov
lret
subb
inc
xchg
jns
cwtl
enter
aaa
rcr
fwait
mov
sbb
into
adc
in
cmp
bound
je
loope
cmp
jne
std
push
mov
and
mov
add
cmp
in
and
adc
pop
pop
loope
test
mov
adc
mov
pusha
add
inc
pop
sti
ret
push
lret
fdivs
and
add
fs
pop
pop
es
sbb
and
sbb
sub
loopne
cmovge
or
push
shr
das
mov
ret
ror
xchg
cmp
shlb
adc
movsb
mov
imul
xchg
cmpsl
mov
jg
mov
ja
jo
pusha
es
sub
pushf
adcl
test
pushf
aaa
cmpl
mov
leave
lods
mov
xor
andl
pop
lds
push
cmp
test
mov
fmull
daa
jae
shrb
sbb
mov
shrb
cli
mov
cmp
lahf
iret
pop
jmp
xchg
in
lahf
dec
or
xchg
sub
mov
jb
mov
pop
and
roll
test
jge
sub
inc
arpl
loopne
jb
lret
popf
jnp
xor
cmpsl
fdivs
fs
scas
xor
cmpsl
pop
mov
adcl
js
loopne
fdivl
inc
les
stos
popa
sub
iret
push
lcall
jbe
iret
gs
icebp
in
sub
xchg
sbb
add
dec
xor
mov
inc
sti
pop
in
pop
dec
lcall
and
mov
jl
ds
ret
push
push
jo
fcoml
push
and
movsb
xorb
scas
inc
out
mov
mov
pop
adc
idivl
aas
mov
lcall
into
push
xchg
pop
cmp
repnz
ljmp
movaps
xchg
mov
sub
cli
out
rcrl
sub
xor
std
fs
pop
in
jbe
jae
pop
mov
or
mov
into
lcall
adc
xchg
ret
xchg
ud0
fwait
xor
lock
xchg
aad
and
lds
nop
out
mov
xor
dec
test
aam
ja
cld
std
sub
mov
orl
into
xor
jmp
roll
bound
dec
imul
or
jne
fcmovb
mov
push
cmpsb
icebp
dec
jl
test
adc
test
insb
lods
push
lret
or
sub
jbe
sub
dec
cld
cwtl
iret
pop
xchg
mov
sbb
fdivrs
and
xlat
ror
popa
fs
sbb
lods
sahf
sbb
or
push
shll
pop
xchg
push
cs
in
movsb
cwtl
icebp
xor
popa
mov
cmp
jno
and
mov
mov
add
pop
mov
test
mov
sbb
hlt
xchg
pop
push
mov
out
pop
push
pop
pop
mov
mov
mov
mov
outsl
cs
pop
into
mov
cs
rclb
push
pop
sbb
fsubp
out
ret
das
mov
ljmp
xor
stos
mov
popf
mov
scas
pop
mov
mov
out
xor
je
js
cmpsl
push
jae
lahf
xlat
out
loopne
jo
leave
mov
stc
lods
xor
std
push
and
sub
imul
test
imul
xor
and
outsb
int3
iret
and
push
lock
push
inc
xchg
dec
dec
and
shll
push
in
hlt
in
mov
ljmp
or
js
loope
popa
push
or
ret
aas
jmp
push
outsl
jnp
jno
and
out
lods
mov
addl
cwtl
xchg
sub
pop
ja
and
sahf
mov
ds
cmpsl
mov
mov
push
mov
movsl
imul
es
and
mov
mov
add
dec
mov
mov
pop
pop
push
jnp
mov
mov
mov
mov
lret
es
loopne
addr16
mov
fs
and
fistl
lods
dec
ds
pusha
das
adc
ds
mov
leave
sti
mov
sub
subb
jo
aas
sub
xorl
inc
add
jne
cmc
mov
xor
jl
sti
lods
scas
push
data16
xlat
je
sub
push
mov
call
cs
pop
mov
cmc
icebp
dec
mov
cltd
push
sub
sub
mov
popf
adc
inc
xor
sahf
stos
cmp
push
jle
jb
sub
into
cmp
aaa
vpminub
fisubs
ret
ret
or
mov
shll
es
dec
leave
insb
js
icebp
mov
jns
sbb
jo
call
rclb
mov
mov
mull
mov
aas
call
data16
dec
popa
dec
fucomp
or
and
xorl
push
dec
ss
gs
pmuludq
sub
inc
push
mov
pop
cltd
es
jg
pop
inc
les
leave
or
negl
rorb
add
push
ds
mov
sbb
fs
or
mov
repz
or
mov
inc
fucomi
ret
orb
push
popf
adc
mov
dec
jb
insb
xchg
stc
adc
pop
fscale
cmpsl
lods
fcompl
adc
or
cs
sahf
and
ret
mov
jmp
push
pop
out
mov
sub
dec
mov
jl
daa
aas
scas
cltd
sub
and
int3
cli
dec
pop
inc
int
lods
mov
fwait
out
lahf
cmc
mov
lds
adc
pop
sbb
dec
gs
mov
jns
pop
mov
jg
rclb
mov
fs
test
lods
pop
loop
jge
in
and
scas
stos
sub
dec
or
mov
insl
jbe
add
fdivrp
fistpll
imul
jecxz
inc
out
or
lock
mov
stos
sahf
shr
jae
mov
pushf
shlb
xor
and
out
cmp
shr
sti
out
add
inc
js
mov
stc
inc
mov
xor
int
arpl
mov
insl
sahf
shlb
lret
sbb
fildll
adc
repz
mov
aam
lds
inc
loopne
inc
adc
adc
xchg
aad
add
pushf
shll
jl
mov
je
out
push
xor
mov
mov
inc
xor
dec
test
insb
mov
lret
movsb
movq
push
cli
xchg
pushf
pop
ret
jmp
test
pop
mov
ja
xchg
add
xor
pop
dec
jne
cmp
pop
add
lea
push
fwait
cs
inc
testb
sub
sbb
push
iret
sub
cmp
xchg
leave
icebp
add
testb
insl
jb
lods
decl
fsub
inc
enter
inc
mov
shlb
das
outsl
fnsave
movsl
and
sbb
mov
and
mov
add
fstpt
mov
cld
dec
xor
inc
inc
mov
in
pop
dec
pop
mov
inc
sbb
pop
data16
repnz
out
iret
ficompl
xchg
daa
cmc
aas
and
scas
pop
sub
test
jp
cmp
sbb
stos
hlt
mov
jge
jg
scas
dec
inc
push
decl
sub
out
out
popa
arpl
pop
icebp
jnp
fistps
jb
xchg
imul
xchg
mov
mov
mov
sbb
adc
insb
sub
nopl
mov
or
add
sub
xchg
xor
hlt
lcall
js
insb
inc
orl
cs
pop
popf
cli
sub
push
shlb
sarb
inc
dec
test
xchg
mov
test
adc
shrb
cmpb
arpl
mov
dec
adc
arpl
add
jne
test
lods
xor
fdivr
push
adc
jecxz
nop
pushf
inc
fmuls
adc
sub
pop
cli
loop
jmp
pusha
aad
sub
jno
or
sbb
jae
or
das
insl
jns
popf
in
adc
mov
or
pop
mov
cmp
fisttpl
je
push
pop
out
leave
sbb
inc
data16
fpatan
sbb
dec
inc
sarl
push
andl
jmp
in
cmpb
movsl
fwait
loope
in
push
sahf
call
adc
outsl
aas
outsb
cmp
and
mov
mov
inc
sub
cmp
mov
dec
mov
pop
dec
adc
lret
mov
pop
je
push
fcmovnu
add
dec
or
cld
adc
das
inc
in
sbb
adc
outsl
mov
pop
mov
inc
fistl
data16
insl
outsb
jbe
aad
aaa
xchg
add
cmp
cmp
and
inc
test
push
test
sub
icebp
out
lret
out
dec
sub
mov
mov
in
test
adc
cmp
xchg
mov
mov
test
hlt
popa
aas
cwtl
popf
push
push
imul
cmp
jbe
lock
rcrl
inc
out
sbb
cmpsb
dec
je
pushf
adc
sub
bound
xchg
pusha
leave
in
dec
addr16
lcall
loop
mov
movsb
mov
sbb
jb
stos
aad
inc
loope
pop
push
or
cmp
inc
fcmovnu
call
out
shlb
sub
scas
ret
adc
cmp
xor
pushf
adc
mov
mov
mov
dec
pop
call
rcll
xchg
mov
jmp
daa
out
scas
dec
out
inc
leave
es
call
call
lret
mov
mov
mov
dec
push
xor
lea
out
mov
movsl
movsb
xchg
sti
mov
mov
rcr
push
sbb
test
or
in
popa
aad
sbb
sarl
sbb
jae
arpl
push
sbb
lahf
bound
cwtl
imul
sub
dec
lea
in
enter
and
stos
mov
xchg
add
mov
hlt
add
push
or
mov
xchg
or
inc
into
sub
sahf
add
jl
pop
les
push
sub
jb
push
vmovapd
in
add
stos
pop
rclb
icebp
add
sbbl
test
les
xor
or
sub
sub
push
jg
mov
insb
adc
push
mov
icebp
gs
scas
into
pop
xor
aas
bound
and
cmp
std
decl
inc
lahf
or
push
mov
leave
aam
ss
imul
push
adc
sarb
out
jg
mov
loop
push
inc
stc
nop
test
daa
xor
adc
pop
sbb
or
or
mov
fs
das
sub
rorb
test
into
inc
dec
sbb
pop
popf
jne
xchg
xchg
out
stc
cmc
movsl
adc
push
or
hlt
sub
pop
das
dec
dec
pop
jecxz
add
sbb
fs
mov
pop
sub
pusha
and
dec
loopne
xchg
jg
mov
movsl
jno
or
add
jl
mov
stos
sbb
jl
dec
cs
xor
insl
arpl
pop
cmp
call
fs
xor
mov
pop
movsb
lock
fnstsw
out
negl
cs
dec
imul
adc
dec
in
loop
mov
ss
add
sub
loope
add
dec
cwtl
or
icebp
dec
shll
je
aas
shll
outsl
xchg
in
lods
sahf
pop
hlt
jmp
aaa
adc
ror
repz
mov
fs
outsb
cmp
mov
popf
in
mov
jae
cs
mov
mov
mov
or
mov
xlat
xlat
fsub
out
dec
scas
inc
repnz
mov
stos
mov
xchg
inc
xor
xchg
cmp
gs
add
mov
mov
sbb
aaa
jno
mov
cmpsb
das
mov
decl
popa
or
les
stos
hlt
and
xor
add
sub
cmpsb
xor
mov
dec
and
push
test
mov
gs
jne
iret
rcrl
xchg
aad
and
repnz
or
jl
cmp
xchg
xor
push
sbb
or
mov
xchg
arpl
in
mov
xor
into
repz
inc
xchg
xor
loopne
mov
xchg
jno
xchg
add
adc
decl
sarb
dec
and
lds
dec
dec
scas
sti
mov
mov
mov
dec
mov
cli
mov
xchg
call
pop
repnz
loopne
cmc
xchg
xchg
lods
in
cmp
sti
dec
mov
jp
jae
jmp
jne
shrb
adc
push
out
jnp
push
or
divl
scas
mov
adc
dec
dec
mov
pushf
cmp
shll
dec
test
and
arpl
xchg
mov
add
cmp
inc
repz
and
mov
fadds
sti
cmpsl
loop
rcll
mov
mov
add
je
enter
subl
sub
aad
idiv
aas
das
mov
sahf
fdivrs
lods
add
jecxz
adc
sub
scas
jl
cmp
popa
insb
jg
fwait
add
sti
clc
ret
sub
push
pop
mov
jae
xchg
aaa
xchg
or
icebp
pushf
pusha
aad
cmp
roll
call
sub
xchg
pop
bound
insb
adc
outsb
aas
repnz
fwait
cs
xchg
lods
cmp
nop
dec
fistpl
out
jecxz
jmp
mov
cmp
lock
and
inc
fneni(8087
shl
adc
push
call
push
int
lcall
lods
mov
outsb
scas
fbstp
mov
and
into
dec
xchg
xchg
pop
mov
test
aam
jmp
scas
pop
repnz
push
inc
sbb
addb
jl
out
pop
pop
push
cmp
std
imul
ret
adc
hlt
test
jo
jb
mov
or
push
es
mov
test
into
push
add
dec
mov
int3
call
call
sbb
addr16
decb
sbb
cmp
outsb
mov
lods
cltd
flds
inc
xor
stos
or
les
imul
mov
cltd
outsb
iret
xor
xchg
loop
pusha
dec
popa
cs
xchg
mov
push
xorb
pop
xor
sti
cmp
das
mov
adc
out
cmp
add
cltd
mov
nop
push
aas
jnp
leave
push
mov
std
test
xchg
jae
push
stos
xchg
mov
jo
insl
cld
sbb
sbb
mov
mov
scas
sbb
xchg
sub
gs
xor
shl
sti
and
insl
mov
pop
adc
fldt
push
pop
pop
fdivr
mov
or
xor
rcll
out
inc
clc
inc
mov
and
pop
push
dec
inc
test
enter
mov
dec
dec
mov
xchg
jge
mov
pushf
loop
insb
fcmovu
js
test
pop
or
pushf
fldenv
dec
fdivl
jb
cmp
mov
dec
sub
divl
fs
scas
mov
or
mov
push
stc
or
out
and
push
or
push
pop
adc
push
clc
jns
in
pop
xchg
pusha
repnz
sub
mov
mov
pop
xor
icebp
jns
inc
sub
icebp
or
std
mov
leave
sub
mov
push
scas
cmp
adc
scas
lock
cli
add
fcmovne
adc
scas
int
test
mov
lret
test
sub
lods
inc
std
or
fs
fists
jne
lahf
mov
inc
push
mov
jb
mov
jae
aas
loopne
mov
push
shr
xor
in
test
xchg
mov
xor
stos
xorb
jecxz
xor
outsb
jne
test
test
mov
pusha
sub
xchg
in
sahf
xchg
lahf
leave
dec
icebp
xor
cwtl
pop
fcom
pop
adc
jmp
mov
jmp
mov
or
jge
mov
cmc
addr16
jns
leave
inc
dec
mov
rcrl
pop
loop
aad
add
nop
pop
xor
repnz
push
push
fiadds
mov
sub
arpl
mov
push
mov
sub
mov
pop
cmpsb
add
jecxz
bnd
and
mov
push
cmp
jp
out
sub
mov
mov
mov
dec
das
xchg
loopne
ss
and
aaa
rcrb
xor
sbb
sub
adc
or
push
push
insb
push
ret
ja
lods
int
test
das
or
repz
add
dec
pop
jbe
jnp
orb
dec
mov
jb
cmp
loope
cmp
ret
or
and
cltd
repz
xchg
pop
aam
jl
lock
xchg
divl
call
dec
cmpsl
xor
push
loopne
js
jns
in
test
mov
mov
push
mov
mov
cld
jl
sub
pop
data16
clc
mov
cmp
test
add
gs
shl
mov
mov
xchg
andb
and
js
xor
mov
and
push
jmp
push
mov
push
xor
xchg
addr16
and
jnp
popf
jp
in
outsb
jae
mov
xchg
aas
push
jle
adc
repz
repnz
scas
insl
decb
jg
add
or
lock
pop
in
icebp
cmpsb
fs
mov
or
add
or
xor
ret
push
pop
mov
dec
cmp
inc
sub
mov
jb
scas
loopne
aas
movsl
sub
je
roll
nop
add
cmp
mov
sbb
lods
mov
fnstenv
test
sbb
pop
rcrb
sahf
mov
pop
push
mov
out
cmp
sub
mov
and
insb
les
out
push
or
into
arpl
pop
push
std
insl
pop
pop
out
cmp
inc
movsl
insb
lods
aaa
cmp
cmp
adc
mov
cmp
adc
or
sbb
push
out
dec
clc
pop
cmp
mov
xchg
dec
xor
lret
out
and
popa
popf
xor
xchg
pop
imul
and
pop
xchg
adc
jnp
inc
dec
fldenv
test
cmp
mov
test
fst
xor
pushf
clc
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
dec
push
or
dec
mov
lock
mov
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
