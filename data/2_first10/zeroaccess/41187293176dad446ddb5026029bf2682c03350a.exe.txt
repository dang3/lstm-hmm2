push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
cltd
xchg
pavgusb
pusha
xchg
xor
sahf
je
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
scas
sbb
pop
pop
mov
test
sti
cmp
lcall
sbb
xchg
rdtsc
pop
sbb
scas
outsb
inc
insl
nop
in
popf
push
mov
sbb
and
add
pop
ret
or
je
sbb
mov
add
xlat
into
into
lahf
cld
pop
neg
inc
mov
dec
in
mov
inc
mov
push
adc
pushf
xchg
add
out
test
or
jae
lds
rcrb
xchg
ret
sbb
xlat
movsl
mov
aas
idivb
push
cwtl
mov
out
subb
movsb
dec
or
and
dec
jbe
mov
lock
lock
jle
push
leave
jle
xlat
test
mov
add
push
or
inc
mov
mov
test
in
testb
dec
test
inc
mov
xchg
cli
aam
shrb
push
mov
jl
je
nop
test
and
dec
push
andl
mov
mov
and
fsubl
and
or
pushf
int
in
fstpt
addr16
mov
mov
data16
adc
mov
data16
das
mov
cmp
xor
cmpsl
scas
mov
lahf
lea
pop
loop
hlt
stc
ss
jns
addr16
push
mov
call
xchg
mov
xchg
test
push
mov
mov
mov
push
jo
dec
and
test
jl
call
or
dec
or
test
pop
pop
push
jae
subl
mov
das
pop
ja
cltd
or
jg
in
ficoml
mov
jge
sbb
jno
je
adc
push
jo
pushf
sbb
dec
call
adc
mov
dec
sbb
flds
dec
flds
ss
mov
mov
pop
push
inc
sbb
popa
fisttps
push
out
pop
inc
lods
sub
cmpl
xor
rcrb
push
xor
cmp
add
std
lcall
xor
inc
push
enter
shld
mov
ret
push
out
jge
xchg
popf
out
icebp
jg
ret
dec
stos
sbb
and
xchg
gs
dec
gs
out
lret
inc
ljmp
in
leave
xlat
imul
mov
out
stos
cmp
cmp
sbb
jbe
stos
cli
mov
jae
bnd
pop
dec
inc
inc
add
xor
insl
push
into
or
sahf
pop
sarb
arpl
nop
xchg
mov
adc
dec
cmp
insb
loop
ret
cld
call
dec
sbb
loopne
push
imul
scas
jmp
pop
pop
adc
mov
inc
xor
sti
mov
mov
rolb
push
pop
ds
inc
repnz
outsb
push
aam
mov
roll
enter
or
rcrb
push
add
dec
xor
push
testb
hlt
mov
neg
jge
stos
fwait
paddusw
mov
pop
sbb
ret
cmp
push
aaa
sub
xor
sub
hlt
ficoml
push
push
mov
in
ss
movsl
fisttpll
sbb
push
mov
fsubrs
pusha
lret
in
jp
aam
pop
xor
iret
lea
mov
adc
ret
cwtl
cbtw
inc
pop
mov
sub
mov
lret
mov
clc
inc
scas
pop
pusha
int3
pop
lcall
int3
outsb
out
cwtl
cld
std
mov
fs
sti
pop
movsb
fadds
in
sub
xchg
sbb
test
int
cmp
test
arpl
push
rcrb
and
jl
jg
push
rclb
dec
pop
rorb
ds
dec
mov
and
clc
mov
in
aad
push
sub
dec
mov
paddsb
mov
cltd
or
cli
pop
or
mov
in
or
jb
sti
push
cmp
pop
andl
pop
or
shlb
dec
xor
loop,pt
hlt
js
add
insb
mov
insb
scas
jmp
xlat
push
and
in
in
das
popa
jmp
lret
hlt
xchg
mov
or
shlb
push
mov
test
cli
inc
loope
mov
xchg
dec
mov
or
bound
sub
jbe
jnp
pushf
outsb
xor
cmp
ficoms
pop
test
inc
sbb
je
push
cmpb
lahf
cmp
in
sbb
into
test
jecxz
lods
mov
push
jb
cwtl
or
imulb
inc
sub
mov
orl
inc
lcallw
rcrl
lds
mov
es
xor
inc
jbe
cmp
push
das
jno
push
mov
dec
into
add
jnp
pushl
aaa
inc
cwtl
fnstenv
dec
ss
pusha
loop
mov
xchg
sbb
jnp
ss
mov
into
adc
xor
dec
dec
cmp
push
and
aas
gs
or
mov
enter
xchg
cmc
or
xchg
hlt
dec
inc
mov
and
mov
mov
lahf
nop
sbb
out
les
push
xchg
cwtl
pusha
loope
push
and
jbe
jbe
xor
enter
clc
sub
hlt
inc
movsb
mov
adc
or
setae
mov
xor
mov
daa
add
icebp
dec
or
add
adc
test
addr16
lcall
movsb
pop
movsl
jecxz
lret
sub
lods
push
fwait
rorl
push
fs
mov
pop
insb
andl
filds
fcomip
inc
bound
mov
cltd
jnp
or
adc
inc
pop
ret
lret
push
rol
push
nop
iret
xor
movsl
dec
pop
mov
scas
jmp
in
pop
fwait
enter
inc
add
inc
scas
xchg
iret
popa
xchg
cwtl
mov
and
loop
cmpsl
push
xor
ret
cmpsb
sub
out
mov
fnstenv
inc
mov
lahf
add
movsb
mov
adc
or
xchg
sub
mov
inc
lock
xchg
lds
inc
imul
rclb
imul
pop
cwtl
ss
cmc
in
push
iret
sbb
arpl
add
sarl
jne
in
stos
pop
mov
push
imul
lods
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
inc
nop
push
xchg
cpuid
inc
pop
pop
inc
enter
scas
mov
mov
shlb
int
aam
jb
hlt
or
inc
arpl
pop
ss
loopne
cwtl
daa
jbe,pt
sbb
clc
pmaxub
mov
imul
push
push
insl
test
push
ficoms
aaa
pop
xchg
push
es
pop
or
dec
xchg
mov
push
test
ret
mov
mov
je
clc
sahf
fdivr
add
and
stos
je
ljmp
dec
stc
jns
fisttpll
sbb
lds
cld
js
nop
lods
outsb
stc
lock
pop
dec
lock
sbb
jns
clc
lret
dec
adc
sbb
adc
sub
stos
fs
popf
inc
xchg
fmull
pusha
in
mov
ja
mov
sbb
xor
jge
dec
bound
inc
mov
mov
xchg
add
dec
nop
and
out
mov
add
fstl
cmpsl
cltd
repz
sub
not
mov
add
xor
in
into
rcrb
push
sub
xchg
das
stc
in
add
push
orl
ret
xchg
rclb
fsubrs
mov
or
lock
popa
mov
incb
push
mov
out
mov
xor
jg
lea
push
into
nop
stos
sbb
or
sub
mov
push
lahf
mov
loope
push
scas
inc
and
clc
adc
test
xor
ja
jp
int3
fcoms
jno
fidivl
nop
int
enter
sub
pop
lock
cmp
test
mov
mov
movsl
pop
mov
mov
push
add
xor
out
add
push
into
testl
fcom
and
cmp
mov
xchg
sub
aam
jge
push
xchg
mov
push
insl
sub
mov
loop
mov
mov
fs
fsubrp
push
xchg
sarl
xorb
stc
or
and
pop
lea
test
dec
pop
xchg
and
fwait
sti
les
cmc
xchg
mov
push
iret
pop
insl
pushf
dec
xchg
jge
pop
subl
shl
dec
xchg
fwait
xchg
cmp
aam
dec
or
pop
aas
pop
adc
shll
jno
mov
push
sub
mov
jle
xor
ljmp
mov
add
mov
popa
pop
push
fstp
rorl
clc
pop
stc
lods
mov
add
stc
adc
clc
faddl
outsl
fldl
lea
push
pop
mov
rol
jl
cwtl
cmp
daa
mov
fiadds
xchg
mov
xchg
inc
ljmp
enter
into
mov
mov
mov
insb
pop
push
sub
aas
loopne,pn
pushf
push
pop
push
xchg
mov
aas
andb
jne
arpl
negl
mov
push
loope
push
cs
mov
fnstsw
xor
mov
sbb
cmp
jae
test
xor
movsb
test
mov
shlb
out
sbb
addr16
add
add
nop
push
mov
xorl
mov
add
mov
sbb
push
jle
mov
bound
stos
add
sub
call
mov
cld
sub
mov
repnz
push
jns
pop
mull
jb
enter
rcl
pop
fiaddl
out
pop
fbstp
imul
roll
je
dec
dec
filds
pop
mov
loopne
cmp
sub
rorl
imul
rcrl
shr
jmp
cs
mov
add
pop
test
or
lret
jb
jae
inc
xlat
rorb
cltd
sub
sbb
ss
hlt
lahf
mov
ss
jo
dec
xchg
xor
inc
dec
not
mov
mov
jns
push
mov
inc
sbb
stc
mov
mov
or
bound
xchg
int3
lds
mov
cmp
mov
mov
xor
mov
stos
js
xchg
rorl
inc
les
or
aad
mov
shll
int
stos
fists
dec
lahf
jne
mov
mov
xor
xchg
fidivrs
mov
hlt
xchg
cmpsl
sub
es
inc
insb
lods
xor
jnp
lret
dec
je
lret
or
dec
sbb
dec
xchg
loop
xchg
cltd
cltd
lea
jbe
cmp
mov
or
fs
pop
imul
outsl
cmp
sub
outsb
cmpsb
jmp
mov
xor
lret
mov
dec
ja
mov
sbbb
int
shrl
aam
cmc
xlat
aad
insl
fsubr
xor
sub
push
mov
and
int3
cmp
and
rclb
popl
ret
addb
jno
insb
dec
sub
popa
dec
js
jg
xchg
sbb
loopne
cmp
outsl
es
pop
dec
cmp
mov
aad
pop
mov
sbb
and
xchg
mov
mov
push
aad
rolb
movsb
mov
jle
sahf
jecxz
mov
rorb
mov
fiadds
nop
test
dec
mov
stc
int
int
stos
cltd
test
aas
inc
pop
jmp
movsb
movsl
dec
or
jbe
fistps
dec
adc
jbe
aad
inc
jo
push
jmp
imul
cmp
ret
ja
and
fisubl
and
adc
es
lock
cmpb
add
mov
adc
imul
dec
out
aad
scas
adc
push
je
out
std
pop
inc
movsl
lret
pushf
cli
ss
mov
pop
xchg
adc
ljmp
pop
push
jl
aas
inc
xchg
ja
insl
cmpsb
jg
in
jae
in
negb
in
xchg
imull
pusha
cmp
addr16
mov
xor
fildll
adc
push
adcl
es
imulb
or
or
and
test
in
dec
cld
jb
add
xchg
xor
movsl
or
inc
cwtl
push
daa
lret
ror
pop
lret
pop
cmp
fisubl
test
xorl
adcl
pop
outsb
cs
push
scas
adc
mov
sbb
xchg
push
dec
in
in
loopne
and
dec
xchg
test
pop
xorl
lahf
shlb
xchg
push
in
mov
or
adc
or
sub
mov
dec
scas
push
hlt
mov
cmpsb
repnz
adc
inc
push
cli
idiv
subl
fcoml
push
inc
sbb
ror
pop
std
fcomp
std
enter
cmp
lcall
ret
mov
es
in
push
mov
aaa
shr
test
push
inc
jno
in
lret
div
xor
mov
mov
xchg
inc
orl
xchg
pop
jno
pop
loop
push
movsl
cmp
ret
cli
mov
cmp
fwait
mov
jb
mov
or
enter
ds
add
jg
pop
leave
mov
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
in
dec
push
xchg
cmc
ja
fsubl
add
pop
mov
mov
jmp
inc
idivb
cwtl
sub
pop
push
and
out
pushf
dec
inc
lock
hlt
mov
adc
pop
xchg
leave
mov
add
mov
cmp
out
mov
aaa
xor
mov
mov
negl
sbb
daa
lahf
lods
outsb
fwait
ja
ja
cwtl
pop
movl
inc
dec
daa
jp
adc
and
xchg
aaa
out
dec
pop
lds
lods
test
mov
and
inc
fcompl
arpl
bound
cs
iret
es
xchg
push
cmc
sbb
xchg
out
pop
pop
ja
xlat
sbb
loop
call
mov
gs
mov
fists
add
inc
mov
out
pop
mov
xchg
mov
stos
xchg
dec
sbb
pop
rcrb
mov
mov
adc
ja
pop
inc
cmp
fs
mov
aad
pop
sub
inc
emms
je
xchg
inc
sahf
cld
jo
iret
xchg
pusha
je
mov
stos
and
mov
cmpb
push
addr16
in
int
fidivrl
dec
push
sub
cmp
imul
mov
pop
xchg
loope
jne
ret
aad
push
mov
ficomps
pop
pop
mov
pop
pop
addr16
add
or
add
ret
push
add
xor
jmp
cltd
xorl
sbb
sub
inc
push
out
stc
addr16
mov
jmp
mov
or
mov
dec
xlat
cmp
incb
push
xchg
inc
in
dec
adc
aad
cmc
movsl
fistps
inc
xlat
xchg
cmc
mov
sub
sub
adc
jmp
lock
sub
mov
mov
in
sbb
or
sbb
dec
lcall
and
ss
pusha
cld
cmp
loop
jbe
fwait
lods
mov
ljmp
push
shrl
daa
xchg
mull
lods
jno
in
sahf
imul
rorl
adc
stos
sbb
dec
andl
xor
aam
aas
jb
ficoml
mov
hlt
fsubrl
scas
and
jb
mov
xor
lods
inc
pop
dec
test
mov
mov
xor
lret
setne
dec
mov
mov
xor
adc
les
jmp
dec
mov
fs
mov
xchg
sbb
dec
jae
pushl
jne
mov
repnz
cwtl
adc
add
mov
cs
pop
test
cmc
aaa
jno
cmp
mov
jo
icebp
push
shrl
fiaddl
out
xchg
pop
xchg
lods
ss
mov
xor
imul
shll
in
fdivrs
push
pop
inc
or
out
and
cmp
sub
pop
jbe
outsl
data16
in
stc
mov
data16
cmc
jns
push
jae
sbb
inc
sbb
cmp
sbb
add
mov
xchg
dec
pusha
sub
sub
scas
jnp
jecxz
pop
push
jle
cmp
stos
inc
ror
dec
mov
fcmovnbe
rol
lret
jmp
icebp
popa
and
ss
test
ds
ja
cmc
icebp
pop
xor
mov
loopne
push
sbb
push
inc
fdivl
jle
cwtl
es
xchg
dec
test
inc
sub
sub
loope
movsb
js
mov
je
outsl
xor
out
es
xor
inc
pop
inc
bound
fistps
addr16
dec
int3
xlat
adc
or
fists
dec
or
loope
cld
imul
mov
in
ret
mov
mov
stos
jl
and
repnz
jo
out
lret
sub
push
and
or
test
adc
and
push
leave
dec
shll
jmp
decb
lea
dec
inc
orl
fdivr
int
xorb
movsl
cli
mov
cwtl
clc
jmp
and
pushf
call
and
mov
stc
dec
sti
mov
int3
cli
rcll
inc
insl
push
aaa
shlb
rorl
adc
add
pop
dec
pop
out
dec
xchg
mov
push
outsb
push
loope
xchg
scas
jge
cmp
lret
jno
mov
sub
js
arpl
orl
sub
loopne
or
into
xlat
xchg
decb
xchg
into
clc
mov
repz
mov
adc
adc
lahf
cli
push
imul
mov
aas
mov
fmuls
xchg
hlt
dec
or
push
inc
lock
fidivrl
xchg
or
push
mov
imul
jnp
movq
popf
enter
pop
sbb
push
push
mov
fstl
js
cmp
jge
int
nop
add
lea
test
mov
fnstcw
adc
in
es
push
or
scas
fdivs
out
shrl
and
stc
xchg
sub
and
cmp
dec
xor
inc
jg
iret
lcall
mov
repnz
xor
xlat
dec
fsubs
outsb
ret
cmp
pushf
push
mov
fdivl
imul
in
push
aaa
mov
mov
cltd
lret
dec
jg
scas
jae
ficompl
sub
pop
jle
std
rclb
lret
mov
js
insb
mov
sbb
fcom
stc
jp
mov
rclb
adc
jae
scas
mov
ret
inc
pushf
sub
and
adc
lds
xlat
sub
lds
jecxz
pusha
xor
dec
and
ret
sub
faddp
sbb
test
xchg
sbb
pop
add
add
jp
pushf
rcr
adcb
movsl
scas
pop
mov
jmp
or
jmp
mov
mov
mov
add
dec
mov
and
in
jae
add
je
inc
cli
mov
popl
orb
cld
shlb
jle
movsl
fwait
out
adc
fimuls
mov
inc
mov
mulb
mov
sbb
jmp
push
int3
xchg
pop
mov
mov
jmp
and
sbb
pusha
arpl
jno
ss
push
xchg
pusha
xor
sti
jnp
push
enter
sub
dec
popf
jp
std
mov
mov
xchg
and
cli
ja
mov
mov
enter
rcll
je
inc
inc
mov
stos
pushf
pusha
sub
ret
mov
out
scas
xor
and
sbb
testb
daa
mov
rcrl
jno
sbb
aaa
dec
adc
icebp
jle
call
cmpl
std
mov
jp
out
add
sbb
xchg
js,pn
ljmp
lods
fstps
push
xor
pop
cwtl
add
mov
shl
pop
add
xchg
sub
pop
or
dec
vmovddup
push
lods
in
push
mov
ds
lcall
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
stc
mov
ja
sar
push
pop
popa
pop
mov
dec
pop
push
repnz
cmp
or
xorb
out
popf
std
and
add
mov
pop
mov
adc
sbb
orb
mov
stos
movsl
jge
dec
add
repz
popf
xor
jbe
cmp
out
lcall
fs
jle
pop
mov
test
subl
push
push
or
sbb
dec
pop
xchg
pop
inc
sub
out
scas
sbb
xor
movl
sub
mov
jnp
je
mov
dec
mov
pop
fmulp
ds
addb
mov
and
add
adc
js
outsl
dec
push
push
xor
stos
mov
ret
xor
insb
mov
mov
cmc
or
lea
jge
out
push
xor
bound
inc
push
cmp
fcmovnb
call
andb
push
jmp
mov
xchg
pusha
push
dec
lea
push
ja
in
inc
lds
mov
add
es
mov
inc
bound
shlb
test
jge
aad
dec
push
pusha
sbb
das
movsb
rcr
adc
fldl
fsubl
pop
cmpsb
push
mov
push
mov
mov
sarb
mov
in
fucomi
or
jmp
shll
xor
mov
inc
shrb
nop
pop
xchg
std
jmp
cmp
out
sub
aam
clc
arpl
outsl
jae
add
loop
das
dec
cld
push
shll
jne
lds
aas
aam
mov
pop
ret
das
popa
and
cmpsb
xchg
dec
cld
mov
jo
cld
push
cmp
xchg
arpl
movsb
out
mov
in
test
xor
jae
ss
add
ret
adc
daa
out
adc
adc
xchg
jecxz
dec
push
sbb
or
andl
lods
xchg
test
adc
jp
sbb
lahf
pop
nop
lret
jnp
xchg
cmpsl
cmpsl
adc
insb
ja
inc
dec
sub
ficoms
test
ret
les
cmpsb
test
add
mov
dec
loop
popa
js
cmpl
fsubrs
inc
jmp
sbb
dec
mov
int
cli
jge
es
arpl
push
xchg
or
call
mov
stos
jmp
jns
mov
jae
jbe
insb
in
in
mov
push
mov
sbb
inc
stc
fcompl
leave
sub
mov
jae
push
cmc
aas
dec
push
xchg
xchg
cwtl
mov
dec
push
lret
mov
pop
lock
dec
cmpsb
dec
adc
pop
sbb
fisubrs
jno
xor
add
mov
stos
xchg
xlat
jp
rol
pop
xor
push
sub
inc
fs
fcomp
pop
cmp
cli
fcompl
out
xchg
pop
mov
jmp
js
push
frndint
fwait
xor
test
push
mov
or
mov
cld
xorl
jnp
xchg
and
hlt
push
fstl
popa
inc
sbb
mov
ja
and
pushl
inc
xor
cmp
sbb
mov
ljmp
int3
mov
or
cs
jae
sbb
fnsave
and
lcall
scas
adc
cmp
and
fsubl
pop
lods
xor
cmpl
lods
add
inc
fs
push
pop
mov
xor
pop
xorl
test
inc
pop
mov
stc
insb
shll
sti
xchg
cmc
mov
lcall
aam
mov
imul
outsb
pusha
clc
mov
push
mov
sbb
cltd
nop
mov
sahf
scas
pop
repz
into
or
ret
adc
and
gs
in
dec
pop
cld
or
std
shll
jae
and
inc
fnstcw
mov
mov
push
xor
mov
and
jb
loopne
pop
mov
or
push
jl
dec
mov
inc
xlat
add
outsb
out
pop
or
aam
lock
xchg
mov
je
dec
pop
mov
mov
or
lret
cmpsl
xor
xor
fisttpl
fsubr
popf
outsl
les
das
pusha
mov
les
data16
insl
bnd
std
cmc
into
jne
jns
stc
fwait
adc
xor
lea
push
outsl
jae
icebp
or
jle
adc
lahf
movsl
bound
inc
shl
hlt
inc
cmpsl
jae
bound
and
pop
or
fisttpll
popf
rcll
test
add
leave
push
pop
add
imul
syscall
sub
xlat
lahf
jb
xchg
jae
out
outsl
push
sub
fwait
out
mov
in
sub
jmp
and
hlt
mov
push
repz
hlt
cld
repnz
pop
or
push
ljmp
or
push
or
dec
and
or
adc
cmpsb
jl
pushf
leave
jo
jg
or
mov
ret
add
jnp
xchg
cmpsl
pushf
popa
jnp
inc
dec
repnz
push
rorb
inc
xchg
ljmp
ret
jae
js
mov
mov
jae
add
inc
inc
subl
iret
mov
hlt
ficoms
xor
jno
pop
sbb
pushl
jmp
sub
and
test
mov
xor
jmp
int3
arpl
and
int
sub
loope
jbe
scas
pop
repnz
call
out
jns
mov
aas
push
enter
subb
add
jne
lahf
jae
aad
shrw
lods
inc
add
push
and
mov
jmp
sub
bound
inc
lods
iret
sub
jae
and
adc
add
jns
push
loopne
jg
pusha
pushf
pop
mov
fcmovne
cmc
xchg
xlat
shlb
pusha
lock
pusha
out
and
adc
mov
into
lahf
mov
jge
and
push
adc
xchg
add
mov
negb
out
loope
in
sbb
aas
push
sbb
fldt
fstpl
sbb
xchg
xor
and
jbe
pop
rcrb
mov
imul
out
pop
nop
call
fdiv
or
add
inc
faddl
pop
sar
ds
and
inc
or
push
xchg
rcll
lahf
out
push
rol
lds
out
jne
jbe
pop
sbb
mov
les
loop
inc
adc
stos
call
icebp
sbb
xor
and
sub
cmp
in
test
insl
imul
add
insl
push
sub
xchg
pop
orb
mov
jle
outsb
sub
or
sahf
in
nop
movl
push
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
inc
xchg
mov
das
aam
ja
and
bound
sub
adc
push
xchg
sti
lea
xchg
mov
ficoms
stc
in
sahf
clc
imul
lds
dec
add
sbb
mov
inc
scas
fildll
xlat
sbb
idivl
mov
gs
sahf
fiaddl
jne
jbe
lods
dec
xor
in
dec
or
sbb
test
cmp
mov
sub
xor
repnz
adc
mov
lcall
gs
mov
dec
pop
hlt
jo
dec
enter
popf
sbb
jbe
lea
push
or
adc
cltd
int
aas
push
adc
call
mov
arpl
into
mov
cmp
pop
or
cmpsb
pop
mov
pop
sahf
mov
cli
push
cmpsl
into
jae
inc
mov
jl
mov
inc
cli
mov
cmp
xchg
stos
mov
repz
test
push
xor
jmp
mov
je
jl
xchg
out
inc
fstps
xchg
xor
das
outsb
scas
sub
std
ret
std
movsb
sbb
mov
insl
stos
outsl
sub
dec
nop
jb
cmc
mov
mov
push
cmp
pop
mov
mov
pushf
rcll
sub
sti
cmp
popf
push
jp
addl
sbb
mov
sub
sahf
fisttpll
jo
push
pop
jmp
jmp
mov
stc
or
fwait
js
jno
test
mov
inc
rcl
sub
popa
repnz
mov
jne
ret
xchg
int3
or
push
scas
test
outsb
xchg
test
cld
sbb
mov
gs
test
ja
icebp
xor
and
lcall
pop
mov
xor
push
xor
pushf
cwtl
mov
pop
xchg
lds
jo
push
add
xchg
mov
pop
pop
xor
or
sbbb
pop
cmp
mov
test
incb
push
loop
bound
pop
cmpsb
movl
jl
jne
xchg
and
add
bound
imul
push
lcall
outsb
xlat
lahf
and
dec
imul
jp
or
in
ja
adc
jae
pop
pop
jge
push
jl
mov
std
aas
cli
nop
lds
push
add
mov
inc
push
loop
outsb
mov
mov
ss
xor
filds
rclb
js
jmp
ret
xchg
mov
mov
popa
pop
sub
lret
xor
and
outsl
in
pop
aam
mov
lret
into
cmp
lock
jb
fimuls
mulb
movsl
fcoms
jecxz
in
lret
pop
and
or
movsb
cli
mov
cli
bndstx
aaa
hlt
inc
sub
shl
test
js
jge
xor
dec
or
testb
sbb
ret
or
mov
jo
sti
in
inc
push
add
cmp
jns
pop
ja
mov
outsb
cmpl
xor
hlt
sbb
and
popa
dec
and
leave
push
pop
xor
mov
mov
push
gs
add
push
sbb
sbb
mov
sub
mov
or
jbe
or
jle
jecxz
jbe
mov
nop
dec
rorl
sbb
dec
inc
mov
aad
cmp
sahf
les
ficoml
mov
test
cmpl
in
mov
sbb
mov
cmp
mov
inc
mov
test
cld
paddw
push
or
xchg
push
dec
pop
out
push
pusha
ret
mov
mov
mov
mov
inc
mov
jge
inc
cs
cmp
cmp
cmp
sbb
inc
xchg
cmp
stos
sbb
jp
mov
jns
pusha
jmp
dec
cmp
aas
jb
push
popa
lods
cmp
dec
jno
aaa
mov
shrl
pop
xor
mov
sub
test
insl
push
sbb
sbb
cwtl
push
sub
int3
or
sub
adcb
data16
cmp
imul
mov
int
imul
or
in
out
pop
mov
push
xor
das
out
xchg
mov
cli
mov
loope
movsl
sub
popf
dec
daa
sti
in
jb
stc
mov
sub
pop
loop
jmp
jae
pop
lds
jo
add
jecxz
mov
fidivrs
imul
and
pop
and
adc
jo
outsl
cmpsb
and
test
add
push
cmp
dec
sub
test
jne
shr
push
dec
lods
test
test
adc
mov
lret
int3
sbb
into
movsb
scas
shrl
ljmp
lret
lea
pusha
adc
cmp
push
jge
pop
inc
daa
jl
lret
pusha
or
sbb
cli
push
ret
popf
mov
filds
dec
pop
es
call
jle
movsl
adc
inc
adc
push
cs
and
push
push
push
popa
fistl
imul
stos
xchg
jbe
mov
test
scas
dec
notb
out
test
push
js
and
or
add
mov
dec
insl
cmp
push
push
jle
lcall
std
cmp
xor
hlt
cwtl
dec
fwait
dec
cmp
push
push
jge
dec
lea
push
pop
pop
lds
scas
push
mov
dec
xchg
mov
jl
fmull
aas
push
dec
push
jae
xchg
mov
push
pop
fbld
xchg
cmp
push
enter
mov
push
or
loop
xor
xlat
insb
mov
pop
loop
or
and
lahf
mov
mov
lds
add
or
sbb
mov
outsl
adc
sbb
out
popa
sub
lock
cmpsb
sub
pop
shlb
stc
ret
out
push
inc
in
int3
repz
pop
mov
and
push
and
sub
mov
xlat
mov
jl
pop
push
movsb
jecxz
add
and
sub
adc
xor
push
dec
lea
jl
or
sbb
cmp
sbb
or
jno
pushf
je
sub
loope
jl
mov
addb
jbe
arpl
fildl
fstl
mov
sbb
mov
pop
xchg
jbe
enter
push
sbb
and
push
sub
pop
outsb
jg
rcr
adc
sbb
xor
mov
push
push
jo
mov
mov
adc
jno
in
and
mov
cmp
xor
gs
mov
test
inc
lock
in
movsl
or
es
push
mov
mov
mov
push
push
or
rcr
adc
mov
mov
jo
scas
fs
push
jg
dec
test
jg
push
add
mov
scas
add
push
pop
cltd
rorl
mov
sbb
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
sbb
cmp
scas
in
cli
arpl
clc
filds
cltd
test
xchg
out
push
xor
jp
cli
mov
fwait
cmp
std
stos
icebp
push
fmul
cmp
ja
incl
push
cltd
xchg
inc
sahf
arpl
testb
xchg
imul
test
add
lds
in
add
scas
es
mov
mov
add
jle
stos
and
or
lods
sub
cmp
cmp
or
jl
mov
jge
jne
pop
mov
inc
pop
out
sbb
push
adc
mov
test
adc
cmpsl
mov
mov
leave
scas
lock
push
cld
idivb
cmp
fwait
ljmp
sarl
or
sbb
add
ja
inc
js
xchg
inc
inc
push
outsb
lret
fwait
dec
cmpsb
fcmovnb
push
fistpl
ss
push
push
jecxz
sub
negb
test
dec
push
dec
sti
sbb
sbb
mov
mov
xchg
dec
aaa
frstor
pop
fs
push
cld
or
icebp
or
nop
jecxz
ret
stos
lahf
inc
sbb
inc
jp
mov
xchg
popf
adc
arpl
out
jp
ss
or
imull
ror
sarl
lret
roll
call
cmpsl
notl
nop
jecxz
testl
jbe
xchg
outsl
cld
lret
jno
xor
sbb
pop
adc
adc
fsubs
fnstenv
and
cld
fdiv
movl
es
cmp
or
sbbl
mov
ja
mov
pop
mov
mov
inc
cltd
fmuls
xorb
fs
inc
ret
fsubrs
jno
ds
psubusw
fistl
add
mov
pop
js
jecxz
cmp
bound
and
lret
lcall
dec
xlat
iret
out
sub
xor
mov
inc
sti
and
push
xlat
loope
pop
add
shl
sti
mov
and
xcrypt-cbc
cmpsl
push
inc
adc
and
sbb
leave
out
add
xchg
cmp
cmp
enter
addr16
xchg
lcall
fadds
hlt
fs
push
sbb
xchg
and
js
inc
dec
repnz
fwait
into
popf
ficoms
int
mov
movsb
cs
mov
idivb
or
pop
dec
repz
add
mov
add
movsl
mov
xchg
es
aad
outsb
scas
data16
lock
jae
sbb
cmp
xor
dec
repz
xor
lods
fs
fiadds
push
cmp
andb
enter
fwait
mov
mov
push
aaa
push
arpl
jo
or
sbb
jae
test
sbb
pop
test
add
test
pop
cwtl
pop
or
xchg
adc
outsb
xchg
or
jmp
mov
fistps
dec
jnp
outsb
xor
and
add
fsub
sbb
dec
mov
inc
stos
mov
into
xor
fdivrl
stos
xor
cmpsb
cmp
xor
pop
xor
add
cs
dec
enter
pop
cmp
clc
mov
mov
roll
ds
dec
fwait
or
outsl
add
and
clc
lods
xor
and
and
test
sub
cmp
pusha
inc
mov
add
stc
sub
xacquire
pop
inc
outsb
sbb
dec
mov
sbbl
movsb
leave
push
pop
enter
jl
dec
aad
lods
pop
xor
xchg
add
push
mov
popl
scas
jnp
hlt
rclb
dec
lahf
sub
jae
jmp
pop
push
xchg
add
pop
sub
ljmp
add
mov
or
fdivp
fsubrl
js
lcall
pop
add
xor
mov
or
inc
gs
lods
outsl
idivb
dec
mov
insl
and
mov
adc
cli
mov
rclb
out
lret
push
scas
movsl
fcmovnb
lret
std
push
aas
mov
push
sub
fldcw
nop
stc
stos
sbb
push
int3
scas
dec
cmp
or
or
arpl
fwait
cltd
xor
idivb
add
add
pop
je
nop
pop
mov
xchg
loopne
cmpsb
cmpsb
and
in
shl
mov
or
sbb
lock
jmp
lret
insl
jge
inc
icebp
in
mov
push
xor
sti
js
mov
mov
repnz
into
mov
push
mov
in
mov
lahf
jp
cmp
dec
les
dec
std
xorl
sub
inc
out
or
lcall
fndisi(8087
add
cmp
or
call
repz
aaa
call
mov
andb
jae
int
fsubrs
nop
sbb
lock
fnsave
aam
sbb
dec
push
push
decw
mov
es
xchg
mov
add
add
mov
add
std
pop
es
mov
xchg
sahf
leave
shrb
lock
add
pop
scas
xchg
lahf
jno
mov
push
rorl
dec
push
or
and
test
inc
or
mov
adc
mov
push
lahf
movsb
mov
inc
and
adc
test
xchg
jmp
je
cld
rcr
pop
cmp
fdivrs
xchg
rsm
and
push
push
xor
out
push
ljmp
pushf
xlat
mov
inc
sbb
xchg
fwait
leave
jecxz
mov
ds
sub
out
dec
sub
and
xor
xchg
xor
insb
push
push
pushf
mov
fidivrl
in
movsl
pop
jle
ja
addr16
dec
fwait
ret
cmp
stc
push
mov
ficoms
adc
add
sub
fsts
xchg
jmp
cmp
lock
das
pop
add
xchg
xchg
cmpsl
xchg
fcomi
pop
lods
nop
lret
aad
jb
ds
push
arpl
dec
fbld
sub
pushf
mov
dec
cmpsb
or
pop
andb
sbb
outsb
aas
adc
inc
xor
mov
pop
xchg
sbb
dec
xor
mov
cmpsl
int3
xchg
or
or
mov
xchg
sbb
mov
dec
fs
push
push
sub
lea
mov
aad
adc
mov
mov
add
in
jle
sub
out
inc
push
aam
rorb
xor
fwait
lahf
std
out
or
fimull
cli
repnz
mov
push
mov
std
jecxz
add
fwait
loopne
pop
push
xor
cmp
push
mov
lea
shl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
scas
mov
movsl
adc
lahf
mov
xchg
mov
adc
int
out
pop
je
push
jae
rcrb
mov
mov
adc
call
lds
rcrb
fbstp
jp
aas
into
fdivr
out
add
mov
xchg
test
les
pop
push
scas
sbb
bound
daa
ja
xor
inc
sub
jbe
outsl
adc
and
push
or
push
sub
mov
sub
adcl
bound
mov
cmp
rcrb
and
shl
pop
mov
jle
mov
push
adc
push
out
jo
dec
push
and
sbb
cmpsb
pop
popf
out
jno
and
xchg
dec
dec
xor
popf
xchg
pop
adc
or
fbld
je
fsubrs
jle
aam
mov
fdivr
jge
mov
iret
mov
inc
inc
mov
xor
cmp
push
jg
or
imul
in
inc
mov
sub
repnz
es
ss
push
mov
pop
push
repz
jne
push
testl
mov
mov
pop
outsb
ss
sub
and
movsb
add
and
ja
mov
or
lods
out
xchg
sbb
push
pop
call
test
cld
out
add
dec
fidivl
dec
mov
add
mov
fs
nop
test
pop
adc
dec
jae
inc
cmp
ds
mov
dec
stos
mov
imul
call
pop
pop
insl
in
test
out
loopne
das
cltd
jp
xchg
push
addr16
adc
sbb
jb
mov
insl
js
lret
cli
or
sub
add
lret
push
and
jl
adcl
mov
out
in
push
lcall
fmulp
das
cmpl
cmp
pop
xchg
dec
rclb
mov
loop
pop
jmp
mov
mov
xchg
cmp
xchg
xchg
mov
mov
xchg
mov
pop
stc
dec
std
inc
negl
ret
imul
mov
sub
mov
mov
ret
cltd
adc
sahf
jl
push
jnp
push
pop
mov
gs
cmpsl
pushf
shll
mov
push
cmp
pop
fists
jns
je
xchg
iret
es
pop
xchg
push
or
pavgb
xchg
or
add
cld
pop
pop
jl
rolb
sbb
xor
cmpsb
lcall
add
loop
popf
idivb
andl
sbb
jmp
imul
inc
dec
rclb
ljmp
mov
sbb
aam
mov
or
ja
mov
push
cwtl
jb
adc
icebp
sub
mov
jecxz
push
nop
outsb
cli
or
inc
sub
add
mov
and
cmp
sbb
and
mov
je
mov
cmpl
paddw
mov
shlb
pop
inc
popf
das
ret
cs
out
js
stos
mov
in
mov
cmpsl
leave
pusha
inc
repz
aad
sub
push
nop
ljmp
test
cld
outsb
mov
lcall
jl
rcrl
push
adc
fcmovne
std
xchg
add
mov
sysenter
or
mov
or
dec
mov
push
cmp
sub
sbb
xor
les
add
push
xor
xchg
sahf
in
outsl
out
inc
data16
dec
add
mov
lret
call
shlb
hlt
push
shl
sub
cmp
jmp
xchg
aaa
jmp
pop
call
outsl
ja
push
imul
cli
sahf
loop
lods
aaa
fs
imull
stos
push
xlat
movsb
sub
sbb
sbb
cmp
jb
out
xor
mov
shll
sub
adc
jle
and
les
aam
aas
lods
test
int
lret
subb
push
push
outsl
stos
fwait
loop
mov
mov
into
repnz
add
shl
add
cmc
fs
mov
cmc
xor
bound
cmp
sahf
ja
jnp
sti
loope
push
stos
sub
fs
xchg
cmpsl
mov
add
jmp
cmp
jmp
inc
iret
inc
lret
lock
sbb
sbb
in
sub
dec
test
sbb
mov
push
sahf
sbb
mov
mov
popl
or
cmpb
push
or
stos
mov
lahf
divb
lahf
sub
cmpsl
sbb
ja
sbb
loop
xor
scas
insb
push
pop
and
push
outsb
jb
or
mov
in
add
cmp
aaa
add
mov
out
je
mov
mov
gs
and
jecxz
jg
add
jle
mov
adc
and
lods
jne
push
aaa
hlt
and
xor
add
shrb
sub
sub
fcmove
das
mov
push
hlt
and
mov
xchg
mov
lock
adc
mov
js
cmc
into
daa
stc
sub
sti
and
sbbb
sub
das
jb
pop
inc
aas
aam
jg
ficoml
fisttpll
movsb
mov
sbb
add
aam
js
mov
or
aam
pusha
mov
iret
jno
loope
cmp
mov
push
loope
mov
mov
xor
push
pusha
popf
xchg
fbstp
push
mov
in
loopne
lock
and
xor
bound
mov
cld
or
fdivrl
add
mov
cmpl
sbb
ret
cmp
aad
push
sbb
push
push
ljmp
sub
sbb
xchg
cmc
movsb
jbe
shr
xor
or
pop
or
jecxz
push
les
and
or
std
mov
mov
les
hlt
nop
idiv
pop
pop
lcall
sbb
sub
mov
inc
repnz
testb
stc
or
sbb
mov
stc
dec
shrb
ret
push
testb
out
lds
cmpsl
push
js
and
shll
addr16
adc
jae
repnz
shrl
sbb
adc
add
push
pop
xchg
jle,pn
test
gs
outsl
repz
cld
mov
jbe
xchg
add
lods
ss
into
xor
shrl
add
mov
fldcw
cld
xor
mov
pop
aaa
pop
cs
push
push
rol
or
cmp
pop
jge
push
daa
nop
cmpsb
imul
mov
dec
imulb
xor
push
push
and
xor
jae
mov
push
bound
or
loop
rorl
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
dec
and
xchg
add
xchg
xchg
mov
pop
cmp
and
nop
inc
sbb
xchg
int
xlat
pop
and
pop
dec
call
jge
jns
test
cs
ss
in
cld
fs
jae
jae
cmp
add
nop
cmp
sub
imul
mov
pop
sub
dec
mov
call
cmp
scas
lcall
inc
sub
les
or
das
mov
stos
jecxz
add
out
cmp
jmp
pop
mov
cmp
mov
andb
pusha
xchg
clc
lods
sbb
out
lock
cs
inc
mov
mov
jns
daa
pushf
cmp
fildl
addl
lret
je
dec
add
fidivl
xor
stos
mov
push
add
sbb
enter
adcl
repz
shrl
mov
mov
stos
mov
imul
cmpsl
test
xchg
mov
test
bnd
adc
stos
hlt
mov
sub
add
sbb
or
or
adc
popa
dec
xchg
jns
or
pop
mov
mov
lret
pop
aad
in
out
ret
push
mov
pop
sbb
andl
loopne
cld
iret
push
cld
outsl
in
add
test
jb
jecxz
and
cmp
xchg
sub
test
xor
test
jmp
mov
gs
jg
mov
push
or
cs
addr16
ljmp
ljmp
sbbl
cltd
inc
loope
sbb
jo
iret
jle
dec
jbe
in
loope
mov
int3
aaa
mov
jns
test
lea
mov
sar
or
sahf
out
xor
call
jae
dec
jge
mov
mov
ret
outsb
out
dec
mov
add
orb
imul
pop
sahf
dec
add
pop
xchg
jb
mov
inc
dec
adc
lea
pusha
pushf
div
sbb
repnz
push
push
std
mov
popa
lea
push
mov
and
adc
fistps
push
xchg
pop
jecxz
jno
cli
or
xor
jg
jno
push
std
mov
mov
fcmovnb
and
lret
sub
inc
inc
cmpsl
mov
xchg
mov
add
popa
dec
xor
dec
inc
hlt
mov
movsb
cmpsl
out
outsb
xchg
fldl
cmc
fnstenv
cmp
outsw
sub
jge
push
aam
xorb
and
and
loope
cli
dec
mov
stc
sub
push
cwtl
les
xor
test
rclb
push
aaa
push
cmp
sti
mov
jg
fs
adc
and
sahf
lock
xchg
or
in
shlb
subl
arpl
mov
sbb
sbb
and
or
pop
scas
xor
mov
cmp
sbb
push
sbb
int
out
push
rdtsc
mov
dec
fists
aas
lcall
mov
sub
or
adc
pop
call
push
cmp
inc
stos
add
sub
test
ds
imul
add
pushf
or
cmp
dec
ja
jo
int3
roll
adc
into
arpl
not
and
imul
pop
push
jge
mov
leave
lahf
sub
sti
mov
in
lods
and
lret
fisttpl
iret
loop
push
xchg
lret
push
stos
rcr
sub
and
aam
cwtl
cmpsl
sbb
inc
inc
xchg
dec
xchg
das
cmp
test
xchg
fchs
push
mov
dec
ja,pn
insb
or
out
jmp
in
jmp
test
xchg
ret
push
test
fcmovnu
lods
ss
dec
loopne
movsl
push
adc
rorb
xchg
std
fs
add
sbbl
xor
mov
addl
je
daa
or
lret
pop
mov
mov
add
xchg
push
int
jl
dec
fildll
add
pop
cltd
cmp
ret
sub
pushf
je
push
ds
mov
stc
jno
mov
les
out
cmp
ja
and
mov
loopne
pop
imul
subl
sbb
inc
sbb
sub
or
testb
out
arpl
iret
mov
mov
xor
test
addb
inc
fwait
rolb
and
sbb
adc
ret
in
or
rcrb
clc
or
xchg
cmc
lcall
lock
outsl
outsb
cmp
xchg
sub
out
adc
in
cwtl
pop
cmp
imul
add
in
daa
aam
lcall
ret
cmp
sub
cltd
push
jecxz
add
and
int3
lahf
std
aas
out
cltd
mov
mov
lock
int
cmp
in
add
enter
mov
xchg
mov
ss
jecxz
fcoml
test
sbb
shll
and
sbb
pop
sbb
mov
fcomps
clc
inc
add
rcll
inc
sub
cmp
arpl
scas
xor
xchg
dec
mov
pop
push
xchg
arpl
jae
sbb
orl
jecxz
sarl
inc
je
and
dec
cld
push
enter
in
out
and
sbb
mov
call
pop
jb
in
jmp
xchg
in
jmpw
out
wbinvd
ljmp
leave
test
adcb
in
and
scas
dec
in
mov
shlb
push
lahf
mov
jo
fcmovnb
sarb
or
xchg
int
mov
pop
movsb
or
sti
pop
mov
ficomps
andl
or
out
jmp
scas
movsl
jg
sbb
cmp
jo
popa
outsl
pop
std
ljmp
cltd
inc
insb
push
sub
xchg
in
test
in
push
cmp
in
jne
outsb
adc
mov
and
sbb
pop
idiv
mov
mov
fs
sub
mov
std
push
sub
imul
iret
jmp
inc
and
es
sbb
fwait
jl
ret
call
add
pop
xorl
mov
cmpsl
cltd
cld
inc
mov
sub
adc
xor
lock
adc
jle
mov
icebp
mov
cwtl
imul
sub
out
pop
inc
mov
hlt
in
adc
push
dec
test
ljmp
or
mov
jl
cmp
out
pop
pusha
add
adc
inc
in
lea
cmc
cmc
push
mov
mov
inc
outsl
xor
outsl
and
push
lea
jbe
cli
add
add
aam
lret
aas
stos
mov
aam
pop
sbb
adc
add
pop
jmp
mov
push
cld
sbb
xchg
rorl
aaa
inc
add
add
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
cmp
mov
ja
adc
pusha
cmp
push
inc
aam
clc
inc
xchg
inc
hlt
addr16
jmp
mov
xchg
xchg
cmp
sub
dec
inc
lock
mov
shlb
xchg
jge
leave
lods
dec
ds
mov
mov
jp
xor
adcl
idivb
std
adc
call
je
lcall
aas
jg
bound
pop
loopne
sbb
and
cmp
sbb
sbb
or
push
xchg
andl
jecxz
adc
cmp
xchg
add
adc
adc
cmpsb
or
mov
stc
incb
lahf
sub
xchg
xchg
mov
or
cmp
pop
mov
sbb
pop
notb
sti
ljmp
dec
js
mov
mov
mov
ljmp
dec
out
push
xchg
add
fimull
leave
inc
inc
imul
xchg
clc
sub
test
sub
xchg
jmp
das
xorb
lds
inc
xchg
daa
cmp
fcompl
jns
pop
ds
mov
xchg
dec
out
nop
test
sti
lea
iret
push
fs
mov
add
and
or
xor
lcall
push
pop
imull
or
sbb
aaa
repz
mov
sub
sahf
sbb
in
xor
bound
fisttps
pop
loop
clc
inc
mov
add
sub
mov
sbb
mov
and
lods
mov
mov
dec
sub
fs
lret
push
jp
insb
js
shll
jp
mov
push
dec
jne
xchg
dec
xor
jle
add
cwtl
fisubl
or
lret
lock
pop
pop
sti
stos
mov
adc
lock
das
jne
xor
sbb
pop
lret
pop
popa
xchg
add
mov
xchg
jge
mov
and
iret
adc
test
lret
and
sti
into
adc
inc
xchg
mov
sbb
pop
adc
mov
ja
push
or
stc
inc
sbb
xlat
sub
mov
mov
cmc
fs
flds
inc
dec
adc
roll
scas
inc
mov
push
aam
push
inc
xchg
dec
loop
push
cld
sub
adc
mov
stc
mov
hlt
xchg
push
out
pushf
in
les
and
jmp
in
xchg
test
jo
outsl
dec
bnd
jns
dec
lock
int
fwait
rcrl
jno
mov
cs
pop
push
lds
test
ret
out
pop
popa
mov
aam
mov
sub
cmp
add
add
or
shlb
xor
aam
rorl
out
push
punpckhwd
cmpl
jne
int
pop
addb
push
loop
push
mov
pop
mov
pop
mov
mov
adc
jge
stc
inc
dec
mov
gs
aad
filds
jmp
xchg
int3
push
or
or
or
xor
sbb
add
stc
cs
adc
fsin
jne
mov
mov
cmp
adc
popa
in
ds
jbe
rcrl
imul
fistl
sub
imul
test
mov
enter
jmp
xchg
cmc
loopne
xor
jnp
imul
sbb
insb
mov
jnp
cmc
sbb
fcmovu
sub
adc
mov
aas
shlb
js
jl
xchg
adc
fwait
jge
and
ja
mov
stc
mov
test
jmp
andb
jmp
cmpl
cmp
shll
das
mov
stos
mov
loopne
dec
xlat
dec
cmpb
mov
xchg
sbb
adc
insl
rol
mov
add
mov
and
push
bound
ffree
cmp
loopne
cmc
sbb
shl
dec
cmpsl
mov
lods
jl
cld
mov
lods
ret
cmp
mov
push
cmp
test
push
insl
sti
in
push
outsb
jae
push
sub
jg
test
fsubrs
dec
subl
cmp
sbb
movsb
xchg
pop
adc
fimull
aaa
mov
pusha
leave
push
cmp
pop
and
cltd
gs
dec
xor
jae
ss
lea
inc
xor
inc
add
loop
fwait
push
mov
xchg
inc
xchg
push
sub
int3
test
adc
jecxz
dec
sub
aaa
sbb
mov
arpl
nop
addr16
mov
push
jne
mov
movsb
or
cmpsb
mov
lcall
pop
das
mov
fnsave
xchg
ret
aad
mov
lcall
cmp
das
mov
cmp
shll
stos
sub
xor
loopne
jo
jnp
cmp
mov
das
sbb
push
fimull
clc
int
repz
js
jns
cmp
pop
out
imul
and
in
mov
cwtl
adcb
jno
lea
inc
ret
jp
nop
xor
popf
data16
daa
bound
jp
jle
sub
add
rclb
cmpsl
das
rclb
je
add
mov
adc
mov
or
xor
sub
js
fsubs
dec
jae
jge
adc
fidivl
lods
inc
leave
std
or
movsb
and
fcomi
xchg
push
push
iret
lock
mov
mov
daa
out
mov
andl
rclb
in
aaa
lds
push
sub
pop
mov
or
add
jne
mov
dec
pop
mov
int
push
dec
es
mov
out
ret
mov
fcom
rcrb
or
lock
mov
mov
cmp
ds
andl
push
mov
or
mov
popf
push
mov
xchg
add
icebp
add
sub
call
test
mov
mov
sub
shll
lea
cmp
cmpsl
stos
and
in
je
sub
es
mov
data16
fsubrl
mov
stos
lea
int3
dec
adc
addl
loope
adc
and
pop
bnd
sbb
iret
movsl
jle
sahf
in
dec
fwait
out
cmp
pop
or
xor
in
data16
mov
icebp
adc
push
dec
jbe
icebp
mov
test
jmp
push
popf
imul
pop
hlt
xor
aaa
std
cmp
inc
xlat
sub
pop
hlt
mov
mov
loope
out
cmc
push
mull
pop
std
inc
loopne
rcrl
enter
jmp
fmul
and
adc
test
adc
imul
xor
cmpsb
mov
xor
dec
gs
bound
psllw
imul
test
cmpsl
popf
cmpsl
adc
adc
or
pop
sbb
sub
or
repz
pushf
ljmp
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
mov
into
xchg
jp
ja
mov
fimuls
dec
test
in
mov
xchg
js
push
pusha
cli
pusha
inc
loopne
lret
in
jne
mov
rorb
sub
or
lcall
fwait
xor
lret
sbbb
jg
sbb
mov
push
or
cmpsb
movl
sub
out
and
out
ljmp
les
push
push
jecxz
pop
add
cmp
jmp
cmp
pop
adc
jl
jg
xor
xchg
in
aas
cmpsl
add
jmp
cli
adc
push
xchg
faddl
xlat
dec
cmpsb
fwait
inc
dec
int3
adc
inc
jno
mov
mov
gs
fsubrl
rolb
cmc
jg
inc
and
inc
mov
sbb
jmp
lods
ss
outsb
fcomps
sar
nop
fwait
popa
les
jae
mov
stc
mov
lret
dec
aas
scas
inc
adc
dec
mov
mov
mov
icebp
sbb
enterw
stos
in
in
sbbb
js
mov
push
cmp
outsl
adc
xor
inc
jb
xchg
xor
scas
aas
sbb
push
shl
and
in
js
in
ret
and
fcmovnu
sub
xor
sbb
lds
cmc
loope
mov
pop
movsb
lret
ljmp
cmp
jge
jle
sub
xchg
or
out
nop
cmp
test
stc
popa
rol
adc
jmp
fnstcw
sti
or
mov
out
rcl
popf
ss
int
and
xchg
out
mov
in
aas
pop
rdpmc
stos
xchg
xchg
es
mov
shll
lret
mov
lods
imul
push
outsl
adc
ss
push
aam
mov
mov
ret
jmp
xchg
clc
dec
arpl
cmp
fdivrp
jb
rorl
mov
push
sub
sar
lret
mov
les
mov
cwtl
push
popf
iret
mov
imul
mov
sbb
add
adc
mov
cmp
jg
sbb
popf
cmpsb
daa
cld
leave
xchg
cmp
dec
mov
mov
int
push
shrb
out
in
std
cs
and
jmp
push
jbe
xchg
sbb
fisubrs
sbb
cmp
xchg
dec
dec
and
mov
imul
enter
scas
cmp
sub
out
pop
pop
mov
in
rorb
xor
cmp
xchg
xor
scas
out
repnz
adc
sbb
sbb
fcmovnbe
and
xor
xor
dec
mov
out
movl
pop
xor
pop
dec
push
shlb
push
shll
pop
insl
xlat
fmul
mov
lcall
inc
arpl
lock
out
sti
cwtl
dec
hlt
dec
cmp
lods
testl
testb
or
hlt
mov
jl
repz
mov
ja
mov
scas
add
repz
push
mov
ja
cmp
adc
aas
jp
in
hlt
loopne
adc
or
inc
xchg
mov
sbb
adc
test
xor
pop
movsl
mov
test
add
or
xchg
push
jo
scas
and
cmp
gs
outsl
outsl
lcall
mov
jecxz
int3
pushl
rcrb
and
inc
ja
iretw
scas
fcmove
daa
out
outsl
jle
dec
hlt
adc
pusha
sbb
sbb
ret
adc
add
lahf
in
sbb
in
xchg
cs
mov
xchg
imul
mov
inc
mov
add
and
int
or
push
pop
rcpps
fiaddl
cmpsl
outsl
cltd
subb
arpl
cmpsb
int3
aas
mov
lds
inc
cmpsb
stc
mov
lahf
lock
insb
frstor
into
call
loopne
xchg
jp
insb
fsubrl
data16
dec
ss
or
ljmp
push
jge
pop
jecxz
psrlw
call
and
jecxz
dec
fstps
insl
into
xor
pushf
out
fisubs
jno
inc
dec
dec
cld
pop
std
sbb
scas
mov
or
jnp
lahf
xchg
xor
cmpsl
popf
sbbb
jg
jno
jge
push
and
xor
cmpsl
mov
inc
stos
std
sti
js
ret
scas
bound
and
sbb
hlt
mov
sub
arpl
sub
mov
adc
xchg
xor
das
subb
mov
mull
sub
pop
fldl
pop
jge
or
mov
nop
and
das
sub
jbe
movsb
mov
xor
outsl
test
shll
xor
inc
push
outsb
cli
dec
cmp
dec
adcl
push
idivl
sbb
pop
push
lret
movsb
je
clc
ret
testb
mov
int
in
inc
cmp
jno
jg
nop
movsl
mov
inc
jmp
ret
aad
insb
loop
sbb
hlt
in
sub
cmp
xchg
mov
xlat
adc
outsl
sbb
imul
pop
mov
adc
mov
loopne
dec
test
and
dec
inc
mov
dec
dec
outsl
outsb
ret
push
bound
in
or
cmp
lret
or
xor
jb
cmp
jno
xchg
jae
or
insb
pop
stos
repz
cwtl
iret
fwait
push
leave
push
pop
pop
loopne
cmpsb
movsbl
mov
mov
add
dec
add
and
xor
sbb
pushl
dec
xchg
or
sbb
pop
in
and
cmp
xchg
fs
ret
scas
je
dec
test
mov
dec
mov
scas
add
test
jno
shll
pop
mov
fcmovu
xchg
in
dec
in
xchg
xor
scas
dec
xor
out
mov
aaa
dec
xor
or
adc
push
sub
jle
std
jle
stos
push
pusha
mov
das
shl
inc
clc
jp
jae
cmpsb
les
stos
fxam
cmp
adc
mov
ds
aas
add
scas
or
imull
push
inc
xchg
lock
test
in
fsubs
add
aad
test
mov
or
push
xchg
jnp
push
ja
dec
inc
shrl
pop
jno
movsb
jo
cmp
cmp
adc
ret
les
pop
cmp
push
mov
add
not
xor
mov
adc
ja
mov
push
xor
or
xor
jns
aas
test
mov
insl
push
xorb
cs
xor
push
scas
sbb
ds
adc
add
jns
inc
stos
aad
and
xorb
pop
scas
arpl
jae
popa
and
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
enter
pusha
push
ja
dec
loope
pop
ljmp
inc
pop
or
popa
ja
rclb
pushf
push
push
jmp
mov
vmovd
int3
mov
inc
jne
sbb
jns
jbe
xor
mov
xchg
mov
fdivs
mov
scas
adc
aas
mov
mov
pop
jbe
push
enter
xor
pop
out
mov
cmp
or
jo
mov
pop
adc
jle
addb
jmp
cwtl
jge
testl
mov
jnp
stos
pop
cmp
push
ja
lock
sbb
fidivrl
mov
dec
mov
outsb
adc
movsb
outsl
inc
xchg
mov
jns
inc
inc
shll
add
out
pop
cmp
iret
pop
jb
push
outsl
jmp
mov
push
sub
sbb
xchg
adc
fcmovnu
jae
add
roll
sbbl
xor
or
xorl
pop
cld
insl
enter
and
cmp
push
adc
jge
pop
jb
mov
les
dec
add
popf
dec
gs
aas
mov
jnp
mov
xor
subb
cmp
sbb
stos
movsb
out
lret
xor
cmpsb
cli
xor
jbe
insb
loopne
mov
jge
cmpsb
mov
insl
dec
loope
add
adc
jg
adcl
push
and
popf
dec
leave
daa
sbb
in
jmp
sahf
std
xchg
mov
imul
jns
ljmp
sbb
cwtl
leave
int
movsl
sbb
xchg
arpl
sub
out
outsb
outsl
mov
adcb
mov
xchg
lock
pop
mov
popf
cld
mov
negl
cmp
shr
ret
push
cmp
xor
mov
ret
push
test
pop
mov
jae
or
xor
icebp
movsb
mov
je
ffree
lahf
jno
clc
adc
push
ljmp
fisubrl
mov
push
test
mov
lret
and
ds
dec
mov
mov
fwait
or
popf
js
pop
push
and
xchg
in
outsb
xchg
xor
outsb
shrl
ss
hlt
repnz
adc
icebp
dec
jle
mov
mov
popf
outsb
popa
inc
loopne
lea
shl
adc
sbb
fsubrs
cmp
into
dec
sub
cli
inc
or
sar
pop
lea
and
sbb
imul
mov
fidivl
push
or
adcl
xor
cmp
popf
je
jne
jecxz
aam
inc
pop
push
lret
dec
out
lahf
fwait
daa
sbb
aad
popl
es
dec
mov
nop
mov
mov
repz
dec
sbb
mov
sub
out
push
or
rcl
clc
add
pop
lds
inc
mov
leave
in
sub
mov
scas
leave
jle
gs
inc
loop
mov
lock
pop
fucomip
aam
ss
std
cmp
pop
daa
mov
fsubrl
mov
fiaddl
push
cwtl
repnz
cwtl
aam
mov
movsl
sbb
and
shll
jns
fimull
push
pop
jo
fs
in
dec
iret
mov
fistpll
add
test
clc
out
push
xchg
or
daa
shrl
add
mov
xchg
clc
addb
loopne
loop
jns
xchg
fstpt
pop
adc
int3
mov
sub
ss
inc
push
popf
or
push
cmpsb
movsl
add
jae
cmp
rcrb
push
push
or
lock
pop
sbb
mov
mov
inc
stc
mov
orl
mov
cmp
scas
push
adc
sbb
adc
mov
cmpsl
insl
in
es
dec
cmp
jno
push
fwait
add
fstl
adc
out
pop
xchg
inc
loop
cltd
fstl
pop
icebp
jno
js
adc
inc
repnz
arpl
dec
aad
add
mov
test
mov
cwtl
push
rclb
xchg
sarb
cmp
int3
jecxz
jge
outsb
leave
test
inc
sbb
aaa
int
push
xor
or
xor
jns
mov
mov
leave
push
jmp
lock
iret
mov
aaa
adc
shl
fcoml
icebp
mov
inc
nop
jmp
mov
orl
dec
sub
mov
out
xchg
std
ja
xchg
dec
add
mov
push
iret
cmpl
fwait
jmp
inc
mov
out
mov
pop
stos
pop
mov
in
shrl
lock
das
nop
sbb
data16
insl
pushf
push
std
push
jo
add
xchg
loopne
cmpsl
int3
adc
shl
push
test
inc
mov
loop
jo
fs
data16
cmpsl
std
pop
xorb
jae
push
inc
xor
or
mov
pop
aad
je
xchg
outsb
out
les
out
xlat
lret
rcl
fiaddl
stos
popf
add
sub
movsb
adc
mov
sahf
js
mov
mov
adc
cli
imul
gs
insl
call
xorb
or
cmpsl
push
daa
lds
and
movsl
cmpsl
and
mov
lock
fyl2xp1
adc
call
out
fbld
je
or
add
push
mov
adc
push
scas
std
push
test
inc
pop
aad
cwtl
stos
fs
push
imul
jns
adcl
test
jno
cmpsb
mov
xchg
ds
lea
iret
push
aaa
lock
jbe
xchg
insb
iret
or
nop
sub
jne
ficomps
loopne
jp
lcall
xchg
lcall
outsl
daa
inc
mov
out
ds
sti
cwtl
in
jo
pushl
clc
into
sbb
int3
add
aam
add
adc
cmp
lods
or
cli
adc
cmpb
outsb
push
xchg
mov
test
mov
orb
inc
inc
out
dec
sub
mov
and
push
fldl
dec
cmp
lahf
sub
xchg
xchg
dec
xor
push
sbb
cmp
cmpsw
in
mov
jnp
xor
in
mov
cmp
pop
mov
arpl
push
jno
popf
inc
mov
aas
mov
sbb
aaa
outsb
push
repnz
rcrl
sub
sub
add
aaa
call
xchg
lods
cmpsl
inc
scas
and
sub
mov
add
stos
lods
mov
loop
xchg
movsl
mov
pop
pusha
and
ja
pop
xor
std
jmp
lods
cltd
addb
scas
fdivrp
bound
imul
xchg
sbb
xlat
sarl
adc
xor
mov
sbb
pop
mov
leave
fcos
ss
jae
int
sbb
mov
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
out
pop
pusha
sbb
ljmp
jmp
sar
xchg
xchg
jge
in
sbb
jl
xchg
and
fldcw
ror
mov
cmp
inc
xor
in
gs
stc
inc
jb
or
xlat
inc
adc
xchg
adc
fs
lret
loopne
xchg
jo
aas
jge
js
pop
inc
mov
shll
xchg
mov
daa
pop
xchg
mov
test
insl
mov
adc
dec
push
sbbb
fildl
mov
addr16
loope
xor
imul
loop
pop
aaa
pop
aas
loopne
out
movsl
mov
jp
xor
pop
inc
sbb
jbe
in
stc
sub
and
mov
mov
push
cmpsl
into
add
pop
outsb
test
and
mov
xchg
hlt
aas
xor
add
jno
subl
dec
pop
int3
shll
shl
mov
lcall
xor
xor
mov
push
stos
stos
lcall
jmp
mov
dec
testl
add
or
mov
adc
je
dec
clc
out
out
sub
jmp
repnz
push
cmp
jbe
outsl
rolb
pop
pop
cwtl
pop
jg
cmc
outsl
jns
inc
jo
out
jecxz
nop
mov
jae
cmpb
insl
xor
xchg
push
fadd
xchg
inc
pop
dec
pusha
sbb
ficompl
aas
pushf
cltd
call
mov
imull
je
stc
cmp
stos
daa
scas
call
stos
cli
jne
enter
or
mov
popf
xchg
cli
mov
in
inc
dec
jg
cmp
add
loope
js
xchg
cmovg
sbb
cmp
lcall
repnz
mov
sar
movl
or
cmp
inc
in
dec
cmp
jnp
fsubl
sbb
sbb
nop
xchg
dec
mov
xor
inc
push
pop
mov
cmp
or
mov
clc
mov
xchg
push
repz
or
ljmp
jl
fadd
ret
outsb
daa
in
mov
add
mov
xchg
xchg
jecxz
inc
adcl
xlat
push
mov
outsb
ja
inc
mov
sub
pushf
jg
dec
cmc
in
cmp
push
ljmp
cmpsl
dec
cld
test
sbb
and
les
loopne
cmc
mov
xor
out
and
mov
dec
fsubs
pusha
cmp
sub
dec
std
add
out
or
mov
sub
jnp
or
xchg
or
or
movsb
mov
test
xor
aaa
in
fistpl
mov
inc
scas
mov
add
rcrl
aaa
mov
idiv
mov
aas
stos
shll
xchg
cmpsb
pop
jmp
pop
pop
mov
data16
sbb
adc
mov
mov
xchg
std
jo
or
out
test
adc
push
sbb
mov
and
push
mov
lahf
outsb
dec
les
repnz
inc
stos
mov
jp
pop
jg
out
add
lods
lea
and
xchg
pop
je
or
inc
adc
dec
divl
mov
into
daa
mov
add
pop
push
decb
pop
movsb
or
push
orb
push
fadds
pop
clc
dec
cli
and
mov
push
push
js
shrb
inc
push
ret
in
and
mov
jmp
aas
jecxz
xchg
mov
lahf
mov
pop
insl
inc
lock
push
xchg
xor
jmp
stc
cld
icebp
and
dec
adc
pop
xchg
dec
push
jb
jge
daa
mov
dec
shll
mov
inc
pop
nop
inc
xchg
xchg
rcr
sbb
adc
dec
jae
adc
lret
jae
test
fstl
xchg
lret
push
jg
jge
shlb
sub
jno
jbe
movsl
add
loop
cmp
sub
shlb
mov
loopne
jl
mov
dec
lods
or
xchg
cmp
cmp
rcrb
int3
and
cmp
inc
enter
fcoms
out
mov
out
ljmp
inc
inc
pop
and
clts
and
sub
xchg
sub
into
cmp
repz
es
xchg
adc
sti
push
fisttpll
addb
mov
test
je
leave
aam
pop
test
mov
xchg
mov
mov
loop
mov
mov
scas
stos
jg
shlb
add
repnz
ss
push
cmpsb
jne
icebp
in
mov
das
and
scas
xor
add
jno
ljmp
dec
ret
jno
xor
or
dec
jp
xchg
sbb
pop
push
mov
jne
sub
arpl
xchg
stos
fs
fildll
jo,pt
ljmp
arpl
sbb
daa
neg
ljmp
jle
dec
nop
fmull
cmp
xchg
mov
mov
push
or
dec
and
call
xchg
or
pop
movsb
js
hlt
mov
inc
add
mov
test
cmp
fucomi
pop
mov
inc
cmpsb
stos
jg
xor
add
cmp
push
js
xchg
mov
leave
jl
mov
out
xchg
scas
inc
jno
aad
sbb
push
push
outsl
in
ds
loop
fiadds
sub
dec
rcrb
rol
add
insl
arpl
and
fstps
jle
xor
sbb
incl
lds
jecxz
cmp
sub
inc
lock
arpl
out
adc
jge
jle
aaa
fs
push
lods
in
rorl
pop
in
mov
js
pop
popa
aad
into
loope
jo
mov
daa
mov
inc
data16
popf
int3
in
out
add
loope
fisttpll
push
inc
in
stos
cwtl
pop
xor
and
movsl
mov
push
test
gs
insl
ret
xchg
rcrl
xlat
jae
test
xchg
pop
fmuls
je
fimuls
inc
icebp
jecxz
cwtl
xlat
lret
popa
movsl
mov
push
push
mov
push
iret
jo
into
dec
shrl
xchg
add
mov
and
std
call
jle
jne
pop
into
pop
mov
shlb
stc
in
mov
cmp
addr16
dec
adc
shrl
mov
cmp
pushf
mov
inc
pop
lahf
or
arpl
mov
inc
mov
imul
call
dec
int3
sbb
mov
fdivrl
mov
mov
mov
lcall
mov
pusha
pop
sbb
sahf
fcoms
inc
fwait
xor
enter
sarl
jmp
lahf
inc
cwtl
out
loope
cld
jp
repz
push
jnp
xchg
mov
hlt
bound
lds
pop
inc
push
xor
stc
add
daa
or
sbb
and
sbb
ret
xchg
fwait
push
cmp
cmp
ljmp
sbb
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
mov
push
outsl
dec
ja
sub
dec
and
leave
leave
xchg
fisubrs
call
and
sub
mov
loop
mov
cli
adc
iret
jge
mov
jae
dec
xchg
mov
stos
out
fs
out
push
ja
push
push
adc
and
mov
sahf
jge
jmp
jecxz
lret
push
scas
or
fisttpll
pop
insb
push
mov
mov
cmp
lret
xchg
mov
addr16
insl
inc
mov
jmp
loop
mov
js
pop
movaps
add
test
mulb
push
mov
inc
jmp
pop
mov
cli
ret
inc
xchg
in
shlb
push
mov
or
out
and
addb
lock
aam
fs
cwtl
and
xlat
test
cwtl
cwtl
arpl
or
mov
imul
mov
and
fisubs
pop
mov
xorl
xor
cmp
aam
sub
dec
lods
push
into
mov
pop
cmpsb
push
xlat
or
pop
loopne
and
xchg
lds
mov
lods
jb
hlt
pop
aam
adc
and
pop
je
dec
insb
xchg
cmp
js
cmp
or
mov
mov
mov
add
or
pop
mov
aam
cmc
mov
pop
repz
mov
in
inc
push
pushf
je
js
xchg
sub
jp
mov
push
mov
pop
gs
jns
jno
add
cmpsb
adc
daa
push
es
fdivl
sbb
aam
outsl
add
inc
xorb
jne
imul
jg
push
add
xor
loopne
out
pop
sbb
mov
movsb
jl
loope
inc
clc
push
sahf
push
lods
or
cmc
xlat
pop
jp
xchg
xlat
inc
jae
mov
popf
push
ja
dec
xor
addr16
lods
insl
mov
jecxz
pop
repnz
jl
adc
add
sub
fwait
mov
movsl
cmp
pop
xchg
add
cmp
subb
scas
adc
addr16
or
mov
mov
shrl
inc
in
addr16
xor
push
in
jp
mov
das
ljmp
mov
mov
fnstcw
ds
push
addr16
mov
test
fidivs
cmpsb
jg
push
adc
data16
adc
push
arpl
pop
push
scas
push
and
pop
cli
jge
sub
sub
loop
jb
sahf
mov
inc
push
cmc
sbb
push
lods
mov
xchg
jno
adc
ds
inc
clts
std
ficoml
push
incl
lds
xor
mov
push
cmp
ja
shll
rcll
pop
pop
adc
pop
lods
js
stos
cli
jnp
dec
outsb
inc
lret
iret
xorl
gs
xchg
xor
cli
inc
flds
cli
mov
leave
insl
mov
mov
mov
subb
mov
adc
dec
rcr
mov
das
imul
test
aad
mov
pop
jnp
iret
adc
mov
imul
push
loop
nop
inc
mov
fistpll
mov
jg
flds
js
aad
sbb
xor
xchg
mov
push
in
ret
pushf
jns
mov
fidivrs
fdivl
out
dec
inc
cmp
add
cwtl
dec
or
mov
into
or
jno
pop
leave
in
push
inc
mov
data16
or
lahf
or
stos
outsl
and
xor
daa
lcall
and
jle
lret
pop
xchg
in
push
lds
jmp
enter
pop
xlat
jbe
push
adc
sub
nop
mov
lret
mov
adc
in
cwtl
push
scas
or
sub
int3
push
movsl
mov
stos
aaa
repnz
mov
add
cltd
fbstp
sbb
rcr
inc
xorl
mov
mov
cmp
je
xlat
sub
mov
ljmp
enter
lahf
daa
sbb
cmpsb
iret
sahf
lret
mov
pusha
cmp
cs
neg
dec
sub
ret
bound
sbb
fidivl
cmp
loope
repnz
inc
cmp
iret
scas
xor
std
or
push
test
stos
aas
jns
ja
in
in
dec
mov
daa
inc
scas
push
inc
daa
and
ljmp
arpl
inc
jle
xor
pop
adc
dec
les
cld
xorb
out
ds
daa
pop
cmp
insb
cmp
jns
inc
stc
push
in
inc
scas
cli
inc
sub
scas
xchg
mov
sbbl
test
les
arpl
int
addb
ret
repnz
inc
fidivrl
push
lret
andl
ss
xor
ss
mov
pop
jb
xchg
xchg
clc
pop
sahf
cmpsl
lret
dec
cmpb
outsb
mov
sub
or
lods
jno
cmp
gs
sub
and
bound
mov
addl
sub
mov
imul
xor
and
loopne
sub
push
xchg
push
outsl
das
cmp
pop
push
je
pop
add
idivl
not
insb
loope
fadds
inc
pop
outsl
je
scas
int
pop
jbe
cld
enter
je
push
ss
sub
pop
add
sbb
rorl
xchg
push
push
xorb
mov
push
add
xor
sub
out
xchg
and
loope
mov
cld
cmpsl
cmpsb
pop
shrb
jmp
mov
xor
add
jo
mov
inc
enter
push
jg
aaa
xor
inc
loopne
dec
push
adcb
lfs
insb
aas
xchg
ret
mov
repz
or
lret
inc
and
int
insl
mov
int
cmpsb
addr16
lahf
mov
loop
jmp
mov
sub
sub
add
mov
out
push
or
insl
dec
or
loopne
ret
jae
loopne
mov
shrb
and
iret
incl
add
out
xchg
cmpsl
leave
negb
mov
rcl
push
jl
inc
sbb
sarl
push
in
cwtl
ss
lods
int3
push
cmp
fcoms
ds
cli
dec
and
movsl
xlat
pusha
dec
pop
xchg
cmp
add
adc
int
jo
sub
jae
sub
cmp
or
jecxz
cli
aam
mov
adc
faddl
sub
push
cmp
addr16
scas
mov
cwtl
mov
jecxz
inc
sub
xor
std
pop
pop
and
push
adc
or
aas
jnp
jb
pop
test
and
addl
fdivl
sarl
push
push
int
push
ret
es
mov
lock
xchg
xchg
call
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
inc
jne
mov
xchg
xchg
mov
mov
scas
mov
mov
jb
fwait
rorl
jge
pop
inc
cmp
xchg
sbb
imul
xchg
xchg
nop
arpl
in
sbbb
nop
pop
lods
xchg
pop
je
jmp
loope
mov
sbb
inc
cmp
or
scas
mov
into
mov
andb
and
call
cmp
and
mov
icebp
inc
gs
push
scas
mov
adc
add
out
mov
ds
dec
inc
adc
cmpsl
sbb
push
cmpsl
loope
je
ljmp
push
push
jno
jmp
stos
loopne
gs
push
test
dec
out
dec
sub
xor
fdivrl
push
pop
push
inc
add
fistpll
outsl
dec
loope
add
lea
add
pop
sbb
ret
shll
cmp
pop
test
loop
pusha
mov
arpl
adc
movsb
sahf
fsubl
lret
add
push
jecxz
jo
repz
sbb
scas
and
arpl
scas
dec
mov
faddl
or
ficoml
dec
dec
cmpsl
adc
lcall
sbb
stos
add
xor
ret
test
fwait
ljmp
lods
cwtl
sub
popf
jo
lahf
mov
je
jo
lods
hlt
rol
jl
daa
xor
and
jnp
les
fimuls
loop
jl
add
pop
add
mov
aam
pushf
xor
jle
pop
inc
xor
jno
sbb
jb
xor
mov
cmp
cmpl
and
sbb
rol
mov
adc
aaa
sub
push
in
icebp
daa
push
sub
insb
popf
shll
adc
mov
pop
stos
inc
arpl
fnsave
lcall
fwait
mov
xor
mov
xchg
push
xchg
jns
jbe
aaa
ljmp
mov
lea
daa
lret
mov
adc
aam
mov
or
xchg
pop
cmc
push
pop
fmuls
out
lods
je
cmp
js
xchg
mov
mov
outsl
fcompl
dec
aam
add
mov
shlb
mov
push
xchg
hlt
out
fbstp
pop
test
les
andl
adc
mov
jl
out
sbb
jns
xor
cmc
rclb
lahf
mov
pop
and
je
out
sarl
stos
orl
pop
dec
out
test
call
xchg
sti
jecxz
pop
aam
sub
fistpl
lock
jg
sbb
add
push
adc
imul
insl
pop
insl
mov
push
sarb
lods
xchg
lret
in
in
push
adc
mov
xchg
or
in
iret
xchg
cmpsl
movsb
xchg
jno
insb
inc
sbb
sbb
fildl
arpl
mov
mov
lahf
push
gs
mov
lahf
gs
and
test
stc
pop
mov
das
and
jae
inc
hlt
pusha
fwait
push
adc
mov
movsl
inc
fnstcw
aaa
imul
cmp
push
stc
or
es
mov
push
mov
ror
push
test
pop
sub
push
scas
or
sbbl
insb
rcll
arpl
jl
cmp
les
scas
cmp
lock
leave
scas
out
xchg
ret
cmc
and
pop
sbb
and
mov
jmp
stc
ret
test
int
mov
lds
sub
shl
mov
nop
push
xchg
sti
rorl
and
divl
jnp
jp
outsb
add
jmp
mov
scas
out
fdivl
aad
jb
add
xchg
inc
movsb
adc
push
pop
cltd
orb
ret
sbb
xor
adc
push
add
jge
mov
lds
mov
fstps
mov
cmp
sti
mov
fucomp
cwtl
sbb
push
es
inc
in
loope
mov
add
out
test
cmp
or
sub
inc
xacquire
jle
rclb
jge
cmpsl
xorb
lock
pop
or
add
mov
mov
lret
repnz
loope
push
movsb
imul
inc
sahf
or
add
mov
jge
cmpsb
addl
or
les
test
das
fmull
hlt
lods
or
inc
or
push
sbb
aaa
sbb
lret
fs
push
jg
int
cld
fsubr
dec
movsl
hlt
test
add
es
inc
jecxz
std
fdivr
ljmp
dec
iret
push
sub
fbstp
dec
push
adc
xchg
lcall
pop
sbb
sbb
loope
addr16
arpl
mov
aaa
repz
adc
jne
pop
test
inc
das
mov
rol
adc
shlb
cmp
push
sbb
jo
push
je
insb
xor
mov
lret
stc
jnp
lock
dec
in
out
notl
mov
lods
mov
mov
push
sbb
pop
stc
xor
sbb
mov
pop
xchg
jno
out
out
bound
sarl
pop
dec
sbb
and
hlt
jbe
xchg
sub
fistpll
pop
sbb
rcrl
xchg
shrb
icebp
add
or
dec
loopne
das
popa
mov
stc
sahf
inc
fcoms
mov
jnp
fwait
lret
andl
xor
push
es
test
mov
jo
lret
xor
test
mov
dec
scas
scas
in
cmp
mov
jg
stos
ljmp
inc
leave
movsl
and
fsubs
ret
out
inc
outsl
pop
cmpsb
lret
jo
repnz
xchg
addl
mov
and
aad
in
mov
sahf
push
outsl
jno
bound
jns
jbe
mov
inc
push
jnp
adc
call
hlt
pop
push
jns
outsb
mov
cmp
push
sbb
pop
icebp
ds
loopne
mov
cmp
ret
int3
and
adc
or
mov
cmp
cmp
mov
lahf
ret
std
stos
fstpl
dec
movsb
pop
loopne
inc
add
aad
ficompl
xchg
fs
push
popa
shl
mov
stos
aas
dec
icebp
movsb
int
adc
cmp
jnp
xor
pusha
cmp
imul
xor
push
push
scas
movsl
lret
lods
and
sahf
mov
push
push
std
jmp
sbbb
inc
out
add
icebp
or
add
data16
add
add
addr16
jle
js
jne
sahf
pop
outsb
cmpsl
cmpsb
push
sbb
adc
int3
cmp
dec
mov
cs
push
jp
std
lret
and
add
out
mov
mov
pop
loop
or
mov
pop
orl
loop
in
mov
into
mov
std
rorl
pop
mov
daa
push
dec
mov
mov
scas
sub
std
mov
dec
aam
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
fsubrs
subb
ja
fs
fisttps
mov
pop
fcompl
pop
mov
adc
fs
push
xor
adc
aad
sbb
adc
or
fwait
aad
incl
fisttpll
loope
hlt
stos
cmp
rolb
mov
and
jecxz,pt
xorb
add
mov
inc
push
int3
mov
inc
sub
das
mov
xor
in
pop
insb
dec
addl
inc
push
cmp
pcmpeqb
push
test
pop
ret
arpl
daa
mov
xchg
or
pop
mov
xor
push
pop
or
cli
mov
xor
xchg
xchg
sub
push
ljmp
sub
and
fisubl
fwait
in
lcall
in
pusha
bound
or
pop
add
pushl
cmp
aaa
dec
jle
xor
pop
inc
mov
jle
push
pop
leave
mov
mov
dec
cmpsl
in
sub
je
xchg
mov
sahf
in
test
cmp
inc
sub
repz
popa
sti
add
xor
dec
pop
sub
test
mov
pusha
xor
fs
test
js
lcall
iret
jge
test
sub
movsb
pusha
xor
fmuls
pop
iret
and
add
jo
sub
bound
cli
sbb
movsl
mov
mov
andb
cld
pop
mov
mov
loopne
cmpsl
pop
inc
pop
push
addr16
test
mov
out
subl
cmp
adc
and
sbb
pop
loopne
scas
push
cltd
in
test
test
adc
fs
sub
and
inc
xor
mov
pop
jl
out
adc
mov
jl
push
add
pop
rcr
push
or
in
jne
or
sahf
lock
push
mov
xchg
xor
in
cmp
daa
add
mov
jle
mov
cmp
insl
lea
std
dec
ret
jle
dec
mov
movsb
mov
imul
pushf
mov
adc
mov
dec
aas
fadds
sub
scas
inc
sub
adc
subb
xchg
sub
loopne
jb
mov
lahf
cmc
sbb
mov
lea
int3
into
push
repz
test
out
push
repz
cwtl
fists
mov
aas
jmp
pop
xchg
loope
cmpsl
int
ds
cmpsb
cmc
push
jle
dec
call
in
bsr
negl
adc
push
pop
push
ja
xchg
outsb
dec
into
cmpsl
testb
cmp
icebp
adcl
adc
cwtl
in
or
stos
daa
btc
pop
jbe
or
cmp
xor
clc
ret
daa
xchg
stos
gs
loope
incb
fwait
jno
mov
dec
inc
sub
mov
je
and
push
mov
push
push
pop
aam
lcall
enter
repz
mov
jle
xor
imul
testl
xor
jns
bnd
movsb
or
mov
lret
imulb
out
mov
push
mov
in
test
shl
jne
push
shr
jp
and
jge
push
sbb
or
aas
aaa
icebp
and
cmp
mov
mov
mov
jg
js
dec
iret
sub
sti
jno
add
sbb
aam
enter
xorl
ja
mov
orb
jno
stos
adc
lea
jl
mov
and
cmpsl
stos
push
and
rclb
dec
xor
lcall
jns
jp
fwait
iret
mov
fsubrl
movsl
and
mov
mov
dec
mov
outsl
push
inc
and
xchg
jp
scas
mov
test
cmp
adc
cmp
mov
pushl
rcrl
mov
add
test
arpl
ja
cmp
push
mov
aaa
pop
in
xchg
xchg
pop
lock
stos
mov
cmp
mov
aaa
xchg
push
and
mov
sbb
dec
dec
test
inc
mov
dec
pop
jl
stc
rcll
add
inc
stos
aam
dec
mov
lods
lock
push
inc
xor
movsb
mov
and
repz
mov
dec
jno
test
cmp
in
jo
and
or
nop
xchg
out
ret
pop
inc
sbb
dec
push
fsts
pop
insb
pop
jbe
dec
fmuls
cmp
push
or
int
jns
int3
pop
xchg
xchg
push
xchg
xor
sahf
lahf
mov
outsb
jecxz
jae
adc
mov
out
aad
dec
mov
mov
mov
mov
out
inc
rclb
mov
or
in
outsl
test
dec
xor
jl
call
ds
dec
cmp
cmp
jmp
addr16
sbb
orl
outsb
nop
out
arpl
imull
out
sub
rcrl
dec
xchg
push
push
cmpsb
mov
fcmovne
xchg
pop
shrb
rolb
out
lock
notb
inc
sbb
inc
pop
das
js
mov
data16
cs
negb
or
inc
icebp
cmp
xchg
out
flds
dec
out
push
and
xorl
sbb
dec
xlat
daa
repz
leave
or
into
cmp
mulb
mov
call
scas
ljmp
loop
dec
pop
mov
outsb
test
sub
stos
loope
mov
push
jl
mov
cmp
adc
je
out
jne
movsb
pusha
mov
xchg
shlb
mov
sti
addr16
rcll
js
cmp
sahf
mov
jns
jbe
sbb
repz
aaa
jecxz
es
call
stos
jle
mov
mov
add
int3
mov
adc
and
push
insb
cmpsl
ffree
in
mulb
mov
add
push
push
lea
lret
mov
adc
mov
mov
push
mov
jp
inc
adc
and
outsb
pop
in
shrl
clc
mov
cmpsl
inc
std
fstl
lcall
repnz
lods
or
mov
pop
sub
nop
mov
or
clc
sub
mov
inc
cmp
push
insl
push
lock
test
mov
adc
enter
jbe
test
lahf
inc
mov
stos
mov
fdivs
sub
or
jg
or
push
or
pop
nop
into
stos
jbe
mov
imul
iret
add
test
into
or
push
insl
adc
dec
xor
mov
pop
ja
push
pop
adc
sub
xor
out
sbb
jge
rorb
xchg
aaa
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
movb
mov
sbb
ja
shll
movsl
addr16
adc
dec
mov
mov
dec
ret
or
fcompl
sbb
cmpsl
pop
sbb
cli
bound
pop
xchg
decb
repnz
mov
imul
jo
push
sbb
xchg
imulb
fistl
xchg
mulb
cmp
and
shl
arpl
loopne
mov
aad
dec
sbb
ja
adc
xor
sbb
adc
pushf
adc
aaa
shl
adc
inc
mov
push
xchg
and
push
push
cltd
push
mov
sar
or
pop
mov
outsb
out
nop
rclb
test
jb
inc
shr
adc
xchg
jg
ljmp
shr
popl
and
pop
call
dec
cmp
jne
xor
cmp
cmp
ror
repz
ds
jno
dec
dec
cmp
fdivrs
sbb
int3
movsl
mov
stos
loopne
fldenv
stc
cmp
outsb
jne
jp
dec
sub
sbb
mov
xor
in
mov
and
mov
dec
cwtl
negl
add
pusha
mov
inc
push
push
icebp
inc
fiadds
xchg
hlt
jl
sub
xchg
sbb
decb
mov
into
add
jbe
sub
in
inc
dec
pop
jo
pop
loopne
loopne
std
mov
std
sahf
in
ljmp
nop
je
jge
pop
push
pop
push
and
aas
daa
ret
xor
scas
pop
cmpl
scas
stc
sti
xlat
lret
ljmp
adc
loope
pop
stc
mov
and
stos
bound
je
test
int3
je
idivb
fcmovu
mov
sahf
mov
icebp
dec
fdivs
cld
je
pop
inc
cmc
arpl
aaa
fstpt
xor
mov
leave
insl
jl
fnstsw
pop
hlt
jbe
mov
and
xchg
jno
adc
pop
mov
fisubl
sub
arpl
and
pop
xor
add
pop
lea
mov
adc
out
lods
pop
inc
fisubrl
lcall
stc
leave
cs
dec
add
add
jge
sub
mov
orl
scas
jge
xor
fstpt
test
idivl
pushf
sub
in
xchg
in
es
pusha
sub
faddl
or
xchg
push
dec
rolb
sbb
imul
in
loop
lods
stos
or
and
mov
and
ja
test
loope
cmpsb
addr16
push
xchg
xchg
mov
mov
gs
sub
icebp
inc
clc
aad
fldenv
in
adc
add
or
add
dec
push
jmp
pop
and
mov
inc
mov
dec
mov
das
pop
and
or
dec
in
sub
xchg
mov
pop
rolb
imul
cmc
and
xchg
in
push
les
and
cmp
adc
inc
mov
addr16
fstps
idivb
and
xchg
test
not
imul
or
push
cwtl
out
mov
push
and
push
cmp
add
cmp
cmc
push
mov
xchg
mov
and
and
mov
cmp
push
fiaddl
jb
mov
inc
mov
sbb
xor
inc
sti
iret
and
push
jmp
push
outsb
pop
mov
lds
pop
shrl
mov
push
mov
repz
icebp
mov
sbb
dec
cmp
popf
repz
add
adc
jp
aam
movsl
ss
inc
inc
xchg
mov
sub
in
cmc
stos
push
movl
std
aaa
pop
xor
xor
cmpsb
push
stos
dec
jb
fldt
pop
div
lea
out
mov
ljmp
test
leave
aam
and
sbb
aaa
mov
out
xor
pop
pop
in
ljmp
mov
mov
clc
or
mov
fucomi
jecxz
push
sbb
mov
popa
xchg
in
or
sub
and
pop
xchg
and
mov
inc
je
sbbb
rol
dec
mov
add
dec
or
lods
xchg
sub
sub
sub
sti
iret
mov
arpl
mov
push
inc
push
out
hlt
mov
push
cmpsl
gs
popf
mov
rcrb
mov
je
ret
mul
push
mov
cmc
lods
push
insb
lea
dec
test
xor
mov
pop
inc
stos
and
add
push
mov
hlt
nop
rcll
push
insl
mov
movsb
insl
jnp
push
sub
pop
pop
pop
aad
cmpl
cmpsb
aas
fstl
jb
imul
add
ret
mov
pop
roll
pop
adc
xor
lock
out
out
jnp
les
xchg
fdivl
mov
mov
sysexit
popf
and
bound
pop
cmp
adc
imul
add
mov
sahf
in
lea
pop
jbe
dec
and
add
dec
inc
push
std
daa
in
test
sbb
and
nop
lds
lret
pop
xchg
jb
mov
popa
sub
and
add
stos
sbb
clc
mov
call
lret
loopne
inc
repz
aaa
sbb
mov
jle
neg
jle
add
prefetch
xor
or
cmp
cmpsl
loope
mov
ret
xchg
rcr
dec
push
notb
mov
in
mov
dec
dec
es
xor
or
mov
fisubl
jo
dec
fiadds
lret
sub
add
pop
in
test
push
xor
fcmovb
xchg
fpatan
ds
jne
aaa
int
fwait
into
in
cmp
adc
loop
lret
xchg
pop
fistpl
sbb
dec
inc
dec
jmp
inc
movsl
imul
dec
push
stos
or
dec
mov
icebp
cmpsl
lds
arpl
sti
fcmovne
sub
test
sti
and
fdiv
pop
pop
xor
sub
lret
in
test
pop
cltd
pop
jge
loopne
xchg
xor
dec
xor
hlt
ds
ret
dec
into
aad
pop
xchg
or
sub
in
pop
jge
sahf
inc
xor
arpl
push
jnp
lret
and
xor
sbbl
xor
cmpsb
sub
push
lods
fisttps
cmp
mov
fistps
pop
int
mov
jb
dec
push
push
jg
add
bound
inc
leave
xchg
inc
test
adc
aaa
sub
pop
xor
mov
push
pushf
loopne
int
cs
in
cmp
push
jno
dec
sbb
add
jp
bound
or
ficoml
mov
cmpsl
daa
loopne
inc
mov
mov
and
test
xchg
insl
inc
and
inc
loop
adc
sahf
inc
jp
mov
outsl
loopne
jnp
fcoml
cmp
xor
lcall
xor
cltd
leave
sbb
rcll
lahf
xor
or
addl
shl
imul
jmp
add
or
or
adc
mov
add
jne
or
hlt
jge
pop
imul
repz
sub
fstl
jl
jg
ds
jle
mov
xchg
mov
push
xchg
pushf
les
mov
lcall
in
in
cld
add
into
bound
inc
xchg
mov
loop
add
les
mov
popf
imull
sbb
lods
jno
sbb
pop
stos
or
cmp
mov
xor
imul
push
add
outsb
adc
xchg
repz
fdivl
cmp
ficoml
dec
jle
std
movsb
aam
and
lods
cmpl
lcall
iret
push
scas
and
fstpt
into
mov
arpl
add
leave
insl
cmpsb
inc
lea
jge
hlt
pop
inc
push
jge
sub
scas
mov
dec
data16
lcall
mov
out
xor
cmp
jne
pop
xchg
enter
jle
call
xor
outsl
or
adc
push
dec
inc
pop
and
jp
das
cli
dec
cmpsb
shrl
mov
xor
sbb
and
stc
inc
js
cmp
inc
test
or
add
sbb
loopne
add
push
sti
push
lahf
lahf
sahf
and
lcall
cli
pushf
pop
adc
hlt
shrb
push
popa
mov
and
xchg
dec
push
cmp
pop
xor
push
idivb
test
movsl
imul
iret
call
test
loope
pop
out
subl
mull
rcrl
mov
std
sahf
cs
icebp
xlat
cld
mov
sub
loop
adc
inc
es
fldl
cmpsl
mov
shrb
rorl
adc
ret
jns
or
inc
mov
stos
xchg
stos
inc
sbb
in
cmpsl
xor
loop
ss
shrb
hlt
aaa
mov
ficompl
cwtl
aam
mov
mov
xchg
aaa
xor
ret
rorl
mov
sub
mov
aam
xchg
xor
stc
fnstsw
lods
xchg
cmp
jg
cltd
cs
push
sub
stos
dec
mov
sti
or
jns
movsb
call
pop
dec
rclb
sbb
call
push
sarb
test
or
lods
jecxz
int
adc
imul
mov
dec
inc
cmpsl
shl
dec
in
orb
roll
in
subl
add
adcb
test
fbstp
pop
aaa
inc
fmull
das
sbb
into
jg
mov
js
pop
or
aam
hlt
es
inc
sub
rcrl
and
push
cmp
push
inc
daa
decl
bnd
loopne
jl
icebp
or
sbb
xor
popa
call
inc
pop
mov
pop
rcrb
aam
stc
mov
add
cwtl
ss
jg
and
repz
das
lcall
ficompl
mov
into
jg
mov
dec
xor
das
xorl
xchg
add
clc
sbb
and
incb
sub
insl
ror
into
push
mov
adc
pop
movsb
adc
rolb
in
jnp
repz
jbe
pop
pop
repz
daa
js
jns
mov
sbb
fistps
cmp
dec
andb
pop
popa
or
cltd
hlt
ljmp
adc
pop
mov
ljmp
sbb
andl
scas
in
cld
scas
sbb
dec
mov
imul
dec
mov
xchg
mov
xchg
push
in
cmp
test
fildll
outsl
outsl
pop
mov
push
add
inc
enter
js
lds
add
mov
jnp
dec
mov
jo
loope
lret
pop
pushf
mov
aas
addr16
fildl
mov
or
push
movsb
jl
aad
leave
jge
sbb
push
sahf
adc
and
xor
push
not
cmp
lahf
xchg
mov
mov
imul
push
aas
sbb
repz
std
mov
imul
loopne
out
shrl
lock
add
mov
mov
lahf
sbb
add
inc
xor
aaa
ret
mov
into
mov
outsl
lret
mov
mov
sub
jge
xor
mov
xchg
fwait
ret
mov
jmp
mov
lahf
insl
aaa
dec
mov
pop
and
cmc
push
xchg
pushf
pop
ffreep
shll
fwait
rcrb
fcoml
cltd
jo
mov
xchg
and
xlat
sbb
jge
pop
sbb
aaa
call
or
xchg
sub
push
xchg
inc
sbb
lahf
sub
jl
outsb
or
lret
mov
sahf
xor
push
rcl
fdivrl
gs
or
mov
push
outsb
or
xor
and
lea
repnz
pop
imul
adc
pop
xor
loope
pusha
sbb
adcb
cs
inc
sbb
dec
xchg
push
pop
mov
loope,pt
cmp
adc
xor
mov
mov
dec
loop
add
out
pop
mov
xor
pop
movsl
and
loopne
rcl
pop
pop
push
mov
cmp
adc
and
push
iret
push
std
fimuls
push
xor
lcall
lahf
lds
mov
sahf
stos
test
sbb
bound
inc
jg
es
jmp
push
stos
cld
std
jecxz
cmp
push
mov
inc
push
test
sar
ret
or
loop
xlat
pop
jnp
fistl
pop
scas
ja
icebp
enter
mov
adc
pop
ror
shll
insb
add
mov
jne
sub
enter
inc
cmp
mov
adc
int3
outsl
jnp,pn
cs
pop
movsl
call
stos
or
addr16
aaa
bound
nop
xchg
inc
push
shlb
pop
lods
cmpsb
pop
add
into
hlt
pop
or
cltd
lds
aaa
dec
mov
adc
mov
jns
mov
push
rcr
dec
bound
sbb
filds
lahf
dec
les
dec
popa
mov
sti
into
mov
cmp
nop
push
xor
lods
in
mov
sbb
and
cmpsl
sbb
sbb
aam
add
out
icebp
lods
push
fsubl
ljmp
xchg
push
shl
jle
andb
push
scas
out
xor
cmpsb
sbb
jge
flds
xchg
ss
mov
icebp
divb
jnp
test
inc
out
sbbl
inc
adc
int3
hlt
cmp
mov
inc
in
cmpsl
rorl
jmp
push
xchg
cltd
cmc
arpl
icebp
mov
ljmp
scas
xchg
out
push
in
divb
xor
push
jbe
cmp
repnz
aam
xor
xor
jno
cmpsb
arpl
mov
sbbb
inc
cmp
imull
mov
inc
add
testl
mov
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
push
movsl
ss
or
ja
roll
jne
push
pop
push
cmp
scas
repnz
cmp
insb
fstp
xor
adc
bound
pusha
or
mov
pushf
or
inc
sub
cmp
sub
outsb
out
push
cs
jns
cmp
out
xor
ret
push
sbb
jg
pop
jle
push
nop
in
in
jp
mov
mov
lock
iret
lcall
add
aam
rorl
mov
jl
dec
lock
vmptrld
add
xchg
enter
stos
cmp
shr
fisubl
dec
or
jg
dec
fsubrp
and
and
inc
push
pop
adc
adc
mov
sbb
arpl
inc
arpl
xor
mov
xchg
jge
scas
push
hlt
fs
arpl
dec
sahf
mul
xlat
js
fildll
imul
rcll
pushf
sti
pop
aad
aam
enter
std
jmp
mov
push
mov
sub
scas
insl
or
cmp
sub
stos
jl
test
data16
mov
or
rcrl
sbb
xorb
pop
fucomi
jl
movsb
mov
cmp
test
fcoms
les
jbe
lods
loopne
jne
mov
leave
and
sub
xor
imul
and
push
popf
mov
and
hlt
dec
pusha
and
jmp
and
test
lahf
xlat
push
rcr
movsl
sbb
enter
or
aam
sti
add
dec
xchg
or
mov
stos
shrb
sub
pop
test
stc
and
das
leave
pop
jl
dec
loope
push
mov
addr16
enter
mov
mov
js
push
sbb
cmpl
add
repz
sbb
pop
mov
fmuls
stc
cmc
and
in
mov
scas
rcll
mov
cmp
pop
cmp
xor
inc
fisttpl
pop
and
fs
sub
xchg
mov
gs
ja
mov
mov
enter
sbb
lods
fs
and
adc
fcoml
jno
mov
and
xor
cmp
dec
sub
clc
inc
jge
cmc
xor
jbe
repnz
cmp
scas
flds
sub
iret
data16
mov
and
repz
push
jo
mov
repz
push
arpl
ficoml
aas
cmpsb
sbb
cwtl
push
or
out
adc
mov
cltd
add
fistpll
sbb
ja
pop
cmp
xor
inc
add
pop
push
xlat
cmp
lds
mov
xor
push
push
ljmp
jb
dec
call
dec
mov
test
cmp
jmp
mov
jmp
or
xor
scas
sbb
fiaddl
dec
jge
mov
xchg
push
push
loope
xchg
in
or
repnz
lret
xchg
pusha
jmp
arpl
inc
push
aam
mov
in
paddsw
aad
pop
ffree
ljmp
inc
int
insl
sbb
mov
mov
aad
lock
popa
mov
test
into
dec
ficoms
sub
pop
xlat
dec
or
in
lret
ret
idivb
mov
outsb
es
mov
test
push
push
fsubs
mov
js
pop
xchg
aad
shl
fwait
inc
jbe
insb
push
jle
and
adc
dec
jns
addb
fistpll
fsubrl
out
scas
xor
xchg
fscale
shr
mov
xchg
rclb
adc
push
aam
lea
add
push
pop
mov
stc
test
xchg
scas
and
aam
out
cmp
fs
pop
jo
inc
jns
inc
add
lret
es
ja
dec
dec
xchg
ret
sub
pop
test
loop
sbb
mov
jo
sub
outsl
mov
sub
jbe
outsb
adc
xor
js
out
enter
jae
cmp
mov
data16
add
adc
xchg
xlat
push
mov
xlat
lcall
add
and
xlat
out
lahf
inc
xor
adc
fisttpl
adc
leave
fcmovnu
je
mov
adc
je
sub
add
or
mov
scas
shrl
cmc
stos
mov
cmpsl
mov
cwtl
mov
or
mov
popf
mov
sub
std
in
scas
cmp
inc
jl
push
lods
pop
mov
jl
mov
xchg
sub
and
push
lock
mov
insl
call
pop
nop
dec
jns
sub
fidivrs
inc
mov
hlt
loopne
stos
je
outsb
fstpt
inc
das
xor
jne
and
xchg
hlt
int
adc
adc
out
lods
xchg
rol
push
icebp
pushf
shlb
aas
push
mov
adc
lahf
daa
mov
inc
cmp
into
sub
cmp
loopne
stc
orl
xchg
and
xor
mov
daa
mov
mov
or
jo
dec
push
pop
aaa
pop
addr16
and
insl
gs
mov
cmp
mov
adc
data16
outsb
loop
push
mov
aad
arpl
enter
mov
adc
cmp
imul
cmp
out
mov
in
mov
dec
push
rcll
outsb
inc
xor
aas
push
cmp
adc
xlat
test
loope
add
add
dec
cli
xchg
mov
pushf
lahf
mov
data16
mov
mov
in
fiadds
push
hlt
push
sub
mov
in
imul
das
jmp
and
mov
adc
imul
sub
lock
idivl
rolb
js
outsb
aam
push
add
ret
mov
push
faddl
jno
pop
ret
dec
rorl
pop
mov
cmpsl
call
dec
pop
inc
add
in
andl
cmp
aas
lds
gs
out
pop
cli
xchg
fildll
inc
dec
js
mov
pop
popa
sbb
xchg
popa
adc
test
movsl
mov
cmp
ret
jmp
sub
pop
xchg
sub
mov
sub
aas
ljmp
les
mov
and
ss
aas
sub
and
cwtl
inc
stos
loop
pop
out
data16
stos
into
add
lret
cmp
jp
jecxz
lods
jnp
mov
xchg
test
or
dec
out
in
xlat
dec
les
jle
inc
push
or
xor
xchg
lods
xor
mov
fwait
cmp
lods
bound
pop
mov
les
insb
pop
insl
push
adc
xor
pushf
jle
aam
pop
gs
jge
lods
jmp
scas
ds
js
adc
into
cwtl
leave
push
cmp
push
mov
dec
jmp
add
pop
lock
push
cltd
ficoml
or
sahf
imul
mov
mov
xchg
test
les
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
dec
mov
add
sub
in
and
inc
sbb
mov
cs
push
mov
lods
shl
adc
and
test
mov
nop
roll
lahf
inc
inc
ja
jge
rcrl
cld
mov
dec
inc
pop
fistl
jecxz
mov
jge
loopne
movsl
inc
or
imulb
inc
pushf
and
cmp
aam
xchg
mov
je
xlat
lods
dec
lods
sub
xchg
aas
xchg
dec
test
or
clc
daa
shlb
xchg
pop
cmp
loop
mov
jmp
movsb
arpl
repnz
push
inc
fists
pushf
xchg
jg
andl
icebp
cmpsb
stos
inc
mov
pop
imul
xchg
out
enter
add
out
xor
jnp
ret
mov
repnz
bound
mov
fcoml
insb
mov
push
jg
pop
push
xor
into
xchg
inc
sar
ljmp
add
lods
clc
and
and
nop
or
inc
mov
and
lock
push
cmp
out
mov
mov
mov
andb
mov
xor
in
shlb
pop
or
rcll
jecxz
scas
lcall
push
or
sub
dec
inc
les
cli
int3
jbe
cmp
pop
sbb
popa
xlat
insb
leave
test
mov
js
hlt
pop
lahf
push
xor
sahf
test
popf
daa
pop
dec
cmpsl
mov
clc
pop
aas
cltd
add
mov
push
mov
sbb
outsb
ljmp
dec
outsl
aad
adc
jp
cltd
andb
ljmp
ds
or
loopne
mov
xchg
call
jns
jne
push
pop
xchg
push
mov
stos
adcl
push
fcmovnb
pop
orb
in
sbb
lods
adc
shlb
pop
add
sub
ret
jle
shll
cmp
call
cltd
daa
pop
push
or
nop
mov
jbe
pop
jae
jno
push
mov
sub
and
jae
push
cltd
jb
incb
add
stos
inc
mov
inc
adc
add
test
shrl
xlat
fldenv
push
ffree
mov
push
test
pop
add
pop
add
jmp
mov
push
mov
add
aas
and
loop
pop
pusha
testl
cwtl
es
cmp
xchg
ficompl
sub
inc
cli
jle
add
insl
cmp
aas
dec
mov
adc
cltd
cmpsl
dec
movb
out
or
hlt
push
dec
pop
pop
fsubrl
addr16
cs
xorb
adc
pop
jle
or
xchg
jns
cmc
in
loopne
dec
sbb
add
mov
inc
inc
mov
mov
jns
popa
in
sarb
out
jmp
sbb
cmp
and
jns
lea
and
pusha
jns
sbb
add
aaa
inc
cmpsb
add
mov
mov
adc
jo
imul
lret
mov
imul
xor
mov
in
jbe
sub
adc
lahf
cltd
fwait
cmpsl
test
mov
or
adc
or
dec
test
iret
stos
stc
les
inc
and
out
out
inc
inc
data16
mov
pop
xchg
addr16
adc
jge
aaa
inc
cld
fiadds
inc
mov
cmp
bound
jb
mov
mov
in
adc
push
mov
mov
mov
jp
inc
add
xchg
sub
das
arpl
pop
outsb
pop
pop
pop
pop
int3
dec
mov
cmp
pop
or
inc
inc
cmp
dec
pop
data16
mov
shl
dec
std
les
inc
xchg
cmp
mov
rol
imul
cmp
jle
fs
repz
scas
pop
xor
sub
xchg
je
sbb
cmpsl
xchg
lret
lds
das
test
sub
jle
and
inc
cmp
or
push
lds
sub
hlt
mov
push
dec
mov
fs
lods
pop
jmp
mov
xor
sub
iret
xor
gs
ficoms
pop
jbe
pop
jle
push
mov
xchg
sub
leave
mov
push
push
cmp
sbb
addr16
xor
mov
jge
fcmovnu
idivl
fists
push
lcall
xor
dec
adc
and
mov
frstor
ds
stos
shlb
sti
dec
outsl
cmp
xor
aad
fimull
dec
xchg
mov
dec
clc
and
xchg
cmp
scas
mov
addb
or
inc
adc
sub
cli
outsl
call
lcall
jl
sbb
jl
movsb
insl
adc
or
icebp
pop
rolb
dec
orb
mov
adc
mov
push
outsb
ret
or
sti
and
dec
push
shlb
dec
xchg
mov
ljmp
aam
mov
stos
pop
inc
aam
pop
ljmp
lods
sbb
fnstenv
xlat
jb
push
mov
idivb
push
enter
sbb
add
add
test
lods
mov
mov
jg
xchg
mov
test
jg
jmp
adc
xchg
insb
adc
push
aas
push
xchg
lods
inc
lret
loopne
std
int3
mov
in
and
cmpsb
xchg
push
dec
daa
jno
movsb
add
sub
inc
insb
mov
xor
popa
lds
xchg
or
mov
xchg
push
pop
stos
movsb
mov
mov
cmp
inc
xor
sbb
pop
std
bound
iret
sbb
push
std
aaa
sub
push
xor
fucomi
sbb
jns
xchg
leave
flds
int3
xchg
arpl
negl
in
ret
leave
add
sbb
jb
fdiv
jb
frstor
inc
pop
or
enter
jnp
push
fisubs
dec
pop
hlt
cmp
insb
xchg
fwait
and
mov
and
inc
pop
loope
sub
loope
aas
sarl
cmp
rcl
lcall
inc
dec
shrb
pop
out
push
push
out
add
fadd
sub
loop
sbb
sub
mov
dec
outsl
xor
dec
and
cmp
cmc
icebp
jge
ja
mov
jecxz
xor
scas
rclb
sbb
add
ret
dec
insl
int
cmp
adc
test
or
bound
xchg
inc
and
subb
imul
or
sti
wrmsr
cltd
xchg
push
mov
inc
adc
adc
xchg
lea
add
leave
leave
and
mov
xchg
test
pop
sbb
jno
pusha
lahf
js
xor
or
mov
std
or
mov
into
dec
xchg
jg
scas
jg
into
inc
pusha
popa
cmpsl
pop
lahf
mov
or
sub
pop
ret
rcl
adc
ret
cmpsb
inc
dec
fistl
ret
jo
mov
add
aad
xchg
mov
sub
sahf
outsl
inc
pop
in
add
and
sub
hlt
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
outsl
jnp
sbb
cld
sbb
fldenv
push
mov
loopne
sbb
mov
and
jo
int3
aas
mov
fwait
sti
xchg
movsl
or
popa
and
mov
dec
xorb
push
pop
add
sbb
add
pop
xchg
and
pusha
push
xchg
mov
aad
rcr
popf
pop
stc
into
mov
and
lret
ljmp
fcomps
rolb
fisttpl
fsubp
movsb
repz
fldcw
es
cmpsb
mov
xchg
mov
push
imul
lret
inc
inc
xor
mov
push
out
mov
test
fmuls
pop
xor
inc
xchg
jo
pop
mov
scas
adc
out
or
dec
call
fiaddl
lds
and
sub
ret
cmpl
stc
adc
dec
in
or
mov
scas
or
mov
adc
jecxz
sbb
xor
in
cmp
jnp
mov
pop
pop
mov
movsb
jl
or
lock
cli
push
insb
divb
lock
pop
dec
adc
icebp
imul
jb
flds
and
imul
arpl
into
mov
inc
or
dec
adc
cmpsl
sub
sarl
das
inc
stc
sbb
sub
aas
insl
pop
push
mov
mov
jge
xchg
dec
ja
dec
inc
call
loopne
pop
sarl
into
inc
iret
divl
jg
sti
xchg
outsl
dec
jp
adc
or
adc
and
inc
imul
sbb
inc
inc
jecxz
or
mov
ret
jnp
leave
les
cmp
cld
cmp
mov
adc
add
adc
pop
push
mov
adc
cwtl
pop
mov
out
mov
mov
std
fwait
xchg
in
lea
sbb
or
xlat
aaa
movsb
imul
pop
int3
mov
push
add
call
add
sbb
not
fwait
jle
mov
adc
bound
mov
dec
scas
inc
push
aad
loope
add
scas
pop
jnp
push
push
stos
cld
or
pop
inc
hlt
lcall
adc
or
mov
popa
test
dec
scas
mov
cli
sbb
and
jge
dec
cmp
mov
fisubs
lcall
sub
outsb
into
mov
xchg
mov
or
cmpsb
scas
and
cwtl
jmp
lds
or
andl
xor
je
scas
stos
sti
cmpsb
mov
and
das
iret
mov
sub
ljmp
cmp
mov
nop
cmpl
test
sets
push
std
add
mov
fmulp
dec
mov
adc
es
fimull
dec
mov
sbb
cmp
aaa
mov
shlb
sub
add
popf
or
inc
pop
dec
es
movsl
sub
imul
lret
call
aad
mov
loop
push
pop
sub
add
test
jmp
jnp
pop
in
pop
sti
andl
mov
sbb
outsb
lcall
mov
cli
inc
movsl
xor
ja
out
pop
mov
out
or
aas
arpl
xor
ficoms
and
aam
pop
jae
dec
inc
test
jmp
adc
sbb
add
addr16
loop
xchg
popf
or
fistpl
movsb
aas
loop
pop
pop
prefetch
or
mov
in
lret
lret
ficompl
cli
enter
cld
jne
mov
jae
ja
mov
shll
push
orl
add
incl
mov
inc
leave
inc
into
jg
mov
repnz
fistps
fstp
loope
mov
rorb
inc
jbe
jbe
addr16
xchg
lods
adc
lret
and
orb
push
stos
jmp
push
add
add
fidivs
xor
lods
cmp
push
imul
jmp
and
push
sbb
cmp
ret
lods
insb
sti
icebp
mov
and
sub
xlat
inc
add
clc
cmp
cli
xchg
gs
in
ret
or
sub
pop
mov
dec
pop
xor
and
xchg
out
arpl
imul
nop
imul
push
xor
iret
pop
push
pop
mov
adc
or
or
sbb
xchg
insb
test
or
sbb
imul
pop
pushf
jmp
sub
popf
cmp
test
ljmp
hlt
orl
sbb
xor
jnp
sbb
sub
mov
mov
aaa
or
cmc
ljmp
mov
icebp
insl
jecxz
xor
lock
cs
or
adc
or
cltd
pushf
and
xchg
mov
sub
js
cmp
jae
fildl
cmp
xchg
push
jecxz
push
loopne
cmp
ret
add
mov
faddl
mov
or
pop
ja
lcall
out
inc
shlb
pop
adc
hlt
xchg
jmp
sbb
outsl
rorl
add
ficoms
add
sahf
data16
arpl
pop
ret
fs
pop
scas
dec
inc
sub
lods
rcrb
pop
sub
fidivl
and
andb
outsb
scas
push
dec
out
js
adc
sbb
jmp
dec
jne
xor
mov
aam
lea
dec
add
sub
inc
test
sub
xchg
out
out
loop
push
pop
adc
in
jnp
out
ja
outsl
sub
inc
aas
sbb
push
sbb
xchg
adc
or
xchg
in
hlt
cmp
mov
add
push
addr16
xchg
les
or
ret
add
push
sub
sbb
inc
inc
imul
dec
mov
pushf
cli
and
sahf
js
inc
add
out
cwtl
xchg
pusha
in
push
pop
pushl
mov
iret
ds
jno
ret
fcomps
add
mov
scas
cltd
adc
sub
shl
cs
fsub
push
pushf
ss
pop
mov
inc
mov
or
das
gs
or
inc
adc
ret
jle
addb
push
and
outsl
xchg
and
add
adc
mov
jb
dec
stos
jb
test
ds
loope
cmp
aaa
cmc
pusha
pop
mov
in
insl
mov
test
add
pop
cwtl
mov
loopne
aaa
sbb
rcrl
inc
paddsw
enter
arpl
lahf
or
cmp
or
in
out
push
cmpsl
gs
jbe
inc
sbb
lret
push
aad
lea
outsb
mov
das
shl
sbb
jl
std
in
out
pop
or
adcb
imul
dec
mov
inc
movsb
mov
mov
shrd
jmp
add
dec
push
adc
call
es
add
std
mov
pop
add
jno
ds
adc
mov
add
xchg
or
int
cmc
jne
jo
sahf
xchg
adc
xchg
mov
lret
push
out
push
dec
cld
push
xchg
cli
fidivrl
pop
jo
sbb
shl
fsts
in
push
mov
enter
clc
enter
dec
rclb
pop
popa
pop
mov
or
out
mov
sub
push
pop
adc
gs
adc
leave
inc
and
sbb
cmp
xlat
push
daa
pop
or
std
xor
lret
sub
pusha
xor
inc
sub
xchg
cmp
jmp
sub
add
pop
stc
lahf
rorl
add
cmc
mov
fnstsw
mov
cld
jg
dec
cmp
dec
push
cmp
mov
ds
in
mov
adc
int
mov
enter
pop
flds
cmp
inc
push
sub
pop
push
pop
insl
ljmp
mov
xor
mov
fstps
dec
repz
xchg
pop
jae
in
sub
rolb
inc
mov
fwait
pop
inc
cs
es
xchg
leave
movb
in
ret
push
mov
adc
jmp
dec
add
repnz
hlt
mov
sbb
stc
decl
add
or
dec
test
pusha
lcall
jbe
add
mov
or
ja
arpl
fs
jne
lret
out
out
loope
inc
cmp
es
xchg
outsl
cmp
and
xchg
pushl
mull
ret
mov
insb
fdivrl
inc
loop
cmp
sub
out
les
jno
xor
or
mov
xor
mov
mov
push
push
mov
and
inc
lahf
pop
call
and
xor
mov
and
and
mov
jl
mov
jecxz
dec
test
push
jns
cmpsl
imul
les
cmp
mov
das
pusha
fmuls
loop
xchg
sbbb
xor
fcoms
pusha
addr16
mov
mov
insb
cmpl
mov
cmp
mov
sbb
das
shrb
pop
idivb
mov
xor
es
xor
pop
mov
test
push
addr16
js
cmpb
mov
dec
rorl
xor
dec
pop
jbe
mov
jl
ret
jae
dec
jno
aaa
out
fwait
jnp
popa
out
or
ss
aas
sbb
xor
and
xchg
push
mov
ljmp
adc
push
mov
pop
and
adc
mov
push
ljmp
and
mov
inc
mov
mov
fistpl
and
insl
xchg
and
loopne
ficompl
and
push
movsb
nop
movsb
notb
lret
pop
aaa
popf
repnz
inc
cmp
or
pop
inc
leave
cmc
data16
iret
test
int3
cmp
ficompl
push
pop
sub
scas
insl
mov
enter
lahf
mov
mov
idivl
sbb
pop
add
inc
mov
xor
dec
dec
fsubrl
push
stos
pop
stos
push
push
testb
cmp
sbb
fisttpl
fldenv
lret
into
rorl
xor
xchg
sbb
aas
scas
jns
mov
lds
or
in
imul
mov
push
add
mov
mov
loope
xchg
mov
jecxz
push
sbb
mov
fildll
jae
fdivrl
push
sti
js
outsb
mov
fdivrl
push
outsb
orb
call
test
cmp
push
xor
ljmp
xchg
out
xchg
mov
jle
mov
and
xor
xchg
lahf
mov
sahf
sbb
xor
xchg
and
push
das
xor
mov
mov
fdivrp
cmp
push
xlat
xlat
mov
lods
outsl
jg
push
pushf
dec
rclb
dec
mov
pop
and
mov
dec
xchg
sbb
dec
or
xchg
loop
movsl
jecxz
or
pushf
out
push
cs
andb
outsl
pop
roll
and
inc
insb
adc
inc
add
xchg
sysenter
fsubs
into
sub
fnstcw
jp
dec
jl
mov
nop
xchg
cmp
icebp
lds
popf
aam
cmp
arpl
out
mov
mov
xor
orl
dec
test
mov
inc
and
cmp
mov
mov
or
sub
das
or
aam
jmp
or
mov
insb
pop
test
mov
sbb
dec
popf
scas
mov
xchg
test
push
xor
mov
aam
sbb
pop
addr16
repnz
jnp
and
jmp
jns
ds
push
jmp
aad
rcl
inc
icebp
cs
mull
test
cmc
cmp
mov
pop
popf
inc
pop
push
test
xor
lahf
sarb
cmc
into
sbb
push
loope
mov
jp
aas
jae
xor
mov
xchg
xor
xchg
push
aaa
mov
subl
ja
adcb
int
inc
bound
or
jecxz
aam
iret
adc
add
ss
or
clc
mov
out
in
or
shlb
sub
add
movsl
and
push
outsb
mov
xchg
add
mov
push
pop
leave
xchg
xor
xchg
xchg
mov
fisttps
lds
push
push
lret
in
add
push
xor
or
ret
and
xor
sbb
sbb
ja
rcrb
add
or
lea
test
fmul
nop
or
xchg
sbb
scas
fcomps
adc
ds
dec
ljmp
mov
or
int
add
inc
in
mov
hlt
push
mov
xchg
push
dec
cmpsb
mov
xchg
fldcw
adc
and
mov
bound
loope
out
cltd
in
mov
aam
sbb
lret
add
push
aaa
or
sub
add
repnz
fisttpl
push
fbstp
test
mov
insb
fwait
adc
dec
inc
add
roll
mov
clc
and
mov
cmp
mov
mov
jbe
mov
jecxz
inc
jns
outsl
mov
jmp
add
push
stos
xlat
sub
fildll
xchg
test
shrl
fstps
je
loop
test
leave
cwtl
into
nop
mov
es
movsl
aad
mov
sub
lcall
jmp
mov
sbbb
movsb
testl
add
je
sub
call
jne
hlt
jbe
adc
xor
sub
arpl
ljmp
mov
cs
cltd
fs
cs
xchg
notb
out
add
loope
js
clc
movsb
ss
mov
insb
ret
xor
aas
in
xchg
mov
rcll
rclb
lret
and
adc
fbstp
xchg
arpl
xchg
aas
ljmp
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
mov
ja
vmulps
mov
and
pushf
dec
aad
std
sti
mov
fnstenv
cmp
cltd
push
inc
call
cmp
inc
pop
inc
xchg
mov
imul
nop
pop
js
mov
sar
idivl
arpl
push
mov
aaa
add
add
outsl
dec
ret
movsb
and
jl
out
jb
cmpsb
mov
mov
sub
xchg
and
push
add
and
in
sbb
push
xchg
pushf
adc
push
in
xchg
clc
inc
mov
xor
movsb
pop
cmc
lds
push
mov
xor
xchg
inc
cmp
sub
cmpsl
ss
ret
fcmovnu
or
movsl
gs
mov
mov
sbb
ret
inc
cld
fidivl
dec
int
or
subb
mov
in
pop
fwait
sub
loope
sbb
xchg
dec
jg
xor
push
mov
jg
mov
mov
and
lret
xchg
outsb
cmp
mov
sub
lea
pop
das
push
dec
dec
negl
inc
adc
xchg
xchg
sbb
dec
lods
push
clc
dec
push
jle
mov
out
cli
mov
xchg
scas
out
xor
xor
subb
sub
fwait
jp
inc
adc
cmp
ret
cs
jg
mov
mov
adc
sbb
scas
cmp
pop
mov
xchg
subl
cmc
idiv
cwtl
pop
ss
mov
pop
push
sub
adc
mov
or
es
dec
cs
push
dec
mov
out
add
adc
inc
lcall
pop
jae
push
fdivs
fnstcw
and
rclb
loop
and
mov
dec
dec
shlb
push
jne
add
pop
flds
mov
mov
test
cli
rorl
push
inc
dec
or
and
inc
xor
jo
loopne
ja
pop
mov
mov
add
imul
mov
or
sarl
dec
in
ret
aad
insb
xor
ss
jp
or
clc
test
jmp
inc
clc
test
cli
filds
jl
xchg
mov
das
cld
ret
rcrl
add
test
sbb
shll
rcll
imul
lcall
jae
mov
notl
ficomps
mov
outsb
xor
push
ja
dec
sbb
adc
movsb
repz
jmp
ljmp
xchg
add
aad
and
sbb
stc
xlat
add
loop
in
leave
pusha
cmp
ret
sub
testb
or
cs
icebp
dec
fldl
cmp
push
lods
or
cmp
sub
test
fnsave
adc
out
jae
lock
shl
in
cmpsb
movsb
adc
inc
in
lret
dec
leave
or
addr16
jnp
jl
outsl
js
mov
in
dec
push
adc
sbb
jp
int3
in
add
outsb
movsb
int
dec
dec
data16
movsl
mov
mov
adc
and
sahf
test
push
cmp
mov
adc
repz
mov
dec
pop
fdivrl
inc
xchg
out
xor
xchg
lret
add
arpl
xchg
pusha
mov
dec
call
jl
pusha
adc
pushf
rol
push
hlt
xchg
lahf
sbb
push
inc
add
nop
repnz
adc
and
dec
and
decl
mov
sbbb
pop
ret
dec
inc
adc
mov
mov
inc
das
sub
ss
xchg
ja
or
lcall
mov
pop
repz
idiv
dec
addr16
inc
and
inc
scas
add
fs
leave
scas
push
jg
jne
jg
pop
sbb
pmovmskb
loopne
shll
pop
push
pop
mov
fiaddl
negl
sub
adc
mov
ja
adc
sbb
iret
xor
xlat
adc
aaa
lods
inc
jno
sbb
sub
add
cli
cmp
lahf
adc
jmp
dec
sub
jl
cmp
aad
xchg
scas
add
std
jmp
adc
pusha
incb
or
into
jns
nop
je
and
sahf
in
dec
out
jmp
mov
jno
je
xlat
or
rorl
fisttpl
shll
aas
sbb
das
and
roll
cwtl
sbb
xchg
sub
aaa
push
mov
int
ficomps
daa
cmpb
rcrl
fisubl
xchg
push
arpl
cmp
fwait
movsb
xchg
push
shrl
inc
jbe
loope
int3
push
jge
sbb
movsl
out
push
int
mov
jmp
mov
out
pop
sbb
sti
ljmp
inc
cmp
ret
jae
cmc
pop
pop
and
mov
xor
mov
pop
mov
fs
std
pop
test
in
jno
mov
jo
int
mov
xchg
test
clc
inc
mov
xchg
pop
arpl
addl
popl
andb
adc
inc
loope
cmpsb
mov
dec
mov
popf
cld
sbb
into
lcall
inc
in
lock
bound
inc
in
lds
mov
pop
cmp
or
insb
xchg
fwait
mov
or
out
mov
leave
adc
int
dec
push
cmp
or
arpl
inc
int3
je
jecxz
sbbl
cmc
rcll
out
popa
sbb
push
lcall
xor
out
pop
lahf
cmp
arpl
xchg
xchg
fsub
dec
cmp
push
cmpsb
out
mov
xchg
cmp
sar
push
rcrl
sub
jmp
sub
pop
pop
lods
insb
mov
mov
pusha
xchg
insl
sti
jl
dec
mov
pop
out
enter
js
inc
jb
jp
pop
popf
test
pop
rol
inc
imull
add
mov
or
aaa
fwait
pop
int3
push
dec
push
mov
ret
jne
mov
dec
roll
fnstsw
fwait
push
wbinvd
mov
in
cltd
pushf
int3
push
push
inc
dec
scas
adc
or
fildl
outsl
sub
ret
jmp
xchg
div
jmp
repz
xor
ret
mov
xchg
jmp
scas
push
push
aas
sbb
push
jecxz
jl
and
bound
into
xchg
daa
fldcw
inc
mov
fistps
fstps
adc
dec
scas
and
je
push
arpl
sub
jl
jae
loope
dec
cmc
cmp
cmp
inc
mov
arpl
out
inc
outsl
cltd
adc
inc
mov
mov
mov
adcl
and
out
lahf
sar
jns
cmc
pop
jbe
xchg
outsl
fld
or
sub
in
sub
daa
sahf
push
pop
lcall
xor
and
dec
sub
pop
xchg
pop
jo
jb
aaa
lds
popa
lret
add
pushf
pop
and
cs
ja
shlb
jae
sahf
int
xchg
pop
int3
lock
sarl
ret
dec
or
mov
sbb
in
add
jns
out
push
dec
add
jbe
inc
enter
shrl
outsl
pop
pop
inc
sarl
popf
insl
test
xor
pop
push
pop
push
push
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
sbb
shrb
rdmsr
xchg
sub
arpl
adc
cwtl
sub
or
lock
inc
mov
push
fsubrs
dec
xlat
bound
iret
inc
jp
inc
sub
or
fcomps
jmp
ja
inc
call
mov
outsl
ret
ljmp
push
into
add
mov
fwait
inc
sub
icebp
mov
add
mul
mov
sti
das
push
push
lret
cltd
test
aaa
aam
mov
mov
sahf
pop
cmp
imul
ficomps
sbb
les
sahf
lea
rclb
repz
stos
mov
or
xor
in
dec
out
pusha
xchg
imul
lods
push
lahf
push
inc
repz
iret
popf
bound
xor
ret
out
stos
test
bound
sub
mov
push
aad
pop
sbb
adc
nop
rorb
sahf
pop
dec
inc
jle
dec
fcoms
mov
shrl
sub
notl
or
mov
dec
std
push
add
xchg
ret
mov
mov
add
stos
popa
xchg
sub
cltd
push
sub
shrb
push
imul
rorb
add
lahf
test
aas
fidivrl
mov
push
iret
sbb
sub
dec
push
bound
repz
xchg
xchg
or
pop
stc
popa
pop
les
addr16
fs
xchg
push
adc
mov
popa
xchg
mov
retw
push
mov
xlat
fwait
sahf
dec
lret
addr16
sbb
add
sbb
imul
bnd
pop
sbb
push
cwtl
arpl
adc
repnz
test
popf
nop
or
sbb
loopne
xor
in
mov
pushf
pusha
xchg
fnsave
stc
dec
cmp
nop
jne
adc
jno
mov
mov
and
cmp
stc
mov
dec
dec
jl
loopne
mov
xchg
xor
sarb
shlb
jecxz
xchg
repz
psubsw
sbbb
pop
add
cmp
nop
push
sub
xchg
mov
jo
clc
pinsrw
dec
adc
cmp
or
jecxz
iret
mov
or
test
inc
xor
sbb
xchg
add
imul
add
jg
xchg
jl
stos
lea
cmpsl
stos
xchg
pop
daa
flds
and
faddl
jnp
out
mov
pop
lcall
cmpsl
int3
xor
push
inc
cmp
add
jmp
mov
jnp
jo
and
xchg
sub
sub
jae
scas
into
stc
lods
cmc
inc
test
movsl
mov
sbb
stos
dec
push
ret
aad
lahf
ja
ret
or
aas
push
xorb
pop
iret
dec
mov
push
sub
scas
fnstcw
inc
pusha
mov
cmp
fwait
jo
lahf
inc
xor
and
or
sti
scas
cmpsl
daa
mov
mov
mov
xchg
and
xchg
or
xor
addb
cltd
dec
insl
aas
xor
push
xlat
jno
or
cmpb
push
inc
inc
lret
push
arpl
and
gs
mov
fldl
push
insl
addr16
or
fidivl
jecxz
cld
cmc
push
lahf
lock
inc
je
fs
adc
lret
add
bound
fs
add
sub
mov
clc
repz
out
popf
fs
nop
jge
lds
cmp
imul
fldenv
pop
sahf
repz
xchg
sahf
push
xor
mov
scas
jp
scas
push
push
sub
or
sub
mov
xorb
push
sub
out
push
and
sub
mov
fmull
negl
cli
jl
and
lahf
mov
lahf
mov
add
fdivs
adc
leave
shr
clc
xor
sub
flds
add
lods
sub
jo
call
hlt
xchg
xchg
rcll
pop
push
and
sbb
cmp
dec
adc
and
inc
mov
and
and
in
out
daa
xor
shrl
fisubrs
jmp
js
mov
mov
scas
shl
push
inc
mov
push
fdivs
jecxz
sbb
mov
dec
or
dec
and
pop
or
jecxz
dec
in
sub
call
xor
pop
int3
xchg
and
push
pop
aaa
adc
jo
inc
adc
movsl
and
mov
jnp
movsb
mov
ds
aad
pop
cmp
mov
pop
sub
sbbl
add
inc
les
in
add
ret
sbb
and
xchg
int
dec
sbb
jecxz
mov
test
inc
push
sbb
cmp
loope
adc
cmpsl
jp
pop
push
xchg
adc
movsb
dec
ja
ret
stos
mov
leave
scas
hlt
cmp
fiaddl
pop
ds
pop
cwtl
lret
call
dec
jo
dec
or
sbb
inc
int3
ficomps
and
dec
cmc
movsb
pop
scas
or
nop
fs
stos
jno
imul
ds
loopne
adc
push
push
push
xchg
int3
sbb
aas
mov
dec
push
stc
outsl
orb
cld
adc
leave
lcall
in
int3
arpl
call
cltd
mov
and
aad
mov
aad
lock
pop
adc
pop
dec
inc
lcall
sub
sbb
pop
nop
pushf
mov
ds
or
xor
test
dec
sub
fbld
pop
or
jl
in
sbb
cld
or
dec
cld
mov
lods
stc
enter
or
dec
out
sbb
cmpsb
movsw
test
or
xor
mov
cmpsl
fstpt
mov
xor
pop
or
stc
adc
into
or
dec
out
rorb
aaa
xor
or
xor
xor
pushf
out
pop
pop
stos
lret
mov
mov
pop
push
jmp
push
mov
inc
pop
pushf
xchg
fsts
shlb
push
mov
loope
jo
mov
xor
sub
push
ret
mov
push
jno
rorb
lods
jb
adc
enter
jmp
or
inc
dec
sbb
loopne
push
dec
inc
dec
out
pop
jmp
movnti
push
std
loop
dec
dec
inc
mov
cmp
push
mov
cli
jle
add
daa
shl
adc
adc
divl
push
inc
jl
or
lret
mov
mov
sbb
mov
xchg
mov
dec
mov
sbb
stos
imul
cwtl
out
aas
ret
pop
mov
adc
push
sub
jle
inc
nop
xchg
in
mov
loopne
xor
imul
jno
mov
dec
sub
inc
jb
fcmovnb
popa
pop
stos
jne
cli
test
or
rorl
jge
push
hlt
in
sub
int
in
jb
push
clc
and
mov
cmpsl
mov
or
lock
mov
or
stos
pop
and
sbb
cmp
xchg
sbb
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
fsubrs
xchg
aaa
mov
ja
arpl
jmp
cld
mov
gs
mov
push
xchg
cli
fistpll
dec
subb
jbe
jns
sub
je
out
xchg
push
pop
or
ret
sbb
mov
and
push
cmp
pop
pop
sahf
test
idivb
lahf
je
mov
jg
arpl
dec
xor
rorl
mov
xor
mov
movsb
mov
xor
or
cmp
lret
frstor
lods
inc
jb
push
mov
popa
imul
pusha
pop
pop
pushf
inc
repnz
imul
and
xlat
sbb
rcll
clc
add
lods
inc
ret
or
push
jg
stc
cmc
ds
sahf
jge
mov
iret
js
jg
iret
ror
xlat
repz
jp
inc
sub
sub
mov
mov
cmp
jecxz
push
shrl
xchg
outsl
inc
popf
scas
rclb
jo
mov
mov
leave
mov
push
xor
inc
mov
pop
push
jae
rorb
popf
ret
or
orl
pop
cmp
xor
sub
mov
cltd
push
gs
pop
in
add
stos
insb
cwtl
xlat
cs
ds
outsl
subb
mov
and
into
mov
inc
dec
jb
sub
popa
pusha
fsubrs
add
dec
sahf
mov
mov
ret
adc
sbb
and
push
daa
cmp
stos
xchg
and
sub
das
stc
jp
pop
jo
mov
cmp
cmpsl
cmp
xchg
rcl
into
cld
mov
movsl
push
adc
mov
aad
roll
addr16
jne
pop
jecxz
jae
cwtl
xchg
aaa
out
lods
xchg
lods
in
fistps
subb
jb
cmp
mov
loop
xchg
jl
nop
xor
cltd
jge
mov
ljmp
pop
inc
les
pushf
sbbl
add
sar
pop
and
xchg
xchg
int3
jbe
inc
jne
icebp
stc
pushf
ja
push
sbb
xchg
fnstsw
aaa
sbb
pmulhw
pop
or
cs
jp
mov
dec
dec
mov
push
cmp
jge
mov
std
mov
add
int
into
call
mov
dec
jl
mov
in
mov
push
int3
xor
pusha
cmp
dec
cmpsl
jp
add
rorl
mov
rol
sbb
int3
sahf
outsl
shlb
adc
mov
es
nop
add
push
test
jle
repz
out
ss
adc
ret
sbb
stc
loopne
mov
xor
cld
sahf
daa
imul
aad
xchg
push
or
addb
scas
cmp
mov
mov
cmp
push
mov
adc
mov
sti
dec
imul
or
mov
into
loop
and
sbb
mov
pusha
jecxz
or
inc
inc
xchg
mov
mov
xchg
push
test
inc
mov
or
add
push
lret
cmp
cmpsl
add
mov
cmc
adc
jmp
icebp
inc
cltd
sbb
call
inc
dec
adc
push
and
aam
je
dec
icebp
fildl
cli
cmpsb
xchg
rorl
sbb
lock
psubusb
dec
or
jae
sbb
cmp
int
push
jle
jmp
sbb
push
outsb
cmp
push
inc
movsl
or
push
out
mov
test
outsb
loop
rol
nop
and
sahf
jmp
jo
mov
add
es
sub
sbb
mov
jo
mov
fildl
mov
cmp
std
push
lahf
push
jl
mov
in
in
mull
pop
cmc
fistpll
push
scas
xchg
pop
fbld
mov
gs
imul
adc
inc
outsl
dec
pop
and
inc
rcl
sbb
aaa
fsubrs
and
imulb
mov
lock
mov
mov
jp
cmp
stos
dec
mov
popf
aaa
arpl
inc
and
fistpl
call
dec
adc
int3
clc
inc
das
pop
pop
pop
pop
cltd
cltd
rep
in
mov
insb
loope
and
mov
sbb
xchg
movsl
aas
daa
icebp
mov
test
xchg
in
mov
jno
xor
mov
xchg
dec
dec
adc
lods
imul
xchg
shr
pop
mov
or
xchg
and
adc
mov
jne
enter
push
cwtl
fcomps
lods
movsb
xchg
mov
and
jae
sub
sub
push
and
into
mulb
ret
pop
lret
in
fs
inc
jecxz
movsl
incl
lret
imul
cmc
mov
jp
xchg
cmp
cld
testb
jb
cmc
cmp
sbb
data16
shr
sbb
rorl
test
mov
scas
fidivrs
mov
adc
or
mov
std
mov
stc
scas
sub
mov
inc
xlat
imul
adc
cmovne
push
sub
mov
xor
dec
or
jbe
insl
fwait
ss
out
push
jb
push
add
or
cmpb
idivl
call
push
fstl
jmp
push
cmpsl
test
daa
iret
xor
int3
mov
insb
ret
cwtl
xlat
leave
xor
cmc
adc
cmpl
bound
pop
inc
add
dec
movsl
push
lods
jge
cmp
hlt
movsl
scas
mov
stos
int
fildll
push
xor
stc
adc
lods
jl
mov
mov
jb
cmp
add
std
in
cmp
test
fmull
xchg
jbe
dec
push
into
mov
out
notl
mov
push
shlb
aad
stos
sbb
inc
divb
push
push
pop
negb
scas
mov
jo
lods
cmp
xlat
out
rorl
ret
cs
mov
push
and
cld
lods
dec
sub
maskmovq
pushf
test
sub
mov
push
jae
or
fldt
arpl
xlat
loopne
hlt
and
test
xchg
adc
add
out
mov
lcallw
in
jge
test
jecxz
aaa
rcrl
push
add
xchg
lahf
pop
in
daa
fstpl
xchg
stos
fsubrs
int
filds
sbb
jp
arpl
push
pop
ret
test
push
xchg
inc
and
cmp
or
xchg
gs
out
fwait
add
imul
outsb
dec
xchg
xchg
repnz
pop
mov
test
lea
bound
aad
mov
sbb
and
fisttpl
test
xlat
and
add
in
data16
jg
dec
repz
daa
stc
xor
or
cmpl
xor
or
movsl
adc
mov
add
out
movsl
xchg
mov
or
lea
fdivrs
dec
fmull
cmc
sbb
xchg
cmp
push
sarb
neg
and
jecxz
and
inc
dec
mov
mov
xor
or
loop
sbb
mov
mov
sbb
icebp
xchg
cli
incb
dec
hlt
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
insb
jae
xchg
iret
mov
movzwl
or
push
dec
inc
xchg
and
mov
mov
mov
loope
enter
aas
nop
cmp
pop
hlt
mov
mov
pop
and
rorb
sub
rcrl
ja
push
nop
faddp
ja
jge
cmpsl
roll
mov
sub
mov
fnstsw
sub
jo
inc
rclb
sub
sbbb
loopne
or
testb
jl
adc
shlb
cmpsl
pop
inc
or
int3
or
movsl
push
xor
mov
lcall
push
inc
dec
fldl
adc
adc
push
dec
and
js
adc
xor
aas
cld
adc
test
iret
sbb
jae
popf
pop
and
mov
mov
out
and
repnz
aaa
cmp
icebp
sarl
cmp
ret
mov
out
pop
aaa
fstl
dec
cs
arpl
xlat
dec
push
dec
mov
outsb
mov
mov
in
orl
popa
adc
inc
stc
iret
pusha
mov
subb
and
sbb
xor
bound
xor
pop
jbe
stc
mov
enter
push
cmc
xor
xor
xor
add
cmp
test
jo
pop
or
mov
jb
mov
repnz
pop
jne
mov
dec
pushf
mov
dec
xor
out
imul
cmp
in
leave
repz
insb
jle
mov
pop
dec
js
ret
in
push
out
or
mov
loope
testb
inc
sbb
mov
xchg
jl
jne
mov
sbb
adc
fildll
adc
outsb
test
lret
sahf
mov
cmp
jbe
jp
insb
js
shll
jmp
les
push
xor
pop
cmpsl
addb
fs
test
push
mov
in
add
movsl
loope
xor
xchg
adc
push
sbb
int
loopne
xor
lock
pop
sub
aam
cmp
movsl
pop
adcl
cmp
out
nop
movsb
push
stos
jl
aam
stos
mov
rcrl
sbb
mov
xlat
cmp
popa
stos
sbb
pop
popa
lret
mov
sbb
test
push
xlat
std
push
aad
cwtl
lods
out
outsb
stc
in
cmp
lods
push
or
lcall
mov
test
enter
enter
xchg
mov
and
push
pop
mov
fisttpll
inc
cmpsb
and
add
xor
fcompl
jns
out
in
in
scas
loope
mov
cmp
addb
out
out
popf
es
sbb
jae
fnstsw
lods
xor
sub
test
leavew
mov
mov
mov
inc
sub
mov
andl
je
or
cwtl
scas
das
daa
push
fidivl
sbb
cltd
test
pop
pop
cmpsb
decb
jmp
ret
pop
insl
xchg
mov
ja
int
mov
xor
popf
cli
sub
xlat
test
push
roll
inc
push
jbe
outsl
popa
icebp
sub
pop
xchg
pop
daa
enter
cs
in
insl
sbb
movl
xchg
sub
mov
sarb
pop
sti
adc
adc
shll
mov
ja
jno
fdivr
mov
clc
popf
fwait
or
outsb
in
mov
push
fbstp
mov
in
adcl
stos
add
sub
mov
xor
outsl
stos
jns
jno
jp
pop
scas
stc
ret
mov
enter
stos
or
adc
les
sbb
inc
inc
and
cld
jnp
repz
into
stc
into
mov
mov
loope
and
mov
ret
dec
int
cltd
pop
pop
xor
dec
xor
sub
pop
sub
pop
mov
pop
dec
in
shlb
adcl
pop
xor
sbb
arpl
adc
xchg
out
push
repnz
xor
stc
mov
pop
and
mov
iret
cltd
seta
test
test
out
pushf
insl
rorb
add
loop
sub
nop
add
repz
filds
insb
jge
sub
fcomps
add
adc
sub
mov
scas
mov
mov
mov
jbe
ljmp
mov
push
fisttpl
fildll
pop
cmp
add
sub
mov
add
sbbb
adcl
dec
sbb
add
xor
sbb
xrstor
es
cmpsl
and
push
and
and
mov
fisubl
sub
push
pop
inc
mov
xor
stos
push
and
inc
push
lds
push
pop
fstpt
subb
xchg
call
pushf
cld
enter
push
sbb
imul
push
aaa
pop
mov
fsubrs
xchg
fists
rcrb
add
mov
divl
cwtl
dec
stos
lods
cld
into
dec
loop
push
pop
mov
bound
push
lret
fistpll
in
adc
jns
push
dec
divb
inc
push
sbb
testl
sbb
pushf
sti
cmp
loope
lahf
or
mov
inc
inc
fs
xchg
pushl
mov
add
jge
pop
sahf
cmc
xor
js
cmp
adc
push
and
outsl
mov
pop
ret
icebp
push
cmp
sub
cmp
mov
dec
adc
lea
pop
aaa
push
add
adc
push
stos
dec
cld
loop
add
in
lret
jecxz
jo
cmpsb
aas
repz
mov
add
inc
lock
pusha
pop
bound
inc
orl
arpl
cli
std
mov
push
mov
sbb
push
leave
test
jne
adc
aad
fnsave
leave
in
pusha
out
inc
loopne
rcrb
bound
das
and
jno
cmpsb
push
test
loop
imul
imul
sbb
pop
pusha
inc
enter
aas
out
jb
into
xor
movsl
lahf
jnp
stc
loopne
cmpb
es
inc
inc
pop
mov
test
test
jbe
cmp
push
ljmp
sub
movsl
imul
mov
hlt
xor
cmp
int3
mov
in
stos
and
mov
out
cmp
sarl
lcall
dec
jg
repnz
addr16
push
dec
mov
jbe
fs
std
into
popf
insb
cmc
push
or
shll
mov
ja
and
in
or
ja
shlb
add
ror
iret
mov
stc
mov
mov
cmp
cmpsl
cltd
pop
xchg
mov
cmp
fisttpl
lods
jg
adc
inc
push
insl
lds
mov
iret
orl
sbb
pop
mov
jle
mov
insl
stc
push
inc
dec
fwait
and
push
sub
scas
jg
data16
lret
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
jnp
push
ja
add
scas
jle
sti
sahf
emms
enter
add
faddl
xchg
and
ret
pop
fldenv
movsb
cld
and
inc
ja
int
add
mov
dec
cmpsl
and
xlat
dec
addl
xor
fisubs
lea
leave
fcmovnb
xor
push
pop
cmp
stc
fidivl
fs
aas
jecxz
lods
std
pop
cltd
push
movsl
js
imul
add
bound
stos
adc
sbb
mov
sub
outsb
pop
fcomp
lret
mov
mov
or
xchg
dec
imul
xor
hlt
repnz
sbb
push
jle
rcll
andb
cs
aas
gs
pop
xchg
adc
add
imulb
out
push
sarb
push
xor
sar
xor
sbb
mov
mov
gs
dec
daa
sbb
cmp
sub
adc
aas
sub
mov
out
dec
hlt
xchg
dec
shll
push
fcoml
mov
stc
fistpll
xor
lcall
fs
test
xor
aam
cmp
negb
push
insb
cmp
dec
cmpsl
aam
fs
xor
sub
orl
mov
lods
mov
mov
xor
dec
mov
jbe
sub
cmpsl
add
push
and
mov
jb
dec
jno
cli
mov
les
test
adc
mov
jb
xchg
cs
push
xchg
fxch
pop
pushf
ljmp
jnp
fmul
fs
xor
arpl
sahf
sbb
cmc
push
test
and
shrb
out
rclb
insb
testb
mov
sub
lock
push
call
dec
lods
mov
stos
nop
ror
leave
outsb
cmp
incb
adc
testb
fadd
adc
adc
clc
sbb
test
mov
ret
push
rcrb
pop
pop
add
lock
mov
inc
jp
add
dec
repnz
int3
roll
xchg
repz
inc
mov
inc
fwait
push
or
insl
push
add
testl
test
fadd
mov
iret
mov
les
in
rcrb
or
ja
mov
xchg
out
sub
sbb
mov
mov
mov
push
push
ret
mov
mulb
xchg
mov
fwait
test
lock
loop
push
pop
rcl
jmp
das
rcr
lock
daa
pop
fcoml
xchg
cmp
lcall
mov
mov
pop
notl
aam
push
insl
pop
xorb
inc
inc
fwait
test
xchg
fwait
jmp
rorl
push
xor
push
cmp
and
int
mov
lret
mov
jns
sub
test
aaa
jbe,pn
stc
cmc
out
jecxz
sbb
bound
xor
xor
xchg
mov
cmc
imul
fwait
dec
ret
gs
insl
repnz
xchg
jp
movsb
sbb
repz
test
adc
dec
push
sbbb
scas
mov
and
mov
mov
jmp
or
sbb
fldl
cmp
jno
xchg
ud1
adc
sub
lock
scas
mov
sti
sbb
add
pop
inc
adc
iret
jno
inc
mov
pop
sti
push
push
xchg
aam
nop
mov
pop
sbb
adc
xchg
adc
ja
jl
dec
ret
test
jnp
test
inc
mov
sub
sub
xchg
insl
add
xabort
sub
sbb
push
mov
xor
and
mov
sarl
mov
out
mov
popa
pop
sub
jo
iret
push
mov
mov
and
js
leave
int
or
in
jns
dec
xor
push
std
xchg
push
bnd
and
jmp
lock
pop
inc
push
lods
mov
sti
hlt
jae
mov
and
fiadds
and
jmp
bound
xor
sarl
divb
or
pushf
mov
loope
addr16
add
dec
popa
jg
clc
cmp
popa
cltd
mov
std
push
push
stos
push
inc
insb
mov
in
dec
inc
pop
adc
push
cs
dec
jnp
loopne
mov
pusha
cli
sbb
ja
imul
sub
mov
popf
lcall
mov
lcall
jge
fucomip
adc
and
inc
enter
xor
gs
popf
inc
cmpsl
shrl
stc
sub
jne
dec
js
sbb
cli
test
cmp
into
lret
jle
outsl
jb
xchg
mov
xchg
push
adcb
rsqrtps
cld
push
adc
xchg
pop
cmp
dec
out
fsubl
inc
repz
or
inc
mov
sahf
cmc
outsb
adc
insl
and
xor
sub
jle
out
leave
divb
mov
fwait
decb
sbb
test
inc
jns
jle
insb
mov
in
fdivp
div
dec
shrl
rorb
enter
cmp
mov
lret
fucomip
arpl
ret
in
loopne
ret
int
jecxz
jmp
fcomps
push
faddp
mov
sbb
sbb
jp
dec
push
iret
cmpsl
imul
leave
mov
push
mov
push
cwtl
push
jg
sub
xchg
xor
pusha
daa
ror
pop
loopne
aam
dec
shrl
pop
mov
mov
fwait
lods
xchg
mov
mov
pop
mov
or
lret
cmp
data16
lcall
scas
fdivrs
out
dec
in
mov
movsb
jae
pop
je
imul
xchg
fwait
and
fisttpll
mov
ret
jl
nop
test
inc
xlat
loop
push
movsb
repnz
inc
idiv
sahf
mov
inc
not
mov
cmp
mov
dec
pusha
jnp
arpl
dec
jne
pop
out
jl
lods
add
jno
sbb
push
cmp
je
push
jae
ljmp
insb
inc
rcll
push
cmp
das
pop
xchg
pop
sub
xchg
adc
pop
xor
sahf
add
and
mov
jbe
xor
scas
ss
fnstenv
cmp
inc
cmp
xor
mov
mov
imul
jb
mov
pop
mov
movsb
inc
rorl
popa
sbb
arpl
pop
fdivrs
cmp
sbb
ss
or
cmp
jne
jge
gs
sbb
in
das
icebp
jmp
leave
cmp
mov
and
sbb
stos
imul
jne
bound
cmc
fisttpll
fstpl
outsb
je
push
hlt
push
and
dec
das
cli
mov
mov
or
mov
test
repnz
mov
ja
in
leave
outsl
mov
lds
lret
mov
jg
out
adc
pop
ljmp
jle
into
mov
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
repnz
mov
pfrsqit1
mov
lods
pop
xchg
push
lcall
or
addr16
aaa
push
js
xchg
xor
push
sub
scas
dec
outsb
shlb
inc
ss
dec
aad
call
add
mov
mov
imull
test
xor
sub
into
jns
jl
fstpt
mov
fiadds
and
in
in
mov
gs
movsl
mov
je
shll
cmpsb
sahf
leave
inc
jmp
sbb
cmpsb
sub
bound
daa
xor
mov
leave
and
xor
data16
adc
inc
or
jle
das
add
cmp
in
lret
call
ds
push
loop
iret
xor
out
jbe
popa
cltd
and
daa
repnz
mov
ljmp
cmpsl
out
push
out
repz
shlb
adc
or
test
pushl
and
xchg
jl
fcmovu
adc
sub
loopne
int
push
outsb
push
jnp
cld
bound
pop
andl
icebp
inc
loope
xor
test
js
pop
cli
out
js
fcoms
into
adc
mov
xor
dec
out
inc
shrb
cld
xlat
repz
xchg
push
jmp
aas
js
negb
outsl
out
fdivr
imulb
cmp
mov
or
mov
pop
int
daa
icebp
fildl
lods
push
inc
call
mov
inc
jns
scas
daa
cwtl
ja
xchg
push
int
pop
dec
test
add
stc
sbb
push
push
jmp
fdecstp
pop
outsb
and
leave
iret
loopne
pusha
mov
sbb
in
inc
push
inc
outsl
sbbl
cmp
add
dec
mov
xchg
or
in
int3
sti
mov
fiaddl
fwait
sub
add
imul
lahf
jbe
push
inc
scas
xchg
push
cmp
lcall
cld
lds
aad
inc
or
push
cltd
and
and
sub
jecxz
inc
mov
addr16
mov
in
xchg
sti
out
in
push
aaa
test
push
jnp
aam
or
xor
dec
xor
stos
stos
bound
test
xlat
add
mov
idiv
sub
inc
in
xor
popa
xchg
fistps
inc
xchg
fsubl
dec
sbb
cmp
dec
cmp
lahf
sbb
arpl
add
repz
lret
aaa
js
sbb
xor
or
and
dec
call
cmp
lds
ljmp
pop
mov
loope
int
in
xchg
push
in
adc
push
cltd
leave
mov
and
mov
jno
add
je
pop
mov
daa
sti
es
iret
pusha
cwtl
lds
pop
arpl
hlt
notl
cmc
sbb
mov
imul
mov
mov
imul
inc
xlat
and
jmp
repnz
addr16
shlb
sub
adc
xchg
nop
xchg
gs
push
and
shrl
pop
rclb
jp
cwtl
popf
xchg
stos
fs
cmp
test
adc
movsl
mov
mov
sti
gs
pop
mov
in
out
call
pop
or
dec
outsb
sbb
xor
movb
or
jmp
pop
cld
push
rolb
xchg
rcll
xchg
sub
outsl
movsb
sbbb
popf
inc
dec
lea
push
cld
lds
push
out
js
mov
popf
lcall
test
adc
aad
fcomps
stos
nopl
or
pop
sbb
test
sub
adc
push
nop
jge
xor
fcomps
in
push
out
sbb
cli
sub
popf
pop
add
sub
scas
fiadds
test
push
xor
lcall
add
in
push
or
or
dec
mov
push
imul
add
and
outsl
fmul
inc
dec
popa
cli
dec
mov
mov
loop
sbbl
pop
divb
push
stos
xchg
and
test
xchg
movsl
fisttpl
sbb
cltd
and
je
dec
mov
sbb
mov
fucomi
fsubl
test
or
push
pop
lods
adc
cmp
push
xchg
int3
pop
div
cmp
cmc
sar
fs
mov
mov
das
leave
loope
push
aam
sbb
enter
call
shrl
mov
pop
dec
int3
test
push
cs
xor
outsb
fmull
cmpsb
lret
pop
jmp
and
or
test
ds
cmp
dec
adc
inc
call
jb
in
inc
fdivl
cwtl
dec
inc
mov
inc
xchg
sbbl
nop
shll
outsb
mov
test
in
mov
or
inc
xchg
pop
sbb
in
idivb
out
aaa
adcb
xchg
mov
insl
imull
out
repz
pop
jo
dec
adc
cmp
jno
out
shlb
sub
sarl
outsb
push
fsubl
inc
sti
lods
adc
out
xor
jmp
ror
sbb
jp
fimuls
add
and
daa
dec
lods
xor
xor
inc
and
push
inc
mov
xor
adc
loop
pop
inc
fwait
scas
fdivrl
pop
jge
addr16
push
push
inc
jge
mov
sub
nop
jo
rcr
pop
icebp
in
mov
mov
and
or
and
lret
arpl
mov
add
insb
cs
lock
jl
push
mov
fsubl
cmp
xor
jo
mov
mov
inc
insl
lret
push
stos
sub
sub
cmp
movl
pushf
cwtl
xor
push
repz
mov
stc
mov
fcoms
scas
xorb
lods
clc
ja
scas
icebp
lret
mov
or
mov
mov
ret
imul
push
movsb
xchg
pop
mov
mov
sti
fs
jno
or
aaa
loope
mov
push
mov
sbb
cmp
or
dec
out
xchg
popf
and
jecxz
es
imul
jnp
mov
add
pushf
loop
fs
mov
int
and
inc
push
pushf
enter
test
fdivr
cwtl
mov
sbb
cmc
mov
mov
hlt
testl
daa
fbld
divb
inc
clc
or
jae
and
adc
ljmp
jno
daa
add
scas
cmp
aas
cs
sub
addl
push
mov
stos
fs
popl
arpl
cltd
sub
imul
jnp
sahf
mov
mov
mov
push
lock
xchg
js
insb
fs
sub
jecxz
xchg
movsb
cmp
jg
adc
in
mov
adc
mov
enter
sbb
mov
dec
iret
daa
iret
sub
pop
arpl
sbb
mov
mov
jl
out
hlt
lods
rclb
mov
lret
ja
test
push
ss
jg
imul
and
ljmp
or
mov
jmp
aam
inc
test
addr16
add
sbb
loopne
push
outsl
ja
inc
mov
push
mov
adc
ja
adc
outsl
sbb
mov
push
dec
jg
pop
sarb
jmp
pop
rcrb
fwait
lods
push
and
mov
pop
mov
pop
and
adc
fstl
sub
pop
mov
push
ljmp
int
int
xchg
in
lods
out
inc
fbld
adcl
push
inc
popf
mov
pop
or
aad
inc
ficomps
addr16
jb
fidivrs
xor
push
mov
xchg
popf
ficoml
in
loopne
add
fsubr
orl
xchg
ficoml
cwtl
xlat
and
popa
idivb
push
lcall
arpl
ljmp
push
es
pop
test
aad
ret
dec
loop
lods
inc
loop
xchg
lds
xor
sub
or
push
sbb
mov
lret
mov
test
mov
lock
jb
sbb
es
lret
test
xor
pop
inc
pop
data16
sub
pop
lods
xlat
cmpsl
inc
mov
push
bound
and
repz
xchg
and
sbb
xchg
xchg
test
push
out
push
push
in
lods
xor
jne
sbb
sub
mov
lret
fcompl
xchg
xchg
shl
nop
je
insl
dec
pusha
dec
fidivrs
dec
pmaxsw
xor
aaa
aad
adc
les
cmp
cmp
aad
sbb
inc
jp
call
ljmp
push
arpl
xchg
fcompl
lds
sbb
and
aas
sbb
jb
and
mov
jp
add
push
popf
je
out
cmc
arpl
ja
jne
or
popf
ss
mov
lods
dec
std
mov
ret
sbb
push
push
sbb
test
out
pushf
mov
or
scas
add
dec
push
adc
add
and
in
ret
shlb
addr16
or
inc
pop
gs
pop
adc
jle
dec
xchg
movsl
aad
jl
mov
ds
adc
shll
imul
shl
pop
insl
mov
lgs
push
dec
jns
loopne
mov
push
mov
cmp
out
icebp
mov
roll
and
aad
add
movaps
cs
adcl
iret
xor
movl
mov
push
add
mov
jnp
popa
sub
shlb
iret
fcomp
xchg
test
push
push
out
cmc
xor
dec
loope
outsl
adc
shl
jne
or
repz
and
inc
mov
addr16
filds
xchg
cmpsl
add
das
cmp
hlt
je
xor
dec
xor
rcl
ret
dec
adc
lds
fnstenv
sub
cmp
lea
popa
cmp
xchg
lcall
arpl
rclb
mov
lret
jg
daa
mov
pop
movsb
aas
push
cmp
add
pushf
pop
filds
jo
mov
cmp
test
pop
dec
gs
insb
hlt
addr16
pop
imul
flds
add
aas
add
push
fisubrl
pop
out
jl
mov
sahf
xchg
add
cmp
inc
add
jnp
mov
gs
xchg
dec
stos
mulb
cmpsb
xor
aad
or
scas
jg
out
push
mov
dec
and
cmp
cli
mov
xor
lcall
mov
xchg
push
stos
jmp
xchg
or
ss
pop
les
push
or
mov
fcoml
mov
mov
sar
pop
aaa
test
divl
sub
mov
jge
notb
mov
hlt
clc
stos
imul
jns
sbb
cmp
jle
xchg
lret
or
test
mov
stos
enter
in
inc
fstl
aam
add
in
lcall
mov
mov
insb
roll
fdivrs
sarl
sbb
mov
adc
or
stc
push
mov
mov
pop
stc
cmc
add
cmp
adc
adc
call
pop
dec
repz
and
sub
sarl
inc
lret
outsb
sbb
cli
fistpl
ror
fisttpl
cmpb
adc
fmuls
jmp
subb
clc
mov
cli
loop
mov
push
inc
pop
jp
cmpsb
mov
pop
aas
out
movsl
mov
pop
ss
cmp
fwait
cmp
mov
rcrb
sub
mov
daa
mov
ds
and
out
xor
mov
ja
lret
mov
mov
xchg
scas
imul
mov
pop
xor
ror
daa
jo
stc
dec
cltd
jo
cmp
or
and
xchg
xor
mov
loopne
mov
mov
out
mov
or
pusha
xchg
ljmp
stos
sbb
add
nop
inc
adcl
dec
adc
and
rcrl
mov
sbb
insb
addr16
mov
jmp
mov
pop
xchg
and
addr16
call
pusha
mov
sahf
jns
fnsave
popa
enter
push
fsts
inc
push
cli
js
repz
inc
bound
push
aam
push
pop
xchg
jno
push
pop
cmp
inc
fdivrs
xor
xor
jae
repnz
or
push
fildl
jg
push
cmc
fs
mov
jp
arpl
out
enter
into
dec
in
push
aaa
in
push
adc
bound
xchg
mov
pushf
fisubl
rolb
ds
call
aam
xchg
cmp
mov
jno
sarb
pop
mov
das
outsl
sbb
inc
mov
mov
inc
cltd
push
lret
cld
rorl
and
push
and
or
cmpsb
aad
movsb
aam
repz
imul
into
in
xchg
out
fisubl
fdiv
push
cmpsl
scas
out
loope
negl
or
cmc
or
cmpsb
stos
adc
pushf
int
pusha
xor
popf
jne
ljmp
and
pop
mov
xchg
int3
sub
push
cmp
mov
inc
inc
repz
test
mov
sub
inc
xor
jmp
lahf
push
int3
xchg
jg
pop
loopne
pop
shrl
inc
shll
cmpsl
into
mov
lods
addr16
mov
sub
pusha
andl
adc
popf
jnp
in
dec
testb
mov
pop
ficomps
sub
mov
cld
or
cmp
mov
jno
repz
fidivrl
lahf
jp
dec
or
popf
rcrb
pop
das
xchg
sub
cmp
icebp
in
push
out
ret
push
out
sub
mov
inc
sti
in
lcall
fisttpl
jnp
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
adc
mov
pop
ja
push
xchg
dec
addr16
add
fdivrl
lret
fadds
ret
into
mov
sbb
mov
jp
das
mov
add
mov
js
push
mov
out
int
jb
add
inc
ret
pop
jno
or
ss
fistpll
loope
mov
mov
dec
test
add
ja
and
sbb
mov
vmovshdup
sbb
xor
lock
mov
lret
cld
sbb
cmc
dec
lret
push
sbb
mov
les
test
adc
push
aaa
movsl
mov
cmpsl
nop
add
push
inc
or
sub
xchg
sub
pop
sub
outsb
dec
or
jno
jne
mov
sti
jns
je
movsb
dec
bound
je
adcl
xor
lcall
xor
push
out
mov
push
adc
mov
adc
adc
ret
aas
dec
aaa
push
addr16
sub
pop
inc
dec
cmp
jbe
int
mov
mov
jmp
addr16
jmp
je
jns
and
mov
add
and
lock
mov
ja
pusha
cmp
xor
push
cmp
push
jmp
mov
dec
mov
pop
popf
inc
pop
pop
les
mov
sub
cs
insl
sub
mov
xor
fcompl
dec
mov
lods
popa
pop
stc
fiadds
jbe
jno
mov
adc
push
push
xchg
ds
loope
pop
or
das
aam
xchg
xlat
ja
movsb
shrb
adc
dec
xchg
loopne
std
cmp
and
repnz
sbb
dec
jmp
fistpll
adc
gs
addb
jb
and
xchg
imul
test
orb
and
mov
xchg
imul
sbb
sub
push
mov
dec
pushf
popf
and
call
data16
ljmp
xor
xchg
imul
sti
out
jge
shl
mov
jl
xchg
fwait
data16
pop
or
jb
xor
and
test
nop
incl
or
data16
add
cltd
cmp
dec
inc
xchg
stos
xchg
dec
notb
push
in
push
std
test
inc
cmpsl
sahf
sbb
sub
adc
int3
jmp
inc
jae
adcb
cmc
xor
pop
sbb
insb
gs
pop
inc
mov
movsb
or
xor
push
or
cmpb
xor
lds
and
aaa
and
ret
rorb
pushf
mov
out
mov
jae
movsb
push
popa
adc
jo
jmp
leave
xlat
mov
popa
cli
sbb
gs
scas
repz
fsubrl
out
xchg
add
jo
or
jg
imull
inc
fstpl
mov
in
jle
ret
dec
pushf
icebp
pushf
call
cmpsl
adc
inc
jae
ret
sbb
loope
sub
adc
jns
mov
iret
jle
loopne
inc
in
sub
push
fmull
add
sub
das
pusha
cs
mov
imul
push
cltd
add
xchg
fcomip
or
mov
inc
xchg
dec
xchg
outsl
stos
add
mov
mov
cmp
es
adc
pop
adc
shl
or
mov
jnp
sub
cmc
iret
or
repnz
sub
and
mov
pushf
jge
fisubs
dec
loopne
arpl
adc
and
cmpsb
inc
hlt
test
mov
push
jmp
test
or
adc
lret
mov
cmpsl
insl
xchg
leave
int3
push
add
push
sbb
fdivrs
es
push
scas
dec
pop
stos
je
movsb
fwait
lods
movsl
das
out
push
cli
imul
addr16
cld
rcr
pop
addr16
inc
xchg
aas
jb
push
testl
lock
mov
fists
jnp
ss
iret
push
mov
or
addr16
insb
arpl
ret
xchg
mov
enter
outsl
shl
xchg
sub
scas
into
mov
jnp
test
push
mov
lret
loop
mov
jecxz
addb
aas
jae
or
mov
inc
cmp
fs
xchg
jno
in
ret
in
and
mov
ds
fisubrl
scas
mov
repnz
mov
pusha
push
sahf
stos
mov
test
dec
movb
outsb
orb
push
jge
ss
out
loopne
adc
mov
shlb
sub
stos
daa
aas
mov
or
sbb
jno
mov
mov
or
cltd
sbb
test
jge
dec
in
sbb
lcall
std
cmpl
inc
cld
sbb
fisubl
and
scas
jb
ljmp
loope
jbe
inc
test
xor
cmp
adc
xchg
jp
int3
mov
rclb
clc
xor
pop
push
cmp
inc
cmp
xchg
push
jbe
inc
xchg
adc
cs
sbb
lret
outsl
cmp
out
pop
iret
das
in
mov
insl
fiaddl
hlt
jp
jg
jecxz
push
push
call
fsubrs
mov
cmpsl
sti
jns
cmc
jb
push
roll
cmp
add
int
pop
pop
push
push
pop
addr16
fists
bound
cmp
cmp
mov
push
insl
imul
es
mov
cmp
sbb
inc
mov
fisubrl
ficoml
sti
jne
and
jp
bound
jle
xchg
mov
jmp
aaa
sub
sub
inc
sti
xor
dec
mov
out
ljmp
hlt
sbb
mov
scas
aad
lcall
iret
sbb
cld
and
loope
mov
in
mov
adc
and
lods
mov
pop
loopne
enter
jp
cmp
mov
orl
xchg
xchg
push
loopne,pn
lock
loop
mov
das
mov
in
adc
push
adc
lods
dec
scas
cmp
cmp
ffreep
fadds
sbb
xchg
xchg
mov
iret
mov
dec
jecxz
loop
lea
and
jge
movsl
ffreep
cmp
or
call
shlb
mov
test
call
fdivp
mov
lea
xorb
push
sbbl
andl
xchg
adc
push
lcall
iret
push
adc
cmpsl
mov
sbb
pop
sti
or
add
and
lock
jo
adc
jmp
mov
mov
sbb
inc
push
cltd
jl
in
rcll
dec
dec
lods
mov
or
lds
or
clc
xchg
xchg
xchg
popf
dec
test
loope
inc
stos
lea
mov
sub
add
add
xchg
sbb
sub
and
xchg
mov
enter
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
sub
push
add
sahf
xchg
sub
in
cld
jp
sub
fcompl
push
insb
sbb
test
pop
popf
enter
cs
scas
rcrb
add
dec
imul
sbb
pop
mov
push
pop
imul
popa
cld
aam
add
fmuls
push
adc
loopne
cmp
sbb
jnp
pop
jmp
mov
adc
popa
lds
jle
cmpsl
hlt
test
push
pop
jnp
sahf
imul
mov
aaa
lds
ret
shlb
mov
jne
mov
sbb
dec
mov
ror
inc
repz
mov
mov
push
dec
fsubrl
push
scas
cltd
jbe
mov
sbb
inc
scas
sub
addr16
sti
insb
mov
cmc
cmp
ljmp
push
in
and
xor
imul
pop
jecxz
dec
jne
xchg
jnp
dec
sbb
sub
orb
aad
mov
xchg
aam
pop
test
xor
or
jnp
rcl
push
repnz
jmp
add
and
sbb
lods
push
cmpsb
les
out
arpl
jbe
mov
fidivs
jp
and
add
xchg
xor
lahf
mov
popa
outsb
mov
stos
push
imul
mov
out
aas
xchg
or
sbb
rcll
ret
stos
scas
sti
test
jle
jb
pop
pop
sub
nop
cmp
call
jge
movsl
lcall
pop
cmc
dec
and
out
inc
cmp
push
push
or
jle
dec
loop
shlb
sbb
sbbb
xor
pop
inc
sahf
stc
daa
hlt
jno
inc
or
loop
dec
sahf
cmp
outsb
daa
add
int3
cmp
mov
xchg
xor
pop
jp
adc
jle
ja
movsl
mov
outsb
je
dec
fs
sub
pop
test
mov
jnp
dec
daa
pushf
inc
lcall
dec
insl
xchg
popf
cmpsl
jg
mov
inc
subb
mov
loopne
xchg
cwtl
aas
jne
cmp
nop
jle
ret
lock
add
mov
xchg
inc
subl
sub
out
xchg
cmc
stos
leave
xlat
inc
pop
dec
jns
dec
jb
stos
outsb
add
and
and
push
adc
sbb
nop
push
insb
cmp
shll
test
mov
jae
orl
inc
add
pop
orl
ret
shll
repnz
mov
pop
das
cmp
cmc
jne
daa
loop
into
dec
cmp
cli
stos
scas
lods
in
jne
lock
mov
xor
push
inc
pop
jge
pop
push
pop
jle
mov
sub
jmp
pop
dec
xor
ret
ds
out
outsl
fwait
das
iret
xlat
mov
push
sbb
xchg
loopne
aam
cmpsb
xchg
pop
shrl
xchg
out
mov
shlb
shr
aad
cmpsl
jge
push
ja
adc
into
adcb
and
fnstenv
jb
ret
mov
mov
sbb
pop
imulb
cltd
sbbb
cli
mov
push
or
dec
pop
push
jge
pushf
inc
in
decb
fwait
rorb
shlb
jle
out
lahf
lahf
xor
push
and
andb
or
pop
dec
xchg
outsl
aam
test
aam
mov
sarl
mov
lahf
and
mov
mov
repnz
js
test
jp
sub
mov
pushf
sbb
gs
lods
sti
outsl
and
mov
jmp
inc
imul
sbb
out
jb
mov
mov
mov
jle
cld
mov
mov
cmp
andps
test
sahf
stc
cmp
mov
jmp
push
add
test
mov
mov
daa
and
int
and
push
push
outsb
lretw
mov
pop
xor
inc
and
jno
lcall
das
aad
sbb
adc
mov
push
outsl
or
bound
push
rcl
adc
jl
xchg
jns
xor
pushl
sbb
cmp
xor
incb
les
xor
fwait
lret
sub
adc
imul
mov
notl
inc
fnstcw
pop
lods
cmp
push
js
outsb
ljmp
pop
popf
int
jbe
lret
mov
das
xchg
inc
popf
cmpl
stc
mov
std
test
cmpsl
push
les
sub
mov
ljmp
pop
subb
shrl
fsubrs
adc
dec
add
je
cli
test
lret
xchg
out
loope
in
clc
xchg
jno
dec
inc
call
mov
mov
in
push
sub
sub
pop
jo
or
daa
cmpsb
int
or
ljmp
lcall
adc
or
int
push
or
mov
stc
int3
sub
or
xchg
sub
adc
lret
xor
sub
jmp
cmp
add
fwait
and
or
or
into
test
fldenv
inc
out
dec
stc
xchg
xchg
sub
mov
std
jns
iret
adc
or
dec
imul
jo
xlat
dec
pop
test
push
adc
cmp
nop
mov
dec
repnz
loop
leave
dec
mov
pop
cmp
addr16
in
fmulp
cmpsb
pop
gs
notl
lret
and
lret
sub
dec
push
gs
dec
dec
loope
rorl
dec
fs
add
mov
or
jge
dec
push
loope
ss
sub
bswap
icebp
pop
flds
nop
jg
cld
add
mov
insb
xor
movsb
cmp
and
int3
pop
aaa
stos
div
mov
push
sub
dec
repnz
out
mov
test
arpl
pop
test
dec
mov
push
in
gs
stos
popf
push
mov
push
cmp
pop
rcll
jne
into
sub
inc
xlat
push
xchg
in
xchg
dec
mov
push
inc
mov
mov
je
cli
mov
test
adc
jae
scas
dec
pop
dec
mov
xor
mov
jns
sbb
repz
idivl
aad
pop
lea
fldcw
xchg
test
out
add
repz
test
push
pop
mov
incl
xlat
jg
fimuls
cld
sub
cmc
lock
sub
addr16
adc
xlat
push
lahf
shlb
ds
jno
leave
pop
push
dec
mov
lahf
jnp
popf
into
pusha
sbb
sbb
jnp
aaa
jl
pop
xor
mov
cltd
sbb
and
pop
mov
pop
jecxz
sub
mov
and
mov
fsubs
xchg
xchg
lahf
aam
or
popl
int3
inc
ret
das
dec
aas
loope
aad
pop
pop
and
mov
loop
push
or
pop
dec
adc
inc
mov
cmp
or
or
por
aam
push
add
shlb
rol
push
xor
mov
mov
mov
jmp
sti
test
sbbl
popf
test
ja
jg
pop
mov
fstpl
cli
jle
dec
cmp
je
mov
dec
popa
jecxz
aaa
push
stos
xchg
inc
mov
and
lock
and
leave
pop
mov
dec
pop
rcrb
mov
sub
mov
lods
insb
lods
cmpsl
pop
dec
js
and
lcall
movsb
popf
shrb
add
pop
push
sub
shll
jns
mov
rcll
and
aas
test
xlat
inc
movsb
and
insl
sahf
inc
imul
push
out
call
lea
push
jns
jo
cmc
dec
xchg
sub
call
leave
sub
movsb
push
sbb
ret
or
dec
sbb
loope
mov
cmp
mov
adc
sub
push
stos
sub
pop
mov
cmp
push
mov
dec
add
adc
fcompl
in
jle
cltd
cmpl
hlt
xor
push
push
ljmp
scas
jbe
pop
lea
add
xchg
movsb
xchg
movsl
sbb
stc
or
mov
xchg
gs
test
fs
std
out
cld
cld
je
push
scas
shll
stos
xlat
test
dec
mov
xchg
aad
xor
clc
adc
add
xchg
das
jl
fucomi
push
movsb
idivl
add
jo
add
push
out
pop
mov
out
and
add
jle
stc
inc
jo
mov
insl
add
cmp
cmp
test
cmp
lret
jge
jae
cmc
add
out
or
add
or
pop
jo
stos
push
or
lcall
mov
jp
dec
mov
rcr
ret
shrl
dec
push
push
jne,pn
imul
outsb
call
into
outsb
mov
ret
ret
outsb
fidivrs
cmp
jb
mov
push
sbb
cmp
add
in
mov
icebp
fldt
sarb
mov
mov
repnz
imull
out
les
sbb
jnp
mov
or
repnz
jae
lahf
into
xorl
aad
gs
movsb
cmp
inc
inc
cld
rep
jae
push
in
out
mov
lods
js
cmpsl
and
jge
iret
cmpl
xor
xor
jecxz
cmc
je
idivb
fs
sub
push
test
xchg
jmp
or
xchg
mov
mov
or
stc
inc
imul
mov
ljmp
stos
in
push
sahf
pop
cwtl
xchg
sbb
ds
dec
xor
std
jo
mov
xor
dec
adc
in
and
sub
mov
dec
out
or
push
xchg
mov
fstpl
push
cmp
inc
int3
inc
adc
call
in
cmpl
inc
push
in
cmc
je
cmp
mov
push
das
imul
in
lcall
scas
mov
push
ror
xchg
icebp
pusha
or
pushf
sub
shr
or
fs
psubb
add
jb
or
sub
in
jmp
mov
cmp
dec
bound
sub
lret
cmpsb
les
push
mov
scas
sub
je
aas
inc
and
adc
pop
popa
lods
ds
orl
pop
inc
mov
test
inc
sub
pop
ja
xor
adc
ja
xchg
inc
xor
andl
push
xchg
mov
lds
mov
shl
cmp
xor
xor
push
scas
cmp
cwtl
out
test
add
pushf
and
call
sub
and
jo
and
loope
sahf
leave
icebp
icebp
pop
cmpsb
mov
divb
xor
out
and
push
int
sti
and
sub
mov
mov
pop
je
and
inc
inc
inc
inc
xchg
incl
adc
dec
call
shr
pop
push
inc
pusha
out
and
dec
lds
jae
stc
push
fdiv
stos
xchg
mov
iret
aaa
fcmovnu
out
mov
sub
adc
inc
int
sbb
mov
push
pushl
add
inc
jno
int3
jne
or
mov
hlt
jae
push
out
neg
or
sub
scas
inc
mov
push
cmp
mov
ficoml
lret
aaa
or
xchg
mov
add
mov
jecxz
sub
add
xlat
lea
int
adc
data16
adc
jp
fwait
sub
mov
inc
add
int
dec
out
out
dec
sub
mov
dec
std
mov
js
call
daa
sbb
adc
or
push
cltd
dec
mov
dec
mov
sti
dec
mov
dec
cmp
cld
jle
adc
xchg
push
idiv
cmpsb
add
lds
dec
out
sbb
inc
andb
jmp
jne
mov
jno
push
repz
push
pop
push
push
lea
sub
inc
sbb
sahf
mov
cmp
dec
push
mov
add
push
cwtl
mov
mov
adc
sbb
sbb
fistps
mov
testl
setbe
sbb
mov
mov
push
add
push
add
jno
mov
jmp
popa
or
mov
bound
mov
repnz
adc
sbb
push
xchg
sbb
popf
jnp
ja
fs
pop
mov
push
push
push
jae
int3
fs
lahf
sub
imul
mov
out
and
mov
mov
cmp
sub
sbb
sbb
or
add
inc
dec
fisttps
adc
sbb
sub
xchg
loope
cld
lock
cmp
ss
push
in
jns
dec
lcall
test
mov
push
jb
jl
push
mov
mov
cmpsb
leave
lock
sbb
cltd
mov
ret
out
jmp
xor
dec
cmp
mov
xor
xchg
mov
sbb
pushf
dec
rcrb
scas
ljmp
dec
int
notb
pop
dec
cmc
es
push
insb
daa
mov
mov
repnz
jnp
sub
adc
push
xchg
dec
mov
sbb
in
adc
das
sbb
dec
sti
sbb
pop
jo
mov
out
mov
cmpsb
bound
repz
lea
test
orl
pop
fdivrs
aaa
pop
sub
in
mov
int
test
push
or
xchg
add
push
xchg
or
and
lcall
ljmp
cmpsl
scas
sbb
ficomps
aaa
xchg
pop
sbb
xchg
sub
jge
stos
cmpsb
adc
and
cwtl
inc
inc
lahf
js
outsl
sbbl
fisttpl
mov
cmp
jge
repnz
add
pop
add
je
fistl
cli
sbb
pusha
sub
cmp
cmpb
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
enter
xor
cmc
in
scas
xchg
mov
out
test
or
cmpsl
xchg
push
sahf
cli
fnstsw
cmp
mov
outsl
lret
stos
mov
mov
xor
call
push
lcall
loop
ret
fisubrs
dec
add
lcall
lods
insb
mov
xor
aam
jb
ret
push
mov
or
dec
cmc
mov
xchg
cmp
xor
cmp
or
cmpsb
test
and
loopne
or
add
mov
popf
pop
cltd
jmp
das
sub
enter
fnstcw
xchg
add
sti
push
test
cmp
lods
sbb
cmc
call
out
clc
and
into
test
testl
sbb
fldt
mov
ret
add
shll
dec
aaa
scas
clc
insb
sbb
mov
fwait
add
jb
dec
aaa
push
xchg
add
mov
xchg
inc
mov
add
or
and
into
aam
mov
add
mov
lods
pop
dec
mov
out
pop
movsl
mul
inc
jmp
cmp
and
lods
stos
sarb
fstpl
push
roll
xor
mov
mov
sub
sti
or
and
ljmp
inc
pop
xchg
cmpsb
inc
dec
cld
pop
xchg
mov
add
xor
std
mov
and
xchg
cmp
dec
icebp
or
sbb
fnstenv
shr
jmp
push
fisubs
xor
pop
in
xchg
insb
fsubl
pop
lcall
out
mov
cmp
mov
mov
orl
mov
inc
or
dec
movsl
dec
ret
lret
push
pop
or
jo
sbb
sub
outsb
xchg
mov
jg
into
js
in
outsb
inc
stc
push
push
jge
js
ret
lcall
lret
mov
lret
cmpsb
adc
or
jno
clc
scas
loopne
test
add
push
cmp
mov
out
add
fmuls
push
out
lods
or
lods
sbb
add
mov
xchg
ret
popa
aam
stos
gs
insb
jne
xor
aad
add
les
fcmovnbe
add
jp
jge
dec
mov
cmc
nop
lcall
mov
xchg
dec
aas
ret
xchg
sub
mov
imul
xor
and
ss
jmp
inc
in
xchg
js
enter
or
je
inc
inc
repnz
jg
call
pusha
cmp
int
cmp
or
ret
sti
xor
mov
cld
mov
mov
or
cmp
sub
cmpsb
adc
movsl
jns
stos
and
sub
or
pop
cmp
xchg
in
cli
xor
mov
call
sti
mov
jae
imul
inc
add
or
test
jo
mov
pop
and
jnp
mov
jl
rolb
insl
fidivs
notb
xor
sbb
inc
mov
sarl
pop
fwait
jl
push
repnz
das
push
lret
adc
ljmp
fwait
push
or
or
add
test
lcall
pop
std
inc
push
sub
outsl
add
aad
fwait
jmp
mulb
stos
mov
fadd
push
sub
aad
push
sbb
pushf
fsubl
push
and
mov
adc
add
xchg
mov
sbb
repnz
ljmp
dec
shlb
add
dec
add
inc
and
pop
sub
and
or
dec
xchg
or
dec
rcrb
xchg
mov
and
sti
popf
inc
xchg
lock
sbb
inc
popf
cmp
dec
cmp
scas
or
cmpsb
lods
ljmp
and
dec
mov
pop
out
push
scas
or
movsb
adcb
loope
repnz
insl
cmp
or
dec
fisttpll
push
into
xchg
int3
mov
xor
mov
xlat
mov
and
dec
inc
mov
dec
push
sub
sti
in
cld
pusha
mov
scas
sbb
mov
outsb
out
jmp
in
cmp
mov
add
ds
in
flds
out
push
vpminsw
sub
push
add
jp
fiadds
mov
insb
clc
add
jno
jae
js
movsl
sti
jns
or
jnp
addr16
popl
addr16
adc
fdivr
pop
cmpsl
mov
rorb
push
aam
ds
jecxz
mov
and
jl
pop
and
pop
and
int3
dec
push
cmpsb
fsubrp
xchg
inc
shrl
sbb
test
imul
sub
lret
lret
add
dec
or
in
fucomip
push
sar
mov
jl
std
fcoml
xchg
xor
xchg
ret
mov
les
push
or
push
push
cmp
lret
aam
lods
mov
mov
daa
jl,pn
aaa
leave
fnstenv
repz
jg
or
sub
pushf
lds
dec
imul
cmp
mov
pop
lret
sbb
outsb
popa
inc
and
mov
int
push
dec
add
faddl
adc
mov
insb
shlb
xchg
add
shll
push
jno
push
pop
sub
fcmovne
ret
in
aad
or
jmp
sub
mov
cmp
aas
pop
mov
or
adc
arpl
or
or
inc
mov
es
add
cmp
jecxz
imul
das
mov
inc
nop
in
lahf
mov
out
sahf
test
test
lds
nop
int3
lahf
in
adc
xchg
cli
outsb
add
hlt
cmp
push
in
jnp
xor
sbb
sub
addr16
idiv
fisubl
or
ret
xor
out
inc
xor
mov
into
data16
xor
and
jmp
jno
orl
ds
inc
loope
lahf
and
jle
lahf
mov
or
xchg
dec
push
dec
mov
push
outsl
jae
adc
adc
push
imul
pusha
sbb
outsl
jl
sub
pushl
movsb
cltd
aaa
mov
lea
test
rcl
in
loopne
sub
popa
repnz
repz
jbe
in
mov
aas
adc
jbe
fs
mov
dec
fdivs
xor
and
fsubrs
nop
stos
mov
xchg
into
xor
cmp
and
mov
push
inc
int
shl
adc
cmp
inc
stos
adc
int
nop
sbb
out
dec
adc
push
cld
jmp
fs
stc
outsb
mov
jmp
sbbl
xchg
sub
xchg
inc
call
repnz
dec
popf
mov
lods
lds
dec
int3
sbb
or
dec
add
inc
mov
mov
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
pfmax
shlb
adc
dec
inc
push
or
pop
daa
ret
mov
int
xchg
add
xchg
in
sub
push
sub
aam
sub
mov
pop
adc
or
push
shrb
pop
iret
xor
adc
outsb
clc
cli
and
mov
adc
iret
cmp
iret
mov
lcall
fadds
and
mov
dec
pop
outsb
push
pop
or
push
outsl
mov
lcall
outsb
dec
sub
and
cli
test
xlat
movsb
stos
je
cmp
ficoms
mov
dec
push
mov
pop
popf
sti
out
mov
add
lock
outsl
inc
push
sub
mov
sbb
mov
test
push
test
push
xor
or
iret
lea
push
push
xor
sbb
sbbb
outsb
pop
fdivs
xor
add
add
shr
sbb
sbb
and
stos
in
xor
es
dec
push
pop
jle
lahf
andb
dec
dec
sbb
push
dec
mov
cmp
cli
pop
jno
mov
lods
fs
je
daa
mov
addb
mov
xor
sbb
imul
icebp
xchg
outsb
mov
hlt
outsb
arpl
fsubrp
and
mov
push
sti
int
jbe
sub
lock
cmpsl
dec
pop
movsb
mov
int
cli
push
sbb
or
test
mov
xchg
int3
and
in
lret
into
lcall
cwtl
jmp
sti
pop
adc
mov
sub
xchg
testl
outsl
xchg
cmp
cld
push
dec
sbb
loop
cmp
push
pop
mov
imul
inc
or
mov
mov
in
imul
and
ds
inc
mov
add
sbb
addr16
popa
push
xchg
push
pop
lret
jb
or
xchg
xlat
xor
in
ss
jle
cmp
cs
sub
mov
mov
jl
xor
pop
mov
test
push
lahf
sub
mov
jecxz
mov
sub
cmp
cmc
mov
and
inc
mov
xor
test
subb
xor
add
pop
or
sbb
mov
jnp
popa
jle
int3
mov
ljmp
in
das
lret
sbb
lock
andl
mov
push
jo
mov
and
repz
and
jmp
clc
adc
ljmp
into
push
test
sbb
fsubl
ljmp
je
cwtl
nop
iret
outsl
xor
mov
push
pop
es
clc
es
mov
jns
mov
sub
add
or
cwtl
xchg
aas
lods
dec
jne
in
shlb
mov
mov
cmp
in
cmp
imul
pop
pop
lret
mov
jmp
or
into
mov
lret
rcr
pop
leave
call
movsl
pop
ds
enter
jns
sahf
dec
data16
flds
test
arpl
sbb
add
outsb
pop
gs
popa
pop
aaa
xchg
pop
cmp
scas
and
into
cmp
mov
xor
loope
call
mov
daa
jo
imul
cmp
mov
mov
push
aaa
mov
mov
mov
or
inc
test
sbb
insb
cmp
orl
les
mov
mov
fndisi(8087
sub
popa
jmp
inc
pop
or
fdivrl
push
aad
lahf
jae
popa
pop
sbb
out
int
or
scas
and
push
cmc
adc
enter
push
sub
cmc
sahf
mov
pop
fiaddl
sub
pop
mov
dec
pinsrw
js
and
pop
inc
pop
push
ljmp
dec
fistpl
jecxz
gs
jge
xchg
pop
outsl
inc
jbe
push
lahf
popf
push
rcrb
ret
stc
mov
mov
or
sub
shr
int3
jp
mov
and
add
pop
jne
loope
test
scas
mov
je
jne
test
jns
addl
push
mov
xchg
xchg
sub
lods
mov
mov
mov
inc
stc
dec
jbe
popf
in
push
mov
out
inc
sub
in
jl
add
mov
out
mov
push
xchg
xor
imul
or
mov
mov
sbb
fimuls
inc
aad
es
mov
out
in
dec
in
mov
cmp
lods
leave
and
sbb
mov
inc
sub
adc
cwtl
or
xchg
jecxz
jle
jle
pop
cld
mov
pop
inc
fcoml
jecxz
jmp
pusha
outsb
mov
dec
mov
mov
mov
jae
adc
mov
push
movsl
add
pop
jne
clc
pop
xchg
mov
popa
adcb
jmp
pushf
sbb
das
fdivr
jg
outsb
fnstenv
scas
cmc
in
scas
pop
out
xchg
std
cwtl
dec
test
lock
daa
cmc
dec
cmp
xor
and
pop
and
iret
std
lret
jns
pop
mov
and
imul
popa
cmpl
ljmp
and
xor
add
xor
and
test
adc
les
jo
and
ror
pop
mov
mov
mov
js
cmp
mov
outsl
and
dec
add
pusha
xchg
and
outsl
leave
orb
and
enter
jl
mov
sti
dec
into
and
gs
insb
pusha
rcl
fcomps
nop
cs
cmp
mov
stc
sti
in
adc
mov
bound
push
lods
rcll
aad
xor
stos
lahf
push
in
adc
jbe
stc
pop
mov
xchg
rclb
pushf
xchg
xor
jne
jne
or
xchg
xchg
aas
mov
mov
cmp
or
add
std
pop
sbb
pop
mov
xor
aam
pop
adc
pop
or
leave
int3
loop
jnp
mov
jp
into
pop
dec
pop
mov
xor
push
pop
xchg
lcall
pop
sbb
adcb
mov
jb
orl
dec
xchg
faddp
movsl
out
ret
and
pop
push
push
dec
loop
mov
cmpsb
call
mov
pop
adc
js
push
pop
or
sbb
lock
ljmp
mov
int
xor
test
xchg
pop
sbb
ja
ret
mov
les
aas
in
aad
add
mov
sbb
clc
imul
aam
mov
xchg
ljmp
xor
jp
lods
jb
inc
ja
sti
sbb
das
scas
jbe
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
cs
adc
psrld
sub
pop
mov
xor
push
addl
mov
sub
jecxz
cwtl
pop
pop
bound
loop
cmp
scas
cmc
pop
stos
arpl
lock
jmp
push
jg
jae
int3
pushl
dec
sub
add
lcall
cld
mov
mov
cmovne
sub
cmp
ror
inc
subl
mov
fwait
mov
int3
or
jns
or
sub
in
aam
mov
cmp
cli
add
inc
daa
jns
int
xlat
cld
aam
lret
mov
lods
pop
repz
push
fimull
call
mov
jno
fwait
out
clc
sub
clc
xor
jo
mov
or
lahf
and
or
cmpsb
xor
xchg
adc
cmp
fsubrs
in
mov
dec
mov
cs
push
mov
aas
rclb
fists
cwtl
test
xor
cmp
mov
popl
repz
ret
sbb
test
adc
imul
sti
xor
xor
ljmp
into
in
fdivl
dec
insl
pop
pop
mov
sbb
in
inc
push
cmp
cmp
mov
test
xchg
test
testl
dec
fbld
fmul
ds
mov
lods
fisttpl
scas
xor
cmp
xchg
and
sar
pop
std
xor
mov
ret
jno
or
lahf
in
mov
jecxz
adc
dec
sti
loopne
push
pop
cmpsl
in
mov
icebp
mov
mov
push
xchg
add
push
popa
jge
and
dec
das
jb
hlt
sbb
xchg
fs
or
mov
das
lods
adc
dec
push
cmc
xchg
stos
inc
cmp
xchg
mov
pop
mov
out
and
inc
out
inc
int
xorl
sbb
pop
dec
xor
subb
cmp
iret
pop
or
enter
enter
andb
mov
sub
sbb
test
pop
in
xor
ljmp
lahf
mov
inc
add
data16
dec
fcomi
sub
popf
xchg
and
and
push
outsb
call
fnstcw
shll
into
push
cmp
mov
cmp
lock
insb
push
rorl
jmp
dec
shll
mov
add
sub
push
insl
cmp
pop
clc
push
push
inc
mov
mov
daa
dec
orl
xlat
xchg
test
call
jmp
cmp
cmc
cld
xchg
scas
sti
xor
push
push
idivl
inc
pop
hlt
xchg
test
xor
or
jns
int3
inc
jp
int
xchg
cmpsb
stos
jne
test
lret
xor
das
cmp
jbe
outsb
or
or
pop
aad
inc
xchg
jge
sbb
xor
mov
inc
dec
mov
aaa
add
jns
add
push
sub
push
testb
hlt
insl
std
pop
jmp
jno
pop
xor
in
outsl
mov
mov
mov
fucomp
pop
fimuls
js
xor
popf
add
pop
loopne
fcomps
push
mov
leave
mov
or
popf
in
push
mov
push
cld
aam
shlb
push
dec
loopne
repz
enter
and
loopne
rorb
das
addr16
rorl
pop
stos
pop
mov
movsb
decl
les
jg
xchg
mov
and
sbbl
sub
jl
stc
jmp
data16
out
inc
bound
add
repnz
pop
popf
dec
cmpl
dec
popf
mov
xchg
jl
sbb
cmc
and
mov
ret
lret
push
inc
sbb
xor
loope
mov
sub
add
mov
les
ror
push
pop
cmp
ret
ljmp
out
mov
jnp
daa
add
cmp
into
out
jae
pop
ds
gs
adc
leave
dec
bound
add
lcall
xchg
gs
pop
test
add
jbe
ds
push
imul
inc
sbb
fiaddl
loop
mov
xor
fildll
add
mov
call
cmpsl
push
jae
nop
leave
mov
push
jecxz
mov
xor
mov
inc
arpl
insb
test
sbb
pop
inc
lods
or
fadd
cmc
dec
mov
pusha
enter
mov
call
jp
push
lds
or
ds
test
xor
mov
insb
push
push
test
jecxz
cli
cmp
test
sub
push
popf
or
xorb
js
mov
xchg
into
dec
movl
jge
cwtl
xchg
sahf
and
push
cmp
movsb
mov
sub
fcomip
fst
mov
xor
add
insl
pop
jae
outsb
movsl
push
inc
cmp
sbb
sub
test
into
xor
dec
jge
jle
xchg
cmpsb
testb
orb
lret
out
xchg
sbbl
adc
out
cli
popf
push
mov
inc
movsl
push
repz
pop
out
test
imull
movsb
or
push
sub
popl
and
dec
dec
mov
cmp
mov
pop
das
mov
in
and
jnp
mov
cwtl
loop
lea
lahf
out
aad
add
mov
test
out
mov
test
sub
mov
fisttpl
scas
cld
or
in
mov
fbstp
adc
repz
mov
and
fs
sub
mulb
ficoms
pop
push
mov
fcoml
cmp
jg
out
push
sbb
adc
test
test
subb
sarb
inc
cmpsl
lcall
push
jne,pt
loopne
mov
jl
lret
pusha
jmp
test
jp
gs
incb
dec
cmp
cmpsl
mov
xchg
inc
cmp
test
cli
pop
je
sbb
sahf
cmc
popa
pop
nop
cmp
pop
sarl
scas
xchg
jno
and
sub
or
push
stos
lret
fucom
mov
insb
das
je
or
sub
adc
popf
cmp
jbe
cmp
jno
sbb
add
mov
sbb
sbb
adcb
bound
pop
xor
loopne
mov
or
pop
inc
pop
add
inc
subb
sub
int
jge
ja
xchg
outsl
or
sbb
jmp
ljmp
cli
dec
mov
aad
rorl
daa
push
sub
jno
pusha
sbb
ror
repnz
inc
push
stc
xchg
lcall
gs
in
push
iret
and
fstl
cld
mov
enter
ret
mov
mov
inc
ret
jp
add
dec
cmpsl
jl
fldcw
cmpsl
enter
inc
add
les
fadds
mov
ja
out
pop
mov
in
pop
xchg
jp
insl
cmpsl
cmpsb
fldt
mov
iret
and
mov
popa
xchg
jmp
push
jns
divb
hlt
gs
lret
mov
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
add
ja
adc
mov
sub
sbb
push
or
fmul
pop
lret
mov
mov
sahf
adc
add
inc
dec
rcl
pop
hlt
rorl
xor
mov
std
and
inc
lret
clc
sbb
push
mov
mov
xchg
mov
nop
aaa
mov
pop
cmpb
and
aam
notl
push
cld
or
ja
inc
sub
addr16
movsb
testl
dec
fsubrs
int3
loop
dec
inc
js
fdiv
inc
enter
das
or
out
mov
add
cmpsl
int3
lcall
or
sbb
fs
stos
out
sub
dec
jl
mov
dec
mov
xchg
mov
mov
push
dec
fistpl
mov
lcall
mov
lret
mov
dec
lret
scas
inc
rorb
mov
int3
xchg
dec
pop
add
dec
cmp
aaa
pop
jle
cmp
les
mov
or
inc
lods
fbstp
inc
out
cmp
sbb
xchg
cmp
mov
fmull
mov
or
scas
sbb
fiaddl
xchg
ret
xchg
shrb
data16
fnstsw
mov
test
cmp
stos
je
jns
loope
lea
push
imul
ret
or
or
inc
pop
fsubrl
pop
jp
dec
push
jecxz
sti
lods
push
xchg
gs
cwtl
aas
mov
mov
mov
cld
mov
fstpt
shll
sti
xorl
std
add
and
mov
sbb
jo
insl
mov
ret
ja
fidivrl
nop
push
ja
aad
push
pop
shl
xlat
sub
jmp
sub
mov
mov
mov
es
inc
cmp
dec
xor
das
lcall
dec
pop
xor
xchg
div
movsb
add
jo
cmp
pop
push
movsb
idivl
xor
roll
mov
sub
xchg
loopne
enter
adc
fiadds
fdivrl
hlt
sti
repnz
cmc
int3
cmpsb
sbb
xchg
mov
pop
mov
mov
jne
lods
sti
aad
push
sahf
jns
popf
sti
cwtl
lock
ljmp
inc
lret
in
mov
xor
sahf
mov
or
sahf
jge
xorl
andl
hlt
dec
mov
ficoml
sub
iret
aad
pop
daa
add
mov
mov
xchg
push
cltd
and
xlat
cmpsl
cmp
jle
sbb
stc
and
xchg
mov
ds
rcll
pop
testb
sub
addl
sub
cmp
mov
push
jp
jbe
and
fsubrs
mov
pop
shlb
addr16
and
mov
out
mov
jmp
jnp
stos
xchg
push
outsl
call
jg
xchg
inc
mov
je
pop
fwait
jmp
and
loope
xchg
mov
or
jmp
roll
cli
pop
mov
mov
lret
sbb
inc
outsl
pop
jge
adc
mov
lds
pop
movsl
cmpsl
and
xor
addl
pop
adc
and
jge
inc
sbb
ja
adc
test
adc
sub
out
lock
pushf
and
mov
sbb
sbb
rorb
pop
and
iret
pop
shl
outsb
ds
push
daa
in
pop
push
and
cmp
aad
in
fisttpl
fs
mov
sub
jp
dec
xchg
js
jp
sub
add
cmp
imul
sbb
adc
dec
jo
mov
xchg
inc
xchg
push
xchg
dec
sbb
call
sbb
rol
xor
mov
xchg
cmp
call
mov
or
xchg
push
lret
sbb
pusha
add
das
fisttps
inc
add
push
pop
add
xchg
es
cs
ficoml
pop
stos
mov
adc
lods
into
arpl
xor
cmp
in
loope
faddl
or
xchg
mov
cmpb
movsl
imul
push
pop
out
pushf
popf
loopne
mov
call
scas
jne
int
inc
and
push
sahf
and
inc
xor
pop
lock
imul
inc
jmp
push
in
mov
inc
sbb
and
pop
jbe
mov
sbb
rorb
inc
dec
sbb
pop
ja
bnd
or
cwtl
in
mov
lcall
xchg
and
cltd
dec
xchg
add
pop
mov
push
push
repz
push
popf
push
pop
idivl
mov
jmp
xor
mulb
dec
dec
or
mov
and
inc
mov
push
les
dec
xor
jnp
dec
mov
iret
aad
lcall
xchg
xor
xor
or
sahf
divb
inc
dec
sub
mov
and
cmp
mov
lret
aaa
popf
sbb
adc
push
ret
stc
in
ja
push
lock
lret
jle
icebp
aaa
outsb
xor
adc
jno
pop
inc
push
fwait
mov
pop
jnp
xchg
daa
pop
fistpl
or
mov
cmp
xlat
mov
int
movsl
xchg
mov
adc
xchg
fwait
mov
imull
fbstp
clc
pop
mov
fcmovne
cmp
outsb
cmp
enter
sbbl
sahf
sbb
clc
adcb
pusha
and
sbb
cmp
adc
pop
std
mov
out
mov
popa
lock
inc
mov
adc
or
mov
add
lds
das
mov
inc
xor
adc
pop
mov
sub
xor
add
orps
loopne
jmp
aas
repnz
mov
into
and
fldt
in
lret
jl
inc
ret
subl
lret
lcall
and
shll
adc
call
push
ret
pop
mov
lds
sbb
pop
cmpsb
sahf
mov
adc
xor
leave
sbb
rorl
sub
into
push
xor
xchg
rcrl
loope
mov
xchg
adc
sbb
push
cmp
mov
and
push
ret
les
cmp
shll
mov
shlb
aam
dec
mov
ja
pop
pop
xchg
push
and
jae
jmp
xor
incl
adc
cmp
out
test
dec
aad
jl
loopne
movsb
sub
xchg
fimull
out
xor
int
pop
inc
ss
aaa
or
mov
sar
lock
iret
jge
insl
cld
pop
test
ja
or
dec
lds
dec
aam
es
pop
lods
mov
aam
loopne
push
imul
repz
fstpt
outsl
push
shrb
mov
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
int3
and
jns
icebp
pop
movl
mov
mov
pop
cmpsl
outsl
scas
pushf
or
mov
addl
and
dec
pop
jbe
ret
stos
dec
cmp
ret
pop
push
test
loopne
and
repnz
shll
pop
mov
add
adc
jecxz
xor
int3
jns
sub
pop
rorl
sbb
push
ret
hlt
test
push
jecxz
jno
and
idiv
push
push
mul
lea
loopne
push
stc
push
test
pop
out
xor
add
pop
jb
les
cmp
or
pop
inc
popf
mov
fbld
insl
fyl2x
adc
shrl
fwait
fwait
insl
xor
jns
xchg
test
add
mov
enter
lds
xor
addr16
arpl
pusha
mov
xchg
leave
aas
jns
xchg
test
fistpll
and
dec
and
hlt
sbb
fcmovnu
scas
dec
pop
imul
jg
fs
lret
jns
and
and
cmp
jnp
in
adc
rclb
mov
cmp
xor
out
lock
shll
rorb
rorl
fsts
popf
inc
mov
stc
mov
mov
lret
xchg
push
insb
jo
jae
and
leave
bound
in
inc
loopne
ljmp
pop
sahf
xchg
ret
ds
insl
jmp
cmp
adc
sub
clc
mov
cmpb
int
rcrb
sarb
xchg
adc
dec
jne
in
xchg
cwtl
pop
cmpb
adc
mov
jecxz
adc
and
cmc
nop
sbb
mov
in
lods
pusha
xchg
push
fdivl
dec
test
add
int3
pushf
pop
cltd
jo
xor
inc
add
fsubl
or
jg
aad
inc
sbb
push
cli
scas
sub
inc
js
lcall
adc
test
filds
js
test
add
push
mov
xlat
mov
notl
add
sub
cwtl
shll
dec
mov
mov
cs
push
jbe
aad
int3
in
push
in
dec
push
test
jecxz
fdivrs
pop
mov
shll
popa
mov
xchg
or
negb
jge
leave
cwtl
es
inc
rcr
push
mov
mov
fdivrs
mov
testl
ljmp
icebp
jnp
icebp
add
or
pop
cmp
xor
xor
ds
push
xchg
fcmovne
push
push
mov
das
xchg
stos
and
jp
inc
ja
cmp
push
and
mov
adc
movsb
cmp
leave
cs
adc
or
rcl
push
sub
inc
and
or
sub
les
imul
imul
je
in
push
mov
dec
jae
adc
adc
xchg
lds
testb
add
arpl
mov
bound
push
cmp
push
dec
fimuls
rorl
movsb
rcll
add
int3
aas
sbb
mov
pop
and
shlb
shrd
call
xchg
jns
push
mov
xchg
fwait
inc
mov
xchg
adc
xchg
jle
outsl
arpl
and
pushf
push
xchg
adc
jbe
pushw
dec
out
inc
rcll
into
jmp
in
pop
out
mov
add
xor
xor
push
js
repnz
sbb
and
addb
xchg
outsl
pop
inc
sbb
in
jae
jns
and
mov
mov
arpl
sub
jge
xor
aad
popa
movsb
adc
mov
fcompl
lods
or
test
pop
add
imul
movsb
jne
outsl
inc
pop
packuswb
jmp
aam
sbb
inc
mov
lods
cmc
test
movsl
xchg
shll
inc
dec
sbb
in
xchg
cmp
dec
xchg
cltd
jmp
movsl
js
lahf
or
std
xchg
bound
dec
mov
shrb
test
scas
xorb
cmpl
dec
pop
in
adc
mov
movsl
cld
add
shrb
pop
addl
push
lret
xor
out
jns
cmp
adc
movsl
inc
mov
ds
push
or
lcall
add
jmp
fildl
or
pop
fldl
mov
loopne
lock
or
adc
sub
ds
in
bound
mov
shrl
mov
cmpsl
jmp
xchg
icebp
xor
into
pop
ds
sbb
jle
testl
mov
xchg
test
mov
insb
loope
xor
cmp
fsubs
jns
test
xchg
inc
pop
push
ret
xor
jno
inc
jmp
out
inc
fs
cmp
fildl
cltd
mov
sbb
mov
ja
add
loop
push
pop
inc
mov
sbb
mov
cmp
das
cmpsb
xor
in
hlt
adc
dec
xchg
js
insb
inc
fnsave
fsub
sbb
xchg
or
out
std
jmp
mov
std
dec
andl
pop
xchg
mov
addl
mov
mov
push
inc
or
ljmp
lret
dec
lods
pop
in
xchg
idivl
fdivrl
add
adc
xlat
push
xor
and
sbb
test
js
dec
fdivs
movsb
pop
pop
push
dec
xchg
cmp
es
dec
sub
push
and
mov
js
add
lcall
xchg
rolb
dec
movsl
jb
mov
sbb
fnstsw
inc
cmp
insl
insb
lcall
mov
jg
cltd
loope
pushf
fdivrl
aaa
lods
xchg
lock
xor
sub
push
mov
xor
cmp
jbe
inc
subb
leave
dec
inc
dec
xchg
jns
cmp
pop
out
sbb
pushf
jae
bound
sub
repz
jl
rol
xchg
shrl
cmpsl
popa
jle
std
rorl
aas
mov
jmp
lahf
shl
into
testb
push
xchg
and
cmp
cmpsl
mov
nop
xchg
xor
mov
adc
out
jo
add
xor
lds
sbb
mov
in
xchg
mov
insl
pop
lcall
xor
jl
cltd
push
adc
leave
or
rclb
je
fstps
pop
xchg
cli
cld
in
test
cmp
and
arpl
jp
pushf
and
aaa
das
jp
xor
jg
jo
adc
xchg
call
adc
lret
pop
jg
pusha
jae
outsb
and
push
into
xor
dec
out
jle
das
or
push
push
mov
mov
in
mov
inc
jnp
in
fistl
xchg
and
dec
cmp
bound
cmp
leave
icebp
push
lods
push
jecxz
test
mov
ss
mov
mov
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
pusha
popa
cwtl
cmp
movsl
aam
cmp
xchg
fsubr
or
adc
jns,pt
dec
loopne
or
jo
jnp
arpl
sarl
cmp
xchg
mov
in
jle
int3
pop
ja
xorb
imul
js
mov
in
pop
mov
int3
rcll
int3
sub
daa
mov
and
iret
dec
add
scas
push
xchg
out
aad
xchg
nop
jno
sbb
bound
cmp
add
fnstcw
rcll
ror
xor
lcall
leave
fisubs
daa
call
cmp
movsl
and
fimuls
mov
xchg
int3
dec
pop
mov
cmc
outsl
mov
jbe
mov
in
stos
loope
dec
sub
aas
scas
xchg
test
fsub
add
sub
psubw
add
jmp
or
dec
mov
mov
movsb
shrl
incb
imul
imul
mov
add
jnp
rorl
mov
iret
das
ret
test
jmp
std
test
dec
xor
lock
das
inc
in
jb
mov
mov
pop
push
enter
fstpl
je
pop
add
aaa
and
scas
pop
fcomps
jle
jmp
aad
push
fimull
movsb
fstpl
push
cmp
lcall
in
cmp
shrb
sbb
cmp
xor
xchg
fxch
mov
sbb
dec
adcb
push
push
mov
push
inc
cmp
push
nopl
idivl
push
movsl
xchg
dec
popa
or
pop
jp
and
sbb
stc
rdpmc
ret
push
daa
lcall
sub
inc
and
mov
push
and
mov
adc
es
jl
in
adcl
adc
fnsave
fs
mov
daa
inc
jle
iret
divb
fdivr
inc
push
xchg
pop
add
into
stc
loopne
enter
rep
nop
jge
pop
shrl
pop
mov
mov
sbb
push
in
aaa
inc
fstpl
pushf
jns
je
iret
inc
jns
loope
out
daa
adc
lods
jbe
lcall
fdivrs
xlat
pop
mov
pop
dec
mov
mov
mov
cwtl
jns
cmova
or
pop
inc
rorb
adc
shrb
pop
fisttps
jae
cld
shlb
xchg
fwait
xchg
inc
push
clc
fistpl
and
jge
lahf
pop
mov
outsb
push
in
pop
push
xor
popf
cmp
xchg
pop
pop
mov
clc
mov
pop
jecxz
shrl
fwait
mov
inc
loopne
enter
jns
pop
mov
dec
int
add
outsl
sub
inc
out
pop
sub
cmp
add
adc
data16
xchg
ds
dec
cmp
shll
dec
cmp
jg
xor
push
cltd
sahf
movb
pushf
fwait
lea
or
mov
imul
bound
xor
cld
leave
ja
movsb
dec
cwtl
and
iret
sub
and
sahf
cmp
sub
imul
rol
fisttpl
jge
add
push
das
push
scas
inc
jle
jno
insb
xor
inc
nop
gs
jb
lcall
cs
mov
adc
xchg
in
mov
mov
in
aas
mov
sub
adc
cmp
and
das
dec
loop
sbb
jno
or
ds
push
call
decl
push
fs
pusha
pop
pop
rol
lea
or
inc
stos
fstpt
daa
xlat
mov
push
lods
push
jecxz
andb
aad
cmp
imul
lret
mov
add
dec
jno
push
sbb
xchg
mov
in
fcmovbe
mov
mov
jl
pushf
cmp
mov
mov
pop
dec
insb
jns
aad
jmp
sbb
push
int3
push
mov
and
sub
dec
adcl
mov
mov
add
push
xchg
cmc
sahf
push
ja
loop
cmp
cmpsb
inc
flds
lds
pusha
lods
sar
rolb
test
jo
sbb
jmp
adc
js
fmuls
lock
push
repnz
ficomps
loopne
or
push
inc
and
jmp
sbb
insl
push
fstl
xor
push
dec
lcall
iret
into
jmp
add
addb
fisubl
pushf
sbb
push
xchg
int3
jl
xor
andl
incl
mov
lret
pop
or
mov
sbb
fnsave
xchg
push
adc
jno
insl
loope
cmp
mov
push
idivb
lea
nop
or
stos
add
fcomip
sub
lea
inc
bnd
jns
mov
sti
fs
mov
mov
xor
cmc
inc
dec
jno
leave
cltd
dec
sti
movsl
mov
jns
jp
add
mov
cmp
jno
dec
lea
cmpsl
adc
lods
shll
rcrl
mov
dec
test
xor
xchg
shlb
aaa
unpckhps
or
push
jns
out
test
mov
loopne
add
adc
lahf
inc
cs
or
xlat
cmpl
push
cmc
mov
gs
popf
adc
stos
subl
imulb
lcall
adc
pop
xchg
add
mov
std
adc
jo
dec
aas
fsub
jne
dec
lods
test
xchg
in
jecxz
dec
mov
jbe
cltd
cmp
add
jno
cwtl
out
xchg
or
popl
sbb
orl
int3
insl
leave
std
shl
mov
inc
jmp
or
sub
enter
adc
xor
idiv
mov
ficoml
adc
shlb
pop
mov
mov
dec
or
divl
imul
dec
xchg
and
mov
test
sub
jl
movsl
xor
daa
cmp
mov
pop
jmp
cmp
cli
dec
or
sbb
push
xchg
pop
and
iret
in
push
gs
mov
cmpsb
dec
loop
jecxz
daa
fstps
popf
sbb
push
jecxz
test
mov
fwait
xchg
mov
cli
addr16
pop
dec
or
fsubr
lcall
mov
test
sub
inc
xlat
inc
push
push
push
push
pop
ret
ret
ds
sbb
ljmp
pop
loop
loopne
test
mov
lock
xor
push
push
jp
mov
ss
cmpsb
pusha
insl
and
push
or
inc
xor
testl
in
sub
xor
push
je
or
push
and
dec
pusha
mov
shl
jae
dec
bound
int3
test
ret
add
pop
jl
daa
ljmp
mov
mov
jmp
ljmp
sub
cmc
add
xchg
jae
add
ja
sub
sub
xor
cmp
mov
bound
ja
sahf
ds
test
add
fldenv
mov
int
mov
into
jns
out
cmpsb
scas
ss
stos
inc
sub
xchg
outsl
ret
test
stos
sar
xor
fwait
jno
sbb
mov
push
dec
and
es
fwait
mov
adc
andl
mov
leave
out
pshufw
mov
sbb
and
js
push
js
add
imul
add
and
movsb
sbb
mov
rorl
push
and
xchg
outsb
test
in
dec
jg
adc
dec
push
add
bound
and
call
test
mov
push
test
push
addr16
xchg
xor
shl
and
or
mov
aas
sbb
xor
sbb
add
ret
xchg
pop
mov
movsl
imul
out
in
cld
mov
mov
mov
icebp
ljmp
fimull
scas
pop
push
inc
dec
push
je
sbb
scas
cmp
adc
jmp
jmp
imul
stos
shl
jne
leave
movb
popf
jb
mov
xor
icebp
inc
mov
neg
data16
ss
lds
push
xchg
mov
scas
hlt
aaa
fimull
xchg
xorl
fldcw
pop
and
cmc
jle
mov
fucom
pop
int
cmpsb
ret
cld
jnp
or
aam
inc
sbb
sub
fstp
test
popf
mov
or
outsl
jnp
sbb
sbb
pop
sbb
repz
hlt
cwtl
xchg
add
and
cmc
test
pop
popa
sbb
cmc
rorb
dec
rolb
imul
cmp
push
push
sbb
jmp
jmp
adc
pop
lds
andb
fidivs
cmp
mov
mulb
jne
xchg
dec
sti
xchg
leave
cmpl
ja
into
idivl
pop
xchg
sar
enter
jmp
das
jl
jb
push
cli
mov
mov
push
mov
push
sub
fmull
or
daa
or
mov
das
aam
cwtl
dec
std
daa
insb
fsubrs
cmp
mov
pusha
cmp
mov
or
push
bound
aas
jge
cmp
push
mov
aas
in
sbbl
mov
push
repz
and
sbb
fwait
dec
mov
cli
add
call
iret
stos
push
fildl
dec
jnp
ljmp
add
jno
sub
jae
push
cmp
push
add
inc
fcomps
cld
ficoms
and
jnp
fiaddl
mov
pop
ficoms
clc
je
call
push
mov
pop
movsl
push
xor
pushf
xor
sbb
pop
dec
push
call
sub
pop
ja
mov
cli
fcomps
cld
xchg
fiaddl
cli
inc
sub
jnp
hlt
ja
out
jbe
repz
cltd
sub
ja
ret
hlt
mov
jne
push
add
mov
rcll
dec
sbb
jae
repz
outsl
add
std
xchg
sub
xor
call
sbb
stos
add
call
cmp
lret
sbb
pop
push
xorb
jmp
inc
lahf
int3
xchg
mov
les
adc
das
pop
dec
ljmp
mov
aad
push
idivb
lock
notl
mov
js
ret
xchg
bound
xchg
inc
ret
cmpsb
pminub
xor
lcall
inc
loope
test
dec
push
push
jge
jecxz
repnz
sub
add
loop
sbbl
sub
repnz
int3
mov
pop
xor
or
je
loope
and
lods
sub
or
fwait
xchg
xor
sbb
out
jmp
pop
icebp
lods
and
add
or
mov
cwtl
push
ja
lahf
dec
add
into
inc
lcall
aas
and
and
adc
mov
fstp
mov
mov
in
cli
cmp
insl
push
scas
sbb
xchg
mov
mov
mov
and
jne
lret
inc
push
or
in
movsb
lods
adc
and
orl
and
dec
lahf
push
inc
movb
fistpll
sub
into
xor
pop
pop
pushf
idivl
jle
imul
add
cmp
scas
cs
jns
pop
xchg
or
xchg
sbb
inc
xchg
xchg
lcall
and
push
add
shrl
xor
loop
repnz
lods
int3
dec
bound
idivb
jae
pop
ja
push
jnp
dec
push
push
sbb
pop
cli
movsb
mov
ds
js
shlb
cmc
push
out
test
jo
inc
shlb
sub
hlt
mov
test
sub
pop
jl
jge
sub
insb
and
push
pop
fidivrl
sbb
fsts
cmp
add
insb
pushf
or
mov
dec
push
inc
inc
hlt
or
decl
add
mov
inc
xchg
lahf
sahf
fsubrp
lods
push
push
pop
xor
mov
mov
xor
jne
pop
xchg
lret
and
dec
ficompl
testl
or
sub
mov
aas
repz
jecxz
clc
mov
out
sub
pop
or
stos
int
add
enter
rorl
mov
pop
leave
mov
push
sub
imul
bound
jae
sub
rolb
cltd
or
iret
sbb
jp
inc
mov
jmp
mov
pop
inc
fildll
xor
jp
adc
cmp
push
dec
loop
cltd
cld
lret
je
inc
cwtl
in
cld
fucomip
mov
add
mov
pop
sbb
dec
int
dec
xchg
mov
out
or
cmp
jo
jae
cmp
stos
inc
sarb
popa
in
adcl
iret
call
mov
das
pop
sbb
lods
pop
frstor
mov
jae
mov
imul
aaa
dec
add
leave
mov
adc
adc
gs
mov
cmpsb
xchg
pop
data16
scas
insb
pop
leave
shrl
js
jle
dec
xor
xchg
cmc
aaa
xor
sub
push
jae
push
push
loop
mov
aad
inc
shll
xchg
shlb
add
in
push
or
in
ret
idiv
mov
mov
sub
lret
xchg
inc
add
sub
sbb
aas
xor
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
pusha
test
push
aas
mov
movaps
popa
mov
std
pop
out
push
pushf
cwtl
mov
mov
jg
xor
push
adc
xchg
pop
xchg
jp
sbb
cmpsb
js
push
sub
testl
popa
cmp
shrb
jno
inc
mov
push
cld
movsb
adc
int
jle
fsts
xchg
fimull
cwtl
cmpsb
icebp
push
jmp
popf
xlat
pop
sbb
lret
dec
pop
inc
loopne
sub
xchg
xchg
pop
push
mov
leave
push
scas
push
sbb
into
push
pop
adc
jns
mov
and
js
cmp
inc
pop
lock
jle
shlb
or
mov
and
popf
int
in
jecxz
lock
sub
push
test
int
movsb
shlb
dec
add
push
sub
hlt
pop
cld
or
xchg
lret
pushf
or
jnp,pn
inc
adc
add
mov
das
push
mov
test
sub
cmc
adc
cwtl
mov
mov
rolb
cmpb
or
sub
call
in
gs
jnp
push
pop
lret
mov
jno
inc
add
mov
push
jl
loope
sbb
push
mov
mull
repnz
or
xchg
rclb
push
xchg
int
or
and
push
inc
mov
pop
or
pusha
push
mov
test
add
push
mov
cltd
add
or
push
outsl
dec
sbb
sub
cld
out
add
fsubl
push
jge
ficoms
cmp
push
or
repz
cmpb
dec
or
into
inc
pop
push
and
incb
pop
mov
dec
add
inc
adc
pushf
sub
add
mov
xchg
mov
push
scas
stc
outsl
jne
icebp
pop
data16
call
imul
push
adc
fsts
inc
inc
sbb
je
test
dec
nopl
daa
dec
mov
dec
mov
pushf
push
mov
xchg
fcmovnbe
cmp
and
xor
ljmp
insb
mov
test
ret
test
xchg
jl
jge
mov
xchg
sbb
mov
repnz
pop
mov
insl
lret
sub
jbe
mov
cs
adcb
xchg
pop
mov
mov
inc
fistpl
inc
or
mov
jae
dec
mov
ror
jns
add
sbb
cmp
add
div
aad
enter
scas
jbe
sti
aam
pop
and
sub
sbb
add
jns
pop
pop
mov
push
out
dec
inc
sahf
fmull
mov
fldl
push
lahf
mov
sub
lret
or
jae
aam
aaa
jne
push
mov
outsb
sbb
bound
insl
out
inc
icebp
mov
ljmp
mov
scas
flds
in
cmp
fstp
icebp
mov
fnsave
ljmp
mov
mov
xchg
adc
fstp
jno
fisttps
push
dec
cmpb
iret
sub
mov
mov
mov
mov
cmpsb
pusha
int
mov
out
and
je
inc
sub
ljmp
ds
lret
xchg
pushf
loopne
pop
add
add
lret
push
and
cmc
sbbl
add
test
loop
xor
shrl
inc
mov
scas
xchg
push
or
repnz
adc
fcoml
das
sub
imul
mov
push
orps
jns
inc
add
adc
cmp
mov
or
lret
adcb
xor
push
ror
inc
fisttpll
dec
dec
mov
jns
sub
out
pop
push
add
shll
pop
push
scas
and
and
sahf
insl
sbb
xchg
jl
push
sbb
dec
xor
xchg
jno
pusha
pop
inc
cmp
lahf
mov
sbb
adc
sti
test
add
adc
add
ss
pop
xor
stc
jbe
mov
hlt
jmp
addr16
push
push
vmwrite
push
cmp
or
push
sub
adc
lret
xchg
ljmp
jecxz
addr16
xchg
insl
sub
jmp
inc
mov
lods
loope
bound
xchg
and
xor
iret
cwtl
mov
lods
andb
int3
lcall
xor
mov
xchg
add
int3
scas
dec
into
jb
xchg
sbb
cli
jo
xchg
fdiv
hlt
xchg
or
and
pop
adc
out
mov
add
cmp
insl
test
notl
ud0
push
pop
inc
pop
movsl
sbb
not
out
add
sti
jno
jmp
lds
cli
das
jb
decl
scas
mov
push
pop
cmp
push
jl
test
push
or
xor
inc
outsb
add
cli
pop
in
arpl
dec
in
and
pusha
imul
lahf
mov
repnz
das
sub
lods
adc
adc
leave
mov
sub
pop
xchg
fucomp
add
jmp
aaa
xlat
sub
in
in
stos
mov
push
push
xor
sub
cld
cltd
cmp
movsb
rcrl
lret
xor
imul
or
incl
shll
movsb
sarb
push
pop
fwait
js
in
pop
and
mov
iret
xor
popa
jne
push
inc
add
pop
adc
leave
push
inc
push
in
stos
fldcw
sbb
jbe
lock
decb
mov
cmp
icebp
push
inc
andl
mov
rcl
add
mov
bound
fsts
dec
loope
xchg
out
xchg
into
int3
sbb
jg
js
xchg
mov
insb
and
push
xlat
push
xchg
jae
lret
xorl
add
movsl
adc
adc
movsb
and
outsb
cmp
icebp
add
pop
outsl
add
jae
fwait
push
jns
pop
js
mov
pusha
repz
hlt
or
outsb
pop
ja
push
inc
nop
js
fbstp
sub
aaa
add
push
int3
sarb
lods
sbbb
outsl
or
jne
ds
subl
dec
flds
jb
jnp
mov
fiadds
pop
cli
mov
aad
cltd
insl
mov
mov
pop
loope
nop
sbb
mov
and
aaa
cld
push
jne
cmp
and
lods
add
inc
add
and
adc
mov
enter
xchg
mov
sbb
out
stos
push
lret
pop
bound
xchg
mov
sahf
xchg
addl
or
or
addl
aaa
sti
inc
outsb
jg
push
push
xor
rcrb
scas
mov
xor
sub
js
sub
stc
aad
in
sbb
dec
add
lods
enter
add
ljmp
imul
scas
sbb
xor
shll
mov
adc
xchg
pop
xchg
fwait
orl
lret
push
cmp
xchg
dec
xchg
jecxz
out
daa
mov
pop
add
ljmp
xchg
sbb
cwtl
das
dec
pop
mov
fsqrt
jae
cld
xchg
sbb
dec
inc
adc
mov
scas
adc
xchg
sti
das
adc
pusha
jp
mov
stos
push
xchg
xchg
cs
or
out
divl
sub
jne
arpl
scas
fucomi
pusha
icebp
fcmovnu
push
test
ficomps
ret
mov
lods
in
push
lret
bound
mov
test
incl
sub
sbb
xor
insl
mov
sub
test
mov
sub
loopne
shll
pop
into
push
lret
push
sti
out
mov
xchg
sti
jnp
sbb
add
test
inc
dec
add
push
sbb
xchg
adc
sti
xor
shlb
add
fcmovbe
ja
iret
jg
xor
fcomp
cs
jmp
cmp
test
adc
rorb
sub
andb
dec
xlat
adc
pop
mov
enter
jecxz
popa
xor
cmc
pop
les
shlb
cmpsl
mov
mov
mov
or
cs
scas
out
mov
and
es
test
push
sarl
and
xor
aam
ja
ds
xchg
mov
out
mov
adc
cld
sub
mov
jo
cs
sbb
pop
movsl
shlb
or
xor
sub
inc
jb
mov
aaa
daa
jne
sub
dec
xchg
aad
pop
push
rcr
out
add
jae
movsb
hlt
scas
cmpsb
mov
jnp
clc
movsl
lea
inc
or
fdivp
mov
xor
xchg
sahf
jno
mov
add
jns
aam
ret
jnp
pop
dec
push
mov
cli
xchg
ret
cld
or
dec
lar
add
iret
adc
pop
and
jnp
out
ljmp
mov
fstl
mov
lcall
es
icebp
icebp
int
adc
test
fs
mov
add
xor
inc
or
sub
inc
cmp
fistps
pushf
add
xlat
insb
and
ret
cs
dec
lcall
sbb
mov
mov
mov
nop
fstpt
inc
or
mov
xchg
jmp
lods
adc
adc
mov
mov
inc
in
fxch
push
add
cmp
cltd
out
inc
pushf
dec
aam
xchg
imul
in
out
outsl
sbb
ljmp
and
and
push
mov
aam
sbb
pushf
adc
popa
cmpl
cmp
cwtl
and
mov
cmp
dec
icebp
fsubp
jae
pop
mov
sub
jp
lods
andb
das
rolb
jle
or
add
jne
pop
mov
adc
cmp
lock
jmp
ljmp
push
clc
and
leave
mov
decb
xchg
sbb
mov
je
int3
mov
sub
mov
loop
adc
test
cmpsb
in
subb
movsl
push
pop
fcoml
repnz
mov
dec
arpl
add
sub
mov
in
jbe
cli
xchg
push
into
mov
imul
idivb
ret
jo
mov
leave
dec
inc
xchg
xchg
and
es
je
das
cmp
sub
sub
jp
aam
daa
pop
pop
in
test
loopne
cmp
cmpsl
xchg
pop
xor
push
cmc
cwtl
pop
shll
lods
push
in
pop
mov
cs
lret
imul
xor
fdivr
repnz
fadd
sub
xor
icebp
mov
add
or
icebp
in
les
dec
mov
iret
push
pusha
mov
jp,pt
push
push
push
cmpsb
pop
cwtl
add
sbb
xchg
idiv
mov
sbb
addr16
aad
inc
mov
gs
inc
stos
add
inc
fistl
fs
popa
pop
jns
aas
jnp
xchg
add
lret
scas
mov
jmp
sub
out
sti
int
out
rcrl
mov
push
pushf
add
push
mov
xor
ss
and
insl
aaa
inc
imul
repnz
push
mov
out
inc
or
pushf
inc
jbe
enter
daa
lret
mov
mov
fmuls
scas
test
test
orb
xlat
jle
mov
or
test
mov
sahf
rcrl
js
int
pop
add
pop
int3
push
cltd
jnp
jo
aam
into
xor
aas
push
mov
lret
xchg
and
pop
pop
cs
adc
call
sahf
cmp
cmp
shrl
pop
vmwrite
jmp
and
pop
mov
inc
out
int3
std
fisubrl
sbb
push
icebp
das
rcr
push
sub
outsl
movsb
mov
sarl
dec
loop
dec
and
xor
aad
cmp
push
mov
fisttpll
and
aas
rolb
pusha
mov
movb
pop
aam
add
push
or
sahf
loope
adc
dec
adc
fwait
negb
outsl
mov
cmc
dec
xchg
xchg
mov
sub
lcallw
xchg
cmpl
push
lret
jmp
fistl
dec
enter
xchg
push
sbb
add
roll
xlat
jmp
dec
ds
lods
sbbb
ljmp
fwait
mov
xchg
and
mov
aad
pusha
movsb
jnp
pop
inc
push
hlt
xchg
cs
push
js
imul
dec
jp
les
fnstenv
adc
fildl
xor
add
dec
cwtl
cmp
and
out
jle
sarl
push
test
adc
daa
lret
lret
mov
jb
aas
dec
or
bound
push
pushf
repnz
add
scas
mov
pop
dec
cwtl
leave
fists
stc
aas
xor
xchg
arpl
mov
add
adc
scas
jo
mov
or
loope
insl
lret
imul
dec
repz
mov
add
add
test
xor
sbb
or
jl
jne
or
pusha
mov
ja
jns
jle
sahf
jp
mov
jmp
cld
ret
xchg
cwtl
cmc
dec
rcl
shlb
iret
adc
repnz
nop
outsb
dec
sbb
subl
test
jl
fcomp
mov
cmp
insl
or
adc
cwtl
repnz
imul
nopl
pop
divl
or
add
push
rcl
loop
negb
fstps
or
pop
push
push
bound
push
mov
sub
sti
insb
dec
xchg
lock
stc
and
xchg
xchg
test
and
out
cli
adc
lahf
out
mov
ficoms
aad
and
and
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
decl
adc
xchg
sti
mov
imul
rol
adc
lods
fs
loopne
nop
int
cli
and
mov
in
add
mov
nop
dec
cld
aam
ja
gs
sbb
push
mov
sahf
scas
pusha
imul
jg
push
pop
push
loope
pop
popf
enter
push
and
iret
into
pop
inc
call
cli
dec
mov
mov
movsl
add
or
pusha
jecxz
out
jp
cld
and
mov
movsb
fs
inc
cwtl
xor
pop
push
sub
xchg
sub
lret
fisubrs
or
lret
loopne
in
mov
xor
add
jl
xor
imul
cmp
loope
cmc
jae
dec
sti
lds
out
pop
add
dec
dec
sbb
aas
push
mov
out
movsb
mov
outsl
adc
and
pop
shll
xor
test
jmp
xchg
int3
cmp
jp
lret
inc
push
cmpsb
xor
jnp
popa
mov
add
call
xor
fsts
out
sub
leave
pop
jmp
xorl
lods
mov
fbld
add
dec
mov
pop
sub
pop
xor
and
cld
popa
and
subl
push
aam
mov
mov
pop
in
lock
jp
pop
ss
push
js
sub
popa
inc
xchg
test
loop
mov
fmulp
mov
add
jp
or
sub
orl
pusha
movsl
daa
sbb
dec
shl
xchg
cmp
rolb
push
xchg
arpl
out
in
inc
jbe
xchg
mov
cvtps2pd
imul
lock
dec
jmp
sbb
xlat
jno
in
ja
fwait
inc
bound
std
jle
add
dec
push
in
jmp
cmp
subb
xchg
repnz
in
sub
mov
adcl
imul
mulb
sbb
sbb
mov
inc
xor
sub
add
stos
jnp
rcrl
or
les
push
pop
push
and
mov
sbb
xchg
shl
jg
pop
das
xorb
lahf
gs
out
jae
xchg
jbe
cmpsb
fsts
add
incb
arpl
or
push
daa
pushf
adc
es
dec
xchg
fistpl
adc
popf
movsl
rolb
pop
sub
mov
dec
test
repz
rcrl
mov
insl
scas
pop
inc
mov
inc
xlat
cmc
popf
inc
gs
std
addr16
inc
movups
ljmp
add
xchg
orl
loopne
int
xchg
sbb
mov
dec
jecxz
jmp
cmpsl
sub
sbb
xor
cwtl
push
pushf
aas
in
xlat
jnp
ss
adc
addr16
cmpl
repnz
mov
es
pop
pop
pop
mov
inc
jns
or
jno
inc
mov
jmp
adc
pop
sbb
jne
into
xchg
sbb
das
lahf
lods
or
cwtl
shr
shrl
rorl
sbb
or
into
dec
push
sarl
out
add
dec
sbb
push
dec
sti
inc
sbb
and
pop
mov
movb
dec
mov
shll
stc
outsl
mov
cltd
cmp
sbb
repnz
mov
mov
data16
cs
add
cld
std
or
aad
and
jle
into
call
inc
test
fistl
movsb
pusha
sahf
jle
popa
fisubs
repnz
mov
in
movsb
loopne
adc
sarl
inc
mov
jge
or
nop
push
mov
pop
cmpsl
ja
outsb
sub
jecxz
scas
mov
pop
in
loope
mov
jae
push
sarl
sub
fnstsw
int
push
aad
into
jp
sbb
push
int3
std
fsubs
iret
xchg
adc
loopne
push
outsl
jbe
mov
and
jmp
sbb
add
adc
mov
cmp
movsl
add
mov
jno
jb
jnp
adc
mov
scas
test
cli
pop
lret
addr16
adc
jp
add
cld
lret
jne
outsl
lock
mov
xchg
loop
pop
testl
jp
mov
enter
fbstp
lods
xchg
aaa
mov
rorl
test
jb
sbb
call
fst
push
add
scas
cmp
adc
shlb
mov
push
cli
and
icebp
add
pop
inc
jnp
test
pop
xor
adc
mov
ds
xchg
mov
ret
xchg
cltd
repnz
mov
cld
insb
in
mov
scas
in
cs
fwait
leave
mov
out
loop
xchg
leave
ja
sub
and
je
and
push
xor
cmc
rcll
inc
test
inc
stos
loopne
push
push
shl
mov
out
mov
test
cmc
adc
inc
addl
loopne
jns
sbb
xor
insl
lods
movsb
call
pop
mov
push
cmpb
push
fcompl
xchg
mov
pop
in
pop
push
adc
xchg
sub
xchg
jle
sub
cmpsl
or
addl
or
fldt
stc
or
out
xchg
mov
sub
jp
subb
mov
push
jl
push
sbb
jae
mov
dec
and
xchg
loop
outsl
pusha
jecxz
out
shll
popl
lods
dec
jns
mov
push
aas
xor
mov
mov
je
mov
sub
push
push
mov
ds
loope
push
dec
add
jl
push
adc
popa
mov
mull
je
lock
xor
into
cltd
jns
dec
xor
cmpl
fldcw
ds
jae
cwtl
mov
jmp
xchg
lods
das
jg
loop
movsl
jmp
mov
mov
test
xlat
mov
push
leave
mov
xor
inc
jnp
sub
sbb
xchg
mov
movsl
repnz
xchg
ror
mov
sub
add
test
push
inc
add
inc
repz
inc
test
cmp
dec
aaa
das
mov
ret
outsb
mov
mov
rolb
fbld
mov
cs
mov
xor
sub
fisubrs
nop
ret
inc
int
adc
call
pop
sub
jge
test
nop
mov
mov
loope
adc
addr16
les
lock
shlb
jae
out
adc
jg
dec
and
lock
dec
cwtl
ret
fmull
and
in
push
fcmovnbe
dec
or
inc
test
cmpsb
sub
rcll
ljmp
and
and
mov
or
jl
mov
lea
rolb
jmp
xor
push
push
jle
lods
xchg
inc
mov
pop
fs
shlb
inc
mov
push
jns
insb
cmp
gs
add
movsb
ret
lret
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
cli
xor
dec
enter
xchg
ds
dec
inc
test
test
dec
jge
loop
fsubrl
mov
or
pop
fisttpll
push
sub
adc
mov
xchg
xchg
bound
rolb
push
fsts
xor
call
jno
cmp
xor
in
pop
icebp
dec
mul
adcl
fstpl
add
mov
pop
mov
int
xor
pop
push
mov
mov
push
jae
fdiv
adc
movsb
mov
mov
inc
mov
rclb
mov
xorl
sub
movsl
leave
mov
jno
lahf
mov
fstl
adc
jbe
xor
add
dec
pop
cmp
into
popa
pusha
leave
fldl
outsb
arpl
xchg
jns
mov
sarb
fwait
push
mov
js
dec
imul
sahf
fs
or
stc
lret
jmp
jnp
aad
rcrl
xlat
testb
mov
les
mov
push
mov
or
icebp
xchg
std
imul
and
xchg
stos
loope
cmp
aas
pop
ret
aad
test
nop
xchg
inc
daa
fs
and
mov
push
jb
jmp
and
jns
push
jmp
push
hlt
les
cmpsl
xor
sti
cmp
or
pop
sbb
inc
sbb
lahf
cmc
in
push
xchg
mov
in
xchg
and
adc
fsubs
mov
push
jmp
mov
fldcw
lods
hlt
in
arpl
into
inc
clc
mov
push
pop
scas
jae
dec
xlat
inc
jno
outsl
sub
addr16
mov
mulb
xabort
call
inc
mov
cltd
mov
icebp
xchg
sbb
stos
pop
out
mov
dec
lahf
out
inc
lret
in
cmp
inc
jne
inc
mov
inc
imul
sbb
fstp
leave
pop
fdiv
outsb
mov
mov
inc
les
pushf
jg
sub
lods
call
call
adc
cmp
scas
lret
fldt
nop
daa
adc
add
mov
push
lods
pop
movntps
or
subb
pop
xchg
dec
fsts
jb
popa
aas
in
mov
data16
push
dec
or
adc
sbb
mov
xlat
imul
cmc
sbbl
mov
inc
jle
jecxz
or
pop
adc
data16
add
fcoms
inc
fwait
jb
rol
jg
dec
repz
sbb
mov
and
icebp
push
cmpsl
stc
test
inc
adc
dec
inc
push
xor
arpl
add
ss
hlt
mov
lds
and
add
inc
sub
or
dec
je
loope
insl
aaa
mov
pushf
std
mov
out
lods
pop
sub
xorb
and
outsl
rorl
addr16
add
inc
and
std
insb
add
jg
cli
das
jnp
sahf
fcompl
and
cmpsl
push
and
and
mov
in
xchg
int3
push
mov
shlb
aam
xchg
xchg
inc
jge
xchg
outsb
test
or
jbe
divl
popf
add
adc
and
mov
hlt
mov
outsl
xchg
inc
xor
mov
sub
cmp
subb
pop
or
or
loope
push
cmovns
cmp
add
pop
popf
pop
jmp
ficomps
daa
bound
fstpl
sbb
lods
sub
or
mov
mov
jle
cli
loope
test
outsb
pop
push
ret
adc
and
leave
jl
push
int3
pop
pushf
xchg
out
or
mov
data16
dec
push
out
xlat
sub
bound
cmp
sub
adc
rolb
mov
jecxz
pop
es
loopne
mov
mov
fnstcw
cs
push
sub
int
cmp
adc
adc
or
adc
push
ds
test
lahf
xchg
xchg
callw
mov
inc
std
cmc
mov
rclb
cld
clc
addr16
test
fwait
and
cmp
imull
mov
mov
subl
rcrl
inc
stos
pop
test
lods
push
xchg
dec
jp
adc
loopne
add
stos
fiaddl
add
aas
sahf
popl
adc
mov
mov
cvtpi2ps
mov
ljmp
jl
je
outsb
push
int
rcrl
movsb
mov
popa
divl
add
pop
dec
and
pop
les
inc
pop
xchg
enter
popa
adc
jp
fists
jno
sbb
cmp
ljmp
mov
adc
xor
fwait
and
mov
test
inc
outsb
add
sbb
icebp
adc
aad
je
mov
sub
movsb
repz
aaa
sbb
and
ret
mov
sbb
repz
lods
push
cmc
js
mov
movsl
mov
jmp
aam
or
dec
es
push
pusha
data16
loopne
sarl
imul
inc
xor
push
fsts
movsb
lcall
cmp
adc
ds
scas
fists
jno
xchg
aaa
inc
imul
mov
xor
mov
jno
jae
sub
scas
inc
inc
cmp
stos
outsb
loope
sbbb
jp
jbe
jecxz
mov
pop
mov
aas
ljmp
sbb
leave
cmp
xchg
cmp
jecxz
ficompl
std
out
add
xchg
push
add
pop
test
loop
fcmovu
push
sahf
stos
adc
mov
mov
or
test
add
xchg
push
mov
lret
mov
mov
rcl
sub
xchg
jbe
test
dec
xchg
push
or
cmpsl
or
xor
into
scas
mov
add
jle
leave
dec
std
mov
pop
fnstcw
mov
mov
lcall
dec
ret
or
jl
mov
or
iret
adc
sbb
mov
jno
scas
and
lods
aaa
gs
pushf
dec
rcll
je
xchg
or
aas
push
or
jbe
pop
add
inc
cmpsl
jmp
pop
dec
mov
sub
sbb
xorl
fsubrs
ljmp
std
in
fnstcw
and
out
divps
jb
jns
ret
cltd
loop
cmpb
stc
xchg
or
and
xor
adc
xchg
sbb
sti
xchg
xadd
sub
repnz
test
or
inc
imul
jb
lcall
insb
xor
mov
pop
int3
pop
enter
push
jl
push
push
mov
popa
mov
mov
scas
lods
fcoml
dec
ret
cmpsb
scas
and
cmpb
stc
lret
inc
cltd
aad
popa
cmp
int3
into
mov
pusha
test
popa
xor
loope
cmc
test
loope
lods
ds
and
stc
mov
jnp
or
jne
aaa
addr16
sub
loop
sub
cmpl
mov
repnz
adc
cmc
pop
test
fcoms
shr
jmp
and
add
loop
es
pop
js
cld
aam
pop
js
ja
cmpsl
pop
sub
imul
cld
in
jno
jge
loop
push
cli
movsl
ja
sbbl
aas
xchg
call
in
std
or
lea
mov
gs
xchg
fmuls
mov
cmp
inc
outsl
repz
mov
xchg
subl
popa
push
cli
dec
imul
ss
sbb
lds
sub
ror
jmp
in
jb
mov
int3
mov
loop
jg
push
pop
xor
test
data16
test
cmp
gs
outsb
and
jne
stos
push
cmp
mov
push
loopnew,pt
inc
jge
mov
xchg
fidivrl
jnp
pop
stos
dec
sti
or
xchg
in
aas
movl
mov
mov
sub
int3
xchg
popa
mov
mov
xor
jne
and
lods
aam
mov
push
das
addr16
movsl
js
and
loopne
pop
lret
or
sub
push
leave
mov
popf
mov
shl
xchg
dec
jae
pop
push
cmp
mov
fildl
fmull
arpl
repz
rcrb
jo
sub
jg
pop
or
inc
xchg
jnp
int
cltd
es
add
xor
sbb
shlb
adc
dec
test
sub
jmp
add
push
ja
aam
sub
jge
daa
test
xchg
lds
xchg
mov
in
imul
mov
cmp
ss
mov
mov
xor
xor
and
dec
gs
fsubr
sahf
ret
bound
fcom
jl
xchg
pop
push
mov
iret
scas
sahf
dec
test
loope
mov
sub
jne
pop
xchg
and
aaa
jg
sbb
mov
bound
ret
dec
mov
sub
hlt
sbb
push
mov
hlt
jo
jle
xlat
bound
xor
add
sbb
mov
inc
fadd
xchg
pop
mov
xchg
push
das
scas
std
sub
and
sbb
int3
sbb
test
cwtl
ds
mov
pushf
sub
movsl
imul
out
idivl
add
pop
imul
fistpll
cmpsb
fldl
jb
std
nop
mov
fdivs
inc
loop
xor
dec
adc
sbb
sub
xlat
pop
sbb
jae
stos
or
out
cmp
cmp
mov
dec
inc
jle
popf
sbb
xchg
sub
int3
adc
push
outsb
repz
lret
pop
ss
push
push
sub
mov
fcmovnbe
scas
idivl
adc
inc
mov
sahf
stc
jb
ljmp
fs
ljmp
loope
mov
jo
adc
jo
add
push
mov
mov
les
push
cmpsb
push
sub
cmpsb
cwtl
cltd
rcll
adc
mov
mov
fstp
rolb
xchg
inc
push
jecxz
arpl
test
xchg
sub
dec
sbb
sbb
cwtl
sbb
cmp
xchg
xchg
push
mov
fbld
cmp
ljmp
adc
ds
popf
mov
xor
mov
rclb
dec
push
xor
mov
das
test
pushf
inc
cltd
cmp
inc
jns
andl
push
repz
fiadds
mov
iret
pop
enter
je
jnp
int3
mov
cmp
jo
mov
lret
sbb
push
mov
icebp
or
test
stos
mov
mov
sub
xchg
or
add
ret
icebp
jl
push
xchg
mov
repz
lods
aaa
test
lret
push
js
jp
push
or
scas
sbb
sbb
mov
or
insl
clc
cmp
push
cli
dec
pusha
xor
shlb
ja
repnz
jge
xchg
sub
hlt
xor
or
pop
push
sti
push
adc
lahf
cmp
add
lcall
adc
sahf
daa
aaa
push
jmp
fs
mul
mull
out
push
shl
sub
add
in
mov
and
rclb
mov
push
mov
pop
fnstcw
lcall
data16
call
sub
mov
imul
push
dec
pop
add
fimuls
mov
dec
insb
je
fcoml
and
mov
icebp
mov
cmc
sub
add
or
and
nop
xchg
and
inc
enter
and
xor
xlat
xchg
enter
mov
mov
lock
or
inc
les
cmp
in
dec
dec
out
mov
cld
xor
or
jb
stos
cli
sti
cmpsl
inc
xchg
xlat
lret
sub
mov
add
rclb
adc
aaa
lahf
pop
clc
push
js
sbb
mov
jl
mov
hlt
mov
lcall
mov
xchg
fninit
add
aaa
xor
dec
je
jne
sbb
imul
push
lret
sub
gs
aas
sbb
sub
pop
lods
pop
mov
xor
dec
push
xchg
nop
and
insl
dec
lcall
outsl
scas
fnstenv
rcll
mov
sbb
push
dec
jg
sbb
dec
fstpl
push
mov
jne
test
add
dec
add
fsub
xchg
adc
test
fcoms
mov
xchg
adc
mov
sub
sub
imul
cwtl
mov
imul
mov
push
fldenv
cmp
mov
das
jg
push
orl
test
mov
pusha
outsb
rclb
cwtl
movsb
stos
dec
cmp
stos
lret
imul
lods
gs
dec
mov
enter
xchg
push
mov
inc
dec
in
mov
push
xchg
sub
jbe
ss
das
lods
inc
mov
insb
sarb
xchg
repnz
add
cmpsb
xchg
inc
sub
ret
adc
out
xchg
xchg
out
lods
std
fbld
mov
mov
fucomip
bt
adc
pusha
nop
cmpsb
mov
sub
cs
fadds
pop
out
pop
cli
js
add
sub
jl
sub
std
sbb
mov
test
fisubl
adc
pop
dec
and
cmp
push
arpl
imul
mov
nop
sub
adc
sub
jno
test
icebp
jmp
loop
test
cmpsb
xchg
shll
jmp
push
ljmp
and
repnz
jge
xor
mov
lahf
rclb
dec
das
das
jecxz
rcl
pop
out
add
jl
ror
ss
cmp
jns
xchg
pop
mov
popf
xor
in
or
loope
out
adcb
test
pusha
out
imul
fcomp
pop
std
imul
push
pop
mov
inc
test
lea
inc
push
stc
addl
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
dec
and
xchg
mov
and
lea
insl
add
jge
push
in
mov
or
inc
movsb
fmuls
push
sub
cmp
jns
xchg
ss
pop
mov
cwtl
push
int
iret
jno
cmp
push
adc
xchg
or
std
rcll
jno
leave
adc
add
push
popf
movb
jo
lret
lret
xchg
pop
and
popf
neg
daa
aas
push
dec
xchg
sub
ret
cwtl
xchg
or
bound
jle
pop
pop
adc
sub
das
or
mov
cltd
push
or
jmp
leave
fadds
leave
negb
scas
jge
mov
repnz
je
jb
mov
jo
jecxz
jnp
push
loopne
insb
dec
fwait
out
push
ret
and
inc
ss
scas
sbb
lea
sbb
cld
divl
xlat
imul
pop
js
mov
adc
mov
mov
in
mov
sub
dec
pop
pop
pushw
notb
in
add
jns
stos
shll
and
sbb
sti
dec
outsb
sub
cmpsb
jbe
pop
mov
pushl
xor
adc
mov
lcall
or
xchg
mov
sahf
das
dec
and
dec
jo
stos
xchg
adc
enter
pop
xlat
pop
sub
iret
sbb
scas
or
adc
icebp
cmp
cmp
or
mov
outsl
mull
int
mov
or
add
cmp
pop
mov
or
orb
inc
pushf
mov
mov
cmc
repnz
xchg
scas
and
push
dec
inc
xchg
push
push
adc
pop
mov
outsb
mov
loop
jb
lret
pop
enter
inc
pop
inc
imul
xchg
or
loop
testl
push
sbb
push
or
jl
jmp
js
je
sbb
dec
xor
popa
pop
cmp
add
xchg
stos
jmp
inc
mov
sahf
cmp
addr16
jecxz
cmc
or
xchg
loop,pt
pop
pop
adc
lret
movsb
lcall
int3
xor
pop
xchg
cmp
lds
push
loopne
movsl
andl
xlat
lods
jo
mov
popa
mov
bound
loopne
push
sti
addr16
mov
cltd
mov
negb
rcr
ror
jno
cmp
mov
pop
aaa
outsl
loope
push
popl
mov
sbb
or
push
je
stc
pop
xchg
lcall
inc
bound
outsb
jle
mov
stos
aad
scas
xor
mov
inc
and
mov
mov
popf
cmp
loop
jmp
cmpsb
push
fnstenv
sub
xchg
sub
ret
jns
imul
movsb
cmovp
shr
orl
add
dec
pop
sbb
dec
cmpsl
mov
jbe
push
push
dec
pop
pop
dec
jecxz
and
cmovge
xchg
insl
pusha
mov
xlat
xor
test
xor
mov
pop
xchg
and
in
xor
pop
xlat
sub
imul
jmp
fbstp
sahf
outsl
into
bnd
fisubl
popa
xorb
loope
out
mov
mov
in
sub
pop
and
pop
mov
lcall
push
test
sti
add
cs
push
out
push
mov
push
fs
das
xchg
xor
pop
inc
cmp
icebp
call
jle
out
cmp
test
xchg
mov
les
jnp
in
and
iret
gs
outsl
aam
pop
or
pop
inc
mov
or
cmpsb
fsubr
mov
mov
cmpsb
xchg
sub
insl
int
ss
movsb
insl
test
xchg
dec
or
adc
mov
mov
xchg
loope
inc
repnz
cmpb
xchg
shlb
stos
xor
out
imul
sbb
in
xchg
xor
loope
shll
or
mov
cli
or
pop
fs
lahf
cmp
push
inc
mov
les
mov
sti
cld
xchg
push
ljmp
hlt
mov
es
in
cltd
push
loop
cmc
and
sarb
dec
xchg
pop
insl
imul
lds
cwtl
sub
sbb
popa
lea
pop
gs
add
mov
loope
mov
cmpsb
jnp
int
push
sub
push
mov
sti
inc
sbb
sub
mov
aad
or
cmpsb
xchg
jl
xchg
jo
inc
sub
push
cmp
inc
pop
xchg
cmp
mov
inc
lret
rcr
test
pop
sbb
cmc
add
xlat
jecxz
inc
lahf
adc
jbe
xchg
jbe
mov
xchg
lret
jge
xor
popf
push
in
or
push
cmc
sbb
int3
popl
mov
mov
adc
stc
gs
jg
mov
inc
push
push
jae
dec
lock
and
cmp
cmp
mov
jle
shr
jns
pop
aas
icebp
inc
lods
adc
enter
cwtl
pop
ljmp
adc
orb
sub
xchg
mov
daa
in
jg
cmp
and
inc
roll
add
sub
pop
sti
mov
scas
push
out
mov
sbb
pop
test
cmp
fcoml
and
dec
in
loope
fucomip
ss
adc
movsb
je
mov
pop
imul
or
imul
and
push
nop
ret
sub
pop
jmp
add
push
mov
pusha
mov
aas
out
mov
insl
push
out
pusha
test
sub
negl
lods
xor
sub
scas
scas
imul
movsb
mov
clc
aad
inc
insb
call
imul
outsl
cltd
xor
mov
and
jae
test
sub
cmpsb
lret
jo
sub
push
cs
sbb
sub
xchg
ret
adc
mov
loopne
dec
xlat
cmc
and
pop
scas
adc
lret
mov
cmp
pop
loop
mov
sti
jns
lods
mov
push
mov
mov
cs
lret
scas
jl
movsb
lods
leave
and
mov
aad
scas
insl
scas
adc
lea
ljmp
lock
lcall
or
push
test
nop
mov
dec
or
mov
mov
lods
out
das
jp
rcrb
mov
inc
mov
push
sbb
sbb
movsb
fdivs
mov
out
pop
int3
dec
jne
add
or
fdivl
jne
mov
mov
dec
aam
leave
push
test
scas
and
dec
mov
cmp
out
sub
mov
rcrl
sub
jae
add
das
sbb
mov
decl
pop
jb
adc
inc
sub
xchg
mov
xor
push
mov
and
loopne
mov
stos
ljmp
mov
dec
add
add
or
pop
inc
or
and
jo
adc
xchg
lds
aad
mov
push
fisubrl
xchg
push
xor
fwait
pop
dec
jl
jecxz
cltd
jle
rcr
jp,pt
adc
into
sbb
ss
les
leave
je
lods
xor
sahf
ljmp
in
adc
and
scas
push
jo
insb
jbe
push
and
fisttps
mov
pop
xor
xchg
aaa
adc
imul
nop
cmp
test
mov
xchg
dec
add
inc
add
push
js
mov
lds
int3
xor
in
int3
mov
push
in
push
insl
inc
popa
sub
rcr
xor
dec
adc
dec
lods
scas
push
shrl
insl
jle
fwait
cmpl
lret
mov
adc
movsl
cwtl
pushf
add
add
aas
insl
into
xlat
cmpsl
repnz
xchg
les
mov
dec
ror
sbb
pop
sub
pop
enter
fxch
and
bts
lds
ret
loop
pop
in
loopne
insb
sub
mul
test
aam
leave
out
xchg
or
lret
cmp
pop
mov
daa
or
hlt
outsb
outsb
lcall
sub
in
xor
lock
pop
iret
adc
sarb
jb
xor
adc
test
repnz
dec
mov
movsb
push
jecxz
push
aaa
and
in
xorl
pop
mov
mov
and
popa
mov
fcompl
outsb
mov
mov
repz
pop
push
mov
pushf
in
sbb
cs
fldt
jmp
adc
xchg
push
inc
into
shl
sub
inc
cltd
lds
pop
mov
mov
sbb
jecxz
scas
adc
aaa
icebp
fwait
mov
gs
jge
cli
call
nop
mov
popa
pop
pop
xchg
inc
outsb
outsb
pop
in
pop
pushw
fs
jle
cs
cmpsl
jl
mov
inc
leave
das
inc
ds
cmpsl
push
rclb
jo
push
mov
and
mov
fldenv
fwait
push
xchg
mov
pop
cmc
pop
aam
pop
inc
jmp
pop
sahf
mov
es
jg
jmp
mov
loop
loop
orl
push
xchg
mov
pop
les
sub
stos
movhps
pop
loop
cwtl
mov
inc
and
lods
leave
movl
mov
push
aam
jp
stos
inc
hlt
mov
fdivl
adc
ljmp
adc
sbb
adc
bound
fisubl
fadds
xor
test
jg
push
xor
pop
xchg
les
jle
mov
into
push
jo
cmp
sub
xchg
xchg
dec
enter
fidivl
js
out
out
into
loopne
sub
in
or
jns
js
ss
mov
insl
icebp
and
adc
scas
sti
push
ror
outsl
mov
cmp
mov
imul
je
xor
push
les
xor
inc
mov
jb
cmp
aas
mov
arpl
movsb
test
pop
loope
outsb
int
test
or
subb
loopne
cmc
lahf
cwtl
push
es
scas
ds
imul
fnsave
adc
loope
cmpsl
popa
push
pusha
in
xlat
pop
sub
xchg
cmp
shlb
jl
fcomip
cltd
xor
dec
test
inc
stos
push
push
or
decb
or
xlat
stos
addl
lock
xchg
push
fsubs
pop
insb
iret
out
ds
dec
movsb
sbb
sarb
xor
jnp
and
ljmp
or
ss
iret
aad
sbb
arpl
or
jg
jnp
xlat
sbb
flds
mov
push
add
fstpl
fistl
cmc
mov
mov
imul
or
lods
shrb
sub
sub
mov
adc
out
add
add
xorl
lods
fidivrl
pop
imul
stos
add
cld
loope
call
sub
sub
in
out
push
mov
not
in
or
sti
mov
sbb
sahf
loope
xchg
pushf
stc
jmp
add
std
mov
arpl
dec
repnz
imul
movntq
scas
repnz
lock
repz
es
sbb
mov
jl
xor
mov
xor
loope
mov
sbb
dec
mov
pushf
add
or
enter
lds
and
mov
xchg
jmp
mov
int3
ljmp
push
jnp
sbb
add
mull
mov
dec
dec
mov
push
inc
and
xor
xlat
xlat
fiaddl
cmpsl
pop
movsb
pop
fsubrl
pop
push
pop
jo
cmpl
popf
push
push
insl
dec
and
pop
sbb
inc
push
popf
ret
cmp
mov
in
loope
jae
mov
xlat
or
cmpsl
cmp
sbb
lea
cmp
sub
mov
ret
insb
adc
inc
icebp
lods
inc
test
fcoml
mov
in
in
mov
dec
dec
mov
sbb
xchg
push
iret
icebp
add
mov
cmp
push
lahf
test
idiv
or
sub
and
dec
scas
pop
jns
inc
into
jne
aam
pop
sahf
movsb
and
xchg
push
hlt
lahf
frstor
sahf
out
push
sbb
mov
push
xor
xor
mov
pop
xchg
inc
test
sub
test
rcl
fiadds
inc
test
fwait
mov
pusha
arpl
sahf
sub
pusha
sti
mov
and
pop
jmp
cmp
shll
lock
gs
cmpsb
xor
push
adc
add
rcl
sub
sbb
outsl
mov
stc
sbb
mov
mov
sub
push
sbb
sbb
dec
lahf
cmp
pop
lock
scas
cltd
inc
jle
pop
mov
adcl
cli
xor
sub
lahf
cmp
xchg
repz
and
sar
sbb
jnp
in
mov
mov
xchg
xchg
push
mov
sbb
sbb
test
mov
cmp
lcall
jno
shl
popf
jb
fnstenv
cmp
mov
mov
mov
scas
xor
stc
sahf
roll
xchg
push
push
pop
arpl
xchg
sbb
dec
idivb
and
jp
inc
dec
and
adc
cmp
sub
testb
sbb
xor
jg
shrb
out
lea
xchg
jnp
ja
rcl
cmpsl
loopne
lea
mov
or
repz
mov
adcb
jb
aad
mov
add
pop
xchg
sbb
push
mov
push
mov
ljmp
jg
or
mov
pop
daa
push
or
xor
ja
xchg
add
lock
inc
dec
stos
aad
out
popa
jl
das
dec
mov
dec
mov
inc
aad
mov
and
dec
mov
rclb
sti
jnp
into
sbb
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
lea
std
sub
mov
das
js
add
lods
pop
scas
outsb
scas
dec
sahf
dec
test
sbb
gs
js
sub
enter
mov
insl
mov
clc
popf
sub
mov
out
xchg
out
xchg
xchg
inc
pusha
data16
mov
or
or
pop
fsubp
jmp
and
sub
je
mov
fnstenv
sub
std
add
sbb
and
pusha
mov
pop
jl
sub
mov
sub
jecxz
inc
sahf
jp
add
adc
movsb
lcall
xchg
mov
xchg
cs
rorl
leave
iret
dec
mov
imul
cmp
and
xchg
xor
pop
mov
cmp
outsl
nop
clc
lcall
lcall
mov
repz
inc
and
mov
jb
outsb
lods
aad
jle
fxch
movsl
bound
jns
ljmp
aaa
cs
push
xor
adc
lret
jg
pop
mov
ljmp
push
mov
hlt
ret
pop
inc
insl
add
ja
mov
lds
ljmp
testl
out
pop
mov
inc
jnp
rorb
xor
cltd
in
pop
cmp
sbb
test
push
stos
mov
clc
pop
out
jmp
je
pop
sbb
cmc
lds
push
cs
pop
dec
repnz
or
xor
fldcw
cmpl
lods
adc
repnz
add
push
dec
mov
ja
divb
and
orl
sbb
mov
loope
in
pop
inc
mov
les
shlb
xor
stos
mov
inc
out
and
rorb
lods
cmpsb
lret
inc
jp
mov
popf
adc
arpl
fisubl
popf
push
lock
adc
gs
cli
xchg
ret
add
pop
sub
out
leave
lret
cld
test
cmpsb
das
mov
cmp
xor
lret
scas
les
dec
xlat
into
xor
cmp
add
mov
fisubrl
sub
test
push
enter
pop
and
gs
fldcw
sbb
xor
xor
ss
xor
int
sub
pop
xchg
sbb
dec
pop
add
dec
cmpsl
icebp
scas
pop
cmp
sub
inc
push
adc
dec
lret
push
mov
cld
mov
mov
sbb
les
or
stc
mov
dec
cmpsl
dec
lods
jo
xor
shrl
jmp
xchg
push
out
push
cmp
jmp
int
loope
addr16
pop
sub
mov
mov
cs
fidivrs
hlt
lret
pop
sbb
cmp
xchg
jmp
push
vpackssdw
loope
jmp
lea
xchg
sbb
icebp
mov
in
popf
inc
dec
sbb
adcb
leave
mov
repnz
dec
sub
push
int3
std
lahf
mov
mov
dec
test
push
xor
push
iret
mov
push
andb
sti
cli
mov
arpl
sbb
push
outsb
fdivr
movsb
mov
cmp
roll
mov
es
sub
add
sub
pop
scas
adc
cmp
jb
inc
dec
jne
adc
sub
pop
les
mov
add
int
std
xlat
cmc
int
push
lahf
fsubs
js
test
adc
je
stos
int
jmp
lods
stc
mov
sub
je
add
add
xor
jp
fidivl
js
cmpsb
out
adc
push
inc
or
bound
popa
sub
cmp
lods
out
fdivr
push
pusha
cmpsb
paddb
in
pop
push
xchg
sti
fsubrl
jne
push
xchg
fdivrl
fidivrs
sbb
mov
jge
repz
jne
inc
add
jnp
jecxz
mov
movsl
mov
push
xor
add
add
and
xchg
outsb
bound
gs
js
sbb
mov
insl
mov
jge
rcl
clc
daa
ret
nop
js
stc
jno
add
or
jno
sub
imul
into
push
das
test
int3
xchg
shrl
fsub
mov
mov
sub
test
jle
xchg
pop
adc
out
or
ds
inc
and
lret
leave
and
out
test
icebp
cli
lods
push
mov
inc
cmpsb
mov
and
test
ja
shrl
out
push
int
arpl
pop
add
push
cmp
inc
cli
and
lods
ds
push
scas
insb
in
cld
sub
ret
fbld
pop
pop
fs
cmpb
scas
dec
push
addr16
les
or
mov
es
and
mov
adc
mov
or
jbe
stc
cld
das
jecxz
xchg
add
dec
mov
fcmovnbe
xchg
mov
cmpsb
cmp
loope
imull
xchg
test
insl
dec
mov
inc
mov
jl
mov
rclb
jno
mov
ja
and
and
lcall
jne
xor
mov
jmp
ds
xchg
out
into
js
sub
cld
pop
pusha
xchg
and
in
jbe
lret
jg
xchg
or
inc
outsl
lods
imul
jno
ret
mov
icebp
aaa
insb
loope
lcall
clc
cmp
xor
arpl
push
add
rorb
sbb
fnsave
in
mov
std
in
mov
mov
jecxz
mov
push
jecxz
mov
cmp
jmp
push
enter
jo
cmpsb
sub
jno
pusha
inc
mov
scas
inc
das
leave
pop
sbb
es
pop
jnp
clc
mov
cmpsb
or
faddl
push
lds
ss
outsl
inc
aas
push
insb
aam
cmp
imul
mov
jno
jge
push
or
cltd
cwtl
push
adc
leave
je
mov
scas
lds
dec
out
in
or
mov
sub
sbb
icebp
shll
out
outsb
jecxz
mov
cli
add
push
adcb
cltd
mov
add
pusha
fdivl
cltd
or
add
and
or
inc
dec
push
pop
dec
imul
fmull
fisttps
mov
repnz
jb
into
push
inc
call
ficoml
imul
sahf
mov
cmpsb
adc
pushf
std
mov
xor
pop
js
ret
jecxz
mov
sub
or
test
fs
cmp
in
fstpt
mull
xchg
dec
xchg
lds
leave
test
loop
out
ljmp
dec
nop
mov
and
scas
sarl
int
or
dec
popf
push
mov
in
jmp
mov
adc
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
push
adc
xchg
insl
pop
gs
jae
mov
cmp
jp
sub
lret
sub
bound
push
mov
arpl
inc
fcompl
es
js
nop
loop
xor
into
out
fldcw
xor
push
out
ss
xor
xchg
aas
sbb
xor
ret
sub
ror
mov
cltd
dec
push
sub
dec
mov
dec
sub
jo
movsl
sbbl
lods
and
int3
in
fsubrl
jns
jle
pop
out
mov
out
fldenv
aam
sti
sbb
fsubp
fldl
fsubr
sub
push
pop
jmp
push
imul
mov
in
cmp
call
push
cmp
inc
mov
jb
lods
jbe
pusha
rolb
jbe
jae
movsb
cs
xchg
mov
aad
add
cld
movsb
test
test
movl
pusha
scas
lahf
dec
xchg
sbb
dec
mov
jle
iret
inc
xchg
inc
fcomp
xlat
loop
out
push
xchg
add
out
mov
in
shl
or
adc
pop
sub
arpl
ret
or
stos
push
xchg
mov
es
dec
lods
rcr
xor
jne
movsl
lcall
push
movl
ret
lret
ja
aaa
lds
xorl
mov
fiadds
fstl
xchg
inc
outsl
sbb
or
or
stc
jnp
scas
js
shrb
adc
imul
mov
imul
mov
jb
mov
xchg
shlb
sub
xchg
fsubrs
jp
push
call
movsb
and
pop
idivl
cwtl
adc
cmc
dec
mov
je
mov
aas
jns
xor
cmpsb
adc
aam
outsb
fcmovu
pushf
mov
jne
popa
xchg
mov
inc
jae
sub
add
testl
nop
icebp
imul
xchg
out
dec
fsubrs
push
sbbl
jnp
or
push
mov
mov
movsl
sbb
jmp
xchg
jns
pop
out
jb
fsubrl
out
mov
xchg
loope
aaa
pop
adc
mov
std
iret
shr
dec
fwait
adc
pop
cli
testb
inc
cmp
aad
icebp
xor
mov
das
dec
jo
es
fildl
popf
sti
pop
and
pop
popa
mov
pop
movsb
xchg
into
out
add
inc
add
repnz
dec
sub
dec
ljmp
popa
arpl
scas
add
xchg
lock
pop
mov
sbb
mov
and
fstpl
or
cmp
testl
test
addr16
jb
sar
pop
imul
cmp
sti
les
cmp
pop
ret
aam
iret
lea
pop
cmc
and
mov
xor
leave
and
out
adc
imul
decl
dec
fists
and
outsl
jne
icebp
fstpl
ljmp
xchg
dec
cs
mov
adcb
lret
xor
lret
cmc
leave
daa
sar
test
ret
enter
call
mov
lahf
mov
inc
in
scas
push
lret
mov
dec
lret
push
in
js
outsl
xchg
lea
cmp
sub
jecxz
jnp
sbb
xor
mov
push
jo
and
insl
sbb
ss
imull
pop
aam
xchg
in
pusha
test
outsb
sub
adc
shl
sub
popa
aas
push
lock
jns
xor
daa
push
lea
add
test
add
movsb
lcall
sub
fsubrp
in
mov
sbb
jp
inc
test
mov
sub
out
pop
jmp
cmpxchg
mov
pusha
mov
pushf
add
sbb
call
cmpsl
or
pop
outsb
sbb
cltd
loopne
jge
add
or
gs
push
sub
scas
sub
out
push
inc
mov
or
pop
ja
mov
jle
jg
cmp
popf
repz
decb
ret
loop
lods
dec
addl
jns
test
and
inc
lock
iret
cltd
xchg
or
push
and
jbe
movsb
mov
inc
or
pop
mov
in
out
cmp
in
sbb
cltd
je
fbstp
aas
and
mov
cmp
xor
in
fstpt
dec
test
decl
rolb
daa
sub
sti
sbb
cmp
inc
mov
pop
sarl
sbb
add
jg
inc
js
aam
ror
gs
mov
add
fldl
mov
out
adc
test
decl
in
xor
pusha
jb
insb
pop
pop
mov
pop
dec
lods
xor
or
xorb
xchg
xchg
addr16
mov
pusha
loope
popa
xor
xchg
test
int3
cmp
sbb
shrb
pop
ret
inc
jl
pusha
push
shrb
fstpl
xor
jno
or
in
xor
or
inc
push
vandnps
mov
punpckhdq
arpl
pop
adc
jg
insb
ss
subl
push
aas
push
cld
icebp
loopne
and
sbb
jne
push
adc
cli
rcr
and
jecxz
imul
mov
int
insb
loopne
ret
leave
pusha
jbe
pop
mov
xchg
js
adc
scas
add
xor
xor
jecxz
jp
mov
mov
xor
adc
mov
inc
mov
imul
inc
pop
shlb
in
es
xlat
in
sbb
or
inc
sub
add
imul
stos
leave
rcll
das
adc
sub
ret
imul
movsl
popf
fisubl
xor
jae
dec
pop
mov
push
mov
rcr
xchg
push
cmpsb
in
dec
cli
pop
inc
adc
ss
pop
cmp
inc
add
rol
jg
in
and
sbb
mov
stc
popf
mov
mov
or
dec
lods
gs
insl
pushl
sbb
lock
sbb
cmpsl
jno
add
mov
ljmp
or
mov
scas
pop
cmpsb
test
dec
sub
push
aas
int3
xor
int
push
xchg
xor
arpl
popf
inc
pop
lods
xchg
sub
pcmpeqd
in
lds
lds
cli
adc
arpl
jbe
sarb
mov
je
std
xchg
lret
jg
add
mov
fnstcw
out
pop
fistps
ja
jp
dec
adc
push
push
inc
lock
cmp
lcall
xchg
outsl
xchg
flds
imul
mov
xchg
sub
adc
cltd
add
pushf
push
dec
test
xchg
leave
and
gs
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
cmp
clc
adc
xchg
dec
xchg
scas
ja
and
pop
inc
push
jp
inc
dec
out
stc
and
push
inc
pop
xchg
jo
repz
mov
xchg
xchg
xchg
lds
cmp
adc
ss
ret
aaa
les
jns
data16
mov
ja
dec
dec
or
mov
or
fidivl
outsl
jbe
jp
adc
fcomps
jnp
dec
mov
jp
lods
xchg
or
sub
mov
or
mov
scas
push
imul
mov
lock
fisubl
inc
push
pushf
xor
cwtl
xor
adc
pop
adc
adc
popa
pop
fnstcw
rolb
daa
or
cwtl
mov
push
add
xchg
loopne
mov
aad
or
mov
mov
xchg
in
aam
sub
popf
sbb
sub
test
int3
movsl
rcrb
cld
fwait
imul
mov
pop
pop
in
push
jle
add
mov
notb
sbb
jnp
xor
adc
inc
mov
rep
sbb
int
and
sbb
shll
push
dec
scas
cmp
mov
scas
inc
clc
aas
sub
jmp
or
inc
fistpl
pop
mov
adcb
xor
cwtl
in
add
mov
mov
imul
std
pusha
icebp
fistpll
out
xchg
cmp
lods
fstps
mov
xor
xor
pop
mov
lods
inc
add
and
cli
mov
add
cmp
xchg
nop
or
push
dec
mov
into
dec
sbb
cltd
fcoms
arpl
sbb
sbb
mov
push
ja
push
test
mov
inc
xchg
decl
or
mov
inc
xchg
pop
ljmp
out
jmp
mov
test
lds
add
inc
sub
aam
fnsave
jle
in
subb
adc
add
jg
sbb
xchg
dec
dec
pop
mov
mov
inc
popl
aam
jne
ss
xchg
adc
push
loope
mov
pop
fldcw
adc
int3
dec
shlb
ja
mov
inc
aaa
adc
adc
sbb
pop
loope
mov
cmp
arpl
cmpsl
insb
add
lea
pushf
inc
sahf
adc
xlat
popf
dec
push
jg
pop
movsb
cld
mov
xchg
mov
nop
dec
xor
aam
test
ds
xchg
cmpl
jae
sbb
or
adc
pop
mov
hlt
loopne
adc
mov
enter
int
add
out
jp
std
cmp
and
gs
sbb
adc
scas
mov
gs
xor
cmpsb
test
dec
out
lret
mov
nop
jo
pop
pop
inc
sub
xorb
insb
movsb
inc
mov
add
add
scas
ljmp
aas
cli
sub
movsb
push
fs
cltd
inc
or
pop
xchg
lcall
sub
lock
jne
pop
mov
sahf
ret
xchg
dec
xchg
jbe
adc
int3
pop
add
scas
daa
popa
xchg
lock
gs
les
stos
mov
jecxz
sub
sbb
leave
inc
ljmp
add
in
mov
fldl
in
adc
sarl
push
insb
xchg
xchg
dec
dec
pop
in
or
nop
sahf
dec
sbb
push
push
mov
mov
sbb
aaa
inc
ljmp
sti
test
leave
mov
scas
push
popf
xor
iret
adc
xor
iret
mov
out
or
or
mulb
xchg
out
sbb
cmp
gs
add
repnz
mov
xlat
sti
in
imul
pop
jmp
lds
ja
mov
jns
std
pop
mov
fwait
mov
mov
stos
xor
pop
jae
push
lret
pop
lds
add
int3
mov
clc
loope
testb
adc
adc
add
stos
loopne
test
inc
sub
into
outsl
aam
jg
stos
lcall
xor
push
pop
sub
in
ret
jae
sbb
inc
scas
aas
fwait
jle
adc
pop
repnz
bound
pop
cmp
pop
cmp
cs
dec
push
xchg
adc
lahf
shrb
xchg
mov
mov
icebp
xor
ja
mov
imul
sbb
push
dec
xchg
mov
addr16
loop
mov
js
test
dec
aaa
push
add
adc
sahf
xchg
sub
in
dec
or
icebp
test
xchg
sbb
into
mov
push
pop
stc
repz
lods
pop
testb
call
pusha
dec
fdivrs
ret
dec
nop
sub
xchg
imul
out
mov
mov
hlt
in
cld
inc
xchg
scas
jecxz
push
pop
rolb
icebp
fildl
mov
jge
cld
not
fstpl
xor
xchg
pusha
test
xchg
mov
add
syscall
sbb
sbbl
outsl
dec
punpcklwd
jl
xor
jae
mov
lock
mov
imul
les
divl
jno
fdivrl
pop
lret
repnz
shrb
bound
imul
pop
les
inc
pop
xor
ret
daa
jge
pop
add
push
pop
popa
and
or
mov
testl
mov
test
mov
outsl
pop
pusha
ds
subl
xlat
cmp
lods
fmull
stc
dec
mov
mov
xchg
mov
sub
ret
fsts
loope
fcoms
or
cmp
out
loope
cs
gs
jge
jmp
and
sub
push
inc
push
lock
pop
outsb
jae
shl
notl
jp
mov
call
int
ds
fidivrs
xchg
mov
jb
cmp
inc
rcrb
daa
movsl
in
inc
dec
adc
inc
sti
cmp
orl
daa
and
loop
adc
stos
sub
mov
cmp
outsl
push
sbb
bound
cmp
fbstp
out
cmp
sub
mov
adc
xor
loopne
push
int
sub
push
and
test
sarb
ficoms
movsb
fstpl
mov
insl
das
jmp
sub
push
subl
inc
push
insl
and
lahf
and
or
xchg
cmpsb
setbe
lret
ljmp
in
mov
adcb
hlt
fisttps
repz
out
movsl
cmp
mov
xor
and
dec
dec
dec
cmp
mov
in
push
in
imul
xchg
cmp
nop
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
xor
jl
or
add
lcall
add
cmp
mov
lret
jl
in
lock
adc
arpl
imul
xor
xor
inc
popf
xchg
sub
cli
mov
push
and
and
pop
pushf
test
push
jo
add
pop
mov
cltd
jo
movsl
lods
sub
imul
adc
adc
mov
or
scas
fs
lods
cs
leave
mov
xlat
and
bound
sti
nop
rcrb
imul
fstps
scas
shll
sbb
out
pop
notl
test
xor
stos
mov
fstp
add
je
or
xorb
mov
add
iret
in
mov
daa
xchg
mov
mov
mov
fwait
bound
enter
and
arpl
cmp
and
mov
adc
mov
dec
cmc
add
mov
sub
insb
sub
mov
in
push
xchg
xor
iret
push
cmp
int3
frndint
add
xor
or
icebp
jo
xchg
je
jle
and
mov
jne
or
or
scas
scas
pop
popa
mov
call
inc
aas
dec
out
lds
lods
push
xlat
inc
mov
dec
sub
xor
nop
add
stos
mov
test
inc
sub
testl
xchg
les
xchg
xchg
xchg
xchg
repnz
jb
adc
insl
sbb
inc
jge
sbb
push
jae
das
cmpl
mov
mov
xor
or
xchg
in
es
movsb
sub
out
xchg
mov
lret
mov
lock
daa
testl
mov
pop
test
pop
shr
lds
dec
mov
hlt
or
dec
clc
inc
mov
adc
enter
fldcw
lds
cmpsb
popf
xor
xchg
jmp
sbb
mov
jecxz
xchg
icebp
pop
fistl
cmpsl
or
in
clc
stos
or
insb
pop
adc
mov
sbb
mov
lds
frstpm(287
jns
out
nopl
or
call
enter
xchg
das
inc
aad
xchg
pop
mov
std
sbb
mov
std
fwait
cmp
sbb
cmpsl
roll
push
out
sbb
daa
lock
mov
xchg
jno
leave
addr16
int3
in
mov
inc
lods
loop
call
mov
dec
clc
xchg
mov
lahf
mov
pushf
in
adc
icebp
clc
int
xchg
or
aaa
mov
les
sbb
jp
push
xchg
sub
dec
imul
test
dec
add
jnp
scas
lods
sbb
xlat
mov
or
and
cli
push
jge
cmp
mov
xchg
jp
and
and
inc
outsl
add
add
mov
jge
insl
dec
lea
add
insl
jo
outsb
daa
rcll
out
or
cld
push
jno
pusha
pushf
cmpsl
lds
arpl
and
add
push
stc
bound
xor
scas
or
mov
dec
sub
shlb
jmp
psubb
js
pop
push
iret
in
repz
imul
sbb
jbe
add
push
orb
bound
or
les
pop
out
adc
in
adc
mov
sub
mov
mov
shl
and
inc
push
inc
xchg
jl
mov
or
mov
clc
dec
inc
seto
lret
inc
push
sub
rcr
gs
mov
sbb
add
in
or
add
incb
push
mov
addl
jae
and
es
xor
push
loope
mov
sarb
pop
xor
or
inc
cmp
or
mov
adc
xor
dec
push
jo
dec
fists
test
pinsrw
mov
cmc
xor
adc
lods
push
mov
lods
xor
jge
pop
aaa
jge
cmp
nop
sbb
ljmp
shll
hlt
sub
out
xlat
pop
mov
nop
mov
gs
mov
out
enter
dec
adc
xchg
dec
jns
aad
rclb
pop
daa
into
xor
in
cmpb
out
ficompl
mov
sti
subb
addr16
mov
xchg
repz
faddl
xchg
add
or
mov
cltd
mov
sub
into
lock
push
frstor
fxtract
aaa
icebp
pop
mov
and
dec
push
shll
data16
lods
sub
push
dec
or
mov
push
aas
call
cld
mov
inc
test
inc
insl
in
pop
push
jns
or
push
movsl
lea
jmp
shrl
sti
movsl
pop
das
sbb
sbb
mov
stos
push
jle
insb
push
das
mov
sarb
push
fcmovbe
repz
sbb
sub
lret
inc
in
mov
dec
push
xor
jno
mov
add
and
jne
out
inc
lcall
mov
hlt
movsl
fistpl
cmp
sbb
mov
loopne
clc
mov
sub
cmp
lods
lock
and
jg
inc
inc
sub
addr16
call
add
mov
dec
or
daa
cmp
pop
sbb
xor
push
ret
das
or
mov
dec
or
andl
incl
cli
push
pop
mov
mov
dec
pop
dec
pminsw
jle
sbb
dec
inc
push
enter
adc
sbb
mov
lock
scas
imul
arpl
push
jnp
sub
scas
push
scas
jbe
cli
or
das
repz
vpmadcsswd
out
filds
or
aad
add
mov
fldcw
rcrb
lret
add
fmull
mov
mov
mov
mov
fmuls
scas
shll
out
xchg
adc
mov
mov
xor
in
xlat
jg
mov
bound
sbb
arpl
in
lcall
push
and
loopne
xor
mov
mov
push
mov
ja
rcl
or
jne
jge
mov
sub
sar
ja
mov
roll
orl
pusha
fcom
sub
pushf
fldt
jge
mov
js
xchg
test
jmp
xor
pop
pop
mov
out
pop
fwait
jno
pop
or
adc
sub
adc
data16
cld
ds
out
cld
add
ffreep
mov
popa
loopne
inc
sub
jg
mov
dec
xchg
enter
std
dec
dec
push
out
ret
sarl
popa
fmul
sbb
sahf
into
sar
hlt
lds
sbb
sub
int3
mov
mov
add
xlat
sbb
or
shl
shl
mov
mov
jmp
test
fcoms
std
sub
adc
xchg
shll
mov
pop
push
xchg
xchg
adc
adc
dec
mov
mov
iret
jno
data16
mull
stos
movsl
gs
mov
sub
mov
cmp
test
lcall
out
movsb
orw
mov
popf
sub
mov
andb
pop
sarl
movsb
movsl
mov
cmc
sti
adc
in
mov
jb
add
jno
jl
movsb
push
xchg
ja
sub
enter
js
outsl
jg
icebp
mov
inc
push
ss
pop
fsub
push
mov
sbbb
and
add
fnsave
cmp
iret
rolb
mov
cmp
xor
jmp
mov
ret
cld
in
push
imull
cs
stos
cld
dec
mov
movb
lahf
and
xchg
ds
cmp
pop
icebp
mov
sbb
stc
push
sahf
out
pushf
jl
aam
mov
mov
jmp
cmc
add
cmp
notb
mov
into
clc
and
sub
ficomps
sarb
in
inc
adc
scas
bound
pop
pcmpeqw
mov
addl
jae
loop
xlat
test
icebp
fisttpl
sub
jnp
cmp
push
leave
ja
jo
fdivrs
test
bound
add
and
les
xchg
cmp
arpl
xchg
jmp
push
mov
mov
ret
push
jnp
push
sbb
sbb
pusha
es
adc
daa
cmp
jl
pop
xchg
xor
fwait
xor
inc
add
mov
leave
mov
int
xchg
push
jge
mov
aaa
jl
push
clc
jmp
jbe
test
fs
fadds
out
outsl
pusha
shl
fisubrl
xor
push
jno
or
aad
dec
xchg
scas
xchg
push
push
out
inc
mov
es
out
rcr
inc
popa
add
push
pop
fldenv
popf
sbb
repz
mul
or
sub
int3
rorl
xchg
lea
nop
xchg
lods
dec
mov
pushf
mov
or
jne
push
sub
mov
insl
std
mov
pop
fdivrs
pusha
mov
rclb
neg
pop
stos
shll
aas
fadds
push
mov
out
xchg
imul
pop
push
jg
sbb
fistl
xchg
repnz
sbb
daa
fisttps
je
lahf
popa
jmp
out
xor
inc
xchg
sub
lods
mov
cmp
sbb
xlat
pusha
fildl
jnp
or
testb
daa
aaa
push
les
insl
inc
inc
enter
je
mov
push
aaa
inc
cmpsl
sti
das
push
mov
and
or
pop
fcompl
jno
push
and
mov
out
out
and
shr
mov
outsb
mov
das
push
push
dec
inc
sbb
negl
sbb
imul
inc
xchg
pop
and
jno
aaa
rcr
add
cmp
mov
int3
push
jge
add
push
or
xor
cs
ss
out
mov
std
hlt
jae
into
adcb
mov
push
inc
sahf
cmp
push
fildl
lds
das
inc
pop
mov
movsb
outsb
pop
push
inc
cmp
dec
rolb
jl
mov
jecxz
inc
test
fs
cmpl
dec
cmp
mov
bound
sahf
inc
fisubrs
es
fdivs
xchg
mov
aam
fildll
addl
pop
call
cli
in
lds
add
fs
mov
adc
jecxz
jp
xchg
cmp
sub
jb
pop
jg
push
std
push
pop
inc
int3
lods
test
enter
ds
xor
push
and
push
daa
cmpl
lret
xchg
sub
or
arpl
push
mov
add
movsl
cmp
sbb
mov
int3
enter
sub
cwtl
lret
shl
xor
lahf
push
jne
adc
outsb
loopne
sbb
xlat
stc
test
aaa
mov
jne
mov
rcr
sub
xor
mov
pushf
and
jecxz
addl
cltd
sbbl
pop
dec
push
fstl
out
jmp
sahf
sub
push
inc
mov
xor
in
scas
iret
mov
jle
dec
jmp
mov
jecxz
push
or
pop
inc
and
dec
arpl
push
jae
inc
mov
jg
add
xchg
shrb
sbb
mov
lods
lcall
push
or
pop
xor
sub
fcomi
in
insl
mov
inc
arpl
daa
mov
mov
xchg
lret
adc
adc
xor
dec
das
jo
test
pop
xchg
ds
icebp
movsb
sbb
push
jmp
pop
xor
xchg
jbe
mov
jmp
outsb
mov
xor
fadd
lret
add
inc
ret
ds
push
add
loop
pop
rolb
icebp
call
dec
jge
test
jbe
and
dec
stos
inc
test
popl
in
mov
loop,pt
sub
add
daa
cmp
fwait
cmp
xchg
and
xor
cmp
in
rcrl
fcmovnb
xor
lahf
pop
mov
mov
shll
cmpsl
jbe
jle
fistl
sub
push
dec
fmull
lret
dec
loop
inc
fs
inc
mov
sub
inc
cs
in
sub
and
stos
xchg
inc
lcall
jg
xor
push
movsb
inc
in
xor
sub
cli
adc
cmp
bound
jmp
lea
cmp
sub
adc
pop
push
out
cmc
or
pop
ret
jmp
mov
adc
cmpsb
mov
jge
push
xchg
test
cmp
jae
xor
fwait
jmp
pop
inc
call
xchg
and
cwtl
lret
jne
add
fisubrs
fwait
adc
out
jae
insb
mov
and
xchg
pop
and
cmp
cmpsl
leave
outsb
daa
xor
jecxz
xor
mov
sti
mov
and
cwtl
icebp
mov
cmpsl
ficoml
ljmp
test
pop
gs
aad
push
scas
divl
outsb
dec
pop
jge
lods
je
popa
xor
push
jg
imul
xchg
pop
inc
cltd
fs
sub
ret
dec
add
add
movsl
dec
xchg
ficoml
pusha
adc
lock
ja
test
jecxz
test
enter
jae
or
lea
push
pop
xchg
aaa
jne
add
mov
jg
xor
test
or
and
addr16
pop
jmp
xor
iret
mov
pop
jbe
aaa
push
pop
lahf
arpl
sub
mov
ret
lods
test
xlat
jl
inc
ljmp
push
gs
fistl
xchg
inc
std
push
sub
jo
mov
and
ret
xor
repnz
stos
cwtl
out
xchg
ljmp
dec
stos
dec
call
ret
xchg
mov
out
repz
xchg
dec
test
jne
mov
int3
cmpsb
dec
jno
scas
test
mov
pop
pusha
lods
cwtl
push
xchg
xchg
jne
push
shl
inc
in
stc
nop
fldcw
test
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
aaa
std
xchg
testl
mov
pop
cmp
js
dec
fstps
xchg
push
and
test
push
std
movsb
rcrl
mov
mov
inc
mov
pop
mov
movsb
addl
jg
pop
push
mov
cmc
mov
imul
pop
daa
mov
outsb
shll
xlat
lods
push
pop
jae
sub
int3
movl
dec
push
les
jp
and
xchg
mov
out
outsl
sbb
mov
push
pop
xchg
jle
scas
mov
cs
aam
push
test
gs
push
fmuls
inc
rcrl
and
dec
aas
sbb
or
enter
and
cltd
add
daa
loope
mov
in
hlt
dec
rorl
jge
jl
jl
aas
sbb
jnp
repnz
jb
adc
pop
mov
loope
adc
sub
loop
repz
jns
xchg
and
cld
jmp
cmp
fmuls
call
js
jnp
loope
js
pop
jle
in
adc
mov
jns
sub
ret
xor
out
dec
pusha
mov
movsl
cmpsb
xchg
int
mov
in
andl
sarb
sub
lret
push
iret
and
mov
leave
xor
rcrl
add
clc
adc
cs
push
lret
std
sbb
inc
pop
mov
add
adc
cmp
sbb
xchg
fcmovu
call
lods
inc
fistpl
fwait
xchg
xlat
loop
xchg
mov
lods
jo
pop
fwait
mov
pop
dec
lret
cltd
fiaddl
gs
xor
jle
in
jb
or
je
ja
or
jg
xchg
sub
and
lods
fs
fwait
dec
jecxz
dec
cli
cmp
divl
movhps
lahf
int3
add
mulps
lds
adcb
mov
rorl
xchg
inc
adc
test
test
xchg
sbb
xor
out
jo
inc
inc
lret
dec
fdiv
xchg
or
mov
ss
daa
das
inc
push
jae
dec
or
lods
jnp
les
inc
dec
sarb
scas
pop
les
and
jae
pop
mov
inc
push
scas
xchg
inc
les
sarl
cmp
repz
fs
xchg
icebp
cli
add
inc
jmp
aam
out
mov
pop
dec
sub
outsl
enter
sbb
imul
add
out
dec
inc
imul
rorl
ja
mov
sub
rol
in
mov
jnp
xor
push
shl
aaa
adc
lahf
movsb
clc
jmp
lods
fdivrs
scas
mov
aad
leave
inc
push
cli
or
stos
out
push
pop
push
mov
rclb
clc
mov
pop
xor
out
decl
cmpsb
cli
push
pop
lahf
jne
dec
sub
sub
iret
popf
sbb
pushw
fldl
in
push
push
pop
pop
in
das
pop
scas
mov
lea
and
adc
mov
add
fimuls
leave
repz
std
pop
imul
das
daa
pop
aas
jl
into
or
sbb
leave
aaa
lods
and
and
call
mov
sub
sbb
mov
aam
fisttpl
sti
pop
sbb
sbb
dec
dec
mov
push
in
pop
jb
cmc
into
sbb
jle
cmp
cmp
clc
mov
mov
stc
pop
jl
cld
push
or
inc
and
ds
in
xchg
sub
push
fisttps
adc
add
out
imul
insl
xor
fidivrs
stos
inc
cmp
clc
xchg
xchg
mov
xchg
pop
mov
pop
jmp
les
add
sub
cmp
cmp
add
xor
aad
shll
fs
xor
out
push
sub
test
sbb
fstl
clc
pushf
or
xchg
das
lods
call
rolb
pushf
negl
push
push
shl
mov
inc
sbb
pop
lds
rorl
roll
call
into
mov
push
adc
push
lahf
stos
adc
jnp
xor
cld
cmp
je
shll
and
incb
aad
inc
popa
sbb
ss
adc
aad
enter
ret
and
add
or
xor
int3
aad
into
int3
push
cmpsb
stos
jo
cli
push
je
add
lock
pop
jae
or
lret
and
inc
sbb
mov
mov
repnz
add
push
adc
push
add
arpl
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
