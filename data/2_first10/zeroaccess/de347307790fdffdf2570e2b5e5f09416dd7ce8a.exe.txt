push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
jmp
lret
sbb
or
sub
idivl
addl
and
cmp
xor
je,pn
jo
jnp
jae
insb
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
test
pop
loope
adc
nopl
or
push
insl
or
dec
movb
pusha
inc
fcomps
cmp
add
ret
int3
inc
mov
jecxz
xchg
cmp
mov
sbb
mov
dec
les
arpl
stc
push
jle
mov
cmp
inc
mov
dec
fwait
gs
cmpsl
repz
and
add
dec
push
cmp
cmp
adc
cmp
es
and
outsl
out
jmp
cld
sub
xchg
lock
xor
mov
dec
sbb
adc
inc
sti
push
sbb
pop
out
pop
in
shrb
push
popa
push
aad
mov
sub
repnz
das
xlat
mov
dec
push
fmulp
push
add
mov
pushf
loopne
pop
hlt
adc
xchg
mov
push
into
inc
or
cmp
xchg
push
cmc
fstpt
cltd
mov
out
dec
mov
sarl
lahf
adc
out
in
std
adcb
lock
mov
repnz
cmpsl
sbb
ja
aad
pop
xchg
loop
mov
mov
cmp
test
xor
ljmp
fisubl
adcl
add
mov
outsl
rolb
mov
sbb
sub
or
xor
int
push
cmp
fwait
test
dec
add
insb
push
pop
jne
sbb
int3
shll
popa
mov
je
pop
sub
dec
sbb
inc
adc
fcmovnbe
inc
push
mov
dec
ljmp
and
and
or
push
loope
stc
std
push
mov
push
lock
jg
push
xchg
nop
aam
ds
repz
adc
or
stos
shld
fldcw
mov
mov
lret
fisttps
cmovo
nop
jl
pop
mov
ja
fstpt
jae
movsb
jge
dec
cmp
cmp
jno
adc
mov
inc
movsl
fwait
je
mov
ret
xor
mov
xor
fwait
pop
lods
test
out
dec
movsl
popa
fisttpll
dec
adc
mov
push
xchg
iret
mov
cmc
mov
icebp
clc
mov
iret
xchg
mov
adc
pop
nopl
in
and
icebp
outsl
sub
scas
jns
pop
mov
xor
fnstenv
mov
jp
sub
mov
sub
jmp
cmp
insb
cmp
sub
and
fstl
and
pop
dec
inc
pushf
leave
mov
xor
cs
dec
repz
in
divl
jmp
fbstp
cli
lods
ss
mov
mov
sub
out
neg
and
in
clc
jo
mov
cltd
enter
jecxz
xchg
js
cmpb
jo
notl
adc
stos
xor
jmp
cmp
add
addr16
mov
mov
fwait
xor
fstl
cwtl
sub
adc
cmp
xor
std
sub
mov
jle
fists
sub
movsb
and
adc
push
imul
rolb
mov
aas
and
mov
push
test
test
mov
mov
addl
ss
xchg
push
cmpsl
hlt
sub
pop
dec
xchg
inc
jl
sub
adc
push
cltd
mov
sub
clc
xor
add
stc
and
rorl
pushf
push
jae
inc
jb
outsl
jb
sub
jecxz
jle
repz
push
inc
dec
imul
xchg
or
fcompl
and
adc
arpl
jo
imul
or
clc
cmp
mov
in
push
sbbb
mov
clc
fistpll
cmp
or
in
inc
cmpsb
or
imul
aad
xor
pop
rorb
jecxz
in
mov
and
inc
jg
repnz
inc
inc
cmp
roll
and
cmpl
fisttpll
out
into
scas
test
aaa
enter
shll
xor
jns
cmp
push
push
sbb
pusha
out
decl
in
inc
movsl
pop
pop
add
icebp
enter
nop
or
mov
pusha
in
inc
push
add
sahf
push
push
add
inc
mov
bound
ds
inc
les
cmc
fildll
push
mov
mov
or
push
js
xor
jge
mov
lods
fstpl
out
jno
dec
xchg
pop
aas
pop
adc
mov
lret
mull
fwait
insl
movsl
out
ret
dec
adc
mov
jae
test
negb
mov
push
cmp
pop
in
leave
sti
cmpsl
aad
jno
lock
or
or
mul
jmp
fwait
push
je
mov
shr
lds
outsl
mov
icebp
pop
sub
adc
push
int3
jg
xchg
push
test
aad
push
add
out
fs
push
push
and
daa
mov
fldl2t
cmp
pop
popa
dec
movsb
ljmp
add
sbb
scas
rol
sbb
sub
notb
adc
xchg
xor
int
and
test
xlat
jne
dec
cmp
pop
addl
inc
dec
in
cli
dec
cltd
imul
sahf
int
jmp
inc
lds
cmp
jns
push
push
and
push
cli
xchg
sub
push
sbb
adcl
popf
mov
xor
push
aas
cld
jbe
jo
xchg
mov
pop
data16
sar
jo
or
inc
jmp
outsl
dec
lds
je
xchg
xchg
nop
mov
repz
xor
xchg
mov
stos
pushl
dec
in
sub
in
stos
mov
mov
dec
and
inc
lock
lret
inc
dec
orl
lods
sbb
dec
adc
mov
push
lods
xor
in
pop
cmp
mov
pop
xchg
in
imul
xchg
mov
fisubrs
or
jns
cmp
push
xchg
ret
sbb
jno
sub
sbb
icebp
mov
push
mov
mov
mov
pusha
or
adc
test
fldenv
add
fstps
test
repnz
cmp
xor
ja
or
add
inc
or
push
jecxz
add
andb
add
xchg
xor
dec
push
jb
cmpsb
mov
adc
bound
xchg
inc
pop
sbb
les
mov
notl
cli
aaa
add
popa
adc
push
mov
jno
dec
les
sbb
mov
rolb
pushf
scas
ja
pop
mov
arpl
dec
adc
shlb
adc
std
enter
mov
pushf
dec
inc
sub
lds
cltd
les
push
push
push
adc
mov
int
cmp
shl
inc
shll
int
sub
repz
mov
mov
mov
mov
gs
outsl
pop
cmpsb
xchg
add
inc
aad
jmp
movsl
dec
cli
push
jp
push
movsl
in
fnstenv
in
push
leave
sbb
rclb
inc
jmp
shrl
mov
lret
dec
add
shll
xchg
sti
and
scas
adc
ret
shll
pop
shll
pushf
or
rolb
pop
ss
push
jp
into
xchg
jl
pop
mov
cwtl
adc
xor
ficoms
ss
aas
stos
sbb
xchg
inc
lcall
into
arpl
mov
jmp
jo
lods
cmpl
or
pop
push
test
stos
cmp
outsb
fcmovb
scas
loop
cwtl
insb
fidivl
and
cmpsl
ror
and
push
mov
in
push
loope
inc
aam
jnp
outsb
pop
mov
or
cmp
popa
sbb
aad
push
cmpsb
call
mov
cmp
push
sbb
xchg
js
mov
pop
jne
push
cmc
sbbl
xlat
aad
sbbb
fists
mov
push
and
dec
fisttpll
cmpsl
xor
enter
jmp
sbb
xchg
mov
dec
jl
mov
imul
jmp
repnz
pop
cmp
lret
mov
adc
xchg
cld
ljmp
inc
andb
sub
shl
xlat
test
enter
pop
push
arpl
jae
pop
xchg
in
in
mov
sub
fdiv
hlt
orb
ret
pop
in
fcomps
jbe
fstpt
xchg
test
jb
fs
mov
xchg
inc
dec
xchg
adc
lret
pop
dec
pop
jmp
jl
inc
xchg
jb
lods
mov
daa
mov
push
mov
jl
or
inc
push
rcll
xchg
and
sbb
mov
sub
or
loope
and
out
es
shl
fnsave
mov
xchg
xor
push
les
adc
dec
inc
xor
fistpll
mov
dec
jbe
lea
xchg
mov
daa
out
inc
jle
mov
mov
sub
pop
mov
or
fidivrl
xor
add
fdivrl
dec
mov
xor
pop
imul
bnd
mov
ret
xor
js
lock
xchg
mov
sub
inc
arpl
adc
mov
in
mov
dec
cmpsb
enter
and
sbb
pushf
mov
pop
icebp
sbb
xchg
roll
mov
shll
fisttpll
cwtl
jbe
fisttps
inc
pop
loop
push
and
and
inc
pop
pop
loop
fucom
sub
imul
test
jb
rcrb
rcrl
cmp
adc
aad
pop
push
jmp
jb
movsb
gs
cwtl
dec
int
and
sub
cli
mov
outsb
push
push
mov
scas
xchg
shlb
test
inc
add
push
xor
orl
icebp
cmpsb
pop
push
pop
stos
mov
repz
adc
test
pop
push
add
fldln2
xor
xchg
sti
dec
cmp
shl
stos
lret
out
sbb
and
xor
jge
in
nop
xor
pop
daa
insb
mov
cmpsb
outsb
jo
jge
outsl
or
or
and
or
xor
das
pop
lds
xor
sub
addb
mov
pop
inc
or
push
push
pop
and
cmp
popf
sbb
popa
cld
adc
pop
bound
cmp
mov
jmp
xlat
inc
inc
out
add
cmpsb
jne
clc
xor
jecxz
inc
cmp
insb
xor
and
add
pusha
and
add
daa
sbb
scas
dec
jbe
vmovups
fsubrl
negl
popf
mov
andl
decl
insb
in
mov
aad
xchg
sti
repnz
mov
mov
inc
loop
bound
and
test
add
ljmp
pop
sub
cmp
in
ret
stc
add
cld
call
mov
jge
pop
sub
inc
and
je
cmp
std
add
nop
lahf
sbb
xchg
sub
cmp
iret
mov
xorl
clc
xchg
cmp
les
pop
bound
or
xchg
shll
movsl
icebp
xchg
testb
movsb
aaa
inc
xchg
push
fidivs
leave
fsubr
sub
fbld
push
fistpll
mov
mov
test
jnp
jne
pop
push
notb
sbb
sub
sbb
and
sub
into
sbb
push
insl
dec
std
insb
push
cmp
push
and
pop
add
testb
ss
add
pusha
loop
push
jbe
push
in
cli
mov
movsl
xchg
cmp
loope
jecxz
mov
push
addr16
int
cmp
xor
xchg
adc
hlt
or
mov
pop
out
mov
repz
mov
pushf
add
dec
in
mov
cmp
xor
movsb
pop
mov
ret
bound
fistpl
adc
std
sbb
sbb
les
sti
push
in
in
lock
sub
pop
popa
data16
cli
idivb
dec
push
sub
fadds
jle
and
int
mov
aaa
or
and
shll
lea
pop
push
cmp
jmp
sbb
mov
jle
xor
jbe
into
jo
fnstsw
pop
or
test
mov
lods
xor
xchg
lret
and
push
subb
sbb
cs
push
les
mov
inc
cmc
mov
xchg
jge
inc
xor
inc
push
call
ja
add
popf
cmc
cmpsl
mov
in
imul
leave
popa
sarl
xor
nop
or
out
xchg
loope
and
add
lods
xor
add
jle
es
and
test
mov
jp
cmp
dec
incl
add
lds
and
pushf
jge
mov
jge
push
pushf
shrb
or
sets
pop
sbb
hlt
aaa
push
aad
les
jle
sahf
out
imul
push
popf
add
mov
mov
and
cmp
mov
or
pop
pop
je
inc
jno
xor
push
test
pop
out
inc
cmp
xor
xchg
lods
adc
nop
xchg
mov
inc
push
or
sbb
scas
pop
mov
jnp
aam
test
sbb
addr16
adc
cltd
and
test
xchg
dec
pop
call
gs
outsb
addb
mov
in
or
sbb
sbb
jno
push
push
lock
shr
popf
flds
loopne
mov
jno
test
std
lds
iret
xlat
xor
inc
mov
fsub
mov
cmp
inc
fsubl
fistpll
cmp
test
mov
mov
push
add
and
mov
and
cs
hlt
enter
orb
push
shl
cli
pop
dec
adc
call
jae
inc
out
mov
or
mov
ds
sti
push
popa
sub
clc
shl
mov
add
fs
push
lock
out
pop
xor
int3
test
popf
sbb
or
or
dec
aam
subb
test
xchg
fsubrp
jp
fsubrs
sbb
ss
cmc
cwtl
jo
xor
aaa
mov
cvttps2pi
or
clc
sarl
inc
jmp
sbb
mov
dec
push
loop
pop
push
in
dec
les
dec
rorl
lret
sbb
int
or
xor
rolb
mov
mov
rcrl
mov
mov
sti
cwtl
dec
mov
je
std
enter
xchg
jo
sbb
addl
ss
popf
scas
les
sbb
push
insb
add
add
pop
mov
dec
xor
inc
sub
pushl
pop
xchg
fsubrl
sbb
ljmp
push
ds
xchg
adc
outsb
mov
scas
and
sbb
ret
adc
mov
je
scas
icebp
dec
sbbl
in
adc
out
fsubl
inc
cmp
xor
dec
inc
jne
imul
rorl
push
repz
push
test
and
and
mov
js
sbb
jp
jnp
jg
adc
cmp
mov
mov
popa
mulb
hlt
dec
imul
fnstsw
and
lods
aad
lret
or
fdivrs
inc
test
add
cmp
addr16
sbb
stc
lds
in
ss
pusha
pop
cwtl
cmp
nop
adc
sub
insl
inc
jl
out
sar
jmp
cld
sbb
and
lret
jg
pop
iret
sub
pop
gs
arpl
ja
inc
mov
nop
sbb
push
call
sbb
ss
pop
push
dec
push
ds
xchg
lods
ja
lret
fsubl
rolb
lcall
mov
jmp
sarl
ds
add
outsb
fmull
xchg
cld
int3
sub
inc
bound
cmp
inc
dec
daa
xor
fcomip
repnz
push
pop
cmp
mov
rcll
jo
loopne
into
xchg
lahf
mov
out
ds
add
pop
into
in
push
jnp
gs
sbb
in
sub
lods
rcll
cmp
dec
paddsw
dec
adc
add
and
or
sbb
push
in
push
mov
fcomps
int
hlt
cmp
aas
bound
jg
mov
push
out
int
out
ror
stos
inc
jle
loop
test
cmp
xchg
sub
xor
fwait
pop
adc
into
ss
sbb
pop
xor
cld
lds
xor
pop
mov
inc
lahf
js
mov
xchg
or
xlat
push
test
mov
subl
daa
stos
int3
cltd
fstpt
enter
xor
divb
and
mov
in
and
out
test
inc
sbb
mov
daa
lret
jge
test
imul
push
lds
aam
dec
pushl
filds
and
push
xchg
inc
int
js
inc
test
mov
pop
shlb
cmpsl
or
mov
cli
push
int
out
pop
cli
push
fdivrl
jmp
loope
adc
mov
inc
rcrb
mov
push
and
inc
data16
mov
cs
cmp
cmpsl
add
pop
out
leave
sub
ss
xor
xor
push
pusha
adc
addr16
sub
push
add
ds
repz
mov
loopne
loop
sti
nop
ljmp
shrb
xchg
rcrb
sti
and
int3
dec
imul
stos
in
int
xor
xor
es
lcall
clc
ss
idiv
jl,pn
loop
sub
fcompl
or
push
xor
fs
mov
fisttps
adc
mov
fadd
gs
lcall
or
shlb
roll
fistl
sti
out
adc
fwait
push
fxch
popf
pop
rcrl
xchg
inc
bound
push
stc
push
aad
fwait
mov
dec
arpl
push
shr
and
lahf
scas
mov
push
push
outsb
shlb
imul
or
es
xor
fcomp
mov
sub
xlat
sub
inc
testl
push
les
es
fs
loopne,pt
out
or
pop
out
in
rcrb
xchg
movsl
fidivs
loopne
cmpb
or
scas
xchg
xchg
jge
dec
lret
es
cmp
ds
hlt
js
mov
fmul
ficompl
or
inc
or
lea
call
mov
jle
les
xor
cmpsb
and
or
mov
adc
jmp
arpl
push
inc
push
mov
mov
cmc
pop
test
enter
sbb
sbb
enter
pop
push
and
mov
mov
pusha
sbb
into
adc
inc
jg
pop
in
sbb
aas
push
sub
inc
jle
push
mov
push
xor
js
mov
and
fmull
and
push
xor
inc
nop
ret
inc
mov
popa
into
jecxz
int
push
sbb
or
pushf
xchg
dec
sub
or
dec
aad
xlat
rcrl
pop
nop
dec
add
and
mov
jl
inc
dec
and
jae
mov
lcall
mov
out
adc
in
xchg
loopne
pop
jp
jecxz
rcl
test
add
addr16
and
pusha
pop
repz
push
jecxz
mov
fsts
mov
int3
shrb
or
into
test
inc
bound
mov
push
bound
rcrl
arpl
push
inc
and
je
mov
add
jo
jg
dec
cmpb
and
inc
dec
insb
ret
adc
mov
adc
fbstp
jnp
xor
les
sahf
pop
pop
outsb
push
insl
xor
rcrl
aaa
jge
sbb
out
ret
aam
push
sub
mov
ss
ret
popf
scas
mov
cmp
scas
sbb
pop
cmp
mov
xlat
loope
mov
push
mov
mov
in
test
cwtl
and
loope
cmp
lods
or
pop
and
movsb
lahf
iret
fldt
cmp
out
jecxz
or
adc
mov
shl
jp
je
daa
and
xor
inc
inc
add
sbb
pop
bound
push
add
inc
loopne
rclb
cld
rcrl
rcr
and
lds
aas
icebp
roll
or
xor
stc
in
dec
loop
mov
sbb
sbb
shlb
shll
pop
sbb
sub
lods
ss
pusha
inc
shl
xor
inc
pop
jecxz
jg
cmc
lods
sti
sub
cwtl
mov
push
adc
ljmp
out
push
cltd
stos
jnp
cmp
jecxz,pt
pusha
add
sub
dec
mulb
test
xchg
nop
rcll
mov
sti
je
xchg
adc
cmp
mov
mov
and
xor
pop
jge
subb
ljmp
mov
std
adc
sbb
cltd
adc
loopne
icebp
imul
mov
and
cwtl
sbb
jnp
sbb
test
adc
mov
pop
and
inc
mov
fdivrs
andb
jle
or
sbbl
adc
mov
xchg
add
and
push
pop
int
mov
lods
add
shl
or
fstp
xor
dec
mov
test
push
jecxz
leave
je
loopne
mov
mov
ret
cmpsl
mov
pop
dec
fidivs
sbb
call
inc
bnd
hlt
das
cmc
repz
nop
sar
setge
cmpxchg
push
ljmp
mov
xor
sahf
fs
fdivs
xchg
into
aaa
clc
dec
mov
pop
stc
mov
outsl
aaa
cmp
out
or
aad
or
adc
sub
mov
mov
sar
push
jge
jp
dec
es
pop
shlb
shlb
cmp
dec
cmp
rclb
aaa
jmp
lret
ds
lods
jbe
hlt
lock
xchg
mov
add
xor
call
jnp
xchg
push
movntps
cmc
jae
ss
lahf
mov
add
xor
les
jp
sub
popa
xor
stos
inc
jae
out
fdivrl
xchg
bound
into
xlat
sub
cli
xor
call
sub
mov
inc
popf
sahf
push
cmpsl
push
push
je
dec
push
add
stos
xorb
jg
push
sti
cli
xchg
call
jae
push
in
push
xor
std
jmp
push
cld
pusha
or
sbb
cmp
dec
dec
xor
dec
ss
enter
pop
or
gs
push
call
data16
add
nop
xor
cmpsb
loopne
out
push
add
mov
jge
or
in
repnz
mov
inc
test
cmp
jnp
or
mov
and
pop
mov
xchg
push
mov
movsl
sbb
repz
pop
data16
clc
divb
and
test
into
mov
mov
pusha
jp
rolb
cwtl
loopne
push
adc
mov
jp
mov
lea
popf
mov
xor
xor
ret
fsubrs
xor
xchg
ja
and
sti
or
loopne
xchg
push
pop
hlt
mov
inc
add
sub
insb
cmc
ja
pop
dec
pop
mov
xor
xchg
sbb
mov
xor
push
xor
and
adc
mov
adc
inc
mov
add
and
leave
popa
mov
test
mov
mov
xchg
mov
and
jne
movsl
fiadds
add
cmpsl
sub
xor
mov
fldl
outsb
in
sub
test
inc
push
mov
fstps
cmpsb
fcoml
shrl
inc
sub
mov
ja
test
xchg
frstor
movsl
aad
stc
adc
sub
xchg
pop
gs
cld
js
std
jmp
sbb
inc
or
mov
cmp
int3
lds
jmp
push
rcl
stc
shll
mov
cs
xchg
mov
sub
lahf
mov
imul
cmc
or
in
negb
fdivrl
je
adcl
xchg
lds
push
dec
inc
adc
shlb
les
pop
test
pop
sahf
xor
fistpl
ljmp
xchg
cmp
stos
push
cli
stos
jmp
and
das
mov
inc
sbb
in
lods
aas
lods
loope
mov
mov
js
arpl
icebp
clc
cltd
jae
jne
ja
sbb
int
pop
push
repnz
rorl
int3
aas
push
sarl
movsl
movsl
stos
xor
stc
in
ret
popf
or
jb
push
shl
jo
push
jp
mov
and
js
jmp
ror
hlt
out
jg
lock
shrl
mov
into
loope
cmp
movsl
fldcw
or
test
test
mov
push
lcall
subl
add
mov
int3
scas
add
cmp
jmp
pop
popa
ret
mov
jmp
adc
dec
add
aaa
mov
xchg
mov
cmp
or
int
add
push
mov
std
xor
and
jg
pop
into
and
ret
jb
cwtl
notl
dec
out
sub
pop
cmp
inc
popa
sub
mov
adc
mov
mov
xchg
mov
and
sub
push
and
mov
xor
and
xchg
fnstsw
scas
xor
jb
lret
into
in
cmpl
aas
cmp
or
jl
icebp
iret
pop
and
xor
xchg
mov
mov
mov
subb
lock
mov
hlt
leave
jnp
push
or
fiadds
aas
push
mov
jns
mov
es
aam
lret
fs
stc
ret
push
or
in
jp
lret
jo
xchg
sbb
lret
jl
or
jmp
loopne
imull
mov
fiadds
push
mov
mov
cli
cs
test
scas
int3
mov
std
or
mov
or
inc
and
idivb
sub
jbe
out
or
dec
and
addr16
sbb
cs
push
pop
jmp
ds
in
pop
aaa
ja
mov
add
lods
jnp
in
jo
outsb
xchg
jnp
cwtl
fistps
fiaddl
fcoml
lods
mov
repz
cmp
roll
sub
push
repnz
std
push
mov
inc
or
in
cs
or
scas
clc
lods
rol
gs
inc
pop
dec
mov
dec
aad
adc
mov
adc
pop
adc
scas
insb
mov
mov
jae
mov
jo,pt
enter
ss
xchg
pop
jns
inc
daa
es
mov
int3
stc
in
cmp
cmp
fwait
add
std
and
in
bound
aaa
xor
inc
sbb
popa
fwait
and
or
adc
mov
fwait
push
mov
mov
dec
sbb
pop
fwait
scas
xor
xchg
fcomp
loopne
mov
stc
in
mov
mov
jno
in
inc
or
out
mov
inc
std
and
xchg
mov
popf
jb
test
ljmp
scas
sbb
insb
cltd
or
leave
push
aas
mov
push
test
ds
push
inc
xchg
add
mov
ja
sbb
hlt
lahf
das
jl
dec
sub
mov
rorl
mov
std
ret
andb
inc
addr16
inc
mov
xchg
jge
pop
mov
test
jne
mov
addl
adc
insb
imul
adc
into
pop
rcrl
jnp
jg
adc
jno
sbb
pushf
nop
insl
shll
test
lret
sbb
sbb
mov
pop
or
adc
test
loop
xor
mov
add
lret
mov
dec
inc
mov
mov
sbb
sahf
inc
mov
pop
imul
mov
push
add
fadd
clc
push
fs
mov
pop
mov
cli
dec
repz
lods
jbe
adc
ds
pop
shl
and
mov
or
jb
mov
and
int3
je
push
hlt
out
adc
repz
adc
fdivl
adc
adc
cmpsl
mov
out
pop
add
rorb
pop
and
in
xchg
sahf
sub
lods
jb
filds
ficomps
test
popf
jl,pt
cmc
push
popa
ss
sub
ljmp
mov
dec
test
cmp
xchg
arpl
shr
enter
cmpl
sub
mov
in
clc
mov
nop
adc
es
adc
xor
xchg
fcomps
fsubl
stos
dec
or
sbb
mov
cmp
cwtl
jle
pop
movsb
lcall
jge
mov
jne
mov
jne
imul
hlt
mov
dec
sbb
sub
sbb
add
jbe
mov
jl
shll
mov
dec
test
mov
fistps
pop
pop
cmpsb
xchg
dec
pop
js
sbb
push
or
mov
enter
cmc
mov
int
popa
fsubr
mov
pop
rcrl
fldl
out
push
das
pop
inc
sbb
or
adc
xor
cmc
jae
adc
sbb
ss
mov
push
pop
sarb
out
cmp
sarl
or
pop
mov
les
mov
dec
in
inc
cmp
popa
mov
imul
mov
sub
cmpsb
dec
loope
or
xor
jmp
ficomps
shl
xor
or
outsl
bound
cmp
dec
scas
adc
add
fidivrs
shll
push
mov
push
lea
jmp
mov
xchg
test
sub
push
xchg
cld
shrl
cs
out
cmc
dec
pop
push
jg
adc
xor
cli
les
inc
adcl
loop
adc
popa
gs
sbb
repnz
xchg
loop
fucomp
xchg
fnstsw
adcl
cld
test
xchg
jmp
movsb
cmp
and
sbb
lcall
hlt
pop
es
or
inc
sub
jno
cmp
rcr
ffree
ret
inc
adc
cwtl
je
cmc
cld
shl
dec
bound
push
dec
enter
mov
iret
mov
mov
addr16
sahf
mov
test
mov
enter
xor
push
or
add
and
sub
dec
jmp
cs
or
mov
icebp
or
dec
and
lret
adcb
pop
pop
nop
arpl
and
sub
jle
jno
fistpll
xchg
lcall
push
testb
push
jnp
jns
insb
sub
mov
rcrl
cli
loopne
or
roll
xlat
fiaddl
dec
loopne
cmp
add
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
jmp
inc
nop
jl
rolb
mov
xor
fucomip
pop
addl
add
jno
or
mov
icebp
push
pop
cmp
sbb
push
and
xor
clc
data16
insb
lret
arpl
jae
hlt
mov
xchg
dec
dec
cmp
test
shl
test
mov
repnz
mov
outsl
or
mov
sbb
push
movsl
lock
pusha
in
sbb
dec
mov
mov
inc
jle
pop
cmpl
mov
cli
xor
ret
mov
hlt
xchg
and
fs
inc
ret
mov
sub
call
stos
lods
push
push
xor
sub
pop
pop
outsl
adc
jecxz
sbb
call
jae
nop
into
repz
sbb
int3
fadd
add
sbbb
and
mov
adc
cmp
or
dec
mov
ret
iret
mov
pop
shll
cmp
mov
fwait
scas
and
data16
jmp
inc
sbb
dec
pop
addr16
push
inc
mov
xor
push
adc
notl
mov
jp
mov
cmc
mov
push
mov
jg
lret
mov
push
mov
pop
xlat
or
mov
lea
aam
pop
pop
in
cwtl
xchg
movsb
testl
jns
pop
ds
test
cmp
ss
mov
xlat
aaa
sub
outsb
shrb
push
mov
sub
das
test
jno
xchg
push
jmp
mov
xchg
mov
aam
es
push
dec
imul
or
push
jo
mov
push
dec
pushf
add
jno
fists
leave
test
mov
movsb
stos
into
inc
mov
scas
xchg
xlat
int3
ret
xor
negl
icebp
aaa
add
jbe
jns
cmp
adc
adc
lock
dec
xorl
in
and
stos
mov
mov
mov
mov
xor
add
jns
imul
movb
leave
mov
cmpb
leave
imul
cmp
punpcklbw
ss
insl
test
mov
jo
dec
andl
ret
repnz
xchg
sahf
cld
out
mov
add
inc
dec
mov
jp
repz
fwait
cmp
cmp
in
fwait
daa
sub
push
jg
push
sub
scas
bound
sub
and
pop
or
mov
push
add
dec
jmp
or
push
fdivs
xchg
fisubl
idiv
in
clc
and
xchg
xchg
add
rolb
or
add
lods
in
sub
fs
cmp
cli
loopne
pop
mov
sbb
xchg
int
ret
out
xor
jbe
orb
jge
jns
dec
ret
add
jnp
xor
pushf
cmp
push
cmpsb
xor
aad
subb
dec
test
lods
lret
adc
fisubs
rcrl
inc
adc
xchg
adc
pop
cld
call
mov
dec
jo
fs
leave
and
in
out
cmc
call
mov
sahf
cmpsl
or
aad
dec
pop
ja
ja
push
loopne
jg
xlat
mov
or
in
sbb
jge
xchg
mov
mov
daa
cli
int3
cmp
cmp
fwait
dec
xchg
loopne
sbb
jmp
mov
push
jp
and
pop
repz
int3
arpl
in
js
shl
repz
jne
into
push
daa
cld
lods
cld
out
repnz
loopne
dec
mov
xlat
cmc
sbb
rclb
jo
repz
fcoml
xor
cmp
aas
pop
sti
add
and
dec
lcall
imul
inc
sbb
into
ljmp
inc
inc
cmp
cmp
dec
ljmp
mov
sub
femms
lods
adc
mov
xor
insb
sbb
inc
sbb
data16
fists
and
xchg
pop
push
das
sbb
and
jge
cmc
into
dec
mov
fsubl
mov
adc
fwait
cmp
ret
outsb
add
xchg
xlat
sbb
xor
addr16
add
aam
cmpsb
inc
mov
lret
scas
xchg
movsb
lret
repz
jge
or
inc
arpl
cmp
adc
fnstenv
sbb
xchg
or
ret
add
sbb
sbb
xchg
gs
test
adc
aad
movsb
inc
cmp
push
js
adc
adc
sbb
adc
outsl
pop
jl
adc
addr16
imul
test
mov
iret
push
stc
add
mov
fisttps
mov
sti
sbb
jle
enter
cld
ret
movsl
loope
sub
xor
mov
stos
into
jecxz
xchg
push
hlt
inc
test
xchg
test
mov
rolb
pushf
loop
or
pop
sbb
lcall
insl
xor
rclb
fs
scas
insb
sahf
mov
mov
xor
fsubrl
add
insb
push
lock
popa
adc
es
pop
outsb
jge
movsl
fs
jbe
and
leave
shll
pop
or
push
add
pop
mov
lret
loopne
in
aam
popf
loop
add
adc
mov
or
hlt
pop
jb
gs
xchg
ds
xchg
xchg
pop
and
adc
into
ds
movsb
fwait
xlat
ficomps
sub
push
cmc
mov
xorl
jno
in
cld
sub
jmp
xchg
je
je
loopne
decb
xor
mov
pop
adc
pop
add
xor
pop
mov
jns
fldenv
push
adc
mov
pop
stos
lods
int3
popf
movsb
xor
outsb
js
jecxz
cmp
xchg
rorl
push
xchg
xchg
push
fdivr
dec
cwtl
repnz
fidivrl
or
mulb
orb
loope
xlat
jp
out
leave
fimull
cmp
enter
adc
cmp
sti
cmp
push
es
and
shr
pop
sub
icebp
call
pop
mov
pop
fnstenv
jl
dec
push
or
lock
xor
pop
xor
or
dec
xchg
int
pop
xchg
dec
mov
mov
and
adc
jae
sub
cs
xchg
or
jmp
fstpt
fwait
int
dec
push
and
ljmp
lds
fldt
dec
frstor
movsl
addr16
mov
dec
and
xchg
pop
cmp
push
bound
jne
into
mov
jge
aaa
scas
nop
mov
pop
xchg
xchg
mov
into
mov
pop
lcall
hlt
adc
ss
fcompl
inc
or
jle
rolb
xchg
je
sub
outsb
hlt
nop
dec
test
rcrb
push
jl
lcallw
movsl
lcall
loope
aaa
mov
mov
popf
data16
imul
cltd
add
icebp
jbe
sub
daa
movsb
push
mov
mov
inc
cli
xchg
stos
mov
ret
addr16
cmp
xchg
mov
aad
jle
movsl
push
mov
dec
jbe
prefetch
lcall
xchg
mov
cmpsl
je
mov
frstor
es
lahf
gs
inc
pop
push
jo
pop
jns
push
push
xchg
loopne
xchg
inc
jecxz
stos
lahf
and
jns
xor
jle
mov
in
inc
int
sbb
pop
std
gs
and
ret
inc
cwtl
fsts
and
mov
negl
out
fs
scas
leave
ljmp
jae
xchg
test
mov
into
sbb
loopne
fmull
ss
stc
bound
fnsave
mov
fistps
inc
icebp
jo
shl
push
sub
lret
cld
loopne
inc
std
aaa
enter
sbb
mov
test
popf
xchg
sbb
mov
imull
xor
pushf
frstor
popf
push
aad
fs
call
cmp
iret
imul
cwtl
and
mov
shlb
aad
addr16
sub
mov
cmp
fstpl
inc
add
lods
shll
push
cmp
push
sub
add
jno
sbb
adc
xchg
xor
repz
bound
mov
jl
test
into
lret
sub
adc
sar
adc
xlat
jno
adcb
fisttpll
dec
stos
inc
movsb
lcall
jl
jge
ficoms
movsl
mov
loop
loopne
ret
ljmp
dec
jae
pusha
mov
test
sub
jge
push
mov
clc
cmp
xor
add
or
ljmp
add
push
fcompl
and
in
subl
xlat
jp
and
mov
or
inc
mov
jge
jne
cmpsb
into
push
lds
shrl
cmp
lahf
insb
sbb
repz
and
xchg
xchg
pop
pop
pop
out
xlat
cmpsb
fwait
mov
xchg
jle
cmp
shll
inc
mov
push
rorl
test
loope
or
xchg
jns
pop
icebp
cmc
mov
shl
push
inc
jp
subl
jge
ficompl
mov
dec
nop
outsb
cli
jnp
cwtl
and
cmp
cmpsb
add
adc
aas
cmp
in
xlat
imul
sbb
or
incb
loope
addr16
movsb
dec
cmpsb
imul
mov
push
idiv
adc
lret
fwait
in
push
sub
stc
cmp
insl
inc
pop
repnz
pop
flds
rolb
sub
call
je
mov
fyl2x
scas
or
test
push
sbb
push
nop
dec
test
mov
loopne
das
push
ror
mov
xchg
test
cli
cmp
cmp
rolb
xchg
movsb
in
nop
lahf
sbb
xor
outsb
pushf
ror
stc
jp
inc
fisubl
repz
sti
aam
fcoml
imull
stos
ret
add
fimull
movsl
sahf
outsl
lret
mov
fildl
xor
mov
outsl
enter
xor
adc
pop
inc
xor
jbe
and
cmp
andb
std
pop
fisttpl
gs
push
dec
fdivrs
push
inc
jmp
in
imul
hlt
mov
ljmp
sub
cmp
push
cmp
xlat
sub
test
adc
pop
and
decl
sti
mov
stos
cmpl
sbb
into
dec
dec
cltd
stos
jp
clc
test
pop
mov
sbb
dec
jle
cmp
cmp
adc
out
lahf
adc
pusha
je
aaa
cmp
test
or
fincstp
mov
inc
insb
inc
movsb
cmp
test
jne
lods
xchg
push
incb
in
push
push
push
cli
or
les
push
jns
call
cltd
sti
insb
and
aam
push
xchg
pop
test
jp
mov
mov
push
push
mov
or
repnz
jmp
pop
xchg
fadds
sbb
push
jb,pt
or
cmp
js
icebp
add
lock
rolb
jno
dec
or
pop
jno
xchg
jmp
mov
inc
sub
inc
in
lods
leave
ficoml
mov
pop
ret
cli
fcompl
pop
adc
pop
jmp
xlat
icebp
lods
sub
jmp
pusha
outsl
add
nop
movsb
aad
or
adc
xor
test
mov
mov
push
je
push
lds
jae
jbe
xchg
cli
dec
mov
pop
lea
pop
sti
mov
fnstenv
xor
stos
scas
std
jne
mov
mov
xlat
jo
ds
push
or
xor
fbld
xchg
es
test
cld
lods
rcrl
push
outsb
fidivrs
or
and
addb
jl
in
push
push
cmp
jle
loopne
sub
and
lcall
mov
push
in
and
rcrl
outsl
out
xchg
in
stos
js
mov
sub
mov
adc
mov
pop
in
rorb
mov
in
flds
xor
daa
sub
add
push
push
sbb
add
jle
xchg
ret
stos
inc
xchg
xchg
pop
jecxz
jo
adc
insb
pop
movq
pop
fstpl
adc
push
and
stos
ljmp
jns
cmpsb
cmc
jno
adc
cmpsb
loopne
jge
cmp
xchg
popf
imul
jb
cmpsb
or
leave
mov
lods
push
ja
fdivl
repnz
pop
adc
sbb
out
mov
stos
pop
std
jbe
sbb
out
sar
sub
pop
xor
cmpsb
cld
enter
js
push
lret
pop
bound
jne
push
sti
sbb
fldt
icebp
pop
insl
jns
push
popa
pop
test
sub
lret
mov
xchg
jmp
pop
adc
rol
pop
mulb
and
clc
jle
xchg
cmp
insl
aas
sbb
mov
jb
jg
mov
add
cmp
mov
xor
jb
int
mov
popf
jbe
mov
aad
adc
lret
sar
adc
shll
adc
fwait
sub
lret
mov
ja
dec
test
cmp
les
in
jne
mov
push
mov
subb
sarl
inc
std
pusha
adc
xor
roll
sti
pop
testl
add
outsl
call
mov
cwtl
push
mov
lds
gs
jp
mov
push
xlat
mov
mov
pop
sub
inc
loopne
jo
mov
std
stc
inc
leave
mov
fnsave
mov
leave
cmp
cld
jbe
jle
mov
lret
test
pop
xchg
adc
test
mov
shl
dec
iret
push
push
bound
in
xlat
repz
cmp
lahf
stc
out
clts
movsl
out
xor
lods
xchg
adc
jb
fisttpl
adc
dec
cwtl
jbe
lcall
jge
pop
inc
sub
in
add
push
jb
cmp
mov
mov
popa
push
aam
mov
push
fwait
je
ficompl
and
pop
cld
sbb
fsub
idivl
and
inc
push
daa
mov
jo
sbb
or
out
push
scas
xlat
dec
lahf
sbb
insb
dec
fsubl
mov
js
and
cmc
call
js
xor
movsb
pop
stc
mov
ffreep
dec
lock
lret
arpl
iret
sbb
js
adcl
mov
adc
xor
fcmovb
jns
and
jno
mov
adcb
xlat
scas
jle
out
mov
dec
mov
mov
push
add
mov
pop
mov
faddl
fstpt
lock
test
xchg
out
inc
xchg
scas
mov
test
jmp
adc
xchg
mov
icebp
imul
sahf
cmp
dec
pop
aas
es
enter
mov
sar
xchg
fnstcw
sahf
nop
mov
mov
mov
out
fwait
jmp
pushf
add
jno
loope
fsubp
cwtl
cmpsl
aas
fisubrs
test
mov
scas
adc
mov
sbb
adc
in
repz
out
fwait
out
or
test
jp
sbb
jmp
into
push
sub
dec
dec
cmp
pop
pop
or
pop
div
adc
loopne
scas
dec
in
and
push
stos
xchg
jae
ds
jmp
lahf
adc
imul
sub
adc
xor
insb
inc
add
mov
jae
push
hlt
and
je
bnd
lret
imul
adc
pop
sbb
xchg
jecxz
xor
insl
aam
int3
mov
sub
pop
add
stos
int
add
jle
adc
lcall
imul
push
das
hlt
push
xor
push
jl
and
ret
shl
xchg
sbb
push
pop
add
cmpsl
add
push
es
sti
cmp
add
xor
fwait
fs
sbb
ffreep
mov
xchg
push
lds
mov
cmpl
xchg
fs
arpl
ds
fcoml
sub
cmp
adc
sbb
mov
add
in
add
pop
leave
clc
aas
imul
pushf
jno
out
lahf
dec
xorb
sub
mov
xchg
inc
mov
movsl
mov
mov
sar
nop
mov
push
pusha
dec
pop
mov
xchg
and
cmp
fistl
fmull
orl
popf
add
mov
mov
repz
push
cmp
jl
es
pop
jae
test
call
fnsave
sub
cmp
push
cmp
push
xor
dec
lock
xor
push
addr16
push
and
jne
jl
in
cmp
inc
icebp
stos
shlb
dec
cwtl
roll
xchg
and
mov
in
ja
push
fistps
inc
into
mov
push
les
bound
xor
cmpsb
or
ds
add
loopne
jle
shll
jp
push
aad
xlat
movsl
popf
call
scas
inc
fistpl
les
testb
popf
inc
mov
inc
xlat
lea
pushf
jl
aaa
out
push
test
jo
pop
lahf
rorl
mov
mov
outsl
outsb
sub
add
or
rorl
jmp
pop
or
inc
mov
push
sbb
mov
fisubrl
pop
add
jge
mov
mov
pop
jns
icebp
xor
xor
jo
adc
jg
inc
jl
push
or
jge
das
dec
movsl
push
leave
std
subl
cli
push
pop
mov
jb
out
sbbb
pop
repnz
xor
add
fcomps
cmp
sahf
test
ds
fnstenv
add
xor
pusha
cmp
push
ret
aad
inc
mov
xor
pushf
clc
lods
scas
nop
pop
imul
idivl
and
cmp
push
jne
xchg
outsb
std
cmpsb
cmp
or
jmp
fbld
dec
cmp
jle
insl
mov
stc
fmul
pop
out
mov
xchg
add
scas
fcmovu
xor
or
subl
pop
movsb
cwtl
movsl
jae
popf
pop
imul
xor
cmpsl
dec
adc
jmp
wbinvd
dec
aas
mov
jl
mov
mull
lea
xlat
mov
mov
and
mov
sbb
sub
xchg
and
fimull
in
leave
add
adc
adc
mov
cmp
sbb
out
push
mov
sahf
andb
push
pop
pop
dec
or
xchg
aam
rorl
sbb
cli
inc
xor
pop
or
idivb
cmp
lret
cmp
jno
sub
aas
push
into
mov
inc
xchg
xchg
sbb
push
insl
jo
add
imul
hlt
fucomip
sub
xlat
leave
pushf
or
in
aam
add
push
adc
pop
pop
dec
mov
test
js
pusha
xlat
fmuls
sbb
lds
xlat
popf
jbe
and
icebp
lret
adc
into
fisttps
adc
mov
cs
mov
lahf
mov
pop
mov
pushf
or
clc
pop
and
jnp
bound
lahf
dec
cmpsl
pop
sbb
in
int
lock
mov
sbb
xor
fldenv
pop
shrb
dec
insb
jne
iret
xor
lock
jae
andl
xchg
lret
push
xor
inc
lahf
fistl
test
and
ds
sub
fmull
mov
push
push
sub
imul
push
and
mov
jmp
mov
push
push
xor
and
ret
mov
jbe
mov
stos
and
sbb
jae
jae
fisttpll
mov
and
pop
gs
sahf
jns
mov
sbb
ss
jl
inc
jg
sub
ret
dec
hlt
subb
adc
and
inc
inc
mov
stos
xchg
enter
or
adc
jo
jg
pop
jp
cmp
sub
or
cld
enter
fnsave
iret
xor
lret
and
out
pop
sbb
and
fldl
insl
and
fldl
mov
push
add
mov
push
push
push
inc
jo
aad
shll
dec
and
dec
cmp
mov
and
stos
ja
xor
cmp
cmp
enter
xor
es
jae
arpl
inc
dec
jae
mov
mov
mov
sbb
orl
es
pop
add
xchg
and
pop
mov
and
xchg
or
jecxz
arpl
mov
xchg
cmp
sahf
int3
scas
dec
addr16
or
lahf
mov
mov
cmp
cmp
daa
inc
fwait
scas
pop
pop
sbbl
mov
mov
es
sub
loop
rcrb
fisubrl
mov
inc
aaa
adc
pop
fwait
push
jmp
sbb
scas
flds
jp
or
popa
fnstsw
daa
mov
xor
pop
iret
sub
pushl
mov
push
mov
enter
pop
imul
or
rclb
fcomi
sbb
mov
imul
inc
push
int3
hlt
mov
push
enter
into
mov
or
hlt
fcmovnu
ja
jo
jbe
cld
lods
jbe
xlat
lods
xchg
pop
jp
jnp
and
push
lcall
jo
adc
jo
xchg
xor
lds
jne
lret
outsl
js
dec
cltd
sub
cmp
insb
sub
fldcw
incb
pop
int
cmc
fisubs
ja
add
lods
enter
test
testl
dec
in
pop
cmp
test
aam
fs
das
bound
adc
and
push
mov
out
pusha
mov
sbb
sbb
sbb
sub
mov
add
mov
pusha
mov
loope
or
push
cmp
jl
pushf
xor
pop
xchg
fwait
or
jno
loope
out
mov
add
jmp
std
sti
out
push
pop
sub
sahf
popf
cwtl
or
stos
fcoml
lret
mov
mov
fiadds
lock
lahf
lock
int3
iret
jnp
xchg
pop
int3
fisttpl
int
sbb
fsts
mov
outsl
inc
rcrb
gs
add
and
rcrb
icebp
adc
dec
jnp
add
add
push
ja
mov
lock
dec
cmp
aam
aaa
out
jns
test
testl
cmp
or
in
xchg
sbb
adc
into
js
jge
lcall
mov
xor
xchg
out
push
in
mov
and
imul
and
rorb
imulb
inc
xor
cli
pop
andb
adc
out
dec
hlt
dec
xchg
bound
and
cmpl
es
cmpsb
jl
fucomp
push
shll
xchg
mov
sbb
or
je
adc
test
and
xor
xor
pop
sub
stos
clc
jnp
into
shlb
xchg
incb
loop
mov
in
orl
cmp
pop
adc
gs
stos
pushf
dec
test
adc
sub
xcrypt-ecb
cmpsl
mov
sbb
fwait
push
xchg
pushf
jne
jg
or
sub
das
adc
aaa
mov
xchg
add
mov
push
std
xchg
and
aam
sarl
out
push
es
pop
cmp
in
and
xor
push
test
xchg
and
fidivs
xchg
fstl
mov
and
fisttps
lahf
dec
jns
stc
push
sbb
lods
pop
xchg
stc
lea
and
imul
sbb
sbb
xor
repnz
insl
cmp
shll
pop
into
cmp
push
xchg
dec
cmp
fisubl
arpl
sti
and
push
popf
xchg
mov
cmp
pusha
jne
push
push
add
sub
and
pop
test
hlt
mov
aam
pop
sti
loope
hlt
mov
orb
mov
cmp
xchg
dec
pusha
sbb
push
das
or
aaa
cwtl
dec
movsl
inc
push
push
adc
add
or
dec
js
cltd
movsl
or
jo
mov
jge
push
mov
mov
push
rol
aad
out
xchg
jg
adc
cmp
outsl
in
fwait
xchg
xor
cmp
inc
jne
imul
xor
pop
mov
repnz
push
mov
mov
pop
sub
mov
int
cli
imulb
sbb
loope
daa
stc
sub
lahf
scas
pop
mov
or
das
dec
fmul
cmpsb
dec
loopne
adc
xchg
pop
cld
jnp
inc
or
mov
or
notl
das
dec
xchg
jbe
jmp
pushf
scas
test
in
push
insb
xchg
mov
stos
std
jl
and
jle
mov
testl
pushl
jg
dec
push
xchg
push
inc
jecxz
call
movsl
xor
adc
jb
xor
jne
pop
or
lods
adc
mov
stc
js
mov
and
lret
mov
dec
lret
add
mov
mov
xor
xchg
test
xchg
add
or
repz
in
inc
sub
mov
mov
cmp
divl
push
dec
fcmovnbe
push
xor
fcmovne
loopne
mov
imul
mov
test
enter
das
push
jecxz
cmc
xchg
adcb
add
push
pop
adc
push
les
addr16
lods
xchg
jmp
outsl
sbb
in
out
mov
push
and
sbb
push
sarl
push
mov
in
add
popa
ljmp
lock
jmp
cmp
mov
push
sti
or
mov
cmpsb
inc
or
lret
test
pop
je
add
jmp
jl
outsl
sub
xchg
mov
push
sbb
addl
push
jmp
cmp
fsub
pop
into
adc
je
lret
pop
add
add
and
stc
xchg
std
push
lea
cmp
in
mov
lds
lea
and
cmp
test
incb
jge
jo
pop
adc
or
insb
pop
into
jnp
pushf
lahf
or
and
dec
mov
inc
lds
cmpsb
scas
loopne
cmp
pop
xor
stos
in
inc
stos
jge
xor
fdivl
xor
rorb
inc
mov
sbb
js
push
jns
and
movsb
sub
sub
inc
sub
scas
das
mov
jae
adc
mov
jne
inc
mov
push
shlb
cmpsl
mov
xchg
cmp
out
cmp
movsb
ret
push
clc
add
jl
push
xchg
cmp
std
xor
xchg
inc
scas
stos
jecxz
out
or
inc
fsts
inc
enter
ret
test
repz
mov
xor
lds
xchg
in
adc
mov
out
xor
push
icebp
sub
insl
jne
add
push
sub
hlt
sub
push
add
cld
popa
fdivl
and
ffreep
filds
push
fcoms
dec
movsb
xor
icebp
js
lea
pop
cmpsb
std
mov
hlt
inc
or
dec
jne
pusha
orl
mov
mov
mov
mov
clc
mov
pop
inc
sbb
xchg
mov
add
sbbb
loopne
notl
fs
sbb
mov
adc
xchg
mov
lret
xor
mov
pusha
cmp
lea
cmpsl
add
xor
mov
das
inc
mov
sub
mov
movd
or
in
movsl
jmp
mov
jge
cmp
push
sbb
or
sub
cmp
jo
jle
sbb
insb
pop
sub
jnp
push
pop
fwait
call
push
stos
pusha
adc
shlb
in
int
inc
rcr
lahf
mov
pop
push
xchg
pop
mov
cli
mov
ret
fisubs
test
and
and
je
lock
dec
jne
test
pop
xchg
rcll
dec
les
fwait
xor
dec
sarb
and
imul
xchg
sub
or
push
rclb
and
push
mov
andl
mov
mov
leave
dec
ds
push
or
ss
mov
xor
sbb
mov
xchg
and
xchg
sbbl
leave
push
adc
or
jo
push
rolb
dec
js
movsb
dec
lret
stc
push
stos
fdivrl
gs
divl
repz
xor
mov
sub
inc
push
scas
out
lahf
mov
push
out
dec
js
pop
addr16
stos
cld
xchg
add
sub
hlt
fucom
shll
xor
push
add
inc
mov
int3
cmp
inc
sarb
xor
sbb
fdivl
gs
push
repnz
sub
pushf
cmpsl
sbb
test
mov
sarb
cld
push
std
mov
insl
fadds
dec
inc
movsl
jmp
cld
sbbl
mov
mov
sbb
movsl
bswap
xchg
pop
xchg
and
ret
ja
inc
ret
je
sub
jmp
arpl
pop
fstl
sbb
data16
pop
out
add
hlt
and
repz
mov
lods
in
cmp
insl
add
mov
in
cli
outsl
popf
loopne
roll
cmc
scas
jns
xchg
adc
add
push
call
sti
sub
adc
loopne
pop
outsl
pop
add
sbb
mov
shll
mov
mov
add
in
jp
xchg
stos
movsb
call
jmp
add
and
or
or
outsl
dec
add
or
sub
adc
fnstsw
add
leave
pop
add
mov
mov
mov
push
popa
mov
movsb
mov
mov
in
push
xor
mov
mov
loope
daa
xor
sbb
jp
push
mov
add
lret
sub
pushf
in
jb
mov
clc
dec
idivb
je
sub
dec
pop
pop
fwait
pop
pop
lret
nop
sub
dec
dec
es
lds
pop
call
xlat
imull
push
mov
or
or
ret
ror
and
jb
jno
xor
sbb
aam
aaa
lcall
push
jo
pusha
push
pop
sbb
push
test
dec
fidivs
fisubrs
bnd
xor
stos
cmovs
popw
push
sub
push
mov
cmp
fcomps
das
sarl
sbb
and
outsl
int3
lret
add
inc
mov
sub
aas
and
test
cs
arpl
add
mov
push
xor
mov
mov
imul
lret
lcall
int3
in
out
jp
and
mov
inc
leave
in
ss
iret
sub
jecxz
jbe
lods
dec
mov
xchg
lahf
xor
in
sbb
lea
push
jle
and
ret
sub
imul
sar
cmpsb
hlt
mov
ret
xchg
xor
imul
mov
je
jmp
imul
js
and
sub
and
mov
cltd
adc
iret
lret
sahf
inc
mov
adc
insb
adc
stos
mov
ret
ja
and
mov
sbb
pusha
inc
pushf
xchg
test
movsb
pop
xchg
add
sub
jl
loope
lea
pop
ret
in
jge
pop
sub
add
jnp
push
mov
mov
outsb
and
negl
stc
sbb
pop
adc
push
sbb
dec
jb
imul
mov
xor
push
sbb
jo
pop
mov
mov
jbe
addr16
dec
or
arpl
repz
ds
inc
adc
mov
and
xchg
shrb
or
or
lret
fdiv
cld
xchg
jb
mov
pushf
cmpb
jmp
cltd
inc
nop
push
divb
insb
and
or
dec
xchg
push
shlb
faddl
bnd
jle
lods
fsts
aam
int
into
sarb
lea
aam
inc
fmuls
fisubl
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
jmp
test
addb
sti
jle
pop
cmp
cmpl
popa
mov
ret
inc
mov
xchg
lret
jno
xchg
adcl
sbb
cmp
push
xchg
dec
scas
jns
fmull
sub
or
push
adc
jg
sub
pop
ljmp
lods
jecxz
cmp
xchg
mov
cs
mov
jmp
leave
test
filds
or
push
push
xor
das
addr16
pusha
test
xchg
fisubs
xchg
sub
cmpsb
inc
jae
cmpsl
pop
shl
adc
pop
fsubl
outsb
pop
sbb
mov
repz
xor
test
cmp
scas
aaa
hlt
xor
add
sti
mov
adc
dec
adc
outsb
dec
and
jnp
sub
bound
mov
es
push
xchg
add
inc
fadds
mov
flds
xorl
mov
lahf
mov
jg
mov
pop
and
cld
test
mov
mov
notl
inc
sub
add
ficompl
cld
mov
cmpsl
insl
mov
inc
cmp
adc
scas
push
int
lods
cmp
pop
hlt
call
movsb
jne
pop
push
inc
adc
and
insl
stos
inc
or
lret
cwtl
or
xchg
cli
jge
fstp
push
mov
popa
xor
or
clc
andl
popa
nop
pop
enter
or
sbb
xlat
and
add
mov
xchg
divl
leave
dec
outsb
or
scas
hlt
repz
or
aas
and
rorb
lahf
vmwrite
popa
add
int3
xchg
inc
mov
sub
adc
mov
pop
cli
cs
jle
aam
lock
pop
fxch
dec
mov
ret
sbb
xor
jo
cmp
jp
xor
pop
mulb
inc
outsb
mov
inc
std
sbb
pop
jge
sahf
lock
inc
mov
in
mov
test
adc
mov
sub
pop
rolb
adc
test
cmp
inc
hlt
fdivp
or
mov
daa
sub
pushf
jne
ja
mov
and
xor
rorl
icebp
insl
push
push
jno
dec
clc
stos
loope
push
ljmp
jbe
insl
js
sbb
lcall
ja
lea
iret
xchg
ja
push
pop
insb
xlat
cld
mov
mov
popl
mov
movsb
jbe
lret
cmp
sbb
or
test
repz
mov
sbb
cmp
sub
fstl
cmp
daa
or
mov
inc
int3
push
push
xchg
mov
fucomp
cltd
xor
add
arpl
push
sub
push
clc
and
mov
js
or
nop
movsb
cmp
sbb
into
sbb
popa
pop
cmp
adc
out
mov
insl
fdivl
pop
jo
hlt
mov
push
mov
call
outsl
add
and
pop
push
imul
xchg
dec
loopne
scas
mov
inc
add
pop
lock
je
xchg
movsb
data16
flds
jae
mov
mov
dec
xor
jmp
clc
dec
out
repz
or
fldl
or
and
pop
movsl
sahf
jmp
out
jns
push
das
inc
dec
int3
test
dec
adc
mov
call
repz
dec
cmp
mov
jne
xor
xchg
xor
xchg
dec
cs
or
bnd
lods
pop
movsl
adc
xor
jmp
fwait
jne
adc
iret
enter
ja
jge
bnd
addr16
les
out
xlat
pop
lahf
push
movsl
jge
cli
jns
mov
push
cwtl
hlt
pop
addb
mov
movsl
ja
push
movsb
mov
sub
or
jb
push
sti
icebp
xchg
mov
pop
sbbl
add
cmpsb
sahf
sti
ljmp
sub
pop
jo
cmp
in
sbb
push
push
stc
fisubrl
in
dec
xor
movsb
xor
or
pop
mov
dec
dec
idivb
xor
std
inc
mov
sbb
push
fistps
xchg
xor
ljmp
fpatan
xor
lcall
test
sbb
adc
testl
xchg
mov
mov
mov
cmpsl
loope
insb
pop
dec
enter
jmp
xchg
adc
int
stos
test
fwait
lret
movsb
aas
rcll
fmuls
xor
cmc
mov
inc
into
pushf
cmp
lcall
jno
dec
push
mov
out
cs
shll
pop
push
adc
mov
mov
imul
js
sub
imul
out
iret
daa
jnp
ficompl
cmp
jb
sbb
ljmp
popf
push
cmp
std
dec
in
mov
rol
pop
cmp
nop
mov
fcomps
push
test
out
add
mov
cmp
adc
ss
mov
pushf
aaa
cmp
movsb
dec
test
mov
fidivs
test
mov
in
mov
dec
mov
lods
fldenv
les
adc
inc
mov
lods
push
vmulps
mov
test
enter
jbe
mov
xchg
je
sarl
mov
mov
sub
mov
out
and
bnd
push
ds
pop
cmpsb
push
adc
or
xchg
mov
or
pop
push
scas
inc
mov
ret
js
test
ror
loopne
nop
jbe
cmp
sahf
in
mov
add
in
xchg
in
lea
mov
push
fcmovne
add
hlt
out
iret
dec
aaa
xchg
and
or
out
pusha
enter
rclb
inc
int
in
add
arpl
xlat
cmp
out
xchg
jg
jae
in
sbb
mov
inc
cmp
add
adc
ds
and
jnp
xlat
stc
xchg
je
jge
rcrl
mov
sbb
popa
bnd
mov
fcoms
xchg
pop
testb
pop
dec
or
xchg
lcall
pop
inc
dec
out
inc
pop
push
push
not
xor
hlt
mov
pop
lret
roll
jns
add
adc
mov
or
jmp
stos
jle
mov
xchg
and
ds
hlt
mov
push
lock
cmc
ljmp
xchg
sub
rorl
xchg
stc
mov
inc
and
js
xor
or
lret
push
xchg
jb
mov
sti
lret
cld
cmpsb
jne
xchg
ljmp
mov
jl
xor
mov
loopne
or
orb
data16
out
je
sbb
mov
mov
pop
sbb
add
mov
popf
or
pushf
adc
sub
lds
pop
push
or
sti
in
mov
adc
mov
hlt
lret
es
out
lods
je
pop
jge
mov
hlt
push
xor
stos
sub
inc
subl
lock
pop
bound
pop
add
stc
aad
pushf
xchg
hlt
bound
popa
sub
xchg
sbbb
xor
enter
xchg
enter
into
xor
push
xor
jmp
fadds
push
push
add
sub
lods
rcrl
enter
fadd
push
pop
ljmp
out
cli
dec
cmp
lea
inc
cmc
adc
pushf
int3
xor
ja
push
or
or
push
adc
sahf
xor
fwait
hlt
cld
in
iret
pusha
into
jae
xchg
push
into
adc
test
inc
stos
pop
add
out
pushf
es
fcmove
in
les
and
cmp
inc
sub
xchg
iret
stos
ficomps
and
jne
andb
outsb
ficompl
jle
pop
imul
mov
pushf
sbb
push
and
pushf
xor
mov
inc
divb
insl
iret
cmp
and
jge
mov
xchg
cli
push
mov
mov
ljmp
int
aas
and
xor
jp
jae
jae
dec
mov
and
fwait
inc
lcall
es
add
mov
aad
cmc
adc
push
and
lcall
sbb
ret
adc
push
push
mov
jbe
cltd
mov
pop
mov
fs
ja
inc
imul
xor
lds
mov
sub
jge
cmp
jl
repnz
arpl
jae
and
pop
lcall
mov
jbe
ror
ficomps
pop
addr16
jae
jne
lds
and
cld
mov
sarl
mov
push
mov
or
test
fildl
mov
js
push
ljmp
add
hlt
jb
cld
stos
outsl
ss
imul
dec
insb
mov
xor
mov
adc
push
cmp
icebp
jae
iret
pop
test
iret
adc
ds
xor
push
iret
cmp
cltd
sti
inc
mov
sbb
mov
dec
loop
popf
xchg
fisttps
or
mov
mov
rcl
mov
cmp
andl
adc
inc
sub
cli
sahf
mov
mov
out
mov
dec
popf
mov
adc
les
outsb
scas
dec
cmovnp
sbb
scas
fs
and
sub
jae
inc
dec
xchg
fdivrp
jge
fsubrs
ss
lea
pop
cmc
jle
mov
pop
shld
xorl
nop
mov
jnp
mov
imul
pop
jno
out
rol
add
bound
xor
pop
cs
or
stos
xchg
pop
mov
fwait
mov
fcompl
adc
aas
or
mov
aad
fsubr
sbb
and
es
inc
sbb
mov
nop
or
jecxz
hlt
pop
in
test
rorb
jb
xchg
sarl
dec
jl
fdiv
int3
fcoml
push
xchg
push
cmp
mov
push
cmpsb
jge
push
shrl
push
fsubs
and
pop
jno
or
xor
das
insl
arpl
fsubrl
lahf
and
mov
mov
in
iret
pop
lret
inc
jmp
popa
movsl
mov
push
cmpsl
lods
xchg
inc
loop
push
mov
inc
mov
in
sub
fs
orb
dec
pop
lods
out
mov
mov
in
add
mov
jecxz
cmc
dec
mov
mov
push
lock
repnz
push
lret
movsb
leave
push
xor
xchg
flds
loopne
xchg
fmulp
das
mov
and
adc
mov
cltd
xchg
nop
lds
mov
outsl
test
and
lret
mov
xchg
addr16
pop
adc
push
js
arpl
incl
pop
clc
push
fidivrl
inc
mov
xor
cmp
sbb
cmp
outsb
fsts
ljmp
ja
pop
notl
push
fsubp
add
aad
ret
push
pop
sti
outsl
mov
adc
popa
sbb
jo
or
mov
sbb
mov
movsl
jb
insb
test
jb
nop
mov
mov
imulb
cmpsb
mov
call
mov
jbe
mov
mov
sub
rolb
push
sarl
xchg
sub
fs
pushf
xchg
fmul
repnz
movsl
fsubrl
adcl
xor
repnz
and
push
pop
ret
lock
mov
dec
ljmp
ret
and
pop
ds
insb
add
dec
jno
filds
sahf
loop
xchg
and
mov
push
sbb
push
test
jp
and
or
mov
popf
pushf
jne
fsubp
test
xchg
add
ret
xchg
call
test
jnp
and
fwait
negb
push
push
int
jno
sbb
test
jnp
pop
fsubp
imul
movsl
push
fnstcw
or
xchg
lea
ret
xchg
sub
inc
stos
loopne
test
out
mov
es
cmpl
xor
aad
or
clc
cltd
sbb
daa
dec
jp
jg
imul
push
mov
xchg
xor
jl
mov
jae
xchg
cli
and
in
test
add
add
insb
cmpsb
outsl
jmp
std
or
cmp
adc
stos
push
jmp
inc
dec
cmc
sub
mov
jbe
popf
dec
xlat
rcll
xor
outsl
adc
xchg
mov
mov
or
fptan
test
pop
test
scas
iret
inc
lret
insb
jl
sbbl
popa
adc
sbb
jmp
adc
in
rcr
push
sub
divl
lret
jo
mov
ds
in
push
sbb
sub
repz
dec
repz
cltd
ret
and
jns
frstor
out
jne
ds
xchg
xor
xchg
cmpsl
mov
ret
mov
pop
jo
jle
lea
enter
jle
rcl
stc
inc
daa
dec
add
or
push
rorb
outsb
les
lea
pop
lret
cmpb
leave
movsl
nop
jae
xchg
sub
mulb
sub
adc
jne
mov
jb
jae
clc
adc
sub
or
mov
push
stos
mov
jmp
rclb
inc
push
stos
xchg
lea
ficoms
clc
sub
jecxz
dec
push
mov
dec
ja
dec
jecxz
push
jecxz
lock
orl
dec
jecxz
mov
test
fadds
ljmp
xchg
std
mov
mov
mov
xor
stos
stc
pop
leave
or
sub
dec
mov
or
insl
inc
lods
cmc
and
cmc
adc
test
or
push
aad
test
dec
fs
mov
lds
mov
push
shrl
sbb
mov
inc
mov
jmp
lcall
lds
sub
dec
out
int3
mov
aaa
cltd
xchg
mov
sahf
jne
adc
add
jnp
inc
push
cmpsb
mov
sub
ret
test
add
inc
mov
scas
arpl
xchg
jecxz
pop
loopne
cmpb
rcll
dec
jae
scas
rcrb
xchg
xchg
xor
inc
jbe
ss
xchg
cmp
out
sti
aas
in
ret
xor
lds
pop
push
mov
movsb
push
mov
outsl
push
mov
fs
dec
nop
inc
sbb
divb
push
imul
jp
cmp
pop
sbb
add
dec
sbb
lcall
pop
mov
jne
rcr
mov
dec
mov
jle
nop
shll
rolb
sahf
jmp
inc
mov
mov
mul
mov
jne
scas
cli
sub
sarb
scas
sbb
ret
int3
stos
push
fs
bound
lret
and
cmpsb
inc
fadds
loopne
push
rolb
push
nop
movsl
cli
test
mov
mov
mov
sub
stc
rol
fmulp
inc
xor
xor
sub
mov
das
and
out
icebp
ret
mov
rorl
dec
notb
xchg
push
mov
popl
xchg
cld
pop
xchg
cli
and
sbb
or
mov
and
cmc
outsb
orl
or
dec
sbb
xchg
jmp
xor
or
mov
jp
cmp
ficomps
and
mov
xchg
jo
pop
or
jg
push
jecxz
ljmp
test
dec
mov
or
inc
or
push
scas
push
js
jmp
test
mov
mov
or
push
scas
xchg
sbb
stos
adc
jge
rcr
aam
xor
outsl
mov
sub
fnstsw
and
xchg
scas
xor
adc
inc
fsubrl
adcb
xor
into
add
inc
test
jp
add
pop
sbb
cmp
inc
jp
popf
jg
out
daa
call
adc
jl
repnz
jg
xor
xchg
mov
mov
jge
push
inc
cmp
pop
aad
sbb
inc
fsubs
fs
fsubrl
enter
rcll
fldcw
pushf
sub
icebp
aam
cmpsl
leave
mov
outsb
ds
mov
mov
sti
addr16
xor
mov
out
test
lcall
sbb
push
or
or
ja
add
push
lret
ficoml
cmpsl
jo
aam
pop
adc
pushf
in
or
divl
outsl
icebp
test
outsl
call
add
lahf
jl
or
cmp
cmp
std
in
imul
or
jmp
aad
out
sub
sub
sar
test
pop
xchg
adc
xchg
pop
hlt
mov
push
pop
aaa
jg
xchg
lds
add
loope
push
std
dec
icebp
push
rorl
mov
sub
inc
pop
or
xor
rcrb
inc
jg
inc
fwait
les
pop
push
dec
jmp
sti
enter
mov
sbbl
ljmp
fwait
jmp
test
bnd
dec
decl
adc
das
popf
or
sbb
lds
mov
jnp
sbb
jno
test
aas
xchg
aas
shlb
aad
stos
mov
imul
cmpsb
sbbl
mov
sub
jg
push
stos
data16
xchg
xchg
jnp
jge
push
adc
mov
stos
ja
mov
mov
jne,pt
pop
mov
test
test
leave
call
popa
loope
scas
mov
cli
push
pop
aaa
fisubrl
mov
mov
es
and
icebp
arpl
sbbb
imul
sti
inc
sahf
shll
inc
insb
lods
mov
rcll
push
inc
daa
push
mov
iret
in
sbb
fstl
ret
cwtl
bound
push
jne
icebp
dec
cwtl
push
xchg
adc
cli
sub
movsb
xchg
popf
pusha
movsb
sbb
sti
jecxz
inc
sarb
jns
inc
insb
test
inc
xchg
jecxz
out
push
pop
cmp
add
mov
test
and
pop
out
sub
addb
test
adc
loope
ja
mov
jg
test
mov
inc
lcall
das
repnz
ss
leave
je
cmpb
xchg
adc
and
out
xchg
xor
out
add
into
cmp
pop
mov
fwait
rclb
fsts
jnp
fcoml
and
repz
lret
movsb
pop
push
clc
xor
xor
daa
cld
rclb
js
sub
cmc
jae
xlat
jl
movsb
in
adc
mov
jno
pop
mov
cmp
inc
aaa
loopne
stos
sub
loop
test
test
xchg
iret
loope
in
pusha
xchg
rep
mov
xor
sbb
add
aas
jae
mov
fldl
ds
jae
jnp
xorb
mov
test
dec
bnd
cld
je
mov
or
xchg
outsl
aad
test
lret
je
mov
jecxz
or
test
hlt
xchg
in
cli
sbb
je
lcall
and
dec
dec
jecxz
push
adc
mov
and
aad
pop
divl
xchg
cmp
in
xchg
fucomip
or
fadds
sub
push
into
jle
inc
lea
mov
inc
popf
mov
fnsave
mov
mov
jno
inc
jnp
xor
add
lods
nop
xchg
scas
cmp
cmp
jno
sub
mov
mov
popa
lea
dec
fadds
adc
insl
mov
test
push
pusha
jmp
mov
daa
mov
leave
mov
sbb
xchg
int
push
out
mov
add
dec
sahf
cmp
pop
lds
lea
sub
dec
lods
mov
push
lds
inc
lret
shrb
sub
inc
push
push
xlat
lods
rcrl
in
enter
push
jge
hlt
inc
adc
ret
loop
scas
push
lcall
cmc
push
jnp
and
dec
jbe
cmp
cmp
cmp
jo
lret
fwait
ljmp
push
scas
cmp
daa
bound
sub
push
imul
fdivr
data16
les
sbb
push
into
xchg
cmp
cmp
ljmp
std
xchg
nop
loopne
xorb
jae
ficompl
lret
loopne
mov
lret
sbb
add
mov
sbb
xchg
add
inc
or
cli
dec
aas
stc
movsb
es
mov
push
sbb
mov
insb
pop
pop
mov
dec
jns
mulb
fsts
jbe
mov
push
cmp
pop
clc
pop
xchg
xchg
imul
das
and
jl
push
pop
cmpl
mov
mov
fdivr
aaa
aas
sti
mov
mov
adc
sbb
loopne
jbe
shrb
mov
jl
aad
das
inc
push
pushf
test
sahf
aad
cmpsl
and
out
dec
xlat
push
adc
mov
rcl
lds
das
notl
cmp
adc
shrl
dec
nop
mov
lcall
sub
cmp
test
adc
fadds
mov
sbb
icebp
mov
insl
out
adc
stos
popa
push
pop
mov
js
cmp
ret
jg
scas
imul
dec
xchg
jno
inc
test
outsb
jge
fiaddl
pop
das
pop
roll
movsb
pop
into
loope
mov
mov
mov
std
js
scas
hlt
push
push
popa
xor
mov
loope
or
sub
nop
enter
mov
push
xor
insl
mov
sbb
mov
out
xchg
xor
pop
xorb
xor
push
leave
pop
push
mov
aas
push
adc
mov
dec
push
movsl
jmp
pop
adc
stos
jmp
mov
push
push
mov
mov
clc
outsl
mov
mov
cmpsb
hlt
xor
and
imul
cld
sub
ds
push
mov
icebp
ds
cltd
jecxz
push
pop
add
fidivs
push
push
lods
cltd
fidivs
scas
js
push
stc
call
adc
mov
fs
fnstenv
lods
test
into
popf
pop
lret
pop
out
inc
les
es
xor
sbbb
inc
aaa
push
mov
imul
xor
xchg
cwtl
sbb
lret
daa
pop
fsubl
movsl
adc
lods
inc
popa
push
js
fistps
inc
jns
adc
mov
cmp
pushf
stos
dec
mov
addr16
negb
xchg
lret
adc
cli
fisttps
pop
rcrl
cmpsb
cwtl
bound
or
push
cwtl
cmp
cwtl
add
xchg
pop
jnp
sub
movsb
or
cmpsb
mov
out
xor
mov
out
xchg
push
stc
push
mov
push
cmp
adc
pushl
fsubr
push
das
add
mov
call
pop
xor
scas
icebp
mov
mov
cmpsb
fiaddl
push
icebp
and
adc
mov
int
test
xchg
xchg
fcmovnb
push
scas
add
sbbb
lea
clc
ret
inc
cmp
mov
test
mov
fcom
test
sarl
dec
or
mov
mov
cmp
add
inc
mov
mov
or
xor
lea
xchg
movsb
ljmp
mov
rol
sbb
cmp
iret
and
cmp
inc
and
fdivl
cmpsb
and
mov
repz
insb
adc
je
and
cmc
jae
loope
mov
mov
and
cli
mov
movntps
popf
mov
sub
lahf
iret
test
sub
cs
xchg
test
loope
cmp
arpl
les
ficoms
es
aad
loop
pop
pop
add
mov
xor
push
std
negb
fwait
xor
mov
fisttps
ficompl
clc
lea
movsb
jnp
sahf
and
jb
mov
imul
pusha
xchg
xlat
jno
out
cmpsb
adc
pushw
test
ss
loopne
xor
dec
lods
out
sub
cmp
aad
test
mov
mov
fsubrs
xchg
rcrl
ret
sbb
int3
mov
ficoml
dec
in
popf
xchg
mov
or
mov
int
int3
add
adc
and
or
ljmp
into
push
stos
inc
cmp
mov
lds
test
sub
xor
mov
pop
nopl
fists
imul
sarb
push
mov
movsl
adc
adc
ficomps
fimuls
cmp
jb
xchg
movsb
mov
inc
leave
inc
les
aaa
fwait
out
cwtl
outsb
pop
jne
inc
dec
into
in
fmuls
fidivs
lds
lcall
pop
push
aaa
test
jge
sarl
enter
mov
enter
cltd
nop
ror
mov
mov
add
movsl
pop
stos
sti
xchg
into
xor
mov
sbb
hlt
add
cltd
lea
and
cld
in
sti
mulb
rcl
inc
xor
into
mov
pop
and
leave
fistl
iret
aas
out
addr16
aad
jb
jp
and
mov
ret
mov
outsl
jg
mov
mov
mov
repz
adc
fstpl
icebp
mov
ljmp
sti
mov
jb
adc
loope
mov
movsl
test
outsb
mov
xor
outsl
push
push
cmp
push
repnz
cmp
xor
adc
fcmovbe
jp
out
adc
mov
jl
popf
divb
jmp
ss
das
jmp
mov
xchg
pop
stos
ss
xchg
das
push
or
fucom
lock
imul
inc
mov
mov
push
les
jle
add
test
dec
sbb
adc
cs
xor
mov
push
xor
in
push
xchg
mov
dec
pop
push
ljmp
xor
cltd
dec
or
mov
sub
mov
orl
das
jns
mov
sub
pop
inc
mov
inc
or
sub
cmpsl
les
stos
popa
push
push
adc
daa
mov
push
jge
lea
inc
xchg
mov
dec
in
pop
loope
mov
lock
movsb
add
xlat
push
data16
add
loope
mov
aaa
lcall
test
out
jp
mov
xor
loopne
test
add
mov
stc
adc
jbe
jle
movsb
and
data16
mov
jbe
test
ljmp
pop
scas
insl
or
outsb
loope
pop
int
adc
mov
loopne
imul
sbb
fdivl
xor
cmp
xor
icebp
insb
jl
mov
cmpsl
mov
xchg
mov
adc
mov
push
stc
scas
push
hlt
push
or
jne
cs
aad
push
pop
scas
sbb
mov
sarl
mov
push
fcmovnb
mov
in
daa
test
sbb
sarb
inc
push
or
adc
shr
sahf
lahf
data16
xchg
insl
inc
xchg
mov
cmpps
js
fwait
mov
test
pop
stos
cmp
inc
fwait
push
test
repz
sbb
or
adc
inc
ds
sub
gs
insl
dec
in
xchg
jnp
aam
cmpsb
lds
mov
or
insb
push
in
jnp
scas
lock
mov
cld
cmpsb
pop
clc
test
adc
addr16
data16
push
jmp
dec
out
cmpsl
inc
pop
adc
jecxz
cli
hlt
jmp
rcll
fadd
int3
and
loope
push
pop
cmp
and
adc
rol
or
cltd
inc
clc
outsl
adc
mov
sub
divl
roll
mov
loopne
aad
mov
or
jae
sbb
in
dec
pop
mov
cltd
inc
idiv
mov
mov
call
arpl
pop
adc
imul
jmp
jecxz
je
shlb
aas
in
mov
call
movsb
incb
lods
jae
sti
enter
adc
enter
icebp
push
xor
les
loope
aad
mov
test
icebp
fstps
fisubrl
lcall
adc
cmp
inc
mov
inc
jle
fwait
pop
sub
mov
push
jo
notb
je
and
repnz
stos
cltd
jnp
ss
hlt
pop
inc
sbb
adc
subl
ds
gs
add
dec
sub
xchg
push
into
xor
mov
and
arpl
dec
inc
jnp
jo
lock
inc
mov
or
xor
mov
inc
mov
push
shr
jle
or
cmp
ret
xlat
sbb
mov
mov
sbb
xor
cmp
jg
cmp
leave
sub
mov
sbb
fidivl
call
mov
repnz
pop
dec
fwait
fwait
testb
int
sub
pop
loop
cmc
inc
pop
js
arpl
imul
add
add
mov
sbb
lea
sub
fcmove
andl
imul
mov
jle
or
sbb
movsb
ja
push
push
inc
jge
into
pusha
cmovg
icebp
adc
test
jmp
xchg
jp
cld
jmp
xor
bswap
jmp
mov
mov
int
out
xor
test
or
pop
aas
ret
in
flds
pop
test
pop
pop
outsb
ret
daa
xchg
scas
orb
aas
aaa
jne
out
rcrb
test
sub
sub
icebp
rcll
xchg
sbb
lcall
and
sti
aas
mov
int
sub
lcall
notb
aad
adc
push
mov
jge
out
adc
addl
shrl
imul
mov
jmp
std
mov
out
pop
in
mov
ss
dec
loop
inc
inc
imul
mov
inc
fwait
dec
push
outsb
push
lea
xchg
or
add
stc
mov
sbb
js
ret
cwtl
test
and
push
push
pop
test
ljmp
cli
fcomps
adc
cmc
add
dec
xchg
xchg
xor
xchg
ljmp
fwait
andb
scas
sbb
jp
test
pusha
fists
or
fwait
mov
inc
xchg
js
pop
test
xor
cmp
shr
add
or
adc
dec
sub
loopne
adc
js
mov
or
jmp
xchg
mov
push
mov
mov
add
xchg
sti
inc
push
sbb
sub
mov
std
scas
mov
sbb
xchg
mov
movsb
insb
fsubrs
push
add
cmp
push
jns
outsl
out
or
push
cmp
repnz
mov
mov
push
out
scas
hlt
mov
fisttpl
jb
dec
jns
pop
or
mov
jno
and
cmp
mov
sub
fs
mov
test
ja
push
stc
call
xchg
cwtl
cmp
stos
xor
sub
aaa
xor
adc
pop
lock
call
mov
adc
divb
pop
in
and
or
jne
jle
jne
inc
inc
fldt
sbb
cmp
js
push
daa
inc
icebp
shl
jl
sub
xchg
out
cmpsb
shll
int3
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
jmp
or
mov
hlt
jne
xchg
push
fdivs
adc
addl
push
fldl
inc
stos
repz
jmp
stos
adc
sbb
cwtl
ljmp
adc
inc
pop
pushf
add
sbb
adc
cmp
pop
mov
jo
dec
fadds
jmp
int3
icebp
addr16
lret
add
mov
leave
adc
push
mov
shll
xchg
inc
mov
daa
loopne
push
jg
or
aaa
dec
fwait
loop
dec
jno
ds
std
lods
jge
adc
imul
lcall
mov
stc
sahf
daa
ljmp
adc
adc
adc
push
mov
ljmp
pop
inc
pop
mov
and
fistpll
fisubl
adc
cmpl
adc
or
mov
mov
mov
fwait
dec
push
sahf
pop
pusha
cli
or
outsb
cmc
dec
das
cs
int3
ret
bound
lods
xchg
sbbb
ret
cmp
imul
mov
and
sub
icebp
leave
outsl
lods
jmp
mov
les
or
lret
arpl
aam
sub
mov
fsubl
mov
cwtl
mov
lret
fwait
out
addr16
mov
cwtl
popf
popf
fsubl
test
push
adc
lods
and
lods
dec
js
jmp
ds
cmp
lahf
aas
std
mov
fwait
mov
fsubrs
out
das
lret
pop
lods
or
les
pop
test
enter
xchg
mov
mov
and
int
rolb
jo
pusha
shll
push
mov
fxtract
movsl
insb
mov
dec
rol
shrl
pop
add
mov
add
push
scas
xchg
fsubr
jbe
shll
fldcw
fwait
jle
stos
pop
mov
adc
sbb
xchg
push
int3
repz
loope
add
nop
pop
push
inc
jbe
dec
jg
jo
push
mov
int3
jmp
stos
pusha
out
cltd
or
push
cs
sbb
sub
push
sbb
add
push
push
mov
lock
test
mov
adc
xor
dec
imul
dec
sar
test
lock
imul
cmp
aaa
or
test
loopne
jae
mov
jns
enter
pop
sbb
xchg
arpl
cld
into
sahf
and
xchg
lds
popa
pop
sbb
imul
shrl
inc
outsb
jo
cltd
jns
push
lcall
mov
movsl
fistpl
cwtl
outsl
or
sub
mov
sbb
xchg
loope
out
mov
scas
mov
test
cmp
nop
xor
jl
fadds
jb
dec
or
fwait
lods
hlt
dec
inc
bound
test
sub
mov
iret
dec
punpckhwd
andl
aas
fadd
jl
jno
jbe
icebp
dec
popf
call
inc
out
insb
inc
out
repz
insb
leave
inc
int3
dec
cwtl
stos
inc
mov
mov
out
cmc
daa
jp
xchg
dec
or
std
or
test
dec
mov
xor
adc
and
push
test
mov
jno
sahf
lods
int3
rcrl
cmp
test
pop
mov
adc
scas
mov
mov
inc
and
or
mov
test
ja
outsl
scas
aas
scas
jae
cmp
cltd
jle
rcl
notl
les
cs
xchg
sbb
pop
sub
xor
xor
test
inc
fstps
out
adc
int
jg
into
xchg
lock
fimull
lcall
call
lahf
xor
cmpsb
mov
out
inc
les
aam
inc
push
into
fcom
add
in
cli
pop
push
sub
sub
sarw
cmpsl
popa
nop
and
push
jae
cs
inc
inc
clc
inc
or
cmp
fwait
jo
mov
jmp
xorb
cmpsb
outsb
sbb
ss
ljmp
movsl
dec
sub
test
fistps
imul
mov
xor
repnz
outsb
ret
idiv
push
inc
idivl
sbb
fists
push
or
xor
mov
test
gs
push
dec
sub
push
xlat
rclb
mov
scas
fldl
sub
mov
outsl
xor
enter
pop
inc
xchg
jns
aad
enter
outsl
movsl
imull
add
push
inc
sbb
pop
and
outsb
ss
adc
lock
jp
roll
fstl
dec
ss
fs
test
push
cld
xchg
lods
js
sarl
rcll
dec
sahf
pop
pop
lahf
movsl
jnp
add
dec
push
scas
dec
fadds
dec
mov
sahf
xchg
add
sub
icebp
jle
insb
aaa
sbb
insb
adc
enter
sbb
push
xor
push
jle
shll
mov
insb
jnp
mov
xor
mov
mov
xlat
jae
xchg
negl
push
jge
sbb
mov
mov
addl
aas
scas
pop
std
ljmp
pop
callw
mov
cli
sahf
ss
sbb
or
gs
daa
mov
clc
mov
mov
adc
jg
fstl
push
and
pushf
inc
mov
or
or
inc
mov
lahf
dec
sub
mov
xchg
ja
test
aam
or
xor
cltd
xchg
dec
outsb
jg
adc
sub
jge
sbb
jnp
in
mov
rorb
sbbl
dec
dec
inc
hlt
outsb
adc
mov
lret
aam
icebp
jp
fiadds
jmp
mov
pop
imul
daa
or
adc
shrb
push
mov
add
mov
ret
test
mov
dec
mov
jnp
or
dec
fidivs
test
stos
sub
cli
cwtl
mov
dec
xchg
mov
sbb
dec
mov
jb
add
js
mov
push
out
icebp
inc
jp
push
add
fidivl
xor
add
cmpsb
clc
sbb
dec
push
xchg
push
js
xor
push
inc
dec
mov
or
and
cmp
in
cwtl
or
sar
sbb
xor
repnz
adc
sbb
in
or
xchg
mov
xlat
scas
sti
mov
sub
inc
leave
popf
outsb
sbb
ficomps
roll
movsl
sahf
std
scas
cmpsl
aas
je
dec
out
inc
sub
jl
mov
inc
in
jle
mov
xlat
or
dec
out
neg
sub
test
ljmp
sbb
inc
pushf
mov
cld
xlat
xor
insl
mov
inc
sahf
and
add
xor
push
inc
push
mov
dec
fstps
and
into
cs
push
jbe
sub
lret
xchg
das
and
out
sbb
or
jbe
insl
rcl
loopne
ret
mov
aaa
test
test
test
sarl
inc
jmp
sbb
jg
ret
fwait
pop
push
test
xor
pop
inc
mov
mov
mov
shlb
out
in
test
jno
insb
inc
push
mov
outsb
cmp
ret
scas
in
out
int
rep
xchg
mov
fcompl
mov
mov
dec
inc
inc
fwait
mov
cmp
inc
mov
push
out
lods
std
es
loop
mov
xchg
xlat
ret
ret
jb
aas
mov
int
idivb
ss
rcrl
shr
pushf
mov
sbb
jns
xlat
ret
adcb
enter
scas
mov
dec
xor
popa
leave
or
dec
out
lods
jne
mov
aad
lods
test
int3
xor
inc
subl
fadds
aas
test
push
rcll
push
cmp
in
cmpsb
insl
test
cli
ffree
cwtl
lock
addr16
xor
insl
addr16
xchg
shll
nop
inc
cmpsl
sbbb
daa
out
cmp
loopne
push
mov
sti
add
mov
call
jecxz
fstpl
stos
outsb
jnp
movsl
movsb
fsub
repnz
jb
rcr
mov
loopne
loope
and
ss
es
add
test
push
push
xchg
shrl
int3
push
mov
adc
dec
loopne
or
hlt
cmp
mov
cmp
and
cmp
pusha
pop
les
mov
dec
outsb
jne
repnz
out
lods
test
jno
mov
mov
xor
cmp
call
fwait
test
dec
dec
sub
jecxz
cmp
cmpb
xchg
std
call
repz
cmp
test
lods
jne
dec
mov
push
stos
loop
jmp
fisttps
add
fucomp
inc
xchg
or
lea
cwtl
jl
or
fcmovnbe
push
jecxz
pop
pop
faddl
cwtl
pop
adc
cmpsl
pop
or
insl
popf
sub
ds
push
cmc
jb
xlat
das
jl
xor
sub
jge
orl
fistl
mov
inc
mov
pop
rcrb
rcll
xchg
jb
jns
push
les
xchg
movsb
or
scas
and
fbld
mov
cltd
mov
mov
mov
loopne
mov
push
xchg
sub
xchg
cmp
sbb
dec
cmp
call
or
mov
push
push
movsb
js
jb
inc
push
fimull
xadd
nop
jmp
push
stos
pop
and
sbb
ljmp
dec
jns
insl
inc
mov
mov
and
mov
sbb
jne
pusha
jb
xchg
aad
pop
sbb
mov
jge
lods
stc
sub
xchg
sbb
nop
xchg
jp
insb
jecxz
xchg
adc
in
js
repnz
adc
sub
pop
addr16
shl
loope
bound
stos
test
leave
add
adc
aad
add
into
loope
push
or
sub
or
lret
mov
or
mov
nop
add
dec
jg
fstpl
jmp
and
fwait
mov
or
testb
lds
loop
jo
jl
int
mov
jb
dec
cmp
ds
xchg
pop
lods
xchg
loop
retw
sbb
inc
inc
or
cwtl
popf
mov
sub
fisubrl
ss
jnp
out
pop
pop
dec
mov
dec
xchg
cmp
mov
stos
aad
inc
jmp
idivl
push
pop
lahf
pop
adc
mov
jmp
sub
add
inc
sub
push
fisttpll
into
dec
add
insb
lds
clc
insl
stos
lcall
pusha
cwtl
and
dec
sar
pop
int
push
pop
aas
imul
shlb
fcoml
popa
js
add
pop
mov
xorl
pop
mov
in
cmpsl
push
adc
jg
rcl
add
xchg
fsubrs
xor
mov
mov
add
daa
and
jae
cmp
cltd
adc
jg
xor
int3
pop
mov
enter
sub
mov
dec
lret
dec
mov
bound
ret
sub
hlt
jl
xchg
and
push
add
xchg
push
lock
push
stos
cmp
cmp
into
push
cli
inc
push
test
jge
inc
call
fisubrl
xchg
mov
outsb
mov
popf
imull
jmp
lock
mov
dec
push
test
imulb
cmc
ds
cmp
dec
aad
cld
dec
xor
jl
or
push
mov
dec
or
push
fwait
jg
sub
cmp
int
sub
mov
sarb
inc
pushf
daa
add
les
ss
adc
rcrb
and
and
inc
push
xchg
sub
sbb
jbe
stos
aaa
mov
xchg
or
int
mov
xchg
repz
and
mov
lcall
in
ljmp
adc
daa
shl
jecxz
xchg
mov
dec
test
sbb
pop
mov
mov
mov
mov
or
leave
decb
adc
mov
sbb
les
sub
arpl
imull
insb
mov
jae
cld
and
out
in
mov
pushf
add
jns
sub
imul
xchg
popa
popl
imul
pusha
and
adc
inc
lret
xchg
mov
lret
adc
mov
jne
or
and
mov
jno
fwait
mov
mov
push
test
out
or
in
or
pop
inc
loope
stc
std
mov
cmp
add
lock
sbbb
push
nop
cmp
sbb
mov
daa
into
or
push
lret
pusha
lds
xor
fcmovnb
daa
daa
push
imul
test
lock
loopne
in
jg
push
sub
mov
jmp
scas
pop
fstps
push
pop
sub
jecxz
inc
adc
out
cmpsb
shrl
pop
call
int3
mov
push
pop
jae
aam
push
leave
jae
sbb
mov
mov
xor
insb
and
andl
outsl
clc
sbb
push
adc
xor
loopne
push
xchg
xchg
addr16
cmp
jge
mov
mov
sub
mov
popa
out
mov
std
mov
scas
mov
mull
loopne
cltd
pop
sti
jae
push
mov
add
and
and
add
leave
jl
jno
clc
into
pop
mov
dec
idiv
cli
dec
test
xor
sub
xchg
shlb
out
push
rolb
test
cli
mov
push
push
push
addr16
mov
ret
ljmp
in
loopne
pop
mov
out
mov
sarb
gs
push
insl
shr
outsb
add
or
lahf
mov
sbb
inc
movzwl
ficoml
imul
dec
cld
pop
jns
mov
dec
or
jp
jbe
and
mov
movsb
inc
mov
pusha
in
sbb
inc
inc
adc
out
sti
pop
xor
mov
jge
lock
mov
cli
inc
mov
add
sbb
les
cltd
mov
sub
cmc
pop
cmp
popa
inc
rcrb
push
sbb
stos
test
pop
repz
jns
cs
add
push
mov
dec
idiv
add
imul
inc
insl
rcrb
mov
mov
loop
jo
clc
add
clc
movsl
dec
push
jecxz
inc
and
inc
add
mov
test
lods
orl
bound
mov
ljmp
pop
inc
dec
inc
pop
xchg
repz
sub
or
jb
cwtl
roll
js
sbb
push
pop
mov
pop
adc
push
xchg
xchg
and
test
daa
pop
jne
ss
dec
cmp
outsb
mov
push
adc
andl
testb
lock
sbb
les
out
imul
cltd
mov
int
mov
sub
sub
fwait
daa
enter
or
mov
or
cmp
pop
incl
sub
mov
mov
pop
jmp
negl
roll
movsl
add
inc
sub
mov
and
jecxz
mov
into
cmp
sbb
adc
test
jne
leave
jecxz
repnz
xor
xchg
mov
out
mov
push
mov
call
int
jmp
ret
xor
sbb
fidivs
mov
jne
cmp
inc
xlat
fs
lock
lea
mov
pushf
xchg
leave
pop
xor
aad
sbb
mov
rolb
sahf
push
fsubrp
inc
inc
clc
or
xor
stc
pop
push
cmp
jnp
jle
sbb
mov
mov
mov
movb
out
fisttpll
xlat
push
sbb
xchg
das
dec
loop
rcrl
jo
jp
jl
inc
lcall
fisttpl
loopne
jno
scas
or
mov
aad
jecxz
inc
mov
sub
push
pop
in
pusha
inc
mov
int
pop
or
icebp
mov
and
adc
data16
aaa
jns
rolb
dec
mov
outsl
inc
pop
dec
jl
cmp
jnp
cli
push
pop
xor
in
sbb
enter
mov
loopne
outsb
popa
mov
mov
int
das
xor
xchg
jmp
cmp
out
xchg
lahf
xchg
lods
lcall
xor
or
xchg
fmul
add
pop
jb
dec
jmp
es
aam
call
sbb
pop
mov
leave
jae
jno
adc
mov
scas
frstor
pop
xor
cmp
inc
mov
popf
jae
sub
sbb
out
xchg
mov
fmull
int
fstl
cmp
mov
aaa
ret
test
popa
enter
ss
push
in
int
stc
out
lcall
fdiv
and
push
testb
movl
add
aad
notb
fstpl
adc
imul
fcoml
add
in
cmp
push
aaa
mov
sahf
sub
and
pop
sbb
or
bound
fwait
adc
dec
push
outsl
add
mov
rolb
mov
mov
rorl
cmp
leave
enter
push
cmp
in
and
xchg
push
stos
iret
not
or
test
mov
jl
lds
jp
stc
xor
icebp
xor
jns
ret
notb
sbb
or
inc
mov
sbb
enter
iret
mov
jae
jb
shrb
lods
pop
or
mov
push
aad
ficoms
adc
repnz
loop
inc
loope
inc
into
mov
mov
mov
mov
inc
dec
mov
pop
dec
push
ficoms
ret
cs
addr16
mov
xchg
sahf
xchg
inc
pop
and
push
incb
adc
outsl
pusha
push
xchg
push
pusha
pop
inc
in
mov
rcrl
js
xchg
movsb
jl
les
test
popf
dec
mov
iret
push
nop
pop
clc
scas
nop
pop
out
push
mov
es
scas
dec
jb
out
jne
mov
push
into
jle
xchg
sbb
and
shrb
popf
ret
ffreep
imul
iret
sbb
xor
cmp
mov
das
sbb
mov
mov
fldt
pop
cmp
sub
dec
loop
mov
aaa
and
add
ret
mov
clc
dec
pop
rorl
push
push
inc
inc
mov
lahf
fidivrl
pop
movsl
decl
sbb
cmpsb
adc
sahf
push
and
fwait
add
jo
mov
int3
nop
insb
jmp
and
fcompl
jnp
test
mov
je
dec
push
dec
jmp
cltd
mov
sub
repz
iret
ret
cli
dec
pop
xchg
mov
fidivs
aaa
push
xchg
andb
push
sub
mov
sarl
add
pop
fnsetpm(287
xchg
scas
test
cmc
pop
repnz
xlat
jne
xor
xchg
pop
scas
lcall
jge
xchg
mov
mov
and
test
cmc
dec
out
mov
and
push
xor
push
jmp
pop
mov
sbb
lahf
daa
testl
xchg
xchg
shlb
cld
addl
out
add
ret
loopne
mov
xchg
xorb
stos
xchg
and
lods
mov
xor
xchg
inc
sahf
mov
shll
xor
push
stos
push
ss
mov
call
mov
mov
pop
je
sub
sub
and
pop
paddq
and
shrb
andb
xchg
fmuls
test
push
inc
daa
sbb
mov
fistl
lods
jno
imul
sbb
mov
push
cltd
xchg
jmp
xor
sbb
mov
jl
adc
inc
testl
rorb
jecxz
ss
lret
mov
push
ret
jne
push
das
into
jb
pop
sub
cmp
clc
cld
mov
imul
pop
imul
jns
mov
addl
in
xor
stos
imul
xchg
xchg
arpl
insb
xchg
ret
call
ss
add
rolb
push
into
xlat
and
push
ljmp
lcall
iret
lods
sahf
mov
mov
les
movsb
pop
ror
lea
icebp
dec
pushf
mov
jge
dec
rolb
xor
mov
cmpl
movsl
sbb
dec
jge
clc
add
lcall
xlat
cmp
sbbb
mov
imul
idivl
dec
in
adc
cmp
mov
ret
mov
xchg
inc
push
je
arpl
adc
cs
xor
mov
jecxz
mov
or
push
hlt
mov
and
inc
andl
addr16
aad
mov
mov
or
jb
into
pusha
jge
movsl
out
das
jl
scas
outsb
out
jmp
enter
cmp
adc
outsb
sbb
xor
div
ret
cli
dec
pop
icebp
insb
or
and
mov
les
ss
mov
out
mov
push
lret
sahf
mov
rcrb
mov
sub
fldt
mov
inc
xchg
mov
bound
mov
xchg
dec
push
jle
sbb
sbb
jmp
jbe
int3
dec
sbb
fiaddl
and
xchg
gs
jle
and
in
xchg
push
js
filds
mov
cmpsl
add
jne
stos
insl
push
dec
outsb
xchg
imul
call
xchg
push
dec
loop
lea
stos
inc
inc
xor
out
adc
pop
jecxz
push
or
add
lods
enter
or
loop
fwait
aas
mov
jp
xchg
int
mov
pop
lret
ljmp
lahf
into
shlb
test
lret
rorl
test
xchg
enter
ret
inc
mov
fwait
jno
xor
in
xor
xchg
fiaddl
js
jb
xchg
fs
push
mov
jne
rcll
dec
stc
pop
add
push
xor
not
ficoml
cmp
adc
mov
pop
pop
enter
scas
gs
call
and
push
adc
cwtl
fdivr
loop
sub
outsb
cli
jno
mov
loopne
out
jae
inc
push
inc
je
pop
loopne
fxch
movsl
fiadds
inc
addl
add
xor
pop
adc
jne
xchg
xor
sbb
inc
dec
popa
addr16
dec
pop
xor
testb
stos
gs
pushf
or
call
shlb
jo
lods
sub
mov
xlat
into
mov
mov
sub
int
lcall
jmp
sub
jbe
pop
movsl
mov
stos
lret
jge
jle
and
out
clc
xchg
ret
mov
mov
ret
adc
addr16
popa
pop
loopne
shll
xor
jnp
mov
or
cmpsb
add
sbb
push
xor
sub
add
pop
cmpsl
in
xor
pop
pop
test
icebp
fucom
and
adc
test
push
pop
push
xchg
mov
jno
aaa
stc
iret
std
fcmovnb
adc
mov
push
ljmp
shl
daa
faddl
dec
inc
out
loop
and
fcompl
rol
lods
pop
add
or
rcr
mov
pop
mov
js
std
mov
test
mov
sbb
mov
mov
rcl
lcall
push
sub
rclb
jmp
or
lods
imul
jns
std
fisttpl
nop
test
xor
scas
xor
inc
ret
push
adc
movsl
aad
mov
loopne
jecxz
pop
mov
daa
cld
jb
je
lods
add
sbb
push
test
mov
lret
sti
cmp
fdivrl
push
dec
test
es
out
ds
mov
mov
xchg
scas
fsqrt
dec
add
fsubr
ds
aad
stc
or
int3
mov
jge
mov
loop
in
xor
js
nop
jns
mov
in
ds
js
xor
push
or
repz
aam
and
adc
pop
andb
mov
cld
push
push
arpl
repnz
mov
and
xor
sub
push
inc
bndldx
mov
lcall
cmp
pop
iret
les
scas
pop
in
xor
jae
cmp
push
push
arpl
or
sbb
std
loope
or
sbb
in
daa
fwait
mov
adc
imul
jl
jge
fsts
js
int3
push
lret
fwait
lcall
pop
mov
mov
arpl
sub
dec
outsb
insl
mov
add
mov
push
pop
sar
subl
ds
sbb
and
jnp
fucomp
andb
test
pusha
adc
mov
dec
cmp
sub
mov
jge
jns
inc
pop
repz
popa
inc
add
sub
stc
ret
inc
outsl
repz
push
andb
jnp
sub
lcall
dec
sub
aam
ror
nop
xchg
pop
sbb
fnstcw
inc
sub
gs
add
add
cli
jbe
ja
cltd
xchg
pop
push
sub
dec
scas
cli
pop
repz
adc
add
ficomps
in
pusha
pop
mov
mov
scas
movsb
jmp
or
out
sub
sbb
sub
mov
xchg
mov
sarb
popa
adcl
mov
stos
push
jae
cmp
jnp
xchg
pop
cli
jne
loop
lahf
repnz
std
lcall
pop
pushf
fdivrs
mov
push
in
mov
pusha
js
xchg
lcall
inc
pop
push
cmpsl
push
scas
xor
pop
pop
dec
sbb
push
repz
mov
xchg
push
mov
sarl
stos
push
xor
push
pop
js
ret
mov
mov
stos
cmc
bound
sub
not
sub
push
sub
and
jb
or
mov
jnp
dec
mov
test
lods
mov
mov
inc
imul
pop
iret
mov
adc
add
testl
pushf
insb
ret
dec
mov
dec
out
imul
imul
ss
jle
jge
enter
cld
imul
xchg
bound
mov
es
or
fsub
shll
andl
adc
push
jl
mov
pop
dec
in
rcrb
roll
cltd
jle
lret
lds
stos
cmp
add
movsb
test
cmpsb
or
popa
shl
mov
jmp
pop
call
sub
xor
or
int3
out
iret
pusha
in
add
fsubl
inc
addr16
or
negb
lea
stos
movsb
or
mov
push
scas
mov
xchg
aad
repnz
shlb
test
inc
rorb
pop
jne
add
ja
ljmp
rorb
jecxz
push
jns
push
ds
ficompl
fdivrs
ret
and
test
lret
adc
dec
cld
inc
cmp
aaa
daa
sbb
mov
jle
xchg
scas
ffree
pop
inc
pushf
hlt
lahf
inc
push
add
and
pop
movsb
push
movsb
daa
or
jae
std
sub
fs
lahf
push
rcrl
daa
lcall
pop
sub
inc
popf
push
or
jo
test
movsb
in
xor
jmp
roll
sbb
mov
push
imul
xor
mov
sbb
inc
push
es
pop
pop
cmpsl
pop
cmp
cmpsb
cs
xor
mov
xchg
mov
jbe
and
adc
xchg
or
add
xor
daa
lea
je
sbb
or
cltd
or
add
pop
addl
push
imul
or
inc
je
aaa
xorl
pop
ss
pop
cmpsl
cmp
lds
incl
push
insb
popa
leave
mov
jl
cli
idivb
lock
andl
mov
ljmp
mov
add
pop
and
push
jmp
xchg
push
mov
sbb
dec
call
fcoms
inc
pop
filds
mov
xor
and
int
adc
push
insl
cltd
mov
dec
mov
popf
call
mov
mov
imulb
xorl
hlt
pop
jnp
das
out
inc
lods
cmpsb
pop
ljmp
xchg
pusha
jbe
push
xor
or
or
scas
add
pop
mov
adcl
xor
adc
mov
pop
xor
push
mov
jae
sbb
pop
bound
idiv
and
lahf
sbb
adc
aad
in
pushf
jo
pop
dec
popa
lcall
loope
repnz
hlt
jmp
jmp
adcb
or
and
lahf
filds
aas
add
ljmp
sbb
add
mov
inc
xchg
inc
lahf
cmc
jle
jmp
int
out
popf
pop
adc
sbb
pop
sbb
adc
test
jae
decl
in
mov
sarl
jmp
scas
test
lret
je
in
repnz
pop
int3
lock
mov
sbb
loop
out
je
jb
or
xchg
sub
dec
or
jb
mov
bound
and
enter
lahf
cmp
int
sub
je
mov
sub
pop
hlt
in
adc
mov
mov
mov
push
and
adc
push
div
push
jle
mov
das
js
ds
mov
dec
jno
in
call
mov
or
push
xchg
imul
pop
out
xor
es
push
mov
fistps
mov
adc
loopne
lret
ds
ljmp
mov
inc
and
cmpsl
ss
mov
push
sub
lret
lods
stos
lds
fdivrl
jmp
aaa
std
or
cmp
shlb
imul
jae
enter
in
inc
out
fbstp
dec
popa
shrb
dec
arpl
add
xor
fstpt
push
xor
cwtl
dec
cltd
fadd
jno
movsl
filds
push
adc
xor
inc
adc
fsubrs
mov
pop
icebp
insb
mov
lret
xchg
in
ds
cmp
xor
enter
cmpb
adc
shrb
xchg
aas
hlt
pop
ja
adc
xor
mov
pop
mov
popf
and
clc
push
push
mov
jno
push
sub
jp
inc
adc
ds
std
stos
clc
sbb
movsbl
outsl
and
fsts
mov
scas
mov
es
add
sbb
dec
fisttpl
xchg
inc
mov
xchg
sbb
xchg
add
sbb
negl
mov
mov
sti
mov
js
in
mov
mov
adc
nop
pop
jmp
fistpl
mov
fstpl
jle
jl
inc
adc
insl
fiadds
pop
add
inc
fprem
jecxz
inc
rcrb
repz
test
outsb
aad
call
out
aad
adc
add
mov
sub
iret
push
adc
repz
ret
mov
lahf
int
lods
add
les
stos
xlat
fstpt
inc
pop
jae
mov
imul
fdivrs
jl
jo
outsb
aad
adc
data16
rorl
dec
ja
cmp
in
shl
cld
gs
aas
sbb
sbb
hlt
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
andl
xor
sbbl
inc
ret
push
mov
sub
movzwl
sbb
movl
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
jmp
mov
orl
push
xor
xor
or
mov
mov
xor
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
pushl
call
jmp
mov
subl
test
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
subl
mov
adcl
xor
add
mov
mov
and
mov
adcl
mov
xorl
xor
add
decl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
movzwl
or
add
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
add
mov
sbbl
sub
adcl
lea
incl
xor
xor
cmp
movl
je
mov
xor
add
movl
cmp
jne
xorl
pushl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
addl
jmp
sub
mov
pop
cmpl
sub
icebp
addl
or
int3
into
fwait
sub
stc
dec
movsb
add
add
shlb
inc
lcall
cld
sbb
in
call
les
xor
jmp
push
js
mov
adc
add
ret
loopne
movsl
jle
or
jns
mov
mov
nop
in
enter
ds
fcoms
pop
jo
and
jmp
icebp
out
cmc
and
stos
push
adc
icebp
xchg
lret
jmp
push
dec
rcr
or
mov
adc
popf
cltd
cmpsl
xchg
jl
lods
sbb
loopne
xchg
or
mov
inc
mov
inc
movsl
mov
call
fadds
xchg
inc
mov
scas
jle
xor
mov
mov
je
test
xor
int3
jno
add
aad
inc
jl
hlt
dec
mov
xor
repnz
add
push
jecxz
and
lea
repnz
pop
push
aas
je
in
adc
mov
or
in
fnstcw
cmc
outsb
js
call
aaa
xor
cmpsb
pop
jnp
call
aam
mov
jb
orl
in
xor
push
mov
pop
mov
ret
cs
xor
dec
aaa
lretw
int3
dec
lret
lock
push
and
ret
int
lcall
mov
bound
mov
inc
stc
xlat
bound
mov
arpl
out
jmp
adc
fisubrl
xchg
push
xchg
add
jmp
jl
cltd
sub
arpl
lock
ljmp
cmp
test
cmp
adc
arpl
dec
or
shr
fistl
inc
push
andnps
out
xchg
pop
lahf
xor
push
pop
outsl
sub
gs
shlb
push
repnz
cli
sahf
test
lret
mov
add
mov
cmp
pusha
rcrb
add
mov
repnz
sub
mov
loop
push
aad
inc
hlt
push
cmc
sub
pop
jecxz
ja
push
jmp
andl
jno
pusha
xchg
pop
pop
es
imul
mov
cmp
data16
sub
sub
outsb
enter
xor
inc
adc
ds
push
push
add
cli
loop
mov
aas
sbb
xor
in
loopne
insl
dec
or
push
jae
movl
pusha
pop
push
test
testb
sub
insl
in
gs
insl
jb
fsubs
push
push
out
pop
cmp
push
mov
loop
mov
jmp
lock
xorl
push
not
cwtl
ret
fwait
arpl
ficompl
shrl
add
hlt
xchg
js
fwait
dec
repz
scas
cmpsb
dec
sbb
rcrb
dec
push
scas
or
jmp
outsl
outsl
out
dec
xor
push
or
jae
pop
push
cmp
outsb
ljmp
mov
jle
cmp
imul
jns
nop
popa
fdivl
xchg
pusha
pop
dec
aad
xor
mov
nop
inc
out
or
enter
imul
addr16
aas
mov
xchg
cmc
xchg
bsf
subl
pop
jns
je
jg
fstpt
cmpl
adc
fstl
imul
lea
lods
mov
stos
or
sbb
ljmp
or
rcrb
sub
xor
test
stos
aam
push
cmpsb
mov
arpl
lock
fistps
fs
jmp
out
lret
push
outsb
fildl
dec
mov
pop
daa
pop
pop
xorb
mov
or
fisubrs
mov
jecxz
sub
into
add
mov
dec
jbe
addr16
mov
adcl
cmove
jns
xchg
stos
mov
rcrb
rcr
xor
mov
jl
cmp
sbb
popa
popa
cmpsb
aam
dec
add
and
jnp
jnp
sbbb
fadd
mov
cli
push
in
test
push
imul
fnstsw
cli
jbe
dec
notl
ffreep
push
xor
xchg
loopne
inc
mov
ss
and
adc
insl
movsb
xchg
fs
pop
adc
repz
pop
pop
fprem
sbb
lods
inc
push
leave
por
add
mov
movsb
in
push
cs
mov
fldcw
cmc
sub
sti
sub
inc
fistpl
scas
shll
mov
in
and
jmp
cmc
repnz
jmp
mov
out
adc
adc
subb
fcomps
popa
int3
sub
loop
push
or
fs
or
sbb
outsl
adc
cmp
jg
unpcklps
mov
and
rclb
fisubl
imul
lcall
out
dec
fisttpll
and
pop
or
xchg
js
repnz
fcmovnu
fadds
push
jns
icebp
subl
push
in
and
pop
adc
nop
push
stos
icebp
test
and
mov
or
outsl
movsb
pop
or
add
or
mov
sbb
or
adc
cmpsl
mov
xor
lods
mov
add
aad
dec
push
xchg
outsb
es
cmc
push
mov
dec
jno
int
mov
in
or
and
pusha
cwtl
add
fmuls
in
sub
and
in
xchg
sti
dec
cli
sub
mov
dec
mov
cmp
dec
lret
pop
out
fxch
in
mov
pop
jae
xor
jns
jns
lea
xor
popf
push
xchg
xchg
cmp
es
cmp
jo
mov
ja
jo
sahf
shll
sub
mov
jecxz
jb
xchg
leave
addr16
sti
adc
inc
xchg
aad
dec
hlt
adcl
repz
dec
ljmp
mov
insl
adc
push
or
leave
movsl
inc
shlb
ficompl
insb
xchg
pop
cmp
cmp
fmull
xor
movsb
jp
sbb
sahf
jno
cmc
clc
and
cmp
pop
add
jl
or
push
popl
test
xchg
enter
inc
pop
cld
jae
ret
push
test
cld
lds
shrb
jmp
subb
gs
mov
add
cmp
inc
or
adc
lret
mov
xor
stos
push
pop
sub
mov
mov
dec
xchg
mov
mov
sbb
cltd
shrl
or
sub
cs
movsb
icebp
fnsave
adc
dec
sbb
sub
aad
sbb
call
movsb
cmpsb
xchg
dec
sbb
cltd
popa
and
lcall
push
jmp
ljmp
mov
movl
mov
add
push
test
jmp
cmp
dec
lds
xchg
add
sub
add
inc
push
inc
dec
sbb
out
sub
repz
dec
sbb
stos
xchg
cltd
dec
and
stos
lock
jecxz
ret
adc
jg
mov
or
jmp
lret
fwait
test
add
add
xor
test
dec
add
push
xor
inc
fwait
addr16
lods
mov
mul
lcall
or
sbb
out
shlb
jne
call
into
cmpsl
dec
push
jo
sbb
orl
or
xchg
insb
inc
push
cld
inc
bound
sub
push
push
sbb
fwait
xchg
xchg
adc
ja
jl
int
inc
cli
out
jge
ret
pop
xlat
mov
jmp
cmp
shl
call
ficoms
add
xchg
fs
push
repz
mov
call
mov
mov
lds
pop
mov
inc
lock
pop
leave
and
test
jae
pop
dec
inc
push
xchg
or
fildl
loope
aaa
outsb
sub
push
mov
jp
popa
add
stos
test
add
xor
pop
adc
repz
scas
jns
cwtl
xchg
xor
and
jg
pop
in
push
cmp
fiadds
xlat
loopne
cmpsb
lcall
mov
pminsw
popl
inc
sti
cmpsb
or
mov
into
cmp
rcl
mov
adc
lods
daa
jge
adc
sbb
mov
sbb
sub
adc
fldt
xor
insb
dec
pop
and
lcall
popf
mov
imul
xor
sub
aas
pushf
lock
repnz
xchg
or
xchg
adc
cwtl
inc
sub
add
sbb
inc
sub
je
mull
push
and
into
xchg
push
fidivs
xchg
dec
adc
pusha
outsl
or
adc
es
xor
pop
orb
pop
icebp
lret
jecxz
int3
sbb
mov
mov
ja
or
mov
cmpsb
dec
insb
subb
loop
clc
inc
mov
or
and
enter
push
mov
int3
int3
std
lahf
jecxz
addr16
je
rolb
je,pn
pusha
fwait
iret
adc
sub
test
add
xor
inc
push
in
mov
push
mov
gs
out
mov
rcrl
negb
mov
cmc
jno
mov
adc
test
ret
push
xor
cmp
shll
ret
sti
rorl
jp
fldenv
cmp
popa
mov
push
xchg
inc
pop
add
add
fs
cwtl
insl
dec
insl
inc
stos
or
mov
mov
loop
sahf
mov
sbb
roll
push
add
sbb
ret
addb
mov
loope
cmp
pop
in
insb
mov
and
and
jns
inc
cmpsl
mov
pop
push
push
pushf
sub
test
sti
rcrb
into
test
mov
cmc
sub
mov
cld
dec
sub
inc
jns
fistl
push
and
ljmp
xchg
icebp
mov
push
movsl
loop
stc
pusha
jae
lret
xchg
pop
inc
mov
movsl
inc
xor
xlat
push
inc
add
jmp
adc
mov
lock
call
inc
js
pushf
fadds
mov
and
cmpsl
xchg
jecxz
mov
in
outsb
or
push
mov
xchg
jmp
mov
aaa
lock
popa
enter
scas
call
imul
enter
rcll
mov
test
pop
ljmp
lret
pop
inc
sbb
lock
mov
inc
mov
and
lcall
pop
or
fisttps
iret
xchg
out
mov
lret
or
ljmp
mov
data16
add
ss
iret
xchg
mov
xchg
enter
data16
aam
aaa
xchg
lcall
sti
pushf
pop
mov
sarl
inc
pop
jne
xchg
jle
xchg
add
cmp
data16
shrb
jns
popf
test
cmc
push
outsb
mov
mov
push
loopne
add
mov
movsb
popf
in
dec
fsubrl
mov
sub
mov
ror
addr16
xchg
xchg
sbb
sbb
scas
ljmp
push
je
jecxz
cld
das
xchg
dec
add
stos
jbe
xor
into
xchg
shll
rcll
inc
je
pop
jg
je
outsl
call
imul
xor
fistpll
es
or
gs
pop
mov
aad
sub
jno
sahf
cli
cmp
and
mov
fbstp
jns
or
jg
stc
inc
sbbl
test
in
mov
das
pop
xorl
cli
push
mov
cmpb
shlb
orl
rorl
inc
mov
outsl
int3
sbb
call
loope
xchg
xchg
jge
testl
pop
test
mov
mov
scas
pop
cmpsb
ds
bound
js
pop
jne
dec
jb
popa
dec
fistpl
or
fistps
stos
add
pop
out
pop
xchg
jae
sub
lea
fistps
outsl
int
lock
mov
mov
xchg
aam
add
daa
popa
push
inc
cs
adc
jns
stos
std
fldcw
stc
or
inc
out
ret
mov
loop
adc
add
aad
xchg
adc
aam
int
adc
xchg
outsl
clc
hlt
imul
cmp
xor
jle
and
std
pop
idivb
js
adc
jb
inc
add
popa
out
mov
push
mov
sub
insl
fisubs
push
mov
shll
lret
loope
push
in
fwait
and
popa
sub
xor
das
mov
add
jo
lock
popa
iret
aaa
xor
scas
jbe
lahf
or
into
xor
push
mov
mul
mov
add
mov
push
aas
enter
cmp
jns
sbb
dec
xchg
mov
xchg
mov
or
cs
jo
insb
in
jge
mov
mov
push
lret
mov
ret
mov
dec
push
xchg
arpl
sbb
dec
push
jno
mov
sub
mov
pop
leave
clc
adc
rol
in
push
pop
mov
out
add
scas
lds
lahf
shrb
scas
dec
sub
jns
inc
js
mov
mov
shl
sbbl
push
movsb
jae
add
addl
cmp
int
mov
test
int3
pop
push
or
xchg
mov
dec
xchg
shll
jns
jnp
cmp
icebp
push
adc
xor
and
adc
test
lahf
mov
inc
inc
int
out
mov
xchg
push
loop
jmp
inc
call
cs
movsl
jne
pop
mov
pop
arpl
dec
ds
aas
outsb
push
mov
aas
insb
dec
insb
test
ficoms
bound
jae
dec
adc
xchg
cmp
ja
jl
loop
lahf
les
cmpsl
out
je
xor
xchg
gs
std
test
lea
mov
js
lret
sub
jmp
pop
data16
and
dec
fwait
cmpsb
adcb
mov
das
in
dec
int3
cmc
or
lret
stc
pop
mov
pop
cmp
cmpsb
adc
rcll
test
sbb
mov
dec
lahf
jae
xor
sub
fmul
jge
decb
xchg
push
sub
gs
fidivrl
sub
xchg
jg
inc
ja
dec
xchg
sub
dec
insb
adc
push
sub
mov
sub
popf
movsl
lock
jmp
arpl
jg
sbbb
adc
add
push
aad
and
out
test
xchg
ret
dec
pop
decl
movsb
xor
or
jae
testl
cmp
sub
push
nop
call
in
push
inc
mov
cld
adc
add
test
fistpll
popa
test
or
mov
scas
mulb
or
lods
jno
lret
add
negl
leave
dec
repz
lea
or
filds
xchg
in
mov
and
out
divl
popf
pop
jmp
sub
test
std
es
push
mov
xchg
in
xchg
dec
mov
fwait
stc
adc
mov
in
lods
mov
cmpsb
in
cld
je
cmp
adc
add
and
int
push
xchg
cmp
cltd
dec
in
shll
cmp
gs
mov
jae
es
idivb
data16
jle
lock
dec
mov
cmc
in
jecxz
dec
fs
pop
mov
das
lret
test
cltd
icebp
jle
icebp
jg
repnz
mov
in
adc
or
dec
mov
or
fldl
clc
dec
inc
lret
movb
cmp
pop
cmp
shlb
push
fidivs
leave
or
fmulp
dec
xchg
int
push
pop
cmp
lret
jb
pushf
adc
mov
inc
xchg
mov
xchg
add
in
mov
into
notl
pop
mov
dec
es
scas
scas
push
hlt
bound
cmp
ss
push
aas
cmpl
std
xchg
dec
test
aam
jge
ds
lret
inc
add
cmp
or
pusha
inc
xor
mov
andl
nop
aaa
sahf
cmp
lds
popf
mov
mov
mov
add
dec
aad
je
es
iret
dec
sub
lods
fs
ljmp
cmpl
push
pop
loopne
sbbb
sbb
fwait
jns
add
int3
cs
sbb
in
insl
imul
cmpb
xor
sbb
sub
pop
outsl
adc
test
movsb
push
ljmp
xor
inc
aam
cld
inc
loope
jns
or
xchg
xchg
or
xchg
and
lret
ds
arpl
mov
inc
pushf
popf
mov
fsubrs
out
mov
enter
xchg
mov
jle
mov
bound
or
addr16
lahf
dec
popa
iret
inc
mov
jo
in
ret
sbb
out
mov
push
xchg
jno
mov
daa
std
inc
mov
pusha
and
adc
xchg
mov
xlat
xor
inc
xchg
inc
loopne
mov
push
sahf
mov
ret
push
mov
arpl
cmp
dec
rcll
jns
dec
jno
sub
push
jmp
popf
ljmp
ja
push
arpl
jp
cmpsb
xchg
mov
mov
int3
pop
test
pop
lcall
sub
jnp
cmp
inc
mov
sub
jae
subl
loop
popf
imul
add
sbb
inc
push
testl
xor
lock
add
pushf
rcrb
jmp
clc
add
enter
rcr
pusha
push
mov
xchg
daa
fbstp
popl
jno
mov
sbb
xor
xchg
rclb
mov
jg
and
sbbl
and
lcall
adc
divb
push
loopne
push
mov
push
int
aaa
push
rol
add
stos
aaa
out
jb
cmp
repnz
aad
push
adc
sbb
push
cltd
pusha
jae
mov
test
mov
xchg
xchg
sub
jle
xchg
mov
cmpsl
lea
xchg
pop
mov
rolb
popa
data16
out
cmp
mov
inc
jns
sub
loopne
or
out
mov
and
sbb
mov
loop
pop
push
ljmp
sbb
and
pop
sub
jae
xchg
mov
mov
pusha
sbb
stos
das
cmp
push
hlt
cltd
dec
popa
push
xor
xchg
mov
mov
jns
adc
xor
aad
mov
outsb
icebp
and
dec
cld
jmp
nop
es
sub
cmp
popa
das
adc
icebp
mov
out
test
mov
int
leave
push
xchg
test
push
and
int3
xor
cs
scas
aad
push
mov
outsb
mov
jno
fidivrl
sub
mov
scas
imul
decl
mov
sbb
scas
jge
cmp
int3
gs
pop
dec
sub
int
push
inc
ds
stos
mov
ret
mov
or
dec
push
or
push
jno
fwait
int3
cmp
mov
movsl
shl
mov
aaa
in
mov
and
push
mov
xor
movntps
in
jecxz
push
mov
inc
jo
cmpsb
insb
mov
hlt
push
push
sub
inc
lds
cmpsl
mov
push
shl
push
ljmp
ja
gs
push
nop
mov
xchg
add
inc
popf
fnstenv
pop
ret
inc
arpl
cmpl
and
cmp
inc
out
mov
out
pop
jbe
pop
mov
push
xor
mov
xchg
das
lods
test
cmp
and
fisttpl
mov
mov
mov
sarl
test
cmp
sub
xchg
fucomp
mov
mov
xor
push
dec
fs
pop
fs
fstpt
fldcw
inc
iret
es
js
and
xchg
push
addl
dec
add
fsubrl
out
push
pop
inc
sbb
subb
sub
xchg
cmp
mov
add
adcb
inc
xchg
cwtl
push
testl
cltd
cmp
sarb
xor
dec
in
rorl
mov
xchg
mov
cmp
fisubrl
shlb
pop
xor
dec
andl
repz
cmp
aas
jo
int3
fcmove
sahf
xchg
stos
sbbb
jge
or
sub
aam
es
xor
push
push
xchg
jge
mov
test
outsb
in
mov
adc
imul
mov
and
iret
jb
cmp
in
jle
movsl
rcrl
mov
push
jbe
mov
popa
adc
test
mov
xor
mov
push
lods
mov
test
mov
mov
pop
fisubrs
cmp
out
fldt
cmp
pop
data16
mov
jnp
or
insl
out
cmp
and
push
or
mov
jmp
inc
das
cltd
push
adc
insl
jne
fisubrs
jmp
pushf
insl
std
push
push
jnp
paddsb
mov
xchg
mov
gs
sbb
packsswb
xchg
pop
jl
stc
lods
fwait
div
or
inc
xor
adc
loop
imul
mov
test
jl
insl
or
sub
and
and
aam
rcrb
xchg
incl
in
cmp
push
dec
faddp
jge
and
loop
cmpsb
inc
cmp
je
xlat
lock
lahf
xchg
pop
or
and
jnp
dec
inc
loope
lock
shlb
mov
push
cmp
xlat
push
je
adc
fcompl
mov
pushf
push
dec
add
loopne
fwait
rcll
mov
xchg
into
test
jp
and
xchg
pop
pusha
and
call
dec
shll
push
jns
and
mov
dec
addr16
mov
push
movsb
or
mov
xor
dec
jg
inc
dec
sub
mov
xor
addr16
out
fnstenv
xor
lods
aas
js
mov
add
scas
push
or
test
pop
push
add
pop
aad
incb
aam
negl
lahf
cmp
fldt
sub
pop
adc
mov
lock
test
mov
pop
add
loope
mov
fcoms
push
out
jge
jns
and
test
mov
call
and
push
jmp
push
jo
addr16
mov
pop
xchg
mov
adc
adc
mov
xor
enter
scas
in
mov
lea
rcl
push
mov
sub
es
popf
pop
ret
cmp
inc
dec
ret
lods
pop
popf
mov
inc
ja
xor
or
xchg
sbb
dec
cli
cld
and
dec
pop
dec
incl
or
ss
ja
mov
xchg
les
sti
cmp
xchg
fistps
inc
xchg
jne
ljmp
std
mov
and
movsl
mov
mov
dec
push
imul
jl
cmp
cmc
insl
push
or
ja
mov
sbb
roll
stc
sbb
pop
cmp
pop
je
and
dec
add
dec
xorb
mov
cmp
test
enter
xchg
and
inc
mov
dec
add
test
push
in
mov
lods
aam
ss
push
insl
sub
push
or
aam
sub
test
lea
and
mov
jns
aad
popa
dec
es
movsl
scas
push
dec
stos
adc
iret
popa
outsl
subb
clc
cmp
rcl
jae
orb
shlb
icebp
pop
jo
mov
ja
push
push
mov
movsb
or
jno
enter
les
lea
adc
adc
xor
add
insb
stc
dec
imul
and
add
or
xchg
jle
mov
jecxz
sbb
xchg
fldcw
xor
ret
popf
add
xor
mov
call
mov
xor
lods
push
nop
lds
xor
mov
adc
mov
out
jmp
xchg
mov
mov
ds
fildl
dec
bound
clc
inc
rcll
mov
movsb
xchg
pop
in
add
jns
std
iret
outsb
jnp
lcall
sub
dec
aad
push
fisttpl
stc
and
push
sbb
or
orl
inc
mov
mov
dec
dec
repnz
in
inc
xlat
cmp
mov
insl
in
pop
xor
pop
push
jno
cmp
jne
or
sbb
ljmp
flds
push
std
mov
add
cli
mov
and
movsb
in
xchg
rcl
push
inc
aad
push
xlat
fidivl
add
inc
inc
pop
sub
adc
lock
sbb
pop
repnz
clc
rcll
or
cmpsl
jne
mov
mov
repz
sti
sahf
shrl
cs
pop
dec
mov
flds
cmovle
sub
and
and
ja
xor
loopne
dec
les
push
add
sahf
adc
jb
call
jb
fisttpll
mov
pop
inc
dec
and
xor
int
mov
pushf
dec
test
inc
jecxz
rcll
push
adcb
pushf
loop
mov
push
and
addr16
and
push
bound
push
sahf
push
cmc
hlt
inc
sub
sbb
cmpsl
movsl
call
outsb
das
xchg
loop
sub
fsubrs
add
imul
fdivr
cld
and
mov
jg
data16
mov
inc
pop
dec
cmpsl
xor
lock
adc
inc
pop
cmp
fwait
mov
and
enter
xor
mov
lods
adc
xchg
cltd
jle
inc
fidivrl
push
rorl
neg
lock
inc
repnz
nop
mov
pop
jmp
out
xchg
xchg
mov
sub
sbb
adc
cmp
test
test
pushf
and
scas
push
xchg
js
pusha
sbb
jl
and
out
and
jae
fiaddl
out
push
insb
int
out
insl
push
dec
mov
and
sahf
or
bound
sarb
pusha
ljmp
pop
sub
arpl
test
cmp
roll
xchg
lcall
push
mov
sub
jne
mov
push
lods
push
je
mov
add
shrl
int
sbb
adc
mov
repnz
push
das
jae
dec
mov
mov
dec
out
add
add
paddd
cwtl
fdivrs
mov
dec
aas
and
sbb
scas
mov
popa
xor
adc
dec
in
aad
mov
add
jg
lret
add
push
fwait
out
cmp
inc
jae
bound
or
inc
andb
or
stc
arpl
pop
or
imul
cmp
outsb
jo
jno
inc
xor
movsl
ror
mov
jb
xchg
push
mov
lcall
or
cmp
ds
loopne
or
xor
pop
outsl
mov
sbb
out
scas
in
ficoml
lods
sub
jo
pop
push
es
cmp
sub
add
loope
outsb
mov
cmpsl
add
mov
sbb
cmpb
jecxz
xchg
xor
sbb
mov
xchg
cld
or
xor
sbb
mov
cmp
repz
clc
test
mov
inc
mov
cmp
add
aad
ficomps
adc
mov
outsl
pop
push
pop
mov
add
push
cmp
jno
inc
mov
pop
mov
mov
jmp
sub
xchg
repnz
mov
push
jo
jnp
dec
mov
popl
dec
pop
mov
push
in
jg
cwtl
or
push
and
in
mov
jge
subl
pop
xor
les
lods
mov
inc
das
push
jmp
jne
push
das
xchg
lock
and
dec
int
orb
faddl
fcmovnu
fs
jmp
mov
sbb
dec
aad
popa
mov
insb
shll
push
jmp
stos
enter
fisubrs
push
xor
pop
addr16
hlt
add
pop
mov
test
shrb
sbb
out
add
lcall
int
cmpsl
or
rclb
dec
dec
cmp
xchg
cmc
js
outsb
xchg
fst
dec
mov
or
rorl
fimuls
cmc
leave
pop
push
jne
fisttpll
push
repnz
inc
add
jnp
cmpb
cltd
mov
loop
mulb
push
and
cmp
dec
or
sbb
jo
xor
and
xchg
cltd
scas
inc
sbb
mov
or
jmp
test
movsb
std
mov
bound
notb
adc
sti
mov
adc
pop
pusha
and
mov
test
inc
push
aam
mov
rcr
pop
int3
lods
ss
or
outsb
pop
sub
iret
scas
inc
in
push
mov
cmp
dec
mov
in
dec
mov
xlat
lods
push
fstl
inc
pop
fwait
pusha
out
hlt
aaa
ret
pop
movsl
scas
pop
adcl
int3
mov
div
jnp
sar
pop
ret
inc
negb
mov
iret
push
or
mov
pop
scas
popf
mov
mov
inc
cmp
and
repz
shlb
push
or
jl
fmull
fisubrl
repnz
xchg
sub
mov
data16
sti
sbb
push
push
fnsave
iret
enter
aaa
and
sub
pushf
enter
mov
call
adcl
xchg
inc
inc
popa
adc
fcoms
xchg
push
add
pop
dec
cwtl
stos
movsl
sbb
fdivl
pop
shr
inc
sbb
adc
sbb
ds
jg
fldcw
popa
and
cmp
pop
and
ret
sbb
lods
arpl
jae
jecxz
gs
lret
inc
mov
xor
mov
cwtl
push
inc
adc
sahf
pop
fildl
mov
daa
out
call
lods
inc
out
lock
cmpsb
fimull
sbb
test
ret
loop
xor
daa
lds
jbe
repz
dec
and
fadd
jge
imul
out
add
mov
mov
rcrl
movl
imul
loopne
jg
adc
cmp
xchg
imul
xor
lds
cltd
lret
lods
sub
jb
push
mov
xchg
shll
push
push
xrelease
insb
lds
mov
movsl
mov
loope
add
dec
cwtl
ljmp
mov
ret
add
sbb
xchg
arpl
sti
inc
in
mov
mov
notl
std
aad
je
fsubp
test
mov
rorb
repnz
stc
push
pop
js
xchg
and
add
gs
pop
aad
xchg
mov
jo
dec
inc
lods
cwtl
inc
and
js
lea
fsubs
dec
cmp
sub
dec
icebp
cmpsl
enter
lahf
cltd
test
or
and
push
mov
fmuls
dec
pop
lods
es
xor
xorl
add
movl
cmp
je
xorl
pushl
pushl
call
sub
jmp
scas
cltd
and
add
cwtl
int
jns
popa
ror
addl
push
sbb
shlb
lods
mov
cwtl
lods
mov
rcrl
add
fisubs
dec
add
imul
movl
inc
in
add
mov
out
es
loop
outsb
cmp
sarb
js
addr16
mov
les
and
mov
push
lods
std
test
fwait
pop
jle
adc
loopne
xchg
pop
in
lret
dec
or
insl
leave
punpcklwd
xchg
mov
mov
mov
mov
hlt
cmp
mov
sbb
cltd
lret
jge
bound
push
fstpl
and
mov
xchg
jge
sub
scas
fwait
out
mov
or
sbb
cwtl
xor
dec
nop
inc
bound
hlt
ljmp
dec
fucomip
jmp
mov
mov
aad
call
pop
adc
fadds
mov
mov
dec
mov
xchg
cwtl
es
imul
cli
pop
stc
xchg
cmp
out
sbb
mov
fmulp
mov
test
sbb
sbb
sbb
pop
or
fstpt
enter
xchg
pop
cmp
popa
mov
dec
add
inc
inc
lret
out
incb
jae
pop
int
pop
scas
xchg
add
loop
call
add
sahf
xchg
mov
sbb
add
lds
mov
dec
ficomps
and
push
insl
stos
test
shll
decl
and
std
test
and
hlt
test
push
js
rol
insb
mulb
cmp
movsb
jnp
rorb
mov
push
mov
in
xchg
outsl
aas
adc
into
cmpsl
jb
in
scas
repnz
add
jl
jmp
adc
push
sub
aas
xchg
in
xor
mov
dec
rcrl
cld
inc
imul
jmp
and
lea
ljmp
inc
jecxz
mov
push
adc
test
pop
dec
cmp
incb
call
repz
sti
sub
in
pop
iret
out
xor
xchg
pop
mov
add
mov
xor
in
mov
or
cmc
jo
icebp
xchg
pop
mov
cmp
cmc
mov
add
push
scas
movsl
mov
out
pop
jg
in
unpckhps
insl
pop
dec
mov
push
cmp
sbb
dec
fsubrp
push
jmp
cmp
lea
mov
fsubs
inc
mov
loope
sbb
jb
lods
in
repz
insl
mov
dec
jnp
lods
push
pop
enter
xor
xchg
out
scas
pop
xchg
sub
aaa
jge
dec
jge
xorb
push
loopne
movsb
movsl
jb
test
mov
jle
cmc
scas
testl
jbe
ret
or
and
ja
pop
arpl
mov
cltd
call
daa
pop
mov
mov
jmp
dec
lret
mov
mov
push
fidivrl
and
fiaddl
movb
or
cmovae
outsb
dec
add
mov
or
pop
and
out
mov
loopne
fisttps
enter
add
pop
mull
imul
fistpll
jne
cmp
xchg
lds
jns
aaa
xlat
jmp
aad
sbbb
imul
out
outsl
mov
fnsave
ljmp
add
add
dec
pop
jno
mov
stc
mov
in
in
push
xchg
xchg
bound
pop
fstps
jnp
cmp
mov
clc
outsl
sbb
rcl
subb
popf
xchg
jno
mov
pushf
mov
mov
imul
imul
push
sbb
mov
out
ret
xor
push
add
popa
das
leave
call
stos
push
push
mov
jge
outsb
pop
nop
arpl
fcoms
mov
jbe
lcall
xchg
push
adc
fisttps
adc
dec
jb
lahf
pop
xlat
std
flds
mov
sbb
jmp
lahf
sub
fsubrp
push
or
bound
pushf
arpl
add
inc
adc
cmp
push
add
das
mov
repz
pop
hlt
cli
fs
xchg
out
cmp
por
dec
jo
inc
div
pop
roll
sub
cltd
ss
les
push
jae
push
mov
xchg
dec
fnstsw
mov
xor
testb
and
or
xor
pop
pop
mov
mov
inc
inc
push
mov
mov
jge
xchg
xor
lock
test
and
xchg
push
iret
frstor
xchg
mov
fcmovne
shlb
fisttpll
mov
jae
les
leave
movsb
in
xchg
mov
sti
cwtl
cs
lret
outsb
js
adc
push
int
in
scas
rcrl
pop
add
nop
mov
fsubl
inc
pop
mov
cmp
sub
int
rcll
mulb
ret
mov
adc
pop
movsl
ss
push
xor
test
test
push
pushf
call
sub
inc
fs
cmp
mov
out
iret
rclb
xor
std
mov
inc
mov
jl
test
jnp
push
push
xchg
pop
inc
sar
jge
nop
cltd
inc
sahf
cs
cs
iret
repz
jg
fs
push
gs
popf
xor
xchg
pop
pop
shll
pop
shr
push
sbb
mov
imull
mov
jg
lret
inc
notl
les
pop
or
ss
adc
sbb
popf
inc
cmp
push
subl
xor
cli
dec
sub
insb
scas
push
out
sbb
packuswb
loope
adc
pop
adc
call
inc
sahf
or
jle
and
mov
js
xor
pusha
aas
jg
lahf
inc
hlt
filds
rcrb
imul
xor
out
sbb
cs
fucom
stos
out
or
jl
jns
test
xchg
mov
xchg
mov
jp,pn
mov
fbstp
and
cs
inc
inc
inc
aam
js
or
add
cmp
sbb
mov
aam
orb
adc
dec
push
pop
push
lock
cmp
xchg
fiadds
jmp
shlb
rclb
ret
pop
push
aas
jle
lret
sub
mov
mov
jge
or
das
pop
add
mov
in
mov
insb
pop
repz
iret
mov
push
cmpsl
mov
push
mov
xor
iret
clc
mov
xor
mov
std
adc
xchg
int
aas
negb
cmp
xor
repz
inc
movsl
mov
adc
mov
jo
sbb
andl
jg
aad
sarb
push
and
icebp
cmpsb
push
fmuls
stos
add
mov
ds
mov
xor
loope
std
jl
cs
popf
aam
lock
jle
dec
daa
push
mov
mov
push
ss
clc
imul
outsl
jb
cmp
inc
divb
shrb
push
adc
enter
mov
adc
xchg
xor
clc
daa
int
mov
mov
repz
pop
jo
jns
cmpsl
test
ds
mov
xor
jne
flds
orb
mov
xor
mov
xor
outsb
fadds
fmul
cld
outsl
inc
dec
mov
daa
iret
sub
in
adc
hlt
nop
cmp
jnp
dec
push
or
xorb
jmp
enter
mov
call
aad
jg
push
pop
dec
imul
cmp
mov
sahf
mov
iret
and
lcall
rcrb
das
test
je
popf
stos
mov
fwait
mov
add
mov
out
jb
jne
dec
loope
aam
mul
cld
bound
xor
inc
push
dec
cmp
jle
ds
inc
loope
into
mov
push
sbb
outsb
lock
out
xor
fildll
imul
flds
out
xor
std
sbb
imul
dec
adc
inc
push
xlat
push
movsl
clc
inc
jo
adc
call
test
jecxz
outsb
lahf
dec
dec
or
push
or
fadds
jae
jmp
pop
mov
stc
jne
outsb
push
jae
dec
push
test
repnz
clc
dec
sbb
daa
cltd
es
xor
pop
lahf
ret
cmp
pop
fmull
xor
mov
out
fsts
out
mov
push
jp
add
jge
cld
xchg
cli
push
in
jg
push
js
lret
repz
xor
das
lahf
ja
rolb
repnz
test
mov
les
mov
fwait
std
and
js
lods
test
insl
gs
insb
inc
or
ficoms
mov
out
cld
loope
mov
inc
pop
jp
push
cld
xchg
cli
sbb
sbb
jae
ja
sarb
mov
cmpb
xor
sahf
adc
test
pop
cmp
pop
mov
ja
dec
inc
out
adc
ja
mov
in
cmp
sarb
dec
sarl
or
mov
inc
add
push
imul
fcomp
jo
jle
lds
jbe
adc
mov
xchg
iret
mov
jg
cli
adc
sub
sbb
stc
jge
jmp
xchg
int3
mov
pop
cltd
cwtl
mov
ret
cmpsb
add
or
sbb
jg
mov
xchg
xchg
inc
enter
sbb
mov
lret
rcll
out
push
push
push
cmpsl
rcrl
xchg
ret
imul
bnd
pop
mov
xlat
les
ljmp
mov
subb
ja
fists
sbb
push
movsl
dec
xchg
inc
arpl
sbb
sbb
add
popa
pop
dec
cmp
dec
add
sub
mov
sbb
scas
mov
add
ja
mov
fsubl
xor
mov
inc
sti
rclb
lret
lods
loope
int
ss
andl
xchg
xor
jo
xchg
or
sub
hlt
dec
inc
in
iret
xor
std
ficomps
xor
lea
and
fldl2e
jns
dec
xor
inc
push
sub
fcoms
das
ret
add
push
sarl
shlb
mov
sbb
aaa
jge
pushf
pusha
jbe
push
mov
cld
out
movsb
inc
pop
pop
je
std
std
shlb
or
push
dec
in
insl
pop
in
adc
pop
repz
mov
ds
mov
fs
mov
jno
push
adc
pushl
nop
call
clc
cwtl
push
loop
enter
mov
out
xor
pop
addr16
test
pop
adc
mov
adc
xchg
sti
cmpsb
mov
jae
cmpsl
icebp
mov
aas
lret
push
push
jmp
fidivrl
lea
out
inc
adc
cli
jp
orb
adc
push
xor
dec
mov
sarb
or
mov
mov
arpl
in
cwtl
test
ljmp
cmpsb
enter
ljmp
nop
mov
pop
fcomp
pushf
jge
xor
movb
pop
dec
int
fwait
mov
adc
bound
push
lahf
jmp
mov
xor
jb
jl
das
and
lret
sbb
add
pop
or
mov
fisttpll
outsl
sahf
xor
ret
cmp
stos
sub
lcall
mov
out
pop
sub
jmp
imul
enter
cli
js
roll
cmpsb
mov
xchg
jno
scas
mov
pop
rcrl
pusha
pop
inc
repnz
cmpl
jae
mov
or
mov
push
mov
xchg
enter
jge
lods
sub
icebp
scas
push
in
and
int
decb
pop
popa
xchg
dec
xlat
mov
aas
outsb
movsb
nop
mov
out
or
stc
add
xchg
jbe
push
insb
bound
repnz
inc
repnz
aad
pop
lods
imul
xchg
out
mov
out
iret
push
call
aas
xchg
adc
aad
adc
ss
push
movsb
shlb
and
cltd
inc
insl
xchg
jns
aad
sub
jg
adc
pusha
push
add
xor
jne
cmp
mov
xchg
jo
sbb
adc
cmp
adc
loop
lods
movsb
scas
loop
xchg
fnstcw
or
sub
add
cmp
xchg
fs
xlat
sbb
mov
jno
mov
push
aas
lret
mov
imul
or
mov
adc
mov
or
mov
mov
push
dec
push
jecxz
fwait
or
jo
movsl
sti
fdiv
rclb
ret
lock
push
cmp
inc
aam
vpmadcsswd
scas
mov
mov
clc
mov
ror
fidivrl
sub
xchg
pop
ds
fsts
dec
mov
jae
icebp
pop
leave
pop
and
jnp
xchg
out
dec
ror
xchg
xchg
xor
hlt
pop
jnp
add
call
mov
sub
repnz
jmp
cld
mov
fbstp
jmp
add
lret
push
sub
shrl
fs
push
or
inc
repz
pminub
lcall
loopne
jbe
jmp
add
scas
loopne
int
xchg
inc
push
mov
je
add
pop
xor
bound
mov
sti
xchg
adc
xlat
mov
xchg
inc
mov
adc
jo
fwait
sbb
jmp
fldl
aas
and
lea
jle
nop
clc
inc
arpl
lods
test
mov
das
in
jns
add
sbb
and
dec
out
das
xchg
mov
fcomps
cltd
insl
xor
inc
enter
jp
sub
out
add
pusha
lea
mov
cs
sahf
or
std
out
mov
xchg
in
sbb
xchg
insl
pop
aas
mov
out
adc
push
push
idivl
jge
cmp
add
cmpsl
scas
dec
mov
sbb
mov
xor
push
out
jb
ds
push
lahf
mov
push
inc
xor
push
ja
push
xlat
xor
adc
ret
mov
pop
pop
mov
add
loope
and
mov
jecxz
adcl
mov
inc
sarb
mov
jno
pop
jbe
lcall
mov
nop
mov
or
dec
popa
push
fldl
insb
dec
jne
bound
jmp
cmpsl
outsl
repnz
xlat
mov
test
jle
mov
out
jno
imul
mov
subb
push
sti
rcrl
inc
std
jno
in
sbb
fisubl
xor
mov
xchg
jae
xchg
stos
insl
push
xchg
rorl
push
push
sti
mov
mov
add
jp
push
ljmp
sahf
xchg
push
adc
lods
stos
scas
add
outsb
pop
sbb
push
cmp
pop
xlat
icebp
xchg
sbb
std
sbb
sub
sahf
in
aad
xchg
in
jecxz
inc
gs
or
mov
rcrb
lcall
add
xor
mov
cmp
xor
push
arpl
and
jg
adc
cmp
xchg
cs
cwtl
push
push
aaa
fildll
sbb
xchg
pop
jo
in
lea
cli
mov
int3
inc
mov
out
fisubrs
fwait
add
out
mov
insl
das
inc
repnz
push
add
lahf
and
lods
mov
enter
pop
dec
jnp
push
push
bnd
inc
dec
arpl
cmpsb
les
mov
loope
add
jge
push
outsb
rclb
or
sbb
jp
scas
adc
into
mov
or
out
adc
jp
movsl
ja
ljmp
inc
imul
in
test
loopne
mov
jle
inc
cmp
mov
push
repnz
lds
mov
dec
mov
cli
fstpt
add
out
push
xchg
or
mov
push
add
mov
aad
or
imul
lret
clc
jmp
jl
jle
mov
pop
cmp
inc
dec
xor
fdivrl
jle
mov
cmp
addl
cmp
dec
bound
mov
xchg
xchg
and
jp
jno
xor
lea
shlb
jge
std
fildl
sub
pop
jbe
outsl
into
int
cmc
stos
adc
cmpsl
push
cli
imul
frstpm(287
pop
mov
jns
mov
and
push
insl
pop
aaa
cmpsb
clc
lock
ja
rcrb
sub
popf
test
push
cmpsb
pusha
inc
lahf
jle
add
in
dec
fldl
dec
scas
xchg
enter
xchg
add
mov
nop
ljmp
je
pop
pop
jge
roll
add
test
sub
pushf
jge
jb
pop
es
xchg
push
test
loope
jp
mov
stos
jl
daa
adc
sbb
xor
push
test
pop
je
sub
orb
adc
sbb
pop
shll
add
jge
xchg
insb
popf
sub
xchg
jle
push
or
cltd
lea
jne
and
aaa
push
jno
xlat
xor
jmp
jecxz
xchg
pop
cmp
add
scas
out
pushf
lds
jge
sbb
mov
fldcw
mov
leave
inc
add
jl,pn
ljmp
push
insl
mov
sub
xchg
xchg
sbb
xchg
jmp
dec
mov
mov
aam
in
jp
push
in
adc
bound
jg
xchg
imul
cmpsl
rorb
ss
xchg
test
mov
cmp
and
icebp
mov
sub
cmp
icebp
mov
and
and
iret
cs
sahf
ja
jmp
cmpb
aas
dec
jne
adc
xchg
mov
imul
and
clc
sti
fsubr
imul
xor
mov
scas
test
add
pop
adc
push
sbb
stos
mov
mov
inc
sub
adc
jb
push
xor
jo
adc
outsb
lods
xchg
push
and
sti
adc
je
test
in
iret
jmp
daa
mov
sahf
jo
sub
adcl
push
cmpsb
rcrl
cltd
add
pop
or
or
jl
and
xor
nop
xchg
stc
inc
out
jno
in
fldcw
cmp
mov
outsl
or
sti
adc
into
fildll
add
jno
jecxz
or
ljmp
mov
arpl
inc
cmp
movsl
cmp
repz
cmp
jmp
dec
lock
inc
sub
jmp
add
xchg
push
or
incl
push
inc
and
cmpsl
loop
dec
mov
scas
xchg
mov
sbb
sbb
arpl
sub
insb
shll
js
movsb
xchg
in
mov
mov
inc
ds
push
jae
adc
cmp
dec
std
and
xor
ret
cltd
and
negl
loope
call
pop
mov
jb
add
mov
and
loop
ret
arpl
cli
cwtl
pop
jp
add
or
mov
imul
mov
and
cwtl
jns
mov
call
lds
add
mov
mov
or
ret
mov
fs
jle
dec
repz
loop
clc
jo
sahf
cli
int
mov
arpl
into
dec
fistps
adc
dec
pop
jp
jg
out
push
xor
sbb
mov
mov
mov
cs
js
nop
jecxz
xchg
ret
test
les
iret
cltd
testb
fcmovne
mov
roll
stos
ret
mov
jg
cmp
outsl
out
and
out
push
addr16
fst
mov
neg
ljmp
in
and
negl
je
aaa
mov
lret
sbb
jb
mulb
pop
mov
sbb
xchg
lcall
outsb
mov
cmpsl
xchg
cs
outsl
pop
popl
popf
pushl
or
rclb
push
lahf
das
jno
mov
in
das
cltd
xor
popa
xor
xchg
mov
push
xchg
fisubs
sahf
cmp
clc
jae
pop
aam
je
or
mov
sub
mov
inc
icebp
out
xor
cld
popa
fiadds
inc
inc
mov
xchg
rolb
mov
inc
inc
ja
or
sbb
sbbl
fadds
mov
add
mov
aaa
clc
repz
lea
ret
mov
int
push
mov
sub
nop
fs
ja
pop
mov
aas
cs
dec
arpl
xchg
push
jne
lret
adcb
cmp
push
clc
fcmovne
push
inc
cs
jae
pusha
and
mov
outsl
ja
and
mov
inc
std
dec
pop
stos
ret
movsl
cwtl
clc
leave
mov
lcall
jle
iret
out
and
xchg
add
icebp
jbe
arpl
dec
pop
mov
mov
out
jmp
imul
popf
jl
pop
mov
xor
aam
mov
fucomp
in
inc
clc
sbb
mov
ret
jns
ret
je
jp
lcall
jmp
pop
cwtl
dec
outsb
jecxz
cwtl
mov
cmpsb
mov
lret
mov
sub
and
int3
out
lods
incl
pushw
or
xor
add
repz
sbb
stos
inc
shrb
xchg
xorb
mov
sub
or
pop
std
aas
jecxz
repz
incl
jmp
scas
mov
push
test
int
cmp
sbbl
out
pop
movsl
adc
jae
dec
fimuls
push
mov
xchg
imul
jo
test
rclb
repnz
aad
fdiv
jmp
fildll
lds
lds
scas
mov
inc
push
arpl
xchg
test
mov
repz
and
inc
xchg
sbb
cmpsl
lods
jae
and
rcl
scas
out
es
hlt
mov
mov
jle
pop
xchg
aaa
push
pop
movsb
or
test
mov
adc
push
cmp
addb
adc
in
sbb
data16
jne
gs
jnp
aas
in
shl
stc
mov
sub
arpl
lahf
add
jbe
mov
out
xchg
inc
push
fcomps
pop
xlat
pushf
pop
push
aam
sub
lea
lock
push
jmp
std
cmp
jmp
and
adc
mov
fidivrs
test
cwtl
test
xor
lret
ret
nop
call
ficoms
cmp
jmp
fwait
push
das
std
cmp
cmp
addl
ret
jb
mov
jo
jp
pop
mov
mov
sbb
pop
ds
clc
bound
int
pop
jecxz
js
cmp
cmpsl
mov
aas
mov
std
lret
mov
xor
push
jl
jns
adc
ljmp
ret
leave
sub
jbe
push
inc
mov
push
hlt
mov
aaa
cmp
add
les
popl
icebp
addr16
std
scas
sub
clc
je
jae
cmp
xchg
mov
push
lock
jl
sub
jns
xor
dec
or
push
jo
sbb
idiv
sbb
iret
data16
xor
jle
scas
movsl
fstpl
mov
popf
xor
mov
push
mov
push
add
adc
cltd
inc
pushf
or
and
pop
jp
hlt
cmp
pop
les
andb
push
jb
scas
stos
test
jae
xor
stos
mov
lods
insb
mov
data16
test
inc
inc
sahf
iret
xor
push
loopne
inc
dec
ss
adc
mov
out
mov
pop
sbb
rolb
lea
jbe
daa
dec
cmp
jb
cmp
inc
or
std
in
cmp
xchg
popf
pop
dec
subb
pop
dec
mov
mov
pop
insl
cmpsb
or
mov
mov
pop
scas
sbb
xchg
leave
inc
imul
jnp
inc
and
pop
iret
push
and
dec
push
out
adc
lcall
stos
outsl
xlat
mov
mov
loope
mov
fscale
cmp
sub
dec
jnp
or
xchg
pop
jmp
lods
mov
adc
dec
ret
jmp
sbb
mov
sbb
in
daa
clc
mov
xchg
aaa
das
inc
aas
xchg
push
push
and
pop
lret
mov
inc
ret
cmp
sbb
jno
jge
rcll
sub
cmp
add
mov
xchg
mov
mov
jl
ror
pop
pop
push
cld
fwait
dec
hlt
pop
hlt
adcl
insl
mov
jmp
pushf
mov
les
or
inc
mov
dec
lock
mov
insb
and
mov
sub
pop
or
xchg
adc
dec
scas
add
sub
fdivs
xchg
jl
jns
jmp
loope
xchg
xor
jecxz
sub
arpl
into
mov
out
and
and
hlt
push
xor
sbb
pop
adc
add
les
pop
insl
js
mov
adc
cmpb
std
pushf
cmc
ffreep
sahf
pusha
mov
jns
jecxz
std
sbb
jno
mov
push
mov
push
arpl
movsl
shll
push
outsl
das
aad
scas
add
push
xor
mov
dec
loop
mov
rorl
inc
add
and
pop
mov
mov
mov
inc
clc
mov
jno
inc
xchg
call
imul
lcall
inc
sbb
icebp
sbb
jmp
rcr
cmc
mov
push
iret
test
frstor
fldl
dec
addb
movsl
xchg
loope
lcall
mov
sbb
loopne
cmp
aas
push
std
es
scas
shl
xor
test
mov
pop
rcrb
cmp
jle
sahf
push
adc
mov
jne
mov
lret
sbb
pop
add
cmp
mov
stos
xchg
mov
mov
sahf
stc
sti
lock
fisubl
sar
fbld
mov
mov
dec
loopne
xlat
hlt
cmpsl
push
or
cmpsb
rolb
cmpsl
mov
jno
add
in
mov
insb
mov
enter
push
inc
shlb
cmp
loope
std
xor
inc
iret
ljmp
std
ficoms
movsl
adc
andb
es
inc
adc
js
xchg
sbb
dec
icebp
int3
mov
jmp
pop
sbb
sub
les
notb
mov
repz
jno
jmp
das
rorl
icebp
sbb
pop
scas
loop
pop
cmp
adc
sub
mov
rcr
fldcw
nop
jmp
mov
cmpsl
lret
lcall
inc
push
xor
test
test
inc
adc
enter
in
jg
scas
imul
hlt
push
cmp
mov
push
push
shl
pop
or
jle
shrb
mov
push
adc
cmp
incb
push
push
cltd
jbe
push
pop
mov
rcrl
pop
or
shll
add
pop
dec
aaa
mov
jae
or
or
mov
or
hlt
hlt
mov
lods
int3
imul
lods
pop
gs
cmp
js
dec
mov
xchg
inc
fs
push
mov
add
or
mov
mov
enter
dec
pop
scas
inc
daa
sub
pop
je
mov
add
jg
gs
mov
or
les
mov
inc
pop
into
das
lea
lods
arpl
or
or
clc
pop
mov
imul
fldt
xor
repnz
push
sti
imul
in
xchg
mov
hlt
pop
xor
fisttps
adc
mov
in
in
outsl
jp
in
outsl
jae
out
jmp
xor
stos
mov
push
sbb
xchg
out
sub
push
jo
push
mov
mov
cmp
shl
mov
mov
out
xor
iret
std
pop
sub
enter
jae
pop
movsb
jae
mov
repnz
push
mov
pop
mov
sbb
ja
call
xchg
lcall
cwtl
fisttpll
sub
jg
aad
push
xchg
enter
pusha
push
xchg
xchg
fimuls
addl
xchg
or
push
lea
push
mov
inc
lret
scas
es
dec
adc
mov
ret
adc
push
out
mov
jb
cmpsb
jns
sbbl
bswap
sub
cmp
insb
add
push
jnp
mov
notl
out
fnstenv
cmc
pop
xor
insb
aam
clc
int3
cli
xchg
or
add
pop
insb
rolb
jl
push
js
pop
cmp
movsb
fdiv
mov
jge
lcall
insl
mov
xor
in
scas
lods
dec
and
enter
cmpsb
call
sahf
imul
cmpsb
push
sub
rorb
add
cli
pop
fiaddl
mov
lods
adc
xor
gs
push
js
sub
dec
sbb
xor
pushf
testb
addl
xchg
adc
jbe
dec
js
add
lods
aaa
push
push
jecxz
movsl
push
ds
lret
aas
nop
add
jge
lcall
fs
pushf
icebp
test
inc
sbb
ret
ficompl
out
in
pop
iret
jno
jecxz
imul
or
inc
mov
add
sahf
fwait
nop
push
cmc
mov
push
addr16
in
fwait
xchg
add
inc
add
pop
pop
in
call
sbb
jb
sbb
repnz
pop
sarl
dec
pop
xchg
lds
xchg
repnz
and
pop
imul
jp
pop
mov
pop
adc
movsb
cmp
xchg
sbb
in
dec
shlb
mov
push
loopne
mov
daa
test
shlb
add
stos
or
xchg
sub
mov
push
rol
inc
je
push
and
mov
cld
dec
sti
sbb
addr16
dec
sub
pop
dec
push
idivb
sub
mov
pusha
out
add
jno
mov
nop
out
and
pop
add
scas
xorb
imul
orl
mov
push
dec
int
pop
cmp
in
cmp
sbb
sub
cmp
xchg
daa
mov
in
mov
xchg
push
fistpll
sub
jb
cld
pop
add
ds
shr
adc
sub
adc
or
fstl
out
and
mov
stc
rcrb
cmpsl
rorb
push
inc
cld
inc
sub
in
xlat
add
sub
cmp
xor
or
and
and
pop
fildll
push
rorl
push
in
pop
push
sar
loopne
in
pusha
dec
js
mov
stos
push
inc
jns
dec
lret
icebp
movb
mov
cmpsl
mov
lahf
cmp
es
lods
jnp
fisttps
aad
mov
cmp
dec
int
cli
nop
lahf
xchg
shlb
pushf
jle
inc
aas
leave
xchg
mov
sbb
mov
and
sbb
movsl
hlt
out
into
xchg
enter
mov
daa
xchg
and
movsb
outsl
push
push
sub
lods
push
mov
sub
dec
sub
out
add
adc
xor
out
mov
mov
jle
imul
xchg
or
in
das
cmp
xor
and
mov
pop
push
cmp
or
movl
cmpl
je
cmpl
jg
jmp
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
mov
subl
xor
xorl
add
movl
cmp
je
xor
mov
xor
mov
mov
mov
xor
or
xor
mov
xorl
add
mov
mov
and
mov
mov
adcl
add
xorl
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
jmp
or
inc
mov
insl
mov
jno
addl
mov
mov
sarb
or
or
or
mov
daa
popa
lea
xor
pop
ror
xchg
or
push
enter
jae
adcb
xor
mov
ljmp
pusha
repz
roll
mov
add
cli
insl
pusha
dec
fmull
xchg
mov
xor
aam
mov
push
mov
mov
and
jns
lods
inc
cld
ja
mov
fwait
dec
cmp
addr16
sbb
push
stos
sub
mov
xor
sbb
and
fcmove
inc
fwait
aas
mov
fistpll
pop
mov
sbb
mov
and
in
ret
pop
cmp
std
inc
gs
xor
xchg
sahf
scas
sub
jge
out
lods
call
xor
dec
or
ret
in
sbb
out
loop
rorb
xor
pop
mov
in
mov
ljmp
notl
lock
push
loop
cltd
xor
gs
or
push
xor
pop
test
mov
lcall
dec
insb
mov
outsl
cltd
mov
inc
adc
ja
push
jns
iret
outsl
cmp
xchg
enter
sahf
std
fldenv
jmp
push
das
mov
cwtl
je
es
mov
push
les
push
adcl
push
mov
fistpll
ss
or
sarl
cmp
mov
jmp
xchg
push
loopne
jae
mov
pop
xor
push
push
dec
fsub
fcoml
mov
mov
movsb
jmp
outsb
loopne
push
cmp
jno
or
xor
vcvtsd2ss
sub
gs
push
movsl
mov
ja
pop
gs
fwait
cwtl
inc
int3
sub
inc
adc
push
sub
nop
and
in
sub
and
in
movsl
dec
and
ds
mov
aad
cmp
sub
fistpll
mov
test
push
insb
clc
xor
hlt
add
pop
xor
xchg
xor
fistps
push
or
mov
test
icebp
mov
and
xchg
cmpsl
les
mov
jmp
cmpb
sbb
xchg
imul
mov
mov
mov
mov
cmpsl
inc
fcompl
aas
sbb
loop
into
jb
sub
jo
add
jo
ss
inc
mov
mov
jp
xchg
xchg
push
les
insb
push
xchg
in
inc
inc
mov
dec
int3
movsl
sbb
adc
sbb
jl
orb
test
mul
dec
stc
adc
add
mov
scas
adc
mov
jecxz
inc
adc
call
inc
sahf
daa
shr
fmuls
mov
mov
bound
js
les
dec
inc
fildl
sbb
cmp
sbb
in
or
cmp
iret
mov
xor
mov
cmpsb
jae
lods
ss
xchg
mov
clc
cmp
cmc
inc
hlt
jg
ljmp
mov
and
mov
out
sbb
sub
pop
mov
idiv
in
mov
outsb
pusha
mov
xchg
xchg
ds
pusha
cmc
jecxz
adc
in
pushf
mov
cs
push
decl
xor
out
xchg
and
xor
sub
push
xchg
mov
inc
dec
leave
add
cmp
in
outsb
pop
jle
sub
mov
cmc
in
dec
add
ljmp
inc
cld
push
imul
pop
stos
cltd
jl
add
ds
imul
sub
jns
jmp
pop
sub
aas
jnp
dec
addb
pop
ret
adc
lock
adc
stos
fisttpl
inc
out
aas
cld
scas
jge
or
fwait
adc
add
pop
movsl
jo
cmp
inc
mov
xchg
cmpsl
insl
pop
out
cs
out
jne
cli
sbb
push
cmp
push
adc
mov
inc
mov
cmp
adcl
mov
cs
sbb
mov
rolb
xchg
jo
sub
call
js
lahf
fisttpll
lods
out
bound
into
push
sbb
push
xor
lcall
mov
add
lret
jb
mov
imul
dec
xor
popa
out
push
je
je
cld
adc
scas
nop
hlt
inc
ja
std
ds
inc
ja
fimuls
cmp
lods
mov
inc
jmp
lret
mov
rcrl
push
sbb
mov
fisubs
inc
iret
movsl
imulb
xchg
inc
lcall
rorb
lock
mov
shll
or
mov
dec
push
fiaddl
mov
dec
not
fwait
mov
add
fwait
push
jmp
mov
sarl
pusha
dec
stos
clc
jb
ficompl
lods
notl
into
ret
pop
int
cwtl
pop
inc
shl
jl
jmp
call
fcmovne
int3
imull
loop
sahf
mov
cmp
pop
and
ret
adc
test
jo
stos
jg
shll
jmp
int
jmp
add
cmpsl
and
cld
xor
dec
callw
xor
insb
jle
inc
test
scas
mov
in
pop
shrb
pop
dec
out
push
mov
cli
imul
xchg
stc
lock
jae
fs
movsb
xor
int3
cmp
ljmp
stc
pop
movsl
push
xor
mov
or
test
cmpsl
mov
cmp
subb
xchg
daa
daa
jp
jne
sbb
mov
push
push
xchg
fsubl
mov
xchg
cmpl
inc
lret
mov
adc
cmpsl
cs
lock
push
ja
cmp
dec
and
mov
lret
mov
push
pushf
xchg
mov
xchg
adc
and
mov
lods
xor
and
lcall
inc
xchg
imul
add
andl
in
push
sbb
push
xchg
loopne
std
adc
shll
jae
loop
xchg
test
bound
adcb
sub
mov
dec
out
or
jae
es
dec
cld
rcrb
mov
addr16
push
test
js
pop
or
je
cmpsb
test
sbb
enter
xor
out
fstp
mov
jne
in
int3
jns
sbb
push
insl
aam
in
inc
sti
movsl
and
xorl
mov
lret
push
das
xchg
insb
cmpsb
dec
pop
mov
mov
pop
mov
adc
xor
push
push
aam
mov
push
mov
andl
sub
movsl
xor
and
sub
scas
inc
notb
mov
decb
test
int
lea
add
jno
out
loop
movb
mov
mov
aas
sti
xchg
gs
xlat
fstpl
mov
mov
mov
jge
mov
in
popa
data16
mov
add
mov
mov
scas
fwait
dec
mov
fldl
inc
mov
les
aaa
xrelease
mov
incl
dec
sub
fbld
push
mov
ljmp
je
xor
repnz
aad
cmp
packssdw
dec
into
outsb
push
add
pusha
sbb
in
insl
add
fnstcw
mov
mov
lret
repz
hlt
inc
lock
jle
stos
inc
pop
mov
pop
repnz
mov
enter
pop
and
push
cs
ss
ret
xor
sahf
fwait
and
sbb
imul
pop
jo
mov
and
ret
in
lahf
dec
sbb
nop
fdivrl
xchg
lahf
xchg
ret
mov
pop
push
aas
lds
out
out
mov
jl
lret
mov
test
mov
fisttpl
ds
test
cmp
insl
xchg
and
and
das
xchg
mov
int3
insl
test
hlt
push
movsl
lock
pop
negl
lahf
fld1
mov
sahf
int
popf
add
shll
or
outsl
scas
sbb
repz
rclb
cmc
or
mov
dec
jnp
cli
xchg
in
insl
lahf
cmp
inc
adc
add
xor
cltd
dec
adc
int
jmp
jnp
inc
ret
clc
cmp
pop
jne
lret
out
push
jg
mov
test
daa
xchg
fidivrs
insb
adc
inc
xchg
lods
je
dec
sbb
or
cmpsl
xchg
mov
subb
xchg
ljmp
pop
popf
xor
call
xlat
mov
test
je
xor
mov
loop
icebp
mov
fstps
push
pop
test
int
out
mov
fildll
push
in
clc
popa
dec
dec
mov
add
sbb
repz
xchg
jge
les
daa
fst
inc
loop
inc
xor
in
addl
dec
out
cmp
lcall
ffreep
sti
xchg
arpl
and
add
daa
nop
pop
in
ficomps
xor
cmp
sub
push
pop
inc
sbb
or
add
mov
jecxz
jae
inc
aas
jmp
imul
adc
test
cmpsl
aad
xchg
dec
in
nop
pop
insb
leave
call
insb
cmp
push
aas
and
adc
mov
push
loop
jecxz
subl
xchg
mov
sub
das
fsubrs
ss
ljmp
mov
sbb
inc
adc
ret
dec
and
or
cs
daa
jb
mov
hlt
enter
mov
int3
imul
jge
loop
dec
js
sub
dec
add
cs
mov
lock
xor
les
add
aam
popf
xchg
stc
dec
jns
sub
pop
dec
add
xorl
push
sbb
pop
shll
loop
fidivl
xchg
mov
std
xchg
mov
lahf
or
stos
fnstenv
call
cld
outsl
cld
push
jmp
fstl
scas
movsb
or
mov
push
test
out
int3
push
aam
mov
xor
iret
ja
mov
inc
lods
fdiv
xchg
mov
or
or
pop
ret
inc
hlt
imul
outsl
mov
cmpsb
test
fwait
and
inc
mov
sbb
pop
add
imul
add
pop
push
dec
nop
jbe
jb
mov
aas
pop
add
out
cmp
xor
dec
clc
pop
pop
mov
mov
aaa
daa
pop
aas
cwtl
test
sbb
mov
or
and
adc
add
shll
sbb
cmp
iret
jl
pop
icebp
popa
fs
jo
mov
push
roll
iret
addr16
mov
xor
sbb
sbb
movsb
ret
daa
and
jbe
lea
push
loopne
clc
sub
mov
xlat
pop
std
jb
je
popa
mov
ficompl
mov
mov
jns
dec
push
sbbl
add
mov
sbb
int3
sti
out
loope
sub
sbb
aad
js
ret
sahf
and
dec
xor
sbb
dec
and
jle
push
insb
mov
and
xchg
stos
test
jb
or
mov
inc
fsubs
mov
addr16
cmp
push
mov
and
cltd
lahf
popf
add
sbb
push
dec
jecxz
mov
push
gs
jmp
pushf
mov
push
jnp
push
pop
gs
adc
push
pop
push
out
loopne
popf
add
mov
inc
pop
jmp
testl
repz
pushf
adc
add
repz
bnd
pop
lret
mov
aam
cwtl
cs
scas
push
stos
dec
int3
sub
in
daa
pop
mov
cmpsb
adc
jno
out
out
jg
xchg
negb
xchg
cli
pop
or
jl
loopne
lahf
popf
je
pop
dec
andl
pushf
js
sub
jl
pop
mov
fmulp
ja
xchg
mov
inc
adcb
nop
push
cmc
dec
push
pop
lods
daa
aam
int
mov
rcll
pusha
decl
fistl
mov
mov
lock
xor
jmp
test
or
enter
xor
mov
icebp
cmp
out
jbe
in
je
aam
in
mov
ss
inc
ret
ja
xor
push
dec
add
jmp
js
fcom
mov
or
std
add
xchg
inc
mov
xchg
clc
orl
xor
or
arpl
in
or
xor
xlat
lcall
ljmp
loopne
sahf
sub
lock
scas
dec
leave
movsb
pop
adc
mov
sti
add
in
lahf
movsl
sbb
sahf
hlt
popf
sbb
push
sahf
iret
ret
jle
sarb
out
pop
pop
push
rclb
cli
xor
sahf
cltd
mov
inc
fisubrs
push
or
imul
cmp
mov
add
adc
insb
sub
xchg
je
mov
sbb
je
cmpb
in
addl
es
into
icebp
sub
and
out
add
ljmp
es
cmp
add
movsl
push
aaa
lcall
ficoml
roll
into
pop
fwait
xor
insl
mov
in
insl
cli
scas
arpl
sbb
sub
fsubl
cmp
push
fmuls
idivl
pop
cmpsl
add
jle
xchg
dec
jne
lods
mov
lds
ret
outsb
cmp
jns
cmpl
push
movsl
pusha
int3
ficoms
loope
mov
mov
rcr
pop
adc
lea
les
adc
filds
icebp
roll
xchg
mov
cmp
sti
jp
scas
enter
dec
inc
cmp
add
mov
xchg
loope
rclb
out
das
inc
out
fwait
ds
mov
xlat
jge
lds
sbb
push
int
xchg
add
outsb
push
mov
mov
mov
adc
push
inc
fistpll
mov
arpl
stos
js
loope
pop
pop
push
jmp
pop
lcall
arpl
pop
xchg
mov
push
sub
adc
test
cmp
imul
fs
mov
cmp
out
adc
jmp
es
insb
nop
xchg
test
jle
mov
int
xchg
cmpsl
fwait
inc
cli
inc
dec
mov
xchg
mov
xlat
jmp
ja
popa
cmp
jmp
cld
ljmp
add
add
add
xchg
shlb
add
scas
push
in
ret
add
rcrl
movsl
pop
sbb
adc
bound
pop
or
stos
ljmp
xchg
cwtl
adc
inc
fsts
test
pushf
mov
out
idivl
push
sbbl
sbb
jne
or
test
mov
mov
subb
push
js
je
add
into
sbb
add
mov
inc
cmpsb
jl
mov
and
mov
pushf
sbb
lahf
sbb
test
inc
jne
fwait
dec
push
mov
pop
add
cwtl
jo
mov
ror
jge
and
insl
nop
dec
mov
loopne
xor
pop
jnp
pop
sahf
rcrl
roll
adc
sbb
xlat
sub
push
push
cs
push
dec
lret
or
push
stc
mov
aaa
pushf
sub
cmp
sub
les
insl
xor
dec
es
or
shrb
dec
fimull
leave
push
xchg
adc
inc
pop
inc
sub
jbe
clc
pop
ja
lea
sub
les
mov
jmp
popa
push
repnz
inc
pop
jge
adc
icebp
sbb
enter
sub
clc
and
sbb
mov
adcl
outsb
or
xchg
mull
dec
and
in
pop
mov
mov
inc
or
stc
movsb
arpl
fwait
adc
rorl
mov
or
int
int
test
mov
fldz
ja
sbb
and
stos
scas
or
lret
inc
cltd
and
mov
rol
push
lret
lds
xor
jle
leave
leave
push
sbb
mov
fistpll
cmp
popa
xchg
lahf
scas
and
aad
icebp
lock
outsl
xchg
repnz
imul
gs
dec
imul
movsl
shlb
adc
mov
fsubrl
fcomp
inc
jge
rcr
dec
arpl
mov
xor
into
mov
pop
dec
into
adc
mov
arpl
inc
outsb
orb
inc
push
cmpsb
mov
mov
pushl
dec
das
mov
popf
inc
sub
inc
sti
cmp
cs
mov
in
adc
xlat
rcr
in
pop
test
mov
out
mov
imul
push
outsl
inc
jnp
stos
mov
mov
adc
mov
out
adc
mov
push
xor
scas
pop
adc
jne
movsb
test
cmpl
xchg
test
ret
dec
lea
stos
data16
leave
adc
lret
push
cmpsl
lret
inc
outsb
test
movsl
dec
pop
xor
sbb
les
or
dec
inc
mov
xor
sub
push
inc
sbb
movsb
adc
adc
push
arpl
add
push
and
sarl
xlat
cmpb
push
cmp
mov
cli
sbb
jge
in
add
jmp
jns
xchg
mov
cmpl
mov
sub
movsl
fsubl
jne
dec
cmp
jg
push
push
mov
in
or
out
xlat
mov
lret
je
push
sub
cmp
mov
daa
rorb
aam
subb
push
dec
stos
mov
insb
mov
test
lret
inc
cmp
jge
and
and
jnp
and
sub
sbb
xchg
push
mov
adc
push
dec
pop
mov
jo
xchg
and
pop
dec
int
jbe
lods
jno
mov
negl
xlat
mov
and
hlt
outsb
les
inc
pop
and
wbinvd
dec
mov
mov
cmpsl
pop
cmp
cmp
lcall
shrl
arpl
push
loop
sbb
jns
and
mov
inc
in
dec
adc
repz
xchg
int
rol
sbb
mov
imull
add
mov
dec
loop
test
sub
cmp
jbe
dec
xchg
sub
rcr
mov
data16
mov
fucomip
mov
je
mov
inc
and
and
push
int3
test
sub
sub
notl
insl
jb
ret
lods
inc
mov
mov
pop
jp
cmp
inc
jne
sub
push
fldl
test
hlt
or
aaa
dec
pop
jae
ret
xorb
mov
andb
xchg
mov
es
ja
xor
sbb
in
jl
push
test
cmp
divl
xchg
push
xor
pushf
push
xor
cmp
fs
pop
xchg
push
faddl
jno
jp
jno
mov
iret
nop
pop
dec
out
out
ss
inc
mov
ret
and
or
push
xchg
mov
adc
lods
pop
xlat
jo
icebp
andb
mov
test
mov
ljmp
into
mul
movsb
mov
push
lret
int
xor
dec
in
mov
jnp
dec
mov
idivb
mov
pop
xlat
pop
test
push
notl
pop
pop
xchg
in
pop
loop
jbe
pushf
stc
dec
into
adc
or
adcb
adc
inc
nop
push
fisttps
lcall
jp
jmp
cli
mov
add
iret
in
in
fmul
aaa
movsl
int3
mov
jmp
scas
cmp
arpl
adc
test
ret
xchg
xchg
iret
fld
push
test
cltd
arpl
adc
xchg
dec
in
dec
xlat
dec
lea
sbb
dec
fmull
dec
mov
dec
ds
ficomps
and
in
and
jp
adc
and
pop
cld
or
std
mov
bound
inc
push
and
mov
xlat
sub
dec
dec
sub
loopne
jecxz
dec
daa
dec
xor
sub
xchg
inc
mov
pop
sbb
push
sub
and
movl
repz
and
scas
in
add
loopne
stc
rcr
cmpsb
add
and
cwtl
shrl
push
mov
jb
sbb
cmpsb
lock
cmp
xchg
or
sbb
add
das
sbb
imul
gs
ljmp
xchg
add
test
push
pusha
jno
aam
mov
loopne
rolb
xor
mov
ljmp
or
mov
and
xchg
add
or
sarb
pop
pop
pop
sbb
sub
dec
shl
mov
loop
mov
or
lcall
xlat
add
cwtl
jo
loopne
das
loope
sbb
mov
ja
jne
repz
mov
push
clc
pop
inc
mov
das
testl
and
sub
insb
inc
lret
out
add
mov
mov
push
daa
fstps
lods
inc
aam
and
xchg
and
dec
fadds
loopne
mov
subl
daa
pushf
pushf
aas
int3
fdivr
dec
and
fwait
in
pop
in
push
and
push
or
cmp
mov
xchg
ret
iret
pop
mov
repz
sbb
out
mov
xchg
push
add
sbb
sbb
sub
popf
ret
xor
gs
sbb
or
notb
inc
mov
fldenv
icebp
int
cmp
and
inc
subl
mov
cmpsb
mov
or
out
cwtl
in
test
iret
adc
enter
push
mov
push
rcll
cmp
jno
xor
cli
js
cmc
subl
divl
aaa
dec
lds
inc
hlt
push
outsb
aas
mov
mov
dec
sbb
shlb
xchg
push
clc
mov
cmp
aaa
stc
pop
cmp
and
data16
xchg
xor
sbb
push
fldenv
push
icebp
movsb
inc
push
fmull
das
mov
push
roll
shl
and
inc
pop
in
clc
pop
mov
rcrl
sbb
mov
pop
add
cld
sti
test
outsl
adcb
xor
pop
outsl
aaa
push
shlb
aam
jbe
mov
in
das
dec
jb
mov
pop
clc
dec
jno
mov
insl
lcall
jecxz
mov
xchg
cmp
jmp
lret
sbb
jp
mov
or
adc
call
shrl
dec
pop
mov
and
jne
inc
cmp
stc
cmp
push
xchg
repz
int
ret
mov
shrl
dec
sbb
out
mov
negl
aam
dec
pop
ss
ret
loop
leave
mov
in
test
add
pop
scas
xor
imul
fistpll
aaa
mov
nop
cmp
xor
and
xlat
mov
mov
negb
xchg
mov
sbb
pop
inc
nop
xchg
loop
lock
push
nop
push
stc
mov
jo
jmp
enter
test
jno
ljmp
std
dec
add
scas
shlb
arpl
dec
lcall
xorb
pop
dec
into
push
cmc
sbb
addr16
aas
push
mov
imul
inc
add
adc
lahf
lock
loope
enter
sbb
mov
insl
or
fisubrs
jecxz
inc
repnz
movb
mov
nop
negl
jecxz
adc
mov
dec
sub
pusha
fwait
pushf
jbe
mov
inc
cmc
jno
daa
sub
test
jmp
mov
fldt
or
sub
out
bound
or
dec
jl
xor
adc
pop
pop
insb
out
pop
outsl
pop
out
inc
movsl
divb
loopne
movsb
outsb
test
dec
ss
inc
add
cwtl
in
loope
or
leave
or
and
dec
in
jp
xchg
shrl
mov
jg
push
mov
jmp
or
push
adc
ljmp
adc
sahf
add
aaa
or
or
push
pop
addr16
mov
std
in
pop
pop
mov
pop
jae
loopne,pn
xlat
idivb
pop
in
loopne
stos
enter
and
lock
subl
mov
push
cmp
mov
sbbl
pop
mov
adc
cmpsl
stc
dec
and
loop
and
push
push
les
ret
fsubl
mov
repnz
jb
fucomi
jb
pop
xchg
mov
push
cmpsb
mov
js
subl
dec
and
mov
js
sarb
lods
in
out
aam
inc
sahf
jae
mov
pop
outsb
push
ss
lods
cltd
dec
xor
dec
jp
mov
imul
test
arpl
pop
insw
sbb
adc
inc
ds
jle
out
jle
into
mov
pop
pop
movsb
jne
into
xchg
int3
scas
pop
mov
or
jo
scas
mov
cltd
and
pop
push
pusha
loope
insb
sarb
pop
add
or
xchg
jecxz
sub
xor
ljmp
push
cmp
rep
aaa
and
cmpsb
xor
xor
mov
pop
shrl
arpl
cmp
sarl
loope
aam
xor
add
push
push
pop
jl
mov
clc
call
mov
adc
add
out
ss
and
addl
pushf
xor
push
jbe
sub
inc
int
sub
cmp
inc
add
pop
inc
fs
jecxz
out
ret
pop
dec
negb
scas
mov
dec
in
push
lahf
push
idivb
aam
sbb
mov
and
in
pop
divl
jl
mov
adc
mov
push
cwtl
ljmp
addr16
sbb
out
pop
mov
mov
leave
icebp
lods
cmpsb
out
lea
sbb
mov
xor
loop
jmp
les
sbb
insl
push
or
cmp
add
lds
int
fdivrp
dec
pop
adc
loope
ret
xchg
xor
adc
jecxz
ss
into
sar
jmp
ret
add
scas
sub
les
push
cltd
cltd
stos
push
scas
or
movsb
outsl
add
push
mov
movsl
lea
xchg
stc
inc
adc
and
mov
ja
cmpsl
inc
sbb
data16
jge
pop
dec
sbb
enter
push
inc
fldcw
jo
jns
je
jle,pt
pop
mov
push
pop
jae,pn
pushf
cmpsl
pop
pop
in
rcl
push
daa
and
adc
mulb
fstpt
sub
pxor
lods
sahf
aaa
dec
xor
push
sahf
sbb
mov
inc
mov
or
pop
mov
xlat
outsb
dec
xadd
aaa
inc
jge
test
dec
into
js
mov
lret
xchg
stos
mov
scas
pop
mov
cmp
sbb
mov
or
aas
mov
jne
outsl
fwait
stos
sbb
rol
xchg
xor
xchg
dec
in
call
and
xchg
sub
dec
sahf
jne
mov
js
aad
rorl
in
mov
lahf
pop
mov
div
icebp
push
dec
jae
enter
mov
push
mov
adc
adc
fs
add
ficoml
sbb
hlt
rorb
jb
ss
xchg
xor
mov
scas
daa
loope
es
test
in
adc
pop
mov
and
fwait
xor
pop
lret
pop
fsts
rorl
in
cmp
notl
hlt
fwait
mov
fs
outsl
stos
push
cmp
pop
dec
arpl
stc
and
pop
inc
mov
cmp
adc
into
scas
jo
dec
insb
adc
pushf
jne
cmpsb
pop
int
xlat
testl
or
jo
lods
idivl
dec
or
push
mov
or
pop
nop
push
add
mov
cmp
int
repz
jle
daa
sub
das
ficompl
decl
lods
push
dec
add
out
daa
or
iret
mov
xchg
sahf
push
shrb
pop
mov
insb
in
xchg
movsb
ficoml
sub
xor
or
and
xchg
cltd
out
in
mov
int3
xor
sbb
iret
pop
hlt
into
nop
adc
dec
lretw
das
aam
pop
jecxz
stos
cmpsl
add
jecxz
aas
shll
xchg
ret
test
scas
and
cli
xor
add
lret
imul
inc
cmpsl
or
push
arpl
loope
sub
dec
mov
push
inc
mov
and
stos
gs
xor
movsl
or
std
pop
cli
in
dec
cltd
insl
loopne
idivb
int3
push
jge
sbb
rcr
out
aas
in
outsb
nop
cld
mov
ss
xor
adc
outsl
or
lahf
fdivrp
insb
xchg
aad
movd
mov
jae
test
pop
mov
mov
js
dec
pop
ss
mov
sub
adc
out
loopne
mov
adcb
xchg
inc
outsb
push
sub
jae
jp
pop
je
sbb
cmp
scas
testb
mov
cmp
and
lahf
xor
add
pop
push
loope
sub
push
xchg
adc
xor
inc
dec
mov
andl
push
cmpsl
lods
ss
int
sarb
jl
mov
jl
cmpsl
pop
lods
cmp
cmc
pop
cmpb
mov
mov
mov
mov
fsts
and
in
sub
les
dec
pop
mov
aad
stos
adc
xlat
rorb
cs
das
notb
cmp
arpl
xchg
enter
leave
out
in
jae
clc
xchg
ror
inc
jl
xchg
adc
sarb
fcmovnu
adc
jb
mov
push
cli
sub
movsl
mov
push
adc
dec
jecxz
movsl
mov
sbb
sbbb
pop
and
jle
xchg
jge
add
out
xchg
fistl
std
je
fists
adc
push
ds
push
jo
dec
adc
out
in
mov
cmp
and
mov
push
mov
sub
adc
pop
cmp
pop
xchg
outsl
jecxz
cmpsl
lods
shlb
out
arpl
dec
dec
data16
adc
mov
inc
nop
jb
xchg
mov
shrl
mov
sub
jecxz
data16
movsb
mov
cmp
popa
lock
xor
insl
int3
inc
data16
mov
inc
daa
inc
iret
mov
cmpsb
sub
gs
adc
xchg
jmp
les
xchg
icebp
mov
in
adc
js
nop
mov
sarb
loopne
int3
mov
lock
inc
push
mov
rcr
inc
aaa
push
lahf
rol
sti
aad
fists
ja
fcoms
jmp
into
cmp
xchg
xor
out
adc
cltd
and
xor
cltd
out
mov
dec
movsb
sub
mov
and
inc
xchg
daa
rorl
and
movsb
jmp
inc
or
xor
test
repnz
into
fst
bound
sub
push
gs
adc
mov
push
fbld
lds
popa
jp
icebp
dec
jbe
sub
imul
mov
lea
and
add
jmp
jae
test
mov
mov
sub
fiaddl
aaa
scas
ja
arpl
pop
out
shlb
sub
cwtl
sub
and
testb
arpl
adc
mov
cli
nop
xchg
ret
jge
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
jmp
mov
loope
addb
cmp
addl
xchg
sub
mov
out
pushf
xchg
pop
out
dec
or
iret
in
mov
pop
out
shlb
adc
movsb
adc
pushf
push
mov
and
pop
mov
xchg
jp
pop
jl
pop
outsb
imul
jp
xchg
lahf
stc
cmp
int3
mov
push
js
stos
cmp
test
mov
es
add
adc
push
flds
ljmp
insl
rcll
xor
aam
adc
jg
outsl
pop
mov
sub
push
xor
adc
xchg
mov
add
cld
or
nop
ja
and
xlat
sbb
inc
mov
mov
jmp
ret
adc
inc
ds
xchg
out
stos
xor
mov
aad
mov
cmpsl
andb
ret
dec
push
ss
dec
sahf
lds
mov
mov
inc
add
sbb
or
icebp
xchg
sub
imul
out
out
mov
popf
and
pop
pop
lods
out
lcall
dec
repnz
add
cmp
mov
pop
mov
xchg
jo
rolb
push
cmp
cwtl
mov
push
nop
and
inc
mov
pop
jmp
add
mov
add
adc
mov
xor
mov
push
pushf
fisubrl
push
cltd
dec
push
inc
clc
test
ret
subl
stos
sarb
ds
xchg
push
pop
pop
leave
add
test
push
push
aas
sub
and
cmp
bound
sbb
sub
adcl
mov
lahf
dec
inc
mov
fsubrl
inc
xor
insb
nop
cmp
and
and
addr16
and
and
repz
std
xlat
add
mov
lods
dec
aam
movsl
shlb
enter
xlat
ds
scas
fs
gs
notl
cmp
data16
jmp
ffreep
cwtl
inc
mov
jnp
ds
inc
and
loope
gs
out
mov
imul
xor
cmpsl
testl
in
cmp
daa
and
inc
int
lcall
outsb
pop
sbb
push
rol
xor
jle
cmc
out
imul
loope
cmc
and
pop
xchg
lcall
movsl
sti
jo
lcall
push
cs
adc
fcoml
sub
xor
in
sub
lea
js
fildl
push
mov
push
pop
cltd
jb
sbb
sub
jae
mov
add
xchg
enter
dec
xchg
xchg
inc
mov
xchg
push
js
call
push
icebp
in
xchg
loop
sbb
push
cmp
add
cmp
lcall
pop
enter
mov
fnstenv
jo
mov
dec
pop
cmp
iret
inc
pop
inc
mov
push
mov
mov
flds
push
adc
mov
mov
adc
mov
sub
jnp
jge
stos
push
add
filds
jae
and
mov
out
stc
aam
jecxz
xchg
loop
dec
dec
lret
inc
jb
adc
or
nop
xchg
imul
lds
fcompp
in
int
test
cmp
lcall
shll
adc
mov
dec
lods
inc
pop
adc
pop
push
loope
test
jnp
and
incb
push
push
loopne
mov
fisttpll
in
and
lret
jne
cmc
mov
cmp
jnp
test
imul
ss
mov
cmc
addb
ret
lock
shll
inc
and
xor
mov
adc
cmc
outsb
jae
imull
pusha
mov
lahf
icebp
pop
gs
lret
dec
mov
lret
push
inc
fnstcw
sub
fldcw
leave
push
popf
sahf
gs
mov
in
jge
das
mov
jno
aas
mov
repnz
loopne
into
fs
adc
dec
movsb
gs
loop
pop
pop
data16
push
or
jne
xor
inc
or
pusha
aas
mov
and
dec
insb
sub
fstpt
in
and
sbb
and
shrb
jl
or
jp
fs
inc
movsl
adc
mov
and
ret
fwait
bswap
call
push
leave
sahf
fldt
mov
insb
xchg
call
fs
repz
testb
xchg
sub
or
aam
jbe
stc
adc
mov
std
push
movsl
pop
icebp
mov
mov
sub
xchg
mov
dec
mov
fmull
cmp
les
pop
jnp
rolb
jb
dec
aad
inc
cmp
cmpsb
sahf
mov
inc
je
pop
pushf
cmp
push
sub
enter
in
daa
lods
xor
push
test
fldcw
sbb
mov
mov
shr
test
sbb
dec
lock
pop
cltd
shll
xor
xchg
dec
hlt
test
in
stc
dec
js
mov
mov
out
loope
test
aaa
test
pop
mov
gs
out
ret
add
aaa
pop
add
or
pop
aas
cwtl
jae
out
rolb
out
lds
je
adc
mov
or
pop
mov
rcrb
in
inc
ja
push
pop
dec
mov
sbb
mov
xorb
xchg
xchg
cmp
lods
popa
mov
inc
push
std
push
fdiv
loopne
cmc
sub
dec
lcall
and
sbbb
rcr
cmpb
loop
push
movsl
cmp
xchg
adc
fadds
js
mov
dec
inc
movsl
dec
sub
outsb
in
imul
lahf
mov
jno
rorl
testb
cld
jae
jne
mov
cmpsb
mov
out
or
inc
sbb
fnsave
fcomps
push
xchg
pop
loop
pop
inc
pop
xor
icebp
popa
xor
add
mov
add
cs
mov
xchg
aad
add
jmp
hlt
jno
inc
imul
aaa
repnz
outsb
pop
inc
repz
out
and
in
ljmp
jge
enter
and
push
jnp
mov
add
cmpsb
mov
cmp
add
cmc
fcomi
or
push
xor
mov
fs
cmp
fs
adc
popf
lods
xchg
sub
cmp
dec
mov
loop
or
ja
leave
fdivl
mov
xchg
mulps
mov
cmp
push
gs
cmp
xlat
jmp
sub
or
out
movsl
jbe
daa
fisubrl
sbbb
mov
mov
jbe
js
mov
je
pop
fnstenv
mov
xchg
fnstsw
mov
lret
mov
in
add
dec
adc
pop
dec
rcl
fldl
pop
sbb
je
add
out
repz
shll
push
xchg
adc
imul
jne
test
dec
dec
fiaddl
cmpsb
inc
push
idiv
ror
mov
test
fisttps
stos
aaa
mov
stc
aam
fstp
pop
dec
sbb
xchg
movsb
lods
mov
lahf
pop
clc
cmp
xchg
xchg
or
push
int
sbb
loope
cmc
movsb
jne
mov
cmp
ret
jl
lahf
jae
lock
sub
adc
mov
xor
test
adc
imul
das
sub
shll
and
adc
jge
push
in
mov
jo
sahf
pop
xchg
jns
aaa
hlt
ja
out
popf
mov
stc
xchg
mov
mov
out
adc
xor
jp
and
notb
mov
cmpl
mov
pop
cli
jbe
mov
push
movsb
push
mov
movd
xchg
movsl
pop
jl
fldenv
in
sbb
call
mov
fsub
mov
mov
adc
ss
repnz
jg,pn
lret
dec
jecxz,pn
les
or
add
cmp
insb
mov
push
mov
lret
lret
dec
addb
iret
imul
sub
mov
aas
cmp
sub
or
iret
mov
pop
xlat
push
mov
push
mov
sub
jmp
mov
lds
jmp
int
cmp
fdivrs
mov
cld
and
mov
jle
sub
lods
orb
mov
adc
outsb
dec
jb
push
mov
xchg
test
sahf
jge
pusha
jmp
in
jo
xor
pop
ret
scas
popf
cmp
dec
mov
sub
dec
jl
pop
mov
lahf
mov
sbb
loope
dec
ret
sub
jge
jmp
das
push
sub
imul
ljmp
ljmp
adc
daa
push
test
imul
mov
scas
sbb
stos
cmp
sub
lods
push
mov
idivl
mov
xor
insl
cmc
pop
push
outsl
and
in
cmp
loop
cmp
out
popa
ret
mov
pushf
xor
jge
xchg
lret
push
insl
inc
jno
aad
in
mov
lret
cmp
cld
repz
push
cli
fdivrl
adc
adc
push
mov
xor
jbe
movsb
lahf
test
or
mov
xlat
dec
xchg
inc
sbb
in
jl
inc
dec
sub
pop
pop
push
movsb
jne
cmp
mov
sbb
adcl
jno
add
divl
cmp
jp
clc
lret
aam
adc
outsb
and
jecxz
imul
jge
jecxz
xor
mov
ja
pushl
fsubr
jecxz
add
add
xor
shlb
mov
std
xor
jg
leave
addr16
or
ljmp
xchg
sbb
xlat
jle
xchg
ffree
add
in
fcomps
push
imul
dec
xchg
jge
js
mov
xchg
stc
imul
and
push
nop
jle
adc
insl
push
pop
test
aas
mov
jbe
mov
sbb
stos
push
ret
cltd
lcall
fistps
xor
mov
cmpsl
int
loopne
pop
cmpsl
push
ret
iret
in
jg
imul
adc
aad
loop
scas
push
push
xchg
xchg
inc
shll
xchg
lods
jle
pop
xor
mov
movsb
xchg
mov
sbb
outsb
push
cmp
push
out
inc
ljmp
or
push
sarb
repnz
int
mov
inc
sub
pop
add
mov
stos
lock
mov
sbb
js
test
push
jb
push
inc
push
test
addr16
les
stos
xchg
jp
fwait
adc
cmc
leave
mov
mov
sub
dec
aas
pushf
jne
or
adc
sub
mov
enter
nop
subb
push
jno
jns
fisubl
rcrb
push
cli
aas
dec
dec
loop
inc
xor
pop
cld
pop
push
push
push
mov
in
inc
jmp
push
sbb
popf
mov
aam
pop
pop
sub
daa
dec
popa
and
and
arpl
fistps
push
xor
out
sbb
sti
or
movsb
pop
mov
mov
push
scas
dec
popa
sub
add
fdivp
fwait
inc
insb
jne
or
cmp
lock
insl
xchg
sub
adc
outsb
fs
mov
rcrl
stos
out
and
jp
mov
xor
xor
sarb
mov
push
push
fcoms
mov
mov
inc
sbb
cltd
call
popf
xchg
shll
cmp
aad
ja
jne
pop
mov
loop
fscale
lcall
push
je
inc
insl
inc
cld
jb
rcr
push
dec
cmpsb
cmpb
mov
push
inc
pushw
ds
pop
outsb
jbe
addl
sub
and
and
mov
popa
xlat
xchg
sbb
or
test
sbb
loopne
jl
cmp
mov
sbb
dec
push
xchg
cltd
dec
std
or
sti
lret
and
cmpsl
fildl
stc
pop
pop
cmp
inc
mov
notl
push
test
mov
icebp
and
jae
sti
ds
cmpsb
sbb
mov
mov
push
loop
mov
push
inc
pop
inc
lret
fisttpll
movsl
je
fwait
push
pushf
stos
inc
clc
pop
icebp
test
sti
xor
xchg
adc
mov
adc
cmp
dec
push
push
jg
rcll
cmp
movd
aad
pop
mov
js
or
in
ljmp
mov
xchg
gs
adc
inc
xchg
pop
ljmp
xchg
cmp
sub
stos
loope
lret
scas
xor
in
rep
push
aas
jecxz
mov
pop
enter
pop
mov
repnz
lods
or
cmpsb
ret
xchg
out
hlt
cmpsl
jnp
or
mov
les
popf
sub
dec
js
adc
fdivr
push
cmp
pop
cmc
jge
mov
mov
mov
push
inc
movsb
dec
clc
xchg
das
pop
cmpsl
pop
mov
pusha
mov
xor
test
js
lds
fdiv
jne
or
imul
ja
xchg
shrl
dec
push
pop
inc
pop
jbe
dec
mov
inc
cmpsl
std
fistpl
add
cld
jg
push
jle
sub
mov
fwait
insb
inc
jnp
fwait
dec
add
push
pop
mov
dec
mov
popa
or
ret
jmp
push
push
inc
das
iret
fwait
in
dec
sahf
out
cwtl
in
pushf
mov
dec
repz
sub
dec
jns
test
cmp
mov
mov
stos
repnz
rol
cmc
repz
add
ds
xchg
test
outsb
shl
pop
push
out
sbb
dec
mov
sub
dec
enter
dec
mov
cmp
mov
dec
lea
shlb
mov
mov
mov
pop
imulb
stos
push
lods
push
push
push
mov
int
test
xchg
sub
ret
aad
cmp
sti
add
in
in
lahf
pop
xor
mov
adc
jp
mov
adc
mov
loop
push
sub
and
jge
stos
lea
or
inc
pop
rol
xor
or
ret
mov
in
inc
xchg
roll
lea
mov
jo
pop
mov
call
cmc
movsl
cmp
out
in
mov
sub
lcall
jnp
andb
add
subb
inc
mov
or
rcl
push
cmpsl
dec
es
out
or
jge
or
or
adc
dec
or
cld
pop
or
push
xor
and
xchg
sti
sbbb
lods
aaa
loopne
push
pop
add
lcall
in
dec
pop
sbb
and
cli
in
sub
or
inc
stos
popf
push
data16
fisttpll
inc
mov
ret
icebp
push
iret
adc
test
and
into
pop
jp
cltd
adc
mov
enter
cmp
mov
insl
int
inc
movsl
inc
sbb
pop
std
aaa
lods
stos
push
push
lahf
xchg
adc
insl
sbb
inc
mulb
pop
lock
push
and
cwtl
or
mov
mov
pop
fcoms
jnp
rcrl
cltd
mov
adc
rorl
loopne
mov
lcall
scas
and
mov
push
lcall
je
lahf
adc
pop
test
xor
call
adc
dec
sub
iret
fidivrl
adc
shrl
mov
mov
xor
std
movsb
stc
daa
cwtl
jne
fstpl
mov
adc
je,pn
jmp
cli
mov
cltd
sbb
sbb
lea
jp
add
adc
jge
adcl
mov
addl
mov
mov
pop
jl
pop
pop
icebp
inc
subb
lret
and
add
jmp
jp
inc
mov
arpl
cld
lret
outsl
fadds
orl
xchg
lidtl
or
dec
dec
mov
cmpsb
mov
and
outsl
sbb
enter
jp
sub
lods
subl
jbe
mov
daa
sub
mov
mov
cmpb
hlt
jns
pop
add
fistpl
push
loop
sbb
jmp
frstor
out
add
lds
int3
enter
mov
in
mov
rolb
imul
push
inc
mov
adc
pop
orl
in
jae
loope
icebp
adc
inc
jl
cmp
xor
sbb
mov
pushf
mov
bound
pop
mov
jns
cmp
lds
adc
mov
in
add
jno
movsl
inc
jbe
imul
xchg
fimuls
inc
adc
sbb
inc
lret
jbe,pt
test
mov
bound
out
in
dec
push
push
ja
cwtl
ss
push
jbe
sti
roll
mov
push
outsb
pop
out
ljmp
cmp
sbb
push
mov
call
inc
sbb
lods
ret
pop
or
insb
js
mov
es
test
jl
movsb
adc
outsb
mov
test
in
cld
je
sarb
pop
ja
adc
jecxz
or
fdiv
insb
sti
and
in
ficomps
out
pop
icebp
cmp
int3
scas
jns
mov
lret
push
movsl
loope
jns
mov
add
sbb
jecxz
stos
mov
add
jns
push
sub
adcb
int3
mov
das
ret
mov
in
push
xchg
cmp
fs
ljmp
mov
xacquire
std
pop
fs
cld
loop
adc
imul
push
popf
inc
sub
imul
cli
adc
popa
int3
lcall
aaa
sub
xor
ret
inc
mov
and
jle
xor
popa
and
push
hlt
add
loope
les
jg
xlat
rorl
mov
add
aam
sbb
jp
outsb
push
mov
xchg
jae
sbb
scas
lahf
adc
add
dec
mov
dec
adc
adc
int3
nop
mov
mov
ret
je
xchg
inc
cmp
ja
xlat
movb
icebp
xor
int3
ss
xor
pop
sub
pop
xlat
dec
mov
imul
mov
js
or
adcl
jnp
mov
adc
pop
adc
subb
nop
xchg
ds
jge
dec
test
add
push
xchg
add
inc
popl
lods
or
or
sahf
loop
repnz
adc
or
fidivrs
add
jecxz
daa
cmp
imul
jg
into
rcrb
push
push
rorb
mov
sub
ja
dec
xchg
ss
sbb
xor
sbb
xchg
mov
stos
cld
dec
or
les
cli
sbb
in
arpl
push
dec
scas
fsts
sub
push
les
aam
or
lock
aas
cmp
xchg
mov
xchg
pop
and
add
mov
lcall
cmpsl
out
in
bound
inc
cmp
dec
mov
cli
jle
das
loopne
xchg
stos
in
lods
fisubs
repz
test
or
mov
mov
jecxz
pop
in
out
movsb
and
imulb
xchg
scas
shlb
stos
adc
mov
rol
push
hlt
mov
add
pop
pop
sub
adc
icebp
pop
popa
cld
mov
jmp
mov
xor
inc
jb
adc
sub
fnstsw
cmc
xor
sub
movsl
gs
movsl
jns
sbb
sbb
ja
sbb
jbe
cmc
xchg
add
jno
adc
or
mov
lods
jo
push
pushf
inc
pusha
iret
outsb
pop
mov
xor
outsl
inc
lret
sub
arpl
add
mov
mov
xchg
pop
pop
filds
mov
clc
jae
pop
mov
cmp
or
or
jge
and
mov
ljmp
add
incl
imul
jns
addr16
jno
jg
nop
jl
and
push
fisubl
mov
pop
mov
out
pop
push
stos
lods
jb
dec
jno
mov
pop
add
iret
sarb
sub
stos
test
inc
mov
stc
insb
lahf
jle
mov
add
push
sahf
dec
aas
mov
cmpsl
xchg
or
cmc
es
cmc
sbb
dec
sub
stc
dec
nop
push
scas
or
imul
in
inc
mov
jecxz
mov
inc
jno
es
je
stos
int3
push
mov
xchg
lods
cli
pop
ret
push
mov
sbb
js
sbb
xchg
lea
mov
test
out
add
aad
pop
subb
aas
add
inc
cmpsl
sti
sbb
cs
push
subl
mov
push
nop
mov
mov
scas
xchg
add
shrl
fistl
cmp
pop
movsl
pushf
jle
mov
adc
xchg
ljmp
sbb
shrb
sub
cs
rcrl
loopne
pop
cmpsb
pop
sbb
inc
loope
push
cli
test
inc
pop
lret
push
jae
jb
inc
outsb
push
outsb
or
pop
cmc
mov
leave
mov
mov
lret
cmpsl
lods
sbb
js
jecxz
repnz
mov
mov
mov
xor
clc
and
inc
mov
loop
stos
fs
fnsave
and
adc
sbbb
xor
scas
sahf
inc
dec
xchg
jmp
adc
mov
and
pushf
push
ret
test
adc
push
pop
in
aam
sar
addr16
rolb
dec
jbe
fcoml
mov
mov
inc
shl
mov
sbb
jmp
loop
cmp
out
ret
xchg
mov
or
fdivp
push
or
shlb
push
iret
fwait
inc
sub
nop
or
sti
pop
ss
and
inc
ja
int3
push
xchg
fnstsw
or
lods
imul
dec
mov
gs
xchg
cmp
mov
in
mov
popf
lahf
add
dec
loope
mov
out
lcall
call
push
aas
divl
mov
lods
mov
shll
xorl
and
nop
adc
imul
bound
dec
into
xlat
mov
imul
xchg
cmc
lds
jmp
sbb
mov
into
xchg
cmp
mov
insl
push
int
insl
mov
ss
arpl
inc
push
ficoml
push
xorl
out
shll
test
cmp
popa
add
jmp
clc
xor
push
mov
xor
sarb
stos
lods
dec
cmp
or
mov
je
jl
fdivrl
cmp
dec
xchg
xor
repnz
sub
scas
sbb
imul
popa
jb
fbstp
cmp
xlat
out
es
dec
stos
xchg
int3
inc
and
pop
adc
les
imul
mov
fcom
cmp
in
add
pop
loop
inc
mov
mov
push
out
push
xchg
mov
or
jmp
add
jae
lea
shl
arpl
xchg
pop
mov
adcb
xor
aas
mov
aad
iret
push
xor
in
idivb
push
loope
fs
inc
xor
in
and
daa
pop
sub
dec
scas
jns
jge
pop
in
icebp
and
pop
jae
fs
cmpb
mov
gs
jmp
rcll
sbb
pop
mov
add
jno
push
inc
jne
sub
pop
pop
jge
scas
xor
aaa
popf
jle
das
xchg
lods
es
mov
mov
ljmp
xor
dec
addb
cmp
lcall
je
les
cwtl
scas
stos
daa
or
dec
jns
mov
sbb
xchg
lods
dec
ficomps
lock
notb
sbb
movsb
cmp
lahf
or
int3
adc
add
movsl
mov
les
cmpsl
xchg
and
mov
mov
repnz
pop
add
cli
sbb
mov
jp
fnstsw
adc
into
das
jbe
lods
loop
cli
cmp
cmp
push
cmp
sbb
outsl
ds
mov
adc
pop
jo
xor
sub
dec
xor
cmp
loop
cmp
cwtl
es
shll
fnstcw
push
xor
mov
popa
test
movsl
pop
inc
les
jmp
xchg
sti
ret
aad
jp
cs
mov
mov
xchg
mov
mov
mov
or
xchg
cmp
push
fistpll
cmpxchg
xor
in
call
in
out
ror
jecxz
mov
pop
mov
movsb
xchg
aad
push
mov
call
jo
pushf
ja
in
push
outsb
stos
mov
fcoms
jno
shlb
addl
js
lret
rcll
fistl
jecxz
pop
xchg
nop
das
fs
xchg
jb
cmc
push
fldt
lods
push
aad
jne
pop
int3
in
jae
cmpl
sub
sub
stc
sub
add
mov
orl
sbb
jns
sub
or
xchg
mov
jns
popf
dec
fidivrl
mov
in
enter
pop
xchg
add
fwait
mov
arpl
mov
mov
adc
pop
ficoml
push
xchg
adc
out
mov
faddl
xchg
push
xchg
mov
jb
xor
mov
or
mov
dec
dec
adc
outsb
adc
test
dec
imul
jg
push
xorb
mov
sbb
jg
cmp
sub
jns
dec
inc
test
jg
adc
inc
sarb
sahf
add
lret
shlb
aam
xchg
push
xchg
scas
jecxz
sbb
fs
or
test
inc
pop
pop
ljmp
mov
and
div
jnp
cmp
and
push
call
ljmp
daa
xor
gs
dec
inc
inc
sub
gs
push
ds
in
xor
aam
stos
into
out
or
push
xchg
imul
jnp
outsl
xor
jecxz
mov
fldenv
outsl
int
push
shl
cmp
leave
mov
dec
movl
dec
or
popa
pop
outsb
jle
sti
scas
mov
xchg
clc
mov
xlat
dec
into
mov
adc
and
mov
int
imul
mov
jnp
fadds
adc
fcoms
jp
call
mov
mov
mov
xchg
push
pop
sti
jg
mov
mov
loop
jle
push
popf
test
mov
stc
mov
rol
jl
ja
ja
aas
or
sbb
xor
xchg
lcall
jno
ficompl
mov
and
cld
jbe
test
mov
inc
push
lods
rcl
in
jg
sub
mov
hlt
sbbl
inc
popl
pop
addr16
lods
ret
adc
cmpsl
sbb
mull
xchg
push
out
roll
sbb
pop
inc
xchg
pop
pop
adc
lcall
adc
cltd
sbb
pop
pop
mov
leave
div
cmp
mov
xor
ret
xlat
or
xchg
in
negl
fwait
and
fidivl
mov
stos
loop
cwtl
mov
mov
dec
add
hlt
mov
into
idivb
cmp
jbe
test
dec
pop
mov
fs
sahf
pop
or
adc
test
and
pop
pop
mov
popf
adc
daa
idivb
rcrb
mov
test
jo
addr16
or
outsl
out
sbb
ret
adc
mul
xor
mov
cmc
push
stos
mov
mov
cwtl
push
pop
pop
loope
into
or
mov
pop
ror
jo
mov
out
dec
shrb
push
out
push
sbb
mov
stc
add
repnz
jecxz
fnstcw
jmp
mov
inc
xchg
xchg
rcll
imul
xchg
add
sub
cmp
lahf
mov
movb
pop
int3
xor
sahf
mov
cltd
or
fists
or
das
aaa
and
xor
loop
dec
push
je
xchg
icebp
cmp
jnp
jle
fwait
jge
mull
push
jnp
ret
cmpsl
and
cmp
xor
push
std
cwtl
and
add
nop
jb
stos
cmpsl
pusha
das
in
mov
in
xchg
xor
fiaddl
add
or
cmc
stos
lds
add
je
xor
push
jne
fwait
push
mul
inc
mov
inc
and
lods
mov
push
leave
xchg
cmpsl
outsl
outsl
adc
aam
lcall
scas
lods
push
out
inc
push
xchg
fwait
cmp
push
inc
imul
mov
inc
xchg
mov
rcll
mov
ljmp
xchg
ja
ss
jmp
push
xor
and
repz
add
in
sbb
adc
dec
cmp
sbb
fst
adc
xor
pop
in
pop
mov
call
sti
adc
or
jmp
jne
loope
mov
mov
push
cwtl
pushf
in
stc
int
es
mov
in
fmull
inc
cmp
xor
and
addr16
dec
imul
stos
sbb
or
and
sbb
sbb
sbb
jnp
fs
push
int
sub
pop
clc
aaa
mov
je
and
dec
in
nop
push
fistps
add
jecxz
bound
add
enter
int3
mov
mov
dec
out
sub
and
sub
jno
popf
pusha
ljmp
aas
inc
jno
stc
xchg
test
iret
repz
out
jo
add
push
sub
xchg
repnz
int3
pop
hlt
pop
jnp
xor
jb
sbb
out
jns
lods
jg,pt
jp
or
adc
mov
mov
xchg
mov
sti
test
xchg
loop
roll
arpl
js
and
pop
mov
cwtl
push
int
arpl
cmp
mov
leave
stos
sbb
aaa
les
cltd
cs
lea
cwtl
and
fs
aam
shr
in
sub
loope
andb
push
push
jle
repnz
push
loop
pop
sti
lcall
push
mov
stos
pop
arpl
adc
mov
or
fiaddl
cmp
sub
sbb
xor
inc
daa
xor
jp
cmpsb
mov
lds
mov
mov
in
xor
cltd
mov
push
mov
aaa
push
jg
das
jne
mov
test
jnp
test
pusha
and
int3
rorl
ret
sarl
arpl
jne
aas
out
cmpsb
inc
xor
sbb
push
mov
jg
xlat
inc
xchg
cmp
pop
cmp
stc
shrl
push
sub
sbb
push
xor
mov
jmp
repz
adc
je
jl
sbbl
inc
xchg
pushf
and
xchg
sub
sbb
call
mov
cltd
mov
lock
leave
or
arpl
sub
iret
pop
adc
push
pop
xlat
jbe
mov
ljmp
cmpsb
xor
xchg
pop
testb
in
fiadds
push
cmp
lcall
push
xchg
test
adc
dec
push
sbb
mov
ss
cmp
lret
push
in
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
mov
adc
mov
xor
subl
add
mov
movzbl
sub
mov
mov
xor
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
add
mov
adcl
xor
mov
adcl
add
movzwl
sub
mov
movb
sbb
lea
mov
mov
sbbl
mov
xor
xorl
inc
andl
mov
add
movl
addl
push
movl
mov
push
mov
mov
sub
or
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
addl
add
movl
jmp
mov
addl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbbl
add
addl
movzwl
xorl
mov
sbb
mov
movzwl
orl
xor
add
movzwl
mov
mov
movl
inc
mov
mov
movl
cmp
movl
jne
or
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
mov
sub
xor
and
add
adcl
mov
mov
xor
add
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
xor
xor
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
movl
neg
movl
movl
mov
mov
adcl
mov
xor
xor
add
mov
mov
mov
je
mov
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
adcl
xor
sub
subl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
or
mov
xorl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
add
subl
imul
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
or
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
xor
mov
sbb
mov
add
mov
movl
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
lea
adcl
mov
mov
neg
mov
sub
add
mov
mov
mov
and
mov
xor
movl
add
jne
jmp
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
sub
xor
xor
sub
mov
subl
mov
mov
movl
xor
andl
xor
sub
orl
sub
xorl
xor
movl
mov
mov
movl
mov
jmp
andl
xor
or
inc
mov
cmpl
jge
jmp
push
pushl
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
adcl
xor
addl
xor
sbbl
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
inc
arpl
and
xchg
sahf
pushf
ja
jb
leave
push
mov
jl
cmp
sbb
lea
in
push
or
dec
mov
or
sarl
sbb
movsl
mov
das
pop
int
mov
std
mov
inc
dec
mov
lret
xor
addr16
mov
xorl
ficomps
jne
pusha
jmp
or
adc
add
push
sub
sbb
fisubrl
jle
pop
int3
insl
or
add
sub
pushf
test
xor
out
js
push
mov
scas
cmp
pop
jl
call
sub
cmpsb
addr16
jl
ud0
arpl
sub
popa
shlb
ficoms
inc
sub
mov
pop
lds
cli
adc
sbb
sbb
stc
mov
nop
loop
push
cmpsl
mov
sbb
push
sbb
les
popf
push
movsl
addr16
or
or
dec
jae
mov
jle
das
push
jecxz
fs
cld
mov
cmp
pop
push
outsb
mov
cli
jb
fdivrl
mov
or
fwait
sub
inc
nop
cwtl
pop
cmp
inc
lret
xor
daa
xchg
lds
sbb
fcmovnb
ss
mov
out
gs
imul
pop
pop
loopne
lahf
movsb
pop
xor
pop
in
fsub
mov
pop
and
or
add
mov
stos
add
add
push
cmp
out
xor
xchg
inc
xlat
mov
jmp
xchg
cltd
test
jno
jo
sub
cwtl
xor
loope
sub
cmp
and
iret
mov
in
jno
push
ret
std
repz
jno
adc
jae
movaps
mov
mov
mov
divl
mov
cmp
xor
mov
sbb
ret
sbb
or
mov
adc
lods
cmp
rcr
dec
in
dec
mov
mov
scas
mov
adc
sbb
cmp
mov
and
pop
sub
adc
int
pop
in
jbe
pushf
and
enter
loopne
xor
int
jns
jns
xchg
push
dec
jp
inc
dec
clc
pop
xor
mov
adc
lret
cld
inc
das
stos
popa
sarb
stos
out
lock
push
push
pop
fmul
xor
imul
out
pop
sbb
dec
in
push
push
jno
sar
dec
jge
popl
sbb
gs
fs
movsb
pop
mov
pusha
xchg
mov
aad
pop
mov
adc
jmp
pusha
enter
test
lea
fisttpll
cmp
enter
repz
sbb
xchg
dec
ds
mov
dec
popf
scas
jecxz
add
mulb
fs
sbb
add
aaa
xchg
push
loopne
outsl
push
inc
arpl
imul
lods
xchg
test
ficoms
mov
lea
je
push
imul
mov
mov
js
sub
mov
push
pop
mov
mov
mov
sub
div
lods
stos
mov
fists
mov
test
xchg
clc
imul
es
lds
adc
xor
mov
lret
movsb
mov
xor
lods
push
and
cmp
mov
sub
bound
dec
pop
fldt
cmp
cmpsb
bound
repnz
out
out
dec
repz
clc
aad
or
insl
fsubrs
imull
int
add
ret
xlat
jno
scas
out
sbb
fisttpll
or
into
lea
movsl
bound
and
xchg
jae
inc
daa
inc
push
popf
std
popa
ss
ss
leave
and
inc
rorl
xchg
add
out
push
mov
cmc
sub
repnz
mov
xchg
xchg
jno
and
mov
pop
loop
cmp
inc
testl
adc
push
in
cmp
dec
icebp
mov
clc
lcall
shll
movsb
stos
add
lret
in
int3
shll
icebp
and
jmp
adc
out
nop
add
cmp
push
adc
sub
sbb
mov
pop
cmp
cwtl
cmp
lret
sti
insb
dec
dec
fadd
cmpsb
leave
mov
add
sub
cld
shll
lea
pop
fnstcw
fisttpll
or
lods
ljmp
push
stos
add
pop
dec
push
pop
jmp
repnz
repnz
and
sbb
sarl
scas
mov
sub
scas
pop
daa
xchg
or
aaa
cmpsl
dec
pop
imul
pop
ficompl
xchg
sti
add
pop
push
sub
xlat
sahf
jmp
scas
pop
mov
call
xchg
fwait
ret
das
cld
mov
aam
fnstenv
xor
xchg
or
shrl
sub
push
push
xchg
inc
ljmp
mov
insb
mov
or
cmpsl
ret
fstl
cmp
inc
aad
inc
mov
lea
xchg
popf
leave
clc
xor
sbb
sti
push
test
and
loopne
mov
andb
mov
jp
stos
cmp
out
clc
int
xchg
test
mov
mov
decb
mul
mov
jmp
stos
icebp
push
test
jb
dec
popf
js
add
stc
inc
je
sbb
cltd
mov
stc
and
mov
mov
and
dec
shrl
jne
or
xorl
dec
cs
jb
cli
and
sbbl
dec
adc
add
xchg
pop
negl
sub
ret
movl
cmc
cmp
lods
out
divl
scas
xchg
les
call
sbb
push
mov
icebp
push
fs
sub
adc
mov
mov
mov
mov
sbbl
lock
cmpsl
xchg
repz
and
out
inc
or
xor
sti
push
jle
shrl
pop
inc
out
push
and
cmpl
mov
add
pop
ljmp
inc
fsub
mov
mov
enter
daa
cmpsl
adc
mov
inc
xlat
int
lock
push
push
lea
mov
xor
bound
xor
das
je
xor
adc
popf
scas
sbb
sahf
add
jnp
pop
dec
and
pop
cmp
jnp
fstp
dec
mov
adc
inc
hlt
popf
in
xor
xor
scas
sub
mov
adc
stc
aad
ficoml
mov
sbb
pop
enter
xlat
xchg
enter
in
call
mov
mov
or
scas
jg
mov
cmp
pop
rcrb
sbbb
xchg
xor
int
mov
das
rcrl
or
outsl
sbb
ja
repnz
mov
addr16
insb
sub
test
sbb
popa
cli
movsl
testl
sbb
jae
fsts
and
adc
insb
cmp
cld
jbe
cmc
sub
add
mov
fistpl
sbb
lea
mov
gs
ret
xchg
lds
cmp
test
out
xchg
das
fisubrl
ret
jg
xor
xchg
daa
das
push
jge,pn
add
decl
icebp
cmc
adcl
das
jge
inc
or
cmp
loope
jo
je
mov
out
out
cli
jge
decb
mov
cwtl
fstps
mov
scas
sub
xchg
mov
insb
mov
jp
and
lea
add
jge
xchg
fwait
xchg
aam
jae
je
inc
gs
xchg
cli
arpl
aad
jle
inc
mov
pop
test
mov
add
lock
es
mov
mov
pop
out
jnp
in
mov
xlat
fstpt
mov
mov
cltd
popf
sbb
mov
mov
lds
stos
mov
mov
pop
call
add
push
loop
cmc
loop
mov
jns
dec
in
fiaddl
xchg
sub
rcll
add
ss
out
jg
add
cmp
cmc
das
or
add
jmp
xor
push
push
pop
cwtl
or
stos
in
enter
mov
icebp
in
and
adc
and
rclb
in
idivl
lahf
inc
fisttps
push
stos
xlat
push
xchg
lahf
jbe
sbb
jb
jmp
rcll
and
scas
xchg
cld
mov
xor
push
add
pusha
movsl
xchg
sbb
pop
stos
jb
mov
mov
stc
mov
cmpb
fiaddl
inc
insl
lahf
pop
iret
sub
and
mov
mov
gs
and
cmp
xlat
in
loop
jg
and
mov
cwtl
push
sub
adc
mov
xchg
out
nop
repnz
in
enter
mov
jno
jmp
or
pop
mov
sbb
hlt
in
cmp
ljmp
xor
xchg
dec
jno
xor
rol
dec
int3
xor
subb
mov
sbb
xor
stc
xlat
clc
push
add
lcall
mov
int
stos
out
test
and
out
repnz
dec
cmp
addr16
mov
add
dec
jp
std
bound
mov
sahf
les
dec
sti
insb
dec
push
adc
xchg
mov
das
xchg
inc
xor
push
jns
xchg
fadds
fwait
nop
cmp
push
ficoml
in
pop
leave
xchg
bound
mov
gs
out
sbb
pop
push
mov
mov
pop
ret
ret
mov
loope
in
gs
push
add
adc
pop
jne
ret
jo
mov
scas
adc
leave
mov
jg
pop
cltd
add
daa
fdivs
add
ret
adc
fsts
jo
div
or
xor
inc
fdivp
adc
int
stc
xor
in
or
insl
lods
fsubrp
or
pop
rol
xchg
dec
push
test
xchg
rcrl
adc
outsb
inc
mov
enter
test
xchg
cmp
into
push
lahf
repnz
arpl
adc
test
loop
popa
lock
std
pusha
adc
enter
jecxz
mov
jmp
or
mov
std
mov
int
xchg
pop
js
std
add
mov
sarl
les
jno
mov
xchg
pop
add
sub
and
fsubs
std
outsb
xor
sbb
push
fucom
in
in
push
les
or
push
xchg
push
jnp
stos
leave
dec
push
xor
xchg
nop
dec
arpl
mov
add
push
add
shrb
pop
repz
sbb
jb
sub
and
rorb
shlb
pop
xor
jge
pop
sub
cmpsl
scas
in
and
xchg
pusha
mov
mov
and
aam
sti
jle
fadds
cli
fdiv
add
mov
fcomps
ja
repnz
adc
ret
nop
mov
mov
jbe
mov
fwait
xchg
in
arpl
or
fisubrl
xor
sub
leave
xchg
fwait
pop
inc
push
bound
movsl
sub
xchg
andb
in
lret
sbb
outsb
movsb
pop
mov
mov
fistps
mov
int
push
lds
pop
xlat
jle
and
push
mov
aas
es
lea
cld
mov
xor
movsl
mov
adc
fisttps
inc
lea
and
or
lods
adc
repnz
repz
mov
jno
dec
sub
hlt
adc
aad
add
add
xchg
cld
jo
inc
mov
lods
or
fs
xchg
hlt
in
aaa
xorl
std
shl
je
cmp
cmp
pop
xlat
adc
aad
inc
stos
int
cli
mov
lods
xlat
jno
cmp
jg
sub
in
pop
nop
negl
or
jno
add
cltd
cmp
in
pusha
call
clc
adc
sbb
shl
je
in
and
adcl
add
scas
adc
data16
clc
jno
insl
sub
fcoml
lret
push
pop
leave
xchg
jp
aad
pushf
pop
or
inc
pop
imul
fs
stos
mov
jno
sarb
loopne
or
mov
out
xchg
or
xor
push
cmp
fstps
lret
pop
add
xor
rcrb
ret
mov
dec
pop
sub
lock
mov
jp
cltd
mov
stos
cmpsl
sbbl
test
test
cmp
xchg
and
mov
push
jnp
loop
pushf
outsb
mov
push
jo
cmp
pminsw
lret
push
lds
push
sbb
push
cmpl
loop
ljmp
mov
movsb
inc
mov
xor
pop
inc
or
cmp
push
jmp
pushf
imul
rcrb
inc
filds
out
popa
fsubrs
aam
fwait
sub
push
enter
stc
xchg
adc
stos
les
xchg
pop
add
push
jecxz
push
push
dec
pop
adc
adc
dec
sub
daa
push
aas
int
repnz
push
adc
jns
xor
dec
shr
dec
push
jecxz
sbb
xchg
and
mov
mov
add
dec
aas
and
insb
lods
jo
xor
xor
sbb
push
jle
in
push
clc
and
and
or
ds
outsb
mov
ret
aam
jb
in
dec
fistpll
mov
push
into
push
test
or
cmp
push
sub
in
sbb
das
sbb
push
movsb
add
shl
pop
mov
push
pop
push
and
push
pop
dec
adc
daa
pop
sahf
dec
stc
mov
sub
sbb
push
or
xor
sub
sub
out
pop
mov
nop
sub
outsl
pop
loopne
shll
xchg
xchg
xor
es
ds
loop
dec
test
xor
and
and
mull
enter
mov
fbld
int3
xchg
jecxz
sarl
rorl
lock
lret
retw
frstor
add
jge
xchg
arpl
popf
xchg
xchg
out
dec
push
lock
in
cmp
push
pushf
in
adc
jl
mov
lcall
xlat
in
in
mov
jne
pop
dec
push
movb
adcb
mov
xor
ret
outsb
ds
outsb
movsl
add
pop
add
mov
out
in
ja
aam
fwait
cmpsb
mov
icebp
test
scas
sub
in
loope
sub
cmp
pop
mov
inc
jae
inc
pop
iret
fwait
sahf
loope
sahf
sbb
dec
pop
repz
popf
jle
mov
cwtl
lcall
mov
mov
int
jmp
mov
fisttpll
pop
in
or
sub
lods
in
fildll
int
push
lret
mov
mov
jge
mov
outsb
dec
adc
movsb
mov
fisubrs
movsb
adc
leavew
xchg
sbb
cmpsl
dec
dec
mov
push
adc
or
mull
popa
xor
loopne
in
sbb
loopne
dec
mov
dec
jns
testl
lahf
add
mov
sub
push
jg
xor
mov
pop
mov
cmp
scas
repz
lret
push
pop
cmp
xor
test
xorb
mov
add
push
dec
and
mov
test
test
in
fidivs
ljmp
and
js
lods
idivb
or
sbb
mov
ss
insb
lock
xor
in
inc
pop
ja
xchg
sub
or
stos
xor
pop
notb
and
inc
aam
fwait
push
mov
push
push
mov
jle
enter
mov
movsb
ffree
aad
addl
call
bound
aam
arpl
ja
jnp
sbb
ljmp
cmp
es
jno
out
mov
jge
sbb
leave
xchg
lods
cmp
cwtl
mov
movsl
shlb
jg
shrb
mov
bnd
add
mov
push
sbb
stos
arpl
dec
in
js
mov
addl
add
mov
pop
dec
pusha
arpl
popf
push
or
or
lods
test
shlb
inc
adc
call
cs
xor
leave
call
cs
mov
mov
xor
pop
pop
ss
jp
mov
or
mov
and
enter
dec
xchg
jge
pop
xor
and
mov
notb
in
add
lahf
bound
lds
jb
icebp
movsb
xchg
add
add
fnstcw
jp
fsubs
mov
std
mov
xchg
mov
movsl
dec
push
out
lcall
jg
mov
cmp
add
ds
arpl
mov
mov
mov
dec
sbb
popf
mov
inc
repz
push
bound
mov
pop
pop
repz
bound
inc
pop
ret
into
xor
gs
outsl
mov
pop
sarl
xor
rorl
loope
pop
add
push
and
loop
xlat
push
or
cwtl
mov
inc
mov
jge
sbb
in
lds
mov
int3
or
mov
scas
in
mov
int
iret
jb
xchg
aaa
xlat
out
inc
xchg
pop
daa
dec
ja
add
into
add
loop
xchg
stc
lods
call
jno
test
loope
xor
mov
mov
sbb
inc
or
scas
jge
mov
sub
mov
fldenv
xlat
and
xor
push
inc
jno
sbb
cmp
jnp
xabort
and
mov
mov
cmp
lret
fs
fists
shrl
outsb
insb
cmpsl
xchg
dec
jb
idivl
stc
push
ss
int3
lods
std
sti
dec
add
inc
mov
in
pop
mov
push
fnstcw
add
lahf
xchg
imul
sbb
and
mov
popf
testl
pop
je
mov
mov
jecxz
mov
lods
mov
xchg
dec
xor
dec
pop
imul
and
jecxz
xchg
fldcw
test
loop
inc
dec
in
mov
ljmp
xor
pop
xchg
push
sbb
sub
jle
mov
push
imul
cwtl
add
pop
pop
add
or
pop
dec
and
mov
in
sbb
sbb
dec
sub
xchg
daa
and
jecxz
push
dec
ljmp
popf
push
aas
ljmp
inc
and
dec
or
push
fcmovbe
subl
in
pop
xchg
mulb
lock
jg
out
adcl
or
adc
inc
fdivrl
sub
cmp
push
or
icebp
dec
sub
jbe
jp
xor
pop
mov
cmp
mov
dec
cmp
subl
xor
rolb
inc
mov
pop
popa
adc
in
xlat
test
nop
push
mov
fs
mov
push
sarl
mov
sbb
into
xchg
inc
mov
frstor
push
xchg
dec
sub
lahf
cmp
pop
inc
cmp
push
add
dec
out
pop
out
and
adc
mov
sti
aaa
or
inc
cwtl
aad
xchg
pop
inc
js
ljmp
or
pop
stos
lds
in
call
mov
flds
add
leave
and
mov
mov
push
inc
negb
sub
repz
les
cs
pop
cwtl
xlat
in
stos
rcll
movsb
cli
ja
subb
outsl
sbb
xlat
fwait
pop
mov
repnz
xor
aaa
sbb
cmpsl
cwtl
dec
jmp
lods
jg
xlat
or
fnsave
into
pushf
adc
sbb
xlat
fwait
push
shrl
jnp
pushw
outsl
ret
ds
push
test
aam
cwtl
xor
jge
jl
or
mov
inc
or
jl
sub
outsl
stos
fisubrs
loop
add
sbb
add
pop
mov
inc
pop
xchg
sub
int
push
lcall
stos
mov
pop
imul
mov
add
mov
bound
pop
mov
mov
mov
das
movsb
pop
sbb
jmp
andl
dec
mov
and
xor
fwait
xchg
or
fbstp
add
mov
hlt
xor
inc
loope
shr
and
mov
stos
xchg
iret
xchg
jmp
jge
inc
cltd
add
fs
into
xchg
inc
cltd
shrl
cltd
leave
pop
mul
insl
add
js
sbb
popf
jecxz
lcall
jae
ja
dec
jmp
in
fstps
and
pop
outsl
into
sahf
xchg
inc
outsb
cmc
sub
pop
je
mov
inc
adcl
mov
arpl
cmp
scas
cmp
pop
inc
movsl
dec
movsl
mov
jmp
xor
xorl
or
sti
jg
icebp
int3
and
lret
pop
xchg
mov
pusha
push
sbb
sub
dec
js
rcr
mov
ss
xor
push
stos
icebp
mov
fistl
inc
sarl
pop
jne
push
dec
jl
nop
in
pop
mov
xor
gs
xor
pop
insb
testl
pop
pop
adc
xchg
pop
adc
loopne
in
je
pop
mov
out
dec
call
sub
pushf
dec
dec
enter
pop
addb
pop
xchg
or
lret
int3
outsb
pop
add
jp
pop
and
hlt
push
lods
xchg
stos
rorl
divl
inc
adc
inc
pushf
outsb
ror
dec
mov
push
loopne
mov
jg
stc
or
sti
mov
fisubs
jae
mov
adc
lock
cltd
test
stos
xchg
mov
mov
pop
lret
mov
rorl
add
jmp
lret
call
je
or
add
xchg
sbb
add
outsl
sbb
inc
int
ret
xchg
nop
push
pop
outsl
jnp
out
jno
mov
cmpsl
cmp
cmc
std
xchg
stc
decb
xor
dec
test
push
jg
dec
sbb
xlat
shr
sbb
pop
xchg
xchg
mov
aad
insl
fistps
jg
sub
testl
mov
movsb
bound
mov
aas
xorl
cwtl
arpl
out
xor
cs
cmp
imul
add
pop
sahf
shrb
shlb
dec
or
ja
fildl
fcoml
push
pusha
jg
mov
aaa
repz
mul
xlat
cli
divb
lds
mov
mov
mov
push
pop
dec
lcall
or
incb
jp
lods
push
test
jns
jl
outsb
gs
lahf
or
add
addl
stos
pop
movl
mov
cltd
add
adcb
test
jecxz
icebp
outsb
pop
inc
jge
mov
cmp
dec
movsb
jbe
mov
sub
pop
cmp
rorl
in
pop
or
call
mov
aam
jl
mov
sub
sbb
and
arpl
pop
rcrl
xlat
add
in
data16
push
add
sub
pop
popf
lea
hlt
jl
scas
adc
mov
mov
push
mov
fwait
fwait
loopne
cld
dec
xlat
mov
lods
js
lods
or
push
adc
push
add
push
cmpxchg
push
and
sbb
in
push
mov
jbe
mov
mov
jne
sbbb
mov
imull
xchg
nop
ss
in
xlat
je
sbb
sub
add
aaa
pop
xchg
daa
xchg
adc
sbb
popf
out
mov
out
cmp
lret
cmpsb
cmp
mov
out
and
es
aad
popa
sbb
cmp
mov
dec
and
stos
in
sbb
fimuls
xchg
out
pop
mov
enter
or
jne
data16
jl
cs
bound
push
mov
gs
and
das
popa
mov
or
lds
push
aas
lahf
sarb
cmp
jno
cli
mov
xchg
repnz
into
insl
dec
popa
push
in
sahf
cwtl
and
jne
or
dec
push
imul
dec
add
cli
jl
mov
xor
xchg
mov
test
sbb
inc
iret
push
jle
xor
mov
mov
aam
mov
mov
push
call
lods
fildll
cld
repnz
adc
ret
push
fildl
push
outsb
push
test
pushw
ss
pusha
push
add
inc
mov
mov
data16
push
scas
mov
das
pusha
sti
cli
movsb
pusha
ret
cltd
imul
mov
push
sti
dec
adc
adc
lock
push
sub
inc
js
and
mov
xchg
mov
pop
xchg
mov
into
aam
fcmovne
push
outsb
adc
jae
dec
cld
les
loope
push
cmp
inc
sbb
lret
mov
aad
inc
pop
testb
lock
dec
pop
adc
xlat
pop
out
stos
and
cmp
xchg
or
movsl
adc
mov
add
or
sti
and
ds
aam
rcr
sbb
push
lahf
jo
lods
xchg
stos
mov
scas
and
sbb
cwtl
movsl
push
mov
mov
out
xchg
sarb
imul
add
clc
mov
push
movsb
mov
addr16
jbe
out
stos
inc
lret
test
mov
inc
mov
in
mov
bound
cmp
and
dec
lods
jge
cltd
mov
or
scas
ret
out
es
jbe
aaa
fdivs
and
push
mov
insb
and
into
mov
loopne
dec
ja
repz
mov
inc
aas
sub
cmpsl
lahf
aad
sub
pushf
clc
rcrb
ja
out
scas
sub
out
loope
int
xor
rorl
out
out
cmp
jcxz
push
ljmp
dec
andl
sbb
xor
dec
cmpsb
in
gs
gs
mov
mov
imul
out
inc
ret
dec
aad
call
push
les
arpl
jl
outsb
movl
jge
inc
mov
ret
roll
int
inc
cld
xchg
cmc
jg
adc
fdivr
xchg
ljmp
mov
negl
jmp
shlb
sbb
aad
dec
arpl
inc
outsl
inc
in
int3
or
jae
out
sti
out
sbb
or
into
inc
jecxz
shl
xchg
sub
xchg
inc
ret
pop
nop
jb
push
repz
outsb
je
sub
cs
and
adc
xchg
scas
andl
fldt
lret
lret
inc
or
sub
mov
cmp
mov
xor
in
sub
pushf
sbb
mov
cmp
cmp
aam
push
jae
push
xlat
outsl
mov
aas
push
popf
mov
pop
pop
inc
and
int
das
mov
adc
movsl
divb
push
mov
and
lret
aam
mov
add
pop
cmpsl
lahf
sarl
arpl
cmpsb
pusha
xor
add
add
mov
data16
ljmp
mov
test
fwait
adc
in
ret
pop
es
xchg
pop
cs
stos
add
sbb
sahf
aad
sub
jo
arpl
test
push
dec
mov
enter
sub
mov
dec
jns
icebp
sub
inc
sub
lahf
jge
mov
dec
arpl
or
add
mov
insl
aas
lea
shrl
mov
add
lock
rclb
dec
jne
fdivrs
mov
add
dec
pop
xchg
and
cmpsl
push
jecxz
aaa
ffreep
rcll
sub
xchg
rorb
shrl
mov
jb
or
xor
out
mov
loope
fs
pop
test
push
lcallw
sub
mov
pop
fists
pop
add
xor
out
cli
inc
popa
mov
adc
add
xor
sahf
sub
test
test
inc
ret
fsubs
or
mov
imul
scas
pop
mov
jmp
aad
sbb
cltd
insl
jge
fwait
sti
xor
stos
pop
ja
stos
dec
jl
add
enter
scas
ljmp
fldcw
and
cmc
out
push
mov
pop
test
xor
xchg
lea
mov
inc
pop
push
rclb
sbb
mov
inc
outsb
icebp
xor
sub
jns
jno
or
scas
ret
ret
xlat
jbe
xlat
in
cmp
in
hlt
stos
xor
fdivl
xor
sub
dec
cmp
pusha
add
mov
pop
cli
out
xor
xor
repnz
popa
cmp
loop
sbbb
sbbb
pop
sar
pop
subb
clc
jmp
jp
jg
mov
test
mov
test
cmp
outsb
adcb
stos
jnp
jb
sarb
jge
jmp
cld
pop
push
outsb
inc
in
in
cmpsb
xchg
sub
mov
daa
stc
out
and
in
sub
mov
push
jecxz
xor
mov
ret
insb
jl
inc
in
iret
xchg
arpl
pop
cmc
mov
repnz
mov
mov
xchg
add
xlat
and
out
mov
push
fs
mov
data16
imul
pop
lahf
cmp
rcrb
sbb
pop
cmp
jle
loop
xor
cmpsb
movsl
cmpsb
lods
in
add
xchg
shl
xor
hlt
imul
aam
outsb
shll
xor
push
movsb
xor
pop
addl
push
cmp
jb
jno
lcall
xchg
push
out
pop
sbbb
push
lea
insb
lret
mov
cmpsl
inc
frstor
sahf
push
rcl
xchg
pushw
gs
in
cs
cltd
out
inc
xchg
mov
ret
and
sub
lods
cmpsb
sahf
test
mov
loopne
lret
sbb
sub
popa
push
shll
popf
mov
jp
inc
mov
xchg
pop
icebp
sbb
mov
mov
hlt
int3
sbb
inc
shll
fisttpl
adc
inc
inc
inc
mov
in
xchg
inc
fidivl
lcall
mov
pop
xor
mov
bound
add
mov
xchg
mov
and
pop
decl
inc
cmpsb
push
scas
xor
mov
sbb
sti
ss
fsts
sub
negb
jns
push
sub
and
out
insl
cmp
sbb
mov
popa
cmc
popa
mov
andb
inc
fadds
inc
jmp
xchg
lock
sbb
popl
pop
inc
aad
aam
cmp
jg
imul
jb
mov
rol
std
pop
lret
and
test
or
insl
shll
rcll
or
ret
aas
xchg
lea
dec
lahf
push
sbb
xchg
mov
pushf
jbe
inc
fucomip
push
sbb
ljmp
sahf
fcompl
jno
scas
sti
dec
std
stos
aas
mov
sub
inc
rcll
jns
add
cs
push
pop
push
fbld
int
test
cwtl
jns
pop
mov
scas
loopne
mov
negl
jge
icebp
filds
ror
cmp
mov
shll
sbb
aam
cmp
push
push
mov
dec
push
push
add
add
stc
push
cmp
leave
xor
mov
bound
mov
or
rolb
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
jmp
test
pop
sahf
andl
sub
dec
dec
jno
jl
cmp
addr16
or
pop
xchg
xchg
adc
loop
js
enter
mov
negb
mov
jle
aam
xlat
shl
dec
sbb
lea
xor
add
pusha
stos
or
pop
jecxz
movl
xor
rcr
pop
into
sub
push
shrl
fdiv
sbb
xchg
aaa
fists
int3
mov
test
lret
insb
push
loop
mov
add
add
and
sbb
pop
dec
cltd
arpl
jmp
cli
mov
mov
int3
push
or
movsl
sub
mov
sahf
sbb
shl
addr16
movsb
scas
jge
aaa
push
pop
test
repz
xchg
and
inc
aas
jno
pop
sbb
mov
cltd
jmp
fwait
imul
mov
lods
jle
mov
hlt
in
or
sub
imul
jge
fcmovnb
ret
mov
ja
loop
addr16
jl
ficomps
rcl
popa
inc
adc
push
andl
pusha
dec
scas
cmp
cmpsl
cmc
call
lods
pop
add
lods
lea
sub
in
mov
addr16
adc
jg
sub
leave
cmpsl
mov
in
jl
cmc
jo
dec
loopne
scas
add
cmpsb
mov
mov
sahf
push
lds
xor
mov
xor
dec
ja
sbb
sub
xor
xchg
lcall
add
mov
ljmp
xor
mov
ret
push
ljmp
movsl
sbb
push
and
stos
jnp
push
mov
dec
pop
call
gs
fst
push
xchg
xchg
les
mov
sbbb
out
pop
dec
sub
lea
js
test
dec
adc
mov
pop
sbb
fwait
movb
adc
fsubrs
cwtl
xchg
adc
aas
sbb
and
and
lock
mov
pop
dec
jle
ss
add
in
jecxz
out
int3
add
push
mov
dec
add
notl
cmpsl
stos
cli
jle
and
xor
pop
aam
popf
js
pop
add
addl
roll
pop
sbb
fisubrl
jmp
daa
repz
push
mov
cmp
shlb
mov
xor
push
sbb
mov
test
lret
test
push
insb
cld
jl
push
int
jmp
cmp
sbb
mov
test
cmp
inc
push
icebp
cmc
sub
cmpl
addr16
in
pop
xor
hlt
pusha
cltd
mov
pop
sbb
mov
jl
dec
ret
mov
jns
movsl
jmp
test
in
cmp
xchg
pop
or
sahf
or
aas
mov
mov
or
jp
sbb
sbb
hlt
popa
push
pop
xchg
imul
daa
sbb
add
and
sub
into
add
jno
ja
ss
daa
sbb
mov
test
inc
aaa
push
push
or
inc
dec
sbb
cmp
ss
jns
jl
adc
arpl
sahf
sti
imul
mov
mov
movsl
pop
or
sbb
mov
or
int3
popa
repnz
or
fldl
pop
xchg
xchg
jle
fstpt
mov
out
mov
nop
ret
test
mov
xchg
or
xchg
mov
pop
pop
add
outsb
popf
cmp
lea
xor
popa
mov
adcl
sti
ds
dec
pop
jb
inc
push
sti
push
loopne
sub
jge
insb
xor
and
sar
aaa
sbbb
mov
das
jge
daa
clc
pop
mov
jae
add
loop
jl
ret
std
xor
lahf
add
mov
mov
xchg
jae
sub
test
pop
pop
xchg
ret
sbbb
outsb
xchg
sbb
dec
hlt
xchg
icebp
mov
push
dec
jbe
cmc
jne
cld
jle
jne
lahf
mov
push
push
cli
aam
test
pop
adc
aaa
mov
hlt
jnp
stos
xor
adc
sub
lret
ret
mov
in
pushf
or
cli
jmp
adc
sub
mov
mov
out
xchg
les
push
ljmp
ficompl
inc
fisubl
xor
xor
jle
inc
dec
push
push
pop
xchg
add
in
rcr
inc
loopne
fcomp
and
lahf
lods
popa
mov
dec
popf
sbbl
sub
cmp
movsl
xchg
xor
inc
div
in
scas
aas
daa
push
out
pop
fldenv
dec
jmp
jmp
pop
and
mov
aam
ret
pop
inc
data16
xor
lea
sub
ficoml
cmpsb
ret
mov
fidivrl
sub
sbb
in
ljmp
mov
das
jbe
mov
ljmp
aad
mov
xor
dec
out
dec
fucomp
rcrl
dec
scas
mov
popa
mov
aam
andb
cmc
inc
cmpl
cmp
cmp
jnp
jno
nop
cmp
sub
cli
out
adc
ret
nop
cmp
shrl
cmp
lock
cmp
xchg
cmpsb
xor
dec
jnp
fdiv
pmuludq
fs
xchg
fld
mov
jbe
cmp
loop
jle
fsubs
cmp
cmovl
pop
xor
inc
int3
mov
sarl
adc
out
mov
cmp
jbe
mov
in
push
cs
xchg
xchg
sti
adc
jle
dec
fisubs
daa
pop
sub
call
iret
or
clc
stc
xchg
mull
rcr
pusha
repnz
jecxz
mov
push
xchg
mov
pop
sbb
ss
int3
je,pt
dec
scas
pushf
jno
aad
cli
rcrb
mov
add
mov
push
call
push
and
lds
shl
pop
stc
xchg
out
cwtl
pop
test
mov
nop
fimuls
test
das
aas
shll
push
nop
inc
adc
mov
in
addr16
jmp
sbb
mov
push
adc
jnp
or
or
movsl
cli
sbb
or
pop
mov
and
int3
out
mov
push
sub
jle
rolb
xor
aam
xchg
pop
xchg
xchg
xor
ficoml
fwait
imul
in
daa
cld
mov
or
xor
inc
test
lea
mov
stos
xchg
inc
pop
mov
inc
jl
imul
sarb
xor
add
adc
je
loopne
loop
cli
and
xor
xchg
xlat
dec
fidivrs
sbb
lea
jb
xchg
jb
addr16
lret
xchg
test
shr
pushf
cmpsb
or
bound
push
push
je
fidivs
jecxz
pop
mov
mov
loop
fcompl
adc
data16
sti
or
sti
dec
clc
push
cmp
nop
sbb
divl
and
cmp
mov
das
dec
adc
and
stos
stc
jp
sbb
out
jp
data16
dec
jne
dec
ljmp
fucomip
sbb
inc
jb
pushf
fs
imul
jb
cmc
fstpl
xor
adc
pop
aad
add
in
in
mov
sub
int
jg
in
jnp
scas
and
in
cmc
movsb
int
jecxz
shll
and
pop
loope
sbb
cmp
ret
icebp
pop
lea
stos
push
insl
outsb
xorps
leave
rorl
dec
in
cs
cs
cmp
orl
sub
icebp
fwait
stos
in
mulb
repz
fwait
mov
mov
jge
shll
hlt
push
in
imul
push
out
pop
mov
out
or
jmp
push
leave
cwtl
pop
or
stos
call
popa
stos
push
sbb
test
jmp
sbb
lret
xor
xchg
mov
rolb
cltd
enter
in
add
rclb
daa
mov
xchg
jecxz
jecxz
and
out
stos
push
in
mov
sarl
xchg
fwait
inc
jae
dec
movsl
jle
bound
sbb
in
fiaddl
ds
push
mov
dec
mov
daa
or
lock
dec
inc
add
fdivl
mov
sub
cld
push
sbb
push
les
rcrl
xor
daa
fldl
into
jae
sbb
mov
lds
test
movsl
movl
movntq
out
sub
mov
in
sahf
pop
or
mov
mov
lds
ret
orl
or
lods
jge
les
xor
pushf
cmpb
pusha
or
rolb
mov
int
pushf
jmp
xor
pusha
jno
into
jns
test
cmp
arpl
sub
popf
mov
mov
mov
clc
mov
leave
pop
mov
jbe
orb
leave
inc
dec
pushf
popf
sbb
cmp
xor
and
in
push
in
xchg
cmova
mov
xchg
shll
scas
add
insl
or
xor
add
sbb
loopne
sub
dec
mov
dec
jns
std
les
imul
mov
mov
sbb
stc
mov
daa
addr16
sahf
jbe
mov
pop
mov
xlat
cmp
sbbl
rcl
fs
inc
in
into
fisubs
mov
fld
sub
mov
ficoml
jb
in
gs
and
lret
jbe
jle
jecxz
test
dec
sti
shl
pusha
pop
mov
dec
dec
pop
pusha
js
add
cmp
sti
xor
popa
rcrb
and
or
xchg
aad
test
sub
sub
xchg
mov
mov
dec
rorl
divb
xchg
fildl
and
cld
and
cmpsl
inc
dec
pop
mov
mov
into
jo
pop
pop
xlat
test
pop
fildll
mov
bndstx
xchg
iret
mov
adc
ret
ret
fadds
pusha
repz
in
mov
xchg
subb
lds
cmc
call
in
xor
cltd
xchg
lock
sbbl
push
xor
xchg
dec
dec
pop
cmp
les
dec
or
fdivrs
push
pop
arpl
cld
push
push
fistpll
mov
mov
add
jns
sbb
xor
cmc
inc
pop
mov
pop
je
dec
in
and
mov
pop
xchg
in
mov
scas
bnd
xchg
jbe
or
in
push
bound
sub
xor
lods
loop
or
mov
loop
subl
push
sub
sub
adc
add
jle
loop
les
fistl
dec
mov
cmpsl
push
add
jg
mov
pop
insl
adcl
adc
sbb
lock
fldt
jo
stos
imul
mov
cltd
or
cmp
push
cli
repnz
pop
mov
les
test
push
out
adc
pop
jb
push
and
inc
pop
dec
testb
test
mov
or
out
mov
adc
xor
in
insl
mov
in
dec
inc
or
mov
shlb
jp
fsubrs
xchg
xchg
xor
orl
mov
sub
fidivrs
andl
jbe
lgs
jp
push
or
rcll
mov
lods
pushf
pop
aaa
loope
push
imul
sbb
hlt
jbe
sub
or
les
movq
icebp
imul
leave
xor
mov
push
inc
mov
popa
pop
mov
add
rorl
movsb
shl
test
push
and
dec
mov
sub
jle
jg
sbb
scas
imulb
mov
xchg
sub
push
sbb
xchg
faddp
cli
dec
lods
enter
mov
fcmovu
push
adc
shrb
sti
mov
sbb
and
pop
jbe
adc
loopne
cmp
or
mov
cmp
cmp
fisttpl
cltd
je
repnz
cmp
pop
xchg
xlat
pop
dec
je
mov
add
pop
mov
or
push
sbb
lds
outsb
mov
push
lds
movsl
int3
das
rol
std
pop
xor
shlb
jge
je
or
mov
dec
sub
hlt
jnp
fwait
pop
push
pop
incb
jnp
scas
bound
mov
nop
sbb
adc
pop
shl
cmpsl
enter
jo
sahf
ror
xor
push
adc
aam
add
mov
inc
push
add
shl
out
hlt
ret
in
inc
push
inc
xor
pop
xchg
dec
or
sarl
jle
push
lock
icebp
push
cmpsl
cmp
sbb
sbb
inc
mov
or
jle
push
jge
mov
ret
cmpsb
outsb
nop
push
xchg
rcrl
inc
or
cmp
ljmp
or
in
sub
add
pop
or
ja
ret
hlt
into
pop
mov
cwtl
jno
stc
in
les
cmp
rcl
or
mov
das
mov
push
and
and
mov
ja
jmp
push
ljmp
outsb
xor
pop
sub
inc
lock
sub
in
orl
or
unpcklps
xchg
fisubl
js
push
insl
es
in
mov
cmp
inc
jl
xchg
push
push
js
into
mov
or
dec
xchg
shl
repnz
pop
inc
mov
push
js
and
or
xor
popf
and
xor
jne
jns
jb
mov
adc
stc
hlt
xchg
adc
or
test
jae
push
inc
dec
sbb
repz
clc
sub
sub
cld
out
xchg
ljmp
sub
cmp
aad
jp
sahf
imul
sub
dec
xor
mov
sub
movsb
aaa
push
cltd
shrb
cmp
jmp
call
or
sub
inc
jg
in
inc
inc
cmp
push
pop
shrb
hlt
pop
enter
into
aam
rol
ffreep
rcrb
inc
cmp
jae
mov
xor
mov
loopne
xchg
push
rorb
xor
stos
jmp
mov
mov
jl,pt
testb
idivb
push
loope
inc
mov
ljmp
paddw
inc
mov
lock
jbe
insb
push
fiaddl
cmpsb
loop
jmp
pop
hlt
mov
rol
xchg
sbb
or
cmp
pop
cmpsb
adc
stc
test
pop
inc
push
mov
pop
mov
dec
lcall
adc
scas
rol
push
dec
repz
outsb
jmp
movsb
ret
jno
shll
jns
add
inc
inc
fcmovbe
test
sysret
dec
addr16
jb
aam
daa
lcall
cltd
psrlw
lods
adc
orl
adc
incb
shlb
add
pop
or
fwait
scas
test
mov
push
and
imul
sbbb
notb
fs
push
xchg
aaa
mov
pop
cmp
int3
lret
leave
and
sbb
jno
add
and
and
pop
dec
insl
push
stos
adc
lahf
sti
inc
xor
sub
movsb
adc
push
or
aaa
loop
mov
jae
xor
push
repnz
cmp
jne
movsl
xor
mov
add
mov
cld
adc
dec
add
or
mov
mov
iret
cmp
sti
inc
scas
dec
int
push
fstpt
dec
xchg
out
jl
pop
mov
das
in
mov
xchg
call
in
push
cmp
cmp
imul
test
jge
mov
pop
xor
notb
rolb
loop
dec
sbb
xlat
cmp
sbb
and
loop
enter
repz
outsb
out
ret
mov
movsb
dec
push
mov
jl
xor
xchg
sub
test
sub
push
inc
adc
add
cld
es
xor
jg
test
mov
call
leave
push
mov
fs
outsl
inc
test
cmpsb
lock
inc
stc
xor
cs
sub
rcll
shl
js
inc
ja
aad
hlt
das
inc
xor
inc
cmpl
push
jnp
push
stos
sub
sahf
nopl
pop
inc
stos
xor
and
lods
add
repnz
cmp
imul
cmp
imul
fwait
jecxz
loope
aaa
dec
js
ja
jle
stos
lahf
dec
lcall
mov
sub
cmp
jo
adcb
pop
aas
xor
das
mov
inc
les
ja
mov
jecxz
mov
cmpsl
jae
cwtl
pop
dec
or
leave
xchg
sahf
cmp
cli
pop
out
and
xor
sbb
and
popf
and
jb
jae
sub
leave
frstor
inc
mov
sub
in
daa
or
roll
je
jne
lret
sbbb
inc
mov
sbb
std
add
pop
lods
sbb
xchg
pushf
push
jmp
mov
push
fsts
insl
or
dec
jno
inc
data16
aaa
jae
jnp
adc
mov
push
je
inc
inc
mov
fidivl
push
add
movsb
out
jge
iret
loop
jle
jns
cmp
mov
and
cmpsl
push
call
ja
xchg
cmp
adc
cltd
pusha
out
add
arpl
dec
push
dec
add
jp
gs
cs
enter
das
mov
in
scas
fists
xchg
outsb
mov
fidivl
bound
mov
lock
pusha
fs
fcomip
gs
mov
loop
push
pop
cs
xor
hlt
lods
push
out
mov
or
movb
sbb
js
or
mov
sub
cmc
data16
xchg
xrelease
imul
xchg
xor
sarl
pop
ffreep
in
stos
mov
pop
jno
aad
enter
and
in
std
dec
xchg
pop
loop
ss
cmpsl
xchg
pop
mov
mov
sub
adc
rol
mov
and
pop
sbb
pop
mov
sub
jbe
xchg
and
pop
sbb
and
rclb
lcall
jp
push
lcall
mov
fwait
add
aad
push
adc
into
pop
mov
mov
jno
ret
test
rcr
scas
pop
enter
mov
dec
add
dec
into
in
pushl
push
jl
sbb
cmp
adc
push
pusha
add
mov
mov
lahf
ljmp
clc
pop
movsl
rcr
or
outsb
das
mov
cmc
fisubl
sbb
xchg
xchg
mov
arpl
jno
std
addr16
pop
cmpsb
outsb
into
aaa
adc
add
gs
pop
mov
test
jle
push
inc
inc
in
cmp
adc
jo
lret
push
ret
inc
sbb
js
idivl
jmp
push
outsl
sbb
and
mov
add
adc
inc
fcoml
mov
shr
loope
es
push
mov
call
lret
or
push
xchg
and
mov
sbb
addl
cmpsb
test
cs
repnz
arpl
aaa
sub
push
std
dec
arpl
rclb
xor
jo
in
xor
dec
inc
mov
jle
cld
adc
mov
push
mov
mov
mov
rcrb
adc
xchg
decb
cld
mov
and
sub
test
out
pusha
jae
repnz
dec
xorl
push
in
push
dec
pop
popa
mov
mov
scas
pop
outsb
fmul
test
dec
subb
lock
dec
xor
cmp
add
inc
imul
es
push
mov
mov
pop
jnp
aad
std
loope
aad
and
push
jne
in
jge
pop
inc
les
jmp
lret
sub
mov
je
out
xor
push
push
inc
les
xor
mov
pop
ret
cmp
je
mov
add
mov
inc
fnstsw
push
inc
cmp
mov
inc
mov
push
sarb
fnstenv
mov
test
mov
popf
cmc
clc
js
or
sbb
sarl
or
jl
or
push
mov
or
lds
add
fnstenv
cmp
test
sbb
fisttpl
popf
sub
rcrl
repnz
cli
cmpb
int3
push
stos
fisubl
ret
and
mov
add
rcrl
orb
fldcw
push
out
mov
add
adc
adc
xor
cmpsl
jno
lret
stos
cmp
imul
in
jae
adc
and
and
adc
adc
int
popl
sar
imul
mov
add
rcrl
cs
jecxz
je
push
xor
and
pop
pop
rcrb
out
fistpl
inc
push
addr16
pop
push
sub
dec
ja
jle
mov
inc
xchg
popf
mov
loopne
das
iret
pop
arpl
jp
mov
sub
in
rcr
daa
mov
dec
cmpsl
lds
pop
jnp
mov
adc
out
push
fs
ret
and
mov
mov
cmp
ja
adc
pusha
mov
cmp
imul
push
loopne
add
shlb
mov
jne
xchg
pop
mov
rcl
inc
stc
or
mov
loope
orl
sbb
insb
cmp
repnz
mov
lret
ds
sbb
outsl
push
mov
ret
mov
in
and
adc
pop
lods
daa
aas
insl
jmp
adc
icebp
jl
xchg
xchg
mov
cld
mov
arpl
psrld
pop
mov
cli
rcll
shll
mov
shl
nop
push
mov
add
jb
sahf
es
pop
pop
cmpsl
fs
jae
faddl
insb
push
jo
jbe
es
repz
fdivrs
mov
cmp
call
sub
cmp
lret
movsb
addr16
sub
adc
adc
dec
movsl
mov
test
sub
jg
ret
push
push
inc
xor
cwtl
jb
push
psrad
jle
cmp
jp
dec
cmp
icebp
fwait
jo
in
mov
lea
xchg
inc
mov
mov
ds
lahf
rcrb
pop
mov
add
enter
mov
adc
lods
pushf
ret
dec
int
pop
push
mov
aas
adc
enter
cmp
repz
cmc
sbb
mov
mov
fadd
sbb
in
aam
nop
xor
add
xchg
pop
fbld
icebp
cmp
jmp
stos
pusha
xchg
cmp
and
xchg
popa
cmp
sub
xor
stos
jne
add
scas
or
add
xchg
pop
push
insl
or
inc
fists
jae
gs
jp
shll
mov
fnstenv
add
fdivrl
xchg
inc
mov
clc
scas
stos
pop
inc
mov
data16
or
cmpsb
or
pop
pop
push
inc
adc
lret
xor
push
cmp
mov
test
pop
ret
popa
insl
add
push
ss
rclb
or
nop
sub
shll
aam
fcmovb
pop
push
aas
mov
xor
popa
jmp
adc
mov
push
push
movsl
ds
xor
cmp
cltd
ss
mov
add
into
cmpl
lods
or
fisttpll
fwait
lcall
mov
inc
fistpl
xchg
mov
xchg
stos
hlt
fcompl
or
cmp
fwait
test
and
rorl
sbb
rorl
js
xor
aad
pop
mov
movsl
inc
add
decl
or
fneni(8087
mov
pop
xor
add
xor
lods
lock
mov
in
in
orl
lds
mov
mov
fimull
outsb
xor
rorl
jl
pop
mov
or
push
dec
add
jmp
and
push
sub
icebp
loope
mov
xchg
test
sbbb
add
mov
cmc
fadd
in
fdivrl
fidivs
mov
mov
out
dec
lds
rcr
mov
and
inc
ret
mov
jo
mov
leave
xchg
xchg
lea
sub
push
jl
cld
test
dec
dec
xchg
sub
adc
gs
rolb
cmp
fbstp
and
dec
pop
ret
dec
out
test
nop
sti
into
ljmp
outsl
or
sarl
insb
jmp
loop
mov
movsb
in
inc
jnp
adc
dec
mov
xchg
outsb
ficoml
imull
test
add
push
insl
sub
test
sub
movsl
or
push
enter
test
and
call
jg
sub
or
jl
push
adc
imul
or
fadds
aad
jne
shl
ss
jge
shlb
loopne
sub
cmp
or
and
scas
adc
sti
jbe
dec
ds
scas
and
sbb
xchg
test
fmuls
xchg
movsl
cli
daa
insl
add
cwtl
jne
das
cmpsl
gs
and
mov
sub
xchg
popf
dec
jecxz
dec
nop
push
jb
fs
xchg
push
mov
dec
lea
sub
sub
pop
rorb
xchg
xchg
dec
icebp
jle
cmpsl
inc
aad
setae
jmp
or
call
fmull
js
cmp
push
test
pop
lret
sub
enter
xchg
xor
inc
and
das
popf
fldt
add
lahf
push
xchg
cmc
adc
jo
jns,pn
icebp
pop
xor
incb
jl
lcall
cltd
sbbl
cmp
scas
mov
sub
push
adc
int
cmc
jbe
mov
dec
lods
mov
xchg
icebp
and
push
adc
xchg
mov
inc
test
sbb
cmp
xchg
jge
inc
faddl
in
mov
fnstsw
sbb
stc
imul
out
std
sub
xor
dec
aad
xor
mov
sbb
mov
imul
shrb
lret
loope
mov
clc
push
xor
test
xor
pop
imul
mov
pusha
int3
imul
ror
add
cmp
repz
lock
fnstenv
cmp
xor
add
add
gs
pop
fnstsw
lods
ret
lcall
xchg
mov
lds
push
cmp
push
pusha
push
es
cmp
call
add
stos
lods
imul
imul
in
shll
lcall
and
and
out
mov
mov
jmp
dec
push
sbbb
fcoms
test
lret
jg
daa
xlat
inc
movsb
sbbl
in
pusha
jg
insb
mov
adc
fidivl
jg
mov
mov
jg
scas
and
jb
add
movsb
loope
jo
xchg
cmp
je
push
sti
mov
push
fadds
in
int
hlt
insl
xlat
mov
sti
mov
jl
mov
mov
and
fstl
pop
pop
xor
cmp
cmp
mov
cmc
jp
cmpsb
pop
int
call
icebp
sbb
xchg
insl
xor
jno
push
aaa
xchg
test
cmpsl
jae
xlat
mov
popf
and
mov
fcmovb
xorb
pop
adc
jecxz
push
rorl
movsb
add
sbb
inc
and
inc
add
inc
sub
out
loope
mov
and
shrl
movsb
outsb
mov
push
and
xlat
into
in
and
pushf
dec
imul
hlt
or
inc
jns
xchg
lahf
xchg
sub
pusha
add
aad
lret
mov
xchg
leave
push
sub
pop
cld
push
ret
test
shrl
cltd
mov
les
mov
push
adc
xor
adc
or
inc
mov
lods
call
aaa
xor
cltd
mov
ds
dec
ljmp
xor
call
loop
mov
add
les
mov
xchg
and
out
pop
adc
push
aaa
sarb
push
nop
lods
fsubrl
mov
push
jb
test
and
leave
orb
es
xchg
add
mov
in
loopne
push
and
test
adc
arpl
sbb
lret
lock
test
idivb
xchg
xor
mov
push
lods
or
rcrl
mov
nop
sbb
les
into
inc
and
mov
mov
shlb
jbe
xor
scas
insb
in
xor
rcll
mov
pop
imul
fstps
shll
bound
int
sbb
jl
or
je
mov
push
jns
in
sub
les
adc
inc
mov
xor
mov
fcompl
fdivrl
mov
mov
int
rclb
push
enter
pop
test
call
sub
sub
xchg
xlat
mov
push
mov
cld
lahf
sub
loopne
fidivrs
sub
xchg
stc
test
push
ret
mov
stos
jl
xchg
stc
fldt
add
leave
arpl
mov
les
ret
enter
gs
rcrl
cmp
cwtl
mov
mov
and
stos
add
sub
cmp
nop
rorl
xlat
arpl
jmp
cmpsl
shlb
push
shl
sbb
and
add
movsl
push
xor
mov
mov
enter
les
pcmpeqw
jne
inc
cmp
popa
push
pop
cltd
scas
cmp
mov
push
or
ss
or
subl
sbb
addb
rol
adc
in
pushf
jge
pop
mov
or
or
and
xor
push
adc
enter
scas
mov
mov
mov
cmp
sbb
rol
mov
adc
lods
pushf
pop
pop
jmp
repz
cs
pop
or
test
insl
lahf
fisubrs
mov
add
addr16
sub
loop
pusha
adc
insl
xchg
clc
sub
or
call
psllw
test
cmp
imul
cld
mov
clc
movsl
mov
mov
mov
pop
pop
stos
loop
mov
loop
ja
mov
dec
movsl
int
int
push
int3
and
std
mov
stos
stos
pop
sti
cmp
or
push
fs
fwait
out
jo
int
aam
int
stos
mov
cld
ret
int
cmp
movsb
sbb
pop
lret
adc
inc
aad
fwait
shrb
mov
xchg
push
mov
dec
adc
divl
in
call
jae
imul
sub
test
pop
mov
int3
test
loop
xor
dec
or
mov
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
adc
jl
mov
bound
popa
mov
cmpl
xchg
popl
hlt
sbb
fstps
das
push
mov
pop
leave
je
loop
pmulhw
lret
pop
stos
and
cmp
jmp
push
sbb
icebp
push
in
scas
push
xchg
mul
push
sarb
out
add
clc
les
dec
arpl
sub
cmp
jle
les
iret
xchg
call
cmpsl
sahf
outsl
mov
ret
push
es
or
fdivrs
mov
push
roll
fmull
loop
stos
xchg
jge
mov
push
adc
mov
dec
sbb
push
andl
xor
or
cmp
dec
xchg
cmc
loope
stos
pop
daa
rol
lea
inc
adc
push
mov
iret
pop
and
push
sbb
add
cmc
push
jmp
repz
sbb
cmp
xchg
add
filds
shll
lret
jbe
imul
test
das
aam
cmp
ret
mov
enter
orb
inc
repnz
fistps
imul
sub
inc
jmp
leave
push
addl
adc
stc
aad
push
jno
scas
xchg
pop
lock
mov
adc
push
and
adc
dec
repz
mov
inc
enter
push
sbb
out
or
xor
mov
mov
fistpl
xor
jle
lods
or
out
icebp
or
mov
mov
lret
sbb
pop
lret
lret
arpl
xor
pop
add
mov
cli
push
mov
lock
es
stos
jno
mov
sti
and
shld
add
adc
dec
scas
pop
inc
inc
sbb
push
in
adc
dec
iret
cmpsl
mov
lods
add
stc
fsub
or
test
xchg
aaa
inc
pusha
pushf
mov
mov
xor
jo
adc
out
rcrl
sbb
xchg
rorb
mov
push
and
test
dec
leave
pop
sahf
pop
jae
jnp
inc
and
push
fcmovu
jae
pop
ljmp
daa
pushf
int
jg
jmp
push
push
fcom
cwtl
inc
cmp
lods
adc
pop
pop
movsl
push
mov
sub
mov
dec
or
mov
call
push
sarb
mov
jg
and
lar
pop
cmp
repz
insl
xchg
adc
lds
popf
ror
out
movsl
jmp
fcomip
mov
mov
lods
icebp
movb
loopne
scas
push
loop
iret
fsts
sbb
pop
cli
cmp
loop
enter
out
push
add
jbe
mov
ds
gs
loop
jecxz
push
pop
jle
int3
push
stc
stos
lea
jo
and
sub
sbb
jb
stc
rcrb
cmp
inc
adc
repnz
xor
fadds
adc
stos
bsr
fcmovnb
rol
xlat
dec
pcmpgtd
into
sbb
mov
mov
lahf
push
mov
stos
sub
mov
mov
aas
imul
add
and
pop
jmp
cmpsl
loope
leave
mov
dec
lcall
imul
jno
cwtl
mov
scas
dec
lcall
nop
pop
jle
add
mov
nop
inc
add
sbb
add
cld
sbb
mov
xor
or
and
jnp
jbe
mov
movl
pop
xchg
mov
sub
fldenv
andl
lcall
xchg
xchg
in
mov
dec
fs
rcrb
stos
jmp
imul
lret
ret
popf
xor
cmpsl
gs
sbb
sub
gs
les
cmc
add
mov
cmc
popf
xor
xchg
or
inc
repnz
dec
movsb
imul
loopne
aam
mov
mov
jo
jg
jg
cwtl
or
cmc
inc
mov
aas
repz
cmp
dec
adc
mov
lahf
in
push
mov
lcall
xchg
in
mov
push
aam
cmp
mov
pop
stos
jmp
push
mov
in
pop
aad
dec
sbb
idivb
addr16
push
xchg
fmul
and
dec
jge
or
jp
inc
xchg
jge
es
bound
xchg
popa
cmc
repz
movsb
ss
testl
shrl
sub
xorl
es
movl
lea
push
and
mov
mov
adc
and
cmpsb
aad
mov
std
jo
daa
mov
ret
dec
push
pop
pop
test
cmp
cltd
leave
insl
test
sbb
or
aaa
add
mov
xor
and
aas
mov
dec
mov
int
lds
repz
jb
sub
aad
pushf
jne
out
adc
aam
sbb
out
rclb
ficoml
xchg
sub
sarb
aam
es
inc
or
adc
fnsave
mov
leave
jmp
pop
sti
aaa
pop
pop
call
loopne
add
pop
add
cmpsl
out
imul
mov
mov
add
pop
je
test
jns
ljmp
jnp
xchg
mov
sub
mov
data16
imul
pop
subw
jge
push
les
loope
fidivrl
movsl
push
faddl
pusha
fsub
and
xchg
in
out
aaa
stc
pop
add
push
lods
mov
inc
insl
mov
cmp
cmp
jo
dec
rol
std
sbb
xchg
xchg
fildl
xor
mov
mov
jno
in
jae
pop
div
fnstsw
inc
sbb
mov
push
ret
insb
fists
adcl
idiv
rcrl
aas
jle
and
dec
mov
cmp
jbe
push
cld
cltd
mov
adc
ljmp
pop
or
sbb
and
or
test
dec
push
pop
xchg
repz
adc
icebp
inc
inc
into
mov
sub
jne
mov
nop
out
hlt
adc
xor
movsb
pop
cwtl
addb
inc
and
push
inc
int
dec
in
push
ret
jbe
push
out
dec
and
in
push
mov
std
popf
flds
sub
cltd
xchg
inc
inc
jns
fists
jecxz
imul
add
or
dec
scas
rcll
rcr
sbb
inc
push
ds
rolb
jo
adc
xor
mov
outsl
dec
test
jb
ss
popa
xchg
adc
jo
mov
rcr
je
push
int
xchg
lock
inc
inc
rol
stos
cli
mov
enter
cld
jmp
fsubrp
adc
ds
sbb
inc
and
out
pop
imul
dec
sub
push
daa
fildl
pop
sub
and
cmp
pop
jmp
cs
xchg
fildll
cmp
jae
mov
or
arpl
cmpb
xor
fadd
mov
pop
movsb
out
and
fidivl
fwait
out
cmp
movsl
sbb
ss
lock
lods
add
mov
std
inc
scas
cmp
push
pop
adc
adc
icebp
mov
jb
pop
lds
pop
and
mov
aaa
out
jb
testb
fidivs
mov
stos
mov
in
inc
outsl
clc
xchg
pusha
rclb
test
hlt
or
and
cmp
xor
jbe
clc
sbb
mov
cmpsl
lds
scas
pop
aad
push
jb
push
or
push
push
inc
repz
jnp
adc
adc
outsl
mov
xor
cmp
jge
popa
sbb
nop
jae
add
aas
mov
loope
test
imul
pop
mov
and
adc
or
xchg
xchg
xchg
xor
mov
cmp
push
mov
and
js
js
mov
popa
loopne
xchg
std
adc
xchg
cmp
jno
cmp
adc
sub
hlt
inc
shrb
sbb
add
sar
dec
pop
and
inc
mov
push
into
fldenv
xchg
incl
jp
pop
inc
js
int3
xchg
mov
mov
in
ss
scas
repnz
cmp
js
dec
xorl
aas
push
pop
daa
pop
or
out
stos
jno
jg
dec
adc
ds
mov
fwait
mov
dec
xchg
xor
clc
scas
iret
xchg
call
and
stos
pop
pop
dec
jb
sbb
mov
or
lock
mov
out
sbb
cmp
test
loope
pushf
pop
bound
lcall
out
or
inc
xchg
sbb
lret
in
scas
scas
and
and
jbe
shlb
mov
lods
xchg
sub
hlt
cmpsl
push
popa
mov
or
mov
xchg
jmp
adc
pushf
test
in
push
mov
mov
movsb
pop
jl
adc
sbb
jge
add
mov
sub
clc
fsubs
pop
test
dec
cmp
dec
stos
mov
aas
stos
xlat
aaa
jbe
movsl
xchg
jae
xor
or
xorl
outsb
push
ss
add
xchg
and
mov
sbb
inc
xor
movsl
test
ret
ss
sti
ret
call
push
gs
cmc
mov
jo
add
test
dec
pop
out
inc
dec
dec
push
or
xchg
out
test
popa
movsl
jo
rorb
and
mov
lea
int
dec
xor
std
or
es
loopne
fnstenv
push
xor
lcall
sub
xorl
notb
sbb
push
or
jmp
sbb
daa
dec
pop
add
test
imul
pop
mov
cs
scas
repnz
mov
lea
loope
cmp
ljmp
or
lock
jno
mov
shrl
iret
fstps
and
lcall
xchg
mov
mov
cmp
cwtl
out
sub
xchg
jmp
int
and
fisubs
and
cmp
mov
mov
sub
mov
enter
std
add
inc
push
pop
fisubl
pop
add
lods
scas
mov
scas
fildl
mov
test
push
or
in
je
rolb
pop
cmp
sub
shrb
cmpsb
sbb
jbe
pop
roll
aas
mov
sub
je
lret
or
jae
adc
sbb
jmp
cs
cmp
scas
out
inc
dec
adc
imul
jmp
and
jne
xchg
mov
xor
cmpl
push
fcmovne
dec
stc
adc
test
jo
fcomp
data16
pop
jb
scas
loop
outsb
xor
into
sub
mov
imul
jmp
jmp
sbb
xor
xchg
xor
xor
cmp
pop
loop
les
push
out
sub
jle
jmp
cmp
xchg
sar
enter
xchg
sbb
popf
add
lcall
fsubs
mov
sub
xor
mov
xchg
ja
mov
add
mov
adc
xorl
cmpl
in
ljmp
loopne
mov
mov
clc
outsl
xchg
imul
es
fwait
sbb
inc
pop
add
out
sbb
imul
mov
jecxz
pop
inc
xchg
stc
push
jae
adc
push
push
dec
loopne
out
in
push
test
test
mov
cmp
mov
popa
out
push
iret
mov
xchg
imul
jae
mov
push
adc
scas
leave
fwait
and
lods
cld
es
mov
out
xchg
cmp
ljmp
clc
icebp
inc
pop
mov
mov
test
mov
add
inc
pushl
push
mov
shl
lods
and
out
pop
xor
pop
fsubrs
jbe
inc
lret
push
out
rcll
mov
push
mov
adc
in
and
ja
ficomps
iret
mov
pop
les
xor
cs
adc
xchg
or
xor
xchg
int
filds
andl
dec
push
enter
add
shlb
loop
into
mov
push
pop
xchg
mov
ss
lea
jp
loop
cwtl
jae
ret
xchg
repnz
cmp
rolb
and
scas
mov
adc
inc
shlb
js
in
add
mov
jb
loopne
ror
and
sahf
sbb
or
cltd
sub
sahf
mov
jmp
icebp
ja
test
cmpl
lods
movsb
xchg
mov
ret
dec
sub
xlat
mov
cmpsl
bound
lods
pop
fcoms
cli
sub
xchg
popa
xor
sbb
xchg
ds
xor
xchg
lahf
ficompl
jae
cmpsb
or
or
js
pusha
lods
insb
icebp
insb
pushf
adc
jns
in
and
mov
les
cmpsl
roll
mul
pushf
cmp
rcrl
lret
adc
inc
loopne
sbb
push
out
loope
add
or
sahf
out
das
lcall
dec
xor
xchg
aad
xchg
out
mov
popl
jle
pop
or
std
scas
jecxz
jne
outsl
and
adc
or
dec
mov
jp
mov
clc
pop
mov
lds
mov
adc
push
mov
out
cmpsb
fadds
sbb
ret
xor
push
shll
int
xchg
rorl
popf
sahf
pop
xor
dec
mov
push
js
movsl
mov
mov
sub
mov
pop
test
cmp
subl
jno
das
fsubs
aam
leave
add
push
pop
or
jb
jp
addr16
xlat
or
inc
in
add
xor
lcall
jb
rclb
pop
xchg
jbe
fdivrs
or
push
fs
sbb
mov
xchg
das
popa
xor
mov
ja
cmc
jp
inc
enter
xchg
loopne
roll
test
std
jae
lahf
add
push
push
pop
ret
adc
push
cld
mov
mov
cs
jge,pt
into
inc
adc
repnz
mov
imul
lds
mov
call
lods
mov
push
aaa
aaa
sar
jg
xchg
cmc
and
push
adc
or
and
push
jmp
mov
mov
sub
and
pop
divl
ja
es
xor
pop
clc
adc
fwait
loope
mov
call
jle
mov
pusha
or
fmull
cmpsb
fisubrs
nop
aad
xchg
mov
add
dec
negb
mov
add
jp
ljmp
and
push
aad
ljmp
jbe
out
ja
pop
mov
mov
lods
xor
scas
or
out
stc
bound
shrb
or
jmp
out
or
xchg
sub
fmull
cmp
pop
xlat
mov
push
les
stos
inc
stos
aam
or
adc
xchg
xor
sub
ret
jge
loopne
imul
lods
pop
inc
pop
sbb
lea
sbb
inc
pop
cli
loopne
and
adc
iret
add
pop
xor
nop
fisubl
jne
clc
scas
jnp
adc
sbb
add
into
cmp
aaa
shrb
sbb
mov
je
cmp
cwtl
cmc
push
cmc
or
jns
xchg
data16
add
clc
cmpsb
jecxz,pn
xor
jb
and
push
adc
cmp
int
das
jne
mov
push
add
loope
or
pusha
adc
xorb
push
ja
jno
arpl
mov
mov
dec
cmp
stos
sbb
xchg
in
outsb
mov
and
lret
mov
dec
and
test
mov
add
movsl
stos
cltd
push
shlb
mov
std
cmp
push
je
loop
sbb
cmpsl
xor
dec
pop
repnz
cld
add
xchg
pop
adc
lods
lds
arpl
cmp
pop
jns
sub
das
pop
jo
cmc
loop
push
mov
pop
xor
sbb
nop
lods
insl
jb
cmp
aas
fadds
cld
add
ss
xchg
fbld
insl
int3
mov
push
jo
dec
jns
hlt
push
jp
inc
mov
movsb
cwtl
push
sbb
push
aam
inc
jno
clc
div
js
or
arpl
mov
dec
mov
stc
sub
jae
xchg
xor
sti
gs
adc
inc
xchg
repnz
push
jl
in
mov
ljmp
adc
add
or
cmc
pop
xchg
cs
sahf
insl
cmp
ss
sbb
mov
pop
fwait
repz
pop
insb
in
mov
test
aaa
rcrl
ljmp
mov
xchg
sarb
cmp
mov
inc
pop
xacquire
int3
scas
clc
inc
aaa
jb
call
inc
lcall
push
add
pop
clc
jb
fldt
xchg
es
sbb
fstps
adc
mov
cmp
pop
jb
pop
stc
pop
cmp
add
int
xchg
adc
mov
int
call
outsb
adc
mov
sbb
dec
ret
ja
fsubrl
dec
mov
loope
in
aas
dec
dec
jge
cmp
cli
addr16
dec
dec
shr
xchg
mov
stos
outsb
fdivs
lds
inc
mov
dec
insb
outsl
icebp
jl
lds
in
loope
xchg
adc
adc
jl
mov
xchg
mov
mov
add
pop
add
push
mov
mov
jns
and
and
xchg
mov
sbb
pop
push
lret
imul
fwait
jl
in
scas
or
xor
adc
movsl
lock
loop
les
jo
clc
out
dec
test
out
dec
inc
out
sbb
dec
popf
sbb
inc
mov
xchg
sub
cmpsb
test
into
mov
sub
insl
imul
mov
mov
push
clc
sbb
sbb
rol
push
loope
push
xchg
int3
ja
aaa
xor
sub
mov
loopne
ja
ret
or
fisubl
mov
push
xchg
sub
mov
pop
mov
ret
out
adcl
xor
pop
cs
pop
mov
inc
inc
cwtl
mov
xor
push
mov
fninit
lret
in
mov
and
mov
or
mov
xchg
inc
xor
testb
dec
out
jno
xor
jge
std
sbb
lret
shll
jae
jge
insb
jne
sub
dec
sbb
cld
iret
dec
pop
sub
hlt
test
ja
dec
sub
aad
jnp
pusha
cli
sub
inc
dec
fdivp
popf
mov
inc
fisttpl
inc
idiv
test
test
jae
std
mov
xchg
cmp
xchg
hlt
stos
sub
add
insl
pop
adc
dec
and
scas
outsb
lds
mov
dec
sub
insb
iret
ja
ss
push
dec
push
dec
arpl
lret
sbb
cltd
repnz
call
test
ja
int
mov
call
rolb
mov
push
fmull
sbb
push
and
push
and
filds
pusha
adc
cmp
mov
pop
xor
test
js
leave
adc
lret
test
loop
popf
fidivl
ss
cmp
sub
paddusb
xchg
jg
imull
xor
pop
insl
lods
push
sbb
std
ss
adc
ficompl
mov
scas
and
jg
in
push
dec
mov
push
in
int3
mov
inc
adc
icebp
loope
xchg
vmovss
adc
dec
aas
gs
sub
cmpsb
scas
xchg
add
iret
loopne
and
sti
arpl
cmpsl
subb
add
iret
xchg
cwtl
pop
lret
jl
lea
push
mov
std
xchg
rcll
mov
cmpsl
xchg
mov
pop
test
add
mov
and
in
push
inc
insb
or
sub
add
lret
mov
aas
or
ss
sbb
insl
mov
jmp
popa
sbbb
jbe
cmp
adc
in
mov
cmc
pop
sub
cld
cmc
cmp
xchg
lods
dec
fs
icebp
lret
out
mov
and
mov
jecxz
aaa
push
fs
mov
add
fs
jle
out
sbb
dec
dec
xor
and
xchg
sahf
sub
and
ljmp
fs
jne
neg
add
jbe
jno
imul
adcl
and
subb
xor
pop
xchg
jg
mov
mov
mov
sub
jae
push
push
and
int
stos
or
mov
dec
iret
xchg
jnp
test
movsb
decb
daa
fs
aas
jl
call
insl
mov
sarl
jle
ret
add
jle
mov
xchg
mov
rorl
fstl
cmpb
xchg
jge
mov
lret
js
das
sbb
cmpsb
sbb
pop
or
sbbl
mov
es
popf
es
jne
bound
adcb
icebp
pop
add
push
xor
std
mov
mov
cmp
pop
std
add
mov
push
test
arpl
push
jno
jnp
stos
sbb
enter
repz
test
cmpsl
fists
cmp
xor
pop
ja
test
nop
adc
scas
mov
pushf
lods
pop
push
sub
sub
mov
lock
mull
loop
popa
jo
mov
push
out
sub
push
inc
ret
fdivrs
xchg
xchg
loope
mov
or
lahf
sub
or
dec
inc
xchg
shl
sub
add
mov
pusha
stos
mov
imulb
in
clc
sbb
and
add
jnp
push
pop
xor
xchg
outsb
and
rcrl
in
inc
mov
push
mov
je
dec
lahf
clc
inc
jae
mul
jns
push
fbstp
fcmovne
push
outsb
lods
lods
ficompl
out
std
ficoml
movsl
mov
daa
adc
lahf
adc
jmp
sub
sbb
sub
add
mov
xchg
jb
mov
push
or
jne
add
ss
xchg
xor
aad
mov
cmp
ret
push
lods
jecxz
fs
cmp
nop
sti
nop
lahf
gs
sbb
fistpll
dec
mov
leave
inc
aam
data16
add
js
insl
ret
mov
xor
sub
out
cmp
add
mov
lret
loopne
gs
test
ja
into
lea
jno
out
shr
in
mov
loope
jmp
out
mov
mov
jmp
insb
int3
jb
out
mov
mov
jecxz
aas
call
cwtl
neg
xor
sbb
lret
nop
call
je
mov
aam
je
enter
adc
jle
xor
adc
xchg
xor
imul
cmc
repz
in
sub
and
fldenv
iret
call
jbe
out
and
movsb
jmp
fwait
mov
stos
sub
loop
mov
and
cmp
and
jno
ss
jmp
sbbb
daa
rcll
adc
dec
dec
pusha
adc
popf
decb
push
pop
or
jne
aad
out
imul
lods
clc
add
push
int3
pop
sahf
outsb
scas
aad
mov
adc
scas
in
and
cmp
pop
ficoms
data16
pop
in
fldl
and
sahf
ret
xor
fs
cld
fdivl
jo
mov
fstp
jg
mov
push
ret
sbb
call
mov
hlt
cvttps2pi
mov
push
aad
jae
test
xchg
outsl
shrl
repnz
xor
lods
push
mov
xchg
xor
icebp
ret
push
add
inc
cltd
cmpsl
inc
movsb
fdivp
cld
pusha
and
iret
loop
jle
in
sbb
jp
xchg
and
imul
subb
mov
jbe
int3
loop
addr16
imul
fildll
addb
push
and
xchg
fmul
lock
pop
arpl
or
iret
mov
mov
sub
lea
test
xor
push
pop
mov
xchg
lcall
push
iret
subb
or
jge
aaa
in
popa
into
mov
iret
aas
push
in
jl
rcr
pop
cmpsl
sub
push
sahf
and
icebp
dec
sti
es
pusha
stos
clc
mov
cli
cmp
jge
pushf
stc
or
or
xchg
push
out
push
scas
sub
fwait
mov
pop
cmp
shrb
jo
pop
insb
pop
jp
inc
mov
test
dec
cmp
fcmove
push
ja
in
orb
jmp
call
jb
inc
jnp
xor
jmp
sahf
repnz
xchg
cwtl
out
ljmp
fs
mov
xchg
add
mov
jne
mov
lret
jg
lret
out
mov
jle
inc
mov
mov
stos
mov
lahf
das
jle
insb
push
push
orl
mov
imul
xor
sbb
push
mov
xchg
push
aaa
sub
lea
rcll
repnz
mov
scas
imul
push
sahf
inc
bound
jge
das
or
sbb
cmp
add
gs
jl
pop
faddl
cmp
cs
loopne
cmp
pop
repnz
mov
pop
fsubrl
add
pop
sbb
mov
xchg
pop
ljmp
pop
cmp
fdiv
cwtl
adc
sub
daa
add
cmp
cmpsl
ss
mov
dec
push
add
xlat
mov
movsb
dec
scas
jnp
add
cwtl
mov
xchg
pop
into
fnsave
pop
inc
mov
jne
adc
xchg
dec
and
jbe
nop
jae
xchg
popa
lahf
call
jg
iret
mov
jnp
shl
mov
fwait
jne
es
loope
clc
jbe
je
adc
shlb
inc
notl
lcall
mov
pop
gs
adc
add
mov
cmp
sub
sbb
inc
xor
ljmp
xor
cmc
sbb
adc
aad
sbb
cmp
pop
push
lret
lret
call
jae
push
or
addl
xor
and
sbb
push
cmpsl
push
and
in
xor
outsb
loopne
cmp
imul
lret
je
shrl
jle
fcomi
adc
fwait
je
push
cmp
sub
mov
mov
scas
mov
cwtl
movsl
cwtl
pop
mov
cmp
jne
ljmp
cmpsl
cmp
fcomip
lret
jge
cmp
rorb
dec
nop
mov
orl
cmp
pusha
out
shlb
mov
add
lods
push
sahf
mov
jecxz
rolb
inc
dec
es
je
dec
pop
push
fidivl
pop
adc
popa
scas
xor
in
addr16
adc
push
pop
cmp
popf
mov
adc
adc
xor
movsb
dec
adc
pushf
bound
je
jbe
daa
sub
lods
mov
push
outsl
and
gs
das
mov
lret
mov
pop
sub
cmpsb
pusha
jnp
mov
aam
jecxz
leave
es
cmp
ret
sbb
aad
lock
sbb
jnp
xor
aas
in
xchg
jbe
lahf
jno
jmp
or
imul
mov
dec
fildl
adc
push
mov
add
jg
xor
cmp
or
xchg
aad
test
mov
scas
xor
and
enter
jge
xor
mov
stos
push
inc
jb
cmpsl
mov
int3
shr
inc
jo
pop
lret
pop
jns
cmpsb
out
mov
inc
data16
and
je
adc
jnp
loope
leave
jmp
sti
rol
sbb
or
mov
sti
xchg
inc
sbb
stos
adc
inc
pop
xlat
mov
leave
shr
outsl
aaa
mov
out
adc
mov
jg
inc
sbb
and
arpl
cmpsb
je
flds
popa
and
mov
addl
push
fwait
mov
enter
xor
icebp
leave
inc
mov
mov
cmp
sub
mov
fdivl
add
jno
bound
into
xor
inc
inc
aas
fadds
dec
test
fwait
out
sbb
mov
vmovntdq
inc
subb
add
sahf
jnp
push
ja
outsl
js
inc
or
clc
push
jo
dec
jecxz
in
adc
or
adc
pusha
negl
sub
push
mov
jecxz
pushf
popa
testl
xor
jno
sahf
ret
insl
in
jo
imul
dec
mov
sub
push
jl
or
shrl
cltd
rclb
test
movsl
adc
xchg
js
orl
lea
sub
fxch
int3
or
repnz
enter
cmp
enter
lock
mov
mov
jle
cmpsb
fwait
stos
mov
lahf
pop
mov
pop
push
jl
dec
faddl
xchg
pop
rorl
cli
pop
jp
cmc
idiv
enter
xor
jg
pop
repnz
push
ljmp
push
rclb
fadd
push
test
dec
xchg
jl
push
scas
push
addl
adc
push
shr
sub
xor
pop
sbb
mov
es
or
mov
into
sbb
sub
or
xor
inc
and
call
in
xor
sbb
add
xchg
mov
inc
xchg
mov
sahf
stc
pop
xor
clc
rol
or
into
or
push
pop
scas
andb
mov
cmp
inc
and
pop
jnp
pusha
xor
mov
aad
add
adc
sbb
push
sbb
push
xlat
cmpsb
gs
mov
test
lahf
push
mov
fiaddl
sbb
repnz
pop
and
mov
popa
lahf
sbb
jb
push
scas
test
loope
push
loop
or
xchg
cmp
test
pop
mov
jo
push
mov
clc
jmp
sub
jmp
mov
or
ja
cmp
cli
xchg
out
fdivs
cltd
std
adc
popf
pop
cltd
xor
jb
jl
push
pop
int
sbb
dec
fst
ds
xorl
popa
movl
xchg
dec
std
mov
sbb
cltd
sahf
inc
xor
adc
push
shl
mov
ret
int3
add
inc
enter
cmp
xchg
push
test
movsb
fimuls
addr16
mov
mov
es
mov
ret
add
inc
and
int
sub
cmp
cs
sbb
sub
mov
les
loope
outsb
clc
out
mov
inc
lds
inc
lahf
cmpsl
movl
in
pop
scas
fdivrs
rcl
in
stc
test
dec
mov
pop
ljmp
inc
adc
sbb
adc
into
adc
test
ret
push
rol
sbb
invd
pop
push
mov
dec
or
out
mov
and
ja
add
pop
jb
repnz
cmpl
sahf
xchg
shlb
mov
pop
jg
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
test
jl
out
mov
sti
loopne
outsb
mov
cmpl
xor
push
stos
test
popa
mov
in
pop
cltd
stos
out
mov
movsb
pop
out
scas
subb
pop
aam
stc
mov
lret
aas
xchg
out
pop
loop
xchg
pop
pop
mov
jg
xorl
rcll
mov
rcl
xor
xchg
dec
push
int
imul
jecxz
or
cmp
push
mov
imul
mov
sbb
cmpsb
repnz
push
jge
scas
cmp
cmp
pusha
push
stos
dec
stos
mov
jne
mov
data16
adc
add
repnz
in
jns
pop
das
sub
xor
in
std
mov
dec
punpckhdq
mov
xlat
pop
push
pushf
aad
call
rcrl
mov
int
movsb
or
jns
push
lret
mov
dec
jno
push
mov
xchg
outsb
mov
xor
outsb
fidivrl
and
aam
push
inc
loopne
xor
rclb
xor
test
sbb
inc
lret
sub
insb
repnz
xlat
test
cld
mov
mov
aas
or
pop
sub
mov
jle
add
test
jae
shrb
sub
jecxz
popa
or
jno
jg
dec
inc
push
cmpsl
fcoml
test
xor
aam
mull
sbb
mov
iret
or
fiadds
in
fcmovu
mov
push
mov
out
pushf
insb
fstpt
jae
xor
xor
movsl
scas
push
test
data16
daa
add
fs
or
dec
fimuls
in
ljmp
mov
mov
ret
xor
add
jl
cmpsb
loope
pop
mov
insl
push
xor
xchg
sar
daa
test
mov
xchg
jge
cmc
dec
and
in
and
out
movsl
aas
add
sbb
fdivs
std
sahf
in
iret
mov
inc
pop
int
insb
push
nop
jb
or
loope
shll
pushf
loop
mov
jbe
lods
pusha
xor
push
mov
mov
out
and
mov
adc
ret
pop
or
add
daa
daa
int
insl
push
sub
outsl
jno
xchg
adc
jnp
nop
rcll
in
js
sbb
lods
pop
in
xlat
mov
mov
fs
sbb
mov
jns
and
imul
add
inc
ja
jbe
into
adc
shll
enter
imulb
loop
jl
xchg
mov
ret
ret
insl
aam
ret
mov
xorb
jno
and
sbb
cmpsl
push
jbe
orb
and
iret
jbe
fidivl
inc
jp
dec
gs
jb
popa
cmp
in
int
dec
xorl
xchg
ss
lret
in
dec
xchg
jecxz
add
call
repz
mov
dec
subb
xor
repnz
rorb
ret
mov
rclb
in
mov
push
or
movsl
aam
mov
xchg
fdivl
sahf
jo
add
add
enter
sub
and
jge
adc
pop
cmpsl
jbe
or
push
out
mov
gs
or
pop
pop
ja
out
dec
into
rclb
sti
imul
lret
mov
idivb
pop
push
jecxz
rorl
jne
stos
push
sub
sti
imul
lods
testb
aaa
pop
xchg
sahf
pushf
mov
sbb
dec
iret
xor
sbb
add
pop
xchg
adc
test
repz
or
push
daa
jecxz
sub
dec
xchg
inc
mov
pop
mov
pusha
add
stc
cmpl
lea
adc
call
dec
and
lods
jmp
icebp
cmp
sbb
push
mov
add
imul
fprem
add
sarb
pop
rorl
fisubl
adc
push
dec
inc
push
jge
out
fsubrs
and
shlb
addr16
push
jne
insb
cmp
push
gs
adc
dec
xor
cld
pop
jp
addr16
popf
mov
mov
push
mov
popl
xor
push
mov
sub
inc
lock
pop
stos
rclb
aad
movsb
dec
push
std
insl
jmp
or
repnz
loop
iret
mov
clc
sbb
imul
lock
jecxz
mov
adc
imul
roll
data16
bound
jmp
xchg
mov
stos
dec
rcl
push
sbbb
divb
cltd
rorl
lret
fs
mov
mov
push
imul
mov
sub
stos
xor
xchg
out
aaa
in
pop
mov
inc
cmpsb
jae
inc
dec
dec
mov
lods
cltd
stos
inc
mov
push
add
cmp
sub
ds
adc
jae
xchg
inc
adc
aad
adc
cmpl
adc
fcom
xchg
inc
add
scas
imul
out
sahf
fcomp
or
xchg
outsl
jg
cmp
scas
lods
pop
jmp
dec
sti
and
arpl
daa
call
ss
lcall
lea
sbb
mov
adc
inc
repnz
adc
cmc
arpl
mov
shr
xlat
inc
xor
aas
adc
add
ss
lock
dec
aas
out
fisttps
sub
mov
jmp
rolb
xor
push
or
loopne
add
mov
xlat
outsb
cmp
mov
jp
mov
dec
mov
ja
dec
and
pop
cmpsb
jge
test
mov
jmp
orb
mov
ja
jb
stos
test
mov
sub
adcb
jg
dec
jmp
lods
fldl
orb
sub
sub
sahf
scas
push
sub
jnp
dec
mov
dec
xchg
pop
mov
adcb
push
or
or
jnp
stos
jb
inc
inc
lds
cmp
push
mov
imul
sbbl
pusha
push
jns
jo
addr16
test
mov
dec
xchg
hlt
mov
rcrl
push
andb
fsubp
inc
or
sub
sbb
inc
bound
ret
call
dec
or
iret
aad
add
mov
pop
loope
loop
mov
in
aaa
lock
inc
xorb
mov
inc
sbb
mov
in
push
fwait
leave
orb
insb
mov
sbb
sub
lods
add
les
std
cmp
dec
movsl
mov
mull
imul
fwait
cmc
mov
jmp
notb
sbb
call
mov
sub
mov
or
mov
mov
shlb
cmpsb
bound
jae
dec
cmpsl
or
mov
jno,pt
sarb
inc
rcll
and
out
mov
lods
sbb
imul
xchg
xchg
cmc
fnstenv
or
sbb
out
xor
popa
jmp
sbb
les
pop
bound
imul
pop
xchg
icebp
fisubrl
std
addr16
sar
push
dec
inc
jmp
jecxz
cmc
addr16
test
test
cli
lods
jmp
cld
je
repnz
sahf
shrb
lds
ret
lds
mov
addr16
and
dec
jae
sbb
dec
xchg
out
es
rclb
xchg
inc
adc
popa
mov
dec
out
rcrl
arpl
pop
sti
cwtl
xchg
into
or
adc
xchg
insl
push
pusha
ljmp
mov
xor
xor
sbb
cmc
xchg
sbb
stc
sbb
add
jb
cltd
stos
addr16
xchg
das
push
pusha
divl
xor
test
sub
inc
mov
movsb
add
cs
pop
lds
xchg
push
nop
push
test
mov
aas
int3
cmp
pop
test
push
fdivrl
jno
push
xchg
and
xchg
cmp
in
cmp
js
cld
call
inc
popf
movntq
ret
dec
loope
lods
jmp
iret
pop
das
movsl
lret
cltd
add
or
dec
in
mov
mov
xchg
sub
test
pushf
out
ljmp
and
mov
xchg
lods
icebp
shll
sub
into
and
gs
mov
xchg
sub
jno
stc
xchg
pop
pop
jp
or
mov
mov
iret
icebp
jo
flds
sub
aam
lcall
jmp
cmp
loopne
adc
jne
xchg
or
jb
stos
fs
ss
pop
sbb
aaa
sbb
mov
add
sub
stos
pop
dec
pop
rcll
sbbl
push
add
or
cmp
mov
sub
fmulp
dec
iret
mov
adc
adc
repz
pushf
inc
stos
adc
lahf
or
push
xchg
add
jle
aas
and
fwait
stc
dec
jmp
inc
lcall
cmp
or
inc
pusha
sbbl
mov
jp
inc
dec
cmp
call
cmc
je
cmpsl
pop
xor
inc
xchg
das
mov
inc
or
ds
and
repz
xor
ror
clc
cs
jp
cwtl
out
stos
lea
test
roll
fstpl
jne
and
mov
push
mov
cmp
in
lock
mov
outsb
cmp
mov
je
call
imul
jg
cmpb
sub
test
mov
sbb
cs
insb
jo
mov
enter
jno
cs
xlat
cmp
int3
inc
shrl
sub
cmc
cmp
or
ret
dec
loope
sti
pop
mov
inc
mov
cmc
xchg
fcoml
jp
insb
movsb
movsl
nop
cmpxchg
push
roll
sbb
dec
lock
jno
mov
repz
adc
ds
js
and
pop
xchg
test
insb
jnp
cmpsb
addr16
int3
aam
sub
xor
pushf
shrl
mov
imulb
shl
dec
xchg
cwtl
push
hlt
movsl
fists
clc
cmpsl
push
cmp
in
std
enter
cmpsl
aas
or
hlt
lret
mov
scas
mov
ret
into
lea
xor
adc
push
mov
sbb
bound
lahf
pop
or
aas
js
sbb
push
loope
xor
insl
xor
xchg
fwait
mov
add
lahf
pop
mov
out
jecxz
pop
gs
mov
xor
lds
ret
jg
stc
add
adc
sbb
lret
xor
mov
xchg
pop
sub
jle
adc
mov
sub
jns
enter
out
xchg
enter
shlb
mov
out
or
orb
popa
pop
add
sbb
addb
pop
jo
dec
loop
sbb
pop
pop
loopne
jo
xchg
fs
pop
xor
les
sbb
in
imul
fildl
inc
or
or
sbb
push
out
aad
or
add
push
sub
movsl
dec
sub
sbb
xor
stos
cwtl
aas
aas
dec
orl
icebp
inc
fidivrl
adc
dec
outsb
sub
pop
ss
lcall
pop
cld
mov
inc
or
nop
push
fcmovne
imull
outsl
iret
clc
subb
pop
xchg
dec
call
sbb
mov
cmp
pop
xchg
dec
outsl
inc
push
xchg
push
jae
insl
cli
fisubrl
hlt
ret
push
mov
pop
mov
dec
jae
sub
insb
repz
mov
inc
das
enter
fsubrp
inc
pop
push
sbb
nop
mov
outsb
ja
inc
mov
das
fimull
mov
sub
xor
push
enter
jno
jnp
pop
shll
lods
lock
pop
mov
cmp
jmp
mov
sbb
filds
mov
aad
andb
mov
out
daa
jno
dec
or
jmp
push
in
test
xchg
shll
in
pop
xor
mov
sbb
shlb
mov
iret
push
shl
clc
cmpsb
pop
icebp
fwait
das
clc
dec
fwait
rcr
mov
xchg
rcrl
adc
sbb
or
lret
adc
push
nop
sbb
popa
or
insb
jmp
dec
pop
mov
adcb
mov
das
test
lcall
push
add
insl
ljmp
ljmp
scas
sbb
shlb
aad
stos
xchg
dec
jns
sub
fidivs
fisttpl
adc
push
lods
jmp
out
push
pushf
sbb
lock
and
icebp
loop
fadds
lahf
hlt
push
mov
push
push
jmp
xchg
aad
and
mov
lock
sbb
out
mov
jecxz
push
mov
mov
clc
jo
lods
call
xor
loopne
sub
push
push
in
outsl
jp
ss
and
pop
sub
gs
and
xchg
pop
fstpt
xor
cs
mov
push
pop
or
test
dec
int3
mov
jle
mov
xchg
jg
loop
ds
int3
scas
sbb
inc
push
push
call
addr16
mov
gs
gs
push
repz
mov
xor
inc
mov
sahf
xor
add
aaa
xor
mov
sub
popa
mov
negb
lock
mov
stos
adc
jp
cltd
pop
pop
push
scas
ror
jb
pop
pop
add
fsubl
mov
clc
mov
rol
lret
pop
arpl
cmp
mov
push
push
fnstsw
jle
fwait
movsb
cltd
mov
lods
pop
push
mov
cli
and
inc
adc
xor
gs
mov
push
or
jnp
ss
and
mov
popf
fisttps
or
arpl
fisubl
jecxz
daa
adc
jp
jb
in
fisttpl
imul
lds
sub
sub
cld
data16
and
icebp
sbb
cmp
mov
cmp
outsl
inc
ja
rcll
add
pop
bound
sub
inc
sub
arpl
mov
mulb
sub
adc
xor
cmpsl
push
adc
adc
and
out
add
xchg
push
inc
xlat
pop
push
add
mov
jo
mov
sar
pushf
test
dec
loopne
push
jne
pop
lods
nop
push
sub
rcrb
pop
sti
adc
cmp
fistpll
push
addr16
lret
mov
cs
insl
lods
ja
dec
not
stc
dec
dec
mov
fs
mov
lret
das
or
jns
and
rclb
clc
dec
inc
cs
jp
lahf
dec
lcall
cmpl
xchg
orl
mov
sbbl
adc
scas
leave
inc
test
inc
inc
or
xchg
cmpb
popf
cltd
sbb
xor
xchg
mov
jg
fucom
jle
lods
cmp
jecxz
rolb
rclb
cmp
icebp
mov
inc
adc
and
adc
aaa
in
add
jne
stos
sarb
jp
popf
aaa
scas
out
add
xchg
les
shll
push
cld
jnp
loopne
pop
inc
mov
cld
cmc
out
fisubrl
lods
adc
sti
lret
cmp
ljmp
jbe
int
pop
adc
sbb
add
xlat
and
or
lret
inc
daa
bound
shrl
incb
jp
jb
sbb
arpl
mov
mov
outsl
jnp
pop
imul
sbb
call
fstpl
fldl
xor
dec
out
es
adc
js
cld
sbb
and
out
xor
arpl
mov
bnd
sub
jle
xchg
and
sbb
and
xlat
idiv
aas
xchg
shll
out
sbb
outsl
nop
mov
cwtl
jecxz
add
add
xlat
cwtl
fiadds
rcr
sarb
mov
fdiv
push
lods
cmp
push
rsqrtps
dec
negl
sbb
ret
das
xchg
push
push
jmp
fcom
and
mov
mov
or
jmp
push
shrl
testb
fisttps
enter
int3
enter
or
or
and
pop
dec
or
lcall
mov
arpl
cmp
cmpsb
mov
out
orb
dec
xchg
scas
lret
add
mov
dec
roll
jl
cmp
push
lock
push
mov
out
mov
pop
aas
jns
repz
jo
add
and
out
mov
mov
cs
fs
out
nop
dec
test
xor
lock
xchg
into
xor
cmp
lahf
xor
ja
dec
jbe
mov
adc
push
je
pop
mov
jo
ret
pop
jno
cs
add
les
jne
push
lcall
movsb
push
movsl
in
rcrb
push
sub
scas
lea
stos
add
bound
jecxz
into
push
jmp
mov
es
pusha
out
nop
and
adc
stos
mov
test
imul
test
cmp
fists
icebp
scas
adc
sbb
xlat
sti
and
shrb
or
adc
mov
or
std
jp
loopne
cltd
out
test
outsl
jnp
std
sbb
loop
xchg
sub
mov
fucom
and
scas
stos
pop
out
sbb
lods
mov
xor
popf
inc
fidivrs
mov
dec
dec
lcall
bound
jle
and
mov
mov
push
mov
loopne
mov
outsl
mov
lds
repz
fwait
ja
jbe
push
mov
add
ljmp
cmp
mov
fistl
mov
xorb
jmp
push
ficompl
out
cmp
stc
movsb
push
pushf
pop
lret
mov
jnp
mov
push
enter
stos
in
mov
mov
jns
call
sbb
ror
push
dec
ret
xor
pop
pop
fwait
cmpsb
dec
mulb
popf
ljmp
mov
pop
cmp
fwait
sbb
test
test
push
in
xorb
rcrl
icebp
cmp
int
cmc
sahf
jge
pop
push
lods
imul
rorb
insl
pop
pop
and
jg
movb
adc
xchg
loopne
gs
fidivl
mov
ja
cmpsl
xor
cld
sarb
push
add
lock
inc
sub
xchg
jmp
outsw
jge
push
sbb
dec
add
add
dec
test
fcomps
and
mov
movsb
jae
cmp
mov
test
add
lret
or
imul
cltd
inc
loop
jp
xchg
je
jge
lock
and
push
mov
add
xchg
pop
addr16
and
jae,pn
subb
push
repnz
sbb
sbb
pushf
data16
pop
fcomps
aas
iret
pop
push
add
inc
movsl
inc
sub
roll
push
sub
xchg
adc
mov
imul
xor
jns
mull
imul
jbe
andl
loope
lcall
xor
xchg
jge
pop
inc
jno
inc
dec
adc
pop
jg
or
sti
adcl
or
cld
test
out
pop
nop
add
arpl
push
pushf
sub
scas
xchg
call
sahf
in
shll
add
mov
inc
cli
mov
push
push
lcall
bound
insb
mov
daa
ja
and
mov
inc
inc
das
mov
mov
jno
loope
orb
js
scas
popa
pusha
mov
or
aad
xlat
fwait
pop
mov
out
xchg
scas
or
mov
mov
rolb
in
xorb
xchg
test
ss
pop
and
arpl
shr
addr16
adc
xchg
xor
lret
mov
fimuls
loop
fldcw
mov
rcrw
mov
sbbl
into
mov
adc
push
cmc
add
sub
adc
test
or
dec
ret
push
cmp
cmp
and
xchg
xchg
sbb
jecxz
int
jecxz
pushf
pop
loop
movsb
insb
jg
mul
sub
inc
mov
sub
cmpsl
push
bound
fisttpll
lods
jle
adc
call
aaa
aad
ljmp
push
pop
pusha
xchg
in
jo
pop
pop
sbb
rolb
lret
mov
fs
mov
lods
add
outsb
rolb
idivb
sbb
and
inc
out
add
rcrb
sbb
push
add
inc
lods
sahf
pop
mov
pusha
test
js
in
aas
rclb
lods
int
xchg
jnp
pop
addl
xor
inc
lret
mov
ret
cs
pop
sbb
lret
adc
jbe
out
loopne
in
rorb
stos
push
xor
mov
int3
loope
jb
pop
dec
mov
push
pop
les
push
inc
mov
aad
mov
ss
push
jns
add
ficompl
jle
sbb
inc
dec
pop
xor
cmc
test
push
sbb
iret
add
gs
dec
mov
jne
iret
xor
fs
orb
outsl
jg
cwtl
int3
mov
pop
fiadds
outsb
mov
ret
mov
pop
xlat
test
add
mov
out
pop
nop
pop
mov
mov
ds
xchg
cmp
mov
jb
insb
outsb
repz
ss
pop
mov
xchg
scas
lods
aad
rcll
ret
mov
js
int
pop
nop
push
movsb
mov
xor
mov
push
jmp
sbb
pushf
cmpsb
fs
pusha
es
sbb
stos
aad
sbb
dec
push
outsl
cwtl
scas
push
mov
imul
inc
sbb
adc
fbstp
mov
xlat
pop
mov
dec
add
push
adc
out
push
jecxz
mov
std
fcoml
jecxz
dec
jo
in
stc
call
cmp
mov
in
pop
push
iret
push
push
test
mov
stos
mov
rorl
outsb
or
ja
frstor
mov
mov
lcall
imul
pop
iret
jmp
jnp
dec
int3
mov
repz
stos
jle
jbe
roll
popa
outsl
shll
stos
cwtl
adc
mov
popf
dec
lock
mov
dec
xchg
int3
xchg
add
shl
add
das
mov
movsl
jne
fistpll
scas
les
mov
jg
adc
shrl
add
test
adc
movsl
adc
daa
in
stos
cmovle
cwtl
sub
mov
popf
sub
push
pop
push
mov
ja
stc
sub
roll
cltd
fdivp
cmpsl
adc
scas
push
sbbb
insl
hlt
add
sub
imul
jmp
loopne
fcomip
pop
decl
daa
xor
movsb
lods
sbb
xor
and
or
notl
mov
jmp
sbb
fbld
mov
sarb
add
ror
pop
mov
inc
pushf
jnp
add
and
ds
push
out
sbb
cmp
fisubl
jmp
nop
and
fadds
pop
test
push
push
mov
add
insb
xchg
lock
sbb
push
xchg
ss
repz
xchg
inc
xchg
stos
mov
lret
es
mov
jb
popf
xchg
stc
stc
loope
cmp
cltd
ss
or
idiv
fnstcw
pop
xor
pop
repz
sub
orb
lock
fbld
jbe
and
push
adc
lret
rorl
data16
adcb
std
mov
movsb
or
cmp
mov
out
jle
mov
and
or
fisttps
rorl
je
pusha
inc
push
xchg
mov
sub
push
sbb
xchg
cmp
jno
push
mov
sbb
add
int3
int3
add
out
jmp
sti
sub
sub
mov
xchg
mov
lock
xor
jmp
pop
and
loope
pop
dec
xchg
scas
add
sub
jl
pusha
jecxz
sahf
movhlps
aas
xchg
lods
out
pop
push
xor
and
mov
cld
pusha
cmp
out
dec
out
aam
pusha
mov
xchg
enter
pop
jmp
mov
xor
lock
adc
ret
add
push
push
push
sahf
jg
mov
iret
lea
add
insb
mov
test
fiadds
mov
pop
mov
mov
mov
add
jg
inc
loope
in
xor
sbb
fcoms
out
jae
mov
aad
sti
and
int
bsf
leave
faddl
and
cmp
or
mov
push
repnz
xchg
lea
push
popl
inc
imul
lock
xor
dec
push
mov
hlt
aad
aaa
inc
jae
shrb
outsb
mov
cmpsb
lcall
imulb
fimull
sti
fisubrs
jge
add
bound
or
outsb
sbb
or
leave
test
cs
daa
inc
int
lret
data16
xor
iret
pop
in
andps
jo
aaa
xchg
pop
jno
cltd
mov
sbb
xor
mov
pop
cwtl
jg
push
push
add
mov
repnz
push
jno
dec
sbb
xor
repnz
lret
std
sub
in
mov
ret
and
in
sub
dec
out
jmp
sbb
popl
nop
xchg
call
stos
mov
adc
add
lds
mov
pushf
fwait
imul
jno
mov
dec
daa
jnp
mov
pop
pop
xor
shrb
mov
stos
icebp
xor
cli
popa
cmp
or
pop
jecxz
mov
lahf
mov
repnz
es
sub
jmp
mov
adc
sub
aaa
cltd
or
jmp
dec
inc
cs
std
ret
mov
pop
movsl
cmp
ret
fidivrs
mov
mov
mov
in
movsb
xor
daa
push
cmp
ret
jae
bound
or
jmp
stc
and
js
or
push
popa
cmp
xchg
mov
inc
mov
std
lret
cmp
mov
hlt
xor
das
xchg
xlat
out
xchg
add
cmp
xchg
or
sbb
inc
mov
or
es
imul
sub
or
jne
push
les
test
orl
xchg
fmuls
xchg
xchg
mov
loopne
mov
push
jb
loopne
inc
adc
shlb
stos
lds
mov
xor
int
mov
inc
dec
jmp
popf
daa
rep
aas
dec
dec
js
pop
or
push
push
test
mov
daa
push
jle
mov
push
fwait
je
or
xorl
mulb
push
repnz
pushf
mov
cltd
inc
jns
and
jl
aas
lret
push
loop
js
cld
and
aad
cs
mov
arpl
ds
into
scas
cld
push
jne
jg
or
inc
add
push
lea
orb
xlat
mov
cld
out
movsb
sub
push
popa
clc
out
movsb
loopne
lods
shlb
daa
jle
cld
cmp
dec
mov
pushf
movsb
stc
xor
cmp
out
ja
test
xor
jae
inc
sub
mov
jnp
rclb
sub
jmp
jmp
pushf
lea
pushf
cmpsl
xchg
dec
test
shr
shl
popf
stos
mov
out
sbb
shll
push
inc
xchg
mov
iret
pop
push
sub
in
or
mov
mov
lods
pop
mov
mov
leave
push
push
inc
and
sbb
fbstp
fildl
scas
add
or
fdivrl
and
andb
iret
bound
xchg
arpl
int3
in
inc
or
pop
daa
jecxz
stos
mov
mov
dec
insl
repz
mov
add
nop
and
clc
push
mov
cmp
mov
xor
inc
repz
ret
and
imul
sub
daa
testb
mov
inc
in
sub
mov
out
imul
addr16
pop
push
mov
push
pop
movsb
mov
stos
jne
pop
out
mov
aaa
push
pop
iret
fimull
outsb
fdivp
and
or
jb
sub
in
sub
sbb
cmp
fldl
mov
out
dec
mov
cmp
xchg
cmp
jbe
hlt
sbb
repz
adc
jb
test
aaa
addr16
arpl
jae
test
in
sti
test
mov
fildll
and
cmp
xchg
mov
mov
pop
test
push
popa
iret
shrb
out
std
shll
push
jo
jge
lock
inc
mov
xchg
sbb
je
fsubp
subb
mov
fstl
add
or
jle
shrb
xchg
lds
add
loop
in
push
lcall
cmp
addl
add
scas
outsb
pop
rol
in
inc
call
pop
out
dec
xor
das
iret
je
sahf
jae
xor
xchg
clc
loope
sub
jno
xchg
ret
xor
ss
xchg
cmpsb
je
mov
aad
push
xor
push
addb
sub
mov
sbb
mov
xor
add
stc
mov
shl
inc
es
cltd
je
andl
sub
lock
in
repz
dec
adc
xchg
mov
mov
inc
lret
rcrl
xor
aam
and
test
xor
pop
jg
push
sahf
daa
dec
iret
mov
rolb
jg
jmp
xchg
or
xchg
pop
add
lcall
jns
imul
cmp
icebp
xchg
ja
mov
inc
fimull
inc
inc
jmp
jnp
dec
sbb
adc
mov
lahf
and
pushf
push
dec
imul
push
daa
sbb
test
pop
ret
fldcw
mov
iret
jmp
pop
dec
shrl
mov
out
inc
outsb
cmp
mov
popa
icebp
sbb
mov
lahf
pop
test
test
sub
cmp
in
lods
gs
mov
mov
hlt
add
test
pop
stc
mov
test
jmp
lret
pop
jp
out
push
cmp
shrb
sub
jecxz
mov
ret
mov
mov
fxtract
ret
jle
mov
arpl
push
popa
push
pop
mov
test
push
mov
jb
xor
les
stc
sbb
ret
pop
sbb
fnstsw
insb
add
out
les
cmp
adc
adc
and
repnz
dec
jbe
mov
dec
or
inc
pop
arpl
jecxz
or
jmp
stos
xchg
std
dec
aas
xor
cmp
pop
sbbl
lods
dec
mov
dec
pop
movsb
push
mov
jle
clc
int
sub
fwait
inc
cmp
shl
or
insb
leave
gs
in
push
pop
push
jge
lcall
xchg
repnz
stos
mov
sbb
or
call
lahf
or
sbb
dec
mov
aam
push
cmpsb
in
imul
popf
mov
dec
test
dec
or
cwtl
clc
fs
pop
and
add
or
in
sub
fstpt
pop
addl
sub
loop
xlat
mov
xchg
subb
and
imul
outsb
fwait
jmp
scas
mov
stc
mov
stos
pop
ss
fisubs
lds
and
mov
pop
mov
pop
push
mov
nop
data16
lods
orb
pop
adc
pop
mov
fwait
add
sbb
mov
and
push
or
xchg
pop
and
inc
sub
adc
and
imul
cmp
dec
jmp
xacquire
pop
cli
push
jno
push
std
in
shrl
cmovbe
jg
mov
call
xchg
lds
mov
mov
clc
dec
mov
cmp
mov
stos
add
push
jnp
add
les
loopne
popa
cltd
or
test
aad
jne
adc
lea
movsb
xchg
inc
inc
pop
imul
xchg
jae
lret
push
imul
or
add
sub
cmpsb
and
mov
push
rcrl
sub
not
jp
pop
sbb
mov
xor
imul
cmp
pop
subw
arpl
pop
aad
adc
ret
dec
sub
jle
lcall
jne
cmp
push
out
lret
pop
je
pop
and
pop
and
ljmp
add
mov
loope
mov
mov
orl
lock
jp,pn
ret
xor
andb
int
xor
ret
shll
jne
ds
daa
cli
sbb
jp
jae
in
divl
mov
jns
jmp
pop
cld
scas
dec
fistl
dec
xlat
jle
lods
adc
insb
xor
mov
push
ja
stos
mov
push
je
push
cmc
sbb
push
mov
fldl
jmp
dec
inc
push
test
jb
sbb
jl
dec
ljmp
andb
dec
daa
lock
imul
insl
jg
jmp
jmp
mov
dec
leave
xor
fs
cmp
sub
mov
icebp
outsl
xchg
add
repnz
loop
fcoml
and
adc
in
test
frstor
add
popf
inc
repnz
add
mov
add
mov
mov
js
pop
adc
insb
clc
in
sahf
xchg
jl
incb
mov
mov
push
cmp
adc
mov
pop
sbb
data16
mov
add
and
cmp
test
aas
cmpsb
mov
adc
je
rolb
leave
insb
fdivrs
push
xorb
les
les
cli
cmp
inc
mov
mov
sub
lret
hlt
xchg
inc
icebp
sub
lcall
mov
clc
addr16
scas
sbb
cmc
in
sub
jl
cmp
jno
imul
lea
jle
push
jle
das
fisubs
lahf
xor
pop
add
in
lock
rcll
lea
dec
ret
shlb
pop
fbstp
and
inc
repz
inc
add
lcall
or
sbb
jmp
mov
cli
cmc
dec
mov
push
sub
push
jg
sti
adc
push
xchg
lock
mov
insb
mov
pusha
sbb
jb
in
jae
cmp
cli
xchg
outsb
mov
fmul
sub
cmp
xor
sbb
rclb
adc
or
arpl
les
test
jge
outsb
mov
ljmp
mov
jge
pop
xor
pop
sti
testl
lret
icebp
fildll
ret
xchg
sahf
mov
mov
xchg
mov
sub
das
aam
push
pop
or
enter
mov
or
test
dec
ret
add
inc
sub
cmp
and
sbb
mov
sub
xor
mov
fcmovnb
daa
sbb
xor
dec
mov
mov
mov
lret
push
repz
jle
mov
adc
pop
out
in
jo
sub
push
loopne
add
ret
test
cmc
mov
adc
or
imul
push
scas
fists
adc
push
int
in
orb
cli
or
xor
sbbl
fiadds
and
adc
out
inc
pop
inc
xchg
ljmp
xor
adc
mov
shll
push
jle
mov
fadd
daa
idivb
pop
xchg
inc
dec
inc
xchg
out
test
dec
jno
mov
or
imul
insb
pop
sbb
push
and
gs
hlt
pusha
mov
into
jecxz
add
push
test
fcomp
je
dec
pop
lock
lods
cmp
outsb
mov
add
lahf
daa
rcr
test
jg
int3
test
push
in
adc
and
rolb
jns
mov
sti
or
int
fstl
pusha
shll
xchg
sub
inc
mov
je
int3
in
mov
dec
inc
add
mov
xchg
cmp
xchg
mov
dec
scas
repz
fiadds
fsubrp
addr16
sqrtps
mov
ss
jmp
ja
fbstp
sub
inc
scas
sbb
adc
and
push
ret
xor
lret
jb
cmp
xor
push
sub
pop
sbb
push
das
sahf
frstor
xor
mov
fwait
popa
xchg
fdivrp
fldl
js
cs
fldcw
js
and
sti
adc
jbe
data16
pushf
rcrl
mov
jns
test
data16
ss
push
add
jg
outsb
push
xchg
aas
fstl
ss
inc
leave
push
push
stc
imull
inc
push
mov
push
sbb
xchg
cli
in
loope
sbb
std
pop
pop
mov
and
popa
repz
add
pusha
test
jbe
lock
pusha
xchg
sbb
and
push
cmpb
cmpsl
test
inc
adc
inc
adc
mov
repnz
inc
mov
mov
cs
in
add
xchg
push
push
arpl
cmpsb
cwtl
lcall
sub
mov
cli
sub
lock
outsl
jecxz
popa
mov
cld
int
or
cli
xchg
je
out
popa
cmc
sub
pop
sbbb
inc
add
or
mov
scas
mov
pop
cmp
pushf
lock
int3
or
pop
stos
andb
mov
test
idiv
inc
loop
cltd
nop
sbb
notb
lret
repnz
cmp
adc
icebp
lea
mov
hlt
pcmpeqd
or
shrb
pop
lds
sar
cmp
push
lds
mov
inc
mov
insb
ficompl
rcl
inc
xorb
and
lea
push
cmp
pop
inc
or
and
in
repz
add
xchg
in
fsubrs
icebp
test
ds
xor
in
or
inc
repz
add
in
mov
pushf
pushl
sub
sub
nop
movsb
or
inc
lea
jp
dec
xor
inc
cmp
push
xor
dec
fmuls
cs
into
fs
jo
sub
mov
ja
orl
and
rolb
shl
cmpsb
pusha
jnp
in
shll
jl
lcall
addr16
out
rorb
scas
pusha
and
out
orl
sub
clc
push
out
adc
ret
arpl
jmp
outsl
ja
pop
test
cltd
pop
xchg
loop
mov
mov
out
jle
push
push
sbb
rcl
loop
push
jle
dec
cmpsl
shl
sbb
bound
push
pop
shll
loop
and
pop
daa
pusha
shl
into
or
out
out
inc
lcall
inc
sahf
xchg
daa
movsb
xlat
test
sbb
shlb
push
aad
test
dec
sub
xorb
std
adc
pop
sbb
mov
and
popl
inc
je
shl
popa
jo
gs
sbb
dec
je
imull
mov
cs
mov
sbb
cmpsl
rclb
cmpb
push
push
fisttpll
adc
ss
sbb
into
and
pop
ffree
pop
fadds
jo
lret
fprem1
pop
sahf
fildll
aad
std
aam
jno
sbb
cmp
push
adc
leave
inc
adc
loopne
icebp
push
sti
or
lahf
mov
pop
adc
mov
jmp
mov
add
in
cmp
jo
dec
and
jbe
jae
push
das
and
and
xchg
xlat
cmp
arpl
sbb
lods
and
mov
es
insl
imul
fcomps
ficoml
sub
xor
mov
pushl
frstor
aas
ffreep
jno
xchg
pop
int
aas
add
adc
mov
xor
out
repz
subl
cli
ljmp
push
mov
jle
add
xchg
pop
ret
mov
aaa
mov
push
sbb
xchg
jmp
scas
inc
popf
push
data16
xchg
adc
sub
fdivrl
sub
pop
xor
push
in
adcl
sub
xchg
mov
ret
xor
int
mov
fbstp
xchg
in
inc
sbb
pxor
pop
jmp
cld
cmp
cld
mov
push
std
push
jp
mov
pop
sbb
add
inc
mov
add
jbe
jmp
inc
out
inc
adc
pop
lahf
sbb
pop
sahf
ja
test
jle
ja
mov
je,pn
dec
mov
popf
mov
scas
push
fnsave
aaa
adc
mov
jmp
xchg
sbb
repz
jmp
outsb
adc
and
or
leave
mov
loope
stos
sbb
adc
ret
adc
icebp
cmp
mov
mov
mov
push
lds
sbb
mov
in
pusha
xchg
jno
mov
or
stos
jecxz
fldenv
push
cmp
and
cmp
lret
loope
testl
in
mov
ret
xchg
std
mov
cwtl
mov
lcall
and
ss
popa
les
cmpsl
loope
cmpsl
loopne
cmp
dec
fsubrs
in
pop
add
xchg
arpl
or
fsts
lret
mov
xchg
fs
cmc
int
adc
decl
jmp
out
insl
sub
inc
rcr
dec
insb
sbb
sub
sub
xor
push
aaa
sbb
inc
test
vsubpd
mov
mov
into
mov
push
xchg
adc
loope
push
pop
out
mov
xchg
lret
lods
add
sbb
in
cmp
or
xor
fistl
es
test
filds
pop
mov
scas
pop
mov
ljmp
lods
and
ss
outsl
insb
push
jo
push
popf
jno
scas
inc
es
inc
sbb
repz
sbb
inc
aaa
push
xchg
mov
mov
mov
cs
pop
adc
fnstcw
out
mov
mov
inc
xor
xchg
xchg
jb
dec
push
lods
clc
xlat
jle
xor
push
push
and
push
dec
push
je
xchg
inc
addr16
stc
ja
add
ret
movsl
shrb
mov
dec
and
js
fs
sti
in
mov
xchg
or
push
dec
and
mov
test
testl
int
inc
mov
inc
aaa
loop
mov
push
jp
in
xchg
aad
mov
sbb
xchg
pop
xchg
test
fs
test
inc
xlat
lcall
add
sub
scas
orb
cmc
daa
sub
pop
jmp
jle
clc
outsb
subb
xchg
jle
stos
add
fstpl
cmp
sub
aaa
rcrl
jnp
mov
es
aad
pop
and
dec
mov
andb
insb
popa
movsb
jle
mov
outsl
fisubl
mov
sbb
mov
pop
fsts
aaa
jl
xor
ficoms
mov
cmp
int
mov
mov
xchg
sbb
xor
jnp
leave
aam
stos
cmp
mov
enter
dec
mov
fsub
sti
sub
mov
add
jb
stos
push
xchg
cmp
and
daa
mov
gs
sub
mov
bsf
sbb
fwait
aas
adc
ret
xchg
pop
inc
mov
scas
jb
cli
lret
jl
inc
sbb
cmp
mov
mov
push
test
jmp
data16
lcall
sbb
leave
repz
adc
sbb
jle
jbe
lock
push
enter
test
cld
adc
xchg
pop
shl
sub
xchg
mov
xchg
out
dec
stc
mov
fdivrl
out
push
popf
dec
cld
inc
pop
jns
inc
dec
mov
push
repz
mov
or
sub
sub
mov
test
inc
cmp
jp
out
xor
mov
ficompl
lea
jae
aas
test
pop
pop
outsl
xor
hlt
fiadds
jbe
and
or
inc
jbe
xor
dec
les
fstps
fisubs
pop
sti
cld
xor
add
sbb
pop
movsb
pop
ds
gs
fwait
xchg
pop
cli
mov
mov
ds
movsl
jb
leavew
fldl
es
cltd
push
push
adc
mov
dec
shrb
clc
dec
mov
cmc
mov
in
mull
or
cmp
push
lahf
out
add
mov
hlt
loop
adc
sub
jmp
fsubs
cmp
das
or
pushf
lcall
fiaddl
lahf
mov
mov
and
cmc
cmp
adc
fildll
pop
pop
jl
fnstsw
push
mov
xor
outsl
scas
add
enter
xchg
sbb
xor
pop
xor
xor
movsl
xchg
cmp
or
pusha
in
enter
movlps
loop
std
inc
push
loopne
or
in
mov
jl
int3
jg
in
scas
mov
lret
or
and
movsb
and
adc
fs
jp
inc
inc
inc
out
cmp
xchg
push
fisubrl
cmc
or
pop
in
stc
out
xchg
pop
int3
ret
push
adc
mov
js
xchg
xchg
adc
push
in
inc
or
or
clc
dec
mov
das
or
xchg
dec
or
sub
repnz
repnz
sub
jbe
jnp
imul
push
mov
icebp
push
jge
jecxz
sbb
jo
jmp
ja
xlat
stos
or
xchg
jns
lret
popf
pop
outsb
movsb
mov
divb
idivl
or
aad
push
data16
jb
mov
xor
mov
faddl
inc
adc
lods
jg
jge
jne
enter
mov
imull
inc
add
out
cmc
adc
loopne
adc
icebp
fisubrs
rol
je
mov
sbb
or
pop
mov
sub
jns
movsb
push
mov
xor
adc
movsb
lret
mov
cmp
or
push
inc
sbb
fst
jae
cmp
cs
shrb
das
leave
leave
notb
movsb
ja
out
mov
repnz
or
movsl
add
decb
xchg
pop
pop
or
cltd
bound
mov
xor
ja
or
andb
enter
sbb
pushf
stos
add
cmp
dec
scas
pop
pop
jge
scas
int
jmp
fcompl
mov
or
and
mov
xor
pop
iret
es
lret
pusha
sbb
mov
fldcw
pop
jo
xor
andb
pusha
inc
mov
ret
rcrl
xchg
or
lock
or
bound
sub
hlt
mov
cmp
xor
dec
lret
push
add
out
das
sar
sbb
adc
negb
cmc
push
xchg
cmp
mov
pop
mov
je
pop
sbb
fs
movsb
adc
mov
mov
xchg
inc
fdivr
rorb
xor
and
movsb
sbb
mov
xor
sub
mov
insl
dec
in
xchg
adc
out
adc
pop
sub
xchg
icebp
and
setnp
mov
imul
mov
popf
fidivrl
lods
cmpb
test
lods
rcrl
push
insl
cmp
sahf
adc
xchg
fwait
dec
push
adc
adc
cmp
jl
jp
mov
mov
sbb
popl
or
jp
ds
lods
frndint
lcall
mov
adc
xor
lea
xchg
lret
mov
sti
lahf
popa
andb
loope
mov
dec
mov
cmpsb
stos
push
mov
add
push
xchg
sbb
mov
adc
mov
pop
or
add
mov
mov
call
std
sub
xchg
mov
and
das
adc
call
fiaddl
and
into
fisubrl
xchg
les
push
popa
mull
xorl
or
xchg
cmpsl
lods
push
ljmp
lcall
insb
std
icebp
pop
or
push
pushf
lret
xchg
sub
inc
cmpsb
push
inc
jno
mov
ds
jle
setno
daa
sbb
mov
cmove
xchg
adc
jecxz
int3
jne
and
cli
xor
cmp
xlat
pop
inc
jne
aas
push
lods
jbe
push
adc
sub
notl
rcl
movsb
sub
enter
xchg
movsb
xchg
ret
or
call
lods
les
mov
pop
insb
es
sarl
lods
push
in
xchg
inc
jecxz
adc
and
or
int3
xchg
out
pushf
roll
lret
sti
mov
or
loope
rcrl
imul
jno
js
and
sbb
add
inc
fucomi
xchg
add
pop
sbb
adc
push
das
jne
mov
sbb
and
fnstsw
loopne
xor
cmp
js
sti
addr16
stc
adc
pop
flds
add
repz
popa
pusha
sar
jl
ficoms
sub
jns
test
test
jecxz
and
inc
push
mov
jp
cwtl
subb
inc
jno
sbb
imul
sub
sub
jo
rcll
mov
pop
and
das
jl
jmp
xor
scas
popa
inc
cwtl
adc
xor
insl
popf
sar
shl
in
mov
push
les
adc
push
push
fnsave
fbstp
and
fistpll
jg
mov
lcall
sub
dec
add
or
aam
nop
mov
sbb
fdivrs
out
add
pop
pop
jl
sahf
test
mov
add
dec
or
mov
push
inc
test
rorl
ss
xchg
repnz
push
aam
sbb
insb
popf
pop
dec
clc
lods
loopne
mov
test
loope
dec
adc
fwait
xchg
ja
cmp
scas
pop
cmp
inc
mov
in
inc
mov
push
push
push
push
call
cmc
xchg
fcmovnb
dec
daa
jae
push
aaa
testl
aad
inc
and
lock
inc
adc
shll
pmulhw
aad
or
push
shlb
mov
cmpsl
pusha
stc
mov
mov
jnp
bound
xlat
int
xchg
xor
in
push
insb
mov
icebp
adc
add
jbe
fiadds
int3
hlt
inc
mov
cltd
fxch
push
jb
popa
cmpsb
jmp
xor
arpl
adc
pop
aas
jp
adc
popa
xor
push
mov
inc
or
cmp
push
sbb
xchg
std
sbb
scas
fstp
xchg
mov
mov
fidivs
mov
and
jno
and
and
mov
das
enter
std
roll
incl
xor
repz
pop
jl
repz
fisttpl
mov
adc
test
cmp
cli
xchg
or
mov
mov
faddl
inc
xor
sub
mov
stos
adc
jae
jbe
jmp
mov
mov
negl
jp
and
leave
cmp
fwait
nop
mov
jb
lahf
aas
ret
out
lahf
mov
or
pop
push
push
sub
push
adc
dec
pop
repnz
xchg
jns
fxch
cmp
loope
mov
addb
pop
fprem1
stos
cwtl
or
inc
shr
in
push
mov
data16
pop
mov
movsl
subl
adc
insl
divb
pop
mov
jbe
into
stc
loopne
test
dec
mov
pop
push
mov
in
arpl
mov
sar
enter
stos
fmull
clc
mov
and
cmc
fwait
ja
fistps
and
scas
xor
dec
sbb
inc
mov
mov
mov
xchg
push
or
or
movsl
mov
cwtl
cltd
add
clc
lret
test
mov
and
in
fisttpll
push
mov
pop
xchg
mov
in
popf
mov
lods
mov
mov
xchg
xchg
add
cmpsl
flds
xchg
cmp
xor
or
and
test
dec
in
movsb
fnstsw
sub
add
jl
jg
int
pop
repz
rorl
scas
stos
dec
push
loopne
mov
pop
pusha
mov
les
push
pop
fdivrs
pop
insl
xor
mov
jge
ljmp
ds
in
repz
lods
mov
pop
fidivs
mov
xor
loopne
mov
popa
scas
mov
mov
das
push
lods
scas
sbb
cld
or
push
dec
outsb
decb
or
sbbl
jp
mov
cltd
dec
and
test
cmpsb
lret
lcall
fdiv
aas
push
enter
popa
fdivp
or
mov
notb
mov
and
cltd
mov
mov
rorl
insb
ds
je
inc
and
push
xor
pop
adc
les
imul
sbb
jp
int3
xor
pusha
xchg
shrl
inc
push
dec
les
push
sub
add
adc
or
mov
push
add
rcll
lret
cwtl
sarb
mov
movsb
mov
mov
mov
dec
cld
call
pop
xorb
xchg
lret
xor
es
xchg
std
adc
mov
dec
int3
jp
pop
mov
mov
push
les
addb
push
jns
test
xlat
test
mov
cld
stos
dec
lock
xor
cmc
fsts
loop
pop
mov
jg
test
cmp
fwait
in
lea
jl
cmpsl
nop
or
or
or
pop
movb
xor
dec
out
mov
lcall
adc
and
sarb
dec
out
scas
pop
cltd
mov
aam
in
test
cmpsb
imulb
sti
sub
rdmsr
or
in
lahf
aas
jbe
mov
pusha
stc
int
mov
gs
xchg
inc
leave
addl
push
push
sbb
mov
adc
mov
push
rorb
ds
cmp
adc
movb
aad
repnz
xchg
mov
adc
inc
mov
mov
call
mov
cmp
mov
jo
inc
outsl
lods
fimuls
test
pushf
push
idiv
push
nop
aaa
in
scas
arpl
test
add
xor
and
mov
add
mov
mov
add
jno
test
add
lret
lds
mov
xor
movsb
jecxz
cld
lds
test
fldt
sbb
and
aad
push
hlt
fs
fnstenv
cs
inc
inc
cmpsl
push
pop
jnp
jo
icebp
fistps
lret
ds
push
pop
fmuls
pop
movsb
mov
leave
cmp
mov
xor
cmpsb
ljmp
lods
and
sbb
hlt
cmp
pop
icebp
jb
stos
push
lahf
pop
xor
faddp
jle
jmp
or
outsb
sarl
not
lret
repnz
dec
rol
xchg
outsb
js
mov
ret
pop
dec
clc
dec
lahf
insb
aam
add
or
jle
xor
and
mov
inc
enter
movsl
sub
cmp
sub
mov
cmp
shrl
jnp
aaa
imull
sbb
add
lcall
dec
cmpsl
cmp
push
hlt
insb
lds
ret
sbb
movsb
scas
clc
xchg
jno
pusha
or
pop
out
daa
lahf
in
clc
pop
adc
pop
ss
daa
or
mov
or
in
lea
sub
mov
in
sbbl
push
fidivrs
stos
and
gs
test
arpl
clc
jmp
sahf
movsl
in
dec
adc
cmpsl
add
push
lods
ja
lods
shlb
js
das
insl
into
add
lcall
adc
jnp
int3
les
rcrb
frstor
add
mov
inc
call
mov
jnp,pn
and
and
inc
cmpsb
mov
test
mov
int
mov
adc
arpl
push
fs
pop
mov
xchg
daa
int3
dec
mov
addr16
sub
pop
das
rcr
out
movsl
pop
loopne
mov
sub
stos
outsl
mov
or
lret
aad
in
mov
push
stos
xchg
cmp
test
sub
loopne
fsincos
sarl
sbbb
cmp
lret
pop
out
push
aaa
sahf
enter
inc
pop
mov
and
int
outsl
shlb
scas
xchg
nop
inc
orb
mov
das
mov
xor
cmp
mov
out
fdivl
sub
push
mov
xlat
and
xchg
xchg
andl
dec
sub
nop
dec
push
cmp
fs
xorl
jnp
scas
inc
jg
cmp
jns
xchg
xchg
test
xchg
cli
and
fldenv
lock
mov
push
cld
jmp
or
mov
loop
cmp
icebp
outsb
test
dec
mov
cmp
xor
test
loop
xchg
testb
mov
fwait
sbb
adc
xchg
ficompl
stos
xor
pop
and
jp
cmp
or
inc
xor
ljmp
nop
in
adc
and
mov
dec
adcl
ficomps
in
cmovb
mov
sbb
push
mov
fcompl
xlat
jns
mov
sbb
out
cld
test
xchg
aad
aaa
mov
inc
mov
pop
test
mov
les
xlat
das
mov
ja
outsb
jns
repz
push
iret
inc
cmp
pop
cmpsl
insl
inc
add
out
std
push
jecxz
shlb
pop
inc
in
pop
jg
push
lcall
xchg
and
jle
shrl
pop
and
pop
imul
xor
aad
cmp
in
inc
neg
addb
mov
push
hlt
fsubrs
xchg
lods
push
jecxz
arpl
iret
int
push
mov
ss
pop
jp
add
data16
jbe
cs
in
out
jg
scas
sbb
push
aad
mov
inc
jnp
stos
jle
dec
cs
cmp
push
mov
in
mov
stc
adc
scas
dec
sbb
dec
test
push
lret
mov
lods
leave
es
fiaddl
out
sbb
call
out
dec
push
nop
inc
out
gs
mov
or
out
mov
loope
aam
xchg
xor
mov
ret
pop
addr16
dec
aad
mov
inc
add
ljmp
xlat
addb
pop
or
dec
lds
sbb
and
shlb
cmp
or
and
popf
add
or
rol
dec
test
or
push
mov
pop
mov
jno
repnz
ss
mov
dec
inc
shlb
std
jp
xor
and
daa
mov
jns
jne
test
mov
cmp
jmp
jmp
adc
mov
push
add
mov
inc
xor
adcb
push
mov
xor
xchg
jnp
int
xchg
cmc
lahf
dec
inc
out
clc
xchg
mov
push
adc
addb
vpand
pop
and
push
and
cld
and
ja
ljmp
push
call
and
inc
icebp
mov
inc
and
mov
decl
out
xchg
push
sbb
xor
push
or
inc
mov
arpl
xor
push
bound
push
fidivrl
mov
xchg
insl
jne
xchg
shll
sub
pushf
inc
pop
adc
push
sub
aas
arpl
loope
add
sub
ret
jg
or
inc
mov
iret
jle
jae
jo
push
out
call
imulb
sbb
es
icebp
xchg
stc
out
lds
int3
dec
mov
dec
mov
repz
inc
inc
lea
pop
loope
or
scas
push
pusha
das
out
xor
insb
sub
lahf
xor
sub
jmp
or
sahf
int
and
pop
pop
xchg
push
inc
lret
inc
pushf
fcmovnbe
icebp
outsb
out
fsubl
arpl
sub
in
fisttps
fildl
mov
push
mov
xchg
cltd
add
leave
xchg
mov
test
out
daa
out
jbe
mov
xor
xchg
mov
insl
add
or
addr16
in
outsb
pop
xor
shlb
add
iret
jle
sarb
xor
test
jle
push
repz
out
ja
lahf
lretw
das
ror
filds
inc
xor
mov
jecxz
adc
xchg
mov
loopne
adc
jle
mov
enter
insb
jb
cmp
mov
vpsrlw
cmp
lahf
adc
int3
and
fsubs
andb
xchg
jne
push
mov
or
jle
adc
xchg
push
pop
cld
inc
aad
int
daa
into
movsb
loopne
fisubrs
test
sub
fcomi
test
test
fistpl
aad
cmp
scas
ret
add
ljmp
pushf
in
mov
fs
rol
xchg
cmp
shll
push
adc
xchg
ss
nop
and
out
repnz
mov
add
mov
inc
mov
push
stc
incl
fstpl
ret
or
filds
stos
dec
sub
arpl
test
xor
into
lock
test
rcrl
mov
push
mov
cmp
out
inc
js
pusha
jle
daa
cmpsl
add
pop
movsb
std
arpl
lock
sub
pop
insb
enter
mov
dec
push
insb
sbb
or
push
stos
insl
jne
je
mov
cmc
push
xchg
or
into
jge
add
mov
mov
xchg
fcompl
in
push
adc
or
nop
xchg
mov
imul
xchg
mov
bound
sbb
mov
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
fistpll
lcall
fs
mov
stos
imul
sbb
add
shll
pop
lods
aaa
push
test
xchg
xchg
and
test
xor
or
mov
cmp
mov
fidivrs
cmp
cmp
cmp
aaa
adc
lods
lea
es
lea
add
hlt
out
xor
fsubl
out
xor
imul
daa
jo
jle
and
rcrb
sti
leave
sbb
mov
out
cmp
shl
enter
dec
in
inc
mov
xchg
enter
cmpsl
out
adc
sbb
sub
pop
push
mov
cs
repz
rclb
adc
pushf
mov
xor
mov
xchg
into
mov
fistl
mov
xor
mov
mov
lahf
push
enter
pop
sar
pop
add
sub
lahf
xchg
int
adc
pop
fidivrs
pop
std
jmp
mov
xchg
jnp
push
xchg
xor
out
dec
push
mov
jb
jb
nop
popf
insb
fwait
into
pushf
ficomps
dec
xchg
push
test
je
dec
cmp
shlb
ret
mov
ds
mov
ljmp
lret
lea
mov
adc
sub
sub
pop
popf
pop
mov
push
or
testl
xchg
pop
cmp
fsqrt
adc
push
jns
dec
repz
lock
cmp
xchg
fistps
ret
scas
cli
push
cwtl
cmp
mov
inc
rorl
in
rcrl
ret
jns
gs
mov
adc
sbb
aam
inc
sbb
push
in
stos
rclb
movsl
cwtl
dec
push
loope
mov
cmp
leave
cli
mov
lea
in
xchg
call
mov
xor
ljmp
dec
jle
out
es
test
xchg
test
pop
xor
adc
rol
div
inc
iret
add
add
in
inc
int3
inc
add
mov
pop
sahf
arpl
js
sub
add
and
jecxz
and
adc
ret
push
cmc
inc
or
adc
call
stc
call
inc
stos
fwait
test
add
jns
mov
cli
cmp
lds
push
addb
pop
dec
push
lea
push
or
aas
lret
pop
dec
jbe
lea
nop
cmp
push
push
jo
imul
pop
sub
aam
lds
lret
imul
add
xchg
mov
add
dec
add
xchg
cld
push
sbb
add
ret
jle
sbbb
lcall
out
shl
sub
sub
imul
adc
cmp
das
mov
loop
adc
movsb
imul
xchg
jge
ror
mov
stos
or
mov
mov
cmp
sbb
lods
cwtl
fdivrs
mov
pop
pop
imul
dec
push
mov
mov
adc
mov
sbb
lahf
leave
push
fwait
clc
mov
int
testb
aam
movb
jl
aam
shlb
lods
adc
pop
gs
outsl
data16
div
adc
divl
in
nop
jle,pn
mov
cmp
loope
call
out
mov
rcrl
push
movsb
cmp
inc
leave
int3
leave
xchg
rcrb
aad
mov
pop
adc
imul
pop
sub
and
fisubrs
sbb
cmc
jge
icebp
cmpsb
inc
movsl
mov
mov
xor
adc
or
add
std
movsb
lret
dec
ret
lcall
lods
pop
xor
es
and
sti
push
cli
imul
dec
inc
js
imul
fs
mov
and
adc
mov
aad
out
cwtl
adc
loope
dec
lahf
ret
out
cltd
dec
ret
clc
loopne
push
in
in
lods
and
ss
ret
sahf
sub
mov
add
mov
dec
lcall
es
inc
adc
seta
add
mov
cltd
sub
and
push
jl
in
int3
cwtl
rcll
jae
jge
cmp
lds
jecxz
out
and
cmp
or
sbb
in
ljmp
sbb
jecxz
stc
mov
mov
dec
mov
rcr
inc
push
jae
mov
push
aam
push
les
xor
jo
dec
cld
rorb
pushf
mov
jbe
xchg
dec
push
sbbl
push
fs
call
cltd
xchg
mov
in
stos
repnz
fisubrs
inc
fdivs
aam
lods
sub
dec
mov
sbb
sub
lret
sub
les
sub
aad
mov
push
mov
popl
xlat
out
cli
data16
pop
pop
sbb
push
icebp
push
vunpckhps
lods
out
cs
dec
testl
out
sbb
fsts
dec
mov
cmp
stos
fdivrp
xchg
xchg
outsl
test
xchg
sbb
cmp
cmpsb
inc
fdiv
or
add
insb
fimuls
dec
or
fistpll
or
inc
dec
fdivrl
jno
rorl
jns
rdtsc
popf
xchg
push
add
movntq
enter
cmp
xor
add
inc
xchg
sbb
push
mov
popf
and
jmp
or
jecxz
bound
lret
rolb
fisubrl
pop
sbb
xor
and
add
clc
imul
sub
neg
jmp
rcll
xor
leave
ljmp
adc
sub
shrl
mov
sbb
pop
dec
jb
xchg
add
inc
or
gs
push
outsb
pop
mov
mov
mov
xchg
mov
inc
mov
cld
lods
sub
inc
pop
filds
pop
dec
add
mov
mov
add
popf
aaa
mov
dec
mov
push
insb
aad
les
repnz
testl
xchg
dec
xor
fcom
mov
xchg
adc
inc
frstor
cmovl
inc
lods
push
fiadds
std
lea
lds
push
pop
add
xchg
outsb
bound
test
pushf
and
mov
ret
mov
dec
and
mov
push
insl
push
sti
int3
and
ret
mov
jecxz
icebp
jp
data16
add
sub
mulb
jl
add
subb
dec
cmp
loopne
jle
js
test
xor
cmp
mov
push
mov
ja
jg
daa
ja
js
fs
xor
pop
sahf
push
out
pop
out
pop
jg
push
xchg
mov
fimuls
lds
adc
mov
stos
js
xchg
rorb
xchg
inc
xchg
jp
mov
xchg
mov
or
dec
mov
and
mov
bound
in
test
xchg
enter
aas
test
es
adc
pushf
je
xlat
jmp
jmp
mov
jge
mov
leavew
xchg
add
popa
sbb
sub
cmpb
jae
mov
stos
xchg
in
sbb
les
xor
sbb
mov
pop
push
mov
dec
sti
push
addr16
or
mov
mov
or
inc
xchg
sbb
fsub
mov
sub
push
dec
mov
ss
sbb
icebp
in
or
jp
mov
and
in
stc
int
dec
inc
mov
jecxz
clc
jp
mov
inc
add
test
add
pop
or
cmp
cmp
and
mov
fs
pushf
mov
jno
pusha
int3
sub
xor
jnp
adc
data16
push
sbb
rcrb
inc
in
scas
cmc
xor
addl
pop
out
and
fiaddl
repnz
lcall
mov
sahf
or
sub
jno
scas
clc
and
xor
leave
inc
jb
cs
sub
add
dec
push
test
test
mov
pop
addr16
rcl
push
mov
dec
aad
inc
jmp
jo
lods
es
cmc
lahf
adc
jg
cld
imul
in
add
push
cli
movsl
jno
in
or
popf
enter
pop
rorb
xorb
sub
popf
cmpsb
shlb
xor
fsubr
int
dec
jae
das
cmp
mov
or
mov
xchg
pop
push
sbb
dec
in
fimull
lods
pop
mov
cmp
jp
sbb
call
push
inc
xor
jns
sbb
outsl
loop
cmp
out
out
fwait
idivb
call
adc
ret
sub
and
es
sbb
and
push
adcl
out
pop
scas
cmp
xor
mov
pop
pop
fistpll
xchg
or
stos
cmpsb
pop
bound
jmp
std
bound
sub
aaa
pop
inc
adc
jno
loopne
nop
loopne
and
mov
cmp
dec
sbb
andl
xchg
jo
and
sub
fs
push
jno
xor
movsb
popf
inc
xchg
inc
std
push
rorb
imul
or
jcxz
push
lcall
aas
into
cmpsb
lcall
cmp
roll
and
add
and
fwait
jbe
cmovb
dec
xchg
mov
addr16
jno
pop
subb
data16
popa
mov
pmulhw
sti
out
xor
repnz
and
sbb
scas
sub
jo
js
fidivrl
imul
lcall
pop
push
add
repz
dec
scas
mov
add
and
jbe
in
lea
lahf
aaa
das
enter
cmp
pop
pusha
dec
push
movsl
jmp
sbb
xchg
dec
movsl
cmc
fcoms
in
ss
call
xchg
jecxz
and
xchg
ds
stos
mov
sbb
out
sahf
and
outsb
movsb
cmp
aas
out
leave
ss
mov
mov
je
shl
jb
mov
shl
push
cmp
push
rcr
sbb
jo
call
movb
cmp
xor
sbb
js
pop
push
lret
pop
pop
sub
popf
aam
mov
ja
cmpsb
dec
push
inc
cli
mov
shrl
scas
dec
sbb
frstor
push
xchg
pop
subl
ss
xlat
mov
cmp
or
mov
mov
decb
mov
mov
enter
xchg
jae
push
leave
or
inc
inc
xor
adc
sub
mov
fnstcw
push
out
xchg
imul
push
outsb
imul
aad
sti
fdivrs
ds
in
pop
pop
std
scas
add
test
and
subb
adc
or
pop
xor
jae
cmpsl
rolb
xor
mov
and
js
add
sub
lsl
xchg
pop
add
xor
lods
cmpsl
ss
out
push
out
xchg
jb
mov
xor
mov
loope
out
or
xchg
repnz
test
ret
xor
mov
mul
mov
pop
jnp
js
fucom
mull
jb
push
repz
xchg
pop
loop
jne
xor
push
movsl
push
out
dec
aaa
push
pop
ja
loopne
cmp
mov
pop
aas
xchg
fsubs
cwtl
aas
mov
mov
pop
xor
dec
pop
push
scas
test
cwtl
xchg
scas
outsb
mov
cmp
rorb
arpl
fwait
xor
inc
and
out
aaa
sbb
lods
mov
mov
xor
push
rcrl
adc
ljmp
cli
and
pop
jg
xor
inc
dec
adc
push
lahf
imul
fwait
loop
lahf
push
fnsave
jecxz
mov
out
daa
out
hlt
add
mov
nop
or
pusha
call
mov
sbb
lea
adc
mov
jbe
lock
jge
xchg
iret
fnstenv
fs
imul
inc
stos
outsb
mov
adcb
mov
in
fadds
lret
dec
mov
jbe
push
mov
loop
cld
shl
xor
out
mov
xor
rclb
call
sbb
outsl
inc
jmp
dec
bound
pusha
sub
xor
or
scas
mov
daa
filds
pop
dec
stos
scas
xor
inc
lahf
enter
ljmp
cs
add
fadds
flds
lods
clc
flds
mov
push
lods
adc
ja
xlat
out
loope
jmp
pop
popa
add
xchg
xor
sbb
or
clc
xlat
cmp
loop
pop
rcrb
sub
fbstp
adc
xchg
ss
ret
aaa
and
fwait
outsl
or
sub
sbb
pmaxub
mov
and
pop
xchg
add
sti
ja
sbb
mulb
lcall
dec
fiadds
cmp
pop
icebp
aad
rcll
iret
sbb
jg
js
push
sbb
das
fdivrp
int
jmp
scas
subl
aad
dec
aaa
in
test
ljmp
je
out
cld
xchg
add
mov
leave
push
and
xor
pop
loope
push
leave
repz
adc
jo
fdiv
hlt
insb
pop
imul
shl
inc
mov
xchg
rolb
data16
sub
or
or
popl
and
test
push
orb
push
jp
xor
or
and
xor
dec
cmpsl
mov
xchg
mov
mov
out
mov
mov
push
ret
clc
mov
xor
mov
jne
repz
in
or
jmp
sbb
fsubl
in
sub
sarl
pop
inc
test
scas
sub
mov
fiaddl
lcall
gs
mov
mov
insl
pop
enter
add
adc
pop
sub
xorb
jmp
imul
repnz
add
sbb
jp
pusha
aaa
dec
add
mov
sbbl
ljmp
push
or
xchg
xchg
pop
pop
mov
pushf
pop
imul
fisubl
inc
jne
dec
inc
xor
das
jle
mov
in
shrl
dec
cmp
fimull
jge
fs
mov
adc
loopne
xor
xlat
push
data16
cmc
jmp
cs
cwtl
cmpsb
sbb
mov
loope
shl
sbb
hlt
pop
mov
push
fcoms
divl
rclb
lret
jo
xchg
push
push
mov
sti
xchg
pop
jno
adc
incb
mov
outsl
imul
add
sahf
imul
inc
fwait
xchg
xlat
xchg
mov
and
push
mov
push
data16
inc
scas
mov
int3
cmp
cmp
dec
xor
out
mov
popa
inc
mov
lret
or
ds
jbe
ljmp
sub
mov
scas
jno
sti
xchg
ret
xchg
jp
icebp
jecxz
inc
xchg
or
int3
imul
mov
cs
iret
outsl
imul
mov
hlt
pushl
loopne
fmul
testl
fbstp
push
mov
in
cmp
fildll
in
xchg
and
out
enter
and
push
cmp
mov
mov
sbbb
test
popa
popa
mov
aaa
mov
sti
xor
inc
leave
xchg
sub
adc
sub
mov
int3
add
push
pusha
rclb
js
sbb
out
lret
mov
movl
lock
inc
insb
fs
addb
ljmp
dec
dec
push
push
test
pop
loope
mov
movsb
pop
arpl
test
lds
add
mov
nop
inc
and
xor
cmpsb
mov
pop
and
testl
mov
add
pop
stc
mov
pop
incl
adc
fimull
mov
cmp
dec
pop
cmp
fsubr
cmp
loopne
xorb
lret
sbb
or
push
daa
rcll
inc
cmp
fistps
xor
repnz
fld
lds
push
psubq
imul
rcll
mov
pop
sbb
xchg
idivb
push
cmp
cmp
adc
pop
scas
jecxz
dec
rclb
cmp
subb
out
jl
ja
iret
cmp
xchg
inc
lcall
xchg
daa
push
fsubrs
es
sub
add
iret
sub
imul
jp
cmpsl
jp
mov
adc
pop
pop
or
sub
daa
inc
mov
mov
stos
push
xchg
arpl
sti
adc
xchg
pop
frstor
sbb
cwtl
push
adc
mov
pop
stos
sub
push
jns
aas
outsl
imul
sub
mov
icebp
xchg
cmp
pop
add
in
iret
sbb
push
out
fisubrs
sub
std
pop
pop
cli
cmp
bound
mov
sub
data16
xor
popa
jb
dec
adcl
and
and
mov
xchg
mov
push
les
pop
sbb
jne
flds
xchg
or
int
cmp
iret
adc
es
nop
push
fists
movsb
je
das
push
cmpsl
call
cmpsl
jno
cmpsl
repnz
jae
and
add
fistpl
ss
inc
and
mov
xor
pop
cmp
popa
lcall
out
mov
movsb
add
cld
popf
sub
test
cmpsl
push
cmc
push
addl
xor
lret
pop
inc
nop
cmp
pop
into
addl
mov
pushf
call
jmp
in
test
lcall
outsl
mov
cmp
gs
fcmovb
outsb
sbb
aam
lret
in
cmp
jle
pusha
cmp
hlt
jbe
push
sub
jbe
lret
addl
lods
mov
hlt
sub
xor
popa
loopne
mov
adc
repnz
xchg
mull
sub
rorb
pushf
cmp
cmpsb
shrb
mov
or
lret
ja
data16
cs
lea
or
and
dec
aas
jo
dec
je
int3
or
ds
fstpl
imul
fstpt
inc
rorb
rclb
cmpsl
mov
xorb
xor
cmpsl
test
mov
scas
inc
mov
jmp
xor
lahf
and
jecxz
js
add
adc
xchg
lods
xor
lahf
or
xchg
push
sub
mov
xchg
inc
sti
stos
cmp
das
push
sbb
jne
inc
mov
pusha
nop
int
roll
mov
pop
repz
iret
std
test
iret
pop
xchg
jmp
dec
call
lods
or
mov
xorb
mov
sbb
adc
mov
ja
cmp
pop
xchg
or
pop
inc
xor
ss
test
jp
jmp
std
and
jl
add
or
push
pop
push
icebp
icebp
punpckldq
mov
mov
aaa
jl
stos
mov
fstp
hlt
push
or
sub
pop
andb
push
imul
clc
mov
aaa
clc
hlt
faddl
xlat
mov
jg
sahf
cmp
imul
cwtl
lock
pop
test
bound
jle
in
jb
stos
and
cmpsb
into
fcomp
andb
icebp
mov
sbb
cmpsl
arpl
outsb
inc
jb
jmp
mov
and
sti
lcall
pushf
xor
jo
mov
mov
jns
sbb
mov
in
es
mov
and
mov
xchg
cmpl
outsb
pop
repz
imul
dec
inc
sbb
or
cmpsb
or
xor
fdiv
adc
xorl
sub
push
scas
pop
out
sbb
stos
add
pop
adc
pop
insl
cltd
fiaddl
jno
outsb
push
jnp
xchg
pop
mov
popl
pop
test
lret
jae
cltd
stos
mov
hlt
movsl
inc
test
push
repnz
leave
fldl
or
mov
and
jae
test
das
nop
xchg
mov
push
mov
mov
adcl
shlb
mov
mov
lock
inc
cmp
cli
lcall
dec
mov
cltd
rcrb
jg
or
and
mov
fdivrl
jns
xor
mov
cmc
clc
out
aas
or
clc
jle
or
sub
mov
jecxz
inc
hlt
dec
dec
mov
mov
or
repnz
cmc
sbb
mov
loope
xor
cwtl
mov
mov
jno
xchg
dec
sub
iret
cs
push
fdivrl
dec
aas
ds
or
xlat
cmpl
jo
sub
rolb
addw
rorb
and
inc
out
je
sbb
sub
cmp
or
mov
ja
xchg
aaa
mov
jmp
add
cmc
mov
inc
popf
adc
pop
pop
mov
out
jne
sahf
or
lret
shlb
inc
mov
or
stc
notl
sub
aam
jno
es
jb
dec
add
push
or
push
dec
arpl
stos
imull
push
data16
push
or
mov
pop
add
adc
add
jns
pop
dec
test
fldt
pushf
into
mov
dec
adcl
dec
and
pushf
xchg
push
mov
pop
jle
test
mov
adc
xor
or
nop
sbb
jo
mov
jnp
psllq
xchg
mov
or
lcall
xor
cli
out
jnp
sub
mov
xor
imul
jmp
ret
in
mov
push
mov
loop
cwtl
pop
out
xchg
sbb
mov
xchg
loop
mov
loope
mov
push
js
pop
push
and
and
int
jns
mov
cmpsl
cmpsl
push
in
andl
dec
sbb
mov
xchg
iret
xor
xor
or
test
push
imul
jle
or
dec
enter
cwtl
dec
dec
pop
out
jecxz
cmp
mov
icebp
inc
sub
cmpsl
pop
lret
xchg
sbb
and
pop
movsl
fisubs
mov
hlt
adc
arpl
adc
daa
sub
fmuls
iret
jne
repz
dec
sahf
cwtl
in
decl
pop
imul
out
clc
fwait
imul
outsb
dec
xor
cmc
xchg
scas
xchg
pop
cmp
movsl
pop
cli
jns
lock
sub
test
dec
outsb
repz
test
mov
sbb
push
dec
add
aam
xorl
xlat
mov
outsl
js
and
add
stos
cli
xor
or
arpl
mov
mov
jl,pn
fwait
jmp
stos
aas
cmovno
lock
xchg
enter
in
xchg
xchg
xchg
jg
fmul
stc
pop
leave
out
xchg
mov
dec
das
jnp
push
or
stos
sbb
add
les
xorl
fstpt
jo
ret
mov
push
adc
mov
fildll
fucomi
sbb
sub
cs
xchg
stos
dec
xor
into
sub
sbb
pushf
pop
xor
and
out
daa
pop
sti
data16
adc
sbb
ss
sub
inc
mov
or
movsl
andb
movl
mov
and
mov
dec
ljmp
inc
cwtl
call
sbbl
outsb
lcall
jo
pop
fwait
leave
lcall
in
mov
leave
icebp
push
lods
sahf
xchg
lcall
xor
mov
test
push
loopne
pop
jmp
sbb
mov
nop
pop
lahf
pop
ret
stos
data16
nop
sbb
mov
pop
adc
sbb
dec
and
pushf
mov
inc
xor
sub
xor
popa
popf
loopne
jns
pop
sbbl
and
call
sar
push
sub
or
xchg
in
xor
or
cmc
add
subb
in
leave
jl
loope
pusha
sbb
loop
push
xchg
add
mov
sub
add
xchg
and
shrl
cwtl
imul
in
xor
lock
cmp
ret
je
cmpsl
add
dec
addr16
add
jecxz
or
rcrb
pop
movsl
fldl
btc
push
inc
mov
pop
sub
and
imull
in
mov
fisubs
push
enter
cli
repnz
dec
fldt
rcrl
xor
out
add
mov
mov
push
stos
jb
outsb
lds
stc
add
ljmp
loope
xchg
aaa
push
lds
sbb
je
sbb
jne
mov
sarl
jmp
popf
cmc
jnp
sub
stos
push
push
add
fmull
xchg
cmp
or
or
jmp
lret
sub
cwtl
mov
or
cmp
jnp
mov
call
cltd
or
or
xor
negl
and
in
xchg
adc
sub
bound
lahf
lret
adc
addb
movsl
and
rcl
mov
sahf
repz
pop
je
xchg
orl
lahf
mov
jae
add
ljmp
push
or
cmp
clc
mov
xor
pop
sub
cmpsb
enter
daa
dec
jecxz
les
mov
dec
jecxz
xchg
sub
push
loop
mov
in
aad
and
sbb
stc
adc
sbb
cmp
sahf
inc
and
inc
adc
and
push
das
add
inc
mov
fidivl
or
in
push
xchg
inc
int
outsl
inc
adc
scas
rorb
enter
xchg
hlt
jmp
lock
mov
jo
lahf
jno
xchg
xor
repnz
fcmovne
xlat
fdivp
scas
call
adc
gs
mov
pop
stos
xchg
mov
adc
jg
adcb
shll
jmp
das
pop
sub
jmp
cmp
out
nop
inc
shl
jbe
mov
icebp
not
ljmp
out
mov
in
hlt
ret
enter
rolb
pop
outsl
je
mov
mov
scas
cmpb
mov
shrb
cmc
lret
call
test
mov
aas
mov
mov
cltd
fcmovu
cmc
pop
xchg
ret
rclb
jne
int3
pop
and
stc
adc
adc
enter
mulb
neg
dec
shrb
mov
xor
and
movq
jne
loopne
test
in
jle
sbb
lcall
and
lcall
pushf
jae
pop
push
jo
add
add
nop
insl
out
out
in
jp
fwait
cmc
inc
daa
sub
add
sub
jnp
loope
sbb
insl
out
push
ljmp
add
rcl
ds
inc
std
lds
insb
sbb
scas
call
inc
rcrb
imul
nop
repnz
xlat
nop
ret
xor
jb
push
inc
mov
mov
jb
gs
mov
inc
incb
sahf
push
es
inc
or
jge
add
pop
mov
jp
je
or
stos
mov
mov
int3
jo
push
dec
mov
shll
ficoms
cltd
jb
mov
xchg
mov
add
xor
test
inc
imul
addb
std
daa
popf
xor
inc
xchg
fwait
lret
fdivrs
data16
inc
ja
sti
mov
jbe
adc
call
cmp
mov
jbe
sub
push
jno
mov
mov
in
jns
ss
pop
cltd
pop
out
movsb
jo
push
out
nop
lods
add
test
aaa
mov
cltd
mov
out
cltd
rcr
jo
mov
lods
iret
cmp
xor
scas
pusha
sub
fs
mov
mov
mov
or
mov
inc
je
cmpsb
xor
mov
ficoml
adc
mov
dec
stos
popa
dec
mov
xlat
js
sub
sub
test
xorl
cli
mov
or
out
les
push
or
push
pcmpgtw
inc
jo
mov
xor
push
unpcklps
fdivrl
xchg
pop
into
insl
xor
and
mov
mov
mov
nop
sahf
xlat
cwtl
jp
iret
inc
pop
xchg
inc
cmp
loop
pop
cwtl
add
dec
pop
sbb
xchg
add
cmpsl
shrl
daa
ljmp
lret
ret
fstpt
sarl
cmp
jbe,pt
mov
and
jnp
in
ljmp
stc
jmp
adc
out
add
add
sti
and
pop
ffree
scas
dec
pop
clc
in
scas
cmpsl
push
sbb
xchg
cmpsl
mov
jae
inc
sbb
inc
sahf
push
or
add
jmp
cmp
add
std
inc
mov
push
cmp
fistl
out
inc
jne
push
xlat
jge
adc
loope
lea
mov
xchg
cwtl
call
pop
test
imul
mov
and
pop
ja
adc
mov
add
aaa
jp
std
or
xorb
packsswb
in
add
rcll
add
xchg
cmp
in
dec
xor
jge
iret
sub
popf
in
inc
cltd
mov
out
pop
push
sbb
negb
or
pushf
repnz
or
cwtl
add
xchg
mov
sub
mov
push
mov
add
push
mov
out
pop
push
cmp
lahf
cs
jnp
roll
sub
mov
and
inc
mov
mov
neg
sti
mov
sub
out
mov
cmc
not
jno
loopne
mov
xchg
add
int
or
add
fdivl
scas
push
aas
dec
mov
sbb
fdivl
push
ja
outsl
imul
push
adc
xlat
cmp
dec
dec
dec
aas
stc
test
jno
jns
xlat
inc
mov
push
cmp
inc
or
pop
imul
jge
push
addl
mov
lea
pop
in
std
cmp
mov
mov
or
jle
lea
testb
test
inc
inc
adc
xchg
shll
in
mov
dec
xor
xchg
xchg
pop
hlt
repnz
pop
adc
fnstenv
jp
aas
mov
dec
and
imul
xchg
jb
frstor
xor
mov
jo
pop
or
mov
inc
clc
or
mov
bound
cmp
add
imul
dec
pop
lds
test
push
cwtl
add
cmp
adc
aam
cli
outsb
test
imul
push
jns
push
xorb
push
inc
mov
rcrl
cltd
mov
cmpsl
pop
lret
push
cmpsb
fcoml
inc
xor
in
dec
fcmovnbe
or
xor
sbb
lods
daa
insl
cmp
lcall
aam
dec
out
jo
mov
stos
or
cmpsl
shr
nop
pop
push
rcll
sub
fsubl
rol
add
or
jge
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
movl
sbb
movl
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
jmp
mov
movl
sub
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
jmp
mov
xlat
and
mov
js
push
jno
sub
addl
adc
test
sbb
hlt
xchg
scas
inc
lret
mov
adc
push
rcrl
icebp
fcoms
jp
mov
fsubrl
sub
xchg
call
sbb
xchg
test
test
popa
rcll
dec
iret
xchg
mov
lret
inc
jbe
adc
rol
enter
fsts
test
dec
lods
loop
xchg
arpl
jp
inc
push
mov
xor
mov
insb
jae
push
imul
insb
fildll
and
enter
filds
leave
sbb
xlat
sbb
cmc
ret
jo
xor
xchg
jl
in
cwtl
test
jp
or
xor
mov
leave
jge
inc
xor
cmp
add
popf
cmp
clc
xor
ja
hlt
inc
or
sub
mov
xor
scas
es
or
clc
sbb
scas
sbb
pop
stos
ret
push
in
jl
lock
subb
dec
clc
ljmp
xor
inc
pop
xor
bound
adc
push
push
pop
jns
and
mov
sub
dec
mov
push
add
push
inc
imul
out
lods
add
aam
sbb
bound
xchg
dec
leave
xor
and
shll
lret
push
sbb
jmp
lret
sti
cmp
cmp
push
add
ljmp
pop
scas
sub
std
xor
outsl
push
sbb
in
inc
sub
in
jge
sti
push
mov
fiaddl
lret
test
add
into
xchg
mov
pop
pop
fidivrs
jg
dec
inc
roll
sub
into
movsl
and
mov
pop
fsubrs
and
pop
pop
cmp
fstps
inc
sub
cmp
push
cltd
int3
sbb
or
push
add
dec
addr16
inc
insb
mov
push
scas
mov
and
les
jp
divl
push
mov
pushf
mov
mov
loopne
arpl
stc
push
pop
xchg
pop
xor
mov
mov
out
mov
out
pop
mov
jne
xchg
cmpsb
sub
sub
sahf
pop
push
rcl
sarb
sub
inc
outsb
push
neg
dec
xchg
mov
jae
inc
out
fs
sub
loopne
sub
mov
aad
stc
enter
pushf
push
and
js
sti
leave
kmovw
mov
sbb
loope
cli
dec
sti
or
pop
call
cmp
inc
mov
xchg
test
movsl
xor
test
rcr
into
movsb
add
decl
clc
mov
aas
pop
fs
inc
js
add
lock
dec
mov
sub
stos
mov
pop
cmpsb
insb
lea
push
add
rorl
sbb
push
stos
ljmp
fwait
movsl
and
out
mov
pop
jbe
fwait
out
mov
mov
sbb
rcll
adc
insl
rclb
pop
sahf
mov
ficoms
add
mov
push
int
adc
mov
add
sbb
js
add
orl
int
shlb
imul
in
and
mov
out
xchg
xlat
pop
sbb
sti
xlat
dec
cmpsb
push
ljmp
sub
lods
in
xor
mov
xchg
stos
mov
cwtl
push
test
sbb
push
push
ss
add
push
mov
xorl
jb
jecxz
push
push
jp
nop
push
jne
push
xchg
add
inc
roll
cmp
push
and
daa
out
push
or
pop
adc
fidivl
cmp
adc
testb
mov
push
cwtl
jecxz
std
aam
inc
repz
js
jb
lds
fcmovbe
fcompl
cmc
out
adc
mov
mov
int
iret
lea
mov
aaa
and
call
mov
inc
in
stos
inc
sahf
aaa
jo
mov
inc
fimull
mov
jno
dec
cs
xor
adc
cmpsb
imul
sub
inc
dec
dec
loopne
pop
xor
js
test
cmpsl
lds
inc
leave
outsl
push
test
mov
dec
aas
cmp
pop
cs
ret
dec
cmp
aam
ds
lahf
sub
fs
les
addb
pop
adc
nop
jbe
mov
out
cmp
lock
add
mov
aas
inc
fldl
lods
xor
push
movsl
repnz
and
xchg
mov
nop
lcall
pop
out
mov
mov
mov
dec
jo
add
cmp
leave
pop
adc
xchg
mov
test
movsl
sbb
xor
add
out
stos
push
mov
test
inc
sub
hlt
ja
add
cs
cmp
and
push
xchg
and
aad
cmpl
rcll
and
lock
fldcw
mov
add
int
adc
hlt
fisubs
imulb
adc
sbb
test
xchg
sub
cmp
subb
cmp
andl
push
clc
iret
lahf
jp
and
sub
sbb
mov
bnd
loop
in
pop
cmpsb
cmc
mov
in
jnp
push
mov
fldcw
dec
xor
pusha
xchg
dec
mov
test
add
imul
add
or
cmpsb
jg
shrb
sahf
scas
lods
cwtl
adc
loope
cmpsl
fmull
sbbb
add
pop
hlt
push
pop
jns
negb
call
push
sbb
sbb
in
jne
insb
ret
cmpsb
inc
fisttps
scas
jae
call
push
subl
rcrl
jne
xor
movsb
adc
popf
fwait
dec
add
pop
repnz
imul
push
out
mov
inc
pop
mov
fistl
sub
lock
sbb
rorl
or
or
jp
idivb
sub
popl
rcll
vcvtpd2uqq
mov
and
in
mov
sub
dec
cld
xlat
scas
push
shlb
inc
xor
popa
in
in
in
sbb
lds
inc
sub
ja
dec
movsl
and
in
cwtl
jne
adc
test
iret
xchg
out
xchg
test
bound
mov
popf
iret
repz
sbb
mov
test
adc
imul
repnz
cltd
repz
fisttpll
or
mov
call
mov
pop
shl
mov
cmc
fstpt
sub
add
outsl
cmp
in
dec
inc
lcall
pop
aad
int3
mov
xchg
cmp
lds
inc
call
inc
xchg
outsb
add
bound
imul
jecxz
pop
into
add
mov
push
mov
scas
sbb
adc
mov
faddl
mov
out
cwtl
push
xor
scas
dec
je
jae
repz
mov
or
sub
das
movsl
cmpsb
in
dec
pop
cli
pop
leave
jl
ret
push
shlb
cmpl
test
xor
jmp
clc
mov
test
sbb
stos
jbe
xchg
pop
jns
cmp
lock
andl
bound
stos
andb
ds
adc
fisubrl
jbe
xor
mov
jb
jl
aad
loopne
xchg
aas
imul
sub
insl
mov
jg
adc
test
jl
mov
push
mov
sbb
scas
mov
jno
push
mov
fnstenv
cmp
sub
xchg
out
out
imul
mov
clc
pop
sub
add
jne
mov
cmp
shll
jbe
outsb
sub
mov
pop
adc
stc
outsl
pusha
daa
inc
lcall
pop
mov
xor
jo
inc
sub
dec
stos
pop
lods
lock
dec
inc
outsb
cmp
rolb
mov
xchg
jnp
mov
push
pause
xchg
add
orb
dec
subb
mov
shll
icebp
outsb
push
sub
pop
lcall
inc
push
jne
sbb
sti
fsubl
dec
push
sub
push
dec
movsl
add
push
mov
xor
add
lahf
loope
pop
lea
push
xor
add
icebp
jmp
push
out
in
inc
iret
push
sbb
push
enter
repz
cmp
movsl
xor
push
adc
ljmp
jae
add
aam
adc
xor
sbb
and
das
fldcw
add
inc
push
es
pop
push
cmc
xchg
repnz
jg
add
into
pop
jbe
jle
pop
mov
aad
das
mov
pop
or
decl
adc
les
inc
push
das
test
pop
sbb
or
push
sbb
and
or
sub
shl
dec
sub
mov
das
jbe
dec
movsl
pop
pop
scas
xchg
call
and
mov
pop
sarl
dec
leave
jp
lods
clc
xor
dec
cmp
mov
sti
aad
pop
xchg
leave
sbb
sub
decb
and
lfs
cwtl
push
int3
es
outsl
push
cmpsb
lret
inc
movsb
adc
sub
mov
mov
jnp
push
xor
mov
es
cmc
sub
mov
lods
jae
mov
pop
imul
mov
andl
sub
xchg
or
loope
dec
dec
pop
adc
adc
jne
lcall
add
les
lea
cmpsb
push
dec
and
icebp
pushf
mov
jg
outsb
xchg
js
into
adc
sub
das
jbe
mov
out
mov
mov
dec
outsl
nop
pop
adc
cs
nop
xor
std
xchg
shll
subw
js
and
dec
mov
mov
call
xchg
outsl
movsl
cs
jae
xchg
out
xchg
push
push
cwtl
mov
adc
ret
mov
xlat
leave
push
mov
out
add
test
or
push
sub
dec
pop
aaa
sbb
mov
sbb
fwait
pop
adc
dec
pop
mov
into
sub
lock
lret
leave
arpl
insl
mov
andb
pushf
or
imul
out
lods
rcll
mov
out
jb
xor
jp
push
pop
push
ret
xor
rep
in
mov
inc
inc
jns
xor
out
in
daa
scas
rolb
mov
lods
or
decb
insl
cmp
outsl
scas
and
mov
in
sub
xor
test
int3
jno
icebp
movb
mov
or
and
ss
fcmovne
int
clc
mov
mov
jo
aad
and
lds
mov
stos
add
and
pop
cmpsb
rclb
ds
inc
ds
shrl
test
and
mov
jns
jnp
xchg
addr16
dec
mov
pop
xchg
mov
fisubrs
sbb
dec
sbb
mov
test
add
push
sub
incb
cli
and
xor
dec
cwtl
add
mov
pop
pop
out
lret
jl
mov
mov
fldcw
inc
fisttpll
dec
iret
rcrl
test
ja
icebp
xchg
fdivs
pop
notl
add
mov
mov
gs
mov
jg
inc
cld
ss
roll
xchg
dec
insb
shr
int
ret
ss
sbb
push
loopne
lcall
inc
inc
loope
push
sub
rorb
jmp
iret
mov
fcomi
cmp
imul
cld
fsub
mov
push
movsb
pop
outsb
xchg
add
cmpl
call
pop
test
shlb
push
cmp
in
mov
inc
and
mov
push
inc
aaa
loopne
pop
sbb
pop
cwtl
ljmp
loop
imul
mov
cs
cltd
pop
loope
push
lret
jne
pushf
sbb
repz
inc
add
mov
add
pop
xchg
test
sbb
nop
and
das
in
pop
mov
mov
xchg
add
lahf
inc
mov
dec
pop
stos
shlb
inc
hlt
jns
aam
cmp
aad
push
ficoms
aam
inc
clc
imul
jae
insl
push
icebp
mov
jg
xor
cwtl
sub
in
out
shll
pop
cli
mov
mov
xorb
jb
stos
sbb
call
jae
lock
jb
pop
adc
cmp
loop
xor
inc
xor
xor
mov
cmpl
cmp
xchg
nop
cmpsb
jb
cmc
cmp
xchg
and
jle
data16
xor
and
fstpt
js
mov
sbb
scas
and
sbb
lods
adc
mov
ret
jp
test
xchg
fldenv
scas
and
inc
in
stos
dec
mov
push
pop
adc
adc
inc
add
jnp
test
inc
mov
adc
dec
lds
imulb
add
sarb
out
lea
ror
ficomps
pushf
popa
add
stc
movsl
push
test
sub
popa
adc
movsl
lea
and
cli
stos
test
push
pop
sarl
mov
cmp
mov
repz
cwtl
int
fsubp
lcall
jno
adc
pop
push
sahf
and
cmp
dec
adc
mulb
cmc
mov
les
aad
jl
mov
mov
mov
inc
movsb
xchg
movsl
cmp
adc
adc
nop
xchg
int3
int
sti
mov
cmpsl
sbb
call
aad
jo
test
outsb
cmpsb
insl
cs
idiv
pop
add
jecxz
pushf
cli
data16
cmp
ja
pusha
mov
cld
es
scas
outsl
push
in
test
pop
cmc
cmp
cmp
scas
scas
imul
jl
cmp
inc
loopne
inc
cld
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jb
movl
lea
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
movl
andl
xor
xor
inc
mov
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jb
lea
xor
mov
or
mov
and
mov
movl
mov
xor
subl
add
mov
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
sub
push
sub
mov
mov
mov
mov
xor
or
mov
adcl
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
add
sub
xor
mov
andl
add
push
movl
adc
movzbl
adc
mov
xor
xor
cmp
jne
cmp
movl
jne
push
jmp
mov
xor
adcl
add
movl
xor
xorl
add
adc
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
add
mov
movzwl
xor
xor
addl
add
mov
mov
mov
xor
add
xorl
imul
movl
mov
subl
xor
adcl
add
movl
cmp
movl
mov
je
mov
subl
add
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
addl
push
movl
push
push
xor
adcl
push
sbbl
push
andl
push
call
orl
mov
andl
lea
push
movl
push
call
movl
cmp
movl
je
xor
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jb
mov
push
lea
addl
push
adcl
push
subl
push
push
sbbl
call
adcl
imul
movl
cmp
movl
jne
lea
subl
push
push
call
movl
cmp
movl
jne
pushl
push
andl
call
movzbl
and
mov
sub
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
lea
add
mov
lea
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
sub
mov
mov
movzwl
adc
mov
xor
orl
mov
movl
add
movl
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
mov
subl
xor
add
sbbl
mov
xor
mov
adcl
xor
addl
add
mov
movzwl
sub
mov
mov
andl
xor
add
orl
mov
sbb
mov
mov
xorl
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
mov
mov
subl
movl
mov
movl
decl
mov
xorl
xor
sbbl
add
movl
jmp
lea
push
addl
push
call
cmp
movl
jne
push
subl
lea
push
sbbl
push
subl
push
addl
push
call
imul
cmp
movl
jne
adcl
lea
xorl
push
push
call
movl
cmp
movl
jne
mov
mov
xor
addl
lea
adcl
push
mov
orl
xor
lea
push
xorl
mov
pushl
andl
call
mov
mov
xor
lea
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
xor
adcl
add
mov
sbb
mov
mov
xor
movl
lea
mov
movl
cmp
movl
jbe
adc
mov
add
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
or
mov
mov
sub
xor
mov
adcl
lea
sbbl
mov
lea
mov
lea
push
subl
push
call
cmp
movl
jne
push
subl
lea
xorl
push
push
addl
push
adcl
push
call
movl
imul
movl
cmp
jne
lea
andl
push
adcl
push
xorl
call
movl
cmp
movl
jne
orl
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
mov
mov
or
movl
add
mov
movzbl
adc
push
or
mov
xor
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
call
mov
dec
mov
jmp
mov
adcl
push
adcl
mov
addl
add
movl
cmp
movl
je
mov
adc
mov
mov
xor
sbbl
xor
add
xorl
add
movl
adc
sbbl
xor
adcl
mov
push
dec
xor
xor
mov
mov
and
mov
add
adc
movl
xor
incl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
adcl
movsbl
adc
mov
andl
sub
mov
addl
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
push
mov
mov
movl
movl
push
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
dec
jns
add
add
add
add
xor
add
mov
inc
add
add
add
push
push
inc
push
inc
cld
movsl
test
divl
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
