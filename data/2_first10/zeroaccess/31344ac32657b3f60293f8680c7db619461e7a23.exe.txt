push
mov
sub
mov
mov
jmp
adcb
shrl
out
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
aam
inc
in
outsl
push
rclb
lds
addl
mov
repnz
mov
pop
and
test
add
call
mov
insl
call
mov
daa
xchg
mov
loope
rcll
adc
sub
std
add
inc
fisttps
mov
inc
js
mov
sbb
add
ss
cmp
gs
dec
mov
incb
pop
inc
pop
adc
add
xchg
sbb
popf
aas
pop
int
jb
dec
call
mov
fwait
clc
nop
xor
mov
mov
mov
aaa
mov
jg
call
pop
add
ja
dec
ss
into
inc
test
cli
jne
jle
adc
inc
cmp
enter
or
inc
sub
fcoml
clc
fs
push
in
jmp
mov
xchg
stos
das
adc
xchg
ret
test
in
fildl
mov
imul
mov
lock
xor
test
or
inc
fwait
mov
daa
sbb
lods
inc
dec
mov
lods
add
repnz
sub
pop
je
and
popf
mov
xchg
push
jg
ficomps
adc
outsl
xor
les
mov
inc
or
dec
fs
idivl
jmp
pop
add
insb
xor
icebp
sub
out
and
mov
loop
cmp
fnstenv
stos
test
scas
dec
pop
repz
mov
imul
add
aaa
fnstcw
and
in
negl
cld
sbb
fsubl
push
xor
or
imul
fsub
mov
mov
repnz
xlat
pushf
sub
push
mov
cmp
inc
movsb
cmp
fistpl
repnz
lret
push
mull
in
mov
or
mov
push
sub
testl
inc
inc
pop
mov
sbb
inc
ds
ficomps
sbb
dec
call
shl
not
sbb
fwait
leave
out
das
mov
int
xchg
sbbl
xchg
sbb
or
lods
cmp
icebp
and
xchg
enter
aam
in
mov
push
xchg
iret
sbb
bound
cmp
roll
test
sub
xchg
inc
xlat
and
xor
iret
out
jmp
adc
loopne
xor
and
insl
aam
out
aad
xchg
test
xchg
mov
xor
jmp
mov
xor
add
cwtl
xchg
lods
dec
orl
xchg
int
inc
inc
xorl
inc
cmp
inc
mov
jno
ljmp
repnz
into
xor
jg
ret
xchg
test
jge
mov
or
sbb
hlt
or
mov
push
jecxz
loop
call
bts
in
loopne
imul
jbe
and
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
xor
jle
outsl
jge
jle
mov
cmc
pop
cwtl
push
xchg
and
inc
add
adc
jp
and
cmpsb
addr16
in
push
out
mov
xlat
xchg
jmp
fs
and
mov
mov
or
fcompl
jmp
xchg
jbe
stos
lret
sbb
loop
mov
sbb
inc
je
orl
ljmp
and
adc
lahf
call
xchg
mov
jl
cmpsl
mov
dec
dec
imul
test
push
shl
push
aam
lock
pusha
lods
mov
seto
jmp
into
push
jno
mov
mov
insb
add
push
js
mov
mov
inc
push
ret
stc
add
push
call
rcrl
push
jle
push
jnp
shl
adc
shlb
xchg
shll
stos
out
pop
push
sahf
out
int3
mov
insb
mov
jmp
xor
and
mov
pop
mov
mov
loopne
push
into
jbe
jnp
data16
mov
addr16
mov
add
daa
aam
test
jl
sub
xlat
pop
aad
icebp
fistpll
mov
sbb
out
xchg
cltd
js
sub
leave
sub
rorl
and
mov
jbe
or
test
xchg
fistpl
lods
dec
inc
cs
lret
sbb
jae
aaa
cs
xor
and
lret
mov
fcompl
ljmp
xor
pop
mov
xchg
mov
out
or
sarl
inc
and
jne
cmp
xchg
sbb
mov
jnp
insl
push
out
jbe
mov
sub
add
xor
jne
sub
mov
xor
mov
in
insl
and
jg
iret
arpl
test
and
lahf
adc
dec
push
dec
mov
sbb
ret
fadd
fs
xchg
mov
data16
ds
jnp
mov
push
subb
xlat
mov
xchg
inc
push
xchg
insb
outsl
and
aad
clc
dec
push
sbb
dec
push
fcomps
xchg
inc
xchg
xchg
mov
sub
jo
sti
imul
repz
lods
xchg
lret
mov
mov
das
sbb
rcrb
push
push
arpl
jg
fidivrl
jle
sbb
sub
pop
xor
out
fwait
xlat
push
fdivrs
imul
xchg
push
mov
sbb
mov
and
jl
and
xchg
bound
add
dec
cmpsl
lock
mov
test
dec
ds
shlb
rcl
push
test
inc
in
add
fimull
sti
jne
lcall
scas
ficoms
xchg
mov
sub
scas
pushf
out
mov
int
xchg
xor
push
mov
jge
mov
mov
adc
rcl
adc
inc
call
ds
insb
adc
int3
mov
test
xchg
cld
je
mov
sahf
arpl
push
xchg
jge
adc
test
call
xor
add
jo
mov
out
data16
pop
and
imul
mov
jl
shlb
rcrb
xor
dec
xchg
pop
pop
loopne
loope
test
dec
xchg
xchg
sbb
lahf
mov
mov
loop
fsubrs
fwait
iret
cmp
dec
roll
fisubs
or
das
lods
fcomip
cmp
lds
inc
xchg
arpl
jle
xor
xchg
push
in
sub
cli
xor
cli
mov
mov
stos
jnp
inc
dec
dec
test
push
pop
fisubs
add
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
xor
jle
outsl
jge
jle
scas
inc
xchg
cli
jbe
sub
dec
call
xor
pushf
pop
fisttpl
mov
mov
aaa
dec
lods
xchg
inc
mov
add
inc
pop
or
loopne
dec
pop
cmc
pushl
pop
addb
xchg
popa
stos
lea
inc
imull
lcall
jbe
aad
mov
push
call
gs
loop
test
arpl
ds
sub
scas
xchg
pop
xchg
add
fs
stc
or
les
sbb
inc
in
fwait
aas
fucomi
xchg
mov
jmp
mov
sbb
adcb
add
fidivs
lock
shl
pop
pop
rcr
pusha
jnp
xchg
lods
xchg
pop
or
sub
mov
pop
gs
ret
cmp
sbb
mov
dec
sti
ds
in
jb
pop
and
push
outsl
jmp
cmp
pop
test
mov
and
dec
push
in
lock
xchg
int
mov
xchg
ret
aas
test
insl
add
mov
ljmp
pop
jle
cmpsl
arpl
fiaddl
adc
stos
lahf
xchg
aam
pop
jle
xorb
out
cmpsl
in
lcall
lea
loope
dec
adc
xor
inc
sub
or
nop
inc
repz
jb
xchg
xor
mov
cwtl
adc
jno
xor
mov
inc
imul
call
lcall
test
add
fnstcw
pop
out
scas
not
xor
mov
sbb
inc
mov
cmp
cwtl
out
lret
mov
arpl
daa
mov
sub
dec
xor
lahf
repnz
sbb
cmp
daa
cmp
jb
imul
out
std
mov
and
sti
rorb
das
xchg
mov
xor
pop
lock
ja
xor
daa
popf
inc
cmpsl
push
add
add
ljmp
je
test
sub
sarb
or
pushl
lahf
dec
adc
and
nop
xor
sub
mov
add
pop
cmp
xchg
out
dec
out
push
inc
inc
into
in
pop
cmp
pop
loope
test
call
out
popf
and
outsl
fstl
add
xor
mov
push
pop
fs
lcall
stos
xlat
popa
pop
nop
xor
adc
xor
push
cltd
jne
add
fisttpll
nop
inc
xchg
push
addr16
add
add
rcll
ficoml
pop
lds
push
jg
xchg
fisubrs
mov
xor
add
add
lret
xchg
jge
add
sqrtps
scas
cli
or
int3
sarl
inc
rol
ss
sub
dec
addr16
sbb
cltd
xchg
in
popa
imul
ljmp
push
addr16
jp
mov
lahf
enter
dec
cmp
xchg
je
or
inc
lret
push
hlt
bound
rcl
lcall
fistpl
jp
mov
pop
pushf
data16
cwtd
ret
push
ror
dec
inc
sahf
rcrb
pop
inc
data16
cmp
sti
es
xchg
add
test
test
lds
mov
shlb
mov
shlb
fs
sahf
je
pop
mov
test
and
pushf
pop
lds
call
adc
cs
std
in
adc
and
jae
int3
mov
das
test
adc
stos
lock
or
inc
or
or
hlt
jle
ljmp
or
inc
add
add
lret
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
mov
add
jle
xorb
jp
cmp
jle
imul
fsubr
rolb
inc
mov
outsl
lea
cltd
pop
hlt
dec
aaa
sarb
add
imul
in
dec
orb
cmpsl
jg
jno
outsl
mov
rol
cs
jns
sub
inc
and
int3
add
and
dec
orl
dec
pop
mov
mov
mov
push
int3
arpl
aas
xor
inc
jge
mov
mov
mov
popa
pop
jne
pop
out
scas
sarl
adc
xor
fnstcw
xchg
adc
pop
mov
fistpll
ret
sub
xchg
pop
cmp
or
xchg
sbb
aaa
dec
jecxz
hlt
or
sbb
cmc
outsl
push
and
push
xor
mov
pusha
jp
xchg
mov
jp
daa
loope
arpl
scas
xchg
add
js
pop
sub
mov
sarb
push
lods
pop
insl
outsl
push
push
pop
fnstenv
lea
test
inc
jg
xlat
imul
sbb
push
push
pusha
pop
pop
cmp
sbb
adc
adc
outsb
das
sbb
dec
inc
pusha
mov
jg
sub
movsb
aam
ret
in
test
xor
insb
shlb
cmc
cmp
pop
mov
daa
xor
mov
cmp
sub
jno
pop
aad
inc
shll
shr
pop
mov
ret
jns
cmp
pop
in
mov
cmp
bound
call
enter
mov
inc
xlat
outsl
cmpsl
lcall
arpl
mov
sbb
imul
or
sbb
add
adc
inc
cmp
mov
jg
dec
mov
jp
jno
outsb
outsb
adc
ljmp
ds
daa
test
fs
mov
sub
add
stos
add
or
fisubs
adc
aas
sahf
adc
xchg
les
call
jno
outsb
lods
push
jp
dec
inc
andl
pop
popfw
mov
pop
xchg
sbb
pop
sub
repz
scas
stos
shlb
jmp
xchg
jge
mov
cmp
and
fisttpl
xchg
sarb
fwait
xchg
leave
dec
cmpsb
xor
sahf
mov
shlb
fidivl
ds
loope
xor
sarb
mov
cmc
inc
inc
pop
ret
sub
mov
int3
inc
mov
jl
fwait
nop
push
outsl
aaa
xchg
je
loope
mov
sub
iret
xchg
add
arpl
dec
jmp
clc
outsl
cmp
xchg
and
dec
jg
pop
andb
es
nop
sbb
sbb
jecxz
mov
gs
gs
dec
jns
sub
and
pop
pop
outsl
add
rol
push
push
mov
and
ret
mov
pop
pop
or
pop
cmp
test
sub
fidivrs
in
xor
sub
sub
or
dec
mov
ljmp
sub
divb
sbb
push
add
jmp
push
loopne
jp
pop
fistl
cs
adc
mov
add
or
sub
push
imul
or
pop
xor
jbe
adc
mov
mov
nop
sbb
cmp
ds
iret
stc
sarb
outsb
gs
and
lret
cli
inc
jns
cmpsb
pusha
mov
and
imul
mov
shlb
push
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
sbb
jle
jge
jle
push
sahf
scas
les
mov
dec
adc
stos
inc
lods
or
adc
cmp
or
gs
xor
out
arpl
and
push
sub
inc
inc
pop
subl
pop
pop
out
cmp
dec
mov
lds
call
sub
ds
mov
lcall
xor
stos
adc
dec
add
ss
vmread
ss
xor
mov
pop
inc
and
mov
test
cltd
int
int
ficoml
cmpsl
call
out
popa
cli
pop
out
xchg
mov
out
int
mov
outsl
mov
jnp
sahf
mov
repz
cli
aas
dec
out
mov
notl
push
imul
cld
test
mov
int3
cmp
ret
xor
mov
lahf
cltd
xchg
dec
js
add
stos
or
dec
clc
out
push
insl
mov
flds
fbstp
or
pushf
cmc
sub
or
cmp
mov
jno
sub
loop
es
mov
insl
sbb
lcall
sbb
jno
insb
xor
add
ret
leave
hlt
sub
loopne
les
adc
mov
ds
mov
jle
cmp
divb
sbb
fs
lds
lock
jl
jbe
subl
push
shl
fwait
jp
movsb
sub
fistpll
sbb
xor
inc
pop
cltd
sbb
int3
push
jp
or
push
orl
jp
dec
xlat
les
lea
out
adc
pop
push
jmp
pop
cmpsl
in
out
jne
cwtl
push
pushf
outsl
mov
int
jecxz
repz
add
and
int
inc
mov
lods
adc
cmp
or
outsb
fidivl
xor
test
lea
jmp
cmp
push
sahf
sahf
adc
rclb
push
sbb
adc
inc
sbb
xlat
popl
addr16
adc
enter
or
sub
xchg
adc
repnz
fldt
sub
push
pop
cwtl
dec
stos
mov
pop
push
mov
std
mov
out
xchg
sti
push
lcall
stos
cmpsb
pusha
mov
icebp
inc
mov
add
jno
ficoml
test
movsb
push
add
inc
int3
adc
cmp
out
sarl
or
cmpsl
jae
sub
jle
mov
outsb
cltd
fisubrs
jl
fistpll
insl
bound
aaa
mov
fiaddl
cmp
add
outsb
jle
repnz
push
add
std
fdivl
aas
xor
unpcklps
es
ljmp
adc
cli
data16
mov
jecxz
xor
and
test
or
cmp
call
sbb
push
pop
ljmp
cmp
jb
sub
sarl
adc
outsl
dec
pop
aam
fisttps
adc
sbb
sub
divl
add
scas
fidivrl
dec
xlat
pusha
mov
mov
or
cmc
hlt
cmp
xor
jne
sarb
mov
shlb
lret
shrb
filds
pop
ds
lret
mov
jns
pop
pushf
imul
jg
scas
dec
mov
data16
inc
push
rcl
xchg
pop
loop
fs
jae
adc
mov
cmp
stc
sahf
dec
mov
push
fstpt
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
mov
jp
jl
es
mov
dec
into
lcall
mov
lcall
mov
cld
jns
push
jl
lds
negb
bound
jge
xor
mov
add
test
frstor
and
mov
pushf
icebp
insb
cmc
dec
daa
notl
aad
inc
mov
xor
loopne
dec
jne
std
pop
pop
fistpll
push
and
adc
mov
mov
popa
xchg
inc
sbb
jecxz
adc
jecxz
xor
or
cltd
push
cmpsb
add
iret
push
arpl
add
push
shl
add
movsb
lods
repz
xchg
sbb
and
hlt
aad
jns
and
inc
rorb
in
ljmp
sarl
mov
dec
mov
call
pop
arpl
scas
loopne
adc
or
mov
insl
and
sub
or
fcomps
mov
lds
loop
cwtl
mov
and
insl
pushf
and
fimuls
jl
add
test
lahf
cltd
sarb
pop
cmp
into
inc
jns
sbb
popf
pop
push
in
repz
call
fdivl
in
mov
push
jo
lods
pop
xchg
aam
fnstcw
repnz
adc
dec
fdivs
xor
inc
jb
arpl
push
fnstsw
pop
pop
insb
ds
mov
cld
psubw
adc
inc
pop
ficoml
or
aam
mov
sbb
mov
mov
addr16
cmp
es
ds
xchg
stos
scas
sbb
pop
jge
push
mov
aad
fcompl
lcall
movsb
or
mov
lds
push
xor
fwait
jno
stc
push
xor
xor
clc
fwait
cmp
cs
sub
shl
push
scas
test
sbb
jns
out
push
pop
insb
pop
push
push
cmc
mov
popa
je
outsb
xor
pop
lcall
sti
dec
pop
mov
sub
ret
xchg
lret
idivb
push
dec
mov
imulb
mov
xor
divl
fistpll
dec
xchg
or
pop
clc
and
dec
das
lcall
scas
mov
out
int
hlt
test
rcrl
jg
lahf
insb
in
push
out
test
xor
aam
test
bound
fists
adc
enter
push
push
jbe
dec
push
mov
jge
das
repnz
js
in
in
outsb
repz
xor
mov
scas
popa
cltd
sbb
movsb
mov
inc
lods
cmp
xor
scas
mov
dec
add
lods
outsb
sub
sub
dec
xchg
and
xor
sub
cmp
in
pop
mov
jge
in
subb
inc
push
movsb
cltd
push
xchg
xor
scas
cmp
fsubrl
test
or
mov
and
jmp
mov
xchg
dec
jae
call
test
mov
mov
sbb
inc
adcb
lods
sti
mov
ja
leave
dec
mov
inc
inc
mov
push
adc
fldl
xor
xchg
in
xchg
mov
cmpl
xchg
pop
jl
rcll
mov
pop
ret
sbb
push
shll
cwtl
sbb
pop
adc
xlat
test
sbb
dec
xchg
shl
repz
pop
int
lcall
add
arpl
repz
dec
pop
cmp
jmp
dec
adc
jb
arpl
cmp
stos
sbb
sub
aad
add
aam
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
sbbb
jle
push
lods
add
fs
bound
jl
pop
imul
jle
dec
inc
jp
rorb
lret
ss
repnz
aas
cld
lret
cmp
lods
int
ss
mov
lea
sti
xchg
pushf
and
jp
stos
outsb
mov
gs
aaa
lahf
test
aas
pop
push
xor
popf
fs
dec
dec
cmpsl
inc
lock
fwait
mov
gs
call
jmp
add
std
push
insb
loopne
sahf
aas
aaa
lds
adc
ss
fsub
gs
xchg
out
mov
jg
push
test
xchg
gs
scas
rcl
jnp
mov
ret
lock
cld
idivl
pop
and
push
out
lods
add
xchg
aas
add
inc
fldl
mov
repz
mov
popf
mov
mov
mov
es
or
mov
xorb
adc
cmpb
pop
fsubr
ss
out
cmpsb
lods
std
dec
rol
sbb
jle
lds
outsb
sahf
test
pop
outsb
xchg
repz
add
jne
dec
mov
cli
pusha
push
scas
sti
stc
jbe
dec
add
cmc
xchg
sbb
sub
enter
xchg
xchg
ss
lods
pop
mov
xor
pop
into
inc
lcall
clc
xchg
imul
imul
insb
jns
push
cmovno
mov
inc
and
sahf
and
dec
fnstsw
or
sahf
jbe
leave
sub
xor
stos
or
sti
mov
xchg
repz
inc
fsts
fwait
lods
int
dec
adc
xor
mov
jle
pusha
movsb
pop
lcall
xor
push
adc
xchg
jecxz
lods
ljmp
in
xor
lds
inc
sbb
out
and
xor
cmp
push
cmpsb
fwait
rcll
sub
mov
pushf
das
cmp
mov
push
mov
push
sbb
dec
dec
out
jcxz
rcll
lret
outsb
addr16
push
and
loope
out
cmpsl
push
mov
iret
sar
not
cwtl
xlat
inc
xchg
ret
jge
scas
lret
pop
imul
sbb
inc
lea
test
pop
int3
cld
out
sbb
and
mov
jl
add
cli
imul
sub
mov
ds
mov
push
orl
int3
mov
push
cs
jmp
mov
inc
sbb
jo
outsl
hlt
mov
or
pop
in
pushf
lret
leave
std
pop
lock
xchg
shr
cmp
subl
mov
jle
daa
pusha
in
push
push
adcb
push
add
jae,pt
pop
sbb
roll
movsl
jae
push
pushf
mov
pop
dec
jns
lret
add
jae
mov
fstpl
and
sbb
push
cmpsl
int
call
call
inc
lea
xchg
loop
decb
loopne
mov
xchg
inc
iret
add
out
xchg
inc
enter
rcl
fcoml
add
and
push
xchg
mov
gs
iret
mov
pop
xchg
xlat
int3
jle
jecxz
xchg
lahf
cli
mov
pop
repz
pop
call
stos
adc
mov
sub
pop
jns
mov
and
and
mov
mov
cmc
or
and
lods
xchg
and
cli
and
mov
xchg
movsb
mov
or
lods
mov
sbb
sub
jne
stc
sbb
imul
ds
les
cmp
adcl
movsb
add
sbbl
xor
push
lcall
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
push
repnz
jle
paddb
xor
xchg
mov
adc
inc
insl
in
std
jno
popa
pusha
mov
sbbb
pop
std
stc
jns
fdiv
bound
sarl
insb
js
fadd
enter
loop
push
cld
pop
fcoms
pop
adc
cmp
cmpl
ret
push
mov
or
sarb
gs
dec
push
pop
mov
jo
in
adcb
cld
mov
push
ret
ljmp
xchg
clc
test
push
or
dec
in
jg
push
sub
in
sub
mov
aaa
dec
jle
in
out
outsl
js
mov
movsl
mov
fdivrp
mov
pop
jg
repz
inc
xor
or
mov
imul
xor
and
jne
pop
adc
jne
dec
or
adc
mov
ss
ljmp
jmp
fdiv
xlat
popl
cmpsb
push
test
fcoml
jge
mov
dec
and
pop
sbb
push
xor
leave
mov
inc
jg
push
repz
call
add
cmpsb
clc
or
pop
mov
cmp
jnp
test
shll
or
add
push
decb
pushf
inc
push
xlat
daa
and
mov
cmp
addr16
adcl
pop
lret
in
pop
mov
rorl
cmc
les
or
lahf
jl
and
in
xor
test
scas
lods
inc
jecxz
mov
test
ret
roll
movsl
hlt
mov
mov
lcall
pushf
movsb
pop
lret
jl
push
mov
fiadds
fst
pop
xchg
test
mov
aad
call
mov
xchg
repnz
lea
jle
push
push
mov
push
in
fldenv
adc
cmpsb
mov
ret
dec
shrb
pop
lods
in
in
jmp
pop
cli
jmp
inc
repnz
mov
stc
jg
fistpll
cmpb
scas
pushf
sti
pop
mov
mov
rolb
inc
or
xlat
cmp
mov
push
xchg
xchg
cmc
and
adc
fcmovu
and
sahf
movsb
sbb
mov
enter
jbe
sub
xor
inc
lahf
lret
sub
sbb
jge
and
mov
pop
sub
stos
xchg
decl
cmpsl
mov
adc
xchg
xchg
sbb
repnz
jne
aam
pusha
popa
out
cmc
mov
loope
or
enter
test
jo
pop
subb
test
sub
outsb
sahf
push
popa
leavew
adc
aas
adc
jns
or
mov
xchg
icebp
rcrl
jbe
jo
divl
mov
xor
out
push
pop
jno
dec
lret
dec
inc
fildl
xor
dec
outsl
cmc
cltd
mov
dec
dec
inc
pop
cmp
pop
icebp
es
pop
sbb
loopne
int3
out
mov
inc
loopne
pop
and
xor
rolb
xor
into
cmc
lock
icebp
pop
add
aam
cmp
stos
xchg
mov
xor
and
and
add
dec
fwait
or
loop
roll
mov
inc
mov
aam
xchg
lret
lock
movsl
xchg
repnz
sbb
movl
repz
ljmp
cmpsl
mov
or
fsubr
cmpsb
mov
adc
int
inc
sbb
mov
in
push
in
lret
cwtl
jle
mov
push
dec
call
pusha
cld
push
mov
dec
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
inc
xchg
ja
adc
outsl
jge
jle
shr
lahf
ss
mov
jo
xchg
xor
sub
jno
andb
dec
repnz
xchg
xchg
lds
mov
scas
sbb
inc
or
mov
sahf
cmp
and
add
test
xchg
ret
in
or
je
fsubp
orb
into
fcomps
into
mov
or
xchg
sbb
sub
dec
sti
push
scas
in
or
jle
or
xor
mov
ret
rorl
mov
xor
les
xorb
xlat
or
xor
xor
fs
pop
into
push
aaa
push
xchg
xchg
scas
push
lods
ja
movsb
xlat
pop
test
jb
add
inc
cld
jne
mov
dec
jae
rolb
push
filds
pop
cli
xchg
inc
sbb
xchg
add
jl
mov
dec
sub
sti
dec
rcr
pop
in
loope
fcmovnbe
ret
xchg
jnp
mov
pop
jmp
gs
cli
cmp
rorl
out
icebp
cltd
cmpsl
inc
cmp
icebp
dec
mov
hlt
push
addr16
sbb
and
shrl
jmp
xchg
sub
sub
insb
mov
pop
clc
in
mov
pop
push
or
push
or
shll
xor
jne
push
fsubr
sub
int3
aad
in
psubq
das
rcll
mov
in
lahf
fisubrs
jp
arpl
or
or
and
icebp
outsb
mov
cmp
pop
jmp
sub
lds
mov
bound
mov
outsb
pop
popa
pop
stos
cmp
add
pop
or
dec
sub
in
movsl
cmp
jecxz
rcrl
inc
add
mov
sub
test
call
into
stos
out
insl
mov
lods
jne
push
mov
je
dec
mov
jnp
subb
fildll
stos
rcrl
cmpsb
clc
fldt
adc
jbe
mov
pop
sbb
dec
inc
insb
lcall
into
push
cmp
fwait
cwtl
jl
insb
decl
xorl
adc
stc
nop
adc
clc
xchg
jbe
fcmovnbe
pop
jg
cwtl
push
psrld
js
movsb
cmp
cmp
je
mov
out
mov
scas
stos
lret
mov
jno
fsubl
adc
mov
push
mov
xchg
test
jne
jl
mov
dec
cmovnp
notb
dec
pop
jne
pop
les
xor
shlb
push
cltd
adc
mov
mov
js
xchg
cmp
mov
pop
xor
inc
adc
mov
movsb
test
scas
mov
push
sbb
dec
ljmp
push
cmp
cltd
mov
loopne
or
je
sbb
loopne
nop
in
stos
test
in
in
inc
js
and
in
in
fucom
dec
add
inc
outsl
or
dec
stos
test
int
testb
inc
xor
outsb
pop
xchg
in
inc
lret
push
popf
xchg
cmp
nop
nop
std
or
jno
stos
outsl
inc
pop
aad
out
xchg
enter
inc
fcom
adc
sbb
pusha
popa
mov
xor
in
ljmp
insb
sub
enter
notb
inc
cmp
dec
xlat
cmpl
movsl
jne
jle
xor
jecxz,pn
mov
push
or
jnp
flds
and
sahf
xor
jecxz
inc
push
push
mov
fcmovbe
mov
sbb
jge
mov
dec
call
ficoms
mov
lcall
ja
adc
inc
pushf
xor
sub
pop
addr16
xor
mov
ret
in
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
ret
test
sbb
jle
and
out
and
pop
stos
mov
jg
test
sbb
cs
mov
adc
fstl
mov
fnstenv
push
fistpll
mov
fmulp
adcb
je
sub
cs
jp
dec
xorl
mov
lret
mov
lahf
push
iret
pop
push
push
dec
push
xchg
mov
and
add
dec
cld
mov
push
es
mov
add
xor
ss
cmp
xchg
jmp
mov
jne
cltd
scas
adc
rcr
sbb
xchg
push
mov
sub
and
int
int
roll
mov
xchg
out
outsl
dec
cs
or
mov
cmc
stos
mov
dec
jo
mov
pop
fisttps
pop
adc
mull
inc
and
dec
cmp
cmpsl
cmp
sbb
jae
cwtl
push
loope
pop
xlat
ss
mov
jb
and
mov
les
and
fistps
ds
in
lret
test
sti
adc
xchg
jp
jp
insb
pop
ljmp
popf
ret
sbb
adc
imul
mov
cmp
rcl
loop
cmp
out
push
dec
mov
repnz
pop
out
mov
cmc
xor
push
std
shrb
push
out
cmpsl
stc
mov
movsl
cmpsl
jnp
in
jmp
leave
xor
mov
arpl
divl
push
jne
xchg
ja
mov
add
pop
bound
xor
jns
test
rorl
sbb
mov
bound
inc
xor
test
cli
clc
sti
pop
jo
imul
or
inc
fsubp
xor
ja
dec
int3
jne
adc
lods
pop
test
or
or
mov
add
xchg
stc
xor
je
adc
or
aas
rclb
nop
jge
cmp
sarl
inc
icebp
shlb
fiaddl
and
out
cs
scas
jne
mov
cmp
adc
aaa
mov
imul
mov
leave
lahf
mov
lahf
pop
and
test
call
sbb
lahf
rolb
and
pop
mov
mov
lret
sub
and
mov
push
into
sahf
push
movsl
mov
aam
push
mov
faddl
cli
sbb
or
orb
sub
dec
outsb
dec
push
cmpb
or
sbb
insl
clc
push
xchg
fisttpl
mov
cmpsb
adc
imul
push
push
inc
stos
rcrl
ljmp
mov
mov
mov
test
inc
nop
push
add
lods
mov
lds
dec
addl
sub
adc
sbb
add
in
jmp
mov
inc
ljmp
shlb
and
movsb
push
or
cli
adc
cmp
and
push
adc
orb
sar
jo
stos
pop
rcrb
cmp
rolb
xchg
inc
out
stos
cmp
das
or
lods
xchg
inc
nop
sub
push
test
cli
arpl
push
sub
push
pop
jmp
mov
mov
dec
enter
sub
imul
pop
jns
add
into
dec
xor
pop
movsb
mov
adc
jb
shl
or
pop
cmp
lret
fisubs
adc
or
mov
sahf
dec
lret
jp
mov
inc
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
push
pmulhuw
jle
outsl
jge
jle
xor
jecxz
fldcw
arpl
addr16
or
mov
mov
and
xor
xlat
stos
sub
out
adc
and
jg
mov
gs
sti
rcr
cltd
int3
adc
outsl
orl
dec
stc
adc
jmp
repnz
adc
movsb
je
hlt
sbb
push
or
nop
push
inc
add
mov
cltd
rcl
push
mov
mov
rcll
push
add
int3
xchg
jno
push
sahf
stos
bound
dec
loope
lret
dec
jp
add
aaa
jmp
int3
mov
lods
push
insl
nop
mov
sbb
inc
rcrl
xchg
push
push
subb
adc
xor
pop
sub
mov
mov
out
and
adc
not
mov
in
or
in
inc
mov
or
xchg
push
arpl
sbb
fnstsw
mov
mov
adc
lock
mov
std
ljmp
mov
shll
xor
int3
jg
mov
loope
xchg
jecxz
inc
push
mov
lods
add
inc
add
ret
xchg
std
out
add
xchg
push
icebp
ret
mov
mov
pop
idivl
mov
push
push
mov
mov
rcll
repz
insl
adc
push
pop
inc
neg
leave
testb
ja
repnz
mov
pop
stos
mov
frstor
bound
sti
cli
xchg
stc
clc
sysenter
clc
sub
pop
hlt
add
in
jmp
shlb
fcmovbe
outsl
popa
lods
pusha
lahf
testl
int
mov
iret
mov
xchg
mov
push
movsb
cmp
popf
shlb
and
hlt
daa
push
mov
push
shlb
insl
ss
cwtl
pop
mov
jns
rcl
pushf
mov
aas
mov
out
jns
and
xor
mov
and
sub
aaa
cmp
rcl
and
mov
pop
call
push
shll
mov
push
addr16
cmovnp
cmp
pop
jg
xchg
add
jo
xor
sti
pop
push
lahf
insl
lahf
lret
fldt
cs
push
mov
adc
xchg
jge
dec
in
mov
lds
dec
push
test
mov
push
jns
in
pop
cli
ror
scas
inc
scas
add
push
cmp
ds
iret
and
lahf
fidivrs
mov
daa
xor
les
sti
mov
dec
out
and
jle
cmpsb
jecxz
sub
in
inc
repnz
xor
imul
mov
fnstcw
jne
sbb
add
mov
sbb
fwait
jg
push
pop
lea
mov
shrl
inc
push
sti
outsl
jbe
dec
dec
jge
cmp
lock
sub
sbb
dec
in
jae
clc
fs
popa
fucom
aaa
xor
in
pop
outsb
fisttpl
sub
out
test
add
add
mov
sub
add
in
int3
insl
adc
popf
js
mov
daa
inc
hlt
adc
sbb
xor
push
imul
mov
negl
in
ror
cltd
fsubl
add
insb
jp
hlt
xchg
pop
adc
sub
cmpsl
pop
mov
mov
sub
push
add
jle
in
fwait
inc
pop
xchg
aas
sbb
in
call
loop
sbb
notl
lcall
outsl
imull
mov
xchg
jecxz
lds
push
gs
push
xchg
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
mov
jle
jge
jle
movb
test
mov
test
mov
out
or
mov
push
addl
sub
arpl
or
addr16
add
lock
mov
push
stos
pop
ss
fwait
mov
sub
ret
icebp
push
push
pop
mov
lods
add
jge
out
push
xor
sub
adc
scas
xor
sub
xor
pop
out
in
dec
inc
clc
sbb
js
adc
push
leave
sbb
popa
in
pop
jbe
xchg
sub
pop
mov
push
subb
sbb
idivl
cmp
rorb
push
sbb
mov
andb
shlb
jecxz
add
rolb
sub
imul
mov
mov
push
inc
es
cmp
inc
fisubl
loope
nop
pop
mov
jbe
dec
movsb
adc
mov
fidivl
add
lahf
in
loope
mov
fsubrs
outsl
daa
pop
jmp
mov
fs
imul
cmpb
cltd
xchg
mov
xor
lahf
and
or
mov
or
or
insb
push
into
movsl
hlt
fbld
mov
mov
add
decb
fmul
mov
std
push
aas
fimull
or
js
push
adc
xchg
pop
add
cli
jg,pn
jg
cmpsb
pop
cmc
pop
clc
cld
pop
ja
adc
popa
je
dec
jns
out
inc
inc
dec
push
mov
mov
setl
dec
push
les
ljmp
aaa
xchg
nop
lret
stos
xchg
out
lret
mov
add
leave
inc
mov
or
and
das
add
dec
inc
cmp
insl
pop
je
pop
loop
fdivs
and
mov
dec
arpl
xlat
cmpsb
sbb
pusha
out
xchg
jecxz
cmpb
xor
or
adc
fcomp
or
mov
jb
out
dec
mov
aas
pusha
test
mov
inc
aad
dec
arpl
pop
lahf
xor
pop
ss
lods
inc
jmp
push
pop
cltd
shlb
std
fstl
sbb
lcall
dec
repz
xor
adc
cmc
and
shll
mov
pop
lret
xlat
iret
or
cmc
pop
sub
arpl
xor
popl
sub
mov
cmp
out
push
icebp
push
sub
mov
xchg
inc
xor
or
xlat
leave
jl
test
adc
jmp
nop
push
and
pusha
addr16
pop
outsb
pop
mov
mov
scas
hlt
sbb
mov
sbb
test
sub
adc
outsb
aas
in
pop
push
and
jg
sbb
add
enter
sahf
dec
orb
xchg
sbb
data16
jne
lods
andl
das
pop
leave
test
push
incb
jbe
inc
jnp
jno
roll
lret
mov
bound
and
aaa
into
in
add
cmpb
pop
shlb
xor
std
inc
mov
xchg
sub
ficomps
dec
cmpsb
sbbl
push
push
repnz
jp
fistl
adc
imul
rcrl
in
cmp
fs
dec
xor
dec
addr16
outsl
adc
lret
sub
pop
gs
mov
cmc
or
add
mov
lds
add
addb
inc
gs
add
aam
rcr
cmp
pop
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
or
and
outsl
jge
jle
fstpt
xor
mov
push
jnp
mov
jl
jle
cmp
push
pushw
cmp
adc
push
imul
sahf
jecxz
inc
jno
ret
push
pop
imul
shll
inc
repz
xchg
pop
push
sbb
mov
jecxz
pop
sub
cwtl
stos
xchg
jp
aaa
add
clc
xorb
dec
add
adc
mov
insl
sub
loope
inc
push
sub
roll
and
rcl
js
add
pop
mov
in
dec
out
adc
add
or
aam
jg
inc
xchg
adc
jns
decb
jg
dec
fs
aad
inc
inc
imul
cltd
dec
fsubl
repnz
aam
mov
add
mov
test
lret
add
xchg
adc
repz
cmp
mov
in
sbb
je
sbb
inc
loop
mov
je
shll
aam
mov
mov
jno
push
mov
cmp
inc
xlat
arpl
cmp
js
sahf
xchg
or
cwtl
outsl
in
inc
dec
or
fcoms
sbb
pop
aaa
aaa
dec
pop
jns
idivl
dec
fistps
jae
ret
imul
inc
sti
xchg
pushf
loop
dec
mov
imul
arpl
adc
mov
mov
imul
mov
pop
inc
cmp
repz
adc
in
sub
dec
mov
jmp
cmp
and
jge
or
mov
adc
icebp
sub
mov
cmp
push
push
jle
into
cwtl
push
fsubr
aas
data16
ss
sahf
xchg
jno
lds
pop
inc
rcrb
les
mov
js
data16
btc
aas
mov
add
fwait
ja
add
daa
mov
sub
andl
dec
shl
inc
sub
movsb
cwtl
xor
ret
in
pop
movsl
loop
sbb
das
sti
out
loop
dec
adc
add
ss
leave
mov
or
dec
sub
cmp
jo
push
pop
mov
inc
cwtl
aas
addl
je
arpl
nop
pop
jl
int
sbb
les
decb
ret
pop
push
or
mov
imul
inc
pop
mov
jp
mov
imul
ljmp
xor
cli
fisubrl
cltd
icebp
stos
cmp
jae
pop
jecxz
push
inc
jl
popa
mov
pop
scas
adc
ret
inc
sub
ds
fbstp
push
cmp
push
mov
test
and
add
push
dec
clc
mov
scas
das
mov
aaa
add
cmpsb
outsl
lcall
out
xchg
xchg
inc
mov
outsl
pop
pop
push
sbb
fcos
inc
loop
aas
pop
test
fldenv
imul
jecxz
push
or
fstpt
adc
iret
xchg
fnstsw
mov
jg
lock
in
xchg
xchg
popa
int3
data16
movsb
clc
cs
imul
cmp
inc
test
push
out
loope
arpl
jmp
mov
mov
or
push
push
sbb
cmp
out
sbbb
aad
popf
fimull
adc
sti
test
mov
je
out
setnp
cmpsl
mov
insb
mov
into
test
cli
mov
decb
push
es
rcll
push
imul
roll
push
aam
adc
xor
lcall
fmuls
inc
ljmp
mov
adc
inc
and
mov
cld
dec
push
sub
jecxz
hlt
adc
jns
shll
sbb
and
mov
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
fbld
mov
xchg
inc
mov
scas
testl
ss
xor
shr
mov
les
rep
repnz
pop
insl
jnp
ficoml
movsl
jmp
pop
add
pushf
int3
push
dec
pop
sub
lea
add
jo
mov
mov
sub
dec
bound
insb
xor
xor
les
sbb
cmpsb
dec
inc
adc
lcall
or
lcall
mov
xchg
fsubrs
ja
mov
in
inc
mov
adc
pop
pop
mov
dec
jecxz
in
cmp
mov
pop
mov
xchg
xchg
imul
and
cmp
mov
imul
lods
daa
fidivrs
xor
stc
and
jns
in
mov
inc
jno
pusha
dec
cmpsb
imul
addb
mov
lret
add
adc
subl
inc
aad
jno
fprem
call
jge
sub
iret
imulb
jge
cmp
in
pop
rorb
pop
push
ljmp
jmp
rorl
xchg
and
inc
cmc
pop
mov
push
jp
jno
lock
insb
mov
cld
pushf
filds
pop
mov
pop
mov
add
adc
pushf
ret
test
add
stos
dec
jnp
and
and
dec
mov
lret
adc
lods
mov
fs
lret
outsl
addr16
adcl
pop
pextrw
mov
call
jle
lcall
lea
scas
fnstcw
pop
mov
icebp
dec
mov
and
or
jg
loope
dec
cmp
dec
ret
daa
ljmp
dec
les
aaa
mov
in
sbb
ljmp
jbe
cwtl
lahf
pop
add
mov
sbb
test
sub
sahf
jecxz
test
or
or
dec
mov
mov
add
push
sti
jg
jns
shl
pop
mov
adc
and
lock
mov
fwait
mov
adc
sti
popa
jns
into
xchg
pop
jle
sub
inc
pop
mov
dec
hlt
adc
loopne
adc
in
and
and
popf
lahf
cmp
decl
add
or
js
sarl
mov
and
mov
pop
lcall
dec
lcall
cs
in
inc
pushf
sub
imul
mov
lcall
cmp
lds
or
push
lds
jle
cwtl
pusha
pop
sub
xchg
pop
das
arpl
add
cmp
dec
lock
jne
push
test
fdivrs
clc
pop
and
inc
lahf
aam
mov
int
mov
pcmpeqb
insl
jae
test
dec
insl
add
and
mov
inc
shll
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
cmp
sub
xor
jle
and
stos
sub
mov
jb
xchg
stos
and
mov
dec
inc
roll
rdmsr
repz
push
xor
loop
insb
lahf
lahf
sub
lds
mov
mov
adc
jns
mov
lds
pushf
shlb
je
cmc
cmc
pushf
push
ljmp
shlb
ds
call
cmp
mov
fdivs
imul
jp
adc
stos
mov
fdivrp
fildll
cmp
sbb
adc
or
js
mov
out
xchg
mov
iret
cmp
and
icebp
fcom
es
decl
insb
das
rcr
clc
test
stos
or
jg
mov
or
popa
and
fsubs
xchg
fdivp
pusha
sbb
cmpsb
push
push
jns
insl
repnz
pop
push
xchg
scas
mov
dec
ljmp
imul
and
loope
push
sti
lock
mov
or
imul
icebp
push
jmp
rcrl
mov
pop
sub
imul
in
dec
sarl
and
into
sti
mov
cmp
mov
insb
adc
cmpsl
jmp
sub
mov
dec
or
and
movsl
add
dec
push
dec
pop
sar
pop
rclb
push
pop
shl
mov
test
test
out
push
outsl
sub
lods
jmp
aaa
fnstcw
mov
jns
mov
push
mov
dec
fcoml
sahf
mov
lds
adcl
add
jl
aam
pop
sbb
xchg
aad
neg
daa
pop
adc
fdivl
xor
inc
and
mov
inc
push
bnd
decb
sbb
and
or
mov
pop
mov
scas
lahf
data16
out
mov
das
adc
das
jne
mov
or
movsb
sub
bound
fdivp
daa
mov
fdivrs
in
cmpsb
gs
das
sub
and
jbe
adc
test
andb
mov
dec
push
sub
sahf
mov
xchg
mov
pusha
push
cmp
xchg
insb
fs
lds
pop
dec
jl
jmp
xchg
push
and
xor
mov
out
sub
mov
or
add
rorb
repz
push
xor
sub
xor
and
inc
dec
dec
movsl
or
gs
sti
push
loopne
push
jg
jecxz
rcrb
sar
jecxz
sbb
mov
bnd
push
push
cmpsb
rcl
loop
jns
clc
pop
dec
nop
out
push
xlat
push
dec
cmp
daa
ror
andl
and
jo
sbb
or
mov
iret
push
ja
and
push
subl
sub
mov
add
jmp
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
and
add
adc
push
mov
mov
mov
jmp
mov
jecxz
jnp
ret
mov
in
cmp
push
aas
fistpll
push
and
xor
scas
inc
sahf
fst
loop
mov
cmp
dec
dec
adc
mov
cmp
jl
popf
xor
popf
idivl
mov
dec
xchg
dec
xchg
lahf
loop
or
outsl
iret
arpl
rcrb
popa
pop
shll
adc
xor
es
js
push
sbb
decb
cmp
pop
xchg
pop
sbb
or
xchg
jle
push
es
loopne
cmp
or
and
rorl
mov
pop
stos
lds
repnz
sub
loope
dec
xor
ds
popa
push
adc
movsb
rcrl
movsl
lret
jne
icebp
mov
inc
testb
lcall
imul
jl
sti
pop
enter
mov
daa
xor
adc
xlat
dec
jne
aas
hlt
inc
test
add
dec
cltd
push
sbb
jae
mov
stc
negb
lahf
mov
ds
mov
ja
adc
jl
test
icebp
lahf
jl
xor
andb
jp
push
add
add
sub
adc
mulb
and
inc
mov
cli
mov
pop
pop
adc
je
insl
pusha
addr16
fiaddl
loope
and
sbb
inc
mov
sbb
cmp
idivb
or
ficoms
lods
call
adc
pop
inc
jg
adc
repz
and
jge
dec
or
or
xor
in
inc
xlat
add
into
outsl
inc
push
xchg
and
pop
mov
mov
stc
push
andl
mov
jp
jmp
cwtl
inc
or
cmp
mov
repnz
cmpsb
roll
sbb
orb
and
insl
xchg
test
mov
pop
jl
push
push
mov
jae
out
popa
mov
cmpl
jg
sti
cmc
sub
imul
jnp
cmc
popa
jl
lods
sub
mov
dec
mov
push
and
cmc
loopne
xchg
dec
xchg
mov
mov
mov
pop
rclb
dec
aam
jecxz
repnz
mov
or
fiadds
les
jno
shll
xor
aaa
xlat
divl
ret
jo
leave
adc
movsb
sbb
mov
hlt
jnp
das
imul
stos
push
jno
xor
testb
cmpsb
pop
mov
aam
pop
aad
fsubrl
jmp
push
cmc
cs
fnstenv
stos
daa
test
dec
pop
pop
outsb
and
mov
and
scas
add
and
sbb
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
loop
jmp
jle
jge
jle
jg
xchg
lods
in
jmp
aad
clc
xlat
sti
xchg
fistl
lret
jle
push
dec
mov
and
jl
xchg
sub
adc
negl
inc
push
lahf
ss
ja
loopne
pop
mov
incb
fdivl
es
ror
xchg
sbb
cmp
jecxz
xor
xor
mov
and
insl
jne
xor
add
adc
adc
jne
add
push
fwait
fldenv
in
clc
nop
ficoms
fwait
xor
push
aam
add
pop
cmc
or
and
popf
jg
sbb
sar
mov
mov
sbb
add
insl
aas
mov
jp
je
add
push
pusha
mov
enter
mov
loopne
cmp
xlat
mov
hlt
sbb
js
lock
arpl
loop
mov
sbb
fstps
xchg
cs
pop
les
add
add
jmp
sub
push
inc
push
pop
imul
jae
ljmp
push
lret
add
or
sarb
nop
cltd
gs
push
dec
adc
mov
fildl
es
movsb
jb
or
mov
das
xchg
fwait
dec
mov
add
leave
dec
movsl
adc
shll
mov
xchg
and
xchg
stos
xchg
es
pop
leave
fcoms
or
jecxz
insl
cmp
rorb
lock
jmp
push
adc
out
mov
ficoms
pushf
xchg
int3
dec
push
aam
and
cmp
lahf
dec
jo
push
xchg
aad
mov
enter
cmc
cs
jo
sub
jg
test
lahf
lods
pop
mov
mov
movsb
add
pop
inc
jl
mov
and
mov
add
gs
aam
ret
dec
mov
jnp
loope
call
jmp
push
lret
out
mov
xlat
adc
pop
js
push
into
lret
das
xchg
mov
sbb
insl
push
fwait
dec
mov
fs
mull
ds
push
mov
gs
xor
xor
popa
jae
arpl
mov
int
ja
sbb
dec
push
das
xchg
adcl
xchg
mov
in
bsr
insb
stc
lea
aam
test
jno
pushf
sbb
fdivrs
mov
cs
sub
adc
cmp
dec
cs
leave
mov
adc
aad
das
outsl
xlat
sti
add
jo
add
sub
mov
arpl
loop
or
test
lds
shl
mov
subl
lcall
cwtl
data16
cmpb
outsl
mov
scas
jnp
dec
pop
fstl
sahf
dec
sahf
sti
mov
fstps
es
add
das
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
js
popa
mov
jle,pt
xor
jle
mul
fidivrl
std
push
inc
insl
dec
testl
cmp
aaa
cli
int3
push
lret
cmp
pop
sbb
rcll
cmp
mov
jmp
xchg
inc
push
fdivs
xchg
in
shlb
pop
and
pop
pop
or
scas
jae
loopne
jmp
rcrl
in
stos
cwtl
loope
sub
xor
or
cs
add
xlat
fs
rorb
lret
int
in
xchg
lock
and
dec
pop
and
or
mov
int
imul
or
inc
adc
add
mov
jl
push
iret
call
mull
cmpsl
mov
out
push
pop
push
mov
sub
dec
inc
adcl
lcall
pop
adc
gs
ss
jl
push
or
cmpsl
pop
cs
movsl
ja
sub
in
int
lea
and
jo
adc
ja
rolb
push
js
cmpb
xchg
call
cwtl
inc
rcl
jge
sarb
xor
movsb
ja
les
scas
sti
mov
adc
cmp
mov
stc
test
aam
fnsave
dec
stc
cmp
mov
pmaddwd
inc
and
ret
lret
push
lds
daa
mov
sub
cmp
xorb
cwtl
pop
jae
ret
hlt
xchg
aad
repz
adc
mov
movl
or
je
hlt
mov
shlb
jge
xchg
xor
nop
lcall
jns
pop
add
mov
sbb
sbb
dec
and
arpl
sbbl
shlb
jnp
pop
mov
pop
mov
adc
inc
or
add
repnz
push
aad
jg
aam
and
rclb
aas
in
xchg
mov
dec
fmul
shrb
push
fimull
fcomp
fldenv
cmp
inc
sub
stos
xchg
addr16
mov
dec
insl
pop
addr16
mov
stc
jmp
cmp
add
jle
hlt
jnp
push
iret
fwait
lods
in
mov
mov
pushf
xor
sar
test
in
dec
add
xchg
cmp
or
sarl
js
mov
leave
pop
roll
fsts
gs
xor
pop
pop
scas
lcall
dec
sub
aad
loope
pop
sbb
imul
push
mov
nop
jmp
pop
dec
dec
sbb
or
lret
push
call
in
stos
dec
xor
shlb
pop
inc
sarl
rcrl
push
es
jnp
mov
outsl
fbstp
and
in
xor
sub
dec
insb
fsts
xchg
test
test
pushf
enter
pop
xchg
xor
ljmp
sbb
mov
or
cmp
mov
jmp
test
jno
ja
shrb
repnz
xchg
loopne
jle
xor
jle
jg
jae
jp
push
xchg
sahf
adc
jb
inc
and
out
cmp
mov
mov
xlat
ror
clc
lret
xchg
push
push
cltd
jle
xor
idivl
jmp
repz
xor
adc
ja
dec
push
add
iret
xor
sub
cli
lds
or
and
fsts
insb
out
sub
and
clc
bnd
jno
hlt
and
das
stos
jno
inc
cmp
mov
jno
enter
xchg
aad
add
mov
loop
inc
xchg
arpl
aad
test
jmp
sbb
sbb
mov
inc
test
lret
xor
leave
gs
pop
sbb
xchg
adc
div
mov
lret
nop
ret
push
mov
imul
xchg
sbb
popl
add
pop
call
adc
xchg
add
pop
pop
mov
mov
xlat
cmp
scas
pop
lds
arpl
aam
or
out
sub
or
js
mov
pop
push
jg
mov
imul
push
sub
shll
loopne
loope
pop
repz
or
sbb
push
int
or
in
insb
das
outsl
ss
out
jo
or
in
std
inc
mov
mov
dec
sub
sbb
pop
jne
xor
sbb
cwtl
repnz
call
call
scas
sub
aas
or
loop
outsl
cwtl
test
push
aam
bound
out
cltd
pop
and
ficompl
inc
xchg
inc
sub
jecxz
mov
shll
lods
stos
leave
add
imul
mov
add
lahf
and
sbb
mulb
add
shll
dec
pop
sbb
leave
xchg
fstps
test
mov
out
xor
jecxz
dec
pop
mov
movsl
add
insb
and
cmpsb
in
daa
xor
pop
dec
int3
es
add
jp
pop
les
aaa
aaa
loope
imul
xlat
xor
subb
push
cmc
je
mov
jb
mov
pushf
mov
mov
call
push
idivb
movsl
aaa
push
mov
in
sbb
fnstenv
popf
and
popa
testb
jmp
or
outsb
mov
add
xor
aam
sub
push
lds
mov
sub
repz
out
adc
addr16
pop
or
xor
pusha
in
or
jecxz
lock
out
popa
sbb
jnp
mov
push
pop
sti
dec
cmp
repz
lahf
inc
pop
test
mov
nop
subb
fnsave
stc
fldl
popf
add
xor
loop
rcrl
push
adc
or
mov
stc
repz
mov
jnp
xchg
lods
test
jbe
in
incb
imull
xchg
mov
and
cmpsl
xchg
pop
loopw
movsb
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
rclb
jle
xor
jle
repnz
sub
fwait
jo
mov
or
sbb
inc
inc
mov
sbb
dec
adc
pop
das
sbb
inc
xchg
aam
out
jnp
test
dec
and
in
sub
inc
sub
sub
call
int3
adc
cmpsb
fwait
xchg
xchg
mov
jo
push
and
xor
sahf
push
pusha
mov
sub
sub
push
jno
pop
aas
mov
sub
nop
je
ficompl
mov
mov
leave
adc
inc
bound
lret
cmp
es
mov
movsl
inc
js
out
inc
test
je
xchg
movsb
fcmovnb
dec
outsl
sub
mov
sbb
gs
push
mov
stos
inc
in
dec
mov
sub
sti
mov
or
out
jmp
test
add
out
adc
mov
dec
mov
lods
fldcw
adc
or
xchg
scas
xor
aam
in
sub
arpl
sbb
cmp
aaa
loop
add
out
gs
fisubs
xlat
cmc
call
xchg
jnp
dec
push
pop
dec
stc
mov
and
mov
int
pop
lds
arpl
rol
clc
mov
in
shlb
clc
fimuls
pop
and
iret
outsb
out
jl
js
sub
into
jne
sbb
clc
into
mov
in
or
mov
mov
xchg
mov
addr16
jp
adc
xor
popa
and
stos
decb
push
pushf
xchg
add
les
mov
mov
data16
pop
stc
mov
es
pop
ss
imul
sub
sarb
adc
fcmovnu
cmp
sub
js
sbb
lahf
loop
repz
jl
xchg
dec
inc
push
jae
xlat
cmp
fdivrl
mov
imul
mov
leave
ret
pop
divb
inc
jp
and
add
pop
mov
xchg
fs
test
adc
and
enter
jecxz
jbe
xlat
jge
cmpsb
push
aas
add
out
stos
adc
jle
bound
mov
cltd
add
jnp
fisttpl
sbb
adc
stc
shl
out
push
dec
aam
mov
mov
scas
test
xor
loopne
mov
inc
aad
adc
cwtl
mov
xor
pusha
jo
xor
mov
add
adc
gs
sti
shll
rclb
fwait
jle
ja
lds
cs
lahf
arpl
repz
subl
xor
into
jne
aam
mov
cmp
dec
hlt
ss
mov
add
lcall
inc
jae
sbb
call
cli
pop
cmpsl
sahf
push
ds
push
pop
dec
mov
push
add
push
ror
sbb
hlt
push
add
aam
jae
incb
movsl
andb
nop
push
in
pusha
xor
clc
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
int3
in
dec
data16
jle
fistpll
push
rcll
pusha
sbb
sub
push
dec
dec
lret
push
test
cmp
fs
dec
repz
add
inc
xlat
orl
jns
outsl
popf
mov
lods
es
test
jb
sbb
leave
fwait
and
add
add
lret
push
in
in
out
scas
mov
sub
jecxz
outsb
shll
push
mov
jb
xchg
mov
ret
jl
cmc
dec
and
iret
dec
add
mov
xor
or
ret
or
xor
dec
dec
add
test
ds
mov
xor
xchg
jns
cmc
imul
stc
ss
xchg
xchg
jle
add
js
push
xor
xchg
xchg
jnp
movsl
ret
and
cmp
hlt
testb
mov
aad
mov
dec
add
mov
nop
dec
push
jae
sbb
icebp
ljmp
decb
and
or
jl
mov
cmc
outsl
add
sti
inc
sbb
xlat
test
push
add
sahf
xchg
fcoms
lret
iret
scas
pop
jb
lods
stos
daa
pop
hlt
jl
cwtl
inc
add
jg
inc
test
xchg
mov
stc
mov
test
xlat
xchg
mov
push
mov
aam
fidivl
sub
leave
inc
jns
cmp
jle
jns
push
mov
jmp
mov
aas
movswl
xchg
in
sub
loopne
leave
arpl
pop
std
js
push
out
inc
jae
imul
add
shll
push
add
xchg
cmc
je
push
je
stos
lcall
bound
ds
mov
bnd
test
and
push
in
sahf
mov
mov
test
pop
jmp
lock
loope
xor
nop
push
xchg
jae
outsl
shll
dec
out
xor
into
or
cli
sbb
dec
mov
sahf
push
stc
push
inc
cld
xor
loope
repz
notl
mov
in
cmpsb
fstpt
xorl
pusha
jbe
je
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
pop
outsb
mov
jle
in
cmp
jmp
sub
pop
movsb
jne
inc
orl
jnp
jbe
popl
testb
jo
sbbb
mov
xchg
mov
mov
mov
pop
rclb
testl
jge
out
inc
add
cmp
or
xchg
adc
lock
and
ds
jb
out
orl
bound
add
dec
in
shrb
cmp
mov
sbb
sub
shlb
in
loope
cs
mov
push
push
jle
int3
push
call
stos
imul
add
bound
in
movsl
ret
add
cmp
cmp
push
cmp
les
out
loopne
or
scas
int
test
cmpsb
in
pop
jb
xchg
or
fs
and
add
or
add
ret
les
adc
fstpt
or
jno
shl
inc
mov
sbb
leave
loop
mov
or
aaa
cld
inc
mov
mov
test
pop
xor
arpl
dec
mov
psubusb
dec
inc
stc
pushl
loopne
imul
mov
mov
leave
repnz
xor
jnp
fwait
cmc
sbb
jne
fiaddl
shl
and
insb
mov
mov
jae
shrb
outsb
cmp
or
jno
add
dec
mov
lock
fbstp
data16
loopne
loop
add
mov
andb
mov
inc
icebp
dec
sbb
outsb
xor
dec
scas
leave
pop
aas
and
mov
aad
nop
push
pop
push
pop
and
or
mov
or
push
pop
aad
scas
repnz
jo
push
sbb
fisttps
dec
pop
mov
pop
cmp
xor
xchg
sub
stos
mov
push
inc
sub
ret
lods
jecxz
nop
je
mov
aaa
es
fwait
sub
stos
and
xchg
push
sahf
cmp
movsb
mov
xchg
cmc
xchg
aad
out
adc
xchg
pop
push
xor
push
ja
push
loop
addl
lods
mov
leave
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
cmpsb
bound
jle
jge
jle
xchg
nop
mov
xchg
cs
inc
mov
ljmp
scas
lret
push
jne
add
dec
mov
lods
pop
das
jg
inc
add
mov
ds
mov
sar
or
sarl
das
inc
or
iret
xor
scas
mov
jns
mov
out
jnp
stc
or
mov
cmp
fstl
cwtl
adc
pushf
jns
imul
data16
pushf
add
pop
jne
lods
pop
frstor
adc
lcall
pop
adc
mov
in
daa
inc
imul
enter
push
xor
mov
out
pop
push
jg,pn
jno
inc
xchg
neg
in
std
sub
movsb
sub
pop
nop
int3
pop
pop
xchg
mov
insl
js
jmp
pushf
mov
sahf
pop
jo
enter
xchg
test
cmp
imul
jle
adc
repnz
mov
push
out
adc
push
mulb
mov
mov
jle
sahf
add
pop
and
and
lods
data16
sub
pop
xor
int3
std
les
jp
xor
adc
dec
or
push
jl
lods
iret
pop
pop
pop
in
lock
cmp
jne
js
enter
xchg
and
jp
inc
mov
cmp
cltd
out
movb
mov
xor
fbstp
repnz
mov
out
jg
xor
sub
lret
es
jg
mov
fs
and
jae
xchg
jns
mov
push
xchg
icebp
xor
enter
push
rep
mov
sbb
push
outsl
addl
xchg
xor
fsubrs
jle
push
out
imul
mov
jo
imul
imul
icebp
cs
mov
mov
lcall
scas
push
es
sub
out
gs
fnsave
int3
daa
iret
sbb
sarb
jns
popf
insb
test
dec
xlat
shll
xchg
fs
push
rclb
scas
icebp
mov
andb
cwtl
mov
shrb
mov
push
out
orl
hlt
loope
jp
ret
lods
pop
clc
arpl
jno
xchg
leave
cmpsb
inc
in
jb
lock
lds
push
dec
lret
ficoms
jg
cwtl
or
dec
sbb
fsubl
idiv
jae
push
mov
daa
pop
pop
push
jmp
push
ljmp
jge
outsl
jmp
fsubl
out
ja
jp
xchg
les
pop
ds
jo
loope
push
sarl
scas
arpl
pop
lock
fbld
stc
daa
scas
pop
shrb
lock
add
enter
inc
or
push
xchg
movsl
xchg
scas
inc
call
inc
mov
mov
mov
dec
or
jbe
mov
pop
and
leave
mov
dec
cld
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
pop
cltd
dec
xlat
push
iret
jle
and
jle
pushf
lret
mov
rclb
adc
sub
out
jo
pop
test
mov
inc
popa
insb
xchg
mov
mov
inc
push
inc
mulb
dec
les
mov
jno
inc
sbb
adc
dec
adc
int
les
xor
test
sub
add
aam
sub
xchg
add
sahf
inc
xor
jo
lahf
outsb
jecxz
roll
jg
pop
lods
jne
sbbl
jg
adc
scas
or
sarb
addr16
jmp
aad
add
js
inc
scas
test
orl
adc
mov
sub
push
jg
jecxz
jb
das
fcmovnbe
and
js
iret
fstpl
aam
sub
testb
mov
sarb
jge
pop
xchg
mov
ds
fnstcw
faddl
in
cmp
sub
or
js
or
out
ljmp
and
dec
aad
out
sub
inc
jge
dec
pop
out
mov
maskmovq
notl
mov
xor
xchg
push
xlat
int
sub
in
out
loopne
xor
sub
adc
adc
lods
inc
sub
imul
adc
scas
ja
stos
xchg
jge
xchg
sbbb
adc
push
adc
ss
or
test
jecxz
stc
sub
xor
pop
pop
loop
xchg
lret
sbb
or
push
daa
iret
sarb
or
fdivl
test
mov
testw
out
loop
push
cli
mov
cmp
xor
ljmp
in
mov
mov
mov
aas
cmpl
je
push
repz
inc
mov
adc
enter
daa
lods
xchg
jno
and
mov
xlat
push
js
lret
mov
jecxz
xlat
out
out
jl
shl
mov
xchg
subl
rcll
stc
in
cmp
mov
stc
add
xor
jb
push
xor
xchg
inc
xor
push
jmp
pop
cmp
enter
jb
add
and
add
out
leave
insl
sub
mov
arpl
xchg
scas
stos
add
loop
and
outsb
adc
test
dec
or
push
cmp
pop
mov
jge,pn
pop
shufps
lret
movsl
pop
push
cmpsl
lock
push
jo
dec
mov
pop
test
xchg
sub
lret
mov
and
xor
mov
push
lret
aas
aad
xchg
jg
pop
movsb
sbb
dec
mov
cld
mov
scas
int3
pusha
pop
js
jbe
dec
cmpsb
out
lret
pop
test
push
xchg
aaa
sahf
and
call
sbb
or
in
jecxz
ret
push
add
mov
inc
loop
inc
xchg
into
dec
cwtl
push
cmp
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
mov
jle
and
jle
loop
in
pop
jne
loopne
imul
jge
and
mov
push
cmp
int
mov
sub
fdivrs
ffree
mov
jg
xlat
out
pop
test
jg
pop
and
mov
lods
daa
ds
mov
jmp
sbb
lcall
iret
test
and
mov
stos
adc
adc
aad
adc
pop
mov
or
test
incl
or
shlb
cmpsb
sbb
getsec
mov
dec
xor
adc
jae
pop
cltd
leave
mov
rolb
xor
jno
adcl
in
adc
sahf
sbb
xor
xorb
and
rorb
pop
out
push
pop
fimull
push
push
add
movsb
movsb
stc
push
ret
sarb
adc
adc
dec
jno
cmp
js
fwait
inc
in
insb
mov
int3
push
out
mov
fstps
movsb
arpl
and
in
mov
int
and
int
cmp
aad
das
outsl
adc
shrb
mov
mov
jo
push
sbb
and
inc
push
pop
imul
ds
add
outsb
jmp
ljmp
mov
mov
das
sbb
aam
adc
icebp
or
push
mov
lods
lds
pop
pop
xchg
mov
dec
pop
adc
adc
inc
adc
aad
push
pusha
in
pop
mov
and
sub
cmc
push
fs
into
xor
sub
jns
and
jne
push
dec
mov
insl
pop
std
movsb
or
in
dec
xchg
cmpsb
push
movsl
dec
xchg
xchg
xor
xor
insl
in
pop
cld
rcrl
add
mov
nop
cmpsb
jbe
jmp
mov
fidivrl
scas
das
jne
mov
imull
rclb
sbb
orb
bound
cwtl
push
inc
push
xlat
mov
or
add
or
mov
xchg
adc
adc
imul
push
cltd
scas
test
jge
fsubrp
sub
mulb
cmp
sub
test
dec
lods
jecxz
mov
int
and
push
stc
clc
push
mov
xchg
loope
lock
sti
push
mov
lahf
jmp
mov
and
cmp
imul
push
nop
sbb
xor
cmp
les
cmp
push
adc
mov
jbe
cli
cmpsb
shrl
jne
leave
or
jmp
sar
rclb
lock
jle
jne
or
scas
mov
mov
mov
out
sbb
ud1
cmp
push
ja
dec
push
icebp
xlat
repnz
call
jl
push
inc
pushf
mov
xchg
pop
xchg
jmp
mov
dec
inc
test
or
lods
cmpl
xor
fidivl
rcrl
out
cmpsl
mov
dec
mov
mov
cld
push
xlat
mov
lahf
jno
push
aad
int3
dec
scas
lock
adc
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
inc
divb
sub
jle
in
jle
jne
add
jecxz
popl
sete
lahf
adc
loope
test
cmp
or
fstps
jb
fstps
jp
ljmp
fucomip
cmp
pop
bound
nop
cmp
mov
aaa
pop
movsb
hlt
ja
mov
out
ljmp
scas
cmc
pop
jecxz
call
popf
push
movsb
call
push
mov
dec
add
add
pop
rcll
out
rolb
mov
shrb
and
xorl
xorl
lock
inc
jecxz
pop
and
inc
out
sub
loop
test
in
jns
dec
xor
bound
popf
xor
ss
daa
pop
jecxz
cmpsl
mov
outsb
dec
sbb
iret
sbb
jp
mov
out
ljmp
pop
das
cmp
hlt
pop
outsl
dec
mov
jnp
movl
inc
cmp
push
iret
pusha
sbb
jnp
or
jle
mov
sub
xlat
xor
sub
clc
test
cli
movl
and
jmp
leave
jp
push
push
pop
add
ljmp
sub
pusha
test
pop
into
fbld
xchg
test
pop
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
inc
nop
xlat
jle
in
jle
mov
inc
subl
sahf
add
cld
push
xor
pop
int3
inc
out
mov
in
js
jmp
pop
rorb
mov
xor
mov
mov
add
dec
lcall
mov
push
mov
cmc
and
rcr
dec
push
add
sub
pop
addb
xchg
jns
movsl
pop
test
cmp
cmpsb
pop
push
fistpll
loopne
dec
mov
add
sub
aad
lods
pop
mov
divb
push
mov
add
aam
mov
xorl
stc
dec
imul
dec
imul
das
es
inc
dec
or
aam
mov
cmc
pop
inc
sub
xchg
mov
mov
jge
jl
jmp
mov
mov
xor
jp
popf
or
sbb
stos
pop
ds
cli
xorb
xor
scas
das
stos
jno
stos
imul
or
dec
sbb
addb
cmpb
or
xchg
push
and
addr16
pop
add
ja
or
mov
iret
cmp
mov
lcall
movsl
mov
sti
sbb
and
shr
pop
dec
sub
fnstcw
test
out
sbb
mov
and
jo
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
xchg
je
jle
jg
aad
xor
inc
fiadds
shrl
pop
ljmp
xchg
lods
sub
fmull
outsl
inc
ret
aaa
or
pop
or
outsb
push
xchg
outsb
xchg
mov
inc
daa
jmp
dec
jne
and
sbbb
mov
psubsb
daa
int3
call
enter
call
lds
xor
fisttps
mov
loop
faddp
out
sbbl
cmp
inc
adc
icebp
inc
addb
outsb
outsl
or
pop
pop
xchg
cmp
data16
jg
jo
scas
push
adc
ret
push
enter
pop
flds
fwait
mov
cmc
adc
jge
les
lahf
das
repnz
cmpsl
ja
movsl
adc
and
or
fldenv
std
popf
push
out
es
mov
pop
in
jb
mov
leave
mov
subw
data16
ds
rclb
dec
lcall
outsb
jo
mov
xchg
cmpsb
push
test
sub
xor
loopne
or
adc
movsb
icebp
stc
inc
and
lret
cmpsl
push
dec
push
bound
sbb
sub
lds
dec
sarl
je
sub
fsubr
aas
push
int3
pop
mov
add
orb
dec
or
add
fcmovb
inc
hlt
std
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
xor
jnp
in
sarb
in
jle
cmp
sbb
push
lods
jmp
xchg
int
in
adc
ds
or
pusha
push
and
loope
fs
outsl
dec
xor
movsl
cmp
sbb
fcoml
lea
xchg
cmp
dec
xor
mov
pop
push
daa
es
sub
int
xchg
ss
mov
clc
out
mov
jb
jns
out
sti
mov
push
or
adc
mov
dec
movl
in
inc
mov
jno
cmp
mov
or
dec
leave
mov
or
mov
push
push
mov
orl
mov
push
fadd
jp
dec
les
jg
movsl
andb
push
ja
xor
les
mov
push
mov
popa
jno
pusha
mov
xor
mov
ffreep
push
xchg
lcall
xor
jg
xlat
lds
outsb
je
or
mov
clc
adc
in
std
movsb
sbb
or
push
xorl
or
loope
lahf
cmpsl
jge
mov
and
jae
lcall
dec
cs
inc
jb
dec
or
aad
rolb
sahf
mov
xor
add
jmp
adc
test
or
sahf
mov
jle
jg
jle
cld
shr
or
cli
test
movl
lods
popf
sbb
insl
mulb
sbb
xor
pushw
jmp
sbb
xchg
jge
dec
call
mov
jp
js
adc
dec
jg
push
xchg
or
push
adc
mov
nop
mov
insl
pop
fs
sub
pushf
adc
push
cmp
xchg
xchg
loopne
xchg
mov
sub
inc
stos
das
jmp
dec
mov
jne
repz
and
jnp
and
loopne
mov
dec
mov
lds
bound
mov
push
or
loope
ret
inc
rorl
jecxz
dec
xorb
add
sub
shlb
mov
or
mov
xchg
pop
loop
std
xchg
cwtl
mov
mov
ja
and
cltd
adc
imul
mov
pop
xchg
ljmp
std
jns
mov
js
imul
push
punpcklwd
sahf
or
lret
xor
ds
inc
xchg
pop
test
xor
outsl
shl
mov
shl
jl
das
mov
xor
clc
cltd
ficompl
mov
rcr
adc
scas
jg
out
xchg
inc
mov
out
add
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
sub
cmp
jle
in
jle
lods
das
push
jns
ds
adc
inc
std
add
sbb
pop
int
mov
or
mov
inc
inc
add
xchg
mov
repz
xchg
cld
or
mov
xor
icebp
lock
or
xor
sub
push
scas
mov
fcompl
adc
mov
rcll
ret
shr
fs
push
pop
mov
pop
sub
popa
outsb
mov
xor
js
sarb
ror
jb
and
out
push
lods
and
scas
loope
xorb
mov
lretw
dec
jecxz
aad
or
enter
mov
outsb
ljmp
sarb
jnp
fcoml
gs
dec
lds
out
mov
insb
cwtl
lds
mov
hlt
aad
push
sbb
jno
mov
push
gs
pop
push
lret
jae
int3
mov
out
cmp
enter
mov
cmc
into
xor
and
add
adc
aam
push
nop
stc
lret
mov
jge
or
mov
movsb
popf
movsl
enter
ja
in
cltd
das
shll
int3
pushf
aas
out
repnz
sbb
inc
sbb
lret
pop
sbb
out
in
ja
lock
loop
clc
ficompl
xor
mov
mov
jns
stos
xchg
lea
icebp
or
lret
in
dec
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
pop
push
mov
in
jle
clc
out
mov
pop
ret
sbb
ljmp
push
cmpsb
inc
push
ret
fcmovb
push
mov
ja
ja
jle
mov
add
add
xchg
call
insl
or
mov
das
inc
outsl
aad
jge
xor
loop
inc
stos
repnz
cmc
or
ljmp
clc
pop
mov
dec
ja
stc
sbb
xor
dec
in
mov
mov
outsb
ret
mov
push
add
mov
jnp
jp
lock
sbb
mov
out
and
mov
hlt
pop
adc
cltd
imull
dec
sbb
loope
test
mov
jns
leave
aas
mov
icebp
xchg
jae
xchg
mov
lret
aam
push
in
jle
pop
and
sbb
int3
das
js
dec
cli
mov
jbe
xchg
xor
add
xchg
mov
jbe,pt
add
pop
push
sbb
stos
je
je
cmpb
xor
icebp
leave
movsl
cmp
mov
mov
push
mov
aaa
pop
cmp
mov
ret
xchg
shlb
notl
ljmp
movsb
pop
fistl
ficoml
cmpsl
repz
push
push
xchg
je
mov
clc
addr16
push
shl
dec
xchg
xchg
cwtl
dec
in
and
scas
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
or
mov
jle
jg
jle
push
jo
sub
mov
pop
jbe
mov
sub
loop
add
xor
pushf
stos
nop
mov
out
roll
lock
sahf
push
lock
fs
daa
mov
lahf
rcll
mov
sub
jge
pop
inc
xchg
popa
stos
idivl
jns
jle
mov
les
mov
int3
dec
iret
sub
jl
outsb
inc
mov
mov
mov
rorb
xchg
fwait
repnz
bnd
inc
inc
mov
loope
int
jb
aaa
lahf
scas
mov
cmp
cs
pushf
push
mov
mov
jne
add
out
clc
jns
shlb
std
daa
ret
jae
xchg
cmp
hlt
daa
mov
iret
xlat
sub
adc
outsb
paddd
clc
shrb
addr16
dec
cmp
addr16
clc
lock
lds
mov
movb
xchg
add
adc
loop
push
dec
jno
inc
xor
mov
xor
lods
push
dec
cld
lods
and
sub
test
aaa
shl
movsb
xchg
mov
leave
mov
mov
imul
lock
fmulp
fnstcw
mov
adc
dec
jo
sahf
sti
ss
outsb
xor
inc
adc
cmp
ret
or
jp
test
decl
add
idiv
decl
add
add
xchg
xor
jmp
cli
fnstsw
in
jle
icebp
and
mov
inc
cltd
ljmp
add
cmp
data16
shll
sti
ret
cmp
movsb
out
je
adc
mov
mov
dec
push
push
add
aad
adc
xchg
mov
jne
adc
arpl
movsbl
lock
mov
xor
cmp
nop
les
rorb
or
sub
mov
pop
push
andl
jmp
clc
xor
cmp
xor
fptan
sbb
out
cmp
subl
aam
pop
pop
stc
cmpsl
and
cmpsb
sbb
inc
pop
mov
orb
cmp
filds
jb
aaa
xchg
or
or
hlt
push
es
dec
xor
daa
rcrb
push
lret
sub
sbb
sbb
stos
roll
mov
mov
jecxz
push
jmp
cwtl
aas
push
mov
cmpsb
mov
test
cmpsl
arpl
add
cmp
testl
lret
and
push
fnstenv
mov
pushf
xchg
or
jecxz
pop
mov
popf
bound
daa
adc
cmp
stc
lret
dec
mov
in
sbb
add
mov
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
mov
fidivrl
jp
jle
test
push
push
push
pop
dec
and
mov
call
push
pop
out
sbb
xchg
or
movsl
fisttps
lea
imul
xchg
int3
xor
iret
ljmp
jb
cli
xchg
loop
popf
fld
push
lea
inc
repz
and
popf
sub
xbegin
out
stos
pop
adc
mov
in
sar
std
orb
cs
outsb
fmull
mov
fsubp
scas
sahf
xor
pusha
and
cmp
inc
ficoml
sub
inc
mov
xchg
clc
lods
inc
std
xor
pop
aad
dec
inc
or
cltd
fdivr
mov
push
add
or
addr16
rcl
add
or
mov
enter
paddq
notl
cwtl
fadds
push
xchg
sti
dec
loopne
cs
push
add
insl
movsb
mov
sahf
xor
sbb
mov
mov
sti
mov
push
add
mov
lcall
jb
cmp
push
dec
rclb
push
popf
push
pop
aas
push
cmc
rorl
lds
mov
imul
push
xlat
gs
loope
stos
inc
mov
subb
inc
mov
cmp
insb
mov
mov
cmp
cli
outsb
xchg
out
in
sbb
test
push
rorl
faddp
pop
fisubrl
js
pop
in
pop
cmc
adc
pop
mov
loopne
pop
push
inc
xchg
mov
push
cwtl
incb
nop
push
sti
enter
mov
push
mov
push
out
and
mov
adc
ret
adc
mov
pop
push
or
jbe
mov
push
jne
leave
jecxz
dec
fdivrl
cmpsb
sub
leave
mov
mov
pop
pushl
push
stc
mov
arpl
adc
inc
lahf
push
test
pop
inc
fst
stos
add
test
cmpsl
dec
sahf
jns
insl
enter
pop
fwait
cli
mov
stos
movsl
setno
sub
pop
dec
out
repnz
and
popa
inc
xchg
and
ja
test
mov
cmpsl
in
pop
aad
dec
movsl
fidivs
out
cmp
inc
rcl
repnz
push
icebp
es
add
cmp
mov
psubq
les
xchg
mov
addl
sub
repnz
les
repz
xor
push
cmp
mov
cmc
call
popf
cmp
ljmp
ds
jle
dec
pop
scas
add
int3
sbb
xchg
push
xor
ja
push
enter
dec
in
fstps
enter
loope
ret
sub
adc
fisubrs
sar
mov
mov
movsl
popf
xor
rcr
dec
movl
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
out
fnstcw
jp
jle
lds
rclb
mov
mov
add
scas
hlt
mov
fisubrs
sti
sarb
pop
imul
push
daa
push
je
sbb
je
cmp
popa
mov
das
mov
add
adc
aam
pop
fidivl
adc
pop
cli
and
dec
sub
lret
add
aas
in
push
inc
xor
jno
int
sbb
xchg
in
cld
test
cs
jo
jge
nop
jb
fstps
and
into
mov
lods
xor
aaa
jbe
jnp
fstps
sub
adc
das
aad
inc
es
mov
push
and
pop
xor
or
mov
push
lret
leave
divb
lret
xlat
add
aad
es
cld
adc
add
ret
jb
add
xor
pop
mov
xor
cmp
sbb
mov
jno
repnz
cmp
int
xchg
or
insl
scas
dec
nop
or
iret
push
icebp
int3
adc
out
lret
cmp
aas
xor
or
idivl
lods
out
lret
sbb
adc
andb
out
mov
push
pop
jns
out
xorl
mov
gs
rclb
mov
sti
sbb
fcompl
sbb
rcr
cmpsl
bound
xchg
inc
iret
scas
mov
mov
int3
jge
testb
lods
loop
frstor
and
ss
adc
cmpsb
test
inc
mov
pop
add
outsb
pop
xchg
mov
outsb
int
ret
inc
dec
daa
push
sbb
pop
sbbb
adc
mov
ljmp
mov
or
sub
fldenv
and
jns
mov
cmp
push
leave
lods
adc
push
pop
cmc
jno
stos
les
dec
mov
jge
fcomi
push
into
sub
insb
xchg
cmp
adc
inc
push
mov
cmp
add
test
jp
iret
popf
popa
xor
pop
lods
xchg
test
ficomps
fists
mov
pop
out
insl
andl
and
mov
insb
je
xor
jb
inc
fwait
imul
mov
hlt
flds
mov
or
mov
ficompl
cmpl
pusha
xchg
fdivp
mov
xchg
lds
movb
or
jmp
sbb
pop
pop
mov
ret
pop
push
in
lahf
inc
mov
fistl
sub
mov
fldcw
sahf
fidivs
push
jl
js
sub
sbb
fcompl
jl
sub
mov
pop
adc
cli
inc
outsb
into
idivb
fistpll
pop
clc
shl
movzwl
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fstpl
mov
jle
jp
jle
dec
inc
xchg
mov
mov
or
push
adc
push
popf
dec
andl
jae
imul
inc
or
std
ficompl
sbb
pop
movsl
repnz
mov
test
int
mov
mov
movb
mov
xchg
imul
hlt
sahf
xor
inc
cmpsb
fstpl
mov
lds
in
add
jge
mov
xor
ds
cmp
rcl
mov
add
in
lret
imul
sbb
dec
out
leave
xchg
repnz
mov
xchg
jbe
imul
push
dec
sbb
sbb
pop
stos
and
mov
aas
or
pop
jle
cmp
test
mov
push
xor
inc
sti
clc
jns
fisubl
xor
repz
ret
sub
in
js
out
jne
insb
mov
push
fwait
call
test
adc
cli
xchg
and
pop
xchg
outsl
push
adc
sti
ret
stos
xor
jle
call
clc
filds
and
mov
xor
xor
sbb
pop
cmpsl
sbb
gs
scas
ljmp
fsts
xchg
jns
int3
mov
lods
xor
orl
pop
jp
sub
shlb
fldcw
jns
xchg
xchg
ds
adc
inc
cmp
imul
xor
xlat
cld
xchg
or
sbb
push
loopne
and
xchg
xchg
pop
cmpb
fstl
xor
jae
jecxz
pop
sbbl
jmp
out
ljmp
les
jns
jo
pop
data16
push
xor
jge
sbb
add
stos
icebp
cmp
cmp
adc
xor
mov
xchg
stos
sbb
fwait
mov
mov
adc
pushf
jg
mov
and
call
fstpt
in
rcrl
fistl
adc
xor
jl
loope
add
jb
pop
add
add
push
cmpb
hlt
sarl
sbb
sub
sub
pop
sbbw
lea
jno
mov
xchg
mov
insl
cmp
lret
sbbb
jl
test
sti
icebp
daa
adc
arpl
fadds
lods
mov
xlat
ljmp
mov
pop
push
sub
cmpl
sbb
xor
enter
fs
jae
mov
inc
popa
adc
adc
sub
jp
ror
rorb
insl
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
ret
shll
jle
jge
jle
movsb
push
sub
mov
cltd
lahf
fwait
in
push
icebp
aad
cmp
sub
and
jecxz
and
or
insl
xchg
cmp
push
popa
xor
push
push
test
sub
jmp
pop
mov
mov
std
daa
test
repnz
jp
fiaddl
and
mov
dec
and
pop
rcrb
nop
ret
inc
movsb
outsb
add
dec
adc
fisttps
add
add
push
fiaddl
aad
inc
mov
daa
arpl
push
lret
lods
rcrl
dec
xchg
in
aaa
test
sub
jecxz
rcl
xchg
add
mov
call
in
xor
test
arpl
popl
inc
jl
lahf
aam
push
add
fsub
mov
pop
andb
pop
fisubl
push
jnp
in
add
iret
dec
inc
bnd
fdivrl
fnop
mov
sub
in
cmp
cld
or
std
je
adc
sbb
clc
repz
lret
xchg
jmp
mov
mov
das
fwait
pop
fidivl
inc
sub
arpl
popa
adcl
mov
nop
cmpsb
cmp
call
dec
and
sub
sbb
test
mov
mov
popf
shll
sbb
pop
bound
daa
pop
mov
pop
pop
jbe
cmp
add
jl
jns,pt
filds
mov
addr16
aad
repnz
dec
mov
mov
and
jg
xor
fnstenv
push
or
and
add
stc
xor
fcomip
xor
or
movsb
imul
lods
xchg
pop
jl
mov
push
aad
testl
subb
or
insb
cmp
iret
dec
jl
out
and
xchg
push
cmp
daa
adc
outsb
jl
push
fstpl
imul
mov
mov
adc
xchg
xchg
repnz
shll
popf
popl
mov
xchg
xor
mov
pop
and
mov
pop
stos
cmp
push
in
cmpsb
xchg
sti
xchg
ror
std
cmp
popa
pop
outsb
adc
jb
mov
sub
and
mov
insl
mov
decb
jmp
jecxz
cmpsb
data16
xor
sbb
fnstenv
jno
bound
or
inc
sub
dec
into
pop
popf
dec
icebp
cwtl
xchg
fildll
shrd
push
cli
shll
ja
mov
in
aad
add
pop
xchg
mov
xor
jno
jl
out
or
sti
cmc
mull
repz
inc
adc
shr
sti
lock
or
leave
adc
sub
dec
lock
add
mov
mov
mov
jmp
enter
enter
sbb
mull
loopne
add
jle
jp
jle
pushf
rcll
sti
adc
lods
inc
loop
jbe
repz
adc
mov
fstpl
jbe
pop
push
or
mov
mov
stc
dec
lods
sub
cmp
fneni(8087
insl
mov
mov
pop
xchg
jp
xor
inc
mov
mov
daa
pop
sbb
gs
mov
mov
jge
xchg
push
leave
loop
shl
into
lcall
adc
adc
xchg
jle
rcrb
xor
sbb
insl
rcrb
rclb
ret
jne
inc
rcl
arpl
mov
push
addl
les
or
in
icebp
nop
sub
adcl
push
data16
ret
sub
or
dec
popf
inc
daa
sbb
xchg
dec
add
aas
lcall
lea
adc
fnstenv
mov
dec
mov
mov
sbb
sbb
xor
mov
mov
xchg
loope
cwtl
mov
push
sbbl
clc
jne
mov
ror
enter
movsb
push
imul
out
loope
adc
xor
arpl
xor
jge
out
pop
cs
or
mov
sub
pop
pop
pop
adc
arpl
out
mov
ret
add
in
mov
mov
pop
es
push
xor
adcl
aas
aad
fcomps
push
add
popf
fdivrs
jmp
and
lret
xchg
sub
pusha
sti
int3
mov
cmpsl
pop
call
dec
addr16
dec
lock
in
fcmovb
mov
fadds
xchg
nop
sahf
test
fldenv
leave
push
loop
cwtl
push
mov
pop
ret
inc
jnp
inc
dec
mov
cmp
xchg
fldcw
push
mov
popf
mov
adc
sbb
adc
pop
push
dec
lret
pop
inc
mov
sbb
jne
adc
insl
nop
jmp
dec
cmpsb
scas
ret
dec
out
inc
pop
push
fwait
aas
or
push
loopne
mov
mov
xor
add
mov
xor
xor
add
jecxz
ret
popa
lcall
dec
rcll
xor
ja
jp
jl
imul
cld
icebp
popa
ja
mov
or
xchg
sbb
cmc
mov
jae
jns
lret
sub
adc
add
repnz
or
mov
gs
xchg
pop
orl
idiv
stc
cmp
ja
rorb
out
xchg
std
dec
pop
test
mov
stos
mov
xchg
mov
jne
andb
mov
cmpsb
out
jle
adc
les
dec
movsl
jp
jge
pop
jno
arpl
shlb
sbb
xchg
sahf
jbe
out
fstpl
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
xchg
pop
lcall
jge
jle
sbb
cmc
sarb
sbbb
xor
sub
cmc
mov
pop
xchg
push
shll
push
lcall
inc
push
or
pop
loop
cmpsl
into
lahf
add
test
cmp
movsb
jl
nop
lea
pushf
mov
push
pushf
xchg
in
xor
fs
into
xor
jnp
sub
aam
cmp
or
cltd
dec
faddp
lds
shrb
negb
mov
mov
and
mov
mov
adc
lock
fnclex
sbb
nop
jmp
bound
xchg
in
dec
inc
fidivs
loope
mov
ss
pop
mov
lods
and
sub
or
sub
push
das
dec
rcrl
jae
inc
loope
outsb
pop
mov
mov
jo
outsb
sub
cmpsl
push
shrl
pushf
mov
ss
addr16
xchg
mov
mov
jne
mov
js
in
movsb
lods
imul
and
call
enter
rcl
fisttps
dec
xor
pop
out
bound
stos
loope
std
ror
push
movb
jg
adc
insl
cwtl
mul
pop
sti
xor
inc
xchg
dec
cmp
in
push
mov
mov
jl
adc
pop
insb
cmpsb
add
loop
or
popa
cwtl
psubsb
mov
stos
inc
mov
sbbl
fwait
mov
or
pop
dec
int3
popa
xchg
and
sarl
jb
mov
fistl
out
and
hlt
leave
jb
aas
jecxz
test
mov
or
fwait
cmpl
iret
adc
std
xchg
lods
in
fisubrl
incb
sub
pmaxub
movsl
imul
shll
leave
push
push
inc
cmpsb
xchg
xchg
mov
lock
cmpsl
dec
mov
fcom
xor
jae
jbe
or
mov
pop
scas
stos
and
mov
or
movsl
imul
inc
and
pop
inc
ss
or
xorl
int3
sbb
jno
push
out
adc
int
mov
mov
sbb
jge,pt
mov
loope
aas
inc
xchg
out
in
scas
cmp
or
lods
mov
les
or
lods
sbb
dec
mov
testl
icebp
mov
scas
jb
int
mov
cli
in
lret
push
push
lods
ljmp
scas
in
xor
jle
lea
sbb
das
shrb
cmp
std
iret
cwtl
pop
out
mov
into
int
jns
add
lret
movsb
push
inc
popf
ret
lahf
cli
cmc
push
aad
push
hlt
nop
bts
test
mov
add
int
and
xor
add
add
xchg
notb
sub
inc
aas
cmp
jle
jp
jle
adc
lods
cld
inc
in
popf
insl
data16
mov
cld
jns
ret
imul
fcomp
and
adc
and
inc
pop
adc
arpl
testb
xchg
stos
jge
fxch
sub
adc
aas
or
movsl
fdivrl
and
pop
pushf
ja
movb
jecxz
lret
out
es
jo
xchg
jnp
lods
mov
xchg
rol
jbe
mov
lods
je
pop
hlt
xchg
pop
pop
imul
sbb
loope
bound
sbb
mov
imul
mov
add
jns
pop
sti
pop
dec
inc
jmp
and
mov
mov
xchg
dec
add
xchg
lahf
and
sbb
jle
dec
jno,pt
xchg
pop
lahf
xor
add
les
idiv
jne
cwtl
sbb
mov
sbb
lret
jl
data16
scas
or
out
sbb
or
jno
std
lods
hlt
and
inc
insb
jb
fcmovne
dec
scas
and
xor
adc
mov
mov
and
call
jb
lods
lods
in
cli
cmp
xchg
add
mov
mov
sub
call
cmpxchg
out
fstl
xchg
mov
mov
dec
push
arpl
wbinvd
fs
mov
pop
jmp
es
subl
gs
lds
inc
xor
mov
pop
pop
jne
or
mov
pushf
ljmp
lea
shlb
stc
shlb
fidivrs
pusha
scas
sub
sti
div
inc
adc
cmpsl
fcompp
popa
inc
scas
pop
cmc
xorl
lods
int
jb
out
mov
cmp
and
cmp
push
fwait
cmpb
mov
jge
inc
incl
repz
and
mov
mov
xor
mov
or
in
jecxz
iret
repz
movsl
or
fucomi
dec
push
in
decb
cltd
and
shll
xor
enter
xor
jge
dec
jbe
or
and
fmull
or
mov
icebp
and
xchg
fldl
xchg
into
aaa
push
mov
mov
inc
adc
mov
mov
out
cs
sbb
fs
xor
gs
insl
nop
xchg
pop
push
pop
clc
inc
jl
add
or
pushf
outsb
outsb
sbb
js
push
sub
cmpsl
jns
add
jns
jg
out
xor
and
mov
jnp
mov
addl
adc
daa
dec
enter
add
inc
pop
es
add
and
jae
shlb
and
out
jne
cmpsb
das
rcrb
pop
es
cmp
and
add
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
addl
jp
jle
add
aaa
repz
and
pop
mov
stos
inc
xor
imul
arpl
ficoms
jb
mov
and
mov
or
cmp
mov
xchg
or
push
push
insb
js
clc
mov
dec
mov
xchg
test
ljmp
and
int
xor
aaa
cli
push
add
dec
dec
or
push
notl
in
imul
mov
jae
mov
or
sahf
mov
sbb
jge
ja
fdivrs
pusha
cmpsb
icebp
test
xor
mov
nop
cmp
popf
xor
xchg
jp
js
xor
push
pop
sbb
out
ja
push
jne
inc
scas
bnd
hlt
jae
sub
dec
addr16
sub
xor
pop
cld
pop
out
insl
mull
push
mov
mov
loopne
mov
rcr
or
pop
int3
push
test
movb
jmp
mov
adc
dec
fnstsw
ss
mov
out
sub
adc
mov
mov
or
jne
mov
les
in
into
dec
dec
dec
and
clc
cmp
xlat
aam
pop
das
adc
push
insl
fimuls
sbbl
lods
jns
iret
push
dec
add
mov
rcr
dec
xchg
xor
xchg
jbe
je
adc
ds
les
mov
notl
or
movsl
and
dec
and
sub
add
enter
das
or
and
push
pushf
and
testl
ss
xchg
dec
dec
pop
xchg
push
pop
stc
mov
inc
test
add
sub
cld
and
call
add
in
cli
loope
pushf
fstpt
add
mov
pop
cmp
jno
inc
sahf
and
aaa
lock
outsl
mov
or
pop
cwtl
add
dec
adc
xchg
pop
scas
adc
xor
cmp
ss
popf
inc
cs
scas
scas
adc
push
aas
adc
or
mov
call
dec
dec
addb
pcmpgtd
test
data16
mov
sub
icebp
or
sbb
jne
mov
fwait
jp
leave
xchg
repz
stos
ret
add
inc
fwait
inc
outsb
mov
pop
jmp
outsl
xor
push
jge
push
adc
or
xchg
adc
jo
call
shlb
jno
jae
mov
sub
enter
adc
outsl
inc
lret
test
push
mov
fidivl
sub
mull
sub
loop
fldcw
inc
jb
imul
mov
pop
daa
dec
cmp
sbb
shl
addb
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
cwtl
add
jle
jp
jle
dec
sbb
leave
int3
sub
arpl
push
mov
nop
aad
xchg
rorl
or
push
cmc
or
in
and
int3
fidivrs
jp
xchg
fsts
mov
stc
jae
push
movsl
test
jmp
cmp
sub
pop
push
fldlg2
cmp
pop
popf
stc
bound
int
mov
roll
and
add
sahf
add
adc
aam
and
inc
test
shrl
lret
adc
cmp
and
xchg
adc
test
mov
and
xlat
lock
mov
pop
sub
negl
jno
loopne
xor
mov
xchg
pop
mov
mov
ret
push
aaa
xor
xor
loopne
mov
add
xlat
loopne
add
inc
addr16
je
mov
adc
or
test
jp
aaa
jmp
loopne
icebp
insb
mov
adc
pop
jne
mov
pop
lods
mov
in
data16
xor
push
push
dec
cmpsl
sub
xchg
pop
inc
sbb
dec
add
xchg
mov
mov
shll
xchg
mov
jne
mov
icebp
lret
pop
outsl
repnz
jmp
mov
aad
outsl
xor
std
inc
mov
mov
inc
jg
std
mov
mov
cmp
xchg
ja
not
mov
add
repz
xchg
clc
popf
inc
mov
neg
shlb
addr16
cmc
mov
add
sub
aas
xchg
xchg
fldcw
push
imul
popf
and
pop
cmp
js
sub
aaa
push
sbb
mov
pop
ror
fdivrl
out
or
push
add
rcll
push
lret
jecxz
js
dec
push
in
cli
mulb
push
pop
or
lret
dec
mov
stos
adcl
lds
sbb
jle
push
add
push
out
in
scas
jbe
out
mov
xchg
loopne
das
fbld
enter
js
shrb
or
lahf
pop
ficoml
or
and
sti
fs
lods
ss
pop
repnz
stc
rorl
mov
cmp
mov
in
jae
movsl
sbb
sub
jg
sbb
mov
jo
test
lret
xor
or
arpl
xchg
incb
test
les
cltd
pop
cmp
test
adc
verw
lock
sbb
and
inc
dec
xor
jmp
imul
icebp
popf
push
xor
lods
mov
jp
xor
adcb
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
add
movsl
fisttpll
jle
jp
jle
dec
jo
out
mov
bound
cld
in
and
cmpb
xor
repz
sbb
fstl
dec
xchg
mov
dec
aam
push
and
std
pop
mov
std
fstpt
outsb
cmc
out
mov
push
dec
sbb
pop
push
pusha
fucomp
mov
popf
addb
sbb
sub
and
lahf
notl
pushf
popa
in
adc
bound
sbb
out
fnstenv
cmp
imul
inc
inc
icebp
roll
xchg
jecxz
test
pop
int3
or
sbb
xchg
jle
push
sub
movsb
mov
add
int3
push
hlt
sub
inc
out
mov
imul
ljmp
cld
mov
popf
push
sub
jp
mov
push
mov
jge
jo
cltd
fwait
cs
movsl
cmp
mov
stos
lahf
inc
xchg
lea
negb
xor
push
lds
imul
xchg
or
sub
int
ret
ja
outsb
movsb
mov
mov
push
icebp
sub
bound
xor
inc
push
xor
sti
in
mov
shrl
add
dec
adc
popa
jmp
call
jb
mov
mov
jmp
cltd
lds
mov
mov
jp
rolb
mov
sti
sbb
imul
xchg
push
arpl
pop
mov
mov
mov
test
mov
mov
je
or
iret
push
sbb
push
xchg
xor
jg
vfrczps
push
mov
lock
xchg
and
lods
das
mov
mov
aaa
mov
mov
xchg
fimull
mov
bound
aad
in
mov
mov
pop
cmc
aam
pop
cli
push
mov
aas
xchg
sbb
cs
mov
cld
lret
repz
mov
rolb
dec
out
outsb
adc
and
push
mov
in
pop
pop
adc
ficoml
fstp
push
faddl
pop
mov
jmp
and
int
mov
loopne
scas
dec
in
xchg
ret
xchg
popa
mov
or
xchg
xor
popf
push
jns
enter
sbb
js
jle
pop
daa
adc
jge
mov
inc
jge
mov
pushf
and
mov
push
roll
and
mov
fcomip
fiadds
cmp
jo
mov
jb
add
std
hlt
mov
add
dec
decb
dec
movsb
mov
hlt
xchg
push
lret
out
xchg
test
test
jno
inc
jno
or
popf
jge
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
loope
push
call
imul
imul
negb
pop
insb
sbb
shl
adc
xor
sbb
popf
push
addb
mov
inc
leave
mov
sarl
hlt
rclb
das
fsts
xchg
xchg
xor
das
sub
loop
in
or
hlt
clc
ja
int3
imul
xchg
int3
xor
mov
jmp
inc
adc
sub
psllw
aad
mov
jne
andb
and
clc
mov
stc
xchg
or
test
mov
and
mov
pop
in
cmpsb
out
inc
std
xchg
les
dec
xchg
jmp
xor
stos
dec
push
and
repnz
lea
sbb
leavew
subb
outsb
popl
pop
push
fcoms
xor
xchg
adc
sbb
xchg
xor
leave
add
inc
js
and
ss
shll
sub
aaa
fwait
or
push
enter
pop
sahf
into
jne
mov
xchg
int
mov
pop
fsubl
cmc
xchg
js
sub
mov
dec
das
mov
loope
xor
pop
out
lahf
jbe
cwtl
sbb
or
je,pt
rdmsr
xor
aaa
std
pop
jmp
daa
xor
xor
ljmp
mov
pop
jmp
mov
mov
mov
inc
fidivs
xlat
repnz
jg
add
je
test
pop
fistl
ja
xchg
push
mov
and
lea
fcompl
pop
push
xchg
stc
insl
sub
sbb
cli
in
outsl
repnz
mov
mov
sub
inc
roll
idivb
loope
psraw
shrb
mov
xor
push
jnp
inc
pop
repnz
lds
pushf
clc
push
dec
enter
sbb
sub
test
stos
into
and
dec
addr16
in
pop
rcrl
shll
bound
lea
push
dec
xchg
fisubl
movsl
and
inc
lods
ljmp
sub
or
into
dec
add
loopne
fidivl
ss
psrld
je
comiss
decb
addl
in
push
jg
shr
push
jecxz
out
mul
push
mov
mov
nop
jecxz
or
fldcw
xchg
mov
and
cmp
mov
pop
xchg
arpl
add
add
mov
in
pop
adc
dec
aad
aad
dec
call
mov
mov
cwtl
mov
push
sbb
stos
xchg
mov
inc
inc
in
aas
mov
loopne
iret
sub
mov
sub
test
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
clc
jle
jp
jle
ss
mov
mov
movsl
pop
aas
jge
dec
and
rcrl
jo
sbb
dec
pop
mov
int
lods
and
test
jns
inc
mov
outsb
cmpb
or
xchg
outsb
lods
push
in
test
cwtl
loop
push
out
scas
sahf
mov
int3
popa
loop
xlat
insl
jg
inc
adcl
inc
out
push
push
add
and
mov
cmp
cld
insb
inc
and
inc
loop
movsb
movsb
pop
mov
pop
pop
xchg
pop
ret
mov
push
xchg
pop
sbb
call
mov
lods
rcr
imul
sub
push
mov
pop
xor
std
inc
or
vsubss
mov
sub
test
push
adc
stos
sub
sbb
mov
pop
sbb
aaa
gs
mov
push
cltd
push
shrl
rorb
jl
mov
pop
lcall
ror
xchg
pop
pop
popf
lock
loop
outsl
or
aad
lcall
or
leave
pushf
or
xorl
mov
lret
mov
add
into
fwait
mov
imul
push
mov
sbb
pop
movntq
in
popa
dec
rcrl
xor
mov
mov
mov
fsubs
insl
add
enter
das
dec
test
sbb
fistps
mov
xchg
les
xor
mov
xchg
mov
mov
mov
loopne
adc
xchg
jbe
cmpsb
push
pop
pushf
xor
out
mov
adc
xor
xchg
scas
dec
xor
add
adc
mov
xchg
mov
sbb
xorb
inc
gs
add
jl
pop
jmp
xchg
mov
sub
ret
hlt
pop
cmpsb
push
sti
sbb
xor
dec
insl
into
pop
popa
in
pop
mov
out
movsl
xchg
xor
fstpl
not
mov
xorb
les
mov
scas
imul
cltd
mov
into
cmc
loopne
repnz
and
pop
mov
sub
jbe
mov
cmpsb
leave
add
test
shll
cmp
or
add
sub
in
sahf
jnp
pop
mov
into
dec
in
fimuls
xor
fildll
sti
mov
xor
pop
or
test
fs
add
mov
test
jae
out
neg
cmpl
pop
xor
movsb
movsl
pushl
js
hlt
inc
jmp
xchg
cmovb
xchg
sub
jo
cli
push
add
stos
and
and
mov
jle
jns
sub
clc
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
push
movups
jle
nop
nop
mov
sub
cmp
cmp
rcll
sub
mov
mov
pushl
jo
iret
cmp
lea
out
shrl
in
and
out
cmp
lods
adc
imul
mov
and
and
inc
push
and
or
gs
pop
mov
pop
and
leave
or
cmp
pop
jg
subl
inc
pushf
xchg
inc
int3
test
push
rcl
cmpsl
fnsave
inc
aad
ds
jo
cwtl
dec
aaa
out
xchg
sub
fsubl
sbb
push
cmp
aam
push
lock
push
jecxz
pop
dec
jl
das
cmp
push
lcall
mov
frstor
jl
mov
popf
pop
pusha
sub
push
cmpsb
adc
lcall
scas
cmpsb
aaa
mov
ljmp
xchg
js
jbe
cs
es
lods
and
mov
mov
inc
stos
jnp
cmp
push
aaa
aas
fs
dec
and
popf
add
js
mov
out
icebp
sub
int3
ret
insl
adc
xchg
dec
cld
xor
test
add
cmp
in
sub
fwait
pop
out
iret
test
add
addr16
add
sahf
out
mov
pop
cmp
push
idivb
pop
cs
in
lock
rolb
ja
sar
jo
iret
rcl
fcoms
jecxz
mov
mov
lret
repnz
aas
inc
pop
cmc
ret
mov
rcll
pop
inc
dec
add
mov
push
loopne
push
push
icebp
jbe
inc
sar
in
jo
dec
pop
out
stc
fcoml
push
sub
pop
xor
aam
outsl
mov
push
xchg
or
add
dec
cmp
rol
popa
fwait
ret
inc
nop
or
sbb
cwtl
movb
rorb
lea
fistl
mov
pop
lahf
shll
fdivs
movsl
mov
popa
aas
sub
adc
mov
roll
and
inc
nop
sub
mov
ljmp
mov
cmovno
adc
mov
inc
fmull
add
dec
jne
aaa
pop
and
adc
pop
jle
repz
xor
stos
pop
nop
mov
sbb
fistpll
xchg
inc
or
gs
cmp
pushf
cwtl
push
sbbb
aad
in
adc
stos
add
lahf
stos
mov
cmpsl
jb
test
and
popl
push
xor
ficompl
shll
jl
rorb
xor
mov
mov
push
push
fisubrl
imul
sbb
sub
pop
test
and
dec
fisttpll
sbb
add
out
xor
mov
loop
into
xor
xchg
xor
or
jle
jp
jle
adcl
fisubl
aaa
cmp
pop
xor
cmp
add
mov
mov
jo
push
jge
hlt
xor
xor
ret
mov
xor
xchg
ljmp
test
stos
mov
sbb
pop
leave
pop
clc
cwtl
lods
testl
fcomp
loopne
jo
aas
ljmp
test
movsb
fstps
jnp
cmp
and
out
fildl
movl
push
xchg
arpl
bound
push
push
mov
mov
inc
jno
cmp
jbe
lcall
xor
test
inc
xchg
push
pop
cltd
movsb
jg
std
leave
pop
jb
fldcw
negb
push
repz
mov
push
stos
shlb
add
sbb
mov
scas
popa
imul
sub
xchg
ret
call
fs
pop
test
inc
pop
sbb
sub
xchg
insl
pop
je
mov
mov
inc
pop
sbbl
cmp
iret
mov
adc
repz
repz
js
rol
les
add
xor
fwait
dec
pusha
mov
jno
sahf
lods
fs
adc
imul
dec
test
icebp
insb
xor
dec
cmp
arpl
inc
std
inc
adcb
stc
jae
jo
xor
or
xlat
or
jmp
mov
sub
push
mov
adc
adc
or
mov
data16
aam
imul
rolb
mov
push
dec
test
mov
ljmp
jbe
mov
jb
jg
pop
out
cmpb
dec
cwtl
dec
jo
test
xchg
push
cmc
leave
mov
lret
lock
xlat
aad
sbb
sub
flds
mov
sub
movsb
add
push
movsb
adc
jno
pop
cmp
loop
cmp
leave
mov
push
cld
mov
hlt
mov
fstl
add
inc
shlb
push
sahf
pop
leave
insl
sub
jb
out
cs
cli
aaa
mov
cmp
sbb
outsb
mov
pusha
movsl
jb
cmp
jae
or
fs
inc
pop
add
mov
mov
cmpsl
loop
and
scas
push
pushf
int3
into
sub
out
ja
cltd
pushf
push
pop
mov
fdivl
adc
mulb
mov
cmp
jp
dec
add
pusha
cmp
imul
test
add
call
push
xor
scas
es
int
or
xchg
sub
dec
xchg
lahf
les
and
sub
sbb
outsb
inc
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
arpl
sbb
jle
incl
cmpb
mov
dec
jl
scas
rcll
pushf
in
xchg
and
xor
in
add
in
enter
mov
stos
rclb
lahf
cmp
mov
dec
stos
das
pop
lret
shrl
sbb
fildl
pop
and
int
cmp
cltd
imul
je
or
mov
adc
lods
cmc
push
jge
bound
aad
and
mov
inc
push
hlt
jnp
popf
pop
mov
movsl
cmp
rol
icebp
daa
pop
jmp
mov
mov
test
lret
sbb
cmpsl
repz
adc
add
icebp
loopne
movsl
jp
ja
dec
mov
pop
cltd
jns
dec
push
fmuls
lcall
popa
push
cmp
sbb
jg,pt
inc
xor
cmp
sbb
jbe
das
pop
repnz
and
out
rcl
fs
icebp
jns
movsb
xchg
push
sub
aad
ret
adc
mov
jo
push
and
aas
fwait
inc
ret
mov
sahf
fiaddl
popf
xlat
jmp
jno
cli
or
in
or
add
repnz
mov
cmp
mov
test
pop
mov
adc
push
mov
arpl
jmp
ret
mov
mov
fs
fincstp
test
fistps
jmp
mov
xchg
cwtl
pop
outsb
push
jecxz
jmp
std
out
jge
into
pop
pop
jno
and
adc
jle
inc
mov
cltd
call
pushl
sub
xchg
stc
mov
sahf
xor
sbb
mov
bound
pushf
decl
rdmsr
lods
cli
add
mov
add
out
pop
call
or
mov
enter
sbb
push
mov
out
adc
ljmp
bnd
xchg
adc
lods
sub
test
push
pop
and
fcomps
mov
sub
inc
aaa
fs
outsb
adc
push
mov
js
repz
movsl
stos
lahf
sub
mov
mov
lahf
pushf
add
xor
sbb
mov
xor
add
popa
mov
fcoml
xor
scas
stc
and
mov
add
pop
xchg
aas
dec
sti
add
jae
or
push
xchg
mov
lods
dec
call
mov
lds
or
stc
xchg
lahf
loop
clc
subb
mov
aam
adc
mov
mov
mov
aaa
data16
mov
mov
aad
cmp
scas
jge
bswap
or
ror
notb
jnp
xlat
psadbw
inc
pusha
jno
mov
je
leave
push
mov
les
dec
mov
add
push
xor
lods
adc
xor
rcll
xchg
mov
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
sbb
int3
xor
mov
jge
jle
push
push
jbe
sub
jno
jbe
mov
sti
jb
sbb
fwait
xor
popa
adc
jne
jne
clc
std
inc
rdtsc
nop
gs
test
and
lds
sti
daa
outsl
fsubrs
orl
addr16
imul
add
aam
jmp
inc
popa
dec
insb
and
movsb
adc
or
sbb
js
mov
popa
mov
mov
ret
sub
fs
nop
mov
mov
and
cmp
xlat
dec
out
pop
mov
sar
call
movsb
adc
ja
push
mov
out
out
adc
mov
mov
idivb
xor
pop
inc
test
pop
push
mov
pop
xchg
dec
ret
push
pop
hlt
adc
inc
push
pop
cld
fwait
add
mov
cmp
aam
addr16
push
clc
xlat
aas
xchg
out
int3
js
xor
jo
jp
push
push
pusha
cmp
jp
mov
pop
cmc
or
mov
shll
xchg
test
jg
sub
inc
sarb
jbe
test
dec
push
fldcw
jg
insb
or
sarl
pop
insl
outsb
stos
mov
cmpsb
popa
sub
jmp
fst
pusha
nop
aas
jns
xor
xchg
cmpsb
ficomps
xlat
adc
fcomip
loopne
lea
xlat
int3
lods
pusha
mov
popa
pcmpeqd
adc
sub
dec
sub
add
aad
add
and
lods
mov
cmp
mov
xchg
xchg
leave
xchg
mov
out
movsl
inc
out
inc
scas
ljmp
insl
push
rcrl
std
mov
je
sub
std
adc
dec
push
pop
xchg
fistl
rclb
add
mov
pop
std
pop
lods
push
mov
and
sub
filds
idivl
mov
call
add
je
mov
shrb
test
out
popa
mov
adc
outsb
pop
outsl
repnz
dec
mov
jl
sbb
push
cmc
dec
jno
lahf
mov
xor
xchg
add
xchg
xor
push
notl
arpl
xorl
clc
adc
push
xor
dec
dec
mov
repz
sbb
incl
pop
imul
icebp
push
jmp
push
iret
xchg
enter
cld
sarl
sub
scas
jle
fiadds
pop
rcrb
enter
push
dec
decb
insl
pop
addr16
mov
jns
xor
cltd
shlb
xchg
xor
or
gs
push
sbb
in
add
repz
add
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
push
or
stc
sub
and
aam
mov
in
push
xchg
out
popa
xchg
int
repz
mov
leave
fdivrl
add
dec
iret
cmp
cwtl
sub
push
aam
arpl
cmpsb
pop
xor
jae
sbb
inc
push
mov
adc
add
push
mov
adc
add
stos
adc
adc
pushf
cmp
fbstp
and
pop
fsts
mov
mov
xchg
xor
push
jnp
and
adc
or
jg
add
fldl2e
js
xchg
add
and
lods
inc
xor
pop
pop
addb
jmp
sarb
ss
add
test
add
push
adc
insl
pop
and
sub
mov
flds
fsubs
movsb
adc
sub
push
lods
jp
jp
test
add
movsb
dec
add
cmp
mov
jp
jp
pusha
push
in
add
rcll
jno
mull
xor
mov
lret
xchg
cmp
stos
cltd
in
xchg
movsl
cmp
adc
pop
mov
cltd
in
arpl
and
inc
mov
and
gs
insb
mov
lahf
jnp
nop
jnp
stos
xchg
into
out
and
arpl
outsl
mov
sbb
test
adc
adc
movsb
and
xchg
add
cmp
jmp
adc
stos
add
adc
aas
jecxz
ss
lcall
test
mov
in
jg
je
xchg
out
ret
add
mov
push
jbe
pushf
mov
mov
outsl
mov
cmp
hlt
xchg
jae
mov
and
mov
jnp
sahf
and
xorl
mov
xchg
xor
in
fnsetpm(287
adc
lahf
cmc
xor
inc
mov
das
sbb
xor
xor
lret
ljmp
in
inc
add
int3
shlb
rorb
int
scas
inc
sbb
mulb
mov
mov
insl
dec
sub
sahf
iret
pop
jb
scas
lcall
clc
dec
cmpsl
dec
or
lock
scas
pop
mov
fsubr
push
ret
mov
cmpsb
ds
pop
jmp
aaa
mov
mov
jnp
fidivl
dec
mov
cwtl
push
push
jae
fiadds
fsub
dec
lret
add
or
loop
inc
lret
in
push
shrb
add
and
xor
dec
clc
sbb
aas
test
shll
lods
mov
decb
mov
mov
mov
das
aas
repnz
dec
or
rcll
pusha
jns
mov
scas
jns
mov
in
jge
arpl
out
cmp
or
pusha
mov
mov
cmp
cli
std
loop
sti
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
adc
shll
xchg
jle
jge
jle
jae
shlb
arpl
arpl
add
adc
adc
jle
sbb
outsl
clc
or
repz
mov
das
sub
mov
xor
loope
dec
mov
scas
pop
cmp
sbb
and
pop
xor
jl
mov
into
mov
imul
sbb
dec
imul
test
pusha
das
or
fcoml
pop
loopne
adc
in
cmp
mov
mov
mov
repz
cmp
jecxz
in
fwait
sub
sub
push
test
jecxz
dec
xor
mov
lret
adc
pushf
jmp
push
jbe
dec
jecxz
add
cmp
jo
cld
daa
movl
xor
adc
push
pop
inc
loopne
adc
mov
lcall
cmp
test
gs
mov
cmp
aam
cltd
ror
lret
push
inc
test
clc
rcrl
push
pusha
adc
arpl
jl
lret
inc
mov
popa
cwtl
fistpll
imul
fdivl
inc
jno
addr16
outsb
push
out
insl
mov
test
mov
cmp
jg
pop
int3
or
inc
fcompp
imul
adc
push
jle
repz
out
xor
stc
das
lods
subb
movnti
inc
sub
js
sti
mov
lock
push
test
lea
arpl
xchg
sbb
xor
lea
mov
mov
pop
add
or
out
sahf
push
aaa
addb
sub
stos
xchg
add
fidivrl
jbe
pushl
stos
dec
or
dec
lea
ret
inc
ffreep
mov
sbb
cltd
mov
aam
arpl
push
adc
push
cmp
neg
data16
aad
loope
jmp
imull
out
std
aad
fwait
stc
test
xor
push
jae
out
jl
mov
sti
dec
sub
xchg
iret
ljmp
loope
cmp
adc
and
push
lahf
jg
inc
pop
out
dec
pop
jecxz
mov
sub
push
cwtl
mov
xorb
sub
inc
xor
movsl
mov
adcb
popf
push
std
addl
lahf
jb
cmp
cld
in
xor
loop
in
xchg
xchg
mov
test
lahf
sub
adc
lock
cmp
xlat
jnp
fsubrl
shl
adc
push
in
cmp
int3
jnp
cmp
daa
push
cmpsb
aas
dec
jb
jle
pop
xor
les
mov
pop
add
pop
outsl
das
js
test
aaa
mov
pop
push
push
arpl
shl
test
mov
mov
sub
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
mov
xchg
jle
jge
jle
cmpsl
jnp
pop
inc
add
arpl
add
jae
imul
popf
ret
xor
mov
inc
daa
sbb
leave
icebp
test
and
and
jae
imul
in
lods
inc
add
jbe
cwtl
add
jb
mov
ja
xor
xor
add
test
lods
mov
cwtl
in
pop
scas
dec
and
mov
pop
cmp
test
push
lods
imul
les
fistps
cwtl
fwait
mov
lock
call
adc
in
je
ja
rolb
out
popf
mov
xchg
fistps
in
xchg
xor
push
pop
pop
cs
inc
dec
or
and
mov
push
cmp
xchg
pop
cli
in
data16
test
xchg
repz
mov
data16
movsl
fwait
push
pop
adcb
cmp
mov
mov
and
test
fsubrs
cmp
xchg
mov
xor
xlat
xlat
lret
icebp
jne
in
push
in
xchg
idiv
insl
mov
sub
mov
mov
pop
push
lds
xchg
xchg
gs
push
out
rol
imul
mov
imul
pusha
jge
push
je
hlt
outsb
dec
pop
lea
test
mov
daa
mov
loopne
icebp
pop
outsb
mov
pop
iret
inc
test
ljmp
dec
addb
ss
jb
ljmp
mov
sbb
jae
mov
pop
or
adc
addr16
sub
js
cmp
frstor
aad
sbb
mov
pop
jmp
sbb
sbb
jecxz
out
add
push
mov
popf
jle
xor
xlat
adc
cmc
outsl
adc
jmp
in
inc
cmp
add
shrb
ss
push
pop
adc
mov
dec
mov
icebp
out
sbb
and
or
fcmove
mov
pushf
mov
xor
dec
inc
ja
lahf
dec
loopne
lret
arpl
lea
jnp
mov
fdivl
mov
cwtl
pop
aad
sarb
lret
or
jl
lds
insb
mov
sbb
pop
dec
cmc
mov
divb
dec
mov
and
std
loop,pt
dec
mov
jg
or
xchg
mov
xchg
sbb
cmp
sbb
jb
cmp
push
mov
push
push
gs
int
mov
or
sbb
mov
mov
cltd
inc
mov
test
pop
sbb
fildl
adc
cltd
outsb
lods
adc
adcl
mov
mov
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
or
xor
nop
jle
jge
jle
test
mov
jb
sbb
dec
jle
stos
dec
mov
sub
sti
add
push
lcall
xlat
mov
pop
inc
cmp
shr
stos
out
inc
lds
cmp
sbb
mov
sbb
lea
sbb
shll
in
sbb
lcall
xchg
cmpps
mov
inc
lods
fisttpl
test
sahf
lods
xchg
add
adc
bound
cmp
pusha
data16
push
push
cmp
jo
lahf
scas
dec
jnp
incb
dec
adc
mov
loopne
dec
pusha
sti
sbb
mov
or
scas
jl
mov
pushf
mov
aam
xor
adc
add
leave
pushf
jne
add
fisubrs
dec
or
inc
in
lods
lret
inc
aad
mov
fsubrs
add
je
movsb
inc
mov
fisttpll
sbb
cmp
sub
add
fisubl
fidivs
sbb
sub
push
jmp
xor
loopne
loopne
scas
pop
testb
mov
leave
push
pushf
cmc
pop
jns
cld
repnz
lods
fsubp
rclb
lcall
pop
inc
aam
or
push
xchg
and
stos
xchg
out
roll
push
aas
xor
or
ret
orb
adc
pop
mov
add
fnstenv
jp
pop
push
push
mov
xchg
dec
sub
pop
mov
pop
cwtl
sub
sub
jns,pt
cmp
jecxz
mov
jbe
mov
jg
sbb
enter
out
cmp
pop
lea
jp
mov
push
pop
sub
ja
mov
repnz
daa
inc
xchg
call
or
arpl
testb
push
jge
loopne
and
test
push
adc
je
mov
in
out
sub
pushf
sub
add
push
jbe
ret
ret
jle
cmp
aas
lods
jle
push
cltd
arpl
bound
pop
test
lock
insl
jnp
pop
sti
mov
adc
sbb
sub
ror
adc
aas
mov
pop
dec
mov
xchg
add
xlat
add
and
ja
insl
xor
adc
mov
lods
iret
xchg
mov
jbe
fidivl
out
es
fnsave
jns
fadds
arpl
call
xchg
adc
scas
mov
mov
cmp
adc
fdivl
push
add
sub
es
ds
ljmp
addr16
lods
lock
fidivrs
push
jecxz
inc
add
mov
lea
jmp
das
subb
mov
xor
lock
jle
jge
jle
leave
ja
pop
cwtl
test
js
mov
mov
sub
insb
push
cld
shlb
sbb
loopne
fdiv
inc
xorl
mov
fcoml
lea
aam
mov
rcll
adc
int3
rcl
sub
cli
es
negl
cwtl
jb
mov
sub
mov
std
push
cld
push
mov
popa
outsl
pop
jg
popl
aam
insb
jg
dec
add
scas
in
popf
mov
mov
pop
lock
cwtl
jg
ds
sbb
cmpl
popf
push
and
ret
sbb
shlb
pushl
mov
dec
fwait
cmpsl
pusha
insl
loopne
add
mov
iret
lret
or
outsl
jge
mov
jbe
sbb
push
mov
daa
pcmpeqw
inc
add
jmp
mov
mov
js
ja
movl
lret
in
outsb
insb
inc
push
xchg
sti
pop
inc
jle
or
lret
daa
inc
mov
ss
dec
cmp
sbb
cmpl
push
sub
daa
add
addr16
out
lock
add
or
inc
lea
inc
imul
fidivrs
repnz
gs
push
push
cmpsl
loopne
jno
push
xlat
add
sbb
dec
daa
cld
in
movsl
xor
pop
dec
push
cmp
pop
scas
pusha
aaa
and
or
lret
push
xchg
inc
nop
adc
hlt
jo
lods
aas
mov
lahf
adc
jno
or
dec
fucomi
ret
cli
jmp
adc
loopne
mov
insl
mov
ret
fstl
popf
shll
movsb
lret
jb
out
add
pop
std
xor
clc
add
xor
cltd
adc
cmp
sub
rolb
je
les
cmc
pop
xor
jns
leave
cwtl
imul
cmp
inc
rol
test
icebp
push
pop
in
push
xor
mov
sbb
inc
push
sti
add
or
xor
jnp
ss
scas
push
sub
sbb
push
inc
add
mov
sahf
sub
push
xor
hlt
jnp
and
push
idivb
roll
jge
xor
je
loop
cmc
cltd
fsubl
decl
jne
xchg
jmp
mov
ja,pn
adcb
stos
mov
pop
in
sub
mov
cltd
pop
movsb
mov
cld
adc
mov
xchg
and
cltd
and
cltd
cmp
push
outsl
mov
test
add
push
sahf
popa
xorb
pushf
fwait
ret
scas
subl
cmp
fcompl
nop
leave
fcoms
dec
xchg
lods
xchg
call
out
test
daa
out
popa
cmp
mov
cmp
out
push
or
add
add
cmp
adc
aad
fcoms
adc
xor
jge
jle
dec
jnp
xchg
jbe
loop
out
inc
mov
popa
pop
scas
pop
mov
pop
cmp
cmp
xchg
add
mov
xchg
dec
in
sbb
rcrl
ja
fwait
aam
sub
mov
jmp
sahf
movsb
jg
mov
les
jecxz
ret
xor
and
repnz
sbb
jecxz
stc
out
mov
cmpsb
pop
adc
jb
xor
addl
add
daa
popl
add
add
rorb
js
lods
movsl
cmp
ljmp
loop
test
int
cli
mov
les
test
call
push
xchg
aam
xchg
stos
shl
push
or
add
bound
pushf
jmp
push
adc
or
xor
outsl
mov
xor
or
pop
sbb
xor
and
pop
jb
lods
or
mov
sbb
shlb
xchg
lock
sub
pop
dec
push
jae
pop
insl
push
fistps
enter
push
leave
sbb
cs
add
sbb
cmp
pop
lods
out
and
pop
and
andb
mov
add
sub
aad
cmp
scas
stos
jo
imul
lods
out
mov
movl
repnz
xor
xor
pop
and
jl
adc
xchg
test
pop
push
fmul
daa
cmpsb
mov
mov
sub
js
jae
cltd
add
lock
rorb
jne
jecxz
outsl
loopne
mov
shlb
xchg
inc
pop
gs
andb
js
push
test
dec
ljmp
xor
xorl
cld
push
sub
add
push
xchg
push
sbb
sbb
cmp
int3
xchg
mov
je
or
ror
push
and
loope
mov
fiaddl
ret
shrb
jg
sub
gs
jns
dec
imul
sub
test
jl
cld
bound
test
jbe
call
sub
cltd
jo
push
stos
loop
add
movsb
jge
and
mov
fimull
sub
iret
adcl
mov
fistpll
mov
xchg
lds
popf
mov
je
ficoml
jl
mov
sarl
mov
mov
dec
rcrl
lcall
sbb
xchg
leave
inc
outsl
mov
xchg
sub
in
cmp
lods
fdivrl
cmpsb
jns
adc
cmp
inc
and
dec
add
add
pop
scas
roll
xchg
cmp
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
cmpsl
inc
xor
jle
jmp
and
sahf
pop
cmc
push
pushf
cltd
jecxz
push
adc
pop
jae
mov
cli
jno
in
int
cmp
js
cmc
cwtl
in
adc
leave
fwait
and
jp
and
scas
movsb
in
movb
xchg
or
push
fiadds
jbe
dec
or
pop
sbbl
or
push
test
insb
inc
jae
loop
pop
or
subb
inc
lcall
in
pop
jge
pop
test
int3
mov
or
lea
outsb
into
sbb
pop
mov
xchg
enter
add
jp
mov
fwait
mov
movsl
add
xchg
mov
out
mov
or
rcrl
cmc
adcb
je
pop
adc
in
jp
dec
push
mov
inc
and
inc
loope
cmp
cmp
cmpsb
sub
sahf
pop
lods
xchg
sti
fwait
sbb
cld
and
fdivrl
testb
jg
pop
call
push
fldl
nop
add
aad
insb
mov
inc
loopne
in
cmp
mov
or
out
sub
mov
mov
cld
inc
daa
mov
test
ja
add
xor
jbe
or
test
in
dec
dec
or
inc
aad
jns
sbb
mov
shlb
mov
repz
xorb
push
pop
stc
mov
and
sbb
cwtl
inc
mov
sub
fisubs
adc
and
stos
jae
mov
mov
add
push
dec
cmp
push
movsl
lock
addb
add
jecxz
sbb
xlat
pusha
jno
jb
jo
add
rcll
add
mov
nop
mov
jno
mov
ss
fimull
jbe
daa
add
in
lea
xor
cwtl
xchg
jg
dec
jo
ret
jl
call
dec
mov
data16
test
pop
out
xchg
in
insb
ss
and
jb
and
fdivs
in
repnz
xchg
push
add
test
js
sub
jo
aad
push
mov
hlt
dec
cmp
xor
js
popa
pop
xchg
and
gs
aam
adc
dec
int3
sbb
stos
es
jne
out
dec
or
mov
in
loope
arpl
jo
inc
jae
cmc
sub
fdivrl
enter
enter
cld
mov
or
xor
or
jb
test
jnp
fiadds
or
sub
and
lret
call
and
push
sti
push
add
xor
shrl
insb
and
fscale
pusha
test
aam
adc
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
call
inc
data16
movsb
jle
push
jg
jle
dec
xlat
jmp
inc
dec
mov
add
lods
test
pop
adc
add
lea
push
bound
mov
loop
data16
dec
stos
cli
push
xorb
pop
sub
rorl
outsb
add
into
pop
repnz
aam
out
cmp
fidivrs
out
cltd
mov
daa
addb
outsb
mul
in
rcr
and
lock
mov
dec
cmpl
lcall
out
cmp
pop
fimull
or
mov
in
loope
jbe
aaa
pop
loop
mov
inc
adc
adc
mov
mov
mov
mov
cmp
shl
sbb
mov
leave
dec
or
lcall
inc
xchg
pushf
ret
int
jnp
dec
std
out
mov
mov
xor
stos
ret
push
or
push
mov
or
mov
and
repz
hlt
xor
ret
mov
add
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
mov
jle
jg
jle
popf
or
mov
test
test
adcl
cmp
lar
adc
or
rcrl
mov
cmp
daa
dec
dec
test
xor
pop
ja
inc
push
cmp
cmp
inc
and
sub
lock
dec
xlat
dec
cmpsb
add
jnp
imul
mov
inc
and
cmp
cli
inc
cmc
fstpt
call
cmp
ret
lret
mov
es
jb
mov
mov
xchg
xor
std
test
out
mov
mov
leave
xchg
daa
inc
mov
inc
mov
dec
xor
outsb
xchg
mov
lahf
xchg
cmp
xchg
inc
arpl
mov
xchg
ss
loope
les
jo
cltd
je
xor
jecxz
push
jl
in
add
int3
sub
ret
inc
mov
mov
out
insl
add
jae
out
xchg
xor
dec
adc
movl
test
add
mov
xor
add
jmp
xor
xor
mov
cmpsl
or
mov
jle
or
adcb
fisttps
loopne
cli
in
and
push
enter
popa
jp
jns
jge
cmp
pushf
push
push
andb
int
insl
aad
es
and
out
xchg
sub
popf
sbb
xchg
es
cmpsl
push
ljmp
sub
loop
cmp
jle
dec
sbb
repnz
insb
stos
sub
inc
cmpsl
sbb
divl
adc
sub
push
and
adc
stos
dec
adc
enter
pop
push
int
dec
dec
push
fucomip
push
and
clc
mov
and
imul
shll
sub
adc
jmp
mov
push
decl
mov
ds
push
jl
test
xor
mov
ss
popa
mov
dec
insb
xchg
and
xchg
xlat
sar
aad
and
int
cmp
pop
mov
inc
or
push
push
ret
aad
adc
lcall
mov
cmp
sahf
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
and
sbb
mov
jle
jae
cmovg
pushf
stc
pop
inc
outsl
push
cld
jp
mov
xchg
push
add
scas
into
sahf
inc
pop
mov
dec
jo
xchg
cltd
inc
dec
jp
and
ja
and
adc
test
js
popf
jmp
hlt
push
hlt
int
sbb
xchg
mov
pop
int3
lds
mov
jecxz
dec
int
cmp
adc
xor
xchg
mov
push
out
dec
notl
cli
addr16
or
aas
je
clc
das
mov
mov
fsubs
mov
jmp
mov
in
push
cmc
xor
xchg
test
push
stos
or
in
lods
repz
inc
movsb
xor
sbb
movsl
and
cmp
pop
or
mov
rclb
ds
repz
xchg
mov
fwait
adc
xchg
repz
mov
mov
mov
mov
int
out
popf
or
jnp
in
sbb
sub
lods
inc
mov
xor
xchg
iret
mov
jb
sahf
dec
mov
xchg
outsl
cs
push
je
xor
subl
pop
xorb
mov
bound
fisttps
jb
xchg
in
fbstp
pop
cmp
arpl
xchg
insl
sub
sbb
lret
mov
mov
imul
push
insl
cwtl
mov
stos
fildl
or
jle
dec
sub
dec
pop
lods
ds
pop
cmp
mov
notl
movsb
jle
mov
arpl
jb
cwtl
sahf
std
or
adc
cmp
out
jno,pt
adc
inc
add
cmp
cli
jmp
scas
jnp
adc
or
and
jmp
arpl
imulb
je
addr16
inc
repnz
or
sbb
push
stc
scas
outsb
jno
decb
out
pop
outsb
push
mov
nop
iret
xor
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
pop
fnsave
cmp
xchg
mov
and
incl
pop
cmp
adcl
out
in
xchg
cmp
sub
and
and
mov
or
into
int
lds
jno
shlb
sub
out
push
sar
and
jecxz
ljmp
mov
mov
cld
les
movsb
mov
adc
mov
mov
in
mov
aam
scas
arpl
dec
leave
jnp
xor
jecxz
lcall
ficoml
add
popf
jns
push
out
repz
dec
ficoml
sub
cmc
mov
push
pusha
fimuls
and
xchg
orb
and
in
outsl
inc
ljmp
scas
jmp
add
rcr
mov
rcrb
cmp
lea
mov
and
xchg
sbb
adc
in
loopne
popf
mov
not
test
xchg
sub
sti
shll
jae
ja
lret
fsubrl
jge
sarl
sub
int3
or
push
mov
jb
xor
out
cltd
sub
popf
cmp
in
sub
stc
mov
xchg
pop
xchg
fmull
push
test
push
outsb
sti
inc
pop
xor
mov
inc
or
mov
push
add
addr16
mov
xchg
xchg
lahf
jae
mov
jle
mov
js
cltd
scas
push
xor
test
inc
and
out
repnz
push
cmp
loopne
fimull
arpl
xor
xchg
test
adc
int3
in
das
add
lods
cmp
push
add
inc
shufps
xchg
ret
mov
xor
xor
enter
adc
ret
push
cmp
push
pop
mov
ds
imul
dec
lea
push
in
and
and
add
sub
xor
aaa
shrl
mov
clc
subl
xor
in
xchg
cmp
or
int
lahf
pop
xor
cmp
push
push
jbe
sbb
out
movsl
xor
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
adc
aad
test
push
pushf
add
orb
loope
gs
jns
push
in
and
sub
add
inc
in
dec
push
jno
test
cmp
mov
mov
sub
dec
fldenv
sbb
adc
or
idivl
xor
xchg
testl
adc
inc
sbb
icebp
ror
mov
fidivs
andb
aam
sbb
imul
jo
pop
xchg
mov
dec
jae
fwait
dec
ja
int3
mov
fs
in
pusha
jle
fistps
inc
inc
in
or
test
mov
scas
jp
jo
ds
pusha
mov
sub
lret
sarl
sti
mov
sub
pop
in
lock
dec
fisubl
nop
pop
dec
enter
xchg
insl
and
daa
add
cwtl
sbb
pusha
int3
mov
or
jge
insl
out
inc
fwait
push
dec
je
in
std
mov
nop
pop
shl
imul
gs
rcrl
inc
std
cmpsb
int
out
jg
test
scas
mov
inc
mov
aas
into
ds
ror
dec
aam
inc
daa
lcall
insb
mov
out
add
xchg
inc
dec
movsl
jle
idivb
xchg
xlat
mov
mov
xor
mov
test
jo
ds
outsb
cmp
and
cmp
out
pop
rcll
xchg
lods
fs
push
cmp
mov
fstpt
add
xchg
out
mov
cmp
jg
or
movsb
mov
repnz
popf
fldt
add
mov
mov
call
mov
ds
fbstp
sub
xchg
das
rolb
and
and
dec
popf
loope
insb
mov
fwait
insb
test
sbb
push
div
push
push
cli
jge
nop
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
jl
push
sub
add
dec
inc
scas
dec
sar
pop
xorl
rorl
fisubrs
pop
cmp
push
add
movsl
or
pop
sub
loop
pop
test
stos
movsb
out
mov
popa
jo
cmp
mov
add
sahf
stos
in
sub
cld
mov
jbe
sbb
or
or
std
push
dec
out
inc
push
cltd
xchg
outsl
lret
sbb
adc
jo
xlat
out
les
inc
push
push
xchg
sbb
stos
and
idivb
pop
xor
add
push
negb
ss
fsubrl
mov
sub
fs
data16
cmp
cmp
push
mov
outsb
push
rcr
ret
cmp
xor
or
cmp
sub
outsb
lret
sub
in
es
push
xchg
xor
push
mov
pop
cmp
rolb
ret
popa
jbe
and
xchg
push
xchg
sub
xchg
loop
fsubs
lock
or
dec
mov
loope
pop
mov
xor
mov
int3
dec
rcll
xchg
in
rorl
pop
or
jg
inc
mov
sahf
test
enter
add
xchg
enter
inc
jp
push
pushf
cmc
dec
inc
fidivs
add
repnz
add
sbb
loop
test
cmc
xchg
mov
adc
fidivl
pop
mov
xor
dec
sub
insl
inc
lret
rcrb
xchg
jbe,pt
lahf
push
rol
insb
rol
lahf
xchg
mov
ret
sub
test
mov
cmp
xchg
icebp
int3
mov
arpl
mov
sbb
in
mov
aad
mov
mov
sahf
adc
mov
lret
sub
pop
scas
push
lcall
pop
aaa
ja
push
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
repnz
sub
scas
stos
jle
lods
jl
jle
rcll
pop
scas
sbb
clc
test
rcr
popf
cmpb
outsb
popa
and
faddl
dec
jmp
lods
add
stos
lret
sti
pop
mov
outsl
xchg
mov
js
adc
lahf
cltd
sbb
sub
movsb
ficomps
sahf
sbb
inc
inc
and
fildll
mov
stos
in
sub
leave
cmpsl
arpl
imul
idiv
pop
mov
pop
adc
xchg
pop
es
pop
jbe
mov
mov
or
xor
adc
jg
cltd
imul
jmp
inc
mov
cmp
sahf
rcr
je
imul
or
jp
lahf
and
test
and
inc
fcompl
mull
test
sbb
xchg
aaa
mov
pop
push
adc
int
popf
pop
jno
xor
mov
add
adc
xor
outsl
and
jne
jo
pop
push
xchg
xchg
outsb
arpl
cmp
push
mov
andb
in
add
mov
outsb
fwait
lahf
xchg
lcall
fldl
mov
add
inc
rclb
sub
inc
mov
mov
xor
inc
inc
jns
insl
mov
xor
mov
or
sbb
clc
fbld
mov
test
cmp
mov
orb
cmp
mov
adc
outsl
call
sbb
jp
mov
out
mov
into
cmp
add
push
fs
dec
ja
and
cmc
in
dec
insb
fs
push
outsl
int3
cmp
inc
xor
cmc
jmp
lods
jo
addb
and
add
bound
push
rolb
sbb
mov
jb
mov
xchg
mov
mov
cld
imul
lea
adc
sbb
push
sbb
jo
pop
ret
ss
mov
jecxz
xchg
shrl
mov
mov
cld
inc
and
add
out
sarb
mov
xchg
into
call
cmpsl
shll
jne
clc
pop
arpl
adc
jbe
loop
ds
jbe
xor
lds
mov
mov
mov
push
cmp
test
inc
cld
xor
daa
cmp
jb
add
mov
addl
jmp
insb
xchg
xchg
in
or
lea
jle
jl
jle
iret
sub
rcr
pop
inc
or
addr16
adc
insl
or
std
mov
je
mov
aam
cmc
icebp
jl
jne
and
repz
scas
add
cmp
dec
xchg
pushf
xchg
pushf
xchg
cltd
hlt
es
xor
adc
mov
out
sbb
aam
aaa
out
aam
add
pop
je
push
call
imul
iret
add
subb
ds
test
mov
xchg
repnz
dec
dec
popf
sbb
cli
xchg
mov
and
jmp
pop
aad
mov
pop
adc
lcall
shll
icebp
popa
jo
aaa
cmc
push
and
pusha
stc
call
push
outsl
or
lds
mov
xor
int3
in
loopne
scas
add
mov
dec
push
or
inc
mov
jmp
scas
mov
lods
test
push
and
or
inc
je
int
xchg
in
xchg
mov
mov
lea
movsb
cmp
enter
cmpsb
cmp
imul
lds
jbe
ljmp
mov
movsb
mov
jne
rolb
cmpsl
iret
push
push
je
sbb
mov
jae
insl
push
xlat
xor
stc
popf
in
sahf
imul
dec
dec
mov
jae
aam
test
addr16
xor
aad
js
cwtl
loope
xor
cmpsl
adc
lods
test
outsb
shll
int3
fsubs
lcall
push
mov
out
lret
jae
cmpsl
and
js
cmp
mov
or
das
fdiv
test
inc
sub
inc
jp
jmp
cmp
inc
jp
shlb
push
clc
dec
lea
fidivl
iret
jno
xchg
stc
xor
fidivl
cmpsb
stos
xor
mov
xchg
sbb
lcall
sub
movb
mov
jmp
negb
sub
adc
sarl
sbb
and
out
or
aam
and
pextrw
fwait
pop
pusha
xor
inc
aam
dec
cli
mov
cmpb
insl
mov
pop
cmp
add
cmp
sub
outsb
push
xchg
mov
int3
bound
jnp
sbb
xchg
cmpsb
cmpsb
sbbb
out
aam
jb
cmp
repnz
cmp
shrb
int
adc
aaa
xchg
and
call
icebp
lret
pushf
mov
jle
adc
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
sti
push
out
and
mov
jle
jl
jle
iret
or
sbb
cwtl
popf
test
pop
or
addr16
or
rcrl
rol
xchg
mov
pop
push
add
dec
js
adc
mov
add
sarl
and
cwtl
notl
xchg
and
out
enter
cmc
andb
ja
mov
mov
push
ret
orps
sbb
xchg
int3
inc
scas
jb
jg
xchg
and
rclb
mov
mov
call
jne
mov
movsl
fcoms
dec
add
out
dec
adc
rcll
enter
inc
mov
push
push
loopne
fs
jne
jo
mov
clc
dec
popf
je
faddl
out
add
cmc
mov
push
or
push
ret
stc
pushf
xchg
add
fcmovnb
push
stc
push
push
out
jns
xlat
insl
mov
mov
imul
and
xchg
cmpsl
add
cltd
jge
fwait
fwait
push
fmul
sub
add
call
lock
xchg
mov
sti
mov
mov
dec
int3
dec
scas
and
cmp
xchg
cmpsb
lods
sbb
stos
shrb
jbe
push
hlt
mov
pushf
fs
sub
mov
add
mov
jle
cmp
xchg
add
dec
nop
shl
sbb
sbb
icebp
push
mov
cmp
clc
ss
cmc
inc
into
pop
sub
xchg
pop
scas
popf
lea
pop
fstpl
push
pop
lds
xor
das
mulb
roll
push
jmp
cmp
in
pop
adc
ss
mov
mov
xchg
popf
pop
mov
dec
shll
add
push
mov
decb
adc
jno
dec
fsubp
inc
push
cld
cltd
scas
fcoml
cmp
mov
mov
push
push
cmc
xchg
pusha
sbb
sub
adc
pushf
cmp
and
cmp
test
pop
jno
mov
dec
xchg
shll
jb
push
test
and
xchg
test
xor
fcomip
ret
cs
sbb
xor
subl
push
xlat
mov
cmp
andl
add
int
fcompl
test
dec
lods
iret
gs
adc
cmpsb
cmp
mov
notb
dec
add
mov
fldt
mov
bound
aas
insb
xchg
xchg
cwtl
pop
adc
arpl
mov
loopne
cmp
jmp
std
icebp
add
add
jmp
lock
arpl
sub
scas
ret
rorl
in
mov
jl
jle
mov
fsubs
nop
adc
jl
lods
out
sub
push
dec
mov
pop
iret
ja
leave
imul
xor
inc
adc
mov
out
or
enter
add
jmp
sub
dec
jecxz
push
mov
mov
sub
sbb
dec
mov
sbb
sbb
sti
inc
fwait
into
cmpsb
lret
mov
lret
push
shlb
in
pop
mov
divb
pop
cmp
into
nop
push
mov
stos
in
and
mov
bound
das
addl
sub
xchg
inc
adc
cli
lahf
in
rolb
mov
mov
push
out
jo
cmp
pop
aas
jnp
pop
sbb
adc
xlat
inc
cmpsl
add
arpl
mov
mov
jnp
rolb
push
sahf
mov
or
cmp
mov
scas
into
hlt
insl
in
imul
sti
vpsubsb
ret
out
bound
or
test
pop
sub
xchg
ds
fisubl
xlat
nop
scas
dec
mov
mov
mov
test
push
cmp
and
push
mov
and
inc
inc
and
mov
fdivs
push
repnz
mull
sub
int3
scas
or
ja
shll
pushf
inc
mov
push
jmp
add
push
mov
sub
mov
ret
inc
lds
mov
lds
das
adc
sbb
mov
negl
les
shl
test
sub
and
in
sti
out
mov
insl
int3
mov
data16
dec
pushf
orb
push
das
popf
adc
and
mov
inc
xchg
je
push
loopne
pop
enter
jno
test
sahf
cvttps2pi
adc
das
add
popf
cmp
imul
sti
sub
pop
es
sub
fxch
jmp
js
std
test
in
aaa
mov
cmpl
iret
js
mov
mov
push
lea
test
rcrb
dec
jno
addr16
or
pop
ljmp
or
imul
popf
add
cmpsl
push
push
rolb
in
ljmp
lret
mov
add
jge
out
and
and
mov
xchg
es
mov
inc
jmp
stc
add
pop
cmpsb
pop
ret
leave
inc
ljmp
in
xchg
in
std
pop
enter
ficoms
fadds
cmp
scas
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
pusha
dec
idivl
jle
leave
pop
and
push
cmpsb
dec
fincstp
adc
mov
enter
shl
hlt
data16
jmp
xchg
aam
jns
pop
dec
int
iret
rolb
sub
bound
fimull
inc
roll
clc
push
mov
jno
fidivs
xor
adc
add
movsb
popa
fbld
or
shll
xchg
mov
sbb
subl
arpl
lea
lret
jge
es
add
mov
xchg
mov
in
call
push
push
pop
out
int3
insb
test
insb
sub
clc
and
and
mov
mov
fdivrl
jle
aad
lds
xchg
test
inc
push
jp
dec
mov
add
les
push
adc
dec
das
lods
dec
mov
and
add
dec
pushl
sbb
pop
stos
mov
jbe
movsb
push
and
or
bound
ss
lahf
or
sub
std
cmp
jecxz
jmp
lcall
xchg
adc
enter
fisttps
mov
mov
cmp
pmaddwd
outsl
mov
mov
loope
push
sbb
jne
ret
fidivs
jmp
je
popa
imul
outsl
insb
jae
shlb
xchg
loopne
jmp
mov
mov
mov
xor
repz
mov
sub
cwtl
rolb
adc
and
jp
mov
sbb
xlat
jne
int
and
rcrb
sub
sahf
test
repnz
dec
pushf
movsl
mov
mov
movsl
mov
cmp
mov
push
mov
or
fisubrs
push
mov
insb
loopne
popf
mov
testl
cmp
sub
sti
in
fsubrs
loop
dec
sub
pop
mov
and
arpl
stc
jg
movsb
add
stos
popf
test
xchg
xchg
mov
lahf
xchg
cmp
out
mov
jp
mov
cs
pusha
push
add
out
sub
mov
xor
inc
jl
shrl
imul
repnz
push
cli
bound
pop
sbb
pop
jno
dec
decl
mov
test
out
cmp
cmp
aas
cmpsb
into
adc
stos
dec
aad
xchg
dec
dec
add
dec
xor
mov
arpl
sub
jno
inc
sub
rclb
xchg
cmc
xchg
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
lods
aad
call
pop
cwtl
adc
jge
xchg
scas
insb
loop
pop
addl
mov
sbb
outsl
mov
test
cmp
push
rolb
xorb
ret
push
not
pop
mov
jbe
cmp
xor
xchg
adc
xchg
mov
sub
jmp
clc
imul
mov
rcrb
or
add
iret
or
adc
xor
jnp
jle
fnsave
mov
sbb
data16
cltd
mov
insb
gs
jge
cmp
into
lods
movsb
cli
sbb
scas
stc
imul
popa
mov
cmc
lds
push
pop
aad
jbe
bound
sub
cvtps2pi
sub
sbb
nop
repz
pushl
clc
add
fcoml
jo
cmp
aam
leave
mov
loop
dec
in
mov
mov
mov
xchg
pop
out
mov
cwtl
addl
sub
into
push
cmp
out
or
call
xchg
je
jno
cwtl
leave
xchg
data16
sbb
pop
mov
ja
xchg
sub
inc
ss
jno
imull
fstpt
xorl
shll
mov
in
pop
lahf
movsl
clc
das
mov
mov
add
lods
das
pop
jmp
jp
pop
bound
sbb
mov
enter
xorl
dec
idivl
push
pop
xchg
jg
out
adc
out
fs
push
or
cltd
and
mov
mov
ljmp
cmpsb
dec
mov
pusha
test
inc
sti
popf
movsb
xchg
xchg
jno
push
add
xor
aam
lcall
dec
dec
push
ret
push
clc
jnp
std
adc
and
scas
rorl
outsb
les
xchg
sub
mov
sub
lods
jmp
xchg
xchg
stc
movsl
lcall
add
rorb
jmp
sbb
push
xor
repz
mov
and
jl
in
mov
cwtl
call
xchg
out
adcl
out
push
test
daa
mov
mov
sbbb
loope
out
xchg
cmp
mov
inc
stos
adcb
nop
pop
xchg
cmp
ret
cli
mov
fadd
inc
cld
xor
adc
inc
add
add
add
add
adc
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
adc
xchg
mov
jle
out
movsb
out
adc
jmp
imul
mov
clc
sbb
jle
iret
dec
dec
mov
add
pop
cs
push
inc
mov
scas
sub
mov
xchg
fdivl
push
inc
and
sub
and
xor
jns
push
dec
rol
inc
push
lret
inc
inc
rcrl
jae
cmovo
outsb
les
pop
sahf
xchg
ja
lds
dec
sbb
or
in
mov
sarb
adc
dec
std
cmp
pop
insb
aam
pop
mov
pop
sbb
iret
or
push
xor
sbb
mov
cmp
test
push
jg
mov
popf
fsubrl
in
sarl
cmp
call
in
call
xchg
pop
jbe
scas
dec
xor
insl
inc
adc
pop
or
sub
jns
fsubl
ficoms
mov
test
hlt
pop
in
pop
dec
mov
inc
mov
cwtl
dec
rolb
popf
and
int3
and
mov
es
sub
seta
je
push
sbb
pushf
stc
out
jne
sub
nopl
loop
cmp
mov
jae
iret
gs
movsb
adc
std
sub
lret
out
jb
andb
mov
insb
es
or
filds
adcb
out
push
mov
sbb
mov
push
popf
sbb
sub
dec
sbb
inc
aaa
adc
mov
testb
cli
ret
arpl
std
sub
jg
xchg
push
out
lahf
loope
push
adc
in
lret
mov
popf
call
and
sbb
fiaddl
adc
mov
mov
scas
sub
xchg
pushf
sub
pop
movsb
jp
xchg
push
pop
push
adc
pop
or
mov
mov
lret
sbb
push
mov
mov
nop
xor
push
out
add
lock
mov
mov
dec
mov
sti
in
fwait
popf
movsb
or
push
xchg
popf
sub
mov
jne
lea
cmp
adcb
dec
ds
sub
mov
adc
push
adc
fimull
mov
pusha
fidivrl
stos
shrl
les
xor
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
or
sbb
or
jg
jle
mov
jmp
xchg
push
pop
je
jmp
fxch
stos
push
stc
insb
out
mov
push
xchg
add
push
mov
cmp
popa
dec
stos
pushl
mov
test
out
call
xchg
lcall
sub
sbb
ja
es
jo
movsb
sub
cmp
mov
dec
mov
cltd
repz
jbe
lods
jmp
add
aas
aaa
dec
fs
pop
out
mov
xchg
sbb
xor
cmp
sarl
xchg
xchg
mov
loope
test
jo
dec
int
dec
sub
and
dec
scas
fwait
cmp
adc
imul
mov
mov
mov
sbb
jo
int
fnstenv
das
push
jmp
mov
adc
adc
js
test
push
cmp
add
jne
cmpsl
add
cmp
mov
stos
mov
xchg
ret
adc
das
push
inc
mov
xor
outsl
mov
jg
fstps
sub
xor
sub
or
jmp
jg
fmul
pop
movsl
mov
and
or
ud0
pop
scas
shr
out
push
rolb
xchg
insl
sbb
or
adc
sbb
shrl
mov
fmuls
mov
jle
mov
movl
or
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
sbb
inc
jle
icebp
jg
jle
mov
xchg
push
sub
or
push
test
xor
mov
mov
push
sbb
in
imull
filds
jge
dec
inc
js
sub
loopne
jno
stc
sub
ret
into
and
shrl
mov
shrl
mov
push
jae
mov
sub
sub
dec
jle
xor
nop
cmp
mov
mov
or
xchg
mov
sub
imul
les
stos
adcl
xor
pop
dec
jnp
int
and
push
mov
jg
fnstenv
jnp
add
stc
in
xchg
lods
xchg
les
pop
js
add
movsb
cmp
or
and
loop
mov
popf
cmp
pushf
fcoml
lds
xchg
adc
dec
cmp
dec
stc
cmp
sbb
push
fisubrl
in
sahf
aaa
fbld
push
imulb
jp
sbb
lds
and
jg
mov
call
fcom
sbb
sub
inc
popa
fsts
stos
and
xchg
mov
jle
out
mov
inc
jg
orb
push
mov
and
loope
cmpb
inc
mov
loope
sub
mov
pop
jo
movsl
cmp
xlat
das
mov
aaa
je
sub
dec
inc
insl
mov
test
add
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
cmpb
jle
jg
jle
inc
in
test
testl
leave
movsl
inc
sti
repnz
dec
stc
pop
mov
sbb
push
cs
pop
and
loope
lods
test
mov
dec
push
sub
out
push
mov
mov
push
sbb
sub
iret
aad
adc
addl
popf
in
jge
dec
cmpsb
sub
mov
push
movsb
xchg
mov
xor
xchg
jne
xor
and
mov
stc
lea
mov
sahf
mov
jo
lods
pop
ret
inc
pop
pop
leave
subl
daa
xor
jecxz
or
xchg
mov
xor
dec
stos
loope
outsb
xor
les
push
lods
sub
lahf
sbb
in
and
aad
pop
adc
push
xor
mov
xchg
cwtl
pusha
nop
fstpl
pop
adc
fiadds
inc
cmpsl
push
jb
imul
into
outsl
mov
dec
add
movsb
addl
daa
lds
inc
fnstenv
cwtl
je
jae
shrl
mulb
sbb
mov
mov
enter
inc
mov
je
push
mov
xor
ret
roll
sbb
addr16
inc
dec
or
jmp
mov
loop
insb
mov
cmpsb
xor
or
loope
xchg
jle
xor
mov
scas
repz
fnstcw
fdivs
insl
lea
add
iret
and
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
jecxz
jle
jg
jle
sarb
pop
call
outsl
push
add
or
jne
aad
lret
addr16
sbb
mov
sbb
xchg
aaa
pop
push
sbb
pusha
sub
push
loopne
jle
cmp
mov
jg
jne
jmp
mov
or
nop
mov
out
stos
mov
mov
in
sub
lods
xlat
int3
outsb
push
xor
or
hlt
mov
stos
aad
fmuls
stos
aad
or
int
mov
mov
test
cld
dec
inc
lcall
mov
fiadds
mov
insl
fs
adc
or
and
cmp
repnz
mov
or
call
outsl
js
adc
loop
mov
and
sub
pop
or
pop
inc
and
add
into
mov
mov
sahf
syscall
cs
fiaddl
test
xor
add
sbbb
jecxz
popa
into
xchg
scas
dec
stos
cmpsb
and
mov
dec
outsb
aas
aaa
insl
push
push
push
ljmp
xor
rcll
ja
add
push
or
xchg
ss
xor
rolb
rolb
pop
and
pop
sarb
dec
sub
pop
aas
imul
jmp
hlt
mov
imul
stc
xor
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
xor
inc
jle
icebp
jg
jle
out
repnz
xchg
inc
jnp
inc
lret
xchg
jle
icebp
outsb
sub
stc
ret
ds
dec
loop
push
out
clc
adc
mov
adc
lahf
lcall
jno
movsl
jo
pop
add
ja
lods
mov
lods
inc
out
clc
sbb
mov
dec
mov
movsl
jle
cld
mov
jl
fs
scas
outsl
push
out
cmpsl
pop
scas
push
pop
and
sub
out
iret
push
adc
sub
adc
xor
loopne
xchg
pusha
in
xchg
mov
mov
mov
or
inc
sbb
ss
jle
loop
les
cmp
cmp
xorb
add
in
das
cmpsl
fst
mov
jg
xchg
mov
cmp
adc
xchg
outsl
push
or
jg
add
push
mov
xchg
ficoms
push
inc
sub
fisubl
pop
lock
push
xchg
sbb
nop
out
sbb
pop
or
imul
lock
movsb
stos
adc
cmpsl
sbb
sahf
movsb
jle
mov
cmp
inc
dec
outsb
imulb
adc
add
xchg
pop
mov
loop
shlb
jns
push
dec
movsl
push
mov
inc
movsl
xchg
imul
mov
stc
out
leave
and
stc
sti
inc
jne
fwait
orb
je
jae
jp
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
dec
lahf
int3
jne
inc
jle
icebp
jg
jle
dec
std
xor
adc
pushf
jle
lock
loopne
jge
aas
lret
shl
cmpb
xchg
test
or
sub
push
mov
mov
adc
mov
dec
out
inc
xor
mov
cltd
stos
pop
add
push
adc
mov
xor
popa
xchg
test
imul
mov
ror
fs
lea
gs
inc
je
lods
loop
rcrl
pushf
jge
sti
push
mov
fidivrs
xchg
sub
ret
jns
mov
ljmp
clc
lds
enter
add
ss
lahf
sub
fcmove
or
jns
fstps
out
das
mov
jne
push
pop
fisubs
mov
push
je
mov
or
leave
cld
lea
mov
pop
xchg
sbb
inc
mov
repz
mov
push
and
mov
ja
stos
add
icebp
ret
addr16
adc
sbb
repz
mov
faddp
sub
test
xchg
sub
jns
add
ret
sbb
outsl
repz
add
xchg
or
sbb
cs
cwtl
add
inc
dec
daa
push
scas
dec
sub
or
mov
adc
xchg
ret
std
push
inc
adc
mov
fwait
xor
lcall
add
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
clc
outsl
dec
loope
ret
lret
sub
mov
insb
mov
test
rcl
je
lds
xor
mov
jb
xchg
mov
les
xchg
div
mov
repz
mov
sub
lcall
cmpsb
mov
sub
shr
cmpsb
xor
scas
mov
leave
inc
insb
mov
gs
push
xor
adc
clc
pop
sbbl
mov
pusha
scas
mov
mov
mov
mov
mov
mov
fs
inc
mov
inc
repnz
mov
bound
stos
inc
mov
xor
aas
jae
mov
cld
pop
adc
sbb
mov
mov
iret
gs
cmc
loopne
mov
dec
adc
aam
out
into
cmpsl
bnd
mov
popa
test
sub
fsubrp
or
in
imull
es
nop
aad
push
mov
fnstenv
cmp
aad
bound
sub
and
push
jne
add
jp
sbb
push
fistl
repnz
adcb
nop
inc
mov
orb
mov
sub
xchg
stos
fcmovu
jg
test
mov
fs
je
mov
or
std
jg
cmp
jnp
insl
pop
pop
sub
add
fdivr
jg
adc
add
imull
hlt
xchg
dec
fs
sbb
int
xor
cmp
ljmp
sbb
sbb
push
idiv
fsubr
out
rcll
int
cmp
sbb
add
les
out
movsl
int3
cmpsl
loope
xchg
lods
xor
sub
cmp
scas
xchg
xchg
cmp
imul
sub
loop
sub
hlt
iret
das
dec
test
cld
in
sub
add
call
add
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
test
jle
adc
pop
inc
dec
imul
outsl
rol
mov
shlb
sbb
insl
addl
fldcw
pop
sysenter
shlb
jg
mov
sbbb
and
add
test
es
xchg
inc
add
mov
xchg
or
shll
push
ret
xor
mov
mov
repz
dec
hlt
int3
mov
test
enter
outsb
pop
and
stos
pop
or
lods
cmp
mov
mov
jmp
lds
xchg
pop
mov
out
hlt
adc
ljmp
pushf
push
and
out
adc
mov
and
push
loope
dec
fisubrs
jo
sbb
push
jns
pop
and
ljmp
jl
fmull
lods
call
imul
push
sub
adc
cs
push
fsts
subl
xchg
inc
ficomps
loopne
mov
and
icebp
lcall
cltd
and
adc
jae
cli
cmp
call
int3
push
xchg
mov
or
out
fs
dec
aad
cwtl
cmpsb
cmp
fcmove
cmp
fsubrl
jmp
sbb
cmpsl
cmp
inc
jge
and
dec
inc
xchg
cmp
div
rol
pop
cmp
push
adc
cmp
scas
mov
mov
or
inc
dec
xchg
mov
jo
push
stc
movsb
pop
or
shr
mov
in
pop
inc
subb
cli
push
lret
notl
mov
xchg
push
sbb
movsl
loope
nop
sbb
mov
mov
pop
push
inc
push
sbbb
out
adc
imul
xchg
adc
push
add
and
jnp
or
sub
mov
dec
cmp
ds
mov
ret
jne
mov
add
jmp
mov
imul
inc
xor
dec
jle
adc
subl
arpl
imul
xor
shlb
pop
aam
insl
jbe
es
xchg
loope
daa
pop
pop
adc
xchg
inc
aad
and
data16
insl
popa
lahf
out
in
rol
cmc
xchg
movsb
loopne
decl
movsl
ljmp
jle
sub
mov
icebp
in
xor
sbbl
push
xchg
adc
sub
into
cli
call
mov
je
cmp
push
mov
lock
or
push
mov
fdivr
inc
pop
push
out
js
xor
sbb
cs
stos
inc
xor
jae
cmp
sbb
lods
mov
fisttps
loope
add
inc
jmp
xchg
jmp
movsb
test
outsb
add
cld
push
mov
idivb
mov
mov
pop
xchg
dec
je
dec
lds
fs
cmp
jp
and
adc
stos
and
enter
fidivs
and
mov
jmp
cwtl
inc
loopne
xchg
xchg
cmc
xchg
inc
push
sbb
outsb
sub
movl
std
jnp
fstpl
fwait
aad
repnz
stc
repz
aam
or
ret
pop
outsb
outsb
dec
sbb
bound
mov
mov
mov
shlb
outsb
and
lods
dec
icebp
movups
pop
pushf
ljmp
call
arpl
sbb
jns
cli
add
dec
ret
adc
jle
lahf
push
mov
xchg
push
sti
cmc
shll
fsts
or
clc
and
sub
xor
push
mov
out
jl
test
mov
and
outsb
xor
jnp,pn
pop
mov
or
push
cmpsb
mov
mov
mov
jbe
sbb
inc
add
pop
imul
cmpsb
push
add
jbe
outsl
loop
sarl
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
loop
cmp
xlat
add
add
add
xchg
adc
xor
and
test
jmp
in
and
aad
leave
into
out
pop
push
mov
push
or
mov
or
js
loopne
out
inc
push
imul
or
shrb
lahf
add
cltd
mov
mov
cwtl
xor
push
ljmpw
pop
jbe
aad
imul
aam
loopne
mov
pop
int
dec
xchg
push
inc
cltd
rorb
jecxz
imul
mov
nop
xor
mov
outsl
mov
cmc
dec
addr16
popf
in
jb
std
pop
popf
out
xchg
leave
inc
push
popl
divl
push
test
loop
mov
mov
sub
dec
ss
or
pop
xor
aas
in
or
inc
adc
sahf
scas
push
daa
les
jbe
fsubr
fiadds
rclb
add
pop
ficoml
in
jle
lcall
movsb
fadds
add
add
add
popl
or
pop
loopnew
pop
jb
cmp
mov
icebp
mov
scas
mov
fwait
cmp
arpl
pop
outsb
jbe
scas
fs
icebp
mov
or
xchg
call
or
sarl
mov
dec
mov
es
mov
stc
push
and
mov
repz
iret
lea
mov
dec
push
stc
push
hlt
sbb
xor
jo
jno
mov
popa
sbb
fstps
out
clc
loop
pop
lret
mov
adc
sub
mov
inc
pop
js
jmp
jno
sahf
or
jo
push
sti
adc
jnp
or
and
mov
inc
cmp
movsl
hlt
pop
mov
mov
leave
pop
decb
sahf
popa
and
aad
add
mov
xchg
sbb
add
add
mov
push
dec
sti
movsb
jg
flds
add
add
add
cltd
repnz
mov
subl
dec
push
nop
gs
fsts
arpl
ror
mov
pop
leave
in
data16
ret
popa
ljmp
bound
fnsave
daa
enter
adc
pop
iret
mov
into
sbb
mov
mov
mov
cmpsl
mov
outsl
call
subl
jmp
pop
mov
push
in
inc
bound
aad
into
mov
dec
push
xor
adc
pop
fwait
xor
xor
loopne
std
insb
sarl
adc
or
dec
ret
rcl
and
xlat
cmp
ret
popa
lret
add
cmpsb
mul
mov
push
pushf
mov
push
jbe
mov
fisubrl
in
in
das
xchg
lahf
and
jne
fwait
xchg
fsubl
add
mov
roll
mov
fiaddl
add
add
add
cmpsl
push
pop
ss
pop
outsb
fcmovnb
lods
add
cmpsl
lea
pop
in
inc
nop
dec
pop
pop
inc
aas
push
push
mov
in
jo
loopne
fmul
jecxz
jecxz
or
or
clc
bound
aas
pop
adc
outsl
or
xor
sbbb
test
inc
push
scas
push
mov
inc
sbb
ljmp
inc
pushf
iret
out
loope
jno
sbb
push
stos
popf
filds
dec
orl
push
sub
cmpsb
mov
loop
push
cmp
shlb
in
xchg
mov
addr16
mov
mov
lahf
pop
xor
loopne
pop
loop
fstps
mov
sbb
test
addb
adc
add
fisttpll
sbb
mov
cmp
jp
dec
movsb
mov
pop
mov
jo
dec
xchg
cs
ja
out
pop
jae
or
pop
dec
or
stos
xchg
fildl
add
add
add
push
or
fstl
into
xor
adc
das
push
daa
jne
ficomps
nop
inc
pop
jns
jle
repz
add
les
ret
sbb
jecxz
adc
ljmp
enter
std
addr16
xchg
jmp
std
xchg
pop
or
add
ja
mov
cmp
lock
sbb
fs
sub
stc
outsb
cmpsl
pop
add
hlt
mov
pop
push
lea
out
add
out
jmp
mov
nop
loope
mov
cmp
jmp
push
jno
out
jno
test
pop
xor
shl
jne
adc
push
lea
in
nop
or
fimuls
out
xor
add
jp
mov
pop
call
pop
pop
xchg
add
mov
or
dec
xchg
jg
cmc
insl
cmc
out
lcall
enter
add
packuswb
add
add
add
jmp
lods
push
and
adc
xor
xchg
inc
mov
add
mov
movsl
loop
sub
rorb
popf
jle
into
xor
pushf
xlat
test
nop
shll
or
mov
repnz
insl
int3
sar
jb
push
jl
in
sbb
xchg
inc
call
sbb
cmpsb
pop
vunpcklps
clc
pushf
mov
in
lock
lods
outsb
imul
mov
adc
and
jns
jbe
ret
out
ja,pn
mov
push
icebp
inc
mov
or
imul
cld
inc
add
int3
leave
xchg
test
jne
shlb
insb
test
sbb
pop
mov
add
and
mov
xchg
mov
movsb
pop
sarb
xor
pop
sbb
out
arpl
sbb
sarb
adc
out
adc
popf
inc
repnz
push
inc
lds
sub
shll
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
jecxz
cltd
jp
popa
xor
mov
pop
jbe
xlat
mov
jmp
sub
jle
aam
cli
sub
sti
aaa
xlat
inc
daa
fwait
and
out
inc
shl
dec
gs
or
sub
lds
nop
imull
pop
mov
cmp
and
stc
mov
jmp
xor
xor
popf
inc
push
mov
mov
xchg
push
or
hlt
or
sbb
pop
push
xor
test
test
in
fdivrl
inc
data16
loop
scas
and
push
jne
add
jo
lret
scas
jp
stos
scas
loope
push
push
jb
clc
das
push
out
xchg
dec
clc
mov
in
and
mov
add
mov
mov
sti
cmp
dec
shl
mov
sbb
cltd
imul
xchg
jns
ja
cmp
and
in
push
or
and
scas
sti
jle
pop
push
pop
push
jle
lock
add
add
add
test
xor
push
imul
hlt
push
mov
test
push
lahf
and
pop
js
adc
mov
adc
aad
mov
movsb
and
xor
je
inc
sub
add
in
shll
push
in
add
outsl
repz
cli
test
jbe
ret
mov
or
sbb
adcl
sbb
ljmp
mov
adc
sbb
xchg
je
sub
and
or
push
push
andl
mov
cltd
push
xchg
js
cmp
frstor
dec
fstpt
cmp
mov
push
addb
push
mov
sti
mov
out
xor
outsb
scas
test
rorl
or
cmp
int3
mov
in
mov
sub
mov
lods
and
pop
dec
jo
cld
loop
dec
jo
xor
testb
push
cmp
cs
xor
dec
mov
add
negl
arpl
mov
add
add
and
or
cmc
inc
pusha
popf
sbb
fs
add
xchg
xchg
push
outsl
mov
jno
push
nop
in
xchg
xchg
jo
dec
scas
cs
in
and
and
pop
lret
dec
inc
fwait
loope
mov
icebp
xchg
pop
fwait
push
and
rcr
mov
pop
aas
sub
mov
es
xchg
lcall
or
push
ljmp
mov
xor
imul
xchg
call
dec
adc
xchg
sbb
aam
xchg
jecxz
test
sub
popa
cld
sub
lret
stc
dec
xorl
sub
xchg
xor
sbb
rolb
popa
lock
inc
mov
push
xchg
psubsw
dec
int
aam
icebp
lods
jle
dec
int3
dec
xchg
shll
repnz
mov
xlat
daa
xor
push
jl
jle
insb
out
cs
hlt
mov
add
add
cmp
sahf
xchg
lock
pop
sub
das
cli
mov
push
jge
stos
add
movl
rorb
jmp
push
inc
dec
sub
movsb
or
mov
cltd
and
ss
mov
mov
rclb
cld
repz
mov
gs
mov
mov
iret
xchg
fildl
nop
mov
imul
imul
jne
pop
push
ja
outsb
dec
cmp
push
insb
imul
mov
psraw
inc
stos
call
imul
jmp
lock
mov
repz
xchg
sahf
aam
adc
dec
ret
or
push
and
test
mov
push
or
data16
jne
shlb
lock
adc
pushl
popf
stos
sbb
pop
mov
inc
gs
inc
int
je
sub
sub
xlat
dec
iret
loope
lods
lock
add
mov
adc
in
xor
adc
loopew
add
add
add
cwtl
xor
push
pop
pop
jo
sbb
gs
push
ret
xor
fcmove
adc
movsl
repz
or
out
mov
push
inc
loopne
sbb
xchg
xchg
scas
stos
mov
and
scas
and
mov
add
xchg
icebp
cs
add
dec
jno
int
or
adc
ret
cmp
jo
mov
or
pusha
mov
rorl
xchg
inc
ss
jl
lret
insb
mov
rcrl
mov
les
out
mov
xorb
jno,pn
push
hlt
push
gs
sub
std
int3
mov
ss
jmp
lahf
rclb
movsb
popa
add
ds
mov
cmp
xchg
cmp
cld
inc
add
sub
cld
sbb
movsl
lcall
xor
and
adc
stos
nop
mov
mov
mov
in
fadd
mov
add
add
data16
jne
mov
lcall
add
add
add
sub
idiv
clc
sahf
cmc
shll
arpl
insb
stos
addr16
imulb
imul
insl
out
std
mov
lret
and
icebp
inc
ja
data16
or
pop
sahf
lret
popf
mov
push
xor
aad
push
sub
movnti
ret
dec
jle
jbe
push
clc
pop
mov
sub
popa
pushf
jbe
adc
jno
mov
es
or
fadds
sbb
cmp
xchg
stc
and
push
push
jp
mov
fimuls
sbbl
lea
rcll
faddp
mov
gs
push
rclb
movsl
orb
mov
xchg
push
aaa
mov
or
int
mov
add
inc
adc
int
int3
mov
mov
sub
out
dec
inc
add
inc
dec
dec
bound
inc
les
mov
and
lahf
or
js
dec
xchg
push
scas
and
inc
jno
jnp
add
jnp
sti
xchg
lahf
mov
push
cltd
jcxz
add
add
add
lock
outsb
pushf
or
xchg
mov
lea
notl
decl
lret
jo
repz
pop
mov
icebp
lock
and
or
jnp
sbb
out
call
mov
and
push
std
lods
or
push
dec
hlt
sbb
sub
pop
adc
fcoml
or
loopne
clc
into
cwtl
push
adc
bnd
push
shlb
push
in
push
push
movsb
mov
andl
jno
daa
les
push
push
data16
insb
jg
test
jo
pop
xor
mov
xchg
mov
xor
cmp
cmp
add
and
insb
or
popa
insb
sbb
and
jae
or
push
jle
mov
sbb
or
xchg
lret
add
add
insb
pushf
mov
push
lret
push
sub
pop
sarl
mov
pop
addr16
add
add
add
and
cld
ds
jne
test
lods
pusha
lea
or
jmp
rclb
and
jmp
test
imul
inc
dec
push
mov
dec
insl
cs
mov
int3
dec
jle
cmp
lret
fadds
lahf
stc
mov
lahf
daa
inc
xor
adcb
out
cmp
popf
mov
push
add
js
inc
insl
sub
or
and
dec
movsb
pop
pop
and
lods
cli
sahf
jbe
sbb
mov
test
and
lcall
and
xor
or
data16
rcrl
xchg
and
scas
ret
add
fistpll
mov
sbb
aam
add
ss
xor
dec
xor
mov
or
cltd
dec
adc
add
insl
lock
std
repz
inc
out
addr16
add
add
add
jbe
test
clc
addr16
insb
add
adc
push
std
add
cmp
and
pop
insl
repnz
mov
mov
pop
and
mov
jg
xchg
lock
imul
mov
xchg
push
or
fcmove
push
push
pop
add
mov
arpl
test
lds
push
lds
xchg
insb
add
sti
jle
xchg
fwait
mov
push
in
push
mov
sub
cmp
cmc
lret
pusha
push
pop
dec
ja
mov
pop
pop
mov
sbb
sub
aam
push
sbb
shlb
aad
adcl
lret
cmp
mov
movsl
lea
add
cmp
shl
je
or
minps
scas
imul
add
sbb
pop
cmp
or
fidivrs
mov
mov
sbb
xor
add
in
sub
cmp
arpl
je
cmc
popa
mov
add
add
mov
xchg
and
movsl
adc
sub
add
cmpsb
xchg
jne
inc
pop
insl
jb
sbbb
scas
mov
mov
xor
sbb
mov
call
loopne
and
cmp
repz
insl
loop
out
dec
sar
aaa
and
lods
or
dec
decl
insb
popa
cmp
jle
or
add
mov
dec
pop
stos
das
jmp
push
push
movsl
xchg
jl
cwtl
dec
fisttps
push
push
pop
push
cmp
imulb
mov
les
mov
xchg
sbb
cli
fstpl
shlb
fsubr
sub
test
sbb
push
and
mov
icebp
sub
jmp
in
pop
insb
lcall
sbb
nop
mov
sbb
jp
addr16
sub
pop
push
sbbl
and
call
xorb
insl
lcall
mov
inc
sub
pushf
cmpsl
mov
out
add
add
add
lea
mov
adc
loopne
mull
fcompl
jp
adc
loop
xor
cmp
ds
nop
loopne
subl
push
inc
loopne
korb
mov
xchg
push
inc
roll
repz
mov
xor
lods
cwtl
push
push
mov
push
cmp
jl
ds
sarb
mov
inc
int3
icebp
int3
pop
inc
inc
xlat
xlat
sub
or
repz
and
jnp
inc
mov
scas
insb
mov
or
lahf
clc
inc
outsl
daa
stc
mov
mov
popf
adc
mov
mov
in
mov
outsb
out
adc
jl
lods
lods
pop
cld
rorb
hlt
sbb
push
hlt
loope
adc
xor
mov
jge
imul
add
jns
xchg
cmc
mov
and
mov
std
jge
lcall
loopne
lret
xchg
in
mov
incl
shr
shl
sub
add
add
add
mov
addl
or
cltd
ret
sbbb
pop
xchg
testb
mov
mov
and
popf
mov
fisttps
sbb
sbb
out
sahf
mov
adc
mov
rep
xchg
repnz
push
xchg
cld
in
sub
inc
dec
xor
fwait
ret
js
jnp
in
mov
data16
test
mov
aad
mov
insl
jl
decl
imul
push
sbb
clc
push
mov
fs
jnp
push
or
dec
ds
xchg
sub
adc
add
test
shr
lods
pop
test
sub
and
push
lcall
push
in
ljmp
ror
mov
xchg
insl
test
cmp
add
out
push
dec
adc
and
cld
cmp
mov
rorl
nop
stos
mov
add
sub
in
negl
sub
movsb
push
mov
xchg
add
add
add
imul
aas
cmp
inc
cmp
xchg
mov
or
ret
and
mov
xor
lret
ljmp
jl
sub
push
daa
jne
pop
fwait
xchg
adc
xchg
or
mov
mov
sbb
clc
push
mov
fbld
sub
push
ljmp
push
adc
sub
dec
and
dec
add
addr16
stc
jo
cwtl
dec
stos
aaa
mov
mov
sbb
jns
mov
push
sub
faddl
lret
jb
dec
pushf
ror
pop
popf
sarl
push
mov
sub
mov
sub
push
ret
popf
jle
and
jmp
fistps
sub
jmp
lret
sbbl
dec
cli
mov
fwait
aad
dec
arpl
and
aad
lea
adc
pop
adc
test
out
fistpll
stc
dec
push
fsub
nop
xor
addr16
loopne
cltd
insl
sbb
es
and
xor
cmpb
sbb
jbe
adc
shlb
nop
adcb
loopne
add
xchg
push
aam
lret
imul
sbb
mov
add
xchg
jmp
gs
dec
xchg
ret
and
imul
int
outsl
cmp
mov
mov
jb
adc
jae
push
push
xchg
addr16
jmp
jns
iret
ret
sub
pop
cli
sahf
pop
rcll
call
pop
je
jp
adc
sbb
jae
xchg
or
push
dec
roll
or
pop
cwtl
ja
dec
rcrl
sarl
imul
in
fstpl
orb
sbb
les
sub
push
nop
subl
dec
div
leave
std
mov
xchg
jb
mov
mov
dec
mov
add
add
cmp
mov
push
push
push
mov
adc
jmp
add
add
add
pusha
pop
sbb
cli
lret
mov
adc
sub
outsl
inc
or
scas
push
push
fidivs
xor
jno
cmp
in
xchg
dec
xchg
cmp
sub
pop
pause
cmp
outsb
test
adc
xor
xchg
rcr
mov
adc
in
rcl
pop
test
xor
mov
xor
mov
pop
sub
inc
mov
sub
leave
jnp
leave
mov
xchg
cltd
add
nop
cmpsl
nop
imul
xchg
pop
push
and
sbb
push
cwtl
or
aam
cmp
lock
into
je
pop
and
scas
and
jmp
in
pop
sti
or
enter
or
ss
push
inc
iret
cs
push
mov
outsl
jg
add
mov
push
mov
insb
call
mov
aam
xor
add
repnz
add
pop
lcall
les
mov
add
add
add
and
lcall
xor
std
mov
loope
ror
adc
adc
scas
js
stos
imul
arpl
xchg
or
xor
push
xor
dec
fisubl
mov
hlt
add
mov
push
popf
pop
test
pop
fidivs
outsb
jns
xchg
ja
cld
ret
xor
outsb
cwtl
fimull
pusha
xorb
mov
sbb
sub
fs
jo
dec
xchg
push
jge
xor
test
daa
in
bound
dec
sti
add
adc
in
jge
in
out
add
or
sub
mov
and
mov
aad
dec
pop
test
in
stos
sahf
ret
fwait
out
clc
dec
push
jne
adc
and
xchg
inc
push
clc
jecxz
ret
hlt
lcall
jnp
das
and
push
xchg
push
bound
pop
aad
sti
cmp
adc
int3
and
jg
mov
lds
imul
add
pop
mov
push
decl
int
sub
in
add
add
add
sarb
xchg
imul
xor
das
and
push
add
mov
call
aam
xchg
leave
lahf
insb
arpl
das
int3
test
mov
dec
lods
insl
sahf
jmp
mov
icebp
test
sarl
inc
cs
ja
fwait
add
push
push
mov
dec
insl
add
adc
repnz
lret
insl
pop
rclb
movhps
leave
pop
xchg
xor
xor
stos
dec
lret
cwtl
and
lahf
rolb
jo
mov
xchg
in
or
jnp
mov
xchg
jnp
adc
mov
sar
ret
or
in
lods
bnd
arpl
xchg
outsl
roll
or
push
jo
insb
stos
jb
ret
les
push
and
cmp
call
imul
xchg
fistpl
jg
pop
push
out
jl
pushf
lock
es
xor
jmp
and
cmp
sti
fsubp
inc
push
sub
push
addr16
add
add
add
push
repz
push
mov
mov
xor
pop
add
pop
sahf
inc
mov
out
jb
or
insl
int3
fucomi
jnp
test
pop
cmc
push
lahf
dec
mov
xchg
fcoms
sbb
push
cmc
xchg
std
repnz
sub
add
dec
pop
and
movsb
jg
mov
fisttps
es
fdivs
shrb
add
lahf
in
fldpi
ret
in
add
push
push
dec
pop
mov
pop
loope
mov
pop
loope
pop
xlat
loopne
pushf
pop
sti
pop
mov
adc
fbstp
cltd
add
sbb
xor
aam
dec
outsl
cmpsl
mov
sub
repnz
dec
cmpsb
aas
mov
inc
sbb
xchg
cmpsb
fmull
gs
adc
lcall
jno
push
cli
nop
dec
xor
dec
xor
dec
mov
mov
dec
inc
adc
subb
cmp
sbb
arpl
and
and
mov
lcall
out
add
add
add
pop
fcomi
mov
pminub
es
dec
out
mov
outsl
popf
in
lds
push
xor
div
iret
mov
outsb
add
mov
xor
xor
cmc
or
out
divl
inc
jg
jns
aas
faddl
add
jecxz
and
or
mov
mov
and
mov
xchg
lret
loopne
std
and
xchg
push
adc
loopne
loope
push
xchg
inc
lods
mov
in
mov
mov
in
fcoml
les
push
mov
ret
push
cwtl
fists
mov
xchg
das
stc
lret
dec
pop
push
mov
xor
mov
loop
mov
loope
sub
fs
out
push
outsl
loop
in
pop
rorl
mov
scas
pop
jge
cli
lds
in
call
mov
lds
dec
pop
jg
cmp
mov
add
inc
ror
lock
jnp
xor
xchg
movsb
push
movsl
xor
add
add
add
adc
stos
inc
dec
push
jmp
dec
or
xor
ret
bound
cmp
movl
test
clc
add
jns
pop
pop
xor
cltd
push
testb
les
xchg
test
mov
inc
or
jl
sub
lea
iret
sbb
cmp
sbb
cs
das
mov
cmp
sahf
in
ss
int3
cld
sar
dec
sbb
push
jne
add
fwait
jecxz
xlat
xchg
xor
inc
jle
rcrl
sbb
sar
and
lock
mov
icebp
mov
repnz
mov
sti
xchg
ds
ret
push
mov
pop
vmovlhps
mov
lahf
inc
fidivrl
add
lea
shrl
stos
add
dec
movsl
mov
push
jl
or
divl
out
adc
rcll
jg
jge
inc
mov
lock
and
and
repz
fisubs
lods
add
add
add
add
ficompl
cwtl
jl
adc
pop
stos
mov
mov
add
outsl
push
mov
lds
dec
mov
in
or
or
lcall
adc
mov
pop
mov
fisubrl
sub
cmp
sbb
arpl
add
inc
mov
cli
shll
push
fnsave
or
cs
hlt
clc
insl
imul
in
push
gs
aaa
rcll
ds
pop
xchg
stos
pop
dec
pop
daa
inc
fadds
sti
int3
cltd
sub
pop
or
pusha
sti
mov
dec
inc
jge
and
movsl
addr16
pop
icebp
in
xor
inc
cmc
fadds
inc
idiv
rcrl
adcb
push
enter
test
les
fnstenv
mov
cmc
cli
out
ficoms
out
sbb
add
repnz
add
add
sahf
pop
insb
rep
mov
nop
test
lock
push
push
pop
push
add
add
mov
dec
adc
int3
int
stos
es
fistpll
cmp
daa
cld
adc
mov
pop
pop
mov
dec
rolb
jp
mov
lds
inc
shlb
add
mov
inc
and
mov
int
in
push
fldl
mov
mov
fwait
movsb
push
jge
cltd
mov
cltd
and
lcall
inc
and
enter
jmp
shr
push
jg
cld
in
dec
out
mov
mov
andl
dec
dec
js
mov
jno
fstpt
adc
xchg
stos
xchg
mov
test
cmp
push
fiadds
mov
or
inc
nop
xchg
mov
lds
es
xchg
imul
xor
or
dec
scas
sub
bound
push
xlat
hlt
fwait
loope
mov
add
scas
push
repz
cmc
scas
sub
mov
repz
add
add
cld
inc
add
subb
dec
orb
mov
mov
es
hlt
test
xchg
scas
mov
lret
and
add
stc
mov
test
jnp
les
cli
xor
fldl
adcl
pop
loopne
sahf
dec
and
pop
mov
pop
mov
push
mov
movsl
inc
adc
mov
lods
pop
out
pop
loop
xor
sbb
mov
or
mov
insl
push
adc
pop
or
dec
jne
push
pop
rcrb
pop
cmpsb
outsl
loop
mov
push
inc
jg
lea
jbe
out
syscall
es
jne
dec
pusha
imul
push
cmp
int
mov
imul
xor
adc
cmp
xchg
add
das
push
sahf
mov
or
sub
outsl
dec
jle
out
push
aaa
lret
pusha
rorb
cmpsb
mov
dec
mov
add
add
adc
jne
test
cmp
cli
in
gs
cmpsb
ret
mov
fstps
adc
push
repz
push
jg
and
xchg
jnp
fimull
test
pop
and
jmp
xchg
mov
xchg
cmp
aas
sub
jmp
shlb
negl
or
jl
xor
or
fmull
xor
test
lods
shrl
shr
cld
aam
mov
push
pop
lods
fcomi
mov
push
cmp
or
mov
add
ss
push
jno
adc
dec
out
ljmp
scas
cmp
xchg
inc
ljmp
pusha
leave
out
imul
inc
xor
rolb
mov
jge
std
and
jle
int
push
mov
ja
jmp
inc
imul
mov
dec
or
inc
sub
cmp
mov
cld
stos
mov
jecxz
push
testl
push
cli
ret
add
add
add
fcmovnbe
push
sub
loopne
bound
adc
jmp
lret
mov
cmp
movsl
lods
ficomps
stc
insl
jg
leave
pop
push
xchg
aas
jo
scas
jbe
into
popa
pop
fstpl
pushfw
jns
clc
cmp
push
movsl
and
add
sbb
sub
and
test
inc
mov
jmp
and
sub
and
outsb
stos
mov
cmp
add
dec
shlb
adc
cmpsl
insb
daa
cwtl
dec
inc
in
pop
jmp
gs
mov
lea
sbb
sti
jmp
mov
and
sti
scas
adc
ds
xor
xor
data16
cmpsl
push
gs
test
xor
jg
mov
data16
xchg
xchg
loopne
fldcw
sub
inc
ficompl
inc
fbstp
leave
int3
rcl
dec
daa
push
aam
mov
inc
add
and
daa
lahf
mov
pop
das
cmp
in
testb
add
add
mov
jae
fcmovnb
test
aam
or
test
and
iret
stos
pop
sub
or
aaa
add
adc
cmp
fmuls
pushf
and
js
sub
insb
jo
addr16
push
outsb
rolb
lcall
xor
roll
out
and
cmpsl
ss
mov
push
loope
roll
repz
mov
je
cmp
xchg
mov
data16
je
aad
jo
mov
cmp
rcrb
je
cmp
sub
int3
push
stos
cltd
in
mov
into
sahf
and
xor
inc
pop
out
loopne
iret
lods
cmc
test
jl
hlt
arpl
cmp
mov
xchg
mov
lds
enter
mov
sbb
sub
mov
mov
and
push
mov
jno
sub
sub
add
add
fucomi
xor
mov
add
add
add
or
sub
ds
and
xchg
inc
mov
data16
lret
stc
dec
add
dec
push
pop
mov
ftst
bnd
mov
out
sub
sahf
and
mov
mov
ss
sti
daa
les
in
or
ja
push
mov
pushf
test
sahf
lods
push
imul
sbb
cwtl
fwait
into
ds
jmp
es
pop
jge
jns
xchg
xchg
jno
stos
xor
sub
aaa
dec
add
mov
inc
dec
or
loope
jle
mov
js
inc
xor
cltd
adc
fsubrl
test
imul
shl
push
inc
cli
cli
out
pop
aam
stos
xor
out
shlb
mov
popa
aam
repnz
cmpsb
cli
mov
mov
mov
in
mov
add
jbe
push
inc
pop
jns
aas
loopne
sub
fnstsw
add
add
add
movsl
pop
add
sub
stc
arpl
lret
xchg
popf
int3
lret
jnp
fnstsw
or
adc
popa
lret
popf
loop
xchg
pop
mov
inc
dec
out
xchg
leave
call
aaa
mov
jmp
add
xchg
imull
jmp
pop
ret
or
xor
loop
dec
mov
loopne
inc
pusha
push
dec
jp
repnz
test
in
inc
es
mov
dec
sub
sub
out
lret
push
fsubrs
and
incb
insl
pop
push
incb
inc
je
gs
dec
mov
push
fisttpll
stos
add
bound
es
inc
push
js
xchg
adc
fisubrs
or
into
pop
jge
pusha
repnz
add
fs
lds
xlat
dec
sbb
add
mulb
scas
dec
jl
or
cmp
rorb
outsb
loop
xchg
cmp
nop
jbe
mov
jmp
fxch
in
gs
sub
outsb
jge
add
add
jnp
mov
mov
stc
add
add
add
lret
xchg
imul
mov
xor
mov
insb
inc
cmp
std
add
dec
push
sub
push
cmp
int3
push
fisubl
dec
inc
mov
ds
sub
dec
aaa
mov
mov
pop
xor
push
inc
fdivrl
xchg
pop
daa
scas
cld
jg
fsubl
adc
clc
notb
mov
inc
leave
aad
xor
es
ds
ja
out
inc
dec
lret
sub
arpl
and
fsubrs
inc
lods
cmpsl
roll
stos
sub
xor
aaa
aas
lock
mov
inc
cmp
cmp
sub
dec
xchg
jnp
sub
mov
popa
js
lea
and
call
inc
out
ret
dec
dec
jne
stos
mov
dec
cmpsb
sub
insl
test
in
and
out
sub
fnsave
mov
scas
or
dec
imul
gs
add
bound
add
add
add
and
adc
and
mov
popf
or
fwait
dec
sbb
inc
pop
daa
in
pop
loope
lods
xor
mov
lret
aaa
lods
adc
jno
andb
scas
cli
popa
xorl
in
test
or
mov
add
adc
pop
and
push
stos
jae
test
out
jns
int3
or
push
ds
fwait
mov
lret
dec
pop
inc
mov
push
loopne
push
mov
stos
add
fs
hlt
repnz
aam
aam
jnp
push
test
pop
mov
out
sbb
rolb
xchg
lods
aaa
lock
test
mov
cltd
adc
xor
pop
dec
int3
mov
jp
jnp
inc
xor
inc
repnz
mov
push
add
mov
inc
lods
ret
push
cmp
repz
int
sbb
mov
push
xlat
arpl
std
rolb
mov
add
fdiv
mov
inc
in
in
js
sti
add
add
add
sbb
xchg
lods
std
test
pop
lods
arpl
repnz
xor
int
xchg
fwait
xor
jl
jmp
adc
dec
cmp
loop
aas
fcoms
decl
int
jbe
pushf
jmp
hlt
lret
sti
pop
pop
sub
lret
data16
testl
mov
push
pop
xchg
push
jb
mov
out
imul
pop
pop
jle
lods
sub
repz
xchg
sbb
fnstenv
fwait
pop
inc
add
cmpsb
and
cmp
lret
lea
pop
outsl
mov
cmpl
out
cld
pop
mov
push
mov
sti
jl
lds
mov
xchg
lret
idivb
clc
and
pop
or
jnp
push
rcr
clc
adc
mov
xchg
aad
into
int3
sarb
push
jo
jg
pop
fucom
decb
insl
xor
in
arpl
xchg
jnp
ja
pop
xchg
hlt
add
add
test
mov
fidivrl
cld
add
add
add
rol
push
mov
dec
xor
push
mov
dec
dec
mov
add
test
jne
sub
push
jp
sub
jno
incb
out
fldenv
mov
pusha
pushl
mov
xor
xchg
popf
xchg
inc
jle
jle
push
mov
push
xor
sahf
inc
push
cmc
cmp
jns
push
mov
scas
rcl
pop
cmpsl
mov
aaa
or
arpl
push
or
rcrl
jmp
jae
les
out
mov
mov
inc
hlt
mov
sbb
loopne
cli
repz
movsl
ja
mov
dec
inc
inc
inc
and
mov
shlb
or
pavgb
cmpsl
aas
imul
imul
jne
je
xchg
jne
in
dec
test
mov
aam
dec
mov
jmp
imul
lahf
repnz
xchg
inc
outsl
ja
std
add
add
add
cmp
lods
sarl
xchg
push
xor
enter
fisttpll
pop
xor
movsb
inc
adc
inc
adc
inc
sub
out
jle
ss
xchg
call
mov
xchg
inc
into
cmpsb
add
push
sahf
ficoms
push
dec
cwtl
cmpsb
imul
sub
mov
jo
movsl
jl
aam
ret
sub
dec
das
jnp
stos
stos
fdivr
dec
cmc
popf
mov
dec
ret
lods
in
pop
xor
fwait
add
ficomps
daa
push
jmp
jmp
mov
lods
jns
push
push
outsb
fmull
ljmp
arpl
sub
mov
adc
mov
jp
dec
and
mov
fucomip
es
dec
das
or
sub
mov
push
clc
dec
dec
iret
add
lds
mov
push
roll
fwait
dec
xchg
inc
add
pop
lods
pop
cli
cmc
cmpsb
lret
mov
incb
add
add
add
jg
in
clc
mov
loop
icebp
add
iret
adc
rorl
cmp
push
call
jbe
arpl
jae
jno
sub
les
jmp
pushf
fiadds
jmp
mov
and
pop
jg
mov
add
movb
dec
jo
mov
mov
xchg
xchg
cmp
std
out
test
in
test
jp
rorb
lcall
ljmp
mov
xchg
xchg
cmp
inc
outsl
icebp
adc
imul
stos
push
pop
mov
inc
rcll
inc
data16
mov
sbb
imul
outsb
pop
jne
insb
loopne
mov
mov
inc
adc
std
nop
in
mov
and
add
and
push
sar
pop
call
xchg
mov
push
mov
mov
sbb
xchg
lea
add
add
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
pop
je
pop
addb
sbb
jae
cmp
or
adc
or
nop
popa
in
in
das
xchg
cmpsl
xchg
iret
and
push
std
push
xchg
push
xor
cwtl
dec
loope
stos
sub
and
push
pop
test
pinsrw
aaa
xchg
xlat
ljmp
cmpsb
or
jae
and
xchg
mov
repz
aaa
cld
stc
fwait
insb
cmc
ja
movsb
jb
cmp
mov
cmc
pop
or
shll
stos
jne
in
dec
sbb
jne
scas
mov
sub
fldl
movsl
inc
sbb
sub
pop
push
aas
fiaddl
xchg
mov
jno
xlat
xchg
fidivrs
and
xor
repnz
daa
mov
and
jbe
or
not
xchg
xor
jno
mov
outsb
inc
adc
add
push
pop
and
pop
push
dec
les
icebp
add
jge
dec
mov
nop
test
aam
int
aaa
das
aam
cwtl
cs
add
add
add
add
jge
jl
add
and
push
je
adc
sub
scas
or
xlat
sub
mov
mov
daa
mov
cmp
scas
adc
pop
push
cltd
xchg
in
xchg
les
je
outsl
aaa
repnz
imul
xchg
push
sbb
dec
mov
out
ljmp
inc
les
xchg
push
test
sub
cmp
je
scas
ret
test
movsl
sbb
mov
jge
in
mov
or
push
gs
aam
pop
out
xor
xor
mov
add
sub
cld
xchg
ljmp
in
int3
inc
ds
or
pop
cmpl
idivl
pop
cmp
paddusb
subb
repz
test
nop
fsubrl
movb
push
add
add
pushf
xchg
inc
xchg
fidivrs
sub
jge
push
movl
add
add
arpl
addr16
sub
xor
les
add
add
add
add
sbb
adc
loopne
mov
add
clc
stos
into
int3
cld
ret
xor
inc
mov
and
push
jmp
inc
loopne
xchg
xchg
imul
fdivs
mov
mov
int
pop
mov
add
mov
int
cmp
movsl
jle
sbb
test
cmc
fisubrl
insb
mov
cmpsl
pop
es
push
push
jne
cmp
adc
mov
mov
stc
aas
shll
jns
or
jge
fadd
mov
sbb
sarb
popa
mov
jae
jge
pop
mov
mov
or
push
inc
or
pushf
shll
jle
xchg
and
mov
test
pop
mov
jmp
dec
hlt
out
pop
sbb
or
add
mov
xadd
imul
into
add
add
add
out
out
pushl
xchg
xor
cwtl
lea
add
add
add
mov
mov
sbb
insl
cmp
dec
rorl
push
aas
mov
jmp
cpuid
cmpsl
pop
pop
dec
outsl
xchg
lcall
xor
inc
int
sbb
push
icebp
arpl
or
mov
push
sub
fsincos
mov
xor
mov
loope
push
pop
pop
mov
fcmovne
or
bswap
adc
ja
movsb
insl
fcom
bound
sbb
fstl
fs
adc
mov
inc
sbb
adc
out
call
sub
pop
int3
mov
adc
cmc
jg
or
jnp
sub
mov
aas
xor
jp
mov
faddl
js
decl
add
test
sub
pop
inc
mov
or
mov
daa
inc
dec
mov
xor
dec
add
mov
out
test
push
scas
mov
into
jmp
add
add
add
add
loope
inc
mov
cltd
std
adc
push
mov
out
ds
sbbb
jecxz
enter
subb
jle
add
or
fstpl
mov
pushf
push
adc
mov
fstl
pushf
out
pop
mov
ja
jl,pt
mov
pop
jp
cmc
dec
xchg
pop
decb
adc
test
and
cmpsl
pop
shll
in
nop
adcb
orb
mov
inc
mov
mov
loop
mov
stc
add
add
mov
xor
gs
adc
stc
movsb
jnp
aam
adc
sbb
notl
xlat
mov
mov
inc
cmp
xor
outsb
leave
jle
cmp
or
sbb
in
and
out
aam
arpl
negl
pop
inc
std
dec
mov
xchg
mov
jo
mov
notb
jecxz
aaa
xchg
and
movsl
mov
mov
mov
out
addr16
add
add
add
xchg
xlat
inc
ret
outsl
dec
and
fnstenv
ljmp
mov
in
pop
bound
lea
pop
movsl
popa
cmp
test
mov
push
hlt
test
decl
xor
xchg
cmp
pop
fistpl
and
fiadds
pop
push
mov
adc
jae
adc
ljmp
pop
popa
test
push
or
pushf
shlb
std
fcoml
scas
push
push
jle
idivb
enter
jo
xchg
je
es
pushf
mov
out
cli
mov
lea
test
xor
mov
pop
insb
jo
fbld
sbb
enter
bound
add
je
dec
or
add
or
mov
roll
loop
ror
mov
xor
in
fmull
mov
ret
rcll
sbb
add
add
mov
push
jg
mov
xor
insb
mov
add
add
rcr
mov
and
adc
inc
int
lea
inc
inc
pushl
cmp
ss
xchg
mov
cwtl
test
in
xabort
jmp
push
xor
xchg
test
adc
pop
mov
aas
mov
mov
dec
std
jo
nop
std
or
cwtl
xchg
or
and
cmp
jbe
iret
xor
sbb
jge
fdivrl
orb
sti
lcall
inc
roll
inc
test
icebp
adc
into
leave
arpl
dec
cmp
xor
jmp
cmpsl
shl
inc
dec
negl
jo
in
xchg
enter
ficomps
jg
sub
or
pop
ljmp
sub
dec
add
mov
daa
sbb
mov
sti
sbb
and
jo
insb
stos
cltd
pop
sbb
push
fisttpll
arpl
or
aad
sbb
jecxz
pop
insb
imul
inc
stc
mov
mov
lods
imul
xchg
adc
addr16
add
add
add
stc
mov
lret
dec
aam
and
cld
pop
repz
in
dec
lea
mov
xchg
leave
nop
shld
fbstp
cmp
ss
cmp
mov
mov
enter
loopne
in
outsb
mov
fs
lods
mov
lret
add
inc
and
pusha
pop
mov
mov
sub
hlt
add
mov
rorb
pop
mulb
inc
scas
mov
gs
mov
xchg
push
filds
jae
xlat
jmp
les
iret
fwait
rcrb
outsl
filds
cmc
dec
out
insb
lock
das
inc
pop
xchg
stos
sbb
stos
xchg
sub
negl
sbb
aad
addb
std
test
outsb
add
sbb
outsb
sahf
rorb
rcrl
sub
jge
dec
or
adc
jnp
and
bound
and
sbb
ret
cmp
sub
outsb
out
sbb
ja
sar
xchg
sub
scas
or
cmp
mov
inc
fisubl
add
add
add
add
cmp
stos
icebp
jnp
ret
ja
pop
leave
shll
lret
bound
dec
sbb
subb
fsubrs
jp
fucomp
repz
push
ret
xor
cli
xlat
les
fists
aad
lret
lods
cld
push
jp
adc
int
scas
imul
lret
and
cwtl
push
fwait
aam
adc
push
enter
xchg
call
ds
xchg
sub
loope
cld
dec
shll
dec
mov
sbb
jge
out
jns
mov
aas
inc
loope
test
xchg
test
out
pop
inc
xor
scas
or
pop
push
mov
jg
xor
or
cmp
cmp
sbb
cld
mov
out
mov
dec
or
ja
test
into
cs
jmp
pop
cmp
daa
lret
rcrl
add
xchg
enter
push
fbld
add
shlb
add
add
add
mov
add
nop
or
addl
cmpsb
jle
lret
pop
cmp
mov
lock
mov
xor
cmp
push
xor
xor
and
adc
rol
inc
jno
loop
pushf
xchg
push
jns
push
add
inc
sbb
scas
or
lds
push
push
movsb
push
push
push
mov
xor
adc
adc
scas
push
bnd
int
out
mov
add
fwait
mov
cmp
data16
rol
cltd
xor
aaa
lret
xchg
test
or
popf
orl
dec
movb
es
aaa
shr
add
test
xchg
insb
out
lds
xchg
add
sbb
jmp
sbb
ss
adc
xchg
and
mov
fs
adc
stos
jo
cmpsb
into
test
mov
into
fwait
add
mov
das
or
add
add
add
dec
lods
cmp
popf
lret
fwait
sub
add
jge
cwtl
lret
jbe
push
outsl
pop
push
daa
int3
test
sub
outsb
movsl
insl
pop
sahf
xchg
inc
dec
sahf
mov
inc
dec
jmp
cmp
jnp
call
insb
mov
inc
adc
xchg
in
negl
cltd
sub
cli
add
enter
int
in
pop
nop
sbb
pop
add
lret
mov
pop
cmp
sbb
jmp
scas
and
in
mov
jle
enter
fldenv
pop
psubw
stos
xchg
iret
test
icebp
and
pop
mov
sub
cmpsl
pushf
scas
shll
xchg
pop
xor
or
xor
in
cwtl
divb
cltd
scas
and
push
dec
jg
and
fisubrl
sbb
and
cmpsl
jns
cmp
and
jmp
mov
rolb
add
jl
test
out
mov
pop
sarb
in
clc
lods
shll
add
add
add
push
and
mov
into
jne
push
jg
in
sbb
and
adc
mov
fldenv
data16
sti
mov
les
dec
jo
and
mov
jp
jge
lahf
inc
cmpsb
sti
mov
xlat
sbb
in
enter
fbld
testl
xor
fbld
cli
xchg
or
shrb
jmp
movsb
das
popa
je
pop
mov
test
addr16
jb
sbb
fsubrs
addl
insl
xchg
cmp
rcl
in
add
xchg
sbb
rol
sbb
xchg
paddd
loope
mov
jbe
lahf
jnp
xor
push
stc
mov
or
push
fwait
xchg
imul
xor
mov
inc
into
sti
jo
mov
mov
gs
lds
cld
stos
cs
mov
insl
pusha
sti
inc
out
aas
mov
shl
icebp
mov
or
add
add
add
mov
xor
mov
jnp
xchg
ss
mov
lea
daa
mov
xor
and
xchg
hlt
xor
stos
fimuls
int
subl
rcr
jg
test
jns
fs
push
nop
dec
int3
in
push
lret
lds
aas
popf
dec
cli
and
adc
iret
lcall
push
xor
lods
and
call
mov
mov
and
cmpsl
inc
push
into
and
push
test
sahf
cmpsl
pushf
mov
mov
mov
jg
xor
cli
movsb
fwait
mov
push
cwtl
movsl
jb
pop
cmpsl
push
mov
dec
leave
fldcw
pop
inc
js
stos
mov
sbb
mov
fldl
adc
push
jecxz
add
je
lret
pop
in
pop
punpckhwd
mov
or
ds
xor
cs
sub
pop
test
and
clc
ja
sahf
or
je
ljmp
testl
add
add
bnd
dec
leave
and
xchg
lret
add
add
add
add
add
push
push
mov
mov
test
lahf
jle
jge
sbb
rcll
dec
mov
adc
lea
jne
addr16
mov
loop
dec
out
mov
ficoms
cmc
jle
cwtl
dec
jno
out
push
jne
negb
test
pop
sub
enter
insb
push
ficoml
cmpsb
in
push
push
xchg
cwtl
sti
cmc
sub
sbb
leave
jg
out
adc
pop
add
int3
adc
xor
ja
xchg
xchg
cld
bound
jmp
je
and
or
outsl
inc
pop
sub
out
jo
nopl
rol
mov
or
aad
sub
popf
xchg
push
sbb
push
notl
data16
add
iret
cmp
cmp
ljmp
jnp
jl
ljmp
sub
in
gs
mov
push
add
jl
add
add
in
out
ja
filds
or
add
add
pop
lret
idiv
push
mov
push
outsl
dec
mov
or
and
cmpsl
enter
dec
in
enter
dec
inc
jae
sbb
pushf
pop
aas
stos
lahf
xor
mov
xor
rorb
inc
ret
in
mov
fsubrl
das
aas
sbb
dec
mov
xor
dec
test
fnstsw
test
pushaw
shlb
dec
sub
movsb
push
les
out
pop
in
mov
rclb
jmp
outsl
mov
iret
movsl
cmp
dec
push
pop
popa
pop
inc
xor
xchg
xor
xor
scas
ret
ror
enter
jbe
mov
pop
jbe
repnz
ljmp
movsb
jnp
jge
mov
or
test
repnz
mov
or
daa
pop
cli
addb
stos
popa
fwait
mov
stos
mov
cs
out
xchg
push
idiv
mov
add
add
pop
in
inc
push
or
jno
addr16
add
add
add
jnp
pop
fstps
das
fbstp
std
mov
ds
adc
lret
jbe
ja
mov
jle
cltd
cwtl
push
mov
mov
sbb
fwait
or
inc
js
add
push
adc
pop
popf
cmpsb
push
jg
ja
xor
xchg
clc
in
jne
xor
mov
int
or
xor
fdivs
push
popa
push
addb
lret
ljmp
add
imul
mov
test
push
jne
or
test
movsb
inc
das
ss
cs
addr16
and
mov
stc
adc
mov
inc
pop
repnz
add
and
jo
movsb
push
cmp
xchg
aam
cmpsl
popa
repnz
cmp
iret
arpl
cmp
push
cs
push
lret
push
dec
jns
orl
in
iret
xor
or
xor
mov
or
icebp
mov
jg
neg
pop
daa
inc
sbb
add
add
add
imul
ds
pop
xchg
fbld
loop
cmpsb
xchg
movsl
push
sti
mov
mov
and
bound
dec
sub
push
shll
inc
data16
sbbb
std
jecxz
mov
xchg
mov
std
pop
repnz
xor
sub
jnp
leave
inc
out
mov
addr16
pop
in
inc
mov
sbb
inc
push
mov
mov
adc
mov
push
or
and
pusha
pop
and
pop
imul
fnsave
jmp
adc
lea
cmpl
insl
iret
or
adc
sub
out
ffreep
fdivs
push
mov
jp
sbb
xchg
ljmp
push
pushl
test
nop
iret
sub
lret
iret
in
push
and
and
loop
pop
pop
inc
xor
mov
jo
inc
lcall
add
cmp
sti
jg
cmp
je
outsl
cmp
add
add
add
jmp
cmp
sahf
mov
sti
shll
das
adcb
inc
mov
mov
aaa
stos
std
in
jl
and
push
loopne
test
push
jp
fwait
sub
mov
es
mov
inc
adc
push
or
pop
ss
jo
mov
sbb
mov
xor
cli
in
xor
test
xchg
dec
into
cmpl
rol
dec
mov
popf
out
sahf
pop
mov
mov
or
add
mov
mov
adc
popf
repz
jno
pop
mov
clc
add
fbstp
dec
cwtl
int
das
outsl
mov
daa
lock
ret
jecxz
stos
cmpsb
dec
iret
and
dec
mov
add
mov
xchg
push
mov
mov
stos
sub
mov
push
push
test
aad
and
or
loope
outsb
cmp
fistps
lods
arpl
jnp
scas
aam
jnp
fstp
fcompl
xor
popf
adc
add
add
add
mulb
sub
mov
or
sub
sbb
and
jle
jb
loopne
hlt
in
jmp
push
fists
add
or
mov
pop
loop
aaa
cltd
xchg
mov
in
jmp
jg
arpl
scas
cmp
or
add
mov
adc
sub
mov
cmp
insl
jb
adc
jmp
ja
xchg
adc
lret
js
loopne
lods
xchg
test
pop
cmp
jne
dec
pop
pusha
xchg
fcmovnu
outsb
cmp
fcmovnbe
ret
loop
scas
les
in
jb,pn
add
inc
in
add
enter
cmc
or
mov
jae
sbb
sbb
out
sti
int3
loope
call
push
into
mov
sbb
adc
push
mov
mov
shl
scas
jmp
sub
inc
test
add
add
outsl
mov
add
arpl
xor
add
add
add
fmuls
mov
dec
mov
dec
lods
or
adc
pop
jecxz
cmp
push
or
in
push
daa
pop
or
mov
sub
mov
enter
cs
addr16
dec
jne
nop
xlat
cmp
int
sub
repz
and
add
xchg
push
mov
dec
dec
nop
repz
mov
jecxz
add
lret
rcrl
rcrb
cmpsl
inc
mov
mov
rcl
jp
daa
xor
sbb
adc
mov
call
or
pop
jae
mov
xor
jmp
movsb
pop
leave
xchg
cmp
add
addr16
imul
jb
es
inc
push
pop
pop
hlt
testl
and
inc
dec
mov
cmp
es
push
cmc
lret
xchg
rolb
movsl
sbb
std
aas
out
sbb
stos
add
xchg
out
inc
rcll
fdivp
pushf
sbbb
loope
jmp
fldl
xor
cld
adc
add
add
add
add
add
lret
xchg
loope
data16
arpl
mov
inc
cmp
add
cltd
pop
in
jecxz
mul
sbb
sbb
sbb
pop
dec
cmpsb
lret
jl
add
or
icebp
lock
jp
into
pushf
out
addr16
sub
mov
fcmovnb
pop
stos
test
and
cwtl
or
cli
out
mov
jge
fnstenv
mov
add
cli
stos
test
jle
sub
jo
and
lds
sbb
push
test
or
dec
pop
sbb
add
adc
mov
adc
fcompl
scas
pop
cmp
sahf
mov
mov
mov
fcoms
xchg
je
dec
dec
ds
sub
sahf
or
loop
xor
scas
testb
pop
daa
fs
mov
inc
fsubrs
adc
pop
push
leave
fmul
and
jge
xor
xchg
lds
rcll
pop
addr16
add
add
add
je
mov
dec
scas
push
sahf
inc
and
mov
fisttpll
in
or
fisttpl
fiadds
cmp
out
pop
sbb
ffreep
cmp
pop
push
cs
pop
imul
cli
sub
dec
push
bound
pushf
lods
test
popf
lea
clc
int3
or
and
ss
inc
ret
xlat
push
les
cli
xor
dec
push
pop
push
lods
and
push
fabs
repnz
fcoml
loop
nop
adc
test
push
pop
lea
outsl
or
outsl
iret
dec
dec
jo
push
imul
push
mov
ja
mov
stc
idivl
cmpsl
cs
mov
dec
ret
pop
sahf
aad
add
lods
or
push
out
push
sbb
pop
lods
not
push
mov
lahf
pop
cmp
sub
test
leave
int3
popa
jne
rcrb
popa
mov
scas
gs
imul
add
add
cli
inc
jg
int
xchg
lods
or
loope,pn
addr16
add
push
movsb
adcl
cld
addl
aad
xor
mov
andb
rcrl
gs
js
inc
imul
and
mov
sub
arpl
mov
mov
outsb
cmp
cmp
pusha
push
out
xchg
push
aad
pop
or
call
imul
dec
daa
cli
mov
inc
jae
mov
push
les
mov
jp
in
fldl
pop
je
dec
push
movsb
insl
mov
mov
pop
pop
push
jno
lods
cmp
mov
out
mov
xor
pop
ljmp
scas
mov
and
mov
mov
ret
lahf
cmpsl
mov
sarl
out
cmp
sub
sub
outsl
cmc
push
add
stc
mov
stos
in
lds
bound
dec
inc
mov
inc
mov
add
add
xchg
std
cmp
jle
fistpll
fisubl
push
add
add
add
mov
mov
shrb
stos
shrl
push
into
xchg
and
in
arpl
les
inc
std
ret
inc
sbb
cmp
cmp
imul
orb
popf
pop
fisttpl
js
push
sub
xor
nop
xchg
pushf
pop
out
add
mov
push
jae
pushf
movsb
ret
addr16
dec
xor
std
inc
add
mov
sub
xchg
fnstenv
push
mul
add
mov
jp
sub
insl
mov
adc
out
mov
outsl
mov
jnp
cmpsl
sub
shr
jge
shr
pop
adc
sub
clc
sub
xor
dec
add
push
mov
mov
adc
imul
aam
into
jae
cli
sbb
test
repz
jb
sahf
inc
mov
xor
xchg
pop
lds
xlat
ficompl
inc
push
out
sahf
dec
addr16
add
add
add
cli
mov
mov
mov
push
add
xor
xor
roll
imul
stos
jge
mov
addl
outsb
pop
push
cs
push
cltd
cmp
loopne
mov
js
xchg
push
sbb
inc
jle
add
fimull
fdivrl
inc
jecxz
test
into
pop
inc
pushf
scas
xchg
into
scas
mov
add
xchg
sbb
adc
hlt
in
mov
push
and
shl
addb
sub
rcrb
ss
rorb
mov
pop
xchg
arpl
sbb
mov
gs
pop
cmp
xor
push
cmpsl
push
mov
nop
movsb
into
jo
pop
xchg
cmp
or
sbb
and
out
loopne
std
shll
xlat
mov
cli
dec
inc
aas
pop
sbb
shll
sbb
lahf
je
inc
or
add
add
sub
iret
outsb
jmp
push
test
daa
push
sub
add
add
add
cmp
lret
fstpl
dec
cmp
jno
dec
je
int3
dec
adc
in
sti
pop
or
and
out
jnp
mov
fdivr
sbb
idivb
inc
int3
mov
push
add
sbb
xchg
test
enter
or
out
cmpsb
sbb
jnp
pop
add
dec
fistps
mov
cmpsl
fimull
imul
cli
sbb
stc
popf
sahf
cmp
lock
or
lods
cli
push
and
outsl
es
inc
xchg
test
jmp
in
lret
push
adc
andb
cmc
adc
aas
aas
and
nop
aaa
fbld
outsl
jb
test
lcall
sub
mov
sub
cli
jge
cmpsb
pop
jnp
jo
add
int
out
imull
sub
ret
pop
into
xchg
jmp
fnstenv
call
add
std
sbb
stc
cld
or
sbb
xor
add
add
add
mov
fs
inc
add
arpl
je
stos
sbb
mov
add
mov
mov
mov
pop
jge
addl
xor
dec
xchg
lret
test
mov
xchg
jbe
mov
inc
scas
pop
pop
sbb
out
jne
dec
adc
mov
data16
cltd
jle
lahf
push
jmp
mov
and
sbb
movsb
sub
in
jne
ljmp
jae
pop
incb
scas
mov
lret
iret
inc
out
push
pop
ffreep
inc
leave
jge
adc
out
lcall
mov
xorl
jnp
xchg
or
cmp
pushf
int3
cmp
mov
lcall
mov
sub
fimull
mov
aas
inc
repz
push
mov
into
pop
enter
stos
and
inc
ror
cmp
pop
push
je
push
sub
xchg
add
leave
cmpb
scas
negl
adc
pop
xchg
cmpsb
mov
cmp
sbb
add
add
add
mov
sub
sbb
push
pop
cmp
cwtl
ss
shl
xorb
pop
jae
shl
repz
lods
xchg
subl
int
and
ljmp
jbe
shlb
push
rorb
xchg
gs
jb
push
repz
out
push
aad
sbb
and
dec
mov
popf
adc
addr16
fildl
aam
bound
lea
pop
js
adc
cltd
sti
inc
sbb
xchg
mov
sbb
or
cmp
test
ja
cmp
mov
dec
das
lds
shl
pop
jno
shlb
mov
dec
adc
int
sbb
cmpsb
mov
aad
mov
jle
mov
lds
aas
xchg
and
jg
xchg
and
test
test
jl
icebp
push
jnp
sbb
int3
mov
stc
sub
stos
insb
mov
jno
mov
dec
pushl
mov
xor
add
add
jae
xor
fdivp
call
add
adc
xor
mov
dec
in
sbb
es
dec
mov
xchg
pop
xchg
sbb
mov
jge
jp
or
xchg
scas
cmp
cltd
xchg
dec
out
insl
mov
mov
nop
repnz
push
push
dec
inc
xchg
jae
mov
sahf
lea
xchg
dec
cmp
clc
push
xor
sub
xor
cmp
mov
addr16
ljmp
sub
outsb
jmp
and
aad
pop
cmpl
in
mov
jl
inc
stos
and
pop
pop
xor
adc
outsb
adc
call
cmp
dec
push
das
clc
popa
mov
int3
mov
xor
sub
std
je
addl
add
add
inc
ja
pop
aas
dec
push
pop
mov
sbb
add
add
add
pop
and
sbb
je
and
mov
test
popf
aas
movsb
cmp
sti
sbb
cmp
divl
jmp
mov
aaa
pop
push
inc
mov
lret
jle
jae
xchg
cmc
mov
and
jb
push
divb
in
mov
adc
jns
dec
and
int
mov
orb
cmpsb
hlt
popf
cwtl
adc
out
sbb
scas
out
inc
sbb
daa
dec
frstor
das
inc
test
bnd
cmp
jmp
adc
lret
icebp
leave
mov
sbb
jne
scas
jp
jecxz
testl
sar
or
adc
jmp
inc
stos
dec
test
outsl
push
lret
imul
adc
test
mov
xchg
repz
pusha
push
or
cmpsb
sbb
adc
in
addr16
lods
mov
mov
push
out
outsb
fnstcw
mov
iret
repz
jae
ja
div
mov
repnz
dec
addr16
add
ljmp
inc
mov
mov
scas
lea
loope
or
loop
test
cmp
or
jmp
mov
pop
xchg
scas
dec
sbb
ret
std
cmp
fisubrl
repz
movsl
fdivrl
ret
inc
daa
cltd
push
ret
mov
sub
jae
push
fwait
dec
test
bound
mov
out
sahf
push
cli
sti
ret
inc
pop
push
popa
xchg
int3
ret
pop
mov
imul
scas
and
fadd
pusha
sti
cwtl
not
or
loopne
mov
mov
nop
push
inc
dec
jns
dec
leave
out
movsb
sub
push
mov
fidivrl
insb
roll
notb
test
sbb
cmpsb
push
test
dec
test
cmp
push
xlat
rorl
movsb
sarb
mov
mov
fisttps
xor
outsb
es
xor
cld
and
add
add
cli
std
jg
push
pushf
dec
out
ja
addr16
add
add
add
push
sbb
push
scas
icebp
in
sub
add
aad
cmp
and
jnp
imul
push
and
insb
ds
ds
test
mov
das
mov
addr16
dec
jg
aad
pop
aad
fsub
inc
dec
lock
pop
pop
aad
icebp
mov
int3
mov
ljmp
inc
insb
add
xor
mov
ds
mov
jnp
mov
imul
repz
pop
cmp
mov
fldl
lods
ret
or
ljmp
js
jo
dec
adc
jecxz
sahf
ds
and
fsubl
bound
adc
jo
in
jl
iret
sub
shlb
mov
mov
pop
jb
stc
clc
inc
jne
xor
mov
dec
out
push
xchg
and
jb
cmp
arpl
cmp
fistpll
testl
incl
sbb
fucomi
inc
packuswb
add
add
add
ficompl
push
adc
and
out
push
cwtl
adc
push
mov
iret
xchg
cmp
stos
stc
or
es
pop
jge
packsswb
jo
jle
cmp
fldenv
insb
inc
mov
xor
add
imul
push
cmp
ljmp
sbb
in
nop
mov
imul
pop
cmp
mov
dec
rorw
pop
push
andl
jp
adc
lcall
sar
fnstcw
int
ret
mov
outsl
jnp
inc
jle
push
xorl
fldenv
repz
mov
lahf
sahf
add
mov
mov
mov
enter
jo
push
push
add
pop
lahf
sub
jno
xor
addr16
add
jnp
push
mov
sub
enter
sub
lods
mov
xor
aas
mov
and
adc
mov
cmp
in
lret
push
es
jg
pop
or
xor
sbb
and
add
add
add
mov
sub
jb
js
cmp
pusha
push
jbe
push
insb
test
daa
xchg
jg
out
movsl
add
fsubrl
and
or
push
mov
roll
add
pop
mov
lock
cwtl
stos
jb
pop
jle
dec
lret
int3
and
fidivrl
jbe
addr16
stc
cltd
push
lret
and
testl
lret
ret
inc
scas
mov
or
aas
pop
sbb
and
addl
call
xchg
stc
jb
int
sub
dec
je
sub
push
ja
adc
mov
scas
iret
stos
outsl
add
mov
out
test
add
fwait
cmp
mov
fwait
cmp
inc
mov
test
xor
daa
jl
fstpt
repz
flds
jns
out
jle
in
xchg
cli
iret
and
sbb
les
xchg
cmp
and
inc
ss
cltd
push
clc
or
dec
push
cmp
and
add
add
add
push
sub
mov
push
adc
dec
xchg
out
lcall
add
sbb
sbb
cli
dec
lret
sbb
fcmove
mov
and
add
or
imul
pushl
or
cmp
lret
daa
sub
xor
jno
fldt
movsb
daa
adc
push
and
lret
js
int3
subl
sbb
loope
cmp
fwait
sub
js
or
pushf
xchg
cwtl
lods
into
xchg
jo
jl
pop
xchg
ljmp
dec
sub
into
stos
movsb
mov
adc
testb
sbb
fwait
jb
pop
loope
sbb
in
adc
loope
jbe
xor
xchg
aaa
push
push
dec
lahf
sbb
pop
push
sbbb
and
mov
leave
and
xor
mov
mov
add
add
add
clc
jp
ficoms
or
pop
stos
cmp
repz
out
inc
sarb
adc
mov
sbb
xchg
adc
push
stos
enter
xor
js
jl
aas
or
mov
push
or
clc
mov
outsb
outsb
mov
lret
ja
vmovlhps
jl
arpl
mov
into
dec
shll
jl
adc
lahf
cmp
or
xchg
push
xchg
push
fisttps
das
xor
pop
fmull
xor
cmpsb
dec
sbb
push
int3
icebp
dec
lahf
js
xor
xor
xchg
pusha
jnp
inc
xchg
xlat
inc
inc
jp
call
or
psubw
sbb
sub
gs
shlb
pop
pop
adcl
shrb
lcall
pop
pop
jae
adc
sti
out
mov
pop
or
int3
sub
jge
xchg
mov
out
add
add
ficoms
stos
sbb
call
mov
and
add
add
add
mov
arpl
sub
and
xor
outsb
call
subb
outsb
icebp
dec
push
xchg
ja
xchg
or
loope
mov
jmp
lds
jge
addl
mov
pusha
shrl
test
mov
es
shrl
inc
add
or
dec
arpl
push
jno
outsl
bound
std
test
pop
inc
stos
gs
xor
xor
and
fbld
popf
lea
pop
out
fbstp
cmp
adc
cmp
cs
outsl
mov
addr16
in
cmp
daa
cld
imul
pop
push
popa
int
gs
and
outsl
cltd
shlb
xor
adcl
mov
je
mov
jp
shll
cwtl
lods
lods
mov
inc
mov
addl
test
pop
imulw
jns
int3
sbb
lahf
push
insl
jb
or
repz
mov
out
stos
jge
or
sub
xor
add
add
push
adc
test
mov
in
jle
pusha
movsl
rclb
sub
mov
sub
fninit
loope
push
int
mov
mov
mov
mov
mov
or
push
dec
jg
jp
mov
inc
scas
sub
int
rorl
dec
jb
ja
cld
or
std
sub
shr
ret
or
or
in
test
xlat
mov
call
rcl
fdivr
into
test
and
rolb
mov
jg
pop
ds
mov
inc
lret
cmpsl
lock
imul
jae
gs
lea
mov
dec
stos
js
call
scas
pop
or
cmp
cs
cmp
sbb
out
ja
mov
push
cltd
cmpsl
ds
cmp
popa
sar
xchg
inc
dec
iret
mov
andb
in
jmp
cmpsb
jl
leave
mov
jnp
push
add
add
sbb
out
xchg
iret
push
aas
inc
xchg
data16
addr16
add
xchg
in
cmpb
pop
mov
lret
dec
xchg
mov
mov
shlb
shll
cltd
dec
or
mov
dec
sar
add
xchg
inc
add
sbb
inc
sbb
in
data16
es
lods
xchg
inc
aaa
mov
fsts
stc
movsl
mov
test
dec
lahf
fcompl
insl
push
roll
pop
sub
and
call
xchg
cmp
jge
js
dec
pop
aaa
sbb
mov
mov
aam
mov
pop
fs
inc
sti
fdivr
je
pop
inc
hlt
jl
sub
cmp
xchg
cmpsl
xchg
std
and
aam
scas
test
add
push
sbb
xchg
xchg
xchg
mov
xchg
or
mov
pop
sub
xor
imulb
mov
test
sub
cwtl
lods
leave
loopne
pop
aam
add
cmp
out
loope
jns
sub
add
add
add
js
push
dec
cmp
mov
adc
and
adc
lret
repnz
push
fadds
push
jmp
and
cld
jg
iret
jecxz
push
mov
mov
in
mov
cmc
sub
shr
and
mov
push
cmp
fscale
mov
jmp
cmp
pop
pop
daa
push
icebp
jbe
popa
inc
xchg
lea
stos
sub
sahf
int
push
cmp
xlat
jge
xor
aaa
inc
push
adc
je
pxor
push
stos
jmp
add
adc
arpl
mov
dec
jno
popa
out
int
ja
mov
cmpsl
pop
dec
mov
or
out
sbb
adc
cmc
aam
cmp
mov
ret
sbb
or
or
lret
lods
adc
or
adcl
push
mov
in
out
xchg
mull
fwait
xor
mov
orl
lahf
push
ret
add
add
lods
jg
push
mov
out
dec
mov
add
add
into
out
xor
cmpb
lret
inc
and
ret
mov
decl
imulb
in
sbbb
adc
jne
scas
sahf
incl
aaa
out
hlt
pop
daa
push
ljmp
push
mov
dec
test
push
mov
xchg
push
xor
pusha
dec
sbb
mov
imul
bnd
sbb
adc
jge
js
pushf
ds
inc
ret
pop
lea
dec
push
sbb
int
movsl
add
arpl
fildll
pop
or
jle
cmp
out
lret
mov
add
inc
ret
and
dec
sbb
or
test
pop
aas
push
ret
xor
push
push
xchg
rolb
sub
mov
ret
xchg
inc
mov
xchg
mov
mov
and
lret
lds
aas
stos
mov
dec
idivl
cld
ret
add
xchg
cmp
sub
add
add
add
jecxz
or
and
push
les
sub
jae
inc
pop
sub
cmp
cld
loop
mov
sbb
loope
aaa
shrl
ds
icebp
dec
sbb
adc
loop
iret
mov
les
mov
adc
sbbb
repz
fs
jge
xor
imul
push
das
in
jo
sbb
data16
ds
cmp
sbb
add
add
mov
inc
and
add
lock
jno
icebp
mov
cwtl
cli
loopne
xor
mov
add
mov
fs
repnz
or
movsl
aaa
sahf
add
aaa
fnstenv
xor
leave
and
scas
bound
mov
mov
dec
and
pusha
insb
in
mov
fwait
out
aad
cld
sti
and
test
outsl
sbb
stos
push
lods
repnz
sub
sbb
sarl
add
dec
scas
jae
ret
mov
iret
mov
jnp
mov
sub
add
add
add
frstor
xlat
fwait
pop
rcr
addr16
jmp
jns
jmp
cwtl
jnp
inc
push
and
aaa
xchg
inc
sti
mov
cmp
xor
rolb
pop
inc
int3
movsl
lea
into
shr
rolb
cwtl
jmp
lods
gs
repnz
ret
or
loopne
mov
jns
push
in
push
jne
xchg
mov
cmc
dec
jbe
popa
pusha
aam
das
xchg
fisubrs
loop
push
xor
sub
sbb
xchg
inc
fsubrs
or
inc
xor
hlt
push
sbb
ds
xchg
push
mov
jecxz
add
inc
test
stos
out
ret
jnp
ljmp
push
add
lret
jo
pop
mov
push
pop
jmp
mov
sbb
sub
jno
mov
fadd
incb
les
subb
push
js
xchg
push
js
cltd
hlt
or
jg
arpl
cmp
add
add
add
dec
insb
xchg
push
inc
loope
lea
in
mov
jge
rcll
std
int3
test
xchg
das
adc
repz
mov
lret
imul
mov
enter
mov
mov
leave
dec
in
in
mov
nop
and
fbld
jo
pop
in
fsubs
std
test
jmp
xchg
sub
gs
cs
xchg
rcll
inc
leave
mov
pop
push
push
std
dec
rol
xchg
pop
ret
add
test
das
mov
xor
int3
mov
aas
imul
mov
lds
push
jl
or
int
xor
fisttps
mov
mov
cmc
add
lret
mov
push
push
inc
in
clc
mov
jl
add
imull
aam
cmp
inc
cmpsb
inc
sti
test
cmpsb
outsl
stc
lret
shlb
cli
clc
cli
clc
sarb
sti
mov
and
add
add
cmp
push
adc
push
addr16
lcall
scas
adc
dec
fiaddl
and
sbb
or
jnp
push
add
cs
xchg
adc
mov
not
rorl
mov
mov
xchg
out
push
lret
adc
rorl
ffreep
sub
loop
ljmp
dec
fisubrl
idivb
sti
mov
addr16
cmp
sub
adc
or
cli
adc
jp
push
out
and
lea
arpl
sti
push
xor
aad
xchg
test
add
fs
mov
xchg
pop
ds
push
cmc
sub
outsl
lds
mov
push
movb
sub
mov
adc
sbbl
addr16
mov
pop
or
inc
xlat
mov
push
mov
lock
ret
test
imul
mov
stos
mov
sub
add
add
add
pop
icebp
adc
push
ret
shr
stos
pushl
sub
arpl
fisubrs
dec
sub
cmpsl
cmp
mov
sti
icebp
xor
fnstenv
cmp
adc
mov
push
cli
sub
scas
sbb
jge
nop
ds
mov
cs
mov
sub
xor
insb
aam
xor
in
mov
cmpsl
mov
add
mov
inc
ds
ds
sbb
pop
sti
inc
or
lea
inc
mov
mov
fwait
push
push
jb
dec
pop
and
fcoms
and
sub
rcr
ret
jne
and
adc
lods
jbe
lods
cmp
jge
andl
enter
or
mov
loope
test
cs
std
inc
test
cltd
inc
loop
add
add
es
data16
insb
daa
mov
addl
sub
add
js
xor
dec
mov
lock
jg
outsl
rcll
pop
pop
mov
enter
das
call
and
sbb
out
outsb
xchg
pop
fsincos
xchg
mov
mov
push
fdivp
negb
mov
mov
sbb
pop
lret
add
stos
ficompl
and
xchg
out
mov
or
pop
repz
iret
or
cmp
loop
in
aad
dec
test
adc
push
fwait
in
jp
nop
or
jnp
mov
popf
or
fwait
jge
push
sbb
or
xchg
mov
std
xor
mov
jecxz
add
or
cld
dec
pushf
pop
shll
lea
xor
sub
out
mov
xchg
xor
ljmp
in
pop
cmp
inc
ss
push
cli
popf
js
ja
outsl
cmp
std
aaa
lods
or
clc
mov
fldcw
add
call
add
add
iret
popa
xor
fstpt
aam
outsb
push
mov
xchg
sarb
stos
cmp
lret
pop
sbb
jb
lods
lds
outsb
push
loop
les
movsl
cmp
or
insl
dec
enter
mov
jb
and
orl
shrl
and
xchg
jno
int3
dec
popa
mov
dec
xor
cmp
sbb
xorb
in
sbb
sub
inc
repz
imul
push
ret
fildll
cmpsl
push
dec
scas
push
insl
clc
movsb
mov
cmp
imul
pop
mov
dec
and
call
bound
dec
sbb
mov
call
mov
mov
rolb
gs
orl
mov
inc
das
out
cmp
popf
fisubrl
daa
sahf
dec
push
loop
in
or
sbb
lea
lahf
repnz
ret
cli
imul
add
repz
push
sti
cmpsl
enter
scas
mov
add
add
add
dec
lcall
xor
mov
dec
dec
outsb
jmp
xchg
cmp
and
inc
push
cmpb
ljmp
mov
pop
add
mov
push
ds
into
add
aam
and
fs
lret
pop
or
test
xor
pop
testl
or
dec
or
lods
hlt
lods
and
xor
cmp
adc
aad
sahf
sbb
call
push
push
dec
jge
pop
in
pusha
jne
pop
jbe
insl
cmp
lock
scas
cwtl
mov
push
mov
mov
pusha
xchg
into
enter
sbb
insl
and
sbb
fstps
movsl
les
sbb
jmp
mov
push
add
sbb
mov
scas
stos
out
icebp
mov
push
push
mov
xor
or
add
mov
std
mov
dec
push
mov
xor
add
add
add
pusha
fcoml
cmc
and
mov
add
push
or
xchg
inc
xchg
jbe
cmp
fld
dec
orb
adc
movsb
jnp,pn
out
arpl
aad
pop
cli
inc
lret
out
jecxz
sbb
outsl
and
idivb
pop
pop
dec
incl
push
mov
roll
rcrl
cmpsb
xchg
test
mov
mov
shrl
nop
add
scas
cwtl
or
xor
mov
loopne
add
dec
cli
sub
jp
ja
lea
or
dec
lds
int
cli
adc
call
shrl
jp
bound
pusha
nop
mov
data16
xchg
mov
imull
repz
fs
fwait
stos
inc
cmpsl
jle
inc
int
lods
cli
jns
jnp
in
fadds
dec
stos
push
xor
dec
out
adcb
arpl
mov
add
add
and
jecxz
and
lcall
add
add
add
loop
jmp
imul
dec
or
sbb
push
test
fsubrl
pop
inc
loope
cld
ror
fwait
xor
mov
add
test
and
mov
dec
test
push
dec
push
insb
mov
out
mov
or
data16
in
in
lret
inc
mov
dec
lret
call
inc
push
jno
xor
dec
jp
inc
push
push
sbb
cmpsl
lret
jae
pop
mov
leave
div
jae
push
cmp
bound
cld
push
jb
fidivrl
call
mov
pop
sahf
outsb
push
popf
lcall
jb
shll
xchg
xchg
sbb
add
push
lahf
jo
test
jne
loopne
lds
push
jecxz
add
jo
rcll
pop
scas
push
xchg
cmp
sbb
add
xchg
subl
cltd
mov
jmp
mov
add
add
xchg
ficomps
cmp
lahf
loope
pushf
stos
xor
add
add
add
bsf
sti
addb
mov
jno
popa
mov
leave
dec
pop
jns
fiaddl
std
mov
adc
xor
clc
fistpl
loop
imul
mov
mov
ret
fdivr
cmp
mov
lock
std
ss
sbb
aas
addl
movsl
mov
dec
adc
cmc
sbbl
sub
arpl
test
mov
mov
bound
rorb
paddsb
les
push
or
and
pop
lcall
fildl
aam
incb
pop
push
jl
jmp
mov
xchg
mov
or
xor
sbb
and
sub
fcmovbe
push
xchg
mov
mov
push
mov
sbb
imul
push
or
push
push
lock
sahf
and
hlt
hlt
jmp
icebp
pop
arpl
ja
sub
add
xor
add
add
add
xchg
mov
fldcw
pop
sub
cmp
addr16
xchg
lods
mov
scas
fldl
insl
mov
xchg
jle
jmp
sub
mov
mov
sub
pop
outsb
lret
outsl
inc
pop
push
test
or
adc
inc
pop
mov
push
cmc
lock
fnstenv
xchg
sahf
outsb
and
inc
jae
mov
mov
out
inc
push
push
push
fistl
loopne
xor
xchg
push
xorl
mov
mov
pop
mov
testl
xor
pop
hlt
mov
dec
mov
stc
cli
cs
xor
out
xor
test
out
mov
sbb
divb
add
xor
sbb
js
enter
xchg
hlt
pop
inc
pop
xor
sbb
push
cmp
add
movsb
arpl
cmp
mov
jo
lock
mov
or
jae
jnp
addr16
add
add
add
lock
mov
mov
arpl
mov
dec
push
cmp
ret
inc
ret
sub
mov
inc
dec
add
ret
cmpsl
mov
cmc
xor
in
xcrypt-ofb
cmpsl
outsl
jb
call
mov
sbb
arpl
js
cli
inc
dec
fcoms
jo
fdivl
inc
mov
xchg
ret
in
ljmp
xor
jno
or
xor
and
xlat
shlb
inc
daa
mov
rcr
mov
insb
orl
cmc
out
xchg
pop
add
sbb
or
scas
repz
mov
in
sub
pop
std
scas
out
inc
lods
adc
push
push
sub
scas
test
push
pop
mov
pop
neg
fadd
and
jae
out
dec
mov
inc
pop
roll
adc
mov
inc
lods
sahf
jge
cli
lea
sbb
add
add
sti
pop
jge
neg
hlt
add
adc
add
add
and
lea
push
push
test
mov
and
mov
and
into
adc
add
adc
iret
dec
lret
inc
out
mov
fisttpll
enter
dec
xchg
pop
sbb
orl
movsl
in
xchg
push
and
cwtl
jle
icebp
sub
shr
ret
mov
inc
dec
fldenv
push
loop
sub
add
push
popf
xor
stos
aad
outsb
out
mov
je
test
lock
or
or
or
mov
ds
fdivl
aaa
dec
loop
xchg
xlat
repz
xchg
ja
loopne
sub
xchg
push
cmpl
mov
popf
out
fsubr
outsb
cltd
adc
fiaddl
ja
mov
jecxz
sbb
lcall
mov
into
fs
jl
or
inc
jne
das
rcll
xchg
mull
les
jp
push
pusha
cltd
fsub
std
in
popf
in
stc
jmp
pop
mov
add
add
add
lea
not
xchg
add
and
sbb
insb
inc
testl
insl
out
cmp
adc
je
jle
leave
adc
sub
adc
mov
adc
jle
sbbb
inc
movsb
mov
mov
lock
mov
cmp
jecxz
inc
xchg
inc
jne
jne
mov
dec
ficompl
sub
popf
sbb
or
nop
jmp
in
mov
in
jb
lahf
repnz
sahf
ret
or
jp
jbe
sbb
daa
add
inc
jle
push
pop
popa
pop
sub
jnp
das
inc
add
int
jl
pop
jo
std
out
sub
inc
add
sub
test
mov
ljmp
outsl
nop
sub
lea
outsb
cld
mov
xchg
add
add
std
xchg
or
das
mov
dec
faddl
movsl
pop
repz
adc
fcmovnu
daa
mov
pop
jp
jnp
sti
xchg
jle
jp
lods
in
push
test
add
add
add
pop
cld
push
mov
into
cmp
dec
mov
inc
add
test
loope
out
sahf
pop
push
pushf
stc
jno
mov
js
cltd
jecxz
out
pop
xor
sub
pop
loop
push
and
sub
sub
pop
or
bound
test
loope
sbb
mov
sub
add
daa
je
out
test
enter
inc
dec
push
fadds
mov
popa
xchg
add
lahf
xchg
gs
shlb
sbb
and
cwtl
iret
sub
aas
inc
rcr
pop
sub
aam
xchg
xchg
jg
nop
frstor
add
lret
fsub
push
mov
mov
fcomip
stos
jmp
shr
test
mov
jb
nop
jb
int3
inc
shlb
jne
add
insb
dec
roll
mov
xlat
rcll
call
mov
push
sti
decb
mov
xchg
cmp
add
add
add
cmovs
subl
faddp
add
insb
cltd
mov
cmpsl
pop
or
mov
sub
int
mov
jns
pop
bound
xchg
or
inc
sbb
out
cmp
ds
jl
mov
lds
or
and
inc
inc
aaa
sub
lods
inc
and
fucomi
pop
sub
dec
mov
pop
mov
sbb
sete
mov
scas
xchg
mov
cwtl
sar
cmp
loope
mov
adc
cmp
inc
cli
sahf
insb
adc
push
adc
mov
jo
jo
aad
into
mov
fwait
push
mov
and
cs
imul
add
cmp
adc
mov
sub
cmp
outsl
gs
adc
push
ret
cmp
xor
hlt
cmp
pop
cmp
add
add
add
inc
push
imul
call
sbb
add
stos
sbb
xor
cmp
mov
jno
aas
mov
loopne
sub
cmp
mov
call
ret
xacquire
adc
cld
jbe
hlt
inc
sub
repz
jno
push
mov
xlat
cmp
xor
or
and
mov
or
add
or
push
push
mov
cmp
push
lods
out
mov
rorl
fiadds
sbb
mov
pop
or
jo
mov
jmp
xchg
mov
dec
fnstcw
test
mov
gs
sub
push
nop
test
pop
xor
or
test
sub
mov
ret
cmc
in
scas
inc
jb
pop
cld
nop
stos
push
xchg
shl
mov
out
add
adc
adc
stos
repz
dec
add
sub
incb
ljmp
gs
add
add
add
rcl
jge
adc
cmc
or
outsb
or
lahf
mov
cs
mov
imull
jbe
decl
push
mov
ret
sub
mov
jbe
sbb
out
clc
jns
les
pop
push
cmpsl
pop
loopne
divl
ds
xlat
and
lock
push
pop
xor
aas
jb
adc
xlat
mov
xor
dec
mov
bound
adcb
cmp
push
fsubr
jle
cmp
insb
aam
fidivl
xchg
add
repz
shrb
daa
outsb
xchg
repz
fstps
pop
divb
addr16
das
sbb
enter
data16
xchg
rcll
daa
outsl
mov
xchg
inc
fsts
cld
dec
fdivrs
gs
je
les
insb
and
push
insl
pop
sahf
inc
testl
jmp
repnz
test
shlb
movsb
lock
nop
fadds
add
add
rclb
nop
lcall
cmp
add
add
add
movsb
ret
jge
insb
in
xchg
mov
pop
lods
push
add
mov
and
push
adc
pop
and
dec
dec
int
pop
jecxz
sub
mov
out
call
fdivl
or
repz
loop
test
sbb
xchg
jmp
jnp
addb
push
pop
mov
inc
add
sub
xchg
adc
sti
inc
xchg
dec
pop
jmp
sti
cmp
std
mov
andb
mov
fstpl
decb
or
xchg
hlt
push
jne
xchg
repz
cmpsl
add
xchg
cmc
inc
addr16
sub
lret
and
stos
cmc
pop
in
push
adc
pop
ss
push
dec
fildll
pop
dec
dec
sub
lock
lret
push
jecxz
scas
mov
push
mov
testl
fs
sti
cmpb
jl
dec
jbe
idivl
or
cmp
hlt
addr16
add
add
add
shll
in
outsl
das
outsb
not
xchg
insb
push
and
fnstenv
clc
mov
add
test
mov
dec
es
pop
jnp
dec
mov
push
sbb
xchg
testl
adc
pop
sbb
cmp
fnstenv
and
pop
jb
daa
in
jne
adc
inc
out
sbb
mov
or
mov
scas
and
push
mov
jb
and
xchg
cmp
sbbl
aas
bound
mov
outsl
fstp
ljmp
mov
dec
pop
jne
push
inc
inc
fwait
nop
pop
cs
mov
dec
iret
pop
lcall
ret
insl
testb
xchg
mov
cmpsl
movsl
imul
add
push
dec
push
sub
rorb
push
push
iret
add
pop
xor
or
cmp
and
outsb
sub
stos
fs
jmp
leave
aas
add
add
add
cmp
test
mov
ret
xchg
enter
push
push
jle
inc
cwtl
and
scas
popf
test
ret
ret
mov
mov
push
es
adc
jnp
push
mov
xor
lds
stos
cmpsb
cld
addl
or
inc
push
inc
xchg
cmpsw
movsl
data16
rcrl
mov
out
sub
call
sub
sub
repnz
addr16
mov
add
fidivs
outsb
jmp
daa
insl
cwtl
loope
mov
push
add
lods
sbb
pop
add
dec
dec
pop
cmpsb
mov
jecxz
push
add
ret
les
jl
ret
test
test
sti
out
fcoms
movsb
cmpsl
dec
lds
xor
dec
or
or
movsb
stc
aad
add
add
jnp
mov
mov
or
pop
call
lock
popf
sbb
es
pusha
adc
jo
cs
inc
repnz
inc
mov
mov
les
scas
fistpll
outsl
gs
mov
add
add
add
add
xor
out
ss
jb
dec
daa
stos
add
and
icebp
mov
orl
adc
pop
testb
mov
sbb
pop
stos
sub
icebp
cmpb
xchg
push
pop
pop
out
xor
rorl
pop
ss
add
inc
sbb
lods
mov
pusha
xchg
adc
dec
cwtl
pop
out
scas
imul
inc
jecxz
jl
lods
pushf
cwtl
jo
and
out
fnsave
jg
jb
mov
lock
push
cmp
mov
out
cmc
push
mov
or
jge
fldl
js
sub
imul
jne
push
rolb
xchg
push
mov
movsl
mov
mov
fidivs
insb
repnz
rcrb
xchg
cli
popa
mov
repnz
xchg
loope
aam
or
cmpsb
jnp
and
add
add
cmp
movsb
push
sbb
pop
jb
addr16
add
add
add
loopne
xor
push
sub
inc
cmc
cltd
cs
inc
or
jbe
mov
xchg
jbe
lcall
pop
pop
nop
xchg
xor
push
pop
fisubl
and
sbbb
mov
inc
aas
add
sub
aad
inc
mov
xchg
xor
sbb
xor
adc
jecxz
sub
sbb
inc
loope
jb
ret
adc
call
pop
sbb
shll
into
insl
dec
sub
int3
ljmp
std
mov
and
or
das
out
push
pop
cli
xchg
pushf
xchg
xor
mov
sub
insb
pop
pop
adc
aad
hlt
mov
popa
lret
movsl
cmp
mov
mov
sarb
inc
into
jnp
ret
inc
cmpl
jns
fimull
cmp
fadds
call
cld
mov
mov
add
add
adc
jmp
test
addr16
add
add
add
mov
inc
arpl
pop
test
test
fbld
mov
adcb
aam
movsl
sbb
lcall
xor
cmpsb
xor
test
lcall
sbb
jb
cmp
jg
mov
movsl
sub
inc
sbb
mov
aad
gs
pop
sbb
push
cmp
fsubl
loope
mov
pop
js
scas
aas
xor
push
ss
pop
add
sub
mov
mov
loope
mov
stc
mov
dec
decb
fbstp
sub
ret
ds
jl
push
and
push
lock
sti
push
jl
jp
loop
aaa
inc
sub
mov
imul
cltd
cmp
fistpl
sbb
imul
add
lea
jb
insb
xchg
in
stos
test
xchg
notb
and
mov
push
enter
jp
shlb
cmp
les
add
and
das
cmp
lods
repz
mov
shll
inc
addr16
add
add
add
push
das
out
daa
pop
test
ror
nop
xor
test
loop
jnp
dec
out
inc
scas
xchg
addb
adc
les
out
xchg
push
icebp
jg
dec
push
jo
xchg
and
cmp
clc
or
inc
insl
in
mov
jmp
arpl
into
jmp
loop
xor
dec
add
aam
inc
ss
cld
push
mov
mov
sub
pop
dec
and
sub
jge
fcompl
push
lods
ljmp
mov
lea
jmp
mov
imul
fildl
push
lds
cmp
sbb
jnp
rorl
push
ds
hlt
shlb
mov
cmp
dec
sub
and
jno
pop
orl
xor
push
into
pop
mov
xchg
pop
jno
roll
dec
mov
xchg
add
add
aas
daa
push
cld
push
std
jmp
dec
push
cld
ja
inc
add
add
add
lds
ret
addr16
push
fdivrp
fistps
push
or
rorl
out
xor
add
icebp
add
mov
icebp
xchg
hlt
and
pusha
push
adc
mov
fbld
dec
int3
fwait
roll
jmp
fsubr
popf
and
movsl
pushl
xorl
lret
cmpsl
sub
or
push
mov
cmp
fs
ljmp
mov
int3
out
mov
pop
fiadds
jns
sbb
dec
mov
pop
pop
xchg
or
std
test
inc
sub
roll
inc
xchg
scas
mov
idivb
fisubrs
xchg
iret
jno
mov
icebp
jo
mov
cmpsl
shlb
jno
ljmp
add
sub
mov
sti
add
call
out
loop
sar
shll
loopne
dec
push
add
sbb
dec
push
out
aad
adc
lret
inc
add
add
add
push
addl
sti
pop
and
fbld
js
cmp
cmp
xor
rcl
pop
pop
stos
jp
sub
lret
xchg
out
xchg
or
lods
pop
rcrl
or
sbb
pop
repz
mov
outsl
and
mov
add
lea
sub
add
testl
inc
out
inc
mov
inc
mov
in
popf
loope
test
popf
insb
or
mov
popa
pop
and
dec
in
rorl
sub
je
imul
sbbb
ss
daa
shll
sub
cmpsl
mov
xchg
and
jns
pop
in
or
push
mov
adc
and
xchg
fsubs
fcmovne
push
pop
imul
pop
fs
sub
or
ja
enter
outsl
add
cwtl
sub
jbe
inc
shr
mov
fisubs
int
jmp
mov
add
add
idivl
or
and
addr16
add
add
add
jge
pop
dec
sub
jno
xchg
sub
jns
sbb
jl
mov
divb
mov
pop
push
cmp
outsl
mov
push
stc
out
jg
addl
imul
popf
push
pop
xchg
ror
movsb
cltd
mov
aad
push
push
loopne
sbb
je
jl
mov
movsb
pop
pushf
cmp
test
in
cmp
pop
ljmp
vshufpd
hlt
repz
lahf
leave
mov
mov
add
shll
cmpsl
add
cmpsl
xor
sub
fwait
popf
jle
jg
push
lret
mov
leave
lods
and
cmp
mov
rcll
mov
mov
sub
and
shlb
jmp
movsl
popa
mov
roll
cli
out
sub
lock
mov
daa
push
xchg
or
inc
shr
inc
pop
insl
out
lcall
mov
ja
jg
xchg
orl
clc
addr16
add
add
add
int
pop
push
mov
mov
and
pop
mov
scas
pop
push
imulb
mov
mov
push
fbld
fcmovne
sub
gs
iret
pop
or
pop
mov
int3
test
loope
cmc
xor
cwtl
add
cmp
jb
scas
add
movb
mov
xchg
push
shll
ret
push
bound
mov
test
mov
jle
sti
inc
xor
lea
frstor
or
in
cltd
sti
cli
movb
imul
imul
cmpsl
push
mov
pop
fiaddl
fisttpll
cmc
adc
push
idiv
rorl
jae,pt
add
je
imul
jle
popl
or
ds
adc
dec
adc
xchg
fst
shlb
lods
js
mov
andb
lods
and
and
dec
lret
jmp
imul
aaa
je
jo
outsl
addr16
add
add
add
arpl
ss
lock
jmp
inc
lcall
push
shrl
lods
iret
jl
push
push
sbb
scas
stos
int
insl
sub
xor
pop
imul
repnz
lcall
and
xorl
das
out
pop
addr16
pusha
mov
faddl
pop
mov
dec
movsb
subb
add
ljmp
sub
push
push
sahf
sbb
mov
xchg
adc
imul
pop
pushl
fcoml
divl
mov
je
imul
xchg
pop
scas
outsl
neg
lcall
adc
das
xor
adc
jae
ds
loopne
jne
jmp
push
lock
into
jns
ss
ja
and
inc
mov
inc
dec
push
dec
cmp
xchg
add
mov
in
sub
dec
loop
sahf
push
mov
dec
insl
mov
pop
hlt
repnz
lds
cmc
cwtl
xchg
push
sub
leave
aad
addr16
add
add
add
mov
xchg
int
and
cmpl
popa
and
cltd
cs
dec
sti
mov
or
sti
imul
cmpsl
pop
les
testl
inc
inc
stos
inc
mov
loope
sub
dec
add
rorl
jp
shrl
test
xor
ds
andb
leave
jnp
cmpsl
cmp
dec
mov
data16
push
xor
out
jge
cmp
adc
push
cld
jbe
ret
hlt
and
xchg
xchg
imul
xchg
insb
mov
shrb
data16
andl
and
or
push
and
adc
xchg
xchg
inc
mov
leave
inc
inc
int
movsb
out
mov
andb
clc
mov
lock
mov
xchg
jae
jmp
xor
push
test
addl
add
add
jns
xor
jg
lret
push
adc
add
add
sub
mov
sub
push
imull
pusha
scas
adc
lock
inc
in
pop
push
add
in
addr16
lods
mov
xor
jl
int
cld
mov
pop
jle
je
cmp
lret
shrl
test
xrelease
pop
xchg
xchg
and
mov
notl
push
into
cltd
xor
loop
add
dec
jns
or
dec
out
xor
pop
fcoml
bound
mov
push
fwait
pop
mov
mov
imull
cmpsb
or
jne
jno
inc
test
in
fld
push
aas
add
mov
lea
cltd
loopne
or
push
or
mov
popl
xor
outsb
dec
push
push
mov
jne
push
call
push
insb
xor
mov
and
mov
mov
outsb
cli
in
in
mov
js
ret
jg
decl
rol
cmpsl
movsl
adc
add
add
popf
sbb
jmp
clc
popa
inc
cmpl
cmpsl
cmp
push
popa
insl
xchg
ljmp
pushf
test
pop
out
jl
and
jnp
ss
sub
dec
and
daa
push
inc
divb
lock
movsb
inc
sti
cmp
inc
and
shlb
repz
cmp
psrad
insl
add
nop
fstps
add
and
cli
jl
repz
lea
cmpsl
pop
add
push
repnz
pop
add
inc
jg
add
hlt
xor
mov
inc
mov
xor
sbb
into
push
lock
sub
sbb
mov
xchg
outsb
jb
inc
sub
add
push
rcrb
rcl
arpl
add
cmp
in
icebp
sub
xor
clc
adc
fdivs
clc
cmp
insl
push
lods
cmp
aas
mov
insb
repnz
testl
dec
jbe
push
aaa
outsl
movsl
mov
faddl
add
das
mov
out
aad
mov
add
add
add
xor
test
mov
fsubr
and
jmp
inc
jno
dec
mov
inc
add
ret
adc
clc
repnz
cli
loope
add
call
pop
pushf
and
mov
cwtl
sbb
lcall
cmp
repz
test
push
pop
sub
mov
cmp
popa
scas
xor
mov
das
mov
inc
dec
xchg
fcoml
fxch
int
stos
sbb
in
xlat
or
pop
mov
rorb
add
add
dec
pop
add
pushf
fldt
inc
and
lods
ds
loope
int
je
ds
cmp
rep
pop
rorl
mov
fdivrs
mov
inc
add
mov
push
mov
lds
std
in
pop
data16
xchg
inc
repz
imul
jle
push
push
adc
pop
roll
inc
icebp
hlt
gs
dec
adc
sub
addr16
add
add
add
in
cltd
into
dec
scas
les
je
add
lcall
aaa
add
rcrl
sub
imul
push
mov
push
imul
xor
iret
jl
bound
push
add
xchg
pop
shll
mov
sub
mov
lods
rep
mov
adc
aas
imul
xor
add
push
push
cmp
mov
mov
repnz
js
sbb
cltd
lret
insl
cmpsl
mov
add
jl
lahf
jle
sti
ds
jmp
xchg
in
jecxz
jl
inc
pop
adc
pop
xor
ss
fisttpl
mov
jae
mov
xchg
xchg
fisubs
pushf
lods
sub
sbb
enter
rclb
adc
pop
clc
pop
sbb
lds
or
mov
sbb
nop
ds
and
mov
aad
enter
pushf
fs
mov
add
add
aas
gs
pop
repnz
dec
add
add
add
shll
add
dec
jae
cmp
psubq
mov
pop
mov
pop
push
push
mov
das
mov
outsb
les
dec
fs
push
mov
and
xchg
pop
push
inc
pop
loope
loope
pop
mov
inc
and
add
out
xorl
hlt
int3
outsl
repnz
inc
pop
jo
jmp
clc
cmp
mov
gs
clc
jne
cmp
sub
and
mov
repnz
and
jg
fmuls
jae
mov
or
xchg
adc
imul
ret
int
inc
rcll
movsl
sub
mov
and
inc
xlat
cmpsl
test
iret
and
mov
inc
and
adc
push
fsubl
divl
dec
lret
push
add
popf
lea
test
dec
fst
mov
pop
push
out
testb
insb
mov
out
fisttpll
lock
pop
add
add
add
dec
aas
addl
pop
push
aad
fnsave
dec
adc
rolb
stos
cmc
mov
push
stc
sbb
imul
mov
popf
xor
or
inc
loop
das
inc
cli
in
les
xor
enter
sub
add
arpl
mov
fists
push
or
mov
jecxz
mov
shll
xchg
xor
xchg
push
xchg
cmp
and
mov
enter
lahf
test
dec
and
push
add
cmpsb
out
mov
test
daa
and
cmpsl
aas
jne
add
fldt
adc
cmpl
adc
mov
push
jg
data16
sub
lahf
push
dec
test
leave
jl
mov
test
ret
pop
mov
out
xchg
fdivrl
xlat
dec
mov
add
fildll
mov
ljmp
add
add
add
lods
fisttpll
icebp
inc
shrd
rolb
mov
fs
sub
xchg
inc
aam
sti
mov
in
int
mov
stos
sub
jg
dec
mov
cmp
sub
pop
in
pop
emms
push
fs
fwait
pop
sub
or
mov
pop
aam
jle
push
nop
faddl
mov
add
pusha
cli
inc
aam
pop
loop
mov
and
xor
pop
call
rol
mov
pop
xor
sbb
fidivrl
and
out
aaa
mov
lods
cmp
xor
jno,pn
gs
pop
enter
sub
mul
dec
aas
push
xor
divb
sbb
pop
sbb
fwait
stos
in
pop
out
mov
xchg
pop
xchg
test
sti
das
inc
sub
jg
xlat
insb
out
xor
jge
mov
xor
into
xchg
rorb
push
sbb
jmpw
fnstcw
jo
sahf
jb
add
addr16
add
add
add
mov
xchg
adc
repnz
xchg
sbbl
test
outsl
sbb
push
movsb
lods
jp
fistl
and
xchg
pusha
add
movsb
arpl
es
inc
inc
decb
mov
stos
xchg
shrl
add
adc
cmp
stos
xchg
sbb
inc
ret
add
push
xorb
dec
dec
fimuls
rcr
sbb
fs
addl
xor
add
in
sahf
inc
jb
and
shlb
pop
scas
pop
jle
push
add
leave
jp
mov
orl
gs
lea
shlb
and
in
push
xor
js
add
cmp
sub
stc
pushf
jae
rolb
xor
outsb
out
std
and
mov
int
out
add
xchg
enter
ror
mov
jne
shll
shlb
add
cmp
imul
out
mov
mov
xchg
cmpl
add
add
inc
lret
mov
add
cmp
test
lcall
mov
adc
sahf
mov
in
mov
pop
aaa
adc
adc
inc
cli
aaa
cmp
adc
mov
lods
outsb
sub
enter
dec
push
pop
push
sub
fucomp
test
xor
add
pop
imul
jo
cld
dec
test
dec
decb
sub
inc
adc
pusha
rorb
push
adc
outsb
sbb
movsb
cmp
scas
mov
and
push
cmp
sub
cmp
pop
xor
or
cwtl
pop
ja
pop
shll
pop
fldl
clc
jbe
ja
push
jecxz
push
fsts
or
sbb
mov
pop
mov
dec
aad
adcl
cmp
inc
shl
push
adc
sub
or
dec
xor
repz
js
add
dec
stc
mov
ljmp
addr16
add
add
add
fadds
xor
pop
xor
xor
and
int
adc
push
jp
ret
dec
out
jmp
cmp
nop
icebp
pop
adc
adc
cs
inc
adc
mov
xchg
sub
mov
pop
dec
jle
aad
inc
paddsw
or
and
jle
mov
jae
sahf
sub
gs
push
mov
and
repz
lds
adc
push
lock
fcomi
movsb
movsb
pop
pusha
mov
mov
push
mov
mov
outsl
aad
cmp
cmp
ror
mov
adc
add
dec
pushf
dec
movsl
jl
scas
pop
rcr
dec
shrl
xor
dec
push
in
push
adc
leave
sahf
sub
push
jmp
lcall
mov
xor
or
cmp
in
jmp
mov
cs
out
push
jl
add
add
jg
cld
lcall
aas
addr16
add
add
add
xorl
gs
adc
sub
mov
push
dec
fld
and
cli
bound
jg
int
jmp
mov
sti
adc
and
arpl
lret
test
xor
xchg
xlat
ljmp
cmp
pushf
in
mov
subb
dec
shrl
cmpsl
mov
push
push
sbb
mov
jle
std
scas
xchg
je
cmpsl
cwtl
enter
fidivrl
cmc
cmc
out
xchg
or
fwait
loop
dec
mov
inc
pop
mov
push
jo
dec
popf
pop
xor
sti
inc
clc
push
lods
cmp
into
push
or
bound
jp
xchg
in
mov
outsb
loopne
mov
or
aas
cmp
inc
insb
sar
ja
bts
jne
sub
push
les
aad
in
jmp
inc
clc
xchg
adc
sub
mov
inc
inc
mov
mov
in
add
add
xchg
mov
pop
pop
repnz
addr16
add
add
add
std
pop
and
outsb
sarb
aas
in
xchg
loopne
test
in
push
jno
sbb
popa
aad
xchg
push
mov
in
ja
jge
jp
push
mov
dec
call
in
and
out
fstpl
and
push
cmp
imul
push
int
push
pop
jmp
cmp
mov
inc
push
adc
aad
iret
outsl
repnz
sub
pushf
adc
adc
stc
cmp
sbb
out
mov
cmp
das
jmp
rcl
popf
mov
pop
outsb
push
std
xlat
xlat
fnstcw
dec
inc
inc
stc
lcall
push
sub
mov
pop
cmp
xchg
push
pushl
mov
sbb
xchg
push
pop
insb
xor
js
fdivrl
jge
push
pop
add
std
jo
cwtl
mov
cli
or
mov
sbb
gs
and
das
repz
subb
jmp
out
jmp
dec
int
aaa
or
mov
and
adc
addr16
add
add
add
add
inc
dec
mov
pop
pop
mov
pop
cmp
lock
push
cmp
pushf
das
movsb
into
out
in
mov
push
xor
outsb
ss
sbb
inc
les
and
mov
mov
xchg
cmp
mov
xor
mov
jecxz
call
mov
in
leave
pop
mov
arpl
xor
lods
or
xchg
fidivs
loope
jg
aaa
jl
sbb
inc
movsb
mov
nop
sbb
and
fsts
adc
push
dec
push
xor
notl
test
inc
insl
sahf
or
addr16
les
mov
push
outsb
xlat
inc
frstor
int
xor
inc
and
shlb
adc
cltd
xor
lret
fmul
loopne
sbb
sti
jp
add
negb
push
test
mov
mov
mov
add
sub
cmp
ret
or
sbb
push
add
add
add
inc
outsb
xchg
in
xlat
or
stos
cmp
into
inc
jle
into
data16
jne
dec
jg
test
mov
inc
cmp
popa
xor
int3
icebp
mov
add
imul
adc
mov
jns
xlat
or
aaa
inc
jnp,pt
dec
adc
and
xchg
push
pop
mov
out
push
sub
movsb
push
mov
pop
jmp
addr16
jae
add
ds
sub
js
jne
insb
je
aas
lret
pop
lock
lahf
mov
and
add
inc
insb
mov
test
insl
adc
push
lcall
xchg
out
xorl
sub
in
loope
sbb
and
into
mov
aas
jecxz
mov
jl
mov
and
sbb
xor
pop
out
and
pusha
inc
mov
mov
push
loop
jecxz
ret
dec
aam
fadds
add
add
push
shll
out
pop
pop
pushf
push
jmp
lret
addr16
add
add
add
scas
jo
mov
sahf
sub
rcll
mov
push
loop
imul
mov
xchg
arpl
sub
cli
xchg
or
push
es
not
ljmp
cwtl
push
mov
scas
jmp
and
in
int3
jge
popa
mov
icebp
add
mov
inc
es
enter
int
and
cmpb
out
jg
sub
imul
add
jecxz
repnz
xchg
jae
popf
cltd
outsb
rcll
fisubl
stos
insb
in
or
jno
andl
je
jp
jecxz
push
dec
sbb
jmp
cmc
les
mov
adc
or
push
ljmp
xchg
es
adc
mov
scas
and
mov
call
or
dec
sub
pop
cmp
push
pop
pop
sub
inc
loope
insl
imul
cmp
pop
mov
stos
push
lcall
hlt
mov
or
mov
push
add
add
add
fcompl
xor
out
mov
test
add
mov
fstpt
std
ror
jg
cwtl
stc
outsb
adc
and
hlt
add
cmpsb
lea
orb
in
cltd
mov
add
imul
pop
push
fnstsw
ds
mov
ror
in
jecxz
pop
cmp
in
popa
cld
ss
es
ss
sub
push
sbb
jmp
sarl
mov
or
inc
push
and
cli
outsl
mov
mov
lret
mov
in
xor
adc
iret
fwait
mov
cld
in
sbb
adc
jg
jnp
add
mov
cltd
jnp
in
cwtl
scas
lret
adc
arpl
es
movsl
imul
push
fbstp
fidivs
sbb
xor
cld
pop
addl
add
add
jbe
idiv
imul
pop
push
addr16
add
add
add
pop
cmc
ss
movlps
pop
and
mov
cli
pop
push
ret
in
data16
xchg
inc
push
addr16
out
push
mov
enter
adc
xlat
jnp
xchg
js
call
cmpsl
mov
ret
xchg
or
dec
jmp
hlt
out
xor
call
sbb
das
pop
insb
cmp
test
pop
sub
daa
mov
addb
mov
ja
cmp
hlt
das
jae
xchg
cli
lea
or
or
cltd
outsb
cwtl
leave
movsb
sbb
mov
xchg
jnp
out
or
cmp
or
xchg
fidivrs
jne
add
aam
mov
cwtl
mov
pusha
leave
and
xchg
jno
add
add
stos
push
imul
dec
in
lahf
push
mov
test
das
inc
aas
push
inc
adcb
call
mov
daa
orl
add
add
fwait
cmp
stos
sarb
addr16
add
add
add
fdiv
pop
sti
cltd
mov
push
mov
push
stos
push
xor
arpl
mov
add
xchg
icebp
decb
gs
cld
aad
inc
mov
push
add
lods
cmp
sbb
sbb
lds
xor
insb
and
jle
mov
nop
sbb
aaa
ret
imul
test
cmp
pop
fdivs
and
aaa
adc
pop
and
fisttps
mov
cwtl
ja
push
out
sbb
and
lea
xchg
add
test
cmp
cwtl
adc
lea
sub
or
into
and
dec
shll
pop
popf
sbb
mov
cmp
xchg
enter
sub
pop
clc
xchg
mov
and
imul
pop
icebp
add
sub
js
adc
fisubrl
scas
shlb
mov
fs
xorl
xchg
inc
push
clc
mov
and
hlt
mov
pop
add
add
add
pushf
pop
cmpsl
jp
xchg
shlb
movsl
xor
mov
xor
cmpsl
and
push
jmp
xchg
scas
add
xor
mov
sbb
mov
pop
rdpmc
insb
test
or
lea
pop
je
sub
and
out
mov
cmp
in
add
jne
lret
pop
adc
sub
dec
ret
push
and
cmp
cmpsl
stos
xchg
test
daa
inc
sbb
test
hlt
lods
pop
push
adc
andl
das
in
or
inc
inc
and
ret
rcr
loope
push
scas
ljmp
sbb
les
and
in
adc
adc
cmp
es
in
jbe
pop
pop
das
cwtl
int3
je
mov
jp
outsb
incl
xchg
in
icebp
cmp
sbb
ja
sbb
sti
xor
clc
xchg
xor
iret
imul
popa
daa
xor
mov
add
scas
xchg
push
adc
out
mov
pop
movsl
loop
addr16
add
add
add
add
loop
lea
push
or
aam
add
inc
xor
cli
or
scas
mov
andb
push
jl,pt
inc
mov
repz
testl
pop
imul
andb
roll
arpl
push
out
lret
pop
add
fsubs
gs
jmp
mov
das
add
lds
jno
out
jae,pn
icebp
loop
mov
ficoms
js
inc
mov
inc
add
xchg
dec
das
cmpsb
cltd
arpl
stos
je
ss
xchg
fdivl
mov
ret
and
sti
xor
xor
lods
cmc
pushf
call
xor
ja
inc
pop
mov
push
sbb
mov
dec
test
pusha
push
es
cmp
push
decb
int
sti
call
adc
icebp
fwait
pop
xchg
data16
fsub
faddp
movl
add
mov
lds
aad
stc
pop
fbld
add
add
add
jns
pop
pop
mov
sbb
sti
mov
mov
je
xor
cmp
data16
mov
or
adc
push
mov
inc
insb
cmp
mov
dec
fimull
out
rolb
stos
dec
adc
into
inc
and
fwait
sti
mov
xchg
mov
test
fwait
ljmp
or
orb
inc
not
fstpl
lahf
xor
stos
aam
test
or
xchg
and
cmpsl
lods
push
adc
jbe
mov
cmp
jg
dec
add
lahf
out
lea
mov
jae
int3
adc
cld
jno
scas
cbtw
and
adc
mov
jge
ret
mov
ret
jnp
repz
xchg
mov
or
adc
add
pop
and
mov
pop
lret
call
sarl
xchg
jno
cmp
add
add
mov
pusha
sbb
pop
add
add
add
shll
pop
or
aas
push
xor
stos
out
scas
popf
pop
sti
add
inc
pop
ret
scas
or
jnp
lret
in
inc
dec
sbb
popa
in
test
lahf
in
mov
sarl
adc
int3
mov
sub
rcrl
cmp
jle
cmpsl
sahf
or
fs
xor
mov
loopne
cwtl
jbe
cmp
mov
call
xor
sbb
and
adc
aam
in
aas
fnsave
fnstenv
add
adc
inc
mov
roll
xor
mov
xchg
mov
int3
imul
xchg
rclb
fscale
inc
es
dec
jge
sbb
dec
or
nop
pop
mov
add
ret
push
clc
sub
and
aam
push
sub
mov
add
iret
jg
cmp
mov
pop
inc
fsubl
mov
ja
mov
or
addr16
add
add
add
and
mov
add
stc
inc
mov
push
jae
mov
mov
data16
test
dec
jl
add
jl
sub
or
or
jbe
xchg
lcall
mov
ficoms
jge
loope
aas
insl
pop
aas
add
pop
xchg
jae
inc
pop
sahf
leave
negl
mov
lods
movlps
adc
outsb
jnp
iret
cmp
out
loope
xchg
sbb
arpl
adc
xchg
xlat
mov
or
cmp
sahf
insl
aam
push
clc
lea
dec
xor
sub
in
push
mov
imul
mov
orl
push
aas
pop
lret
jne
mov
and
pop
out
test
ja
push
mov
adc
adc
dec
daa
call
jmp
in
xchg
mov
add
xor
xlat
out
cld
jle
movsl
jl
pop
add
add
add
int
fsubs
stc
in
dec
leave
int
mull
pop
jbe
adc
xchg
test
push
sub
mov
xchg
ss
pop
dec
aaa
or
adc
dec
into
mov
or
pop
fdivs
sbb
xor
andl
or
pop
dec
xchg
xchg
mov
mov
notb
lret
dec
out
jo
test
jp
pop
pop
xchg
push
jmp
adc
cmp
lods
adc
push
das
loopne
xchg
add
xchg
pusha
mov
or
test
mov
inc
push
leave
mov
loopne
repnz
add
push
jge
cmp
inc
shlb
adc
xor
les
ss
push
cmpsl
push
pusha
fwait
shl
or
or
inc
cmp
push
aad
jle
lcall
je
rclb
ret
sub
jnp
xlat
xchg
pop
movsl
inc
push
call
testb
xchg
jb
aaa
int
decl
mov
mov
in
add
add
add
add
lahf
aas
lods
xor
fdivrs
mov
out
shlb
or
sub
xlat
jg
mov
in
push
adc
inc
roll
push
and
rcll
out
addr16
insb
fnstcw
cmp
mov
cli
ds
movl
subb
jbe
loop
sbb
out
xor
pop
das
add
add
outsb
adc
inc
sbb
outsl
xor
push
mov
sbb
iret
pushf
imul
aas
fbstp
scas
pop
sub
inc
dec
adc
add
adc
dec
jno
xor
xor
xchg
dec
insb
je
jecxz
sbb
mov
in
or
cmp
xor
outsb
jl
loopne
xchg
in
dec
cmp
jae
pushf
mov
adc
push
pop
dec
rsm
ret
sti
inc
push
push
in
cmp
cltd
or
jge
fisttpll
push
daa
pop
rolb
add
add
push
into
push
push
inc
lahf
mov
addr16
add
add
add
jg
rol
divb
mov
xor
lods
jo
dec
fstps
test
cs
test
sub
or
rcr
fsub
mov
vphaddwd
pop
rolb
in
and
adc
push
adc
xchg
pop
fwait
jbe
sahf
stos
data16
call
sub
popl
pop
mov
xchg
mov
call
pop
jle
xor
popa
mov
clc
cwtl
push
push
sti
cwtl
fimull
pop
sti
pop
fdivl
jmp
enter
mov
jnp
das
xor
or
dec
push
push
repz
jge
orl
xlat
shll
pop
inc
mov
jmp
roll
mov
cmp
es
inc
aas
fwait
push
je
loop
bound
testl
xchg
jae
xchg
js
mov
mov
stc
cmpb
sub
and
mov
jg
or
bound
add
add
add
in
and
das
stc
mov
nop
xchg
nop
push
aam
mov
dec
cli
shr
out
das
inc
aad
repnz
ljmp
push
int
loop
push
jnp
mov
lds
sbb
sub
aaa
rol
pop
mov
call
data16
xor
inc
xor
mov
in
jb
test
stos
dec
inc
dec
jle
loop
lcall
clc
mov
flds
and
enter
sbb
loopne
stc
cmp
jne
arpl
les
sbb
icebp
rorb
sti
outsb
movsb
fldl
loope
icebp
inc
aam
lahf
subl
je
mov
add
xchg
pop
lods
rclb
sar
std
lds
mov
dec
jno
xchg
call
fwait
aad
or
lods
mov
and
dec
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
arpl
add
add
add
mov
xchg
cs
xchg
pusha
mov
roll
out
add
cmp
nop
sbb
mov
mov
xchg
jmp
sbb
xchg
sbb
addr16
mov
subb
je
ret
and
cltd
out
jno
sarb
mov
inc
loope
xor
sub
out
adc
repz
aaa
mov
and
sbb
cmp
mov
testl
pop
popa
movsl
cmpsb
outsb
mov
movsb
inc
sarb
xchg
jns
mov
xchg
insl
sbb
fnstenv
movsl
sub
cmpsl
sub
sub
xor
mov
imul
cmp
xchg
stos
jae
orb
mov
out
cld
inc
inc
lret
jae
dec
test
cmp
daa
cmc
adc
inc
movsb
js
or
xchg
sahf
pop
sti
fldenv
ja
ret
negl
fsubs
jmp
add
add
idiv
jg
sub
lods
pop
add
add
add
leave
cltd
push
cmpsb
sub
bound
loopew
in
and
rolb
mov
jmp
aaa
repz
push
sarl
in
mov
add
sarb
jmp
sub
nop
dec
sub
std
outsb
repz
enter
xor
sbb
and
fisubl
sub
mov
pop
lret
dec
loopne
ss
mov
test
jmp
and
aaa
fcmovne
negb
cmp
mov
dec
ret
xor
jne
and
mov
adc
xlat
mov
mov
sbb
scas
dec
repz
adc
ret
into
pop
adc
les
pop
xchg
mov
cmp
sbb
subl
loop
inc
xchg
fstps
pause
mov
pop
and
jae
push
fidivrl
stos
or
out
jle
lods
cltd
dec
sbb
mov
add
pop
mov
fstps
test
add
add
add
cmp
cmp
mov
add
loope
jmp
inc
clc
inc
mov
iret
lcall
pusha
loopne
jae
mov
fmull
xorb
or
pop
lahf
or
cmpb
ret
jp
lret
mull
cmpsw
les
outsb
mov
fs
jae
repz
sbb
adc
mov
mov
pushf
loope
adc
scas
adc
aaa
pop
cld
pop
cltd
xchg
pop
icebp
mov
pop
faddp
cmp
lcall
jnp
jmp
push
xchg
jns
cmp
and
xlat
pop
sub
shll
lods
call
and
dec
xchg
add
mov
mov
inc
jg
std
pop
shl
pop
enter
sub
into
popf
cmp
es
jle
mov
in
jbe
sbb
leave
arpl
aas
stos
push
mov
repnz
movsb
jle
arpl
cmp
add
add
add
inc
je
push
cmp
mov
pop
jmp
ret
stc
leave
enter
call
or
and
daa
out
xlat
ret
sbb
mov
add
adc
inc
pop
lret
xchg
pop
cs
adc
sub
hlt
gs
fists
sbbb
dec
hlt
scas
pop
cmp
adc
jmp
stos
sbb
and
sbb
aaa
shrl
or
lcall
roll
stos
sbb
pop
mov
iret
rorb
cmp
sarl
out
test
jp
jp
pop
addr16
sbb
push
jle
mov
cltd
push
push
mov
fnstcw
pop
push
hlt
imul
cmc
adc
repnz
sub
sub
cltd
mov
in
mov
jle
jns
and
fsubrs
inc
insl
pop
and
out
add
add
stos
sub
stos
out
jmp
sub
out
sub
addr16
add
add
femms
mov
push
dec
int3
jne
rcll
sub
in
pop
push
shll
or
sbb
dec
pop
inc
pop
bound
es
sbb
sub
add
and
xchg
fadds
fnstsw
in
shrb
jbe
enter
cmp
push
subb
fisttps
setnp
push
in
mov
cli
and
mov
add
sub
daa
lcall
mov
fistpl
ja
pushf
push
push
fs
push
xor
cmp
and
xor
inc
pop
insb
cmp
lcall
pop
es
jbe
sbb
jb
add
add
lcall
icebp
mov
neg
xor
mov
push
ss
xor
cmp
cld
and
dec
push
pop
call
mov
hlt
iret
aaa
dec
push
pop
hlt
jl
and
mov
shll
fnstenv
inc
cmc
cmp
push
add
cltd
hlt
xchg
int
cmpsl
stos
cs
cli
out
in
sub
lea
inc
std
mov
mov
pop
loop
inc
sub
and
push
and
mov
fwait
mov
stc
xchg
or
xchg
lret
push
or
into
loope
and
jp
xchg
scas
mov
push
mov
sbb
out
ficompl
cmpsb
je
imul
lret
jge
push
test
imul
sbb
mov
add
or
push
push
inc
sbb
adc
sub
or
inc
xor
test
pop
xor
fcomip
in
clc
stos
movsl
push
xor
lods
sbb
xor
sbb
sub
inc
movsb
mov
daa
add
mov
fstps
imul
sub
push
mov
lcall
jne
push
or
aaa
dec
cli
stc
inc
inc
dec
es
xchg
push
cld
je
jbe
jns
sbb
pop
popf
outsl
jne
imul
add
out
mov
xor
test
push
loop
pop
and
out
mov
xchg
dec
push
fiaddl
cltd
sub
ficompl
mov
daa
mov
int3
div
iret
mulb
shll
sbb
pop
orb
bound
cld
ret
dec
jg
cs
out
insb
xlat
xchg
ret
mov
sub
sbb
pop
lock
loopne
lds
xchg
sub
mov
loopne
lcall
cmc
orl
popl
andb
inc
cltd
mov
les
adc
lahf
xor
xchg
in
out
mov
adc
test
lahf
sahf
jo
cmp
or
int3
mov
mov
mov
jl
mov
loop
inc
int3
flds
or
addb
push
les
add
fstps
push
sbb
mov
aam
mov
je
add
add
add
cltd
jmp
fildl
or
push
add
add
add
adc
popa
sti
enter
lcall
rcll
jg
or
es
and
lret
cmpsl
mov
and
or
imul
sarl
daa
lds
sbb
push
sub
outsb
adc
fwait
aam
and
cmc
arpl
hlt
mov
stos
into
rcll
fldt
add
cltd
adc
ret
cmp
sub
test
and
fcoms
sbb
dec
pop
xchg
push
ds
lret
inc
push
leave
sub
sbb
leave
sbb
clc
mov
pop
mov
loop
push
test
cli
fimull
or
inc
pop
and
ret
pop
outsb
stc
test
arpl
iret
adc
xchg
mov
or
inc
add
and
mov
dec
jno
rorl
adc
ret
push
or
fs
das
mov
mov
add
push
jg
dec
xchg
dec
or
imul
add
add
mov
mov
rcll
cmp
out
bound
jmp
loopne
es
and
nop
cli
pop
cld
lods
push
jnp
popf
fcomps
pop
jmp
jne
jmp
push
je
je
dec
movsb
insb
cmp
or
dec
xchg
decb
gs
push
mov
push
xor
mov
sub
push
loope
mov
xchg
mov
test
jge
pop
mov
jge
push
sub
mov
insb
and
xchg
leave
pop
or
mov
es
push
insl
pop
mov
sti
dec
cmp
rorl
fstpl
adc
pop
push
inc
sti
xor
enter
imul
or
dec
mov
hlt
add
sbb
dec
addr16
xor
pop
sbb
xor
test
daa
and
push
inc
sbb
xchg
imul
push
ds
push
iret
mov
fucomip
push
insb
xor
data16
mov
insb
add
add
add
or
push
movsl
les
outsl
ljmp
adc
ss
pop
int
mov
push
jns
cwtl
lea
xchg
jmp
push
jge
iret
jmp
push
test
hlt
jmp
dec
dec
stc
cld
mov
enter
mov
rorl
inc
mov
jb
xchg
test
lret
ljmp
mov
int
mov
int
scas
sti
adc
enter
aam
pop
shl
adc
mov
or
bound
xor
fsubrs
leave
test
dec
leave
and
dec
mov
jp
out
insl
sub
clc
xor
mov
mov
pop
clc
imul
mov
idivb
jb
add
xor
loope
jne
aaa
pop
sti
mov
cwtl
cld
push
in
pcmpgtw
adc
sub
enter
add
dec
out
iret
jmp
aas
in
push
in
sub
add
add
out
nop
lds
ss
jne
add
outsl
test
xor
lret
addb
jmp
mov
out
mov
notl
xlat
test
inc
movsb
mov
into
loope
fstp
xor
into
faddl
hlt
jl
sti
push
xchg
pop
pop
sub
sahf
fimuls
repnz
sbb
pop
xor
xchg
pop
inc
lods
xchg
bound
lods
xchg
mov
popf
inc
jmp
jne
popa
subb
lods
and
outsl
fisubrs
dec
je
test
mov
rolb
mov
cwtl
pusha
subb
stos
sbb
push
mov
cli
subb
dec
shl
mov
push
inc
test
cmpl
jecxz
insl
pop
add
popa
xchg
jg
hlt
adc
sti
clc
movsl
pop
mov
rorb
sbb
enter
mov
daa
fldt
pop
push
jo
lds
mov
sub
int3
test
add
add
std
cmpsb
pop
dec
sub
sub
outsb
add
add
add
push
mov
mov
cmpsl
sahf
stc
je
addr16
test
ret
lahf
loop
dec
ss
mov
pusha
adc
ja
push
xchg
es
dec
lahf
popa
movsb
and
inc
mov
push
or
loop
or
pop
cmpsl
adc
setle
pop
in
adc
repz
mov
push
push
mov
pop
aam
mov
movsl
mov
cmp
fwait
jo
sub
in
arpl
lods
mov
fbstp
shll
test
adc
adc
inc
fcmove
cmp
test
and
dec
lret
xchg
sahf
push
repz
gs
insl
mov
clc
jge
and
cmp
lret
cmp
nop
lds
or
lret
daa
js
jl
movsl
adc
xchg
adc
into
and
push
inc
iret
pusha
test
mov
pop
adc
add
in
lods
imul
neg
std
sub
dec
out
sbb
cltd
outsl
add
add
add
mov
stos
jp
mov
lret
mov
test
mov
push
jge
push
flds
lahf
ljmp
lea
std
push
lret
jae
jl
jae
pop
sub
shl
fucomp
lret
jns
mov
sahf
pop
jbe
fstp
dec
adc
push
lcall
mov
sbb
repz
jb
into
jge
xchg
sbb
out
shrl
imul
sti
test
ds
cwtl
jecxz
xchg
insw
sbb
sbb
mov
xchg
or
fidivl
jp
aaa
push
push
sub
filds
sub
add
lea
lods
ja
bound
adc
and
lret
sahf
test
jecxz
shl
daa
dec
ljmp
mov
fstpl
add
or
ret
aaa
xorb
bound
add
add
cs
xor
cltd
in
je
addr16
add
add
add
mov
pop
add
dec
pop
xchg
sahf
ss
cld
flds
push
sbb
cmp
test
sub
in
jae
pop
sbb
xchg
cmpsl
push
sub
mov
xor
push
mov
xor
ficoml
pop
push
cmp
jnp
sbb
inc
int3
pop
push
dec
push
bound
mov
js
mov
pop
mov
xchg
repz
cmpsb
seto
push
hlt
cmp
xchg
sub
filds
push
mov
pop
fs
insl
cltd
adc
fbld
fcom
or
push
sar
nop
jmp
inc
xor
iret
inc
aam
imul
mov
in
aad
popf
mov
and
lahf
dec
in
lea
and
call
add
push
sub
mov
stc
push
aaa
push
add
mov
and
inc
and
lcall
out
sbb
pop
cmp
add
add
add
pop
je
imul
push
mov
bswap
push
test
popa
and
mov
or
mov
aad
ss
and
inc
sub
fmul
mov
adc
add
pusha
mov
cmpsb
imul
icebp
das
jno
shl
add
push
jge
xor
jbe
xlat
mov
fstp
adc
add
pop
pop
je
push
push
push
or
movsb
rclb
rorl
xchg
push
repnz
xor
andl
add
xchg
out
jecxz
mov
jp
inc
pop
fcomp
xchg
sub
pop
or
dec
mov
inc
xor
call
aad
es
and
lahf
rclb
cwtl
idivl
mov
pop
mov
xor
jg
xor
mov
cwtl
mov
inc
mov
lods
dec
cwtl
insb
fmull
mov
daa
sub
ja
mov
mov
addr16
add
add
add
push
addr16
movsb
xchg
rcl
roll
or
jg
cmpsb
adc
or
inc
mov
pop
xor
mov
addl
lock
sbb
jae
adc
adc
xor
adc
jae
xchg
fdivrl
jo
sbb
popa
stos
xchg
mov
cmp
pop
and
mov
test
inc
sub
imul
test
push
jns
sbb
fcmovnb
gs
cmp
sub
orl
cmp
std
cld
jg
insl
je,pn
xchg
mov
ret
in
jmp
mov
adc
mov
pop
or
jns
jno
mulb
lock
and
jge
pop
jle
pop
inc
aad
mov
cmp
mov
nop
test
inc
or
clc
mov
or
test
shll
insl
inc
inc
pop
clc
pop
movsb
lret
add
int
mov
jnp
outsl
cmpsb
loopne
jmp
shll
add
add
add
fnstsw
dec
hlt
loop
cmp
jbe
lods
pushf
and
ja
out
fs
push
insb
and
std
pop
out
mov
stos
mov
inc
cmp
fistpll
in
notb
insl
cmp
push
fldenv
jo
lcall
push
push
in
inc
in
mov
sbb
adc
push
cmp
sbb
sub
sbb
pushf
popa
in
adc
popf
mov
out
loopne
dec
movsb
mov
push
adc
fdivr
pop
les
jp
cmp
test
mov
fidivrs
addr16
in
and
xor
cmp
clc
jp
shlb
adc
pop
push
push
lret
sbb
add
xchg
mov
insl
cwtl
xchg
ret
jp
mov
aas
push
or
mov
jg
add
pop
cmp
lcall
jmp
rolb
test
add
cli
xchg
jle
push
je
test
add
add
add
or
xorl
out
cli
fimull
mov
fsubs
jne
mov
cld
dec
movsb
pop
cmpsl
pop
push
xchg
push
icebp
sahf
int
out
pop
setle
dec
or
das
push
out
pop
mov
xchg
ret
iret
das
cmpl
xchg
push
xchg
or
pop
xchg
sub
dec
ljmp
dec
icebp
pop
inc
call
mov
gs
and
lret
cmp
lock
xchg
icebp
xor
lret
jo
jecxz
xchg
ja
sub
lods
mov
add
mov
js
hlt
ss
ffree
cmp
jno
mov
in
and
and
sbb
adc
mov
or
out
xchg
and
mov
jmp
insb
or
jmp
into
orl
sub
sbb
mov
and
decb
xlat
xchg
popf
and
inc
and
pop
test
imul
add
inc
aaa
dec
fwait
jnp
aad
sbb
inc
mov
add
add
xchg
lcall
push
dec
add
inc
xor
inc
dec
pop
xchg
out
lock
cmp
aad
cmp
cmp
out
xchg
out
lret
stos
notl
or
sbbl
in
mov
cltd
adc
and
movsl
push
lock
je
ds
popa
hlt
sbb
mov
hlt
xor
repnz
js
popa
push
mov
mov
sahf
in
pop
add
jecxz
cmp
insl
stos
lahf
push
inc
andb
xor
jbe
push
mov
pusha
mov
inc
push
in
xchg
movsl
pop
movsl
fwait
xorl
sbb
sub
push
adc
das
dec
push
test
lea
nop
jmp
mov
fmuls
movsb
xlat
add
shrb
aas
std
inc
iret
dec
xor
movsb
fnstenv
testl
sub
xchg
push
cltd
mov
std
mov
sub
js
or
add
add
dec
inc
jl
leave
cmpsb
xchg
push
call
mov
movsb
jns
es
jmp
je
das
xor
pop
fbld
lcall
js
push
fs
pop
mov
lret
sbb
jno
imul
in
arpl
sbb
pop
insl
sarl
mov
xchg
xor
xor
jge
sarb
std
xor
dec
mov
pop
js
ret
daa
mov
test
sbb
push
jnp
mov
jnp
adc
lods
xchg
add
xor
sbb
shl
in
or
leave
sbb
add
jno
xor
push
hlt
clc
sub
arpl
push
pop
xor
ljmp
add
xchg
popa
sub
out
aad
nop
push
sbb
ds
or
or
adc
push
xor
add
fstl
lret
mov
add
add
add
add
roll
mov
push
fldl
xor
loopne
enter
sbb
dec
cmpsl
cwtl
push
dec
ret
loop
jg
sbb
xor
or
push
cmp
xor
xor
or
push
xchg
fisubl
inc
jae
mov
int
popa
shll
jp
jbe
jle
cli
fucomip
scas
mov
xchg
xchg
push
int3
in
out
into
outsb
and
or
xor
push
jp
cld
adc
aaa
sub
sub
inc
pop
mov
mov
clc
add
mov
pop
std
dec
or
je
data16
xchg
jl
movsb
mov
andl
subl
xchg
test
mov
fsubl
sub
lcall
add
stc
adc
sub
pop
adc
or
add
pop
jg
in
mov
add
sub
inc
in
mov
mov
out
sub
sbb
js
add
add
add
in
cmpsb
jg
dec
jnp
imul
mov
insb
loop
or
mov
push
jb
shrl
jbe
out
pop
cli
jle
clc
icebp
stos
sub
push
sub
in
hlt
cmp
mov
mov
add
movsl
bound
push
movsl
stos
shl
insb
inc
pushf
push
inc
imul
dec
mov
or
cmp
fistl
mov
xchg
xchg
lock
lahf
shll
add
ds
push
sarl
rcl
negl
dec
sbb
test
int3
gs
cmp
dec
xchg
mov
push
call
adc
push
cli
pop
pop
out
mov
enter
ja
mov
mov
inc
xlat
imul
loopne
aas
outsl
test
mov
mov
sbb
into
in
sti
arpl
sub
add
jle
push
jo
lahf
fistps
jb
sbb
add
add
divl
in
sub
addr16
add
add
add
mov
pop
xor
lock
mov
fisubs
mov
movb
mov
jno
movsb
or
mov
dec
insl
mov
adc
sbb
cmpsl
fsts
push
push
fwait
das
xlat
scas
sbb
ljmp
add
cmpb
imul
jne
mov
shl
mov
cmp
add
mov
xchg
cltd
mov
mov
sub
fbld
cltd
adc
jo
sbbl
sbb
xlat
push
cmp
push
pushf
out
mov
pop
sbb
xchg
pop
insb
test
into
jb
pushf
mov
out
fldt
addl
xor
arpl
das
xor
cmp
xor
pusha
or
movsb
dec
stos
hlt
mov
push
pop
arpl
jl
pop
jg
cmp
xchg
pop
aaa
sahf
inc
stc
or
sbb
mov
cmp
clc
fisubs
mov
mov
int3
sti
addr16
add
add
add
and
jle
sahf
mov
sbb
test
jnp
mov
sarl
clc
pop
mov
xchg
subl
pop
push
loope
shll
addr16
sahf
jno
push
stos
pusha
push
mov
fdivrp
jns
or
mov
mov
js
inc
in
leave
cmc
pop
push
fisubl
out
mov
push
dec
out
lods
inc
out
jl
jmp
mov
fstpl
sub
cmp
jnp
jnp
or
js
ret
rcr
outsl
push
dec
or
mov
fldl
cmc
mov
jle,pt
js
lahf
inc
cmpsl
adc
adc
dec
hlt
push
xor
pop
mov
insb
jp
pop
ljmp
and
pushf
mov
pop
cmpsb
das
xor
xor
mov
lds
dec
add
ss
in
test
xlat
stos
out
add
add
mov
outsl
jne
ljmp
scas
jge
addr16
add
add
add
inc
cmp
repnz
cmc
into
pop
ret
and
sti
cmp
arpl
xlat
lahf
arpl
add
into
push
xchg
jae
mov
mov
cwtl
mov
insl
mov
or
xchg
jb
mov
mov
cld
mov
xchg
lods
adc
xchg
aad
fiadds
hlt
sub
cmp
bound
mov
or
cmc
cmp
jmp
popl
xchg
dec
test
push
fs
nop
lahf
outsl
test
dec
mov
repz
xchg
out
repz
push
sbb
sub
and
cmp
arpl
cmc
push
xor
mov
rclb
push
cmp
add
xlat
xchg
out
stos
inc
mov
sarb
jns
lret
dec
test
repz
in
fisttpll
or
jp
mov
jmp
or
testb
inc
cmp
sub
add
add
testl
andl
add
push
test
sahf
push
jns
inc
ja
xor
divl
in
add
push
inc
fbstp
in
mov
cltd
decl
lahf
xchg
out
loop
jecxz
lret
adc
xor
mov
sbb
jns
lahf
leave
imul
dec
loop
movsb
out
sbb
in
jl
gs
push
mov
sahf
and
repnz
adc
stc
inc
pop
mov
sub
stos
insb
push
mov
fadds
push
or
cltd
cmp
mov
xor
addb
jnp
fsub
xorl
push
and
lcall
cmp
mov
mov
mov
fldenv
add
loopne
jmp
sbb
dec
xor
dec
rcr
sbb
pop
idivb
stos
or
addr16
test
push
int
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
pop
inc
inc
dec
out
pusha
fistpll
pop
test
adc
lret
sub
daa
mov
insb
movsb
push
push
sbb
xor
mov
pop
mov
mov
int3
shl
jl
adcb
cli
icebp
jo
int3
add
dec
add
push
mov
jle
or
dec
mov
bound
int
into
mov
sub
test
aaa
pop
fwait
sbb
sbb
pop
adc
sahf
or
push
mov
leave
out
popf
jle
in
lock
cltd
repz
loopne
or
mov
pop
dec
inc
add
inc
sbb
xchg
aam
test
or
sub
jb
lods
jle
fimuls
push
push
sbb
nop
cmp
pop
shr
sub
lea
aaa
rolb
xchg
mov
loope
out
mov
jo
and
xor
mov
cmpsb
push
sbb
inc
fsubs
add
add
add
push
scas
es
push
xor
mov
push
iret
mov
dec
insb
pop
inc
xor
adc
in
insb
xchg
sub
adc
jno
mov
cmpsl
fucomp
gs
repnz
push
lds
in
stc
inc
xchg
ja
orl
ljmp
and
fdivrs
and
and
fsubl
ljmp
push
pop
mov
xor
jno
sub
jmp
mov
cmp
add
lea
fs
cmp
jns
lea
call
mov
mov
int
imul
mov
mov
cltd
push
mov
sti
daa
mov
mov
and
xorl
inc
stos
add
pop
jno
add
push
push
dec
bound
out
xchg
push
adc
mov
xor
cli
mov
cmp
add
add
add
cwtl
cltd
add
jbe
repz
cmpsb
dec
jno
insl
and
aad
stc
xor
stos
leave
call
pushf
sbb
movsl
mov
mov
mov
push
jp
lea
inc
outsl
xor
shlb
dec
xor
or
jno
iret
test
inc
in
mov
and
fstpt
das
xor
push
jo
pusha
jne
dec
jg
lahf
arpl
loop
add
shll
daa
mov
jle
shll
out
or
push
adc
mov
fsts
cmpl
repz
aam
mov
mov
test
in
es
pop
ja
mov
jo
pop
push
jge
mov
jbe
and
aas
mov
stos
mov
xchg
int3
loopne
pusha
sub
xchg
shlb
in
sub
dec
js
mov
jg
xor
das
shl
bound
mov
in
std
test
lcall
jle
add
addb
add
add
out
mov
push
cmp
sub
or
jno
dec
pop
push
fsubr
cmp
std
pushf
pusha
mov
pop
or
aas
scas
fisubs
dec
cmp
xor
pop
imul
int
mov
lods
into
es
cwtl
cmp
lahf
xlat
std
cmc
outsl
lcall
shll
leave
rclb
icebp
or
pop
xchg
imull
gs
jle
les
dec
fs
jno
pop
sarb
jne
aad
mov
cmc
test
sbb
pusha
imul
dec
sbb
bound
xchg
ds
pop
fs
movsl
and
fcompl
aad
das
call
xor
add
fwait
sub
movsl
fsts
cmpsb
rorl
iret
and
lods
movl
orl
xor
ret
sbb
popa
pop
sbb
inc
shlb
xchg
pop
mov
out
pop
sti
int3
inc
add
fadds
add
add
xchg
xchg
jns
jmp
mov
mov
add
add
add
dec
arpl
decb
mov
jg
sbb
adc
cmp
movsl
dec
mull
ja
push
cmp
sub
test
data16
fsubr
xlat
xchg
ds
xor
dec
shl
sub
scas
or
mov
dec
scas
push
ret
aaa
push
test
mov
fsubrl
push
xchg
and
mov
enter
mov
cmp
push
jmp
fcmovnu
xchg
shrl
sbb
add
ljmp
addb
in
mov
push
pop
lcall
es
sahf
cmp
sahf
xchg
fstl
add
fptan
lock
xchg
out
shll
jmp
cmp
ret
enter
das
xor
addr16
into
cs
add
add
pop
inc
adc
jle
mov
insl
dec
xor
lcall
in
stos
mov
jae
add
add
lcall
inc
sbb
xchg
add
add
add
in
cmc
add
data16
cmc
movsb
or
sbb
arpl
dec
cmp
mov
pop
gs
mov
loope,pt
mov
cmpsl
and
add
fs
in
flds
leave
xor
push
fstpt
insb
stos
xor
pusha
loop
cmp
xor
fimuls
cmp
add
scas
push
cmc
xor
shl
bound
cmp
popf
push
xlat
ljmp
lcall
dec
add
out
dec
push
xchg
push
and
cld
jge
orl
in
cmpsb
adc
cmpsl
xchg
lock
aad
movsl
jne
clc
fisubrl
shl
dec
lock
push
scas
and
cmpsl
mov
cmp
js
sub
xchg
xchg
es
lea
mov
int
out
addr16
stc
mov
lock
arpl
xchg
mov
adcb
rcl
pop
add
xor
add
add
mov
idiv
jne
iret
sbb
loopne
addl
add
add
pop
test
pop
mov
shlb
add
jl
out
cli
xor
repz
mov
xchg
lret
iret
push
and
cwtl
inc
mov
ret
stos
test
mov
push
outsl
pop
pop
cmp
xor
and
pop
pop
into
or
mov
pop
jbe
push
mov
enter
stc
inc
lods
mov
xchg
xchg
jo
test
movsl
mov
in
xor
in
shl
xchg
cld
fldl
adc
movsb
mov
addr16
shl
mov
fistl
push
push
push
or
sbb
mov
stc
and
xlat
js
xchg
add
arpl
xchg
and
mov
mov
dec
mov
jmp
xor
add
shr
mov
jmp
push
std
adc
mov
adc
pop
lock
add
add
add
pushl
sub
mov
test
add
add
add
push
jno
jae
out
fldenv
push
mov
dec
clc
xchg
mov
inc
mov
sub
jl
sti
adc
mov
xchg
fs
mov
jg
inc
sub
rclb
pop
lea
data16
cmp
mov
mov
int3
jg
and
arpl
push
cmpsb
rclb
aam
arpl
mov
pop
in
xchg
addr16
test
call
pop
pop
mov
imul
fsubs
adc
idivb
fsubl
or
roll
inc
mull
xor
sub
out
mov
mov
adc
aad
repnz
fbld
dec
sub
das
test
iret
ljmp
xchg
test
out
insl
lds
sub
or
push
sub
add
in
mov
aas
fiadds
dec
sbb
add
insl
mov
push
xchg
xchg
cli
jnp
sub
mov
jge
std
sti
iret
ss
push
jno
jne
clc
test
add
add
add
mov
popa
addr16
cmpsl
xor
lock
push
lds
mov
fwait
cmpl
iret
mov
or
cld
xchg
ret
shll
pop
nop
fcmovne
les
pop
gs
lret
or
lods
lds
jo
outsb
jb
push
cmp
outsb
mov
xchg
lods
test
popa
mov
cmp
push
sub
sbb
scas
mov
pop
dec
mov
sub
loopne
sub
mov
mov
rorb
test
inc
in
sub
mov
jae
cli
daa
call
sbb
jmp
mov
cmp
fisubl
adc
and
rcrb
push
mov
dec
mov
mov
and
adc
arpl
jne
push
mov
fldl2e
hlt
test
mov
cltd
cmp
insb
sub
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
bound
sub
add
add
add
pop
and
mov
popf
mov
jecxz
pop
clc
dec
inc
stos
add
idivb
mov
int3
mov
testl
loopne
rclb
mov
jns
pop
mov
jg
aad
in
das
mov
mov
inc
cmpsb
test
dec
dec
js
adc
hlt
dec
shr
jno
dec
fildll
pop
mov
shrl
push
mov
inc
sub
call
cwtl
cli
test
cmp
pusha
adcb
je
fmuls
xor
dec
mov
jecxz
mov
push
and
loope
inc
into
adc
push
mov
cmp
jp
pushf
daa
and
fbstp
popl
pop
rorb
aam
pusha
and
imul
pop
daa
inc
xchg
push
out
jns
mov
pop
fwait
jp
mov
add
add
mov
mov
xchg
add
add
add
fmuls
cmp
lock
iret
xchg
mov
repnz
enter
mov
divl
fucomp
in
xchg
test
arpl
lods
cmpsl
adc
dec
lret
push
jbe
sbb
xchg
jne
sub
xor
pushf
push
inc
and
and
sahf
cld
inc
jne
and
pop
or
orb
cmp
mov
jmp
and
inc
sbb
dec
lea
cmp
movsb
jb,pt
xchg
xor
pcmpgtb
adcl
or
jp
push
xchg
inc
fucomp
sti
in
daa
dec
addb
add
jle
cmpsl
aad
imul
mov
stos
int3
repz
push
sub
arpl
aam
sbb
xor
mov
pop
cmp
mov
or
sub
das
jo
pop
ljmp
scas
sbb
lahf
popa
loope
mov
xor
call
addr16
add
add
pop
test
ljmp
lock
xchg
xor
sub
add
add
inc
aam
ret
aam
dec
xchg
sbb
das
push
aam
lods
inc
pushl
inc
jo
fmuls
cmc
mov
push
loopne
jge
dec
movsb
mov
push
aam
test
aad
andl
ja
lahf
lock
push
adc
cmp
mov
inc
pop
ja
test
mov
int
cld
rclb
test
jb
fisubl
mov
je
push
mov
adc
mov
xor
add
dec
xor
sub
insl
popf
into
dec
mov
aam
jo
aam
clc
hlt
or
fwait
lcall
adc
mov
gs
notl
sub
jne
add
jmp
out
push
jmp
pop
lea
cmp
cmp
clc
out
inc
mov
stos
mov
cwtl
out
decl
or
in
xor
mov
popa
stc
scas
rcll
rcrb
add
add
add
arpl
jnp
sbb
push
xor
add
push
mov
add
add
add
icebp
mov
loope
test
stos
aad
imul
test
icebp
scas
pop
out
dec
fimuls
push
pop
sub
xor
fistpl
icebp
les
mov
js
loopne
ja
lods
xchg
pushl
lret
int3
sub
adc
push
fildll
and
js
stc
push
xchg
mov
mov
or
iret
loope
cltd
mov
xor
fcomps
ja
pop
xchg
xor
mov
bound
jmp
fidivrl
push
sbb
insb
push
mov
aas
test
jl
sub
mov
mov
xchg
loop
mov
jne
inc
or
push
subl
adc
je
mov
psadbw
jne
mov
or
or
inc
arpl
pop
xchg
dec
pushl
jl
addr16
mov
sbb
inc
mov
push
aas
or
mov
inc
push
xor
add
add
loopne
aad
test
icebp
icebp
cmp
insl
dec
sarb
add
test
push
xchg
pop
mov
arpl
inc
push
sub
sbb
mov
pop
enter
push
data16
inc
dec
cmpsb
cli
jle
adc
mov
sbbw
xchg
out
fistps
in
sub
and
xor
sbb
mov
cmpsl
push
imul
je
xor
shrb
jge
adc
xor
sbb
dec
fldt
xchg
jg
shrb
xor
jg
jne
in
mov
jo
ret
pop
or
jle
jno
pop
fldenv
fistps
je
stc
xchg
aas
jg
fcmovbe
divb
es
adc
cmp
shlb
addr16
xor
mov
cmp
push
dec
cmpsb
cld
add
inc
pushf
ficoms
xor
mov
sub
xchg
int3
insb
fidivl
bound
cwtl
and
add
add
add
je
adc
addr16
scas
cmp
sub
cmp
cwtl
jl
icebp
test
jge
pop
xchg
insl
xchg
cmp
xchg
enter
stc
push
xorb
in
jo
fsubrs
mov
dec
scas
cmc
mov
mov
test
jbe
ret
icebp
aad
adc
adc
mov
imul
xchg
jno
jo
jl
mov
pop
outsl
test
jg
imul
lret
add
sbb
push
pop
lret
adc
jg
mov
push
das
fwait
sub
sub
inc
notl
loope
push
fldcw
jmp
popa
mov
loopne
inc
jecxz
bound
jae
inc
addr16
pop
cmp
adc
shll
in
popa
int
add
or
or
pop
scas
sbb
std
jns
fdivs
andb
orl
add
mov
jns
div
mov
mov
add
add
add
pop
mov
adc
mov
push
icebp
fmull
shlb
xor
insl
or
popf
fcmovu
insb
scas
sbb
inc
and
mov
rcrl
fisttpl
out
jae
lret
dec
or
push
sub
mov
mov
scas
mov
in
inc
mov
mov
js
push
in
sub
aaa
js
rcrl
mov
mov
test
inc
inc
andb
sbb
sub
mov
fwait
and
push
clc
jne
push
cli
push
test
or
jmp
lret
je
nop
frstor
or
subb
jnp
je
jb
gs
out
xor
stos
in
ficoml
icebp
mov
xor
add
inc
cltd
sub
and
xor
pop
mov
ret
fmulp
das
dec
mulb
or
or
xchg
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
in
movsl
subb
lea
add
add
add
mov
sbb
ficomps
out
js
stos
and
int
fcmovne
popa
mov
and
adc
lcall
pop
stos
aaa
dec
negl
xchg
jecxz
dec
inc
loop
repz
sub
add
sbb
push
xchg
jg
fistl
cmp
xchg
sbb
ret
fcomi
sub
cltd
adc
mov
pop
inc
test
xchg
fdiv
xchg
xchg
dec
hlt
xor
leave
jp
add
pop
icebp
cli
pop
shll
inc
int3
mov
repz
adc
push
lods
in
std
ds
jecxz
test
jp
inc
fwait
fs
fadd
ret
xchg
jo
inc
jge
in
mov
pop
push
dec
mov
jns
mov
roll
in
insl
pushf
mov
adcb
ret
jp
cmp
jnp
cmpsb
lods
add
cs
mov
xor
adc
sahf
test
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
pop
push
test
in
ljmp
add
fisubrs
cwtl
push
or
sbb
ljmp
mov
xchg
mov
stos
in
test
mov
je
jmp
aad
dec
add
loope
mov
imul
int3
cmp
repnz
out
in
loope
xchg
adc
sub
adc
and
xchg
sub
shlb
push
jnp
mov
mov
pop
imul
cmpsl
ret
fsubrl
cmpsw
push
loop
test
outsl
pop
xor
test
sahf
inc
adc
je
stc
or
sbb
fst
jo
cmp
test
mov
jnp
mov
inc
pushf
into
mov
jbe
sub
popf
inc
mov
or
in
xor
jns
daa
pop
outsl
sti
sub
sar
add
inc
sub
subl
fldl
lods
les
jnp
mov
icebp
std
dec
movsl
push
popl
add
add
add
and
push
adc
into
cld
movsl
jnp
hlt
jmp
mov
dec
mov
inc
sbb
jg
mov
or
dec
xchg
imul
fstpl
mov
push
inc
push
lea
pop
xor
es
inc
ret
dec
xlat
test
pushf
mov
push
sub
stc
pop
popa
ljmp
nop
test
xchg
cmp
adc
pop
in
dec
iret
hlt
or
cmp
and
leave
aad
pop
scas
int
lds
lea
arpl
jp
jge
rcll
loope
pusha
ror
xor
imul
in
repz
cwtl
pop
ds
adc
jo
push
adc
jp
sbb
in
inc
pop
push
aam
add
aad
sbb
add
fdivrl
aaa
jns
loopne
or
out
pushf
fwait
sti
mov
scas
or
popf
xchg
mov
add
les
fcomps
add
inc
and
add
add
add
pop
jo
scas
ret
popf
aas
push
jno
das
xlat
sbb
xor
pop
test
dec
inc
jle
dec
push
fs
push
adc
inc
dec
inc
cmpsb
cld
aaa
clc
push
mov
mov
pop
jmp
push
rdtsc
fistl
mov
flds
frstor
add
xchg
pop
outsb
xor
imul
test
aaa
popa
sub
jecxz
inc
js
lods
mov
pop
jb
jecxz
push
pop
fdivs
mov
cmp
jmp
xor
fdivl
and
cltd
int
jbe
push
inc
sahf
fisubs
mov
xor
outsb
mov
shl
cmp
inc
loope
mov
dec
mov
cmc
in
mov
rcll
sbbl
jno
push
dec
inc
sub
fnstcw
imul
pushf
nop
data16
jge
jnp
push
fidivrs
movsb
and
les
add
jbe
sub
les
pop
sbb
adc
add
add
ljmp
dec
mov
das
addr16
add
add
add
test
das
xchg
mov
jmp
dec
imul
xchg
and
sub
lods
add
push
cs
fistl
xor
ds
mov
push
xlat
aam
pusha
aaa
in
inc
jnp
mov
sub
pop
dec
adc
jnp
mov
fs
pop
dec
add
loop
push
fcom
mov
push
dec
inc
jno
xchg
in
int
inc
mov
fistps
sub
inc
cmp
xchg
cmp
cmp
jnp
out
dec
mov
adc
cmp
mov
outsb
or
out
mov
or
dec
cmc
cld
repnz
push
popa
pop
pop
sbb
stos
and
dec
out
std
and
or
int
mov
jge
push
adc
inc
xor
jb
pop
cmp
dec
mov
test
jg
ds
pop
inc
and
add
add
aaa
shlb
cmc
div
testl
sub
add
add
add
pop
jl
push
dec
cmpsl
data16
sar
adc
mov
push
pop
bnd
sub
fdivrs
test
sub
out
shll
xchg
sti
pop
in
push
dec
cmp
loopne
push
push
or
psllw
lcall
dec
in
loope
jno
leave
mov
jbe
jmp
repz
lea
mov
cmp
cs
cs
cs
mov
and
mov
jo
dec
xchg
dec
sub
mov
push
xchg
adc
push
adc
or
and
int3
loope
std
sbb
stc
jbe
orb
cmp
jmp
popa
sbb
std
jecxz
xchg
xor
sbb
pop
sub
loop
sub
mov
add
jp
fidivl
dec
adcb
pop
dec
add
cmp
cmp
dec
sub
xor
test
adc
push
xlat
pop
push
nop
push
sahf
rcr
pop
adcb
adc
push
or
xchg
add
add
add
repnz
push
lock
inc
dec
ss
add
mov
mov
lds
je
mov
jno
dec
pop
pop
jmp
dec
xchg
cmp
cmp
dec
enter
mov
mov
adc
push
push
dec
int3
cwtl
in
js
jae
out
inc
jmp
or
ficoml
iret
jmp
adc
push
lods
mov
out
pop
int
mov
mov
inc
pop
sbb
adc
stc
ror
jecxz
cwtl
hlt
ret
fmuls
test
push
pop
in
jno
push
cs
inc
fs
mov
jmp
jp
test
pop
xchg
test
mov
or
xor
add
rclb
pusha
cmp
sbb
inc
insb
lods
add
stc
pushf
fwait
sti
fcoms
adc
xchg
fdivl
xchg
cmc
call
add
arpl
cmpsb
jcxz
fimull
addr16
add
add
add
ds
pusha
loopne
mov
jne
push
adc
sarl
aad
iret
jo
mov
inc
aaa
and
ficoms
int3
pop
jb
aad
xchg
iret
loop
push
xchg
mov
push
mov
das
dec
out
gs
insb
mov
mov
lods
fs
jmp
mov
sub
and
adc
sahf
leave
mov
inc
repz
inc
mov
loope
adc
adc
mov
std
repnz
jl
sahf
or
repz
loop
aam
pushf
push
sbb
scas
lea
insb
lock
mov
loope
int
cld
test
or
shrb
jb
loopne
jno,pt
insb
or
sbb
cmp
pop
les
push
jp
and
subb
mov
pop
sub
or
mov
pop
nop
push
and
xchg
sbb
int
jb
pop
test
popa
stos
pop
clc
jnp
jg
in
cli
enter
shlb
dec
addr16
add
add
add
aad
pop
scas
jno
fmull
mov
cmc
xchg
mov
pop
cwtl
sbb
sub
xorb
pop
mov
xor
sub
add
xchg
xchg
fiaddl
pop
mov
dec
lcall
popa
in
inc
mov
loop
movsb
or
stos
adc
idivb
sbb
int
shrb
mov
mov
and
mov
inc
pusha
imul
pop
das
popa
mov
aaa
sub
mov
xor
nop
dec
xor
imul
mov
jno
add
cmp
jb
adc
imul
jae
out
sbb
xchg
mov
fidivs
roll
stc
mov
push
je
push
pop
lds
cs
lret
jp
or
ret
cs
jg
cli
into
xchg
cmpb
test
dec
enter
nop
lret
mov
je
add
add
lods
faddl
fbstp
cld
gs
mov
addr16
add
add
add
jae
jmp
sub
inc
sbb
pop
jns
ds
imul
and
xchg
push
push
fwait
and
and
inc
sub
pushf
ret
add
lods
jo
mov
in
mov
jbe
mov
inc
jge
lret
or
cmp
jns
pop
fbld
xchg
push
test
idivl
cmc
stos
mov
mov
and
outsl
sub
cli
add
xchg
jo
push
pop
mov
push
gs
mov
das
push
or
sub
mov
rcr
sbb
or
dec
in
push
dec
inc
lock
sbb
and
and
and
mov
pop
mov
pusha
pop
cmp
gs
repz
fmul
jle
cmp
and
wbinvd
mov
movsb
lcall
ret
or
and
dec
popf
hlt
not
cmp
sahf
aaa
pop
mov
jp
into
xchg
scas
mov
push
leave
push
cmpsl
push
add
lods
mov
push
mov
sub
sub
add
add
jl
sar
std
jle
pop
popf
scas
xchg
push
push
addr16
add
add
add
dec
adc
mov
inc
lahf
lahf
or
jmp
and
popf
and
into
jo
inc
pop
mov
push
pop
aad
arpl
rclb
lret
push
imul
int
enter
adc
cli
mov
shrb
fisubs
je
add
cmc
xor
loopne
fs
push
cmpsl
dec
sub
push
dec
dec
add
adc
add
popa
popa
testb
pop
pushf
pushf
fcmovne
iret
fisubrl
movsl
sbb
mov
jns
aas
je
lock
test
or
push
loopne
sub
out
jb
sub
jb
xchg
xchg
xchg
in
iret
mov
mov
sbb
mov
cld
insl
pop
sar
push
sub
cmpl
or
inc
aam
jne
sbb
push
ss
xor
mov
pop
pusha
mov
pop
xchg
push
insl
hlt
mov
insb
cli
xchg
mov
mov
push
loopne
push
cmp
cmp
in
movsl
xchg
das
addr16
add
add
add
dec
mov
loope
lea
push
cmp
pop
fcmovu
mov
repz
mov
add
ja
push
ja
pop
ja
xor
mov
and
push
dec
lds
sbb
fdiv
fsubl
lcall
hlt
add
in
xchg
stos
popf
jle
sub
dec
jo
pop
loop
xlat
xchg
dec
dec
subb
inc
adc
outsl
vdivsd
clc
sub
scas
aas
mov
clc
orl
fmull
cmpsl
add
adcb
ret
jge
mov
std
fistpl
xor
inc
lock
adc
mov
scas
sarb
mov
add
cli
dec
mov
int
gs
pop
lcall
daa
ljmp
jmp
leave
xor
pop
xchg
daa
hlt
jb
xchg
cmc
gs
mov
lret
adc
cltd
mov
cmp
add
add
outsl
sti
mov
mov
arpl
sub
addr16
add
add
add
pop
xor
push
movsb
cmp
lret
sbbl
lods
mov
sub
xchg
psubw
xchg
pop
sbb
sub
stc
cmp
mov
jnp
add
aad
out
div
cld
pop
notb
ficoml
icebp
into
xchg
fistps
imul
sbb
mov
sub
push
cli
sti
add
arpl
add
loopne
xor
insb
mov
or
test
jns
shll
cmp
cmp
sbbl
dec
dec
sub
mov
enter
or
sbb
fcoml
enter
xlat
mov
scas
cli
mov
gs
dec
dec
push
sub
ds
insb
test
mov
gs
sti
repz
jnp
cmp
pop
adc
pop
dec
add
ja
sub
dec
lcall
add
add
dec
std
out
xlat
aas
dec
sbb
or
addr16
xchg
lcall
movsb
in
test
add
and
inc
jle
xor
fdivrs
out
sub
pop
mov
push
cmp
sbb
ret
test
sub
add
mov
leave
cmp
xlat
sbb
sub
mov
push
int
aad
mov
pop
pushf
dec
pop
ljmp
stos
lret
mov
out
dec
shlb
sub
dec
xor
loopne
add
stc
add
mov
cld
rep
outsl
xchg
mov
lods
sti
addl
xchg
pop
push
adc
in
add
rcrl
outsb
add
dec
push
jo
call
dec
inc
adc
mov
sub
jl
shll
fsubr
imul
shl
popf
push
out
lds
push
in
mov
sbbb
cs
test
fbstp
jo
jmp
imul
outsl
vmwrite
das
addr16
add
add
add
cs
sub
push
popa
test
pop
inc
gs
push
nop
cmp
cmp
add
push
int
stc
add
cmp
cmp
lea
push
sub
call
shl
fadds
shlb
mov
adc
cld
bound
sbb
loope
xor
in
cmp
cmp
pop
dec
sub
loope
mov
inc
push
ret
iret
in
push
sbb
test
test
scas
stos
popa
sbb
xlat
loopne
clc
insb
mov
hlt
out
jge
iret
outsl
mov
or
fsts
fbstp
bnd
sbb
shlb
insb
ds
rcr
sub
sahf
sub
push
es
cltd
inc
in
xchg
mov
mov
pop
jle,pn
out
mov
cmp
stos
aam
xchg
sub
inc
or
enter
add
adc
sbbl
popl
rolb
add
add
add
xlat
fistpll
scas
sarl
xor
or
or
stos
pop
jp
sub
push
pop
loopne
push
mov
fcmovnbe
mov
aad
imul
pop
movsb
or
mov
insb
scas
sahf
push
mov
aad
int3
lods
push
repnz
push
cmp
scas
mov
scas
sbb
cli
add
or
sbb
cmpsb
lret
in
pop
inc
push
mov
pusha
test
fisubrl
rcrl
push
and
mov
fs
xchg
xor
sbb
pop
int
mov
dec
or
cmp
je
pop
imul
ret
int3
stc
imull
mov
addr16
inc
sbb
insb
stos
idivb
loope
push
lds
stos
andl
adc
xchg
jae
fstpt
sbb
mov
pop
lods
in
addb
xchg
sbbl
sub
and
add
add
imul
movsb
and
ljmp
add
add
add
cmp
lea
psubusb
dec
jmp
mov
mov
cli
ret
sbb
sub
jns
aad
roll
aam
push
out
sub
in
clc
sub
pop
bound
inc
add
loop
or
leave
adc
mov
cmp
jbe
sbb
ja
xchg
mov
or
mov
cmpsl
and
sti
jo
mov
add
cmc
clc
jmp
jo
fs
mov
lods
sbb
xchg
fnsave
test
and
pop
bound
or
adc
fisubl
shrb
cli
int3
xchg
jl
daa
out
imul
mov
dec
loopne
jno
sbb
pop
int3
xlat
xorl
ja
add
xchg
std
and
out
and
lock
sub
lods
movsb
pop
das
xchg
mov
jge
jg
ljmp
in
lahf
mov
sahf
add
add
add
aaa
lret
cwtl
out
push
inc
xchg
es
out
mov
cld
repz
cmpsl
mov
inc
pop
lcall
mov
xor
pusha
lret
xchg
mov
xchg
inc
jmp
pop
movsb
jno
mov
xchg
xlat
mov
mov
jle
add
mov
cmc
fistl
fs
mov
idivl
iret
jb
mov
stos
hlt
xor
mov
mov
push
mov
pop
dec
imul
lcall
mov
test
jne
outsb
int
aaa
mov
call
cwtl
data16
lret
lmsw
mov
imul
outsb
push
push
or
jp
push
fs
cmp
sbb
cmp
push
int
out
insb
xchg
cs
clc
mov
in
mov
inc
mov
roll
cltd
sub
out
inc
sub
or
dec
mov
add
add
add
mov
mov
cmpsb
mov
and
insb
mov
int
xor
loopne
std
mov
xchg
dec
cli
sarl
and
xchg
jge
shlb
push
sbb
icebp
jmp
fwait
pop
inc
les
sub
push
out
pushf
and
aaa
jl
cld
pop
pop
mov
add
cmp
push
sub
add
mov
incb
repz
popa
pop
add
sbb
loopne
es
les
mov
sbb
inc
in
sbb
dec
test
jge
cmp
mov
repz
imul
adc
icebp
clc
test
dec
add
js
repnz
bnd
pop
subl
arpl
jmp
push
add
inc
mov
es
and
sbb
push
data16
inc
add
adc
pop
and
adc
add
add
pusha
test
mov
cld
mov
addr16
add
add
mov
cmp
adc
ror
insl
cmpsl
in
sub
int3
imul
mov
push
shll
adc
unpckhps
jb
mov
into
lret
dec
cmpsl
jmp
dec
sbbb
into
enter
test
stos
mov
pop
adc
cld
loope
dec
or
and
pop
xor
cld
cmp
lret
dec
xchg
imul
push
dec
xchg
leave
dec
mov
fisubl
mov
inc
mov
xchg
xor
xlat
add
add
cwtl
and
addl
mov
divb
ffreep
dec
sub
inc
pop
mov
xchg
loopne
or
dec
sub
ror
mov
pop
imul
jo
pop
rcl
mov
insl
hlt
jns
outsl
movsl
mov
jnp
xor
sahf
lcall
inc
pop
in
mov
inc
add
cmpsl
mov
lret
mov
jp
and
add
add
or
lcall
outsb
insl
mov
add
add
imul
repnz
and
push
ds
das
add
mov
sbb
add
fistpl
jmp
mov
xor
or
shlb
inc
jne
or
fwait
aam
push
mov
call
clc
aam
imul
das
int3
or
mov
add
push
insb
jbe
cmp
pop
and
push
pop
pop
stos
incb
push
sbb
movsb
and
mov
incb
push
and
cmp
add
fdivs
inc
je
push
cmp
ficoml
inc
inc
out
jmp
push
push
inc
scas
fnstcw
pushf
mov
arpl
enter
std
imul
xchg
add
push
mov
sub
sub
inc
jbe
jle
cmp
repz
orb
mov
movsb
mov
mov
inc
inc
add
mov
add
pusha
mov
xor
lahf
fwait
in
push
icebp
lods
xor
sti
and
push
xor
pushf
sarl
into
call
xchg
std
xchg
loop
jno
rcl
imul
cltd
mov
jb
pop
stos
in
pop
std
dec
out
cwtl
inc
pop
cld
sub
pop
sbb
jmp
and
and
fdivl
sbb
enter
jae
jns
push
mov
pop
xchg
add
push
sub
subb
divl
js
imul
cmp
mov
scas
nop
dec
inc
jg
mov
sarl
sbb
mov
lock
imul
es
add
pop
clc
test
xchg
fldcw
arpl
jb
clc
daa
or
notb
mov
subl
scas
pop
jnp
repz
jnp
xor
fsubp
or
pop
cmp
int
sub
push
femms
xor
add
add
std
inc
mov
ljmp
add
add
add
int
dec
mov
push
xchg
push
ret
shrl
lahf
out
mov
sub
sub
mov
lock
add
ret
xor
dec
mov
xchg
jno
data16
data16
test
mov
inc
rcrl
add
xor
mov
or
ja
js
and
sub
jmp
add
aaa
movb
pop
cmp
push
stc
hlt
sbb
add
mov
mov
pop
add
mov
fnstenv
dec
sbb
xchg
mov
loopne
stc
mov
or
adc
ljmp
insl
inc
test
dec
jns
and
nop
sbb
jg
jns
cmp
loop
xor
mov
loopne
cmovp
pop
leave
mov
push
add
mov
sbb
or
lea
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
mov
jbe
xchg
and
jae
loope
xlat
and
add
mov
push
sub
mov
jp
jo
sbb
jp
test
cmp
cmp
mov
inc
or
leave
rdtsc
push
mov
inc
mov
inc
pop
and
ret
jge
xor
stos
pop
pop
ljmp
mov
xchg
xchg
mov
jns
jbe
mov
push
cmp
js
sbbb
lods
mov
push
ljmp
iret
rcrb
xchg
sbb
push
mov
cmp
test
adc
push
mov
and
orb
xor
cld
adc
push
adc
or
xor
dec
enter
sub
movsb
push
xor
sbbl
repz
cmp
sahf
imul
outsl
cli
jecxz
mov
sbb
iret
push
shll
fimull
cs
adc
mov
sbb
ss
out
movsl
add
add
add
sbb
arpl
cmpsl
or
mov
outsb
or
push
sub
sbb
adc
mov
rol
jb
xor
idivl
jp
lock
mov
jmp
jmp
mov
test
test
stos
aas
aas
dec
mov
inc
cmp
data16
xchg
pop
imul
add
lods
notl
bts
push
lds
lcall
test
movsl
movsb
scas
and
out
dec
outsl
in
clc
xor
enter
fmuls
scas
inc
and
fs
sbb
pushf
cmc
jp
mov
xchg
repnz
gs
pop
lret
xchg
inc
push
mov
lock
mov
push
iret
mov
and
rcll
scas
dec
or
stc
xchg
dec
mov
test
in
inc
std
rclb
jns
roll
in
sti
movsb
mov
add
pop
test
stos
hlt
jmp
cmp
jbe
mov
cmpsb
add
add
add
xchg
sub
mov
mov
ret
stos
incb
push
mov
inc
inc
shll
pop
sbb
idiv
sbb
mov
mov
shll
and
loop
xor
or
mov
call
inc
int
dec
ftst
call
dec
fidivs
jmp
in
fwait
pop
js
jb
out
adc
int
or
fwait
pop
dec
inc
mov
bound
sarl
lret
and
cmc
repnz
push
jle
lcall
fdivrl
fcomip
push
cmp
sbb
mov
inc
out
test
jmp
jno
das
movsl
shrb
stos
pop
test
aas
pop
adc
and
push
cs
fwait
js
rclb
cld
jecxz
cmp
loop
sbb
ljmp
ljmp
sub
int3
mov
add
add
push
nop
out
xlat
out
jg
in
xor
cmpsl
add
add
add
icebp
nop
lcall
movsl
xor
push
add
xor
or
notl
adc
add
jb
or
stc
rcl
push
outsl
test
into
sbb
loope
push
arpl
test
add
xchg
mov
arpl
push
or
into
nop
push
iret
xchg
xchg
fldt
fs
imul
cltd
scas
ret
and
rcl
push
add
das
jmp
cmc
adcl
add
loope
xchg
or
mov
dec
out
xor
pushf
push
xchg
pop
outsb
hlt
shrb
fisttps
cwtl
sbb
lcall
ret
popf
xchg
sti
push
mov
cld
mov
pusha
shl
cmp
mov
addr16
loop
adc
jmp
mov
add
or
in
and
cmp
push
inc
or
and
sub
add
add
mov
inc
fwait
lds
jo
fldl2e
xor
test
add
add
add
leave
nop
mov
repz
xchg
dec
inc
inc
jecxz
mov
sbb
in
cmp
mov
outsl
stos
pop
inc
cld
add
clc
insb
push
mov
loopne
pop
iret
out
dec
das
in
and
es
ss
insb
xchg
js
adc
idivl
test
pop
dec
xchg
add
leave
dec
leave
mov
jno
nop
popf
adc
push
sub
inc
jae
pushf
mov
mov
pop
iret
rcr
jl
adc
mov
insl
mov
popf
fisubrl
loope
mov
gs
inc
lods
scas
inc
lahf
jnp
les
sub
aad
sti
dec
lcall
sbb
int3
xor
aaa
clc
insb
push
mov
ljmp
mov
pop
ja
ds
aam
inc
jg
cltd
pop
addr16
sahf
adc
cmp
sbb
mov
add
cmp
add
add
mov
fadds
addr16
add
and
pop
loope
cmpsl
mov
mov
mov
gs
pop
mov
in
inc
aam
daa
cli
xchg
dec
movsl
xor
in
pop
inc
movsb
test
ret
dec
dec
int
scas
mov
cmp
movsl
test
sbb
sub
pop
mov
add
xchg
dec
lds
sub
sbb
es
cmp
fwait
jne
je
push
xor
jo
or
testl
aaa
inc
xlat
mov
dec
push
inc
stos
mov
lret
daa
iret
test
and
sbb
popa
add
mov
cmp
mov
stos
add
jecxz
xor
xcrypt-cfb
cmpsl
cmpsb
pusha
jno
push
test
adc
dec
mov
inc
jns
cmp
pushf
xchg
in
jle
push
movsb
dec
stos
xchg
pusha
mov
shll
stos
cmp
leave
ffreep
sub
std
ljmp
add
mov
push
sti
jmp
push
mov
idiv
xor
or
add
add
add
fcmove
and
les
adc
mov
adc
dec
scas
data16
loope
lock
loop
loope
testb
loop
fldl
sub
xor
jecxz
daa
jns
pop
adc
mov
dec
push
push
and
leave
sti
pop
insl
sub
mov
scas
lods
mov
movsb
or
add
fdivs
int
in
add
mov
dec
iret
pop
shrb
ds
mov
push
rolb
mov
xchg
sbb
aam
push
mov
jbe
xchg
pushf
hlt
pusha
sbb
and
in
and
data16
or
sarb
mov
subb
outsb
leave
addps
jp
jge
cltd
cld
out
lret
dec
jo
or
subl
add
test
pop
sub
loop
jmp
inc
imul
push
flds
leave
inc
call
dec
adc
add
add
jecxz
lock
mov
add
add
add
xor
sub
mov
cmp
cmp
mov
jne
js
psrld
dec
push
cmpsb
scas
cmp
sub
push
or
push
xchg
adc
movsl
daa
and
dec
mov
js
sbb
cld
push
and
cmpps
fmull
lods
and
jmp
dec
dec
aaa
jae
mov
add
neg
and
dec
out
pop
sub
int
mov
xchg
mov
dec
mov
lcall
stos
mov
jae
jle
push
imul
subl
stos
dec
das
jp
lds
aaa
fcmovb
gs
andb
push
mov
cmc
lcall
orb
mul
outsb
repz
daa
pop
movl
pushf
push
mov
sti
mov
mov
adc
icebp
xor
xlat
jl
adc
lahf
sbb
popf
xchg
mov
cld
mov
leave
cmp
orl
add
add
into
repz
push
fiaddl
bound
iret
pop
add
shrl
inc
cmp
popf
stos
jne
xor
pop
shr
fsubr
idiv
sub
push
outsb
shlb
out
jmp
xchg
arpl
xor
test
lret
out
add
jo
pop
sbb
loop
imul
lea
das
mov
mov
pop
lfs
jae
or
rcll
mov
jg
and
sub
sbb
sarb
xchg
or
jp
test
lods
push
mov
xchg
mov
cmp
nop
mov
cwtl
inc
ja
mov
xor
xor
xchg
stos
sub
lds
pop
add
fcomip
ljmp
lret
mov
in
push
sub
call
jne
ss
mov
dec
das
pop
out
cmc
mov
sbb
bound
lods
add
add
add
pop
jns
push
push
movb
cs
cmp
out
enter
push
or
scas
not
push
inc
mov
out
or
ret
or
inc
incb
loop
iret
adc
sbb
imul
cmp
es
in
jbe
adc
aaa
add
sub
mov
sub
icebp
call
addr16
push
adc
mov
faddl
push
sub
outsb
insb
cli
daa
push
push
cmp
stc
scas
stc
xchg
ret
mov
jmp
and
js
and
scas
dec
mov
gs
mov
je
mov
fadds
cwtl
leave
adc
lods
push
iret
jg
jo
sbb
jno
fwait
ret
pushf
jg
lods
fidivl
pop
loope
in
cmpsl
jnp
xor
xchg
mov
clc
adc
cli
dec
out
sub
out
or
cmp
inc
push
sub
or
mov
fucomip
std
dec
std
pop
lcall
xchg
pop
push
xor
push
jg
scas
add
add
add
sbb
stos
add
cmpsb
lret
std
xchg
cmpsb
cwtl
ja
add
pop
int
shrl
inc
mov
pushl
mov
and
lds
aam
push
add
lret
test
clc
or
mov
test
bound
in
xchg
dec
int
cs
scas
lds
dec
fcmovnbe
push
cltd
pop
inc
or
loope
test
sbb
fwait
add
inc
jl
pop
call
cmp
sahf
iret
js
inc
pop
roll
mov
sbb
bound
pop
fwait
lcallw
lods
cld
imul
shll
cmc
inc
lock
arpl
mov
push
repz
mov
xchg
add
aad
and
in
test
jg
dec
cmc
lret
cmp
dec
int
out
pop
rclb
jae
mov
lret
shll
std
in
fidivs
loop
ljmp
add
add
add
add
jecxz
pop
adc
aaa
cli
dec
outsl
and
in
mov
add
mov
pop
jbe
or
jl
inc
sarb
pop
mov
cmp
lods
xorb
stos
daa
cmp
bound
lods
loopne
jbe
rorl
lods
scas
mov
sbb
repz
aad
xor
imul
fxch
shr
repz
fcoms
mov
es
in
out
jb
in
or
lods
mov
xchg
jp
cli
or
inc
sub
cmp
sub
je
jecxz
out
gs
lods
sub
push
mov
pop
add
cmp
loopne
mov
push
adc
fwait
add
cmp
jbe
adc
mov
cmc
cmc
stos
and
pop
ss
repz
fdivr
mov
fcomp
cwtl
mov
cmpl
aas
cmpsl
push
fucom
add
mov
push
push
popf
popf
mov
popa
mov
push
xchg
jg
jmp
std
mov
jle
or
mov
add
add
add
outsl
insl
mov
pop
pusha
cmp
xor
cmc
inc
xlat
push
inc
or
cmpsl
in
fimull
cmp
adc
cmp
jg
mov
pop
lock
xor
push
dec
int
in
dec
fdivs
mov
dec
cmp
pop
arpl
mov
rorb
jo
in
les
mov
add
dec
aas
cmp
inc
xchg
icebp
pop
ss
or
pushf
cmpsb
into
sahf
ret
gs
repz
out
xor
jecxz
xor
sub
in
sbb
pop
mov
out
sbb
mov
inc
data16
scas
pop
inc
and
push
aam
push
pop
sbb
cmpsl
inc
fwait
leave
push
jp
repnz
cmp
lock
fs
mov
adc
and
mov
cmpsl
dec
sub
popf
rolb
andl
fsubs
jl
pop
and
push
add
xor
inc
mov
aaa
test
add
add
orb
movsl
jg
test
andb
scas
and
sub
aad
push
xchg
mov
ss
xor
dec
ss
dec
jbe
lods
pop
adc
sbb
mov
jne
mov
adc
mov
add
hlt
lret
aas
cmp
lods
adc
mov
xor
lods
dec
jno
icebp
adc
ja
das
push
adc
xor
mov
cmp
aam
sub
add
mov
mov
pop
lcall
or
push
lock
dec
ljmp
out
or
xor
inc
and
jle
call
or
movsl
ja
pop
outsb
jmp
mov
pop
add
mov
push
or
repz
ss
and
jmp
aam
pop
or
ss
xchg
in
mov
push
stos
push
pop
xor
cmp
inc
call
stc
addr16
add
add
add
adc
xor
add
mov
mov
mov
test
cmpsb
push
inc
pop
test
aas
test
adc
push
loope
add
add
add
fs
aaa
pushf
lea
jecxz
dec
sahf
in
mov
adc
test
ljmp
bound
and
lahf
and
pop
roll
test
aaa
pop
test
or
cld
mov
out
test
call
xchg
dec
dec
sarl
jge
xor
outsl
repnz
pop
aam
cmp
rcll
jno
in
aaa
rcrl
cmc
fldenv
mov
pusha
push
dec
ss
cltd
dec
mov
dec
ljmp
shll
and
dec
mov
mov
sbb
in
fwait
lock
cmp
pushf
sub
test
loope
xchg
ret
loopne
rol
cmpsl
jle
loopne
lahf
ss
es
les
mov
arpl
add
add
add
sub
cld
pop
pop
sub
lods
call
push
mov
mov
je
inc
notl
dec
cmp
dec
ret
out
sub
jb
pop
add
cmc
scas
lds
mov
mov
fwait
test
mov
repz
out
mov
stos
adc
shlb
add
pop
sahf
pusha
sub
or
jo
and
mov
lock
movsl
mov
mov
and
outsb
xchg
pop
ljmp
or
rcrl
push
inc
inc
adc
mov
shlb
xchg
out
in
sbb
lret
xchg
add
out
test
out
popa
jg
cmpsb
lock
mov
cmc
jp
das
add
cwtl
inc
mov
out
push
push
dec
xor
mov
push
add
sti
jmp
jne
mov
adc
xchg
out
dec
or
pop
stc
out
push
pop
bound
sub
add
add
pop
gs
lds
fbstp
pushf
inc
xchg
jmp
dec
mov
fwait
push
mov
pushf
ficoms
repnz
cmpsl
stc
or
pop
jecxz
sub
fcompl
lea
dec
cli
mov
scas
mov
ds
push
jge
mov
jmp
inc
mov
icebp
sbb
out
insb
shrl
mov
and
in
shll
mov
mov
frstor
sti
mov
mov
sub
movsl
sbb
cmp
dec
dec
mov
or
jnp
dec
inc
mov
aam
loop
pop
push
adc
mov
mov
mov
lods
bound
mov
xor
pop
popf
mov
adc
sub
out
push
aad
rorl
rcll
sub
insb
lret
out
adc
adc
or
out
mov
push
pusha
and
test
adc
and
mov
add
add
push
mov
lcall
push
addr16
add
add
add
jb
or
leave
aas
test
xor
lret
ja
aad
sub
mov
xchg
into
into
mov
cmc
ja
mov
cli
pop
and
data16
movsl
pop
push
aas
shrb
mov
loopne
sbb
xchg
daa
inc
orb
test
pop
insb
cltd
add
mov
repz
cltd
jbe
sub
xchg
cmp
insb
mov
cmpsb
jo
push
jbe
leave
notb
lock
mov
dec
popa
mov
jecxz
dec
sub
push
test
cltd
mov
ret
mov
jge
cwtl
aaa
mov
mov
inc
inc
jmp
pop
mov
cmp
shll
pop
cmp
repnz
loopne
push
push
or
out
mov
mov
inc
ds
fdiv
cltd
or
jmp
xor
test
mov
xchg
push
xorl
insb
lret
and
mov
add
add
add
xchg
mov
rclb
jg
jae
adc
roll
add
lods
lret
pop
push
dec
lods
pop
jg
xchg
das
mov
loop
mov
xor
mov
xchg
jl
push
outsb
test
out
xchg
setge
pop
and
imul
dec
inc
dec
aaa
mov
scas
inc
popa
imul
jmp
mov
in
mov
dec
ficompl
out
pushl
pop
or
lock
mov
mov
xor
adc
jmp
add
adc
cmp
mov
jns
inc
fstl
xor
jb
arpl
fwait
dec
call
mov
addr16
shll
and
pop
sbb
dec
jg
or
pop
jno
das
insl
sbb
cmpsb
int
and
cmp
or
mov
jl
nop
sub
sbb
sub
jg
lcall
dec
pop
pop
sbbl
fstp
rorl
sub
cmp
add
add
add
test
fmul
push
push
stos
xor
fs
in
insl
idivb
sbb
orb
dec
aad
sbb
ror
sub
or
add
adc
cld
lahf
adc
mov
popf
jo
xor
rol
rcr
arpl
cmpsb
sub
movsl
cmp
insb
stc
imul
dec
add
shl
nop
fs
pop
sarl
pop
jo
push
push
popf
sbb
sbb
outsl
adc
xrelease
lcallw
sbb
mov
sub
dec
das
push
das
inc
jbe
mov
mov
cmpsb
push
sub
inc
les
push
std
pop
xor
out
insb
cmp
nop
cmc
into
or
push
adc
in
imul
cmpsb
in
push
rclb
lahf
push
and
jle
inc
inc
ret
pop
mov
negb
rorb
jmp
push
in
xchg
jecxz
push
inc
cmc
loope
mov
jecxz
out
mov
in
nop
addr16
add
bswap
adc
je
cmp
cmp
ja
shll
cwtl
jp
mov
les
inc
fdivrl
fsubp
dec
in
lret
xchg
insb
imul
lret
cmpsb
dec
aam
add
push
addr16
inc
xchg
cmp
pop
xor
gs
push
add
jl
dec
shrl
sbb
xor
or
lds
in
inc
push
and
xchg
xchg
pop
adc
sub
test
movsl
imul
aam
mov
cwtl
scas
test
cmc
pop
pop
test
in
ret
cmp
enter
data16
fsubrs
fcomps
mov
cltd
mov
push
aad
lds
icebp
cmp
negb
inc
stos
loop
mov
test
and
or
pop
leave
and
lods
mov
pop
fistl
mov
xor
cld
inc
cs
jae
xlat
jl
clc
and
int3
xchg
popa
dec
inc
sbb
mov
add
std
test
jg
into
lret
orl
add
add
out
inc
mov
ss
mov
gs
push
adc
cmc
mov
std
cmc
out
mov
mov
cmp
out
jb
je
test
insb
lret
push
and
dec
shll
and
cs
add
popf
add
and
and
scas
filds
xchg
ja
out
lods
in
mov
push
movsl
dec
mov
fisttpl
into
andb
mov
loop
jg
addr16
mov
xchg
adc
push
insb
cmpsl
xor
stos
jae
shlb
adc
incb
adc
cmp
sbb
enter
dec
jmp
aam
xchg
popa
push
lcall
out
test
shlb
push
mov
dec
sub
push
jo
add
addr16
or
add
and
mov
adc
stos
out
iret
pop
or
aas
cltd
cmp
add
add
adc
in
lcall
jae
dec
mov
dec
xchg
addr16
add
shrl
out
pop
lock
imul
scas
jecxz
pop
into
enter
or
xchg
scas
add
lahf
pop
xlat
xchg
pusha
movsl
test
sbb
mov
and
push
jecxz
or
int
pop
iret
sti
cmp
popf
ret
ret
jns
mov
sbbl
ja
adc
push
pop
jecxz
iret
insl
jno
dec
push
rclb
repz
repnz
lods
jae
or
cmp
pop
test
mov
jno
adc
fsubrp
adc
mulb
ret
pop
xor
das
fs
jnp
popf
lock
or
xchg
push
mov
jge
sbb
and
or
add
dec
loopne
push
add
or
sub
mov
ja
adc
shl
sbb
es
pop
or
add
dec
or
jg
dec
arpl
hlt
addr16
add
data16
stos
mov
push
out
mov
push
outsb
inc
sbb
pop
lahf
inc
push
test
adc
iret
lods
jo
int
test
test
sub
push
inc
fsubs
jb
mov
aad
push
cmp
sbb
cwtl
shll
rcrb
adc
insl
dec
bound
insl
dec
insl
jne
lods
sbb
movsl
int
sub
out
aam
xchg
mov
push
cmp
mov
lret
push
or
xor
jmp
xor
sbbl
cmp
gs
sbb
fs
add
dec
add
adc
loop
pop
psubsw
fdivr
or
aad
xorl
add
into
addb
cmpl
test
mov
clc
add
cld
add
in
push
out
xlat
and
call
shll
xlat
repz
mov
shll
ret
sbb
add
add
out
idiv
outsl
mov
jp
pusha
ja
mov
add
mov
rclb
adc
cmp
push
fisubrl
and
mov
cmp
movsb
xor
mov
clc
pop
xchg
jge
mov
mov
mov
pop
xor
mov
cld
mov
imul
hlt
aad
inc
sub
lods
xchg
lcall
push
fcoml
ja
std
push
imul
scas
and
or
fmuls
jge
in
sub
add
pop
test
mov
call
jae
cmp
mov
cmp
arpl
clc
daa
xchg
ljmp
jecxz
mov
pop
icebp
mov
out
stos
jne
jg
sti
pop
jge
aam
movsb
pusha
cld
outsb
push
movsb
fadd
dec
rcr
jno
add
pop
dec
pop
gs
mov
mov
mov
pop
out
xchg
sbb
out
inc
mov
add
xor
mov
pop
popa
cs
push
addr16
add
outsb
sub
shl
outsb
add
pop
mov
pushf
mov
rcr
mov
cld
push
lcall
les
jmp
mov
icebp
outsb
mov
pop
es
and
orb
fldl
testb
xchg
sbb
cs
nopl
cs
fsubs
dec
rolb
cli
insb
jmp
iret
aaa
cs
pop
les
sahf
inc
stos
xchg
mov
add
pushf
jnp
lea
test
mov
sbb
sbb
fiaddl
dec
dec
push
mov
xchg
dec
nop
mov
sarl
out
adc
xchg
and
sahf
fldenv
pop
mov
push
jg
gs
xor
cmpsl
outsl
jae
cmp
mov
out
scas
cmp
dec
cmp
mov
and
cwtl
adc
jns
adc
push
push
call
inc
fsubp
ja
mov
add
adc
fidivl
fidivs
repz
xlat
cld
add
dec
pop
data16
aaa
pop
scas
xlat
fists
cwtl
sub
xor
mov
pop
aad
dec
scas
aas
aad
cmp
mov
outsl
mov
es
into
mov
mov
dec
loopne
jg
stos
xor
sub
sti
xchg
hlt
roll
hlt
out
bound
out
push
cmp
repnz
xor
dec
das
clc
mov
add
call
mov
pop
lcall
xchg
mov
cmp
ja
dec
xor
cmc
cmc
jo
inc
cs
sbb
shlb
aas
adc
ret
insl
and
dec
lods
bound
mov
mov
mov
sub
lds
fs
pop
icebp
mov
setl
xchg
cmpsb
or
or
nop
fwait
xchg
pop
arpl
jae
adc
cmpsl
hlt
into
std
sti
leave
sti
iret
jmp
mov
ljmp
add
std
sub
xchg
les
inc
int
pop
call
dec
lods
mov
aad
push
or
or
mov
push
xchg
xor
add
pop
int
popl
cmp
nop
lcall
mulb
loope
sti
in
into
push
adc
mov
xor
arpl
add
xor
fs
cmp
xor
into
loope
jns
sub
pop
aam
mov
outsl
ss
xchg
rclb
dec
inc
push
push
dec
add
ss
adc
popa
fwait
test
xchg
mov
dec
jg
xor
out
pop
lret
push
sti
data16
mov
mov
or
sbb
movsl
push
or
mov
push
scas
push
scas
repnz
inc
xchg
mov
outsl
pop
mov
test
xor
jecxz
pop
mov
jno
inc
jl
or
add
es
in
pusha
sbb
add
mov
mov
xor
pop
in
rolb
add
add
mov
adc
cmp
jmp
jg
testl
imul
outsb
nop
mov
icebp
fimuls
push
es
push
or
faddl
add
or
clc
paddsb
bnd
jno
mov
adc
dec
loope
xor
inc
inc
stos
push
test
adc
flds
push
cmpsb
mov
pop
inc
cmpsb
sub
fadd
divb
in
mov
sbb
or
mov
setbe
or
andb
sbbb
jmp
jg
in
jg
leave
mov
in
int3
mov
dec
jmp
arpl
adc
pop
cmp
cli
clc
mov
insl
pop
stc
loopne
inc
sbb
sub
sub
mov
test
test
test
scas
xchg
xchg
cltd
test
xor
mov
or
sbb
repz
cld
ljmp
mov
loop
sub
add
add
jg
mov
sahf
loop
popf
addl
roll
add
add
adc
sbb
lahf
push
mov
dec
sbb
pop
push
lock
rep
sbb
sbb
sub
cmp
mov
xor
sbbb
add
push
cmp
pop
cs
scas
or
push
out
add
push
sub
je
xor
adc
or
test
or
push
dec
inc
mov
aaa
mov
xor
movsl
lods
outsb
mov
push
cmp
lret
cmp
push
dec
add
movsb
xchg
sbb
fldenv
aad
xor
jne
in
enter
xchg
scas
lds
andb
cmp
push
cmp
addl
ret
pop
iret
pushf
mov
stc
sub
stos
sub
loope
insb
lock
inc
shrb
ret
hlt
and
push
or
dec
lcall
faddp
jmp
popa
icebp
test
cmpl
fxch
out
scas
jmp
inc
fsubrs
xchg
shrb
add
inc
enter
pushl
cld
sbb
addr16
add
add
push
mov
xchg
xor
cltd
or
repz
xor
jg
push
jnp
daa
insl
test
sub
xchg
sub
and
lock
fwait
sbb
mov
pop
add
mov
pop
movsb
popf
mov
sbb
dec
xor
scas
jno
ds
aam
inc
cmp
inc
ficoms
mov
mov
mov
push
outsl
and
fstl
push
mov
cltd
outsl
sahf
cmp
mov
adc
das
cltd
dec
adc
dec
mov
stos
ss
and
fwait
cmp
sbb
push
pop
insl
repnz
add
jb
in
divb
lea
out
fcmove
mov
sub
fsubl
mov
leave
aam
xchg
int
jmp
shlb
adc
jge
push
add
imul
dec
mov
fimuls
adc
out
in
test
xchg
xlat
pushf
shrb
lcall
dec
pusha
pop
aas
addr16
add
add
add
mov
pop
ret
mov
jp
lods
add
les
jb
dec
xchg
xchg
sbb
sti
jne
jne
xchg
cmpb
pop
sbb
insb
sbb
sub
out
mov
leave
mov
dec
popa
xchg
ficoml
fldt
pop
add
sbb
pop
or
mov
out
jo
test
popa
pop
dec
mov
dec
inc
stos
mov
push
lcall
adc
jle
fsubrl
je
sbb
cmp
movsb
jo
sti
fildl
or
inc
inc
leave
gs
lods
adcl
cmp
into
and
sahf
je
scas
or
das
xchg
pop
pop
lcall
icebp
mov
bound
stos
icebp
scas
sahf
stc
jle,pt
add
mov
mov
push
sbb
pop
in
and
or
mov
cmp
dec
mov
sahf
fcoml
mov
cmp
fsts
cmpsl
sub
scas
mov
aas
scas
cmp
das
les
add
add
add
std
inc
arpl
fcmovbe
mov
leave
sub
addb
cli
dec
push
xchg
pop
mov
inc
test
in
inc
movsl
xchg
aam
cmc
adc
cmc
add
and
test
icebp
ja
cltd
pushf
ds
inc
pop
das
add
insb
adcl
movb
cmpsl
data16
test
cmp
cltd
adc
test
push
xor
arpl
movsl
cwtl
sub
movsl
cmp
insb
adc
call
jns
punpckhwd
jae
xor
adc
call
das
push
shrl
sysenter
jecxz
lds
xchg
sub
cmp
aad
or
in
rcl
mov
push
cmp
lds
push
dec
jno
addr16
and
shll
push
sub
or
repz
dec
xchg
ljmp
mov
int3
mov
pop
xor
jg
jne
jne
jg
loop
mov
push
add
add
ftst
sahf
mov
movsl
addr16
adc
dec
out
push
cmpsb
push
jbe
aaa
mov
dec
jns
aam
repnz
and
mov
or
sbb
movsl
ret
fwait
shl
scas
jb
clc
xchg
inc
dec
or
pop
cmp
adc
push
mov
xchg
xor
popf
in
std
mov
xor
jae
dec
lods
scas
imul
adc
xor
les
fistl
inc
pushf
push
iret
and
in
dec
movsb
movsbl
mov
or
int3
ret
cmp
add
rcr
sub
pop
dec
mov
mov
jecxz
in
mov
faddl
movb
mov
adc
xor
in
mov
pusha
lahf
lea
out
cmp
xchg
mov
rorb
shr
ljmp
pusha
ret
out
sub
rol
cli
arpl
adc
sbb
mov
cmc
mov
outsl
movb
add
add
inc
push
mov
sub
adc
adc
or
not
add
xchg
lods
adc
ss
je
clc
cmp
xchg
xor
inc
test
jns
dec
push
add
jmp
data16
fdivrl
jb
mov
cmp
jns
push
jae
jge
lcall
fisubs
out
icebp
insl
lds
scas
adc
pop
test
test
shr
lret
mov
jmp
in
pop
pop
mov
test
lods
movsb
jnp
dec
jle
mov
daa
int3
mov
mov
aam
xlat
test
xchg
sbb
sbb
add
outsb
inc
xor
jmp
mov
add
jle
psubq
int3
ret
repz
popf
xor
jge
ja
std
test
or
lods
ds
pop
xchg
and
outsb
jle
lods
testl
movl
add
inc
out
cmpsl
push
notl
leave
push
int
repz
xlat
lods
aaa
daa
outsb
into
les
rcrb
cmp
sbb
mov
add
pop
jge
pop
mov
or
std
mov
push
imul
jne
jp,pt
adc
or
jp
mov
sarl
out
aas
mov
jmp
mov
mov
insb
ficompl
pop
test
push
lret
add
fistpl
push
sarl
imul
in
in
cmpsl
xor
mov
xchg
push
les
jno
jle
lods
in
out
pop
and
shlb
sbbl
repz
cmp
imul
jmp
hlt
jl
mov
mulb
fwait
pop
mov
dec
cmp
xchg
inc
cmp
jnp
movsl
fsts
mov
push
push
add
inc
adc
add
add
mov
xchg
insb
cmp
add
add
add
inc
fs
repz
sub
pop
xorl
cmp
or
outsb
cwtl
lods
out
jle
ds
lahf
jg
add
in
jbe
popf
test
mov
or
testb
cmp
fdivl
cmp
lahf
ja
xchg
cwtl
es
dec
fbld
or
call
test
mov
and
add
mov
gs
adc
adc
cli
jecxz
push
mov
out
shll
shlb
push
pop
mov
xor
lea
adc
xor
mov
mov
adc
push
js
sub
shll
scas
inc
stos
mov
icebp
dec
hlt
jne
rclb
mov
hlt
je
repz
dec
fstpl
out
and
aas
aas
mov
test
cltd
mov
movsb
mov
mov
addr16
jnp
inc
test
pop
or
dec
call
add
add
out
sti
xlat
in
aad
dec
movsl
pusha
and
add
add
cwtl
pop
iret
ficoms
fisttpl
lods
inc
notl
sub
pop
xchg
pop
xchg
mov
cmp
nop
push
cmpsb
jecxz
sbb
loop
or
mov
aaa
sub
xchg
insl
hlt
pop
lock
xchg
std
test
mov
loopne
adc
inc
inc
out
adc
out
pop
jns
add
and
adc
nop
stc
mov
mov
fdivp
jo
cmp
jmp
outsl
add
ret
aas
mov
fsubs
and
adc
mov
xchg
in
stos
popf
jo
les
mov
jne
push
or
pushf
std
repz
jecxz
call
popf
jp
add
mov
mov
hlt
cmpb
sahf
loope
or
jle
insb
ss
ljmp
fucomip
push
xchg
imull
jg
jg
ljmp
mov
add
ds
sub
cmp
jg
and
mov
in
outsl
call
add
add
add
psubw
xchg
stos
fnstcw
pop
cmp
or
mov
jae
mov
push
mov
bound
lds
pop
mov
xchg
cs
push
mov
xchg
cmp
jnp
or
outsb
daa
pusha
repnz
lahf
push
pop
hlt
push
push
xchg
negb
mov
dec
mov
out
mov
aaa
enter
std
mov
loopne
pop
clc
and
lcall
mov
add
jno
push
sbbl
cmp
scas
jge
push
stos
adc
mov
fisttpll
and
and
fwait
popf
mov
jle
adc
cmpsb
sbb
cld
scas
xchg
pushl
pop
fnstcw
push
imul
cmp
mov
mov
lret
sub
out
add
jmp
mov
or
inc
push
inc
rclb
addl
fadd
test
jmp
ds
repz
fcoms
out
push
add
add
add
ret
mov
popf
xlat
pop
std
push
mov
adc
popl
mov
insl
loope
pop
and
addr16
jne
xor
pop
mov
mov
repnz
pop
lds
mov
in
in
mov
subl
cmp
cld
push
or
fbstp
mov
push
xchg
mov
mov
jp
dec
adc
push
cmp
enter
adc
aaa
push
push
jno
xchg
push
iret
fmul
mov
push
cmc
fs
pop
xchg
cmp
hlt
rcrl
cmpl
repz
insb
fcoms
cltd
or
scas
ficompl
pop
fstpl
clc
xchg
and
jg
push
pop
lods
les
lods
jnp
mov
mov
adc
xor
jb
sti
jg
inc
into
scas
sahf
push
mov
mov
mov
jp
pusha
aaa
addr16
add
add
add
sti
pop
dec
push
xor
push
xchg
pop
cld
mov
push
sub
add
mov
mov
cld
mov
add
fcmovbe
xchg
xchg
stos
cmc
dec
les
cmp
loop
mov
ds
in
hlt
jecxz
or
lea
mov
js
mov
sub
sub
arpl
add
aam
push
dec
or
dec
cmpps
sub
add
insl
lods
lret
stc
aaa
mov
or
ljmp
mov
mov
xchg
fdivrl
decb
jecxz
and
jge
loope
in
test
lret
inc
push
enter
notb
or
pop
xchg
mov
inc
iret
cmp
shl
lea
sti
ljmp
int3
jle
xorb
sub
mov
shl
xlat
sbb
jno
mov
add
stc
enter
in
sbb
push
inc
in
rol
addr16
add
add
add
sbb
into
daa
mulb
rcr
test
gs
ds
aad
mov
movsl
aad
dec
fsubs
mov
sbb
inc
ljmp
pop
movsl
sub
lahf
inc
inc
scas
shrl
out
add
push
les
xor
push
pop
das
mov
dec
mov
dec
dec
push
fimull
jb
mov
ds
das
lret
in
or
mov
mov
jmp
mov
push
push
in
sub
adcl
mov
out
out
leave
out
ljmp
aam
jl
aaa
jl
cmp
push
movsb
out
mov
mov
fsts
fbld
sub
stos
out
pop
xchg
call
push
es
lahf
mov
adc
fistl
jg
out
xor
push
data16
dec
xor
ss
mov
sbbb
hlt
jno
or
xor
and
add
add
imul
cmc
call
inc
push
popa
cmp
lret
add
add
add
mov
imul
arpl
xchg
pop
in
fwait
js
or
fimuls
push
sub
cmp
and
dec
ret
pop
fwait
cmp
mov
daa
xor
xchg
jmp
sbb
insb
mov
outsl
mov
jg
decl
mov
xor
xorl
into
lock
xchg
faddl
add
cmp
push
fisubl
in
mov
cs
xor
adc
cmp
cmpsl
cwtl
nop
dec
mov
jno
stos
das
adc
stc
cli
xorb
lahf
ret
jl
mov
mov
lret
dec
mov
cmp
mov
mov
stos
and
or
push
test
pushf
pushf
mov
xor
mov
adc
xor
out
movsl
cmp
push
mov
loopne
push
in
or
cwtl
lcall
test
add
shrb
add
add
ja
iret
sub
loopne
jg
iret
add
add
add
rclb
cltd
xchg
scas
jae
push
cs
add
insb
enter
push
lret
mov
mov
xchg
xor
cmpsl
sbb
xor
popf
ss
repz
out
cmc
xchg
pop
mov
les
bound
push
mov
dec
in
ficoml
sbb
fcoms
mov
movsb
ror
and
xor
shll
mov
nopl
pop
or
fstl
sar
add
insl
mov
xchg
mov
cmp
and
stos
dec
xchg
mov
shlb
push
or
add
mul
jnp
clc
jge
adc
outsl
jae
mov
outsb
sbb
scas
xor
insl
fdivs
pop
push
adc
dec
test
inc
jg
cmpsl
sub
imul
pop
dec
cld
push
negl
pusha
inc
pop
mov
sbb
adc
loop
lret
bound
sub
sbb
repnz
mov
out
out
out
into
gs
cld
test
icebp
outsb
rolb
add
add
add
xchg
std
dec
ss
mov
sbb
shlb
ret
add
fnstcw
dec
xchg
mov
pop
fwait
push
sub
out
loopne
nop
stos
ret
in
jge
adc
nop
mov
fs
cmp
fdivl
cwtl
xor
in
mov
jae
fwait
rcrb
jge
mov
leave
das
mov
pushw
out
pop
loopne
jnp
fimull
movsb
mov
jl
mov
ss
pop
loope
fidivs
xchg
sub
mov
dec
pop
push
add
sub
push
cmpsb
aam
xchg
jnp
and
pop
fwait
aaa
pop
and
repz
lds
pusha
imul
std
lret
addr16
cmpl
movsb
pop
sub
sub
jp
aam
mov
mov
mov
and
mov
sbb
add
add
xchg
and
je
out
mov
stc
or
sub
add
add
add
push
mov
xlat
jae
xor
fwait
mov
test
shrb
mov
mov
jne
sti
and
sbb
mov
popa
dec
pushf
popa
add
jae
lret
aad
andnps
cmp
in
int
sub
jecxz
jp
pop
mov
inc
push
push
fwait
iret
jecxz
jmp
dec
adc
inc
pop
mov
popf
push
mov
outsb
mov
ja
cmp
sti
xor
push
adc
ss
adc
out
jmp
mov
xchg
mov
add
xchg
js
fcoml
out
std
mov
jns
adc
popf
jae
mov
xchg
mov
mov
idivl
int3
fiadds
sahf
je
xchg
add
mov
mov
and
lahf
push
cmp
mov
and
jecxz
out
es
add
sub
add
sub
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
sbb
add
add
add
gs
aaa
mov
dec
pushf
xchg
and
jbe
jno
movsl
mov
loopne
pop
lret
addr16
arpl
push
bound
into
cmpsb
pop
mov
pop
or
jbe
cmp
xchg
add
mov
cmp
pop
sub
nop
push
mov
xor
or
test
aas
xor
cmp
icebp
psubb
or
pop
xchg
add
adc
ljmp
movsb
ret
fisubrl
inc
dec
insb
mov
and
push
sub
ret
mov
in
fbld
fmull
push
xchg
insl
xchg
sub
inc
mov
cwtl
das
ds
mov
lods
out
add
pop
xchg
jl
adc
mov
mov
in
cwtl
les
xchg
inc
aas
push
and
into
pop
lret
mov
mov
dec
sub
jb
in
sti
pop
xchg
sahf
call
out
lahf
ret
or
roll
add
add
add
cld
adc
mov
mov
adc
sub
xlat
jle
inc
shll
pop
fsubrs
xor
jb
pop
add
mov
xchg
jge
jp
lea
mov
aaa
sbb
jl
pop
and
pop
pop
js
mov
shlb
cli
movsl
add
mov
bound
iret
test
call
adc
or
aaa
cli
repnz
roll
adc
pop
ja
imul
gs
pusha
jnp
sarb
loope
test
mov
mov
out
push
scas
aam
movsb
xor
lock
mov
adc
data16
ja
insl
push
sub
or
and
jle
fstpt
dec
dec
mov
jbe
mov
jle
push
cmc
add
cmp
scas
pushf
xor
jecxz
xchg
jns
dec
or
inc
std
cmc
mov
mov
mov
pop
xchg
or
sbb
and
add
add
add
adc
notb
loop
mov
adc
push
repz
mov
cmp
sub
loopne
xor
pop
loope
cli
add
ds
movsb
rcrb
aaa
sub
stc
xor
cmp
lcall
push
or
inc
fcmovnb
daa
stc
xchg
inc
movl
mov
popa
int3
mov
sarl
gs
daa
sbb
lret
pop
push
push
dec
xchg
mov
rolb
std
inc
cld
in
add
ret
sub
mov
xchg
inc
shlb
xor
adc
mov
daa
xchg
cmpsb
inc
rorl
or
push
loopne
in
insl
or
daa
loope
arpl
sub
cmp
scas
jle
dec
clc
fistpl
mov
flds
sub
cmp
mov
xor
aad
cmp
jecxz
fcmovnu
in
inc
cmp
pop
divw
xor
add
xor
add
sbb
sub
dec
lahf
xor
les
add
add
add
fsubs
pop
and
pop
daa
ljmp
sub
jg
pusha
lock
sub
fmul
dec
and
mov
pop
push
cmc
jmp
jl
ja
outsl
sbb
fcmovnbe
jle
cwtl
sub
push
test
jecxz
or
mov
jnp
scas
push
and
lods
or
in
push
xor
divb
ficoms
cli
add
or
and
mov
idivl
lods
inc
fmul
inc
jge
or
xor
jo
pusha
mov
cmpsl
stos
mov
adc
and
rolb
and
cmp
mov
inc
test
clc
sbb
adc
jb
or
push
test
cli
xchg
shlb
int
push
cli
fsubr
ja
jno
jle
fcompl
mov
mov
out
or
push
mov
cmpb
movb
out
scas
imul
mov
mov
pushf
adc
ds
jae
mov
addr16
add
add
add
andl
pop
jg
data16
mov
xchg
pop
scas
jno
pusha
out
sub
inc
sub
jbe
jno
xchg
in
aad
test
int
jbe
in
out
es
adc
mov
add
push
sbb
and
jb
jnp
ret
repnz
jnp
mov
fstpl
mov
jns
pop
out
je
pop
fdivs
cmp
lcall
xor
cmp
cmp
movsb
cmp
cmp
mov
mov
ret
push
xchg
dec
push
xor
enter
ja
add
insl
sub
jno
nop
xchg
outsl
push
cwtl
mov
ret
scas
sahf
scas
out
mov
int3
adc
add
addb
xor
push
add
pop
jbe
adc
or
xchg
pop
ret
stc
push
sbb
mov
mov
enter
lahf
gs
push
dec
xchg
mov
add
lcall
jnp
jo
pusha
xlat
add
add
add
mov
add
lods
add
lea
in
gs
repnz
jle
add
xchg
int
push
or
shrl
mov
mov
repz
mov
ret
mov
fdivl
mov
dec
inc
add
push
jno
sub
lahf
stos
in
lods
cwtl
pop
sbb
inc
stc
pop
dec
clc
cld
mov
or
lds
popf
inc
mov
mov
cltd
mov
dec
pop
xchg
shll
icebp
stos
xor
fs
sbb
outsl
mov
mov
cwtl
dec
add
jns
popa
cmp
movsb
add
loopne
shll
sub
xchg
and
mov
mov
pop
je
pop
mov
mov
sub
mov
jo
idiv
pop
dec
xor
xchg
jo
rcl
jo
and
scas
cltd
cmp
sbb
jp
add
jb
fcmovne
xlat
je
xor
cli
pop
sbb
imul
add
add
xchg
ja
push
jg
leave
or
mov
mov
fadds
add
add
add
into
add
rcrl
push
mov
xchg
mov
aas
inc
xchg
fsubp
mov
gs
out
pop
ds
push
jb
fbstp
dec
mov
push
in
pushf
lods
sub
fldt
cmp
je
les
popf
pop
arpl
adc
adc
rolb
jp
sub
ljmp
mov
sub
jns
jecxz
fildll
fdivrs
and
push
inc
pop
push
jb
mov
shrb
sbb
sub
je
rcrl
push
and
and
into
mov
jo
sbb
push
insl
and
cmp
mov
rcrl
inc
xchg
into
iret
adc
sbb
sub
jns
stos
lcall
movsl
sbb
sub
movsb
pop
cli
into
and
js
jge
data16
cmp
xor
mov
in
add
add
int
out
out
imul
nop
xchg
movsb
cmp
inc
cmp
add
add
daa
repz
ljmp
repnz
push
ret
aam
arpl
leave
dec
sub
inc
scas
addr16
ret
iret
sti
cmp
jbe
rolb
and
cld
jnp
xor
jmp
push
adc
lret
add
xchg
aad
pop
jmp
jg
and
dec
push
les
data16
push
ret
jmp
fisubl
iret
adc
mov
cltd
add
sahf
fwait
icebp
shll
mov
out
orl
imul
xchg
cmp
xchg
xchg
repz
add
dec
lret
dec
add
or
xchg
mov
mov
lcall
adc
in
and
movsb
dec
mov
lret
and
mov
xor
loopne
sbb
xchg
loope
mov
or
jo
add
fs
xor
jnp
fwait
jne
push
lock
sub
push
stos
mov
cmpsl
es
xor
aam
add
add
add
psubusw
push
in
sub
push
add
add
outsb
and
stos
repnz
xchg
mov
and
cmp
aam
cmp
pop
and
scas
mov
imul
mov
mov
pushf
hlt
jns
mov
sub
insb
jmp
test
bound
popf
pop
or
aam
xlat
mov
mov
jecxz
loope
stos
rclb
and
pushf
inc
dec
inc
jmp
out
sbb
lret
or
dec
ds
pusha
and
cmp
pop
add
cmp
push
mov
in
mov
outsb
in
adc
xchg
fdiv
dec
arpl
in
sub
push
dec
push
mov
sub
jp
pop
push
in
add
pop
adc
pop
xchg
shll
push
iret
push
pop
ljmp
aam
inc
dec
dec
pop
xor
xor
mov
push
sub
fmul
and
xchg
aam
dec
int
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
fwait
mulb
add
add
add
filds
or
mov
out
out
std
mov
mov
movsb
outsb
mov
lods
aas
xchg
and
imul
pop
ror
mov
dec
out
push
sub
test
mov
adc
adc
daa
loope
xchg
jne
push
sub
xor
dec
sub
add
xchg
mov
mov
lds
xor
inc
cmpsl
sbbb
fistl
xchg
idivl
imul
pop
aas
mov
stc
bound
stc
jge
rsqrtps
push
dec
mov
negb
xor
int
dec
shll
je
inc
test
mov
push
lea
push
scas
lret
rcrl
loop
inc
xchg
xchg
in
into
cwtl
sbbb
insb
push
pop
dec
div
jp
imul
pop
stc
push
loope
test
je
cmp
cmp
fidivrl
imul
cmpl
out
dec
mov
inc
pop
dec
jle
jg
std
fstpt
add
add
add
mov
dec
test
fadd
fdivs
mov
sbb
push
data16
out
and
xchg
cld
pop
faddp
and
push
mov
shl
fwait
pop
jl
pop
fwait
or
idiv
les
movsb
sub
in
test
nop
icebp
xor
in
xorb
push
push
in
xchg
mov
aam
or
or
je
mov
aas
push
cmp
jmp
and
test
loopne
addl
sub
int3
int3
movsl
xor
and
xchg
xchg
mov
mov
lcallw
shlb
jmp
mov
push
sub
mov
jne
cli
ds
rcr
cmp
pop
scas
roll
stos
loop
inc
sbb
push
lcall
or
int
loop
or
popf
imul
add
mov
sti
idiv
lods
pop
sbb
pop
jg
fldl
add
add
add
adc
sub
getsec
xor
sub
dec
outsl
jmp
adc
decl
loop
sarb
outsb
push
fstpt
fildll
pop
dec
cs
out
shll
xchg
mov
into
hlt
xlat
jne
fdivl
add
dec
jecxz
in
and
dec
pop
xchg
repz
fadd
adc
stos
daa
out
adc
xchg
je
mov
fimuls
xchg
out
jecxz
jb
cmc
in
lods
sbb
sub
inc
data16
pop
nop
push
or
cmp
sbb
test
insb
adc
jg
mov
inc
mov
mov
pop
daa
shll
adcl
shl
pop
dec
fcoml
sti
or
push
mov
shr
jl
adc
push
mov
ucomiss
pop
adc
and
and
adc
leave
jmp
scas
inc
call
fiadds
add
add
add
out
repnz
aaa
xchg
xchg
add
and
loopne
push
xchg
sub
xor
aam
cmp
pop
or
jecxz
scas
ja
fistl
adc
in
pop
pop
xor
pop
aas
imul
add
push
cmp
gs
rcll
jg
flds
jb
jg
outsb
inc
mov
into
mov
stc
sahf
das
lock
lea
insl
arpl
and
sub
xchg
insb
test
lret
loopne
mov
lods
mov
pop
gs
cmc
jne
xchg
test
and
push
sahf
insb
or
icebp
or
mov
adc
or
jae
je
daa
xchg
sahf
fidivrs
popf
mov
nop
pop
push
mov
sahf
hlt
push
mov
sub
jle
mov
ljmp
ret
mull
add
add
push
out
faddl
popa
mov
filds
add
add
add
cmc
xchg
mov
adc
sub
dec
push
xor
mov
mov
mov
or
scas
in
cld
inc
fs
call
sbb
or
les
aaa
js
mov
dec
mov
es
sahf
push
lcall
pop
fbld
cmp
push
dec
xchg
loopne
jmp
dec
and
aad
test
pop
mov
push
xor
and
pop
jno
stos
pop
push
sbb
out
icebp
repz
lock
jb
mov
push
jmp
jg
leave
imul
xchg
rep
stc
mov
fstp
int
xor
ljmp
jo
das
inc
or
pop
mov
inc
in
jp
fsubrs
into
xor
inc
add
lret
fstpl
add
dec
mov
mov
leave
test
jb
outsl
test
sbb
add
add
mov
lcall
fisttps
or
loopnew
add
add
add
and
cmpsb
jecxz
pusha
mov
cmpsb
xchg
xchg
sbb
cld
dec
es
repz
call
jb
dec
adc
data16
dec
mov
aam
ret
jns
adc
cmp
ds
xlat
sub
add
add
adc
push
mov
bound
push
or
out
fists
or
xchg
mov
aaa
lods
pop
or
ljmp
mov
imul
and
rcrl
lds
sbbb
aad
push
ror
mov
ret
outsb
out
ret
dec
test
xchg
add
cmpb
mov
adcb
mov
test
insl
add
mov
ror
push
dec
mov
ficompl
pop
movsl
imul
jae
mov
inc
push
out
dec
ret
xlat
nop
cltd
data16
shrl
stc
jns
and
adc
sbb
fisubl
push
sbb
mov
add
sbb
jns
xchg
xchg
mov
out
mov
loope
add
add
add
repz
std
out
xchg
cmp
roll
and
cmp
iret
sbbl
and
inc
mov
in
cmpsb
outsl
mov
mov
add
push
pusha
cmpl
mov
hlt
int3
adc
xor
cli
insb
cmp
inc
mov
outsb
shrl
inc
loopne
inc
cmp
adc
xchg
add
popf
pop
adc
add
sbb
sysexit
loop
js
cmp
or
sub
or
xchg
adc
adc
test
pop
pop
daa
xchg
into
hlt
sbb
xorb
in
adc
add
orl
in
outsb
ja
fs
sbb
add
inc
inc
mov
push
push
sbb
mov
nop
add
mov
mov
adc
pop
mov
jae
fadd
fsubp
jnp
or
cld
roll
popf
push
loop
add
add
add
lock
movb
push
lret
inc
rcrb
ja
add
loop
pop
test
scas
pop
push
sti
sbbb
dec
imul
xlat
xchg
cld
dec
dec
bound
js
psrld
mov
dec
mov
inc
xlat
mov
out
popf
jns
dec
mov
out
frstor
mov
dec
cmp
iret
pop
add
jb
cmpsb
mov
sahf
pop
fmull
push
add
adcl
data16
popa
call
bound
es
xor
pop
dec
inc
pop
stos
mov
add
sbb
mov
ja
fcmovb
or
mov
rcrl
jl
movsb
mov
pop
mov
mov
cs
mov
cmpsb
sti
mov
ljmp
addr16
aas
xchg
cmpsb
or
inc
inc
movsb
sub
add
add
sub
cld
cli
jle
dec
nop
xor
imul
add
add
xchg
jg
mov
xchg
jle
faddl
or
outsb
mov
jne
test
sbb
mov
stos
sbb
movsb
stc
fwait
mov
mov
or
pop
out
shlb
xchg
sbb
jnp
mov
notl
inc
es
push
outsl
xchg
push
repnz
jge
xor
pop
cmpsb
js
nop
or
popf
sti
sub
rolb
cwtl
repz
dec
push
sub
pop
add
add
jne
pop
push
mov
aam
mov
gs
and
daa
fucom
push
shl
mov
push
dec
and
in
dec
das
xor
sarl
aad
stos
jae
lret
mov
sbb
repz
inc
loope
flds
rolb
out
ja
mov
mov
outsl
movsb
mov
inc
stc
je
sub
insl
jmp
add
add
ja
sti
aaa
out
ja
and
add
add
add
pop
xchg
adc
add
aad
imul
sbb
dec
jnp
lods
scas
dec
out
pop
dec
ss
and
repnz
out
push
mov
adc
push
int
pop
enter
sbb
ffreep
jbe
push
jno
fwait
xorl
and
pop
or
or
and
mov
sub
pop
nop
pop
xchg
sub
imul
popf
xchg
mov
xor
sub
or
and
add
mov
into
jns
jo
ficomps
sub
popa
test
xchg
cwtl
sar
daa
imul
inc
pop
xor
repnz
push
test
xorb
cmp
inc
mov
pop
stos
sar
cli
aad
sahf
pushl
iret
jp
push
xchg
mov
dec
rcl
out
cmp
pop
xor
adc
xchg
iret
out
ror
cltd
outsl
mov
aaa
pushf
sub
add
add
add
mov
cld
push
or
ljmp
fmuls
stos
call
jnp
dec
je
je
pop
push
jae
push
xor
addb
shlb
dec
inc
shl
jmp
mov
sti
in
sbb
push
pushf
pusha
das
cwtl
sub
push
enter
mov
cmpsb
jp
loopne
sub
xchg
sbb
inc
rcr
fdivrl
addr16
or
aas
add
dec
pop
pop
cld
lds
leave
inc
xlat
mov
aam
jg
inc
cltd
inc
or
sub
xor
push
pushl
lods
test
cwtl
pop
xchg
adc
lods
cmpsl
xchg
outsl
and
mov
sub
jge
jo
mov
pop
test
mov
int
push
add
test
xchg
subb
lcall
int
push
sub
jno
rol
mov
jae
lods
sub
in
push
mov
cmpb
add
add
ja
lcall
mov
adc
add
add
add
sahf
out
test
mov
loopne
lock
in
stos
and
in
sub
or
mov
andb
mov
xor
dec
dec
mov
add
push
test
lea
in
faddl
addr16
mov
mov
push
sub
push
lods
mov
incb
sub
cs
std
cmc
and
jge
xchg
xchg
fbld
loopne
jb
rorb
aas
stos
data16
leave
mov
cmp
aaa
pop
stos
adc
cmpsb
insb
mov
stc
add
stos
cmp
mov
ret
sahf
shll
jnp
stc
lock
xchg
xchg
sbbb
and
shlb
nop
daa
adc
xchg
mov
sub
mov
mov
mov
int3
cmpsb
sbb
out
jno
insl
pusha
cmpsl
andl
add
add
add
lock
jg
in
and
aaa
addr16
add
add
add
inc
inc
movsb
and
jb
imul
mov
movsl
jle
cmp
and
xchg
movsl
xor
adc
jnp
das
pop
clc
mov
cmp
dec
repnz
inc
push
xchg
jg
les
lds
inc
adc
mov
sub
mov
fnstsw
jp
jb
xlat
dec
jl
xor
ja
popa
cmp
and
int
out
add
add
push
jb
and
xor
into
mov
stos
xchg
js
adc
sub
jmp
push
andl
mov
icebp
pushf
adc
imulb
in
jg
cmc
ds
mov
jnp
push
dec
mov
sbb
cmp
lock
movsl
mov
mov
call
xchg
add
test
xor
dec
std
popa
mov
clc
bound
xorl
cld
pop
jo
push
adc
or
rcl
sbb
mov
stc
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
scas
xor
addr16
add
mov
repz
jbe
clc
out
in
mov
out
aaa
push
dec
sbb
xchg
movsb
popa
mov
test
dec
jmp
fmul
adcl
mov
call
xorb
call
push
jns
gs
cwtl
mov
or
or
jg
mov
push
out
xor
push
pop
adc
dec
adc
fisttpl
gs
imul
sub
push
aad
ret
mov
aas
sbb
mov
cmp
shl
jae
adcl
je
cmpsl
mov
test
sbb
push
sub
xchg
mov
test
ljmp
fisubrs
inc
jno
dec
mov
test
push
jae
pop
xchg
stc
hlt
or
lock
ja
and
popa
ljmp
add
js
loope
je
les
add
add
mov
dec
js
stc
mov
dec
int
repnz
mov
addr16
add
sbb
hlt
mov
mov
mov
icebp
mov
and
lods
inc
dec
loop
mov
lea
mov
outsl
sbb
mov
add
icebp
dec
loope
sbb
inc
out
orb
clc
and
pop
inc
shlb
jo
sub
mov
rolb
jmp
hlt
dec
add
xchg
sti
rcrl
in
mov
leave
inc
test
mov
lcall
in
sbb
xlat
int3
leave
adc
add
data16
aam
inc
mov
data16
test
adc
pop
icebp
xchg
scas
mov
sbb
into
xor
mov
pusha
push
cli
jb
push
movsl
rorl
dec
loop
in
xor
arpl
fstpl
ljmp
in
hlt
ret
int
clc
lods
repz
adc
mov
stos
das
pop
fsts
scas
mov
bound
add
mov
pop
insb
fildll
fwait
jns
jns
dec
jo
addr16
pop
pop
ljmp
add
ret
vcvtsd2si
and
sbb
fwait
xchg
lcall
push
cltd
or
flds
std
sub
adcb
jle
ss
inc
rorb
loop
mov
inc
sbb
xor
ret
mov
dec
mov
pop
ds
inc
mov
push
je
js
sub
mov
rcrl
cltd
adc
movsb
test
aaa
lahf
cmc
addr16
sbb
popa
jp
mov
fwait
and
and
or
dec
movl
les
xor
mov
pop
mov
add
xchg
xor
lea
mov
inc
mov
fcompl
icebp
pop
mov
imul
hlt
stos
sbb
add
pop
popf
inc
and
fwait
mov
push
add
mov
pxor
jnp
adc
jne
push
jg
out
jmp
add
add
add
add
dec
out
mov
repz
adc
or
push
test
mov
hlt
jnp
and
dec
jle
inc
cltd
sub
out
addb
les
shrb
test
std
test
sub
add
fwait
xor
ljmp
pop
in
test
sbb
mov
xchg
sbb
in
lds
push
pop
and
aas
sub
stc
adc
xchg
fcmovnu
idiv
push
cs
jbe
sbb
mov
cmp
inc
popa
jno
and
add
fldl
lods
cwtl
das
jb
rcrb
mov
arpl
push
or
rolb
pop
xor
sbb
push
or
movsb
push
xor
enter
mov
add
in
out
and
or
adcb
roll
mov
push
mov
jle
mov
add
add
subb
fistl
das
xor
mov
addr16
add
add
add
js
dec
fcompl
out
ret
xor
fstpl
mov
mov
jmp
cmp
mov
inc
sub
in
sti
movsl
sub
outsl
inc
jl
xor
shl
in
dec
dec
in
or
sti
insl
mov
xchg
sub
fcmovu
xor
add
ret
shlb
popa
jo
cmp
sub
cmp
repnz
add
mov
sbb
in
or
movb
push
cmp
pop
fcompl
and
mov
mov
or
mov
fstpl
xor
xchg
ret
add
cmp
movsl
out
xor
roll
inc
xor
pop
pop
lahf
outsb
inc
sub
cmp
daa
movsl
insl
xchg
movsl
jno
push
pusha
pushf
add
mov
ljmp
push
pop
add
fcompl
fstl
mov
adc
pop
add
sbb
notl
cmc
insb
mov
popf
add
jb
scas
decb
fisttps
jne
adc
in
add
add
add
fcoms
pop
pop
jecxz
sub
inc
leave
sub
scas
mov
push
pop
xor
pop
mov
cmp
cli
cmp
leave
inc
movups
fsubrs
jnp
lahf
pushf
fnclex
test
mov
inc
decl
mov
adc
movsl
jbe
adc
bound
or
sub
push
add
cmp
int
inc
sub
sub
push
jmp
sarl
iret
sub
jp
adc
push
std
jp
roll
in
dec
push
std
out
mov
les
and
aas
test
cli
sahf
sbb
mov
test
mov
or
adc
inc
push
shlb
andb
fsubrl
cltd
inc
cmp
fcomps
jle
adc
mov
adc
repnz
cmp
cmp
incl
ficoml
pop
mov
aaa
popf
pop
push
scas
hlt
sbb
adc
mov
movsl
mov
xlat
mov
xchg
jb
movsb
loop
out
add
add
add
dec
and
adc
leave
mov
lds
gs
push
cmp
std
adc
fldt
fdivl
adc
ret
lds
push
push
popf
pop
lea
pop
jp
or
pop
stos
push
lea
out
lcall
mov
push
push
dec
stos
les
mov
mov
pushf
push
or
lcall
out
outsl
add
stc
insl
mov
sbb
pop
inc
cmp
push
push
cld
and
cmp
adc
inc
xchg
sub
popl
xor
int
pop
push
mov
adc
fsubr
push
push
xchg
loopne
xor
fs
mov
fstps
dec
imul
aaa
sub
add
int
in
xchg
inc
lahf
or
dec
push
int3
lcall
push
pop
mov
cs
sbb
aas
aaa
lahf
adc
mov
daa
aad
cmc
je
lods
cmp
lods
aas
mov
push
push
add
add
add
dec
sub
xchg
outsb
fistpll
gs
movsl
push
dec
add
stos
nop
lea
pop
xchg
cmp
ffree
or
push
loop
movsb
add
in
aaa
xchg
sbb
jnp
ror
repz
xor
jmp
jge
lret
icebp
pop
dec
inc
push
cmp
lret
mov
mov
fs
sbb
dec
lods
cltd
push
repz
sub
sub
out
xchg
lods
push
add
aas
xor
xor
sub
mov
scas
repz
sti
fsubr
or
loopne
inc
stos
mov
inc
or
sub
or
int3
sub
aam
pop
icebp
imul
mov
jb
or
mov
movsl
rol
lea
ljmp
push
lods
and
xlat
stos
ja
neg
and
add
ss
jmp
pop
xchg
imul
sbb
popa
lock
and
std
adc
jns
xor
push
cld
dec
cmp
loop
fadd
sti
mov
mull
ljmp
add
sub
cmpps
popf
iret
lret
loop
or
cmp
icebp
mov
push
sub
sub
mov
lcall
cmp
xchg
mov
push
pop
iret
push
arpl
nop
xor
mov
fs
xchg
addr16
test
mov
adc
rorl
and
loop
adc
pop
mov
cs
cwtl
mov
mov
in
cmp
cmpsl
and
mov
jmp
data16
adc
pusha
mov
cwtl
jl
lret
jle
fsts
or
aad
clc
sbb
loope
push
movsl
mov
lret
adc
mov
ljmp
and
and
inc
xor
push
sbb
jecxz
fsubrs
fnstcw
jl
cmc
shr
cwtl
add
test
sbb
movsl
jge
and
cmp
push
cmp
adc
neg
jge
xchg
jns
dec
add
pop
addr16
add
add
add
ret
sub
pop
mov
dec
push
xor
add
es
sub
mov
icebp
in
mov
cltd
rcr
xorb
imul
cmp
and
int
mov
cli
lds
push
lea
add
pop
fildll
dec
push
or
lods
jns
lcall
xor
mov
add
mov
adc
imul
inc
pop
lea
xchg
sbb
scas
fidivrs
scas
cld
or
clc
testb
scas
data16
inc
mov
lods
or
sub
sub
cltd
in
lods
cmpsl
inc
test
mov
dec
fdivrs
sub
sub
lahf
mov
pop
mov
sbb
sahf
shrd
fldenv
add
out
adc
cltd
fsub
xlat
mov
sbb
fs
add
pop
cmp
outsl
jg
jg
sub
ficoml
sub
repnz
add
add
shlb
mov
enter
test
push
mov
imulb
dec
fwait
or
cmpsb
cmpsb
es
or
push
xchg
mov
cltd
stos
push
bound
mov
ret
push
shll
and
loopne
cmp
icebp
push
test
cmpsb
sbb
and
xor
mov
jbe
pop
insb
shrb
push
nop
in
and
loop
inc
mov
pop
pop
mov
int3
idivb
pop
or
and
jno
scas
pop
push
cmpsl
push
lahf
sbb
xchg
jl
fs
add
fsubl
adc
lock
nop
jno
faddl
insl
push
cmp
push
dec
outsb
jnp
sbb
xchg
xchg
jnp
push
aas
icebp
ret
imul
repz
adc
addr16
mov
push
loopne
aad
lcall
jne
push
into
pushf
aaa
pop
cmp
cmpsb
cmc
pusha
mov
ret
ja
and
aaa
divl
andb
add
add
jo
outsl
xor
sahf
push
mov
push
lahf
jo
roll
mov
out
sbb
mov
das
push
jb
push
jg
in
mov
clc
cmp
pop
xchg
pop
xchg
cmc
push
mov
push
pop
pop
cwtl
xor
mov
dec
hlt
mov
inc
mov
push
ret
sbb
cmp
push
mov
jmp
sub
shrl
sbb
cmp
jne
cmp
les
loopne
push
jne
bound
es
insb
adc
push
mov
imul
sbb
mov
cmp
fs
cmp
pop
sbb
cmp
lret
push
fbstp
inc
xchg
rcl
dec
sub
test
mov
sub
or
push
aaa
pop
cmc
jmp
pushl
mov
fsub
fnstcw
jno
add
jp
fmuls
popf
jmp
andb
mov
out
in
xchg
jecxz
jmp
mov
lret
sub
addr16
add
add
add
xchg
push
mov
pop
cmpsl
stos
jp
pop
mov
mov
adc
notl
outsb
sarb
mov
dec
daa
jl
pusha
sub
insb
sbb
cmp
repz
jecxz
or
insb
sahf
push
push
scas
and
and
into
dec
push
xor
push
pop
loope
mov
scas
push
mov
inc
pop
push
cmpsl
pop
push
and
pop
pop
and
movsl
sub
dec
pop
imul
add
push
xchg
mov
loopne
jp
in
out
add
and
mov
mov
dec
pop
imul
sbb
mov
cmpb
out
mov
dec
and
std
imul
icebp
stos
popa
scas
out
repnz
imul
movsb
xor
insb
sub
add
mov
fwait
cmc
call
sub
sti
jge
jns
faddl
jle
jne
pusha
popf
pop
adcl
add
add
add
xor
stc
divb
ljmp
sbb
xchg
shld
mov
push
lds
push
ret
sub
test
mul
mov
mull
insb
push
push
je
lds
stos
mov
out
sbb
shrb
mov
mov
mov
jecxz
mov
jae,pt
mov
std
movsb
pop
loopne
loope
pop
cmp
fsubr
int3
jmp
call
pop
pushf
push
xchg
adc
xor
inc
loope
inc
and
sub
and
mov
sti
test
lret
dec
js
aas
add
jnp
inc
movsl
and
add
sahf
scas
imulb
pop
dec
xchg
inc
fdiv
bound
ljmp
xchg
xchg
mov
aad
ret
and
push
mov
in
inc
inc
jo
jne
iret
in
or
and
sti
mov
sub
scas
fdivr
fnstcw
jecxz
test
testb
add
add
stc
ljmp
rcrl
pop
push
xchg
pop
dec
xor
movsl
scas
xchg
xchg
xchg
popa
rcrl
fdivrl
and
arpl
clc
fs
or
rorb
fnstcw
test
scas
cs
mov
cltd
mov
decb
test
xchg
lahf
faddl
adc
jmp
mov
and
jae
addr16
adc
cmp
je
mov
nop
xor
add
sbb
pop
fmull
push
push
or
loope
orb
adc
ret
cli
iret
adc
jo
fidivrl
xor
fsubl
jmp
mov
inc
dec
pop
push
dec
mov
adc
int
lea
daa
pop
mul
dec
ret
pop
rcrl
movsl
or
xchg
cmp
add
add
add
xor
jb
jae
leave
pop
ljmp
add
add
push
popf
push
or
fstl
test
xor
add
filds
and
push
sahf
stos
and
pop
ljmp
cmp
iret
push
scas
jle
aaa
pop
mov
mov
sub
adc
jae
ficoms
mov
fwait
ret
cld
pop
mov
arpl
dec
dec
sbb
dec
and
push
stos
jp
push
push
push
inc
fsubs
cs
rcrb
dec
clc
adc
cmp
xchg
mov
or
fwait
sbb
push
outsl
pop
sub
cmp
js
outsl
pop
out
cmp
cmp
xchg
mov
cmp
jle
cwtl
lcall
mov
out
repz
shlb
xor
pop
add
inc
xor
enter
and
or
test
rorb
dec
mov
aas
ljmp
loop
shrl
sbb
jle
inc
push
in
jns
fbstp
jp
aaa
pusha
adc
add
add
ds
in
idivl
js
mov
mov
clc
add
add
add
in
sbb
mov
lret
imul
or
inc
mov
cmp
bound
pusha
and
pop
pop
add
loope
inc
cmc
movsb
fisubrl
test
gs
lcall
pop
push
fdivl
je
shl
inc
adc
mov
jne
testl
popa
xchg
mov
fidivrs
add
or
or
mov
nop
insb
xor
fsubp
xchg
fcomps
adcb
push
dec
testl
push
mov
daa
imull
adc
outsl
mov
sbb
jae
movsl
mull
inc
inc
jbe
imul
bnd
loopne
push
xchg
cmpsb
sub
xchg
dec
rorl
jg
push
leave
mov
test
inc
sbb
cmp
jle
add
push
add
jae
fldenv
inc
mov
cmpsb
mov
lds
or
enter
dec
pop
es
inc
cli
aas
into
lret
inc
mov
add
add
add
push
and
pop
stos
jno
jecxz
mov
inc
pop
mov
movsb
lods
xor
into
jmp
ja
sarl
rolb
xor
fs
nop
nop
dec
lahf
cmp
cld
jne
stc
xchg
out
jns
dec
add
outsb
push
xchg
imul
mov
fisttps
and
lret
dec
and
mov
fnstenv
std
into
or
mul
cmpsl
inc
fcmovu
je
add
sbb
gs
out
cli
sbb
int
inc
jbe
sbb
or
sub
adc
push
pop
mov
mov
sbbb
cmp
mov
mov
icebp
push
shrb
and
jp
dec
lock
leave
repz
jno
shll
pop
mov
or
cmp
loopne
jno
loopne
popa
mov
add
add
add
lcall
dec
lods
cwtl
adc
add
add
add
dec
adc
xchg
cmpsl
cltd
test
aad
push
xor
sahf
and
lods
fnsave
ret
dec
out
xchg
dec
push
int3
in
sbb
rcr
pop
adc
pop
xchg
mov
pop
fcoms
call
aam
xchg
pop
test
pop
icebp
mov
mov
jecxz
inc
scas
jne
jge
cmpsl
sti
insb
ds
mulb
jnp
std
pop
repz
or
lahf
call
pop
cmp
mov
loope
js
jg
adc
add
ret
jmp
or
fcomps
mov
pop
js
aaa
or
push
int3
hlt
into
out
xchg
pop
add
mov
inc
pop
notb
ror
fstps
inc
and
bound
loope
lods
cld
and
ja
imul
js
movsb
rol
fists
dec
out
call
push
mov
cmp
mov
notl
das
std
and
aaa
jae
cltd
dec
mov
jno
and
addr16
add
add
add
out
mov
aam
xchg
pop
xchg
xorb
or
inc
rclb
fmull
sbb
push
mov
sub
jo
hlt
pop
mov
pop
clc
dec
aas
add
xor
mov
rorb
fcmovnb
xchg
aaa
jb
mov
enter
jl
stos
stc
fistpl
cmp
jae
dec
out
out
xchg
iret
xlat
test
or
mov
push
adc
sbb
in
jae
lret
xor
sub
jecxz
lock
test
mov
jle
aad
jl
les
xchg
fmull
mov
push
cmpsb
lods
mov
push
sti
fwait
sbb
and
sar
mov
add
cltd
in
loop
mov
pushf
xchg
mov
int3
pop
mov
inc
out
jo
sub
xlat
pop
lea
jmp
adc
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
insl
mov
inc
addr16
add
add
add
maxps
adc
bound
push
pop
notl
aaa
mov
and
and
mov
push
in
mov
push
mov
add
setns
dec
outsb
ret
xchg
mov
out
dec
sbb
sub
sarl
das
cmpsl
push
xchg
sub
mov
pop
push
xor
mov
pop
xchg
pop
icebp
sbb
and
mov
cwtl
adcb
xchg
add
in
push
push
mov
ljmp
and
mov
xchg
data16
lret
aam
loopne
mov
loopne
scas
mov
in
add
mov
pop
pop
aam
inc
xor
imul
or
xor
push
ljmp
sub
cli
mov
fcmovnbe
mov
jno
fisubl
pop
call
pop
enter
int
fs
push
jl
pop
xor
sub
fsubs
and
int3
je
xchg
sarb
jno
test
jg
push
pop
push
mov
addr16
add
add
add
sbb
shrl
push
ljmp
push
lret
sbb
ret
sbb
sbb
add
rcr
pusha
or
mov
mov
mov
in
cmp
mov
and
lret
shlb
cmp
fmul
movsl
ljmp
jg
les
leave
icebp
cmp
gs
mov
mov
lods
dec
sub
xchg
xchg
pop
cs
ret
je
mov
jle
sub
push
fstp
mov
push
loope,pn
fsubl
lds
cmpsl
shll
jmp
out
fldenv
cltd
mov
repz
test
push
fdivrl
jle
jo
sbb
es
mov
ret
cmp
jno
daa
cmpsb
in
sbb
xor
mov
sarb
sbb
push
jo
jl
lds
mov
stos
lret
fisttpl
ret
sub
fisubs
hlt
mov
sub
sub
arpl
outsl
and
push
in
testb
add
adc
movsb
push
in
cmc
jne
sbb
js
stos
pop
inc
incb
add
add
add
in
cli
push
mov
sub
push
sbb
pop
test
xchg
and
sbb
inc
adc
in
data16
mov
clc
sbb
mov
jge
xlat
loop
pop
ljmp
cli
mov
stos
xchg
roll
mov
xchg
jae
push
int3
pop
adc
sbb
mov
xor
inc
jp
adc
mov
and
and
jnp
adc
rep
cmp
mov
loope
or
ja
roll
out
sbb
and
jns
inc
repnz
inc
out
or
and
or
insb
mov
dec
aam
cld
mov
fwait
add
push
pushw
xchg
aad
mov
and
cs
xchg
sub
ljmp
jge
and
sub
data16
sbb
and
bound
ja
mov
rcll
cmp
adc
sub
or
das
sahf
sbb
shlb
aas
out
int3
mov
imul
add
add
add
add
mov
and
push
bswap
test
dec
ret
fstps
sbb
push
test
stos
fisubrl
dec
pop
mov
sbb
xchg
mov
in
lret
jecxz
stos
sub
jno
orb
aas
adc
es
sbb
imul
cmp
xchg
sbb
add
fisubl
cli
dec
cmp
and
scas
cmc
int3
sub
cs
pop
jmp
push
adc
cwtl
fstps
mov
aad
cld
pop
sbb
mov
and
push
repnz
push
mov
mov
leave
divl
jnp
adc
shrb
push
je
or
xchg
push
stc
stos
sti
stos
jns
xchg
hlt
je
outsb
pusha
fnsave
push
lahf
std
mov
hlt
dec
pusha
cmp
in
mov
sub
sbb
sti
in
gs
and
dec
pop
cmpsb
or
mov
and
inc
adc
add
add
add
js
dec
mov
div
sbb
test
add
bound
mov
imul
fldl
push
and
jo
adc
icebp
push
push
inc
arpl
bound
or
out
jl
add
lods
mov
pop
mov
xchg
or
pop
sub
stc
adc
xor
imul
jp
ljmp
or
repz
repz
or
adc
ja
fimuls
and
jno
jns
or
mov
or
or
dec
out
inc
les
lods
or
movsb
cmp
xchg
xchg
jp
and
inc
xor
mov
mov
sti
mov
dec
fsubrs
jmp
out
cmp
push
cmc
adc
lcall
jl
in
paddusb
mov
mov
xor
push
fs
aas
das
cmp
lods
jp
xchg
pop
insl
loopne
dec
rol
lret
clc
cmc
inc
stos
repz
pop
stos
xor
add
add
add
insl
cmc
lret
adc
fbld
xchg
outsb
fists
es
xchg
in
adc
rorl
shll
jbe
mov
inc
mov
mov
bound
cmpsb
or
inc
or
movsb
and
hlt
dec
js
jnp
pop
and
mov
in
jmp
inc
loope
loop
push
das
scas
hlt
pop
cmp
sarb
push
xchg
stc
repz
mov
cmpl
pop
jg
push
aas
call
xchg
lret
cltd
bound
xor
js
add
mov
push
lret
ficomps
ret
cmpsl
cs
xchg
ret
mov
pusha
mov
xchg
rcll
pop
ljmp
adc
push
mov
jmp
jae
adc
cmpsl
movl
adc
inc
pop
and
sbbl
xchg
mov
cld
orb
cmovge
cltd
dec
mov
and
xchg
out
pop
cmc
jb
push
add
std
aaa
mov
shll
xlat
add
add
add
add
xchg
mov
dec
jb
subl
mov
mov
or
inc
stos
cmpsl
ja
inc
int3
das
push
ds
cmp
les
das
movsb
into
xchg
adc
or
mov
push
jb
idivb
adc
jmp
push
cmp
xor
xchg
xchg
aam
imul
mov
dec
shrl
lds
test
movsl
push
jle
das
push
pusha
das
out
scas
mov
push
cmp
mov
xchg
ljmp
push
xor
sbb
mov
in
and
push
popf
pushf
popf
cmp
mov
xorl
cmp
mov
pop
repnz
fldenv
xor
cs
add
xor
pusha
mov
mov
js
jne
jbe
dec
and
mov
mov
mov
pop
lret
ds
insl
aam
mov
scas
add
inc
sarb
push
add
add
xor
and
dec
push
scas
imul
push
adc
imul
xor
iret
rclb
fbstp
dec
push
xchg
mov
mov
in
adc
and
cli
dec
and
xor
adc
pop
scas
push
notb
pop
negl
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
fstl
mov
jbe
inc
lods
ja
dec
pop
int3
sub
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
