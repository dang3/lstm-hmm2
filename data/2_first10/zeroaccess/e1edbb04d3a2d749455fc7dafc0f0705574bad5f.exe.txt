push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
or
clc
dec
bound
fstpl
bound
sub
pop
add
pop
jne
and
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
jne
fsubrs
dec
xchg
out
and
pop
push
std
into
jge
pop
sbb
hlt
dec
sarb
add
add
jle
repz
mov
add
sbb
jb
stos
pop
sbb
push
sti
daa
dec
xchg
add
dec
movsl
icebp
dec
cmp
lea
mov
cmpsb
mov
mov
and
xchg
push
mov
rcr
out
ja
inc
and
push
push
add
xor
fwait
cmp
lods
cmp
jmp
lds
fnstenv
outsl
cmp
leave
out
mov
enter
mov
mov
or
mov
jo
icebp
mov
push
test
cs
popf
popf
add
add
inc
mov
lods
push
xchg
cmp
jo
push
stos
lret
ficoml
fisubl
adc
cmp
mov
mov
test
cmp
cmp
not
cmp
pop
push
sbb
xor
arpl
or
pop
mov
or
nop
xchg
fimuls
xor
mov
lds
hlt
aaa
ret
div
xchg
sbb
ret
add
jnp
dec
arpl
push
jge
outsb
decl
or
cmp
xor
sbb
xchg
movsb
mov
adc
mov
lds
mov
cmp
in
xorb
or
xchg
jno
push
cmp
jg
mov
mov
mov
add
icebp
pushf
mov
jns
imul
jo
ss
iret
jbe
bound
push
setnp
std
fmull
stc
xchg
xor
inc
out
xorl
js
mov
rcl
dec
das
pop
jno
neg
in
push
mov
sbb
loopne
addr16
pslld
adc
mov
rolb
sub
stos
lods
popf
outsl
into
or
ljmp
lahf
pop
sarb
lods
sbb
adc
nop
add
pop
repnz
lret
pop
cmc
repnz
xor
and
cmp
dec
inc
aaa
lret
adc
rcrb
in
test
dec
hlt
pop
sbb
popa
or
mov
pop
out
insb
pushf
cmc
and
lret
mov
stc
ss
lods
ds
movsl
bound
inc
repz
mov
orl
sahf
cmpsb
mov
fcomps
inc
call
lods
rorl
std
mov
int3
or
adc
jnp
aaa
adcl
lcall
adc
jle
jecxz
insb
push
mov
and
ret
or
xor
movsb
je
test
sbb
cmp
mov
or
leave
xor
daa
push
movsb
adc
popa
mov
std
loopne
sbb
rorl
jns
popa
and
les
jg
cli
push
jge
cmc
fs
inc
and
push
mov
insl
sbb
cmp
and
mov
or
addr16
sub
push
scas
repz
pop
or
lea
pop
sbb
lock
fcmovb
mov
dec
daa
cli
ss
or
cld
inc
cmp
scas
cmp
cmpsb
sbb
xchg
aad
aas
and
cmpl
into
and
addl
testb
pop
aaa
xchg
sub
add
loop
sbbb
insb
pop
in
jno
stc
das
int3
lods
andl
jae
cmpsb
loope
pop
in
xor
scas
sub
out
adc
jp
jb
xor
fwait
sub
les
xchg
lock
scas
clc
jne
sub
xchg
and
mov
xor
or
xlat
cmc
out
fsts
jle
dec
adc
pusha
xchg
add
jle
fwait
daa
out
cli
lcall
cmp
int3
js
stos
pop
xlat
jns
loop
mov
lods
push
xor
mov
mov
mov
pop
cmp
jp
mov
xchg
pushf
mov
xor
push
push
inc
mov
mov
in
popa
int3
fs
inc
push
icebp
xor
rep
ss
inc
mov
mov
add
pop
xchg
mov
inc
mov
jecxz
jo
push
shrl
inc
dec
dec
bound
pop
addr16
enter
movsl
or
adc
mov
pop
incl
jmp
or
mov
add
sbb
mov
enter
sub
iret
cmp
xchg
push
adc
mov
xchg
xchg
outsl
xchg
mov
nop
dec
inc
shll
inc
mov
ja
xchg
data16
pop
pop
lahf
popa
and
lods
adc
test
cmp
adc
fdiv
stos
xchg
fdivrl
packsswb
or
test
push
cli
mov
hlt
scas
inc
and
movntps
cld
jmp
push
in
mov
cld
loopne
dec
std
movsl
popf
push
test
or
icebp
stos
nop
sahf
xchg
add
adcb
lea
pushf
adc
ret
xchg
jge
fmuls
xchg
sbb
movsl
data16
cmp
cmpsl
adc
ret
cld
sti
cmp
mov
je
aad
rol
sub
mov
out
test
pop
push
aas
mov
lods
in
pop
sbb
jmp
leave
gs
mov
je
movd
shrl
pop
aas
mov
push
lret
outsb
nop
pop
je
gs
mov
idivl
or
arpl
pop
pop
ja
loope
push
pop
test
xor
mov
xor
sbb
ffree
cli
cmp
cmpsl
sub
dec
push
popa
ja
out
loopne
imul
loopne
add
xchg
icebp
fisttpll
fwait
inc
inc
push
inc
cmpsb
je
fistpl
push
icebp
test
outsb
push
fwait
jno
jbe
mov
pushf
xor
orb
adc
jp
xchg
cld
mov
in
cmpsl
mov
shl
sbb
ret
lret
push
mov
push
cmp
cmc
repnz
pop
sbb
dec
push
add
push
lret
ja
jb
ja
push
xor
fisubs
inc
aad
push
xor
cmp
stos
cmp
mov
popf
jecxz
pop
jg
mov
dec
pop
xchg
sbb
in
loop
jl
sti
xchg
mov
aam
aas
push
pusha
js,pt
and
push
loope
sub
rcrb
in
cmc
into
pop
jp
loopne
sahf
sub
aam
pushf
adc
ljmp
push
xor
divl
mov
add
lods
mov
pop
lods
or
add
leave
addr16
fstpl
adc
gs
fisttpll
jo
mov
int3
jl
push
mov
push
and
cmp
jle
adc
arpl
js
xchg
sub
sub
add
aas
add
repz
sbb
sbb
outsl
aaa
fbld
pusha
std
idivb
lods
out
cld
xchg
pusha
pop
and
mov
dec
mov
mov
xchg
mov
dec
inc
sbb
fdivrl
fsts
cmp
and
or
lock
xchg
ljmp
shr
outsb
addb
or
sbb
fs
sahf
push
and
call
adc
mov
or
xchg
aaa
xorb
popa
add
push
leave
inc
shlb
hlt
or
dec
push
inc
loop
xchg
shlb
aad
call
ss
cmpsb
fwait
mov
loope
pop
ss
cmp
xchg
xchg
jne
sbb
ss
sbb
lods
push
inc
add
mov
dec
mov
out
inc
jb
xchg
dec
divl
enter
adc
adc
xchg
xchg
add
out
and
mov
stc
mov
clc
je
fldt
rclb
fstl
cmp
push
sub
mov
sub
adc
sub
mov
lods
xchg
cmp
inc
jno
divb
cmp
mov
pop
lock
cmpsl
fcmovu
push
and
ljmp
clc
movsb
xor
pop
std
push
mov
mov
adc
sub
repnz
ror
dec
out
mov
movsl
add
imul
sbb
xchg
inc
outsb
fsubl
jmp
cltd
mov
mov
mov
aaa
ljmp
mov
xchg
dec
and
in
and
dec
cwtl
cmpsb
mov
out
call
dec
fstpl
test
fildll
outsl
shll
notb
and
rcrb
or
shll
dec
mov
mov
adc
push
mov
mov
mul
mov
add
pop
mov
push
and
jae
cwtl
mov
data16
std
or
fwait
cmc
fdivs
xor
add
pop
xor
lret
inc
dec
shl
or
loope
jno
loop
rcll
fs
ficompl
aad
mov
mov
sub
fmul
adc
and
dec
push
inc
and
in
jl
cltd
stos
cmp
movsb
outsl
and
dec
fistps
jbe
pop
stc
jmp
add
addb
cmp
sahf
sti
shll
or
cmp
sub
sub
or
lods
movsb
bound
jecxz
in
or
arpl
add
xchg
xchg
pop
jle
cmp
mov
scas
hlt
cld
and
fucomi
push
lcall
xor
stos
pop
cmp
and
insl
and
pop
rorb
fistps
out
add
push
nop
and
jecxz
pop
test
das
ss
cmpsl
cli
pop
clc
push
or
cmpsb
jns
gs
or
sbb
dec
or
inc
jmp
mov
outsb
add
xor
mov
imul
loopne
inc
movsl
pop
inc
pop
mov
int
pusha
mov
mov
sub
adcb
cmp
or
ds
push
test
pop
push
pop
xchg
call
or
leave
push
and
pop
lock
pop
in
dec
or
push
lret
outsl
icebp
adcb
mov
xlat
xor
and
pop
ret
pop
or
cmp
aam
dec
out
lock
jbe
push
aad
adc
jge
arpl
cmp
jae
jge
push
jl
jl
xchg
insb
mov
xchg
mov
out
sbbl
jns
push
sub
pop
nop
mov
mov
xchg
or
cwtl
sete
pop
jae
adc
les
sub
fstps
movsb
adc
rclb
jne
and
cmpsb
mov
push
jge
dec
mov
fwait
mov
test
mov
xchg
fsubrs
mulb
cmp
out
cmp
in
leave
sbb
int3
les
dec
mov
jmp
inc
adc
xlat
frstor
and
cli
cmp
int3
xchg
inc
jp
int3
push
xchg
cltd
jno
cli
adc
aad
sbb
push
outsb
fs
mov
dec
movsb
addl
and
daa
rorb
pop
lret
mov
or
cmp
inc
aas
xlat
and
nop
sbb
mov
xchg
data16
pop
sbb
dec
shrl
addb
mov
mov
adc
add
mov
ret
test
mov
cwtl
lods
int
jo
imul
xchg
icebp
clc
popf
dec
inc
xor
in
push
xchg
test
sub
arpl
jno
xchg
icebp
or
lcall
cmp
pop
sub
lods
push
pop
clc
sbb
loopne
mov
stos
xchg
cmp
xchg
and
nop
leave
cmp
je
mov
insl
sbb
pop
mov
or
shl
pushf
mov
or
or
call
mov
repnz
fsubrs
push
sub
out
xor
ret
jle
jge
inc
mov
pushf
std
out
sub
loopne
xchg
push
dec
and
loopne
or
loope
push
sub
shr
sahf
or
out
test
paddusw
shll
mov
into
movsl
push
mov
scas
loop
in
rcrl
les
mov
inc
fwait
out
dec
roll
lcall
ud2
sub
xor
adc
hlt
gs
enter
sbb
cmpsl
mov
xchg
sahf
pop
inc
pop
ja
das
in
cwtl
aaa
iret
add
add
clc
loop
jb
pusha
fidivrs
cmp
jge
shrl
test
add
popf
push
stos
mov
shrd
imul
sti
arpl
push
hlt
mov
or
test
jb
iret
add
shrl
cmpsb
add
rcr
xlat
movb
sbb
pop
scas
xor
repz
inc
addr16
popa
mov
add
loopne
cs
test
aad
shl
jb
mov
or
sbb
sbb
add
mov
rol
or
dec
pop
fimull
test
out
rep
fcom
lret
fs
dec
imul
jne
inc
pushl
scas
mov
or
aas
and
ret
mov
push
icebp
or
aam
cmp
repz
js
mov
repz
test
ljmp
inc
pop
xchg
fs
in
pop
xchg
leave
or
fisttps
mov
and
ljmp
mov
fstpl
not
js
pop
aaa
ljmp
inc
stos
xchg
loopne
push
add
testl
incl
sbb
shlb
daa
and
jecxz
daa
std
in
jp
inc
and
cmp
xchg
push
sbb
movmskps
cmc
cmp
add
mov
or
bound
dec
mov
dec
inc
stos
cmp
jge
imulb
push
inc
pop
add
and
js
popa
sub
sub
loop
add
lahf
les
jno
mov
sub
lret
and
outsb
jg
sub
mov
xchg
scas
out
shll
popa
sarb
ljmp
sbb
mov
test
lcall
xchg
xor
sbb
mov
sub
shrl
cmp
mov
mov
repnz
inc
adc
fsubs
pop
sbb
push
push
push
adc
and
push
jns
jge
mov
xchg
fwait
leave
mov
sub
xor
jnp
push
pop
psubusw
adc
test
cli
mov
mov
pushf
scas
jg
out
xor
fidivrl
mov
hlt
push
mov
js
pop
popf
sbb
lcall
testl
fwait
lahf
out
flds
popa
popf
jno
xor
xor
cmpsl
cmpsl
fbld
push
cmp
or
inc
fimuls
xchg
mov
sti
cmp
sti
pop
in
enter
repnz
icebp
pop
mov
mov
jo
xorl
div
mov
xchg
aad
lods
sti
arpl
aam
mov
sub
loope
sbb
push
mov
xlat
movsb
push
or
lea
ljmp
sbb
leave
sbb
jns
pop
or
sahf
cmp
ret
pop
fwait
les
in
mov
and
cmp
inc
popf
mov
gs
jns
loope
or
mov
xor
jg
and
lahf
sbb
mov
pop
repz
out
lods
xchg
xchg
xchg
sbb
sub
mov
and
loopne
fiaddl
ja
xchg
sarl
dec
cmp
ror
inc
sbb
mov
je
sub
xchg
dec
cmc
fstps
loop
xchg
or
roll
neg
jg
cmp
stos
repnz
aam
and
stos
call
dec
sti
popa
sahf
dec
enter
fnsave
lahf
sub
mov
inc
jnp
lods
ja
rep
hlt
enter
xor
or
mov
dec
jne
popf
mov
jecxz
cmp
scas
mov
jne
js
and
push
mov
xchg
mov
lods
inc
sub
mov
jae
jno
pushf
pushl
pushf
es
aam
scas
int3
sub
inc
outsb
fisubl
fwait
ret
cmc
mov
add
push
fldcw
inc
pusha
adc
mov
out
adc
fs
rcll
mov
and
cmc
mov
mov
jae
jno
mov
testb
mov
movsl
add
ds
sub
or
dec
hlt
xchg
int
das
cmpsb
xor
mov
mov
out
add
jmp
sub
lods
pop
in
cld
imul
pop
mov
cmp
in
testb
sub
std
outsb
mov
and
insb
jo
sub
xor
mov
into
push
gs
sbb
mov
daa
push
cmpsl
xchg
int3
xchg
das
cmp
jg
icebp
lcall
jne
outsl
dec
fwait
push
dec
cli
or
lods
imul
repnz
clc
xchg
cmp
sub
lock
lods
jbe
pop
xor
lods
mov
xor
cmp
clc
aaa
adc
push
cltd
mov
aam
movzbl
mov
adc
xor
adc
aad
xchg
jp
push
scas
enter
mov
mov
mov
adc
add
xchg
fdiv
or
test
jmp
jbe
sbb
scas
fstp
daa
mov
lret
outsb
stos
pop
dec
imul
sbb
adc
add
push
pcmpgtb
mov
movsb
insb
scas
sub
xchg
scas
mov
es
xor
cmp
inc
int3
imul
shrb
xchg
dec
xchg
call
dec
ror
pop
ficoms
jecxz
add
sbb
out
lods
or
mov
cmp
sub
push
std
stc
fistpl
movsb
aam
and
add
jo
xchg
fs
mov
xchg
sbb
gs
pop
xchg
and
add
ficoml
subl
imul
mov
shr
insb
add
inc
fstpl
pop
push
shlb
pslld
popf
inc
clc
jmp
pusha
fwait
adc
jbe
jbe,pn
push
leave
sub
xchg
lds
jp
aas
jo
hlt
stc
push
lret
scas
out
push
push
fists
mov
push
push
icebp
jnp
inc
jecxz
dec
pusha
adc
add
pop
add
movsl
lock
inc
bts
or
testb
dec
xchg
adcb
mov
xchg
stc
or
push
mov
xchg
cmp
and
popa
andb
outsl
aaa
mulb
push
lcall
loop
add
movsl
and
nop
xchg
loope
adc
push
rorb
xor
outsb
pop
push
mov
int3
rcrl
pop
dec
pop
int
incl
and
xchg
and
mov
cwtl
es
insl
inc
mov
mov
lock
dec
sub
movsb
and
stos
sti
cmp
fucomp
rcrb
pop
jg
das
sbb
out
outsl
xchg
xor
daa
out
test
mov
cmp
imul
xchg
fsubs
out
imul
mov
xchg
mov
mov
cmp
mov
and
cmpsb
cltd
xchg
call
std
mov
add
add
jnp
pop
mov
testl
and
cmp
xchg
inc
mov
push
jae
stc
and
lock
fdivs
sub
popa
xchg
push
scas
push
jecxz
inc
fisttpll
mov
fcomps
movsl
lret
push
cli
adc
stos
and
fidivrs
kunpckbw
test
outsb
mov
lods
dec
dec
outsl
sbb
call
mov
es
or
push
xchg
dec
je
adc
sbbb
scas
mulb
xchg
mov
jp
shll
aas
or
lea
mov
and
add
mov
sub
pop
mov
mov
ret
cmp
inc
rcll
outsb
xchg
jnp
pusha
popa
std
sbb
inc
out
lods
arpl
outsb
leave
xlat
adc
mov
aaa
and
push
dec
push
sub
mov
pop
arpl
cmc
mov
cwtl
loop
mov
in
aaa
insl
sub
fmuls
jge
mov
push
xor
jge
test
fs
jge
pop
push
imul
and
jmpw
hlt
adc
in
in
jle
jns
and
enter
loopne
loopne
pop
adc
call
cmpsb
lds
mov
pop
and
sub
sub
push
push
rolb
data16
out
cli
add
dec
pusha
jb
out
or
fcomip
mov
fwait
jno
sbb
int
rclb
adc
push
call
std
mov
ret
mov
adc
inc
outsb
es
out
adc
pop
in
popf
lock
mov
cld
cmpsl
push
sbb
pop
cmp
dec
aad
lret
or
and
in
cwtl
repnz
mov
leave
cmp
and
or
sub
cmp
sub
add
repz
ds
cmp
scas
push
mov
stc
jne
stos
cli
sbb
pop
dec
jb
hlt
dec
out
mov
jg
push
cmp
xchg
ljmp
loope
out
add
jae
addr16
cwtl
inc
lds
cmp
into
xchg
adc
les
jno
fwait
jno
push
mov
dec
push
orb
cmpsl
pop
hlt
xlat
mov
lock
pop
push
xchg
gs
ljmp
mov
adc
sbb
inc
mov
dec
xchg
sbb
pop
and
xlat
icebp
gs
enter
cld
push
cmp
cmp
and
cltd
call
shll
vmwrite
in
cmp
les
stc
faddl
cmpsb
sbb
mov
and
add
in
xor
cmc
xor
ss
ja
popf
clc
push
inc
mov
icebp
lret
adc
fsubrl
xchg
dec
push
pop
dec
out
pop
mov
scas
lret
inc
jb
aaa
cmpsb
adc
aas
jb
notb
mov
lock
mov
popa
add
adc
cwtl
rcrb
xchg
cmp
dec
pusha
sarb
js
ret
shrb
sub
in
aas
xchg
and
sub
lret
imul
lea
cwtl
pop
xor
inc
xchg
jb
cmp
repnz
jbe
imul
fadds
movsb
imul
call
jne
pop
dec
xor
fistl
aaa
int3
cwtl
scas
je
push
mov
pop
adc
jp
test
pop
mov
adc
sar
dec
daa
push
fldcw
ss
ja
xchg
adc
call
lods
insb
mov
adc
int3
aas
push
xor
dec
push
push
les
loop
lretw
push
shrl
out
mov
push
inc
rcrl
lods
iret
cmpsl
ror
push
int
mov
xor
add
xor
jb
aaa
inc
in
out
insl
mulb
test
popa
js
popf
add
ret
adc
imul
cmpsl
jmp
mov
xlat
sti
adc
fwait
ss
ds
or
out
mov
sti
sbb
xchg
imul
movsl
fistpl
and
aam
in
jmp
push
shrb
xchg
sbb
jg
mov
das
sahf
mov
mov
insl
clc
jae
lret
lock
cmp
test
jbe
lods
fimull
push
sub
xchg
ret
sbb
pop
fdiv
adc
test
lret
jge
ret
xchg
or
loop
jnp
xchg
pop
addb
xchg
ret
push
stos
xchg
fcoms
or
pop
adc
in
mov
xor
xor
clc
sbb
in
ds
pop
jo
movsl
cmp
push
lret
pop
adc
jecxz
mov
lret
pop
lods
adc
cmp
jle
lock
xor
mov
sub
insl
repz
pop
std
das
jae
mov
orl
push
mov
cld
xor
bound
cmp
mov
mov
jbe
jns
lods
lcall
push
mov
loopne
push
das
mov
jnp
daa
loope
mov
xor
mov
xor
icebp
jne
lea
xor
out
aad
call
mov
enter
call
inc
je
addr16
int
aaa
and
inc
lds
dec
add
xor
sbb
mov
popf
sbbl
mov
jno
stos
push
pop
sbb
out
mov
push
stc
sub
dec
dec
ljmp
sbb
push
divb
mov
addr16
mov
call
jae
aaa
mov
leave
mov
outsl
or
adc
les
aam
jbe
dec
mov
nop
mov
cmc
iret
fstl
pop
ret
pop
mov
movsl
mov
cmp
push
lea
push
jl
inc
mov
jg
adc
aad
clc
out
lahf
imul
repz
js
repnz
call
stc
mov
or
push
and
shl
sub
sbb
dec
adc
insb
movsb
sub
sub
inc
sub
inc
push
outsl
sbb
fcoml
lods
popf
in
mov
dec
out
pushw
pop
dec
ss
adc
dec
in
in
dec
fwait
inc
aad
out
dec
mov
xlat
lahf
or
jle
pop
insb
aaa
imul
es
cmpsl
ss
aam
xchg
stc
xchg
sarl
lret
and
icebp
sbb
loopne
data16
mov
iret
inc
lods
inc
aam
movsb
shrb
or
mov
ljmp
cmp
jno
call
dec
jne
push
insb
imul
mov
inc
repnz
out
push
loop
int3
add
shlb
mov
push
jns
cmp
push
jmp
lret
std
sub
fdivrl
sahf
call
or
xor
pop
push
nop
dec
add
aaa
pop
add
pop
stc
adc
pushf
and
out
add
sub
fdiv
sbb
clc
adc
cli
push
rcrb
es
movl
fsts
fiaddl
cmc
aas
stos
movsb
cmp
in
xor
pop
or
inc
inc
repnz
pop
sahf
ja
dec
loopne
xor
and
push
stos
jp
pop
push
sbbb
push
add
lcall
xchg
das
in
cmp
mov
push
mov
rol
or
mov
jp
cmp
mov
mov
lret
sbb
lock
and
rcl
mov
cmp
adc
imul
adc
xchg
out
inc
bound
aam
in
enter
or
cmpsl
lods
in
jbe
in
xchg
xchg
sub
and
mov
push
in
mov
pop
movsb
inc
loop
mov
dec
xchg
adc
es
aad
je
push
cmp
dec
push
cld
scas
pop
pop
jne
fnstenv
sub
mul
or
movsb
mov
xchg
test
mov
inc
mov
inc
lods
pop
or
int3
xchg
adc
push
enter
mov
stc
adc
aas
sti
dec
cmp
repz
pop
sbb
sub
dec
call
jb
hlt
rcl
jns
fs
xorb
pop
jne
push
cltd
pop
clc
cmp
dec
cmpsb
frstor
int
ja
addr16
inc
adc
pusha
daa
ret
sub
or
inc
adc
stos
sahf
sub
je
sbb
push
jns
jae
jmp
ljmp
adcl
aad
add
mov
mov
lock
rcrl
mov
push
jo
push
div
jae
sub
lods
aad
mov
ja
in
push
jnp
and
dec
js
stos
test
scas
lea
imul
push
inc
out
or
loopne
adc
fidivrs
jbe
or
inc
aas
movsl
movl
stc
mov
dec
pop
or
fisttps
into
mov
rorb
cmp
outsb
push
test
stos
mov
adc
push
mov
repz
mov
cmp
stos
aad
push
push
xlat
iret
test
push
jb
mov
mov
test
aas
xor
je
xchg
movsb
fs
lcall
xchg
and
push
into
imul
xor
xchg
cli
mov
pop
push
fistps
in
fisttpl
add
and
mov
mov
sub
pusha
and
hlt
data16
aaa
fistps
mov
sub
push
out
in
add
popa
popa
mov
leave
and
push
xchg
mov
jp
out
loope,pt
push
xchg
insl
mov
icebp
movsl
cmc
pop
cmp
inc
cmpsl
outsb
cmc
sbb
movsl
or
pop
outsb
arpl
add
aas
pusha
dec
in
mov
xchg
imul
test
lret
sbb
jmp
inc
mov
call
test
mov
mov
loopne
sbb
int3
add
sub
cmp
repz
add
and
jle
pop
sub
gs
es
xor
icebp
cs
adc
out
int
xor
aad
sahf
lret
inc
mov
ljmp
and
loop
fwait
gs
push
jg
sbb
repnz
push
arpl
dec
je
mov
and
into
negb
stos
loop
xchg
sbb
gs
pop
xor
jno
sar
mov
inc
rcrl
popf
mov
push
test
testb
dec
push
push
cmp
sub
js
xor
and
sbb
sbb
movsb
insb
popa
lock
xchg
in
fs
adc
jae
pop
mov
xlat
cmp
adc
mov
cmp
dec
mov
xor
rcr
stc
fbld
lods
sti
loop
inc
ss
enter
mov
pusha
sahf
cmp
inc
ret
mulb
mov
pop
inc
cvttps2pi
xlat
fildll
shl
jle
lahf
mov
push
xchg
mov
je
and
fwait
out
insb
mov
jne
les
aad
add
or
push
dec
aad
sub
es
shlb
or
push
aad
cmpsl
dec
lahf
cmp
or
jl
rol
dec
mov
jae
and
bound
andb
jmp
push
cmp
fadds
lahf
inc
inc
jmp
pop
inc
sbb
inc
xchg
push
jmp
arpl
xor
repz
lods
adc
int
cld
mov
adc
xchg
lahf
cmpsl
outsb
out
jecxz
jmp
sub
es
in
js
sti
xchg
sub
jmp
fwait
arpl
lret
call
aad
filds
iret
inc
mov
inc
xchg
cmpsl
adc
or
xchg
jg
lcall
mov
mov
dec
jmp
fs
xchg
mov
bound
push
into
sbb
sti
aaa
rolb
shll
clc
pop
xchg
jnp
pop
inc
jo
push
mov
inc
inc
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
scas
pop
sbb
pop
bound
pop
bound
paddq
cmp
imul
sub
xchg
sub
jae
push
fs
mov
aam
inc
adc
andl
bound
or
xchg
cmp
aaa
xlat
decl
loopne
cld
adc
repz
iret
jae
int3
adc
jb
or
jl
ss
inc
jbe
and
sub
icebp
in
pushf
jle
stc
sbb
jns
xlat
inc
sar
push
test
add
and
sbb
gs
std
cmpsb
movsb
insb
cmpsb
addl
cmp
xlat
xchg
jno
fwait
je
test
pop
mov
loop
out
shll
lods
nop
jge
dec
push
push
paddd
and
lcall
cs
pop
jle
lret
cltd
das
jno
inc
addr16
mov
les
scas
aas
imul
out
xchg
dec
mov
lods
ss
push
fisubs
test
int
mov
cmp
inc
int
je
nop
xor
cmpsl
sub
cmpsb
sahf
push
mov
mov
sbb
mov
or
dec
cmc
jns
push
lock
jl
xchg
pop
lods
sbb
addb
mov
sbb
jb
jno
ljmp
mov
dec
push
adc
cmc
jne
mov
and
lcall
mov
or
adc
jnp
test
pop
test
xchg
lret
jne
mov
lods
in
adc
bnd
shrb
mov
push
aaa
mov
out
cmp
je
and
cmp
jmp
enter
jns
fldt
or
out
mov
inc
cmp
push
out
xchg
scas
outsb
cs
hlt
fistpl
inc
mov
jle
sub
stos
mov
outsl
sbb
cmp
xchg
insl
sahf
out
out
mov
lcall
scas
sahf
cmp
cmp
inc
cmp
jl
outsb
hlt
js
xor
mov
jne
cmp
test
push
xchg
cmp
call
mov
ljmp
std
and
testl
lods
add
fnstsw
insb
pop
inc
xor
inc
icebp
pop
jge
test
fistpl
xchg
mov
sahf
nop
dec
adc
pminsw
pushl
or
lds
jne
bnd
sub
test
clc
mov
aas
xchg
rcll
test
int
ret
loop
xor
xchg
jno
push
lcall
out
and
adc
xor
lods
jbe
imul
rolb
and
adc
and
mov
push
jmp
std
pop
pop
pop
sbb
test
pop
mov
mov
sub
sbb
xor
add
ss
jb
cmp
loopne
sub
jl
push
popf
push
mov
cmc
repnz
lret
sub
push
inc
cmp
enter
mov
arpl
pop
fldt
rcrl
adc
shrb
mov
dec
subb
cmpsb
sbb
testb
cmp
std
orl
jns
mov
mov
call
inc
call
or
leave
jbe
mov
pop
sti
add
sbb
push
inc
scas
push
and
sbb
sarb
popa
loopne
lods
push
shll
add
repnz
lcall
jnp
arpl
cld
lahf
leave
mov
cmp
xchg
pop
lret
xlat
add
inc
mov
push
pusha
dec
xor
and
test
mov
add
leave
hlt
mov
lea
cwtl
push
jo
inc
in
push
mov
rorb
aaa
cmp
jo
adc
into
adc
xor
std
out
sbb
arpl
fsubl
push
xchg
dec
lock
push
jg
into
or
or
adc
and
mov
jecxz
jecxz
in
jge
mov
fistps
jmp
stc
push
xchg
xor
loope
pusha
push
fdivl
jnp
inc
fisubrl
jp
ja
movsb
shll
cmc
ds
iret
xorl
das
or
jae
fstps
sbb
pop
mov
daa
sti
add
mov
jo
cmp
push
sub
aas
xchg
jg
jno
adc
fucomip
sbb
mov
mov
push
sbb
pop
push
pushf
sahf
cmp
mov
out
ss
adc
inc
inc
and
and
xchg
loope
std
je
cmp
loop
push
jo
fucomp
pop
dec
divl
push
into
pop
movsl
nop
repz
mov
arpl
sar
lcall
shrl
mov
dec
outsl
cwtl
fldl
mov
inc
dec
push
mov
add
bound
add
std
das
aaa
ja
pop
dec
jg
imul
sub
push
sahf
gs
pop
adc
add
out
ror
or
or
cmp
aaa
mov
mov
imul
scas
dec
aas
mov
and
push
sub
cs
sub
lcall
leave
and
enter
insb
jmp
vpmaxub
into
inc
scas
mov
add
cld
jae
mov
loopne
cmp
jo
inc
fistpll
xchg
insl
repz
nop
push
jne
cmpl
jl
lods
adc
fisttpl
test
leave
pop
dec
inc
in
xchg
scas
mov
fstpt
lret
aas
in
outsb
mov
les
fistps
idiv
out
test
ljmp
pop
pushf
in
jb
daa
mov
sbb
or
push
jae
jmp
fwait
mov
popf
repnz
sti
cs
pop
movl
jb
mov
pusha
rorl
adc
hlt
xchg
aam
fcmovnbe
rclb
repnz
or
cli
pusha
pop
jle
insb
pop
mov
adc
shrl
jmp
jno
inc
mov
jp
rcll
negl
icebp
jns
jno
add
icebp
xchg
cli
mov
jae
addr16
sbbb
sub
lcall
out
push
jl
je
mov
dec
loopne
shll
cmpb
out
mov
xor
popf
xor
cli
xor
xor
xor
xor
xor
push
push
pop
mov
cmp
and
sti
subb
inc
sub
outsl
into
aaa
movsb
scas
iret
sub
jecxz
xor
xor
and
popf
subl
dec
in
add
sub
shrb
call
int
mov
mov
cmp
mov
nop
inc
ljmp
push
sahf
call
and
in
mov
out
scas
fdivl
in
adc
push
insb
js
mov
movsl
cld
adc
or
mov
mov
enter
xchg
sub
cmp
lcall
adc
pop
xchg
add
sti
mov
push
add
mov
out
rcll
push
loop
aas
xlat
cwtl
push
shrb
dec
enter
stc
cs
mov
push
hlt
xchg
jmp
lret
jno
lea
andl
or
stos
ret
sbb
and
nop
xor
fwait
xchg
jle
mov
xlat
jo
stos
push
cmp
lds
lcall
mov
push
mov
sub
and
test
aam
mov
sbb
adc
cs
sub
cmp
xchg
nop
jb
push
and
scas
insb
jecxz
inc
inc
insl
xchg
or
shrb
and
lret
nop
dec
out
stos
add
andb
gs
sub
aaa
in
mov
popa
adc
mov
push
and
testl
jmp
test
and
punpckhdq
loop
bound
cli
jmp
mov
into
mov
les
jmp
pop
lcall
push
pushf
mov
xor
push
ret
hlt
out
mov
xchg
sti
lods
addr16
xor
jne
clc
pusha
sbb
stc
jae
jl
fs
cmp
nop
xor
int
mov
lds
loop
mov
or
pop
xor
push
pop
sbb
push
mov
adc
out
xorb
mov
inc
ss
orb
test
mov
cvtps2pi
bound
push
movsb
cmp
xor
rclb
cwtl
test
mov
adc
pop
fstpt
or
outsl
loop
sbb
incl
adc
adc
mov
mov
or
pop
push
push
and
mov
shll
sahf
inc
fisttpll
push
enter
and
pop
rol
lahf
adc
jmp
rcrl
or
dec
ficoml
dec
inc
enter
xor
sbb
pop
mov
sbb
cs
fisttpll
and
adc
cld
mov
dec
sub
xchg
mulb
shrl
mov
hlt
scas
scas
sbb
mov
jl
mov
out
jge
and
lret
jns,pt
xchg
dec
sbb
imul
mov
aaa
jno
jbe
dec
jae
jmp
jne
in
fucomip
or
sti
mov
ret
in
notb
adc
outsb
setl
add
sub
sub
sbb
dec
in
mov
repnz
mov
nop
loope
pop
fcompl
int
mov
xchg
das
icebp
rclb
mov
test
sub
adc
jmp
inc
push
dec
sbb
mov
xchg
inc
xor
xor
call
leave
inc
and
inc
pop
shll
adc
movb
lods
hlt
scas
int3
popa
inc
lds
es
call
jge
dec
cmp
xlat
das
xor
mov
cmp
ret
iret
sub
dec
rdmsr
xchg
inc
jl
pop
xchg
mov
into
pop
xlat
pop
repnz
dec
dec
inc
sbb
mov
loope
xchg
stos
or
adc
mov
sub
in
out
lcall
repz
mov
addr16
ret
sbb
mov
sbb
inc
pop
inc
inc
lock
pushf
pop
jge
fstps
jo
pop
in
xchg
sar
je
ret
or
cmpb
cs
jb
dec
dec
add
mov
xlat
inc
mov
pop
sti
and
add
push
inc
je
jmp
cs
aam
push
jle
outsb
sbb
inc
xlat
xor
mov
cmp
int3
mov
outsl
cwtl
adc
scas
aam
pop
popa
lahf
lock
sub
mov
outsb
and
cmp
int3
mov
lods
mov
dec
push
mov
xor
imul
and
xor
adc
test
popf
adc
jbe
cmp
sbb
clc
jnp
lds
fistps
sbb
add
and
repnz
loope
lret
rcr
cmp
mul
dec
hlt
mov
cmpsb
sbb
mov
or
cmp
cmp
mov
inc
jp
dec
std
pop
fdivrl
mov
mov
cmp
rcr
add
test
orl
loope
jne
bound
add
dec
inc
or
xor
add
adc
iret
vzeroall
cmp
gs
dec
arpl
nop
xor
out
push
mov
lods
pop
cld
imul
fisubs
fsts
fwait
mov
sbb
aas
addr16
mov
stos
xchg
test
and
inc
cwtl
xor
mov
addr16
das
push
movb
inc
cwtl
jle
cwtl
or
popa
mov
fisubl
and
cmpsb
dec
add
orb
or
push
mov
mov
pop
sub
repnz
leave
jge
or
mov
adc
xchg
sbb
xchg
cmp
sbb
cmp
mov
sub
sub
xchg
jp
jbe
cwtl
cmp
fsub
je
and
in
inc
xchg
add
cmp
rcll
jp
ljmp
adc
adc
test
jecxz
fisubs
inc
push
mov
fdiv
in
or
mov
xchg
add
cmp
icebp
loop
jo
lret
xchg
push
xorl
inc
sbb
mov
repnz
out
popf
aam
jge
insb
jo
mov
sti
lahf
jno
cmc
insb
sbb
mov
mov
sbb
mov
jae
das
pop
das
imul
sbb
ds
cmp
dec
add
inc
sbb
xlat
mov
enter
in
and
mov
imul
in
add
xchg
les
dec
mov
pop
incb
scas
jmp
hlt
dec
mov
loope
pop
mov
fistl
xor
mov
lods
nop
subl
mov
push
sub
test
add
and
mov
negb
lods
int3
cmp
push
jb
mov
ret
mov
inc
sbb
jl
enter
adc
pop
sbbb
gs
jae
push
movntps
sub
push
aad
scas
js
pop
aas
fsincos
cli
in
insl
dec
sbb
add
pusha
inc
fmull
shlb
pop
dec
scas
jmp
in
xor
cltd
aas
gs
addr16
int
lcall
adc
lods
sub
inc
ret
clc
pusha
inc
popl
ljmp
mov
pop
insl
fdivs
jbe
and
lods
repnz
popf
or
cmp
jb
sub
ret
adcl
and
push
fmull
sub
jne
push
fimull
in
mov
popf
pop
sub
pop
pop
pop
std
push
lock
mov
pandn
pop
es
dec
fldt
nop
and
inc
bound
ret
lcall
stc
mov
pop
mov
mov
mov
mov
or
repz
fidivrs
xor
xchg
push
inc
test
pop
inc
aas
xchg
insb
shl
loopne
sbb
in
or
fimuls
cmp
mov
mov
jl
mov
sbb
je
sub
and
dec
addr16
les
or
aad
cltd
jp
xorb
lcall
inc
hlt
ret
xchg
loopne
and
sahf
in
pop
mov
mov
stos
mov
out
clc
mov
jle
mov
sub
shlb
mov
cmpl
je
push
push
pop
jle
test
leave
loopne
mov
add
scas
jbe
push
lock
mov
jle
aad
jo
sbbb
rcll
dec
fstl
xor
cmpb
sbb
xchg
hlt
into
jg
jmp
and
std
mov
gs
aas
inc
pusha
sbb
mov
mov
push
adc
sti
mov
push
pop
inc
mov
inc
add
ret
dec
popf
je
leave
or
sub
adc
sbb
sbb
leave
fs
jns
jne
loop
cmpsb
or
imul
inc
cwtl
insl
lds
sub
xlat
cmp
loop
in
in
mov
testl
dec
pop
xor
out
sub
and
das
repnz
cli
adc
and
xchg
dec
xor
pop
or
mov
mov
outsb
cmpsl
loop
test
std
in
ja
vcvttss2si
shll
rclb
sti
ljmp
out
mov
adc
sub
lds
inc
insb
xchg
movsl
and
imul
stos
int
clc
jae
jp
loopne
fwait
jno
mov
jle
inc
jecxz
lods
and
push
sub
imul
mov
cmp
cld
pushf
cmp
nop
cmp
cmc
jbe
mov
shll
pushf
mov
lds
rcrl
out
ficomps
les
ror
push
adc
mov
rcl
imul
xchg
or
push
add
sti
xor
rorl
bnd
icebp
push
jns
jmp
inc
negl
mov
addr16
js
andl
xor
add
int3
mulb
pop
sub
test
sub
xlat
or
je
add
cmp
dec
cs
add
icebp
daa
xchg
mov
repnz
dec
repz
pop
leave
inc
add
clc
shlb
xchg
sarl
lods
xchg
mov
stc
imul
inc
cmc
push
dec
js
lahf
sub
cli
push
scas
push
lods
test
adc
in
std
and
cmpsl
inc
pushf
push
mov
mov
lea
pop
dec
adc
sub
mov
and
jmp
in
fwait
xchg
pop
mov
push
insl
xchg
fisttpl
jle
mov
nop
adc
scas
int
jns
repnz
or
lea
popa
cmp
push
xchg
push
fmuls
iret
xor
jae
dec
inc
hlt
jmp
mov
daa
hlt
push
jl
cmp
jg
jle
inc
ret
add
pop
mov
test
inc
sub
fsubr
data16
orb
rclb
adc
fsubrs
add
arpl
cmp
mov
imul
push
out
cmp
add
pop
jmp
sbb
cmp
sbb
xor
repz
sub
dec
nop
mov
xor
imul
adc
jp
pop
nop
jg
mov
mov
inc
add
cwtl
in
ret
xchg
push
rolb
lods
xchg
push
xchg
mov
gs
or
ficompl
inc
xchg
push
rorb
scas
sub
faddp
rol
xchg
xor
jns
or
xchg
imul
push
fwait
lret
jmp
and
fbld
jb
mov
dec
sub
mov
shll
fisubl
fwait
daa
or
lret
es
adc
sti
cwtl
mov
lret
adc
movsl
jecxz
sahf
ss
adc
dec
or
xor
add
fisttpl
sbb
add
xchg
dec
sbb
jge
mov
insb
jnp
out
je
cmp
xor
nop
cmp
ja
int
movsl
cltd
enter
xor
mov
jg
push
mov
fiadds
loopne
sub
cmpsl
jecxz
dec
push
lret
sub
mov
aaa
xchg
mov
or
ret
jnp
bound
stos
sbb
idivl
popa
and
das
pop
movsl
cmp
hlt
lret
out
sbb
add
imul
cmp
jmp
cwtl
mov
mov
adc
jb
and
scas
mov
sbb
pushf
clc
fsubr
cmpsb
mov
push
test
jg
add
outsb
add
ret
loopne
mov
mov
jno
sbb
insb
test
and
xor
xchg
pop
test
call
xchg
or
jp
push
mov
push
push
mov
adc
add
inc
sbb
add
aas
aas
das
test
leave
enter
dec
jno
mov
shrb
and
xlat
jp
mov
call
repz
ja
mov
data16
iret
dec
pushf
aam
jg
push
adc
pop
xor
xchg
sbb
or
push
jo
push
mov
lods
jno
xlat
sahf
jp
fnstcw
or
push
out
xor
ret
les
dec
cmp
int3
dec
arpl
shlb
out
shrb
shll
stc
mov
fidivs
out
cwtl
test
pusha
sub
jecxz
xchg
mov
fwait
xchg
inc
push
aad
loopne
loopne
ret
push
leave
push
ja
mov
inc
mov
add
dec
sbb
push
js
in
nop
dec
sub
mov
inc
cmp
add
arpl
subl
xchg
mov
inc
loope
xor
sbb
movb
pop
pop
push
dec
sub
xor
jno
push
xor
out
movsb
in
jl
out
nop
pop
push
or
out
jnp
dec
mov
idivb
push
sub
mov
mov
sbb
cwtl
popf
into
roll
cs
loopne
sbbl
inc
pop
addr16
xchg
xchg
ss
ds
pop
mov
cld
cmp
jne
jmp
mov
fldl2t
push
cmpsb
xchg
icebp
bound
mov
push
insb
imul
jb
out
vcvttpd2dq
cmp
lcall
movl
shll
dec
pop
test
ret
push
sub
push
dec
subb
sub
xor
dec
jnp
mov
jl
das
push
mov
push
xchg
mov
test
nop
or
mov
or
je
int
xor
pop
mov
enter
sub
dec
push
pop
mov
bound
cmpsl
aad
mov
arpl
xor
pop
pop
mov
sub
xchg
jle
xor
fdivp
xchg
aas
fildll
and
add
adc
mov
xchg
mov
ja
inc
xchg
sub
add
in
xabort
out
ss
arpl
inc
jns
fucomi
push
or
adc
xchg
jae
push
jo
arpl
in
sti
inc
sub
jbe
repz
movsb
push
mov
cltd
add
or
inc
fs
insl
xchg
sbb
aad
adc
adc
and
push
and
cmpl
movsbl
xlat
xor
inc
sub
imul
mov
jg
xchg
mull
xlat
push
mov
sbb
xor
sbb
scas
test
popa
inc
push
mov
lock
sbb
push
and
lret
cmp
movsb
pop
lods
add
mov
in
cmpsl
movb
mov
or
inc
push
lret
lret
movsl
pop
out
pop
out
cwtl
add
sub
fnstcw
cmc
in
lcall
loope
std
xchg
outsl
iret
pop
adc
mov
ljmp
xchg
jnp
sub
leave
sub
mov
mov
and
cld
jle
int3
mov
push
or
or
jecxz
movsb
sbb
push
cmp
jg
xor
js
fldcw
and
ljmp
das
dec
pop
or
jnp
push
add
loopne
cmpsb
mov
jne
sub
mov
xrstors
push
dec
pop
dec
xchg
scas
les
dec
jmp
jb
subl
cwtl
add
xchg
mov
daa
mov
jl
dec
xchg
inc
sbb
jge
adc
adc
mov
cmp
clc
out
xchg
and
pop
rcll
in
loop
loop
and
or
in
or
push
mov
push
and
and
lahf
cmp
mov
push
fistpl
ror
pushf
and
fidivs
ds
mov
out
inc
pushf
push
xchg
and
aas
fildl
ffree
pop
and
push
je
icebp
cld
popf
lcall
fdivr
dec
jno
fiadds
xchg
mov
push
push
pop
je
mov
test
andl
iret
xor
stc
add
in
lods
insb
mov
stc
ljmp
xchg
push
cltd
pop
js
out
xor
push
imul
pop
inc
inc
dec
xor
adc
mov
pop
loop
int3
cmpsb
mov
adc
lahf
cmpsl
push
pop
xchg
pop
cmpsb
clc
lret
xor
mov
jno
push
add
xchg
pop
pop
xor
call
mov
mov
pop
cld
push
nop
xor
fcom
leave
subb
loop
out
mov
leave
xlat
inc
jae
je
inc
in
mov
in
xchg
mov
stc
popa
add
and
mov
insl
out
pusha
neg
add
xchg
fisttpl
mov
imull
aas
jl
xchg
arpl
mov
push
hlt
sbb
mov
xchg
inc
sbb
aam
cmp
shlb
ds
sub
gs
fists
fcoms
sbb
enter
fmuls
fucom
and
pop
movsb
add
loopne
gs
cmp
sbb
push
sbb
loope
clc
or
adc
lahf
inc
pushf
dec
std
cmp
cmpsb
push
fsin
push
inc
and
movsb
movb
mov
pop
xor
inc
sub
jns
pop
data16
aad
inc
sahf
push
daa
lods
push
hlt
push
in
mov
inc
out
xor
pop
fcoml
nop
add
sub
adc
fcmovu
jmp
scas
fildll
sub
enter
and
jmp
cmp
imul
ret
add
in
inc
out
xor
push
adc
test
pop
packssdw
movsl
fxch
sbb
push
in
subl
outsw
dec
lock
push
aaa
mov
fiaddl
sahf
loope
in
dec
xlat
mov
out
fdiv
imul
add
insl
mov
test
in
sub
call
ds
push
inc
inc
mov
loope
js
ss
call
jmp
and
cmp
adc
inc
pushf
dec
pop
scas
cmp
inc
mov
mov
mov
jl
das
sub
notl
push
lea
imul
pop
fisubs
enter
inc
pop
scas
and
ret
add
sub
out
xchg
out
jmp
out
out
ret
sti
jge
fdivr
scas
sbb
inc
inc
mul
mov
sahf
fs
loop
pushf
es
lea
fidivrl
dec
pop
bound
mov
insb
cld
lret
imul
inc
xor
push
dec
inc
jg
mov
sub
bound
pop
imul
and
add
aas
xchg
arpl
cli
lods
xchg
dec
rorb
jnp
jle
dec
push
int3
fdivr
mov
jp
sbb
divb
xchg
jecxz
cmc
movsl
ud0
test
je
mul
cwtl
pop
negb
dec
mov
push
mov
cs
xchg
xchg
adc
filds
aad
and
in
jl
xchg
push
fcomp
jge
jle
lods
cli
xlat
and
out
dec
cmp
xor
fildll
mov
test
lar
sub
push
imul
pop
das
push
shlb
testw
jne
inc
mov
insl
and
sub
add
push
bound
jp
iret
in
xchg
notl
cwtl
sbb
cmp
xchg
icebp
mov
sti
aaa
fldl
in
inc
mov
jae
mov
push
filds
sahf
jmp
cmp
pop
jnp
add
cld
rorb
and
lock
and
cmc
daa
sub
dec
mov
inc
mov
pusha
jo
fnstenv
clc
add
xor
in
test
stos
int
pop
jo
mov
mov
mov
in
pop
cwtl
xchg
mov
mov
and
mov
and
sbb
and
mov
inc
adc
ret
lret
movsl
cmpsl
inc
inc
ror
loope
jb
stos
sbb
mov
or
inc
xlat
xor
loop
test
test
imul
aas
add
aad
scas
sub
aad
aad
ret
inc
or
sbb
arpl
dec
mov
mov
enter
fldenv
mov
xchg
rcll
or
add
xor
in
jo
push
sbb
je
les
arpl
lret
push
and
sbb
fidivl
mov
sti
inc
jg
xchg
gs
int
addr16
mov
lods
js
ret
and
clc
sbb
fistpll
push
jge
dec
mov
idiv
cmpsb
jl
jno
mov
sbb
dec
loopne
xor
xchg
fmuls
xchg
lods
int3
sub
xor
mov
mov
xchg
push
cmp
call
xor
dec
stc
sbb
dec
or
sub
push
push
sub
pop
rclb
rcrb
jae
lods
dec
push
fs
idiv
andb
fistl
jbe
xchg
sahf
leave
pop
adcb
fabs
lds
mov
cli
inc
adc
mov
ret
xchg
movsb
xor
jno
sar
jae
ficompl
outsb
jmp
mov
mov
lahf
ret
sbb
aaa
mov
jmp
cmp
out
stos
or
add
jmp
lods
rorl
xor
js
mov
lret
sub
out
jle
or
loopne
push
jo
pop
into
scas
jmp
loopne
push
push
pop
repz
dec
outsl
xchg
dec
or
ja
mov
xorl
ss
jecxz,pn
js
cmpsl
in
andb
mov
ss
dec
inc
pop
push
or
test
out
jmp
nop
mov
lahf
lods
lock
in
popa
sahf
sti
jb
rcrb
out
sub
cmp
shlb
xchg
sbbl
cltd
and
outsb
repz
stc
and
pop
or
sbb
stos
jne
mov
and
cmp
out
hlt
push
ja
fsub
aaa
scas
inc
shl
jecxz
xor
repz
inc
les
xchg
adc
movsl
mov
rcl
sub
jmp
es
addl
inc
jne
cmpsl
push
out
sub
stos
push
sub
out
adc
rcll
push
push
stos
adc
fcomps
mov
mov
push
mov
mov
popf
into
out
bound
xchg
fucomip
inc
sbb
sahf
or
aas
cltd
push
test
inc
push
rcr
shll
notb
add
push
fidivrl
cld
push
aam
push
xchg
pop
movsb
and
jae
mov
aas
adc
sub
stos
push
push
xchg
into
int3
sahf
xchg
xor
mov
jp
jno
idivb
cmp
cmp
out
cmp
sti
iret
lret
adc
inc
dec
loopne
dec
lret
imul
xor
loope
in
mov
repnz
push
and
out
jl
xchg
jl
ret
and
mov
xchg
xor
add
negb
push
jnp
test
aam
ja
stos
add
dec
add
and
stos
clc
fcmovnb
sub
mov
cmpsb
pushf
push
popf
nopl
adc
mov
push
out
psrld
mov
inc
lods
outsl
mov
sahf
out
pop
out
mov
lret
js
cmpsb
aad
stos
icebp
inc
cmp
push
inc
sub
enter
or
add
fwait
cli
subb
dec
mov
xchg
xchg
iret
popa
stc
dec
stos
out
je
pusha
lret
loop
push
push
aas
cltd
call
push
mov
adc
mov
jb
pop
jno
xchg
adc
outsb
mov
adc
out
mov
mov
jae
ss
out
inc
xchg
pop
sbb
out
mov
adc
call
in
fistpll
imul
pop
xchg
jne
mov
std
add
xor
mov
push
mov
js
test
push
dec
pop
lock
mov
xchg
cmp
sbb
push
addr16
mov
mov
out
subl
mov
cmc
mov
jmp
jp
insl
push
es
pop
orl
rcll
ja
int3
xchg
les
cmp
call
fstps
sahf
jl
and
imul
or
je
js
int
fidivrs
inc
pop
adc
add
fistpl
sbb
inc
cmp
push
adc
adc
cs
xchg
push
dec
das
push
xchg
movsb
rorb
lcall
icebp
hlt
dec
add
adc
sbb
dec
inc
mov
sbb
shr
cmp
inc
scas
test
pop
push
jb
push
pop
dec
cmp
or
loopne
ljmp
cmp
sbb
jb
push
and
decb
cmp
mov
cs
loop
dec
stc
enter
cmp
mov
insl
mov
sbb
sbb
pop
aam
and
xor
fimuls
nop
and
xchg
cmpsl
push
sub
bound
sbb
aad
pop
shlb
stc
test
xchg
loop
adc
push
jb
push
scas
inc
mov
loop
in
mov
in
or
cltd
push
insl
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
inc
ja
sbb
cmp
adc
bound
loop
inc
scas
loop
mov
xchg
insl
xor
xchg
pop
shrb
js
or
jecxz
int
jmp
dec
out
out
out
loopne
stc
pop
ficompl
inc
xor
out
in
mov
push
or
fcoml
cmp
inc
decb
enter
ljmp
pop
dec
orb
pop
and
mov
adc
shrb
adc
inc
push
jmp
inc
fstl
dec
scas
mov
mov
pop
push
cs
sbb
cmp
xor
cmp
arpl
test
pop
nop
clc
fs
fistps
xor
xchg
or
iret
in
test
mov
add
jle
pop
add
xchg
js
sbb
das
jbe
and
inc
dec
int
add
push
push
outsb
pop
rcl
in
cmpsl
xor
scas
sahf
aaa
mov
aas
cmp
push
sub
fsubrs
ds
mov
test
jg
lds
jmp
mov
cld
popa
adc
popf
adc
inc
push
add
or
and
lds
pop
int3
mov
push
sub
inc
xor
shll
or
add
or
inc
cltd
jmp
dec
push
dec
aaa
pop
jns
push
cmp
xchg
fistpll
idivb
arpl
fisubs
int3
sahf
je
iret
js
pop
cld
inc
sbb
fs
popf
mov
rcll
add
add
adc
mov
jge
mov
outsb
adc
shll
mov
in
aas
mov
mov
jne
adc
test
jns
xor
shl
enter
fstps
test
lea
mov
mov
sti
call
pushl
daa
int
jnp
pop
xchg
xor
call
lcall
xor
mov
add
and
or
jge
jns
add
inc
fbld
aas
sub
out
add
data16
mov
cmp
and
stos
dec
popf
jecxz
lret
hlt
daa
stc
jne
jbe
xor
mov
imul
fsubp
ret
pop
inc
mov
repnz
pop
mov
ret
or
sub
sub
mov
movsl
and
xchg
pop
jnp
pop
stos
fdivrs
test
je
inc
or
mov
je
jp
inc
cs
in
or
xor
or
mov
xchg
xchg
fwait
inc
outsl
push
xor
mov
xchg
scas
adcb
lcall
pop
add
inc
pop
xchg
pusha
adc
or
add
pop
jecxz
xchg
or
test
testl
and
push
cmp
xchg
add
cmp
jno
xchg
inc
xchg
inc
and
sub
aad
xchg
bound
mov
shll
cltd
add
push
fdivrs
jbe
roll
cmp
jbe
or
cmp
mov
pop
xor
or
ss
cli
dec
add
stos
stos
out
jl
jge
pushf
jae
mov
or
outsw
pop
cmpsl
clc
jbe
xchg
adc
adc
xchg
ffree
sbb
pusha
cmp
mov
das
jg
ljmp
rcll
mov
mov
imul
not
movsl
mov
lret
subb
dec
jle
pop
daa
dec
xchg
aam
aaa
add
dec
inc
jae
adc
insl
sub
cli
fstl
push
fucom
sarb
call
jmp
sub
mov
xchg
mov
adc
loopne
or
fmuls
pusha
sub
jp
jo
push
add
lret
mov
cmp
mov
jnp
pusha
mov
out
in
mov
push
push
hlt
xchg
repnz
orl
add
pop
ret
mov
cld
jno
arpl
outsb
mov
fisttps
cmpsb
push
test
mov
shlb
aaa
popf
ficoms
rcr
cli
jo
sti
ds
int
xchg
or
lock
mov
xchg
out
lahf
mov
fwait
hlt
mov
inc
mov
enter
mov
mov
dec
scas
sbb
adc
loop
jmp
jge
movsl
pop
lods
and
or
pop
into
pop
adc
dec
jp
adc
xchg
jl
mov
rol
aam
cmp
push
and
sub
push
fnstcw
pop
and
lahf
cltd
push
jbe
punpckhdq
cmp
emms
xchg
add
imul
dec
imul
mov
jno
jge
inc
push
mov
xor
mov
ss
sub
bnd
add
ja
xchg
sbb
cmp
mov
test
les
jne
add
push
sbb
arpl
enter
lds
cltd
dec
jae
ds
and
push
dec
or
or
int3
xor
pushl
dec
push
mov
add
test
sbb
je
sti
sbb
lock
les
xor
mov
adc
jg
and
nop
inc
jno
test
inc
in
jecxz
jg
mov
mov
add
out
mov
xchg
mov
sbb
sahf
aaa
enter
inc
cmc
add
inc
int3
daa
xor
ss
imul
or
pop
test
jmp
ret
mov
les
clc
or
inc
mov
mov
add
push
mov
mov
stc
rclb
push
aad
dec
xlat
xlat
sbb
xchg
outsb
jnp
daa
push
xchg
test
adc
loopne
mov
ja
arpl
adc
cwtl
inc
cli
or
insb
in
jge
je
dec
sub
add
mov
mov
in
mov
xlat
pop
sub
push
xor
imul
inc
cld
pop
stos
shrl
not
rcll
ljmp
mov
mov
push
sbb
in
adc
sub
xchg
and
push
jo
ss
fs
xchg
cmc
stos
xor
bswap
rcll
mov
pop
test
pop
pop
leave
mov
adc
jecxz
rolb
decb
lods
fisubs
and
sbb
std
das
jg
arpl
bound
or
outsl
xor
pop
jnp
dec
push
clc
mov
mov
adc
sub
push
mov
mov
push
and
fsubrs
jge
jnp
sub
out
mov
mov
stc
mov
push
shlb
add
cmc
icebp
xor
fstl
in
je
incl
xchg
push
dec
push
into
jo
scas
and
repz
lret
sbb
dec
cmp
add
aaa
xlat
nop
loop
mov
xchg
sbb
push
cmpsl
popa
jbe
sub
push
jge
add
jae
adc
pop
cmp
loop
adc
jb
pop
mov
push
dec
shlb
cmc
inc
jl
inc
loope
js
mov
movsl
sti
test
shrl
ljmp
test
bound
xchg
leave
ljmp
das
js
or
test
xor
and
inc
inc
mov
pusha
fcompl
pop
scas
mov
popaw
sub
mov
or
push
shlb
or
mov
loope
int3
fnstenv
push
mov
push
mov
out
mov
data16
cwtl
cwtl
call
cmpsl
mov
das
shll
insb
xlat
iret
imulb
xor
xchg
and
fildll
or
std
mov
dec
into
and
cs
and
pop
jbe
pop
adc
lods
pop
cmp
lahf
testl
dec
jne
fdivr
mov
inc
xchg
arpl
hlt
mov
lahf
mov
out
pushf
and
aas
push
sahf
cmp
xor
ds
lds
pop
pop
imul
stc
jbe
nop
mov
bnd
test
xor
clc
push
mov
or
pop
lahf
push
repz
sahf
stc
lock
iret
outsb
fsubrl
and
outsl
aam
xchg
adc
cld
mov
adc
lret
stc
ret
bound
fs
movsb
xchg
push
xor
scas
lock
orb
jbe
rorb
test
jo
out
outsl
jns
lds
ret
add
pop
or
mov
movsl
stos
pop
mov
pop
add
push
movsb
cmp
xor
test
fyl2x
repz
into
aaa
inc
fldpi
js
push
jns
fmuls
pop
inc
push
or
push
fbld
call
les
loope
stc
jle
in
subps
out
pusha
add
cld
mov
inc
or
scas
gs
mov
popf
adc
pushf
push
mov
jg
sarl
xor
cmp
push
and
sahf
mov
rclb
hlt
loop
mov
test
dec
shl
js
cmp
inc
sbb
jne
jl
mov
cmpl
in
adc
cmpsb
push
add
sub
paddw
lods
leave
je
and
cmp
jmp
cld
mov
jb
inc
ljmp
mov
and
sbb
das
lods
addr16
sbb
gs
repz
cmpsl
or
out
pop
out
mov
sub
mov
or
fwait
iret
push
ret
inc
lock
sti
inc
mov
in
or
pop
je
and
fnstcw
adc
lret
into
add
xor
mov
sahf
enter
mov
sub
into
out
jb
mov
xchg
lahf
xchg
int
push
mov
mov
inc
fcmovnbe
sbb
pop
xchg
jecxz
xchg
lret
lds
lock
sub
adc
icebp
xor
cwtl
sahf
mov
cmc
mov
mov
jne
mov
cmp
pushf
stc
xor
loope
rolb
pop
push
fdiv
lahf
sub
sbb
cmp
adc
mov
in
das
imul
popl
imul
lahf
fcoms
scas
pavgb
mov
and
shll
fwait
sbb
fisubs
insb
lds
pop
pop
cld
fs
pop
lea
xchg
and
push
inc
insb
and
push
repz
jnp
xor
push
push
pop
clc
xor
pop
outsb
mov
jg
fwait
adc
and
in
jne
sub
add
fbld
aad
hlt
mov
aam
pop
andb
mov
pop
aam
mov
addr16
fs
pop
mov
fucom
xchg
ficompl
mov
daa
pop
push
daa
mov
push
popf
push
add
leave
pushl
pushf
dec
mov
sbb
icebp
repz
or
cs
int
pop
adc
stos
lea
dec
jl
dec
lds
imul
fucomip
dec
aas
test
mov
adc
pop
hlt
andl
push
add
mov
outsb
jb
mov
mov
adc
and
cmp
push
dec
out
mov
cmp
loopne
sbb
sub
mov
jo
jecxz
jle
test
jae
fsubr
call
cmp
or
sahf
out
xor
push
sti
sbb
outsl
push
out
out
cltd
and
adc
lahf
test
cmp
cmpsl
aas
dec
hlt
and
jecxz
fnsave
jle
cmc
or
sbbl
add
fisttps
mov
inc
cmpsl
push
cmpsl
movsl
lods
pop
roll
jp
mov
pop
or
mov
sub
adc
repz
xlat
scas
jp
popf
test
gs
fs
mov
add
cli
test
sub
mov
mov
cmpb
fs
jmp
loop
ror
or
and
mov
inc
faddl
addr16
cmp
daa
pop
es
dec
or
and
inc
push
in
xchg
adc
adc
test
xor
jl
xchg
mov
mov
jle
jecxz
out
rorb
shll
daa
popf
test
aad
outsb
leave
les
outsb
fisubrs
fisttps
icebp
in
scas
js
dec
mov
imull
sbb
jb
ror
cmp
gs
ret
add
fs
call
outsl
xchg
sahf
nop
scas
mov
sahf
lret
out
leave
or
in
inc
push
clc
mov
cmp
push
jno
jne
rorl
mov
andb
push
xchg
pop
jecxz
xchg
push
dec
inc
enter
add
insl
cmp
xchg
lret
mov
jecxz
imul
push
imull
xchg
add
jae
jno
gs
fmul
filds
add
mov
mov
adc
mov
bound
pop
inc
adc
std
call
pushf
cld
mov
jecxz
arpl
data16
out
and
bound
jge
xor
int
out
mov
mov
inc
jecxz
mov
outsb
popf
enter
pop
fadd
lahf
sub
stos
imul
cmp
testb
dec
push
and
cmp
das
or
adc
push
cmpsb
cmp
mov
fisubrl
push
adc
imul
adc
dec
or
ror
cmp
pop
ljmp
pop
push
jge
inc
dec
jge
inc
adc
adc
call
jae
cld
push
outsl
pop
daa
stos
jecxz
lods
test
icebp
pusha
cmp
add
mov
mov
sti
or
or
fimull
mov
imulb
leave
test
inc
jge
xchg
adc
pop
std
adc
cs
sbb
dec
popf
loope
pop
push
jmp
ds
mov
or
dec
jne
mov
aad
push
sub
movsb
jge
dec
push
dec
sub
sub
or
cmpsb
or
mov
push
pop
adcl
ficomps
pop
xor
imul
shrl
push
mov
mov
cld
mov
cs
not
jno
cwtl
lea
je
in
fdivr
fists
cmp
add
xchg
call
insb
sbb
sahf
mov
jbe
sbb
test
in
cs
xchg
fdivr
add
adc
adc
xchg
adc
xor
xchg
or
and
jo
cmp
inc
mov
test
mov
mov
cmp
and
or
sahf
fstpl
sbb
xor
xchg
pop
or
cmp
xchg
out
stc
in
xlat
ret
push
add
mov
jne
mov
cmpsl
mov
sbb
push
add
cmp
mov
and
jp
inc
repnz
push
inc
test
mov
pop
sub
sub
pop
movl
xchg
les
sub
addr16
lock
mov
dec
subl
xorl
dec
push
mov
loop
out
clc
adc
push
insl
push
xchg
movsb
rolb
pusha
lahf
adc
insl
push
mov
test
shll
sub
sbb
and
jo
cmp
scas
adc
pop
add
mov
inc
sub
ret
mov
mov
or
shrl
xor
push
sub
repz
arpl
cmp
adc
xor
add
lret
inc
cmp
pop
mov
fisubrs
pusha
ret
mull
pop
jp
mov
fdivr
sbb
xchg
or
dec
into
shl
add
fimuls
mov
lods
aaa
dec
pop
sbb
mov
loopne
pop
adc
jge
insl
jns
inc
pop
mov
or
adc
or
movsb
push
leave
pop
mov
jmp
mov
dec
or
or
jae
call
daa
or
adc
loope
fstpt
lods
adc
data16
addb
add
pop
lcall
das
pop
and
sub
inc
or
std
mov
icebp
enter
out
pop
shll
leave
cmpsb
in
out
dec
mov
inc
jbe
rol
cwtl
es
and
cmp
mov
jg
popf
mov
mov
lret
mov
repnz
cmp
xchg
adc
int
lock
lcall
lcall
sti
loopne
mov
mov
lret
lret
ds
outsl
mov
lods
stos
xchg
sbb
and
xor
cmp
and
incb
hlt
test
xchg
mov
mov
dec
std
push
aaa
push
out
shlb
das
jp
negl
pop
insl
call
ss
sub
pop
pop
lods
jo
pop
inc
jae
pushf
cmp
sub
insl
inc
xchg
sbb
je
xchg
fisttpl
mov
and
ljmp
stc
pop
outsb
pop
and
add
int3
pusha
cmp
imul
loopne
push
out
cmp
adc
sahf
pop
adcb
cmp
inc
cmpsb
sub
push
inc
xor
inc
cwtl
call
jp
pop
mov
inc
jle
ficompl
xchg
ficoms
sbb
jo
repnz
mov
or
adc
in
mov
mov
xlat
mov
repnz
stos
adc
lods
add
cmpsl
das
sbb
pop
roll
rolb
idiv
cltd
jnp
mov
lcallw
rcrl
lds
push
and
mov
scas
pop
add
mov
jecxz
into
or
test
cwtl
push
xchg
jmp
mov
jnp
icebp
into
jns
push
jg
sbb
cmpsl
enter
inc
stos
jns
and
cs
lret
pop
and
lcall
xchg
and
out
jns
jl
insl
or
jl
leave
sub
sub
out
sbb
leave
mov
mov
mov
iret
sbb
cmp
aad
test
dec
dec
pop
mov
jae
pop
adc
lret
or
add
out
jns
lock
ret
call
inc
lods
gs
fisttpll
add
mov
out
sti
sub
fisubl
mov
into
sub
outsb
sbb
inc
inc
jo
sbb
and
jecxz
sub
mov
cmp
xor
fsubrs
lret
bound
mov
xor
icebp
sub
mov
mov
jb
mov
imul
pushf
hlt
out
mov
push
pop
jno
into
les
xlat
fwait
and
jg
mov
sti
sbb
imul
push
mov
xor
in
out
sub
inc
int3
sub
outsb
scas
push
jp
or
jne
and
gs
cmp
pop
loopne
das
scas
loopne,pt
xchg
lea
test
aaa
pop
out
imul
pop
mov
pop
jp
stos
rcrb
test
mov
lret
cmp
aam
xchg
or
jp
dec
cwtl
arpl
stos
lahf
inc
loop
dec
push
sub
sub
icebp
jb
arpl
pusha
rorl
out
test
xchg
and
jo
movsl
inc
mov
push
add
call
rorl
sbb
daa
cmp
cmp
lahf
pusha
pop
push
xchg
movb
push
mov
test
in
push
inc
xor
add
loope
mov
or
flds
mov
test
imul
inc
insl
not
push
call
dec
sub
mov
ljmp
testb
mov
cltd
ret
dec
movsl
fidivl
jg
shlb
sti
rol
insb
or
stos
sahf
xchg
adc
mov
push
dec
cs
out
ja
and
inc
fwait
xchg
dec
repz
ret
jecxz
jmp
shll
psllw
lcall
xlat
inc
cld
inc
or
ret
insl
mov
push
sarb
adc
push
shlb
outsl
mov
pushf
shll
and
pop
xchg
mov
pop
out
mov
dec
sub
sub
xor
cwtl
cmp
out
ljmp
push
mov
gs
cmp
mov
adc
and
push
xchg
pushw
enter
sbb
in
addr16
mov
imul
jns
test
jle
fimuls
icebp
movsb
inc
mov
cmp
mov
dec
int3
test
sahf
push
push
push
pop
sahf
mov
mov
test
repz
and
and
xchg
out
ret
sti
pop
xor
out
mov
pop
lret
out
pop
add
popf
dec
mov
mov
fisttps
ret
dec
out
popa
int
insb
je
or
popf
and
mov
inc
inc
jg
push
pop
mov
pop
pop
ret
lret
insb
xor
sbb
aaa
and
dec
movsb
mov
mov
adc
pop
adc
pop
and
add
cli
mov
ja
pop
adc
jg
ljmp
icebp
imul
dec
or
xor
ljmp
cmc
sub
pop
mov
push
test
cmp
sub
push
mov
fs
scas
pop
ficoms
fcmovnu
mov
and
int3
mov
out
push
push
popl
aam
push
lea
fdivrl
add
mov
loopne
enter
mov
pushf
push
out
gs
and
test
imul
push
mov
jnp
xchg
aaa
inc
repz
dec
fnstcw
add
jl
mov
cmp
xorl
sub
mov
cmp
jle
bound
stos
fcoml
mov
leave
mov
cmp
fdivr
enter
es
push
scas
lods
sub
pushl
mov
cmp
inc
or
stos
add
loop
jg
rcrl
or
movsb
dec
inc
and
pop
pushf
xchg
fisubrs
mov
push
aas
mov
mov
ss
test
icebp
shlb
loop
nop
cmpsb
sub
lcall
popf
xor
or
shrb
xchg
jne
aad
push
and
insl
ret
push
jecxz
or
xor
inc
push
jmp
stc
lcall
add
test
hlt
or
in
mov
int3
fwait
mov
xor
insl
inc
xchg
testb
sbb
sub
push
aam
or
cmp
pop
lods
mov
outsl
int
rcll
orb
add
xlat
bound
inc
daa
push
std
movsl
movsl
and
cmp
xchg
dec
in
and
xlat
std
adc
clc
cmp
pushf
popf
inc
xchg
or
popf
xor
xor
jecxz
add
ds
flds
into
cmc
jno
mov
pushf
out
jns
add
leave
aaa
sub
mov
and
mov
mov
movsb
arpl
push
jo
xor
xor
sub
into
cli
clc
imul
inc
dec
cltd
lahf
stos
pop
call
jge
push
rorl
xor
incl
xchg
lods
add
loopne
lret
mov
sub
inc
dec
add
out
dec
inc
mov
iret
xor
out
loopne
mov
iret
stos
pop
ja
sbb
add
xor
shl
cwtl
inc
dec
jb
fwait
jecxz
xchg
imul
mov
adc
sbb
imul
and
lods
divl
sbb
orb
push
in
mov
enter
arpl
sbb
insl
aam
dec
jbe
add
fisttps
mov
cld
push
xchg
mov
xchg
in
sbb
mov
mov
iret
in
enter
mov
repz
in
or
and
sti
push
mov
enter
psubusb
scas
inc
leave
add
mov
loopne
pop
sub
push
and
aad
adc
das
inc
add
cmp
subl
add
xchg
pop
push
jo
push
jbe
lcall
dec
insl
jl
inc
movsb
sbb
test
fimuls
inc
es
dec
sub
es
fs
or
adc
clc
shrb
xor
sub
cmc
test
cs
and
pop
add
add
sbbb
in
pop
imul
sahf
sahf
sub
lahf
xchg
cmp
pop
sarb
fwait
scas
mov
jp
fistps
push
mov
lcall
popa
jp
lahf
aaa
mov
rcll
jmp
jmp
jmp
inc
aaa
sub
test
std
add
imul
psrlq
loope
test
cwtl
adc
cmp
mov
xchg
jmp
xor
inc
pop
push
add
push
addl
inc
dec
xchg
and
imul
xor
movsb
enter
lea
fldenv
xchg
dec
mov
pusha
xor
adc
dec
jl
lods
fwait
jo
into
repnz
mov
or
in
xlat
cmp
icebp
pop
movsb
das
mov
cmc
xor
ja
rorl
lcall
imul
fisubs
stos
xchg
in
adc
das
mov
nop
jne
test
xchg
dec
data16
mov
mov
fldl
mov
push
dec
cmc
cwtl
mov
xor
insl
call
subb
push
stos
adc
lret
sub
mov
inc
mov
xor
scas
pop
jg
sbb
jg
loop
pop
dec
fldcw
sbb
cmp
loope
test
jo
lret
push
shl
int3
das
push
lcall
or
clc
movsl
cmp
cmp
adc
cmp
in
sbb
and
pop
scas
push
call
mov
sbb
loopne
gs
push
into
repnz
outsl
mov
mov
cmp
jp
pop
lcall
rcr
out
xor
into
out
stos
dec
xorb
or
push
aas
jecxz
mov
outsl
orb
jb
adc
je
or
sbb
xor
loopne
jg
loop
scas
sub
cmp
cmpb
out
cmp
xchg
jns
sub
ficoms
mov
aad
les
ja
inc
jne
pusha
popf
dec
ds
out
lret
push
cli
sbb
leave
int
pop
notb
push
je
push
xor
sbb
scas
aas
stos
fsts
fidivrs
jmp
cmp
int3
movsb
push
xor
out
cmc
jbe
lret
not
or
roll
cmp
lods
and
testl
aad
mov
add
fistl
sbb
pop
test
adc
add
mov
fs
arpl
popa
sub
movsb
leave
out
mov
es
adc
arpl
repz
mov
cmp
pop
sub
gs
lahf
adc
inc
mov
sbb
in
sub
outsl
sahf
jns
pop
loopne
push
aas
stos
pop
faddl
das
sub
shll
ljmp
push
pop
mov
stos
aad
push
mov
hlt
cltd
xchg
daa
sbb
out
hlt
sbb
push
xchg
jno
shrb
pop
dec
out
sti
add
or
lods
ja
sbb
push
cmp
aad
jae
call
popf
fdivrs
cwtl
adc
xor
sub
add
insb
add
xor
shl
sbb
and
pop
mov
pop
sbb
add
xchg
lods
rcrl
adcb
ret
imul
dec
repz
jnp
sbbb
repz
xor
cmp
jae
mov
fdivs
addl
lods
int3
mov
xchg
hlt
mov
int
mov
jmp
rolb
or
stos
dec
xchg
mov
fnstsw
sbbl
dec
dec
movsb
add
pushf
jo
hlt
sbb
or
mov
nop
not
adc
pop
cli
dec
jl
inc
arpl
daa
pop
cmp
jge
lret
xor
in
sbb
fwait
pop
sub
popf
icebp
jae
cli
inc
adc
shr
or
cmc
aam
jmp
stos
mov
fnstsw
sbb
add
push
mov
mov
sarl
mov
scas
push
pop
xor
sbb
dec
push
add
sub
insb
push
mov
cmp
jmp
inc
into
lea
std
leave
fimuls
fsubp
xor
cmp
gs
aam
icebp
and
dec
in
shlb
inc
mov
fiaddl
in
adc
push
jp
add
out
mov
cmp
sbb
or
arpl
sbb
cmpsb
mov
fildl
push
outsb
in
sub
pushf
cwtl
dec
mov
adc
push
js
cmp
in
aaa
xchg
divl
push
fcomps
das
call
cmp
xchg
rclb
or
mov
adc
cmp
or
and
mov
xchg
call
inc
ret
cmc
mov
jmp
jb,pn
pop
mov
jne
out
sub
push
xor
inc
aas
jmp
xor
insl
fisttpl
out
sbb
push
dec
mov
mov
dec
xchg
jne
sbb
inc
inc
clc
imul
push
cld
push
insb
push
jg
and
mov
jecxz
jge
adc
jmp
or
stos
or
cld
ret
jp
pushf
pop
test
std
loop
pop
in
push
sbb
push
or
aas
push
sbb
mov
mov
sbb
andl
xchg
cmp
stos
xlat
xchg
les
mov
pop
test
or
mov
cmp
push
insl
mov
mov
or
cmc
push
dec
sbb
sub
xchg
sar
push
jp
sbb
ljmp
cmp
lods
pmaxub
aad
test
lret
xor
outsb
pop
ds
cmp
jbe
bound
cmp
cmc
loopnew
call
push
cmp
jns
sar
imul
pop
out
fwait
aam
or
rol
xor
adc
or
xchg
es
out
sub
push
stos
aas
movsb
imul
dec
fildll
pop
and
push
inc
or
movsb
insb
in
mov
mov
inc
cmpsl
test
adc
test
dec
cmpsb
call
shr
inc
sbb
in
jge
pop
lods
and
cs
or
ret
loopne
xlat
mov
jecxz
aas
or
xchg
jl
stc
sbb
lret
addb
jp
sub
push
adc
xlat
sub
inc
mov
sub
pop
or
sub
mov
xchg
mov
pop
pop
and
mov
lahf
cmp
iret
xlat
imulb
and
or
loop
mov
jae
xchg
sbb
jmp
lret
mov
fs
stc
outsl
mov
scas
mov
fbld
jl
enter
jno
and
mov
jle
je
aaa
lods
fistl
and
imul
sti
mov
push
ret
int
pop
jbe
lock
lock
lahf
sbb
inc
sbb
dec
inc
jno
pop
je
and
ja
imul
jo
out
insb
dec
push
mov
mov
dec
jns
dec
andb
sub
ja
mov
or
insb
std
sbb
or
add
je
add
add
push
addr16
fldcw
sub
scas
mov
cli
pop
xchg
cmp
test
repz
sahf
mov
cmp
pop
repz
jle
mov
fs
fwait
es
aas
movsl
jo
cmp
fwait
pusha
mov
jbe
jne
sub
loop
shlb
aas
add
push
dec
or
shll
fcmovnu
inc
stos
xchg
or
inc
cwtl
xchg
into
mov
cmp
push
mov
mov
shll
popf
add
xchg
cmp
xor
sbb
inc
mov
cmp
mov
jns
mov
xor
sbbb
push
int3
jo
inc
jns
cwtl
nop
or
cltd
jns
jp
adc
adc
fsubr
ret
push
mov
ss
sahf
addr16
mov
imul
aam
mov
xchg
ljmp
dec
and
lahf
fcmovnb
sub
inc
lret
xchg
icebp
cltd
xchg
fisttps
push
clc
aas
xor
dec
xor
jl
fucom
arpl
insl
cmpsb
adc
insb
shl
or
fcmovnu
pusha
negl
inc
cmp
pop
aam
xchg
stc
int3
pop
dec
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
fcom
outsl
idivb
das
mov
cmp
xchg
xchg
jno
xor
fsubl
ret
fdivl
sbb
data16
insl
in
xlat
lahf
out
jge
cmp
test
aas
pop
push
xor
ret
mov
call
mov
divl
xchg
jecxz
or
dec
cmp
inc
pop
pop
mov
mov
pop
mov
push
shll
or
add
movsl
mov
mov
addr16
cmp
mov
push
fists
ficomps
mov
in
sub
sub
dec
sbb
add
test
mov
popa
lcall
push
push
sbb
aam
xchg
inc
sbb
jecxz
daa
out
lods
mov
loope
jp
mov
out
pop
jb
inc
fucomip
xchg
rcl
clc
sbb
outsl
data16
dec
sbb
ljmp
inc
stos
pusha
arpl
dec
xor
sub
mov
and
mov
jne
xor
fimuls
jns
lods
pop
ficompl
mov
or
ljmp
xchg
popf
lcall
stos
pop
loopne
or
and
fiaddl
adc
lods
pop
and
sub
addr16
push
imul
gs
dec
xchg
incb
daa
scas
movsb
into
dec
add
dec
dec
mov
cmpsb
faddl
add
cmp
int3
push
mov
insl
and
inc
xor
int3
mov
push
dec
out
xchg
sti
jae
icebp
cld
icebp
test
and
cmp
sub
dec
mov
aam
mov
add
push
js
and
sbb
dec
aam
and
xor
mov
ljmp
inc
or
mov
movl
mov
sbb
nop
rcrl
enter
movsb
ljmp
sub
mov
xor
pop
les
mov
sub
cmc
test
nop
orb
lods
xchg
sahf
inc
cmpl
push
xor
std
inc
jg
push
jl
sahf
push
inc
cld
jge
adcb
jecxz
cs
sahf
movsb
adc
imul
daa
std
mov
xchg
mov
in
mov
frstor
jbe
icebp
sub
das
stos
xchg
hlt
aad
das
pop
rorl
out
outsl
lahf
lret
scas
lcall
cmp
mov
lret
mov
xchg
jle
sbb
mov
inc
daa
inc
cmpl
push
pushf
ss
clc
inc
cmpsb
pushf
mov
dec
sub
dec
push
mov
mov
imul
xor
or
jge
shlb
sbb
testb
not
fisubrl
adc
sti
add
mov
andb
addr16
out
notl
push
popa
add
fwait
movsl
cmp
loope
inc
cwtl
and
jg
movsb
popa
jb
test
test
adc
pop
pop
mov
sub
and
jae
add
push
xchg
fidivl
icebp
es
mov
sbb
cli
dec
mov
pop
fsubr
mov
in
mov
cld
outsl
jo
mov
xchg
add
scas
add
jno
sbb
or
je
sub
movsb
dec
inc
mov
xor
pop
mov
cmp
icebp
bound
push
sub
jmp
aas
out
insl
shrb
sub
test
xchg
inc
lcall
mov
addr16
cwtl
mov
push
notl
jbe
pop
enter
push
adc
mov
hlt
push
movsl
push
xorl
sbb
lock
cmpb
shrl
cmpsb
mov
loope
test
sub
add
sbb
dec
pushf
xchg
mov
sub
dec
adc
stos
out
cmp
cmp
stc
test
popf
pop
loopne
cmp
addl
xor
scas
mov
sub
and
lcall
sbbb
push
push
cmp
mov
inc
mov
mov
mov
cmovae
sub
xchg
or
stos
jae
xchg
mov
mov
dec
mov
and
loope
bound
cmpsl
pushf
shr
lea
add
xchg
div
xor
jecxz
pop
daa
adc
sbb
jmp
lods
lods
lahf
sbb
add
mov
pop
jbe
bound
in
cwtl
fisttpl
inc
pop
movsl
shrb
pop
mov
iret
dec
rcll
pop
jg
jp
repz
jne
sbb
mov
scas
in
mov
movsl
clc
xchg
pop
adc
aad
inc
call
jbe
outsb
push
jb
push
add
cmp
cmc
sub
add
jbe
dec
mov
sub
imul
push
pop
jae
pushf
fucom
jl
xchg
or
push
xchg
imul
ds
into
sahf
in
cmpsb
dec
jbe
jmp
movsl
rcr
test
sub
dec
int3
cltd
push
test
inc
jp
out
or
sub
les
nop
stc
xor
sbb
es
pop
out
and
pop
cmp
sti
sbb
jle
push
push
stc
fsubrl
enter
cmpsl
adc
mov
popa
shrb
int3
scas
inc
and
jp
imul
and
repnz
xor
pop
pusha
enter
std
and
or
jmp
pop
dec
enter
adc
jo
push
mov
pop
fisubl
hlt
add
pop
loopne
loopne
push
lret
sub
sub
ret
xchg
rclb
ret
testb
sbbl
mov
scas
pushf
sbb
and
loope
push
pop
fldl
jl
push
scas
aad
push
into
mov
mov
je
pop
mov
test
cmp
adc
rclb
pop
insb
test
or
adc
add
stos
mov
inc
pop
orl
or
arpl
jp
out
sbb
gs
dec
or
jns
mov
xchg
jle
insb
xor
jbe
pop
mov
icebp
xchg
mov
int
xchg
mov
pop
imul
loopne
nop
sub
lea
mov
gs
pop
sub
mov
inc
inc
jp
es
adc
adc
scas
fsubrl
lret
leave
or
sub
fdivl
pop
dec
shrb
pop
hlt
das
fistl
or
test
mov
push
xor
mov
stc
out
and
mov
scas
and
lods
lods
xor
dec
icebp
inc
lds
dec
adc
rolb
mov
call
inc
and
pop
cld
dec
jno
out
sbb
push
lods
test
cmp
nop
or
xor
pop
daa
and
mov
adc
ds
dec
sbb
jmp
test
lods
jmp
adc
imul
in
out
daa
ds
cmpsb
adc
inc
adc
lock
mov
and
mov
cmp
pusha
pushf
jno
push
mov
jno
aad
ja
mov
xor
roll
cmp
loop
test
fisttpl
js
fisubl
adc
movsb
call
fwait
hlt
push
lea
lahf
sti
xchg
push
sbb
xor
iret
xlat
cs
mov
enter
and
fldl
leave
lods
cmpsl
movsb
push
ret
xor
pop
fdivl
cli
cltd
dec
in
push
repnz
pop
mov
mov
adc
stc
insb
es
xchg
hlt
inc
ret
lahf
aam
xchg
xor
lods
mov
out
out
icebp
je
shl
mov
dec
xor
inc
mov
and
jbe
cmp
fnstcw
lds
cmpsl
in
or
mov
cmpsb
lea
rep
daa
rep
cmpl
sub
mov
cwtl
pop
insl
fidivrs
cwtl
nop
jnp
push
mov
js
push
loope
pop
out
mov
pop
pop
je
xor
hlt
push
mov
mov
xor
cmovge
inc
dec
xor
shl
int
jns
or
adc
sbb
shll
fdivrp
lods
adc
dec
lods
jb
xchg
xor
jbe
fdivrs
pushf
rcrb
fwait
xlat
push
pusha
xchg
jne
std
xor
inc
jmp
in
mov
xor
stc
dec
je
mov
arpl
std
xor
lds
cmp
mov
dec
adc
or
sbb
call
mov
sti
xor
cmp
or
cltd
adc
xor
and
xchg
xchg
pop
js
add
and
mov
push
mov
pop
add
xor
jno
fwait
pop
mov
mov
ret
aaa
cs
cmp
inc
dec
pop
stos
fcoml
mov
lods
in
sbb
xchg
data16
dec
cmp
lret
xor
cmp
scas
stos
cmc
pop
lahf
icebp
cmp
mov
clc
xor
and
imul
or
push
cmpsb
sub
int3
dec
movsl
ljmp
cmpsl
dec
adc
sbb
lock
push
dec
jg
in
cmp
jmp
and
push
bound
out
jge
gs
dec
sahf
dec
sbbb
test
dec
xchg
mov
pop
int3
or
or
adc
or
mov
mov
push
and
rclb
out
lcall
dec
outsb
orb
jne
stc
into
in
scas
cld
or
jl
xchg
jo
aam
push
pop
or
pop
xchg
pop
lock
enter
ficoms
dec
pop
mov
pop
icebp
add
pop
mulb
stos
xor
mov
dec
into
dec
sbb
out
mov
push
cmp
pop
clc
dec
mov
jg
lahf
enter
push
lds
dec
sub
and
mov
pop
mov
inc
pop
cmp
mov
lods
adcb
cs
movsl
push
clc
push
push
add
or
sbb
pop
add
sbb
leave
mov
sub
mov
call
xchg
or
jecxz
cmp
push
mov
out
lods
insl
pop
lret
popf
cmp
inc
adc
jno
mov
mov
loope
cmp
sub
out
dec
repz
jecxz
cmp
xchg
jns,pn
mov
jp
fsubrl
test
mov
adc
mov
jle
adc
sbb
mov
sub
lods
sbb
mov
jo
scas
mov
jl
mov
mov
add
inc
pop
ret
mov
stos
adc
lret
jmp
aas
mov
lcall
iret
lds
lds
fsubs
arpl
add
int
rcll
ds
hlt
pop
jg
dec
shll
xor
ja
fs
push
insb
xchg
jg
icebp
incl
mov
mov
mov
mov
out
daa
dec
pop
popa
jbe
cs
lret
les
sbb
pop
mov
sub
ror
test
push
mov
inc
lods
mov
out
xor
or
negl
pop
mov
cmp
pop
sbb
std
fadds
and
dec
adc
sbb
in
scas
repnz
test
mov
loopne
jno
out
pop
out
push
and
jb
xchg
sub
pop
mov
adc
xlat
push
stos
push
xor
js
sbb
daa
movsl
das
push
mov
ret
jle
movsb
rcrb
lcall
cmp
jae
pop
stc
test
sbb
mov
stos
popa
fidivrs
into
pop
lret
ss
xchg
lock
loope
int3
stc
jo
mov
test
push
and
pop
and
inc
add
xchg
sub
fimuls
jbe
mov
imul
inc
add
xor
mov
shlb
add
fwait
shll
pushf
in
xor
dec
test
sbb
fisttpl
es
pop
inc
jne
mov
sbb
jae
sub
aam
push
div
test
lods
cmp
movsl
pop
int
stc
in
jge
push
mov
xchg
test
arpl
mov
and
inc
add
push
js
xchg
fmul
jle
js
test
clc
lods
in
and
daa
adc
add
sbb
pop
cmp
push
jge,pn
fstpt
add
shl
jmp
jbe
std
xor
inc
mov
and
out
dec
cld
inc
jg
pop
push
jnp
jmp
pop
dec
pop
push
jge
lds
out
sub
mov
xlat
fwait
add
push
jge,pn
sub
mov
xchg
pop
shll
cld
dec
into
or
xchg
inc
inc
sbb
sbb
dec
push
mov
mov
jecxz
inc
push
call
fs
xchg
cmp
adc
jbe
mov
and
push
adc
push
xor
movsb
sub
dec
sub
and
nop
pushf
in
sub
sub
ss
dec
mov
push
push
xor
adc
pushf
cmp
pop
ljmp
push
cmp
in
sbb
ficoml
jmp
ret
icebp
fildl
cmp
adc
bound
stos
ret
jno
pop
hlt
adc
orl
rcl
and
adc
mov
jb
fdivrs
ja
stos
cmp
shll
dec
jno
in
xchg
lods
add
push
push
cli
imulb
xchg
std
xchg
bound
dec
repnz
mov
pop
push
inc
xchg
mov
xorl
inc
jae
stos
sbb
dec
jo
nop
xchg
sbb
lods
mov
hlt
fistl
mov
lds
movsl
mov
test
fistpll
mov
cli
aas
addl
and
add
pop
adc
into
fdivr
test
js
or
je
pop
sbb
loope
les
enter
nop
mov
insl
jl
xlat
imul
gs
cmpsb
dec
out
cltd
fs
push
add
rolb
sbb
lahf
push
jo
out
cwtl
adc
das
popf
xchg
mov
jno
and
daa
xchg
inc
hlt
mov
in
push
cmpl
sub
push
mov
jbe
cmp
cmp
imul
fsubrl
xchg
xchg
mov
and
cwtl
mov
stc
mov
xlat
mov
cmp
sub
stos
insb
movsb
push
imul
shl
push
lret
and
js
jecxz
push
xchg
roll
test
lahf
adc
leave
enter
fidivrl
jb
or
cmp
popa
sbb
rorl
mov
repz
mov
in
cs
jne
or
fsub
lret
in
dec
mov
dec
cwtl
mov
fisubl
cmp
mov
mov
cli
sbb
sbb
jmp
fisttpl
shl
test
mov
mov
pop
jl
push
stos
test
xor
jmp
lods
aaa
cmpsb
decb
fdivl
cltd
loope
xchg
jns
sub
jg
jl
popf
sub
fnstenv
in
popa
push
out
fs
outsb
inc
rcr
idivl
xor
push
jae
jl
dec
jl
popl
mov
pop
lds
mov
fmuls
scas
andb
fucomip
std
mov
mov
les
jl
shrb
pop
jmp
push
xor
cwtl
popf
inc
jnp
icebp
mov
sbb
cld
jg
ficompl
push
in
xchg
rcrb
sub
lret
movsl
imul
insl
stos
icebp
pop
sbb
outsl
arpl
pop
cltd
rol
mov
subl
out
cmc
lock
sbb
cmp
jle
les
mov
sbb
fwait
sti
outsl
repnz
in
jmp
push
dec
test
sbb
pop
repz
dec
in
popa
mov
inc
out
lret
scas
pop
call
std
xlat
and
xchg
cmpsl
sbb
inc
push
es
shl
loopne
shrb
sbb
xor
cmp
mov
xor
test
outsl
test
mov
ljmp
sub
fisubl
mov
out
and
xchg
xor
bnd
xor
inc
dec
insl
lcall
je
inc
sbb
pop
int3
add
and
xchg
loope
fistpl
loopne
inc
xchg
shll
push
clc
jle
mov
js
push
sub
mov
or
add
test
mov
rclb
jg
or
sbb
inc
daa
insl
test
nop
clc
test
cmp
pop
sub
jae
mov
loop
cmpsb
and
xor
cmp
dec
stc
inc
popf
das
inc
and
add
add
jae
mov
scas
gs
cmp
fdivl
das
xchg
cmp
pop
sub
test
pop
or
sysenter
push
inc
test
jmp
sub
push
pop
mov
ret
xor
sbb
push
fdivrs
das
es
lcall
jl
fdivl
mov
inc
cmp
xor
push
add
mov
ds
cli
push
cld
and
cmp
pop
pop
icebp
jns
shrb
jae
je
inc
or
xchg
andb
jns
xchg
gs
fdivl
fnsave
mov
cli
sbb
jmp
daa
cmp
test
jne
xchg
lret
or
jnp
sbb
pop
or
loope
test
cltd
in
lods
cmp
xorb
cmovno
xorl
xor
nop
dec
jns
or
mov
jecxz
dec
and
mov
dec
push
mov
js
adcb
push
enter
dec
jmp
lahf
lret
sub
fisubrl
cld
int
and
pop
fwait
dec
psrld
test
mov
xchg
rcrb
repz
jnp
fistps
jmp
sbb
adc
cmc
dec
out
mov
push
sub
sbb
rcrb
xor
ficompl
leave
xor
imul
lods
adc
frstor
xchg
outsl
enter
xor
push
push
mov
loop
xchg
sbb
test
hlt
aaa
sub
repz
repnz
add
jle
jb
push
movsl
and
xchg
push
jae
dec
push
js
cmpsl
push
movsb
in
dec
in
in
in
push
lret
out
adc
lock
mov
popl
aaa
sbb
add
xchg
mov
jbe
inc
push
cmp
and
test
fxch
mov
push
mov
sub
adc
mov
and
mov
dec
xor
mov
inc
movsl
jecxz
arpl
shrb
arpl
lods
mov
mov
outsb
cltd
mov
rorl
imul
sahf
ret
jp
sub
arpl
inc
pop
stos
rorb
mov
adc
sub
bound
xchg
push
sbb
mov
int3
inc
push
adc
mov
inc
push
pop
cwtl
addr16
or
xor
adc
cmp
scas
addr16
nop
bound
mov
stos
add
sub
sub
fnsave
xchg
imul
mov
push
into
out
jb
mov
sbb
or
insl
pop
sbb
bound
mov
mov
mov
xchg
jmp
pop
in
cmp
lret
inc
fnstcw
clc
xor
bound
lea
dec
icebp
cmpsl
xor
jl
and
outsl
test
push
and
cmp
lret
lea
scas
test
lods
mov
fs
adc
test
push
inc
stos
stos
pop
out
sub
pop
enter
ljmp
pop
ret
in
pop
mov
jo
jae,pn
push
dec
pmullw
mov
mov
jb
push
sbb
jge
orb
sahf
and
push
pop
test
xor
call
mull
jge
xorl
rorb
out
aad
es
fisubl
rolb
jnp
and
ret
out
xchg
cmp
ficoms
ret
pop
lock
iret
mov
mov
jae
int3
aam
jp
sahf
das
or
out
mov
push
xor
cs
mov
rcrb
iret
jmp
push
sbb
lods
cmc
or
add
mov
sub
scas
add
dec
xchg
mov
clc
pop
cwtl
out
xchg
mov
fistl
into
orl
mov
movsl
ret
pop
xor
loope
rclb
or
imull
and
fs
enter
shrl
into
je
xchg
lods
in
imul
push
xlat
ljmp
negl
lcall
lret
fidivrs
jb
cmp
dec
jns
adc
mov
push
imul
or
mov
popf
ljmp
icebp
leave
pop
sub
lock
stos
cmpb
loope
xor
mov
ds
xchg
push
inc
stos
imul
mov
or
shrl
jecxz
xchg
and
push
in
stos
adc
mov
sbb
inc
dec
xchg
mov
sbb
icebp
xor
inc
cs
in
mov
data16
push
lret
lds
lods
mov
mov
xchg
sub
or
cmpsb
cmp
aaa
adc
imul
in
pop
inc
filds
mov
sub
dec
lock
icebp
std
xchg
icebp
ljmp
or
or
lock
shrl
adc
pop
mov
mov
or
data16
cmp
popf
fldl
push
mov
fsubr
movl
lods
add
int3
setae
xchg
jbe
cmpsb
cmp
movsb
jecxz
push
dec
insl
adc
xchg
sbb
xchg
pop
push
clc
xchg
sbb
and
test
pop
shlb
push
scas
std
pop
sbb
fdivl
cwtl
hlt
popf
jl
int
pop
in
lods
lods
fdivrs
push
shrl
mov
lods
fwait
out
dec
add
xor
push
cmc
stos
lea
mov
sbb
push
inc
stc
sahf
push
jl
pop
test
mov
xchg
movsb
or
xchg
and
or
aad
mov
clc
rcr
xor
dec
mov
insl
push
outsb
pusha
mov
iret
add
cmpsl
xchg
and
mov
push
push
test
jae
mov
jle
loop
jl
sbb
das
mov
mov
nop
add
stc
add
jmp
add
add
insb
das
jnp
clc
sub
jnp
shll
jne
mov
xor
or
jno
insl
add
lret
and
xchg
sub
aaa
sub
aam
dec
lock
sbb
push
sub
mov
pop
mov
sub
ret
ret
and
and
dec
push
xor
push
fs
adc
mov
xor
out
jle
sar
or
jo
dec
jmp
inc
aad
cmpl
cmpsl
fdivr
jle
dec
in
mov
popa
jo
add
sbb
push
push
dec
xchg
sahf
pmullw
dec
jae
insb
ja
scas
pusha
jae
adc
scas
mov
inc
mov
mov
and
std
outsb
ljmp
lret
fldenv
mov
cmp
sbb
cmp
push
insb
shll
out
mov
add
mov
test
mov
push
dec
repnz
adc
lret
add
push
sub
lea
test
jnp
cwtl
test
lret
mov
inc
stos
in
daa
clts
movsb
xchg
icebp
fsts
lods
jnp
mov
xlat
sub
jbe
addl
es
cmc
cwtl
imul
pushf
nop
data16
jecxz
jecxz
xor
add
scas
ss
js
pop
stc
fdivp
sbb
cmp
mov
cltd
in
hlt
pop
xor
icebp
xor
jg
test
pushf
mov
rorb
negl
xor
test
and
push
fimull
in
mov
loope
inc
sub
stos
mov
add
imul
mov
test
or
jae
js
jo
and
ja
sbbl
xlat
push
pop
neg
mov
mov
iret
or
inc
mov
cmp
imul
or
lock
std
push
rorl
jo
lds
addr16
aad
xchg
cld
rolw
js
mov
out
xchg
adc
es
ret
dec
daa
rcll
and
or
mov
int
mov
aad
insb
pushf
in
cmp
jl
inc
or
xor
ja
lock
sub
adc
add
adc
ljmp
faddl
push
popa
or
pop
orps
dec
push
and
sbb
iret
lret
pop
leave
mov
in
inc
out
cld
xchg
and
add
int
in
xor
jno
and
movsl
ret
je
sub
inc
lcall
jp
jmp
mov
int
pop
sub
pusha
adc
push
jbe
aaa
jge
pop
and
mov
xor
ret
arpl
ret
cmp
ret
mov
push
ljmp
iret
lret
adc
mov
lret
mov
xchg
push
mov
jns
out
or
cs
mov
dec
outsb
jecxz
dec
fwait
xor
and
test
cmp
or
pop
hlt
ficomps
mov
stos
mov
cmpl
popf
xor
push
dec
out
js
dec
sub
test
add
sbb
or
shrl
sar
iret
and
adc
subl
mov
adc
repnz
push
mov
cli
out
pop
outsl
sbb
mov
pop
xchg
outsb
test
cmpl
cltd
dec
testl
xlat
or
loop
in
push
xchg
jnp
mov
testl
popa
and
xchg
scas
repz
in
jmp
outsb
js
mov
cmc
push
lods
ficoml
dec
rolb
fsubr
mov
fiadds
fstl
mov
lahf
dec
test
adc
xchg
sub
test
hlt
xchg
sub
out
loopne
pop
xor
icebp
repz
jns
sbb
sahf
push
mov
sbb
popa
js
pop
fs
mov
aad
mov
sahf
in
xor
out
mov
add
stos
pop
and
sbb
mov
pop
jno
dec
mov
outsb
popa
sbb
icebp
mov
inc
das
lahf
mov
lock
aaa
push
clc
push
rol
insl
lods
pop
sbb
aam
mov
mov
repz
dec
lret
mov
add
mov
pop
shll
mov
or
pop
pop
outsl
jp
sub
add
pop
cmp
out
or
and
aaa
insl
sarb
pop
sub
stos
sbb
sub
mov
icebp
xor
stos
push
lds
and
xor
lret
loopne
sbb
and
push
jp
or
and
xor
pop
in
pop
sbb
into
mov
adc
xor
pop
sub
gs
jp
cmp
mov
push
enter
aaa
or
jae
into
xor
mov
testl
mov
sub
mov
sub
cmc
mov
shr
out
enter
add
arpl
or
xor
mov
movsb
mov
pop
sub
push
and
cli
out
inc
cwtl
sub
lods
cmp
or
xorl
in
ja
inc
pusha
out
inc
mov
shrb
cmp
in
cwtl
lret
test
add
cmp
in
bound
dec
xchg
xchg
ljmp
push
mov
or
mov
xchg
lcall
lock
pop
cmp
jb
jns
fimuls
das
push
mov
stos
jmp
iret
push
add
and
adc
loop
dec
scas
xor
mov
sbb
fwait
xorb
cmp
jl
or
jns
movsb
int3
pop
ljmp
lahf
add
inc
pop
lock
js
cwtl
push
jl
or
inc
js
or
in
inc
addl
fstpl
cmp
hlt
pop
clc
out
lods
push
mov
mov
add
sub
xchg
fsub
mov
gs
mov
call
aad
sub
jle
iret
push
int3
ret
adc
cmp
jp
mov
sub
call
out
sbb
lods
hlt
xchg
addr16
enter
arpl
in
fbstp
pop
in
xchg
jo
test
enter
fwait
dec
inc
stos
int3
popf
loop
cmpsb
inc
mov
adc
pop
cmp
pop
xor
stos
sbb
fsub
adc
xor
imul
cli
popf
mov
jp
push
mov
stc
xchg
jno
or
push
or
push
lcall
add
sub
es
ret
inc
repnz
mov
add
bound
scas
dec
fcomi
and
jns
mov
dec
xchg
xchg
pop
sub
js
pop
ja
jecxz
inc
lock
push
add
stos
mov
xchg
cmpsb
cs
sbb
in
cmpb
adc
cmpsb
cmp
scas
jmp
cmp
sbb
mov
xchg
sti
jge
movsl
pushf
push
and
dec
dec
das
stos
or
cltd
dec
xchg
add
outsb
imul
mov
inc
fisubs
test
ret
pop
xchg
lods
fneni(8087
xchg
add
inc
push
mov
lcall
xchg
out
pop
test
outsb
adc
push
rolb
xor
nop
lods
push
cwtl
push
mov
movsl
push
mov
sti
push
inc
sub
ja
fbld
scas
outsb
repnz
sbb
mov
out
push
mov
je
pop
test
jbe
xor
scas
daa
add
adc
mov
cmp
cli
out
scas
sub
ja
xor
push
xlat
dec
jnp
pop
mov
loope
dec
imul
fldcw
fstps
sub
pop
xor
rolb
add
mov
aas
insl
mov
fadds
roll
rcll
lahf
mov
xchg
dec
pop
dec
lcall
pop
or
mov
or
lods
mov
ret
sub
push
fidivs
push
jecxz
js
sub
sti
mov
and
cmp
push
dec
stos
jnp
in
mov
sub
mov
xchg
clc
fcmovnb
mov
adc
pop
sti
adc
pop
xchg
inc
sbbb
push
mov
test
pop
fcomps
mov
in
popf
cltd
ret
sbb
pop
add
stos
roll
les
leave
stos
sbb
or
std
enter
xchg
sbb
addb
out
mov
loopne
or
es
iret
test
push
fcmovb
loope
popf
arpl
dec
addb
roll
insl
clc
pop
jg
ss
in
rclb
jnp
xchg
outsb
mov
imul
jne
sbb
fdivl
in
jbe
xorl
fdivs
pop
dec
xchg
push
mov
mov
arpl
mov
jns
lea
arpl
inc
inc
jns
stc
pop
sbb
jb
push
ljmp
imulb
les
hlt
scas
mov
mov
jecxz
icebp
jb
push
jp
xlat
lret
pop
es
pop
je
adc
aas
cmpb
lea
or
rcl
mov
add
xchg
rolb
shlb
jb
loopne
mov
mov
add
insl
cmp
test
std
mov
mov
jmp
popf
mov
out
and
jmp
ljmp
xchg
and
cmp
out
mov
es
adc
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
cs
hlt
bound
pop
bound
jecxz
pop
jo
xchg
movb
push
and
enter
or
mov
xchg
jb
add
out
lods
call
out
jg
sub
xor
fidivrl
mov
push
int
lock
in
aaa
daa
add
test
xor
jns
test
mov
cwtl
sbb
push
inc
mov
and
test
decl
sub
loopne
lret
jo
repnz
test
loopne
push
and
sub
pop
pusha
mov
cmp
gs
or
stc
mov
adc
cs
lods
pcmpeqb
jle
push
mov
cmp
imul
xchg
push
xchg
cmp
adc
in
rcrb
sbb
fsub
scas
int
cmpsb
jp
xor
pop
xor
gs
add
aaa
jne
lods
push
sub
in
cwtl
leave
mov
inc
fstpl
sub
mov
sti
pop
lods
mov
flds
repz
in
stc
pop
push
por
mov
adcb
cmp
bound
test
shl
clc
icebp
dec
cmp
sti
mov
neg
push
xor
fbstp
sti
insb
mov
ss
fsubrs
inc
rcr
inc
add
sbb
jecxz
cmp
and
mov
lea
adc
ret
lods
sub
icebp
mov
jne,pn
sbb
inc
mov
call
inc
mov
and
jno
into
into
sub
cmp
arpl
pop
clc
adc
clc
sbb
cwtl
cmp
inc
add
ret
jg
mov
pop
mov
sahf
fistl
pop
ret
aad
or
leave
inc
push
jecxz
xor
iret
ficompl
cmp
push
test
out
xchg
pop
sahf
gs
pop
test
adc
out
std
cmp
push
inc
jo
aas
xchg
insl
popf
mov
mov
mov
xchg
xchg
or
in
clc
push
sub
inc
pop
push
xor
fwait
testb
jp
stos
sub
mov
mov
orl
sub
cmp
jl
mov
inc
pop
mov
ljmp
jb
pop
and
xor
stc
mov
outsb
jle
test
sub
cmpsl
imul
or
add
add
das
stos
imul
jg
jl
scas
cmp
cmpl
test
adc
cmp
leave
mov
dec
in
pop
fwait
mov
wrmsr
dec
adc
out
stc
pcmpeqw
or
test
fsubs
dec
cmc
xchg
and
ja
lea
notb
pop
rolb
inc
jno
je
adc
mov
out
fcmovu
imul
mov
loopne
adc
xor
scas
or
pop
das
cmpsl
dec
sub
lods
iret
ret
mov
test
or
or
dec
xlat
pop
mov
cmp
sub
mov
xor
or
ja
arpl
testl
stc
jmp
sub
imul
repz
in
in
push
in
mov
movsb
and
cmp
inc
in
cwtl
push
sub
mov
lcall
push
xchg
sub
push
andb
test
sub
mov
adc
cmp
roll
and
nop
add
pop
adc
mov
xor
outsl
ja
inc
pop
sub
roll
jl
fstps
loope
and
lds
imul
ds
xchg
cmpsl
sarb
xchg
arpl
cmpsl
and
aaa
insb
aas
xchg
sbb
pop
into
mov
dec
pop
jl
test
and
jl
lret
lea
clc
enter
fbld
cmp
clc
roll
mov
jo
aam
loop
xor
push
cmp
rcr
push
outsl
repz
inc
ret
lea
imul
adc
pop
clc
out
add
out
jnp
sbb
cs
out
or
cmp
dec
inc
sbb
lret
adc
sar
or
xchg
fildll
jno
mov
imul
in
sub
xchg
testb
or
mov
add
js
shl
bound
movsl
sub
idivb
std
pop
sub
cmc
sbb
adc
pop
sub
cmpl
sbb
or
gs
outsl
xchg
xchg
and
pushf
inc
test
mov
je
out
test
push
pop
sahf
mov
ja
andl
add
xchg
inc
mov
and
shrb
cli
add
push
push
repnz
mov
dec
or
nop
loopne,pn
mov
in
and
pop
sub
mov
repnz
les
xor
daa
mov
cmp
fs
pusha
cltd
dec
xor
mov
ficomps
jle
xchg
xchg
push
fistpll
sbb
sbb
std
test
pop
inc
xorl
mov
xor
das
xchg
out
add
xor
xchg
mov
shl
scas
decb
sbb
cmpsb
jns
cmp
push
mov
cmp
and
pop
popa
pop
inc
mov
jp
adc
jno
xor
inc
popf
test
mov
jb
adc
xchg
inc
jb
xchg
xor
test
cmp
nop
jae
cmpsl
dec
pop
imul
scas
add
test
push
es
stos
jae
jbe
pushf
aas
sti
mov
outsb
sbb
dec
pop
push
inc
fstps
sub
cwtl
add
sti
push
aad
dec
pop
push
cld
leave
iret
sbb
mov
imul
jns
inc
mov
sbb
into
jle
sarl
mov
ficoms
imul
mov
bound
xchg
and
gs
add
adc
stos
fwait
popf
or
lret
jle
mov
jno
cld
adc
xchg
pop
cltd
sub
enter
loope
push
je
inc
xor
cmpsl
cs
sarb
add
insl
test
test
inc
sbb
adc
sub
stos
cmp
inc
or
out
scas
movsb
pop
mov
xor
ret
inc
rcrl
leave
movsb
xchg
pop
jns
popa
popa
in
scas
jnp
incl
ficoml
xchg
stc
mov
out
loop
cmp
aas
leave
mov
sbb
pusha
rcr
xor
outsl
push
flds
sbb
lgs
jb
mov
jp
dec
dec
xchg
mov
or
pop
add
xchg
xor
xchg
ret
into
xorl
xor
imul
shrb
pushf
adc
stc
sbb
mov
pushf
and
cmp
mov
xor
pop
aaa
js
mov
pop
out
pop
mov
int
fildll
sbb
mov
push
sbb
pop
and
mov
cmpl
mov
push
push
mov
push
mov
ret
fstpl
scas
pop
xchg
outsb
ja
mov
mov
pop
call
stos
pop
shll
pop
daa
pop
push
in
out
idivb
outsb
sbb
ret
jge
jl
mov
pop
out
push
push
mov
sub
shrb
mov
inc
or
jge
xchg
dec
jl
bound
cli
int3
in
xchg
xchg
int3
push
in
pop
je
sbb
rcll
mov
lds
mov
mov
pusha
mov
jns
adc
jl
pop
bound
frstor
push
sbb
mov
sub
loopne
or
adc
jo
jne
mov
xor
inc
cmpb
mov
repz
mov
mov
mov
adc
dec
movsb
add
les
int3
sub
fwait
mov
outsb
icebp
scas
mov
mov
push
imul
mov
and
psllw
dec
scas
cmp
dec
cmp
sbb
mov
dec
pop
add
fwait
dec
int3
inc
xchg
in
imul
sarl
and
xchg
fisttpl
mov
sub
cli
cwtl
pop
mov
mov
aas
hlt
shlb
xchg
leave
in
xchg
mov
mov
sub
fldz
jnp
inc
mov
adc
jl
jne
into
and
mov
inc
rorb
pushf
stc
icebp
test
push
jl
sbb
notb
enter
or
xchg
fs
sbb
push
pop
outsl
pop
test
fwait
mov
adc
pop
inc
xchg
pop
xchg
cmpxchg
arpl
cltd
cmpb
lock
sbb
fisttpll
out
cmc
mov
and
inc
sub
cmp
dec
shlb
adc
popl
in
cmpsl
or
packsswb
into
cmpsl
test
bound
pushf
in
xchg
jo
mov
cmp
xlat
push
mov
or
xchg
and
shrl
mov
mov
int3
cmpsb
dec
jo
sbb
add
xchg
mov
imul
add
sbb
popa
mov
sbb
xchg
punpckhwd
or
sub
xchg
cld
jl
adc
out
stc
jp
loope
xor
out
add
jmp
addr16
jp
inc
fwait
pop
or
stos
pop
cmp
cmpsb
in
scas
mov
xchg
jge
add
pop
jg
jmp
dec
xor
imul
ret
addb
lcall
mov
in
adc
push
inc
ret
mov
nop
repnz
int3
imul
rcrl
lahf
push
dec
mov
and
outsb
pusha
daa
das
mov
insl
int3
dec
xchg
dec
mov
out
and
mov
xor
pushf
ret
mov
sbb
fadds
dec
jg
fstps
bound
sbb
sti
aad
lret
cmpsb
mov
loope
push
pop
mov
sahf
jne
adc
dec
std
pop
arpl
mov
scas
mov
pop
mov
daa
rolb
jns
lcall
leave
int
out
insb
jp
xlat
lods
dec
data16
cmp
pop
push
mov
dec
xchg
das
mov
insb
and
movsl
out
jmp
in
aam
addr16
imul
adc
sbb
cltd
jg
mov
jle
push
imul
lret
mov
inc
inc
dec
sbb
jle
adc
mov
jecxz
js
pop
sbb
pop
mov
mov
inc
mov
out
in
lcall
stos
ja
inc
nop
adcl
pop
out
jp
mov
xchg
mov
jno
loop
and
arpl
mov
push
and
das
into
jbe
push
cwtl
shll
pop
xchg
movsb
or
push
or
imul
mov
popa
xor
xchg
or
add
mov
mov
cmp
nop
mov
mov
in
movb
mov
lcall
nop
cwtl
test
and
arpl
testb
adc
ret
fwait
shrb
mov
xor
leave
mov
xor
stos
adc
cmpsl
adc
mov
int3
xor
jns
mov
add
xchg
push
xchg
mov
xor
and
sub
lock
inc
xchg
cmpsl
ja
ja
sbb
dec
mov
lcall
xchg
xchg
test
xor
adc
js
addl
jne
sbb
add
or
leave
xchg
ss
idivb
gs
cmpl
inc
jl
fwait
mov
inc
push
cld
outsl
push
icebp
lock
xchg
cmp
adc
test
stos
or
lret
mov
dec
test
loopne
inc
dec
pop
std
mov
sbb
jno
mov
mov
adc
xchg
xchg
movsb
in
mov
icebp
int3
xlat
and
cs
mov
icebp
and
xor
movsb
and
out
jo
cwtl
push
fildll
push
aad
or
js
daa
orb
push
add
imulb
jns
sbb
mov
adc
sub
xor
mov
xchg
jl
mov
and
icebp
adc
mov
or
das
inc
popf
ss
into
cmp
push
pminub
cltd
mov
leave
xor
repnz
mov
push
mov
inc
or
xchg
jo
popf
push
scas
inc
sti
push
ss
pop
aam
sbb
fwait
in
xchg
mov
sarb
lret
pop
cli
push
jl
xlat
push
out
fisttpll
fimuls
faddl
scas
mov
sub
xor
pushf
faddl
bound
fs
mov
stos
mov
mov
les
in
cmp
dec
cmpsl
adc
push
push
jg
xchg
mov
xor
repnz
dec
and
out
lret
dec
pop
push
pop
mov
sub
sub
js
jl
out
loopne
xchg
sub
ss
imul
scas
mov
lods
aas
leave
gs
inc
repnz
adc
dec
imulb
mov
mov
into
loop
mov
xchg
enter
ret
mov
frstpm(287
adc
into
mov
mov
adcb
push
dec
fadd
and
sbb
jb
test
mov
js
inc
xchg
mov
xchg
repz
enter
sub
or
lahf
xlat
shlb
fldcw
stos
stos
outsb
popa
mov
mov
call
lret
mov
adc
jmp
scas
jno
jns
pop
inc
jecxz
push
outsb
xlat
bound
into
aas
mov
or
dec
gs
sbb
mov
fstp
dec
and
sbb
addr16
mov
arpl
lcall
xchg
rcr
pop
sbb
mov
adc
subl
fstp
add
add
jl
mov
aas
adc
pop
push
call
dec
xchg
cltd
cli
popa
push
inc
xchg
xchg
mov
xchg
stos
in
repnz
jecxz
sbb
pop
cmc
sarb
mov
nop
sub
mov
loope
pop
stos
loope
mov
and
jg
and
ja
cmc
mov
adc
fwait
data16
subb
inc
jno
mov
add
insl
adcb
aas
push
in
sub
data16
mov
adc
cmp
xor
pop
pop
adc
leave
test
fnsave
mov
rorl
pop
sar
lcall
add
sbb
xor
xchg
pop
ljmp
fs
push
mov
add
scas
jae
xchg
hlt
push
lods
ffree
test
add
push
nop
fwait
dec
and
int3
xor
shl
outsb
cmpsl
xchg
andb
lea
test
ds
scas
jle
jnp
sbb
cwtl
sti
je
dec
in
dec
mov
mov
addr16
lock
mov
andb
mov
jge
icebp
das
movsb
inc
jae
cmp
mul
das
mov
lahf
or
jb
adc
jno
adc
aaa
mov
pop
shll
pusha
xor
cmp
mov
mov
mov
cmc
loop
mov
add
ljmp
in
xor
into
sbb
push
and
fstpl
popf
sub
dec
in
rolb
mov
jmp
lods
fwait
push
cmp
xchg
sbb
push
inc
out
js
fdivrl
into
fisttpl
and
je
add
dec
mov
cmp
movsl
inc
addr16
mov
sbb
sbb
es
mov
jb
aas
bound
aad
test
subl
adc
or
mov
or
jns
jg
jle
das
mov
bound
arpl
inc
ds
outsb
fsubrs
pop
cmp
pop
or
ret
xor
inc
insb
dec
fstpt
imul
out
loope
dec
jge
push
out
inc
xchg
push
mov
lods
mov
add
jg
jae
mov
fistps
test
xchg
test
mov
inc
into
lret
push
xor
into
popf
pop
scas
dec
fcmovb
xchg
aam
lret
dec
cmp
and
mov
imul
pop
inc
lcall
jge
cmc
push
xor
and
xchg
xchg
mov
cmpsl
push
sbb
not
lock
inc
out
leave
add
push
call
popf
imul
mov
lret
push
mov
int
pop
aam
popf
jne
and
xchg
int
dec
pop
aaa
shl
repnz
push
testl
xor
pop
in
dec
cmpb
dec
jl
xlat
inc
mov
loopne
stc
mov
dec
sbb
out
pop
loope
adc
dec
mov
pushfw
ret
cmp
in
dec
xchg
xchg
leave
ret
mov
lcall
fsubrl
ror
ret
xor
or
push
subb
fstpl
mov
adc
in
scas
insl
popf
popf
mov
and
psubd
andl
dec
dec
out
sbb
xchg
incb
dec
nop
mov
mov
fisttpl
outsl
push
xlat
call
adc
pusha
add
shrb
stos
test
nop
push
filds
sarb
dec
sbb
pop
into
xor
popa
aam
cmp
in
xor
cs
push
dec
xor
scas
pop
aam
xchg
push
mov
hlt
pusha
or
dec
xchg
incl
idiv
out
es
enter
pusha
mov
sbb
loopne
ret
push
mov
iret
lahf
test
pop
sbb
iret
inc
adc
je
pop
insb
sbb
cmp
mov
test
mov
cwtl
jae
incb
pusha
xchg
movsl
into
mov
shrb
les
test
int
imul
jge
dec
std
stc
ljmp
test
int3
push
arpl
repnz
push
xchg
jae
into
dec
mov
xlat
fwait
sbbl
stc
dec
aas
push
jo
int3
js
xor
push
add
push
xor
mov
mov
dec
icebp
ret
gs
pop
dec
xchg
push
adc
xor
jo
mov
sub
mov
negb
inc
jl
inc
cltd
add
lcall
push
sbb
ffree
aad
mov
jmp
stos
dec
and
lss
sub
sbb
in
nop
add
call
loop
cmp
pop
add
es
sub
xchg
mov
pop
push
mov
inc
dec
push
add
sub
stos
cltd
mov
sti
jae
pusha
ror
sahf
sbb
sarl
shrb
fildl
insl
xchg
dec
pop
xchg
js
or
pop
mov
dec
and
fs
in
shl
ret
mov
test
push
dec
xchg
dec
std
ret
jecxz
sub
adc
ljmp
insb
or
call
cmpsb
dec
jg
push
rcrl
scas
aad
int3
ss
cmc
std
push
add
or
adc
jno
loopne
lahf
nop
jne
xchg
fxch
lock
pop
xor
mov
add
push
outsb
fcoms
sub
cmpl
jne
or
cltd
fistpll
fcoms
xchg
popf
notb
mov
ret
adc
lea
pop
mov
push
xor
lret
cmpsb
fcomps
sub
sbb
ret
jle
imul
stc
ds
cmpsl
jecxz
rorb
add
in
popf
sub
fldl
icebp
jns
xchg
hlt
out
imul
mov
push
imul
cmp
test
lods
jb
nop
xlat
imul
out
and
cmp
mov
in
sub
fldenv
xchg
xlat
arpl
jmp
repz
mov
adc
daa
scas
add
cmp
icebp
hlt
pop
cmpsb
dec
dec
es
inc
mov
lea
dec
inc
imul
lahf
std
jae
int3
cltd
dec
dec
and
add
fnsave
mov
pop
repz
call
jl
ds
ret
insb
cmp
mov
mov
xor
iret
mov
inc
add
shll
fwait
mov
fmul
cmp
push
mov
lret
pusha
mov
inc
jl
push
sti
pop
cmc
aad
std
mov
shrb
cli
jnp
pop
std
lea
mov
sbb
cli
cmp
cmp
add
pop
inc
cwtl
imul
or
out
shrb
cli
push
lods
adc
rorl
lret
cltd
mov
pop
nop
pop
mov
mov
dec
scas
pop
outsl
jge
cmp
pcmpgtw
xchg
jbe
or
int3
aad
lcall
mov
cmpsb
shlb
lahf
lods
cmpsb
mov
cmp
add
or
dec
outsb
cmp
jae
fistl
xlat
gs
adc
lahf
xor
mov
fwait
mov
cmp
imul
mov
test
jo
mov
mov
sub
hlt
ds
inc
inc
xor
jbe
ds
sbb
inc
adc
adc
flds
mov
xchg
mov
call
fs
pop
and
enter
inc
pop
xchg
jne
sub
stc
int3
jecxz
add
call
ret
sub
push
out
sbb
stos
cmp
ss
popl
jbe
mov
or
aam
push
cld
sub
repz
push
jbe
dec
cmp
ja
and
or
fs
add
mov
cmpsl
addb
sub
push
dec
inc
rolb
ss
mov
mov
clc
inc
mov
lea
pop
inc
pop
and
xchg
lock
repz
jmp
sbb
nop
mov
ficoms
out
inc
mov
cli
push
inc
pop
clc
shl
bound
add
pop
dec
mov
in
ficomps
cmpsb
pop
jns
mov
sbb
arpl
roll
or
in
shlb
cmpsb
imul
lret
stos
movsl
iret
push
push
xchg
fcmovnb
inc
stc
xor
popf
shl
jp
xorb
loope
pop
mov
and
xchg
jnp
push
push
xchg
into
sbb
iret
xor
lods
xchg
faddp
mov
sub
jns
ja
xorb
imul
adc
fs
mov
mov
filds
push
shll
inc
rclb
jbe
and
ja
clc
push
in
add
push
jnp
stos
lea
fildl
lods
lds
and
subb
je
xchg
pop
sbb
lcall
scas
inc
sbb
repnz
mov
ss
mov
mov
mov
insb
outsb
fcmovnbe
cmp
push
adc
add
cld
in
mov
add
or
in
dec
add
sbb
xchg
jae
adc
sub
and
mov
sbb
and
les
xchg
pop
leave
arpl
sets
push
lcall
xor
and
xor
xchg
mov
xor
ja
jnp
fwait
or
ss
lock
ja
xchg
mov
xor
lcall
lea
or
mov
pushf
and
and
dec
push
fidivrl
push
xlat
jno
movsl
in
add
jecxz
in
adc
jmp
ljmp
lret
shrb
loop
sbb
jp
mov
out
mov
fwait
add
push
fs
cmpl
test
mov
pop
fcmovb
cltd
fsubrs
lret
adc
stos
iret
fldenv
cmpsl
add
pop
bound
mov
cmpsl
adcl
lahf
insl
and
mov
mov
xor
xchg
inc
push
and
loopne
aaa
push
das
cs
sti
sbb
pop
and
sub
insb
out
dec
mov
cmp
iret
cmc
lds
mov
ret
cmp
jnp
mov
pop
test
outsl
pop
in
out
jmp
cli
cmp
sub
rorb
mov
mov
push
cmp
and
add
mov
jb
cwtl
aam
jg,pn
push
imul
xor
jnp
pop
popf
stc
inc
mov
pop
and
test
loopne
ja
ja
lods
fisubrs
cmp
cmpsb
push
call
xchg
adc
mov
rorl
jg
sub
in
lcall
sbb
sbb
xchg
aas
dec
punpckhdq
jae
fwait
ret
cld
frstor
or
das
jecxz
add
pop
push
adc
arpl
xchg
cmc
jge
divb
sub
fcomps
sahf
insl
dec
push
js
lods
xchg
ljmp
ficomps
jmp
mov
push
cld
jmp
inc
movsl
mov
hlt
lahf
jge
es
xchg
jae
mov
push
in
insl
adc
mov
pop
pushf
fsubrp
int
mov
mov
xchg
iret
adc
mov
mov
xor
popa
aam
out
imul
add
stos
sub
adc
lods
dec
fwait
or
rcr
adc
sarl
jb
jb
jnp
imul
mov
rcrb
adc
insb
insb
mov
lret
jge
aas
fstpl
pop
xor
pop
xchg
shrl
xor
mov
lea
cmc
outsl
jno
dec
fxch
aam
and
add
xchg
or
insw
shl
cmpl
push
cli
les
dec
repnz
sub
push
das
mov
and
push
arpl
psubw
xor
mov
mov
rcrl
int3
std
xor
fs
or
and
mov
jecxz
fcompl
push
rcll
push
jg
movb
mov
shlb
or
mov
shlb
hlt
mov
or
andb
jns
stos
dec
loope
jge
movsl
shrb
iret
mov
insb
add
fnstsw
ja
sbb
xorb
outsb
cwtl
dec
sbb
cmp
roll
mov
xor
mul
mov
jg
mov
xchg
inc
jbe
ljmp
ss
push
cmp
stos
sahf
enter
ja
xor
nop
test
imul
push
pop
add
addr16
or
xor
and
insl
fldenv
sub
cmp
add
inc
sub
adc
inc
jns
mov
test
and
hlt
sbb
cmc
stos
pop
call
push
aas
popa
in
jmp
sub
xchg
jns
stos
imul
iret
cwtl
fucom
js
sbb
push
cmp
addl
pushf
out
lret
xor
cmpsl
cmpl
inc
add
inc
mov
mov
lods
and
add
or
add
stc
add
xchg
jp
lahf
stos
scas
jb
adc
xor
mov
xor
cli
fsubrp
int
pop
into
and
mov
jbe
outsb
jecxz
or
cmpsb
ljmp
push
es
cld
test
arpl
outsl
divl
add
mov
sbb
pop
mov
xchg
pop
pop
mov
dec
pushf
mov
adcb
fs
dec
cmpsb
jne
adc
dec
dec
sub
add
mov
scas
and
mov
nop
cmp
mov
xchg
pushf
fldcw
jp
mov
inc
insb
mov
cwtl
xor
inc
cmp
xor
xor
arpl
out
popa
inc
mov
jl
imul
stos
outsb
mov
add
jle
data16
fwait
mov
xchg
iret
aad
push
lret
stos
push
stos
ret
loopne
mov
dec
xchg
shlb
mov
je
loop
data16
mov
out
shll
aad
add
push
test
xor
cli
mov
lahf
cld
mov
test
sbb
sub
fimull
push
pop
hlt
ja
xor
lds
sarb
dec
or
lretw
adc
xchg
jnp
or
or
jle
mov
push
mov
lret
aaa
shlb
push
lea
int3
test
aaa
data16
sahf
lea
mov
adcb
imul
cmc
push
dec
das
lahf
gs
mov
cmpl
stc
fstps
lret
cmpsl
sarb
ret
rorb
cmp
xlat
or
cmc
xorb
xchg
push
fisubrs
dec
sub
xchg
stos
cmp
insb
jge
adc
insb
or
stos
in
jnp
cli
insb
cwtl
mov
and
inc
inc
ss
mov
or
xor
fnstsw
stos
mov
ljmp
aaa
in
lret
fildll
cmp
mov
pushf
sub
das
inc
xor
push
or
sub
gs
movsb
in
mov
or
jl
add
xor
sbb
rcrb
push
mov
in
aad
xadd
push
or
lock
subb
cmc
mov
push
fsub
nop
hlt
je
adc
or
add
lock
sub
inc
imul
ds
xor
mov
gs
or
cmp
and
adc
and
mov
dec
jecxz
mov
add
add
mulb
aas
push
push
dec
lret
daa
cmpsb
mov
and
scas
push
push
and
addl
nop
inc
mov
sub
scas
aad
test
sub
dec
add
neg
push
in
cwtl
cmp
pop
insl
fisubrs
sti
jae
mov
sbb
and
daa
cmp
iret
adcb
ficomps
clc
xchg
add
jae
insl
sbb
rcll
and
fwait
cmpsb
pushf
imul
ds
xchg
xchg
ja
mov
lcall
pop
jp
aaa
sub
stos
sbb
movsl
aaa
stc
push
scas
or
push
sbb
sbb
inc
push
sub
adc
int
enter
push
gs
or
push
mov
fs
jg
jns
and
push
push
into
mov
cmp
pop
dec
bound
repnz
sub
mov
decl
mov
mov
dec
ret
add
aas
je
adc
mov
insb
push
jbe
stos
push
adc
icebp
jno
inc
jno
xchg
dec
push
cltd
fisubrl
cld
loope
pop
lret
repz
fsubs
andb
sbb
jmp
adc
movsl
mov
pusha
push
mov
jo
or
scas
popf
xlat
hlt
das
inc
dec
xor
ja
push
ret
stos
mov
shlb
mov
stos
and
outsb
mov
mov
jecxz
pop
cli
and
jge
sub
rcll
or
nop
add
mov
xlat
jge
int
lds
pop
sub
fisubs
push
ds
push
aam
inc
jno
aas
bound
out
cld
movsb
dec
xor
mov
add
jp
jle
imul
lods
or
cmc
mov
fcomps
mov
xchg
mov
pusha
mov
inc
icebp
addr16
outsl
repnz
divb
addr16
das
rcll
jg
xor
repz
imul
mov
icebp
or
cmpb
jg
xchg
test
mov
imul
call
xchg
jnp
pushf
addb
dec
jnp
fdivrl
gs
insb
cmc
call
scas
add
jbe
ficoml
in
push
loope
imull
scas
popa
cmp
jne
adc
enter
movsb
aam
add
cmp
fwait
dec
add
pop
ret
cmpsl
inc
cmp
lret
xchg
xor
add
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
dec
out
cs
jmp
bound
pop
sbbl
out
lret
inc
push
fistpll
or
call
ret
push
push
clc
daa
ror
mov
sbb
test
mov
cmp
clc
sub
imul
inc
into
nop
call
ss
sub
lahf
push
jo
push
dec
mov
out
sub
jmp
sub
repz
push
sti
add
pop
push
sub
test
ljmp
xchg
push
ss
in
lahf
cmpb
jnp
mov
push
outsl
pop
rorb
mov
sahf
out
cwtl
xor
add
and
pop
nop
jo
in
jb
mov
cmp
cwtl
mov
inc
rcrb
xchg
test
jge
push
sub
int3
fidivl
or
xor
test
cmp
enter
bound
mov
mov
inc
scas
out
ljmp
push
ds
cmp
or
mov
xor
test
push
lock
sub
shll
cmp
movsl
test
test
repnz
aas
nop
lock
lcall
xor
push
aad
sub
pop
popa
adc
cmp
push
data16
and
and
imul
pushf
dec
jge
mov
pop
push
int
lret
enter
dec
xrelease
cmp
xchg
xchg
repz
push
cmpsl
pop
pusha
adc
outsl
jae
lea
add
les
sbb
mov
ror
xor
jb
fs
jb
mov
adc
stc
xchg
push
xchg
jnp
xchg
push
push
sub
push
loop
push
lods
dec
sub
repz
lret
sahf
jl
dec
add
iret
mov
mov
pop
mov
shrl
pop
fdivl
adc
push
xchg
dec
orl
pop
outsb
push
inc
dec
imul
into
sahf
mov
lahf
movsl
jbe
add
push
ret
and
jne
mov
dec
js
mov
mov
imul
stos
cs
xchg
lods
test
mov
pop
ja
insl
aaa
fistpll
cmp
mov
mov
nop
and
loopne
cli
bound
cmpsb
lcall
and
movsb
or
or
sub
push
sub
data16
mov
sub
push
out
push
cmpsb
das
rolb
xor
sbb
and
adc
arpl
fcoms
aas
jnp
rorb
mov
aas
add
dec
inc
iret
sahf
in
mov
pushf
loopne
shr
inc
fidivl
mov
nop
adc
add
je
addr16
inc
fistpll
faddl
lahf
gs
repz
jge
rcll
aas
int3
cltd
lret
jne
and
push
je
xor
push
insb
mov
pop
iret
int
adc
imul
sarb
xchg
mov
mov
insl
add
int
scas
adc
adc
sti
or
xchg
push
xchg
movsb
lahf
mov
mov
das
fs
and
leave
sub
outsl
push
cmpsl
fdivr
jbe
or
jecxz
ja
loopne
mov
mov
adc
pop
xchg
mov
cmp
std
mov
mov
bound
xchg
cmpb
fmull
ret
shl
lea
mov
push
popa
nop
mov
dec
xor
loope
pop
xor
xchg
mov
scas
dec
pop
xchg
test
das
cmp
jle
inc
fsubs
enter
or
jns
mov
mov
int
push
test
jge
push
cmp
push
lahf
mov
out
jns
lcall
stos
xchg
jno
dec
and
lcall
and
xchg
loope
arpl
sub
and
jle
sbb
out
std
mov
jecxz
pop
shlb
add
adc
mov
dec
repz
imul
in
push
in
and
inc
ds
add
mov
jae
mov
es
xchg
jb
xchg
mov
mov
scas
xchg
jmp
das
mov
dec
int3
lret
adc
cmp
in
mov
inc
adc
add
repnz
dec
mov
or
pusha
outsl
lds
add
imul
jo
in
push
iret
lahf
dec
into
sbb
dec
dec
adc
push
roll
xchg
xor
or
imul
aam
and
fdivs
sbb
insb
xchg
xchg
xor
xor
xchg
cmp
xor
lods
jne
mov
das
xchg
lret
les
push
add
popf
push
repz
sub
cwtl
cmpb
aam
mov
mov
xchg
jg
in
fsubrl
inc
mov
mov
movsl
cmp
xchg
cmpsb
je
add
test
test
mov
mov
inc
push
fistpl
divb
mov
fimull
mov
jbe
stc
stos
pop
repz
mov
fwait
sti
push
add
sbb
mov
stc
ret
ret
jp
ds
pusha
mov
pop
hlt
or
pop
ret
popa
mov
mov
aaa
add
cmc
dec
int
adc
inc
lcall
ret
pop
inc
jae
imul
adc
push
cld
outsb
enter
out
ja
push
add
fwait
sub
add
cltd
das
imul
fsubrl
add
jno
jge
insl
cmp
nop
addl
movsl
mov
inc
fisubs
dec
and
int
ficomps
push
out
push
cld
mov
jl
mov
test
xor
and
iret
imul
aam
jno
and
lcall
ljmp
mov
xchg
mov
imul
xor
push
dec
aaa
out
mov
inc
loope
xchg
xor
cli
pop
jl
jl
add
call
arpl
push
fxch
ljmp
cli
repnz
stos
dec
sub
or
xchg
sarl
jmp
push
mov
aaa
push
or
dec
shl
in
sbb
cmp
and
sbb
pop
out
sbbb
sub
adc
fists
stc
and
enter
inc
xchg
sub
jecxz
jp
xchg
test
mov
jne
lret
inc
or
cmc
test
in
xor
add
pop
mov
mov
mov
popf
pop
das
gs
arpl
xchg
and
adc
testl
jg
dec
jb
or
pop
cmp
mov
sub
xchg
inc
cmp
out
inc
jb
fucomp
mov
inc
xor
fs
addr16
cmp
imul
aam
mov
dec
fisubrl
popa
jge
pop
insb
icebp
imull
dec
pop
or
inc
push
lods
mov
sarb
ds
and
shlb
mov
mov
push
adc
or
sbb
and
data16
int
xlat
xchg
sti
jbe
dec
mov
mov
xlat
jb
arpl
mov
mov
push
jnp
ret
lds
or
sarb
xorl
stc
add
push
cltd
adc
pushf
or
rcll
test
lret
jge
and
pop
cwtl
sub
imul
call
push
push
insl
and
das
pop
inc
lods
jp
jg
dec
mov
lods
add
add
sbb
sbb
pop
cmpsl
sub
jbe
jp
push
test
nop
dec
in
push
mov
lret
imul
bnd
shr
aad
cmp
clc
inc
bound
or
sub
dec
outsb
aad
cmpb
dec
jo
mov
aad
jno
mov
xchg
lods
cmp
fwait
aad
data16
int
loop
cld
and
cld
cld
sub
dec
ds
fcoml
pop
or
daa
notb
pusha
and
xor
popa
push
fsubrl
test
cs
into
outsb
mov
pop
addl
fisubrl
insb
into
jbe
outsb
xor
mov
enter
inc
mov
rcl
or
insl
xchg
mov
in
sbb
mov
jmp
int
sbb
xor
add
lahf
mov
pushf
mov
cmp
jge
jecxz
jecxz
jne
and
js
push
and
push
bound
std
adc
fidivrs
adc
leave
movsl
rcl
jae
mov
add
cmp
call
dec
push
aam
test
xchg
push
hlt
cltd
ds
and
imul
mov
sbb
rcrl
cmp
repnz
inc
push
repnz
fisttpll
xor
xchg
add
mov
cltd
mov
ljmp
enter
adc
sbb
and
das
xor
xor
cmc
int3
xchg
cld
rorl
lret
bound
das
pop
divl
and
cmpsl
lret
push
lea
push
fisttps
mov
mov
testb
adcl
idivl
cltd
adc
jmp
js
or
jp
inc
xlat
and
fisttps
dec
js
icebp
push
and
xchg
pop
test
sbb
mov
sub
mov
mov
jb
call
stc
es
nop
vhaddps
sub
test
jecxz
das
dec
out
stos
mov
jbe
adc
mov
or
cmp
and
mov
inc
mov
inc
xor
in
ds
arpl
or
sub
fwait
jns
push
ljmp
or
or
roll
add
push
sub
adc
jno
dec
and
lcall
mov
fst
repnz
jno
inc
in
or
dec
push
mov
sti
sub
aam
xchg
hlt
mov
sarb
iret
add
in
xorb
mov
add
inc
outsb
fpatan
lods
mov
mov
cwtl
adc
or
mov
push
pop
and
outsl
push
movsl
push
sbb
sub
xlat
or
outsl
cmp
mov
adc
jnp
test
mov
pushf
scas
mov
in
adc
inc
mov
dec
sbb
aad
mov
outsl
xor
sbbb
loopne
cmpsl
lods
sbb
into
data16
roll
test
mov
jp
gs
sbb
mov
or
adc
movl
jnp
jle
mov
subb
cmp
lock
popf
movsl
pop
mov
iret
and
es
sbb
mov
and
movsl
xchg
xchg
les
mov
mov
cld
and
es
dec
arpl
push
xor
mov
je
sarb
lss
dec
jl
aam
mov
dec
mov
and
push
xor
add
mov
xchg
loopne
pop
orb
ret
call
shl
mov
jno
add
arpl
les
add
jb
addr16
xor
jnp
lcall
sub
pop
jg
jne
jge
insb
cmp
rcll
pusha
mov
pusha
mov
xlat
xchg
xchg
les
pop
push
ret
pop
sub
sarb
mov
andl
in
addr16
scas
imul
mov
mov
jbe
mov
mov
loopne
lods
adc
sub
lahf
jo
adc
fcomps
push
cmp
mov
jmp
scas
jo
jg
loopne
dec
lock
dec
aam
jmp
push
mov
push
movups
ret
xor
pop
dec
adc
bound
or
sbb
arpl
aad
and
xor
mov
cld
cli
pop
addb
sub
sbb
je
push
jb
gs
dec
adc
jo
lock
inc
lea
xor
ds
mov
aas
and
pop
mov
dec
dec
pop
mov
into
std
aam
cmp
xchg
or
out
fisubrs
adc
mov
out
xor
jno
nop
cmp
sti
add
and
roll
rcrl
cli
movsl
lcall
sub
stos
xchg
push
cltd
lock
lock
movsb
sbb
shr
sbb
jmp
mov
or
sbb
and
xchg
mov
mov
xlat
and
inc
sbb
lods
sub
mov
push
call
xor
pop
mov
leave
negb
fisttpll
arpl
scas
mov
cmp
or
insl
or
imul
or
stos
fidivl
xchg
cmpsb
scas
and
mov
outsb
sub
push
iret
lret
or
lahf
jmp
mov
js
or
add
cmp
lcall
mov
lea
int
mov
cmp
push
jbe
pop
mov
sub
xchg
lock
mov
rcrb
insl
out
push
into
les
les
push
daa
sbb
mov
in
ja
gs
dec
inc
icebp
ljmp
filds
jecxz
outsl
add
lods
or
pop
dec
aad
pop
push
cmp
lret
or
xchg
movsb
adcl
fstpt
loope
out
out
mov
out
pop
cs
call
out
add
or
ret
test
jo
pop
xor
mov
sbb
div
int
inc
adc
fwait
cmp
adc
adcb
jmp
add
sarb
push
scas
dec
mov
adc
call
push
dec
and
dec
dec
adc
mov
in
inc
in
daa
lret
add
ja
lea
stos
aaa
ja
xchg
dec
popf
jns
mov
mov
pop
mov
outsl
push
sti
sbb
iret
repnz
rorl
stos
cli
cmp
roll
push
inc
push
in
shlb
sub
add
js
lcall
movsl
adc
jnp
lods
insb
pop
pop
test
dec
inc
pop
sahf
lret
sti
dec
xchg
aaa
fsubs
into
negb
mov
sub
icebp
movsb
jp
sti
fdivl
popa
cmp
popa
aas
mov
scas
dec
pop
jle
xlat
and
xchg
sub
inc
adc
inc
mov
imull
inc
mov
daa
xchg
ret
sbb
incb
sti
push
iret
daa
imul
aas
iret
in
lahf
inc
mov
mov
sub
xchg
mov
cmp
fimull
mov
enter
dec
sub
inc
mov
fmull
stc
push
stc
sub
imulb
clc
les
xchg
push
rorl
adc
insl
mov
cmp
in
int3
mov
in
xchg
push
jo
or
add
imul
sbb
in
pop
movb
sbb
add
push
mov
mov
sub
cmp
mov
das
int
sbb
mov
sbb
idivb
loope
dec
adc
les
loop
icebp
pop
frstor
jb
jecxz
mov
mulb
fistpll
das
cwtl
push
fcomp
outsb
push
aas
mov
mov
xchg
ja
test
adc
bsr
jl
lods
mov
sbb
mov
xchg
stc
pushf
adc
rolb
mov
ret
adc
cli
or
sub
loop
insb
mov
fistl
in
fidivrl
stc
rolb
sbb
and
mov
pop
inc
xor
sub
xchg
jmp
adc
jl
lds
subl
and
push
outsb
or
inc
testb
stos
ja
push
or
sub
sbb
xchg
mov
in
data16
loop
adc
xor
jno
pop
popf
jo
fildl
xchg
loopne
in
cli
loopne
jecxz
or
xchg
lcall
leave
cmp
mov
jb
jge
shl
push
or
adc
xchg
cmpsb
dec
or
xchg
sbb
dec
out
push
jnp
ja
jg
xchg
je
dec
arpl
jne
aam
sti
fmul
inc
xor
xchg
mov
stos
jmp
stc
int
lods
push
pusha
shlb
dec
fstp
sub
insb
jb
sbbl
xchg
bound
pop
shlb
lea
cmp
dec
daa
lret
shlb
or
dec
jb
jl
call
movsb
js
fwait
xchg
cmp
push
or
mov
scas
daa
sub
lods
lret
add
push
shl
mov
dec
imul
cmpsl
pop
push
jae
leave
cld
jge
mov
pop
sbb
das
lahf
sbb
ss
adc
xchg
ret
push
lock
push
sub
push
adcl
sbb
sbb
imul
testl
mov
dec
test
jecxz
dec
mov
push
fidivs
insl
cmp
pop
insl
mov
outsb
mull
test
pop
or
insb
addr16
xchg
cmpsb
inc
out
mov
mov
cmpsb
cmpsb
pop
addl
pop
rolb
pop
lret
hlt
js
or
insl
mov
addr16
repz
push
jmp
cmc
jbe
aad
add
idivb
sub
pop
mov
cmp
xchg
loope
push
jae
inc
cwtl
cmp
or
rcpps
iret
lds
xor
lcall
push
mov
mov
xchg
add
mov
or
sbb
xchg
or
enter
add
sub
mov
outsl
ljmp
insl
sub
push
rcrb
pop
loop
sub
mov
imul
add
push
imul
clc
mov
mov
or
pop
popf
jnp
ficomps
ds
cmp
mov
pop
testl
ret
mov
and
jge
fdivl
dec
sbbb
mov
cmc
xor
loope
pop
push
pusha
xlat
int3
jmp
mov
test
jmp
hlt
dec
pop
push
mov
addb
lret
xor
push
adc
and
xor
pusha
pop
hlt
dec
xchg
int3
xor
aas
jmp
or
jmp
cmpsb
xchg
insb
sti
pop
jmp
jo
sbb
mov
jle
ficoml
sbb
clc
hlt
cmc
pop
adc
fmul
push
jae
loop,pn
mov
fmul
mov
cmp
aaa
jb
mov
fwait
mov
cmp
inc
clc
xor
xchg
push
fiaddl
into
jno
push
xor
loopne
jle
fidivs
ret
pop
das
out
cwtl
aad
cli
jae
ja
cmpl
imul
fldenv
sub
enter
cwtl
mov
lea
imul
mov
push
adc
jae
enter
add
ret
in
jmp
mov
lea
icebp
inc
mov
push
clc
sbb
add
popa
or
ss
into
gs
jge
pushf
stos
ret
sub
xor
xor
mov
pushl
test
adc
sub
push
pop
sub
stc
insb
inc
lds
sahf
orb
ss
outsb
in
icebp
cmpsl
cmp
lret
insb
faddl
fwait
pop
scas
sti
cmp
or
sub
add
xchg
test
lcall
push
lret
inc
cltd
jnp
push
mov
xor
lds
cltd
jno
pop
xor
ds
pop
mov
insl
shrl
mov
mov
dec
cmp
stc
inc
sarb
or
ret
dec
xchg
cmp
pop
faddl
push
test
or
xchg
sbb
jae
jae
ret
add
scas
andb
out
cltd
xor
rolb
rcrl
lret
imul
jae
repnz
push
lret
rclb
cs
es
ds
push
mov
mov
std
mov
xor
aaa
cld
dec
inc
loope
xchg
in
and
loopw
scas
pop
xor
leave
mov
jmp
test
cmpb
popf
xchg
enter
pop
xor
stos
sbb
inc
and
fsincos
and
mov
sub
cmp
out
add
bound
ljmp
iret
and
xor
gs
repz
loopne
test
inc
bound
sahf
divl
push
push
subl
jmp
pop
sub
insb
sub
out
popf
pop
aas
repz
mov
sub
pop
lcall
mov
push
test
dec
adc
sahf
fnsave
add
lahf
retw
repnz
dec
jbe
lea
lahf
sub
or
cmpb
xchg
fmuls
lds
out
inc
sub
sub
push
hlt
loope
mov
insl
js
cmc
cmc
cltd
mov
or
mov
or
and
jne
lock
mov
bound
jmp
pop
sbb
repnz
adc
xor
pop
sub
decl
enter
das
cmp
cld
mov
das
or
addr16
dec
flds
outsl
mov
hlt
repnz
int3
insl
iret
test
add
cwtl
sub
xchg
and
sbb
fwait
push
sbb
std
mov
aam
inc
outsl
test
fistpl
xor
cwtl
es
or
shll
loope
xchg
popa
cmp
jg
mov
test
cs
xchg
mov
mov
pop
cld
lret
push
int3
mov
and
and
sub
popa
popa
icebp
aaa
lods
repnz
movsb
fistpll
mov
mov
sub
sub
sub
add
je
orl
and
mov
call
icebp
mov
sub
ja
dec
stc
not
jp
scas
sahf
push
test
or
inc
add
mov
fisttpl
cld
ds
adc
in
xchg
cmp
sub
xchg
jp
cwtl
aad
xchg
adc
cmp
adc
jnp
sub
and
jb
pushf
imul
repnz
dec
adc
mov
cmpsb
iret
shrb
jb
jns
ror
mov
lds
mov
mov
pop
daa
enter
jno
mov
fwait
jmp
adc
in
addl
outsb
push
cwtl
fs
dec
stos
inc
js
adc
add
xor
lret
bound
out
repnz
shlb
dec
hlt
mov
or
sbb
xor
mov
out
dec
lea
mov
lods
mov
ret
add
cmp
xor
into
sub
imul
cmp
sarb
dec
sbb
cmpsb
push
add
insl
jmp
loopne
sub
adc
popf
test
cld
into
mov
repnz
sbb
cmp
test
push
and
and
call
add
sbbb
push
in
stos
test
xor
movsb
lcall
out
fwait
xchg
int3
lret
sbb
lret
jge
adc
push
out
pop
enter
rorb
xchg
icebp
rcrl
cs
xchg
imul
add
enter
sub
arpl
mov
lret
lret
inc
push
pushf
xor
int
dec
inc
cltd
adc
in
fs
popa
jle
mov
push
dec
xchg
test
xchg
mov
xor
fdiv
orb
add
jl
mov
xchg
jo
mov
call
xor
push
sbb
jb
test
dec
cli
dec
dec
insb
outsl
sti
lcall
sbb
stos
or
jne
push
mov
mov
xchg
aas
add
sarb
xchg
pop
shrb
sahf
imul
fisubrl
or
inc
and
push
dec
xor
rorb
shrl
fmull
mov
push
movsb
push
sti
xor
cmpsb
adc
xchg
lret
pop
xchg
test
mov
je
stc
jle
sahf
loopne
nop
fwait
cmp
sti
cmp
push
inc
mov
loopne
movsb
call
push
mov
cwtl
add
fcmovnu
mov
mov
xchg
mov
aam
dec
cmp
mov
repz
stos
or
pop
xor
mov
pop
xor
mov
inc
push
cmp
and
or
xchg
push
jno
testl
fldt
loope
adc
fnsave
sahf
nop
in
mov
movsb
mov
push
and
push
sti
mov
sti
push
mov
aaa
cmp
fdivr
mov
jg
xor
xchg
icebp
push
lods
sbb
or
adc
cmp
imul
mov
or
rcll
xor
in
cmp
and
insl
not
stos
stos
xchg
mov
add
addb
mov
fstl
pop
cmpsl
test
push
flds
lds
orl
js
pop
test
mov
aam
shrb
xchg
mov
add
aas
mov
xchg
scas
adc
jl
pop
xchg
or
mov
and
xchg
rolb
jge
andb
cmp
dec
pop
faddl
shl
xchg
repz
test
mov
and
sub
aam
jne
and
insl
xchg
jns
and
push
icebp
aas
lret
in
cmp
mov
sub
icebp
push
cwtl
fimull
bound
scas
popf
lods
test
inc
pop
test
rolb
lock
xchg
aam
loop
add
out
and
repnz
mov
cmp
lahf
xlat
arpl
iret
xlat
filds
push
jne
and
scas
xchg
js
or
pop
sbb
and
mov
xchg
lcall
sub
rorb
jecxz
fmuls
mov
mov
sub
test
xchg
dec
out
in
mov
clc
pop
inc
jmp
mov
je
pop
push
add
popa
pop
aad
icebp
inc
lcall
mov
repz
iret
jmp
fldl2t
int
insl
pop
ss
or
push
ljmp
sub
mov
sub
cmc
xchg
adc
lret
out
inc
xchg
mov
adc
aaa
shlb
mov
mov
lret
popa
dec
dec
fnstcw
arpl
sub
inc
or
sub
mov
dec
imul
xor
adc
sbb
fidivs
int
sub
fucompp
out
mov
push
jmp
pop
add
mov
adc
loop
int3
push
pop
jns
xchg
mov
xlat
stc
add
fistpl
lret
mov
jae
jns
daa
cs
pop
int3
push
test
cmp
ss
jb
pinsrw
mov
mov
xchg
insb
popl
outsl
jae
xor
xor
mov
xchg
sbb
shrb
pop
cmpsb
les
aas
dec
aas
mov
in
dec
and
mov
mov
pop
mov
mov
test
mov
dec
inc
ljmp
enter
push
pusha
mov
or
mov
or
jg
pusha
mov
jne
sbb
push
nop
out
mov
pop
sbb
int3
repnz
mov
test
dec
in
in
outsb
push
dec
jb
dec
mov
xor
xorb
add
scas
mov
xchg
sahf
push
and
loope
std
jnp
test
jecxz
js
fldenv
push
adc
pop
in
cmp
pop
hlt
dec
cmp
ds
cmc
cmpsb
xchg
mov
hlt
fdiv
leave
inc
mov
xor
mov
push
ret
aaa
fstps
call
in
jge
cmp
outsl
sub
in
mov
and
add
xor
aam
inc
or
js
fimull
lods
movsb
cmp
call
push
cli
mov
inc
mov
out
xor
testl
out
rolb
loop
mov
and
aaa
sbb
dec
fimull
push
stc
aam
sub
inc
insl
icebp
test
pop
hlt
mov
add
lcall
insl
sbb
scas
arpl
push
push
dec
push
xor
ljmp
pop
and
add
jg
sarl
add
hlt
inc
and
ret
mov
cmpsl
cmp
adc
fistl
cmc
daa
das
orb
mov
jl
cmp
or
push
push
cmpl
inc
cmp
and
cs
adc
fiadds
lods
aad
cmpsl
push
add
adc
push
pop
cmp
das
insb
sub
mov
je
mov
pop
mov
les
sahf
mov
push
test
sbb
xor
cmp
mov
or
cwtl
in
lahf
push
notb
push
xchg
cmp
sub
pop
xchg
add
dec
mov
or
clc
xor
dec
inc
push
xchg
in
leave
push
sbb
hlt
scas
js
fisubs
rcl
jae
mov
jl
jae
out
stc
push
ret
cli
in
movsl
iret
cwtl
xor
fcoml
and
dec
push
and
outsb
repz
mov
sub
mov
aad
sub
dec
push
je
mov
out
pop
xor
cmpsb
and
imul
imul
packsswb
divb
adcl
dec
fstl
pop
stos
movsb
adc
jnp
int
xor
loopne
push
cmp
ficoml
mov
js
scas
hlt
repz
jmp
in
sub
es
sarl
push
jl
xorl
cmpsl
cli
or
jns
mov
lods
pop
and
insl
jne
into
int3
jp
stc
push
lcall
xchg
xchg
jnp
sahf
push
test
scas
stos
push
idivl
popa
push
ljmp
add
neg
push
dec
andl
mov
sub
push
enter
mov
cltd
pop
xor
jle
inc
and
scas
pop
loop
inc
xchg
push
sub
jno
inc
lret
repz
sub
mov
pusha
dec
cmc
xor
sbb
orb
sarl
je
mov
push
and
ret
pop
rcrb
out
xchg
ja
cmpsb
stos
icebp
sarl
int3
in
lahf
dec
outsb
mov
enter
cld
pop
daa
or
jno
rclb
ficompl
mov
lds
andl
fwait
xor
adcl
jmp
mov
dec
jb
xchg
xor
push
xchg
cmp
push
adc
addr16
loopne
subl
mov
ljmp
jl
fildl
cli
call
add
scas
fists
jno
dec
fucom
push
xor
test
mov
je
lods
inc
inc
inc
mov
pop
jmp
jbe
mov
dec
insb
jb
pop
imul
bound
sub
add
flds
xchg
rol
cmc
dec
push
or
loop
mov
mov
mov
jge
mov
lock
cmp
pop
add
imul
cmp
jae
das
das
push
outsb
or
gs
push
insl
test
into
sahf
add
xor
stos
into
imul
dec
jmp
push
cs
incb
repz
outsb
lcall
adc
call
daa
rol
add
roll
shrl
add
out
js
cmp
or
mov
mov
add
mov
scas
adc
sub
adc
mov
pop
lcall
movsb
lods
loop
repnz
sbb
xor
out
push
push
mov
loopne
in
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
imul
bound
pop
bound
mov
insb
das
arpl
push
filds
and
jae
mov
and
data16
nop
rcrb
pop
cmp
push
mov
rep
fcomip
mov
roll
dec
stc
push
jecxz
push
xorb
nopl
inc
or
pop
cmpsl
pop
pop
in
pop
sbb
sysenter
enter
daa
scas
push
dec
or
jno
je
jnp
sarb
jmp
lahf
cs
in
pop
push
jno
movsl
push
adc
add
or
cltd
enter
and
xor
jge
cwtl
cld
adc
mov
inc
xchg
jbe
out
shll
sbb
pop
jno
jnp
lds
repz
je
xor
mov
adc
fxch
subb
jecxz
or
jmp
pop
xor
adc
push
enter
jge
fwait
cld
mov
adc
rcr
and
lods
sbb
sub
xchg
aam
mov
xor
clc
xorl
sbb
shl
out
push
push
adc
mov
ja
cmp
inc
aas
ja
adc
dec
or
decl
or
into
jae
mov
dec
lahf
aam
sub
loope
adc
dec
lods
dec
lret
mov
fsubrp
aad
pop
jle
xchg
mov
push
call
xlat
or
fidivs
les
sub
sbb
rorl
add
push
stos
push
pop
ss
int3
xchg
pop
and
mov
jae
xchg
xor
call
adc
sbb
adc
movsb
outsb
or
lods
icebp
in
dec
leave
aam
scas
clc
cld
xchg
xchg
divb
add
mov
dec
sbb
repnz
mov
mov
dec
cmp
jmp
out
je
mov
add
sbb
lds
push
lock
loopne
dec
mov
mov
jbe
jns
gs
out
jmp
stos
movsl
pop
push
inc
psubd
dec
or
loope
cld
lret
jo
int3
add
mov
inc
mov
lea
jl
xlat
pop
and
test
lods
pop
test
adc
les
cltd
ds
sub
push
lcall
add
daa
rcrl
and
rcrb
data16
jno
xchg
subb
cmp
aas
into
in
pop
or
mov
call
add
mov
xchg
popa
lock
sbb
sub
cltd
cmp
mov
ja
imul
mov
ret
ret
jge
sub
push
stos
aam
pop
sbbl
pop
jb
outsl
fsts
fsubrl
dec
pop
lods
sub
inc
in
mov
inc
sub
les
adc
pop
ja
cmp
cmpsl
jbe
bound
xor
cmp
cmp
shr
mov
jg
orb
inc
adc
push
sahf
mov
pop
stc
aaa
xchg
mov
shll
cmp
inc
xor
sbb
xchg
pusha
lods
iret
and
push
sbb
vpcmpgtw
adcl
cmp
int
ret
dec
cwtl
mov
sbb
pop
inc
mov
ds
test
xchg
xchg
fdiv
push
test
out
and
push
fildll
jnp
ror
in
incl
pushf
out
jae
ds
repnz
aam
lcall
rorb
mov
inc
stos
xchg
xchg
inc
cmp
or
ljmp
pop
or
jne
lods
mov
mov
ljmp
std
push
aaa
adc
nop
inc
cld
clc
pop
sub
jmp
pushf
out
stc
cmp
and
xchg
xchg
dec
push
cmpb
icebp
loopne
jae
cmp
jne
test
push
mov
imul
jne
loop
subb
mov
sbb
ss
enter
int3
fdivl
fildll
push
js
ja
bound
mov
mov
out
ss
add
inc
push
xchg
xor
mov
mov
jnp
jle
dec
bound
mov
add
add
into
mov
pushf
lcall
mov
and
sub
push
or
mov
jbe
xor
sbb
dec
jbe
stc
and
mov
repnz
mov
stos
out
sbb
repz
mov
incl
cmc
ret
and
addl
sbb
dec
int
add
xchg
jmp
jle
outsb
cld
shlb
dec
mov
jb
popf
int
and
call
adc
mov
sub
inc
add
or
jmp
push
and
cmc
mov
sub
es
sbb
jle
push
jb
insl
adc
out
fsubr
sbb
sbb
outsl
sub
movsb
mov
loope
leave
pusha
imul
scas
cli
adc
or
das
sbb
ds
test
mov
add
fsubr
bound
addr16
mov
cmpsl
arpl
xchg
iret
mov
pop
dec
push
push
dec
sub
lock
xchg
shlb
push
mov
lds
insb
xlat
aas
stos
mov
je
fists
stos
imul
popf
arpl
or
dec
lret
cmp
mov
sahf
sub
in
outsl
or
test
cli
stc
sbbl
jb
cmp
ss
mov
adc
cmpsl
scas
mov
popa
lods
mov
pushf
mov
fcoms
jge
mov
in
arpl
into
mov
adc
les
cmc
popf
sti
sub
mov
cmpsl
sub
lcall
fistpll
bound
out
movsb
movsb
in
cmp
inc
lcall
cmp
pusha
and
shlb
mov
xchg
das
adc
out
icebp
rclb
push
push
ret
std
not
sahf
fptan
out
hlt
fwait
push
inc
mov
lcall
mov
jecxz
push
and
push
pop
das
icebp
push
rolb
es
push
mov
movsb
xchg
add
adc
xor
mov
mov
rclb
sbb
mov
or
or
xchg
roll
outsb
mov
call
lods
and
lcall
cmp
jmp
and
scas
jno
jae
lds
andb
jbe
gs
sarl
dec
les
int
adc
cmp
cmc
push
xchg
cs
ljmp
dec
push
dec
mov
mov
and
testb
dec
or
xor
pop
mov
xchg
call
adc
mov
sbb
mov
jecxz
faddp
jmp
pop
sbb
sbb
insl
sbb
test
outsb
mov
stc
popa
std
mov
xor
int
or
out
sbb
pop
push
add
or
push
cmp
sti
rol
inc
insl
pusha
mov
sarb
test
xchg
ljmp
aad
mov
xor
sbb
jecxz
lahf
mov
xchg
jl
adc
dec
sub
mov
fistpl
xlat
rclb
add
int
aas
add
push
push
sbb
dec
pop
mov
add
mov
outsb
push
int3
cmp
pop
cmpsb
mov
xorb
rcl
push
xchg
in
or
rorl
dec
clc
dec
push
push
rol
inc
pusha
popf
imul
sbb
jno
fdivr
stos
mov
xchg
test
andl
xor
push
mov
cmpsb
push
shll
aaa
sub
imul
mov
outsb
push
and
test
mov
and
xchg
inc
mov
out
mov
push
iret
sbb
and
push
inc
xchg
test
sub
std
dec
cld
popa
loope
rclb
pop
in
in
cmp
in
lcall
bound
pop
cmp
mov
out
ljmp
push
clc
push
mov
fsubrl
call
sub
call
sub
rorl
dec
pop
and
lock
or
pop
mov
jo
jle
decb
sbb
xchg
inc
das
shr
fcomp
add
adc
call
negl
cld
mov
push
xor
movsl
and
outsb
pop
jg
pop
pop
out
inc
sbb
cld
cmp
inc
xchg
outsl
push
insl
dec
push
jns
adc
or
loopne
cli
stc
aaa
and
pop
sarl
call
popa
scas
adc
jl
out
pop
mov
adc
jbe
sub
sub
or
lock
mov
cmp
sub
test
push
xchg
mov
adcl
mov
xchg
jbe
fucomip
cmp
sub
scas
mov
inc
mov
adc
push
and
jnp
jmp
cwtl
mov
enter
mov
cltd
push
mov
jle
sub
sbb
lock
das
fmull
mov
fwait
mov
inc
inc
pop
add
xor
jbe
adcl
insl
add
xchg
call
jae
lods
sub
sbb
lods
inc
inc
sbb
xchg
mov
movsl
setno
inc
int3
jp
cwtl
push
mov
add
dec
pop
sti
ds
push
dec
insb
scas
inc
push
xor
popf
lods
loop
outsl
xor
mov
inc
fcoms
jo
movsb
dec
or
jge
xchg
mov
nop
sub
iret
dec
into
jb
es
aad
sub
jbe
shlb
in
ds
repnz
pop
dec
test
in
cmp
pop
adc
or
mov
pop
aam
mov
int
neg
ds
testb
mov
imul
mov
lret
out
xor
push
fsub
dec
insl
ffreep
ret
inc
jno
sbb
jb
shrl
arpl
lds
pop
xor
loop
iret
jge
mov
adc
popf
aad
stc
pop
mov
fbld
jbe
dec
sbb
xchg
pop
or
xchg
sub
pushf
xchg
mov
push
mov
cltd
push
mov
adc
xor
sbb
or
push
movb
fnstenv
cmp
pop
sar
dec
int
hlt
shll
mov
out
dec
insb
jle
movsl
mov
mov
test
pop
test
ss
movsb
movsl
imul
jp
inc
dec
push
jg
imul
mov
sub
je
jns,pn
cs
and
add
xchg
insl
ret
mov
sub
cmp
push
hlt
xor
std
xchg
adc
add
in
or
xchg
cmp
js
sti
stc
mov
inc
in
mov
lea
mov
mov
push
or
out
ret
or
cmc
pushf
rolb
cmp
mov
cmp
dec
imul
or
xor
fs
jno
or
jp
jge
or
sarl
cmp
cmpsb
lret
inc
pop
and
outsl
push
sbb
sbb
sbb
cmpb
fidivs
loope
aaa
lock
nop
lret
int
incb
sbb
orb
push
pop
lret
mov
dec
test
scas
sbb
out
lods
lods
popf
rcll
test
insl
cmp
scas
lea
cmp
sub
mov
xchg
lret
jae
adc
xor
lahf
sub
lods
scas
add
push
les
lret
xchg
xor
aas
in
lock
scas
sarl
pop
push
xchg
faddl
movsb
inc
cmp
xor
pop
jp
jbe
ret
test
aad
iret
ja
scas
out
sahf
outsl
push
mov
xchg
in
mov
push
add
cmpsl
rep
mov
cmp
push
popa
pop
test
or
and
mov
ljmp
call
sbb
loope
xchg
leave
jno
and
cli
loopne
leave
mov
or
arpl
scas
mov
sub
mov
jne
push
mov
xchg
dec
cmp
mov
xlat
inc
mov
bnd
mov
test
test
inc
inc
xor
scas
sub
in
addr16
movsl
pop
pushf
stos
lcall
je
lahf
add
rcr
gs
sub
xchg
mov
pusha
lahf
fisttpll
lahf
push
and
rcrb
pop
int
jg
and
les
stc
sbb
add
dec
xchg
pop
test
adc
push
adc
les
dec
lock
das
jb
mov
xor
mov
pop
popf
pop
movsb
jl
sub
lahf
cmp
pop
and
ja
push
jnp
inc
lcall
aaa
shrb
xchg
or
sbb
rolb
mov
xor
test
pop
das
mov
xchg
lahf
dec
outsb
clc
pop
shlb
push
jmp
mov
sbb
rcrl
adc
aam
pusha
rolb
mov
push
pop
lret
and
mov
jno
outsl
push
inc
lea
imul
out
fldenv
sbb
sbb
iret
roll
iret
mov
cwtl
xor
fstps
push
mov
outsl
ja
addl
jle
mov
vpavgw
cmpsl
imul
mov
xlat
lahf
shlb
xchg
arpl
repnz
cmpsl
mov
sbb
sub
int
jp
call
ljmp
mov
cltd
aam
ficompl
mov
inc
push
sub
imul
dec
in
inc
cwtl
in
and
push
ss
mov
mov
shr
test
cmpsl
das
jo
lock
mov
cmpsb
or
jge
je
xchg
jne
outsl
inc
dec
mov
imul
mov
inc
cmp
jle
out
pop
int3
outsl
mov
cmc
cld
add
inc
jo
mov
sbb
clc
and
sbb
in
in
mov
fwait
mov
data16
shl
inc
inc
mov
cltd
out
cmp
ljmp
xchg
xchg
lock
and
jp
mov
or
scas
or
cld
das
jno
xchg
or
mov
mov
clc
add
test
scas
dec
les
pop
cmp
inc
jae
sbb
movsl
xchg
fwait
call
bound
sbb
add
addb
add
sub
test
or
ja
cld
cmpsb
or
cmp
xbegin
pop
test
outsb
push
sub
out
mov
dec
repz
jmp
cmp
pop
sub
mov
sub
pop
sbb
jo
stos
inc
jg
mov
lea
enter
in
insl
dec
fistps
inc
and
in
or
hlt
repnz
sbbb
jne
pop
in
adc
ljmp
jae
outsb
fidivrl
push
mov
out
adc
add
inc
mov
pop
add
out
jp
push
shrl
cmp
rcrl
addr16
xchg
popf
mov
call
mov
push
ljmp
add
cmp
ror
sti
es
pushf
and
out
aam
lret
fucomp
outsl
push
dec
lods
popf
popa
pusha
stc
pop
lds
add
dec
sbb
mov
out
ljmp
dec
in
jne
pop
sub
ja
jle
mov
pop
and
stos
pop
movsb
mov
cmc
jle
ja
mov
mov
mov
mov
stos
inc
dec
jo
cmp
ret
insb
dec
imul
js
cmc
cmp
sarb
and
stos
in
shr
xlat
outsl
add
jae
xor
jmp
and
pop
gs
test
sub
cltd
add
dec
insl
push
cmp
sub
xchg
into
pop
cmp
sbb
jmp
hlt
frstor
fs
ss
fidivrs
cs
mov
leave
or
inc
leave
repz
add
ss
dec
mov
icebp
mov
dec
pop
ja
fwait
out
and
fisubs
stc
nop
mov
and
out
jle
jecxz
stos
rorb
inc
into
mov
pushf
cmp
std
push
bound
xor
push
bnd
movsl
popa
cmp
lret
dec
dec
pop
sti
pop
mov
cli
test
std
enter
xchg
mov
imul
or
andb
imul
xchg
lds
cld
fistps
mov
pop
sahf
subb
cmp
jo
cmp
stc
adc
pop
add
daa
lahf
pop
cltd
cltd
jmp
or
inc
or
clc
push
push
cmp
xchg
mov
push
xlat
cmpsl
xchg
cli
in
adcl
movb
xchg
nop
aam
push
dec
mov
rorl
mov
pop
aam
int3
loop
dec
ret
jge
mov
test
inc
mov
lds
jmp
push
fstpt
sbb
lret
pop
xchg
repnz
mov
sbb
insl
adc
loop
inc
sahf
dec
repz
xchg
ss
movsb
dec
inc
mov
subl
fwait
or
sbb
or
cmp
addb
cld
aam
idivb
icebp
jge
jb
xchg
daa
mov
jg
pop
gs
xlat
mov
adc
fldt
or
fdivrp
scas
mov
push
sarb
mov
loope
mov
fucomp
sbb
frstor
fs
arpl
mov
dec
jl
stos
xchg
push
test
cmp
pop
cmpb
andb
and
ja
and
icebp
mov
or
dec
add
add
add
xchg
pop
clc
clc
xor
scas
mov
sub
dec
jne
dec
xor
data16
cmp
les
clts
mov
dec
mov
aaa
xorl
fs
inc
push
cmpsl
adc
mov
out
mov
ror
and
jae
xor
jp
pop
sub
jne
sahf
int3
pop
mov
push
jb
and
pop
test
or
shl
mov
push
pop
out
mov
add
xchg
cli
inc
mov
push
and
pop
cltd
dec
xchg
adc
mov
rcrb
mov
mov
jno
adc
adc
insb
ret
jae
popa
fwait
jecxz
test
cmp
mov
or
popa
adc
jecxz,pn
mov
add
mov
scas
push
mov
ds
les
add
idiv
mov
popa
out
or
adc
cmp
inc
sahf
xor
in
pop
outsb
insl
or
sbb
adc
jle
hlt
pop
ficomps
push
adc
sbb
mov
jnp
pop
pop
push
inc
mov
xchg
lret
xorb
nop
sbb
add
pop
inc
mov
sar
or
out
pop
outsb
xchg
sub
jo
out
jl
inc
cmp
data16
out
repz
and
in
adc
loopne
test
dec
vhaddps
repz
push
nop
pop
mov
cmp
sub
xchg
ffree
inc
pusha
jnp
pop
nop
add
lret
aaa
pause
sbb
push
hlt
rcrl
push
jne
insb
sbb
dec
push
pusha
ljmp
test
mov
lods
lock
jl
jl
cmp
push
loope
shrb
lret
repz
in
sbb
inc
xchg
lods
jp
jb
push
adc
sub
or
jns
jecxz
dec
add
fsubrl
repz
ret
ja
enter
shlb
xor
cmp
pop
push
arpl
xor
dec
push
mov
ja
lock
lcall
add
into
stos
test
orb
fistpll
mov
jp
xor
dec
jno
addr16
jbe
mov
ljmp
orb
jmp
sbb
fs
bound
pop
and
jp
or
std
xchg
xchg
sbbb
or
lea
cmp
xorb
jmp
mov
fsubrs
fistl
call
loopne
rep
mov
dec
mov
repnz
je
imul
cmp
adc
jg
fcmovnbe
shrb
inc
add
push
sbb
xchg
add
lret
and
mov
mov
mov
adc
imul
push
or
dec
mov
pop
test
addr16
out
addl
dec
sti
xor
test
js
xchg
mov
add
in
sub
pushf
push
mov
push
mov
jmp
jle
int3
scas
cmp
mov
dec
rolb
cmp
push
test
insb
lods
jnp
pusha
jno
xchg
or
pusha
clc
pop
pop
jle
cmp
popf
enter
mov
sbb
adc
outsl
or
arpl
stos
popf
jae
inc
inc
adc
out
ds
mov
cmp
cmp
sub
shrl
data16
out
jg
push
je
jp
mov
xchg
dec
mov
movsb
in
ror
dec
mov
pop
mov
xchg
xor
loope
jb
sbb
mov
lods
xchg
pop
sub
sub
mov
aad
xchg
repnz
fisttpll
int
xchg
xorb
out
pushf
mov
sahf
mov
xor
stos
jp
jbe
inc
dec
out
mov
daa
xor
cmp
lahf
dec
movsl
or
nop
mov
xor
in
xchg
ja
sbb
inc
scas
stos
push
lret
inc
push
xchg
xchg
ds
fs
enter
xchg
jg
imul
add
cmpsl
pop
nop
push
stos
mov
inc
adc
jae
vmwrite
fs
inc
ret
pushw
inc
testl
mov
lds
rcrl
test
sbb
cmp
popa
mov
dec
pop
fadd
or
stc
push
lret
mov
mov
pop
add
subb
xor
mov
mov
aam
mov
int3
xchg
call
lahf
decb
xor
dec
sbb
mov
cli
loopne
arpl
pushf
ljmp
xorb
shlb
xlat
dec
lretw
out
mov
lods
jb
or
mov
aaa
out
loope
adc
rcrb
add
cmpsb
loopne
sbb
and
add
and
movl
xlat
sahf
cld
adc
out
fnsave
push
fstpt
xor
call
push
aaa
sub
sti
sbb
leave
jmp
ret
inc
and
or
and
mov
push
or
xchg
ja
in
inc
mov
divl
rcrb
movsb
js
test
into
enter
addb
xchg
xor
aas
cld
xor
mov
fidivrl
add
aam
mov
scas
test
into
shrb
push
flds
dec
rolb
adc
cwtl
mov
leave
add
test
dec
sti
jns
es
xor
ret
inc
mov
loop
roll
cmpsb
psllq
dec
push
xchg
sub
inc
in
lret
pop
idivb
sbb
jecxz
mov
iret
into
xor
jnp
aad
bound
loop
add
loop
or
fcomp
cs
xor
rorl
loope
fld
loopne
mov
outsb
jnp
xchg
jno
out
stos
mov
sahf
mov
jbe
cltd
rcrb
es
lret
pop
lock
jle
mov
enter
imul
jo
adc
cltd
dec
mov
cmp
xchg
arpl
pop
cmpsb
in
and
stos
inc
inc
inc
jbe
or
xchg
and
sub
iret
and
inc
dec
pop
mov
repnz
cltd
xchg
xchg
inc
xlat
xchg
mov
xchg
ret
dec
out
inc
daa
jo
lea
mov
out
fnstcw
lods
dec
std
lock
mov
push
leave
cmp
imul
push
dec
rcrl
mov
mov
add
dec
add
outsl
adc
and
and
and
cs
in
push
pop
sub
inc
mul
or
cmp
test
and
push
shrl
mov
sub
sbb
cmp
dec
cmp
jg
jecxz
and
scas
inc
lahf
arpl
cmp
mov
push
out
popa
pop
sbb
movsl
sbb
loope
cld
push
jg
jo
dec
pop
jbe
jge
ret
mov
add
aam
lret
mov
ret
add
push
mov
sub
mov
pop
push
dec
mov
fs
xor
xchg
jne
les
icebp
jae
cmp
mov
inc
pop
pop
cwtl
stos
push
push
adc
mov
jnp
outsl
enter
cmp
sub
call
ljmp
cwtl
dec
jns
push
adc
outsl
in
jge
mulb
jg
jae
in
dec
pop
mov
push
sti
dec
inc
fisttpll
out
or
imul
rclb
sbb
cmpsl
inc
das
daa
cmpsl
movsb
xlat
add
xor
push
sub
xchg
movsl
cltd
push
mov
push
scas
fcoms
sbb
mov
fdivrl
shrb
popf
imul
jmp
mov
xchg
inc
imul
or
loopne
xor
enter
jne
sbb
push
pop
dec
into
push
pop
imul
ja
jp
in
add
and
cmpsl
clc
mov
or
dec
popf
and
mov
data16
pop
arpl
sar
push
and
mov
push
aas
sub
pushf
adc
cmc
mov
push
xor
stos
pop
xchg
fcmovnu
arpl
xchg
cltd
aam
insb
push
fidivrs
sbb
sub
sub
inc
sbb
into
in
mov
test
mov
cmpl
je
lock
insl
and
test
gs
dec
mov
add
jno
int
aad
jno
sbb
std
lock
fildll
add
mov
dec
mov
mov
mov
fdivrl
loopne
fcom
jmp
pushf
lods
add
sub
mov
loop
icebp
out
and
shlb
or
xchg
pop
push
sbb
jmp
jbe
mov
sub
sahf
or
cmp
arpl
nop
jmp
adc
xchg
push
jb
jp
cmp
shrb
inc
inc
adc
mov
out
inc
pop
xchg
out
jb
add
push
mov
sbb
push
fnstsw
fsts
pop
loop
js
and
daa
int
ljmp
adc
mov
sahf
jecxz
ret
js
jg
add
jge
shl
cmpsl
pop
stos
cmp
pop
popa
mov
pop
shll
stos
jl
push
leave
add
out
mov
cmp
mov
mov
addr16
mov
lods
pop
pcmpeqb
ds
int
mull
push
xchg
pop
popf
fmull
or
cmp
sub
inc
inc
jbe
xor
xlat
or
jb
fiaddl
mov
cmp
mov
je
test
cmp
mov
jmp
dec
add
xor
push
mov
xchg
ss
inc
xor
mov
mov
inc
pop
mov
out
insl
mov
adc
mov
add
fidivrl
add
adc
sbbb
adc
fwait
mov
cmp
sahf
lcall
pop
or
and
push
xor
or
jp
mov
aas
lret
jp
xor
mov
jae
pushf
fidivrl
ffreep
push
stos
cs
add
loope
xor
sbb
inc
in
hlt
lret
mov
push
fisubrl
ret
and
pop
inc
xchg
stos
dec
jns
jb
xlat
in
sub
cmpl
negl
or
or
iret
cmp
mov
push
lock
dec
xchg
cmpsl
and
jae
bound
gs
xchg
mov
sbb
dec
push
ljmp
jno
jne
sub
or
add
call
jmp
cli
push
shll
das
mov
lods
add
stc
dec
popa
lods
or
xlat
mov
jge
pop
fldenv
jb
das
dec
mov
fildll
in
or
mov
lock
insb
stc
pop
lcall
sahf
or
clc
mov
test
mov
pop
or
inc
movsb
pusha
adc
sub
les
or
lods
and
add
notl
es
cmp
rol
dec
xchg
lods
dec
dec
fwait
pop
xor
push
call
mov
fwait
pushf
or
dec
dec
repz
inc
adc
cld
in
in
in
add
jg
add
ja
pop
je
adc
sbb
stos
mov
mov
push
xor
cmpsl
adc
fldenv
test
fwait
idivl
inc
dec
xor
pop
dec
xor
cmp
fistps
inc
push
in
clc
addl
sarb
stc
jl
push
lods
mov
rcll
or
popf
jmp
mov
sbb
mov
pop
in
cli
stos
sbb
sbb
jmp
cld
xor
cmpsb
fiaddl
lock
aaa
or
adc
aas
mov
in
loopne
daa
mov
xchg
addr16
push
mov
pop
pusha
shll
cmpsl
or
call
cltd
cmp
arpl
add
test
or
xchg
fst
out
jp
pop
insb
push
sub
fwait
mov
xchg
pop
add
mov
gs
je
push
push
adc
pop
inc
je
aam
nop
out
inc
mov
xchg
aad
cmp
inc
sub
into
mov
xchg
lretw
lret
ret
mov
add
test
mov
das
cmpl
jl
rcll
outsb
sub
nop
or
adcb
pushf
mov
jae
hlt
xor
xor
in
nop
mov
dec
repz
mov
sarb
add
loopne
loope
daa
in
sub
cs
in
popa
hlt
stos
inc
push
jmp
popa
sahf
pop
push
xor
inc
pop
lret
mov
and
xchg
imul
scas
popf
sti
ljmp
shrl
jo
and
dec
lock
sub
dec
push
rcrl
pop
insb
xor
xor
mov
xor
sub
pop
icebp
lods
lods
or
pop
dec
mov
cltd
xchg
in
or
cmp
sub
js
and
adc
bound
cmc
cld
ss
pop
dec
sub
ret
ss
jo
sti
std
loopne
decb
call
push
cltd
inc
or
daa
xchg
xlat
xor
fs
repnz
out
in
mov
adc
ljmp
xchg
jb
add
dec
les
xchg
jmp
out
pop
xchg
cmp
add
push
xchg
ljmp
xchg
inc
push
add
movsl
jge
and
mov
movsl
mov
add
dec
sti
push
sub
mov
sub
scas
mov
in
or
roll
insb
push
jecxz
inc
sbb
das
and
jne
movsl
mov
fstps
out
mov
mov
imul
faddl
mov
enter
movsb
repz
sub
in
fsubp
inc
mov
sbb
xor
gs
cli
and
in
cmp
adc
ljmp
in
mov
lret
dec
ret
imul
leave
mov
mov
aam
xor
xchg
shrb
mov
xchg
jg
stos
mov
outsb
pop
mov
inc
aas
inc
imul
adc
movsb
mov
psrlq
insl
rolb
insl
fs
fwait
add
imulb
jne
cwtl
mov
add
inc
insb
ljmp
imul
pop
fwait
not
ffreep
jno
lock
xor
ljmp
and
sti
stos
shrb
dec
aas
cltd
adc
jbe
iret
insl
popa
test
lock
shll
push
mov
fildl
icebp
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
xchg
out
hlt
push
jmp
bound
xchg
push
mov
push
dec
jp
shrl
jecxz
mov
and
inc
ffree
and
dec
test
mov
sub
aad
sub
stos
ljmp
in
mov
clc
jge
pop
xlat
xor
mov
cmp
cmp
add
inc
and
les
daa
sbb
sbb
push
mov
dec
push
xor
lret
sub
lock
push
mov
scas
lods
adc
ret
jbe
stos
pop
rolb
push
xchg
jne
out
pop
int3
and
sahf
pop
and
mov
movsl
pop
mov
cmp
and
mov
sub
mov
sbbl
mov
aas
mov
jnp
push
pop
xchg
mov
push
addr16
ficoms
pop
hlt
les
in
sub
sub
mov
cmpsb
cmp
jp
out
and
lock
iret
aam
and
pop
insl
xlat
push
mov
test
pop
ds
std
repnz
adc
imul
ficomps
mov
repz
pop
add
mov
ljmp
adc
dec
jmp
inc
icebp
mov
shl
sbb
mov
sub
test
pop
xchg
out
js
mov
int3
jmp
jmp
mov
insb
les
and
jl
pop
dec
jmp
je
fidivl
cmpb
mov
lea
nop
rolb
mov
push
dec
pop
outsb
xor
or
xchg
jno
and
jbe
and
movsb
clc
mov
notb
movsl
inc
cmc
mov
adc
dec
sub
inc
movsb
loop
mov
lcall
xchg
inc
fcoml
sbb
cmc
div
mov
mov
sbb
es
test
scas
pop
mov
or
leave
mov
mov
sarb
or
push
adc
adc
push
or
and
lock
cmp
gs
mov
xchg
push
mov
add
cmpsl
outsl
cli
insl
mull
mov
xor
and
movsb
insl
sub
out
inc
movsl
test
adc
push
cmp
leave
test
push
ss
push
dec
movsb
add
pop
fwait
and
into
int
int
loope
jecxz,pt
pusha
lea
jns
fldl
or
popf
dec
lret
into
outsl
lretw
fsubrp
fwait
imul
gs
loope
fcmovb
or
scas
cmpsl
cli
out
jne
in
xchg
ret
mov
test
mov
pusha
into
dec
mov
inc
mov
sub
cmpsl
jae
filds
test
lods
cmp
daa
sti
loopne
add
outsl
mov
mov
mov
mov
mov
popf
pop
add
sub
cmp
push
dec
cmp
scas
pop
mov
jno
cmc
mov
push
xchg
mov
das
fstp
pop
cmp
jae
je
cmp
xchg
in
sahf
js
decl
out
outsl
in
mov
ds
iret
xchg
sub
xchg
mov
mov
xchg
adc
lods
push
outsl
faddl
js
ljmp
xor
push
repnz
pop
pop
mov
xorl
jo
push
cmp
mov
add
xor
or
dec
inc
jb
dec
aaa
inc
ljmp
stos
mov
pxor
outsb
sub
mov
jl
lcall
movsb
sar
pop
sub
iret
cmp
sub
cmpsl
clc
pop
icebp
dec
lods
xchg
bound
rclb
sub
and
pushf
scas
xor
femms
mov
mov
rcl
mov
stos
sahf
xchg
cwtl
xchg
mov
dec
jg
pop
orb
adc
rclb
jnp
mov
sub
mov
mov
mov
push
iret
jge
xchg
sub
mov
imul
xlat
xlat
pop
jae
iret
jp
push
sbb
out
in
das
mov
repnz
inc
out
sbb
out
dec
pop
xchg
xchg
adc
stos
adc
scas
push
or
sub
ret
lret
cmp
sbb
lea
andl
mov
add
xor
sahf
xor
dec
push
fs
xor
push
repz
lcall
pop
fsts
and
movsl
pop
lahf
andl
ret
pop
inc
xchg
mov
mov
xor
xor
xor
sub
jo
push
jmp
pop
add
xchg
sbbb
and
mov
fsubp
roll
cltd
insl
dec
imul
add
or
pop
dec
addl
xor
inc
push
push
inc
cltd
add
sbb
push
push
xchg
test
inc
iret
add
cli
jae
lds
pop
mov
int
pushf
fisubs
pop
mov
rol
out
sbb
mov
inc
inc
xchg
dec
sub
or
aam
es
xchg
inc
cmp
jg
rolb
mov
add
dec
aas
les
ss
stos
inc
push
sbb
shll
jecxz
int
mov
mov
sub
cmp
out
lcall
cli
lret
gs
lock
and
je
fisubrl
add
int3
inc
flds
jb
or
loop
xchg
xchg
sub
fwait
add
sub
shlb
xchg
orl
clc
dec
pop
xor
rclb
loope
ja
inc
lahf
in
insl
jp
test
inc
mov
ficoms
mov
sahf
rol
testb
and
mov
fwait
jnp
or
outsb
mov
push
mov
int3
leave
dec
cmp
pop
lds
bound
gs
clc
and
sub
pop
mov
inc
sbb
aad
scas
filds
sub
jmp
das
or
mov
mov
sub
jmp
repz
rclb
ror
daa
pop
daa
xchg
jnp
int
adc
aaa
rorl
adc
lock
cmp
stos
cmpsl
sub
and
or
les
jbe
xor
mov
fwait
or
or
andl
pop
clc
add
adc
xchg
jb
fidivl
jb
add
mov
mov
adc
cmc
cmp
arpl
push
mov
cmp
test
insb
push
or
add
and
stos
pop
loopne
xor
mov
xlat
dec
fnstcw
repz
dec
clc
inc
aad
sub
rol
call
mov
aad
adc
int
sbb
jle
shrb
cmp
inc
xlat
pop
mov
sbb
pop
and
lds
push
call
xchg
mov
push
in
ss
cmpsl
lods
out
xor
xchg
sub
or
fisttps
bnd
add
xchg
dec
and
mov
in
aad
mov
lods
jle
mov
or
jne
pushf
leave
je
inc
xor
popf
xchg
sbb
cld
or
cmp
or
mov
mov
push
ret
pop
jno
cld
mov
or
shll
mov
mov
or
imul
cwtl
pop
xor
or
adc
xchg
mov
or
xor
jle
jb
leave
pop
ds
inc
mov
hlt
adc
jno
adc
dec
jne
jb
movsb
lret
or
or
adc
test
sub
cs
pop
mov
cmc
jnp
mov
cmp
ss
push
insb
mov
adc
fnstcw
pop
xor
add
sub
and
jmp
pop
and
jecxz
lret
adc
clc
cld
rcl
adcl
aad
mov
xchg
sbb
inc
pop
call
loope
mov
call
popf
test
inc
leave
and
mov
lahf
xor
lret
pop
push
sbb
pop
pop
add
aad
mov
call
stos
and
pop
adc
fildl
xchg
addr16
push
insl
inc
mov
je
or
push
aam
dec
iret
dec
js
add
mov
mov
cmpsl
pop
pushf
into
icebp
mov
cmp
push
mov
sbb
sbb
call
fisttps
cli
or
pop
int
dec
scas
sbb
jns
scas
xchg
sbb
movl
into
test
fisubl
ficompl
shlb
lahf
jge
lock
and
sbb
push
pop
and
fmull
stc
pushf
add
jae
repz
sar
je
cmp
jo
lahf
divb
pop
pusha
int
aaa
jecxz
loope
mov
xchg
or
sbb
scas
mov
cmp
adc
pop
sub
ret
fwait
ljmp
ret
lods
mov
dec
or
imul
push
and
pop
inc
out
jnp
jnp
lret
mov
or
mov
dec
je
xlat
in
push
loope
cmp
int3
pop
fwait
cmp
or
push
andl
push
xchg
sub
notb
icebp
inc
shlb
xchg
jbe
into
call
push
movsb
ret
ds
jmp
dec
int3
fstpt
xor
int3
sar
jb
clc
pop
mov
hlt
mov
sarl
add
stc
push
in
and
out
adc
in
adc
filds
fsubl
insb
sbb
push
mov
jecxz
jno
push
xlat
nop
movsb
jae
or
sti
sub
stos
jno
xchg
jnp
xchg
xchg
pushf
lods
es
adc
aam
lret
dec
mov
call
xor
mov
xchg
jne
and
vmaxsd
movsb
lods
xchg
jo
sti
pop
movsb
inc
in
inc
inc
out
outsb
andb
sbb
jmp
loopne
aad
jbe
mov
mov
outsb
cmc
push
push
stos
shlb
loop
push
les
xor
sti
pop
jnp
aam
sarl
adc
xchg
push
mov
mov
je
stc
test
popl
jb
sar
and
out
js
cmp
xchg
fidivs
dec
test
push
xor
xor
pminsw
mov
or
sub
sti
push
xchg
cmp
pop
mov
cmp
call
cltd
add
mov
das
or
test
ja
push
jo
push
imul
mov
orb
inc
loope
cmpsl
and
or
adcb
and
push
mov
lods
mov
ss
or
and
std
pop
mov
ljmp
xor
cmp
inc
out
orl
jbe
jns
jo
push
into
adc
xlat
add
push
add
mov
pop
mov
push
push
out
loopne
std
repnz
inc
flds
fnop
inc
in
cs
popf
push
jne
ljmp
shrl
das
imul
jmp
add
or
movsb
subb
stc
mov
push
xchg
cmp
and
pop
idivl
out
lock
fldenv
pop
sub
adc
ja
adc
push
push
pushf
mov
jge
mov
adc
dec
mov
loopne
jbe
add
popl
fisubrs
outsb
in
mov
push
xchg
sbb
test
mov
sbb
cmpsl
loope
jne
jle
mov
inc
mov
and
cmc
les
jl
mov
add
outsl
imul
mov
xor
push
setg
fimull
xchg
addl
mov
sbb
pop
lahf
mov
xor
cmp
gs
push
mov
test
push
ds
syscall
push
and
pop
xchg
mov
rcl
pop
cli
xor
push
add
loope
mov
push
push
jecxz
xor
ss
cmp
jl
xor
sbbl
sbb
scas
sbb
cmp
sbb
test
jl
sbb
pop
push
ja
and
ret
jg
mov
dec
xchg
ljmp
dec
mov
adcl
cs
add
arpl
into
pop
add
xchg
xchg
icebp
sbb
and
pop
or
mov
loope
out
std
pop
sub
xchg
data16
pop
aas
test
loopne
pop
sub
int3
push
or
push
jmp
cmp
pop
or
add
arpl
push
adc
iret
stc
cmp
mov
ds
jmp
das
adc
ds
int3
pop
movsl
cmp
xchg
cmp
pop
popf
negl
push
loope
loop
stos
jnp
imul
add
fidivs
outsl
lods
insl
sarb
push
fs
push
shl
ret
insb
mov
fistpl
jmp
mul
in
mov
fsubrs
or
in
push
sbb
ds
mov
int
pop
pop
movsl
out
mov
lods
dec
cmp
mov
ss
ljmp
mov
push
mov
mov
stos
ljmp
fstpl
cmc
js
hlt
xchg
dec
add
std
sahf
addr16
in
inc
stos
loop
add
daa
mov
fwait
add
mov
mov
pop
mov
mov
cld
orl
and
cmpsl
mov
iret
das
call
lret
in
adc
cmp
loop
inc
pusha
aas
push
nop
addb
mov
sti
in
ljmp
sub
adc
lret
pop
shrb
sahf
dec
pop
rol
f2xm1
push
divb
in
outsl
sub
push
test
dec
fidivs
dec
mov
rcll
push
repz
push
dec
js
push
pop
lock
fwait
mov
clc
mov
xor
mov
gs
mov
ret
aaa
sahf
or
mov
mov
jae
mov
and
repnz
mov
cmp
mov
das
xchg
inc
test
int3
cli
or
in
andl
jne
inc
mov
xchg
mov
cs
lcall
push
mov
push
cmpsb
xor
fsubl
jg
or
cmp
cltd
imul
aas
pop
movswl
cmp
out
es
mov
dec
mov
xchg
mov
add
sti
loop
sarb
pusha
lcall
lock
xor
popa
or
loope
nop
arpl
hlt
or
xchg
loopne
rcrb
aad
push
aas
jge
sub
gs
test
repz
jb
xchg
or
dec
mov
xchg
push
clc
jecxz
outsl
jae
cmp
sbb
aam
mov
sbb
pop
les
or
add
fcoms
aaa
std
add
pop
bound
lcall
cmp
xchg
cmp
cmc
shl
jb
xor
xchg
movsb
xchg
jne
cli
fs
fldt
mov
push
and
push
inc
xchg
adc
insl
mov
and
add
push
jbe
xchg
mov
hlt
jp
aaa
dec
sarl
mov
xor
iret
fsub
mov
sahf
pop
shl
pop
cwtl
sub
mov
daa
jno
lods
jae
pushf
notb
in
adc
jnp
shrb
push
pop
mov
ror
jg
adc
js
xchg
mov
clc
jae
pop
pop
cmp
lcall
pop
or
mov
dec
leave
cmp
mov
ljmp
and
fsubrp
mov
add
mov
adc
sub
xchg
jmp
or
bound
jb
adc
push
cmp
es
js
push
pushf
jmp
cmp
sub
js
mov
hlt
cwtl
sbb
dec
cmp
and
push
fsubrl
and
push
jp
mov
pop
je
fists
and
mov
stc
sbb
sub
jno
pushf
sbb
movsl
jl,pn
adc
mov
push
mov
arpl
pop
cmpsl
pop
movsb
dec
popf
movsb
mov
enter
enter
xor
repnz
jmp
lret
mov
scas
mov
dec
sbb
mov
mov
shll
or
jnp
push
leave
aaa
nop
movb
lret
xchg
dec
push
pushf
rclb
or
dec
call
cmp
popf
rcrl
sbb
testb
aad
rclb
sub
jl
dec
cmp
push
in
loop
push
out
inc
hlt
fiadds
jbe
ficoms
push
xchg
cmp
ja
scas
nop
pusha
xchg
sbb
pop
jle
jo
sbb
push
nop
cmp
popa
push
sarb
jmp
pop
xchg
inc
out
push
sub
test
data16
or
dec
and
push
insl
mov
mov
pop
scas
xchg
lret
imull
push
cmpsl
je
push
int3
mov
cltd
jecxz
scas
cmp
fldcw
or
aas
pushf
mov
hlt
xor
loopne
lods
ljmp
sbb
add
stc
sbb
dec
pmovmskb
aad
in
rclb
xor
sbb
arpl
fimull
test
iret
test
inc
shrd
fwait
or
lds
cli
std
filds
jecxz
repnz
jbe
in
into
sbb
outsl
jmp
sbb
aam
lret
outsl
movsl
push
lock
adc
scas
dec
pop
inc
std
in
mov
pop
dec
je
gs
xchg
imul
dec
sbbb
mov
test
mov
mov
sub
or
pop
jnp
sti
xor
cmpb
xchg
es
pop
pop
ss
sub
out
in
fldt
test
cmc
inc
xor
inc
rorb
outsb
out
movsb
mov
jnp
jns
mov
mov
or
pop
loop
cmp
inc
loop
inc
inc
gs
jecxz
cli
inc
xor
jmp
pop
ss
out
mov
xchg
jp
call
orb
mov
fs
out
out
or
add
clc
and
jbe
dec
imull
mov
icebp
mov
xchg
aaa
aas
cmp
mov
subb
test
jle
nop
or
mov
mov
pop
dec
or
pop
test
push
jge
pop
xchg
daa
or
inc
pop
push
push
jg
out
scas
cmpsl
push
push
fisttpll
mov
push
inc
or
test
pop
pusha
fstpl
clc
testl
mov
sbb
inc
jo
mov
cld
add
jg
sub
dec
add
sti
pop
outsl
push
gs
mov
cmp
push
arpl
push
cld
xchg
and
ret
movsl
test
mov
ljmp
xor
adc
pop
jno
push
iret
daa
pop
lods
inc
insb
mov
aaa
rcrl
xor
sub
dec
sbb
mov
add
ds
xchg
inc
mov
test
push
outsb
inc
inc
mov
lods
outsb
sub
es
aam
rorb
mov
add
mov
xorb
test
lret
rolb
mov
or
mov
push
dec
pop
xchg
dec
push
push
inc
jecxz
sbb
jne
lock
xchg
pop
cwtl
subl
stos
loopne
pop
jge
sub
movsl
repnz
cmp
inc
addr16
cmpsl
mov
mov
xchg
sarb
mov
push
sti
jb
nop
cltd
xchg
inc
rclb
lds
add
ja
test
pop
lock
adc
stc
pop
mov
and
cmpsb
shrl
inc
xor
mov
je
pop
popf
subb
mov
adc
mov
pop
jge
mov
lcall
jbe
dec
aas
jne
in
xor
xor
rcrb
pop
mov
xor
bound
jns
inc
jp
shlb
mov
jg
and
adc
sub
movsl
pop
xor
repnz
or
mov
bswap
pop
test
and
in
loopne
gs
pop
xchg
jg
sbb
sti
test
cmp
inc
call
pushf
xchg
cmp
clc
mov
insb
ror
add
or
and
outsb
dec
sarb
es
cmp
mov
in
mov
add
add
add
push
divb
pop
xchg
mov
sbb
dec
push
dec
mov
mov
scas
lcall
lret
push
lret
lods
bound
out
lahf
insl
test
ret
nop
hlt
shll
xchg
pusha
fnstenv
andb
pop
out
cmp
mov
lret
sub
mov
or
out
xchg
cld
insl
cmp
jae
idivb
loope
push
mov
pop
inc
repnz
lcall
std
jge
xchg
xchg
aaa
jb
mov
cmp
loop
xor
fildl
mov
pushf
repz
mov
xchg
fisttpll
fsub
mov
inc
mov
scas
pop
pop
ffree
shlb
daa
cltd
pmullw
ret
jbe
xchg
cmp
jnp
mov
mov
sbb
xor
jle
out
into
cmp
imul
mov
or
cmovno
popa
adc
jae
roll
pusha
jae
xor
adcl
cld
leave
and
xchg
jcxz
in
call
cmp
inc
pop
pop
bound
dec
ja
add
pop
sub
adc
xchg
call
movsl
mov
aam
nop
rcll
and
adcl
xlat
push
lods
pop
lret
lods
arpl
scas
loop
pusha
shrl
dec
lods
in
and
cmp
popf
xchg
sahf
loopne
jl
out
pop
icebp
aam
xchg
shll
sbb
scas
sbb
sub
dec
sbb
fsubl
fimuls
push
icebp
jg
or
add
push
push
lahf
add
cwtl
xor
enter
add
ret
out
mov
sbb
ror
cmc
nop
stc
aad
pop
or
cltd
mov
ret
cs
adcl
sahf
xor
imull
xorb
testb
xchg
repnz
xchg
sub
out
mov
lods
jg
pop
ljmp
jl
jo
and
arpl
pop
les
out
add
pop
ljmp
sarl
lea
fsubrl
mov
test
mov
xchg
rcrb
incl
jg
fstpt
inc
push
xor
mov
push
ret
and
xchg
sahf
dec
fbstp
jg
in
mov
xor
add
iret
xor
rcll
rcrl
incl
fld
out
jne
insb
fwait
xor
or
in
xchg
adc
cmp
mov
push
test
mov
nop
loopne
cmpsl
call
sub
inc
pop
stos
xor
jecxz
aas
mov
iret
loop
out
and
outsl
mov
jnp
lret
push
ret
push
xor
mov
je
cmpsl
shr
outsb
jno
inc
scas
add
pop
test
xchg
int
movsl
xchg
jnp
sbb
cmp
or
hlt
mov
fcmove
dec
faddl
repnz
and
ja
cli
push
pop
jl
xchg
xor
cmp
add
pop
push
lods
mov
lods
pop
sbb
xchg
push
push
xor
mov
pop
nop
pop
mov
std
sub
mov
pop
jmp
arpl
add
in
pop
push
push
mov
mov
mov
xor
jmp
dec
pop
or
cmpsl
cmp
jo
push
aaa
inc
mov
sub
and
stos
pop
lods
dec
push
dec
enter
pop
mov
xor
jle
xorb
lret
mov
push
inc
insl
movntq
scas
push
je
cmp
inc
in
add
mov
mov
dec
aas
jnp
subl
jnp
popa
sbb
cltd
popa
sub
stos
les
test
dec
and
dec
xchg
mov
xchg
das
shl
inc
sti
ljmp
add
or
hlt
and
jl
dec
in
cmp
jbe
adc
gs
mov
inc
push
mov
cmpsb
jmp
mov
add
mov
test
daa
lret
addr16
loope
adc
jnp
inc
outsl
mov
fcoml
in
jmp
cmpsl
loop
lods
pop
jmp
hlt
mov
bound
cmp
push
inc
push
dec
ja
mov
sub
enter
and
push
cmpsb
movsb
mov
clc
xorl
mov
aad
cld
das
outsb
push
pushf
jnp
sti
divb
std
inc
mov
push
in
scas
loop
outsl
or
test
xchg
inc
fwait
push
pop
mov
mov
sbb
cld
add
test
adc
bound
push
xor
outsb
cld
adc
dec
xchg
sbb
lahf
add
in
pop
mov
aad
in
std
insl
push
loopne
aad
mov
sbb
repnz
push
insl
mov
adc
enter
or
stos
xchg
adc
es
xor
iret
clc
jb
out
je
sahf
fists
cmp
enter
imul
push
test
mov
jle
sbb
mov
xchg
aas
int
and
or
xchg
push
dec
orl
enter
fadds
xor
and
xchg
jmp
mov
out
jo
dec
mov
dec
cmp
push
out
dec
jecxz
ret
in
pop
inc
inc
insb
adc
arpl
jp
sahf
loop
mov
pusha
std
repnz
push
mov
test
pop
lods
xor
icebp
jo
adc
repz
xor
lret
jb
in
shll
lods
mov
test
pop
jnp
jmp
xchg
inc
daa
out
xchg
push
movsb
dec
jnp
int
push
fisubrl
in
pop
rcpps
push
mov
jecxz
jnp
mov
loopne
arpl
sbb
or
ret
pop
pop
xchg
jns
xchg
mov
out
movsb
loop
jmp
popa
push
stos
ss
cs
gs
enter
lret
insb
pop
mov
mov
mov
fildl
xchg
and
mov
pop
sub
cmp
stos
ss
popf
sub
cmpsb
loopne
xchg
in
sub
or
mov
in
cld
fimull
add
add
cmpsb
stc
fstpt
ret
scas
pop
negb
dec
push
sbb
out
pop
fldcw
shrb
push
adc
fwait
mov
jg
je
cwtl
scas
mov
jnp
add
sub
mov
fwait
xor
dec
arpl
cmpsl
lret
jp
lret
not
cmp
and
in
xchg
test
rclb
add
loopne
imul
push
add
xchg
pop
dec
mov
push
aaa
mov
push
mov
sub
shrl
scas
xlat
pop
cmp
stos
rcll
lret
fs
mov
leave
ja
mov
insb
and
sub
jg
and
lahf
sub
addr16
test
mov
and
mov
cmp
cmp
imul
jnp
cmp
or
xorb
pop
fnstcw
add
xchg
in
mov
sbb
mov
cmovno
fstpl
dec
scas
mov
std
adc
xchg
sub
push
bnd
imul
inc
jbe
es
fmulp
sahf
inc
out
mov
sub
inc
shlb
push
or
sub
rcrb
insl
lcall
jns
sbb
pop
andb
jo
pop
push
lock
push
mov
cmp
iret
adc
pop
mov
mov
mov
cmp
shl
sbb
mov
es
fsubr
insl
mov
xorb
sub
inc
imul
jp
xchg
jae
sub
add
xchg
push
mov
add
mov
test
testl
call
scas
fmull
fildl
cltd
push
lea
gs
imull
adc
and
mov
fsincos
mov
daa
shl
sbb
stc
xchg
out
ret
mov
ret
enter
and
shlb
sbb
cmp
mov
fisubrl
dec
sbb
jbe
scas
scas
cli
stos
xchg
fstl
xchg
fwait
push
jb
jo
inc
orl
mov
daa
insb
bound
adc
add
jo
outsb
mov
jmp
cwtl
movsb
cmp
faddl
or
sbb
orl
adc
lret
cmc
inc
mov
or
jnp
xchg
rorb
into
mov
jecxz
push
outsl
jp
jae
loopne
adc
push
or
cmp
stc
cmpb
pop
jg
push
xor
iret
pop
xchg
scas
sub
mov
scas
dec
mov
subb
das
push
push
sub
jae
incl
cs
mov
lods
mov
cmpb
inc
cmp
adc
mov
test
loope
push
andb
mov
test
pop
imul
out
inc
adc
dec
sub
xchg
adc
mov
sbb
popa
pop
cld
mov
adc
lods
cmp
pusha
fstp
mov
xor
test
or
and
loop
dec
inc
and
dec
lds
in
lods
aam
addl
dec
dec
xchg
push
cltd
push
inc
jmp
mov
popl
cmpsl
ds
pop
rcll
dec
cmp
and
pop
je
fmull
adc
cli
in
pop
sarb
test
negb
xor
insl
shll
aaa
test
clc
outsb
cmc
loopne
cwtl
and
cs
sarb
std
pop
pop
dec
insl
pop
ds
nop
push
imul
sarl
enter
imul
or
cs
jns
lahf
cwtl
mov
fwait
scas
out
aaa
mov
cmpsl
lock
cmp
arpl
or
push
subb
xchg
adc
cltd
ret
scas
loop
leave
lret
enter
sbb
adcb
add
clc
loopne
push
imul
xor
lcall
popa
mov
pop
into
pushl
sarl
push
repnz
xor
repz
jns
inc
pop
xor
fdivrs
les
fisubl
push
dec
jmp
cmp
int
xor
out
or
adc
and
lret
mov
idivb
fxch
jle
inc
jge
pop
cli
loopne
addr16
lahf
push
mov
mov
inc
push
jae
add
ret
lods
pop
jne
cmp
loope
mov
add
sbb
xor
and
mov
sahf
rclb
imul
push
addr16
mov
push
mov
cmp
push
cmp
pop
sbb
out
mov
mov
out
test
cli
bound
sbb
cltd
stc
adc
ret
mov
xor
out
sbb
push
or
test
cmp
inc
and
popa
mov
mov
incb
fisttpll
div
xchg
lock
cld
sbb
sbb
roll
and
stos
jmp
xchg
or
inc
ja
pop
cmp
jp
jge
in
daa
jmp
pop
out
rorl
mov
ljmp
dec
add
cmp
das
filds
mov
jecxz
jmp
inc
sti
push
adc
rcl
dec
loopne
out
into
push
xlat
add
lret
ss
dec
cltd
clc
or
xchg
jo
xchg
mov
push
dec
repnz
push
inc
sbbb
subl
outsl
mov
bound
push
mov
stc
cmp
push
or
sahf
insl
hlt
mov
and
push
lock
push
rcl
das
sub
dec
pop
cmc
push
insb
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
insb
xchg
jecxz
inc
popa
rcrb
push
orb
xor
rcl
xchg
pop
roll
inc
cmp
xchg
sbb
add
repz
push
cld
outsb
mov
push
rcrb
jecxz
mov
xchg
push
cmp
int3
pop
sub
push
bound
xchg
and
sahf
enter
icebp
or
pop
ljmp
repz
sbb
and
stc
adc
int3
repnz
cwtl
hlt
jp
push
mov
cmp
push
vpackuswb
cs
pop
fcomps
flds
cmc
loop
push
es
nop
in
xor
in
out
int3
sub
lcall
out
mov
scas
mov
sub
dec
out
mov
adc
push
imul
mov
cwtl
andb
cld
sub
addw
ljmp
push
aad
icebp
add
aam
add
adc
gs
cs
outsb
sbbb
push
adc
lret
add
stc
dec
les
mov
adc
xlat
insl
aas
jne
push
pusha
rcrb
add
sub
daa
mov
loop
jp
pop
push
aaa
mov
fmul
dec
cs
xor
xlat
inc
xor
inc
and
and
cmp
push
je
pop
repnz
mov
push
aam
xor
mov
xor
jne
adc
insb
loopne
mov
in
xchg
mov
xor
insb
je
icebp
adc
sub
xor
mov
push
enter
stos
inc
mov
scas
push
sbb
mov
xchg
outsb
std
push
lret
fucomip
les
int
shrl
bound
fwait
cwtl
subl
cmpsb
fdivrp
out
mov
mov
mov
fistl
push
jns
pop
cmp
loope
mov
jns
pop
sahf
lock
mov
xlat
aaa
scas
scas
mov
jmp
repz
out
push
jb
lcall
and
pop
iret
fsub
jp
mov
xchg
jo
fisubl
mov
jl
out
sahf
es
adc
out
mov
jnp
mov
pop
pop
dec
fidivs
mov
popf
cmpsw
mov
pusha
and
stos
jns
add
push
jae
sbb
mov
add
push
call
adc
les
rcl
and
sahf
inc
fadd
lea
les
pop
nop
pop
lcall
sub
fs
insb
jle
push
inc
jg
push
shrl
cld
icebp
js
addr16
jge
mov
push
inc
es
jp
cmpsb
pushf
inc
dec
ret
xlat
loope
mov
rorl
adc
fucomp
push
jp
xorl
xchg
fdivrl
in
or
pop
adc
out
mov
adc
cmpsl
sub
stc
push
add
lds
mov
mov
into
lock
enter
mov
push
fiaddl
into
pushf
dec
inc
inc
or
pushf
call
inc
stos
std
mov
fidivl
or
popa
jp
cltd
inc
ss
mov
cltd
pop
lock
sahf
dec
push
test
nop
pcmpeqb
insb
out
into
mov
stc
out
sbb
push
testl
mov
mov
mov
movsb
loop
mov
sub
adc
mov
mov
jecxz
stos
xchg
pop
pop
jecxz
fldenv
rclb
icebp
add
and
mov
in
cmp
rcl
cs
dec
lret
lret
fisttps
popa
pop
jecxz
adc
aas
outsb
popf
fwait
push
jp
fsub
mov
outsl
inc
mov
or
add
mov
shlb
mov
popf
xorb
andl
dec
sbb
jnp
mov
lahf
mov
inc
sub
cmpsl
enter
repz
das
or
lods
cltd
push
pop
pop
and
ja
ret
fisubs
mov
mov
push
je
or
jmp
rolb
jo
sbb
pushl
das
idivb
xchg
adc
stc
dec
out
stos
scas
cli
fimuls
xor
popf
inc
xchg
addb
mov
pop
push
push
mov
lods
mov
jmp
xchg
subl
xor
mov
jecxz
lods
sti
mov
cmp
inc
shrl
and
test
cli
sahf
mov
pop
repnz
jg
cmp
mov
xchg
mov
fidivrl
mov
mov
sub
ja
xchg
pop
jo
push
std
adc
jmp
sub
repz
jns
push
fstpl
add
cmp
sbb
mov
jmp
aas
sar
bound
adc
mov
xor
xor
mov
sbb
inc
cmp
jl
and
in
xchg
lahf
outsb
or
rcrb
xchg
roll
sub
popa
add
xchg
loopne
mov
iret
jb
fdivrs
incl
inc
scas
dec
stc
push
addr16
popf
push
out
dec
movl
mov
push
mov
jmp
imul
pop
lret
lret
jbe
and
icebp
dec
das
ss
cwtl
lcall
mov
add
aas
xchg
cld
mov
popa
shl
fsubrp
lahf
mov
call
lds
loope
sub
inc
movsl
mov
mov
es
push
mov
scas
call
push
xchg
and
sbb
mov
xchg
lahf
jns
and
or
mov
xor
js
repnz
and
fsubrl
cmp
mov
jne
test
lds
mov
fstpl
addr16
adc
inc
or
addr16
loopne
cmp
jae
shll
xchg
imul
lcall
push
inc
std
test
mov
mov
aaa
sbb
add
sbb
loope
leave
scas
push
xor
sub
imul
mov
lock
sbbl
push
jecxz
scas
les
or
push
test
push
jle
lahf
dec
xor
push
jge
pop
push
push
jae
rcl
jbe
bound
lock
add
insl
fiaddl
shrl
test
dec
and
push
mov
ja
lret
mov
es
lea
mov
mov
repnz
jg
mov
xchg
ja
or
cmp
cmp
ret
lods
test
fadd
jne
mov
mov
and
push
outsb
inc
cmpsl
mov
fs
mov
out
mov
adc
jbe
addr16
rorb
gs
dec
popf
cmpsb
xchg
loopne
jle
cli
pop
sbb
roll
call
or
xchg
insb
gs
shl
stos
push
shlb
sti
lea
shrl
mov
sub
sahf
shl
mov
popa
out
loopne
sbb
scas
mov
cmp
mov
pop
jmp
mov
jecxz
pop
subl
pusha
sub
cwtl
test
mull
iret
mov
xchg
xor
aaa
cmp
pop
add
fadd
mov
fwait
daa
jmp
xlat
pop
lar
or
xchg
lret
and
xchg
test
jge
sub
daa
sub
sahf
xchg
insl
add
inc
popf
xlat
les
sub
jo
shll
and
pop
pop
inc
addl
frstor
in
jecxz
pop
loope
in
inc
ret
daa
pop
out
mov
or
js
insb
aaa
enter
ficompl
loop
dec
push
pop
seto
fisubs
pop
cld
sub
dec
cmp
shrl
sbb
mov
adc
in
inc
mov
jp
jnp
jns
pop
std
sub
scas
clc
hlt
pop
xor
push
ljmp
xor
sub
cld
xchg
or
cmp
dec
imul
sub
push
mov
and
pop
adc
adc
js
cld
xor
adc
add
mov
adc
loop
sahf
sti
enter
inc
mov
ret
clc
pop
mov
repnz
sti
or
adc
push
fidivl
sahf
adc
dec
and
lds
mov
negb
pop
cmp
pop
sti
jmp
out
lcall
sbb
mov
and
fists
psllq
mov
lods
inc
add
adc
jl
lock
pop
inc
scas
add
shr
cmp
adc
ja
push
addl
jnp
bound
pop
push
dec
sbb
call
dec
mov
clc
pop
sub
mov
scas
mov
iret
cli
out
test
cmpsl
and
sti
or
pop
cwtl
jge
sbb
jnp
gs
mov
es
xchg
add
dec
xchg
xchg
call
mov
sbb
cmp
daa
jns
sub
shl
push
in
push
fwait
and
pop
push
jp
cli
sbb
notb
xchg
push
jns
jns
mov
mov
leave
std
pusha
mov
aam
pop
mov
loope
js
movb
std
imul
lahf
push
sub
xchg
jo
movsb
cld
jg
les
xlat
cmp
mov
sbbl
jbe
mov
xchg
ret
lcall
sarl
fdivrs
jg
mov
push
push
inc
lea
fcoml
test
jnp
nop
and
sbb
imul
adc
dec
jl
aam
fnsetpm(287
cld
ja
addr16
mov
lea
inc
into
jl
aas
shl
cmp
mov
insl
je
outsl
jl
pop
lods
sub
int
popa
or
cli
fmull
mov
ret
dec
cmp
shrl
icebp
xor
shrl
dec
hlt
xchg
jmp
cs
pop
aaa
imul
out
fwait
pop
push
pop
cmpsl
loopne
push
call
shrb
cmc
mov
ljmp
push
enter
sub
cmp
jbe
dec
mov
in
enter
dec
jns
push
dec
and
scas
or
call
sub
mov
cld
adc
das
and
cmpsl
pop
cmpb
clc
mov
dec
and
mov
or
popl
repnz
repz
jbe
xchg
incb
aam
xor
lods
dec
ja
push
mov
jae
mov
inc
sub
lods
out
inc
add
xor
into
lods
lcall
stos
negl
jecxz
mov
adcl
stos
js
je
jns
outsb
popa
aas
ret
push
push
sub
cwtl
cs
pop
xchg
mov
loope
xchg
push
mov
jmp
cwtl
xchg
dec
adc
dec
lods
xor
xor
in
stos
inc
sub
fmull
cmp
xchg
xor
mov
andl
xchg
mov
pusha
in
es
dec
das
stos
jo
roll
xchg
call
xchg
add
ret
mov
cmpl
dec
insb
into
inc
in
xor
sahf
ud2
lcall
cmp
push
xchg
popa
xchg
mov
cmp
xor
cmp
icebp
andb
cmovle
sahf
jle
mov
addr16
xor
push
ljmp
scas
popa
fwait
xchg
pop
pop
fwait
mov
xchg
das
mov
ds
aas
sahf
sbb
adc
mov
mov
cmc
mov
push
dec
inc
jg
andl
cltd
arpl
cltd
sub
dec
add
cs
rcr
in
inc
leave
decb
fwait
push
cmp
adc
jle
sbb
jg
test
inc
bnd
test
mov
push
in
popf
jnp
aas
pop
jmp
sub
into
mov
mov
inc
in
int3
ss
mov
mov
sub
mov
jno
xchg
icebp
jns
dec
and
adc
push
or
cmp
in
inc
cmp
fistpll
mov
in
adc
cs
cmpsl
aad
mov
xor
dec
pop
jne
loopne
loope
cmc
negb
sub
jns
sbb
jl
mov
push
mov
or
into
idiv
stc
inc
flds
pop
mov
jl
dec
jmp
xor
lea
dec
pop
mov
pop
push
or
decl
icebp
jmp
mov
leave
mov
lods
stos
xor
push
inc
xor
je
adc
or
jno
cs
jns
loopne
js
in
mov
push
inc
popf
mov
shrl
ret
hlt
sbbl
push
hlt
mov
cmp
lds
ljmp
dec
mov
dec
sti
insb
push
pop
mov
jnp
xchg
fwait
stos
nop
jne,pt
orb
movsb
imul
push
jnp
inc
jno
js
shll
sub
xor
mov
out
dec
jne,pt
cmp
fwait
pop
dec
xchg
pop
or
test
aam
pop
and
sbb
and
ds
push
cltd
scas
sbb
jae
outsl
jae
lcall
adc
arpl
mov
ret
adc
push
ret
lock
insb
mov
data16
jecxz
aaa
or
and
jbe
pop
das
mov
and
dec
sbbb
mov
fs
xchg
xchg
jnp
aas
push
ja
cmp
les
movsb
test
out
push
in
cltd
and
push
stc
sub
fcmovu
add
inc
cmp
push
sbb
jl
jge
lret
enter
cmpsl
sub
gs
xchg
inc
pop
in
xchg
mov
movsb
add
daa
dec
mov
movsl
ret
shlb
lahf
test
xlat
jecxz
rcrb
testb
aaa
jb
mov
aam
dec
pop
push
and
pop
cs
in
jmp
mov
lret
push
pop
sahf
adc
mov
or
or
imul
cmc
mov
push
mov
xlat
fadd
xchg
adc
pop
jmp
rorl
bound
pop
out
popa
mov
push
adc
jle
arpl
dec
fistl
adc
dec
add
mov
leave
mov
shrl
inc
and
icebp
into
stc
outsl
xor
xchg
lcall
push
sub
dec
adc
and
outsb
leave
or
idivl
movsb
addr16
xor
sbb
or
imul
pop
pop
test
icebp
or
inc
inc
es
idivb
mov
rclb
das
push
dec
pop
mov
xor
imul
and
mov
pop
mov
fists
in
das
jno
ret
mov
repz
mov
jno
push
rorb
push
das
fdivl
stos
or
loop
testl
psubd
out
dec
jmp
cltd
dec
scas
shlb
mov
sub
cli
mov
out
or
daa
dec
jo
mov
sbb
mov
cmp
inc
in
adc
imul
insl
mov
dec
test
or
cwtl
push
pop
gs
outsl
lret
sub
adc
inc
scas
lret
push
add
sub
es
inc
fdivrp
nop
loope
shrl
push
push
sbb
push
aam
and
lods
jecxz
out
aad
aad
xchg
jge
jl
xchg
movb
add
xchg
cltd
jle
mov
outsb
and
push
bound
inc
mov
iret
xorb
lods
mov
and
rol
test
rolb
push
and
jmp
mov
lods
pop
or
sub
inc
inc
das
sub
sub
ret
jbe
or
mov
xchg
daa
lea
adc
movsb
test
out
adc
lea
jge
jl
xor
xor
sti
ljmp
outsl
in
xchg
and
push
jnp
iret
aaa
lock
test
pop
out
test
push
mov
out
arpl
ljmp
hlt
fmull
cmpsl
mov
sub
fwait
adc
mov
xchg
cmc
pop
or
dec
jae
es
sub
imul
lret
inc
add
orb
pop
xor
cmpsl
sbb
and
xchg
mov
dec
sbb
dec
cmp
out
sahf
mov
mov
aaa
cmpsb
push
decb
pop
ss
ret
mov
sti
push
inc
jl
imul
hlt
mov
out
leave
sub
sbb
hlt
pop
pop
push
gs
xor
push
mov
mov
stos
mov
mov
aaa
in
inc
dec
hlt
cmc
jno
shll
fistpl
lea
leave
fstps
push
xor
push
dec
call
xor
pushf
stos
mov
xchg
push
leave
lods
inc
ljmp
fidivl
pushf
jae
test
jbe
lods
adc
inc
or
repz
mov
lds
out
add
aam
adc
rcl
xchg
sahf
orb
mov
cli
sbb
imul
scas
imul
cmp
and
inc
imul
mov
mov
xor
in
lock
adc
mov
add
jmp
repnz
inc
cmp
jle
lret
insb
jl
push
leave
and
jne
cmc
shrb
aaa
out
dec
mov
mov
cmpsl
lret
mov
repz
inc
jl
jnp
mov
or
lret
sbb
mov
cli
repz
adc
fcoms
imul
cltd
js
push
inc
cltd
add
push
xlat
or
jbe
cld
jnp
out
inc
xor
cmp
or
cmp
dec
and
mov
orb
aaa
xchg
mov
pop
cltd
pop
mov
sbb
mov
or
cld
loop
std
mov
dec
adc
lock
jbe
fdivrs
je
pop
inc
sahf
sbb
push
mov
jge
dec
xchg
cmp
xor
push
push
repnz
sub
and
sbb
sub
je
jns
or
popf
mov
int
mov
xor
xchg
xchg
outsb
push
jno
pop
ljmp
mov
orb
popf
add
adc
jnp
imul
mov
xchg
rcrb
sbb
das
cwtl
xor
shll
imul
insl
insl
sub
lods
lcall
fs
sub
xchg
xor
idivb
lock
pop
mov
clc
or
shlb
mov
test
add
sbb
fdivrs
lret
pop
adc
mov
test
scas
icebp
les
sub
xchg
xchg
inc
lock
pushf
jae
push
addl
mov
ja
and
xchg
es
and
adc
test
mov
test
sub
or
add
popa
push
out
in
pop
xchg
push
adc
mov
pop
fiadds
mov
test
je
bound
mull
or
negb
movsl
sub
call
jo
loope
clc
jmp
add
test
jb
and
popf
mov
ficomps
orl
lahf
inc
and
mov
dec
dec
arpl
dec
fwait
outsl
dec
jo
into
push
hlt
out
inc
in
pushf
mov
mov
mov
and
mov
mov
fst
xchg
bound
push
out
movsl
fsubrs
lcall
outsb
push
pop
sahf
stc
sti
out
jns
dec
stos
mov
xor
cmp
insl
cld
shl
adc
cmpsb
lcall
mov
mov
jno
cmc
sub
test
icebp
lret
mov
imulb
cs
mov
js
int
ljmp
out
inc
dec
cmpsl
in
xchg
cmc
xorb
aaa
jnp
sbbl
insb
movsb
mov
lahf
sbb
inc
dec
xchg
pop
or
ljmp
test
sub
test
sub
mov
xor
push
jle
jo
rep
sub
mov
icebp
mov
aas
loop
xchg
xor
das
dec
repz
hlt
mov
push
xorl
xor
mov
xchg
repnz
in
sub
popa
adc
inc
inc
mov
pop
fdivs
lcall
ja
cmovno
or
aam
test
push
les
pop
dec
sub
jo
es
mov
inc
insl
xor
js
icebp
sub
add
jne
mov
jl
loope
xor
xor
and
inc
shll
clc
mov
push
out
in
xchg
test
cmc
jb
adc
popa
out
cltd
aas
rorl
adc
cltd
cmp
leave
dec
ficompl
pushf
cld
popf
outsb
pop
out
sub
pop
inc
iret
sbb
pop
insb
popf
pop
adc
jmp
aas
loop
popa
gs
dec
and
and
add
pop
add
dec
push
stc
push
fmull
lods
bound
push
icebp
call
out
aam
adc
adc
adc
js
mov
pusha
test
cmc
mov
scas
sar
rolb
cltd
mov
push
sub
aad
sub
bound
ret
es
xchg
push
and
sub
mov
cltd
pop
scas
arpl
iret
cmp
sbb
lret
pop
adc
jle
mov
pop
call
sti
int3
xchg
adc
cli
mov
mov
sbb
jge
xchg
and
or
in
mov
call
jg
pop
cmp
cmp
push
pop
daa
push
add
daa
popa
loopne
push
aas
mov
jecxz
repz
and
call
adc
mov
lret
push
pop
cld
sbb
shrb
sbb
punpckldq
clc
in
ljmp
repnz
mov
sbb
shlb
jl
daa
add
movsl
or
test
dec
popf
test
mov
imul
std
pop
lcall
sbb
inc
repnz
mov
fmuls
imul
pop
mov
daa
clc
jbe
jle
inc
cld
in
sbb
insb
sbb
xchg
dec
inc
std
push
shll
pop
or
repz
je
cmpl
and
sar
adc
pop
stos
fs
lea
xor
xor
out
in
jns
inc
shr
testb
sarb
flds
popf
inc
inc
ret
push
jp
push
jnp
jecxz
mov
sub
jl
cltd
sti
mov
aad
rolb
xor
pushf
xlat
dec
sbb
mov
dec
dec
adc
jp
and
fisttpl
in
inc
mov
dec
out
sbb
roll
pop
lcall
dec
mov
adc
and
and
jo
ljmp
sar
icebp
in
fstpt
ret
int
shlb
mov
cmp
cld
sbb
cmpsb
sub
sti
jg
fisttpll
cmpsl
daa
xlat
shl
cmc
and
jno
ds
addl
pop
and
fadds
sti
fwait
dec
dec
fwait
aad
mov
andb
and
repz
sar
push
push
sub
sbb
loope
pop
insb
jmp
dec
int3
arpl
mov
add
shufps
jne
stc
jno
xchg
push
mov
aad
in
mov
push
aaa
decb
cltd
sub
mov
pop
pop
cmp
jns
pop
sti
jmp
insb
mov
nop
jne
xchg
jne
fadd
arpl
faddl
or
mov
xchg
sbb
fcomip
fwait
push
js
es
or
rcl
or
cmp
mov
divb
dec
lods
adc
push
and
out
loop
sbb
les
mov
mov
icebp
xchg
lods
mov
add
dec
es
jne
push
xchg
aam
lret
repz
pop
cmc
lds
cmp
or
stos
pop
mov
mov
data16
xchg
fucomp
sbb
or
imul
out
xor
adc
in
pop
sahf
add
xchg
jp
adc
xchg
out
out
fs
leave
paddd
mov
adc
shlb
sub
dec
or
idivb
fsubrl
shrb
sub
mulb
jbe
inc
xchg
popa
sub
add
mov
aam
xchg
lahf
and
inc
bound
sub
outsb
push
mov
ret
push
inc
adc
rolb
scas
das
out
inc
cmp
popf
xchg
incl
bnd
cltd
mov
cmpxchg
or
scas
mov
sbb
or
dec
fmull
pushf
insb
repnz
lahf
push
jno
add
pop
ret
call
push
fcmovnu
pop
xchg
adc
cmc
dec
stos
xor
push
add
add
mov
inc
popa
inc
pop
mov
les
push
data16
fstp
mov
scas
iret
jmp
sbb
adc
jbe
xchg
xor
out
call
fcoms
mov
jo
jecxz
adc
dec
inc
push
push
aaa
cmp
clc
in
xchg
rcrb
mov
arpl
dec
mov
or
mov
xchg
lds
inc
sti
mov
shlb
cmpsl
xor
dec
or
mov
or
pop
mov
inc
pop
mov
adc
add
leave
ss
pop
xchg
clc
mov
fcompl
js
cmp
ds
movsl
inc
adc
std
or
push
push
lret
and
cmp
mov
fisubrl
lcall
sbb
out
sti
out
adc
imul
orl
loop,pt
movsb
jmp
xchg
test
push
mov
movsl
pop
arpl
adc
jb
mov
sub
push
add
add
mov
imul
dec
jl
pop
mov
shrl
fsubl
inc
rcll
imul
fidivs
push
pop
sub
mov
adc
insb
ret
pop
loope
movsl
aam
xchg
in
pop
cwtl
pop
mull
xchg
insb
jbe
test
insb
xchg
xchg
cmp
outsl
fnstenv
pop
loop
outsl
inc
push
adc
outsl
popf
pop
sbb
fcoml
or
or
adc
cmp
mov
out
lea
je
mov
addr16
pop
mov
popf
or
push
push
addl
fisttpl
jne
insb
out
cmpsl
xor
shr
into
test
mov
pop
test
imul
cli
cmp
fsubrp
bound
jne
lds
mov
lods
into
fs
lds
sbb
jg
imul
mov
aas
xor
lret
cmc
dec
cmpsb
test
pop
mov
pop
adc
adc
mov
adc
add
ret
popf
mov
xchg
mov
push
lret
scas
xchg
mov
das
pop
sub
ret
push
mov
mov
fsubrs
cmpsl
and
ja
movsb
jae
xor
pop
lret
pop
stc
jne
xchg
arpl
adc
add
inc
lods
imul
push
icebp
dec
and
ja
mov
mov
repnz
push
sbb
je
mov
mov
out
pop
push
sbbb
in
test
out
in
dec
mov
lods
int3
jbe
mov
fwait
insb
mov
jp
xor
aaa
popf
das
cmc
int
mov
push
icebp
add
or
out
xrelease
push
push
inc
fists
imul
pop
jle
scas
inc
iret
pop
mov
push
mov
cli
out
negb
fildl
xchg
jb
jle
movsl
xor
int3
dec
outsl
lea
repz
jns
adc
lock
cltd
daa
inc
xlat
jo
xchg
adc
sahf
jp
push
fnstsw
inc
add
jmp
divl
or
adc
leave
maskmovq
cltd
in
fdivrl
sub
shll
xchg
arpl
push
mov
test
and
scas
mov
ret
arpl
fistl
dec
lcall
lea
xchg
add
and
data16
mov
dec
fidivs
xlat
push
notl
cmc
inc
inc
ret
and
pop
mov
pop
sub
sbb
cmp
xor
out
testl
je
xchg
jmp
in
iret
jbe
aas
shrb
jmp
pop
pushf
push
inc
push
mov
mov
addb
xor
pop
jo
mov
lds
jns
push
std
push
cmp
push
sbb
xchg
out
lahf
push
dec
cmp
push
fimuls
xchg
cmp
test
or
lock
out
sbb
test
stos
pusha
jp
mov
insl
rolb
sub
mov
and
popf
or
sahf
xor
pusha
push
adc
test
arpl
and
scas
repnz
cs
sbb
push
sub
or
fsubs
inc
xchg
jle
cmc
das
adc
addr16
sub
ss
xor
dec
mov
cmp
mov
mov
cmp
fimuls
dec
jbe
sub
repz
movsl
faddp
xchg
or
push
cmp
iret
movsl
sbb
and
pushf
cli
data16
insb
jp
mov
js
jmp
dec
mov
test
pop
clc
cmp
pop
fcomip
cld
iret
lcall
xchg
mov
in
pop
lret
lea
inc
int3
imul
xchg
pushf
pushf
mov
cmp
stos
pop
repnz
in
jbe
jmp
mov
loope
scas
xchg
lahf
mov
sbb
jmp
or
scas
cmp
cmp
aad
sub
pusha
mov
xor
adc
dec
or
scas
and
jb
xor
push
addr16
std
or
out
bound
push
jo
out
mov
mov
les
sbb
inc
add
xor
mov
je
dec
push
outsl
and
xor
mov
and
outsb
cwtl
ss
call
mov
ret
dec
pop
sahf
jmp
xchg
int
and
popf
insb
inc
cmc
jmp
xchg
loop
out
fdivrp
or
aaa
jne
mov
adc
jns
out
xor
subl
loop
or
insl
cmp
in
push
push
in
adc
cmc
rsm
mov
xor
fmulp
rcll
pop
jno
loope
imul
shlb
cmp
mov
outsl
adc
sub
es
fwait
dec
test
dec
insl
gs
sbb
push
int3
aad
cs
fidivrl
jg
mov
test
dec
xor
xchg
aaa
je
xor
push
ret
stos
cmp
in
pusha
push
popf
sbb
jns
xchg
addb
mov
sub
fst
arpl
sbb
cmpsb
push
mov
pop
mov
test
arpl
hlt
inc
js
cmpsb
std
xor
movsb
subl
jae
stc
leave
faddl
lock
push
js
jp
notl
jp
xor
ret
mov
sub
xor
mov
adc
lret
test
push
shrl
sar
sti
jmp
les
dec
pop
rol
mov
push
inc
call
push
into
test
push
jno
lret
lcall
xchg
cltd
call
cmp
jno
jae
ds
outsl
outsb
adc
int3
cwtl
ja
das
loop
in
out
jl
and
ljmp
aaa
imul
mov
dec
test
lret
or
jns
int
scas
xchg
das
ljmp
incb
jbe
mov
movl
add
int3
inc
xor
jp
in
inc
stc
pop
push
jp
xchg
fildll
mov
jnp
in
fimuls
jb
aaa
mov
imul
adc
aam
in
sahf
call
push
adc
dec
pop
dec
push
popf
jp
adc
shll
or
add
xchg
pop
mov
or
cmp
xor
fcoml
fisubs
leave
cld
ds
arpl
mov
ljmp
in
dec
adc
cmpsl
loop
cmp
notb
jp
pop
gs
aam
mov
into
hlt
fidivrs
sbb
mov
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
push
jge
and
rcrb
add
push
fcmovnb
daa
fdivr
cli
cmp
sahf
ror
xor
push
lcall
mov
sbb
sahf
scas
imul
popf
js
ror
push
dec
iret
jmp
mov
or
inc
je
fisttps
dec
pop
cmpsb
test
loope
cmp
sub
enter
jno
push
add
pop
stos
push
cmp
jae
jnp
or
fadd
sub
daa
jge
ja
inc
jge
ljmp
jb
jp
mov
inc
stos
mov
adc
mov
faddp
je
fstps
dec
shl
cs
xchg
and
fwait
dec
push
scas
cltd
icebp
pop
and
push
popf
adc
mov
fs
adc
clc
popf
jb
icebp
fidivl
inc
insl
or
out
in
mov
aad
rolb
mov
sarl
lods
pop
out
mov
sub
das
cmp
ss
mov
xrelease
mov
jae
aas
xchg
mov
and
leave
aam
dec
add
ja
adc
stos
mov
sub
rolb
fisubrs
add
add
mov
push
mov
jmp
add
push
push
sub
shll
fwait
xor
lds
mov
sbb
xchg
push
ss
out
xchg
out
inc
pop
insb
jle
push
push
inc
out
dec
mov
lahf
js
fnstcw
popa
lds
xorl
pop
das
mov
pop
fsub
sub
jbe
add
out
mov
mov
dec
repnz
arpl
arpl
adc
sbb
shl
imul
jmp
orb
cmp
mov
push
sub
subl
dec
in
scas
les
adc
mov
jo
test
pop
sbb
pop
test
cmc
enter
ja
cmp
ja
xchg
aad
int3
ljmp
or
ljmp
mov
ret
aam
mov
inc
inc
sub
test
loopne
aas
scas
adc
and
xchg
pushf
nop
scas
dec
adc
in
xor
std
cmpsl
jl,pt
pop
mov
push
dec
xchg
or
fisttps
push
and
or
fwait
and
dec
sub
stc
sti
pop
imul
mov
inc
cmc
fs
scas
push
dec
jl
xor
xchg
in
mov
in
pop
mov
lret
stos
in
test
data16
pop
test
hlt
movsb
sub
pop
xchg
pop
stos
mov
jg
jns
pop
push
mov
pop
repnz
mov
push
mov
stc
inc
inc
dec
add
out
mov
mov
xchg
cmp
fsubs
mov
cmp
arpl
mov
out
loop
sbb
std
cmp
push
inc
outsb
inc
outsl
out
xchg
pop
pop
sbb
jnp
xor
hlt
cwtl
cmp
sub
into
jl
mov
test
xchg
int
scas
mov
jp
push
jb
mov
adc
icebp
movsb
jmp
jle
add
xchg
pop
add
push
fbstp
into
mov
sbb
rcl
mov
push
lret
ret
xchg
mov
aam
pop
adc
cmpsl
sti
pop
sub
xor
sbb
mov
mov
xchg
loop
adc
add
enter
mov
cmp
std
icebp
call
insl
push
dec
idivl
psadbw
add
pushf
sbb
and
dec
aam
jmp
inc
mov
xchg
nop
in
les
imul
sbb
scas
mov
jae
pusha
and
sub
outsb
push
mov
mov
cmp
jl
fucomip
cltd
aas
and
repz
leave
xchg
pop
pop
ret
pop
xchg
cli
fmuls
out
push
int3
push
sub
mov
and
aad
mov
lcall
or
insb
cmp
xor
push
stc
mov
cmpsb
mov
js
mov
notb
pushl
outsl
inc
sub
test
jno
xor
and
mov
fldenv
fstp
dec
lock
lcall
add
pop
mov
ss
mov
stos
and
or
inc
mov
arpl
mov
inc
jg
mov
push
dec
xchg
pop
mov
push
push
gs
in
inc
in
mulb
xchg
jmp
out
bound
cmpsb
in
jge
pop
into
in
test
aaa
sti
pop
xor
cmp
cmp
mull
orl
mov
rcl
mov
call
cmc
and
aam
fidivs
into
push
fstpl
jmp
add
loopne
or
cmp
test
xor
jg
dec
pop
je
fadds
icebp
xchg
enter
mov
push
xchg
xor
sub
cld
enter
fistl
cmp
frstor
leave
and
adc
lret
aas
add
repz
out
adc
mov
push
in
inc
mov
stos
dec
push
xacquire
inc
pop
in
rcrl
stos
pop
arpl
xchg
xchg
inc
ret
adc
adc
in
mov
mov
sahf
es
dec
clc
sub
xor
frstor
mov
cmp
cmc
bound
jne
xchg
jl
lret
cmp
aas
out
cmc
sar
test
gs
andb
adc
incl
dec
inc
pop
in
in
cmp
cmp
sbb
scas
pop
js
movsl
and
popf
loopne
mov
cmp
movsl
leave
push
in
mov
arpl
mov
test
push
mov
inc
sbb
mov
mov
notl
or
sub
repnz
repz
push
in
popl
jmp
gs
sbb
int3
lock
inc
mov
fwait
pop
add
add
inc
ljmp
dec
xor
cmp
call
loope
rorl
adc
movsb
mov
mov
rcrl
leave
jle
mov
icebp
pop
push
mov
int3
adc
into
lods
push
mov
mov
mov
jae
dec
inc
push
xchg
xchg
ds
jle
sahf
xor
mov
cmp
sub
inc
add
mov
cmp
xor
or
and
in
sbb
enter
or
loopne
push
stc
push
mov
sbb
sbb
cltd
test
pop
sub
mov
inc
xchg
or
ja
gs
xor
cli
test
scas
dec
ret
and
icebp
movsw
xor
out
or
sbb
iret
ret
imul
adc
xor
mov
sahf
cmp
out
mov
fwait
dec
enter
or
cmp
sub
cmp
lods
push
sub
sbb
aas
xchg
in
add
stos
or
fiaddl
aaa
jno
cmpsb
dec
push
cmp
mov
inc
xchg
adc
lods
shrb
push
pushl
loop
neg
js
add
mov
pop
mov
lea
je
pop
mov
mov
cmpsl
out
in
mov
cmp
or
imul
mov
sbb
xor
fsts
xchg
xchg
and
jg
pusha
push
int
add
arpl
cmp
fistl
lret
jb
fidivrs
sub
addr16
shl
mov
pop
dec
pop
xchg
imul
ss
sarl
xchg
out
inc
jle
sar
and
ret
fstpt
sbb
loope
cmp
lahf
int
lahf
mov
jno
push
aaa
movsb
test
pop
and
pop
adc
xchg
sbb
dec
cmpsl
enter
movsb
les
xchg
jmp
mov
cmp
fsubs
jbe
mov
out
mov
cmp
nop
inc
add
das
push
jnp
adc
inc
lahf
call
mov
repz
cmp
std
icebp
xchg
and
ja
enter
jne,pt
enter
xor
mov
outsb
cmpsb
fs
mov
adc
jo
fbld
pmuludq
push
push
jecxz,pt
in
dec
mov
stos
dec
repnz
lods
es
xchg
and
popa
adc
test
cmp
mov
inc
pop
call
sbb
mov
je
jae
nop
in
add
pop
pop
and
cs
inc
lcall
inc
enter
popf
jb
and
out
imul
xchg
mov
and
testl
js
add
jno
das
jmp
lea
call
pop
fadds
ss
loopne
jno
mov
lock
xor
ss
mov
out
sub
sbb
test
jae
mov
clc
cmp
cmp
das
rcrb
inc
in
arpl
push
push
dec
insl
cmpsl
sti
or
or
aam
dec
je
mov
add
fisttpl
push
cltd
hlt
jle
stc
cmp
jo
fcmovb
sti
lret
mov
dec
mov
pop
scas
cs
xchg
jae
fmul
loop
std
outsl
gs
jbe
gs
xchg
cmp
push
dec
cmc
movsl
push
push
nop
mov
subb
jge
add
xchg
sarb
cli
rorb
in
pop
add
xchg
jo
bound
movsl
jle
addb
inc
in
jns
movsb
xlat
test
mov
xor
jno
pop
pusha
cmp
add
push
loop
or
cmpsl
movsb
xorl
adc
jae,pn
int
dec
lret
movsb
aad
clc
ljmp
int3
or
adc
lret
sub
and
push
out
mov
xor
ss
jl
les
push
dec
dec
mov
andb
jb
flds
push
mov
insb
movsb
call
sbb
xchg
ljmp
sbb
jecxz
cmp
jecxz
in
mov
lret
sbb
mov
dec
mov
sub
dec
xchg
cmp
aam
sbb
dec
jge
xchg
insl
adc
in
int
sbb
loopne
in
sub
push
stos
dec
dec
and
mov
jno
cmp
add
xchg
dec
pop
pop
xor
cmpsl
mov
xor
add
sbb
fs
jb
jne
xor
sub
or
or
mov
adc
or
cmpsb
lods
jp
cmp
push
lahf
lahf
data16
jne
mov
mov
movsb
and
sbb
pop
sub
and
push
jge
ret
mov
aad
ja
cmp
rorb
outsb
inc
xchg
imul
xchg
cmp
negb
daa
ret
jle
and
mov
fnsave
fwait
xorl
andl
mov
xchg
repnz
scas
dec
int3
xlat
adc
mov
fidivl
push
clc
mov
aas
cli
mov
adc
rcrl
adc
xchg
lret
ja
jmp
pop
fists
leave
push
cwtl
testl
mov
call
push
das
sub
rol
sbb
or
adc
test
scas
call
or
xchg
lds
and
shr
or
sbb
cs
pop
cmpsb
pop
fwait
popa
out
inc
into
ss
mov
fisubl
xchg
xor
pop
add
pop
push
push
mov
jae
or
jl
out
pop
inc
fwait
mov
mov
scas
inc
lahf
jb
test
adc
jp
cli
pop
int
bound
aaa
dec
mov
scas
or
sti
pop
fstps
mov
mov
fstps
clc
ret
out
mov
cld
xchg
xor
add
leave
xlat
add
add
and
or
push
stos
aam
adc
or
pop
push
fld
dec
jbe
sub
mov
mov
add
mov
mov
mov
mov
jmp
xor
lock
in
xchg
xchg
aas
fistps
lret
rcll
pop
push
xor
push
jo
or
rol
imul
xchg
pop
fcomps
jno
inc
xchg
mov
aad
sbb
arpl
pop
loop
into
icebp
fisttpl
imul
aad
add
sar
aad
dec
mov
mov
push
sahf
imul
jno
sbb
popl
push
jae
mov
por
sub
ret
and
inc
pop
int3
cmp
leave
xlat
pop
pop
rcrb
xchg
daa
xor
mov
movsl
inc
fisubs
enter
sub
pop
insl
pop
les
enter
lret
shrl
fildll
cli
divl
pop
push
cmpsl
cmp
movsl
sti
sbb
enter
sahf
pop
adc
mov
cmpsb
aad
add
stos
cmpsl
sub
movsl
negl
lahf
nop
cmpsl
inc
daa
xor
lods
lds
hlt
mov
push
mov
shld
jbe
sub
push
jmp
subl
ret
sarl
negb
stos
fiaddl
cltd
hlt
stos
stos
mov
jns
out
xchg
int3
rdpmc
jo
or
jl
push
jl
movsl
and
lcall
inc
int3
fists
scas
out
aaa
push
sbb
cmp
aas
jbe
mov
push
sub
inc
pop
sub
jg
pop
cmpsb
adc
and
lods
loop
push
xor
stos
mov
cmp
fucomip
xchg
mov
fnstenv
pop
pop
ja
jg
outsl
into
mov
mov
push
loope
push
sti
adc
pop
xor
fs
pushf
add
in
adc
push
call
daa
loope
push
fwait
test
loope
and
loopne,pn
notl
sub
sbb
mul
test
loopne
mov
daa
cmc
sub
and
xchg
mov
pop
xor
in
dec
mov
push
mov
loope
push
sbb
movsb
je
push
enter
mov
mov
femms
push
inc
jmp
inc
stos
daa
cmc
xor
loope
mov
mov
addr16
and
sti
and
adc
stos
mov
cmp
in
fisttpll
aam
mov
mov
stos
data16
pop
xor
lods
pop
ret
jle
call
push
xorb
repnz
lcall
cmp
sbb
loopne
into
sub
popf
ljmp
insb
leave
mov
in
ret
inc
iret
xchg
adc
adc
sbb
xchg
sub
xor
dec
jge
mov
fsubr
repnz
mov
lea
cmp
cmp
xor
stos
xor
lret
insl
inc
push
enter
lods
sar
sbb
outsb
adc
imul
jno
lock
jmp
mov
and
xchg
in
pop
xchg
sarl
arpl
and
daa
or
xor
and
inc
add
shl
dec
in
ret
adc
mov
in
push
pop
mov
out
cli
inc
mov
jnp
data16
sti
xchg
loope
xchg
xchg
mov
mov
push
push
out
mov
int3
imul
pop
mov
outsb
cmp
pusha
add
aaa
cmp
sub
mov
jns
jecxz
mov
push
pop
xchg
sti
xchg
je
jmp
pop
mov
clc
xor
mov
test
int3
push
or
push
mov
lret
mov
mov
cmp
sti
xor
imul
loopne
lds
bound
sbb
icebp
mov
cli
shl
mov
lahf
rcrl
clc
test
sbb
in
mov
repz
add
mov
popf
mov
loop
push
ret
loop
sub
pop
imul
sbb
jge
sbb
int3
test
cmpsb
or
sbb
aad
fsubrs
outsb
mov
inc
cmpsl
incl
xor
push
mov
adc
loopne
push
popa
mov
out
push
in
mov
push
jnp
mov
bound
inc
adc
pop
movsl
pop
stos
pusha
in
sbb
jns
dec
jge
cmp
add
loop
aad
in
mov
push
roll
pop
push
push
dec
inc
add
inc
pop
jbe
loopne
or
cmp
out
pop
inc
cltd
jmp
js
in
jno
outsb
xchg
rcll
mov
jg
fwait
lahf
mov
ret
mov
ljmp
ret
xchg
scas
jne
pop
sub
dec
mov
xor
xor
mov
jns
mov
sbb
loopne
aam
js
stos
or
into
fwait
pop
xchg
inc
mov
les
xchg
cmp
test
roll
xor
jle
call
pushf
cmp
mov
pop
pop
notb
ja
mov
icebp
popa
xor
js
ljmp
cmc
dec
je
std
push
push
sub
cmp
pop
out
ljmp
shl
push
pop
push
push
and
or
xchg
mov
jns
jle
sbb
dec
mov
scas
push
xchg
dec
push
es
adc
push
fisubl
xchg
fisubrl
out
fnstenv
roll
or
pop
pushl
stos
dec
je
insl
call
sub
lea
push
lret
fidivs
lret
incb
add
rorl
adc
cmpsl
mov
cmpsl
sub
lods
fdivs
cmp
dec
add
in
into
xlat
mov
sahf
test
das
sub
lahf
fwait
pop
test
lcall
push
or
pop
pop
sbb
std
dec
addr16
cwtl
rcr
xchg
push
xor
add
push
cmp
in
cmp
or
pop
xchg
std
dec
and
sbb
rclb
mov
enter
mov
mov
fs
imul
jae
test
adc
stc
aas
fcoml
sbb
outsl
test
scas
int3
sbb
rcrl
lahf
sti
aas
adc
cmpsb
loope
adc
mov
xchg
call
xor
icebp
popf
sbb
test
rorb
xor
jb
scas
mov
pop
mov
insl
mov
sub
addr16
mov
jae
int
jecxz
mov
mov
out
sbb
dec
sub
fdivrl
push
in
testl
fs
sbb
jo
sbb
jnp
pop
dec
js
ja
dec
dec
lahf
pop
mov
nop
xlat
cld
enter
lret
nop
int3
adc
repnz
test
add
loop
out
mov
jns
bound
daa
xor
adc
dec
int3
mov
cmp
pusha
sbb
daa
push
sub
aas
jle
mov
testb
add
mov
xchg
imul
pop
mov
mov
outsl
insl
add
xchg
in
lds
mov
and
arpl
jb
ss
sbb
pop
cli
xor
addr16
cld
daa
loop
aad
mov
pop
pop
adc
mov
xchg
cwtl
inc
dec
inc
out
mov
dec
dec
int
push
jb
sub
mov
test
pop
adc
es
or
cwtl
dec
adc
pop
xchg
push
stos
outsl
xchg
mov
andl
lret
stos
inc
repnz
sbbb
mov
xor
loop
je
dec
cmp
add
inc
pop
push
loope
stos
icebp
and
sbb
jl
ljmp
inc
pop
mov
fcoms
ss
add
imul
push
mov
push
jp
outsl
push
xchg
das
int3
fcompl
cmpsb
adc
pop
sti
mov
scas
lds
fbstp
inc
push
xor
fxam
pop
mov
adc
lock
shll
inc
call
sub
mov
lret
fs
stc
cs
mov
pushf
jae
inc
test
fsubl
dec
fdivrs
les
stos
dec
ret
inc
imul
xor
into
in
imul
mov
mov
mov
in
movsl
dec
test
xchg
add
jg
insb
push
cmp
rcr
mov
rol
mov
mov
cmp
movsl
in
inc
inc
pop
jp
jne
fwait
push
leave
jno
sbb
xchg
leave
cld
push
add
adc
mov
mov
jl
imul
pop
or
add
mov
adc
imul
add
sbb
sahf
out
out
push
mov
mov
pusha
cmp
dec
dec
pop
push
es
shlb
lds
sbb
adc
call
outsb
pop
ljmp
cli
jnp
movsl
fisttpl
inc
pop
fmuls
sbb
xor
cmpsb
cmc
xchg
jge
mov
jnp
divb
xor
fstpl
in
pop
mov
sub
xchg
lds
cld
shr
outsl
je
lret
sub
jmp
xchg
fldenv
push
stos
mov
hlt
aas
dec
and
movlps
dec
add
mov
xchg
mov
sbb
ffreep
imul
aaa
sbb
dec
lcall
ja
daa
cltd
and
mov
clc
bound
push
push
stos
cmc
mov
movb
subb
push
mov
mov
push
jbe
sahf
or
lds
push
jl
xor
jae
scas
add
mov
stos
xor
cmc
test
movsl
sbb
mov
daa
sbb
sub
inc
and
daa
cld
push
les
dec
sub
std
xchg
lods
xorb
sub
outsl
lret
dec
pop
int
sub
jns
push
rorl
fldenv
push
loopne
pop
sbb
inc
imul
jge
push
pop
ja
or
pop
mov
pusha
sub
push
push
lds
add
inc
sti
repnz
jae
cltd
dec
fildll
fcompl
ja
mov
idivl
adc
jbe
or
aam
push
lret
rcrb
inc
cmp
xchg
mov
cmp
push
dec
std
data16
push
mov
sbb
sarl
pop
and
popf
xor
enter
xchg
ss
jb
sarl
stos
clc
dec
sub
clc
dec
and
aas
aam
jge
in
push
fsubl
dec
ja
movsb
jo
int3
mov
aas
or
hlt
std
into
testb
jbe
add
aas
inc
pop
cli
rclb
push
inc
push
fwait
sub
and
movsl
data16
adc
hlt
out
icebp
add
idivb
popf
push
inc
inc
movsl
jmp
mov
inc
pop
add
aam
out
mov
push
pop
pop
push
ljmp
jp
outsl
movsl
mov
sub
es
mov
cltd
pop
jbe
xor
js
dec
jno
dec
pop
push
out
andl
dec
aas
xor
jmp
mull
bound
push
inc
xchg
int
jb
clc
icebp
xchg
adc
mov
sbb
lds
rcll
push
jmp
push
jnp
int
sbb
xchg
xchg
scas
push
mov
mov
jge
xchg
adc
pop
loop
sarb
gs
xorl
adc
jns
dec
pushf
aas
lret
inc
roll
push
xchg
data16
add
sbbl
mov
sub
push
push
ror
pop
xchg
mov
push
push
test
add
hlt
xor
and
fbld
and
dec
stos
out
jge
jecxz
sbb
xchg
pop
aad
and
cmpsb
sub
and
fs
test
gs
inc
test
ss
cmp
cmp
mov
cmpsb
scas
int3
or
pminub
dec
inc
xchg
cld
sahf
leave
or
enter
pusha
and
cmp
cli
std
push
iret
adc
cmp
mov
fistpl
mov
lret
push
mov
pop
xchg
pop
or
mov
lds
je
mov
ja
lock
xorl
jne
iret
jae
and
inc
mov
pop
stc
sub
fimuls
out
aaa
add
or
fcmovne
aas
dec
inc
in
movsl
lret
sbb
lods
mov
adc
add
sbb
in
sbb
mov
repnz
inc
movsl
out
insl
lods
stc
or
repz
shlb
mov
rorl
popf
and
sbb
jecxz
test
dec
pop
push
pop
dec
in
inc
arpl
dec
rcr
popf
dec
fs
inc
or
int3
lea
xchg
daa
aam
jg
imul
fcmovu
rolb
iret
aam
adc
cmpsl
push
mov
js
mov
in
xchg
pop
in
aam
outsl
xchg
pushf
sbb
mov
sbb
mov
fstp
sub
fimull
les
lahf
rclb
mov
dec
sub
fwait
dec
xchg
in
cmp
repnz
pushf
imul
cs
ja
inc
shll
jmp
ss
ja
in
addr16
xor
out
ljmp
mov
lcall
insl
gs
int3
or
sbb
fdivr
lock
pushw
cmp
sub
push
in
emms
loope
add
cmpb
mov
pop
dec
mov
lds
iret
fcomps
scas
push
jl
mov
aam
sub
retw
mov
ret
xor
push
sub
xchg
test
xchg
in
inc
mov
test
push
mov
sbb
test
jb
mov
xor
fbld
xchg
sbb
stc
xor
jecxz
mov
fistl
hlt
imul
and
sarl
pop
scas
lahf
out
js
std
xor
xchg
iret
xor
and
pusha
into
jle
push
fistl
adc
sahf
mov
cmpsl
in
or
adc
roll
fninit
popf
aad
int
stos
ljmp
js
inc
sbb
push
out
dec
loopne
in
in
fsubrp
int3
lret
jae
sbb
or
aaa
imull
inc
xchg
fimuls
pushf
jne
jb
mov
leave
inc
lret
mov
mov
sub
sub
jle
loope
inc
or
bound
adc
mov
repz
popa
ds
mov
fbld
sbb
sub
push
or
sbb
fidivl
or
xchg
clc
insl
xchg
add
sahf
lods
add
pushf
xchg
jle
mov
pushf
sbb
das
mov
push
lret
mov
repz
lock
lcall
lcall
imul
jp
shl
mov
sbbl
inc
test
ljmp
jno
into
fs
cmc
lcall
out
jmp
pop
stos
lods
or
push
xlat
xor
mov
jle
popf
cmpsb
cmpsl
lahf
lea
or
xor
lahf
mov
mov
clc
mov
mov
bound
jmp
cmpps
cli
jo
loop
xor
lods
ret
jl
dec
pusha
cli
inc
outsb
sbb
dec
cmp
adc
stos
fidivrs
mov
inc
cmp
xchg
enter
xor
jnp
out
fists
rcl
cs
addb
lods
pop
lcall
out
or
add
mov
jo
jecxz
scas
jle
roll
push
mov
loope
fidivl
insl
gs
push
push
jecxz
jl
iret
imulb
xchg
mov
sub
sti
mov
std
push
ljmp
popf
dec
dec
xor
vphsubbw
push
inc
jle
test
aaa
hlt
aas
jge
push
push
xchg
ja
xchg
cmp
or
adc
int3
enter
movsb
xchg
or
push
xchg
inc
pop
int
stc
cmpsb
jns
pop
jno
pop
dec
out
dec
and
lea
jnp
rcl
aam
icebp
dec
sbb
icebp
pop
mov
lahf
inc
fistps
aas
sub
vpcmpgtw
xchg
mov
loope
pop
sub
sahf
xor
outsl
bound
inc
xlat
cli
imul
jp
jb
xchg
jg
stos
cmp
lahf
lret
shrb
mov
mov
mov
or
into
push
mov
int3
js
push
fadd
mov
mov
cltd
imul
adc
xchg
jo
fnsave
fcom
dec
mov
add
dec
jbe
xor
shl
xchg
dec
pop
and
movsl
bound
adc
xor
mov
shrb
pop
jg
push
aaa
pusha
mov
loopne
ret
out
sub
sti
cld
lds
push
push
ficoms
pop
sub
inc
call
cmp
loope
fwait
cs
scas
push
sub
mov
mov
cmp
inc
ficoms
es
mov
push
psubusw
repz
imul
lret
cmc
pusha
inc
in
out
inc
shlb
insl
mov
fisttpll
or
add
outsb
lret
and
fsub
jp
and
ret
xchg
or
ss
mov
fisubrl
jecxz
mov
int
loop
push
std
daa
lret
insl
inc
push
pop
jle
mov
cmpsl
cwtl
subb
adc
stos
in
jno
test
adc
out
dec
push
cmp
cmc
inc
xchg
shll
repz
sub
bound
dec
je
imul
sbb
xor
lret
enter
push
mov
jns
xchg
mov
pop
jbe
shr
cmp
test
ljmp
xchg
fistpll
mov
pop
pushf
jo
adc
cs
pop
sub
mov
sahf
or
loopne
mov
enter
mov
cld
sub
lret
mov
aaa
cmp
cmp
dec
sbb
out
and
jmp
shr
in
outsl
stos
pop
fucomi
dec
lret
push
inc
adc
mov
or
lret
rcrl
mov
hlt
fdivp
pop
or
dec
push
ficomps
arpl
inc
aad
mov
pop
adc
jne
insl
clc
incl
rorl
dec
push
shrl
push
das
cmp
jp
dec
dec
sub
mov
inc
pop
loope
mov
shr
pop
pushf
movsl
jnp
jb
cli
xchg
push
cmp
cmp
lds
xor
push
mov
cmp
out
movsb
cmp
cmpsb
pusha
test
dec
movsl
jle
sub
dec
test
mov
add
sub
fcomps
sahf
dec
test
add
xor
fcoms
inc
sub
mov
data16
mov
xor
xor
xor
mov
sub
xlat
xchg
sbbb
and
sar
lock
sbb
mov
jle
push
mov
or
xchg
push
aaa
add
dec
loope
outsb
imul
test
loope
fiaddl
into
sbbb
imul
aas
lock
xchg
popf
in
sahf
lcall
or
imul
inc
mov
lret
dec
in
push
cli
out
sahf
fadd
fists
int
xor
pushf
dec
xor
xor
mov
add
adc
mov
hlt
adc
dec
or
mov
sbb
mov
mov
cld
xor
and
push
outsl
popf
pop
push
clc
testl
push
cmc
ret
add
pop
push
jmp
test
mov
adc
iret
into
jmp
dec
push
add
sub
add
mov
out
xor
es
clc
dec
aaa
mov
fwait
rep
push
mov
mov
leave
rclb
and
das
jae
pop
movsb
and
xchg
inc
mov
and
mov
xchg
fs
mov
into
iret
sub
dec
cmp
es
adc
arpl
sbb
arpl
popf
aad
loopne
imul
sar
pop
sbb
mov
imull
cmpsb
lsl
cmp
dec
xor
fsubs
lahf
insl
repz
pop
dec
dec
push
jns
inc
movsl
sbb
lods
add
rorl
mov
add
imul
jmp
clc
loope
mov
test
mov
dec
pop
test
cmp
popa
rcrb
pusha
mov
je
or
adc
in
dec
inc
jmp
std
xchg
inc
mov
outsl
mov
sub
pop
jp
in
jmp
pop
adc
mov
lock
pop
stc
mov
orb
cld
jne
pusha
xchg
inc
shrb
mov
jmp
mov
cmc
or
push
adc
int3
pop
mov
jae
xchg
movsl
dec
lea
imul
daa
ja
sar
jno
into
sbb
or
mov
lret
and
push
cmpb
test
cmc
jns
adc
adc
aad
push
fstpt
in
movsl
push
lahf
or
into
lock
repnz
inc
jmp
idiv
or
or
xchg
je
xchg
pusha
shll
repz
insb
sub
sub
scas
xor
mov
repnz
loopne
cmc
das
aas
movsl
sub
jg
lds
fisubrl
mov
adc
mov
jae
cs
push
int3
sub
xchg
mov
test
fidivs
lret
cmp
std
ds
adc
jge
in
sub
jp
loop
rcr
sarl
mov
mov
and
mov
dec
adc
jecxz
xchg
sar
stc
push
mov
rorl
into
add
addl
mov
shrl
ds
outsl
jns
insb
push
pop
adc
add
lahf
cmp
fucom
and
fnstcw
jecxz
stos
xchg
cmp
mov
movsb
fldenv
mov
out
pop
cld
xor
inc
jmp
jecxz
cltd
aad
adc
push
je
mov
scas
aaa
scas
and
mov
and
clc
jge
mov
adc
or
icebp
fs
mov
mov
adc
add
and
jno
and
movsl
pop
sub
push
mov
cli
cs
jnp
jbe
sub
mov
push
mov
stc
xor
ss
push
inc
je
sahf
lret
out
sub
stos
mov
mov
sbb
jnp
lods
imul
jp
aam
or
je
inc
push
dec
or
xorl
arpl
inc
loop
mov
jns
aam
mov
xchg
ret
cltd
mov
sbb
add
mov
pop
cmp
cmp
ret
push
sub
sbb
mov
xchg
mov
sub
dec
das
lods
call
jp
push
dec
mov
xor
jae
lcall
outsl
je
push
fwait
xor
test
aaa
mov
xorb
cld
add
movsl
sbb
xchg
mov
je
gs
inc
por
fcompl
js
cmp
sbb
lock
or
movaps
clc
cmp
das
push
dec
mov
lcall
lcall
sub
pop
dec
test
lock
das
pop
push
aad
jg
cs
negl
mov
xorl
in
add
mov
cmp
movsl
adc
pop
adc
mov
lds
jns
out
jb
add
mov
jl
xor
cmp
inc
mov
mov
mov
mov
sub
cmpsb
pop
fadds
xor
fildll
pop
les
push
inc
inc
dec
mov
push
sbb
add
mov
and
jnp
cmp
scas
or
das
xchg
jo
nop
xor
sahf
sbb
mov
jecxz
adc
mov
loope
shlb
fs
mov
inc
out
repz
enter
inc
mov
sbb
pushf
mov
gs
sub
movsb
imul
pop
notb
mov
scas
and
test
mov
jecxz
lock
in
jg
dec
dec
add
aad
mov
popf
and
inc
lcall
loop
mov
mov
imul
mov
rcll
sub
cmp
outsb
push
xchg
pop
adc
push
stos
cmp
fsubs
xadd
cmpl
frstor
xchg
cmp
imul
jg
or
cld
and
ficomps
xchg
sub
and
cmpsl
loope
mov
enter
xor
mov
push
movsb
dec
push
testb
xlat
sub
jnp
ret
adc
pop
aad
mov
mov
int
test
dec
pop
mov
jp
dec
mov
jo
ljmp
les
std
add
pop
mov
test
test
inc
mov
int3
inc
push
loop
push
test
shrl
cmp
sbb
xor
mov
cmpsb
imul
sbb
xchg
leave
les
dec
in
outsb
pop
data16
xchg
mov
dec
iret
lock
pop
push
sbb
xlat
push
inc
nop
lea
or
add
pop
enter
cmp
loope
push
lods
cmp
inc
in
sub
adc
dec
fwait
mov
test
adc
mov
push
mov
lahf
sub
mov
cmp
cmpsl
pop
cmp
ret
mov
dec
jbe
outsl
inc
insl
cmc
add
sbb
fadds
jle
test
ja
and
jne
jle
dec
inc
in
test
popa
lock
mov
adc
xchg
jb
and
fisubrl
stos
fabs
movsb
fs
loopne
pop
in
inc
int3
mov
icebp
xor
stc
pop
sbb
jp
inc
fdiv
test
cwtl
sub
int3
jmp
les
int3
push
jne
lods
dec
lods
mov
fnop
inc
test
ror
inc
dec
xchg
inc
pop
in
sbbl
xchg
dec
ss
jecxz
enter
xchg
repnz
pusha
aad
dec
adc
add
jp
jb
push
insl
cwtl
fwait
rcrl
imul
push
sub
jecxz
scas
mov
sbb
filds
mov
xor
aam
pop
pop
ja
mov
jo
sar
mov
test
cld
push
in
ljmp
jecxz
jno
cmp
inc
and
push
fcmovne
or
sub
sbbb
or
push
jge
mov
stos
popf
mov
xor
sbb
mov
or
pop
push
sub
ljmp
stc
cmc
inc
rcll
lock
mov
movsb
shrb
pop
mov
ret
pop
push
scas
outsb
pop
es
sbb
pop
shrl
jae
push
push
dec
icebp
xchg
add
cmpsb
xor
adc
jp
iret
aas
scas
adc
stos
adc
js
push
cli
imul
fwait
mov
sbb
cmp
jns
loop
pop
or
insb
mov
add
pop
fcomip
mov
int3
pushf
xchg
mov
outsb
pop
and
push
add
xchg
inc
xchg
mov
scas
push
push
mov
inc
gs
sbb
scas
pop
mov
test
fld
push
mov
mov
in
ret
xchg
jle
loope
mov
addl
fidivl
ljmp
xor
inc
mov
idivb
in
mov
imull
mov
add
push
push
imulb
mov
stos
inc
inc
pop
clc
iret
negl
in
jle
cmc
adc
xor
pop
ret
sub
pop
xchg
push
fs
jo
out
mov
xchg
out
test
mov
rolb
mull
xchg
push
mov
dec
add
enter
pop
loope
mov
cmpsb
lret
mov
and
dec
sarl
aaa
addb
xor
les
test
mov
mov
adc
fcomip
sti
mov
cs
dec
repnz
push
pop
mov
cmpsl
sbb
and
sub
ss
fisubrl
dec
scas
cld
push
rclb
inc
adc
in
test
sbb
xor
and
mov
mov
loope
pop
jecxz
aaa
in
out
cld
fisubl
filds
inc
out
jp
jle
or
xchg
cli
adc
notl
inc
jo
or
shrl
jb
in
fnstsw
push
repnz
scas
push
icebp
nop
or
fs
xor
adcl
test
les
repnz
sub
mov
sbb
or
dec
pop
cmp
pop
mov
das
push
mov
clc
push
push
mov
inc
adc
adc
sarb
imul
inc
mov
jnp
jl
pop
iret
sbb
mov
daa
movsl
xor
adc
xorb
iret
lahf
cmp
jg
pop
and
add
scas
fistl
icebp
xchg
andl
leave
ja
and
dec
or
jmpw
mov
xor
aaa
jae
je
shr
xor
arpl
sarl
sub
add
lcall
in
inc
inc
sub
mov
push
push
cmc
cs
fbstp
add
fdivl
mov
dec
jnp
cli
jnp
push
mov
push
push
bound
xor
or
or
inc
shr
and
push
dec
in
or
mov
dec
xchg
sbb
aas
fwait
lds
push
xor
lcall
idiv
dec
aad
cmp
clc
scas
enter
scas
mov
mov
mov
stc
dec
adc
fs
out
inc
daa
xor
fsubl
and
xchg
jecxz
fistl
push
cmp
xchg
fmuls
vpslld
cmpl
jno
imul
push
pop
rorb
cmp
push
inc
cmc
xchg
loop
outsb
insl
iret
scas
lods
add
adc
xlat
out
ljmp
hlt
pop
movsb
push
sbbb
push
cs
cmp
xlat
loope
dec
adc
lds
mov
fistps
inc
into
dec
in
mov
pushf
mov
scas
adc
add
dec
xchg
mov
mov
in
ja
and
mov
call
mov
iret
inc
inc
lcall
and
imul
pop
gs
add
mov
xchg
cmpl
fcompl
aam
clc
in
xor
sahf
decb
pop
and
sbb
inc
inc
ja
mov
bound
mov
outsl
lret
pop
jae
push
iret
mov
fsubrs
daa
fs
es
xlat
addr16
and
mov
cltd
rorl
test
cld
xchg
sub
mov
cmc
lods
xchg
pop
jae
repz
sti
sub
ja
gs
test
jp
mov
adc
gs
jmp
sub
mov
ret
cmp
lock
adc
fiadds
mov
or
or
fcoms
push
mov
dec
int
cmp
lcall
psraw
es
cmpsl
mov
ss
inc
push
lcall
or
lret
pop
inc
scas
dec
xchg
mov
xchg
xchg
addb
adc
add
ja
movsl
mov
xor
pop
jp
imul
lods
lahf
cmpsb
and
mov
loopne
in
and
pop
cmc
cli
sub
mov
mov
cld
fistps
arpl
sub
xchg
out
mov
rorb
cmp
sti
sub
add
dec
pop
rol
cltd
jno
dec
xchg
sarl
out
fwait
lds
fwait
push
jmp
push
lret
mov
dec
mov
ret
aam
mov
or
clc
call
mov
mov
mov
inc
xchg
loopne
aad
sub
xor
push
add
mov
nopl
lods
imul
daa
push
dec
rclb
test
cs
mov
cmp
faddl
xor
jns
stos
call
sbb
clc
mov
cmpsb
xchg
dec
push
clc
push
movsl
cwtl
mov
mov
lea
cwtl
cmp
mov
add
xor
and
xlat
add
cs
mov
add
cli
pusha
dec
lcall
mov
call
xchg
and
fisttpll
dec
daa
sub
mov
into
add
jecxz
rcrl
fdivl
jno
adc
or
inc
std
lret
outsl
add
jno
xlat
stos
xchg
push
sub
sub
leave
xlat
xor
decb
test
imull
lds
jecxz
inc
fiadds
cmp
out
sbb
lods
pop
mov
inc
in
scas
andb
mov
lods
xor
cwtl
and
add
cmpsl
inc
jmp
hlt
pop
xor
cmp
mov
xchg
aam
lahf
cmp
jl
or
lods
cmpb
mov
sbb
and
dec
pusha
and
into
jne
jae
pop
sbb
fmul
jmp
hlt
pushf
pop
pop
addr16
movsb
mov
mov
sub
inc
out
or
fs
imul
mov
repz
shlb
adc
pusha
jb
fwait
xchg
xor
sub
pushf
mov
cs
div
leave
stos
dec
mov
outsl
mov
scas
push
xchg
push
push
xchg
jge
or
pop
vdivps
lods
xor
sbb
jnp
or
adc
push
xor
bound
push
and
movsl
andl
mov
push
xor
les
mov
inc
mov
mov
in
xchg
pop
stos
sbb
arpl
loopne
adc
aaa
pop
lret
sub
jmp
pop
and
mov
pop
movb
insl
sbb
pop
dec
or
inc
fs
push
hlt
nop
inc
dec
push
mov
shrl
inc
pop
ljmp
jl
add
cld
jne
add
lods
pop
jnp
push
in
das
add
shl
push
cmp
ret
stc
adc
sarb
dec
inc
mov
or
jns
mov
outsb
mov
jecxz
aas
cwtl
int3
mov
xadd
mov
xlat
lea
inc
dec
fisubl
and
push
adc
lods
xor
jmp
inc
inc
adc
outsb
divl
mov
insl
aaa
pop
xchg
aas
ficomps
stc
jae
ja
cmp
and
xor
pop
mov
add
aas
shl
rclb
repz
push
mov
push
in
test
call
aad
fwait
push
mov
add
xor
test
adc
scas
adc
and
pop
mov
ret
pop
leave
into
jmp
and
cltd
sub
lahf
jb
xor
push
sub
movsl
cmp
xchg
je,pt
dec
arpl
icebp
lds
fstpl
add
dec
mov
sbb
xor
add
cli
sub
xchg
mov
test
jne
push
test
stos
repnz
jb
or
sub
or
cli
jp
in
imul
or
jecxz
xchg
cmp
call
ljmp
stos
inc
daa
js
movsb
lods
insl
mov
and
xor
imul
xor
and
and
jmp
sbb
mov
xchg
fisttpll
mov
adc
add
mov
jmp
sbb
jns
and
pop
icebp
cmpsl
jle
cmc
xchg
cwtl
ds
inc
repz
dec
iret
insb
push
notb
inc
shrl
pop
cld
test
pusha
xchg
int
xor
into
int
out
scas
inc
and
movsb
mov
adc
pop
pop
in
xchg
cmpsl
push
pop
push
aaa
mov
mov
std
add
cmp
out
into
test
mov
sti
popf
outsb
dec
push
lds
mov
sub
mov
cmpsl
sbb
call
dec
or
in
daa
in
scas
mov
lret
mov
in
sbb
imul
add
mov
push
sub
jmp
cmp
leave
pushf
shl
movsb
cmp
push
adc
mov
fbstp
movsl
scas
sbb
jmp
sbb
push
aad
mov
ds
xchg
les
mov
pop
les
jo
xchg
add
lea
fstps
or
lods
adc
repnz
loope
adc
push
cltd
lahf
sbb
add
rcll
bound
in
repnz
or
fimull
arpl
adc
pop
pusha
sti
xor
je
xchg
ds
std
or
and
stc
nop
or
loop
mov
or
sub
mov
jmp
repz
xchg
and
sar
dec
add
pop
adc
mov
das
push
add
dec
repz
mov
xchg
dec
cmp
loope
mov
cmpsl
pop
cmpsl
roll
push
scas
shll
jbe
daa
fldt
push
dec
cmp
lock
sub
dec
inc
pop
shr
addr16
ret
into
data16
adc
fisttps
dec
lods
popf
xchg
push
popa
pop
add
cmc
rclb
sti
mov
mov
loop
sbb
clc
inc
lret
sub
add
lahf
out
dec
in
insb
push
mov
xchg
add
and
out
add
xor
loop
sub
sub
lods
mov
test
add
rcll
push
testb
xor
dec
ds
and
dec
pusha
xor
and
lret
popf
push
jp
and
mov
push
fisubl
call
imul
dec
daa
add
test
push
dec
sbb
lods
pop
xor
inc
popf
imul
jmp
shr
xchg
test
mov
cmpsb
fbstp
mov
aaa
inc
lods
or
xor
inc
imul
shlb
mov
xchg
decb
xor
in
xor
xor
push
mov
movsb
sbb
jb
rcl
subb
jno
add
mov
je
jo
leave
sub
test
or
adc
outsb
shl
gs
out
lods
ds
mov
insb
inc
mov
mov
mov
es
inc
adc
pop
adcb
xor
mov
mov
pop
out
xor
mov
rcl
mov
pop
xor
dec
scas
out
mov
inc
sub
in
inc
fildl
push
cltd
leave
jns
gs
outsb
lea
jbe
xlat
aad
pushf
dec
or
and
jle
ret
add
pop
and
flds
test
out
sti
pop
and
xchg
iret
mov
lcall
in
hlt
rorb
add
pop
push
gs
mov
fisubs
inc
sbb
test
cmc
out
mov
sub
inc
push
sbbl
bound
andl
sti
push
add
pop
jnp
movl
sub
test
xor
lock
jecxz
add
push
iret
adc
sub
aad
leave
repz
andb
or
and
ljmp
xor
and
out
sahf
in
js
test
dec
push
movsl
push
mov
out
jp
cmp
xchg
dec
imul
jns
jno
ja
imul
neg
ret
inc
lret
xchg
and
pop
arpl
mov
rcll
insb
push
outsb
lret
ja
aaa
mov
imul
rcrl
dec
pop
nop
aas
jo
shl
xorl
pusha
xor
aad
jl
sub
les
mov
ljmp
dec
fcompl
aad
mov
fmull
push
hlt
pop
xor
mov
aas
mov
xor
dec
je
stos
and
push
xchg
cmp
divl
sub
gs
adc
mov
jne
imul
sbb
test
push
std
mov
jle
icebp
call
imul
xchg
jnp
iret
mov
xlat
mov
sti
jo
and
call
push
test
push
sbb
sbb
outsl
dec
rcrl
xor
jbe
mov
push
leave
cltd
add
sub
mov
push
cwtl
cmpsl
xor
pop
popa
mov
jns
cli
dec
pop
ja
mov
cmp
daa
shll
mov
mov
mov
xor
out
fwait
lcall
inc
xor
xchg
or
lret
sahf
and
pop
outsl
daa
pop
mov
sbb
mov
loope
xchg
jae
fs
or
mov
fdivl
pop
sbb
jg
push
mov
inc
push
jmp
out
add
lret
xlat
jmp
lods
pop
test
dec
insb
sbb
outsb
mov
sti
fsubl
inc
sarl
ljmp
mov
outsl
xchg
adc
add
icebp
mov
imulb
decl
jp
movsb
push
test
push
pop
test
not
and
mov
sbb
push
sbb
mov
lods
jmp
sub
gs
cmp
add
scas
lahf
sbb
ljmp
mov
enter
hlt
xor
mov
scas
pop
mov
frstor
sbb
scas
lahf
or
fcoms
jnp
mov
xchg
cmp
sub
dec
insb
mov
xchg
daa
push
inc
sub
cmp
ljmp
inc
lcall
cli
jne
lods
mov
shll
movsl
inc
jle
adc
inc
pop
fistpl
rorl
or
mov
jl
pop
outsb
or
andl
in
hlt
lret
add
or
xchg
adc
xchg
shrl
or
not
aam
aam
shll
cmc
cltd
fbld
add
jg
scas
cmpsb
push
inc
enter
add
loope
mov
mov
call
and
xchg
nop
cmpsb
or
shrb
sbb
pop
adc
test
in
scas
icebp
mov
clc
jp
sbb
add
add
fs
loope
inc
mov
ljmp
stc
xorl
pop
pushf
xor
nop
xchg
cwtl
lcall
cmp
je
adc
xor
mov
loopne
das
sbb
jo
iret
ret
das
cmp
mov
out
stc
ljmp
cli
xchg
stos
fisubrl
stos
hlt
jmp
xor
mov
inc
push
hlt
xchg
popa
mov
into
sub
shll
stc
ljmp
push
adc
sub
or
mov
es
cld
push
das
das
and
jnp
ds
mov
and
out
mov
iret
sub
mov
inc
or
fsts
xor
and
clc
jl
cltd
pop
push
cmp
cli
jmp
jbe
push
push
xchg
adcb
push
mov
push
fstpt
dec
jb
cmc
pop
repnz
lods
loopne
mov
divl
scas
nop
and
mov
enter
andl
cmpsb
mov
fsts
aas
xor
pop
icebp
aaa
and
mov
or
lcall
out
cmovo
fwait
repz
jns
push
sub
xchg
mov
xchg
das
in
mov
mov
lds
repnz
pop
mov
sub
xorl
cmp
pushf
shlb
mov
push
mov
mov
icebp
cmp
mov
icebp
jge
push
lea
mov
dec
testl
lock
jnp
pop
jbe
insl
icebp
mov
popf
and
push
mov
cmpb
shlb
and
scas
or
jae
dec
xchg
xchg
hlt
jge
add
aas
push
inc
or
sub
ret
psubq
cmp
cwtl
fstps
xchg
dec
fimuls
dec
in
sbb
mov
adc
mov
xchg
push
jp
adc
adc
imulb
ljmp
rcll
test
jecxz
incl
pusha
lock
mov
test
lret
cld
mov
or
sbb
or
sub
clc
sahf
idivl
mov
adc
and
xlat
loopne
es
enter
add
cmp
push
cmp
sub
add
bound
dec
mov
push
dec
pop
out
das
mov
lock
arpl
xchg
inc
aad
push
leave
pushf
mov
and
mov
jmp
movsb
xor
inc
jmp
sbb
aaa
testb
inc
dec
mov
mov
jp
jg
add
add
add
out
inc
cmpsl
cmp
pop
jnp
xchg
dec
sbb
inc
fbstp
adc
inc
pop
enter
mov
sahf
adc
jl
mov
lock
xchg
je
jb
test
pusha
lcall
fisttpl
adc
fcmovnb
and
pop
in
adc
jae
push
and
pop
fisttpl
sbb
jns
dec
data16
les
and
lods
sbb
cmpsb
jno
in
aam
es
cmp
push
add
fsubrp
das
std
icebp
test
sbb
testl
xor
push
repnz
adc
mov
ljmp
sbb
push
mov
lret
andb
xchg
adc
clc
sub
lret
repnz
push
dec
and
jl
out
cmpsl
test
rolb
stos
dec
mov
mov
jne
or
inc
push
mov
es
int
out
push
sti
jb
sub
push
icebp
mov
pop
stos
xor
sub
out
jbe
lods
or
shlb
sbb
rolb
jnp
lret
and
pop
push
adc
xchg
cmp
das
jp
stos
mov
loope
rorl
sbb
pop
cmp
jecxz
sub
out
sbbl
cld
pinsrw
iret
mov
hlt
dec
fwait
lahf
inc
xchg
pop
push
inc
sahf
xchg
sahf
pop
sahf
inc
sbb
or
mov
adc
ja
jle
mov
loop
mov
enter
addr16
and
push
pop
fidivrl
jecxz
and
mov
int
out
xorl
sbb
sbb
adc
divb
inc
sbb
in
sbb
cmp
sbb
outsl
lahf
ret
pop
bound
leave
stos
xchg
repnz
xcrypt-ecb
cmpsl
or
pop
push
ret
jno
xchg
out
shlb
imul
cmp
mov
sbb
push
inc
fadds
aam
and
lods
je
std
dec
xor
repnz
push
iret
push
sub
cmp
and
adc
icebp
pusha
dec
sub
or
jns
mov
cmp
xchg
mov
out
mov
add
jnp
push
lcall
jl
shrl
adcl
insl
mov
jge
jae
mov
imul
dec
sbb
fdivs
push
lcall
lods
add
loopne
or
les
outsl
jge
hlt
sbb
or
inc
test
adc
test
out
jo
gs
sbb
adc
loop
xchg
cmp
dec
sub
or
in
sub
stos
mov
out
repnz
repnz
mov
imul
in
in
std
movsl
and
inc
fs
or
or
mov
aaa
pop
hlt
or
repnz
add
jb
dec
dec
xchg
xchg
push
repz
cmp
and
inc
xchg
test
jge
sbb
fists
jl
inc
dec
adc
lea
out
int
dec
jo
or
push
subl
jae
xchg
test
pop
dec
in
enter
in
call
lea
cmc
outsb
daa
fimull
and
notb
lock
mov
jbe
xchg
cwtl
pop
sub
hlt
gs
dec
inc
ss
fisubrs
push
mov
push
jg
aas
cwtl
loop
imul
enter
or
incl
pop
sub
inc
jmp
rep
shlb
add
loopne
xchg
lods
or
inc
sbb
or
movsl
inc
xchg
cwtl
adc
push
and
jl
mov
aaa
add
ret
mov
repnz
in
aad
rorb
sub
std
or
sarl
sub
push
enter
out
jnp
int
and
movsl
scas
push
mov
push
jae
ficoms
lods
and
aaa
rclb
xchg
lahf
in
pop
enter
popa
cs
in
jnp
mov
jne
or
loope
jp
sbb
sbb
pop
imul
xor
es
push
daa
imul
jecxz
mov
xlat
imulb
ljmp
test
pop
loopne
jb
pop
nop
add
jo
dec
adc
xchg
cmp
or
pusha
push
push
orl
inc
dec
inc
mov
loopne
ljmp
loop
pop
insl
fwait
push
fadds
fimuls
sub
add
mov
sbb
les
mov
cltd
les
push
dec
add
bound
xorl
aas
pop
mov
or
popa
out
pop
rorb
cmp
mov
hlt
into
imul
mov
test
pop
movsb
subb
lds
bound
mov
inc
fcmovnbe
popf
sbb
jecxz
test
jp
and
sahf
dec
out
fdivr
pushf
push
xchg
bound
and
cmp
jnp
jne
ret
dec
fdivr
hlt
nop
scas
cmpsl
bts
and
and
and
push
push
faddl
faddl
xor
or
inc
testb
cmc
loope
sbb
imul
mov
and
pop
aas
add
outsb
mov
sub
add
jge
shr
test
lods
xor
lods
mov
stos
dec
aas
imul
inc
sub
ds
daa
and
add
sub
push
fnstenv
push
mov
arpl
je
xor
sbb
mov
dec
pusha
sbb
push
je
test
stc
cmp
mov
mov
das
jg
xchg
adc
pop
mov
pushf
shll
shlb
out
stos
shl
frstor
and
out
sub
mov
out
sbb
inc
inc
jbe
mov
sahf
jo
fwait
and
or
xor
in
cltd
adc
popa
cmp
lcall
jmp
fcmovne
mov
push
lock
mov
push
cld
pop
stos
inc
cmp
sbb
add
test
movups
sub
mov
mov
insl
adc
xor
jecxz
jae
push
rcll
and
outsb
xor
adc
xor
mov
mov
mov
pop
mov
mov
aaa
or
andb
imul
xchg
je
mov
xchg
mov
mov
sub
jle
fst
js
jge
leave
gs
inc
xchg
fadd
add
mov
sub
iret
stos
gs
daa
xchg
movsb
jno
jae
mov
scas
pushf
sbb
js
xchg
popf
xchg
stos
in
jns
ficoml
imul
mov
xchg
pop
mov
sahf
push
mov
pop
nop
xlat
mov
mov
mov
lret
inc
pop
sub
setnp
dec
les
inc
inc
and
mov
gs
fimull
jne
test
icebp
std
test
je
loopne
sbb
mov
cmp
clc
scas
mov
lods
iret
xchg
cwtl
lcall
mov
dec
sub
cmp
xchg
xchg
mov
test
and
test
lret
sub
dec
sbbl
inc
or
arpl
rclb
aam
lods
cmp
les
je
out
adc
add
sbb
mov
push
outsb
add
repnz
cmp
lods
adc
sub
adc
loope
cmpl
iret
out
mov
cmc
xchg
jle
popf
pop
pop
mov
mov
jae
in
jns
dec
push
test
idivb
push
clc
add
jge
inc
fidivrs
ja
xchg
dec
or
sub
jne
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
stos
adc
xchg
cld
popa
bound
bound
push
jne
lock
icebp
pusha
jmp
add
insb
js
das
jns
push
rcl
jmp
add
inc
iret
addr16
xor
sti
mov
lea
movsl
pop
add
stos
jo
mov
and
inc
xchg
fdiv
int3
sbb
iret
cwtl
jmp
dec
xchg
xor
or
jmp
jb
xor
or
adc
add
inc
in
orb
xor
int
sub
mov
dec
sbb
pop
pop
les
or
cltd
daa
cmp
pop
into
test
cmpsb
cmp
fidivl
add
jns
inc
stc
or
sbb
rclb
and
cli
adcl
aas
xchg
mov
ljmp
imul
xchg
mov
push
jge
out
push
daa
cmp
push
jno
inc
test
jecxz
dec
xchg
cmp
cmp
xchg
lcall
ficoml
roll
and
mov
xor
pop
incl
arpl
sub
popa
mov
imul
sbb
pop
jns
sub
xor
imul
pop
inc
dec
addb
or
aad
sbb
shr
pushw
ja
iret
das
movsl
mov
clc
int
shr
add
imul
in
xchg
lret
leave
das
mov
add
mov
inc
add
movsl
xor
sahf
rcr
push
xor
stc
out
fisttpll
push
stos
cmpsl
shll
mov
sbb
out
cmp
sub
das
sar
mov
push
sub
test
fdivl
sub
jle
outsl
lahf
inc
gs
xlat
bound
xor
lea
cmp
xor
insb
test
rolb
mov
int3
leave
div
push
mov
in
adc
mov
nop
popf
push
fadd
jl
pop
push
test
and
push
enter
dec
es
fists
xor
or
or
repz
push
iret
imul
push
sbb
mov
insl
movl
sub
scas
add
cmp
mov
mov
pop
push
jae
pop
pop
pop
lret
cmp
mov
inc
les
enter
mov
mov
stos
push
ret
cmp
push
and
popl
daa
call
adc
jno
mov
aam
dec
and
dec
or
stc
xchg
idivb
jle
inc
mov
add
in
sarb
xor
dec
xorb
push
addb
clc
jnp
push
shlb
push
pop
mov
sti
cwtl
cltd
push
and
push
sub
push
mov
insb
mov
push
jge
sbb
xchg
loop
mov
shrb
movsb
clc
xor
jmp
sbb
adc
and
sahf
lahf
insl
mov
and
and
lahf
inc
xor
dec
je
aaa
popa
mov
jp
stos
push
inc
aas
subb
pop
cmp
repnz
ds
mov
daa
jne
imul
mov
pushf
push
std
js
pop
push
in
adc
pop
cmp
inc
adc
pop
sub
or
jg
pop
mov
sbb
sub
pop
out
mov
loop
fstps
negb
jg
bound
mov
inc
stos
or
sbbl
mulb
xor
xor
insl
mov
gs
and
inc
in
sarb
testl
or
and
fwait
mov
dec
scas
iret
dec
jno
outsb
dec
push
cmpsl
cmp
sub
sahf
and
pop
xor
ljmp
movsb
mov
mov
into
lock
dec
mov
add
and
jns
pop
adc
mov
loope
mov
cmp
insb
pusha
in
or
sub
sub
jmp
sbb
add
sub
mov
push
mov
js
leave
sub
nop
icebp
and
sbb
out
mov
aaa
jge
movsl
cltd
xor
add
scas
push
add
pop
lods
ljmp
dec
daa
sub
stos
int3
stos
dec
push
fwait
sahf
aad
add
or
inc
inc
cmp
mov
jno
pushf
mov
pop
add
jno
cmpb
cmpsb
push
fcomip
pop
lds
mov
push
inc
push
pop
ds
inc
sub
fisubs
cmp
ss
cmp
pop
nop
pop
sti
repnz
arpl
pop
es
dec
push
popf
outsl
out
divb
jg
imul
xchg
jl
ret
addr16
int
and
movsl
mov
fistpll
adcb
test
sbb
movsl
shlb
lahf
push
notb
cmp
mov
adc
scas
mull
xchg
out
mov
dec
sahf
ja
shlb
mov
or
jae
inc
lret
and
js
nop
adc
push
dec
push
lret
test
mov
pop
xor
fstpt
rorl
xchg
std
daa
adc
mov
add
in
lods
test
rclb
inc
mov
jb
adc
sub
mov
push
xcrypt-cbc
cmpsl
xchg
dec
test
fs
pusha
and
mov
out
in
test
inc
daa
mov
insb
push
in
mov
loopne
xchg
js
xchg
sbb
enter
pop
pop
lods
call
or
or
sub
imul
sarb
imul
adcl
lods
xor
lock
and
cwtl
adc
into
jnp
mov
imul
in
mov
into
pop
inc
cmp
out
jp
ljmp
aas
shr
push
push
and
ret
ds
add
test
push
cmp
xor
sub
xchg
iret
xchg
add
fwait
jae
mov
cmp
mov
xchg
mov
dec
rcrl
or
xchg
jmp
push
jns
test
mov
mov
sub
sub
outsl
fiadds
dec
add
divl
sar
in
and
jbe
call
inc
mov
ret
stos
pop
das
jb
fidivl
imull
mov
and
cmpsl
out
dec
jnp
aam
int
loope
es
fadd
cltd
mov
xor
leave
push
pop
lcall
xchg
in
ljmp
popa
sub
mov
mov
xor
int3
into
es
xor
mov
lret
jp
xchg
or
cmp
outsb
fildl
stos
and
push
jb
outsl
jns
fwait
mov
push
and
xchg
sbb
jns
xchg
ror
and
sub
fists
pop
jbe
call
addr16
adc
sbb
lods
xlat
cmpsb
insl
push
aas
inc
mov
mov
cmp
inc
aaa
mov
rcrb
arpl
push
adc
fwait
addr16
cmp
mov
push
mov
shll
adc
mov
pushf
pop
push
or
ja
call
fcom
jge
pop
and
insl
popa
sahf
fists
sar
testl
sub
leave
outsl
popa
shrl
loop
and
sbb
dec
das
add
outsl
in
push
adc
pop
adc
jmp
fcmovu
in
jmp
fnstsw
dec
lret
pop
insb
int3
fisubrl
mov
stos
adc
jmp
jo
cld
lret
mov
gs
pop
outsb
sahf
dec
stc
sub
and
call
sub
in
outsl
sub
repz
push
adc
sti
ds
cli
xor
stos
sbbl
fldcw
cld
popa
cmp
jmp
sbbl
je
fucomip
punpckhdq
pop
fs
lret
push
inc
movsl
imul
cs
and
xor
movsb
stos
cmpsl
lahf
pop
enter
or
shl
sbb
aam
popl
std
xor
fidivrs
std
dec
lret
push
mov
gs
outsb
jae
cmpsb
inc
fldenv
and
sub
jnp
add
mov
movsl
andb
ja
jle
push
negb
test
mov
mov
aas
inc
inc
adc
shll
dec
fmull
jecxz
push
xorb
cmpb
and
inc
push
mov
adc
sub
jnp
sbb
add
outsl
sbb
mov
shrl
mov
dec
push
aam
add
lods
xor
or
xchg
test
push
mov
push
add
leave
mov
mov
push
mov
arpl
sub
xor
std
mov
sbb
enter
xor
int
ljmp
ljmp
cmp
popf
addb
insb
sub
xor
jecxz
repz
fcompl
or
push
rorb
push
xlat
xchg
movsb
jmp
scas
cld
pushl
sbb
or
xchg
xor
cwtl
shll
sbb
inc
adc
pop
arpl
sub
adc
es
ja
mov
push
push
sub
xor
lods
mov
mov
and
insl
push
dec
add
lahf
cmp
or
and
out
std
popa
out
in
repnz
mov
call
push
xor
pop
mov
sbb
std
int3
mov
testl
cmc
mov
xor
gs
in
imull
sbb
std
push
push
fwait
jne
js
lcall
dec
les
jg
je
clc
jp
dec
lods
xor
jae
cmp
inc
pop
lahf
push
sarb
and
test
mov
lods
aaa
pop
nop
jp
mov
mov
insb
int3
in
dec
adc
ret
mov
stos
mov
xor
xchg
pop
sbb
mov
cmc
sub
push
outsl
stos
test
fst
cmp
mov
sub
int
pop
sar
clc
adc
adc
mulb
mov
imul
test
mov
pushf
and
adc
shl
and
daa
repnz
imul
lahf
inc
insl
in
jns
arpl
movsl
int3
jp
sti
or
add
lcall
mov
jo
sub
jecxz
pop
dec
fdivp
das
push
iret
clc
pushf
push
fsub
xchg
or
stos
cmp
movsb
test
push
rol
popa
insb
sub
push
fmulp
loopne
sbb
jnp
mov
int3
add
sbb
or
adc
push
push
mov
dec
or
sub
gs
fbstp
adc
pusha
cwtl
daa
clc
jle
inc
jmp
jno
cld
stos
cld
mov
xchg
mov
push
mov
stc
scas
cli
loopne
or
int
cmp
xchg
aaa
out
push
popa
inc
in
xchg
mov
stc
cmp
ljmp
in
xorb
test
addb
mov
adc
imul
ret
int
push
add
xlat
cld
sub
in
pop
adc
xchg
out
repz
ffreep
sahf
and
aaa
cmp
rcrl
divl
mov
out
pop
fcoms
fildll
inc
int3
aad
in
adc
cmp
into
push
add
fistpl
mov
inc
hlt
xchg
jno
mov
jmp
push
std
loop
rorb
in
xchg
pop
inc
push
add
mov
pop
inc
lea
in
ds
daa
notl
outsl
push
rcr
add
int3
mov
mov
or
orb
pop
test
mov
cmp
xchg
xchg
iret
xchg
push
push
and
push
and
loope
pop
jne
cmp
and
add
pop
mov
mov
xor
jno
loop
repnz
mov
imul
add
cmp
jle
cli
adc
nop
les
stc
jno
mov
js
arpl
out
sub
lds
lret
pop
testb
cli
push
cli
push
jecxz
out
pop
sbbl
mov
insb
rcr
pop
adc
add
test
outsl
xorl
leave
jae
scas
inc
jle
push
std
sbb
into
jb
outsl
pop
pop
lahf
imul
das
aas
scas
add
outsl
sqrtps
dec
rclb
leave
mov
sub
xchg
jmp
xorl
pop
jb
mull
jbe
lods
mov
in
add
popa
mov
loope
das
xchg
jge
inc
loop
jg
cmp
mov
enter
pop
pusha
push
mov
testb
add
xor
mov
pushf
pop
je
std
pop
ja
dec
enter
lcall
ss
popf
sub
js
push
pop
test
clc
push
stos
mov
adc
or
dec
and
loop
sti
pop
es
jp
test
das
push
lcall
add
jp
inc
jbe
dec
mov
push
pop
mov
mov
push
into
int3
rcr
int
mov
lcall
jecxz
cli
mov
idivl
mov
cld
insb
dec
int3
int
xor
mov
sahf
cmpsb
cs
in
das
stos
and
mov
mov
ffreep
mov
sub
jo
loope
mov
mov
sbb
stc
fisttps
adc
push
or
repnz
lea
iret
loopne
mov
push
mov
add
test
sub
lea
in
icebp
movsb
cmp
cmp
cmp
jp
movsl
lea
mov
and
mov
loop
sub
stos
mov
aas
dec
adc
add
aam
jecxz
sub
push
cmp
xchg
inc
jg
inc
inc
xlat
cmp
push
sbb
out
js
and
ja
nop
or
mov
in
arpl
dec
sbb
mov
xor
addr16
call
int
lahf
and
add
push
push
add
enter
fcomps
sub
jne
lock
mov
xchg
pop
pop
je
leave
jmp
dec
rcll
fdivs
lret
or
test
test
aaa
jg
test
pop
fsubl
jo
cwtl
std
pop
nop
xchg
mov
loope
jne
jl
pop
and
mov
jnp
mov
iret
out
pop
cltd
icebp
mov
cmp
cld
cmpsb
or
adc
imulb
sbb
inc
xor
dec
xlat
sbbl
or
in
pop
push
push
xor
cmp
jb
push
setg
mov
mov
xchg
js
push
icebp
outsb
push
push
xor
cmc
hlt
pop
lods
sahf
push
jo
test
push
in
mov
fdivl
dec
loope
and
inc
dec
dec
and
mov
add
xor
pop
adc
frstor
movsl
inc
push
mov
lds
int3
stc
push
fldl
pop
hlt
bnd
xorl
ss
xchg
sub
or
lea
sbb
pop
int
and
xchg
mov
xchg
bound
icebp
and
or
inc
std
xchg
sbb
std
pop
test
les
aam
fstl
pop
sbb
nop
scas
daa
in
pop
or
arpl
int3
push
fs
cli
adc
mov
dec
cmp
add
imul
roll
push
stos
lea
jae
mov
inc
ret
js
pop
jl
mov
repnz
mov
jp
cmp
fidivrl
inc
fisubl
stc
mov
rcrb
pop
repnz
sbb
insb
loope
jg
mov
addb
jle
jle
and
xlat
imul
adc
testl
scas
sub
fistl
mov
lret
sbb
and
jmp
push
cmp
popa
jnp
xchg
dec
add
sti
out
lods
sub
insb
icebp
jb
jmp
outsl
addr16
inc
cmp
ljmp
sub
push
in
xchg
cli
adc
xchg
xchg
data16
sbb
inc
cmp
push
imul
xor
xor
ds
fistl
and
imul
ds
daa
aad
inc
push
mov
sub
mov
out
push
fimull
repz
fdivrl
sub
sbb
inc
mov
add
dec
int3
out
dec
out
icebp
jns
jnp
dec
dec
daa
popf
into
mov
or
cltd
mov
mov
std
fidivs
bnd
cmp
sahf
fnsave
add
pop
push
ret
loope
insb
pop
dec
pushf
jmp
imul
int
add
js
lods
hlt
jge
jnp
addl
inc
mov
add
sub
in
jg
mov
cwtl
inc
imulb
sti
push
ret
shl
inc
insb
cld
sbb
in
or
and
pop
or
pop
mov
xchg
repz
ret
es
sarl
mov
lret
test
scas
adc
aaa
fsts
add
mov
add
push
nop
cld
push
add
iret
lds
loopne
jecxz
aad
movsl
cmp
mov
sbb
pop
cltd
xor
push
push
insb
mov
enter
out
out
fidivl
mull
dec
mov
push
xchg
in
ljmp
sub
test
or
out
push
insb
xlat
mov
hlt
lock
inc
jle
pop
mov
test
jg
pop
jge
inc
cmp
ljmp
inc
jne
and
leave
inc
mov
idivl
push
dec
fcmovbe
stc
sub
cmc
inc
jmp
sbb
xchg
int3
out
or
xchg
sti
mov
xchg
daa
or
mov
push
xlat
ret
add
xchg
es
dec
js
out
in
sbb
imul
adc
xlat
xor
fwait
cltd
test
lret
xor
outsl
movb
addr16
or
shll
jl
rcl
push
lret
mov
pop
push
enter
push
xchg
test
xchg
mov
pop
xchg
mov
and
ror
cwtl
push
xor
mov
push
sub
add
faddl
stos
shrb
xchg
dec
inc
mov
mov
fstl
imul
jp
popa
push
sbb
shll
xorb
sti
notb
icebp
in
or
in
subb
or
sbb
dec
in
fcmovne
sub
addb
cmp
push
mov
scas
inc
outsb
mov
mov
fdivs
lods
inc
or
sbb
pop
adc
mov
arpl
jbe
test
inc
xor
jno
jb
test
xor
adc
in
add
mov
je
adc
scas
jmp
ss
jmp
mov
and
cmp
mov
jno
push
dec
cltd
enter
xor
stos
scas
mov
sub
push
jmp
push
dec
mov
popf
scas
aas
or
cmp
push
aaa
std
push
leave
pusha
cmp
push
rep
mov
mov
inc
jmp
sbb
or
jmp
xchg
adc
cmc
cmp
ret
jl
das
fimuls
or
aaa
mov
aas
cli
sub
jae
pop
xor
cmpsb
push
xchg
mov
mov
add
es
cmp
fs
mov
sub
add
fisttpll
xor
lret
push
jg
xchg
dec
clc
jo
mov
jl
pop
icebp
pop
xor
xor
sarl
cld
dec
jg
filds
mov
or
add
mov
or
push
ss
enter
cld
icebp
mov
jo
loope
mov
cli
push
sbb
sub
mov
lcall
data16
mov
mov
pop
xor
and
pop
std
pop
push
and
or
xchg
pop
cmc
loopne
add
scas
xchg
stos
jmp
sub
fcompl
mov
lret
mull
push
cmp
cltd
stc
cmp
inc
inc
das
negl
push
jle
insl
jbe
andl
sbb
push
stos
add
dec
iret
adc
pop
lds
test
and
jp
dec
cmpsb
lret
sahf
xorl
xor
mull
jl
pop
jecxz
lret
mov
inc
cmpsb
stos
call
and
push
pop
cmp
mov
mov
jp
sub
mov
sbb
std
jne
cld
xchg
pop
ja
jnp
jbe
cmpsl
cld
scas
mov
cli
fcmovnb
push
jecxz
fbstp
insl
in
xchg
daa
in
fstl
add
icebp
jge
stc
imul
imul
scas
pushl
ss
adc
pop
stc
dec
test
adc
xchg
push
mov
mov
out
punpckldq
sub
mov
dec
mov
pop
int
lahf
daa
and
pushf
ret
jg
repz
insb
sbb
lods
or
out
rcr
out
or
xor
sbb
movsl
fstpl
sub
push
push
add
sub
rcl
xchg
sbb
insl
mov
jmp
push
mov
sbb
add
mov
mov
or
sarb
mov
shrb
xor
add
adcl
lock
add
daa
fistpl
dec
das
or
rclb
jp
jg
fstpt
inc
dec
test
xlat
loope
push
nop
mov
inc
cmp
cmp
push
lods
push
jns
xor
test
hlt
mov
lret
movl
hlt
pop
push
push
jecxz
cltd
jne
xor
int
sub
movsb
jmp
push
in
push
icebp
jp
lds
insl
xchg
ja
mov
cmp
mov
add
mov
jb
jge
inc
test
lods
mov
mov
andl
jne
rcrl
fcmove
nop
jo
mov
sbb
std
out
xor
xlat
out
inc
out
sub
addr16
cmc
insb
icebp
cmc
pop
mov
cmp
int3
jge
cmp
inc
pop
faddp
nop
xchg
insl
fnstcw
pop
xchg
mov
addb
lahf
loopne
xchg
and
ds
rcr
gs
dec
dec
inc
ds
xor
cmp
loope
aad
subb
mov
mov
out
leave
inc
ja
and
sub
ds
pop
add
mov
jle
fcomps
xchg
pop
push
xchg
call
inc
ljmp
iret
jecxz
mov
jp
mov
outsl
scas
fnstsw
sbb
icebp
pop
in
jo
in
xchg
gs
add
jbe
rcrl
paddw
fs
add
jl
push
stos
or
jns
ljmp
aas
std
sbb
mov
fcmovnu
and
xchg
pop
xchg
sub
stc
mov
sbb
cmp
jecxz
cmc
pop
arpl
sub
lahf
test
push
rcrl
rcrl
dec
nop
repz
cmpsl
mov
jp
xlat
xchg
sub
addb
into
out
inc
pop
call
push
incl
sbb
or
les
jmp
js
or
sbb
add
cmp
or
rol
jge
aam
xchg
cmp
popa
jnp
sbb
xchg
mov
pop
and
es
ja
jae
gs
push
xchg
xchg
pop
or
fdivp
jmp
push
pusha
xlat
notl
dec
f2xm1
std
sub
lea
sbb
imul
clc
and
repnz
ds
xor
sbb
push
fsubrl
es
loopne
xor
fstps
and
cmc
jne
fildll
fiadds
add
pop
mov
and
add
inc
lcall
aam
call
push
leave
je
cmpsl
xchg
pop
int
lea
test
jl
xlat
loope
jb
or
mov
mov
inc
xor
out
jecxz
mov
xor
inc
movsl
or
sbb
es
inc
jg
xor
jns
dec
int
dec
xor
or
mov
jmp
mov
jno
mov
mov
xor
mov
mov
mov
push
sub
pop
sar
scas
xchg
xor
cmp
loope
cmp
xchg
pop
xchg
pop
jbe
fxch
cmp
mov
addr16
dec
jp
out
mov
arpl
rolb
lods
push
push
cmp
scas
sub
sti
out
add
leave
fidivl
fwait
jl
std
loop
adc
pop
fdivl
mov
sbb
xchg
jp
lods
ja
test
pop
sbb
icebp
fsubs
or
mov
mov
cmp
pop
fsubl
lea
pop
jge
push
inc
mov
js
mov
xchg
pop
inc
and
ss
jns
push
or
es
push
push
pop
and
cmp
inc
aas
fisttpll
out
sbb
popa
xchg
pop
incl
nop
jp
mov
push
insb
add
fwait
sbb
jp
jp
fcoml
adc
andb
mov
dec
sub
aam
cwtl
jb
hlt
sbb
nop
stos
shll
sbb
fisubl
pop
jae
jnp
imul
add
lcall
dec
scas
hlt
or
or
or
or
rclb
dec
mov
adc
loop
push
popf
cwtl
insl
mov
xor
test
inc
lods
cmpsl
add
inc
lods
pop
mov
imulb
or
xor
pusha
scas
in
mov
mov
repz
stc
popa
scas
sub
adc
or
sbb
pop
out
xor
stos
sarb
mov
icebp
cmp
es
inc
and
test
jmp
push
pusha
and
jae
xor
push
or
sbb
dec
in
inc
movsb
mov
shl
subl
callw
jecxz
ret
hlt
push
or
loop
mov
lret
sbb
mov
add
dec
sub
icebp
dec
sar
fisubl
cmp
mov
mov
pop
mov
push
cltd
testl
js
cld
inc
bound
push
hlt
rol
pusha
jl
lods
cmp
jo
insb
pop
into
pop
inc
orb
data16
and
jl
lea
inc
and
push
mov
movsb
int3
and
je
lea
bound
rcrb
and
or
fsubs
sbb
mov
xor
add
jp
cmc
test
lahf
inc
inc
lea
jl
jae
jb
sbb
add
dec
cmpsb
rolb
inc
xchg
jbe
cmp
adc
jmp
orl
test
aam
mov
vmwrite
popl
stos
inc
int
movl
hlt
ret
aad
and
je
sbb
adc
cmp
push
fdivrp
in
stos
test
inc
call
mov
cmp
sbb
sti
imul
pop
mov
lock
fadd
shrl
repz
mov
jg
imul
xchg
cli
popf
les
bound
cmp
push
out
mov
in
mov
jecxz
push
sahf
repnz
in
cwtl
push
stos
cmp
lahf
and
inc
sub
push
imul
xchg
dec
and
leave
cld
cmc
cmp
shrb
loopne
mov
jmp
ja
or
in
mov
mov
mov
or
sbb
push
jns
faddl
cmp
lea
aas
pop
scas
inc
mov
inc
ss
loope
xchg
inc
mov
dec
inc
aaa
ret
jno
xor
fwait
push
and
insl
shll
loop
mov
add
or
xor
push
in
rcl
mov
nop
sbb
xchg
cmp
ss
mov
push
mov
pusha
rcr
pop
stc
test
faddp
jno
leave
fildl
clc
sbb
pop
lods
inc
mov
mov
cld
add
push
pop
flds
mov
faddl
or
pop
ss
sub
adc
or
jge
or
jle
adc
mov
add
flds
push
xchg
mov
pusha
lret
daa
popa
pop
out
outsb
dec
insl
sbb
shrl
jmp
cmp
rcrl
sti
push
imul
ss
sub
sbb
stc
xor
add
mov
inc
icebp
cmc
inc
ss
dec
fnstcw
fisttpl
lahf
ret
push
fsubrs
cld
fs
loope
jmp
stos
aas
and
outsl
add
inc
psrld
adc
pop
cmp
loopne
xchg
sti
xor
movsb
mov
lods
sub
gs
arpl
sbb
cmpsb
mov
push
dec
pop
std
xlat
pop
insl
xchg
cld
rcrb
and
xchg
call
ds
rcr
jle
fsubrp
mov
pop
fisubrs
inc
and
mov
lock
mov
xor
cmp
stos
out
rclb
xor
cmp
sub
shlb
shl
das
lahf
push
out
push
sub
mov
cmc
ficoms
lods
mov
pop
imul
pop
lret
es
mov
add
xchg
mov
nop
or
or
stos
insb
adc
insb
push
sti
cld
add
mov
xchg
clc
jge
pop
dec
and
sub
psrlw
daa
sub
add
pop
out
mov
sbb
imul
adc
push
sahf
xor
fbstp
pop
adc
adc
xor
ljmp
movsl
icebp
jp
xchg
mov
mov
xor
mov
insl
inc
in
pop
fdivs
das
dec
push
into
xor
xor
push
mov
adc
nop
pop
lcall
lods
add
jae
into
daa
push
inc
pop
hlt
mov
incb
jge
mov
mov
add
and
outsl
pushf
sahf
mov
adc
pop
dec
dec
outsb
movsl
mov
dec
dec
mov
dec
mov
lock
aam
fs
hlt
cltd
clc
xchg
mov
int
pop
push
aas
dec
andl
mov
aas
dec
js
xchg
sub
mov
into
mov
outsl
push
pop
mov
push
cli
xchg
idivb
mov
ret
es
out
fsubrl
orl
dec
mov
ret
mov
or
mov
clc
sbb
notb
jo
mov
xchg
jle
add
add
sub
sub
scas
arpl
gs
jmp
add
adc
sub
movsb
xchg
jne
jns
jbe
xor
push
fisubs
xchg
in
pushf
xchg
repnz
xchg
imul
enter
sbb
adc
int3
lea
jbe
mov
fnstsw
jae
shrb
in
fimuls
in
sti
shlb
jp
out
popf
and
pop
push
popa
pop
mov
int
psrad
fldt
frstor
push
cmc
std
pop
subb
sub
js
mov
xor
dec
pop
jle
inc
xchg
add
pop
jbe
xor
jbe
xor
fs
loop
pop
cltd
or
dec
cmp
fmul
and
adc
rcl
mov
cwtl
outsl
mov
cld
adc
outsb
dec
dec
test
mov
add
loope
mov
addr16
dec
cmpsb
adc
inc
jecxz
xchg
push
repz
jp
mov
sub
negb
add
insb
aas
adc
gs
and
pop
pop
lahf
dec
fisubl
popa
push
into
outsb
push
push
int3
or
shll
adc
cmp
or
scas
subb
mov
pop
cmpsb
xor
or
xor
fcmovnb
dec
outsb
leave
rdpmc
loopne
sub
outsl
xchg
shll
icebp
movsb
push
inc
jle
xlat
jno
stc
mov
jge
aaa
es
or
aaa
mov
mov
cmp
addb
and
xchg
jno
enter
inc
push
push
stc
xorl
push
mov
enter
test
decl
or
sub
dec
or
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
inc
dec
push
fsubs
cmp
bound
sbb
sub
mov
dec
inc
ja
mov
pusha
mov
lcall
inc
je
jecxz
xchg
aaa
imul
idivb
fs
dec
inc
arpl
push
test
push
xchg
ffreep
out
daa
shlb
aad
add
adc
sub
push
aad
xchg
pop
xchg
add
in
mov
sbb
inc
sbb
cmp
jne
adc
xor
jg
bound
mov
add
pop
jne
jae
and
or
fisttpl
dec
or
xchg
mov
movsb
xchg
clc
add
out
mov
das
loop
xor
aaa
lds
arpl
add
add
sub
sub
popa
xor
jmp
test
insl
add
jmp
mov
dec
push
imul
stos
insb
xchg
xchg
mov
pop
in
jbe
pop
data16
fucomip
gs
xchg
cmp
jmp
pop
cmp
stos
notl
pop
aam
xchg
inc
out
push
sbb
xchg
cmp
adc
aam
repnz
ja
loope
clc
jle
je
andl
daa
mov
inc
mov
xchg
fst
sub
test
adc
inc
leave
pop
jp
in
cmp
popf
sahf
roll
push
xchg
nop
aam
icebp
ret
cltd
leave
mov
mov
jne
jp
jmp
scas
inc
mov
xchg
sub
mov
fstpt
cmp
fldcw
test
popf
lea
movsb
out
inc
cli
cwtl
xchg
mov
add
pop
ret
pop
jmp
xchg
lock
fs
subb
lcall
cltd
push
adc
dec
jecxz
sbb
add
sbb
fidivrl
out
in
jg
add
repz
out
imul
or
jmp
xor
push
dec
stc
pusha
mov
mov
daa
inc
push
mov
icebp
cltd
es
jns
mov
lock
dec
mov
inc
cmp
jmp
movsb
subb
mov
scas
aam
orl
repnz
sbb
add
jg
addr16
fistps
cmp
cmpb
xchg
mov
cmpsb
pushf
jmp
je
hlt
inc
shll
mov
into
stos
and
mov
xchg
mov
xchg
inc
lock
mov
out
sbb
scas
mov
or
cmp
xchg
cltd
imul
push
jbe
cwtl
jns
in
mov
outsl
cltd
sbb
or
pop
lahf
gs
andl
jge
push
push
add
out
or
pushf
aas
pop
jbe
aas
pop
mov
add
adc
in
int3
xor
andl
ja
mov
and
jo
jno
adc
cmpsb
sub
cli
inc
sbb
out
lret
arpl
ljmp
or
jecxz
mov
clc
add
pop
xor
add
sarb
and
mov
scas
push
xchg
daa
shrl
mov
lods
adc
pushf
fsts
push
mov
pop
stos
sti
jne
pop
push
sub
dec
insl
xor
in
jp
arpl
xchg
add
xor
enter
gs
aas
subb
in
inc
push
inc
adc
in
xchg
leave
dec
aas
cmpsl
loope
sub
sbb
cmp
xor
int
shrl
dec
cmpsl
cmpsl
or
jp
or
pop
cmc
sub
stos
sub
adc
and
inc
or
pop
push
add
and
repz
adc
mov
in
test
jle
bound
cmp
push
sub
mov
sbb
stos
inc
adc
xlat
push
stos
mov
adc
push
mov
cmp
add
mov
dec
icebp
lock
faddl
sbb
sbb
cmp
pop
pop
ja
gs
mov
jo
daa
movsl
lahf
insb
mov
mov
out
pop
popf
xchg
jns
inc
jle
fstl
cmp
out
sahf
fnstcw
lcall
fxtract
sbb
ret
inc
sub
mov
mov
xor
add
mov
xor
sbb
in
add
lds
push
fiadds
sub
ret
cmpsb
xchg
jp
sbb
je
jge
stos
sub
push
ret
jnp
flds
pop
test
mov
adc
cltd
in
test
inc
int3
je
xor
fcmovnu
push
std
push
push
cltd
loopne
xchg
xlat
or
sarl
imul
imul
inc
sub
aam
inc
add
call
fwait
mov
sbb
stos
sbb
push
push
mov
adc
popl
ja
addr16
xor
mov
aas
mov
les
and
cmpsb
push
fwait
pusha
out
xchg
aaa
int3
push
int3
aad
lds
je
arpl
inc
pop
cmpsb
cmpsb
imul
jl
in
test
js
int3
push
sbb
iret
pop
push
mov
cwtl
pop
jmp
popf
jmp
add
fsubrl
push
xchg
gs
mov
shrb
cmp
shll
cltd
lret
push
rcrb
xor
inc
ret
icebp
outsb
arpl
and
popf
iret
fnstcw
xor
imul
or
lret
outsb
out
push
xchg
jge
dec
inc
mov
sbb
out
aas
hlt
push
mov
jge
imul
dec
dec
ftst
jo
xor
push
lahf
jecxz
mov
out
ret
jge
popa
mov
cli
jmp
je
scas
xor
and
jae
subl
and
xor
dec
fs
inc
insb
fiaddl
mov
sub
jae
push
testb
sub
dec
call
nop
pop
loop
mov
in
in
cmpsl
ret
sub
add
das
cmp
mov
xchg
das
sarb
xchg
or
out
fldl
bound
cmp
fsubrp
dec
add
cmp
sub
fs
jg
xor
pop
pop
cli
add
popf
jae
sbb
fwait
jge
fs
push
test
xchg
into
mov
push
push
adc
hlt
std
or
xchg
mov
inc
addl
jmp
xchg
or
fisubl
mov
sbbl
pop
ficoml
js
adc
js
add
add
sbbb
xchg
cwtl
or
jns
push
das
icebp
pop
lods
push
out
outsl
or
jb
out
cmpsb
stos
and
out
xchg
cmp
insb
cs
test
fistps
in
sub
icebp
adc
adc
xchg
adc
mov
rolb
es
imul
cmp
and
lret
out
push
jl
mov
mov
dec
push
std
adc
adc
enter
jo
data16
stos
push
sub
and
push
mov
xchg
add
and
xor
jns
xchg
pop
jl
inc
loope
inc
push
or
or
addr16
je
data16
mov
ffreep
xchg
xor
xor
mov
std
mov
xchg
inc
lock
loopne
fsubrl
insb
dec
nop
iret
push
dec
or
mov
pop
push
insb
mov
sbb
or
jmp
arpl
mov
lods
in
sbb
xor
popf
xchg
gs
lcall
pop
imulb
in
mov
jne
sub
mov
cld
sbbb
cmpsb
popf
push
push
adc
lods
mov
adc
xchg
mov
cmp
mov
fists
mov
add
and
hlt
cmc
pop
sbb
divb
aas
push
mov
jbe
xor
jge
mov
addr16
inc
inc
stc
int3
mov
hlt
insb
sbb
inc
mov
add
popf
lds
dec
aas
pop
or
arpl
nop
loope
ds
sbb
cltd
mov
lock
loopne
rorl
push
cs
mov
lret
add
out
jne
outsl
movsb
pop
fsubrl
js
adc
jns
xchg
lods
add
rcrl
incb
xchg
cmpsl
ljmp
xchg
in
add
andl
fsqrt
int
add
push
rcr
jmp
dec
mov
adc
jmp
pop
jmp
jmp
or
xor
xchg
insl
xchg
out
roll
push
xchg
push
dec
out
jp
jmp
loop
add
loop
stos
xor
lods
sub
dec
lods
ffreep
leave
inc
dec
clc
inc
sbb
das
mov
xchg
mov
arpl
test
icebp
in
shlb
push
push
sbb
or
or
fmul
mov
lods
xor
stc
sub
push
repnz
jae
rcrb
insb
fbstp
std
cmc
out
add
sarl
repnz
insl
clc
jbe
pop
sbbb
pop
in
and
xor
daa
movsl
ret
lock
cmp
movsb
das
arpl
sbb
sub
dec
or
jmp
je
xchg
jne
fs
aaa
and
stos
test
lcall
push
inc
and
dec
lds
arpl
sti
and
aad
mov
int
imull
cmp
jp
gs
pop
sti
lret
push
or
popf
mov
add
sbb
sub
sbb
mov
dec
aas
add
jl
das
mov
xchg
add
cmp
popf
mov
lahf
in
xchg
and
iret
into
dec
rcr
repnz
out
loopne
jle
out
clc
std
adc
xor
movsb
lock
cmp
and
mov
xchg
test
xlat
push
pop
ljmp
dec
insb
decb
scas
fstps
pushl
dec
jne
xchg
or
movsl
or
test
out
push
sub
ljmp
incl
push
dec
or
fiaddl
rcl
dec
addr16
xchg
xchg
and
test
cmpsl
push
pushf
inc
push
lcall
jo
dec
inc
cltd
pop
sbb
cmp
mov
stos
cwtl
mov
cmp
lea
cli
fwait
repnz
xor
adc
xchg
push
in
hlt
arpl
stc
pop
xchg
ret
ja
nop
add
int3
mov
imul
mov
pusha
xor
push
mov
fsubp
xchg
mov
push
sub
and
in
jne
or
mov
or
or
mov
cld
add
mov
or
pop
dec
jecxz
lcall
or
or
cmp
cmpsl
add
test
xchg
push
push
push
inc
jne
inc
or
sbb
je
insb
and
dec
insl
pop
in
ret
lods
push
xchg
loopne
lret
inc
cwtl
sbb
in
pop
aad
xchg
pop
xchg
insb
daa
ljmp
fsubs
mov
out
mov
cmp
xchg
in
adc
loopne
nop
jns
addr16
sub
jns
inc
int
lcall
mov
mov
jg
cmpsl
push
lcall
mov
sahf
or
xor
mov
cmpsb
lods
les
pop
dec
xchg
stc
fbstp
pop
loopne
in
mov
cmpsl
inc
push
and
inc
fs
mov
in
pop
push
arpl
ds
jp
or
jnp
negb
add
cmp
shr
push
mov
pop
jg
mov
or
jnp
cmp
sbb
cmc
nop
mov
rcrl
ret
sti
imul
pop
xor
dec
fisubl
or
testl
cmpsb
test
inc
shl
rclb
movsb
lds
shlb
and
ffreep
daa
xchg
mov
lahf
leave
sti
or
push
ljmp
outsb
gs
mov
cmc
push
lret
cmpsl
push
xor
push
int3
test
pop
xchg
incb
cld
mov
pop
in
xchg
mov
into
jp
pusha
xor
cmpsl
sub
fs
inc
into
into
mov
pop
lcall
cmp
inc
lcall
jecxz
or
andl
push
lock
cmp
icebp
insl
out
pop
mov
jl
ffreep
cld
sub
pop
mov
aam
cmp
out
pushf
pop
pop
pop
push
and
fdivrs
push
add
mov
jmp
dec
jle
addr16
push
mov
push
xor
dec
fstp
les
mov
xchg
cmp
xchg
testl
scas
adc
lods
add
es
stos
popf
cli
mov
add
filds
rclb
pop
clc
ss
popf
test
orl
cmpsl
test
push
xlat
arpl
loopne
push
sti
addr16
push
pushf
pusha
add
mov
fwait
mov
dec
push
in
dec
cld
mov
mov
mov
outsb
test
addr16
add
es
repz
fstpt
into
insb
inc
movl
lcall
cmpsb
xchg
adc
rclb
inc
pop
dec
leave
inc
mov
mov
sub
fcmovbe
insb
repz
popf
out
jae
xor
pop
push
je
dec
in
movsb
std
jp
sub
punpcklwd
aas
lock
cmc
xor
push
leave
cmp
cld
jl
fimull
aaa
lret
test
inc
aas
sarb
cmpsb
int
xchg
ja
lods
xor
sbb
xlat
jbe
movsl
in
ljmp
cmp
and
das
and
cmpsl
or
outsl
mov
insb
mov
and
daa
xchg
push
inc
mov
push
fst
push
sub
in
mov
xlat
out
mov
rclb
xor
insb
cmp
inc
push
and
sub
popa
js
adc
rcll
pop
mov
aad
mov
push
pop
pop
and
xchg
call
sub
xchg
fnstsw
lods
fs
jae
dec
or
aam
xchg
inc
mov
lret
lock
mov
and
lods
push
pushf
out
fcmovnbe
xchg
popa
dec
push
inc
push
daa
popf
popa
bound
dec
mov
jno
xchg
sbb
cmp
bnd
xchg
pop
sbb
mov
repz
inc
test
push
ret
aam
adc
popf
xor
cltd
adc
mov
fnstcw
mov
cmp
inc
in
cltd
cli
pop
adc
and
cmc
push
shll
jnp
jge
je
fisubs
push
in
sub
add
xchg
adc
xor
push
aam
inc
fwait
mov
int3
fnstenv
in
inc
jle,pn
push
push
sbb
andl
jl
xchg
sti
iret
sub
xchg
outsl
pop
jno
or
inc
jne
push
push
push
rcr
xchg
mov
rcrl
ret
lea
xlat
les
cmp
pop
aaa
aas
push
js
mov
add
jae
daa
mov
imul
jne
adc
lea
pop
dec
sbb
mov
movsb
cmp
stos
into
xchg
push
mov
lea
loopne
outsb
xor
xchg
popa
subl
ret
hlt
fldt
mov
push
add
xchg
test
cmp
sbb
repnz
sbb
adc
es
test
testl
mov
mov
add
adc
jge
push
test
pop
mov
in
mov
inc
add
out
xor
dec
or
jge
cli
mull
addr16
call
fnstenv
rcr
mov
test
cmp
xchg
out
mov
push
adc
cld
sub
lcall
test
xor
xchg
in
std
lea
xchg
pop
jb
mov
sub
enter
sub
aas
negl
icebp
jg
mov
sub
jns
rclb
mov
inc
or
and
pop
mov
lret
and
or
push
pop
mov
push
xor
aas
lods
mov
bound
out
out
popa
hlt
outsb
lcall
jae
add
push
bndldx
ss
lret
mov
loop
jle
mov
test
inc
inc
popa
aam
jecxz
cmpsb
inc
roll
and
jno
mov
lret
nop
incb
scas
sbb
and
stos
sbb
push
ds
inc
hlt
mov
imul
pop
and
orb
jle
and
sti
push
xor
fisubrl
fsubrs
pop
imul
push
pop
lock
outsb
xor
into
fistpl
aad
push
cmp
aad
push
cld
add
sub
pop
or
adcl
mov
scas
mov
pop
std
jmp
pop
dec
in
pop
push
rcrb
movsl
dec
inc
sbb
iret
dec
jnp
test
arpl
mov
sub
adc
notl
mov
dec
lret
fildll
adc
cli
cmp
push
jae
in
inc
fwait
aaa
not
or
movsl
jp
xchg
inc
pop
insb
out
pusha
sahf
inc
add
jmp
or
jns
pop
inc
inc
cltd
push
jns
pop
insl
test
push
xchg
mov
repnz
cmpsb
jnp
adc
or
sbb
in
sbb
jge
std
insl
xor
lods
pop
out
ss
out
mov
and
mov
movsl
push
sub
test
lea
in
subl
jl
addr16
push
cmp
add
push
add
dec
push
cli
and
or
sub
mov
push
mov
out
pop
xchg
xchg
mov
pop
popa
inc
nop
xor
cmp
sub
cmpsb
repz
and
repz
fisubrl
cmp
mov
push
mov
push
popa
insl
aaa
aas
rcr
shrb
xlat
inc
aas
in
mov
mov
add
add
xchg
fwait
mov
jns
mov
xlat
mov
sbb
lock
icebp
mov
int
inc
in
xor
cld
mov
or
movsb
push
cmp
jge
cli
pop
dec
fs
int
lods
lock
fidivrs
lret
fimuls
call
test
scas
mov
pop
add
mov
sub
es
in
sbb
push
aaa
add
and
pusha
out
and
xor
insb
dec
aad
lea
repz
push
or
mov
cmp
leave
pop
xchg
loope
xchg
outsl
test
adc
popf
enter
xchg
xor
pop
push
pop
rorl
add
hlt
and
enter
scas
mov
inc
push
jno
push
xchg
and
inc
dec
push
mov
cmpsb
dec
jns
mov
dec
mov
adc
out
mov
xchg
mov
cmp
mov
aaa
jno
nop
mov
outsb
and
cmpsl
jge
add
inc
mov
or
push
dec
sub
into
pop
out
cmp
jl
mov
push
xchg
and
arpl
cmp
es
cwtl
pop
mov
stos
in
jno
fisttpll
pop
cmp
and
add
mov
inc
lea
imul
test
adc
inc
xchg
dec
add
icebp
mov
mov
xchg
lea
sub
dec
push
mov
imul
jne
shll
lea
insb
pusha
arpl
jae
addl
mov
gs
mov
cmpsb
xchg
adc
inc
adc
mov
movsb
imulb
cmp
xchg
jns
test
rcr
not
mov
xchg
push
fwait
push
dec
lods
repz
xchg
lock
andl
scas
sub
cmp
jl
pop
and
cmp
mov
std
das
push
mov
clc
jg
xor
fisubrl
xor
sub
leave
pop
lds
out
cwtl
bound
in
mov
mov
adc
mov
imul
inc
mov
test
mov
mov
js
aaa
mov
cmp
pushf
arpl
inc
out
out
addb
jae
loope
ljmp
push
mov
pop
add
shrl
insl
jno
push
aam
inc
xrelease
pop
fwait
cmp
mov
rolb
mov
sub
and
lret
dec
gs
sbb
pop
jg
jno
push
push
mov
jae
das
push
int3
pop
fs
dec
and
pushf
dec
es
mov
sbb
and
fbld
or
mov
pop
imul
orb
out
cmp
add
xchg
mov
lods
lds
or
les
movsl
into
lea
in
loopne
hlt
nop
test
or
in
sbb
add
cs
cmp
cmp
mov
rorl
add
shll
ds
sbb
pop
cmc
addr16
cmp
faddl
push
jbe
cmpsl
add
xor
pop
adc
mov
lcall
data16
call
pop
inc
rclb
xor
cmp
sti
mov
scas
inc
fwait
lret
xchg
out
loopne
push
pop
push
jnp
mov
andb
sub
lds
js
hlt
pusha
daa
jle
push
inc
mov
ss
cs
fldcw
fs
stos
fmuls
push
rcll
je
lret
mov
cwtl
cmp
mov
sub
push
push
jb
mov
out
cmpsl
lock
cmpxchg
lret
repz
cs
cld
test
pop
push
ret
xchg
movsl
cmpsl
in
adcl
pop
push
ficoms
test
mov
xor
mov
pusha
lds
loope
int3
in
in
cwtl
mov
fsubs
dec
movlps
mov
out
sub
lcall
jle
push
iret
mov
movsb
add
cli
pusha
ljmp
cmp
jae
adcb
push
or
adc
sahf
insb
jb
pusha
mov
mov
aam
mov
insb
lods
jno
mov
insb
pop
and
mov
push
jmp
loope
add
or
repnz
mov
push
call
sub
adc
fs
cmpsl
jno
inc
sbb
mov
mov
xchg
imul
add
add
cmpsb
mov
sti
setb
jl
pop
cmp
mov
call
mov
loop
dec
pop
sub
xchg
aad
test
pop
dec
divl
stc
cwtl
mov
mov
cld
xor
mov
scas
xor
test
repz
jnp
push
dec
cltd
test
ret
mov
mov
fs
mov
ret
in
sbb
fdivp
mov
je
arpl
mov
xlat
sub
inc
out
popf
jle
pusha
push
shrb
jmp
bound
imul
fldcw
loop,pn
xchg
adc
add
rcll
or
stc
jns
mov
push
test
enter
cmc
or
or
pop
xor
cmc
jmp
dec
nop
les
add
jmp
cmpl
add
xor
pop
je
or
and
pop
xchg
and
pop
outsb
jmp
jb
nop
adc
movsl
lods
stos
lret
push
dec
mov
add
daa
xchg
sbb
dec
ret
xchg
sbb
xchg
cs
cmp
xor
test
sub
clc
clc
fdivrl
mov
popa
xchg
jl
jo
stos
jl
push
fdivl
lds
rclb
jl
add
test
sbb
test
insl
in
pop
mov
sbb
pop
mov
ljmp
or
xchg
mov
mov
or
std
xchg
sahf
movsl
xor
sub
lret
jns
sar
dec
inc
xchg
xor
jo
mov
mov
test
jne
mov
cmp
gs
mov
cmpb
mov
aas
or
xor
movsl
out
andl
and
push
xchg
filds
sbb
popa
hlt
and
push
mov
fistpll
in
inc
or
pusha
jne
sub
fmuls
or
xchg
movsl
or
pop
add
and
sub
and
or
sub
sub
xchg
pop
je
call
imul
in
test
lods
cmp
mov
fwait
aad
jno
push
push
xor
xchg
mov
dec
cmp
unpckhps
push
int
cmp
addl
mov
es
pop
mov
pushf
call
js
mov
sbbl
xchg
pop
in
sbb
mov
stos
std
and
mov
divl
adc
pop
or
aad
out
cmp
ficoms
sarl
adc
stc
pop
gs
cld
and
and
adc
push
jle
movsb
subb
les
and
ret
jle
xchg
xchg
clc
sbb
mov
jl
rclb
ljmp
mov
cmp
xchg
cmpb
mov
in
cmp
hlt
imul
or
nop
xchg
lret
pop
sbb
mov
push
dec
sbb
lret
mov
shll
cmp
mov
xchg
shlb
fstpt
cmp
cli
mov
jns
call
leave
cmpl
outsl
inc
in
mov
aam
out
es
fimuls
movsl
jns
inc
outsb
mov
cltd
mov
into
add
lahf
mov
in
mov
fwait
rcrl
xchg
mov
loope
pop
cld
aas
pop
add
fimuls
pop
ljmp
das
in
ss
das
jmp
mov
mov
push
sbb
fcomps
pop
and
inc
test
pcmpgtb
push
data16
je
sub
mov
adc
loope
int
xchg
out
cwtl
rolb
aas
jmp
adc
icebp
push
je
mov
mov
sbb
addr16
mov
push
js
mov
dec
or
cli
add
push
and
mov
inc
repz
or
test
sti
jp
das
nop
or
cmc
push
gs
lds
mov
jb
push
stc
xchg
push
jmp
out
dec
cmp
push
dec
test
xchg
es
sub
cmpsb
mov
loope
nop
test
and
sub
push
add
cmpsb
push
cmp
mov
arpl
ljmpw
or
mov
repnz
and
nop
inc
cmp
jmp
adc
pop
xchg
mov
or
add
push
or
pop
hlt
cmpsl
pop
sub
mov
xchg
or
bound
mov
and
outsb
add
shlb
push
gs
jo
fwait
jb
pushf
sbb
jns
and
fsubl
bound
rolb
in
scas
aad
sbb
sub
mov
outsl
movsl
sub
hlt
lods
sbb
mov
mov
rcll
movsb
xor
rol
mov
xchg
ret
stos
sbb
aam
movsl
pop
dec
add
mov
pop
xor
scas
test
std
pop
pop
iret
mov
pop
sti
daa
sbb
aas
sbb
imul
int3
ret
outsl
dec
mov
jne
jno
jae
mov
fbld
inc
jb
outsb
iret
pop
inc
dec
incl
push
shll
cmpsb
das
inc
sbb
dec
imul
rorb
and
ficomps
jbe
rcr
cmp
fucom
xchg
clc
fistl
pushf
insl
inc
mov
mov
hlt
clc
dec
lcall
addr16
cmpsb
mov
lahf
scas
mov
cmp
jae
or
adc
adc
jl
push
dec
ja
out
ljmp
fdivl
lcall
ret
pop
leave
adc
push
dec
and
mov
ret
test
int3
fs
mov
xor
jb
ja
dec
xchg
daa
mov
in
int3
sbbb
sub
shlb
adc
and
mov
dec
mov
sub
inc
sbb
dec
ds
std
add
inc
adc
mov
in
xchg
cmp
dec
and
mov
xchg
bound
jle
iret
jo
arpl
pop
subl
jle
test
and
pusha
cmpsl
jnp
call
xor
push
cmp
fs
test
push
adc
sbb
ds
xchg
or
das
inc
xor
jo
push
sti
lods
xlat
shll
push
sbb
add
mov
jle
stos
test
mov
mov
scas
add
popa
shlb
xchg
lds
adc
scas
dec
aaa
test
adc
add
push
mov
gs
mov
je
mov
fcoml
js
xchg
pusha
scas
push
std
hlt
mov
sub
test
dec
pop
mull
dec
loopne
xor
lcall
mov
jl
aas
roll
ljmp
data16
aam
mov
and
int
movb
call
add
pop
push
sbb
pop
iret
fmulp
adc
mov
mov
sahf
mov
sub
xchg
jle
adc
and
faddl
daa
mov
int
fs
and
jge
pop
mov
adc
jecxz
mov
orb
sub
push
cmp
leave
test
xchg
pop
push
sub
fnstenv
xor
fdivrp
xor
test
out
inc
xor
jg
scas
adc
out
adc
cmp
daa
cmp
pop
sarb
pop
ss
sarb
inc
std
aas
mov
scas
mov
or
mov
cmc
mov
sub
jecxz
xor
pop
pop
in
mov
insl
cmp
xchg
and
daa
mov
les
add
out
bnd
lret
shlb
das
cmp
stc
push
stc
cmpsb
cmp
fiaddl
inc
mov
mov
jno
or
das
inc
jp
clc
pushf
outsb
sbb
pop
or
stc
lahf
xor
rcrl
push
stos
push
fidivl
or
or
out
lret
std
mov
jg
into
push
mov
sbb
test
fidivrs
imul
jmp
ja
sub
pop
fimull
xchg
push
mov
das
dec
mov
mov
mov
lret
test
lret
enter
inc
fs
adc
ret
add
stos
xorb
shlb
pop
xor
xlat
cmp
clc
xchg
jmp
cmpsb
pop
sbb
mov
lahf
cld
jnp
mov
pop
lea
mov
fimull
sarl
push
jb
jge
and
test
add
ljmp
nop
xor
push
xchg
fadds
lds
imul
xchg
inc
hlt
sar
and
lods
push
xchg
add
dec
pop
loop
sub
adc
xor
addb
add
xchg
xor
out
rolb
fildl
cs
test
dec
sub
aad
es
cmpsl
sbb
test
loop
sbb
ret
sub
dec
push
test
mov
pop
sbb
or
scas
lds
sub
jae
inc
mov
test
xchg
sub
push
or
jp
in
jae
push
loopne
jp
adc
rcr
jmp
pop
sub
and
jns
divl
push
adc
jg
sub
inc
div
jno
mov
addb
xchg
js
jl
lahf
mov
js
popl
jne
and
inc
and
pop
insl
fs
xchg
sub
fcoml
aas
xchg
rdtsc
aam
ds
test
push
sub
rcrl
fsub
adc
sub
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
push
daa
ja
add
pop
add
add
mov
push
dec
aaa
adc
inc
xor
mov
push
pop
in
lret
xor
pop
xchg
fldt
mov
jns
dec
and
imull
sahf
rcl
les
jns
pop
ds
inc
inc
shlb
push
ret
in
testb
imull
sbb
mov
shrl
adc
cmp
out
pop
xchg
push
aam
add
pop
add
add
push
lods
clc
shl
out
mov
idivb
ds
dec
adc
movsb
pop
mov
lahf
lret
adc
xchg
dec
push
icebp
mov
sbb
sub
jl
mov
xchg
sub
loope,pt
bsr
xor
lock
data16
bound
scas
fistpll
xchg
xlat
mov
add
add
add
add
sub
sub
addb
into
add
pop
add
add
js
aam
mov
mov
jg
filds
cs
out
add
scas
clc
je
xchg
fbstp
jns
popf
inc
cmp
ds
mov
loope
cli
nop
fsts
xchg
out
ret
iret
btc
leave
lea
adc
add
add
and
aam
aam
ljmp
je
mov
lret
into
add
pop
add
add
ljmp
bound
dec
and
out
leave
stos
jl
mov
mov
or
jbe
mov
int3
mov
sbb
lds
cwtl
pop
xor
dec
jns
inc
frstor
adc
pop
adc
mov
mov
sbb
icebp
pop
insl
mov
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
jmp
add
pop
add
add
ficoml
and
mov
push
stos
jg
out
movsl
xchg
mov
jb
mov
in
hlt
imul
mov
fistpll
inc
mov
xor
or
int
std
cltd
adc
mov
push
fwait
dec
push
pop
iret
cmp
sarb
out
lods
cmp
stc
stc
push
sbb
dec
iret
add
pop
add
add
cmp
mov
xor
jae
pop
pop
cltd
outsb
push
out
icebp
fsubs
xchg
cmpsb
cmp
sbb
mov
test
cwtl
arpl
pop
sub
mov
fldt
jl
sbb
sbbb
test
sub
or
add
inc
gs
aaa
push
push
add
movsl
iret
add
pop
add
add
adc
in
mov
mov
mov
mov
dec
fwait
call
loope
inc
lds
cli
in
test
sub
icebp
icebp
ret
cld
or
mov
jecxz
stos
pop
xchg
jge
mov
jnp
fwait
mov
loopne
cmp
adc
adc
add
pop
or
femms
add
add
mov
push
adc
cwtl
out
inc
shll
jb
add
pop
add
add
add
xchg
sub
mov
shll
pushf
mov
adc
sbb
jo,pt
sahf
fadds
sub
cmpsl
stc
xchg
std
mov
lea
stos
jl
clc
into
pop
stos
add
aad
pop
leave
and
add
add
sub
das
jle
jg
imul
in
mov
int
loope
add
add
or
cwtl
xor
lods
daa
daa
test
push
addb
cmp
inc
mov
out
dec
or
popf
rcll
and
pop
mov
loopne
mov
jns
loopne
stos
cld
jbe
cmp
mov
adc
in
inc
daa
push
loopne
add
dec
jne
orb
push
mov
xchg
add
add
and
mov
mov
loop
sub
add
pop
add
add
push
rclb
inc
mov
std
mov
mov
sub
mov
out
push
test
jne
fdivr
pop
imul
pop
out
cli
push
fwait
inc
movsl
stos
loop
xchg
add
or
push
fs
dec
xchg
iret
stos
shll
fs
cs
jns
jmp
adc
loopne
repz
jl
loop
add
ret
or
ret
lods
sub
mov
jns
add
add
repz
mov
call
ret
popf
mov
test
out
in
inc
loopne
dec
shl
mov
sbb
mov
sbb
aaa
mov
sub
fbstp
arpl
adc
pusha
stc
dec
sbb
jmp
dec
ret
add
add
ret
pop
iret
fst
enter
mov
movsb
out
add
pop
add
add
push
dec
push
mov
subl
sub
dec
jbe
jg
mov
ds
pop
mov
sub
adc
fdiv
sar
add
test
pop
push
rolb
aad
aad
jmp
lods
push
xchg
sarl
sub
es
jl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
sbb
repnz
add
sbb
add
push
inc
add
sbb
add
sbb
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
inc
add
sbb
inc
add
or
addl
sbb
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
out
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
loop
inc
add
inc
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
ret
xchg
es
mov
add
pop
add
add
aad
stos
mov
pop
pop
and
xchg
add
shl
lea
pop
jmp
push
jle
daa
pop
les
cmp
inc
jecxz
mov
sbb
and
repz
leave
dec
jmp
lds
push
xor
mov
mov
lock
mov
pop
data16
add
add
mov
push
mov
xlat
push
mov
mov
add
add
inc
or
cld
aam
pop
test
popf
loopne
rcrl
dec
outsb
fwait
es
lcall
andb
and
addl
ja
xchg
das
xor
sbb
fstl
xchg
mov
fdivs
push
rep
cld
mov
outsl
mov
cmc
add
add
stos
pushl
xchg
push
push
inc
xlat
add
pop
add
add
and
and
clc
pushf
mov
lods
idivb
ds
cli
scas
mov
out
je
mov
fidivrl
xor
ret
adc
push
ss
xchg
in
out
stc
cmp
scas
insl
sti
ds
inc
aam
das
subl
jecxz
cmp
lds
or
sbb
add
cmp
cmp
in
fimuls
pop
jo
mov
add
add
fidivrl
js
stos
test
xchg
lods
stos
out
mov
mov
pop
icebp
in
addr16
pop
ret
inc
imul
out
xor
xchg
or
shrb
jbe
xchg
add
inc
sub
mov
add
mov
fimull
mov
push
mov
mov
mov
pop
dec
or
mov
push
add
add
mov
sbb
std
negb
sub
cli
pop
add
add
add
pop
add
add
add
mov
and
enter
addl
mov
inc
out
loopne
or
faddl
std
in
sahf
push
and
inc
lea
xchg
adc
push
lock
pop
js
adc
aam
sub
cmp
add
addr16
add
add
xor
jb
inc
mov
aam
fadds
add
add
xchg
adc
inc
or
pop
out
push
test
xlat
pop
sub
outsl
cwtl
xchg
xchg
xlat
insb
jns
mov
insl
xorl
repz
push
scas
dec
pop
push
adc
xlat
icebp
jg
testl
test
pushf
jge
adcb
fists
mov
xor
lret
inc
cmp
add
dec
in
fwait
scas
fdiv
pop
sub
fadds
add
add
popa
in
cld
fimuls
aaa
shr
add
inc
inc
jo
leave
movsb
scas
fistl
int3
jle
dec
cmp
inc
add
push
mov
out
xchg
cmp
pop
bound
fwait
mov
lds
test
xor
fstp
fldl
inc
out
push
ds
insb
mov
add
add
mov
aam
xor
and
pop
flds
add
add
fnstenv
test
lods
lret
jg
scas
popa
lret
cli
mov
jmp
mov
pop
rcll
mov
dec
jecxz
pop
dec
jns
mov
test
popa
bound
pushf
pop
outsl
inc
inc
adc
leave
sti
pop
dec
jo
adc
repz
shl
addr16
push
outsb
les
jbe
and
add
cmp
add
mov
out
pop
shl
je
add
pop
add
add
adc
sub
popf
pop
pop
adc
push
repnz
leave
ds
sub
jae
nop
xchg
and
mov
add
mov
xchg
sub
sub
repz
stos
mov
ret
jbe
aaa
lea
rcrb
jmp
repz
fimull
jg
fisubs
flds
add
add
mov
andl
adc
push
cld
in
push
popa
pop
jge
pusha
mov
lea
mov
cs
roll
fcom
mov
aaa
fcmovne
add
push
in
jns
int
daa
jg
in
lds
mov
mov
adc
out
add
pop
inc
pop
iret
pop
aad
ss
dec
lods
push
popa
subl
add
pop
add
add
ret
imul
stos
popa
inc
pop
mov
cmp
cltd
xchg
mov
or
or
ret
adc
jnp
add
popf
cmp
mov
xor
jno
sbb
inc
lret
enter
data16
cmp
movsl
fsubrp
fs
dec
roll
jne
dec
add
add
cld
shr
repz
add
pop
add
add
inc
and
ud0
shrb
cltd
dec
std
test
jmp
mov
stos
or
filds
jl
lret
cmpsb
dec
or
out
outsb
es
hlt
jb
subb
jecxz
add
cmp
mov
add
pop
inc
nop
push
and
add
movzwl
or
ret
int3
stc
cmp
jnp
add
outsb
jae
lret
jle
repz
lcall
add
add
xchg
inc
mov
in
or
test
bnd
js
push
jo
xor
lea
js
or
lcall
xchg
in
fwait
nop
inc
sbb
aam
cmpsl
inc
aas
and
mov
stc
ret
pop
js
sbb
fidivs
adc
fldl
negb
test
push
push
mov
push
push
add
cmc
adc
adc
mov
lds
inc
fildl
add
add
or
inc
in
popf
movsl
mov
pop
mov
jmp
jecxz
push
jecxz
inc
daa
push
xchg
inc
inc
push
sub
call
jg
cmpsl
jns
cmp
or
insb
test
lock
mov
out
xor
sub
mov
xchg
mov
fmuls
lret
add
cmp
mov
shlb
add
mov
add
add
out
sbbl
mov
fwait
cmp
shl
inc
jl
mov
fs
repnz
negl
mov
shll
cmp
jno
cmpsl
jge
push
mov
out
mov
ret
test
rcrb
mov
mov
mov
xor
push
xchg
xchg
pop
in
testl
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
out
mov
add
add
mov
aad
sbb
mov
dec
push
dec
stc
mov
test
in
es
sub
fsubrp
mov
dec
std
mov
cwtl
cmp
inc
inc
lret
js
inc
rcrb
jnp
mov
mov
xchg
outsl
inc
arpl
or
stos
fidivrl
out
inc
aaa
push
int
cwtl
add
add
sub
fildll
aad
dec
fcomps
add
add
push
mov
imul
xor
xchg
dec
rcr
loopne
repz
cmpsl
jmp
ss
lcall
dec
movsl
pusha
lea
inc
jle
push
jmp
lcall
jbe
clc
sahf
xor
mov
sub
into
cmp
std
lock
cld
inc
mov
idivb
inc
and
xlat
movsl
or
add
adc
testl
mov
mov
add
add
mov
sub
ret
or
or
rcrl
push
icebp
das
jne
jl
xor
lods
adc
mov
xchg
in
push
sti
jmp
xor
scas
lret
outsb
testb
push
test
dec
cs
push
jl,pt
push
enter
xchg
mov
lods
lods
xor
call
movsb
imul
add
add
jne
jg
clc
cs
push
add
add
pop
add
add
into
jae
or
sarl
mov
ds
test
pop
aad
pop
out
shl
push
loopne
lret
sbb
hlt
out
ficoml
or
xor
jo
jb
push
pop
mov
pop
mov
out
fcoml
scas
mov
aad
imul
cmp
add
add
or
dec
mov
je
lcall
add
pop
add
add
inc
sahf
jb
jns
ret
es
into
push
inc
fabs
and
mov
inc
aad
adc
xchg
in
inc
into
push
cmc
cld
add
add
rcrl
cs
inc
inc
lea
bound
xchg
mov
jne
ljmp
adc
lret
mov
jno
mov
int3
add
add
push
mov
mov
xchg
adc
inc
andl
add
add
out
lods
je
mov
jecxz
and
jnp
xchg
and
gs
mov
mov
lcall
adc
xchg
and
jg
sbb
mov
and
data16
lcall
test
es
inc
xchg
push
jecxz
faddl
sbb
mov
sub
inc
push
add
add
fisttps
push
outsb
add
add
pop
add
add
jne
fsubr
jmp
xchg
push
mov
cld
lock
fldenv
scas
jle
bnd
out
cld
push
lods
or
filds
aam
mov
inc
cld
cmc
std
cmc
mov
insl
cmp
loope
sbb
or
jb
mov
lcall
or
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
sub
fcmovnb
sbb
inc
mov
fcoml
insb
call
inc
xchg
mov
jp
ljmpw
or
xlat
add
addb
cltd
das
xchg
hlt
mov
xchg
nop
mov
je
dec
int
cmpb
outsb
mov
in
div
push
lds
dec
fnstsw
add
jo
and
cmp
movsb
or
rcl
add
pop
add
add
outsl
mov
or
lret
enter
mov
inc
mov
jbe
roll
sbb
push
lock
lods
and
jecxz
data16
dec
call
mov
inc
mov
cmp
jae
sbb
pop
xchg
daa
insl
pop
xchg
mov
jg
rorl
jmp
int
sub
cmp
add
add
add
add
popf
aam
rorl
add
add
fistps
push
pop
mov
cmp
inc
mov
jae
bound
cmp
sbb
jno
adc
cmp
xchg
test
out
pop
jns
dec
les
int3
loope
jle
jmp
pusha
loope
push
les
add
jmp
popa
mov
push
push
dec
popl
add
hlt
mov
jbe
hlt
mov
and
cmpsb
dec
xchg
mov
rolb
add
add
push
inc
cwtl
dec
sbb
clc
xchg
fwait
mov
xchg
insb
nop
dec
rcrb
push
pop
push
popf
imul
hlt
jmp
or
jl
dec
pop
sarb
push
lret
mov
push
inc
cmpsb
popl
pushf
push
add
jns
adc
push
xchg
bound
mov
hlt
in
mov
add
add
add
add
ror
mov
sub
out
jg
mov
pop
add
add
stos
xchg
test
add
sbb
in
jecxz
dec
push
mov
stos
push
leave
ficompl
mov
jecxz
push
push
hlt
pop
xor
fdivr
jp
stos
dec
aad
sbb
push
jp
mov
adc
sbb
fwait
into
sbb
inc
xor
push
sbb
test
jns
dec
in
xor
dec
add
add
in
outsb
and
pop
mov
inc
roll
add
add
mov
jno
mov
aas
xchg
jno
lret
shll
movsb
xorb
ds
and
sti
leave
arpl
fwait
loope
enter
cs
popa
and
inc
or
dec
shrl
pop
repz
xchg
cmp
xor
sub
ret
bound
mov
lea
add
add
mov
and
aad
roll
add
add
push
fdivl
pop
push
std
xor
in
fmul
xor
lds
push
mov
xor
push
sbb
push
sbb
and
pop
mov
test
xchg
andl
mov
cs
das
xchg
cmp
mov
mov
cmpsl
mov
mov
dec
sarb
mov
add
add
stc
call
into
inc
mov
dec
jnp
add
add
pop
add
add
js
jp
shll
movsl
lret
mov
subl
push
and
mov
fs
stc
inc
leave
push
mov
cmp
xchg
sbb
rorl
lcall
pop
pop
addl
sbb
sbb
cmpsb
or
out
daa
sbb
add
fisubrs
cwtl
sar
repz
orb
add
add
fstps
dec
imul
sub
call
and
pop
xlat
movsb
outsb
mov
adc
stos
push
pusha
aaa
std
pop
mov
lcall
ds
les
cli
xchg
xor
and
ss
movsb
mov
jb
enter
xchg
cmpsb
mov
and
add
dec
aas
int3
sbb
out
loopne
lods
or
aam
add
add
add
orl
cmp
mov
jg
sbbl
adc
dec
jno
loope
and
mov
push
cmc
lea
int
pop
inc
cmpsb
mov
das
and
data16
outsb
mov
mov
cmp
pop
aaa
je
xor
add
mov
add
push
test
fildll
out
inc
mov
add
add
movsb
add
addb
movsb
push
in
ret
adc
iret
mov
aam
pop
add
in
mov
jne
movsl
cmp
pop
sbb
sarl
push
sbb
in
mov
xor
push
xlat
mov
cwtl
sub
add
fwait
loope
sub
sarb
add
test
pop
add
add
lock
pop
hlt
pop
int
repnz
inc
shufps
cmp
ror
call
int
orb
cmc
mov
bound
arpl
inc
mov
outsl
xor
xor
xchg
push
mov
roll
and
add
or
ja
dec
cmp
dec
repnz
cmpl
aad
add
add
arpl
jne
es
in
cwtl
and
sub
repnz
leave
jae
fld
ror
xor
cmpsl
sbb
pop
into
mov
inc
fstpt
ret
je
sub
fs
pop
mov
xor
sub
out
cmpsl
cmp
xor
inc
test
fsts
xchg
pop
scas
pop
add
add
arpl
jge
mov
daa
mov
jp
add
pop
add
add
push
lds
mov
cmc
cvtdq2ps
cmpsb
lcall
or
mov
mov
rcrl
call
mov
mov
mov
jl
jmp
xchg
enter
shll
in
xchg
fisttps
push
jge
lock
add
add
add
daa
push
imul
ds
jg
push
fldl
add
add
cmpsb
xchg
mov
ds
xlat
sub
ret
xchg
cld
push
xchg
es
cwtl
cmp
xchg
fdiv
mov
inc
lock
fcoml
inc
push
dec
cmc
rcll
aaa
nop
pop
sbb
in
jecxz
jle
inc
pusha
call
xchg
aad
leave
or
pop
ficomps
sbb
out
mov
add
daa
ss
xor
and
lea
pop
add
add
xor
ficomps
rcr
out
lods
je
lret
idivb
inc
jbe
and
jecxz
iret
nop
es
dec
shll
orl
xchg
push
lahf
mov
lret
testl
inc
push
dec
inc
pop
shlb
mov
fistpl
add
mov
add
add
out
mul
aaa
cmc
xchg
lcall
rcr
add
pop
add
add
icebp
add
imul
iret
jbe
jae
cmp
ds
cmp
ljmp
inc
daa
ss
mov
sbb
std
push
icebp
xchg
clc
ror
leave
mov
ret
fistl
add
ficomps
add
push
aad
out
fucomip
ss
cmp
in
sub
add
add
adc
iret
cmc
inc
ss
into
or
jl
shr
idivb
push
mov
add
push
aam
mov
cmpsb
mov
inc
adc
popf
mov
std
mov
int
int3
dec
lods
mov
aad
fbstp
ficoms
push
xor
call
mov
add
outsb
jbe
lret
outsb
negb
xchg
xchg
mov
add
pop
add
add
pop
rcr
int
push
or
cmp
shr
sbb
mov
fsubl
lret
mov
sbb
fimuls
in
stos
int
push
or
xchg
cwtl
mov
jmp
rorb
lods
insb
add
dec
int3
mov
nop
ss
test
out
adc
add
add
push
les
in
lahf
sti
ja
rcll
movntq
out
add
pop
add
add
inc
mov
mov
ret
push
cmc
je
adc
sub
popa
pop
pop
rorb
push
sbb
cmpsl
add
adc
scas
pusha
out
pop
mov
imul
dec
pop
dec
jmp
add
push
sti
jo
dec
lret
jnp
pop
mov
popf
adc
add
jle
call
cli
lcall
add
pop
add
add
adc
cmpsb
insb
pop
pop
add
ret
and
xchg
xchg
sti
lods
hlt
push
fwait
push
push
cld
add
add
ret
push
push
rcr
inc
inc
mov
xor
repnz
sbb
xor
mov
inc
push
ljmp
fcomps
xlat
mov
negl
sbb
add
test
and
pop
dec
dec
dec
jp
mov
add
add
cmc
push
or
inc
std
es
mov
sub
mov
or
sub
stos
lock
lds
sub
test
test
sub
aas
sbb
es
pop
fxch
push
je
dec
imul
dec
add
jp
pop
lcall
inc
cmc
jle
fistpl
add
add
aam
fnstsw
out
fcmovu
in
mov
add
pop
add
add
cwtl
icebp
or
mov
or
sub
fldt
cmp
ret
sub
mov
sub
cltd
div
in
loopne
lahf
stos
mov
mov
mov
adc
adc
fwait
in
addl
iret
popf
sahf
or
mov
repz
add
sbb
inc
jecxz
mov
ljmp
add
add
aad
fs
js
leave
sbb
sub
popf
push
or
mov
insb
lds
popl
rclb
cmpsl
ret
in
scas
push
add
push
data16
mov
dec
cld
insl
inc
imul
ss
inc
rclb
fs
inc
loop
sbb
rclb
adc
push
add
add
mov
icebp
and
mov
mov
add
add
out
test
loop
and
push
arpl
inc
mov
or
cmpsl
leave
adc
pop
pop
je
mov
push
pop
lahf
or
das
dec
push
add
xchg
jb
rclb
pusha
lret
xchg
xchg
movsb
cmp
rcrb
fmull
add
add
xlat
repz
das
cli
fists
dec
es
dec
jbe
dec
adc
add
add
stos
es
mov
adc
add
pop
pop
mov
cmp
push
mov
aad
cmp
shl
out
push
ret
repz
imul
sahf
jmp
mov
jbe
in
dec
inc
jl
andl
cs
jle
mov
and
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
and
add
add
add
add
add
add
add
sbb
add
sbb
add
and
add
inc
iret
add
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
