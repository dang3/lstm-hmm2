push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
cld
dec
xchg
les
xchg
push
ds
fucomp
lock
int3
add
ffree
outsb
mov
repnz
adc
out
ss
test
repz
fisubs
mov
mov
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
dec
pop
ret
jnp
cmp
jle
inc
call
pop
xchg
rcrb
lret
sub
das
cmp
xor
jge
or
loopne
pop
adc
inc
aam
movsb
outsl
or
push
add
pop
xor
xor
dec
push
pop
adc
push
test
xor
push
jmp
mov
ret
push
sub
nop
nop
xor
dec
fbstp
mov
fldcw
pusha
sbbb
jmp
push
or
arpl
pusha
int3
mov
das
jp
xchg
pop
jecxz
and
fbld
sub
test
nop
addr16
sbb
and
mov
push
add
mov
xchg
popa
mov
jbe
mov
shll
popa
jne
mov
lcall
jge
push
mov
inc
sbb
inc
int3
das
roll
shrb
push
xchg
sbb
mov
xchg
decb
xchg
scas
in
dec
xorl
cli
frstor
mov
test
push
xor
lea
inc
mov
lods
add
subb
inc
sub
inc
inc
cmpsb
xchg
jbe
xor
fldenv
sarb
jg
cmpb
cmpsb
xor
inc
icebp
cltd
popf
orb
ret
mov
mov
pop
repnz
pop
aaa
mov
in
fs
frstor
cmovbe
mov
mov
mov
std
cwtl
dec
insb
jae
ret
in
and
ss
movsl
sub
and
popa
loopne
mov
dec
popf
jp
sbb
movsb
push
dec
push
dec
sub
shlb
sub
jnp
in
adc
mov
xchg
or
add
fs
xor
jo
push
jmp
iret
adc
jae
dec
and
imull
lahf
nop
and
imul
nop
cmc
andb
adc
or
mov
repnz
test
in
scas
lcall
outsb
pop
xchg
cltd
mov
lock
sbb
xchg
ljmp
mov
sbb
push
shrl
aas
addr16
inc
push
dec
mov
sub
adc
adc
stc
out
cmp
call
jecxz
cmpb
and
jo
adc
addr16
movsb
inc
or
or
push
sahf
cmpsb
std
notb
in
movsb
jmp
jl
push
sbbl
cmc
scas
and
andb
loopne
movsl
hlt
add
xchg
lods
and
ljmp
sahf
dec
ja
pop
scas
sbb
add
mov
cltd
fwait
inc
inc
dec
cmp
mov
jecxz
sbb
cmp
fidivs
psubusw
or
sti
cltd
fs
dec
add
mov
lods
pop
jb
jne
inc
mov
mov
push
xlat
dec
outsl
add
jmp
out
and
out
mov
or
stos
mov
jne
mov
scas
call
arpl
jno
inc
add
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
xchg
int3
das
mov
lods
jns
add
call
insb
pop
rcrl
lock
popl
mov
jmp
daa
jmp
mov
xor
xor
push
inc
mov
call
dec
jb
or
pusha
das
adc
jle
mov
mov
add
repnz
xchg
fwait
test
insl
inc
in
out
fdivrs
jle
stos
sub
lret
mov
sbb
jg
or
sbb
fs
dec
es
inc
mov
push
repnz
add
lods
lahf
pop
push
cmp
xchg
adc
push
pop
cltd
mov
xor
push
pop
mov
push
and
mov
push
lret
inc
xchg
test
jg
and
mov
dec
xchg
call
push
jae
dec
icebp
fcompl
cli
xchg
sub
insb
lock
mov
jle
and
out
sub
sub
jno
jge
inc
clc
xchg
push
dec
mov
popf
pop
dec
movsl
cmp
or
rclb
push
mov
xchg
mov
dec
adc
testb
and
mov
adc
mov
xor
or
outsb
adc
fdivs
push
add
fstps
orl
push
mov
pushf
jnp
ljmp
fwait
pop
xor
mov
cmp
push
jl
lock
cli
mov
dec
scas
sub
dec
cs
dec
mov
scas
adc
imull
imul
adc
das
test
jp
int3
pop
rcll
mov
xor
int3
pop
mov
fistpll
add
xchg
add
lcall
out
push
iret
sub
mov
dec
jae
ret
xchg
test
imul
pop
add
xchg
xchg
aad
add
ja
jnp
insl
outsl
imul
pop
mov
imul
or
xor
int3
std
call
inc
mov
xchg
push
inc
mov
ror
ret
push
fsts
ret
add
je
lods
sarl
or
mov
and
mov
sbb
mov
loop
out
insl
addl
das
mov
repz
and
icebp
out
js
sbb
and
xchg
fstpt
popa
jae
sbb
xlat
dec
les
jbe
jle
inc
inc
inc
xor
int3
fwait
dec
mov
fcmovnbe
xor
je
lret
popf
xchg
mov
inc
iret
or
rcll
adc
in
sarb
movsb
arpl
jecxz
adc
dec
pop
fsts
addr16
inc
pop
and
stos
es
lea
cmp
lcall
in
add
add
int
cmc
xchg
mov
inc
loopne
andb
stos
sub
pop
add
in
jecxz
or
mov
cmpb
cmc
dec
cmp
xchg
roll
stos
cld
ror
add
xchg
je
mov
jl
mov
push
xor
sarb
inc
hlt
pop
mov
es
imul
clc
jp
add
inc
imul
mov
dec
and
sbb
sbb
inc
adc
out
fisubl
fld
aam
cmp
mov
pop
lock
aam
rorb
inc
test
iret
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
sahf
mov
les
mov
ret
or
add
js
arpl
lcall
addr16
movsb
push
ljmp
stc
jae
xchg
lods
std
aad
xchg
mov
xchg
push
sbb
mov
bound
not
pop
xchg
mov
add
test
xor
mov
iret
rorb
test
fwait
je
sub
and
negl
aas
add
out
inc
xlat
mov
adc
add
add
and
and
ror
jae
push
es
sahf
sbb
test
jmp
sbb
call
push
loopne
cmc
inc
testb
mov
or
jb
add
sub
cmpsl
inc
add
fistl
and
fsts
mov
push
mov
jl
test
cwtl
scas
jle
aas
sub
mov
je
ret
or
test
mov
lods
cmp
pushf
test
push
ret
les
test
test
arpl
dec
push
rcr
jae
or
xor
push
in
add
addr16
and
xchg
xchg
andb
rcrb
lahf
xchg
mov
jl
or
idivb
sbb
and
dec
add
jno
cmp
popa
aas
sbb
imul
aad
push
sbb
js
cmp
adc
or
mov
and
fdivs
or
mov
fimuls
dec
out
mov
movsb
mov
jne
or
dec
stos
cwtl
mov
movsb
jge
cmp
add
adc
test
in
in
lock
mov
clc
sbb
add
outsb
ja
inc
popf
or
jl
mov
cmpsb
inc
mov
nop
rorl
iret
sbbb
adc
jo
jle
cmc
scas
shlb
rorl
mov
jp
loope
test
inc
repnz
xor
add
xchg
insb
mov
jmp
inc
xchg
insl
xchg
xchg
cmp
adc
jno
roll
cmp
add
pushf
jno
pushf
and
mov
jo
xor
mov
add
pop
daa
lea
inc
cmp
pop
push
cmp
adc
mov
lea
pushf
push
mov
daa
andl
push
xor
push
sbb
std
xor
jge
test
enter
sbb
addr16
or
mov
fisttpll
scas
push
and
jno
pushf
flds
ror
dec
pop
inc
fisubs
jp
fdivrp
mov
xchg
addr16
js
ds
or
fiadds
cmpsb
add
jg
inc
pop
add
cmp
les
adc
dec
push
cmp
loope
jle
mov
pop
pop
test
mov
jae
orl
add
rcll
mov
outsb
xchg
lods
in
dec
sbb
dec
sbb
xchg
int3
jnp
push
in
sahf
fs
pop
out
xchg
mov
fwait
lahf
xor
or
aam
xchg
popf
mov
cmp
sub
sarb
into
sub
lds
inc
stos
fimuls
and
mov
xchg
dec
sub
movl
movl
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
popf
inc
lcall
les
xchg
stos
sbb
out
fistl
push
jbe
cmp
sub
fwait
jecxz
imul
arpl
jg
mov
mov
icebp
mov
or
jmp
dec
cltd
cmp
push
xchg
outsl
push
iret
adc
cltd
push
rolb
dec
xlat
repnz
outsb
xchg
in
or
and
imul
xchg
jp
mov
out
rcl
mov
std
and
arpl
mov
mov
dec
test
call
stos
test
cmpsl
test
pop
rol
imul
adc
fucom
cmc
pop
mov
iret
ja
test
jns
sahf
mov
clc
orl
daa
cltd
mov
aaa
ja
mov
jb
mov
dec
nop
popa
jle
movsl
fwait
mov
dec
adc
mov
inc
push
fwait
jne
daa
jne
imul
inc
icebp
in
mov
mov
push
lret
es
inc
incb
xchg
mov
lock
shrl
shll
cld
lret
rcll
ret
adc
mov
mov
arpl
aam
out
sahf
lahf
push
ljmp
cmpsl
mov
inc
sub
pop
pop
pushf
push
xor
mov
test
outsb
cwtl
arpl
mov
xor
std
fucomp
js
jge
cmp
jne
add
movsl
scas
jge
jno
jno
dec
test
dec
add
addr16
sub
push
jno
outsl
mov
jbe
cmp
idivl
pop
inc
xchg
mov
push
jnp
cmp
sub
test
dec
lret
fisubrs
js
push
xchg
cltd
add
aam
outsl
mov
dec
add
js
add
andl
mov
mov
sbb
mov
jns
jbe
or
adc
sbb
mov
jle
sbb
icebp
sbb
lret
sbbl
imul
stos
pop
mov
setae
arpl
cmc
mov
inc
iret
fstpt
je
pop
hlt
pop
std
ja
inc
mov
movsl
sbb
fimull
jb
xor
out
iret
fmull
rolb
stc
into
leave
mov
test
addr16
lcall
outsl
hlt
inc
out
pop
push
fnsave
jae
fisubl
mov
xchg
fwait
inc
leave
ljmp
popa
mov
add
xchg
sti
test
cld
leave
pushf
adc
adc
adc
scas
out
push
enter
push
repnz
push
lret
adc
mov
scas
xor
push
inc
repz
or
mov
out
cli
es
shrd
jb
loopne
sub
pop
xor
xchg
pop
lret
movsl
mov
add
mov
jle
popa
push
pop
rcrl
push
ss
jle
call
xchg
add
push
pusha
push
mov
jns
pusha
shll
test
mulb
mov
adc
popfw
jp
and
mov
aas
jae
mov
shll
cmp
mov
mov
popa
inc
lods
mov
adc
sbb
jns
dec
dec
sbb
decb
cmp
in
in
shlb
aad
in
jg
jmp
das
xchg
lcall
cvtps2pi
add
add
test
call
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
cli
inc
sarl
les
fstpt
cmpsb
and
cmc
pop
imulb
pop
add
stos
jmp
or
enter
test
cmp
mov
sarb
mov
mov
xor
push
xchg
test
add
imul
popa
adc
xor
add
sub
andl
dec
icebp
aas
sub
sbb
cmp
in
fmull
or
idivl
cmp
mov
out
dec
out
test
pop
mov
mov
and
testl
xlat
sbb
int3
cmpsb
inc
enter
imul
mov
fisttpl
out
ja
mov
add
test
sub
add
mov
js
mov
adc
nop
frstor
jns
in
add
lcall
pop
mov
adc
push
xor
mov
ljmp
add
push
repz
rorl
push
inc
pusha
loope
mov
mov
shrl
int
adc
mov
add
fwait
and
repnz
mov
aam
push
clc
pop
mov
mov
or
jb
mov
stc
inc
repnz
rcr
dec
in
pop
push
lahf
push
daa
cli
xchg
arpl
inc
cmpsb
shrl
mov
lcall
cs
fiadds
roll
loope
pop
inc
in
mov
xchg
dec
call
push
shrl
addr16
and
cltd
pop
scas
push
jmp
jmp
jb
iret
push
hlt
lods
push
movsb
es
cmp
sbb
scas
jnp
movsb
arpl
mov
dec
push
and
mov
outsb
push
and
addb
sbbl
pop
repnz
aaa
dec
lock
mov
xchg
or
inc
into
pop
jno
inc
leave
sbbb
and
insb
pop
xchg
fs
je
popa
js
add
std
or
in
icebp
pushf
mov
sbb
or
dec
stc
pop
imul
mov
jae
setnp
int3
jbe
stc
unpckhps
stos
shl
mov
or
sbb
rolb
pop
pushf
mov
dec
cmc
shrb
sarl
lea
arpl
scas
mov
push
or
sahf
int3
clc
sub
repnz
out
bnd
and
test
xlat
mov
jmp
jae
jle
jp
jne
jne
push
test
mov
xor
or
mov
addb
adc
fs
jb
jmp
loope
and
xchg
mov
movsb
scas
xor
and
mov
xchg
lcall
sub
aaa
and
jp
dec
icebp
fidivrl
es
mov
lds
inc
dec
mov
ljmp
jg
xlat
ss
add
rcrl
hlt
or
es
jo
test
leave
or
lds
mov
xor
pop
xorb
xor
fstps
pop
push
pushf
repnz
inc
inc
mov
std
insb
and
and
sar
out
data16
xor
pop
jle
ds
ds
xor
push
fistpll
or
scas
pop
insl
mov
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
cs
mov
xchg
push
mov
scas
dec
imul
rcr
mov
xchg
aaa
fpatan
in
mov
jge
lea
jl
cli
xor
jo
repnz
mov
lret
xchg
xchg
jmp
push
or
add
in
into
pop
push
lret
and
shr
hlt
jae
sti
shlb
frstor
lret
pop
jae
cwtl
or
sbb
fnsave
pushf
mov
aad
out
lock
dec
mov
orb
mov
fdiv
add
xchg
shl
frstor
pusha
push
push
mov
aas
sbbb
and
scas
lahf
cld
ror
fucom
push
push
sbb
hlt
adc
fs
pop
xchg
push
or
loop
dec
mov
rcr
std
jl
ja
push
das
fistpl
bound
mov
ficoml
lods
negb
inc
jge
das
aad
fs
or
outsl
xor
xchg
insl
sbb
and
lea
repnz
push
adcl
js
insb
into
mov
cmp
mov
mov
adc
mov
fldl
xor
gs
in
jbe
lahf
jnp
sbb
dec
jbe
xor
fwait
mov
stos
push
stos
pop
gs
or
adc
loopne
dec
mov
mov
sbb
mov
adc
adc
and
cmpsb
stc
xorb
jmp
clc
xor
ret
dec
or
xchg
sub
in
and
xchg
xor
pusha
jl
sub
stc
inc
mov
cmp
pop
loop
adc
pusha
subb
mov
jno
push
popf
inc
jmp
in
mov
mov
les
lret
lods
pop
outsb
jne
sub
adc
repz
out
add
test
inc
xchg
xchg
jmp
fcmovu
outsb
pop
jmp
pop
dec
aas
cmp
out
push
inc
xchg
sub
popa
add
mov
and
fcmovnb
dec
mov
push
gs
lds
jecxz
xchg
mov
xchg
in
sbb
ljmp
dec
leave
nop
mov
mulb
les
in
push
into
fldenv
dec
test
lods
push
pop
adc
aaa
ret
popa
out
cmc
fs
adc
out
mov
dec
add
mov
aad
loopne
loope
push
inc
out
add
xor
cmp
cwtl
int3
mov
lds
and
jecxz
add
stos
or
cs
lock
jmp
outsb
jb
push
mov
xchg
faddl
mov
faddl
repnz
dec
pop
imul
lods
dec
lahf
jns
call
ljmp
mov
adc
shlb
and
popf
out
out
cmp
loope
push
mov
adc
push
jno
inc
jne
iret
lock
popf
mov
and
pop
add
jae
jmp
xchg
jne
pop
jnp
mov
add
out
dec
mov
mov
neg
dec
cmp
push
sub
mov
jne
sbb
mov
into
push
idivl
test
sbb
pop
push
addr16
pop
jmp
or
cmc
imul
xchg
mov
pop
jmp
mov
mov
in
cmp
rcrb
nop
mov
push
add
jge
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fnsave
dec
xchg
mov
les
fiaddl
dec
sub
call
shll
aaa
cmp
ljmp
lahf
sub
xchg
ds
in
push
divl
int
inc
jbe
dec
mov
mov
pushf
sbb
pop
push
jle
rcrl
jmp
push
ljmp
imul
ret
jecxz
shll
adc
aam
pop
adc
fstps
testb
cwtl
sarb
stos
and
cmp
dec
and
bound
addr16
jnp
or
dec
shlb
sub
inc
outsb
aam
or
or
sbb
push
pop
sbb
bound
lock
or
push
mov
mov
out
and
pop
shll
dec
ljmp
fst
cmp
enter
and
jnp
xchg
lock
mov
inc
mov
sbb
xchg
outsb
mov
test
xor
ljmp
xor
int3
jp
cmp
faddl
ja
jno
cmp
mov
cmp
and
clc
nop
xchg
add
lods
cmp
lret
lret
lcall
roll
push
mov
mov
lock
aaa
inc
inc
push
leave
je
lret
dec
cmp
out
mov
and
adc
fnsave
add
adc
mov
lahf
sbb
icebp
cmpsl
imul
orb
adc
test
jae
lcall
mov
jmp
add
call
xlat
test
shlb
test
mov
sarb
test
das
mov
iret
xchg
ja
fs
push
mov
fs
jle
inc
jo
or
test
mov
addr16
push
in
lcall
push
fnsave
call
xchg
mov
imul
ss
inc
push
loop
xchg
pop
push
roll
sbb
xchg
ja
sbb
out
or
gs
int3
push
pop
mov
sbb
pushf
dec
and
inc
jnp
push
or
xor
fsubrs
pop
movsl
rcr
mov
sahf
mov
aad
inc
pop
xor
mov
push
push
outsl
mov
inc
jae
fwait
mov
push
fsubrp
add
ds
dec
shll
ss
sbb
push
out
movsl
add
shll
ss
dec
sbb
mov
mov
aas
cld
leave
cld
adc
lret
mov
aas
cltd
fidivs
insb
repnz
push
xchg
dec
out
jg
mov
inc
xor
mov
pop
hlt
inc
cmp
hlt
popa
mov
push
mov
jne
jne
jle
insb
push
pop
pop
lds
sub
fwait
jne
mov
test
sbb
jg
cli
mov
cmpb
pusha
dec
xchg
mov
js
mov
dec
addr16
ficomps
and
push
jno
aaa
cwtl
adc
aaa
mov
jnp
test
mov
dec
das
xor
repz
sbb
in
sub
ss
fbstp
push
popf
mov
call
icebp
lret
or
int3
icebp
xchg
fmull
lods
roll
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
lret
sub
mov
mov
pop
fldenv
fmul
and
mov
mov
bnd
sub
add
in
js
xchg
sub
mov
adc
adc
dec
mov
or
out
stc
add
mov
lret
and
call
jns
adc
cld
lock
pop
pusha
dec
sbb
dec
mov
call
mov
mov
dec
mov
aaa
pusha
inc
js
jp
xchg
out
push
cmpsl
mov
movsb
lret
cmpsl
lea
out
loopne
push
sbb
dec
loopne
leave
pop
mov
ja
pop
outsl
scas
add
int
inc
out
and
and
jg
lock
ds
aad
aaa
or
dec
sbb
inc
mov
data16
jl
hlt
mov
sarb
lea
xor
cmp
negb
movsl
mov
enter
xchg
movsb
adcb
pop
inc
in
roll
xor
push
xchg
push
int
fs
dec
add
mov
cmpsl
mov
xor
add
xor
idivl
push
pop
pop
mul
add
xor
rcr
ret
push
push
sub
out
pop
data16
or
cmp
jae
dec
rorb
mov
hlt
imul
dec
sub
sbb
addr16
or
cld
mov
jecxz
aam
cli
xchg
push
icebp
ds
push
mov
fnsave
push
inc
mov
sub
fstpt
and
adc
mov
pop
xchg
mov
jmp
cmp
fidivl
add
inc
sub
xchg
sahf
lahf
cmp
dec
and
out
xor
adc
push
movb
sub
pop
mov
xorl
pop
scas
mov
inc
fwait
sub
xchg
jae
js
mov
sbb
scas
xchg
inc
pop
pop
sbb
outsb
and
pop
sub
and
cmp
pop
inc
pop
aad
adcb
movsl
mov
jb
stos
sarl
dec
jo
push
push
sbb
adc
mov
shlb
cmp
mov
adc
mov
pop
mov
andb
pop
mov
movb
dec
loope
jmp
hlt
cmp
cmp
lret
shll
popf
sbb
dec
pop
aam
add
lahf
popf
jmp
and
push
icebp
dec
int
pop
jecxz
jo
lahf
inc
decl
xchg
cmp
shlb
cmp
adc
mov
iret
faddl
fcoml
mov
sub
cmpl
add
aad
and
insb
adc
adc
nop
inc
imul
inc
stc
add
imul
xor
test
xchg
test
in
add
pop
sahf
jbe
fsubl
or
inc
out
std
xor
inc
cld
lds
fdivl
cmpsb
and
bound
imul
cmc
sar
inc
lcall
in
cmp
mov
add
sbb
xor
ret
adc
or
dec
adc
sbb
mov
fs
popa
sbb
sbb
add
les
fs
lcall
enter
add
mov
mov
inc
add
adc
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
sarl
cmc
mov
mov
fs
test
out
push
adc
icebp
jmp
dec
inc
lea
push
xchg
jns
dec
cmp
loopne
pusha
subb
aad
out
rcrb
decb
and
popa
int
add
jg
xchg
aad
mov
sub
ret
stc
pusha
lock
mov
popa
test
ret
mov
or
ds
popa
mov
inc
fidivrl
outsb
idiv
es
je
outsl
das
fcomps
mov
mov
mov
mov
subb
ror
xor
jb
loop
pop
jecxz
ja
pushf
imul
sbb
mov
fld
fcmovnu
mov
inc
lret
jb
mov
cld
push
pop
dec
dec
mov
jmp
int3
pop
add
test
push
or
std
in
inc
ds
jl
jns
xchg
push
repz
shll
repnz
add
movsl
daa
icebp
adc
in
test
mov
xor
fcmovnbe
mov
mov
mov
xor
out
mov
inc
jmp
cs
js
jp
jns
lods
mov
outsl
mov
mov
inc
fucomp
fmuls
cmp
arpl
into
jbe
lcall
addr16
fucomip
stos
xor
mov
ret
mov
dec
les
sbb
adc
push
ljmp
aas
mov
and
push
jecxz
dec
gs
outsl
shrl
mov
mov
hlt
mov
add
in
cmp
jmp
fdivl
pop
mov
rorb
and
mov
mov
js
or
mov
movsb
outsl
leave
cli
sbb
mulb
ljmp
add
incl
jp
mov
push
arpl
cli
fadd
insl
push
scas
sbb
rorb
lods
sbb
scas
lock
sbb
and
ljmp
je
push
dec
add
mov
cmp
bound
in
icebp
sar
imul
aaa
dec
mov
pop
push
cwtl
enter
aaa
sbb
xor
and
outsb
pop
or
shl
cli
push
mov
imul
enter
pop
mov
data16
xchg
inc
xor
xor
or
push
mov
xchg
mov
mov
cld
push
sahf
jno
std
xor
mov
cmp
push
xor
loopne
jnp
mov
inc
mov
cmc
add
and
jl
iret
das
int
add
bound
inc
jp
pop
mov
mov
mov
or
sub
sahf
incb
sbb
popf
out
jp
lret
std
lea
sub
fidivs
lcall
xchg
cmpsl
sub
les
jle
rcrb
mov
dec
scas
adc
rol
jo
adc
adc
xlat
cmpsb
popa
sbb
pop
cmp
lock
jae
pop
fldcw
repnz
jns
data16
push
std
mov
and
ss
cmp
push
push
pop
rcl
in
sbb
jmp
in
ss
mov
xor
inc
push
mov
inc
dec
out
jmp
not
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
scas
xor
popa
cmp
mov
shlb
sbb
cmp
fistps
jmp
add
sbb
std
push
cli
or
push
aas
inc
in
cmp
cmpsl
sbb
fsts
dec
lds
imul
jno
out
iret
jecxz
lahf
adc
xor
dec
mov
add
xor
push
movsl
and
add
fabs
jo
cltd
or
loopne
cmp
subl
jmp
sti
jecxz
jns
inc
dec
xor
lea
inc
call
enter
jle
pushf
pop
lcall
popf
mov
shl
ja
dec
xor
les
mov
adc
xchg
mov
fucomp
outsb
in
xchg
push
leave
xor
dec
push
mov
sub
adc
jle
jb
sbb
leave
mov
add
mov
inc
add
and
pop
or
sahf
nop
sub
inc
xorl
pop
mov
pusha
loopne
push
pusha
xor
sub
adc
sub
inc
scas
incb
pop
repz
aam
xchg
sbb
call
mov
sub
push
aaa
jecxz
shrl
inc
and
jne
imul
testl
negl
add
sbb
or
pushf
ret
and
jmp
lret
dec
aas
cmp
mov
es
arpl
dec
xchg
sbb
mov
bts
push
sarb
dec
lods
popa
lods
and
xor
pushf
jl
in
call
movsl
das
mov
push
je
call
cltd
movsl
push
pop
fldenv
inc
lods
and
repz
jecxz
sahf
mov
sarb
shlb
test
sub
dec
in
enter
jmp
ljmp
mov
mov
mov
pop
std
aad
lret
dec
sbb
lock
dec
sub
fimull
js
mov
add
dec
rcr
adc
lock
outsb
push
push
push
inc
mov
or
out
sub
mov
dec
insb
aaa
ret
jle
sub
fcmove
pop
mov
mov
stos
xchg
jns
pop
cmp
das
dec
sarl
lock
jl
imul
and
push
divl
out
pop
mov
test
xchg
push
jmp
popf
imul
pushf
jae
cmp
jmp
push
cli
movsl
cmp
stc
push
jno
stc
xor
fmulp
adc
xorb
dec
mov
cltd
xor
rolb
fs
in
dec
dec
cmc
mov
nop
ret
fs
sub
sub
out
jmp
pop
mov
outsl
push
sub
push
push
inc
icebp
push
shl
repz
cmp
jns
add
lret
data16
sti
ja
push
enter
fldz
pop
lods
gs
inc
jae
xor
inc
int3
pop
push
dec
xchg
aaa
hlt
mov
popf
fstps
outsl
mov
xor
pop
adcb
pushf
push
push
wbinvd
pop
push
js
pop
rclb
test
jge
push
xorl
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
mov
clc
movsb
mov
les
xchg
or
push
mov
rcrb
fisttpll
fsubrl
divl
mov
je
lcall
in
test
ljmp
shr
cs
scas
mov
jl
in
xor
into
fs
in
popf
outsb
aaa
rorl
cmpsb
or
sar
out
dec
fistl
jae
cmpsb
nop
loope
jb
gs
cmp
jl
ljmp
test
scas
mov
sti
int3
jbe
xchg
adcl
test
imul
jns
ljmp
setbe
out
push
dec
negb
sub
popf
jl
mov
rolb
lea
xor
repz
lahf
sub
bound
sbb
push
jecxz
pop
inc
push
sub
cmp
dec
ret
ret
ret
lock
fnsetpm(287
scas
mov
xchg
jecxz
sub
call
test
mov
jg
fdivl
and
nop
or
sbb
mov
jnp
out
je
nop
push
aas
imul
xor
stos
sub
dec
pop
push
cmp
xchg
cli
mov
cmc
mov
fmull
iret
mov
mov
dec
mov
int3
mov
orb
jae
lcall
ja
sub
dec
cmp
sub
cld
jp
mov
frstor
gs
sbb
inc
jb
or
scas
xchg
cmp
xchg
loope
jg
mov
lcall
les
negb
orb
and
enter
std
insb
dec
jnp
mov
movsb
mov
jnp
inc
nop
mov
add
xchg
sbb
jo
out
push
push
fs
adc
dec
mov
and
or
inc
dec
sbb
adc
inc
pop
cld
scas
ds
add
jg
pop
and
add
arpl
cli
flds
insw
cmc
nop
adc
out
cs
pushf
insb
mov
inc
inc
and
xlat
xlat
movsb
sub
sbb
rorl
shrb
push
stc
adc
cmc
mov
sub
jae
cltd
sub
lds
dec
mov
pop
clc
mov
rcrl
icebp
fisubs
xchg
xchg
dec
cmp
fcmovnb
addb
or
or
dec
rclb
shrl
jmp
mov
mov
ficomps
lahf
dec
repz
jmp
icebp
add
and
sbb
cld
dec
xchg
pop
and
push
outsl
jge
mov
pusha
add
iret
inc
mov
inc
inc
inc
mov
stos
in
icebp
push
jne
or
cs
mov
sti
mov
xor
loop
jmp
adc
xor
cmp
jecxz
fisttps
test
push
mov
mov
shrl
jbe
pop
mov
dec
lcall
or
jle
lcall
push
inc
enter
or
movsb
cmc
fsubrs
ljmp
add
or
xchg
jle
jg
sub
mov
sar
adc
pop
sub
add
sti
nop
arpl
mov
cmp
imul
mov
jp
mov
jbe
or
loopne
popa
and
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
cmp
push
xchg
mov
les
fdivrl
mov
lret
cwtl
or
add
and
notb
test
xchg
arpl
test
xchg
in
push
inc
repnz
jne
rorb
cmpb
aam
cmp
out
or
or
lods
sub
xlat
mov
add
add
inc
mov
loop
in
test
sbb
pop
xor
jno
push
arpl
or
andb
popa
into
testl
mov
push
sti
add
outsb
sub
inc
lds
shr
jecxz
xor
insl
mov
and
xchg
add
dec
sbb
std
cwtl
jbe
orl
xor
jo
test
mov
outsb
mov
imul
sub
iret
dec
or
mul
mov
stos
pusha
outsb
divb
imul
outsb
shlb
dec
inc
dec
sbb
addr16
add
les
stos
jl
lcall
mov
fsubrp
sub
ret
mov
cmpsl
leave
push
xchg
icebp
pop
fcomp
cmp
shrb
xchg
mov
cwtl
lock
jb
or
inc
cs
je
mov
cli
lahf
outsb
or
pop
fnstenv
adc
sub
ljmp
stc
pop
push
or
aaa
lock
icebp
sbb
pop
jmp
jnp
cmp
sbb
test
fdivl
dec
mov
shlb
xchg
or
cmp
dec
sbb
pop
xor
call
or
hlt
and
xor
rcl
mov
mov
ret
pusha
and
xor
add
inc
data16
inc
mov
dec
loop
xchg
jne
add
mov
pushf
lods
aas
add
fwait
adc
fs
fcomi
jbe
or
stc
mov
push
cmp
rcrl
fisttps
mov
push
push
and
movsbl
lcall
int
inc
ja
mov
sub
das
sub
xor
aas
jge
sub
and
xchg
or
cmp
lock
outsb
xchg
fbld
pop
pop
adc
xchg
sbb
mov
jo
pop
mov
sub
popf
out
jnp
push
cmp
jmp
cmp
cmpsb
pop
fbld
xchg
and
test
mov
loopne
pop
lret
dec
add
mov
xor
add
scas
stos
or
iret
push
cmc
xor
divb
nop
aas
jbe
mov
mov
push
ret
cmp
sub
je
outsl
out
cs
mov
lcall
xchg
cwtl
neg
clc
gs
clc
mov
mov
daa
mov
jg
pop
nop
sti
sub
jge
cmp
loope
or
int
mov
jno
inc
cmp
or
xchg
jne
in
mov
pop
loop
xchg
inc
shl
test
shr
test
loope
hlt
jno
push
jne
pop
mov
ret
sbb
ret
dec
xorl
insl
sti
leave
nop
push
xchg
push
mov
mov
insl
mov
jmp
shrb
addr16
mov
sbb
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
dec
mov
mov
pop
xor
ret
in
leave
xchg
pop
xor
lods
insb
leave
adc
push
inc
inc
mov
and
nop
dec
orb
rol
mov
cli
out
xchg
iret
and
fldpi
aam
mov
and
jmp
jmp
loopne
xor
fsub
cli
pop
negl
aam
pop
in
add
sbb
imul
push
jmp
ds
je
pop
mov
pop
push
or
lock
mov
push
cli
rcrl
xchg
notl
xchg
mov
xchg
lods
mov
stos
test
pop
out
daa
cmp
fidivrs
repnz
lods
icebp
repz
or
adcb
repnz
xchg
addr16
jo
push
nop
xor
repz
sub
jp
xor
insb
ret
pop
sbb
inc
cmp
aad
xlat
xchg
pop
pop
repnz
int
push
rol
in
dec
or
fnstenv
daa
pusha
pop
andl
sbb
rcrl
xchg
ss
xor
mov
and
sbb
inc
or
cli
push
out
push
jb
shlb
gs
out
add
popf
outsl
add
and
add
push
in
or
push
mov
outsl
sbb
inc
dec
mov
jns
jg
inc
in
push
out
cmpsl
dec
dec
xchg
insb
xchg
push
sub
pop
xchg
mov
or
inc
sbb
sbb
pusha
and
movsb
push
nop
sub
inc
popa
jns
stc
aaa
in
jg
pop
outsl
scas
adc
and
out
dec
sub
leave
gs
xchg
or
inc
mov
add
movsb
into
push
loopne
sub
mov
inc
mov
lret
or
jb
ret
sub
scas
lea
cmp
xchg
loopne
bound
aas
fcmovnbe
dec
push
mov
jnp
sub
aas
stos
sbb
cmpsb
mov
push
popf
daa
daa
pop
rclb
outsb
shlb
scas
pop
mov
mov
lea
ja
out
xor
imul
out
int
movsb
mov
add
cmpsb
in
cld
daa
sbb
push
ds
subl
imul
aaa
inc
sahf
adc
dec
daa
pop
xchg
mov
int3
xorl
out
xchg
add
das
cltd
loope
jmp
or
nop
pavgb
cmp
flds
inc
lret
scas
xor
daa
dec
cli
leave
or
push
rep
ss
sbb
out
jb
and
pop
rdtsc
clc
popf
dec
jp
test
lock
jno
mov
xchg
movsl
mov
xchg
aad
push
out
push
add
xlat
cwtl
cmc
popa
fwait
in
xchg
jmp
fisttps
push
sarl
insb
mov
mov
lock
fabs
pusha
outsb
scas
add
dec
adc
cld
repz
loope
in
sbb
in
add
int3
or
aaa
sbb
xchg
popa
pop
push
sub
pop
xor
dec
push
jae
icebp
fbld
repnz
or
out
mov
mov
or
xlat
or
iret
pop
ljmp
sbb
mov
ljmp
in
sub
xor
jae
pusha
insl
les
ljmp
sub
outsb
xchg
sub
repz
mov
mov
mov
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
dec
and
xchg
mov
les
fcompl
mov
repnz
ds
leave
daa
push
and
jmp
arpl
sahf
mov
xor
lock
jg
gs
lret
xor
lea
lea
cmp
icebp
pop
xor
inc
xchg
or
fld
imul
cld
in
pop
push
jnp
push
movsl
adc
fwait
sahf
out
ja
inc
jle
test
inc
add
mov
adc
pushf
hlt
cmpl
scas
mov
movsl
mov
les
iret
pop
dec
dec
sub
test
mov
lods
cmc
or
jns
in
jle
mov
in
incb
mov
roll
sub
cmp
in
nop
sbb
mov
repnz
fs
dec
push
pop
dec
lcall
push
arpl
sbb
in
outsb
je
mov
incb
and
aam
test
loopne
sub
inc
aam
xchg
psubw
icebp
int
add
push
add
fisttpl
fiadds
insl
fimull
loope
fmull
std
mov
movsb
mov
sub
jl
cmp
popl
sbb
sub
cmp
xlat
nop
push
mov
arpl
out
call
test
subl
dec
jl
in
scas
loopne
sbb
in
mov
or
js
dec
xor
stc
data16
inc
ss
pop
xor
lds
bound
dec
fwait
push
add
sarb
mov
ss
fildll
pop
inc
arpl
push
inc
pushf
dec
mov
push
push
enter
in
pop
movsb
push
add
shl
fcoml
lds
loopne
gs
and
and
call
scas
xchg
add
scas
jns
lods
pop
pop
xchg
test
enter
pop
or
pop
mov
mov
sbb
aad
cmpsl
movsb
push
scas
xlat
pop
fnstsw
in
mov
imul
pop
enter
push
stos
scas
scas
iret
mov
lds
xor
sbb
sub
loopne
sub
xor
arpl
out
test
mov
and
sti
enter
mov
or
add
xor
outsl
sbb
push
mov
cmp
lret
cld
out
fstpl
push
icebp
jge
stc
sbb
xlat
jmp
je
rcl
sahf
dec
push
push
add
shlb
lds
popf
sbb
sti
pusha
jecxz
lods
int3
out
loop
cs
mov
xor
or
lds
dec
ret
shl
addr16
inc
pop
xor
aaa
daa
dec
cmp
pushf
frstor
in
add
test
pushf
xchg
test
push
scas
lahf
push
push
fwait
les
in
xor
xchg
das
xchg
out
or
inc
inc
add
xlat
push
iret
into
pusha
test
push
lret
mov
lcall
push
and
aas
out
and
test
outsb
or
test
loopne
int3
adcb
pop
loop
xor
xor
sti
pop
xchg
pop
mov
xchg
and
and
inc
out
xor
or
mov
dec
not
jmp
int
mov
sbb
mov
sarl
dec
xchg
mov
les
fcmovb
xchg
mov
mov
mov
lahf
out
fsubrs
or
addr16
jg
out
ffreep
sbb
sub
je
or
mov
lods
lcall
jg
mov
pop
sti
scas
arpl
leave
cmpsb
ret
jl
rcr
add
nop
xor
push
in
xorl
lcall
fisttpl
sbb
enter
stc
xchg
cmpsb
pop
push
insb
pop
fcmovnbe
jae
push
aas
sub
addr16
enter
push
add
mov
adc
dec
cmp
push
mov
or
into
push
mov
icebp
mov
nop
cmpsb
bound
les
orb
shrb
cltd
xchg
jno
lret
dec
sbb
mov
aas
outsl
loopne
push
pop
mov
aad
inc
xor
lahf
lahf
rcrb
enter
cmpsl
cwtl
shlb
or
add
stos
jo
mov
push
loopne
push
imul
and
aaa
scas
pop
adc
das
pop
push
adc
ja
pop
xchg
adc
cmp
jbe
cmp
test
dec
ja
pushf
pusha
sbb
mov
fs
inc
or
rcrb
jb
fs
mov
mov
fists
cwtl
ljmp
popf
and
adc
cmp
jno
stc
paddb
shl
adc
pop
pop
mov
cmp
lret
aas
and
cmp
jno
icebp
pop
rsqrtps
mov
xchg
incb
scas
int3
push
dec
scas
div
movsl
cmp
adc
fimull
push
dec
pop
add
out
adc
sahf
rolb
fildl
or
push
jo
pop
call
inc
or
xor
loopne
rcr
jecxz
loope
in
jno
cs
cld
imul
test
pop
ret
ljmp
mov
insl
add
enter
gs
push
and
push
sbb
icebp
jo
inc
or
add
movb
xchg
and
daa
cli
inc
xchg
imul
push
out
out
call
cmpsl
mov
jl
into
repnz
fmull
and
and
outsl
jge
xchg
add
into
mov
dec
rol
daa
or
adc
sub
mov
in
call
pop
and
dec
call
daa
imul
aaa
or
in
jg
and
fadd
das
dec
xchg
hlt
aam
cmc
leave
mov
pop
subl
ja
xchg
dec
stos
arpl
mov
lea
mov
add
cmp
cmpsl
xchg
loope
scas
inc
push
sbb
scas
imul
lea
lea
push
jo
imull
in
out
sarl
mov
lahf
data16
popf
negb
pop
inc
mov
jo
aaa
lock
fdivrp
jmp
fmuls
test
cltd
mov
jbe
test
pusha
sahf
ficompl
repnz
popa
mov
adc
js
ret
mov
test
lcall
dec
jo
outsl
loop
or
testl
stc
add
mov
cwtl
sbb
adc
cmp
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
push
arpl
mov
lds
rorl
aam
cmp
fiadds
sbb
scas
sub
push
push
cmp
sub
sub
cmp
call
inc
jmp
mov
adc
xor
cli
xchg
mov
out
fiadds
inc
or
dec
adc
inc
gs
sbb
ficompl
movsb
xchg
bound
cmp
push
stc
dec
cli
xchg
pop
sub
test
cmp
sti
insl
lock
ds
adc
pop
adc
inc
repnz
movsl
je
lds
test
xchg
sbb
push
outsl
mov
pop
in
mov
push
or
js
in
push
push
loopne
mov
sbb
clc
mov
jbe
aas
out
negl
pop
sbb
sti
xor
jno
adc
mov
bt
fs
inc
mov
daa
prefetchnta
insb
pop
mov
inc
dec
dec
lods
outsb
mov
nop
push
daa
mov
pushf
fldcw
push
mov
test
shlb
test
cmpl
jbe
cmp
mov
mov
addl
lcall
insl
or
xor
xor
push
mov
mov
test
in
pop
or
xor
lods
xor
pop
test
pop
cmp
cmpsb
mov
jl
adc
gs
add
jmp
pop
clc
sub
sbb
lcall
dec
inc
mov
inc
aam
inc
jo
jge
mov
outsw
and
leave
test
pop
dec
addr16
xor
push
sar
ja
fsubp
fdivp
sbb
push
jg
mov
mov
ret
js
xor
in
push
inc
xchg
push
and
jo
call
push
test
loope
fs
cmp
add
xlat
shll
icebp
xor
sub
push
mov
les
shrl
add
mov
mov
popf
push
jp
std
gs
lahf
loopne
mov
jnp
jo
xchg
dec
icebp
mov
adc
lret
int3
test
push
cmp
lcall
fisttpll
mov
sub
push
jle
imul
adcb
adc
sub
cltd
mov
int
lahf
test
push
dec
lods
pop
daa
shll
pop
pushf
lret
insb
jmp
in
fnstcw
xchg
push
lret
and
xor
xchg
imul
inc
sub
xchg
inc
add
xchg
pop
dec
lods
aam
or
mov
std
sbb
pop
loopne
fcomi
fiaddl
arpl
push
mov
push
mov
scas
pop
or
movsb
adc
in
or
xchg
das
in
mov
gs
inc
pop
adc
jae
dec
leave
in
xor
jns
xor
fiaddl
inc
mov
sbb
lcall
fcomps
lret
mov
cmpsl
jne
fildl
xor
pop
and
dec
add
dec
or
jmp
inc
add
jl
mov
aam
pop
dec
stos
adc
pop
and
mov
mov
dec
mov
mov
lea
and
aas
and
or
dec
cli
xchg
addb
enter
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
fstl
sub
mov
mov
cmp
cmp
repz
pop
pusha
mov
dec
mov
ds
xor
xacquire
mov
mov
mov
aam
lahf
xchg
daa
insl
scas
lcall
inc
cmc
sarb
sbb
sbb
cmp
add
xchg
jo
movsl
xlat
mov
pop
pop
mov
enter
cwtl
ret
dec
std
inc
popf
mov
lods
insb
outsl
sub
out
js
rcr
pop
test
jmp
test
adc
out
cwtl
not
cmp
push
stc
loope
add
aaa
lea
fists
xor
notb
js
out
jg
mov
adc
jmp
mov
push
add
mov
cld
scas
popa
sbb
or
push
dec
shl
cmp
push
pop
mov
and
lret
sub
test
jmp
rcr
inc
dec
push
and
adc
inc
movsb
mov
pmulhw
shll
mov
enter
adc
xchg
aaa
out
jno
inc
lods
mov
mov
or
or
mov
call
stc
jge
into
std
push
ljmp
testb
dec
mov
adc
out
movsb
lcall
out
loope
into
jecxz
sti
sbb
mov
hlt
jnp
xchg
mov
lea
adc
push
daa
imul
sub
adc
mov
test
scas
mov
fcomps
xor
push
shl
jne
mov
bsr
xlat
xchg
sbb
pop
jne
lcall
gs
aam
sbb
outsl
ja
shr
rcrb
addr16
mov
dec
jne
jecxz
push
sti
or
xchg
icebp
xor
repnz
inc
pop
add
stc
scas
jo
or
mov
push
or
mov
call
roll
add
hlt
jp
fisttps
movsl
cmp
sahf
unpckhps
fucomi
lds
push
or
sub
rorb
sub
lret
cmpsb
addr16
out
aad
fwait
out
in
fs
sahf
push
and
xor
pop
mov
imul
je
lcall
adc
rorb
dec
jno
cmp
dec
stc
push
fdivr
loope
and
push
or
outsb
xor
fwait
mov
push
mov
push
scas
outsl
jecxz
rcrl
pop
adc
in
fstpl
nopl
mov
mov
ljmp
add
fnstcw
cmp
pop
decb
int3
push
pinsrw
int
push
leave
jmp
mov
jae
iret
sbb
pop
cmp
mov
mov
dec
pop
in
push
je
mov
jnp
cmp
lds
sahf
and
xor
cmp
lret
das
inc
xor
aas
ds
mov
cltd
sbb
stos
rorl
lods
rcrb
outsb
repz
xchg
cli
jae
add
test
cmp
pop
imul
adc
std
xchg
sti
fldt
inc
lret
mov
fdivrl
ljmp
mov
jnp
jnp
lock
mov
sub
ss
push
xor
pushf
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
sub
mov
mov
les
xchg
mov
testb
push
lcall
mov
cmp
dec
and
or
andb
mov
or
out
and
mov
sbb
incb
rorb
test
int3
enter
and
sub
pusha
add
ja
into
mov
add
and
inc
mov
hlt
inc
add
aam
pop
sbb
out
or
or
mov
and
inc
mul
or
bound
lods
dec
sahf
add
and
jns
out
int
out
mov
cmp
subl
gs
mov
xor
dec
cmp
mov
clc
leave
sub
aam
call
add
int
daa
scas
movsl
jge
jecxz
cli
flds
loopne
je
clc
out
push
leave
jle
jmp
sub
mov
and
xchg
inc
adc
jl
aam
mov
cmp
jp
shll
lods
cmc
dec
sbb
sti
cmc
mov
int3
sub
mov
sbb
sbb
push
xchg
test
inc
xor
cmc
push
xor
sub
pop
mov
push
xchg
sahf
out
xchg
inc
push
mov
das
xlat
sub
jl
in
idiv
pop
shlb
ljmp
push
mov
scas
ss
push
push
jne
sbb
pop
int3
xchg
fs
pop
insb
mov
fwait
xchg
dec
jl
lahf
and
dec
jo
mov
addr16
adc
cmpsb
sub
test
push
dec
mov
add
fs
cs
roll
loop
jmp
test
notb
test
pop
mov
pop
rcrl
and
outsl
lret
jecxz
mov
jns
out
mov
mov
sub
pushl
pop
shrl
or
jle
cmp
mov
cli
push
subl
sbb
imul
xchg
jmp
int
jno
inc
insl
je
push
leave
xor
inc
push
sub
mov
ret
jb
shlb
push
pop
mov
aas
sub
andl
jns
aad
jle
xchg
xor
or
add
sbb
mov
gs
pop
mov
imul
dec
fsubs
mov
imul
add
cmpsb
addr16
inc
xorb
es
scas
loop
lret
push
add
in
popa
lahf
sarl
xchg
mov
pop
das
add
sahf
daa
and
mov
sub
sbb
and
xorb
dec
push
mov
push
lock
ja
xchg
enter
jb
test
into
adc
pop
daa
hlt
or
sub
xchg
insb
pop
jmp
xorb
divl
xor
and
movsl
bound
ss
cmpl
movl
or
stos
sub
repnz
test
push
out
daa
leave
sub
sbb
jmp
jmp
test
lea
fwait
sub
movsl
cmp
sbb
mov
div
or
stc
pop
adc
jno
cld
fcoms
push
fwait
in
mov
push
add
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
push
sahf
mov
les
mov
adc
jmp
xchg
sbb
cmp
push
hlt
pusha
ret
cs
cmp
or
out
jg
std
pop
test
lea
inc
mov
inc
cmp
and
fwait
mov
ret
comiss
pop
mov
dec
mov
dec
les
pop
dec
out
adc
sub
mov
jbe
mov
dec
jle
adc
jae
xlat
mov
fidivs
xor
adc
pop
jae
add
add
push
paddd
push
sbb
xor
test
into
rcll
sbb
repz
mov
push
inc
mov
mov
out
sbbl
outsl
mov
mov
mov
arpl
push
mov
icebp
or
es
lcall
fs
sbb
in
xorps
js
mov
cmp
sbb
inc
cltd
in
xchg
sti
insb
mov
add
inc
rolb
mov
scas
test
inc
nop
push
int3
ja
pop
adc
xchg
aaa
cmc
cli
add
fisttps
lahf
daa
aad
outsb
sbb
mov
xor
mov
lret
imul
xor
sub
std
xchg
rcrb
fimuls
cmpsl
mov
inc
xor
adc
mov
or
call
test
jno
popa
dec
scas
pop
imul
and
mov
mov
shrb
scas
cld
lret
imul
cmpsl
push
jp
xchg
dec
sub
stos
lock
addr16
mov
mov
lahf
scas
test
mov
pushl
sbb
push
pop
jl
ja
jmp
pop
mov
sbb
popf
or
adc
imul
xchg
sbb
pushf
push
mov
dec
sub
lods
stc
mov
jmp
mov
aam
frstor
cmpsl
mov
fwait
adc
or
xchg
cmp
std
lods
dec
cmp
sar
aad
mov
xor
addb
out
ss
xchg
xchg
pop
mov
outsb
aad
flds
insb
add
lods
roll
dec
cmpsb
jecxz
jmp
out
xchg
mov
jmp
bnd
xor
es
jl
xchg
mov
xor
inc
or
outsb
sti
sub
icebp
cmp
sbb
mov
mov
pop
sub
dec
leave
movsl
jb,pn
sbb
das
enter
xor
arpl
aam
add
cld
insl
lret
ss
pop
or
je
call
ss
icebp
pop
rolb
sahf
sub
lret
cltd
shll
push
pop
sarl
adc
fcoms
testl
mulb
or
addr16
lds
inc
xchg
cld
je
lock
les
cmp
imul
cmp
adc
dec
xchg
fisubs
jo
adc
pop
shl
sar
mov
mov
div
xor
pop
int
pop
call
lods
fcompl
xchg
sbb
mov
inc
jp
adc
out
push
sub
dec
mov
cmp
fcompl
les
jge
adc
arpl
nop
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
sbb
mov
mov
mov
and
xchg
mov
push
lods
sbb
repz
mov
scas
add
pop
lods
mov
shrb
les
nop
xchg
data16
aam
cmp
mov
mov
sbb
int
addl
outsl
lods
std
scas
int3
inc
cmp
repnz
out
sbbl
inc
out
testb
jmp
pop
shlb
int3
and
adc
mov
pop
mov
pop
or
addr16
or
push
int
int
gs
pop
iret
jb
or
jbe
mov
xchg
arpl
or
loope
and
outsl
shr
mov
jne
ret
imul
fcmovnbe
xchg
pop
dec
jg
sub
nop
in
cmp
mov
mov
mov
xchg
imul
arpl
inc
loop
leave
movsb
fstp
or
sub
icebp
push
mov
dec
and
jmp
and
or
sub
push
orl
dec
push
mov
lock
mov
dec
xlat
inc
or
insb
les
and
adc
push
xchg
cmc
pop
push
or
scas
jle
imulb
mov
inc
push
push
lahf
cmp
out
mov
test
iret
pop
in
mov
xchg
cmp
cld
jmp
data16
add
push
push
loopne
jo
iret
popl
mov
mov
mov
cld
add
fildll
fistps
xchg
mov
imul
jnp
mov
sub
pop
or
sub
sbb
repnz
test
inc
push
pop
xor
sub
mov
xchg
cmc
scas
jl
sbb
adc
jle
loopne
fcomps
xor
es
notb
dec
in
jmp
cmp
or
rol
dec
ljmp
mov
into
xor
call
movsb
jnp
mov
cs
inc
adc
rep
mov
in
loop
jo
jno
inc
rclb
push
or
xor
mov
add
mov
pusha
jns
add
and
bound
or
lret
push
xor
mov
sub
adc
js
stos
mov
filds
cmp
dec
mov
pushf
or
lds
test
gs
push
jne
xchg
mov
es
loope
syscall
or
rcrl
jbe
xchg
or
orl
mov
ds
dec
andl
mov
dec
mov
ss
icebp
pop
add
and
adc
jns
add
sarb
cmc
push
jb
ret
or
push
fs
cmpsb
xor
out
insl
mov
pop
push
mov
mov
ss
cmp
ja
mov
in
mov
movsb
dec
xor
and
test
clc
push
stc
fcom
ds
add
pusha
mov
xchg
ret
test
or
or
xor
test
adc
loop
and
push
push
push
cmpsl
push
mov
mov
inc
sbb
lret
mov
stos
pop
scas
dec
fwait
aam
scas
inc
dec
pop
mov
dec
xorb
adc
mov
lret
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
ja
imul
xlat
cmc
insl
adc
inc
bnd
sbb
movsb
cmpsb
pusha
jo
loop
repnz
movsl
mov
stc
pop
inc
lods
lock
test
ficoml
xchg
mov
add
pop
mov
xor
and
sbb
dec
dec
scas
test
lret
gs
pop
xor
xor
lock
mov
jnp
outsl
jp
cmp
ljmp
mov
in
adc
pop
scas
or
sarl
sbb
testb
dec
shll
in
enter
and
or
ret
or
mov
arpl
push
jl
out
fistpll
lock
mov
icebp
fidivs
jmp
std
xchg
xor
cmpsl
mov
mov
cld
pop
test
es
dec
rol
insb
xor
cli
xlat
movsl
xchg
pop
movsl
pop
ret
icebp
sbb
icebp
pop
mov
inc
in
test
ficompl
fiaddl
xor
xor
dec
je,pn
push
inc
movl
arpl
push
or
popa
push
or
sbb
push
movsb
cld
cmp
addr16
sahf
xchg
loop
popa
sub
out
addl
dec
adc
adc
mov
jg
and
aaa
es
fstpt
pop
mov
mov
sbb
or
cmpsb
jmp
mov
cs
js
push
cmp
icebp
xchg
dec
ja
sub
sbb
pushf
pop
add
pop
pusha
fcoml
jne
inc
xor
mov
insl
sub
xchg
repz
xchg
dec
jle
jns
push
bound
loop
jb
out
out
scas
mov
lahf
sbb
adc
sti
mov
lock
mov
adc
sub
mov
enter
or
int3
scas
psrad
jbe
xchg
repz
mov
mov
fmuls
cmpsl
data16
dec
jne
or
pop
sbb
sub
mov
and
pop
pop
movsb
imul
inc
push
not
push
sub
std
adc
mov
adc
jl
mov
cmp
std
pop
mov
rorl
movsl
and
add
stos
inc
hlt
outsl
cwtl
rcrb
dec
rcrb
sub
insb
or
pop
ret
xor
popf
ljmp
test
push
jb
mov
mov
outsb
scas
or
mov
pop
xchg
ret
or
adc
mov
mov
cmp
mov
cmp
dec
ja
aad
out
out
push
daa
pop
bound
fs
mov
sbb
mov
testl
nop
inc
push
pop
dec
ret
add
pusha
xchg
or
jmp
inc
insb
xchg
and
popf
bound
cmp
jo,pt
push
push
jmp
pushf
adc
sub
xor
and
popfw
inc
jbe
ss
mov
cs
sub
cwtl
xchg
daa
aad
loopne
mov
pop
sbb
es
loopne
lcall
xor
inc
cmpsl
push
decb
out
lods
jne
sbb
stc
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fucomp
ja
sarl
les
fisttpl
cmp
pushf
xor
lods
stos
jle
loope
add
arpl
insb
js
cli
pop
jge
sub
loopne
in
dec
aaa
arpl
dec
pop
loope
lds
add
mov
test
and
int3
push
push
inc
call
xchg
cmp
cmp
cmpsl
pop
inc
je
lock
or
mov
negb
std
pop
push
push
imul
adc
sti
int3
pop
sbb
push
mov
pushl
pop
je
clc
jmp
or
pop
pushf
fstps
sbb
jno
jbe
inc
ss
sbb
inc
cltd
inc
insb
xchg
pop
xchg
ret
adc
inc
inc
std
stos
push
fidivrl
stos
int3
xlat
cmc
jb
adc
add
scas
or
xchg
or
je
pop
mov
ret
test
jmp
stos
push
push
adc
gs
sub
popa
push
pop
in
mov
fldenv
pop
data16
lret
sub
or
inc
mov
inc
stos
jae
data16
or
dec
adc
idiv
dec
dec
mov
inc
mull
or
popf
push
loop
enter
out
gs
popa
jnp
lods
insb
lahf
push
inc
jo
jbe
icebp
and
inc
pop
adc
xor
mov
push
mov
mov
aaa
inc
mov
lds
dec
stos
sub
push
pop
fisubl
mov
rolb
xlat
imul
cmpsb
sub
cmpl
lods
or
mov
popa
or
sbb
movsl
xor
outsl
shrl
cmpsl
jbe
out
or
mov
or
xchg
shlb
inc
or
cmpsl
enter
push
mov
push
int3
adc
stc
inc
add
mov
cmpsl
and
out
jo
repz
imul
les
mov
je
and
inc
mov
adc
push
jae
and
call
cmpsb
xchg
clc
sahf
mov
cli
aaa
mov
test
test
test
xorl
aaa
iret
inc
inc
call
sti
cmp
xchg
into
xchg
xor
xchg
bound
and
scas
jge
xchg
inc
or
test
aaa
scas
leave
iret
movsb
dec
stos
sahf
lods
push
fiaddl
push
mov
lret
mov
fcomps
inc
sti
xchg
mov
rorl
pop
mov
push
fstl
sub
mov
and
add
xchg
lods
ss
pushf
iret
mov
jns
lret
xchg
jno
outsb
fidivrs
dec
adc
jmp
insl
xchg
jne
push
out
test
push
fnsave
mov
and
adc
add
cmp
adc
sbb
jne
in
jnp
testb
shlb
mov
mov
sub
dec
xor
sub
bound
lea
jnp
mov
repnz
nop
inc
xchg
jae
ficoms
shrb
push
test
fimull
dec
in
call
in
mov
test
in
cmp
gs
cmpsl
push
inc
cmpsl
inc
js
xor
mov
aam
jmp
ds
test
shll
fnstsw
movsb
jmp
test
mov
adc
test
xchg
or
faddl
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fisttpll
push
mov
mov
inc
std
or
inc
push
cmp
nop
sbb
popf
cmp
xchg
shlb
push
notl
add
or
adc
out
test
clc
filds
jne
fldcw
push
lea
sub
loope
mov
mov
xchg
push
mov
loop
or
pop
jno
lea
mov
cmp
and
popa
pop
int3
ss
mov
sahf
pop
outsl
out
or
or
imul
mov
sbb
hlt
add
fdivr
pushw
shll
mov
push
movsl
dec
jl
lock
sarb
sub
adc
push
js
pop
add
imul
cmp
jp
xchg
fwait
loopne
push
push
mov
push
imul
mov
aad
cwtl
sub
inc
sub
test
cmp
lock
fwait
repnz
xorb
enter
adc
mov
jmp
inc
outsl
fwait
push
sbb
dec
or
add
ljmp
lods
mov
push
pushf
jns
pop
inc
aas
sub
cmp
std
out
dec
adc
lahf
mov
fsubl
and
jg
push
enter
fs
ljmp
jg
fiaddl
mov
and
jns
mov
cmp
xlat
push
popf
xchg
out
test
cmpsl
icebp
cmpsl
repz
filds
jp
mov
mov
in
xor
mul
pop
into
stos
cwtl
es
mov
cmp
stos
cs
push
and
pusha
jg
or
inc
ret
adc
add
sbb
xor
daa
xor
sbb
mov
nop
ror
mov
dec
sub
mov
movsb
jne
push
std
out
and
fisttpll
mov
push
xchg
mov
xor
cmpsb
add
mov
in
scas
cmc
push
mov
push
into
add
push
cmp
ljmp
aaa
andb
push
imul
lea
mov
and
pop
clc
cmc
daa
loopne
mov
incb
sbb
adc
cltd
adc
aad
mov
sbb
jbe
fs
mov
hlt
out
xchg
test
test
mov
mov
pop
or
adc
jb
inc
xor
js
int3
pop
and
jbe
mov
mov
add
sbb
cmpsb
and
push
xchg
sub
xchg
hlt
lret
aam
mov
ja
sbbl
inc
xchg
nop
int3
andl
mov
lret
xlat
hlt
or
rorl
shlb
lret
push
out
mov
or
decl
mov
add
cli
cmpsl
loopne
es
mov
adc
pop
out
push
sbb
jge
int3
loopne
push
push
out
inc
arpl
bound
xor
xchg
cmp
push
mov
pop
add
das
out
or
loopne
out
fisubrs
pusha
cvtps2pd
cmc
inc
dec
add
bndldx
mov
outsl
les
repz
inc
dec
mov
popa
or
enter
pop
mov
sub
sbb
in
cld
clc
ljmp
add
inc
jno
lds
cmp
or
add
lods
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
mov
pop
mov
mov
lock
ja
es
in
aad
subl
enter
and
repnz
lods
cli
popf
stos
rorb
sbb
pop
notl
ret
add
movsb
cmpsb
fld
push
and
push
test
sti
add
sbb
mov
and
lods
movsb
stos
sbb
std
lcall
arpl
pop
push
cli
or
or
jno
lcall
das
out
iret
sbb
mov
adc
sub
outsb
and
jl
lock
dec
inc
sbb
add
stos
call
mov
mov
lret
sub
fsubrs
push
insb
fildl
mov
leave
adc
lret
pop
sub
sbb
repz
jg
fwait
pop
aaa
or
imul
and
lret
jle
cmc
mov
clc
sbb
dec
in
jmp
adc
fisubl
dec
mov
aas
call
mov
lret
cli
mov
lahf
shll
dec
xchg
ja
xor
jecxz
mov
into
ss
divl
xor
sar
sub
push
test
cmp
not
out
ja
jne
lret
pop
pop
bound
rclb
push
or
push
fisubs
cmp
fsub
fwait
dec
lods
addr16
in
out
jae
fs
sub
ss
push
xchg
jae
fwait
jne
jne
mov
arpl
dec
xchg
mov
adc
je
mov
movsb
jae
insb
push
pop
sbb
xchg
pop
xchg
mov
sbb
outsb
push
aad
push
out
shlb
xor
mov
data16
pop
shl
outsl
inc
rolb
push
shrb
in
xchg
pop
shll
ja
add
out
sbbl
arpl
jb
sbb
cmp
xchg
shl
mov
adc
inc
push
adc
test
xchg
push
sbb
ljmp
sahf
cwtl
popa
cmp
lods
add
fsubrs
in
mov
jp
mov
push
stos
push
into
adc
pop
std
leave
aaa
xor
into
andl
mov
into
jns
pushf
lods
frstor
xchg
cmp
lahf
scas
push
das
test
mov
in
rorb
sub
ficoml
arpl
lock
loop
shrl
in
fdivl
xchg
push
addr16
bound
lods
lahf
cmp
daa
mov
imul
fsubrl
repz
ror
mov
push
nop
inc
rorl
aad
fsts
xor
dec
mov
loopne
inc
out
sbb
gs
xor
subl
out
pop
in
imul
dec
dec
imul
push
cmp
repz
shl
or
scas
inc
jne
sbb
and
mov
or
fdivrs
dec
pop
push
xchg
lahf
fcoms
stc
mov
ja
aad
es
pop
mov
jmp
rcll
jne
repnz
pop
lock
sub
je
add
add
and
das
es
lret
pop
xlat
fsubs
jnp
cmpsb
or
dec
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
push
hlt
iret
mov
les
ret
xchg
adc
dec
jmp
dec
lcall
mov
ret
mov
push
insb
pop
dec
out
add
out
das
clc
cwtl
mov
and
les
xchg
loop
xor
inc
scas
mov
movsb
loop
out
lea
pop
jg
sub
pop
loope
imul
in
cmp
push
into
cmp
in
loopne
pop
fucomi
gs
fsubr
mull
dec
aam
mov
in
push
push
add
aam
mov
test
inc
sub
lahf
out
cmc
xor
xlat
pop
std
setl
or
pop
pop
mov
xorl
mov
jge
add
push
frstpm(287
fldcw
jne
shl
add
icebp
data16
inc
rorb
outsl
and
in
mov
imul
mov
mov
mull
stos
mov
mov
push
lret
sahf
imul
push
push
test
dec
out
cmp
mov
pop
push
xlat
inc
jne
aam
sbb
pushf
das
cmp
rorl
fwait
and
add
mov
mov
lcall
adc
cmpsl
inc
std
call
sbb
push
cmpsb
jp
ret
jno
mov
push
pop
idiv
fdiv
dec
rorb
cmc
inc
or
mov
xor
mov
es
pusha
dec
fsubrl
test
cmpsl
in
inc
mov
jne
aas
push
xor
mov
adc
popa
and
dec
lret
arpl
push
icebp
lock
cmp
das
xor
sahf
mov
and
lcall
sarl
in
dec
cmpsb
fwait
push
hlt
repnz
cwtl
sub
scas
jge
lret
ja
aaa
pop
cmp
jne
xchg
mov
sarb
test
or
inc
mov
xchg
jecxz
add
push
js
inc
pop
push
repz
and
imul
or
mov
cmc
dec
and
xor
popf
mov
dec
andb
dec
inc
xor
xchg
lahf
adc
add
push
sbb
cs
mov
pop
insl
mov
lahf
mov
push
test
pop
inc
aas
inc
ja
push
les
dec
sub
fisubrs
in
iret
dec
push
inc
movsl
div
cmpl
test
sti
fdiv
and
sbb
bound
sbb
mov
addr16
std
loop
mov
in
push
lods
js
sbb
mov
das
mov
cs
push
cmp
jo
ss
mov
int
mov
enter
mov
mov
pop
cmp
test
je
push
xchg
fwait
dec
es
cmpsl
mov
daa
mov
push
sahf
fstps
mov
sti
add
ljmp
jl
push
subl
mov
fidivs
mov
cwtl
jnp
cld
aas
push
sub
iret
add
push
push
movsb
in
outsl
es
int3
and
es
adc
sub
ds
mov
add
adc
cld
flds
or
mov
push
sub
shl
xchg
mov
adc
dec
in
sahf
sub
jne
bound
bswap
in
mov
jne
and
ret
fsubs
inc
add
loope
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
or
imul
sbb
mov
inc
mov
lock
xchg
fmull
or
imul
stc
in
unpcklps
imul
dec
shl
hlt
pop
cmpsl
dec
stc
adc
mov
add
je
movhps
mov
dec
das
jno
jbe
in
int
jae
lds
push
push
add
bnd
ja
or
push
push
sbb
rcrb
repz
cmpsl
addr16
pop
lock
cmp
lods
jmp
stc
dec
rcrl
cmc
les
out
mov
pop
adc
pop
push
mov
xchg
fisttpll
out
cmp
jmp
xchg
and
test
xchg
in
sub
outsb
pop
fwait
add
xor
test
lea
jmp
mov
in
sbb
loopne
ja
mov
mov
aad
pushf
bound
xchg
jno
outsl
repnz
call
fldt
mov
aad
sbb
dec
xor
dec
pop
int3
xor
cltd
fcompl
mov
test
jnp
push
dec
outsb
add
outsl
xor
icebp
stos
xchg
sub
insl
cmp
fsubs
inc
push
and
inc
or
out
push
sub
mov
cltd
or
mov
jmp
xchg
clc
cmpsl
test
js
push
adc
or
cmp
lods
fldt
test
cld
sbb
cltd
push
adc
push
sbb
xor
mov
xchg
push
loope
xor
add
dec
repnz
and
sbb
xchg
adc
shll
and
in
dec
sub
push
dec
xchg
rclb
mov
or
out
cmp
ds
cltd
test
clc
pop
add
dec
fadds
xor
sti
mov
movsl
or
xor
adc
clc
out
popa
mull
xor
imul
je
pop
les
mov
jmp
sbb
adc
je
sbb
or
insl
add
in
jg
jg
adc
jg
mov
mov
out
mov
mov
mulps
ss
mov
test
mov
pop
inc
cmpsl
scas
es
popa
mov
mov
pop
ss
repz
push
mov
ss
cmp
cld
rclb
sub
add
popf
cwtl
and
mov
push
xor
mov
mov
jne
mov
insb
adc
sbbb
in
xchg
inc
cmp
xchg
subb
jle
dec
mov
jle
mov
ljmp
sbb
das
daa
lahf
push
jo
jp
cmp
pop
xchg
xchg
push
inc
mov
inc
icebp
lcall
xchg
cmp
sub
idivb
push
pop
sub
mov
cmp
mov
sbb
mov
ret
adc
mov
cmp
sbb
stc
pop
lock
sbb
add
test
sub
adc
fnsave
in
test
xor
mov
mov
push
mov
adc
xchg
cmp
insl
jne
out
xchg
ljmp
xor
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
stc
stc
fnstsw
les
mov
dec
ret
mov
xchg
push
xor
sbb
stc
cli
in
rclb
subl
aam
lahf
jmp
stos
pop
jp
inc
jnp
ja
and
jne
out
adc
icebp
iret
test
sub
inc
jge
and
xchg
xrelease
xor
pop
add
xchg
pop
or
loope
repz
rclb
mov
mov
mov
lahf
cmp
inc
mov
mov
mov
xchg
mov
imul
int
sub
or
add
adc
mov
arpl
sub
dec
outsb
jecxz
loopne
cmp
mov
insb
jp
sarb
adc
jg
pop
cltd
push
and
pusha
sarb
mov
mulb
or
ljmp
movsb
cld
sub
test
mov
sub
sub
xchg
lock
lods
lods
pusha
out
fmull
fstl
fs
mov
lea
mov
and
inc
dec
xor
jge
out
jecxz
cli
push
sub
out
loopne
xor
out
es
add
cmp
imull
cli
dec
xor
or
xchg
mov
inc
jge
adc
sbb
incl
push
cmp
or
xchg
notb
arpl
movsl
or
shl
mov
cmpsb
push
cmp
push
inc
aad
pop
push
scas
adc
inc
mov
cmp
or
jp
fcompl
clc
push
push
push
scas
or
cmc
mov
cmp
jmp
ss
movsb
rep
mov
inc
test
in
in
shl
repnz
cmp
mov
imul
push
and
and
shrl
inc
out
push
sbb
cmp
push
sub
cmp
ficoms
js
jne
or
mov
xchg
inc
andb
addl
imul
test
sbbl
imul
loopne
sbb
ss
es
in
jecxz
enter
xchg
jl
pop
xchg
mov
rcl
lea
jbe
add
inc
pop
in
adc
ds
rcrl
jmp
rorl
xor
popf
lret
jae
rcll
lea
mov
les
mov
dec
cmpsb
dec
jl
xor
idiv
stc
xabort
negl
stos
sti
loopne
xchg
xchg
lret
stos
int3
pop
ss
cmpsl
popf
push
pop
cld
shrb
vcvtpd2psy
sub
dec
js
cs
and
stos
push
aaa
mov
xchg
mov
test
insl
cs
adc
data16
push
mov
fwait
call
mov
pop
cmp
pop
add
pop
jnp
and
mov
loop
das
xchg
sub
or
xor
push
leave
sbb
sub
pop
repz
mov
and
outsb
pop
inc
pop
pop
popa
inc
loopne
mov
mov
fbld
xlat
aad
or
cwtl
jge
or
loopne
fidivrl
pop
popa
ret
push
mov
inc
aam
rorb
test
add
add
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
dec
cmpsb
mov
mov
ret
push
pop
cwtl
shll
dec
adc
mov
xor
sub
out
cltd
add
ret
clc
adc
fistl
or
mov
sub
enter
lock
jecxz
dec
js
test
std
or
and
fstl
xchg
out
mov
mov
inc
inc
adc
mov
aaa
daa
fistpl
xchg
lret
lds
call
into
sbb
js
inc
push
scas
pusha
sbb
scas
push
sub
nop
nop
adc
xor
pop
cltd
jmp
sub
pop
mov
xor
mov
xchg
lods
mov
pop
lods
pop
mov
lcall
pop
lock
sbb
int3
imul
mov
pop
pop
cmp
imulb
mov
int
lds
insl
ja
jnp
adc
popa
mov
adc
or
out
fdivrl
outsb
push
lret
push
sub
ljmp
mov
adc
or
push
sub
hlt
nop
pushf
jg
push
jg
pop
or
inc
xchg
cmp
mov
or
aaa
fucomp
sahf
mov
mov
dec
push
inc
scas
in
rcrb
push
xchg
nop
xor
xchg
and
dec
jbe
xor
clc
dec
pop
jmp
aaa
ss
repnz
outsl
outsl
and
cmpb
ficomps
out
xchg
in
mov
cmp
sbb
lret
je
negl
incb
outsb
xchg
divl
push
inc
andb
cmpsl
cmp
std
fucomi
xor
stos
push
sub
push
or
jb
push
pop
mov
cmovno
adcl
lods
and
pop
cmc
int
mov
pop
and
mov
jecxz
ljmp
negb
inc
mov
int
jne
inc
pusha
enter
adc
push
loop
cmpsb
cmp
xchg
in
sbb
xor
idivb
out
imul
cltd
adc
jb
jne
mov
jmp
mov
movsb
sbb
icebp
lret
jne
shrb
mov
xor
or
data16
mov
mov
and
adc
sbb
call
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
dec
mov
sahf
jp
mov
mov
outsl
jl
scas
adcb
push
movsl
mov
addr16
jge
pusha
shlb
cs
sub
lahf
pusha
inc
int
mov
inc
repz
imul
out
sub
addl
xchg
xchg
insb
pop
cmp
ss
jnp
outsl
dec
out
xchg
mov
dec
cwtd
sub
push
in
xorb
sbb
cmp
fidivrl
jne
int3
dec
out
and
call
les
cmp
shrl
jge
xor
test
cmp
or
push
and
cltd
hlt
stos
in
add
arpl
inc
fmuls
mov
addr16
push
out
cmp
xchg
sbb
arpl
cs
je
sbb
lods
lea
int
pop
inc
call
fsts
xor
mov
and
cld
mov
jb
outsb
jnp
sub
jae
push
mov
outsb
sbb
and
stc
std
and
sub
xor
mov
xor
ret
int
int3
movd
mov
icebp
mov
adc
f2xm1
test
mov
fcom
into
lds
pop
in
test
mov
xchg
out
mov
xor
pop
and
fcom
test
add
jo
pop
push
mov
inc
adc
jb
in
cmp
and
scas
add
imul
push
inc
mov
aam
mov
xchg
xchg
les
push
stos
xchg
cwtl
out
scas
stc
mov
popf
addr16
or
pop
push
push
test
mov
aad
shrb
out
pop
mov
jp
pop
je
fnstenv
pop
jns
dec
lods
scas
inc
mov
mov
jle
mov
lret
inc
xchg
add
fldcw
pusha
sti
xchg
ja
repnz
subl
cwtl
outsb
aad
cmpsl
movsl
nop
jo
loop
xor
icebp
mov
or
pop
sahf
popa
ret
sub
out
adcl
mov
repnz
cmpsb
in
add
mov
fucom
loope
iret
sub
cmpsb
jl
jle
aaa
xor
inc
shlb
jns
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
jo
fnsave
ret
dec
fisttpll
xlat
mov
outsl
add
xchg
pop
out
popa
dec
faddl
incl
sbb
lcall
push
sbb
xchg
mov
xchg
cmp
sbb
push
push
enter
shll
cmp
pop
mov
fistps
loop
fists
cmp
push
repz
fidivrs
insb
and
xchg
dec
dec
sarl
test
sub
and
cli
or
cwtl
cli
jmp
xor
cld
jecxz
sub
lds
cmc
bound
jp
inc
loopne
adc
cmpsb
adc
xchg
out
lahf
shrl
cli
cmp
pop
jle
fbld
cmp
adc
mov
enter
cs
push
or
cmpb
or
mov
shrl
call
push
loope
mov
test
leave
push
fidivs
inc
jno
fsubrl
mov
inc
jns
xchg
pop
jne
ja
sbb
xlat
stos
sub
out
insb
cmp
xchg
mov
or
xchg
repz
pushf
xor
mov
mov
sub
push
movsl
mov
xchg
pop
movsb
cmc
adc
jecxz
pop
out
mov
dec
pushf
xchg
scas
sti
dec
mov
add
and
in
es
xchg
lods
xchg
pop
push
add
loopne
aad
ficoms
out
fldt
sbb
test
push
in
dec
jg
loope
and
fistpll
push
int3
in
mov
ficomps
adc
mov
mov
ds
push
ret
add
xor
loop
xchg
arpl
pop
cmp
shll
lahf
xchg
int
xchg
aad
or
adc
imul
outsl
lods
push
dec
arpl
sahf
lahf
mov
pop
cmpsl
stos
mov
cmpsb
das
ljmp
mov
mov
or
mov
xchg
lret
lret
adc
sub
add
into
push
jns
mov
and
loope
test
out
es
cltd
scas
inc
pop
dec
jns
mov
adc
jne
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
mov
shl
xchg
mov
jg
cmp
dec
out
data16
fwait
pop
mov
dec
aaa
lods
hlt
sbb
cmp
jp
int
and
add
or
mov
test
mov
test
push
cmp
cmpb
data16
dec
fnsave
pop
testl
mov
adc
mov
sahf
mov
mov
filds
pop
mov
mov
pop
inc
adc
jbe
jo
inc
jge
mov
inc
dec
jmp
ret
ds
jmp
lcall
inc
push
inc
mov
fidivrl
loop
test
cmp
xchg
mov
out
or
push
js
fdivl
hlt
push
hlt
mov
shl
jge
fistpll
sbb
loope
and
xor
jp
mov
out
in
lods
cwtl
adc
das
arpl
shl
insl
and
xor
sbb
es
fsqrt
adc
lret
lret
pusha
mov
inc
jae
inc
addr16
scas
dec
push
inc
das
call
mov
clc
mov
mov
jge
out
pop
popa
and
xchg
xchg
jl
xchg
jle
xchg
lods
pop
push
mov
adc
es
sahf
jno
insl
xor
aas
mov
sbb
dec
mov
mov
enter
clc
ds
shll
rorl
aas
add
sti
add
sarl
xchg
and
sub
into
jb
ja
mov
rcll
jle
pop
mov
inc
cmp
fbld
push
adc
or
out
mov
ds
leave
lret
mov
push
movsl
in
xchg
jnp
inc
inc
sub
mov
stos
and
js
sub
and
jnp
fsubl
inc
and
add
pop
sbb
inc
xchg
xchg
js
or
add
pop
fiaddl
scas
pop
jo
xchg
pop
mulb
lea
xchg
std
loope
clc
aas
mov
xchg
movsl
adc
pop
popa
bound
or
jge
sbb
mov
lret
sbb
pop
jmp
divl
lahf
fcompl
jnp
adc
repnz
cmpsl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
movb
scas
mov
mov
adc
xchg
leave
cmp
hlt
add
and
outsb
in
jp
loope
neg
fstl
aam
cmp
xchg
adc
imul
mov
pop
adc
mov
int
pop
das
in
fmull
mov
mov
xor
and
pop
data16
xor
or
push
mov
incl
dec
sbb
inc
arpl
mov
push
xor
scas
or
fwait
mov
sub
or
cmp
sbb
ss
rcrb
sub
imul
sti
in
cltd
adc
loop
iret
enter
mov
cmpsb
xchg
jp
mov
sub
inc
adc
mov
ljmp
mov
xor
xchg
mov
push
jae
aaa
testb
inc
movsb
adc
movsb
jae
push
dec
roll
xor
popa
sahf
mov
sub
add
push
xor
pop
pusha
mov
xchg
add
imul
in
mov
jns
dec
loopne
pop
nop
adc
jecxz
mov
mov
movsb
adc
mov
cvtps2pd
jmp
pop
push
or
cwtl
sbb
cmp
outsb
das
repnz
dec
ds
xor
stos
in
imulb
fiaddl
xor
sbb
fiaddl
jnp
adc
push
sbb
imulb
dec
sbb
add
insb
inc
and
sbb
lahf
mov
xchg
or
pop
les
inc
pop
cld
fldl
xor
mov
in
cmp
cs
rsqrtps
inc
sub
lahf
dec
jnp
hlt
xor
jmp
ret
enter
push
divl
jb
or
xchg
insb
jp
gs
jae
cmp
popa
ds
adc
rcrl
jno
xor
inc
dec
lds
mov
lods
fmuls
mov
dec
adcb
out
mov
jecxz
test
push
pushf
cmc
or
leave
add
or
cld
xor
add
mull
push
insb
sbb
shlb
mov
mov
jecxz
mov
aas
rcll
cli
add
add
std
addr16
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
push
sahf
imul
pop
mov
fldl
xlat
int3
jo
call
mov
insl
pusha
push
aam
scas
mov
in
out
inc
add
push
mov
test
dec
sahf
lock
cmp
outsl
fisubrl
sahf
pushf
das
mov
out
imul
outsb
and
int3
mov
and
push
test
fsts
ja
std
mov
mov
cmp
scas
mov
inc
inc
ret
rolb
mov
nop
fistpl
xchg
sub
xchg
cmp
mov
sarb
or
ret
push
pop
xor
and
test
fdivrs
cld
rcll
add
lahf
sbb
daa
push
mov
or
inc
or
fsubl
adc
mov
xor
andb
pushf
cmp
nop
hlt
lea
pop
dec
jnp
pop
stos
lcall
sahf
in
stos
in
mov
jnp
xchg
mov
push
stc
jo
dec
push
sbb
push
jecxz
cmpsb
adc
jnp
fld
dec
jmp
cmp
test
and
data16
jl
pop
test
negb
fidivrl
movsb
gs
mov
jnp
cmp
call
ret
add
repnz
dec
fdivrl
bnd
and
xor
movsl
loop
pop
pusha
add
or
in
shl
add
pop
cmp
dec
int
mov
subb
je
mov
imul
push
jns
xchg
cltd
fcomip
cmp
icebp
loop
fwait
ret
inc
mov
sbb
in
lret
lea
lahf
incl
xchg
jle
sbb
loope
dec
xor
add
sub
pop
cmpsb
or
push
xor
adc
imul
imul
dec
pop
loope
testl
out
mov
cmp
dec
pop
rcll
inc
das
scas
mov
sub
arpl
popa
push
aad
lods
pop
xchg
sahf
ret
mov
jb
into
ss
fdivs
test
lahf
or
add
rolb
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
cld
sub
es
mov
mov
and
cmp
or
push
xor
insb
test
or
shlb
icebp
cwtl
mov
negb
xchg
xor
fildll
add
inc
cmpl
scas
xlat
lods
jmp
das
mov
inc
mov
mov
dec
xchg
jns
jecxz
ret
test
mov
ret
push
push
outsb
pop
sub
cmp
xchg
seta
pop
ret
fistps
lds
rorl
xchg
lods
xchg
push
lock
subl
ss
jge
jno
je
jns
aam
mov
insb
push
lea
push
sbb
pop
mov
jmp
out
icebp
and
jge
mov
adcl
addr16
cmpl
inc
cmp
jle
lock
sub
std
mov
mov
xchg
loopne
jae
or
xor
pop
push
push
icebp
lock
pop
push
xor
xor
pop
xchg
jo
inc
mov
mov
sub
pop
ret
fcmovne
dec
shrl
sub
and
test
inc
push
fstps
xor
ds
loope
adc
lret
xor
push
or
mov
pushf
test
xchg
xor
or
mov
mov
dec
inc
fwait
repnz
out
mov
add
sub
push
mov
xchg
ljmp
mov
xchg
std
stos
popf
dec
jecxz
inc
pop
cmp
and
mov
push
leave
sahf
les
sbbb
xor
out
test
xor
pushf
sbb
push
xlat
shl
xchg
push
xchg
add
and
jnp
ja
push
xor
dec
inc
push
jno
ljmp
shll
push
and
sub
lret
ss
or
out
jb
cmp
enter
xchg
in
stos
ret
inc
aad
loop
mov
mov
xchg
cmpsl
fwait
sub
leave
xor
push
jo
mov
enter
cmpsb
cmp
pop
inc
push
ss
or
pop
jnp
add
insl
xchg
cmp
ret
and
popa
lahf
test
lcall
lock
cmpsl
fcomi
movl
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
push
lea
adc
mov
mov
lret
out
cmp
xchg
pop
lods
scas
jae
jo
push
inc
sbb
das
aad
cmc
push
enter
jns
aas
nop
cmp
fiaddl
mov
mov
and
push
or
cltd
mov
jae
cwtl
imul
xor
sbb
test
pop
mov
adc
lock
bound
jge
and
test
ds
ljmp
outsb
filds
sub
mov
aam
lods
xor
cmp
insb
loope
scas
xchg
jg
fisttpll
repnz
scas
mov
cmp
or
mov
inc
adc
inc
popa
data16
std
mov
mulb
lock
call
fcomp
sub
iret
ja
mov
push
aad
dec
jg
ljmp
popa
mov
movsl
push
mov
cmp
rol
ljmp
leave
mov
lock
jbe
cmc
pop
imul
sahf
bound
hlt
jbe
mov
in
mov
mov
imul
ds
mov
push
push
subl
pushf
sub
inc
adc
or
sbbb
lods
xor
aas
inc
roll
dec
leave
out
push
insl
repz
push
or
push
xor
mov
addr16
daa
arpl
jmp
inc
push
cmpsl
push
adc
mov
lretw
faddp
cld
xchg
pop
pop
aas
loop
push
loope
mov
add
iret
test
and
mov
and
sub
xorl
in
fwait
sbb
fistpl
sbb
fwait
add
repnz
sbb
idivl
xchg
and
sub
cmc
mov
aad
fcmovbe
test
cmc
sub
push
push
dec
sbb
jbe
dec
ret
dec
sbb
test
orb
insb
mov
dec
mov
outsb
dec
push
push
stc
loop
mov
or
insl
mov
imull
cli
push
cld
dec
adc
gs
ss
pushf
and
or
cli
insb
ror
sbb
lcall
adc
pop
rorb
xchg
scas
xchg
icebp
cmp
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
xlat
cmp
lahf
mov
mov
xchg
inc
ja
cmp
sbb
js
out
adc
mov
inc
lcall
test
mov
iret
pop
outsb
sbb
ja
imul
insb
ds
es
push
or
inc
mulb
xchg
mov
add
icebp
adc
jge
sti
scas
int
arpl
mov
fcmovnu
cmp
or
or
loope
aad
push
imul
cs
ret
imul
mov
push
pop
jbe
sub
mov
cs
and
xchg
testb
cmc
popf
sbb
mov
jo
and
cmpsl
in
lock
dec
mov
inc
mov
add
mov
ljmp
je
stos
es
mov
test
mov
adc
nop
xchg
jge
pop
and
lea
fcomp
push
out
xlat
fimull
adc
push
nop
adc
mov
adc
inc
aam
sub
fsub
cmpb
mov
in
pop
lahf
sbb
dec
mov
daa
outsl
in
je
push
test
xchg
iret
pop
out
pop
dec
mov
adc
jns
xchg
xchg
or
inc
test
pop
cmp
pop
mov
mov
push
sub
xor
mov
and
aaa
inc
pop
test
dec
rorl
mov
aam
pusha
or
sbb
jle
nop
sbbl
mov
adc
jmp
mov
sbb
xchg
lds
add
cmp
rcrb
cmp
push
cmp
xor
into
cld
mov
test
fnstsw
pusha
movl
pop
in
cs
push
out
inc
add
popa
and
es
sbb
and
pop
push
orb
mov
mov
mov
push
xlat
stc
fsubr
push
scas
sarb
xor
mov
xchg
pop
lds
scas
cmp
ret
push
and
mov
xchg
mov
into
nop
mov
jle
dec
xchg
cmovno
lods
push
jl
sbb
xor
lret
jnp
xor
fsts
mov
sbb
pop
xor
lds
out
push
inc
outsb
sbb
cmpl
and
ret
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
imul
mov
sahf
cli
mov
xor
sbb
mov
aas
add
sub
mov
loopne
or
iret
cmpsb
xchg
inc
pop
dec
int3
cmpsl
addr16
popf
sarb
ljmp
xchg
dec
fcmovnb
stc
clc
cld
sbb
or
in
sbb
jns
cwtl
out
gs
sarl
lsl
add
rolb
lods
xor
cmp
adc
adc
sahf
push
cmp
js
or
mov
mov
arpl
sbb
sbb
sbb
xchg
jo
lds
clc
je
mov
cmpl
fisubrl
mov
jns
lods
xor
and
xchg
ret
out
cs
mov
push
fs
mov
push
stc
adc
fdivrs
sub
iret
jge
into
cltd
add
mov
popf
mov
pushf
lea
sub
and
mov
cmp
aaa
jmp
cmp
sbb
jp
mov
mov
add
das
and
jecxz
xchg
cmp
rcl
stc
pop
adc
pop
mov
and
xor
cltd
out
loopne
xor
inc
out
sbb
fcoml
cmp
pushf
sbb
in
insl
mov
mov
int3
mov
stos
lds
btc
mov
push
push
sub
or
push
pop
imul
adc
adc
xchg
jl
rolb
mov
ss
jp
psubw
mov
mov
sub
cmp
mov
lods
fwait
fs
popa
cltd
addr16
and
jae
pop
out
into
push
jns
jnp
arpl
mov
lret
mov
fcoms
cmp
pop
shr
cmp
popa
mov
dec
sub
push
add
jbe
mov
mov
mov
call
notl
xchg
sub
fwait
insl
jmp
ds
test
lods
or
push
and
push
mov
repnz
divb
out
mov
sbb
inc
push
sbb
xchg
sbb
ret
fnsave
jo
sbb
stos
arpl
add
xor
rcrl
sub
scas
or
add
ficompl
fdivl
rol
inc
call
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
xchg
aad
mov
mov
jg
push
mov
aas
addl
jmp
shll
xchg
cmp
xchg
aas
mov
scas
push
stc
cs
pop
inc
push
enter
cltd
pop
jle
mov
xchg
sub
mov
jo
daa
loope
jg
jmp
cmpsb
push
out
and
sbb
sbb
fmul
leave
imul
out
sbbb
inc
fdivs
ret
cmp
sarl
rcrb
mov
roll
nop
loopne
fistpl
mov
ss
sbb
in
mulps
lahf
loope
test
dec
pop
movsb
mov
xchg
push
add
lcall
scas
dec
mov
mov
rolb
xor
xor
lods
or
lret
mov
push
mov
dec
rorl
jl
pop
xor
xor
popa
sub
test
loopne
inc
les
mov
jge
int
push
ret
xchg
fsubrl
sbb
ja
es
rolb
or
or
das
aam
adc
sbb
xchg
adc
test
pushf
adc
fldenv
ds
fildl
in
mulb
adc
repz
or
cli
pop
movsl
je
add
mov
icebp
out
mov
ja
lret
mov
xchg
in
xor
scas
jo
out
vcmpps
shrb
aam
int3
lcall
mov
out
xchg
pop
mov
cli
std
mov
mov
into
mov
les
mov
sbb
jae
aad
inc
jmp
dec
sbb
ljmp
scas
push
mov
or
dec
into
mov
mov
cmp
les
ja
scas
xlat
sbb
cmp
jnp
pop
lcall
inc
xchg
mov
jp
xlat
cmp
shlb
jo
add
push
dec
lret
les
dec
shll
jp
jbe
inc
iret
movsb
lret
pop
incl
out
inc
xor
xor
dec
cmp
dec
fcompl
pause
mov
cltd
jae
push
out
rorl
pop
dec
loop
jns
inc
fdivp
pop
xchg
repnz
rcrl
xchg
and
rorb
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
fisttpll
mulb
ret
iret
xor
scas
mov
out
insl
sub
sbb
jno
sti
adc
add
addr16
pusha
call
mov
and
cmp
push
sbb
loopne
das
adc
enter
out
cli
xchg
sarb
inc
mov
mov
push
pop
dec
mov
pushf
cmp
mov
inc
ss
dec
test
iret
stc
movsl
dec
and
sub
cmp
ret
jae
push
test
lds
ljmp
adc
imul
fdivr
cmpsb
push
je
or
mov
sbb
stos
jne
jno
insl
aaa
xchg
popf
push
xor
pop
pop
cmpsl
fistps
mull
jmp
add
imul
add
push
or
inc
pop
push
fnstcw
not
icebp
mov
ficompl
jb
mov
sub
lret
push
sarl
jp
xchg
mov
stc
lock
in
push
jle
xchg
mov
jp
in
pop
imul
shlb
xchg
leave
test
inc
test
xor
ss
mov
loopne
movb
sub
mov
movsl
add
cmpsb
bound
mov
sub
mov
xor
scas
popf
shlb
test
and
xor
push
int
movsb
push
pop
in
mov
cwtl
xchg
gs
xor
pop
stc
stos
sbb
xchg
aam
jbe
icebp
lock
and
inc
push
pop
jne
movsb
cltd
sar
lret
jne
inc
pop
add
imul
mov
ljmp
filds
in
pop
ja
xchg
test
push
stc
and
ja
test
gs
sub
ror
mov
imul
or
push
xchg
divb
inc
xor
cmpsl
sbb
push
dec
scas
icebp
sub
hlt
scas
ja
inc
sbb
add
mov
pop
out
fldenv
adc
jecxz
dec
iret
mov
xchg
pop
mov
push
cmp
addl
repnz
leave
push
xchg
in
xchg
aaa
mov
mov
movsl
jle
lock
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
jne
int
lods
mov
mov
js
or
mov
pop
adc
jecxz
cmpsl
pop
sti
xor
outsl
jmp
pop
add
sarb
imul
mov
mov
daa
stos
and
cmp
loope
pop
fcomi
and
pop
mov
shll
mov
js
xchg
and
pop
jbe
add
fxch
into
gs
dec
out
setne
arpl
incb
xchg
or
push
pop
jecxz
ja
pop
data16
pop
jle
imul
add
sbb
jbe
jmp
rorb
mov
imul
xor
inc
pop
scas
lret
mov
jecxz
inc
cld
sbb
mov
mov
pop
mov
iret
pop
subb
jecxz
and
push
leave
pop
test
lds
lcall
lods
pop
mov
int3
cmc
push
imul
mov
popf
lret
out
repz
inc
stos
mov
mov
mov
test
movsb
xor
cmp
mov
rcrl
inc
pop
sub
movb
push
mov
imul
sbb
pop
cmp
call
push
popf
mov
mov
rcll
cmc
call
movsb
fistl
inc
insl
sbb
hlt
dec
cmp
hlt
xchg
mov
mov
loop
insb
adc
jmp
jg
sub
lods
out
enter
lcall
data16
dec
imul
or
test
xchg
push
mov
or
daa
mov
cmpsl
sbb
or
sbb
subl
add
xchg
dec
and
test
aad
cmpsb
mov
mov
ror
scas
xlat
out
jmp
sub
sbb
fldenv
and
imul
xchg
ljmp
mov
lock
pop
popa
stc
bound
loope
xorl
mov
push
lea
push
adc
int
incl
aas
neg
lods
and
clc
sbb
imull
stc
loope
mov
xchg
test
pop
out
mov
test
es
mov
popa
aas
lods
and
lcall
xor
pop
dec
push
shrl
stos
sbb
lcall
fwait
aaa
xchg
aaa
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
mov
les
xchg
movsl
jbe
ret
cltd
xchg
xor
rcl
aam
and
addr16
popf
xor
mov
out
cmp
ljmp
push
push
sbb
xor
pop
js
dec
insl
test
pop
sub
les
pop
cmp
icebp
lahf
inc
xchg
jae
cld
cmp
xchg
cmc
icebp
push
inc
ss
ss
addl
repz
mov
jnp
repz
ror
adcb
test
nop
jmp
push
mov
mov
sub
retw
xchg
cld
and
aas
scas
faddl
mov
fisubs
ret
and
lods
jmp
push
fwait
mov
pusha
loopne
scas
cmp
adc
enter
bound
fdivp
pop
jmp
cli
cmp
lret
scas
mov
cmp
mov
and
cwtl
cwtl
das
lret
in
and
xchg
cmp
sub
inc
mov
jno
adcb
mov
push
lds
push
mov
out
or
mov
imul
sbb
push
fcompl
iret
and
fidivs
outsl
out
mov
cmp
add
ret
pop
lcall
mov
xchg
mov
push
clc
dec
pop
shrl
mov
fildll
xchg
cmp
mov
inc
sbb
repnz
xchg
push
ljmp
out
lock
sbb
inc
cmp
add
sub
nop
cld
addr16
imul
ja
idivl
out
and
popf
add
pop
aam
dec
dec
and
movsb
loopne
xchg
clc
rcrb
mov
sbb
mov
push
or
jbe
icebp
or
mov
daa
pop
fwait
pop
cmpsl
lcall
xchg
rcl
adc
sbb
mov
je
or
ja
pop
leave
insb
repz
push
imul
or
sbb
in
sub
push
jl
leave
lock
arpl
jle
lahf
das
mov
sti
mov
pushl
stos
push
sub
xor
mov
push
mov
jnp
loop
loop
dec
add
sub
add
push
adcb
sub
dec
imul
mulb
cld
adc
jmp
inc
sub
inc
insl
lock
inc
mov
nop
push
sbb
jmp
ffree
arpl
lahf
dec
fsubrl
mov
xchg
mov
mov
in
jp
jge
jmp
rcrl
outsl
out
pushf
pop
push
outsb
icebp
lcall
xor
mov
pop
sbb
mov
scas
push
add
lock
mov
fcom
pop
add
mov
popa
sub
jmp
adc
xor
dec
repnz
mov
popf
or
push
xor
jae
cmp
aad
lahf
inc
nop
int3
rorb
mov
sub
jecxz
out
lahf
inc
in
imul
mov
movsb
mov
inc
cmp
mov
jge
jnp
js
jmp
loopne
add
jmp
pop
ret
fidivrl
mov
ret
jb
aad
mov
insl
mov
jp
pop
lock
outsb
repz
inc
je
xchg
outsl
pop
mov
push
adc
mov
jle
jl
imul
movsl
adc
aaa
mov
jecxz
mov
mov
repz
out
dec
pushf
daa
stc
and
in
xchg
das
flds
mov
cmp
jnp
lcall
add
mov
ss
lea
mov
add
jo
sub
pushf
mov
loope
push
sbb
jp
fcmovbe
and
scas
adc
xor
xchg
sub
push
sub
jnp
push
pop
mov
inc
cld
ret
add
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
icebp
sarl
mov
dec
sub
xchg
jg
push
push
push
popa
ss
aam
and
xchg
xchg
mov
add
icebp
aam
push
scas
rclb
nop
jno
cmpsl
pusha
in
out
adc
negb
outsl
lcall
mov
rorb
addr16
out
negb
pusha
sub
mov
fs
lret
jno
inc
into
mov
fdivl
not
repnz
dec
leave
xor
sbb
test
mov
nop
xchg
jmp
and
fldcw
es
cltd
fsubl
mov
ja
sahf
xlat
iret
push
enter
sbb
test
push
cli
jb
cmp
sub
cmp
insl
loop
xchg
mov
mov
pop
xor
cli
jp
aam
std
stos
shr
push
dec
push
xlat
push
inc
pop
fstl
fwait
lds
or
cli
or
jno
jmp
dec
test
repnz
repnz
inc
frstor
fiaddl
lock
sub
ljmp
mov
and
loop
sbb
js
push
int
adc
cli
adc
jmp
cld
add
cmp
xchg
sbb
call
sub
xchg
push
decb
nop
jmp
cld
mov
xchg
pusha
or
mov
push
fwait
jae
ret
cwtl
mov
jmp
push
int3
rcrb
rorl
sub
lock
inc
mov
sub
mov
aad
cmpsb
in
mov
int
xchg
and
iret
sti
pop
je
mov
xchg
xchg
lret
jp
mov
out
call
pop
mov
call
sbb
lods
cmp
inc
incb
jp
scas
xor
sbb
dec
sub
jle
fistpll
mov
test
imul
dec
movsl
jne
inc
and
sti
rorl
lock
cmp
loop
fsubrl
add
jecxz
jb
pop
mov
or
out
push
in
or
into
adc
outsl
fimuls
xlat
fmull
cmp
add
clc
addr16
stc
leave
mov
push
and
jl
mov
or
ljmp
adc
dec
lahf
loopew
fucomip
rorb
into
sti
arpl
cli
lcall
cmp
xor
sbb
push
sbb
or
mov
arpl
rcrl
xlat
jp
adc
ja
sub
and
xor
jp
sub
cli
push
aad
inc
and
int3
imul
loope
inc
addl
cmp
jl
lret
movsl
dec
pop
mov
cmpsb
in
and
cltd
das
stc
lahf
pop
push
lds
faddp
int
jmp
cmp
rclb
mov
xchg
or
aas
jne
ret
lds
rcl
enter
stc
mov
adc
and
xor
sbb
in
enter
adc
movsb
add
cmp
push
xchg
mov
pop
inc
inc
cmc
push
data16
sbb
fs
mov
or
aaa
out
adc
call
fwait
loopne
mov
mov
push
mov
inc
cmpsb
or
cwtl
mov
add
mov
sub
cld
shll
movsb
mov
ljmp
out
repnz
push
mov
into
jns
or
push
mov
ja
mov
fcomip
jmp
enter
out
mull
sbb
es
dec
je
push
mov
jmp
jle
icebp
sarb
pop
ficomps
inc
dec
lock
test
pop
fisubrs
xchg
rolb
jne
add
inc
clc
lahf
jl
add
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
fldl
mov
mov
push
push
aad
mov
testb
test
push
xchg
call
inc
pushf
dec
inc
add
outsl
rolb
add
adc
rcrl
dec
pop
data16
inc
jbe
repnz
mov
add
xchg
in
insb
insb
jecxz
sub
fistps
pop
cmp
xchg
dec
fsubp
mov
stos
lock
dec
sti
mov
and
push
js
in
pop
lods
lcall
mov
fidivrl
iret
or
popf
add
cs
insl
cs
cmpsl
les
cmp
mov
mov
fs
mull
fwait
cmpsb
mov
adc
hlt
leave
mov
shll
repnz
scas
dec
cmc
cmp
leave
mov
hlt
mov
adc
pop
in
mov
cmpsb
push
test
addr16
out
std
dec
xchg
mov
pop
das
mov
xor
mov
mov
jb
inc
pop
fadds
lods
ja
loopne
shlb
cmp
adc
xchg
std
mov
outsb
mov
mov
das
enter
test
shll
sahf
aam
xor
dec
mov
sbb
test
fisttps
mov
push
mov
loope
xor
mov
xchg
mov
inc
int3
loope
pop
lods
fisubrs
loopne
shl
add
fistps
cld
mov
cmp
and
adc
iret
outsb
xchg
adc
pop
sbb
dec
xchg
adc
loop
pop
aas
mov
mov
mov
fwait
mov
mov
cmp
fwait
aad
dec
rcll
shl
cmp
cmp
or
aaa
in
mov
and
mov
jbe
clc
and
dec
insb
mov
shlb
ds
je
mov
xchg
lods
xlat
stos
scas
repz
shlb
cwtl
cmp
daa
inc
aas
test
es
popa
xor
aam
and
je
add
aam
pop
lcall
xchg
pushf
dec
inc
or
push
cmp
out
sbb
sbb
mov
inc
cld
imul
xchg
fisttpl
lret
or
sub
iret
mov
push
js
call
fstps
lods
sub
sahf
push
retw
mov
jmp
mov
sub
loop
stos
incb
xchg
sub
fistl
xchg
pushf
movsl
loope
adc
popf
jp
cmp
xor
sub
dec
out
cwtl
shlb
daa
sti
js
in
jmp
mov
mov
pop
mov
adc
sbb
dec
lods
xor
into
add
dec
adc
mov
cmpsl
cmp
mov
pop
cld
inc
movzbl
mov
push
fisttpll
arpl
icebp
push
inc
mov
cmpsl
cs
insl
lret
fcoms
push
mov
pop
adc
xchg
loopne
scas
testl
cld
push
leave
inc
or
andb
clc
icebp
jg
cmp
and
addps
xor
push
fidivrs
jle
mov
pop
jb
aad
rcrl
mov
loope
fsubs
push
out
aam
sbb
lock
pop
leave
sahf
movsl
lea
cmpsb
pop
lea
xchg
daa
roll
imull
ja
xchg
add
out
inc
and
out
popf
inc
push
pop
sub
adc
inc
nop
test
stos
ja
jnp
xor
lcall
add
icebp
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
rcll
iret
mov
mov
and
pop
xor
sar
pop
add
adc
lods
cmp
and
cmp
mov
mov
push
adc
inc
out
inc
inc
int3
add
lret
dec
fstpt
push
shrl
lods
lds
inc
and
fwait
sub
dec
fists
or
movsl
pop
add
xor
xor
jns
jmp
int3
shrl
out
inc
push
and
jne
inc
cmpsb
push
xchg
jne
jge
inc
xlat
aad
cmc
or
aad
dec
or
mov
into
ret
shlb
cmpb
aaa
mov
cltd
jmp
in
stos
xchg
dec
xchg
int3
mov
jns
mov
sti
jecxz
dec
data16
lods
add
aad
flds
sub
scas
in
incl
sarl
mov
aas
push
js
mov
fisubrs
and
outsl
jo
lcall
das
cmp
adcl
les
cmp
popf
fucomip
pop
xchg
daa
mov
xor
ret
cmpsb
sbb
faddl
stc
fsubrl
xor
cmp
push
cmp
sbb
jne
aad
lods
sub
add
out
inc
mov
adc
addr16
adc
lock
jg
dec
cmp
jl
dec
pop
lret
cltd
cs
add
movsb
add
jge
xchg
les
push
bound
and
ret
dec
mov
cmp
inc
cmp
popf
jg
jge
xchg
subl
pushf
lods
std
sbb
test
sahf
or
dec
adc
sub
in
test
ret
dec
imul
adc
cwtl
or
lret
addl
add
mov
mov
mov
adc
fbstp
and
dec
mov
lret
cmpsl
out
and
inc
pop
gs
mov
push
popa
data16
nop
mov
xlat
fidivl
add
fadds
rcrb
sbb
or
add
sbb
jae
push
sub
ret
and
jecxz
mov
popf
rcrl
aam
cld
and
adc
sub
pop
fcomps
xchg
add
mov
cmp
lods
je,pn
cmp
movhps
xlat
test
dec
int
aas
pop
cli
stc
cmp
jbe
cltd
lods
xor
and
or
stos
test
in
xchg
arpl
xchg
xchg
and
cmp
or
dec
sbb
test
sub
dec
js
adc
adc
cmp
decl
scas
pop
dec
mov
ss
fstpl
xchg
bound
addb
mov
sub
leave
or
jbe
add
mov
into
sbb
cmpsb
cmp
jmp
mov
cltd
add
popa
out
call
std
dec
outsl
std
test
mov
out
and
cmc
xchg
out
gs
setbe
cld
nop
mov
push
imul
sub
dec
jmp
repnz
out
and
loopne
pop
js
or
jns
xor
pop
sub
add
test
sti
into
sub
repz
xor
jnp
add
subb
fcoml
pop
repz
int
fwait
es
add
roll
cmp
enter
mov
mov
adc
cmp
mov
mov
sub
scas
xchg
cmp
pop
jb
aam
gs
test
scas
mov
xchg
std
dec
push
test
mov
iret
xor
xchg
dec
or
mov
mov
mov
sub
add
inc
in
jno
add
add
add
fisubrl
mov
or
and
xchg
les
mov
jmp
lahf
scas
aad
sar
pushf
out
pop
stc
xorl
fs
mov
push
dec
add
idiv
ds
fstpl
outsl
out
xor
scas
adc
test
cmpl
cltd
pop
cli
outsl
test
dec
sbb
repnz
xchg
add
or
jp
cmp
sar
inc
fwait
pop
mov
push
lea
mov
and
call
pop
icebp
xchg
mov
mov
out
nop
mov
inc
fwait
std
xor
pop
int
aas
xchg
jl
xchg
cmp
call
jnp
icebp
int3
pop
int
lret
movsl
sahf
mov
adc
mov
insl
xor
mov
mov
enter
xlat
xor
mov
sbb
adc
jnp
insb
roll
xor
data16
or
add
cmpb
inc
std
sub
std
out
iret
sbb
sbb
repz
fimull
or
adc
inc
lcall
inc
movsb
mov
sub
sbb
loope
pop
flds
in
mov
sub
mov
push
xchg
jno
fiaddl
nop
in
stos
xor
dec
into
push
sbb
push
rclb
pop
sbb
inc
out
fimull
outsl
fsubs
push
xor
fs
ja
cmp
cmp
push
jne
inc
pushf
or
push
enter
inc
inc
outsl
jno
push
cli
das
loop
pop
insb
icebp
imul
mov
xchg
loop
aam
je
push
loope
out
cmpsl
mov
adc
dec
adc
jae
cli
out
dec
push
pushf
sub
jb
xor
cmp
jg
dec
mov
mov
xor
sub
mov
fs
cld
sub
insb
iret
imul
mov
xor
leave
aam
pushf
out
jne
pop
inc
push
ss
inc
jo
xchg
jge
rcrl
sbb
push
out
xor
mov
jno
js
loopne
cmp
xor
lahf
xchg
cmp
aam
outsb
dec
dec
aas
mov
adc
aad
sub
jecxz
out
sti
repnz
dec
add
push
ja
pusha
jl
or
lcall
sub
jmp
push
sbb
xchg
xchg
mov
loope
inc
cmc
lods
jg
daa
ret
cwtl
mov
xchg
movsl
sub
repz
cmc
add
mov
sbb
ja
mov
mov
mov
repnz
addb
xor
adc
add
lcall
adc
dec
fldenv
xchg
shll
jne
sbb
testb
subb
adc
jp
lahf
push
push
mov
outsb
into
icebp
insb
sahf
shlb
and
push
xor
adc
popf
inc
in
mov
fwait
xchg
hlt
xchg
mov
mov
sub
xor
test
cmpsb
lcall
popf
cs
js
inc
out
in
add
mov
aad
mov
in
sbb
repnz
data16
into
xor
dec
je
jno
out
add
dec
add
xor
je
mov
out
push
fcomps
test
dec
movsl
dec
sbb
or
movsb
vrcpps
or
fcmovnu
les
test
cltd
rcrb
inc
sbb
aad
loopne
xor
int3
mov
mov
add
loope
dec
cmpsl
xchg
ljmp
sub
jge
jl
ljmp
xor
mov
iret
xorb
and
js
mov
lret
dec
shlb
fwait
cs
jne
mov
push
in
jne
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
test
mov
or
jmp
out
outsl
insb
lods
jnp
outsb
leave
hlt
movsb
sbb
add
cmc
or
daa
push
mov
jns
fsub
xchg
jns
push
xor
mov
int3
sbb
iret
push
add
or
fildll
cs
fistpl
outsl
scas
or
jo
and
xchg
movsb
ljmp
add
xchg
mov
out
cltd
jns
mov
add
nop
sbb
out
sbb
push
lods
out
cmp
out
pop
out
mov
or
mov
mov
cmpsl
faddl
add
fadd
dec
ljmp
jg
push
jno
mov
and
dec
mov
sub
out
hlt
rcll
out
mov
cmp
fwait
push
mov
mov
adc
mov
cmp
mov
fs
mov
lea
pop
xorl
push
icebp
lea
loope
ss
lahf
stos
and
mov
hlt
cmc
imul
pop
andl
mov
movsl
push
pop
xor
xlat
jbe
decl
fcoml
iret
popf
jl
loope
sub
xor
cmp
lret
mov
in
fs
sub
push
mov
push
rclb
in
jp
mov
jge
push
rcl
into
add
loopne
rclb
inc
sbb
aas
inc
mov
fdivrs
mov
xchg
xchg
sbb
mov
addr16
inc
fs
jbe
inc
pushf
add
aad
mov
mov
jnp
push
pop
rcrb
mov
aas
fiadds
mov
jnp
xchg
data16
jns
add
and
fld
push
jge
daa
pop
fldl
in
push
push
outsl
cmc
mov
adc
cmc
out
mov
and
xor
pop
scas
lock
loop
xor
std
xchg
dec
adc
int3
daa
pushf
js
add
mov
js
sub
int
std
inc
push
mov
shl
sbb
sub
mov
adc
addl
jmp
addr16
aam
sbb
sub
jp
lret
cmc
or
adc
addr16
in
push
adc
pushf
ljmp
test
rcr
add
orl
andl
fst
inc
inc
lods
loopne
cs
addr16
sarl
nop
lcall
icebp
in
sub
pop
push
aaa
cmp
in
in
pop
push
imul
imul
gs
push
sbbb
and
adc
mov
or
pop
fisttpl
out
setb
push
push
fidivrl
in
xor
call
out
test
dec
insb
adc
mov
jb
pusha
bound
cli
dec
push
adc
loope
pushf
mov
jmp
fstps
icebp
or
pop
push
test
push
in
push
das
sti
sub
test
dec
adc
insl
jb
mov
add
cwtl
decl
mov
jne
jnp
xor
mov
clc
push
pusha
ds
xchg
jmp
imul
arpl
shll
adc
or
lock
outsl
dec
arpl
inc
roll
push
cmp
lods
cli
dec
fisttpll
in
cld
xchg
data16
mov
daa
ss
js
loope
movsl
mov
std
sbb
jecxz
jmp
mov
push
iret
sub
adc
xchg
dec
out
inc
push
dec
jae
sahf
and
addr16
cmp
fld
sahf
lock
repz
jl
dec
ret
ja
pop
stos
loopne
jg
xorb
pop
adc
mov
imul
lods
lods
jmp
test
fwait
add
out
inc
loopne
rcrb
push
in
inc
andb
mov
add
inc
xchg
adc
add
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
jnp
xor
xchg
out
mov
pop
cltd
mov
mov
gs
mov
mov
cmp
jg
les
xor
in
enter
lret
push
xchg
jmp
fsubs
dec
lods
dec
dec
aad
dec
outsb
jnp
inc
jmp
mov
cld
sbb
mov
and
mov
insl
repnz
cld
shl
rorb
jno
and
stos
sub
xor
xchg
sahf
mov
cmc
cmp
lods
std
sub
xor
shlb
dec
mov
add
sti
inc
bound
leave
lods
pop
lods
mov
mov
mov
mov
ret
gs
mov
mov
mov
rcl
and
push
pop
fnstsw
aas
sbb
aaa
ret
scas
push
jae
xlat
lahf
push
mov
movsb
mov
jg
dec
jnp
mov
sub
out
xchg
pop
out
mov
jne
addb
push
jmp
repnz
jl
mov
lret
and
ret
je
jns
dec
mov
dec
lret
dec
xchg
ret
pop
mov
ret
inc
jl
sub
popf
test
movsl
inc
sub
fsubrs
fisubrs
fisubl
jl
sbb
aas
inc
mov
rcll
mov
scas
rolb
popf
cmpsl
dec
es
sub
add
out
xchg
sub
stc
xchg
shrl
adc
inc
sbb
xchg
rclb
lahf
pop
xor
out
push
xor
test
sub
push
pop
fwait
or
cmpsb
mov
or
adc
push
addr16
lock
popf
fsts
das
mov
enter
in
cmp
in
inc
jecxz
addr16
or
xor
mov
adc
lods
pop
clc
mov
mov
aaa
dec
fwait
int
mov
push
sbb
and
inc
inc
js
imul
mov
mov
pop
test
pop
mov
adc
and
shlb
xchg
lea
rcrb
mov
shl
gs
sbb
cwtl
jb
jecxz
bound
scas
mov
cmp
mov
popa
dec
fdiv
sbb
stos
lods
cmp
test
sbb
aas
jb
inc
sti
mov
mov
mov
xchg
push
aad
sub
jne
icebp
aad
paddusb
sub
cmp
mov
pop
ds
ja
cmp
adc
cmpsl
dec
sbb
out
js
pop
in
iret
jmp
sub
jmp
fs
xor
ljmp
sbb
andb
repnz
mov
aam
pushf
pop
rcrb
aas
mov
dec
insb
push
sub
int
pop
rcr
fsubs
rol
mov
xor
sbb
sub
fidivl
fcomi
cs
loope
test
pop
arpl
gs
pop
fisubl
pop
mov
lret
or
cmp
je
sahf
hlt
push
pop
pop
mov
shl
rcrb
xlat
imul
jae
fs
and
xor
xchg
into
lahf
je
pop
mov
and
dec
mov
fwait
and
sbb
icebp
cmp
xorb
xchg
sub
adcl
xor
fmull
add
jle
fwait
hlt
add
fsubl
pop
addb
pop
add
sub
ss
gs
mov
aad
jns
or
repz
aaa
clc
adc
xor
pushf
leave
xor
jo
cmp
mov
inc
hlt
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
insl
mov
mov
mov
mov
cmpsb
in
repnz
and
mov
adc
call
popf
mov
lcall
mov
mov
loope
cltd
hlt
out
dec
xchg
repz
xor
inc
int3
jmp
lods
jne
add
push
xor
xor
xchg
arpl
inc
roll
data16
clc
mov
outsl
sbb
in
outsb
push
lcall
orl
jge
cli
sarl
fisttpll
mov
mov
mov
dec
fldt
ja
dec
pop
lahf
negl
mov
lds
rorl
sbb
push
das
xor
mov
aas
mov
stos
mov
mov
je
testb
jl
ds
ret
sbb
in
mov
xorl
out
jns
jno
stc
jle
fnsave
repz
hlt
jmp
inc
sbbb
hlt
jg
and
fucom
in
cmpsl
mov
fadds
int
outsb
xor
xlat
xor
out
cmpsb
dec
lods
or
ss
mov
fnstenv
xor
ret
dec
in
movsb
sbb
rolb
mov
xchg
sub
fcompl
push
jbe
push
lahf
lret
lea
out
add
and
dec
or
iret
inc
fidivrs
not
mov
add
popf
push
sbb
mov
dec
lcall
cli
jl
or
test
ret
arpl
mov
adc
imul
in
rcr
and
out
stc
and
jo
shl
sbb
push
xor
aaa
sbb
fdivrs
cs
mov
sbb
xchg
xchg
popf
xor
gs
adc
faddl
mov
push
mov
sbb
and
imul
sar
sbbb
cli
lahf
and
adc
in
lret
shr
inc
fdecstp
mov
xor
fsub
cmp
and
pop
cmpsl
push
mov
nop
outsl
xchg
dec
jmp
movsb
aad
ljmp
aaa
jg
sbb
mov
cltd
xchg
dec
rolb
mov
jns
imul
out
push
inc
bound
cs
cld
xlat
inc
test
movsl
std
add
xchg
dec
lcall
mov
jnp
outsb
add
mov
bound
hlt
inc
addb
mov
out
into
add
cmp
and
je
sbb
repz
and
mov
mov
mov
cmp
push
sahf
lods
nop
fcmovnb
iret
or
testb
testb
mov
xlat
imul
outsl
cmp
jns
and
xchg
cli
add
push
mov
std
imul
pop
sbb
mov
mov
jmp
rorl
stc
out
aas
je
int
subb
cmp
lds
mov
out
out
pop
dec
push
cmpsl
lock
and
out
inc
dec
jb
mov
xchg
pop
sbb
jb
sbb
mov
xor
sbb
jb
bound
mov
outsl
push
mov
aas
lret
fstps
dec
inc
add
subb
sbb
lds
aas
pusha
ds
jne
test
mov
aam
int3
xor
mov
pushf
mov
xor
clc
jle
adcb
adc
xchg
iret
cltd
jmp
ss
aas
and
pop
sub
nop
insb
shrl
sbb
cmp
xor
xlat
lods
outsl
mov
sub
es
add
fldlg2
push
mov
cmp
add
dec
movsl
jg
in
cmpsb
add
in
movsb
rcrb
movsb
cmpsl
jnp
test
test
sub
lock
push
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
ror
repz
cmp
mov
mov
lods
ds
mov
popaw
and
push
cmpsl
in
xor
pop
xchg
aaa
and
outsb
push
inc
rclb
add
addr16
and
insb
jp
push
lds
aaa
inc
jmp
call
pusha
into
jae
jmp
pop
inc
jnp
out
mov
divb
movsl
mov
es
lock
cmp
xchg
cmp
inc
sahf
xchg
mov
add
cmpsl
cmp
aam
push
into
or
inc
leave
adc
jne
out
dec
add
xchg
cmpsb
flds
pop
add
outsb
dec
push
mov
test
cli
mov
movsb
es
cmp
jbe
mov
ficoml
repz
mov
loope
leave
sbb
popa
repnz
adc
mov
mov
loop
daa
fidivrs
cmp
pop
sbb
adc
das
aam
ds
lods
outsb
pop
mov
adc
imul
mov
and
ljmp
lods
ret
add
push
fisubs
pop
add
adc
imul
outsb
lods
in
je
xor
push
cmp
and
fidivl
adc
pusha
pushf
pop
lock
fimuls
push
sub
addl
pop
pop
sbb
inc
inc
fwait
leave
push
int
gs
and
mov
outsb
pop
in
and
mov
cwtl
mov
or
ss
popf
enter
inc
adc
add
inc
loopne
jne
adc
scas
enter
ja
fadds
inc
dec
aam
in
mov
xor
mov
dec
mov
xor
sahf
mov
js
notb
push
dec
pop
and
jl
fdivs
shlb
xor
pop
dec
in
jmp
adc
aaa
jne
and
xor
inc
cmp
movsb
push
mov
scas
mov
sbb
or
push
fistpl
nop
js
mov
popf
push
lock
push
add
call
inc
mov
test
sbb
std
jbe
mov
pop
xor
mov
sarl
jns
sub
stc
dec
ss
adc
xchg
mov
pusha
xor
or
xor
stos
push
stos
sbb
push
popl
adc
rcrl
mov
popa
daa
mov
inc
in
dec
jl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
xchg
mov
mov
stos
xchg
mov
mov
cld
loopne
popf
enter
push
fs
xchg
xchg
add
mov
aam
or
pop
sub
xor
arpl
idivb
xor
sbbb
inc
daa
fwait
add
sbb
dec
shr
fsubs
sub
xchg
inc
add
fstps
aad
push
jecxz
xlat
fists
sbb
mov
add
stos
cmp
xchg
ja
add
push
icebp
stos
aas
adc
jl
inc
mov
mov
dec
inc
or
or
int
out
adc
adc
mov
sub
pop
dec
or
jg
repnz
mov
push
or
pop
jmp
sbb
lahf
outsl
inc
out
jl
mov
insb
dec
cld
in
popf
mov
mov
bound
mov
mov
sub
jne
aam
mov
inc
movsb
movl
popf
lcall
leave
add
add
stos
gs
sbb
jle
cli
in
mov
jmp
adc
sub
ret
inc
cmp
addr16
test
jbe
cmpb
cwtl
xor
xor
sbb
cmp
stos
enter
shrb
popf
dec
rcr
dec
data16
arpl
xchg
cmp
div
test
scas
adc
xor
iret
jno
push
mov
popa
not
enter
mov
push
xor
insl
lods
lds
div
jbe
and
loope
aaa
mov
insb
fldl
cmp
pop
add
adc
shll
mov
fadds
dec
lcall
sbb
mov
pop
mov
dec
ror
sbb
in
dec
add
daa
nop
scas
cmp
jle
pop
dec
jg
les
enterw
push
push
test
and
cld
mov
mov
mov
or
stos
jp
in
hlt
add
jnp
xchg
iret
cmpb
xchg
adc
jbe
sbb
inc
jb
ret
sti
subl
mov
inc
mov
mov
adc
loop
pop
cmp
dec
mov
push
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
lahf
dec
jmp
mov
sarl
fdivs
cltd
bound
jns
leave
jp
movl
sbb
repz
ror
iret
fdivr
cmp
cmc
insb
mov
mov
and
enter
mov
lds
push
push
cmpsb
adc
or
test
stos
pop
adcb
loop
scas
ss
int3
test
stos
pop
ss
xchg
test
stc
outsl
mov
cmc
dec
cld
push
adc
inc
adc
int
mov
call
movl
adc
aas
scas
adc
mov
add
cmpl
mov
out
fisubs
and
pop
cmp
aam
sbb
in
jmp
mov
push
jecxz
xlat
sub
aas
mov
inc
dec
sub
cmp
sub
inc
aad
xchg
lea
xor
lret
add
fprem1
add
jbe
data16
dec
mov
xchg
sti
add
ret
and
in
push
mov
cwtl
jmp
cmpb
xor
xchg
inc
inc
cmp
mov
roll
push
mov
out
fucom
ljmp
loopne
cld
ljmp
jbe
cli
sbb
jne
test
adc
push
pop
stos
in
push
adc
test
and
mov
popa
cld
xchg
xchg
add
fimuls
mov
leave
out
xchg
cmpsb
lret
push
mov
out
cmc
mov
mulb
inc
sti
lock
jne
jo
cmp
ljmp
pop
int3
test
popf
sbb
cmp
sbb
mov
lods
andb
icebp
sub
scas
insb
mov
fcmovne
xchg
pop
pusha
sahf
sbb
pop
dec
ficoms
xchg
mov
fcomps
mov
push
insl
ja
fstp
out
and
mov
fbstp
in
push
add
dec
pop
and
movsl
cmc
cmp
lods
je
sbb
sarb
fwait
sub
mov
hlt
shrl
or
push
stc
or
inc
mov
mov
push
adc
inc
cs
and
add
pop
mov
pop
popa
ret
ret
dec
adc
mov
adc
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fstl
push
mov
mov
xchg
ja
rcr
addr16
mov
iret
xchg
les
mov
je
mov
iret
jno
sbb
rorb
jmp
call
mov
jle
push
add
repz
sahf
xor
lds
sub
jno
cmp
out
mov
push
cltd
mov
inc
adc
popl
xchg
or
loope
xor
rorb
in
add
mov
dec
aas
dec
popf
adc
popf
adc
cld
xchg
sub
push
aam
mov
imulb
pop
jl
mov
or
mov
lods
ds
insl
mov
and
or
into
dec
mov
xor
repnz
xchg
lock
mov
fwait
repnz
xchg
push
lret
insl
lcall
pop
mov
sub
push
cmp
or
divb
ljmp
popa
jo
aas
pop
adc
push
add
js
xor
insl
inc
jbe
push
cmp
cmpsl
pop
adc
sub
mov
int
stos
test
lods
mov
sahf
stos
sbb
jge
adc
add
push
xor
sbb
movsl
xchg
movsl
mov
adc
stc
cmpsb
inc
and
scas
or
xlat
imul
aas
jne
mov
ret
push
inc
inc
js
mov
stos
push
out
enter
fisttpl
dec
adc
cmp
push
or
nop
stos
or
loopne
sub
pushf
ret
adc
push
sahf
jae
xchg
cltd
xchg
xchg
add
pushf
sbb
popa
outsl
inc
or
mov
xchg
cmpsl
mov
mov
jge
sahf
add
mull
pop
pusha
jecxz
push
orl
xchg
scas
push
daa
test
stos
lret
push
push
cmc
jae
dec
push
daa
or
dec
hlt
xchg
pmaxsw
scas
xor
dec
pusha
jge
inc
cmp
out
jo
pop
sti
shll
pop
fs
out
mov
jp
mov
xor
and
inc
fsubs
mov
jl
sbb
jl
xchg
bound
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
shrl
les
rcr
mov
cmp
or
imul
enter
fwait
cmpsb
inc
lods
inc
lret
leave
xchg
or
sub
hlt
or
shrb
mov
lods
fwait
sub
xchg
cmp
or
mov
fwait
mov
xor
push
movsl
test
repz
push
cld
imul
insb
dec
shr
movd
repz
mov
dec
fs
in
pop
ja
mov
notl
lods
in
xchg
bound
pop
sub
add
xor
mov
out
fisttps
jp
nop
push
aas
push
daa
scas
gs
jns
mov
pop
jp
lahf
lods
and
xchg
mov
pop
test
aaa
stc
push
cli
mov
dec
in
jb
jo
fdivl
mov
jmp
sbb
and
sbbl
mov
add
inc
mov
pop
dec
mov
or
mov
lret
cwtl
mov
jmp
div
jb
hlt
sbb
shrl
push
mov
xchg
mov
mov
jo
andb
mov
ss
notb
lods
pop
gs
daa
hlt
dec
jmp
xchg
push
mov
xchg
ss
pushf
imul
out
int
push
mov
push
cli
push
inc
fdivrl
adc
and
stos
xor
lahf
inc
push
and
xor
push
jle
inc
popa
xor
jbe
scas
fsqrt
mov
repnz
mov
mov
mov
clc
roll
notb
pop
jb
and
stos
jecxz
adc
test
lret
mov
dec
stc
jmp
xor
loop
pop
out
lahf
inc
xchg
movb
mov
aad
lock
icebp
cmp
out
sbb
in
test
push
xchg
sbb
aas
push
insb
push
test
rol
insb
cmp
mov
dec
jecxz
stc
adc
icebp
sbb
or
mov
pop
push
dec
cmp
or
imul
sub
sbbl
sbb
ret
adc
and
push
mov
push
push
es
xchg
mov
test
ret
aad
xlat
mov
jb
xor
sbb
jne
pop
mov
int3
js
or
mov
insb
mov
fwait
jo
xor
mov
push
js
fidivs
add
shrb
mov
inc
jno
jmp
adc
outsl
shll
int3
mov
sbb
xor
jecxz
jmp
inc
jae
jmp
mov
pop
xor
sub
xchg
mov
push
jmp
adc
adc
mov
es
adc
aad
insb
or
addr16
sub
out
dec
pop
dec
aas
out
out
xlat
cmp
test
mov
dec
jne
mov
sbb
push
imul
jge
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
pop
ljmp
add
mov
mov
mov
outsb
sub
cmc
pop
lods
xor
xchg
or
add
hlt
shr
scas
je
mov
cmp
cmp
dec
pop
or
pop
repz
fimuls
in
std
pop
sbb
or
loope
scas
fbstp
push
ja
cmp
adc
and
cmp
adc
ret
out
inc
mov
mov
add
lret
call
jno
pushl
mov
inc
dec
mov
pop
dec
adc
mov
sti
adc
cld
pop
repz
hlt
mov
insl
add
mov
popa
jle
sbb
loop
jecxz
adc
cmc
jns
mov
dec
pop
or
lret
iret
sbb
sub
mov
test
push
push
push
flds
add
sbb
sbb
das
cs
sub
pop
pop
mov
pop
mov
in
pop
loope
push
popf
enter
mov
xor
pop
push
pop
nop
daa
adc
xchg
fimull
ja
or
lods
imul
stc
xchg
pop
xchg
mov
daa
jns
clc
sbb
fstps
out
cmp
mov
mov
adc
dec
add
add
movsl
pop
mov
jne
cli
xchg
jle
int3
in
or
hlt
add
jne
sub
sbb
cld
into
shrl
mov
loopne
clc
push
sub
xchg
ret
mov
jg
cmp
addl
lods
aaa
inc
inc
cmpsl
stos
aam
clc
push
sbb
faddl
arpl
nop
mov
je
jmp
jp
cmp
xchg
pop
fdivrs
popa
xor
or
dec
gs
movsl
dec
mov
xor
lock
and
gs
leave
mov
mov
hlt
and
inc
or
pop
addr16
enter
fadds
mov
insl
jo
cmp
inc
pushl
mov
loopne
movsl
dec
lock
dec
inc
adcl
loope
mov
or
pop
cmc
mov
scas
sbb
xchg
mov
push
sub
mov
add
bnd
lock
mov
or
movsl
gs
pop
xlat
push
scas
xchg
sbb
mov
mov
jp
mov
jmp
aaa
sub
push
xchg
ds
jo
ret
push
mov
leave
js
adc
jns
mov
inc
dec
add
and
aas
jae
mov
jmp
sbb
scas
mov
iret
fisttpl
es
icebp
push
ret
cld
movsb
jmp
jnp
mov
add
out
leave
iret
inc
frstor
movsb
dec
unpcklps
add
jbe
mov
shll
mov
sbb
jmp
jecxz
sub
push
imul
fwait
jecxz
and
dec
lea
jns
shl
and
daa
popl
pop
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
xchg
fnsave
sbb
mov
call
jge
into
push
and
dec
imul
mov
lcall
ret
mov
in
loop
ljmp
push
push
iret
cmp
cmp
shrl
jecxz
and
push
loope
xor
leave
mov
mov
idivl
in
sahf
mov
sbb
cs
das
sbb
or
rcll
xchg
push
not
xor
or
js
push
imul
dec
int3
inc
cmp
xchg
mov
push
add
and
dec
daa
cmpsl
push
test
sub
test
dec
pop
jge
cltd
xor
sbb
sahf
fisubrl
sub
cmp
test
and
mov
sub
mov
fsubl
sbb
inc
dec
push
fwait
pop
movsb
loop
adc
push
jp
mov
out
dec
pop
mov
add
jmp
mov
and
mov
aam
xchg
dec
stos
mov
loope
sarb
ret
pop
je
js
cmpsb
loop
push
subb
pusha
inc
cmpsb
rcrb
fidivs
mov
cld
push
ret
mov
pop
adc
dec
mov
sbb
jecxz
gs
add
fidivs
rcrb
push
mov
add
jns
int
cmp
std
pop
pop
out
js
daa
in
or
mov
xor
cmpsl
mov
fmul
nop
testl
fcomps
mov
dec
aad
insb
pop
in
sbb
adc
jmp
or
push
adc
out
sub
in
pop
hlt
lret
fwait
enter
rcr
pop
in
push
push
jl
fcomip
gs
mov
pop
mov
lea
sub
sarl
shrb
lods
add
ffreep
popa
inc
xchg
lods
xor
div
cld
xor
cwtl
pop
mov
scas
xor
fsub
loop
mov
hlt
inc
sub
jo
les
scas
add
dec
inc
ljmp
cld
in
sarl
mov
in
and
data16
mov
jo
hlt
mov
jle
mov
fistpll
push
test
jmp
adc
sub
and
sbb
push
test
lds
sbb
cmp
imulb
mov
js
test
outsl
mov
sbb
test
maxps
ret
or
push
mov
mov
shll
mov
sub
gs
decl
mov
inc
loop
and
mov
and
clc
adc
mov
cli
mov
pop
enter
jg
or
aad
sub
pop
inc
repnz
test
pop
fwait
dec
pusha
xchg
mov
cmp
cs
jns
std
mov
mov
mov
and
cmpsl
outsl
in
add
ret
push
imul
test
je
add
fisubrl
mov
push
mov
stos
adc
sub
lahf
ds
pop
pop
cld
jb
in
and
push
stos
je
push
sti
jl
outsl
sbb
std
aas
inc
xchg
fidivrs
inc
push
popl
jno
stc
mov
xchg
ja
jmp
icebp
add
lods
mov
add
xor
dec
pop
mov
xchg
cmp
les
xchg
pop
push
inc
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
or
push
mov
mov
and
repz
out
add
cmp
imul
jns
sbb
jecxz
roll
aam
jno
fcoms
out
jl
mov
insl
imul
dec
push
xchg
mov
insl
out
int3
push
inc
jns
mov
add
popa
sub
rorl
sub
subb
mov
ficompl
inc
xor
decb
lock
xor
dec
cli
iret
dec
inc
jb
jge
scas
mov
subl
add
and
jnp
stc
fmull
out
cli
jecxz
faddl
int
pop
ds
hlt
stos
notb
sbb
xchg
inc
test
icebp
addr16
shr
inc
fstl
icebp
xchg
push
sbb
inc
inc
sbb
or
pop
jb
or
call
cmc
inc
adc
shrb
icebp
xorb
xchg
pop
lret
pop
and
aas
fistpll
les
xchg
cmp
fninit
jp
mov
jg
test
outsb
repz
sahf
andl
inc
or
sbb
leave
sbbl
mov
cwtl
neg
ljmp
in
xor
gs
ret
xor
push
inc
mov
into
jg
push
roll
push
cmp
lret
cmc
push
call
cmpsl
js
mov
js
fbld
mov
ret
out
stos
sbb
mov
cmp
leave
lret
clc
mov
sbb
mov
stos
sbb
push
jge
pop
aam
mov
ficoml
pusha
sbb
ficoms
lahf
pcmpgtb
cmp
insb
or
add
daa
xchg
mov
fcomps
lret
xchg
jns
add
es
sbb
xor
fsubs
jge
cmp
sub
mov
loopne
or
adcb
int3
jl
enter
call
shrb
in
or
mov
xchg
xchg
fstpl
mov
loop
mov
pop
and
cmp
xchg
pusha
scas
cmpsl
scas
lds
movsb
lds
adc
inc
aam
repnz
shl
dec
aam
xchg
fsub
das
ret
cld
pop
sbb
xchg
add
jp
and
cmc
push
lcall
adc
xor
mov
cltd
push
push
pushf
jnp
adc
pop
mov
cmc
add
cmp
push
stc
sub
mov
mulb
push
xchg
adc
dec
jle
test
cli
cwtl
aaa
or
inc
sbb
jbe
fs
jo
in
rcl
sbbl
int3
pop
lds
sbb
cmp
push
jb
outsb
mov
cmpsl
stc
and
in
das
idivl
jo
aaa
pop
out
fisttpll
fnstcw
sub
xchg
movsb
enter
push
js
add
cld
mov
and
test
xchg
or
in
insb
popf
mov
jl
in
rcr
pop
mov
cmp
push
sahf
push
sar
sub
les
shlb
jnp
inc
adc
lea
pop
cwtl
sbb
xor
or
push
hlt
mov
mov
filds
mov
inc
jne
dec
cs
mov
sub
test
cwtl
jecxz
nop
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
js
in
jge
mov
mov
jmp
add
xchg
popf
inc
dec
inc
fwait
sbb
lds
shrb
in
pop
rcrb
mov
fists
lods
mov
or
push
xchg
dec
out
dec
xlat
mov
fidivrs
addl
sbb
mov
lea
mov
add
flds
adc
cwtl
pop
rcrb
pop
inc
rclb
mov
sbb
xlat
cmp
inc
adc
lcall
data16
jg
imul
loop
add
dec
fnstsw
push
scas
nop
adc
xchg
hlt
jb
inc
adc
mov
popa
xor
mov
es
shl
and
les
sti
xchg
inc
nop
jae
xchg
mov
loopne
shrl
insl
wbinvd
out
ss
and
es
sbb
pop
inc
inc
imul
scas
xor
out
and
mov
add
ret
pusha
jb
scas
imul
je
scas
lods
xchg
movsb
in
push
aas
les
mov
pushf
inc
roll
pop
aam
test
std
dec
pop
pop
cmp
movsl
divl
or
insb
mov
mov
lahf
xchg
mov
aaa
repnz
mov
or
xor
dec
add
lds
divl
pop
sub
outsb
push
sub
or
mov
dec
movsw
pushf
aam
xchg
mov
pop
xor
cmp
fidivl
mov
repz
sbb
subl
pusha
pop
cltd
pop
addr16
add
push
stc
leave
push
mov
addr16
adc
xchg
ror
pop
dec
dec
cmp
fistpl
test
adc
adc
push
cmp
and
scas
stc
lea
add
and
push
adc
xchg
inc
mov
clc
arpl
cld
mov
cmpsl
sahf
sbb
ret
and
mov
cltd
jp
icebp
mov
jnp
movsb
xlat
rclb
in
mov
nop
sub
stos
xchg
dec
mov
subl
movsl
cld
rcll
int3
xchg
push
mov
outsl
sbb
out
pop
testl
data16
add
aas
or
cmp
or
imulb
outsl
in
les
aam
cwtl
imul
inc
mov
push
cmp
jp
mov
mov
pop
jmp
inc
mov
mov
xchg
xchg
das
lea
cmp
out
cmp
div
dec
outsl
add
cmpsl
mov
clc
loope
ret
movsb
int3
adc
xchg
mov
sti
out
faddl
aam
dec
push
cmpsl
sub
test
test
loopne
cmpsb
fnsave
mov
jecxz
rcrl
addr16
push
jo
cmp
adc
xchg
in
mov
lock
mov
icebp
les
sbb
cld
cwtl
fucompp
mov
test
leave
xor
rclb
imull
dec
data16
xor
sahf
mov
mov
and
xor
inc
push
cmp
inc
scas
or
lods
bound
mov
out
or
push
outsl
aam
and
mov
hlt
and
pop
cli
xor
xor
push
addb
neg
sbb
cmp
dec
lock
jae
sub
cmpsl
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
mov
mov
mov
push
mov
orb
jle
sub
mov
in
stos
arpl
insl
sub
push
js
sahf
or
fstpt
iret
inc
add
adc
pushf
sub
xchg
scas
adcb
cld
mov
in
scas
xor
jmp
push
sbb
popf
inc
dec
repz
cmp
mov
push
push
adc
jno
jnp
ss
cld
add
sub
andb
xchg
iret
sub
mov
mov
sbb
in
jmp
cmp
int3
cli
pop
addr16
mov
jg
pop
pop
aam
in
cmp
or
lcall
dec
dec
push
add
jno
sbb
jo
sbbb
lea
out
cmpl
stos
mov
mov
push
daa
pop
scas
dec
push
mov
sahf
cmp
movsb
jnp
enter
int3
fisubrl
mov
cwtl
mov
add
aas
inc
jge
lcall
push
jp
movsb
jle
add
gs
sub
gs
sub
lods
in
data16
fnsave
adc
mov
xor
addr16
sbb
hlt
sti
mov
lock
sti
arpl
lods
scas
add
pop
xchg
mov
cmp
ss
mov
push
pop
mov
xlat
jle
jae
push
hlt
xchg
into
mov
mov
adc
cmp
or
jecxz
imul
push
addb
mov
mov
iret
cld
sub
loope
and
stos
mov
sbb
adc
mov
pop
or
inc
popf
test
xchg
stc
inc
mov
inc
mov
lock
mov
pusha
dec
stos
sub
dec
pop
out
xor
mov
or
and
cld
sbb
cmc
xlat
mov
in
mov
inc
sbb
cmp
jnp
mov
rcr
pop
sahf
pusha
cmp
mov
add
add
sbb
sbb
lahf
sbb
shrb
cltd
sti
adc
cmpsb
jmp
insl
inc
pop
cmp
andb
cmp
lock
idivb
and
adc
int3
xorb
pop
sbb
jl
ret
sarl
inc
into
in
cmp
mov
orb
pop
xchg
mov
cli
mov
lcall
outsl
test
int3
mov
mov
jns
lahf
push
push
outsl
add
repz
in
cmovs
or
pop
pop
mov
jge
sbb
mov
jbe
ljmp
dec
adc
cmp
jne
idivl
in
inc
aaa
xchg
inc
mov
imul
push
popa
fnstsw
push
call
pop
insl
pop
lock
or
adc
mov
cmp
cs
and
jg
and
push
add
jo
jge
mov
ljmp
dec
mov
imul
xchg
pop
outsb
stos
psrad
test
sbb
loopne
mov
mov
and
sbb
lahf
sbbb
xchg
mov
push
mov
sub
adc
gs
mov
aam
add
and
mov
or
adc
mov
bound
addl
sbb
mov
push
gs
jg
test
sub
repnz
cmp
xchg
xor
iret
jo
lea
xor
shr
mov
lret
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
cmpl
leave
xor
mov
incl
adc
push
add
outsl
jns
in
sub
pop
cmp
es
icebp
aas
daa
adc
push
call
or
and
in
je
ss
imul
fbstp
and
lds
jnp
imul
roll
shrb
int
int3
adc
call
lods
out
mov
shr
je
pusha
scas
cli
popl
lods
pop
push
addl
add
mov
sbb
mov
mov
inc
mov
bound
fmulp
sahf
rcll
arpl
test
adc
fisttps
sbb
insb
lods
mov
push
fldcw
push
xlat
hlt
jecxz
loop
insb
lods
fimull
scas
insb
aam
push
ds
insb
pushl
sbb
xor
mov
lds
sahf
jns
insb
ret
jp
jg
mov
loope
ret
lahf
and
pop
sar
cld
dec
xorb
fidivs
aaa
add
hlt
dec
sub
ffreep
das
repnz
shll
jne
add
or
scas
push
pop
sbb
sbb
xchg
js
adc
cmp
mov
pop
lods
sbbl
ret
fists
push
add
add
test
jae
pop
mull
cmp
push
inc
sub
fisubrl
push
add
or
ja
pop
fidivs
inc
ds
mov
sub
mov
push
mov
hlt
xchg
repz
fidivrs
fildl
adc
fcmovne
imul
jmp
add
pop
adc
sbb
in
sub
lcall
insl
xchg
aad
popf
and
push
cli
xor
repnz
jge,pt
pop
xchg
shr
mov
idivl
test
pop
stos
dec
insb
dec
daa
aad
sbb
fs
pop
or
lret
sub
pop
mov
inc
mov
dec
lds
lret
js
xchg
cmp
sub
push
xor
lahf
cmpsb
iret
loopne
cs
push
dec
fbld
add
or
xchg
push
ret
jnp
sub
jecxz
mov
sub
xchg
xchg
xchg
pop
mov
inc
cmpsl
mov
cmp
cmp
pop
lret
mov
cmpsb
js
mov
loop
loopne
ljmp
mov
jmp
mov
idivb
mull
jae
test
aaa
cli
movsl
mov
sub
inc
sahf
push
jne
filds
and
stos
ficomps
dec
aad
ret
out
xchg
lods
push
push
jg
aad
jmp
add
push
xchg
loope
push
cli
add
out
mov
sti
jns
mov
jns
xchg
pop
int
bound
xor
mov
stos
aaa
lret
jne
xchg
enter
mov
arpl
or
sub
daa
or
testb
push
inc
in
scas
pop
push
scas
mov
mov
xchg
out
int
inc
dec
mov
sbb
cld
out
and
cmp
in
mov
add
dec
test
test
dec
mov
out
jp
ss
mov
cmc
in
int3
aas
lods
sub
data16
je
pop
push
adc
cmp
ret
arpl
or
out
xor
pop
out
sbb
cmp
mov
out
pop
inc
stc
mov
arpl
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
ss
out
cmp
mov
pop
leave
test
cmp
mov
adc
or
or
ljmp
int3
sbb
push
stos
jne
iret
test
jge
cmp
pop
jnp
jp
into
test
scas
xor
xor
jge
lods
or
shrb
push
add
pop
das
pop
mov
mov
imul
push
add
jge
xor
fnstenv
sub
gs
and
jno
mov
adc
test
stos
mov
xor
mov
inc
les
aam
cmpsb
loopne
cmc
ljmp
out
sbb
mov
ficoml
pop
push
into
pop
test
jae
and
mov
stc
mov
int3
lcall
or
scas
pop
shlb
sbb
or
shlb
push
and
repnz
subl
or
inc
xchg
out
adc
lcall
mov
mov
out
daa
mov
push
sbb
mov
push
sbb
sbb
repnz
cld
inc
gs
mov
push
mov
hlt
mov
shll
pusha
cltd
subl
and
cmp
outsb
scas
ss
adc
jg
popf
jmp
cmc
sbb
movsb
xchg
jae
jecxz
shll
mov
in
jle
ja
mov
aaa
mov
sar
decb
fidivrl
lret
popa
jb
int3
jb
clc
dec
dec
push
jecxz
push
add
sub
jmp
test
xor
dec
data16
loop
nop
dec
lock
frstor
pop
shl
pop
sbb
mov
mov
dec
aad
in
imul
fdivs
dec
jnp
les
inc
subl
add
jp
mov
in
mov
cmp
pop
clc
mov
xor
mov
add
enter
test
scas
movsb
xor
mov
jmp
pop
add
test
xchg
inc
inc
hlt
sbb
fadds
xchg
enter
imul
and
add
aam
out
xor
adc
push
jmp
stos
fadd
and
xchg
dec
push
outsb
dec
dec
push
pop
cmpsb
mov
pop
jp
jecxz
rcrl
or
dec
push
daa
push
xor
jno
mov
pop
dec
push
in
mov
dec
jle
mov
adc
shlb
sbb
mov
xchg
cli
jns
insb
sub
test
and
mov
xchg
push
fmull
dec
pushf
sub
mul
ja
and
mov
lock
mov
fdivp
cmpsl
aad
in
push
dec
cli
sbb
test
stc
mov
jmp
je
loope
scas
stc
jmp
out
push
hlt
and
lret
repnz
xchg
jmp
in
in
pop
pop
repz
clc
sub
bound
lods
mov
fstl
xchg
addr16
js
sbb
mov
add
push
outsb
je
lahf
inc
push
inc
lcall
cmc
mov
pop
cld
fistl
je
ss
inc
xlat
int
rol
das
push
stos
xlat
arpl
sub
data16
in
sub
add
imul
or
outsb
xchg
xchg
push
enter
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
jecxz
inc
mov
mov
loopne
push
push
mov
stos
push
repnz
xchg
jae
add
push
xchg
cmp
dec
adc
jne
sti
push
sbb
xlat
inc
cmp
add
add
mov
jg
pushf
cmp
sbb
dec
push
adc
scas
hlt
jno
nop
push
stos
jge
push
fistps
mov
pop
sub
push
lret
stos
outsl
ss
icebp
into
call
xor
push
repz
mov
addr16
das
cmp
add
cmp
fcom
scas
into
push
testl
mov
add
push
pop
mov
adcb
adc
out
sbb
sbb
mov
sbb
sbb
inc
sbb
int3
or
test
xchg
sbb
lds
test
add
movsl
icebp
adcb
fincstp
stc
jae
fisubs
into
add
xchg
or
pop
jns
iret
loope
insl
cmpb
aas
lods
cmp
ljmp
and
into
push
sar
stos
mov
out
pop
shr
dec
mov
xchg
pop
paddusb
pop
fmull
jbe
mov
add
xchg
pop
out
dec
repz
testl
mov
es
mov
dec
push
sub
xchg
jle
sub
shl
ret
xchg
or
pushf
andl
ret
negl
or
adc
data16
fwait
orb
push
fadds
js
in
mov
xor
popf
fbstp
pop
insl
or
mov
ret
fldenv
xorb
jb
lods
sub
loop
mov
aam
xor
jbe
arpl
paddsw
jb
mov
xchg
out
sub
mov
sbb
jle
push
test
jmp
dec
jnp
fucomp
dec
xor
mov
pop
mulb
lret
jnp
movsb
cmpsb
in
sbb
xor
cmc
push
insl
xor
lods
unpckhps
int3
pusha
pushf
enter
jo
in
ds
push
xchg
rcrb
fisubs
orl
call
dec
jge
mov
jg
sbb
testl
std
sub
xchg
test
mov
add
push
xchg
incb
jns
or
mov
daa
pusha
mov
adc
dec
repnz
lahf
lsl
jae
jnp
aad
or
pop
test
push
test
ja
fxch
stos
das
ljmp
test
test
iret
or
clc
adc
fstps
ficompl
test
push
cmpsl
push
add
hlt
test
test
mov
test
push
arpl
ret
and
inc
jg
add
arpl
notl
cmpsl
and
orl
ljmp
es
out
fistpll
mov
inc
or
adc
bound
inc
adc
ret
xchg
push
jecxz
popa
fwait
mov
adc
cs
enter
pop
dec
and
pop
rcrb
js
xlat
xor
imul
dec
jecxz
push
or
repz
push
int3
xchg
imul
stos
dec
sub
sbb
jnp
mov
call
pusha
es
insl
mov
mov
inc
cmp
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
int3
lods
push
test
cmpsl
sbb
dec
and
cmp
sbb
js
stc
in
push
mov
mov
insb
jmp
mov
jne
push
adc
sub
in
fdivr
imul
mov
cmp
daa
test
add
dec
adc
mov
adc
out
lret
xchg
add
inc
test
test
ret
stos
out
ss
xchg
xlat
pop
and
roll
sahf
cli
cmpsb
test
inc
pop
mov
notl
adcl
mov
mov
ds
std
xchg
shlb
xor
sbb
cld
addb
mov
fwait
adc
data16
and
pop
in
dec
mov
dec
call
lds
jbe
mov
jno
xchg
jb
sbb
cmp
push
mov
in
sbb
imull
pop
push
out
popl
xlat
cmp
mov
mov
int3
jg
and
push
xchg
fwait
jne
out
scas
xchg
rorl
cli
push
add
cmp
lods
dec
jns
mov
cmpsl
mov
sub
adc
hlt
jnp
popa
cmp
inc
or
adc
pop
movsb
neg
or
jo
lfs
cltd
and
mov
mov
test
sub
call
lcall
loope
jae
jl
push
xchg
jns
test
lods
jp
adc
movzbl
pop
or
xchg
addb
xlat
scas
add
xor
loope
adc
lods
xlat
ja
push
xchg
mov
gs
jo
bound
mov
icebp
mov
ljmp
lahf
mov
and
jne
popf
jmp
push
pusha
mov
mov
pop
inc
nop
cwtl
out
sbb
imul
jle
and
mov
movsb
pop
scas
xchg
cli
or
popf
adc
nop
cmp
lcall
add
dec
stos
fnsave
decb
neg
pushf
sub
mov
sti
lods
and
xor
xor
data16
xor
inc
clc
add
add
movl
movl
jmp
pop
daa
fcompl
mov
aad
mov
mov
mov
lods
js
lock
or
dec
xchg
stos
movsl
xchg
cmp
addl
adc
lcall
enter
jnp
mov
iret
cld
es
lds
xor
sub
cmp
repz
shrl
and
mov
jmp
mov
fnsave
ljmp
pop
dec
mov
icebp
lds
pop
pop
push
out
mov
dec
loopne
push
mov
xor
ficoml
sbb
shll
out
pop
dec
orl
add
cmpsb
lock
cmc
mov
jns
push
mov
fsqrt
in
sub
les
fwait
imul
das
mov
lock
dec
xor
shlb
fs
inc
cmp
test
out
push
int
mov
fildl
fldt
xor
xor
aam
sub
pop
mov
xor
mov
xchg
add
mov
push
xor
ds
pop
jmp
ret
push
jl
test
inc
jae
inc
dec
jg
jbe
mov
inc
cmpsb
scas
incl
or
cmp
mov
jo
and
dec
push
aas
in
or
jne
sub
and
in
cli
adc
cmp
mov
leave
test
pop
mov
out
jmp
les
loop
add
das
xchg
push
je
imul
ja
gs
adc
inc
aad
lods
pop
aam
sub
push
and
mov
stc
fisubrl
aad
pop
iret
scas
push
pop
cmp
js
adc
dec
je
jb
push
in
subl
push
movsl
adc
or
sub
and
mov
fidivrl
xor
fildl
add
ficoml
incl
into
push
arpl
add
outsl
cmp
jbe
mov
xor
mov
scas
or
jmp
popa
jnp
inc
xchg
jnp
push
rorb
adc
xlat
pop
xor
addr16
or
sysenter
or
mov
cs
out
int
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
arpl
mov
jle
and
in
add
stc
xorl
leave
fcoms
xor
test
add
and
data16
das
xchg
ud0
cs
and
mov
outsl
popa
cltd
sub
cld
xchg
jle
mov
rorb
sub
call
mov
dec
push
lods
mov
faddl
sub
imul
inc
sarl
js
das
xchg
and
jmp
xor
xor
jo
mov
jge
and
stc
popf
iret
fs
shrl
outsl
addr16
sahf
jmp
sti
xor
dec
mov
xor
adc
push
hlt
sub
sarl
sbb
addr16
pop
jecxz
fcomps
pop
hlt
push
jno
xchg
jbe
jbe
and
movsb
in
or
rcr
push
inc
mov
loope
cld
dec
or
in
pop
repnz
dec
shrb
mov
mov
xchg
in
and
test
xchg
pusha
outsl
iret
iret
cmp
shrb
mov
fistpll
ja
dec
mov
out
sbb
pop
push
aad
push
or
mov
pop
jb
push
aad
dec
bound
insl
divl
ljmp
add
or
test
mov
fdivl
repnz
out
push
dec
inc
gs
mov
fimull
repz
adc
ja
stos
call
lret
jmp
movsl
cli
ret
jg
and
sub
cmc
pop
je
pop
adc
jns
ss
shr
sub
adc
pop
les
push
orb
aas
das
subb
repz
xchg
fs
aad
cs
push
out
push
inc
or
pop
mov
jl
movsb
xchg
push
data16
inc
out
shll
jmp
cmc
sub
jl
adc
fadds
cmc
sbb
jb
js
das
nop
test
lock
jne
xor
rcll
or
cmp
xchg
test
mov
jno
test
or
push
lret
mov
sub
push
popf
mov
sbb
mov
dec
or
mov
iret
enter
mov
mov
loope
sbb
subb
xchg
cltd
adc
dec
or
dec
or
dec
sub
sub
push
addr16
mov
aaa
mov
neg
test
les
add
imul
mov
dec
out
push
sub
fld1
insb
leave
mov
das
mov
test
mov
je
cmc
lret
sub
sti
aad
cld
fildll
lds
jbe
or
jbe
pop
adc
repnz
mov
fucomip
pop
or
or
or
dec
cmpl
sub
push
sbb
movsl
ret
xchg
repz
ds
arpl
insl
je
in
push
cmp
lods
cs
test
outsl
and
cmp
ret
enter
ljmp
dec
stos
push
sti
xor
call
mov
dec
adc
inc
mov
push
jmp
xlat
xchg
push
lcall
fists
sahf
scas
pop
mov
mov
xchg
sub
mov
push
idivl
and
mov
addr16
int3
repnz
fldt
jl
cmp
test
movsb
add
mov
mov
or
call
fmuls
fisubs
fs
mov
or
and
xlat
cld
adc
sub
insb
push
xchg
dec
clc
sbb
cmp
hlt
popa
das
inc
sbb
ret
push
cmp
outsb
mov
or
xchg
imul
scas
iret
repnz
mov
enter
sub
xor
gs
shr
rolb
xor
rorl
fimuls
das
push
fdivl
test
adc
sbb
xor
inc
ss
sub
imul
ret
mov
popf
test
mov
push
loop
xlat
dec
xchg
sti
jge
nop
les
xchg
adc
scas
jbe
repnz
mov
push
mov
push
jecxz
xor
xchg
jb
dec
pop
popa
push
daa
pop
adc
sarb
mov
and
pop
adc
mov
sub
icebp
push
push
mov
xchg
cmp
int
lret
in
mov
out
cli
repz
pop
test
adc
imul
mov
aad
xlat
push
ja
mov
mov
push
ret
mov
cmpsl
outsb
test
add
pop
popa
leave
jmp
jns
inc
outsb
test
shll
sbb
lret
lods
mov
out
popa
mov
test
sbb
inc
push
adc
in
inc
jno
cli
xchg
lret
loope
pusha
das
xchg
rolb
sbb
dec
addr16
dec
es
and
mov
mov
in
mov
stc
push
xchg
imul
push
gs
test
mov
pop
sub
rcll
pop
mov
mov
xchg
push
int3
cmp
inc
ret
stos
andl
pop
dec
lret
test
xchg
scas
push
fstl
repnz
jl
mov
jbe
in
shlb
cmp
inc
jmp
out
lea
dec
fs
cmp
je
pop
jne
mov
sbb
and
mov
faddp
stc
stos
push
add
jecxz
js
addl
jg
jne
add
jne
ror
and
leave
fildl
lahf
mov
out
add
xchg
mov
not
sbbl
sub
pop
out
xor
xor
add
or
dec
mov
add
xchg
popf
shrl
inc
idivb
sbb
fisttpl
hlt
aaa
aad
inc
stos
dec
into
xor
dec
lds
and
les
adc
jle
jno
push
insl
pop
cmp
movsl
cs
scas
insl
push
aad
cltd
fwait
out
xor
mov
fmull
push
cmc
sbb
pop
xchg
mov
cmp
movsl
push
int
pop
push
pop
mov
cli
notb
sub
sbb
jmp
cmp
mov
in
inc
inc
lcall
dec
jbe
add
cmp
mov
mov
es
and
enter
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
ss
mov
mov
ja
test
jp
push
in
cwtl
movl
dec
arpl
add
int3
dec
lret
sbb
cwtl
mov
inc
shl
cmpsb
push
movb
xor
cltd
mov
sub
in
int3
loope
push
jbe
loop
push
mov
nop
sbb
jp
ret
scas
test
and
sahf
imul
aad
cmp
mov
pop
xchg
xchg
pop
xchg
fwait
and
loopne
xchg
jl
push
aas
xchg
call
xchg
or
pop
aaa
cli
xchg
inc
lret
xchg
sti
mov
cmp
pushf
orl
dec
or
repz
movl
and
push
or
negb
jo
sub
jl
adc
push
mov
loopne
es
sub
and
movsl
push
pop
jecxz
pop
fcompl
mov
shl
addr16
fnstcw
jge
cmpsl
dec
jno
mov
mov
adc
into
jb
add
jae
in
shll
or
push
mov
inc
jge
sub
mov
cli
repz
xchg
fsubrl
adc
mov
call
mov
mov
vcmpsd
pop
adc
mov
mov
and
jp
jp
jmp
pop
movsb
lcall
adc
or
and
adc
push
push
jg
add
mov
shll
and
push
or
mov
out
inc
sahf
in
push
ret
add
ret
jne
push
mov
lahf
movsl
adcl
divb
cmp
xchg
scas
inc
fidivl
loop
rorl
xchg
inc
scas
fmuls
daa
rcr
add
daa
addb
cwtl
xchg
jg
jge
add
add
xchg
mov
subl
mov
popf
pop
cmp
stc
imul
mov
xchg
sbb
pop
stc
ja
xor
add
dec
adc
jmp
stc
sub
cmpsb
test
lods
and
inc
imul
ret
dec
cmc
xor
sub
mov
mov
fbld
xchg
and
cmpl
shll
mov
push
sbb
repnz
jne
js
xchg
cmpsl
aam
mov
inc
xchg
ja
test
test
push
or
add
mov
mov
fs
popa
leave
movsb
into
jo
orl
fisttps
lahf
test
or
negl
pop
mov
adc
pop
int3
mov
ljmp
ficomps
and
mov
push
ljmp
nop
sarb
add
ret
sbb
add
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
sti
mov
ret
pusha
fs
fsubr
sbb
cmp
mov
lds
jp
mov
add
roll
outsb
int
pop
outsb
into
sub
mov
out
adc
pop
pop
push
scas
and
nop
fs
push
ljmp
jge
sarb
and
jne
out
and
push
ret
cmp
xor
add
insb
adc
lods
inc
subl
fimuls
mov
int
sahf
sub
hlt
aam
pop
push
lock
imul
xor
lock
lods
call
loopne
loop
mov
push
mov
notb
and
fcoms
jb
adc
std
ljmp
cmpsb
lcall
pop
push
shl
sub
nop
inc
cld
iret
cmp
je
pop
ds
int
mov
shlb
icebp
or
push
lcall
push
fidivl
sbb
mov
test
adc
or
int3
addb
or
mov
das
mov
dec
and
lret
incl
xchg
mov
loope
pop
pop
pop
pop
mov
int
jnp
inc
in
fwait
orb
pop
and
in
dec
rclb
xor
and
dec
mov
jg
push
dec
out
lcall
push
sbb
mov
jecxz
in
jns
xchg
mov
test
fists
test
adc
mov
mov
mov
xchg
add
and
stos
aaa
adc
sub
repnz
mov
das
xor
push
test
dec
inc
xchg
dec
dec
pop
sub
lds
rcll
test
mov
sbb
ljmp
push
outsb
movb
inc
mov
imul
xchg
dec
mov
xorl
sti
inc
mov
pop
mov
push
arpl
push
ret
gs
sbb
cmc
cmp
lods
cmp
jge
mov
mov
lods
mov
mov
loop
cmp
xchg
adc
xchg
mov
out
push
cmc
mov
inc
or
sahf
xchg
mov
sbb
push
jmp
lret
idivl
mov
loope
dec
and
and
lcall
in
dec
mov
lods
or
mov
in
adc
cld
out
into
pop
jno
out
add
inc
ret
addr16
lea
dec
lret
lret
popf
mov
dec
data16
adc
test
mov
sbb
mov
dec
mov
sub
inc
jb
lret
jmp
xchg
sbb
xchg
push
add
inc
cmc
xchg
xor
inc
push
push
push
jo
aad
or
jbe
mov
xchg
push
xor
add
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
iret
imul
insb
mov
mov
mov
in
es
lods
outsb
imul
not
mov
add
pop
mov
call
negl
scas
loopne
pop
push
push
ljmp
jecxz
add
push
fwait
in
push
popf
pop
inc
push
inc
mov
iret
loope
adc
testl
cmp
mov
lret
mov
xchg
lahf
aad
inc
dec
push
stc
icebp
or
dec
cmp
andl
test
add
je
hlt
fimuls
iret
loopne
imul
push
dec
and
inc
cs
shrl
xorb
cmp
xchg
pop
pop
sbb
push
call
inc
test
xchg
push
push
jecxz
xchg
mov
mov
es
mov
lcall
rcll
pop
pop
adc
xchg
add
into
mov
jne
fdivrp
lcall
push
jle
fidivs
cltd
rolb
dec
lock
das
adc
sub
xchg
and
mov
ljmp
xor
mov
aaa
scas
in
jmp
idivb
ds
pop
xchg
xor
sbb
cmp
or
fists
inc
bound
sahf
lret
pop
insl
push
out
add
outsb
movsb
out
xchg
jmp
ja
jb
lret
push
fistpll
mov
lret
mov
sahf
mov
rorb
jae
adc
inc
xchg
fcoml
ss
xchg
cli
movsl
out
mov
xor
mov
lds
or
int
aaa
add
sub
inc
js
add
mov
mov
pop
leave
mov
test
cmp
mov
sub
mov
mov
mov
adc
fldenv
ljmp
lds
jbe
pop
add
xchg
mov
inc
fsub
push
in
xor
sub
nop
shr
cmp
addr16
out
repz
push
das
mov
push
xor
bound
nop
push
cmp
rolb
adc
loopne
pop
xor
shl
push
repz
mov
or
push
mov
adc
insl
sub
mov
push
pop
jno
loop
mov
mov
rol
movsb
or
xchg
sbb
sub
neg
loope
or
mulb
cli
ret
test
lret
cmpsb
jb
fdiv
notb
push
dec
aam
sar
mov
pop
pop
das
call
lods
roll
ss
daa
and
out
jno
nop
rolb
pop
mov
mov
jp,pt
jns
mov
or
fnstsw
jmp
mov
dec
jle
ds
jb
xlat
add
incl
in
push
push
test
push
push
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
push
sahf
pop
jb
mov
xchg
fldl
imul
dec
fnsave
xorb
shlb
rcrb
ljmp
lret
cld
cmp
cmp
sbb
push
add
jb
add
cmp
jo
and
dec
cld
outsb
cld
pop
ja
fistps
xchg
sub
adc
or
iret
mov
or
mov
cmpb
nop
addr16
dec
cmp
jno
jae,pn
ss
sub
mov
or
in
xor
aas
or
or
stc
cmp
inc
out
ror
sbb
add
pop
jns
clc
stos
or
mov
xchg
xor
mov
in
sti
pop
sub
mov
xor
mov
pop
fnstenv
jp
repnz
dec
faddl
sub
lret
lods
push
xor
xor
mov
ljmp
dec
fucompp
gs
out
popa
dec
outsb
repz
in
xor
push
test
jmp
fcomp
notl
test
int
push
jnp
outsl
jb
adc
cmp
in
fs
cmp
mov
dec
imul
cli
dec
mov
inc
jmp
out
lret
cltd
rcr
mov
or
adc
sub
insb
cwtl
mov
cmp
rorb
sbb
add
mov
mov
cmp
loope
lock
sub
xchg
out
out
enter
cs
xchg
and
imul
bound
mov
jl
hlt
fimull
and
cwtl
mov
jle
sbb
mov
cli
jnp
call
rcl
enter
movsl
gs
div
inc
fnstenv
adc
in
dec
mov
je
inc
rcrb
adc
sbb
ret
mov
mov
or
push
stos
and
inc
loope
inc
and
fcomi
sarl
hlt
out
push
cmpl
jne
rorb
cmp
and
jnp
mov
mov
movsl
mov
jns
les
in
int3
sahf
xchg
cmpb
movsb
loop
adc
js
and
fcoms
or
and
jmp
mov
imul
adc
arpl
fwait
cmpsb
mov
dec
ret
inc
stc
sti
or
hlt
test
and
jbe
sbb
jl
mov
push
or
xor
push
jp
in
pushf
sbb
jecxz
sub
inc
inc
mov
xlat
add
pop
inc
sbb
mov
mov
sub
lret
es
jle
pop
mov
sub
jp
pop
xlat
pushf
xor
and
cmp
push
ret
adc
jmp
xchg
adc
sti
sbb
push
or
shl
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
inc
repz
xorl
test
jle
je
mov
call
out
stos
subl
lret
nop
cs
pushf
adc
insl
mov
cmp
jae
nop
pusha
lods
push
jns
adc
and
cmp
pop
into
pop
sbb
xor
insb
and
ja
or
cwtl
mov
push
inc
push
push
push
pop
test
or
xlat
in
fidivs
mov
out
lea
jb
xchg
inc
div
jecxz
dec
out
mov
add
inc
cld
add
mov
jb
lods
scas
xchg
dec
int
push
fisttpl
arpl
xchg
dec
mov
mov
sbb
jg
mov
add
out
pusha
dec
jne
cmp
les
mov
int3
addr16
arpl
loopne
in
sub
movsl
pop
mov
push
or
push
jle
xor
dec
inc
mov
aaa
orl
aam
loopne
out
xor
adc
add
jge
enter
pop
daa
and
mov
sbb
and
sub
adc
xor
jo
popa
cs
dec
daa
lcall
add
mov
inc
arpl
pop
movsl
mov
andb
test
adc
out
xchg
xor
inc
and
jnp
sub
nop
xchg
xchg
and
jb
and
sub
add
pusha
xor
adc
out
popa
loop
jecxz
sbb
sbb
mov
sbb
push
imull
enter
loop
fists
fnstenv
xchg
cmpl
nop
mov
imul
inc
in
pop
js
rcll
lahf
loopne
pop
jmp
pop
dec
or
add
xchg
gs
jl
jae
bound
dec
fsubrp
dec
ds
mov
and
mov
jp
lret
std
pop
adc
shlb
xor
push
push
sbb
int3
sub
xchg
popa
imul
sbb
mov
pop
arpl
divl
add
cli
xor
aad
or
loope
jge
push
fdivr
pop
jae
or
pop
jecxz
adc
xor
xchg
jbe
fs
popf
in
repnz
and
push
jnp
push
pop
dec
into
in
mov
jmp
or
cltd
pop
stos
orl
mov
imul
outsl
arpl
mov
ret
sbb
out
mov
pop
mov
test
push
sub
pop
cmp
sbb
rolb
sub
inc
mov
xchg
ljmp
movsl
or
cmp
adc
fcompl
mov
in
cmp
frndint
aas
jo
cmp
jp
outsl
ret
mov
shlb
xlat
cmp
sbb
add
loope
inc
push
out
mov
xchg
mov
jp
cmp
out
ds
and
add
das
xchg
mov
mov
jae
data16
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
add
mov
les
les
aam
loop
jbe
xor
jb
cmp
cmp
pop
iret
xor
outsl
popl
xor
or
ja
sahf
ret
jae
pop
jb
int3
outsb
mov
je
or
lcall
pop
movswl
inc
pusha
int3
pop
idivb
popl
movsl
adc
jo,pn
inc
jno
cld
movsl
aaa
jne
leave
inc
adcl
mov
jo
pop
inc
mov
inc
mov
sti
icebp
scas
and
cmp
cmp
cltd
mov
cmpsb
mov
adc
insl
pop
lock
inc
push
testl
cld
mov
addb
call
mov
clc
add
push
jns
sub
nop
divl
dec
es
sbb
cmp
hlt
cmp
jle
dec
test
jno
pop
nop
in
in
pop
inc
outsl
adc
scas
test
imul
jmp
push
ret
in
dec
pop
mov
setnp
jo
jge
adc
push
lods
lahf
stos
rcll
mov
in
xchg
push
jne
aaa
adc
fdivrp
sahf
and
sub
fistps
std
or
mov
mov
cmpl
loope
arpl
outsb
and
mulb
xchg
gs
mov
inc
stos
mov
test
lcall
push
iret
cmp
idiv
enter
mov
lods
push
ret
xchg
imul
cltd
mov
lahf
das
std
test
stc
xchg
sbb
repnz
pop
popf
lods
in
in
dec
pop
xchg
repz
xchg
xchg
cmpsb
fadds
into
repnz
jmp
mov
sbbb
cmc
add
pop
lock
ja
adc
arpl
testl
loope
fnstcw
jecxz
mov
adc
jl
mov
test
in
mov
gs
gs
js
rcll
sub
cwtl
int3
push
idivb
inc
test
je
mov
lock
push
dec
xlat
or
adc
xchg
or
fs
push
inc
test
and
mov
jo
push
movntq
xchg
out
push
dec
out
add
add
fildll
loope
rclb
icebp
orl
jns
sbb
loop
sbbb
loope
push
fbstp
into
dec
or
fnsave
std
jne
push
imul
jno
sub
sbb
mov
aaa
imul
mov
mov
sbb
jno
push
sbb
lret
sbb
add
mov
sub
inc
gs
sub
and
outsl
push
pop
or
mov
xchg
adcb
adc
push
cli
outsl
pop
mov
loop
daa
jmp
je
mov
pusha
add
idiv
fimull
clc
gs
cld
outsb
fmull
jg
std
test
jle
add
lods
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
push
hlt
iret
in
xchg
mov
sub
mov
jmp
into
dec
fsubp
movsl
arpl
jo
ja
and
cltd
cmp
push
mov
pushf
dec
cld
and
cmp
ret
fs
jecxz
push
imul
pop
aam
xor
icebp
inc
scas
cmp
xchg
cmp
leave
out
pop
push
push
adc
and
shlb
mov
hlt
sub
pop
cwtl
std
stos
xchg
aas
pop
and
shll
add
loopne
xchg
adc
test
js
in
js
pop
jns
sub
sbb
fnstcw
dec
add
enter
dec
sub
pop
insl
xchg
lods
das
inc
mov
xor
and
lret
sub
inc
test
fldl
lcall
mov
adc
dec
push
lret
xchg
mov
test
mov
cmp
cmpb
add
and
mov
scas
sub
inc
in
and
add
cltd
cmp
mov
xor
jle
nop
sbb
cmpsb
or
testl
sarb
mov
dec
pusha
sub
outsb
jl
je
add
gs
jae
inc
roll
shrl
cli
jl
adc
gs
jae
add
cld
paddsb
xchg
inc
push
insb
stos
or
dec
add
adc
mov
mov
lock
add
cmpsb
jo
push
stc
add
cmp
sub
out
jo
cmpb
jmp
mov
pop
iret
rclb
pop
inc
add
push
mov
cmp
push
lret
push
jbe
sub
pop
dec
jg
push
js
shll
popa
pop
cmpsl
xchg
arpl
xchg
decl
cmp
popf
xor
pop
ljmp
cltd
mov
bound
jae
or
inc
mov
ret
hlt
xorl
lods
pop
fadds
cmp
cltd
int3
inc
icebp
sti
insl
add
test
inc
sub
push
xchg
dec
adcb
in
ss
add
pop
je
std
inc
jl
rcrb
lahf
jge
sbb
fdivs
xor
clc
jecxz
outsb
stos
adcb
mov
or
cmp
pop
repz
jae
gs
xor
dec
sbbl
jo
adc
stos
pusha
mov
push
fadds
jge
jmp
aad
out
xor
fucomip
dec
clc
sbb
fwait
iret
mov
push
jae
push
xchg
mov
sbb
dec
outsb
ja
mov
hlt
or
lods
mov
sbb
into
xor
imul
test
loop
cmp
mov
in
xlat
mov
mov
in
mov
cmp
push
sub
inc
adc
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
fists
in
les
les
enter
insl
cmpsb
mov
addr16
in
sti
in
xor
dec
jbe
nop
dec
jne
leave
lods
adc
add
mov
mov
jbe
aaa
fucom
loop
in
call
arpl
outsb
xor
inc
add
jle
nop
cmp
jb
fidivs
xor
pusha
mov
pop
push
adc
sbb
scas
jecxz
mov
cmp
inc
pop
sub
movsb
cld
bound
cmpsl
mov
outsl
out
sbb
leave
fwait
xor
lahf
sbb
jns
xlat
mov
bound
cmp
push
fwait
call
mov
popa
sarb
sub
mov
imul
xchg
sbb
pop
cs
mov
sub
stc
cmp
mov
push
in
xchg
cld
bound
fucomp
pop
cli
hlt
cmp
xchg
mov
sarl
adc
pop
imul
test
insl
sbb
mov
pop
push
mov
out
add
fcmove
jbe
popf
mov
icebp
sbb
in
mov
push
sub
xchg
push
in
les
pop
xchg
xor
xor
cmpsb
leave
fisttpll
enter
data16
into
mov
cmp
xchg
mov
test
bound
dec
xor
test
mov
cmpl
mov
stos
mov
mov
scas
es
lods
insl
jns
sbb
mov
push
enter
ss
mov
xor
sub
xchg
push
ret
inc
cld
pop
or
cmp
nop
lretw
inc
lcall
pop
dec
test
loop
iret
pop
shrb
inc
mov
mov
mov
xchg
movb
inc
adc
aas
push
cmp
or
mov
arpl
jge
decl
aaa
nop
or
sbb
mov
std
xchg
mov
cmpl
fs
or
inc
test
pop
mov
aad
ret
gs
jge
pop
or
fsubrl
call
xor
iret
iret
dec
insl
icebp
xor
stc
sub
mov
inc
mov
nop
inc
jbe
popf
mov
mov
mov
out
and
push
inc
out
notb
gs
push
lods
push
dec
gs
test
dec
jns
fcom
ftst
rclb
and
dec
aas
jae
mov
cs
rolb
jg
addr16
mov
dec
jmp
cwtl
lcall
int3
or
add
fists
cmc
fimuls
mov
or
or
in
cmp
pop
pop
sbb
inc
or
inc
adc
sbb
push
or
popa
imul
mov
pop
add
xor
dec
add
outsl
out
sbb
inc
mov
js
push
sub
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
sub
dec
xchg
mov
mov
xchg
adc
jmp
push
jnp
imul
inc
jmp
pop
mov
pop
scas
or
in
push
adc
mov
shl
pop
rorl
fsubl
enter
enter
push
mull
mov
insl
mov
and
out
cld
add
dec
imul
lret
mov
push
je
xor
ror
or
hlt
dec
bound
jecxz
test
gs
in
push
cmp
add
inc
iret
dec
pop
hlt
jb
bound
xchg
adc
push
adc
push
pop
ret
cwtl
mov
hlt
lret
push
or
out
sbb
cli
cmpsb
les
dec
xchg
inc
cld
ss
adc
aas
and
in
aad
icebp
imul
or
ret
hlt
mov
jge
xchg
ljmp
or
call
adcl
xor
jns
dec
lds
lea
mov
push
aam
mov
leave
push
ds
inc
xor
aaa
or
xor
lahf
stos
in
addl
xchg
in
sbb
std
push
sahf
jno
mov
mov
popa
cmp
or
dec
sub
add
xchg
ret
cmp
sbb
int3
scas
push
adc
and
mov
jbe
fmuls
add
xor
fisubs
sbb
scas
into
inc
cwtl
std
add
and
pop
in
das
fs
xchg
and
mov
jbe
sbb
xchg
inc
xchg
loope
xor
loop
pop
shlb
shrl
pusha
push
mov
xor
andb
pushf
xlat
mov
divb
psubb
lea
repz
add
lret
lods
aad
xchg
xlat
mov
or
pop
call
jecxz
jb
xchg
test
xchg
fsubrl
jmp
push
and
mov
or
mov
xor
stc
pop
inc
les
cmp
imul
mov
xor
or
add
lds
fs
push
ret
mov
fstpl
cmp
and
add
jl
pop
dec
rcrb
cmc
sub
lahf
test
inc
dec
xchg
fsub
sbb
pop
cmpsb
cli
pop
dec
fistpl
int3
cli
pop
jne
rcrl
sbbb
or
lahf
mov
inc
lcall
cmc
jne
fnstcw
mov
cs
or
add
pop
popa
jnp
jo
sbb
mov
push
push
lods
cmpsl
ret
push
jg
fiaddl
xor
pop
pop
fsub
cwtl
jo
add
idiv
loop
loope
lret
jnp
imul
iret
xor
sbb
loop
push
les
push
lret
ja
push
sub
out
mov
test
ljmp
jg
in
test
lret
lcall
dec
lret
das
mov
cli
jmp
add
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
jb
xor
jnp
mov
mov
add
mulb
shr
xchg
pop
rcr
aad
mov
sbb
lods
mov
pop
push
or
dec
adc
jle
outsb
shrl
jae
or
xor
div
xchg
cmpsl
loop
push
and
in
icebp
add
inc
inc
push
xor
jmp
sbb
mov
in
push
sub
sbb
push
push
fmulp
mov
imul
das
mov
cmp
jne
out
daa
xlat
filds
aaa
jge
mov
inc
push
cmpsl
mov
xchg
aad
pusha
imul
shrb
dec
cmp
dec
mov
push
in
push
jne
add
push
adc
sbb
jle
push
dec
in
and
jecxz
push
inc
pop
movsl
fmuls
and
sub
or
stc
imul
push
or
mov
push
mov
movb
pop
push
addr16
pop
jg
and
mov
or
aas
ja
imul
mov
cmpsb
xchg
rcr
mov
or
mov
inc
scas
xchg
fcmovb
mov
stc
arpl
adc
stos
cs
mov
mov
jo
cltd
rcll
jae
fnstsw
sti
notl
sub
dec
mov
leave
xor
je
lahf
xchg
subl
mov
and
add
pop
pop
cmc
nop
inc
push
das
or
dec
out
sbb
fucom
ds
scas
lret
call
fidivs
popf
dec
lods
mov
sub
mov
test
lea
out
jne
and
cld
or
mov
es
adc
icebp
in
pop
inc
nop
or
mov
mov
xor
das
and
addr16
sub
xchg
jmp
aas
xchg
mov
ljmp
imul
js
jl
imul
sbb
mov
mov
sbb
mov
lcall
fwait
das
out
sti
mov
enter
add
push
fcoms
mov
xchg
rorl
add
push
loop
das
lahf
pushf
sbb
addps
xchg
pop
push
push
mov
jns
mov
aas
fwait
mov
xchg
scas
push
neg
test
inc
fidivrl
addb
inc
pop
aaa
push
push
jg
mov
mov
sbb
mov
mov
icebp
adc
test
mov
push
jnp
or
or
divl
je
cmp
sub
std
clc
cmpsl
movsl
testb
sbb
lods
pop
out
inc
movsb
movsl
cmp
test
jns
jnp
lcall
jl
or
jne
ffreep
adc
pusha
out
push
dec
lea
outsb
idiv
and
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
jle
stos
sahf
mov
mov
les
pop
ret
lods
lahf
jnp
push
cmp
out
cltd
mov
int3
inc
mov
pop
ror
ljmp
sub
ljmp
faddl
mov
mov
xor
mov
dec
xchg
xor
in
movsw
lahf
mov
ret
mov
in
jb
mov
insl
pushf
outsl
sub
daa
or
dec
mov
in
into
clc
or
lcall
je
xor
push
in
mov
or
in
hlt
dec
pop
rclb
mov
aas
lods
adcl
jne
and
or
cld
adc
gs
cmpsl
loop
in
jmp
gs
es
iret
out
mov
push
sub
push
pop
sbb
jno
mov
cmp
and
lret
push
cs
das
cwtl
shl
in
cld
shlb
and
adc
and
shl
jle
out
mov
jecxz
aam
push
jle
cli
push
leave
sahf
lidtl
or
sbb
aam
pop
cwtl
sbb
rorb
mov
pop
pop
cmp
jg
test
mov
mov
push
xor
inc
push
mov
mov
dec
fisubl
pop
in
enter
mov
sub
aam
insl
scas
and
pop
pushf
test
xchg
jmp
enter
fimuls
xchg
test
lods
lcall
leave
fsubl
add
push
loop
dec
lds
pushf
test
adc
jle
lret
mov
arpl
mov
jge
fs
daa
jp
hlt
repz
pop
xor
adc
lcall
pushf
sub
in
fisubrl
fstp
pop
jae
inc
mov
test
xor
sahf
pop
sbb
and
stc
sbb
out
test
pushf
push
xor
add
leave
pop
subl
mov
daa
xor
mov
lcall
pop
mov
push
into
inc
pop
shl
scas
and
push
jo
imull
imul
insl
cmp
cmpsl
fsubp
jg
cmc
in
leave
ret
mov
mov
scas
arpl
cmp
cs
xchg
loope
enter
pop
mov
xor
xor
in
int3
mov
or
xchg
lahf
xor
bound
out
stc
ret
dec
pop
cwtl
cmp
aas
outsl
sbb
daa
addr16
out
xlat
ror
out
add
mov
test
rclb
jnp
mov
and
aas
filds
gs
pop
fwait
daa
inc
mov
pushf
ja
nop
add
pop
sbb
lock
inc
lcall
cmpsb
ror
pop
ror
and
je
daa
adc
imul
fsubs
or
adc
addr16
mov
int3
inc
sbbl
pop
pop
push
ret
fsubrs
jmp
nop
push
push
int
or
bound
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
fwait
sub
mov
dec
subl
add
mov
xor
add
fsts
pop
jmp
add
test
mov
sti
sub
adc
cli
mov
and
pusha
pop
outsb
add
aam
loopne
loopne
mov
nop
into
rcr
fdivl
xchg
sbb
xchg
ror
push
dec
cld
fstpl
cmp
and
xchg
lods
popa
dec
lret
sub
mov
addl
pop
test
jle
test
dec
mov
mov
shl
xchg
add
jecxz
mov
std
xchg
mov
inc
repz
inc
and
dec
mov
mov
jbe
push
jb
sub
mov
mov
mov
dec
ret
imul
jmp
jbe,pn
fs
test
test
clc
jg
scas
xchg
sub
pop
push
inc
pushf
jecxz
and
sub
adc
push
or
nop
loopne
cmp
push
adc
data16
fsts
xchg
push
add
test
fwait
pop
cld
aad
pop
mov
pop
lods
loop
add
repnz
cmp
cmp
call
imul
mov
and
sub
fidivs
imul
or
sub
mov
xchg
sbb
std
xchg
push
adc
testb
inc
sub
mov
and
and
out
ret
cmp
lret
cmp
mov
stos
xchg
dec
fwait
sub
pop
jne
mov
fimull
bound
lock
loope
in
cmpsb
test
and
in
ret
xor
leave
mov
cmp
cmp
cmpsb
aaa
out
out
fstps
je
fnstenv
push
pushl
cmpsl
sarl
mov
cmpb
fucomip
push
mov
push
sub
loop
cmc
push
lods
xor
rorl
movsb
fadds
jg
inc
mov
dec
jne
orb
sbb
rorl
pop
out
mov
les
not
js
mov
sub
lds
test
decb
mov
movsl
xchg
mov
lcall
xchg
loop
jnp
lods
adc
fisubrs
inc
inc
leave
in
xchg
xchg
xor
xchg
jp
mov
ss
mov
aam
in
xor
test
mov
popl
loope
mov
mov
xchg
adc
cmp
addr16
sub
lds
push
imul
mov
stos
xor
pop
jmp
leave
ret
cmp
aam
ret
mov
les
in
sub
push
out
dec
in
std
jo
fldcw
mov
xor
jbe
pop
or
pop
dec
lods
repz
cs
aaa
xchg
push
add
sub
xor
add
call
mov
mov
or
or
mov
mov
bound
push
sbb
push
inc
out
loop
xchg
out
sti
push
fisttps
int
push
fsts
push
sub
xlat
fsubr
jle
test
pop
pop
sub
mov
adc
fmull
adc
fldenv
bswap
xor
push
inc
ds
lods
or
movl
mov
add
sahf
push
sbb
in
out
mov
fcoml
dec
mov
mov
xor
ret
mov
lret
leave
dec
cmp
lret
outsb
dec
pop
lods
inc
cmp
mov
movsb
stos
cmc
sbb
out
mov
mov
pop
stc
dec
and
enter
cli
dec
or
fstpt
shlb
pop
mov
mov
shl
pop
lcall
dec
shrl
sub
adc
xchg
xor
pop
mov
aaa
inc
and
xor
mov
cmp
dec
cmp
int
mov
sbb
ret
add
shlb
mov
jmp
xchg
mov
lret
int3
xchg
mov
cs
or
pop
mov
test
mov
dec
inc
rcrb
mov
jne
jecxz
xchg
jae
into
cmpsb
iret
and
fidivl
add
dec
imul
test
mov
lret
fmull
add
cmp
dec
sti
shlb
or
dec
mov
test
dec
jbe
std
inc
xchg
out
push
out
mov
or
mov
cmp
aad
popf
cmc
inc
fcomps
pop
push
movsl
insb
addr16
mov
out
pop
inc
xor
jl
sub
pop
dec
sub
mov
repz
ja
hlt
orb
mov
pop
cmp
mov
xchg
je
sbb
iret
into
mov
clc
mov
cmp
daa
repnz
inc
dec
pop
mov
adc
rclb
shl
lds
xor
xor
cld
xor
imul
clc
add
and
cmc
push
push
std
out
hlt
pusha
mull
jl
lret
outsb
and
jo
pop
pop
js
xor
adc
lret
push
xchg
mov
xchg
addl
mov
xor
cmp
nop
sbb
call
in
imul
sub
out
lcall
scas
inc
cs
cmc
pop
cmp
jne
sbb
xchg
ret
pop
rcl
pop
cmp
rclb
pop
pop
jmp
call
lahf
push
lret
and
mov
dec
stc
xor
jae
xchg
mov
and
call
mov
movl
scas
lret
jo
add
faddl
lahf
out
mov
jle
fdivs
wbinvd
sbb
call
in
push
pusha
rolb
js
add
adc
adc
pop
idivb
add
movl
mov
xor
test
jmp
jno
mov
fs
sub
xchg
pop
iret
nop
cmp
mov
mov
inc
sbb
adcl
pop
loope
mov
xor
add
call
lods
popa
mov
xchg
in
xchg
add
daa
pushf
pop
mov
gs
sub
pushf
adc
add
les
addr16
jp
jge
stc
jne
leave
clc
inc
adc
inc
adc
sub
mov
adc
notb
movsb
jne
lahf
push
inc
jmp
es
fwait
dec
lods
jbe
shll
imul
add
push
mov
dec
call
mov
mov
test
imul
sub
jg
or
cmp
cmp
sub
in
test
mov
movsl
pop
gs
rcr
movsl
shlb
out
mov
xor
jg
sub
push
sub
jecxz
das
popf
adc
or
scas
rclb
push
js
sarl
jb
dec
sarl
test
js,pt
or
lcall
imul
mov
aam
cwtl
outsb
jg
add
test
dec
xchg
xchg
fsubl
jbe
push
cmpsb
sub
xchg
adc
arpl
out
mov
add
ret
add
mov
insl
stos
inc
inc
fwait
sbb
adc
lods
insl
add
push
fwait
jbe
fcoms
xor
sub
jecxz
lea
pushf
sub
jbe
pop
pushf
mov
or
mov
scas
lcall
lahf
sbb
jb
ret
dec
mov
fcoml
adcb
mov
jl
cmp
mov
xor
pop
and
fmuls
xchg
arpl
mov
jge
lods
ret
std
xor
fwait
stos
sarl
out
test
sbb
fs
cmp
cmpsb
xor
lods
iret
fwait
sahf
and
ja
insl
pop
sub
aad
jbe
popa
imul
dec
xor
sti
mov
cld
sbb
shlb
and
mov
add
sbb
mov
dec
dec
mov
stc
call
add
and
sub
std
addr16
sub
mov
fcomps
mov
and
in
imul
jno
lcall
bound
or
lea
mov
gs
inc
enter
sbb
sub
test
or
into
test
cli
lret
or
inc
lea
mov
pop
imul
jecxz
push
xchg
ret
subl
dec
push
or
adc
sub
pop
pushf
xor
xchg
or
fildl
jmp
sarl
stos
mov
xor
outsl
jp
push
repnz
inc
sarb
cmpsb
aad
adc
in
in
mov
cs
out
jl
dec
data16
mov
and
je
insl
sbb
bound
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fstpl
ja
shrl
mov
out
je
mov
sbb
mov
cs
enter
add
mov
mov
out
mov
stc
mov
sarb
aad
mov
fmull
push
xor
push
mov
fildll
sbb
mov
cmp
in
rol
mov
ss
mov
push
cmp
fistl
inc
and
jl
xor
jne
mov
sarl
mov
aam
enter
into
fistl
mov
sub
jl
sarb
jae
mov
pop
inc
push
xchg
adc
daa
or
adc
and
push
aam
pop
mov
sub
in
mov
add
xchg
mov
sub
xor
dec
or
add
xor
stos
ja
cmp
jbe
negl
sub
mov
sbb
or
and
outsb
daa
jp
xor
ja
jbe
jno
stos
push
shr
push
orl
mov
adc
and
inc
and
pop
push
cmp
jle
mov
mov
idivb
jp
sub
pop
hlt
incl
dec
adc
or
mov
ljmp
pop
dec
push
outsl
notl
sbb
jge
xor
pop
adc
sbb
push
and
sbb
das
cmp
or
je
cmp
push
rolb
sub
mov
insl
xchg
ret
add
daa
sbb
mov
ja
sbbb
cmp
leave
mov
fstpl
sbb
movsb
adc
sbb
mov
in
xor
bound
inc
aas
repnz
leave
xchg
imul
jne
cmp
push
xor
rolb
or
xchg
jne
test
ds
ds
push
out
sti
movsl
adc
xchg
dec
xchg
jae
xor
jns
das
xor
push
sarl
jecxz
add
jbe
mov
mov
lret
cld
fs
jnp
mov
add
and
pop
xchg
fcmovnbe
fidivrl
push
test
xor
add
clc
cmp
jp
mov
and
push
leave
adc
movl
jns
jmp
je
lret
and
test
or
pusha
shll
icebp
scas
clc
cmp
inc
fwait
jmp
xchg
inc
dec
cmc
cmpsb
and
mov
scas
js
dec
add
sub
xlat
inc
xchg
adc
and
mov
mov
pop
or
push
mov
dec
clc
dec
mov
sti
mov
subl
xchg
js
inc
iret
push
mov
xchg
sub
orl
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
iret
pushf
mov
mov
ret
test
mov
pop
sbb
cmp
push
inc
jb
inc
pop
cmp
fsub
mov
mov
cmc
sub
cmp
mov
pusha
xor
dec
xchg
jns
test
out
andb
bound
lret
sub
and
sti
ret
pushf
push
int3
or
inc
mov
pop
or
jbe
xor
movsb
mov
rcll
in
fidivs
xchg
fs
jb
push
mov
pushl
mov
push
fcmove
xchg
and
sub
mov
jne
push
mov
popf
push
mov
iret
jbe
fwait
pop
add
sbb
xorl
pop
jae
cmp
clc
int3
jecxz
mov
pop
popa
stos
rdpmc
sub
in
in
dec
add
push
mov
jmp
enter
cltd
inc
insb
push
loopne
push
pop
mov
sub
push
cld
or
ja
jecxz
in
mov
pop
xchg
lock
and
dec
fiaddl
ret
les
inc
mov
popa
adc
rorb
lcall
jl
push
add
xor
or
arpl
orb
std
mov
dec
xlat
inc
icebp
enter
out
mov
inc
ja
adc
mov
in
aas
scas
xchg
out
paddw
rolb
aad
ret
call
es
xchg
repnz
data16
dec
mov
inc
jae
sbbb
dec
mov
sbb
lcall
push
and
cmpsl
lret
jmp
jnp
insl
mov
fistpl
cmp
repnz
push
rcrb
imul
cmp
lcall
scas
push
arpl
shlb
out
dec
call
sub
int
inc
and
add
aad
int3
stos
sbb
cwtl
cld
sub
lock
lock
int3
divb
xlat
dec
mov
xlat
or
scas
ljmp
inc
jnp
jbe
aad
xor
clc
xor
movsl
mov
add
in
call
mov
mov
cmp
push
ja
inc
into
add
jmp
sbb
popa
xchg
jns
int
xor
push
xor
je
dec
inc
cltd
xlat
lds
mov
fildll
push
or
std
jns
push
pop
xchg
inc
cmp
jae
mov
mov
ss
and
or
out
std
add
dec
add
popa
lret
pop
jns
leave
and
xor
cmp
mov
ja
adc
aas
into
sbb
popf
cmp
push
into
test
dec
mov
fistpl
subb
adc
dec
les
and
lods
sbb
imul
pop
movsb
dec
push
sub
lcall
or
inc
mov
hlt
push
xchg
jbe
daa
dec
fidivrs
mov
imul
mov
mov
jo
cltd
inc
lods
and
sbb
jecxz
push
mov
push
jmp
sahf
pop
add
pusha
into
sub
inc
in
js
mov
jae
or
jns
lds
loopne
icebp
cmpsb
ret
sub
adc
fdivr
xor
sbb
aaa
aad
xlat
jne
sbb
mov
es
cs
mov
jecxz
rcrb
xchg
mov
sub
test
sbbb
enter
mov
jle
mov
mov
pop
stc
ficoml
in
cld
bound
js
inc
push
or
insb
sub
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
mov
jbe
xchg
mov
fstps
xor
adc
stc
push
fisubs
or
sub
jae
jmp
insl
popa
push
imul
in
lret
orb
push
lahf
imul
add
movsl
scas
xor
sbb
loope
inc
mov
fdivr
pushf
or
clc
mov
ficoms
mov
cmpsb
inc
push
push
pop
pop
xchg
jns
test
sbb
mov
cmp
jnp
xor
das
jo
push
gs
sub
test
adc
jmp
mov
push
enter
movsb
addr16
mov
push
and
inc
or
jbe
pop
push
cmpsl
insl
int
or
pushf
and
test
je
cmp
andl
pop
fldl
out
lcall
pop
sbb
movsb
fs
arpl
dec
mov
adc
inc
xchg
pop
cwtl
sarl
xor
das
xchg
mov
pop
mov
lcall
call
fsts
pop
adc
or
jl
jmp
inc
adcb
inc
mov
xchg
cltd
repnz
mov
xchg
lods
movsb
mov
pop
push
jle
mov
stos
mov
jbe
mov
xchg
clc
mov
dec
loope
dec
cmp
ret
cmc
popf
mov
ds
mov
xor
enter
sahf
aam
ret
jl
std
mulb
pop
sub
dec
inc
sub
outsl
test
inc
dec
test
sarb
dec
mov
fmuls
push
inc
stc
ret
filds
pop
mov
ljmp
sbb
pop
cltd
inc
pusha
adc
repnz
jo
add
sbb
incb
cmpsl
add
dec
cwtl
nop
jb
gs
ja
push
js
jbe
push
jge
insl
mov
inc
repz
or
aam
sbb
sbb
fcmovnu
xor
jecxz
pop
adcb
xor
nop
jg
push
imul
inc
inc
aas
xlat
add
mov
pop
xchg
xchg
xchg
aam
cmpsb
pop
in
lahf
mov
js
gs
pop
push
pop
icebp
dec
mov
add
in
fstpl
mov
pop
sahf
mov
mov
sub
outsl
xchg
cli
shr
lcall
dec
popa
adcb
sarb
push
mov
xchg
jmp
mov
out
or
dec
xor
insl
jae
inc
dec
aam
test
stc
pop
in
jge
jg
cmp
and
lcall
cwtl
decl
aas
sti
pop
adc
js
repnz
repnz
dec
cwtl
sti
clc
loopne
mov
sahf
andb
add
test
test
cmp
dec
push
movsb
outsb
add
mov
xchg
mov
cmovb
inc
lods
jmp
jmp
mov
mov
mov
jbe
pop
xorb
movl
jle
sbb
inc
ffreep
mov
xor
pop
icebp
ficoml
push
scas
scas
jo
mov
mov
sbb
xchg
or
xor
push
out
mov
or
xchg
sub
ja
push
adc
in
enter
sti
scas
sub
out
and
sub
call
rcll
mov
not
mov
cmp
insb
inc
arpl
dec
cwtl
jmp
fistpl
movsl
addr16
cmp
sub
cmc
or
leave
rcrl
mov
mov
out
and
xor
and
dec
testb
push
dec
mov
repz
cmpsb
mov
aas
setp
in
out
fidivrs
push
xchg
stc
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
cmpsb
test
mov
mov
xchg
and
dec
adc
je
jl
jnp
add
data16
push
pop
push
call
hlt
ljmp
sti
popa
or
sub
push
lock
dec
pop
std
lods
cltd
add
adc
and
jle
inc
stc
das
lods
mov
stc
ja
loopne
outsb
test
pop
jmp
adc
mov
push
insl
sbb
dec
inc
shlb
es
dec
add
shlb
ja
ss
mov
ja
lret
jp
mov
dec
xchg
mov
aas
jge
pop
pop
lea
ss
sub
dec
into
mov
sbb
pusha
cltd
outsb
jne
addr16
std
mov
cli
jnp
sbb
daa
mov
mov
dec
and
xchg
push
lock
mov
mov
mov
adc
mul
pop
add
test
pop
jbe
jno
mov
movsl
push
in
cmp
fistpl
mov
scas
stc
popf
dec
leave
in
dec
pushf
add
jl
cmp
rorl
xor
xchg
or
clc
sbb
jno
sub
xchg
xor
mov
jl
pop
mov
dec
into
into
jne
mov
movsl
test
arpl
scas
jge
nop
iret
lea
cltd
fisubl
push
or
das
scas
push
pusha
inc
mov
out
icebp
jae
out
jnp
and
stos
fwait
cmc
lods
add
xchg
rorl
push
repz
aam
test
aas
xor
xchg
xor
insb
sbb
aas
imul
je
pop
inc
negl
adc
sbb
int3
dec
push
push
lahf
jge
lds
pop
popf
dec
push
mov
mov
movsl
pop
insl
jmp
xchg
jmp
xchg
lock
jle
jecxz
xchg
repnz
pop
cmp
add
mov
cmp
dec
dec
outsl
das
push
adcl
ja
cmp
adc
stos
mov
dec
leave
push
inc
daa
pop
sbb
mov
ja
mov
dec
fisttpl
gs
cmc
xlat
sbb
jge
jo
out
or
xor
nop
int3
push
jnp
in
fadd
mov
aad
rcrb
adc
dec
loopne
out
adc
adcb
dec
cwtl
dec
adc
push
repz
lds
mov
and
mov
test
mov
bnd
xlat
pop
les
insl
mov
loope
xor
jae
sub
movsl
outsb
in
pop
loop
xchg
or
hlt
nop
or
push
aas
sub
push
gs
dec
pushf
push
out
flds
fiadds
push
pushf
fsubs
rorb
jo
lds
bound
cmc
fisubs
push
js
outsl
jl
loopne
xor
out
shl
jo
mov
lods
fldenv
std
inc
fldcw
sti
call
sub
or
std
push
xchg
inc
sbb
ds
mov
cmp
jb
rcrl
rcrl
les
xor
push
push
std
mov
mov
stos
jb
arpl
and
je
scas
enter
clc
xchg
pop
pop
mov
outsl
xor
icebp
jbe
data16
jl
sub
push
les
lcall
jb
bound
cmpsb
out
jbe
addb
mov
xchg
ret
cmp
pop
fwait
insl
adc
cmp
and
push
mov
clc
inc
mov
mov
or
dec
clc
call
push
fisttpl
xchg
mov
fistpll
es
lcall
dec
iret
mov
inc
jg
and
aas
jg
mov
adc
jmp
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
inc
jns
nop
or
sarb
mov
testl
orl
xchg
pushf
xor
movlps
mov
jns
push
sub
addl
mov
rorl
dec
or
ret
inc
ljmp
in
mov
mov
sub
inc
data16
sbb
dec
pushf
push
push
cwtl
inc
xchg
fs
cwtl
outsl
or
xor
jecxz
push
or
ds
xchg
out
int
push
fmull
rcrl
lret
jle
dec
lret
call
adc
inc
ret
ss
dec
sub
mov
mov
mov
mov
repz
xor
popf
and
idivl
outsb
xchg
sub
test
and
lock
fsts
jb
jl
or
dec
das
adcb
add
clc
mov
andl
adc
mov
cmp
adc
fiadds
shll
adc
movsl
daa
and
adc
aas
push
jecxz
loopne
and
test
pop
pop
mov
pop
frstor
or
lret
aas
int3
pop
in
or
and
arpl
popa
or
ror
pop
inc
xchg
repnz
pushf
jmp
mov
xchg
ret
push
mov
fildl
dec
mov
cmpsb
cmp
ja
sbb
sbb
xchg
push
dec
cmp
push
and
add
adc
testb
inc
push
mov
bound
mov
shlb
pushf
cmp
add
push
mov
jmp
push
mov
idivl
jmp
xchg
negb
or
mov
sbb
sbb
cmp
cs
xor
addr16
lahf
jbe
sbb
cmpsb
pop
js
test
mov
mov
mov
cli
mov
repz
jmp
das
std
lods
std
pushf
hlt
inc
ret
int
out
adc
repnz
test
idivl
lods
inc
xor
aam
imul
sbb
dec
rclb
xchg
dec
movl
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
inc
iret
nop
test
sarb
hlt
inc
mov
cwtl
call
aam
int
xchg
push
fimull
orl
rorl
aas
mov
add
sub
or
xor
mov
movsb
scas
sti
pusha
cmp
fidivrl
push
sbb
packsswb
cmp
or
xor
ss
iret
movsb
test
sbb
dec
push
sete
pop
imul
jae
adc
jle
mov
sbb
cwtl
aas
fs
ds
rclb
sbb
repnz
mov
dec
mov
aam
sti
cs
pop
out
incl
test
movsl
clc
iret
and
xchg
push
rcl
pop
test
shll
repnz
test
xchg
xor
jne
sahf
adc
mov
adc
fs
adc
fstp
sub
fldt
dec
sbb
aam
ja
std
xchg
call
or
enter
xor
sub
add
in
pop
mov
dec
test
mov
enter
shl
sbb
cmp
mov
jbe
rorb
xor
push
fs
push
lahf
repz
pop
and
mov
cld
dec
xor
cmp
push
or
jecxz
xchg
out
ret
push
sar
imul
pop
or
mov
pop
dec
dec
mov
cwtl
notb
je
jecxz
repnz
and
mov
inc
or
cld
int3
mov
inc
mov
sub
mov
cltd
loope
mov
pop
jno
aaa
jae
hlt
in
jnp
sbbl
enter
nop
test
lods
jge
push
or
pop
cli
out
cmp
push
fcoml
out
push
enter
sub
cmp
cmpsb
xor
push
xchg
add
dec
mulb
subl
or
jae
jno
jmp
pop
idivl
movmskps
dec
mov
imul
inc
in
cmc
push
fsubl
shr
popa
dec
push
cltd
sbb
push
inc
test
and
push
push
pop
mov
mov
sarb
xlat
mov
or
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
push
ret
sti
faddp
mov
iret
in
xchg
sbb
jns
insl
xor
mov
ror
push
mov
pop
pop
clc
outsb
pop
test
jnp
mov
adc
xor
movsb
jmp
and
jmp
xor
push
add
out
inc
pop
mov
xor
push
adc
ja
out
mov
add
push
icebp
out
clc
pop
and
dec
sbb
je
clc
cmp
push
adc
lret
xchg
xlat
xor
out
and
mov
cli
pop
sub
pop
jo
repnz
jg
mov
insl
jne
mov
cmp
lret
addl
das
mov
lcall
hlt
xchg
std
jmp
mov
adc
int3
dec
dec
jae
incb
lea
mov
cli
mov
lods
cmp
mov
inc
imulb
xchg
sahf
pushf
sub
iret
andb
movsl
imul
xchg
jl
fs
xchg
hlt
sub
jecxz
popf
xchg
loope
or
pop
es
pop
xchg
fs
lods
aam
int3
sbb
jg
add
out
mov
cmc
test
je
notb
jns
push
adc
pusha
adc
repz
pusha
xor
and
sbb
outsl
jecxz
and
sti
clc
add
lock
imul
sbb
sbbl
dec
sub
ljmp
jns
loopne
fdivr
call
adc
push
cs
inc
hlt
xchg
data16
mov
jge
daa
ja
push
inc
jg
jae
push
lcall
mov
jp
add
or
lock
mov
dec
sbb
mov
dec
mov
mov
cmc
xchg
add
sbb
xchg
leave
sub
test
xlat
cmpl
adc
rolb
or
adc
scas
dec
pushf
leave
loopne
in
xchg
jmp
jnp
popl
cli
stos
lahf
mov
cmpsb
fldcw
and
lods
adc
or
jecxz
jno
sub
jge
mov
mov
fldcw
inc
jle
scas
cld
fsubs
dec
mov
adcl
jmp
and
fstl
jb
sahf
nop
adc
iret
jae
sarb
ret
rol
push
sub
mov
daa
inc
add
adc
xchg
cmp
sarl
fs
fxch
shrb
pop
inc
js
testl
mov
js
fisubrl
shl
xlat
lret
sub
data16
pop
xchg
cwtl
push
fadds
inc
sbb
jb
inc
add
mov
add
movsb
xchg
push
aam
scas
setno
lret
pushl
lret
push
adc
jbe
rorl
adc
jge
mov
jo
jl
je
out
sub
arpl
mov
jae
pop
lods
es
jp
int
cmpb
int
and
dec
stos
in
dec
mov
scas
std
mov
pop
lea
gs
mov
pop
sahf
out
out
adc
add
jns
xor
inc
into
roll
lcall
jp
xor
adc
test
sahf
lods
push
dec
mov
push
ja
push
fadd
cmc
xchg
in
push
loopne
jae
mov
sete
pop
and
pop
add
xchg
mov
jl
and
mov
loope
sub
mov
in
mov
jb
mov
cmp
jo
inc
xchg
jmp
xchg
out
fisttps
xchg
mov
sub
fcom
jns
jecxz
cmp
inc
ret
inc
popf
test
cs
add
fsts
test
das
or
ja
mov
test
test
jns
push
fisubrl
sbb
popf
mov
push
fcmovnb
xorb
mov
pop
push
mov
cmc
std
cmp
pop
push
sbb
sub
jo
test
out
lcall
or
adc
xchg
iret
sbb
add
adc
add
cmp
mov
add
cltd
call
xchg
mov
cmpsl
test
cmpsb
lret
sub
roll
xchg
mov
icebp
movsb
or
xor
fstpl
mov
in
sahf
add
rcll
xor
je
sbb
add
aam
add
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
and
jmp
sarb
pop
and
cmp
inc
addr16
ss
sahf
divl
je
cmp
jle
or
aaa
fcomps
movsb
cmp
rcl
jb
xchg
or
mov
pop
dec
andl
in
lds
pop
adc
jno
into
jno
movsb
out
je
and
sbb
pop
xchg
movsb
inc
mov
cmp
xor
adc
dec
into
imul
sub
xor
popf
or
pop
orl
or
add
jl
sub
push
in
dec
or
xor
cmp
idivl
dec
mov
xchg
add
in
jg
popa
dec
push
popf
nop
rorl
push
mov
pop
pushf
pop
cwtl
addr16
mov
inc
or
mov
cmpsb
pop
pop
call
pop
push
mov
sub
sbb
or
jnp
or
aas
andl
arpl
mov
push
call
xchg
push
daa
clc
cmp
rclb
xor
pop
mov
arpl
dec
sub
or
mov
jo
push
in
lea
iret
mov
or
xchg
push
iret
imull
xchg
not
mov
mov
iret
push
pop
loope
sub
dec
daa
imul
xor
orl
add
push
imul
mov
repz
pop
inc
popa
setp
jle
fs
jb
lret
and
or
popa
and
in
jbe
imul
jmp
sbb
int
in
xchg
cmpsb
mov
gs
fidivrl
out
fwait
mov
in
push
inc
push
pop
ds
inc
shll
out
repz
dec
pop
movsl
xchg
mov
pop
inc
leave
outsb
enter
cmp
outsl
out
in
sbb
test
les
inc
push
xor
insl
lret
push
jmp
ljmp
xchg
aaa
imul
dec
add
sub
xchg
scas
mov
fcomps
cwtl
add
add
add
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
jne
inc
frstor
mov
jbe
fmuls
fchs
dec
add
es
out
retw
dec
aad
loop
push
add
sub
xchg
fs
push
add
lea
push
sar
and
ds
xlat
aaa
cld
mov
jecxz
sbb
jbe
andb
sub
cmp
testl
scas
mov
dec
fstpl
sub
fwait
inc
mov
dec
xchg
insb
shlb
insb
rorl
push
cmp
out
mov
sub
out
fidivl
jge
inc
add
movsb
popf
xchg
mov
lds
pop
pop
dec
mov
fs
sub
addl
sub
imul
mov
inc
imul
xor
arpl
orb
cltd
rcrl
test
xlat
push
arpl
fdivr
sub
not
adc
sub
popa
rolb
adc
sub
xchg
xchg
sahf
in
inc
push
mov
dec
jo
sub
and
int
mov
vmread
lea
test
mov
cltd
lds
out
cmp
push
push
in
jmp
movsl
hlt
mov
dec
in
jnp
std
out
sub
dec
mov
out
subl
into
xchg
pop
dec
push
scas
add
mov
les
or
out
sbb
cmp
xor
mov
push
int
scas
xchg
and
cmp
loope
addb
pop
repnz
arpl
dec
inc
push
out
clc
adc
cli
xchg
add
and
test
out
mov
fmul
popa
sub
mov
jbe
cmpsb
inc
jo
mov
in
lock
push
aam
xchg
mov
imul
mov
add
pusha
mov
insb
pop
out
or
test
mov
cli
and
in
into
sub
xor
or
jno
std
mov
rol
mov
pushf
xchg
aaa
dec
in
divl
add
mov
movsb
ret
pop
mov
popa
insb
mov
pop
jno
inc
bound
test
in
cmc
pop
clc
cmc
pop
mov
divb
inc
inc
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
rcr
out
sarb
push
xor
in
test
hlt
mov
stos
push
pop
iret
shll
aaa
nop
pop
inc
lods
lret
xchg
popa
mov
sbb
aaa
pop
int3
mov
jae
pop
pop
into
iret
cmp
xor
frstor
sti
lock
fidivs
repnz
shrb
pop
cmpsb
dec
aad
dec
xchg
dec
sbb
xor
dec
lock
and
js
out
cmp
cmpsb
mov
add
sub
mov
int3
jne
in
in
ss
mov
lods
push
add
pushl
push
mov
cli
mov
out
fwait
push
inc
rcl
insl
pop
xlat
cs
push
in
adcb
add
adc
addb
fs
or
test
xor
pop
pop
std
jb
test
in
aam
incl
cltd
mov
add
cld
xor
scas
sub
xchg
push
mov
pop
adc
dec
sub
push
aad
or
and
movsb
push
xchg
dec
aas
scas
cld
loope
gs
inc
pop
xchg
pop
jbe
shr
rorb
data16
mov
out
dec
add
dec
outsw
adc
test
fwait
cmp
out
stc
cli
cmp
data16
xchg
push
inc
mov
lret
lret
and
push
scas
mov
in
fcoms
ljmp
bound
adc
loop
jbe
xor
push
out
cltd
xor
mov
pop
jae
sub
mov
dec
sbb
push
js
xchg
in
sti
jns
xor
mov
add
lret
ss
xor
push
imul
dec
mov
xchg
add
das
mov
push
test
insl
cli
pop
leave
mov
ss
loope
cli
jl
pop
mov
or
popf
in
mov
adc
lods
jmp
xchg
gs
ret
xchg
fwait
lds
cltd
lcall
inc
subl
fldt
adc
cmpsb
add
mov
lea
mov
daa
pop
testb
rorb
adc
out
pop
jo
lcall
movsb
outsl
test
sub
add
jno
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
rcll
sarb
shll
mov
add
lods
gs
inc
fbstp
cs
xchg
movsl
xor
mov
dec
lahf
sub
cmpsl
mov
mov
fwait
dec
nop
ja
dec
pop
cmpsb
jg
lds
daa
mov
and
test
mov
test
out
rol
inc
push
sbb
les
imul
stos
sarb
push
jne
test
xor
scas
jmp
xchg
cmp
sub
fwait
stos
es
mov
nop
fcoms
jg
inc
cmpl
adc
movsl
sub
and
mov
in
mov
mov
cmpsb
jle
jmp
mov
jno
enter
fisttpll
cmpsl
loopne
mov
mov
test
and
cmp
out
sbb
push
addr16
fcmovnbe
jbe
fistpll
rolb
cltd
icebp
mov
movsl
push
jl
jle
xchg
xchg
rcl
xor
mov
cmp
idiv
xchg
jp
int3
ljmp
sbb
js
jns
std
jmp
ja
jecxz
mov
cmp
pop
sub
jge
lods
repnz
xchg
leave
fcmove
fsts
mov
xchg
and
jnp
cwtl
xor
sub
mov
cmp
clc
push
jecxz
mov
fiaddl
xor
adc
xor
push
push
testb
popf
addr16
xor
xchg
xchg
xchg
aam
cmc
sub
add
add
mov
or
repnz
out
mov
fbstp
mov
jge
rcrb
xchg
sti
jno
mov
stc
iret
add
add
test
fcomps
sub
mov
ds
mov
sbb
mov
mov
sbb
sti
ret
inc
cmp
fwait
aam
push
ds
mov
sahf
dec
cwtl
call
xchg
out
popa
cmp
insl
pop
push
or
dec
addr16
add
lret
and
xchg
dec
dec
notl
dec
xor
rcll
jnp
push
xlat
add
scas
int
dec
inc
dec
inc
iret
or
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
inc
mov
test
mov
mov
shr
adc
dec
or
icebp
test
mov
ror
jae
lahf
shll
lock
inc
imul
sub
jno
inc
pop
enter
stos
mov
jns
cmp
ffreep
sarb
fidivrl
je
jb
nop
sbb
push
mov
and
icebp
xor
ja
sti
test
adc
sbb
or
mov
mov
stos
dec
pop
rclb
js
add
call
push
fldl
fsubs
scas
jmp
loopne
popa
push
scas
roll
xchg
mov
mov
in
outsb
ret
ds
pop
daa
sti
xchg
jnp
or
mov
inc
add
mov
outsb
push
out
addr16
test
xchg
sbb
frstor
imul
jle
dec
xchg
pop
mov
push
inc
dec
and
cmova
xchg
lahf
daa
push
mov
test
cmp
dec
cld
subb
or
xor
dec
mov
js
sub
jecxz
push
testb
push
sub
xor
test
inc
mov
lcall
pop
dec
scas
push
enter
insb
lods
je
mov
scas
dec
xchg
add
decl
or
daa
aad
or
and
push
pop
add
sbb
inc
xchg
movsl
in
cmp
repnz
jae
or
bound
and
mov
inc
xor
stos
cmpsb
popf
sub
stos
adc
repz
rol
xchg
int
movsb
repnz
pop
add
jns
pusha
pop
pop
test
mov
in
mov
ljmp
sub
inc
lret
popa
pop
inc
test
shl
movsl
les
mov
imul
inc
popa
mov
push
pop
mov
mov
lds
js
xchg
in
fs
std
lcall
inc
push
adc
out
xor
std
lds
dec
xchg
imul
sub
lret
in
xor
lods
push
sbb
sbb
repz
ficoms
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
roll
mov
push
jmp
test
pop
xor
mov
call
lods
pop
jle
retw
repz
mov
pop
sbb
jp
xchg
ds
mov
sbb
and
scas
push
jae
push
sti
push
repz
cmp
fwait
pusha
jg
pop
sub
mov
out
pop
pop
ja
push
and
repnz
fst
cld
mov
std
jnp
pop
cmc
cld
mov
mov
mov
xchg
mov
dec
cmp
movd
ret
mov
mov
pop
fnstsw
or
adc
je
jno
pop
js
and
movsl
aaa
pop
aas
push
xor
push
jns
das
es
mov
mov
mov
push
adc
xchg
xor
mov
dec
bound
inc
popf
popa
sub
jns
push
sbb
fs
andl
push
mov
push
dec
jl
fs
dec
jmp
leave
jmp
fcmovnb
adc
insb
fsubl
pop
stos
adc
push
dec
sbb
repnz
cmp
cmp
inc
rolb
jmp
shlb
popa
mov
fadd
jg
cld
xchg
pop
cmp
add
push
aas
push
mov
jle
mov
in
pusha
mov
or
jg
ja
lahf
add
lahf
dec
xor
pop
push
cwtl
hlt
sub
jge
cmpsb
addr16
nop
mov
cmp
repnz
push
lea
cmp
adc
cmpsb
lods
dec
and
pop
test
push
sub
or
add
inc
sbb
insl
and
mov
mov
clc
and
int3
cmpsl
and
ficoms
loope
xchg
sub
xchg
movsb
lock
ds
adc
mov
sbb
lret
adc
sbb
lock
xor
fcoml
mov
xchg
sbb
cmp
and
fildll
scas
stc
dec
ficomps
mov
xor
pop
ret
pop
in
fdivs
sub
xchg
sahf
fistpll
loopne
adc
dec
push
shlb
fstpl
and
add
add
enter
add
add
fimull
test
sbb
add
push
and
xor
shld
jmp
lret
repnz
xchg
xor
add
movsb
mov
ret
ljmp
loop
outsb
addb
movsl
sbb
jge
push
jle
insl
shrb
sbb
shl
push
push
cmp
jl,pt
jl
xor
cmp
ds
fidivrs
lret
push
rolb
sub
pop
pop
sub
fnstenv
push
into
es
movsb
out
das
xchg
and
xor
mov
xchg
daa
dec
dec
jp
dec
mulb
mov
jns
inc
inc
fstp
loop
leave
fprem1
jp
or
and
das
cmp
mov
bnd
inc
subb
enter
mov
stc
sub
pop
pop
xor
pop
xchg
loope
loop
sub
mov
shll
imul
jb
or
into
pop
movsb
dec
ds
push
in
xchg
push
inc
jne
add
lahf
add
fmuls
mov
adc
pop
mov
inc
outsl
js
divl
aam
movsl
mov
sub
cmpsb
outsb
jmp
mov
jge
data16
sbb
fildl
xor
test
je
in
cmp
cmp
sub
jmp
pop
push
ret
sbb
push
scas
cld
stos
imul
pop
inc
repnz
pushf
outsb
iret
sbb
mov
in
sahf
mov
inc
inc
call
cltd
dec
adc
outsb
pop
mov
and
inc
sbb
repz
enter
into
push
pop
cmp
pop
imul
aas
lods
lods
aaa
loopne
jp
mov
pop
cmp
jbe
movsl
jne
xchg
jmp
push
gs
call
dec
and
shlb
xor
mov
cmp
divb
in
sahf
insb
mov
mov
sbb
add
repnz
jno
testb
and
fisubrs
sti
pop
dec
aaa
fsts
into
push
jne
fstps
xchg
out
stc
xchg
jp
pop
xor
shl
pop
xor
cmp
pop
cmpl
pop
sbbb
std
mov
sub
pop
rorb
cmp
add
mov
in
push
cs
push
sub
mov
dec
fstl
stc
lods
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
pop
cmp
xor
test
mov
lds
out
bound
mov
shl
cs
out
sbb
shlb
and
repz
int
fcmovnb
dec
sub
cwtl
loopne
cwtl
push
push
dec
mov
mov
aas
repnz
pop
test
xchg
mov
push
dec
js
cmpsb
pop
mov
lock
cwtl
push
popl
jge
into
adc
mov
fildl
icebp
shrl
push
hlt
dec
adcl
lret
xor
ljmp
xchg
out
xacquire
lods
fwait
xchg
popf
ror
loope
enter
das
sub
mov
mov
sti
scas
lcall
push
and
loope
imul
cwtl
addr16
mov
mov
stos
xor
std
xor
mov
mov
sbb
adc
pop
lahf
jo
sahf
xchg
cltd
inc
movsl
pop
inc
add
adc
std
mov
fimull
cmp
es
and
std
mov
or
loope
ds
xchg
ret
xchg
cld
dec
mov
imul
fdivl
push
sub
loope
adc
nop
cltd
and
xor
mov
outsb
outsb
adcb
in
clc
jmp
stos
cmpsb
and
dec
xchg
ret
enter
xor
xor
jp
push
or
outsl
fmull
sub
clc
movsl
push
aam
in
adc
popf
push
sub
cli
pop
repz
cli
or
add
jae
arpl
pop
popl
mov
lock
data16
xor
push
mov
dec
stos
sub
dec
and
cmp
adc
cmpsb
cli
loope
and
cmpsb
test
xchg
cmpsb
out
fmulp
out
push
pop
pop
jmp
icebp
and
xor
push
xchg
and
pop
lahf
push
rcrb
mov
repz
xor
sarb
xchg
push
js
repz
jnp
add
mov
lcall
sub
xor
daa
insb
repz
cltd
mov
jle
add
js
sti
mov
sbb
pop
xor
cmp
fdivl
pop
xor
cmc
call
inc
icebp
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
adc
push
stos
or
mov
sti
jne
divb
int3
es
sub
addr16
mov
std
dec
sbb
or
bsf
xchg
jae
jmp
adc
sahf
scas
lcall
jmp
push
andb
and
test
ffreep
xlat
adc
xorb
mov
hlt
xor
imul
inc
xor
or
push
adc
and
jb
jle
and
push
loopne
inc
outsl
mov
les
cmp
insb
jle
adc
or
cltd
add
out
lock
mov
fadd
mov
sti
dec
push
dec
jp
adc
cmpsb
test
divb
jbe
push
test
and
push
sub
inc
mov
sti
and
pop
inc
pop
inc
sbb
cmp
sub
test
xor
jbe
dec
sbb
dec
sub
sub
push
test
sbb
test
mov
mulb
iret
push
icebp
loopne
divl
inc
jae
ds
inc
inc
in
mov
cmp
fstp
mov
sub
lret
ja
lahf
and
push
and
inc
shll
pop
cmp
inc
bound
mov
negb
sbb
mov
flds
frstor
aaa
sar
lds
neg
shll
in
pop
adc
adc
jbe
sti
or
loopne
dec
cltd
mov
and
jne
add
push
cmp
dec
xor
or
push
aaa
inc
push
ret
popf
mov
js
les
and
dec
addr16
sub
mov
push
ds
jae
psraw
cmc
shlb
pushf
dec
xchg
dec
jnp
lahf
push
div
jg
xchg
popf
sub
scas
mov
mov
out
sbb
xchg
enter
cmc
inc
add
call
sbb
cmpl
data16
dec
cmpl
mov
sar
mov
subb
xor
add
lcall
lret
fldcw
lahf
rcrl
nop
dec
mov
in
rcrl
xlat
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
daa
mov
xchg
and
sarb
fnstsw
and
idivl
and
mov
push
sub
gs
lea
cwtl
sahf
mov
xor
testl
xchg
inc
cmp
xchg
push
dec
pop
jae
iretw
push
jne
es
sbb
xor
test
and
mov
insb
mov
mov
jnp
das
imul
js
pop
jo
das
shll
ss
add
sub
rcrb
mov
popa
mov
xor
fidivl
xchg
imul
stos
push
inc
jnp
je
mov
sbb
xlat
cltd
orb
and
fildll
mov
jno
sub
mov
pop
push
rolb
mov
xor
loope
adc
bound
pushl
fiadds
shll
aas
mov
movsb
sahf
in
loopne
xchg
stc
dec
jbe
and
int
adcb
leave
dec
jo
out
xor
imul
cli
pop
mov
xchg
aaa
push
pop
sti
icebp
xchg
insl
loop
jb
jg
adcb
jle
subb
js
dec
mov
fwait
mov
and
sbb
mov
sub
shr
call
xchg
insl
jns
lcall
out
pushf
mov
lcall
mov
push
and
aas
adc
cmpb
imul
fisubrl
mov
adc
movsb
pop
xlat
jge
add
pushf
fists
push
outsb
imul
mov
into
xchg
or
push
cmp
dec
jecxz
bound
cmp
aam
mov
mov
pop
mov
dec
xor
and
es
pop
popa
sbb
lea
out
sbb
cmp
dec
jmp
test
push
xor
dec
data16
cwtl
cmc
jbe,pt
je
clc
sbb
outsl
cmp
dec
jae
jl
scas
jg
lock
ljmp
xlat
insl
dec
in
ficoms
add
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
push
and
pushf
adc
mov
clc
insl
cmp
test
fsubl
push
cmp
shlb
push
pop
add
cmp
dec
loope
push
int3
dec
fidivs
out
and
and
lods
shlb
cmpsb
sub
negb
fsubp
fstpt
idivl
mov
pop
icebp
jmp
mov
jg
outsb
les
rolb
and
cmpsb
and
xor
adc
mov
sahf
dec
popa
or
aaa
mov
sbbb
mov
cmpsb
jecxz
testb
sbbl
or
xor
xor
inc
mov
in
mov
or
and
lods
dec
gs
dec
jl
aaa
jae
inc
loope
sub
in
shlb
push
add
test
ficompl
sbb
pop
adc
data16
dec
std
ds
aad
xchg
inc
sbb
in
add
rclb
mov
aaa
inc
mov
les
je
les
add
mov
aam
in
loopne
or
xchg
sub
pop
push
lock
adc
and
outsl
repnz
mov
sbb
jnp
jnp
fs
jne
js
mov
push
xchg
shl
xor
imul
or
lds
in
jne
in
mov
in
mov
adc
xor
pop
jae
pop
inc
xlat
mov
enter
lret
adc
jl
mov
mov
int
push
lea
mov
rcll
stos
push
adc
mov
inc
fidivs
mov
js
test
mov
lods
and
arpl
lods
push
int
dec
movsb
mov
mov
mov
push
mov
mov
ljmp
das
ds
and
test
bound
jle
prefetchw
or
pop
push
dec
stc
ja
out
dec
popa
aaa
lods
pop
cmp
and
addb
push
addr16
cmpsl
fcoml
dec
ret
scas
push
jne
and
jecxz
in
in
mov
adc
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fst
or
adc
sarb
sbb
faddl
adc
xlat
loop
jo
mov
je
mov
std
push
inc
iret
scas
enter
mov
jecxz
adc
mov
push
and
into
mov
pop
sub
lods
xor
push
and
stc
in
enter
repz
xor
mov
push
imul
pop
xlat
sbb
push
lods
es
adc
in
push
incl
jne
xchg
cmpsb
jl
or
fldcw
push
pop
inc
lcall
jbe
adc
pop
jbe
or
test
dec
mov
mov
test
enter
dec
jp
mov
push
shrl
xor
or
add
mov
add
cli
sahf
adc
mov
mov
adcl
push
or
aad
imul
loope
or
mov
pop
push
pop
lds
pop
mov
movb
cmp
movsl
fidivs
dec
jno
jbe
mov
enter
test
inc
push
xchg
jl
data16
xchg
mov
gs
jmp
inc
push
decl
out
das
lret
xchg
mov
mov
xor
out
vmulps
or
das
movsl
xor
aaa
sub
movsl
xchg
gs
repz
sbb
shll
xorps
mov
jp
xchg
js
sub
in
inc
lret
gs
and
popa
dec
xchg
adc
in
cmc
enter
pop
and
xor
cmp
push
inc
das
and
mov
and
test
rolb
cmpsl
lret
aas
jecxz
mov
cmpsb
and
sarl
add
adc
mov
sbb
shlb
insb
and
adc
arpl
inc
enter
mov
cmp
xlat
pusha
or
sub
mov
sub
lcall
cmc
mov
add
push
mov
push
push
jne
mov
jmp
fimuls
fmuls
lods
roll
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
shll
sbb
mov
ja
push
mov
sub
test
dec
pop
sbb
sbb
mov
sbb
mov
mov
jno
fistpll
cmp
pop
mov
test
out
add
andl
gs
pop
xchg
or
jbe
adc
fnstsw
repz
rolb
out
push
and
cmp
fdivrl
ljmp
dec
cmc
dec
ss
xor
pushf
in
pop
sub
icebp
pop
jnp
aam
pop
ds
sub
jg
jl
mov
push
outsl
sub
mov
dec
sub
arpl
mov
push
mov
jmp
aaa
and
add
in
in
insb
xchg
cltd
mov
pop
test
pop
dec
je
dec
mov
scas
dec
lods
inc
push
mov
nop
imul
xchg
ljmp
dec
lret
arpl
pop
loope
xor
jge
out
aam
sbb
lock
mov
fldl
mov
stos
jg
stos
dec
mov
dec
ret
test
lods
mov
ja
in
dec
ficomps
jl
inc
sub
mov
mov
and
cli
orl
pusha
inc
push
sub
mov
mov
rorb
cmp
and
ret
jo
sbb
iret
xor
cld
out
mov
xchg
mov
mov
jnp
les
iret
jno
out
vcvtdq2ps
or
mov
hlt
pop
adc
mov
xor
sahf
jno
mov
jecxz
sub
repz
scas
mov
xor
orb
and
sbb
pop
jnp
insb
jae
hlt
sub
adcb
into
mov
push
addr16
cmp
cmp
jnp
adc
pop
orl
clc
into
lock
pop
cmp
inc
shr
daa
mov
cmp
jo
repnz
insb
and
mov
mov
xor
rcll
or
mov
fisttps
hlt
fildll
lret
std
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
loop
push
xchg
add
sarb
mov
or
outsb
test
mov
loop
push
imul
xor
dec
mov
loopne
jmp
ret
popa
sub
pop
pop
adc
pusha
sub
cmp
in
or
jnp
add
hlt
pushf
lods
loopne
in
jecxz
outsb
pushf
cmp
add
fnstsw
stos
sub
adc
cmpsb
outsl
xchg
xchg
fcomip
mov
dec
xor
scas
mov
pop
pushf
fwait
adc
and
xchg
xor
jno
xchg
jns
fwait
add
ss
fstpl
mov
mov
mov
add
jp
inc
mov
mov
xchg
sub
adc
inc
or
and
inc
sbb
adc
push
lods
mov
stc
leave
sub
lret
lcall
jo
das
adc
cmp
adc
ret
cmp
mov
dec
and
outsb
or
popf
in
outsl
jl
lods
fdivrl
mov
xchg
stos
shr
mov
sahf
test
test
mov
and
clc
mov
aam
xorl
push
adc
adc
test
cld
jbe
push
mov
cld
int
scas
gs
fidivs
fwait
mov
aad
sbb
pop
inc
mov
and
daa
push
stos
add
mov
mov
lock
pop
sub
push
ds
sbb
dec
rcr
push
jns
movsb
stos
mov
scas
cmp
adc
rorb
adc
rcrl
scas
mov
inc
inc
pop
in
mov
stc
dec
lods
loope
xchg
mov
xchg
out
fsubl
mov
movq
xor
scas
add
repnz
ds
stos
cmp
jmp
fadds
dec
adc
outsl
inc
aas
or
adc
bound
dec
push
push
mov
lret
adc
pushf
mov
xchg
mov
lret
in
test
xchg
fistpll
dec
mov
jmp
inc
add
out
pop
iret
jnp
dec
movsb
mov
pop
jg
dec
test
jmp
dec
jle
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
dec
fcmove
nop
jl
sarb
or
les
ja
jecxz
pop
mov
pop
outsl
mov
std
lods
lcall
cmpsl
dec
ss
pop
jg
les
pop
mov
movsb
test
test
add
or
add
pop
xorl
mov
cli
cmc
mov
sahf
aaa
mov
sub
dec
sahf
and
inc
jo
push
inc
xchg
xchg
out
fcoml
fidivl
pop
in
das
xor
sbb
movsl
movsb
cmp
gs
cmp
mov
mov
mov
rcr
sbb
xchg
mov
sar
jbe
jg
jle
lahf
es
lock
sub
cltd
jl
and
mov
push
daa
adc
pusha
lcall
adc
movsb
sahf
outsl
shrl
nop
loop
adcl
sub
arpl
aaa
inc
lcall
test
rcl
stos
push
pop
sbb
pusha
dec
jne
cmp
xchg
ja
movsl
push
pop
call
aad
ret
pop
and
sarl
icebp
or
je
xchg
lret
pop
notb
sbb
imul
shll
mov
lret
add
mov
jbe
test
imul
mov
icebp
pushf
and
adc
dec
loope
nop
mov
jge
les
mov
das
iret
xor
mov
lock
xor
out
mov
jmp
push
mov
and
inc
xchg
jo
mov
movsl
fmul
cmpb
in
ret
mov
sub
into
nop
cs
adc
les
push
mov
int
xor
or
jb
idiv
adcl
dec
leave
jecxz
xchg
jl
inc
loop
xchg
sti
adc
add
fucom
mov
in
jb
and
loop
xor
lds
lahf
jge
xor
xchg
sub
es
jg
repz
outsl
adc
out
nop
insl
inc
jecxz
sbb
bound
repnz
jo
and
daa
leave
lret
and
insl
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
mov
sub
mov
insl
ret
sub
dec
icebp
cmp
xor
xor
insb
sub
xor
mov
jnp
pop
adc
or
pusha
dec
aaa
enter
xlat
sub
jb
mov
mov
mov
pop
adc
sti
adc
fidivrl
popf
icebp
push
jbe
pop
dec
int
cmp
fdivs
test
int3
xor
mov
xchg
test
pop
xor
andl
mov
sbb
adc
jo
xchg
aam
fdivs
sbb
cs
mov
cwtl
roll
inc
in
xor
sbb
lods
in
pop
fldenv
xor
adc
dec
sub
push
into
xchg
fwait
push
pop
cs
js
jge
lcall
xor
jle
cmc
and
sbb
das
ds
inc
sub
mov
ficompl
mov
push
push
jb
jnp
push
mov
sub
out
nop
out
lods
sarb
xchg
insl
cld
cmc
iret
sbb
push
fidivs
pop
or
cmp
inc
xor
iret
jecxz
sysexit
push
mov
popf
aad
xchg
arpl
test
inc
std
and
or
pop
clc
test
clc
jno
test
xor
loope
xchg
repz
xor
es
mov
ljmp
adc
push
stos
xor
lea
inc
cmc
and
lods
rcrb
mov
or
test
aam
test
sub
pop
loope
jae
cmpsb
sbb
iret
mov
jmp
xchg
ja
add
pcmpgtd
push
jle
data16
inc
adc
das
repnz
and
lods
imul
cmpsl
mov
xor
inc
xchg
and
add
cmp
mov
loop
sub
int
imul
in
or
fsub
and
sub
inc
popf
or
push
movsb
in
stos
xchg
sub
dec
popa
or
bound
xor
sbb
ret
add
and
jmp
xor
frstor
test
test
sub
mov
xchg
sub
mov
jo
jns
rcrb
outsb
jns
ret
jmp
div
jo
int
js
xlat
sbb
xlat
pop
and
cs
or
fld
add
loope
push
jmp
xor
jp
mov
pop
xchg
pop
ja
fcompl
mov
je
rcrb
cmc
repnz
imul
mov
cli
hlt
and
fildl
adc
loop
push
mov
ja
imul
mov
xlat
sbb
sti
xor
jecxz
push
adc
addr16
daa
push
aas
pop
addb
rorb
push
or
dec
jbe
out
cs
mov
jmp
mov
cld
add
rclb
scas
cmp
leave
or
out
push
xchg
inc
cmp
fistpll
data16
jb
push
sub
lods
ss
fcompl
pushf
addr16
jne
das
jge
or
jg
pop
sbb
dec
pop
and
push
pop
fisubrs
inc
jp
dec
stc
add
jle
outsb
cmp
xor
push
cmp
enter
test
popf
int3
jp
pop
popf
mov
xor
mov
mov
xchg
icebp
aaa
pushl
out
or
mov
push
loopne
push
adc
dec
sbb
sbb
hlt
sti
or
aam
sbb
out
arpl
push
or
sbb
jnp
jno
inc
icebp
movsl
inc
dec
mov
pop
iret
fdivrl
loopne
lcall
push
test
iret
cmpsb
pop
cmp
loopne
push
jo
out
adc
jmp
les
adc
push
adc
sbb
mov
scas
pop
test
add
sahf
mov
and
shrb
bound
jb
ret
jmp
pop
mov
pop
addr16
xor
mov
mov
inc
adc
cmp
add
lods
mov
into
les
and
jmp
xchg
xchg
or
inc
mov
push
loopne
repz
mov
lcall
insb
jmp
iret
and
push
inc
daa
fiadds
push
pop
or
pop
pop
lcall
sub
add
mov
movl
mov
jmp
sub
ljmp
in
xchg
loopne
xor
jecxz
sarb
cmpl
add
ja
inc
lock
xor
sub
adc
movsl
push
cmpsb
icebp
xchg
shlb
adc
mov
in
mov
pushf
add
sbb
adc
in
adc
or
adc
mov
sub
and
push
adc
dec
and
pop
and
iret
dec
repz
push
cmp
into
dec
push
cmp
and
or
pushf
aam
leave
repz
jl
cmp
lods
rorb
jg
shlb
or
or
in
cmpsb
push
mov
or
test
lock
imul
xor
cmp
repz
add
ss
add
or
lock
ja
aam
inc
add
aam
jb
xchg
in
das
pop
add
testb
cmp
pop
cltd
pop
jo
sbb
jecxz
dec
sub
lods
and
jecxz
pop
mov
mov
fsts
sbb
ret
mov
mov
fcomp
popf
popf
sbb
movsl
push
gs
mov
cli
add
test
insl
or
pusha
shrb
nop
cmc
loop
jecxz
mov
sarl
push
jl
dec
stos
cmp
cmpsb
fwait
add
xchg
push
ljmp
sbb
jae
cmp
test
and
cmpsb
mov
fs
and
pusha
add
fs
fimuls
enter
mov
sbb
cmp
xor
dec
sbb
sub
pop
imul
or
repz
mov
cmp
sbb
out
and
xor
fs
xchg
dec
sbb
arpl
hlt
std
fisubrs
dec
and
pop
mov
repz
test
xor
sub
loopne
jnp
cmpsb
fs
xchg
xchg
fistpll
pop
shlb
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
mov
xor
mov
fisubrl
pop
jge
lcall
ret
insl
repz
cmp
mov
cmpsl
in
fldl
shrl
orl
insl
bound
push
in
sbb
sub
cmp
cmp
test
xor
call
xor
push
push
call
fisttpl
sub
subl
inc
cs
enter
lods
out
xlat
das
dec
xchg
loopne
hlt
push
inc
mov
lret
lock
inc
insl
xchg
add
out
je
inc
test
inc
test
js
sub
and
add
jge
shr
push
psraw
daa
mov
ja
sub
and
setno
adc
dec
shr
addl
jg
adc
cmpsb
mov
push
mov
std
push
dec
xor
jle
dec
nop
mov
cs
sbb
cltd
mov
fwait
dec
shll
out
dec
repz
orb
jae
mov
xor
xor
mov
sub
cmp
loop
and
mov
sbb
add
push
pop
int3
outsl
sub
dec
pause
inc
out
popf
jno,pn
scas
sbbb
mov
loop
mov
cli
pop
or
jns
sub
push
sbb
mov
xchg
or
mov
mov
xor
cld
data16
cmp
je
loope
add
mov
das
test
cld
push
enter
in
shrb
pop
push
jnp
jne
sbb
fwait
icebp
sahf
or
js
mov
stc
push
out
and
cmc
aad
dec
inc
test
fcomp
or
popa
mov
pushf
lods
cwtl
mov
xor
push
sbb
movsl
pusha
out
and
ss
ljmp
xchg
bound
and
mov
or
and
pop
int
or
std
jge
or
sbb
xor
xor
and
stos
jno
frstor
adc
ficomps
or
out
push
sbb
and
xchg
rorl
int3
push
insb
sbb
mov
outsl
adc
ljmp
fwait
push
movsl
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
jecxz
cmp
mov
scas
cmpb
imul
out
xor
xchg
addl
jnp
btcl
pop
lcall
jo
aas
packsswb
and
mov
fidivrs
mov
mov
test
jg
cmp
push
or
jns
loopne
mov
bound
xchg
subl
push
xor
scas
das
mov
jbe
cmp
dec
cltd
dec
pusha
cli
dec
or
sarb
iret
and
fwait
popf
sbb
jge
xor
add
inc
sbb
ja
mov
orb
pop
and
mov
pop
cmp
and
push
or
loopne
cmc
push
fdivl
pop
pop
movsb
xchg
sub
mov
out
movsb
bnd
or
or
jne
es
push
push
pop
mov
js
push
pop
inc
xchg
inc
mov
and
and
jb
push
dec
stos
hlt
enter
cltd
fisttpll
fstpt
mov
inc
inc
xchg
pusha
inc
sbb
jbe
int3
push
clc
add
out
imul
mov
cmp
and
jecxz
cmp
dec
andl
xlat
pop
xor
ja
pop
sub
adc
xor
ljmp
outsb
xor
repnz
in
sub
icebp
fs
cltd
fsubrp
mov
stc
inc
inc
mov
into
add
je
daa
mov
loopne
dec
push
cmpsl
add
mov
lahf
mov
daa
pop
pop
ret
test
std
add
insl
xchg
pop
ljmp
mov
test
aas
sub
or
pop
mov
push
jae
cmp
jg
push
push
mov
fs
pusha
jl
dec
mov
jmp
xchg
and
test
or
xorb
add
lahf
adc
bound
xor
and
pop
dec
push
adc
gs
jnp
in
pop
push
mov
andl
int
shll
lea
iret
cmp
xor
mov
push
xor
out
sbb
scas
popa
fwait
add
jbe
sub
jno
leave
mov
into
xchg
xchg
mov
clc
cmpsb
jbe
sub
mov
dec
lock
inc
jne
and
into
or
push
dec
movsl
popa
xlat
cmc
adc
dec
testl
dec
in
pop
mov
xor
shrb
lea
cmpsl
in
jmp
cmc
mov
xchg
xor
mov
rcll
jo
ds
mov
data16
dec
cltd
dec
cld
in
iret
xchg
jmp
mov
scas
jl
jge
test
out
sbb
arpl
inc
mov
fs
xor
test
xchg
bound
cs
testb
pop
mov
in
jbe
sbb
std
inc
mov
roll
mov
mov
push
lods
cmp
pop
cli
sahf
fstps
cli
in
fwait
lock
stos
xor
ror
pminsw
mov
adc
stos
push
mov
arpl
inc
or
outsb
movsl
push
test
fiaddl
int
jbe
xlat
cmp
mov
call
cld
sarb
adc
xlat
fistpll
push
ret
and
and
subb
xchg
xor
xchg
out
sub
cltd
in
in
cmp
mov
stc
mov
in
pop
sub
in
cmpl
mov
mov
icebp
dec
xlat
insl
les
lea
add
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
std
mov
shll
sarb
mov
fsts
pop
fadds
inc
mov
movsl
iret
xchg
cmpsb
aam
jne
outsl
add
and
arpl
or
aaa
pop
jbe
dec
decl
adcb
fcompl
xchg
paddw
lret
stos
loopne
jo
into
call
fisubrs
lods
xchg
imul
inc
cmpsb
stos
outsl
dec
aam
mov
push
mov
rclb
out
push
mov
loope
pop
cltd
test
or
outsb
lds
pop
pushf
adc
js
in
mov
pop
negb
xorb
jo
scas
fiaddl
sub
stc
jg
push
jne
push
lahf
aas
ds
jo
jp
fbstp
cmp
incl
das
mov
pop
cmp
mov
dec
imul
xor
push
out
arpl
or
jecxz
mov
aad
loope
loop
ret
pop
push
mov
cmc
sbb
cs
lea
js
jns
out
xlat
daa
or
pshufw
sbb
xchg
movsb
lahf
aaa
cltd
mov
xor
push
jg
sahf
insl
sbb
insb
pop
das
mov
xlat
jl
sti
xchg
add
jno
jmp
adc
sbb
push
or
repz
cmp
xor
rorb
push
pop
sti
test
imul
sub
sub
xor
fs
sbb
testb
std
push
xchg
in
into
mov
cs
cmp
sbb
jne
push
push
inc
mov
pop
cmp
roll
ljmp
dec
dec
neg
xchg
sub
ss
add
imul
push
dec
sbbl
pop
into
cmp
and
mov
mov
adc
dec
iretw
mov
push
jae
jecxz
out
cmp
dec
test
sub
ret
push
ja
in
adc
je
pop
rorb
fistps
pop
in
sbb
mov
inc
mov
jnp
mov
in
adc
daa
sub
bound
lock
daa
push
cmpsl
dec
cmp
pop
fadd
enter
cmp
inc
in
mov
xchg
or
std
and
cmp
outsb
pop
xchg
cmpsb
daa
repnz
in
fsubs
pusha
push
fmul
xchg
adc
stc
loop
jle
pop
out
sbb
lods
add
jns
mov
das
and
push
fwait
inc
inc
enter
adc
ss
loop
push
sbb
dec
inc
pop
imul
es
pop
inc
cld
mov
push
add
sub
cmp
xchg
leave
lret
in
adc
int3
addr16
dec
or
movsb
repz
dec
pop
stc
mov
dec
push
sahf
push
jne
mov
cmpsb
lcall
lret
cmp
inc
xchg
xchg
inc
roll
ljmp
dec
mov
mov
mov
loope
sbb
out
push
arpl
or
jge
pop
inc
std
adc
and
push
out
popa
xrelease
mov
movsb
adc
and
mov
inc
mov
jne
lea
mov
jno
pusha
jno
cmp
jmp
mov
lahf
xor
test
es
imul
hlt
pop
lods
pusha
jno
adc
loope
enter
mov
inc
repz
dec
xchg
add
sti
or
mov
add
adcb
iret
jae
in
imul
sub
sbb
add
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
pop
ds
dec
sarb
or
mov
fcomps
lret
xor
xchg
inc
jmp
arpl
daa
xchg
mov
mul
mov
test
bound
addl
insb
out
push
movsb
loopne
inc
xchg
cld
stc
adc
dec
pop
dec
sahf
movsl
shll
jl
push
pop
enter
push
scas
push
gs
ljmp
int
out
dec
aam
int3
mov
mov
add
sub
mov
mov
movsb
xchg
adc
mov
jns
xor
cltd
sbb
mov
xor
mov
test
and
fisttpl
and
lods
outsl
add
or
mov
pop
imul
inc
xor
cmp
dec
jo
pushf
jnp
icebp
push
int
jmp
out
loope
ss
push
pop
sbb
xor
insl
test
xchg
test
adc
adc
and
mov
nop
jns
mov
mov
push
ja
subb
push
stos
imul
jg
cmpsl
outsl
mov
adc
xchg
pop
add
lods
bnd
mov
and
ljmp
mov
sbb
jp
out
in
loopne
sub
adc
jg
fnsave
adcl
sbb
fdivs
add
insb
add
add
pop
lahf
mov
test
sbbb
push
ja
sar
aam
cmc
mov
cltd
sbb
xor
icebp
fldt
mov
inc
sbb
cs
lea
jbe
cmp
mov
mov
jnp
aas
add
bound
or
xchg
dec
and
mov
fists
cli
adc
push
into
xlat
push
ret
inc
sub
add
cmc
add
sahf
test
lahf
push
imul
inc
add
sahf
mov
sbb
mov
jecxz
aas
mov
scas
add
leave
jl
sub
mov
dec
fimull
mov
shlb
mov
adc
sub
xchg
aam
fbld
cmp
addr16
lds
je
xor
sbb
and
adc
fmull
push
jle
pop
mov
xlat
or
or
mov
inc
cmp
outsl
sub
push
push
dec
pop
xchg
aam
mov
int3
fucomp
outsl
out
dec
cwtl
dec
aam
lret
cwtl
cs
nop
out
clc
iret
icebp
or
movsb
xor
in
mov
inc
push
dec
and
dec
jmp
mov
xchg
jnp
test
inc
sarb
pop
push
lcall
aad
cld
inc
add
sub
shll
ret
push
dec
cld
lahf
lods
pop
enter
mov
xchg
shrl
ret
adc
ret
mov
and
jl
push
cli
subl
enter
mov
dec
test
adc
push
sbbl
movsb
pop
mov
lock
std
jge
sub
mov
ljmp
ss
mov
loopne
dec
mov
popf
cwtl
inc
sbb
test
stc
xor
jp
mov
ror
sbb
and
aad
inc
or
push
jecxz
mov
jle
into
stc
and
or
jle
hlt
shll
jno
sub
push
out
daa
outsl
lcall
loop
clc
pop
shr
leave
in
pop
in
cltd
fsubrs
pop
movsl
mov
test
pushl
jne
add
adc
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
pop
add
lahf
cmp
pusha
aam
push
rolb
xor
dec
inc
imul
lret
aas
cmp
arpl
bound
sbb
sbb
das
rorl
adc
inc
stc
stc
and
inc
sarl
aam
push
xor
clc
mov
in
aam
daa
int
fwait
aas
jg
add
sub
push
push
lahf
call
js
in
push
stos
or
lea
mov
adc
lahf
dec
shlb
xor
pop
sbb
xor
pop
cmpsl
mov
test
jecxz
pop
test
inc
jnp
mov
mov
cmp
popf
repz
xchg
cmpsl
xor
fstpl
mov
adc
xor
mov
cltd
icebp
dec
enter
rolb
adc
into
inc
js
sahf
subl
lods
hlt
pop
cmp
push
arpl
cld
test
add
jg
sbb
add
jge
push
out
cwtl
pop
dec
inc
cmp
mov
jmp
sub
loop
pop
xor
push
pop
testl
movsl
push
sub
insl
in
out
popa
add
lret
fwait
push
xorl
add
data16
jecxz
ret
insb
add
mov
insb
or
xchg
inc
lret
imull
xchg
and
add
pop
mov
rcll
ffreep
movsb
cmpsl
push
mov
lret
mov
jle
xchg
pop
mov
ficomps
lods
xchg
lret
fcmovne
aam
xorl
add
lea
scas
outsl
inc
or
inc
mov
sub
pop
fs
sarl
insl
cli
and
xchg
push
jge
push
fucom
sahf
rcll
hlt
jge
inc
sub
mov
push
and
dec
mov
push
stc
fistl
mov
inc
rorb
shll
das
mov
sub
xchg
ret
inc
jnp
mov
add
sbb
dec
pusha
mov
jmp
test
jnp
mov
into
hlt
xchg
sbb
imul
jp
xchg
xchg
loopne
inc
mov
inc
inc
out
das
divl
sbb
push
xchg
aad
xor
fstpt
fdecstp
movsb
orb
fwait
push
sti
jp
scas
imul
repz
repz
inc
inc
jo
test
pop
mov
mov
hlt
cmp
cli
add
clc
out
add
outsl
push
dec
or
mov
lcall
jp
pop
and
loope
in
dec
xchg
imul
addr16
xchg
scas
insl
jne
andl
mov
mov
pop
in
push
sbb
jecxz
loopne
lea
out
push
add
adc
mov
lods
push
sbb
jo
or
stos
aad
into
rcrl
fidivs
dec
movsl
shlb
loopne
mov
shrb
pushf
add
hlt
pushf
mov
cmp
aam
test
bound
sbb
iret
fimuls
cs
in
xor
test
adc
sbb
inc
ja
adc
loop
adc
dec
iret
test
shlb
or
cmp
inc
xchg
add
fcompl
lcall
cmp
sub
jle
jns
mov
in
jg
fstpt
arpl
je,pn
insb
rcll
xchg
pop
lea
movsb
mov
dec
adc
fldl
mov
mov
pushl
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
jp
mov
mov
push
cmp
inc
jbe
mov
pop
mov
and
push
jb
xor
mov
cwtl
pushf
loopne,pt
adcl
fst
cmp
mov
inc
ja
arpl
int3
dec
lods
sub
das
sarb
mull
and
push
out
rcr
std
dec
cmp
scas
dec
daa
es
js
out
into
pop
and
mov
ja
cmp
iret
and
cmp
mov
jb
fsub
jp
fdivp
and
pop
sbb
pusha
daa
jo
mov
fistpll
jae
push
jecxz
test
and
movsl
xbegin
into
imul
inc
cmpsl
push
loopne
cli
push
mov
leave
icebp
pop
cmp
frstor
iret
test
in
stc
push
and
pop
rcll
xchg
daa
clc
push
cli
xlat
mov
adc
dec
in
hlt
icebp
call
jg
sbb
sbb
add
and
iret
xor
cs
lret
mov
jno
cwtl
mov
call
dec
add
adcb
imul
fsubp
add
pop
dec
jbe
or
push
mov
push
jo
jne
stos
and
xor
mov
out
outsb
and
sarl
add
ret
inc
scas
sub
orl
scas
stos
push
mov
ficoms
clc
and
fwait
mov
daa
hlt
add
xor
push
rcll
pop
xor
or
add
icebp
fucomp
rcrb
xor
and
fdivrp
out
inc
mov
les
aas
mov
dec
pop
mov
in
jo
repz
idivl
mov
pop
rcrl
sub
out
int
sbb
ret
adc
sarb
repz
ja
leave
subb
mov
jp
and
push
int3
jbe
xchg
jb
inc
jecxz
fisubrl
jecxz
out
cmp
icebp
in
jno
push
add
xchg
add
lahf
daa
adc
outsl
mov
dec
mov
out
inc
pop
cmpsl
or
bound
cltd
cld
jge
js
andl
fwait
test
rclb
or
pop
outsl
cmpsl
push
jge
in
push
das
xor
add
and
fimuls
stos
add
out
cli
sbb
daa
or
inc
mov
jno
cmp
pop
iret
dec
and
push
mov
repz
scas
fbstp
xchg
adc
shr
imul
sbb
mov
pop
mov
lcall
popf
xchg
daa
mov
out
mov
hlt
divl
loope
insl
test
out
popa
push
cmc
mov
loope
push
mov
shl
add
into
sub
cmpsb
std
cmc
dec
cmpb
jecxz
jg
pop
push
sbb
xor
sub
pop
mov
adc
fwait
scas
mov
push
test
push
mov
imul
mov
lret
aam
arpl
pop
mov
or
pop
in
data16
loop
cmc
mov
jo
inc
push
das
push
sub
mov
pop
rorl
in
mov
mov
xor
inc
mov
jecxz
fldl
add
insl
cmpsb
iret
test
outsb
and
mov
dec
aas
add
test
out
movsl
cmpsl
inc
lret
outsb
pop
cmp
push
ret
lahf
xchg
bound
inc
pop
dec
dec
imul
in
and
xor
and
call
pop
jp
rclb
pop
sub
fldcw
pop
stos
dec
pushf
lcall
sbb
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
icebp
xchg
test
nop
pop
sarb
sbb
rcr
mov
mov
or
icebp
and
cmp
and
aam
addl
js
sar
sbb
push
inc
dec
lods
stos
inc
std
out
lea
mov
inc
insb
nop
xchg
movsb
arpl
dec
negl
inc
pop
lds
insb
dec
pushl
pop
sbb
mov
jb
das
lret
cli
aad
inc
insl
shlb
fmuls
pop
pop
push
in
cmp
push
xchg
xlat
scas
dec
mov
pop
or
cwtl
jg
insl
pop
dec
cli
mov
inc
xchg
push
jns
sub
in
cs
xchg
add
rorb
into
hlt
mov
jge
adc
inc
fcmovnb
cmp
idivb
test
das
pop
mov
call
mov
cmpsb
addr16
lods
jecxz
or
repz
pop
and
inc
add
popa
sarb
xor
arpl
fnstcw
add
popa
clc
icebp
enter
push
pop
pusha
out
mov
idiv
lret
add
mov
xchg
cwtl
inc
pusha
mov
mov
mov
pushl
xorb
push
sti
and
ljmp
adc
inc
dec
ljmp
push
std
addr16
cmpsl
pop
lods
test
outsl
fst
stos
ret
movl
aas
add
pop
dec
or
ja
dec
mov
sub
add
rcrl
and
ds
into
xor
adcl
fists
pop
or
mov
das
loope
idivl
decl
js
push
lret
pop
das
sarl
out
test
add
cmpsb
xchg
decl
lcall
cmp
adc
mov
in
ja
addr16
xchg
lahf
push
loopne
test
ud0
pop
jmp
pop
adc
dec
push
push
push
mov
rolb
lret
cmp
and
jl
cmp
sbb
pusha
cwtl
notb
xchg
daa
inc
in
cmp
imul
movsb
or
cs
cmpsb
pop
dec
add
cmp
mov
dec
les
xor
push
insl
mov
fsubrl
enter
vxorps
ljmp
mov
aas
iret
sbb
sahf
pop
inc
push
insb
push
test
lods
shl
clc
sub
xlat
xchg
aam
fwait
rcrb
out
xchg
jnp
out
xchg
insl
mov
sub
pushf
jns
mov
das
test
or
xor
inc
lret
add
pop
jge
push
stos
pop
sub
gs
and
mov
jae
or
test
mov
inc
clc
push
movsl
out
fwait
xor
mov
call
aad
sti
adc
push
mov
adc
outsb
mov
inc
sbb
fnstsw
mov
lods
cmp
and
in
pop
push
mov
push
pop
cmc
mov
mov
sub
adc
andb
cmpsl
jns
in
cltd
mov
sbb
cmp
xor
xlat
cwtl
aaa
xor
addr16
mov
push
or
idivl
add
xor
out
das
fucomp
fdivl
enter
add
enter
movsl
push
push
in
jae
xor
rorb
inc
mov
fdivs
push
leave
mov
lds
mov
push
or
sahf
or
jne
sti
adc
dec
xchg
stos
mov
icebp
pop
xchg
mov
lods
popf
stc
and
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
dec
vpavgw
sarb
aad
xchg
je
sbbl
rcrl
aad
mov
rcll
mov
push
imul
xor
xor
les
sti
mov
shrl
je
mov
push
and
ljmp
sahf
or
dec
mov
cld
sbb
dec
push
in
cmp
mov
inc
loop
popf
xchg
mov
or
adc
adc
lods
cwtl
cmp
mov
adc
pushf
xchg
lret
add
fwait
sarl
mov
ljmp
and
pop
inc
out
addr16
in
popa
cli
stos
mov
sub
iret
xchg
ret
into
ljmp
push
fistpl
dec
frstor
mov
lcall
outsl
add
idivb
mov
pop
cmpsl
add
lret
fcoms
mov
and
cwtl
lock
cmpsw
pop
pop
or
jle
ficoms
and
and
jae
loopne
pop
or
ret
scas
inc
adc
hlt
inc
push
aad
adc
inc
jle
pop
movsb
sbb
mov
fcom
jmp
add
adc
out
sti
repnz
mov
pop
xor
out
sub
outsl
clc
mov
push
cmpl
xor
add
loopne
cmp
imul
mov
or
fimuls
pop
push
mov
sbb
in
or
mov
in
inc
shr
xchg
xchg
addr16
sub
incl
sub
das
xchg
sbb
xchg
repnz
outsl
mov
cmpsl
sbbb
imul
or
cmp
daa
popf
imul
add
or
ljmp
pop
sub
imul
pop
cs
mov
js
dec
mov
outsl
sti
sti
into
test
dec
push
stos
fbld
scas
rolb
adc
arpl
or
aam
lahf
fsubrs
jl
jae
in
jns
in
js
mov
test
add
mov
pop
lcall
rclb
in
or
sarl
jp
in
pop
jne
lods
jmp
jmp
cli
xor
xor
faddl
std
inc
std
aas
pusha
mov
outsb
and
mov
dec
test
outsb
mov
lds
or
mov
in
mov
popf
sub
jl
lahf
aaa
sbb
push
imul
or
and
je
dec
sub
push
shrl
sub
sub
jge
jl
lock
add
or
jmp
stos
pusha
xchg
iret
daa
sub
xor
add
jmp
sbb
fwait
cltd
repnz
xor
or
aam
xor
fidivl
loop
and
out
lea
lret
cli
rcrl
xchg
movsl
fwait
arpl
sub
inc
xchg
in
and
push
cltd
mov
jno
js
loopne
lret
adc
sub
ret
shll
imull
mov
ret
or
cmp
or
sub
sub
add
stos
inc
or
fstpl
aam
fisttpl
add
imul
lcall
leave
mov
or
repz
lock
mov
jae
sarl
in
mov
fmuls
leave
movsl
or
xchg
negl
cli
imul
into
outsb
mov
hlt
jae
cld
frstor
cld
mov
jmp
and
and
cmp
mov
cmp
mov
jno
decl
cmp
jmp
mov
xor
mov
mov
nop
cmpl
nop
cmpsl
outsl
sarb
sbbl
nop
dec
xchg
arpl
adc
inc
lock
xor
push
pop
sub
dec
gs
mov
jb
mov
lods
xchg
jmp
popa
movsb
dec
repz
fists
and
lods
cmc
xlat
mov
push
adc
mov
jp
mov
iret
nop
icebp
sti
lods
fs
jmp
shr
daa
jmp
scas
repnz
orl
andl
pop
pusha
sbb
jmp
lods
add
or
jge
adc
jne
mov
rcrb
sbb
or
lret
movntps
mov
shr
sbb
pop
mov
lahf
scas
xchg
and
cli
mov
inc
repz
lock
pop
jge
call
or
mov
sbb
jne
repz
pop
adc
out
fcmovnb
sar
or
push
shlb
ret
push
inc
cmp
push
int
and
pushf
or
rorl
jecxz
lret
xor
xchg
sahf
or
in
inc
adc
cmp
pop
sbb
jge
mov
clc
lcall
ds
inc
repnz
push
or
dec
pop
cmp
mov
aas
add
push
xchg
dec
inc
enter
cmp
push
xchg
jb
cltd
imul
mov
aad
aad
push
mov
pusha
jb
sarl
movsb
push
repnz
ret
push
movsb
push
adc
cltd
fcmovnb
mov
dec
fmul
pop
jl
sbb
mov
jbe
aas
xchg
jecxz
push
inc
test
push
pop
mov
addr16
mov
inc
jno
adc
fistps
sub
jns
in
mov
push
dec
imul
out
pop
gs
pop
pop
add
insl
scas
sub
push
shlb
cmp
lea
sub
adc
hlt
mov
psraw
fstp
adc
mov
mov
lods
inc
xchg
fwait
dec
aam
push
out
add
sub
sub
in
pop
dec
les
test
fisttpll
cmpsl
sbb
dec
mov
push
add
mov
idiv
icebp
pop
ss
cltd
pusha
shll
shl
shlb
sbb
repnz
mov
mov
repz
cmp
pushf
lret
fsubrl
lret
push
repz
mov
xchg
or
fadds
test
push
dec
push
push
in
stc
and
sahf
gs
hlt
fldt
xor
ret
cmc
jecxz
xor
xlat
add
and
aaa
mov
pushf
push
clc
pop
stos
sbb
cmp
dec
xchg
add
stc
js
sti
sarl
js
push
cmp
pop
sub
sti
pop
xor
and
inc
shlb
movsb
push
sti
cwtl
jl
xchg
fisttpl
mov
adc
xchg
push
pushf
hlt
lret
in
mov
xorb
pop
inc
leave
dec
insl
clc
xchg
icebp
mov
sub
daa
out
mov
pop
adc
adc
sbb
mov
pop
loop
mov
pop
mov
jg
jne
jns
shl
pop
and
inc
mov
push
inc
mov
das
out
outsl
fnsave
loope
inc
daa
jb
mov
sub
dec
cmc
fsubl
stc
push
or
mov
cltd
pushf
aas
jne
sahf
pop
inc
mov
clc
enter
cmp
cs
rcll
aaa
loope
repnz
jo
cmp
jg
or
add
pop
enter
je
mov
jmp
cld
sbb
mov
sahf
aad
test
xor
mov
divb
bound
jg
cmpsb
cltd
das
lahf
xchg
out
js
repnz
test
add
sbb
xor
jle
nop
fidivrs
xlat
push
sbb
lods
and
pop
mov
or
addl
adc
in
sub
lahf
clc
fildll
jae
aas
dec
push
mov
pop
mov
enter
cltd
scas
and
clc
out
movsl
adc
cld
jmp
repz
loope
inc
lds
fnsave
push
movsl
negl
scas
int3
push
xchg
stos
cltd
or
pushf
inc
scas
xchg
pop
lret
push
sub
movsb
pop
dec
lods
mov
fs
ficomps
lahf
jne
pop
stc
movsb
sahf
dec
fsubr
cmpsl
lods
cs
loope
or
dec
xlat
bnd
popa
stos
lret
in
shrb
out
lea
inc
sbb
aaa
jp
fnstsw
dec
popa
mov
arpl
outsb
mov
pop
in
dec
adc
lock
push
xchg
pusha
dec
sbb
mov
ds
arpl
mov
out
inc
mov
pop
sbb
ret
cmp
rcl
jns
das
sub
add
out
cmp
sti
sbb
push
nop
jns
je
sarb
js
cmp
sbb
inc
push
jge
not
fldcw
push
jl
xchg
aam
push
and
xchg
in
out
aam
rorl
mov
aad
inc
add
ret
add
cmp
cmpb
pop
icebp
mov
popa
stc
aam
inc
push
loopne
cmc
popf
mov
lods
and
xor
test
or
and
mov
xchg
mov
ficomps
inc
test
mov
jnp
push
addr16
out
dec
inc
jmp
mov
add
mov
rol
dec
pop
cmp
sbb
mov
mov
iret
mov
stos
in
rcrl
pop
adc
xchg
repz
test
mov
push
mov
fs
mov
test
stos
jle
jge
mov
aam
push
je
ljmp
jl
mov
xor
xchg
sub
cwtl
push
hlt
jbe
les
cmpl
add
data16
adc
sbb
test
test
jge
movsl
dec
adc
inc
mov
inc
jbe
mov
sbb
jne
and
je
je
xchg
jbe
test
test
insb
out
pop
xlat
push
xor
rcll
repnz
lret
add
ja
mov
push
xchg
das
push
shr
mov
ret
cmp
inc
std
sbb
pop
push
stc
mov
xor
daa
fnsave
mov
jge
xchg
movsl
mov
fmull
mov
aad
fistpl
das
scas
int
dec
das
lret
hlt
aad
mov
or
push
out
aad
aas
add
mov
mov
ret
mov
cmp
xor
sbb
bound
jge
imul
xchg
insl
fnstenv
popa
shll
movsl
sub
ficomps
rolb
inc
add
lahf
mov
push
jns
sti
addr16
shl
sbb
in
sbb
loopne
lcall
or
push
ja
pop
jnp
dec
int
es
lcall
jl
lea
pop
adc
lret
push
sub
sub
iret
mov
jecxz
sarb
xchg
idiv
jnp
outsb
lret
cmc
jbe
mov
mov
xchg
mov
pushf
scas
lods
popa
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
data16
nop
sarb
dec
les
ret
push
jle
adc
push
in
js
dec
xor
aaa
aad
sub
dec
xchg
outsl
sbb
cwtl
jg
add
fsubs
push
xchg
push
mov
pop
jge
push
add
mov
mov
jnp
push
sbb
call
aas
sbb
outsl
out
push
jg
scas
xchg
outsb
insl
fucomp
mov
ss
sbb
enter
pop
ret
in
sub
sbb
enter
dec
and
js
adc
fcoms
mov
mov
testb
cmp
notb
and
setns
xchg
jnp
in
scas
out
cs
gs
add
push
xchg
out
sub
inc
xor
movsl
add
lret
sbb
adc
add
daa
jmp
push
sbb
mov
cmp
inc
gs
int3
movsb
hlt
fbld
call
mov
cld
sbb
mov
pop
arpl
dec
lea
bound
adc
aas
lock
add
push
in
popf
dec
push
pop
adc
lock
mov
movsb
jp
pop
ss
cmp
mov
outsb
or
jb
push
aaa
cltd
mov
inc
cwtl
fbld
je
aaa
insb
bswap
xchg
mull
test
nop
or
mulb
cmpsl
adc
js
cmp
test
inc
pusha
mov
xlat
sbb
cmc
push
in
adc
jns
hlt
or
jns
rorl
insb
jecxz
inc
daa
sub
and
fdivr
aam
jl
inc
mov
es
and
sbb
movl
sbb
pop
cmp
pushf
nop
jno
push
les
push
cld
inc
jnp
cmc
enter
add
mov
insl
push
sbb
xchg
mov
cmp
clc
cmp
add
add
cld
in
xchg
sub
std
sbb
adc
inc
imul
mov
add
mov
inc
test
movsl
mov
sbb
into
push
adc
dec
in
adc
lahf
loope
in
sub
mov
xchg
add
dec
out
jmp
imul
xlat
mov
mov
and
lock
in
adc
cmpsl
outsl
ret
and
aad
jp
sarl
adc
mov
push
test
inc
call
or
gs
dec
xchg
jecxz
cli
pushf
imul
cmpsl
iret
pusha
dec
jnp
pop
out
sbb
xor
cmp
scas
push
roll
mov
repnz
mov
adc
mov
dec
mov
mov
jecxz
push
pop
cmp
rorb
jecxz
or
cmpb
sbb
or
rcrb
sub
stos
into
push
imulb
cmp
jge
shll
fsubrl
mov
push
adc
mull
jne
pop
test
add
ss
in
or
xor
cmp
cs
repz
add
mov
mov
inc
nop
add
popf
pop
adc
movsl
push
xchg
popa
jbe
cmp
sub
sbbl
sbb
movq
sti
dec
in
xchg
or
testb
xchg
enter
inc
bnd
dec
push
movsb
es
gs
mov
adcl
jmp
fs
stos
xor
shlb
imul
mov
movsb
mov
mov
sti
jg
mov
jmp
roll
mov
decl
add
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
xchg
sarb
push
rol
pushf
jg
addl
xor
les
movsl
push
clc
sahf
jb
std
rclb
dec
sbb
jle
cmpsb
iret
lea
mov
rolb
push
lods
mov
dec
lahf
sbb
lret
mov
mov
loopne
push
push
mov
lock
inc
mov
testb
or
adc
in
incb
nop
dec
jae
ret
rsm
aaa
les
pop
shlb
jnp
jo
stc
iret
ret
pop
jge
sub
mov
movsl
enter
arpl
daa
xchg
and
adc
push
inc
mov
jmp
xchg
idiv
mov
push
mov
push
mov
das
cmp
push
lods
test
scas
int3
jle
in
lods
arpl
mov
call
das
lcall
lock
xchg
and
lods
pop
decb
jnp
mov
cmc
add
cltd
push
adcb
jg
shl
push
add
push
add
jmp
jmp
mov
addr16
fsubrs
mov
lea
push
sbb
into
cmp
fnsave
jnp
fisubrl
sub
jg
test
lea
fidivrs
cmp
sbb
inc
ret
push
pop
out
mov
add
ficompl
cmp
jmp
imul
cld
mov
shrl
cmp
push
pop
and
mov
jp
mov
xchg
mov
jns
imul
mov
push
out
stos
inc
jle
pop
cmc
sub
movsl
cmp
sub
sbb
mov
stc
dec
cmp
dec
sbb
popf
loopne
push
pop
cmp
cwtl
mov
push
xor
aam
add
aam
popf
xlat
push
imul
jns
in
insl
movsl
mov
enter
addr16
xor
stos
sbb
add
popf
stos
test
mov
mov
lods
ret
icebp
push
les
dec
je
pushf
pop
in
xor
and
or
sbb
push
mov
ss
je
imul
mov
jmp
pop
xchg
xchg
outsl
adc
jecxz
xchg
or
int
inc
cmc
lds
xchg
imul
outsl
popa
mov
ljmp
dec
ds
and
and
jb
push
ret
das
dec
mov
dec
mov
mov
adc
cmp
push
divl
sti
aam
sub
dec
sub
dec
sub
sub
roll
sub
add
pop
mov
stos
out
xor
push
dec
pop
loop
testl
mov
gs
xchg
or
ds
pop
mov
ret
movsb
test
push
mov
cmp
mov
jns
xchg
or
pop
mov
xchg
fwait
xor
into
insl
mov
into
daa
mov
lods
in
jmp
leave
push
adc
inc
loop
adc
cmpl
in
in
cltd
mov
orb
pop
fs
push
dec
push
inc
lea
adc
sbb
in
mov
inc
lret
fwait
mov
sbb
insl
push
dec
adc
loop
rolb
push
sbb
mov
jp
mov
cmp
lret
imul
std
xlat
cmp
loope
or
and
andl
jb
aad
sub
jg
cmpsl
popa
jae
in
push
xchg
ss
in
int3
jg
pop
fsubl
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
fldenv
sarb
push
leave
mov
mov
insb
push
jne
add
cmpsl
push
test
mov
push
mov
jecxz
push
push
adc
aad
mov
ss
lahf
lds
cmp
adc
mov
stos
pop
adc
xor
int
and
stc
cmp
out
and
dec
movsl
clc
sbb
int
outsb
outsl
movsl
lods
push
icebp
jae
mov
jbe,pt
inc
sub
mov
jne
mov
xchg
cmp
jge
pop
xchg
mov
data16
add
mov
cmp
and
mov
cmp
xchg
add
or
jae
stos
sub
and
pushf
push
cwtl
mov
dec
mov
jle
ja
xchg
inc
inc
push
cwtl
cmc
fnstenv
cli
cwtl
outsl
dec
stos
shrb
xor
cli
add
in
jl
int
sti
or
imul
rol
push
sub
xlat
xchg
dec
sti
push
or
xchg
xor
imul
adc
sbb
jno
push
mov
mov
adc
movsl
out
mov
ja
aad
push
cmp
xchg
mov
push
inc
fadds
pop
fwait
and
mov
mov
mov
loope
push
leave
or
pop
lods
mov
jp
scas
add
popf
in
lods
jno
loop
loope
cmpsl
out
ffreep
pop
je
push
dec
lcall
stos
repz
cs
xor
cli
mov
dec
mov
or
movsl
xor
fwait
push
js
pop
shr
arpl
lcall
dec
and
add
jo
shrb
das
into
mov
xor
xchg
jecxz
inc
inc
daa
jge
and
ds
sub
inc
popa
aas
and
add
add
add
leave
push
inc
dec
adc
outsb
adc
lods
mov
or
push
daa
pushf
aam
arpl
add
dec
lods
cmp
or
in
xor
movsb
cmp
xor
and
ret
xor
lcall
repz
out
aaa
sub
aad
cmp
int
inc
sub
dec
int
pop
jns
lods
jns
xor
dec
mov
adc
add
loope
sub
cmpsl
cs
xchg
aam
push
sub
outsb
sbb
gs
mov
dec
sub
rclb
je,pn
pop
mov
imul
fdivs
pop
out
add
and
repz
cmpsb
jbe
inc
pop
dec
insl
cmpsl
stos
fadds
inc
dec
jmp
movsl
sub
in
sub
insl
push
xor
jp
fcoms
or
ljmp
jns
lret
xchg
xor
ret
pop
xor
cmp
sub
xchg
jns
jg
mov
mov
and
xor
jb
mov
mov
sbb
cmp
aas
movsb
pop
inc
cmp
xchg
cli
ret
lods
pushf
inc
dec
stc
imul
adc
adc
and
push
adc
adc
les
mov
pushf
cmc
push
push
imull
loopne
test
movsl
jno
enter
int
fs
pushf
mov
pop
sbb
xorl
pop
lds
mov
mov
int
pop
or
inc
sub
cmp
lahf
and
clc
sbb
cmp
jnp
rorb
in
pusha
pop
lcall
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
in
out
pop
shll
sarb
mov
fs
xchg
or
sbb
jb
xorb
pop
aad
into
aaa
movsl
adc
jb
xor
ss
repnz
push
mov
or
jecxz
jb
std
mov
inc
and
or
dec
fs
inc
mov
inc
push
xor
insb
push
push
mov
dec
adc
jle
loop
test
inc
jno
fidivrs
cmp
aad
popf
in
arpl
pop
scas
loopne
pop
test
inc
ljmp
xchg
ret
subl
andl
test
jnp
pop
push
pop
loope
cli
fisttpll
pushl
mov
lcall
pushf
std
cmc
jle
mov
jle,pn
mov
sbb
lods
cs
jg
cmp
jae
sti
mov
out
popa
mov
addl
push
test
pop
sbb
push
mov
out
pop
fs
mov
gs
leave
xor
mov
adc
mov
dec
imul
mov
or
inc
fisubs
dec
xorl
sti
pop
mov
mov
mov
push
std
notb
push
je
and
cmp
xlat
test
cmp
jp
dec
jg
lret
imulb
adc
sub
fstpl
cwtl
repz
jg
pop
push
dec
jmp
outsl
fisubrs
pop
cmpsl
test
xchg
dec
fwait
mov
repnz
xchg
popf
sbb
sub
cmp
xorb
xlat
mov
sbb
xor
inc
jp
shrb
inc
movsl
pushf
insb
pop
jae
cmp
pop
or
addr16
cwtl
mov
call
pop
subl
push
sub
adc
mov
adcl
xchg
push
test
into
call
rclb
rclb
cmp
or
fdivl
pop
mull
iret
shrl
into
jmp
test
xor
dec
scas
adc
arpl
inc
lret
ljmp
sub
jo
sti
lret
daa
pop
js
sahf
lea
ljmp
pop
inc
sbb
in
test
mov
out
les
push
scas
les
or
push
insl
outsb
ret
jae
movsb
jecxz
adc
not
pusha
sbb
and
aas
fwait
in
mov
jb
xchg
clc
call
xor
iret
mov
push
fisubl
add
sbb
stos
mov
int3
xchg
xor
rclb
mov
push
add
dec
leave
stc
int3
into
pop
dec
sbb
imul
push
data16
cmp
pop
push
pop
mov
sbb
or
xchg
adc
into
xor
test
out
es
test
xchg
rcrl
jge
test
jle
rol
pop
cmp
mov
flds
xlat
scas
testl
pop
sbb
jns
jb
insb
std
push
dec
pop
xor
mov
ja
mov
std
jne,pn
imul
dec
jmp
lret
cmp
mov
xchg
mov
test
iret
in
imul
outsl
clc
fs
in
and
scas
test
xchg
outsb
in
pop
pop
test
xlat
cmpsb
imul
push
es
leave
xchg
mov
dec
stos
mov
inc
pop
ss
std
out
mov
shrb
dec
jecxz
inc
mov
repnz
and
inc
sti
jp
fcomip
cmp
mov
fisubs
insb
xchg
cmp
push
add
lea
mov
and
and
sub
xor
mov
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
xchg
mov
sarb
mov
fistl
push
fbld
pop
les
pop
cmp
adc
mov
or
cli
pop
into
fidivrs
ret
lret
cld
and
add
fucomi
popf
mov
sbb
imul
fnstenv
sar
repnz
call
fcomps
loopne
adc
and
call
sarl
ret
inc
xchg
adc
jmp
add
call
mov
sbb
cli
mov
push
aad
mov
jmp
stos
fisubl
push
mov
adc
hlt
mov
mov
nop
loopne
testb
xchg
test
jle
add
jmp
mov
sub
shll
cwtl
dec
cmp
aad
jno
lcall
aam
push
jbe
mov
cmpsl
dec
ret
data16
nop
scas
inc
int
call
rolb
cld
sbb
nop
sub
call
idiv
push
inc
sub
jp
sbb
dec
cmp
cmpl
add
out
push
sub
mov
sbb
jns
and
ret
xor
das
movsb
pop
leave
add
push
cmpl
xor
clc
nop
je
es
inc
cmp
lret
data16
mov
mov
lods
stc
js
clc
mov
loop
mov
push
or
out
lret
xchg
mov
push
mov
outsb
or
cmovns
repnz
push
sub
js
xchg
cmp
sub
into
cmc
jne
cmpxchg
cltd
jb
xor
call
mov
jmp
xchg
andb
cmpsb
adc
jns
sub
cmpsl
loope
lahf
sbb
dec
push
cltd
out
lock
dec
pop
pop
ja
fadd
notb
inc
popa
test
imul
jnp
adcb
lcall
xchg
dec
mov
sbb
xor
test
sub
sbb
outsb
pop
push
and
push
lret
mov
sbb
cmp
fstpl
mov
ja
scas
bswap
push
hlt
popf
in
mov
pop
inc
das
outsb
dec
mov
stos
jo
inc
mov
jae
negl
shrb
mov
push
jl
mov
lcall
sub
pop
int
fincstp
xchg
jno
fdivs
xchg
ss
or
ret
add
sbb
and
sub
inc
std
sbb
imul
and
scas
sub
xlat
sahf
stos
dec
cmp
leave
inc
adc
mov
push
xor
xor
mov
sub
mov
mov
lds
imul
test
movsb
inc
jmp
xchg
xchg
in
push
mov
adc
jle
repz
jl
loope
or
sbb
loopne
adc
aaa
cld
and
movsb
cld
sbb
outsb
movsl
dec
lock
cmc
mov
cmp
xchg
movsb
movsl
je
dec
cmp
nop
shrb
fisubrl
xchg
push
mov
or
mov
mov
cltd
call
xchg
or
cld
mov
pop
push
lahf
adc
xchg
inc
dec
xchg
lods
notb
fstps
cli
lret
mov
mov
cmp
sbb
and
imul
orb
fdivl
xlat
popa
adc
das
add
jae
lcall
jne
mov
cmp
cmp
sub
dec
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
push
jne
sarl
mov
mov
sub
repz
fstps
sbb
pop
adc
pop
push
divl
sbb
sub
push
sbb
add
inc
inc
repz
push
mov
in
cli
fucomip
mov
jp
iret
xchg
ret
jne,pn
pop
scas
clc
dec
jl
nop
ss
roll
hlt
movsb
add
or
mov
xchg
sbb
cmp
adcb
daa
sahf
out
and
call
xchg
and
or
mov
cmp
dec
inc
inc
cmpl
fisubrl
ss
pusha
push
aam
pop
adc
cmpsb
outsl
pusha
gs
out
jnp
paddusb
sbb
cmpsl
mov
and
push
xchg
cmp
and
scas
and
lret
mov
dec
xor
fisttpl
daa
xor
adc
mov
mov
je
xlat
pop
adc
or
push
pop
outsl
insb
ficoml
pushf
rorb
int3
inc
mov
cmp
outsl
testl
or
ret
lock
rcrl
jns
dec
in
adc
sbb
aaa
push
repnz
test
roll
testl
sbb
sbb
pop
test
push
jb
cmpsl
out
xchg
sbb
prefetch
cmc
mov
cmp
lret
fisubrs
dec
shrl
or
insl
push
inc
adc
dec
push
lret
in
jns
ficoml
nop
ja
xor
pop
jmp
cltd
jmp
dec
jle
sub
aad
hlt
int3
std
mov
aas
xor
mov
sti
mov
and
in
scas
stc
push
inc
cmpsl
addr16
insb
jmp
cli
pop
iret
adc
xchg
sub
sbb
or
jecxz
dec
xchg
pop
call
mov
xchg
cmpsb
je
mov
popa
sbb
mov
sub
pop
sbb
add
push
js
xor
xchg
jb
std
push
xor
jmp
mov
addb
popa
outsb
jp
btr
fdivrp
cmp
sbb
and
test
xlat
dec
ds
icebp
cmp
add
pop
dec
imull
mov
div
popa
inc
ffreep
mov
inc
loope
xor
mov
inc
cmp
jmp
mov
insl
mov
nop
test
mov
add
push
dec
inc
mov
xor
xchg
jp
decl
cld
lcall
push
push
and
fnstenv
inc
add
std
mov
out
jl
cli
pop
dec
dec
fidivs
aas
fidivs
sub
mov
pop
sub
mov
rorl
xor
lock
aam
repnz
mov
outsl
sbb
andl
addr16
xor
test
jecxz
push
sub
push
adc
jno
or
sub
xchg
jle
push
mov
mov
loope
mov
inc
addr16
inc
mov
add
repz
rolb
mov
add
fwait
mov
xchg
xchg
add
add
leave
outsl
lret
jo
push
aaa
sbb
es
jmp
jmp
add
nop
adc
xchg
jge
mov
scas
mov
mov
outsb
je
xchg
iret
jb
addr16
mov
dec
xchg
jmp
xchg
ficoms
je
in
cmp
jns
pop
les
imul
cli
mov
push
adc
test
in
mov
ret
leave
mov
jo
shrb
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
imul
and
inc
and
dec
mov
jg
lds
fwait
data16
in
jg
mov
cld
mov
cwtl
sbb
mov
or
or
int3
pop
and
fs
data16
sbb
mov
insl
sarl
sti
int
cmp
lods
mov
adc
mov
clc
xlat
add
sub
in
aad
outsl
mov
arpl
scas
hlt
pop
xorl
mov
aaa
or
ret
or
addb
push
pop
xchg
xchg
cmp
inc
int
push
sbb
hlt
or
adc
pop
call
adc
xchg
jmp
js
test
cmp
push
lock
cwtl
stc
lods
pushf
pop
lret
sbb
jne
push
mov
out
mov
mov
jo
push
push
xor
fstl
dec
fwait
cltd
adc
adc
inc
insl
insb
jne
push
lret
icebp
adc
test
push
test
aad
lcall
mov
test
sti
sbb
xlat
inc
aas
and
pop
pop
mov
sub
jno
sbb
test
push
dec
je
cli
and
pop
cmp
orb
subl
repnz
sarb
adc
and
ss
push
loop
pop
pop
push
fdivrl
insb
fstps
and
push
mov
pop
addr16
out
xor
mov
adc
sbb
xchg
inc
fldenv
and
test
fists
xchg
test
pop
cmp
stc
pop
sti
movl
or
sbb
and
sarl
movsb
sti
popa
push
xor
inc
jle,pn
in
pop
mov
dec
ret
mov
sub
int3
jl
xlat
inc
jecxz
test
adc
cmpsl
inc
daa
cmp
stos
fs
push
xchg
sbb
ljmp
mov
ficomps
xor
jo
cld
push
testb
fdivs
in
mov
es
inc
dec
repnz
stos
dec
mov
sti
push
out
fcmovbe
dec
sbb
adc
in
xlat
push
aam
dec
nop
xchg
inc
mov
jnp
push
arpl
lea
je
cmp
fbstp
mov
gs
push
scas
xchg
add
xchg
add
fisubs
xor
ret
inc
fdiv
gs
arpl
aam
and
jge
inc
sbb
xchg
and
mov
hlt
lea
les
and
adc
rcrl
push
xor
lret
pop
jle
or
outsb
fmuls
mov
cmpsl
rcll
jb
loopew
xor
and
xchg
inc
jae
mov
mov
add
push
cs
mov
cmp
cltd
xchg
jmp
fidivrs
ret
rol
mov
adc
xor
pop
fdivrs
lret
dec
and
cltd
leave
xchg
sub
shlb
fisttpll
ret
jbe
cmc
arpl
xchg
aas
mov
arpl
js
xchg
inc
cmp
cmp
push
out
xchg
inc
jge
adc
test
sti
xor
aaa
sbb
mov
aas
dec
inc
out
fstpt
out
sbb
xorb
cmp
out
movsl
pop
xorb
mov
mov
adc
jge
outsl
and
jmp
fsubl
iret
pop
jno
out
pop
mov
out
mov
dec
sbb
test
adc
add
decl
or
adc
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
clc
jp
sahf
xchg
mov
mov
jo
pop
mov
sahf
arpl
pop
adc
bswap
dec
filds
xchg
push
in
fldl
xchg
in
pop
cmp
pop
es
pop
out
fnstsw
shll
mov
out
aas
lret
sti
cwtl
imul
mov
out
and
jo
adc
mov
xchg
add
mov
jbe
ja
cmpsl
stos
adc
push
scas
inc
bound
out
lods
aas
arpl
addr16
mov
ret
lock
jl
mov
cmpsl
movsl
push
hlt
imul
or
in
jbe
xchg
in
add
int3
or
add
pop
dec
mov
mov
add
fldcw
inc
mov
mov
lcall
xor
cmpsb
test
xchg
ja
sub
test
cmpsb
push
add
xchg
stc
xor
pop
push
shlb
std
data16
or
lahf
jnp
dec
add
cmp
sub
push
inc
mov
out
dec
mov
cltd
bnd
cmpsl
cwtl
into
jmp
push
mov
jnp
rorl
pop
add
ficompl
jmp
stc
hlt
mov
in
mov
stos
push
push
pop
pop
xchg
sbbl
imul
push
xor
and
repz
out
insb
jno
pop
aam
or
rcrb
push
jmp
ffree
sbb
das
sbb
inc
push
test
xchg
mov
mov
push
sbb
cmp
mov
jmp
mov
mov
cmp
mov
or
in
mov
dec
fcoml
xor
cmc
roll
mov
neg
jmp
mov
clc
jno
imul
push
movsb
or
fyl2x
nop
or
stos
in
aam
pop
mov
not
dec
rolb
mov
call
cwtl
cmp
push
adc
ds
cltd
xchg
outsb
jne
mov
or
int3
stc
cwtl
stc
push
and
out
mov
stos
icebp
je
or
pop
inc
dec
xor
pop
sahf
mov
and
movsb
stc
out
sub
fadds
adc
lods
inc
xor
dec
cmp
dec
jmp
jbe
adc
daa
sub
fdivl
cmp
iret
shlb
mov
push
inc
mov
xchg
aad
roll
lock
push
xchg
pop
in
mov
push
outsl
cs
rolb
sbb
repz
lock
cli
adc
cmp
cli
incb
mov
js
repnz
cli
enter
jg
mov
jecxz
adc
adc
pop
jecxz
adc
stos
rcr
cmp
sahf
mov
xor
rolb
in
jb
pop
jb
pusha
sti
xor
into
mov
xor
xor
xor
jo
cmp
jmp
insb
lds
xchg
inc
add
shrb
test
stc
adc
xor
pop
cmpsb
mov
pop
inc
cmp
mov
pop
mov
shll
pop
add
adc
das
imul
pop
lock
cmp
fnsave
les
add
dec
xchg
in
loop
xchg
lss
and
sub
fwait
or
out
dec
out
lods
loope
repnz
mov
adc
shrl
mov
mov
jge
shll
adcb
mov
pop
lahf
pop
daa
sub
xchg
add
movsl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
push
push
sarb
push
dec
mov
xor
mov
mov
mov
mov
vpsrld
add
xor
test
add
out
ret
mov
xor
push
jecxz
push
pop
imull
jb
jns
push
ss
push
pop
add
pusha
dec
imul
cmp
lds
jle
test
or
enter
xor
stc
std
aaa
insl
add
test
dec
loop
mov
jmpw
push
cmp
ror
xchg
lcall
jmp
mov
add
inc
cmp
mov
inc
mov
sarb
sbb
or
sti
lcall
cmc
jnp
shlb
sub
fnstsw
mov
cmpl
mov
add
push
cmp
mov
mov
lods
insl
lods
fildll
mov
je
xchg
cmc
lcall
pop
jnp
push
pop
mov
xlat
frstor
sti
xor
jmp
in
lret
aad
or
xchg
stc
pop
mov
fdivrs
push
xor
outsl
pushf
add
es
dec
insl
mov
xchg
mov
les
mov
aam
fstps
insb
leave
lods
jecxz
pop
add
mov
lods
sahf
and
test
xchg
and
cmp
jmp
sarl
mov
daa
enter
pop
dec
mov
sti
fwait
cmpsl
aaa
testl
push
push
jp
sub
cmc
imul
outsb
adc
mov
test
loope
adc
jp
inc
adc
rcrl
mov
xchg
and
adc
mov
xor
sub
clc
test
pxor
add
ficoml
mov
ds
xchg
sbb
xlat
subl
fwait
mov
testl
popf
and
test
fnstcw
js
cmp
dec
cmp
dec
insl
cmp
pusha
imul
push
sbb
jle
inc
jnp
clc
out
jbe
sbb
lock
jp
shll
cwtl
push
insl
daa
inc
dec
lcall
int3
stc
stc
add
cs
jle
call
lret
sbb
adc
cli
push
xor
jl
js
cmp
mov
ucomiss
cmp
iret
mov
in
scas
les
mov
inc
mul
push
mov
mov
jle
addr16
or
jge
push
arpl
xor
push
fadds
ja
fbld
jae
dec
adc
clc
call
add
fs
xchg
adc
outsl
jl
pusha
loope
rclb
call
adc
notl
sbb
xor
sahf
jle
into
and
outsl
cmp
and
lock
loope
pinsrw
mov
repnz
out
push
sbb
int3
jg
mov
pop
jo
pop
daa
add
dec
xchg
dec
push
stos
mov
adc
mov
add
sti
pop
idivl
movsb
dec
cli
xchg
jns
and
subl
xchg
ljmp
push
push
push
mulb
out
fisttpll
xorb
adc
scas
lods
dec
mov
dec
pop
stc
mov
cmp
pusha
mov
sbb
andb
shlb
pop
add
mov
pop
ret
lea
fwait
mov
pop
jnp
repnz
cmp
cwtl
add
cwtl
mov
adc
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
pop
mov
sarb
gs
mov
jmp
push
ret
mov
xor
xchg
mov
push
hlt
lods
nop
aas
cmp
dec
push
dec
cmp
mov
jle
inc
lea
stos
call
lods
lcall
loopne
xchg
sbb
jmp
insb
cwtl
je
imul
clc
sbb
xor
outsb
sbb
outsl
pushl
gs
jle
rol
jmp
mov
xchg
out
push
outsl
sbb
push
stos
xchg
jg
xchg
sub
imul
fcomps
sbb
xchg
dec
mov
fndisi(8087
dec
int
sar
test
outsl
fdivrl
or
ljmp
cmpsb
pop
lcall
fchs
shrl
inc
xchg
ds
inc
ficomps
stos
sbb
push
or
out
cld
xchg
lods
dec
shrl
fdivr
scas
lahf
mov
sbb
sub
xor
push
outsl
push
cmp
pop
sbb
into
arpl
cmp
rol
out
cmp
ljmp
int
lods
add
aad
loopne
out
bt
sbb
out
scas
cs
les
mov
xchg
add
stos
scas
cmp
sbb
mov
pop
pop
jne
test
loopne
mov
sbb
ret
mov
cmp
fldcw
mov
lock
mov
fidivs
mov
mov
aas
push
jg
sti
adc
xor
mov
out
pop
cmp
cmp
lea
or
jle
out
cmc
cmc
js
arpl
aad
sbb
fsts
dec
cmp
jl
sub
sbb
jge
test
dec
adc
lcall
lret
xchg
mov
loope
adc
mov
ret
sbb
sbbl
pop
cmp
sahf
ja
push
xchg
jl
rcrb
sbb
inc
mov
jle
xor
sub
sbb
shl
in
test
add
into
imul
pusha
xor
addl
mov
loopne
xchg
xchg
xchg
lcall
cwtl
sub
or
xor
push
inc
dec
push
or
inc
cmp
int3
test
push
jecxz
scas
nop
sbb
adcl
mov
push
out
mov
test
pushf
imull
xchg
jbe
dec
mov
movsl
lcall
fs
mov
daa
xchg
scas
xchg
icebp
aaa
sbb
mov
jbe
movsb
push
jae
cmpsl
std
cmpb
pop
sbbl
mov
out
jp
loop
pushf
jbe
or
push
sahf
xor
into
jnp
mov
test
cmp
and
inc
dec
add
nop
xor
repnz
ja
fwait
pop
lods
insl
enter
ret
add
rolb
push
push
sub
add
inc
popf
adc
insb
xor
jnp
adc
out
pop
push
aam
in
jbe
std
cmp
pop
mov
lock
xchg
inc
test
pop
ficoms
sbb
outsl
cmc
in
and
ja
mov
in
es
dec
out
aad
xlat
cmc
jecxz
jbe
jo
sbbl
xchg
mov
mov
sub
fisttpll
push
mov
ret
xchg
mov
in
xor
mov
in
adc
and
jg
roll
or
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
xchg
mov
jmp
dec
test
adc
or
jl
and
jg
addr16
push
cmpsb
ss
sub
fldcw
ret
icebp
icebp
dec
rcrb
and
outsb
ljmp
arpl
sbb
xchg
ja
dec
mov
mov
sub
decl
decl
mov
xorl
clc
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
add
add
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
jl
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
add
inc
add
sub
enter
andb
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
xor
inc
add
add
sub
sub
inc
add
inc
add
addb
sub
mov
daa
inc
add
daa
inc
add
daa
inc
add
push
movsl
scas
or
inc
add
daa
inc
add
inc
add
sub
and
inc
add
inc
add
inc
add
sub
scas
fwait
push
movsl
cmp
mov
mov
inc
add
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addb
js
push
push
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
and
inc
add
jae
jns
fwait
push
movsl
cmp
xlat
movsl
dec
add
and
sbb
hlt
stc
sarb
inc
pop
jg
add
add
inc
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
gs
inc
add
cli
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
xor
add
adc
insb
pop
adc
fwait
cmp
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
in
inc
add
addl
addl
addl
addl
addl
addl
test
add
test
or
test
adc
test
sbb
test
movsl
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
test
imul
add
inc
add
inc
add
inc
add
test
mov
add
test
cltd
test
popf
test
mov
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
in
inc
add
test
in
test
icebp
test
cmc
test
stc
test
std
test
add
inc
add
test
or
test
adc
test
sbb
test
add
add
aad
dec
add
add
loopne
add
add
add
add
add
add
add
mov
add
rclb
add
mov
add
add
add
into
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jp
add
mov
add
cmpsb
mov
add
add
int3
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
insb
mov
add
add
mov
add
test
add
rorb
add
mov
add
mov
add
add
adc
add
and
add
mov
add
add
dec
mov
add
add
orb
add
add
enter
rorb
add
out
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
add
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
add
add
bound
add
test
add
pushf
lea
add
lea
add
lea
add
lea
add
lea
add
add
sbb
add
cmp
add
data16
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
sub
add
push
popl
add
add
js
add
mov
add
test
add
mov
popl
add
popl
add
popl
add
popl
add
nop
add
cs
add
inc
nop
add
push
nop
add
push
nop
add
mov
add
lods
nop
add
mov
nop
add
ficoms
add
cld
nop
add
adc
add
sub
add
dec
xchg
add
pusha
xchg
add
jbe
add
adcb
add
add
mov
xchg
add
ficoms
add
cli
xchg
add
or
add
add
add
ss
add
inc
xchg
add
push
xchg
add
outsb
xchg
add
adcb
add
add
xchg
add
fcoms
add
add
add
and
add
inc
xchg
add
push
xchg
add
pop
xchg
add
jb
add
xchg
add
mov
add
xchg
add
fcoms
add
hlt
xchg
add
adc
add
xchg
add
dec
xchg
add
xchg
add
jp
add
mov
add
xchg
add
rclb
add
xchg
add
push
xchg
add
sbb
add
sub
add
inc
xchg
add
dec
xchg
add
pop
xchg
add
outsb
xchg
add
jl
add
xchg
xchg
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
sbb
add
add
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
