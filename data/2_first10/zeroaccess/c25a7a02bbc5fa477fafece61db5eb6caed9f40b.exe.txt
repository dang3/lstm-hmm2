mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
popl
push
mov
nopl
jmp
mov
xlat
les
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
clc
cmp
pop
fnstcw
mov
xchg
dec
mov
or
lods
sbb
sub
outsl
add
cld
ljmp
mov
xor
movsl
jo
xor
popa
pushf
xor
lods
in
ficoml
mov
jmp
les
fsubr
cmp
imul
stos
les
lods
pusha
mov
es
push
int
es
mov
int
aad
or
sub
pop
je
jg
lods
or
or
pop
testb
sbb
mov
je
jge
xchg
pop
xchg
inc
dec
mov
fsts
rorb
push
cmp
mov
xchg
dec
out
adc
sar
out
clc
mov
jl
adc
dec
inc
mov
jb
sbb
jp
sbb
inc
mov
mov
iret
and
rol
mov
mov
xchg
hlt
fstl
add
dec
or
rclb
fwait
movsl
cmc
jae
xor
inc
jno
inc
jo
jmp
or
leave
sahf
in
mov
cmp
cmpsl
and
repnz
loop
test
cmova
push
push
dec
mov
push
mov
sub
sub
mov
xchg
add
movsb
pop
frstor
pop
cs
or
cmp
les
mov
popf
xor
cltd
push
mov
mov
jbe
dec
iret
inc
in
outsb
inc
ret
push
jge
cwtl
fidivl
add
cmp
lahf
xor
vpmulhuw
or
lret
dec
ds
xchg
insb
sub
clc
outsb
prefetch
push
imul
arpl
call
dec
jbe
jge
shll
aaa
pop
in
pop
stos
lock
nop
popf
out
xchg
je
xor
push
xor
fisttpll
xchg
adc
cmp
inc
mov
or
fisubl
ss
arpl
jne
push
imull
sahf
enter
pop
jle
mov
in
cs
pop
sub
and
dec
xor
sbb
mov
lds
sbb
ljmp
sub
mov
daa
cs
pop
ret
jl
pop
push
enter
mov
sbb
mov
jns
pop
sbb
push
sub
push
gs
jb
mov
xchg
push
es
in
push
addr16
push
mov
notl
rcrl
add
inc
lods
xor
loop
fsubrp
and
mov
test
fsub
enter
mov
dec
fptan
call
divl
cmp
mov
jmp
xor
je
xor
mov
cmp
insb
xchg
push
fadds
cltd
pop
dec
mov
or
pop
sbb
jle
shrl
in
sbb
jecxz
repnz
pop
stc
pushf
cmp
daa
sti
add
xor
fldl
in
fmull
lods
es
sbb
inc
xchg
pop
pop
adc
sahf
lcall
mov
add
push
loope
mov
negb
fsubrs
rolb
xlat
es
lods
xor
xchg
stos
pop
mov
mov
or
jmp
sbb
sbb
fstl
xor
scas
fmull
push
mov
adc
popf
movsl
dec
dec
xchg
popa
lea
popa
mov
xlat
in
int
or
xchg
aam
enter
push
or
out
push
xchg
sub
int
test
pop
je
cmp
mov
mov
inc
call
mov
push
and
sub
dec
ja
imul
cmp
push
mov
xchg
clc
imul
outsb
pop
pop
lahf
outsl
fwait
lahf
mov
bound
mov
out
arpl
les
repnz
mov
enter
jne
dec
xchg
jg
cmpsl
stos
mov
push
xchg
add
add
adc
fiaddl
and
mov
stos
and
mov
stos
jle
repz
xchg
jb
test
imul
notb
mov
sub
fucomi
loope
sub
imul
jo
pop
orl
push
or
dec
lods
enter
es
lods
inc
mov
test
inc
pop
inc
jb
sti
and
xor
xor
xor
jp
call
adc
jae
test
mov
insb
into
lahf
adc
pop
lods
dec
adc
xor
inc
cmp
test
sub
lds
scas
pop
shlb
std
sti
mov
out
jns
sahf
inc
push
ja
pop
je
cmpsb
jne
outsl
and
lcall
and
xchg
iret
jmp
or
xor
inc
mov
xor
sbb
mov
mov
icebp
fsubrl
das
xchg
or
test
movsl
stos
jae
fildl
xor
imul
andl
jmp
lea
lods
out
mov
sti
adc
movb
outsb
outsb
pop
test
or
in
loop
sbb
fisubl
out
xor
xchg
repnz
or
xchg
movb
call
scas
cmp
lds
push
sbb
mov
push
push
lods
mov
sub
sbb
daa
pop
aam
pop
dec
mov
cmp
sbb
xchg
xor
sbb
add
and
xor
pushf
sub
lea
adc
dec
add
aaa
adc
xor
je
sub
mov
and
roll
inc
xchg
flds
jo
into
inc
inc
in
loop
out
cwtl
mov
xor
xchg
pop
add
rcll
shrl
inc
push
pop
push
outsl
mov
dec
movsl
fisubs
push
ljmp
mov
popf
mov
push
xor
mov
adc
inc
mulb
jle
arpl
mov
mov
sar
in
and
fwait
or
sahf
cld
mov
mov
xchg
sub
popf
jns
stos
cmp
mov
imul
out
mov
xor
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
lmsw
cld
pop
pop
inc
das
mov
mov
scas
rcl
sarb
sub
xor
stc
xchg
andl
rcll
pushl
push
or
cs
and
jns
clc
jle
pop
dec
xor
data16
pop
mov
sbb
push
cmp
or
mov
lea
mov
add
movsb
adc
push
lock
cmc
adc
xchg
adc
js
cmp
xor
mov
hlt
push
cli
out
xor
pop
inc
stos
std
jbe
stc
mov
xchg
push
cmpsb
dec
lret
inc
jne
adc
pop
cld
adcb
pop
jl
ljmp
fwait
adc
fidivrl
push
cmp
cmp
out
dec
pop
or
sbb
push
lcall
in
sub
mov
mov
and
rcl
jbe
jecxz
cmp
adc
fistpll
gs
jecxz
adc
cltd
out
ss
push
insb
rcl
sbb
sub
pop
cmpsb
pop
xchg
adcb
ss
ss
in
aaa
sub
ds
lret
cltd
stos
call
test
mov
or
cmp
subb
sbb
lea
cmp
imul
nop
mov
push
dec
fdivrs
cmp
loop
adc
dec
cmp
cmc
push
pusha
push
xor
jp
jle
mov
int
add
les
bound
xchg
pushf
lcall
jp
pop
xchg
test
insl
dec
popf
push
outsb
mov
or
push
mov
jle
nop
lea
mov
jae
push
fstpt
addr16
xchg
mov
push
mov
imul
push
mov
in
mov
and
lret
mov
rcrb
xchg
imul
fisttpll
insl
or
xor
pusha
push
in
movsb
jmp
icebp
push
fdiv
rcrb
test
mov
clc
push
inc
scas
and
call
mov
and
mov
pushf
mov
push
insb
sub
sbb
cmp
inc
gs
gs
bound
dec
lods
mov
adc
xchg
cmp
mov
mov
push
sub
stos
imul
sbb
out
cwtl
loopne
cmpsl
lahf
fidivrl
dec
and
xor
jns
out
push
std
je
icebp
xor
lods
insb
mov
push
cmc
fistpl
or
ljmp
xlat
add
cld
xor
xor
clc
test
inc
push
mov
lods
sbb
push
cltd
pushf
mov
movq
aaa
jmp
and
jge
out
fistl
push
pop
out
xchg
push
imul
or
sahf
leave
in
pop
imul
out
pop
mov
push
ret
mov
push
mov
je
dec
add
pop
fsts
push
push
dec
rorl
cltd
test
adc
mov
mov
out
test
cmp
dec
xchg
sbb
fcomi
and
punpckhdq
mov
xor
pop
and
in
into
adc
push
adc
add
push
cmp
loop
adc
iret
mov
hlt
pop
adc
push
loope
mov
mov
fcomps
dec
in
fucomip
jb
push
add
mov
outsl
cmp
jp
pop
sbb
and
inc
mov
leave
repnz
stos
fsubs
or
lret
sub
dec
dec
sbb
adc
fcmovbe
xor
push
push
imul
pop
mov
or
repz
push
int3
sub
movsb
add
inc
dec
inc
lret
push
xor
loope
push
add
dec
stc
push
and
inc
jp
cmpl
lods
dec
out
fstl
movsb
pop
dec
mov
aaa
add
add
lods
xor
gs
sub
xor
daa
nop
mov
dec
xor
mov
mov
mov
loope
rorl
mov
inc
outsl
jp
mov
clc
jns
ret
popa
or
sbb
gs
xor
ret
fiadds
pop
cmc
in
adc
xlat
repnz
mov
in
dec
into
lcall
sti
outsb
push
sahf
adc
push
dec
in
or
jb
sarl
subb
popf
hlt
push
add
push
and
cmpb
into
ss
out
mov
add
pop
cmp
lods
je
pop
xor
sti
adc
ss
jnp
sbb
mov
repz
subl
push
sbb
imul
push
pop
jo
push
adc
mov
lret
mov
into
dec
mov
je
sbb
and
inc
fdiv
cld
movsl
mov
adc
xchg
lret
sub
mov
mov
ljmp
xor
mov
jmp
lcall
arpl
adc
xchg
stos
xchg
int
xor
xor
cmp
movsl
jbe
add
mov
mov
and
enter
push
into
ds
sahf
loopne
cmp
pop
lods
popf
xchg
insb
hlt
and
sub
je
arpl
mov
mov
bnd
adc
mov
and
xchg
enter
inc
cmp
inc
into
insl
pop
loope
pop
add
or
dec
lahf
loopne
jle
push
cmp
cmp
mov
pop
inc
mov
mov
lods
pop
add
dec
pop
adc
xstore-rng
cmpsl
push
push
sub
mov
sbb
jne
out
push
jb
xchg
push
push
outsb
jo
popl
sub
xor
cmpsl
test
fiaddl
stc
and
cmp
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
mov
dec
and
shlb
ret
rorb
aaa
cs
test
js
mov
movsb
push
xchg
dec
jnp
ljmp
es
fs
inc
mov
adc
pusha
dec
ret
movsb
pop
jp
mov
lret
popf
xlat
call
sub
repz
jnp
cmp
outsl
ret
mov
and
or
int
jnp
or
sub
push
push
jl
adc
or
mov
test
push
xor
ds
daa
pop
out
divb
mov
inc
cmpsb
inc
lret
and
push
mov
adc
adc
push
jmp
fsub
sti
cmp
push
bound
icebp
inc
cmpsb
inc
cwtl
sar
xchg
or
in
loope
sub
inc
or
lret
or
xchg
out
fwait
cmp
jmp
outsl
lahf
pushf
mov
or
aaa
sti
adc
adc
mov
mov
out
xlat
push
enter
pusha
inc
xchg
pop
lret
nop
stos
mov
js
mov
mov
aad
jmp
xchg
scas
flds
movsl
iret
ror
mul
jb
test
and
jge
xchg
sti
jb
xchg
cmp
inc
sub
mov
dec
lock
xchg
outsb
rol
dec
stos
pusha
sub
imul
loop
dec
subb
push
sub
enter
test
adc
xchg
cmp
daa
jno
mov
out
adc
mov
mov
or
gs
daa
scas
pop
adc
mov
xchg
jbe
pop
xchg
into
fsubp
or
xchg
pop
sbb
jae
push
aam
push
mov
leave
mov
xlat
das
sbb
aas
sti
add
sti
inc
xchg
push
adc
aas
out
inc
jl
xchg
mov
pusha
cmpsb
loope
lret
mov
testb
lret
mov
cwtl
add
stos
inc
flds
mov
mov
sub
in
iret
xor
sub
cmp
push
lcall
xor
sub
fs
xchg
xchg
in
pop
repnz
nop
xor
dec
xchg
jp
xor
lcall
cmp
cltd
inc
cmpsb
mov
dec
scas
pop
xchg
jge
in
mov
push
mov
test
xor
int3
insl
fdivs
xchg
fimull
sahf
sti
xchg
mov
mov
aad
popa
and
push
je
cmp
xchg
jmp
out
into
and
fmull
sub
mov
push
lds
add
repz
fadd
fistl
xor
outsl
daa
fcmove
mov
ret
iret
jns
mov
mov
mov
mov
lret
test
idivl
cwtl
scas
pop
sub
cmpsl
ss
and
pop
sahf
mov
lret
inc
pop
nop
or
in
lods
test
js
int
fldl
cltd
cmp
and
imul
movsl
mov
call
sub
push
mov
test
xlat
mov
mov
sbbb
jb
jle
jmp
lock
in
xor
cmpsl
pop
into
cmpsb
cmp
int
or
sub
loopne
and
fistpll
sbb
adc
call
aad
shr
call
nop
into
inc
data16
aaa
sub
jp
cwtl
clc
ljmp
push
pop
sub
ret
pusha
mov
mov
sbb
sbb
pop
fsts
repz
adc
adc
and
mov
inc
imul
cmp
or
leave
add
inc
mulps
xchg
pop
and
pop
out
push
inc
ja
lds
daa
xchg
sub
jecxz
jmp
add
int3
rorb
dec
insb
int3
jnp
lods
mov
outsb
in
popa
jae
xchg
fadds
pop
dec
fs
test
sahf
loopne
dec
in
pop
add
fiaddl
mov
nop
mov
inc
sbb
dec
dec
jo
xor
aas
shl
push
data16
out
pop
cmp
lock
and
pop
std
out
inc
loop
ficomps
dec
cltd
pop
pop
imul
mov
adc
daa
push
cmpsl
outsb
sahf
ficoml
sub
mov
lret
ret
xor
test
out
or
cmpl
sbb
js
sbb
push
cwtl
inc
mov
push
pusha
mov
xorl
les
jmp
inc
mov
int3
icebp
rorb
test
leave
xorl
xorl
lds
mov
xchg
inc
stc
fsubl
das
xchg
roll
or
stos
cmp
dec
mov
cmp
add
push
cmp
lret
test
xchg
andb
dec
pop
dec
xchg
stos
pop
lret
push
out
mov
lcall
ficomps
cld
rolb
cmpb
xchg
mov
movsb
dec
adc
popf
les
shll
js
mov
xor
test
gs
jne
cld
mov
mov
mov
xorb
out
push
insb
pop
sub
xor
loope,pt
push
sub
or
inc
lods
add
cltd
xlat
xlat
add
pop
aas
sbb
lret
and
jmp
je
mov
inc
push
pushf
xchg
popa
out
ficoms
movsl
loopne
mov
xor
ljmp
outsb
inc
jae
push
xor
in
sarb
imul
jge
in
test
jno
loop
mov
outsb
push
cmpsb
cmc
pushf
scas
enter
push
inc
push
fwait
push
loopne
hlt
lock
xchg
dec
mov
lcall
loop
in
mov
push
jge
dec
aad
sar
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
mov
xchg
fimuls
pinsrw
punpckhbw
jmp
lock
stc
rorb
sub
roll
xchg
jg
iret
inc
daa
aas
icebp
ja
lret
pop
dec
jl
xor
lahf
lods
out
sub
cmp
jp
cli
loope
mov
out
jbe
int3
pop
iret
adc
std
mov
jo
sub
jmp
popf
mov
lret
movl
in
out
pop
mov
mov
inc
cs
cmp
mov
or
cld
mov
dec
adc
ror
lcall
sets
lret
aas
xor
sahf
gs
xor
sub
jns
cli
xchg
adc
aam
cmp
sbb
inc
jmp
loop
jbe
mov
sub
in
pop
scas
mov
in
push
cltd
mov
mov
adc
or
lds
add
adc
cli
add
int3
fistps
xor
pop
xchg
xor
push
addr16
syscall
mov
xchg
push
push
ret
rorl
fisubrl
std
sbb
daa
clc
xor
inc
cmovae
pushf
fwait
dec
ljmp
mov
aas
push
int3
fcoml
mov
imul
gs
pusha
and
dec
sbb
imul
jb
cli
pop
popa
sbbb
inc
mov
push
in
push
test
outsl
addr16
mov
dec
push
je
nop
insl
xchg
out
mov
push
cmp
push
xchg
leave
mov
ret
jne
shrl
mov
push
sbb
push
test
mov
imul
lods
and
mov
sbbl
inc
and
int
mov
fwait
pop
lret
xor
add
mov
sti
popf
or
notl
mov
roll
leave
call
iret
and
add
sbb
mov
push
push
or
add
mov
out
bound
add
call
adc
test
out
cmc
sbb
btc
gs
jne
popf
stos
push
adc
xchg
or
retw
cmp
pop
xchg
or
in
jbe
jl
aaa
push
pop
sub
xor
adc
in
xlat
imul
test
xlat
dec
mov
mov
or
popf
insl
in
add
addr16
jp
clc
mov
ds
shr
mov
jno
cmp
pop
cmp
cmp
test
inc
xchg
outsb
orb
es
fs
movsb
push
jb
fsubrl
repnz
ljmp
dec
jge
fildl
or
and
mov
movsb
aam
mov
dec
add
je
fstl
xor
sub
daa
fs
cs
stos
add
and
jmp
cmpsb
jp
loope
pop
lcall
jg
mov
push
inc
push
push
mov
adc
mov
pusha
ffree
leave
push
sets
inc
push
inc
mov
inc
xchg
test
mov
or
jle
add
inc
fwait
mov
faddl
std
idiv
cmpsl
inc
adc
cli
icebp
loopne
add
jb
pop
inc
xchg
xchg
xchg
pushf
daa
xchg
ror
aas
rcr
xchg
out
mov
insb
or
inc
cwtl
xor
in
cmpsb
sti
sbb
outsb
add
xchg
aad
sbb
idivb
pushf
push
dec
adc
push
lock
pop
leave
adc
sub
add
xor
iret
cmp
sub
icebp
mov
fwait
mov
stos
fcmovu
insb
lock
les
or
std
add
pop
mov
ret
in
pop
testl
fistps
sbb
add
movsl
cwtl
cmpsl
fisubs
xchg
add
popf
fimull
lock
pop
lcall
and
lgs
les
shrb
mov
ja
mov
jp
mov
adc
push
bound
ja
faddl
mov
dec
repz
mov
rep
sub
divb
pop
fnstcw
jmp
aam
adc
inc
jl
jne
fwait
iret
mov
aad
je
out
nop
in
inc
jmp
and
mov
out
pop
adc
xor
sbb
jns
jo
push
vpcmpeqb
adc
insb
sbb
in
idivl
inc
mov
imul
out
out
inc
nop
cmp
adc
in
pop
jmp
pop
cld
xorb
hlt
mov
xchg
cmp
xor
stos
inc
inc
jae
in
jecxz
cmp
push
nop
imul
cmp
notb
fistl
xor
or
sti
jmp
rorl
mov
adc
mov
mov
xor
adc
mov
cmp
in
push
insb
cld
rolb
mov
xchg
test
mov
inc
add
cmp
push
fcmovnu
xor
add
xchg
or
jbe
dec
pcmpeqd
leave
call
dec
add
add
std
mov
dec
mov
ja
jg
dec
mov
nop
jnp
pop
jge
repnz
inc
mov
ljmp
out
lcall
push
aam
jle
daa
neg
sbb
fldcw
ljmp
leave
xchg
cmp
stc
pop
daa
cmp
shl
dec
cmp
mov
cmp
mov
ret
cli
or
jae
mov
jne
cmp
jb
out
or
jns
hlt
cmp
cmp
div
dec
and
sti
adc
mov
or
jno
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
cmovs
cmp
mov
mov
movsl
daa
sbb
mov
mov
rcrb
mov
pop
or
fidivl
neg
imul
mov
xor
sti
xor
mov
sub
push
lock
lahf
int3
or
in
leave
arpl
test
add
jae
inc
dec
add
movsb
add
aad
fldt
xor
aas
nop
pop
add
fdiv
add
aas
in
rcr
add
loope
arpl
out
leave
addr16
jb
mov
cltd
mull
test
add
push
mov
insb
lods
roll
decl
fisubrs
jb
out
rcl
lcall
rcrl
out
addr16
pop
ret
cs
adc
and
add
add
cmp
imul
adc
cmp
xor
leave
mov
jecxz
sbb
cmp
pop
jns
inc
aas
add
iret
xchg
inc
inc
lahf
dec
add
sbb
xchg
pushf
inc
fucomp
mov
cld
es
mov
or
jmp
int
jb
scas
out
fnstenv
out
ror
push
iret
xor
adc
data16
ss
loopne
insl
cltd
dec
movsb
xor
and
ja
xchg
pxor
mov
push
sbb
cmpl
ds
mov
mov
loopne
ja
imul
or
popf
jl
or
sbb
push
mov
push
xor
cli
jbe
icebp
cmc
scas
cmpsb
decl
or
mov
add
and
ljmp
pop
fisubs
jae
fcoms
imul
jmp
mov
cwtl
shlb
mov
in
sub
and
add
pushw
lcall
imul
sti
notb
or
lahf
int3
mov
lds
jo
push
pop
jb
call
inc
imull
mov
cmp
sbb
mov
bound
ss
mov
arpl
mov
dec
les
in
testb
cmpsl
mov
mov
sbb
adc
add
adc
aad
pop
setne
inc
jbe
sub
sahf
repnz
fldcw
les
xor
lret
mov
add
in
xor
cmpsl
dec
push
out
dec
push
cld
lods
xchg
stos
movsl
pop
push
test
enter
adc
push
pop
jg
adc
pushf
rcrl
aad
sub
push
jb
mov
xchg
or
fcmovnb
aad
mov
sub
cmp
fistps
mov
cmp
add
mov
push
test
xchg
mov
jecxz
pusha
mov
xor
sub
push
sbb
and
addr16
dec
enter
adc
iret
jmp
outsl
test
pop
fwait
pop
xchg
push
ds
mov
movaps
ds
arpl
pop
pop
inc
shl
pusha
and
xor
add
push
leave
int
sub
add
sbb
or
jl
popf
mov
fistps
inc
hlt
inc
cmpsb
outsb
js
loop
js
sbb
arpl
dec
dec
mov
jmp
sbb
ret
mov
push
adc
fstl
push
jmp
or
push
dec
cs
mov
adc
sbb
outsb
inc
loop
lds
xchg
ret
jle
adc
cld
mov
addl
shr
test
out
movsb
popf
and
jecxz
dec
cmp
in
mov
add
adc
push
and
je
rcl
out
ret
test
outsl
fistl
inc
xchg
out
jp
icebp
arpl
xchg
dec
jl
sbb
add
mov
adc
push
jg
xor
sti
push
std
inc
sbb
movsb
cld
rcrl
mov
scas
xchg
xchg
sub
sub
and
mov
sti
pop
push
pop
out
sbb
sbb
mov
xor
sahf
pop
add
fnstenv
stc
sub
jns
stos
iret
lock
repz
enter
testl
popf
xor
insb
shrl
and
adc
lcall
fwait
inc
loop
cwtl
ljmp
test
lods
mov
cmpsb
xlat
dec
mov
or
xlat
add
xor
call
and
imul
pushf
js
lret
mov
pop
dec
lret
push
dec
fcoml
jg
jae
or
imul
and
cld
fdivr
add
mov
pusha
xor
repnz
gs
dec
test
shlb
sub
add
scas
fmull
jb
jb
cmp
push
and
les
flds
inc
adc
roll
pusha
out
pop
imul
gs
xchg
push
cs
sbb
dec
stos
jecxz
and
pop
dec
movsb
test
pop
fsts
insl
mov
sar
jo
jno
rclb
pop
ficoml
xchg
test
cltd
lret
mov
mov
repnz
adc
xchg
cmpsb
dec
xor
fcmovne
loop
rorl
mov
stc
xchg
int
arpl
in
aad
mov
imul
jb
hlt
leave
cmc
push
scas
outsb
dec
jb
loopne
in
jbe
add
das
movsl
rcr
cmp
lea
sbb
std
mov
push
xchg
sub
mov
xchg
cld
hlt
push
mov
push
push
fnsave
xlat
cmp
aaa
pop
pop
jb
pop
fs
enter
push
xchg
out
inc
repnz
in
lret
or
or
mov
lods
ss
inc
js
lds
adc
mov
ret
ficoml
mov
dec
mov
xchg
mov
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
repz
in
rorb
pinsrw
lods
push
push
divb
fmull
xor
fwait
out
push
mov
pop
mov
dec
sahf
xchg
fsts
inc
aaa
xchg
xor
pop
cmpsb
dec
and
fmull
pop
rclb
fistpl
inc
mov
insl
pop
imul
frstor
lods
pop
in
mov
or
mov
lahf
test
loope
push
mov
jle
sti
test
jbe
int
cltd
cmpsb
mov
dec
and
insl
pushf
xchg
mov
xchg
mov
pop
add
cwtl
int
divl
push
cmc
cmpb
mov
jecxz
loop
and
sbb
mov
dec
test
xor
mov
fstl
pusha
movsb
cmp
add
das
jb
test
xchg
lods
or
pop
movsl
dec
and
mov
mov
xlat
sub
jnp
imul
xor
push
mov
pusha
lods
mov
dec
js
jle
add
adc
inc
cli
mov
inc
xchg
push
ds
sbb
jns
mov
jl
pop
mov
cld
jb
sub
fisttps
push
lods
push
xchg
pop
cwtl
adc
es
mov
add
fwait
pop
out
xor
xchg
lret
lea
test
sub
push
pop
pop
pop
add
sbb
cmc
gs
mov
sahf
pushf
push
enter
outsl
arpl
cmpsl
dec
in
in
pop
andb
sbb
cmpsb
lea
mov
or
loop
ret
sub
xchg
mov
hlt
xchg
pop
sbb
test
andb
or
mov
decl
scas
jl
push
pop
add
mov
dec
aas
int3
int3
add
pop
hlt
fidivl
mov
into
fscale
sbb
cld
mov
xchg
adc
data16
mov
fidivs
test
or
pop
addb
in
inc
fnstenv
mov
push
push
adc
enter
sbb
mov
repnz
gs
mov
xor
mov
shlb
dec
std
sbb
scas
or
fdivr
cmp
rcrb
sub
sub
jl
push
hlt
mov
sbb
stos
add
orb
push
arpl
pop
pop
outsl
pop
lods
pop
repz
hlt
push
out
mov
mov
mov
xchg
jb
sub
cmp
add
jno
mov
jp
pushf
mov
add
scas
sub
xor
cmpsl
xor
pop
or
add
mov
xchg
or
add
xor
pushf
arpl
das
ja
shlb
mov
or
xor
dec
push
stos
mov
mov
sbbl
add
std
xchg
jl
sub
push
mov
scas
aas
fdivl
ror
leave
xor
stos
sub
lds
testb
cmpsl
jmp
imul
add
dec
pop
push
pop
insb
jo
sub
sub
js
push
out
mov
mov
dec
mov
jg
or
sbb
jmp
or
add
lahf
pushf
in
lea
and
mov
mov
push
movsl
mov
in
and
add
push
imul
push
add
mov
dec
testb
jmp
push
xchg
movsl
ss
clc
mov
push
jmp
pop
xchg
cmp
cld
sub
rol
dec
jg
fiadds
jne
adc
repz
and
mov
xor
pop
xchg
push
shrl
cli
push
cltd
fs
xchg
gs
enter
xlat
jle
xor
ret
cmp
inc
push
outsl
jmp
push
sub
sbb
jp
or
mov
pop
xchg
sahf
ss
inc
mov
add
in
sub
mov
mov
cld
sti
add
mov
cmc
lods
mov
call
out
fnstcw
sub
add
sub
mov
adc
inc
lods
jle
and
mov
adc
scas
sar
sub
loope
fistps
arpl
addr16
mov
xor
jae
jae
jnp
push
xor
inc
mov
test
inc
pop
inc
jmp
sub
push
nop
inc
pushf
adcb
add
inc
sbb
inc
push
and
in
flds
imul
lcall
lock
fstps
push
js
add
addb
jbe
inc
popf
int
out
cmp
int
subb
clc
mov
sub
loopne
repnz
aad
add
mov
js
out
pop
ja
sbbl
ss
fs
sub
and
add
movsl
lods
mov
mov
rcr
push
xor
out
add
mov
add
cmpsl
cmp
and
into
push
es
pop
push
sbb
leave
and
test
mov
mov
in
jl
cs
dec
dec
push
sub
pushf
shrb
pusha
inc
std
inc
outsl
testl
gs
jno
pusha
test
test
add
pop
insl
adc
insb
pop
mov
shlb
cmp
or
in
hlt
in
sub
add
out
jne
call
add
imul
outsb
filds
subps
jle
xchg
push
push
lret
lock
cmp
shl
imul
dec
sub
xchg
into
push
or
clc
icebp
mov
imul
lods
add
sub
rorl
push
or
mov
leave
dec
inc
push
in
mov
xchg
cwtl
cld
in
rorb
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
adc
pinsrw
psubd
clc
mov
cli
data16
test
inc
jp
pop
mov
adc
icebp
xor
call
out
lods
fwait
int3
test
pop
add
fcoms
mov
and
jnp
aas
mov
daa
mov
or
and
pop
ljmp
lahf
lret
in
mov
mov
lods
inc
clc
data16
cmp
in
adcl
cltd
jns
pusha
mov
mov
dec
jl
add
push
test
adc
test
push
lock
xor
mov
lahf
adc
ret
xchg
mov
jl
jmp
jns
ds
inc
adc
scas
dec
fucom
dec
sbb
addr16
stos
jbe
push
pop
xchg
sbb
xchg
sbb
les
inc
sti
and
js
lea
pop
inc
cltd
rorl
mov
fsub
mov
cmc
adc
mov
pushf
or
stos
call
and
dec
call
dec
cli
mov
mov
xor
mov
push
fistl
xchg
mov
int3
scas
dec
imulb
out
cmp
enter
in
ret
lea
add
dec
sbb
mov
sarl
sbb
and
cmp
sti
mov
jecxz
sahf
pop
cmp
dec
xor
mov
sub
jle
xchg
sub
xor
mov
ss
pop
pop
sbb
shlb
cld
pop
mov
xchg
or
outsb
jmp
frstor
jae
loopne
ja
hlt
pop
cmpsl
mov
jno
shrb
fmuls
pop
jge
push
mov
dec
imul
pop
and
aam
inc
inc
cmpsl
fiaddl
aaa
cmp
xor
out
xchg
mov
pop
inc
out
aas
sbb
cmc
push
push
fcomps
ret
pop
negb
dec
cwtl
data16
daa
rorb
mov
pop
faddl
or
or
sub
aas
add
dec
push
ss
xor
sub
icebp
and
aaa
cs
sbb
mov
xchg
rcrb
mov
and
repz
push
push
mov
mov
mov
push
loop
add
outsl
cmc
std
repz
sub
stc
cmc
add
out
xchg
xor
loop
adc
adc
out
pop
cld
push
lret
xchg
cmp
incb
cmpsl
imul
sub
or
push
pop
push
ret
cmpsb
std
fsub
sub
inc
pop
sti
push
sahf
aas
sub
lcall
mov
and
mov
mov
div
xor
jge
mov
int3
in
dec
jne
stos
rcrl
adc
inc
add
mov
ret
loop
inc
lods
loopne
sub
xchg
enter
stos
inc
xchg
movsb
and
test
and
dec
and
incl
xchg
add
dec
pop
insl
or
xchg
dec
repnz
push
jmp
mov
mov
fidivl
imul
xchg
testb
cmp
lahf
into
push
sbb
data16
loopne
popa
addr16
test
dec
push
cli
xor
mov
mov
pushl
dec
adc
addr16
in
adc
xchg
xor
daa
sbb
xor
jb
or
pop
mov
and
insb
mov
inc
push
xor
xchg
insl
inc
xchg
stc
idivb
push
icebp
in
ljmp
les
imul
jmp
adc
orb
loop
mov
cmpb
mov
cs
jno
jae
mov
fs
popf
inc
cmpsb
mov
repz
ljmp
cmpsb
fwait
repnz
les
xor
mov
enter
inc
testl
xchg
les
jbe
xor
shlb
and
movsl
pop
sbb
dec
test
jae
push
cltd
nop
inc
pop
push
aas
xor
stos
mov
adcl
js
movsl
aad
loope
inc
adc
rclb
nop
jno
minps
jno
jp
fisubl
inc
call
daa
inc
xchg
jne
mov
ret
fidivrs
cwtl
das
je
xchg
jnp
and
stos
xchg
push
mov
fisttps
sbb
clc
test
movsb
xor
imul
js
xchg
mov
sbb
lahf
lea
xchg
fldcw
es
cltd
dec
scas
mov
popa
add
inc
mov
scas
inc
dec
push
jl
cmpsb
pop
xchg
cmpl
jg
je
jo
shrl
xor
incb
mul
and
dec
ret
and
sub
shrl
arpl
test
cld
push
xchg
xor
hlt
cmpb
jno
push
arpl
pushf
rcl
cs
out
in
in
pop
mov
xchg
push
addr16
xor
pop
xchg
in
cmpsb
add
imul
fs
icebp
add
xchg
inc
lea
xchg
cmp
sbb
jle
iret
test
xlat
and
nop
adc
pop
incl
leave
into
sub
inc
sti
mov
subb
mov
dec
sub
push
sub
dec
mov
add
push
cmp
cmp
sub
sahf
lods
push
jg
and
cs
in
fadd
adc
movsb
jmp
pop
xchg
cmp
xor
dec
jne
push
clc
add
mov
movsl
shll
icebp
cs
jbe
cmp
jo
and
ja
adc
js
push
bound
mov
aad
xor
outsl
and
jne
mov
mov
dec
cmpsb
xor
call
mov
pop
and
pop
jo
sti
loop
jecxz
and
inc
cmp
mov
push
inc
jmp
pop
xor
arpl
pop
mov
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
xor
test
pinsrw
rsqrtps
imul
xchg
das
stc
mov
xchg
aad
mov
mov
mov
cmp
push
xor
pop
lret
inc
xor
lods
xor
sub
sub
mov
push
adc
in
insl
sti
xor
pop
mov
lods
dec
ret
pusha
mov
lods
aad
xlat
sub
movsb
fs
jg
inc
dec
fistl
or
sub
bound
jmp
push
mov
adc
pop
pop
xlat
and
adc
pop
pop
add
jmp
sbb
out
xor
sbb
cwtl
leave
arpl
adc
loop
add
idivb
add
cltd
jo
mov
xor
pop
sahf
jp
aaa
fcoml
xor
in
pop
call
mov
movsl
addr16
inc
adc
add
jnp
testb
sbb
movsb
setle
sbb
inc
mov
pop
call
flds
arpl
sub
int
mov
push
cltd
lahf
pop
mov
dec
mov
fisubs
subb
mov
mov
cmp
adc
mov
lock
mov
jl
adc
cmp
leave
aas
popa
js
repz
mov
les
inc
lock
xor
mov
sahf
rolb
decl
pop
adc
mov
xor
clc
pop
lds
fildl
push
ret
data16
dec
cmpsl
mov
ret
iret
sbb
dec
or
inc
push
push
jp
addr16
pop
jg
mov
or
xchg
inc
pop
int3
jo
cmp
jp
mov
sbb
mov
in
data16
fisttpll
or
sbb
outsl
sbb
popa
or
pushf
xchg
fimull
andl
mov
xchg
lret
add
js
cmpsb
into
mov
sbb
fstp
or
sub
out
or
push
xor
and
movsb
pop
popf
push
cmp
push
pop
pop
cmpsb
mov
cmp
xor
cmp
xchg
xchg
orb
push
xchg
mulb
cmp
lret
js
fdivrl
aaa
stos
dec
xchg
dec
aaa
dec
and
out
fwait
scas
arpl
clc
mov
xchg
cmp
es
xor
mov
fcmove
aam
insb
mov
bound
fsts
sub
aam
scas
xlat
or
xchg
fldenv
sub
insb
add
mov
shrl
xchg
pop
sbb
or
push
push
js
movsb
int3
adc
scas
imul
ja
and
push
movsb
jl
and
push
ljmp
mov
movsl
and
push
jb
cmp
ds
push
sbb
cmc
loopne
lret
mov
sub
out
cmp
adc
pop
sub
sub
mov
outsl
inc
pop
nop
js
rolb
int
pop
xchg
ret
sub
jp
or
sub
outsl
jno
fiadds
cmc
test
mov
icebp
mov
js
shlb
shrl
sub
adc
je
jl
jle
inc
sub
jle
mov
sbb
cli
jo
ret
aaa
lret
fsubs
insb
leave
dec
repnz
sbb
insl
mov
mov
cmp
mov
stos
mov
mov
sti
xchg
rclb
daa
pop
jns
xor
stos
mov
test
lods
pop
les
jge
inc
pushf
pop
mov
xor
into
ficompl
cld
sub
cwtl
in
mov
mov
adc
int3
idiv
xor
and
sbb
testl
outsl
loopne
add
cmc
cmp
jmp
jae
xchg
mov
aad
cmpsb
push
mov
mov
sbb
jnp
shrl
in
mov
xor
or
mov
enter
sti
xchg
dec
popf
ds
popf
fsubs
push
mov
addr16
int
pop
sub
and
repnz
outsb
jb
fcmovne
rorl
scas
add
push
bnd
ss
pop
out
dec
jns
test
rorl
imul
cmp
mov
ret
jnp
dec
stos
pop
and
sub
das
roll
ss
repnz
scas
in
inc
scas
adcb
dec
inc
nop
cmc
lahf
jecxz
cwtl
jbe
add
jl
push
mov
pop
dec
loop
subl
stos
les
ljmp
push
movsl
das
add
ret
mov
shrb
inc
cmp
fidivrl
xor
mov
arpl
ret
in
mov
fs
stc
decl
push
mov
sub
bound
pushf
into
jge
sub
dec
push
or
jno
in
fdiv
sub
jmp
in
in
add
adc
lcall
mov
jmp
adc
push
push
jl
inc
test
stos
dec
jne
stos
ret
movsb
adc
aad
pop
lahf
and
mov
mov
cmc
cld
mov
cmpsl
mull
mov
sub
ret
xlat
in
mov
lock
xchg
adc
cld
in
subb
sti
mov
push
test
stos
clc
push
jno
mov
sbb
jb
jle
std
push
mov
movb
push
fnstenv
ljmp
lea
sub
inc
push
shl
cmp
jg
in
add
mov
cmc
push
andb
inc
cs
out
cmp
jo
nop
mov
cwtl
mov
std
in
iret
in
test
sbb
mov
nop
push
mov
fnstsw
cmp
rcll
or
repnz
out
int3
in
mov
mov
cmp
jne
std
out
insl
popf
daa
jo
lea
cmc
pop
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
mov
mov
pushf
pinsrw
cmpps
int3
enter
jp
outsl
inc
pop
sarl
pop
jge
jecxz,pn
cli
fiaddl
dec
mov
inc
mov
and
xlat
xchg
bound
mov
fwait
dec
push
adc
daa
mov
jnp
ret
pop
jmp
outsb
sub
jbe
xor
call
xor
aas
push
push
mov
mov
in
pop
inc
dec
jp
cmpl
sbb
jecxz
insb
aam
or
sub
fisttps
jg
inc
icebp
cmp
clc
icebp
jp,pt
stos
pop
mov
jg
movsb
stc
jmp
data16
imul
jmp
jp
insb
sbb
test
push
or
sahf
enter
or
cld
mov
aad
push
sbb
gs
fnstcw
decl
icebp
inc
fisubl
sbb
sub
outsl
mov
sbb
flds
lds
int3
jge
mov
bound
mov
cmp
lcall
pop
sarl
cmp
dec
xor
cld
lods
insb
out
pop
add
cs
xchg
js
and
cmp
xchg
addl
mov
xorl
pop
inc
lcall
and
sbb
mov
jns
push
cmc
bound
shll
fisubrs
dec
cmc
ljmp
push
into
push
jnp
dec
pop
popa
jecxz
test
jmp
and
pop
inc
add
sub
or
xchg
push
fstpt
je
push
aad
mov
jb
addb
pop
or
testb
adc
cmp
inc
lods
add
btc
int
dec
loop
pusha
add
lds
fucomi
pusha
jo
inc
fsubrp
fwait
sub
dec
sbb
repz
xor
dec
sub
xchg
or
scas
and
cwtl
cmc
outsb
in
out
or
icebp
or
ja
mov
pop
xchg
lea
in
mov
stc
stc
imul
mov
mov
push
jmp
xchg
mov
pop
shl
repnz
rclb
mov
and
dec
stc
or
push
test
pushf
add
mov
popa
push
cmp
push
lea
sub
testb
fimuls
repz
scas
ds
mov
push
loop
lahf
mov
mov
sti
pop
es
gs
add
and
sbb
mov
sbb
add
mov
sbb
and
adc
cld
pop
je
xchg
cwtl
jge
push
sbb
and
jbe
mov
pop
cmc
iret
pop
add
dec
add
lahf
xor
cmc
fs
out
ret
and
xchg
fwait
dec
mov
cmp
cmp
loope
and
adc
insb
in
fwait
push
mov
jae
sub
push
test
xor
pop
in
ss
jbe
cmp
sub
hlt
ds
loope
into
daa
test
jg
cs
mov
in
jbe
shlb
xchg
lret
xchg
leave
js
cli
int
mov
cmp
xchg
add
push
push
ljmp
push
mov
dec
xchg
sbb
in
inc
mov
clc
cs
cmp
jge
sbb
fmul
mov
inc
scas
andl
mov
sub
call
roll
xchg
cmp
mov
fcmovb
in
roll
push
sub
xor
jl
jne
add
gs
xor
icebp
xor
inc
xor
and
aad
fisubrs
pushf
insb
out
jb
and
inc
movsl
add
add
mov
mov
pop
je
addr16
dec
fstpt
adc
pop
lea
and
in
or
enter
test
clc
repnz
xor
repz
xchg
push
xchg
addr16
lret
cmp
sbb
cmp
sahf
or
and
sub
inc
xchg
inc
jmp
das
mov
sahf
mov
jno
ss
loopne
icebp
inc
mov
insl
out
xor
pop
outsb
fdivs
fcomip
enter
clc
inc
mov
sti
mov
in
push
adc
dec
and
push
in
filds
cmpl
sbbb
test
pop
xor
push
xor
test
gs
lods
mov
xchg
int
aam
cli
aaa
sbb
cmpsb
fimuls
fcoml
inc
inc
mov
mov
xor
incl
mov
jnp
mov
test
sbb
jnp
and
mov
out
sbb
je
sub
std
cmp
mov
jb
in
in
data16
add
outsb
jbe
mov
gs
fwait
cmc
int3
cltd
mov
and
int
fwait
push
inc
fisttps
shl
lods
inc
ss
push
in
mov
inc
or
mov
js
pop
mov
push
xchg
jp
cmc
xor
inc
rcr
aam
jb
push
xor
je
jnp
idivl
and
jmp
into
pop
and
mov
mov
in
aad
push
pop
lcall
aas
js
adcl
rcrb
lret
repz
xchg
sbb
xchg
iret
aam
arpl
stos
mov
mov
into
mov
in
sbb
sub
lock
stos
mov
cmpsl
jle
adc
fldcw
in
mov
cmp
iret
das
addl
inc
ret
fisubrs
pop
pop
cmp
and
inc
movl
mov
jl
into
dec
adc
mov
loop
lods
aas
or
fmull
daa
adc
jne
es
jbe
jmp
or
or
lods
jecxz
in
lock
insl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
adcl
pinsrw
nopl
cmp
cld
loope
jno
test
decl
sbb
jmp
dec
and
xchg
push
sbb
xchg
inc
mov
mov
inc
repz
mov
je
clc
adc
xchg
adc
xor
dec
mov
xchg
adc
aam
les
jl
rcr
leave
test
movl
push
fimuls
or
popa
push
cmpsb
stos
dec
xchg
test
pop
sbb
addl
mov
outsb
out
push
aad
mov
cmp
fisubrl
ss
test
cmp
xchg
mov
lcall
in
inc
js
sub
dec
or
loop
sub
mov
into
jg
sbb
pop
jae
fidivs
in
pusha
adc
clc
xchg
sub
jge
fcoml
sub
movsl
xchg
xor
addr16
inc
iret
scas
add
filds
xchg
cwtl
insb
loopne
push
push
xchg
xchg
jmp
bound
hlt
pushf
outsb
sbb
mov
xor
mov
ds
sbb
aas
jbe
sbb
lahf
jg
cmp
loopne
sbb
cmp
cmp
stc
sbb
mov
and
pop
cli
lods
in
enter
fnstsw
js
mov
bound
jge
in
lret
clc
iret
push
pop
mov
push
test
xchg
and
imul
nop
xorl
rcrl
es
inc
jnp
negb
mov
divl
shrl
xchg
sbb
cmp
pushf
ljmp
jle
ret
sbb
or
rcrl
cmp
insb
pop
outsb
and
icebp
add
mov
inc
in
inc
sti
jae
jmp
add
or
lcall
add
pop
or
mov
movsb
jle
test
lds
xor
push
f2xm1
aaa
pop
mov
iret
jo
fstps
bnd
adc
dec
faddl
mov
stc
xchg
cli
loope
fldl
dec
push
aad
xor
cltd
in
xchg
cmc
in
icebp
mov
out
stc
mov
in
push
and
inc
scas
dec
mulb
push
movsl
cs
daa
jle
pop
incl
and
xor
fs
ficompl
pop
push
cltd
arpl
rolb
adc
dec
sbb
into
xchg
fcompl
and
mov
xor
mov
mov
dec
jne
mov
mov
sub
cmp
cmp
sbb
mov
jb
xor
leave
ljmp
ljmp
xchg
imul
cmpsl
adc
mov
pop
cmp
sbb
shlb
jmp
add
jmp
ss
lea
pop
mov
cltd
lods
sbb
mov
scas
aas
sbb
adc
jl
iret
push
testb
inc
or
ret
lahf
test
aad
sbb
out
test
fs
lretw
adc
and
mov
sbb
pop
lcall
mov
outsb
lahf
test
je
push
or
xorl
push
push
xchg
stc
arpl
call
push
call
push
ja
pop
mov
jmp
sti
imul
mov
or
out
in
lea
mov
xchg
andb
push
pop
int
sbb
xchg
stos
sub
xor
aad
test
xchg
and
mov
push
out
imul
cmp
lock
pop
jle
mov
jnp
aaa
icebp
loope
sub
adc
sbb
jno
es
stc
push
cmp
frstor
jmp
xlat
aam
dec
pop
pop
test
lahf
add
add
roll
jns
std
xor
movsb
outsl
and
or
push
in
aas
lahf
test
iret
sbb
outsl
imul
jge
out
rorl
mov
xor
or
iret
sbb
mov
mov
push
dec
push
or
adc
pop
sahf
lahf
or
scas
sbb
cmc
int3
adc
outsb
xor
push
xchg
mov
stos
cmp
mov
jne
lahf
jno
shlb
pop
mov
clc
jg
dec
jno
jns
push
rol
out
inc
and
xorb
jg
mov
sub
bound
rcrb
out
jo
jo
loopne
repnz
dec
insb
cmp
jb
leave
mov
out
jb
fcompl
in
aas
mov
mov
aam
lds
call
sbb
out
mov
lret
cmpsb
loope
add
push
dec
dec
cmc
push
lods
xchg
jns
dec
xchg
mov
pop
insl
pop
sub
xchg
shrb
fcompl
jbe
mov
repnz
jne,pn
cmp
adc
xchg
into
mov
outsb
scas
rcrl
out
mov
repnz
cld
cmpsl
frstor
pop
outsl
rcr
inc
loopne
or
int
addr16
mov
mov
push
push
mov
cmp
push
jecxz,pn
imul
jmp
mov
and
arpl
test
cmp
aaa
inc
mov
jno
and
mov
pop
andb
or
jo
inc
push
test
repz
test
jmp
xor
mov
xor
sbb
dec
cmp
dec
jne
xchg
push
pop
cmpsb
rorl
lahf
cs
movsb
push
into
xchg
push
andl
xor
jbe
loopne
lods
idivl
fbstp
jne
jg
lock
sub
cmpl
test
in
pop
mov
stos
pop
dec
inc
fcompl
dec
adc
sub
pushf
pop
lret
sbb
ret
cltd
daa
push
pop
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
cli
mov
les
jge
sbb
imul
aad
daa
dec
repz
ja
inc
stc
push
loopne
repz
fisttpl
lret
test
push
jo
mov
mov
mov
adc
mov
shll
or
or
aaa
out
ljmp
pushf
pop
je
xchg
daa
cmp
in
data16
jbe
pusha
mov
fdivrs
addb
sbb
ljmp
dec
pop
jnp
push
cmp
push
push
sub
xchg
push
cld
xor
in
call
push
std
xchg
adc
ljmp
jmp
and
fcmovnb
jmp
jae
sub
inc
cmpsl
out
pushf
adc
aas
and
ret
jl
fnstsw
push
inc
and
jns
push
repz
loopne
mov
idivl
das
int3
mov
lret
xchg
mov
lods
xchg
lcall
xor
pop
mov
insl
cmpl
imul
add
into
insl
fcomps
ret
push
inc
into
aas
stc
pop
jle
mov
mov
scas
inc
jbe
lods
xchg
mov
mov
mov
mull
rolb
xchg
icebp
xor
nop
add
fdivs
xchg
inc
dec
cmpsb
xor
dec
scas
jbe
pop
jae
xchg
cmpb
ret
pop
mov
pusha
ja
fstpl
xchg
mov
sbb
or
xchg
push
mov
lcall
and
jmp
mov
cwtl
movsl
dec
and
mov
jp
jge
aas
fimuls
jge
jb
jle
iret
sbb
icebp
mov
repnz
cmp
add
dec
ret
mov
mov
mov
jno
push
jl
dec
insb
pop
cmpsl
jne
jmp
mov
xchg
lcall
pop
fsubrl
cld
lahf
rorb
inc
fcoms
jg
mov
aam
lahf
stos
lret
divl
push
add
sbbl
movsb
jns
adc
lock
mov
lea
stos
lods
in
scas
lock
and
icebp
scas
loopne
sub
jae
xor
and
jecxz
fscale
mull
shll
jo
push
push
mov
mov
imul
fistl
add
dec
push
lock
shl
cltd
inc
xchg
mov
mov
pop
push
push
sbb
inc
mov
adc
sub
pop
inc
mov
xlat
mov
adc
jge
les
xchg
and
lret
movsb
xchg
pop
popa
mov
enter
ss
sbb
mov
sbb
dec
mov
cltd
cmp
aam
insb
or
out
lret
rcrb
mov
mov
movsl
adc
xor
cmpsb
shrl
int
pop
loop
jne
cmp
cmpb
inc
daa
movsl
jp
aaa
push
repnz
and
push
push
sub
mov
lods
adc
filds
and
lods
lea
xchg
mov
pop
pop
loopne
inc
std
into
lock
push
stc
jae
nopl
ss
fmull
jl
adc
lahf
fmul
mov
out
rolb
dec
in
jnp
insb
add
xchg
lcall
in
sub
add
inc
leave
pushf
xlat
jp
cld
mov
fldl2t
dec
sub
mov
sub
jmp
loop
rcr
cltd
andl
gs
push
push
xor
sahf
lods
cmp
pop
sbb
mov
pop
xchg
stos
mov
aas
lds
sbb
adc
pop
ficoml
call
scas
insl
imul
ret
xchg
mov
mov
and
sbb
dec
xchg
ret
hlt
movsl
inc
inc
pop
popa
add
pop
jge
sahf
nop
dec
shll
xchg
sub
mov
imulb
and
cmp
shrl
jno
pop
add
fwait
mov
stos
data16
push
push
fsubr
cmp
jnp
jmp
cmc
sbb
into
pop
aam
test
into
or
push
je
arpl
iret
jbe
add
push
enter
in
xor
push
xlat
mov
xor
in
shl
or
or
js
lahf
out
add
sub
sti
xchg
mov
repnz
cmp
cmovl
or
int3
scas
int3
cltd
ljmp
sti
jbe
cmp
jnp
xor
mov
fidivrl
inc
dec
or
inc
in
push
pop
bndldx
icebp
lret
pop
jmp
pusha
xlat
pusha
popf
pop
cltd
movsb
in
in
cli
adc
mov
mov
mov
out
addl
es
jl
in
insb
pop
repnz
xor
pop
and
adc
bound
emms
movsl
bswap
lea
ds
mov
jae
push
fcomps
ret
mov
and
lods
adcb
add
cmc
jne
ds
sti
cltd
and
cld
shll
les
in
mov
and
push
int
jmp
and
out
add
inc
xchg
adc
testl
mov
out
addr16
ret
es
in
jmp
jl
add
nop
ljmp
div
scas
xchg
pop
dec
pushl
add
push
cmp
adc
scas
dec
xor
js
les
xchg
das
ret
cmp
nop
lods
and
pop
cltd
scas
mov
jbe
inc
out
lcall
stc
push
mov
sub
les
xchg
loop
pop
addr16
fwait
dec
pusha
jmp
into
imul
outsl
xor
lock
stos
fucomp
fistpl
jge
ret
fcomps
xchg
cmp
cld
push
sti
outsb
or
lock
bound
div
cwtl
shlb
cltd
sbb
push
sub
cwtl
int
sub
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
arpl
mov
add
lret
lret
adc
arpl
push
stos
test
stos
pop
sbb
jg
ljmp
fwait
and
xchg
mov
inc
adc
xor
ja
adc
mov
mov
pop
addr16
xor
test
lock
adc
mov
jns
push
mov
adc
jp
jne
sbb
cli
xchg
ljmp
pop
mov
or
pop
push
xor
jecxz
loopne
and
fsubr
push
lea
mov
ss
fidivs
out
inc
jmp
fnstenv
sahf
mov
jecxz
push
movsb
aad
cmp
inc
lahf
lret
test
sbb
sub
pop
mov
push
mov
out
scas
outsl
push
pop
lret
call
outsl
ret
in
push
jmp
xchg
jmp
sti
ljmp
and
push
ljmp
cmp
mov
inc
aam
inc
shrl
out
mov
add
xchg
je
inc
out
jecxz
mov
adc
mov
in
dec
mov
cmp
fistps
xor
pop
and
lods
into
dec
or
adc
sub
mov
js
jno
mov
pop
adc
xor
add
push
lds
adc
mov
shlb
add
inc
cld
xlat
mov
cmp
mov
std
movsb
popf
mov
mov
mov
iret
iret
sub
cmp
add
xor
jne
mov
inc
cmp
jp
loope
mov
sub
push
add
push
xchg
jmp
loop
lock
push
or
jmp
xchg
ljmp
jae
out
sub
imul
es
or
adc
xor
sahf
test
mov
cli
insl
pop
sub
jnp
or
in
xchg
mov
loope
into
pushf
jne
std
mov
in
and
inc
jbe
ds
xchg
ds
ret
jp
loope
fmul
lods
pusha
bts
xor
push
add
daa
inc
add
cmpsl
lods
test
cmpl
push
lods
out
mov
inc
or
sbb
in
cmp
or
push
out
bound
xor
pop
es
mov
bnd
and
inc
clc
cmp
and
xchg
push
dec
hlt
dec
push
add
add
sbb
dec
ss
dec
aaa
pop
push
loopne
pusha
mov
dec
imul
daa
jo
dec
sub
cmpsb
mov
inc
aaa
in
into
aad
lods
pop
mov
mov
aad
loopne
push
xlat
stos
idivl
sbb
push
dec
sbb
sub
lea
xchg
cmc
in
fcmovnbe
and
mov
orb
mov
nop
movsl
pop
or
mov
mov
jl
mov
sbb
push
xchg
dec
into
filds
jnp
mov
fisubs
inc
lds
add
lea
add
gs
xorb
shll
inc
jg
add
call
inc
mov
mov
adc
adc
jg
jno
inc
mov
icebp
movsl
fstpt
ljmp
pop
hlt
lods
push
fcmovnbe
sub
imul
stos
inc
fcomps
in
xlat
sub
repnz
push
adc
dec
dec
pusha
pop
js
sbb
cld
scas
stos
int3
xlat
pop
mov
fs
sbb
and
lds
cmp
push
loopne
cmpsb
loop
dec
push
loope
mov
psubq
inc
adc
test
push
pushl
cld
fstl
and
cwtl
mov
xchg
inc
shld
sti
outsl
mov
dec
cmpl
or
or
push
pop
mov
sub
mov
mov
xchg
or
ret
inc
hlt
pop
incl
rcrl
pushl
lods
sbb
popf
dec
inc
pop
popa
loope
stc
movsb
mov
aam
or
jae
ds
aaa
or
mov
add
andl
dec
enter
jns
and
stos
inc
pop
ret
fisubl
adcb
aaa
inc
cmp
pop
stc
stos
out
mov
push
out
fnstcw
push
sub
aad
mov
sbb
cld
mov
in
sahf
test
xchg
sbb
ffreep
push
sahf
pusha
pop
popf
dec
xor
lahf
dec
inc
orps
and
pop
pop
mov
jnp
jle
dec
cld
push
mov
icebp
sarb
cmp
inc
pop
lods
or
cwtl
sarl
out
int
movsl
inc
jp
cmp
mov
sub
js
dec
aam
jnp
aam
mov
pop
add
into
subb
sti
mov
jae
jmp
mov
inc
cmp
mov
sbb
sti
xchg
jo
in
arpl
std
inc
popa
cltd
rorl
fisttps
js
pop
jp
cmpsl
test
and
adc
popf
mov
inc
aaa
in
push
arpl
adc
fisttps
push
shlb
and
jmp
add
and
mov
cmpsb
fsubl
and
in
insl
lret
sub
cwtl
inc
jp
push
mov
test
jle
outsb
xor
push
fst
pop
sub
jo
shr
mov
icebp
mov
xlat
les
pushf
popf
pop
mov
aas
fdivrs
xchg
jge
cld
stos
ret
inc
xor
adc
adc
pop
das
fdivrl
push
jb
cmp
and
testl
and
xor
test
mov
inc
daa
sub
and
jnp
pop
subb
and
iret
cmp
inc
sub
hlt
inc
sbb
pusha
xlat
clc
ljmp
stc
inc
jle
mov
mov
out
std
lret
and
enter
in
push
mov
push
or
out
lcall
sbb
push
inc
mov
enter
xor
ss
mov
pop
ds
sub
mov
jns
jae
shrb
test
mov
sahf
rolb
jmp
cmp
cmp
aad
or
cmpsb
mov
mov
or
jne
fdivs
adcl
pop
inc
xchg
cmp
nop
inc
scas
sbb
and
lods
inc
mov
jp
xchg
jae
imul
mov
arpl
or
xor
fucom
cmp
pop
daa
data16
outsl
loop
adc
cmpsl
test
cmp
arpl
sub
xor
xor
out
je
push
dec
inc
add
in
cmp
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
aam
dec
repz
pcmpgtd
sbb
push
arpl
psrld
jbe
in
sub
xchg
mov
xor
ds
push
popf
repnz
jecxz
and
pop
pop
push
shl
movmskps
subl
cli
cltd
adc
mov
jbe
or
pop
lock
pop
and
cwtl
pop
xchg
out
inc
mov
sbb
loope
mov
test
lcall
icebp
and
fbld
movsb
mov
cmp
push
jne
cmp
pop
lret
cli
add
fdivr
jl
sbb
stos
popa
xlat
in
shll
test
jae
xor
cmpsl
rolb
lods
pop
pop
or
ljmp
imulb
loopne
repnz
stc
arpl
and
jo
shlb
inc
ds
mov
cmc
pop
fldt
in
sub
lock
incl
rcl
inc
xor
int3
mov
cmp
mov
cmp
push
in
filds
mov
xor
jmp
xlat
sbb
pop
bound
add
and
and
out
movb
jne
test
ljmp
xchg
add
fs
loopne
jno
ja
iret
mov
lret
cmp
jae
adc
cmp
mov
push
test
gs
fs
sbb
jmp
jmp
fiadds
adc
aaa
jge
sub
jl
or
movsb
call
adc
jg
cmp
xchg
insl
add
mov
iret
jp
aad
out
xlat
sahf
cld
paddb
xchg
imul
mov
rcr
js
pop
shl
mov
cmpsb
xor
in
lea
stc
in
dec
adc
push
cmp
loopne
in
jl
fcmovnu
aad
popl
push
mov
test
jg
je
mov
sbb
or
std
mov
jns
inc
sbb
mov
test
mov
das
mov
push
aas
xorb
push
pop
adc
rcr
or
je
push
scas
xchg
popa
ja
push
inc
sbb
loope
test
loopne
cs
sahf
inc
fildl
add
shrw
lret
mov
sub
xor
enter
mov
xchg
ljmp
sbb
mov
fists
push
pop
scas
rcr
lds
lods
in
or
scas
cwtl
hlt
and
xor
repz
out
adcl
xor
inc
ds
xor
xor
iret
dec
gs
fmuls
lods
mov
mov
jo
loop
mov
and
ljmp
orl
repz
mov
stos
test
or
mov
data16
imul
add
andl
repnz
xchg
mov
and
aas
aaa
push
out
sub
lret
stc
in
xlat
adc
pop
jecxz
leave
cmpsl
scas
imul
ja
mov
or
lock
mov
cmp
pop
mov
mov
mov
lcall
aam
push
xchg
hlt
xchg
adc
sbb
push
and
pop
xor
adc
jbe
pop
inc
mov
out
fmuls
mov
mov
rcr
pop
test
jnp
jle
xor
adc
sub
out
push
cmc
aaa
mov
or
fidivs
call
xchg
inc
mov
dec
movsl
pop
pop
pop
inc
incb
fbld
push
fdivrs
and
fwait
cmpsl
pop
or
dec
pop
lret
stos
pop
test
lcall
aad
ficomps
out
adc
pop
jo
add
aas
cmp
gs
jg
jo
hlt
outsl
bound
jne
mov
aaa
mov
add
out
in
jg
hlt
inc
mov
jp
ffreep
mov
add
add
push
ss
pop
pop
into
jl
mov
add
les
fs
test
lea
or
mov
and
xlat
movsl
int3
test
sub
cli
loop
and
xlat
je
sti
push
imul
lods
mov
mov
pop
js
or
int
ds
inc
cltd
ja
clc
hlt
add
hlt
dec
repnz
cmp
pushf
mov
jno
and
pop
and
lds
gs
jge
out
inc
shll
or
adc
cmp
pop
mov
push
andl
loop
insb
push
push
xor
cmpb
ds
lods
pop
xor
or
mov
mov
sbb
dec
cmp
insl
stc
add
push
arpl
pop
pop
adc
rcr
icebp
sub
pushw
cmp
loope
dec
xchg
sub
lret
push
jl
sahf
movsb
jbe
dec
leave
shll
add
cmp
mov
cld
cmp
outsb
movsb
and
enter
ljmp
outsb
push
jge
and
mov
push
cmp
lret
cmp
dec
inc
loopne
xchg
push
les
xchg
and
sbbl
pop
sub
movsb
mov
push
int
jns
daa
test
xor
aas
icebp
je
jbe
insl
out
lds
and
jno
lret
xchg
xchg
xchg
and
dec
sti
sub
xor
push
aam
es
insl
dec
scas
stos
or
icebp
and
nop
imul
adc
mov
into
push
mov
mov
and
mov
sbb
fimull
popf
adc
and
and
into
inc
mov
add
sub
sti
adc
movsb
add
adc
sahf
inc
outsl
es
out
ds
stos
jb
jno
in
pop
inc
jnp
mov
inc
cli
pop
add
stos
fwait
mov
pushf
or
popf
cmp
inc
stc
data16
repz
lcall
jp
adc
jne
fiaddl
fistl
jmp
js
jae
push
lret
ss
repz
mov
xor
iret
inc
in
push
addb
sub
sub
push
fwait
adcl
sub
jo
nop
push
jb
movsl
aaa
movsb
push
pop
repnz
mov
divb
ds
or
sub
push
jno
std
xchg
dec
fs
test
loopne
and
out
rorl
ret
loop
push
sbb
stos
cmp
fldt
inc
jge
cmp
les
jne
imul
popa
mov
and
or
inc
int3
or
xchg
lods
jnp
lcall
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
inc
je
xchg
add
lods
mov
loopne
jg
lods
adc
daa
rcl
movsl
jnp
dec
sarl
scas
ljmp
xor
add
outsl
fistpl
out
push
aas
mov
fcoml
push
sbb
pushf
mov
mov
xchg
cmc
lds
cmp
pop
leave
jmp
dec
call
sub
push
xchg
jno
inc
mov
jg
xchg
hlt
cltd
enter
sbbb
xor
push
jae
mov
stc
jbe
shlb
pop
fiadds
jle
jae
movsb
arpl
das
pop
sbb
pop
outsl
popf
pop
dec
das
call
or
adc
mov
test
scas
stos
and
es
xor
dec
subb
divb
sqrtps
lret
mov
icebp
movsb
clc
xchg
lods
repnz
push
and
xor
test
push
stos
outsl
mov
xor
jo
ljmp
imul
push
push
sbb
aas
aam
in
pop
xchg
lods
dec
mov
imul
fistpl
js
shrb
mov
lret
mov
rolb
scas
adcl
pop
xchg
or
jae
std
mov
movsb
fsubrl
mov
dec
dec
mov
adc
lock
scas
add
jae
cli
inc
dec
icebp
test
and
add
fucomp
xor
cmpsl
or
cmpsb
xchg
repnz
call
or
in
pop
movzwl
jmp
xlat
loope
push
icebp
outsb
adc
xor
iret
sub
dec
inc
pop
mov
jg
cmp
or
sub
iret
pop
cmovno
xchg
daa
mov
xor
call
into
or
pusha
dec
stc
pop
movl
jo
xchg
shll
out
sar
cmp
add
mov
das
cltd
daa
lods
cmp
sbb
fldcw
cld
ret
xorl
shr
pop
je
popa
pop
ds
add
cld
add
sub
pop
push
cmc
push
push
out
in
push
push
ljmp
and
dec
das
inc
cld
cmpsl
and
dec
pop
xchg
jle
mov
push
pop
pop
int
adc
in
or
jns
sbb
movsl
push
outsb
cmpsb
sbbl
daa
add
mov
lret
mov
add
mov
rolb
lock
aas
dec
jno
pop
push
sub
mov
out
gs
and
lret
pop
mov
adc
push
mov
out
test
xchg
aaa
popa
stos
pop
inc
inc
icebp
aas
pop
iret
add
sub
sti
movsl
lcall
jb
xchg
pop
pop
adc
dec
xorl
jo
test
sti
and
outsl
mov
dec
stos
mov
fcmovne
insl
nop
cmp
mov
jle
pop
jge
sbbl
cmpsb
xor
xor
xor
mov
inc
push
cld
mov
leave
cltd
mov
adc
jle
and
push
fstps
js
fistpll
mov
jg
jne
xorb
adcb
sub
add
popf
test
loop
or
mov
xchg
repz
add
ret
stc
sub
and
cmp
jb
pop
jge
jle
aad
jl
fmul
inc
jle
inc
mov
adc
ss
pop
and
sbb
outsb
jecxz
dec
fbld
adc
or
pop
or
cwtl
mov
jmp
mov
decb
jp
ficoml
in
cwtl
push
test
xor
add
loopne
mov
mov
flds
jb
add
popf
or
stos
push
or
push
in
les
cmp
fistl
ret
inc
lods
xchg
push
pop
das
out
or
iret
ret
lea
aaa
push
jbe
mov
mov
gs
hlt
jle
push
lahf
testb
mov
jl
pop
lods
mov
sub
aad
or
dec
ret
or
scas
inc
cmpsb
outsl
sbb
mov
or
lea
jae
dec
push
loopne
nop
fs
cmc
out
pop
faddl
insb
pop
mov
xor
pop
addr16
jg
sbb
push
cmp
xchg
cmp
adc
in
adc
push
lret
or
mov
into
sahf
popa
lods
fnstsw
movsb
jle
movsl
popf
imul
or
push
ds
pop
lock
push
stc
cs
jl
adc
jb
mov
sub
add
lret
mov
insb
loope
adc
cmp
push
xor
shrb
in
cmp
scas
inc
lret
cltd
iret
mov
add
test
insb
pop
dec
jmp
add
popf
xchg
stos
mov
add
xor
push
sahf
push
andnps
xor
outsb
fs
cmp
les
sahf
das
fs
jb
xorb
or
mov
inc
inc
mov
cmp
dec
push
pshufw
stc
outsl
and
jmp
divl
rcrb
jge
and
pop
mov
mov
test
ret
lods
fldenv
mov
and
dec
leave
sti
sub
xor
dec
ret
pop
mov
pop
mov
bound
pop
lods
lcall
lcall
sbb
and
jns
negl
adc
dec
cmp
push
popa
pop
jle
rclb
add
mov
xor
cmp
out
and
es
into
mov
data16
adc
lcall
jle
call
jo
repnz
push
or
dec
jmp
lret
inc
sbb
push
cltd
push
pushf
pop
and
xchg
cmpsl
loop
xor
stos
insb
addr16
lock
and
xor
shrl
push
stos
inc
push
je
das
push
pop
lea
and
loope
pusha
cmp
iret
pop
cmp
in
cmp
xchg
fcom
push
nop
lret
pop
pop
lods
push
xor
cli
xchg
lods
sub
push
sub
dec
stc
inc
sub
sub
and
pop
pop
push
mov
and
inc
das
aad
daa
testb
jge
xchg
adcl
arpl
aaa
xor
out
es
xor
mov
popf
scas
imull
push
loopne
mov
xor
into
mov
xor
in
cld
sub
xchg
mov
jne
es
jo
lock
fst
mov
mov
xchg
dec
sub
insl
rolb
or
cwtl
and
or
lret
scas
movq
scas
addr16
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
movb
add
mov
imull
pop
or
jmp
mov
add
cmpsl
xor
lods
test
xor
clc
outsb
loope
aam
pop
in
xchg
pop
fwait
aas
mov
add
push
dec
push
push
cltd
mov
pop
in
addb
adc
mov
repz
and
insl
xchg
xorl
dec
push
outsb
mov
push
xor
adc
jle
sub
es
mov
xchg
dec
cmpsb
in
mov
adc
dec
mov
arpl
mov
insb
mov
das
add
adc
lret
mov
mov
lcall
lret
gs
adc
sbb
sbb
push
add
lret
mov
rolb
push
jp
daa
jp
inc
cwtl
pop
lock
icebp
mov
int
and
mov
pop
mov
cmp
jnp
jb
rcrb
data16
aam
mov
xchg
sub
xchg
mov
je
stos
jecxz
adcl
sbb
lea
enter
int3
call
movsb
push
rcll
das
insb
leave
out
decl
add
fsubs
jg
fisttpl
test
lahf
mov
and
and
movsl
repnz
lock
addr16
cmp
dec
mov
lcall
jo
outsl
lods
pop
push
daa
lods
shlb
pop
sbb
xchg
movsb
sub
data16
inc
dec
movsl
je
ljmp
xchg
push
adc
push
arpl
mov
jnp
jbe
sbb
inc
imul
add
fistps
jl
loop,pn
outsl
xchg
sub
shrb
lods
arpl
mov
shrb
or
inc
ret
in
testb
aad
lahf
jecxz
push
push
mov
or
pop
xchg
xchg
nop
add
xlat
imull
cmpb
movsl
xor
xchg
mov
sbb
mov
bound
inc
mov
ss
push
lods
jmp
inc
xor
popa
fs
mov
jecxz
xorb
cs
xor
push
push
mov
out
xor
mov
mov
jge
int
jb
in
mov
add
call
inc
xchg
ds
btr
loope
xor
loop
mov
out
mov
loop
dec
dec
sbb
test
mov
push
movsl
jle
or
xlat
stc
arpl
into
les
mov
mov
loope
std
js
mov
lcall
aaa
sbb
pop
pop
pop
add
sbb
or
sbb
das
jle
xor
sub
pop
pop
pmaddwd
mov
or
add
xchg
cld
int3
inc
cmpsl
aaa
inc
inc
mov
daa
call
push
negl
daa
std
xor
lds
cli
lods
cmc
pop
outsb
cs
sbb
in
cmp
fsubrl
sbb
jmp
outsl
push
addr16
cmp
jbe
bound
mov
repnz
cmc
inc
xchg
stos
fwait
sub
clc
pop
cmp
fcomps
xchg
cwtl
shl
ja
das
int3
mov
jnp
shrb
clc
mov
test
aas
sub
mov
fcmovu
push
icebp
int
nop
mul
adc
ss
ljmp
pop
mov
cli
pop
cltd
mov
aaa
sbb
stc
jp
and
cwtl
xchg
insb
outsl
fwait
pop
jns
ja
jnp
cltd
xchg
cld
mov
cmp
mov
push
movsb
adc
nop
call
insb
fldcw
mov
insb
fimull
cmp
movsl
loopne
pop
idivb
addr16
sahf
or
es
sub
cmp
fdiv
lret
cld
jnp
adcb
dec
movsb
lret
sbb
imul
dec
adc
aam
xchg
je
call
dec
subb
pop
xchg
ja
add
push
cli
imul
jno
int
jnp
insb
sbb
mov
dec
jb
xchg
add
mov
or
aam
dec
sbb
cmpsl
sub
fistpl
clc
in
popf
jl
and
jmp
dec
out
fisubrs
and
pop
sbb
outsb
xchg
das
sub
inc
mov
out
jmp
jae
xor
std
insl
add
mov
pop
ljmp
pop
mov
test
mov
mov
adc
stos
stos
out
hlt
in
clc
and
js
scas
into
sbb
cmp
lahf
jno
mov
test
insb
dec
es
pop
jne
mov
sar
rcll
push
and
sub
mov
jg
lret
fdivl
xchg
sarl
hlt
mov
xor
jbe
imul
adc
mov
rolb
std
jae
sbb
mov
mov
or
mov
sub
xchg
cmc
jmp
repz
mov
test
out
hlt
in
popa
shr
dec
sbb
scas
sub
addr16
cwtl
in
pop
cmp
cmp
popf
jp
dec
mov
loope
xlat
js
aas
ljmp
fcoms
mov
jns
sbb
iret
test
cli
test
cmpb
loopne
mov
sub
push
push
mov
xchg
imul
ss
jns
outsl
clc
outsb
insl
push
rclb
out
mov
push
arpl
dec
mov
loope
out
stos
imul
fbstp
clc
orb
inc
mov
je
pop
cltd
inc
xor
mov
cmp
ficoml
jno
inc
in
cmpsl
stos
sti
in
rclb
xlat
cmpsl
push
cmpsl
fcompl
andb
mov
sub
ja
mov
sub
ficomps
adc
js
lods
xor
imul
addr16
and
adc
mov
std
or
cwtl
push
push
repnz
lret
repz
mov
xchg
jne
fisubrl
out
int3
fmul
pushf
and
in
jno
mov
sbb
fucomp
adc
mov
cmp
addr16
push
outsb
xchg
adc
pop
pop
iret
ftst
out
test
fstps
fs
cvtps2pi
aad
pop
cmp
sbb
test
mov
mov
call
add
enter
sarl
out
xchg
out
or
repz
xorl
aas
or
sub
aad
jno
stos
int3
faddl
sbb
into
jmp
or
popf
mov
mov
rcrl
dec
iret
push
ss
test
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
repnz
push
add
pop
push
add
sbbl
cmp
jle
sbb
ret
int3
pop
subps
lods
das
mov
pop
outsb
cmp
outsb
rorl
daa
faddl
out
mov
iret
loopne
jecxz
jmp
dec
pushl
enter
rcl
sub
adc
pop
dec
fstpl
mov
stc
xlat
mov
pushf
add
jne
cmpsb
pop
ss
lahf
xor
sahf
push
sbb
push
aas
mov
lret
pop
and
ret
or
ret
sbb
push
or
pushf
sahf
out
adc
scas
and
notl
loop
sub
push
xor
xor
js
loopne
dec
mov
sub
push
adc
fisttpl
hlt
shrw
mov
popf
int3
xchg
loopne
mov
adc
into
pop
dec
mov
mov
pop
jmp
icebp
loope
jns
mov
sub
inc
xor
inc
inc
cmp
ficoms
mov
push
xor
lock
rep
or
inc
ror
call
dec
mul
inc
mov
jae
add
mov
cmpsb
sub
callw
cmp
add
and
pusha
cwtl
adc
hlt
pop
daa
and
sbb
mov
pop
ljmp
add
and
nop
mov
js
jb
mov
insb
mov
dec
fcmove
les
jmp
lods
mov
or
enter
rcrl
push
mov
pop
mov
rol
xor
test
mov
test
mov
dec
jae
rcr
xor
dec
jg
popa
je
xor
sbb
mov
sub
shrl
les
xchg
shrb
out
pushl
arpl
push
sbb
fldenv
loopne
fisttps
mov
repnz
jp
cmp
mov
loopne
insl
fdivr
cltd
and
int
mov
shll
push
dec
cli
dec
mov
xor
sub
sahf
push
nop
sbb
xor
daa
rcll
jle
in
repz
inc
pop
in
lds
sub
mov
mov
and
add
ljmp
cmc
ja
add
push
test
add
add
hlt
pop
int
cltd
lods
cmp
insl
push
scas
xor
in
xchg
dec
cmp
loopne
data16
insl
lods
loope
aaa
push
push
cwtl
mov
sbb
repnz
notl
xchg
push
in
and
xchg
and
mov
cwtl
sbb
js
dec
je
and
xor
sbb
and
sti
les
cmpsb
lret
or
xor
lahf
imul
pushf
push
adc
insb
adc
jnp
cmpsl
inc
inc
jecxz
mov
xor
out
and
ret
sti
fwait
sub
test
xchg
xchg
sbb
jns
sbb
adc
sbb
ret
push
inc
mov
int
sahf
incb
add
cmp
and
test
jno
shlb
push
mov
aas
out
inc
mov
dec
sub
loope
jne
jb
pusha
push
jns
cmc
and
out
dec
mov
fsubl
lods
sub
or
xchg
add
adcb
cmc
mov
inc
out
mov
fistpll
arpl
test
loope
shrb
mov
jp
shll
jmp
js
iret
cmp
mov
xor
cmp
icebp
sahf
mov
arpl
adc
cmp
xchg
test
mov
int
arpl
xor
testb
mov
jg
imul
jmp
adc
cmp
xor
mov
or
xlat
mov
jbe
adc
mov
rcrl
jl
jae
test
hlt
cli
xlat
mov
push
push
adc
call
mov
adc
xchg
imul
push
loop
sbb
adcb
add
int
insb
mov
mov
in
int3
cs
inc
nop
lret
or
in
dec
pusha
nop
and
lahf
mov
inc
notb
pushf
test
add
cmp
and
in
mov
ds
add
pop
cmp
push
push
inc
push
and
loopne
inc
popf
mov
or
sbb
sub
jno
add
cmpsb
fisttpll
mov
std
cmpsl
push
mov
or
incb
xor
xor
adc
jo
add
adc
in
aad
jne
movsb
aaa
lcall
test
xor
adc
je
inc
arpl
leave
rclb
sub
jle
loop
dec
mov
adc
scas
add
mov
xchg
adc
xchg
arpl
jge
xor
notb
aaa
mov
enter
cmpsb
sub
cmp
push
sbb
mov
jp
daa
loop
or
mov
js
push
adc
mov
stos
push
test
mov
mov
dec
test
aas
sub
pop
push
jno
popa
movsl
mov
inc
xchg
imul
mov
repnz
out
das
addb
xchg
pop
inc
fidivs
sub
daa
fwait
test
inc
mov
mov
jne
bound
lcall
dec
and
rclb
push
push
mov
cmp
lahf
cmp
pop
dec
inc
lcall
ret
mov
in
rcrb
mov
aad
xor
pop
out
push
xorl
popf
jo
jg
and
stc
push
add
sbb
mov
mov
in
stos
pushf
popf
mov
cmc
arpl
loop
mov
jp
inc
jnp
fnstenv
loope
add
inc
adc
and
add
inc
pop
inc
jno
hlt
lods
xlat
and
add
adc
popl
scas
jns
lret
ljmp
repnz
shrb
cmpsb
inc
jb
add
popf
cmp
jecxz
incb
xor
cwtl
mov
sbb
addb
sub
or
cwtl
clc
lcall
loopne
xchg
dec
jmp
lock
cmc
out
gs
stos
in
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
add
add
or
cmp
mov
pushf
pushf
jb
jmp
mov
add
cmp
push
xchg
cmp
sub
push
addr16
arpl
mov
add
pop
dec
fmull
rcll
fsubrl
es
decl
or
sbb
push
test
faddl
inc
int
notl
mov
inc
outsb
lcall
cmpsb
repz
sbb
test
inc
sbb
int3
sbb
fcomip
xchg
xchg
adc
pop
ret
js
les
movsl
pop
pop
lret
movsb
test
test
lods
pmaddwd
sbb
aas
jecxz
idivl
imull
cmpsb
dec
int3
lods
sarl
and
sbb
rclb
lods
mov
xlat
mov
pop
xor
jmp
aad
adc
sub
addl
or
mov
mull
push
dec
jae
test
ljmp
pop
dec
loop
lock
xlat
and
stc
pop
add
sbb
repnz
lods
push
dec
js
mov
stc
xor
movsl
insl
push
movzbl
xor
in
fisttps
test
pop
ja
mov
mov
das
jnp
pushf
sbb
out
in
lea
pop
cmp
add
sbb
jno
ficoml
sbb
mov
dec
gs
lcall
pop
out
or
int
clc
pop
arpl
cmp
fsubrs
call
shrl
fnstcw
movsb
mov
xchg
mov
dec
jmp
inc
mov
sub
imul
mov
pop
mov
scas
sub
in
mov
repnz
jmp
lret
mov
mov
add
lea
or
adc
dec
push
or
cmp
inc
adc
mov
lret
mov
nop
inc
ret
mov
jmp
inc
out
roll
xchg
or
sbb
adc
inc
mov
sbbb
push
aad
pop
in
xor
cmpsb
pusha
and
stc
xchg
xor
shll
jne
add
pop
movsl
push
pop
in
pushf
xor
sub
and
push
aam
cmp
push
dec
adc
arpl
cmp
ret
out
imul
dec
push
cmp
movsl
dec
loop
popa
stc
cmp
xchg
sub
jbe
les
insl
adc
jl
out
cwtl
or
sbbl
and
jmp
adc
xchg
dec
pop
outsb
inc
das
push
cmc
addl
fistl
add
mov
dec
cmp
enter
call
xchg
and
push
xor
and
insl
jae
dec
in
jl
shlb
inc
std
idivl
cmp
xor
mov
dec
jno
sbb
cmc
popf
adc
data16
out
scas
jge
xlat
ret
dec
ds
loopne
mov
mov
sub
lret
fmulp
call
sub
mov
jno
pushf
lea
fwait
push
or
movsl
dec
sbb
out
mov
inc
or
jne
ret
cld
cld
lock
jnp
cmpsl
lret
inc
jmp
sub
arpl
xchg
sbb
pop
enter
push
jbe
loopne
sbb
rcl
enter
xor
pop
das
lret
sbb
inc
jnp
dec
pop
push
mov
sub
dec
lret
outsl
lods
and
xor
jbe
push
mov
ss
sbb
xor
mov
loopne
lods
add
adc
xor
xor
mov
cs
inc
push
test
cmpsb
in
fistl
xchg
rorl
xchg
lcall
hlt
cmp
insl
pop
inc
fdivl
xchg
fs
dec
mov
cmp
push
xor
addr16
loope
pand
inc
cmp
mov
hlt
mov
mov
mov
aas
dec
fcmove
cmpsl
call
icebp
add
pop
inc
jb
insl
subb
lds
enter
and
mov
lods
push
lods
jno
and
pop
int
inc
or
mov
push
ficomps
sbb
mov
jbe
loop
out
mov
imul
aad
xor
ja
pusha
sbb
mov
mov
adc
push
push
nop
ss
sahf
push
xchg
add
pop
cmp
mov
cwtl
inc
pop
ds
ss
push
and
mov
out
mov
pushf
mov
addr16
aad
dec
popa
adc
xchg
pop
adc
mov
push
mov
add
call
and
movsb
xor
adc
in
cli
mov
sub
and
js
xchg
xorl
jp
ret
sub
mov
push
pop
jecxz
sub
mov
mov
lcall
idiv
push
cwtl
cmp
jno
inc
adc
sbbb
jge
lock
inc
xchg
lock
gs
setl
mov
lea
ficoml
out
adc
xor
sarb
push
enter
or
jb
or
add
icebp
jl
stos
ret
cmp
mov
insb
imul
sub
mov
jae
add
imul
ret
xor
pop
nop
push
and
stos
inc
hlt
mov
ja
mov
or
inc
test
mov
jl
call
jno
add
xchg
mulb
pop
gs
loopne
shlb
jae
imul
in
cmp
pop
mov
fisttpll
dec
pop
pop
hlt
clc
sbb
in
iret
ret
into
aad
leave
fwait
dec
cli
dec
in
js
jmp
sub
scas
push
mov
mov
inc
cmp
fcomp
adc
movsb
cmc
pop
ss
in
inc
icebp
pop
push
das
das
sarl
fmull
mov
cmc
test
mov
add
lods
xchg
cmpsb
rorb
or
enter
fistpll
push
mov
mov
fwait
js
mov
cli
popf
divl
nop
xchg
addb
repz
loope
or
inc
push
jle
mov
pop
aad
dec
int
rcr
or
adcl
pop
sbb
jle
and
in
mov
arpl
cs
pushf
clc
adc
dec
mov
mov
inc
shll
mov
shlb
or
dec
inc
xlat
sub
enter
shr
inc
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
repz
shll
add
dec
es
repnz
jnp
or
lds
inc
cmp
std
sbb
inc
sbb
xor
adc
push
lcall
pop
push
add
rolb
jo
add
and
or
xor
fildll
out
test
inc
xchg
aaa
aam
sub
cmpsl
cwtl
scas
push
mov
mov
mov
rcr
xor
inc
pop
cwtl
sbb
iret
cld
dec
sub
add
sbb
inc
in
stc
add
hlt
lret
aam
jae
jmp
mov
xchg
jno
fwait
jae
add
xchg
lcall
cmp
dec
lret
push
cli
ds
pop
mov
cwtl
push
out
xorb
and
push
adc
pop
xor
insb
sbb
xlat
lods
xchg
xor
mov
mov
xchg
cmp
lret
std
adc
es
inc
jge
jne
push
mov
clc
lcall
in
jge
push
aam
cs
lds
ror
in
iret
xor
add
mov
inc
and
jo
aam
lods
inc
das
mov
cltd
insl
pop
shrb
jne
call
enter
push
sub
popa
and
fildl
dec
pop
shlb
popf
mov
sbb
repnz
bound
imul
xor
xchg
adc
push
int3
pop
pop
add
outsb
xchg
pushf
mov
sti
sub
and
movsb
adc
imul
inc
pop
mov
jb
in
popf
popf
call
bound
push
pop
xor
pop
adc
fnsave
jns
fucom
pop
outsl
jb
mov
loop
js
pop
in
ficoml
popa
dec
scas
pushw
push
aas
inc
adc
scas
pop
mov
ja
inc
cmpsl
repnz
and
aas
and
xor
fdivrs
in
xchg
pop
bound
pop
ret
mov
sub
jbe
jae
imul
add
fisttps
mov
cmpb
fiaddl
ds
mov
mov
aas
sub
aas
lods
cmpsb
add
dec
popf
sbbb
in
fists
adc
inc
iret
insb
andb
push
cmc
pop
sbb
mov
jno
stc
mov
outsl
xchg
insb
or
inc
or
cltd
mov
add
je
mov
cld
ret
fdivp
stos
mov
mov
mov
jno
lods
inc
xorb
adc
rol
xorl
jmp
cmp
and
jno
ficoms
xor
loop
jge
sub
shrl
push
xor
ljmp
fmul
pxor
repz
cli
cmp
mov
mov
fwait
mov
iret
pop
mov
add
xchg
and
mov
xchg
inc
divb
mov
vstmxcsr
leave
hlt
imul
mov
add
pop
hlt
push
daa
shrl
negl
repz
add
jg
insl
and
mov
mov
ficoml
push
cwtl
out
mov
aam
nop
arpl
jae
inc
leave
jnp
popa
pop
fiaddl
aam
sbb
adc
xchg
ret
xor
jg
and
movl
and
lods
jge
jno
ja
imul
push
das
xchg
inc
sub
sub
cwtl
in
sbb
pop
push
mov
ret
sbb
into
shll
adc
add
fbld
jnp
out
xor
dec
push
cwtl
sub
adc
mov
data16
pop
jmp
cmp
fisubs
lea
inc
cmp
and
and
ljmp
adc
fbstp
imul
popa
sti
or
push
sbb
add
fcmovbe
jne
mov
movl
xor
xchg
cmpl
out
dec
sub
mov
in
or
out
arpl
push
orb
ret
xor
mov
xor
bnd
xor
dec
adc
addb
sbb
mov
inc
add
insb
xlat
mov
adc
cmp
andl
jns
cld
aaa
add
pusha
and
pop
jnp
pop
cmp
lea
pop
xchg
std
adc
inc
jl
sub
pop
add
jns
push
mov
inc
sbb
sub
pushf
scas
lods
cli
inc
lahf
sbb
dec
cli
or
sti
pop
repz
clc
in
xor
call
out
push
pop
sub
enter
rclb
mov
arpl
insl
xchg
shlb
mov
aam
dec
shl
mov
xchg
sbb
mov
leave
cmp
cmpb
test
add
push
dec
bound
mov
jbe
xor
lcall
push
cli
xchg
repz
pop
inc
inc
mov
je
les
pop
dec
test
andb
xchg
stos
in
insl
add
sarb
cmp
addr16
dec
jp
jg
mov
sbb
rorl
repnz
dec
mov
adc
mov
jmp
adc
add
adc
mov
or
mov
les
mov
aaa
and
lock
push
mov
nop
stos
push
imul
aad
jbe
into
jne
loope,pt
jl
inc
gs
sbb
mov
test
jo
in
adc
inc
sub
cmpsl
jnp
pusha
xchg
int3
and
aad
addl
rolb
pusha
in
fisubs
aaa
cmc
in
push
add
push
pop
es
mov
lcall
divb
mov
xlat
xchg
cmpsl
dec
jbe
mov
scas
loopne
sbb
gs
lods
das
ror
aas
push
cli
xor
fsubl
push
xchg
aam
mov
stos
ficoml
jns
lods
dec
jnp
xor
or
aaa
add
fadds
mov
dec
movsb
dec
clc
sub
xchg
hlt
mov
outsl
out
in
in
scas
push
dec
and
push
aas
pop
xchg
dec
shll
dec
cwtl
lahf
jbe
ja
movsl
divb
push
dec
or
lret
adc
call
mov
cmp
mov
sbb
sbb
pop
cmp
subl
mov
repz
mov
std
xchg
cli
ja
sbb
mov
mov
sub
mov
aaa
lcall
pushf
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
push
add
fwait
cmp
add
xor
fidivrs
lret
cmpsl
xchg
into
push
rcrb
and
mov
mov
dec
mov
cmp
push
lds
add
cmpb
es
push
nop
dec
in
lock
sub
xchg
add
sbb
fisttps
rcll
lods
hlt
push
xor
inc
jae
mov
in
loope
add
and
pop
sarl
add
adc
sub
mov
xor
insb
push
adc
ljmp
int
neg
stos
insb
sub
jg
test
loop
inc
cmpl
mov
ret
sbb
rolb
fbld
cmp
sub
insb
or
in
shl
ret
fldt
mov
int
push
push
xchg
or
and
jo
test
out
mov
test
leave
ljmp
in
add
dec
insl
cmpsb
mov
rcrl
repnz
repnz
or
dec
ds
lahf
inc
outsl
out
fs
in
adc
cli
aaa
jmp
or
lock
test
lcall
xor
cmp
mov
fnsave
subl
mov
dec
lahf
enter
xlat
outsl
jne
fucom
loopne
movsl
out
pop
je
push
xor
mov
jmp
in
jecxz
jmp
push
daa
push
cwtl
in
xchg
insl
push
lods
cmpsw
dec
aam
and
fcomip
in
loope
xor
cwtl
outsl
jno,pn
fisttps
int
push
adc
add
add
jae
out
pop
sub
jbe
mov
push
lods
mov
inc
imul
out
or
sub
mov
mov
push
mov
mov
sbb
mov
aas
inc
xor
test
data16
dec
movsb
sbb
and
inc
cltd
xor
cmp
cmp
jbe
xchg
cs
cmp
pop
out
and
cmpb
jge
mov
xor
mov
mov
js
popf
outsb
push
mov
dec
mov
cmpb
repz
cli
cmp
sbb
sti
ja
popa
shlb
jno
js
gs
xchg
push
nopl
mov
mov
mov
mov
or
in
fnstcw
add
jle
sbb
sbb
in
aas
and
lods
xchg
dec
imulb
add
in
jl
dec
cltd
mov
add
lret
lds
pop
loop
movsl
sbb
jge
pushw
mov
js
pop
enter
or
lahf
test
aas
dec
lret
pop
mov
test
add
shlb
xchg
bound
clc
ds
fcomps
clc
push
je
mov
push
jecxz
sub
mov
repz
mov
sbb
lahf
test
jns
movsb
mov
addl
and
sub
dec
xchg
dec
out
cmp
xchg
mov
mov
push
out
xor
sbb
sbb
add
mov
sti
and
mov
or
das
or
jecxz
mov
nop
cs
movsl
or
pop
push
sbb
ljmp
jae
in
adc
add
xor
xor
jb
and
mov
pop
jo
shlb
sbb
jbe
push
mov
loop
cmp
gs
add
xorb
sahf
pop
jns
in
xor
add
sbb
int
xchg
mov
xchg
inc
xor
fwait
test
add
mov
sbbl
outsb
mov
fildll
sbb
insl
mov
sub
fldt
int3
loopne
cwtl
in
push
movsl
movsl
adc
xor
push
push
popa
cmp
mov
dec
not
sbb
push
xchg
les
and
push
pop
mov
jb
cwtl
dec
push
arpl
jns
hlt
xchg
jne
adc
jb
lea
je
xor
xlat
test
xchg
adc
cmpb
jne
cmp
mov
dec
fidivs
inc
dec
or
in
lcall
and
arpl
insb
jb
xchg
pushf
mov
add
pop
mov
adc
pop
mov
pop
cmp
cmpsb
inc
lahf
push
mov
xchg
dec
leave
das
lahf
add
pop
dec
push
or
inc
jns
dec
icebp
jle
nop
jg
int3
sbb
scas
mov
int
lods
xchg
stos
lods
test
mov
and
adc
mov
push
sahf
mov
dec
xor
sbbb
cld
sbb
divl
test
push
aas
mov
lret
cmp
mov
jno
and
dec
add
xor
into
or
jp
lds
sub
add
inc
pop
sub
outsb
sbbb
add
stc
mov
aaa
xor
sbb
jne
sbb
adc
pop
cli
cltd
xchg
jns
loop
ret
xor
and
lahf
ret
push
ds
les
jecxz
mov
ss
xor
jo
inc
ss
add
inc
cmp
ror
cli
mov
push
dec
inc
notb
aas
sbb
in
or
pop
mov
ficoml
xchg
cmp
aam
adc
jnp
inc
fs
xchg
mov
lods
lds
jno
aaa
mov
and
out
lcall
bound
bound
sub
out
cmp
out
mov
and
ficoms
and
lods
pusha
and
es
fcoml
ret
cmp
aam
xor
icebp
addb
and
jg
mov
mov
xor
into
insb
sbb
xchg
mov
ja
out
int
in
cwtl
push
push
pushf
mov
add
mov
cli
outsb
in
jns
std
lret
hlt
add
jbe
ret
jno
cmp
data16
sub
adc
mov
jo
lods
hlt
cli
adc
sub
and
cmpsl
mov
xchg
fistpl
jg
mov
addl
adc
movsb
mov
int3
repz
push
sub
inc
lcall
ja
cmc
ficompl
mov
pop
sub
xchg
jg
sbb
lcall
cmp
aaa
aam
dec
orb
in
cmp
xor
jge
movsb
cmpsb
jecxz
std
mov
cmp
and
mov
iret
popa
aaa
push
inc
inc
and
in
mov
inc
xchg
in
mov
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
add
mov
int
and
mov
inc
mov
xlat
mov
adc
shlb
cmp
mull
sbb
pop
jne
movsb
cmpsb
mov
push
dec
arpl
xchg
je
cwtl
xlat
and
jo
xchg
sahf
repz
mov
test
cmp
dec
data16
inc
add
sbb
jl
roll
xchg
icebp
mov
xor
ja
push
and
xchg
cmp
decl
ja
and
pop
loop
mov
push
inc
or
inc
icebp
sbb
stc
xchg
xchg
and
negl
adc
xor
icebp
xchg
ja
add
sub
mov
cmc
xchg
and
mov
xchg
lret
test
int
pop
test
push
js
inc
stos
popf
pop
aam
out
lock
lcall
sarl
mov
lcall
mov
aad
mov
xchg
std
pop
add
and
xchg
fisttpll
lods
or
test
lcall
mov
jb
popf
mov
or
shlb
jae
es
out
pop
pop
fsubr
outsb
lret
iret
xor
into
sti
enter
bound
insl
ret
mov
cmp
sbb
sbb
leave
out
ss
lock
and
xor
pop
movsl
mov
pop
sbb
mulb
scas
test
mov
or
dec
add
dec
sahf
pusha
test
out
lret
lea
shrl
pop
rcpps
add
add
ljmp
aad
outsb
andl
movsl
sbb
out
and
inc
dec
jne
ret
push
js
inc
fcmovnu
call
lods
gs
or
and
into
loopne
ret
fisubl
or
lahf
imul
aaa
mov
arpl
gs
addr16
pop
imul
dec
imul
mov
ljmp
out
shll
mov
and
fidivrs
mov
xlat
and
fistpl
shlb
clc
int
icebp
and
add
dec
aaa
add
int
jo
ds
ljmp
test
mov
jb
fwait
push
cmp
cmp
mov
addl
shrb
std
cld
sbb
adc
addl
jp
daa
stc
add
jg
mov
xor
les
push
cmp
mov
bound
int
lcall
hlt
mov
mov
sbb
rorb
ljmp
adc
push
pop
and
sbb
hlt
mov
js
sahf
repnz
cmc
sub
inc
fadds
or
pop
sbb
jmp
cmp
mov
gs
fxch
pop
lret
std
push
xchg
test
cmpsb
mov
sbb
fldenv
ds
mov
inc
mov
mov
pusha
mov
cld
sub
xchg
mov
mov
sub
movsl
js
cmp
xlat
aas
mov
mov
fisttps
dec
lret
in
push
in
mov
ret
aaa
movsb
and
in
lret
jle
jp
outsl
push
sub
and
mov
in
sub
loop
mov
int3
pop
cmp
rcl
das
jl
adc
ja
fdivl
clc
push
mov
sub
sbb
xor
pop
add
aad
xchg
js
xchg
xor
xor
leave
stos
lcall
xor
dec
arpl
and
mov
ljmp
cmp
inc
pop
aad
jnp
jmp
or
mov
sbbb
jp
loop
hlt
mov
out
jle
scas
sbb
aad
cwtl
lcall
jns
lea
xchg
popf
fadd
icebp
ret
mov
sub
sbb
sbb
mov
std
js
adc
test
and
lret
fs
test
mov
fbld
out
in
cs
jge
popa
loope
xchg
mov
dec
rcrl
dec
jns
sbb
or
xchg
push
inc
xor
cmpsb
xchg
dec
mov
clc
adc
cld
addl
mov
loope
mov
inc
pop
decl
es
cmp
inc
dec
push
call
out
mov
icebp
jl
pop
push
fiadds
rcl
mov
fidivs
sbbb
pop
int
pop
add
call
cmpsb
inc
int
sbb
and
aad
pop
mov
sub
pop
jo
daa
lods
sub
hlt
or
mov
and
int
and
cmp
push
xchg
ds
sub
shll
add
xor
xor
or
outsl
xchg
xchg
imul
sbb
daa
les
imul
xchg
sarl
out
jle
inc
cmp
outsb
lahf
fsubl
mov
sbb
ss
js
xor
mov
scas
mov
mov
mov
pop
jae
sti
pop
jmp
sahf
rorl
or
fbstp
pop
lcall
cmp
xchg
scas
fs
pushf
push
in
arpl
pop
mov
jne
cld
xchg
or
jge
push
lret
mov
jo
out
push
dec
lret
bsr
ret
xor
cltd
xchg
cwtl
xor
cmpsl
xchg
xor
mov
push
mov
insl
fldenv
popf
mov
popa
ljmpw
pop
movsb
sti
push
aaa
sub
rorb
into
int
push
xor
movsl
sub
jnp
in
inc
mov
fdivrs
jle
insb
jb
ds
or
sbb
cmp
mov
or
cmpsb
sbb
or
loopne
shrb
dec
iret
mov
xchg
mov
aaa
pop
and
adc
lods
lcall
adc
or
rcrb
fwait
ja
das
jp
xchg
xchg
in
cs
test
in
imulb
lahf
aas
inc
dec
test
mov
das
js
mov
dec
inc
aad
das
arpl
jecxz
ds
js
sub
ds
pop
pop
push
inc
enter
inc
xchg
lret
popa
sbbl
ret
mov
sub
xchg
mov
jo
or
jecxz
sti
into
adc
inc
lods
in
in
mov
and
mov
xor
inc
mov
imul
adc
lock
cmc
scas
xor
mov
push
aam
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
mov
js
cli
add
leave
loopne
adc
adc
out
mulb
and
mov
fs
stos
inc
fisubrs
out
popa
cwtl
adc
aaa
pop
adc
dec
xchg
pop
or
mov
adc
push
xor
test
pop
cmp
fs
ds
enter
mov
sbb
sub
insb
mov
xchg
ds
fstp
fs
dec
sbb
cmc
sub
in
cmp
jnp
mov
scas
or
sti
mov
std
adc
add
imul
mov
jg
jmp
aad
inc
dec
sti
icebp
xchg
mov
push
int
daa
fdivl
jnp
clc
xchg
adcl
add
jbe
mov
sbb
mov
es
sub
xorb
xlat
call
lahf
test
cltd
jmp
dec
fistl
lcall
arpl
mov
adc
movsl
out
sbb
ja
loop
and
out
stc
lock
pushf
repz
jmp
movsl
mov
lretw
lahf
xlat
mov
mov
lea
scas
pop
sbb
push
xchg
icebp
imul
fidivrl
lcall
mov
divb
push
movb
jns
sub
loopne
test
bnd
inc
jle
jno
fisubs
mov
sahf
lds
sub
test
mov
test
cli
nop
and
cmp
xchg
ja
mov
or
stos
mov
jg
and
mov
lahf
bound
or
inc
sbb
mov
xor
gs
sub
ljmp
lds
cltd
pop
push
ss
leave
and
add
pop
xchg
lods
mov
pusha
add
and
hlt
inc
or
xchg
repz
ret
rsqrtps
scas
loope
xor
fsubs
add
je
movsb
repz
push
push
add
push
push
mov
push
mov
popa
or
pop
adc
int
jb
xlat
fidivl
cmp
fisubl
enter
xchg
lods
adc
ljmp
xchg
call
test
or
lods
push
sbb
cmpl
loopne
cmp
shll
push
loopne
jne
fwait
push
nop
lds
or
shr
insl
popa
sahf
gs
sti
mov
lret
faddl
push
faddl
sbb
jecxz
pusha
int3
testb
adc
mov
mov
xchg
sbb
xor
dec
push
sub
pop
mov
adc
push
rorb
stos
inc
rol
xor
inc
jg
xchg
fwait
out
cmp
or
stos
add
or
lock
lods
ds
out
lahf
add
or
shlb
int3
repnz
mov
mov
cmp
push
inc
dec
jns
sbb
xor
mov
hlt
jb
adc
cs
push
mov
mov
scas
mov
or
scas
mov
fisttps
mov
movsl
imul
mov
cmp
cmpsb
jne
iret
gs
push
in
ljmp
sar
xchg
push
inc
int3
loopne
xchg
popl
sub
mov
xchg
adc
cli
dec
jns
cld
xor
pushf
mov
jb
mov
ss
inc
jns
push
stos
lods
mov
push
jmp
mov
or
sub
sub
sahf
mov
mov
scas
cmpb
cs
sbb
mov
push
xchg
push
add
mov
ss
push
stc
adc
loope
adcl
jb
adc
sub
imul
fcmovb
and
dec
aam
cmpl
push
cmp
sub
xchg
std
cmp
sub
ja
stc
jns
mov
aaa
cltd
stc
shll
cmc
inc
xchg
push
fwait
mov
add
mov
mov
les
repz
dec
or
adc
or
jnp
push
mov
aad
inc
in
mov
cmp
xchg
cwtl
les
cwtl
cmp
sub
mov
sub
out
cmp
data16
sbb
push
lock
negb
int
clc
inc
jo
jle
push
mov
mov
jle
mov
popa
adc
sarb
sbb
sbb
jnp
jge
push
out
xchg
or
cmp
scas
inc
dec
pop
or
out
dec
mov
mov
adc
in
push
aaa
and
aam
scas
mov
ljmp
in
negb
inc
lods
lahf
jg
iret
and
mov
add
je
add
test
sbb
daa
or
xor
pop
int
insb
cld
loopne
pop
loop
lea
stos
cli
and
jl
movsl
callw
push
mov
aad
or
pop
push
sbb
xchg
push
push
inc
push
shl
sbb
out
aaa
insb
pop
mov
mov
repz
test
push
arpl
cmp
adc
sbb
sti
lds
aam
mov
ljmp
or
pop
jg
aaa
xchg
mov
pop
and
gs
scas
insl
scas
adc
or
in
mov
push
xor
int3
cmpsb
dec
cwtl
and
sbb
lcall
call
scas
enter
xchg
push
repz
jl
xor
test
stc
enter
clc
cld
adc
std
mov
icebp
xchg
jne
sub
sbb
and
fisubrl
mov
jmp
test
in
fwait
and
jle
or
fwait
int
mov
xor
ja
iret
xor
mov
daa
jecxz
imul
dec
cs
sahf
add
sbb
push
sbb
call
add
mov
pusha
dec
mov
inc
test
lcall
lods
pop
int3
xor
ja
lret
andb
call
repz
movsb
xchg
sbb
mov
inc
cmp
sbb
daa
mov
iret
shlb
mov
mov
mov
into
mov
xor
fdiv
dec
hlt
iret
mov
jae
jns
cmp
rcr
jo
xor
imul
adc
daa
cmovne
shrl
adc
add
mov
das
enter
push
aad
pop
ljmp
add
add
adc
pop
or
sub
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
mov
call
paddusw
ror
ja
in
adc
shrl
bound
jno
ret
popf
cli
leave
adc
jl
cs
insb
in
sti
cld
nop
mov
enter
push
inc
mov
xchg
sub
pop
stos
xchg
and
sub
cld
inc
jno
addr16
mov
sub
sub
sub
mov
adc
sub
int
xor
adc
call
je
push
fdiv
out
rcrb
add
sub
and
add
sub
add
xchg
mov
jbe
jmp
test
mov
cmp
popf
xchg
or
cmp
add
mov
mov
fldcw
imul
stos
cmpl
or
mov
ds
test
fucom
test
xchg
sub
jbe
inc
mov
mov
xor
pop
inc
jne
mov
sahf
popf
gs
int3
jmp
sub
push
xchg
in
loope
lea
mov
shlb
pop
xor
sbb
mov
ret
adc
xchg
testb
into
rclb
xchg
cs
push
test
pop
in
call
pop
test
xor
pop
dec
adc
cli
in
cmp
aas
out
cmp
sbb
fisubrl
js
insb
cmpsl
cmc
mov
rcr
sbb
jno
aad
in
xor
lods
push
je
insb
test
or
sub
bound
xor
hlt
add
pop
pop
cmp
not
sub
cmp
and
xlat
pop
imul
outsl
sub
mov
movhps
mov
sbb
sahf
rorb
xchg
sbb
movsl
lret
fst
gs
push
insb
pusha
popa
popa
sbb
pop
dec
inc
fs
pop
push
push
push
pop
pop
fadds
shrb
sti
pop
xor
cmp
in
lods
inc
aas
ffree
mov
pop
clc
bound
push
test
shlb
and
fstpt
gs
pop
arpl
dec
iret
addr16
js
sti
lods
jo
xor
mov
arpl
cltd
sub
xchg
add
rclb
ss
fbstp
mov
sub
cld
xchg
jbe
inc
shl
outsl
test
in
addr16
repz
mov
notl
rep
jecxz
push
outsl
jnp
pop
pop
dec
iret
adc
add
movsl
test
addb
ljmp
popf
lcall
dec
and
je
repz
or
xchg
cmpsb
out
mov
in
cmpsb
xchg
std
mov
sbb
push
shrb
jecxz
adc
scas
push
xor
mov
mov
xor
lock
int3
dec
mov
sbb
mov
ljmp
stos
out
dec
insb
sbb
mov
xchg
cwtl
push
adc
leave
fidivrl
aaa
jbe
clc
and
notb
mov
mov
add
popa
sub
or
aad
test
push
ret
lock
or
push
pop
in
xor
mov
adc
cmpsl
pop
in
into
scas
lret
push
sub
mov
es
es
dec
jo
in
outsl
fbstp
inc
xchg
and
aad
in
fldenv
pushf
mov
fs
jo
clc
imul
cmpsb
or
and
test
aad
sub
push
jno
in
js
icebp
and
jns
out
cltd
sub
fs
xchg
add
adc
push
aaa
mov
sti
lds
es
inc
dec
nop
mov
shl
sbb
lea
sub
xchg
inc
popa
adcb
jb
push
mov
add
sub
mov
xlat
lea
mov
sbb
popa
shlb
jp
jp
jmp
xor
out
add
sahf
pusha
lock
add
cmp
dec
adc
das
fcmovb
test
jmp
xchg
scas
xchg
mov
inc
inc
stc
jns
loopne
test
cmp
inc
or
inc
js
subb
xchg
xchg
mov
repnz
pop
stc
push
mov
fs
rorb
test
mov
dec
ret
fistpl
and
cmpb
push
fs
xor
dec
lock
fistl
jecxz
cs
mov
inc
ja
out
add
inc
hlt
sub
fucomip
mov
lahf
es
mov
loopne
xor
lods
jmp
cs
and
lret
dec
sbb
jnp
pop
fldenv
js
pop
jb
shll
mov
in
push
fwait
mov
mov
push
add
movsl
stc
ss
add
push
cmpsb
or
dec
mov
mov
sbb
jae
or
mov
lret
cmp
lcall
rcrl
int
dec
repz
cmc
xchg
data16
nop
mov
pop
mov
lea
scas
mov
mov
cld
scas
fisubs
shl
hlt
aaa
mov
roll
insl
xor
xor
dec
mov
in
sub
pop
insl
xor
fs
xor
cmpsb
aaa
push
rorb
out
sbbl
mov
push
repnz
leave
xchg
test
leave
mov
or
dec
into
jb
xor
and
jge
jp
in
ja
cmp
test
leave
sub
pop
pop
bound
dec
repz
inc
jg
into
mov
fwait
sbb
hlt
sbbl
testl
jbe
inc
push
out
imul
cmp
lds
add
add
jecxz
insl
imul
pop
jne
loope,pt
fists
pop
fadds
push
sbb
lahf
jns
push
or
sbb
add
push
in
out
das
xor
push
push
inc
fwait
dec
sub
test
adc
pop
sub
icebp
loop
push
cmpsl
jno
dec
andl
imul
sbb
mov
outsb
in
mov
aam
or
jo
scas
gs
rorl
jl
js
sub
mov
lods
outsb
sti
ret
sbbb
lds
pop
cwtl
pop
cmp
sbb
xor
repz
push
shlb
pop
enter
fucomip
add
imul
shll
iret
jns
dec
or
cmp
rclb
pop
test
ds
movsl
mov
push
dec
aad
lcall
cmp
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
sbbl
inc
xchg
and
pusha
aad
arpl
sbb
or
xchg
add
ja
dec
mov
fldenvs
jae
bndstx
jmp
cwtl
xchg
in
js
lret
fildll
mov
je
xchg
popf
push
xchg
orb
lea
inc
loop
mov
or
mov
pop
xor
test
in
iret
mov
fst
lcall
ret
movsl
aaa
enter
jae
fsubrl
and
push
or
cmp
add
pop
lods
jmp
shll
fisttpl
vfrczpd
lret
lahf
sub
nop
das
xchg
clc
inc
fwait
xor
int
dec
xchg
xchg
mov
imul
imul
rorb
fwait
xchg
mov
gs
adc
movsl
or
in
fwait
arpl
je
cltd
or
out
mov
sbb
adcb
test
or
call
xchg
aas
xchg
sbb
out
adcb
mov
dec
mov
fistpll
dec
dec
add
fists
inc
xchg
loope
ljmpw
mov
jl
out
xor
or
jbe
xor
enter
xchg
adc
insl
jmp
lcall
movl
mov
lods
mov
jns
inc
movsl
dec
xchg
int3
int3
push
scas
cmp
test
int3
in
pop
mov
xchg
push
dec
imulb
mov
fnstsw
int3
sub
fisubrs
jae
pop
cwtl
shll
or
idivb
xchg
mov
mov
out
js
lods
jne
mov
mov
push
inc
jmp
sbb
jbe
pop
insb
add
cs
fstp
push
frstor
cmp
aad
jbe
sub
cmp
dec
push
push
and
or
test
cmpsl
popf
add
sti
sarb
pop
add
cmpsb
fidivrs
fisttpl
xor
std
addl
cvtps2pd
idivl
pop
lds
repz
sbb
xchg
add
sub
mov
iret
clc
mov
addb
lret
jne
sub
mov
testb
es
mov
lret
cmp
mov
fildll
push
mov
aam
xor
in
push
xchg
mov
aam
xor
cmp
sbb
push
inc
adc
orb
and
pop
push
loope
lock
push
push
xlat
mov
addl
push
xchg
dec
jg
or
pushf
fdivrp
cmp
lcall
mov
xor
xchg
fistl
xor
mov
lahf
stos
push
mov
jae
xchg
mov
cs
cltd
movsb
lods
ljmp
mov
leave
cmp
mov
icebp
into
jne
adc
ja
test
addb
add
psubw
mov
jecxz
outsb
imul
push
mov
jle
fsubrl
mov
push
repz
fs
inc
test
inc
inc
mov
rcl
mov
sbb
sbb
cmpb
outsl
or
xchg
jge
push
out
imull
stos
pop
cmp
mov
das
lods
ss
aam
or
or
int3
fisttpl
sub
push
roll
outsl
imul
xchg
add
mov
icebp
aas
mov
scas
sbb
mov
add
sbb
out
or
mov
add
cmpsl
cs
insl
dec
inc
sbb
popa
js
call
sbb
pop
ss
fwait
orl
iret
arpl
in
mov
jle
cltd
cs
sbb
push
pop
movsl
pop
or
jne
mov
or
aaa
es
xor
mov
lret
lea
rcrl
insb
xchg
lcall
test
jne
decl
ss
fimuls
std
repnz
and
jno
pop
adc
cmpsb
xor
inc
push
xchg
in
lods
ljmp
into
push
and
stc
jmp
pop
iret
xchg
daa
cmc
negl
push
aad
stos
sub
mov
subl
scas
daa
jp
adc
out
ret
fst
test
popf
in
xor
sbb
sbb
fstpl
xchg
mov
std
fildll
pop
mov
iret
or
filds
in
inc
cmpsl
push
xchg
in
clc
xchg
dec
and
inc
dec
idivb
fst
arpl
pop
fwait
cmp
mov
pop
xchg
fldt
mov
jns
dec
or
add
call
cmp
out
inc
push
cmp
mov
inc
and
and
xlat
repnz
bound
add
dec
xchg
push
lret
aad
ds
cmp
dec
loope
xchg
in
sahf
and
fst
mov
aas
mov
js
pop
clc
fstpl
lret
fisubs
data16
flds
cld
sarl
cmpsl
dec
xor
lret
sub
jno
outsl
push
sub
rcr
lods
xor
and
shlb
mov
sbb
push
xor
bound
pop
call
repnz
dec
adc
push
mov
out
fcmovu
ja
mov
add
adc
adc
addl
out
adc
adc
shll
std
idivb
aam
cmp
push
fisttpll
sub
or
dec
int
ret
popa
loopne
popa
xor
movsl
mov
rcrb
mov
adc
sbb
and
dec
aas
dec
sbb
bound
mov
push
loope
mov
je
je
adc
push
icebp
sbb
sbb
xor
pop
pop
push
mov
scas
push
shlb
mov
aam
lahf
adc
loopne
or
sub
inc
fdivr
sbb
cmp
xchg
sarb
cmp
lret
test
mov
out
addr16
sub
jno
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
cmp
invd
add
cpuid
fisubs
fisttpl
scas
mov
fsubs
jae
popf
lods
ljmp
mov
hlt
push
xor
mov
and
lret
in
dec
fs
jge
cli
pop
mov
push
jb
fwait
jns
adc
lods
sub
push
push
mov
repnz
mov
sub
scas
fs
mov
mov
test
test
test
pop
mov
mov
adc
lret
lods
or
test
jecxz
sahf
imul
subb
int
mov
fs
or
je
pop
aam
and
aaa
dec
jbe
fwait
in
jo
scas
fwait
or
aas
jecxz
jbe
mov
iret
rcll
cmp
and
test
cwtl
cmp
push
dec
pop
imul
sub
fcomps
fistps
ror
loopne
or
inc
outsb
test
fdivrs
fidivs
daa
jecxz
mul
insb
sub
fdiv
cwtl
and
rol
pop
add
popa
clc
adc
cmp
jbe
lea
sbb
inc
outsl
in
inc
sub
mov
pop
xchg
arpl
shll
cmpl
cli
or
clc
sbb
orl
hlt
dec
ljmp
and
js
mov
outsl
mov
inc
scas
addb
sbb
fdivl
leave
or
call
bound
imul
popw
dec
jmp
movsl
pop
mov
or
lea
adc
adc
mov
imul
push
pop
xchg
add
and
ss
or
ret
or
negb
leave
lahf
les
mov
andl
push
xchg
mov
ficompl
jne
out
inc
jo
sub
clc
clc
out
sahf
pop
pushl
push
cmpsb
mov
rcl
xor
cmp
mov
imul
cmovs
jp
lcall
mov
mov
push
int
dec
or
aaa
movsb
inc
or
popa
jns
xchg
mov
ja
movsb
jg
in
ret
loope
cld
jno
jg
mov
and
aas
int
insl
sbb
aaa
dec
dec
xchg
rolb
push
lods
std
lret
add
or
fsubs
popa
pop
add
loop
xor
add
jne
xor
js
push
cld
or
pop
subl
cmp
cmp
jo
xor
or
and
adcl
or
push
cmp
das
lds
enter
sub
gs
dec
push
in
popf
das
fisttps
dec
aam
dec
int3
add
add
xchg
jne
aad
cs
adc
je
xchg
mov
fdivrs
push
xchg
das
or
or
pushf
mov
sbb
dec
aas
sahf
sbb
aam
jnp
aas
jno
cmp
xor
and
aas
subl
jmp
hlt
pop
stos
pop
fs
jnp
es
shll
push
fstps
dec
stos
clc
dec
fidivs
and
pusha
rcl
mov
xchg
gs
insl
cwtl
adc
call
mov
test
or
push
mov
cmp
sbb
icebp
add
jle
xor
ds
lods
into
lahf
jnp
test
inc
mov
cltd
ds
add
lea
in
adc
sbb
test
xchg
enter
sbb
repz
test
inc
push
cltd
sbb
out
aad
repz
fidivl
nop
cwtl
xchg
adc
insb
jno
and
imul
imul
adcl
ret
add
mov
ret
xchg
push
fnstcw
mov
inc
adc
in
dec
push
lods
xchg
lea
rol
nop
or
mov
popa
rcrb
push
daa
sbb
mov
das
xor
jmp
adc
shlb
cmp
or
leave
mov
dec
mov
je
iret
and
dec
mov
fsubl
xchg
les
icebp
sbb
cwtl
orb
xchg
sahf
and
jae
les
enter
or
test
push
je
cmp
scas
or
popa
ja
ljmp
adcb
ja
or
lods
fistps
repnz
mov
lcall
leave
sahf
call
pop
cld
jbe
in
enter
bound
dec
mov
lods
test
int
push
pop
sbb
test
xor
into
lds
or
mov
xor
mov
ds
sbb
mov
iret
mov
pop
test
out
xlat
sbb
jno
enter
sti
cld
pop
adc
xchg
xorb
jb
dec
mov
push
mov
outsl
sbb
inc
scas
shlb
addr16
je
out
xchg
imul
cmp
imul
jp
stos
nop
cmpsb
cmp
push
rcll
mov
inc
mov
cs
es
test
and
mov
cmp
inc
test
daa
push
into
addr16
mov
inc
xchg
in
jns
dec
filds
flds
out
pusha
repnz
and
lods
pusha
mov
adc
daa
pop
mov
xchg
xchg
aad
std
fstps
cs
sub
mov
cmp
xchg
out
inc
leave
pop
mov
les
movsl
scas
mov
data16
mov
xchg
test
and
push
mov
push
das
loop,pn
push
push
bound
and
test
in
outsl
inc
jbe
pop
mov
sub
mov
add
mov
mov
push
add
enter
or
rcr
add
pop
clc
push
mov
dec
mov
jae
out
mov
dec
or
and
rcrb
cmp
xchg
dec
incl
add
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
mov
mov
invd
add
movups
pop
jp
xor
das
jns
ds
es
or
xchg
push
in
imul
bound
cwtl
xor
add
sub
xchg
sbb
or
mov
fs
cltd
pop
idivb
mov
pop
lods
addb
fwait
mov
cmp
fildl
movsb
mov
mov
hlt
xlat
mov
and
xchg
mov
test
sbb
insb
cld
and
enter
adc
xchg
push
sbb
add
decl
out
xchg
outsl
fstpt
push
pusha
rorb
frstor
mov
scas
push
xchg
dec
add
mov
inc
mov
int3
sbb
ret
push
and
sbb
in
out
dec
pop
push
addr16
in
addl
les
mov
mov
push
shlb
daa
mov
and
push
bound
cmp
into
mov
hlt
and
push
test
adc
test
pushf
icebp
in
adc
clc
in
aad
and
jno
xor
mov
jp
out
lds
mov
aad
cli
xchg
add
pop
iret
xor
or
loope
push
and
into
popf
clc
call
daa
push
jo
test
jmp
cmpsl
ficoms
mov
nop
sub
or
int
pop
fs
in
fnstenv
mov
dec
fidivrl
inc
out
aad
push
lret
arpl
jge
std
repnz
mov
mov
push
xor
add
mov
hlt
inc
in
mov
call
inc
inc
push
pushf
xor
cmp
jmp
jg
xchg
or
faddp
jg
push
ret
pop
push
jge
aad
ljmp
sbb
shlb
jmp
xlat
das
pop
sub
cmp
rcr
movl
scas
push
shlb
or
stos
dec
adc
dec
pop
jno
jb
addr16
mov
sub
idiv
lret
fs
cli
or
iret
in
dec
xchg
inc
sbb
cmp
xchg
stos
call
repnz
sbb
ffreep
mov
outsl
add
fwait
pop
or
cli
lock
dec
xor
push
shlb
les
cmp
sbb
scas
xchg
sub
mov
nop
or
aas
sbb
loope
or
negb
add
mov
daa
das
or
mov
mov
jno
fidivrs
fucomp
incb
cmpsl
jmp
jmp
pop
fnstcw
xchg
scas
mov
out
xchg
xor
xor
stos
aam
bound
mov
jnp
jecxz
pop
dec
inc
or
or
add
or
into
sbb
cmpsb
in
xchg
pop
mov
dec
dec
adc
pop
sbb
pop
fs
gs
mov
lock
into
xor
test
roll
and
jae
sub
daa
pop
pushf
mov
push
mov
mov
shrl
xchg
lock
jl
mov
and
inc
clc
cmp
shll
aas
sbb
mov
punpckhwd
dec
loop
and
ljmp
cmp
push
push
mov
sbb
sub
mov
pop
mov
dec
xorb
sbb
je
mov
add
pop
stos
cli
lock
mov
dec
test
dec
pop
loopne
in
cmpsb
ret
dec
sbb
int
or
jle
andl
push
es
jae
ret
dec
cmp
pusha
sbb
dec
ret
sbb
dec
bound
dec
es
sbb
lret
sar
stos
loope
jno
xchg
and
pusha
inc
mov
out
fcmovbe
mov
push
movsl
pop
scas
and
test
push
hlt
lock
lcall
iret
inc
sti
xor
inc
mov
cmp
testl
inc
xlat
fmull
xchg
jle
pop
add
pusha
cmp
jae
jle
jmp
mov
cmp
fimull
sub
push
bound
push
hlt
jns
sbb
or
cmp
popf
arpl
ret
mov
mov
push
in
les
fistpll
add
dec
stos
filds
inc
xchg
pop
push
das
push
sarl
addr16
dec
fucomi
mov
xchg
xor
fidivl
imul
orb
cmpb
mov
pusha
stos
pop
push
mov
xchg
jg
mov
sbb
inc
aam
dec
sub
inc
add
jge
push
push
sub
xor
stc
push
sahf
mov
pop
inc
dec
cmp
mov
bound
jge
repnz
jge
scas
filds
and
xchg
out
and
shll
dec
aad
xchg
in
pop
rolb
push
mov
xor
and
adc
insb
lds
pop
dec
pop
mov
ja
inc
test
mov
pop
stc
xorl
pop
dec
rcr
cltd
mov
lahf
imul
outsb
push
sub
loope
mov
push
cmp
sub
and
gs
sub
insb
test
pop
pusha
js
sub
and
or
dec
test
pushf
jo
gs
mov
adc
lcall
notl
je
mov
xor
pop
mov
scas
xor
addb
aaa
or
push
mov
shll
mov
dec
les
push
cmp
and
cld
in
cmp
mov
cld
in
inc
sub
xchg
daa
add
insb
and
cmp
or
mov
sbb
and
jl
sub
mov
mov
push
push
push
xor
cltd
push
stos
mov
sti
mov
mov
gs
ljmp
sub
bound
mov
stc
fwait
fwait
cltd
mov
aad
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
psadbw
pop
inc
lret
das
fimull
inc
cmp
int3
roll
and
pop
cwtl
sub
mov
mov
out
sti
mov
rol
push
cwtl
test
clc
mov
imul
int
ds
xlat
inc
addr16
ljmp
mov
addr16
daa
mov
mov
jns
sti
mov
aad
mov
push
add
mov
sub
rclb
cld
jns
test
sub
pop
xor
outsl
icebp
shl
or
clc
ds
stos
cmpsl
or
insl
movsl
and
push
lret
sbb
push
cli
nop
push
sbb
je
xchg
lea
xchg
xchg
inc
les
jp
mov
sub
cmp
sub
mov
nop
sub
std
jne
imul
shrl
sbb
mov
mov
jb
push
fmull
add
mov
popa
pop
mov
enter
test
push
sub
test
repnz
inc
sbb
jmp
pop
cld
rorb
repnz
mov
scas
pop
cwtl
mov
inc
mov
scas
push
fisubrl
dec
popf
out
ds
cmpsb
dec
shl
and
pop
andl
dec
inc
pop
insl
push
stos
xchg
sti
ret
jge
ds
aam
and
call
ljmp
test
sbb
jo
and
push
jno
inc
fdivp
aam
pusha
cmp
loopne
int3
lock
jecxz
fstpt
xchg
and
mov
and
xchg
repz
mov
imul
add
pop
aam
and
outsl
push
or
pop
aam
sbb
pusha
scas
push
mov
and
scas
cld
push
mov
loopne
add
cmpsb
cmc
xchg
adc
repz
cmp
xlat
sbb
aad
aaa
orb
test
dec
loope
cmp
mov
mov
decb
dec
mov
jmp
add
add
rorb
popf
inc
sbb
pop
jge
sbb
and
out
arpl
cmp
aad
xchg
cmp
daa
pop
xlat
fwait
sbb
dec
sbb
pop
movsb
mov
movsl
or
icebp
pusha
test
mov
lods
outsl
mov
mov
sbb
xchg
loopne
pushf
les
lahf
sbb
mov
dec
jno
xor
jo
out
movsl
aad
imul
ljmp
fcoms
push
inc
push
lock
or
lea
test
jns
xchg
and
aam
mov
jmp
ret
addr16
push
dec
add
mov
addr16
sbb
mov
mov
in
dec
stos
pop
movsb
cmpsb
mov
jns
cld
adc
neg
push
pusha
xor
dec
jge
or
or
hlt
fisubl
out
cmp
adc
adc
es
xchg
and
lret
cwtl
xorl
int3
dec
cmp
adc
addr16
or
in
lcall
jp
or
out
push
adc
cmpsb
sub
jae
cli
or
sbb
je
jmp
inc
push
das
jge
cli
data16
xor
je
push
push
aad
mov
mov
jmp
and
in
pop
in
inc
inc
mov
add
sub
xchg
jne
pop
jmp
lahf
sub
sub
dec
add
jg
enter
mov
mov
insl
aaa
std
mov
dec
test
and
outsb
sti
jg
xlat
lods
mov
jg
xchg
push
addr16
mov
mov
cmpsb
mov
int
xchg
dec
cs
mov
insb
fiadds
sbb
rorb
sub
xchg
push
inc
das
das
and
push
xchg
pop
xor
scas
jae
mov
nop
lods
out
fnstcw
add
jmp
xor
out
cmp
ljmp
cmc
aam
add
rclb
stos
xchg
scas
and
sub
adc
jl
imul
or
and
test
jge
sbb
xchg
mov
mov
scas
bnd
jae
outsl
jne
cmp
pop
ret
pop
jnp
test
mov
sub
adc
sbb
je
hlt
mov
xor
xor
jnp
or
shlb
fs
repz
insl
in
cmpsl
jno
loop
in
mov
xchg
daa
insl
shrl
dec
stc
shl
std
or
cmp
xchg
push
aaa
push
inc
fmull
orl
xchg
adc
add
arpl
sub
test
adc
jg
sbb
dec
mov
repz
in
lds
cmp
fdivrs
dec
pop
insl
outsl
pop
cwtl
fldt
scas
sub
jne
cmp
or
popf
rcll
xchg
push
jmp
movsb
ret
int
sub
push
push
fiaddl
sub
pop
add
dec
les
adc
push
jne
dec
mov
push
popl
bnd
or
cwtl
sbbb
lcall
fimull
in
jl
adc
cmpsb
ret
inc
xchg
ljmp
dec
or
rcll
stos
scas
add
jo
push
jae
jge
out
addr16
loope
sub
xchg
imul
inc
and
into
cmp
testl
hlt
call
cld
loope
aas
pop
xor
into
into
jb
mov
inc
pop
loop
cmpl
xor
insl
imul
imul
inc
in
jbe
sub
push
or
pusha
repz
push
or
add
aas
or
add
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
fwait
aam
xchg
add
pslld
and
into
adc
test
mov
sbb
dec
inc
lcall
mov
mov
aam
jb
sub
xor
mov
mov
ret
pop
mov
sub
jae
fidivl
jb
popf
cld
ljmp
adc
les
sbb
cs
xchg
outsb
cmp
mov
out
out
mov
nop
ds
dec
jle
pushf
imul
jae
xchg
inc
xchg
push
adc
pushf
cmp
loop
imul
xchg
xchg
lock
cltd
pop
adc
cli
push
pop
or
jae
test
push
cwtl
dec
lods
jp
jno
and
cltd
fs
pop
xchg
mov
andb
sarb
cmp
cmc
jle
out
stc
mov
movsb
cld
xchg
sarl
and
ja
sbb
loopne
shrl
test
rcl
push
icebp
rcpps
rol
out
add
ljmp
or
fmul
stos
mov
sti
inc
mov
inc
inc
enter
pop
mov
cmp
hlt
push
jno
fbld
sti
fwait
enter
movsb
rorl
testb
cmp
mov
push
int
sti
jp
mov
leave
leave
stos
cwtl
mov
mov
flds
inc
cmc
inc
ds
shr
mov
jno
dec
add
add
sbb
dec
push
sbb
or
outsb
push
mov
in
inc
mov
int
popa
inc
imul
xor
mov
inc
scas
xchg
test
xchg
sub
sub
jl
loope
aas
mov
dec
jnp
adc
shl
dec
cld
xlat
mov
rorl
lret
cmp
xlat
xor
and
test
fwait
mov
out
faddp
xchg
popa
test
sbb
add
popl
out
int
in
shrl
adc
int
xchg
fwait
sahf
lods
pop
jbe
outsb
push
jne
aam
in
dec
out
jbe
adc
mov
push
in
jne
dec
cmp
jns
loop
cs
push
in
jo
cmp
pop
mov
in
outsl
mov
sub
adc
jmp
jno
adc
in
ja
inc
push
insl
lods
sub
dec
xchg
or
pop
pop
sbb
sub
adc
adc
inc
jo,pt
js
lahf
mov
aaa
sub
sahf
cld
mov
scas
sub
inc
push
cltd
sub
ret
sub
or
adc
mov
movsb
ret
push
cmp
jecxz
push
inc
ret
adc
mov
gs
cmpsb
inc
mov
leave
lods
mov
adc
xor
inc
ja
repz
cs
xchg
add
push
xchg
movsl
outsb
cmp
shl
outsl
cwtl
pop
jno
or
mov
sub
in
sbb
in
pop
arpl
jmp
sub
xabort
sbb
stc
pop
data16
mov
pop
adc
pop
xor
out
adc
sub
popl
loope
mov
rcrl
loope
cld
nop
cli
jbe
xchg
sub
xor
xchg
mov
mov
dec
add
jecxz
out
cmp
das
out
sbb
test
push
push
ja
imul
sbb
nop
push
movlps
pop
cs
imul
cmpsl
and
sub
fnstenv
lret
mov
jecxz
jecxz
je
cwtl
push
call
inc
mov
jge
sbb
pushf
sub
insl
pop
outsb
add
ret
jo
and
iret
in
in
lea
neg
push
popa
push
lods
dec
mov
mov
dec
xor
xor
cmp
inc
xorb
dec
aaa
mov
rorb
sub
mov
xadd
xlat
negb
push
xor
lds
insl
adc
lcall
push
ficoms
sbb
int
push
mov
jl
hlt
cmp
rcll
add
leave
xchg
or
rcrl
insl
inc
or
test
adc
cmp
xchg
mov
push
add
sbb
aaa
push
js
lret
dec
daa
rol
sbb
fmuls
lret
mov
push
cmp
dec
rcrl
mov
outsb
xchg
and
popf
sub
mov
cltd
mov
sub
lcall
xchg
pop
imul
lcall
rorb
loop
or
pop
es
dec
xchg
inc
outsb
aad
jbe
mov
cmp
mov
jmp
and
in
jmp
mov
sbb
gs
push
jne
pop
mov
inc
popa
shl
stos
call
dec
mov
push
push
cmp
stos
rorl
mov
adc
jnp
out
cmp
push
iret
mov
test
hlt
xlat
cwtl
lea
mov
outsl
js
sub
loopne
jl
adc
cli
jns
scas
pop
push
nop
movsb
in
mov
icebp
pop
mov
int
mov
fwait
pop
cmp
mov
inc
jno
rolb
fs
dec
imul
cltd
adc
sarl
iret
enter
push
push
pop
sub
xchg
arpl
sub
or
push
pop
adc
imul
mov
addl
push
jmp
jp
sbb
adc
and
cmp
ljmp
sbb
pop
loope
lds
std
ljmp
sbb
push
or
ljmp
jmp
sub
shll
ds
sub
mov
cld
xchg
lret
lea
add
ja
push
jno
sbb
cmp
or
in
es
sub
sbb
sti
sti
adc
adcl
cmp
movsl
loop
mov
xchg
jg
mov
xchg
xor
cmp
ret
dec
js
sbb
ds
mov
leave
jl
pop
out
or
dec
popf
adc
add
insl
sbb
pop
std
sbb
aaa
dec
pop
idiv
jmp
mov
xchg
mov
icebp
dec
push
scas
popf
invd
add
ja
mov
or
mov
mov
ficoms
mov
sub
dec
cs
lea
jb
and
mov
aad
pop
sub
lret
lods
addr16
jl
inc
or
repz
mov
mov
or
xchg
std
sbb
lods
lods
out
scas
jnp
ret
insb
mov
scas
xchg
jmp
out
jle
and
sbbl
rcrb
popa
dec
sar
insb
mov
dec
pop
out
cmpsl
in
sub
notl
adc
xor
xchg
jg
dec
lods
orl
js
xlat
mov
inc
mov
scas
mov
xchg
xchg
call
ret
test
mov
mov
mov
lods
paddsw
jle
fidivrs
xchg
xchg
flds
repz
push
xor
and
lock
je
add
out
into
test
test
dec
dec
jbe
daa
jmp
nop
push
mov
fdivrs
rcll
pop
lcall
stos
daa
cwtl
gs
add
cmp
fwait
cmp
inc
cmp
icebp
data16
cmpsb
mov
adc
mov
mov
std
cmpsl
mov
dec
shll
test
call
out
add
arpl
rcrb
jb
ret
push
jo
cmpsl
push
xchg
mov
jae
or
cwtl
mov
stos
leave
mov
jle
or
ret
and
test
test
mov
rcr
cmp
mov
adc
sahf
pop
push
or
and
jno
push
lods
cmpsb
mov
call
pusha
es
ret
and
pop
inc
cltd
int
mov
test
jo
jns
and
sarb
sbb
xor
adc
sbb
call
aas
test
hlt
cmpb
stos
out
jo
mov
lock
fwait
pop
repz
icebp
ljmp
cmc
ret
call
push
mov
stos
and
test
aad
or
call
imul
push
xchg
dec
xchg
ret
out
fs
mov
and
data16
or
sbb
mov
jmp
inc
rcrb
jg
adc
test
dec
mov
es
pop
jmp
mov
insl
pusha
repnz
bound
push
mov
loope
fsubl
mov
push
xor
add
and
dec
imul
lret
jle
adc
sub
xchg
and
cmpsl
mov
jne
push
jge
cwtl
xchg
mov
push
sarb
dec
jmp
repnz
test
not
shl
and
mov
loope
xor
pusha
xchg
int3
jnp
jb
bnd
push
lea
push
fistpl
mov
mov
and
rorb
add
hlt
mov
leave
in
dec
lods
test
in
stc
mov
push
incb
subb
fcompl
rcll
icebp
repz
aas
push
cld
insb
rcrl
add
lcall
push
mov
push
mov
cmpl
mov
pop
test
adc
dec
sbb
mov
or
lock
push
push
loop
xchg
test
cs
fisubrs
imul
loop
aaa
mov
jb
and
sbb
pop
fnstenv
rcll
and
in
or
fwait
mov
pop
ror
push
je,pt
mov
negb
das
mov
je
xor
jo
stos
jne
arpl
add
movsl
leave
call
push
repz
jbe
cmpb
fcmovnu
sub
enter
sub
or
push
aaa
xchg
push
in
xor
jmp
sub
imul
mov
mov
stos
jnp
loopne
or
xor
mov
popa
cmp
repnz
xor
inc
rcrl
dec
lods
mov
hlt
and
sbb
data16
ret
cmp
pushf
ljmp
in
cs
js
cmp
pop
jb
movsl
jb
fistl
and
sub
dec
iret
xlat
fwait
push
scas
and
test
rcrb
adc
inc
rorl
mov
lods
mov
dec
lcall
and
ja
loopne
sbb
outsb
lock
push
popf
push
out
dec
test
mov
pop
sub
ret
mov
push
xchg
ja
fwait
mov
subb
mov
std
mov
loop
lahf
or
gs
dec
dec
jb
inc
stos
icebp
pop
pop
lds
nop
ret
mov
xchg
or
or
sahf
cmp
ljmp
mov
pop
xor
add
pop
adc
inc
jno
in
aas
cltd
lock
call
mov
dec
fsub
scas
jp
pop
scas
push
mov
test
hlt
jmp
mov
inc
das
push
mov
or
in
jno
mov
jne
or
movsl
data16
jmp
pop
push
add
loop
xor
stc
sub
jmp
cwtl
lea
in
pop
cmp
sahf
or
jbe
pop
sbbb
flds
xor
mov
imulb
or
jne
pop
inc
add
cltd
add
les
in
in
jne
leave
fidivrl
mov
test
push
mov
filds
mov
es
jg
mov
sbb
mov
leave
or
gs
add
xchg
mov
jl
lcall
rcl
xor
add
arpl
xorb
cli
cs
shlb
push
jmp
adc
jl
mov
ret
jo
int
shll
or
ret
mov
pop
cltd
sbb
inc
lret
popf
leave
lcall
and
ficoms
arpl
dec
sbb
in
cmp
xchg
pusha
add
pop
xor
inc
in
sarb
inc
cmc
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
xchg
test
invd
add
pmullw
mov
fistpl
out
dec
test
loopne
add
sub
lea
fcoml
and
int
inc
xchg
movsb
jbe
jno
stos
lods
imul
inc
movsl
mov
add
lock
pop
hlt
xchg
ja
imul
sbb
push
adc
pop
mov
cwtl
in
cmp
push
mov
into
in
roll
mov
adc
and
clc
lea
inc
out
std
add
jne
mov
cmc
filds
roll
mov
push
mov
inc
lret
imul
enter
and
push
inc
cmp
cltd
sbb
and
push
or
adc
or
cltd
mov
out
or
add
loopne
jb
xor
dec
add
int
into
outsb
lahf
pushf
aad
out
adc
enter
mov
insl
xor
and
jle
mov
mov
jg
xchg
std
adc
insl
xchg
jle
xor
popa
mov
stos
insl
xor
mov
push
mov
mov
jle
or
adc
je
push
xchg
xor
clc
stos
mov
arpl
mov
or
and
xlat
dec
jo
inc
adc
and
test
shrb
jge
nop
push
pusha
mov
fimuls
cltd
out
mov
or
inc
xor
xchg
nop
rclb
call
cwtl
in
nop
sub
push
jbe
mov
push
pop
add
push
std
inc
sbb
fdivl
lods
rolb
lods
xor
and
dec
xchg
xor
jo
adcl
fistps
push
adc
sub
lea
mov
mov
add
inc
sub
xor
adc
pushf
sbb
dec
push
pop
pop
xor
shlb
ret
sub
cmp
icebp
inc
stos
xor
mov
jge
daa
icebp
out
fidivs
and
lds
xlat
pop
les
out
xchg
cmp
nop
rcrb
sub
xchg
aaa
push
hlt
repz
and
addr16
dec
scas
and
push
mov
mov
inc
loope
std
out
fmulp
shll
stc
repz
dec
stos
jp
out
sbb
xchg
cmpsl
add
jmp
ret
mov
dec
loopne
pop
lods
cmc
fldl
push
imul
mov
push
mov
or
cs
negl
stos
jp
inc
xchg
jge
adc
jle
jb
and
in
push
add
pop
imul
jle
shll
jns
pushf
mov
pushf
inc
scas
lods
aaa
mov
and
and
andb
xchg
sar
add
sbb
pop
insb
addb
cli
loope
out
pop
xchg
mov
jno
je
adc
jp
sub
inc
and
mov
sti
in
sbb
and
mov
jl
popa
fcoms
xchg
push
shl
out
aaa
jle
adc
sub
mov
jns
push
sbb
insb
out
das
pusha
mov
cld
mov
jo
push
cwtl
mov
das
scas
stos
cwtl
sub
xchg
and
ljmp
jg
inc
bound
add
incb
cmp
out
pop
mov
mov
sub
xchg
mov
pop
out
sbb
inc
ljmp
pop
jae
lock
xchg
push
les
icebp
adc
jne
les
sub
aaa
sbb
test
shlb
xchg
inc
mov
jl
and
xor
add
out
jne
filds
xor
or
test
in
adc
jo
stos
int3
shll
icebp
call
and
imul
dec
adc
adcl
dec
mov
cltd
lret
fcmovnu
sub
cld
cwtl
movsl
cmpsl
mov
add
lods
jo
das
cld
mov
cld
sbb
aaa
or
lahf
je
xchg
test
xor
movsl
out
add
mov
fisubrl
jp
pop
xor
ds
ret
jg
rorl
mov
and
xchg
outsl
ljmp
or
leave
loope
fcompl
clc
push
xlat
outsb
aaa
in
sub
and
jl
xor
mov
cmc
loop
jb
stos
test
jbe,pn
and
inc
cmp
mov
mov
fcoms
insl
inc
aaa
sbb
push
and
popf
repz
cmp
pushf
bnd
inc
iret
inc
ss
xlat
rorl
sub
repnz
sub
sub
outsb
and
push
mov
sbb
mov
dec
leave
and
gs
stc
scas
inc
lea
and
adc
adc
loop
xchg
dec
sub
popa
xchg
cld
ret
mov
and
or
pusha
push
pop
pop
or
xor
in
dec
mov
pop
mov
inc
mov
in
jae
pushf
dec
push
ja
loopne
cmp
aaa
pop
icebp
mov
mov
aaa
mov
mov
nop
idivl
shlb
jecxz
cmc
icebp
cmpb
insb
push
mov
les
packsswb
aad
ja
push
jbe
cld
mov
jge
insl
or
or
xchg
push
gs
jne
insb
pop
push
pop
ja
or
mov
scas
loopne
cmpsl
notb
jle
push
push
sub
data16
loopne
addr16
push
xchg
test
xorl
push
cmpb
lret
fnstsw
or
mov
xchg
xorb
in
in
lcall
test
testb
inc
inc
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
adc
mov
add
bts
int3
sbb
clc
pop
daa
lret
dec
rolb
xchg
arpl
add
ret
push
sbb
mov
sahf
aam
push
dec
jecxz
out
div
and
out
inc
lahf
pushf
cmp
sbb
insl
pop
adc
jnp
mov
inc
js
test
pop
mov
in
fmuls
xor
scas
jmp
xor
jle
pop
xor
stc
push
std
cmpl
pop
xchg
rolb
outsl
popa
stos
data16
das
sahf
xchg
ja
pop
stc
iret
es
push
pop
outsb
jb
cmp
push
insb
pop
pop
pop
loop
push
leave
ja
mov
icebp
sahf
sub
int3
xor
outsl
jge
sbb
jl
lock
pop
mov
sub
divl
out
push
jae
popl
xchg
or
lods
in
rolb
dec
aam
push
jae
out
into
push
stos
sub
pop
pop
mov
dec
and
add
testb
or
dec
sbb
call
inc
in
dec
and
sbb
xor
sbb
nop
jns
add
jns
xor
pop
xor
mov
aas
int3
xchg
jle
push
ret
in
and
pop
cmpb
js
fisubs
repz
jne
frstor
xchg
fcompl
stos
adc
daa
cmp
push
mov
xor
jae
out
bound
and
cwtl
adc
adc
jne
sbbb
pop
aad
dec
cltd
pop
xor
mov
jbe
arpl
jcxz
out
jae
out
cltd
ss
sub
pop
aas
bound
add
push
dec
mov
rclb
outsb
jbe
inc
xchg
mov
or
ret
mov
pushf
test
dec
mov
xor
in
pop
push
movsl
das
shll
jmp
fxam
adc
adc
xchg
dec
pop
pop
mov
out
int3
mov
or
stc
or
push
leave
aas
cmovg
xchg
push
xchg
jno
push
ss
push
das
mov
outsb
dec
faddl
testl
mov
lea
or
shlb
arpl
lods
scas
mov
mov
adc
outsb
pusha
cmpl
mov
mov
fucomip
lock
xchg
test
inc
divb
sub
lock
js
push
imul
les
popa
cmp
loopne
add
shll
mov
add
inc
mov
leave
std
or
loope
lret
dec
jne
mov
in
mov
sti
and
mov
jbe
cs
aaa
mov
shl
lods
pop
pop
jge
mov
movsl
dec
jge
sbb
hlt
sti
aaa
fsubrp
shlb
push
faddl
loop
jns
loop
je
pop
das
clc
inc
mov
stos
jns
movsl
jl
or
add
xchg
js
xor
scas
stos
popf
fisubrl
les
jg
sbb
mov
lock
and
push
dec
fadd
mov
xchg
sbb
test
insb
fwait
loope
negb
mov
mov
jle
mov
jp
or
fnstenv
data16
push
sub
xor
lret
mov
xchg
jle
or
outsl
imul
sahf
add
xchg
aas
fimull
inc
pop
mov
add
push
out
data16
jns
or
adc
push
jmp
xchg
scas
or
cmp
add
pusha
in
cmp
in
pop
mov
shlb
jg
movsb
jg
outsb
sahf
fstpl
sub
pop
out
js
mov
lock
cmp
in
jbe
aas
jb
add
inc
lds
mov
popf
push
aas
jle
cld
aam
dec
aam
ret
fwait
mov
scas
pop
or
mov
jl
fsubr
dec
mov
xchg
gs
dec
or
xchg
mov
mov
jge
cmp
lock
cmp
movsl
add
fsubl
mov
scas
xlat
sahf
mov
push
inc
xor
scas
cmc
dec
and
fsubl
cmp
mov
push
imul
dec
pop
lret
test
inc
push
mov
pop
jb
es
lea
cmp
bound
jb
mov
jge
fsubl
push
sbb
xchg
lcall
shrb
jle
fstp
inc
cmp
pop
push
cmp
push
lock
dec
adcl
loopne
ds
daa
insl
push
test
fildll
sbb
ror
xor
fs
ret
stos
xchg
cwtl
push
push
gs
xchg
adc
mov
cs
pushf
jle
roll
sbb
hlt
mov
pop
jp
lods
mov
es
aaa
and
sbb
fdiv
test
mov
loop
mov
ret
jbe
mov
mov
cmpsl
loop
int
divb
cmp
push
mov
pop
sbb
es
inc
xor
in
or
fstl
add
fs
add
xor
jg
ret
push
stc
push
pop
mov
xchg
mov
mov
push
test
inc
pop
gs
pop
pop
sbb
or
jmp
sbb
lds
mov
outsb
loopne
aas
das
sahf
mov
rclb
dec
test
pop
stos
jmp
pusha
xchg
dec
insl
imul
out
push
test
jle
std
inc
ja
mov
mov
sti
lods
sub
xchg
andl
push
pop
mov
mov
iret
jmp
xchg
sub
and
lret
push
mov
cwtl
fistps
pop
fmuls
sub
pop
fisttps
testl
cmp
pop
cmc
test
mov
cmp
lcall
pop
mov
rclb
xchg
cwtl
test
test
adc
fwait
addr16
jl
mov
sub
dec
rorl
pop
popa
cmp
in
dec
cmp
sbb
sbb
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
ss
invd
add
cmovle
lret
xchg
popa
xor
lret
je
xor
push
idivb
pusha
repnz
out
roll
pop
ljmp
scas
inc
sbb
insb
dec
mov
lods
repnz
cmp
ret
xchg
nop
into
or
loop
data16
ss
inc
bound
adc
repnz
xchg
add
dec
int3
push
fmul
nop
test
mov
ja
scas
mov
mov
fistpll
mov
frstor
adc
and
rcl
lds
jle
hlt
mov
adc
loop
lds
pop
add
mov
pop
lret
fwait
push
lcall
imul
fucomp
roll
cmp
jae
stos
pop
sub
ljmp
push
lock
push
push
xchg
out
jp
aam
shll
lods
xor
cmc
mov
dec
das
push
cmp
les
fmulp
xchg
sbb
cmp
daa
mov
addr16
test
push
and
mov
shl
xchg
in
rcr
cmp
arpl
scas
in
repnz
jnp
mov
inc
or
pop
mov
into
jns
sub
aas
xorl
jp
loop
andl
movlps
movsl
icebp
mov
jmp
jp
push
enter
sbb
cmp
xlat
push
aaa
mov
lahf
in
xchg
pop
sub
aam
mov
adc
pusha
lret
jns
push
mov
and
xchg
push
dec
pop
outsl
add
in
mov
mov
int3
je
and
xbegin
mov
test
mov
das
inc
push
mov
mov
dec
xchg
out
push
push
call
lods
rolb
xchg
lods
addr16
sub
das
jmp
xchg
clc
mov
inc
ss
cwtl
daa
es
mov
fmuls
jge
imul
out
inc
lods
pop
repnz
leave
xchg
roll
imul
mov
inc
push
std
insb
xlat
dec
insb
sbb
push
fldcw
jnp
rcrl
ljmp
imul
push
mov
into
stos
movsb
in
insl
add
add
or
inc
mov
fwait
xchg
inc
into
lock
sbb
pusha
sbb
xor
movsb
fdivl
pusha
daa
dec
inc
inc
int
mov
test
sub
mov
push
adc
enter
out
xchg
mov
lea
add
stos
push
inc
in
aam
stos
add
cmpsb
pusha
sti
ljmp
mov
into
scas
aad
sbb
data16
std
dec
pop
aas
jmp
inc
or
xor
sahf
jb
mov
mov
lret
push
mov
neg
stos
or
testb
lahf
mov
popf
add
pushw
mov
cltd
xchg
in
fstp
push
aaa
std
iret
daa
xchg
fildll
add
shlb
mov
movsl
mov
and
cmp
jb
xor
add
mov
lahf
mov
inc
in
imul
lds
scas
nop
mov
rcrl
repz
popa
or
imul
sbb
jne
inc
and
or
mov
jmp
jae
sti
push
pop
sbb
inc
ficoms
fdivl
inc
push
js
rorb
sbb
clc
sub
ja
push
mov
fxch
mov
mov
mov
int3
aam
mov
in
jb
pop
cmpsl
jecxz
leave
inc
arpl
jle
add
jno
cmpsb
outsl
andl
inc
nop
xorb
sub
cli
or
pop
clc
outsb
jae
add
pop
insl
call
mov
cmp
test
inc
dec
fistps
pushf
jmp
fdivrs
arpl
sbb
frstor
jp
add
sbb
iret
out
mov
fsubs
lret
les
aam
loope
xor
jne
lds
lcall
adc
inc
or
mov
jg
dec
cwtl
fdivs
les
gs
loopne
push
push
sub
cli
cwtl
clc
or
push
dec
repnz
cmpsl
fstpt
lock
loop
mov
test
fists
nop/reserved
inc
mov
xor
jb
and
inc
out
shl
xchg
push
test
dec
inc
mov
mov
fldenv
scas
jb
test
xchg
lcall
in
enter
pop
nop
or
xchg
pusha
std
xchg
and
movsb
push
shl
test
fsubl
push
push
jp
iret
dec
repz
test
push
popf
jge
in
mov
sarl
jbe
jmp
mul
sbb
rcrb
fcompl
outsb
sbb
inc
cmp
add
sbb
hlt
mov
sub
outsb
addr16
loopne
dec
arpl
dec
mov
int
lret
cmp
push
aad
adc
adc
pop
jne
movsb
xchg
aad
addl
dec
notl
mov
movl
stos
xchg
je
ret
cmpsb
or
nop
mov
jg
jge
repnz
jp
mov
fmull
fwait
stc
mov
sub
aas
xchg
cmp
mov
ds
mov
repnz
add
outsb
jl
jle
fistpl
pop
cmpsb
fs
out
in
aad
and
cld
mov
cmp
gs
mov
push
nop
inc
pop
inc
push
test
jae
inc
inc
nop
lret
or
rcl
xchg
sbb
ret
push
mov
or
ja
and
pop
enter
sbb
mov
sub
push
cmp
jbe
das
dec
adc
or
daa
sbb
aam
sub
js
mov
dec
cltd
xor
xchg
sub
cmp
jp
movsl
aas
aam
mov
pop
iret
adc
aaa
test
in
xchg
cmp
je
inc
and
and
xchg
pop
push
imul
sub
mov
movsl
imul
nop
jmp
adc
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
movnti
pop
jne
cli
loope
dec
mov
addb
xchg
xlat
cmpl
pop
xor
ret
loop
xor
in
dec
fdivrs
jno
int3
gs
mov
dec
push
jnp
cld
pop
cwtl
pop
and
test
lods
ret
xor
xor
ds
push
sub
clc
repz
dec
and
sbb
mov
movsl
ret
adc
data16
enter
stos
sbb
xchg
and
es
test
sbb
sub
in
outsb
cmp
popa
jge
ljmp
mov
rol
lods
inc
cmp
fimull
cmpsl
mov
mov
inc
imul
mulb
push
mov
push
sbb
inc
or
sub
cmp
push
jle
mov
cli
sbb
mov
test
mov
xor
dec
int3
jne
lds
repnz
cmpb
sub
mov
xor
imul
inc
in
mov
mov
inc
cltd
adc
js
leave
jge
int
fs
shr
pop
sarl
int3
loope
or
ret
dec
fisttpl
rolb
pop
loop
and
pop
adc
xlat
inc
xchg
cmpsl
ss
xchg
stos
scas
add
mov
fs
adc
dec
es
dec
jmp
inc
inc
scas
and
pmaxub
mov
push
data16
sbb
je
test
mov
in
mov
mov
sbb
sub
test
push
sbb
test
outsl
shll
andl
sub
ret
or
cmp
mov
lret
adc
sub
into
out
pusha
ja
xchg
mov
mov
inc
out
lds
inc
out
mov
je
push
dec
lods
into
pop
xchg
movsb
lock
or
in
scas
icebp
jge
fidivrs
test
jns
ss
icebp
inc
or
dec
int
aam
sbb
arpl
test
decb
or
daa
sub
mov
xchg
xor
rol
push
push
popf
in
stos
xchg
xor
cmpsl
ret
cmp
scas
cmpsl
xchg
cltd
lock
pop
ds
pusha
scas
pop
xlat
dec
or
imul
pop
cld
cmpb
sbb
popfw
loopne
jp
inc
fwait
mov
mov
imul
and
loop
xchg
xchg
int3
inc
dec
mov
hlt
sbb
inc
dec
iret
add
mov
add
popf
popf
fwait
inc
jp
mov
out
aaa
push
in
out
leave
or
js
sbb
mov
bound
add
or
gs
imul
cli
addr16
push
pusha
arpl
xchg
or
mov
xchg
sbb
adc
cwtl
dec
roll
push
bound
pop
or
movsb
xlat
cmp
jmp
mov
das
add
imul
icebp
movsb
test
mov
fsubr
sub
xchg
fs
dec
cld
xchg
xchg
jmp
jmp
out
pop
sbb
xchg
rol
in
repnz
add
sbbl
sbb
mov
inc
sub
jle
ss
adc
push
pop
clc
dec
xchg
pusha
mov
je
cltd
in
pop
jnp
push
add
push
push
xor
enter
in
push
push
aad
icebp
or
pop
sub
pop
jo
inc
xchg
ja
inc
cmp
out
pop
in
cmpl
mov
and
push
add
inc
push
loope
daa
push
lret
addr16
or
inc
sti
jb
dec
imul
mov
jg
loop
pop
push
mov
jp
adc
mov
shl
cs
data16
mull
jle
stos
xor
mov
lret
pop
ret
xor
sbb
mov
int
ss
pop
leave
xchg
lcall
xchg
adc
xchg
push
imul
pusha
xorl
rcr
or
aad
ja
adc
icebp
stos
in
iret
pop
in
cmp
cmp
aaa
and
inc
enter
sysret
push
xchg
gs
pop
loopne
int3
pop
rorl
outsl
mov
fs
or
add
sub
jge
pop
inc
sub
dec
and
daa
add
nop
stos
das
shll
mov
decl
imul
xchg
and
aad
setns
testb
adc
fs
in
jmp
xchg
push
insl
fnstenv
and
pushf
or
movsl
mov
js
sbb
js
lcall
fisubrl
stos
addr16
or
popf
inc
cltd
pop
in
and
ja
movsb
aas
int
stc
fdivs
sub
inc
inc
xchg
cwtl
sbb
je
inc
gs
sahf
lret
mov
mov
enter
and
pop
stc
add
test
outsl
push
outsl
cmc
or
inc
pop
sti
mov
stos
dec
push
lret
cmp
jb
push
xor
scas
rorl
push
or
in
inc
sti
sbb
stos
ret
mov
ja
xor
nop
popl
jne
or
adc
push
push
mov
sub
mov
in
rcrl
push
adc
pop
ret
mov
cmp
lcall
int3
bound
ror
mov
push
data16
xchg
mov
bound
jmp
mov
inc
cmp
pushf
dec
movsb
jmp
sub
or
fidivl
out
cmpsl
daa
sub
mov
push
fiaddl
pop
jno
cli
stc
lods
fs
jp
lock
jmp
xchg
jg
into
and
mov
cwtl
into
xor
or
mov
aam
and
dec
pop
pop
mov
add
xor
movsb
fstpt
stos
sbb
and
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
lret
js
push
invd
add
bswap
hlt
pop
into
cli
sarb
jle
fidivl
sbbl
out
movsb
movsl
xor
cmp
ja
jge
rcrb
es
stc
jg
jb
cmp
outsb
imul
inc
sti
popf
pop
mov
mov
push
test
push
lock
inc
incb
inc
mov
adc
adc
and
ja
pop
push
xor
xor
push
cld
mov
test
push
pop
mov
jns
mov
lds
in
andl
xor
mov
pop
jl
dec
popa
sbb
inc
mov
mov
pop
mov
add
inc
pop
popf
dec
ja
fdivrl
insb
repz
xchg
pop
lds
mov
imul
test
sti
outsb
sti
xor
mov
inc
ror
cmpsl
cmpsb
and
jo
inc
cmp
sarb
test
mov
sbb
loopne
movsb
ret
bound
call
add
cmpsb
add
cli
fdivr
inc
movsl
rcl
push
lods
xchg
pop
push
lock
ret
icebp
fcoms
inc
push
test
inc
loope
push
dec
jp
pop
pop
and
cmp
stos
jae
sub
mov
add
adc
mov
sub
pushf
mov
xchg
insb
jmp
sub
loop
mov
lea
out
in
aad
sub
sbb
or
inc
stc
js
push
mov
enter
push
sbb
jnp
xor
adc
sbb
jge
pop
mov
and
jnp
out
cmp
call
jmp
xor
jno
jg
xor
add
mov
iret
fldenv
out
jl
inc
xchg
lock
aam
lds
pop
xor
sbb
and
mov
ret
jbe
xchg
and
mov
fsubr
fldenv
pop
cmpsl
test
or
loop
cwtl
adcl
out
mov
mov
and
rcll
jg
pop
in
xor
push
aad
loop
push
inc
fstpt
mov
sbb
pop
inc
dec
mov
sbb
rcrl
push
rclb
or
dec
add
test
mov
fidivl
mov
fists
imul
xchg
xchg
cli
dec
add
pop
stos
popl
cmp
inc
cwtl
out
adc
adc
faddl
scas
mov
pushf
ss
jg
mov
adc
sub
jnp
ret
sub
add
js
sbb
sbb
or
int
aad
jb
imul
sub
adc
adc
pop
mov
push
sbb
xor
add
xchg
int
or
or
fs
push
inc
out
imul
push
test
outsl
clc
cld
add
hlt
popf
push
cltd
loope
mov
hlt
int3
decb
jns
mov
call
ret
mov
das
mov
cmp
mov
ret
std
arpl
in
icebp
lods
inc
adc
mov
inc
inc
mov
and
push
es
push
je
aas
fs
pop
xor
inc
jno
cmp
mov
test
repz
scas
lods
push
scas
mov
subb
stos
lea
ret
movsl
jb
fistpll
xor
cmpsl
pop
int
and
jbe
ret
sbbb
xor
aad
mov
out
jno
stos
jmp
sbb
loope
js
jmp
mov
adc
movsl
push
jno
inc
xor
sti
mov
out
cmp
and
sub
jnp
nop
push
mov
scas
ds
fnstenv
add
fdivr
out
mov
mov
lods
pushf
outsb
dec
test
xchg
push
aaa
dec
sub
mov
cld
or
dec
mov
sarl
add
test
push
sub
dec
dec
out
daa
aad
inc
insl
pushf
pop
pop
sbb
xlat
mov
lret
sub
and
xor
or
cmc
dec
pop
out
sub
iret
pmullw
idivb
aaa
xor
aaa
inc
mov
dec
push
jo
xor
xchg
cmp
mov
sti
stos
ret
sub
and
pop
push
adc
xchg
xchg
sub
into
imul
mov
sbb
adc
add
jae
pop
fsts
push
dec
insb
imul
add
lods
inc
mov
hlt
push
ljmp
add
push
dec
sub
jge
push
add
pop
mov
sub
xchg
aam
popa
inc
xchg
inc
les
fcoml
xchg
push
xor
lea
push
pop
cmp
xor
pop
test
scas
pop
mov
or
clc
popa
add
dec
pop
mov
mov
mov
cmp
adc
test
mov
push
fstpl
ja
adc
pusha
and
mov
out
cmpsb
and
fldcw
jb
mov
adc
cli
adc
pop
sarl
adc
push
adc
inc
sub
xor
dec
push
mov
sub
jnp
fsub
int3
cmpsl
dec
inc
inc
xchg
scas
adc
rcrb
cmc
out
cld
inc
into
mov
mull
stos
fdivl
lea
in
adc
inc
aas
mov
push
ljmp
adcb
jns
addl
in
popa
inc
push
popa
push
xor
mov
sbb
pop
lcall
push
pop
cmc
in
pop
add
and
roll
adc
sub
xor
and
ret
sub
test
dec
xor
dec
jmp
sti
insl
mov
mov
add
pop
clc
mul
test
mov
aam
mov
in
fists
jmp
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
imul
invd
add
psadbw
xchg
sarb
xor
test
xchg
cmpl
cmp
push
mov
mov
pushf
iret
mov
and
mov
mov
pop
leave
cmp
daa
push
add
dec
in
cs
cmp
push
pop
jno
ds
jne
push
les
pop
pop
popf
xchg
and
dec
and
loope
mov
cld
push
out
inc
stc
mov
dec
loop
lods
cmpsl
insl
xor
and
mov
xor
xlat
test
xor
add
push
addr16
rcrb
cmp
mov
mov
push
ret
and
enter
push
rcrl
loop
pop
rorl
jg
sub
cltd
push
orl
int
repnz
sti
insb
mov
ljmp
inc
cmp
into
std
pop
xor
shlb
gs
dec
add
and
testl
xchg
int3
adc
jnp
int3
in
sahf
dec
mov
sub
test
cmp
int3
inc
xlat
dec
popa
xchg
outsl
mov
sub
inc
xor
mov
mov
decl
or
fwait
sbb
push
lea
lds
outsb
ret
dec
aad
jo
hlt
inc
leave
inc
xchg
add
mov
std
test
pop
add
jb
push
mov
popf
add
push
in
jge
out
aas
int
ficomps
ret
xor
push
cmp
adc
pop
fisttpll
xchg
jne
inc
xor
shlb
fs
inc
jb
pushl
inc
dec
inc
mov
rorl
jle
push
mov
div
add
data16
test
out
mov
mov
ss
dec
lods
insl
mov
adc
dec
inc
insb
andb
mov
inc
out
out
cmp
pop
or
inc
or
add
aaa
hlt
lahf
nop
xchg
addr16
test
lock
out
xor
enter
jbe
scas
or
imul
push
or
mov
shl
pushf
inc
daa
push
or
bound
enter
adc
arpl
loopne
loop
sahf
dec
fs
addr16
nop
adc
sub
std
lods
fstpl
cmpsb
inc
lcall
in
je
and
ret
mov
sahf
aam
mov
scas
in
mov
mov
addl
loopne
xchg
or
es
jmp
cld
stos
xchg
test
push
push
jle
jnp
out
scas
xchg
cmpl
into
and
mov
stc
aas
or
jl
adc
add
outsb
out
mov
imul
mov
popa
aaa
jmp
in
pop
fistpll
push
pushf
movsl
dec
push
xchg
inc
and
repnz
int
push
mov
jp
pop
lret
fs
push
data16
pop
mov
mov
or
nop
fdiv
fnop
add
cld
pushf
ret
fucom
lcall
mov
push
push
dec
icebp
shl
aam
add
bound
je
inc
roll
repz
mov
stos
dec
mov
popa
int3
imul
popf
out
lea
mov
inc
mov
push
inc
adc
out
mov
mov
data16
mov
jns
test
imull
mov
pop
aas
sub
xlat
or
mov
dec
and
dec
dec
lds
arpl
mov
adc
orb
xchg
arpl
mov
shr
xor
lods
or
adc
loopne
sub
insb
stc
fsubrl
addl
mov
mov
pop
xchg
out
sbb
inc
gs
stos
jne
scas
add
movsl
push
mov
popf
pop
int
aad
and
adc
mov
xchg
icebp
dec
sbb
push
enter
sbb
pop
ret
ja
inc
mov
sbb
leave
fs
pop
stos
es
mov
sub
cmp
mov
mov
cld
cmpsl
jnp
data16
mulb
mov
inc
in
xchg
dec
adc
cmpsl
push
aas
sub
mov
pop
andb
imul
ss
cwtl
pop
xor
xor
mov
dec
ds
shll
je
ficoml
mov
jb
jmp
pop
inc
lock
fisttpl
mov
rorb
push
insl
pop
xor
lcall
pop
loop
inc
push
popf
push
push
outsl
sbb
fcomp
fisttpll
jnp
xchg
push
dec
mov
sub
adcl
cmpsl
lcall
cmp
xor
xchg
aam
out
into
add
pop
xor
shll
icebp
inc
or
in
imul
popa
shll
in
sbbl
xchg
push
lods
adc
jnp
mov
xchg
stos
ret
lods
xor
in
mov
mov
jle
add
lret
pop
jmp
scas
mov
mov
arpl
js
stos
scas
mov
imul
push
dec
movsl
inc
into
mov
call
push
lret
rolb
mov
in
bnd
out
push
jle
and
cmp
scas
gs
js
pop
sub
cmp
pop
add
mov
shr
repnz
fdivrl
fdivrl
clc
add
xchg
test
jle
adc
cwtl
pushl
imul
mov
aad
test
aaa
lret
daa
or
cwtl
push
dec
fucom
not
xchg
sub
scas
dec
push
mov
sbb
jb
frstor
sub
cmp
jg
sub
mov
sti
push
movsl
ljmp
aam
add
testb
pusha
fcomp
mov
push
lds
push
pop
adc
cmp
add
sub
add
lret
xor
leave
pop
cmpsl
mov
xchg
inc
in
ljmp
mov
cwtl
fcoml
xor
pop
cmpsl
ljmp
mov
adc
popa
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
lldt
dec
pop
jp
jnp
adc
lods
push
pop
sbb
pop
mov
fiaddl
decl
icebp
push
fdiv
cmc
or
mov
cs
movsb
push
and
icebp
rcrl
lds
dec
jl
idivb
xor
clc
ss
push
inc
roll
add
icebp
dec
jle
data16
test
std
xchg
xchg
andb
pop
sar
mov
jns
pop
cmp
cld
movsb
outsl
sbb
cmc
xchg
sti
rorb
adc
pop
pop
lret
jp
xchg
adc
mov
outsl
movsb
push
mov
fdivs
cli
and
sbb
jae
inc
lods
hlt
loopne
mov
and
push
mov
loope
cmp
pushf
sub
inc
psllq
out
mov
cmc
dec
and
insl
pop
imul
sub
ljmp
sbb
inc
fs
adc
cmc
sub
fstl
cld
into
inc
pushf
lock
ss
addr16
rol
fmul
mov
dec
imul
pop
pop
jo
js
fstl
stc
clc
shl
aaa
adc
fwait
cmpsl
ja
push
xchg
in
loopne
jmp
ljmp
jo
mov
lods
pop
xor
into
add
jl
mov
movsl
aad
push
mov
cmpsl
or
int
aaa
dec
in
pop
and
lahf
xor
jo
int
sbb
addr16
in
jne
rcl
pop
or
sbb
cmp
clc
mov
into
mov
add
in
mov
and
xchg
fsts
aaa
fcoml
repnz
xlat
aam
insl
icebp
xchg
xchg
push
cmp
mov
test
push
add
mov
pop
xchg
mov
or
fdivrp
cmp
mov
jle
pop
outsb
call
dec
jp
push
pop
or
inc
pop
mov
xor
add
mov
int3
je
push
sbb
pop
and
jl
pop
add
popf
lcall
stos
xor
loop
add
xchg
push
addr16
dec
pop
daa
cmp
inc
daa
mov
or
mov
maskmovq
divl
cmp
scas
add
cmpsb
sbb
cmp
jge
mov
testl
lds
test
push
mov
movsl
sbbl
ja
in
fsubl
roll
sbb
cmpsb
dec
mov
jb
ljmp
mov
add
mov
mov
jg
test
pop
sub
mov
popa
cmp
dec
je
and
fs
dec
outsb
iret
in
push
or
comiss
out
pushf
and
in
ljmp
jle
mov
inc
test
rorl
or
fbstp
dec
loope
and
ljmp
std
ja
mov
imul
inc
lret
xor
data16
les
add
add
sub
adc
dec
dec
and
jbe
or
dec
xchg
cmp
testl
in
jnp
xchg
pop
lahf
stos
or
or
jb
xchg
lahf
jne
fcompl
mov
jae
dec
cltd
rcrb
add
mov
mov
cmp
test
cs
cmp
pop
pop
nop
ljmp
lods
xor
outsb
fmul
jl
movsl
inc
xorl
das
add
inc
or
std
add
jle
sub
gs
adc
sbb
add
test
cld
icebp
mov
xor
out
scas
cmp
inc
jge
jecxz
cmp
cmpsl
inc
pushf
pop
sbbl
out
jp
push
sub
fildll
inc
inc
adc
dec
inc
fwait
sub
jl
xchg
insl
clc
aad
xchg
xchg
mov
lock
mov
lret
pop
mov
xchg
sub
lea
mov
into
popf
mov
xor
mov
dec
xor
das
nop
movsl
test
out
insb
push
cmp
push
into
dec
bound
iret
loope
mov
leave
adc
pop
push
jno
ja
inc
in
mov
mov
cld
in
mov
pop
je
dec
test
lds
out
aam
inc
adc
test
pop
in
repnz
bound
leave
lock
or
scas
call
mov
jl
xchg
and
loop
fcomps
lds
lcall
das
fimull
push
mov
les
iret
fstpt
add
jmp
ret
cltd
xchg
leave
inc
inc
sub
cmp
mov
cld
cmp
je
xchg
stc
adc
flds
or
push
dec
mov
ret
imul
inc
sbb
dec
jnp
sub
ljmp
xor
and
dec
cmp
pop
pop
cmpsb
notb
pop
iret
mov
xchg
mov
and
xchg
inc
pop
dec
addr16
subb
in
xacquire
iret
test
fldt
nop
adc
adc
sbb
loopne
mov
ss
mov
pop
leave
push
sti
lret
scas
out
jp
adc
mov
jnp
add
roll
ss
adc
fmul
push
adc
push
adc
js
inc
pop
fsubs
dec
jo
mov
into
jns
mov
mov
pop
std
pop
pop
movl
in
add
push
in
push
pop
stos
sub
aam
std
arpl
and
pusha
dec
push
jae
push
in
rcrb
in
mov
and
je
std
mov
fisttpl
adc
dec
add
cli
data16
sub
push
cli
push
int3
xor
lret
mov
mov
outsl
or
lcall
push
lock
adc
cmpb
cmp
pop
lods
xorps
rorl
sub
repz
das
mov
or
xchg
pop
jp
das
jae
lods
sbb
cld
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
mov
inc
invd
add
movq
dec
push
sub
push
cltd
inc
ljmp
imul
sub
fisubrs
push
adc
xchg
mov
xor
lret
ret
push
or
mov
or
int
sbb
or
les
out
xor
xchg
push
inc
xor
fdiv
in
mov
add
mov
jno
jp
dec
lods
cmp
push
jg
out
rep
insl
jo
sahf
aad
cltd
adc
and
daa
mov
shl
pop
mov
push
lcall
inc
sbb
inc
int3
aad
daa
in
sahf
int
pop
mov
dec
sti
outsl
loop
mov
xchg
mov
fs
jl
insb
dec
lods
ja
js
mov
aaa
mov
cmp
push
or
pop
sub
daa
and
xor
mov
sbb
dec
push
xor
in
mov
orb
lods
call
rcll
incb
pop
mov
sbb
mov
dec
jmp
add
rorl
int
into
push
loop
dec
movsb
repz
sarb
inc
insl
shlb
dec
lds
mov
cmpsb
or
push
push
data16
sbb
in
mov
xchg
xchg
sti
sbb
sub
ds
jns
jge
xchg
mov
stos
sbb
add
cmp
mov
add
push
mov
pop
lcall
adc
add
adc
sahf
inc
data16
or
xorl
add
stos
jbe
and
shrb
pop
ja
dec
loope
aas
subb
mov
fs
ss
fcomp
dec
enter
pop
aas
inc
mov
hlt
ret
lret
fsubl
inc
aam
das
and
push
jo
andb
add
nop
xchg
dec
sbb
or
sub
dec
mov
out
cmpsl
push
mov
nop
addr16
add
std
insb
mov
jle
jecxz
mov
xor
jb
pop
xor
ljmp
and
rcll
xor
pushf
js,pt
pop
adcl
fbld
jp
movsb
push
push
fsubrl
mov
xor
mov
sbb
aad
pop
into
jmp
roll
or
jg
data16
cli
gs
in
xor
mov
js
dec
popf
shll
pop
inc
aad
xor
dec
mov
in
rolb
daa
add
sub
das
sbb
out
outsl
fisubs
xchg
and
jp
scas
pop
into
jle
fwait
jmp
daa
push
adc
or
cmp
inc
stos
adc
jge
and
dec
ret
into
in
push
and
push
sbb
and
rcrb
mov
and
pop
imul
sub
mov
adc
jecxz
repnz
inc
mov
mov
sbb
pop
popa
movsb
mov
test
mov
mov
push
push
sahf
mov
dec
loope
add
mov
xchg
orl
mov
nop
dec
rorl
cltd
mov
xorl
cltd
xchg
lea
out
or
xor
push
xchg
inc
jnp
cld
insl
xor
das
cmp
ds
mov
jle
in
adc
jecxz
mov
push
ljmp
xchg
xor
jge
dec
and
js
test
inc
and
outsl
cmp
sahf
jecxz
frstor
mov
push
lods
hlt
adc
test
mov
sbb
mov
shl
add
shll
xchg
cwtl
ljmp
outsl
jae
mov
push
dec
and
jecxz
out
filds
or
sbb
xor
push
pop
jns
xchg
out
xchg
jl
sbb
fs
lea
or
lods
push
call
stc
fmulp
std
in
nop
mov
or
sbb
pop
sbb
aad
orl
les
sbb
shr
fidivl
imull
add
or
mov
iret
xor
daa
cmp
pop
mov
lock
dec
push
shrl
imul
inc
add
mov
mov
jge
mov
pop
loopne
orw
mov
mov
mov
add
movsb
sbb
inc
scas
and
mov
jle
xchg
adc
mov
movsl
sti
lock
incb
jb
or
sbb
cmp
jg
aaa
jge
mov
arpl
mov
popa
ret
data16
jle
xor
jg
repz
mov
inc
ret
or
lods
daa
xchg
test
aam
mov
pop
loop
jne
mov
imul
jge
loopne
cmp
sti
add
adc
and
jne
jo
adc
or
inc
push
xor
push
jb
add
gs
mov
fcmove
mov
adc
imulb
xchg
lret
ret
dec
repnz
scas
js
sub
dec
call
int
sub
mov
cmp
test
sub
xadd
xchg
ja
inc
xlat
jbe
stos
in
and
xor
mov
pop
or
xchg
xlat
sub
jle
mov
incl
push
mul
lret
jg
lret
dec
or
ja
inc
sub
paddsb
pop
push
scas
lds
jg
pop
les
pop
jno
adc
arpl
push
sub
imul
xchg
dec
adc
in
jno
or
xchg
xchg
lret
loopne
ficompl
scas
mov
jbe
out
jp
jl
cmp
push
mov
adc
mov
call
fs
and
mov
or
push
rol
pop
cwtl
clc
test
pop
push
mov
aas
add
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
cs
out
mov
pmulhuw
push
xor
add
or
inc
mov
fmulp
inc
sbb
push
mov
push
or
or
je
mov
clc
cmpl
or
sub
mov
leave
sbb
push
pop
pop
into
fldenv
or
push
xor
out
jb
jnp
xor
js
mov
imul
data16
shll
clc
mov
mov
dec
arpl
test
push
xor
pop
mov
dec
mov
sub
jnp
loop
jl
jmp
es
ds
dec
xor
push
les
imul
mov
xor
mov
test
dec
pushf
dec
bound
mov
les
das
xor
pop
push
jno
scas
jb
fistps
jmp
pop
sbb
aad
push
in
mov
clc
sbb
test
mov
ficoms
xchg
insl
test
addr16
push
lcall
push
out
xchg
or
add
aam
push
std
add
call
pop
xchg
mov
mov
dec
outsb
fwait
mov
lea
int3
xchg
ror
jecxz
xlat
subl
xchg
pop
mov
jne
dec
movsl
shll
sub
mov
or
xchg
mov
fwait
or
inc
jne
dec
outsl
mov
cmp
jl
jg
roll
mov
pop
sahf
out
cltd
lret
cwtl
mov
mov
insb
jle,pt
lcall
les
addr16
dec
mov
mov
cmp
add
mov
xchg
jl
in
pop
mull
or
mov
aam
in
jae
mov
fdivrl
movsl
jne
ljmp
fcom
cltd
add
add
imul
lds
pop
jae
lcall
and
inc
cmp
xchg
add
mov
pop
fdivrs
je
xor
and
pusha
xchg
fnstcw
leave
lret
fs
aas
dec
rolb
sub
fwait
push
push
push
movsl
arpl
pop
mov
cmc
stc
loopne
add
mov
in
sbb
mov
sub
inc
and
fcmovne
cmc
or
pop
cmp
fs
icebp
inc
jecxz
mov
fildl
inc
int3
sti
fs
sub
stc
insl
fidivrs
adc
setbe
xchg
jmp
inc
mov
or
xor
sahf
icebp
sub
inc
insb
sbb
jg,pt
mov
cmp
push
dec
cmp
sahf
add
sbb
fisubrs
mov
lods
mov
mov
push
xor
fnsave
pop
pop
add
adc
lret
stc
and
ret
into
cmpsb
les
sub
addr16
or
mov
mov
test
push
sub
add
jge
lret
mov
sbb
jmp
lcall
fistps
add
imul
push
jg
mov
jmp
cmc
nop
cmp
xor
loope,pn
scas
pop
push
fwait
push
or
lahf
gs
scas
mov
imul
xchg
add
repnz
out
insl
int3
imul
inc
sbb
loopne
insb
int
inc
scas
gs
add
xchg
push
std
xchg
cld
push
pop
outsb
dec
into
push
insb
popa
mov
dec
sub
xchg
adc
inc
fdiv
sbb
jmp
ret
imul
sbb
jecxz
loop
outsb
mov
push
popa
insb
fcmovnb
inc
data16
or
loop
sti
pop
sbb
or
int
cmp
mov
or
jp
pushf
sbb
pushf
aad
sbb
loop
arpl
mov
fwait
pop
xchg
lds
mov
xchg
add
dec
lahf
mov
add
stos
cmp
and
mov
fdivrs
xor
aad
push
test
pop
pop
in
ret
mov
inc
xor
ljmp
andb
imul
dec
test
jo
push
push
sub
xor
pop
into
loope
js
sahf
push
cmpsl
mov
cmp
fld
leave
xchg
jnp
fldenv
inc
add
fcoms
out
insl
mov
loope
imul
add
xchg
negl
jg
xchg
cmp
cmpb
outsl
pop
andb
dec
jns
cltd
lds
jge
mov
rcr
xor
mov
cmpsl
jae
repz
dec
dec
pop
or
aam
mov
dec
pop
or
adc
adc
test
stc
sub
loope
mov
xchg
fsubr
les
imul
pop
inc
pop
jmp
mov
xor
arpl
jo
xlat
xchg
mov
mov
arpl
repz
cmp
lods
cmp
dec
scas
lock
lcall
test
daa
cmp
mov
or
cmp
or
mov
ror
sbb
dec
mov
push
inc
daa
mov
adc
sub
push
mov
adc
cmp
and
addr16
fnstcw
in
pop
mull
lds
fidivl
pop
pop
in
sbb
jae
dec
mov
mov
jb
sbb
cli
and
add
pop
aam
lret
out
xor
movsb
fnsave
mov
xor
or
dec
mov
sbb
outsb
and
inc
xorb
xchg
cmp
ja
enter
sbb
cwtl
scas
xor
or
aam
jbe
or
shrb
cmpl
sbb
adc
jg
stc
xor
or
imul
mov
cmc
lods
jge
imul
fsubrl
clc
dec
mov
cmp
push
pop
cmp
sbb
or
push
cmp
push
mov
or
and
imull
push
jne
xor
addps
ds
mov
mov
int3
cmp
mov
mov
mov
add
push
cmp
push
dec
dec
cmp
scas
jle
mov
lea
jno
jecxz
cli
sub
cmp
xchg
and
cli
lret
adc
test
cmp
addr16
scas
sbb
push
jmp
test
xchg
sahf
aas
loope
hlt
outsl
sahf
mov
ljmp
lret
xchg
enter
aam
xchg
add
add
enter
cmp
cmp
scas
gs
push
push
xchg
add
out
ja
in
test
fiadds
push
fidivrl
inc
mov
inc
sub
cs
jg
test
js
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
ret
push
xchg
sbb
mov
setbe
test
inc
mov
dec
jne
aaa
arpl
insb
out
js
ss
clc
in
ror
push
mov
cmpl
int
and
jecxz
jno
jne
lea
or
pop
jnp
ja
mov
rolb
or
popa
push
pushf
bound
addb
add
mov
and
push
or
jnp
fists
into
pop
movsl
push
pop
push
and
outsb
push
mov
dec
jecxz
std
iret
xchg
gs
push
jae
xor
fdivrp
add
push
pop
hlt
out
int
je
xchg
repnz
ljmp
adc
cmc
cmc
xchg
dec
and
mov
dec
sbb
loop
jns
xchg
das
data16
jmp
pushf
cmp
stos
mov
sub
push
stos
pusha
jg
lret
cmp
xor
sbb
cld
mov
add
xlat
lods
orl
sarb
xchg
cli
mov
pop
fwait
push
cli
cmc
cwtl
sub
inc
adc
adc
lods
mov
cmp
pushf
mull
add
sub
jmp
lret
sub
xchg
shrl
and
data16
and
jno
lahf
mov
jp
stos
push
xor
fstpt
and
scas
ret
negl
or
add
ljmp
or
pushf
cs
xchg
imul
int3
mov
orl
nop
call
fists
fcomip
lahf
cli
mov
adc
jl
sahf
inc
push
cmp
sbb
adc
xor
jle
cmpsl
mov
stos
xor
jae
decl
mov
cmp
fprem1
call
pop
sub
notl
gs
mov
sub
loop
mov
inc
sub
jne
lret
pop
sbb
nop
cwtl
and
inc
les
xor
js
imul
xor
ja
pop
jo
pop
insl
pop
lret
out
das
jg
fcmovb
sbb
stos
adc
hlt
pop
mov
gs
jns
mov
and
mov
lds
rorb
lahf
das
sub
jecxz
pop
test
loope
xor
sub
icebp
mov
jmp
adc
mov
ja
jecxz
repnz
insb
sbb
adc
bound
mov
fdivrs
add
xchg
ss
repz
add
add
lds
mov
adc
jbe
add
xlat
testl
cmpsb
das
cmpsl
cmpsb
or
mov
inc
insb
movsl
fbstp
dec
mov
lret
rep
mov
vpmacsdd
je
cltd
lgs
pop
lcall
push
xor
call
add
mov
loopne
and
cltd
outsl
and
sub
push
test
mov
jg
ret
into
push
test
push
or
jle
push
mov
push
adc
push
cmp
popf
cmp
xchg
testl
jb
jne
jns
or
out
add
and
cltd
sub
and
ljmp
dec
mov
pop
xchg
jae
imul
jo
inc
mov
ret
sbb
or
xor
push
push
add
les
mov
stc
and
loopne
pop
lcall
js
shrb
pop
pop
out
add
jbe
test
push
add
cmpsb
cmp
daa
mov
adc
cmp
pop
jl
jl
or
cmc
and
dec
add
cmpsl
mov
xor
pop
pop
jmp
add
cmp
push
mov
and
xor
je
mov
cltd
push
jnp
push
dec
out
mov
jns
xor
test
in
cmpl
dec
pop
imul
movsb
insl
mov
cmp
insl
and
rclb
test
xchg
in
stos
dec
push
jae
dec
je
push
sbb
mov
xchg
mov
cmp
frstor
xchg
icebp
test
arpl
dec
test
pop
icebp
dec
or
out
and
sbb
sbb
inc
sbb
adc
into
pop
in
mov
adc
clc
cwtl
cmpsl
push
frstor
jecxz
enter
stos
push
jns
adc
movsb
mov
popf
ret
push
imul
cmp
pop
cltd
fisubrs
mov
mov
stc
pusha
sub
loope
jecxz
dec
jmp
xor
flds
test
xchg
pusha
mov
mov
andl
xor
jns
sub
xorl
lahf
pop
pop
ficomps
inc
mull
sbb
pusha
sarl
inc
lcall
out
cwtl
out
ss
xor
aam
inc
add
fdivr
sub
inc
popf
or
sti
sbb
in
leave
ret
mul
adc
aaa
mov
movsl
nop
or
sbbl
out
filds
xchg
mov
sbbb
in
iret
cmpsl
dec
scas
je
sub
adc
rcrb
sub
push
cmp
decl
jns
gs
aaa
call
and
imul
cmpsl
addr16
lret
cwtl
repnz
xchg
jl
inc
movsl
in
cmp
test
lcall
xchg
leave
jecxz
in
adc
testb
mov
lret
popa
cld
cmpsl
mov
bound
jg
sarl
or
imul
push
jecxz
push
mov
mov
lea
inc
out
dec
movsl
jne
or
test
mov
push
dec
xorb
adc
dec
aaa
testl
jno
sbb
enter
popf
aaa
es
mov
xor
mov
cltd
je
pushf
mov
into
divl
inc
out
call
mov
jl
push
cmpb
add
xorb
inc
add
dec
mov
jl
mov
mov
mov
shll
sub
hlt
pop
mov
pop
sub
cmp
mull
inc
shrb
repz
test
dec
imul
out
jp
stos
stc
jbe
gs
and
cltd
es
js
mov
shrb
out
add
gs
ljmp
or
jecxz
cmpsw
sub
xchg
sub
loop
xchg
mov
mov
inc
add
loop
loopew
push
rcl
stos
xor
jbe
cmpsl
iret
adc
in
xor
inc
notl
xchg
loopne
fdiv
cmp
xchg
stos
push
insb
jmp
sub
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
bound
push
pop
pop
mov
orps
repnz
sahf
mov
or
das
jns
sub
xor
xchg
push
mov
jno
jmp
gs
ret
aam
into
test
daa
cmp
pop
aas
add
push
test
mov
or
ficompl
fmuls
jb
outsl
and
js
and
pop
scas
sub
push
adc
or
inc
jg
mov
adc
in
fisttps
or
lret
dec
pop
sbb
push
repnz
popf
movb
adcl
sbb
sbb
adc
mov
cmp
pop
lret
push
jecxz
je
outsl
push
sarl
mov
in
popl
jmp
mov
test
push
cs
xchg
inc
pop
sti
mov
sbb
mov
jnp
adc
pushf
insb
adc
cli
pop
shl
cmp
stos
sti
ret
pushf
and
push
mov
push
outsb
out
std
pop
sbb
jbe
push
data16
cli
pop
pushf
cmp
jmp
ud0
inc
out
jo
sbb
sub
ret
jno
xor
inc
fwait
int
mov
dec
int
adc
out
or
jo
repnz
push
pop
repz
aas
dec
cmpsb
mov
repz
fcomp
or
cmp
xchg
lds
and
cmpsl
out
in
mov
push
or
push
push
cmp
mov
pusha
lret
inc
test
imull
mov
sbb
stos
mov
cmp
cltd
push
enter
imul
cmc
cmp
mov
push
xchg
lret
mov
outsb
mov
fcmovb
sub
or
sbb
add
xchg
dec
xor
rcrl
outsl
push
pop
imul
movsb
push
cmpsl
pop
sbb
or
pop
inc
movsl
push
sub
xchg
jbe
cmc
mov
sbb
sub
les
cwtl
add
fdivrs
pop
lcall
aaa
xchg
xchg
neg
or
fsubl
cmp
mov
push
push
xchg
clts
mov
jmp
xchg
push
xor
insl
cmc
or
repz
add
inc
xchg
test
test
cmc
add
mov
imul
dec
inc
mov
mov
push
negl
rorl
or
in
mov
shr
insb
jg
push
es
adc
pop
pop
outsb
add
enter
in
rolb
push
xchg
test
cmp
repnz
out
dec
pminsw
add
rcrl
pop
sahf
add
or
aad
std
mov
call
jb
les
icebp
or
ret
lret
cs
mov
cmp
mov
flds
cmc
scas
cmp
sub
xor
jmp
subb
push
rorl
mov
mov
hlt
xor
cld
roll
je
pop
jne
lods
jnp
lret
fidivl
addb
add
int3
inc
ror
mov
aam
movsl
ljmp
cmp
sbb
inc
data16
sbb
xlat
loope
or
add
mov
dec
gs
sbb
jnp
sarl
outsl
xor
mov
sbb
and
sbb
xor
push
cmp
jle
mov
xchg
addb
ficomps
in
shlb
arpl
inc
mov
xchg
sub
push
inc
test
and
push
popa
sbbl
int
popa
scas
aad
clc
add
mov
mov
or
int3
and
adc
push
mov
adc
fistpl
fldt
cmc
nop
inc
xor
fisubs
ja
mov
pop
xchg
cmp
cld
jle
jnp
das
rcpps
cmp
lods
lcall
gs
popf
leave
mov
repnz
jmp
ss
arpl
shll
dec
push
mov
insb
jne
or
lods
rol
outsl
push
cwtl
add
daa
xor
lahf
mov
xchg
and
mov
outsb
inc
jo
data16
ret
or
jp
and
adc
adc
fsubs
adc
push
xor
testl
adc
in
xor
push
dec
mov
jl
daa
pop
mov
insl
test
cwtl
fisubrl
dec
aas
mov
lods
sbb
lods
sub
pop
and
xor
inc
and
jnp
ret
out
adc
add
add
mov
testl
push
das
mov
dec
inc
call
mov
mov
cmpsl
xchg
jae
imul
cmp
lds
daa
dec
pop
lods
lahf
pop
int3
leave
inc
inc
imul
sbb
push
and
in
imul
jns
imull
add
mov
movsl
and
pushf
inc
xchg
andl
iret
aas
sti
std
sbb
dec
xchg
ja
sbb
mov
enter
icebp
add
lea
push
pop
dec
cmpsb
out
push
xchg
xlat
int
adc
or
and
lods
pop
loop
imul
gs
jo
adc
sub
loope
adc
xor
dec
in
sub
call
icebp
icebp
push
sub
mov
fs
cmp
mov
in
mov
mov
jp
stos
int
insl
orb
pop
mov
and
jae
test
mov
mov
sbbb
imul
inc
add
push
clc
lock
shrl
cmpsl
mov
dec
and
call
pop
mov
int3
repnz
stos
pusha
add
adc
adc
iret
jg
aam
add
add
dec
dec
push
in
lods
int3
movsl
cmp
daa
adc
pop
jns,pn
jge
cmpsl
jae
iret
lahf
test
cmp
mov
jns
loope
jmp
fsubrs
std
sbb
inc
xchg
insb
push
mov
lea
lcall
push
cltd
push
push
or
popf
add
jmp
arpl
push
das
jg
push
push
jae
mov
in
dec
fadd
shr
cwtl
mov
lea
inc
movsb
or
test
lods
sub
mov
jno
dec
or
xchg
fdivrl
test
ret
xchg
je
jbe
mov
mov
or
xchg
addr16
add
dec
xor
xchg
push
sub
and
dec
push
lahf
push
sub
or
jae
rcrb
fisubrs
jo
loop
rcll
fdivrs
push
imul
lds
enter
mov
sbb
inc
pop
bound
ret
testl
test
repnz
jmp
into
add
or
xchg
dec
inc
sbb
adc
and
jge
mov
stos
jne
out
lea
push
adc
bswap
pop
pop
xchg
add
stc
inc
mov
mov
stc
leave
and
mov
sub
mov
mov
rclb
pusha
and
adcl
ret
push
pop
mov
andb
rcrb
scas
das
fs
xor
ja
and
inc
inc
lods
add
push
sarb
cwtl
sub
movsl
and
stos
daa
adc
pop
dec
sbb
xchg
fwait
pushf
or
das
pop
push
sti
es
pop
inc
addr16
push
ds
or
add
imul
fadd
dec
leave
adc
push
std
sub
pop
fdivl
aam
enter
outsb
or
sub
push
imul
lret
es
cmp
xor
mov
jo
sbb
add
mov
mov
jmp
push
cmp
leave
push
rolb
in
push
pop
icebp
cmp
out
adc
sbb
push
out
imul
call
call
sub
ljmp
jbe
test
mov
dec
sar
clc
push
push
jno
cmp
mov
mov
leave
jbe
jae
adc
les
dec
inc
addr16
push
lea
rorb
inc
sub
out
fwait
repz
push
mov
mov
jp
sti
lock
orl
paddsw
cmp
cmpl
std
pop
push
mov
sbb
push
test
js
jle
leave
or
ds
sti
lock
pop
ljmp
xor
pop
sbb
decb
in
rcll
push
test
dec
icebp
cmp
sahf
jmp
subl
fstl
lods
int
push
gs
push
push
mov
xchg
aad
sbb
adc
or
iret
test
cli
mov
push
pop
pusha
sbb
jno
outsl
pop
ficompl
roll
enter
sub
pop
arpl
daa
pop
mov
mov
mov
scas
mov
fnstsw
leave
dec
adc
repnz
jbe
or
mov
sub
cmpsb
sti
unpckhps
inc
inc
jge
push
test
sbb
repnz
or
mov
inc
loope
mov
push
and
add
pop
inc
call
cltd
fld
fbstp
mov
cmp
ds
and
xor
lret
push
lret
fcomp
and
test
sti
pop
mov
pop
mov
sub
lods
add
arpl
pop
inc
aam
mov
adc
lock
pop
mov
lahf
add
push
sub
sbb
pop
inc
test
out
mov
sbb
imull
fistpl
fnstenv
sub
xchg
fwait
repnz
flds
insl
sbb
rcll
jle
pushf
push
shll
mov
mov
mov
arpl
dec
jae
mov
andb
adc
movsl
sub
shll
mov
adc
imul
sahf
pop
aas
rclb
lret
pop
pop
dec
jecxz
int3
or
dec
cmp
sub
inc
in
push
dec
pop
imul
jecxz
sub
nop
sub
sub
bound
aas
das
stc
or
test
pushf
or
mov
repz
insl
mov
repnz
cmp
push
dec
sub
jp
es
mov
and
or
in
cmp
les
js
adc
mov
cmp
sub
fnsave
in
sbb
or
imul
js
leave
shlb
mov
xchg
sub
repz
xor
fchs
sbb
and
fwait
cmp
xlat
cwtl
das
mov
sbb
movsb
ja
das
xchg
test
scas
xor
lea
inc
pop
lret
ret
pop
adc
std
mov
dec
lods
divl
adc
fisttps
or
push
aad
insb
int
pop
or
sub
les
sub
lcall
ret
test
cs
jmp
or
adc
mov
mov
ret
jb
mov
sti
cmpb
pop
stc
lcall
lods
xor
xor
sub
pushf
mov
dec
push
sub
and
dec
int
testl
in
or
in
pop
cmp
cwtl
mov
pop
das
mov
mov
pop
or
push
inc
sarb
mov
cmp
movsb
lds
inc
cmc
gs
bound
repnz
inc
arpl
loopne
jmp
imul
dec
stc
pop
dec
ljmp
sahf
mov
scas
out
setle
test
xor
movb
mov
call
flds
stos
out
call
out
or
mov
adc
les
xor
adc
inc
fnstsw
adc
push
fdivl
scas
lret
inc
mov
sub
or
aaa
and
daa
sub
or
lods
mov
test
jbe
and
inc
jne
cmp
jb
inc
sub
mov
dec
lcall
pop
sbb
out
imul
sub
lahf
mov
pushf
push
ds
mov
sub
ret
jnp
test
scas
jno
outsb
lds
aaa
scas
icebp
test
inc
ljmp
int3
pop
lret
inc
cmp
jb
stc
inc
into
jno
dec
push
xchg
and
sbb
aam
cmpb
add
jecxz
mov
std
push
cmp
or
movsb
stos
cmp
ds
mov
pop
sbb
mov
sbb
cs
dec
test
roll
mov
aad
mov
in
nop
inc
or
mov
jno
pop
jo
movsb
sub
mov
sbb
mov
pop
jecxz
xchg
shrb
and
mov
subl
lds
out
cmpb
push
mov
cltd
loop
fidivl
adc
lods
fldenv
add
add
lcall
data16
stos
push
add
mov
sti
mov
cld
mov
ficompl
pop
insb
dec
push
daa
imul
add
jmp
mov
fsubr
imul
pop
mov
into
stc
mov
aaa
sbb
rclb
jb
xor
pop
leave
rcll
jp
addr16
fucomip
ficomps
nop
call
and
mov
insl
xorl
arpl
xchg
sbb
jle
popf
fiaddl
mov
and
cmpsl
and
out
sarb
push
iret
cmp
test
pushf
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
mov
in
adc
and
daa
mov
mov
ljmp
push
psrlw
or
jb
loop
cltd
insb
xlat
lods
ret
cmp
adc
or
xor
xor
mov
pop
arpl
movsl
xor
arpl
fsubrl
xor
pop
jecxz
icebp
movsl
dec
inc
andb
cmp
mov
addb
sahf
ljmp
leave
bound
out
push
es
mov
pusha
xchg
ljmp
xor
cmp
clc
mov
mov
inc
adcb
or
cmp
fistps
xor
mov
fadd
lods
out
cmp
sub
and
xchg
fisttpl
fucomp
sbb
lahf
pusha
jecxz
or
leave
aad
xor
mov
sahf
mov
cmpsb
mov
das
push
dec
mov
ljmp
stc
rolb
outsl
insb
cmc
and
xor
inc
rcl
icebp
fisubl
jbe
push
stos
jmp
jnp
mov
cmp
jle
dec
loopne
sbb
int3
push
inc
push
jge
lds
lret
and
pushf
lds
lods
shlb
pop
lock
lahf
mov
push
aad
adc
push
ret
scas
aas
mov
iret
rorb
les
mov
and
sbb
mov
push
nop
pop
sahf
adc
int3
shrb
ds
adc
gs
inc
push
mov
lcall
mov
cmpsb
rcrl
jae
xchg
mov
scas
icebp
cmp
mov
icebp
in
pop
cmovns
addl
sti
divb
jle
mov
lea
outsl
push
dec
xor
mov
hlt
lret
callw
outsl
dec
mov
mov
xor
fwait
cs
cmpsl
inc
dec
stos
jle,pn
inc
dec
sub
add
loopne
jg
push
sub
hlt
sub
mov
cmpsl
adc
mov
xchg
call
xchg
xchg
das
pop
add
xchg
push
sbb
js
jns
repnz
and
into
sub
icebp
pop
jge
xchg
shll
push
inc
nop
aad
fstpt
into
loop
movsl
mov
loope
int
adc
xchg
xor
orb
sub
aas
mov
insb
push
push
pop
xor
mov
addr16
enter
pop
sub
cmpsl
adc
cmovns
popa
fcmovbe
inc
mov
sbb
sub
jge
xchg
xchg
cmpsb
cld
pusha
mov
mov
mov
enter
in
or
pop
dec
insb
loop
dec
inc
pop
lret
jl
das
rcrl
lea
mov
pop
push
lcall
sub
lock
cmp
xlat
xor
jmp
xchg
movsl
in
outsb
arpl
sbb
mov
inc
movsl
mov
cwtl
sbb
mov
mov
cld
aad
mov
mov
mov
testb
sub
push
dec
mov
pop
push
and
ret
dec
dec
cs
js
lods
or
movl
inc
mov
cmp
cmpsl
lea
lea
pop
cltd
cmc
in
mov
or
loope
push
movups
stc
and
imulb
jl
xchg
pop
xchg
icebp
mov
pop
push
mov
int3
mov
xor
stos
push
test
aad
aam
mov
mov
jns
fisttpl
lret
aam
cmp
mov
std
jnp
push
das
stos
dec
aaa
push
sbb
fmull
jle
mov
addr16
add
push
or
and
jmp
lea
je
loop
pusha
adc
pop
inc
outsl
jecxz
push
or
mov
movsb
adc
aaa
dec
mov
lock
jecxz
inc
sub
insb
mov
outsl
xchg
or
fldenv
dec
xchg
mov
mov
gs
mov
mov
inc
sbb
sbb
jns
pop
lret
push
xor
mov
loope
icebp
repnz
enter
sbb
jno
sbb
in
xor
push
leave
imul
hlt
push
sbb
xchg
popf
je
jp
movsl
adc
dec
or
ljmp
imul
out
sub
stos
mov
lock
subb
lahf
xchg
pop
in
push
test
dec
jg
dec
mov
add
cs
lock
inc
sbb
sub
sbb
fists
aam
rolb
clc
pop
mov
fscale
push
aam
stc
shlb
sbb
aam
push
push
and
std
out
mov
clc
dec
es
fildl
and
fdivrl
jne
cmp
mov
sub
outsl
inc
lret
cld
mov
jnp
testl
sbb
fsubr
jns
std
xor
jo
aas
fwait
cld
std
xchg
cs
push
dec
imul
sub
loop
popa
scas
rclb
push
push
shrb
loopne
jecxz
inc
sahf
enter
notl
les
aas
dec
testb
aad
inc
mov
dec
pop
aad
cmp
lods
out
push
add
int
sub
sub
in
mov
xor
push
ret
mov
frstor
cs
sub
xor
dec
mov
out
sub
mov
dec
dec
pop
jg
xchg
or
test
cmp
dec
push
pop
or
sub
mov
cmp
sbb
popf
inc
sbb
das
in
fidivrl
dec
pop
shl
test
loopne
fisttpl
enter
xchg
out
cmp
cmp
shll
push
sub
cmp
mov
adc
jnp
inc
out
cmp
add
andl
sbb
xor
pop
mov
adc
das
add
adc
incb
pop
psrad
jns
mov
imul
xchg
pushf
ja
jge
leave
cmc
xor
or
xor
gs
aad
jmp
inc
adc
mov
cmp
andl
das
mov
jae
addr16
inc
xchg
popl
icebp
cmp
or
mov
inc
add
scas
test
xor
or
mov
jecxz
mov
lea
jecxz
das
sbb
adc
xlat
out
jle
jo
push
pop
push
lods
pop
mov
nop
adc
dec
push
dec
xchg
dec
xor
pop
out
mov
pop
adc
mov
push
pop
xchg
or
pop
lret
push
sub
pushf
gs
xor
push
push
xchg
mov
int
fcmovne
jbe
cmp
fldcw
and
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
dec
pop
js
ficoms
mov
pmullw
repnz
sbb
inc
mov
cmpsb
bound
xchg
in
sub
popa
add
divb
fidivl
jns
dec
addr16
sub
ret
loop
jecxz
ljmp
push
mov
js
and
je
test
push
pop
ja
popf
jp
insl
or
rorl
cmp
push
dec
jmp
addb
or
addl
ja
inc
or
jge
es
sbb
loopne
addr16
int
stos
or
mov
xchg
or
inc
inc
repz
adc
jbe
or
jb
das
testl
mov
dec
xchg
mov
xor
cwtl
lock
sbb
mov
ja
xchg
out
mov
mov
cmpsl
jns
push
push
std
sbb
or
xchg
fsts
jae
outsb
bound
fstpt
icebp
xor
lret
jb
test
dec
ljmp
fldt
push
pushfw
pop
jnp
jle
sbb
out
mov
stos
in
and
push
ficoml
add
sbb
insl
push
mov
push
add
sbb
rcrl
sahf
pop
enter
andb
cmp
push
pop
sbb
mov
add
push
xlat
movsb
pmullw
ljmp
pop
addr16
imul
filds
add
pop
pop
sub
mov
jno
repnz
push
jno
push
push
push
and
sub
xchg
mov
mov
das
mov
cmp
sbb
cmp
adc
xor
mov
stos
push
repz
and
jl
sbbb
je
push
xchg
dec
popa
mov
add
movsl
orl
sti
clc
in
inc
cmpsb
sbb
repnz
xor
push
sub
imul
leave
fs
outsl
or
mov
adc
dec
sub
dec
pop
das
icebp
push
int
scas
test
inc
mov
std
ffree
in
push
sbb
rorb
dec
inc
sti
ss
pop
xchg
shr
shr
out
mov
push
adc
cmp
popf
or
jo
outsl
inc
xor
mov
push
mov
push
cld
aam
sub
push
lds
jbe
xchg
lea
movsl
testb
jmp
pop
and
fisttpl
push
int3
xchg
test
or
inc
push
sbb
mov
outsl
and
mov
pop
dec
inc
mov
popa
movsbl
mov
push
push
jmp
out
pusha
imul
cmp
xchg
std
push
cmc
mov
mov
popa
in
insl
mov
mov
cld
cs
popa
in
cmpsl
popa
cmp
jl
leave
cli
and
pop
aas
fsubrl
sbb
pusha
adc
rorb
insb
sbb
mov
cltd
repnz
push
sti
add
sbb
inc
mov
push
repnz
lret
sub
enter
cmc
inc
mov
adc
inc
mov
cmp
mov
xchg
out
jmp
cmc
or
mov
fimull
and
xchg
lret
dec
sbb
xchg
mov
stos
shrl
and
push
rorl
loope
je
cmp
stc
stos
sub
sbb
outsb
adc
push
xchg
pop
or
cmp
pop
dec
adc
push
xor
dec
xchg
pop
and
and
push
mov
adc
push
outsl
fildll
lcall
cmc
and
push
int
inc
dec
fs
ja
dec
in
jae
stos
pop
daa
inc
daa
inc
xor
sbb
adc
je
mov
pop
and
lods
dec
push
scas
cmpsb
sub
data16
pop
mov
sarl
aaa
fisubrs
pop
adc
ret
add
cmp
fnstsw
popa
or
outsb
pop
mov
push
push
movsl
mov
lret
sub
push
repnz
arpl
lds
jns
fcom
dec
popf
cld
das
call
xchg
dec
js
loop
bound
mov
mov
dec
push
mov
shrb
sub
cmp
stc
lock
cmc
xor
mov
cmp
movb
imul
sbb
pop
cs
cmp
imul
hlt
imul
push
and
pusha
mov
adc
and
fcmovb
test
pushf
mov
dec
addb
sub
sub
adc
inc
xchg
jecxz
jg
in
mov
inc
repz
cmc
mov
dec
cmp
lcall
outsl
jae
push
mov
call
dec
jl
aaa
jg
pop
hlt
pop
rcrl
outsb
sbb
xor
sti
inc
cmp
ds
pop
stos
or
mov
mov
movb
aam
mov
sub
mov
pop
insb
cwtl
and
fs
dec
lds
mov
shll
popa
inc
inc
sbb
cmp
push
stos
test
inc
imul
out
cmpsb
addr16
outsb
mov
insl
iret
jnp
lods
dec
stos
pop
mov
add
sub
push
xchg
cmpl
aam
mov
pusha
rorb
dec
jns
adc
push
sub
xchg
and
xor
cli
mov
add
jbe
ljmp
aaa
lret
cmp
sub
lods
jl
sub
mov
int3
dec
add
sbb
push
dec
jnp
imul
or
subl
mov
lahf
dec
push
and
xor
sub
xor
sahf
imul
leave
jnp
insl
fcmovnb
int
add
or
mov
sar
imul
popa
dec
rcl
xor
loop
loopne
push
jno
adcl
add
dec
pop
mov
cmpsl
mov
dec
punpcklbw
push
stos
cmp
stc
mov
mov
mov
pushf
mov
inc
xchg
or
ds
imul
jb
add
sbb
inc
movsl
push
inc
fidivrs
ljmp
dec
jmp
fstps
and
out
std
testb
outsl
fmuls
int3
js,pn
pop
mov
enterw
aas
mov
mov
adc
and
inc
adc
daa
and
sub
pop
mov
sbb
loopne
shrb
fdivl
lret
add
out
cwtl
lahf
jns
es
scas
daa
jb
xor
push
jbe
shrb
cmp
xor
sbb
xchg
mov
add
sub
inc
fbld
repz
int3
outsl
loop
jge
aam
das
dec
xchg
cmp
test
insl
xchg
and
inc
mov
enter
mov
in
add
sbb
mov
push
xchg
hlt
mov
xchg
push
push
or
jbe
daa
mov
and
into
xlat
xlat
outsb
sub
and
xchg
xor
pop
xchg
pop
or
fwait
test
test
test
in
inc
enter
cmp
addb
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
jge
xchg
inc
int3
adc
and
mov
sub
cmp
rcrl
push
and
repz
add
imul
fildl
sbb
loope
int
into
cmp
imul
sub
sahf
imul
pop
fnstsw
mov
inc
cmp
mov
sahf
sub
cmove
fsubrl
dec
dec
lds
inc
add
pop
pusha
inc
int
or
dec
fiaddl
and
out
insb
fsubs
test
test
jo
cmp
lds
mov
xor
add
scas
xor
pop
aaa
sub
jno
rclb
add
cmp
push
mov
sbb
out
xor
jne
pop
cs
add
cmc
push
ljmp
sti
sbb
mov
cmpsl
leave
and
pop
out
mov
mov
sub
outsl
jg
add
setp
in
pop
jae
mov
aam
pop
adc
xor
ljmp
push
mov
idivl
adc
cmp
mov
cmovno
xchg
mov
xchg
inc
or
pop
cmp
and
sbb
fistl
outsb
xchg
movb
imul
xchg
sti
in
in
fwait
dec
stos
mov
loop
push
mov
pop
sbb
or
cld
incl
fsubl
xchg
push
shrl
repnz
push
mov
sub
sub
mov
in
jne
push
aad
insl
out
add
les
sbb
arpl
call
xchg
pop
pop
mov
push
cmc
test
add
jl
ss
popf
cmpsb
or
push
push
je
sub
adc
mov
inc
mov
lock
ror
ds
pop
lcall
lret
dec
insl
inc
sub
ljmp
pop
inc
add
or
lahf
fidivs
jns
in
data16
cmp
or
xchg
pop
lds
data16
jbe
adc
sub
or
sub
fldt
out
fistl
sbb
popf
mov
ror
in
push
inc
outsb
pushf
pop
cmp
das
lret
fs
clc
dec
shrl
fwait
or
bound
rcrl
and
dec
pop
pop
mov
mov
hlt
stos
fsubl
test
rol
ss
sahf
sbb
xor
fsubrl
int
xor
push
ret
das
cmp
fsubrs
lods
mov
sarb
jmp
fsubl
je
mov
insl
in
push
loopne
faddl
and
stos
mov
xchg
or
add
mov
add
xorl
mov
and
xor
adc
xchg
adcb
out
stos
loopne
pusha
popa
jae
sbb
fnstsw
out
notb
ja
push
mov
lret
loop
sbb
mov
inc
push
cwtl
jl
test
test
in
or
shlb
jl
mov
jns
decb
stos
aas
inc
xor
mov
mov
sbb
hlt
mov
sbb
scas
lods
sub
out
push
je
js
sbb
lahf
xor
int
push
cli
xor
sub
mov
mov
pop
les
loopne
jmp
lods
popa
sbb
fldenv
cmp
sub
xchg
jg
into
pop
dec
cmc
stc
cmp
je
adc
mov
add
loop
sub
mov
cmp
xchg
jb
xchg
sub
sbb
xor
xchg
inc
aaa
sbb
repz
bound
lahf
lahf
pop
lcall
stc
popf
decl
pop
imul
pop
loop
mov
jle
add
ret
sub
mov
fld
cmpsb
mov
test
xchg
das
cmpsb
sub
lods
addb
imul
testb
mov
jl
cmp
in
out
rorb
cmp
pop
push
mov
daa
imul
mov
push
aas
loopne
shrl
loop
pop
and
dec
cltd
mov
repnz
icebp
jae
adc
bound
shr
inc
add
sti
or
add
out
push
dec
movsl
add
int
mov
loop
cmp
pop
ffreep
vmptrst
mov
stos
cli
rcrl
push
push
lock
xchg
pop
inc
mov
sbb
cmc
into
leave
insb
jnp
sti
int
mov
mov
jns
mov
or
lret
pop
fldl
insl
xor
jns
or
lds
mov
xor
mov
dec
xchg
push
xchg
mov
mov
aad
mov
aaa
xchg
sbb
mov
pop
jecxz
orl
push
loope
xchg
mov
fstp
pop
scas
nop
lcall
pop
lods
push
pop
dec
jbe
clc
iret
dec
loope
ret
push
inc
stc
and
xor
xor
adc
insb
jns
dec
fnsave
fsubr
inc
mov
mov
cltd
sbb
aam
add
addl
add
pop
pop
add
sbb
mov
movb
lods
mov
sub
cld
hlt
dec
call
stc
cmp
popa
scas
fcoml
mov
sub
adc
jecxz
test
shrl
push
insb
stc
mov
dec
push
sub
xor
in
cmp
sbb
sahf
cmp
repz
lret
sub
cmpsl
pop
and
sbb
pop
int3
rcrb
jmp
imulb
cmp
fstpl
sub
sti
push
out
out
and
cmp
rclb
xchg
push
cmpsb
sub
hlt
std
jne
cmp
call
sti
je
cmp
xlat
out
xchg
pop
cmp
movsl
daa
cmp
cmpsl
mov
test
pop
cmc
shlb
push
sub
cli
js
push
jge
ljmp
xchg
lret
lea
xchg
push
inc
cld
aaa
pop
and
xor
idivb
sbb
dec
imul
dec
mov
roll
orl
jns
pop
xchg
inc
loop
sub
jge
adc
or
xchg
push
mov
leave
inc
in
add
sbb
inc
dec
incb
int3
inc
add
faddl
outsl
lea
mov
es
and
nop
and
xchg
dec
addr16
adcb
subb
jle
dec
xchg
xor
jle
and
test
insl
stos
leave
je
rcrb
xchg
mov
xorb
gs
push
push
data16
xchg
mov
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
nopl
mov
lods
fnstsw
mov
mov
sbb
mov
rcrb
sub
xchg
jbe
adc
scas
xchg
xchg
jp
insl
mov
mov
orb
fwait
mov
insl
dec
mov
arpl
cmp
pop
sub
pop
rorl
xor
jbe
jb
add
jns
mov
xchg
in
mov
mov
out
in
aas
mov
mov
call
mov
cmp
test
push
sbb
cmpb
int
pop
repz
nop
loop
pop
dec
mov
lahf
inc
dec
aam
xor
fidivrs
iret
stos
jo
sub
xchg
repnz
je
lea
cmp
push
ja
ret
cmp
and
movsl
fidivs
gs
xchg
std
mov
pusha
adc
sarb
shll
sbb
hlt
jg
arpl
pop
cltd
outsb
sub
or
inc
mov
rcrl
adc
inc
sahf
test
push
hlt
mov
cmp
inc
loop,pt
cmpsl
jns
xor
mov
jnp
lret
sbb
aaa
adc
lods
lea
mov
and
ljmpw
mov
sbb
decl
cmp
in
or
in
aas
ljmp
jecxz
js
in
adc
lds
jge
fwait
addr16
arpl
int
icebp
xor
pop
icebp
jmp
mov
out
jmp
aad
into
out
in
pusha
shrb
add
xlat
lcall
ja
xor
imul
sub
pop
out
out
adc
les
adc
inc
mov
pop
mov
popa
fstpt
aas
dec
enter
xchg
loop
int3
cmp
push
mov
imul
pop
aam
or
jne
sbb
cmp
mov
push
dec
inc
cmp
jo
mov
xor
ljmp
in
and
cmpsl
jle
or
daa
adc
movsl
xor
ljmp
jae
dec
xor
imul
cmpl
dec
lods
or
test
into
mov
mov
loop
and
jecxz
mov
aaa
leave
outsb
lahf
js
dec
fildll
mov
int
mov
dec
mov
shll
test
mov
push
push
sub
pop
jae
repz
aad
lock
dec
dec
cli
adc
add
or
fwait
aad
sti
mov
fisttps
mov
pusha
cltd
adc
or
cmp
inc
ud2
stos
lds
int3
or
xchg
dec
outsl
scas
movsl
mov
fcompl
sbb
add
shl
jp
iret
mov
addr16
inc
cmp
cwtl
scas
shrb
cmp
incl
mov
mov
fisttpl
aad
stos
filds
inc
cwtl
dec
adc
aam
cmp
mov
daa
jns
and
inc
push
mov
pop
pop
loope
out
fildll
dec
ja
fimuls
dec
aaa
pop
fldl
xchg
sub
fistps
mov
std
cld
incb
adc
sub
ja
cmp
out
mov
add
push
outsl
pop
ds
and
fwait
in
rcll
pop
sub
pop
inc
mov
popa
loope
mov
test
mov
cmp
adcl
fs
idivb
dec
icebp
nop
test
jns
jp
arpl
pushf
and
stos
sub
mov
xchg
dec
xchg
sbb
cmp
pop
mov
in
fisubrl
mov
add
lcall
xchg
sbb
jge
lds
out
daa
jecxz
add
enter
scas
cltd
es
rol
cmp
adc
jg
xor
je
mov
xor
pop
leave
notb
jno
stc
jb
cmp
mov
daa
cli
das
mov
sbb
jne
dec
adc
inc
inc
push
xchg
sub
lds
mov
ljmp
dec
jb
push
wbinvd
pop
movsb
adc
cmp
add
test
xchg
test
mov
fisttps
lcall
add
shll
jg
inc
leave
adc
fst
lret
push
xchg
xchg
mov
sarl
mov
out
sub
sub
mov
sbb
xchg
rolb
test
mov
shl
repz
xlat
sarb
xor
or
sahf
les
cmp
xchg
mov
pop
repnz
pop
push
mov
mov
in
inc
mov
lds
push
sbb
push
adc
jmp
xor
inc
dec
inc
or
ds
push
pop
mov
mov
and
fildl
mov
ja
cmc
movsb
sbb
cmp
notl
sub
popa
sbb
loope
sbb
add
outsl
in
cmpsb
pop
ljmp
mov
or
movsb
dec
inc
xor
sbb
in
jns
mov
pop
pop
and
or
inc
loopne
fstl
pusha
sub
sub
mov
jecxz
push
test
sub
dec
movsb
in
mov
mov
sub
fcoms
or
call
cmp
dec
ds
and
xlat
std
dec
sub
enter
fisubrs
push
xor
stos
mov
icebp
arpl
sbb
shl
xor
fldcw
cmp
movb
mov
ficoms
repnz
fildl
sub
aaa
xor
pop
scas
xor
push
lcall
dec
std
inc
mov
xchg
jecxz
pop
mov
mov
mov
aas
add
push
cwtl
les
or
movsb
sarl
fstl
jae
cld
sub
or
xchg
mov
sahf
aaa
xlat
loope
je
cmp
sbbl
dec
xchg
xlat
aam
sbb
mov
dec
mov
sti
xor
daa
pusha
lret
sbbl
and
xchg
cmc
jle
push
pop
movsl
xor
mov
pop
sbb
add
sti
insl
test
hlt
pop
pop
push
sar
cmp
stos
jbe
stc
jb
iret
in
cmp
dec
pop
cmpsl
xor
pop
pop
sub
push
lods
adcl
in
repnz
jl
pop
cmp
lods
dec
pop
stos
std
adcl
or
dec
pop
repz
sub
inc
shll
cmpl
mov
fidivl
or
jge
add
cwtl
sub
pushf
rorl
call
add
out
inc
js
inc
xchg
mov
push
xor
cld
jle
inc
test
add
xlat
add
lds
adc
add
jmp
jne
add
subl
xchg
jbe
les
and
fidivl
outsl
test
ljmp
in
xchg
popa
sub
jo
cmp
ret
adc
mov
pop
push
aaa
pop
xchg
xor
push
out
lods
mov
movsb
aad
movsl
push
ret
inc
addb
mov
popa
mov
pop
push
scas
sub
inc
mov
jge
inc
add
out
hlt
jns
mov
imul
and
xchg
test
es
ret
add
popf
cmp
jno
lret
dec
jo
adc
clc
fxch
adc
xchg
jno
lret
call
mov
les
aaa
jae
movsl
ret
sbb
inc
sub
es
mov
cwtl
pushw
xor
fs
mov
push
rolb
dec
xchg
mov
lahf
mov
pop
jns
mov
pop
dec
add
jg
out
jp
cmpsb
lahf
xor
in
sub
fistl
rol
mov
das
and
int
pop
adc
cmc
pop
sarl
sbb
je
sbb
adc
mov
mov
inc
lods
and
scas
lahf
nop
pusha
sub
enter
pop
sarb
jg
xchg
cli
ret
xchg
cmp
ret
mov
aas
bound
inc
insb
mov
pop
fsubs
or
xchg
loopne
add
fidivl
arpl
jp
xchg
out
aas
push
xchg
cwtl
add
inc
mov
add
in
icebp
fstpl
popf
lods
ret
bound
jmp
icebp
pusha
je
testb
or
adc
cmpsl
ret
adc
cmp
mov
pop
push
mov
pop
fwait
mov
mov
loope
inc
cmpsl
inc
add
movsb
mov
sbbl
cmp
mov
test
jae
sbb
lock
xor
out
cwtl
imul
dec
cmp
pop
mov
jl
sbb
sti
into
dec
pop
test
cmpsb
ror
xchg
mov
sub
mov
push
aad
sbb
jbe
pop
clc
sub
sbb
dec
jecxz
cmp
out
adc
pop
lods
xchg
fwait
imul
mov
lds
sub
aaa
pop
add
out
mov
pushf
inc
jp
ljmp
adc
xchg
bound
mov
mov
imul
lahf
dec
addr16
pop
in
out
insb
push
xchg
jno
sbb
mov
push
lea
cmp
cltd
or
cmp
rcll
clc
dec
adc
cltd
ret
mov
xlat
mov
sahf
mov
mov
cmp
out
sahf
in
cwtl
int3
xor
mov
repz
cmp
push
or
clc
pushf
popf
mov
cltd
and
mov
fcoml
scas
adc
cmp
scas
mov
stos
pop
shrl
scas
mov
pop
rcll
ja
pop
jmp
imul
pop
mov
jle
push
push
pop
leave
jno
jecxz
cmp
enter
pop
mov
bound
loopne
vpor
mov
mov
fbstp
and
scas
dec
lret
cmp
push
mov
inc
rcl
xchg
orb
out
fimuls
push
xor
add
ret
pop
pop
repnz
mov
out
or
lods
out
ljmp
fs
repnz
mov
adc
mov
mov
xchg
sub
pop
push
xchg
jne
or
out
popa
into
xchg
pop
xchg
ficompl
lods
push
cmp
shll
mov
sbb
mov
xchg
cld
shlb
mov
lods
mov
mov
in
adc
iret
ret
mov
mov
dec
rcrl
in
gs
jae
call
mov
cmp
adc
mov
out
or
push
dec
mov
sbb
adc
dec
jbe
std
ljmp
jl
xchg
test
mov
pop
jae
jmp
push
into
xor
lea
jl
pop
pop
outsl
movsb
and
daa
test
cmpsl
shlb
mov
inc
aad
les
inc
inc
jg
xchg
rolb
jae
fmulp
shrl
or
cwtl
mov
out
fwait
insb
xor
mov
or
lds
lds
xor
adc
mov
and
icebp
movsb
jge
js
call
inc
rorb
cmp
adc
mov
and
inc
ret
xchg
and
xor
pop
ds
pop
cwtl
cmp
pop
orl
jne
les
into
sti
outsb
test
jl
rol
fidivs
lds
popa
dec
pop
mov
test
sbb
lcall
fwait
in
gs
rcr
jmp
mov
out
xchg
gs
dec
mov
or
fcompl
mov
sbb
cmpsl
popf
mov
pushf
sbbb
mov
sbb
das
pop
dec
rcll
les
cmp
gs
push
mov
lahf
movsl
xor
subb
push
push
cmp
mov
add
icebp
pop
add
sub
jae
in
mov
push
pop
mov
out
adc
minps
pop
popf
inc
shlb
sbb
in
jle
and
notl
stc
jno
lret
cmc
int
movsb
int
mov
or
add
leave
in
sub
shll
sbb
insb
mov
push
push
inc
push
add
pop
test
push
and
cmp
insb
idiv
test
push
adc
fistpll
sub
lret
jno
call
or
xorb
clc
int
aas
mov
dec
push
sbb
repnz
loope
lahf
ror
inc
fbld
mov
cltd
imul
mov
xor
movsl
jne
jnp
lock
xchg
fwait
ja
stc
mov
mov
rep
xchg
cmp
adc
cmp
pushf
xchg
ficomps
idivl
inc
imul
inc
xor
inc
lods
add
rcl
aad
jle
cmp
stc
js
scas
push
mov
mov
imul
ds
cmc
mov
xchg
adc
and
cmp
outsb
test
xchg
test
mov
lahf
lret
pop
std
imul
test
mov
in
movsl
arpl
hlt
mov
in
adc
mov
push
test
lret
adc
sub
faddl
ret
or
aam
inc
popa
loope
ss
jmp
jp
pop
jbe
lods
xor
fdivr
aas
xor
add
cmpsb
outsl
int
push
xchg
lahf
leave
add
ret
fisttpll
dec
or
pop
xchg
scas
push
rolb
inc
in
outsl
cltd
xchg
xor
xchg
sub
mov
sub
pop
in
mov
ja
jecxz
flds
push
cmp
clc
cmp
and
cmpsl
sub
insb
jl
jp
jno
inc
lcall
mov
loopne
sub
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
jle
fimull
mov
mov
bsr
callw
pop
adc
divl
mov
jl
xor
mov
add
fisubrl
inc
rol
mov
jns
stc
adc
adc
cmp
mov
mov
xor
sbb
cld
or
inc
push
pop
repz
push
addb
loop
fcmovne
or
push
cmpsl
cltd
mov
cmc
adc
aam
adc
sbb
movsl
sbb
out
scas
or
lcall
std
mov
or
out
inc
repz
push
push
in
bound
ljmp
xor
mov
adc
sbb
pop
mov
xlat
dec
mov
insl
je
outsb
mov
inc
mov
xchg
cmpl
dec
data16
movsb
or
dec
inc
cwtl
sbb
mov
out
sarl
dec
sbb
leave
int
dec
xor
repz
push
les
dec
pop
fwait
das
je
mov
icebp
lods
mov
jne
icebp
fcoms
xchg
rcrb
cmp
and
or
les
ds
mov
dec
adc
pusha
lret
jmp
jo
mov
daa
push
cmp
nop
or
repnz
cmpsl
pop
xchg
add
outsl
mov
ret
es
sbb
dec
js
mov
push
adc
add
mov
mov
call
push
mov
je
push
lahf
mov
je
jbe
hlt
jb
pushf
dec
in
in
adc
lds
inc
cmp
outsl
mov
insb
pop
or
jb
sbb
sbb
add
push
mov
frstor
or
and
xor
pushf
sub
xor
in
push
les
mov
pop
and
and
jg,pn
subl
jo
pop
add
jl
dec
lods
xchg
popa
cmp
dec
jne
inc
mov
dec
and
adc
mov
out
dec
je
sbb
mov
inc
xor
sarb
mov
lds
out
into
cli
dec
cmpb
outsl
subb
nop
dec
loop
add
fisttpll
jbe
in
std
cld
jnp
scas
lds
in
in
std
jno
lods
les
xor
test
sub
jge
mov
repnz
xchg
pop
mov
push
pusha
mov
lds
sbb
popa
and
adc
lret
dec
lret
adc
xchg
cmp
cmpsb
dec
mov
xor
mov
cmp
cs
add
push
nop
mov
neg
push
sahf
jmp
repz
adc
int
in
and
push
repnz
shrl
mov
and
sub
mov
aam
stc
lods
mov
push
push
or
jne
mov
add
and
mov
add
mov
daa
ss
jp
std
test
or
pop
push
or
test
fadd
int3
push
hlt
pop
loop
mov
sti
pop
sbb
xor
ss
push
mov
mov
pop
pop
push
adc
stos
jb
mov
std
push
pop
jne
xchg
xchg
mov
aam
lret
jbe
cmc
jle
cwtl
scas
pop
mov
inc
push
ss
cmpsl
outsl
push
jns
mov
fldl
lret
adc
mov
or
cmp
dec
fcoml
adcl
mov
nop
mov
dec
shlb
jmp
and
in
dec
gs
xor
jl
subl
pop
dec
inc
pop
pop
sub
sbbb
out
ja
mov
arpl
std
dec
inc
and
outsl
lock
mov
pop
xchg
addr16
mov
mov
lods
sbb
or
lcall
addl
int3
outsb
nop
sbb
fimuls
int
in
mov
mov
cmp
shrl
dec
pop
lret
dec
push
xor
and
lods
jp
stc
es
or
aaa
and
dec
and
lock
arpl
jbe
push
adc
sti
push
jno
and
popf
mov
cmp
pop
into
jne
je
ret
movsl
xchg
cwtl
xchg
test
cltd
fists
or
gs
pop
shll
es
mov
cli
icebp
cltd
inc
xchg
and
loop
inc
imul
or
notl
in
ret
sub
jb
sbb
repnz
out
or
xor
lret
fbld
mov
sbb
mov
mov
clc
jge
cmc
dec
cmp
push
sub
jb
loope
sahf
sub
jae
daa
fcmovu
movsl
cwtl
pop
push
das
std
fsubs
sub
test
xor
cli
jb
and
fwait
jl
fcomi
jno
ja
int
jmp
outsl
out
mov
or
mov
ljmp
data16
rorl
mov
jno
or
and
inc
fidivl
mov
in
jae
or
add
enter
cmp
sahf
ja
aaa
jo
ds
test
lea
mov
mov
xchg
lock
mov
mov
mov
cmc
arpl
insb
push
sbb
insb
cmp
or
orl
ds
xchg
dec
mov
xchg
rolb
popf
cmpsb
ret
sbb
ljmp
pop
aaa
fisttpll
mov
out
pop
cmpb
adc
push
pop
lea
rcrb
arpl
insl
jnp
mov
sub
sub
daa
cmp
fmuls
mov
movsl
adc
into
in
xor
or
cwtl
sub
mov
lahf
and
add
hlt
mov
mov
jnp
ja
push
fwait
pop
scas
inc
inc
push
lods
shrl
or
out
inc
adc
inc
dec
mov
cmp
decb
shlb
mov
sahf
test
aam
fs
push
test
xor
xchg
cmp
loope
mov
lret
xor
das
jnp
inc
decl
xchg
js
icebp
stos
inc
fildl
gs
je
cmp
xchg
dec
and
mov
pop
pop
clc
stc
pushl
pop
sbb
mov
mov
and
cmp
xor
lret
mov
mov
sti
insb
dec
pusha
shll
sub
out
out
jle
jp
mov
jl
inc
mov
insl
xor
scas
test
mov
int
ljmp
cmp
adc
fdivp
mov
fisttpll
das
jne
jo
add
adc
outsl
xchg
dec
pop
mov
xor
mov
int
mov
push
stos
push
sbb
out
cmp
xchg
jo
push
cmp
mov
movsl
adc
adc
in
gs
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
mov
xchg
int3
push
push
sbb
ljmp
loopne
sub
fadds
xor
lret
insb
mov
inc
sub
fs
inc
lcall
or
out
imul
les
outsl
scas
inc
fs
add
jmp
incb
adc
js
add
push
test
push
sbb
sub
shl
in
test
adc
repnz
jae
adc
loop
xchg
xchg
push
xchg
insb
cmp
loope
adcl
dec
iretw
mov
inc
jo
mov
xchg
add
rorl
pop
inc
pop
lds
movsb
sahf
cmp
loope
mov
xchg
addl
jmp
addb
xchg
or
cmpsb
into
test
jp
cwtl
cli
and
mov
mov
cs
bound
add
dec
inc
push
inc
rcl
jae
ret
icebp
test
cmp
push
dec
pop
cmpsl
out
cmpsl
std
repz
dec
neg
push
popf
pop
push
fsubrs
test
sbb
push
leave
aam
xchg
jle
aam
cmc
rcrb
push
or
scas
lods
push
sahf
cmp
xorl
rcrl
add
aaa
in
fidivrs
int
push
or
nop
stos
jbe
imul
mov
xor
mov
stos
cmp
outsb
xchg
nop
cwtl
xchg
std
sub
gs
ljmp
lock
int
dec
push
push
sbb
sbb
jb
add
jbe
push
pop
cmovle
jnp
pushf
outsb
mov
cmp
dec
fisttps
int3
xor
enter
adc
scas
aam
or
mov
sbb
fiadds
movsb
xor
mov
adc
push
mov
idivb
adc
push
mov
xor
sbb
out
loope
aam
enter
push
insb
xchg
aaa
stos
fcompl
jmp
push
cwtl
test
cwtl
pop
je
stc
and
xor
cld
vpinsrw
and
mov
push
sub
decl
jge
xor
in
loop
movsb
pop
jmp
cmp
inc
jl
mov
arpl
dec
sbb
mov
ljmp
out
aaa
sbb
sub
push
cmp
adc
rcr
and
fs
xchg
adc
push
sahf
ds
cmp
aaa
mov
cmp
addr16
inc
mov
jp
cltd
adc
out
cmpsb
fs
pop
lods
pop
cmp
lret
pop
mov
pop
sub
or
iret
xor
dec
push
sbb
stc
sbb
push
jne
mov
lcall
xchg
cmp
mov
stos
pushf
dec
imul
lea
mov
cwtl
andb
adc
xchg
pop
leave
outsb
pop
xchg
jno
lahf
xchg
notl
clc
test
push
xchg
sub
xchg
xchg
xor
imul
outsb
lcall
cmc
sbb
dec
ret
idivl
pop
sbb
mov
out
mov
arpl
inc
rcrb
movsb
rol
sbbl
xor
jg
movsl
xor
fcom
sbb
add
jge
sti
adc
push
xchg
mull
test
and
pusha
lds
mov
adc
add
aaa
mov
outsl
xchg
mov
fildll
mov
enter
pushl
inc
js
push
and
push
inc
mov
es
ds
arpl
daa
aad
lock
out
mov
decb
pushf
ret
mov
dec
fstpt
lods
jbe
jge
out
inc
adc
push
test
xor
lret
insl
or
das
inc
cs
adc
loop
jl
addr16
sub
cld
cmp
out
cmpsl
pop
out
adc
sub
add
sbb
popa
push
rcll
sbb
ds
sahf
and
push
mov
leave
pop
enter
xor
push
sub
jne
subb
lods
mov
push
jo
outsb
mov
es
aas
xchg
push
xor
std
inc
mov
cmp
filds
cmp
sub
test
sbb
push
pop
push
aas
test
stc
test
das
sub
nop
add
or
and
sbb
dec
pop
imul
lods
mov
pop
mov
cmp
xchg
xorl
adc
sbb
lret
sub
jns
mov
jae
xor
mov
jle
aaa
pop
pop
outsb
push
add
int3
jbe
iret
adc
sbb
lahf
xchg
fildl
or
mov
adc
mov
xor
mov
mov
xorl
add
mov
test
inc
mov
imul
push
pop
dec
dec
addb
xchg
decb
movl
mov
fwait
std
mov
or
adc
rcrl
push
test
in
adc
inc
xchg
pop
fwait
inc
gs
push
mov
out
add
cs
popa
stos
sub
xchg
mov
xlat
adc
xor
mov
push
das
notl
cmc
sub
stos
out
std
jbe
adc
and
shl
jl
sbb
mov
test
jnp
sbb
jo
jbe
sbb
jno,pt
popf
push
sbb
mov
cwtl
mov
dec
ret
call
mov
pop
kmovw
fsubrs
popa
or
mov
pop
scas
xchg
fisttps
push
pop
push
scas
pop
nop
in
jb
ret
xchg
sub
mov
pop
sarb
les
push
leave
adc
or
hlt
push
mov
loope
icebp
cld
fsubp
pop
fnstcw
lret
imul
mov
andb
std
ret
orb
push
shll
jmp
ret
inc
rcr
out
jmp
jnp
cmp
mov
xchg
arpl
fisubl
adc
cld
test
jno
push
fcompl
dec
and
dec
cli
sub
fcos
jp
cmc
sahf
dec
adc
addr16
dec
jns
aad
jne
jno
mov
cmp
inc
lea
jmp
bound
jnp
pop
fdivrp
shlb
psubw
inc
rcrb
add
push
lcall
rclb
pushf
cmp
stc
xor
dec
or
test
pop
loopne
clc
jmp
mov
dec
fldenv
jle
cltd
outsb
jno
movsb
outsl
loope
insl
dec
out
sahf
ret
inc
mov
into
and
test
sbbl
jg
loope
imul
add
call
or
xlat
out
sti
pop
inc
movsb
jno
shll
test
into
sti
stos
ss
dec
flds
xchg
aaa
push
ljmp
not
jae
lea
fcoms
jmp
sbb
push
adc
xchg
int3
xchg
add
cwtl
nop
adc
and
fcomp
adc
adc
mov
lods
xor
mov
inc
insl
or
stc
inc
sub
jp
scas
mov
push
cmpsl
lret
shrd
mov
mov
lcall
sahf
in
ret
sti
out
movsl
scas
xor
outsl
mov
push
aas
in
movsl
sub
int3
pop
fs
cld
xchg
adc
stc
sahf
popa
repnz
daa
aas
addr16
jle
test
or
jo
mov
sbb
xchg
je
test
sbb
inc
xor
xlat
mov
imul
pushf
aas
imul
push
sub
pop
cmp
add
imul
stc
rclb
xchg
pop
pop
aas
sbb
jl
das
xor
mov
mov
jnp
cmpsb
shll
push
orl
mov
jmp
pop
jecxz
ljmp
iret
mov
ss
cmp
fdivl
dec
out
pushf
adc
jl
ds
cmp
inc
dec
sbb
pop
dec
aas
scas
icebp
insb
and
jo
pop
cmp
sbb
jp
loope
xchg
mov
std
push
sbb
jmp
inc
daa
outsb
xor
ret
pop
mov
stos
add
and
lods
in
dec
pop
in
lods
and
jae
mov
rorb
ss
ret
insl
lcall
and
outsb
js
mov
and
ficompl
add
bound
mov
dec
or
push
dec
jecxz
insl
mov
xor
dec
sub
pop
hlt
mov
mov
lods
sti
dec
test
iret
out
sbb
mov
sbb
mov
imulb
lcall
mov
nop
push
sub
dec
push
pop
inc
imul
jmp
addr16
or
jo
pop
popa
or
inc
push
std
add
aam
pusha
aas
test
sbb
xchg
stos
into
and
nop
jmp
cmp
lret
enter
ret
mov
lret
dec
xchg
add
ds
adc
add
mov
or
sbb
cli
clc
lea
inc
iret
cmp
inc
cli
addl
mov
mov
stc
adc
paddsw
and
cmpb
int3
decl
aaa
inc
jmp
add
int3
insl
mov
fistpl
stc
out
fstp
movsl
outsl
adc
aaa
mov
cltd
sahf
cmp
mov
sti
xor
insb
sbb
pop
pop
pusha
mov
pop
loopne
sub
sbb
mov
lcall
gs
xchg
imul
pop
lcall
comiss
jp
js
xchg
sbb
adc
xchg
inc
into
push
add
icebp
pop
in
xchg
jl
out
jmp
repz
pop
or
nop
and
mov
xlat
hlt
lret
adc
loopne
and
push
jl
roll
sbb
fmuls
jno
test
loop
xchg
leave
mov
movsb
jl
lahf
sub
cmp
push
push
push
pop
pop
xchg
mov
adc
mov
mov
aad
xchg
push
xlat
ret
jg
test
insb
out
sub
adc
or
mov
cmp
push
xchg
mov
ficoms
in
xchg
push
cld
loope
and
mov
popa
popa
mov
jle
nop
add
push
jno
and
repz
sbb
repz
movsl
repz
mov
repnz
push
inc
repnz
jmp
cltd
cs
cmp
lods
inc
sub
bound
stc
mov
pop
sub
pop
jle
shll
nop
aad
sub
mov
int3
push
and
inc
inc
cs
inc
dec
pop
in
es
dec
lret
adc
out
into
andl
loope
flds
and
stos
dec
add
xchg
mov
lahf
in
in
leave
and
mov
cmp
aad
cwtl
orb
sahf
cmp
push
into
insb
rorb
mov
lahf
popa
jg
jle
negl
jo
mov
lret
call
push
jl
push
cmpb
xchg
push
shrb
push
loop
add
mov
or
int
or
daa
sbb
daa
scas
insb
dec
cli
sub
cmp
jg
out
out
mov
js
lds
ljmp
loope
mov
mov
sbbb
popa
int3
xor
lret
and
pop
out
or
adc
bound
mov
aam
jno
pop
lcall
addl
shll
and
shrl
add
adc
cmpsl
stos
int3
andb
or
scas
add
ljmp
and
test
call
mov
bound
rorb
push
sti
mov
push
xchg
aam
add
mov
mov
mov
xor
mov
bound
push
insl
daa
push
pop
shll
dec
repnz
pop
cli
push
push
lret
pop
cld
sar
jno
sbb
push
and
addr16
xlat
inc
jo
xor
jmp
in
jb,pt
push
mov
sbb
jns
and
adcb
ds
sub
mov
and
dec
adc
mov
dec
test
xlat
jne
or
lods
aaa
out
rolb
ja
sub
cmp
lock
or
arpl
cmp
mov
dec
ss
jae
idivl
cmp
pop
mov
sbbl
into
lock
mov
xchg
leave
out
jecxz
adc
or
cmp
aas
cmc
dec
mov
push
mov
xchg
or
ja
cmp
leave
push
add
add
sub
fs
and
fdivp
test
inc
fidivl
es
incl
xor
xchg
jbe
mov
sbb
inc
fisubrl
nop
bound
cmc
cmp
fstpt
pusha
mov
push
mov
add
scas
divb
adc
push
scas
sub
cmp
es
pop
lea
push
jne
mov
sub
mov
in
jbe
addb
pusha
xchg
and
add
int
mov
sbb
sub
in
out
adcb
push
xchg
int
imul
scas
push
push
in
cs
mov
mov
mov
cltd
outsb
repnz
mov
dec
inc
sti
int3
jmp
dec
mov
and
std
pop
jae
imul
enter
sbb
mov
fimull
call
cmp
dec
cmpsl
scas
jo
fs
dec
pop
dec
lods
subl
lods
nop
out
adc
out
aad
add
dec
leave
push
movsb
or
scas
mov
and
mov
lods
pushf
xchg
push
and
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
popf
orb
addl
stc
or
mov
vpmaxub
cmpsb
xchg
xor
call
sub
gs
xchg
popa
xchg
dec
inc
lea
fstl
sbb
outsb
pop
sbb
into
aam
outsb
imul
mov
sbbb
mov
mov
out
out
mov
int
add
and
das
pop
jns
in
lock
cmc
iret
ljmp
cmp
and
mov
clc
shl
mov
movsb
mulb
sar
mov
fistl
stos
rcrl
pop
xor
inc
gs
inc
out
outsb
fstpt
xor
cmp
dec
sbb
lock
sarb
pop
inc
call
inc
sbb
movsl
pop
in
xor
outsl
mov
aad
jle
jb
mov
and
int3
fnop
fs
xchg
ret
mov
aaa
cltd
js
cwtl
or
lahf
push
sahf
out
xchg
push
scas
rorb
and
dec
loope
dec
sub
and
mov
dec
adc
add
push
shlb
or
bound
flds
mov
or
push
cwtl
sbb
add
sarl
adc
mov
sub
aaa
inc
push
inc
pop
mov
pop
std
movsb
xchg
test
pop
stos
mov
out
lea
xor
lret
dec
repnz
pop
lcall
xchg
push
mov
fwait
and
cli
inc
xor
adc
or
push
or
push
xorl
pop
mov
mov
pop
cmpsl
lret
jnp
push
jbe
movsb
xchg
mov
cwtl
sbb
pop
sahf
xor
adc
idivl
std
es
stos
xchg
pop
cmp
fiadds
loope
rcl
outsb
xlat
filds
loopne
mov
stos
or
pop
jae
mov
xlat
lret
sbb
add
mov
xlat
add
scas
lahf
jne
lcall
push
lea
jnp
orl
es
adc
gs
clc
xchg
loopne
pop
stos
stos
loope
roll
fildll
out
cmpsl
jns
test
cmc
sub
xor
xchg
insb
dec
jno
xor
mov
aam
leave
jae
jge
fidivrs
dec
jle
adc
sub
ret
mov
incl
sarb
sahf
cmpsb
jnp
cmc
aaa
add
aas
inc
and
rclb
sub
xchg
popa
sbb
sub
and
popa
jae
js
scas
std
lds
jbe
cmpsb
xchg
in
push
movsb
pusha
cld
push
stos
in
mov
fildl
dec
sub
add
mov
xchg
xchg
pop
shl
dec
pop
cmpsl
fstpl
gs
fadd
in
mov
sbb
pop
stos
mov
iret
jnp
test
jae
jl
fadds
push
fistpl
in
mov
cltd
sti
add
outsl
inc
cmpsb
lock
pop
sub
sti
test
ja
pop
aam
decb
dec
xor
jns
test
lods
sbb
cmpsw
lret
rcll
leave
lods
ret
xchg
inc
outsl
mov
out
dec
xchg
ficoms
gs
sub
adc
sub
sub
push
js
cmp
rcl
cwtl
xchg
adc
inc
adc
sbb
hlt
dec
sub
xchg
cmpsl
jns
gs
sbb
adcb
dec
fdivs
mov
sub
xchg
cmpsb
jb
inc
xlat
stos
testl
xor
cld
fs
xchg
cmc
popa
inc
sbb
addr16
dec
push
fsubrl
xadd
mov
cmp
mov
lret
scas
mov
lds
insb
bound
scas
and
shl
pop
adc
push
dec
adc
leave
cltd
frstor
pop
popa
hlt
test
adc
test
movsb
cmp
mov
push
orl
push
cmp
lds
sub
faddl
and
cwtl
inc
sub
mov
testb
int3
push
incl
sbb
stos
testb
test
or
aam
movsb
xchg
and
aas
outsb
cmp
fadd
hlt
push
scas
sbb
xchg
push
xchg
lret
mov
xchg
push
stos
icebp
mov
sbb
incb
pop
fbld
jb
sbb
dec
inc
jb
xchg
sti
js
xor
xchg
lds
xchg
cmpsl
mov
or
int
sub
inc
mov
mov
divb
jecxz
mov
sub
pop
fadd
int3
sbb
enter
or
in
or
roll
and
mov
push
xor
adc
mull
push
lea
ret
or
jae
in
sbb
inc
cli
in
jb
daa
push
mov
dec
push
cwtl
repnz
mov
mov
icebp
pop
cmpsl
pop
sbb
mov
jno
orl
mov
xchg
add
dec
int
push
jnp
iret
mov
daa
mov
vpunpckhdq
rcll
call
mov
or
cld
mov
mov
push
stc
addb
shrl
jg
or
negl
shrd
adc
push
int
test
rcll
mov
aam
mov
les
lds
add
mov
inc
sahf
call
movsb
dec
pushf
movsb
cmpsb
ja
sbb
movsb
jp
orps
jae
push
cmp
add
sub
lcall
pop
pop
jbe
push
movsb
push
inc
or
daa
pop
fbld
mov
roll
xchg
or
addr16
inc
and
xlat
cmp
es
or
fidivrl
adc
fdivr
test
int
push
push
clc
mov
push
inc
aaa
movsl
jmp
sbbb
pop
rclb
cmp
push
cmp
dec
in
or
lahf
bound
cltd
pop
repnz
dec
bound
cmc
push
subl
mov
or
push
fwait
dec
cmp
sahf
scas
inc
dec
dec
mov
lock
mov
ds
hlt
popa
and
cli
lret
lcall
push
push
fs
stos
iret
mov
cs
inc
sti
insb
mov
mov
test
jno
out
mov
inc
fs
pop
xchg
js
sar
divb
shrb
dec
repz
or
std
or
test
dec
pop
scas
sub
push
mov
pop
xchg
out
test
pop
fisttpl
pop
push
inc
loop
and
dec
or
adc
and
jno
scas
rol
sti
fbstp
and
aas
fs
scas
ret
add
lret
add
add
inc
enter
inc
aad
aas
repz
cld
sbb
add
mov
push
and
dec
add
push
bts
jge
pop
adc
movb
inc
sbb
inc
stc
mov
je
mov
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
dec
push
sbb
jno
ror
push
ret
adc
cs
pop
inc
call
push
xchg
mov
dec
mov
xorb
loopne
push
push
xchg
out
mov
mov
mov
cmpsb
loop
add
adc
mov
lret
push
movsl
mov
nop
scas
shll
cmpsl
js
out
cmpsb
cltd
mov
in
jecxz
push
scas
dec
pop
rorl
cmp
shlb
add
push
stos
cmp
xchg
imul
dec
xor
ljmp
pop
lea
push
stc
xchg
or
mov
mov
or
mov
xor
pop
jbe
xor
push
inc
adc
add
jbe
cs
lahf
inc
aaa
daa
scas
adc
cltd
jecxz
mov
ret
mov
jns
mov
lock
ret
aaa
movl
cmpsl
sbb
xchg
add
test
ret
test
orl
cltd
repnz
sbb
dec
popa
adc
sub
and
sbb
sbb
sbb
les
fdivr
cmp
test
pop
cmp
push
and
mov
jp
mov
dec
mov
out
popf
pop
mov
outsb
ret
adc
or
mov
in
outsb
js,pt
xor
cmp
flds
lret
int
addr16
and
cmp
add
inc
sub
mov
sti
mov
dec
cmp
sub
mov
js
mov
movb
push
adc
xchg
sub
cld
mov
dec
inc
xchg
hlt
clc
inc
mov
add
adc
sbb
and
stos
mov
push
pmaxsw
stos
fstps
ficoml
popf
mov
jns
mov
xchg
testl
jne
cmc
cmp
cmp
jns
shll
popf
push
into
popf
jp
mov
mov
cld
xchg
test
pop
mov
jbe
movsb
out
sub
aaa
shrl
cmc
jecxz
or
mov
cmp
cli
cmp
sub
mov
or
loopne
xchg
rolb
cmpsb
add
mov
hlt
mov
clc
mov
push
adc
dec
fisttpl
inc
push
inc
mov
mov
mov
andl
mov
xchg
xchg
and
or
les
push
shlb
aas
inc
mov
jecxz
jp
lcall
sub
dec
cmpsb
jnp
cmp
lock
shll
mov
jle
pop
mov
add
jge
stos
pop
nop
lea
push
pop
repz
lea
and
sub
lea
and
mov
data16
jle
mov
lahf
movsl
dec
push
push
fwait
in
jbe
and
xchg
test
mov
sarl
xchg
sbb
stos
mov
jl
mov
mov
mov
out
subb
ja
dec
xor
push
ret
sbb
jp
popa
test
mov
rolb
push
push
jg
inc
add
rorl
rolb
fimuls
mov
in
test
sbb
cmpsl
imul
mov
loope
inc
inc
mov
cmp
pop
jae
inc
mov
sub
cmp
lcall
leave
iret
ds
mov
sbb
das
xchg
jnp
sarl
rorb
test
and
sbb
out
call
fnstenv
icebp
mov
dec
bound
dec
sub
or
cs
pop
add
or
push
sub
lods
sbb
push
mov
fstpt
sbb
mov
mov
add
xlat
sbb
sbb
popf
pop
jp
or
mov
cwtl
bound
xor
add
je
nop
xor
rcrl
enter
mov
lods
jl
sub
adc
loopne
test
test
jl
sub
cmp
dec
add
cmpsl
sbb
ret
leave
jp
push
or
xlat
pop
mov
cs
pop
cmp
je
jl
pop
sti
xchg
add
adc
sbb
xor
and
out
add
mov
jb
adc
stos
popf
and
movsb
adc
xorl
dec
cltd
sbb
pop
pop
xlat
stc
pop
inc
js
jmp
xchg
inc
mov
cld
push
in
cmp
inc
mov
mov
dec
fdivrp
and
push
ret
push
in
cmpl
addr16
jmp
rorl
loopne
sahf
inc
clts
std
adc
in
repnz
shrl
sbb
idiv
xor
and
jmp
mov
icebp
pop
sbb
mov
jl
cmpsb
test
dec
fnclex
in
push
daa
add
inc
inc
mov
mov
jg
scas
xor
add
adc
out
or
add
inc
leave
cld
sub
push
shrl
test
lret
dec
jg
rorl
iret
sub
push
xor
mov
add
sti
xchg
aaa
xchg
pusha
sub
pop
xor
push
inc
sbb
mov
popf
jmp
push
mov
inc
mov
lds
repz
cmp
shll
ret
push
lea
je
xchg
stos
gs
cmp
inc
jbe
jmp
test
movsl
or
rclb
sub
outsb
ljmp
outsl
push
cmpl
jle
in
rorl
xor
dec
leave
fcoms
imul
xchg
inc
push
mov
lock
xchg
icebp
xor
gs
pop
call
xchg
adc
fstpt
mov
xchg
cmpsb
out
push
adc
or
and
jbe
rorl
addr16
and
sbb
sbb
mov
mov
mov
cld
adc
cmpsl
out
and
mov
imul
lods
mov
addr16
loope
bound
push
add
dec
dec
and
jbe
add
int
xchg
call
lds
pop
frstor
jge
push
cld
mov
stc
cmp
adc
lods
push
sbb
mov
or
int
add
gs
shrb
jo
clc
inc
xchg
lcall
stos
xchg
jmp
out
aam
rolb
outsl
jg
mov
mov
xchg
mov
outsb
cmp
loopne
test
testb
fsubrl
sub
stos
popa
leave
inc
pop
xchg
xor
andl
das
adc
pop
inc
add
add
fsts
clc
int
push
inc
or
pop
sarl
pop
divl
mov
push
lock
insl
jle
jge
sub
addl
and
leave
pop
mov
cmp
mov
adc
jmp
and
data16
movsb
flds
in
xor
or
push
dec
add
fsubrp
push
dec
cmp
movb
jns
xchg
mov
test
inc
loope
jle
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
outsb
pop
push
xchg
sbb
in
aaa
xchg
popa
jmp
dec
movsb
dec
repnz
cmp
shlb
push
int3
rorl
fiaddl
test
xchg
mov
popa
fwait
jbe
cmpsb
mov
mov
sar
in
mov
push
fadd
outsb
xchg
sub
sbb
cmc
imul
push
jo
mov
sub
jno
jb
push
cmp
lret
sub
popa
in
or
push
int3
jno
push
sar
mov
mov
mov
fdivp
jp
gs
shll
rcrb
lods
in
scas
iret
ficoms
mov
les
jge
add
outsl
add
pop
dec
adcb
ret
shrb
ljmp
iret
xchg
cmp
out
daa
ja
or
pop
jnp
mov
rorb
xor
sbb
sbb
daa
out
cmp
jl
mov
pop
add
mov
cmp
inc
outsb
adc
gs
push
mov
xor
xchg
adc
mov
cmc
je
push
adc
push
add
adc
jmp
ret
dec
or
rorl
inc
cs
or
lods
xchg
and
addl
lret
jns
xchg
add
add
outsb
sarb
cwtl
cmp
jle
mov
add
inc
or
gs
inc
out
pop
cs
sbb
cwtl
gs
sbb
mov
test
cmp
lahf
pop
or
push
filds
and
stos
imul
fsubs
divb
xor
jmp
fcoml
int
popf
jmp
add
outsb
iret
into
xor
jge
stos
and
daa
jl
insb
jo
rcll
adc
shrb
scas
data16
sbb
out
cmp
neg
int3
mov
out
sbb
fadds
cmp
fwait
sub
inc
push
rcll
sub
movsb
bound
push
insl
fcomps
scas
andb
push
pop
xchg
fisubrl
or
or
mov
into
mov
cmpsb
jb
fcoms
jle
shr
int3
mov
lret
pop
mov
and
add
popa
ss
adc
cli
cmp
sbb
popf
lock
in
pop
jg
inc
cmpl
jae
fists
and
sub
ljmp
jnp
data16
aad
fdivrs
and
sahf
push
cmp
test
pop
sub
push
adc
mov
fistpl
enter
ljmp
repnz
push
push
enter
in
inc
and
mov
xor
fisttpll
add
push
push
fstps
fwait
mov
cld
ljmp
xchg
cltd
push
cmovge
bound
xor
sti
sub
cltd
mov
fidivs
push
arpl
cmpsl
lret
dec
pop
lret
es
cmp
pop
ret
arpl
push
iret
and
orl
gs
int3
jns
cmpsb
push
clc
push
mov
lret
xchg
adcb
icebp
popf
mov
filds
pop
or
xchg
sbb
xchg
loope
enter
mov
mov
push
dec
int
push
xchg
push
sbb
mov
lods
icebp
push
lea
xlat
and
jge
lods
inc
pop
scas
call
stos
jmp
je
rcll
push
cmp
stc
sub
mov
push
scas
pop
sbb
jb
jmp
mov
mov
call
sbb
cld
sub
mov
mov
les
mov
lods
dec
loope
push
xor
inc
popf
add
test
lahf
push
jmp
cmp
cmpsl
ljmp
xorl
lods
jns
add
mov
into
sarl
xchg
pop
lahf
dec
faddl
jae
mov
inc
dec
ljmp
adc
ret
aad
jne
dec
imul
fists
test
call
std
xor
jle
enter
xor
aam
mov
shrl
push
in
call
stc
mov
loope
fisttpl
std
shlb
sub
ret
icebp
mov
mov
lods
mov
insl
and
push
mov
repz
fildll
add
outsl
sub
idiv
pop
test
loope
arpl
arpl
lcall
push
cmpsl
jge
sub
mov
pop
fnstcw
stc
fs
cwtd
xlat
pop
mov
or
dec
fisubl
je
rorl
imul
in
test
aad
lock
imul
test
jno
and
and
cld
jg
daa
xor
dec
int
repz
mov
mov
xchg
movsb
xchg
hlt
dec
lret
sbb
mov
cmpsl
imul
fildll
lds
inc
or
mov
sbbb
clc
insb
stos
mov
mov
jp
pop
stos
inc
scas
cmp
add
sbb
out
enter
bswap
es
mov
std
cmp
ret
lea
popf
push
int
jg
cli
mov
adc
fcomp
shlb
ljmp
lret
mov
lea
dec
dec
ret
ljmp
mov
mov
dec
and
aas
and
adc
jl
jne
call
xchg
mov
inc
pusha
xchg
pop
add
les
sub
aas
scas
or
dec
shlb
pop
xchg
imull
xor
icebp
sbb
and
add
inc
push
push
out
int
mov
shrl
push
clc
xchg
mov
jecxz
int3
mov
clc
jo
mov
loopne
lahf
mov
add
jmp
dec
lods
aad
fistpll
push
pushf
mov
jecxz
scas
rolb
arpl
cmc
stos
rolb
fimull
pop
push
pop
xchg
test
mov
pop
aaa
mov
aas
jne
out
aaa
sbb
mov
out
test
and
xor
cld
clc
dec
lds
int3
iret
out
mov
pop
adc
ss
pop
cmp
enter
dec
push
inc
iret
sbb
dec
fnstcw
cmp
cmp
movsl
icebp
sbbl
ljmp
cltd
add
mov
out
fs
xor
inc
mov
fstl
pushf
xchg
sub
in
push
push
mov
jmp
mov
mov
outsl
add
ja
pushf
push
mov
mov
inc
shlb
cs
xchg
push
jl
pusha
lock
jecxz
or
mov
dec
jno
push
int
cmp
ljmp
mov
insb
xchg
dec
arpl
imul
gs
lret
adc
jl
mov
mov
add
outsl
shl
ljmp
out
fs
inc
mov
je
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
jae
js
push
adc
addl
mov
and
cmp
arpl
lret
scas
and
shrl
jecxz
pop
mov
fwait
xlat
ja
jp
test
int3
cmp
and
jnp
mov
arpl
jns
les
mov
sti
pop
xor
mov
call
or
mov
xchg
jg
xor
sbb
test
gs
popf
ret
push
dec
xchg
stc
pop
aad
inc
fisubrs
in
pop
lahf
fidivl
mulb
sahf
mov
loope
pop
test
js
fs
and
in
mov
inc
dec
or
mov
push
and
xor
dec
rcll
fdivrs
jo
int3
aam
popf
sbb
out
jl
jge
and
sbbb
jge
inc
lret
pop
cmpsb
mov
jg
push
sbb
insl
inc
inc
sbb
cmp
xor
sar
fstp
stos
jp
jnp
jp
stc
push
repz
mov
insb
inc
sbb
jb
add
iret
push
and
dec
inc
cmpsl
mov
std
std
dec
pop
mov
nop
out
push
mov
sti
cli
incl
ror
jnp
xchg
cli
shll
and
dec
sub
pushf
jmp
jae
pop
xor
imul
xchg
scas
enter
push
dec
inc
aad
loopne
add
loope
mov
stos
inc
loopne
jno
and
adc
jns
xlat
xor
mov
lret
outsl
and
mov
xor
adc
xor
iret
faddl
mov
cld
push
insb
fcompp
lret
popf
cli
repnz
push
mov
shlb
sbb
imul
pop
pop
bound
or
ret
mov
add
dec
cmc
fsubl
test
push
push
or
push
into
mov
jg
sub
sub
mov
inc
ret
pop
std
dec
test
add
lods
sub
cmp
sub
shr
sbb
and
pop
inc
xchg
shll
cltd
sti
xchg
adc
cmpsl
or
orl
incb
mov
push
out
mov
dec
push
xchg
jmp
and
mov
outsl
popa
ljmp
sub
cs
ret
pop
or
add
lods
nop
mulb
cltd
hlt
mov
rcll
out
test
popf
ret
clc
ljmp
push
add
mov
ss
and
mov
mov
or
cmp
adc
cli
fidivrl
and
cltd
mov
repz
mov
pop
push
dec
mov
pop
shll
add
jbe
sub
pop
pop
pop
jmp
xlat
cmp
or
cwtl
hlt
mov
adc
and
ljmp
xchg
mov
xchg
jmp
mov
mov
add
outsb
pop
mov
sub
test
add
jecxz
test
inc
icebp
pop
fnstenv
lcall
jg
push
lods
fbld
xchg
iret
lahf
adc
mov
es
or
rorb
jle
xchg
mov
mov
or
sub
inc
fmull
fisubs
jmp
pusha
rcrb
dec
push
xchg
movsb
mov
or
scas
dec
add
fsubl
mov
inc
inc
test
cs
ljmp
adc
dec
push
pop
rorl
ja
dec
mov
mov
bound
dec
push
icebp
push
fdivrs
sbb
pop
test
pop
sbb
sbb
sub
lods
es
mov
stos
test
inc
and
int3
inc
outsb
mov
rolb
push
aaa
add
in
add
cmp
xlat
shll
push
mov
inc
lahf
pop
sub
popa
lods
rorb
in
xlat
gs
mov
push
lods
sub
arpl
push
mov
ret
sub
mov
or
jne
xlat
dec
dec
push
and
mov
or
add
pop
ds
iret
adc
add
mov
pop
sub
jo
sbb
xor
mov
fmull
or
fidivl
push
out
xor
xchg
lcall
scas
sbb
pop
inc
mov
aas
adc
xchg
xchg
pop
xchg
mov
jbe
fiaddl
sbb
sub
aad
test
fsubs
jge
sub
jl
stc
inc
enter
loop
push
out
fldenv
adc
in
xorb
js
aad
ja
xor
movl
dec
nop
pushf
or
xchg
cmp
js
pop
cltd
xchg
ficoms
dec
cmp
or
stos
jnp
rcrb
addl
mulb
pop
scas
pop
sbb
addr16
mov
call
xor
lock
mov
scas
sbb
push
mov
mov
out
stos
mov
mov
and
dec
push
jmp
mov
outsl
jg
pop
push
xchg
in
leave
jle
rorl
mov
stc
in
dec
addr16
and
mov
call
xchg
cmp
iret
ret
push
sahf
add
push
movsl
stos
push
lcall
pop
mov
popf
mov
cmp
fstps
sbb
das
mov
lea
sbb
adc
xchg
jo
xor
nop
outsl
push
iret
xor
test
nop
mov
adc
fwait
mov
xchg
adc
push
inc
loope,pt
xchg
xor
lods
ljmp
in
push
dec
mov
jp
inc
popf
sub
jle
int3
inc
jnp
jge
mov
fistl
push
addr16
sbb
and
push
fidivrl
testb
cmp
pop
or
dec
aas
push
std
test
mov
mov
rolb
dec
cmp
and
rorb
cwtl
jge
pop
popa
les
out
push
sub
or
test
fistps
arpl
sub
lea
mov
lahf
imul
xchg
sub
lahf
add
stos
pop
dec
push
mov
add
aaa
and
dec
and
mov
jg
fldcw
jmp
add
or
outsl
in
dec
push
repnz
into
xor
ss
pushl
adc
cmp
out
mov
jno
fs
mov
orb
outsl
cltd
pusha
divl
jle
mov
repz
test
add
stc
jge
sti
nop
xchg
xchg
push
test
add
fisubl
stc
fdivr
add
jp
cmp
lods
cmp
rcrl
daa
or
cmp
sbb
dec
cmpsb
lods
sbb
xlat
pop
imul
adc
xor
rolb
insl
jp
sbb
ljmp
loope
roll
leave
xor
stos
mov
pop
or
and
fistpl
in
cli
jp
cld
sahf
push
sahf
xchg
xchg
mov
aaa
movups
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
in
push
push
jmp
mov
inc
sbb
mov
push
pushf
fidivrs
pop
mov
mov
clc
repz
rorb
push
scas
xor
inc
ljmp
stc
movsl
or
mov
push
push
push
in
sub
idivl
pop
arpl
jmp
jge
adc
test
shrl
cmp
pop
xchg
jecxz
mov
mov
pusha
jle
fnsave
sub
cld
mov
mov
add
lea
repz
insl
pop
cmpsb
gs
les
popf
cwtl
ljmp
mov
pop
shll
add
and
push
jae
lea
inc
pop
cmc
mov
and
rclb
mov
mov
xchg
and
push
std
xchg
out
sub
sub
xchg
sahf
sub
add
andb
imul
push
movsb
jns
inc
adc
sub
shlb
cwtl
inc
dec
sub
xlat
repnz
jb
aad
ss
in
cli
mov
outsl
jns
addr16
scas
pop
dec
pushf
daa
push
cmp
mov
test
cmp
cld
mov
pushf
xchg
pop
ja
or
sbb
jno
add
mov
jae
add
mov
das
or
in
inc
adc
or
or
int
fimull
fisubrl
jg
push
or
ret
sbb
sbb
loopne
pop
dec
in
xlat
out
movsl
rdpmc
ds
cwtl
xchg
clc
test
adc
xor
ja
push
aaa
inc
call
fwait
hlt
jmp
xchg
xor
bound
imul
inc
out
sbb
int
rorb
cmp
mov
jmp
in
xor
push
ljmp
add
icebp
mov
lcall
sbb
mov
sbbl
sarb
jno
fs
pop
loope
repz
call
lea
std
test
xchg
add
arpl
xor
adc
dec
test
pop
pushl
dec
out
sarb
rcrl
adc
pop
push
adc
pop
dec
ficoml
testl
insl
lahf
mov
mov
pop
gs
cmp
dec
sarb
and
xchg
loope
ds
and
or
inc
inc
xchg
mov
mov
sub
mov
loop
adc
lods
loope
lret
and
shl
and
sbb
out
cmp
js
inc
bound
sahf
add
shrb
incb
or
rcrl
pop
jmp
cmpsb
cmpsl
sbb
mov
cmp
pop
pop
mov
fs
ret
roll
sbb
push
or
xchg
cwtl
dec
jg
push
dec
pop
aad
aaa
js
jnp
lret
ljmp
ja
mov
stos
iret
sub
add
addr16
cs
popf
testb
cmp
jmp
imul
nop
sub
sub
push
sbb
negb
pop
inc
xchg
xlat
and
pop
adc
inc
push
imul
push
dec
in
xchg
ljmp
cli
mov
push
push
or
and
jb
int
mov
or
shr
xchg
call
push
mov
xchg
pop
push
sti
inc
rcrb
add
or
xchg
stos
adc
int3
jne
into
jp
xor
sub
daa
ljmp
push
ret
lock
inc
ret
and
or
inc
addr16
dec
stos
les
test
or
fistpll
fildll
shl
arpl
mov
pop
int
arpl
jecxz
jae
sub
test
lret
add
sti
ds
daa
add
arpl
pop
lcall
add
js
out
int
sti
inc
std
add
jo
jmp
imul
insl
js
hlt
push
mov
mov
lds
hlt
and
scas
stc
std
into
enter
iret
cltd
mov
outsb
cs
adc
or
nop
push
loopne
mov
roll
xor
inc
dec
adc
jle
or
xchg
fstl
inc
inc
cmp
inc
into
insb
lcall
lcall
inc
cmp
push
repz
lods
xchg
data16
mov
cmc
mov
xchg
movsl
mov
loope
pusha
pop
dec
mov
jae
mov
dec
jge
or
adc
mov
add
inc
mov
rcl
jmp
xchg
das
insl
mov
pusha
jns
push
sahf
fcmovne
lret
mull
push
dec
fsubp
pop
push
mov
cmp
adc
xchg
adc
cli
rorb
pop
stc
jle
ss
push
adcl
lcall
les
cmp
xlat
iret
mov
imul
push
lcall
mov
pop
mov
dec
push
lea
pop
shl
mov
push
jno
sbb
pop
repnz
fsubl
dec
sbb
mov
jb
leave
lds
push
mov
sbb
ret
add
and
ja
push
fisubs
pop
cmp
mov
dec
inc
push
inc
test
mov
out
mov
sub
outsb
xchg
xchg
cmp
orb
cltd
out
and
hlt
mov
mov
shll
mov
lret
mov
popa
inc
mov
bound
icebp
lods
sub
mov
dec
gs
pop
frstor
cmp
push
inc
sarl
lret
mov
or
mov
sub
pop
push
cmp
cmpsl
jbe
ja
adc
mov
xchg
inc
shl
adc
bound
sbb
sub
sti
xchg
mov
pop
out
bound
xchg
push
stos
shll
push
movsl
fnstenv
sub
add
dec
jne
xchg
jno
mov
jno
sbb
loop
mov
mov
cmp
adc
cltd
cmp
addr16
stc
add
nop
or
dec
adc
xor
cld
mov
icebp
nop
inc
jp
push
je
cld
cs
outsl
les
pop
dec
stos
int3
data16
mov
fisttpl
cli
mov
neg
clc
push
xor
mov
jb
imulb
cltd
mov
add
inc
loop
xor
test
mov
shr
mov
data16
xlat
push
pop
mov
inc
mov
sub
jl
enter
pop
outsl
xor
inc
xchg
add
sub
mov
push
mov
adc
fdivp
mov
movsl
popa
pop
inc
jbe
out
dec
xchg
lcall
stos
clc
sbb
pop
dec
outsb
nop
mov
mov
repz
pop
sbb
mov
aaa
mov
push
fisubrl
mov
pusha
dec
outsb
fdivs
adc
inc
inc
push
cmp
lcall
xchg
mov
mov
and
enter
cwtl
shlb
movsl
in
ret
andb
add
sbb
repz
sub
mov
popf
adc
add
dec
pop
into
or
and
idiv
sub
addl
pop
mov
imul
mov
cmp
pop
incb
cmp
outsl
push
hlt
jle
ss
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
or
js
xor
jno
mov
inc
je
dec
xor
lret
and
inc
cld
fidivs
test
jp
push
jl
stc
mov
out
pop
sbb
gs
adc
pop
dec
mov
popf
sbb
mov
xchg
gs
fnstsw
ds
ljmp
call
mov
fadd
adc
mov
add
cli
cmp
cmp
repz
outsl
pop
and
outsl
sarb
jo
ret
ss
jmp
jge
loope
fnstcw
std
test
es
sub
sbb
inc
in
cmc
inc
lock
es
hlt
pop
adc
lcall
sahf
jne
pusha
mov
ficomps
adc
dec
ljmpw
inc
jns
stos
jns
push
xor
stos
and
xorl
mov
add
aad
and
xorb
pop
and
mov
mov
loopne
repnz
leave
jg
mov
lahf
jg
mov
imul
xchg
sub
lods
enter
add
cmpsl
sbb
cmp
pop
push
push
mov
sbb
outsb
mov
sub
push
push
pop
in
add
lret
ret
xchg
out
scas
arpl
loope
inc
fsubrs
mov
jne
aaa
push
shlb
sbb
into
jecxz
jl
movb
and
or
fisttps
stc
fnsave
aam
xchg
scas
pushf
bound
adc
loop
or
mov
adc
fisttps
pxor
in
jae
cltd
dec
mov
lea
ret
or
dec
mov
mov
dec
clc
pop
and
sub
lds
shrb
mov
ret
and
outsl
xchg
jecxz
push
pop
hlt
sbb
sub
inc
and
push
das
ljmp
sub
add
or
sbb
sbb
pop
mov
or
stos
cmc
mov
xchg
cli
popa
xchg
fs
aas
mov
sbb
std
add
incb
enter
sub
adc
dec
testb
icebp
adc
arpl
repnz
sti
adc
push
add
pop
sbb
mov
sbb
mov
stos
and
addr16
fwait
inc
add
inc
push
sti
out
mov
orl
adc
leave
and
lods
out
mov
cmpsb
or
xor
dec
lcall
push
insb
loope
inc
cli
fs
cmp
sbb
sbb
dec
test
or
push
sub
call
fisubrs
insb
or
mov
xchg
lods
sbb
negb
xor
xor
dec
call
jo
leave
mov
add
or
fwait
imul
int
add
xor
push
mov
or
lock
inc
jo
fwait
call
aad
sbb
pop
xor
dec
sbb
jo
loop
and
bswap
xor
movsb
push
add
and
stc
pop
mov
scas
fiadds
mov
cmc
pop
ret
pop
mov
mov
jnp
pop
mov
icebp
pop
fsubl
add
aam
dec
mov
lahf
push
mov
loope
adc
add
mov
push
rcl
insl
in
shl
dec
lahf
sbb
mov
and
mov
push
arpl
ss
inc
add
push
loope
in
icebp
daa
sbb
mov
inc
jb
popf
dec
dec
int
cs
cmpsl
loop
das
into
clc
xchg
stos
test
or
sub
mov
push
push
das
mov
push
imul
into
cmpsl
fiaddl
loop
adc
inc
pop
jo
push
mov
lahf
ja
xchg
cmp
es
int
ret
out
cmpsl
lea
in
divl
push
lcall
cmp
arpl
push
inc
adc
sbb
cmpsb
or
jno
aad
outsb
inc
xor
add
pop
adc
adc
iret
leave
lds
xchg
addr16
loopne
mov
pop
sub
mov
cmpsb
test
fidivrl
clc
inc
scas
mov
pusha
pop
fildll
sahf
dec
inc
adc
mov
jae
dec
sub
pop
outsl
xor
imulb
mov
jne
andb
nop
pop
and
pop
outsl
scas
loopne
jmp
xor
jg
fs
gs
and
xor
iret
and
int
cmp
mov
lods
scas
in
or
xchg
push
push
lret
add
cmpsl
push
dec
movsl
in
xorl
icebp
mov
out
add
push
imul
loop
or
push
cli
add
xor
jb
arpl
mov
out
sbb
mov
jns
jge
add
sbb
inc
or
rolb
jmp
ret
mov
into
inc
clc
loop
ljmp
sbb
ror
addb
js
or
and
and
insb
mov
addb
xchg
fcmovnu
cs
out
adc
loop
cli
wrmsr
push
pop
cmp
lcall
push
repnz
fnstsw
mov
adc
aam
lock
pop
sahf
xchg
les
call
push
test
enter
cmp
enter
xchg
or
add
icebp
pop
push
xchg
xlat
mov
add
lahf
or
sti
ja
outsl
jg
fdivr
xchg
xchg
inc
dec
cmp
cwtl
pop
or
xor
xchg
lea
cmpsb
cmp
out
and
pop
movsl
imulb
imul
shrb
icebp
or
inc
mov
test
popf
cmp
inc
jl
or
sub
pop
and
jb
into
scas
pop
shl
jg
out
fwait
daa
addr16
mov
test
pop
not
inc
jns
call
es
pop
xchg
loop
popa
mov
push
testb
and
pop
arpl
sub
icebp
outsl
stc
cmc
mov
sub
fbld
mov
add
mov
xor
popa
add
lcall
inc
jbe
mov
fnstcw
out
movsl
jne
repnz
adc
mov
dec
push
push
outsb
lret
sahf
add
mov
lret
add
arpl
stos
pop
outsl
pop
int3
cmovbe
sarb
into
imul
pop
dec
repnz
xor
dec
scas
add
lahf
in
xchg
or
push
sbb
test
repz
mov
jns
push
cmpsb
dec
dec
pop
dec
cmc
adc
imul
ss
sub
or
in
jno
mov
xchg
out
mov
dec
adc
jmp
mov
inc
cmpb
aaa
aad
xchg
inc
add
outsb
mov
dec
stc
push
js
js
mov
jl
inc
push
or
sub
int
cmp
and
pop
flds
jle
sub
sbb
cmp
loopne
ds
ret
push
fadd
lock
fimuls
dec
and
pop
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
outsb
loopne
push
fwait
in
cmpsl
mov
sbb
ffree
insl
inc
jmp
sub
fstpt
sti
mov
jg
sbb
sub
sbb
addl
sub
test
sbb
inc
sti
out
inc
lea
iret
addr16
mov
leave
xorb
mov
loopne
das
fnstcw
jl
test
jge
stos
outsb
dec
push
add
mov
js
lods
mov
cmc
je
or
mov
mov
in
ror
xchg
sti
cmc
dec
fldl
xchg
sbb
repnz
sub
daa
mov
jle
lahf
add
jo
cmp
aas
and
cmpsb
shll
lret
sbb
jg
aas
lret
jb
mov
push
gs
dec
and
mov
mov
add
pop
fwait
and
sbbb
cli
jge
loop,pt
hlt
leave
call
inc
adc
mov
xor
mov
insb
sbb
bound
insl
push
mov
inc
fcoms
mov
sub
lret
call
jb
add
test
sub
out
divl
outsb
inc
shll
ds
mov
jmp
rcrl
push
arpl
jecxz
dec
aam
pop
ficoms
cmpsl
loop
lcall
xchg
stos
addr16
pusha
call
js
mov
ret
cmp
leave
xor
lea
and
sub
jbe
pusha
test
repnz
sahf
cs
inc
fisubs
or
jbe
push
stc
and
mov
lea
addr16
sbb
mov
in
lods
in
lahf
into
mov
mov
xor
xor
std
std
clc
cmp
into
loope
stc
mov
pop
arpl
jge
sbbl
cmp
dec
nop
cltd
xchg
lock
xchg
sbb
or
mov
add
adc
mov
and
or
addl
add
aas
jmp
push
js
das
sahf
mov
dec
sub
inc
push
jmp
add
inc
repz
or
icebp
aad
dec
cltd
pop
dec
repz
sub
push
je
push
inc
dec
mov
lock
fnsave
pop
jmp
aas
lods
mov
enter
faddl
dec
sbb
sub
pushf
xchg
xchg
and
dec
loopne
call
nop
fwait
inc
inc
idivb
mov
mov
inc
jns
and
push
negl
lds
xor
sbb
outsl
sub
rcr
add
lret
xor
stos
xchg
or
and
aas
mov
push
mov
xor
mov
scas
shll
mov
jg
sti
jmp
lds
dec
shlb
test
shl
add
jp
loope
imul
xor
pop
sub
addr16
cmpsl
mov
push
subb
icebp
adcb
jns
int
in
jmp
decl
les
pop
bound
mov
push
add
jge
add
in
aaa
xor
rcl
cmp
sti
rolb
call
ficompl
and
sarb
and
xchg
cmpsl
lret
pop
imul
push
subb
inc
sub
jne
nop
cmc
or
jl
lods
sbb
mov
adc
insl
xchg
mov
adc
dec
pop
cwtl
call
mov
jb
sbb
ljmp
push
sub
arpl
xchg
scas
xchg
xchg
mov
jo
push
outsl
push
xorb
decl
lea
mov
sub
inc
mov
mov
or
pop
pop
mov
aad
mov
jge
unpckhps
mov
pop
daa
hlt
mov
int
add
xchg
push
mov
inc
stos
adc
mov
push
lock
push
adc
jle
dec
lret
aas
push
in
fs
xchg
add
push
rcll
aaa
mov
sub
or
sub
insb
xor
daa
mov
lea
ret
lcall
push
fcoml
leave
outsl
gs
mov
adc
adc
push
add
dec
gs
and
cmp
enter
clc
hlt
or
jge
int3
fidivs
jl
cmp
jmp
jecxz
rcrb
jmp
das
mov
into
mov
jae
and
leave
jecxz
sbb
pop
pushf
mov
dec
sbb
ror
cmp
push
jo
sti
fadd
jne
cltd
lock
subl
movsb
gs
ja
xchg
xor
cmp
jg
sub
and
aad
jecxz
pop
movsl
cmp
out
decb
out
ror
sbb
xchg
push
jno
and
dec
arpl
fldt
int3
cwtl
or
insl
pusha
inc
out
fldl
je
mov
xchg
add
jne
dec
repz
push
daa
fsubrl
mov
and
dec
mov
test
mov
pop
mov
or
lea
pop
sbb
or
mov
cmc
pop
sub
test
fbstp
cmp
mov
nop
jg
xor
insw
pop
lock
adc
dec
adc
mov
and
inc
xchg
jmp
sbb
jle
mov
fcoml
mov
repz
andb
mov
push
jmp
cmp
adc
icebp
add
popa
outsb
lods
add
out
adc
in
scas
jg
mov
ja
jg
jbe
mov
and
nop
inc
xchg
fldt
xchg
mov
mov
insb
in
sub
les
xchg
mov
xchg
in
pusha
fadds
stos
cmpl
std
and
outsl
std
push
adc
and
sub
push
push
mov
mov
push
push
sbb
fistpll
mov
sbbl
jno
push
das
aaa
dec
inc
scas
xchg
dec
ds
rcr
jecxz
pop
daa
inc
hlt
movsb
daa
sbb
push
mov
fdivp
arpl
and
and
jae
push
xor
das
jge
out
fdivl
pop
cmp
sbb
cmp
xor
cmpsl
ret
testb
popa
push
mov
xchg
fisubs
ret
mov
dec
cli
call
and
mov
mov
xor
jle,pt
push
jno
arpl
mov
mov
cmpsb
movsl
mov
xchg
cmp
leave
or
xor
inc
cmp
lods
lods
push
in
mov
mov
dec
jno
sbb
imul
subb
stos
dec
pop
int
mov
imul
in
jecxz
fsubrp
dec
in
imul
in
cld
mov
fbld
push
stc
lcall
push
fcompl
js
sbb
out
jg,pn
jecxz
ljmp
inc
mov
jae
js
rorl
push
pusha
lods
dec
std
stos
jmp
shl
and
test
out
mov
sub
xor
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
push
jbe
scas
adc
jno
loop
sbb
mov
jmp
shl
xor
adcl
cld
fucomip
sti
ds
xor
sbb
sahf
cmp
inc
lahf
test
lahf
push
sbb
jb
push
jbe
jne
int
nop
stc
lret
repz
stos
and
mov
cmpsb
pop
cmp
dec
or
push
dec
or
mov
cmp
lds
inc
mov
ja
shlb
insb
stc
and
push
and
bound
movapd
or
dec
test
loope
ds
xor
leave
jecxz
stos
ret
push
mov
or
sub
xor
add
jb
xchg
add
push
loope
pop
mov
cmpsl
push
adc
subl
jno
or
sarb
lods
sbb
shll
outsb
mov
dec
lods
test
fxch
push
xor
call
dec
andb
in
aad
and
enter
test
out
ja
sbb
ror
sub
or
int3
je
imul
cmpsb
arpl
sti
inc
jge
lcall
mov
enter
mov
sbb
mov
cmpsl
mov
inc
sub
jns
lods
bndstx
sub
stc
and
pop
and
lcall
jno
mov
bound
aaa
int
iret
es
sahf
loop
inc
aad
add
test
xchg
jns
mov
pop
test
je
fdiv
bnd
rorb
in
mov
in
pushf
aam
lahf
lcall
mov
in
or
fsubrl
jne,pt
xchg
sub
lret
push
inc
ljmp
inc
inc
mov
xor
add
test
lret
cmp
sub
jno
repz
arpl
sti
adc
dec
mov
ljmp
int3
or
add
adc
test
in
push
push
pushf
shl
loopne
addr16
imull
jle
sbb
sbb
out
or
inc
sti
sub
inc
popf
adcl
dec
std
mov
adc
xor
jno
scas
pusha
cmp
jb
mov
rcrl
stc
pop
cs
repz
mov
jg
adcb
jbe
fnstenv
hlt
xchg
pop
and
addr16
flds
lea
push
stc
daa
mov
and
call
shr
sbb
pop
add
aam
and
in
cmp
or
xlat
iret
imul
aas
mull
addr16
out
movl
xchg
rcrb
mov
xor
outsb
add
push
stc
es
ds
shll
dec
lahf
fistpll
in
es
in
das
xchg
dec
xchg
jo
stos
push
mov
push
xor
test
jo
arpl
xor
ret
stos
inc
jl
test
push
notl
xchg
mov
das
mov
push
int
ret
adc
sub
mov
jbe
mov
sbb
jne
hlt
mov
jp
mov
movsb
packssdw
xor
push
into
cltd
mov
cmp
aaa
push
mov
sbb
add
inc
fcmovb
sbb
imul
daa
frstor
jae
shll
inc
adc
mov
pop
xlat
das
pop
psrlq
push
adc
and
fucomi
test
add
into
ss
das
jbe
shll
test
adc
mov
cmpsl
or
imul
jno
cmpsb
fnstenv
and
adc
in
scas
or
lret
push
loope
repz
inc
mov
data16
adc
insb
imul
xchg
lahf
loope
or
sub
dec
add
or
dec
ja
stc
popf
mov
mov
hlt
push
in
loop
pop
iret
inc
xchg
lods
inc
push
and
jmp
xor
fs
fidivrl
mov
in
lret
cltd
lahf
ljmp
adc
mov
inc
rcll
lret
fwait
out
dec
movsb
sbb
movsb
dec
aas
hlt
jle
out
arpl
mov
sahf
adc
adc
filds
scas
ret
adc
shlb
sub
sub
dec
rdmsr
push
jecxz
icebp
cmp
daa
scas
fsubl
mov
xor
push
imul
les
push
and
ret
icebp
mov
mov
out
mov
pop
pop
adc
loop
mov
repnz
aas
fldt
push
cmp
aam
in
pop
add
daa
jmp
sbb
dec
stc
jne
and
movsl
cmp
in
decl
lea
mov
dec
aad
mov
xchg
dec
aam
pop
es
sub
cli
mov
xchg
sti
popf
cmp
cmp
jg
fs
push
jle
xchg
pop
inc
enter
ja
sub
pop
sarl
js,pn
aam
push
cmp
sbb
cmp
lret
aam
cmc
packuswb
sub
pop
insl
dec
loop
xchg
adc
pop
shll
pop
mov
pop
add
mov
jns
inc
push
dec
cmc
loop
and
popf
pop
cli
and
mov
mov
xchg
fdivl
outsb
test
inc
je
pushf
push
mov
mov
push
das
scas
ss
lods
sub
nop
jnp
movsb
xchg
xlat
push
aas
dec
sub
dec
inc
inc
out
cs
ret
sbb
dec
dec
sub
xchg
mov
sub
add
adc
lods
push
jo
mov
adc
and
mov
adc
add
pop
adc
cmp
leave
out
mov
or
mov
jle
dec
xor
je
mov
xchg
out
dec
xor
cmp
mov
test
aam
push
pop
ja
cmpsl
int3
pushf
mov
jmp
sbbb
sbb
adc
mov
icebp
inc
out
push
sbb
data16
dec
stos
and
mov
mov
xlat
loop
push
and
sbb
movsb
scas
hlt
or
mov
sub
and
push
cld
cmovg
jge
scas
cwtl
jg
add
sub
mov
adc
inc
pop
mov
rcll
mov
das
loopne
dec
or
sbb
pop
popf
pop
mov
mov
mov
lods
jbe
pop
das
mov
mov
repnz
enter
cmp
lods
sub
dec
mov
push
in
mov
mov
jne
lods
stos
push
rcrb
sahf
mov
inc
in
enter
and
jb
ljmp
hlt
std
ret
mov
sbb
or
sbb
add
iret
jge
or
outsb
push
mov
outsb
jg
subb
mov
dec
push
gs
leave
insl
insb
int3
rolb
cmp
cmp
test
xor
dec
insb
test
or
idivb
sub
add
enter
sbb
stos
push
push
je
cmp
arpl
pop
xchg
fidivrs
pop
in
xor
pop
dec
jns
jb
xchg
mov
dec
addr16
loop
call
aad
adc
and
push
or
stc
push
sub
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
ret
mov
cli
adc
jge
bswap
and
cmp
adc
cmpb
sbb
mov
sub
jb
dec
clc
inc
mov
call
or
adc
out
cwtl
out
mov
icebp
jmp
movsb
xchg
ds
inc
mov
adc
ret
jbe
adc
push
pop
shll
cmp
out
xchg
fiaddl
testb
in
add
cmp
xor
clc
or
jb
or
push
xchg
pop
repnz
xlat
enter
mov
aaa
pop
xchg
sub
mov
sti
and
xchg
mov
mov
inc
xchg
std
or
pop
iret
pop
add
hlt
sub
jns
sbb
inc
sub
cmp
and
jns
shlb
lret
jns
sub
mov
dec
xchg
xor
or
mov
add
daa
pop
in
loop
and
sub
test
or
inc
insb
pushf
push
pop
cs
adc
push
pop
mov
mov
xor
xchg
fs
and
cmpsl
cli
adc
inc
ret
xor
dec
scas
mov
xlat
nop
adc
icebp
or
ret
fsubl
pushf
pop
and
fcmovnb
fildl
cmp
push
ljmp
addb
ja
bnd
stc
mov
cmp
inc
adc
lea
sbb
clc
mov
sbb
sahf
inc
xchg
fcmovbe
daa
or
xor
dec
enter
or
jge
shrl
and
mov
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
