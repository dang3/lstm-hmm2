push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
mov
bound
sbb
bound
xor
cmp
jns
jbe
repnz
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
pop
cmp
aas
data16
push
fs
loopne
daa
je
mov
cmpsl
lcall
pop
out
in
jnp
out
mov
mov
xchg
ja
popf
sbbl
mov
fldl
outsl
out
xor
loope
cwtl
jmp
jb
and
pop
xor
or
psubusw
icebp
jl
or
pushf
sahf
shrb
or
adc
loopne
lret
pop
cmc
addb
addl
dec
lret
call
xchg
sub
mov
jecxz
or
push
lret
and
add
inc
nop
lock
fmull
xchg
jno
sbb
cltd
mov
xchg
push
mov
push
fcompl
repnz
adc
repnz
bound
inc
pop
jl
sbb
push
cs
push
xchg
mov
xor
jp
loop
sbb
inc
cmp
sub
shll
out
add
pop
jmp
xlat
mov
dec
xchg
pop
xor
push
testl
stc
push
and
or
ds
repz
sub
jecxz
dec
scas
mov
jbe
sub
xchg
ljmp
subl
jns
fcmovb
pop
dec
insb
mov
cld
rolb
out
jno
cwtl
sti
pop
push
rep
mov
popf
sbb
xor
popf
xor
repnz
popa
scas
movl
pushf
and
gs
mov
pop
int3
nop
das
rcl
jns
cmp
lcall
ljmp
dec
xchg
arpl
or
mov
in
mov
sbb
shrl
dec
dec
je
adc
cltd
in
sarl
push
jno
movsb
jmp
aad
or
aaa
nop
or
cmpsl
xacquire
xchg
mov
push
pop
push
stos
mov
aaa
mov
push
add
sub
aam
or
xor
mov
aas
repnz
sub
pop
sti
call
ret
mov
mov
cmc
sub
les
enter
fdivrp
movsb
mov
inc
mov
pop
cmpsb
sub
insb
in
push
jbe
sti
push
sub
test
icebp
insb
in
dec
notl
cli
jp
push
mov
mov
mov
loope
mov
lds
inc
sub
pop
jl
mov
or
imulb
xchg
add
hlt
cli
movsl
jecxz
xchg
mov
xor
iret
rcl
ret
jae
imul
pop
fs
inc
loope
mov
in
xorb
loop
sbb
dec
inc
call
loop
mov
aaa
aad
inc
sbb
push
lods
xor
cmpsl
adc
outsb
stos
insb
dec
aam
pop
popf
int
cmc
insl
mov
adc
js
jno
inc
or
loope
push
sub
and
xchg
clc
scas
push
push
outsb
dec
push
std
mov
mov
inc
insb
pop
adc
call
push
ja
iret
pop
inc
mov
and
cmp
daa
pusha
pusha
add
in
daa
xlat
pop
pop
jne
ss
push
mov
out
into
cmpsb
pop
add
mov
lock
jge
icebp
mov
mov
pop
les
mov
outsl
add
xchg
lods
xchg
dec
arpl
add
push
and
aad
xchg
incb
push
add
dec
rclb
cmp
push
fisubrl
arpl
jae
mov
push
out
test
cwtl
jmp
dec
daa
cmp
scas
mov
push
stos
jge
bound
jae
idivb
adc
sbb
add
add
mov
shll
dec
ss
push
mov
or
push
xchg
add
mov
hlt
std
sti
jmp
stos
scas
hlt
movsl
sarb
fsubrl
insb
or
cld
xchg
mov
mov
ss
and
scas
xchg
jbe
hlt
mov
jae
jb
xchg
and
lcall
andb
jecxz
imul
xor
sub
clc
rolb
arpl
insl
nop
push
call
mov
push
jmp
push
xchg
shlb
add
arpl
adc
mov
adc
lds
inc
aam
mov
imul
adc
shl
xchg
loopne
cld
test
xor
xchg
adc
push
and
ss
aad
xlat
scas
dec
out
fnstenv
pop
xchg
shrl
inc
xchg
mov
mov
imul
mov
adc
lret
pop
dec
std
jle
sbb
sbb
xchg
testb
sub
dec
pop
fdivrl
scas
xchg
aaa
jnp
pop
xchg
adc
cmp
xchg
ret
lret
sbbb
pop
pop
out
call
shll
mov
les
cld
stos
xor
es
aam
gs
or
pop
add
push
adc
into
xor
lret
loope
mov
push
pusha
addr16
sbb
ss
mov
sub
loope
pop
sub
pushf
dec
repnz
xor
sbb
jno
sti
into
xor
mov
imul
cmpsb
fiaddl
pushf
fisttpll
clc
fidivrs
jae
pop
arpl
rcl
pop
jbe
jns
add
fbstp
loop
mov
lock
idivb
movsb
les
add
mov
int3
clc
lods
in
or
pusha
or
cmp
pushf
mov
scas
adc
cld
sub
sti
push
sti
add
xor
stos
dec
xchg
sub
dec
mov
and
mov
sbb
loop
dec
xor
imul
dec
jp
pop
inc
pop
xor
adc
out
jp
sahf
stc
push
mov
dec
mull
mov
push
bound
addr16
test
xchg
jne
je
push
ds
cltd
mov
adc
inc
mov
xchg
mov
fwait
dec
pop
in
fstps
jle
sbb
inc
into
xor
test
add
adc
ja
addl
sub
mov
je
dec
cs
out
out
adc
inc
lret
repz
inc
and
ja
mul
push
gs
push
mov
adc
ja
in
or
mov
pusha
dec
adc
push
pop
xchg
std
loopne
jns
sbb
rcrb
clc
adc
pop
call
pop
loopne
sahf
das
lret
cmp
loop
pop
scas
jb
push
mov
sbb
or
sti
ja
add
call
imul
test
pop
sub
ss
aam
pop
pop
stos
xor
sahf
mov
in
adc
add
adc
rcrb
call
test
outsl
rcrb
mov
cltd
jl
inc
loop
loop
popf
mov
and
mov
jge
data16
xor
mov
mov
inc
mov
jno
test
cwtl
add
fnstsw
inc
dec
adc
cmp
xchg
out
ss
pop
jns
aaa
cmp
pusha
and
in
enter
flds
xchg
lret
outsl
int3
cltd
inc
jbe
fnsave
nop
ss
clc
cmc
sbb
sbb
into
cltd
mov
cmp
rcrb
ret
push
in
cmp
mov
cltd
data16
cmc
or
xchg
push
push
js
sti
leave
stos
pop
and
pop
stos
lret
stc
cmc
test
cmc
lock
into
in
rcrl
das
int
ret
inc
cmpsb
pop
mov
adc
push
xor
inc
popf
sahf
jmp
or
fcompl
out
insb
cmp
mov
jo
xchg
sub
jno
daa
sbb
inc
insb
out
lock
repz
outsb
xor
fcomps
mov
dec
xor
rorb
jge
cltd
test
testb
into
adcl
test
popa
adc
lcall
insl
stos
and
fdivs
andl
ret
jmp
xor
sti
xorl
jae
push
std
shll
sbb
iret
push
fldt
sbb
movsb
mov
push
or
aas
lea
jbe
divb
lods
sbb
pextrw
xchg
jecxz
aaa
mov
fsubrl
pop
pop
mov
or
add
ja
ss
insl
pop
sbb
je
or
scas
decb
jle
test
inc
xor
adc
lcall
jg
les
add
adc
and
je
out
insb
xor
jb
insl
xchg
jae
mov
mov
and
sub
cld
mov
push
inc
cmp
dec
adc
sahf
xchg
mov
ret
into
pushf
movsl
pop
cmp
aaa
dec
leave
sub
ja
push
mov
pushf
movsb
add
pop
stos
adc
mov
testl
mov
jb
xchg
jle
pop
add
test
inc
sbb
jl
repnz
inc
mov
cs
lcall
in
or
mov
mov
addr16
jb
mov
xchg
test
sub
ret
je
xlat
into
imul
xlat
push
hlt
mov
add
jbe
lret
in
paddusw
and
push
xchg
fisttpl
cltd
xchg
or
cmpl
inc
cmp
cmp
sahf
fs
movsl
repz
gs
int
sub
movsb
adc
xlat
and
lds
cld
dec
loopne
ret
mov
mov
filds
mov
inc
and
movsl
cmpb
jbe
loop
xlat
sbb
adc
data16
repnz
testb
cmpsb
out
and
ja
fimull
lcall
dec
arpl
fbld
bound
int3
push
std
mov
test
pop
loopne
cmp
mov
jb
sarb
or
lods
mov
shrb
inc
jg
negb
jle
mov
stos
xchg
fisubrs
lods
mov
ljmp
mov
xchg
lcall
fbld
pop
dec
rolb
insl
sbb
mov
fcmovbe
jne
mov
lds
data16
aas
sub
std
loope
fldcw
cmp
ds
lock
mov
push
mov
repnz
jb
in
aam
sub
fldt
mov
push
lods
fsubrl
mov
lahf
and
dec
gs
or
sbb
push
sbb
or
sbb
inc
add
fistpll
test
stc
pop
aad
shll
sub
sub
pop
out
mov
jae
pop
xor
push
push
ljmp
push
push
test
scas
fs
lock
mov
movsl
push
mov
push
aad
mov
jno
push
adc
sbbb
pop
jg
enter
lcall
loopne
lds
popf
test
or
xchg
mov
pop
fsubrl
mov
ret
lcall
inc
add
insl
cmpsb
popa
or
sub
xor
pop
cmp
ss
add
out
in
inc
clc
movsb
and
xor
fisubrl
mov
cmp
sub
inc
ss
jmp
std
or
cmp
mov
iret
cwtl
pop
cmpsl
push
addr16
iret
aad
in
arpl
jg
add
or
pop
sbb
sti
mov
push
bnd
cli
push
dec
repnz
xchg
in
fsubs
xchg
xor
in
adc
dec
cmpb
movsl
inc
out
pop
jne
notl
pop
pop
les
xor
decl
jae
iret
inc
ret
inc
pop
mov
mov
outsb
cmp
in
xchg
jb
xchg
jo
xchg
xlat
cmp
in
sub
dec
ja
xchg
push
push
adc
out
jle
lods
fimuls
lods
mov
cmp
and
jb
int3
daa
shl
sbb
sub
push
mov
cmp
or
scas
fadds
mov
or
insl
mov
inc
iret
jb
mov
and
negb
inc
adc
les
fdivrs
clc
jmp
fiadds
pop
div
mov
ss
adcb
cmpsl
push
mov
mov
mov
adc
adc
in
out
mov
add
mov
sub
cmp
ljmp
std
push
jae
mov
pop
cmp
mov
jbe
mov
add
jg
mov
add
xchg
pop
fisttpll
sbb
call
pop
mov
out
cmp
cli
scas
push
jnp
inc
int3
mulps
ljmp
pusha
jge
dec
pop
xor
push
rorl
pusha
adc
push
xchg
dec
sub
pop
sbb
in
pop
push
insl
adc
inc
cmpsb
mov
jg
and
sahf
mov
lea
sub
inc
ret
sub
mov
mov
iret
nop
xor
fwait
lock
or
addr16
jnp
push
in
xchg
test
add
lock
gs
xor
or
xchg
jmp
stos
push
js
adc
in
dec
out
ljmp
and
adc
push
mov
adc
push
ja
pop
xchg
in
push
xor
jae
xchg
dec
jg
bsf
push
push
rcrb
dec
stos
dec
sbb
mov
sub
hlt
pop
push
xchg
pop
xchg
jno
lcall
leave
cs
or
inc
push
lret
mov
fadds
push
stos
repz
mov
sbb
rcll
stc
adc
gs
iret
loop
ja
mov
js
test
mov
lahf
pop
fstps
sub
ret
ret
call
fisttpll
mov
dec
push
sub
xchg
popf
outsl
mov
mov
movsb
jg
arpl
fidivl
test
xchg
mov
inc
into
outsb
jbe
repz
pushf
xchg
mov
mov
sahf
repnz
insl
fsubs
pop
inc
aad
mov
pop
xchg
mov
shl
pop
daa
cwtl
pop
dec
push
mov
push
mov
cmp
push
push
adc
sub
cmp
pop
std
int
jg
shr
stos
enter
cwtl
lret
loopne
inc
push
fnstenv
dec
xor
cmpb
or
pushf
cmpsl
jns
jle
xchg
cli
arpl
popa
dec
sbb
dec
xchg
test
imul
sub
fistpll
or
insb
stos
in
icebp
mov
out
adc
xor
jle
sub
cmp
cld
xor
lahf
xchg
pop
push
ss
sub
pop
fsubrl
test
iret
push
call
ds
lds
jnp
mov
inc
popf
push
nop
imulb
clc
add
sarl
movsb
into
outsb
orl
stos
mov
jecxz
aaa
mov
aam
and
int3
lods
adc
fs
or
xchg
lret
pop
jg
mov
testb
dec
sub
pop
mov
push
and
jmp
jg
mov
jae
sarl
aas
add
add
pushf
js
insl
sbb
cmp
or
insb
xlat
mov
or
jmp
jecxz
xchg
fsubrs
stos
leave
or
push
fwait
mov
cld
jmp
out
loopne
mov
out
aaa
add
popfw
movsb
sbb
xchg
lods
arpl
int3
or
packuswb
lahf
inc
js
push
std
in
xchg
push
mov
cmp
fwait
cmpsl
mov
and
gs
jecxz
gs
or
lods
daa
or
addr16
fisubrl
add
outsl
sahf
adc
mov
lds
and
mov
pop
repz
sahf
enter
mov
fwait
ss
stc
fidivrs
es
imul
jle
mov
or
shll
add
push
xor
fdivrs
test
pusha
push
insl
js
mov
mov
aad
rol
ljmp
dec
ds
pop
cwtl
lds
adc
addr16
jle
and
cmc
lcall
mov
jmp
mov
sti
push
xlat
lock
jne
cwtl
mov
pop
stos
nop
stc
ja
jae
rcll
or
pop
mov
rolb
mov
xchg
or
int
cmpsb
into
push
xor
mov
dec
hlt
jno
pop
xchg
pop
in
inc
push
pop
adc
aam
inc
sbb
std
movsl
lods
into
xchg
cmp
dec
int
int3
dec
xlat
out
add
cmp
mov
dec
pop
test
push
or
push
movsb
scas
ja
mov
cmp
aad
mov
adc
scas
movsb
data16
jle
pop
mov
aam
mov
mov
xchg
fsubrs
popf
inc
imul
push
add
xorl
ret
sbb
loope
cmp
ja
and
scas
jno
test
fcomps
hlt
lods
lods
fbstp
scas
sti
push
mov
adc
orb
dec
xor
push
shrb
push
bound
out
adc
cmp
mov
dec
jge
into
dec
mov
sbb
es
out
fdivl
mov
sti
movsl
aam
test
jbe
lret
cs
add
imull
sbb
les
and
and
xor
xchg
subl
movsb
jb
js
mov
inc
pop
icebp
push
test
xchg
and
dec
and
dec
xchg
cmc
mov
mov
mov
mov
cs
pop
test
sbb
dec
sbb
pop
shll
xchg
insl
hlt
dec
pop
cwtl
mov
pop
das
dec
push
arpl
mov
dec
lret
mov
sub
sub
or
rorl
fidivl
fsubr
gs
jmp
pop
daa
sub
fwait
ret
je
pop
mov
andl
jb
xchg
lea
testb
jnp
lret
sub
sbb
mov
dec
mov
sub
mov
lds
sub
xor
inc
enter
xor
lods
push
sbb
and
push
and
imul
push
outsb
mov
rolb
dec
mov
icebp
pop
cmp
dec
push
aad
scas
into
dec
dec
mov
nop
out
aam
push
idivb
and
push
jmp
jl
xchg
cmpb
jno
call
dec
mov
sbb
mov
inc
fst
out
sbb
mov
pop
stc
add
pop
iret
cmp
push
or
lds
mov
cmp
rorb
stos
pop
in
fidivl
push
mov
int3
enter
outsb
cmp
xchg
mov
ret
lcall
es
hlt
push
fcoml
fimull
xchg
sub
outsb
ret
push
mov
xchg
rorb
int
xor
stos
pop
cmp
sub
and
je
mov
push
fdiv
dec
xchg
mov
lock
pop
jmp
add
ljmp
lds
xor
mov
out
ret
mov
push
add
es
insb
jns
cli
sahf
das
and
inc
mov
int3
sahf
mov
scas
mov
pushf
or
int3
mov
xchg
adc
jle
arpl
fsts
pop
aad
add
mov
xchg
jmp
nop
push
jae
std
shrb
add
fsubrp
inc
icebp
testl
jl
repnz
fimuls
jo
test
push
lods
mov
or
mulb
lcall
fs
xor
cmp
push
jae
repz
out
pushf
out
pop
inc
stos
cmpl
es
or
cmp
es
cwtl
or
push
bound
mov
xchg
dec
mov
mov
pop
outsb
xor
out
aaa
fwait
jns
and
mov
xor
stc
subl
sub
popf
mov
adc
cmpsb
out
ds
aad
lods
xor
fwait
movb
fisttpl
insb
and
jnp
aam
js
gs
add
arpl
mov
js
pop
dec
inc
mov
cmp
ficoms
or
add
movsb
push
imul
rcl
xor
or
scas
ficoms
jne
push
ds
sbb
popf
std
mov
push
push
sahf
aas
add
xchg
xchg
call
ja
adc
rol
dec
jne
jge
xchg
inc
mov
inc
fnsave
cld
jge
jp
push
jno
sbb
push
mov
movsl
cmp
mov
inc
push
lcall
lret
inc
pop
add
out
dec
jg
pop
mov
movsb
imul
and
fimull
cwtl
data16
and
push
dec
fisubl
int3
in
push
push
cmp
fstpt
sbb
sbb
cli
ljmp
loopne
in
sub
inc
into
lock
and
inc
xor
sub
sti
mov
pop
push
movsl
cmp
addr16
push
ja
mov
push
mov
mov
push
mov
push
ja
sbb
data16
push
inc
jae
inc
sbb
cmp
or
lds
mov
sbb
movsl
mov
jo
push
mov
jp
push
insl
mov
or
cmp
or
sahf
jbe
pavgb
push
test
movl
mov
mov
and
repnz
dec
rolb
out
out
mov
xchg
popf
add
cld
mov
into
out
xor
mov
or
push
pop
push
add
andl
lret
xchg
mov
inc
jbe
sub
inc
pop
cmp
mov
mov
das
outsl
lods
outsl
inc
add
jne
adc
jmp
aam
jl
outsl
fcoml
enter
repz
imul
xchg
fdivrp
xlat
push
sbb
test
cli
jno
aaa
or
clc
jmp
xor
inc
mov
addb
or
lods
aaa
mov
cmp
or
popa
test
imul
mov
loope
xchg
jo
dec
addr16
sbb
les
push
loopne
lret
mov
popf
xchg
daa
and
jg
lock
sarb
sahf
loop
xchg
ret
push
movsl
xor
mov
aaa
jl
pusha
mov
xor
pusha
adc
lret
sub
call
xor
arpl
inc
xor
mov
js
out
test
jg
push
cmp
xor
adcb
sub
sub
jle
pop
sbb
andb
ret
push
mov
and
sub
jae
mov
add
cs
cmp
and
sahf
push
bnd
xchg
or
das
mov
xchg
js
loop
jmp
mov
hlt
add
xchg
xchg
lods
xchg
push
cwtl
inc
sbb
sbb
mov
or
push
in
movsb
icebp
into
push
jne
jno
jmp
mov
sbb
sbb
ja
dec
push
or
pop
stc
jno
inc
sahf
inc
sbb
sahf
dec
incl
les
shl
ss
roll
loopne
insl
enter
int
sbb
aaa
add
inc
jp
fiaddl
aam
aam
adc
out
mov
das
test
mov
pop
mov
xchg
scas
xchg
pop
fidivs
lods
cmp
adc
jo
cmpsb
inc
sbb
xchg
sarl
movsl
clc
jle
push
sub
in
fdivs
or
add
jp
inc
sub
mov
mov
push
dec
mov
xor
inc
pop
mov
sar
dec
push
in
ljmp
dec
pop
int
jl
outsb
leave
aam
rorb
mov
pop
dec
mov
inc
fnstenv
and
sbbl
aaa
jno
cmp
pop
out
mov
in
adc
popf
dec
xchg
int3
pop
stos
test
sub
cmp
jp
pop
push
inc
xor
add
insl
in
dec
sub
push
xlat
data16
mov
stc
inc
xchg
adc
push
or
push
and
sti
or
push
adc
xor
and
popf
and
push
int3
mov
xchg
push
xor
popa
pop
pop
lods
test
sahf
and
adc
arpl
fiaddl
call
mov
jne
cmc
iret
xchg
pop
repnz
fcmovne
fidivl
or
xchg
mov
jbe
stc
jno
xor
rcll
shll
fnstsw
mov
adc
mov
xchg
daa
xchg
aaa
mov
loop
int
mov
mov
xchg
sbb
outsl
gs
lret
push
stos
inc
sub
clc
scas
test
aam
fmull
dec
daa
scas
mov
aam
in
movsl
push
scas
mov
clc
jg
shll
andb
add
out
decb
sub
cmpsl
or
stos
imul
dec
push
mov
push
lea
xchg
or
inc
xchg
rcl
mov
mov
pop
mov
movsl
pop
outsl
add
sbb
pop
mov
jo
cmc
call
movsb
dec
push
mov
jg
pop
inc
mov
ret
inc
adcb
jno
sahf
aam
out
sub
ds
jo
pop
in
ss
mov
mov
cmpl
sbb
push
dec
mov
or
sbb
loope
hlt
in
push
clc
cld
lods
cmpsl
xor
pop
dec
in
adc
stos
cltd
mov
data16
xor
ljmp
lds
sub
shll
sbb
xchg
push
sbb
jnp
push
push
sub
sbbb
jmp
sub
jge
jl
cmpsl
nop
and
aas
inc
cmp
add
shrb
or
inc
mov
mov
jg
mov
js
loope
add
inc
xchg
movsl
mov
pop
and
sarl
cwtl
mov
lcall
mov
cmp
mov
pop
pusha
mov
adc
pop
dec
push
push
rclb
movsb
push
push
sbb
out
xchg
jle
jl
lods
add
cmp
and
cld
pop
add
jnp
add
shrl
test
mov
inc
jnp
or
inc
jno
mov
popa
lret
lock
pop
mov
mov
jo
test
popf
and
data16
push
adc
bound
or
jge
mov
cs
out
dec
pushf
in
ss
pop
icebp
popa
loop
ficoms
shrb
cmp
mov
jb
and
pop
int3
dec
pop
lahf
add
xor
cs
sbb
mov
cmpsl
lea
loopne
sbb
int
sub
or
sti
adc
inc
and
das
lods
test
xchg
sub
repz
ret
xlat
mov
xor
ret
fldcw
and
fildll
insl
push
fdivr
bnd
call
jb
mov
sub
lock
rcl
or
bound
loope
cmp
andl
mov
mov
je
mov
jl
mov
jl
jnp
loope
notb
popl
sbb
sub
xor
pop
mov
sbb
push
call
cmc
pushf
xchg
cmp
loop
sarl
push
pop
mov
sub
mov
jecxz
testw
mov
sbb
push
pop
mov
jp
popf
xchg
push
rcrl
xchg
mov
inc
sub
dec
inc
ret
cmp
mov
sbb
lock
ds
mov
scas
xor
in
mov
bound
push
test
xchg
cmovle
push
sbb
dec
mov
sub
xchg
imul
cs
loopne
mov
push
test
xchg
aam
add
xchg
dec
sub
enter
push
inc
outsl
sub
rorb
gs
imul
leave
or
stc
outsb
mov
incb
insb
mov
xchg
andl
sbb
leave
mov
jg
mov
inc
jl
pop
inc
cmp
std
in
fimull
lcall
add
fisttpl
rcrl
popa
popf
push
mov
jp
and
jg
xchg
hlt
sub
jnp
inc
xor
fdivl
arpl
adc
pop
je
cltd
scas
pop
loopne
cmp
sub
xor
sahf
out
gs
or
popa
xchg
dec
mov
cmp
lcall
in
cmp
sub
loope
xor
stos
sub
jns
mov
inc
and
lcall
cmp
out
out
mov
xor
jnp
sahf
add
aad
lahf
pushf
pop
outsb
cmp
add
sub
jg
out
out
mov
stc
cwtl
mov
jle
or
adc
cmp
sti
push
imul
cli
mov
imul
xchg
push
add
arpl
loopne
enter
or
cmp
movsb
cmp
mov
arpl
mov
pop
jns
das
mov
jb
pop
sub
fisubrl
pop
ficoml
nop
push
cli
rol
adc
mov
inc
ret
add
in
nop
mov
adc
dec
dec
stos
scas
ret
pop
mov
dec
xor
or
add
dec
xchg
xchg
adc
out
rolb
sbb
popf
xor
bound
fisubrl
sub
push
adc
xor
or
push
sti
push
cmp
xchg
and
sbbl
sti
mov
inc
pop
es
shlb
cmp
sbb
cmp
sbbb
adc
sbb
jbe
jae
sbb
pushf
scas
pop
adc
sub
push
xchg
pushf
lcall
cs
stos
and
xlat
dec
int
repz
cmp
push
xor
out
fisubs
es
xchg
popf
mov
repz
jg
mov
jp
xor
xor
arpl
xchg
rorl
add
inc
das
insl
jmp
inc
or
jp
lret
jne
lock
mov
mov
jo
insb
mov
icebp
int3
popf
test
xchg
popa
or
adc
les
add
mov
push
push
jle
bound
lea
pop
test
inc
cmp
sbbl
int3
adc
sbb
aas
cltd
dec
or
mov
je
cmpsb
stos
pop
adc
arpl
sub
add
pop
cmp
cmp
add
jmp
loopne
and
sbb
cmp
mov
ljmp
xchg
dec
out
xor
mov
xlat
lcall
cs
call
hlt
les
pop
ss
loop
and
je
sbb
subb
imul
dec
lcall
dec
je
adc
mov
ja
dec
aas
lods
test
shrd
cmp
aaa
cli
jno
fs
vmulss
sarb
xchg
jbe
insb
insl
sbb
mov
sti
ss
out
into
xor
cmp
mov
adc
outsb
sbb
cmp
lods
lds
and
aas
inc
arpl
ljmp
lock
pop
lock
adc
xor
xchg
mov
call
leave
xlat
rcl
icebp
in
sub
fdivrl
add
and
mov
and
cmp
or
or
enter
or
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
or
bound
pop
bound
fs
out
jb
or
out
test
mov
int
imul
les
xchg
sub
push
adc
add
or
push
scas
xor
lahf
ret
repz
or
test
sub
incb
pop
push
loopne,pn
push
inc
adc
mov
xchg
sub
cmc
mov
fsubrp
icebp
mov
test
lods
push
cli
push
pop
lock
mov
loopne
rcll
and
mov
movsb
mov
mov
mov
and
jne
or
jle
push
pusha
push
gs
jno
in
lret
jecxz
mov
inc
in
add
pop
lcall
repz
scas
cmp
mov
sbb
dec
mov
roll
sbb
mov
inc
jg
fsubs
sub
andl
jge
in
xor
xor
data16
ret
xchg
imulb
or
movb
rclb
dec
sub
mov
inc
sbb
fidivrs
push
inc
scas
stos
dec
xchg
adc
in
out
data16
into
pop
leave
sbb
popa
repz
test
test
xor
test
imul
daa
repz
and
jg
sub
test
pusha
sub
sarl
cmc
cmp
sbb
pusha
mov
dec
mov
and
or
adc
pushf
jb
mov
mov
in
cwtl
mov
je
inc
imul
adc
xor
and
hlt
xchg
sbb
adc
fdiv
pop
repz
adc
enter
mov
push
daa
daa
dec
enter
aaa
mov
pop
popf
mov
xorb
ret
rcll
inc
data16
es
cmp
insl
xor
dec
xchg
ret
lahf
sub
mov
mov
sub
jge
xchg
pop
jecxz
push
push
sub
aad
cltd
sbb
push
add
or
xor
inc
push
xor
cld
jle
sub
les
int3
nop
add
xorb
mov
adc
out
jle
into
sbb
push
inc
dec
lea
fildl
jl
or
in
jmp
xor
xor
pop
pop
repz
lret
aas
into
mov
pop
jle
insb
jnp
push
cld
mov
mov
inc
stc
add
cmp
hlt
inc
nop
das
dec
jb
pop
mov
mov
ds
fwait
je
mov
mov
mov
out
or
mov
hlt
lods
mov
loope
xor
push
pop
sub
fidivrs
fsts
imul
out
cltd
dec
lods
pop
xor
in
mov
int
notl
inc
shlb
test
aad
jne
mov
mov
lds
push
loope
inc
std
fildl
repz
sbb
stc
or
mov
das
xchg
out
in
dec
mov
cmp
iretw
add
push
dec
rorl
sbb
adc
or
jae
cmp
es
add
jl
lahf
or
aad
stos
jae
jns
insl
sbb
lret
xchg
or
jbe
std
andl
sarb
xchg
and
in
push
test
int3
cmp
adc
cld
imul
ret
push
lea
inc
pop
cmp
iret
popf
xor
sbb
adc
testb
or
fwait
je
dec
and
mov
js
ret
daa
hlt
mov
sub
imul
push
pop
inc
in
not
push
stos
mov
push
ficomps
shrb
repnz
inc
or
lods
js
sub
aas
lods
mov
in
xor
push
pop
jge
es
or
out
in
mov
push
aam
scas
inc
aam
ret
dec
sahf
mov
call
lock
nop
or
xchg
call
sub
xor
pop
out
sub
adc
loop
and
dec
mov
imulb
stos
hlt
push
adcb
ljmp
jno
popf
sub
adc
xor
out
ret
test
pop
jl
and
cmp
jbe
inc
sbb
jecxz
sub
fwait
push
imul
and
mov
xchg
pop
gs
cli
xlat
or
insb
into
sbb
inc
negl
shll
mov
mov
jecxz
sub
jg
cwtl
lahf
ficompl
jne
jnp
cmpsb
xchg
loop
mov
in
inc
idiv
mov
push
in
jl
pusha
mov
test
mov
inc
icebp
push
push
inc
mov
lcall
mov
mov
mov
iret
out
dec
sub
sarb
mov
stc
test
cmp
dec
mov
and
mov
mov
test
negb
xchg
jne
xlat
push
popa
ret
push
pushf
and
mov
lret
sbb
aam
jae
cmp
mov
out
or
outsl
jle
fwait
pop
aas
sahf
xchg
dec
cmpsl
sbb
inc
cmp
nop
xor
mov
xchg
cmp
leave
adc
inc
mov
sbb
outsb
add
js
out
push
jge
adc
gs
cmp
mov
xchg
mov
ret
cmp
or
push
push
loopne
mov
jno
jge
and
mov
les
push
sub
mov
mov
fistl
js
xchg
push
sub
fistps
adc
add
scas
gs
gs
xchg
clc
dec
push
mov
les
add
add
jno
jns
jo
mov
dec
mov
mov
dec
insl
loope
dec
insb
xor
pop
popa
adc
into
add
lea
scas
xor
mov
inc
jge
sarl
mov
push
aaa
xor
js
sub
mov
nop
in
fcoml
sub
jl
out
jb
pop
sub
clc
fld
xlat
sbb
stc
mov
and
lods
inc
js
in
jmp
sahf
fcoml
shlb
inc
leave
pop
xchg
dec
and
dec
rol
test
test
jbe
loop
fisttpl
fidivrs
clc
arpl
inc
subl
jle
ret
dec
ja
pop
mov
inc
jns
and
loope
daa
sbb
repz
cs
mov
mov
inc
pushf
jb
cs
push
sbb
push
paddsw
push
add
aas
pushl
std
imul
mov
in
xorb
aam
das
jle
nop
lds
es
mov
mov
push
mov
stos
and
testb
or
cmc
jmp
or
mov
or
loop
scas
or
xchg
jno
dec
rcll
and
dec
call
add
xor
mov
add
outsl
sahf
je
ja
inc
cltd
movsb
arpl
ret
push
inc
jg
lods
add
xor
mov
aad
das
mov
ret
adc
fadds
jns
xchg
xor
push
sbb
lock
mov
jo
mov
xor
pop
cwtl
push
sti
jb
dec
adc
test
xchg
clc
lret
pop
xchg
inc
in
mov
mov
and
cmc
call
push
jp
and
add
and
inc
cld
imul
sbb
lock
or
pop
stos
mov
add
dec
jp
popf
adc
xchg
or
xor
or
fsubrl
xor
in
cmpsl
xchg
sub
lret
cmovs
gs
adc
arpl
jbe
popf
jecxz
mov
pop
out
dec
cli
mov
xor
jecxz
and
and
mov
dec
sbb
adc
enter
fwait
jb
sbbl
repz
mov
sarb
xor
mov
jns
add
mov
fildl
fists
pusha
adc
cmc
mov
push
int3
nop
xor
addr16
sub
call
xor
sub
popf
enter
repnz
xchg
jp
fld
push
hlt
sub
loopne
es
push
pop
fmull
mov
movsb
daa
push
dec
rcrl
mov
leave
adc
mov
or
xchg
push
out
js
pop
and
fisttpll
mov
insl
jne
and
pop
inc
cmp
xchg
and
mov
mov
mov
ljmp
addr16
mul
xor
insl
outsl
pop
sbb
cwtl
sub
push
in
movb
pop
ret
inc
mov
dec
sbb
push
in
in
mov
std
push
neg
scas
add
bound
negb
mov
jge
jl
in
outsl
lods
cmpsl
xorl
data16
or
in
scas
mov
imul
and
scas
xor
pop
setle
les
xchg
out
xor
shlb
sbb
mov
xchg
mov
adc
rorl
clc
and
mov
int
leave
mov
mov
iret
in
imul
ficoms
push
and
push
sub
mov
push
or
out
xlat
mov
out
push
inc
and
inc
cmp
sti
pop
in
pop
sub
add
push
mov
addl
xchg
mov
pushf
add
rol
xlat
or
lret
aam
dec
sahf
je
xchg
push
fdivrl
xchg
data16
in
push
rorb
adc
fld
testb
or
or
insl
mov
sar
pop
in
dec
pop
sub
inc
loope
pushf
gs
es
aas
pop
mov
pushf
lea
imul
loope
mov
vpcmpgtd
push
sahf
ljmp
bound
or
roll
mov
in
push
lea
sub
movsl
rcll
mov
pop
and
fcomps
jne
add
xor
lds
repnz
gs
pop
pop
cmpsb
xchg
mov
pop
cmpb
add
pop
mov
test
lcall
popa
rcll
roll
leave
sbbl
jle
daa
jge
clc
mov
daa
pop
call
outsl
loop
mov
sub
jae
lcall
lea
push
int3
mov
aam
sbb
dec
int3
or
fisttpll
xchg
sub
mov
add
lcall
arpl
mov
cmp
mov
sbb
loop
cs
push
adc
in
testb
subb
rorl
je
lock
ja
add
rcll
pop
fcmovne
lock
popa
add
ja
push
mov
movsb
aam
adc
js
cltd
xor
mov
push
insl
in
inc
bound
xchg
cmp
test
xorb
jns
inc
cmp
and
negb
push
movsl
icebp
iret
ret
mov
test
sub
mov
jbe
jge
or
sub
mov
fs
out
cmp
cli
inc
mov
mov
rcrb
xlat
mov
mov
and
ja
sbb
jge
aad
pop
sbb
popf
jmp
xchg
in
mov
test
stc
adc
jbe
out
call
cmp
xor
leave
cmpsb
cwtl
fists
std
adc
cmp
dec
mov
push
jo
lods
xor
push
lcall
add
mov
jae
push
repnz
and
dec
les
lods
ja
adc
fnstenv
dec
sub
inc
cmpsb
sub
testb
test
into
jne
mov
scas
mov
cmc
lret
cmpsb
roll
ljmp
fsubp
cmp
jp
cmpsl
and
mov
mov
cmp
xor
enter
jg
push
mov
jae
jae
add
cmp
cmp
enter
in
out
ret
add
out
pop
int3
test
add
mov
jo
mov
int
loop
jbe
in
fcomip
out
das
ds
fwait
lahf
sbb
call
out
out
iret
ret
test
mov
mov
je
aad
inc
fs
stos
dec
xor
daa
sub
test
mov
popf
mov
sbb
pop
inc
cld
das
mov
loopne
sub
cwtl
ficoms
pop
push
std
popf
and
adc
in
adc
cmp
xchg
cwtl
xchg
inc
sub
int3
xorb
mov
ds
in
jnp
out
xchg
and
pop
insb
jno
addr16
or
std
push
das
xor
roll
cmp
mov
stos
pop
cmpsb
add
and
xor
insb
push
or
cwtl
out
test
dec
test
lahf
jo
cli
pop
push
cli
jg
sub
sub
mov
int3
jb
xchg
das
sub
es
cmpb
scas
mov
sub
mov
repnz
push
xor
ja
lds
jmp
push
mov
sahf
dec
push
jmp
xchg
in
push
call
into
mov
dec
xchg
lock
test
cld
out
mov
xor
mov
pop
cli
test
sahf
cmpsb
add
pop
je
repz
js
fdivs
mov
aad
inc
cld
push
mov
adc
inc
cmpsl
cwtl
xchg
andl
mov
mov
xchg
loope
dec
pop
leave
stos
xchg
je
mov
pop
sbb
mov
or
arpl
adc
scas
scas
push
aaa
outsl
jo
inc
outsb
fwait
inc
imul
loopne,pt
sbb
arpl
push
lret
cwtl
push
outsl
mov
push
mov
jae
call
fimuls
dec
scas
xchg
shlb
or
dec
imul
in
in
and
cld
insb
add
adc
fisubrl
je
xor
pop
pop
cwtl
and
std
xchg
push
pop
push
lea
sbb
cld
push
cld
aas
in
das
dec
mov
xchg
jbe
and
repnz
clc
pop
xor
mov
test
push
push
cwtl
add
std
enter
mov
out
pop
add
push
aas
cmp
scas
shrl
dec
lret
push
push
xchg
call
mov
mov
cmp
lds
scas
loop
mov
mov
dec
jne
push
mov
dec
or
out
imulb
add
xor
ret
xchg
lahf
xor
mov
push
sub
ss
mov
inc
add
xchg
inc
pushf
loope
pop
inc
cmp
pop
xor
jp
inc
push
lock
mov
arpl
enter
scas
enter
ljmp
shrd
cltd
sahf
add
dec
mov
fnsave
jnp
in
pop
mov
mov
ljmp
aas
rolb
pop
jb
data16
sub
daa
pop
mov
das
nop
inc
adc
push
cli
rcrb
movb
out
add
aas
mov
ret
add
loopne
cmp
lret
mov
sarl
fisubs
out
iret
and
and
mov
cmp
mov
mov
mov
xchg
repz
cli
loope
sbb
lret
and
rolb
mov
loop
pushf
mov
mov
outsb
jnp
rolb
mov
jbe
daa
sub
js
jnp
mov
xchg
push
push
arpl
jno
mov
xor
enter
inc
loopne
es
mov
das
stos
or
mov
jge
xchg
and
jne
mov
cld
popa
repz
jno
pop
xor
subb
into
sub
mov
fldt
pushl
xchg
mov
mov
mov
jp
cld
les
icebp
mov
jo
pop
dec
pop
add
inc
add
imul
push
dec
jo
jg
sbb
cld
mov
mov
stc
xor
test
mov
sub
xor
jg
imul
and
xchg
fistpl
fadd
sbb
ror
fs
xchg
ret
pop
jg
jmp
ret
push
clc
mov
mov
inc
add
cs
test
push
xchg
pop
push
mov
sbb
push
dec
pop
fdivrl
packsswb
jno
sarl
aas
sbb
test
inc
mov
sub
xor
mull
jecxz
fldl
xor
dec
ret
call
fists
outsl
outsl
test
cmc
dec
repnz
cld
and
xchg
rolb
jne
cmp
stc
shlb
enter
mov
cmp
pushf
sahf
popa
out
repz
mov
add
das
push
adc
ljmp
lret
xor
imul
cltd
cwtl
inc
mov
jo
mov
add
je
jmp
movsl
push
xor
mov
dec
jl
jno
cmp
iret
lea
sub
into
add
pop
xor
dec
leave
in
mov
int
and
adc
mov
jae
sbbl
enter
jmp
jbe
sbb
in
mov
mov
aaa
mov
dec
cmpsb
pop
pop
stos
sub
fdivrs
xchg
jne
add
test
and
pop
dec
xchg
hlt
enter
cmc
dec
fmull
push
popa
jne
fildl
test
popf
insl
repz
mov
aaa
or
in
lock
lods
cmp
jl
add
pop
inc
sub
pusha
fdivrs
sub
mov
xchg
jg
and
or
call
shlb
dec
cmc
push
in
cmpsl
fadds
leave
cmp
push
shll
loopne
std
mov
push
mov
mov
mov
mov
pop
push
lcall
cmp
xor
fadds
shrl
jne
jno
and
cmpsl
and
adc
push
pop
jnp
jge
call
and
pusha
xchg
mov
data16
push
adc
dec
roll
in
mov
mov
push
mov
loope
mov
jg
cmc
pop
sti
mov
lcall
mov
popf
add
call
mov
or
dec
mov
les
psubd
sbb
mov
loop
call
pop
cmp
cwtl
and
jp
add
inc
xchg
inc
mov
test
pop
push
and
push
cwtl
and
mov
in
lock
push
sub
xor
int3
lcall
icebp
push
or
add
adc
pop
dec
add
sbb
cwtl
mov
loop
mov
jbe
into
push
mov
sub
popa
cli
data16
insb
jns
mov
cmp
sarl
or
hlt
into
insl
pop
adc
inc
stc
into
pop
push
aad
adc
add
shll
dec
and
pop
mov
loop
insb
cmp
cli
icebp
cmp
mov
xor
add
ss
or
inc
mov
lahf
aas
sub
adcb
pop
inc
pop
mov
lea
pop
bound
andl
bound
dec
xchg
mov
js
stos
lods
sub
out
mov
sub
jl
aam
rorb
or
xchg
ja
scas
jge
fnsave
inc
mov
mov
xchg
jbe
iret
jmp
sub
jl
jnp
cmp
add
enter
stos
pop
mov
dec
lock
add
xlat
arpl
je
stc
in
fstp
mov
pop
and
pop
shr
and
ja
add
js
jp
dec
push
lods
xchg
jo
pop
ja
rcr
lods
pop
pop
lret
xchg
push
rorb
es
xchg
and
or
lcall
pop
or
iret
ret
je
mov
jae
xor
enter
test
insl
inc
aaa
test
xor
mov
and
pop
dec
hlt
push
repnz
mov
test
repnz
sti
aaa
push
mov
inc
clc
sbb
icebp
shlb
cmp
adc
mov
test
push
xor
xorb
inc
pop
sbbl
mov
scas
idiv
jne
push
pop
inc
inc
add
or
push
adc
jge
lds
mov
shlb
add
xchg
mov
test
popa
mov
scas
and
cs
xor
inc
xchg
inc
scas
jno
mov
mov
scas
cmp
shl
and
pop
sbb
xchg
and
into
bound
jnp
repnz
and
push
popa
bound
mov
push
dec
jno
das
pushf
lock
pushf
sub
sub
imul
pushf
sarb
or
lea
or
cmp
scas
loope
jle
push
in
jns
cli
insl
push
push
stc
mov
inc
jbe
lods
jg
das
push
sbb
add
add
fstps
sbb
in
push
arpl
lea
call
lock
or
mov
mov
mov
add
adc
or
push
or
loope
cltd
pop
adc
xchg
lea
fidivrs
in
test
inc
mov
lahf
sub
inc
ficompl
sbb
push
sahf
add
mov
inc
pop
sub
mov
push
push
icebp
hlt
sahf
cmp
and
adc
inc
sub
addr16
shll
xchg
stos
scas
jae
in
pop
mov
and
pop
lods
fwait
cltd
aam
xchg
imull
mov
icebp
fcomps
ret
jbe
jb
pop
leave
cmp
cmp
push
ja
mov
adc
sbb
xchg
cld
pop
push
ja
push
pop
cmc
sub
mov
jg
push
or
mov
shrd
into
sbbl
mov
fstps
pushf
sub
inc
push
push
in
pop
je
push
and
fs
roll
ds
add
out
dec
xor
pop
sbb
adc
mov
jle
and
bswap
sbb
adc
imul
or
dec
test
fsub
sub
fwait
push
fsubl
add
xor
in
cltd
jnp
in
cmpsb
test
fisubrs
lea
fmuls
in
adc
cmp
sub
inc
and
cmp
shr
push
push
out
push
cmp
gs
mov
mov
sbb
movsl
call
jle
pop
jl
stc
and
loopne
xor
popa
lods
sbb
or
popa
xchg
call
pop
psubusw
cmp
fmull
sub
mov
fsts
es
icebp
xchg
ret
adc
fcmovnbe
xchg
or
add
jb
jne
imul
push
out
mov
dec
jnp
pop
fcompl
sbb
call
xchg
pop
sbb
scas
inc
jo
test
inc
mov
es
sarb
pusha
ret
clc
mov
stos
or
icebp
out
inc
sub
cmp
add
xchg
inc
jns
jbe
xor
pxor
lret
lea
xchg
dec
inc
cmpb
mov
cli
push
es
dec
in
hlt
adc
fs
adc
mov
and
cmp
lahf
sbb
ficomps
mov
dec
icebp
pop
mov
xlat
mov
outsl
xchg
mov
mov
inc
cmc
pop
pop
lret
pop
scas
sbb
int3
adc
and
push
xor
mov
pop
push
mov
push
pop
inc
rorb
int3
jb
jle
xchg
in
xor
test
pop
addr16
inc
adc
mov
mov
pop
inc
int3
test
push
inc
jne
xchg
mov
loop
lock
lea
push
cmp
inc
rolb
dec
inc
or
fwait
in
sahf
aaa
or
xor
mov
loop
push
pop
xchg
leave
lret
sub
ljmp
leave
movsl
loope
insl
imul
add
sbb
lea
mov
jg
fimull
scas
bound
add
movsl
rol
incl
jmp
and
stos
mov
test
jae
hlt
jns
jg
mov
adc
pop
jge
push
cmpsl
in
push
adcl
out
aam
jb
mov
mov
in
mov
pop
out
pusha
mov
fistps
pusha
rcll
int3
mov
test
mov
data16
das
rcrl
out
cli
sub
dec
mov
mov
es
les
sbb
or
mov
mov
cmpl
aas
fcomi
aaa
les
dec
imul
push
clc
xchg
push
and
in
mov
incl
cmp
out
sub
sbb
cmp
sbb
sub
sub
cltd
mov
enter
jns
mov
xchg
arpl
scas
adc
ds
and
lahf
ss
aas
mov
lods
mov
inc
and
out
hlt
xlat
fwait
sub
xchg
push
aaa
in
icebp
dec
packssdw
test
sub
outsl
lret
mov
into
shll
and
loopne
es
mov
and
jge
pop
or
icebp
cmpsb
ljmp
imul
jp
cmp
push
sbbb
call
xor
sub
pop
xchg
daa
int
push
add
repnz
cmpsb
leave
inc
inc
xchg
pop
clc
mov
inc
dec
mov
xchg
dec
int
ljmp
cwtl
jo
xlat
jl
pop
fisttpl
stc
sub
stos
dec
das
adc
sub
out
aas
mov
movsl
push
jo
rcr
daa
pop
dec
mov
push
jl
xor
fmuls
pop
addr16
sub
lds
xchg
imul
cltd
or
arpl
mov
test
inc
bnd
sub
es
or
mov
comiss
sub
dec
icebp
and
sub
daa
sub
mov
jns
nop
test
lret
adc
outsl
movsl
mov
sbb
lret
pop
add
hlt
js
daa
push
or
sahf
lahf
out
aas
cmc
stos
lret
adcb
adc
mov
arpl
les
stos
int3
in
mov
mov
lcall
std
push
sub
push
cmp
mov
stc
fwait
and
pop
fadds
mov
sub
mov
lock
jmp
jo
sbb
insb
ret
and
sub
dec
je
pop
inc
inc
cmp
nop
cmc
xlat
iret
dec
imul
xchg
push
inc
xchg
shlb
jmp
js
inc
pop
imul
data16
dec
push
cmp
cmp
subl
xor
cmp
push
rsm
out
jmp
loop,pn
je
jns
lcall
adc
sub
bound
pop
ja
hlt
imul
push
in
cwtl
sarl
jmp
adc
pop
adc
mov
cld
adc
cwtl
jo
aaa
arpl
xor
push
cmp
ss
cmp
push
lods
pop
ss
jmp
hlt
loope
cld
jg
fsubrs
int
mov
icebp
pop
testb
push
xor
adcb
orl
and
cld
dec
lret
push
into
jmp
adc
aaa
sub
xchg
add
out
rcrb
sar
cmpsb
push
int3
dec
mov
mov
lret
das
jl
and
ss
out
shll
jle
mov
xsha256
cmpsb
xchg
cmc
movsb
int
adc
and
dec
xlat
leave
hlt
out
jge
insl
or
pusha
push
rcll
mov
mov
sbb
and
jg
pop
js
call
mov
lahf
call
imul
push
cmp
cmpsl
mov
sbb
inc
jp
test
mov
sbb
jno
call
cld
stos
loope
or
aas
pop
jne
rep
iret
xchg
and
xchg
cs
sub
fdivrs
inc
adc
scas
clc
push
xchg
fstl
and
aam
out
shlb
mov
imul
sbb
xchg
outsb
in
and
and
mov
sbb
jnp
mov
imul
daa
mov
push
pushf
fmuls
ds
and
sbb
dec
dec
xchg
and
insb
inc
xchg
mov
out
add
lcall
outsb
dec
mov
test
sbb
cmpsb
ja
xchg
psrad
mov
cmp
inc
es
cltd
xchg
in
repnz
sbb
out
add
add
xor
icebp
and
or
rorb
rolb
xchg
jnp
push
jno
adc
pop
out
addr16
shlb
or
jno
mov
xchg
jae
iret
mov
test
adc
aas
mov
push
jne
xchg
mov
mov
out
cmpsb
fucompp
or
aad
lds
add
mov
sbb
pushf
call
std
sbb
mov
pop
shlb
mov
ud1
xchg
mov
add
out
aas
add
sub
xor
or
mov
adc
sbb
repz
fcoms
repnz
mov
test
fsub
inc
test
das
and
cmp
lea
jl
cmp
ret
lcall
loope
sbb
jne
sub
lea
cs
test
mov
mov
mov
cmpsl
cltd
pop
or
fs
inc
lret
adc
xor
imul
rorb
mov
xchg
push
or
and
ret
int3
inc
inc
rolb
stos
sub
rcll
mov
movsb
cmp
cwtl
daa
push
ss
mov
jb
add
sahf
jo
xchg
sub
mov
repz
mov
jmp
out
divl
mov
mov
cld
data16
mov
sti
stos
pop
cltd
ret
push
mov
mov
in
dec
or
in
dec
jno
test
ret
std
aaa
pop
lock
xor
mov
jo
cmpsb
pop
cmp
or
push
scas
inc
or
add
fdivrl
inc
data16
jno
pushf
mov
loope
inc
bound
mov
mov
mov
aad
insl
push
mov
lret
dec
mov
in
pop
mov
outsb
cwtl
push
inc
or
pusha
pop
stos
aaa
popa
lret
push
pop
insb
loope
leave
sub
mov
push
movsb
lret
sbb
sbb
fbld
jb
out
xchg
ret
popf
das
jle
jnp
test
pop
adc
xlat
aaa
xchg
fmuls
inc
addr16
int
xchg
fistps
ljmp
xchg
inc
leave
inc
fwait
or
mov
in
leave
xchg
xor
iret
add
mov
xchg
or
xchg
or
js
push
js
in
mov
setno
sbb
aas
jae
int3
js
enter
xchg
xchg
enter
nop
psubsb
push
loop
push
insl
std
mov
pop
test
cmp
cmp
testb
pop
cmp
ljmp
jbe
imul
imul
repnz
mov
adc
mov
mov
push
push
lcall
mov
jmp
xor
repz
pop
jno
divb
loope
jp
test
inc
or
cmpsb
inc
add
leave
movsl
adcl
aaa
jo
pop
insb
dec
int3
push
inc
lods
fsub
adc
pop
jg
inc
and
pop
jge
scas
pextrw
add
jmp
pop
push
pusha
test
pop
mov
adc
fcoml
lock
cwtl
adc
cmp
clc
test
push
xchg
rcrb
adc
sub
adc
lahf
pushf
inc
ja
adc
push
adc
pop
enter
lret
sub
data16
icebp
jb
inc
std
or
lret
dec
scas
push
sub
out
cmpsb
jmp
shrl
mov
xchg
inc
rcll
mov
jg
xchg
push
jo
loopne
sbb
lcall
int
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
mov
bound
pop
bound
push
outsb
push
xlat
or
dec
out
mov
std
testl
bound
cs
xchg
loopne
mov
pop
out
add
push
in
popf
bound
mov
rclb
jg
mov
push
gs
rclb
popf
out
jle
jno
xchg
aad
push
dec
sbb
pop
ja
push
push
rolb
enter
inc
dec
xchg
mov
inc
inc
add
mov
jnp
xchg
push
push
and
lods
xchg
pop
aad
lods
adc
in
enter
scas
pop
ret
lahf
sbb
daa
out
mov
pop
mov
jl
push
and
negl
dec
je
aas
cmp
aam
xchg
repz
mulb
pop
test
cmp
aad
and
arpl
rol
subb
add
lret
push
call
push
js
iret
loop
ret
sub
jge
sti
subb
push
jne
fwait
and
jl
mov
inc
rcll
sub
mov
sbb
push
fisttpll
sub
mov
pop
pop
out
fisubs
sub
add
lods
xor
decl
or
in
xchg
movsb
push
dec
aaa
pop
lcall
es
xchg
xchg
in
inc
test
and
jecxz
leave
push
js
loope
sub
movsl
adc
mov
stc
jle
inc
pop
jmp
cmpsb
lcall
scas
popa
ror
or
sahf
aad
loope
or
or
xor
add
fnstcw
sub
dec
lea
pop
fsubrl
jb
pop
jmp
arpl
je
iret
into
adc
mov
sbb
adc
lret
sub
vpmacssdd
jp
push
push
pop
cmp
push
subl
cmp
shlb
popf
jbe
pop
jno
xchg
add
ds
out
jns
xor
sahf
stos
divl
dec
add
xor
pmaxub
add
stos
orb
lock
hlt
lahf
pop
adc
xchg
cmp
push
add
fbstp
xor
addb
leave
fldcw
popa
mov
clc
pop
or
sti
xor
push
sbb
arpl
pop
sub
out
repz
inc
scas
dec
mov
inc
sar
ret
fsubrs
inc
nop
fwait
data16
insl
pop
ljmp
dec
leave
cwtl
xchg
outsl
cmp
je
add
sub
sbb
cmc
push
inc
mov
fs
xor
sub
lock
imul
ds
pop
mov
xlat
fcmovb
lret
push
mov
mov
stos
lret
fldenv
out
jne
xchg
lds
adc
cmpsl
xchg
sahf
cli
mov
mov
push
lds
mov
xchg
or
dec
cmp
scas
les
xchg
or
cmp
pushl
sbb
and
sbb
lock
mov
imul
or
int3
scas
pop
aaa
jbe
scas
mov
stos
push
popf
pop
mov
mov
in
xchg
mov
shll
jg
xor
shr
xchg
xchg
cmp
out
lds
loopne
sub
mov
addr16
pop
xor
sbb
pop
jge
and
pop
call
cmp
mov
push
dec
insl
xlat
or
cmpsb
shll
loopne
in
fcoml
pop
rol
mov
mov
lock
push
sub
jns
cli
xchg
mov
xor
lret
popf
outsl
mov
mov
mov
pop
dec
inc
lds
and
fstp
out
dec
rcr
pop
pop
dec
jmp
leave
jae
sub
or
xchg
pop
fwait
out
add
mov
mov
cmpsl
sub
xchg
dec
sbb
push
and
call
pop
ror
inc
mov
ds
pop
lahf
cmp
pop
push
stc
incb
sub
cmp
and
lock
ss
jns
mov
push
jnp
movsb
push
inc
cwtl
jmp
lock
jecxz
int3
push
push
gs
xlat
xor
fnsave
data16
iret
in
adc
pop
push
call
adc
mov
push
ret
mul
enter
mov
dec
push
xor
imul
mov
insb
test
inc
lods
cmp
fildl
lret
movsl
xor
in
jp
cmp
leave
lea
cmpsb
sub
push
lods
adc
fildll
iret
pop
ret
shrl
xor
aaa
add
dec
frstor
mov
pop
mov
mov
nop
and
pop
sbb
dec
addr16
les
jge
arpl
jg
xchg
int3
mov
cmp
cmp
xor
add
jae
cmpsb
arpl
cmpsb
aaa
jp
popa
push
js
fcomp
ds
shrl
or
or
mov
sar
adc
pop
ljmp
sbb
cmpsl
sub
push
ffreep
mov
mov
addb
inc
in
sub
jbe
mov
out
push
push
jge
xchg
test
sbb
aam
lods
scas
fyl2xp1
mov
add
jb
ret
das
ss
lds
adc
testl
aaa
dec
dec
push
mov
cmc
xorl
jbe
jae
loopne
jno
fistl
jmp
loopne
inc
mov
rorb
fcmove
mov
dec
adc
push
inc
fistl
xchg
or
not
mov
jp
mov
in
xorl
push
bound
push
loopne
mov
mov
and
mov
shl
repz
fisubrs
je
inc
leave
repz
xlat
ja
xchg
fs
and
sahf
sub
xlat
mov
or
adc
clc
int
addr16
test
les
sub
xor
fsubs
mov
subl
and
xlat
pop
lds
lret
sbb
push
std
cmpsb
loope
inc
cmpsb
gs
mov
scas
add
repz
or
mov
ret
jge
into
enter
nop
xchg
gs
fs
test
pop
stos
mov
daa
loopne
xor
lcall
dec
lahf
sti
mov
xchg
adc
leave
mov
scas
and
or
cld
pop
in
leave
inc
bound
insl
clc
cmp
push
cld
sub
xor
sbb
inc
cs
pushf
push
decl
test
xor
ret
inc
dec
mov
mov
push
mov
sub
mov
mov
insb
push
shrb
lods
orb
or
cmp
jmp
sbb
jns
and
jb
pop
mov
std
shrl
adc
jne
fadd
fnstcw
pop
xor
rcrl
in
xchg
sbb
and
jp
and
jle
dec
icebp
flds
stos
sbbl
ljmp
mov
xor
lcall
jg
data16
test
sbb
dec
cmp
push
jge
loop
jo
outsl
push
cmc
lods
sbb
inc
push
push
and
mov
lock
jne
jbe
iret
mov
mov
inc
cmc
in
sarb
jno,pn
pushf
cltd
adc
cwtl
cwtl
cmp
leave
xor
dec
aad
mov
mov
adc
sbb
pop
shlb
dec
mov
cmp
adc
or
xchg
out
repz
cltd
or
xchg
in
aam
leave
cmc
sbb
out
ret
int3
jmp
dec
ss
sarl
clc
imul
in
pop
fucomip
jp
ja
pop
push
mov
sub
xchg
fidivl
xchg
pop
mov
test
fs
xor
mov
cs
xchg
jle
add
test
loopne
xorb
rclb
repz
mov
rcrb
loope
repnz
out
fidivs
cmp
xor
cwtl
enter
das
outsl
fstpl
stc
enter
cmp
popa
xor
mulb
cli
jno
xchg
lods
adc
xchg
repz
jl
outsb
shr
push
add
xchg
ficoml
pop
or
cmp
loope
cli
and
lods
ds
xchg
push
dec
and
push
jmp
fs
mov
ss
sub
push
jle
push
mov
pop
aam
mov
fistps
int
fistl
add
xchg
xor
mov
in
mov
sub
pop
mov
movsb
sub
mov
fistl
sbb
dec
in
dec
pop
addb
push
jne
sahf
stc
pop
cwtl
xorb
and
clc
clc
fs
xor
test
cmp
push
jge
and
push
push
cmp
xchg
daa
mov
imul
movsl
lds
daa
xchg
xor
mov
mov
aad
jo
jge
adc
in
test
push
push
sub
sub
cmc
adc
scas
addr16
jb
cmp
push
mull
je
xlat
adc
loopne
bound
sub
push
fdivp
jnp
mov
sahf
stc
inc
ret
xchg
out
jns
add
xor
jnp
mov
dec
add
out
dec
iret
push
mov
push
jnp
icebp
imul
neg
lods
testb
movsl
outsl
cmp
cmp
pop
pop
out
jecxz
fs
cmp
and
aas
pop
sbb
lret
int
or
push
cmp
cmc
stc
inc
mov
inc
addr16
inc
sbb
adc
test
je
imul
jmp
jnp
mov
lea
gs
ret
push
mov
pop
push
cwtl
lea
lcall
jbe
push
data16
sbb
sub
jg
es
test
inc
xor
jne
test
insb
cmp
push
in
mov
lret
xchg
daa
test
jnp
stc
std
shl
and
or
dec
dec
ja
jno
js
stc
mov
push
jmp
nop
pusha
fsts
xchg
loop
mov
sub
cmp
fisttpll
mov
inc
sub
adc
sbb
xchg
loopne
mov
mov
and
test
mov
push
test
in
in
mov
clc
jb
shll
lds
add
or
loop
sub
or
mov
push
push
pop
sbb
jnp
mov
scas
insl
sti
faddl
inc
adc
out
mov
add
mov
mov
loopne
cmpsl
push
lea
gs
fdivr
mov
add
int3
or
addl
mov
out
adc
mov
jnp
mov
lcall
sub
test
mov
fsts
popa
adc
sbb
dec
jnp
inc
sub
decb
jle
pop
push
dec
dec
adc
and
int
dec
or
mov
iret
sub
add
rorb
jle
fcoml
fidivs
jecxz
cwtl
xchg
cltd
inc
inc
js
je
pop
test
cmpsl
inc
pop
mov
andl
add
xchg
loop
mov
shrl
cmp
fsubl
sahf
jb
jg
popa
xlat
in
push
ljmp
dec
test
inc
dec
cmp
xor
mov
pop
shl
cmpl
sbb
xchg
sbb
sub
jnp
add
push
stos
fimull
out
mov
ja
jp
xchg
cmpsl
push
insb
mov
cmpsb
daa
push
sbb
sub
mov
inc
imul
pushf
add
or
pushl
mov
or
lret
xchg
cmc
jno
int
loope
and
xchg
icebp
lea
inc
cmpl
mov
loop
xchg
jns
cmp
outsl
pop
xor
fwait
dec
mov
mov
std
in
stc
jnp
mov
mov
push
testl
mov
imul
jmp
imul
xor
cmp
leave
scas
int3
adc
sti
xor
ret
inc
pop
in
lds
cli
pusha
fcoml
push
or
or
pop
pop
dec
or
pushf
adcl
or
and
mov
fnstenv
mov
inc
bound
out
sbb
enter
cmpl
std
cmp
sti
pcmpeqb
and
cltd
mov
cld
inc
jmp
fidivrl
mov
scas
aam
out
sub
jmp
sub
jb
xchg
outsb
or
fs
push
jnp
negb
mov
imull
ret
sub
les
add
jl
jle
shll
or
das
or
cli
inc
jle
pop
das
cltd
mov
pop
std
inc
and
pop
push
dec
fstps
outsl
mov
mov
push
jmp
out
negl
insb
psraw
fneni(8087
data16
add
jne
adc
inc
sub
pop
push
jle
scas
adc
sbb
std
inc
mov
std
xchg
loop
push
mov
stos
cmpsl
fisubs
or
ja
cld
dec
or
aad
test
clc
stos
xchg
push
mov
shrb
pop
jg
popa
lcall
lock
dec
jp
push
jne
push
xor
aas
call
mov
insb
outsb
and
sbb
add
inc
cmp
jl
lods
aam
mov
xchg
xor
xchg
add
adc
in
out
fcoml
sbb
dec
cmp
lcall
mov
jmp
mov
fnstcw
scas
lods
sub
push
mov
lock
fdivs
or
mov
icebp
fwait
cli
push
cli
sbb
clc
inc
mov
cs
out
dec
adc
sbb
mov
lods
icebp
cwtl
fnstcw
pop
in
dec
in
aam
pop
out
jp
in
xor
dec
add
add
cmp
ret
insl
push
sarl
mov
push
sbb
push
pop
xorl
scas
ficomps
push
sbb
xor
sbb
xchg
ds
xor
lock
pop
mov
add
push
repnz
push
dec
lods
in
mov
and
xchg
xchg
fdivl
sbb
mov
and
dec
cltd
mov
js
loop
leave
mov
pop
mov
outsl
sub
in
mov
mov
cli
jmp
sbb
out
test
ljmp
and
out
push
and
dec
inc
cmp
test
ljmp
js
push
mov
in
mov
ja
jns
ljmp
daa
mov
jbe
mov
or
xorb
adc
fidivl
not
shrd
add
cmp
jno
adc
lret
ret
mov
adc
pusha
pusha
pop
or
or
test
idiv
or
aam
insb
xor
mov
xchg
and
hlt
sbb
jge
pop
lods
mov
xchg
insl
dec
mov
xor
cltd
scas
pop
gs
add
icebp
imul
mov
fstpt
cmp
jle
dec
push
shl
sbb
pop
xchg
iret
mov
rcll
mov
push
clc
dec
dec
push
xor
jbe
dec
jl
sub
sbb
add
in
stos
les
jl
movsl
sbbb
mov
inc
ds
lods
mov
cmpsb
test
mov
jns
mov
ss
out
cld
mov
movsb
sub
cld
lahf
outsl
pop
into
movsb
push
mov
and
mov
jb
push
leave
out
xor
fnsave
or
repz
test
leave
or
out
mov
push
cmp
outsb
cwtl
cli
and
in
std
pop
insb
push
clc
sub
mov
cmpb
dec
xchg
lret
bound
add
std
xchg
scas
jecxz
jns
into
sahf
push
push
test
out
sub
jge
movsb
ljmp
mov
adc
ds
pusha
add
sbb
aad
daa
fs
push
jmp
sub
stc
test
xchg
mov
cmp
es
aad
enter
nop
xchg
rclb
cmpsl
test
fisttps
push
mov
addr16
int3
mov
sarb
out
fdivs
sarl
push
leave
lds
pop
lods
test
mov
pop
movsb
dec
insb
sub
dec
xor
sub
jb
out
add
fbld
sub
dec
int3
pop
notl
into
dec
add
cmpb
test
cltd
dec
mov
test
pop
pop
int3
xor
cmp
cmp
lds
ds
mov
cmp
push
ja
fisttpll
pop
es
aam
add
repnz
or
mov
out
lcall
in
es
and
insb
push
add
rorl
clc
inc
mov
clc
subl
or
sbb
in
lds
pop
stos
push
test
cmc
cmp
jp
mov
cmc
enter
std
nop
or
leave
mov
xlat
adc
aaa
jnp
rol
and
inc
adc
ja
and
lahf
int
out
pop
test
and
add
mov
and
sbb
repz
xchg
aas
cmp
add
mov
mov
movsl
test
mov
sarb
cli
repnz
lret
add
divb
dec
or
mov
and
mov
pop
or
iret
test
out
outsl
mov
mov
add
mov
inc
or
aam
push
jge
pop
adc
out
sbb
test
push
push
sbb
jge
xchg
outsb
push
xchg
dec
or
push
and
xor
mov
outsb
dec
out
add
ficomps
xchg
imul
adc
xor
mov
mov
fs
inc
sub
push
popf
inc
test
xchg
jecxz
and
pop
and
in
mov
jmp
hlt
xchg
cmp
cmc
and
je
das
jg
pop
stos
jp
in
andb
repz
pop
adc
sti
sahf
pusha
ret
inc
pop
mov
ds
pop
ja
mov
rcr
icebp
add
cmp
or
lret
ret
jecxz
lods
push
xchg
push
sbb
adc
aam
cs
sub
loope
cwtl
dec
out
cmp
fadd
cmc
lret
mov
or
aad
and
inc
int
jno
nop
outsb
dec
test
clc
mov
lcall
xor
mov
jb
and
add
xchg
or
xchg
or
shl
jmp
fnsave
sub
or
mov
xchg
pop
cmp
and
or
push
inc
push
ds
in
add
addr16
aas
ljmp
addl
call
pop
xor
jp
or
test
xor
mov
adc
xchg
repnz
mov
mov
sbb
xor
fwait
pop
les
add
push
mov
cmp
arpl
out
dec
aaa
popl
cld
fmuls
insl
jl
add
mov
bound
lret
pop
int3
lea
add
imull
mov
popa
into
mov
ja
pop
loope
mov
xor
push
mov
test
pop
mov
xchg
sarb
cltd
sub
cmp
or
loope
mov
fs
sahf
adc
aas
repnz
xchg
orb
adc
jae
scas
sub
sahf
sbb
jmp
xchg
cmp
arpl
and
js
jle
movsl
sub
mov
nop
push
sbb
mov
xchg
cmpb
fistps
or
pop
outsb
xchg
adc
push
outsl
ljmp
sub
jbe
hlt
inc
push
pop
push
mov
fwait
mov
push
pop
push
jae
cmp
lahf
xchg
imul
test
iret
sbb
mov
pop
mov
mov
push
push
jno
frstor
or
or
adc
adc
lcall
pop
add
xchg
dec
xchg
out
gs
adc
adc
pop
cmp
mov
pop
aas
cmp
gs
pop
push
inc
es
xchg
popf
xor
push
fnsave
lahf
add
fstl
jns
mov
es
push
js
pop
mov
mov
in
or
mov
sbb
imul
dec
push
sbb
or
jecxz
fiaddl
test
rcr
movsl
inc
pop
movsb
test
and
adc
repz
jo
xor
mov
push
mov
addb
mov
push
sti
ret
push
outsb
or
cwtl
ss
loop
sbb
cs
sub
inc
dec
mov
push
icebp
mov
mov
or
xchg
scas
sbb
xchg
mov
cmp
xor
inc
inc
cs
push
mov
jae
adc
jge
flds
js
push
cltd
das
stc
aam
int
dec
data16
mov
lcall
mov
movsb
je
adc
out
loope
outsl
mov
dec
mov
sarl
imul
sarb
add
imul
icebp
pop
shrl
mov
pop
aad
add
xor
rcr
sbb
daa
xchg
pusha
shll
dec
mov
or
and
sbb
sarb
cmpsl
add
inc
xor
cmpsb
jecxz
sbb
sbbl
dec
push
shlb
mov
fildl
inc
mov
das
stc
cs
jns
sub
pop
ffreep
push
lea
in
xor
push
cmpsb
or
rcpps
push
jns
loopne
jp
aaa
fucomi
andl
test
adc
sti
sbb
push
fidivl
es
pop
ja
addr16
cmpsl
stc
cmpsb
bound
gs
mov
inc
sbb
dec
sahf
adc
cmc
out
cwtl
out
fadds
imul
xchg
jbe
pusha
shll
push
dec
js
pop
arpl
sarb
mov
fnstsw
out
pop
cwtl
mov
xchg
adc
lock
or
cld
pop
cld
lret
in
mov
xchg
inc
adc
jmp
vpunpcklbw
add
loop
xchg
push
jno
lret
or
or
mov
lods
pop
mov
fcompl
cmpsl
aam
call
loopne
jle
jnp
lds
nop
enter
lock
stc
adc
hlt
xor
or
jns
addr16
jecxz
sub
rorb
and
cmp
adc
cmp
mov
mov
lds
ljmp
sbb
scas
in
mov
lcall
rcr
test
popa
sub
js
xchg
add
scas
lods
imul
dec
popf
xchg
je
cmp
jae
dec
mov
push
cmp
daa
fcomip
mov
xchg
adc
cmp
xchg
movb
adc
fildl
mov
enter
xorb
jae
test
mov
arpl
push
stos
dec
arpl
and
push
lret
mov
xor
pop
cli
leave
mov
sbb
repnz
push
cmpsl
pop
seto
nop
mov
rcll
jae
mov
sbb
mov
jne
aam
iret
shlb
test
xor
xorb
mov
aas
sbb
mov
icebp
cmp
push
add
push
int
pop
pop
fxch
pop
jl
mov
cmc
mov
imul
int
test
shll
mov
push
pop
sub
orl
cmp
xor
fdivp
fcomip
mov
mul
xor
jnp
mov
xchg
fbstp
sbb
or
gs
decb
cmpb
loop
jp
dec
sub
mov
lock
fld
fldl2t
inc
clc
jne
jbe
lret
popl
dec
mov
xacquire
dec
push
xor
fiaddl
mov
push
faddl
nop
cltd
fnstsw
inc
xor
or
jp
inc
inc
jmp
stos
pusha
out
mov
mov
adc
pushf
sbb
push
xor
sbb
repz
shl
lea
push
mov
jecxz
mov
sbb
je
fiaddl
and
into
adc
pop
int3
ret
lods
push
dec
or
call
hlt
fadds
sub
call
push
ds
das
and
jbe
jle
push
mov
or
loopne
arpl
mov
and
sbbl
jae
loop
clc
arpl
bound
lcall
xchg
out
das
jb
fs
sti
push
cmpb
popa
in
pop
cmpsb
loop
cld
mov
xchg
pop
inc
jo
and
dec
das
js
adc
in
mov
mov
add
sahf
xor
loope
push
xorb
mov
jnp
outsb
pop
mov
lods
xlat
push
inc
pop
outsb
push
fisttps
push
pusha
inc
into
inc
lret
sub
ret
lods
jno
cmp
xchg
fisubs
movsl
lcall
call
mov
subl
inc
sahf
xor
inc
mov
push
inc
xchg
sahf
popa
sbb
nop
mov
push
cmp
dec
push
fcompl
enter
jl
out
jo
jb
push
dec
addl
fstpt
add
int
daa
xor
push
jl
bound
mov
lcall
inc
shlb
jg
enter
jp
pop
popf
outsb
testb
sub
shrl
mov
jns
cli
out
add
test
mov
outsl
hlt
ja
lahf
lret
add
mov
sbb
cmpsl
inc
xor
sub
pop
and
mov
aam
hlt
shlb
push
test
jns
addr16
fwait
cmp
movsb
shr
or
and
cmp
xor
lret
fisubl
ret
cmp
out
push
hlt
xchg
push
add
xor
flds
pop
mov
das
hlt
xchg
pop
jge
or
ret
push
inc
fimull
popf
inc
bound
mov
mov
or
ror
jbe
push
mov
cmp
js
mov
cltd
jmp
jmp
insl
addr16
roll
shll
loopne
push
gs
xchg
cs
insb
shr
subb
movsb
adc
loopne
repnz
inc
nop
loop
mov
sbb
pop
dec
push
bound
aad
fsts
bound
jnp
pushf
mov
mov
shll
xlat
into
inc
mov
lods
inc
test
mov
or
cmc
mov
sub
sti
loope
mov
pop
sub
call
mov
mov
std
mov
push
loop
enter
das
pop
or
out
sub
or
push
xor
xchg
inc
clc
loop
popf
sbb
cmp
in
sbb
push
pop
shrb
adc
mov
aaa
in
mov
in
sbb
jl
cmp
repnz
and
out
in
cmp
inc
lods
pop
lods
das
gs
stc
sbb
repnz
adc
jnp
movsl
fwait
jmp
adc
pop
rclb
or
pop
cmp
fcomip
sti
repnz
dec
jl
push
cld
lret
mov
mov
stos
xchg
sbb
ret
pop
addl
jecxz
push
push
pop
shlb
out
js
dec
mov
mov
clc
adc
mov
shr
cmp
rcll
mov
insb
add
into
in
scas
sub
adc
jae
pop
dec
nop
movl
cmpsb
and
js
cmp
andl
sub
push
arpl
mov
inc
mov
mov
mov
sub
cmp
jnp
or
in
lock
push
cltd
jae
aam
inc
sub
fdiv
xor
and
mov
add
sbb
adc
aad
push
leave
and
push
xchg
and
inc
enter
or
sbb
adc
call
sbb
sbb
or
fwait
and
xchg
mov
push
insb
int3
push
mov
xorl
pop
sarb
xchg
std
mov
add
dec
mov
loop
arpl
mov
pop
int
xor
dec
repnz
adc
push
push
push
sahf
in
xor
lret
shlb
mov
mov
jp
sub
mov
pop
into
inc
loope
push
clc
jns
cmp
icebp
out
test
clc
aas
adc
xchg
cmp
lret
push
andb
lods
dec
lods
in
xor
dec
push
in
inc
xchg
cmp
daa
xchg
mov
call
test
jl
ret
push
dec
enter
test
enter
or
into
cmpsb
push
push
sub
icebp
hlt
adc
aaa
mov
ret
push
test
sub
adc
dec
aaa
call
jecxz
jb
cld
iret
xchg
movups
inc
or
push
xor
and
xchg
cmp
dec
pop
pop
dec
into
shrl
cmp
sbb
sbbl
xchg
clc
or
and
mov
in
pushl
jbe
dec
bound
jo
and
adc
adc
mov
sbb
into
xor
inc
outsl
mov
pushl
stos
pusha
divb
insb
mov
sub
es
push
add
cmc
and
insb
rsm
xor
loope
inc
repz
data16
push
jbe
lds
pop
xchg
push
test
es
xchg
mov
std
fwait
inc
sbb
or
loope
dec
mov
sbb
stos
rcr
stos
les
ret
cmp
fwait
ja
sbb
adc
into
push
mov
push
loop
sti
ja
adc
stos
cmpb
out
sub
mov
jns
jne
push
subb
ss
stos
out
dec
cmp
lea
xchg
mov
movsb
fwait
xchg
xor
in
ret
imul
and
ss
xchg
enter
pushl
xchg
sub
push
or
into
test
lods
add
pop
cld
ret
pop
mov
jle
add
test
mov
sbb
int
adc
js
shl
lret
cmp
sti
jmp
inc
fcoms
pop
test
out
push
and
adc
addr16
sbb
ljmp
inc
mov
ja
inc
insl
push
push
push
lahf
nop
mov
add
clc
lret
sbb
push
rolb
inc
int3
push
pusha
inc
mov
pop
bound
xor
pop
mov
scas
xor
lret
xchg
arpl
xor
push
clc
dec
lret
je
lcall
inc
and
or
mov
xchg
and
mov
sarl
mov
test
mov
les
sub
popl
jnp
bound
sbb
shrl
cmpsb
lret
push
shlb
gs
or
rcrb
fstpl
and
xchg
and
and
push
ljmp
and
ret
xorb
or
sub
incl
push
xchg
and
xor
add
sub
and
cld
movsl
aam
cwtl
int
mov
mov
xor
ja
sbb
daa
cmp
ds
pop
aam
out
jns
icebp
cmp
or
faddl
jae
fmull
test
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
mov
mov
pop
bound
dec
arpl
push
out
and
shll
and
mov
pop
sub
loop
ss
sbb
aaa
lret
xchg
test
push
cmp
iret
lea
in
out
xor
xor
imul
and
dec
icebp
sub
aas
out
stc
mov
imul
dec
push
and
jge
cmp
testl
mov
mov
jmp
xchg
mov
sahf
out
push
sbb
popa
inc
fptan
mov
adc
dec
dec
imul
sahf
ds
adc
inc
mov
and
out
bound
lods
push
sbb
ret
mov
xor
cmp
push
das
int
and
adc
mov
dec
and
gs
ds
lret
cmp
cmp
sub
loope
jns
enter
cld
std
jae
cvtdq2ps
pusha
or
mov
mov
pushf
into
xchg
cmp
jno
dec
out
jp
daa
stos
push
mov
loope
xor
dec
je
jmp
and
jl
stos
and
jbe
mov
jl
vpandn
push
adc
jecxz
out
popa
rorb
fmul
sub
stos
mov
xor
dec
or
jae
iret
addl
sub
rorb
daa
push
movl
loopne
inc
outsb
jp
test
subl
iret
push
sbb
insb
cwtl
mov
adc
or
fiaddl
fistps
test
dec
push
jnp
cli
movsl
sbb
dec
outsb
ret
fldl
adc
sub
dec
out
int
mov
dec
sti
cltd
add
out
fsubl
insl
cmp
adc
push
jecxz
dec
cmpsb
imul
imul
add
lcall
mov
dec
lods
enter
pusha
rorl
pop
arpl
xor
pop
adc
cli
imulb
outsl
sarb
push
mov
test
add
mov
scas
mov
add
lods
xor
ja
call
test
into
nop
sbb
enter
dec
push
push
sub
jns
pop
rol
fidivrl
mov
in
xor
nop
mov
add
lahf
ja
sub
lahf
ja
mov
jge
cmp
std
mov
dec
or
scas
ds
push
sub
sbb
fwait
pop
out
stos
in
mov
ret
lret
mov
out
mov
and
hlt
lods
shll
rorl
sbb
pop
popa
arpl
lods
pop
mov
rclb
pop
xor
cli
outsl
out
xor
jns
mov
pop
cmp
es
pushf
roll
mov
sbb
jmp
push
hlt
dec
cwtl
inc
enter
in
loope
and
les
xor
and
fisttpll
scas
subb
insl
push
pop
adcb
loopne
xor
mov
pop
clc
mov
daa
dec
pop
js
add
push
adc
jo
cmp
pop
inc
jl
xor
sub
cmp
push
loopne
jl
adc
es
jne
pop
rorl
xchg
xlat
jae
cmp
cmp
xchg
mov
lods
dec
jns
inc
inc
rcll
mov
mov
js
mov
out
xchg
in
lods
cwtl
je
jnp
pop
mov
xchg
repz
pop
push
xchg
stos
pop
daa
fmul
cli
and
lock
scas
ds
sbb
jns
push
cmpsb
fwait
lods
inc
jg
inc
and
bound
mov
test
xchg
in
aas
rolb
add
or
or
inc
test
lea
ja
enter
fcoml
testb
in
fiaddl
cmpsb
shr
mov
xorl
stc
aaa
xor
mov
or
lods
add
in
fcomp
por
jmp
movsl
push
push
push
or
sbbl
bound
loopne
cs
sub
and
fsubr
cmpsl
or
ret
add
dec
into
xchg
pop
nop
shrb
ljmp
xor
inc
inc
cmc
or
or
in
test
fadds
mov
and
in
pop
in
inc
loope
adc
fistpl
outsb
inc
sbb
fstpl
push
push
ljmp
out
stc
mov
int
mov
adc
addr16
pop
test
mov
notl
sbb
xor
pop
dec
xchg
mov
jg
nop
repz
adc
daa
push
inc
dec
push
and
fsubl
adc
scas
pop
sbb
dec
jbe
inc
shrb
jle
scas
push
in
movsl
jecxz
pop
inc
stos
loopne
in
dec
imul
es
push
std
and
sbb
add
je
dec
hlt
xorl
icebp
bound
push
mov
add
adc
mov
sub
movsl
out
ret
pop
nop
add
ficomps
fdivs
repz
addr16
fs
pop
jne
mov
ret
aad
iret
cmp
inc
enter
push
push
mov
cmp
push
mov
xor
pop
push
pop
cld
inc
sub
adc
sbb
sbb
inc
inc
mov
jle
mov
and
dec
popf
sub
pop
sbb
and
push
mov
jb
insb
mov
lea
mov
jle
mov
inc
xchg
push
add
aas
xchg
sub
test
imul
jo
sbb
mov
out
daa
repnz
pop
cmc
push
ror
jae
pop
push
std
les
icebp
inc
fcompl
aas
mov
lcall
mov
push
cmp
xchg
outsb
js
inc
into
in
xor
les
mov
imul
xor
add
aas
mov
shl
pop
cmc
jne
pushf
sar
or
mov
xchg
dec
dec
ss
pushf
loope
sub
into
fcmovnb
lds
sub
rcl
out
daa
cli
inc
xlat
cmpsl
jp
pop
int
pop
sub
out
dec
fcoms
pop
dec
addr16
lock
rorb
loop
outsl
push
subl
adc
and
in
fisubs
xchg
sub
leave
sahf
ds
hlt
sbb
out
cltd
mov
popf
add
pop
sub
dec
cmpsl
sub
icebp
mov
cmp
xchg
mov
sub
dec
test
int
adc
adc
push
jne
repz
and
or
xchg
mov
jmp
push
cmp
ljmp
add
xchg
cmpl
cs
and
adc
test
add
push
xchg
lds
mov
xlat
popl
stos
dec
inc
mov
imul
xchg
lock
xchg
pop
into
mov
xchg
repnz
xchg
mov
jge
out
or
xor
jecxz
in
inc
and
dec
scas
push
lods
mov
lods
push
pop
shrl
hlt
in
in
leave
push
nop
mov
mov
jecxz
mov
and
in
fmull
test
adc
inc
xchg
add
loop
popa
mov
repz
frstor
out
cmpsb
adcl
inc
dec
lods
pusha
mov
es
out
dec
mov
push
test
cmpsl
sbb
imul
cltd
jecxz
fcom
test
push
arpl
xchg
dec
and
and
sar
add
nop
ljmp
fwait
lcall
push
movsl
cmp
cmp
mov
jecxz
ss
push
loope
lds
pop
test
adc
xor
and
mov
dec
push
clc
cmp
sub
inc
adc
hlt
cs
mov
pop
xor
mov
dec
cmc
jmp
pop
outsb
cmp
dec
pop
enter
dec
jno
mov
lea
cwtl
fstps
out
stos
sub
xchg
adc
outsb
rclb
xor
mov
and
sub
es
mov
add
sahf
sub
nop
dec
iret
xor
inc
xchg
mov
mov
fimuls
jo
xlat
push
cmpsb
jl
add
cmp
add
es
pushf
enter
add
divb
outsl
in
and
mov
pop
jge
shrl
pop
imul
into
cmpsb
add
je
xor
mov
sahf
xchg
fidivl
jns
or
and
cwtl
xchg
pushl
or
sbb
scas
jb
lcall
mov
ret
cmc
sub
addl
test
mov
sahf
pop
addr16
jb
mov
sbb
cli
mov
xchg
mov
ret
adcl
xor
push
imul
inc
leave
add
lea
ss
lcall
adcl
push
fs
arpl
loop
dec
cmp
stos
cli
arpl
push
sarl
sub
inc
std
mov
fndisi(8087
xor
arpl
int3
pop
xchg
subb
iret
stos
cmpsb
clc
cmp
dec
sbb
icebp
xor
aas
adc
je
jb
imul
movsb
cli
mov
in
loope
adc
pop
cwtl
jb
rol
mov
sub
add
sti
push
mov
out
cwtl
sahf
inc
in
sar
std
out
pop
out
xchg
sbb
scas
out
push
jle
sahf
testl
pop
loope
mov
jb
pop
jb
clc
and
iret
daa
pop
hlt
hlt
xchg
out
pop
loop
loope
dec
int3
dec
icebp
cmp
add
adc
cs
jnp
or
xlat
mov
pop
ja
nop
arpl
sbb
jnp
push
pop
xor
ja
inc
das
or
or
xchg
bnd
xchg
mov
popf
mov
or
in
rol
cmp
xchg
sub
mov
pop
jb
out
jo
fsub
inc
stos
jns
xor
sbb
outsl
mov
imul
cmp
ds
adc
pop
push
inc
jl
jne
lret
ss
xchg
xchg
fisttpl
sti
popf
xor
jecxz
xlat
insl
loopne
pop
mov
xor
lcall
push
mov
fsts
iret
mov
out
dec
dec
inc
andb
stos
push
pusha
jmp
cmpxchg
xor
dec
shlb
fdivs
cmpsl
pop
push
leave
movsb
ret
push
jg
jne
test
cmpsb
movsb
xchg
sti
lahf
xor
je
cmp
mov
push
lds
push
xchg
xchg
sti
lods
call
ret
lahf
push
cmp
inc
cmpb
aam
sbb
xor
aaa
push
or
xor
pop
mov
cmp
insb
into
adc
sbb
pop
imul
sbb
inc
sti
dec
xor
push
push
sbb
or
sbb
inc
push
or
cmpsl
outsb
test
adc
jg
pushf
mov
add
sbb
arpl
or
inc
or
mov
scas
jge
jecxz
fcomip
cmpsl
or
sub
dec
pop
fsubrs
jle
cli
jg
ds
fimuls
cmpb
outsb
lret
stc
ljmp
adc
testl
jecxz
ja
sub
repz
loop
in
clc
cs
sub
adc
pop
test
xor
cmpl
add
pop
xchg
or
sbb
popl
cli
jmp
pop
mov
mov
aaa
add
into
push
add
shll
pop
jo
jecxz
sti
xor
add
daa
and
in
inc
adc
aaa
jbe
into
sarb
in
outsl
pop
sub
stos
mov
mov
mov
test
mov
or
cmp
mov
add
adcb
not
jns
in
mov
cvttps2pi
jmp
imul
movsl
jno
insl
mov
sub
insb
dec
scas
fwait
adcb
sbb
imul
and
in
repz
push
xorb
push
xchg
sub
sahf
jl
push
cmp
pop
shlb
push
or
mov
sahf
cmp
call
fstl
inc
divl
call
or
jo
imul
push
imul
cmpsl
scas
add
nop
push
push
xor
jmp
or
popa
mov
and
push
dec
scas
gs
adcb
and
bound
ficoml
sub
pop
pop
ljmp
cld
adc
cmp
mov
sub
lods
arpl
add
mov
shlb
jle
mov
xchg
xchg
pop
or
mov
aas
push
mov
push
push
dec
lret
call
push
adc
movsl
stos
mov
jo
fisttpll
insl
pop
or
xchg
enter
mov
fisubs
aaa
loopne
cli
or
add
inc
push
sbb
clc
and
jmp
lock
mov
icebp
cmc
mov
ja
xlat
pop
jmp
mov
fisubs
or
lcall
push
sahf
stos
aad
movsb
test
pop
push
xor
adc
imulb
xor
add
js
lret
xchg
std
rcl
lret
or
xchg
jecxz
sub
xchg
repz
xor
sub
xor
aaa
int3
sbb
cmp
sbb
loop
sub
outsb
repz
popa
and
dec
sub
mov
les
rcrl
ljmp
ss
aam
mov
leave
inc
sti
pop
imul
add
sbb
call
xchg
mov
push
sti
outsb
out
xor
pop
neg
fnsave
std
jmp
ficomps
clc
fimuls
push
push
jle
sub
outsb
jno
insb
dec
mov
pop
into
xchg
mov
fstl
pop
filds
idivl
fdivrs
mov
mov
imul
add
jmp
lods
pop
cmp
mov
xchg
pushf
cs
xor
push
jo
xchg
xor
mov
cmp
cmp
pop
mov
mov
push
lods
movsb
sbb
sti
pop
outsl
cli
test
push
cs
sub
sub
xor
sub
push
mov
pop
icebp
icebp
scas
movsb
test
paddsw
adc
mov
cmp
in
iret
or
pop
xor
adc
jl
xchg
ss
insl
xor
mov
dec
sbb
push
shll
add
pushf
sti
xchg
scas
lods
int3
aam
jnp
inc
push
pop
or
out
int3
inc
mov
incl
pusha
dec
mov
adc
ds
and
push
add
icebp
incb
movsl
ficompl
mov
movsb
stos
sub
dec
xlat
pushf
push
or
ljmp
and
lret
push
or
sbb
inc
adc
sub
stos
xchg
shll
nop
scas
cmp
jg
repz
pop
aaa
push
mov
fnstenv
and
sti
add
fucomi
dec
add
pop
ss
push
cmp
dec
dec
cmp
xchg
sbb
jl
sbb
and
in
cmc
sarb
mov
aam
xchg
xchg
add
xor
adc
jne
cli
jge
mov
jae
mov
pop
xchg
push
fstpt
and
cmp
fs
xchg
jmp
mov
aam
mov
cld
dec
add
in
cmp
int3
arpl
fs
mov
mov
sbb
arpl
fiaddl
ds
inc
mov
or
lret
push
mov
dec
mov
lret
fcoms
std
jae
jg
push
idivb
push
lea
les
push
popa
or
mov
loope
cs
inc
push
push
xor
in
data16
data16
push
imul
push
in
mov
sub
jnp
xchg
pop
outsl
jns
ss
pop
push
xor
outsb
pop
jmp
movsb
cmovle
movsb
cli
pushf
inc
pop
mov
jecxz
pop
decl
lods
mov
jle
sub
dec
scas
in
and
daa
and
jmp
dec
hlt
sbb
decb
test
cmp
xor
in
xor
iret
cwtl
jo
pop
mov
ljmp
outsl
pop
xchg
add
xchg
jns
push
hlt
adc
test
das
lds
push
sbb
jle
loopne
sbb
call
mov
cmp
out
aam
addr16
cmp
mov
lods
lret
or
repnz
dec
mov
jmp
mov
out
mov
insb
push
fmull
pop
dec
les
add
inc
push
ret
push
das
cmp
adc
test
bswap
jmp
pop
mov
cmp
outsb
add
or
pop
xchg
xor
mov
mov
mov
push
sub
jg
repnz
pop
aam
mov
les
std
mov
or
sub
jge
or
sbb
cmp
fucomip
ja
xor
sbb
outsl
hlt
push
or
dec
add
push
pop
loop
lds
xchg
inc
clc
pop
lock
jecxz
add
mov
jae
hlt
add
imul
cmp
icebp
addr16
sub
nop
and
lods
scas
pusha
lret
jg
rcrb
mov
ljmp
scas
jb
adc
popf
pop
jne
movsl
ror
popa
add
aam
cmp
push
nop
sbb
xor
arpl
sbb
in
loope
xchg
out
pop
cmp
push
les
and
mov
ret
imul
aad
or
adc
rol
jecxz
mov
arpl
je
and
fs
int
icebp
push
aam
aam
adc
fnsave
mov
mov
test
sti
ret
bound
push
mov
dec
push
add
adc
jnp
ss
lahf
cmp
jmp
inc
mov
into
sti
insb
adc
cmp
test
imul
mov
pop
adc
adc
pop
int
stos
fldt
jo
and
pop
enter
ret
movd
inc
test
rcrb
lahf
pop
jp
jle
and
ja
in
call
jb
inc
xchg
and
pop
jae
call
inc
mov
adc
hlt
add
sarl
bound
mov
shrl
dec
xor
add
mov
cmp
cmp
inc
add
push
jmp
lock
rcrb
pop
jge
cmp
loope
cmp
push
clc
testl
inc
mov
xor
dec
pushf
xchg
out
lret
std
addr16
mov
pop
into
sbb
jg
adcb
dec
xor
cmc
sbb
cmpsb
cmp
sbb
pop
hlt
inc
adcb
add
mov
ret
inc
adc
dec
pop
popa
es
xor
mov
cmpsl
dec
sub
ret
jnp
mov
popa
mov
jne
jnp
jmp
repz
loopne
add
jne
or
dec
in
pop
scas
in
jbe
jno
dec
dec
adc
rorb
jecxz
mov
add
pop
xchg
stc
iret
popf
pop
stc
dec
pop
pushf
call
enter
flds
scas
mov
ds
pop
test
inc
hlt
push
orl
or
into
mov
sarl
je
test
xchg
xchg
add
or
lcall
in
mov
paddw
push
push
loop
pop
out
roll
cmp
call
jns
pop
xor
lock
or
leave
movsb
adc
xchg
dec
mov
fmuls
and
mov
dec
movsl
stos
cmpsl
adc
pop
xchg
or
mov
push
sub
fcomps
aam
scas
arpl
imulb
out
xor
sbb
insb
sub
shl
mov
mov
sar
cmp
fmul
adc
add
call
jp
les
push
jle
and
push
mov
iret
adc
shr
repnz
aad
cmc
fldt
sub
inc
xchg
imul
pop
pop
inc
sbb
push
jno
mov
test
or
xchg
xchg
cmp
lods
addl
pop
nopl
icebp
cmp
or
out
push
aas
inc
pop
sbb
cld
rcrb
int3
in
rcl
js
push
popf
mov
ss
inc
mov
cmp
jnp
push
cmpxchg
mov
inc
cmpl
test
sub
scas
push
aad
shrl
nop
add
stos
pushf
add
pop
std
add
dec
pusha
jle
jle
decl
nopl
dec
jge
xor
sbb
mov
jb
cmp
mov
and
mov
mov
or
mov
inc
sbb
inc
xchg
inc
push
dec
call
cmp
jecxz
dec
xor
push
push
mov
popa
mov
lods
pushf
sub
cmp
jnp
loopne
roll
movsl
sub
inc
rcr
je
push
fdivrs
cmpsl
push
xor
sub
in
repnz
adc
lock
mov
test
xlat
sub
mov
mov
out
and
or
es
into
fwait
xor
or
add
out
mov
out
neg
inc
xchg
jecxz
lods
std
std
fwait
jne
adc
xor
cld
popa
fisttpll
enter
cmp
push
test
lret
lds
dec
pop
xor
mov
les
cltd
mov
inc
pop
push
outsl
add
jmp
jge
int
sbb
pop
loope
or
mov
add
or
jae
aam
add
mov
push
sub
addl
pop
lret
lcall
xchg
push
dec
lods
cmpsb
jae
xorb
jg
sub
xchg
aaa
sbb
in
sbb
cmp
sti
adc
iret
scas
das
xchg
repnz
jle
loope
popa
fildll
mov
mov
jo
jl
outsl
adc
jae
inc
lret
test
cmpsl
dec
add
jnp
inc
rclb
adc
in
cmpsl
sub
push
js
insb
arpl
jns
add
jnp
inc
push
ljmp
adc
bound
cmp
stc
mov
movsb
into
clc
sub
cmpsl
push
jne
out
not
xlat
adc
xor
gs
andl
mov
xlat
sub
xchg
out
mov
push
jge
push
sbb
or
les
or
inc
dec
mov
in
call
aam
mov
clc
inc
push
pop
fldcw
cs
inc
outsl
jmp
cmpl
cmp
dec
mov
lcall
add
sbbl
or
mov
enter
sbb
push
cmc
fiaddl
movsb
stos
sbb
xor
jecxz
dec
bound
imul
xchg
inc
xor
in
pop
xchg
xchg
outsb
in
insl
lods
mov
dec
inc
out
cmp
dec
hlt
fwait
xor
pop
call
loope
sub
hlt
out
daa
ss
daa
xchg
repnz
sub
mov
call
jl
cmc
mov
rep
or
pop
std
sbb
mov
push
cmp
push
enter
repz
xor
jae
jne
mov
fwait
xor
sbb
cwtl
lret
sbb
lret
jp
mov
in
mov
add
and
sub
mov
aas
sbb
jmp
xchg
test
mov
ret
nop
mov
fmul
pop
outsb
mov
fsubl
aad
push
out
push
jecxz
in
mov
xchg
and
cmp
inc
jno
mov
fistl
pop
and
sbb
sbb
sbb
push
rcll
mov
fs
and
jmp
pushf
ret
mov
inc
mov
in
dec
or
xchg
push
imul
dec
mov
les
mov
dec
cmp
or
push
leave
cmp
add
or
dec
bnd
movsb
lock
sbb
dec
pop
sbb
xor
pop
out
dec
fidivrl
xorb
aad
sbb
sub
mov
fstps
bound
scas
xor
push
cmp
and
iret
inc
cli
xor
pop
dec
stos
lock
bound
inc
pop
arpl
or
and
mov
mov
loop
testb
push
pusha
in
mov
or
add
std
xchg
es
scas
dec
int
cmp
add
sub
imul
aam
orb
lahf
mov
js
subl
outsl
lods
jae,pt
mov
add
mov
fisttpll
mov
fisubl
mov
loop
je
jnp
jne
xchg
jae
lods
sub
add
pushf
inc
mov
sbb
pop
push
add
movsl
incl
pop
movsl
fwait
sub
insl
xor
lods
pop
dec
sub
movsb
and
leave
adc
gs
jo
fcomps
xor
cmpsb
lods
je
jns
xchg
jge
xor
inc
and
inc
stc
iret
mov
in
in
push
lds
mov
imul
aas
stos
add
pop
mov
xor
enter
divl
jge
inc
fadds
shlb
pop
xchg
push
add
test
jnp
out
sbb
inc
idivl
test
mov
or
stos
xchg
gs
or
popa
inc
or
mov
dec
pop
inc
jg
bound
lds
sbb
popl
fldl
jl
hlt
ja
sbbb
pop
lods
adc
test
cwtl
movsb
mov
jo
jl
ds
xchg
mov
mov
jmp
mov
xor
aas
sbb
adc
mov
sbb
mov
dec
sbb
sub
pusha
inc
xor
aam
adc
jne
insl
clc
outsb
jp
orb
mov
mov
lock
nop
mov
cmp
and
push
cmp
movsl
mov
stos
cs
into
and
add
lds
xchg
ret
fdivrl
into
adc
adc
cld
out
push
sub
es
out
iret
mov
pop
lock
adc
mov
mov
push
fdivrs
es
jmp
out
push
icebp
out
push
sbb
clc
mov
inc
je
add
inc
ret
divb
ds
bound
movlps
fst
cmpsl
add
cmp
aas
cli
ret
nop
jle
dec
fldenv
xchg
xorb
out
loope
pop
rolb
xchg
mov
dec
pop
mov
clc
sub
or
aad
filds
cmp
in
fs
popa
pop
outsl
and
pop
data16
sbb
xchg
decl
fld
movl
sbb
add
lret
adc
dec
fsubs
roll
jo
ss
cmp
or
out
leave
aad
adc
in
sbb
inc
mul
inc
loope
mov
xchg
mov
iret
cwtl
mov
movsl
mov
pop
lea
es
mov
cmpsl
add
std
cld
dec
ss
arpl
stc
and
sbb
lret
jecxz
mov
adc
cwtl
jecxz
jo
into
sahf
ror
pop
jmp
ja
xchg
fs
xchg
lahf
and
jecxz
push
popf
push
jp
push
movsb
or
mov
aaa
leave
shl
cltd
in
pop
mov
test
cmpsb
add
lods
jl
mov
push
daa
sub
fdivs
pop
leave
or
imul
aam
push
dec
xor
cmp
mov
push
scas
pop
out
jge
and
mov
arpl
cltd
xchg
jecxz
test
bound
andb
pop
jbe
adc
shll
in
push
jb
and
adc
and
mov
mov
lret
adc
dec
cmp
push
test
and
add
test
mov
in
jge
into
ret
adc
push
lret
mov
daa
xchg
push
iret
xchg
mov
insl
jns
adc
stos
sbb
icebp
iret
cmp
sbb
mov
lea
sti
out
push
outsl
cmp
dec
add
push
sub
inc
in
push
pusha
jge
test
jmp
negl
push
js
dec
sti
push
ljmp
ficoms
xchg
insl
and
pushf
fnstsw
mov
sbb
mov
call
jl
movsl
cmpl
sarb
addr16
cmpb
lea
arpl
shlb
inc
pop
in
sarb
cld
sub
je
xchg
xchg
adc
addr16
mov
xor
jo
jbe
inc
js
outsl
mov
xlat
lret
loopne
aad
rclb
mov
outsl
mov
mov
adc
push
stc
in
mov
add
lcall
repz
xor
and
inc
and
std
cmp
jp
cmc
adc
outsl
inc
xor
mov
ret
imul
xchg
loope
push
xor
adc
call
jne
jle
stos
xlat
push
lahf
mov
imul
scas
push
gs
pop
loopne
adc
inc
jns
outsb
or
and
sbb
pop
dec
call
or
cld
xor
and
in
push
push
lret
push
pusha
lret
mov
add
sbb
jns
mov
xchg
dec
lods
lods
cmp
cmp
add
dec
jae
push
loope
fistl
jmp
fbld
push
push
sti
mov
sahf
cmp
test
mov
pop
sbb
push
jns
movsb
lret
push
loop
jecxz
lods
mov
jecxz
sub
leave
cltd
mov
std
gs
add
jmp
mov
das
and
sub
rclb
rorl
int
sbb
sub
or
fildll
pop
add
pop
nop
ja
scas
mov
stc
call
adc
fmuls
sub
shll
inc
inc
xchg
outsw
jb
mov
data16
xchg
mov
mov
mov
sub
ljmp
push
xchg
push
in
add
xchg
insb
pop
std
test
stos
orl
sub
adc
je
push
outsb
shlb
aam
sub
push
cmp
pop
pusha
pop
and
repnz
push
mov
pop
sbb
rorb
ds
jno
sbb
lods
add
or
repnz
inc
inc
xchg
xchg
cmp
andl
inc
add
pusha
sbb
lea
push
scas
enter
scas
cld
rcl
or
add
xchg
and
pop
cmpsb
repnz
bound
fdivs
popf
dec
repnz
cmp
popl
push
inc
sub
inc
or
sar
stos
stos
sub
pop
xchg
inc
lret
movsb
adc
lds
sbb
mov
sub
imul
jg
fbstp
lret
movsl
test
adc
aam
dec
xchg
imul
lahf
fsubr
negl
es
cmp
hlt
cmp
pop
inc
fwait
pop
xorb
rcrb
ret
mov
icebp
out
gs
imull
mov
sbbl
cli
xchg
aaa
inc
sbb
cmp
roll
xchg
scas
mov
sbb
or
test
mov
out
arpl
aam
jno
pop
sbb
cmp
or
inc
iret
mov
je
es
cmpb
stos
sub
aaa
adc
lods
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
and
test
call
adc
stos
ret
cmp
dec
lahf
leave
lea
inc
jb
mov
mov
mov
mov
leave
cmp
or
cmpsb
aam
stos
jb
mov
mov
pop
mov
jecxz
or
out
sbbl
loop
int3
push
popl
les
sarb
in
pop
adc
inc
sti
andl
jle
loopne
es
pushf
or
sar
push
movsb
xchg
sbb
cli
or
subb
and
outsl
into
into
and
push
xor
xor
fsubs
and
mov
xchg
adc
adc
sub
cld
inc
imul
adc
dec
nop
add
ss
sbb
cmp
lret
xchg
jge
mov
jp
sbb
jb
addr16
push
adc
mov
xor
call
inc
sbb
sub
ficoml
sub
ffreep
mov
mov
jl
xchg
adc
decl
sbb
xlat
pop
dec
in
leave
dec
cmp
add
sub
mov
arpl
cwtl
imul
inc
add
sub
ss
rolb
ret
add
lahf
in
xor
mov
shrl
rcll
mov
orb
and
mov
je
test
jne
sbb
or
popa
loop
pop
inc
cmp
fdivl
popa
fistl
jmp
aad
ret
push
shlb
in
rclb
test
jne
sti
sbb
fidivs
std
aam
push
sarl
jl
and
sarl
cmp
ficoml
pop
hlt
adc
cwtl
xchg
int3
int
mov
pop
lret
sbb
or
shr
aaa
ds
xor
lahf
mov
js
lret
loop
push
mov
push
sbb
rorl
push
popf
pop
cwtl
jne
cld
mov
test
pop
xchg
inc
adc
das
popf
push
adc
mov
adc
lods
push
mov
incb
add
adc
subb
inc
jmp
jae
lods
lret
test
push
jmp
jecxz
lret
or
lea
sbb
ds
aad
aam
in
cmp
rcrl
aas
push
movsb
stos
lcall
pop
mov
sub
sbb
add
insl
lcall
stos
lcall
sub
int3
adc
jno
pop
push
inc
or
xlat
adc
outsb
lods
mov
int
jp
cmp
hlt
mov
inc
mov
rcr
enter
stos
pop
jle
push
int
shlb
mov
mov
ficomps
mov
adc
sbb
or
int
sbb
xorb
push
out
sub
or
or
jae
jbe
xor
add
and
xor
test
outsl
hlt
xor
fldt
mov
xchg
mov
ljmp
clc
popf
sbb
sbb
ds
lea
xchg
sub
jnp
xor
mov
jns
into
gs
cmp
dec
adc
push
imul
aam
sbb
mov
dec
inc
mov
adc
mov
dec
xchg
dec
and
xchg
lret
imul
leave
sbb
sub
lcall
sub
add
sti
or
lods
decb
and
pushf
out
pop
mov
jo
cmp
cmc
xlat
jbe
and
pop
sbb
stc
add
bound
je
inc
in
mov
js
pushf
mov
popf
sahf
pop
lea
fidivl
sar
xchg
jne
movsb
mov
testb
push
dec
repz
xor
inc
call
sub
arpl
shlb
mov
cltd
cltd
jmp
js
sbb
sub
pop
leave
mov
mov
aaa
mov
push
je
push
xlat
insl
icebp
mov
fcmovbe
hlt
rcrl
dec
xor
mov
jne
mov
mov
dec
ficoms
ror
test
cmc
mov
cmp
roll
xor
daa
pushf
loope
jp
test
pop
popl
add
inc
scas
popa
or
popf
stc
mov
pop
dec
ds
cwtl
push
enter
lret
pop
sub
sarl
out
aad
sbb
dec
mov
and
lahf
dec
or
daa
rol
xchg
inc
pop
daa
aad
or
cmp
fmulp
push
repz
nop
sub
sbbb
out
sbb
fidivrs
outsb
mov
sub
cwtl
adc
and
bound
jge
sbb
jl
popf
clc
arpl
adc
aad
rclb
sub
push
jl
adc
pop
in
mov
leave
lret
inc
ret
loop
shlb
or
xor
push
repz
and
or
movsl
imul
add
push
js
aam
cmc
fs
mov
jl
test
js
push
adc
aas
movsl
sbb
pop
mov
inc
sub
push
cmp
pusha
mov
das
subl
mov
push
test
test
insl
call
or
inc
rcl
jb
mov
scas
adc
daa
cmp
and
sbb
je
dec
pop
mov
mov
mov
adc
pop
push
and
mov
in
pop
loop
repz
ds
fsubrl
mov
pop
addr16
fidivs
xchg
inc
xchg
mov
ss
mov
shl
dec
mov
cmp
addr16
imul
out
out
std
dec
mov
lods
popa
xchg
aas
push
rolb
dec
out
fucom
jl
dec
stc
sub
sub
jg
and
add
sarl
dec
xor
sbb
mov
lcall
dec
int
mov
repz
or
mov
cltd
jl
sbb
lahf
rclb
mov
mov
xorl
mov
mov
and
cmpsb
inc
and
stos
push
add
cmovl
lret
shlb
das
pmuludq
sbb
insl
jno
enter
cmp
movsb
pop
jp
arpl
mulb
cltd
mov
mull
dec
mov
out
ds
rcl
push
pop
movsb
mov
test
and
fists
lret
into
mov
push
in
or
shrb
sbb
sbb
mov
push
lahf
push
xchg
test
pusha
jnp
andb
lods
xchg
adc
push
inc
in
xlat
inc
out
sahf
les
cmpsb
mov
xchg
sbb
cmp
enter
xchg
fwait
sbb
add
cmp
pop
pcmpeqw
sub
pop
sbb
std
call
sbb
mov
daa
xchg
sti
in
mov
sbb
push
mov
xchg
sarb
inc
and
lret
push
xchg
xlat
pop
xchg
clc
inc
xchg
bound
and
into
mov
icebp
or
loopne
and
outsl
pop
loop
jno
cmpsb
mov
shlb
orl
dec
nop
cli
xor
popf
sbb
mov
fldpi
sub
fisubrs
mov
fsts
jne
aad
sbb
or
fstl
pop
xor
mov
or
lret
xor
daa
adc
sbb
mov
xchg
push
mov
cwtl
fsubl
push
inc
divb
adc
push
mov
pushl
jnp
lcall
lods
and
in
hlt
jo
mov
sub
jnp
js
pop
ljmp
add
mov
dec
movl
fs
rcl
nop
roll
mov
cltd
lods
out
mov
or
aas
into
jle
push
test
fstps
lret
cmp
cli
mov
xchg
cmc
pop
arpl
ret
adc
cmpsl
pop
cs
rcr
or
cs
ljmp
adc
lea
int3
mov
xchg
lret
insl
pusha
dec
sbb
in
xchg
int
pop
dec
push
mov
sub
fwait
push
cmpsl
push
leave
stc
ss
push
xchg
and
pop
icebp
mov
add
dec
sbb
cltd
addb
push
push
repz
shll
pop
inc
jae
mulb
add
inc
rcrb
mov
gs
dec
xchg
addb
fwait
jne
out
mov
pop
into
mov
dec
das
mov
pop
xor
add
cwtl
loope
fs
pop
jmp
loope
mov
das
push
pushf
sbb
sbb
rcr
pusha
popf
psubq
popa
fsubs
add
clc
popl
dec
cmc
mov
push
mov
cmp
xchg
sub
jno
mov
in
lea
stc
lret
mov
fwait
int
cmp
xlat
jnp
icebp
pop
movsl
sub
dec
pop
test
jnp
sub
jo
test
jl
jb
jmp
popa
xor
sahf
jecxz
adc
sub
sub
imul
loope
xor
leave
dec
cmp
sub
enter
push
push
test
filds
xor
sub
mov
stos
lds
push
fdivl
pop
loopne
sub
in
sbb
and
sahf
sbb
movsl
test
imul
daa
push
and
or
sub
and
out
xor
dec
out
mov
fistpl
rcl
inc
jno
lock
xor
and
sbb
sub
cld
xlat
adc
arpl
xor
pop
int
dec
and
mov
xchg
orb
and
sbb
ffree
mov
inc
jo
or
enter
adc
insl
mov
xchg
repnz
sub
inc
lahf
xchg
xor
popa
shrb
xchg
add
pop
push
aas
dec
repnz
sbb
sti
push
mov
dec
mov
cmp
lcall
dec
sub
fucomip
cli
mov
loop
adc
fs
pop
xor
mov
jmp
cs
bound
mov
les
cvtps2pi
jle
data16
jmp
test
jg
jecxz
push
cmc
ja
sbb
mov
push
sub
xchg
jnp
adc
mov
scas
hlt
aam
dec
add
jle
pop
xlat
jns
inc
sub
inc
xchg
loope
loop
push
lcall
adc
hlt
movsl
ds
lahf
mov
int
sbb
cmp
mov
fstpl
and
shll
sub
sbb
or
pusha
inc
lods
sbb
jle
dec
imul
mov
mov
das
pop
ror
inc
inc
das
or
add
in
nop
xchg
mov
pop
aam
and
neg
sub
insb
stos
jp
push
lds
pusha
inc
push
imul
ljmp
xchg
cs
sub
ss
movups
or
fnstenv
push
imul
enter
fincstp
xor
push
xchg
shl
lods
cmc
or
cmp
push
clc
sub
push
sub
mov
test
cmp
out
inc
sahf
dec
xor
inc
sar
dec
push
mov
test
dec
das
inc
inc
mov
sahf
rclb
pop
sti
sbb
xor
mov
popa
mov
bound
push
xchg
push
out
push
lret
mov
outsl
sbb
adc
jmp
loopne
xchg
mov
data16
ljmp
mov
jnp
loopne
or
cld
mov
pop
push
sbb
mov
mov
aaa
sbb
or
sarb
movsl
rclb
call
or
push
add
cmp
leave
cmp
xchg
scas
mov
push
cmp
lcall
hlt
pop
mov
pop
inc
insl
dec
outsl
mov
popf
inc
or
popf
insb
das
xor
inc
fnstenv
hlt
xchg
push
add
dec
in
mov
fadd
push
mov
xor
repnz
push
adc
jbe
popf
arpl
jl
mov
pop
sub
stc
inc
sub
pop
aad
sub
loop
mov
mov
cld
or
sub
loope
adc
pop
mov
or
fnstsw
xchg
das
push
inc
xchg
stos
int
inc
mov
inc
inc
mov
jg
push
sub
pop
adc
pusha
fdivr
mov
jno
repnz
lds
mov
inc
add
jno
aad
and
arpl
testl
fidivrl
in
pop
rcll
jg
test
nop
loop
or
jmp
test
icebp
add
push
or
mov
rcrb
mov
mov
outsl
mov
fnstcw
and
pop
adc
cmp
inc
jbe
ret
loop
insl
push
xor
lods
out
stos
jmp
adc
cmc
inc
dec
pushf
push
jmp
jp
jns
inc
imul
inc
push
xchg
clc
popf
hlt
sub
pop
dec
xchg
repnz
loopne
mov
xlat
xchg
sti
lcall
push
xor
jb
cmp
mov
xchg
movl
cmpsb
cmp
add
push
jmp
dec
pop
out
pushl
ret
lea
lahf
cld
xor
sub
test
insl
adc
pop
inc
cmp
movsl
neg
mov
jmp
imul
cmp
addr16
mov
sbb
jo
call
shr
icebp
push
mov
fnsave
inc
push
rorb
in
hlt
leave
icebp
fwait
out
psrlw
adcl
xor
adcb
fdivl
or
movsl
in
loope
ret
inc
mov
inc
cmp
out
xlat
inc
xchg
xchg
pop
ror
mov
movsb
mov
lahf
arpl
aaa
or
push
xor
mov
ss
imul
mov
mov
lock
out
cmp
mov
int
ljmp
sub
mov
dec
adc
ds
mov
mov
shll
or
sbb
jge
adc
out
cmp
jbe
jg
push
imul
inc
sbb
dec
push
pop
or
aam
and
inc
push
sti
pop
dec
jae
daa
es
pop
mov
test
test
aam
xchg
sub
lds
add
jl
mov
mov
stos
inc
dec
inc
or
push
int3
xchg
cmc
je
sub
scas
xchg
push
sub
or
lods
cld
les
sbb
mov
sbb
out
gs
push
and
and
xor
push
dec
sub
jb
mov
push
xor
mov
fbld
sub
fdivl
mov
test
fsubrs
lret
inc
pop
test
cmpsb
stc
daa
mov
adc
setp
sti
mov
xor
imul
sti
pcmpgtw
cltd
lods
fstl
aad
scas
ret
xor
sti
mov
inc
or
dec
loop
dec
pop
inc
cwtl
rcrl
ret
push
into
stos
and
pop
in
out
xor
movsl
ds
xlat
mov
pop
jmp
mov
stos
call
movl
les
or
cmp
ret
add
hlt
lret
inc
mov
dec
stos
sub
sub
sti
dec
mov
popf
xchg
add
rcrl
les
movsl
push
bound
cmp
inc
push
or
or
je
sar
rcrb
push
dec
sub
pop
test
push
push
sbbb
shll
or
jmp
test
scas
movsb
inc
xchg
xlat
in
movsl
adc
fbld
inc
adc
stos
xchg
fld
cmp
pop
dec
add
mov
cmp
pop
test
push
xchg
adc
jge
enter
adc
pop
repz
loop
ds
add
xchg
pop
subb
xchg
sbb
xor
or
jg
xor
out
test
cs
loop
inc
shrb
and
lods
shll
sbb
inc
pop
dec
aam
les
or
fnstenv
adcl
loop
aas
scas
inc
jae
iret
mov
and
das
mov
or
mov
mov
ss
mov
jl
insl
xor
in
mov
mov
stc
jbe
mov
movsb
jp
adc
test
in
adc
adc
xor
pop
stos
orb
or
out
imul
dec
sbb
out
leave
fisubs
enter
gs
jecxz
mov
and
adc
iret
mov
mov
in
xchg
inc
clc
cli
xor
or
aaa
aam
pop
sbb
shr
cli
sar
imul
lods
aaa
and
xor
mov
or
movsl
rcrb
jae
dec
push
aam
addr16
clc
xchg
imul
or
mov
xchg
ficompl
bnd
jnp
or
pop
rolb
xor
sbb
and
xor
cld
mov
push
in
push
gs
sub
lret
jge
cli
jge
xor
fwait
add
pop
adc
int
rorl
dec
popa
and
mov
push
or
jae
pop
pop
xchg
sbb
call
push
lahf
fadd
xchg
fcomps
fisubl
lods
cmpsl
std
xor
mov
cli
pop
inc
ljmp
out
push
jecxz
lea
mov
inc
std
leave
loopne
jmp
addl
adc
mov
ja
dec
sti
xor
mov
jl
push
inc
adc
push
scas
push
pop
mov
adc
mov
mov
fistl
mov
hlt
test
push
fnsave
push
xchg
cmpb
xchg
ljmp
add
xchg
mov
adc
icebp
pop
sub
push
mov
and
in
pop
adc
shll
rcrl
pop
mov
mov
push
mov
aad
push
cmp
xchg
aad
mov
cmc
jno
cld
xchg
movsl
lcall
out
sbb
stos
add
repnz
leave
sbbb
test
xor
or
push
popf
push
add
sar
cltd
test
adc
mov
jl
sbb
imul
adc
mov
and
enter
mov
imul
add
movsl
aam
out
lods
add
das
cmp
sub
fistps
fdivs
xor
cs
mov
xchg
insb
inc
lods
mov
repz
stos
adc
mov
lret
xchg
mov
bound
dec
xor
inc
sub
pop
lods
sti
stos
push
daa
and
out
stos
mov
xor
mov
mov
cmc
and
lret
sahf
fcompl
cmpsl
cmp
and
daa
dec
sbb
pop
cmc
lahf
jo
stc
or
lcall
scas
adc
stos
dec
bound
sbb
cld
jne
gs
decl
adc
and
inc
pop
mov
rcr
lret
sbb
jmp
push
rcr
inc
insb
pop
sbb
xchg
insl
maskmovq
testl
push
adc
mov
pop
icebp
lods
sbb
aam
or
xchg
bound
and
ret
dec
js
fadds
shl
fs
xor
cmc
rorb
mov
pop
mov
in
fsubl
test
out
mov
test
andw
outsb
test
out
cmp
out
jnp
pop
or
xchg
out
sub
bound
test
sar
scas
movsb
mov
adc
xor
dec
pop
ss
je
xor
adc
inc
mov
into
mov
lods
out
dec
sbb
cmp
jo
add
sbb
mov
test
jnp
push
nop
dec
and
fistps
jns
test
xchg
gs
mov
push
xchg
inc
jb
ds
mov
into
iret
in
sub
outsl
mov
pop
jns
dec
fisubs
imul
dec
mov
xor
stos
movsb
add
movsl
xchg
jne
hlt
mov
std
xchg
fidivl
repz
fs
pcmpeqw
aad
dec
sbb
pusha
add
fdivrl
inc
mov
fnstsw
jb
add
xorb
roll
adc
xor
outsb
orb
sub
pop
or
jnp
cwtl
add
out
cwtl
mov
pop
mov
cmp
in
iret
imul
repz
or
mov
add
pminub
shlb
aad
lods
sti
loope
lods
pop
outsl
lods
adc
dec
cli
ja
les
add
mov
inc
into
fnsave
fbstp
sub
call
push
mov
stc
push
mov
add
in
cmpl
ja
scas
mov
mov
lret
add
jns
inc
dec
xchg
pop
add
mov
popf
push
in
iret
sbb
subl
pop
not
jae
testl
insb
add
jg
repnz
data16
outsb
into
in
xchg
add
jae
test
mov
mov
push
inc
cmpsl
xchg
jmp
subb
js
fldt
sbbl
xchg
push
add
fdivrl
pop
mov
push
sbb
xchg
repz
mov
or
sar
cmpb
loop
add
test
xchg
std
pop
or
mov
enter
inc
xchg
and
test
push
dec
cmpsb
add
out
dec
xor
add
fptan
in
push
adc
hlt
add
popf
hlt
inc
loopne
inc
daa
daa
sbb
out
xchg
in
mov
shll
fld
dec
int3
mov
andl
stos
or
mov
stc
inc
sbb
les
movsb
xor
adc
ret
push
es
cmpxchg
stos
sub
popf
jo
xchg
dec
mov
fdivrs
add
aaa
ret
adc
xor
sub
sbb
cmp
push
cltd
int
mov
fbstp
push
fcomp
add
pop
int3
sbb
or
xchg
shlb
outsb
in
in
or
arpl
iret
dec
aas
in
xlat
inc
dec
inc
jp
push
imul
fcomi
icebp
xor
push
push
pop
pusha
sbb
add
pop
mov
mov
pop
popa
mov
fdivrl
sub
fldt
sbb
ja
sbb
aam
fildll
xchg
xchg
add
push
mov
lahf
lret
ds
mov
es
or
xchg
or
or
aam
xchg
rorl
js
mov
ds
xchg
jns
or
inc
inc
xchg
xchg
or
pop
jb
mov
ret
adc
cmp
scas
push
mov
clc
adc
enter
jne
enter
mov
dec
es
mov
xchg
fadds
call
nop
or
pop
inc
cli
or
pop
lea
aaa
xchg
aas
mov
sub
lock
icebp
adc
adc
sbb
js
cmp
xor
mov
fstl
das
test
xchg
push
fcmove
int3
stos
or
add
or
in
nop
jmp
adc
push
dec
sbb
jmp
pop
insl
and
adc
jecxz
or
dec
or
push
cmp
loope
dec
mov
pushf
lods
or
xchg
mov
ss
sbb
mov
mov
scas
ret
test
pop
jmp
push
jne
test
test
mov
daa
mov
mov
sub
mov
test
or
fcmovb
jb
sbb
scas
js
add
iret
push
in
mov
mov
fildl
ss
shll
cmp
lds
mov
sbb
jbe
lcall
movsl
jmp
push
loop
push
mov
dec
xchg
int3
shlb
in
fucomi
test
jl
pxor
push
sti
pop
popf
push
pop
lods
add
mov
ds
jns
ret
mov
pop
mov
mov
fs
shr
or
jnp
fcomps
jl
scas
fdivs
mov
movsl
adc
inc
psubd
fdivrs
data16
cmp
insl
leave
shrl
hlt
xchg
movsl
cli
insl
adcl
adc
arpl
mov
cmpsb
push
andb
into
mov
inc
popa
push
mov
mov
cmpsb
movsl
outsl
loope
adcb
cmp
jl
adc
dec
arpl
shr
jb
in
cmp
cld
jmp
or
je
int3
lock
ret
imul
push
xor
or
inc
test
jle
sti
mov
shll
jo
pop
cmp
sub
sub
pop
aam
push
lods
xchg
mov
jnp
mov
push
call
add
out
sub
mov
jne
or
or
xchg
fbstp
jl
cmpsb
aaa
xlat
sub
mov
movsb
xchg
pop
stos
sbbl
cmp
imul
test
and
hlt
stc
js
dec
adc
add
jns
outsl
push
or
add
fisttps
cld
cmovle
xor
sahf
sub
mov
mov
out
xchg
pushf
rclb
xchg
fdiv
pop
and
cmp
cmp
inc
std
movsb
ja
push
mov
mov
jl
and
sbb
jge
iret
mov
xor
imul
leave
movsb
sub
mov
lcall
adc
mov
stos
enter
mov
mov
push
inc
sahf
fisubs
add
popf
mov
push
push
push
push
cmc
lret
inc
inc
and
jmp
sub
pop
xor
dec
xchg
push
das
cmp
push
stc
add
leave
dec
add
xor
clc
jle
sub
loopne
lods
adcb
mov
aad
xor
das
dec
xchg
xlat
or
mov
stos
push
mov
or
sbb
lea
fistpll
mov
xchg
mov
xchg
adc
jo
xor
push
pop
xor
jno
mov
or
mov
mov
mov
push
test
jmp
cwtl
mov
clc
mov
cltd
nop
pop
rol
and
sbb
pusha
iret
dec
cmpsl
mov
add
or
mov
rclb
mov
sub
sbb
jl
ss
jae
cli
mov
inc
push
cld
int3
ja
mov
inc
adc
mov
pop
movsl
pop
out
shll
test
xlat
pop
adc
mov
pop
or
jnp
gs
and
andb
hlt
cmpsb
jae
cs
pushf
mov
sbb
or
pop
insl
mov
mov
xchg
ljmp
xchg
lods
clc
jle
inc
mov
outsl
lcall
push
pop
jle
inc
sub
mov
or
mov
mov
jno
outsb
xchg
bound
fwait
ja
jge
sub
adc
or
dec
out
stos
push
dec
int3
jb
and
fwait
gs
push
sub
jmp
mov
sti
ja
cmpsl
jmp
cs
in
sbb
ds
das
int3
mov
push
insb
inc
pop
pop
mov
jle
out
add
or
cmp
mov
mov
vmread
sarb
addr16
pop
add
push
movsb
cmpsb
sub
and
jnp
inc
sub
xchg
mov
fildll
or
xor
leave
or
mov
add
cmp
xor
in
xor
adc
loope
int
into
ja
jmp
call
jp
jp
xor
adc
mov
outsb
arpl
push
les
inc
xlat
adc
pop
cld
stos
mov
stos
inc
sahf
inc
int
fstl
xor
sbb
ds
sub
xchg
gs
daa
sahf
sub
jmp
jno
inc
loop
jns
in
out
shr
pop
push
lock
aas
push
hlt
aas
stos
mov
mov
push
lret
mov
sub
sti
lret
lea
ss
lods
fnstcw
mov
push
adc
xlat
pop
jns
cmp
sub
mov
sahf
inc
sbb
push
dec
push
mov
aam
dec
add
ljmp
mov
cmp
lea
mov
sub
xchg
mov
aam
cs
out
mov
add
std
push
xor
mov
xchg
xchg
push
cmp
mov
das
cmpsb
add
cld
dec
cwtl
mov
jb
repz
lcall
pop
mov
dec
leave
mov
fmulp
popf
cltd
fcmove
in
dec
out
xor
inc
sub
add
add
xchg
mov
testb
pop
sti
sub
mov
xchg
sub
mov
mov
dec
leave
sbb
dec
roll
daa
xchg
int
nop
jns
sbb
mov
in
xor
daa
xchg
or
lods
shlb
sub
dec
and
js
movsl
call
out
and
pushf
jmp
lods
fdivs
int
and
sbbb
jp
jo
adc
pop
shr
js
mov
dec
dec
push
loopne
adc
pop
dec
ret
in
outsb
mov
mov
adc
fisubrl
mov
add
sub
and
xor
mov
mov
jno
test
stos
orl
test
add
es
std
scas
and
fists
pop
xchg
xor
pusha
pop
int
aad
sbb
jl
lds
mov
cwtl
outsl
add
js
sti
lret
push
push
or
hlt
cmp
or
xor
xchg
inc
lcall
dec
pusha
or
addr16
sbb
add
and
fadd
fsubrl
pop
scas
insb
imul
mov
xchg
cmpsl
call
cwtl
push
jne
pop
jmp
outsb
mov
xor
jp
les
jmp
cld
pop
test
sarl
rol
int3
movsl
ljmp
mov
dec
test
movb
lret
in
inc
mov
and
ss
mov
popf
test
mov
cmp
add
imul
pop
ret
pop
adcl
subl
mov
and
sbb
shl
inc
mov
mov
sub
aaa
loop
fwait
xchg
mov
jge
stc
les
bound
mov
sbb
daa
addr16
mov
fstpt
jmp
mov
int
popa
add
dec
mov
xor
adcb
lret
daa
bound
sbb
ds
push
mov
scas
sbb
jmp
cli
jns
int
cli
repz
xchg
mov
jb
mov
xchg
insb
lcall
out
out
fs
add
test
cld
popf
popa
or
jmp
mov
das
rcrb
sbb
aad
cwtl
sub
or
ds
into
push
fcmovnu
cmpsl
rcrb
test
nop
test
jae
jecxz
xchg
jecxz
jmp
test
lcall
cld
xor
fiaddl
cmc
lods
cmp
mov
lcall
int
sbbb
mov
add
mov
mov
fsubs
orl
sub
and
mov
mov
pop
daa
inc
outsb
outsl
xchg
inc
scas
out
xor
outsl
das
mov
int3
cli
loope
in
sbb
rcll
rorl
sbb
xchg
mov
push
ret
loopne
testl
push
loopne
pushf
lods
shr
inc
or
cmp
sbbb
jle
insb
popf
lods
popa
dec
in
test
lods
test
out
inc
in
push
fnstsw
xchg
les
dec
imul
jp
inc
movsl
push
add
dec
add
or
cmpsb
xchg
decb
ret
insl
shl
or
xchg
inc
cmp
sahf
mulb
xchg
divb
cld
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
mov
hlt
pop
bound
mov
xlat
or
stos
call
mov
int
push
shlb
iret
mov
addr16
aaa
inc
repz
jae
mov
fmull
lds
shll
and
sbb
iret
jbe
in
jbe
faddp
aad
mov
xchg
cmp
cmpsl
and
inc
mov
aas
cmp
aad
shrl
jb
scas
in
sub
adc
mov
lods
mov
mov
pusha
out
or
fildll
cmp
das
pop
pusha
insl
ds
sbb
jno
iret
js
lods
out
setle
sbb
pop
xchg
outsb
mov
cltd
enter
lock
aam
jae
add
fstl
out
add
cmp
cli
pop
or
outsl
jecxz
pop
stos
or
jb
cmp
mov
outsl
loope
add
dec
adc
lods
pusha
out
fwait
bound
in
mov
xchg
in
addb
cwtl
add
dec
pop
jg
punpcklbw
ljmp
mov
xchg
popl
cmpsb
push
ret
mov
in
push
mov
pop
sbb
out
fldl
lahf
fsubr
adc
pop
mov
mov
inc
popa
adc
cmpsl
mov
inc
fwait
sbb
cltd
aaa
shll
sub
push
es
in
xor
popa
test
scas
xchg
scas
arpl
add
ljmp
jb
mov
lahf
pushl
mov
mov
stos
adc
sbb
pop
adc
adc
scas
push
cs
xchg
jo
xchg
fsubl
mov
pop
inc
mov
ja
imulb
xor
jg
inc
adc
in
mov
dec
jecxz
test
push
inc
repz
and
mov
pop
adc
pop
stos
dec
xchg
inc
rclb
sbb
dec
mov
cmp
cwtl
shl
adc
xor
sub
mov
rcrb
fwait
push
mov
imul
mov
mov
cmp
icebp
pushf
xchg
and
xchg
or
or
cmp
mov
xchg
lods
lods
insb
dec
sbb
lea
jge
inc
push
pop
pop
js
and
push
iret
add
fs
clc
mov
push
mov
imul
jle
dec
cs
sbb
add
ret
or
add
insl
mov
call
mov
out
xlat
dec
jns
sbb
mov
test
data16
jo
pushf
pop
push
mov
pop
xor
xchg
xchg
jge
ds
std
std
rcrl
add
or
xlat
inc
add
add
xchg
sbb
inc
add
cltd
push
sub
mov
fistl
ret
clc
es
dec
lret
xchg
test
call
xlat
push
adc
add
js
xorl
mov
sbb
dec
test
ljmp
push
mov
cltd
mov
sbbb
mov
popf
cwtl
idivl
ds
sbb
leave
push
imul
sarl
inc
mov
or
mov
cwtl
popf
push
lea
and
xor
incl
movsl
aas
enter
fwait
mov
and
iret
mov
pushf
adc
xchg
lcall
pop
fwait
rcrb
inc
or
mov
mov
ret
scas
or
roll
sbb
insb
push
test
adc
fstpl
cltd
jno
sbb
test
loopne
in
mov
cwtd
lds
roll
movsb
inc
addr16
out
rol
jb
dec
inc
sbb
ja
adc
jae
ds
das
jne
or
insb
jp
adc
roll
cmp
pushf
test
stos
adc
pop
insl
aaa
mov
or
lods
lret
pop
and
inc
in
pop
push
push
std
inc
out
sti
outsb
rolb
or
and
dec
scas
inc
aam
cmp
aam
pop
ds
mov
sub
outsb
push
lret
jbe
jg
addr16
cmpsb
mov
mov
jae
mov
jo
pop
dec
lcall
push
jbe
lgs
fcoms
scas
push
sub
daa
or
cmp
mov
xchg
sbb
cmpsb
lret
jecxz
ret
stos
push
enter
push
add
into
dec
mov
adc
sti
add
pushf
cs
sbb
push
and
clc
aad
inc
sub
jnp
sbb
mov
gs
sub
sub
mov
or
leave
repnz
int3
adc
out
scas
push
xor
jecxz
stos
addr16
mov
popf
mov
pop
mov
aas
cmp
aaa
push
add
addb
mov
ds
jo
lea
in
insl
ss
dec
test
inc
movsb
fcoml
scas
lcall
scas
movsl
jmp
test
fcmovne
call
xchg
add
xorps
jns
adc
popf
xchg
cltd
jle
lret
inc
ja
xchg
loopne
mov
lret
lahf
mov
pop
sbb
orl
sub
add
fwait
sahf
test
iret
inc
dec
sar
aas
push
xor
pop
in
enter
stos
adc
cmpl
fdivrs
add
xor
mov
cmp
lods
adc
xor
ja
loop
push
add
in
adc
popa
push
das
je
xchg
dec
xchg
in
imul
cmp
mov
lcall
mov
data16
mov
icebp
mov
ret
pusha
mov
or
cmp
enter
pop
je
mov
stos
push
shll
outsb
jnp
or
xchg
outsl
pusha
daa
movsl
out
xchg
decb
cld
jp
dec
or
icebp
lcall
fnstsw
dec
mov
out
movsb
cmpsl
xor
enter
xchg
lods
and
pop
or
inc
test
cmpsl
cmpsb
shrl
pop
and
out
add
xor
dec
stos
aam
out
sub
cmpsl
and
add
movsl
xchg
add
xchg
lds
sbb
outsl
jne
xchg
sbb
out
mov
cltd
push
data16
es
stc
xor
ljmp
iret
sbb
fs
inc
call
push
popf
mov
leave
mov
pop
fcmovbe
pop
pushf
std
pop
pop
cmp
movsb
testl
aaa
jae
push
mov
push
or
andl
test
adc
sub
jp
xor
push
and
inc
push
mov
fcoms
bound
out
mov
adc
gs
mov
clc
ficoml
xor
mov
rcll
loop
out
push
jge
movsl
adc
es
cmp
jle
pushf
movb
sbb
pop
nop
sarb
insb
jnp
cmp
pop
pop
adc
pop
cmp
stos
mov
mov
pop
dec
stc
mov
dec
mov
inc
sbb
imul
xor
sub
insl
scas
call
dec
sub
dec
std
int
mov
cmpb
iret
pushl
inc
cld
inc
std
divl
push
sbb
push
xor
mov
iret
movsb
add
jp
out
out
ret
in
dec
push
mov
cmpsl
add
pop
nop
pop
das
out
aad
adc
fistpll
icebp
test
fwait
repnz
out
sbb
lods
mov
ret
mov
fnstsw
out
xchg
pop
jno
in
push
ret
sub
loop
pusha
rcr
sbb
shrl
mov
movsb
mov
fisubrs
and
in
out
cli
mov
outsl
sbb
add
ret
mov
repz
dec
movsl
mov
sub
mov
stc
cmp
adc
insl
mov
loopne
xchg
sbbl
test
pop
pop
out
iret
call
aad
jbe
dec
xlat
and
fucom
mov
das
pop
repnz
not
sub
fbld
mov
or
rcr
les
xorl
gs
test
mov
mov
xchg
lret
push
adc
mov
popf
adc
lock
and
adc
sub
cmp
ss
and
xor
flds
fs
mov
stc
or
mov
out
add
and
in
adc
flds
inc
test
pop
cltd
int
mov
and
test
sbb
cmp
sbb
fstl
lret
stos
les
mov
movsb
das
and
and
xor
lock
filds
inc
add
jno
mov
xor
push
mov
lods
mov
and
addl
in
dec
testl
popa
in
sub
loope
add
sub
sbb
lahf
adc
fcmovb
movsb
xchg
xchg
pop
pop
push
sbb
cmp
jmp
mov
lock
fbstp
mov
dec
outsb
sub
cmc
dec
insl
out
hlt
repz
adc
mov
push
ds
dec
arpl
test
push
out
mov
sub
mov
lcall
int
push
int
inc
subb
in
pop
mov
push
adcb
xor
in
push
sbb
xchg
test
pop
and
ss
mov
and
xchg
dec
lahf
mov
push
and
je
sbb
mov
in
les
into
or
mov
cmp
dec
outsb
inc
jecxz
mov
xor
or
add
imul
scas
mov
or
pop
addb
inc
ss
xchg
add
inc
pop
je
loop
sbb
sub
sbb
je
sbb
xor
out
jne
int
push
pushf
inc
mov
outsb
stos
mov
inc
pop
cmp
jno
adc
dec
add
sbb
lret
inc
xor
push
pop
bound
ljmp
mov
popa
mov
and
add
fisubrl
scas
pop
inc
pop
ffree
loope
dec
lea
mov
imulb
jg
add
ljmp
jle
ficomps
jno
xchg
jne
xor
mov
cmp
push
lods
movsl
push
lea
dec
xor
notl
pop
pop
hlt
or
push
xor
cmpsb
xor
in
fbstp
mov
je
sbb
push
in
mov
jo
cmpsl
test
mov
mov
nop
pop
popa
dec
je
adc
jge
dec
pop
inc
sahf
push
fs
inc
adc
mov
mull
in
sub
pop
jl
jnp
ds
jns
dec
add
xchg
mov
dec
insb
push
cwtl
lret
cmpsb
jg
cs
inc
testl
sbbl
sub
repz
mov
call
mov
shll
outsb
outsl
aad
jge
insl
jae
ret
mov
in
pushf
jnp
shlb
inc
inc
icebp
cwtl
sub
xor
add
sub
data16
mov
jmp
push
push
cmp
adc
dec
out
pusha
sub
in
push
pop
stc
mov
push
mov
xlat
xchg
and
lahf
or
sub
scas
add
mov
xchg
pop
mov
lods
or
pop
loope
pop
aam
inc
mov
mov
sub
pop
cltd
lcall
cld
js
insl
leave
std
sub
loopne
les
inc
hlt
leave
pusha
jl
push
mov
and
call
fidivrs
or
inc
jne
mov
xchg
in
sbb
xchg
mov
shr
loopne
push
in
cmp
lea
out
dec
sub
xchg
pop
in
pop
loop
in
stos
leave
shrl
cltd
cmp
mov
mov
jle
lods
js
out
xchg
rcll
testl
xor
fidivrl
aam
pop
xchg
sti
sbb
or
imul
inc
sbb
dec
xor
data16
aad
sub
adc
lock
sub
hlt
adc
push
mov
stos
jne
push
daa
sub
hlt
add
mov
pop
lea
imul
jns
push
jg
movsl
lods
out
ficoml
pop
inc
cld
lret
add
hlt
test
in
sbb
mov
push
pop
xchg
push
pop
sahf
xchg
test
lds
pop
dec
test
xchg
mov
push
mov
iret
lcall
push
mov
mov
xlat
pop
jp
sbb
inc
xor
pop
imul
pop
push
cmpsb
adc
fmuls
xchg
or
and
pop
xchg
rcrl
ret
dec
xchg
cld
stos
imul
add
popa
ds
dec
xor
jp
mov
or
in
lock
repz
jl
jl
insb
movlps
pop
dec
sub
rcrl
cmp
adc
xor
cmp
test
outsb
and
push
jle
popa
cmpsb
repnz
fwait
les
lods
subb
or
pop
push
and
cs
sti
and
mov
jnp
inc
lods
inc
xchg
filds
cmp
pop
pop
add
imul
lahf
mov
dec
jl
out
xchg
neg
pop
fcoms
lret
lret
aas
call
push
xorl
push
inc
xor
mov
in
repnz
clc
jl
push
sbb
out
push
inc
or
in
or
xor
movsl
rcrl
je
ftst
xlat
or
sti
jo
push
in
test
out
mov
popa
ljmp
aaa
inc
mov
mov
adc
nop
pop
int3
jbe
stos
test
in
fcomps
mov
popa
jl
lret
adc
xchg
mov
fadds
dec
out
xor
testb
daa
into
and
sbb
add
xlat
test
in
mov
xchg
mov
lret
pop
push
lcall
fldpi
fmuls
mov
pop
jo
mov
cmp
mov
mov
pop
mull
cld
cmp
rcll
push
jl
fisttpl
repz
adc
mov
cltd
mov
movb
xor
xor
xor
sbb
sub
mov
ds
scas
push
dec
test
sub
addl
lods
xor
xor
pushf
sbb
cmc
push
add
imul
jmp
idivl
add
inc
pop
fisttpll
pop
sub
je
cmp
pusha
cmpl
push
vpandn
adc
mov
pop
shrb
ret
icebp
dec
aad
sbbb
lods
iret
or
lea
addr16
repz
pop
push
and
push
or
jecxz
cmpsl
sbb
inc
adc
arpl
cli
orl
sarb
je
jne
push
mov
ficomps
xor
aam
or
out
push
cmpsb
mov
fldt
jo
push
jbe
test
push
btr
mov
stos
stos
shr
xor
sarb
hlt
fs
movb
adc
xor
icebp
stos
sub
fstpt
out
aam
or
mov
cmp
xor
pop
jae
movsb
pop
inc
pushf
cwtl
add
daa
and
stos
push
test
mov
dec
cltd
addl
push
cld
cwtl
push
in
and
push
mov
xor
sbb
jno
adc
loop
and
lea
mov
fdiv
cld
pop
jbe
addr16
cmp
dec
out
sbb
sub
leave
out
pusha
in
dec
cmp
lea
lcall
jmp
loop
xchg
xor
add
dec
std
adc
aas
inc
push
jp
fld
imul
daa
nop
js
dec
mov
pusha
scas
cmp
and
jno
xchg
fcmovnb
rcrb
sbb
outsb
fstl
pushf
ja
imul
scas
out
mov
pop
addr16
cs
push
jnp
pop
xor
stos
and
dec
sub
adc
mov
dec
bnd
in
adc
daa
lret
xchg
lods
cmpsl
pop
imul
inc
mov
nop
jle
xchg
stos
inc
int3
jmp
sbb
subb
pusha
stos
es
movsl
mov
bswap
dec
jg
push
dec
repz
lea
repnz
fdivs
cmpsb
leave
ret
mov
xchg
out
stc
sub
lahf
nop
xorb
or
ds
out
pushf
imul
push
ja
out
stc
rcl
push
jle
mov
mov
sub
push
movsb
out
nop
xchg
popa
jg
push
mov
out
xchg
sbb
mov
or
xorl
stos
iret
rcrb
cltd
sbb
push
lods
adc
sub
mov
fmull
js
ret
scas
andb
or
mov
inc
pop
mov
mov
adc
inc
ja
aaa
xor
lahf
xchg
sti
test
sahf
pop
mov
jecxz
add
call
aam
enter
mov
sbb
repz
rorl
push
lock
sbb
insb
clc
inc
fistpl
jo,pn
sbb
std
mov
test
cmp
leave
or
out
sbb
mov
lods
jno
sbb
push
mov
dec
jecxz
sbb
cmp
sarl
inc
call
and
test
out
mov
call
sub
loop
bswap
add
adc
jmp
jle
loope
fs
mov
outsb
pop
js
mov
and
mov
notb
sbb
daa
or
cmc
add
jmp
shl
aas
xchg
adc
out
lcall
adc
outsb
leave
mov
inc
push
loope
jns
aas
dec
xor
push
push
add
xor
add
sbb
cs
int3
aas
sub
ss
jg
push
mov
scas
add
insl
pushf
adc
aam
cmpb
sub
stos
xor
dec
push
xchg
rolb
sub
ror
fidivl
adc
xorb
or
rcll
cli
push
movswl
iret
bound
sti
aas
addr16
pushw
pop
and
out
int3
in
jecxz
fnstcw
mov
mov
in
push
inc
fldenv
in
inc
pop
jnp
inc
push
test
xchg
arpl
subb
inc
push
push
pop
sub
mov
loop
cmp
cs
cli
jb
and
inc
cmpsl
pop
and
imul
roll
int3
pop
sub
lahf
and
adc
imul
xor
xchg
sub
clc
ds
xor
and
cmpsb
jmp
or
mov
jg
mulb
or
pop
xchg
or
push
fsubs
into
mov
mov
mov
inc
dec
and
mov
pop
mov
mov
insb
xlat
add
inc
xor
pop
daa
and
rcrb
loopne
std
dec
repnz
push
test
xor
sub
pop
sbb
pop
mov
les
rep
xchg
jmp
cmc
popa
xchg
xor
scas
outsb
mov
subb
add
mov
pushf
outsb
add
getsec
movsb
mov
icebp
out
popa
data16
push
add
outsb
cwtl
int3
daa
jmp
pop
je
adc
mov
xorb
mov
aas
push
inc
and
shl
ds
test
in
push
enter
in
xor
push
cmp
ds
mov
xor
int3
pop
mov
fistl
clc
bound
inc
sarl
pop
std
in
xlat
or
call
mov
add
ja
fimull
fisubrs
mov
sbb
mov
adc
mov
mov
sbb
push
fiaddl
xchg
xchg
dec
lahf
pop
into
or
addr16
int3
xchg
movsl
mov
fldl
inc
jl
ljmp
mov
pop
ljmp
xor
aam
addr16
inc
or
subb
sbb
imull
xlat
rcl
xchg
push
jae
sbb
les
add
out
cli
ficoms
adc
cmp
xchg
andl
mov
loope
xchg
in
xchg
adc
and
ja
pop
shrl
mull
rolb
sub
and
xchg
mov
popa
mov
xchg
dec
mov
dec
lods
ds
mov
pop
daa
adc
jecxz
ja
test
adc
icebp
xor
iret
sbb
mov
dec
dec
lret
fmuls
repnz
add
xchg
fsts
adc
fadd
mov
jae
and
or
dec
subb
inc
dec
sti
or
out
inc
push
call
mov
inc
aad
jg
jb
push
jle
cmpsb
pop
adc
aas
fldenv
arpl
adc
jns
xchg
outsl
dec
push
pop
inc
mov
dec
gs
pop
mov
das
je
into
sahf
imul
test
sbb
push
fs
inc
sbb
lahf
mov
or
mov
cmp
outsb
push
cld
ret
mov
inc
ret
dec
mov
outsl
pop
mov
or
xchg
mov
adc
repz
das
inc
inc
out
lcall
int3
leave
jle
cmpsl
fwait
out
pop
mov
sbb
adc
bound
inc
jg
mov
xchg
dec
adc
out
dec
dec
in
and
repz
adc
stc
mov
dec
loope
mov
js
dec
iret
dec
mov
pop
popa
in
push
mov
cs
xor
pop
cmp
divl
repz
mov
mov
loopne
mov
mov
or
jae
and
arpl
jae
mov
les
xchg
jbe
jp
fists
add
ror
rcll
dec
cld
sbb
mov
fisttpl
adc
inc
stos
jp,pt
adc
shlb
push
cmp
inc
aad
jno
repnz
loopne
lret
daa
lahf
or
subb
jecxz
fs
arpl
add
cmpsb
cmpsl
ss
aam
adc
pop
push
lods
pop
dec
jmp
and
sub
push
xchg
mov
push
sbb
fwait
xchg
mov
movsl
or
sbb
ret
pop
or
mov
pop
sbb
push
data16
lcall
xchg
addr16
into
push
sysenter
fisttpll
sbb
fldl
push
call
hlt
add
aas
sbb
cmp
jle
ret
push
inc
cld
bound
sti
cli
repnz
adc
push
aam
dec
jl
movl
fldt
rcrl
imul
push
mov
aam
jg
aad
mov
add
repz
cwtl
inc
icebp
push
das
jnp
jnp
imul
mov
es
xor
pusha
dec
push
adc
mov
sub
loopne
xchg
scas
sub
outsl
sbb
or
std
lahf
cmp
cld
dec
dec
add
lds
fs
push
mov
jg
std
fmull
mov
ja
call
push
sbb
mov
loop
adc
inc
test
sbb
pop
je
icebp
sub
mov
fs
xor
in
int3
aam
jo
mov
dec
icebp
mov
pop
test
scas
and
or
ljmp
sub
adc
sbbl
aam
or
in
popf
test
rcrb
mov
cmpsb
mov
xchg
pop
xchg
fwait
loopne
cmp
adc
dec
int
xchg
or
sbb
push
fildl
fwait
jmp
loope
xor
fimuls
lcall
xchg
sbb
jno
fcoml
jbe
loope
dec
fiaddl
lcall
xchg
xor
mov
pop
jb
inc
xchg
sub
in
cmc
ficompl
subl
test
lret
inc
jmp
mov
fldenv
jo
add
sub
icebp
jmp
ljmp
sahf
enter
loop
xor
lahf
insl
int
lcall
inc
add
inc
push
das
aaa
jns
mov
mov
loopne
shl
sub
bound
inc
inc
mov
pop
xor
ret
shlb
cmpb
shl
adc
mov
data16
pop
mov
aad
mov
sbb
xchg
push
lcall
jae
mul
cmp
xor
xor
xchg
out
xchg
dec
dec
mov
mov
lock
rclb
lds
inc
jns
mov
mov
mov
xchg
std
sbb
popf
pop
xchg
fidivl
repnz
add
cmp
out
mov
stc
enter
dec
inc
cltd
push
cs
inc
xor
dec
adc
push
push
jns
sbb
mov
fs
mov
jo
sub
and
mov
cmp
ret
sbb
lock
scas
rcrb
shlb
sbb
or
push
push
pop
in
cmpsl
adc
mov
mov
pop
dec
dec
push
clc
xchg
daa
adc
adc
fistps
dec
add
jl
mov
mov
fdivs
lds
dec
and
sub
mov
and
das
daa
add
mov
scas
push
mov
call
clc
ret
std
ficoms
jns
jecxz
loopne
jl
sbb
mov
mov
inc
lea
and
mov
icebp
lahf
mov
pop
xor
ja
jl
aam
dec
jg
pop
out
daa
ret
jp
sub
dec
in
inc
push
push
adc
icebp
cmpsb
sub
push
popf
mov
push
lret
call
je
out
and
cmc
test
out
fmull
mov
xor
mov
adc
je
lods
idiv
insb
lret
test
stos
lahf
jbe
int3
adc
sub
test
daa
aaa
imul
stos
sbbl
idivb
call
mov
rcrb
adc
jb
or
xlat
lahf
sub
ret
xor
mov
inc
loop
and
xor
js
xchg
gs
bound
test
and
sbb
mov
test
xor
test
or
adc
mov
cmp
pand
mov
fcmovb
test
sub
fisubrl
arpl
lods
fidivs
movsl
lea
jbe
push
inc
jns
outsb
sub
hlt
ljmp
or
or
push
stc
imul
push
or
inc
into
or
lret
aaa
dec
xor
fwait
jmp
scas
push
inc
rcrl
xchg
push
xor
pop
dec
dec
xlat
sub
add
jge
cmp
dec
icebp
js
xor
jne
insb
adc
xchg
adc
int3
aaa
push
mov
fldcw
sub
sbb
xchg
sahf
cmc
int
cli
ss
sbb
add
hlt
in
xor
stos
fwait
lods
scas
scas
cmp
add
and
out
mov
mov
jp
dec
out
cmp
xor
push
cmp
idivb
push
das
and
es
push
movsl
out
mov
pop
sub
mov
out
sub
sbb
adcl
orl
push
lods
incb
lea
mov
fwait
outsl
cwtl
inc
or
out
or
shrl
jmp
inc
sbb
adc
insb
mov
insl
add
mov
mov
sbb
adc
cmp
faddl
jle
lret
mov
gs
xor
popf
jne
add
sub
lds
mov
jmp
movsb
inc
std
and
stos
dec
addr16
adc
mov
sub
fcoml
inc
iret
repnz
aas
lahf
fnstcw
mov
test
in
mov
adc
and
sahf
mov
fsubs
mov
sbb
dec
pusha
stos
cmp
inc
mov
sahf
lea
inc
lea
movsl
rolb
insl
jl
icebp
pop
xchg
mov
pop
adc
mov
pop
lahf
inc
test
mov
loopne
inc
adc
popf
lods
sub
cmpsl
test
fnstcw
push
mov
and
repnz
push
pop
add
push
ss
sti
je
jbe,pn
ret
sub
mov
jno
mov
jp
sahf
adc
enter
xchg
jns
push
add
mov
pushf
fwait
mov
scas
add
mov
subl
fisttps
sbb
xchg
test
jns
stos
and
xor
pop
sub
lock
push
leave
stos
adcb
js
xchg
mov
je
xor
ja
orb
lods
sarb
adc
rorl
jl
jno
xchg
push
pop
in
jo
inc
mov
sbbl
dec
lea
push
mov
mov
dec
xorb
jge
xchg
xchg
dec
stc
shl
idivl
iret
xlat
rcr
loop
mov
add
jno
pop
add
paddusb
adcl
jl
in
xchg
adc
mov
push
lds
and
fldcw
into
xor
test
shrb
and
sub
push
and
inc
cmp
jno
rcrb
fs
into
add
pop
fimuls
push
test
adc
idiv
mov
inc
xchg
nop
incl
and
mov
mov
sti
adc
dec
mov
in
inc
sbb
sbb
jne
es
mov
in
push
inc
pusha
test
arpl
jns
push
push
cwtl
pop
aaa
mov
std
movsl
pushf
loope
outsb
mov
sbb
adc
or
addr16
dec
adc
rcrl
cs
push
add
cmpsl
xchg
xor
mov
xor
jp
shl
int3
xor
xchg
pop
pushf
incb
sar
sbb
lods
cmp
add
insl
pop
mov
imul
andb
scas
pop
xchg
jle,pt
rolb
pop
cmp
ficompl
and
push
dec
dec
cwtl
xor
adc
push
pop
arpl
jo
xchg
cmp
dec
jl
push
inc
or
jle
dec
cmpsb
out
cltd
inc
in
jl
dec
loope
cltd
pop
outsb
mov
pop
filds
cmpl
in
lods
jp
lcall
mov
sti
movsb
sbb
sbb
adc
popa
jl
xor
push
pop
sbb
pop
iret
adc
sbb
sbb
mov
xlat
loop
int3
iret
jp
pop
das
fists
cmc
pop
inc
pop
fwait
jnp
push
int3
mov
sldt
ja
and
jl
dec
add
xchg
ja
fdivl
fsubrp
loop
data16
pop
sbb
in
xor
mov
push
repnz
mov
and
iret
mov
mov
popf
lods
pop
mov
sbb
mov
fldl
roll
adc
iret
push
jbe
dec
add
popa
inc
cmpb
sbb
test
pop
lcall
sub
pop
fldenv
cli
mov
aad
idivl
call
mov
pushf
push
lahf
insl
sbb
daa
mov
or
adc
loopne
adc
cmpsl
shrl
pop
dec
xchg
mov
ficoml
or
inc
xchg
ret
ret
jo
jle
fidivrl
mov
aam
jnp,pt
mov
rolb
popa
ret
jae
aaa
call
les
xchg
push
imull
xor
jecxz
ss
outsl
pusha
dec
or
cmp
add
gs
xor
sbb
mov
lahf
mov
mov
or
sahf
loopne
push
pop
xor
xchg
dec
cmpb
loope
jno
mov
xchg
imul
notb
fcmovbe
pop
xchg
cmp
xchg
add
lea
cwtl
and
pop
cltd
scas
aas
jne
ss
adc
dec
cmp
add
sti
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
lock
mov
int
bound
cmp
cmp
lds
push
cmp
or
ret
popa
cmpsl
xchg
jbe
lods
or
fcmove
pop
mov
aad
xorl
inc
inc
xchg
push
push
cli
repnz
push
sbb
cltd
fucom
arpl
jbe
and
cmp
cmpsb
inc
cmp
jb
or
pop
mov
xchg
out
fmuls
jne
sub
stc
cmp
in
mov
or
or
cmc
imul
adc
and
xchg
adc
pop
dec
popa
dec
adc
bound
push
sbbb
mov
ss
bound
arpl
and
inc
lds
xor
xor
push
mull
and
mov
ss
jp
jo
xchg
loop
fnsave
adc
je
shll
cmpsl
cmp
fwait
addl
hlt
outsl
pop
inc
ds
mov
test
mov
movsb
fwait
mov
jg
dec
jmp
pop
push
fwait
push
pop
cmpsl
sub
or
rorl
push
mov
hlt
add
pusha
cld
pop
add
stos
pop
out
sub
mull
adc
xorl
lods
add
out
div
outsl
test
inc
cmpl
outsb
jp
pop
test
adc
and
push
insl
mov
sbb
bound
aas
mov
jle
sbb
mov
add
sub
sub
sbb
add
aaa
loopne
out
mov
fidivrl
cmp
fwait
ljmp
movsl
sbb
ss
jmp
mov
gs
lods
push
and
js
cltd
aaa
lret
push
push
push
stos
jmp
test
in
add
inc
mov
in
sti
mov
sarb
mov
fistps
lcall
ss
pop
stc
arpl
xor
jmp
jge
out
aas
lcall
add
movsl
fisubs
jecxz
dec
imul
in
xorb
ds
scas
xor
sub
loop
push
push
test
test
mov
sub
mov
aad
cmpsb
rorl
mov
popa
mov
lds
jnp
mov
jne
xchg
loope
clc
push
in
cmp
stos
repz
xchg
fdivrl
loopne
mov
ja
lret
mov
and
int
int
dec
mov
fnsave
add
das
dec
pop
arpl
loope
fiadds
add
fidivs
mov
aas
push
gs
adc
repnz
push
lods
push
jno
mov
mov
movsb
xchg
and
rcrb
inc
je
cld
or
dec
jnp
pop
outsb
or
ficoms
cmp
xchg
and
push
mov
lods
add
stos
pop
mov
mov
movsb
sbb
fsubrp
sub
jbe
cmp
lods
xor
mull
jae
mov
cmc
les
mov
ja
push
fldt
push
push
add
or
adc
cwtl
push
pop
jle
xchg
aaa
lea
dec
jae
jmp
jmp
adc
or
clc
add
fldcw
adc
in
dec
pop
dec
pop
fisttps
jl
mov
movsl
shrl
mov
lock
mov
push
das
xor
dec
add
jae
movl
push
movsl
or
lahf
cmp
aas
xchg
jae
fistpl
mov
sub
inc
push
mov
nop
jnp
lret
or
out
lret
dec
lret
pop
test
dec
push
lcall
ds
idivb
inc
decb
pushl
in
xchg
imul
rol
push
adc
sbb
rcr
dec
dec
mov
pop
int3
pop
mov
mov
popf
add
inc
jnp
push
ret
loop
outsl
addr16
inc
push
rcrl
sbb
mov
mov
les
mov
stc
lods
lds
sbb
or
outsl
gs
adc
pop
or
sti
jg
adc
sub
mov
jo
and
or
or
xchg
lret
mov
imul
mov
pop
dec
cmp
addr16
rcll
sahf
or
roll
outsb
popf
xor
mov
lret
adc
push
scas
decb
push
add
adc
push
sub
hlt
cli
imul
jb
jecxz
enter
push
arpl
mov
out
pop
mov
in
mov
mov
jp
shll
bound
jnp
mov
inc
es
mov
or
jmp
xchg
cmp
sbb
mov
stc
push
dec
push
adc
outsb
and
push
mul
sub
fdivl
jno
dec
shlb
cmp
pop
shll
test
cli
mov
sub
fmuls
pop
scas
xchg
and
mov
shl
and
sub
mov
ds
aaa
jle
mov
in
mov
mov
or
xor
sti
das
mov
inc
sub
divl
add
push
mov
and
es
inc
and
mov
xor
jae
aaa
push
xchg
movl
sbb
pop
inc
fwait
mov
xchg
cmp
xchg
sub
fdivl
jg
xor
sub
dec
je
push
or
loope
sarb
push
fsubs
inc
daa
mov
sbb
mov
int3
or
imul
pop
cmp
mov
shl
dec
xor
jmp
fisttps
aad
lahf
daa
pop
and
hlt
loope
mov
inc
mov
mov
addr16
mov
enter
ret
mov
mov
push
jno
loope
or
inc
sbb
mov
pop
inc
push
add
cmp
lahf
mov
fcompl
rcl
add
sbb
mov
or
gs
loope
vmread
inc
jb
sahf
nop
and
pushf
popa
js
pop
adc
inc
inc
jae
add
mov
mov
out
leave
dec
imul
jns
in
fs
out
inc
sbb
cmpl
adc
and
pop
xchg
aam
in
push
rclb
push
sub
or
mov
fcmovnu
lock
out
mov
mov
enter
and
fs
xchg
push
insb
adc
cs
lea
push
adc
mov
outsl
data16
mov
divl
add
lret
mov
push
inc
lahf
roll
pushf
jae
xchg
inc
inc
push
test
mov
in
clc
cmp
loop
fucomp
add
xor
aas
jle
loop
enter
test
test
jmp
xchg
in
pop
cmp
insl
leave
daa
xorl
adc
xor
mov
aas
and
outsl
mov
xor
clc
add
fimull
lea
bound
sub
std
mov
rcr
in
add
stos
inc
mov
jo
push
sub
out
in
mov
gs
xor
mov
test
xchg
lahf
push
xchg
lea
fistpll
call
daa
mov
sub
iret
jae
push
fdivr
mov
daa
fildl
jge
dec
pop
inc
lds
fwait
jl
or
add
pop
lods
arpl
jne
les
aas
mov
decl
lods
iret
jo
rcrl
push
lcall
xchg
pop
cmp
lea
jl
pop
adc
dec
in
lahf
jo
fdivrl
sub
popf
mov
out
enter
inc
gs
inc
or
jne
mov
adc
and
or
fwait
and
imul
into
leave
mov
int3
ja
dec
cmp
and
popf
push
fs
movsb
scas
or
mov
out
mov
mov
stos
aam
imul
testb
inc
inc
ret
add
test
dec
pop
jno
arpl
cmp
cmp
dec
mov
dec
cltd
aas
aam
call
inc
push
sbb
out
or
cmp
xchg
xchg
cmp
cmp
pop
inc
enter
mov
dec
push
into
jb
enter
in
inc
arpl
mov
insb
cmc
out
sub
sub
lds
sbb
jp
ss
mov
mov
jle
ja
pop
jnp
push
xor
je
push
loopne
aam
pop
add
int3
add
cmc
movsl
bound
xchg
out
sub
sti
lock
or
loope
inc
jge
ljmp
leave
cwtl
das
mov
jnp
cmp
push
inc
jno
xchg
jp
push
das
out
std
xchg
mov
out
inc
jno
icebp
sbb
or
mov
jmp
repnz
add
jae
add
and
aam
pop
sub
test
inc
lock
mov
in
push
test
fs
pop
fiaddl
mov
inc
lcall
mov
call
mov
bound
mov
xlat
jne
add
dec
pop
subl
or
ret
inc
pop
fnsave
and
pop
sub
inc
sub
dec
inc
mov
xchg
inc
ret
and
xchg
xor
or
cmp
jo,pt
std
popf
out
mov
pop
push
cmp
orl
pop
sbb
repz
roll
clc
lahf
insb
sti
arpl
add
sub
jmp
leave
bswap
inc
cmp
shr
popf
mov
ret
adc
call
cld
add
or
cmp
into
cmpl
adc
pop
js
icebp
jmp
out
xchg
jo
sub
call
call
xchg
imul
pcmpeqd
cmp
mov
inc
mov
dec
push
sub
stos
jg
cmp
sub
push
scas
or
jg
push
and
fldl
fidivrs
xchg
push
sub
or
or
lea
cli
cld
enter
mov
call
dec
push
inc
mov
stos
sbb
mov
jae
push
dec
cmc
xlat
sub
aaa
push
add
shrl
ljmp
xchg
lcall
mov
dec
pop
xchg
jle
xchg
cmp
inc
cmp
and
or
aas
push
outsb
inc
pop
xor
bound
test
mov
test
hlt
inc
popa
xchg
jo,pt
stos
jmp
cmp
arpl
daa
gs
addr16
jecxz
loopne
inc
movsb
aaa
loop
lsl
jge
lea
ds
out
xchg
cwtl
sti
cmpl
xor
sub
jne
cmp
ljmp
mov
jno
nop
mov
dec
ficompl
push
sti
xlat
cmp
fsubrl
idivb
ret
rcr
stos
sahf
xor
xchg
jbe
cmp
cld
jp
mov
sub
pop
jmp
repnz
call
adc
xor
dec
push
lcall
cld
xor
icebp
sub
mov
ret
ret
or
scas
push
je
fadd
sbb
cmc
dec
jg
in
mov
imul
mov
dec
sbb
adc
jb
mov
cwtl
out
lock
mov
inc
pop
rorb
mov
push
mov
in
int
sbb
aaa
in
movsb
xchg
mov
fs
adc
cld
lret
lahf
or
adc
lods
rcr
mov
sbbb
xlat
push
sbb
push
jle
lret
loopne
dec
xor
enter
cld
mov
in
loopne
imul
outsl
xor
mov
xor
pop
lcall
sbb
test
and
dec
pop
jmp
lahf
xor
mov
shll
mov
mov
sbb
xlat
mov
push
push
push
cltd
sub
jl
lahf
lcall
push
pop
pushf
sarb
std
inc
mov
jne
push
mov
xchg
lahf
imul
and
insl
adc
fldl
mov
or
sahf
fistps
scas
jge
daa
xchg
mov
push
mull
jnp
insb
mov
sahf
aaa
pop
cld
sub
lods
shl
inc
mov
ss
enter
lea
sbb
cmp
dec
pop
dec
sbb
mov
lret
and
aam
jge
xor
insb
add
or
mull
leave
sub
cltd
pop
test
fbld
inc
ljmp
push
subl
or
sti
cld
fwait
in
cmp
bound
adc
mov
cmp
or
rcl
imul
pop
inc
mov
repnz
fldl
scas
lods
dec
sub
and
xor
pop
aad
fcmove
mov
sbb
xchg
xor
mov
and
fwait
cmpsb
inc
jle
sub
adc
pusha
fsts
ds
sbb
lret
mov
push
test
scas
ja
jb
pop
sbb
push
xor
push
fidivrs
pop
mov
fstpt
pop
into
daa
test
jne
arpl
mov
mov
inc
fmul
add
or
sub
mov
rol
popa
inc
nop
out
sbb
push
cwtl
jecxz
mov
ret
dec
xor
fstl
fs
test
sbb
adcb
pop
cld
dec
fld
ljmp
mov
sahf
pop
dec
ret
enter
lahf
inc
out
adc
inc
cli
mov
and
rcll
mov
push
mov
cmp
or
jp
lea
sbb
jg
mov
stc
xor
repz
mov
adc
xor
add
fstl
fsubs
rol
sbb
xchg
sbb
fs
push
jne
push
mov
sti
and
in
testb
gs
cmc
aam
sti
cli
mov
sbb
je
sbb
pushf
or
push
push
les
cld
xchg
inc
fimuls
sbbl
hlt
leave
lret
fildl
leave
fsts
stos
xchg
xor
cmpsl
adcb
cmp
jnp
and
mov
call
and
or
xchg
mov
jmp
fistps
pop
mov
sbb
repz
xchg
inc
xchg
mov
push
xor
addb
pminub
xchg
jno
sub
pop
fimull
and
xchg
xlat
data16
cmovnp
gs
mov
jne
scas
or
loopne
pop
aad
mov
fisttpll
fs
and
andb
jecxz
xchg
or
arpl
cmp
adc
cmpsl
es
lods
les
incl
dec
in
ja
in
xchg
pop
push
xor
ljmp
repnz
inc
rol
gs
and
push
sbb
aad
or
es
cmpsl
sti
jmp
cmp
jbe
lret
in
in
pop
lods
test
jno
pusha
test
mov
scas
jne
es
gs
mov
ret
sub
fisttps
mov
jns
std
popf
sub
repz
ss
enter
test
sahf
data16
cmp
sbb
pop
out
js
lea
mov
mov
test
dec
sub
adc
xchg
loope
aas
lret
lods
fcomps
jge
dec
ds
les
sbb
adc
or
js
into
in
jmp
dec
mov
movsb
pop
mov
fdiv
imul
xor
roll
pop
shll
pop
sbb
cli
mov
xor
xor
cltd
mov
pop
mov
mov
cmpsb
mov
adc
cmpsl
xchg
ret
int
test
dec
pop
rcrb
jl
rol
stos
fiadds
cmp
sbb
push
inc
popa
mov
push
jno
mov
adc
jmp
scas
aaa
xchg
dec
mov
bound
mov
movsb
std
mov
mov
cmp
xchg
dec
roll
jg
sub
rolb
pop
ret
mov
add
pusha
in
adcl
in
aam
dec
mov
sbb
pop
pop
outsl
pop
cli
scas
push
and
mov
sub
pop
adc
test
dec
or
mov
sti
imul
xor
test
dec
dec
shll
cltd
add
inc
and
sub
or
inc
mov
sbb
clc
loop
sbb
das
daa
push
or
imul
popa
in
insl
push
ds
inc
dec
fists
or
pop
cli
out
scas
addr16
enter
test
rcrl
jnp
mov
push
insb
mov
movsb
mov
data16
push
mov
lods
xchg
or
addr16
push
sbb
pop
xchg
or
xorb
sarl
mov
imul
jmp
imul
dec
and
fwait
test
popa
fs
cmpsl
mov
es
jmp
scas
fists
pop
inc
int3
lock
lcall
and
jns
mov
fldt
outsb
ret
sbbl
jmp
mov
fcom
fwait
push
mov
cmpsl
mov
xchg
mov
xchg
repz
sub
mov
outsl
or
sbb
sbb
arpl
jno
xchg
xor
test
push
mov
aaa
push
inc
jle
xchg
insb
int3
js
inc
cld
mov
in
data16
arpl
cmp
stos
and
xchg
sub
das
jmp
bound
and
into
fucom
lds
imul
xor
push
jo
xchg
jp
jno
inc
sbb
sarb
cwtl
sbb
xor
sbb
and
std
inc
dec
lcall
or
mov
pusha
cmpsl
sub
lahf
daa
pop
xchg
sub
push
testl
push
pop
mov
xor
jbe
testb
xor
dec
outsl
cwtl
stos
xchg
enter
xchg
xor
insb
cmc
mov
cmp
out
inc
adc
mov
mov
pop
lods
mov
stc
mov
mov
push
dec
arpl
mov
jl
cmp
fmul
adc
rolb
dec
daa
divb
jb
aas
rorb
add
shrb
iret
lret
push
lods
dec
cmp
jnp
mov
ja
mov
jg
in
sub
inc
ljmp
sub
add
mov
lods
movsb
out
mov
lds
jmp
mov
adc
icebp
icebp
sub
pop
pop
adc
cmpsb
loope
cmp
sets
inc
decl
adc
out
jg
mov
je
jae
test
adc
inc
jp
dec
or
push
fstps
hlt
fildll
inc
pop
adcb
out
lea
cmpsb
or
mov
fldcw
aam
push
int3
cmp
fcmovnbe
push
inc
or
fidivrl
dec
adc
inc
fs
push
pop
imul
or
push
movsb
inc
sbb
adc
and
scas
out
push
xchg
out
std
repnz
sahf
sahf
cltd
mov
and
and
push
sbb
cli
int3
movsb
fstps
int3
inc
lds
mov
stos
push
adc
shrl
inc
cmp
jle
or
popf
lea
leave
jb
stos
adc
push
xor
inc
repz
cmpsb
in
xchg
out
push
and
pop
data16
adc
lock
inc
xlat
mov
fwait
cld
fbstp
mov
daa
jle
fadd
ret
jl
mov
sbb
pop
and
mov
sbb
popf
and
add
mov
mov
fdivrl
outsl
scas
add
aam
into
loopne
add
bound
xchg
fdivs
cmpsl
and
lcall
insb
push
cmpsb
iret
stos
xor
test
lret
fldcw
sarb
xor
xchg
jecxz
mov
clc
cmp
ret
mov
jo
sbb
pop
dec
mov
xchg
fwait
je
in
push
jne
arpl
mov
cli
out
lock
cmp
mov
or
mov
mov
loope
out
movl
aaa
inc
aas
ficoml
stc
dec
testl
lds
and
mov
into
sbb
inc
in
aas
mov
jg
ret
add
push
pop
mov
mov
es
aam
sahf
roll
ret
icebp
and
adc
cmpsb
mov
arpl
jecxz
cmp
int3
jp
lds
sub
mov
enter
ljmp
mov
push
sbb
mov
mov
or
or
les
in
lods
cli
dec
sbb
jns
sbb
jo
jge
xchg
jmp
sbb
dec
jmp
lods
sub
and
dec
stc
sbb
push
xor
mov
adc
lcall
pop
repnz
xlat
cld
dec
out
test
mov
xlat
out
mov
push
cmp
xchg
sti
and
mov
push
mov
sbb
cli
hlt
push
jo
mov
popf
dec
dec
iret
nop
sub
daa
fidivs
sub
push
cmpsb
je
mov
outsb
dec
and
inc
insb
movsl
dec
stc
sub
loope
push
ds
fnstenv
ret
ds
in
enter
dec
inc
dec
in
dec
inc
popa
mov
clc
jae
das
sti
pop
rolb
ljmp
fists
cwtl
rcrb
sbb
outsb
cmpsl
mov
mov
out
mov
adc
dec
sbb
mov
inc
push
cltd
cmp
push
adc
pop
int
pop
cwtl
ja
xchg
cli
das
sub
stc
popa
and
bound
push
inc
adcb
or
in
bound
shrb
rcll
inc
outsl
out
jno
and
stos
iret
clc
xor
sbb
push
cld
jmp
jne
dec
cmp
sub
add
dec
cwtl
jg
sub
popa
stc
mov
dec
mov
dec
and
test
loopne
add
jp
dec
or
push
inc
call
xchg
sarl
out
mov
jp
cli
pop
idiv
into
or
lret
mov
addr16
or
inc
lods
testb
in
ds
mov
cltd
mov
inc
add
and
jo
lock
jne
cmp
dec
sbb
jno
aas
sub
mov
lea
cmp
fnstsw
stos
ss
dec
dec
jle
jne
fistpl
int
and
push
mov
fsts
and
pop
in
iret
dec
xchg
dec
cmp
and
mov
mov
sbb
or
loop
adc
pop
xchg
xor
movsl
test
and
jne
lahf
daa
test
xchg
adc
jb
fs
out
adc
add
jmp
fstpt
outsb
in
sub
addb
aad
xlat
insl
cmp
movsl
popf
adc
stc
mov
sbb
ds
fsubs
sub
subb
mov
and
pop
out
xchg
mov
jne
bnd
insb
nopl
jmp
js
mov
test
in
lcall
cmpsl
pop
in
or
xchg
dec
ret
mov
mov
pusha
push
inc
inc
adc
test
imul
mov
movsb
mov
sbb
jp
lock
xor
inc
add
insb
jne
xchg
call
inc
mov
push
rorb
mov
lods
int3
sub
push
sti
jg
pop
fcomps
mov
xchg
stc
mov
push
xor
add
cmp
aaa
lods
popf
mov
adc
pop
push
sbb
lock
sarb
cmp
add
pop
lods
mov
roll
sbb
mov
jmp
sbb
mov
inc
xor
sbb
push
push
lds
push
and
out
insb
sub
pop
pop
imul
pop
loopne
xchg
and
out
and
jge
cmp
cmp
xor
test
sti
mov
rorb
add
cmc
adc
mov
lock
ret
or
jl
push
adc
test
das
or
daa
sbb
nop
or
js
cwtl
cli
ja
lret
cmpl
loop
pop
or
xchg
adc
push
adc
popf
inc
imul
call
mov
push
cmp
out
push
dec
xchg
movsl
dec
cld
adc
sub
popa
aaa
inc
jl
and
xchg
icebp
movsl
outsl
pop
sub
xor
leave
mov
sbb
fcmovnb
mov
mov
and
lcall
add
cld
int3
mov
jo
mov
cmpsb
insb
pop
stos
movsb
sahf
test
out
sbb
jbe
lods
repnz
stos
or
xchg
repnz
ljmp
cs
mov
mov
lahf
pop
inc
aam
ret
dec
push
jno
cli
adc
in
insl
push
outsb
ret
adc
test
jno
xchg
xchg
mov
lcall
xor
cmp
es
mov
insl
scas
test
insl
xor
mov
repz
bsf
fwait
add
adc
push
lret
jmp
mov
mov
sti
mov
icebp
ss
int3
lea
pop
es
cmp
iret
push
dec
pop
ffree
add
out
mov
pop
sahf
add
add
dec
sbb
or
outsl
cli
cmp
pop
add
cmc
frstor
aad
mov
pop
add
jns
test
stos
decb
and
add
jge
xchg
or
in
adc
jbe
into
out
sbb
lea
andb
mov
push
adc
dec
int3
fwait
outsl
pop
and
or
loope
pop
js
subl
int3
dec
fdivs
pop
xchg
xchg
in
rolb
ficoml
popa
jl
jno
lahf
mov
xchg
pop
movd
mov
lret
lods
jg
out
mov
add
push
cmp
pop
sbb
push
mov
std
pop
inc
out
insl
sub
adc
aam
mov
es
insb
imul
ret
mov
xor
mov
sbb
pop
jae
stos
shll
push
or
xor
xchg
loopne
cli
mov
mov
push
in
mov
cmp
xlat
bound
lret
mov
xor
stos
into
and
jno
xor
les
ss
xchg
addl
fisttps
mov
mov
dec
jne
adc
xchg
xor
adc
dec
push
imul
mul
jle
mov
adc
mov
dec
out
std
sub
aaa
push
iret
add
mov
scas
push
sub
outsb
dec
add
sahf
loopne
iret
int3
pop
sub
sub
iret
xchg
fistpll
and
pop
dec
das
push
jle
lods
nop
mov
ds
xor
sti
jae
pop
mov
mov
out
jl
in
mov
jnp
sbb
and
mov
xchg
or
in
mov
xor
sub
stos
loop
adc
push
in
cmp
aam
cmp
into
inc
mov
out
in
pop
push
push
push
imul
xor
hlt
inc
inc
stc
add
xchg
xchg
cwtl
pop
ljmp
jo
cmpsb
xchg
in
mov
ljmp
in
jne
xchg
pop
push
add
mov
insl
cmpsl
scas
add
stc
push
psubsb
and
repnz
xchg
xchg
int
fxch
lcall
jg
jge
out
stos
xchg
xor
or
sbb
xchg
mov
or
sbb
jge
or
fistpl
mov
sbb
push
cmp
aaa
iret
and
xchg
push
cmpsl
data16
sbb
pop
push
mov
fwait
imul
mov
nop
xor
fwait
pop
xor
mov
jb,pt
cmc
mov
sbb
and
in
inc
addr16
xor
xlat
mov
push
lret
insl
xor
loop
jnp
lds
inc
xor
inc
rcll
out
mov
add
lcall
push
fcmovbe
inc
cmc
addr16
sbb
xor
sar
push
std
xor
stos
icebp
daa
scas
out
loope
inc
insb
fdivs
scas
mov
cltd
aaa
cmp
jecxz
sbb
pop
push
xor
in
fcompl
inc
sub
repnz
jmp
pop
cld
xchg
scas
lods
inc
pop
cmp
pop
push
xchg
inc
pop
cld
cs
lret
xor
int
lret
pop
jne
pop
xor
scas
sahf
lret
inc
imul
test
mov
sub
je
test
dec
adc
cmp
xchg
hlt
movsl
pop
push
in
sub
sbb
aad
or
mov
sub
dec
xchg
stos
mov
xor
jl
sbb
dec
out
call
in
inc
jp
cmovns
ljmp
rcl
xchg
cltd
into
xchg
addr16
mov
pop
imul
rorl
jno
cltd
dec
push
lahf
mov
or
cmp
xor
in
andl
imul
ret
mov
lret
loop
test
stc
pop
push
scas
jle
clc
push
pop
or
clc
mov
mov
adc
movsl
mov
push
inc
fs
xorl
add
cltd
jmp
fs
jle
cld
or
insl
in
out
or
scas
jmp
in
xchg
jns
pop
pop
rcr
and
xchg
enter
dec
mov
adcb
jg
mov
jp
or
movsb
mov
or
imul
ljmp
cmc
lcall
jb
jge
push
ret
lret
jne
mov
aas
inc
jecxz
xchg
jno
xchg
add
insl
or
mov
pop
out
divb
int3
adcb
test
dec
push
cmp
xchg
or
popl
xor
cmp
cwtl
ss
adc
jo
mov
lret
or
scas
xchg
lock
ret
dec
stc
mov
int
mov
dec
mov
jl
and
insl
xchg
cmp
stc
xchg
leave
lods
jno
add
push
ror
cmp
jb
xor
mov
mov
pop
sti
sub
cmpsb
sahf
mov
ret
xchg
adc
je
inc
mov
sbb
ljmp
shl
sbb
std
pop
fisubl
clc
dec
sub
pop
jae
sbb
in
movaps
inc
lret
fldenv
mov
ror
cmp
inc
ret
mov
fists
or
add
jl
xor
daa
sbb
pop
cmc
leave
sbbb
pop
je
xchg
lds
popw
add
push
cld
mov
ror
mov
pop
push
sub
xchg
mov
mov
push
xor
nop
les
sub
arpl
xlat
cmp
fsub
enter
lret
lds
adc
sbb
pop
shlb
ror
js
pop
ja
in
lret
sarb
jb
push
dec
mov
push
adc
pop
pop
mov
jno
sub
mov
adc
shll
aas
ret
xlat
mov
push
lods
mov
dec
sub
leave
or
pushf
mov
sbb
in
push
and
xchg
rol
cmpl
sarb
repnz
adc
clc
push
push
inc
pop
sbb
push
insb
and
sbb
cmpsl
jecxz
fcmovb
cmpsl
ret
sub
mov
or
mov
test
in
test
sbb
lahf
push
adc
test
inc
jae
insb
cmpsl
stos
mov
aad
jo
loopne
jecxz
loope
inc
and
ss
pop
mov
movb
or
loop
push
add
dec
addr16
pop
mov
adcl
adc
dec
lea
cmp
sbb
ret
jno
and
lds
or
push
adc
out
push
ret
jb
lret
cmp
imul
dec
inc
lds
in
pop
bound
mov
mov
pushf
xchg
lds
and
push
addr16
and
cld
inc
je
push
jnp
push
out
mov
inc
xor
xchg
jle
icebp
jno
or
fsub
mov
in
ljmp
mov
and
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
fcompl
mov
pop
bound
and
inc
ret
push
lds
sarb
mov
xor
sub
fnsave
es
or
and
push
lret
shl
imul
repz
fmuls
xchg
imul
add
ret
loopne
pushf
cs
cmp
dec
pop
lret
lcall
push
aad
not
pop
mov
inc
mov
sbb
mov
shr
out
pop
bound
push
out
movsl
jae
adc
xchg
cwtl
pop
stos
test
les
out
xchg
loop
std
fildl
fstpt
push
and
arpl
xchg
mov
fstpl
out
xchg
cmp
inc
or
push
cwtl
mov
ret
and
adcl
jb
or
push
add
push
pushf
sti
enter
pop
fildll
xlat
xchg
add
add
pusha
cs
popf
xchg
pop
sub
xchg
stos
in
xchg
lock
or
pop
call
xchg
and
sarl
jmp
mov
inc
lea
test
jae
fwait
mov
mov
mov
jne
rorl
xchg
lea
cmp
push
dec
rcll
rdpmc
mov
movsbl
jns
xor
add
into
jne
nop
out
lret
push
pop
sbb
cltd
popf
sub
pop
sub
lret
xor
sbb
cmp
cwtl
wrmsr
push
outsb
jns
mov
cmpsl
mov
cmpsl
push
data16
push
movhps
mov
xchg
push
stos
dec
into
mov
mov
cli
stos
dec
xchg
dec
jne
arpl
mov
lret
xchg
lcall
pop
icebp
or
cmp
ficompl
stos
daa
aad
mov
stos
aaa
hlt
xchg
sbb
fcoms
xchg
xchg
fwait
push
adc
cmp
out
sarl
cmp
cmp
push
add
fldpi
cmp
test
std
push
ror
orb
dec
push
setle
xchg
orps
inc
mov
inc
mov
jl,pn
loopne
aas
cmp
mov
out
aas
sahf
in
xchg
cmp
cltd
test
push
ret
aas
ds
mov
ljmp
pop
clc
cmp
cmp
xor
das
roll
mov
inc
inc
push
fs
ss
pop
jecxz
fidivs
adc
and
cmp
push
mov
mov
imul
push
imul
rcrb
pop
mov
push
inc
je
loopne
or
jae
into
hlt
cli
out
jge
insb
test
jnp
test
xchg
lock
dec
sbb
or
xor
es
jbe
inc
test
cmp
inc
adc
pop
test
lret
iret
mov
mov
dec
ret
mov
shll
jl
fs
insb
call
dec
mov
mov
mov
ss
ja
jl
mov
cmc
cmpb
mov
and
mov
xchg
push
cltd
sbb
lods
sbb
or
lock
les
lahf
iret
push
mov
and
call
push
mov
test
xchg
pop
jae
inc
cmp
or
push
mov
sub
inc
mov
outsl
ret
hlt
sub
xor
pusha
and
pop
das
stc
jno
mov
xchg
leave
xchg
jl
inc
and
xlat
fwait
sub
inc
pusha
clc
jnp
loop
out
mov
cmp
jge
sbb
lods
outsb
std
imul
flds
dec
loope
mov
mov
movsb
outsb
leave
cmp
dec
lcall
dec
dec
or
aad
xchg
cmp
xchg
and
fwait
enter
fwait
fs
add
repnz
push
mov
xchg
popa
jp
into
pop
push
clc
clc
decl
int3
inc
jmp
cltd
jbe
mov
push
pop
mov
xor
jecxz
ret
mov
mov
aam
fldl2t
outsb
xlat
push
lret
inc
jg
outsb
std
gs
push
mov
push
clc
insl
lds
dec
mov
loope
fdivl
repnz
popa
push
jecxz
xchg
xchg
je
inc
jp
dec
icebp
xchg
and
lcall
adc
rcl
cmp
in
jnp
mov
push
lret
xchg
adc
add
aad
gs
push
xlat
fnstenv
pop
mov
int3
lret
mov
xchg
popf
xchg
dec
or
mov
addl
sbb
jecxz
gs
adc
push
mov
clc
fsts
fstpt
xchg
fimull
imulb
fucom
dec
lahf
imulb
dec
sbb
cmp
pop
xorl
lds
gs
leave
dec
popf
fdivp
lea
sbb
inc
fs
cli
cmp
mov
fmuls
cli
lahf
pop
es
mov
pop
sub
into
xchg
cmp
pop
cmc
test
roll
inc
fiadds
dec
imul
sbb
lds
int
stos
inc
xchg
lock
sbb
fwait
dec
xchg
fists
pop
sti
mov
mov
jno
loopne
imulb
stos
xchg
frstor
cmp
or
mov
insl
rcrb
je
ja
les
in
adc
mov
sub
fwait
or
loop
pop
push
test
mov
iret
divl
dec
rorl
inc
sbb
mov
fdivs
imul
sub
mov
hlt
push
sub
pop
cmpsl
mov
and
bound
mov
dec
loop
iret
add
sbb
fmuls
ror
sahf
xor
clc
fdiv
test
fadd
xchg
stos
add
pop
adc
mov
pop
dec
xor
push
testl
mov
jno
test
cmp
pop
js
cmp
fwait
or
cmp
xchg
add
xchg
adc
jo
pop
test
ret
sub
iret
xor
ljmp
and
enter
cmp
int
je
cwtl
rcrl
push
sub
push
and
ret
aam
lahf
fcmovu
fucom
sbb
push
and
mov
btcl
call
sub
rcrl
aaa
jmp
jae
xor
sahf
xchg
pushf
nop
decb
ret
test
xchg
jns
mov
mov
add
out
fistps
outsb
fldcw
or
jecxz
inc
mov
lds
or
jge
xorb
mov
in
or
mov
xchg
js
add
fsub
add
push
xchg
add
fs
out
iret
lds
jno
lds
cmova
push
les
mov
cmp
sbb
cmc
add
cmp
add
test
and
dec
call
xlat
xchg
pop
cld
mov
hlt
andb
or
cmc
xchg
pop
push
int
mov
pop
xchg
mov
xor
scas
ljmp
push
sahf
in
ljmp
fmull
lahf
mov
pop
dec
iret
and
sti
xor
mov
into
push
push
push
jg
orb
fistpll
and
jno
or
mov
mov
aaa
jg
mov
or
test
ret
dec
xor
repz
adc
rorl
adc
mov
jno
or
bound
daa
out
mov
jge
jb
add
and
cmp
cmp
je
arpl
mov
fnstenv
sub
insl
cmc
aaa
dec
jne
and
mov
pop
cmpsl
and
adc
adc
stos
lods
sahf
jp
sbb
sub
cs
mov
sub
ds
push
jae
shll
out
inc
dec
xor
call
loope
jg
fistps
sub
jnp
lods
addr16
scas
mov
add
sub
in
shlb
out
filds
dec
jb
stc
cld
pop
rclb
mov
xor
dec
outsl
leave
pusha
gs
sti
pushf
lret
dec
push
imul
cmpsl
lcall
fsubrs
sarb
loope
sbb
orb
sahf
mov
add
dec
sbb
negl
jp
xchg
push
ss
shrb
mov
scas
hlt
dec
pop
dec
aaa
sbb
mov
ss
clc
push
das
jecxz
das
pusha
mov
lock
fisttpl
out
jp
push
xchg
into
xor
cld
mov
sti
insl
sbb
dec
js
rclb
push
ds
stos
xchg
daa
scas
xchg
out
push
pop
fbld
xchg
rolb
insl
push
nop
into
aaa
test
adc
jb
mov
test
push
mov
in
fistl
pop
mov
scas
mov
sahf
push
adc
addl
cmp
jecxz
int3
bound
stc
jnp
lcall
and
scas
out
pop
neg
pusha
pop
xchg
inc
dec
or
pop
dec
and
popa
mov
xor
mov
xchg
movsl
insb
mov
lods
jae
mov
inc
jecxz
xor
lret
mov
imul
or
pop
iret
andl
or
xor
les
insl
scas
adc
aas
add
xlat
fcompl
imul
xchg
in
iret
xor
push
xlat
in
inc
stc
aaa
adc
aas
cld
popa
push
loopne
movsl
and
lcall
test
jno
js
loopne
push
dec
imul
pop
mov
out
arpl
jns
xchg
popa
inc
out
ret
iret
jne
push
lret
stc
mov
mov
filds
out
inc
inc
lods
cmpsb
sbb
in
pushf
mov
test
dec
repnz
fwait
stc
adc
gs
inc
cmp
rcll
stc
ljmp
lods
es
leave
jecxz
sti
fisubrl
push
mov
sahf
sarl
sbb
ljmp
pop
mov
cmpb
sbb
sub
stos
iret
push
and
jnp
mov
push
xor
jnp
adc
dec
dec
negb
mov
mov
mov
icebp
std
xor
dec
test
pushl
int
out
lret
jecxz
lahf
cmp
sub
xchg
adc
pusha
and
add
lds
call
or
xor
clc
xchg
jge
xor
cmp
das
or
jg
ja
call
icebp
add
pushf
pop
push
in
xor
in
in
lcall
test
jl
fisubrs
dec
inc
push
mov
jae
cmp
push
in
je
pop
repz
mov
ret
sub
or
or
xor
inc
ljmp
scas
negl
push
dec
jmp
pop
ss
xor
cmpsb
xor
icebp
ficoml
add
sti
cmp
repz
cli
ret
ja
jl
adc
popa
push
rcll
cmp
iret
sbb
inc
cli
xor
test
lcall
inc
xor
mov
int
xor
and
bound
cmp
cmc
mov
or
je
negl
push
in
xchg
loop
mov
mov
jg
clc
inc
pop
push
inc
leave
rcrl
push
sub
xor
xlat
bound
jle
dec
les
and
fnstsw
pushf
pop
repz
mov
loop
shrb
inc
js
testb
test
pushf
fimull
call
jnp
cmp
sub
pop
sahf
rcrb
shl
dec
stc
jmp
sub
dec
mov
orl
faddl
mov
cmpsb
sub
les
out
cmp
ja
push
sbb
xchg
xchg
pop
adcb
pop
or
fstpl
stos
cmc
lcall
aad
ja
stc
pop
xor
outsb
movsb
dec
int
lcall
fsubrs
arpl
cmpsl
imul
sahf
ficoms
fs
jae
sub
movsl
pop
movsb
daa
arpl
inc
fucom
pop
les
mov
lods
lods
enter
popf
mov
push
mov
jg
mov
pop
ret
cmp
pusha
mov
scas
push
push
xchg
cmp
aaa
sub
dec
xchg
cmp
jne
into
call
or
shr
pop
ret
out
test
mov
fsubrl
in
dec
dec
dec
mov
out
inc
pop
sbb
ds
adc
cmpsl
test
lahf
jg
adc
push
pop
xor
cmp
push
test
and
movsb
mov
push
aas
sbb
sbb
pop
in
int
dec
arpl
nop
cmp
into
sub
cmp
pushf
call
test
pop
lret
dec
lret
cmp
cmp
xchg
ds
sub
stos
and
mov
jle
scas
mov
sahf
add
inc
push
push
test
ljmp
pusha
add
addl
inc
sub
xor
cmp
cmp
fcomi
mov
pop
or
cltd
or
or
or
addr16
stc
push
es
scas
fbstp
inc
ds
sub
mov
enter
sub
cmp
xor
sub
into
mov
mov
lock
xlat
and
stos
sbb
nop
icebp
stos
xlat
jae
data16
hlt
cmp
popf
mul
aad
add
inc
mov
dec
cmpsb
pop
and
cmp
imulb
xchg
push
mov
mov
mul
and
daa
adc
daa
mov
pusha
cmc
jl
mov
aas
jge
sub
lock
or
cltd
cli
pop
jns
xchg
add
push
daa
call
xchg
inc
mov
and
sub
aam
mov
fwait
cli
xor
jo
aas
mov
mov
pop
pop
mov
mov
mov
stos
jp
fs
inc
daa
and
lret
je
aas
insl
xchg
sub
imul
scas
or
mov
inc
and
sub
ss
mov
lcall
je
push
inc
fisubl
jg
push
clc
mov
lods
jecxz
sbb
pop
out
repz
xchg
push
xchg
lock
sub
cmp
and
scas
in
xor
push
std
sti
out
call
xchg
lea
mov
adc
addr16
dec
sahf
add
xor
sub
or
jbe
push
iret
testb
xchg
aas
stos
pushf
pop
lret
loope
mov
mov
jmp
or
mov
push
iret
pop
inc
aad
xchg
bnd
pop
or
lock
sub
add
leave
sahf
mov
std
aam
add
popa
scas
lcall
mov
or
int3
rolb
lret
mov
mov
and
rorl
dec
fidivl
mov
clc
sub
rolb
mov
cmp
ljmp
in
sub
push
pop
xchg
mov
cld
sub
mov
loop
jecxz
in
rol
xor
test
mov
ret
mov
jne
dec
dec
pop
xchg
add
fmuls
jo
xchg
lret
sbb
jbe
jbe,pt
cmp
dec
mov
dec
idivb
cmp
cltd
xor
xchg
dec
or
sub
and
sbb
test
xchg
loopne
dec
jmp
sub
fisttpll
or
aam
push
cli
pushf
roll
rorl
arpl
stos
mov
outsb
cwtl
push
inc
xchg
pop
je
sub
out
and
dec
dec
loopne
dec
xchg
in
in
pop
mov
je
mov
cltd
cmp
stc
lock
mov
enter
out
call
out
aas
fcmovbe
outsb
mov
jne
jecxz
xlat
dec
pop
mov
test
xchg
fdivl
in
out
xchg
cld
and
cmpsb
out
je
es
cmp
xlat
cmp
jmp
mov
push
loopne
mov
or
shlb
rolb
inc
xchg
test
xchg
mov
dec
or
outsb
addr16
shrl
stc
int
test
cli
mov
xchg
lods
popa
cmpsl
dec
push
ds
cmp
inc
or
cmp
pushf
clc
lea
test
leave
xchg
add
arpl
ljmp
jns
leave
insl
xchg
lcall
nop
cmc
repnz
ret
adc
lods
jg
or
push
insl
test
sub
icebp
push
fsubrl
push
inc
lret
lahf
aad
shl
jle
sbb
pop
cmc
push
dec
xchg
jns
push
push
fwait
cmp
jns
xor
jmp
mov
out
cltd
and
mov
inc
test
sub
sbb
scas
jnp
sub
or
stc
adc
xchg
sub
out
sub
xor
rcrl
std
and
push
add
mov
mov
clc
orl
cwtl
popf
inc
push
decl
push
inc
sub
fucomi
xor
std
aas
push
addr16
jmp
adc
push
test
lret
addr16
shrl
mov
insl
xchg
or
push
test
push
add
and
pop
rcl
icebp
sbb
inc
adc
out
sbb
shrl
sahf
rorl
xchg
cli
jge
sub
fs
mov
jne
fwait
test
jb
mov
popl
xrelease
dec
fwait
sbb
in
aam
icebp
lock
push
cmp
sbb
or
mov
sarl
sahf
cmp
or
xlat
lret
movsb
dec
dec
cmp
or
stc
js
divl
inc
push
xchg
sub
jo
fs
pop
notl
push
jp
dec
mov
xchg
mov
lret
jb
ja
fstp
pop
and
pop
push
cmp
and
je
sub
sub
cli
shlb
bound
xchg
mov
cmp
and
pushl
add
aad
jecxz
outsb
adc
sbbb
adc
pop
ja
adc
or
push
mov
lods
push
stos
lds
dec
sahf
jo
stc
insl
repz
push
push
dec
mov
pop
cwtl
arpl
push
addr16
and
and
mov
jg
stos
stc
stos
push
xchg
inc
jmp
cmpsb
mov
push
jae
aas
jp
sahf
pop
repnz
leave
lcall
enter
jge
imul
into
dec
push
xor
dec
jge
fldenv
xchg
sbb
loope
inc
in
fbstp
or
or
or
andl
mov
sub
and
enter
mov
loope
cwtl
lahf
push
notb
insl
int
out
repz
cmp
mov
iret
and
inc
into
stc
sbb
push
iret
pop
mov
incb
les
popf
aas
stos
loope
inc
ret
lock
aam
movsl
mov
loop
pusha
and
mov
jg
pop
stos
jns
loopne
adc
sbb
ret
fs
std
pop
nop
aad
jg
adcl
cmpsb
lods
ljmp
fld
orl
sbb
cmp
imul
mov
js
jmp
std
frstor
adc
js
dec
popf
push
or
nopl
lret
les
repnz
stos
add
xor
jns
mov
cmp
popw
test
push
add
jle
clts
mov
std
pop
sub
scas
mov
push
rcrl
shlb
xchg
enter
sub
or
push
jae
push
stos
cmc
testb
sub
or
inc
cs
sub
inc
in
push
test
pop
enter
fstl
jo
cmp
test
mov
pop
inc
shlb
cmp
mov
in
subl
test
jbe
sub
jnp
mov
rcpps
inc
cmp
mov
jns
es
addr16
mov
push
das
ds
cmc
fisttpl
je
sub
push
push
sbb
lock
arpl
fcoml
and
mov
jno
fdivl
rcrb
mov
mov
or
mov
inc
std
shll
cwtl
cld
call
pop
mov
pushf
jle
ja
cmc
cs
cmp
mov
cwtl
adc
add
dec
mov
out
push
addl
cli
ds
pop
pop
xor
dec
mov
and
xorl
mov
sbb
push
mov
cmc
lret
sbb
frstor
sbb
push
xor
jmp
jmp
add
xchg
xchg
out
addr16
xor
add
lds
aam
sahf
add
cmpsl
aad
pop
xor
mov
adc
cmpsl
icebp
lods
jg
pop
xor
cmpsl
aad
outsl
mov
adcl
das
cltd
cmpsl
and
sub
sub
lret
jl
orb
jle
out
shll
gs
test
push
xor
rcll
mov
xchg
fidivl
inc
out
sbb
repz
add
insb
scas
mov
pusha
imul
pop
add
sbb
or
pop
xchg
jbe
clc
mov
or
cli
sbb
scas
ss
fs
pinsrw
pushf
adc
ror
call
add
aaa
pushf
pop
std
dec
pop
xor
dec
xchg
gs
js
packssdw
fucomi
mov
xchg
lds
jmp
sub
int3
push
adc
sub
sar
sub
pop
inc
repnz
mov
sbb
imul
cmp
sbb
mov
sahf
xor
jmp
dec
jle
addr16
adc
mov
clc
mov
pop
pop
push
call
rcrl
test
jg
add
dec
ljmp
mov
inc
lret
imul
jle
adc
out
mov
out
push
orl
xchg
imul
dec
ret
loope
aam
jle
xchg
icebp
jae
pop
xor
pop
lds
arpl
dec
mov
jns
pop
in
or
rcrb
mov
pop
lcall
punpcklbw
mov
mov
fwait
pop
and
scas
pop
and
pop
sbb
aaa
into
pop
or
les
ret
cmp
fistpll
inc
and
fs
jp
sahf
into
leave
cs
in
imul
sbb
xlat
push
pop
enter
push
arpl
sbb
aad
jle
and
lahf
inc
dec
je
movsb
adc
addl
aaa
call
test
or
inc
dec
fwait
int3
in
push
inc
insl
xor
hlt
imul
mov
nop
or
movsl
and
pop
cmp
cwtl
ret
test
pop
ds
push
mov
xchg
addl
push
movsl
add
cmp
testb
mov
jne
cli
shll
adc
mov
insl
sbb
out
clc
aam
imul
sub
mov
add
add
sub
jge
test
push
sbb
jmp
mov
jp
lods
je
sbb
daa
inc
push
ss
sub
bound
cmpsb
leave
aam
add
enter
lods
scas
mov
mov
jmp
clc
add
or
dec
aam
leave
mov
dec
ljmp
addr16
aaa
pop
ret
aam
fidivs
into
jle
sbb
leave
add
cmp
stc
es
adc
adc
out
movsb
pop
and
icebp
lods
pop
shlb
jge
mov
pop
int3
nop
add
sbb
jecxz
sbb
aaa
mov
outsl
out
mov
pop
xor
pop
mov
cmp
adc
push
mov
stos
adcb
dec
push
and
adc
call
lret
lahf
push
insl
add
pop
daa
sub
inc
sbb
push
xchg
and
cwtl
test
mov
dec
cwtl
sub
xor
adc
loope
lcall
cmp
xchg
lods
or
mov
clc
dec
je
push
push
xor
mov
sub
insl
and
cld
in
call
inc
clc
clc
test
jl
cmp
jb
movsb
mov
lds
les
sbb
jb
pop
aas
or
push
push
sub
sub
mov
jno
xchg
xchg
sub
cwtl
xchg
inc
sub
mov
cmp
jno
mov
sub
gs
mov
jg
mov
std
add
fmul
lea
lret
adc
insl
jbe
mov
mov
and
jbe
add
add
mov
push
idiv
xchg
cs
pop
fdivr
cmp
or
inc
push
out
std
adc
inc
adc
jne
pop
outsl
insl
repnz
jp
adc
test
add
adc
data16
sbb
pop
jb
push
cmp
cmpsl
push
xlat
adc
fstps
sbb
popa
out
xchg
pushf
fldt
xchg
lods
inc
fwait
loop
mov
sbb
pusha
mov
dec
or
sbb
mov
lds
out
int
rep
push
out
jbe
andb
rolb
jne
dec
int
clc
cltd
outsb
jecxz
shrl
rclb
aas
into
les
jbe
xor
inc
jmp
outsl
ljmp
das
cwtl
lods
fisubrl
or
xchg
xor
jmp
sub
push
xchg
jmp
sbb
xchg
lret
cmp
fwait
mov
xor
ret
cmp
mov
pop
or
jae
sbb
arpl
lea
data16
sar
cmc
mov
xor
lahf
and
jle
jo
pushf
pop
sbb
movsl
into
fstps
jb
jbe
xor
pop
movsl
insb
sarl
mov
jbe
aaa
loope
js
or
cli
fsts
pop
mov
lea
pop
iret
or
inc
loope
loop
adc
mov
rcl
push
in
pop
outsl
fidivs
ret
mov
mov
jmp
pop
mov
aad
sahf
jmp
dec
out
popa
cltd
sti
mov
xchg
xchg
or
into
inc
pop
cmpsl
fnstcw
das
inc
xchg
data16
sti
aad
mov
dec
jo
mov
hlt
fcoml
push
into
mov
mov
cwtl
imul
mov
mov
or
lods
xchg
mov
inc
lcall
jmp
jae
inc
jnp
enter
repnz
jns
cmp
jae
pop
push
xchg
aam
dec
and
inc
negl
push
xchg
adc
sub
jb
cmpb
mov
pop
jge
in
xor
fistpl
xchg
popa
test
das
pop
mov
bound
mov
ret
lahf
push
pop
lods
push
sub
xorb
adcb
mov
push
bound
lds
sbb
ficoms
sbb
or
repz
mov
mov
negl
adc
jge
les
cmp
mov
dec
mov
xor
cmc
frstor
inc
mov
in
dec
arpl
mov
pusha
add
and
mov
mov
cltd
ja
pop
bound
test
dec
cmp
xor
cli
nop
push
loopne
int
icebp
movsb
fsts
xor
cli
xchg
ljmp
daa
sub
ret
in
es
mov
xchg
shrb
iret
in
addb
push
out
repz
sti
mov
pop
mov
mov
add
mov
mov
mov
pop
les
sub
xchg
inc
mov
jp
mov
rcll
ret
int
inc
loop
mov
and
add
mov
or
adc
andb
mov
dec
xchg
fiadds
dec
and
imul
aaa
les
add
test
aas
mov
mov
into
adc
xchg
into
cld
pop
in
loope
cmpsl
stos
xor
xchg
jb
ds
imul
mov
xchg
rol
call
lock
lret
iret
fisubs
rol
jmp
pop
pop
or
addr16
ret
int
xor
repnz
cld
aam
std
push
pushf
test
das
sbb
push
jge
loope
int3
mov
lods
jle
jnp
popf
cmp
xor
push
mov
xlat
clc
or
and
test
jmp
mov
test
out
or
pusha
jnp
fstl
jae
cwtl
shlb
addr16
inc
jp
jns
inc
std
jnp
mov
mov
incl
stos
xchg
xor
gs
push
pop
inc
gs
leave
ds
add
daa
push
vmovaps
xor
jb
pop
in
pop
adc
popa
mov
test
aad
jbe
or
in
mov
and
fdivp
lahf
cli
int3
or
out
or
dec
pop
xor
jp
or
xchg
mov
cmp
dec
negb
jmp
cmp
or
jp
cmc
test
push
add
sahf
fimull
inc
aad
stos
adc
sub
fldcw
movsb
out
mov
mov
cwtl
cltd
push
es
lcall
jl
addb
xor
sub
adc
in
mov
aas
sub
pusha
test
pop
or
mov
sbb
mov
sbb
mov
repnz
add
xchg
and
mov
subb
ret
jb
cltd
pop
iret
addb
insl
sbb
mov
cmp
inc
test
jle
out
maxps
sahf
xchg
lret
sbb
push
push
insl
notb
inc
xor
jne
push
ljmp
fidivrs
mov
sarb
dec
pusha
enter
iret
mov
aad
jbe
rclb
sub
inc
cs
xor
mov
rcrl
mov
adc
je
xor
nop
das
cmp
pop
inc
sub
lock
jo
pop
add
mov
jge
xchg
clc
lods
xor
pop
sti
mov
ljmp
mov
cltd
lock
push
data16
cli
je
sbb
sub
into
xor
jbe,pt
jnp
xor
test
pop
fldcw
and
imul
movsl
cmpsl
xchg
mov
stc
popf
pop
scas
add
incl
loop
xchg
dec
push
in
rcl
and
cs
lods
in
rolb
imul
jb
les
ror
sub
fwait
stos
sub
ret
cs
and
aam
clc
aaa
in
cmp
lahf
xor
out
xchg
popf
std
andl
add
pushf
test
jnp
cmp
push
adc
js
addr16
jbe
add
repnz
sti
cmp
fisttpl
inc
mov
movsbl
cli
inc
nop
fwait
push
stc
fdivr
jg
and
sbb
adc
xchg
aad
inc
mov
test
jp
add
mov
xchg
adc
jo
mov
dec
jp
cmpsb
dec
rorl
lret
xchg
xorl
and
ret
pop
jno
rcll
outsl
unpcklps
mov
mov
repnz
aam
xor
cmpsl
xchg
loop
xor
in
or
mov
sahf
arpl
int3
mov
add
leave
test
lcall
add
inc
icebp
adc
sub
push
push
pop
jae
loopne
adc
test
or
out
loop
addr16
xlat
outsl
insb
lods
daa
mov
into
cmpl
lretw
jns
pop
cli
cmp
sahf
sub
loopne
pop
out
cmc
mov
sbb
inc
jbe
push
push
in
sti
push
push
fwait
push
inc
xchg
stc
icebp
fdivrs
xor
stos
mov
inc
mov
aaa
add
in
notb
jle
dec
cmpsl
push
pop
stos
push
mov
outsb
inc
pop
sub
inc
push
pop
inc
jb
push
push
and
add
mov
jae
js
pop
cli
lds
pop
sbb
adc
je
mov
das
cmp
fnstcw
dec
mov
je
pushf
pusha
pop
inc
movsl
pop
pop
int3
jecxz
push
fwait
cmp
or
push
fstl
pop
je
pop
push
dec
cmp
mov
dec
push
mov
pusha
lret
lret
xlat
mov
int
insl
add
ljmp
clc
int3
int
mov
dec
aaa
mov
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
mov
bound
bound
or
je
xchg
cmp
lcall
mov
lret
mov
cmp
loopne
mov
iret
adc
push
dec
std
pop
cmp
cmp
fs
xchg
pop
xchg
shlb
outsl
inc
mov
outsb
sbb
loopne
stc
push
es
cmpl
pop
sbb
jne
fsts
cltd
gs
mov
js
std
leave
andl
pop
paddb
xlat
mov
cli
aas
pop
pop
cmp
adc
push
in
cltd
push
call
mov
and
mov
dec
testb
adc
test
sub
in
xchg
cltd
add
loopne
ja
cmp
jne
jo
repnz
jmp
daa
out
subb
mov
cmp
cmp
sbb
mov
in
shrb
out
sub
jmp
xchg
push
jo
mov
dec
mov
mov
fiadds
add
jno
mov
in
adc
push
data16
sub
cld
add
or
insb
stos
test
xchg
sub
adc
mov
popf
jg
cmp
xor
push
jb
lcall
xor
mov
frstor
out
je
cmp
jae
stos
hlt
lea
int3
mov
xchg
test
inc
pushf
jbe
jp
mov
shll
add
adc
push
sbb
ja
stos
stc
pop
xchg
cli
xlat
call
mov
out
inc
inc
lea
push
mov
hlt
jbe
push
xchg
or
push
andl
lock
bound
call
loope
cmp
inc
fistl
xchg
and
lods
sub
cmc
test
push
sub
lcall
jo
add
in
mov
ficompl
das
mov
data16
mov
mov
mov
dec
xchg
push
insb
push
push
aas
or
jmp
ss
mov
jle
mov
pop
ficoml
inc
xor
stos
inc
mov
aas
mov
mov
sar
push
cmc
arpl
je
pusha
dec
mov
sahf
xor
lock
mov
sbb
cmp
jmp
dec
cmp
hlt
push
test
jge
cmp
dec
mov
add
in
mov
leave
test
mov
fdivp
cmp
mov
orb
fs
nop
out
lods
jmp
test
dec
xchg
rep
mov
aad
mov
sahf
test
in
fs
into
mov
mov
add
aad
das
pop
les
cli
add
and
add
dec
movsb
xchg
and
jecxz
lock
lcall
xchg
lods
movsl
pop
fcom
mov
in
xor
stc
outsb
stc
mov
insb
fistpll
inc
outsb
stos
lods
lea
and
xchg
clc
lods
inc
xorb
jnp
mov
mov
les
jae
jle
lock
jecxz
cwtl
dec
mov
out
push
push
cmc
xlat
jp
mov
jbe
fldcw
nop
inc
jne
xchg
fcmovnb
scas
xchg
xchg
jns
aad
inc
mov
ljmp
mov
mov
lock
pop
inc
mulb
dec
mov
aam
cmp
dec
fbld
int
or
pop
fidivl
idivb
or
push
addr16
ror
pop
jge
popf
es
sbb
and
rcl
mov
cmp
icebp
mov
pop
sub
decb
push
out
push
push
jmp
jge
and
mov
xor
adc
and
ds
aas
hlt
xor
or
fidivrl
movsl
mov
dec
or
popa
fs
push
in
insb
les
lods
js
clc
daa
xchg
arpl
sub
mov
ljmp
in
ds
xor
out
xchg
jg
sub
jns
cmp
sub
xor
add
fbld
push
pop
xor
leave
inc
enter
cs
cmp
xchg
sub
test
stos
loope
push
out
pushf
jmp
xchg
mov
jno
add
scas
mov
pop
enter
sbb
es
xchg
or
bound
jnp
mov
or
test
out
or
adc
shrl
ljmp
enter
cs
push
sbb
push
xor
xchg
xor
jmp
fsubr
int3
pop
leave
sahf
jno
sbb
jecxz
cmp
arpl
xchg
or
inc
xchg
cmp
insb
aam
jne
and
and
out
mov
fisttpll
cltd
fdiv
and
jle
scas
mov
fstps
xor
sub
fadds
lods
xchg
fs
out
sti
movsl
or
stos
sub
cmc
js
icebp
mov
add
jne
sahf
loope
mov
stos
push
xor
mov
mov
je
out
enter
leave
fistl
leave
cmp
out
inc
nop
nop
outsl
stos
or
or
je
cli
bound
inc
cwtl
sub
mov
outsl
push
mov
movsb
mov
repz
sbb
cli
aas
pop
iret
scas
push
cltd
rorl
xor
add
lea
enter
cmp
nopl
xor
sub
push
lret
jle
outsb
push
into
xchg
jg
jbe
add
insl
push
jbe
ljmp
sbb
mov
in
ss
push
pushf
cld
ds
cltd
arpl
movsb
pop
jge
outsb
mov
pop
jecxz
cli
add
pop
push
imul
add
outsl
outsb
lds
xor
inc
stc
popf
xlat
repnz
pop
clc
fsubrl
lret
dec
ljmp
leave
pop
into
ret
out
push
rcr
jno
push
aas
cmp
dec
lds
mov
lret
mov
out
or
fnstsw
fldcw
jmp
test
mov
push
push
pop
fs
je
mov
xchg
sub
mov
cmpsb
out
rcrl
pop
mov
repz
jb
mov
sbb
pushf
adc
dec
push
in
shrl
mov
push
cmp
popf
and
nop
cmp
mov
aaa
pop
push
inc
and
cmp
in
mov
lods
fs
pop
je
out
add
push
or
sbb
imulb
mov
pop
sti
sbb
jp
adc
pop
mov
and
stos
and
les
test
xchg
jge
dec
push
ret
call
xchg
sub
push
sbb
out
and
or
imul
fidivl
mov
addr16
xchg
cld
push
testb
push
push
addl
insb
mov
adc
ret
and
cmpsb
adc
insb
icebp
nop
jns
sub
cmp
and
inc
sub
test
cmp
popf
jae
cld
push
stos
sahf
mov
push
imul
adcb
jo
outsb
push
testl
jne
dec
add
frstor
and
pusha
aaa
sbb
icebp
and
dec
adc
insl
sub
jecxz
stc
movsb
sbb
adc
jl
add
lock
pop
jp
ficoml
out
ficoms
mov
test
fadds
jbe
insb
bnd
adcb
mov
jl
test
mov
sahf
leave
pop
repnz
sti
and
lcall
jb
jmp
push
addr16
imul
insl
xchg
sbb
add
xor
repnz
iret
push
pusha
fdivrs
pop
jmp
sti
pop
loope
cmp
jge
nop
jecxz
cmp
pop
mov
scas
jmp
and
push
fldt
dec
push
pop
push
mov
xchg
movsb
jl
cs
ss
adc
lret
scas
arpl
enter
jb
aam
iret
push
leave
mov
test
ret
lcall
mov
dec
test
push
jnp
adc
test
inc
jle
jle
ret
lret
cmc
jp
fucom
push
sbb
push
jge
mov
xchg
or
jg
pushf
int
push
add
jecxz
adc
cmovae
jmp
inc
push
mov
and
push
or
test
pop
lods
jbe
pop
insb
loopne
dec
push
vcvtss2sd
shl
test
ret
push
in
fldcw
in
outsl
sbb
sahf
cltd
rorl
push
stc
ljmp
out
mov
pop
es
push
cmc
xchg
add
add
or
push
sbb
sub
or
push
int
loop
pop
or
xchg
push
iret
popa
inc
aam
ret
jl
test
lods
outsw
lret
sub
test
inc
xchg
lcall
jecxz
add
les
movsb
std
jle
js
sbbb
jl
fnstcw
ret
dec
sti
mov
in
int
aaa
add
inc
hlt
inc
xchg
push
xchg
and
bound
gs
sbb
adc
cmp
dec
int3
mov
sub
je
hlt
pop
std
push
adc
fnstenv
mov
and
outsb
xchg
mov
inc
pop
jecxz
push
mov
pop
xor
mov
orl
sub
fcomip
cmp
sbb
iret
in
and
xor
dec
dec
cmp
xchg
sti
in
xor
push
pop
jecxz
xchg
adc
rcr
sbb
add
inc
test
inc
sbb
cmp
cmp
push
push
fnstsw
shrl
int3
or
std
xorl
jmp
adc
les
mov
pop
arpl
ss
xchg
sbb
mov
aam
leave
sub
shrl
cmc
mov
aas
mov
xor
filds
sahf
adc
inc
xchg
lret
cwtl
mov
fnstsw
gs
adc
lock
arpl
adc
adc
inc
pop
push
sahf
adc
outsl
dec
cwtl
adc
out
lock
add
ss
mov
dec
xor
aad
cmpl
das
dec
rorl
sbb
fsubp
xor
add
jo
sub
add
push
popf
jno
fucomip
leave
sub
fs
icebp
add
jb
push
push
dec
pop
lods
jle
lea
cmp
fs
in
cltd
aas
xchg
mov
gs
cmp
cmp
cmp
sti
push
sarl
daa
dec
shrb
fbstp
mov
cmp
sub
push
hlt
test
push
fdivrp
xchg
stos
cwtl
cmp
ljmp
faddl
inc
sub
jmp
pusha
fstpl
arpl
in
js
sbb
xor
lea
jg
jns
or
out
sarb
and
or
movsl
sub
adc
icebp
cmpsb
mov
push
popa
sarb
sub
inc
sarb
addr16
aaa
addr16
lcall
outsb
je
cltd
lcall
add
push
xchg
jne
loop
dec
xor
and
stos
nop
lcall
cltd
mov
xor
pop
add
or
addr16
xchg
lret
testb
arpl
lds
movsl
jae
aas
xor
cmc
stos
test
test
inc
pop
shll
mov
xchg
arpl
or
pop
repnz
xchg
movsb
pop
and
adcb
xchg
rol
inc
inc
sub
xchg
pop
mov
test
jmp
add
fstl
mov
mov
jmp
lcall
adc
rcrl
xlat
jg
sub
scas
fs
cmp
cmp
mov
mov
jo
inc
sahf
ljmp
mov
pusha
mov
lcall
xchg
mov
lods
sbb
ds
icebp
dec
bound
out
add
mov
mov
rcr
push
outsl
das
je
pop
out
jmp
sub
movsl
mov
out
addr16
shl
jns
daa
and
shrl
jnp
mov
fs
dec
xor
sub
push
dec
aaa
cltd
hlt
pop
xchg
or
hlt
in
jnp
shlb
call
mov
cmp
clc
ret
aad
pop
in
or
outsl
mov
fisttps
inc
sub
enter
cmp
pop
push
and
push
sub
and
div
jns
add
mov
jnp
lods
inc
add
or
mov
inc
jmp
ljmp
popfw
imul
test
int
adc
aam
jo
repz
shl
imull
and
jno
sub
sbb
push
mov
ljmp
push
cmpsl
jmp
enter
mov
and
nop
fdivrs
jb
mov
into
add
fiaddl
push
setg
or
fwait
push
aas
pushf
sub
int3
fdivrp
sub
mov
or
adc
insb
and
and
test
jmp
sub
inc
cs
imul
inc
outsb
cwtl
lock
or
mov
jns
push
fldl
cs
mov
push
ljmp
into
or
into
mov
cmp
mov
addr16
xchg
jp
xchg
bnd
jae
dec
fnstcw
xor
and
ret
lahf
jnp
push
adc
shll
add
fs
push
sti
imul
xchg
push
mov
mov
inc
cmpsl
outsl
es
sarl
mov
lahf
imul
pop
popa
sbb
mov
fs
in
pop
and
mov
cmp
pop
iret
jmp
xchg
loope
insb
mov
imul
push
cmp
mov
cmp
jno
push
and
jl
push
and
xchg
in
mov
test
push
cmp
test
push
lock
jns
sub
test
xlat
inc
shlb
mov
cmp
cmp
seto
push
vcvtps2pd
lock
cltd
cmp
pop
adc
mov
pop
or
inc
repz
clc
inc
or
shlb
popf
aaa
xor
dec
call
fbstp
add
pop
hlt
mov
dec
ret
adc
addb
mov
push
loopne
cmp
jbe
add
sub
out
push
movsb
dec
mov
dec
pop
out
xor
aas
cmp
je
mov
sub
test
mov
pop
jmp
cmc
gs
bound
arpl
jecxz
sub
mov
popf
dec
add
pop
dec
int
lcall
lock
in
and
test
jmp
ret
mov
and
jbe
mov
cmp
fimull
jle
mov
mov
lock
test
negl
addr16
mov
pop
cmpsl
pop
outsl
inc
and
out
in
sbb
mov
add
hlt
cmc
imul
xchg
inc
cmp
cmp
stos
mov
cs
add
xor
sbb
dec
arpl
sahf
push
aam
mov
xor
pop
pop
cmp
dec
mov
add
je
sub
push
cld
mov
add
xlat
rcr
lahf
iret
add
int3
jno,pt
data16
iret
jp
mov
xorb
pop
push
or
lahf
and
adc
dec
cmp
mov
repz
jns
ss
xlat
dec
sbb
sbb
push
add
adc
test
sahf
cli
inc
nop
xchg
inc
mov
inc
ficomps
mov
or
jnp
jge
inc
xchg
and
popa
lods
dec
push
mov
cmpsb
inc
imul
or
mov
add
rcll
stc
xor
fdivrs
es
mov
jbe
insb
and
xor
frstor
sub
jmp
dec
inc
xchg
lods
mov
sub
adc
and
dec
loop
enter
sbb
mov
xchg
jecxz
mov
jle
mull
adc
sub
cwtl
jns
jmp
jl
inc
cs
mov
lods
std
xor
daa
rclb
mov
push
out
inc
es
data16
jnp
jo
ret
push
popf
jnp
ret
test
imul
inc
jbe
jp
loop
inc
test
push
xchg
mov
pop
jg
test
in
fwait
ja
divl
loop
dec
add
jmp
mov
xchg
jns
pop
ljmp
cmp
adc
dec
sub
test
push
jnp
pop
dec
xor
mov
pop
subb
xlat
cmp
mov
cmp
xchg
inc
add
int
bound
dec
sbbb
sub
push
dec
js
stos
daa
rorl
lea
xlat
add
in
add
xor
cmp
mov
cmp
idivb
mov
out
outsb
pop
inc
mov
cmpsl
mov
mov
add
ljmp
popf
aaa
mov
pop
enter
mov
inc
outsl
lock
out
adc
inc
xlat
andl
lret
mov
cmp
push
or
inc
cmp
jbe
lock
pop
push
jns
arpl
lret
es
in
adc
sub
addb
dec
adc
lock
imul
movb
mov
inc
cmc
lret
inc
popa
adc
lock
or
icebp
add
mov
jno
rcrb
push
sbb
lret
repnz
mov
xor
sub
inc
sbb
xlat
test
insl
into
rcrl
xchg
clc
pushf
ret
js
repz
data16
xlat
cmc
fistpll
mov
mov
add
xchg
xor
lea
sub
sbb
add
sbb
adc
nop
loopne
cmc
popa
in
popf
jne
inc
loopne
inc
js
out
shll
mov
mov
xor
and
adcb
push
cmp
mov
jg
add
pushf
lret
scas
xor
add
fwait
leave
cmp
fcmovnbe
mov
xor
nop
jecxz
imul
add
lods
mov
sub
inc
sti
xchg
aaa
pop
cmp
add
mov
or
xchg
and
outsl
pusha
cmp
jp
popa
pop
sti
sbbb
scas
jb
fdivl
or
bound
pop
inc
bound
xchg
movsb
adc
sub
push
cmp
cmp
push
test
aad
jnp
cmp
jnp
lcall
sbb
dec
add
fwait
test
mov
sub
stos
mov
adc
fsubr
shl
dec
add
nop
bnd
mov
push
ret
xor
xchg
xlat
sub
push
jmp
insl
xor
inc
imul
cmp
lret
push
inc
mov
or
and
repz
mov
adc
sbb
xchg
in
int
cmp
shl
dec
cmp
add
into
in
add
sbb
popf
mov
lods
sbb
rclb
cli
fisubrl
lret
lods
imul
jne
pushf
adc
and
bound
push
add
loopne
cmp
inc
and
dec
testl
in
or
dec
sbb
mov
lds
push
jecxz
dec
push
fwait
or
shll
mov
xchg
rcrl
mov
push
je
mov
negl
lock
leave
cmp
cltd
cmp
pop
cmc
or
sbb
out
push
out
dec
jbe
pop
or
mov
mov
pop
xchg
add
imul
imul
into
lock
je
jecxz
insb
xchg
xchg
test
xor
les
sub
es
fnsave
lods
jns
rorl
aam
ret
xchg
imul
sbb
cld
lods
mov
aad
cmpsl
and
mov
jo,pt
pop
sti
shr
adcl
fs
ret
push
xlat
pop
movsb
sub
iret
test
jno
mov
test
in
adc
xchg
dec
sub
cmc
jo
xchg
outsb
scas
aas
test
cmp
or
stos
mov
popf
push
inc
mov
repz
push
rcr
xor
inc
sbb
aas
in
xchg
and
mov
bound
jl
int
int
sbb
fnstcw
jbe
mov
xchg
jge
xchg
gs
pop
xor
dec
outsl
ffreep
dec
push
jg
ret
nop
pop
or
push
imul
and
inc
xchg
out
or
notb
sbb
and
jge
jecxz
mov
loopne
cmp
les
nop
hlt
lcall
imul
arpl
or
out
pushf
shrl
and
lahf
jecxz
jns
xchg
jle
mov
mov
pusha
repnz
imul
es
mov
sub
rclb
test
lcall
or
js
outsl
int3
jg
jnp
pop
div
insb
mov
in
add
test
mov
movsb
fs
inc
jp
push
add
mov
notl
sub
sar
pop
incb
push
sub
xlat
aam
adc
dec
out
hlt
jns
xchg
and
ret
ss
std
out
or
push
cmovle
sti
outsb
mov
or
cld
cwtl
sub
movsl
flds
adc
push
inc
add
sub
xor
stos
and
pusha
mov
lcall
in
insb
jno
daa
mov
leave
sub
mov
xchg
inc
pop
inc
push
xchg
or
in
popa
push
jmp
nop
repz
sbb
mov
mov
mov
in
jbe
pop
mov
push
fcmovu
xchg
in
data16
and
mov
das
out
mov
gs
in
in
shll
cs
stos
frstor
pushf
sub
mov
lea
and
cmp
stc
inc
fildll
jle
sub
insl
mov
push
cli
adc
ds
adc
and
cmpl
int
sbb
ja
sahf
sbb
add
aad
adc
pop
out
dec
out
test
xchg
dec
jne
sbb
xchg
outsl
xchg
jge
mov
inc
xchg
and
repz
xor
in
js
sub
xor
std
lds
mov
out
dec
ljmp
dec
aas
xchg
adc
ret
cmp
int3
ljmp
jne
test
outsl
icebp
jle
outsb
xchg
lods
andl
mov
jl
mov
xor
pusha
fisttpl
lahf
mov
jns
mov
test
jo
gs
inc
dec
jp
fnsave
push
jbe
int
lret
push
sbbl
mov
lds
or
movsl
dec
iret
mov
mov
cwtl
xor
jb
xor
cli
es
cld
std
stos
push
push
or
pop
cmp
iret
jecxz
dec
add
adc
and
gs
mov
pop
sub
loope
out
daa
daa
nop
iret
sbb
jno
mov
std
push
insl
loopne
pusha
jbe
daa
mov
adc
fs
jnp
push
andl
inc
stos
add
cmp
xchg
pop
dec
lods
jle
cmp
data16
sub
sbb
in
fstl
mov
dec
ss
fsts
mov
mov
pop
add
sub
jns
add
insl
clc
aam
cmpsl
or
mov
int3
or
lods
mov
mov
push
lret
push
cmpsb
sbb
dec
in
dec
iret
insb
dec
pop
mov
out
mov
and
test
mov
cmp
sub
add
inc
jbe
mov
pop
inc
mov
icebp
xchg
stc
pop
and
js
ljmp
mov
dec
iret
xchg
hlt
jecxz
addb
loopne
or
mov
or
add
mov
sbbl
mov
les
mov
aam
inc
les
xor
inc
popa
addl
dec
jecxz
cwtl
outsb
ljmp
mov
notl
out
sub
inc
cmp
pop
jnp
lods
xchg
push
imul
hlt
in
push
dec
mov
nop
fs
jne
jg
das
imul
sbb
sub
pop
stos
add
outsl
lods
flds
shlb
cmpb
adc
pop
popa
dec
adc
cwtl
lahf
shl
je
pop
push
addr16
outsb
jbe
mov
push
aas
cltd
dec
push
pop
mov
mov
mov
stc
jg
or
mov
sub
and
sub
cmp
ljmp
in
into
ret
movsb
gs
xchg
lret
inc
adc
mov
into
call
adc
pop
gs
pop
xchg
rorb
cltd
or
loope
push
sahf
inc
out
jmp
xchg
add
xor
fnstsw
add
push
decb
cmpsl
stos
ja
aad
xor
jl
and
inc
stos
dec
push
dec
xchg
push
daa
push
push
les
stos
fsubl
enter
push
int3
por
cmp
in
loopne
push
push
loope
outsl
nop
and
mov
xlat
pop
sbb
enter
push
dec
sahf
jnp
mov
sbb
dec
test
in
sbb
imul
scas
pop
rcl
shrb
shlb
out
inc
ljmp
test
mov
imul
imul
push
push
or
and
cld
sub
mov
ds
inc
int3
xor
push
pop
mov
dec
lods
sub
hlt
outsl
int3
in
inc
and
out
lcall
jg
adc
lods
insb
xchg
pop
fistps
xchg
and
xchg
iret
das
ret
pop
pop
bound
mov
add
add
push
xor
pop
leave
dec
scas
in
fldt
imul
jmp
nop
mov
sbb
add
adc
and
int3
xor
in
mov
cmp
push
dec
dec
jle
add
fidivs
fxch
lods
push
push
mov
sarb
ret
sub
inc
dec
push
mov
and
movsl
xor
inc
push
mov
data16
xchg
sahf
call
mov
in
in
sub
rcll
push
dec
rorb
jnp
orl
movl
xor
cmp
fistpl
es
jb
mov
dec
xor
imul
xchg
mov
hlt
mov
sarb
fdivl
inc
aam
fdivrl
out
test
and
inc
cmp
daa
pop
bound
mov
iret
xchg
adc
aad
fadds
lahf
fisubs
and
fsubrl
ss
inc
mov
adc
inc
push
cmp
out
dec
sarb
push
and
mov
repnz
push
int
ljmp
cmp
idivl
js
add
ret
lret
push
jp
sub
jp
sbb
inc
icebp
xlat
fildll
int3
push
mov
xor
sub
mov
rorl
mov
in
addr16
sub
shll
nop
sbb
fistps
mov
mov
in
andl
clc
or
addr16
stos
xor
in
mov
popf
data16
jne
lret
fsubs
sub
ljmp
rcr
cli
add
mov
bound
or
jae
pop
cmp
jb
push
push
xor
ror
sub
pop
jge
cmc
iret
ds
pop
push
fyl2x
xchg
loop
pop
pop
int3
in
sub
cmp
pop
mov
sub
xchg
add
sahf
in
icebp
cmp
in
jo
push
sbb
sarl
push
push
and
lock
subl
decl
push
and
icebp
ljmp
push
std
push
and
lret
lahf
mov
sub
leave
cwtl
push
sub
xor
shlb
in
jg
push
cmp
pop
mov
or
dec
test
xor
jbe
jmp
cmp
and
stos
les
into
cld
loop
push
mov
push
sub
pop
dec
test
scas
packsswb
je
add
jmp
xchg
aad
cmp
adc
cli
addr16
cli
xor
push
or
pop
movsl
leave
jnp
repz
inc
jne
jl
mov
out
shll
out
adc
inc
sub
and
fwait
in
fidivrs
inc
ds
xchg
test
adc
pop
fst
sbb
mov
repnz
mov
fistpl
jno
mov
rcpps
fistpll
push
and
lods
out
jmp
fistpl
sub
test
cmp
aam
aas
js
shr
scas
cmp
repz
lock
push
stos
dec
loopne
add
or
cwtl
mov
fldenv
fidivs
les
cwtl
xor
jecxz
and
in
adc
outsb
dec
jne
jns
and
int
xor
cmp
lods
popf
daa
in
adc
sbb
data16
test
sub
mov
cld
mov
or
out
inc
or
pop
mov
out
repz
test
ret
daa
out
xor
addr16
or
xor
test
inc
and
and
and
xorb
clc
mov
pop
mov
aad
cmp
push
xchg
insl
jne
ret
adc
inc
inc
jmp
sbb
fxch
cmp
jb
jl
fsubr
mov
adc
xchg
jae
aaa
jp
jb
inc
lea
out
cmc
test
cmp
jge
mov
sub
push
int
sbb
pop
push
adc
test
leave
out
es
xchg
sbb
jp
inc
icebp
xor
pop
pop
cmp
jbe
push
jo
mov
sub
enter
mov
adc
sbb
divl
add
fiaddl
bound
lahf
xor
out
test
dec
test
popa
xor
jmp
or
vdivsd
test
aas
jg
mov
gs
push
adc
aam
push
add
pusha
adcb
cwtl
cmp
stos
or
xor
xor
sbb
outsl
cld
es
cmpsl
mov
sub
fwait
push
push
repz
xchg
insb
test
in
jno
rcl
movsl
repz
movsb
xchg
mov
out
xchg
mov
enter
jne
cmpl
aaa
cmp
enter
ss
xchg
jl
lods
push
js
int
xor
inc
rorb
jg
bound
mov
jg
inc
stc
std
icebp
in
push
test
shrl
insb
faddl
lret
cmpsl
test
cmpsl
pop
test
pop
outsb
fcomip
push
jmp
xor
jle
pop
sub
mov
push
mov
pop
push
mov
fistps
popa
in
aam
loop
pop
dec
add
xchg
in
lahf
cmp
fbld
or
in
push
mov
mov
adc
mov
sti
fdivrl
or
inc
sbb
xorl
lahf
inc
add
inc
mov
jecxz
jge
inc
jge
ss
pop
mov
sub
sar
or
outsb
push
movsl
push
cli
sbb
ss
xor
cmpb
pop
fisttpl
mov
mov
les
mov
jno
mov
mov
and
cld
sub
cmp
or
xchg
cmpb
push
add
or
in
mov
and
dec
gs
popf
xorb
jae
mull
fimull
adc
adc
je
cli
mov
cmp
pop
lds
sub
cmpsl
xchg
subb
out
das
push
loopne
filds
lods
cmpsb
clc
into
mov
inc
mov
leave
dec
inc
add
rcl
adc
sbb
aas
jge
sahf
rclb
in
jg
add
add
add
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
pusha
pop
cmp
std
and
int
bound
cmovnp
sub
xlat
push
out
stc
mov
stos
cli
push
mov
clc
add
stos
pop
cs
and
adc
jg
mov
in
mov
sub
xchg
mov
push
push
out
xchg
or
bnd
sub
jne
sti
xchg
jg
inc
je
andl
in
cmp
xchg
rolb
jecxz
or
imul
lret
mov
xchg
dec
ret
stos
xor
aaa
ror
imul
mov
push
mov
ret
inc
xchg
popf
outsl
mov
aam
adc
scas
cs
mov
pop
outsb
mov
ds
cmp
cld
mov
dec
test
sub
pop
fidivl
jae
push
dec
jne
fwait
adc
fcomp
and
jg
dec
or
daa
jae
nop
pop
int
or
lock
out
pop
jb
cmp
js
icebp
xchg
test
push
jecxz
cmp
imul
fnstsw
inc
mov
call
xlat
std
ficompl
das
cmp
call
in
mov
mov
ret
xor
or
pop
cmpl
dec
in
add
sbb
orb
rcll
adc
lods
shll
push
test
cmpsl
stos
dec
cmp
adc
ret
js
add
test
addr16
aad
add
jg
rcr
in
ja,pt
pop
lcall
cld
mov
jmp
popa
mov
inc
in
push
adc
mov
daa
jmp
sub
sbb
sbb
inc
and
mov
sbb
xlat
mov
lock
decl
push
mov
inc
mov
mov
pop
pop
dec
jp
lea
sub
jnp
lahf
sahf
icebp
adc
xchg
xchg
enter
fistps
xor
xchg
insl
mov
das
inc
and
lods
outsb
aam
cmp
dec
jns
jo
cmp
dec
mov
fidivrs
scas
xorb
out
pop
xchg
mov
js
mov
inc
fidivl
xchg
sub
cmp
sub
sbb
mov
cmpsl
lea
xchg
sbb
xchg
iret
add
adc
lds
sub
jle
adc
xlat
stos
test
and
pop
arpl
cmp
push
push
adcb
jbe
div
adc
pop
jbe
adc
or
stc
loop
lods
push
mov
mov
fbstp
fdivr
ret
fwait
xor
shl
xor
mov
lret
bound
xchg
pop
inc
jbe
sbb
shrb
sub
xchg
mull
mulb
fucomp
pop
jno
pop
ret
pusha
cmp
fdivrs
add
mov
mov
xchg
stos
cmp
pop
sub
push
sub
pop
clc
movsb
aam
jnp
iret
adc
add
test
and
jne
lret
mov
pop
movsl
rorl
jne
inc
cmp
jno,pn
sub
push
pop
pop
cwtl
cmp
cmp
inc
subb
jno
fadd
call
cs
mov
loop
or
xchg
test
xor
push
rorl
xor
or
das
inc
test
lea
test
cmc
mov
lods
jecxz
pop
mov
xor
decb
cmpsb
js
xchg
pop
mov
lahf
adc
jns
ss
adc
negl
jae
std
inc
dec
cmp
ljmp
sbb
mov
movsl
pop
dec
jns
nop
out
push
rcrb
lahf
clc
aas
inc
movsb
pop
xor
nop
pop
push
jmp
mov
movsb
dec
mov
mov
jae
mov
or
clc
sub
or
jp
and
mov
addr16
jl
in
daa
jmp
out
xchg
push
xchg
cmp
aaa
insb
popf
rclb
jb
call
add
mov
or
pop
cmc
adcb
cli
and
cli
pop
test
out
ljmp
add
lds
mov
cltd
bound
inc
in
and
stc
and
lret
or
lret
mov
add
cmp
rcr
mov
cmp
jle
xchg
cmp
scas
mov
mov
add
push
mov
sti
jne
mov
ret
mov
adc
lods
cli
in
pop
data16
xchg
push
xchg
inc
out
adc
popf
addr16
outsl
xchg
push
push
push
add
lret
std
xchg
rol
fstps
dec
notl
popf
pop
push
aaa
xchg
sub
xchg
test
pusha
inc
js
pop
stc
cmp
stos
enter
sub
pop
fsubp
mov
jp
dec
pushf
ss
jno
push
scas
push
sbbb
aad
cli
lret
push
das
and
hlt
data16
loope
cmp
js
lds
in
imul
imul
sub
fidivrl
pop
pop
mov
push
cmpl
push
stos
mov
jne
ja
mov
jle
pop
lods
xchg
jge
cltd
mov
mov
mov
iret
int
mov
ss
dec
sbb
inc
push
rclb
scas
das
dec
fildl
inc
lahf
ret
and
fsubl
outsl
sbb
hlt
stc
jmp
inc
ljmp
les
mov
pop
mov
jnp
insl
lock
cmp
add
xchg
xchg
and
fildl
inc
mov
inc
lret
out
outsb
popa
ds
rcll
cmp
hlt
stos
xchg
sub
lods
xchg
adc
xchg
pop
push
je
push
fbld
jle
stos
xchg
jl
shl
ja
pop
lods
lret
and
out
rolb
push
mov
ret
dec
pop
ja
jl
mov
mov
inc
loope
cmp
mov
clc
pop
fstpl
adc
jge
dec
enter
adc
jp
jne
xchg
push
clc
lock
fisttpll
xchg
test
adcb
pop
nop
sbb
xor
call
xor
bound
jge
push
cmp
sti
dec
insl
lret
cli
cmpl
ret
push
sbb
pop
je
out
mov
aas
fnstenv
mov
push
dec
test
cmp
imul
push
mov
mov
stos
cmp
or
ljmp
sbb
sub
inc
mov
ja
fwait
aad
xchg
inc
test
mov
inc
lock
iret
sbb
inc
test
inc
sub
adc
dec
fdiv
roll
dec
dec
jnp
cmc
pop
inc
adc
dec
repnz
shll
cmc
mov
xchg
push
rorl
es
daa
push
in
mov
mov
enter
mov
xchg
int
push
mov
stc
pop
rcrb
cli
lds
out
sti
adc
stos
add
adc
ret
adc
idivl
xchg
mov
mov
mov
or
pop
mov
out
push
xor
pop
pop
fsub
fisubs
insl
pop
roll
cmp
or
jge
int
mov
xchg
cltd
or
lcall
inc
imul
adc
mov
lds
xchg
inc
mov
iret
out
icebp
jno
cmp
cmp
pop
cmp
jb
enter
rorb
nop
lock
mov
fimull
or
add
jno
mov
loopne
push
sbb
in
hlt
in
into
dec
dec
adc
push
decb
mov
mov
or
pop
push
data16
inc
cmc
cltd
ja
mov
xchg
mov
mov
in
daa
aad
rcl
add
std
adc
inc
inc
push
cmp
adc
lods
shrb
or
aas
aam
loop
in
push
sarb
jle
in
xor
pushf
test
xchg
cmp
jecxz
pop
mov
arpl
into
iret
popf
add
movsb
inc
sarb
pop
cmpsb
pop
lahf
das
fcoms
inc
insb
xchg
jae
in
pusha
sub
sub
fsincos
out
shl
jno
stc
jnp
sbb
add
popa
int
xor
mov
dec
mov
jae
js
mov
cmp
mov
jb
mov
popf
dec
in
and
jge
ja
leave
fidivrs
and
inc
repz
arpl
jne
jbe
divl
in
sahf
loop
iret
mov
mov
push
arpl
sti
adc
and
stc
adc
mov
jb
fcomps
sub
hlt
jle
pop
cmp
mov
dec
rclb
or
xchg
adc
mov
xchg
lret
inc
insb
add
mov
push
jge
loope
jne
push
jp
push
lcall
or
into
or
sbb
shr
adc
test
xlat
add
jl
sub
mull
jmp
mov
es
mov
dec
inc
test
xor
popf
cli
and
fsts
shll
pop
lea
loope
inc
insl
dec
or
lret
sbb
mov
sbb
std
fcoml
jmp
out
mov
pop
out
or
cmpl
test
orl
jp
push
mov
lahf
push
leave
cmp
ret
xor
inc
xchg
add
add
data16
push
daa
out
shl
push
cmc
rclb
popf
sub
mov
outsl
into
cs
bound
jno
adc
inc
pop
sub
adc
jmp
shlb
dec
aaa
mov
inc
add
dec
cmc
dec
add
ret
test
bound
jl
fmull
jmp
mov
jmp
daa
jle
fisubrl
test
adc
add
dec
fwait
xchg
lods
rcrl
mov
push
mov
xorl
mov
aaa
fxch
mov
lds
sub
adc
pusha
punpcklwd
clc
int
sub
inc
fisubrl
pop
push
pushf
mov
pop
mov
sub
pop
push
xor
aad
mov
cmc
aas
mov
push
and
cmp
insl
ret
jmp
nopl
shr
fildll
stos
adc
das
js
jno
dec
aaa
test
and
xor
sbb
and
insl
out
fidivs
sti
popf
cmpsb
rcl
test
les
nop
int
push
push
cmpsb
add
sbb
pusha
push
jno
icebp
cmp
jl
push
cwtl
jecxz
int3
xchg
jmp
cmc
jne
mov
les
arpl
jmp
outsl
cmpsl
adc
push
sbbl
or
out
adc
xchg
rcr
lret
push
add
insb
push
or
pop
js
xor
ds
andb
insl
in
js
pop
ret
mov
pop
xchg
and
test
mov
push
sub
popa
lods
out
pop
or
dec
dec
jmp
daa
push
mov
xchg
jl
mov
cs
push
jb
scas
shlb
inc
incl
jecxz
es
stc
and
in
mov
icebp
bound
fs
icebp
aas
loope
dec
mov
or
fnsave
xor
sub
ljmp
jmp
pop
pop
int
xchg
inc
fdivs
pop
xor
inc
xchg
dec
push
mov
pop
jae
inc
arpl
jg
push
lock
lds
outsb
add
je
cmpsb
adc
mov
roll
cwtl
dec
sub
insb
aas
sub
inc
inc
push
sbb
xlat
pcmpeqb
mov
pusha
xchg
push
dec
test
fists
add
mov
fucomi
imul
jecxz
loop
push
es
cli
stos
mov
jle
jne
lock
or
insl
fists
dec
outsb
lods
jp
pop
into
hlt
pop
xchg
push
push
fldenv
add
jns
stc
test
xlat
jb
dec
mov
xor
mov
pusha
sbb
enter
ret
es
cmpsb
loopne
out
mov
ds
lret
imul
dec
mov
pop
mov
fists
daa
dec
mov
popa
lods
lcall
adc
hlt
mov
movsb
adc
jg
js
outsl
loop
mov
shlb
xor
cmpsl
repz
xlat
push
lods
cwtl
orb
push
les
pop
sbb
adc
dec
inc
adc
decl
mov
cmp
ljmp
hlt
or
fwait
or
push
xchg
cmpsb
dec
push
or
cmpsb
rorb
in
mov
adc
addr16
mov
lret
stos
sahf
lahf
mov
mov
stc
popa
es
insl
ss
cmpsl
push
ds
aas
sub
jge
jns
pop
sahf
dec
xchg
pop
les
lahf
push
and
out
test
popf
dec
jne
mov
or
movsl
sti
sub
xor
repz
xor
sub
mov
mov
pop
popa
decb
and
rorb
mov
dec
adc
or
or
mov
mov
cmpsl
add
xor
cli
xchg
imul
popf
inc
inc
fldenv
xchg
stc
xorl
getsec
and
inc
insb
enter
pop
mov
stos
aas
clc
push
fwait
cmp
mov
cmp
and
xchg
mov
mov
les
pop
outsb
jo
jg
ss
stc
push
fnsave
sub
repz
inc
sbb
push
and
cwtl
cmp
out
subl
mov
cmpsb
jb
push
popf
lods
cld
aad
aas
dec
mov
ds
mov
push
lods
testl
enter
fwait
mov
lahf
push
mov
lcall
jb
mov
jmp
sub
pop
lds
testb
lods
sbb
das
shl
mov
jno
adc
inc
out
roll
or
push
enter
dec
xchg
and
cltd
jbe
mov
adc
cld
je
add
mov
xor
pop
xchg
jns
ret
sub
cmp
add
mov
cmp
and
in
jnp
enter
out
or
dec
sub
and
sbb
sub
lret
push
sbb
fmul
cld
sub
xor
sbb
mov
fnstsw
mov
cli
pop
push
je
xor
je
pop
ja
jns
xchg
dec
int3
cs
lods
lock
fisttpll
sub
mov
jle
popa
hlt
mov
rcrb
push
lea
adc
mov
sbb
mov
dec
dec
jp
addl
xor
test
pop
aas
pop
add
lcall
aas
jmp
inc
test
mov
mov
mov
insb
cmove
mov
sub
adc
inc
inc
push
out
shl
pop
js
and
mov
scas
scas
pop
and
cld
das
mov
jmp
pop
decb
cmc
cmp
in
xchg
sbb
insl
or
jmp
negb
push
xor
sub
enter
fcoms
ret
or
mov
aaa
or
lahf
inc
aad
sti
inc
jns
jmp
call
std
mov
jnp
popfw
das
and
neg
jecxz
jle
or
pop
adc
out
jo
mov
test
cmp
or
add
mov
loope
xchg
fbld
rcll
fstpt
orb
xchg
mov
test
cmp
les
jne
jecxz
push
icebp
in
popf
or
fsubs
test
add
gs
sbb
pop
jo
roll
and
or
mov
into
aas
enter
xchg
outsl
fists
mov
add
xor
mov
filds
mov
pusha
inc
or
sbb
pop
mov
shlb
shrl
cmp
sub
mov
out
je
rcll
add
sar
sub
pop
add
ja,pt
movsb
sbb
pop
xor
repz
out
cmp
adc
or
shl
movsb
enter
xchg
fs
dec
in
movsl
lock
popf
addr16
popf
xchg
sahf
orl
fucomip
lret
in
and
jge
leave
out
outsl
pop
neg
nop
inc
mov
enter
sub
cmp
sbb
push
dec
push
mov
inc
movsl
cmp
xchg
shll
sbb
scas
fwait
dec
inc
dec
push
xchg
mov
push
or
in
jno
add
and
push
mov
out
or
call
stc
sbb
mov
add
movsl
adc
bound
inc
aad
dec
faddl
mov
cmp
insl
inc
mov
xchg
push
adc
nop
mov
xchg
push
andb
mov
andl
adc
daa
movb
mov
mov
movsl
cmc
jb
xchg
push
adc
movsl
lcall
add
or
cltd
jg
cmp
pop
scas
iret
in
insb
xor
in
stc
xchg
push
test
lcall
xchg
pop
or
rorl
jp
or
ret
push
cmp
sar
add
pop
shll
sbb
add
pusha
mov
scas
pop
push
inc
stos
mov
es
mov
fmuls
pop
xor
lret
fdivrp
inc
mov
mov
jo
repnz
sub
enter
enter
mov
inc
rclb
pop
cmp
mov
scas
xor
sbb
ds
insb
fistpll
cmp
sbb
out
cmp
cmp
je
pop
adc
cmp
xlat
push
sub
outsl
addr16
std
adc
cmp
repnz
xchg
out
mov
and
mov
jbe
pop
add
push
xchg
add
in
les
dec
outsb
mov
in
jno
rorl
push
test
leave
sbbb
adc
call
mov
sub
stos
mov
add
pop
dec
add
mov
cmp
jo
jb
push
xchg
xchg
cmpsl
dec
push
in
xor
mov
dec
dec
aam
movsl
shl
xchg
adc
cmpb
jns
dec
pop
pop
xor
sti
xor
and
mov
jmp
shlb
dec
test
int3
inc
push
pop
push
inc
dec
pop
insb
cmp
ror
loopne
out
out
xchg
sbb
xchg
pop
fwait
shl
mov
xor
or
jmp
movsb
dec
add
ss
xor
pop
jl
ret
cli
sub
mov
push
mov
pop
ljmp
mov
aad
daa
adc
mov
imul
imul
test
push
sbbl
push
push
fbld
out
mov
sub
dec
pushf
mov
cmp
into
movsb
xchg
sbb
loop
out
popa
mov
lods
fistps
mov
int
dec
pop
mov
jmp
or
sbbl
lods
add
repz
sbb
mov
push
ret
inc
jnp
sbb
pop
push
in
ficoms
sbb
jb
jle
imulb
jns
sbb
and
lea
adc
mov
dec
imull
call
pop
sbb
jae
insb
fildl
bound
sarb
dec
mov
adc
xlat
jnp
imul
std
jo
sbb
gs
arpl
jne
icebp
push
pop
xchg
test
xor
mov
mov
and
ss
rol
mov
outsb
popf
mov
cmp
ja
adc
dec
xor
rcll
loop
sub
hlt
jno
xorb
ret
out
adc
jne
mov
dec
push
push
push
mov
fcmove
fiaddl
xchg
icebp
push
cltd
dec
test
sbb
mov
sub
pushf
test
xlat
test
jo
fists
aaa
call
ret
jge
cld
andl
jne
mov
bound
jns
inc
pop
aas
addl
shlb
add
push
int
popa
dec
or
pop
cld
lods
xor
dec
mov
add
mov
gs
xchg
hlt
or
mov
push
mov
mov
out
stos
addr16
ljmp
inc
or
enter
mov
ja
rcrl
shlb
movsb
dec
dec
lahf
xchg
sub
ror
cld
mov
pop
dec
adc
or
mov
pop
call
cmp
push
cmp
shr
ret
les
mov
lods
mov
rcl
mov
pop
cmpsl
and
sub
fsubr
xchg
push
data16
in
cmp
ret
movsb
jae
popa
fisttps
cli
stos
clc
push
movsl
hlt
mov
and
jae
inc
cmp
jle
das
and
jmp
xchg
jl
adc
pop
sbb
inc
inc
popa
cmpsb
cli
test
and
mov
stos
pop
jl
aaa
lcall
cld
addr16
loopne
dec
daa
pop
xchg
aam
pop
cmp
fstpl
subl
out
shll
jmp
jmp
fs
dec
mov
shr
aas
xor
repnz
clc
inc
das
push
adc
pop
out
lds
popa
or
imul
mov
jle
das
mov
cltd
rolb
rclb
leave
mov
repnz
cwtl
add
mov
dec
fs
stos
daa
xlat
mov
loopne
pop
pushf
adc
nop
out
add
cmp
adc
pop
push
mov
mov
jge
xor
inc
ja
call
push
cltd
mov
add
loopne
jp
ljmp
pop
fldenv
or
jae
ret
adc
je
clc
rorb
daa
pushf
fcomip
xor
les
dec
mov
push
aam
mov
nop
cld
push
mov
push
xor
push
mov
leave
adc
ret
jmp
pop
std
cld
loop
cltd
sub
pop
fs
fdiv
test
adcb
insl
xor
cmp
orb
insl
dec
pop
push
aam
cwtl
push
dec
jecxz
jge
clc
or
pop
mov
xor
pop
out
lods
fiaddl
adc
push
popa
int3
cli
insb
je
pop
and
test
add
aaa
aaa
xor
out
xor
mov
ret
pop
std
xor
xchg
ja
lret
fcomip
negb
push
fdivl
roll
or
push
sbb
shrl
popf
xor
jecxz
cld
sub
repz
insb
and
jmp
sti
inc
bound
mov
jl
jo
inc
dec
xchg
test
aas
dec
or
fisttpll
and
sbb
sub
and
mov
push
pushf
daa
jecxz
xchg
jl
rcrb
mov
sub
jns
loop
jns
fstl
icebp
mov
in
sbb
cmc
test
setae
lret
mov
pop
inc
es
mov
mov
pushl
adcl
mov
shl
mov
sbb
jg
xor
cli
mov
xor
fwait
sub
inc
pop
div
sbbl
clc
daa
pop
xchg
pop
aam
pusha
adc
in
mov
mov
mov
sbb
pop
js
inc
daa
push
sti
or
pcmpgtw
arpl
lock
shlb
mov
cwtl
ljmp
lret
add
cmp
xlat
dec
pushf
cld
adc
std
xchg
mov
test
cmc
imul
lock
loop
fsubl
out
out
dec
pop
inc
cli
ja
jmp
fwait
test
mov
inc
shll
scas
das
pop
and
inc
lret
cmp
add
leave
jp
in
push
sbb
inc
incl
seta
pop
mov
cmc
dec
xor
xor
hlt
jo
mov
cmpsl
fcoml
out
out
and
sub
mov
add
xchg
push
inc
mov
cmpsb
dec
xorb
or
lret
mov
test
das
adc
lcall
test
rcrb
popf
cmpsl
xor
jmp
call
jecxz
out
das
mov
mov
adc
fildl
ja,pt
mov
xor
lcall
mov
fiadds
aaa
dec
mov
popf
pop
outsb
stos
xor
mov
fcomps
stos
enter
daa
das
jge
mov
fwait
add
dec
out
xor
push
push
jecxz
cmp
sahf
arpl
outsb
xchg
imul
add
sbb
and
push
push
push
test
or
xor
mov
add
jns
cld
or
pushf
xchg
xchg
and
adc
in
ljmp
loopne
out
int3
mov
ja
pop
pop
popf
lds
scas
loope
pop
sub
mov
jl
cmpsl
cpuid
pusha
dec
loop
adc
inc
cld
mov
pop
sub
dec
adc
xchg
dec
push
data16
loop
cs
lods
fs
aam
in
push
shlb
jg
insl
adc
mov
movsl
in
dec
or
fistps
mov
xor
mov
xchg
outsb
dec
fidivs
insl
jg
pop
cmc
test
in
jp
push
lods
repnz
sahf
std
xchg
scas
in
dec
xor
pop
and
mov
in
pop
in
int
dec
adc
lock
mov
xor
push
ljmp
mov
cs
mov
sbb
lea
fs
rorl
daa
insb
mov
out
and
push
es
cmc
arpl
mov
test
xor
dec
dec
shrl
dec
in
jmp
xlat
xor
mov
sbb
aam
xchg
mov
inc
sub
ret
sti
insl
mov
aam
inc
fs
jle
mov
xchg
mov
mov
out
xchg
adc
cmp
aaa
in
int3
push
push
push
in
mov
xchg
xchg
xchg
out
adc
dec
insl
arpl
sub
aam
sbb
adc
inc
jae
cmp
orb
xor
sub
mov
loopne
fcmovb
mov
into
iret
and
sub
xor
shll
mov
cwtl
scas
mov
pop
mov
jnp
pusha
sbb
ljmp
pop
js
daa
sbb
pop
xchg
and
xor
in
cltd
jno
scas
inc
test
ret
std
or
pusha
xchg
or
mov
call
pop
mov
nop
jecxz
stos
fildl
sub
fwait
push
insl
bound
in
out
fstl
es
cmp
dec
lods
mov
jae
outsb
fbstp
push
out
imul
and
mov
sti
xor
push
adc
jno
loop
inc
pushf
mov
sbb
xor
xlat
aas
mov
sub
ss
call
sti
cmp
insb
adc
out
mov
sarl
fs
cwtl
push
sub
mov
adc
pop
popf
movsb
push
test
cmp
mov
scas
orl
sbb
test
xchg
repnz
push
mov
mov
cwtl
movsl
inc
addr16
jle
xchg
fistps
add
mov
or
popf
jle
cmp
sbb
subl
inc
mov
mov
sti
xchg
xchg
inc
std
add
mov
xor
push
bound
and
and
ds
rclb
aad
into
adc
fld
mov
mov
dec
mov
inc
xor
push
push
sub
daa
adc
xchg
sub
scas
xor
je
cld
ret
out
inc
cli
insl
scas
or
cmpsb
dec
dec
sahf
arpl
lods
and
mov
jge
add
dec
into
add
push
not
dec
aas
test
imul
push
sub
pop
mov
cmc
repnz
and
popf
mov
add
mov
inc
and
xchg
sbb
push
xchg
test
cltd
lods
fldl
pusha
stos
loop
pop
ja
ret
cli
xchg
in
and
aam
fisubrl
repz
mov
jbe
mov
pop
pop
rcl
popa
aaa
xlat
dec
adc
inc
push
push
xor
xor
add
mov
jl
orl
in
mov
pop
sub
or
cwtl
cmp
fsubl
dec
adc
sub
sub
cs
shrl
ret
cmp
mov
cmpsb
shll
arpl
add
cli
imul
loopne
sub
movsb
movsb
cli
fstpl
cmp
mov
loopne
cmpb
dec
jns
jmp
aad
lret
mov
jb
pop
fcoml
jl
int3
scas
pop
jae
pop
fmul
pop
loope
pop
push
cmc
dec
and
sub
and
stos
repnz
int3
jnp
scas
enter
call
orl
mov
lods
popl
aad
orb
cs
xor
pop
repz
cmpsb
lahf
gs
xlat
push
movsl
sbbl
pop
popf
aaa
test
call
dec
pop
frstor
leave
imul
loopne
lods
xor
push
loop
out
insl
cmp
jmp
leave
test
cld
adc
xor
dec
push
loopne
mov
or
mov
int
sbb
xor
mov
dec
movsl
mov
dec
mov
cmp
push
lahf
add
and
jmp
and
out
add
sub
push
push
es
inc
subl
lret
sub
mov
jnp
inc
jb
mov
ds
and
fdivrl
mov
pop
mov
lods
push
es
cmp
clc
das
xchg
add
mov
or
das
dec
pop
jp
enter
js
insl
incb
mov
movsb
outsb
sbbb
mov
inc
mov
in
inc
out
je
dec
rorb
out
lods
aad
xor
cmp
lret
push
test
inc
or
jl
fwait
mov
stc
mov
into
xor
mov
lcall
leave
mov
clc
xor
pop
pop
mov
sahf
push
and
xchg
ficompl
cltd
sti
sub
push
stos
rol
inc
shrl
adc
mov
clc
mov
ds
sub
fiaddl
dec
pusha
fstpl
inc
fsub
loope
stos
cltd
push
sub
adc
aam
bound
xor
push
mov
cmpsl
push
and
cmp
imul
ficoml
jp
imul
testb
xor
pop
fisttpl
xchg
adc
and
or
cwtl
xor
mov
xchg
push
test
xlat
data16
iret
in
or
push
rorb
into
add
cmc
jge
cli
arpl
xlat
int3
adc
pop
stc
enter
movsl
jg
sub
adc
aad
andb
xor
je
fisubs
out
loope
or
movb
sbb
insb
pop
adc
mov
push
aad
or
lret
push
mov
xlat
dec
js
js
scas
out
xchg
inc
cmp
aas
push
cmp
mov
mov
jae
aam
outsl
inc
adc
scas
out
fildll
xchg
aam
pop
mov
dec
sbb
fnstsw
fnstenv
sahf
lretw
lahf
jae
pop
xchg
mov
cli
sub
jno
in
inc
inc
lods
icebp
addl
into
jg
adc
and
je
xchg
xor
inc
jmp
push
inc
arpl
and
or
xchg
aaa
imul
jno
dec
imul
dec
add
jns
adc
mov
ret
enter
dec
xchg
inc
mov
mov
mov
leave
lock
aaa
inc
es
lahf
aaa
pop
xchg
push
js
jne
insl
xchg
cmp
push
fmull
ja
fildll
roll
mov
mov
push
enter
daa
out
shll
out
push
jp
push
and
out
dec
xchg
data16
scas
jbe
shlb
shll
mov
addr16
xchg
sbb
cmp
dec
xchg
pushf
fisubl
rolb
movsb
cmp
pusha
or
jb
cmpb
shrb
shl
repnz
jne
mov
out
out
mov
dec
repz
push
ds
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
or
popa
int
bound
mov
push
mov
jmp
sub
or
mov
and
outsl
aam
mov
mov
pop
xchg
ret
xor
mov
jl
cli
aam
jecxz
pop
ja
test
fists
ret
push
aas
adc
xchg
mov
xchg
mov
loope
pushf
push
iret
adc
in
scas
dec
pop
xor
jae
and
pop
xchg
xor
or
movsb
jmp
xchg
jbe
insb
jae
xor
xor
push
mov
and
insb
push
faddl
dec
in
cwtl
mov
dec
add
inc
popf
not
mov
push
mov
cmpsl
and
jmp
mov
push
xchg
dec
push
pop
push
popf
jno
jae
out
int3
mov
fnstcw
and
iret
jle
xlat
gs
mov
test
add
int3
jne
push
sti
fwait
out
lahf
cwtl
int3
inc
int3
jle
frstor
clc
mov
sbb
xchg
mov
sub
fdivl
push
rcrb
pusha
popf
sub
or
or
and
xchg
movb
test
mov
mov
popa
xlat
jbe
or
mov
add
dec
int3
adc
pop
clc
enter
push
lahf
icebp
mov
incl
test
out
pop
pop
jo
pop
ss
stos
mov
rdpmc
stos
loope
pop
xor
dec
inc
js
int3
mov
fisubs
sub
push
push
adc
mov
push
xor
or
adc
fldt
js
push
mov
cmp
popf
stos
mov
xchg
cmp
mov
mov
jecxz
or
dec
mov
stos
cmovns
imul
decb
pop
outsl
xor
pusha
mov
pop
insb
imul
jp
sub
scas
cmpsl
pop
fcomps
repz
ss
or
andl
cmp
sbb
int3
insl
mov
adc
mov
lret
lods
je
add
push
push
mov
test
inc
into
adc
lods
es
out
push
cld
sahf
push
das
xor
dec
stos
xchg
out
shr
jmp
leave
or
lds
mov
push
ret
adc
addr16
mov
pop
jmp
mov
stc
xchg
or
mov
xchg
mov
psubusw
cmp
pop
ja
aad
js
iret
outsl
or
popf
idivb
mov
push
mov
xchg
push
fidivl
fidivs
and
sahf
push
add
push
lock
jo
mov
and
jl
xor
out
lods
sub
sahf
xor
adc
clc
cs
mov
inc
pop
mov
pop
push
or
add
cltd
lds
sub
sub
ljmp
roll
add
or
mov
or
mov
out
pop
lret
push
jg
mov
dec
rorl
sub
mov
cmpsw
mov
mov
mov
ds
aam
mov
dec
push
mov
add
js
add
mov
push
xor
mov
dec
xchg
sub
out
jg
shlb
mov
and
mov
data16
pop
inc
das
pop
cmpsb
jle
adc
sbb
scas
cwtl
xor
je
xchg
push
or
mov
cmp
bswap
icebp
out
aad
dec
lods
jbe
push
xchg
add
jecxz
xchg
out
aaa
lret
mov
jecxz
add
orb
or
stc
shlb
push
test
sbb
pushf
bound
fisubrs
iret
or
mov
pop
mov
lahf
xor
ficoms
pop
xchg
jle
dec
fsubr
jne
sub
add
ds
adcb
stc
xchg
push
cmpsb
out
jl
repz
rorb
and
out
xorl
pop
inc
or
xor
sub
jbe
nop
lock
popa
jg
int3
lods
xchg
sbb
fnsave
clc
lahf
fists
push
dec
inc
xchg
push
adc
mov
cmp
scas
xchg
int3
out
popa
pop
out
mov
addps
sub
test
push
arpl
out
cmp
lea
jno
movsl
cmp
setp
sub
into
iret
lock
out
inc
rdtsc
or
jmp
mov
cmp
lock
mov
lahf
jnp
cmc
push
mov
inc
push
mov
inc
sbb
jmp
mov
dec
inc
adc
lds
mov
mov
in
mov
mov
insb
inc
adc
sbb
rorl
mov
jg
dec
cmp
jns
push
inc
dec
jg
cmp
mov
mov
mov
mov
cmp
cltd
mov
ljmp
sub
xchg
ret
mov
addr16
aas
and
xchg
les
in
cmpsl
insl
sub
inc
movsb
jge
mov
inc
scas
insl
mov
or
push
outsl
push
jno
cli
pop
lret
pop
ret
add
cmpsb
sbb
xor
inc
sbb
push
jmp
mov
dec
lcall
mov
jmp
mov
insb
sbb
scas
cmp
in
xchg
ja
mov
gs
mov
arpl
cmp
dec
pop
ss
pop
xor
cs
and
or
xchg
loopne
sbb
faddl
cmovge
mov
addr16
jbe
or
loope
mov
ficompl
pop
lcall
adcb
inc
in
sub
movb
addl
test
adc
bound
xchg
or
mov
mov
sarb
test
pushf
or
data16
push
dec
in
lea
pop
xchg
and
int3
cmc
pop
jge
and
shll
rcrl
adc
mov
mov
insb
data16
pop
push
cmp
mov
lods
inc
mov
push
fisubrl
xor
popa
in
flds
or
aas
sub
mov
jl
xchg
or
push
les
fs
lods
sub
in
xchg
dec
jns
jg
sub
pop
inc
push
mov
in
sub
inc
sbb
cmpsl
mov
loopne
std
out
adc
scas
cwtl
push
mov
mov
sub
in
stc
es
adc
adc
xchg
or
xchg
pop
mov
add
in
sub
je
gs
imul
lcall
lea
fiaddl
std
push
mov
xor
dec
mov
xlat
inc
mov
xor
cmp
adcl
test
push
mov
in
inc
push
out
xchg
idivb
pop
pushl
in
push
in
adcb
adc
jnp
lahf
int3
addr16
cli
fs
jg
jg
fstpt
xchg
fistps
ret
stos
cmp
push
xchg
addr16
cltd
loopne
cs
mov
les
imul
loopne
lods
lds
dec
xlat
mov
aam
inc
xor
cltd
loopne
fldcw
movsb
std
cld
test
cmp
pop
cwtl
mov
push
ljmp
or
dec
ret
sbb
adc
in
into
orl
add
ds
fwait
mov
xor
aad
aas
sub
fdivrs
insl
cmp
shr
xor
popa
les
out
fstpt
rol
sub
push
sar
repz
arpl
cmp
test
inc
scas
imul
xlat
xor
inc
cmp
jb
push
pop
loop
mov
adc
iret
xchg
jne
inc
shrl
mov
fcoms
int
mov
loop
pop
ret
jno
in
dec
adcb
sbb
test
fisubrs
inc
mov
test
add
sbb
xlat
xchg
inc
fiadds
js
ja
adc
mov
dec
aam
fbstp
incl
bound
mov
dec
sti
sar
push
aaa
addr16
sub
scas
cmp
mov
iret
fidivl
pop
push
mov
and
dec
cwtl
jp
inc
pushf
outsl
int
imul
sub
pop
jo
stc
push
int3
aad
xlat
jmp
mov
cmp
push
jg
sbb
push
add
jmp
sbb
ss
adc
dec
pusha
lds
xchg
mov
mov
lahf
sub
jno
sub
std
sbb
out
outsb
add
jg
sub
pop
push
repz
pop
das
ds
int3
push
pushf
mov
sbb
loopne
aad
cmpsl
push
jb
out
sub
mov
jg
addr16
cmp
repnz
sub
sub
jmp
mov
sbbl
not
jo
mov
pushf
adcl
cwtl
loop
pop
adc
notl
lea
inc
mov
push
enter
xchg
sti
shlb
push
jmp
adc
lds
mov
jne
and
outsb
andb
insl
imul
lods
test
push
jle
xor
pop
stos
mov
push
xchg
and
pop
repz
pop
lea
pop
jne
scas
adc
dec
xor
lea
sbb
push
mov
std
pop
out
pop
outsl
or
loopne
ss
arpl
int3
push
imul
mov
mov
test
in
xchg
mov
jmp
push
les
dec
imul
sub
mov
add
insl
mov
mov
or
popf
insb
pop
leave
adcb
push
dec
fidivrs
mov
add
jae
mov
xchg
jnp
cmpsb
add
and
sar
fs
cmp
push
nop
imul
shl
sub
roll
add
or
add
int3
mov
fwait
dec
sub
stos
mov
xchg
out
fsubr
xchg
cmp
insb
ds
xor
fwait
dec
push
das
or
pop
test
popa
iret
popa
ljmp
fcmovb
addr16
mov
push
fnstenv
adc
cmp
aas
mov
movsb
fidivrl
subl
sbb
xchg
movsb
psadbw
jae
hlt
test
fldenv
aad
lret
out
mov
xorl
push
or
pushf
mov
push
pop
mov
add
xor
outsb
lea
dec
sbb
aas
loop
mov
push
clc
icebp
dec
jp
ret
push
push
lods
jno
sbb
ss
xchg
adc
icebp
dec
pop
lods
pusha
xor
add
add
aaa
sbb
fucom
cli
add
mov
ds
push
xor
pushf
dec
pop
leave
iret
xchg
leave
xor
icebp
pop
xchg
xchg
jns
fwait
mov
push
subl
addr16
mov
push
inc
jmp
sub
pop
fsubr
sub
cs
cmp
jo
inc
cwtl
adc
cli
mov
jecxz
and
insl
imul
jle
pop
aaa
aam
outsl
iret
mov
lret
mov
xor
or
cmpsl
adc
scas
pop
mov
cmc
iret
fistl
jge
imul
rcll
pop
bound
push
pop
cld
repz
pop
cltd
lock
pusha
in
jae
sar
sbb
loop
pop
std
cwtl
lods
push
jecxz
dec
aaa
cmp
adc
dec
xchg
iret
push
jno
inc
movsb
inc
mov
push
dec
sbb
rol
jb
or
or
lret
sti
jle
adc
jo
lcall
stc
mov
arpl
mov
pop
clc
aad
movsb
pop
xchg
into
int
jecxz
or
add
sub
adc
out
ds
mov
ficoms
jmp
es
sub
xor
pusha
xchg
inc
je
int
in
cld
pop
cmp
mov
mov
mov
sub
test
xor
mov
ret
sub
push
mov
mov
sub
mov
lahf
jge
cmp
jb
call
inc
lret
jno
inc
shl
lret
or
sti
mov
cwtl
arpl
inc
lods
mov
jae
test
das
sub
jae
xchg
mov
negl
or
loopne
pop
lea
inc
mov
pop
jle
jg
or
sbb
jne
dec
scas
cmp
jae
and
icebp
xchg
inc
shlb
push
mov
std
dec
cld
fldcw
orl
sahf
lea
outsb
lret
xor
mov
fnsave
sbb
loopne
sub
in
pop
xchg
cltd
lret
pusha
cwtl
xchg
xchg
inc
and
mov
sub
dec
pop
das
inc
loop
mov
sbb
mov
outsb
dec
popa
and
pop
push
aam
push
mov
loopne
ret
call
sbb
fcmovbe
jl
pop
out
data16
enter
or
roll
mov
das
sub
sbbl
in
jmp
insb
imul
pop
ja
xchg
test
push
xchg
push
in
xchg
push
sbb
std
cmp
sub
stc
sbbb
pusha
jge
push
in
push
mov
hlt
shlb
mov
movsl
or
pop
inc
mov
dec
int3
xor
jp
add
push
or
sub
icebp
cltd
xor
sub
jns
push
jb
push
xor
stc
in
jns
or
jne
adc
xor
and
mov
dec
mov
xor
mov
loop
xchg
imul
cmpl
dec
mov
add
out
add
push
and
subb
negb
dec
popa
pusha
arpl
sbb
jb
nop
sbb
stos
xor
jg
mov
jge
imul
out
outsb
inc
adc
lds
pop
sub
int
hlt
jb
push
pop
insl
test
jbe
scas
mov
sbb
xchg
xor
faddl
ret
add
sub
dec
mov
cmovl
mov
popf
cmpb
pushf
cltd
inc
pushf
sar
push
inc
test
dec
mov
or
daa
fisubrl
sarl
jb
ja
add
call
stos
fcomp
imul
fs
dec
pop
mov
sub
aas
or
sbb
push
popa
aam
dec
jge
jecxz
dec
push
insl
mov
test
out
ss
daa
sbb
pusha
mov
jle
int
movsb
fwait
adc
movb
xchg
and
movsl
push
add
popf
or
push
and
clc
inc
roll
xchg
rclb
popa
push
jecxz
mov
xor
cmp
push
sti
data16
rorl
adc
add
and
adc
or
ja
das
hlt
ret
jp
sub
xchg
and
xor
mov
movsl
outsl
ja
xchg
int3
jp
sbb
and
jne
or
aas
xchg
push
cmpsl
cmc
dec
lock
lea
icebp
xchg
xor
xchg
jg
std
loop
dec
into
mov
test
icebp
lret
mov
lods
fistpl
sub
gs
push
push
ds
pop
je
push
and
clc
lock
pop
jb
hlt
push
mov
out
lcall
stos
jns
movsb
dec
rcll
cmp
in
pop
cwtl
fsubr
lods
and
stc
popa
lret
pop
pop
adcl
jns
jno
dec
push
repnz
popf
adc
xchg
cmpsl
in
mov
lods
push
or
data16
mov
scas
xorl
add
out
xchg
dec
sub
insb
lret
je
add
and
imul
mov
add
ss
fs
or
daa
xchg
adc
scas
imul
scas
pop
pop
sti
ss
cmp
repnz
fistpll
mov
clc
rorb
mov
roll
cmpsl
mov
fimull
lret
mov
and
sub
pop
jbe
inc
jl
pop
loope
pop
inc
in
add
mov
sbb
aas
mov
jae
dec
outsl
cmpsl
insl
sbb
lods
dec
out
xor
std
inc
xchg
test
js
xorb
and
pop
pop
orl
xor
dec
mov
xchg
test
enter
adc
iret
mov
fsubrs
lock
imul
int
roll
add
xor
sti
aaa
push
cmp
imul
pop
jecxz
js
nop
repz
cmp
andl
add
ds
xor
cmp
push
push
jp
inc
out
ficomps
stc
mov
lcall
sub
das
sub
jns
sahf
lea
enter
xchg
push
daa
scas
mov
es
sub
mov
fwait
leave
cli
xor
test
imulb
vmovq
andb
xorl
dec
dec
pop
insl
and
cld
dec
aaa
pop
or
mov
mov
pop
cwtl
push
jge
shlb
testl
inc
cmp
jp
int
cmc
pop
xor
sbb
orb
and
mov
ret
jne
sub
nop
xor
out
lea
jnp
in
outsl
frstor
hlt
mov
int
ljmp
mov
fucomp
addr16
ret
addl
mov
mov
je
loopne
jo
add
hlt
inc
and
ja
fs
inc
mov
or
xor
mov
fiaddl
loopne
outsl
jns
mov
mov
inc
mov
pop
inc
push
xlat
mov
and
outsl
cmp
nop
aaa
les
rol
ret
repnz
out
mov
sbb
sub
add
add
and
incb
std
push
cld
jns
sbb
mov
sbb
ficoml
sub
cmp
pusha
inc
push
insb
hlt
sahf
jns
adc
xchg
mov
lock
in
push
or
mov
insl
les
cmp
movsb
pop
inc
lahf
nop
leave
lds
push
ffreep
jg
push
mov
call
or
fcoml
adc
or
mov
xchg
mov
and
mov
mov
js
mov
fdivr
jl
lock
outsb
or
jecxz
pop
mov
jo
aas
call
or
fs
stc
das
jl
jnp
jns
dec
aad
int3
sbb
fs
mov
cmp
pop
pop
xchg
or
mov
jmp
xchg
leave
aas
aaa
mov
or
int
outsl
pop
js
pop
mov
je
lcall
xor
sbb
hlt
sbb
add
mov
dec
in
xchg
pop
roll
mov
clc
outsb
iret
xor
dec
popa
loop
push
sub
mov
ret
fstpl
cmp
test
push
ja
ljmp
dec
pop
push
ss
adc
adc
dec
loope
mov
jg
cmpsl
in
fwait
test
lret
inc
ret
stc
sub
out
add
scas
cli
jnp
popf
fimuls
aas
clc
dec
mov
xchg
xor
enter
jge
mov
jmp
mov
aas
xchg
jns
push
dec
xchg
testb
stos
or
inc
mov
fistpl
add
cwtl
out
out
cld
movsb
out
xor
shlb
clc
mov
aas
mov
lds
mov
cli
jecxz
mov
adc
mov
pop
arpl
rorl
or
adc
pop
and
jp
icebp
sbb
shrb
insl
push
call
ret
sbb
lea
lahf
ds
in
popa
adc
or
cmp
das
fldt
andl
lds
and
cltd
je
lret
stos
mov
js
xchg
or
aad
lret
fnstsw
inc
adc
add
in
repnz
aad
fucomp
cmc
mov
jl
js
loopne
es
dec
cmc
mov
or
add
xor
dec
outsl
nop
loopne
cwtl
mov
popa
sbb
and
sub
sti
mov
push
sbb
popa
jnp
mov
movsb
aas
push
test
jmp
cltd
fwait
push
mov
and
cmp
cmc
filds
xchg
add
mov
aam
push
loopne
mov
sbbl
imul
xor
jg
jno
mov
inc
lahf
mov
xor
ds
imul
push
and
daa
push
orb
xor
cmp
ja
mov
pop
and
xchg
mov
mul
mov
div
lret
mov
aaa
je
xor
sub
inc
and
test
dec
nop
and
sbb
pop
mov
jmp
push
mov
jl
icebp
adc
es
xchg
lock
aaa
adc
jmp
push
stc
les
lahf
lsl
fmull
adc
loope
push
mov
mov
xchg
out
fwait
loop
add
test
nop
imul
sahf
fisubl
pop
add
lea
mov
popa
jecxz
mov
jg
cld
ljmp
lcall
es
movsb
outsb
ret
pop
push
and
push
aad
movl
test
mov
xchg
inc
and
inc
mov
mov
cmp
in
push
data16
loope
dec
fcoms
pusha
nop
loope
mov
movsl
stos
sub
push
bnd
mov
mov
xchg
xor
ja
inc
inc
jp
mov
fldcw
rcrb
xorb
xchg
dec
jle
push
jne
sbb
fwait
push
cmp
cmc
xor
mov
pop
mov
mov
lea
loopne
fstl
lcall
lods
les
add
pop
arpl
stos
add
arpl
gs
popa
cwtl
pop
stos
movntq
mov
jae
xor
rcl
test
or
repnz
or
loop
sub
fwait
jb
pop
sbb
sub
sub
cmp
mov
mov
jnp
fists
out
pop
jbe
scas
jo
add
mov
std
dec
mov
cmp
int3
sbb
jns
adc
cli
adc
jp
xchg
push
pop
push
shlb
icebp
inc
cltd
add
xlat
ljmp
pop
lret
bound
push
loopne
mov
out
cld
loop
xor
mov
fcompl
xchg
xchg
or
loopne
sbb
jo
jns
push
and
or
addr16
movsl
add
aaa
or
lret
stos
ss
mov
lret
je
adc
or
sub
addb
das
cli
ljmp
fdivl
mov
int
inc
pop
mov
sub
push
push
inc
pushl
mov
add
repnz
xchg
aad
in
cmp
popa
push
adc
and
dec
lea
dec
push
fwait
mov
mov
inc
in
popa
lods
dec
mov
cmpsb
shll
dec
add
xchg
dec
xorb
mov
popf
mov
movsb
test
fildl
inc
icebp
pop
fnstsw
cld
jecxz
mov
fcomps
test
push
push
and
sbb
or
iret
mov
jae
mov
test
mov
adc
arpl
adc
push
jg
cmp
daa
adc
or
mov
imul
xor
mov
in
cwtl
xchg
test
dec
mov
aam
mov
mov
ret
in
aaa
inc
in
call
mov
and
xor
mov
pop
dec
mov
stc
aad
or
jae
leave
push
jp
jl
inc
stos
sbb
in
dec
ss
xchg
out
dec
pop
bswap
iret
daa
sub
push
enter
jne
xorb
push
cmp
sbb
addr16
test
fisubrs
mov
sub
lock
icebp
pop
pop
clc
or
imul
pop
ja
inc
outsb
movl
sub
xlat
jnp
mov
push
pop
aas
mov
loope
cmc
xor
inc
or
add
lea
scas
out
popf
imul
inc
sub
icebp
or
push
sub
dec
movsl
mov
mov
dec
mov
push
jnp
negl
and
ffree
and
sbb
stc
cmp
cmp
inc
cmpsl
push
push
or
ret
adc
pop
roll
sbb
arpl
sub
xchg
insb
jle
jb
loopne
pushf
loop
lret
aad
loop
insb
jno
testl
inc
lcall
icebp
jle
movsb
mov
push
pop
das
mov
popf
jmp
and
mov
inc
aaa
stc
adc
scas
enter
sub
fcomp
inc
xor
xor
shrl
dec
pop
cli
dec
add
add
in
push
sub
arpl
cmp
xchg
sbb
jns
lret
push
inc
vpunpcklqdq
fs
sub
sarl
call
jl
mov
cs
pop
out
filds
cmp
xlat
test
pop
imul
lret
cltd
jl
cwtl
mov
jno
lcall
insl
mov
inc
into
enter
aad
pop
out
and
cmpsl
movl
mov
jecxz
cmc
xor
jmp
add
inc
les
enter
ror
dec
stc
and
adc
inc
fwait
sbb
pop
lea
fcomp
and
sub
cmpsb
insb
dec
fs
push
and
leave
and
mov
fcmovnu
je
daa
out
cmp
mov
mov
stos
int
mov
jge
dec
popf
xchg
jne
xor
jno
cmp
sub
out
popa
out
adc
adc
cs
pop
fnstenv
jne
cmp
adc
lret
sti
mov
aad
or
hlt
adc
push
mov
stos
mov
in
int
sbb
push
xchg
int3
lret
les
fwait
sbb
sub
add
or
repnz
sbb
or
scas
lock
inc
xor
leave
mov
sbb
clc
mov
mov
dec
xchg
ja
std
xchg
dec
dec
ficomps
fwait
adc
lods
fcmovnu
cltd
mov
in
ja
inc
push
pop
sbb
push
repnz
push
add
les
mov
mov
hlt
xchg
repz
or
jbe
mov
rcrb
push
add
push
out
inc
mov
std
cltd
mov
lods
xchg
test
cmpsl
push
or
fwait
mov
rcrb
stc
inc
sub
test
popa
ret
sbb
cmpsl
cli
leave
add
push
and
mov
addl
sbb
ss
xchg
pop
in
xor
rcrb
leave
xchg
cs
out
rorl
arpl
cmp
data16
pop
jo
jbe
xor
jmp
jp
lcall
cld
push
movsl
sub
fsubrl
mov
xor
jns
xor
sahf
push
sahf
bound
xor
fbld
dec
mov
aas
dec
sub
push
iret
cltd
nop
and
add
and
push
mull
add
imul
in
fsubrp
notl
cmpsl
xor
mov
cmp
fidivs
jnp
imul
pop
sbb
pop
test
and
call
in
cli
ss
pop
fsts
outsb
jl
popf
mov
cmc
daa
mov
scas
mov
add
test
sub
pop
clc
or
mov
outsl
inc
lock
cltd
popa
iret
insb
jmp
outsb
jmp
push
js
cmp
pop
dec
cli
pop
pusha
add
sub
ret
dec
fcoms
adc
aas
aaa
insl
shl
bound
shll
jo
sbb
adc
mov
iret
mov
add
cmp
add
ret
xchg
mov
insb
pop
mov
shl
inc
pusha
and
dec
adc
and
loop
push
cli
push
lret
clc
in
outsl
cmp
cmp
jb
jae
addr16
xchg
push
pop
pop
mov
xchg
xor
jno
dec
fcoml
mov
cmp
mov
or
add
repz
and
push
outsl
mov
dec
push
das
add
add
add
and
pop
xor
outsb
pop
inc
mov
gs
std
data16
jns
divb
out
ja
hlt
ds
sahf
out
scas
daa
int
xor
and
add
mov
insb
add
inc
push
mov
push
ljmp
xchg
mov
mov
out
arpl
or
adc
out
loop
cltd
adc
rol
adc
cwtl
jmp
test
fisubl
adc
jecxz
sbb
lods
hlt
sbb
cmp
ljmp
cmp
dec
or
in
ds
int
movsb
cmp
sub
jmp
rcr
or
fimull
xorl
push
mov
push
mov
add
outsb
imul
out
out
mov
adc
inc
inc
lret
test
inc
push
lahf
ret
getsec
sub
adc
mov
sub
xor
iret
fisubrs
mov
pop
jecxz
dec
mov
js
push
and
ret
aaa
mov
call
sub
pop
ss
insl
cmp
or
test
mov
or
clc
daa
aas
cli
fadd
mov
adc
loop
sub
fiaddl
sub
mov
pop
mov
jae
fdivrs
js
mov
lahf
push
jp
or
dec
sub
daa
imul
cld
insl
sub
jo
movsl
cltd
scas
call
iret
pusha
and
adc
adc
jge
rcrb
xor
lods
enter
stos
push
mov
jb
daa
push
scas
divl
xchg
fstpt
imul
mov
pop
pop
adc
fnsave
xor
cmp
and
pop
dec
mov
shlb
js
cmpsb
mov
pop
xchg
sbbb
sub
hlt
mov
dec
push
push
test
pop
bound
xor
cmc
jecxz
mov
xchg
sub
or
out
and
repnz
negl
int
scas
or
inc
test
stos
add
push
cmp
cwtl
inc
or
fstpt
in
xor
mov
dec
fwait
jl
rcrb
xchg
dec
arpl
test
xor
mov
xchg
aam
dec
or
adc
into
pop
sbb
movsl
inc
dec
jmp
into
adc
xchg
mov
call
sub
jmp
mov
or
std
aaa
sbb
jle
or
sub
push
sbb
insl
outsl
lods
in
mov
mov
les
add
cmpsb
jo
iret
jnp
inc
add
mov
cmp
or
and
rorb
pushf
lret
mov
repnz
jecxz
sar
adc
lds
aad
dec
mov
dec
inc
sbb
dec
aad
ret
mov
int3
repz
adc
dec
popa
arpl
and
orb
fs
mov
and
and
outsb
stc
jnp
pop
notb
lods
scas
sub
push
sub
xchg
mov
xorb
js
jge
test
je
jmp
outsb
jle
lcall
setge
cmc
mov
int
jge
and
int3
stos
push
aas
inc
or
push
sahf
add
rorb
cmp
xchg
jne
xlat
in
imul
je
jae
test
lock
jb
cmp
outsl
out
sbb
nop
outsl
or
cmp
xorb
pop
popf
mov
loope
cmpsb
mov
push
rolb
sbb
xchg
sahf
jo
out
jne
mov
adc
ja
push
push
and
sahf
lods
jg
sbb
andl
adc
cmc
pop
push
sub
push
cmpsl
push
inc
icebp
pop
sub
add
cmp
stos
sbb
jb
rol
inc
inc
cltd
add
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
mov
add
xor
negb
jne
add
mov
jmp
sbb
and
imul
outsl
mov
int
js
jae
or
ss
mov
inc
push
imul
das
fidivs
repz
ljmp
cmp
mov
push
push
push
mov
lcall
sbb
lret
xchg
jnp
aaa
int3
std
mov
insl
aam
lods
or
mov
pop
popa
in
cmp
sub
fwait
mov
movsl
movsb
xor
iret
test
out
mov
push
cmp
xor
pop
push
xchg
add
shrl
adc
cmp
out
pop
xchg
push
pop
xchg
add
lea
addb
out
or
inc
insl
jb
fnstsw
xor
popa
popa
std
lea
cmp
inc
jb
jecxz
mov
mov
cs
lret
scas
call
fistpll
jecxz
jg
inc
jnp
jp
mov
ss
push
loope
adc
mov
mov
cmp
pushf
pop
add
adc
dec
xlat
inc
popf
mov
leave
imul
iret
mov
xchg
mov
mov
sbb
lea
mov
sbb
mov
dec
rorl
xor
add
pop
sub
sub
addb
xchg
add
or
data16
sub
xor
ror
mov
jns
bound
mov
jecxz
dec
faddl
add
rcrl
lods
leave
push
sub
ret
mov
test
push
push
hlt
cmc
fiaddl
andl
adc
popa
lahf
rcrl
sub
ret
adc
dec
stos
mov
jmp
jecxz
cwtl
xlat
add
sbb
les
in
add
xchg
mov
pop
mov
adc
loope
call
pop
inc
mov
jae
mov
aaa
or
sub
xchg
scas
and
in
cltd
xor
xchg
das
xchg
push
add
das
and
aam
aam
ljmp
je
inc
push
pop
mov
scas
add
add
fidivl
push
je
fwait
cwtl
push
jnp
cltd
loop
or
mov
inc
cwtl
test
sub
jns,pt
pop
cwtl
mov
sbbb
mov
hlt
lret
mov
adc
cmp
in
ret
das
xchg
xor
js
sub
repz
sub
hlt
xor
cmp
jns
push
js
pop
mov
xchg
shl
mov
jb
jnp
mov
insl
loopne
mov
jge
jns
ds
imul
and
mov
into
fcmovbe
and
icebp
and
test
xor
xlat
test
hlt
bnd
mov
loop
insb
mov
lret
dec
jle
sti
cmpsl
mov
dec
mov
mov
add
sub
push
push
dec
inc
mov
or
je
pop
sbb
ljmp
iret
sbb
into
cmc
cmc
cmpl
add
mov
idivb
mov
out
sub
dec
jno
jns
hlt
movsl
lock
sub
shlb
mov
lods
notb
adc
gs
ret
mov
or
into
outsb
lods
add
dec
dec
sbb
mov
cwtl
js
cltd
mov
dec
cmp
mov
sbb
mov
xchg
cmp
xlat
mov
cld
adc
pop
or
mov
add
or
inc
movsl
lahf
dec
inc
add
out
lods
cmp
stc
stc
and
ss
adc
add
add
fsub
or
call
mov
dec
shlb
icebp
dec
sub
push
dec
enter
sarb
dec
test
jbe
jno
inc
sub
repnz
mov
add
lret
push
pusha
jl
popa
shrl
je
nop
sub
dec
roll
outsb
cmp
call
fisubl
pushl
rolb
lods
push
dec
or
lahf
cld
xchg
shll
arpl
mov
xor
les
jmp
outsb
xchg
pop
sub
cmp
xor
popa
aaa
lods
push
mov
outsb
cmp
add
add
add
add
inc
gs
aaa
push
and
enter
add
lock
push
imul
pop
pop
xchg
rolb
in
stc
dec
mov
add
or
mov
outsl
jl
arpl
pop
add
pop
and
cld
cmp
push
mov
jns
or
sub
jp
cmp
xchg
cmp
iret
dec
lret
shll
loopne
inc
mov
in
dec
shlb
test
rol
or
fstps
pusha
testb
mov
aas
aaa
xor
dec
test
pop
sbb
xchg
sub
and
lahf
mov
xchg
fisttps
push
sub
dec
inc
sub
das
jle
jg
imul
shrl
mov
mov
add
add
dec
and
mov
sub
pushl
sarl
clc
iret
ljmp
jmp
lret
sahf
mov
shl
cmc
sub
loope
cmp
in
loope
push
aad
or
test
jmp
sbb
mov
das
mov
out
lock
cltd
js
mov
hlt
adc
out
fimull
sub
ljmp
flds
inc
inc
ret
and
cs
rorb
sbb
mov
mov
insl
arpl
stos
sub
arpl
lcall
mov
dec
push
or
add
and
mov
mov
sbb
insl
lods
add
scas
add
add
mov
or
pop
add
lret
int3
loop
lock
dec
mov
int3
xchg
test
mov
cmp
out
sti
push
in
pop
fwait
xor
je
stos
sarb
cmpsl
push
outsb
pop
insl
mov
arpl
and
adc
jmp
inc
xchg
cmp
cltd
xchg
sbb
jb
js
movsb
inc
and
incl
jns
jle
pop
push
mov
sub
outsl
cmp
adc
push
mov
icebp
fs
jns
xchg
or
pop
dec
mov
xor
jecxz
and
les
and
add
or
ret
lods
sub
mov
rcrb
add
scas
add
add
mov
and
push
loopne
addr16
loope
mov
shll
push
jmp
shrb
xchg
add
es
jnp
jle
fs
dec
inc
out
cmpb
xlat
push
cmpsl
push
sub
arpl
xchg
aad
jle
cmpsl
dec
and
pop
adc
jge
jnp
scas
or
or
jae
inc
movsb
sti
push
adc
cmp
add
pop
mov
pop
popa
shll
xor
mov
stos
mov
jg
imul
pop
xlat
dec
cmp
mov
je
add
ret
pop
iret
fst
enter
leave
cmp
lods
add
scas
add
add
mov
pop
add
dec
push
fs
int3
push
lcall
fndisi(8087
adc
rol
mov
inc
cld
test
pop
rorb
ja
xor
xchg
pop
cmpsl
inc
in
inc
pushf
mov
push
sbb
lahf
add
cmp
and
xchg
xchg
xchg
or
idivb
mov
repnz
mov
push
cmc
lahf
and
mov
clc
leave
jmp
mov
push
mov
dec
test
sbb
jle
mov
sub
lret
jbe
das
shrb
add
jmp
loop
add
popa
pop
lock
out
repz
mov
ret
in
inc
xor
add
sbb
add
push
or
push
lahf
fwait
mov
cli
std
loopne
sarb
scas
ret
pop
leave
nop
push
jns
dec
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
in
aad
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
je
inc
add
inc
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
insb
aam
add
inc
add
inc
add
inc
add
aam
add
inc
add
or
cmpl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
pop
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
outsb
insl
pop
pushf
lods
xchg
add
scas
add
add
gs
dec
inc
lods
outsl
adc
sti
mov
ljmp
jecxz
add
adc
pop
les
iret
iret
add
ja
int
pop
mov
leave
div
int3
xor
dec
mov
mov
ret
adc
fs
pop
mov
scas
movsb
add
xor
lea
lret
lcall
inc
rcl
jo
frstor
cmpsl
dec
mov
in
cmpsl
pop
lock
enter
adc
add
cmpsb
cmp
adc
add
push
mov
div
aaa
adc
mov
adc
in
popf
sbb
pop
jle
mov
cs
mov
sub
cli
jl
xlat
push
xlat
fimuls
add
push
or
shll
adc
pop
int
mov
movsl
fisubrs
rcl
add
pop
xchg
leave
stos
addr16
aad
cld
cmp
hlt
leave
sbbb
add
cmovns
ljmp
add
nop
daa
hlt
fldcw
sub
push
adc
aad
inc
mov
fldl
mov
stos
xlat
mov
mov
into
or
imul
jb
aad
cmp
jmp
adc
test
cmp
cmp
mov
mov
xchg
mov
pusha
cltd
mov
mov
or
add
add
add
mov
jg
ljmp
push
inc
or
add
xchg
push
cmp
ljmp
pop
orb
adc
lret
fidivrs
call
mov
mov
lea
push
mul
cmp
lods
push
jge
mov
push
addr16
imul
dec
fldt
cmp
stc
adc
adc
fldl
dec
jno
add
idiv
pop
pop
movsl
test
add
inc
jp
xor
cld
sbb
fisttpll
imul
add
int3
stc
inc
sbb
fbld
xlat
jg
mov
xchg
sub
jmp
rcr
mov
outsl
dec
mov
cmp
cmp
in
fimuls
add
mov
add
scas
add
add
add
dec
jne
popa
mov
nop
cltd
inc
dec
in
fwait
cmpsl
push
and
mov
dec
test
addr16
and
mov
into
sbb
cmp
xor
xor
push
push
iret
divb
gs
cmp
int3
ror
imul
cltd
fwait
xchg
push
lret
jno
jp
jmp
mov
outsb
cmp
fidivl
stc
push
fbstp
pop
add
add
les
aaa
or
pop
loop
aaa
addr16
lahf
jp
sbb
aam
jg
call
jne
fwait
mov
xor
inc
lret
lods
xchg
add
mov
sbb
std
negb
sub
xor
gs
add
scas
add
add
jl
adc
xor
mov
jne
lcall
jnp
les
mov
jp
ds
fimull
and
into
loopne
ficompl
test
shlb
cmpsb
inc
cwtl
sub
push
sub
mov
scas
sub
ss
out
push
imul
in
mov
fwait
mov
popa
sub
popf
push
inc
pusha
repz
push
cmpsl
mov
mov
xlat
add
mov
cmpsl
pop
das
out
leave
clc
jne
icebp
inc
mov
jle
and
dec
in
xchg
imul
and
push
cli
jle
test
int
sbb
inc
repnz
add
lahf
add
fidivl
xchg
mov
scas
fbstp
inc
mov
add
lcall
shll
mov
push
mov
scas
mov
lcall
fdivrp
inc
sub
shlb
sbb
inc
pop
popa
jg
pop
lds
das
sbb
mov
dec
lret
xor
lock
cltd
xchg
cmpsb
cmp
and
mov
xchg
sub
fadds
sub
daa
imul
mov
test
sbb
call
sar
xchg
jne
dec
push
lret
rcll
mov
push
sub
xchg
flds
jb
pop
mov
sahf
inc
adc
push
xchg
call
iret
dec
cmp
fs
iret
pop
mov
add
add
pop
sub
push
rcrl
add
fstl
cli
arpl
hlt
adc
lock
push
mov
sub
push
insl
fwait
push
xor
addl
adc
push
push
add
add
stos
sbb
aam
lret
scas
jb
jnp
mov
outsb
sub
test
outsb
dec
dec
xchg
dec
into
mov
cmp
clc
pusha
sahf
mov
in
pusha
es
stos
stos
inc
pop
sub
jns
faddl
fs
inc
mov
sbb
push
mov
repz
bound
dec
push
xorb
mov
pop
inc
call
and
bound
add
mov
aam
xor
and
outsl
fwait
add
scas
add
add
push
das
movl
out
cs
mov
sub
lcall
out
test
and
or
ja
cmc
sub
pusha
stos
pop
pcmpeqw
mov
adc
or
xchg
mov
inc
call
loopnew
or
mov
xor
movsb
pushf
lods
incb
pop
or
jno
negl
fcmovnbe
sbbb
es
mov
sbb
lds
lret
inc
adc
add
inc
pop
cmp
push
insb
sbb
shl
xlat
lea
arpl
and
add
cmp
add
mov
out
mov
nopl
add
push
mov
mov
jle
or
sub
dec
pop
jno
mov
mov
lods
lods
xor
or
sbb
push
mov
out
mov
shrl
int3
in
cmp
gs
jb
push
mov
mov
test
push
imul
out
fcmovu
xor
xor
outsl
ljmp
inc
outsb
and
inc
fwait
or
cli
sbb
pop
js
add
pop
pop
shrl
sahf
lret
js
sub
out
in
pop
lret
xchg
lods
popa
and
imul
mov
sub
add
jmp
repz
fimull
push
cmp
add
xor
fwait
jmp
and
and
mov
mov
out
out
sar
inc
and
xchg
mov
xchg
mov
lock
mov
andl
push
and
push
xor
pop
mov
out
rolb
push
sub
out
pushf
sbb
cld
movsl
dec
lcall
lods
aam
inc
and
fs
mov
arpl
inc
test
xor
arpl
lods
cltd
aad
pop
push
sti
rorl
test
imulb
daa
in
pop
xor
lds
add
pop
iret
pop
aad
ss
dec
cmp
lret
stc
jns
add
scas
add
add
sub
test
mov
sarb
and
shrl
mov
dec
bound
add
and
inc
push
and
sub
in
cmp
adc
aaa
je
inc
dec
fwait
shll
push
and
adc
data16
arpl
in
out
jle
enter
flds
movsb
mov
add
ja
mov
adcl
mov
fcoml
call
dec
out
sub
outsl
adcl
jns
test
dec
push
mov
cmpsl
jno
xor
loop
mov
das
add
test
in
inc
dec
lcall
add
add
add
fwait
test
jg
pop
pop
mov
add
add
loope
fildll
cmpsb
xchg
int3
add
dec
arpl
push
add
dec
and
or
xchg
loopne
lods
mov
xlat
call
and
popf
ret
mov
aas
jne
sbb
cltd
loopne
shll
mov
sub
mov
or
and
cmp
inc
pusha
aad
jno
mov
xchg
adc
mov
and
jg
pop
jle
cmp
stos
lods
cld
xchg
stos
sbb
xchg
leave
add
popw
dec
pop
push
add
outsb
jae
lret
jle
repz
repnz
aad
add
scas
add
add
pop
and
loop
xchg
test
out
push
xor
aam
push
cwtl
or
mov
sti
lods
in
loope
sbb
jo
leave
push
ds
daa
stc
out
sub
pusha
test
xchg
das
jmp
or
inc
jmp
fwait
daa
popa
mov
mov
jp
out
fimuls
dec
ss
adc
andb
cmp
in
aaa
push
aas
and
jo
xchg
lcall
xchg
fdivp
pop
in
mov
mov
cmc
les
sbb
aam
sahf
popa
jae
es
or
sbb
add
rcll
in
dec
leave
add
cmc
adc
adc
mov
lds
sbbl
add
inc
mov
add
pop
dec
stc
in
das
jecxz
jne
pusha
xchg
div
dec
or
dec
cmpsl
pop
xor
movsl
jl
dec
xchg
test
in
add
inc
and
imul
cmp
pop
scas
popf
pop
xlat
pop
mov
pop
dec
pop
gs
adc
cmpsl
jae
mov
js
sahf
out
jo
pop
cwtl
dec
out
cld
insl
push
in
fs
inc
leave
mov
sub
into
sar
dec
inc
jns
sbb
stos
mov
push
outsl
cmp
in
decl
or
mov
mov
lret
mov
adcb
movsl
not
xlat
and
add
add
add
cmp
mov
shlb
pop
loop
mov
add
push
addr16
addr16
xlat
pop
fmuls
and
xchg
pop
addr16
push
cwtl
cmp
cmpb
stc
or
mov
mov
mov
popa
mov
loop
cmp
in
movsl
push
popa
inc
icebp
aam
jg
lods
add
mov
ret
mov
shlb
add
and
cmp
push
adcb
and
mov
and
fcoms
xor
xorb
scas
add
fwait
std
negl
push
jl
jns
scas
mov
xor
notl
add
and
add
aam
push
lock
cmc
das
sbb
xchg
iret
rcrl
dec
fbld
add
mov
orl
xchg
shr
aas
mov
adc
arpl
les
dec
add
sub
iret
scas
and
imull
je
int3
data16
cltd
mov
iret
repz
mov
fs
clc
sbb
pop
and
xchg
jle
or
xchg
mov
mov
loop
pop
lret
xor
mov
mov
cmp
xor
mov
out
jmp
jb
pushf
sar
call
outsb
lret
xchg
push
outsl
fldl
mov
pop
fstps
aad
mov
add
pusha
out
enter
adc
in
sbb
daa
fst
add
int
xchg
inc
cmc
sti
fildll
jge
pop
orb
add
jl
jmp
js
or
xor
add
mov
pop
mov
sbb
rcl
cli
test
hlt
pop
cmpsb
nop
add
inc
jns
je
xchg
jo
mov
xlat
arpl
stc
int3
pusha
mov
pop
movsl
lahf
dec
fisubrl
adcl
cmp
loopne
jl
push
sbb
cs
mov
push
loope
movsl
mov
jbe
lret
mov
inc
xchg
lahf
mov
inc
mulb
mov
and
push
xchg
mov
jno
inc
xor
lahf
sbb
es
sbb
stos
push
repnz
jnp
fdivs
pop
add
adc
testl
sbb
cmp
add
mov
mov
rclb
lret
inc
jmp
cs
adc
mov
mov
cltd
mov
mov
fstp
mov
mov
movsl
or
dec
add
xchg
jno
cmp
sub
in
int
xor
push
aaa
push
or
pop
sbb
inc
lret
fadd
out
lret
or
mov
inc
xlat
xchg
test
inc
scas
pop
cld
xor
out
mov
into
imul
ja
out
dec
sbb
je
loopne
or
xor
adc
mov
add
add
add
add
push
imul
mov
fstl
mov
add
mov
mov
mov
pop
dec
insl
mov
add
jae
mov
push
add
movsb
mov
sub
pop
dec
or
dec
lods
pop
mov
or
adc
lahf
stos
add
mov
push
inc
push
cmp
push
jmp
leave
adc
adc
and
fs
lret
out
mov
mov
xchg
sti
lds
adc
xchg
pop
popf
xor
outsb
mov
cmp
fs
xchg
push
xchg
jae
pusha
lea
aad
mov
leave
mov
xor
sbb
mov
and
add
insl
inc
sub
lret
add
add
jne
jg
clc
cs
push
jno
add
scas
add
add
push
and
xorl
dec
jb
dec
mov
push
adc
int3
dec
jmp
cs
xlat
push
sub
pop
mov
mov
xchg
fnstenv
cmp
add
cli
add
mov
rcr
mov
leave
mov
sbb
stos
pop
les
test
vmread
dec
in
les
xchg
xor
xor
les
mov
jae
call
xchg
insb
shrl
iret
xchg
iret
jl
test
jmp
sbb
cmpsb
mov
outsl
in
pop
inc
inc
jo
cwtl
jbe
sub
add
mov
cmp
sti
dec
mov
je
lcall
add
scas
add
add
mov
ljmp
psrld
jmp
int
inc
loop
jle
loopne
cwtl
lods
sbb
js
pop
cmpsb
sbb
push
in
xchg
push
repnz
jle
fisttpll
pop
lret
int3
pop
icebp
in
or
leave
pop
and
push
lcall
xor
in
cltd
add
mov
xor
in
ja
shrl
clc
mov
pop
pop
insb
fs
jecxz
lea
adc
out
sub
es
daa
sahf
cld
aas
push
inc
lds
test
repz
adc
fmul
add
push
add
or
jge
fs
fs
add
fists
dec
mov
xchg
adc
jmp
ror
mov
add
sbb
xchg
imul
movsb
jb
push
arpl
sub
in
sub
xor
and
mov
mov
push
xor
dec
lcall
and
push
out
in
out
shl
jg
stos
stc
xor
imul
jp
cmp
or
inc
pop
mul
push
gs
aam
out
repz
and
xorl
mov
hlt
mov
push
inc
popa
vpmulhuw
adc
sti
std
imul
push
into
in
xchg
sbb
out
inc
pop
dec
enter
xor
lea
in
push
movsb
pop
and
lret
jg
mov
pusha
add
xchg
fcmovu
fisttps
push
lcall
add
xchg
lret
add
outsb
pop
jne
outsb
pop
test
rcr
sarl
fisubrs
mov
pop
dec
xchg
iret
inc
jp
push
push
mov
pop
test
std
push
adc
cmp
or
stos
xorl
fs
pop
fwait
mov
and
sets
add
mov
push
loop
in
js
outsl
xchg
push
popf
xor
fstp
fadd
leave
and
out
push
out
and
lcall
gs
lret
fwait
movsl
add
lahf
arpl
std
jle
out
sbb
mov
lea
add
lret
xor
aad
clc
push
mov
xchg
ds
into
xor
daa
ss
or
aad
mov
xchg
pop
clc
mov
fsubrl
sbb
int3
bound
enter
aas
outsl
xchg
and
or
in
mov
clc
mov
jmp
dec
fcompl
sar
jge
inc
es
mov
imul
popa
jnp
divb
arpl
sub
push
sub
lock
rcrl
scas
pop
clc
push
popl
aam
stc
mov
loope
std
jns
ret
lret
adc
mov
lahf
and
add
jo
and
cmp
in
testl
scas
add
add
xor
out
mov
or
lods
dec
enter
add
leave
test
adc
inc
ret
pop
movsb
jb
enter
aaa
sti
ror
dec
lret
aam
scas
int3
mov
lods
lahf
gs
ja
imul
sarl
cltd
aam
push
xor
jbe
push
inc
repz
test
loop
fs
pop
out
int3
rolb
arpl
mov
nop
jecxz
mov
outsb
fcomip
add
add
shrb
mov
inc
inc
dec
cmova
je
inc
sub
fld
cltd
insl
insl
and
stos
imul
add
popf
aam
rclb
add
sub
jp
cltd
add
push
out
shll
aad
mov
mov
xor
stc
fcompl
lcall
inc
imul
fsubrp
cmc
dec
andl
ret
dec
mov
mov
lock
cmpsb
push
cld
mov
ljmp
out
psllq
inc
sbb
in
dec
cmp
xor
lods
shll
mov
orb
call
mov
push
leave
shll
std
inc
push
push
xor
pop
add
scas
jg
mov
jo
in
shr
bound
add
mov
jbe
hlt
mov
and
cmpsb
mov
popl
add
and
pop
cwtl
or
mov
outsb
xchg
or
outsb
insl
xchg
je
arpl
lds
sub
sub
mov
int
shl
mov
xor
xor
les
jge
and
jp
movsl
fbstp
clc
test
xchg
fidivrs
outsl
bound
les
mov
cld
fbld
ds
sub
sbb
add
ret
inc
or
pop
inc
mov
aaa
out
push
push
push
pop
jg
mov
int3
mov
cwtl
push
stc
fistps
push
cld
add
xorb
dec
jae
cwtl
fs
popf
mov
sbb
add
add
add
xor
into
mov
sub
out
mov
std
xor
popl
add
cmpsb
dec
lea
popa
iret
xchg
inc
sarb
addr16
xchg
cld
fildl
mov
xor
data16
or
or
inc
bound
mov
cld
dec
jmp
fnstsw
paddd
out
and
std
clc
popf
and
mov
push
cld
push
fildl
add
out
cs
pop
out
insl
xchg
cmp
enter
ljmp
push
ret
push
adc
testb
adc
fldl
jae
addb
lods
or
xchg
mov
cmovb
add
in
outsb
and
pop
mov
nop
add
scas
add
add
fists
leave
insb
aad
test
sbb
lea
rol
sbb
js
lods
fidivrl
push
dec
sbb
rorl
jno
imul
imul
xchg
ror
jecxz
inc
aas
addr16
jp
inc
jae
in
and
imul
pop
aaa
jp
roll
fisubl
addr16
sub
adc
pop
jecxz
dec
push
loopne
fwait
dec
dec
addb
movsb
xor
inc
pop
cmp
mov
jecxz
dec
cmp
enter
cmp
adc
add
mov
and
outsb
cmp
add
add
xchg
je
sub
pop
jns
iret
aad
and
movl
xchg
xchg
inc
mov
stos
mov
push
cmpsl
repz
repnz
mov
outsb
dec
sub
pop
fdivs
aad
or
movsl
aas
cmp
mov
adc
pop
jbe
leave
push
cmpsl
ljmp
ja
mov
divb
or
cmp
loope
insl
inc
fwait
push
lret
push
popa
inc
imul
jg
mov
in
shlb
add
fwait
sbb
fwait
jmp
mov
aad
xchg
shll
cmpsl
cmc
pop
shl
nop
or
mov
mov
and
jg
call
into
inc
mov
scas
fiadds
add
jge
jecxz
adc
xor
add
and
cmp
daa
insb
out
mov
sub
lret
fdiv
sub
cmp
loopne
pop
mov
dec
jl
lods
data16
ds
sbb
pop
inc
jo
mov
lret
lods
mov
add
dec
cmp
popf
add
dec
sub
stos
popf
jle
shr
sub
add
repnz
mov
inc
jno
pop
into
arpl
adc
addr16
iret
mov
daa
push
xchg
lods
bound
sub
mov
icebp
leave
sbb
pop
mov
add
sub
sub
add
sbb
cmp
mov
orb
ljmp
xor
lcall
sub
and
adc
jecxz
add
cld
xor
pop
int
lret
testb
repz
push
and
pop
jno
cmp
cltd
dec
jb
leave
pop
dec
and
inc
add
neg
mov
jns
rcl
cwtl
xchg
stc
adc
inc
inc
cmp
jecxz
rolb
jno
add
sbb
mov
fadds
push
mov
je
aam
loope
xor
add
out
iret
addl
add
int3
sbb
out
loopne
lods
push
jmp
cmp
add
scas
add
add
roll
xor
out
push
stos
ljmp
sbb
insl
out
movb
inc
push
xor
mov
fists
add
push
sbb
push
mov
xchg
inc
and
xchg
clc
dec
add
idivl
add
sub
cwtl
dec
out
push
inc
insl
mov
xlat
mov
arpl
pop
fidivrl
aaa
es
push
xchg
and
pushf
mov
aam
stos
popf
hlt
js
mov
xchg
pop
jmp
test
into
icebp
xor
add
movsb
mov
sub
sbb
ret
unpcklps
aad
pop
add
push
test
fildll
fsts
and
xchg
add
scas
add
add
ss
mov
mov
jno
xchg
clc
inc
jg
xor
andl
jbe
pop
cmp
loopne
pushf
push
cld
iret
enter
push
sub
inc
push
test
sbbb
sub
pop
jbe
sub
lods
cmp
scas
lea
in
scas
gs
shr
cmpl
lds
cmp
xchg
fwait
aad
push
aam
adc
outsl
cmp
loop
inc
roll
aaa
and
cs
push
les
insl
cmp
fstl
xlat
xor
neg
outsb
sub
in
sub
sbb
add
fwait
loope
sub
sarb
add
cltd
ret
add
scas
add
add
xchg
mov
addr16
jne
vpaddsb
icebp
rcrb
mov
push
dec
xor
fs
imul
aad
popf
das
push
push
addr16
jae
aam
mov
mov
lcall
jmp
pop
or
pop
pop
popa
pop
push
jl
push
dec
rcll
jl
dec
jns
shrl
and
inc
loop
flds
xchg
popa
mov
ret
movsl
inc
out
cwtl
adc
repz
clc
lods
adc
mov
stos
xchg
call
ficoms
lret
jae
sbb
cld
push
cmp
mov
cmp
and
out
jmp
neg
add
or
ja
dec
cmp
dec
dec
sbb
add
scas
add
add
sbb
sub
push
lea
jbe
xor
mov
sbb
jno
es
sbb
cmp
ret
lcall
cld
jecxz
lcall
icebp
lds
push
mov
aaa
push
mov
push
pop
les
mov
setns
ja
cmp
and
fiaddl
pop
mov
mov
inc
in
aam
imul
bound
xchg
and
xor
daa
sub
sarl
pop
add
fwait
xchg
das
movsl
shlb
inc
dec
mov
jns
cli
insb
scas
sub
out
divb
daa
add
arpl
jge
mov
daa
sarl
call
add
std
test
aaa
mov
adc
xchg
push
dec
push
gs
lcall
insb
imul
cmp
mov
add
aas
test
jb
push
sub
push
in
push
scas
push
cmpsb
mov
sbb
out
leave
das
data16
pop
insl
es
bound
add
cmp
fdivs
cmp
xor
int
stos
mov
add
test
cmpsl
xor
rcll
ror
aas
lods
mov
imul
xor
sub
jl
mov
shll
inc
lds
add
ss
xor
and
repnz
xchg
mov
add
enter
dec
jecxz
adc
or
xchg
and
xor
mov
iret
xchg
jle
adc
jp
mov
popf
rcr
rcll
scas
push
outsl
dec
aam
bound
arpl
clc
jge
out
add
mov
aas
lds
popa
cmp
es
lret
jl
xor
sarl
daa
loop
mov
aam
sbb
cwtl
call
pushf
sbb
fnstcw
and
call
fcmovne
or
stc
rcrl
push
xor
mov
lock
popl
sahf
in
arpl
push
push
aaa
out
mul
aaa
cmc
xchg
lcall
inc
movsb
add
scas
add
add
aas
adc
and
dec
fabs
mov
jle
mov
or
xchg
es
add
popa
cli
insl
je
shll
lock
test
mov
sub
xor
cmp
inc
mov
test
sti
stc
ss
ljmp
dec
pusha
scas
xchg
repnz
xorb
dec
push
mov
jo,pt
leave
inc
adc
inc
jg
imul
push
or
xor
in
aad
adc
mov
outsb
xchg
push
stc
or
pop
pop
jbe
cmp
rcrb
dec
pushf
dec
dec
and
ja
dec
dec
fildll
jecxz
testb
add
aad
out
fucomip
ss
cmp
add
movsb
add
scas
add
add
mov
pop
std
and
cli
pop
xor
pop
call
repz
pushf
cltd
imul
es
mov
nop
stc
in
adc
push
outsl
outsl
jmp
push
fxch
mov
adc
lcall
sub
inc
xchg
mov
mov
aaa
jp
mov
mov
fstl
addr16
popa
fcoms
loopne
jmp
call
loop
or
inc
pop
insl
pop
or
xchg
jno
in
sarl
hlt
repz
xorl
mov
lods
or
test
add
in
cld
fisubrl
sbb
popa
icebp
mov
add
add
bound
mov
and
sbb
test
xor
jecxz
inc
sub
outsl
and
sbbl
out
jp
inc
fsubl
dec
xchg
fs
mov
clc
xor
insl
xchg
in
dec
adc
inc
aaa
xchg
jbe
rcll
leave
andb
popa
jne
inc
inc
pushl
sub
bound
jle
aaa
and
loopne
pop
mov
popf
shl
cmp
xchg
orl
mov
mov
std
addr16
lods
pop
and
cmp
fstps
in
sub
pop
jmp
popa
nop
jmp
cmp
add
push
les
in
lahf
sti
ja
rcll
inc
dec
cmpsb
add
scas
add
add
jae
pop
sub
push
cmp
jp
shl
stc
cs
fdiv
cmp
fdivr
or
aaa
les
and
cwtl
mov
jl
loop
inc
cmp
xchg
mov
outsl
pusha
cmp
test
pusha
inc
lock
mov
rorb
pop
inc
out
inc
mov
xor
daa
jb
call
jecxz
dec
stc
or
sahf
cmp
xchg
out
sbb
lock
mov
outsb
xchg
jbe
imul
arpl
out
xor
stc
xchg
mov
stos
shll
stos
scas
sub
sahf
movb
or
add
jle
call
cli
lcall
add
scas
add
add
aad
sbb
add
addl
and
idivb
ss
sbb
and
lods
test
icebp
mov
push
daa
push
or
push
sahf
adc
outsb
pop
loopne
js
arpl
sbb
cmpsl
cld
pop
bound
int3
jl
sub
push
mov
cmp
mov
sahf
or
xchg
cmp
mov
sbb
pop
inc
sti
pop
sbb
stc
mov
mov
int
lock
dec
jb
adc
push
out
scas
test
rclb
fwait
loopne
dec
sbb
mov
add
fincstp
shl
frstor
pop
dec
cmp
push
stos
cmpsl
add
scas
add
add
shll
loope
adc
pop
lret
mov
mov
stc
lods
add
sbb
xor
add
mov
int3
push
iret
xlat
jb
mov
mov
add
clc
fsubrl
inc
lcall
or
loopne
or
sbb
bound
int
leave
loope
inc
movsl
sub
mov
mov
cmp
movsl
fs
cmp
les
dec
cmp
inc
ja
cmp
adc
dec
incl
xor
loope
decb
mov
scas
mov
jae
fimuls
fs
test
or
xchg
aad
jbe
jecxz
push
add
outsl
mov
jmp
push
fcmovu
in
dec
fcompl
pop
test
add
mov
and
inc
fimull
sti
lds
adc
cli
cmp
int3
in
outsb
cmpsl
call
and
fdivl
jl
inc
sub
fwait
sbb
or
lock
and
inc
pusha
lods
pop
repz
ficoms
add
dec
loop
cmp
mov
aaa
enter
mov
dec
jns
xor
push
sbb
pop
imul
pop
mov
jecxz
dec
jae
push
xchg
jns
dec
clc
mov
mov
pop
mov
jo
jmp
xchg
aad
lcall
adc
popa
and
add
stc
sbb
inc
jecxz
mov
enter
pop
test
add
jb
js
xor
pop
cmc
jl
push
rorb
ja
lcall
jmp
lahf
xor
out
or
push
and
xor
push
icebp
sbb
mov
cltd
dec
inc
out
int3
or
mov
out
or
or
adc
dec
cmp
mov
out
sbb
xchg
add
aad
push
aas
iret
mov
jae
jg
punpcklwd
push
pop
push
test
jl
ljmp
mov
popf
cli
cmp
dec
jmp
xchg
nop
leave
add
lcall
inc
push
mov
xor
add
lahf
popf
add
mov
mov
icebp
and
aad
test
add
pop
jg
fdivrl
in
loop
fisubs
and
test
mov
enter
jmp
repnz
add
repnz
xchg
rolb
or
jb
inc
loop
pop
or
jae
fidivl
icebp
cmp
and
imul
notb
xor
dec
xchg
mov
xor
inc
ror
mov
mov
cmp
cli
inc
lock
mov
xchg
xor
cmpsb
ja
popa
mov
mov
insl
inc
ds
xor
mov
outsb
mov
loop
and
jo
push
insl
dec
mov
dec
outsl
pop
add
adc
repz
das
cli
fists
dec
es
cld
sbb
cltd
arpl
add
or
lock
ss
pop
mov
mov
popa
movsl
lcall
jns
sub
stc
js
push
cmp
jp
mov
aam
and
push
or
mov
cvttps2pi
pandn
lahf
jecxz
sbb
inc
xchg
xchg
in
loope
aad
mov
int3
insb
clc
loop
insl
inc
aad
inc
out
mov
int
shll
add
cmpsb
mov
dec
xor
add
sbb
mov
dec
loopne
and
inc
xchg
pop
mov
jo
sbb
and
mov
push
cwtl
dec
add
cltd
js
in
add
mov
push
adc
cwtl
out
push
mov
adc
add
and
adc
sub
mov
mov
clc
inc
sbb
test
push
std
ss
inc
movl
xor
cmc
pop
push
or
mov
cli
xchg
leave
cmc
adc
lea
cmp
cmp
push
lcall
lock
sbb
push
stos
adc
sarl
outsl
int3
jno
pop
rcl
dec
jmp
mov
stos
aad
sub
xchg
notb
adcb
mov
mov
data16
add
loopne
pop
shrb
jo
dec
iret
mov
or
dec
push
addb
cmp
pushf
mov
add
add
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
