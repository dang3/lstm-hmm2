add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
mov
jle
jg
jle
cmp
fld
ja
or
pop
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
jle
bound
jns
xchg
mov
mov
ret
jno
test
dec
fcomps
sub
mov
mov
repz
je
cmp
xchg
push
ljmp
movsl
clc
jno
mov
or
push
stc
arpl
mov
push
fdivs
jl
aas
add
cld
cmp
xor
mov
cmp
ret
xor
popf
filds
lods
icebp
cld
stos
add
push
daa
in
loop
cli
inc
aad
xchg
insb
rcr
add
stos
mov
imul
and
dec
test
inc
sub
jecxz
or
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
addr16
jg
jle
jg
jle
es
mov
mov
je
add
fsubl
std
sub
jbe
idivl
jb
sbb
pop
mov
xchg
out
je
pop
sahf
pop
cmp
sub
loop
test
and
ficoms
add
fstpl
pushf
dec
xchg
push
dec
movb
repz
pusha
enter
jl
push
addr16
mov
test
loop
stc
xchg
ss
sbb
loopne
dec
and
jo
push
loopne
dec
pop
add
mov
popf
stos
push
adc
inc
jns
inc
mov
fucomip
xor
add
jmp
lret
sahf
mov
test
movsl
push
push
xchg
pop
pusha
in
in
data16
jecxz
mov
imul
mov
push
push
jl
lds
repz
xlat
push
sub
inc
bound
adcl
jge
and
jl
add
mov
cli
cs
inc
adc
adcb
insl
jle
mov
xchg
pop
cli
xor
loop
sarl
call
inc
ja
rorb
aam
cmpb
and
cs
fidivrl
jo
push
mov
outsb
sub
cli
test
div
add
push
inc
aas
arpl
je,pn
adc
js
rcrb
mov
push
cli
test
call
inc
add
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
dec
es
cmpsb
jl
jle
jg
jle
cs
fs
pushl
pop
add
add
bound
dec
inc
cwtl
mov
sysret
lods
mulb
sbb
jg
das
jbe
fists
dec
dec
insl
dec
bound
sbbl
cld
sti
lcall
inc
pusha
cmc
sahf
sub
pop
or
aas
push
cmc
fnstcw
push
test
xor
sub
or
push
dec
adc
lea
int3
and
mov
outsl
js
shlb
pusha
ret
cs
xchg
jne
xchg
pop
jb
roll
xchg
in
fs
xor
dec
lea
sub
test
test
repnz
lods
sub
out
cmpb
pop
jno
lock
sbb
repz
sbb
mov
sub
leave
nop
xchg
lods
or
xchg
fisubrl
cmpsb
mov
gs
push
and
stc
iret
fpatan
push
jno
stos
loope
sbb
jl
sbb
xchg
dec
push
ret
push
xor
loope
ds
daa
loop
test
popl
add
push
sqrtps
sbb
aas
jns
cmc
mov
lahf
test
jnp
sbb
mov
inc
test
pop
lock
fs
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
sub
add
jb
jle
jg
jle
mov
pop
jge
popa
out
xorl
jns
enter
addr16
and
mov
repnz
and
jne
in
mov
scas
inc
iret
and
jp
mov
add
popf
aas
jle
xor
inc
mov
icebp
enter
int3
movsl
push
insl
add
pop
fdivrs
in
push
dec
adcb
and
fwait
lcall
add
dec
lret
pop
xor
adc
mov
test
jae
ds
fiadds
mov
and
jns
pop
lock
dec
adc
out
hlt
mov
and
push
insl
sbb
cmp
push
andb
jg
push
dec
push
hlt
daa
movsl
lods
outsb
inc
psadbw
sub
and
stos
mov
loop
loope
in
cmpsb
rcrl
lret
icebp
cld
xor
mov
xor
pop
mov
push
dec
les
fucomp
movsl
mov
insl
or
stos
mov
push
add
or
xlat
mov
jl
test
adc
ret
es
pop
lahf
sub
sub
lcall
mov
out
jle
cmp
movsl
and
ljmp
jb
out
cmpsb
xor
sub
cmp
xor
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
ficompl
inc
jnp
lret
and
insb
nop
and
cs
dec
xchg
sub
pop
sahf
dec
jno
pop
lods
adc
cmpsb
ja
pop
filds
mov
xor
stos
and
jnp
aam
jle
pop
fwait
mov
push
leave
adcb
sub
push
add
xchg
push
stos
addl
inc
cmpl
pop
and
cmpsb
lds
ret
adc
pop
lods
stc
sub
imul
sub
arpl
and
cld
test
stos
call
into
test
push
xchg
insl
cmpsl
mov
lock
push
lret
popl
jbe
xlat
insb
fisttpl
sbb
clc
notb
movsl
add
jp
adc
movsb
pop
pop
mov
popl
pop
lcall
or
push
cmp
mov
idiv
cs
mov
lds
andl
mov
test
jb
aad
add
int
sub
stc
lahf
int3
adcl
pop
sub
aad
sbb
push
in
add
xchg
mov
daa
and
xor
mov
push
decl
cmp
fsubr
mov
arpl
and
jle
out
mov
jecxz
notl
add
adc
add
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
inc
jmp
dec
jo
jle
jg
jle
mov
inc
inc
repz
lods
pusha
xchg
push
sub
and
imul
dec
push
aad
cli
lock
xchg
and
loope
push
mov
mov
mov
push
inc
xchg
mov
repnz
adc
call
pop
enter
cmpl
lds
repnz
pop
mov
inc
hlt
mov
ss
inc
repz
scas
sbb
pop
jo
add
sub
xor
pop
leave
cli
arpl
inc
in
sarl
mull
repz
subb
or
addr16
rol
lods
xchg
repnz
rcl
outsb
leave
daa
rcrb
mov
add
xorl
sub
push
ds
sbb
mov
jae
add
push
rcrl
push
cmp
inc
or
lock
or
push
mov
rol
ss
push
push
sub
lcall
dec
test
inc
test
push
sbb
adc
out
push
mov
push
leave
jg
lock
mov
sub
loop
push
out
stc
push
loopne
adc
fwait
clc
dec
mov
cmp
add
xchg
jp
jne
repz
inc
mov
jne
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
sub
cltd
mov
jbe
jle
jg
jle
fcomp
mov
js
push
add
std
adc
push
repnz
pushf
dec
jle
push
cmpsb
pop
jecxz
rolb
cli
sub
stos
push
jmp
mov
stos
clc
fistl
pop
mov
mov
aas
inc
fwait
ds
jp
xchg
pop
mov
xchg
mov
mov
je
cmpsl
sub
insl
lods
leave
and
test
mov
mov
xor
in
decb
out
rcrl
push
or
mulb
push
mov
decb
test
stc
std
cmp
fmuls
fists
lcall
imul
mov
sbb
shl
divb
lods
int
out
cmp
repnz
stc
push
sbb
adc
xchg
cmp
or
fwait
pop
xchg
movsb
lods
xor
xchg
dec
orb
scas
leave
push
fs
or
mov
leave
push
ficoml
and
add
ret
mov
and
insb
push
sub
mov
out
nop
arpl
cmp
push
xor
mov
jmp
fldl
enter
push
dec
inc
sub
mov
cmpl
xchg
lods
xchg
out
fdivs
push
xchg
or
add
add
add
inc
in
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
movsl
shl
jle
fidivrl
jle
mov
js
jns
xor
repz
test
mov
cmp
lods
fisttps
xor
adc
mov
jae
jg
dec
jb
arpl
xchg
xor
nop
bound
ja
mov
jge
shll
inc
insb
out
fs
mov
loope
push
cwtl
mov
test
pushl
add
fwait
push
xor
dec
ds
mov
sbbl
cltd
fs
inc
jae
arpl
jo
pop
pop
mov
addr16
and
push
dec
sbb
and
jb
sahf
test
pop
cmp
test
aad
fnstcw
fistpll
loopne
and
add
cld
lds
inc
imul
fistps
call
sub
cltd
xchg
jno
inc
sub
sbb
scas
nop
lahf
insl
xchg
nop
aad
mov
into
cli
push
cld
imul
mov
popw
stos
repz
data16
ds
hlt
fwait
pop
cmp
xlat
fmulp
sahf
loop
xlat
sti
das
jmp
mov
out
lret
jns
lahf
mov
sbb
movsl
or
mov
and
pop
sub
pop
movsb
in
jo
out
jg
pop
leave
mov
fcmovb
iret
lret
sbb
inc
decl
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
push
adc
mov
je
jle
jg
jle
int3
dec
add
xchg
and
xchg
sbb
mov
mov
push
pop
and
push
jg
and
stos
andps
dec
inc
adc
mov
mov
lret
xor
mov
sti
jbe
test
repnz
or
popf
arpl
xlat
or
pop
int3
clc
xor
jae
xchg
movsl
xchg
lock
dec
stos
push
jge
and
into
or
xchg
mov
adc
or
pop
cli
into
xchg
dec
fs
in
mov
addl
sbb
testb
shll
mov
rclb
je
inc
jecxz
dec
inc
imul
cwtl
dec
lods
xchg
ljmp
sbb
imul
xor
gs
mov
jb
mov
shlb
pusha
enter
stc
adc
popl
aam
iret
mov
and
push
fisttpl
add
fwait
test
in
lret
sahf
clc
mov
lahf
jo
push
adc
xchg
push
cwtl
leave
shlb
xchg
test
lock
sub
imul
sub
and
jne
dec
jae
and
pop
pop
dec
in
mov
cmpsb
inc
push
sub
mov
xchg
add
sub
mov
jne
sbb
fsubrs
sti
aad
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
jg
orl
and
rol
cmp
jns
pop
sub
jb
add
test
insl
aam
lds
or
nop
sub
out
inc
mov
sbb
xor
adc
mov
hlt
jae
jb
mov
ret
dec
jnp
addr16
popf
xchg
inc
adc
mov
mov
dec
inc
mov
dec
sbb
mov
xor
lods
jl
and
imull
xchg
cli
into
movsb
outsb
test
mov
pop
cli
iret
cmpsl
push
adc
clc
sbb
fldcw
pop
mov
jnp
mov
sub
outsl
add
push
push
clc
mov
xor
or
testb
test
mov
push
aad
stos
fmul
adc
popa
or
jecxz
mov
xchg
fisubl
xchg
fwait
mov
sti
or
fsts
stos
mov
sub
mov
aam
mov
out
sub
fsubr
bnd
inc
mov
mov
and
inc
mov
sub
das
mov
xor
rol
stos
dec
mov
push
xchg
adc
cli
sub
iret
leave
imul
xor
lret
pop
hlt
daa
push
adc
mov
fisubl
imul
mov
push
popf
shrb
sti
rorl
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
xchg
fwait
in
xchg
jle
and
jle
jmp
in
icebp
pop
jl
jo
add
imul
rcll
in
cmp
and
xchg
stos
outsl
aad
shlb
xchg
pop
jae
mov
xchg
jg
push
push
push
push
jb
pop
xchg
js
push
ljmp
adc
mov
sub
fs
inc
movsl
mov
imul
out
mov
enter
push
sub
outsl
inc
scas
mov
pop
cmp
cmp
inc
cmp
scas
sub
jmp
arpl
jns
mov
xor
and
push
xor
xchg
das
jge
xchg
faddp
inc
inc
pop
js
pop
sub
stc
into
loope
sbb
int
adc
movsb
sbb
mov
dec
pushf
dec
loop
leave
nop
aad
and
mov
pop
loopne
movsl
dec
sbb
mov
or
xchg
sub
mov
mulb
inc
adc
mov
adc
dec
lds
push
mov
rcrb
adc
arpl
rorb
pop
fxch
add
hlt
lds
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
mov
or
and
jle
mov
data16
pop
incb
add
mov
adc
in
adc
push
out
mov
add
inc
mov
sbb
adc
pop
lea
pop
inc
xchg
shrw
cmpsb
pop
aaa
mov
mov
movsl
inc
push
inc
lea
adc
cmc
sub
stos
imul
ret
cs
movsl
dec
out
jg
lahf
ret
dec
sbb
cli
mov
iret
inc
movsb
cmpsb
adc
push
subb
xchg
dec
outsb
mov
pushf
imul
mov
inc
cli
ret
xlat
sub
mov
mov
mov
adc
movsl
push
lods
lret
mov
sbb
xor
dec
jmp
xor
je
enter
inc
mov
jno
dec
mov
lods
cmp
pop
mov
stos
xlat
jbe
pushf
xchg
stos
pop
sub
mov
fcoml
xchg
xchg
lret
jmp
cmpl
ret
mov
fists
jmp
outsb
repz
mov
dec
xor
and
dec
call
jmp
cmp
or
jmp
or
mov
or
inc
xchg
jl
jle
and
jle
push
ret
mov
xor
jae
xchg
sbb
add
loope
mov
cmp
sbb
testb
fbld
enter
inc
test
lcall
mov
popf
fiadds
lds
push
imul
sbb
insl
xor
mov
mov
imul
cmp
out
in
xchg
out
repnz
sbb
sub
mov
rep
adc
xchg
sbb
pop
sti
sub
aaa
pop
sbb
jge
popf
fwait
pop
jo
leave
sub
push
push
test
sub
insb
fwait
xchg
jge
sub
divl
iret
faddl
arpl
enter
add
jl
sub
enter
add
fidivrl
ss
mov
adc
dec
bnd
mov
cmp
test
data16
add
add
mov
jecxz
pop
sub
jmp
nop
insl
cld
imul
cs
daa
add
lds
inc
or
sbb
and
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
mov
jle
and
jle
inc
jnp
pushf
push
mov
sub
mov
mov
sahf
aas
push
arpl
push
xchg
sahf
jp
es
ljmp
cmp
pop
xchg
scas
ss
push
shrl
inc
movb
ljmp
push
addr16
and
inc
jge
push
aam
pop
js
inc
fistpl
pop
andl
cmp
pop
pop
jne
push
shlb
loope
sbb
icebp
int3
dec
mov
and
cltd
fnstsw
cmp
push
sti
adc
enter
mov
fldenv
insb
aad
jnp
xchg
inc
xchg
pop
orb
inc
call
adc
les
out
push
adc
movsb
add
mov
test
sub
call
aad
cmc
dec
sub
push
rorl
stos
repz
fistpll
inc
jbe
les
and
les
imul
sub
pop
and
loop
sub
inc
ret
cmpsb
mov
mull
inc
and
mov
sahf
sbb
scas
push
movsl
insl
jmp
dec
loopne
rolb
jno
clc
cs
push
stos
test
push
pop
mov
movsb
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
mov
faddl
rcrb
cli
leave
fnsave
clc
ja
xchg
pop
shlb
je
cltd
jb
aas
pushf
sbb
subb
pop
dec
push
pop
leave
shlb
int3
pop
dec
push
stos
es
orl
cmpsb
xchg
cli
fldl
xor
andb
sbb
xor
je
sbb
jbe
push
js
in
pop
sub
jnp
mov
push
adc
dec
sarl
cld
jae
cmp
lods
adc
xor
pop
push
popl
mov
inc
movsl
push
xchg
cmp
and
push
and
jle
xor
outsl
clc
mov
and
hlt
insb
lock
and
lret
pmuludq
pushl
imul
xor
leave
xor
push
mov
pop
in
lret
cmpsl
mov
stos
jo
subb
pop
sbb
lret
pop
xchg
jge
or
aaa
jb
ljmp
or
inc
fcos
pop
andb
cwtl
or
inc
das
xor
jb
sub
faddp
ljmp
cmc
cmp
mov
imul
jb
mull
clc
add
add
imul
mov
jmp
jbe
xchg
call
adc
sub
or
jle
or
dec
bound
test
sbb
and
mov
mov
nop
xchg
pop
sbb
outsl
movsb
lea
jecxz
rolb
jle
adc
adc
xchg
arpl
dec
xor
movsb
mov
mov
xchg
fcmovne
sub
cmp
jge
dec
out
xchg
sub
push
das
cmp
leave
jecxz
mov
adc
xlat
xor
push
aam
mov
std
lret
inc
fstpl
mov
jecxz
ljmp
das
sub
fdivrp
mov
mov
mov
call
pop
std
mov
lock
frstor
push
inc
cli
inc
test
ja
cmp
or
in
scas
mov
sar
pop
lods
cmp
aas
push
dec
or
ds
lea
js
icebp
inc
idivl
nop
rclb
int3
call
inc
jmpw
jle
cmp
or
sub
sbb
xchg
mov
fwait
xlat
pop
out
xor
test
cmpsb
xor
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
sbb
inc
add
and
jle
mov
mov
mov
loop
test
mov
adc
inc
xchg
aaa
and
mov
ds
neg
fldt
jle
mov
popa
push
add
mov
repnz
add
in
inc
into
loope
xor
repnz
js
push
push
pushl
pop
push
loop
out
push
movsl
call
sub
dec
loop,pn
mov
jae
aas
popl
jg
adc
jne
arpl
mov
shrl
dec
mov
push
xor
add
inc
jnp
sub
lcall
dec
xlat
ret
jno
adc
ss
cmp
loope
jbe
ljmp
test
pop
jae
mov
rorl
xor
in
scas
cmp
push
jecxz
in
rcrl
cmp
xlat
leave
inc
imul
or
jg
shll
imul
popf
loope
and
addr16
push
push
add
mov
outsl
push
cli
cmp
pop
mov
adc
loop
jb
lds
dec
pop
jno
mov
fsts
mov
sbb
mov
popf
test
sbb
add
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
pop
dec
inc
jne
jle
and
jle
rep
jmp
lds
rolb
inc
jl
adc
adcl
hlt
push
mov
sbb
pop
mov
or
je
dec
jne
lods
fstl
lods
mov
test
cmpl
adc
das
into
idivl
push
xchg
and
push
push
add
ret
mov
jbe
push
push
dec
orb
fwait
ret
out
dec
lahf
cwtl
push
and
mov
into
loope
ja
jbe
loopne
mov
aas
dec
push
mov
mov
pop
mov
cmp
popa
popa
xchg
out
testb
insl
ljmp
or
les
adc
dec
push
dec
in
arpl
fildll
pushf
sub
push
inc
sbb
jbe
cmp
xchg
and
leave
es
add
aad
popf
or
jmp
fsubrp
add
movsb
mov
pop
jge
sbb
and
les
call
stos
sbb
icebp
mov
fnstenv
shr
dec
add
add
sti
mov
stc
repnz
les
add
and
jle
inc
dec
test
push
imull
jl
dec
push
xchg
pushf
mov
shll
and
mov
jg
xchg
jmp
xchg
or
ret
add
cmp
data16
add
or
sub
jae
sub
out
xor
andl
ret
push
sahf
sub
mov
aam
movsb
dec
cmp
sub
add
and
lods
cwtl
jne
in
and
xchg
xchg
dec
mov
xchg
incl
data16
pop
xchg
sbb
outsl
xchg
clc
sub
into
push
inc
xchg
gs
fimull
movsl
xchg
int
in
stc
stos
cmpsl
stos
lods
and
pop
ja
std
mov
out
iret
shlb
stc
test
loope
sbb
insb
cmpsb
orb
or
loope
pusha
fadd
mov
sahf
dec
add
sets
loop
push
fstl
test
sbbl
mov
nop
cmp
insl
fisubrs
scas
cmp
xlat
decl
enter
stc
mov
cmc
push
adc
jne
or
movsl
jg
or
call
cmp
xchg
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
int3
clc
cmpsl
outsl
int
inc
sahf
add
lret
pop
mov
xchg
aas
mov
mov
mov
jp
pop
ret
push
dec
aaa
and
dec
push
pop
inc
loopne
lods
fwait
xchg
sub
cmp
xor
mov
xchg
aas
jmp
inc
mov
lret
or
sbb
cmp
shlb
mov
aam
lods
xchg
jecxz
push
ljmp
mov
mov
mov
mov
hlt
ret
dec
sbb
popa
xor
inc
or
lds
jmp
and
imul
inc
pushf
stos
pop
jo
aam
xor
or
mulb
mov
lea
lds
xor
mov
push
and
aaa
repz
and
nop
jbe
js
sbb
test
imul
sbb
out
stos
inc
jmp
mov
push
test
cmpsb
aaa
sbb
cwtl
stos
push
push
adc
stc
pop
loop
or
dec
lcall
jl
in
sti
repz
inc
mov
xchg
out
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
pop
jle
and
jle
xchg
ficoms
mov
cmp
test
and
pop
push
jle
fisubrs
andb
std
add
movsl
mov
xchg
pop
shlb
cmc
dec
jae
cltd
xchg
enter
test
fdivrl
loop
dec
out
xchg
inc
test
cmpsl
test
nop
into
cmpsl
icebp
mov
dec
ja
dec
jns
xor
ja
mov
mov
xor
pop
lahf
mov
mov
outsb
test
adc
iret
gs
xlat
or
loopne
lock
xor
into
scas
pop
arpl
in
ljmp
sub
fnstsw
mov
mov
cltd
pop
inc
and
xor
mov
sbb
lret
mov
lea
adc
mov
andl
push
ret
mov
and
cmp
lret
out
addb
sarb
push
cli
in
sbb
test
stos
ds
cmc
pop
repz
cltd
xorb
popa
mov
or
jmp
jl
mov
inc
lahf
mov
pushf
inc
or
add
xor
jmp
jns
mov
dec
js
movsl
mov
lods
jno
inc
aad
add
jle
jg
jle
in
cmp
mov
add
pop
cli
subl
and
mov
pop
adc
stos
jno
mov
and
cld
test
cmp
cmpsl
xor
push
shll
sbb
popf
nop
outsl
or
xchg
repz
and
cmp
xor
es
fldenv
fstl
mov
mov
adcl
push
adc
cs
lock
test
fidivrs
and
or
std
cmp
ss
inc
sbb
mov
clc
pop
mov
or
fwait
ret
adc
sbb
sub
stos
icebp
sarl
add
insl
jecxz
adc
inc
push
inc
xor
pop
subl
xor
into
inc
mov
out
or
cmpb
mov
iret
fldcw
sahf
mov
or
cmpsb
aas
in
aaa
or
ja
pop
mov
scas
add
adc
and
or
out
push
xchg
mov
push
mov
cs
fs
enter
mov
xchg
cmp
sbb
xlat
ror
imul
lock
mov
repz
add
or
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
cmpsb
cwtl
jns
add
jle
and
jle
fwait
push
or
fs
add
mov
jge
call
cs
dec
or
iret
jg
jne
dec
shll
das
or
jmp
popf
ret
ret
int3
popf
ucomiss
test
repnz
out
or
sbb
sbb
push
inc
mull
jmp
jge
popa
lods
mov
int
lcall
add
pusha
in
xchg
cmp
clc
mov
in
mov
popf
mov
in
sbb
inc
ljmp
cmp
mov
lahf
sbb
mov
mov
imul
jne
mov
pop
cmp
ja
jbe
or
stos
test
shlb
popa
mov
sub
push
pusha
shlb
or
je
loope
pop
aam
add
mov
cmp
movsl
sub
lock
iret
push
inc
andl
xchg
jmp
jle
in
ret
lock
pop
test
add
cli
icebp
xchg
imul
repnz
fstpl
ss
push
rcl
test
dec
pop
loope
inc
imull
dec
sar
sub
xchg
ss
pop
stos
mov
xlat
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
mov
inc
aaa
sbb
and
jle
jae
mov
sbb
add
pop
arpl
ret
sub
pusha
adc
jl
mov
addr16
jg
stos
nop
sub
cli
mov
or
test
mov
adc
xchg
daa
jno
jmp
or
inc
addr16
add
ret
fwait
ret
daa
mov
dec
cs
adc
enter
arpl
push
or
xchg
xchg
stos
xchg
push
jns
lret
inc
sbb
fmull
xchg
in
mov
sub
popf
popa
sub
sarl
enter
fwait
es
out
daa
in
or
xchg
jp
scas
sbb
mov
inc
and
ljmp
cli
sbb
dec
gs
cmpsl
mov
mov
test
xor
mov
pop
or
and
loopne
push
stc
jl
lahf
std
pop
repz
dec
inc
fildll
xor
les
mov
adc
mov
rclb
into
icebp
xchg
push
push
call
jo
mov
jmp
sub
mov
add
movl
xchg
adc
jae
rcr
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
mov
jle
jg
jle
push
cmp
sub
sbb
xchg
aas
sahf
test
add
xor
ficomps
insb
fldlg2
ret
aaa
xor
adc
and
iret
leave
or
lea
jns
xchg
pushf
or
cmpsl
loopne
sbb
add
in
mov
ss
add
js
add
cmp
adc
imul
dec
push
sub
cmp
jmp
lods
cmp
add
dec
sbb
mov
push
sbb
mov
leave
push
in
dec
mov
sahf
rcl
jl
sbb
sahf
shufps
jp
fsubl
ja
adc
mov
mov
mov
jno
push
testb
leave
shrl
mov
xor
repz
sub
cmpsl
mov
aad
stos
pop
xlat
push
push
push
pop
and
nop
mov
je
inc
adc
mov
dec
jbe
push
mov
cmp
jge
jle
out
sti
aaa
push
sub
xor
or
push
mov
jmp
jb
test
adc
push
out
sbb
jmp
dec
pop
jae
mov
outsb
pop
daa
hlt
xchg
rcr
lret
rcll
or
cmovge
mov
or
pop
repz
out
les
or
add
dec
hlt
sarb
insl
std
push
adc
aaa
imulb
cmp
and
push
mov
push
cmp
gs
jb
in
scas
stos
fisttpll
xchg
or
jbe
xchg
aam
fldenv
xchg
test
jo
jo
std
leave
rol
jns
aad
cmp
push
push
sub
fisttpl
ss
mov
js
xchg
dec
arpl
push
jne
or
mov
shlb
jnp
movsb
push
in
shll
iret
pop
repnz
pop
mov
mov
push
jo
cmpsb
and
push
lea
jmp
mov
lahf
xlat
pop
mov
rol
fwait
jmp
ds
lahf
iret
mov
jb
xchg
shlb
mov
rcll
rcl
arpl
inc
jno
leave
aam
lea
xlat
sub
jae
mov
add
imull
jb
xor
aaa
int
fsubr
jge
sub
aaa
pushf
add
mov
xor
jb
outsb
cltd
pop
es
pop
pop
jb
add
adc
dec
pop
mov
out
movsl
and
xor
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
aad
repz
jle
jmp
es
push
pop
into
sbb
dec
clc
jmp
sbb
je
gs
mov
mov
jmp
jl
fisubl
in
pop
scas
aaa
hlt
popa
cld
daa
mov
out
movsb
pop
mov
hlt
inc
es
mov
cltd
push
leave
inc
mov
mov
stos
test
jecxz
push
sub
jl
dec
clc
and
fbstp
les
lods
adc
jl
int3
push
inc
mov
arpl
pusha
adc
sahf
jo
or
cltd
sbb
pushl
xchg
not
xchg
ss
add
mov
mov
insl
or
xchg
repnz
xchg
pop
xchg
jecxz
pop
aaa
fwait
mov
scas
out
add
adc
stos
dec
cmp
add
sub
seto
jg
sub
scas
dec
and
and
pop
movups
loop
daa
sbb
jbe
sub
je
push
bnd
movsl
mov
packsswb
inc
movsb
xchg
xchg
cmp
inc
clc
adcb
in
cmp
test
mov
lds
imul
repnz
ljmp
and
push
pop
cmpsl
movsb
mov
xor
aaa
sbb
outsl
in
pop
bnd
cmp
or
push
ds
push
mov
das
xchg
ds
fcomp
lret
and
ret
or
mov
das
fildl
cmp
add
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
repz
out
cmp
outsb
sbb
xchg
icebp
and
mov
dec
xchg
mov
mov
or
int3
test
pop
lcall
xchg
mov
or
bound
pop
cmpsl
fnstsw
sub
ds
ficoml
inc
adc
pop
inc
sbb
cmp
fstps
sar
cltd
fldcw
jecxz
inc
das
mov
add
mov
out
sti
idivl
lcall
jle
in
insb
mov
push
xlat
inc
lcall
out
int3
jge
fwait
cld
mov
scas
pop
inc
inc
or
popf
fldcw
je
inc
loope
pop
xor
adc
stc
shlb
dec
xorl
mov
push
enter
xchg
add
cmp
xor
push
aaa
add
test
xor
add
and
xchg
push
add
and
lds
js
mov
rcrb
movsb
push
fildl
jmp
icebp
sbb
mov
cmpsb
fwait
dec
lods
jmp
xchg
mov
loope
cmp
test
and
outsl
mov
and
sub
hlt
and
out
pop
pop
in
gs
mov
xchg
mov
xchg
fstl
mov
sub
sahf
pop
sti
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
bound
adc
jmp
sub
sbbl
adc
jecxz
dec
sbb
int
sbb
mov
loop
or
into
lahf
cmp
mov
adc
fistl
popa
cmp
arpl
test
xor
jge
adc
js
adc
adcl
mov
jno
cmpsb
xchg
xor
fcomps
pop
clc
xchg
cld
jge
les
sbb
mov
flds
cld
lods
outsl
in
mov
sti
inc
cmp
addr16
or
sti
lea
or
sbb
lods
jbe
inc
add
lods
daa
cmp
sbbb
adc
push
ja
jmp
or
inc
pop
push
push
cld
mov
nop
mov
mov
cld
xor
sub
ja
fsubrs
xor
mov
sbb
test
push
jle
inc
push
in
rcr
orl
mov
sahf
in
xchg
lds
and
outsb
lods
add
popf
ja
jno
aaa
arpl
sbb
push
test
movsb
jmp
fwait
out
ds
ret
rcl
xor
mov
test
mov
push
dec
lahf
mov
adc
fmull
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
cmpsb
jmp
jg
jle
and
clc
push
mov
pop
adc
fwait
mov
nop
push
ret
push
lock
sbb
in
mov
jb
icebp
inc
jo
repnz
xor
fcomp
faddl
cmp
iret
mov
sub
test
dec
jecxz
sbb
pop
call
dec
dec
pop
pop
or
sahf
and
icebp
and
outsl
and
imul
fwait
add
jg
xchg
imul
sbb
pop
icebp
pop
lea
xorl
jl
into
lcall
sahf
mov
es
mov
pop
cmc
rcll
mov
mov
jg
test
adc
mov
aad
xchg
rorb
dec
mov
mov
mov
push
repnz
inc
loopne
outsb
jo
mov
decb
cmp
cs
add
adc
mov
outsl
aas
ds
add
xchg
pop
test
mov
arpl
dec
nop
leave
jl
push
loop
cltd
aas
cltd
pop
sbb
add
daa
inc
inc
in
addb
adc
nop
jmp
dec
arpl
mov
pop
mov
in
add
add
in
mov
xor
fldt
ss
and
mov
xchg
mov
repz
fwait
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
and
dec
adc
fdivrl
jle
js
or
xchg
jecxz
mov
data16
pop
jb
outsb
mov
adc
rorl
xor
aad
pop
aad
adc
ljmp
in
jmp
test
and
mov
add
ds
fidivrl
dec
lds
jmp
cltd
orl
add
ljmp
pop
sbb
or
daa
ja
push
jmp
mov
cmp
mov
int3
xchg
cld
arpl
call
sbb
dec
inc
push
lret
into
rorl
decl
outsl
decl
lds
outsb
jae
and
sub
lret
mov
sub
and
pop
cmpsb
in
cmp
push
mov
sub
xchg
jo
push
int
mov
in
add
xchg
dec
pop
xchg
cld
cld
or
push
nop
scas
mov
xchg
fmuls
mov
aaa
fwait
call
cwtl
test
pop
push
xchg
push
sti
in
movl
shr
mov
pushw
dec
sub
pop
xchg
aam
xlat
dec
inc
shrl
into
dec
adc
push
and
loopne
xor
add
mov
mov
jmp
and
pop
xchg
adc
arpl
mov
push
jle
fdivrl
jle
daa
xor
push
and
hlt
loop
adc
or
int3
movsl
push
fs
push
lea
jbe
sarl
fcompl
mov
cmp
cmp
scas
in
mov
addr16
push
pop
sbb
test
mov
xchg
xchg
xlat
ret
adc
add
inc
ret
out
jnp
aam
inc
pusha
vpaddsw
inc
xchg
or
jmp
sbb
pushw
shl
mov
pushl
call
mov
scas
es
loope
scas
inc
or
mov
sub
dec
push
movb
scas
mov
pop
fwait
xor
cmc
bound
xlat
enter
mov
cwtl
scas
adc
sub
rcl
jle
out
xchg
add
mov
xor
cs
push
adc
mov
and
push
insl
ret
mov
cmp
adc
jae
js
mov
fldl
leave
mov
inc
aam
sub
xchg
push
imul
sahf
call
xchg
and
arpl
xorl
fisttpl
shr
xchg
outsl
pop
dec
inc
add
std
lcall
outsl
iret
in
or
pop
and
mov
aam
add
xor
add
mov
jmp
mov
jmp
push
gs
movsb
es
pop
jle
fdivrl
jle
adc
mov
loopne
pusha
push
pop
cmp
xchg
loop
dec
inc
mov
aaa
mov
popa
stos
rorb
outsl
push
mov
push
out
sub
inc
out
leave
cmpsl
inc
and
ja
rorb
jmp
dec
pop
xlat
adc
xchg
xor
les
mov
xchg
mov
daa
outsl
imul
inc
lahf
adcl
das
stos
jbe
mov
pop
mov
mov
lret
jb
fadd
jmp
mov
sbb
or
jl
stc
sbb
push
int
mov
leave
test
mov
loope
or
or
sub
into
xorb
test
mov
cmp
sub
pusha
loop
mov
dec
cmc
sbb
cs
xor
jnp
sbbl
clc
aas
push
lret
ds
pop
mov
pop
js
cmp
adc
adc
hlt
rcrb
push
aaa
les
in
dec
subb
cmp
mov
jnp
iret
pop
cmp
mov
cmp
jp
add
xor
push
not
fxch
fsubr
sub
dec
sbb
repnz
add
ds
add
pop
add
fiadds
sub
stos
scas
lret
scas
mov
inc
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
pop
cmp
cmp
ret
or
gs
mov
inc
add
push
mov
and
call
jo
push
inc
xchg
out
adc
out
pop
jg
pop
pop
fcomip
sub
gs
adc
outsl
sbb
shl
mov
or
push
sbb
mov
gs
push
pop
xchg
hlt
imul
in
push
lret
add
fistpll
sbb
xchg
fsubs
addr16
and
les
std
push
notb
xchg
inc
gs
mov
sahf
mov
divb
popa
fimull
cli
sub
pushf
andb
adc
add
push
daa
sub
or
and
leave
and
pop
xchg
push
shl
lret
sbb
mov
lahf
in
int
inc
cmpsb
in
or
lcall
inc
jge
sti
jbe
pop
daa
add
pop
shlb
inc
and
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
pop
test
jge
jle
or
jle
scas
and
jbe
std
call
inc
jmp
xor
ret
ret
in
neg
and
stc
xchg
jmp
sbb
mov
xchg
xor
add
repnz
dec
cmpsb
sbbl
daa
xlat
addr16
lods
push
push
sub
mov
cs
aaa
lret
in
inc
pop
arpl
or
subl
push
aad
cmp
sbb
fnstenv
fildl
add
cmc
iret
inc
mov
cmp
repnz
fs
mov
xchg
cmc
js
shll
repz
dec
push
push
cs
out
pop
hlt
inc
sub
mov
mov
js
sbb
jne
loop
pop
push
mov
jp
or
inc
addb
vphaddbq
push
test
lret
dec
mov
push
loop
push
mov
in
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fidivrl
sub
or
jle
nop
das
in
fcomi
lcall
sbb
dec
rorb
lcall
lret
int3
push
inc
clc
fwait
cltd
hlt
jle
out
popf
inc
mov
add
ds
addb
es
mov
cmc
lods
pop
aas
jnp
sub
xchg
cmp
dec
les
inc
out
xchg
lods
xor
xchg
js
pop
lods
es
nop
in
ja
mov
ljmp
sbb
fbstp
sbb
dec
cmp
jmp
mov
arpl
or
sbb
push
nop
nop
xchg
pop
mov
jns
fnstsw
sub
sbbl
in
loopne
mov
fsubs
sbb
dec
insb
cmp
push
mov
sbb
outsl
lea
imul
mov
add
inc
pop
cmpsb
repz
cmp
xchg
movl
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
daa
xchg
add
jg
jle
adc
inc
fwait
clc
sub
cwtl
mov
mov
out
push
mov
push
xor
mov
xor
dec
fcompl
add
dec
test
jne
shr
fbstp
xchg
mov
pop
ds
mov
add
pop
es
adc
aad
mov
xor
add
lock
icebp
lods
sbb
add
pop
les
aam
lods
testl
mov
call
pop
lahf
jp
into
mov
je
jo
into
adc
xor
ja
or
pop
pushf
jbe
and
rorl
mov
int
pop
aas
jp
lret
out
andb
stc
int3
mov
out
shrb
push
add
orb
mov
mov
mov
out
and
insb
into
fimull
lds
add
loop
mov
sub
adc
cmp
add
cmp
je
jmp
xor
cltd
js
popa
cmp
lods
lret
adc
jle
or
jle
subb
lcall
adc
add
or
cmp
cmc
and
xchg
lret
cmpsb
lahf
push
cmp
push
inc
inc
fs
test
jne
data16
outsl
into
add
mulb
jmp
cvtdq2ps
shr
stos
addr16
xor
push
leave
iret
fimuls
push
mov
cmp
dec
cld
mov
mov
je
js
jmp
in
mull
jns
cmp
not
orl
mov
sub
cs
cltd
jmp
push
imul
jmp
pop
and
dec
test
subb
ret
leave
mov
jge
mov
shrl
pop
add
subb
pop
lock
rol
pop
jp
jnp
sbb
jle
call
inc
sbb
rolb
sti
cwtl
dec
fwait
and
movsb
jbe
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
test
leave
sub
jg
jle
mov
scas
pushf
orb
xor
mov
and
mov
orl
mov
cmpsb
mov
in
sub
divb
psubd
jae
mov
movsl
xchg
fildll
lods
add
fs
sbb
cmp
inc
mov
add
popa
inc
adc
lock
aad
in
out
sbb
jle
jno
xchg
push
sbb
jbe
push
mov
cmp
add
add
and
xchg
fs
cmp
filds
rclb
out
push
cmpsl
xchg
xchg
pop
fisttpl
sbb
push
ret
mov
cmp
es
push
outsb
and
loopne
push
gs
fldl
enter
sub
popa
cld
mov
xor
push
das
mov
or
in
inc
arpl
xchg
fildll
imulb
dec
jno
mov
mov
lret
cmc
mov
cmp
mov
lcall
xchg
mov
push
pop
push
sbb
sbb
push
cmpsb
dec
jmp
push
mov
add
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
dec
jae
cmp
jle
or
jle
push
sbb
daa
push
jbe
out
inc
cmpsb
jl
mov
mov
fisubl
lahf
idivl
aas
mov
mov
lds
add
lock
lahf
je
stos
add
fistpl
push
cmc
fsts
or
lcall
arpl
test
lret
xchg
xchg
call
gs
add
adc
loop
out
mov
push
test
push
lods
push
pusha
or
in
movsb
scas
dec
mov
mov
push
stos
jne
movsl
push
fs
mov
cmp
imul
les
pop
mov
or
push
movsb
xor
add
dec
dec
test
jmp
dec
cmp
xor
clc
or
scas
dec
cmp
enter
rcrl
clc
mov
push
and
lods
jnp
movsl
push
stc
add
stc
cmp
mov
xchg
psraw
aas
xor
pop
lods
or
clc
mov
inc
xor
push
sub
and
add
mov
jmp
dec
sub
lock
xor
sub
jle
jg
jle
push
sahf
daa
mov
fsubl
push
inc
xchg
out
add
ja
pop
sahf
bound
in
movsb
int
cmc
and
scas
popa
mov
daa
cli
jb
jl
loopne
in
inc
jbe
arpl
call
or
in
or
icebp
ljmp
mov
sub
in
pusha
addr16
js
imul
pop
loope
pop
dec
js
icebp
lret
adc
pusha
xor
cmp
std
lahf
arpl
insb
mov
adc
stos
xchg
xor
jno
inc
xor
mov
xchg
fnstsw
stos
push
jnp
inc
dec
sahf
fdivrs
outsl
test
add
lock
pop
pop
fwait
movsb
mov
leave
rcll
mov
in
outsl
test
xlat
out
or
inc
xchg
sub
push
test
jns
movsl
sbb
ds
daa
xchg
mov
mov
in
or
lock
jecxz
xchg
loopne
rorb
scas
adc
sbb
jne
int3
rcrl
inc
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
jle
shrl
jle
lcall
in
in
sub
jmp
test
rcll
and
sub
adc
test
roll
inc
flds
xor
rcll
adc
push
mov
dec
inc
outsl
pop
es
and
mov
xor
and
push
repnz
movsl
shrb
cmp
loope
pushf
adc
push
push
mov
movsb
inc
and
dec
leave
xchg
dec
insl
jae
xchg
inc
aam
jb
cltd
jg
push
aaa
push
pop
ja
out
jno
arpl
cmp
stos
sub
sub
ret
stos
adc
lds
ss
divl
pusha
cmpsb
xchg
xor
sahf
cmpsb
ss
js
and
into
aad
push
xchg
ret
sbb
inc
pop
adc
testl
into
cmp
flds
push
dec
loop
xchg
push
mov
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
xchg
outsl
frstor
jle
or
jle
mov
or
cwtl
fsubrp
lock
or
pop
insb
test
mov
lds
inc
lock
push
std
lret
mov
or
ret
cmp
in
fcmovu
ljmp
fildl
imul
add
mov
or
cmc
mov
inc
cmp
lret
testl
mov
and
jl
lods
stos
test
dec
sahf
hlt
fidivs
mov
into
push
or
xor
xor
negl
and
dec
out
xor
test
sub
sbb
pop
cld
dec
imul
or
dec
out
stos
jmp
cmc
xchg
and
loopne
or
ss
dec
mov
push
sub
movsl
cmp
adcl
push
xor
mov
rcr
xchg
call
cltd
add
sub
sbb
lea
mov
incl
jmp
mov
xor
jmp
or
stc
xchg
sub
jmp
jg
jle
xchg
inc
aad
xchg
rcrb
adc
movsl
out
adc
inc
movsb
ret
fwait
mov
jb
test
mov
pop
fidivrl
mov
xorl
js
jecxz
and
push
enter
and
push
mov
push
or
std
and
sub
int3
nop
jecxz
loop
call
jo
xchg
sbb
dec
stos
das
les
subl
jmp
mov
lret
cli
into
adc
pop
data16
cmpsl
mov
pop
adc
aad
dec
les
or
mov
mov
or
inc
xor
das
int
fsubrs
mov
lahf
and
push
ja
and
jbe
push
sbb
push
and
in
das
pusha
adc
xor
cmc
mov
mov
fistps
pop
jnp
sub
cmp
pop
mov
fadds
cld
notb
jb
adc
and
gs
lcall
dec
adc
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
fldenv
jb
aad
push
iret
xchg
push
movnti
lea
stos
movsl
cmp
mov
loop
lods
bound
mov
fmuls
or
push
stos
aad
ss
sub
roll
popa
pushf
jmp
rorb
dec
mov
mov
pop
in
jecxz
sbb
push
inc
sarb
int
lods
cmp
jle
loop
leave
stc
fbld
andl
jle
cs
or
rorb
xchg
ja
add
pop
les
mov
mov
mov
mov
jmp
es
mov
les
xor
imulb
jle
jle
jle
sbb
xlat
hlt
fidivl
jecxz
and
pop
idivb
pop
test
dec
adc
jne
pop
mov
or
dec
inc
add
fimuls
pop
cmc
dec
mov
xchg
sbb
shl
shll
cmp
xchg
push
xlat
icebp
sub
addr16
push
iretw
pushf
sti
or
pop
cmpsl
pushf
adc
mov
scas
jecxz
push
pop
inc
dec
cmpxchg
mov
jge
xchg
sbb
add
leave
pop
imul
int3
pop
fstps
stos
leave
out
inc
ret
jns
daa
ss
sarl
or
in
roll
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
cli
das
popf
and
push
jg
jle
mov
mov
or
hlt
gs
lahf
dec
lock
icebp
xchg
or
sub
push
or
jno
mov
and
testb
sbb
cmp
push
sub
in
enter
fsts
sbb
pcmpgtd
ss
inc
jl
lcall
int
mov
pop
jp
jb
and
pop
test
jns
cmp
xchg
subb
inc
andl
leave
inc
xchg
stc
or
enter
stos
inc
or
mov
and
in
aad
adc
lret
and
push
push
lcall
dec
sbb
pop
add
cmp
cli
xchg
lcall
adc
aam
mov
push
pop
idivl
cmp
pusha
jp
pop
and
add
xchg
mov
mov
push
mov
test
iret
adc
cwtl
addb
push
pop
das
scas
or
inc
sub
cld
or
or
dec
or
rol
inc
cld
cmp
pushf
clc
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
aam
mov
jle
jg
jle
ss
outsb
push
or
dec
movsl
std
adc
cmpsl
mov
scas
jmp
push
aaa
push
sub
fwait
adc
cmc
mov
imul
sbb
push
ror
ss
jae
mov
aam
xchg
pop
pop
mov
push
add
xchg
outsl
addr16
xor
cvtps2pd
ja
cmpsl
jmp
mov
pop
xor
mov
popf
mov
dec
aaa
cmpsb
or
push
xor
jae
jmp
inc
aas
inc
pop
xor
dec
inc
sbb
xchg
les
dec
sub
int
sbb
dec
cli
nop
mov
aaa
shlb
mov
xchg
loop
fidivs
mov
xor
jecxz
jnp
cmpps
pop
mov
and
add
jg
xor
imul
xor
mov
dec
mov
icebp
mov
sub
icebp
add
lds
std
pushf
push
imul
dec
out
adc
fsubr
lret
inc
data16
sub
call
lret
dec
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
mov
push
jg
jle
stos
cmpsb
inc
out
ret
fldl
adc
and
push
hlt
insb
ss
mov
ds
jmp
add
in
cs
or
rcll
into
pop
sub
mov
xor
add
aad
es
jbe
icebp
loope
aaa
cmpsl
sar
test
jns
sbb
dec
mov
cmp
push
xor
push
cmp
cmpb
mov
std
clc
lahf
pop
lds
stos
ret
cs
and
pop
loopne
insb
mov
or
leave
cmp
mov
lret
and
mov
lgdtl
jo
mov
sbb
add
je
int
and
jb
dec
cmp
out
push
mov
xchg
mov
jecxz
repz
imul
xor
mov
xchg
inc
je
mov
pop
ss
push
xorl
inc
cmc
mov
xor
pop
xor
adc
xchg
cmpsl
call
jecxz
sbb
mov
es
sub
mov
aaa
int3
and
adc
xlat
mov
pop
or
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
mov
and
jle
in
fistpl
in
aaa
jae
fiaddl
adc
jmp
out
mov
push
rorb
cmpsb
jg
mov
frstor
adc
lret
dec
pop
dec
mov
subl
in
xor
dec
lret
cli
sbb
cli
imul
jp
sbb
xchg
mov
xor
lods
lock
lea
mov
mov
pop
xchg
dec
push
dec
cmpl
stc
lods
mov
cli
in
jns
mov
rolb
shrl
mov
clc
inc
jne
dec
adc
pop
inc
imul
incb
scas
and
imull
sub
scas
xor
mov
mov
cmp
xchg
bound
adc
pop
repz
push
fstps
mov
xlat
push
xchg
mov
in
je
mov
dec
cmp
adc
push
insb
test
jecxz
int
push
popa
dec
cmpl
fdiv
faddl
mov
enter
out
fstl
mov
mov
push
imul
loop
icebp
push
out
enter
clc
shlb
les
andb
adc
mov
sti
add
adc
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
shll
cmp
lds
jle
sbb
daa
fldenv
jnp
jae
lds
xor
pop
jg
leave
or
lods
jmp
movsb
fucomi
xor
or
mov
lock
push
jns
sub
push
andb
popl
dec
cld
xor
jae
jl
insl
sbb
mov
fldenv
push
in
into
or
out
push
mov
sti
insb
ss
fidivs
lret
or
notb
add
gs
adc
push
test
cmp
sub
jne
push
daa
xchg
aad
jle
add
and
adc
popa
sub
bnd
ss
add
in
sbb
push
aas
imul
inc
repnz
orb
mov
les
mov
inc
bound
mov
and
shll
adc
or
pop
pop
add
popf
jbe
xchg
lret
mov
lds
cmpsl
clc
pop
add
fsubr
mov
sbb
movsb
pusha
test
mov
repz
mov
push
les
iret
popa
aas
push
cld
subb
and
and
and
js
in
popa
mov
lods
mov
pop
mov
repnz
jmp
jg
add
jns
cmp
scas
ret
jle
lds
jle
fistpl
and
fdivr
ljmp
stos
out
inc
add
addr16
out
jmp
cmp
cld
or
rorb
xchg
adc
pop
lods
scas
mov
fsubl
xchg
je
repz
fmuls
sbb
push
sbb
nop
movsl
lock
sbb
fdivr
movsl
cmpsl
hlt
ja
sti
push
cmp
loope
jmp
and
mov
movb
jg
dec
pop
into
jle
sbb
outsb
jb
fcompl
sahf
in
xchg
inc
int
or
lret
jmp
xor
xchg
inc
pop
movsl
int3
mov
xchg
pop
mov
cmpsl
shlb
mov
sarb
xorb
sti
and
lds
call
push
aad
in
lock
and
loope
fisttpll
jg
cmp
test
mov
add
sarb
jo
cmp
push
stos
loope
add
xchg
test
movsb
mov
xchg
lods
mov
jns
cmp
loop
mov
or
loope
pop
pushf
std
inc
jp
sub
push
ds
sti
stc
add
xor
pop
inc
mov
cmp
xchg
ljmp
sti
mov
push
aaa
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
xchg
dec
push
cmp
lds
jle
sbb
jbe
nop
cmp
dec
sbb
xchg
mov
lret
sub
jle
push
add
and
ficoml
lret
jnp
cmpsl
or
arpl
dec
subb
inc
dec
fwait
add
pop
ljmp
inc
arpl
dec
push
repnz
xor
mov
cmc
jle
mov
imul
loopne
aam
std
sti
mov
lock
and
insb
push
jle
and
xor
xchg
in
push
stos
jl
mov
mov
cmp
flds
inc
xchg
out
adc
xchg
and
addl
scas
in
clc
add
jo
or
xor
repz
pop
out
andb
mov
mov
jl
cmpsl
jg
mov
push
xlat
sub
sbb
lahf
inc
inc
mov
lret
pusha
cmp
xchg
jge
mov
test
fisubs
movsb
jbe
add
xchg
movd
mov
cmp
mov
hlt
pop
xchg
in
bound
mov
push
hlt
sub
lret
insl
cmpsl
push
movsl
jecxz
xlat
inc
sbb
push
mov
loope
int3
mov
inc
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
jmp
jle
mov
jle
cmp
sub
int
out
movsl
cmc
sub
lods
jbe
test
fnstsw
shl
leave
shlb
ret
cmc
pusha
pop
aam
jmp
arpl
sbb
pusha
or
dec
jno
mov
sub
xchg
inc
fadd
jae
adc
nop
repnz
mov
sub
roll
sbb
jl
ja
rorb
add
push
shrl
cmp
jp
mov
pop
insb
or
cmp
add
lds
or
out
and
dec
lret
adc
jge
int
dec
aad
enter
mov
push
jnp
pop
or
add
and
insl
decb
insb
mov
jo
cmpl
xor
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
ljmp
mov
jle
add
hlt
jo
rorl
sbb
sbb
leave
mov
push
pop
mov
mov
fdivs
jl
cltd
pop
lret
loopne
jne
fstps
mov
inc
sbb
sbb
inc
sarb
subb
out
or
mov
jbe
cli
push
fwait
lahf
int
ss
lods
int
adcl
sahf
jg
jns
les
adc
lods
mov
inc
inc
sub
mov
inc
cld
jl
outsl
push
sbb
ljmp
jo
jg
scas
pslld
arpl
test
adc
orl
push
inc
mov
jle
js
xor
dec
pop
call
lea
xchg
roll
add
outsb
lret
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
push
in
das
add
jle
jle
jle
cmpsb
push
jp
mov
dec
ds
pop
out
pop
mov
xlat
out
std
inc
adc
sti
lahf
pop
sbb
and
cmp
call
sbb
test
divl
in
dec
mov
gs
pop
subb
sbb
nop
in
in
scas
mov
jmp
decl
mov
std
inc
lods
jb
std
rorl
cmp
lods
and
and
lahf
outsb
pop
bnd
sbb
and
mov
mov
cmp
aaa
cld
ljmp
cmpsb
test
sub
inc
stos
imul
lret
mov
push
stos
add
or
call
inc
add
stos
inc
add
enter
cmp
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
fcmovb
push
cmp
jle
jle
jle
pop
pop
sbb
shl
adc
jmp
fwait
dec
mov
insl
mov
nop
loope
insl
fldt
jp
loopne
repnz
xchg
dec
add
leave
sarl
sti
mov
mov
jne
jne
out
ret
and
out
sub
dec
popa
data16
xor
jp
sbb
pop
inc
mov
je
xchg
xor
dec
loopne
out
rep
add
mov
mov
xchg
sub
sbbb
pusha
inc
inc
iret
mov
pusha
fwait
cltd
sub
sub
cmp
stos
loope
ror
push
xor
jmp
jnp
fwait
inc
push
ja
lcall
jp
and
pop
dec
jne
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
out
mov
jle
mov
jle
lock
add
sbb
and
mov
ficomps
and
cld
outsl
and
mov
js
pushf
decl
adc
push
mov
cmpl
sarl
cmp
adc
mov
call
cmpsl
add
test
leave
stos
mov
add
test
lcall
jnp
push
pop
xchg
nop
out
cld
insl
mov
mov
cld
std
icebp
stos
dec
or
add
out
jmp
lret
cmpsb
repz
clc
cltd
cmp
repnz
addl
dec
lock
fdivp
add
popf
test
mov
or
xchg
std
push
sbb
push
xor
pop
jg
out
adc
je
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
mov
jle
mov
jle
and
mov
pop
mov
mov
addr16
enter
adc
pusha
push
aas
push
push
and
outsl
push
xchg
xlat
sbb
cmp
fisubrl
test
call
in
mov
fs
je
repz
add
or
leave
in
adc
mov
out
dec
push
and
dec
ret
dec
push
cmp
mov
dec
movsl
inc
push
int
cmp
adc
cmp
mov
add
xchg
ret
ret
je
and
fldenv
push
lret
sub
push
mov
pop
cmp
jl
scas
xor
adc
cmp
sbb
or
mov
xor
inc
rorl
jne
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
sbb
and
jle
mov
jle
mov
outsb
insb
push
int
jp
in
fwait
push
push
xor
int3
lea
push
cmpsb
outsl
nop
mov
mov
fsubrl
sbb
jp
sar
daa
mov
push
cld
inc
push
orb
rcrl
rcr
fsubrl
sahf
xchg
or
xchg
sbb
add
pop
lock
inc
mov
roll
jbe
push
inc
add
hlt
adc
imul
sbb
xlat
insl
pop
fisubs
sub
movsl
inc
in
dec
in
mov
cmp
xchg
or
mov
cmp
mov
xor
popa
push
sahf
sub
mov
push
push
xchg
jp
and
sarb
fmuls
sbbb
fmull
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
out
cmp
jle
mov
jle
pop
mov
push
subb
pop
sbb
mov
xor
in
test
loopne
mov
jnp
dec
xorb
or
sar
jb
dec
xor
add
outsl
iret
cli
into
movsb
fstpt
filds
mov
aaa
std
and
push
mov
ljmp
in
hlt
push
add
loope
stos
bound
mov
stc
or
dec
movsl
push
mov
cmp
int
add
xor
xchg
pusha
and
loop
daa
xorb
sbb
jge
sub
jmp
sbb
rorb
xchg
jbe
daa
loopne
lds
insb
fadds
hlt
mov
mov
movsl
ret
int
lahf
or
shlb
clc
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
xchg
outsl
mov
jle
mov
jle
sahf
sbb
rcrb
mov
adc
aad
xor
popa
jmp
and
pop
pop
insb
jge
mov
jl
xchg
xchg
sub
xorl
sahf
mov
jb
xor
push
cld
xchg
push
pop
nop
mov
add
insb
rorl
pop
adc
sub
out
movl
in
cmp
sbb
mov
pop
or
cli
ret
inc
dec
dec
fdivr
loope
inc
xchg
or
push
repnz
cltd
mov
pop
shll
mov
mov
adc
ret
outsb
add
arpl
adc
xor
jo
mov
test
add
lods
mov
push
push
mov
push
fs
jg
popa
pop
push
fnstcw
enter
mov
add
cmpsb
dec
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
ds
lods
aaa
mov
jle
mov
jle
pop
subb
mov
insl
xlat
xor
push
xchg
ror
cmp
cmc
in
enter
aas
call
mov
mov
std
xchg
enter
cmp
xchg
push
arpl
hlt
cs
addr16
lock
aaa
xchg
cltd
lret
rolb
cltd
cmp
sub
outsl
mov
adc
push
hlt
and
xchg
popf
or
jl
jnp
rcr
and
sahf
pop
aam
push
stos
icebp
mov
out
into
sti
popf
sub
in
xlat
icebp
lahf
push
dec
sbb
add
rcl
jno
jp
push
ja
mov
sbb
push
mov
sub
out
and
hlt
outsb
ret
jp
pop
lret
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
iret
cmp
jle
jle
jle
insb
leave
sub
cmp
les
loopne
and
pop
les
shr
in
lahf
sub
insb
mov
fwait
out
mov
xchg
cmp
movsb
decb
push
push
incb
adc
fucomi
jp
dec
and
xchg
fcmovb
fists
cmp
je
fadds
aaa
ss
xor
inc
and
jns
and
rcrl
lods
call
popf
imul
sbb
imul
dec
pushf
mov
or
jno
movsl
sti
sbb
push
mov
push
in
sarb
mov
jl
stos
lods
sti
mov
sbb
or
jle
mov
xchg
andb
push
add
push
cmpsl
mov
jb
add
ret
or
add
mov
jmp
decl
xchg
mov
fstpl
aaa
jle
mov
jle
sbb
rcll
mov
mov
test
sbb
add
and
pop
adc
xchg
mov
mov
inc
cld
fildl
lods
adcl
mov
jecxz
add
dec
mov
or
adc
mov
js
pop
ds
pop
stos
rcll
mov
sbb
enter
inc
aaa
ljmp
mov
ja
jle
push
jp
sbb
enter
add
mov
roll
or
mov
push
in
ss
loop
pop
and
ja
mov
pop
in
mov
test
xor
iret
pop
lock
sbb
movswl
sub
scas
add
loopne
add
inc
loop
xchg
imul
sub
aaa
jle
mov
jle
mov
scas
inc
xor
out
pop
or
aaa
js
mov
mov
dec
mov
lds
dec
sti
dec
push
push
cmp
sahf
fs
pop
push
insl
daa
sbb
and
mov
mov
mov
sub
jecxz
jb
pop
std
mov
shll
mov
fidivrl
cld
dec
out
mov
xchg
fidivl
inc
push
hlt
test
inc
inc
mov
fsub
jl
sar
mov
into
push
jg
iret
les
and
xor
in
adc
imul
cmp
or
outsl
movsl
idiv
xor
cmovl
das
xchg
xor
popa
xchg
in
adc
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
out
cmp
jle
mov
jle
sbb
enter
dec
mov
aaa
jbe
pop
jno
sub
mov
pushf
xchg
pop
push
sbb
jo
xchg
repz
faddl
stc
mov
sub
cmp
imul
mov
out
mov
jle
ja
loopne
cmp
sbb
jmp
aas
and
sbb
aam
imul
sbb
inc
stc
cmp
aad
jno
add
inc
or
outsb
insb
sub
pop
push
push
push
sbb
or
fwait
add
imul
insb
push
pusha
lret
dec
mov
cmp
shrb
dec
fwait
bound
lcall
test
adc
and
hlt
cs
fs
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
cmp
psraw
jle
fsubs
adc
cwtl
cmp
push
jge
and
hlt
xor
mov
les
add
push
and
pop
sbb
test
dec
and
orl
adc
jbe
insb
jae
add
sub
test
cmc
inc
push
inc
sub
lahf
aam
mov
lea
cmp
popa
jmp
pop
adc
das
gs
mov
jle
cmc
fstpt
xor
outsb
and
adc
push
cmc
adc
cmp
test
sahf
dec
inc
cmp
sub
mov
lods
repz
ljmp
or
rorb
lret
sbb
push
add
sbbl
movsl
push
mov
pop
push
popa
push
push
sbb
rorb
sub
lea
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
pop
add
jl
scas
pop
jnp
mov
push
inc
cwtl
and
pop
lcall
xchg
leave
sub
jb
outsl
mov
mov
mov
dec
inc
in
inc
jo
mov
mov
inc
push
mov
sbb
xchg
mov
aam
mov
lret
xchg
mov
xchg
jbe
sbb
jp
push
sub
sahf
shrl
fcmovbe
mov
rcl
fst
lods
cmc
insb
or
jg
fmuls
enter
dec
push
cld
jno
cmc
imul
mov
cmp
sub
loopne
popf
and
jne
fwait
dec
adc
pop
or
out
sbb
cmpsb
icebp
jp
outsl
insl
mov
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
dec
loop
cmpsl
jno
jle
mov
jle
dec
xor
sarb
stos
add
push
lcall
xor
into
mov
jge
sub
cmp
inc
pop
ficompl
pmaddwd
pushl
jo
ss
mov
mov
movl
jae
sbb
pop
pop
and
mov
sub
dec
cmpsb
add
repz
or
adcl
mov
lock
jb
int
xor
and
iret
out
rolb
xchg
test
in
scas
in
andl
pop
cltd
lock
pop
dec
mov
orl
int
repz
mov
js
push
lahf
jbe
out
in
mov
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
adc
inc
dec
lret
jle
mov
jle
enter
jns
mov
pusha
adc
gs
in
push
pop
test
xchg
or
sarl
or
loopne
pop
stc
das
sbb
loope,pn
imull
push
mov
pusha
dec
adc
fstp
mov
adc
mov
je
movsl
lcall
popf
clc
push
out
pop
jbe
add
ret
jmp
xchg
clc
add
repz
das
sub
pusha
out
test
mov
insl
mov
mov
xchg
pop
pop
out
xchg
popf
pop
hlt
add
pop
out
roll
in
clc
ja
test
es
inc
int3
imul
pop
jg
aad
and
loop
push
shlb
fisubrl
xor
adc
loopne
add
test
xchg
push
stos
push
push
mov
jle
jle
jle
push
cmc
sub
popf
out
cmp
push
dec
loope
push
adc
or
pop
mov
imul
and
xor
movsl
test
xor
and
dec
scas
inc
lock
out
jmp
loope
lock
mov
mov
repz
sbb
test
add
nop
or
je
or
lods
test
aaa
mov
jbe
mov
sub
shlb
repz
rcll
ret
pop
jmp
dec
mov
test
sbb
jg
nop
and
fmul
pop
divl
orb
stos
outsb
push
xor
idivb
xor
sub
popf
test
fldl
mov
xor
push
mov
xchg
popa
mov
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
fdivrp
rcll
push
loopne
and
pop
inc
and
cmpsb
sbb
lods
mov
arpl
dec
stos
pop
xor
xor
pop
dec
pop
xchg
rorl
push
xchg
mov
adc
xchg
das
insl
rolb
adc
pop
iret
and
lock
dec
jp
repnz
shrb
roll
cs
inc
inc
xor
orb
shl
scas
int
add
inc
dec
sbb
push
bswap
fsubp
jl
push
mov
xor
lods
mov
scas
aaa
pop
iret
cmpb
sahf
and
cld
bound
adc
push
inc
lock
js
dec
xchg
cld
xchg
test
or
movsb
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
