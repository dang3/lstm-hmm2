push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
fbstp
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
dec
sbb
sahf
push
sbb
js
mov
add
popa
mov
imul
jge
mov
mov
repnz
xchg
fstl
mov
cmp
arpl
xor
cs
loope
fmul
push
push
mov
push
push
icebp
push
pop
pop
dec
inc
subb
cli
loope
xchg
push
in
lock
jecxz
xor
adcb
and
fiadds
imul
mov
test
mov
xor
mov
in
sti
fdivl
pop
inc
test
mov
xor
mov
sub
adc
add
mov
add
int
mov
enter
sahf
test
adc
pop
push
xlat
shlb
lods
jle
js
pop
mov
push
xor
pop
cs
jl
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
push
cmp
jle
cli
jg
jle
lcall
push
mov
sahf
nop
ss
cmpsl
movl
mov
cltd
mov
arpl
ret
aaa
out
or
cmpsl
pop
hlt
dec
fstl
jmp
lods
jns
fimuls
ja
ljmp
adc
sub
push
inc
cmp
mov
lods
scas
inc
pop
loopne
mov
test
inc
in
jmp
repz
clc
mov
mov
std
inc
ljmp
xchg
pushf
mov
and
cltd
test
pop
cld
movsb
push
pop
shll
pusha
and
jno
imul
fs
movsl
test
jae
sub
lods
out
mov
insl
mov
pop
jecxz
fistpl
fsubs
mov
lcall
mov
lock
movsl
out
mov
mov
flds
fsubl
xor
int3
push
cwtl
xchg
dec
testb
fiaddl
outsb
stc
pop
imul
ljmp
jl
sbb
jne
ret
cmp
xchg
xchg
pop
movsb
cltd
inc
xor
sbb
cltd
jge
mov
xchg
clc
lock
sbb
dec
cmp
ja
xchg
repnz
adc
jge
xor
lahf
bound
outsb
loopne
pop
mov
jnp
ja
decl
aaa
inc
add
neg
jmp
cli
fcompl
jno
cmp
jmp
cli
jg
jle
add
xchg
lcall
test
sub
sub
test
test
sbb
adc
cs
cmp
fldt
mov
jne
lret
lods
insb
sbb
xor
mov
add
sbbl
cmpsl
mov
xchg
add
sub
and
push
in
into
repz
mov
jmp
jbe
jmp
xor
add
mov
fidivrs
mov
pop
inc
and
jl
dec
or
mov
out
jo
mov
add
int
iret
out
shrb
jb
sti
xchg
mov
cmpsb
mov
mov
sub
cltd
pop
add
mov
inc
int3
in
inc
dec
inc
mov
fs
push
adc
movsb
jb,pt
pop
imul
sub
pop
fisubrs
xor
dec
inc
test
lods
test
scas
add
mov
xlat
int
add
xchg
cmpsl
sbb
andb
pop
dec
push
rorb
xor
push
mov
pop
jp
mov
sarb
xchg
out
add
or
rcl
cli
push
test
out
and
stc
fisttps
cld
movsl
xchg
pop
lea
xor
pop
lret
xor
lds
xor
mov
and
xchg
pushl
push
push
iret
ret
fnstsw
js
mov
mov
ret
xor
and
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
test
cmpb
cli
jg
jle
iret
outsb
test
pop
int
or
daa
pusha
jg
lods
test
sti
inc
stos
mov
mov
nop
mov
pop
mov
mov
xlat
out
xlat
stc
jg
icebp
xchg
or
fs
dec
pop
jecxz
cltd
push
std
test
data16
inc
pop
add
lret
jo
lods
cli
sub
dec
aad
push
xchg
adc
push
and
lods
inc
clc
mov
es
out
cmp
jmp
push
pop
xor
jne
imul
xchg
add
cld
jmp
repz
jle
aam
jg
sahf
push
jbe
cmpl
cltd
push
mov
call
add
inc
int
je
jle
cmpsb
inc
add
lea
idivl
orb
fsubr
out
dec
add
mov
lret
loopne
sbb
inc
mov
xchg
fnstenv
xor
push
xchg
in
jecxz
mov
sarb
mov
and
pop
cmc
dec
fdiv
outsl
dec
mov
into
fists
adcl
js,pn
ret
gs
popf
sahf
loopne
fiadds
push
jle
adc
dec
cli
jnp
test
jp
lret
jne
outsl
popa
filds
sub
mov
mov
shl
notl
jmp
sub
aad
daa
jmp
shl
negl
mov
mov
pop
dec
mov
mov
imul
add
xchg
mov
push
jo
adc
dec
inc
fimull
push
js
jle
jg
jle
sbb
dec
pop
into
dec
jne
insl
dec
movsb
xorl
dec
xchg
or
lock
or
pop
fwait
call
and
fsubrs
out
push
push
leave
dec
aas
xchg
mov
dec
adc
adc
enter
xor
push
std
mov
insb
lods
mov
push
xor
cmc
rcrb
inc
sbb
shrb
insb
shll
jp
xchg
lret
fldenv
leave
es
sub
sub
or
mov
addl
sub
push
mov
push
ret
mov
xchg
test
lea
mov
lahf
xchg
push
inc
add
sahf
fcompl
add
xchg
sbb
mov
add
dec
repnz
out
rorl
jno
repnz
xor
dec
fldl
das
mov
aad
mov
xlat
repz
push
lods
jle
mov
xlat
je
loopne
push
jg
jecxz
stos
icebp
js
mov
fbstp
jo
pop
mov
inc
push
das
dec
sbb
out
and
inc
push
mov
mov
or
stos
mov
scas
pop
push
addb
sub
mov
adc
stos
lods
inc
lods
in
mov
call
ffree
adc
int3
bound
adc
rolb
pop
jg
and
push
inc
xor
cld
sbb
sub
inc
or
aad
out
add
js
repz
imul
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
ret
or
jle
cli
jg
jle
mov
mov
push
sub
loop
mov
push
outsb
popf
movsl
gs
pop
xchg
test
or
and
sub
sbb
cmpsb
arpl
jl
fs
xchg
pop
leave
out
inc
orl
mov
and
lcall
mov
xor
xchg
inc
inc
add
outsl
rorl
aas
add
mov
lock
loope
adc
mov
or
mov
cmp
and
jg
mov
cmovle
xchg
cmpsb
aaa
es
or
insb
lds
pop
shl
pop
dec
icebp
jmp
outsl
dec
sahf
xchg
lret
enter
ficoms
jnp
fiaddl
pop
push
mov
ljmp
test
xor
push
shr
jo
mov
cmp
std
mov
flds
mov
xchg
pop
adcl
cmp
jmp
cltd
cmp
xchg
clc
jns
mov
addr16
push
scas
adc
pop
mov
xchg
inc
ficomps
leave
jmp
test
and
push
lret
adc
cmp
testb
push
repz
xlat
dec
jbe
fwait
jbe
sbb
jno
fcoms
mov
pop
push
out
sbb
sti
mov
adc
andl
sub
fwait
clc
mov
cmp
int3
fwait
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
daa
push
pop
jle
cli
jg
jle
jo
nop
fwait
xchg
push
adc
dec
xchg
lcall
jle
dec
ret
add
in
pop
or
sbb
ds
iret
imul
adc
shr
orb
xor
mov
nop
cld
mov
push
xchg
ss
sub
jp
fsubrs
push
mov
sti
pop
sti
adc
jnp
push
popa
push
adc
hlt
inc
arpl
xchg
mov
mov
cmp
dec
int
push
or
sahf
es
pop
cmpb
pusha
xor
xchg
jge
outsb
adc
push
inc
jae
cmp
add
lds
out
cmp
xchg
add
ljmp
xor
push
out
inc
jg
add
jmp
roll
or
pop
sub
pusha
leave
incl
lods
and
push
fldcw
xor
iret
jo
aas
xchg
xchg
ret
test
mov
into
add
outsb
jecxz
outsb
jne
mov
insb
and
mov
lea
movsl
std
cmp
cmp
loop
xor
jae
xchg
mov
lods
int3
insl
mov
adc
js
or
loop
inc
clc
mov
mov
sarl
int
cmp
add
notl
arpl
jecxz
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
imul
mov
mov
cli
enter
pusha
popa
sbb
dec
jne
sub
arpl
outsb
into
dec
mov
ljmp
inc
das
or
push
dec
inc
fadds
dec
movsl
adc
cwtl
and
movsb
nop
mov
mov
jge
jmp
nop
shlb
insl
rcrb
xchg
outsl
int
scas
jbe
mov
cld
inc
stos
adc
sbb
test
inc
push
mov
faddl
push
mov
inc
std
cwtl
mov
negb
jnp
out
leave
mov
mov
ljmp
mov
lahf
mov
pusha
es
jae
pop
mov
je
sub
inc
fcomp
rep
in
mov
push
sub
mov
lret
jns
inc
icebp
lds
mov
fdivrl
jl
push
add
pop
inc
fs
rcr
repz
sub
popa
push
sbb
sbb
cmpsb
rcr
imul
arpl
or
ret
adc
imul
into
lahf
and
in
cmp
sti
cmp
cmp
stc
pop
inc
mov
pop
lods
fdivs
xor
mov
movsl
cmpsb
movsb
mov
jle
out
mov
addr16
mov
push
jge
ja
mov
dec
pop
push
and
sub
push
std
fwait
ja
sahf
xchg
scas
push
out
ss
jbe
mov
push
mov
add
jmp
cmc
dec
and
jno
push
mov
leave
movsb
test
push
add
cli
jg
jle
js
sbb
push
call
stc
jle
mov
xorl
sbb
neg
inc
push
xlat
pop
test
cmc
aad
adc
xchg
test
gs
push
bound
mov
out
jle
sbb
cmp
jb
jae
mov
xchg
mov
jnp
fistpll
aaa
and
push
jp
insl
les
sbb
and
hlt
pop
cmp
lret
jae
movsl
xlat
sysret
aam
and
rclb
aad
mov
or
mov
sub
push
xor
into
pop
scas
dec
jl
xchg
cmp
fisubrl
mov
test
sbb
sarl
cmpsl
aas
inc
push
sbb
adc
mov
sbb
pop
lds
dec
sub
insl
add
in
call
xor
mov
aas
xchg
inc
ret
xchg
inc
in
adc
aas
adc
fwait
call
dec
sub
rcr
clc
mov
mov
fwait
pop
mov
jle
lods
hlt
pop
lock
or
xor
loop
pop
mov
mov
jp
push
pop
shrl
dec
out
mov
push
into
add
xchg
or
repz
sub
in
stos
push
mov
dec
adc
fstp
inc
add
lds
pop
loop
in
enter
inc
aad
pop
ret
sbb
and
or
movsb
fucomi
movsl
pop
lods
cli
xchg
enter
inc
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
xchg
cmp
jle
jg
jle
and
sbb
sbb
shll
or
mov
call
enter
dec
rcll
adc
sbb
sub
cmp
inc
in
popa
xor
inc
clc
pop
out
push
add
imulb
out
lea
adc
jecxz
dec
adc
repz
hlt
and
jne
cmpsl
int
push
jl
daa
rcl
inc
adc
mov
inc
sub
loopne
in
stos
add
cmp
arpl
cmp
xlat
pushf
outsb
or
jae
lret
mov
lcall
pop
push
xlat
loop
les
cmpsb
jle
add
jge
in
sub
cmp
daa
mov
daa
fwait
andb
pop
imul
mov
pop
pop
int3
xchg
mov
inc
mov
xchg
xor
clc
adc
lds
dec
mov
jp
push
pop
das
loopne
push
mov
sub
cmp
shrb
xlat
and
and
push
sub
push
and
adc
inc
out
pusha
dec
popa
push
shrl
sbb
xor
mov
xlat
mov
mov
dec
sub
and
fldenv
in
arpl
push
mov
aaa
cmp
adc
pop
mov
daa
lods
in
mov
dec
rcrl
push
cwtl
jmp
push
lret
mov
mov
arpl
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
adc
mull
jle
cli
jg
jle
pop
push
roll
cwtl
in
test
rorl
mov
jecxz
cwtl
jns
mov
jbe
add
mov
arpl
imul
bound
sahf
mov
popa
mov
mov
in
push
pop
aad
pop
cmp
mov
mov
repz
inc
lock
jmp
movsb
out
aam
out
sbb
sbb
imul
push
mov
sti
cld
mov
das
xchg
push
dec
or
jae
push
rolb
int3
fld
jbe
pop
in
jbe
cld
ror
shrl
mov
or
arpl
sub
and
mov
std
mov
dec
bound
lods
mov
inc
xchg
sub
inc
sub
insb
adc
ss
mov
xchg
jnp
clc
decl
mov
pushf
pop
cmp
adc
lcall
call
mov
sbb
and
in
pop
push
dec
adc
add
pop
mov
hlt
negb
dec
add
dec
inc
out
xchg
hlt
pop
lock
inc
imul
cmp
movsl
mov
pop
lea
rcll
rorl
inc
jo
and
jno
imul
leave
icebp
or
or
js
cmpsb
jmp
shlb
cmp
push
dec
cmp
inc
mov
mov
in
jns
in
xchg
dec
ret
dec
ror
paddd
bound
mov
and
sub
std
or
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
pop
push
aas
inc
mov
jg
jle
fs
xlat
sahf
mov
xor
sub
ret
in
pop
and
aam
push
pop
push
adc
dec
test
inc
movsl
lret
cwtl
jp
sub
jnp
lcall
das
xlat
jp
sahf
std
adc
adc
aas
dec
lret
mov
dec
outsl
outsl
and
gs
out
xorb
std
shll
xor
sbb
sahf
dec
je
int
and
mov
aaa
lods
out
mov
shr
div
in
or
pop
xchg
cmp
das
scas
ss
inc
nop
outsb
jae
push
imul
arpl
add
push
cmp
push
ficomps
push
jnp
movsl
push
scas
cmpsl
hlt
xchg
mov
mov
pop
in
imul
or
stc
stos
daa
xchg
jl
arpl
inc
movsl
cld
fiaddl
mov
or
sbb
das
xor
pop
inc
or
cmpsb
add
lret
leave
cltd
jnp
add
xorb
and
inc
mov
shlb
dec
mov
sub
xchg
cwtl
lcall
cli
xor
adc
adc
pop
xlat
mov
mov
cmpsb
mov
mov
mov
push
icebp
repz
sbb
pop
sbb
or
jno
pop
clc
xlat
and
roll
jnp
xchg
xor
push
jo
fwait
pop
lods
push
daa
push
and
dec
fcmove
xchg
iret
js
dec
orl
and
cli
sub
test
dec
clc
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
fwait
push
push
cld
cs
jle
jg
jle
jle
xchg
pop
mov
jo
leave
insl
lret
fwait
scas
ljmp
mov
jb
cmpsl
clc
test
test
shrl
pop
jbe
jae
lock
insl
flds
sbb
mov
xor
enter
hlt
sub
xlat
movsb
je
std
lahf
pop
push
dec
adc
ret
movb
sbb
mov
fmuls
scas
roll
pop
cmc
and
sti
shl
mov
mov
jns
inc
mov
push
cmp
cmpsb
aas
in
js
sbbl
sub
sub
sbb
mov
sbb
and
in
jns
mov
xor
jae
mov
or
test
inc
inc
rcrb
mov
shl
insl
repz
inc
sarl
jmp
jecxz
xlat
dec
xlat
push
nop
xchg
sti
jbe
pop
mov
js,pt
jnp
daa
daa
in
lods
sbb
adc
call
imul
repz
fnstcw
jne
xlat
outsl
in
or
push
movsb
aaa
ret
out
cmc
and
cli
sub
test
or
push
outsl
xchg
ficomps
xchg
cmpsl
rol
inc
cmp
jo
pusha
mov
out
cltd
push
and
cmc
stos
daa
leave
sbb
xchg
das
rolb
fnstcw
shrb
mov
inc
mov
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
lcall
jle
jg
jle
cwtl
lds
cs
jmp
cwtl
mov
pop
cmpsl
xor
leave
jae
insb
aaa
xchg
adc
cmp
adc
aam
jmp
inc
push
aad
ficompl
xor
pop
xor
call
mov
out
jne
push
xchg
mov
or
daa
xor
sarl
or
cli
cmp
sbb
and
hlt
shl
imul
sti
jl
mov
daa
imul
dec
fadd
sbb
sbb
push
outsb
add
cmpsl
xchg
leave
insb
aad
arpl
cli
cs
movsl
pop
mov
movl
mov
or
pusha
push
adc
es
sbb
xor
iret
leave
push
xchg
stos
movsb
mov
les
dec
cmp
push
daa
shll
jle
jl
dec
push
mov
lcall
loopne
in
xchg
or
inc
dec
add
cmp
push
xor
pop
jmp
data16
call
cs
punpckhdq
mov
insl
cmp
mov
insl
add
popa
and
jecxz
or
addl
push
pushf
mov
cmp
mov
sbb
sbb
fwait
out
ss
fs
push
push
js
sub
fldenv
decl
shll
outsb
int
mov
sbb
cs
and
cmp
add
movl
test
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
aad
mov
jle
jg
jle
add
xchg
fbld
fcomps
clc
cld
movsl
pop
mov
push
int
mov
add
popa
ficompl
or
hlt
dec
pop
jp
sar
es
adc
xchg
stos
scas
fisubs
fimull
mov
movsb
xchg
fdivrl
sahf
add
addr16
cs
les
lcall
and
add
inc
cmp
push
clc
sub
movsb
stos
js
push
aaa
pop
loope
mov
dec
imul
je
mov
iret
sbb
pop
insl
inc
cmc
xchg
push
in
or
mov
jo
std
pushf
popf
stos
iret
mov
shl
loopne
out
sub
test
mov
pop
xchg
pop
insb
jo
ret
inc
push
sahf
ss
ret
lahf
das
pusha
cli
push
icebp
aad
sbb
outsl
shlb
push
stos
push
mov
gs
sbbb
or
test
cltd
adc
push
add
dec
add
cli
mov
movsb
std
das
and
enter
popf
jnp
or
xlat
sahf
das
clc
mov
mov
push
jae
movsl
dec
icebp
push
idiv
or
dec
dec
in
test
mov
inc
cmp
xor
stos
leave
add
stc
push
xchg
mov
or
into
addl
in
scas
push
mov
outsb
jnp
pusha
dec
xor
dec
jnp
push
add
mov
and
push
mov
fisubrs
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
nop
mov
cli
jg
jle
ret
add
push
int
movb
jmp
add
mov
mov
jle
sahf
ja
jno
mov
or
lds
adc
dec
maskmovq
notl
xchg
xchg
xchg
js
in
hlt
mov
or
insl
push
sbb
mov
lret
inc
or
cmc
mov
mov
sub
push
mov
and
imul
lret
pop
cs
xor
orb
add
xchg
mov
xchg
lds
pushf
and
jb
mov
jecxz
adc
les
out
jl
scas
data16
pop
mov
shl
inc
pop
aam
cmp
mov
mov
adc
jp
movsb
std
popa
push
rorb
mov
faddl
cmp
sub
imul
lahf
pop
pop
outsl
mov
xlat
fs
inc
mov
mov
push
roll
dec
rcrl
adc
psubusw
xor
orb
mov
or
ss
rolb
xlat
adc
outsl
scas
je
adc
sbb
stos
hlt
cwtl
arpl
lods
call
scas
std
lock
adcb
jmp
in
push
icebp
icebp
shlb
push
fmull
lret
mov
ja
repz
xchg
pusha
push
lods
and
arpl
pop
orb
int3
and
add
xor
add
xor
add
xor
add
xor
pop
jmp
cmc
mov
icebp
insl
sbb
lahf
jne
push
jle
cli
jg
jle
xchg
adc
sbb
pop
sub
xorb
dec
inc
cmp
push
sub
jmp
mov
sbb
lret
sub
les
aaa
call
sbb
ret
movsb
inc
xchg
pop
ret
mov
lret
jbe
and
js
or
xor
dec
adc
adc
add
shrl
sbb
stc
mov
out
int3
dec
sbb
int
add
shll
jmp
sub
pushf
push
push
cwtl
xor
jmp
inc
mov
scas
or
push
inc
sbb
fcoml
pop
addr16
push
test
leave
pushf
daa
xor
cmpsb
xchg
xor
push
fwait
cmc
fisubrl
push
out
test
mov
js
repnz
xchg
mov
out
xorps
cwtl
out
insl
loopne
mov
fwait
pop
pop
sub
xchg
lock
fucomp
jo
mov
cmpb
es
push
ljmp
ljmp
insl
out
xchg
sbb
and
sub
mov
jno
push
adc
dec
je
pop
jmp
inc
xor
loopne
ss
cmpsl
xchg
sub
xchg
pop
or
insb
leave
sahf
or
mov
call
orl
pop
lahf
mov
adc
inc
enter
push
imul
jp
lea
xchg
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
shll
es
pop
jle
cli
jg
jle
out
push
xchg
jecxz
sti
cmc
insl
lret
or
mov
push
adc
ss
gs
flds
mov
sub
sbbl
or
jmp
xchg
movsl
cmpsb
pmaxub
int
pop
lret
sqrtps
xor
arpl
jbe
push
inc
pop
movsb
loope
push
imul
test
daa
jle
push
and
lods
lods
nop
add
or
pop
pop
dec
jnp
mov
repnz
ja
ljmp
rol
shl
test
aad
jns
iret
in
iret
inc
jne
pop
xor
test
mov
jle
xor
dec
jo
out
pop
das
inc
fmul
addr16
xlat
cmpsl
jo
in
out
cmp
add
inc
jae
pop
popf
xor
sub
push
xor
mov
outsb
cmp
and
divl
fwait
and
repz
add
mov
cltd
push
cs
scas
insb
jl
pop
int
lret
or
jb
cmpsb
jl
xor
push
popa
push
gs
fiadds
das
aaa
jno
clc
push
pop
js
adc
pop
inc
adc
shrl
lcall
lods
das
jecxz
out
idiv
sub
inc
xchg
sub
cwtl
xchg
notl
mov
cltd
cmpsl
dec
mov
ljmp
repz
sahf
jb
adc
jae
mov
call
imul
pop
sahf
dec
and
and
loop
cs
adc
mov
xchg
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
jecxz
adc
jle
sbb
fs
lock
out
sub
nop
mov
lret
loopne
mov
xchg
mov
sub
filds
inc
xchg
popa
cmp
pop
dec
mov
fdiv
roll
dec
pusha
js
jecxz
jp
cwtl
lods
sbb
out
pop
xor
lods
test
cmp
inc
out
jb
pop
jno
jmp
mov
jb
lds
pop
mov
jo
jmp
cmp
xor
and
daa
xchg
mov
imul
fmull
out
pop
idivb
in
cltd
aaa
cltd
mov
and
out
add
out
scas
insb
inc
dec
stos
pusha
rcr
out
xorl
paddusb
pusha
in
imul
xor
mov
lods
add
lods
xor
lods
mov
cmp
mov
jb
cs
mov
shrl
leave
lret
pop
xchg
cmpsl
insb
cmp
dec
cmc
inc
jg
ja
cmc
jge
in
aad
push
out
sub
fisubl
fcmovnbe
add
lods
sub
and
sub
cmp
and
pop
stos
inc
and
pop
std
icebp
mov
lret
iret
cmpsl
inc
decb
mov
xchg
mov
mov
mov
lret
cmp
sti
sub
arpl
dec
mov
xor
lcall
xchg
ss
dec
push
ljmp
out
pop
inc
adc
add
inc
outsb
enter
push
xor
xor
out
frstor
add
xchg
int
and
test
jl
cmp
clc
pop
pop
jl
mov
mov
imul
mov
jmp
cmc
inc
es
pop
ds
mov
inc
pusha
mov
sbb
test
fldln2
dec
push
cmp
xchg
cli
ret
push
cli
and
pusha
or
pushf
addb
sub
mov
lahf
xchg
mov
push
jmp
scas
adc
push
loopne
fwait
dec
xchg
ret
push
adc
and
cli
sbb
shl
mov
sub
sbb
push
xchg
sbb
mov
ret
or
mov
adc
add
sbb
lods
clc
out
mov
xor
lods
pop
mov
test
sbb
fldl
cmp
jmp
out
sub
shr
call
dec
xor
mov
and
insb
dec
out
add
mov
jl
arpl
push
or
jb
or
filds
add
jae
shlb
cmp
sub
popa
lahf
cltd
lahf
lds
xor
push
rcrl
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
aas
std
shll
jle
pop
jl
jle
dec
xchg
cmp
inc
xchg
rcll
hlt
jle
pusha
sbb
test
fadd
mov
in
cmp
fnstcw
fcoml
das
xchg
or
sbbb
je
inc
jno
sub
xchg
loop
in
mov
dec
stc
pop
add
xor
adc
into
outsl
mov
lods
fwait
xchg
fiadds
mov
arpl
sub
movsl
pop
lock
sub
daa
push
arpl
aam
adc
leave
lahf
popa
xor
adc
flds
enter
cmp
or
xchg
jp
sbb
jg
inc
inc
ficoml
lea
adc
lret
mov
idivl
stos
jae
imul
push
mov
xor
xor
inc
or
and
inc
pop
dec
lret
xchg
push
jecxz
dec
mov
or
cmp
xchg
push
mov
ja
mov
outsb
push
sbb
cli
out
lret
sbb
cmp
insb
lahf
js
inc
push
xchg
or
jp
scas
push
pop
xchg
push
fs
inc
into
lods
arpl
mov
jle
adc
add
outsl
push
sbb
cmpsb
out
push
jg
dec
xchg
fwait
dec
sbb
xchg
arpl
cmpsl
cmp
inc
in
dec
xor
stc
cltd
jge
pop
ds
dec
nop
or
rcr
pop
ficompl
inc
mov
adc
xor
test
bound
ret
push
and
and
inc
cmp
or
popa
test
adc
test
in
gs
pop
or
divb
sbb
into
and
mov
cmp
popa
mov
popa
js
pop
in
cmp
mov
popa
jbe
add
cmpsb
push
fyl2x
mov
jnp
pop
xchg
cs
cmp
dec
movsl
sub
popf
repnz
jmp
sub
push
and
in
repz
lret
push
cmp
sbb
dec
sbbl
push
stos
pop
mov
mov
out
ror
hlt
mov
mov
iret
xchg
repz
mov
or
or
push
and
adc
inc
mov
jns
lods
lcall
dec
xor
jae
pop
or
psubsw
xchg
fcoml
jo
sarl
icebp
ret
pop
cmp
push
ja
pop
xchg
xchg
push
ja
sub
push
mov
xchg
mov
sbb
push
push
movsb
jl
test
adcb
adc
add
or
gs
inc
xchg
test
test
pushf
dec
mov
or
cmp
out
inc
jb
out
add
push
in
iret
inc
cmp
xchg
pop
lcall
inc
fildll
out
incl
rcll
popf
jmp
ret
or
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
pushf
inc
in
or
jle
pop
jl
jle
and
pop
stos
ret
loope
stos
add
push
mov
inc
xchg
dec
mov
sti
push
je
and
inc
jns
or
cs
mov
cltd
rcll
jae
pop
mov
jae
cmp
ja
loope
js
sbb
cmp
lahf
xor
std
test
xchg
loope
cmp
ja
mov
fsubrs
shrl
lods
cmp
pop
push
and
loope
rolb
jg
xor
or
mov
pop
enter
pop
push
mov
push
pop
jns
cld
stos
cld
push
mov
mov
mov
adc
xor
test
ja
in
cli
mov
adc
inc
push
popa
jbe
scas
jne
inc
pop
cs
test
inc
add
sub
mov
inc
dec
imul
imull
mov
aad
mov
orl
test
mov
das
and
jo
jne
outsb
mov
inc
faddl
or
imul
push
push
xor
lods
add
mov
es
aam
push
inc
loop
into
cwtl
push
in
pop
xor
mov
or
test
mov
jb
outsb
fldt
mov
lret
cltd
fcompl
inc
lahf
jb
js
and
add
push
pop
mov
and
sub
scas
movsl
add
xchg
call
sahf
pop
adc
rcrb
mov
xchg
jne
in
data16
in
or
in
mov
lret
fnstenv
push
jns
mov
xor
cmp
xchg
pushf
mov
clc
jp
jge
jl
jae
jg
pop
jno
xchg
or
div
idivl
test
dec
in
pop
data16
cmp
xor
mov
arpl
pop
push
cmpsb
sbb
out
fs
sub
ds
jnp
push
dec
pop
pop
loope
dec
add
jmp
aam
test
pop
push
dec
sub
ds
aad
test
sarb
lcall
popa
sbbl
pop
xlat
clc
stos
mov
push
aas
sbb
cmp
pop
shlb
mov
xor
mov
pop
scas
fbld
mov
sbb
dec
xchg
xchg
cli
clc
mov
xlat
jecxz
imull
pushf
je
sbb
mov
inc
bound
jae
sarb
imul
dec
cmp
xchg
inc
pop
cli
xchg
mov
push
test
or
and
push
pop
hlt
xchg
test
adc
loopne
adc
jle
push
stos
jne
popa
mov
push
aaa
mov
and
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
leave
std
je
jle
pop
jl
jle
test
or
jmp
xchg
mov
pop
stc
pusha
add
popa
cmp
or
xchg
push
jno
mov
imul
mov
mov
xchg
in
pop
subl
pop
push
sbb
cmc
loope
mov
cwtl
push
mov
mov
lcall
push
in
aam
mov
dec
in
arpl
xchg
and
mov
movsb
sub
adc
cmp
jg
mov
xor
sub
popa
dec
loop
cli
cmp
jb
push
adcl
jg
popa
mov
push
pushf
mov
cs
mov
xor
loop
xlat
mull
push
stc
int
mov
lods
add
jg
jns
fmuls
and
dec
movsb
stos
mov
cmpsl
bound
add
mov
out
adc
jnp
ret
dec
in
jbe
mov
ret
adc
xchg
iret
adc
sub
pop
movsb
xlat
push
push
jle
stc
imul
bound
add
outsb
jo
jns
pushf
mov
and
mov
cmpsl
xchg
xchg
pop
push
mov
sub
lock
sub
invd
cmp
ljmp
pop
xchg
iret
inc
add
imul
std
scas
pusha
std
sbb
mov
stos
aam
sub
fmull
xchg
jge
imul
mov
xchg
cmp
pop
and
orb
sub
je
pop
je
mov
add
je
div
dec
jne
xor
sbb
pop
or
xor
mov
jns
adc
xchg
adc
jg
dec
mov
lret
stc
pop
jge
rsqrtps
loope
jecxz
test
ret
xchg
jmp
jo
dec
mov
xchg
in
pusha
not
adc
aad
ljmp
enter
dec
jecxz
hlt
pop
sbb
data16
scas
add
push
mov
jecxz
push
pop
in
lcall
adc
push
mov
iret
jecxz
stos
pop
aas
cltd
inc
cmp
pop
xchg
sti
dec
dec
decl
push
inc
iret
jmp
test
lea
add
or
or
aam
jns
scas
mov
cmc
push
cwtl
push
or
pusha
add
add
cvtdq2ps
xor
rolb
arpl
movl
sub
std
jmp
jmp
ss
mov
test
inc
jbe
jl
inc
cmpsb
and
inc
mov
lcall
or
sub
mov
aaa
cs
dec
dec
adc
iret
repnz
push
jmp
jns
clc
jmp
add
dec
popa
jno
jne
xor
jle
imul
pop
sbb
pop
jl
jle
in
pusha
cld
adcb
dec
sub
adc
push
cltd
push
jecxz
cmp
movsl
sbb
lahf
mov
sub
les
inc
xlat
adc
pop
pop
and
fwait
insl
pop
xacquire
cs
sbb
imul
cs
mov
pop
or
sub
mov
data16
inc
inc
inc
mov
hlt
jg
xchg
mov
xchg
mov
andb
lahf
push
fdivl
push
addb
lahf
pop
sbb
xor
mov
xor
in
fnstenv
or
sbb
cmp
mov
add
push
sbbb
insl
adc
push
rclb
xchg
inc
push
pop
in
push
push
add
inc
jp
in
push
mov
xchg
xchg
mov
ficomps
jo
fiadds
add
inc
sbb
dec
fsubl
fadds
addr16
fimull
pop
outsb
add
adc
popa
push
inc
jno
jae
and
fnsave
js
mov
add
hlt
cmp
add
mov
cld
lcall
jge
pop
mov
xchg
jl
ret
aas
jns
xor
loope
call
push
add
imul
mov
mov
pop
pop
ljmp
loopne
inc
or
test
jmp
xchg
pop
sub
push
mov
pop
in
inc
out
mov
mov
leave
xchg
insb
pop
inc
jp
nop
pushf
enter
outsl
jle
pushf
jp
in
push
xchg
pop
mov
inc
mov
inc
inc
cld
int3
push
pop
sub
or
in
pop
pop
mov
or
or
sbb
mov
mov
lret
hlt
lea
xchg
stc
ret
inc
sub
lret
leave
jns
mov
push
mov
repz
imul
bound
jae
inc
das
xor
imulb
pop
jmp
xor
in
sti
ss
or
ss
scas
pop
mov
jmp
sub
pop
xor
pop
popf
out
aaa
loopne
movsl
cmc
cmp
repnz
or
out
mov
fsubrs
out
pop
adcl
subl
test
push
pop
or
cmp
sbb
and
decl
daa
dec
fldl
jmp
pop
dec
dec
jno
stc
sub
popf
cmc
adc
or
dec
jno
ljmp
jmp
std
scas
rclb
sbb
jecxz
and
rcll
loope
mov
test
mov
push
popa
and
insb
and
pop
daa
js
pop
ret
jecxz
or
fs
and
mov
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
jb
sub
mov
jl
jle
fcomp
xor
int
mov
popa
movsl
daa
mov
rolb
jle
jle
mov
fnstsw
mov
shrb
dec
xorl
cmp
out
adc
lds
adc
insl
rolb
stc
lods
daa
idivl
or
pop
cli
cmp
mov
fcoms
cmc
adc
or
pop
xchg
inc
xchg
xor
jns
dec
or
not
repz
xchg
and
dec
bound
data16
addb
pop
mov
rolb
stos
add
imul
or
sub
sbb
mov
mov
push
xor
mov
jbe
sub
mov
gs
out
xchg
addb
jne
popf
jl
xor
insb
cmc
push
andl
mov
rorl
mov
push
dec
pcmpeqw
dec
cmc
dec
fbld
push
mov
mov
pop
je
fs
cmp
stos
jmp
jg
mov
jmp
mov
aas
pop
fstl
mov
xchg
clc
or
inc
aad
xchg
xlat
dec
daa
xchg
mov
mov
out
fisubrl
xor
pop
fcmovnb
gs
sar
and
daa
mov
pop
fstpt
xchg
repz
and
std
jp
push
fnstcw
les
shlb
push
adc
dec
cmp
ljmp
add
sbb
inc
test
adc
lds
push
mov
pop
fmull
jae
cmc
into
jge
add
add
mov
lock
lret
xchg
xor
std
dec
jle
lods
pop
inc
sbb
cmc
or
idivb
inc
data16
loopne
icebp
and
mov
fcomi
inc
add
addr16
mov
adc
std
push
daa
and
lds
dec
xchg
add
hlt
mov
and
push
cwtl
or
jne
push
push
out
and
insl
push
ret
pop
xchg
test
lcall
shlb
xchg
jle
xchg
or
lret
add
jecxz
mov
mov
cltd
sbb
jae
dec
rcrl
sub
or
cli
pop
inc
adc
lea
xor
xchg
xchg
mov
repz
test
data16
cmp
push
xor
dec
fcmovnbe
mov
cltd
pusha
mov
std
mov
clc
jnp
jge,pn
jb
hlt
daa
xchg
mov
adc
rorb
cmpsl
fwait
test
mov
nop
into
mov
mov
or
stos
dec
ja
sbb
and
movsl
sbb
cld
push
inc
or
push
mov
scas
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
sbb
add
jl
jle
jecxz
cmp
test
leave
leave
push
pop
outsb
pusha
inc
and
and
dec
xor
pushf
cmc
jb
or
loop
mov
scas
push
pop
int
out
into
data16
sbb
xchg
pop
shrl
in
rcll
cld
lds
imul
mov
lds
sub
mov
leave
adc
mov
fnsave
insl
adc
adc
pop
ja
jle
inc
and
lahf
hlt
push
ret
jg
sbb
jmp
xchg
inc
xchg
sbb
scas
aad
stc
into
pop
pop
pop
mov
push
lock
nop
out
sub
out
pop
and
xchg
jmp
addl
mov
mov
shlb
repz
dec
jle
cmp
xor
movsb
mov
in
inc
mov
xor
jg
mov
pop
out
cmpsb
fcompl
icebp
data16
arpl
pop
cmp
shll
dec
sbb
lods
jns
push
pop
sbb
lods
jle
hlt
mov
or
lods
dec
test
ds
aad
xchg
lods
mov
fldenv
pushf
les
or
adc
jne
sub
lods
push
or
lcall
mov
and
lds
xchg
cmp
cmp
in
popa
sub
mov
fimull
in
jge
aam
andb
push
scas
inc
cld
xchg
loope
jbe
andb
cwtl
hlt
arpl
mov
outsb
mov
jmp
rcll
imul
mov
sarb
cmpsl
pusha
stc
pop
imul
lcall
xlat
xor
cmp
sub
push
push
sub
dec
xchg
adc
cmp
aaa
mov
sub
add
push
sbb
mov
sbb
and
andl
adc
in
ja
scas
mov
mov
push
adc
or
daa
mov
xchg
les
sub
sbb
pop
jns
lahf
and
aaa
sbbb
out
adc
shrb
bound
cmc
insl
jne
aas
xchg
movsb
dec
stos
push
cmpsl
xor
inc
cmp
push
or
mov
daa
mov
mov
add
cmpb
lcall
pop
jnp
xchg
out
dec
nop
js
lahf
scas
mov
mov
dec
xor
pop
and
or
repnz
inc
ljmp
dec
fisubs
rorl
mov
adc
je
pop
lods
jne
cmp
inc
into
lahf
or
dec
les
mov
movsl
push
lods
leave
scas
xchg
movsl
and
js
xor
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
xor
and
pop
jl
jle
fildl
lods
movsl
daa
lods
mov
or
hlt
sbb
and
aaa
bound
sbb
jle
imul
gs
jnp
push
fldl
and
mov
outsb
scas
cmp
negl
sub
sbb
lds
pusha
mov
mov
mov
das
jo
pop
test
data16
dec
jne
enter
dec
popf
pop
sub
std
clc
sarl
bnd
mov
arpl
mov
push
mov
sub
outsl
mov
enter
xlat
out
in
stc
jg
loope
fst
pop
ret
sti
xchg
adcb
cmp
cmp
xor
aas
push
mov
sbb
jle
arpl
push
sarb
pop
clc
inc
cmpsl
mov
push
test
and
mov
or
add
xor
add
xchg
outsb
dec
iret
in
xchg
mov
das
adc
movl
cmp
mov
enter
movq
cmc
daa
push
cmp
xchg
stos
sub
jp
mov
adc
xchg
sub
inc
scas
nop
dec
xor
pop
sub
jbe
paddb
daa
xor
cmpl
cmc
cltd
outsl
cmp
sti
enter
loopne
bound
not
mov
sahf
mov
lods
imul
int3
test
dec
mov
mov
mov
mov
mov
mov
js
stos
xor
jecxz
jge
nop
or
and
mov
sub
addl
cmc
mov
lds
jle
out
andb
push
pop
jnp
cmpsb
xchg
arpl
sub
sbb
inc
jle
mov
test
cmpsb
lahf
sub
jbe
in
arpl
cmpsl
clc
pop
jl
jnp
cmpsl
mov
push
xchg
push
popf
das
lahf
pop
xor
mov
ret
push
gs
xchg
test
lods
ss
loope
cmc
add
pop
jp
cmp
aad
or
mov
out
sub
mov
int3
mov
jp
sub
mov
inc
dec
bound
repz
int
inc
in
pcmpgtd
sti
ja
inc
in
xor
add
rolb
mov
in
jmp
and
mov
xor
pop
mov
mov
pushl
xchg
enter
pop
test
jns
imulb
hlt
xor
mov
or
pop
addr16
or
and
mov
pop
push
mov
add
sti
cmp
xchg
pop
adc
fdivrp
mov
sti
imull
sub
jno
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
fistps
dec
imulb
jle
jl
jle
pop
cli
add
pop
mov
inc
and
jne
addr16
cmp
and
adc
sub
lea
mov
cmp
stc
adc
add
orl
not
mov
lahf
ror
mov
cmpb
bound
mov
loopne
adc
movsb
mov
es
jns
pop
dec
dec
inc
in
fwait
les
mov
lcall
or
jmp
push
outsl
pop
fstl
sub
push
cmp
imul
mov
lret
mov
mov
fisttps
fs
mov
push
roll
dec
jg
ret
stos
into
enter
shll
mov
adc
stc
sbb
pusha
inc
xorl
test
xor
gs
scas
imul
inc
and
sbb
xchg
fstps
and
adc
iret
sbb
pop
gs
inc
cmp
jg
loope
and
repz
loopne
insb
and
repnz
movsl
std
leave
mov
add
popl
inc
and
in
js
shld
aam
push
jns
mov
mov
iret
jp
leave
cs
pop
out
fwait
mov
and
in
mov
fs
pop
jnp
fwait
scas
pop
hlt
cmp
add
mov
add
fisttps
repz
jbe
and
dec
cmp
call
icebp
push
in
cmp
cmpsb
cltd
ds
xchg
popa
inc
pop
aad
push
int
cmovne
repz
test
adc
in
inc
push
xchg
mov
adc
lds
mov
test
and
test
aam
sbb
push
cmpsb
stos
shlb
inc
dec
jae
out
sbbl
mov
in
sub
lods
xor
add
add
lds
cmp
nop
dec
mov
mov
mov
push
imul
xor
mov
dec
or
int3
in
fwait
movsl
jbe
inc
push
outsl
sbb
sti
loope
lcall
cmp
test
test
aam
xchg
mov
push
int
and
add
xchg
mov
jbe
cs
fnstenv
xor
mov
ds
xchg
rorb
pusha
dec
or
das
or
pushf
fsubrp
and
fld
push
movsb
xor
mov
push
fs
or
push
cld
or
xor
in
jns
add
mov
aas
ja
in
in
dec
scas
and
in
mov
cmp
push
xorl
es
sbb
push
idiv
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
xor
sub
pop
jl
jle
sbb
repz
ss
lcall
je
sbb
sub
mov
sub
outsb
hlt
dec
stos
jo
aam
fldcw
pop
jecxz
xchg
mov
jge
jecxz
pop
ret
loop
lahf
jle
push
sbb
mov
leave
dec
stos
stc
lret
inc
xchg
sub
repnz
mov
mov
icebp
mov
cmp
and
pusha
mov
add
push
mov
pop
mov
std
pushf
fadds
ret
in
inc
adc
adc
jns
ja
or
ret
mov
test
push
pop
push
pop
outsl
xchg
dec
xlat
sbb
data16
rcl
or
and
cltd
call
pop
dec
fnstcw
add
push
out
or
icebp
sub
repz
in
bound
and
mov
je
push
mov
ret
dec
sub
sbb
xchg
insl
loopne
mov
enter
xor
rcll
imul
cmp
and
mov
push
lods
das
lcall
sub
je
mov
dec
inc
pusha
sarl
xor
icebp
into
add
hlt
scas
mov
mov
leave
jnp
push
dec
mov
cmpsl
and
lock
jae
mov
sub
pop
mov
out
add
jge
sub
push
mov
leave
dec
test
fiadds
iret
ret
jmp
mov
mov
xchg
cmp
push
mov
into
lods
push
popf
xlat
pop
jle
cmpsl
in
mov
pop
rorb
je
and
mov
sbb
mov
pop
nop
xchg
int3
push
scas
sbb
clc
jle
repz
push
xor
insb
cli
cmp
mov
push
std
or
xchg
sbb
push
test
xor
or
cmpb
shl
adc
sub
cmp
repz
xchg
mov
rorb
rorl
stos
xchg
jl
into
push
out
pushf
mov
mov
pushf
subl
adc
sbb
mov
or
rolb
outsl
fcmove
cmpsb
add
in
xchg
dec
dec
ret
and
int3
inc
rolb
sub
push
insb
repz
std
xor
jnp
lret
mov
outsl
inc
imul
movsb
das
mov
mov
lock
mov
int3
icebp
sub
or
aad
les
movsb
and
add
enter
adc
mov
sbbb
flds
jecxz
or
jnp
addb
cld
es
test
push
add
xchg
popa
cli
mov
and
fldenv
mov
aaa
mov
cld
push
call
mov
subl
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
cwtl
stos
mov
sub
jle
sbb
jb
ljmp
mov
mov
in
push
lahf
push
pop
cld
add
dec
add
out
xchg
lods
inc
pop
daa
xor
cli
xchg
and
pop
test
cmp
rclb
dec
nop
in
jne
mov
in
arpl
mov
lock
movb
andb
fwait
outsl
movb
pop
xchg
inc
jecxz
repnz
popf
fisttpll
and
or
sbb
mov
movsl
xchg
or
mov
xchg
mov
push
mul
pop
arpl
xchg
inc
pop
cmpsl
aad
xchg
stc
jbe
jnp
sarl
mov
inc
insb
mov
aas
and
inc
addr16
inc
lods
mov
fldl
cmp
movsl
mov
vpxor
ror
rcll
jp
xor
inc
mov
out
rcrb
add
inc
sbb
xchg
dec
outsb
lds
jge
bound
int
jl
dec
lcall
and
in
cmp
dec
insl
pop
test
mov
test
shlb
fisubrl
popf
add
push
push
outsl
das
out
lock
mov
adc
sbbb
pushf
mov
fs
dec
push
push
enter
out
dec
inc
loope
mov
add
sbb
cld
pop
jne
loope
mov
lret
sbbb
xor
sbb
mov
dec
sub
sbb
sub
rcrl
cwtl
sbb
or
push
push
mov
cmp
fcmovnu
pop
cmp
movsb
leave
or
mov
push
mov
shlb
sbbb
xlat
fisubl
pop
repz
das
mov
mov
scas
rcrl
pop
lods
mov
jge
add
rep
aam
test
xchg
dec
es
enter
xchg
das
xrstor
dec
cli
lret
xor
adc
leave
jl
cmp
and
sub
mov
ljmp
add
fwait
mov
inc
je
les
movsb
jne
mov
mov
add
dec
xchg
in
pop
and
cmp
add
cmp
mov
pop
mov
mov
mov
pop
mov
gs
movsb
mov
arpl
icebp
insl
dec
jg
jae
xchg
inc
fsubrs
or
push
cmc
push
push
push
leave
xchg
fbstp
stos
cmp
addr16
dec
xchg
in
sbb
in
in
mulb
into
inc
test
dec
cmpb
mov
mov
repnz
mov
xor
mov
jle
mov
dec
inc
jp
cwtl
jns
das
cltd
repnz
out
dec
dec
mov
cmp
out
imul
outsl
push
popa
jns
or
add
inc
or
inc
cld
test
clc
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
icebp
or
popa
enter
add
ja
pop
mov
call
jae
pop
jp
and
fcomps
ja
cmp
pop
cld
cwtl
xor
mov
inc
xor
test
dec
mov
loope
cmp
pop
or
xchg
fwait
sbb
sbb
test
mov
jnp
and
iret
pop
mov
jo
xchg
xchg
xchg
cwtl
xchg
scas
sahf
arpl
imul
movsb
pop
pop
test
mov
sub
jno
xor
lods
adc
test
test
xchg
aas
fstpt
jl
xor
int3
sahf
shrl
push
cmp
popf
mov
fisttpll
sub
push
inc
outsb
negl
inc
rcrb
cltd
scas
cmp
adcl
lds
cmc
jb
insl
push
xchg
into
stos
pop
push
cmp
mov
sub
mov
jno
xchg
cmpsb
loopne
and
sub
std
outsl
sahf
pop
cmp
in
xchg
xchg
push
inc
out
arpl
mov
outsb
fwait
in
push
lock
jno
in
mov
sub
xchg
rorl
sbbb
mov
inc
or
or
pushf
ljmp
in
push
jg
xchg
cmp
pusha
jecxz
inc
push
mov
roll
ret
leave
sub
divl
fisttpl
pop
mov
jne
mov
xchg
add
dec
cltd
lcall
pushl
rcrb
js
sub
pop
rcrl
in
fisubs
mov
test
leave
mov
push
dec
and
sbb
sti
cltd
cltd
aam
out
jbe
mov
ret
mov
out
les
repnz
iret
jmp
sub
adc
xchg
jp
jge
into
fwait
jns
sahf
cs
lret
out
imul
aas
lret
push
dec
or
sbb
das
xchg
sbb
js
or
cmp
cmp
pop
mov
lret
out
les
mov
push
xchg
leave
fcoms
mov
cmc
into
or
jnp
stos
test
lods
in
pop
adc
mov
jge
mov
pusha
divl
xchg
out
mov
cwtl
jmp
clc
pushf
inc
movsb
lds
mov
or
pop
xchg
sbb
sub
enter
lds
inc
pop
push
xchg
dec
sbb
jo
cli
dec
or
cmpb
stos
push
or
dec
fadd
repz
insb
xchg
rclb
mov
pop
out
jbe
sbb
xchg
fisubs
icebp
sti
js
fists
and
dec
setno
nop
fwait
out
sbbl
mov
or
sub
lea
pop
jge
jmp
test
mov
in
ja
pop
dec
mov
pop
lret
mov
mov
and
in
or
or
sbb
dec
int3
jge
out
jmp
push
mov
repz
packssdw
mov
cmp
lods
mov
neg
jmp
jne
sub
test
test
mov
rolb
sub
jle
pop
push
push
jo
mov
lods
dec
sbb
xchg
jecxz
hlt
xchg
dec
sbb
ret
xor
inc
sub
ficomps
mov
addb
pop
aaa
in
fsubrs
inc
pop
adc
push
popa
in
scas
cmp
data16
out
push
icebp
rcll
push
cmc
orb
add
iret
mov
pop
scas
lods
push
aam
dec
test
cmp
hlt
dec
jmp
in
xchg
ret
fs
and
cmpsl
sub
mov
lock
inc
fisubl
stc
mov
into
cmp
adcl
mov
add
and
cmp
pop
push
enter
ret
shlb
xchg
push
fdivrs
adc
mov
fwait
idiv
stc
enter
imul
negb
mov
adc
in
add
sub
sbb
outsl
outsb
sbb
fiaddl
xchg
add
and
mov
sti
jg
je
or
in
lahf
test
push
std
cmpsb
shlb
inc
mov
inc
fbld
lcall
pop
jge
jo
into
cs
sub
ret
mov
imul
and
dec
mov
mov
sub
push
jle
in
sub
cmp
adc
mov
fisubrs
mov
shll
imul
test
cmp
cwtl
call
sub
ds
dec
jb
or
pop
cmpsl
shl
outsl
insb
sahf
jg
insb
or
and
loop
scas
int3
mov
mov
loope
mov
inc
dec
mov
imulb
mov
or
dec
lds
lods
mov
or
shll
lret
popa
sbb
mov
xchg
in
imul
out
inc
les
sbb
and
cltd
fisubrl
xor
pop
hlt
jl
sbb
push
inc
lcall
lds
xor
pop
cmp
cwtl
mov
fbld
dec
jle
cmp
mov
mov
movb
cli
out
insb
mov
push
or
mov
pop
es
xchg
out
xor
push
addb
testl
push
jmp
in
mov
mov
jmp
mov
mov
cmp
dec
js
arpl
subl
cs
cmp
inc
sbb
cmp
das
out
mov
imul
movb
out
xor
data16
ficomps
jne
stc
lret
pop
jbe
ss
adc
cwtl
mov
mov
lahf
sahf
mov
nop
cld
pop
notb
out
sub
mov
jne
add
pop
or
xor
jl
lods
mov
inc
stos
cmp
or
xchg
or
shrl
sbb
cs
aaa
imull
adc
lret
cld
out
sub
aam
mov
fucomip
outsb
sarl
les
cmpsl
add
sub
fcompl
hlt
pop
xor
repnz
mov
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
sub
jb
push
aas
jle
sub
jle
push
cli
mov
mov
jmp
add
inc
lock
movsl
pop
ja
mov
movl
movsl
mov
mov
sbb
mov
bound
jne
and
test
lret
mov
xchg
mov
cmp
arpl
adc
mov
cmpsl
std
out
into
out
mov
mov
sub
aaa
aam
xchg
mov
aad
push
or
and
scas
movsl
jge
repnz
xchg
hlt
dec
into
sti
fldenv
fwait
imul
or
sub
jge
lret
inc
mov
rol
or
sub
xor
sarl
out
xchg
push
jecxz
cmp
mov
xor
int3
bound
add
ret
mov
in
mull
int3
adc
hlt
mov
pop
push
lock
mov
fistl
jle
adc
mov
mov
arpl
iret
js
jp
mov
jae
mov
ret
mov
test
mov
cs
imul
aad
scas
ss
inc
mov
push
bound
inc
add
ss
js
push
mov
rcl
push
xchg
out
call
sti
js
mov
push
sub
xor
cmpsl
movsb
lock
mov
lods
or
jmp
or
xchg
cmp
add
pop
or
mov
mov
or
fcomip
jnp
clc
jg
mov
mov
nop
hlt
add
or
or
lret
dec
in
cmp
fcomps
mov
dec
rolb
dec
jl
es
or
fwait
mov
sub
pop
jl
mov
in
lds
incl
fidivl
sbb
icebp
adc
adc
pop
jg
arpl
or
mov
adc
push
sub
push
sahf
icebp
lret
or
sub
iret
sbb
popf
pop
push
mov
xchg
out
movsb
dec
cmp
test
fbstp
xchg
dec
cmp
ljmp
adcl
cmpsb
jns
sbb
xchg
dec
and
or
push
rclb
cs
mov
fbld
add
insb
xor
mov
nop
push
inc
loope
flds
lret
jnp
sub
or
adc
xchg
in
mov
fwait
inc
mov
jp
cmpsb
adc
fptan
loope
jge
imul
jb
jns
sti
je
adc
xchg
pop
jo
loop
filds
xchg
lret
jbe
mov
or
jle
mov
jg
je
cwtl
ljmp
push
xchg
insb
add
or
jle
sub
in
ss
mov
pusha
into
mov
inc
ds
out
sbb
mov
fisubrs
outsb
ret
iret
mov
adc
lea
in
pop
loope
xchg
pushf
shrl
aas
into
repnz
or
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
cmp
cmp
mov
ret
xchg
fnstsw
fildl
sbb
inc
inc
jnp
adc
fimuls
mov
push
mov
adc
mov
stos
adc
fbstp
xor
cmp
sahf
add
and
in
mov
adc
push
andb
icebp
rep
cltd
push
test
sbb
mov
jo
and
pop
mov
cmp
mov
cmp
ds
xchg
push
or
adc
xor
sub
nop
jg
loop
ret
push
mov
jb
adc
lods
mov
fistps
insb
test
aas
mov
mov
or
in
lahf
cmpsl
xor
mov
push
mov
inc
and
sbb
jno
mov
push
xor
ret
movsl
fcompl
xor
inc
dec
into
push
mov
lds
test
mov
jp
arpl
cmp
mov
push
jle
loopne
mov
aaa
pop
adc
cmp
push
outsl
xor
shrl
or
xor
stos
xor
cwtl
loope
push
mov
lcall
ss
fimull
lcall
mov
push
cmpsb
aas
mov
cmp
adc
xchg
and
lret
mov
stc
lret
dec
dec
adc
fwait
inc
icebp
sbb
cmp
sbb
mov
pop
stos
mov
sbb
xchg
sbbl
pusha
sbb
cmp
xchg
jmp
lock
jge
and
cwtl
xchg
xchg
pop
add
scas
and
mov
inc
lahf
stos
mov
and
push
xchg
fwait
mov
out
jp
sarl
cmp
add
add
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
loop
add
jle
mov
insl
cmp
iret
xor
mov
stos
popl
jmp
push
lods
inc
stc
cs
shlb
sbb
scas
sbb
repnz
shrl
push
sahf
loopne
aaa
imulb
sub
or
sub
xchg
cmpsl
xchg
push
popl
in
pop
inc
push
loopne
adc
inc
push
sbb
pop
dec
lock
int
push
insb
xlat
add
insl
mov
sti
mov
fisubl
inc
cwtl
shll
pop
mov
sbb
inc
std
jae
push
daa
test
loopne
in
push
and
cmp
xchg
imul
and
sbb
out
pop
fxch
mov
adcl
dec
xor
jmp
aaa
jle
popf
cmp
nop
cltd
iret
mov
sub
push
test
divl
lret
dec
jae
inc
mov
loop
jo
mov
xor
daa
icebp
cmp
cmpl
lds
arpl
lea
inc
cmp
into
in
jl
mov
scas
lds
and
cmpsb
imul
shl
aam
or
inc
sub
std
shr
xchg
int3
stos
mov
sbb
push
and
imull
fiadds
outsb
pop
rcrb
movsl
cmp
andb
sub
testl
loope
scas
mov
jno
push
ljmp
dec
jmp
icebp
aam
imul
cmp
enter
jle
push
push
jae
outsl
idiv
xchg
scas
mov
fists
pushl
enter
out
mov
xchg
insl
sub
cmp
xchg
xchg
or
cs
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
mov
int3
arpl
jne
or
out
lahf
xor
sbb
hlt
dec
jb
arpl
ja
arpl
push
sub
add
test
inc
lea
das
popf
cmovs
cmp
es
pushf
sbb
sbb
sbb
lcall
jnp
lds
pushf
cmpb
mov
stos
aam
into
adc
mov
ljmp
add
jg
pusha
mov
sub
add
jnp
push
adc
xor
lds
pop
cmp
add
aad
shll
pushf
xlat
mov
int
icebp
test
js
jg
push
adc
pop
push
fs
idiv
cmpsl
push
inc
sub
adc
aam
sub
xor
test
and
inc
test
in
add
push
test
lret
ss
cmpsl
or
lahf
and
dec
repz
dec
sub
adc
arpl
nop
sbb
lret
mov
aam
lods
inc
test
aad
cld
addr16
inc
dec
dec
push
es
loop
dec
adc
loope
pop
mov
mov
scas
add
push
inc
loopne
xlat
fnstenv
push
mov
mov
fld
and
cltd
dec
sub
push
in
adc
mov
and
mov
loopne
test
imul
cmp
lcall
stos
sub
mov
ljmp
frstor
je
dec
std
out
ror
jecxz
push
or
js
fsubl
push
mov
jne
call
test
jmp
and
in
popa
push
lret
xchg
outsl
sbb
jle
mov
mov
lcall
or
push
inc
icebp
femms
push
ja
vpaddq
dec
out
mov
jge,pn
mov
outsl
jl
mov
sub
and
movsl
movsl
mov
adc
lea
in
push
ret
sub
dec
mov
and
cmp
int3
mov
dec
sbb
mov
dec
dec
lock
arpl
jle
push
mov
pop
mov
pop
cmpsb
nop
mov
mov
xor
xchg
sbb
popa
and
scas
inc
aad
aas
sbb
mov
inc
ljmp
jp
jg
fmuls
ret
lock
and
inc
jmp
fdivrl
cmc
push
adc
out
in
xorb
hlt
popf
insb
fs
cwtl
std
pop
test
stc
jge
fldenv
fwait
mov
out
and
xchg
aaa
daa
fidivs
push
enter
pop
icebp
negb
ss
cmp
int3
mov
cwtl
call
pop
test
jo
decb
sub
mov
call
je
jg
in
ja
pop
mov
lahf
jl
dec
rcrb
mov
stos
jb
sub
inc
mov
push
test
inc
leave
adc
pop
fnstenv
popa
lock
inc
stos
dec
jnp
lahf
xlat
incb
mov
jns
push
push
or
out
cmpsb
mov
cmp
mov
mov
rcrl
and
das
inc
sbbb
pop
dec
or
cld
mov
fdiv
or
pop
mov
add
add
xchg
lcall
fmuls
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
sar
or
jle
add
xor
enter
les
push
mov
lahf
cmp
shll
adcl
repz
push
out
incb
into
rorb
jmp
push
stos
retw
jge
movsb
bound
ja
rcrl
mov
cmp
fldenv
sahf
sbb
mov
xlat
and
rorb
pop
cmp
add
xchg
jecxz
dec
lret
popf
adc
push
jnp
les
pushf
xor
rorb
push
cld
pushf
inc
sbb
scas
sub
aaa
hlt
jb
sbb
lcall
mov
cmpsl
pushf
sub
daa
imul
cld
cmpsl
push
mov
adc
cmpsl
mov
jo
enterw
cmp
in
xchg
jns
xor
add
xchg
jae
sbb
loope
mov
lods
ss
xor
add
pop
or
xchg
lock
mov
jp
negb
adc
or
out
mov
cmp
ljmp
xor
je
pop
es
sub
mov
mov
cld
out
push
je
aaa
inc
test
int
push
mov
out
movsl
cmpl
sbb
sbb
sbb
rclb
sbb
xchg
mov
pop
pop
int
data16
jns
stos
mov
add
cs
xchg
nop
scas
and
lods
lret
movsb
dec
jmp
loope
std
dec
fiadds
cmp
jmp
rorl
std
in
mov
and
sbb
or
mov
out
push
into
shll
push
jle
xor
push
fs
xor
inc
ljmp
lds
jns
mov
mov
jmp
jmp
mov
pushf
fisttpll
int
xor
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
pop
xchg
inc
mov
add
loop
and
add
out
sub
fisubrs
lds
cmpsl
aad
inc
imul
sub
mov
rcrb
add
xchg
and
ss
mulb
and
mov
lcall
pop
sub
das
add
mov
outsb
sub
cld
out
nop
pop
and
lods
rcl
shlb
xor
jbe
and
frstor
jo
mov
out
xchg
loopne
mov
dec
ret
push
into
push
and
shrb
jnp
adc
lcall
add
data16
and
jno,pt
xor
mov
jecxz
lea
xor
xchg
and
sarb
mov
xchg
mov
es
lds
lods
imul
pop
andl
inc
cs
dec
mov
test
mov
shrb
dec
sahf
out
and
in
cmp
hlt
xchg
xor
dec
jbe
push
jecxz
out
sbb
cli
pop
xlat
addr16
mov
sub
xchg
jo
hlt
push
push
pop
iret
dec
mov
stc
xor
mov
ficoml
lea
test
sbb
xor
and
dec
jnp
mov
cltd
lret
ror
jle
push
mov
rcrl
pop
mov
inc
pop
xlat
and
out
ror
mov
fwait
mov
pop
dec
out
or
fsubrs
popa
sti
adc
cli
int3
fildll
iret
into
loopne
pop
fcompl
int3
cwtl
cmpsl
fcoms
test
adc
xchg
or
or
hlt
mov
jno
dec
cmp
enter
int
imul
mov
movsb
lods
pushf
mov
jle
iret
insb
xchg
or
mov
inc
cmpsl
scas
fmull
inc
test
lods
in
mov
mov
mov
stos
call
cwtl
call
xor
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
cltd
sub
into
jle
add
test
lock
cltd
pop
cmc
int
fs
or
xor
push
shll
outsb
lret
pop
or
jmp
loope
stos
jecxz
mov
mov
loopne
test
insb
pop
loopne
mov
into
fisttps
aaa
fsub
or
sbb
jnp
and
fstps
decl
jp
pop
mov
mov
and
or
hlt
cltd
shl
xlat
mov
in
aaa
add
in
mov
aaa
dec
dec
fdivrl
mov
xlat
jp
adc
loopne
mov
imul
jg
xor
packssdw
or
jns
gs
xor
dec
adc
cwtl
cli
adc
fs
movsb
in
or
lret
ret
pop
into
lret
adc
jb
lods
leave
jl
shlb
sarl
cmc
loopne
stos
adc
mov
cmp
adc
adc
lds
lahf
sbb
inc
xchg
in
inc
xchg
cmp
sbb
xchg
inc
mov
loope
xor
inc
lahf
cmp
lods
loopne
inc
dec
inc
pushf
push
cli
fidivrs
jne
mov
fisubrl
cmp
xor
in
cmp
pop
mov
lret
lcall
daa
jbe
movsl
enter
fmuls
ucomiss
mov
or
and
mov
sti
fwait
in
cli
fldt
imul
jns
in
fbld
mov
je
hlt
rolb
add
pushf
cmp
mov
pop
cltd
cwtl
adc
aam
roll
js
and
in
dec
fwait
push
fisttps
or
int3
cld
push
pop
cmpb
dec
out
push
stc
lcall
mov
xor
nop
adc
cli
inc
jb
mov
stc
ja
loope
jmp
js
mov
add
hlt
fistps
lcall
jbe
and
adc
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
adc
xchg
ljmp
int3
jle
add
inc
jle
cmpsb
es
jbe
xchg
rorb
inc
jnp
jno
test
into
push
or
inc
aaa
cmp
aas
xchg
add
test
lret
outsb
push
lcall
cmp
std
jge
sarl
push
push
nop
cltd
fwait
fwait
push
jecxz
push
dec
cmp
leave
sub
adc
iret
push
enter
jmp
push
loopne
push
cli
shll
repz
arpl
mov
aas
add
out
push
xor
adc
loope
out
aam
xchg
lcall
jl
lods
ljmp
jb
xchg
jg
loopne
cli
fs
add
fsubr
aam
jno
pop
xchg
je
stos
pop
std
add
out
pushf
popa
jnp
data16
rclb
call
mov
push
sbb
push
stc
clc
aas
push
cmp
mov
dec
or
jl
jp
ficoml
cmpsb
or
imul
shlb
or
dec
fwait
mov
inc
fistl
jg
mov
call
sarl
cmp
cmp
inc
rcll
push
pop
and
jge
inc
test
cwtl
icebp
fnstenv
rcl
lea
lret
mov
mov
push
cmpsb
sahf
fisubrl
arpl
insl
pushf
sbb
xchg
cltd
push
ud1
ret
or
imull
insb
loop
add
js
sbb
push
gs
sbb
dec
or
mov
nop
push
and
out
outsl
into
mov
mov
push
dec
stos
cs
cmp
xchg
pop
adc
push
xor
jns
sub
cltd
outsl
mov
arpl
pop
dec
scas
push
ss
ss
out
mov
icebp
cmp
cwtl
inc
jecxz
shlb
mov
daa
lahf
and
add
insl
gs
cmp
or
inc
stc
xchg
sub
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
mov
lret
and
jle
mov
sbb
mov
movaps
mov
imul
inc
mov
sub
in
pop
adc
rorb
mov
mov
cmp
mov
jne
mov
push
push
out
movsb
jne
inc
imul
push
and
mov
mov
lahf
repnz
or
repnz
add
cmp
inc
es
popa
fisttpl
pop
sub
pop
lret
adc
into
lahf
dec
push
mov
pop
pop
dec
push
das
or
in
cmpsb
sbb
pop
das
loope
jg
xchg
ljmp
xor
or
das
mov
loop
fisttps
in
popf
test
ja
pop
xchg
pusha
cmpsl
sbb
jecxz
xchg
inc
xchg
fsubrs
cmpsb
daa
jb
mov
adc
sbb
mov
pop
push
outsl
cmc
fsubr
and
or
jmp
ret
sti
icebp
or
jg
push
push
inc
stc
mov
jae
out
xorb
xchg
insb
mov
dec
imul
mov
jle
jbe
inc
out
xor
xchg
mov
test
scas
push
add
mov
push
aad
inc
sahf
or
lcall
jae,pt
shlb
lock
popf
adc
lods
jb
and
and
in
mov
xchg
xchg
add
pop
adcl
adc
dec
fs
sub
pop
mov
xchg
lcall
imul
xchg
test
out
inc
add
inc
add
sbb
push
insb
dec
fisttpll
mov
pop
push
xchg
sub
lds
lahf
pop
imul
pop
mov
mov
xchg
loop
sahf
dec
pop
dec
cmp
cwtl
mov
int
test
dec
jne
lret
rolb
int3
lods
nop
das
adc
ret
aad
pushf
cmpsl
push
sbb
pop
stos
fldenv
stos
pop
sub
add
jnp
or
call
negb
insb
subl
rorl
aaa
inc
add
add
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
iret
into
mov
in
jle
and
jle
out
adc
popa
test
iret
push
popl
add
outsl
nop
addb
mov
test
and
mov
cwtl
sub
popf
adc
iret
xor
xor
mov
mov
mov
aas
dec
imul
mov
push
dec
stos
sbb
push
and
or
jmp
movsl
mov
mov
inc
lods
fistpll
sbb
and
mov
test
push
jns
idiv
andl
jg
es
addr16
mov
loop
repnz
and
leave
call
push
icebp
and
pop
mov
cmp
push
cltd
dec
fcmovu
mov
sbb
sahf
jecxz
pushf
jge,pt
jbe
pop
xchg
jne
and
push
sbbb
sbbl
mov
lods
lods
movsl
lds
mov
push
mov
in
lahf
and
test
insl
mov
mov
pop
into
sub
dec
orl
ljmp
dec
fildl
xchg
fildl
shrl
push
out
mov
or
push
icebp
ret
mov
push
mov
lock
jbe
xlat
es
add
cmp
pop
shl
aaa
mov
outsl
dec
aam
sub
frstor
or
sub
mov
sbb
and
jne
lods
jnp
ja
push
aaa
cs
push
jp
ficomps
and
out
dec
add
sbb
int
jne
jle
fsubrp
mov
shrb
cmp
sub
test
shll
push
adc
cmp
fwait
loop
push
push
stc
jecxz
jno
les
sbb
ret
inc
pop
std
xlat
in
repz
adc
pusha
ror
fwait
dec
ljmp
scas
pushf
ss
jbe
arpl
scas
int
vmovupd
pop
sahf
scas
and
call
jg
xor
pop
ja
push
mov
dec
sub
mov
adc
inc
add
inc
add
outsl
cmp
cmpsl
cmp
jmp
pop
push
jg
xor
add
int3
mov
jle
and
jle
enter
push
loop
lock
es
push
cmc
jno
lods
sti
shlb
lcall
loopne
cmp
pop
daa
xor
cs
popa
mov
cmp
arpl
mov
dec
xlat
repz
pop
sbb
jp
mov
lea
std
dec
push
add
pop
addr16
dec
pushf
pop
pusha
sbb
out
xchg
and
dec
mov
mov
cmp
add
icebp
aas
das
mov
adc
test
out
cmp
inc
daa
or
sbb
imul
rorl
mov
popa
sub
ljmp
icebp
imul
mov
jmp
and
inc
and
inc
push
push
mov
cmp
mov
aam
loop
jae
mov
mov
xor
out
xchg
adc
out
push
aad
pop
fs
inc
outsb
fadds
ds
jno
jb
addr16
addr16
les
outsl
cmp
adc
popf
inc
xchg
pop
popf
cmpsb
sbb
lahf
and
pop
sub
int3
cmc
inc
and
pop
fsubl
inc
and
push
popf
arpl
mov
xchg
xlat
iret
push
out
jle
pop
adc
repnz
in
dec
loopw
ss
xchg
pop
shlb
sub
or
fcomip
iret
lods
mov
cmp
test
iret
rcll
lea
clc
inc
lahf
dec
push
pop
pop
mov
fdivrl
js
inc
rorb
out
lcall
fldt
lea
hlt
insl
cli
sbb
clc
imul
movsl
nop
data16
mov
lods
jp
in
mov
and
popa
sub
out
leave
push
mov
into
loop
push
jg
adc
dec
enter
or
in
sub
fdivl
jle
iret
cmp
ljmp
pop
adc
or
adc
mov
xor
sbb
movsb
outsb
addr16
add
xchg
pop
pop
repnz
std
or
inc
jbe
je
icebp
fists
pusha
dec
inc
lret
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
int3
mov
jle
and
jle
pop
add
insb
xchg
mov
mov
inc
dec
mov
push
adc
pop
adc
push
std
and
scas
std
jge
mov
lods
push
jns
fldt
jae
fidivl
add
dec
xchg
in
mov
adc
adc
in
or
gs
div
aad
ss
jbe
push
and
cli
jmp
dec
jg
dec
mov
pop
push
push
aam
cmp
inc
adc
jne
fildll
pop
cwtl
hlt
out
ret
xor
sbb
push
adc
push
clc
pop
sbb
fcom
push
xchg
mov
and
jp
jecxz
push
sub
inc
jae
adc
loopne
shrb
into
push
cmc
jp
sahf
ficoms
sarb
aad
das
pop
test
shrb
xlat
daa
inc
fwait
sbb
outsl
inc
inc
dec
cld
xor
xchg
imul
test
and
and
shl
dec
in
pop
rcrb
rcrb
adc
loopne
fstps
nop
pop
pop
clc
sbb
push
call
leave
mov
ficompl
addb
push
aad
imul
adc
and
rol
daa
dec
fs
mov
xchg
push
add
cld
mov
and
icebp
hlt
jmp
fisubrl
push
cmp
and
aad
sti
dec
pop
cmc
cmp
mov
pop
or
test
lahf
dec
sti
add
mov
mov
jmp
fnstenv
int3
leave
sub
fidivl
sarb
pxor
jp
push
rcll
jmp
add
popa
cmp
mov
cmp
shrl
add
sbb
and
xchg
add
xchg
stc
mov
stos
xchg
scas
mov
adc
mov
push
std
gs
and
jne
lds
sub
sub
cmp
mov
es
mov
push
and
adcl
pop
or
add
add
lock
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
loop
inc
mov
sarb
and
jle
pop
andb
out
cmp
stos
lcall
gs
int3
test
fwait
add
test
das
inc
jo
es
xor
jno
gs
sbb
jp
pop
lret
clc
sbb
xchg
mull
in
xchg
sub
andl
mov
idiv
mov
test
repz
jo
aad
push
mov
outsl
pop
dec
insb
std
push
lahf
adc
stc
dec
out
cwtl
arpl
inc
xor
jle
lret
rcll
insb
call
sbb
outsl
popa
adc
add
lods
push
fs
mov
inc
subb
insl
and
out
push
and
xor
or
rclb
xor
mov
jo
lods
mov
inc
in
sbb
pop
ret
rclb
ret
jae
sti
mov
xchg
mov
je
fsubl
scas
cmp
cli
data16
rcr
jge
inc
jno
in
dec
xchg
lds
imull
jnp
sub
dec
jmp
cmc
or
cld
pop
arpl
push
clc
andb
xchg
and
sub
and
fistl
xchg
lcall
mov
call
adc
insb
pop
sbb
sub
icebp
jne
mov
push
fsubs
xchg
cs
xchg
mov
or
arpl
or
rorl
cmc
add
dec
or
adc
arpl
push
testl
in
xor
daa
iret
fisubrs
in
inc
cmp
xchg
add
jge
jg
cli
cmp
xorb
js
mov
mov
mov
and
iret
push
lds
sub
jle
lds
sti
inc
cli
xor
scas
inc
push
js
sbb
fwait
outsb
jl
scas
mov
inc
push
jne
xchg
mov
rcr
xor
inc
mov
ffreep
xchg
fwait
cmc
and
push
mov
icebp
adc
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
jnp
lods
mov
outsb
xchg
lea
sub
cmpsb
pop
sbb
xchg
cltd
pop
pop
mov
and
out
shr
rcl
pushf
sbb
pushf
std
cs
mov
lret
mov
mov
daa
or
jl
test
fsubs
out
xchg
loopne
push
lods
pop
push
jg
arpl
jb
add
mov
les
dec
or
cmc
or
ds
bound
jne
hlt
inc
fsubl
and
daa
xor
pop
es
xorl
gs
repz
ss
stos
ljmp
mov
stos
inc
xorl
xor
jae
adc
mov
stos
sti
and
xlat
jne
hlt
or
xor
push
imul
iret
or
inc
fxch
daa
push
out
jnp
lods
and
push
or
test
fstps
inc
nop
xchg
jbe
or
jecxz
sub
ret
insl
add
and
xor
xlat
rol
test
xor
or
jmp
jle
and
or
icebp
fisttps
add
data16
leave
pop
scas
ret
imul
mov
xchg
stc
push
arpl
sub
mov
enter
cli
jns
cwtl
push
push
push
xor
scas
incb
mov
icebp
add
imul
adc
sbb
lret
add
fs
lods
cltd
jo
inc
ficoml
cmp
enter
in
push
add
popa
xchg
mov
dec
push
cmp
xchg
pop
mov
push
insb
push
dec
shl
cmp
imul
xchg
pushf
stos
jge
loopne
push
rcr
mov
pop
mov
adc
jp
mov
cmp
sahf
mov
test
cs
ret
imul
test
jnp
xchg
adc
adc
jl
mov
xor
fnsave
inc
push
enter
test
inc
add
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
data16
fistpll
and
jle
fidivs
add
shr
repnz
rorb
push
out
mov
aaa
hlt
jae
out
adc
cmp
mov
stos
gs
mov
adc
popf
cmp
loop
das
jnp
jp
xchg
adc
sbb
rcl
cmp
insb
mov
cs
dec
dec
rorb
fcmovnb
pop
jne
sub
test
dec
jmp
rol
aam
gs
adc
mov
aaa
sbb
xlat
xchg
enter
js
fs
add
hlt
add
push
mul
mov
jo
repnz
repz
fsubrs
lahf
push
cmp
aam
push
xchg
dec
cmc
icebp
insl
rorb
and
aas
sbb
sub
xor
or
popf
hlt
imul
dec
xlat
sbb
mov
inc
fists
hlt
cwtl
popa
std
subb
test
loope
out
jnp
lcall
pop
add
pop
movsb
iret
inc
inc
xchg
cmp
pop
jg
aaa
jg
cmp
enter
aam
rcrb
sub
adc
aad
movsb
inc
pop
lds
xor
mov
adc
shlb
insl
leave
mov
and
add
push
xor
mov
mov
loope
dec
fidivrl
inc
rclb
jmp
aaa
sbb
lret
xor
or
sub
movsb
leave
iret
js
mov
shlb
adc
inc
es
mov
sbb
test
ret
lods
int3
mov
cmp
ficoms
imul
outsl
out
fwait
push
dec
out
lods
rol
xchg
mov
ss
stos
fldt
mov
cmpsb
fwait
adc
ja
or
jns
adc
sub
mov
popf
inc
jl
xchg
cwtl
adc
inc
xchg
popa
addr16
inc
and
add
jnp
xchg
adc
cmpsb
xchg
xorb
ret
loope
clc
enter
sahf
or
movsl
pop
mov
mov
cwtl
leave
pop
and
js
or
or
jne
jmp
lods
mov
outsb
xorl
pop
popf
lea
jle
jl
jle
adc
scas
out
fldenv
inc
not
lcall
icebp
or
stos
xor
cmpsb
jb
push
or
xchg
push
jle
sahf
pop
dec
mov
cmp
or
pop
aas
icebp
mov
sub
jbe
popl
push
or
mov
or
shll
lret
popa
push
mov
popf
test
pop
fstl
mov
and
outsb
push
cld
adc
cmpsl
out
repnz
mov
insl
addr16
and
shr
sbb
outsb
push
mov
push
cmp
je
sti
inc
pop
jecxz
loope
ja
rcrb
jmp
aad
or
pop
inc
int3
xor
pop
popf
push
pop
push
scas
push
jbe
mov
sar
and
pushl
in
subl
shll
ja
sub
int3
js
xchg
xchg
dec
lret
incb
hlt
push
pop
cmpl
mov
sbb
xchg
cmp
dec
testb
aaa
push
ffreep
in
jns
pusha
pop
xor
shrl
cmp
pop
ret
popa
js
xor
sarb
mov
jmp
aas
cmp
and
movsb
int3
push
leave
out
fwait
aaa
in
sub
adc
dec
mov
pop
and
cmp
cld
mov
cmpsl
pop
inc
or
loope
scas
sub
xchg
or
pop
push
je
mov
inc
inc
fildl
scas
mov
fcompl
mov
subb
insb
scas
aam
push
push
cmp
jb
rcll
fildll
xor
inc
test
mov
mov
lcall
mov
out
into
cmp
push
shlb
xlat
sbb
lods
push
and
and
xchg
sbb
adcl
mov
sub
xor
mov
int
sahf
lcall
xchg
shll
fmull
pop
int
ficoml
xchg
pop
jno
rcrl
xchg
sub
ret
jnp
cmp
loope
xchg
xorb
cwtl
stc
aad
sbb
dec
sbb
cmp
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
aas
call
adc
sahf
cltd
enter
jl
test
jge
test
pop
mov
mov
jnp
adc
fldenv
cltd
dec
adc
insb
push
push
int
inc
aam
xchg
stc
sub
pop
xchg
aad
mov
shrl
pushf
pop
push
mov
daa
cmp
aaa
push
jl
fs
sbbb
sub
fwait
jl
adc
ss
mov
dec
inc
or
hlt
aam
dec
out
mov
shll
mov
sbb
inc
pop
lcall
addb
pop
cmp
mov
les
xor
jno
or
daa
sbb
ret
js
les
mov
push
sbb
rclb
xor
pavgw
cwtl
dec
movl
inc
lea
xchg
dec
fs
rorl
add
stc
pop
xor
push
cltd
pxor
not
clc
je
sub
fcmovnbe
movsl
xor
mov
aaa
call
lods
fidivl
adc
inc
pop
std
negb
mov
call
mov
adc
lcall
inc
push
lods
loop
jns
and
das
gs
push
fnstenv
pop
dec
mov
xor
adc
xchg
out
jle
push
or
cmp
push
mov
pop
add
nop
push
dec
xchg
jbe
repz
clc
dec
outsl
repnz
test
push
cmp
lds
cmp
leave
outsl
push
subl
insb
mov
popf
xor
mov
add
xchg
add
pop
pop
popf
xchg
jbe
daa
cmp
pop
sbb
clc
andb
fistps
insl
lea
pop
ret
push
imul
leave
ficomps
inc
fsub
pop
ficomps
shll
enter
orl
add
movsb
fidivrs
hlt
mov
insl
pop
leave
pop
mov
lds
lahf
leave
sti
cmp
sub
shl
or
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
lcall
jle
jl
jle
enter
mov
aaa
push
lock
filds
mov
or
neg
and
cmc
sub
inc
mov
sub
in
dec
lods
imul
dec
out
movsb
xor
stc
jle
ret
inc
gs
sub
in
js
xchg
mov
test
repnz
imul
test
dec
xchg
xchg
decl
inc
add
cmp
rcrl
adc
or
push
xor
sub
jb
rcr
push
sub
sahf
pushf
adc
lret
and
sub
push
adc
loop
xchg
and
mov
inc
clc
xorl
cwtl
enter
inc
arpl
movsb
lret
jno
mov
sti
pop
mov
inc
lds
not
pop
rclb
loop
adc
jecxz
push
xchg
popl
in
jecxz
jb
lods
xlat
ja
jle
dec
sub
stos
mov
ljmp
xchg
push
adc
mov
push
cltd
push
addr16
push
fildll
mov
inc
inc
loope
bound
pop
push
cmc
fidivl
sarb
dec
fnsave
ds
adc
test
pop
daa
sub
xchg
xor
jmp
sti
aas
in
jge
cmp
popf
dec
inc
sub
push
outsl
mov
pop
fcmovnu
mov
loop
mov
push
mov
mov
outsb
or
xchg
or
jle
add
mov
lret
cmp
mov
jne
xchg
je
pop
xor
test
cmp
clc
xlat
cmp
mov
adc
outsl
jg
out
call
imul
aaa
cld
divb
rcll
int3
testb
sub
das
push
xchg
mov
iret
add
jmp
and
mov
aad
push
subb
fildl
fprem1
gs
sbb
ret
ja,pt
dec
iret
sub
mov
xchg
test
adc
fsubrl
loopne
lea
sub
scas
xlat
cld
mov
lds
outsb
add
fs
aaa
scas
xor
push
sbbl
jmp
lds
popa
mov
fisttpll
and
jle
cmp
cmp
sbb
cmpsl
pop
adc
or
cmp
push
adcb
sbb
xchg
sub
adc
outsb
push
xor
mov
test
cmp
aas
cmp
mov
lea
cmp
jecxz
or
pop
inc
cmpsl
jno
insb
outsl
sbb
js
mov
ss
or
sbb
mov
xchg
sub
jbe
aaa
jae
out
dec
mov
fnstsw
stos
cld
add
jmp
lds
xlat
push
mov
rcrl
aad
add
pop
addr16
mov
jecxz
mov
push
test
jnp
ss
inc
dec
mov
mov
mull
pop
into
repz
sbb
imul
push
or
xchg
aam
jecxz
pop
nop
cli
and
cmp
mov
leavew
sbb
cltd
imul
adc
fstpl
xor
or
mov
fcomps
frstor
pop
mov
repnz
aas
lods
ret
inc
or
mov
xchg
in
mov
xor
sbb
jle
sub
jmp
stos
and
fisubrs
fisttps
jge
mov
inc
pop
stos
sbb
dec
cmc
sub
sbb
aad
fisttps
in
inc
jmp
and
ljmp
mov
xchg
mov
sbb
fxch
pop
mov
call
bound
cmc
xor
jbe
test
lret
in
sbb
pop
hlt
jo
lods
mov
lods
int3
pusha
xor
mov
movsb
dec
sub
loope
rorl
push
sahf
inc
or
adc
fnsave
pop
jb
cmp
in
lock
xor
rclb
and
call
xchg
sub
gs
push
mov
xor
outsb
and
or
in
outsb
out
push
mov
out
lock
adc
jno
mov
pop
mov
fbstp
jl
push
loop
sbb
jp
xchg
mov
or
push
jmp
leave
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
or
and
cmp
jle
cmp
insl
hlt
xor
mov
jp
fiadds
into
push
addl
inc
mov
mov
hlt
xchg
scas
push
inc
pop
pushf
or
sti
and
lcall
fldenv
push
dec
adc
mov
cmp
push
pusha
loopne
call
mov
sub
fldl
punpckhwd
inc
jl,pt
int3
or
xchg
jo
lock
pushf
test
xchg
cmc
sahf
add
les
into
adc
xchg
jp
in
and
xchg
adc
mov
gs
adc
fstps
loope
andb
inc
mov
lret
or
push
xor
mov
pop
leave
testl
loope
pop
shrl
mov
stc
mov
rol
decl
ret
stc
add
lods
mov
out
movl
push
adc
mov
add
push
cmp
scas
jecxz
call
mov
nop
xor
aas
lea
pop
dec
cmp
inc
in
cmp
inc
cmp
inc
jno
dec
fcomps
mov
or
repz
lods
jnp
ret
dec
inc
mov
mov
aas
jge
pop
test
xor
jnp
cmc
addl
and
in
dec
jo
mov
dec
push
dec
xchg
mov
stos
xor
cld
cmp
push
rorl
inc
test
xor
mov
stc
les
inc
in
decl
movsb
mov
pop
lcall
jns
jne
lret
jnp
hlt
and
xchg
cmp
xchg
repnz
push
lods
fs
sub
lahf
aad
mov
jg
stos
movsl
rcr
dec
lahf
aam
mov
roll
jno
loopne
mov
lea
adc
jg
inc
fldenv
inc
fnsetpm(287
mov
cld
clc
pop
and
pop
insb
jno
jno
xchg
jecxz
cmp
loope
incb
pop
notb
iret
sub
sub
lods
push
lea
add
rorb
mov
mov
add
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
jne
lcall
jl
jle
xlat
mov
sbb
adc
xor
cmpsb
lret
hlt
mov
ficoml
sbb
arpl
int
aam
pop
push
pop
xchg
dec
jmp
push
test
bound
xor
pushf
jnp
push
xor
inc
xor
cli
das
mov
scas
clc
inc
ret
scas
sub
fs
addr16
js
pop
fdivrs
push
mov
mov
imul
imul
fnstsw
ret
repnz
stos
into
test
lods
pop
test
cmp
push
sbb
js
std
or
dec
in
and
in
jae
bound
outsl
and
xor
out
hlt
xor
cmp
in
mov
xorl
inc
leave
adcb
fdivs
incb
jbe
push
adc
jecxz
dec
sub
add
scas
push
push
pop
and
pop
bound
in
divb
dec
mov
loop
or
movsl
mov
cli
xchg
sub
sub
jp
xchg
and
lods
mov
pop
repnz
sti
fldcw
lret
mov
clc
pushf
ret
jmp
cmp
stos
sahf
mov
mov
inc
xor
jo
repz
jmp
js
insl
and
dec
lods
sbb
in
mov
sbb
push
xchg
sub
mov
imul
inc
aas
pop
rorl
mov
mov
and
mov
in
call
add
pop
stc
aaa
cmp
mov
pop
push
mov
push
lahf
imul
xchg
addl
mov
jno
je
xchg
lods
ss
mov
mov
out
jno
aad
sub
loopne
add
add
inc
shr
jle
mov
push
out
andl
sbb
hlt
sbb
push
movsb
and
movsl
jg
push
out
dec
mov
stos
push
and
outsl
out
xor
int3
das
lret
loop
cwtl
shll
push
stos
daa
inc
mov
stc
xor
sub
out
clc
scas
int3
mov
mov
lret
sahf
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
mov
out
jle
cmp
outsb
jns
js
pop
pusha
popa
int3
mov
dec
lods
hlt
mov
mov
lahf
dec
out
ret
incl
sti
loope
insb
pop
bnd
add
push
sub
inc
pusha
and
xchg
and
ljmp
int
push
lcall
jb
fwait
loope
stos
fwait
push
mov
cli
cmp
mov
mov
jo
jne
fmuls
test
pop
mov
mov
test
stos
sub
inc
out
mov
sbbb
push
test
cltd
push
nop
mov
jmp
and
lods
fwait
inc
fs
cld
mov
rcl
xchg
xchg
jb
xchg
mov
or
adc
sbb
sbb
xchg
lret
jbe
dec
nop
out
loope
add
in
mov
ljmp
dec
xor
shl
mov
bnd
stos
jnp
cmp
mov
lods
and
adc
ds
inc
push
movsb
aad
mov
lods
mov
outsb
test
insl
xchg
xor
bound
int
mov
mov
push
and
xchg
and
ror
pop
leave
clc
mov
pushf
frstor
lcall
jge
loop
mov
mov
pop
int3
xor
jnp
push
inc
sub
lret
pop
rol
xchg
mov
mov
std
hlt
out
lahf
loope
andb
inc
mov
inc
clc
mov
cmp
lahf
push
loope
stc
dec
out
dec
in
shl
sbb
mov
mov
imul
adc
and
fcomps
shrl
shll
rcrl
in
loopne
xor
cli
jl
dec
ljmp
push
sti
and
push
test
sbb
pushf
push
out
xchg
pop
push
lret
xor
shrl
xchg
sbb
test
push
jo
bound
repnz
popf
mov
rorl
enter
jp
sub
adc
xchg
xor
aad
enter
js
pusha
test
loopne
scas
pop
test
test
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
mov
jle
jl
jle
out
adc
fistl
ror
das
push
out
dec
in
popa
lods
mov
sub
popf
mov
push
sub
mov
xor
shlb
fucom
xchg
aaa
xor
and
arpl
xor
nop
inc
cwtl
iret
pop
mov
push
dec
mov
mov
or
daa
inc
popa
pop
push
subb
es
ret
fwait
imul
aad
push
call
cltd
gs
scas
call
and
and
mov
mov
adc
test
pop
jle
mov
sbb
or
pop
cmp
loop
and
pop
mov
push
push
pop
mov
sub
popf
jl
push
xchg
movsb
cmc
mov
jne
xor
push
frstor
sbb
scas
sub
jle
mov
cld
xchg
cmc
sbb
xor
adc
xchg
int3
outsb
mov
mov
inc
pop
roll
rcrb
mov
or
dec
lock
inc
and
outsb
adc
and
mov
inc
ss
xlat
enter
movsb
lret
outsb
ljmp
das
bound
arpl
xchg
fwait
sub
jp
rorl
data16
sbb
loope
lcall
popa
gs
dec
xchg
push
loopne
add
fwait
inc
sti
arpl
insb
mov
int3
and
adc
or
push
dec
adc
cmp
sbbl
mov
test
xchg
mov
xchg
addr16
xor
mov
add
xchg
cli
mov
xchg
idivl
inc
dec
call
cmp
xchg
lret
pop
pop
jecxz
int
sub
add
bound
xchg
leave
dec
pop
mov
cmpl
pop
pop
push
push
push
mov
ljmp
add
jnp
cmp
xor
jp
sarl
aad
clc
subl
jmp
xlat
test
cmp
loopne
lods
inc
lret
sbb
nop
fnstsw
pop
adc
rcrl
adc
xchg
stos
pop
push
enter
mov
out
daa
xchg
les
ljmp
pop
xor
mov
out
and
push
adc
shl
notl
fistpl
ret
sti
imul
xchg
aaa
inc
add
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
into
mov
jle
cmp
adc
pushf
xchg
data16
pushf
adc
push
orb
imul
nop
inc
lret
dec
ss
bound
cmp
gs
popf
cld
addl
jbe
inc
arpl
mov
sub
enter
lods
ss
cmp
or
pop
mov
pop
jae
clc
or
jb
icebp
test
shld
xor
jne
rolb
push
cmp
fstpl
pusha
es
pop
loopne
out
mov
pushl
xchg
rorb
and
jns
cli
testb
lock
xchg
xor
jl
das
ja
shrl
ja
mov
das
cltd
xchg
xor
pop
rorb
push
rcl
cs
adc
sbb
lret
dec
xchg
movl
add
sub
sti
jg
cwtl
or
sbb
iret
pop
cmpsl
ror
jg
mov
inc
ret
cmpb
jp
cmp
repz
jo
adc
dec
inc
je
push
xchg
ss
fwait
iret
xor
fistpll
mov
in
lret
outsl
popf
in
test
jmp
scas
mov
mov
hlt
xchg
in
push
orl
push
xor
inc
push
dec
dec
adc
out
daa
and
add
aaa
xor
add
jbe
inc
mov
mov
and
loopne
outsl
pop
mov
push
mov
das
dec
out
cmpsb
ja
sub
xor
fs
cld
fisubrl
mov
xor
mov
xchg
outsl
xchg
jb
test
pop
icebp
sbb
cs
mov
mov
fcomp
xor
imul
cmp
stc
ja
mov
popf
aas
icebp
mov
outsl
ljmp
fsubr
xor
mov
add
inc
and
mov
add
xchg
sub
clc
xchg
pop
mov
dec
movsl
jmp
in
cld
hlt
sub
out
jnp
and
cltd
das
int
pop
cmpsb
add
rorl
or
jmp
inc
add
je
add
outsl
cmp
add
add
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
mov
sbb
lret
sahf
sub
cmp
mov
cwtl
or
ret
xor
repnz
inc
or
lods
sti
push
fldl
add
jmp
fucom
and
or
cli
mov
test
push
pusha
dec
mov
mov
lea
xchg
cmp
mov
movsl
push
xchg
xchg
mov
lret
dec
push
iret
outsb
bound
push
mov
inc
push
sub
and
cwtl
adc
cmpsb
shrb
pop
les
pop
push
aam
sbb
fwait
dec
pop
enter
insl
insb
lock
cmp
mov
pushf
dec
push
mov
rclb
in
insl
pop
lock
mov
mov
add
cmp
sub
fcmove
dec
daa
cmp
jbe
shrb
inc
fstl
mov
negb
outsb
popa
pop
lret
ucomiss
mov
jae
add
fmul
jno
loope
aad
movsl
mov
call
and
push
insb
out
push
pop
xor
ds
shll
xchg
mov
pop
hlt
lcall
cmp
mov
add
lds
cmp
pusha
cmp
dec
bnd
xchg
jl
data16
jo
pushf
cmpsl
lods
ds
push
xorb
hlt
shll
insb
mov
jne
cli
leave
and
dec
into
pop
cmp
lahf
lock
xchg
movsb
loope
push
ss
push
roll
sub
bound
pop
xchg
in
and
insb
pop
mov
mov
add
mov
adc
sbb
jne
in
lret
sbb
and
pusha
shll
sub
loope
jp
test
mov
stos
cmovno
outsb
mov
push
push
mov
ja
xchg
push
ja
xchg
movl
cmp
push
popf
ss
ja
lock
xchg
test
mov
cmp
in
ja
shrl
sub
xchg
scas
pusha
pop
and
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
add
das
test
jle
jl
jle
int3
or
or
cmc
sbb
xchg
dec
iret
and
xor
mov
push
test
fdivl
insb
xchg
pushf
inc
or
fiaddl
in
scas
xor
mov
mov
jl
addr16
sbb
movsb
xor
ror
into
fnstcw
test
mov
movsb
leave
xchg
xor
push
sahf
cmpsl
mov
into
ret
add
jb
aam
and
es
sbb
neg
shll
adc
xor
mov
mov
inc
mov
rol
mov
test
fldcw
cmp
push
clc
jo
push
xchg
and
dec
mov
ds
pop
pop
add
stos
dec
test
insb
mov
mov
sti
movsl
or
vpunpckhwd
addr16
jl
pop
jbe
ljmp
loop
inc
adc
push
cwtl
bound
lret
addr16
and
mov
inc
dec
into
pop
orb
mov
mov
aad
mov
cld
fstl
rol
inc
movsb
lds
scas
push
es
sbb
xlat
sub
aam
jg
fimuls
and
call
or
mov
je
mov
cli
inc
mov
sbb
cmp
in
cs
xor
push
js
repz
test
scas
loopne
xor
test
je
stos
dec
xchg
sbb
xor
pop
loope
cs
gs
mov
ja
int3
outsl
addr16
lret
repz
stos
sbb
push
int
mov
out
sub
or
jbe
call
mov
cmpsl
fs
dec
push
test
mov
cld
and
inc
jmp
xor
fxch
ljmp
aas
daa
mov
pop
xchg
mov
mov
xchg
dec
je
push
dec
dec
enter
pop
adc
iret
ficoms
add
rcrb
push
icebp
add
popf
cld
lcall
jecxz
dec
out
scas
rorb
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
cmp
sub
jle
jl
jle
pop
rolb
scas
ret
cmp
call
jmp
sub
jno
jnp
xchg
pop
jecxz
out
rcrb
loopne
fistpll
jbe
and
stos
gs
push
lods
jbe
or
mov
cli
stc
mov
icebp
nop
jp
pop
jg
pop
pop
add
push
test
push
sub
mov
imul
cli
pushf
shrb
clc
mov
mov
inc
xchg
or
rcr
cmpsb
dec
imul
pop
xchg
aad
fadds
testl
xchg
sub
outsl
inc
or
or
cmpsl
lods
fstl
add
push
fwait
das
scas
pop
cmpb
pop
cld
jb
orl
or
mov
pop
enter
ret
inc
inc
ficoms
test
scas
test
adc
inc
ret
enter
cwtl
rcll
dec
sbb
hlt
jb
mov
pop
aaa
mov
mov
or
imul
jo
lret
mov
cmpsb
outsb
leave
cli
and
je
sbb
pop
es
fcompl
out
lods
push
outsb
negl
aaa
xchg
sub
imul
xor
jo
outsb
jo
inc
inc
pop
mov
or
gs
andb
popa
and
into
cld
push
mov
in
data16
and
iret
push
xchg
daa
xchg
movsb
add
imul
addl
xor
mov
xorl
mov
movsb
rorl
in
sub
cmp
adc
jge
pop
scas
movsl
or
pop
or
adc
stos
es
rcrb
dec
rcll
cmpsb
arpl
add
mov
xor
lods
push
mov
lret
mov
fldenv
add
test
mov
lret
xor
xchg
push
scas
popf
stos
gs
inc
jg
xchg
add
adc
xor
xchg
movsl
test
into
add
pop
sbb
rcll
cs
inc
pop
in
or
jl
es
out
orb
push
insl
add
jne
lcall
iret
mov
test
add
arpl
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
fwait
cmc
sub
lock
cmp
lcall
jno
enter
out
inc
pop
cld
imul
sbb
jge
pop
jl
rclb
lods
fnstsw
repnz
cmp
lret
insb
add
test
sahf
push
lret
mov
and
pop
bound
pop
lahf
aas
insl
jnp
sub
popf
rolb
cmc
adc
ret
pop
jge
ss
xor
jbe
sbb
lret
mov
mov
and
test
xchg
test
push
shrb
out
jecxz
es
aam
xorl
sbb
xchg
lret
fistps
aam
out
mov
mov
scas
mov
aas
inc
add
ficoml
add
test
xchg
lods
mov
in
nop
imulb
jae
cmp
cli
ljmp
jo
xor
add
rolb
pop
icebp
data16
mov
hlt
and
ret
cli
andb
sub
insb
lahf
xor
cmpsb
andl
pop
push
add
js
dec
inc
testl
dec
addl
out
mov
push
imul
xchg
rorl
cmp
jno
test
xorl
or
or
inc
negl
data16
xor
stos
cmp
fsubrl
loope
sub
inc
mov
xchg
push
sbb
out
mov
das
mov
mov
or
hlt
dec
jb
xchg
je
jno
sarb
hlt
inc
add
mov
sbb
repz
mov
add
inc
out
sub
rolb
mov
mov
or
push
int3
loopne
mov
ficompl
cmp
out
bound
stos
xchg
fstpl
lret
mov
in
add
aaa
insb
or
mov
add
mov
xchg
push
les
int3
inc
lock
xor
in
gs
cmp
pop
dec
push
js
testl
fcomps
jne
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
cmp
enter
jle
cmp
pushf
mov
inc
fidivrl
mov
push
sub
push
ss
and
aas
and
xchg
in
outsl
dec
mov
icebp
scas
adc
mov
push
xchg
lock
sbb
add
mov
add
shll
enter
fwait
and
mov
fdivl
aaa
sbb
movsb
lea
call
popf
push
mov
les
sub
dec
inc
aas
or
xchg
repz
rcll
jle
sbb
outsl
dec
dec
sub
add
ret
int
adc
mov
and
ja
dec
push
sub
jns
int3
cld
outsb
cmp
add
test
outsb
repnz
jns
or
popa
dec
out
sbb
adc
sbb
ljmp
push
in
repnz
jae
xchg
and
mov
leave
aad
pop
and
testb
mov
xchg
jno
repnz
and
addr16
mov
nop
jmp
fldenv
mov
insb
lret
push
out
pop
pop
and
jbe
mov
lods
inc
xchg
cli
inc
ret
pop
sti
movsb
outsl
or
fsubs
jnp
jecxz
lods
xchg
jnp
ds
aad
cld
xchg
or
mov
add
clts
xor
js
cmpsb
popf
adc
sub
cmp
jae
fisubrs
iret
or
es
cs
out
mov
cltd
xor
inc
out
cmc
loop
jns
rcr
sub
insb
pop
data16
xor
mov
xchg
pop
out
call
ret
pop
inc
push
ljmp
or
mov
fsubrp
sub
inc
sub
xor
popf
cld
jl
jae
dec
mov
sti
mov
push
xor
je
pop
xchg
xchg
cwtl
cmp
mov
mov
sarb
nop
push
sub
sbb
add
dec
jno
loop
sti
jo
or
jmp
add
stos
cmp
fmuls
or
loopne
or
push
cmpsl
mov
jl
addb
inc
mov
cmpsb
lods
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
bound
jle
cmp
movb
push
sbb
arpl
pop
add
enter
cltd
das
xchg
ja
pop
outsl
pop
xchg
scas
sub
test
clc
push
add
movb
cs
popa
adc
mov
or
imul
mov
pop
out
std
xlat
push
in
and
adc
loop
adc
imul
or
jo
or
cltd
in
jne
pop
sbb
jge
xor
push
adc
cmp
mov
jb
xchg
int
or
sbb
and
inc
repnz
scas
clc
adc
cmp
imul
push
jo,pn
sti
sub
ret
outsl
fwait
daa
cld
mov
add
mov
adc
push
cmp
adc
lahf
add
test
stos
mov
lock
jb
jle
and
int3
jecxz
mov
data16
test
cmp
in
push
inc
iret
push
sbb
dec
push
int3
jle
daa
mov
inc
cmp
sbb
daa
popa
sbb
inc
movsb
lcall
mov
jb
sarl
mulb
sub
rcl
inc
mov
das
add
add
in
inc
test
in
mov
scas
push
pop
xchg
icebp
cwtl
or
adc
cmp
aaa
aas
jae
cmp
stos
dec
add
js
daa
negb
push
pop
dec
pop
add
adc
jp
jmp
leave
mov
jl
or
stos
fists
mov
leave
cmc
sub
inc
or
dec
ds
repnz
aam
push
rolb
aad
push
into
cwtl
aas
ucomiss
outsl
sarb
mov
fmul
or
mov
mov
cmc
jbe
loopne
push
imul
jg
inc
pop
cmpsb
es
ljmp
or
lods
test
imul
jne
fstpt
and
loop
add
cld
das
test
es
mov
xor
mov
push
sbbl
or
push
sbb
xchg
cmp
int
std
mov
pop
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
xchg
mov
jle
cmp
inc
movsb
mov
inc
inc
and
fs
mov
pushf
xchg
mov
mov
jnp
test
cmp
out
insb
cwtl
ret
pop
mov
lret
int3
pop
pop
mov
in
aaa
dec
add
pandn
xor
sbb
hlt
insl
pop
push
stos
stc
pop
or
and
and
xchg
orl
lea
push
ret
je
mov
push
pop
ljmp
repnz
inc
fbld
jp
rcrl
xor
ffree
cld
sub
or
mov
inc
cli
xchg
loop
mov
mov
push
inc
mov
push
addb
push
call
movsb
js
xor
xor
sbb
addr16
xchg
xor
sub
jg
sub
cmp
outsb
popa
push
fildll
mov
sbbb
sub
rdtsc
sbb
pushl
insl
fbld
test
push
cmp
popf
xchg
out
sahf
movsb
xor
lcall
test
pop
inc
aam
dec
mov
rol
ret
mov
push
mov
out
popa
inc
popf
mov
and
fwait
adc
inc
dec
mov
dec
cmp
push
mov
mov
or
mov
lret
jae
outsb
scas
idivl
jno
push
push
cld
push
mov
stos
dec
add
std
cli
add
idivb
ja
cmp
mov
lods
cmpb
adc
push
mov
mov
addr16
sahf
and
sbb
iret
addr16
fsubrs
lds
ss
fcoms
jg
fmull
insb
or
in
mov
push
mov
mov
sub
mov
fsubrl
ja
jno
or
cmc
xchg
sub
data16
mov
jns
and
and
shlb
push
jecxz
jp
inc
inc
pop
xor
mov
sbb
cmpsb
push
orb
or
bnd
jl
lods
mov
xor
sbb
shl
xchg
push
ficoms
xor
je
sub
ds
mov
add
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
cld
cmp
jle
jl
jle
inc
lods
cmp
dec
push
jmp
aad
outsb
popa
testb
or
xchg
xchg
adc
push
mov
iret
fsts
adc
and
adc
cs
and
inc
sub
fs
jge
cmc
cmp
xchg
addr16
scas
hlt
mov
pushf
lea
cmp
std
xchg
les
xor
into
shrb
pushf
loopne
lds
xor
lock
seto
or
inc
dec
dec
sbb
xchg
jmp
xchg
and
fisttps
push
or
jno
xchg
push
and
xor
inc
cmp
xadd
cmc
in
outsb
call
dec
jl
sarb
dec
xor
and
loop
ficomps
mov
sbb
add
or
aad
lret
sbb
jae
movsb
xor
push
lcall
stc
sbb
and
push
mov
xor
xor
add
push
imul
mov
push
pop
add
sub
or
xchg
lods
es
shll
pop
ficomps
in
sti
push
lods
adc
aad
sub
mov
inc
insb
jmp
in
and
into
scas
shrl
in
sti
in
xor
mov
cmp
scas
mov
cmp
mov
lods
dec
mov
jbe
push
xor
movsb
push
xlat
sub
dec
arpl
ret
iret
into
cmpsl
out
enter
cmp
popf
and
cs
sbb
or
mov
call
pop
out
add
ret
lock
repnz
mov
mov
rcl
test
dec
jbe
shl
sub
jle
cmpsb
adc
test
xor
mov
sar
bound
xor
inc
out
iret
mov
inc
mov
or
push
lods
mov
pop
xlat
dec
adc
leave
lods
mov
icebp
dec
stos
lock
std
test
push
lcall
lock
inc
fs
inc
popa
pop
aaa
sub
sub
or
and
int
xor
and
inc
aad
xor
cmp
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
add
mov
cmp
movsl
xchg
in
mov
dec
pop
xchg
xchg
int
cs
mov
sbb
aad
sub
sbb
jae
cmp
fxch
shll
neg
stc
mov
pop
xor
fsubrs
cmp
das
pop
jecxz
cwtl
jae
sub
inc
or
push
es
mov
aas
cld
or
dec
mov
add
aaa
aas
cmp
xor
js
pop
sub
andb
xlat
scas
enter
fildll
jl
enter
push
insb
clc
sub
je
pusha
adc
dec
inc
mov
sahf
in
stc
fldenv
js
xchg
add
inc
dec
sub
stos
inc
push
std
lret
mov
mov
loope
cwtl
push
and
in
jle
iret
push
xchg
sub
pop
pop
mov
pop
pop
mov
sbb
popf
sbb
add
test
push
mov
std
xor
and
inc
sti
add
inc
and
xchg
inc
sahf
inc
sub
or
xchg
or
pop
pushf
sbb
ljmp
loopne
xchg
add
enter
shlb
movsl
popf
mov
and
xchg
pop
popf
add
and
jmp
arpl
mov
adc
imul
pop
sbb
sub
daa
adc
fcoms
test
xchg
sbb
jmp
adc
insb
call
ljmp
sti
addr16
and
adc
mov
xchg
add
inc
or
ja
fnstcw
xlat
imul
add
xor
xchg
sub
xchg
dec
adc
fcomps
sti
and
fwait
jge
mov
pop
adc
inc
gs
sub
icebp
and
clc
add
pop
pop
jno
outsb
push
mov
roll
das
rolb
imull
shl
cmpsb
xor
sbb
lahf
dec
xor
loope
sub
or
fidivrs
inc
divl
in
outsl
lods
hlt
test
sbb
cs
add
jp
inc
leave
lret
fstps
fldenv
or
pusha
push
xchg
dec
daa
lock
jne
inc
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcr
lea
jle
jl
jle
lea
enter
insl
ja
cs
sbb
loopne
mov
mov
lods
fidivrs
aad
movsl
out
push
mov
lret
aaa
sub
sti
xor
and
enter
ud1
or
nop
mov
cmp
jae
lods
inc
sub
pop
xchg
leave
and
xchg
sbb
mov
or
frstor
and
out
mov
nop
fadds
out
jb
xor
mov
lea
inc
dec
nop
mov
fucomip
adc
mov
clc
rol
jl
xlat
clc
xlat
pop
jbe
xor
jge
mov
out
outsb
jecxz
xchg
outsb
addb
stos
insb
lea
out
pusha
je
mov
dec
stos
dec
adc
bound
dec
mov
push
adc
or
mov
jmp
and
cs
xor
sub
not
add
out
das
push
cmp
or
bnd
fstps
int
jmp
lcall
hlt
aas
cmpsl
iret
jecxz
push
push
sahf
cmc
xchg
stos
mov
ret
cmp
test
hlt
lgs
clc
enter
sbb
mov
mov
add
cmp
inc
xor
lret
jmp
shrl
iret
stos
mov
test
rclb
xor
clc
fstps
inc
out
jns
push
sti
negl
xchg
ja
inc
movb
popa
jne
lods
mov
bound
pop
insb
pop
add
adc
sbb
out
mov
cmc
mov
xchg
out
outsl
adc
inc
mov
xchg
xlat
orl
mov
cmp
mov
mov
sub
aad
dec
add
cli
xchg
and
adc
in
sub
jmp
or
xchg
pop
push
out
inc
and
outsl
es
adc
pop
divb
pop
add
scas
repnz
mov
or
push
and
pop
mov
inc
shr
push
cwtl
push
or
cmp
addr16
dec
sub
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
cli
aaa
fiadds
jle
sub
bound
ja
and
push
aad
xchg
std
std
mov
xchg
leave
test
push
lahf
cmp
out
pop
fimull
xor
arpl
pushf
fsubl
pusha
mov
jae
les
add
hlt
jne
mov
mov
mov
add
es
sbb
arpl
adc
mov
push
in
jl
push
test
loope
cmp
push
imul
add
push
xchg
sbb
sbb
sub
add
fsub
sub
imull
push
cmp
shlb
jg
jns
jmp
in
out
andl
sbb
inc
fidivrl
mov
in
inc
adc
movsl
mov
iret
xchg
and
jb
nop
cmpsb
aaa
lret
push
jg
outsb
rcrl
enter
push
mov
orl
add
adcb
mov
lret
sbb
and
jno
jae
testl
or
out
mov
xchg
mov
push
test
addb
inc
ret
sbb
mov
pusha
je
mov
test
xchg
loope
cmp
jg
sbb
jo
sti
sbb
mov
mov
arpl
push
hlt
pop
cmp
inc
subb
sub
adc
mov
and
dec
les
mov
inc
cs
jecxz
xor
dec
push
mov
dec
bound
mov
cmpb
mov
jp
testl
movb
int3
mov
in
mov
frstor
xlat
jns
fistpl
pop
or
jl
jmp
mov
push
ja
or
sti
test
xchg
sti
cmp
repz
cld
push
mov
xchg
es
daa
jmp
xchg
adc
cld
pop
push
lahf
adc
add
mov
xchg
fsts
fiadds
jb
cwtl
ret
cmp
xchg
cltd
xor
push
pop
mov
lds
and
dec
push
mov
adc
es
sub
jecxz
ret
mov
push
adc
shr
add
add
mov
cwtl
mov
mov
cmp
mov
cmp
adc
imul
add
jmp
push
lock
jg
div
xor
ficomps
and
jecxz
adc
lret
insb
xor
aas
xchg
sbb
jnp
loope
mov
cld
push
out
inc
cltd
push
shlb
jp
jnp
fwait
mov
aaa
sti
into
jns
into
push
inc
xchg
mov
mov
lea
in
lea
dec
lret
fbld
dec
sbb
xor
dec
out
sahf
and
movsb
sub
sbbb
lcall
lret
aam
sub
jno
adc
dec
sub
and
mov
jns
stos
lock
data16
xchg
or
les
gs
mov
sti
dec
pop
stc
pop
jl
stc
shll
icebp
popa
les
loop
int
loope
iret
and
mov
movsb
arpl
les
mov
negb
test
std
lea
inc
inc
popf
inc
or
aam
cmp
rcrb
inc
adc
pop
or
xchg
lock
push
xor
xor
outsl
insl
arpl
xor
lods
rorl
mov
rcr
lea
adc
jno
aam
mov
rcl
xchg
mov
mov
mov
xor
arpl
jns
inc
cmpsl
xchg
or
add
adc
sbb
mov
push
push
and
and
xchg
ret
ds
sub
bound
out
lock
stos
jp
pop
loop
test
jae
pop
sbb
xchg
repz
sub
aas
test
dec
sti
popf
add
sbb
stos
xor
xor
test
lock
ror
sbb
movb
cmp
pop
sbb
mov
test
sbb
pop
lahf
es
mov
es
lods
inc
cld
fsubs
add
mov
movsb
inc
rcrl
or
xchg
int
xchg
int
clc
push
outsl
bound
jg
ret
sti
mov
cmp
push
mov
pop
das
sti
in
xor
in
and
dec
xchg
push
or
pop
outsb
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
mov
dec
bound
jle
es
popf
mov
aas
mov
int
fs
lcall
mov
inc
js
sub
es
mov
dec
cmpsb
jecxz
lea
cli
faddl
sbb
dec
in
sti
sub
inc
popa
sti
enter
push
addb
sub
mov
cmp
test
mov
cmp
outsl
mov
aas
inc
test
dec
push
inc
repnz
daa
mov
and
cmp
and
dec
xor
test
push
and
sbb
je
neg
cmpl
out
fucom
je
inc
in
scas
sub
cwtl
mov
pop
dec
test
mov
icebp
adc
add
inc
mov
dec
jmp
and
mov
jno
insl
in
pop
jns
dec
pop
ret
in
jno
outsl
push
leave
les
add
and
xchg
and
call
bound
dec
insb
push
lods
xchg
mov
sbb
or
imul
sbb
add
in
jns
popf
lock
inc
sub
mov
mov
lods
daa
add
mov
mov
stos
jl
adc
jge
jb
lahf
mov
pop
pusha
lods
scas
int3
in
inc
fisubl
icebp
inc
mov
jmp
or
cmpsl
std
ja
jl
sbb
arpl
mov
lret
fdivrp
inc
lahf
xchg
adc
lahf
sub
mov
lcall
inc
dec
addr16
sbb
pause
hlt
sarl
sbb
xchg
push
inc
xchg
psadbw
push
subl
cmp
fidivrs
idivb
inc
jmp
and
sub
pusha
les
fisubl
jmp
loopne
mov
xchg
mov
mov
or
out
cs
js
rorb
or
sar
adc
shl
lea
ret
out
movsb
xorb
scas
xchg
mov
lea
cmp
jne
pop
lods
int
xor
mov
jno
cltd
aas
cmp
push
das
cltd
xacquire
mov
dec
pushf
sbb
xchg
sub
xchg
jmp
push
std
dec
sahf
push
push
add
cmp
push
cmp
mov
cmp
pop
dec
loopne
cmp
xor
rorb
lret
movsl
mov
cmc
mov
cmpsb
and
push
mov
rol
push
divb
mov
mov
lock
aam
add
or
das
lcall
sub
pushf
imull
lret
loope
xchg
adc
pop
or
int3
sub
cli
adc
leave
test
enter
lea
and
ss
mov
sbbl
jge
cmp
and
mov
fcoml
mov
dec
adc
imul
or
inc
iret
adc
test
jne
sub
push
pop
cmp
fstl
mov
cmp
xor
jecxz
sub
mov
cmc
out
sub
faddl
pop
sarb
sub
fwait
cwtl
xor
outsl
xor
and
sbb
cmp
push
lret
pop
and
xchg
loopne
xlat
mov
iret
sbb
xchg
ljmp
pop
jge
dec
push
icebp
iret
icebp
fdivs
test
imul
or
xchg
push
mov
lcall
cmp
mov
out
repnz
jno
adc
and
arpl
push
addr16
jo
mov
dec
std
sti
push
aad
ja
push
std
push
pop
lds
in
sub
shrb
mov
adc
loope
mov
clc
dec
or
pop
push
mov
fdiv
out
fldcw
sub
xor
xlat
adc
out
adc
scas
inc
mov
sbb
cmp
xor
adc
jae
iret
insb
sub
mov
lods
data16
xor
jecxz
cmp
pop
mov
jne
in
dec
add
cmp
or
mov
incl
xor
es
or
andl
adc
lock
test
push
cli
or
xor
fadd
imul
sub
call
cmp
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
inc
das
movsb
testb
jle
push
mov
mov
push
xlat
test
sbb
cli
negl
insb
and
jbe
jb
mov
les
adc
add
mov
push
mov
out
mov
adc
xchg
daa
movsl
lcall
push
mov
sbb
jl
arpl
mov
sbb
popa
fnsave
sub
mov
add
sbb
mov
rcrb
pop
and
pop
je
add
fwait
sub
xchg
insl
rorl
pop
mov
cmp
addr16
ss
cmp
pushf
dec
jbe
sub
jne
add
push
adc
adc
xor
popf
ljmp
stc
es
jl
insb
push
out
sbb
xchg
fwait
lahf
inc
in
dec
sub
popl
call
mov
and
add
xchg
inc
int3
inc
mov
aas
lods
pop
mov
adc
push
sub
ss
push
mov
and
adc
adc
xor
daa
dec
daa
push
aad
adc
adc
addr16
sarb
fs
rclb
ja
mov
mov
inc
sub
adc
mov
lahf
mov
pop
push
mov
add
add
and
scas
add
mov
xlat
sbb
ret
and
cmp
test
loopne
mov
dec
or
ret
mov
in
dec
xchg
jbe
jp
push
daa
outsb
das
prefetcht1
mov
xor
adc
shl
sub
in
dec
xchg
testl
xchg
popf
and
inc
ja
insb
adc
mov
push
mov
mov
push
das
xchg
mov
xchg
int3
and
push
out
xchg
push
mov
jp
call
enter
jae
inc
xchg
inc
xchg
dec
xchg
movsl
mov
pop
push
mov
icebp
jl
xchg
decb
pop
mov
ret
sub
es
clc
push
cmp
cld
jnp
and
add
aad
xlat
cli
repz
ljmp
es
mov
cmc
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
gs
mov
jle
cmp
aaa
xchg
and
xchg
jns
movsb
cmp
jbe
mov
inc
sbb
and
int3
fistl
outsl
sahf
sbb
sbb
bnd
xor
stos
inc
pandn
insb
xor
sti
push
push
aam
test
and
das
dec
sub
add
inc
pop
lds
cltd
test
jmp
push
jl
mov
inc
ficoms
in
jo
arpl
xchg
pop
lock
xor
and
test
test
out
push
bound
add
jns
sub
mov
cmpsl
lret
cltd
iret
dec
insb
outsl
into
das
orl
inc
push
jl
push
jg
fmul
out
jb
fldl
fnstsw
jg
pop
or
xchg
inc
in
mov
cmp
ljmp
push
outsb
ja
xchg
jne
mov
popa
xchg
ret
aad
lret
xor
cmp
shr
mov
jno
adc
dec
sub
inc
insb
mov
cmp
push
insl
je
mov
mov
pop
das
jp
rolb
aas
mov
add
nop
adc
or
sbb
out
into
jle
pop
adc
mov
cmpsb
cmp
lret
in
jmp
bound
jnp
lcall
and
xchg
xor
test
out
mov
test
fadds
mov
jecxz
gs
inc
mov
dec
popa
negl
mov
pop
stos
mov
cwtl
fisttps
cltd
test
dec
ja
jle
dec
xlat
pop
aaa
ror
jbe
jne
and
pushf
mov
xchg
enter
jae
or
sub
mov
insb
jno
pop
mov
sbb
inc
jns
ret
icebp
repnz
mov
popa
dec
aad
aad
adc
mov
adc
xchg
mov
sbb
pop
inc
mov
stos
lods
call
mov
jns
jecxz
push
xlat
xchg
cltd
shlb
subb
movsb
jno
sub
fwait
arpl
test
push
cmp
and
cld
gs
std
mov
cmp
out
xor
call
add
or
roll
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
dec
les
xchg
jle
jl,pt
jle
cmc
pop
adc
fstp
inc
add
sbb
dec
xchg
cli
popa
mov
add
sbb
test
sub
cmp
or
dec
mov
inc
mov
and
xchg
mov
subb
enter
stos
data16
and
xchg
cmp
ret
xor
dec
jg
pop
add
push
enter
insl
out
jne
cmpsl
test
imul
adc
jmp
xlat
pop
rcr
and
push
xchg
xchg
push
lods
inc
mov
imul
enter
cltd
shll
ja
cmpsl
lods
imul
scas
out
jno
push
dec
insl
cmpsl
adc
and
push
xor
push
mov
dec
adc
inc
push
outsl
sbb
outsb
and
add
add
out
ret
adc
je
pop
pushf
in
outsl
fisubrs
xchg
pusha
ds
addr16
mov
mov
loop
push
imul
cmp
pushf
add
cmp
mov
mov
add
fiaddl
xlat
and
add
mov
dec
xor
push
in
xor
sbb
cmp
fildll
fdivrs
stc
cld
adc
pop
mov
jp
jp
repz
add
mov
sbb
add
inc
aam
xchg
fidivrl
into
notb
and
loopne
push
scas
inc
jns
stos
inc
cwtl
into
add
mov
orb
sahf
cs
add
cmc
fists
stc
shr
subb
cmp
mov
cli
shlb
xor
push
adc
xchg
es
mov
cltd
sub
xchg
jle
mov
jp
sub
in
mov
adc
sub
add
popf
daa
push
loopne
push
xor
xchg
pushl
dec
jmp
enter
mov
jne
pop
pop
push
and
xorb
mov
into
stc
or
inc
dec
push
inc
push
inc
loop
in
mov
cli
mov
or
scas
gs
icebp
and
shll
insb
mov
aaa
jbe
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
dec
xor
nop
jle
jl,pt
jle
repnz
push
cmp
mov
int
mov
iret
movsl
mov
fdivr
call
fimull
push
adc
jle
and
dec
daa
fisubl
mov
jmp
fimull
fcomi
stos
addr16
jle
dec
jge
orb
xchg
mov
inc
fadds
mov
xchg
push
mov
les
inc
jg
xchg
xchg
jg
jbe
mov
sarl
dec
sub
inc
jge
stos
mov
inc
cli
and
inc
mov
lds
into
ljmp
addr16
jbe
sbb
lcall
mov
aaa
or
mov
push
into
sbb
cld
sbb
or
je
mov
mov
sti
sti
mov
cmp
pop
mov
xor
loop
xchg
xor
or
and
lcall
inc
and
or
fs
mov
jns
adc
call
and
mov
add
xor
add
push
stc
pusha
insl
add
sbb
jg
leave
je
test
addb
push
push
stos
mov
xchg
aas
xchg
sbb
outsb
imulb
mov
inc
add
clc
jle
push
push
ret
sbb
add
push
insb
push
sub
movl
mov
cltd
pop
arpl
aaa
ljmp
cmp
lock
repz
push
lods
imulb
mov
pop
mov
fildll
int
lods
stos
mov
inc
jnp
scas
lods
rolb
inc
adc
orb
inc
inc
and
in
push
jne
push
ss
jge
sub
scas
push
outsl
test
das
push
add
cld
and
gs
jo
adc
jmp
mov
scas
insb
sub
jno
inc
sbb
ljmp
int
adc
pop
sahf
ret
push
mov
mov
clc
lea
shrl
outsb
lock
cmpsb
sub
lock
das
pop
push
test
cmp
rorl
addb
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
ja
aas
adc
leave
clc
daa
adc
movsb
loopne
cld
movsl
fs
mov
mov
mov
dec
fisubrs
or
mov
jecxz
lods
sahf
loop
orb
popa
mov
ds
sub
mov
mov
das
test
add
adc
sub
xchg
mov
dec
mov
mov
or
arpl
out
cmp
sub
into
in
push
imul
test
inc
pop
rol
fnstcw
cmpsb
add
push
pop
ds
xor
cs
sbb
jle
into
pop
lcall
popa
lea
mov
jne
cmp
jp
mov
xchg
adc
notl
sahf
fs
sbb
shll
fsubrs
dec
enter
mov
sub
pop
ljmp
mov
add
push
lcall
iret
push
mov
sbb
std
xor
mov
mov
addb
sub
mov
pop
push
stos
lods
popa
and
cmp
add
pop
sbb
pop
dec
mov
or
jbe
jp
dec
pop
inc
sbb
rcrb
sbb
add
sbb
mov
call
pusha
sbb
and
outsl
inc
fwait
dec
inc
pop
push
cli
in
push
mov
mov
or
sub
fisubs
cmp
aam
cs
imul
clc
cmp
mov
adc
jo
fidivl
out
leave
fldcw
in
inc
or
adc
les
lock
mov
mov
push
jnp
insb
add
divl
je
adc
adc
pop
inc
xchg
fnstsw
xor
mov
mov
div
sbb
jno
pop
and
sbb
pop
dec
imul
mov
arpl
daa
pop
icebp
jno
inc
cmp
push
push
inc
bound
mov
cmc
sarl
or
push
jo
or
mov
addr16
dec
mov
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
negl
mov
pushf
jle
adc
jle
cli
sbb
add
cmpl
dec
mov
je
sub
and
adc
dec
cmpsb
xchg
jnp
mov
add
jnp
xchg
pop
jmp
mov
mov
stos
xlat
inc
pop
in
jecxz
push
inc
sbb
inc
lret
cwtl
add
jl
xor
push
pop
lret
stos
stos
test
stos
dec
repz
add
dec
in
xor
push
outsl
add
sahf
add
xchg
mov
cltd
stos
or
dec
jbe
cmp
jmp
test
sbb
pop
ljmp
inc
hlt
dec
fstps
fcmovbe
std
mov
stc
std
and
aam
push
fistpl
lock
or
jo
rcrb
xor
out
push
lea
ret
push
icebp
jns
repnz
dec
test
mov
mov
push
nop
lcall
adc
xor
leave
add
fwait
mov
lock
jae
iret
mov
or
les
in
sbb
add
mov
mov
and
pop
cmp
and
subl
push
or
mov
jmp
cmp
shll
xor
stos
mov
jb
pop
popf
jle
adc
jle
mov
mov
iret
xchg
ret
adc
hlt
xchg
sbb
mov
cmc
fsubs
sarl
xchg
or
or
pop
add
loopne
iret
pop
pop
xchg
dec
inc
jmp
adc
and
aad
gs
test
stos
inc
lret
mov
pop
mov
jp
and
inc
push
and
adc
test
cli
lea
adc
cmpsl
jl
and
mov
xor
iret
pop
mov
rolb
loopne
xor
out
push
xor
push
fnstcw
push
in
jg
fdivrs
jg
xor
rcr
jmp
inc
fistpll
cmp
popf
jge
dec
repz
ret
inc
roll
cmp
push
lods
lock
dec
or
lret
pop
add
test
sbb
add
mov
inc
mov
pop
xor
fldl
jno
cmp
mov
xchg
arpl
jge
notl
or
mov
loope
sub
jmp
faddl
int
mov
movsb
out
pop
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
mov
lcall
cmp
ret
fcmovne
ss
push
jo
add
pop
pushl
inc
daa
rolb
enter
inc
in
cmpsb
xor
out
sub
shrl
sub
xchg
push
adc
push
mov
out
subb
mov
add
ljmp
add
cmpsl
mov
xor
adc
movsb
inc
mov
fstl
lret
pop
mov
jecxz
clc
inc
xor
add
rclb
inc
and
imul
xchg
xor
aas
mov
int
jg
mov
cmp
sbb
jmp
mov
xor
orb
out
gs
dec
pushf
call
lahf
dec
cmp
shl
filds
aam
movsb
or
mov
call
es
push
pop
xor
mov
mov
in
sub
sti
push
xor
xchg
pop
xlat
mov
mov
loop
insl
ja
out
jne
jp
das
mov
fndisi(8087
insb
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
insb
loope
fs
cwtl
jle
adc
jle
or
and
push
stos
jnp
popl
inc
or
xor
test
push
sbb
lods
clc
out
jnp
xchg
and
push
in
dec
xchg
gs
xlat
stc
ret
outsl
sbb
mov
add
aas
das
or
mov
scas
popa
loope
dec
push
adc
mov
inc
pushl
notl
cmp
stc
add
push
bound
test
imul
xchg
dec
add
std
xor
scas
fs
mov
shr
push
aas
cmp
sbb
adc
jne
ret
int3
jne
lret
push
or
jb
xchg
enter
js
sub
mov
adc
xchg
ljmp
lret
push
and
or
sarb
scas
mov
int3
and
ret
cmp
jmp
lods
mov
sub
imull
repnz
in
jo
insb
out
adc
stos
js
jg
pop
add
adcl
test
sbb
dec
insb
mov
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
jl
mov
adc
jle
cmp
cmp
add
enter
adc
xor
imul
bound
out
xchg
int3
mov
xchg
shrl
out
xlat
inc
scas
jecxz
cmp
add
loopew
in
pop
stos
ss
add
out
lahf
fadds
add
loop
fmulp
adcb
cwtl
jae
shll
lds
or
out
pop
ss
sti
mov
rclb
sbb
lahf
test
outsb
shlb
mov
pop
dec
das
sub
sarl
push
xchg
mov
lods
pop
xchg
mov
sbb
sahf
adc
push
test
jmp
ljmp
mov
ret
loopne
jns
roll
mov
sti
ds
popa
push
and
cmp
sub
xor
dec
cmp
dec
push
pop
loope
ret
push
jmp
repnz
jecxz
add
mov
jb
or
pop
jle
adc
jge
movsb
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
push
je
xchg
push
adc
jns
xchg
stos
subl
xchg
shll
lret
idiv
pop
negb
outsl
dec
sbb
stos
sbb
stos
nop
repz
and
push
sub
das
push
aas
pop
test
ja
mov
movsl
adc
outsb
imul
pop
orb
pop
sub
pop
into
pushf
xor
lahf
mov
or
pop
ret
fsts
pop
and
int
mov
minsd
push
pop
in
cmpb
shrl
sbb
cld
das
xor
mov
mov
mov
inc
xchg
lods
add
push
push
sub
sub
xchg
mov
jo
jge
adc
dec
mov
fcomp
push
ja
outsb
ret
push
pop
add
int
popa
xchg
jp
movsb
mov
fistpll
xchg
add
mov
jne
and
pop
test
jp
sbb
and
repnz
mov
sub
jns
mov
outsl
push
insb
and
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
mov
loop
jle
adc
jle
push
fadds
sahf
stc
pop
push
stos
adc
xlat
mov
addr16
mov
push
jecxz
ss
icebp
in
xor
test
test
in
mov
test
fisubrs
mov
add
in
loope
jl
dec
inc
imul
xor
and
pop
mov
mov
test
out
mov
sarl
jbe,pn
sub
mov
aaa
stos
movsl
mov
add
sub
es
mov
pop
adc
cli
mov
mov
cmp
lds
cmp
subl
movb
xchg
pop
pop
cmp
loopne
leave
fs
outsl
dec
movsl
xor
sbb
loope
stc
sahf
sbb
imul
test
pop
mov
leave
ret
sbb
push
add
sahf
add
push
std
aas
xor
jno
notb
pop
inc
fldl
repz
or
push
push
popa
jno
test
pushf
xor
xchg
sbb
pop
push
testl
pop
sub
ds
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
stos
xchg
jle
shlb
mov
call
jo
inc
jmp
fcomp
fnstenv
dec
hlt
add
lret
add
fbstp
pop
lods
dec
icebp
call
imul
sub
dec
ja
and
orl
or
rcrl
das
dec
xor
mov
and
nop
or
shld
xor
cmp
outsl
in
mov
adc
loop
and
popf
imul
sbb
orl
mov
out
out
fsubl
sbb
cmp
sub
lea
mov
jbe
xchg
es
dec
push
pop
jo
sbb
mov
jle
jns
inc
jge
pop
call
rolb
or
iret
push
iret
lea
adc
in
jmp
lds
pop
xor
std
push
sub
xor
or
cmp
or
jge
push
orb
and
dec
xchg
movl
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
movsl
jle
push
jg
jle
mov
shr
add
stos
rcr
aas
jbe
jl
pop
add
pop
arpl
sbb
sbb
loope
das
jnp
sbb
test
addl
inc
pop
jnp
imul
mov
cwtl
enter
out
xor
ja
mov
es
sbb
inc
lret
xchg
call
pop
lret
dec
xchg
sbb
mov
sbb
sbb
icebp
fmul
add
xor
fists
neg
jg
inc
mov
adc
xchg
sub
sti
rorl
ljmp
sbb
and
out
inc
adc
les
daa
push
cmp
adc
xchg
lock
hlt
lahf
mov
popa
fimuls
into
call
mov
mov
inc
jmp
mov
xor
jne
icebp
or
push
imul
enter
lcall
into
push
pop
xchg
es
adc
fisubs
fdivrl
jns
test
es
inc
mov
pop
xchg
sbb
pop
push
xchg
into
jno
adc
jae
fimull
and
cmp
ret
in
in
pop
cwtl
frstor
mov
cld
mov
pop
iret
scas
jp
mov
xor
inc
insb
in
je
roll
ss
jne
aas
fisubrl
mov
mov
outsl
rcl
push
test
aad
dec
push
in
and
lock
pop
cltd
push
test
xor
mov
sbb
pop
call
inc
adc
jmp
cmc
adc
mov
push
push
xor
pop
leave
mov
call
fstl
ret
shll
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
cmc
outsl
loope
xor
mov
repnz
das
xorl
and
pop
and
push
mov
jg
cmp
cwtl
scas
outsl
decl
ret
xchg
dec
cmp
xchg
rol
out
cmp
pop
inc
mov
ljmp
ret
adc
and
out
nop
dec
scas
loopne
andb
iret
pop
xchg
clc
adc
iret
mov
enter
inc
stos
xor
icebp
aas
push
cld
fldcw
xor
sub
in
fwait
into
repz
mov
or
inc
xchg
sub
fidivrs
cli
loope
xor
mov
aam
or
pop
dec
das
test
mov
mov
inc
sub
icebp
push
pop
ret
shrl
scas
mov
and
dec
dec
into
iret
add
mov
pop
aaa
pusha
or
mov
pushf
bound
call
mov
push
lret
pushf
jo
cld
xor
ljmp
mov
cmp
cmp
jo
addr16
jnp
sbb
clc
pushf
jg
out
dec
and
loopne
popf
push
movsb
call
and
lcall
dec
cld
andb
xchg
mov
popa
jl
sbb
in
xchg
pop
and
mov
test
or
divl
or
rolb
sub
add
mov
xchg
mov
outsb
es
pop
pop
stc
popf
fldenv
xchg
lret
cli
mov
jae
scas
dec
ret
hlt
cmp
jno
roll
dec
pop
cmp
shlb
push
fadd
shll
push
cmp
in
dec
pop
lock
in
adc
loopne
int3
and
xor
cld
xor
sub
in
outsl
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
pop
ljmp
jle
add
xchg
sbb
pop
jae
fnstcw
sub
xor
out
shll
jecxz
aaa
sub
jo
or
or
in
inc
mov
scas
loopne
test
xor
dec
cmp
cmp
jnp,pt
pop
imul
repz
or
jno
adc
lods
das
das
mov
mov
add
sub
movsb
push
push
cltd
fucom
lcall
insb
xchg
jns
in
mov
mov
push
out
inc
mov
int3
imul
mov
fs
add
out
push
sbb
add
sub
lea
sbb
and
inc
or
xchg
lods
xchg
outsb
pop
fwait
call
stos
into
or
push
pop
and
sub
leave
add
dec
sub
in
add
lret
or
loopne
sahf
mov
addl
clc
jecxz
push
mov
or
mov
out
mov
shlb
test
orb
mov
jg
adc
push
mov
lret
lea
orl
cmp
xchg
push
xchg
loop
in
daa
xchg
fstps
inc
std
out
push
jecxz
sub
jbe
dec
pop
xor
inc
outsl
imul
add
sbb
xor
add
mov
pop
popa
shlb
push
adc
jno
pop
lods
inc
adc
stos
and
in
mov
dec
mov
jns
sub
cmp
mov
in
fldcw
dec
mov
mov
xor
int3
cli
insb
in
xchg
outsl
inc
outsb
jns
or
enter
jb
push
add
sbb
pop
ss
dec
bound
addr16
addr16
outsl
enter
push
add
push
cmp
mov
sbb
mov
mov
jnp
push
ret
lods
xchg
nop
jge
stos
mov
sahf
mov
sbb
shrb
inc
jnp
mov
push
cmp
xchg
movsl
adc
add
push
ja
or
push
pop
dec
scas
insl
sub
leave
or
push
ret
insl
sbb
jno
mov
xor
jge
lret
ret
and
inc
ljmp
stos
subl
mov
xchg
decl
sbb
push
pop
dec
or
movb
mov
js
pop
subb
or
hlt
stos
pop
push
jge
xchg
sbb
push
cltd
fucomp
sub
and
divb
fs
iret
lds
mov
cltd
mov
mov
push
mov
push
repz
ss
sbb
dec
pushf
jo
popf
jecxz
push
sub
enter
inc
xor
or
xchg
xorb
andb
test
inc
add
add
add
leave
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
jmp
jl
jle
fs
adc
ret
mov
movsb
mov
or
outsb
fmuls
or
testl
jmp
adc
int3
bound
push
jne
or
dec
xor
mov
decb
mov
imul
adc
cmp
xchg
lret
ffreep
sub
loope
and
sub
inc
movsl
dec
jecxz
add
fisubrs
aad
push
adc
mov
je
xlat
add
jmp
test
mov
jbe
jo
stos
sub
cli
sbb
scas
fcompl
cmpsb
call
xchg
pop
bound
sbbb
jb
push
int
fistpl
adc
mov
push
cmp
push
psubd
jp
nop
jg
xchg
ja
jg
fwait
repnz
loop
or
inc
gs
and
push
popa
jnp,pn
rol
push
popa
pop
inc
addl
fbld
adc
rcrl
jl
negl
lret
cwtl
sbb
cmp
nop
shll
mov
lret
or
add
rclb
add
in
or
out
fldl
xor
pop
or
xlat
insl
mov
ds
shrw
xchg
lods
mov
dec
cmc
pop
cmp
stos
mov
fistps
aaa
mov
xchg
movsl
dec
mov
cmp
mov
test
out
scas
cli
sbb
iret
push
xor
sub
cmpsl
mov
imul
fcoms
cltd
clc
adc
repz
xchg
add
aad
pop
adc
test
je
ret
pop
sbb
or
cltd
jg
jno
movsl
ret
movsb
jmp
mull
roll
stos
pop
orb
push
jg
movsl
int
mov
and
cmpsl
ret
jg
dec
mov
sbb
mov
into
xor
aam
adc
lods
adc
sbb
xchg
jnp
repnz
sbb
out
lods
insb
and
aad
jmp
pop
ja
data16
xor
orb
inc
xchg
lea
movb
lds
aas
xor
push
fnstcw
sbb
fsts
jmp
out
movsl
jne
xchg
mov
daa
aaa
or
push
imul
sbb
pop
pop
popf
cmp
out
scas
nop
ss
insb
fiadds
mov
addr16
sub
inc
nop
or
cmpsb
out
inc
sbb
ficomps
aas
leave
lds
mov
cli
sbb
jbe
rcll
xor
scas
sbb
xchg
sub
push
loopnew
mov
mov
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
stos
shrb
jle
mov
pop
or
pop
inc
test
lea
and
mov
popl
scas
lods
push
adc
stc
not
sub
sbb
dec
jmp
add
mov
or
sub
addb
push
pop
mov
or
push
loope
aam
mov
jge
and
ret
ljmp
mov
push
mov
stc
push
mov
iret
cmpsl
mov
pop
addl
jo
subl
lds
mov
dec
pop
sbb
negl
cwtl
adc
xchg
out
inc
sub
ja
sbb
sbb
insl
jne
das
xchg
loop
mov
mov
pop
lcall
ja
enter
adcb
aaa
divl
icebp
js
mov
pop
int3
add
fcoms
mov
push
mov
jae
mov
insb
sub
xchg
mov
xor
push
imul
xchg
mov
jo
mov
cmp
mov
jo
pop
push
mov
arpl
ss
adc
sub
dec
in
jg
inc
scas
movsl
jbe
adc
sub
pop
pop
in
pop
pop
out
sti
mov
push
adc
addl
fnstsw
mov
xchg
xor
cltd
mov
mov
sarb
push
add
sahf
sbb
xchg
push
cmp
and
jl
scas
jne
popa
or
sahf
cmp
cmpsb
push
shld
mov
imul
scas
in
push
ja
push
xchg
dec
cmp
test
cld
and
mov
cmp
pop
mov
insl
sbb
imul
pop
scas
or
insb
nop
jo
dec
or
mov
add
fdivrs
push
clc
testl
insb
push
sub
dec
add
sbb
subb
test
sub
adc
cli
in
jle
out
cmp
sti
cs
and
bnd
pushf
xchg
push
jl
in
push
pop
push
adc
xor
pop
xor
xchg
insl
pop
xchg
push
cwtl
aas
loope
ljmp
dec
add
addr16
lcall
cmp
cld
mov
xlat
into
xor
inc
pop
ljmp
dec
mov
int3
mov
into
add
js
movsl
fisttpll
jae
repz
xor
mov
fadds
mov
sbb
sar
out
mov
mov
jmp
dec
xchg
jne
in
das
sbb
xchg
subb
fwait
mov
lret
jle
lods
push
cli
aas
sub
cs
add
sahf
stos
pop
cmp
out
adc
les
pop
das
push
push
into
fdivr
in
subl
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
mov
dec
shlb
jle
mov
data16
int
clc
insl
in
fdiv
daa
pop
jnp
mov
fisubs
leave
lods
out
aam
pop
sub
sarl
or
loopne
mov
into
push
pop
adc
mov
lahf
mov
les
mov
pushf
jp
and
inc
xlat
xchg
loop
pop
xchg
jae
test
idiv
shlb
pop
notl
das
aam
jmp
lock
icebp
mov
sbb
ss
mul
mov
push
adc
mull
ja
in
stc
mov
jmp
jb
and
add
repnz
shl
push
xor
clc
adc
xchg
mov
and
mov
push
dec
mov
adc
ja
jae
cmp
pop
xor
lods
std
and
sbb
enter
cmpsl
push
push
loop
jl
xor
call
jecxz
aad
inc
push
add
cld
cwtl
in
fldl
mov
push
in
add
push
pop
scas
loop
mov
je
pop
lcall
push
test
jecxz
sub
in
fisubrs
cs
lahf
fcom
push
test
cmp
pushf
sub
dec
jle
adc
mov
xchg
cmc
inc
pop
imul
and
cwtl
dec
nop
push
pop
out
pop
cmp
fnstenv
insl
jmp
lock
dec
xchg
xchg
outsl
arpl
out
cmp
mov
lahf
inc
xchg
cmp
xchg
xor
mov
mov
pop
add
into
mov
push
xchg
arpl
cmpsl
xor
leave
inc
std
sbb
in
aad
mov
pop
jmp
in
push
or
mov
icebp
xor
sub
mov
pusha
ljmp
cmpsb
pop
call
sbb
sarb
mov
mov
int
push
jl
pop
cmp
sub
push
sub
sbb
popa
stc
test
add
scas
in
idivb
ds
jp
fwait
fs
loop
sbb
sub
and
pop
jb
fwait
mov
imul
repz
movsb
sahf
xchg
ret
mov
lds
out
arpl
test
ljmp
sbb
dec
adc
test
imul
xor
sbb
cld
daa
cwtl
inc
push
lahf
jb
xor
arpl
push
jo
sbb
jnp
pop
jge
cmp
das
dec
adc
inc
xor
fiaddl
cmp
mov
lods
scas
push
in
stos
xchg
neg
mov
outsl
pop
iret
orb
jne
xchg
ret
adc
xchg
xor
or
or
inc
pop
push
fidivs
xchg
loope
sub
jbe
sub
add
les
and
jg
mov
xor
mov
jmp
or
pop
jno
xchg
add
pop
jo
mov
jle
jge
jle
loopne
and
jo
mov
xor
pushf
loopne
pop
sbb
push
xor
imul
in
aad
lea
push
and
dec
mov
addr16
and
nop
inc
xlat
push
aaa
mov
lods
cmpsl
jae,pn
xor
arpl
xchg
push
jp
dec
mov
subb
addl
cli
out
jge
popf
pop
sub
mov
mov
loop
xchg
outsl
push
divb
stos
lcall
xchg
rcrb
iret
icebp
inc
adc
mov
hlt
mov
clc
xor
jmp
or
sub
pop
rcll
jmp
cmc
cmp
repz
and
xchg
cmpsw
imul
rcrb
cli
sbb
popf
sbb
inc
mov
xchg
enter
das
pop
cmp
test
test
add
mov
data16
jae
push
add
cs
mov
pop
scas
add
jo
pop
mov
add
inc
nop
mov
adc
push
cmpsl
mov
add
test
out
dec
adc
xchg
ja
mull
mov
das
pop
cmp
mov
test
add
mov
or
adc
scas
in
scas
sbb
jne
xchg
test
push
pop
ds
out
bound
test
add
xchg
repz
mov
es
and
mov
jp
jno
das
xchg
mov
push
mov
and
sahf
test
lods
pop
dec
pushl
outsl
jge
jp
xor
or
outsl
pop
fisubrl
pop
push
cmp
ss
xor
cmp
sub
xchg
fsubrl
data16
repz
or
push
push
sub
fsts
mov
roll
push
dec
push
pusha
jle
and
fstl
mov
mov
call
rclw
add
ret
scas
sti
dec
push
cmpsl
fwait
or
mov
dec
clc
ljmp
aas
and
sahf
xchg
outsb
xchg
add
xor
mov
jb
cmp
outsl
call
adc
mov
mov
dec
shll
repnz
cwtl
push
scas
ljmp
aad
call
call
sbb
sar
sub
inc
cmp
jmp
nop
inc
pop
ficoms
inc
test
pop
test
jae
mov
pop
xor
sub
out
je
xchg
dec
pop
jg
cli
push
mov
and
cmp
jae
roll
cli
adcb
add
dec
in
cld
ss
jge
cmp
mov
pushf
cli
adc
xlat
sub
clc
sbb
ret
or
stc
fistps
mov
test
dec
adc
enter
sbb
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
inc
cmp
jle
scas
jl
jle
add
sbb
pop
pop
out
cld
jb
xchg
rcrb
mov
add
hlt
shll
pop
test
cmp
das
fists
stos
je
and
xchg
sub
mov
sbb
sbb
mov
popa
pop
mov
mov
int3
lods
dec
mov
jne
dec
adc
int3
fcmovnbe
mov
lods
popa
cmp
adc
xchg
push
icebp
pop
adc
call
shl
jecxz
arpl
fucomp
or
mov
int3
sbb
or
add
pop
aam
sbb
fcmovne
jg
or
mov
movsb
mov
or
xchg
dec
xchg
push
fdivrl
add
imul
lock
mov
in
lret
ds
cmp
repz
sbb
loopne
dec
ret
ret
imul
js
sahf
outsl
and
jmp
adc
arpl
jae
inc
pop
mov
pop
jmp
adc
jbe
lea
int3
mov
dec
mov
mov
aaa
fildll
aaa
lods
and
ds
cmpsb
scas
mov
imul
push
jnp
test
dec
dec
jne
jbe
mov
hlt
inc
xor
adc
mov
and
aad
mov
inc
test
jecxz
idivl
mov
mov
gs
mov
add
fucomp
imul
rclb
lcall
ja
ds
push
push
mov
arpl
mov
stos
xchg
adc
addr16
mov
in
jle
ficompl
jle
aam
data16
ds
jo
sbb
addb
stc
inc
stos
push
sbb
ficomps
sahf
mov
sarl
scas
arpl
insb
pop
push
sbb
cmp
jnp
and
sbb
mov
xor
cmp
or
jg
lret
sbbl
scas
xchg
adc
inc
cs
mov
mov
fimull
mov
movsl
mov
movsb
sub
out
adc
stos
aam
test
call
dec
jno
mov
push
and
jno
pop
inc
fwait
mov
ss
leave
imul
dec
push
adc
sbb
shrl
sub
pop
mov
fs
gs
testl
ja
arpl
mov
es
xlat
add
sbb
int
sbb
int
and
mov
and
int3
inc
xchg
movsb
test
jl
xchg
es
inc
xchg
jle
jge
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
dec
aam
xchg
orb
sti
ffreep
sbb
fmull
pop
sub
aas
rorl
cmp
dec
cltd
dec
out
mov
das
cmp
sti
sub
pushf
lcall
mov
ss
cmp
sahf
ljmp
xchg
mov
mov
or
inc
cmpsl
pop
fcmovnbe
add
dec
add
push
stos
cli
cmp
dec
mov
fnstsw
sahf
loope
cmpl
xchg
mov
push
sub
mov
xchg
and
fwait
cmp
negb
adc
gs
cmp
cmp
es
popf
repnz
or
sarl
add
hlt
dec
loopne
bsf
xchg
mov
std
iret
das
and
popf
div
dec
jb
std
mov
bound
pop
insb
inc
lret
aam
fisubrl
addr16
add
mov
and
dec
push
sbb
arpl
mov
xchg
push
sbb
jge
arpl
cmp
xor
mov
adc
testb
subl
int
inc
shrb
jp
data16
movsb
mov
push
mov
cmp
pop
test
sbb
mov
mov
out
mov
dec
xor
es
out
xor
pop
aad
xchg
js
lahf
dec
mov
xlat
or
fwait
imul
cltd
sub
xor
lock
mov
xchg
in
lds
adc
push
sbb
push
cld
leave
adc
loop
mov
inc
mov
jno
sbb
or
lcall
fisttpl
fsub
repz
andb
and
pop
xor
leave
sub
sbb
ret
push
lods
stos
in
jns
sbb
xchg
in
fsubrs
call
sbb
mov
jmp
dec
loop
shrl
xchg
dec
inc
stc
notl
jge
jns
mov
mov
test
in
xchg
pop
aam
gs
mov
lock
mov
in
ret
dec
icebp
in
loop
aas
cmp
push
lea
enter
adc
lock
jns
sub
insl
jp
adcl
mov
ret
jae
add
imul
decb
dec
sbb
xor
jl
stc
jmp
mov
or
fildll
clc
sub
inc
sarl
jmp
add
fdivl
lock
xchg
pop
jb
fs
mov
jl
jle
pop
push
cmp
mov
xor
mov
lahf
and
in
out
jmp
dec
mov
mov
and
cmpl
test
pop
lds
pop
sbb
xchg
call
dec
dec
daa
lahf
sbb
enter
dec
add
pop
aaa
out
pop
mov
mov
ret
xor
push
sbb
dec
andb
testl
xchg
cmpsb
shlb
jo
cmp
jg
iret
xchg
fwait
push
push
insl
push
mov
das
or
not
test
push
mov
jge
and
or
sbb
ret
or
or
dec
lfs
xor
jmp
stos
jnp
orl
push
ja
icebp
mov
cwtl
inc
cmp
inc
and
imul
adc
pop
pop
pop
fbld
and
fisttpl
out
mov
inc
mov
popa
mov
add
jmp
jmp
mov
int
pop
jo
pop
mov
fmull
pop
jns
mov
dec
push
ficoml
rol
push
adc
mov
in
cmc
mov
jp
dec
cmp
push
stos
test
add
lods
sbb
push
adc
mov
xchg
test
aaa
sub
popl
and
jp
repz
sub
dec
pop
daa
cwtl
popf
shll
jb
dec
test
imul
ss
repz
scas
repz
in
addr16
inc
fsubs
and
mov
xchg
in
push
js
pushl
mov
xlat
mov
jb
mov
cmp
repnz
inc
rcrb
mov
xor
cmp
lret
adc
sbb
popa
stos
push
push
rcrl
insl
lods
jno
adc
int
loopne
and
sbb
inc
ret
cli
xchg
or
mov
daa
orl
fwait
inc
mov
pop
adc
fwait
pop
call
xchg
cmp
push
lahf
jnp
leave
adc
hlt
jo
sti
lcall
xor
out
lods
mov
sti
adc
lods
mov
inc
aam
sub
aam
mulb
js
pop
jp
addr16
mov
sub
mov
gs
out
cmpsb
jae
dec
jle
push
popf
gs
cmp
aas
imul
xchg
sbb
mov
aas
push
cli
loop
jle
andl
nop
es
shll
push
leave
push
inc
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
loopne
mov
jle
dec
mov
ljmp
mov
outsb
mov
xchg
and
jns
call
mov
mov
cmp
orl
in
jp
pushf
jle
push
sub
leave
or
test
push
cmpsb
xor
daa
sub
jns
jmp
sub
popf
mov
sub
pusha
das
xor
insl
adc
jae
xchg
in
outsb
ficoms
inc
mov
dec
sbbb
ljmp
scas
adc
xchg
cmc
iret
shrl
sub
loopne
lods
sbb
movsl
enter
andl
dec
sub
inc
jnp
call
mov
jge
mov
and
fs
inc
push
mov
std
jecxz
pop
cltd
cwtl
jno
mov
xchg
sbb
pop
jnp
fwait
xor
cmc
pop
lret
out
push
cs
inc
inc
test
imul
cs
mov
mov
out
cmpsl
push
dec
jne
mov
ret
inc
movsb
insb
sahf
cmc
add
rcl
scas
popa
scas
xchg
loopne
and
dec
loopne
imul
imul
and
aas
dec
popf
mov
mov
arpl
mov
test
push
adc
ret
cli
xchg
mov
rorb
out
jecxz
jp
jecxz
cmp
shrl
pop
mov
pusha
dec
mov
fnstenv
in
enter
pop
cs
adc
inc
test
nop
mov
inc
jp
sbb
icebp
jno
les
clc
adc
xchg
call
mov
scas
pop
pop
test
rcrb
sub
mov
inc
pop
and
push
xlat
xchg
call
fisttpll
aas
jae
cmpsb
insl
stc
adcl
push
out
and
xorb
sbb
arpl
add
nop
xor
push
mov
pop
popf
leave
or
cmp
cld
inc
insb
xor
mov
inc
push
daa
xchg
lahf
inc
adc
clc
or
sbb
je
lcall
daa
iret
cmp
mov
imul
inc
push
ret
and
xchg
lahf
loopne
xor
push
xorb
cmp
xchg
push
out
jnp
int3
pop
push
shlb
insl
ret
jo
cmovae
pop
aaa
aam
push
mov
sbb
mov
pop
cs
lcall
out
xor
sbb
or
addr16
out
xor
jle
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
mov
loope
inc
jle
scas
jl
jle
or
scas
std
cmpsl
ljmp
jl
mov
jmp
xchg
insl
add
jge
xchg
mov
es
icebp
jbe
pop
fdivl
fwait
inc
pop
pop
cmp
mov
mov
sub
sub
mov
iret
xor
jmp
cmpl
jg
xchg
or
daa
jmp
sbb
xchg
int
mov
jne
fld
insb
repz
je
pop
pop
in
popa
dec
fstl
and
test
paddsw
sbb
sub
hlt
in
mov
test
lock
dec
lock
fistl
sbb
stos
mov
pop
pop
outsl
xchg
lcall
fidivs
test
loopne
mov
xchg
repz
test
testl
inc
xlat
xchg
insb
sbb
sbb
aas
pop
ret
or
dec
pop
jae
pop
sub
stos
pop
inc
inc
test
fwait
xor
xlat
push
lret
enter
push
fmul
xor
lods
sub
push
push
frstor
mov
adc
push
push
add
lds
aam
lret
sub
mov
sub
mov
mov
mov
out
inc
dec
lret
mov
and
data16
cmpsb
fs
data16
lcall
in
inc
mov
inc
out
sub
lret
jo
adc
inc
rcrl
lock
out
jg
bnd
cs
dec
mov
lret
jnp
mov
inc
dec
cmp
mov
adc
pop
sahf
cmp
dec
mov
push
xchg
push
frstor
fldt
out
icebp
fnstcw
xchg
aas
fcmovne
rorl
adc
mov
in
mov
cmp
or
mov
pop
cmc
sub
inc
sub
scas
lock
jp
push
jmp
pop
adc
icebp
pusha
addb
int3
out
inc
and
call
lcall
bound
jmp
shll
mov
jno
add
hlt
pop
pop
ficompl
js
int3
cli
add
xchg
adcb
mov
into
or
icebp
loope
inc
pop
xchg
adc
mov
xchg
dec
popa
inc
cli
sub
hlt
push
jle
inc
dec
aas
mov
or
das
or
jnp
lods
pop
sbb
lds
adc
data16
stos
push
addr16
xor
pusha
mov
dec
nop
mov
les
pop
inc
iret
arpl
cmc
and
addl
sbb
cmp
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
push
cmovns
jle
jl
jle
movl
or
ljmp
mov
fnsave
mov
pushf
pop
adc
das
lods
fstpl
ljmp
lahf
xor
decb
fucomp
add
mov
lret
outsb
xor
xchg
mov
mov
cmp
outsl
push
mov
cmc
inc
ss
divb
jp
and
mov
fwait
scas
shll
push
pusha
sub
fnstcw
imul
cld
stc
loope
lcall
mov
push
mov
mov
ljmp
inc
sub
insb
and
icebp
pop
cmp
push
cmp
leave
adc
popa
xor
jbe
mov
pop
jl
adc
push
bound
nop
push
pop
lds
addb
fdivl
xchg
mov
fists
pop
rolb
pop
pop
jp
movsb
cwtl
add
mov
and
dec
shll
cmp
jmp
pop
inc
jnp
push
push
stos
pop
ds
repz
cli
int
jecxz
jecxz
jle
add
cli
push
or
aad
aam
mov
jb
xchg
cmp
mov
xchg
negl
sbb
or
fiadds
pop
stos
xor
mov
push
loop
enter
in
fldl
pop
dec
into
repnz
or
scas
mov
lods
add
lcall
and
dec
dec
mov
inc
dec
lods
jp
pop
subb
scas
test
mov
lahf
sbb
xchg
imul
mov
out
test
jmp
ret
mov
pop
aas
cmc
movsl
jb
ret
mov
popa
mov
cmpsl
fcomi
fimuls
frstor
sub
jnp
xor
sbb
js
hlt
and
push
xchg
lcall
cli
imul
xor
daa
mov
imul
push
dec
aad
dec
and
xor
jl
out
js
jecxz
les
aad
pop
lahf
mov
out
aaa
dec
add
inc
jae
es
test
lahf
sar
cmp
mov
inc
xchg
cmpsl
dec
and
inc
jmp
iret
jns
jmp
mov
mov
out
sti
and
mov
outsb
jae
movb
xor
lret
push
orl
sbb
add
xchg
dec
loop
mov
sbb
movsb
sahf
lahf
shl
sbb
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
adc
ret
xchg
jle
jg
jle
add
cli
je
lret
fisubl
ljmp
fidivrl
enter
call
cld
ret
cs
add
div
pop
testb
or
inc
or
or
cs
hlt
cwtl
pushf
test
or
jl
mov
xor
fildl
ja
xor
push
xchg
push
dec
aas
sbb
cmp
sbb
out
dec
push
cmpsl
cmp
mov
repz
adc
divb
int
xchg
ret
sub
out
mov
ljmp
fisttps
xchg
loope
leave
fstps
xor
cltd
pop
jnp
iret
cmp
mov
push
mov
or
sbb
subb
arpl
push
adc
rorb
xchg
xchg
adcl
lods
cmc
cmp
test
repz
neg
test
add
dec
fdivrl
repz
stos
popf
jge
mov
pop
push
rolb
repnz
subb
mov
mov
sbb
sub
xchg
das
sub
add
dec
dec
mov
xchg
push
xor
std
cltd
out
js
aam
test
jge
in
imul
jge
mov
test
push
out
pop
in
pop
cli
in
inc
and
mov
out
fdiv
ret
inc
mov
nop
push
mov
cmp
xchg
es
sub
and
jmp
test
add
pop
push
push
mov
ficomps
leave
into
pop
aad
mov
inc
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
ret
inc
dec
jle
movsb
jg
jle
scas
aaa
aas
outsb
data16
pusha
out
testl
mov
aas
gs
cmp
ja
addr16
push
fsubrp
shl
fisttps
clc
push
add
shrl
mov
pop
arpl
clc
test
dec
loop
push
js
stos
pop
mov
mov
xchg
insl
js
jnp
add
mov
adc
mov
popa
sbb
lret
jg
pop
xchg
fbld
mov
mov
pop
cwtl
jae
stc
push
imul
testb
mov
or
iret
and
pop
dec
cmp
pop
aas
mov
pop
sti
loopne
xchg
int3
sti
les
jns
mov
adc
cmp
cmp
jecxz
mov
movsb
mov
iret
lret
or
pusha
push
scas
or
xlat
jge
sbbw
rcr
aas
orl
and
add
pop
push
xor
iret
aad
mov
lea
add
xor
out
idiv
ret
or
add
jp
inc
and
push
imul
xor
dec
mov
xor
xchg
xor
inc
flds
or
push
sub
xchg
and
lahf
push
les
aad
lahf
mov
lods
dec
int3
or
sbb
push
push
jmp
dec
fldenv
dec
xchg
push
in
xor
push
out
loop,pn
cwtl
sahf
out
pop
xchg
xchg
dec
test
orb
pop
jl
bound
jo
add
pop
or
cmp
push
push
popa
push
cld
and
add
add
or
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
das
test
add
add
fsts
data16
cmpsl
dec
jmp
and
add
in
inc
lods
push
insl
xchg
ss
lds
sub
loop
adc
pop
pop
aad
or
mov
push
outsl
rolb
aam
nop
mov
sbb
push
xchg
lods
fdivrs
jnp
or
push
mov
jns
into
das
int3
sub
sub
inc
out
jns
mov
int3
cmp
mov
jge
out
ret
cwtl
inc
adc
movb
repnz
scas
cltd
shlb
xor
push
sti
stos
adc
in
xor
outsl
add
sub
icebp
insl
lea
dec
dec
mov
clc
dec
cs
adc
mov
xchg
mov
pop
je
jg
test
lcall
xor
ja
xor
cmp
adcb
cmpsl
test
or
dec
repz
mov
mov
sbb
inc
mov
test
pop
dec
mov
pop
or
iret
pop
ficoml
in
jle
lcall
jp
rolb
add
add
jbe
adc
rclb
enter
dec
call
mov
xor
add
lcall
fsubrs
insb
push
divl
dec
aad
out
icebp
es
fcmovne
loop
sub
lret
push
jl
sbb
cmc
adcl
popf
add
nop
int
fldl
arpl
push
ror
out
mov
in
mov
es
popl
lcall
mov
imul
fucom
roll
jge
inc
adc
mov
push
pop
push
je
sub
jns
lds
add
mov
cmp
fdivs
adc
adc
call
mov
lods
dec
cmova
pop
mov
xor
mov
lods
pop
or
ds
and
sub
std
mov
scas
pop
lods
xor
push
imul
es
add
add
mov
push
daa
sub
push
in
add
add
add
repnz
pop
or
test
push
push
call
push
rorb
cwtl
pushf
shrb
fbstp
push
xor
hlt
cmp
scas
pop
ret
outsl
sbb
addl
into
loopne
cs
xchg
js
test
mov
pop
xor
dec
and
push
fstl
lret
sbb
sub
jo
dec
mov
inc
and
or
adc
adc
fmuls
add
dec
mov
popa
push
pop
scas
in
aas
insl
xchg
outsb
loope
sub
pop
ljmp
bound
movsl
push
push
rcrl
cmpl
sub
jns
mov
lods
in
int3
push
cltd
jo
push
aad
je
dec
adc
outsl
aas
mov
mov
fsts
jmp
lods
sarl
inc
pop
subl
inc
lret
mov
andl
jae
xchg
ret
push
mov
aad
add
mov
roll
jl
data16
aam
add
add
repz
fwait
add
xor
or
mov
or
out
aaa
aas
inc
mov
sbb
mov
dec
or
sub
jmp
dec
std
xchg
xlat
movsl
movsl
adc
aam
mov
push
xchg
pop
inc
cmpsb
movsb
jmp
test
mov
push
in
push
imul
push
add
and
jo
aam
into
insl
dec
ss
add
sbb
xor
fcomip
dec
mov
stos
pusha
js
popf
add
sbb
inc
stos
popf
ja
mov
int
dec
fdivl
and
in
push
icebp
addb
out
sub
or
pop
cwtl
rcrl
xlat
mov
mov
test
clc
jb
lds
cmp
push
mov
xchg
aaa
mov
sub
pop
pop
push
ret
adc
jecxz
and
jbe
jle
mov
out
or
test
std
add
dec
sbb
fisubrs
inc
test
push
lds
add
inc
or
pop
dec
or
lcall
jnp
aad
add
add
repnz
fdivl
adc
or
lea
aad
or
cmp
ret
jae
int
icebp
out
pop
enter
xchg
xlat
pop
dec
adc
imul
cmc
test
sub
shl
xor
addr16
add
aas
inc
pop
gs
aad
fisubl
pop
dec
push
jl
mov
push
and
bound
mov
jbe
mov
adc
aad
sbb
inc
bound
xor
aas
lahf
repz
adc
nop
inc
pop
xchg
push
cs
cmp
cmc
in
lcall
sub
inc
mov
cld
jno
pop
or
icebp
sarb
pop
jecxz
daa
mov
test
inc
jae
pusha
lret
icebp
popa
fbld
out
out
add
movsl
push
mov
vpaddd
cmp
jno
dec
push
mov
test
and
imul
add
cmc
insl
cmc
out
lcall
enter
dec
xor
lock
add
add
add
sub
pop
inc
inc
neg
rcrl
pop
add
lcall
pop
sbb
mov
jae
mov
mov
test
jno
push
jmp
sub
xchg
jno
xchg
jle
inc
jge
iret
inc
cmp
jbe
dec
push
xchg
push
mov
scas
cmp
xchg
leave
rclb
push
sarl
and
xlat
std
cmpsl
lret
inc
fimuls
pop
sub
je
leave
xchg
adc
push
dec
mov
rcrl
mov
pop
adc
xchg
dec
cmovge
jne
or
loop
test
mov
mov
mov
sahf
into
loopne
or
jb
sbb
sbb
jo
push
inc
in
inc
adc
jne
test
xor
orl
inc
and
fsub
int3
jle
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
and
sub
mov
loope
dec
adc
ljmp
adc
int3
mov
js
sub
sub
dec
mov
push
dec
mov
outsb
arpl
and
xchg
mov
cmpsb
sbb
sbb
push
outsl
out
xchg
daa
gs
jmp
mov
xchg
mov
rcll
or
movsl
cli
js
scas
push
data16
dec
insb
xor
fsubs
fcmovnb
inc
fwait
xchg
ret
dec
mov
jno
stos
push
ret
sti
daa
inc
mov
cs
lahf
outsl
lds
in
push
and
pusha
adc
pusha
jo
xor
push
cmp
test
sbb
jmp
loopne
jns
mov
loop
pop
in
insb
and
push
movsl
mov
in
pop
jmp
jno
mov
scas
pop
out
int3
dec
jle
lret
jp
jae
adc
mov
push
cmp
push
or
and
scas
sti
jle
pop
push
pop
dec
sub
add
add
xchg
or
std
cmp
push
aaa
push
test
in
out
int
jmp
lahf
gs
xchg
cli
rcrb
je
jno
xor
mov
and
in
sbb
hlt
or
fiadds
mov
mov
movsb
ss
mov
sbb
mov
iret
jo
cmp
sbb
xor
inc
sarl
faddl
sub
data16
pop
push
sbbb
push
cwtl
adc
and
gs
mov
sarb
cmp
push
imul
adc
cwtl
neg
inc
fnsave
push
loop
lahf
arpl
xor
sbb
push
inc
int3
test
cmp
mov
dec
imul
hlt
push
sub
fs
ss
inc
movl
xchg
add
mov
mov
jb
in
mov
mov
addr16
lahf
fnstcw
ss
lahf
stc
bound
mov
flds
add
add
adcl
jl
ja,pn
popl
sub
mov
mov
mov
call
aaa
jg
push
int3
addr16
lock
cld
xor
test
or
mov
cmp
rol
icebp
imul
imul
loope
pop
repz
mov
add
scas
fsubrs
or
ljmp
rcll
bound
scas
sbb
dec
dec
aas
push
stos
mov
xchg
pushf
sahf
stos
aad
je
and
out
test
xor
test
in
out
add
clc
fdivl
cld
test
xor
fnstsw
inc
popf
imul
cld
mov
mov
jmp
add
jns
fbstp
scas
add
dec
mov
push
bound
sti
xchg
push
in
cmp
shll
xchg
lret
add
mov
cmp
add
add
push
jl
jle
insb
out
adc
adc
add
add
cmp
sahf
in
xchg
push
loop
jbe
xor
pop
inc
xorb
in
add
sub
pop
inc
cmpsb
ja
fldcw
inc
loop
mov
mov
mov
xor
sti
push
lcall
lds
cltd
jmp
addr16
mov
ret
pop
pop
mov
push
test
int
mov
js
add
mov
rep
inc
pushf
pop
out
push
enter
xor
mov
repz
bound
lds
pushl
push
add
xchg
mov
iret
loopne
lcall
push
popf
lods
inc
insl
add
pop
mov
or
cltd
mov
stos
das
jb
sbb
jmp
jmp
sbb
fs
fs
out
mov
mov
sbb
and
push
lcall
fidivl
jns
jmp
inc
cmp
mov
out
add
add
fwait
mov
in
xor
adc
add
add
add
add
jmp
push
jecxz
stos
mov
dec
dec
je
outsl
into
daa
cmp
aas
mov
or
gs
sub
add
add
pop
fisttpl
rorl
jno
stos
test
inc
jl
pop
mov
cmpsb
xchg
in
or
adc
xchg
adc
sbb
sbbl
pop
add
mov
mov
aas
enter
testb
fcmovb
ljmp
outsb
fs
ds
dec
and
ror
push
hlt
cmpsl
jmp
mov
add
jb
jns
in
outsl
hlt
jnp
jae
mov
xchg
dec
inc
mov
mov
in
jo
idivb
fisubrl
cltd
fdivl
call
add
fdivrp
xchg
and
mov
arpl
fistpl
addb
cmp
or
lods
cmp
mov
into
in
in
xor
add
aaa
data16
jne
mov
lcall
add
add
add
mov
dec
in
imul
inc
std
lea
gs
sub
add
adc
jno
das
nop
popa
je
sub
movl
aas
and
stos
sub
xchg
adc
adc
push
stos
push
pop
test
test
dec
mov
scas
or
loop
sub
icebp
push
mov
mov
jmp
inc
fisubl
fistpll
pop
mov
push
scas
fsubrp
mov
xor
and
mov
adc
loopne
cli
iret
inc
adc
fcomps
mov
sub
es
sbb
fwait
bound
mov
xor
jmp
cmpsl
mov
jle
mov
fisubrl
test
push
icebp
sub
sub
fdivrl
jmp
push
fmull
roll
jbe
mov
push
xchg
mov
adc
call
imul
xchg
or
xor
xlat
stos
jnp
add
jnp
sti
xchg
lahf
mov
negb
or
add
add
add
lcall
fidivrs
pop
adc
js
inc
xor
je
dec
mov
pusha
sub
je
mov
out
push
mov
mov
or
fidivl
push
repnz
add
test
pushf
popa
dec
xor
sub
mov
dec
dec
sub
cltd
in
mov
cmpsl
jecxz
inc
sub
lahf
mov
iret
mov
or
mov
mov
data16
xor
in
enter
in
ret
loope
stos
jns
nop
push
xor
call
mov
push
push
loop
mov
mov
pop
shr
xchg
ret
mov
testb
sub
cmpsl
loop
jp
pusha
xchg
adc
jns
std
jae
sbbb
add
mov
lret
inc
cmp
xor
fcomp
dec
xchg
les
sub
outsb
mov
insl
mov
stc
sub
pop
sarl
mov
pop
adc
add
add
add
mov
test
orb
xchg
sub
insl
addr16
aaa
push
mov
mov
jecxz
sarl
rolb
out
mov
mov
mov
xor
outsl
mov
inc
pop
hlt
jne
pop
pop
pop
loope
jnp
pop
push
pushf
pop
mov
adc
insb
xor
inc
iret
inc
std
xchg
mov
sbb
into
jle
stos
adc
test
inc
fsts
pop
adc
das
push
cmp
mov
jo
ljmp
repnz
mov
cltd
lock
rclb
jle
mov
outsl
testb
cmp
mov
pop
jno
aad
add
leave
cmp
pop
hlt
es
fsubl
mov
out
scas
pop
mov
cmp
ljmp
add
adc
popa
in
aam
xchg
xor
loopne
dec
xlat
jno
cwtl
cmp
add
add
repz
std
repz
clc
mov
add
add
dec
mov
leave
test
xchg
pushf
jecxz
test
scas
sbb
insb
xchg
fisubs
dec
pop
dec
xchg
rorl
dec
jnp
fsubs
dec
test
cmc
cwtl
mov
and
lcall
cmp
push
sbb
sbb
popa
mov
roll
push
xlat
fistps
icebp
ljmp
shll
movsb
sahf
repnz
jae
xor
sahf
mov
sarb
dec
xchg
mov
adc
xchg
sub
loopne
xchg
leave
cmp
mov
clc
inc
inc
mov
mov
xchg
test
int3
xorb
aad
and
test
dec
pusha
adc
repnz
xor
mov
stos
mov
mov
xchg
push
mov
pop
sub
lock
mov
mov
or
int3
mov
lods
negb
xchg
lds
daa
in
sub
cmp
arpl
je
scas
stos
repnz
add
add
add
lods
xor
mov
mov
sub
fucom
ja
mov
lds
iret
ss
out
jno
repz
add
inc
repz
adc
adc
lret
daa
fstpt
stos
rorl
sti
mov
std
and
push
test
aaa
dec
adc
xchg
dec
cli
dec
push
cltd
cli
xor
add
test
dec
xrelease
cmp
xchg
mov
cltd
mov
dec
icebp
mov
dec
sub
push
pop
or
pop
andl
inc
and
dec
push
sbb
push
inc
fidivl
pop
mov
nop
repnz
lods
jmp
insb
inc
test
adc
imull
pop
out
jnp
mov
les
or
fwait
xor
in
inc
ret
shlb
stc
xchg
push
scas
arpl
xchg
pop
clc
xor
push
les
test
mov
jle
xchg
loopne
enter
push
xchg
add
mov
mov
add
loop
add
add
loope
rcr
cs
jno
sub
std
and
mov
push
sbbl
shl
stc
popf
jae
je
add
jmp
pop
addl
jecxz
mov
imul
fwait
cmpsb
mov
in
inc
jecxz
push
sbb
ret
loop
dec
sbb
add
rclb
fdivrl
adc
jge
lahf
pop
or
cmpsl
pop
inc
sbb
loop
push
rdtsc
ret
nop
mov
testb
pushf
hlt
sub
hlt
inc
cmp
inc
xor
roll
mov
pop
cmp
ja
mov
xor
jle
out
dec
push
test
enter
aad
pop
or
fmul
aad
mov
lods
xchg
pop
xor
icebp
or
jg
lret
sub
sbb
iret
imul
xor
dec
push
mov
cmp
out
and
or
js
adc
aas
out
lret
mov
pushf
dec
dec
arpl
dec
jmp
ret
jne
add
add
xchg
in
mov
incl
rcrl
push
repnz
add
add
add
jbe
movsl
data16
and
mov
setae
lock
test
add
popf
cmpsl
sbb
out
pop
aad
cld
mov
iret
pop
stos
outsl
and
insb
xchg
inc
mov
in
cmpsl
adc
push
jae
test
jp
fsubl
scas
stos
call
xchg
xchg
rorl
aam
mov
dec
xchg
mov
outsl
xor
and
xchg
sbb
jg
jne
mov
push
shll
xlat
lret
in
out
loopne
mov
and
push
int3
dec
ljmp
aas
fisttpl
mov
in
iret
adc
push
mov
cs
pushf
or
int
add
shrb
in
test
fistps
cmp
outsl
cmc
scas
int3
out
pop
adc
lock
pop
dec
jns
scas
cli
pusha
lds
lds
lcall
xor
jp
leave
ud2
xchg
mov
add
inc
mov
in
negl
sub
movsb
lret
add
add
add
add
push
into
inc
outsl
dec
popa
test
cmp
adc
repnz
mov
mov
push
jne
shll
cmc
add
addb
inc
roll
pop
mov
cmp
fstpl
xchg
xchg
fidivl
aas
popa
outsl
jle
dec
sbb
inc
sar
jg
and
xchg
jp
or
flds
ja
and
cmpsl
fsub
jne
xchg
sti
mov
lea
les
shr
push
mov
fsubrs
jne
pop
mov
dec
fildll
dec
scas
das
add
subl
iret
cli
pop
xchg
loopne
push
pop
and
outsl
xchg
xchg
loope
fistpll
out
pop
cmp
mov
or
aam
mov
aad
inc
xchg
lods
ss
inc
adc
cmp
loopne
mov
mull
arpl
scas
stos
dec
idiv
lock
pop
xchg
adc
adc
push
jle
mov
cmp
fistpll
stc
dec
push
fcoml
sti
je
in
add
add
dec
sub
out
push
das
cmpl
arpl
ljmp
cmp
loope
mov
gs
fnsave
repnz
xor
dec
push
push
arpl
fsubr
adc
fs
mov
sbb
and
mov
or
push
xorb
scas
inc
push
cli
inc
daa
fisubl
push
in
push
xor
sbb
psrld
in
sbb
or
or
nop
mov
adc
insl
test
jecxz
mov
js
in
fistl
loop
lahf
or
popf
in
jl
mulb
jg
cwtl
test
xchg
xorb
je
popa
jno
insb
sbb
add
cmp
mov
sti
les
arpl
pop
push
jp
adc
lock
imul
or
fistpll
push
add
sub
pop
call
add
add
adc
push
push
push
mov
cld
sub
add
add
add
fwait
or
loop
loopne
pop
out
fs
lret
xor
mov
adc
mov
adc
mov
fmulp
xchg
je
adc
aad
mov
movsl
dec
test
pop
pop
mov
test
clc
and
lahf
mov
adc
popf
into
add
and
dec
popa
mov
int3
stc
sbb
imul
rolb
mov
in
test
lods
adc
mull
xchg
and
inc
xor
cltd
mov
cmc
xor
lock
scas
repz
jg
xchg
lret
xor
dec
xchg
and
insb
sbb
cmp
sarb
sub
jcxz
sub
mov
outsb
or
adc
jnp
adc
rolb
mov
cltd
mov
jle
mov
push
cmp
repz
sub
pop
jne
icebp
cmc
lods
xor
pushf
insl
cmp
add
sub
pushf
mov
add
add
repnz
add
pop
lcall
les
add
add
add
add
ja
aas
out
push
mov
mull
mulb
and
rolb
sti
and
add
jg
ret
mov
jecxz
push
and
insl
test
das
and
mov
pusha
out
loop
mov
sub
or
xchg
mov
aas
in
mov
leave
push
test
cmp
cmp
and
enter
xchg
jb
push
inc
mov
push
ret
dec
mov
jmp
popf
cmc
or
mov
mov
in
mov
inc
jnp
add
cmc
in
xchg
sbb
mov
cwtl
outsl
aaa
mov
fs
cmp
xor
mov
mov
enter
jle
mov
or
xchg
sbb
sbb
xlat
add
mov
mov
cmpsl
pop
or
notb
or
loopne
movsl
cltd
xchg
xchg
jns
add
add
mov
push
decl
jb
imul
add
mov
lret
or
in
iret
push
cmc
dec
stos
idivb
xchg
jns
jl
imul
jp
jl
mov
loopne
cld
jne
pushf
in
pushf
xchg
out
mov
pop
mov
cld
dec
sti
jo
adc
push
cmpl
and
mov
stos
cmp
inc
or
xor
push
cs
mov
dec
aad
inc
sub
je
push
jge
mov
pop
and
das
sti
sbb
iret
popa
adc
icebp
sub
inc
test
jns
jns
call
cmp
xlat
out
icebp
add
ficoml
pusha
fisttpll
inc
outsb
lods
cwtl
bound
cli
es
hlt
jbe
jp
xchg
pop
mov
inc
addb
jle
xor
test
rclb
loop
outsl
push
push
cmp
dec
mov
aam
into
push
jmp
push
pop
sbb
div
push
out
call
outsl
or
push
adc
and
cmp
sti
fsubp
inc
push
sub
sarl
add
add
add
imul
mov
sub
das
push
in
mov
fcompl
dec
push
nop
ljmp
js
in
movsb
push
push
cltd
scas
mov
push
mov
fsubs
insl
out
or
inc
pop
ja
xor
cs
rcrb
or
pusha
dec
hlt
addr16
std
and
jge
ret
jp
in
push
inc
repnz
mov
out
ja
xchg
mov
lea
ds
jle
das
push
div
xchg
orb
mov
xchg
shl
and
sub
cltd
sbb
ret
push
fs
iret
pop
push
add
sahf
inc
icebp
or
pop
stc
stos
push
dec
pop
mov
lahf
jbe
and
popa
sub
cwtl
sbb
push
into
and
into
aam
inc
jg
push
dec
in
add
outsl
dec
out
loopne
inc
lret
mov
adc
enter
repnz
std
adc
jecxz
pushf
mov
jo
pop
jno
sbb
add
add
outsb
xor
mov
lcall
ljmp
mov
ret
sbb
cmp
add
mov
mov
cld
jno
fmuls
daa
pop
dec
cmpl
add
inc
pop
cmp
mov
xchg
mov
cld
repnz
cmp
data16
test
sbb
shlb
dec
popf
test
xchg
mov
loopne
loope
cli
rcll
jbe
and
push
call
inc
popf
push
je
sarl
mov
mov
xor
and
sub
jno
or
repnz
outsb
or
pushf
jne
cmp
sub
mov
loop
cmp
pop
in
inc
out
test
add
xor
gs
fcompl
out
ds
gs
xchg
je
loop
enter
lret
inc
sti
jo
das
call
std
ljmp
or
push
jmp
mov
push
int
sti
lret
add
add
inc
ror
lock
jnp
xor
xchg
xor
add
add
add
mov
js
int3
dec
dec
or
xchg
out
lods
pop
rorb
and
and
iret
add
pop
fwait
xchg
pushf
fisubrs
and
pop
repz
add
push
shrb
jae
mov
ljmp
fidivs
xor
inc
sbb
xor
fistps
dec
xor
dec
pop
add
sahf
inc
je
in
xchg
xchg
dec
movsb
pop
inc
outsl
sub
lea
or
mov
in
test
ds
push
dec
inc
leave
imul
dec
inc
sbb
mov
roll
loope
mov
cwtl
bound
mov
mov
and
and
movl
mov
mov
sbb
sub
daa
roll
out
cli
jo
pop
xchg
aaa
mov
adc
pop
testb
lea
jne
xor
int
push
or
add
scas
pop
sub
mov
cwtl
push
lahf
pop
insb
mov
and
pop
das
mov
add
repz
fisubs
ret
cmp
inc
in
add
add
add
push
hlt
mov
bound
or
cmc
lcall
out
and
adc
pop
inc
stos
cltd
ficompl
in
rorb
int3
add
jg
leave
fdivs
dec
xor
int3
ficoml
jb
and
and
cmp
or
fwait
cmp
jg
aad
aam
js
clc
jmp
add
out
mov
fisttpl
dec
loope
inc
gs
pop
mov
mov
enter
dec
xchg
sub
xchg
or
and
xchg
lods
cltd
xor
gs
jo
cmpsl
or
add
es
sub
lds
and
jbe
pusha
ljmp
js
test
pop
repnz
xchg
mov
movsb
lret
divl
loope
outsl
out
cwtl
out
pop
dec
stos
xchg
nop
cmpsb
fisttps
sub
add
add
out
sbb
fildll
out
in
add
add
add
sti
inc
test
outsb
and
push
mov
mov
lret
dec
add
test
sbbl
pop
jecxz
lods
jecxz
xor
clc
xor
aaa
stos
pop
cld
inc
icebp
jae
int3
out
pop
lock
pop
cmc
into
cmp
cmp
into
xor
push
push
shlb
cmp
xchg
mov
adc
lret
ds
mov
and
mov
cmp
sub
insl
xchg
scas
push
movsl
mov
divl
push
pop
and
movsb
adc
jnp
fidivrl
mov
inc
lahf
enter
enter
push
lret
push
dec
xor
push
inc
xchg
js
mov
xor
cmpsb
adc
dec
sbb
outsb
in
sub
cmpsb
dec
push
ss
sub
test
ljmp
pop
lret
pushl
shlb
push
gs
xchg
insb
addr16
mov
jo
imul
add
scas
push
repz
cmc
scas
sub
mov
dec
out
add
add
add
arpl
adc
subb
and
mov
mov
mov
lcall
xor
xchg
mov
int3
daa
dec
imul
jne
push
test
das
adc
sbb
pop
mov
ret
add
add
std
nop
or
sbb
push
xor
or
mov
into
in
add
out
xchg
cmp
sub
sarb
xor
xor
int3
fnstsw
pop
imul
lcall
test
movsl
cwtl
lea
xchg
mov
adc
call
sub
mov
mov
mov
push
cmpsl
test
inc
or
pusha
sub
jbe
cmp
cwtl
idivb
sub
xchg
push
idiv
loop
jl
xor
mov
inc
loope
and
divb
insl
xorl
add
pusha
rorb
cmpsb
mov
sti
jno
out
add
add
add
sbb
repnz
imul
popf
or
push
inc
call
push
add
jl
xlat
subb
call
push
ffree
or
test
sbb
loope
mov
repnz
mov
das
add
dec
stc
das
cmp
push
or
sbb
movsl
inc
out
or
jnp
arpl
mov
leave
lret
arpl
dec
pop
stos
push
call
hlt
rorb
call
sub
xor
dec
inc
adc
dec
inc
int
sub
jmp
adc
out
adc
pop
popa
call
push
dec
int
loop
cmp
fldenv
push
push
and
or
negl
mov
cltd
jae
addb
mov
push
loope
ljmp
lcall
stos
mov
sti
lret
or
popf
push
jmp
sahf
stos
je
test
pop
jae
scas
stc
adc
ret
fcompl
scas
sbb
add
add
gs
testl
insb
repz
add
add
push
fldl
mov
cltd
dec
rcl
dec
btr
dec
dec
mov
js
sar
and
add
orl
or
ja
ljmp
rcr
or
and
add
jmp
jns
add
dec
xchg
popa
ss
mov
lahf
popl
or
pushf
ret
cs
das
lcall
popf
push
ret
cmp
dec
popa
push
lea
fnstcw
or
jne
fs
sahf
enter
iret
in
movsb
xor
push
dec
pop
jl
xchg
xor
dec
or
rsqrtps
out
and
mov
and
out
xor
fdivl
mov
popf
lods
mov
cld
or
inc
push
aam
pop
movsl
mov
cmp
in
and
jne
or
and
push
or
hlt
cmc
add
jp
xchg
xor
dec
cmp
add
add
xchg
mov
mov
pop
das
stos
dec
lret
icebp
add
add
add
mov
dec
in
adc
stos
scas
dec
xchg
adc
pop
aad
sbb
js
adc
sahf
lods
mov
dec
pop
jns
pushf
sbb
xor
outsl
mov
hlt
mov
mov
test
jae
dec
inc
add
rorb
or
sti
lea
xor
mov
pushf
lds
cmp
aam
mov
cmpsl
iret
mov
add
ror
jnp
push
out
pop
adc
xor
in
pop
xchg
popa
setp
es
push
cmpsl
inc
sahf
jle
xor
pop
xlat
push
adc
cmpsb
aad
pop
in
outsb
push
arpl
adc
cmp
xor
jnp
jns
add
push
push
in
xchg
jge
push
fcmovnb
imul
aas
xchg
scas
push
or
hlt
cmpsl
jae
push
mov
loope
inc
repz
mov
stos
jb
or
clc
stc
fisttps
movsb
push
add
mov
fucomi
xor
jge,pt
repnz
add
add
push
ret
fwait
push
push
sub
or
mov
and
pop
incl
into
or
jg
clc
jmp
cmp
ret
mov
mov
cmp
dec
cmpsl
popa
stc
outsl
fwait
cmp
insl
test
xlat
adc
sub
shr
es
out
fisttps
pop
or
push
outsl
ss
sub
xor
or
fidivs
popf
mov
dec
jns
xlat
movsb
aaa
pusha
mov
in
or
scas
jg
ja
mov
fwait
jbe
mov
shrb
test
bswap
pop
sbb
jbe
dec
jns
xchg
add
sub
popl
push
sub
test
inc
ljmp
and
cmc
xor
add
mov
jecxz
jb
cltd
jae
sub
shl
orb
lret
filds
mov
aam
or
pop
xchg
ss
xor
add
add
push
inc
pop
jns
aas
loopne
sub
sub
pusha
repz
add
add
mov
addl
sub
es
test
jae
inc
cli
into
adc
sysexit
cs
test
mov
xor
stos
cwtl
push
nop
push
sbb
inc
imul
xchg
xchg
xor
mov
ficoms
lock
xor
out
pushl
jo
jmp
jecxz
push
mov
pop
xchg
scas
adc
cs
imul
ja
mov
loope
test
ret
sbb
flds
mov
leave
or
xchg
aam
xor
mov
cmp
stos
lcall
sbb
mov
push
cs
mov
out
sub
sbb
push
imul
test
push
mov
or
call
mov
fwait
xor
adc
aaa
nop
scas
inc
xorb
or
push
and
and
pop
cmc
popf
sbb
pop
dec
adc
popa
cmpsb
sbb
jnp
mov
jnp
jecxz
fs
add
add
add
and
lods
pop
les
xor
xchg
or
cli
and
cmp
int3
mov
cli
mov
sub
inc
inc
pop
pop
fldt
test
mov
mov
ror
popa
out
movsw
out
xchg
push
enter
sub
push
jo
xor
dec
leave
pushf
mov
jl
fidivrl
das
cmpsb
push
or
cmc
scas
pop
sahf
addr16
addr16
sti
jg
imul
enter
fsubl
mov
test
cmp
mov
mov
mov
arpl
sbb
lds
mov
jmp
pusha
push
data16
xchg
repnz
sbb
loope
dec
mov
aas
test
fisttpl
pop
sub
sbb
lret
or
mov
push
mov
fcmovne
in
jb
mov
sub
popa
rorl
gs
xchg
jg
push
fwait
lcall
andb
jno
pop
dec
leave
adc
int3
es
hlt
pop
pop
jno
movsb
int
sbb
and
into
dec
inc
imul
gs
ror
push
add
add
mov
lock
xchg
cmp
addr16
cmp
es
mov
xorb
cmp
arpl
jbe
jbe
inc
xchg
data16
adc
jno
xchg
mov
inc
and
cli
fimull
add
cld
fs
cld
add
aam
sti
xor
pop
pop
inc
sub
add
fmuls
loop
mov
adc
mov
clc
cmp
or
movsb
pmulhw
xor
sub
push
xlat
mov
into
fidivs
pop
inc
dec
push
jle
imul
mov
in
dec
lret
fmulp
test
pop
js
lret
ret
test
sbb
adc
cwtl
and
adc
nop
idivb
out
loope
nop
dec
fbld
std
in
adc
mov
add
in
lret
es
js
mov
sub
dec
imul
adc
push
insb
xchg
ds
xchg
mov
idivl
jge
cltd
hlt
insb
testb
add
add
shr
inc
xchg
sahf
int
pop
or
mov
push
inc
mov
adc
dec
push
inc
out
jne
fs
mov
cltd
rcrb
xchg
loopne
mov
push
in
sub
or
sub
mov
test
and
jns
jp
inc
lock
push
cld
imul
push
movsb
pop
sub
inc
xchg
movsb
sub
add
jmp
ljmp
pop
inc
pop
lods
add
sub
mov
push
out
inc
lock
sbb
scas
dec
dec
test
pop
addb
inc
fstps
inc
jo
mov
jg
add
jnp
mov
adc
push
cmp
mov
dec
cmp
inc
cmc
pushf
mov
mov
fmulp
push
sub
dec
lahf
aad
ds
addr16
test
or
jbe
repz
sbb
test
mov
ficoml
testl
add
push
shll
push
xor
mov
lcall
in
add
nop
pop
lcall
mov
add
sub
insl
pop
pop
adc
inc
mov
lods
xorps
pop
fidivl
xor
mov
cmpsb
mov
sub
insl
mov
sub
cmp
xchg
fcomps
xor
scas
xchg
mov
es
inc
and
push
jp
in
repnz
or
stc
push
dec
sahf
push
mov
push
push
sub
arpl
add
push
jle
mov
mov
sbb
mov
xchg
lcall
ljmp
and
push
pop
nop
sub
int
scas
lds
jle
or
jbe
add
cltd
push
cmp
or
adc
dec
adc
pop
xchg
insl
sbb
orl
push
jno
gs
jmp
imul
lahf
repnz
test
and
je
add
add
add
gs
scas
pop
pop
in
mov
repnz
add
and
add
pop
mov
jo
xor
cmp
pop
cmc
test
call
in
add
mov
int3
ret
lods
mov
mov
and
xchg
sahf
sbb
jp
lcall
repnz
mov
mov
aas
jo
test
dec
xor
mov
into
lcall
add
shlb
inc
add
daa
push
xor
test
das
sub
pop
or
ret
lds
test
mov
mov
add
cmp
mov
jl
jge
lock
xor
cmp
ss
js
nop
xor
adcb
dec
cmp
call
sbb
mov
push
daa
cmp
dec
push
fidivs
ljmp
pop
cmp
lahf
mov
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
mov
pause
js
add
add
add
das
cmp
mov
and
ds
sbb
test
mov
mov
cmpsb
push
decl
scas
in
and
jecxz
adc
sti
les
aad
and
fcompl
dec
and
loopne
or
add
xchg
adcb
or
xchg
repz
popf
pop
pop
mov
out
movsb
xchg
stc
movsl
daa
sti
xlat
dec
lcall
mov
cmpsl
outsl
adc
imulb
lock
inc
lret
sbb
loopne
xor
xorb
mov
ljmp
jnp
loopne
in
jbe
sbb
pop
mov
pop
insl
icebp
loope
mov
adc
lahf
jno
fs
fldt
inc
push
les
adc
std
in
test
mov
loope
mov
or
sti
addr16
int3
inc
sub
in
cmovnp
dec
and
mov
addr16
loop
add
mov
mov
rorl
mov
mov
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
shl
pop
pop
mov
popa
add
mov
mov
sub
je
sub
cmc
dec
and
or
ret
lret
test
subl
insb
and
dec
imul
pop
pavgw
dec
mov
pushf
xchg
mov
fwait
push
push
adc
loope
fcmove
mov
add
xchg
pop
idivl
add
stc
daa
stc
adc
xor
jecxz
ljmp
arpl
inc
pop
repnz
sub
loop
xor
inc
sarl
insl
cmp
inc
pop
sbb
mov
xchg
cmp
adc
add
add
aad
add
jge
push
add
ret
bnd
sub
jbe
lea
cmp
test
fs
mov
sti
mov
jno
insb
js
xchg
add
test
repz
inc
loop
push
pop
rcll
lds
jbe
dec
mov
push
inc
mov
iret
and
add
add
aam
int
aaa
das
aam
pop
mov
cmp
add
add
jb
loope
ja
sub
mov
or
aaa
sub
cltd
inc
sub
nop
xor
gs
xchg
fisubrl
scas
adc
inc
xchg
outsb
cld
pushf
adc
inc
jmp
xchg
fnsave
adc
movsl
insb
call
sahf
cmc
shll
inc
popf
xchg
in
shlb
mov
push
or
adc
call
sub
jmp
cmp
hlt
test
add
xlat
or
stos
jl
test
mov
hlt
sbbb
add
or
incl
sbb
inc
push
xchg
xchg
loope
je
leave
push
je
inc
clc
xor
sbbl
mov
cmc
in
push
rolb
shlb
add
mov
add
call
frstor
or
pop
arpl
addr16
sub
ljmp
add
add
xchg
xlat
cmp
mov
mov
adcl
jle
int3
stos
scas
inc
xor
dec
fcmovnb
push
movb
mov
sub
inc
mov
out
aas
and
adc
add
or
mov
out
shll
mov
xchg
or
addl
enter
jp
fdivrs
outsb
pop
cmpsb
test
lcall
cmpsb
push
stc
xchg
hlt
adc
and
mov
jbe
jnp
inc
fistps
out
out
das
fs
jg
fs
iret
or
adc
repnz
sbb
fiadds
rcrb
and
jbe
and
pop
sub
mov
add
out
loop
and
add
sub
ljmp
and
test
mov
push
inc
iret
negl
sub
jge
sbb
int
push
mov
nop
push
pop
lahf
inc
daa
mov
addr16
jge
daa
ljmp
add
add
out
out
pushl
xchg
xor
fidivrl
call
add
add
jne
sub
xor
sub
jne
popf
mov
sub
mov
scas
pop
sbb
mov
add
lahf
jge
mov
das
cwtl
xorb
lock
jle
and
xorl
cmp
dec
and
push
je
mov
lea
jp
add
mov
pop
shll
jo
pop
or
and
ja
sbb
mov
sbb
xor
xor
out
pop
test
pop
mov
and
push
mov
mov
sbb
sbb
or
and
es
std
and
cld
leave
mov
adc
mov
pop
inc
inc
pop
mov
popa
xor
sub
xchg
mov
fcmovbe
add
aam
or
cmp
fldt
dec
mov
gs
cmpl
push
test
push
scas
mov
cmpsl
xchg
mov
add
add
add
xor
sub
dec
mov
adc
inc
ret
sub
xchg
mov
fs
push
adc
push
or
adc
out
lea
fidivrs
jbe
push
cmc
leave
push
stos
jmp
inc
mov
sbb
pop
mov
pop
arpl
bnd
jo
adc
popf
out
push
jne
mov
mov
cld
mov
scas
xchg
sbb
flds
jg
lret
xchg
insl
dec
push
xchg
loopne
mov
les
outsl
jbe
into
lret
addr16
mov
loopne
clc
or
je
lods
scas
mov
xchg
mov
loope
clc
shll
mov
or
jmp
add
cs
cmp
addr16
mov
push
dec
lahf
push
ds
ret
lret
dec
jge
test
push
xor
test
cmp
aaa
xchg
and
movsl
mov
mov
mov
popf
jnp
incl
add
add
sub
pop
daa
cmc
pop
shlb
pushl
or
jecxz
sbb
mov
mov
pop
int
push
ret
inc
xchg
addr16
das
mov
orb
mov
shlb
pop
dec
push
das
rcll
or
jbe
dec
ja
ss
and
icebp
push
loopne
xor
bound
or
movb
mov
cwtl
imul
mov
xor
aaa
xor
cltd
lret
shll
in
push
cli
sahf
push
ja
pop
lret
add
scas
popa
stos
pop
push
cltd
arpl
xlat
jge
daa
jge,pt
insl
loop
inc
xchg
pop
adc
push
mov
sti
out
rorb
cld
push
ret
dec
push
push
cmp
test
push
fcmovne
push
pop
mov
jnp
sub
sbb
xchg
add
sbb
jne
lds
cld
lahf
test
add
add
mov
push
jg
mov
push
add
add
add
mov
addr16
mov
cmp
add
mov
pop
aad
mov
insl
xchg
and
sbb
inc
push
push
lock
lret
push
fsubrs
shrl
aaa
cmpsb
imul
cmp
cs
push
push
or
ficoml
mov
inc
mov
cmpsb
push
in
push
cmc
in
ds
rcl
je
mov
sub
sbb
aas
dec
pusha
pushf
adc
mov
mov
aaa
nop
and
aad
outsb
jp
sub
sbb
xorl
xlat
cltd
ret
sbb
repz
and
adc
jne
sbbl
or
pushf
nop
xchg
mov
iret
stos
inc
out
je
mov
push
icebp
sti
mov
in
fsubl
mov
mov
jne
add
jge
cli
je
gs
rclb
pusha
mov
arpl
fdivrl
insl
inc
sbb
mov
add
add
mov
mov
lods
imul
xorb
jns
add
add
add
shl
mov
fsts
insl
pop
pop
mov
mov
mov
push
ret
push
int3
scas
cmpsl
in
inc
push
pop
nop
pop
mov
into
jl
lahf
pmaddwd
xchg
mov
imul
or
aam
sub
fnsave
sbb
mov
add
lret
outsb
mov
or
popa
mov
xchg
dec
int
mov
mov
or
inc
rorl
divb
sbb
int
pop
test
sub
dec
jno
movsb
or
jbe
jae
mov
jae
push
or
aam
or
into
fcmovnu
mov
es
movsb
or
and
sbb
nop
lret
jmp
fs
mov
mov
ss
addr16
dec
enter
mov
dec
test
mov
xchg
cld
xchg
mov
push
sub
sarb
cmp
call
adc
xchg
sub
scas
or
cmp
gs
add
add
lock
mov
push
pop
aad
pop
sahf
test
mov
xor
mov
fsubrl
jmp
push
outsb
ja
lahf
sub
and
out
orl
das
vpsrlvd
out
mov
inc
cmpl
push
sub
mov
insl
sub
cmc
jecxz
lahf
sbb
mov
icebp
pusha
jecxz
xor
je
xchg
test
stc
inc
sbbb
mov
jo
add
sti
mov
mov
or
bound
mov
ds
inc
cmc
sub
ljmp
mov
out
pop
fisubl
outsl
jb
push
jp
and
push
push
loopne
mov
enter
sbb
fldt
pop
testb
or
or
mov
add
movsl
test
mov
out
xchg
push
sub
lea
add
add
hlt
fbld
add
mov
add
add
add
in
stos
inc
outsb
mov
fistpl
fiadds
sbb
hlt
push
aas
dec
aad
mov
pop
jl
jl
stos
nop
mov
aas
xchg
add
and
mov
in
add
xor
push
stos
cwtl
push
mov
daa
inc
inc
outsl
mov
mov
jmp
lea
movsl
int
inc
cmp
lret
and
fucomp
mov
jg
mov
test
mov
mov
cmc
and
inc
arpl
std
jp
out
loop
mull
call
loope
jl
fmull
jno
adc
inc
mov
prefetcht2
sbbl
ret
lea
aas
sbb
inc
adc
dec
ljmp
xchg
sbb
and
sbb
sahf
in
and
lahf
add
les
lret
sbb
add
add
into
fwait
add
mov
shld
add
add
cli
dec
cmp
mov
dec
fwait
xchg
xchg
jmp
add
negb
mov
repz
ss
add
dec
iret
cwtl
push
ds
aam
in
mov
das
cld
dec
in
mov
push
shrl
xchg
jo
push
pop
mov
add
movsb
pop
movsb
insl
or
jl
inc
jne
and
xor
icebp
fadds
inc
mov
subl
push
lahf
movsl
inc
cmpsl
jecxz
push
push
jno
icebp
xchg
aad
and
mov
insb
cmp
int3
jae
test
loopne
sub
dec
js
cmp
mov
pop
xor
out
std
test
scas
int3
jns
add
into
notb
xchg
pop
ret
arpl
xchg
xchg
xor
movsl
aas
xchg
and
gs
pop
add
int
js
pop
sub
dec
mov
data16
data16
xor
push
mov
ret
std
shlb
add
add
xor
mov
pop
sarb
in
fwait
dec
nop
test
add
add
add
cmc
les
sbb
pop
mov
dec
mov
lods
or
dec
icebp
mov
orl
adc
insb
mov
lret
cli
mov
fstpl
jb
lahf
lds
sub
sub
rcl
sbb
jne
xor
lcall
rorb
sbb
push
leave
ficompl
xor
jp
pop
popa
outsb
aaa
in
push
fdivrl
in
mov
sub
adc
mov
mov
subb
adc
sbb
dec
sub
loope
fisttpl
aas
popl
inc
inc
bound
xchg
adc
jo
shlb
stc
dec
push
in
dec
lcall
shl
xchg
in
mov
sbb
inc
loope
dec
out
add
sub
add
out
inc
cmpsb
in
pop
aad
sarb
sub
sub
fs
cli
mov
add
add
inc
out
aas
mov
sar
or
sbb
add
mov
xor
add
sbb
inc
fwait
insl
xorl
popa
jns
das
lods
adc
hlt
bnd
addr16
outsl
push
movsl
xor
jo
push
or
mov
div
or
lock
aaa
xor
aam
cmp
mov
loop
push
cmc
xor
xor
call
cmc
rcrl
fs
call
xchg
jo
stos
dec
jbe
xchg
mov
sub
mov
outsl
cmp
scas
mov
xchg
push
stc
push
ds
das
sub
xor
out
repz
lcall
mov
jle
sbb
jp
jg
out
and
push
fnstcw
and
add
xchg
jl
sub
clc
push
mov
mov
cmp
inc
and
and
in
leave
xchg
jg
loop
sbb
in
mov
mov
add
push
bnd
dec
leave
and
scas
cmc
mov
add
add
xor
mov
xor
test
pop
push
sub
ds
dec
or
add
cltd
sub
xchg
push
cmc
sbb
xor
dec
sti
loope
je
or
into
cwtl
scas
pop
aad
outsl
bound
cli
sbb
aaa
mov
pop
mov
mov
mov
stos
mov
jns
out
imul
movsb
mov
cmp
stc
into
js
mov
xor
or
pusha
aaa
cld
popf
loope
lods
jbe
push
pop
or
addl
add
ror
inc
dec
xor
mov
inc
dec
test
push
rorl
mov
xchg
loope
mov
imulb
xchg
imul
add
lahf
pop
testb
pop
pop
cmp
rcr
sub
xchg
cltd
xchg
imul
jb
dec
sub
rcrb
cwtl
negb
ret
clc
or
add
add
in
out
ja
filds
xorb
add
add
sbb
scas
mov
jl
daa
test
inc
jne
mov
mov
enter
pop
pusha
cmp
popa
aam
or
pop
je
arpl
mov
jge
inc
jno
lahf
popa
out
jnp
inc
xor
js
fisubl
les
add
sub
data16
sbb
mov
cli
sbb
imul
xor
dec
dec
sbbl
rorb
jo
fwait
shl
test
lea
cmpsl
inc
or
pop
ds
fstps
call
cmpsl
pop
fs
jnp
xor
jmp
scas
mov
rclb
les
dec
inc
mov
sub
sub
ret
repnz
jp
aad
in
sbb
loopne
stos
xor
sub
fildl
or
out
jmp
cmp
scas
test
in
inc
push
or
sbb
mov
add
add
fs
or
hlt
dec
sub
sbb
pushl
xchg
and
call
gs
iret
stos
inc
ds
sub
out
mov
dec
jle
and
inc
mov
fsubl
or
push
sar
int
lret
xor
movsb
bound
imul
test
icebp
je
sbb
popa
push
cli
mov
dec
mov
cmp
sqrtps
pop
gs
xchg
lcall
jmp
or
push
movsl
nop
js
sti
jnp
mov
data16
jle
xor
testb
inc
mov
jmp
mov
jo
scas
jb
add
dec
int3
clc
xchg
imul
in
add
jb
mov
pop
out
mov
mov
imul
or
arpl
xor
pop
push
aas
adc
mov
insl
insl
sub
mov
jg
neg
pop
daa
inc
dec
add
add
add
push
or
insb
fldcw
xlat
or
sbb
iret
xor
mov
or
pop
xchg
xor
sbb
rolb
dec
inc
add
jbe
ror
jb
mov
xor
das
mov
sbb
cltd
pop
adc
and
add
std
push
jmp
pop
nop
adc
push
xlat
mov
fcmovnb
sub
das
jmp
and
jecxz
lret
mov
mov
add
jecxz
push
xchg
icebp
adc
xchg
mov
pop
and
adc
adc
jp
adc
xor
loop
push
aam
hlt
cmc
add
mov
sub
jbe
repz
movsl
scas
pop
xor
adc
pop
inc
cmpl
cmpsb
les
mov
sti
in
push
repz
fstps
jo
pop
arpl
clc
jl
cmpl
or
and
mul
push
inc
ret
stos
push
mov
add
cmp
sti
jg
cmp
je
in
scas
or
or
add
add
cmp
sub
cmovnp
andb
and
stos
cwtl
jne
scas
test
cmp
inc
and
imul
mov
in
fnstcw
repz
mov
jbe
fidivs
mov
shl
hlt
mov
daa
fs
push
mov
push
mov
and
shrl
ja
in
inc
int3
xchg
sti
inc
rol
mov
aaa
or
lret
sti
pop
enter
loope
ret
fwait
loop
aam
bound
add
cmp
cmp
out
push
sbbb
jnp
ljmp
dec
inc
imul
scas
out
in
test
mov
jns
inc
bound
xchg
mov
lahf
fwait
test
mov
sti
addr16
fwait
cli
out
adc
and
lcall
dec
mov
imul
adc
fimuls
xor
test
inc
adc
add
scas
aam
jnp
fstp
fcompl
sarl
add
add
add
jne
cwtl
lods
in
lds
xor
insb
sub
in
mov
inc
in
xchg
mov
lcall
cld
jle
je
xor
xor
and
lahf
inc
mov
add
sub
pop
shr
out
mov
ja
and
cmp
stos
stos
dec
push
xchg
sub
popf
das
cmp
mov
mov
out
cltd
xchg
mov
adc
xlat
cmp
int3
arpl
xchg
pop
out
movsl
insl
loop
push
mov
pop
fbld
xchg
inc
fstl
gs
or
icebp
div
lods
mov
shrl
lods
js
out
ds
mov
sub
repnz
repz
mov
xor
dec
push
cwtl
or
out
mov
and
jns
je
lret
jbe
mov
or
js
scas
cmp
sub
inc
xchg
mov
punpcklwd
mov
jno
std
outsl
mov
add
pop
cs
enter
add
add
cmp
and
lahf
jb
cmpsl
mov
xorb
jnp
xchg
xor
test
or
mov
xchg
std
outsl
mov
mov
mov
lret
daa
ret
insb
xor
fldl
iret
xchg
mov
into
cs
orb
push
add
jo
mov
inc
repnz
jnp
xlat
movsl
jno
mov
movhlps
rolb
aaa
xor
jmp
or
xchg
lock
fbld
push
test
mov
mov
jne
subb
cmp
xor
cs
hlt
jbe
popa
fwait
clc
lds
lcall
ret
xchg
pop
xlat
adc
inc
test
cmp
into
lods
mov
pop
jp
dec
jl
add
mov
inc
mov
pop
inc
push
jg
pop
repz
out
in
sbb
loopne
push
push
push
sbbb
loope
jmp
movsl
scas
or
push
add
add
add
adc
adc
xchg
xor
bound
mov
dec
fs
decb
movsl
jp
repnz
pop
in
insl
mov
mov
push
push
orl
pop
std
sbb
mov
das
test
std
push
or
cmpsb
cld
xchg
pushf
jl
mov
dec
imul
imul
pop
iret
bound
mov
mov
xchg
inc
cltd
in
arpl
call
outsb
adc
jle
lods
mulb
fstpt
js
leave
mov
mov
xchg
aad
or
data16
jge
notb
fistps
jg
jns
ret
rcrb
inc
imul
sub
mov
loop
and
aas
sar
sub
xchg
gs
cwtl
iret
xchg
ja
dec
fimuls
dec
add
xchg
or
pushf
cmc
adcb
add
fcmovu
subb
sarb
ds
sbb
popa
fwait
adc
in
jle
or
loopne
and
out
pushf
xchg
popf
and
xor
xchg
lds
rcll
not
sgdtl
add
add
in
fdivl
jp
pop
js
add
mov
ljmp
je
add
std
xor
loop
push
shrl
leave
sti
loop
dec
jp
pop
mov
shl
push
clc
adc
mov
mov
dec
ss
fstpt
and
sbb
sub
mov
ficomps
lods
mov
jge
sbb
xchg
push
mov
push
movsb
outsb
fwait
sbb
out
pushl
pop
push
lock
sbb
popa
dec
sbb
adc
mov
sub
loopne
stos
ret
ljmp
dec
out
out
in
mov
arpl
test
push
dec
lods
lret
rolb
std
fisubrs
cmp
mov
lahf
jno
subl
daa
mov
inc
pusha
dec
rclb
inc
icebp
add
jns
jg
mov
cmpsl
push
jno
mov
cmp
push
repz
aaa
popa
insb
lock
inc
test
and
add
add
cli
inc
jg
int
xchg
lods
or
mov
add
adc
add
add
mov
scas
add
sub
imul
and
jge
mov
xchg
call
mov
mov
mov
push
clc
jns
fwait
dec
xchg
pop
pop
test
repz
fistps
loop
pop
jns
test
in
jb
shl
aam
in
inc
sub
and
dec
sbb
pushl
ljmp
jp
std
movsl
inc
pop
sbb
cmc
call
adcl
push
test
in
cs
pop
sbb
jnp
mov
jecxz
aaa
adc
jge
mov
or
std
jb
mov
es
push
inc
xchg
sti
inc
movsb
cmpsw
pop
daa
int
add
cwtl
fbld
push
je
pop
aas
cmp
in
mov
pop
ja
lea
add
mov
clc
movsl
in
jge
xchg
xor
push
inc
dec
js
or
jg
popa
fsts
psrad
or
sub
add
add
lock
std
cmp
jle
fistpll
ss
push
mov
add
add
pop
popf
jg
xor
cmp
or
clc
in
sub
ret
sbb
sti
mov
fs
jne
imul
ja
cmp
sbb
pop
addr16
fisubl
repz
div
insl
sub
adc
dec
mov
adc
mov
inc
sbb
mov
cmp
movsb
and
lods
lea
or
add
add
add
dec
cmc
stos
xchg
push
stc
jl
fdivrs
xor
mov
stos
add
cmp
in
xchg
xor
sbb
shll
add
pop
fs
aad
xchg
mov
das
xor
repz
or
jmp
jge
sub
rcrl
loopne
lock
stos
lcall
repz
nop
xchg
fwait
or
sub
jnp
push
pop
xchg
pop
lock
out
js
cmp
add
add
iret
xlat
ficompl
inc
stos
nop
mov
fcoml
add
add
add
in
shlb
push
incl
and
sbb
add
in
nop
mov
xlat
cmp
add
fldt
push
aaa
or
xchg
andb
outsb
push
lea
jnp
neg
fwait
sarb
fimuls
push
cmpsl
test
mov
add
outsb
jl
add
in
pop
ret
inc
dec
push
shll
push
or
scas
aad
xor
rcrl
dec
arpl
adc
mov
sbb
jns
call
jne
daa
fildll
lods
or
jg
ret
xor
lds
mov
and
inc
inc
stos
cmpsl
mov
cmp
jmp
cmp
inc
jbe
shrl
mov
pop
popa
fbld
or
fstl
popa
test
cmp
push
and
pop
inc
daa
clc
lret
inc
cmpsl
mov
adc
push
jnp
imulb
xor
jmp
negb
int
mov
cwtl
popl
add
add
sub
iret
outsb
jmp
push
test
cmp
add
add
add
int3
in
sahf
in
cmp
push
push
stc
iret
scas
dec
sub
push
dec
das
into
push
outsl
aam
jge
pop
lret
int
es
jmp
test
ljmp
or
xchg
lret
mov
jnp
inc
dec
push
xchg
add
gs
push
sub
daa
mov
or
and
loope
mov
mov
fisubrs
aad
iret
scas
xor
in
loope
aaa
xchg
push
frstor
rcr
dec
fstpt
cmp
movb
cli
aas
dec
lret
out
cwtl
push
mov
dec
pop
gs
sbb
cmp
sub
xor
sbb
sahf
mov
ja
sti
mov
std
rcrl
shl
xchg
mov
inc
fisttpll
and
xor
jae
xchg
adc
ds
ds
ret
cmp
ds
scas
int3
inc
dec
rcrb
pusha
or
mov
push
dec
pushf
std
push
popa
push
sbb
sub
add
std
sbb
stc
cld
or
scas
pop
fists
add
add
pop
insb
pop
sbb
add
jo
add
icebp
pop
sbb
xchg
add
pop
call
sbb
loop
rorl
cmp
cwtl
and
pop
test
push
mov
pop
mov
fstps
push
or
daa
movsb
adc
clc
pop
push
das
out
fsub
and
jg
movsb
lret
cmp
fdivrp
xor
xor
fsubl
call
sbb
dec
cld
jmp
test
loop
outsl
lock
pusha
sub
aas
rorb
stc
loopne
adc
dec
fnstcw
push
rcr
mov
mov
aam
inc
maskmovq
testl
or
sub
mov
mov
xlat
fistl
fcomp
lods
sbb
nop
iret
mov
inc
cmc
fldl
xor
incl
push
je
xchg
inc
gs
lret
fwait
insl
push
inc
or
sub
xchg
movsl
xor
jle
mov
adc
push
das
negl
adc
pop
xchg
cmpsb
lret
push
clc
aad
adc
add
pop
pop
mov
sub
into
xchg
cmc
xchg
lret
cmpsb
mov
sbbb
add
mov
jno
xchg
fisttpl
mov
jg
mov
pop
mov
mov
pop
stos
pop
or
clc
hlt
or
cmc
sub
jmp
rorb
fisubrs
lea
sub
add
arpl
es
popf
cmp
sub
cmp
sub
sahf
fistl
pop
fidivrs
or
xchg
sarl
jecxz
lock
bound
fwait
test
cmp
mov
mov
into
add
mov
adc
cmp
out
dec
or
dec
out
in
lock
adc
lcall
inc
fsubrs
std
dec
sub
test
testl
lock
jns
cltd
push
xor
loopne
mov
dec
pushl
inc
or
in
push
add
add
add
cmpsl
vpsignd
cltd
enter
mov
sbb
in
adcb
outsl
insb
jbe
ficoml
ret
xor
stos
xor
iret
lds
add
xchg
xor
das
data16
sub
mov
inc
inc
hlt
dec
in
loope
xchg
mov
jae
jmp
push
xchg
popf
inc
out
mov
sub
dec
notl
adc
pop
mov
pusha
fists
sub
mov
mov
stos
pop
cmpsb
f2xm1
mov
add
jle,pt
stos
idivl
cs
jle
push
shrb
outsl
mov
nop
and
lds
add
push
fnclex
dec
mov
lret
or
mov
in
or
negl
shr
out
enter
push
cltd
adc
loope
ljmp
cmpsl
out
mov
add
push
xrelease
add
add
inc
ja
pop
aas
dec
push
dec
leave
lock
add
add
add
mov
push
sbb
cmpsl
mov
inc
lcall
out
and
jo
sbb
mov
pushaw
outsb
mov
dec
dec
clc
push
inc
out
ret
or
into
adc
stc
or
inc
sub
mov
push
xor
pop
ljmp
roll
adc
xlat
xlat
mov
rcrl
aad
jle
icebp
repnz
pop
sbb
or
notl
cmp
mov
test
pop
mov
and
roll
jecxz
push
xchg
nop
test
adc
add
mov
lret
insl
pop
jmp
push
adc
stc
imul
pop
mov
jno
jae
orb
pop
sbb
out
push
mov
das
int3
insb
xchg
sub
cmc
mov
aad
pop
test
sahf
fiaddl
push
shrb
jbe
popa
in
pop
mov
insb
cmp
cmp
or
fdivs
cli
lret
pop
mov
mov
xor
outsb
mov
repz
jae
ja
div
mov
lea
hlt
sbb
add
add
jecxz
scas
dec
jno
cmp
adc
cwtl
adc
xchg
sbb
xor
call
movsl
test
mov
mov
enter
mov
pop
adc
repnz
dec
mov
mov
dec
fwait
dec
je
mov
xor
scas
fdivs
ret
mov
icebp
pop
jge
inc
mov
out
mov
mov
dec
sub
bound
push
xchg
inc
sbb
sub
jp
in
inc
out
jne
sbb
stc
shrl
push
mov
mov
jp,pn
sub
cmp
jecxz
ficoms
aam
or
loope
jae
push
out
pop
orl
pop
mov
dec
sbb
jns
rolb
pop
sub
push
jbe
imull
push
mov
mov
ja
cld
repz
into
inc
ret
lea
mov
inc
test
or
xor
cli
std
jg
push
pushf
dec
pop
dec
or
add
add
popf
fld
cli
clc
ljmp
jp
jp
aad
and
dec
sbb
aam
and
and
mov
cmpsb
lds
push
inc
sbb
or
cmpsl
or
cld
outsb
int3
xchg
sub
inc
push
pop
pop
sbb
stc
xlat
push
popf
imul
cmc
aam
push
loope
push
push
rclb
cmp
sti
lea
loope
mov
or
and
cli
mov
test
insl
push
sbb
icebp
sub
andl
call
push
sbb
sbb
shll
jo
add
lock
adc
cmp
into
cmpsl
bound
fisttpll
lahf
and
xchg
ljmp
push
sub
shrl
jbe
jmp
add
add
add
mov
std
incl
sbb
adc
lods
add
sbb
add
add
rcrl
pop
mov
mov
mov
lahf
nop
insl
push
das
xchg
add
jae
test
sbb
xchg
pop
sub
sub
lods
shl
imul
ficompl
leave
push
aas
lcall
jge
imul
lcall
gs
mov
mov
push
popl
push
xchg
inc
insb
xor
xor
lock
roll
mov
orb
arpl
loope
jne
push
imull
xchg
insb
and
lds
pop
mov
call
sub
mov
pop
jno
in
xor
or
xor
cmpsl
mov
dec
sub
pop
add
sub
daa
jecxz
inc
xor
jge
daa
subl
enter
loope
fnstenv
or
lods
mov
push
dec
imul
push
pop
stos
fisttps
and
add
add
es
jg
pop
or
xor
imul
add
add
add
or
lock
push
scas
pop
mov
cltd
or
dec
hlt
test
fists
dec
jmp
push
or
inc
fbstp
jnp
push
hlt
sti
or
or
ja
enter
daa
add
call
adc
aaa
inc
test
adc
xor
mov
fldt
das
repz
fwait
in
lods
fiaddl
xchg
mov
mov
lret
mov
pop
cld
js
cli
or
fcoms
out
or
pushf
mov
mov
roll
sub
testb
lret
mov
inc
sti
icebp
xchg
jl
out
pop
or
fcmovu
sub
in
or
mov
jne
pushf
adc
or
cmp
addb
inc
xor
or
aas
test
mov
or
pop
inc
fneni(8087
jl
out
and
push
xor
jno
mov
pop
mov
lret
push
mov
add
add
or
dec
push
cmp
sbb
add
xor
dec
idivb
sub
jns
mov
mov
pop
jne
fidivs
lret
xorb
push
ret
sub
jp
inc
mov
rcll
scas
enter
dec
dec
mull
test
sub
call
ret
dec
mov
and
jle
cmpsb
dec
rorb
daa
jbe
push
fadds
or
sarb
push
scas
fidivrl
push
mov
inc
arpl
pop
pop
fldln2
fiaddl
aam
scas
mov
lods
sub
sbb
popf
sub
shrb
push
mov
cmc
pop
mov
mov
xor
sub
cmp
int3
aas
repz
dec
mov
adc
pop
cmp
ret
jo
cmpsl
mov
adc
mov
xchg
pushf
mov
jg
and
jmp
ror
xor
cmpb
add
xor
mov
mov
add
add
std
pop
pop
add
sbb
scas
or
push
mov
mov
push
xor
pop
xchg
pusha
push
push
cmp
stos
or
je
les
add
in
je
xchg
mov
das
xor
insb
or
loop
insb
add
idivl
jp
repz
add
lock
sub
and
jo
dec
popa
mov
mov
fst
insb
repz
pusha
cmpsl
jp
add
add
jle
fwait
int
movsl
pop
shlb
aaa
cmp
jne
lea
std
cwtl
push
ret
adc
cmp
lods
scas
ret
iret
icebp
add
pop
cmc
xchg
dec
fimull
enter
popf
scas
ljmp
aad
xchg
in
xchg
popa
mov
sub
cmpsl
add
test
mov
inc
enter
rcrb
inc
cli
repz
cmp
mov
imul
sbb
pop
push
cmp
add
add
ficoms
stos
sbb
call
mov
or
add
add
add
or
jae
cmp
dec
sbb
lds
sti
sbb
addr16
sarl
lret
movsb
cmpsl
aaa
xor
cmp
xlat
and
fmul
jno
loop
gs
pop
fdivl
adc
mov
inc
loopne
ja
scas
aad
pop
push
push
push
fsubs
lods
jae
int
mov
pop
outsl
push
mov
mov
int
adc
idiv
push
push
push
jmpw
mov
pop
mov
repnz
test
and
shr
and
mov
and
pop
test
mov
mov
mov
out
divl
jle
cwtl
ret
push
sbb
add
cmc
ds
lea
push
or
out
jne
fcmovbe
enter
stos
adc
push
fxch
add
inc
lcall
in
mov
mov
pop
inc
and
in
xor
jnp
repz
add
mov
out
stos
jge
or
pop
mov
add
add
jmp
jl
jns
pop
sub
or
shrl
add
fisubl
ljmp
jb
in
sub
mov
mov
out
testl
xchg
fnstcw
out
mov
aas
into
outsl
icebp
movl
cmpsb
pop
lea
ja
cwtl
inc
sub
clc
pop
mov
jb
and
sbb
push
imulb
or
jle
mov
cmp
adc
mov
mov
jnp
das
es
jb
addr16
push
daa
push
dec
jns
jp
mov
int3
fildll
xchg
mov
fisubs
shlb
inc
cs
xchg
sub
test
movsl
add
hlt
push
lcall
into
xorps
aaa
jecxz
mov
push
les
jmp
testb
inc
outsb
jge
enter
inc
outsb
inc
xchg
int3
gs
sldt
add
dec
or
out
xchg
iret
push
aas
loopne
cli
sbb
add
add
add
add
daa
pop
mov
pop
adc
lahf
aas
sub
push
cmc
ja
lret
mov
inc
lret
dec
cmp
lods
pop
mov
or
jnp
bound
mov
imull
hlt
iret
je
les
fidivl
sbb
js
and
pusha
stc
push
ret
fsubr
mov
jbe
push
sub
leave
lahf
movsl
into
imul
lret
adc
pop
ds
cmp
roll
and
fadd
or
test
sbb
pop
loop
sbb
xor
adc
mov
daa
data16
xchg
jl
mov
cltd
imul
sahf
filds
add
and
fistps
mov
cmp
lret
pop
push
clc
repnz
loope
inc
push
insl
xchg
mov
loopne
mov
mov
call
and
sub
addr16
incl
in
aam
add
cmp
out
loope
jns
addb
add
add
sbb
sbb
ret
xchg
rclb
imul
imul
xchg
or
test
repz
shrl
mov
jb
ret
aas
inc
push
push
and
mov
xchg
push
loop
arpl
enter
daa
xor
rorb
lea
mov
sbb
cmp
cmp
fidivl
testb
sahf
push
cld
mov
les
std
dec
sahf
lret
add
push
repz
xchg
inc
lock
xor
push
call
sbbb
add
and
xchg
aas
or
cmpsl
arpl
jnp
leave
cmp
cmpl
xchg
test
mov
mov
gs
das
jl
stos
in
fdivp
pusha
sbb
xchg
hlt
xchg
push
and
jnp
add
cmp
aad
jne
callw
stc
xor
mov
fdivrl
test
sbb
sti
push
mov
mov
fwait
sbbb
add
add
cmpsl
adc
bt
jp
inc
insb
pop
movsl
mov
xor
lcall
movsb
mov
push
out
fdivrl
shlb
sbb
jl
in
int3
incb
sub
push
mov
sbb
inc
mov
sbb
mov
pusha
dec
popa
jp
or
out
pop
and
loope,pt
aaa
fsubrs
or
sbb
or
adc
mov
ret
push
insl
jge
lcall
into
into
dec
xchg
xor
cltd
cmp
or
repnz
sbb
rcll
loope
and
jle,pt
inc
fs
push
enter
or
pop
outsl
cmp
jo
shl
outsb
xchg
xor
lods
unpckhps
fs
fsubrp
mov
and
mov
jmp
insb
mov
mov
insl
pusha
dec
cmp
push
mov
bound
loope
push
mull
fwait
cmp
mov
dec
idivl
cld
ret
add
pop
mov
add
add
ret
call
adc
inc
xchg
vpaddd
mov
in
cmp
dec
notb
movsl
stc
in
ja
cmpsl
sub
xchg
fcompl
out
lcall
stos
fdivs
jb
int3
dec
stos
das
or
xchg
stc
int
test
cli
jno
jno
push
ret
jbe
mov
pop
cmpb
jno
mov
jae
sub
jg
xchg
cmpsb
pop
add
andb
push
mov
xor
and
or
pop
or
inc
xor
call
mov
cmpl
push
sub
ret
mov
push
jg
mov
sub
lock
lock
data16
fisubrs
add
shrb
imull
and
int3
fcomp
test
mov
push
add
inc
aas
cltd
xchg
lds
gs
int3
lods
imulb
call
sub
stos
das
inc
xlat
repz
ret
mov
iret
mov
pop
andb
and
add
add
add
cs
or
mov
cmpsl
in
push
pushf
ds
scas
mov
add
test
jmp
movsl
mov
xor
shlb
stos
lods
pop
or
repz
in
into
jmp
or
cmpsl
xorl
push
ljmp
mov
pop
and
scas
insl
imul
jns
xchg
ds
std
xchg
push
jmp
lret
mov
ljmp
xchg
sub
adc
aad
inc
call
add
aam
and
lcall
cmp
mov
xlat
fdiv
inc
mov
sbbl
outsl
add
cmp
gs
lds
xor
ljmp
leave
and
push
sub
lds
test
adc
inc
or
test
fildll
cmpsb
or
jg
arpl
sub
add
add
cld
dec
or
data16
ret
pop
push
dec
pop
lea
ror
inc
ja
fdivrs
mov
js
jns
xchg
pop
call
lahf
or
daa
push
or
in
and
jno
mov
mov
lahf
xlat
or
ficoms
or
xchg
cmpsl
sub
sar
mov
sub
push
gs
pop
mov
popf
cmp
jle
dec
adc
jle
lods
ss
and
ja
repz
shl
inc
stos
mov
and
shlb
dec
inc
out
or
out
sub
cld
testb
test
sub
mov
fldl
mov
cmp
mulb
push
cmp
lahf
repnz
mov
mov
sbb
idivl
popf
scas
jno
or
adc
mov
test
js
sub
rep
call
insb
jp
add
add
xor
clc
cli
clc
sarb
sti
mov
xchg
inc
sub
add
add
add
icebp
cmpb
fldl
mov
mov
std
dec
rorl
test
outsb
imull
mov
xor
or
and
xchg
rorl
test
adc
xchg
out
dec
movsb
shrb
dec
loopne
sub
cltd
ret
xchg
add
pop
shrb
imul
push
jp
push
mov
popf
or
jge
or
js
das
shlb
add
jp
mov
or
dec
aad
lds
pop
xor
add
mov
ljmp
rclb
sub
movaps
cmp
xchg
lret
mov
out
jge
outsb
jns
sbb
mov
cmp
stos
jmp
xchg
movsb
inc
push
loope
push
or
add
out
dec
cmpsl
inc
call
fstps
test
mov
xchg
enter
sldt
add
test
imul
mov
inc
mov
add
add
cmp
pop
jb
and
inc
fiaddl
dec
add
cmp
lret
mov
cmp
nop
mov
cmpl
cmp
xor
pop
sub
shrl
cmc
cld
stos
enter
mov
addr16
stc
and
mulb
loope
dec
movsb
sub
push
int3
xchg
mov
mov
xor
jns
xor
dec
pop
sbb
inc
cltd
lods
rorl
mov
pop
movsl
mov
test
fcompp
jecxz
jns
out
sbbb
scas
push
inc
mov
fwait
mov
icebp
orb
cmpsl
fdivrl
bound
mov
xor
xor
xor
or
sub
aas
loopne
and
sub
mov
loopne
cmpl
sbb
cmp
xchg
sub
mov
and
push
xor
in
shll
das
pushf
hlt
or
fs
es
data16
insb
daa
mov
and
sbbl
add
add
mov
jge
call
lret
in
leave
cmp
sbb
nop
inc
cmp
sub
dec
and
and
loop
cmp
icebp
adc
push
inc
push
in
and
push
test
mov
int3
ror
ret
adc
xchg
int
push
jl
in
lods
sarb
xchg
outsl
push
rorl
xchg
add
lret
cwtl
cmpsl
ja
dec
mov
push
in
and
ja
push
xchg
cmpsb
xor
cwtl
adc
cmp
cmc
std
test
cmpsb
jno
jge
mov
jmp
loop
shrb
inc
and
push
mov
jae
hlt
data16
xchg
xor
imul
mov
std
jle
inc
fimuls
fprem
mov
mov
and
movntq
pop
sub
push
hlt
mov
mov
ss
xchg
mov
pop
sbb
xor
xchg
iret
sldt
add
clc
mov
fldcw
add
pop
cmp
add
add
add
rol
mov
test
fistl
sbb
add
jge
mov
and
mov
fwait
lds
sti
inc
movsl
inc
imul
xchg
fistpl
mov
mov
push
sub
add
scas
ret
xor
mov
push
fisttpll
pop
pop
shll
add
popl
fwait
hlt
sbb
data16
aas
jns
pop
imul
inc
push
fdivs
int3
lcall
inc
call
sub
aaa
lods
es
xor
adc
lret
mov
xor
insl
jo
pop
xor
test
adc
pop
push
mov
sbb
faddl
iret
scas
leave
inc
mov
cmc
movsb
add
jmp
add
rolb
inc
iret
enter
clc
mov
dec
xor
lds
xchg
or
ret
or
repz
push
sti
cmpsl
enter
dec
cmp
add
add
add
sahf
adc
adc
js
leave
sbb
cld
and
mov
in
mov
jo
adc
xchg
lret
jns
pop
jmp
addr16
loop
and
nop
dec
pop
pop
scas
cmp
out
xor
cs
mov
jns
xchg
push
fimull
jo
je
jl
pop
andl
inc
and
adc
xor
or
push
cmp
ret
out
fsubs
lahf
sbb
aam
cmpsb
sbb
adc
out
push
lret
pusha
xor
rcrb
adc
mov
out
daa
mov
lret
cli
jp
mov
data16
lahf
lock
xchg
sub
add
fiaddl
lahf
test
mov
xchg
pop
sub
shlb
pop
jb
or
inc
mov
jb
psrlq
das
pop
cmc
iret
insl
testl
or
lcall
sahf
push
and
std
mov
dec
push
lea
sbb
sub
add
add
lcall
in
sub
addr16
lcall
das
and
add
lods
dec
sub
ret
mov
sub
or
xchg
mov
leave
gs
dec
sbb
les
jns
pop
lahf
xchg
or
stos
adc
jmp
dec
pop
movsl
and
popf
and
jle,pn
or
bound
add
push
mov
xchg
xchg
lahf
and
push
xor
push
mov
jecxz
jp
mov
xchg
mov
add
stc
xchg
or
ret
icebp
cmc
xor
aam
enter
pop
xchg
out
aaa
mov
cmpsb
xor
outsl
xchg
mov
outsl
mov
mov
and
xchg
pop
int
enter
aaa
sub
or
pop
data16
mov
and
lahf
and
pushf
inc
mov
ds
aad
insl
ss
adc
jg
add
jb
mov
ja
lds
xchg
and
inc
and
lcall
add
add
add
gs
cwtl
rcll
outsb
movsb
add
std
js
lods
jo
push
in
pusha
sub
xchg
in
mov
out
addr16
lea
loope
jmp
popf
push
sarl
jp
cmp
stc
inc
out
jae
sub
bnd
nop
mov
cs
icebp
pop
jb
pusha
push
out
jmp
das
arpl
test
repnz
popa
sub
mov
out
jp
or
or
rcrb
push
data16
mov
push
out
cmc
rol
daa
es
ret
push
ljmp
or
pop
pop
cmp
jo
push
jmp
lea
pop
jp
push
pop
xchg
sbb
lahf
xchg
lock
mov
or
jo
das
and
push
sub
adc
mov
call
ret
ss
adc
jbe
test
sahf
push
test
lods
mov
mov
cmp
mov
jp
cmp
adc
add
add
add
xchg
ficomps
cmp
lahf
pop
xchg
mov
add
add
add
test
test
sub
pushf
fsubrs
test
insl
ss
or
pop
lret
or
push
ljmp
aam
add
lret
pop
arpl
xlat
enter
push
ret
sub
enter
and
pop
pop
jne
add
repz
mov
int3
out
fsubl
xchg
cwtl
rcll
push
inc
adc
cwtl
inc
pop
int3
cli
push
sbb
add
cmp
mov
sbb
movsl
jno
loop
fcomps
pusha
xchg
sub
pop
loope
sbb
cs
xlat
sbb
dec
rorb
stos
xor
mov
mov
in
int
das
mov
xor
adcl
pop
scas
es
mul
hlt
pop
aad
jl
xchg
cmp
es
stos
cwtl
aad
jae
push
mulb
cmove
xchg
outsb
inc
inc
mov
ss
scas
ja
or
dec
stos
push
mov
mov
lret
add
int
jl
pusha
cmc
arpl
ja
sub
add
das
dec
das
add
add
add
inc
jno
into
pop
xchg
mov
arpl
enterw
jnp
or
out
movsb
add
mull
xchg
rcl
je
cmpsl
xchg
fcmovb
pop
scas
in
popf
imull
or
ficomps
js
sbb
add
nop
insl
pop
nop
cmp
sbbl
or
xchg
ljmp
add
jo
jno
iret
out
lods
push
jp
dec
loopne
int3
test
inc
mov
std
je
out
add
xchg
pop
fdivr
xchg
fs
aad
clc
pop
repz
mov
jecxz
xor
jbe
xchg
mov
fwait
add
fisttps
out
out
jnp
in
mov
in
mov
mov
mov
sbb
xor
or
or
out
mov
mov
inc
mov
mov
mov
loop
jns
ds
fbld
in
sbb
pop
cli
pop
arpl
test
lods
ret
xchg
push
lock
mov
or
xor
add
add
adc
mov
mov
sbb
rorl
sub
mov
leave
push
cmp
mov
arpl
iret
add
mov
aaa
or
xchg
scas
lret
mov
orb
into
test
mov
shlb
lods
inc
mov
lods
mov
jge
jno
sbb
iret
inc
sub
cli
adc
xor
sar
jp
js
enter
push
adc
repnz
cli
clc
pop
dec
push
push
inc
mov
mov
out
sub
cmp
xchg
cli
fisubrl
sbb
push
add
call
mov
jnp
mov
cmp
cmp
or
dec
push
pop
pop
bound
add
and
outsl
xor
js
lcall
add
mov
lret
fnsave
enter
in
and
xor
push
fcoml
ficoml
jo
arpl
add
add
sti
pop
jge
neg
hlt
add
mov
add
add
inc
insb
add
addl
and
xor
sub
sahf
test
mov
cmp
lret
ret
in
and
sti
dec
inc
mov
hlt
arpl
add
adc
xor
push
popf
jnp
mov
jbe
addl
jb
ret
pop
popa
ret
inc
clc
pop
jb
test
mov
fildll
lret
outsl
dec
adc
push
sub
cmp
jg
aaa
js
cmpsb
pop
stc
xchg
mov
mov
cmp
xor
jecxz
call
add
pop
test
cmpsl
psubsw
pop
cwtl
push
aam
popl
insl
sub
xchg
mov
mov
push
mov
adc
pop
and
inc
outsl
or
pop
adc
ficomps
push
xor
sub
fnstcw
and
fstpl
movsb
push
mov
negl
stos
push
gs
mov
adc
add
add
fsub
std
in
popf
in
stc
jmp
and
add
add
add
add
mov
jge
xor
enter
sahf
jle
add
jl
rep
cwtl
rcl
pop
fbld
mov
insb
sub
lods
mov
call
xchg
ret
in
sub
push
cmp
mov
outsl
test
fwait
add
push
mov
xor
mov
mov
pop
test
mov
push
cmp
gs
mov
mov
mov
mov
lods
jge
fwait
ljmp
pop
pop
jle
int
mov
mov
lahf
and
pop
hlt
inc
adc
faddl
mov
daa
pop
add
gs
inc
mov
ljmp
sbbb
jae
out
cmp
int
shll
mov
arpl
jne
sahf
mov
jnp
push
jl
cs
xlat
out
push
push
push
jae
mov
test
popa
mov
xor
pop
jp
jnp
sti
xchg
jle
jp
lods
mov
xor
add
add
pop
dec
jmp
mov
icebp
pop
aaa
fs
jp
aas
cmp
mov
sbb
sbb
xlat
jbe
lcall
pop
add
xchg
xor
xchg
ljmp
push
sahf
mov
fs
mov
mov
and
sub
push
adc
ret
rcll
scas
or
cltd
pop
movsb
pop
xor
test
mov
testb
sub
in
lods
mov
or
cmp
add
dec
inc
inc
incl
cmpsl
arpl
xchg
sub
pop
add
outsb
ret
idivb
cs
test
hlt
inc
mov
and
add
rol
fistl
iret
cmp
sbb
popf
sti
pop
mov
addr16
subl
sarl
and
jecxz
div
mov
push
xchg
dec
push
ljmp
adc
add
push
sti
decb
mov
outsl
pusha
xor
add
add
dec
mov
stos
add
cmp
ret
les
fwait
leave
push
xor
push
imul
mov
shl
sbb
sbb
lock
insl
mov
cmp
rol
test
cmp
mov
and
ss
and
fnstcw
add
mov
xchg
mov
fsubrl
cmp
ljmp
arpl
in
add
sahf
xor
ja
xchg
lcall
dec
and
pusha
cwtl
fcom
mov
push
jp
ret
in
add
xchg
push
jb
mov
andl
add
add
sub
fwait
sbb
adc
fiadds
mov
cmpsl
loopne
jnp
popa
outsb
lahf
add
and
mov
and
out
and
xlat
jnp
dec
out
xor
daa
adc
lret
nop
mov
push
ret
cmp
xor
hlt
cli
xlat
dec
dec
fs
add
pusha
addr16
insl
or
and
sub
inc
in
into
popf
movsl
aas
push
jecxz
jbe
jns
and
pop
or
jecxz
insb
or
push
mov
jle
or
pop
in
and
lcall
or
nop
adc
cmp
cmp
in
jmp
sub
add
jae
aam
jno
ss
jmp
fstps
mov
adc
jb
shl
cmc
sbb
inc
shrb
test
jo
pop
pusha
test
in
aad
fs
push
mov
fistl
mov
xlat
movsl
and
sbb
test
bound
mov
xor
jle
xchg
add
cmp
or
ss
sti
xchg
cmp
sbb
push
and
xchg
cmp
mov
and
or
pop
int3
pcmpgtw
insl
outsb
mov
sub
cmpl
les
push
mov
outsb
mov
incb
ljmp
int3
jl
lock
add
add
and
xchg
mov
in
je
xchg
mov
ljmp
adc
cmc
hlt
push
shlb
loope
pop
mov
das
inc
mov
cmpsb
mov
test
mov
cltd
rolb
enter
lcall
fidivrl
and
add
int
cmp
push
ret
xor
lods
stc
pushf
or
mov
aad
mov
rolb
xchg
jmp
xchg
cmp
ret
inc
push
mov
mov
arpl
and
sahf
ret
ja
std
int3
push
jecxz
push
and
scas
clc
ja
dec
and
inc
mov
mov
jne
pop
jecxz
daa
fdivp
aaa
inc
shll
mov
mov
xchg
imul
pushf
inc
inc
add
bound
clc
push
insb
push
iret
test
lret
xor
lods
cli
stos
idivb
sbb
sbb
mov
xchg
lcall
add
divb
rclb
nop
lcall
aaa
add
add
add
cld
xor
test
das
push
xor
push
push
push
dec
aaa
and
mov
rcrl
mov
xchg
inc
xchg
cmp
jl
dec
or
divl
ret
sub
popf
add
popf
enter
mov
data16
xchg
mov
popa
adc
inc
and
add
mov
jecxz
cwtl
sbb
outsl
outsl
inc
push
cmpsl
iret
adc
sbb
jbe
dec
mov
bound
lahf
std
mov
idiv
ja
hlt
aam
lret
mov
insb
js
std
test
jmp
add
cmp
adc
sbb
inc
sub
mov
lcall
mov
jp
stos
adcb
fs
scas
xchg
arpl
int
cmp
lods
adc
jge
mov
stc
lock
jecxz
add
add
jbe
idivl
or
xchg
add
add
call
movsl
lcall
mov
mov
mov
dec
ss
jbe
push
push
nop
cmp
sbb
fwait
cli
dec
mov
push
dec
lret
hlt
les
les
test
add
adc
popa
xor
mov
in
fdivrs
andl
notl
test
fstps
jne
dec
jo
ss
xlat
jle
xor
or
mov
das
stc
mov
lods
ljmp
shll
lock
push
sub
pop
leave
shr
sub
cmp
pop
imul
mov
out
lock
xor
pop
pop
jbe
arpl
shrb
mov
ja
pusha
imul
sbb
sub
mov
cmc
aaa
bound
mov
das
xchg
cltd
cmp
xchg
mov
loope
mov
add
inc
ftst
xor
xchg
data16
mov
or
aad
loopne
xchg
inc
aad
add
add
outsb
sub
stos
fs
jmp
leave
aas
inc
loop
inc
je
add
add
add
rclb
or
or
mov
sbb
mov
mov
xlat
shlb
lds
mov
roll
jge
xor
lock
bound
das
jo
inc
int3
sarl
cmp
or
sbb
frstor
inc
push
sbb
sbb
push
test
sub
test
jle,pt
outsb
test
dec
mov
mov
jg
mov
clc
sbb
lock
test
xchg
test
push
add
pop
push
hlt
cld
cmp
in
inc
jae
or
push
rcl
addb
mov
cmp
cmp
loope
inc
mov
add
dec
fnstsw
push
jecxz
pop
add
faddl
xor
jle
sahf
iret
jp
sub
jge
call
and
in
push
lds
scas
sbb
fadd
inc
jb
popa
or
xchg
add
cltd
les
scas
fistpll
outsl
gs
pop
push
js
add
add
add
ret
mov
or
sbb
xabort
push
loop
js
pop
aam
repz
or
das
xchg
fstps
xchg
lock
sub
dec
mov
into
xchg
test
sbb
mov
jle
add
sub
ss
and
push
xchg
sahf
sbb
out
clc
imul
pop
push
out
xchg
jns
add
iret
mov
mov
cmpsl
lods
popa
stos
push
add
mov
nop
dec
mov
cmp
scas
fs
fiadds
mov
bound
lret
loopne
mov
test
mov
pop
sub
xlat
dec
sub
mov
xor
in
inc
adc
or
push
mov
iret
cmp
xchg
stc
in
rorl
cwtl
cltd
cmc
gs
shlb
mov
jp
pop
xchg
xor
stos
loop
imull
jbe
jae
sbb
jnp
jnp
cmp
movsb
push
sbb
mov
mov
cmp
add
add
dec
pop
ss
pushf
into
je
or
jbe
inc
mov
jo
xlat
and
rorl
rorl
pop
ds
sub
sbb
idiv
xor
cwtl
psubsb
adc
xor
in
or
lahf
jle
mov
mov
cmpb
ret
sub
sbb
push
incb
cmp
ljmp
sbb
sub
popa
add
adc
data16
hlt
stos
jmp
gs
sub
icebp
enter
roll
or
mov
sbb
jecxz
cmpsl
push
mov
insb
jns
fwait
xchg
pop
ret
mov
and
push
imul
cmp
ljmp
add
mov
ret
fucomi
add
push
jge
test
jge
out
popa
ret
ja
sbb
inc
das
sbb
mov
cld
xor
add
xor
or
outsl
lret
mov
out
jmp
inc
cs
cmp
add
add
out
cmp
aad
dec
xlat
jae
sbb
cs
adc
jg
stos
cltd
pop
lock
mov
mov
inc
xchg
adc
mov
orl
je
push
mov
in
fiadds
ljmp
cld
mov
jae
lret
cli
cmc
bound
push
push
pop
icebp
inc
dec
lret
jecxz
fisubrs
gs
clc
cmp
repnz
imul
sub
aaa
pop
inc
inc
push
ss
nop
shll
jae
rclb
inc
outsl
in
or
mov
subb
dec
push
xchg
sbb
mov
add
pop
mov
fwait
jecxz
decb
pop
in
jae
sbb
mov
and
mov
sub
sahf
adc
push
cmp
lret
xchg
inc
lret
jmp
fiadds
test
and
stos
dec
sbb
aam
pop
push
cld
ljmp
add
repz
cmp
lods
repz
mov
sbb
add
add
add
iret
sub
adcl
pop
aam
sbb
push
lahf
pop
cmp
pop
pop
mov
stos
rorb
adc
pusha
lock
bswap
js
loop
aad
cmp
call
pop
adc
cmp
out
xchg
test
fucomp
outsl
mov
mov
or
mov
mov
pop
call
sbb
pop
xor
adc
mov
xchg
mov
rcrb
sbb
call
cli
dec
loope
pop
push
push
loope
and
icebp
inc
push
push
imul
inc
rcrl
inc
cmc
out
nop
xchg
xlat
mov
out
mov
dec
mov
imul
mov
jns
lret
mov
or
sub
xor
pop
leave
mov
xor
push
sub
mov
push
insb
pop
popa
jecxz
push
sub
push
loope
mov
sbb
lret
ss
es
add
daa
push
cld
push
std
jmp
dec
push
nop
mov
add
add
call
push
inc
mov
je
divb
into
inc
test
bound
loop
adcl
adc
out
in
cld
mov
add
mov
xor
xor
xchg
std
clc
inc
sbb
out
jb
test
pop
and
mov
arpl
mov
xchg
mov
mov
mov
jl
mov
out
xchg
sub
inc
mov
hlt
adc
loope
aam
aas
xchg
mov
add
jecxz
mov
test
pop
jae
xor
leave
inc
push
fs
pop
mov
dec
xchg
lock
lds
inc
pusha
mov
mov
sbb
sub
jns
fdiv
daa
inc
dec
push
std
popf
push
test
popa
pop
pop
mov
dec
rorb
xchg
pop
popa
mov
push
mov
cmp
mov
push
out
jle
mov
mov
mov
jl
push
repz
mov
xchg
push
lret
lock
das
mov
add
add
add
sbb
dec
push
out
aad
fidivs
add
add
add
xchg
fwait
ret
lcall
shlb
sbb
jmp
pop
loop
sbb
clc
dec
or
jmp
les
in
shll
fsubl
orl
sti
incb
test
popl
fisubs
jb
jo
xchg
aaa
mov
pop
dec
dec
pop
mov
daa
outsl
push
mov
push
fbld
cmc
cmp
outsb
xor
mov
and
lret
dec
xchg
mov
sub
sub
jno
xchg
jbe
jecxz,pt
jmp
out
mov
adc
int3
jge
cs
sbb
andb
rorb
ret
dec
imul
mov
insb
lock
bound
out
andl
sbb
insl
sub
mov
xor
xchg
xor
out
in
int3
pop
testl
mov
aaa
dec
mov
orl
sub
xor
in
into
sbb
add
idivl
or
mov
jge
inc
add
add
add
or
loop
jmp
mov
or
leave
pop
mov
addb
dec
stos
inc
lcall
arpl
mov
out
negl
inc
fs
sar
loop
xlat
fwait
adc
scas
jns
dec
clc
leave
sub
mov
push
sarl
add
cmp
sbb
pop
cmp
outsl
cld
jb
mov
sub
inc
repz
and
dec
mov
add
mov
sub
cmp
mov
pushf
xor
xor
or
xchg
ret
jns
sti
es
push
cwtl
jg
shlb
or
arpl
inc
imul
pop
loopne
test
jnp,pn
mov
pop
loopne
sub
js
nopl
adc
jbe
and
lret
sbb
mov
add
mov
mov
pop
mull
add
jg
xchg
orl
sete
add
add
lods
ss
sub
test
jns
mov
movsl
add
je
call
dec
dec
lret
dec
pop
aam
adc
leave
stos
sub
mov
sbb
fpatan
push
or
outsl
inc
inc
loopne
test
fistpl
push
and
loopne
jmp
cmpsb
aas
stc
push
nop
out
xchg
movq
push
scas
jmp
daa
or
pop
xchg
orb
xchg
mov
adc
out
dec
add
cmp
jle
jns
pop
scas
out
jmp
incl
setle
and
push
xlat
test
push
fisttps
movsb
fistps
and
jle
es
dec
jb
repz
sbb
stc
stos
mov
movsl
leave
xor
xchg
cs
test
in
inc
les
sbb
retw
mov
sbb
sarl
icebp
add
and
dec
lret
jmp
imul
aaa
je
xchg
jmp
add
add
call
hlt
mov
shrb
js
rcr
xchg
fbld
mov
movsb
pushf
in
xchg
shr
insb
and
lds
test
pop
cltd
mov
loopne
adc
dec
mov
inc
mov
in
mov
or
sahf
inc
ret
sub
pmaxsw
hlt
xchg
addr16
sbb
cmp
jno
pop
pop
jbe
and
hlt
cwtl
jp
push
jmp
mov
aad
das
sahf
push
xchg
mov
fidivrs
scas
push
int3
nop
fwait
inc
pop
popf
mov
pusha
xchg
push
pop
cmpb
jle
mov
pop
xorb
movsb
std
push
jnp
outsl
adcb
xor
insb
mov
shll
mov
jne
cmp
adc
cwtl
xchg
and
lods
stos
sbb
mov
push
jae
arpl
es
loope
mov
sub
sub
insl
outsb
psubsw
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
inc
add
add
add
jmp
dec
inc
push
mov
nop
addr16
and
xchg
sbb
xor
add
rcl
imul
imul
sub
fdivs
repnz
shlb
or
cmp
dec
dec
mov
fsubl
movsb
pop
pop
sbb
ljmp
push
ljmp
pop
out
add
fdivl
jge
mov
in
and
xor
cmp
jne
roll
push
push
pop
lods
stc
stc
or
mov
inc
test
mov
int
cmp
sbb
fsubrs
adc
mov
in
pop
je
sbb
add
push
out
jg
ret
fidivl
inc
aam
hlt
sub
cmp
mov
mov
js
push
into
dec
imul
add
cmp
clc
push
inc
push
stos
or
clc
and
add
add
jns
xor
jg
xchg
fwait
xchg
add
add
mov
sti
jo
jle
cmpl
sbb
sbb
push
hlt
inc
mov
inc
imul
pop
push
sub
ss
pop
movsb
add
cmp
shlb
mov
call
loope
test
xor
cmp
mov
xor
jg
outsl
cmp
xchg
popa
push
xlat
bound
add
xor
pop
sar
sahf
cmp
ret
popf
inc
sub
jne
jmp
jne
lret
in
or
push
and
dec
call
das
mov
gs
in
hlt
and
lret
in
add
add
push
rep
mov
inc
jnp
mov
pushf
iret
lea
leave
xlat
cmpsb
xor
cmp
cli
nopl
push
sar
mov
pusha
in
fcmove
sub
popf
mov
inc
lcall
popf
lahf
pop
xchg
cmc
sbb
out
add
je
add
add
ret
jg
decl
rol
lods
jnp
movsb
movsb
inc
add
add
add
mov
clc
mov
jns
push
add
mov
xchg
xchg
push
fsts
lcall
jge
call
push
jo
lock
dec
test
pop
mov
out
dec
adc
inc
xchg
test
jnp
flds
mov
cltd
dec
ja
addr16
or
xchg
push
insb
inc
push
arpl
or
cmpsl
sub
in
adc
pop
mov
lretw
or
pop
mov
mov
loope
dec
and
lret
jae
add
arpl
cmp
and
and
xchg
cwtl
into
js
push
push
ljmp
sbbl
push
sub
add
push
loope
mov
mov
mov
in
inc
sbb
xchg
repz
inc
in
sahf
sub
and
push
outsl
test
mov
mov
sbbl
mov
imul
xor
adc
mov
out
aad
enter
inc
add
add
add
into
push
inc
ja
ljmp
pop
mov
mov
or
daa
mul
aas
roll
daa
and
push
movsl
xchg
aam
sub
repnz
and
sub
pop
ret
cs
or
imul
dec
mov
mov
les
adc
scas
pop
xchg
dec
inc
push
pusha
dec
jnp
push
dec
pop
push
mov
pop
mov
or
mov
cmp
sti
mov
sbb
nop
add
in
and
push
sbb
imul
mov
fcoml
push
imul
pop
lret
mov
shlb
sub
into
enter
fidivs
pop
shlb
jecxz
add
inc
push
repnz
movsl
dec
ja
inc
cld
out
shll
imul
push
test
test
xchg
inc
mov
fmull
out
insl
mov
inc
rorl
add
inc
icebp
hlt
gs
dec
adc
lea
add
add
mov
jecxz
adc
jns
xchg
mov
leave
fistl
ret
fs
lea
mov
xchg
xor
cmpsl
mov
repz
xchg
popf
mov
mov
ja
cmp
and
dec
push
pop
xchg
jle
andb
fs
cmp
enter
popf
cmp
enter
sbb
jg
or
cmpsl
out
mov
xchg
in
or
mov
popf
mov
mov
inc
inc
lcall
mov
fdivr
add
iret
stc
cli
cmpsl
lods
sbb
cmp
icebp
shll
pop
pop
lods
sub
jne
add
or
lret
pop
pop
jle
hlt
ljmp
fldcw
ja
das
sbbl
mov
push
int3
mov
add
aas
fsubr
push
repz
test
popa
dec
arpl
leave
loope
rcrl
push
inc
clc
inc
out
xor
sbb
add
aas
gs
pop
repnz
dec
add
add
add
ds
jmp
test
pmaxsw
cmpsb
sbb
pusha
pusha
or
icebp
push
adc
pushf
out
sub
sub
jmp
and
gs
mov
sub
mov
in
cmc
mov
inc
push
sarl
dec
test
cmp
imul
clc
push
cs
inc
pop
pop
dec
cmp
mov
in
jno
imul
pop
pop
outsb
push
lea
subb
lods
lods
cmp
inc
sbb
in
in
sub
ja
dec
enter
push
dec
push
popa
mov
jns
xchg
mov
inc
test
test
jns
fldl
loopne
lret
scas
cmp
loopne
out
movsl
adc
ljmp
iret
pusha
sbb
outsb
adc
xchg
mov
mov
andb
aaa
in
shl
jmp
mov
int3
outsl
add
or
scas
pop
mov
dec
push
movsl
push
dec
mov
sub
mov
out
fisttpll
lock
stos
mov
add
add
add
xlat
int3
add
sti
sbb
imul
or
hlt
int
and
cltd
sub
pop
cltd
and
push
pushf
xor
test
jecxz
aas
fiadds
mov
ret
rcll
enter
mov
pop
das
jbe
je
push
push
inc
lret
int
es
cmp
cmp
pop
push
nop
ror
loop
mov
std
lret
test
mov
cmpb
pop
pop
loope
out
out
mov
xor
pop
add
adc
adc
lcall
sub
std
mov
jg
sub
test
call
sti
push
in
out
or
cmp
addr16
loope
or
mov
cld
xchg
ss
ret
mov
mov
scas
in
loop
shlb
loopne
jb
xor
mov
lret
pop
fcmovb
fwait
xchg
shl
mov
mov
std
cli
fildll
mov
ljmp
add
add
add
lret
push
sahf
icebp
adc
inc
mov
out
jg
dec
gs
jo
mov
cmp
out
inc
mov
inc
and
movsb
or
daa
sbb
mov
loopne
dec
repnz
inc
adc
jae
add
push
aam
jmp
lcall
push
xor
sub
outsl
sahf
push
pusha
dec
inc
pop
dec
daa
sarl
sub
hlt
scas
xchg
daa
addr16
dec
xor
repnz
out
shlb
jae
xor
add
pop
notb
outsl
push
sbb
into
push
je
jmp
cmp
add
cli
mov
int
repz
mov
cltd
pop
and
fwait
cs
dec
or
hlt
mov
adc
shrl
sti
jne
xor
jne
fsubr
or
inc
adc
fs
dec
adc
jg
or
add
dec
scas
sahf
das
in
out
dec
les
adc
xor
out
xchg
add
add
jmp
out
aas
jo
sahf
jb
js
icebp
mov
add
add
adc
mov
dec
xor
xor
cmp
jmp
movsl
inc
dec
icebp
mov
push
pop
jg
pop
mov
pop
loop
push
adc
lret
inc
push
jge
jbe
sub
jbe
inc
lds
rolb
imulb
and
jl
fcoms
stos
sbb
inc
jmp
lcallw
sbb
xlat
repz
lea
adc
outsb
lea
sbb
stc
rcr
aam
call
inc
andb
hlt
xchg
sub
mov
xor
or
cmp
stc
rcr
adc
in
mov
ret
popf
sub
mov
enter
cmp
sub
cmc
out
push
add
aad
xchg
or
or
mov
mov
sbb
call
jno
ja
dec
daa
sub
push
leave
mov
into
jg
cmpb
mov
es
mov
ficoml
add
add
imul
out
mov
mov
jg
mov
dec
add
add
add
pop
push
push
rcrl
pop
cmp
andl
dec
je
sub
mov
mov
out
test
or
mov
jp
xor
push
dec
xor
mov
nop
jno
fs
fldl
xlat
pop
rcrb
aam
clc
jmp
jp
fcoms
mov
add
xchg
xchg
fsts
xchg
sbb
popf
sbb
and
cmpsb
xor
stos
push
or
adc
stos
loop
inc
mov
push
adc
sub
testl
rcrb
push
push
cmp
push
mov
mov
xor
in
fwait
or
dec
jp
jne
mov
int
cmp
or
repz
or
aad
and
sub
and
xchg
das
in
mov
pop
push
out
sti
lock
xchg
xchg
pop
out
and
xchg
fwait
or
das
mov
mov
xor
movsb
out
pop
js
add
dec
stc
mov
ljmp
les
add
add
fisubl
shlb
aas
ret
inc
scas
mov
sub
push
dec
roll
xchg
out
decb
mov
and
repz
shlb
ds
dec
cli
jno
and
add
pop
pop
addr16
gs
lret
cli
int3
lret
bound
sbb
xchg
and
fimuls
mov
aam
or
js
inc
cwtl
dec
sbb
cld
or
rcrl
popf
in
cwtl
mov
jno
push
or
adc
or
mov
xor
test
daa
xor
fnsave
dec
mov
imul
pop
test
test
dec
fmull
aaa
pop
test
test
int
add
push
inc
inc
push
in
mov
push
repz
movsb
push
push
rcll
ror
das
sbb
adc
jnp
imul
rolb
xchg
cmp
jle
jg
cld
lcall
enter
add
add
out
mov
cmp
jle
sub
push
nop
call
icebp
js
in
dec
xor
int
xor
fsubrp
adc
pop
lret
cwtl
pop
pop
mov
sbb
test
inc
fadds
jle
jae
in
mov
popa
cs
push
mov
popa
sub
repnz
xchg
mov
ja
xor
sub
dec
sub
mov
cmp
push
xor
jge
into
out
xor
shll
rol
shrb
cmp
test
jne
lret
ret
ja
push
test
imull
push
and
test
stos
or
testb
dec
jae
xchg
sbb
out
cli
jle
pop
push
and
movsb
push
push
aaa
mov
pop
shrl
xchg
ret
adc
clc
fidivs
orb
insb
jo
cld
sub
jb
les
xor
cwtl
pop
mov
pop
mov
xchg
mov
pop
and
dec
stos
int3
dec
add
add
add
gs
outsl
in
out
add
cld
int3
add
fadds
adc
dec
cmp
std
cmpsb
jge
sahf
pop
and
fdivl
clc
push
pop
xchg
sbb
jecxz
imul
sub
push
sbb
or
divb
xor
mov
in
in
sar
xchg
push
push
in
mov
outsb
push
pop
data16
push
das
pop
aad
lret
pop
pop
mov
movsl
iret
xor
ds
mov
fldt
pop
rcrl
sti
or
adcl
push
repnz
mov
hlt
cltd
lds
shlw
lret
fucomi
loopne
jns
mov
or
mov
incb
mulb
out
or
sbb
or
xor
test
repz
or
jmp
mov
add
jne
and
xor
mov
loop
xchg
mov
jno
mov
inc
push
sub
or
or
mov
and
adc
rclb
add
add
cmpsl
cwtl
jle
aaa
push
push
push
add
jbe
lret
push
mov
movsl
xor
adc
sbb
icebp
ljmp
cmpsl
outsl
setns
in
inc
out
jno
pop
loope
lock
movsb
push
dec
cmp
rcrb
jno
xchg
dec
out
aam
jl
in
sbbl
pop
imul
mov
and
test
xchg
sbb
cmp
jg
mov
mov
xor
sbb
in
pop
ss
aaa
jmp
mov
sub
fnstenv
shl
mov
lea
xor
xlat
xchg
lret
fwait
data16
out
das
stos
shlb
sub
fcmovb
lds
js
and
sub
sahf
in
dec
leave
mov
es
insl
dec
add
dec
test
mov
lea
xor
and
mov
pushf
and
pop
call
push
cmc
lahf
sbb
insl
test
loope
add
xchg
scas
iret
fsubrl
mov
out
cmp
ret
or
fadds
add
add
add
add
lods
je
push
and
iret
xor
outsb
addl
pusha
popf
lahf
out
mov
das
cmp
dec
arpl
or
aad
push
sbb
jno
loope
aaa
sub
push
pop
dec
xchg
roll
sti
scas
xlat
jb
shl
aam
repz
mov
insl
addb
mov
dec
push
pop
icebp
mov
popf
loop
push
jge
pop
dec
out
pop
jno
mov
int
in
sbb
cs
mov
es
sahf
and
test
mov
popf
imul
aas
bound
jecxz
dec
test
ljmp
mov
sbb
fwait
in
popf
ljmp
arpl
mov
pop
push
js
or
cmpsl
into
dec
xchg
test
add
push
sbb
pop
pop
lods
rcrb
jmp
movsb
data16
inc
jle
jle
push
sub
int
sub
and
imull
pushf
andl
pop
jb
leave
cltd
or
out
sahf
inc
or
push
shll
out
pop
pop
pushf
push
loope
fstp
push
add
add
add
in
xlat
dec
inc
lcall
cli
and
into
xchg
js
jnp
and
mov
push
cltd
add
ss
and
mov
inc
fisubrl
add
sbb
mov
lahf
cltd
push
mov
add
mov
mov
mov
dec
cltd
insl
mov
notb
out
daa
pop
jge
out
xchg
push
bound
lds
mov
fadd
push
xchg
inc
xor
xor
imul
cmp
test
mov
outsl
insl
jae
sub
lcall
or
mov
add
scas
or
mov
sbb
bound
in
int3
mov
in
cmp
cld
add
mov
mov
add
and
jb
in
mov
push
or
mov
or
adc
mov
test
lcall
push
int
add
cmp
pop
out
stos
push
lcall
hlt
mov
sbb
leave
fcoml
add
add
movzbl
aad
test
fstl
and
frstor
clc
xor
out
testb
fidivrs
xchg
jnp
xchg
out
or
dec
push
dec
repnz
sti
int
addb
jbe
out
arpl
xor
inc
add
mov
movsl
test
mov
sub
cli
dec
push
cli
sub
cmpsb
or
filds
inc
inc
pop
fidivrs
out
sahf
push
in
pop
or
mov
sbb
add
and
xor
adc
cmc
js
or
dec
shrl
dec
pop
sbb
das
mov
inc
inc
or
and
or
and
fwait
data16
lcall
cmp
popa
push
jo
int3
outsl
fs
and
mov
mov
jns
repnz
fdivrl
jns
sti
add
xor
push
iret
xor
dec
mov
add
dec
or
bound
imul
add
nop
loopne
add
add
add
shll
xchg
clc
fbstp
add
das
sub
or
add
push
sub
or
test
mov
mov
testl
stos
sub
sub
imul
pop
mov
test
pop
dec
incb
jo
js
lods
lret
xlat
sub
enter
out
inc
adc
int
xor
lds
aad
pop
sub
lods
pop
mov
push
loop
xchg
jge
dec
and
fcoml
fbld
push
aas
dec
inc
xchg
xchg
jmp
das
push
push
stos
lods
lcall
pop
xor
xor
mov
dec
mov
subl
icebp
adc
adc
cld
arpl
jb
out
fnstcw
les
pop
cmp
ja
fsubl
sub
shrb
dec
xchg
cmpsl
out
mov
lea
jae
fwait
cmp
stos
sarb
in
add
add
add
push
push
ljmp
test
or
stc
lret
aam
lods
sti
cmpsb
pop
jns
push
mov
push
in
cmp
data16
ss
psubq
inc
mov
sbb
rorl
nop
fdivrl
jnp
jg
mov
push
lret
mov
adc
xor
fwait
into
pop
and
enter
test
movsb
adc
or
and
push
and
iret
adc
sub
or
test
loopne
push
cmpsl
adc
mov
jecxz
test
sub
adc
mov
repnz
push
sub
mov
cmpsb
scas
mov
dec
and
add
push
test
gs
push
mov
dec
xor
lock
repz
sbb
sub
sbb
sub
inc
add
xchg
insb
xchg
or
leave
stos
out
int3
test
push
leave
mov
fiaddl
test
inc
inc
push
clc
mov
and
hlt
lret
pushf
call
add
add
aas
add
add
push
cmpb
push
pop
mov
and
stos
call
cmpsb
insb
add
call
or
pop
fwait
xor
xchg
lcall
add
in
fstp
jns
xor
shlb
insl
loope
test
inc
cwtl
out
popa
cmpsb
mov
insl
aaa
shll
in
sbb
xor
jne
test
sub
ss
jge
das
push
pushf
fnstsw
sbb
adc
test
mov
push
ret
xor
or
sub
fsubrs
inc
or
sti
test
rol
push
cmp
bnd
pop
push
or
les
daa
adc
out
mov
and
dec
inc
es
popf
loope
mov
jno
mov
sub
int3
inc
popa
lods
cld
cmc
fnsave
sub
and
shrl
and
push
jnp
xor
dec
stos
cmp
pop
test
mov
mov
add
shr
mov
xchg
push
push
add
add
xchg
int3
xchg
pop
sub
push
pushf
cs
or
sbb
pushf
jns
push
inc
cltd
nop
push
adc
cmpsb
outsl
cs
pop
lcall
scas
sbb
sbb
mov
add
in
shl
xchg
jo
push
rolb
jb
sbb
inc
mov
adc
inc
outsl
movsl
lods
rcrb
and
je
aaa
jae
imul
inc
mov
inc
and
mov
jnp
popa
jns
mov
ss
push
enter
fidivl
out
addr16
mov
cmp
pop
lods
mov
push
popa
xchg
push
jmp
mov
dec
pop
loope
int
gs
outsl
or
xor
call
mov
sti
mov
inc
sbb
sbb
pop
jmp
icebp
sar
dec
inc
sub
jbe
test
xor
mov
pop
out
stc
fwait
ja
xchg
cwtl
les
out
sbb
jmp
cmp
in
js
mov
add
test
or
fdivs
es
lock
lock
add
add
add
xor
sbb
loope
jl
and
mov
hlt
sbb
add
icebp
in
shrl
gs
adc
jle
lds
sti
pop
iret
pop
into
mov
xor
mov
cmovp
push
and
fisubs
test
dec
outsb
fs
imul
aas
jmp
mov
or
and
dec
push
bnd
in
inc
add
mov
and
or
in
cmp
ja
push
mov
xor
shrl
xchg
push
pop
jbe
jecxz
xchg
addb
pop
mov
mov
xchg
add
popl
not
mov
mov
and
sub
adc
shr
stc
jb
push
dec
mov
sbb
push
iret
pop
sub
push
xchg
pop
pop
or
in
push
cmp
std
popf
jo
pusha
cmp
and
ds
add
mov
and
das
cmp
pusha
cmp
mov
pop
add
add
add
bound
in
movsl
ds
mov
sub
hlt
movsl
xchg
sub
pop
and
stos
arpl
or
sub
les
or
stc
sub
outsl
js
aas
dec
leave
stos
pop
or
jbe
test
movsl
dec
sub
cli
xor
xor
mov
push
aam
mov
xchg
jns
lea
lods
jge
lret
mov
ficompl
cmp
sbb
xlat
fisubl
pop
inc
xor
inc
push
mov
lock
mov
inc
jl
test
xchg
jno
aas
xchg
xor
scas
ds
aas
cmpsb
cmp
xor
in
aas
rcll
push
lret
push
out
or
push
pop
pop
pop
xchg
loopne
mov
fcompl
mov
bound
imul
sahf
pop
inc
leave
jns
and
cli
cmp
push
jg
dec
jae
jbe
addl
cwtl
mov
xchg
scas
or
xor
test
in
jg
js
sbb
fsubl
mov
ja
mov
enter
pop
add
add
add
jmp
pop
push
xchg
iret
mov
in
inc
xchg
movb
dec
call
popa
je
nopl
fdivrs
loopne
insl
push
les
mov
push
insl
inc
xor
mov
test
shll
mov
cmp
jg
or
lock
cmp
lods
shlb
sbb
movsl
outsl
jp
push
adc
adc
das
sbb
mov
jge
push
mov
daa
inc
gs
mov
nop
add
mov
pop
lea
xchg
out
mov
pop
loopne
out
xlat
lahf
inc
sbb
push
inc
add
rcll
jecxz
adc
or
jmp
xor
int
imul
xor
ret
jb
pop
dec
and
mov
cmpsl
mov
movsl
jge
and
mov
jle
add
add
xor
xlat
out
cld
iret
cli
cld
pop
add
add
add
outsl
loopne
push
jo
sub
mov
mov
mov
sbb
adc
jnp
pusha
pushf
aaa
insb
mov
fisubl
adc
fsubrs
jle
clc
rcrl
pop
aad
cli
pop
sub
ret
leave
bound
in
push
mov
mov
mov
xor
add
in
aad
sbb
stc
sbb
dec
sub
std
cli
pop
adc
jb
mov
imul
cmpsl
or
inc
dec
xchg
fdivs
sub
aaa
enter
loope
push
mov
out
push
cmp
xchg
fisttpl
aad
or
mov
xor
clc
scas
push
and
jge
gs
rcr
lret
out
fidivrl
pop
aam
cmp
push
sub
mov
mov
aam
dec
ljmp
es
xor
add
jle
sub
mov
xchg
add
xchg
ret
jl
stos
pop
dec
add
add
add
mov
add
mov
pop
add
add
add
sub
sbb
shlb
cmp
sarl
out
xchg
in
not
mov
sti
xchg
add
jb
pop
lea
aas
sbb
adc
aas
xchg
nop
push
aas
movsl
loope
imul
push
jae
sub
mov
or
cltd
popf
stos
icebp
std
hlt
sbb
fistps
mov
or
xchg
es
in
mov
inc
pop
outsl
xchg
ja
sbb
xor
mov
jmp
ds
mov
mov
pusha
and
hlt
pop
nop
jge
jg
inc
jmp
inc
out
movsb
es
in
push
adc
add
lret
push
pop
sub
mov
dec
fisttpl
pop
adc
pop
mov
gs
clc
jnp
jae
mov
pop
add
push
fidivs
cmp
xchg
xchg
cld
pop
cli
jmp
js
add
sahf
cltd
sbb
leave
sarl
call
sbb
out
into
push
push
inc
lahf
mov
add
add
add
add
inc
push
sub
add
pop
sti
enter
sub
stos
cld
mov
jp
ret
push
out
xor
xchg
pop
mov
shr
mov
mov
xchg
mov
inc
pushf
and
sbb
pop
push
push
jmp
pop
xor
sbb
rcrl
jle
mov
outsb
bound
cmp
push
dec
mov
daa
dec
dec
frstor
mov
movsl
sbb
dec
movsb
in
xlat
add
out
mov
cmpsb
mov
mov
xchg
or
cmp
popa
dec
addl
cmc
jbe
add
push
enter
or
daa
pusha
in
xchg
adc
fldt
cmpsl
sub
sub
imul
mov
in
add
js
in
test
mov
js
inc
imul
out
jb
loopne
add
and
mov
jg
or
or
add
add
movsb
int3
push
bound
test
daa
in
out
test
or
movsl
fldenv
cmp
and
mov
inc
or
rclb
mov
xchg
and
cmpl
xchg
scas
stc
in
xchg
test
arpl
outsb
dec
leave
cmp
test
add
pop
aas
es
into
inc
data16
adc
ret
scas
scas
cmc
jmp
iret
imul
sbb
mov
jns
cmpsb
test
gs
jmp
lock
adc
out
divb
mov
fdivl
push
cld
push
scas
dec
cmp
lcall
scas
pop
push
imul
aaa
add
xor
negb
dec
ja
ss
cld
pop
jns
cs
xlat
into
lret
pop
setnp
push
js
or
mov
sub
push
and
inc
sbb
push
or
sub
scas
inc
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
push
add
pusha
add
add
add
jl
jno
xchg
pop
roll
daa
sbb
sbb
stc
mov
imul
cmp
push
sub
push
push
mov
add
inc
repz
sub
ja
andb
sub
clc
mov
loope
fs
shlb
out
adc
and
mov
mov
push
add
cmpb
add
sbb
xchg
fsubr
cmpsb
push
sbb
das
push
ds
cmp
mov
pop
stc
adc
int
out
stos
pop
out
gs
into
xor
push
std
adc
inc
mov
jmp
cmp
pop
sbb
jno
push
lea
sbb
ljmp
repz
dec
jmp
adc
cld
xchg
push
or
push
xor
mov
hlt
mov
xor
cmp
imul
test
add
sahf
pop
testl
jecxz
mov
popa
add
add
add
rol
mov
cmp
pop
insb
jo
xchg
cmp
push
ret
and
xchg
xchg
stos
fdiv
stos
dec
mov
shrb
shll
push
shr
popf
idivb
lock
dec
cld
mov
dec
mov
sub
pop
stc
fidivs
dec
rcl
dec
jns
fisubrs
or
sbbl
dec
lods
clc
js
in
lea
and
sbb
xchg
pop
mov
add
cli
sarb
adc
inc
add
pop
leavew
aaa
xchg
test
int
lcall
rcrb
stc
push
dec
scas
arpl
jne
pop
pop
mov
push
mov
movsb
insb
fnsave
and
mov
sub
push
add
cmp
jae
fstps
mov
jae
aad
xor
ja
mov
stos
xor
jnp
arpl
insl
dec
or
add
add
add
pop
mov
fstps
aam
adc
add
add
add
adc
int
xchg
aas
nop
shll
xor
or
int
mov
insb
push
mov
and
setne
orb
pop
mov
push
inc
xchg
imul
aam
repnz
frstor
mov
mov
enter
push
cmp
pop
push
arpl
cwtl
xor
enter
push
in
xor
leave
sub
repz
clc
dec
add
pop
frstor
or
enter
push
add
jle
imul
je
dec
xlat
xchg
inc
rcr
incl
pop
into
jo
jp
inc
inc
sub
xchg
push
int
dec
mov
jno
sahf
lcall
mov
out
sbb
lods
or
test
test
stos
pop
xchg
shr
jmp
sbb
stos
jnp
out
leave
scas
pusha
push
loop
mov
rorb
xchg
loop
add
mov
rolb
dec
jo
mov
push
sbb
jbe
sahf
cmp
add
add
repnz
movsb
jle
arpl
push
outsb
sbb
add
add
adc
and
loop
pop
shll
mov
inc
lods
sub
std
xchg
mov
int3
seta
pop
nop
mov
ljmp
in
outsl
push
mov
pushf
cltd
movsl
and
sbb
rcr
ja
popf
mov
jge
mov
cmp
mov
jecxz
sbb
clc
jmp
mulb
cli
fsubs
pushf
inc
or
aas
pop
jbe
add
in
sarb
arpl
in
mov
adcl
test
cmp
push
aam
jne
xor
pusha
mov
ljmp
xchg
leave
inc
push
bound
cmc
xor
ds
icebp
lahf
pusha
xor
cmc
sbb
stos
cmc
pop
jbe
or
lds
lea
outsl
aas
lret
and
cs
cmp
mov
arpl
imul
adc
cmp
xor
pop
stos
sub
stos
out
jmp
sub
inc
sub
add
add
add
bound
dec
outsb
mov
and
inc
inc
pop
inc
mov
inc
ret
mov
je
aaa
mov
mov
loope
and
cmp
in
cmp
add
mov
jns
push
loope
test
ljmp
aas
flds
es
push
enter
jle
dec
fistps
addl
and
sub
push
mov
fimull
clc
divb
out
cmpsb
xchg
sti
mov
mov
push
jle
incl
cmp
inc
jbe
mov
dec
sbb
xchg
jmp
ret
or
mov
xor
sub
aas
push
sbbb
test
lds
lahf
lock
in
cwtl
jbe
adc
mov
stos
xor
xchg
data16
sbb
inc
ja
filds
add
add
mov
fnstenv
or
in
and
add
add
xchg
jae
repnz
xor
or
and
xchg
out
test
dec
ret
loop
pop
shll
adc
push
je
add
into
stos
xchg
cld
sbb
loop
aaa
sub
mov
push
iret
push
leave
mov
cmpsl
stos
add
repnz
push
ret
scas
in
mov
int3
orb
popa
and
popa
push
js
adcb
in
mov
sub
or
or
decb
xlat
cmc
xchg
xchg
mov
or
outsb
push
push
inc
idiv
dec
xlat
mov
outsb
in
clc
adcb
test
and
push
or
stc
lret
in
dec
jecxz
mov
jbe
int
test
scas
and
mov
mov
mov
fwait
js
in
cmp
push
mov
fmull
xchg
mov
dec
jbe
mov
inc
mov
mov
push
out
push
faddl
add
add
cld
je
jbe
jns
sbb
mov
push
jg
add
add
add
and
ds
repnz
cmp
cld
xchg
test
cwtl
lods
xchg
es
loopne
dec
int3
cmp
bound
push
mov
mov
sahf
xor
xor
inc
dec
shrb
stos
xchg
outsb
je
scas
insl
mov
cli
mov
cmp
dec
xor
mov
test
loopne
or
pop
outsl
popa
dec
cli
sub
sbb
hlt
push
repnz
cmp
or
movsl
out
aad
andl
mov
sbb
mov
xor
xchg
adc
lret
push
sub
fisttpll
push
mov
test
mov
leave
push
adc
pop
addr16
jmp
jb
std
pop
pop
push
add
divb
mov
mov
jmp
sbb
adc
aaa
or
jg
jge
clc
jle
in
add
js
sub
push
cltd
jmp
fildl
or
push
lcall
add
repnz
loope
ljmp
rcrb
sub
int3
jg
xor
hlt
push
fsubs
jmp
adc
movsl
aam
xchg
subl
or
sbb
push
lds
fcoml
inc
cld
ljmp
aaa
in
adc
es
inc
dec
xchg
repz
mov
ret
repnz
jb
adc
pop
mov
out
imull
jge
int
add
push
adc
adc
pop
lods
add
push
jp
repz
mov
stos
cmpsb
dec
mov
in
test
cltd
xchg
test
mov
in
popf
loopne
pusha
sbb
push
adc
ud0
jle
dec
jp
mov
iret
cmp
imul
int
ret
xor
mov
push
in
cmp
or
inc
mov
daa
jle
aaa
xchg
icebp
dec
push
outsl
insb
xchg
or
dec
mov
xchg
lods
add
outsb
cmp
or
inc
xor
out
out
mov
mov
push
jg
dec
xchg
dec
popf
sbb
sub
add
add
add
xor
out
test
jo
mov
sub
dec
in
iret
roll
cmp
mov
into
repnz
out
cmpsb
pop
cwtl
iret
shl
ret
rdtsc
inc
aaa
lds
movsb
cmpsl
jno
jecxz
lods
leave
cld
mov
sbb
xchg
jp
or
fldcw
lock
cwtl
adc
or
call
call
pop
push
xor
fsts
add
pop
inc
adc
sub
adc
dec
ljmp
xchg
enter
sbb
mov
divb
xchg
lret
or
mov
jne
jns
push
jge
xchg
add
mov
dec
cmp
js
cli
lds
jg
das
xor
xchg
xchg
hlt
je
cmp
mov
inc
or
sub
adc
xchg
or
xchg
jge
mov
lret
jo
cmp
iret
mov
fucomip
push
insb
xor
outsl
repz
imul
add
cmc
or
test
ja
push
xorl
fcmovb
test
cmp
jge
sti
fsts
mov
cld
push
loopne
adc
xchg
pop
sub
mov
cltd
xchg
push
push
jb
int
xor
jne
popa
xchg
mov
sub
pop
and
dec
mov
pop
push
cmc
aaa
sub
fisubrs
pop
adc
insl
cmp
loope
rcrl
sbb
repz
or
repz
sahf
xchg
push
adcb
sub
pop
push
cmpsl
mov
and
sahf
nop
pop
sub
adc
fnstenv
xor
frstor
sub
mov
pop
pop
loop
inc
push
addr16
cmc
dec
mov
cmp
cmp
fcmovnb
mov
mov
xor
cmp
sub
inc
stos
fstps
outsb
add
ja
in
sarb
inc
jb
or
leave
mov
add
add
dec
out
iret
jmp
aas
in
push
retw
hlt
xor
add
add
add
arpl
cmp
pusha
imul
sub
push
out
addr16
pop
shrb
in
in
push
inc
fcoms
push
aas
cmp
in
xor
dec
cmp
iret
lds
js
cli
mov
in
xchg
adc
mov
rol
ror
aam
sarl
dec
aam
sub
mov
push
pop
jp
lods
inc
rorl
push
loop
shrb
pop
xchg
or
das
sub
adc
jg
scas
pop
cmc
mov
pop
nop
xorl
push
and
dec
into
adc
dec
test
jmp
pop
not
stos
bound
sbb
pop
dec
int
es
or
daa
mov
mov
aad
mov
or
outsb
sub
mov
mov
or
mov
or
xor
ja
test
daa
arpl
cli
sbb
mov
jecxz
inc
insl
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
hlt
cmp
add
add
dec
sub
test
inc
adc
subl
push
push
sub
push
sarb
scas
test
pop
adc
xor
pop
out
imul
pop
mov
dec
mov
cmpsb
pop
scas
pop
xlat
pop
dec
mov
sbb
orps
stos
push
pop
out
sbb
lds
push
mov
inc
add
subl
add
test
and
mov
inc
xor
sbb
add
pop
lods
pushf
lea
jne
arpl
sbb
test
std
sahf
rorb
jb
int3
int
pop
inc
clc
and
or
xchg
lret
pop
adc
pushf
test
aaa
lret
jbe
sbb
dec
sub
mov
adc
xchg
mov
adc
adc
xor
in
into
or
mov
push
jae
out
lret
rorl
jns
jg
dec
in
lods
imul
neg
std
sub
dec
inc
push
fmul
cmp
add
add
add
xchg
fistl
lret
mov
xchg
mov
sbb
lret
aas
push
jge
movd
lcall
pop
ljmp
and
jo
aad
inc
or
fnstcw
out
push
pop
mov
out
pushf
push
movsb
movsb
testb
cs
aad
add
movsb
mov
aas
outsb
lods
int3
loop
mov
lea
xor
add
mov
iret
rcrl
add
mov
pop
add
pop
ret
cmp
sahf
imul
push
jno
sub
jmp
push
jno
std
sbb
imul
and
xor
dec
fucomip
aad
movsl
pushf
stos
mov
sbb
popa
jecxz
pusha
test
test
cltd
add
daa
stc
add
ljmp
outsb
ss
and
icebp
mov
movsb
movsb
jl
addr16
mov
add
and
outsb
dec
popa
sub
arpl
add
push
subb
in
push
mov
dec
jecxz
dec
inc
insl
add
add
add
mov
sarl
jecxz
sarl
jge
xor
lret
ss
push
xor
das
mov
test
mov
jmp
pop
and
outsb
add
cs
mov
inc
push
sub
or
popl
aad
adc
ds
or
outsl
rcll
xchg
shrl
pop
pusha
insb
inc
sbbl
push
dec
aaa
xor
inc
rcrb
shrb
dec
adc
ss
fbld
dec
mov
addl
shl
cltd
adc
cmp
rorl
mov
xlat
into
sbb
cmpsl
mov
cwtl
and
cld
loopne
mov
push
arpl
dec
pop
cmpsb
mov
lods
push
repz
imul
arpl
ds
xchg
jg
sub
pusha
mov
mov
outsl
ds
rol
mull
dec
sub
nop
and
rorl
addr16
in
dec
xchg
push
cld
mov
mov
lcall
out
sbb
addl
add
add
xchg
hlt
jp
insb
andl
cmpsb
pop
aad
loope
movsl
mov
ja
shlb
jmp
mov
pop
pop
inc
mov
stos
lods
lea
mov
cmp
into
leave
fistpl
dec
jb
cmp
xor
das
in
fdivs
imul
dec
imul
loope
jmp
test
movsl
pop
les
mov
in
incl
shl
jo
pop
sbb
sbb
inc
jb
std
inc
ret
cmp
sbb
mov
dec
add
fwait
repz
pushf
xchg
jae
in
push
test
inc
inc
dec
lea
dec
sti
jno
jmp
mov
adc
jne
pop
sbb
cmp
sub
mov
mov
xor
jns
jae
xchg
int
cmp
push
add
fcoml
mov
es
in
popa
insl
add
lock
daa
sub
ja
mov
and
add
add
add
xorl
stos
cltd
stos
rcl
or
cmpb
cs
mov
aaa
imulb
and
adc
sub
icebp
or
iret
dec
call
and
cs
subl
fdivrs
jge
in
mov
cld
hlt
cs
aad
cli
clc
lds
mov
in
push
mov
and
pop
pusha
test
xchg
cmpsl
pusha
or
push
fmulp
insl
out
add
and
push
jae
cs
mov
je
jae
or
mov
jle
inc
pop
adc
lcall
xor
push
xor
insb
popf
mov
sbb
jl
ret
fadds
or
pop
in
std
xchg
ja
pop
push
stc
xor
mov
dec
dec
inc
cmp
inc
ret
outsl
pop
rclb
mov
ret
push
and
xchg
lock
dec
popf
add
xchg
dec
inc
dec
mov
cld
inc
filds
add
add
cmp
jnp
outsl
cmpsb
loopne
iret
int
dec
jo
add
add
mov
mov
mov
xor
scas
xor
iret
ds
jb
ja
scas
into
lea
pop
mov
dec
and
sti
arpl
or
arpl
push
clc
dec
fsubr
test
cld
in
xchg
xor
jmp
adc
notl
mov
add
aas
clc
sti
add
in
arpl
mov
mov
mov
xchg
outsl
and
sbb
dec
mov
dec
xchg
lahf
xchg
inc
inc
enter
pusha
frstor
push
or
pop
cld
cld
rcrb
mov
xor
mov
sbb
push
aam
pusha
mov
and
mov
xchg
loop
dec
andb
push
ret
popf
mov
xor
sub
cmp
out
stos
mov
pop
popa
lea
cld
add
jno
inc
jle
inc
jb
pop
adc
lods
xchg
mov
dec
mov
sub
and
outsl
int3
mov
mov
xchg
push
mov
cli
xchg
jle
push
je
leave
ja
mov
add
add
leave
lret
inc
ljmp
cmp
insl
leave
mov
adc
jns
in
adc
daa
xchg
rcll
dec
cmp
inc
sarl
xchg
jg
fbstp
inc
xor
xchg
push
mov
push
xchg
hlt
lock
or
sub
pop
inc
sbb
xorl
adc
pop
or
lea
push
sbb
lret
jns
push
pop
jnp
cmpsl
mov
arpl
pop
std
into
data16
fs
movsb
push
das
cwtl
lcall
dec
fdivl
out
out
jno
insb
xchg
out
loope
mov
mov
push
fs
cmp
push
jmp
cmp
cwtl
push
xor
mov
out
push
pushf
in
or
ljmp
test
cld
cmp
sahf
mov
adc
into
imul
jns
or
sahf
cmc
out
popa
loope
mov
push
mov
cwtl
out
pop
sti
cmp
mov
add
add
fwait
jnp
aad
sbb
in
push
jb
add
add
in
nop
pop
cmpsl
push
adc
jne
lds
out
xchg
mov
sub
shr
sub
mov
jge
sti
jle
adc
mov
lahf
loope
shlb
push
data16
or
add
xchg
je
or
popl
mov
jmp
sbb
aaa
cmp
and
sub
stos
pusha
pop
add
adc
aas
dec
xlat
lea
out
or
inc
mov
cltd
pop
lcall
notl
xchg
xorb
gs
pavgb
sub
xor
push
mov
jecxz
push
sbb
mov
sahf
push
ja
push
inc
in
mov
sub
and
in
push
and
outsb
ds
cwtl
lret
xor
aas
popa
lret
repnz
fcomp
xor
inc
js
mov
ja
inc
sbbb
mov
and
sti
sbb
adc
xlat
adc
imul
pop
adc
add
add
std
mov
sub
or
add
add
lods
xchg
daa
in
test
mov
jae
sub
popw
inc
sub
jge
lahf
pop
sub
es
mov
jmp
in
dec
mov
pop
out
push
dec
test
fsubrp
cmc
sbbl
sahf
lret
outsb
cwtl
xor
sbb
je,pt
cs
out
insl
ret
out
xor
daa
or
pushf
pop
inc
fcomip
jb
adc
xchg
jp
push
dec
pop
cmc
mov
lret
cmpsb
cs
rcrb
inc
adc
notb
jmp
orl
fisttps
or
shlb
imul
ret
aam
iret
pop
lods
dec
add
decl
pop
push
int3
mov
movsl
ret
and
cwtl
lcall
jo
mov
push
cmp
push
lahf
repnz
test
sub
mov
jp
fsts
add
add
fstl
lret
inc
dec
pop
je
add
add
xor
or
push
pop
popa
add
loopne
cwtl
stos
test
stos
lea
and
dec
adc
rolb
stc
push
fisttps
or
cli
in
lret
mov
sbb
sbb
cmp
fdivr
jo
push
and
inc
lock
pop
xchg
push
cmpl
mov
rorb
lods
pusha
pop
sub
jae
dec
nop
ljmp
jmp
jg
push
loopne
cli
and
xor
sub
insb
sub
dec
mov
sub
hlt
lret
jp
lea
addr16
mov
das
aam
adc
lods
jp
or
sub
push
push
inc
stc
xor
cmp
inc
inc
or
pop
add
mov
mov
xchg
lea
jecxz
scas
out
fnstenv
inc
jl
mov
pushw
aas
mov
cmp
jg
nop
je
lahf
loope
add
add
bound
sub
sbb
jne
add
add
cwtl
inc
inc
mov
jne
xchg
pop
scas
rclb
out
cmp
stos
mov
mov
pop
inc
das
subb
xchg
push
mov
xor
push
sbb
pop
out
xchg
pop
in
lcall
sub
in
push
dec
imul
lds
sbbl
shll
jecxz
popa
mov
push
pop
sub
test
mov
in
xorl
std
rcrl
mov
std
add
xchg
lock
sub
xchg
sub
movsl
jo
jl
and
out
mov
sbb
adc
out
ror
lret
movsl
jne
popa
aas
mov
incl
sbb
mov
stos
neg
jo
mov
inc
in
loopne
push
repz
stos
lock
sub
nop
in
push
cmpsb
adc
adc
sub
xor
sbbb
jne
stc
xchg
popa
add
orl
mov
add
add
divl
in
sub
fs
add
add
xor
popa
xor
push
lea
in
pop
mov
mov
push
movsb
jb
imul
pop
mov
xlat
pop
mov
scas
jne
sub
add
ljmp
sbbb
ror
cmp
dec
cwtl
or
or
or
leave
ret
jne
stos
sbb
mov
dec
push
inc
in
aaa
leave
stos
shll
lcall
push
jp
mov
int
pop
insb
test
arpl
lds
imul
arpl
jne
xchg
lds
loope
and
jne
enter
mov
outsb
bound
sbb
push
mov
mov
int3
jl
pop
xchg
movsl
in
bound
lret
inc
jp
or
mov
inc
cmp
pop
inc
inc
or
ror
mov
push
mov
ja
stos
adc
in
lcall
fisttps
push
iret
aam
andl
jmp
aam
sbb
add
add
fisubs
mov
mov
or
push
add
add
cmp
add
cmp
mov
and
lret
js
push
outsb
add
inc
mov
sub
popf
pop
gs
ljmp
sub
jno
and
out
sub
inc
push
push
sub
cli
adc
mov
loop
fcmovu
mov
xor
lds
or
add
cwtl
sub
sub
jns
idivl
dec
das
or
shll
mov
bound
sbb
shrl
add
rcrl
mov
bsr
loopne
push
loope
xchg
adc
jg
sbb
inc
sbb
ret
std
orb
lea
aas
mov
pushf
icebp
pop
jg
pop
popf
jg
jbe
clc
lods
xlat
cwtl
fmull
jmp
push
pop
sub
push
jmp
rorl
dec
push
data16
mov
jp
mov
scas
rorl
shr
add
add
mov
outsl
jne
ljmp
test
add
add
push
cmp
push
imul
xchg
mov
faddp
add
sbb
test
lcall
dec
xchg
sbbb
sub
sbb
int3
push
hlt
xchg
mov
lods
sub
stc
roll
xor
ficoms
outsl
loope
pop
roll
jae
sub
dec
cmpsb
out
xchg
mov
mov
or
sbb
stc
out
test
prefetch
or
rcr
in
mov
stos
fildll
cmpl
cld
bound
inc
or
icebp
popa
rclb
outsl
movb
rcr
movsl
dec
and
sar
dec
adc
jp
cmp
sbb
nop
mov
les
dec
test
jb
xor
mov
jo
das
mov
mov
add
testl
add
add
testl
sbb
add
add
add
push
or
jne
sub
test
les
xor
inc
mov
pop
cmp
decb
out
inc
mov
or
movsl
inc
stc
cmp
jnp
ret
rcrb
pop
mov
test
mov
lods
xor
jb
insl
cmp
iret
mov
movsb
mov
sti
inc
addr16
jne
cmp
lcall
std
into
add
stos
aad
das
xchg
jge
and
and
adc
mov
jnp
adc
cmp
scas
and
aaa
test
bound
xchg
sbb
sbb
push
ds
jb
mov
push
test
orl
inc
cmc
sub
adc
cmp
fistpll
cmpsl
loope
jns
cwtl
jb
xchg
jo
pop
dec
jno
fimuls
scas
xchg
mov
xor
cli
idivl
fidivs
sbb
pop
jecxz
cmc
sbb
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
mov
mov
bound
in
sub
and
xor
cmc
es
xor
insl
jns
or
mov
jge
inc
aas
inc
jnp
and
cmp
xlat
cwtl
xlat
mov
cmp
pusha
inc
repz
mov
lods
xadd
mov
enter
xchg
lods
ficoml
outsl
sti
dec
adc
leave
jnp
mov
jne
xchg
call
aam
leave
jb
sub
lea
out
sub
push
cmp
insl
push
lea
orb
sub
or
pop
xchg
dec
pushf
testl
test
inc
in
cmp
sub
mov
xchg
or
fnstsw
faddl
iret
pop
pushf
lret
or
rcr
pusha
mov
sub
fldenv
cs
mov
imul
add
add
cmpsb
push
sbb
call
add
add
push
aaa
jb
in
cli
push
push
mov
jbe
loop
shrl
jbe
shll
fcmovu
clc
and
mov
mov
xchg
shrl
je
push
loopne
mov
out
aam
lods
icebp
or
mov
movsbl
fdivs
fcomip
outsb
mov
out
pop
sub
pop
dec
ror
movb
lds
sbb
aas
in
orl
cmp
int
cmp
jl
jg
xchg
dec
test
cmp
push
inc
cmp
pop
or
jge
mul
orb
je
inc
jmp
xor
jg
mov
loope
xor
push
and
jle
mov
sub
clc
cld
test
adc
or
enter
mov
push
xor
sarl
loop
roll
imul
adc
xchg
iret
dec
sbb
int
pop
inc
dec
pop
push
jnp
jmp
pop
sbb
xor
cli
mov
adc
daa
xchg
jl
add
add
add
push
or
aaa
cmpsb
push
loopne
dec
pushf
ljmp
sarl
fs
sbb
pop
xchg
jmp
mov
jo
insb
adc
or
lahf
shl
insl
ljmp
inc
xlat
and
pop
icebp
dec
xchg
dec
repnz
clc
sarl
fbstp
inc
sbb
push
dec
mov
loop
pop
sar
push
jb
cli
int
xchg
sbb
add
and
push
test
rcr
jae
mov
xchg
out
rcl
push
push
rcr
jge
call
in
jle
in
xor
xor
dec
xchg
sub
or
push
shrb
mov
adc
into
fidivrl
call
sbb
mov
pop
shlb
popf
jae
out
iret
je
loopne
xchg
or
sub
mov
addr16
cmpsl
fsubrs
or
jle
push
or
inc
les
mov
jae
std
test
lcall
or
pop
cmpb
add
add
pop
bound
bnd
je
cltd
mov
add
repnz
dec
out
mov
adc
bound
xchg
lea
les
cwtl
std
mov
pop
push
stos
js
cmpsl
dec
cmp
aaa
mov
cmp
repz
fidivs
imul
sahf
cwtl
or
mul
or
adc
lock
pop
xchg
sub
sub
inc
and
jp
outsl
mov
xchg
cmc
inc
and
into
sub
jnp
inc
cmp
dec
mov
xchg
movsb
sub
movl
pop
lcall
insl
data16
test
jle
jle
lahf
cmp
rol
inc
rcrb
in
rorb
aam
sub
fdivrl
xchg
cwtl
sub
roll
aad
pop
js
imul
jecxz
es
cwtl
mov
dec
inc
or
cmp
or
js
stc
leave
cmp
add
add
xchg
xchg
jns
jmp
mov
imul
xorb
pushf
ss
lock
sub
xlat
xor
dec
pop
lcall
loop
mov
mov
lret
mov
pop
dec
lahf
adc
push
xchg
loope
sti
jecxz
mov
xchg
mov
in
jo
lods
cmp
adc
inc
sbb
dec
ret
inc
fcomip
test
lret
cmp
xchg
sbb
xchg
add
mov
data16
inc
jno
popa
jmp
lock
pusha
repz
cmp
adcb
mov
and
pop
rcrb
jp
gs
bswap
pop
xchg
sar
inc
adc
push
mov
or
hlt
fmull
jecxz
shlb
repnz
add
jnp
popa
repnz
sub
sarb
xor
test
add
xor
mov
push
add
add
jnp
push
imul
sbbl
lcall
dec
lods
sbb
add
scas
lcall
adc
sbb
mov
add
add
pusha
or
sub
in
stc
dec
pop
dec
orl
dec
pushl
es
inc
lret
jp
aas
sti
adc
adc
imull
push
cltd
in
movsb
or
fdiv
shl
xchg
gs
mov
ljmp
mov
lcall
xor
dec
ret
aad
fwait
lds
mov
ret
cmp
mulb
lds
ds
push
stos
or
sub
mov
and
call
or
adc
subl
push
rcr
leave
push
push
in
jb
or
cmc
or
jae
std
aas
xchg
jp
lcall
push
xchg
lahf
push
jle
je
xchg
call
or
jb,pn
stc
ret
loop
push
or
xor
ret
data16
and
pop
xchg
addr16
call
enter
mov
mov
add
cmpsb
xor
sahf
lods
dec
jl
cs
idiv
jne
iret
inc
pop
mov
mov
add
rorb
inc
mov
test
xchg
aaa
add
jns
and
sbb
ret
pusha
mov
adc
sar
push
inc
pop
adc
lahf
xchg
scas
adc
xlat
inc
push
pop
adc
mov
aad
enter
jne
popa
fldl
dec
imul
mov
lds
shrl
pop
dec
cmp
inc
dec
aam
fildll
fs
push
adc
fwait
out
sbb
jo
test
jb
cmpsl
les
mov
shll
dec
cmc
stc
fimull
push
int
cs
movsb
dec
mov
ja
mov
cmc
sbb
jmp
call
push
mov
cmp
dec
movsl
xor
test
movsb
fnstsw
jle
test
push
mov
xor
mov
inc
jnp
insl
jge
mov
outsl
push
sbb
rolb
fdivl
repz
loope
push
mov
mov
add
add
pushl
sub
loope
sbb
add
add
xchg
mov
mov
push
adc
fld1
insb
cli
std
mov
xchg
bound
jle
mov
int
lcall
jbe
jno
xchg
jb
inc
push
addb
mov
jnp
cmpsb
enter
scas
mov
test
dec
inc
scas
adc
mov
or
movl
mov
xchg
xor
xor
jg
or
push
pop
es
jl
push
xor
outsl
ret
jne
mov
jb
sub
mov
pusha
arpl
dec
cmc
mov
xorb
sbb
sub
pop
pop
scas
js
dec
cmp
xor
xchg
loop
inc
inc
adc
fisubs
data16
xchg
pushf
xlat
mov
imul
pop
push
jmp
xor
and
or
xor
cs
iret
outsl
icebp
dec
push
push
and
fnstsw
inc
xlat
mov
insb
xor
out
sub
popa
mov
add
add
sti
iret
ss
push
jno
sub
sbb
add
add
loop
fistps
in
aam
mov
push
xchg
sti
pusha
je
dec
or
and
sahf
scas
in
inc
pop
ret
mov
call
push
adc
cmc
and
ljmp
cmp
jge
imul
lcall
pop
push
rcrl
inc
in
mov
jae
cmpsb
mov
stos
and
iret
inc
cmp
fisubl
int3
xor
insl
je
pusha
push
test
cmpsl
xadd
insb
mov
movsl
mov
insb
sub
sbb
xchg
nop
jno
cmpsl
sub
int
hlt
icebp
out
aas
test
and
add
and
in
jb
xchg
pop
xor
xchg
ret
int3
dec
nop
iret
imul
sub
adc
pop
sbb
mov
sbb
scas
ret
jg
out
mov
lret
dec
js
sbb
into
mov
leave
fdivr
in
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
jle
nop
cwtl
addl
add
add
popa
fwait
pop
outsl
xchg
insb
jae
adc
dec
push
add
mov
ffree
adc
mov
test
inc
in
and
adc
xor
ficoml
push
or
jge
mov
jne
lods
mov
dec
sub
pusha
fdiv
leave
pop
xchg
mul
pop
dec
in
fnstenv
repnz
pop
out
js
mov
mov
jbe
sub
dec
cwtl
jns
cmpsl
shrb
stos
repz
mov
pop
cmp
dec
push
rcrb
fistl
stos
loope
repz
or
pop
push
sub
lods
mov
xchg
bound
mov
decb
hlt
jmp
pop
imul
adc
mov
push
sub
repnz
and
mov
dec
jne
mov
xchg
add
mov
inc
pop
insb
cli
loope
or
xorb
cmc
shrb
ror
xor
xchg
push
sbb
sti
push
push
add
add
mov
mov
mov
add
add
or
or
ds
lds
or
dec
or
xchg
mov
cltd
scas
ds
out
sahf
mov
sbb
sub
rolb
leave
mov
and
xchg
sbb
dec
daa
lods
lcall
sbb
adc
jbe
in
out
mov
pop
mov
in
hlt
pop
clc
lret
in
hlt
push
mov
popf
movl
jp
imul
sub
mov
aam
adc
jnp
sti
fwait
xor
push
inc
dec
lds
rcrb
push
loop
pop
jns
push
notl
aas
repnz
mov
test
push
dec
and
bound
rorb
push
decb
cmp
and
push
enter
jmp
bound
push
adcb
mov
mov
jge
add
add
pop
test
ljmp
lock
xchg
dec
aad
inc
mov
add
add
push
dec
xchg
xchg
popf
sbb
popa
popf
xchg
cwtl
xor
push
adc
pop
dec
ljmp
test
and
int3
out
cltd
ljmp
pop
and
jecxz
lods
mov
jo
hlt
icebp
in
aas
fcmovne
scas
mov
inc
adc
in
dec
les
xchg
loope
cwtl
scas
in
cld
add
arpl
jae
inc
fs
jne
nop
fwait
push
cltd
outsl
inc
xor
pop
and
stos
stos
mov
inc
xchg
lods
filds
cmp
cmp
dec
jnp
jbe
test
xor
pop
jns
mov
pop
arpl
inc
pop
jge
movsb
aaa
out
jle
pop
lcall
int
decl
ja
cli
sbbb
and
decl
pop
lods
xchg
push
ja
cli
and
ss
mov
stos
and
lcall
and
or
cmp
mov
notl
add
add
arpl
jnp
sbb
push
xor
fisttpl
movsb
xchg
add
add
outsb
rcrl
test
pop
or
loope
hlt
or
repnz
bound
insb
dec
sbb
cs
pop
insb
jb
cmp
mov
stos
aas
push
adc
cmp
sbb
cmp
and
xchg
mov
add
gs
pop
and
cmp
jb
fdivrs
inc
and
rorb
sbb
outsl
cmpsl
push
sarl
add
loopne
lea
addr16
inc
push
push
stos
mov
fdivs
mov
rclb
mov
fwait
arpl
or
fst
add
in
mov
in
jnp
dec
mov
test
inc
lret
xor
inc
pushf
pushf
rcrl
sub
or
pop
fwait
sub
pusha
inc
inc
mov
bound
out
cmc
mov
shr
test
mov
xchg
int3
xor
xor
inc
xchg
loopne
lods
loope
jne
sbb
jnp
add
add
aas
or
mov
fabs
dec
pop
test
add
add
add
xor
pop
daa
mov
test
gs
sarl
ljmp
xchg
pop
sub
mov
jae
fmull
add
mov
pop
loopne
sbb
and
icebp
mov
jbe
fcoms
xlat
test
fstpl
pop
imul
mov
test
out
mov
adc
sarl
xchg
bound
cmp
popa
iret
xor
mov
out
add
xchg
scas
mov
popa
inc
and
push
pushaw
mov
fwait
iret
pop
dec
cmp
int3
sbb
xchg
push
xorl
or
add
adc
es
mov
aam
aad
insl
pop
stos
and
adc
ret
jp
push
cmp
push
or
scas
fdivs
lds
scas
hlt
mov
jl
cmp
cmp
ret
lock
pop
jbe
aam
pop
incl
mov
fbstp
and
bound
lods
lea
add
insb
fidivl
bound
sub
lods
mov
add
add
test
xchg
pop
push
adc
mov
pushf
std
loop
orl
pop
jge
pop
inc
ret
add
mov
js
imull
lret
push
mov
cmc
jbe
insl
je
jg
cmp
mov
jle
inc
aad
dec
daa
pusha
push
setno
push
mov
add
jmp
lock
cwtl
mov
and
sub
jge
xor
fcomps
scas
shl
rcll
insb
jg
sbb
mov
testl
pop
fcoms
rcr
outsb
sbb
enter
ja
mov
outsb
or
ss
addr16
pop
aas
add
popf
xchg
btc
sub
lods
xchg
inc
mov
in
rcll
sbbb
sbb
iret
sbb
in
or
enter
jno
or
mov
popl
add
add
mov
jns
mov
add
add
out
mov
aas
aaa
push
test
mov
xor
mov
and
das
cs
lods
inc
push
and
dec
jle
orb
inc
mov
cmp
bound
or
sub
mov
shrl
aas
push
mov
cmp
mov
cmp
mov
sti
scas
cmp
loop
ret
movsb
cmovns
jl
mov
out
imul
mov
inc
adc
add
orb
sti
pop
aam
and
fisttpl
push
ficomps
in
sbb
repz
jo
outsl
add
fildll
inc
and
and
sub
push
fstps
mov
pop
sbb
inc
cmc
lret
xor
mov
sbb
pop
dec
push
fisubs
popa
xlat
push
jo
ret
sub
fildl
ja
dec
mov
sarl
add
int
fstp
iret
push
cmpsb
fadd
dec
cmp
add
add
add
imul
movsl
mov
hlt
leave
or
push
xchg
push
jbe
ds
icebp
or
lea
adc
popf
cmp
cwtl
test
sbb
mov
sbb
popa
pavgb
jno
insl
aaa
push
negl
stc
pop
jmp
outsb
jnp
mov
push
jecxz
cmp
cmpsb
nop
je
fistps
inc
dec
sti
aaa
js
mov
pop
or
ret
pop
push
in
cmp
and
push
in
andb
imul
shl
int3
mov
mov
frstor
dec
inc
pop
cmp
pop
out
insl
test
cmp
repz
das
ss
xchg
cmp
jmp
int
and
addb
adc
xchg
psrld
out
icebp
mov
or
das
mov
dec
inc
dec
stos
fcomip
adc
rorb
lret
mov
lods
fisubrs
into
icebp
popf
xchg
inc
pop
subps
in
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
hlt
sub
rorl
ret
or
shll
inc
sbb
mov
test
sub
and
push
fs
pop
cmp
roll
mov
push
add
push
stc
jbe
inc
test
lret
xchg
mov
adc
enter
sbb
jnp
adc
mov
jnp
adc
hlt
mov
inc
xchg
imul
stos
push
cmp
mov
mov
mov
hlt
nop
movsl
dec
jae
push
pop
jae
and
adc
into
lock
add
sahf
dec
iret
xor
inc
sahf
inc
jp
idivb
mov
lds
adc
jbe
in
pop
mov
inc
jl
lret
mov
xor
dec
xor
orl
leave
lock
pop
lret
movsb
push
fcmove
cwtl
adc
daa
mov
push
pop
lods
les
jnp
mov
icebp
nop
pushf
mov
add
mov
ret
imul
jge
pop
push
test
inc
sbb
scas
xchg
out
dec
test
xchg
lods
das
into
lods
sahf
sarl
out
repz
lret
cmp
and
or
mov
mov
outsb
or
xor
mov
dec
or
or
repnz
clc
iret
mov
add
sbb
icebp
sub
push
test
push
es
and
fs
add
mov
push
mov
fwait
dec
xchg
fidivrl
sahf
icebp
push
cmpsb
loope
inc
aad
mov
iret
cmp
xor
push
inc
loopne
mov
and
in
idivl
dec
sub
push
andb
filds
mov
lcall
jae
int3
jle
aas
and
dec
push
adc
fcomi
inc
pop
jmp
mov
add
add
add
les
fcomps
add
das
sbb
rorb
add
dec
lock
push
inc
mov
fcoms
sub
mov
sti
dec
movsb
xchg
xchg
in
sub
lret
add
mov
mov
mov
das
aad
inc
jno
fneni(8087
enter
repz
fidivrs
push
dec
xchg
or
push
outsl
dec
xchg
add
dec
insl
dec
mov
jno
inc
aad
lcall
xchg
in
pusha
mov
std
inc
pop
test
movnti
fsubs
jo
mov
jo
push
sbb
adc
lods
pushf
xchg
fwait
cmp
dec
shll
popf
mov
dec
test
faddl
mov
pop
push
ja
movnti
dec
push
loope
cli
mov
daa
mov
dec
cmp
mov
rclb
and
insl
xchg
hlt
push
jge
hlt
daa
or
cmp
inc
mov
or
call
adc
ljmp
dec
mov
jge
les
add
cmp
mov
notl
pop
aad
push
imul
xchg
lea
and
mov
dec
fcmovb
sub
lret
repz
out
and
mov
mov
int3
scas
decb
pop
sarb
shlb
test
loop
mov
pop
inc
cli
lods
orb
sbb
gs
ja
sbb
ja
lcall
xor
jl
aaa
or
stos
aam
sbb
pop
ljmp
fidivl
mov
rorl
or
ljmp
into
push
adc
iret
push
xchg
dec
pop
xchg
xor
fcmove
dec
sbb
ljmp
out
xor
fs
mov
mov
inc
pop
sti
mov
fcmove
fidivs
pushf
fistpll
test
js
sub
jno
leave
pop
mov
mov
adc
xchg
into
xor
add
add
aaa
shlb
cmc
div
testl
mov
popl
add
add
mov
pop
out
mov
int
push
jbe
aas
adc
add
sub
fidivrl
xlat
loop
mov
push
sarb
test
dec
xorl
shlb
xchg
mov
clc
adc
je
or
clc
fdivs
dec
loopne
add
ds
les
lret
push
mov
scas
inc
jp
dec
out
push
jbe
stos
data16
push
xlat
lahf
cs
cmp
cmp
in
testl
aam
scas
xor
adc
dec
rorl
popa
dec
fcoml
push
cmc
lret
rcrl
cs
cmc
arpl
cwtl
rcrl
xorb
test
mov
inc
shl
push
call
xor
das
nop
fs
xor
dec
sbb
stc
fdiv
dec
in
loope
pop
repnz
rolb
sbb
aaa
jmp
addl
add
add
push
sahf
rcr
pop
adcb
sub
std
jne
nop
add
add
add
cmp
inc
jp
in
dec
daa
sub
sbb
lods
mov
pop
mov
repz
rcl
xchg
outsl
add
mov
rol
icebp
ljmp
imul
arpl
inc
dec
aam
sbb
repnz
xchg
rorl
in
repz
cmpsb
push
sbb
sahf
mov
xchg
sti
repz
fcomp
fcomps
ret
xchg
jmp
jecxz
mov
mov
dec
out
xor
ja
jnp
xor
in
leave
movsb
pop
stos
or
out
jo
inc
mov
lods
jns
adc
arpl
int
pop
push
adc
aad
mov
push
shrb
add
imul
lret
gs
dec
aam
mov
mov
daa
lret
sbb
pop
outsb
mov
sahf
jo
test
into
or
lock
rorl
shll
cmpsb
jcxz
fimull
rclb
add
shll
mov
lea
pop
loope,pn
inc
adc
adc
test
inc
movsl
hlt
mov
cs
lcall
jg
shrl
xchg
cwtl
push
sub
ret
xchg
cmc
mov
push
sub
filds
cmp
aam
outsb
pop
aas
and
mov
cmc
cld
pop
or
xor
mov
addr16
sarl
pop
or
cld
pushf
stc
mov
adc
push
aad
sti
and
add
dec
xchg
insl
jle
ret
jg
dec
adc
xchg
lock
daa
div
cld
jg
jmp
sbb
aas
pop
nop
gs
and
lret
pop
jge
cmpsb
cmp
std
test
mov
cmp
mov
std
cmp
test
pop
jb
sbb
test
negl
cld
sti
cmpsb
insl
lds
cwtl
and
xchg
push
lea
add
clc
jnp
jg
in
cli
enter
inc
dec
in
xchg
add
add
add
xchg
sub
dec
cmp
xchg
jl
mov
enter
dec
jmp
xchg
cpuid
nop
arpl
les
in
dec
inc
push
jne
push
dec
nop
lcall
mov
gs
sbbb
mov
sti
movsb
pop
pop
sbb
cmpsb
dec
jo
popa
lcall
push
ret
lcall
sbb
xchg
mov
rcrb
mov
addb
or
js
int
aaa
popa
cli
mov
arpl
repz
inc
mov
enter
xchg
sub
cmpsb
es
jmp
jge
xchg
icebp
div
mov
jno
push
decl
cmp
frstor
leave
mov
dec
out
imul
mov
stos
insl
stc
lahf
cmp
adc
jg
shl
push
xor
cli
xor
ret
mov
pop
mov
jecxz
inc
dec
pushf
shll
ret
push
push
cli
push
mov
pop
mov
xor
add
add
lods
faddl
fbstp
cld
gs
mov
fcoms
add
xchg
rol
fwait
fs
sbb
and
nop
mov
cwtl
ror
js
inc
jecxz
sub
jl
xor
repz
decb
mov
xchg
or
xchg
or
xchg
fsubrs
sarl
sti
push
movb
mov
je
int3
inc
aas
xchg
test
jae
sti
dec
dec
cmp
ret
or
aaa
inc
or
es
fmulp
stos
push
ror
in
cli
dec
dec
jns
pop
iret
or
sahf
inc
mov
lock
mov
loope
mov
and
inc
out
in
add
fwait
xchg
push
addb
cmpsb
clc
scas
test
mov
ss
lds
xchg
mov
int
cmc
rcll
and
xor
dec
out
les
cmp
xor
pushf
push
loop
xchg
aaa
frstor
fidivs
mov
es
mov
add
jl
sar
std
jle
pop
popf
scas
insl
lods
push
lcall
add
in
dec
pop
movlhps
inc
pusha
dec
popa
out
dec
movsl
adc
cmp
cli
aaa
loopne
pushf
lock
lock
mov
adc
add
mov
nop
push
sub
loopne
jl
out
push
shll
xchg
das
sub
push
rorb
scas
ss
mov
pop
movsl
add
sub
sti
cmp
in
jno
inc
add
xchg
call
movsb
lret
lret
sub
in
push
into
mov
in
out
into
hlt
lods
ret
xchg
fs
pop
and
pop
mov
shll
mov
aas
sbb
lahf
or
inc
cli
adc
test
gs
push
push
popa
adcl
adc
fimuls
dec
mov
roll
cmp
fldenv
in
and
mov
daa
mov
aam
mov
jg
popf
lret
and
add
add
cwtl
or
stos
xchg
cmp
in
mov
fisttpl
xchg
add
add
add
fistl
rorl
adcl
ret
fwait
dec
ret
sub
out
jnp
sbb
insl
mov
cmpsl
push
dec
ret
clc
xchg
movsl
cmp
or
jno
shll
pop
or
add
test
add
outsl
xchg
loopne
add
jns
mov
loopne
jne
inc
lret
test
push
sbb
pop
xchg
std
int3
dec
adcl
pop
fcompl
add
data16
es
xchg
stos
push
out
adc
fs
leave
push
je
out
or
and
xchg
jo
or
fs
dec
stos
decl
ret
fadds
pusha
lcall
int
mov
pop
ja
das
adc
push
sub
xchg
cmpsl
lods
movsl
dec
enter
les
call
scas
cli
std
cmp
push
out
and
mov
ja
xor
jl
jl
cmpsl
fwait
and
popa
mov
xorl
in
add
add
add
fdivs
aad
add
mov
push
jo
imul
insl
mov
cmpsl
sarb
cli
push
or
mov
add
dec
loopne
roll
fldcw
rclb
jmp
in
pop
pop
adc
inc
jae
xlat
push
xchg
aam
ss
add
jecxz
push
xchg
add
push
in
jne
xchg
repz
imul
loopne
mov
aam
sti
dec
decb
mov
mov
imul
stos
outsl
pop
rcl
fidivrl
sub
push
inc
out
xor
sbb
in
add
pop
adc
mov
mov
in
sub
nop
jnp
insb
ss
mov
out
jp
jnp
push
cmpsl
jmp
or
jecxz
mov
push
mov
popa
lds
shlb
fisubrl
xchg
lret
insb
jbe
mov
xor
inc
fmulp
adc
push
and
xlat
aas
dec
sbb
or
call
add
add
testl
adc
in
xor
pop
push
lds
jb
sub
and
inc
popf
or
daa
jmp
sbb
subb
mov
aas
mov
mov
fmuls
movsb
add
out
call
mov
imul
mov
and
shrl
iret
bound
jge
in
sub
fldl
push
pushf
in
popf
mov
outsb
xchg
insb
xchg
dec
pop
out
dec
fwait
and
push
cmp
push
mov
shlb
stc
lahf
lret
mov
sub
fisttpll
in
popf
mov
repz
xorb
mov
fnsave
dec
aaa
cmp
cmp
imul
lcall
sbb
xor
dec
sbb
mov
pop
and
adc
shrb
cltd
cmp
ficoms
imul
outsl
vmwrite
sti
in
cwtl
add
add
add
adc
pop
lds
into
mov
xchg
jns
clc
arpl
pop
xchg
jae
mov
mov
loop
aaa
adc
mov
cmp
inc
out
arpl
sbb
cmp
mov
cwtl
fwait
stc
cwtl
addl
and
sub
call
outsl
hlt
xor
sbb
bound
pop
and
push
das
xchg
cltd
js
mov
pop
xchg
pop
and
mov
jecxz
and
loopne
fs
popf
divl
inc
repz
adc
and
sbbb
stc
xchg
mov
sub
jb
shl
push
jmp
rol
insl
xor
call
sbb
lock
jbe
jg
pop
add
sahf
jp
xor
cld
jns
dec
hlt
push
xchg
mov
xor
and
sbb
mov
push
jecxz
sbbb
dec
jo
jne
out
or
lret
add
mov
idivb
mov
outsb
cmpsb
lcall
add
adc
sbbl
popl
mov
add
add
xchg
or
bound
dec
into
jnp
mov
adc
mov
nop
mov
std
jle
add
jmp
or
dec
dec
cmp
adc
test
mov
sbb
pop
sarl
outsl
out
cmp
pop
bound
les
loop
jge
fcompl
xchg
sbb
clc
push
and
add
stos
in
popf
and
nop
in
test
xchg
dec
bnd
adc
shlb
sub
and
xchg
adcl
insl
xchg
mov
mov
mov
cmpb
stos
jnp
cwtl
mov
sti
xchg
jo
into
ficomps
fwait
in
sbb
xchg
rcrb
addb
mov
outsb
sbb
pop
lds
xchg
cwtl
jnp
sub
orb
jle
inc
jg
pop
mov
adc
ret
mov
fisttps
ljmp
cmp
sti
dec
mov
imul
movsb
and
mov
lcall
ficomps
out
repnz
int
iret
push
cmp
fmull
sub
mov
mov
xchg
mov
bound
add
out
fisubrs
pop
pusha
fdivl
adc
js
cwtl
popa
ljmp
sarb
mov
push
adc
mov
mov
out
call
mov
popf
add
fmuls
lods
call
out
cmpsl
xchg
push
or
stos
adc
jb
mov
mov
dec
dec
int
xchg
daa
mov
outsl
fs
inc
mov
dec
and
das
mov
cmpb
sub
push
shlb
add
das
mov
das
add
pop
test
movsl
jmp
xchg
adc
dec
mov
inc
mov
jno
adc
dec
sbb
aas
int3
cmp
dec
loopne
and
and
ret
mov
jge
jg
ljmp
in
lahf
mov
fwait
add
add
add
and
xlat
xchg
sbb
std
xchg
dec
cmpsl
xor
push
mov
or
enter
xchg
pop
lret
push
inc
cmpb
mov
mov
test
pop
or
out
cli
mov
jbe
sbb
movsl
push
mov
sbb
jg
and
dec
icebp
insl
addr16
inc
inc
cmp
jl,pn
add
cmp
sub
ss
stos
cmpsl
jl
cmpsb
jnp
pop
lahf
and
sbb
jp
inc
je
iret
dec
stc
add
jg
mov
push
and
pop
popa
or
mov
adc
pop
out
mov
dec
fistpl
push
into
scas
fdivr
gs
hlt
adc
inc
pop
push
hlt
popf
mov
aas
popf
or
sub
cwtl
sahf
aas
push
push
inc
call
jb
imul
push
or
dec
mov
sahf
xcrypt-cfb
cmpsl
and
xchg
je
and
jo
sbb
out
sarb
cltd
sub
out
inc
sub
or
jmp
add
add
add
mov
sbb
add
sub
in
pushf
or
sub
inc
cld
lcall
fadds
jl
jne
ret
pop
out
sarb
cmp
dec
fistpll
popf
adc
lret
jno
sub
mov
shll
pop
sub
cwtl
mov
jmp
fld
mov
mov
cmp
xchg
mov
roll
jg
cmpsb
mov
jmp
or
call
outsb
adc
ds
test
push
gs
iret
adc
mov
sarl
jbe
loopne
xchg
clc
sarb
movsb
lods
inc
adc
pop
loop
int
int3
xor
lock
pop
add
and
scas
test
push
and
cmpl
int3
adc
cmp
jo
dec
int3
sub
fmuls
pop
xchg
into
add
pop
pop
jns
jb
imull
stc
mov
loop
test
mov
cld
mov
add
add
push
pop
out
mov
xchg
in
mov
add
cmp
mov
into
cli
clc
lea
cli
mov
rcrb
sub
jae
xchg
lcall
dec
cs
test
mov
ja
outsl
inc
shlb
jmp
icebp
hlt
test
shlb
xchg
data16
mov
add
push
stos
lret
ja
and
jl
leave
add
int3
sbb
scas
pop
movsl
sarb
and
add
mov
rol
jo
or
or
jnp
fsubs
mov
push
fldl
jne
fisubrs
pop
push
lea
jg
fimuls
hlt
int
and
pop
ret
lret
test
and
mov
dec
pop
inc
jecxz
fisubrs
cmpb
jne
dec
xor
pop
outsl
inc
push
pop
xor
jge
push
movsl
test
add
mulb
stc
xor
insl
fucomi
mov
mov
or
lcall
outsb
lea
lahf
add
add
add
clc
jle
pop
cmp
dec
sbb
outsb
decb
icebp
cmpsb
repz
je
pushl
adc
sbb
mov
push
mov
lret
sbb
mov
mov
out
in
popa
mov
or
jl
jns
mov
pusha
popl
jo
push
jnp
sbb
sub
fwait
je
nop
or
mov
arpl
lahf
sub
insb
scas
inc
mov
icebp
fwait
xchg
decb
xchg
mov
cmpsl
int3
daa
sbb
mov
es
fwait
ja
jns
orb
imul
add
mov
dec
push
xlat
sbb
cmp
popf
daa
shrl
cmp
jmp
jae
int
popa
jmp
jnp
mov
and
inc
jp
mov
pusha
lea
dec
cmp
popa
enter
bound
sbb
lea
adc
add
mov
inc
inc
add
mov
add
or
test
push
sub
dec
push
jg
xchg
mov
ds
stos
pop
xchg
out
lret
mov
xchg
lods
lock
int3
adc
stos
or
mov
out
adc
mov
fstps
or
mov
xchg
int3
add
cwtl
push
lds
fbstp
dec
mov
imul
pop
nop
mov
fcmovnu
inc
test
xchg
or
push
sub
inc
dec
mov
pop
popa
fsubr
xor
stos
jnp
mov
sbb
lcall
lods
jmp
icebp
xor
inc
jp
jbe
xchg
decb
or
xor
pop
std
mov
add
leave
mov
into
jnp
dec
aad
dec
jne
push
shrl
sbb
int
sub
rcll
sarb
icebp
sub
inc
pop
mov
jbe
andb
sahf
outsb
push
pusha
in
mov
loopne
mov
jmp
sti
and
mull
sldt
add
or
sbb
inc
mov
dec
cmp
add
add
or
stc
aaa
pop
sub
int
in
sbb
rorw
cld
lods
inc
jmp
out
insb
xor
dec
jle
enter
lea
ss
pop
mov
cmp
sahf
and
jnp
clc
sbb
fwait
xchg
mov
addr16
ja
rolb
mov
sub
push
inc
inc
dec
leave
insb
xor
gs
imull
xlat
test
imul
mov
mov
rcr
sbb
dec
repnz
dec
lock
lock
out
mov
pusha
jb
lods
faddl
icebp
nop
inc
ret
rclb
icebp
sub
jns
scas
gs
sbb
aad
cmp
sub
fdivrl
adc
xchg
mov
jg
ljmp
jg
xor
je
add
cmc
xchg
aas
pop
fmuls
push
cmp
dec
lret
hlt
test
xchg
notl
int3
or
shlb
add
add
inc
fdivl
push
dec
mov
adc
add
cmc
jge
jbe
xchg
cmp
and
out
arpl
fmull
xchg
out
jno
shl
out
push
push
mov
xchg
push
add
mov
add
call
mov
mov
jo
dec
test
xchg
dec
sbbl
cmp
fbstp
push
mov
movsb
dec
pushf
loope
cmp
jle
jbe
cmp
mov
pop
cmp
movsb
ret
pop
mov
and
cmpb
fdivrs
xor
ficoml
loopw
push
sbb
mov
popa
cmc
mov
test
js
and
lea
rol
fidivl
icebp
dec
aam
adc
jmp
sbb
scas
add
inc
cmpsb
push
push
pusha
pop
imul
and
mov
ja
movsb
push
cmpsl
inc
scas
add
stc
pusha
lret
push
mov
pop
lcall
mov
bnd
adc
mov
shrb
loope
cmp
add
add
sbb
mov
sbb
dec
adc
add
add
add
std
mov
xlat
xchg
int3
sub
in
cwtl
loopne
out
bound
lret
xchg
cmp
sub
call
jbe
mov
ffree
test
loope
rol
or
dec
movsb
jmp
shr
sub
fisubrl
mov
out
pop
dec
pop
scas
rcrl
popf
aas
rclb
or
mov
add
lcall
mov
les
decb
and
lods
xor
sbb
icebp
fst
sbb
cmpsb
negb
enter
iret
fists
loopne
mov
cwtl
subb
mov
add
jl
jo
push
xchg
adc
stos
out
pop
and
rcrb
imul
inc
and
and
xchg
mov
jle
sbb
cmp
leave
leave
addr16
out
daa
sti
push
add
loopne
iret
lock
andl
pusha
cs
pop
test
stos
hlt
jmp
cmp
jbe
int3
cmp
add
add
imul
jl
mov
out
lea
push
sbbb
cmpsb
rcr
fmulp
push
push
mov
sbb
jmp
aaa
nop
loop
pushf
enter
jecxz
lahf
je
xchg
xchg
cld
in
divb
pop
inc
add
dec
cmc
pop
pop
pusha
insl
fcoms
xchg
adc
stos
cmc
mov
sbb
in
mov
cmp
inc
push
xor
add
mov
cmp
lcall
jmp
push
fs
cmp
push
cwtl
fildll
fwait
adc
popf
iret
pushf
push
clc
add
dec
mov
inc
jnp
dec
add
fstpl
pop
inc
fimull
cmp
mov
mov
mov
add
add
scas
sub
push
sub
push
pop
jmp
inc
pop
jle
out
jmp
in
movsb
mov
mov
jbe
push
mov
pusha
jg
scas
rorl
int3
jecxz
cwtl
aaa
mov
cmp
mov
mov
pop
add
out
xlat
out
jg
in
xor
flds
aad
sbb
add
add
add
sahf
mov
fimull
pop
cmpl
or
mov
mov
mov
dec
sub
xor
or
cmp
inc
insb
lret
out
iret
loopne
stos
inc
insb
or
icebp
repnz
push
outsl
mov
ror
iret
cmp
xchg
push
push
mov
mov
cmp
mov
and
dec
dec
sbb
sub
popl
push
rcrl
push
mov
dec
stos
sbb
in
aas
cmp
sti
ss
xor
add
mov
mov
popa
lds
ficoms
cmpsl
loope
pop
mov
xchg
es
pop
mov
push
mov
negl
popa
mov
ret
sti
daa
stos
sti
adc
cmpb
punpcklbw
cwtl
xor
ljmp
jl
in
pop
jle
pop
jmp
aad
shll
nop
es
xchg
pop
movsl
leave
mov
inc
iret
sub
add
add
mov
inc
fwait
lds
jo
fldl2e
incl
add
add
add
cmp
xor
adc
mov
hlt
test
pop
and
idivl
xor
mov
mov
and
sbb
fsubp
divl
fidivs
push
or
mov
in
fsts
call
cld
add
into
bound
addr16
jl
enter
andb
sub
lds
cmpsl
je
sahf
jnp
cmp
add
jle
test
xchg
shlb
ss
in
mov
pop
mov
fcompl
xor
mov
movsb
add
sbb
lock
jl
xchg
add
mov
xchg
ffree
and
jle
sub
pop
aaa
es
movsb
pop
cltd
or
test
mov
push
jbe
or
outsb
mov
jae
iret
cwtl
sbb
mov
xchg
push
or
add
add
mov
fadds
and
add
add
add
in
push
pusha
pop
inc
xor
test
insl
push
testb
add
dec
mov
idivl
stc
mov
les
xchg
popf
sbb
fstpl
rolb
arpl
add
add
mov
cltd
movsb
or
and
adc
sbb
mov
fildl
iret
pop
imul
push
fstl
cmp
add
jle
mov
pop
sub
dec
pop
scas
or
mov
shrl
mov
mov
dec
dec
jnp
jae
cli
jns
mov
repnz
adc
cmpsb
sub
cmp
inc
xchg
lds
sbb
mov
mov
mov
push
or
testl
jae
arpl
inc
xlat
fildl
and
cmp
dec
xchg
push
mov
adc
sbb
nop
mov
jno
add
bound
mov
lret
jnp
sti
jmp
push
mov
divb
add
add
add
cmp
fcoms
shrl
push
sub
mov
test
inc
outsb
dec
inc
mov
aas
sub
dec
inc
test
mov
or
cmpsb
stc
cmp
jno
loop
stos
hlt
push
aad
push
ja
jmp
outsl
les
adc
les
repz
sbb
xor
sti
sbb
pop
stc
mov
stos
arpl
vmovntps
xlat
inc
outsl
sbbl
or
or
shl
or
mov
jns
jnp
mov
xor
lret
mov
fsubs
cmp
cmp
xchg
cltd
inc
out
dec
rcll
dec
inc
xor
push
adc
mov
sbb
sbb
mov
jle
outsb
sbb
in
cld
pop
enter
out
jbe
pop
sbb
add
jl
fisttpll
inc
out
pop
adc
in
rol
lods
movsl
insb
push
outsl
and
pop
repz
jg
fstpt
in
popf
ss
add
jecxz
lock
mov
sub
add
add
add
out
out
imul
adc
daa
adc
cmp
lahf
cwtl
or
or
hlt
lret
lcall
aam
inc
or
pushf
call
outsb
push
mov
xchg
das
and
bound
fcomip
jns
sub
outsl
jp
repz
addl
mov
jo
mov
xchg
orb
xchg
icebp
addr16
mov
mov
add
sub
mull
inc
mov
frstor
jg
orps
sti
inc
sbb
xor
pop
mov
lahf
dec
dec
inc
out
pop
cmc
sbb
or
dec
add
movsl
ljmp
push
push
outsb
push
movsb
xchg
scas
gs
test
test
mov
add
pop
xchg
negb
add
and
aam
lock
jns
push
sahf
sub
fs
cmc
pop
adcl
cmp
jl
clc
cmpsl
in
cmp
mov
inc
gs
push
js,pn
enter
pusha
ror
aas
test
jae
add
add
cld
mov
leave
jo
xchg
xchg
xor
add
jno
sub
xor
ss
xor
pop
jecxz,pt
jno
or
inc
outsl
sub
mov
pop
mov
in
jo
pop
out
jno
dec
loopne
call
add
insb
loope
ljmp
or
fucom
cli
cli
sahf
or
lock
ret
push
push
pop
cmp
push
dec
cli
lock
sub
icebp
push
rcrl
push
pushf
lcall
mov
fucomi
rorl
mov
cmpsl
vmovaps
adc
adc
int3
aas
inc
mov
sub
cli
add
fdivl
or
dec
mov
or
clc
popf
popa
mov
stc
mov
push
fisubs
das
dec
out
lods
jmp
mov
or
push
decb
fildl
popa
mov
fidivs
lea
repz
pop
dec
ja
test
pop
pop
ja
or
movsl
and
lret
xor
gs
add
add
out
cmc
mov
cmp
dec
xor
add
add
add
mov
sub
mov
and
insb
stos
testb
fmull
cwtl
fsubl
sti
adc
fstps
pop
mov
cli
xchg
mov
mov
insb
jo
mov
jmp
je
js
fs
xchg
ret
jae
inc
into
mov
adc
pop
rcl
repnz
mov
and
or
mov
cmp
sbb
std
sahf
jb
pusha
mov
ja
js
sbb
imulb
cltd
lahf
lock
push
push
xchg
add
bnd
and
mov
xor
pop
divl
pushf
scas
std
push
add
clc
jno
out
xor
inc
rorl
test
pop
sbb
sbb
or
mov
cmc
adc
mov
out
sub
outsb
pop
xchg
mov
sub
mov
jmp
insb
out
stos
mov
sbb
dec
imul
push
jbe
roll
fidivs
popa
movsl
xor
or
jl
fucomip
std
dec
std
pop
lcall
xchg
pop
push
into
xchg
push
mov
add
add
dec
popa
mov
cmp
ds
jae
mov
mov
je
or
outsb
out
push
shlb
xor
mov
inc
add
mov
xor
bnd
psubb
xor
jp
pushf
sub
inc
xchg
dec
xor
gs
test
jns
lret
into
sti
lss
insl
cmp
inc
mov
xor
sarb
or
popa
push
jl
and
inc
jle
jl
jno
xchg
push
repnz
sahf
sub
in
xor
push
outsl
push
fcmovnbe
rcl
xchg
adc
cmpsb
dec
fwait
imul
and
inc
jne
mov
xchg
push
mov
add
jle
sbb
xchg
cmp
shr
and
movsl
dec
inc
jle
call
or
orl
sahf
push
pop
stos
xabort
movsb
jne
jae
popf
addr16
insl
jmp
mov
std
inc
mov
shrb
dec
cwtl
std
js
cmp
fidivs
loop
ljmp
scas
icebp
push
sarb
add
call
xor
out
jne
lret
in
leave
data16
dec
icebp
nop
enter
mov
mov
push
mov
mov
xchg
fisttpl
xor
adc
cmp
xchg
jne
mov
bound
gs
popa
cmp
add
insl
fucomp
aaa
clc
xor
fs
push
out
rcrl
jle
rorl
adc
mov
add
repnz
stc
xchg
dec
pop
cmp
ss
in
outsl
cmp
lods
adc
pop
push
stc
and
and
xchg
fld
jb
lock
adc
inc
pop
orb
sarl
sbb
dec
pop
test
cmp
rcl
cmp
cld
sbb
pop
das
loopne
and
xchg
aaa
sub
add
sti
insb
xchg
mov
push
xchg
jg
jmp
std
mov
call
add
add
add
fwait
cmp
test
mov
fadd
rcr
and
mov
lcall
jo
fwait
iret
je
test
mov
cmpsb
cwtl
int
pop
fiadds
sub
dec
mov
add
lret
adc
fucom
jnp
sbb
jmp
jg
movsb
or
mov
adc
adc
add
adc
les
mov
inc
push
lea
push
and
and
cmp
les
rclb
or
roll
enter
int3
adc
and
out
mov
dec
adc
ret
push
lds
inc
lret
dec
into
mov
cmc
cmp
or
sub
cld
cmp
push
in
lahf
lret
in
push
sub
xor
mov
pop
ja
and
inc
popf
cmp
sub
and
and
or
out
xchg
mov
mov
xor
sti
add
jns
out
out
lahf
push
divb
inc
mov
dec
scas
inc
scas
add
add
add
pop
cmp
jmp
mov
jecxz
insb
in
xor
xchg
sarl
push
xor
test
mov
mov
mov
hlt
sub
mov
mov
roll
mov
les
aas
xor
test
and
movsb
cmp
fcmovnbe
xchg
push
ja
ficomps
out
inc
cmp
imul
sarl
push
mov
pop
add
sahf
stc
shlb
mov
sub
in
pop
push
pop
bound
ljmp
inc
mov
sti
dec
fucomp
loopne
rcl
add
mov
insl
fisubs
mov
cmp
inc
cltd
stos
adc
arpl
es
cmpb
mov
jmp
ret
lcall
cli
jp
sbb
frstor
xor
or
in
cmp
push
pop
xor
cmp
inc
call
ret
add
add
add
out
cwtl
rcl
add
inc
aam
arpl
test
xor
ljmp
mov
int
cmp
cmp
or
sub
xchg
roll
mov
mov
stc
int3
pushf
js
test
add
imul
mov
repnz
outsb
cld
jg
ljmp
xor
inc
pushf
add
testl
mov
out
push
push
jo
mov
mov
jno
int3
mov
out
add
push
mov
std
cli
hlt
push
es
test
xchg
outsb
mov
inc
aas
or
test
mov
push
out
mov
pop
mov
gs
xorl
jbe
jmp
mov
cmp
pop
or
push
push
out
lcall
push
dec
jle
sub
in
and
es
les
mov
arpl
aad
dec
mov
add
add
mov
add
push
inc
cmp
imul
sbb
ret
or
xchg
jg
mov
cmpsb
into
mov
aas
xchg
int
leave
cltd
mov
pop
cmp
shlb
mov
jae
mov
loopne
xlat
sbb
jnp
cmpsb
jns
cmp
xchg
or
adc
push
dec
jbe
aas
vpshufhw
xchg
lret
adc
sub
ja
jp
jmp
stc
leave
mov
mov
push
sub
popa
adc
aad
ljmp
sbb
jns
das
int3
test
xorb
mov
mov
sbbl
xor
fcmovne
int
mov
pop
out
int3
repnz
inc
add
in
mov
ds
cmp
aas
pop
cli
popa
add
mov
stos
dec
push
fldt
test
pop
or
iret
in
shll
cmpsb
sbb
clc
mov
mov
add
clc
pop
stc
out
push
pop
bound
call
add
add
mov
or
push
andl
loop
movsl
push
inc
jg
push
lret
stos
push
insl
pushf
xchg
jae
aaa
pop
popa
cmc
cmp
js
nop
xchg
mov
push
jge
push
dec
je
jb
loop
test
cmpb
movsb
add
lods
rolb
inc
push
inc
inc
inc
sbb
cmpsl
mov
adc
push
cltd
fisubrs
in
add
imul
cltd
pop
mov
lret
lcall
hlt
mov
insb
xor
jmp
ljmp
repz
xchg
inc
stos
lods
lret
sub
es
push
xchg
sub
xor
jno
pop
int
xor
cltd
cwtl
ja
cmc
and
or
lret
inc
cmpsb
and
cmp
jmp
xchg
imul
shl
mov
repz
fstp
jae
mov
mov
int3
ret
in
push
adc
add
add
push
mov
lcall
push
push
mov
add
add
xchg
xorl
les
imul
adc
mov
and
shlb
iret
shll
pop
leave
add
mov
or
clc
mov
bound
dec
out
int3
adc
jmp
test
mov
gs
ss
pop
push
insb
test
pop
popa
loop
test
mov
ja
sub
outsl
jp
cs
or
loop
or
xchg
rcl
cwtl
push
out
ror
adc
shrb
jbe
std
xor
cld
imul
lahf
mov
push
xor
and
add
lret
xlat
lock
adc
es
rcrl
pusha
jne
loop
and
push
add
aas
cli
sbb
fs
and
mov
jge
in
cmpsl
pop
in
popa
pop
fnstsw
shr
test
inc
cmp
jp
out
mov
imulb
imul
sbbb
jb
pop
int3
jge
xorl
insb
lret
subb
add
add
add
push
test
lea
pop
rol
sbb
or
aam
push
jb
sbb
ja
inc
inc
xchg
add
test
xlat
sbbl
ss
add
outsb
push
cmp
insb
xchg
mov
mov
test
dec
bound
imul
pop
sub
cmp
push
push
jmp
loopne
popf
sar
xorl
sbb
scas
std
popf
icebp
gs
shlb
scas
xor
stos
inc
rdmsr
push
add
imul
dec
sahf
cwtl
outsl
pop
popf
ss
fstpt
int
pop
push
ret
pop
js
or
clc
aas
cmp
les
push
cmc
push
jno
repnz
int
fs
sub
fstps
imul
xchg
lods
ret
cmp
cld
imull
inc
add
add
mov
push
sbb
add
add
pop
sbbl
fstp
rorl
push
xor
add
add
stos
lahf
cmpb
pop
sub
nop
imul
mov
xchg
xchg
xchg
int3
fidivrs
mov
jg
pop
mov
adc
cmp
mov
ljmp
les
sbb
lock
cmp
jnp
jl
pushf
add
daa
popa
ret
jg
outsb
test
cmc
imul
int
mov
cmpsl
or
fadds
repnz
aad
push
jmp
fmul
fs
jno
hlt
imul
scas
bound
pop
add
lcall
lods
int
lret
icebp
mov
mov
xor
test
dec
mov
xchg
push
jecxz
jecxz,pt
movsb
mov
test
add
in
mov
dec
fbld
xor
outsb
sub
cltd
cld
cs
lods
das
fistpll
mov
jge
fwait
xor
in
dec
jl
mov
das
andb
add
add
in
mov
jecxz
out
mov
pop
xor
add
add
sarb
test
push
push
jne
cwtl
orb
test
or
mov
ret
push
add
mov
lret
out
lret
cmp
fbstp
mov
sub
dec
jmp
lock
sbb
mov
mov
push
mov
sub
shrl
and
pop
or
inc
mov
mov
mov
inc
sbb
mov
sbb
jnp
xchg
aaa
mov
xchg
loop
sti
fisttps
mov
outsb
lds
subl
push
jecxz
sub
mov
mov
dec
in
pop
push
int3
xchg
movsl
inc
pop
xchg
ljmp
sbb
sbbl
cmp
scas
imul
cmpsl
std
sub
xchg
int3
aaa
cs
mov
cmpsb
fninit
fwait
loop
dec
pusha
mov
repnz
mov
iret
jb
add
inc
mov
add
add
std
test
jg
into
lret
orl
add
add
je
ds
lods
mov
sbb
mov
push
xor
pushf
ret
push
lcall
sbb
in
lcall
fadds
inc
fisttps
fstpl
inc
rol
add
mov
push
pop
out
shll
add
mov
inc
mov
xor
data16
add
push
popf
clc
mov
inc
cmp
adc
es
jmp
sbb
add
adc
cmp
movsl
in
mov
out
xor
aas
xchg
popl
dec
or
adc
pop
imul
xorb
mov
stc
mov
mov
inc
movsl
adc
xorl
dec
push
xchg
push
cmc
sub
addb
mov
xor
lcall
lea
pop
cs
in
and
lock
in
lcall
jae
dec
mov
push
cmp
push
add
add
pop
std
push
hlt
data16
das
mov
or
pop
into
or
inc
pop
xor
in
xor
std
mov
xchg
jge
cmc
xchg
jg
or
jne
out
cld
fmull
es
add
cwtl
jbe
je
jns
loope
aam
hlt
cmp
jge
popf
ss
push
inc
jbe
push
mull
mov
cmpl
xor
std
lods
xlat
imul
mov
outsl
insb
repnz
movsl
jns
adc
popa
iret
loopne
push
insl
jbe
repnz
popf
push
ffree
and
jns
insb
sub
test
jo
mov
or
repnz
sbb
or
fs
fildll
xchg
dec
mov
or
push
add
imul
dec
mov
sub
mov
loopne
adc
js
inc
sbb
mov
dec
or
jg
dec
arpl
mov
add
add
adc
pop
pop
cs
mov
setns
dec
aam
ss
or
pop
adc
arpl
shlb
push
addr16
jl
push
and
pop
cmp
aas
lcall
fs
test
xchg
dec
sbb
std
call
mov
lret
jnp
pop
shrl
cli
pop
mov
scas
or
icebp
outsb
mov
shl
loopne
lds
mov
mov
bound
inc
pusha
movsb
aad
fs
or
cli
out
dec
repz
mov
out
cltd
xchg
test
or
xor
pop
mull
outsb
pop
nop
pop
jnp
mov
xchg
roll
subl
and
or
sub
mov
inc
push
pop
shr
dec
ja
mov
imul
fsubrs
pop
scas
enter
jb
inc
mov
ficoml
push
scas
pop
push
add
add
out
idiv
outsl
mov
cwtl
mov
add
add
add
pop
lret
jns
sub
scas
adc
xor
mov
mov
add
mov
cmpsb
jg
pop
add
aas
frstor
and
loope
mov
into
add
lock
repnz
sbb
adc
std
jmp
rclb
and
push
mov
addr16
hlt
sub
roll
lds
sub
int
js
mov
out
rolb
xor
shll
fidivl
fisubs
insl
adcl
aaa
and
daa
add
int
dec
in
push
enter
mov
lret
xchg
xchg
push
lods
push
pop
mov
das
lret
push
daa
xchg
mov
adc
sbb
xchg
jl
add
or
pop
fwait
add
call
rcrb
add
movsl
push
fistpll
sbb
in
fistl
push
push
and
adc
push
push
jns
pop
push
das
loope
ljmp
add
inc
fbld
mov
pop
adc
add
add
add
dec
jg
js
addr16
cwtl
ja
fs
cmp
stos
aas
mov
test
xchg
decb
sbb
test
cltd
sbbb
std
daa
pop
pop
mov
inc
fwait
ret
cltd
sbb
inc
or
addb
jo
sub
insb
test
jge
and
cmp
adc
cmpsl
push
ret
and
sbb
cmpsl
add
inc
hlt
cmpsb
out
repz
in
and
fs
mov
sub
pop
ds
adc
or
nop
fsubrl
cwtl
add
pop
adc
insl
and
pop
inc
jno
sub
dec
and
pushf
xor
sub
pushf
jae
fnstcw
mov
pusha
outsl
push
bound
lods
in
in
lcall
push
insl
xor
xor
ja
push
cmp
jmp
nop
imul
jbe
sub
add
add
fistpll
call
cmpsl
cli
jmp
add
add
orl
or
imul
mov
test
daa
out
leave
fwait
aad
mov
dec
mov
add
jl
mov
or
das
pop
enter
loope
xlat
cmp
das
outsb
sub
test
sub
pop
adc
inc
pusha
int
pusha
aam
dec
push
rol
lea
cli
test
xchg
pop
andb
out
xor
sub
gs
stc
mov
jp
mov
cli
fidivrs
mov
fisttpl
es
mov
repz
sbb
gs
mov
xchg
fsub
movsl
cmp
inc
out
add
mov
add
lahf
ljmp
cmp
mov
mov
and
mov
pusha
and
enter
loopne
or
pop
jge
fs
sub
popa
pop
dec
cmc
sti
sbb
pop
into
std
sti
leave
sti
iret
jmp
std
dec
jl
add
add
add
add
popa
fsub
mov
cmpsl
mov
or
mov
cwtl
loop
stos
sub
xchg
jb
sub
aad
test
sub
fwait
test
mov
bound
add
popa
test
in
mov
dec
xchg
orb
add
ljmp
xchg
xor
das
mov
dec
roll
fcmovb
add
push
ss
fnop
stos
inc
xchg
push
mov
cltd
fsubrs
subb
fildl
mov
stos
pop
daa
dec
add
out
jecxz
adc
lock
lcall
mov
inc
add
pop
cwtl
lock
in
and
lcall
push
lds
fwait
mov
out
ja
dec
xor
movsl
dec
pop
push
cli
movb
in
call
pop
push
mov
xchg
jno
cmpl
push
xlat
filds
cwtl
aas
and
test
mov
mov
xor
mov
add
daa
xchg
mov
lcall
sarb
jne
jae
mov
subb
mov
jmp
ljmp
pop
sbb
int3
fistpll
dec
cmp
mov
int
aam
call
push
iret
inc
jmp
rcl
dec
shll
jmp
cmpsl
fisttpll
fsubl
cmc
xchg
push
xchg
lret
enter
out
dec
sahf
ds
sbb
and
incl
jno
loop
jmp
mov
sub
or
daa
out
ffree
or
adc
mov
ret
in
sub
cmc
mov
sbb
cld
imul
repnz
mov
aam
cltd
mov
fdivp
xchg
je
sbb
jmp
enter
fiaddl
sbb
xchg
sub
lcall
ljmp
stc
scas
push
rclb
push
push
aas
fwait
mov
or
jg
mov
sahf
loop
cli
cmp
test
add
out
push
inc
les
mov
in
cld
scas
cmp
dec
pop
out
ss
mov
and
mov
fdiv
mov
das
dec
sub
jecxz
mov
xor
add
jbe
cmp
xorb
shr
stc
rolb
out
incb
adc
mov
dec
fs
popa
lcall
fistpl
fcompl
bound
cmp
incl
inc
xor
aas
or
push
inc
jbe
rorl
pop
in
cmp
lods
pushf
lahf
mov
jb
add
jno
lahf
loopne
pop
push
xor
dec
sbb
ss
lock
xchg
aam
push
mov
lods
mov
sbb
xchg
insl
cs
mov
testl
in
add
out
mov
insl
xorl
cmp
lods
jle
mov
xor
mov
xor
push
cld
pushl
cld
sbb
mov
add
add
add
xlat
outsl
pop
sarb
xchg
inc
sbb
add
adc
ret
pop
dec
add
xor
movsl
ret
outsl
popa
mul
jecxz
dec
mov
mov
or
fisttpl
cltd
sahf
dec
inc
cli
insb
out
inc
orl
mulb
lret
lret
inc
jne
test
inc
mov
xor
movsl
mov
push
cmc
fstp
add
sahf
cmp
leave
sbb
stc
cmp
pusha
jnp
decb
sbb
les
aas
outsb
outsl
out
and
pop
mov
add
lret
push
cwtl
mull
push
cltd
imul
mov
les
and
jecxz
cmpsb
bound
adcb
mov
cmp
stos
stc
adc
insb
fsubl
pop
lods
andb
cmpb
nop
loop
push
cbtw
js
inc
cmp
enter
cld
test
in
call
icebp
xchg
mov
or
mov
jl
fwait
idivl
xlat
pushf
shrb
lcall
lret
mov
roll
add
add
fwait
pop
cmpl
push
push
jae
xchg
jmp
movntq
cmp
call
add
sub
pop
inc
inc
jp
lods
lahf
sti
xchg
pop
sub
jb
test
outsb
std
inc
jecxz
push
mov
scas
stc
ds
cld
pop
js
push
push
mov
jl
inc
jbe
sbb
mov
das
insb
cmp
xor
inc
popa
or
pop
xchg
test
jmp
cmpsb
push
add
or
sbb
lcall
lods
rcl
mov
mov
cmp
mov
in
push
jnp,pt
inc
js
mov
pop
sub
mov
or
pushf
inc
scas
push
fdivl
leave
mov
jmp
dec
dec
pop
jnp
dec
loop
sbb
push
xchg
js
dec
icebp
mov
push
push
rorl
fwait
jl
cwtl
xorl
mov
and
push
ss
sub
scas
mov
aas
scas
flds
ret
add
add
cmp
int3
xor
inc
addl
aaa
jbe
mov
pop
outsl
std
test
xchg
rorb
imul
adc
fs
cmp
cmpsl
popa
mov
clc
lock
stos
mov
mov
pop
fistps
in
sbb
and
cmp
mov
mov
rclb
push
or
sbb
mov
fwait
icebp
pop
xor
push
xchg
lock
ficoml
fsub
lock
shrl
and
shlb
jo
push
outsl
or
and
iret
cld
pop
ret
mov
xchg
sbb
scas
es
nop
pop
repnz
loope
sbb
xor
clc
ret
push
test
ss
imul
jnp
or
jnp
jno
sbb
or
in
jae
pop
cmc
inc
les
jae
and
andl
loopne
mov
cmpsb
scas
das
sbb
jae
jge
clc
out
add
add
jne
jne
jg
loop
mov
xchg
xchg
ret
add
add
add
mov
fimull
mov
movsb
xchg
in
dec
pop
xor
inc
xchg
mov
add
cmpsl
fistps
push
nop
cli
adc
nop
push
mov
add
xchg
cltd
push
xlat
xchg
mov
push
mov
aaa
ret
ret
pop
push
adc
imul
mov
mov
sbb
xor
jp
std
mov
das
mov
xor
aam
xor
jo
xor
jmp
pop
ljmp
mov
inc
inc
mov
ljmp
pop
mulb
jo
std
lret
je
clc
sub
pop
dec
imul
sbb
jg
push
jl
xor
iret
sbb
push
imul
mov
jo
push
inc
sbb
pop
fdivrp
jae
mov
pop
xchg
cltd
pop
sub
popa
jnp
mov
add
sbb
mov
cmc
mov
repnz
les
add
add
jl
stos
jbe
push
lods
push
dec
mov
bound
call
sub
test
mov
cmpsl
or
sub
pop
adc
aaa
cltd
mov
aad
push
xor
les
ds
inc
roll
test
imul
fcmovnb
cwtl
test
pop
push
push
incl
movsl
int3
xor
sti
test
addr16
mov
repz
daa
mov
jns
xor
stos
test
rol
and
ror
cmp
xchg
bound
or
fldenv
aad
adc
pop
cmp
sbb
arpl
das
xchg
ret
dec
idiv
scas
inc
dec
adc
pop
out
jne
dec
shl
std
sub
es
mov
mov
cli
push
fiaddl
test
push
or
adc
mov
leave
lret
lret
or
fs
daa
fsubrp
xchg
mov
and
lock
popl
add
add
outsb
jle
lods
testl
lds
add
add
shrb
push
cmp
sahf
cmp
imul
inc
test
jo
bound
in
mov
fmuls
sbb
inc
ss
lahf
dec
fmulp
dec
lcall
notb
and
mov
adc
or
fiaddl
xchg
pop
add
lea
imull
mov
shrb
adc
adc
stos
cmp
iret
xor
dec
inc
sbb
daa
lods
push
lock
pop
or
sub
nop
into
push
shl
daa
cmp
fs
js
scas
divb
into
nop
adc
sahf
or
dec
pop
pop
sbb
mov
rol
push
call
cs
push
int
xchg
inc
jecxz
push
shll
or
sub
pop
mov
inc
insb
jmp
xchg
bound
nop
push
mov
sahf
xchg
lods
pop
mov
mov
add
js
mov
add
add
shl
sub
mov
and
push
shl
int
int
push
mov
fildl
or
fs
push
jp
lret
dec
mov
in
dec
aaa
loopne
icebp
sbb
or
mov
adc
dec
lods
bnd
adc
mov
lret
push
jbe
lods
outsl
pop
std
out
pop
xor
sbb
inc
scas
jg
sub
loope
push
test
std
mov
xor
xor
sbb
imul
dec
jp
xorl
jecxz
inc
lahf
daa
fs
pusha
dec
mov
and
dec
aaa
mov
fists
sahf
shl
ss
mov
mov
repz
dec
test
jecxz
out
ds
inc
inc
inc
fwait
mov
fcoml
mov
pushf
fimuls
out
outsl
addb
xchg
and
mov
jae
or
inc
pop
loopne
lock
dec
test
sbb
xlat
in
aad
into
mov
add
add
add
push
popf
pop
push
or
ret
sub
mov
adc
nop
int3
cmpsl
or
lods
int
out
shl
jns
std
ja
sahf
lret
popa
jecxz
cs
aaa
mov
aas
aam
lahf
hlt
cld
cs
pusha
sbbl
add
mov
inc
and
sahf
jle
imul
scas
in
iret
fdivrs
stos
ljmp
pop
or
mov
arpl
in
aas
mov
xchg
fstpt
push
sarb
push
aas
sar
lds
mov
xchg
xchg
scas
jle
jg
pop
aad
push
rcll
mov
push
xor
add
sub
sbb
mov
lock
aas
mov
mov
xchg
or
stos
lds
jns
shll
out
mov
dec
sub
dec
aaa
cwtl
dec
ljmp
ds
sub
cmp
jg
and
mov
jo
add
add
add
inc
negl
dec
fiaddl
mov
cmp
jp
pop
outsl
std
aas
ret
xor
repz
push
mov
and
xchg
rolb
sahf
jne
mov
loope
mov
jbe
aaa
cmp
mov
or
int
jmp
test
adc
inc
adc
adc
sti
pop
and
add
out
movsb
pop
sbb
repz
ja,pt
fcompl
push
cwtl
add
or
jp
popf
push
mov
adc
add
cmp
jae
insb
lret
lock
aam
popa
leave
and
fildl
lcall
push
xchg
das
leave
xchg
out
scas
mov
cld
rorl
push
fsts
dec
cmpsb
mov
push
mov
iret
push
daa
flds
test
cltd
cmpsb
insl
nop
add
mov
inc
adc
push
aam
cmp
xor
push
jmp
ds
repz
fcoms
hlt
mov
lods
leave
add
add
add
fwait
sbb
mov
dec
mov
inc
xorb
testl
cltd
jo
jb
mov
sbb
ss
lret
adc
iret
nop
adc
mov
ss
jno
push
fs
icebp
in
xchg
scas
pop
fxch
fsubl
sbb
sub
orl
inc
out
fistpll
mov
les
cmp
pop
fidivrs
sbb
imul
cmp
xchg
cmp
cmpsb
stos
jmp
js
int3
jbe
adc
adcl
and
lods
xor
arpl
fs
aaa
mov
pop
and
repz
into
and
inc
mov
iret
ja
ds
or
push
adc
cmp
adc
dec
outsb
jge
fs
lret
push
push
iret
test
dec
cwtl
push
sbb
sub
adc
test
xor
stos
jb
jge
mov
mov
mov
cs
xor
add
add
cmp
cmp
mov
inc
into
add
cmp
add
sti
test
ds
jmp
or
shll
push
mov
ret
jg
push
in
rcll
xor
faddl
sbb
stc
fldl
hlt
outsl
inc
loopne
cmp
cmpsl
xchg
mov
das
sbbl
sbb
jp
push
mov
test
push
sub
sbb
and
mov
lahf
fstpt
xor
loope
cmp
adc
pushf
and
inc
arpl
sub
jg
sbb
cltd
pop
mov
in
sub
inc
xchg
cwtl
testl
cltd
push
out
leave
lods
mov
jecxz
mov
sbb
xchg
test
jge
inc
push
stc
jle
mov
or
mov
imul
pop
ret
xchg
push
imul
inc
lock
cmp
fisubs
dec
mov
add
add
enter
in
sbb
push
inc
popa
pop
ds
mov
add
add
add
xchg
pop
cmc
jae
aaa
shl
and
mov
cmp
stc
mov
push
stc
mulb
jecxz
jge
test
or
dec
pop
cld
xorl
arpl
rep
sbb
mov
inc
popa
dec
fisubs
push
idivb
leave
lock
rclb
nop
xor
jns
popa
gs
xchg
fwait
dec
cmp
fstpl
mov
mov
cmp
lods
addb
push
add
jmp
std
cli
push
div
xchg
pop
xchg
repnz
enter
push
in
push
add
test
mov
mov
les
stos
sub
sub
or
and
adc
pushf
rcrb
pop
xchg
xchg
aam
es
ja
lea
dec
nop
ret
adc
inc
shlb
and
xor
add
inc
test
test
mov
sbb
add
add
imul
cmc
call
inc
push
popa
scas
stos
jno
mov
add
add
mov
js
daa
mov
push
jbe
sahf
fildl
ds
xchg
mov
or
mov
das
inc
dec
rcrb
roll
bound
fwait
lds
pushf
divl
mov
push
dec
add
sub
shll
mov
sbb
pop
mov
ret
jle
cltd
lcall
pop
movsb
idivb
inc
in
pop
xor
jge
fs
int3
iret
pusha
mov
mov
cmp
pop
addr16
movsl
stos
jne
sbb
stos
flds
jnp
je
pop
inc
out
movb
xor
cmp
pop
mov
mov
mov
cmp
scas
popf
lock
xchg
arpl
inc
adc
cmp
ss
inc
cwtl
mov
push
ja
adc
outsb
and
pop
dec
rcrb
pop
pop
mov
lods
mov
mov
int
sub
ljmp
add
add
ja
iret
sub
jl
aam
int
add
add
dec
mov
outsb
cmp
sbb
or
push
xlat
xorl
testl
jl
jbe
in
imul
scas
out
addr16
fwait
test
mov
xchg
xchg
cmp
pop
and
sbb
push
push
jns
fldcw
and
iret
ss
loop
jne
jo
lods
fadds
pop
js
mov
xchg
or
cs
shrl
push
pop
xchg
jg
and
cmp
cs
in
xor
icebp
test
fildll
jmp
add
neg
cmp
pop
rcl
lret
jb
sub
cmp
dec
and
adc
inc
das
pop
or
lock
and
sbb
sti
mov
cmp
sbb
mov
out
mov
xor
inc
incb
jb
push
clc
cmp
inc
sahf
ret
imul
jl
mov
call
add
out
into
gs
cld
test
repz
add
add
movsl
call
fcmove
adc
lds
push
pop
or
and
adc
fdiv
mov
repz
outsb
push
push
inc
add
xor
push
or
and
imul
cmp
loopne
dec
rol
popa
aam
addb
rcrb
ret
cmp
shl
clc
sahf
inc
jo
repz
fwait
popf
inc
outsl
push
and
iret
mov
fistps
cmp
aad
pop
orb
push
pop
xchg
or
add
pop
jecxz
sbb
sub
icebp
xor
ds
cmp
adc
lret
imul
fmuls
hlt
pop
fst
sub
je
mov
lret
add
leave
jbe
push
mov
or
xor
dec
repnz
iret
in
mov
jbe
jns
cmp
adc
call
pop
add
add
add
xchg
and
je
out
mov
xchg
mov
pinsrw
add
add
imul
out
xor
rorl
cmp
outsl
jmp
jb
aas
mov
mov
adc
imul
mov
push
pop
cmp
mov
aad
cwtl
mov
test
pop
dec
out
popa
addr16
sbb
pop
add
sbb
sahf
mov
into
and
sbb
mov
push
cmpsb
rcr
or
je
push
imul
xorb
dec
adc
sti
dec
and
xchg
push
mov
dec
inc
push
xor
pop
gs
int
mov
fiadds
jmp
cmp
repnz
imul
rorl
push
ja
daa
test
mov
jle
mov
push
pop
xor
or
adc
negl
inc
push
xchg
mov
out
jno
dec
mov
add
stos
xchg
out
mov
pop
or
fsubrs
rcrb
push
sbb
notl
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
fwait
out
out
rolb
add
add
jb
cli
add
flds
rclb
lock
xchg
inc
mulb
in
pop
jbe
popa
shlb
shl
aad
sahf
into
js
add
jl
lcall
in
stc
lods
push
pop
inc
dec
cmpsb
fsubl
lock
imul
xchg
mov
mov
mov
cmc
iret
lcall
inc
fmul
rolb
inc
and
xor
mov
out
adc
jle
hlt
lret
cwtl
dec
js
ret
jmp
cmp
and
cmp
test
ds
mov
xor
fiadds
and
ja
test
jnp
loope
mov
push
out
sub
mov
ret
jl
shll
lock
fsts
mov
cmp
cmp
jl
sahf
inc
out
mov
outsl
lds
inc
in
xor
xchg
cmc
and
rclb
xor
outsb
aad
cmp
repnz
in
add
jg
cltd
shll
add
popf
mov
lahf
ret
or
inc
mov
add
add
or
int
popa
push
insb
mov
push
icebp
es
mov
add
jb
add
push
loop
roll
repnz
lock
out
popf
pop
mov
dec
sarb
lahf
dec
pop
test
or
scas
lods
mov
mov
mov
fwait
dec
add
jecxz
mov
cli
lods
dec
push
fsubrs
xchg
push
mov
arpl
cwtl
mov
in
aas
cld
inc
jne
cmp
pusha
lock
bound
imul
lcall
mov
dec
jg
movsb
xchg
push
repnz
lods
jg
push
aad
adc
mov
xor
cltd
sub
xor
rorl
dec
test
gs
cli
add
pop
mov
push
fldt
shlb
push
and
daa
and
mov
outsl
jmp
rorb
mov
mov
mov
pop
xchg
or
in
add
rolb
add
add
ret
dec
enter
enter
loope
mov
sbb
ljmp
lods
loopne
jno
and
hlt
lret
ss
loopne
jl
aaa
add
xlat
xor
mov
lret
cltd
fbld
xchg
cmpsl
jbe
jo
stos
ret
inc
leave
mov
lea
and
imul
and
pop
push
mov
ds
imul
mov
pop
pop
fisubrl
loopne
sets
or
mov
push
fdivrp
repnz
out
and
inc
andb
dec
aam
pusha
sub
inc
dec
fwait
movsl
in
pop
aaa
add
test
or
mov
dec
add
movb
jge
int3
shr
and
or
in
dec
repz
push
inc
mov
push
scas
addb
popf
push
fldl
cmp
xchg
sub
enter
xor
pop
xor
add
sbb
sub
dec
das
lret
aam
add
add
add
pusha
out
sahf
xchg
xor
or
push
sbb
lahf
jecxz
push
cmc
sbb
sbb
stos
into
mov
push
mov
ja
and
xchg
hlt
lock
ficoml
popa
and
and
rcrb
fiadds
xchg
cwtl
xchg
shrb
arpl
sbb
mov
int3
cltd
push
xor
adc
dec
cmpsb
dec
loope
pop
jl
ficoml
jp
pop
es
aas
bound
lahf
bound
lret
cli
xor
movsl
ficomps
add
fdivp
sahf
inc
mov
mov
mov
sub
add
cmovo
xchg
leave
mov
xchg
inc
insl
inc
insl
jmp
mov
lcall
xchg
adc
dec
jmp
inc
cmp
fcomps
push
inc
mov
in
mov
mov
test
cmp
xchg
movl
cli
push
add
mov
pushf
adc
ds
jae
cmp
add
add
mov
jns
sub
pop
jne,pn
data16
in
inc
pop
xchg
jno
scas
mov
mov
stos
push
dec
sti
dec
lea
jl
mov
out
andb
xor
push
aaa
rcl
test
add
bswap
je
xchg
cld
jl
in
push
jo
xchg
xchg
or
push
add
popf
test
add
cltd
or
insl
aaa
shufps
je
repnz
mov
jns
sar
pusha
int
push
mov
sub
mov
or
jno
jle
mov
fnstenv
lods
or
cmpsb
and
xchg
xchg
mov
sbb
int
mov
outsl
mov
mov
lret
aad
sbb
mov
sbb
stos
es
sub
das
push
pop
mov
mov
dec
add
pop
mov
mov
mov
push
xchg
and
idiv
lahf
insl
mov
lock
mov
aad
add
add
push
cmp
push
inc
adc
pop
cmp
pop
out
xlat
test
adc
lods
rclb
pop
fildl
out
pop
loope
fadds
outsl
stc
jp
mov
test
stos
ljmp
jmp
add
mov
pop
jmp
out
in
insl
sbb
into
cmp
dec
dec
lretw
inc
xchg
or
push
in
mov
int
sub
xchg
cltd
cmp
and
popa
mov
and
test
test
add
jge
sar
or
mov
jbe
divb
sbb
ljmp
inc
loopnew
insb
adc
daa
xchg
mov
aas
out
xchg
movb
add
cmp
add
rorl
pop
pop
stc
pop
arpl
sub
imul
clc
dec
or
mov
popf
rcl
roll
mov
sbb
fucom
push
call
rcl
outsb
jb
dec
nop
mov
and
add
add
xchg
ja
push
jg
leave
or
pop
xchg
sbb
loopne
add
add
add
adc
push
cmp
push
inc
clc
jecxz
fstpl
push
js
dec
dec
adc
dec
xor
add
mov
cwtl
or
fldcw
pop
mov
xchg
fadds
repz
cmp
outsl
xor
sbb
es
ss
and
fdivr
sti
push
push
fldenv
xchg
sahf
fistps
jb
pop
fsubrs
ret
dec
pop
add
decb
insl
cmp
scas
xchg
xchg
fadds
mov
and
stos
mov
movsb
outsb
push
movsl
jo
adc
dec
movsb
sbbl
cld
add
mov
test
sbb
jns
dec
sub
jmp
jbe
add
add
pop
gs
push
push
jae
add
cmpsl
mov
lock
inc
nop
xchg
mov
sub
cmpsl
into
insb
inc
scas
loop
add
dec
les
push
popw
hlt
gs
add
pop
push
push
hlt
mov
pushf
ret
add
add
add
int
out
out
imul
nop
xchg
movsb
pushf
pop
int3
sahf
in
add
add
add
int
mov
movsb
adc
cmpsl
ds
hlt
jbe
pop
mov
pop
sub
sahf
fstpt
dec
inc
in
sbb
cmp
stos
pop
fildl
push
push
jge
bound
adc
jb
aad
in
cmp
fwait
scas
call
add
inc
out
mov
xlat
push
fldenv
xchg
stos
mov
add
popa
xchg
mov
fbld
movsb
imul
adc
inc
adc
xlat
xor
and
es
stos
fnstsw
jb
das
cmp
loope
lret
ds
popa
jmp
dec
cli
jg
hlt
or
mov
fptan
xor
lds
jecxz
adc
inc
lahf
sahf
cmp
test
sbb
repnz
add
sbb
and
sub
lret
dec
daa
ret
xchg
idivb
or
test
sar
mov
pop
push
add
or
lret
aad
inc
cltd
inc
in
out
xchg
leave
pop
add
cmp
je
add
add
psubusw
push
in
sub
add
fadds
add
add
pop
jmp
xchg
adc
jns
push
push
add
mov
pushf
pop
adc
xchg
sbb
xor
in
or
ds
pusha
inc
sbb
pop
cmc
xchg
cwtl
xor
nop
push
lahf
nop
adc
pusha
ja
aad
inc
cwtl
mov
out
in
lds
aas
jl
xor
loope
xchg
hlt
sub
ss
xlat
cltd
jb
pop
mov
stc
mov
out
mov
jae
add
mov
fistpl
loopne
cld
xchg
ret
in
pop
pop
pop
cmp
pop
call
jge
aam
icebp
fsubr
mov
xchg
push
scas
fnstcw
std
cmc
test
mov
inc
push
and
or
add
jg
fidivrs
je
testl
pop
cli
movsb
jecxz
xchg
push
and
mov
push
xor
repnz
cmp
sbb
or
cs
ja
fidivrs
lds
sbb
outsl
or
repz
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
mov
in
flds
add
add
adc
fwait
mov
daa
push
jg
mov
adc
stos
mov
or
xor
cld
pop
dec
loopne
jbe
mov
jns
jnp
mov
sub
push
pop
xor
mov
adc
rcrb
fwait
pop
sub
xchg
insl
cld
push
je
sti
shll
in
loopne
repz
cmp
and
add
cltd
jne
cmpsl
outsb
popf
repnz
stos
bound
lods
orl
cs
adc
adcb
mov
aad
cmp
aas
sub
es
dec
mov
test
jg
fwait
movb
sbb
stos
cmp
repnz
fdivs
pop
sbb
rclb
addr16
mov
mov
enter
add
or
stc
test
push
jmp
xor
mov
pop
push
repz
or
add
add
jle
jg
std
fstpt
stos
popa
data16
add
add
push
out
mov
jp
mov
ds
add
jp
sahf
lods
test
rcrl
adc
mov
call
pop
test
scas
pusha
xchg
nop
shrl
and
fidivrl
pop
jg
lret
mov
test
fcomps
pop
or
xor
jb
fldl
sbb
cmpsl
push
pop
or
stos
cld
lds
push
popa
sub
call
out
aad
xor
fcmovbe
in
and
inc
mov
fs
pop
xchg
xchg
fisubrl
mov
fcoms
or
push
mov
aaa
pop
cmp
add
mov
or
outsl
pop
and
lret
iret
push
scas
mov
fadds
fdivl
rcrb
es
adc
repnz
sbb
push
in
inc
inc
dec
or
cld
inc
mov
adc
loop
arpl
adc
test
in
popl
add
add
mov
sti
idiv
lods
pop
sbb
in
hlt
fildl
add
add
xchg
sub
or
movsl
cld
adc
out
mov
xlat
lcall
push
or
mov
sub
inc
xchg
inc
mov
in
jle
clc
dec
xor
aad
clc
mov
rcrl
cmpsl
lock
jmp
push
jb
cmc
jb
mov
sub
js
push
subl
imull
nop
aas
adc
imul
cmc
pop
scas
push
pusha
mov
push
cmp
test
lods
sbb
out
not
add
push
xchg
es
mov
pusha
sbb
movsl
js
in
inc
adc
cmp
cld
push
mov
mov
cld
andl
mov
sbb
cmovns
test
push
adc
cltd
into
mov
lods
popl
mov
jmp
enter
data16
adcb
jae
cs
xor
mov
int3
movsl
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
push
pop
pop
cmpl
mov
stc
das
pop
mov
jbe
mov
push
addr16
fdiv
test
std
out
or
add
pop
hlt
cwtl
jg
iret
sub
pop
jl
and
femms
xchg
adcl
std
dec
push
pop
jp
or
fwait
or
scas
sub
cmpsb
stos
cli
cmp
in
pop
xor
clc
data16
jno
mov
in
stc
in
mov
lea
sub
out
cmpsl
cmpsl
loope
sub
pop
repz
popa
add
add
stos
vmaxpd
and
mov
cmp
dec
pushf
mov
addr16
mov
jg
into
sub
add
mov
mov
or
or
loop
pop
test
das
int3
adc
sub
pop
sbb
and
cmpsb
call
lret
rorl
add
and
div
push
pop
jb
cmpsl
fimull
faddl
cmpsl
addr16
fldl
add
add
test
or
dec
and
and
mov
inc
dec
test
and
mov
fs
adc
out
mov
popa
jl
rolb
out
incb
lods
int3
loop
or
push
push
pushl
stos
xchg
sbb
cmp
lods
sbb
sub
xchg
fwait
mov
aas
ret
pusha
pop
and
cmp
sub
enter
int
test
fdivl
sub
cmp
add
imul
fistps
sbb
ror
and
int3
mov
lods
sahf
adc
mov
lds
lds
ljmp
ret
fbstp
stos
lahf
in
loop
sbb
fsubrl
mov
sub
pop
imull
jne
int3
out
into
pop
mov
pop
sub
test
pop
dec
jle
add
jg
mov
lcall
fisttps
or
add
add
add
add
sub
add
or
fwait
out
popf
shl
iret
push
and
xor
inc
adc
repnz
lds
outsl
mov
stc
test
fsts
xchg
push
jle
mov
aaa
xor
xchg
add
sub
mov
jo
icebp
leave
aaa
jecxz
movsl
xor
repnz
xor
ds
orb
repnz
mov
jge
inc
jg
pop
pop
movsb
dec
add
imul
pop
push
sbbl
fs
inc
sahf
jg
and
cmc
jmp
pusha
fnstenv
cli
ret
push
out
sbb
imul
lock
roll
gs
ss
cmpsb
stos
wrmsr
fldln2
inc
fisubl
cmp
mov
stos
cmp
aam
shll
ret
pop
push
or
pop
adc
adc
loopne
xchg
jnp
lret
xchg
int3
pusha
push
and
add
add
mov
jns
xchg
xchg
mov
insb
cmp
add
add
pop
out
fbstp
add
or
sub
sbb
push
lds
inc
xchg
jle
in
sbb
sbb
cmc
push
jb
cmp
enter
mov
add
lods
ljmp
xor
icebp
xchg
sbb
stos
jmp
push
out
add
jecxz
dec
sahf
sbb
int3
inc
adcl
jge
mov
sarl
adc
or
xchg
inc
arpl
loop
shl
leave
cmp
or
inc
add
scas
sub
ljmp
jp
fsubp
mov
inc
mov
mov
insb
mov
adc
push
hlt
mov
repnz
xlat
xor
lret
inc
jl,pt
aam
jg
mov
subb
scas
sub
repnz
shrb
add
aas
push
inc
pop
int3
xor
xchg
xchg
fcmovb
in
fcompl
and
push
dec
sahf
std
mov
cmp
dec
jnp
sbb
add
add
fadd
fsubp
jnp
or
cld
shrl
add
add
add
loope
push
gs
movsb
int
push
add
movsb
test
inc
jnp
rol
outsb
incb
mov
add
cmpb
fdiv
sahf
leave
fs
dec
xchg
add
in
test
sbb
cltd
sub
adc
in
rorb
fsubrp
adc
stos
fisubrs
sub
jge
dec
add
cld
ret
jne
jns
jne
lcall
rclb
lods
insb
leave
xchg
pop
aam
push
pop
inc
fscale
mov
dec
jmp
pop
in
cmpsb
and
fsubs
call
insl
mov
inc
in
pop
mov
into
imul
mov
sti
sbb
cmp
shlb
dec
sbb
push
adcb
subb
leave
test
outsl
and
divb
sbb
adc
jl
loop
xchg
pop
push
cmp
sub
cld
cli
jle
dec
nop
xor
loop
add
add
iret
push
sbb
or
push
push
push
push
nop
test
add
or
shrl
and
int
imul
inc
jg
xchg
pop
icebp
mov
rclb
dec
addr16
cwtl
mov
xor
cmp
mov
or
cmpsb
pop
icebp
and
sarb
add
neg
xchg
xor
outsl
or
cmpl
cmpsb
pop
mov
push
jge
enter
inc
cmp
mov
ja
stos
das
clc
into
jge
and
daa
popa
pop
lods
lods
pop
mov
sahf
nop
mov
mov
sbb
ret
shlb
cld
adc
stos
jecxz
dec
pop
adcb
mov
shlb
loop
push
aam
loopne
pop
aam
cli
cmpl
cmpsb
jnp
jp
scas
fnstenv
inc
sub
mov
or
dec
imul
push
hlt
mov
cmp
loope
lea
pop
jbe
ja
sti
aaa
out
ja
sahf
insb
cmp
jecxz
add
add
mov
fnstenv
rcrl
pop
adc
dec
imul
enter
cltd
pop
dec
lds
clc
mov
sub
ljmp
je
jge
jns
jns
popf
imul
xorb
jno
xchg
jo
fwait
add
lcall
xchg
dec
pop
or
mov
pop
aas
sahf
mov
xchg
fildll
xchg
adc
out
idivb
or
xor
jns
andb
arpl
add
aad
cmp
mov
out
shll
mov
pushf
gs
jge
mov
cld
sbb
jnp
and
fs
lret
lods
jmp
insb
add
mov
stc
mov
arpl
lock
sub
xchg
adc
call
pop
pushf
sbb
inc
imul
mov
test
or
dec
sbb
mov
or
ja
pop
mov
ror
cltd
outsl
mov
aaa
pushf
test
arpl
adc
add
add
add
std
andl
jbe
fcmovb
lock
sar
test
mov
scas
mov
mov
fnsave
fisttps
in
in
ret
test
pop
rcl
js
cmp
es
dec
inc
fisttpl
push
push
mov
aam
loope
loop
dec
ret
mov
test
sahf
loop
aaa
bnd
jnp
sub
push
scas
push
loopne
ljmp
add
shll
add
orl
push
pop
sub
es
sub
add
and
cltd
aad
xor
adc
aas
gs
cli
and
in
dec
hlt
cltd
mov
and
hlt
sahf
jno
push
dec
ror
xchg
daa
lea
cwtl
repz
test
adc
mov
aas
rdpmc
ss
push
jp
daa
jno
leave
jmp
test
lea
cmp
fcomi
movb
cltd
cmc
adcb
fcos
pop
mov
icebp
sbb
add
add
add
jbe
or
int3
neg
push
iret
gs
push
mov
mov
imul
mov
push
inc
ja
sbb
add
adc
pop
adc
push
imul
jmp
mov
xor
xchg
dec
mov
and
fcomps
mov
sbb
jmp
lahf
jne
mov
test
mov
ljmp
xchg
imul
or
cs
lcall
or
push
js
xchg
fisubl
push
xchg
inc
jmp
and
stos
insb
imul
push
sti
mov
scas
repnz
cli
fstpl
mov
cmp
push
pop
stos
stos
mov
loop
cmpsl
cmp
pop
xchg
jbe
lret
leave
cmc
sub
and
xchg
in
and
stc
cltd
out
xor
icebp
mov
adc
xlat
es
add
test
cmp
adc
repz
lock
jg
in
and
jmp
or
add
add
add
ljmp
test
jne
lods
test
scas
jmp
adc
sub
and
mov
mov
into
pop
push
fwait
aad
jg
push
mov
addr16
orb
outsl
into
push
test
dec
aas
or
sbb
cmp
xchg
leave
jb
sbb
scas
cs
push
es
mov
fcmovbe
rolb
inc
xorb
fistpll
enter
std
iret
inc
sub
fdivl
shlb
pop
cmp
stc
mov
jle
int
or
sub
ljmp
shrl
fincstp
outsl
jo
dec
repz
jecxz
nop
stos
dec
xor
mov
clc
pushf
mov
xchg
sbb
cmp
test
stc
cltd
add
in
dec
adc
dec
inc
mov
insl
mov
sub
xlat
adc
inc
cmp
hlt
pop
das
adc
sbb
add
add
pop
xlat
fistpl
inc
icebp
xor
out
add
add
pop
dec
and
xchg
nop
out
mov
popa
mov
lods
pop
pop
aam
das
stc
idivl
pop
and
in
sti
mov
jnp
rclb
xchg
sub
rcr
xchg
mov
sbb
inc
addr16
mov
jmp
fs
mov
inc
sbb
lret
sub
aad
sbb
rcr
pop
shrb
addb
lds
push
and
std
pop
fcmovb
lods
mov
push
lods
insl
push
and
les
in
adc
bound
xor
pop
jns
sahf
pop
dec
rorl
fiadds
lret
jbe
xchg
lock
inc
popf
movsl
rorb
test
mov
xor
xor
push
int
xchg
pop
std
dec
cmp
push
imul
add
xor
and
jge
aaa
cmp
enter
in
xchg
jge
adc
aaa
pop
clc
scas
std
in
dec
push
sbb
add
add
mov
dec
js
stc
mov
dec
int
outsl
aas
add
and
add
add
add
sbb
pop
mov
negl
and
test
test
jnp
mov
int
outsb
or
shlb
jmp
xor
dec
cmp
pop
ret
xchg
cld
mov
lea
pop
or
sub
ror
bound
fidivl
add
or
add
outsb
and
gs
mov
pop
or
popf
out
xchg
ja
xchg
mov
icebp
push
iret
inc
xchg
sbb
dec
movsb
lcall
rorl
xchg
orb
es
js
or
les
out
arpl
jecxz
jbe
repnz
jp
movsb
adc
pop
pop
push
jp
push
mov
cwtl
pop
push
fdivs
dec
iret
cmp
out
in
pop
jg
or
jecxz
mov
xchg
add
jae
jae
lock
movsb
notb
push
int3
in
call
add
jp
scas
pop
cmp
jno
mov
pop
insb
fildll
fwait
jns
jns
adc
stos
sub
add
add
add
int
pop
imul
bound
js
adc
sub
mov
inc
lret
into
mov
pop
xchg
pushf
loop
mov
lock
xlat
stc
sub
mov
cmpsb
jp
inc
xlat
mov
sti
jb
push
fcomip
sbb
stos
popa
ljmp
repnz
imul
or
mov
ja
dec
adc
pop
outsl
and
mov
scas
jns
in
pop
int3
push
push
mov
int3
sub
rol
pushf
adc
mov
cwtl
adc
push
push
dec
out
mov
xchg
xchg
jbe
mov
dec
push
cli
pop
mov
jp
aaa
dec
mov
lods
test
pusha
out
aam
cld
test
iret
mov
movsb
jns
cmp
insb
mov
test
jmp
push
popa
test
mov
inc
jb
jne
insl
jge
enter
xlat
fcmovnu
mov
mov
shll
sub
push
mov
movaps
push
push
mov
add
add
mov
pxor
jnp
adc
jne
sbb
lret
ljmp
ds
xor
jo
cli
f2xm1
jg
and
shll
xor
dec
movsl
cmpsb
xchg
fisubrs
xor
cltd
xchg
fwait
nop
fstl
stos
lock
shlb
loopne
into
sub
pop
mov
xchg
mov
movsb
jl
lods
jne
rcll
adc
jg
inc
inc
cmp
mov
out
lret
scas
shll
pop
orl
stos
fldenv
jnp
les
hlt
mov
and
xor
jecxz
inc
lcall
or
fnsave
scas
popa
push
xchg
roll
xchg
ror
rorb
add
jno
cs
call
jne
cld
mov
xchg
lods
sbb
into
jno
iret
mov
iret
loop
mov
std
lods
jecxz
mov
enter
push
mov
shl
dec
dec
dec
mov
ja
pop
push
cmpsl
test
out
lods
xor
aas
xlat
fistl
das
inc
and
xchg
xor
add
add
add
ret
aad
xor
sti
xchg
inc
sahf
mov
fcoml
push
cltd
cmp
push
cmc
outsb
push
call
or
xchg
out
inc
sub
and
repnz
and
mov
lock
or
fmull
and
addr16
stos
js
fs
jmp
sub
mov
cmp
nop
mov
push
add
sbb
push
stos
xchg
mov
stos
test
or
cmp
fbld
pop
pop
jge
inc
aas
mov
mov
mov
add
out
loop
xor
or
fistpl
adc
xchg
shll
pop
in
insl
sub
jbe
in
jns
addr16
negb
ret
xchg
or
out
push
aas
loopne
xchg
dec
push
into
inc
lcall
fsubrp
sub
dec
aas
jle
gs
push
call
daa
insl
data16
out
mov
fidivrl
call
push
inc
push
clc
sbb
in
push
add
jb
scas
decb
fisttps
adc
add
add
add
call
and
cld
sbb
ret
test
lret
ficomps
and
int3
cmpb
sub
xchg
or
xor
adc
rolb
fnsave
in
repnz
cli
inc
mov
or
mov
sub
mov
inc
scas
in
scas
test
jmp
push
mov
cmc
je
push
pop
xor
pop
xchg
hlt
dec
jle
mov
cmp
jae
sar
mov
push
sub
aad
sbb
adc
ss
xlat
mov
ds
or
jg
push
ss
jecxz
test
cltd
stc
mov
test
dec
imul
rorb
pop
daa
cmp
sbb
jecxz
cmp
xlat
hlt
xlat
sti
leave
js
cs
insl
movb
xlat
cmpsl
push
mov
stc
imul
loopne
xchg
lods
jge
sub
sub
and
fildll
aad
mov
xlat
mov
xchg
in
xor
cmp
add
add
add
test
cmp
xor
jae,pt
or
dec
sub
or
shl
xchg
mov
pop
cmp
pop
jge
push
divb
int3
pusha
pusha
push
push
iret
aad
cmp
popf
pusha
mov
stos
cld
lock
add
xchg
mov
inc
pop
xchg
add
out
mov
pop
fwait
insb
jbe
dec
je
shll
loop
adc
std
cmp
add
lahf
jg
out
inc
shrb
repnz
xor
into
pop
cs
pop
inc
mov
xchg
and
ss
xor
ljmp
imul
loop
lock
cli
divl
mov
sbb
sub
cli
ror
cmp
mov
sar
jo
mov
mov
xor
mov
pop
scas
pop
js
jl
dec
mov
lods
mov
gs
loope
imul
add
add
mov
aas
mov
or
add
add
jae
adc
loopne
xor
sub
les
xchg
into
sbb
adc
jle
iret
sbb
lahf
adc
inc
shrb
pushf
js
xchg
mov
iret
lahf
xchg
nop
idiv
std
fiadds
cmp
dec
jne
pushf
push
push
outsb
cmovb
and
mov
dec
mov
mov
mov
sub
test
adc
outsl
xor
cs
mov
add
arpl
negb
gs
xchg
mov
lds
loopne
cmpsb
dec
iret
sahf
pop
jl
out
mov
xchg
popa
jecxz
hlt
imul
pop
jmp
sbb
adc
mov
rclb
cmpsb
imul
jbe
stc
xor
mov
psrld
pusha
jg
pop
xchg
hlt
sbb
sub
xchg
add
aaa
mov
push
push
and
dec
inc
mov
sbb
loop
fadd
sti
mov
jmp
mov
add
add
or
pop
and
adc
pop
shl
je
flds
daa
sti
mov
lods
repz
ss
xchg
dec
repz
and
test
outsb
jmp
cmp
jnp
pop
insl
cmp
xchg
pop
dec
in
stc
xchg
sbb
sbb
xchg
adc
out
and
out
jae
mov
clc
insb
lds
mov
mov
dec
cmp
add
mov
sub
or
fstpt
fsts
jmp
mov
in
jecxz
push
sbb
mov
addr16
xchg
leave
fs
dec
cmp
pusha
enter
add
test
inc
jno
sub
stos
mov
push
sub
xchg
or
jbe
add
stc
push
mov
sti
call
push
pop
fdivrl
push
jno
adc
mov
shlb
out
mov
add
add
into
adc
neg
jge
xchg
jns
dec
std
ret
cmove
add
add
add
scas
mov
addr16
mov
scas
xor
jno
inc
rcrb
addr16
pop
lock
movsl
or
adc
pop
pop
out
incl
lds
sbb
or
ss
xor
repz
jl
jns
scas
addr16
mov
jl
xchg
cmpsl
fsts
jmp
sahf
inc
in
cmp
sbb
stos
push
and
xor
mov
xchg
sub
rolb
outsb
or
cmpsb
jl
add
xor
cmp
jae
inc
jb
fsubs
hlt
add
lds
or
mov
cmp
sub
jne
ret
mov
inc
loope
repnz
dec
or
adc
in
mov
mov
fnsave
fdivl
iret
xchg
movsl
movsl
fcomps
and
movsl
sbb
mov
das
cmpsl
mov
and
push
sbb
pop
cmp
hlt
dec
pop
jo
in
pop
pop
cmp
outsl
jg
jg
sub
fisubl
icebp
add
add
add
mov
add
int
arpl
jg
roll
xchg
aam
push
mov
lcall
stos
out
faddl
orl
mov
aam
cmp
sarb
insb
leave
mov
jo
loope
je
pop
dec
mov
or
inc
leave
pop
pop
fldln2
bound
insl
jno
ffree
out
dec
push
pop
push
jecxz
loopne
jp
shl
dec
mov
jg
cmp
fs
xchg
out
rol
adc
dec
push
sbb
push
cmpsl
sti
push
outsl
sbb
in
sbb
in
pop
jmp
mov
or
mov
xchg
cwtl
jo
xchg
clc
dec
add
xchg
jl
cmp
pop
jae
and
push
clc
mov
enter
test
mov
pop
inc
push
jge
clc
lret
fidivs
push
sbb
in
push
mov
dec
pop
cwtl
les
enter
and
lcall
ret
fwait
sbb
ret
ja
and
aaa
divl
cmp
mov
repnz
add
add
mov
xchg
sbb
lret
js
lea
into
outsl
xchg
jle
adcl
cmc
push
rolb
mov
arpl
mov
or
out
push
mov
jge
das
ss
mov
mov
je
inc
mov
inc
adc
sub
mov
enter
roll
js
adc
sbb
inc
ds
lock
aam
adc
push
mov
sub
cld
enter
add
popa
pop
xchg
sbb
mov
aaa
pop
lods
ljmp
push
in
push
les
cmpl
fimuls
jmp
into
daa
mov
movsl
xchg
in
lcall
xor
loop
adc
aaa
inc
repnz
bound
xchg
push
call
pop
sbb
push
ljmp
jbe
lahf
in
xchg
jecxz
jmp
mov
jle
xor
add
add
add
fcoml
addr16
pop
push
add
pop
cs
pop
inc
mov
pop
aad
std
scas
mov
ficoms
cmpsb
xor
dec
scas
xchg
pusha
mov
jne
dec
movsl
cmp
je
jge
fldl
clc
add
cmp
push
xlat
iret
nop
jo
jno
or
mov
bound
pop
pop
adc
adc
lcall
addr16
jle
pop
add
and
lret
sbb
rcrb
xor
jp
lret
push
aaa
sbb
cmp
fwait
add
dec
mov
jbe
cmp
pop
mov
gs
testl
es
sub
arpl
push
xchg
cs
and
addl
cmpsl
cmp
loope
movsl
or
sbb
jo
pop
adc
xchg
in
addb
lods
shlb
hlt
mov
mov
mov
test
add
jne
pusha
popf
pop
adcl
add
add
add
out
imul
or
sahf
cmp
push
adc
idivl
xchg
xor
inc
loopne
or
dec
jle
push
orl
pop
xchg
jne
sub
shlb
push
sub
repz
push
cmc
paddsw
cwtl
shl
fdivrl
ljmp
xlat
mov
mov
jo
jecxz
push
pop
adcl
xchg
leave
aad
std
xchg
push
pop
xchg
or
aas
cltd
xor
adc
dec
aam
push
fnstsw
cld
dec
addr16
ret
mov
test
inc
pop
inc
lea
data16
xchg
mov
data16
movsb
test
ds
std
push
jge
dec
or
sub
lret
or
lret
adc
bnd
jbe
inc
sahf
pusha
xchg
mov
add
mov
out
adc
fadd
int3
xor
mov
popa
in
lock
cmp
inc
cmp
mov
xchg
add
imulb
mul
xor
pop
pop
cmc
add
add
add
movsb
cmp
test
fwait
adc
jmp
dec
adc
hlt
ds
jge
pop
push
mov
pop
gs
adc
pop
xchg
mov
or
lods
mov
xorb
int3
stos
out
punpckhbw
aam
in
das
mov
dec
stos
add
mov
mov
imul
sahf
push
push
jb
mov
xchg
call
push
pusha
mov
dec
ds
sti
xchg
hlt
movsl
jno
in
fsubrs
pop
xor
int3
loopne
push
pushf
cwtl
push
xor
or
mov
xor
cltd
js
fldenv
sub
outsl
ret
in
sbb
and
mov
sbb
pusha
jg
loopne
sbb
out
dec
hlt
push
sahf
cmp
daa
jo
mov
push
idiv
xchg
jg
cmp
sbb
lret
inc
push
and
hlt
lret
mov
ds
inc
inc
addr16
mov
mov
mov
add
ret
add
xor
jb
jae
pop
jne
testb
add
add
pop
lods
sub
jno
jbe
movsl
mov
jo
dec
xchg
xchg
push
into
xor
and
or
leave
bound
xchg
jl
and
jnp
pop
ja
adc
lcall
movsl
sahf
adc
mov
xchg
popf
pop
addr16
cld
xchg
sub
loop
mov
pusha
into
pop
adc
nop
mov
jp
adc
or
cld
stos
mov
dec
sbb
sub
sub
ja
cmp
sbb
and
push
test
dec
lods
and
xchg
stc
repnz
dec
outsl
sub
pop
xchg
or
outsl
movsb
mov
das
mov
push
outsl
ljmp
dec
cltd
mov
leave
fiaddl
and
cli
pop
xor
or
in
iret
testb
fldenv
andb
std
push
scas
xor
adc
cwtl
lods
xchg
mov
ficoms
scas
adc
jno
adc
int
in
idivl
js
mov
mov
jnp
pusha
testl
add
xor
inc
lret
adc
cs
sub
mov
cwtl
call
adc
xor
arpl
out
out
pushf
sub
aaa
jno
lcall
mov
leave
out
lods
cmpsb
pop
or
test
dec
jne
jge
cmp
adc
fsubl
aad
dec
movsb
cmp
scas
lcall
test
jmp
jle
gs
adc
repz
fstps
ds
les
cmp
inc
inc
push
out
push
mov
cmp
inc
cmpb
outsl
lods
and
inc
adc
sub
int3
insl
mov
bound
cmp
fadds
loope
and
outsb
fprem
jle
or
out
adc
push
pop
xor
sbb
cmpsl
and
push
mov
add
fldl2e
pop
pop
stos
add
mov
lock
pop
jle
out
popl
je
int
add
add
jecxz
inc
cli
aas
into
lret
jge
or
add
add
out
test
push
daa
mov
jmp
fcomip
in
out
push
fnstsw
das
cs
adc
xor
rcrb
lahf
jp
js
aaa
popa
pop
cli
dec
into
and
sub
test
popf
xor
aam
sbb
sbb
and
add
add
je
fwait
stc
sub
fidivs
psubsb
add
fdivrl
mov
or
test
xchg
lret
or
mov
insl
insl
popa
in
pop
in
cld
jg
popa
sbb
andb
flds
cmpsb
dec
ret
dec
lock
scas
icebp
adc
cs
xchg
jb
push
cmpsl
ja
dec
scas
lds
fistpl
xchg
sti
repz
aas
leave
mov
pushf
adc
pop
jmp
je
pop
dec
mov
test
xorl
push
and
lea
cli
sub
mov
pop
aad
popf
inc
add
jno
mov
mov
lcall
or
add
add
add
pushf
nop
pop
mov
negb
mov
pop
nop
aaa
cld
and
lock
mov
enter
stos
popf
test
push
cmpsl
je
bound
sbb
pop
and
sti
notl
int
inc
cmpsl
sbb
ss
bound
stos
in
sub
int
cmp
adc
popa
push
mov
xchg
arpl
inc
sbb
xchg
leave
sub
sahf
xor
lcall
hlt
xlat
cmp
push
inc
roll
pop
repnz
arpl
dec
cs
or
jle
mov
ss
ret
movsl
fadds
xor
xor
adc
jno
and
imul
lods
sub
add
imul
daa
bound
lea
fstps
adc
mov
cld
xchg
or
dec
xchg
mov
cltd
scas
loope
inc
push
sahf
jne
xlat
loope
pop
adc
aaa
jae
cltd
dec
mov
jno
cmpb
add
add
in
adc
mov
icebp
jle
xchg
xchg
ljmp
or
add
push
mov
xor
cwtl
mov
mov
cltd
jle
or
dec
pop
jbe
pop
xor
or
inc
mov
into
cmpsb
or
in
fdivs
pop
or
cli
push
sti
insb
push
mov
movsb
dec
subl
push
or
xchg
imul
pop
roll
sub
lds
inc
jle
or
je
rcr
cld
and
dec
or
nop
movsl
mov
and
push
mov
loopne
lods
clc
ds
push
lret
js
inc
pop
mov
aam
test
and
cmp
mov
push
jns
lea
or
inc
arpl
aas
push
cli
cmc
scas
sbb
sub
sbb
cmp
xor
dec
dec
and
xor
stos
cmp
ds
into
nop
out
cwtl
jle
push
sub
dec
jae
inc
add
sti
add
add
add
mov
int
leave
sbb
xor
in
dec
fsts
xor
ja
aas
std
sarl
aaa
outsb
jb
cli
rdtsc
mov
cmp
outsl
shrl
cwtl
xchg
in
sbb
in
inc
sarb
faddl
adc
push
loop
rorb
xor
and
shl
inc
cld
nop
fs
fiaddl
and
cltd
nop
inc
bound
in
imul
cmp
shrl
pop
push
sbb
xlat
xchg
jg
cwtl
testl
or
jl
gs
cli
test
lods
dec
popa
scas
inc
jecxz
pop
lcall
ja
clc
or
mov
fsubs
ja
test
fldcw
sbb
xchg
push
jmp
sub
pop
dec
jg
xor
flds
push
push
rclb
mov
outsl
xchg
xchg
push
lcall
ret
add
jno
test
jg
push
pop
push
mov
je
add
add
add
je
inc
int
pushf
pop
fs
xlat
dec
clc
mov
jecxz
js
add
sub
push
jo
mov
inc
dec
fs
clc
add
jecxz
sarb
fdivrl
fisubrs
outsl
cmp
pop
lahf
or
sub
xor
in
test
xchg
or
sti
cmpsb
pop
jb
xchg
fs
jp
mov
negb
xchg
cld
xchg
adc
into
mov
sub
cmp
or
cmp
jmp
aaa
cmp
mov
popf
arpl
std
pusha
out
jns
mov
shrl
push
jns
xorl
lods
ret
and
inc
out
xchg
pop
mov
popf
andl
jle,pt
push
cmc
push
es
cmp
or
rorb
icebp
cmp
sbb
sub
mov
or
cs
int
enter
in
add
out
dec
xchg
pushf
ret
fdivrl
pop
xchg
fdivrs
xor
inc
pusha
sbb
pop
inc
cli
mov
adc
movsb
push
in
cmc
jne
sbb
js
jbe
cwtl
js
add
add
add
sbb
cmpsb
push
fldl
mov
xor
movl
call
imul
lods
mov
popf
call
call
orb
lret
jo
sbb
fwait
mov
push
cld
xchg
or
xchg
cs
sub
jne
sbb
movsl
mov
xchg
imul
add
dec
subb
pop
in
mov
outsb
adc
pop
push
jg
sub
pop
xchg
movsb
shr
hlt
cltd
adc
cs
repz
fldcw
add
mov
cmp
cmp
not
sbb
mov
pop
shll
jmp
adc
jno
push
xchg
and
out
ss
xacquire
lret
xchg
adc
inc
cmp
dec
inc
fidivl
ljmp
inc
iret
movsl
push
addr16
shrl
call
lea
cmp
add
add
out
shlb
aas
out
int3
mov
aam
ss
jl
add
add
add
xor
jne
faddl
jle
push
xor
imul
xor
xchg
ss
into
xor
xor
pop
push
incl
pop
sbb
dec
adc
adc
pop
add
lods
mov
xchg
call
mov
out
adc
into
pop
add
pop
mov
mov
std
shlb
xchg
xor
insl
int
notb
popf
dec
jp,pn
add
sbb
xchg
test
cmpsl
popf
mov
and
mov
jne
iret
adc
push
xchg
sub
das
inc
xchg
push
jne
or
das
sub
xrelease
orb
pop
dec
das
dec
cs
xchg
std
fdivrl
les
sarb
cld
repz
xor
test
pop
clc
mov
paddq
rorb
clc
int
or
or
mov
and
and
cmp
add
add
and
or
dec
pop
repz
ret
in
roll
fsub
dec
inc
fimuls
jno
adc
sbb
cmp
pop
mov
loopne
lea
pusha
or
fsubr
rcll
stos
mov
add
test
cmp
mov
out
cld
mov
dec
dec
push
fidivs
lds
insl
icebp
lret
or
adc
fidivrl
rcrb
andl
cmp
jns
out
adcb
xchg
inc
lods
and
rcl
mov
cld
int
sbb
addr16
xor
mov
dec
or
outsb
mov
leave
mov
xchg
sbb
ret
loope
mov
push
mov
cmp
repz
ret
adc
movsb
mulb
mov
repnz
fcomps
pop
in
dec
lcall
push
and
or
dec
mov
into
movntq
aam
lds
mov
inc
cmp
out
fmull
inc
add
add
add
ret
bnd
cmc
inc
stos
repz
push
test
add
add
add
sub
mov
mull
and
data16
xchg
fidivl
hlt
push
add
pop
jnp
fimuls
enter
pop
xor
mov
stos
push
sbb
and
jno
cmpsl
ja
mov
and
fwait
rorb
in
push
ret
fdivrl
pop
int3
jnp
mov
stos
std
int3
lock
aam
or
dec
jb
inc
aam
cmp
dec
mov
jge
mov
popa
mov
sbb
repnz
stc
xor
ss
mov
pop
jae
icebp
dec
inc
imul
and
outsb
mov
popf
push
pusha
mov
or
daa
lcall
cmp
pop
addr16
push
in
popa
adc
rorl
xor
fs
xchg
inc
data16
repnz
mov
aam
movsl
scas
xchg
add
std
aaa
mov
shll
mov
add
add
aam
sbb
sarb
aam
es
adc
sbb
outsb
dec
lods
pop
out
fsubp
addr16
xchg
xchg
adc
lahf
xor
mov
or
pop
popa
aaa
xor
ss
and
sbb
aam
ret
pop
gs
lods
pop
sub
fildll
xchg
mov
outsb
addl
outsb
stos
mov
xor
out
lahf
adc
xchg
pop
dec
add
rorl
test
cltd
xor
inc
xchg
sbb
inc
gs
mov
int3
imul
xchg
mov
jecxz
shrl
add
ds
and
jmpw
sub
mov
pop
dec
movb
ret
add
iret
insb
bnd
push
loope
popf
lods
movsb
dec
add
push
xor
imul
sti
popa
or
mov
lea
push
stos
dec
out
fdivrs
inc
insl
aam
mov
scas
add
rolb
mov
add
jae
add
insl
cmpsl
add
cmc
push
jmp
mov
frstor
dec
call
cli
jae
sbb
adc
mov
and
in
dec
dec
subl
pop
or
mov
xor
inc
popa
inc
mov
data16
js
cmc
shlb
loopne
dec
and
push
add
subl
push
mov
pop
push
push
sub
inc
jge
in
sub
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
aaa
inc
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
cmp
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
xchg
cmp
fwait
cmp
lahf
cmp
mov
cmp
stos
cmp
scas
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
out
sub
in
dec
test
loop
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
