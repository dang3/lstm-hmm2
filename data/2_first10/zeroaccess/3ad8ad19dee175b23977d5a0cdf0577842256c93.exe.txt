push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
clc
push
mov
xchg
cmpsl
mov
mov
jmp
fstpl
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
insl
sbb
pop
js
mull
or
test
xchg
ljmp
cmp
jbe
icebp
sub
dec
mov
out
test
mov
arpl
mov
scas
sbb
mov
mov
fsts
mov
xchg
adc
rcl
pop
sti
and
int3
or
pop
test
adc
lds
pop
cmpsb
inc
or
dec
jle
aam
fldcw
pusha
aaa
lock
hlt
xor
mov
mov
fldenv
rcr
idivl
mov
push
or
and
ds
add
sub
or
loopne
test
mov
mov
roll
insb
arpl
mov
arpl
std
loopne
pop
sbb
cmp
loop
jmp
pop
add
fwait
aaa
or
xorb
dec
jne
in
aas
jp
sbb
adc
mov
mov
das
dec
push
faddl
loopne
gs
lret
sub
mov
pop
jmp
pushf
cld
mov
push
add
daa
fdiv
mov
jne
ja
mov
jecxz
cmpl
shlb
arpl
inc
nop
xchg
or
into
inc
mov
lods
iret
sub
add
lods
sbb
imulb
inc
push
adc
das
in
mov
fcmovnbe
pop
cltd
dec
mov
and
mov
pop
mov
clc
int
jp
xorb
xchg
fists
sub
or
lods
sbb
dec
push
js
in
repnz
pop
cwtl
loopne
loope
sub
sti
xchg
add
inc
jnp
shrl
xchg
mov
das
lret
jge
inc
mov
jl
inc
xorb
popl
shrb
pop
dec
cmp
fs
add
sub
jl
push
fcmove
xlat
cmp
icebp
cmp
mov
outsb
leavew
cmp
inc
mov
stos
es
sbb
mov
and
negl
jge
and
mov
push
pusha
mov
adc
jp
add
pop
pushf
test
sbb
or
test
sub
push
and
ss
and
or
and
xchg
cmp
push
cld
mov
popa
scas
sbb
test
push
mov
das
push
divb
lods
aas
sub
cld
cmp
scas
aad
ljmp
adc
negl
sbb
mov
fildl
outsb
fstl
xor
mov
shll
push
dec
outsl
mov
arpl
mov
daa
pop
inc
mov
cmp
sbb
adc
lods
sbb
outsb
mov
and
mov
movl
imul
test
or
jge
out
push
hlt
stos
sbb
mov
enter
cwtl
in
loopne
push
adc
iret
jle
test
mov
mov
push
testl
int
jp
ja
cmp
cld
cli
pop
popf
cmp
pop
stos
sbb
mov
mov
jle
mov
lret
sarb
xor
mov
push
ljmp
jg
lret
adc
daa
cltd
xchg
gs
ja
out
js
aad
mov
pop
inc
add
nop
xor
inc
cmp
jb
das
push
pop
xchg
dec
push
lcall
sbb
insl
jo
push
add
rolb
stc
mov
cmpsl
push
mov
or
mov
pop
mov
sbb
jle
pop
shrl
add
or
sub
add
adc
fsub
nop
jge
xlat
or
ljmp
and
cmp
mov
sub
js
jb
popf
jae
fmulp
ss
push
ss
xor
pusha
je
push
or
xor
in
sbb
push
and
je
cltd
ficoml
pop
in
mov
cmpsb
add
in
inc
push
iret
ja
jae
loope
push
bound
sti
test
cmp
pop
add
stos
jo
stos
imul
test
xor
push
and
daa
aas
cmp
in
sbb
xchg
xchg
sub
imul
or
out
mov
test
push
and
cmp
dec
jnp
std
int
std
cmp
and
aaa
mov
push
xor
or
aam
out
jo
aad
das
mov
pushl
sbb
fldenv
test
mov
push
pop
or
repnz
rolb
lock
pop
and
je
sti
mov
mov
repz
ror
stos
xlat
fisttpll
in
es
neg
add
cwtl
cmc
test
xchg
in
mov
fisttpll
subb
mov
xchg
aas
and
hlt
ret
imul
and
rcll
int3
inc
cli
rolb
icebp
daa
xor
cs
hlt
mov
mov
push
aaa
dec
dec
ret
movsb
fistpl
js
jns
mov
mov
jno
cltd
xchg
sub
aas
popf
mov
jmp
mov
mov
and
add
or
or
cmp
dec
out
sub
pop
cmp
popa
fidivrl
xchg
xor
xlat
mov
shl
mov
xor
test
dec
push
adc
insl
pop
push
mov
cs
cwtl
inc
daa
inc
dec
inc
xchg
gs
xor
push
in
add
das
fcmovne
test
xchg
fsubrl
xchg
mov
out
stc
or
shlb
xor
xchg
cmpl
in
cmc
mov
scas
test
sub
or
mov
icebp
push
pop
xor
and
jge
dec
stc
imul
imul
mov
lods
pushf
rcr
dec
cs
inc
xor
ror
mov
out
shll
push
lcall
cwtl
push
scas
adc
jl
ljmp
mov
idiv
mov
adc
cmp
cmp
pop
lahf
imul
sub
push
in
sub
aas
fld
lcall
cli
in
nop
jmp
mov
xchg
adc
fwait
cld
jl
shrl
into
out
push
jg
sbb
mov
ljmp
push
xchg
cmpsb
lods
out
pop
pushf
xchg
dec
xchg
das
and
cs
inc
lds
mov
fcompl
out
and
jns
sub
mov
sbb
cmpsb
push
xlat
leave
push
shrl
subl
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
push
ja
je
pusha
mov
rol
std
mov
mov
dec
in
inc
xlat
fsubrs
or
ja
imul
cmp
dec
insb
dec
cmpsl
ret
cli
pop
mov
insl
add
ja
sub
xchg
jne
mov
add
in
adc
inc
and
data16
push
stos
dec
push
in
out
pop
mov
call
sar
clc
sbb
cmp
pushf
or
xlat
jecxz
push
aaa
pop
sbb
mov
out
push
fs
jno
xchg
mov
dec
popa
rorb
lahf
or
loopne
lods
addb
sub
mov
add
stc
mov
arpl
xor
jecxz
pop
jl
cmp
scas
jmp
stc
int
mov
ret
lcall
inc
and
jl
mov
mov
xchg
cmpb
or
jo
decb
fdivrl
out
push
jno
lret
jns
dec
dec
daa
xchg
fstl
mov
cwtl
imulb
jo
mov
sbb
or
xchg
sub
pop
sub
or
sub
pop
sub
nop
les
ss
stos
daa
pop
in
add
mov
mov
cmpsl
in
out
sbb
xchg
jmp
inc
mov
enter
jno
int
sub
out
outsl
hlt
xchg
ja
repnz
inc
mov
cltd
fs
jp
call
pop
shr
repnz
mov
xchg
int
fwait
popf
xchg
cmpsb
sub
shll
addb
sti
daa
sbb
mov
jno
or
popf
or
dec
outsl
pop
imul
loop
inc
out
adc
outsl
pop
xchg
dec
jb
fcomip
cli
pusha
bound
jge
and
dec
mov
cs
pop
int3
sub
mov
or
loope
xor
and
mov
dec
rolb
adc
jmp
dec
mov
mov
add
pop
mov
push
cmp
int
shr
les
mov
push
sub
lods
addr16
push
cli
sbb
data16
pop
aaa
jg
lods
aaa
test
inc
fstpt
pop
push
mov
stos
cltd
sbb
loop
adc
lods
dec
push
and
push
sub
xchg
lret
fwait
jmp
cwtl
cmp
inc
sub
push
out
sub
push
js
or
push
popa
or
or
ret
in
push
push
movsb
scas
mov
xchg
inc
add
sub
mov
rcrb
add
movsl
scas
sub
jns
mull
xorb
scas
shl
adc
mov
stos
repnz
cmpsb
pop
lock
push
cmp
push
mov
pop
mov
dec
sbb
or
xchg
in
and
sub
es
pop
inc
inc
fsubs
pop
test
cmp
ljmp
insb
push
pop
dec
mov
mov
push
lods
and
fisubrl
and
lds
mov
mov
daa
fbstp
push
in
cmc
cmp
cmp
xor
mov
dec
push
dec
push
std
lcall
stos
dec
mov
pop
pop
sbb
loope
pop
call
pop
daa
and
pop
fcomps
fucom
pop
aaa
int
add
adc
cmp
or
aas
jo
pop
add
jmp
hlt
sub
xchg
mov
adc
jne
aas
sahf
mov
push
dec
mov
imul
mov
jno
hlt
sub
sbb
pop
int
or
or
lods
insl
rolb
insl
adc
pop
push
and
loopne
call
and
fisubs
cmp
ja
push
mov
adc
out
lods
inc
cmp
imul
add
aaa
stos
adc
jmp
out
add
dec
pop
pop
test
inc
mov
pusha
sbb
lods
jae
cmp
mov
scas
imul
and
ds
jo
add
sub
and
sarl
jp
rorl
mov
push
sbb
pop
popf
repz
stc
adc
lea
in
out
mov
sub
cmpsb
fildll
mov
push
or
mov
fs
mov
dec
lods
loop
je
and
jg
jle
push
adc
inc
lock
push
jmp
arpl
enter
stc
mulb
icebp
jne
push
into
jnp
push
xor
repnz
inc
inc
push
jmp
out
jecxz
sub
test
mov
fwait
pop
scas
popf
lea
fildl
and
mov
sub
or
aam
add
jecxz
fldcw
cmpsl
cmpsb
sti
rcrb
or
rcr
adc
xor
ret
xlat
mov
ret
mov
xchg
imul
lods
bound
enter
hlt
or
pop
push
aas
cmp
mov
adc
add
ret
xchg
fucomip
pusha
mov
movsl
add
sbb
imul
inc
mov
orl
ja
das
push
test
cmpsb
xchg
movsb
pop
jecxz
xchg
jae
jb
aam
mov
popf
movsl
xor
cmc
jb
aaa
out
mov
jo
xchg
cmpsb
nopl
adc
adc
push
aas
pop
adc
inc
lods
xchg
xchg
je
push
pop
xor
ss
cmp
lea
dec
hlt
push
push
jb
adc
jnp
stc
mov
cltd
imul
or
popa
scas
inc
pop
imul
push
loopne
cmp
jb
dec
cmp
fnstenv
or
mov
jmp
mov
scas
pop
ret
lahf
mov
cmp
mov
xchg
or
cs
xor
in
and
repnz
loop
rclb
sub
xor
adc
sahf
adc
subb
pop
mov
pop
scas
pop
pop
mov
xor
in
iret
fwait
pop
add
outsl
cmp
and
filds
mov
pushf
mov
iret
je
out
test
cmpsl
or
mov
mov
sbb
cmpsb
or
repz
inc
and
inc
xor
out
mov
jae
sbb
sbb
xor
jmp
mov
gs
lods
pop
pop
ss
xchg
or
ficomps
lods
test
rorb
ror
pop
dec
push
stc
xchg
sub
push
scas
sbb
out
stos
xchg
and
pop
repz
cmp
int3
mov
ret
ljmp
xor
aam
cmp
cmpsb
call
sbb
inc
out
fsave
jnp
adc
push
iret
xor
scas
jmp
and
ret
add
push
mov
xor
pop
sub
mov
clc
jg
call
shrl
mov
cmp
aam
sub
pop
pop
jnp
aam
push
pop
xor
push
xor
lock
stos
loopne
insb
xchg
arpl
mov
arpl
pop
jle
pop
loopne
mov
lea
stc
or
mov
loope
mov
ret
push
cs
repz
jns
nop
xor
mov
cmp
xor
sbb
sbb
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
jp
std
xchg
cmc
ja
mov
pushf
xchg
popf
push
sub
rcrl
sahf
iret
scas
xchg
jecxz
jle
push
mov
push
adc
xor
pop
std
sub
outsl
inc
sbb
or
pop
xor
in
lahf
and
fsts
ror
int3
pop
cmp
mov
loope
pusha
mov
push
sbb
ret
rorl
popa
mov
test
xorb
sbb
dec
mov
sbb
addr16
mov
xchg
jge
sub
scas
aad
inc
fwait
les
insb
pop
push
ljmp
sbb
mov
push
inc
jp
lret
hlt
and
scas
mov
cmp
push
popf
jno
inc
add
cmp
sti
xchg
out
jecxz
lock
aad
jle
shr
idivl
stos
lds
mov
xchg
stos
xor
sbb
lock
and
mov
rorb
jns
push
out
fcmovne
popa
jbe
or
popf
dec
push
fwait
mov
daa
cmp
sub
clc
mov
mov
lahf
shl
cltd
cltd
inc
shll
pop
mov
in
pop
repz
dec
leave
jl
or
sti
mov
mov
repz
mov
and
nop
sub
pop
insb
mov
out
addr16
push
ret
jp
clc
pop
mov
cmp
sbb
jmp
dec
movsl
cld
ja
xchg
cmp
mov
es
lods
jl
daa
lahf
add
dec
inc
push
mov
dec
jle
adc
subl
flds
test
jne
arpl
sbb
orb
mov
xlat
stos
ret
and
inc
shlb
adc
shlb
xchg
mov
mov
jae
stos
das
scas
cltd
xchg
iret
ficomps
push
nop
xor
pop
dec
aas
jns
lea
push
pop
push
dec
ljmp
dec
pop
fstpt
inc
fstpl
cmc
inc
out
mov
hlt
xorl
lods
shll
les
adc
inc
xchg
or
jo
or
push
ljmp
and
mov
int
cs
sbb
test
lea
retw
sbb
mov
mov
aas
aad
dec
ds
xchg
pop
xchg
jae
pushf
sbb
and
mov
pop
pusha
lods
out
inc
sahf
pop
mov
add
cmp
and
mov
stos
sub
cltd
inc
push
outsb
notl
subl
decl
das
pop
push
xchg
and
jne
aam
test
sbb
in
test
loope
test
mov
mov
invd
cli
add
adc
cli
xchg
adc
mov
hlt
int
cmp
cld
addr16
inc
push
ss
popf
loop
gs
jno
pop
or
loop
imul
mov
xchg
movsb
aaa
xchg
mov
pop
sbb
pop
lret
mov
jo
daa
repz
or
or
enter
add
mov
loope
popf
test
jl
cmp
shrl
mov
fistl
inc
insl
pop
pop
test
ss
sub
mull
fdivl
add
into
ds
xor
mov
ds
daa
xor
in
test
pop
xor
mov
xchg
mov
aad
dec
stos
inc
icebp
mov
scas
mov
xor
cmc
adc
cmpsl
xchg
test
cmp
add
cmpsb
jmp
repz
es
push
push
jo
dec
mov
sub
sbb
sbb
cmp
jmp
movsb
rcl
sbb
inc
cltd
ds
mov
adc
pop
shrb
inc
iret
jnp
push
cmp
std
out
bound
inc
pop
popa
mov
cs
and
cmc
lahf
hlt
test
mov
mov
sbb
inc
and
pusha
xchg
and
adc
lea
mov
and
divl
stos
ficompl
and
popa
faddp
cmp
insl
mov
xchg
call
jae
mov
lock
mov
pop
mov
adc
add
dec
cmp
push
push
imul
ss
adc
mov
stos
lea
cmp
mov
or
imul
xor
adc
into
andl
cmp
mov
or
data16
aad
lds
das
or
push
mov
das
loope
addb
lea
das
mov
mov
ret
ds
cli
pop
into
icebp
dec
fldcw
mov
xchg
cmp
push
ret
out
fsubr
adc
shll
iret
sti
pop
and
pop
add
jo
mov
sbb
push
pusha
rorb
into
test
pop
cld
jg
mov
or
insl
outsl
fstpt
push
ficompl
aam
cwtl
xchg
andb
stos
cld
cltd
imul
lret
jecxz
popa
cli
out
inc
cmp
dec
xchg
pusha
mov
jb
in
in
out
jbe
cmp
inc
mov
push
xor
jle
call
mov
pop
jbe
sub
xchg
xchg
lods
cmp
out
xchg
jecxz
fcompl
jl
adc
jne
popa
aam
pushf
fwait
dec
pop
adc
shl
out
repnz
dec
ret
into
ljmp
push
inc
mov
lret
jno
pop
mov
test
jae
xchg
inc
mov
xchg
cmp
das
sub
xchg
add
inc
fiaddl
insl
cmp
mov
test
arpl
out
push
loopne
test
mov
push
jae
xchg
push
mov
cmp
jp
push
gs
push
imul
xchg
ret
fcoml
pop
ss
fwait
xchg
dec
mov
add
inc
orl
adcl
cld
test
inc
cmp
aaa
push
push
mov
out
std
shrl
and
xchg
out
insb
outsl
push
cltd
shrb
pop
cwtl
es
mov
and
push
dec
mov
test
inc
inc
subl
lock
dec
insl
insl
test
push
in
pop
xchg
shr
adc
pop
testb
add
sbb
repz
das
insl
xor
pop
jae
aas
std
inc
sub
sub
mov
push
outsl
push
call
cmp
inc
popf
nop
rclb
push
jp
xor
mov
dec
dec
mov
sub
aas
ret
jmp
sahf
dec
cmpsl
cmp
ljmp
mov
xchg
inc
push
push
aad
icebp
and
lahf
sub
data16
ss
int
inc
test
imull
jg
and
mov
dec
xchg
pusha
push
mov
sbb
decb
lret
pop
push
mov
int
adc
lock
push
fisttpl
jp
filds
inc
dec
fiaddl
xor
out
mov
shll
sub
test
sbb
jle
push
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
dec
xor
ja
jge
mov
pushf
fsubrs
mov
xchg
jg
inc
mov
popf
aad
pop
xchg
adc
mov
daa
leave
sub
xor
les
or
aad
add
inc
or
inc
mov
sbb
movsb
sub
jns
lock
shl
adc
daa
dec
lcall
or
test
push
adc
scas
cmp
mov
loop
imul
push
cmp
in
adc
cmpsl
imul
dec
ret
jo
mov
push
data16
xor
and
jmp
cli
call
jl
sbb
push
lahf
rclb
test
xchg
and
xor
or
hlt
or
lea
adc
xor
pop
enter
std
leave
inc
lods
lret
lods
mov
enter
mov
stc
push
mov
js
lahf
push
es
sbb
aaa
cmp
insl
pop
pushf
cltd
add
imul
sub
cmpsl
pushf
dec
loopne
cwtl
or
push
cli
mov
inc
cmpsb
fldl
add
pop
and
mov
dec
adc
clc
add
lods
pop
sub
aad
pop
insb
fnstenv
pop
add
mov
and
xor
aad
out
mov
out
pusha
ret
or
push
adc
or
push
mov
jbe
push
mov
xlat
inc
mov
insb
mov
sbb
jge
dec
popa
fisubl
out
popf
cmpsl
dec
clc
adc
daa
cmpsl
jle
les
xor
icebp
aaa
pop
or
stos
pushf
xadd
or
icebp
loope
jmp
mov
sbb
dec
lds
stos
adc
mov
fdivrs
mov
stc
sbb
iret
in
in
loopne
wbinvd
or
and
jg
addb
and
dec
mov
movsl
mov
and
in
inc
call
fsubs
pop
fmull
in
sub
outsl
jle
xor
push
in
and
test
jo
xchg
mov
jae
sbb
and
push
repnz
movsb
adc
adc
pusha
mov
lcall
and
loopne
inc
sti
aad
mov
dec
jae
mov
pop
arpl
aam
dec
movsb
imul
inc
push
jmp
xchg
dec
cld
call
sbb
call
cld
push
xchg
out
lock
mov
lcall
xor
adc
imul
fs
or
pop
or
sub
jae
xorb
jle
les
or
in
jae
sub
jo
fidivl
inc
mov
push
addb
push
outsb
xor
in
mov
mov
pop
mov
push
push
test
cmp
int3
scas
mulb
mov
jle
test
mov
jg
lds
inc
rcr
pop
push
mov
mov
xchg
cmp
imulb
in
sbb
mov
cmpsb
call
imul
mov
xlat
movsb
in
and
pop
pop
dec
mov
push
pusha
inc
sub
sbb
jo
out
cmpsl
or
cmp
cmp
push
ljmp
outsl
stos
jg
push
dec
pusha
in
jns
in
cmp
bound
lods
mov
mov
les
mov
cmp
sub
jmp
loope
xor
push
mov
jmp
add
test
or
sbb
out
pop
fistpll
out
lret
jp
imul
test
xlat
inc
out
xchg
aas
sub
cwtl
psubd
pusha
xorl
inc
jmp
mov
xchg
push
leave
dec
jnp
or
fsubrl
cmc
jle
dec
int
cmp
js
dec
bound
xor
mov
mov
push
int
cmp
cmpsl
mov
rcrl
ja
mov
jmp
mov
test
mov
pop
icebp
mov
in
loop
xchg
fcoml
sbb
fstps
test
inc
sbb
rcrb
dec
dec
inc
aad
pop
fimull
sub
call
cmc
push
push
cmpsl
out
xchg
out
int3
sbb
jmp
pop
push
push
loopne
xor
lret
hlt
xor
dec
push
lods
push
pop
mov
fdivl
je
popa
cmp
and
lret
cmc
and
clc
push
icebp
xchg
pop
popa
fisubrs
popf
repnz
push
or
jnp
mov
jge
sub
sub
and
pop
mov
xor
lock
mov
jle
sbb
jae
fucom
in
out
xor
dec
lahf
out
lret
or
and
dec
push
rcl
pop
div
lea
les
neg
out
aam
cld
inc
xlat
mov
inc
imull
sarl
sbb
gs
push
jno
add
push
push
sub
fisubs
inc
repz
mov
inc
std
xor
pop
loope
mov
jle
dec
sub
dec
xor
arpl
and
scas
cwtl
xchg
mov
cltd
xchg
lds
lds
adc
pop
sbb
adc
sbbl
pop
in
cmp
les
sub
aaa
fs
push
pop
add
jmp
mov
jmp
xor
enter
push
or
jl
mov
xor
fwait
in
out
ss
in
loop
inc
stos
cmp
cmp
sub
cs
or
adc
in
jno
pop
xchg
add
das
mov
leave
mov
inc
jbe
mov
or
dec
sub
xor
test
lock
xor
fwait
and
shlb
lods
push
xchg
mov
ret
push
pop
push
xchg
mov
xchg
js
sahf
lock
mov
inc
xor
ss
aad
std
rcrl
notl
dec
call
adc
and
ficomps
sub
sahf
sub
lret
call
push
fwait
mov
mov
addb
mov
add
dec
and
add
push
push
cmpsb
push
lea
sub
loope
shll
jnp
add
test
cld
and
xchg
daa
sub
shrb
loop
out
jb
mov
aaa
cltd
insl
add
nop
and
adc
in
add
ret
sbb
clc
out
rcll
test
pop
push
cli
test
daa
std
adcl
mov
sbb
sub
scas
inc
jbe
nop
mov
mov
jp
and
and
lds
jns
aad
cmp
dec
call
jne
dec
int3
and
loop
loope
jns
sbb
adc
sbb
in
pop
push
sbb
aaa
icebp
shrb
test
rcll
icebp
cmp
jb
cmpsl
loope
rorl
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
aam
pusha
push
das
aam
ja
arpl
add
cmp
xchg
lahf
sbb
vaddss
and
gs
mov
iret
inc
xchg
cmp
subl
push
enter
in
out
mov
or
and
es
lea
fstpt
inc
arpl
aad
or
dec
lret
pop
mov
mov
mov
jge
xchg
repnz
jb
mov
aas
jne
pusha
sbb
lock
mov
out
arpl
jg
lods
pop
in
int3
fstps
nop
movsb
lcall
in
pop
xchg
test
jmp
cmpsl
xchg
cmp
mov
pop
sbb
rcr
add
mov
popa
ja
imull
or
scas
and
dec
dec
lret
or
xchg
repnz
mov
xor
jne
mov
inc
pop
and
out
xchg
jge
bound
lods
and
xchg
call
adc
lods
fsubs
mov
cmp
jns
outsl
cs
in
hlt
stos
jbe
shll
shl
aaa
jnp
scas
jge
push
mov
inc
stos
push
mov
cmc
xchg
rcl
rclb
int3
xchg
lock
cwtl
fbstp
mov
lret
mov
jmp
test
jecxz
xor
adc
ficoms
arpl
incb
sbb
pop
out
popa
inc
ljmp
jecxz
imull
mov
mov
xchg
std
lods
and
dec
fwait
jge
out
add
mov
mov
das
jl
or
rcrb
imulb
adc
push
scas
jle
push
push
in
sub
cmp
and
lret
jno
inc
int
or
mov
jne
insb
jge
xor
pop
sub
add
cmc
bswap
movsb
dec
cmpsl
push
adc
or
sbb
xchg
iret
in
and
loope
aad
adc
and
loope
xor
sub
frndint
mov
repnz
andl
dec
sub
loopne
into
lods
cli
mov
je
dec
xor
cltd
and
push
fidivrl
jae
mov
push
loope
int
data16
lret
sub
negb
add
aas
cmp
adc
arpl
pop
lahf
push
loope
js
jp
fxch
jae
imul
and
mov
push
mov
out
pushf
push
sbb
cmp
out
jle
fs
sub
xchg
push
mov
popa
inc
stc
adc
sub
lcall
xor
cmpsb
ficompl
ficoml
push
fcmovnbe
sub
cld
sbb
out
dec
das
pop
mov
sbb
xlat
and
pushf
and
shlb
popf
dec
cmp
ja
imul
fs
lret
insb
jno
dec
mov
repnz
cwtl
fisubs
fidivrs
clc
pop
sub
inc
xchg
cld
lret
dec
inc
cmc
in
shl
loopne
push
insl
jp
out
inc
mov
std
sub
call
in
addr16
xchg
prefetch
push
mov
and
adc
mov
jnp
xchg
imul
or
push
leave
mov
data16
data16
lret
ja
loopne
cltd
mov
sbb
cli
outsl
fsubrs
loop
and
push
out
cmpsl
adc
jle
mov
pop
mov
imul
bound
push
in
test
test
lcall
xchg
jge
push
sahf
mov
lds
lock
cs
jmp
pop
mov
or
sarb
mov
push
mov
xchg
pop
popa
popa
test
sbb
mov
pop
popa
pop
xchg
in
imulb
mov
lock
mov
pusha
jmp
dec
insb
std
add
mov
fmulp
mov
aam
movsb
jae
mov
leave
jg
inc
sbb
cmp
inc
adc
out
inc
pop
xorb
or
xchg
adc
outsl
and
mov
xor
mov
sub
adc
divl
in
mov
sub
cld
lods
stos
push
aaa
fidivrl
outsb
insb
aad
cmc
std
sbb
pop
push
pop
out
cmp
jmp
popa
sbb
jno
pusha
loopw
cltd
pop
rcrb
in
int
xchg
hlt
arpl
test
sbb
add
sub
mov
xchg
sub
jae
clc
imull
mov
push
cmp
and
stc
xchg
dec
push
cmpsl
mov
js
pusha
push
nop
mov
cmp
in
xor
push
mov
sbb
or
mov
in
je
cmpsb
jl
int
in
imul
ljmp
dec
daa
xor
xchg
lock
pushf
rcll
and
fcomps
jp
mov
sahf
lret
or
mov
dec
jo
xor
in
and
pop
cmp
daa
movsl
test
rclb
test
movl
push
jbe
or
popf
negb
cwtl
and
cmpsb
push
or
rclb
std
cld
call
fnsave
cmp
or
pop
add
pop
movsb
lea
mov
fbstp
add
addr16
sbb
es
daa
mov
stc
pop
lret
xchg
lock
or
fisubs
push
push
jnp
jns
enter
loop
mul
or
bound
xchg
fcomp
jno
ftst
or
lcall
push
aam
jb
cs
jo
sbb
jnp
out
pop
xor
xchg
add
mov
cmp
loope
pop
mov
mov
sbb
cwtl
clc
jb
pop
and
pop
ja
daa
pop
addb
int3
dec
ljmp
mov
xchg
or
stos
ret
mov
movsl
test
insb
insb
stc
inc
leave
call
and
movl
mov
adc
jns
sti
adc
sbb
jle
jae
xchg
je
fisubs
mov
lea
outsb
push
add
sub
mov
bt
pop
mov
push
shrb
popf
icebp
cmc
std
fimull
mov
es
adc
iret
call
inc
mov
add
gs
adc
pop
pop
les
and
ret
xchg
ret
push
ds
test
xor
jl
int
jle,pt
mov
xor
jecxz
push
adc
mov
cs
push
loop
or
inc
sbb
jae
adc
lods
lea
bound
jae
das
ljmp
mov
outsl
pusha
inc
sub
and
int
sbb
lahf
push
xor
loope
or
xchg
mov
js
push
sub
or
adcb
loope
and
lock
test
mov
int
les
or
sbb
je
fs
cli
jmp
mov
out
cltd
sub
mov
rcr
and
lret
inc
xor
sub
push
dec
rclb
imul
inc
jb
dec
pop
aam
sub
sub
mov
ja
mov
fs
sti
mov
inc
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
addps
add
adc
inc
icebp
xchg
fwait
imul
xor
addl
scas
inc
xchg
imul
out
enter
call
scas
jmp
or
sbb
dec
xor
cmpsl
dec
xlat
lds
shl
in
lds
mov
test
jp
push
dec
inc
adc
mov
int
push
pop
notl
xor
cmp
pop
int3
inc
in
and
int3
imul
clc
jg
adc
xor
jnp
adc
adc
lret
adc
jb
je
test
adc
pop
xchg
pop
xor
jmp
mov
paddq
jle
cmp
jb
gs
das
cmp
scas
mov
lock
cmpsb
mov
aam
sahf
rolb
adc
subl
sub
inc
push
imulb
in
mov
pop
rorb
jg
and
div
or
shll
in
les
xchg
sbb
dec
jmp
or
push
dec
push
jg
or
mov
dec
sub
dec
js
repnz
and
jl
lds
add
in
scas
adc
dec
or
xchg
inc
pop
pusha
int
addl
sbb
lods
cmp
subb
es
mov
dec
cmc
adcl
add
shlb
mov
fsubs
call
in
sub
scas
adc
rol
cmp
sbb
dec
test
mov
loope
sub
pushf
test
rcrl
dec
push
in
sub
lods
mov
call
out
mov
ret
sarb
iret
arpl
inc
push
sbb
xchg
sub
push
sbb
xchg
push
or
clc
aaa
in
jl
test
cltd
dec
cli
sub
or
ret
nop
cmp
cmpsl
jb
loop
or
mov
mov
mov
pop
and
outsb
imul
sbb
sbbl
add
out
idivb
ja
sub
out
repnz
ret
fs
sti
mov
popf
hlt
stos
js
pop
xchg
mov
sub
les
stos
mov
sbb
outsb
dec
xor
inc
mov
and
pop
out
out
mov
push
mov
add
mov
setbe
inc
mov
dec
repz
and
pop
in
std
imul
pop
shl
add
outsb
mov
ss
xchg
add
out
mov
add
cs
sbbb
mov
mov
dec
js
or
test
adc
cld
cwtl
mov
xchg
lock
movsb
loopne
imulb
jmp
push
js
mov
fcompl
test
add
aam
mov
repnz
mov
dec
scas
movsl
push
cs
mov
call
lcall
lret
adc
mov
out
sbb
xchg
push
cld
xor
outsb
xchg
jne
aas
std
add
or
insb
mov
rep
xchg
adc
sbb
xlat
dec
ret
xchg
xchg
mov
scas
mulb
jg
data16
fistps
push
mov
jbe
stc
decl
int
cmp
cmp
jmp
shlb
mov
enter
addb
ljmp
cmpsb
lods
jns
scas
mov
jl
and
push
pop
arpl
shlb
idivb
lahf
dec
adc
xchg
push
shl
adc
sti
cld
es
nop
add
mov
push
in
repnz
push
xchg
in
test
inc
test
loopne
mov
movsb
mov
movsb
pushf
cwtl
inc
sahf
out
push
lods
sbb
push
jno
loop
mov
popa
sub
inc
jmp
imul
cld
cmp
mov
add
icebp
arpl
and
sbb
dec
pop
cmp
inc
ret
pop
xor
scas
dec
jno
push
and
sbb
ficoms
push
movsb
into
insl
orl
je
xchg
ss
aam
aam
pop
sub
mov
js
adcl
mov
cmp
dec
mov
or
mov
add
jl
pop
jge
imul
mov
jnp
cld
inc
lock
fiaddl
outsl
or
xchg
aas
js
inc
fldenv
cld
cmp
push
sub
xchg
cltd
pushf
fmull
mov
xor
push
test
mov
sub
sarl
ljmp
adc
sbbb
push
jo
jle
xchg
popa
mov
mov
std
mov
mov
aaa
cmp
push
hlt
jp
lret
cmp
test
imul
sub
dec
mov
pop
mov
aas
sbb
movsl
decl
jb
enter
xchg
fs
pop
dec
in
mov
adc
imul
and
lret
lahf
sbb
mov
daa
out
xchg
or
inc
or
xlat
xchg
fcom
sub
jmp
cmp
ud0
xchg
pop
xchg
jecxz
imul
jb
fstp
push
and
and
pusha
aas
test
mov
test
xor
and
dec
lahf
xchg
jno
mov
pop
inc
inc
inc
outsl
cld
dec
pop
stc
in
pop
ljmp
movsl
imul
jl
es
mov
mov
daa
jmp
out
jle
lahf
sbb
or
enter
and
mov
daa
test
shrb
jnp
mov
pop
addr16
xorl
cmpsb
int3
int
push
pop
push
xchg
or
out
push
jecxz
push
roll
hlt
clc
repnz
dec
and
popa
push
push
rep
xchg
stos
pop
push
fwait
jl
lea
outsb
ljmp
mov
lret
cmp
mov
adc
adc
arpl
and
xchg
pop
test
lods
icebp
or
lcall
xchg
mov
mov
add
xchg
dec
sbb
sub
inc
cmp
pop
xor
das
inc
pop
adcb
daa
sbb
outsl
pop
stc
dec
stos
nop
loopne
mov
push
sub
js
outsl
sbb
cld
icebp
cld
pop
int3
dec
pop
xchg
mov
mov
cs
adc
mov
mov
xor
cmp
add
imul
cmp
jb
mov
bound
or
push
mov
cs
cmp
clc
popw
out
mov
repz
mov
xchg
call
mov
sbbl
jne
jae
jno
clc
xor
shll
mov
xchg
adc
test
cmp
mov
stos
xor
push
aad
gs
sbb
aas
lods
mov
rclb
pop
scas
push
repnz
inc
jecxz
sbb
xlat
sti
push
andb
imul
push
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
movb
ja
or
dec
inc
repnz
inc
stos
shll
hlt
lds
pop
mov
shrb
mov
daa
movsl
pop
daa
xor
or
mov
clc
enter
pop
fdivs
fsub
add
nop
lds
js
movsb
and
mov
testb
faddl
and
cli
xor
out
into
jne
repnz
xchg
repnz
scas
mov
push
mov
or
jp
sbb
out
jne
xor
in
cmpsb
sub
xchg
pop
xchg
arpl
mov
aaa
add
push
cltd
cld
lods
pop
mov
rolb
iret
and
xchg
xor
add
je
mov
xor
addl
les
or
out
icebp
jno
push
push
mov
fadds
mov
mov
push
test
mov
pop
leave
fwait
lcall
in
add
cmc
inc
imul
mov
daa
shll
pop
push
lret
lods
lea
xchg
sbb
insb
push
shl
dec
sti
fmull
fbld
inc
jbe
scas
insb
shlb
jmp
sti
adc
push
cmpsb
sub
and
mov
pop
outsb
and
cmpsl
mov
push
push
ret
loop
mov
pop
jle
dec
xor
dec
jecxz
das
imul
jae
xchg
pop
and
icebp
pop
pop
dec
das
pop
pop
xor
test
xor
cmp
mov
stos
sub
mov
jbe
gs
lret
or
xchg
shlb
imul
dec
test
dec
insb
push
ror
cmpsl
add
adc
inc
xor
or
push
inc
jle
insl
ja
repnz
jmp
mov
add
xor
cmp
divb
mov
push
stos
fwait
inc
dec
inc
aad
adc
and
xor
lock
pop
xchg
sbb
shll
test
inc
dec
dec
or
sbbl
add
notb
call
mov
fwait
pushf
rcrb
aaa
jmp
mov
dec
repz
out
mov
out
cmp
stos
jae
lcall
ja
xchg
andps
mov
cwtl
dec
sbb
pop
sahf
dec
cld
cmp
imul
sbb
adc
wbinvd
xchg
push
cmp
mov
jmp
dec
imul
imul
lea
xchg
ret
in
in
icebp
loopne
cld
stos
inc
mov
notb
pop
int3
adc
sti
push
nop
fstpt
xchg
pushf
loop
xor
or
imulb
push
push
mov
add
dec
mov
imul
add
add
or
cmpsl
in
popa
mov
psubw
xchg
and
mov
movb
dec
fdivp
int3
mov
aad
out
pop
icebp
pop
or
cltd
pop
xor
or
jnp
out
pop
data16
lret
ficomps
xor
iret
xor
hlt
cmpsb
nop
rcll
ljmp
test
lret
push
sbb
int3
add
out
dec
or
sbb
cmp
mov
in
gs
and
pusha
xor
inc
outsl
int3
xor
and
xchg
mov
sbb
cmpsb
pop
scas
pop
mov
test
dec
push
or
push
xor
add
mov
inc
dec
pop
in
mov
fwait
add
push
and
or
lds
fwait
sbb
xor
imul
mov
cmp
add
imul
js
inc
sarb
jb
push
mov
pop
stos
push
add
movl
in
sbb
fcompp
ret
cltd
outsl
fisubs
mov
sbb
jge
push
jle
adc
out
add
shlb
sub
repz
sarb
dec
inc
cmp
jecxz
fwait
loope
mov
cmp
sbb
xchg
fidivs
pop
adc
loop
xchg
push
insl
sbb
mov
addr16
push
cmp
fsubl
insl
pop
dec
add
in
jle
mov
push
sbb
aam
mov
into
bound
pop
mov
mov
insb
adc
adc
enter
loop
movsl
ja
pop
inc
push
push
test
push
xlat
mov
xchg
pop
dec
nop
je
and
fidivs
pop
daa
inc
sti
out
enter
xchg
lret
dec
mov
mov
ret
test
push
leave
insl
pop
adc
cmp
mov
mov
cwtl
cmp
jecxz
fdivrs
ss
aad
add
dec
push
lods
push
cmp
dec
xchg
mov
cltd
mov
incb
nop
and
jns
cwtl
and
fnstcw
mov
mov
jecxz
int
in
imul
idiv
sbb
or
mov
dec
push
xor
sub
dec
sahf
out
aaa
fs
sub
xor
pop
dec
aam
clc
jmp
cmp
adc
fwait
push
mov
out
dec
dec
xchg
aaa
jmp
popf
jne
add
sub
pop
adc
int
cwtl
inc
lret
int3
add
mov
das
sbb
mov
xor
cmpl
push
adc
lods
jle
repz
push
outsb
es
cmp
std
stc
popf
daa
mov
out
dec
cmc
jns
mov
stos
je
jmp
movsl
outsl
inc
sub
imul
fisubrl
mov
clc
ja
shlb
jns
or
and
imul
lcall
push
mov
pop
cltd
mov
ja
imul
roll
pop
imul
jl
inc
dec
jle
cmp
stos
mov
adcl
adc
call
mov
mov
pop
outsb
or
pop
mov
fnstcw
xor
add
adc
cmc
movsl
jecxz
jge
inc
mov
test
das
test
mov
mov
jae
loopne
add
sub
push
push
pop
mov
in
pop
mov
jnp
or
mov
push
add
push
adc
into
cmovbe
xchg
addr16
adc
pop
dec
push
pusha
ficomps
mov
inc
sub
adc
xor
int
sub
repnz
pop
jmp
cmp
mov
push
fistps
adc
mov
repz
shlb
adc
pop
jge
rcrb
xchg
mov
xchg
jb
scas
js
arpl
xchg
stos
enter
mov
xchg
aam
push
repnz
push
popf
notb
fnstenv
xchg
sbb
jp
clc
mov
push
stos
sub
fldcw
ret
xor
in
xchg
and
or
pusha
sub
clc
inc
push
int3
shll
jg
mov
xchg
or
or
int3
dec
leave
add
inc
add
cmp
pop
jl
les
dec
mov
je
push
adc
push
daa
fldl
outsb
int
push
sbbl
repnz
mov
push
mov
pop
sub
mov
scas
mov
scas
fdivl
dec
aas
sahf
pop
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
pop
pop
pop
xchg
mov
add
aad
push
sub
stos
les
outsl
xchg
insl
enter
push
mov
push
mov
in
push
adc
xchg
rolb
aas
push
clc
add
pop
in
fcmovnb
out
push
xchg
daa
adc
ret
or
adc
jbe
xor
out
pop
pop
inc
mov
pop
xor
rcrb
sub
fst
mov
xor
jae
xor
push
pop
pop
scas
xor
popf
add
jbe
add
test
cmp
sub
push
fsts
adc
lods
cmp
inc
lret
pop
arpl
mov
jnp
pusha
aaa
lock
add
xchg
xchg
pop
pop
fldl
popf
hlt
fiadds
popa
ss
inc
sub
scas
mov
aad
or
cmpsb
xchg
xchg
stos
push
xchg
icebp
xor
mov
xchg
jne
sbb
jle
jno
jmp
subl
ror
xchg
sub
stos
rolb
add
lock
and
int
push
pop
fldenv
pop
and
push
std
mov
push
and
inc
enter
or
fwait
cmp
xbegin
std
imul
mov
push
adc
push
mov
leave
int
arpl
pop
repnz
divb
cmp
mov
sub
nop
xor
test
lods
cs
arpl
push
xchg
inc
or
lret
dec
pop
push
cli
lods
in
scas
scas
sub
mov
stc
fimull
mov
pop
stos
in
jle
push
xor
adc
xchg
pop
arpl
pop
cmp
jnp
mov
jnp
adc
testb
push
mov
pop
xchg
bndstx
cmp
cmpw
mov
call
insl
loopne
jae
stc
imul
xor
or
add
cltd
bound
cmp
in
hlt
loopne
in
pop
lea
mov
fisttpll
into
popf
aam
jns,pn
xchg
js
rcrl
ret
stos
pop
dec
lret
sub
dec
push
movsl
int3
pop
pusha
jecxz
xor
in
test
push
popf
and
cmp
dec
mov
repnz
xchg
test
adc
frstor
jne
adc
inc
sti
loope
mov
or
cmp
aam
nop
xchg
dec
mov
out
mov
iret
mov
test
jecxz
push
aam
jne
sahf
xchg
insb
jbe
sub
bound
pop
jmp
mov
mov
pop
adc
cmp
pop
add
popf
imul
aaa
sbb
inc
jmp
mov
sbbb
sbb
out
mov
sub
jle
xchg
dec
xor
outsl
push
jge
cmp
fs
inc
rcll
inc
loopne
shrl
jg
fcmovnbe
in
and
aam
dec
sbb
in
test
out
das
add
xchg
fisttpll
dec
sti
dec
out
and
lahf
sbb
push
les
sti
adc
push
cltd
movsb
or
jae
inc
mov
lret
xchg
or
call
jne
sub
insb
mov
mov
ret
jbe
fstps
push
lods
out
xor
push
out
push
setge
fwait
pop
pop
push
mov
pusha
jo
scas
shl
gs
orl
adc
cmp
jmp
jns
push
jno
cs
sub
push
out
sub
setbe
stc
idivl
repnz
inc
cli
sub
imul
pop
mov
sti
mov
andl
mov
mov
xchg
rorl
sbb
test
lds
dec
add
int
mov
sbb
stos
pop
inc
mov
cs
das
sub
pop
aaa
loop
mov
sahf
jns
ja
xor
sysret
mov
jbe
inc
xchg
add
rolb
pop
mov
repz
dec
adc
imulb
enter
cmp
inc
inc
mov
icebp
stc
aam
loop
push
fisttpll
movsb
fiaddl
cltd
mul
imul
aad
jecxz
dec
outsl
mov
cmpsb
shrl
mov
insl
push
or
push
movsb
out
adc
test
xchg
pushf
mov
sbb
inc
pop
fcoml
push
das
lods
ljmp
lock
sub
xchg
and
mov
pop
addb
jge
pop
xchg
xchg
jp
movsb
add
jbe
out
push
pop
adc
xchg
cmpsb
cmpsb
xor
repz
adc
aas
inc
cs
push
cmp
aam
push
dec
cmp
or
sbb
mov
addr16
clc
jbe
mov
rcll
rolb
loopne
mov
int3
sbb
dec
jno
sti
out
inc
add
aam
cmp
rcrb
mov
cmpsl
daa
adc
addl
dec
adc
push
xor
adcl
mov
mov
lods
loope
cmp
fistpll
mov
fs
aam
arpl
into
fdivs
pop
outsl
jne
jl
cmp
rdtsc
out
xchg
lods
xor
insb
roll
mov
adc
into
jbe
dec
xor
mov
inc
das
inc
lds
push
fbstp
clc
mov
sub
scas
scas
adc
push
mov
in
fcomps
pop
add
mov
shll
pop
sub
rcll
loope
add
sbb
neg
je
mov
loope
aad
mov
js
pop
jecxz
add
sub
and
push
jns
cli
or
icebp
les
fiaddl
test
pop
push
push
cmp
cmp
sbb
ret
int
rclb
lcall
jne
mov
fdivl
in
or
and
addr16
push
mov
xor
sbb
dec
cli
enter
aad
inc
jnp
ljmp
push
mov
outsb
add
inc
xor
jb
out
jno
into
fisubs
bound
xlat
adc
inc
clc
pop
pushf
adc
mov
hlt
adc
mov
xor
enter
mov
leave
outsb
lret
jns
add
and
les
cmp
into
add
dec
loope
mov
sbb
mov
jle
pop
cli
outsl
pop
loop
mov
jbe
out
pop
cwtl
sub
push
loope
repnz
mov
cmp
push
test
stos
ljmp
notl
dec
inc
and
sub
out
les
jg
loope
les
cmp
xchg
or
jmp
dec
sbb
mov
loopne
jno
movsb
and
iret
imul
inc
cmp
add
js
mov
imul
pop
cmpsb
stc
test
test
arpl
test
xchg
rcrl
dec
and
arpl
sbb
sbb
sbb
or
ds
repz
das
negb
and
iret
jmp
movsb
dec
inc
ret
repz
xchg
cs
and
push
lahf
or
ds
dec
or
cmp
lock
dec
into
outsb
rcrl
or
xor
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
inc
out
dec
mov
ja
dec
in
mov
xor
push
xor
mov
inc
lock
push
ljmp
popf
mov
dec
cmc
adc
add
sub
sub
xchg
mov
jp
subl
outsb
shrl
sbb
adc
dec
adc
jnp
cmpsl
inc
add
dec
mov
jp
adc
mov
jp
adc
dec
mov
jecxz
imul
mov
loopne
and
mov
jg
test
fs
fsts
jl
mov
popa
xchg
std
dec
dec
xchg
sub
dec
pop
enter
lret
pusha
aaa
xor
movb
inc
mov
aas
mov
movsb
pop
fdivrl
lods
test
in
lods
jo
sbb
cwtl
push
adcb
push
xchg
or
arpl
xor
xchg
sub
mov
or
ret
cwtl
test
int
pop
in
leave
add
fcmovne
adc
push
sbbl
int3
cmp
mov
test
mov
aaa
lret
jl
inc
mov
aam
insl
shr
rorb
std
adc
inc
stc
xchg
mov
mov
test
arpl
mov
jae
push
mov
or
and
push
adc
fwait
bnd
outsl
mov
push
mov
andl
addb
sbb
jecxz
dec
fs
sbb
dec
jb
outsl
dec
add
test
aam
push
stos
or
cli
sub
loop
inc
mov
cmp
std
into
cs
add
pop
pop
lods
insl
xor
inc
aad
adc
pop
dec
sbb
aad
test
inc
xor
xor
sarb
lcall
cltd
push
mov
lods
xchg
mov
jmp
out
fldl
rorl
jo
xor
adc
mov
imul
dec
addr16
xchg
xchg
inc
in
fnstcw
xchg
jns
mov
fmull
sarb
sahf
ljmp
push
xchg
jle,pt
call
dec
push
cmp
jbe
lock
xchg
in
cltd
add
arpl
xor
in
iret
mov
cli
xchg
push
mov
xchg
add
mov
sub
rorl
jb
jp
ljmp
mov
fs
cmp
popf
xor
cwtl
mov
outsb
and
into
mov
sbb
lock
daa
pop
cld
enter
cmpsb
pusha
jns
arpl
xchg
cmp
dec
push
cmp
adc
mov
leave
or
ror
add
dec
dec
sub
and
add
fwait
mov
cmp
dec
cmp
pop
lods
sub
sbb
arpl
sbb
or
push
mov
jecxz
movsb
push
test
test
insb
das
aaa
mov
adc
mov
xchg
mov
scas
mov
cmp
and
adc
fldl2t
daa
cmp
outsb
lea
add
and
inc
xchg
cli
mov
jne
or
xchg
mov
inc
movsb
dec
pop
mov
cmp
jge
or
ss
jecxz
sbb
lahf
and
cmc
lret
xchg
sbb
mov
out
xchg
add
cmc
jmp
cmp
je
and
lds
fidivrs
daa
fidivs
sbb
jp
lahf
mov
aad
xor
insb
push
and
dec
mulb
pop
imul
push
je
cmp
cmp
fiaddl
out
pop
mov
or
in
adc
mov
in
push
cmc
hlt
sub
sub
arpl
lds
adc
je
add
cld
sub
daa
fsubrl
fcoml
mov
rorb
push
inc
cwtl
movsl
test
movsl
jmp
xor
lods
test
cmp
fbld
xor
ja
sub
mov
aas
repnz
movsl
gs
cli
xchg
xchg
cmp
stc
xchg
adc
mov
dec
fisttpl
xchg
jns
jns
or
mov
xor
or
jecxz
xchg
mov
stos
dec
mov
int
icebp
leave
lods
pushf
iret
mov
cmp
push
jmp
add
sub
add
pushf
rorb
or
pop
aam
inc
insb
mov
bound
xchg
push
test
dec
adc
or
test
xchg
lret
adc
sub
lods
mov
mov
and
test
jp
imul
sbb
push
fisubs
fadds
fdivs
loop
or
sub
fidivl
rorl
jne
inc
mov
adc
es
push
xorl
lods
rol
in
les
lods
pusha
fcmovbe
into
push
cs
mov
or
repnz
push
dec
ss
dec
or
xor
les
jmp
bound
inc
dec
mov
pop
xor
into
fcomps
mov
outsb
cmpsb
dec
cmp
leave
mov
rep
mov
roll
std
mov
fisubrl
ret
je
jmp
dec
mov
loope
shrb
dec
nop
mov
push
mov
push
xchg
mov
pop
pop
scas
fcmove
cmpsl
mov
add
pop
test
fmuls
loopne
ret
ja
sbb
popf
sub
mov
mov
scas
mov
jmp
cld
mov
add
mov
into
cld
add
xchg
jg
pop
dec
inc
push
jae
push
xchg
push
mov
cli
icebp
movsb
mov
push
fcompl
mov
mov
mov
scas
push
mov
mov
jmp
xchg
mov
sub
cmp
pop
xchg
cld
push
mov
ret
ret
xchg
and
push
shlb
or
cmp
outsl
xchg
cmpsb
add
adc
push
in
bound
sbb
mov
sbb
out
push
fistps
mov
add
push
or
lret
lods
dec
dec
mov
mov
push
popa
adc
scas
sub
sbb
das
mov
loopne
popa
popf
scas
lcall
test
out
stos
jno
mov
pop
inc
fnstsw
and
rcll
pop
jp
jp
pop
add
in
xor
cmpsb
cli
dec
icebp
or
in
mov
and
repnz
sarl
lret
call
mov
add
mov
loop
fidivrs
int
in
lea
push
mov
push
ljmp
cmp
jb
sub
rcrb
fs
inc
shrb
push
jecxz
jmp
add
std
lods
aam
out
imul
push
mov
adc
fdivs
test
jg
enter
scas
outsb
shr
stc
enter
int
add
mov
inc
sub
push
dec
xor
in
jae
pop
test
sbb
js
push
push
lds
cld
xchg
daa
out
mov
cltd
mov
loopne
aad
add
xor
mov
mov
xchg
popf
int3
clc
scas
addb
xchg
je
add
push
cmp
mov
xchg
jno
lods
roll
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
and
ja
xchg
xlat
pusha
pop
aas
push
cmp
enter
dec
pop
add
sbb
mov
and
push
sub
xor
andl
dec
popl
xor
xor
sbb
es
shll
shl
sbb
in
orl
outsb
inc
fdivr
xchg
int
fists
add
inc
xchg
inc
sbb
jl
rcrb
mov
xchg
sub
pop
pop
jnp
push
jmp
xor
nop
cmp
and
add
rorl
mov
stc
stos
xchg
jnp
leave
xor
notl
lods
mov
mov
jp
clc
sub
inc
outsb
cmp
inc
pop
mov
fmuls
push
packuswb
inc
test
xor
mov
addr16
or
jg
loopne
mov
push
int
pop
mov
lahf
xorb
test
das
lods
popf
lret
dec
mov
out
sbb
test
mov
mov
clc
jb
xchg
sahf
stos
mov
loopne
jnp
push
je
or
sub
inc
xor
pop
jns
xchg
lret
jne
repnz
test
sarb
xlat
inc
mov
outsb
mov
lds
mov
mov
gs
das
cmpsb
loope
sbb
xlat
mov
imul
jb
icebp
pop
jnp
scas
mov
inc
lock
cmpl
lret
stos
push
andb
loop
add
inc
sbb
jo
rcpps
imul
lds
inc
fistps
jns
mov
inc
sbb
mov
loope
inc
pop
pop
cmp
std
mov
rcll
dec
xchg
rcll
mov
in
add
mov
sub
cmp
daa
dec
add
sub
or
dec
pop
cmp
mov
dec
call
out
sub
add
xchg
mov
xor
add
imul
sub
fsubrs
jge
or
fbld
push
push
test
dec
jp
stos
pop
mov
ret
out
fildl
cmp
shr
insb
fdivs
sub
mov
and
out
dec
cmp
pusha
and
fs
sbb
hlt
lcall
divl
out
push
mov
mov
cmp
ss
lret
jmp
ret
xchg
and
mov
in
stos
arpl
push
clc
ja
hlt
imul
cmc
adcb
xchg
lock
mov
push
push
scas
sub
mov
insb
add
push
in
mov
ficoml
mov
std
aas
sarl
hlt
add
loope
pop
loopne
adc
sub
push
add
nop
mov
cs
pop
xchg
sbb
dec
push
jae
adc
stos
jg
ret
lahf
fcomps
call
pop
adcl
fstpt
mov
sbb
repz
sub
push
test
push
xchg
and
cmp
inc
fisubrl
cmp
ret
xlat
push
pusha
and
rcrb
bound
sbb
xchg
cmp
mov
pop
ss
cmp
dec
mov
lcall
out
mov
nop
imul
cmp
std
or
ja
outsb
jo
faddl
or
fcompl
and
push
lcall
mov
add
adc
jno
push
sub
sbb
outsl
pusha
dec
stos
and
movsl
jnp
insl
out
xchg
push
xchg
jo
rcll
fs
outsb
sahf
outsl
jg
add
sub
js
mov
push
pop
mov
es
cmp
inc
push
pop
dec
dec
aad
les
and
sbb
sbb
cmp
decl
aas
mov
xlat
cmp
fwait
pusha
mov
fiadds
cltd
cmpsb
fcmovb
sub
cmp
mov
adc
sahf
jmp
lahf
movsl
inc
mov
mov
adc
call
or
mov
jb
adc
pop
mulb
das
rcr
or
mov
mov
jno
into
scas
test
xchg
cmp
aad
or
ror
les
arpl
data16
lret
movsb
lcall
lret
testl
repnz
sets
and
notb
mov
pop
mov
push
in
nop
mov
test
cltd
push
rclb
or
aaa
ficomps
fdivrp
pop
xor
scas
xchg
cmp
sub
xlat
push
push
es
mov
or
cmp
popa
jno
lcall
cld
aad
xchg
leave
ja
je
pop
fmull
fcomps
dec
out
jns
daa
repz
inc
ret
andl
lods
es
test
dec
pop
adc
sub
ret
arpl
test
pop
mov
sbb
jae
out
mov
push
xchg
mov
mov
in
xor
aad
subb
les
push
clc
in
adc
mov
loop
mov
sahf
push
sub
mov
dec
and
xchg
test
arpl
push
pop
mov
push
mov
mov
and
in
adc
les
pushf
pop
out
hlt
testb
xchg
xor
in
lods
fsubr
adc
rcl
fistpll
jmp
fistpl
stos
aam
lds
push
imul
and
mov
mov
xchg
fstl
sbb
pop
repnz
nop
xor
push
imulb
mov
sub
xchg
adc
or
jb
fdivs
sub
seta
scas
xor
add
icebp
in
ret
pop
es
rcll
test
jns
and
pop
test
mov
dec
pusha
or
mov
dec
cmpb
pop
lret
sbb
sbb
out
xchg
fcomps
pop
jns
movsb
loopne
data16
or
mov
or
xor
or
lock
lea
dec
adc
mov
gs
cli
shll
sbb
test
add
lods
scas
mov
add
mov
jl
es
out
ret
sbb
fidivs
sub
mov
imul
iret
bound
cs
mov
repz
push
xor
mov
lea
jle
cwtl
mov
in
xor
inc
mov
xchg
push
je
jo
aad
aam
repnz
shll
imul
aaa
ja
mov
inc
push
push
mov
or
mov
inc
push
fdivs
pusha
inc
mov
cwtl
jbe
roll
shll
mov
std
inc
pop
cmpl
pmaxsw
lock
adc
roll
mov
aad
loop
fstl
dec
mov
pop
cmp
popl
inc
mov
movsl
gs
out
and
cmp
ret
ret
sbb
sbbl
aam
mov
pusha
clc
stc
test
jns
fsub
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
std
push
ja
je
mov
jl
lcall
mov
adc
jge
mov
inc
into
out
ret
cmp
in
out
xchg
and
in
in
test
andb
mov
hlt
mov
mov
aas
incl
sub
scas
adc
pop
arpl
xor
add
cwtl
push
mov
int3
loop
orl
xchg
ss
jecxz
pusha
jl
or
fwait
adc
and
jns
orl
test
insb
inc
rcrl
fisttpll
xchg
mov
push
sbb
push
push
adc
ror
mov
and
cltd
test
lret
int3
icebp
loope
scas
xor
xchg
xchg
imul
add
fisttps
roll
jecxz
out
xchg
test
adc
out
sar
fistl
icebp
xchg
out
lods
xor
inc
dec
cmp
cmc
popf
push
mov
fstp
mov
mov
sub
sbb
addr16
loop
mov
xchg
cltd
imul
cmc
mov
movsb
pushf
negl
stos
fwait
xchg
into
cmp
mov
mov
movsl
in
inc
push
gs
inc
push
mov
stos
jle
and
mov
mov
cmp
js
ret
jnp
sbb
cli
jno
sbb
in
push
addb
stc
lret
int3
sub
mov
out
sbbl
jg
cmp
outsl
sti
mov
mov
repz
push
js
push
andb
push
cmp
ret
mov
in
dec
daa
roll
rcrl
jmp
pop
xor
aam
dec
imul
outsb
ja
mov
xor
mov
pop
shlb
movsb
xlat
enter
and
negl
icebp
mov
loop
int
push
cmp
sbb
mov
dec
and
pop
sbb
add
ffree
jno
jae
adc
dec
and
mov
dec
leave
lret
push
xor
fisubs
cmp
test
push
xor
xlat
push
pop
pusha
sbb
push
mov
in
loopne
xor
adc
adc
dec
outsl
cld
mov
xchg
aad
cmp
and
fisttps
pushf
jp
sub
addb
xchg
and
out
mov
mov
ss
cmpsl
xchg
aam
mov
inc
cmp
aaa
data16
add
filds
jnp
ljmp
addr16
bnd
jle
dec
idiv
fsts
push
push
xor
mov
inc
shlb
repz
je
cmp
mov
in
push
out
out
loop
sahf
icebp
ret
clc
jle
scas
daa
out
into
das
xor
adc
adc
inc
icebp
xchg
inc
fwait
mov
lods
mov
cmc
pop
push
jp
sbb
les
pop
lret
mov
orl
mov
pop
mov
adc
jmp
fistps
sub
outsl
ss
std
in
mov
mov
push
repnz
xlat
movsb
adc
insb
add
or
and
adc
inc
aad
sbb
dec
push
in
or
in
mov
lahf
sbbb
adc
je
fsubl
inc
jg
or
cmp
fisubs
fcmovb
inc
cld
and
data16
cltd
add
cmp
fstl
mov
jne
sbb
mov
push
xchg
dec
xlat
aad
xchg
adc
add
mov
push
cwtl
mov
sbb
dec
cltd
pop
xor
mov
xor
xchg
jo
out
push
lods
jae
mov
out
dec
xchg
adc
mov
add
mov
out
call
lea
pusha
adc
aas
dec
or
mov
mov
lahf
int3
cmpxchg
jne
inc
push
mov
pop
out
sbb
loopne
cmp
out
inc
xchg
adc
inc
sbb
push
dec
lods
sbb
shrd
add
cmp
xchg
test
rolb
ja
orl
pop
mov
xor
sub
add
cmp
daa
pop
push
shlb
dec
lods
sbb
cmp
cmp
add
jmp
cmp
push
and
mov
xorl
and
jl
fsubrs
call
push
iret
cmp
inc
dec
cmpsb
hlt
xchg
jb
adc
insl
fidivrl
pop
cmp
push
repnz
or
push
xchg
pop
sub
mov
ds
iret
dec
xor
mov
jne
icebp
push
jnp
arpl
adc
xchg
movsb
je
clc
cmpb
shlb
xor
cs
mov
mov
int3
loop
fadds
cmc
bound
xorb
inc
fisttps
out
xor
pop
xchg
lock
mov
int
jmp
cli
jmp
rorl
and
imulb
mov
dec
jbe
mov
pop
popa
lds
out
push
aaa
movsb
push
cs
pop
push
sbb
cltd
sub
adc
mov
inc
fmull
sbb
ds
cmpsb
iret
adc
ret
mov
jl
jne
xor
rolb
das
test
and
dec
mul
sbb
lahf
push
aas
xlat
mov
xlat
fdivrl
js
xchg
out
ret
std
push
ljmp
roll
ljmp
xor
rolb
push
pop
iret
mov
pop
cmpsb
loop
cs
xor
mov
mov
and
mov
call
ret
fwait
lods
inc
fsubr
xlat
adc
mov
pop
xor
std
xchg
std
aad
and
andb
xchg
js
pop
mov
jl
sbbb
cmc
rcr
arpl
int
imull
cmpsl
nop
pop
cs
loopne
or
xor
jns
lret
sti
add
jecxz
xor
adc
test
mov
mov
push
imul
sarl
xchg
dec
jo
incb
push
out
dec
jne
in
mov
jno
sbb
mov
mov
stos
fisubrs
push
push
or
jl
ffree
cmp
mov
fistpl
dec
sbb
mov
pop
pop
adc
lret
lcall
jb
inc
call
aam
pcmpeqb
mov
cmc
ljmp
lea
mov
dec
inc
inc
rclb
iret
stc
mov
pop
or
mov
insb
jp
aas
dec
clc
and
int
mov
inc
cmp
lds
lods
cmp
pop
and
mov
cld
mov
out
jnp
mov
mul
in
in
dec
popa
mov
sarb
sbb
jecxz
cmpsl
inc
test
sbb
inc
xlat
push
insb
loop
cmp
adc
mov
mov
mov
cmp
and
push
das
push
add
and
push
lods
ss
out
xchg
int
jmp
mov
divl
ds
insb
rcl
dec
or
jge
xchg
inc
xor
pop
scas
or
xor
enter
test
sub
out
sub
cli
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
dec
aad
dec
inc
cmp
pop
repnz
shrl
cltd
mov
pop
push
sti
push
and
repnz
pop
pop
mov
mov
and
pop
pop
xchg
xor
xlat
aad
push
pop
stos
mov
jl
push
lea
dec
cmc
mov
jecxz
cmp
sbb
pop
push
sbb
and
inc
mov
or
pop
icebp
pushf
fcompl
test
clc
movsl
inc
arpl
cmp
setno
pop
push
shlb
cmpsb
mov
push
fidivs
repz
jne
pusha
cmp
mov
mov
dec
and
adc
clc
xor
std
pusha
xchg
std
xchg
dec
stos
sbb
lods
pop
jno
insb
xchg
sub
or
fcmovbe
out
arpl
cmp
cld
jb
shrl
imul
nop
push
pop
or
es
push
clc
inc
or
and
cmp
leave
enter
jle
into
xchg
mov
outsl
outsb
icebp
std
mov
in
adc
cwtl
xor
jns
dec
mov
push
jle
jmp
dec
adc
les
imul
outsl
jg
push
adc
sbbb
ret
jle
sbb
xor
stc
xchg
inc
push
sub
shlb
test
sbb
or
frstor
adc
mov
lock
testb
jb
lahf
sbb
pop
std
mov
mov
stos
mov
les
outsl
xchg
jle
cmp
dec
mov
shlb
repnz
out
xchg
push
inc
or
push
sbb
addr16
add
out
hlt
xchg
lret
sti
mov
inc
dec
push
pop
in
adc
lret
pusha
outsb
fistl
push
dec
ret
jl
sub
mov
xchg
xchg
pop
mov
fcoms
jne
sahf
mov
mov
loop
cli
test
fwait
adc
loope
out
popa
push
cmp
inc
adc
enter
inc
cmp
adc
sbb
pop
lods
outsl
mov
add
jnp
ss
shl
mov
loop
dec
in
lods
jp
push
iret
jnp
cmp
dec
xchg
int3
pop
mov
clc
inc
filds
nop
fldt
ljmp
fmull
pop
stos
xchg
push
fucomi
mull
pop
pushf
push
divb
add
aas
add
fs
sarl
fidivrl
pop
sahf
push
push
fwait
popa
xchg
sbb
in
sub
add
pop
sub
repz
sbb
jg
icebp
push
mov
xchg
mov
out
mov
adc
aaa
aaa
enter
es
dec
pop
inc
sub
or
mov
adc
xor
neg
and
bound
shll
push
mov
sbb
js
inc
nop
and
loop
dec
decl
xchg
imul
pop
fs
in
pop
jp
divb
aam
jmp
and
jnp
addb
xor
fcoms
stc
fsub
stos
or
sahf
inc
dec
sub
jecxz
pop
pop
iret
inc
dec
loopne
gs
cmpsb
aad
loop
xor
sbb
arpl
jb
or
cli
cmp
cmp
jbe
xchg
mov
xchg
jmp
xchg
test
jge
pop
dec
int3
ljmp
icebp
push
jg
popf
ret
xor
movlhps
inc
imul
mov
mov
sbb
or
ret
mov
ss
cmpsl
jne
mov
aas
enter
xchg
sbb
dec
nop
pop
xchg
cmp
iret
pushl
loope
mov
scas
sub
lcall
inc
or
xor
scas
jmp
xor
mov
cmc
dec
xchg
cld
mov
aad
jmp
adcb
mov
add
pop
xor
sbb
jmp
lods
push
int3
jae
fsub
mov
int3
and
insl
push
mov
jno
jge
add
std
ds
js
pop
cmp
push
xchg
pop
hlt
dec
movsb
scas
enter
fcmovu
or
hlt
and
xchg
repnz
fwait
ret
int
push
dec
rolb
and
pop
outsl
fisttpll
xchg
fcoml
test
pop
clc
lahf
cmp
lock
pop
mov
shlb
in
adc
pop
push
add
mov
inc
jb
test
mov
clc
js
outsl
push
jg
xchg
test
dec
sbb
das
les
lock
or
cmp
or
xor
in
and
mov
sub
and
push
push
dec
cs
adc
add
sub
or
xor
repnz
push
cmp
gs
gs
clc
imull
mov
mov
lods
fcmovnbe
idivb
lret
imul
out
fistpl
imul
lret
imul
pop
cmpsl
test
push
sbb
xor
xchg
push
jl
js
or
inc
mov
daa
jge
cmc
ljmp
data16
shlb
test
dec
xchg
popf
int3
fistpll
cmc
mov
stos
enter
popa
movsl
negl
ja
std
mov
pushf
sub
or
insb
leave
adc
xchg
push
punpckhdq
cmpsb
add
js
adc
jmp
inc
or
cld
push
push
stos
mov
mov
lahf
or
mov
in
inc
in
stc
sub
call
decb
and
ja
jns
rolb
push
sub
sbb
push
mov
dec
int3
sub
and
adc
mov
inc
jne
pusha
adcl
add
inc
rorl
add
sahf
add
xchg
cmp
int3
dec
xor
out
in
test
ljmp
ljmp
mov
mov
cmp
fidivrs
popa
dec
loopne
dec
push
or
dec
dec
jbe
pop
cmp
pop
and
mov
out
mov
xchg
adcl
stos
rorl
xchg
jb
out
fsubr
sub
sti
repnz
xor
and
ds
xchg
movsb
sub
mov
bound
pop
sbb
dec
addl
cvtdq2ps
out
adc
sbb
rdmsr
lret
xchg
ret
pusha
mov
popf
test
jae
xor
adc
in
icebp
sbb
xchg
or
and
mov
xor
cmp
std
mov
psrlw
ret
rclb
enter
lods
mov
sarl
roll
sub
leave
sub
inc
mov
jg
div
sbbb
pop
pop
adc
add
pop
es
test
pushf
adc
repnz
ffreep
rcll
fsubrp
sbb
push
sub
mov
inc
scas
xchg
outsl
pop
les
cli
jp
insl
cs
aas
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
outsl
xchg
push
outsl
dec
pfnacc
jno
jl
mov
loopne
int
jo
fisttpl
les
fisubs
push
jae
push
in
xorl
inc
icebp
test
jns
cmp
lcall
pop
mov
inc
xor
call
addb
cmp
cmp
adc
mov
lock
fstpt
bnd
dec
jns
adc
pop
mov
out
mov
cmp
jmp
dec
daa
adc
pop
bound
dec
pushf
gs
ja
repz
xchg
xor
sub
jbe
and
rclb
push
pushf
xchg
ret
jg
or
adc
pop
sub
pop
aas
ss
test
lock
fiaddl
xor
jle
inc
repz
mov
and
pop
iret
jle
xor
pop
jo
and
xchg
insl
xchg
mov
fucomi
sysenter
ds
cwtl
shll
scas
js
mov
push
lock
sar
inc
xor
sbb
cmpsl
xor
fdivrs
scas
push
or
push
out
enter
pop
xchg
push
cmp
adc
lea
and
add
cmove
out
dec
pop
cmp
andb
xchg
push
mov
pop
into
add
pushf
dec
cli
or
pop
das
data16
push
xor
and
mov
xor
xchg
mov
in
add
or
bound
sbb
sub
popa
fldt
mov
lock
inc
fs
addr16
rcrl
int3
adc
sti
and
inc
pop
and
mov
or
mov
add
jg
ss
mov
testl
adc
jae
inc
pushf
movsl
mov
jae
xchg
adc
or
and
pop
int
int
inc
sbb
push
gs
call
popa
mov
fsubrl
pop
xchg
xchg
pop
add
lods
andl
mov
add
mov
mov
ret
out
loopne
lret
test
andb
inc
or
shll
gs
jmp
mov
cld
cltd
xchg
ret
out
rclb
rclb
lods
pusha
fsts
rorb
std
push
xchg
dec
roll
fisubrl
mov
cltd
push
jb
stos
xlat
jmp
pop
sbbb
aas
into
add
mov
mov
mov
outsl
mov
lcall
push
js
jmp
divl
push
sahf
in
loopne
les
pushf
inc
mov
adc
aad
test
push
sbb
daa
lea
cmpsl
fists
push
sub
push
ja
shrl
sti
push
push
jae
cmp
dec
jecxz
dec
movsb
mov
fwait
in
pushf
dec
xchg
mov
test
jno
and
and
sub
out
fisubrl
dec
mov
inc
aam
insb
mov
cld
add
imul
inc
jne
cltd
or
leave
push
sbb
inc
and
movsb
popa
into
sub
es
xchg
test
xchg
push
outsl
imul
ja
scas
xor
mov
std
mov
jge
pop
icebp
sub
inc
dec
outsb
int
fbstp
lds
cmc
ret
hlt
aas
icebp
and
lahf
or
movsl
and
ficomps
pop
or
xor
cmpsb
in
and
sarl
popa
in
pop
iret
shr
or
cmp
mov
out
scas
cmp
cld
ja
call
inc
dec
jecxz
pop
mov
push
cmp
cs
push
add
mulb
inc
mov
adc
inc
inc
jb
rcrb
sub
loop
mov
inc
mov
inc
jecxz
sti
add
and
fldcw
adc
gs
inc
mov
das
mov
ljmp
sbb
repnz
mov
ljmp
sbb
mov
xchg
add
push
jp
jno
decl
hlt
push
and
mov
loop
addr16
outsl
mov
outsb
xchg
faddl
leave
cltd
ret
xor
jecxz
call
in
orl
mov
rcrl
push
adc
rcl
sub
pushf
stos
sahf
mov
dec
mov
stos
pop
fistpl
sbb
dec
add
cmpl
jno
out
inc
push
nop
and
cmpsl
mov
sbb
ss
or
pushf
mov
cmp
sti
inc
inc
imulb
cmp
repz
fs
adc
add
lods
inc
mov
data16
xor
lock
sub
dec
scas
cmp
repnz
dec
enter
aam
fwait
lods
inc
out
jmp
call
subb
jge
sbb
daa
and
cmpsl
xor
imul
inc
lcall
and
jo
sub
and
ja
sub
xor
ljmp
jno
stos
jns
add
add
sbb
or
add
sub
mov
xor
nop
outsl
stos
lock
adc
inc
sub
es
std
sub
cmp
cmp
cmp
cmc
push
add
jmp
addr16
jo
cmp
stos
and
bound
and
jecxz
je
repz
jae
jg
xchg
jae
inc
push
push
je
repz
lods
mov
dec
mov
lret
dec
movl
jno
mov
shr
adc
lea
pmulhuw
sbb
xchg
and
lcall
rclb
incb
and
adc
push
loope
mov
pop
and
and
pop
cmp
in
pop
dec
imul
leave
lcall
movsl
add
jnp
inc
out
call
jecxz
aas
inc
divl
sbb
imull
shr
mov
iret
xor
pushf
iret
jmp
decl
in
pusha
pop
cmp
aam
mov
call
fldcw
movlps
mov
cmc
xor
ret
mov
add
jp
int3
mov
add
cs
xor
std
lock
sahf
aam
and
loopne
pop
out
pop
outsb
ret
push
mov
pop
mov
pop
and
popa
shl
stos
out
inc
jbe
lock
adc
mov
nop
xor
xchg
sub
mov
mov
subb
mov
cmp
fisubrs
and
mov
pop
jecxz
dec
mov
sti
dec
pop
dec
test
mov
sbb
sub
sahf
xchg
inc
jb
xor
xchg
lret
mov
pushf
sbb
pusha
lods
sub
leave
aas
mov
lahf
lea
loope
test
xor
gs
and
pop
push
adc
mov
test
pop
mov
stos
ja
neg
or
fisubrs
lock
dec
xor
and
xchg
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
inc
adc
call
add
dec
xchg
sub
xor
pop
push
dec
adc
xor
push
daa
andl
loopne
mov
das
rcrb
sub
and
jno
push
fcoml
cld
std
sbb
xor
sbb
pushf
movl
jno
xchg
into
cs
mov
push
outsb
and
popa
push
scas
push
and
xlat
push
or
mov
cmp
mov
stos
inc
pop
sahf
lock
mov
or
dec
sbbb
mov
mov
lock
lret
xchg
in
xor
daa
pop
dec
int3
ret
gs
jno
jae
loope
xchg
jns
mov
aam
mov
inc
fildl
les
scas
ljmp
fbstp
sub
lock
mov
jnp
lret
cmp
mov
cmp
inc
pop
mov
pop
mov
mov
ja
int3
xor
ret
mov
and
or
jmp
lds
pop
out
pop
push
aam
xchg
ss
inc
scas
and
mov
int3
mov
sbb
mov
dec
test
xor
lods
scas
insb
pop
xchg
adc
add
cli
nop
and
xor
add
and
shlb
loope
pop
idivl
out
or
xor
push
dec
add
out
arpl
sub
test
mov
sbb
test
xor
shll
push
cs
js
dec
sub
lea
or
jmp
jae
mov
iret
push
cs
push
inc
outsb
test
nop
jnp
scas
cmp
or
xchg
loop
sbb
dec
test
ljmp
scas
inc
sub
sub
jge
loop
mov
repnz
push
rcr
adc
or
or
repnz
test
iret
int3
xchg
ret
shll
aam
dec
dec
pop
xor
aaa
xor
icebp
add
aad
jo
movl
insl
fsubp
mov
in
lahf
jle
les
fisttpl
mov
lcall
fwait
inc
fists
addr16
mov
push
cmpsb
rorb
test
push
adc
fcmovne
cmpsb
fsubs
out
cmp
cld
stc
dec
loop
fld
push
adc
mov
sub
pushf
inc
daa
cmp
enter
and
cld
in
xchg
adc
push
out
es
aad
add
jg
push
jne
jl
imul
and
mov
mov
push
dec
fucomp
cmp
jnp
lahf
arpl
mov
pop
push
xor
cmp
pop
arpl
bound
notb
nop
sub
lods
adc
subl
insb
jb
shrl
mov
bnd
pop
jl
ret
sub
sub
leave
aaa
sbb
das
test
je
xor
lret
lock
lea
nop
mov
lds
out
adc
dec
mov
push
and
adc
out
mov
test
js
lret
adc
push
xor
jnp
cmp
rclb
testl
add
add
adc
jo
rorb
pop
cltd
movsb
xor
or
lahf
fldt
xchg
ds
dec
ss
loopne
ret
popf
jmp
test
pop
mov
outsb
push
inc
dec
daa
aas
or
cmp
out
mov
in
mov
pop
mov
sar
adc
cmp
ljmp
add
inc
xor
hlt
les
and
or
cmpsb
cmpsl
insb
and
mov
fcompl
sbb
ret
fcmovne
call
fsubs
add
sbb
sub
out
push
sbb
jmp
imul
out
xor
cmpsl
push
addl
mov
xchg
mov
jae
and
notb
inc
sub
call
adc
shlb
pop
mov
mov
fst
ret
adc
lret
mov
lcall
popa
ss
mulb
mov
mov
adc
scas
idiv
mov
gs
and
sbb
icebp
xor
mov
adc
push
sbb
sub
pop
inc
fistpll
loope
jb
lahf
mov
mov
ret
pop
sub
jg
ja
jnp
push
out
aad
mov
das
mov
es
shl
loopne
repz
xchg
jae
xor
mov
xchg
ds
pop
repz
jge
add
xor
popf
fisttpl
jmp
test
cmp
mov
cmp
cmp
popf
sbb
push
xchg
or
cmp
insb
mov
adc
fisttpll
fnsave
sub
gs
push
mov
aas
ss
rcrl
push
lret
push
inc
jne
adc
pop
push
xor
gs
sbb
mov
call
xchg
xor
outsb
mov
jb
and
outsl
shrb
insb
and
sbb
cmp
es
cli
js
mov
jo
push
test
pop
add
inc
push
pusha
ret
call
xor
idivb
xor
aaa
mov
or
enter
sbb
sub
adc
addr16
inc
stos
lahf
bswap
loop
roll
out
loopne
jnp
shlb
nop
scas
stos
adc
mov
jns
or
scas
out
movsb
pop
cmp
xchg
mov
movsb
sbb
inc
xadd
sub
push
mov
or
mov
loopne
shlb
cmc
out
jp
jnp
in
xchg
cmp
and
pop
sbb
adc
mov
mov
mov
cmp
arpl
cmp
popa
int
scas
cmc
test
pop
jo
adc
std
mov
sub
lods
icebp
jle
icebp
shlb
fs
xor
lahf
pop
out
inc
pop
pop
test
sub
repnz
sub
mov
test
lds
cmp
lock
ror
je
push
xor
mov
adc
and
jp
or
inc
pop
adc
mov
jne
addr16
aam
or
aaa
ljmp
push
adc
mov
mov
or
xor
sahf
xor
dec
xor
cmp
sbb
lahf
das
add
outsl
pop
shll
call
xor
push
imulb
mov
in
jg
jne
jo
scas
ss
in
imul
mov
xor
iret
popf
rolb
mov
je
loope
mov
stos
shrl
test
mov
sbb
sbb
dec
lret
insb
and
push
dec
mov
pop
popa
sub
shll
jae
lcall
out
and
aam
ljmp
jne
scas
mov
mov
nop
sbb
jp
inc
add
adc
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
into
lea
subb
ja
fstpt
pop
pop
mov
xchg
xor
jb
sub
mov
cs
cmpsb
sub
dec
push
sbb
pop
cmpl
xorb
std
cmp
movsb
fidivs
movsb
dec
xchg
imul
xor
dec
mov
pop
idivb
xchg
cmp
cmp
enter
nop
stc
clc
mov
cmp
movsl
cli
lcall
ret
xor
das
popf
fcmovnbe
cmp
out
in
nop
pop
pop
arpl
push
addl
imul
cltd
and
mov
outsb
loopw
dec
out
and
sub
pop
xlat
repnz
jnp
daa
test
int
imul
gs
loope
and
adc
adcl
and
leave
jmp
pop
out
mov
pop
dec
sub
and
test
adc
cmp
push
cmp
mov
mov
rorb
sub
jle
sbb
mov
inc
setae
mov
shl
popf
repz
mov
hlt
sar
adc
cltd
dec
inc
pushf
dec
and
push
test
mov
inc
iret
cmc
div
jns
es
data16
pop
and
push
jle
jmp
mov
andb
ret
jg
push
fisubl
aaa
cmc
dec
inc
ret
mov
jno
shll
jno
aam
std
repz
jo
fiaddl
mov
flds
insb
push
add
icebp
lcall
push
daa
jae
ljmp
cmp
xchg
cmpsb
inc
xlat
fwait
mov
jno
fcoml
ret
jmp
pop
ljmp
in
jle
lret
inc
cmp
jbe
cld
imull
and
inc
fs
add
push
or
lret
sbb
dec
jnp
cmp
movsb
push
int
insl
lahf
or
insl
cld
les
adc
ss
jl
sbb
mov
ret
xor
sub
mov
bound
dec
out
and
addr16
xchg
les
add
popa
jp
jno
lret
loopne
sub
cmp
push
pusha
pushf
pop
mov
shlb
jp
or
aam
stc
mov
jne
add
out
cmp
adc
lds
and
scas
mov
pop
jecxz
sbb
push
aam
inc
jns
push
ljmp
femms
push
sub
sub
mov
pushf
lret
cwtl
push
stos
mov
add
cmpsb
mov
push
leave
and
push
push
xchg
push
xchg
lock
mov
adc
jb
ret
addr16
inc
jl
inc
push
dec
repnz
das
dec
sbb
ljmp
pop
xchg
sahf
ds
stc
je
dec
or
pop
clc
cs
cmp
add
sbb
add
and
push
or
pop
or
xchg
in
jp
push
cltd
fimull
loop
inc
leave
jbe
jp
test
mov
out
cld
mov
jl
inc
mov
lret
lds
enter
push
fldt
loopne
imulb
imul
lods
xlat
jp
insl
mov
add
insl
dec
lahf
xchg
mov
je
es
mov
adc
imul
enter
xlat
and
cmp
xchg
jbe
iret
jo
dec
mov
jns
pushf
stos
pop
add
pop
and
out
test
lcall
mov
pop
jecxz
mov
inc
push
pop
ss
popa
cmp
cmp
std
daa
lock
test
jmp
fucom
pop
mov
xchg
mov
fdivs
mov
cmp
inc
insb
pop
hlt
scas
add
clc
push
sub
int3
cmpsb
inc
int3
out
cli
ds
or
int3
sbb
sbb
xor
xchg
repz
push
jns
jle
mov
mov
jg
repz
imulb
or
dec
inc
in
jecxz
adc
xchg
nop
xchg
add
mov
mov
incb
xor
xchg
jecxz
and
scas
js
adc
push
nop
into
dec
jbe
inc
pop
sahf
xor
xchg
xor
jl
jb
stos
lret
lods
mov
outsl
aaa
and
lcall
or
mov
lret
xor
jae
insb
sub
popa
and
ficoml
pop
das
aaa
cmp
orl
cltd
lods
arpl
adc
lds
test
mov
lret
push
pop
stos
test
and
fwait
out
adc
andl
jecxz
dec
push
or
out
aas
sub
sub
lods
mov
mov
add
jne
je
mov
lods
adc
lahf
enter
adc
cmp
sbb
sbb
idivl
imull
fwait
xor
adc
jl
inc
xchg
push
xchg
jle
or
loope
ljmp
mov
test
je
fcomps
jmp
jns
cwtl
cmp
adc
sahf
repnz
cmovb
fistpll
jle
out
call
pop
inc
jno
xor
jg
out
jmp
sahf
pop
cmp
push
fsubrs
jno
xchg
add
jmp
hlt
lds
lods
out
add
arpl
xor
test
mov
pushf
lret
sbb
pop
mov
iret
and
jnp
nop
popa
sbb
push
jecxz
adc
gs
stos
rorl
in
sub
clc
add
push
pop
pusha
jecxz
mov
je
mov
push
dec
or
loope
mov
jb
movsl
pop
add
adc
sub
lods
imul
imul
sbb
inc
fcmovne
pop
inc
lret
xor
xchg
clc
nop
push
outsl
sub
push
mov
push
out
dec
cmp
push
outsl
jge
inc
cmp
loop
inc
inc
insl
rclb
or
stos
outsb
pop
loope
sub
add
xor
adc
cmpsb
rcl
xchg
mov
aaa
aam
xchg
fcomps
dec
divb
mov
fwait
lods
xchg
mov
sti
pop
mov
leave
int3
nop
jae
fdivrs
inc
test
cmp
pop
xor
jg
cld
pop
ljmp
scas
insl
in
aad
out
pop
mov
call
jbe
inc
out
xchg
scas
clc
clc
mov
iret
cli
xlat
mov
ror
lods
xor
ss
adc
cmp
cmp
add
push
push
push
sbb
mov
mov
outsb
xchg
sbb
cmp
jmp
mov
loop
shll
jge
mov
mov
sub
divl
insb
xor
pop
aam
mov
jge
lret
bound
out
rolb
lds
pop
imul
cltd
mov
push
hlt
shrl
inc
pop
adc
pop
aam
and
inc
push
jecxz
sub
cs
movsl
push
xor
mov
sub
xchg
cmp
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
cmpsl
and
ja
iret
rcrl
repz
stos
in
js
das
nop
in
or
push
xchg
outsl
jns
xor
les
pop
hlt
mov
test
or
outsl
cmpsl
push
ret
jge
cmpb
push
ret
mov
cmc
idiv
sub
int3
cmp
sbb
in
jmp
push
push
jno
add
mov
adc
xor
lcall
loop
jle
xchg
mov
and
repz
lret
loop
sub
imul
pop
popa
sti
sarl
repnz
push
ljmp
je
push
adc
mov
push
jnp
mov
aam
cltd
icebp
and
adc
orb
fiadds
adc
xor
inc
addr16
push
rcr
clc
cmp
or
ficompl
jno
push
sub
repnz
in
shrb
adc
lret
cmpsb
xchg
scas
divb
adc
sub
mov
out
fld1
std
imul
ja
cmpsb
test
repz
and
lods
xchg
filds
call
cld
test
aad
push
xor
pop
jmp
mov
xlat
jecxz
push
push
stos
adcl
dec
xchg
inc
push
insl
int
and
push
fisubrl
in
out
fnstcw
mov
mov
in
mov
adc
cmp
mov
jno
push
dec
jp
or
or
int3
jae,pt
into
pop
cli
int
pop
adc
mov
xor
jp
and
shll
stos
dec
cwtl
dec
cmp
mov
mov
mov
mov
pop
push
pop
or
repnz
or
xchg
test
xchg
call
or
inc
xor
cmp
or
aas
and
mov
stos
fcompl
orl
and
sbb
xor
dec
push
pop
fwait
inc
or
jnp
stc
out
or
inc
mov
loop
pop
in
add
xchg
inc
sbb
xchg
cmpsb
adc
mov
or
and
enter
pop
inc
sub
mov
lret
add
pop
movsb
mov
loopne
shll
jl
and
mov
sub
adc
xchg
shr
rcll
shr
push
pusha
xor
scas
xchg
aas
insb
fsubl
xchg
lods
mov
lock
xor
sub
addl
ret
and
push
sub
or
adc
jle
ret
jp
popf
push
fldcw
adc
ret
fsubs
clc
rcrb
push
dec
lods
push
mov
jb
push
xor
mov
pop
push
lcall
aas
gs
test
add
cmc
xor
outsl
cmp
pop
out
sahf
int
dec
push
leave
jo
cs
cmp
fdivr
xor
out
mov
sbb
cmp
out
pusha
cmpsl
pushf
loop
outsl
xchg
xor
cmp
fimuls
cs
loop
movsb
pop
jp
repz
ljmp
fstl
mov
into
cs
pop
loop
or
dec
in
pop
mov
unpckhps
iret
dec
cltd
cmc
pop
dec
bound
or
iret
sarl
jbe
cmc
sbb
mov
mov
xor
pop
fidivl
jbe
fimuls
js
arpl
les
stos
dec
movb
push
or
popa
sub
pop
push
aad
xor
js
dec
push
push
dec
sti
mov
clc
push
mov
jo
insb
mov
mov
jns
and
je
mov
hlt
xor
insl
loope
pop
mov
adc
adc
inc
movsl
shl
sub
jno
sub
mov
sbb
jp
ljmp
pusha
aam
pop
sbb
and
push
ljmp
ljmp
imul
imul
sbb
aam
loopne
fcompl
xchg
mov
lods
and
jecxz
cld
daa
lea
mov
leave
fwait
repnz
mov
cmc
push
jmp
cmp
jp
in
and
loopne
gs
orl
aad
cli
xlat
cmp
lcall
push
jecxz
cmp
cld
ja
xor
mov
pushf
shlb
mov
data16
jne
es
mov
mov
mull
das
mov
hlt
lcall
sub
jb
imul
add
divl
rcrb
out
pop
pop
shlb
xchg
mov
inc
pop
sbb
or
pop
fcmove
sub
dec
cs
call
clc
stos
pop
pop
sbb
mov
ret
inc
rorl
testl
insl
jp
mov
addl
and
shlb
mov
jno
jnp
jns
push
rcr
jne
jo
js
push
bound
leave
pop
xor
xchg
cmpsb
iret
jne
jg
into
jne
fidivrl
pop
stos
mov
sub
mov
xor
mov
out
xor
cmp
xor
mov
ret
lods
fdivrs
fcoms
adc
ss
fldenv
pop
pop
pop
shll
fiadds
jmp
test
xor
push
cmpsl
sbb
xchg
pop
cwtl
int
mov
inc
inc
pop
push
jns
mov
jle
adc
xor
push
sbb
push
cmpl
inc
pop
in
mov
jmp
pop
push
mov
shll
ss
hlt
mov
jle
decb
aad
fldl
stos
or
fstpt
divb
stos
loope
les
and
fisubl
pop
xor
xor
iret
mov
and
mov
xchg
sbb
adc
movsl
pop
dec
inc
jne
call
insb
sbb
pop
outsb
sti
enter
jb
sub
jo
lret
adc
pand
nop
ret
adc
pop
cmp
xchg
stos
push
mov
andl
xchg
test
dec
inc
jae
adc
inc
xlat
pop
push
and
insl
ljmp
mov
arpl
or
push
dec
insl
pop
dec
cmp
and
mov
adc
sarb
xadd
or
xor
mov
or
adc
fs
mov
jo
fsubs
fdivr
jl
jmp
and
cwtl
jns
rorl
xor
fdivrp
pop
push
adc
aaa
sbb
adc
hlt
xchg
lret
sbb
cli
test
push
sub
icebp
or
shrl
xadd
cmp
addr16
xor
sbb
jbe
cmc
jnp
dec
out
mov
sub
lret
xlat
inc
pop
test
cwtl
cld
into
pusha
aas
sbb
pop
sahf
out
or
sti
loopne
sahf
inc
stos
pop
sbb
push
cmp
loop
mov
push
sbb
ss
cli
repnz
or
push
ljmp
das
add
in
cmp
mov
dec
adc
push
test
test
mov
jecxz
lret
jno
into
stc
out
inc
imul
and
pop
jge
mov
jecxz
imul
cld
test
rorb
push
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
js
push
ja
sbb
or
dec
xchg
jle
dec
dec
call
cmp
cmp
jne
inc
nop
mov
sub
push
call
mov
push
test
mov
inc
jecxz
movsb
jmp
mov
adc
inc
mov
incl
xor
pop
repnz
movsl
fcompl
xor
or
mov
xchg
lcall
orb
ror
xor
mov
in
stos
push
rclb
dec
and
rcl
cmpsl
cmp
xchg
icebp
adc
scas
test
sbb
mov
jmp
int
das
fsubp
gs
dec
jg
scas
mov
leave
pop
xchg
mov
push
inc
dec
xchg
jle
mov
out
xchg
xchg
jnp
fs
or
mov
dec
adc
sub
nop
cmp
jns
push
sub
stos
das
scas
xchg
mov
in
or
cmp
push
sbbb
lret
jecxz
imul
dec
inc
inc
popf
mov
gs
jg
fidivl
outsl
sti
and
fildl
add
xchg
shll
inc
in
stc
add
call
pop
xchg
or
into
jle
mov
clc
mov
adc
and
cmc
test
xchg
adc
dec
sbb
jnp
cs
sub
shl
mov
fnstcw
sbb
aad
xor
ficompl
and
jae
cmp
push
adc
ss
sbbb
inc
jno
inc
imul
xor
outsb
mov
test
aas
test
scas
xchg
ja
stos
dec
jb
ficompl
mov
or
add
mov
jmp
cwtl
js
jle
adc
fadds
jne
mov
lret
fmull
adc
je
lret
icebp
jl
in
cltd
int
scas
and
jae
push
pop
lahf
fnstsw
or
and
std
xchg
fwait
dec
addl
cmp
cltd
test
pop
add
imul
pop
push
scas
push
lods
add
cmp
jne
mov
bound
outsb
out
rcl
shr
call
push
xlat
push
fidivl
or
sti
push
push
popf
or
sub
imul
ret
dec
dec
sbb
insb
stos
in
mov
dec
aas
stos
outsl
mov
sbb
jbe
div
nop
cmc
dec
stc
daa
out
lods
mov
sbb
mov
dec
pop
inc
xor
notl
dec
in
movsb
outsb
lea
push
push
and
daa
jmp
mov
lahf
sub
fcmovb
vunpcklps
jmp
lcall
lret
negw
xchg
fnstsw
gs
jnp
inc
hlt
mov
arpl
add
arpl
je
jecxz
push
jb
test
mov
mull
pop
mov
std
sbb
loop
adc
clc
inc
dec
stos
jae
mov
jne
stos
dec
stos
lret
cltd
push
faddl
orb
inc
popf
sbb
inc
xor
imul
mov
jl
test
mov
mov
fildl
cmc
mov
dec
shlb
fwait
xchg
jmp
stos
cmp
adc
int3
addl
stos
out
mov
rolb
stc
jae
or
fidivs
insb
add
out
scas
addr16
fdivrs
jmp
jo
rorl
push
daa
mov
mov
inc
adc
xor
jb
jmp
loopne
loop
xchg
or
add
lods
aas
cltd
pop
leave
pop
ja
fisubrl
dec
ret
sub
stc
xchg
movsb
int
cs
cmp
fidivrs
mov
push
dec
pop
push
sbb
call
or
add
and
popf
repnz
fs
popf
cmpsl
sub
push
das
and
add
inc
cmp
push
out
outsl
fistl
lahf
push
jns
and
or
mov
aas
je
out
mov
notb
ret
mov
dec
stos
je
out
nopl
xchg
imul
scas
daa
aas
dec
cmp
sbb
jg
jmp
shrl
into
fucomp
push
xchg
adc
cwtl
not
mov
daa
fwait
add
into
les
or
and
sbb
in
ds
and
or
lock
in
sahf
xor
xchg
out
repz
pop
pop
ds
fbld
aas
imul
inc
or
or
mov
inc
xchg
mov
scas
pop
loop
ret
lods
mov
shrl
sub
xchg
jge
subb
in
in
adc
and
imul
sbb
sbb
jle
mov
lock
push
enter
push
lea
xchg
and
pop
fsubrl
fstl
in
rcrb
pop
loopne
pushf
in
imul
cmp
in
add
in
dec
test
das
push
jno
cmp
or
data16
push
dec
repz
enter
dec
sbb
mov
dec
sub
mov
pop
sub
add
std
aas
rclb
arpl
mov
push
aaa
fdivs
cmpsl
cmp
mul
mov
cmp
cmp
leave
mov
scas
adc
divb
rcrb
push
mov
nop
dec
inc
xor
fs
adc
es
add
and
pop
lret
dec
mov
addr16
push
xor
nop
inc
dec
fcoml
lea
movsb
sub
xchg
or
ss
dec
sarl
dec
mov
inc
sti
or
orb
in
cmp
out
fsts
xchg
xchg
xchg
mov
test
stos
xchg
int3
ljmp
fs
out
ljmp
clc
and
mov
iret
leave
pop
fmulp
push
sti
xchg
stos
adc
sbb
outsl
in
ret
sbb
cmc
cmpsb
andb
scas
dec
jg
dec
or
xchg
outsb
outsl
daa
or
outsb
cmp
pop
push
push
pop
cltd
ja
bswap
pop
jle
cmpsb
rorl
popl
jg
cmp
mov
cmpsl
lock
aaa
aam
insl
mov
xor
mov
pop
in
pop
je
cmp
lods
push
inc
xor
inc
push
inc
pop
mov
nop
jbe
push
popa
lock
adc
insb
scas
cmc
sahf
xor
or
shlb
adc
test
pop
push
adc
jno
rcrl
add
xchg
jno
pop
mov
repz
xor
push
mov
movsb
dec
and
movsb
fistl
shlb
rcll
push
test
xor
mov
or
aam
sub
xor
repnz
popf
sbb
ljmp
inc
mov
push
lret
in
add
mov
dec
ss
cwtl
pop
js
je
cltd
pop
pop
add
mov
into
sarl
into
mov
xchg
das
gs
in
aam
cmp
jmp
sub
jns
arpl
adc
pop
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
mov
decb
ja
lahf
divl
mov
pop
jg
and
xchg
mov
fwait
sti
sub
xchg
scas
lea
lods
jne
adc
ds
movsb
add
ss
cmp
push
pop
pop
scas
xchg
loopne
ja
push
fsubrs
sub
andl
cld
inc
insl
jmp
cli
and
xor
das
das
dec
movsl
leave
js
push
xor
notb
mov
sub
dec
paddsb
jnp
add
mov
in
iret
test
mov
popa
pop
inc
pop
xchg
xor
dec
out
dec
xor
cmp
push
dec
inc
negb
lds
fimull
or
xchg
out
fidivrl
xor
lock
out
jp
or
test
mov
les
ret
jle
outsl
hlt
and
leave
call
add
xor
pop
xchg
das
xchg
adc
adc
scas
push
fnstenv
xor
mov
sub
lock
adc
lret
mulb
inc
mov
inc
popa
loope
xor
movsl
ror
mov
adc
add
pusha
xchg
lret
test
cltd
mov
int
outsb
inc
jl
insl
fs
xor
jb
movsl
ret
lds
imul
xchg
pushl
jecxz
add
mov
sti
hlt
mov
push
and
mov
stos
daa
pop
loopne
jl
add
add
jmp
dec
mulb
flds
jg
test
mov
sbb
push
pop
inc
fisubl
popa
inc
lcall
lahf
adc
rorb
mov
cmp
popf
imul
jnp
mov
mov
jb
orb
mov
out
lods
xchg
mov
ret
cltd
sti
cmpsb
lods
and
sbb
dec
mov
mov
pop
cltd
mov
xor
mov
in
sub
jnp
aad
mov
popf
frstors
lret
fs
xchg
jns
test
mov
jbe
cmpsb
cmp
jge
call
cmp
orb
adc
test
push
and
adc
sbb
dec
icebp
sbb
jae
aad
lds
out
inc
pop
aam
outsl
loop
inc
xchg
sbb
stos
adc
aas
aam
insb
xchg
pop
xchg
sbb
jmp
jae
subl
push
cmpsb
addr16
test
out
xchg
and
scas
mov
sbbl
dec
mov
xor
add
jmp
or
mov
mov
mov
lahf
xchg
dec
in
xor
out
pop
inc
dec
push
mov
in
aam
and
in
mov
cmp
cld
xor
adc
jg
cmp
mov
mov
sub
imul
xchg
xchg
pusha
jbe
push
aas
in
dec
mov
sub
sbb
adc
mov
ss
add
lret
lods
xor
je
mov
pop
cld
sbb
xor
inc
adc
icebp
out
dec
or
cmp
mov
lcall
sahf
mov
popa
cld
sbb
out
scas
lds
mov
push
push
add
cld
push
sub
push
es
cmp
mov
lock
incl
jle
scas
stos
cltd
addl
and
sarl
xor
inc
dec
pop
adc
and
and
movsl
dec
and
and
je
test
jns
inc
imull
out
sbb
ret
clc
sbb
pop
stc
cmpsb
hlt
sahf
lahf
dec
stos
pop
scas
lods
mov
lea
fidivrl
jne
mov
cmp
cwtl
mov
pop
loopne
or
adc
push
pop
adc
orb
pop
adc
test
scas
inc
gs
push
jne
aas
dec
push
xor
sbb
fnsave
in
int3
repnz
icebp
dec
andb
or
gs
jo
loope
test
mov
push
js
and
adcb
out
jle
xor
jp
fmull
loop
dec
stos
mov
and
dec
xchg
xchg
mov
or
and
outsb
popf
pop
jno
in
test
lahf
test
mov
xchg
cmpl
es
push
mov
in
push
mov
inc
push
mov
xor
adc
xchg
test
cwtl
addr16
sub
cmpsb
out
rcrb
push
mov
ds
js
add
mov
in
je
test
push
outsb
lahf
mov
jl
push
cli
jae
mov
pop
sahf
fs
popf
xor
cltd
adc
mov
dec
push
rcr
fwait
sbb
movb
pop
sbb
sbb
or
push
out
or
nop
subl
ret
into
gs
lock
push
mov
inc
pop
jge
sbb
mov
pop
xchg
loope
push
fdivs
sbbl
ds
iret
out
icebp
rclb
stc
xor
imul
aad
mov
pushf
inc
out
and
jae
inc
cmc
add
push
push
mov
mov
stc
mov
mov
cltd
sub
lods
repz
push
jge
mov
xor
cmp
jo
xchg
pop
pop
pop
add
dec
ja
mov
cmpsl
rorb
sbb
out
push
ror
mov
jmp
jmp
stos
mov
jg
sbb
daa
repnz
xor
popf
xor
daa
icebp
inc
sbbb
lods
xor
in
cltd
test
inc
pushf
dec
addr16
test
cmp
cmpsl
mov
das
aam
sbb
data16
std
jg,pt
imull
xor
xchg
xor
and
lds
and
in
ds
arpl
jns
inc
in
cld
test
imul
fs
push
jae
lods
clc
test
mov
xor
ss
push
cmp
arpl
ja
and
xchg
sbb
decl
inc
inc
cli
mov
test
int3
leave
cmp
xor
mov
push
push
les
int3
jle
cwtl
aam
call
sub
push
add
dec
pop
adc
out
int3
leave
pushf
lds
dec
pop
movsl
fs
repz
pop
out
or
or
aaa
lcall
stos
inc
int3
aad
in
pop
adc
test
dec
clc
repz
in
loop
pop
inc
and
xchg
jno
mov
mov
inc
cmp
add
and
movsl
or
in
leave
and
mov
mov
xchg
cmp
xchg
popf
arpl
xor
leave
push
xchg
stos
xor
cwtl
shll
mov
dec
leave
aas
add
cwtl
jno
repz
cmpsl
cmp
loopne
stos
cmp
mov
lea
in
adc
rol
push
fmuls
jbe
outsl
cld
push
sbb
cmpsl
lods
xchg
cwtl
pop
or
mov
inc
and
mov
jns
push
mov
xchg
rcr
pop
adc
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
push
mov
add
xchg
pop
inc
out
lcall
and
sbb
out
sbb
rolb
cltd
js
lahf
mov
push
out
enter
sub
cltd
or
jp
insl
push
jmp
mov
mov
xor
ja
sysret
pop
rcr
inc
mov
out
xor
pop
push
mov
sub
jecxz
and
xor
mov
pop
push
inc
xchg
jbe
xchg
movsl
jae
adc
scas
xor
adc
je
push
call
aas
mov
pop
rclb
mov
fimuls
ret
lods
je
les
pop
stos
ds
das
scas
movsb
push
jb
mov
bound
pop
shlb
filds
inc
xlat
jle
movsl
xchg
imul
pop
jle
lcall
jne
arpl
mov
adc
mov
push
dec
ja
ja
stc
inc
aad
xchg
aaa
push
push
pop
fsubrp
and
pop
ret
jge
xchg
cmc
dec
stos
ss
out
xchg
jp
pop
aaa
jl
cmp
sbb
imul
push
pop
pop
dec
repz
push
pop
iret
push
and
ja
fcmove
jbe
popf
mov
dec
ror
mov
push
pop
inc
mov
addb
sub
inc
lret
and
int
xchg
sbb
rorl
cltd
testb
xor
in
outsb
mov
fiaddl
and
cmp
out
shrb
std
aam
push
dec
outsl
int3
or
and
ds
je
push
sub
aas
xchg
dec
fwait
icebp
into
int3
jge
int3
mov
jge
test
jae
ds
rolb
loope
jl
ficompl
or
pop
jns
aad
hlt
push
mov
dec
les
fisttpl
popa
add
sahf
cmp
inc
in
mov
mov
stc
xchg
pop
out
movsb
xchg
lods
insb
clc
loopne
int3
out
popa
dec
ds
cs
sub
cmp
clc
insl
mov
scas
lcall
sbb
lods
inc
stc
adc
frstor
cwtl
and
jecxz
ljmp
inc
pop
pop
xchg
movsl
lock
and
sbb
sub
lock
divb
or
ret
xchg
lcall
fidivs
pop
lcall
or
adc
andb
xor
inc
pop
jnp
lock
and
das
mov
leave
jmp
test
inc
mov
das
xchg
fmuls
xchg
test
jne
popa
xlat
xor
mov
mov
shlb
shrb
lret
or
jle
push
ja
scas
rclb
and
mov
cwtl
scas
push
xchg
mov
es
aam
mov
xor
lds
xchg
ss
fisubrs
movsb
rorl
popa
in
lea
mov
push
mov
sarl
outsb
jo
aad
and
push
fnsave
jns
mov
mov
mov
add
or
xor
into
pop
adc
sbb
adc
push
pop
fwait
fwait
repnz
mov
inc
inc
mov
es
push
mov
mov
or
repnz
push
xchg
jmp
add
jg
inc
cmp
inc
push
inc
addb
sti
add
cmpsl
out
and
ja
push
sub
cli
sub
aas
ret
or
pop
leave
ffree
loop
popf
cmp
scas
cmpb
stos
lret
inc
sub
mov
aad
jne
xchg
arpl
pop
jl
jb
xor
jnp
fnstenv
lahf
clc
push
ror
mov
mov
cmp
cmp
mov
push
pop
or
mulb
stos
sbb
jl
decb
jne
and
shll
je
adc
fldenv
cmpsb
daa
lock
jge
mov
aaa
cwtl
sbb
push
push
bound
stos
pop
jecxz
xor
ret
sbb
sub
dec
cmp
sarb
ds
cmc
pusha
jmp
jno
pushf
jge
jae
movsb
loopne
aas
in
shl
and
iret
cmpb
mov
xchg
pushf
jmp
or
into
outsl
popa
adcl
popa
es
test
inc
jnp
shrl
outsb
addr16
push
xchg
lock
or
mov
pop
lods
jl
pop
inc
cld
cmp
mov
cwtl
xor
pop
mov
jb
aaa
xor
fs
mov
loope
xor
adcl
cs
and
xlat
imul
enter
lahf
dec
adc
ja
ret
insl
data16
shrb
aas
insb
jno
add
mov
pop
leave
add
cmp
xchg
lea
out
rol
stos
cli
popf
js
loope
cmpsb
fadd
insb
cmp
push
jbe
jne
mov
out
popa
sbb
imul
xchg
rcll
andl
popa
int3
mov
fnstsw
push
aam
add
dec
and
out
jp
push
fcompl
inc
fisttpl
adc
and
dec
sbb
pushf
push
and
push
sub
pusha
jl
pop
mov
xchg
or
push
cmp
push
pop
cmp
int3
lcall
jp
dec
inc
mov
push
mov
cld
rclb
popf
dec
add
xchg
jbe
pop
or
mov
cld
fists
adc
shlb
fcomps
adc
xchg
inc
cmp
lds
fcmovne
inc
js
xchg
dec
fidivrl
stos
andl
pop
lcall
imul
pop
inc
in
imul
loop
mov
sub
je
mov
jns
cmc
add
lods
cmp
lret
push
bound
xchg
cmpsl
movsb
in
dec
pushf
fincstp
mov
xor
mov
and
cmovno
adc
adc
data16
addr16
stos
adcb
in
cmpsb
or
cmpsb
in
jl
dec
xchg
inc
xor
and
and
mov
pop
roll
stos
cmp
mov
fbstp
mov
clc
fnstcw
mov
enter
fdiv
push
push
shl
mov
jno
cmp
sbb
cltd
cmpsb
mov
pop
fcomip
fsubs
in
push
decb
cmp
push
in
stos
mov
sbb
js
imul
aas
aam
in
cmp
mov
stc
xchg
test
std
insb
out
rorb
call
jp
daa
outsb
leave
dec
dec
or
and
xchg
in
out
mov
cmp
xchg
cmp
bound
lds
inc
cmp
pop
leave
push
and
mov
mov
cli
dec
mov
cli
repz
stos
insb
mov
jle
push
xchg
cld
mov
jae
movlhps
iret
fwait
imull
stos
sti
pop
nop
adc
mov
mov
push
sub
xchg
cmpl
sarl
scas
add
pop
mov
sbb
lcall
mov
pop
stos
fldenv
mov
dec
lods
cs
das
mov
dec
movsl
mov
inc
hlt
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
cli
xchg
mov
push
push
and
sbb
scas
lcall
or
icebp
push
xor
pop
xchg
mov
cmpsl
test
and
pop
or
mulb
cmpsb
and
dec
jmp
lret
mov
shl
add
ds
shrl
ret
push
jno
testb
or
xchg
xchg
inc
xor
mov
movsb
arpl
sub
shll
mov
xor
pop
data16
out
add
push
push
mov
mov
and
loopne
push
sub
scas
adc
mov
arpl
cli
cltd
insl
jle
and
xor
push
icebp
push
xor
inc
insb
push
loop
fsubs
das
add
jle
cmpsb
cmc
mov
inc
add
inc
addb
xchg
jae
das
aad
ljmp
clc
into
test
loop
bound
int
add
cmpsb
outsb
movsl
xor
fnstsw
in
xchg
lahf
aam
push
ror
push
imul
pop
or
jbe
cmc
test
mov
dec
shrb
int3
fistpl
adc
jne
xchg
sub
xchg
xor
nop
in
cwtl
je
vpslld
sbb
pop
xchg
insl
push
rorb
lds
jnp
and
punpckhbw
inc
loopne
push
lret
shlb
mov
cmpsl
mov
xchg
fwait
add
dec
mov
mov
shlb
pop
lock
inc
xchg
xor
roll
mov
lret
out
xor
inc
cmp
mov
mov
mov
push
xchg
out
jb
inc
aam
aaa
clc
aam
adc
cmpsl
repz
cmpxchg8b
iret
shrl
pushl
insl
stc
jnp
mov
sti
mov
sub
pop
push
cmc
push
jbe
sbb
out
movsl
add
sub
out
sub
sbb
push
sbb
lock
lret
adc
and
in
sbb
jge
or
sub
push
mov
add
dec
and
in
fistps
rorb
adc
pop
jbe
lahf
lret
inc
lea
push
adc
cmp
push
add
add
movsl
jmp
xor
or
outsl
bound
pop
pop
sbb
in
mov
dec
xchg
aad
ficoml
fmuls
mov
jg
icebp
xor
sbb
sbb
mov
ret
enter
fistpll
call
inc
mov
jge
popa
xchg
mov
nop
sahf
outsb
shl
xor
mov
movsl
subb
movsl
jg
addr16
xchg
aas
xchg
xor
repz
aam
movsl
test
outsl
jae
fwait
shll
sti
ror
outsb
je
push
das
push
arpl
cmp
fsubrs
lret
mov
movsl
jge
flds
nop
add
lods
cmpsb
jl
lock
dec
push
int
test
sub
push
addr16
push
add
mov
ja
into
xor
and
pop
hlt
adc
scas
add
and
std
or
mov
das
sbb
ljmp
sub
or
mov
ret
pop
testb
loope
mov
sti
mov
outsb
inc
pop
mov
jne
and
mov
fldl
adc
xlat
dec
and
mov
xchg
test
mov
insl
bound
je
and
and
jle
iret
pusha
insb
adc
mov
or
sbb
out
shl
cltd
add
cmp
xlat
inc
jl
ds
pslld
cli
mov
int3
popa
jmp
lahf
jae
jl
iret
out
lods
insb
incb
jl
nop
ret
add
inc
and
xor
int
or
lret
or
push
push
lods
lret
jnp
adc
or
inc
fs
add
sbb
inc
popf
fbld
push
int
pop
jbe
insl
scas
mov
divl
and
aaa
push
aam
sub
cmp
inc
xorb
mov
sub
cs
ljmp
push
inc
xchg
or
cld
stos
int3
mov
inc
adc
dec
mov
call
or
jecxz
out
popa
pop
inc
movsb
mov
sahf
push
imul
jecxz
jbe
hlt
test
and
cmp
add
stc
xchg
xorl
push
addr16
js
jg
repz
xchg
aam
movsb
pop
mov
std
dec
sub
mov
imul
and
in
pop
mov
jo
jb
cmp
leave
cmp
je
cmp
sarl
ror
or
jnp
push
xor
sub
push
test
add
scas
lret
add
cmc
popa
sub
inc
xchg
or
dec
xchg
add
pop
sahf
dec
aam
clc
shl
andl
into
pop
in
mov
sub
or
pushf
mov
add
sbbb
movl
arpl
arpl
mov
into
xchg
arpl
pop
adc
pop
scas
mov
lahf
dec
xchg
mov
test
mov
dec
jno
dec
ficompl
pop
mov
xor
cmc
xchg
int3
push
aad
hlt
loope
aad
mov
sub
hlt
pop
shlb
fnstsw
aaa
lahf
and
mov
fnstsw
push
adc
or
pop
inc
push
orb
sti
add
jl
in
outsb
and
push
rcr
push
or
fs
mov
mov
daa
inc
bound
push
mov
in
or
add
ja
jb
cmp
js
aaa
mov
cld
push
stos
jecxz
std
mov
xor
pop
ds
push
pop
ss
daa
clc
jbe
rcrb
int3
add
fdiv
xchg
cmp
inc
pop
add
inc
inc
daa
xor
xchg
or
sti
mov
push
dec
adc
pop
es
mov
punpcklwd
stos
inc
mov
adc
ljmp
leave
mov
lds
cld
shrd
mov
jg
lret
cmpsb
push
pop
scas
xor
outsl
mov
dec
fisubrs
pop
arpl
mov
sub
std
dec
test
cmp
sbb
loopne
fldl
mov
lea
inc
pop
add
out
push
push
and
inc
or
insl
jns
push
dec
arpl
cmc
mov
xor
shlb
dec
and
lret
mov
mov
ds
insb
pusha
xor
mov
jecxz
mov
lret
add
lret
sbbl
pushf
scas
and
idivb
sbb
mov
leave
adc
pop
nop
aas
push
cmpsb
mov
loopne
ljmp
mov
push
sti
xor
xchg
mov
and
cmp
outsl
enter
xor
sub
pop
scas
add
rorb
enter
pop
add
add
dec
push
adc
call
ficomps
scas
lret
pfadd
aam
inc
cld
aad
clc
dec
int
xor
xchg
dec
bound
lret
aaa
jl
jg
mov
dec
push
xor
or
adc
bound
cwtl
insb
sbb
xchg
lods
out
xor
and
sbb
pop
test
mov
shlb
test
push
jecxz
push
leave
push
sbb
das
je
leave
ds
adc
or
pop
rol
push
call
rorb
mov
mov
mov
xchg
jmp
inc
mov
ss
je
or
jp
cld
fwait
outsl
xor
xor
sub
and
jg
popa
test
mov
mov
xor
pusha
out
xchg
imul
mov
dec
jp
pop
jo
xchg
test
xchg
add
test
xchg
mov
and
loopne
mov
loope
aam
push
popf
sbb
stc
lret
mov
mov
insb
push
and
ret
sub
sbb
pop
dec
adc
mov
iret
mov
out
shlw
ja
adc
lahf
mov
jo
inc
jno
scas
pop
or
jb
dec
pop
ficompl
pop
fnstsw
mov
pop
filds
lret
jb
mov
sub
shll
dec
das
repnz
movsb
sub
sbb
bound
xchg
push
push
test
xchg
out
rcrl
stos
mov
out
int
adc
repz
inc
xor
addr16
popf
lea
arpl
lods
pop
cmpsl
testb
or
mov
cmp
aas
lret
jno
int
push
cld
lds
fcmove
push
icebp
inc
cs
sbb
xchg
push
mov
add
and
lcall
or
push
jge
pop
ja
icebp
inc
subl
xor
pop
cmp
push
mov
xchg
lods
inc
jmp
out
mov
gs
pusha
es
and
add
pop
cmpsl
jo
mov
jns
dec
repz
test
scas
push
mov
sbb
adc
mov
out
int
mov
ret
in
xlat
sysret
jp
mov
mov
lds
nop
out
push
hlt
add
xchg
mov
ficomps
pop
movsb
addr16
push
fptan
outsl
add
insl
in
scas
mov
js
mov
pop
imul
mov
cmp
and
mov
mov
cmc
nop
les
jecxz
mov
or
insl
dec
mov
sbb
stos
adc
add
cmpsl
xchg
inc
mov
insb
loope
jge
jge
in
mov
pop
popa
jp
fsub
sti
inc
mov
sahf
ljmp
sub
sub
popa
push
sbb
aas
push
movsl
testb
rorb
insl
into
sub
notb
mov
push
xor
add
pop
xor
cs
lock
cmp
xchg
cmp
cmp
jnp
adc
test
mov
ljmp
dec
adc
xchg
and
mov
or
ds
jbe
adc
lock
enter
test
cmpl
int3
add
popa
and
ljmp
mov
aas
ret
sbb
mov
cs
mov
fists
cmc
xlat
fs
insl
mov
cmpb
mov
and
dec
ret
outsl
cmp
shlb
push
push
mov
pushf
ret
in
clc
pop
daa
imul
mov
push
pop
xor
dec
stos
push
lods
movd
enter
push
cmpsl
test
cld
xor
clc
push
lods
xchg
and
es
sub
jge
jle
nop
or
std
lods
pop
jl
imul
mov
inc
push
jbe
xchg
xor
sub
shll
sbb
lods
mov
mov
movsb
data16
jo
inc
lahf
outsl
scas
bound
sbb
iret
clc
or
adc
cmp
sub
out
daa
outsl
adcb
adc
jle
test
push
movsl
push
rclb
test
lret
lret
addb
dec
std
out
cmp
cmc
fimuls
nop
mov
sbb
sbb
clc
lcall
and
stos
roll
data16
cltd
icebp
out
fstpt
sbb
shld
jne
mov
pop
mov
and
adc
xor
cmp
add
scas
mov
lcall
mov
push
test
stos
cli
xor
scas
sbbb
add
clc
adc
jnp
aad
cli
or
in
popa
add
push
mov
xacquire
adc
out
add
or
push
add
sub
pop
pop
pop
lret
pop
fs
lcall
enter
ja
ja
jecxz
sbb
sbb
mov
addr16
das
xorl
imul
cmp
push
in
out
in
jg
mov
or
inc
test
in
add
mov
jnp
jb
je
adc
ljmp
xor
sbb
push
pop
jno
pop
call
inc
into
or
push
xchg
data16
jae
mov
mov
jbe
sbb
jl
sbb
and
push
jl
out
lods
shll
pop
cmp
aaa
les
rcr
and
xor
jmp
outsl
push
ficomps
inc
in
int
push
inc
js
push
loope
sub
lret
mov
test
repz
cli
outsb
mov
inc
loop
sub
notl
daa
pop
popf
inc
in
out
jle
lds
or
jle
repnz
cmp
push
xlat
and
xor
pop
sub
xor
cli
xlat
xchg
mov
jns
flds
cmp
aas
mov
jne
jo
or
rcll
mull
pop
cli
and
mov
cmpsl
into
movsl
pop
fisttpll
sbb
mov
orl
push
imull
sbb
mov
push
lahf
sub
push
dec
sbb
sbbl
add
xlat
pop
mov
mov
add
movsl
popf
imul
je
lods
cli
cltd
test
xor
push
cltd
mov
mov
add
jmp
pcmpeqw
loope
shl
repz
or
cmp
pop
mov
mov
roll
out
roll
fwait
sub
and
aaa
sbb
jle
sbb
inc
incb
rcll
xor
ss
xchg
das
mov
cwtl
cmp
push
inc
adc
arpl
cmc
stc
mov
pop
xchg
push
xorl
cmpsb
or
jbe
cmp
cmpsl
mov
das
dec
je
push
sbb
out
pop
xchg
sub
cmp
pushl
rclb
cmp
into
pushf
fisttps
push
mov
push
mov
push
stos
push
lea
scas
fcmovne
and
mov
imul
int
jecxz
cwtl
and
jo
aas
add
pop
arpl
je
sub
shl
inc
pop
dec
and
cmp
add
xor
pop
imul
add
add
rolb
cltd
inc
or
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
fs
mov
mov
pshufw
popa
push
add
pop
std
subl
pop
lahf
aam
or
add
in
pop
jmp
mov
subb
pusha
and
mov
adc
inc
and
scas
fldl
fstps
mov
pushf
psubusb
cmpsl
pop
mov
add
stos
icebp
push
sbb
or
fs
in
or
dec
popa
dec
ljmp
mov
stos
rcrb
jg
adc
sti
into
lret
push
pusha
inc
cmp
mov
inc
push
test
mov
inc
mov
sbb
ja
gs
sub
and
je
call
cmp
subb
in
or
inc
hlt
mov
inc
or
push
jmp
stos
jecxz
aas
sahf
xor
add
bound
clc
imul
pop
cltd
jle
xchg
jno
sbb
int
add
add
mov
adc
sbb
or
rol
jl
cwtl
xchg
jmp
testl
adc
adc
add
push
int
fs
sti
sbb
int3
cmp
sbb
push
inc
jp
cmpsl
ss
push
pop
lock
sbb
push
cmp
cwtl
jge
inc
pop
enter
int3
fimuls
fidivrl
std
pop
mov
inc
out
out
insb
and
mov
arpl
push
jne
adc
and
les
in
pop
call
mov
add
inc
test
mov
sub
xlat
hlt
pop
xor
aam
cltd
lahf
icebp
pop
push
pusha
pop
repnz
and
push
outsl
leave
rclb
or
sub
adc
leave
loopne
in
in
or
pop
lcall
pop
subb
jp
imul
mov
pusha
push
and
and
xor
cs
dec
inc
pop
xchg
or
pop
and
les
inc
or
inc
adc
data16
xor
int3
imul
fcos
xchg
sbb
addr16
add
mov
fwait
adc
mov
les
ds
cmc
cmpsb
in
mov
xor
push
out
lret
xchg
cmc
mov
clc
stc
cmpsl
push
pop
xor
ret
aad
and
pop
add
outsb
xchg
rcl
inc
xor
mov
sub
loop
inc
in
mov
xchg
push
adc
add
and
mov
pushf
mov
or
stos
dec
xor
mov
xchg
inc
repnz
adc
andb
outsb
hlt
imul
ja
lahf
out
cmc
arpl
mov
imul
jns
inc
xrelease
fnsave
dec
ds
repz
shll
mov
inc
cmpsl
int
out
xor
cmpsb
cli
ds
divl
jle
or
inc
and
push
and
adc
add
in
flds
add
int
xchg
loope
jns
mov
in
sub
push
mov
aam
or
dec
fbstp
mov
jo
stos
outsb
lret
inc
sub
fists
call
xor
mov
xchg
fnstsw
jg
or
fsub
adc
mov
pop
lcall
push
dec
leave
inc
rorb
add
jns
cmpsl
fldcw
roll
xchg
and
leave
dec
and
test
cld
imul
cmp
xchg
pop
scas
cli
mov
xchg
lret
jge
and
cmpsb
pop
cltd
cltd
xor
mov
inc
lds
and
icebp
sub
ds
mov
into
xchg
mov
xor
mulb
pop
aas
icebp
push
dec
lods
gs
add
push
loope
push
mov
shl
movsb
std
jg
fsubs
in
xchg
push
lock
aas
aam
cmp
cmc
andnps
in
call
fwait
inc
dec
push
push
loope
inc
mov
pushf
sbb
xchg
mov
and
bound
rcll
mov
sub
add
push
xorl
movsl
or
sar
inc
mov
xor
imul
xorl
lahf
lods
jae
ljmp
movsl
pop
loopne
in
cmp
dec
pop
pop
aas
insb
inc
cwtl
sbb
mov
mov
aad
mov
jae
push
ss
xor
ljmp
cmp
movsb
inc
dec
js
dec
or
aad
jg
nop
push
or
add
xchg
mov
jno
add
push
lds
fists
shll
mov
pusha
test
les
test
repnz
mov
pusha
or
cmp
rolb
pop
and
pop
sbb
push
out
leave
mov
jmp
sbb
int
dec
push
xchg
pop
xchg
lret
cmpl
mov
int3
mov
icebp
dec
stc
lahf
adc
cld
sti
fadd
push
pop
rolb
sbb
stc
mov
scas
xlat
cmpsl
leave
outsl
loop
out
iret
aas
ljmp
lret
out
ja
lods
fs
enter
mov
cs
push
and
xor
roll
cmp
ret
mov
leave
inc
insl
mov
insl
loope
pop
test
cmp
fsubrl
mov
jmp
mov
adc
je
mov
ljmp
and
scas
mov
add
mov
lret
pop
dec
push
shlb
mov
mov
lea
popa
repnz
add
shlb
lret
mov
call
lcall
int3
mov
clc
inc
inc
push
sbb
adc
adc
into
mov
icebp
iret
lcall
adc
stos
add
sbb
pusha
mov
pusha
and
sub
loop
movsb
pop
shld
jecxz
pop
and
jp
add
scas
imul
jl
mov
xor
dec
dec
loopne
scas
fildl
je
cbtw
xchg
clc
ret
fsubs
xor
cli
or
jae
enter
sub
addr16
push
outsb
inc
mov
out
ds
sbb
es
roll
je
mov
fs
inc
mov
jmp
js
inc
daa
mov
xor
and
sarb
stos
cs
cmp
movsl
xor
leave
rcrb
jmp
mov
sbb
aaa
add
mov
pop
cmp
das
sub
push
push
xor
cld
mov
repnz
shrb
scas
addb
clc
and
lcall
or
gs
jne
mov
pop
or
pop
xor
or
aaa
call
inc
mov
fldl
jp
repz
fisubl
sahf
movsb
add
or
xchg
jmp
pushf
sahf
mov
out
jne
sbb
mov
shll
pop
push
stos
insb
clc
dec
push
add
mov
push
xor
push
aam
loope
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
dec
mov
ja
fsubs
mov
int3
pop
mov
mov
in
inc
sub
js
dec
xor
mov
dec
push
out
mov
push
fstpl
lds
cmpsb
jmp
das
add
loop
std
inc
and
and
adcl
adc
imull
push
inc
loope
inc
rcl
pop
mov
sti
sub
xchg
lods
jl
inc
lea
cmp
into
jbe
repnz
and
pop
add
jae
dec
xchg
jns
fstp
pop
cs
or
repz
int
mov
jecxz
enter
mov
mov
mov
cmc
or
sub
clc
sti
imul
push
shr
mov
or
push
push
aas
imul
stc
xor
jl
fldenv
dec
rcrl
lock
push
push
dec
xor
push
sub
cltd
int3
xchg
and
scas
sbb
and
repnz
mov
dec
stos
cmp
inc
outsb
and
or
aad
leave
and
and
add
lcall
cld
rcrb
shl
and
inc
adc
and
and
mov
push
xor
push
sbbl
ljmp
sub
mov
lds
cmp
outsl
jle
lahf
cmpb
xchg
fmull
ljmp
adc
fimull
imul
std
enter
add
jl
aad
cmp
mov
dec
loopne
xchg
fidivl
sbb
dec
aaa
mov
icebp
test
mov
jge
or
mov
mov
je
push
xor
pmuludq
xor
cmc
orl
lahf
call
cmc
add
arpl
xor
insl
xor
or
in
cmpsl
lea
punpckhdq
xchg
add
repz
fs
pop
addl
inc
pop
xchg
adc
add
adc
movsb
arpl
add
or
aad
xor
bnd
mov
insb
mov
out
sbb
mov
mov
mov
rolb
inc
cmp
jbe
sub
ja
add
jae
xchg
pop
addr16
shrl
xor
or
loop
out
ds
xchg
aam
push
ss
icebp
pop
dec
cmp
fstps
iret
call
add
loopne
lods
xchg
lock
insl
push
enter
shl
sub
in
jo,pt
pop
pop
sbb
aad
cld
mov
aad
mov
pop
inc
lock
data16
ret
mov
test
xchg
xchg
test
loope
sahf
xchg
stos
jns
push
xchg
leave
repz
jmp
push
add
mov
shlb
pop
loopne
nop
inc
scas
or
xor
cltd
add
cs
mov
out
stos
jno
push
mov
mov
xchg
lahf
movl
inc
and
fstpt
inc
loop
xor
xchg
sbb
cmp
xchg
pop
sub
scas
mov
arpl
push
or
jle
mov
test
pop
fisubrl
sbb
mov
stos
and
lret
dec
div
adc
inc
dec
fstpt
push
call
in
cmp
jl
push
loopne
ror
adc
ret
insl
test
adc
pop
loope
mov
jle
push
and
add
test
or
rcrl
imul
adc
cs
shll
push
mov
hlt
inc
cli
js
push
xchg
rcr
xchg
jne
pop
push
xchg
push
adc
and
inc
add
rorb
mov
jno
sub
shrb
jns,pt
jl
cs
imul
mov
and
jg
mov
mov
insl
insl
inc
jge
scas
mov
sarb
sub
mov
mov
push
jmp
sub
cmpsb
mov
add
jecxz
jae
movsl
shrl
push
dec
xorb
rclb
subb
fwait
push
loopne
and
shrb
lods
out
mov
mov
dec
jmp
out
arpl
iret
mov
fildll
sti
cs
xor
xor
jmp
repnz
mov
aam
and
out
jge
cltd
pop
xor
adc
lds
and
sti
loop
pop
jle
push
jno
fsts
in
addr16
mov
movsl
cmpsl
xlat
push
or
push
fidivrs
loopne
call
int3
outsb
lea
jb
sbb
push
js
call
jbe
or
push
adc
fbstp
pop
xorb
mov
mov
xor
test
stos
cmpsl
or
pop
fucomi
cmc
add
pop
in
mov
mov
movl
mov
add
sti
and
jge
mov
addr16
clc
icebp
and
mov
sarb
std
cld
loopne
rorb
cmp
sbb
dec
mov
and
daa
mov
daa
loope
popf
xor
aam
sbb
push
jle
xchg
ss
add
addr16
mov
jecxz
dec
iret
mov
mov
loop
dec
int
out
in
or
push
stos
and
and
inc
adc
lret
lahf
in
mov
mov
jl
incb
call
xor
mov
insb
mov
push
inc
xor
mov
push
rcrb
jle
popa
shlb
jecxz
push
add
lahf
fbstp
jnp
enter
or
ret
xor
and
dec
push
and
movsl
mov
cmc
pusha
pop
fadds
xchg
hlt
fdivl
and
jle
std
andl
xchg
dec
inc
mov
inc
lcall
or
mov
add
ljmp
pop
mov
push
inc
stos
mov
cmpsb
es
mov
dec
out
mov
inc
push
call
cmp
pop
sub
inc
hlt
pop
in
mov
xchg
in
clc
imul
mov
fists
int
pop
dec
pop
sarb
stc
add
fisubrl
lea
push
je
mov
push
push
inc
shll
mov
shlb
jp,pn
icebp
movzbl
xor
in
jmp
mov
scas
daa
mov
dec
jne
push
push
xor
push
cmp
cs
mov
addr16
test
je
and
out
ret
pop
lods
adc
jae
sbb
jnp
cmpsb
ds
fistpll
or
xor
aam
inc
mov
ret
add
xchg
aam
rclb
cmp
push
fmul
fisttpll
cs
mov
rorb
jne
xchg
test
aas
jge
outsl
push
ljmp
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
data16
repz
aaa
mov
ja
movsl
daa
pop
pop
pop
cmp
mov
dec
push
ret
inc
dec
dec
xchg
ret
adc
sbb
jne
shrb
mov
mov
dec
repz
add
and
xor
jg
addr16
divl
pop
loopne
addb
dec
fisubrl
vmaxsd
clc
les
or
pop
mov
shlb
pusha
mov
xchg
cmp
scas
mov
ret
inc
jmp
sbb
or
add
push
adc
lcall
mov
push
dec
fbstp
hlt
sbb
sbb
jl
inc
pop
loopne
and
jle
ret
pop
cmp
rep
xchg
adc
and
add
and
ret
push
call
mov
inc
or
dec
mov
sti
aam
jge
add
jg
adc
dec
lods
outsb
sbb
and
daa
dec
movsl
fprem1
cmp
test
pop
scas
jle
scas
push
push
mov
fsubrs
loopne
fadd
inc
sbb
inc
jae
aam
in
and
ja
iret
int3
dec
xchg
mov
lods
push
mov
adc
mov
cs
int
sub
lea
pop
xlat
or
mov
sub
addr16
adc
pushf
hlt
sbb
adc
std
jle
setae
xchg
nop
sahf
lea
cmp
xchg
mov
cmc
lret
out
inc
or
or
mov
in
adc
movsb
popa
xor
sbb
scas
pop
or
ret
repz
loop,pn
dec
cltd
dec
adc
es
pop
cli
sbb
mov
mov
pop
or
jp
and
testl
nop
aad
xchg
pop
mov
cld
icebp
cli
push
mov
add
pop
mov
push
or
loopne
mov
xchg
cmpsb
cltd
pop
in
scas
flds
jecxz
mov
ror
imulb
sub
lods
shl
cld
xor
popf
sahf
sti
cltd
fbstp
pop
aas
addl
mov
dec
nop
movsl
cmpsl
rcrl
fdivl
mov
aam
sbbb
jne
adc
mov
mov
fsubrs
add
xor
movsl
ficoms
insl
lret
test
mov
lock
fmull
clc
mov
addb
push
iret
mov
fwait
mov
dec
mov
outsb
cltd
jb
mov
mov
cmc
mov
adc
imul
out
xchg
dec
int3
mov
xchg
cmp
mov
xor
ja,pn
push
cmp
scas
pop
mov
cmpsb
roll
push
push
je
mov
fs
clc
jle
mov
mov
xchg
shll
inc
xor
test
mov
cmp
aad
adc
shlb
outsb
out
sub
inc
test
xlat
aam
xor
jp
andl
scas
lret
into
adc
mov
ret
jo
sbb
movsl
mov
cld
adc
dec
xor
int
lcall
dec
out
insb
mov
mov
enter
aas
lds
cmp
mov
popa
cmpsl
xchg
cmp
popa
js
and
dec
sub
popa
pop
js
test
sahf
movsb
sahf
sub
nop
fwait
out
push
add
iret
or
in
lods
out
jge
push
insl
mov
sbb
push
data16
mov
stc
inc
mov
nop
push
pop
sbb
repz
out
mov
push
je
xchg
iret
loopew
loope
inc
adc
rclb
mov
xchg
push
aam
popa
cmpsb
sub
push
mov
leave
lods
test
inc
add
cmp
or
shll
iret
add
ds
int3
outsb
xlat
ljmp
cmp
jle
and
clc
lea
xor
nop
shll
and
adc
cmpsb
jo
mov
mov
ss
add
lahf
fdivs
lcall
mov
cmpb
sbb
mov
ljmp
pop
sarl
std
fmuls
pop
call
lcall
mov
adc
pop
dec
sbb
imul
cld
out
push
rcrl
xchg
imul
mov
in
adc
xor
cs
jnp
jl
fisubrl
dec
adcl
mov
insb
dec
cmp
xor
cli
mov
loop
or
pop
cs
jmp
stos
mov
clc
movsb
push
xchg
xchg
mov
ss
in
push
push
jp
test
pushf
push
shrb
push
pop
sub
sub
in
incl
and
cmp
cmc
outsb
fistl
popa
and
pop
pop
sub
pop
adc
dec
mov
in
leave
out
ret
lret
loope
icebp
mov
dec
mov
xchg
xchg
test
stos
lea
repnz
dec
mov
rcr
cmc
mov
push
bswap
mov
add
push
xor
lock
fdivrp
out
push
test
addr16
lahf
adc
scas
les
std
sbb
push
cmc
adc
and
sbb
cs
jmp
pop
arpl
sbb
add
jg
fisttps
sub
cmp
into
ljmp
mov
addr16
shrl
xchg
or
iret
bound
and
or
enter
es
hlt
adc
mov
dec
stc
xlat
outsl
call
jmp
sahf
inc
sub
test
loopne
cs
pop
and
xchg
and
mov
loope
jo
dec
xor
add
add
adc
push
cmpsb
adc
jp
sbb
jb
or
fnsave
push
jp
fdivrp
add
mov
out
stc
cmp
mov
push
xchg
sbb
sti
push
ljmp
aam
inc
mov
push
bnd
jns
pop
out
and
cmp
push
add
pop
xor
inc
xor
pop
inc
adc
pusha
sahf
cmp
lahf
jle
adc
lods
arpl
ljmp
scas
push
ret
mov
clc
stc
xchg
daa
pop
out
jp
shll
in
enter
outsb
sub
sbb
imul
fsubs
pop
pop
xchg
inc
pop
popa
pop
je
lods
aaa
and
inc
cld
pop
cmp
ret
mov
lods
push
xor
pop
repz
inc
in
stos
jmp
mov
loop
movsl
dec
lods
insb
cmc
std
lcall
leave
outsl
or
xor
jb
cmp
in
mov
sbb
dec
or
mov
clc
push
inc
scas
mov
pop
popa
xor
aas
rolb
adcb
pushf
push
jl
xor
sbb
sub
in
ret
push
jns
jge
orl
stc
push
sub
cmpsl
adc
jns
mov
adc
test
in
fidivrl
sbb
and
into
cltd
fs
stos
fmull
jmp
test
dec
adc
xchg
hlt
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
xor
jp
iret
mov
sets
mov
push
clc
rol
sbb
dec
filds
mov
into
dec
xlat
lods
pusha
in
jmp
jmp
push
pop
and
divl
mov
mov
and
jbe
std
dec
lret
sub
sbb
adc
cs
cmc
lret
jg
aad
sub
ret
lcall
nopl
das
stos
aaa
dec
adc
pop
sbb
addb
fadds
xchg
mull
mov
adc
mov
xor
push
lret
inc
pop
mov
in
icebp
insb
cmp
lods
fstps
mov
or
jnp
push
pop
inc
pushf
adc
jne
dec
cltd
fcompl
lea
pop
jle
jg
inc
call
add
iret
inc
out
xchg
mov
or
mov
fcoms
and
pop
pop
aaa
out
repz
into
outsl
push
add
nop
testb
insb
test
and
shlb
push
fucom
rcrb
lods
jecxz
push
push
lods
or
popa
mov
out
fnstsw
movsl
data16
scas
and
push
xor
es
pushf
cs
or
lret
sbbl
jnp
fstps
xor
cld
mov
stc
or
sub
cmp
insb
mov
gs
fidivrl
inc
out
fidivl
pop
or
cmp
adc
jge
push
cli
cld
cmp
jno
pusha
test
call
pop
push
pop
sti
xor
add
pop
out
cmp
int
test
jae
arpl
out
mov
scas
push
mov
fstps
fnsave
test
xor
pop
pop
mov
cmp
lds
cmp
pop
add
pop
cmc
and
inc
push
sarb
dec
and
dec
gs
xor
out
and
xchg
repz
lcall
inc
gs
ficomps
jmp
insl
ja
lods
xchg
jle
fmuls
cmpsb
cli
cmc
shll
sbb
shrb
andl
sub
xor
mov
repnz
arpl
push
out
and
xchg
inc
into
sti
testb
out
lds
adc
fidivl
insb
test
call
push
or
insl
scas
cmp
mov
sub
dec
lods
in
ret
lea
dec
test
push
mov
mov
dec
cmp
mov
push
dec
repz
and
sub
pop
xchg
out
or
cmp
push
cld
outsb
cltd
sahf
enter
mov
jle
das
jns
data16
js
js
jg
xor
jno
pusha
or
pusha
loopne
push
fbstp
inc
in
test
xchg
and
adc
notb
pop
push
out
push
sahf
sub
in
lds
cs
or
sbb
scas
mov
shrb
pop
scas
xchg
ljmp
fsubr
mov
das
cmp
or
mov
hlt
mov
jae
push
sub
jge
std
lds
mov
pop
je
popf
iret
xor
jb
jno
mov
pop
lea
adc
insl
xchg
repnz
sahf
neg
rclb
pop
scas
mov
cmp
shll
mov
imul
movsl
insb
jbe
test
xor
sub
je
fisttpl
iret
mov
adc
add
sbb
xchg
mov
sbb
filds
jne
int
cmp
push
lds
push
xor
dec
cs
cmpsl
rorl
adc
bound
xorl
adc
pop
xor
movsb
and
ss
xchg
out
jne
xor
pushf
cmp
js
jb
mov
lock
std
dec
mov
and
cmc
aaa
xchg
call
imul
mov
mov
rcrb
not
test
stos
out
sbb
add
mov
lock
shrb
cmp
jb
lret
fmuls
les
push
iret
lcall
jb
lds
xor
icebp
or
mov
daa
pop
sub
cld
xor
mov
jae
in
jmp
imul
pop
fsubrp
test
mov
jecxz
in
cld
in
xchg
jno
int3
push
push
mov
test
andb
std
outsb
cmc
addr16
push
sbb
sub
arpl
mov
push
jecxz
jmp
mov
cld
popa
xor
xchg
mov
cli
adc
sbb
sbb
out
inc
arpl
mov
add
les
xchg
idivb
and
repz
mov
into
adc
push
sbb
ds
mov
je
popf
push
sbb
hlt
xor
out
pop
push
push
dec
add
popl
push
add
inc
xchg
cs
sub
sbb
addr16
inc
stos
mov
adc
pop
xor
jl
call
jge
mov
or
sbb
jp
xchg
inc
test
fsub
jmp
mov
or
sar
sub
jne
xchg
xchg
jbe
outsl
mov
rorb
movsb
push
push
cmp
jns
push
inc
xchg
subl
dec
test
mov
sub
loopne
pop
inc
mov
inc
stos
mov
aaa
or
shl
mov
or
mov
mov
fwait
ret
inc
test
inc
pop
nop
in
fdivs
push
mov
in
andl
test
mov
mov
dec
aaa
lcall
xchg
mov
cmpsl
lret
inc
int3
in
inc
aam
and
cwtl
arpl
mov
push
adc
jae
pmuludq
dec
push
out
pop
ja
adc
mov
mov
sub
rcrb
add
jb
shrl
cltd
fiaddl
jg
in
push
push
aaa
nop
sti
aam
sub
add
inc
jp
and
sub
adc
shll
sub
ja
xchg
iret
adc
out
adc
lcall
mov
sbb
enter
dec
rorb
pusha
push
loope
or
in
sysexit
xchg
sub
daa
mov
pop
push
xchg
cwtl
mov
cmp
scas
cmpsl
jecxz
sbbl
mov
decb
pop
addr16
mov
push
inc
jl
push
iret
xlat
mov
lcall
jle
mov
pop
or
push
xchg
lods
scas
neg
mov
enter
sbb
scas
push
aaa
iret
pushf
jge
inc
call
insb
sub
inc
ret
mov
pop
jge
xor
push
cmpsb
ds
dec
cmp
mov
ja
xor
movb
les
mov
add
fsubrs
push
xor
iret
fstl
addl
mov
dec
xor
and
mov
fwait
loopne
popf
loopne
xor
mov
sbb
fnsave
pop
mov
mov
mov
push
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
ret
pop
into
xchg
ja
enter
jecxz
popf
mov
and
pusha
or
mov
mov
jp
repnz
lods
xchg
clc
test
add
cs
shrb
cmpsb
dec
call
inc
sub
loopne
push
cmpsl
dec
scas
add
popf
sbb
imul
filds
andl
loopne
decb
xchg
jl
pop
loop
mov
cld
inc
in
pop
lds
inc
cmp
inc
xor
pop
repz
inc
int
xchg
and
popa
mul
xchg
pop
push
xchg
sbb
xchg
scas
push
sub
rclb
call
mov
ss
outsl
sbb
cmpsl
ljmp
or
mov
cmp
popf
inc
nop
xorb
or
xchg
and
icebp
testb
addr16
cmpsb
xor
inc
adc
sbb
lret
sbb
fcomip
jmp
mov
jb
into
mov
icebp
mov
nop
push
test
pop
jp
les
out
lcall
and
daa
and
jge
pop
bound
push
mov
call
push
and
ret
addr16
fisttps
inc
xchg
xchg
mov
and
lret
jmp
sbb
lods
pop
dec
adc
cli
pop
dec
in
in
mov
mov
movsb
mov
popf
pusha
mov
xchg
and
inc
mov
ljmp
sub
and
mov
xchg
jecxz
lcall
add
es
call
loopne
insl
sbbb
push
or
jae
mov
out
ficomps
repnz
rcrb
push
addr16
or
sub
sahf
xchg
cld
mov
movsb
aad
icebp
ja
mov
jo
mov
les
inc
xor
adc
addr16
mov
pop
xchg
lea
das
cmp
mov
pop
lahf
inc
pop
into
or
ror
jge
cld
ds
jle
out
xchg
add
or
mov
mov
dec
jle
out
cs
xchg
mov
stos
cmpsb
cmpb
faddl
and
imul
cmp
or
test
andl
addb
jno
pop
jge
fstpt
int3
js
lret
sbb
loop
fisttps
xchg
jmp
pop
dec
shrb
mov
out
inc
dec
icebp
lcall
xchg
mov
jmp
lods
mov
push
and
aaa
jle
cmc
leave
sub
out
js
mov
fistpl
testb
je
cmpl
std
subl
add
cmp
mov
outsb
stc
stc
dec
dec
jae
test
test
lcall
mov
iret
lret
mov
pop
fisttps
imul
je
jecxz
xchg
jge
dec
adc
jmp
lods
movups
iret
mov
sub
push
adc
fldt
loop
in
pop
gs
aas
lcall
adc
xchg
xchg
inc
mov
leave
popf
sbb
push
pusha
out
mov
pop
xchg
pop
fwait
adc
sbb
ret
stos
cld
xchg
and
and
push
sbb
rcrl
mov
lret
repz
movsb
negl
outsb
xchg
scas
adc
mov
sub
jnp
adc
popf
cmp
out
push
and
cmp
xor
mov
sbb
and
rolb
sbb
xor
xchg
movsb
cs
push
insl
pop
pop
cwtl
out
mov
pop
mov
mov
testl
scas
add
xchg
jae
imul
mov
insl
push
cmpsl
push
shr
jae
xchg
xchg
stos
sub
inc
pop
xor
addr16
ljmp
pop
loop
jle
adc
add
and
repz
je
faddl
out
sub
pop
push
add
fnstsw
cmp
mov
mov
shll
daa
das
stc
lods
sbb
push
imul
mov
xlat
add
jae
sub
lods
mov
push
fdivrp
mov
inc
adc
and
push
sar
dec
sarl
scas
lret
imul
jge
and
dec
fidivrs
and
arpl
loope
dec
inc
cmpsb
cmc
mov
loope
or
push
pop
cmpsb
movsb
add
in
add
xor
xor
pusha
iret
into
adc
mov
ss
inc
movsb
jnp
push
insl
adc
daa
mov
and
jecxz
xorb
shll
jmp
jmp
aaa
adc
inc
push
sahf
je
addl
rcrl
ret
sub
cmp
and
outsb
and
push
mov
out
mov
idivl
mov
inc
pop
jcxz
mov
pop
mov
cmp
mov
pop
mov
push
sahf
es
dec
loop
cli
sbb
pushl
in
out
and
or
out
pop
incb
lds
jne
shrb
dec
push
push
lds
pop
push
clc
data16
fstps
jns
inc
icebp
and
daa
pop
pop
bound
lock
jns
push
fcmovb
sbb
mov
lcall
les
imul
loope
ror
aad
lret
push
push
add
mov
dec
push
inc
mov
xor
test
loop
inc
rol
lds
inc
inc
shl
fiadds
cmpsb
stc
add
hlt
int
xchg
cmpsb
inc
adc
or
jns
enter
es
inc
mov
xchg
insb
in
movsb
inc
sbb
and
repz
sbb
leave
push
mov
imul
xchg
push
push
mov
mov
scas
inc
push
inc
mov
add
and
mov
xchg
sub
xlat
fisttps
or
push
rcrl
push
fildl
mov
pop
sub
xor
out
xchg
or
lahf
les
mov
add
push
or
scas
add
sub
flds
mov
and
outsb
call
ds
push
in
ja
js
mov
inc
adc
add
nop
sbbl
incb
mov
jp
test
sub
sbb
or
mov
or
mov
aam
inc
adc
fisttpl
daa
imul
mov
and
jge
inc
push
call
push
jle
xor
roll
mov
fisubrl
pusha
xchg
mov
sub
daa
and
not
xchg
cmp
sub
mov
in
lods
sbb
int3
mov
jmp
call
es
dec
cmp
or
push
sub
addb
jmp
roll
xchg
call
in
scas
in
jbe
adc
negl
add
ficompl
jp
push
sub
out
and
aam
dec
sbb
das
and
add
stos
sub
xor
jmp
fs
inc
mov
cld
push
or
add
push
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
subl
js
orl
psubusw
enter
and
jmp
in
shll
add
mov
inc
sub
sub
fimuls
insl
sub
loope
jbe
popa
mov
int
dec
inc
cmp
adc
mov
mov
test
mov
lods
lock
jbe
aaa
and
pop
jmp
ja
mov
addr16
jmp
add
xchg
inc
mov
test
fwait
shlb
mov
sub
popf
roll
cmp
or
mov
stos
hlt
into
scas
jb
jmp
stc
lds
mov
ds
push
notb
sub
call
mulb
mov
adc
push
fisubl
lcall
in
jbe
push
loopne
in
sub
out
dec
xchg
das
cli
jo
dec
cmp
ljmp
vpmacsdql
aas
cmpsb
loope
lods
sti
imul
mov
popa
stc
push
insb
popf
flds
cltd
xor
inc
jno
pop
fidivrl
push
pop
out
std
sub
add
mov
inc
repnz
push
or
or
aad
cmp
pop
mov
dec
jb
ds
lcall
mov
shrb
jne
pop
xchg
dec
aaa
xchg
call
bound
push
out
lock
arpl
lods
popf
push
jmp
andb
inc
mov
pop
pop
outsl
mov
aad
pusha
lods
push
subb
adc
pop
inc
stos
xchg
fsub
add
jne
sub
push
adc
dec
in
xor
roll
movsl
push
pop
cmp
out
jns
out
in
ds
adc
rolb
and
ja
inc
enter
add
scas
sub
scas
cmp
mov
punpckhdq
in
addr16
daa
jmp
int3
cmpsl
xor
mov
dec
push
xor
idivb
aam
iret
in
je
pusha
pusha
mov
inc
jge
mov
lods
jl
fsubrp
enter
mov
adc
mov
pop
dec
bound
imul
loope
push
imul
push
add
pop
mov
xlat
in
mov
sbb
pop
in
sbb
jge
pushf
ret
mov
adc
inc
xchg
jg
cmpsl
lods
aas
fistpll
in
es
jne
gs
gs
bound
and
pop
pop
arpl
popf
cmp
fdivrs
or
mov
outsb
lds
sub
stos
sbb
push
int3
inc
shlb
int3
call
ret
sbb
outsb
sub
dec
sarb
aam
es
jnp
jo
sbb
sub
es
icebp
xor
aad
inc
jno
push
pusha
les
adc
sahf
add
sbb
mov
nop
cmc
or
clc
fidivs
dec
ljmp
popf
cmp
mov
test
fldcw
push
jecxz
jb
addr16
xchg
loope
fsubs
adc
stos
sbb
pushf
inc
in
popf
mov
pop
mov
mov
sti
shll
mov
lods
test
sbb
cwtl
adc
push
fdivs
and
ret
add
lcall
out
or
loopne
add
xor
push
pop
stos
rol
and
jns
mov
test
aas
mov
cmp
xor
in
data16
cmp
xchg
inc
repnz
dec
pop
out
jp
ljmp
adc
or
jmp
loope
and
fildl
stos
adc
mov
leave
push
sbb
push
cmp
mov
push
xor
les
loop
cmpsb
pushf
or
pop
aam
mov
pop
jge
add
addb
push
movsl
dec
push
movsb
and
xchg
xor
pop
cltd
div
xor
lods
adc
xor
out
mov
inc
leave
loopne
mov
fidivrl
sbb
sub
insb
mov
mov
pop
incl
and
xchg
mov
xchg
inc
pop
add
or
xchg
and
aaa
adc
push
outsb
jns
mov
add
xor
outsb
dec
xchg
inc
inc
and
pusha
out
inc
nop
test
pop
ret
or
xchg
call
cmp
jae
das
inc
jo
add
in
dec
ss
out
push
adc
iret
push
or
mov
in
ret
cli
ljmp
mov
es
and
rclb
lret
push
mov
jge
xchg
cmp
in
pop
mov
cmpsb
ds
ss
imul
ret
mov
int3
xchg
mov
sarl
jmp
fstl
movsl
enter
push
dec
mov
xchg
cld
lods
incb
sbb
cmc
shll
lods
dec
call
lods
ror
mov
push
loopne
pop
iret
out
jp
fmul
ds
frstor
jp
call
icebp
cli
shrl
mov
stos
cmp
xor
mov
leave
fcomi
inc
subb
popf
data16
js
mov
inc
push
mov
les
lcall
mov
call
cwtl
rcrb
pop
adc
mov
push
aad
mov
cmp
or
or
sub
pop
sbb
adc
sub
leave
lock
mov
incl
jl
aaa
gs
jle
iret
rol
sbb
clc
mov
pop
mov
dec
and
repnz
lret
xor
test
mov
popf
clc
es
pushf
ret
cmpsl
lock
inc
xor
mov
fldcw
push
mov
xor
fbld
adc
jbe
out
jle
int
jle
out
nop
xchg
clc
xchg
mov
mov
jbe
into
xor
ret
rcrb
iret
std
ret
adc
sbb
shrb
sbbb
mov
jle
shll
mov
fstpl
mov
adc
nop
hlt
inc
dec
ljmp
iret
js
jecxz
andb
out
pop
imul
insb
out
aas
in
ds
mov
lea
add
insb
xor
jno
adc
mov
sbb
subps
xchg
inc
push
add
xor
movsb
imulb
movsb
cltd
jge
fwait
add
xor
and
xor
pop
into
xchg
cltd
jg
xchg
sbb
test
jae
xchg
or
cmpsb
dec
lock
mov
inc
mov
bnd
mov
mov
or
loopne
aaa
or
popa
hlt
js
jns
xor
or
sbb
push
xchg
lods
add
mov
or
push
repnz
sbb
lret
out
xlat
sar
adc
test
mov
test
in
cmp
xchg
pop
cmc
lock
stc
xchg
inc
lret
push
mov
mov
xchg
dec
sub
movsb
in
repnz
cmp
or
cmp
popa
xor
leave
lahf
fcomps
jnp
movl
flds
xor
sar
inc
int
push
and
fwait
mov
pushf
bound
int3
cs
dec
and
sbb
fsubl
ljmp
out
xor
cmp
repnz
sti
aad
xor
mov
cvtpi2ps
int
enter
pop
cmp
push
fs
pop
xor
orb
dec
in
mov
mov
jmp
aam
inc
test
addr16
add
and
outsl
ja
pop
test
sub
pop
imul
xchg
int3
adc
ljmp
mulb
loope
shlb
dec
jle
aam
dec
sub
lock
sub
popa
inc
lods
mov
in
push
arpl
push
and
cwtl
dec
adc
lods
push
dec
movsb
and
cmp
mov
fmul
fcoms
adc
stos
inc
insb
sbb
hlt
pop
mov
mov
jae
fistpl
push
stos
popf
mov
add
sahf
mov
sahf
xchg
mov
cs
inc
mov
outsb
test
inc
insb
mov
push
mov
mov
push
pushf
sbb
push
jmp
das
shll
xchg
nop
push
in
mov
es
ds
cwtl
mov
fwait
push
shll
aam
mov
hlt
mov
cs
mov
movsl
fisubrs
add
fcomps
pusha
out
in
in
ret
xchg
test
cs
idiv
aaa
ds
test
fucomp
repz
adc
ret
jno
dec
lock
es
sub
inc
clc
adc
pusha
mov
scas
jne
das
cmpsb
jle
mov
fs
inc
sahf
outsl
sub
xorb
andl
xor
sbb
xchg
or
in
mull
cmovae
lret
gs
mov
xchg
in
adc
jb
cmc
cs
adc
bswap
pop
xchg
dec
mov
mov
mov
sahf
adc
mov
repnz
or
out
ljmp
push
jnp
dec
cmp
mov
jae
test
cli
pop
xchg
fmull
mov
xor
pop
adc
sahf
dec
sub
sti
dec
adc
jp
or
roll
push
inc
test
add
aam
ds
pop
jno
xchg
push
sbb
lret
pop
pop
xchg
inc
jmp
adc
insb
and
rcrb
sub
and
loop
rorb
sahf
stc
mov
xchg
stos
enter
stc
jmp
cmp
sbbl
dec
push
mov
push
jo
add
ret
out
dec
dec
mov
cmp
es
daa
imul
jp
loop
xor
idivl
dec
sub
rcpps
mov
testl
mull
jge
xchg
mov
outsl
push
sbb
loop
fnstsw
mov
mov
es
xor
push
dec
or
sahf
arpl
lcall
inc
cmpsb
out
add
jp
jno
rorb
sbb
and
idivl
test
mov
sub
test
repnz
lods
fdiv
mov
sub
sub
sub
inc
and
jo
push
test
call
or
inc
stos
cmp
pusha
sbb
cmp
sbbl
sbb
sub
jmp
xchg
add
mov
push
mov
jnp
mov
push
stc
cld
imul
das
cmpsb
mov
mov
sarb
jp
xchg
outsb
push
les
movsl
das
stos
jbe
sub
pop
jno
cltd
push
fnstsw
lock
data16
icebp
mov
hlt
xor
in
into
adc
arpl
sar
cli
fs
adc
xlat
cwtl
lods
push
xchg
mov
push
sbb
es
sub
cmc
enter
inc
cltd
arpl
pop
or
inc
movb
jecxz
aam
and
ja
push
out
xor
push
repz
mov
mov
enter
les
test
scas
xor
jecxz
fmuls
pop
lcall
mov
add
mov
add
mov
xchg
xchg
inc
adc
pushl
push
int
pop
mov
movsl
mov
mov
ret
inc
loop
js
xchg
cmc
inc
imul
shrl
and
call
lock
enter
mov
insb
jo
push
jbe
jl
aad
aam
decb
add
jmp
xor
test
les
mov
push
mov
icebp
leave
push
pop
sbb
jno
sub
xor
mov
sbb
std
rcl
jmp
ss
repz
mov
add
cmp
cmpsb
insb
push
imul
in
and
and
mov
iret
cmpsb
jb
or
lret
movd
int3
sar
or
xchg
sub
mov
xor
push
mov
mov
xor
or
das
fbld
cmp
pop
aas
inc
inc
mov
loopne
bound
inc
push
mov
sbb
sub
adc
fstpl
xor
push
fcom
cs
not
mov
push
xchg
repz
mov
or
jp
pop
pop
fistl
data16
stos
dec
stos
ds
cmp
fwait
sub
dec
mov
xor
arpl
xchg
jnp
orb
loopne
push
dec
sub
arpl
jbe
fistpl
push
mov
cmp
mov
clc
fsubp
mov
inc
xor
and
sbb
sub
or
pop
fwait
dec
jbe
and
pop
ret
fsubrs
bound
push
pop
or
leave
scas
mov
fdivl
into
sbb
fisttpl
pop
ret
sub
jae
pop
xchg
clc
xchg
ret
adc
xchg
sti
andb
nop
and
lcall
pop
pop
pop
and
sahf
jbe
and
testl
mov
es
imul
mov
mov
pop
call
sbb
cmp
ffreep
popf
mov
sub
xchg
ror
jbe
push
jmp
rorl
mov
fstp
sbb
rcr
rcrb
mov
test
cmovp
ret
mov
test
sbb
adc
mov
xchg
and
xchg
inc
sub
in
adc
sub
andl
mov
rolb
bnd
fldl
xor
dec
jnp
out
popa
fdivl
add
add
into
divl
aam
lods
ljmp
push
push
xor
pop
cmp
cli
add
jae
popa
or
xor
mov
lock
lret
jns
bound
mov
mov
adc
out
sbb
out
cld
test
das
ss
mov
fcoms
outsl
and
and
movb
pop
xlat
push
in
scas
add
lods
mov
pop
mov
fidivl
adc
mov
cwtl
adc
and
pop
outsl
call
aam
push
sbb
fwait
sbb
mov
mov
in
arpl
mov
in
stos
adc
mov
js
mov
add
jb
iret
sub
add
cmp
nop
dec
jle
sbb
imul
mov
lahf
data16
test
inc
sbb
jbe
or
adc
add
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
insb
inc
lock
ja
pushw
mov
mov
push
hlt
mov
rcl
inc
jle
arpl
fwait
cmovge
in
push
cmpsl
dec
out
jle
jae
dec
xor
pop
sbb
jp
pop
jp
jb
sbb
xor
sbbb
mov
in
pop
mov
xchg
and
adc
daa
ss
sub
aad
lcall
dec
aaa
mov
push
mov
add
pop
imul
push
xchg
imul
lcall
mov
dec
add
sbb
lods
outsl
sahf
inc
aam
xor
inc
fisubl
out
xchg
or
lret
arpl
movsb
and
adc
lds
popa
mov
fnstenv
jecxz
or
dec
jge
inc
add
push
cli
imul
cmp
in
cld
outsl
aas
add
subb
xor
mov
xorl
inc
shlb
pop
outsl
cld
add
xchg
mov
pop
sbb
scas
mov
in
aam
lods
loopne
inc
jle
in
or
jecxz
jno
push
inc
daa
ljmp
sar
notb
xor
insb
sbb
insl
push
cmp
test
repnz
aam
lea
cmpsl
or
inc
imul
cli
aas
add
ja
mov
jle
je
cli
push
mov
cli
cmc
and
and
enter
sbb
sti
mov
xor
lds
lods
sarb
xchg
pop
inc
cmp
lods
jmp
lods
int3
loop
imul
data16
arpl
sub
mov
mov
inc
shll
lods
push
pop
stc
push
pop
sbb
xor
or
xor
imulb
iret
sub
scas
testl
ds
push
lret
addr16
push
in
push
cmp
icebp
ret
mov
in
mov
jg
jb
mov
stos
shr
pop
fcmovne
or
jno
ja
pusha
fwait
sbbl
lods
mov
scas
iret
inc
imul
mov
mov
loop
cmp
bound
ds
shr
and
icebp
call
and
pop
test
dec
enter
or
mov
out
mov
add
mov
inc
mov
and
push
add
jo
and
cmp
pusha
test
pop
stos
mov
cmpsb
pop
movzwl
bound
push
sbb
outsb
shl
inc
movsl
push
imul
in
jae
test
movsb
mov
push
out
movsb
sbb
pop
daa
dec
ljmp
pop
mov
mov
les
outsl
sub
std
outsl
mov
setnp
cmpsb
jp
xor
push
push
jo
repnz
sbb
mov
mov
xor
inc
mov
xchg
in
out
xor
xchg
pop
jmp
xor
push
icebp
cltd
dec
fwait
jbe
fisttpll
xor
out
cmpsl
jl
cmpsb
inc
mov
xlat
aad
ficoms
loope
testl
dec
je
push
fsubl
adc
xchg
loopne
dec
outsl
sub
lret
ficomps
mov
dec
add
test
jno
jmp
aaa
cmp
push
adc
pushf
inc
dec
nop
mov
dec
loopne
xchg
rcrb
ret
xchg
xor
call
loop
dec
push
pushf
mov
jp
data16
xor
pop
fwait
sub
shll
xor
cmpsb
rcll
sahf
lret
jae
cmp
call
cmp
jp
rol
sbb
push
inc
hlt
xor
insb
mov
shrl
jne
xor
popf
sbb
xlat
pop
ds
cmpb
jns
xchg
cmp
or
subb
test
pop
sbb
lock
sub
add
jg
mov
or
add
jo
mov
mov
jmp
shlb
jns
hlt
orl
sub
add
fwait
jl
jne
mov
or
adcl
add
ljmp
mov
mov
rorl
jne
cmp
sub
es
jg
aas
movsl
lahf
mov
push
jle
adc
sbb
xor
lahf
aad
mov
fistps
stc
clc
pop
clc
je
add
jmp
icebp
cli
or
test
xchg
or
push
push
pop
sbb
adc
xchg
das
lret
enter
popa
sbb
xor
mov
push
cmp
mov
mov
in
loop
dec
fiadds
cmp
ret
scas
popf
jb
push
dec
xor
push
inc
clc
xor
stos
ljmp
xor
popa
xor
shll
mov
fisttps
pop
dec
add
pop
pop
mov
mov
iret
ljmp
mov
stos
cmp
push
push
adc
iret
ret
or
cmp
sub
push
in
add
test
adc
in
push
pop
or
jns
dec
ret
aam
rdpmc
add
mov
cld
jbe
dec
out
incb
push
out
shrl
ret
inc
fs
je
sub
mov
pushf
mov
mov
ret
xor
jge
cmp
out
stc
cmp
fsubs
xor
in
loop
cmp
mov
popa
sti
mov
test
dec
lods
xchg
lret
jnp
negb
mov
fists
sub
insl
ret
xchg
xchg
adc
adc
imul
test
jmp
cmp
cmp
cmp
and
jg
cwtl
lods
shld
nop
cmp
adc
call
sbb
sub
add
pop
xchg
sti
arpl
mov
out
cmpsl
enter
dec
lock
fildl
mov
shl
mov
pushf
push
jno
fldcw
and
sbb
sub
bound
pop
mov
repz
jo
cld
test
add
xchg
pop
fdivrs
lahf
popa
test
xchg
pop
inc
mov
bound
insl
pop
test
adc
in
inc
mov
adc
mov
leave
fldl
test
inc
and
add
xlat
cs
xchg
icebp
enter
jmp
or
push
lret
fmull
ret
mov
mov
sarb
scas
mov
dec
cmc
mov
push
in
mov
hlt
movsb
aad
test
push
inc
mov
push
sub
jmp
push
outsl
and
fwait
lret
andl
push
pop
repz
adcl
stos
out
or
lods
sbb
mov
push
xchg
push
push
mov
push
pop
xchg
je
sbb
inc
xchg
fadds
cli
leave
shll
iret
inc
jmp
xchg
mov
push
push
out
pop
and
ficomps
cmp
xchg
test
pop
mov
ds
cmp
or
hlt
in
xor
call
insb
xor
jae
xor
and
cmpsb
add
mov
loope
in
cmp
cwtl
inc
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
mov
dec
ja
jnp
pop
mov
mov
mov
lods
and
jmp
mov
inc
divb
mov
outsl
gs
sbb
push
inc
arpl
subb
shlb
lods
jl
ficoms
xchg
pop
jmp
arpl
testb
sbb
or
arpl
leave
nop
mov
sub
insb
jnp
sub
out
or
out
mov
inc
addb
nop
jge
fidivl
jmp
xor
and
cltd
dec
arpl
pop
into
xchg
jnp
out
cmpsl
addr16
test
jg
mov
lea
mov
mov
and
jns
mov
aas
icebp
lods
outsb
sub
sbb
rcr
or
ficoml
sahf
sbb
xor
fcoml
jnp
lea
xchg
cmc
movsl
xchg
je
test
inc
out
and
pop
pop
jg
stos
sbb
mov
mov
push
outsl
clc
sbb
ss
push
sti
movsl
rcll
pop
psubsb
xor
fcomp
mov
int
nop
push
stos
dec
aam
out
mov
pop
adc
mov
dec
sbb
add
pop
pop
movsb
mov
add
sub
adc
jge
inc
fcoms
jl
sti
pusha
test
shrl
in
add
xchg
or
pop
dec
fdivl
lds
sbb
mov
out
mov
push
imul
add
ja
push
cwtl
incl
jecxz
cmpsl
lods
mov
jae
jno
adc
ss
push
jge
inc
sarl
jae
lcall
es
push
les
scas
insl
test
out
insl
outsl
inc
stc
cmp
mov
test
fildl
sub
inc
xchg
push
lcall
shrb
cmp
push
pop
call
int
or
jne
or
notb
mov
and
ret
scas
pop
push
pushl
sbb
neg
and
out
out
jae
hlt
mov
lcall
xor
xor
fwait
sti
inc
or
cmp
addb
cld
cltd
jg
popf
add
outsb
mov
xchg
jbe
cmpsb
test
push
mov
shrl
adc
lods
icebp
cltd
aaa
mov
dec
out
fcomps
inc
ret
cwtl
push
es
gs
in
mov
xorb
ret
sbb
dec
sub
inc
std
filds
aad
push
pop
lock
out
lock
xchg
lcall
out
sbb
sbb
push
pop
lcall
nop
into
cld
add
mov
mov
mov
inc
getsec
and
pop
dec
push
cwtl
sbb
add
cmp
fwait
call
gs
mov
fs
inc
mov
jp
cs
lcall
cmp
mov
lods
jle
push
stc
pop
test
ficoms
aas
lods
jp
insl
cmp
int3
and
push
pop
pusha
inc
inc
mov
cwtl
ljmp
add
test
mov
sub
popf
cltd
les
jp
xchg
lret
in
std
jae
int
js
push
dec
rcl
roll
jnp
in
xchg
sub
xchg
pop
scas
outsl
fisubl
movsb
xchg
jl
call
sbb
das
xlat
int3
test
arpl
mov
int
sti
add
xor
out
popa
loope
add
push
seto
fs
pop
dec
out
and
stos
mov
xor
stc
icebp
and
add
sbb
stos
dec
push
test
sti
jle
inc
dec
insb
mov
jno
inc
add
mov
or
and
das
mov
xor
pop
pop
insb
push
mov
sub
xor
aaa
lret
mov
aad
fsubs
leave
jns
aaa
jo
test
dec
adc
fsubl
cmp
sub
xor
lods
in
shlb
xor
dec
adc
mov
mov
pop
loope
xor
jb
and
decb
mov
stc
or
xor
cmp
mov
enter
adc
sub
std
mov
dec
mov
pop
stos
insb
push
sub
mov
lods
stc
les
inc
and
jmp
cld
pop
mov
add
add
jnp
cmp
jl
aaa
mov
hlt
cmc
push
xlat
popa
push
jl
sti
inc
sti
mov
sub
daa
dec
mov
mov
lock
sbb
cmp
lret
sarb
mov
jbe
xchg
push
jb
xchg
ds
mov
hlt
mov
and
mov
sahf
js
push
mov
insl
lret
aam
sbb
mov
jne
cmpsb
dec
repz
cwtl
call
hlt
aad
popf
jl
into
ja
dec
sub
push
pusha
cltd
xchg
lcall
cmp
mov
imul
imul
pop
push
in
sbb
movsb
ja
xchg
mov
lock
xchg
pop
rcrl
xchg
add
push
stos
call
fildll
push
add
orb
jge
mov
xchg
cmp
sbb
add
shrl
dec
mov
fsubrl
add
jb
cli
cltd
pop
add
lock
int
dec
lock
aad
aam
dec
out
mov
xchg
bound
dec
stc
in
shll
xchg
lock
daa
pusha
int3
clc
cmp
cmp
or
cltd
sub
adc
cmc
es
dec
pusha
push
ficomps
pop
popa
xchg
push
test
adcl
mov
shl
fsub
les
mov
lret
push
arpl
pop
pop
jns
mov
xor
sbb
mov
in
jge
jae
mov
dec
lods
loopne
jnp
sbb
inc
sbb
push
inc
out
jge
mov
push
popf
xor
dec
push
sahf
outsl
mov
jl
jae
enter
add
pop
in
sub
lret
les
mov
pop
scas
add
clc
mov
scas
je
lcall
push
xchg
or
sub
mov
fwait
testl
nop
pop
data16
das
fnsave
jp
mov
sbb
jns
rcrb
mov
push
js
ret
inc
jle
adc
inc
mov
jle
jg
mov
mov
xchg
xchg
aas
mov
int3
sarl
daa
xchg
and
and
cs
pop
mov
pop
mov
out
out
add
fs
ret
fwait
cli
rolb
push
lods
ficoml
hlt
shll
pop
les
jle
dec
pop
cmp
cmpsb
insl
adc
fisttpl
es
xor
pusha
pushf
mov
filds
mov
ret
xor
xor
mov
jl
fidivl
adc
dec
mov
dec
cmp
ds
pop
loopne
inc
push
dec
ret
shrl
mov
xchg
notl
dec
ret
add
xor
popa
das
jbe
mov
xor
dec
add
cmc
push
popa
out
pop
out
adc
fistpl
ds
lds
adc
lret
ja
mov
jae
dec
std
adc
popl
aam
push
add
shlb
rol
push
xor
mov
mov
mov
jmp
sti
test
sbbl
movb
js
aas
ja
icebp
cmp
xchg
push
daa
mov
inc
mov
cwtl
mov
xchg
and
or
ljmp
scas
dec
pop
and
cmpsl
add
mov
insl
xor
nop
pop
test
pop
or
dec
pop
pop
cmp
mov
mov
mov
xchg
icebp
mov
xchg
popa
or
and
push
push
sbb
cmpsb
push
add
out
mov
mov
xchg
outsl
cmp
or
scas
pop
int3
add
fisubs
fisttpl
lret
ret
push
and
out
mov
mov
add
xor
aaa
cli
shrl
xchg
cmovnp
add
push
cmp
imul
and
cmpsb
mov
xor
ljmp
mov
scas
insb
push
jp
pushf
ljmp
shlb
inc
loop
shll
iret
pushf
daa
sub
loopne
das
pop
push
jge
pslld
dec
push
divl
pop
mov
jge
lods
arpl
pop
fistps
adc
in
repnz
adc
inc
lea
xor
fidivrs
push
outsl
mov
mov
pusha
in
mov
call
test
stos
cltd
clc
mov
or
inc
nop
xchg
ds
add
dec
xchg
in
out
jmp
scas
inc
lock
sbb
ret
arpl
adc
fs
andb
xchg
mov
iret
xchg
ljmp
jg
add
jmp
fstps
cmp
dec
inc
cltd
mov
mov
inc
sub
xor
dec
xlat
xor
and
add
fcomps
pusha
testl
ret
dec
in
mov
xor
test
das
bound
mov
or
rcll
sbb
push
mov
cmp
scas
shl
rolb
cli
mov
test
mov
dec
push
lret
ror
je
loopne
xchg
pop
add
or
sbb
ja
xchg
sahf
push
dec
adc
cmp
jge
xchg
jbe
int
scas
mov
jecxz
loopne
inc
xor
dec
inc
mov
xor
sub
fucom
push
inc
mov
jbe
and
lret
mov
lret
in
dec
imul
pop
or
outsb
or
mov
pop
arpl
daa
cmc
ret
fwait
ret
inc
jns
lods
in
int
cltd
xor
dec
xchg
out
push
in
repz
outsl
das
and
dec
dec
push
out
sbb
loop
aas
mov
inc
pop
push
sbb
sbb
push
pushf
mov
pop
shll
dec
mov
jb
bnd
xchg
push
aam
push
dec
gs
mov
aad
in
lret
add
jp
cmp
jb
sub
xchg
inc
xchg
inc
rcl
lahf
cmc
and
scas
xor
inc
mov
xchg
and
sbb
aad
or
fisubs
das
sti
lret
mov
into
inc
rclb
mov
scas
outsl
xchg
inc
call
fst
jo
jge
out
lds
fwait
sub
cmp
mov
inc
dec
and
pusha
jns
in
mov
imul
mov
repz
xchg
in
and
lock
insb
sbb
jecxz
mov
test
cli
pop
scas
fidivrs
pop
fs
test
sub
sub
lods
mov
test
outsb
cmp
or
addr16
pop
xchg
loope
adc
push
inc
adc
jl
inc
hlt
adc
mov
sti
test
xor
icebp
xor
fadd
and
jne
dec
adc
mulb
mov
mov
xchg
dec
lds
jno
int3
mov
push
pusha
out
aaa
sub
sbb
pop
into
push
push
repnz
and
jns
jns
bound
insb
ficoml
xchg
push
hlt
test
add
js
mov
lock
mov
sbb
leave
addr16
dec
pushf
cwtl
shlb
lods
or
sti
outsb
add
repz
pop
sbb
stos
movsl
out
jmp
sub
mov
jp
fwait
dec
rcr
bound
shlb
ljmp
xchg
sub
pushf
loope
mov
inc
pop
push
jnp
mov
cmpsl
or
pop
pusha
adc
inc
pop
cmp
sbb
adc
ret
outsl
and
jge
mov
and
ja
fimuls
ret
std
jns
add
xchg
cmp
push
adc
imul
aas
pop
jo
jno
mov
dec
sub
inc
sub
and
lods
outsl
push
inc
popf
dec
orb
sub
jns
lods
jo
xchg
rcll
aam
mov
aam
nop
daa
int3
repz
jbe
sbb
es
mov
data16
mov
aaa
cwtl
outsl
fdivrs
sti
jnp
test
les
sub
adc
pop
out
or
lret
into
adc
das
xchg
js
and
daa
cmp
lea
inc
and
and
mov
out
pop
mov
xchg
or
cld
inc
inc
lahf
mov
pop
clc
das
imul
mov
ds
pop
inc
sub
fdivrs
lcall
jbe
pusha
push
and
pop
sbb
inc
xor
jg
jno
aam
shrl
lret
dec
add
loop
jnp
push
xchg
dec
sbb
das
mov
outsl
or
cli
adc
ljmp
enter
lods
aad
xor
cmp
leave
aad
mov
sbbl
es
cmp
frstor
lret
arpl
xor
out
subl
cmp
fisttpl
test
jp
pop
fmull
and
dec
rclb
inc
stos
stos
je
xchg
jge
fstpt
xchg
xchg
outsl
fucom
rclb
pusha
lret
cmp
fstp
dec
cmp
xor
sbb
push
mov
mov
ljmp
xor
stc
andl
fdivl
imul
test
mov
insb
xor
push
popf
mov
into
jmp
rcr
or
pop
mov
dec
inc
int
push
cwtl
push
jb
jle
sub
in
dec
rol
pusha
mov
push
and
mov
enter
pop
push
in
jle
add
pop
jns
mov
and
dec
sub
ss
sub
and
stos
add
dec
push
mov
insl
lods
les
and
dec
inc
jo
cs
push
push
xor
cmp
aas
xor
lods
scas
push
movsb
repz
outsb
fidivl
xor
cmc
sub
es
in
cmp
repz
mov
and
push
push
aas
add
dec
lahf
mov
fcoml
out
sub
mov
pusha
mov
inc
mov
aaa
pushf
push
iret
jecxz
loop
jg
rolb
or
es
jae
adc
fmul
xlat
rclb
data16
mulb
push
lods
pop
push
or
inc
mov
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
popf
and
xchg
mov
fsubrl
mov
push
test
xchg
xchg
push
dec
mov
push
sahf
lret
fwait
lret
les
sbb
dec
pop
and
insb
xor
inc
daa
insl
pushl
push
ss
popf
adc
ds
int
adc
pop
cwtl
fstl
fisttps
shrb
ja
add
call
adc
lret
imul
cld
jge
and
and
jmp
lods
mov
shrb
cmpb
or
push
push
jo
stc
adc
testl
loope
push
mov
add
call
lcall
and
hlt
in
imul
xchg
mov
mov
mov
push
xor
les
mov
ds
jge
adc
jp
xor
mov
fldl
movsl
sub
iret
sbb
das
add
pop
sar
lock
mov
or
in
jmp
repnz
aam
mov
and
in
icebp
imul
mov
call
mov
or
adc
xchg
mov
mov
adc
aas
mov
dec
cli
pop
test
jbe
mov
jp
push
mov
cltd
add
loopne
pop
add
hlt
push
fsub
and
pop
jecxz
add
out
mov
std
mov
xchg
adcl
cs
cmp
jecxz
aad
aam
push
cmp
sbb
mov
mov
bound
push
sub
popf
xchg
dec
xor
add
aad
sbb
xchg
xchg
std
pop
insl
mov
cltd
jo
jmp
in
inc
ret
cli
dec
dec
xor
adc
cmc
dec
stos
adc
sub
mov
push
in
jo
dec
adc
dec
enter
jo
dec
push
sahf
sub
popl
popf
xchg
cwtl
in
cs
push
or
inc
sub
jmp
sbb
mov
adc
fcompl
sbb
imul
or
les
sti
in
cwtl
cwtl
sub
mov
jnp
dec
shll
push
mov
scas
adc
xchg
out
mov
gs
popa
fidivl
jmp
sub
mov
mov
in
cwtl
loope
jle
sbb
jmp
mov
loop
test
pop
sbb
sub
and
xor
lret
fwait
outsb
insb
cmpsl
inc
push
testb
dec
nop
in
js
cmp
xlat
xor
rcrb
xchg
scas
hlt
xor
jns
push
sub
fsubr
pusha
mov
movsb
aas
lcall
and
stc
or
arpl
nop
out
fidivs
sbb
xor
mov
mov
leave
sbb
mov
mov
mov
pop
jb
push
leave
xchg
mov
xadd
mov
dec
cmp
xchg
mov
gs
je
stc
inc
mov
mov
pop
jmp
pop
aaa
int3
jbe,pn
aas
add
add
sub
loopne
push
cmp
stos
popf
xor
mov
pop
sub
daa
lea
xchg
sub
rcr
subb
mov
mov
popa
jmp
pop
fucomp
loop
inc
fidivs
mov
ljmp
loop
cmc
adc
push
pop
sbb
push
or
add
outsl
mov
cltd
jne
and
jge
divl
pushf
cmp
pop
mov
fsubp
mov
or
inc
out
lods
mov
in
mov
mov
rcl
lods
in
cmpsl
scas
repz
test
lods
fs
sbb
mov
leave
sub
dec
movsl
cmp
pusha
cld
outsl
sub
dec
fnstenv
hlt
outsl
out
test
lds
sbb
mov
jecxz
mov
pop
mov
dec
into
ffree
out
nop
xlat
or
inc
adc
mov
sbb
lret
inc
out
mov
lret
incb
mov
sbb
mov
scas
loopne
mov
aad
mov
dec
mov
ljmp
mov
aam
gs
aad
fistpll
add
jnp
loope
pop
and
push
sub
loop
or
icebp
cli
jge
ret
js
or
rorl
ss
fs
xor
out
outsb
repz
mov
add
movsb
pop
inc
jne
jne
cmp
mov
pushf
shlb
cmp
push
cmpsl
das
cli
inc
or
movsb
jae
jb,pt
mov
fnstsw
test
jnp
clc
mov
into
sub
and
mov
add
mov
lret
dec
fistpl
out
mov
cltd
push
mov
xchg
sub
cmpsb
fmuls
lahf
xchg
adc
xchg
or
outsb
mov
popa
lods
xchg
aad
cs
loopne
mov
mov
frstor
push
lahf
out
jae
jg
pop
xchg
popf
dec
scas
pop
popf
fwait
shr
xchg
add
andl
inc
mov
hlt
iret
jp
add
loopne,pt
pusha
or
mov
fsubl
les
mov
pop
stc
jl
andl
stos
das
lods
and
enter
js
pop
or
mov
sti
sbb
insl
and
jmp
push
hlt
loopne
ds
xchg
mov
cmp
hlt
orb
lock
push
mov
push
cmpsl
mov
xchg
ja
sbbl
jne
jmp
sbb
and
pop
test
stc
stc
dec
or
lods
sbb
sti
jb
data16
scas
aas
mov
inc
adc
jae
xor
js
pop
orl
fs
xor
jnp
push
xor
add
inc
int
xchg
popf
lcall
in
lea
rorb
xchg
pop
lcall
xor
pop
addb
sbbb
sbb
repz
lods
repnz
fidivl
outsl
jg
ljmpw
push
lds
pmulhuw
test
scas
inc
jecxz
sub
pop
into
and
andb
sbb
lods
movsb
push
stos
cmpsl
jnp
cli
mov
mov
mov
jg
scas
pop
out
inc
push
in
loop
ss
or
adc
popa
fstl
outsb
sub
mov
mov
lcall
rcll
in
mov
mov
ss
pop
das
add
punpcklbw
scas
mov
movsb
out
lock
rclb
fldt
call
xchg
add
pusha
pop
xchg
xchg
std
sub
or
jne
dec
mov
push
jg
dec
inc
add
shll
and
push
and
push
sbb
xor
fsts
jge
jo
ror
xor
xor
cmp
std
aad
js
cwtl
push
jbe
inc
lods
shll
loopne
pop
cmp
test
shrd
les
repnz
and
cmp
xor
cmp
out
and
cmp
icebp
jecxz
enter
in
das
xor
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
cvtpi2ps
add
xor
inc
ficoms
roll
outsl
cmpsb
pop
cmp
xor
push
push
loopne
fwait
icebp
xchg
js
std
cli
jae
pop
xor
mov
jmp
lock
add
push
in
cwtl
cmpsl
mov
sbb
in
or
mov
cmpsl
mov
sbb
xor
xor
das
dec
ja
jle
pop
pop
xchg
dec
mov
or
xchg
jo
insb
subb
mov
jb
imul
decb
leave
fs
jns
jns
out
sub
icebp
pop
fists
cmp
cli
mov
and
outsl
or
xchg
inc
sbb
test
and
test
pop
add
out
test
xor
xor
adc
jp
and
pop
sub
or
pusha
scas
js
dec
cltd
mov
ss
int
mov
inc
inc
push
mov
mov
loopne
jge
sub
add
lock
stos
push
and
arpl
lcall
jb
mov
pusha
mov
insl
sub
dec
lret
push
lea
fdivs
rcr
ljmp
inc
sub
cmpsl
shrl
sub
dec
fmuls
mov
idiv
hlt
aas
jo
mov
push
stc
lea
cmp
stos
movsl
sbb
out
push
loop
sub
int
es
cs
cmp
sub
fiaddl
sbb
pop
xchg
outsl
ja
insb
sbb
ds
sarb
incl
nop
cmpsl
adc
aas
jne
jno
mov
add
fists
js
xchg
push
and
and
ja
mov
repz
inc
test
clc
xchg
data16
mov
xorb
push
lods
repnz
rclb
jne
xor
mov
xor
ds
cmpsl
push
mov
subb
mov
leave
sbb
mov
mov
out
dec
mov
jge
mov
push
std
imul
fcmove
pop
mov
pop
jmp
xor
shl
inc
xor
stos
dec
into
test
cwtl
sbb
push
repnz
pcmpgtb
mov
int
sahf
outsb
fwait
lret
cli
and
push
pop
sbb
mov
mov
mov
aad
in
sahf
mov
sub
mov
cmpsb
xor
mov
sub
dec
fprem
orl
dec
and
push
xor
or
inc
cmpsl
test
popa
lds
pop
mov
cltd
push
sti
les
or
movsb
outsb
and
call
aaa
dec
leave
cmp
mov
clc
shl
stc
jae
xor
cmp
lahf
xor
andl
jns
xor
std
mov
adc
stos
rorb
push
sarb
fstpt
adc
shll
dec
add
push
pop
add
inc
ret
mov
push
jae
bound
out
lods
pop
andl
pop
cmc
xor
sub
int3
test
jecxz
mov
and
sti
aam
in
sbb
jg
or
mov
sub
pop
pxor
inc
mov
push
adc
hlt
pop
and
sub
jbe
pop
mov
add
call
mov
inc
jle
jecxz
outsl
xchg
xor
cmpsl
mov
lods
orl
out
js
lods
xor
push
in
icebp
orb
xchg
adc
lret
push
pop
scas
push
pop
pop
aad
push
fsubs
mov
outsl
mov
push
dec
push
sbb
mov
sbb
stos
scas
adc
loopne
fildll
add
ljmp
inc
lahf
jno
outsl
sbb
sub
pop
cmp
pop
jecxz
xchg
push
dec
rol
mov
mov
scas
add
inc
inc
push
jnp
adc
mov
push
xchg
pop
cmp
enter
push
mov
inc
xlat
mov
adc
jno
jmp
data16
std
repz
xor
filds
movsb
jmp
adc
pop
repz
out
add
sub
inc
sbb
xchg
lret
aas
cmp
mov
adc
xchg
rcll
loop
pop
sahf
jb
insb
push
xor
add
arpl
pop
jle
test
dec
jge
lods
mov
cmpsb
int3
add
push
xorl
inc
xchg
mov
and
xlat
les
sbb
push
fwait
pop
cmpsl
push
pop
mov
inc
adc
loop
icebp
movl
mov
push
push
rclb
arpl
bound
or
adc
add
dec
loope
or
and
aaa
push
stc
rol
mov
jb
scas
shll
pushf
lods
pop
cmc
into
jae
sbb
or
or
rclb
jmp
adc
or
in
dec
sub
add
pop
xchg
or
mov
push
pop
aad
lret
and
icebp
shrl
test
jg
pop
call
in
aaa
les
mov
xor
aaa
push
aam
add
or
or
ss
loop
push
inc
addr16
inc
addl
cmc
xor
movsl
lahf
cld
mov
nop
or
addb
jl
add
xor
sbb
cmp
push
xchg
sbb
scas
lret
stos
and
iret
pop
insl
jle
or
test
aas
push
loope
test
mov
in
add
bnd
sbb
sbbl
jae
in
adc
xlat
aas
cs
movsb
shl
cmpl
imul
popf
psrld
idiv
and
mov
lret
mov
scas
fcompl
or
nop
pop
push
bound
cmpsb
jp
jns
xor
and
dec
xchg
pushf
es
and
sbb
cmp
xor
xchg
ja
pop
push
pop
popf
fwait
outsl
insl
fistl
std
hlt
cwtl
repnz
sbb
sbb
sbb
mov
adc
sbb
dec
mov
cmp
hlt
sbb
outsl
icebp
inc
stos
mov
ja
repz
push
dec
lret
jbe
or
or
push
sbb
xor
dec
sarl
test
inc
jae
or
stos
test
push
test
mov
pop
scas
sub
sti
mov
or
push
dec
push
leave
sahf
jle
imul
add
cltd
mov
and
cmp
xor
mov
ds
out
inc
loopne
out
bound
sub
mov
sub
and
insl
js
shll
rclb
dec
xchg
push
cmp
into
and
icebp
dec
fucomp
adc
jle
mov
adcl
xor
in
xchg
shrb
push
adc
pop
pop
push
pop
pop
sbb
test
lock
inc
xchg
jnp
cmp
loop
repnz
or
sub
shll
scas
pop
mov
fs
bound
leave
int3
mov
push
mov
push
xchg
aam
jp
push
mov
mov
mov
js
test
roll
inc
and
idiv
jo
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
pop
cmc
jmp
ja
xchg
cmp
xchg
mov
daa
ss
xchg
cmpb
loop
push
stos
lret
test
test
and
rcr
sti
or
outsl
fs
adc
in
sbb
inc
push
mov
add
nop
mov
les
jns
hlt
iret
pop
iret
mov
jp
lea
dec
lcall
pop
mov
inc
cltd
mov
in
adc
sub
mov
outsb
add
scas
out
bound
popa
aaa
call
pop
cwtl
xor
loope
out
pop
mov
mov
icebp
sbb
mov
dec
aaa
jo
inc
lds
movsb
int
pop
lret
pop
setge
mov
xchg
xchg
rcl
dec
pop
push
push
enter
icebp
xchg
out
and
stos
jbe
and
jmp
mov
jmp
xor
jle
push
outsl
in
mov
adc
ss
inc
shrb
pop
dec
push
jno
pop
cmc
clc
cld
movsl
sarl
in
pop
in
jnp
pop
loop
mov
add
cmpsb
cmc
scas
popa
and
pop
cmp
mov
dec
jns
add
rcrl
insb
add
sub
frstor
push
ret
es
or
jmp
jg
scas
sbb
in
mov
inc
imul
pop
lcall
push
jne
leave
and
mov
lret
test
xor
xor
enter
aaa
and
loopne
subb
push
jl
ret
call
or
repnz
je
gs
pop
aad
xchg
in
scas
mov
add
mov
lds
cli
int
test
aam
and
movsl
inc
ljmp
jp
xchg
pop
push
adc
shlb
mov
fs
jp
sarb
ret
call
pop
sub
fdivrp
mov
cmp
into
ret
dec
je
testb
testb
stos
in
vmread
repnz
cltd
add
jge
jo
mov
xor
mov
into
xchg
adc
pop
sbb
mov
adc
daa
add
push
sbb
xchg
mov
jne
cmp
icebp
into
jecxz
adc
jbe
xchg
mov
in
out
jns
das
je
clc
jnp
pop
cli
jmp
push
das
add
cmp
jbe
mov
mov
aaa
mov
insl
xchg
push
in
mov
adc
sbb
arpl
movb
into
pop
loope
push
adc
inc
xor
scas
out
shlb
data16
fs
jmp
jo
xor
sahf
inc
push
insl
pop
mov
pushf
fadds
and
sbb
fwait
test
cs
shlb
jg
mov
mov
sbb
lahf
xchg
or
sahf
es
pop
repnz
data16
addl
frstor
mull
push
iret
cwtl
dec
sub
cmpsl
ja
ja
rcrb
add
lds
cmc
dec
call
imul
xor
xor
adc
pop
inc
pop
stos
pop
inc
or
jno
and
sbb
lds
mov
xor
mov
mov
push
jbe
ss
or
push
cmp
mov
fidivrs
lock
xor
sub
adc
sbb
call
sub
lahf
pop
jmp
out
xchg
inc
inc
andl
es
out
push
and
call
sub
gs
lods
pusha
lods
in
shlb
push
enter
ja
cli
xchg
sbb
fs
js
or
xor
test
lcall
ret
fildll
lods
push
adc
mov
cmp
mov
and
out
dec
sub
mov
adc
testl
xchg
fnstenv
mov
pop
adc
insb
pusha
movsl
or
fs
mov
cmp
xor
stc
fidivs
and
out
inc
mov
int3
mov
push
test
je
shlb
mov
roll
pop
pop
xchg
inc
clc
imul
outsb
inc
xor
movsb
dec
mov
pop
lods
call
cmpb
lcall
mov
and
bound
jae
cmpb
sbb
sbb
mov
sahf
push
mov
xor
ja
jge
movsl
push
xchg
jmp
inc
lret
xlat
add
out
push
sbb
popf
push
stos
fildl
mov
mov
pop
movsb
xor
imul
lods
mov
push
test
in
sbb
mov
cli
sbb
insl
lock
pop
sub
rcrb
rcrb
lock
mov
dec
enter
or
sti
ljmp
cmpsl
jbe
inc
pop
roll
pop
cmpsb
cmp
cmp
mov
adc
rcrl
dec
pop
sahf
add
in
jbe
notb
push
bound
rcrb
insl
xorb
cmp
paddusw
test
dec
je
sahf
movsw
out
pop
xor
xor
add
stos
popf
loope
push
cmc
bswap
hlt
aad
nop
scas
mov
mov
in
pop
shrl
into
and
pop
cmc
movsb
sbb
stos
inc
xchg
mov
arpl
add
loop
dec
stc
push
test
jp
xor
adc
push
xor
rorb
adc
fwait
push
enter
dec
sub
push
mov
addr16
mov
jg
andb
popf
das
inc
test
dec
fcmovbe
pop
jg
rcr
mov
xchg
addr16
data16
or
mov
sbb
into
jecxz
and
out
adc
test
cmp
stos
mov
and
xor
xchg
xor
std
push
inc
and
mov
mov
inc
dec
mov
mov
pop
push
lea
outsb
jecxz
std
adc
dec
andb
jno
xchg
mov
push
push
sbb
cltd
xor
fisubs
push
push
nop
fmul
mov
in
das
push
out
dec
jbe
mov
iret
lock
jo
iret
scas
dec
inc
mov
dec
or
sbb
cmp
xor
loope
mul
xchg
inc
xchg
pop
add
pop
aad
out
sbb
add
xlat
shl
insl
pop
out
jnp
mov
mov
xchg
sbb
xchg
dec
enter
lods
mov
jmp
mov
jmp
clc
jbe
pop
pop
jne
int
cmp
loop
lock
jl
xchg
cmp
fldt
lahf
pop
addr16
lcall
das
mov
sarb
rcl
jnp
fcoms
push
jl
and
cmp
xchg
dec
insl
jl
dec
dec
addr16
mov
pop
fbstp
cwtl
mov
lods
push
fistpll
xchg
fildl
lock
in
push
mov
cld
stos
xor
jp
mov
xchg
shll
sbb
ljmp
add
outsl
inc
xlat
out
sub
sbb
ljmp
in
and
icebp
or
out
xor
dec
fdivs
int3
mov
pop
fimuls
add
mov
fsubrp
jns
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
dec
push
pop
add
ja
dec
xchg
pop
ss
or
add
ds
pop
std
outsb
sbb
call
inc
add
mov
out
fimull
int3
mov
adc
mov
xchg
dec
sub
fldt
and
mov
pushf
test
clc
push
mov
les
sub
adc
mov
push
push
adc
lea
mov
lret
ret
xlat
addb
cmpsl
add
cmp
mov
lds
or
push
add
cltd
pop
clc
mov
out
mov
cmpl
in
or
cwtd
cmc
inc
std
gs
inc
xchg
or
cmc
outsl
fildll
mov
movsb
fiadds
mov
push
ljmp
stos
in
imul
dec
mov
adc
into
scas
movsl
push
in
adc
imul
adc
insl
testb
add
cmp
dec
adc
jnp
sti
pop
pop
cmp
fs
mov
mov
loope
sub
inc
pop
popl
cmp
adc
mov
sub
sbb
iret
dec
icebp
jl
lret
mov
push
xchg
gs
pop
in
sub
xor
sbb
pop
jmp
cmp
pop
mov
test
xchg
push
sub
and
dec
xor
fs
push
stc
jns
test
adc
and
mov
out
in
push
sub
sahf
jmp
fstpl
sub
je
insb
ror
and
push
shlb
jecxz
lods
mov
mov
in
sub
sub
jo
test
jo
lahf
gs
pop
int
push
dec
jae
xor
sub
mov
xor
movsb
xchg
jns
add
imul
add
push
sbb
mov
or
iret
lods
icebp
vzeroupper
mov
outsb
test
jo
daa
mov
adc
push
data16
movsb
int3
mov
sahf
gs
sub
push
mov
xchg
mov
jnp
inc
sub
dec
xchg
sub
roll
insl
lods
mov
ret
xchg
dec
cmc
add
mov
dec
enter
push
xor
xchg
fsubrs
insl
lea
xor
arpl
inc
je
stc
mov
test
dec
leave
divl
or
pop
add
daa
pop
dec
and
xchg
pop
xchg
and
pop
xchg
std
push
xor
js
fcmovnb
jmp
jnp
jae
xchg
jo
dec
enter
pop
inc
cld
and
das
sbb
shll
ljmp
int3
push
out
das
push
mov
cmp
add
cmc
loop
insl
out
fadd
ror
and
test
sub
insl
outsl
cmp
sub
jle
and
inc
inc
dec
or
push
gs
adc
jae
pop
pop
fsts
aam
dec
mov
add
inc
loope
fcomps
xor
test
flds
xchg
ret
cli
xorb
pop
ficompl
jp
adc
bound
stos
xchg
add
mov
mov
adc
lahf
idivb
add
mov
bound
repnz
inc
push
out
add
pop
imul
mov
xchg
xchg
cmp
mov
mov
outsb
adc
cmp
cli
inc
xchg
cmp
cmp
pop
cld
aaa
pop
and
push
enter
sub
mov
inc
push
adc
or
or
jb
or
js
mov
jno
jp
stos
loope
xchg
push
icebp
xor
push
jae
les
fsubr
es
cmp
sbb
sti
mov
leave
int
test
pop
movsl
jecxz
jmp
cmc
and
pushf
bound
mov
aad
lret
test
bound
popa
test
jno
jnp
xor
pop
adc
add
or
fildl
fstpt
mov
push
pop
test
push
jmp
int3
adc
inc
lcall
push
das
jo
push
push
popa
dec
insb
stc
add
push
inc
mov
mov
inc
mov
jge
push
jl
aaa
fsubrs
subl
sub
dec
dec
fldenv
je
adc
xor
into
push
or
shlb
jge
mov
mov
leave
pop
and
and
pop
imul
rorb
xchg
jle
add
loop
fucomp
dec
xorb
adc
ds
clc
sub
pushf
lds
sbb
cmp
in
rolb
addr16
bound
dec
testb
push
imul
sahf
inc
rclb
lods
and
mov
je
push
bound
dec
add
lods
push
push
sbb
pushf
inc
repz
jb
in
inc
pop
cltd
jo
lret
cwtl
je
cmpsb
lret
test
into
mov
push
fidivrs
cs
cwtl
mov
dec
pop
xor
ret
fbstp
stos
mov
int3
es
dec
repz
adc
jbe
movsb
aaa
loop
sub
and
jle
sti
xor
jns
int3
jnp
lock
mov
hlt
mov
imul
pop
mov
fdivr
xor
jae
cmp
push
cs
jl
lock
xchg
fstpl
push
jnp
inc
or
enter
lret
out
out
xor
dec
sub
or
ror
mov
ror
add
inc
call
dec
mov
and
mov
dec
gs
cmp
ret
push
shrl
lret
dec
push
cmp
lods
lock
mov
pop
aam
push
mov
mov
cli
push
and
stos
and
aam
ret
dec
ficoms
pusha
pop
stos
scas
jns
fidivrl
sbb
jns
push
or
cmp
loope
negl
test
inc
cld
ret
into
sub
or
pop
adc
adc
loopne
andb
nop
pop
fs
xchg
out
and
mov
mov
inc
push
cmp
pop
sahf
xchg
sub
aam
aaa
pushf
sub
adc
sahf
push
imulb
jle
stc
into
adc
test
mov
push
jns
in
adc
stos
sub
jg
iret
dec
push
pandn
int3
outsl
sbb
fnstsw
loope
fadds
imul
ss
repnz
nop
dec
cld
dec
pop
pop
out
or
mov
gs
or
mov
rcrl
push
cltd
and
repnz
ja
into
fwait
mov
arpl
lods
test
fnstenv
xchg
dec
lret
push
in
jg
inc
push
xor
iret
mov
adc
mov
jns
mov
lods
out
sbb
cltd
test
jle
fldt
mov
or
data16
movsl
sub
mov
rcrl
std
mov
shlb
shr
pop
add
cmp
adc
mov
test
xchg
repz
xchg
sub
mov
movsb
mov
add
push
fidivs
popa
push
mov
dec
mov
idivl
lods
dec
push
inc
mov
insb
xchg
mov
sub
or
cmp
pop
add
daa
inc
dec
dec
inc
enter
xor
xchg
sub
pop
sbb
jns
mov
shl
lods
dec
xchg
adc
popa
into
push
movsb
loopne
pop
daa
imul
pop
jae
push
mov
xor
outsl
mull
xchg
push
push
xchg
or
pop
fdiv
sub
int
xlat
sub
scas
leave
xor
cmpsb
bound
hlt
fcmovbe
cmpl
movsl
xor
xor
das
daa
sbb
mov
das
ret
xor
dec
pop
aaa
bound
or
leave
fidivrs
lcall
lahf
addb
add
push
loope
jb
rolb
or
push
gs
inc
or
pop
dec
xlat
imull
test
jl
adc
xor
mov
adc
pop
je
vshufps
outsb
into
adc
add
insl
popf
xor
mov
and
mov
or
je
shll
lods
sbb
stos
les
lcall
pop
sub
xchg
mov
das
or
jns
sti
loope
or
inc
cmp
sub
and
jp
sti
mov
pop
mov
add
mov
mov
push
adc
dec
gs
aaa
jb
dec
dec
ja
or
iret
daa
repnz
or
repnz
stc
sti
xor
or
out
or
int
les
loope
jae
lock
sbb
sbb
stc
push
jb
fistl
shrl
pop
inc
push
stos
roll
xchg
mov
sbb
mov
and
sub
rclb
aaa
out
hlt
and
sub
push
mov
mov
jnp
and
mov
xor
pop
xchg
jmp
xchg
mov
inc
test
sub
jle
mov
mov
and
shll
movsl
inc
andl
xchg
push
das
stos
mov
leave
xchg
mov
mov
ljmp
cmp
mov
inc
sbbl
xchg
sti
aas
lods
and
jg
mov
rcr
xor
scas
into
xchg
dec
mov
sarb
outsb
imul
xlat
in
cmpsb
cltd
dec
mov
sbb
fs
xlat
xor
or
cmp
dec
sub
pop
mov
fwait
and
adc
mov
adc
mov
or
dec
inc
repnz
xchg
nop
jnp
lock
jp
jns
arpl
cld
out
xor
hlt
lcall
fnstsw
jb
and
fnstsw
jp
mov
pop
or
adc
hlt
cmc
aad
and
stos
xchg
les
sahf
pop
push
adc
add
xchg
jl
imul
and
movl
pushf
mov
mov
sahf
shlb
lahf
ss
adc
xor
mov
and
inc
or
clc
insl
cmp
mov
lret
mov
sub
mov
or
dec
jl
divb
loope
pop
test
add
sbb
push
ret
mov
int
cmp
pop
sti
jo
pop
sbb
movsl
decb
adc
iret
sahf
loop
xor
cmpsb
test
sbb
imul
mov
inc
mov
sub
xchg
sarl
cmpsb
lock
sbb
mov
push
mov
dec
add
jnp
mov
xchg
hlt
fcmovb
sub
jecxz
xor
or
xor
cmpsl
add
mov
mov
add
push
jl
lret
push
cmp
fs
mov
pusha
sbb
jns
loop
inc
sbb
cmp
adc
xor
push
addb
loop
insb
adc
pop
adc
scas
out
pop
orl
ret
repnz
movzbl
sbb
or
push
ss
in
test
inc
cmpsl
sub
mov
cmpsb
and
negb
push
fs
lods
or
loop
pop
sbb
int3
lock
mov
hlt
sahf
pop
rorl
popa
int
lret
and
ljmp
push
jmp
dec
test
insl
and
dec
add
outsb
stc
daa
xchg
mov
imul
adc
xchg
aam
xor
adc
fnstsw
repnz
fldenv
stc
out
lock
stos
mov
outsl
xchg
nop
dec
inc
insb
jl
aaa
les
enter
ret
inc
pop
fidivs
mov
dec
nop
jae
or
shl
lret
out
cmp
subl
daa
sub
jmp
adc
ret
adc
push
adc
push
dec
pop
adc
shrb
pop
pop
rolb
sbb
xchg
loop
stc
out
addr16
in
hlt
rorb
sub
psubw
jp
xor
dec
jmp
scas
push
orl
ljmp
rcl
outsb
dec
cmp
dec
rcrb
xchg
sbb
xchg
sti
pusha
xchg
movsl
fs
adc
inc
sbb
jl
fists
xchg
lods
pusha
jl
out
andb
xchg
enter
cltd
pop
std
insl
lods
and
mov
xchg
mov
mov
sbb
rcl
add
movb
mov
adc
sbb
sub
mov
push
dec
and
push
inc
jle
je
jg
sub
push
push
out
cmp
movsl
push
gs
data16
mov
xchg
push
dec
push
fimull
sub
daa
stc
cltd
subb
test
xchg
mov
dec
int
sub
push
mov
jp
lret
fstpl
add
xchg
sbb
lods
mov
mov
mov
jg
sti
dec
pop
xlat
out
and
loope
mov
mov
push
pop
or
dec
push
xor
pushf
sub
clc
scas
dec
shlb
scas
dec
shrb
repnz
fcomps
daa
cmp
mulb
cs
loop
mov
push
inc
jmp
aaa
mov
popa
mov
das
xchg
mov
arpl
add
data16
fstps
dec
negb
iret
sti
inc
mov
int
add
or
adc
pop
xor
jmp
scas
push
pop
sub
fbstp
jl
push
fsubs
add
mov
in
insb
sbb
cmp
scas
enter
xchg
clc
stc
inc
and
je
in
lds
lods
inc
repz
hlt
mov
insl
ss
or
sub
jbe
jno
in
into
in
sbb
jle
or
stc
aad
inc
xor
aad
push
cltd
push
cli
test
inc
xchg
dec
mov
push
dec
push
cmp
push
shll
jp
imul
sbb
push
movsb
push
mov
jne
cmp
decl
loopne
xchg
cmpl
daa
jns
xchg
mov
clc
mov
and
cmp
loope
ljmp
mov
js
lret
loop
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
mov
test
add
push
push
lods
or
lea
pusha
cmp
xchg
divl
fisubrl
push
jns
xchg
les
sbb
inc
and
push
daa
in
jmp
add
in
sahf
add
pop
call
loop
repz
scas
adc
mov
lret
shlb
push
cmp
fucomi
sbb
xchg
pop
cmp
jg
sti
test
clc
jb
pop
dec
pushf
ret
ret
sub
call
cmp
cwtl
pop
leave
inc
js
out
and
pop
dec
daa
imul
ja
dec
in
aas
cmp
aam
push
push
mov
mov
cmc
fisubl
pop
mov
sbb
mov
popf
ja
cmp
push
cmp
inc
mov
add
mov
in
adc
jnp
fs
mov
mov
mov
mov
cli
daa
push
xchg
hlt
push
int3
pop
outsb
xor
xchg
out
dec
jecxz
push
push
orl
push
pop
sbb
shrb
mov
jge
cwtl
orb
scas
scas
loop
or
fmuls
in
cltd
mov
xchg
jae
das
stos
xlat
pop
leave
cmc
pop
roll
lahf
incl
dec
nop
pushf
push
jg
pop
sbb
ds
decb
inc
stc
fiaddl
fisubs
cmovae
inc
push
wrmsr
mov
mov
xchg
fucomp
mov
xor
test
jno
jle
repnz
fmulp
or
shll
inc
insb
rcll
fmull
xor
mov
sar
repnz
and
imul
cld
lods
enter
insl
mov
nop
shl
inc
dec
inc
push
out
das
cmp
xchg
ds
or
mov
lea
add
or
pop
call
push
rep
mov
test
dec
ftst
and
xor
jl
sub
out
push
jae
sbb
xchg
push
adc
arpl
in
in
repz
cmp
inc
fsubl
popa
in
dec
or
arpl
sbb
leave
xchg
pop
ja
fisttps
or
rcll
fidivl
insl
loopne
xchg
int3
mov
pusha
in
cltd
mov
js
cmp
das
rol
and
in
insl
mov
roll
cltd
mov
pop
dec
pop
ja
xor
out
push
lods
pusha
add
rcrb
push
cmp
repz
add
mov
and
rol
pop
lods
push
mov
test
rorl
cli
je
push
fcmove
cmp
subb
sbb
lret
jb
in
in
std
imul
cli
xor
pop
lds
pop
cs
jno
mov
inc
loop
movsb
adc
bound
add
or
jp
movsb
lock
jae
idivl
xchg
inc
cli
scas
xchg
lea
lahf
mov
mov
and
cmp
push
push
mov
fwait
xchg
and
cmp
in
and
lds
and
sti
mov
or
xlat
int3
loopne
push
mov
fwait
mov
xor
gs
fsubrs
add
mov
inc
or
inc
lahf
popf
insl
add
pop
xorl
nop
mov
stos
jbe
insl
fwait
loop
mov
shr
out
outsb
scas
sbb
mov
mov
insb
push
fmulp
inc
movsl
mov
fbstp
ud0
jp
and
pop
or
lcall
jecxz
inc
mov
into
jns
repnz
mov
imul
adc
jge
sbb
test
dec
lods
xchg
das
mov
in
cmp
les
into
and
lea
arpl
lds
mov
shll
or
mov
adc
pop
aad
fisttpl
inc
push
mov
and
fadds
loop
mov
pop
inc
push
leave
lret
aam
mov
daa
push
xchg
inc
mov
push
add
pop
cmp
xor
fnstsw
rclb
xchg
and
cmp
fmuls
stc
xchg
or
mov
outsb
adc
push
lcall
orb
jae
mov
and
fdivrs
test
add
popa
xor
idivb
out
aaa
sub
rcll
cmc
repnz
or
mov
mov
sahf
jl
xchg
jb
jno
loope
iret
sub
inc
mov
rol
ffree
mov
cmc
mov
rcrb
ret
out
cmp
adc
fdivs
mov
divl
cmp
call
sub
gs
xchg
cmc
pop
pop
outsl
iret
test
mov
cmp
push
mov
mov
mov
clc
aad
sbb
inc
adc
push
std
lea
mov
mov
mov
mov
pop
mov
mov
fnstcw
test
add
in
mov
sub
jns
dec
in
cwtl
mov
ljmp
lret
jl
ja
pop
jmp
in
mov
sbb
or
cli
ja
jnp
int
pop
scas
into
aas
jno
pop
or
xchg
fdivrl
add
dec
jmp
je
push
fwait
push
inc
in
mov
outsl
faddl
xor
call
fmul
bnd
popf
lsl
inc
add
push
cli
xor
dec
lods
outsb
sbb
insb
fimuls
iret
mov
stos
out
xchg
sti
xchg
in
add
push
push
xor
ss
cmp
add
cltd
xchg
stc
mov
loop
pop
xchg
hlt
cltd
in
xchg
rclb
mov
leave
cld
push
jl
jl
mov
orl
adc
dec
and
loopne
cmpsb
jnp
pop
pop
xor
pushf
adc
push
inc
lods
imul
aad
jne
cltd
shl
dec
xchg
andl
sbb
sbb
jns
test
jb
sbb
sub
mov
inc
ja
dec
js
mov
cmpsb
and
in
fstl
adcb
mov
shlb
adc
test
mov
inc
clc
test
inc
jne
xchg
jg
aaa
inc
inc
cmp
loopne
aas
or
sub
cmpsl
in
repz
push
and
jne
mov
std
clc
dec
out
pop
inc
xchg
mov
pop
jmp
sub
rorb
repnz
mov
and
mov
sti
sti
mov
xchg
pushf
mov
out
test
fcompl
push
adc
pop
lret
cltd
adc
fcmovnb
mov
leave
jmp
aam
push
stc
xor
das
and
ljmp
inc
push
pusha
int
imul
mov
adc
push
iret
xchg
cld
sbb
mov
sub
push
push
jno
imulb
inc
je
xchg
sub
repnz
push
inc
divb
add
xor
pop
leave
lret
ljmp
pop
cltd
xchg
stos
push
dec
dec
xor
xor
insl
lods
test
fcomps
lock
dec
inc
in
fmull
jmp
ljmp
sub
ret
and
ja
pusha
mov
adc
movsl
xor
test
popf
repz
fwait
dec
pop
jne
or
or
pop
shll
nop
fsubs
xor
cli
outsl
imul
adc
sbb
xor
lret
mov
xchg
push
push
mov
ljmp
jno
leave
fcompl
cld
dec
mov
or
pop
aas
sbb
mov
ror
ljmp
fwait
decl
in
in
popa
jge
adc
sahf
negb
pop
dec
fnsave
dec
push
sbb
mulb
insb
xor
test
adc
imul
add
push
dec
hlt
repnz
out
outsl
pop
pusha
and
jne
push
sarb
lahf
cmc
in
jp
scas
pop
sub
movsl
cli
fsubrs
test
sarl
testl
xor
scas
popa
std
mov
rcrb
mov
outsb
mov
sub
test
pop
jo
and
adc
shrl
xor
dec
dec
mov
lea
outsb
dec
adc
sahf
cmp
sarl
mov
addr16
aas
testb
cmp
in
push
and
mov
movsl
fistpll
dec
mov
paddsw
mov
mov
test
idivb
ja
cmp
push
add
and
insb
mov
cltd
xchg
jge
notb
pop
cmpb
lds
mov
mov
lret
ret
xchg
idivb
push
mov
jnp
inc
mov
inc
loop
gs
mov
sbb
sub
fistpll
push
movsb
popl
mov
popf
fpatan
cmp
push
fcomps
jne
add
or
mov
and
push
sbb
sub
orl
mov
and
mov
xor
inc
inc
dec
ss
test
jb
pop
dec
cld
enter
mov
inc
imul
ljmp
addr16
js
jle
jecxz
pop
repz
lea
jo
aas
cmc
xor
xor
shlb
mov
inc
xchg
pushf
mov
lret
int3
aaa
push
gs
cs
inc
adc
add
scas
or
cld
push
sub
cwtl
repz
fbld
cs
xchg
adc
sarl
mov
js
popf
and
loope
jb
xor
stos
pushf
stos
loope
std
clc
dec
shll
pop
cmp
adc
mov
inc
sub
jle
or
cwtl
push
pop
jmp
outsl
cmpsl
test
aaa
je
add
inc
scas
xor
cmc
sarb
mov
nop
push
pop
dec
mov
mov
dec
hlt
lock
dec
ficompl
or
jle
pushf
scas
rorb
fucom
pushf
lods
enter
call
and
gs
cmpsl
cwtl
xlat
mov
pop
xlat
or
aad
xchg
pop
hlt
inc
std
les
pop
or
cmp
mov
lret
xlat
lds
or
push
jge
lahf
in
test
and
mov
iret
rorb
cltd
mov
jo
clc
mov
pop
xor
pop
pop
and
dec
into
lahf
jbe
repnz
push
push
inc
lds
andl
push
out
int3
testl
sub
push
jno
es
mov
shlb
lea
stos
pusha
xchg
inc
bound
push
mov
aaa
mov
adc
jg
cmpsb
insl
ljmp
fwait
mov
mov
lock
mov
pop
in
mov
inc
dec
mov
fs
ret
pop
sti
pop
iret
jbe
push
cmp
and
fidivs
add
test
in
lret
mov
mov
or
test
or
sub
and
pop
inc
adc
xchg
das
ja
stos
les
xor
arpl
shlb
adc
lods
faddl
and
hlt
mov
xlat
fisubrl
push
xor
push
aaa
push
sub
data16
sub
jb
sbb
push
add
lahf
push
jp
outsl
mov
sub
jb
xor
dec
pop
sbb
mov
mov
push
sbb
cld
dec
out
shrb
inc
add
ljmp
xchg
in
sbb
add
test
sarl
and
pop
sbb
cli
lahf
mov
mov
dec
lret
pop
jmp
adc
xor
iret
sbb
xchg
imul
lea
jle
aad
cmpb
xor
es
push
inc
dec
ljmp
sbb
sbb
cmpsl
jne
shrl
mov
sub
jecxz
sbb
or
aad
push
mov
jecxz
jmp
lods
lret
or
jmp
pop
and
pushf
and
mov
repz
mov
and
ficomps
cwtl
and
test
and
or
and
js
and
jl
mov
stc
push
popf
or
sub
sti
stc
or
jecxz
xor
ds
jp
iret
cld
js
pop
push
sbb
in
lods
lods
dec
cmpsl
mov
sub
fisttpl
mov
sti
jmp
mov
inc
inc
pop
dec
imull
test
lahf
ja
or
xor
push
xor
sbb
in
arpl
imul
cwtl
xor
xchg
xor
aas
jecxz
in
lods
test
cmc
push
mov
add
and
dec
into
lock
sub
js
add
std
test
fbstp
sub
jmp
fwait
or
cmp
add
hlt
sbb
faddl
jle
xchg
push
lock
cmpsl
in
sub
sub
sub
imul
int3
jge
aas
pop
clc
sbb
mov
lcall
mov
mov
inc
xchg
jl
pop
push
lcall
push
mov
jno
xchg
cltd
and
punpcklwd
pop
js
loope
sbb
jge
rorl
mov
mov
jmp
ds
cmp
push
bound
jg
call
insl
sbb
sub
jp
push
gs
fsubs
rclb
sarb
ss
sub
cmp
in
jecxz
int
mov
pop
fisubrl
lods
jl
xchg
fldcw
ret
dec
rorb
jb
pop
push
mov
cmpsb
adc
cmp
sbb
addr16
or
jmp
ljmp
inc
leave
shl
mov
fisttps
div
lcall
lods
pop
inc
mov
sahf
dec
cmc
outsb
xchg
adc
popa
adc
cwtl
rorl
xchg
jno
push
pop
push
and
aas
pop
fldt
outsb
adc
sub
push
xchg
ds
test
lret
cli
iret
daa
lret
lret
lods
in
sbb
push
mov
sub
xchg
cmp
not
in
fcoms
xor
add
mov
cmpl
jp
fwait
shlb
jb
hlt
inc
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
gs
pushf
xchg
aas
mov
movq
bound
or
and
add
pop
es
inc
jae
push
jbe
push
outsl
sub
call
push
pop
cmp
pop
aaa
loope
imul
cmp
and
mov
jno
roll
adc
arpl
sbb
jbe
xchg
out
pop
test
mov
xchg
adc
repz
lods
push
mov
push
ret
mov
xchg
cli
stc
loope
rol
test
aas
cmpsl
je
ds
xchg
add
stc
jmp
fstl
and
fwait
add
pop
out
inc
sub
mov
ss
mov
or
or
pop
jl
mov
xchg
sar
aas
js
xor
cld
pop
adc
and
mov
pop
lahf
sbb
les
jnp
es
sub
jle
int3
pop
or
or
xchg
xor
jle
add
adc
ds
mov
pop
jle
clc
popf
in
mov
inc
pop
movsb
jg
sbb
ss
pop
lret
into
test
or
stos
mov
ljmp
out
xlat
xor
dec
lcall
adc
test
clc
insl
jo
and
xor
faddp
pop
int
arpl
sarl
jmp
lods
jmp
xchg
push
mov
xchg
sub
lods
cli
jl
or
adc
xchg
push
clc
add
int
adc
and
mov
insb
sbb
jge
pop
push
aam
mov
jge
adc
cmpsb
nop
loop
repnz
in
inc
cs
add
js
cmp
shl
pop
aam
pop
cmpl
mov
lods
mov
xchg
jae
xor
inc
ja
ss
pop
fmull
shll
popa
push
outsb
lret
sbb
sar
outsl
cltd
loope
icebp
push
xchg
mov
sbb
scas
pop
rep
movsl
add
mov
lcall
ljmp
adc
dec
or
xchg
cmp
insl
cmp
incl
sbb
cmpsl
fucom
jmp
jecxz
into
jne
adc
loope
xor
add
cli
dec
add
xchg
fwait
xchg
and
shrl
ss
jle
dec
adc
xor
sub
mov
cmc
fidivrs
jb
push
lea
popa
popa
and
lcall
xor
add
mov
in
mov
bound
push
pop
dec
xor
mov
cmp
mov
jb
push
or
js
ret
mov
mov
jg
mov
push
dec
dec
mov
jnp
cwtl
mov
xchg
sub
mov
shl
cmpsb
push
cltd
out
or
shlb
repz
pop
jmp
mov
push
inc
jb
pop
cmp
jnp
dec
push
adc
mov
sub
cmp
mov
sbb
imul
pop
imul
repz
lock
repz
push
cmpsl
lods
xor
divb
sub
sub
and
fmuls
jge
or
cmp
out
shlb
mov
sbb
mov
jmp
nop
stos
cmp
sti
and
lret
loope
dec
xor
sbb
loop
dec
cmp
xchg
xchg
subb
aaa
clc
xchg
mov
sbb
pop
mov
repz
movsl
aas
rorl
out
aaa
je
and
fwait
mov
mov
test
sbb
movsb
aaa
outsl
xchg
push
mov
mov
dec
leave
dec
pop
sarb
rcr
int3
out
add
sahf
push
repnz
lock
in
mov
repnz
push
je
sub
add
and
mov
xchg
arpl
mov
sbb
adc
cmp
cmp
popf
xchg
and
cmp
pop
mov
dec
je
sub
std
rolb
or
add
in
add
pop
sbb
mov
or
shrb
aam
jmp
scas
pusha
fwait
pop
scas
xchg
push
sti
aas
push
pop
stos
xor
lret
mov
cmpsb
test
pushf
mov
mov
push
gs
lcall
aam
and
out
sub
icebp
test
lea
cmpsl
push
inc
mov
mov
jo
sbb
inc
push
push
dec
test
jnp
sbb
scas
ffree
fisttpll
sub
mov
sahf
xor
xor
add
shrl
lods
sti
fildll
nop
dec
fcmovne
stos
push
mov
adc
ret
stos
call
and
std
sub
push
add
add
and
xchg
dec
dec
int
rol
mov
push
rcrl
lea
mov
push
fwait
je
idivb
gs
fsub
scas
sbb
aam
pop
jle
or
scas
push
mov
cs
int3
cmpsb
push
mov
xchg
in
fcmovu
pop
hlt
sub
jge
push
loop
bound
call
mov
sbb
repz
push
addr16
cmp
mov
and
cld
jle
jns
jmp
cs
and
jns
pusha
xchg
lods
add
subl
test
dec
outsl
in
and
divl
cmp
and
lret
xchg
push
adc
adc
loope
movsl
xchg
mov
and
sahf
pushf
cmp
repnz
adc
aam
add
movsb
xchg
xor
cmp
cmc
inc
add
test
test
or
pop
mov
adc
loop
add
jp
mov
imul
sub
imul
push
aaa
xchg
push
sti
xchg
ficoms
daa
cmp
outsb
xchg
lods
inc
pop
cwtl
mov
fiadds
or
or
mov
in
sti
cmc
and
leave
push
std
repnz
cmp
jl
cltd
daa
insb
mov
pusha
push
and
call
out
xor
aaa
insl
outsl
pop
pop
insl
cltd
push
dec
add
mov
movsb
scas
popf
ror
lret
daa
jg
pop
mov
dec
push
and
push
test
inc
jg
push
mov
icebp
scas
mov
inc
mov
data16
adc
inc
sub
push
icebp
jmp
inc
inc
lods
aam
in
pop
call
mov
push
pop
stc
dec
lret
pop
sub
mov
dec
das
inc
mov
or
rorl
test
lock
inc
xchg
arpl
test
fs
push
or
xor
jp
std
mov
xchg
out
in
shlb
in
lock
outsl
loopne
push
or
pushf
mov
imul
cmpsb
jle
inc
aaa
mov
jbe
pop
cmc
push
mov
inc
pop
xchg
out
pop
lahf
mov
jge
popf
fstpt
mov
movsb
sub
pop
jmp
lock
faddl
and
imul
cltd
into
out
adc
enter
add
ljmp
imul
scas
sbb
xor
mov
jb
mov
adc
xchg
repnz
int
mov
arpl
xchg
xor
leave
arpl
xchg
mov
pop
mul
hlt
jne
mov
mov
mov
dec
or
popa
jp
push
addr16
sbb
fildl
xor
push
shll
add
imul
loop
fisubl
mov
cltd
xor
or
insl
sbb
cmpsb
mov
sub
push
inc
mov
xchg
addr16
ds
sbb
sub
mov
mov
fwait
mov
bound
cmp
xchg
sub
push
sub
add
adc
mov
mov
xor
out
cmp
dec
fwait
add
sbb
pop
arpl
adc
push
and
mov
adc
mov
shlb
push
mov
pop
je
dec
decl
jbe
xchg
sbb
mov
cs
adc
lcall
data16
out
lods
hlt
lock
jae
push
push
stc
rorb
sub
ss
repz
jmp
scas
jnp
mov
jp
in
js
mov
adc
add
fists
push
fucomi
movsb
cwtl
cwtl
testl
add
daa
pavgb
out
pop
cwtl
call
clc
dec
xchg
ljmp
cmc
jg
push
jbe
pop
sti
sub
sbb
decb
data16
push
imul
popa
loope
mov
stos
lcall
cmc
jnp
jns
outsb
pop
inc
mov
add
mov
arpl
mov
out
pop
push
je
and
mov
xor
outsb
lds
dec
daa
rolb
les
aad
aad
mov
and
pushf
mov
popa
bnd
add
jnp
jnp
push
pop
push
loop
dec
push
in
adc
adc
cli
and
cmpsl
cmp
lcall
mov
sti
and
pop
dec
lret
out
out
bound
out
inc
roll
scas
sub
cmp
mov
nop
mov
xor
aaa
sti
andb
and
mov
pop
cmp
mov
fwait
test
je
lret
xchg
fstl
mov
pop
repz
std
push
pop
pop
leave
push
sub
out
jmp
hlt
mov
pop
cmp
clc
popa
leave
adc
jo
mov
shll
lahf
push
aas
push
test
gs
in
insb
jb
lods
xor
mov
fwait
xor
inc
cmpsl
dec
cmpsb
fdivr
nop
in
and
or
cmc
mov
add
mov
dec
lds
and
imull
gs
in
push
jp
dec
enter
pop
xchg
ss
imul
cli
int3
mov
mov
jne
std
bound
repnz
lcall
cwtl
or
sbb
rcll
mov
rolb
lods
adc
aaa
xor
jmp
pop
mov
mov
in
or
jb
pop
xchg
sti
aad
mov
inc
addr16
ss
and
scas
popa
repnz
test
add
fsubp
fistpll
cmp
scas
mov
lods
sbb
dec
push
mov
loop
cltd
addl
pop
xor
into
mov
xor
and
xchg
mov
or
orl
fstpt
out
xor
add
xor
adc
pusha
sub
mov
mov
loop
sub
scas
mov
mov
sub
and
cmpsb
fwait
dec
setle
mov
dec
test
add
int
mov
push
adc
aas
xchg
cmp
lock
negl
ror
or
pop
js
mov
fdivs
cmpsb
or
or
mov
mov
inc
mov
into
mov
fchs
ficompl
pop
aad
mov
adc
and
or
inc
call
mov
les
push
mov
mov
test
outsl
adc
outsl
mov
and
cmp
pop
cltd
or
not
or
cmp
jno
cmp
int
aam
mov
dec
jne
into
int3
leave
push
jns
pop
dec
add
jmp
sahf
sbb
sbb
sub
adc
ss
clc
push
xchg
sbb
ret
xchg
shll
mov
in
or
inc
and
xor
lret
out
mov
sbb
inc
pop
mov
inc
push
mov
jle
push
xchg
push
daa
add
xor
mov
push
shll
cmp
xchg
adcl
xor
pop
pop
mov
mov
push
mov
je
cld
mov
xchg
push
out
pop
test
hlt
jno
sahf
je
mov
push
cwtl
dec
mov
mov
cmpsb
std
dec
jecxz
sub
dec
pushf
inc
in
pop
push
mov
add
jb
les
mov
xor
lret
enter
or
subb
or
cli
sub
aad
in
mov
xchg
cmp
sbb
push
mov
imul
test
fsubs
or
mov
or
pop
roll
icebp
jmp
or
insl
hlt
roll
xchg
xchg
sarb
pop
rorb
add
pusha
daa
pop
pop
push
or
mov
jne
cmp
push
xchg
mov
imul
push
cmpb
aas
rol
push
out
mov
jbe
ljmp
xchg
adc
jle
sbb
inc
notl
or
adc
or
xchg
rcl
jb
mov
or
xor
pop
stos
lea
add
jmp
and
xchg
jge
pop
jae
rcr
dec
stos
pusha
push
xchg
mov
ret
pushf
lret
stc
rorb
sti
mov
jb
jp
imul
scas
and
sub
and
and
imul
cwtl
pusha
jae
xchg
in
incb
add
data16
rcrb
dec
subl
push
fwait
xchg
dec
push
idivl
add
ds
mov
call
cmp
adcb
loopne
sbb
push
stos
add
xchg
mov
xor
xlat
jnp
xlat
jmp
ljmp
out
lret
dec
and
movsl
das
lahf
jo
test
adc
nop
lret
adc
push
test
or
mov
mov
adc
add
sub
push
jo
cmp
sbb
loopne
sbb
popf
adc
push
dec
ret
je
loopne
push
imul
cmp
lea
adc
ds
cmp
and
push
adc
nop
test
arpl
out
mov
pusha
inc
inc
mov
pop
shrb
arpl
icebp
scas
push
testb
jmp
adc
gs
sub
leave
iret
and
mov
and
sub
out
gs
jmp
adc
xor
xlat
xchg
push
sub
dec
out
notl
ret
test
jo
mov
push
cmp
xchg
push
and
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
xchg
les
push
lcall
sbb
scas
clc
push
jg
mov
push
or
dec
mov
fldt
add
adc
pop
push
inc
or
pop
push
orl
jg
jo
imul
call
sarb
inc
dec
dec
pop
fst
in
mov
dec
outsl
lock
sub
mov
lahf
push
fmulp
adc
stos
icebp
xchg
daa
sub
jnp
movsl
fwait
out
jp
in
mov
ljmp
mov
xlat
push
loop
aas
pop
xchg
loope
in
dec
scas
jbe
and
xlat
lret
or
xor
out
xor
ljmp
mov
scas
daa
inc
mov
mov
mov
sbb
insb
and
mov
mov
aaa
test
std
mov
pop
pushf
pop
fildll
xor
lcall
int3
inc
sub
in
popf
jb
in
lret
pop
mov
dec
jmp
cmp
stos
into
clc
pop
negl
sbb
fstpt
xor
add
mov
jnp,pn
scas
bound
cmp
movsl
rcr
mov
sub
push
sahf
clc
imul
stc
push
or
pop
inc
push
pop
add
lret
pop
outsb
addr16
and
mov
push
mov
mov
into
jle
push
or
cs
outsl
bound
icebp
pop
mov
sbb
sahf
and
negb
mov
jmp
push
mov
push
ret
adc
in
or
pop
push
push
pop
inc
dec
popa
sbb
dec
rorl
mov
int3
stos
xor
xor
jmp
push
push
cwtl
inc
iret
mov
push
xor
add
and
push
jno
and
jae
mov
psubsw
jo
push
push
imul
pop
inc
clc
pop
add
lods
dec
push
sub
mov
add
insb
in
mov
data16
or
push
int3
aad
jo
jno
decl
mov
test
jo
mov
cmp
add
lock
dec
out
sbb
popa
jnp
adc
in
jae
daa
jo
mov
test
jmp
dec
fcoml
sbbl
or
xor
push
frstor
in
loopne
arpl
mov
xor
mov
cmp
cmp
aaa
std
jl
shll
cmp
add
cmp
sub
test
pop
xor
into
cmp
jnp
xor
int3
or
or
loop
push
les
jo
xor
sub
cmp
cli
loopne
aaa
or
fsubrl
push
adc
shll
cmpb
mov
and
sbb
add
xor
or
fcompl
xchg
addr16
sbb
test
repz
jl
icebp
or
out
push
pop
dec
push
mov
leave
inc
jno
aad
mov
iret
rcrb
or
aaa
into
pop
imul
or
xorb
mov
fidivrs
and
into
cmpsl
cmp
mov
dec
mov
xchg
cli
sub
cwtl
movsb
inc
bound
insl
ret
icebp
fldenv
cmp
jecxz
in
adc
clc
repz
enter
add
xadd
jo
rorb
cmpsl
jle
popf
hlt
sub
mov
test
shrl
cmp
std
add
adc
sbb
jae
insl
xchg
cmpsb
cmp
cmp
test
or
push
jnp
popf
dec
imul
jbe
adc
xor
shl
mov
fwait
xchg
push
add
sahf
jp
inc
mov
cmp
jo
mov
lea
imul
or
push
sbb
imul
daa
add
in
push
jnp
ret
lahf
xor
pop
push
add
mov
pop
sysexit
data16
pop
call
movsb
lret
pop
arpl
mov
inc
test
aam
fwait
inc
inc
pop
cmp
dec
shlb
cli
cld
and
iret
pop
loope
or
roll
sub
adc
sub
sbb
orl
xchg
gs
es
test
mov
punpckhdq
add
shr
in
addr16
ret
rclb
mov
jns
fldln2
inc
lea
pop
fidivrs
and
or
xchg
push
lea
mov
xchg
xor
scas
mov
and
fwait
outsl
je
lret
inc
mov
sbb
pushf
dec
loop
lea
rcr
jo
fstpl
icebp
cmp
jae
xor
mov
cmpsb
int3
jb
cmp
mov
jb
inc
sti
rcr
aas
xor
sub
loop
lahf
or
xchg
ljmp
sub
sub
in
adc
adc
adc
dec
inc
jecxz
jo
or
sub
in
push
minps
jnp
fisubrs
xorb
lods
xor
pusha
and
xchg
fwait
pop
inc
sub
xchg
mov
mov
dec
rcll
ret
icebp
or
xor
xchg
or
imul
rorb
mov
out
sub
popf
aad
mov
ret
enter
jb
stos
lret
cltd
lods
inc
xorps
test
xchg
lcall
jp
mov
sbb
movsl
out
shl
and
mov
dec
sub
jne
inc
dec
shrb
push
mov
test
sub
aad
sbbl
std
mov
lock
mov
int
add
repnz
fisttpll
insl
movsb
pop
pushf
and
insl
imul
outsb
outsl
mov
imul
movsb
mov
mov
mov
mov
test
jmp
pop
aad
lahf
lahf
int
aaa
add
icebp
testl
inc
push
dec
push
shlb
pop
add
int
pop
stos
cmp
movsl
pop
add
adc
mov
xchg
test
int
inc
lcall
out
movsb
mov
jbe
das
xor
movsb
jns
sub
loop
aaa
ds
or
sbb
mov
cmpsb
sub
adc
sbb
repnz
and
mov
sbb
mov
imul
mov
pop
jmp
mov
jno
cmp
jo
push
mov
push
push
xchg
mov
push
bound
inc
shl
cmc
mov
mov
push
xchg
jge
or
push
xor
scas
jg
mov
jo
jg
cltd
pushf
aas
or
mov
pop
sub
xchg
mov
dec
insl
je
addr16
adc
in
mov
xchg
out
bound
jbe
jmp
insl
or
lods
out
hlt
and
adc
movsl
repnz
test
pop
test
mov
outsb
gs
adc
pushf
cld
int
xchg
mov
das
rorb
nop
imul
dec
pop
mov
sbb
fwait
push
inc
xchg
icebp
je
ds
idivl
mov
push
adc
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
jae
pop
js
mov
ja
pop
push
scas
int
adc
mov
inc
inc
leave
outsb
leave
scas
adc
mov
pop
add
in
add
mov
add
and
pop
sbbl
aam
pop
push
rcr
push
aam
mov
enter
jne
das
push
sbb
adc
xor
call
fstpt
movsl
and
int
test
dec
iret
movsb
fstpt
into
loop
insl
add
or
sub
adc
mov
lds
loopne
mov
sti
addl
mov
int3
out
push
xlat
mov
or
xor
or
cmp
shll
adc
mov
xchg
dec
sub
out
sbb
aam
sub
adc
clc
xor
xchg
jmp
mov
mov
or
imul
dec
aam
leave
mov
in
xchg
xchg
mov
mov
int3
ret
leave
pop
push
jecxz
cmpsl
lods
mov
add
jmp
aas
fisubrl
push
and
jnp
les
sbb
dec
adc
test
xchg
in
mov
mov
add
adc
jns
pop
xchg
inc
aaa
sub
out
lahf
mov
mov
mov
aaa
or
add
pop
push
shll
cmc
iret
cmp
out
repz
push
adcl
dec
add
int3
out
sbb
out
cmp
sub
sub
test
pushf
rclb
cmp
aad
xor
or
leave
and
sub
sbb
mov
and
dec
imul
popl
xchg
push
sbb
or
xor
add
sub
dec
mov
jl
imul
lods
add
xchg
pop
in
insl
scas
lock
pop
jecxz
pop
out
pushf
test
fstl
dec
js
sub
fwait
push
mov
imul
inc
in
js
mov
xlat
int3
dec
fistpl
sub
into
imul
sub
shr
insl
js
fcoml
mov
xorl
inc
loope
mov
fdivrs
in
sub
sbb
mov
mov
outsb
rolb
in
inc
and
ss
jmp
les
mov
cmp
bound
xorl
pop
nop
in
mov
sub
stc
and
and
dec
mov
mov
mov
inc
enter
adc
mov
inc
sbb
arpl
fwait
insb
add
loope
outsb
mov
sub
mov
and
push
mov
add
fildl
cmpsl
cmp
jl
test
jne
icebp
scas
inc
out
mov
lods
in
fimuls
aam
pop
dec
popa
sbb
cmpsl
je
dec
out
jp
pop
cs
xchg
pop
repnz
gs
cltd
test
into
sbb
xchg
test
and
mov
test
cld
imul
sub
xlat
out
jns
adc
pop
cmp
divl
das
push
insb
cmpsl
and
mov
fs
sbb
xchg
inc
add
popa
and
rorl
xchg
or
mov
movsl
imul
jmp
cmpsl
popa
adc
popf
insb
and
mov
int
adc
sub
sub
es
inc
lea
mov
shlb
dec
ret
lcall
sahf
cmp
mov
orb
mov
xchg
sarb
test
sbb
inc
xor
sbb
xchg
lds
pushw
jle
ljmp
xchg
mov
std
or
add
and
in
flds
pop
cld
bound
subl
adc
xor
xchg
arpl
cltd
push
sbb
dec
sarb
xor
loopne
dec
xor
ret
inc
adc
push
dec
jne
xchg
pop
in
repz
mov
das
js
xor
lcall
popf
stos
cltd
daa
fmull
call
or
out
clc
jmp
add
fidivs
js
jbe
cmpsl
in
fdivs
stos
sti
xchg
cmp
dec
cmp
js
sub
jle
insb
lea
lahf
enter
roll
xor
mov
bnd
mov
push
or
in
or
add
mov
mov
clc
xor
jmp
cmp
jmp
stos
adc
sti
and
push
sub
mov
jns
sti
adc
addr16
and
fs
sbbl
out
xchg
pop
fldenv
lock
arpl
jno
mov
inc
or
lods
cmc
sub
mov
mov
xor
pop
dec
outsl
iret
cli
inc
shrb
decb
clc
xchg
mov
lcall
loop
les
loope
dec
fcomi
fcoml
adc
arpl
mov
adc
jb
je
add
or
jb
xchg
pushf
shlb
cmp
add
and
adc
ret
fisttps
fidivrl
sub
mov
je
inc
dec
jp
in
adc
ljmp
cli
mov
dec
push
push
sti
lock
inc
scas
pop
jbe
cld
mov
push
inc
sarl
pop
insb
add
jg
cld
lcall
xchg
mov
pop
addl
mov
sbb
cwtl
jne
ror
and
andl
inc
pop
xchg
push
pop
push
es
stos
fiaddl
adc
sub
cld
clc
jp
or
pop
mov
out
repz
lock
mov
pop
int
repnz
dec
lea
mov
lret
cmp
xchg
add
cmpsb
pop
inc
lea
adc
fldcw
jp
mov
cwtl
repnz
jo
loope
jmp
jnp
xor
leave
inc
fcompp
jne
push
dec
js
mov
lods
add
mov
icebp
or
test
std
pop
cmp
fisubrs
hlt
pushf
dec
dec
lret
inc
movsl
lea
les
sbb
and
push
mov
mov
inc
std
clc
pop
cmp
ret
xor
pop
xchg
aam
lcall
jae
sarl
mov
lret
call
inc
jbe
cli
sbb
inc
push
sbb
or
sbb
push
pop
iret
push
movsb
and
jno
sbbl
cmpsb
push
ljmpw
jmp
aad
rol
cmpsb
loopne
stc
stos
js
cli
fs
stos
add
and
adc
jno
jp
mov
mov
ret
ja
or
insl
xchg
imul
cmp
out
fildll
mov
xchg
lods
lods
rcrl
ficoms
or
in
jne
or
es
adc
int3
repz
or
jge
or
decl
xor
adc
push
mov
add
mov
pop
movsl
mov
mov
inc
dec
stos
cmp
sbb
outsb
aaa
mov
and
cli
sbb
pop
pop
js
or
lret
lods
push
mov
rorb
lods
enter
add
fadds
add
and
add
loop
es
pop
js
loop
mov
xchg
je
adc
mov
das
mov
xchg
adcl
xor
roll
in
xor
sbb
mov
aaa
fdivl
pop
sarb
das
in
rcrl
addl
mov
adc
xchg
stc
or
adc
push
pop
mov
fistpl
outsl
or
xchg
cmp
data16
cli
jno
ficomps
cmp
clc
cld
loopne
jl
pop
or
cmpb
leave
xor
jecxz
mov
mov
jmp
jns
cmp
cmpl
pop
int
std
test
cmp
inc
jecxz
shrl
enter
in
pop
inc
xor
js
and
pop
repz
pop
pop
xor
in
out
or
cmc
in
sbb
lods
jnp
cmp
gs
jl
add
pop
xchg
dec
lods
lods
mov
addr16
mov
inc
es
cld
sub
inc
mov
cmp
test
cmp
clc
adc
andb
xor
add
test
xor
inc
lock
inc
ret
sbb
lods
sub
pop
mov
xchg
inc
inc
add
ret
push
xor
mov
cmp
sub
repz
sarb
cwtl
sub
mov
stc
cmp
ljmp
icebp
aaa
mov
test
mov
and
mov
arpl
pop
mov
ret
inc
add
mov
movsb
pop
push
test
jmp
imul
mov
sbb
xchg
mov
cmpsb
lea
lea
je
jb
repnz
xchg
int
decb
lret
add
sbb
imul
out
aad
movsl
test
int
jae
push
pop
ds
shrl
cmp
push
loop
das
dec
lret
push
out
sbb
and
test
jae
cmpsb
pushf
push
push
inc
stos
scas
jns
inc
arpl
sub
data16
pop
jbe
shrb
push
in
repz
pop
rolb
pop
pop
nop
in
push
jp
imul
inc
pop
jle
mov
lret
sbb
lret
xor
xor
pop
mov
lods
push
aad
or
mov
dec
add
fstpl
sub
out
sbb
adc
inc
loopne
sbb
scas
or
add
enter
cmc
push
jp
dec
lea
ss
mov
in
pop
imul
ss
or
imul
cmp
add
outsb
push
clc
lahf
in
and
sub
test
fiadds
mov
or
and
mov
lcall
pop
imulb
test
call
popf
or
bsf
mov
push
rol
into
and
lcall
test
jbe
inc
push
std
aad
xchg
cmp
pop
xchg
inc
pushf
or
fimull
aas
adc
pop
jae
out
mov
mov
shlb
add
call
pop
sahf
ja
jnp
jge
push
out
pushf
js
ret
test
and
sub
adc
daa
xchg
adc
into
out
sar
jb
jmp
std
mov
inc
lret
loopne
loop
mov
imul
idivl
add
cmpl
arpl
mov
loopne
aad
lcall
add
cwtl
repnz
stc
dec
sub
mov
mov
and
push
flds
fidivrs
sbb
pop
xchg
push
mov
lds
inc
add
test
push
in
popa
xchg
ret
xor
insl
out
jae
lea
mov
and
or
xlat
jno
jmp
xchg
push
pop
lods
xchg
inc
mov
cltd
jmp
dec
repz
out
mov
sbbb
adc
push
push
shll
xchg
push
fucomp
int3
jl
xchg
sub
pop
pop
loop
push
icebp
inc
push
push
xchg
jo
dec
adc
icebp
call
and
sub
mov
out
sbbb
or
flds
insl
cmpsl
xchg
arpl
insb
sbb
clc
mov
mov
add
pusha
pop
xor
call
jb
cltd
in
ss
fstpt
pop
push
mov
jbe
and
popa
in
daa
or
push
inc
lret
sbbl
add
fxch
push
int3
cmpsb
lret
pop
dec
imul
dec
iret
cli
and
or
hlt
jbe
pop
push
pop
clc
push
pop
aaa
xchg
lods
adc
cwtl
scas
ret
imul
or
lods
sarl
subb
xor
xabort
jae
adc
add
outsb
addr16
stos
push
mov
push
or
test
pop
jmp
sub
pushf
and
cmpsb
pop
cmp
jo
movsb
mov
insb
inc
inc
jl
sub
push
sub
sbb
nop
jecxz
mov
mov
pusha
add
orl
pop
mov
pusha
mov
add
hlt
je
dec
inc
fcmovnb
adc
push
mov
cmp
ja
push
sub
stos
xchg
insl
xlat
out
and
aad
fcoms
js
sbb
xchg
imul
test
and
aaa
jne
xor
mov
notl
dec
popa
inc
xor
out
sub
adc
lret
mov
pop
pop
inc
lret
call
popf
test
fiadds
lods
jne
mov
aas
lods
loopne
cld
aad
sub
add
jb
xor
daa
cld
ds
int3
rol
dec
push
int3
clc
cld
dec
adc
rcrl
aam
out
subl
testl
jb
hlt
pop
test
add
mov
lods
inc
fisttpl
mov
cmp
pop
decl
dec
inc
mov
out
or
pushf
pop
dec
inc
mov
cmp
xor
js
test
jge
sub
pop
push
mov
loop
fwait
or
rol
dec
inc
insb
or
pop
mov
popa
pop
add
test
addb
dec
aam
test
jg
sti
addl
sahf
push
fistps
mov
scas
fists
sub
cmp
push
cmp
hlt
mov
and
fstl
cmpl
dec
enter
push
jo
mov
pushf
rcrb
push
bound
arpl
leave
lea
aaa
mov
adcb
notb
daa
mov
or
mov
movsb
mov
cli
mov
cld
jae
dec
addr16
insl
lcall
repz
shrb
xor
shll
fs
mov
insl
ljmp
dec
push
jle
push
divl
pop
sbb
subb
add
and
lret
pop
mov
push
scas
or
push
std
rorb
xchg
mov
cwtl
out
sub
ss
cmp
or
je
into
adc
outsl
lods
pop
jmp
sarb
leave
addl
jb
int3
mov
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
mov
push
setg
pusha
push
push
push
sbb
adc
daa
cmp
lods
orb
and
out
lahf
dec
in
or
std
or
fcoms
lds
dec
mov
std
mov
hlt
mov
push
gs
inc
xchg
iret
das
dec
outsl
aas
pop
sti
loope
or
pop
jnp
js
loope
fsubrl
outsb
lods
lret
inc
roll
push
adc
outsl
push
das
shll
cltd
arpl
daa
dec
into
push
nop
fimuls
pushf
jnp
mov
and
jp
cmpsl
or
push
mov
dec
jnp
data16
jnp
cli
jne
or
adc
jb
dec
pop
stos
insb
test
pop
inc
xor
clc
or
idiv
hlt
or
sahf
mov
pushf
xsaves
nop
jecxz
xor
jle
and
mov
fisttps
mov
out
cmp
mov
add
pop
mov
andb
inc
loope
mulps
and
xchg
fmuls
inc
js
int
mov
mov
add
inc
push
cwtl
mov
loop
add
jne
mov
mov
and
fcmovnu
addr16
test
push
mov
dec
adc
and
call
inc
cld
addr16
mov
or
test
mulb
nop
shlb
push
lret
jecxz
das
and
cmp
into
or
xchg
inc
mov
pop
jecxz
clc
lds
rorb
mov
cmp
rclb
paddusw
fldl
mov
jge
inc
jge
pop
pop
pop
cmp
enter
in
push
std
jge
push
push
fucomip
sub
mov
jne
or
inc
and
jmp
xor
movsl
jnp
jb
ja
xchg
vpmulhuw
push
mov
sti
mov
shlb
in
fs
push
lock
fmulp
xchg
enter
jp
sbb
int3
sbb
jb
and
fldpi
sbb
or
lahf
stos
push
sbb
sub
push
mov
js
add
adc
push
xor
inc
push
pop
es
pusha
sti
sbbl
loopne
mov
jo
hlt
sub
xor
icebp
fs
xchg
and
add
ret
xchg
dec
out
pop
sub
popf
cld
in
cmp
rcl
cmp
imul
int3
or
xchg
addb
ja
mov
jle
dec
add
loop
xor
cmp
loope
aaa
cmp
inc
mov
sbb
ljmp
lds
mov
sbb
add
gs
push
inc
out
fs
mov
stc
add
or
lds
rcrb
ret
push
cmp
jb
sbb
push
or
pop
pop
mov
inc
and
push
pop
mov
data16
sub
cld
xlat
cmp
ds
fisttpl
push
pusha
and
cmp
loop
lods
mov
in
push
or
jb
lcall
jecxz
mov
push
iret
jb
cmp
dec
sti
inc
pop
jno
push
and
xchg
dec
and
icebp
mull
popa
das
adc
fcomps
cs
mov
push
pextrw
sbb
test
shr
out
jo
fimull
sbb
lods
bound
xor
addr16
push
hlt
movsl
sub
jne
push
mov
cmpsl
mov
cmpsb
into
in
mov
push
inc
mov
mov
push
sbb
sti
pop
mov
jge
scas
inc
into
xchg
jo
dec
pusha
inc
xchg
adc
jbe
std
loope
mov
lcall
xchg
std
aas
in
aas
or
outsl
adc
ficoml
popf
or
mov
add
aas
mov
push
pop
outsl
stc
scas
lret
inc
pop
jns
fstl
mov
mov
je
push
mov
cmpsb
jnp
mov
stc
push
sahf
shlb
cli
lret
push
leave
jp
mov
add
xor
cmp
sbb
xchg
not
xor
sub
les
imul
fimuls
icebp
iret
stos
call
fwait
enter
and
xor
xchg
cltd
and
out
lcall
inc
fnsave
sbb
xchg
jle
cmp
imul
int3
ret
cmp
cltd
test
in
xor
add
movb
lds
filds
jp
xchg
sbb
mov
popa
shlb
jecxz
push
inc
push
xchg
mov
xor
sub
sub
inc
inc
fsubrl
insb
clc
icebp
xchg
mov
aam
aaa
or
mov
frstor
out
addb
inc
test
cmp
imul
cmc
mov
pop
bound
ds
push
les
jns
sub
inc
mov
and
sub
xor
test
jo
test
mov
iret
imul
jg
cmp
sbb
add
jmp
gs
fcmovb
sbb
sub
pop
xor
in
andb
mov
clc
push
add
dec
cmp
outsb
pop
mov
stos
gs
cs
add
xor
pop
fdivl
xor
mov
decb
push
lds
add
jmp
dec
mov
es
xor
mov
add
jl
sub
inc
fidivl
cmc
aam
fcmovnb
ja
jnp
mov
pop
es
dec
jl
dec
orl
lea
aas
pop
xchg
enter
clc
sti
sub
xchg
or
aaa
fsubr
pop
out
cmp
lahf
jg
insb
int
mov
cmp
add
cmp
dec
bound
js
shr
xchg
jns
dec
les
mov
add
pop
sbb
xchg
sbb
xor
cmp
imul
adcl
and
ss
jge
test
or
cmp
jecxz
inc
in
xor
out
mov
xor
je
dec
pop
nop
mov
in
mov
repz
out
push
fxch
addr16
adc
jns
lds
test
hlt
jo,pn
loope
into
sub
add
pop
enter
sarl
and
xor
das
jne
adc
cmp
jne
xlat
jno
aam
fisubrl
hlt
pop
inc
jns
xor
mov
pushf
sub
or
dec
mov
fiaddl
sbb
and
push
adc
popa
push
jp
mov
jns
fmul
je
inc
cmp
arpl
fiaddl
push
push
mov
ror
sbb
aam
xor
inc
fsubrs
pop
ljmp
iret
and
adc
mov
xor
mov
scas
aas
test
imul
arpl
je
shlb
test
or
xchg
dec
js
test
sub
lds
pop
es
xchg
sub
dec
sbb
mov
adc
xchg
adc
loop
and
mov
outsl
push
clc
cmp
jno
jo
cli
aam
jmp
adcl
lock
inc
push
fs
gs
lret
pushf
xor
mov
gs
loop
dec
pop
inc
imul
cmp
jp
test
in
adc
les
add
lods
mov
or
mov
test
out
dec
pusha
jns
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
in
enter
pusha
inc
and
push
mov
in
bound
and
add
mov
pushf
test
sub
movsl
sub
mov
loope
fsubr
sub
add
add
jnp
dec
adc
or
add
es
xor
sarb
das
in
jmp
aad
gs
adc
push
rol
in
xchg
insl
mov
sahf
or
push
xchg
mov
pop
in
mov
imul
test
dec
xchg
ficomps
jle
scas
dec
loop
fsubl
ret
lds
jle
movsl
ja
inc
ret
aaa
daa
test
sti
fucomip
sbb
sbb
shll
mov
movsb
add
fwait
lret
insl
fnsave
cmp
popl
cmp
nop
cmp
fnstcw
outsb
jnp
sub
ret
or
pop
imul
loop
sub
sub
and
pop
mov
push
jbe
sahf
mov
lock
push
fldl
leave
popf
dec
jne
jbe
mov
add
and
xor
cmp
test
mov
mov
out
jmp
cwtl
lods
insb
mov
rcrb
adc
jle
push
lahf
xchg
repnz
dec
jge
lret
out
es
leave
xorl
add
adc
push
xlat
sub
jae
lret
and
mov
fdecstp
and
sub
sahf
outsl
mov
xchg
pusha
fs
stc
lret
add
mov
fs
repnz
inc
rolb
xor
sbb
add
mov
mov
loope
cmpsl
lcall
jno
fbld
incb
lds
pop
ret
mov
push
sub
mov
push
or
cmp
shll
movsb
pop
stc
iret
mov
addl
jb
cmp
jle
scas
adc
fisubs
mov
cmpsb
pop
insb
mov
out
inc
push
pushaw
inc
int3
mov
lahf
lcall
in
aas
sub
mov
test
das
jbe
negl
jnp,pt
arpl
es
push
jle
cmp
lea
dec
mov
popf
nop
add
xchg
sub
or
fstpl
adc
push
cmpsb
aam
ljmp
add
imul
ljmp
out
add
ja
adc
insb
test
outsb
mov
out
call
mov
aas
and
adc
pop
mov
add
or
adc
xchg
nop
insb
sti
or
inc
or
loop
mov
call
jge
rcll
in
jmp
push
scas
inc
push
imul
lds
loopne
fsubrs
xchg
cmp
inc
out
js
lods
add
mov
dec
cmp
adc
xor
pop
cmpb
imul
mov
mov
cmp
stc
add
orl
and
adc
mov
mov
insl
dec
and
sub
add
addb
mov
push
xor
les
and
cwtl
xlat
in
fidivs
test
cmp
inc
ja
outsl
mov
jmp
push
std
mov
sbb
pop
test
and
jge
inc
std
iret
in
xorb
daa
in
pop
dec
mov
inc
fisubrl
cmpsl
imul
cmp
out
dec
push
jmp
and
stos
jl
in
or
or
inc
push
sub
imul
adc
fdivl
lock
mov
shlb
mov
imul
push
cltd
jnp
push
cmc
aam
or
andb
cmp
daa
add
es
or
test
jge
adc
adc
sti
insb
rcl
dec
repnz
fistpl
mov
and
cmp
shr
dec
jnp
mov
je
ret
nopl
ds
mov
sbb
lahf
je
push
mov
or
mov
push
imul
and
mov
mov
mov
mov
aas
cmpsl
xchg
xlat
cmp
or
xor
addr16
pop
jb
mov
push
cmp
cwtl
ja
mov
mov
sub
daa
aas
sub
and
flds
fcomps
xorl
sub
iret
jns
loope
jl
lds
mov
mov
dec
ret
jmp
loope
fucomi
out
fldenv
cld
jp
in
jp
push
ss
xor
mov
sub
add
push
pop
cli
lret
adc
jl
mov
or
pop
nop
stc
xchg
fldl
mov
fcoms
add
cmp
pop
cmpb
lods
dec
sub
mov
push
aam
dec
test
mov
push
or
out
aaa
jp
fisttpll
fsubrs
inc
pop
sub
enter
mov
cmp
aaa
push
gs
hlt
loope
or
or
test
mov
jg
adcb
xchg
xchg
inc
fimull
xchg
cmp
inc
ret
adc
into
stc
mov
mov
inc
push
scas
test
sub
cmp
gs
int
mov
mov
jecxz
lods
sub
mov
gs
sub
push
ljmp
clc
jg,pn
adc
push
cmp
push
push
push
inc
daa
mov
jl
lods
or
stos
sub
gs
std
ja
insb
out
xchg
xchg
push
roll
push
add
push
inc
or
aaa
mov
mov
pop
nop
dec
xchg
roll
loopne
cmc
outsb
xlat
jge
cmp
pop
repz
mov
adc
mov
out
sti
or
cmpb
addl
test
cwtd
inc
stos
cmp
and
sbb
hlt
inc
mov
jae
fs
jmp
add
sub
pop
jmp
push
data16
testb
pop
fs
lahf
push
xor
mov
movsb
or
cmpsb
cmp
scas
cmp
mov
stos
pop
loopne
test
pusha
jbe
sub
fidivs
stc
loope
bound
repz
sarl
cmpsb
xlat
aas
cmp
adc
cmpsl
mov
popf
repnz
push
mov
data16
or
inc
flds
aad
lods
movl
dec
repnz
idivb
aad
mov
mov
xchg
add
mov
mov
lcall
std
push
out
jl
pop
fsubrs
or
lcall
and
inc
jae
mov
and
jb
aad
xchg
stos
ljmp
jno
lods
and
push
dec
cmp
inc
testb
sbb
rcrl
pop
jmp
std
jmp
in
int
xchg
out
cmp
pop
jmp
lea
and
subl
sub
mov
mov
dec
jno
fcomip
mov
arpl
add
and
cmpsb
outsb
lgs
push
cmp
mov
aas
dec
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
xchg
mov
rdmsr
jns
aas
xor
cmpsl
ds
jp
out
push
push
jge
pop
cmp
fisttpl
mov
rcl
jge
or
dec
and
adc
xchg
pushf
stos
adcl
adc
dec
push
adc
push
xchg
popf
sub
add
jo
add
addb
and
sub
pop
pop
clts
sub
jne
loop
iret
out
mov
inc
pop
sti
int
sub
adc
lea
sbb
fcmovnb
outsl
adc
lea
stc
out
push
mov
fldl
negl
pop
lea
stc
or
jo
cmp
js
xor
dec
outsb
adc
mov
xor
xor
mov
dec
inc
aam
mov
push
sbb
inc
xchg
in
mov
int3
adc
adc
cld
rcll
jnp
out
aam
lret
mov
xor
mov
ffreep
sub
test
in
jecxz
fcompl
xorb
xchg
lea
in
cmp
inc
jb
es
mov
xchg
clts
push
jmp
mov
jb
sub
jg
and
ret
popf
aam
subb
into
inc
hlt
dec
xor
sbbb
mov
jmp
xchg
push
clc
xor
movsb
xor
cmp
xor
enter
lret
adc
add
push
pop
jno
aas
mov
roll
insl
sub
dec
dec
cwtl
test
cmp
mov
cmpsl
adc
les
popf
cmp
push
ret
xor
mov
test
repz
dec
inc
pop
push
or
in
fwait
and
xorb
das
fwait
enter
jo
inc
repz
testl
es
lcall
pop
mov
mov
fiadds
xor
xchg
xchg
push
and
fsubrl
or
xchg
lods
int
adc
sub
stos
xchg
jnp
into
negl
lds
xchg
mov
fisubrs
rcrb
imul
movsb
fs
repz
pusha
or
shlb
nop
xor
test
inc
inc
lods
mov
mov
lcall
pop
adc
sbb
popf
push
dec
push
insl
xchg
jno
les
xchg
ret
mov
xchg
push
dec
loope
aam
mov
or
xchg
xor
push
pop
sbbb
hlt
lock
push
xchg
inc
jp
in
jecxz,pn
xchg
fstpt
cmp
jle
lcall
lret
mov
fnstsw
sbb
and
lock
rorb
xchg
add
and
insl
daa
xchg
or
les
fwait
xor
ja
adc
addb
xchg
adc
jmp
cld
cmp
mov
mov
push
xchg
inc
jnp
div
repz
std
jl
nop
icebp
push
and
lock
stos
adc
mov
sti
aaa
dec
lds
scas
test
pop
inc
ds
fsts
pop
mov
mov
jne
and
daa
mov
test
adc
aad
js
pop
and
mov
or
cmp
jb
or
aam
es
dec
mov
jno
loopne
add
mov
jae
cmc
pop
xchg
inc
inc
imul
es
pusha
push
gs
sbb
push
xchg
inc
cmpsl
inc
xlat
push
and
cwtl
add
jmp
jno
dec
jge
adc
xchg
icebp
cmp
xor
js
cmp
inc
adc
test
cmp
cmp
mov
jns
ret
mov
mov
and
jmp
pop
adc
movsl
into
clc
mov
jb
dec
mov
mov
xchg
add
sub
out
clc
leave
inc
jmp
jbe,pn
and
lahf
dec
jle
loopne
mov
adc
insl
nop
xchg
and
jecxz
xchg
jae
mov
ret
and
imul
std
and
pop
xchg
adc
jge
mov
inc
mov
js
add
cli
fisttps
aam
rcl
incb
fmuls
leave
mov
mov
lds
inc
test
icebp
nop
cmpsb
sbb
push
xchg
mov
inc
adc
adc
mov
pushf
add
sbb
push
mov
adc
mov
lret
mov
adc
push
cmp
mov
mov
dec
jne
sub
loop
adc
lahf
mov
ret
gs
sub
cmp
add
out
orb
xlat
pop
push
xor
loop
or
sbb
mov
mov
dec
fbstp
out
int3
in
iret
mov
repnz
and
or
gs
ss
dec
or
dec
int3
nop
mov
repnz
or
and
add
lock
cmp
aam
cmp
addr16
mov
dec
dec
lcall
mov
mov
movsl
cld
jg
fucomp
inc
adc
mov
mov
dec
pop
aam
mov
sbb
pop
stc
cmpsb
mov
and
int3
stc
jae
js
mov
and
das
mov
sub
cld
das
mov
cld
jle
lds
jb
sbb
movl
sarl
mov
scas
jb
pop
imul
push
jb
sbb
test
fstpt
push
es
adc
sub
faddl
aad
jp
jo
mov
mov
sbb
or
mov
clc
xor
mov
lret
jecxz
mov
xor
dec
dec
frstor
imul
and
std
test
cwtl
pusha
insl
inc
stc
adc
cmpsb
jl
cmp
xor
add
push
sti
xchg
popf
jge
xlat
inc
add
cmp
mov
stc
cmp
into
mov
cs
sub
sarb
mov
cmp
jbe
pop
xchg
push
int3
mov
pop
cmp
mov
mov
sti
mov
cmpsl
es
cmp
addr16
movsb
cs
and
jg
inc
mov
mov
sbb
push
and
pusha
das
inc
cltd
out
push
xor
adc
mov
lret
lret
inc
stos
frstor
inc
fnstcw
inc
xlat
imul
imul
in
xchg
stc
filds
fidivrs
in
xor
clc
icebp
add
mov
adc
fucomp
pop
mov
fwait
sub
sbb
mov
jge
mov
arpl
sbb
pop
out
pop
scas
push
dec
or
mov
int
or
push
lcall
xchg
cltd
jg
mov
xor
mov
xor
scas
xor
and
dec
push
ja
dec
push
stc
jge,pt
jg
add
push
mov
call
movsb
les
dec
xchg
mov
push
xchg
add
enter
adc
lahf
cmp
jmp
jl
xchg
test
sbb
cltd
mov
xchg
negb
push
mov
sahf
nop
cli
dec
mov
nop
xchg
fildll
mov
sar
aad
add
out
test
test
inc
mov
lods
enter
add
movsb
xor
shl
jmp
xlat
mov
iret
or
push
mov
mov
adc
xchg
enter
xchg
inc
sbb
ss
cmp
jp
lret
rolb
adc
ds
jge
add
pop
stos
sub
mov
orb
sbb
aad
ret
sbb
aam
in
int3
jnp
rorl
pop
mov
es
je
cli
shrb
lea
in
or
fwait
iret
addb
repnz
adc
pop
jecxz
cmp
aad
mov
add
dec
jnp,pn
movsl
dec
cmc
in
jnp
or
lods
or
dec
sbb
lds
push
cmp
cmp
and
and
fdivl
xchg
xor
js
xchg
jle
mov
mov
shr
sub
xchg
cmpb
cmp
stos
loopne
mov
xchg
pop
lods
xchg
and
push
loopne
nop
and
jns
bound
mov
xor
push
dec
jle
jne
jg
inc
dec
mov
mov
out
int
xchg
leave
ficompl
jbe
pop
pop
pop
mov
adc
pop
sub
xor
or
xor
test
shlb
rcrl
xlat
ja
pop
inc
adc
gs
mov
lock
outsb
mov
mov
aaa
xchg
fwait
push
and
adc
fwait
lea
mov
ja
aam
sbb
mov
pop
jno
sbb
cmpsb
pop
es
sahf
pushl
dec
pop
jl
idivb
test
jno
cwtl
mov
cmp
popa
cli
jg
cmc
inc
addr16
mov
call
sbb
fsubrl
loop
dec
cmp
addl
fldcw
or
push
jge
push
mov
sub
push
fwait
mov
out
mov
call
lret
bound
scas
mov
push
dec
adc
cmp
test
cmp
and
lcall
xchg
add
jne
mov
add
pop
jns
js
push
cli
mov
xchg
int
sar
jae
jnp
jmp
mul
lret
repnz
jo
ret
jb
jle
jno
out
push
push
xchg
cmp
dec
sahf
loop
out
shll
push
lahf
jo
pop
jns
push
shlb
or
add
shr
cmpsl
mov
jnp
mov
cmp
movsb
mov
sbb
out
je
push
mov
scas
movsl
sbb
repnz
loope
daa
pop
fmull
js
xchg
inc
jge
push
rol
mov
insl
add
xchg
mov
aam
stos
dec
lcall
push
into
pusha
negb
imul
jns
int3
int
mov
in
cmpl
cmp
popf
outsb
sbb
cmp
scas
mov
test
ficompl
out
fwait
enter
add
xchg
mov
loop
and
jnp
loop
fbld
rorb
jmp
jb
mov
fsubr
sub
lods
addl
sbbl
adc
mov
into
xchg
jp
test
aad
jno
lods
inc
inc
movsl
jne
into
test
pop
aas
fcoms
out
hlt
stc
jmp
jne
sbb
xchg
ss
jle
xor
in
adc
nop
push
mov
addb
jmp
mov
pop
in
and
push
jle
adc
hlt
pop
ret
addr16
push
and
lods
xchg
push
cld
jl
lret
cmp
in
test
mov
test
imul
add
mov
iret
add
mov
stc
aam
push
int3
push
pop
mov
in
test
repnz
das
xchg
sub
sbb
mov
scas
xchg
jg
sahf
fmuls
mov
jmp
out
movsl
mov
sbb
fists
out
jo
int
es
xchg
fs
mov
loop
sahf
sub
dec
gs
jns
xchg
jae
scas
bound
push
test
clc
sbb
mov
insb
jecxz
push
mov
scas
mov
mov
mov
mov
popa
arpl
jg
jno
push
and
leave
int3
rorb
mov
jl
arpl
mov
dec
jae
adc
jno
fstpt
cld
sub
pop
dec
scas
mov
mov
jle
push
mov
dec
fsts
sbb
pop
xchg
mov
sbb
test
adc
lods
xor
add
pusha
int
mov
lret
test
popf
inc
push
leave
insb
daa
test
outsb
push
cmp
push
cld
add
aaa
scas
in
pop
dec
clc
and
inc
cmp
jb
call
jns
xchg
je
insb
mov
imul
fisubrl
push
jns
clc
push
sbb
xchg
sub
in
and
out
pusha
fadds
push
cmp
mov
outsb
mov
cmp
fidivl
mov
sub
push
test
inc
sarb
or
mov
mov
ja
sub
adc
cmpsl
jg
stc
mov
mov
pop
pop
test
adc
imul
shll
sbb
loopne
sahf
add
xchg
xchg
adc
test
rolb
mov
push
movsb
xor
mov
fcomip
les
movsb
xlat
test
adc
pop
xor
mov
into
int3
dec
out
jecxz
jmp
mov
fmull
pushf
fists
aam
nop
dec
je
in
mov
sub
lods
sti
jne
inc
add
xchg
ss
sub
xchg
xor
push
mov
pop
imul
idiv
jl
test
inc
pushl
lods
lret
insb
lea
inc
mov
cmp
mov
lods
outsl
sub
ss
addl
mov
ljmp
lods
cmp
loopne
outsb
adc
cld
icebp
daa
hlt
push
mov
sub
cmc
shr
shlb
je
mov
mov
fcmovnu
sti
clc
push
ret
mov
xor
iret
out
xchg
adc
ja
aas
bound
roll
sbb
movsl
addr16
in
cmc
fwait
repnz
dec
mov
fnstenv
mov
ja
jbe
mov
loope
shl
jge
or
pop
xchg
std
mov
mov
gs
mov
in
pop
cmp
jp
xor
cmp
je
jne
add
lcall
adc
adc
xlat
adc
sarb
ror
fists
and
outsl
ret
sbb
dec
aaa
pop
mov
pop
cmp
xor
pop
arpl
lahf
bound
xor
lahf
test
inc
push
pushf
imul
ret
sbb
lock
ds
stc
shl
rolb
pop
jb
in
std
enter
jae
ja
xchg
inc
scas
out
dec
cld
xchg
sbb
pop
pop
xchg
mov
sbb
ret
inc
inc
mov
je
cs
xor
sub
in
cmp
dec
mov
or
add
xlat
xorl
rorb
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
xor
clc
adc
xchg
fmuls
dec
ret
cli
pop
mov
pop
iret
inc
jecxz
push
out
sahf
lock
push
or
push
xlat
clc
xchg
push
or
cmp
push
cmp
lret
or
inc
rclw
cmp
adc
movsb
push
mov
sub
push
sub
xchg
pusha
lods
pop
mov
jbe
outsl
shlb
mov
imul
xchg
or
jb
jae
cld
lret
scas
ret
cmc
and
push
xor
out
fisubs
sbb
jg
js
int
leave
dec
or
mov
scas
cmc
mov
js
pop
sbb
fdivrs
or
push
push
jmp
clc
out
fcmovnu
sub
and
std
stc
nop
xchg
mov
bnd
add
int3
out
and
pop
push
inc
xor
inc
addr16
jge
pop
or
and
sti
sbbl
mov
jmp
add
mov
cmpb
js
lret
cmc
sub
adc
and
adc
test
push
nop
sti
lahf
xor
push
jl
cwtl
imul
rcrb
or
xor
xchg
mov
mov
add
xor
jge
and
test
pop
sbb
dec
adc
push
mov
lods
nop
loope
sti
sbb
mov
dec
enter
sub
add
xchg
mov
pusha
sbb
jmp
scas
mov
fidivrl
sub
mov
jb
inc
mov
adc
mov
push
add
repnz
test
cmp
in
out
jmp
cmp
mov
jnp
jno
in
cmp
movsb
add
or
and
scas
mov
aaa
popa
popf
out
fsubs
inc
insb
push
mov
fwait
push
mov
sbb
or
jns
jnp
mov
icebp
lods
das
push
jnp
decl
ja
inc
xchg
inc
xchg
jns
jge
push
sbb
aaa
push
fwait
es
std
repnz
or
xor
jle
mov
repnz
outsl
push
inc
hlt
jb
cmpsl
out
jp
in
push
cmpsl
cld
pop
xchg
lea
idiv
mov
enter
test
ljmp
fiadds
cld
gs
pop
test
imul
mul
pop
inc
mov
gs
inc
insl
inc
pop
sub
adc
lea
int3
lahf
jbe
mov
sar
std
pushl
jns
icebp
repz
xchg
popf
mov
inc
fldt
movsb
cmp
add
rcl
dec
mov
scas
mov
scas
aad
aam
outsb
in
mov
aas
dec
test
mov
ds
cmp
repz
push
adc
pop
jecxz
inc
lcall
add
push
repz
shrl
pusha
mov
cmpl
mov
subl
cwtl
inc
mov
cwtl
clc
repz
mov
dec
sbb
mov
insb
push
fcoml
lock
mov
inc
rorb
push
inc
test
test
pop
scas
sub
jmp
cltd
mov
cmc
cmp
xchg
add
and
fbld
scas
sbb
scas
lock
add
mov
jae
cmc
cmpxchg
ret
push
mov
dec
add
sbb
nop
mov
scas
xchg
sti
sub
shl
loop
stos
inc
sahf
fsubs
mov
pop
ret
mov
js
mov
mov
fidivrl
fstpl
gs
repz
movzwl
add
mov
adc
jns
cmpb
mov
js
sub
mov
push
inc
xchg
aad
cltd
mov
cmp
mov
xorb
mov
inc
sahf
lods
xor
push
pop
mov
cltd
xor
xor
inc
sbb
int3
fisubrl
sbb
sbb
adc
mov
mov
aaa
adcb
mov
inc
arpl
mov
in
pop
jle
dec
loope
cmpl
xor
mov
push
push
add
andl
andl
and
inc
inc
shl
pop
mov
adc
dec
sbb
fists
inc
mov
mov
outsl
sbb
cmp
aas
test
jae
xchg
test
sbb
mov
sbb
mov
mov
outsl
mov
and
lds
add
jbe
test
lods
sbb
repz
add
test
in
mov
vcvttss2si
jmp
push
loope
in
gs
aad
call
xchg
xor
dec
scas
jg
in
notl
lock
into
daa
inc
jmp
add
add
scas
and
cld
gs
lock
hlt
stos
cmp
fnstcw
sahf
clc
movsl
mov
cmp
loop
mov
mov
or
cmp
gs
dec
push
mov
sub
mov
cli
jmp
xchg
out
sbb
lods
pushf
sarb
repz
adcb
pop
setg
enter
lahf
lcall
lcall
sbb
dec
les
jmp
loopne
push
js
ljmp
mov
adc
insb
test
shll
movsl
data16
rorb
iret
pop
cmc
cmp
in
into
loopne
loopne
cmp
adc
cmp
push
ds
mov
imul
mov
mov
sub
sub
inc
sub
xor
cmpsb
fcoms
cmpsl
or
cmp
dec
mov
icebp
inc
xlat
pop
xor
cmp
fnstcw
pop
sbb
dec
jnp
push
sub
xchg
mov
inc
or
cmp
ss
push
cltd
or
xor
subl
decl
data16
jo
cltd
rolb
cmc
lahf
jge
les
test
push
loope
lret
mov
jb
mov
push
jle
push
mov
bound
mov
mov
xor
xor
std
jns
ds
int
sub
loop
test
or
sbb
mov
in
dec
daa
mov
mov
in
push
shlb
sahf
out
arpl
pusha
cmp
or
cwtl
cs
add
js
js
inc
imul
aad
sub
cmpsb
or
shll
test
sub
mov
rolb
mov
and
and
fisttps
cli
repnz
test
xchg
scas
imulb
adc
or
mov
mov
mov
jge
adc
xchg
xchg
out
pop
ficoml
push
jo
cmpsl
lcall
arpl
push
xor
mov
aas
stc
shl
lds
lcall
das
xchg
ffree
xchg
jl
add
es
mov
enter
mov
pop
mov
insl
pop
adc
sub
push
xchg
pop
hlt
shl
je
xchg
lahf
sbb
roll
aad
in
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
add
dec
mov
cmp
sbb
mov
push
fwait
pop
push
insl
push
and
mov
stos
push
dec
pop
stos
jnp
ja
pop
scas
adc
call
ss
psrlw
imul
mov
int
out
pusha
je
mov
test
sbb
fisubl
or
ja
mov
cs
fwait
sbb
sahf
movsl
sub
js
jecxz
repnz
ljmp
pop
or
js
and
enter
sarb
mov
inc
or
sti
cmp
push
stos
add
cmpsl
xor
xorl
xor
adc
xor
jno
xor
mov
mov
lea
shr
mov
movb
adc
mov
sub
mov
sub
loope
daa
dec
and
mov
lcall
xchg
dec
pushf
inc
test
insb
andb
fs
pusha
hlt
xchg
adc
pop
or
adc
and
jb
fmul
xor
jae
mov
xchg
aad
mov
cmp
mov
push
pop
shlb
rcrb
fidivrl
call
mov
pop
push
into
add
repnz
xor
aas
cmpsb
sbb
mov
lods
ja
push
ret
xchg
sub
test
mov
sarb
pushf
mov
push
arpl
notl
xchg
cmpsl
mov
adc
mov
and
mov
sub
add
xor
in
pop
inc
outsl
in
dec
repnz
mov
and
fwait
xlat
into
out
dec
out
ret
ret
fisttpll
jb
das
lods
popf
int3
sub
in
cmp
popa
test
push
mov
push
sub
lds
iret
adc
idivl
mov
xchg
mov
outsb
sahf
xor
divb
lcall
push
sbb
or
idivb
mov
jmp
cwtl
mov
lahf
push
inc
into
cld
dec
adc
out
cmp
out
das
jns
xchg
pop
inc
push
inc
jmp
sub
inc
sbbl
inc
adc
pop
cs
data16
or
lock
inc
push
xor
stos
push
cmp
push
sub
fistpll
arpl
pop
lea
lods
push
lret
xchg
in
jae
fimuls
xchg
cmp
inc
dec
jp
cld
arpl
sbb
mov
pusha
testl
mov
fildl
jp
pop
aad
fisubs
xor
mov
dec
std
xchg
test
push
mov
sbb
fwait
int3
js
dec
outsl
shlb
outsl
stos
addl
mov
lods
out
and
or
jo
sar
ficomps
and
mov
arpl
xchg
popl
mov
iret
popa
mov
push
pop
xor
mov
jecxz,pn
dec
lahf
les
cmp
dec
insl
lods
out
xchg
sahf
mov
xchg
dec
jns
dec
out
ds
stc
add
or
mov
cmp
adc
pop
cmp
and
pop
scas
cmpsb
and
dec
xchg
xchg
idivb
inc
mov
into
push
lea
ja
sbb
ljmp
cmc
push
push
pop
stos
inc
stos
push
test
leave
mov
jns
cmp
add
les
jae
loope
scas
rorb
dec
pop
pop
jmp
sbb
dec
fsubrs
insb
cmp
mov
out
xchg
shr
lods
pop
nop
in
mov
ret
push
cwtl
repz
push
lock
pop
fiaddl
push
repnz
jno
popf
leave
fs
jne
and
and
sar
enter
arpl
inc
xchg
aas
popf
jmp
sbb
or
xor
addr16
add
fdivrl
add
adc
sub
sub
aas
enter
test
lahf
test
inc
test
clc
hlt
pop
clc
push
lds
andl
in
mov
jbe
push
lock
add
add
jmp
bound
jne
adc
dec
shl
cmp
fimull
push
int
or
push
stos
imul
cs
arpl
in
aad
xor
das
int3
xchg
lret
sbb
push
int
hlt
sub
mov
mov
cmp
repnz
mov
mov
inc
dec
mov
mulb
mov
xor
mov
int
gs
cmp
ret
cmp
mov
pop
adc
cmp
loopne
in
or
mov
icebp
daa
and
sbb
jle
cmp
sarb
les
daa
sti
lods
pop
push
test
leave
out
cmp
fwait
ja
cs
inc
jno
mov
stos
push
inc
xor
je
add
rolb
xchg
jecxz
jnp
mov
outsl
loop
mov
lret
ret
std
les
push
and
push
roll
and
xchg
push
push
movsl
xchg
inc
out
fdivp
outsl
cwtl
insb
cli
push
or
cltd
scas
adc
leave
js
cmpsb
dec
test
movsb
iret
in
xor
sbb
ficoms
jle
sub
ficompl
xor
adc
pusha
xchg
cmp
mov
mov
jae
mov
mov
arpl
dec
and
lcall
cltd
push
mov
xchg
dec
adcb
push
sbb
ret
les
fs
xor
xchg
push
out
fmull
pop
and
mov
xchg
iret
nop
dec
add
andb
daa
pop
dec
in
adc
roll
test
sarl
fmulp
aam
xor
pop
cmp
xchg
loopne
pop
push
pushw
xchg
mov
sbb
stos
push
pop
sbb
xor
push
out
dec
add
jns
and
pop
inc
cld
sub
sti
cmpsl
int3
movsl
dec
sti
out
loopne
leave
mov
push
push
mov
pop
push
push
insb
es
mov
mov
rcrl
sub
aas
add
bound
jnp
dec
and
push
ljmp
xor
xchg
xchg
xchg
push
aaa
inc
add
lods
cmp
pop
mull
mov
adcb
push
cs
je
jns
lea
mov
in
fsts
out
xchg
test
stc
in
dec
push
mov
rolb
shl
ss
in
dec
lahf
jb
lds
mov
mov
pop
push
iret
int3
push
add
not
xchg
leave
add
cmp
mov
xchg
jl
aaa
out
jmp
fidivs
or
not
jle
mov
xor
dec
dec
adc
push
loop
jbe
xchg
pop
mov
fs
out
outsl
jge
call
dec
dec
cmp
add
test
push
pop
nop
mov
std
pop
in
add
jne
icebp
ss
arpl
jb
pop
inc
and
lods
sub
or
lods
mov
imul
repz
arpl
mov
insl
out
jno
inc
test
cmp
sbb
daa
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
add
or
ja
inc
xor
xchg
lock
cmp
out
sub
dec
fwait
mov
xlat
xor
mov
sarb
jno
in
fwait
dec
jns
shrb
push
gs
cmp
mov
orl
and
fdivrs
lahf
sub
push
xchg
push
sbb
sahf
sti
test
jg
jo
pop
shrl
outsl
jno
or
test
jmp
and
jo
test
xlat
adc
pop
push
cmp
sub
aad
rol
jo
push
clc
mov
pushf
sbb
dec
push
aaa
pop
lcall
cmpsb
mov
mov
dec
gs
gs
lea
xchg
push
repnz
pop
pop
xlat
jle
adc
roll
or
xor
mov
mov
cltd
mov
sub
fldt
push
bound
mov
xor
testl
ds
lods
je
ds
push
jge
adc
mov
xor
lock
out
mov
iret
jecxz
jge
xor
fildll
fnstcw
lds
pop
test
cmp
sbb
push
call
lahf
popf
xchg
sbb
or
call
stos
jno
sub
xchg
push
adc
adc
adc
aaa
pop
jbe
fcoml
inc
mov
flds
jo
mov
xor
pop
cmc
ret
xchg
jl
xchg
aas
fwait
bound
mov
xor
out
or
sti
fcomps
xor
orl
cltd
jnp
dec
daa
lods
add
lcall
fistps
pop
or
jl
pop
out
jo
les
lcall
sbbl
subb
push
std
xor
mov
inc
push
fldt
dec
and
dec
adc
mov
divl
scas
aad
cltd
xlat
ja
es
inc
test
adc
lods
sub
jnp
xchg
out
in
cmp
jne
fwait
xor
outsl
sbb
fs
xchg
sti
jge
pop
scas
and
mov
push
mulb
mov
loope
insb
push
jl
mov
pop
test
mov
add
dec
push
lret
bound
cmp
jmp
dec
movsl
push
push
sub
stos
jne
xlat
mov
and
fsubrs
mov
sbb
cmp
test
mov
popa
aaa
mov
jmp
push
clc
adc
sub
aad
lret
outsl
test
cmp
fmulp
push
and
mov
lods
fcmovne
cs
mov
jg
popf
ret
js
sbb
shlb
imul
inc
inc
sbb
adc
dec
std
or
add
outsb
arpl
sbb
inc
pusha
cmc
arpl
out
lods
and
in
repz
stc
adc
test
sbb
shrl
dec
enter
scas
xchg
jl
add
mov
adc
and
ljmp
cmp
adc
mov
aam
hlt
mov
sbb
decl
add
hlt
repnz
mov
rcrb
jno
test
sbb
fstps
in
dec
mov
lock
sbb
pusha
xor
aaa
cmpsl
sbb
mov
mov
inc
push
push
pushf
pop
cmp
hlt
push
ljmp
negl
xor
mov
xchg
cwtl
pop
jae
push
and
pop
test
add
out
ret
sub
movsb
mov
push
jmp
cmp
loop
lods
fsubrs
sbb
ds
lret
cmpsl
loop
pop
mov
repz
imul
insl
rorl
aas
enter
sar
aas
push
mov
mov
addr16
pop
out
jne
add
cmp
and
mov
or
push
fs
sbb
xor
cmp
inc
cmp
inc
sti
insl
mov
and
mov
jp
into
stos
and
ret
int
jo
enter
jl
push
or
add
mov
mov
sub
arpl
jnp
jge
or
inc
xor
mov
pop
inc
lahf
jae
outsb
inc
mov
fs
jno
es
lahf
in
jecxz
push
insl
add
in
stos
xchg
es
test
xor
aaa
push
or
sahf
xor
sarb
lret
lret
test
jle
xor
pop
scas
jno
push
mov
ret
pop
jmp
shlb
aam
addr16
pop
std
dec
ljmp
jecxz
jo
lea
rorl
inc
popf
xchg
mull
mov
mov
sbb
xchg
add
xlat
dec
inc
sbb
out
aas
add
jl
sub
sbb
aas
add
adc
std
fldl2t
bound
sub
movl
mov
lret
adc
in
xchg
mov
test
jnp
in
pushf
pop
sarb
cmp
push
ss
addr16
pop
pop
jns
loopne
orb
repnz
aad
xor
mov
mov
inc
into
jno
sbb
sbb
mov
inc
sbb
aas
leave
xor
mov
mov
fucom
stc
xlat
fdivrl
and
lahf
push
cmc
sub
stos
mov
push
loope
cmp
cmp
or
xchg
fwait
test
push
and
sbb
popa
cwtl
xor
js
int3
mov
repnz
push
xchg
ljmp
mov
inc
jne
dec
loop
test
pop
in
int
out
dec
je
mov
into
inc
scas
mov
imul
in
vpavgw
je
es
js
mov
sub
cmpb
cmp
mov
fsubl
stos
aad
push
loopne
aaa
mov
mov
mov
cmp
aad
push
enter
lock
cs
mov
mov
jle
jb
inc
movsb
nop
out
andl
lea
shll
enter
lds
jnp
mov
movsb
cld
jbe
stos
mov
xchg
leave
out
cmc
cli
mov
repnz
test
arpl
xchg
int3
lods
sbb
push
in
sbb
jle
inc
sub
in
inc
and
outsb
pop
les
mov
cmpsb
xchg
mov
adc
outsl
adc
decb
mov
in
in
mov
adc
dec
mov
pop
nop
sti
push
jecxz
cmp
dec
fsts
pop
data16
push
pop
sub
addr16
movsl
xor
loop
popf
shrb
xor
sbb
push
je
add
icebp
sarl
stos
dec
addr16
imul
pop
pop
lock
jb
mov
xor
js
sti
jl
xchg
shll
mov
push
xor
xchg
in
push
mov
jmp
and
and
test
ja
mov
addb
in
push
sub
fbld
sbb
rolb
and
lods
jns
jnp
lods
sub
nop
stc
jg
mov
dec
pop
lock
fs
int3
ret
inc
fcmovnbe
xchg
or
imull
add
add
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
stos
faddp
lahf
cld
adc
sahf
stc
cmpxchg
mov
xor
loopne
push
xchg
xchg
mov
testb
mov
lret
addr16
dec
inc
inc
xchg
dec
shrl
aaa
mov
inc
sbb
adc
scas
fnstsw
mov
sbb
xchg
leave
sbb
cmc
xor
loopne
aaa
and
mov
scas
fs
ret
xchg
sbb
dec
scas
mov
and
or
aam
fcomps
dec
push
es
mov
daa
js
pusha
jns
push
xchg
jno
popa
das
cmpsl
inc
ret
dec
lods
or
inc
lods
lock
call
mov
cs
xor
imul
sub
mov
test
xor
mov
sbb
jne
and
sub
inc
sub
std
daa
jb
mov
cld
imul
xor
lcall
push
stos
mov
cmp
pop
mov
dec
fnsave
decb
cwtl
jo
jno
or
scas
mov
lahf
arpl
add
xchg
cwtl
jecxz
cltd
fadd
call
mov
in
rcrb
stos
push
repnz
leave
repnz
psrld
inc
popf
jecxz
icebp
cli
jge
mov
out
hlt
fwait
mov
add
imul
mov
lds
inc
daa
jae
outsl
loop
jne
cmp
stc
lret
inc
aaa
add
push
and
xchg
loope
insb
mov
aad
mov
js
cmp
sahf
stc
stos
add
subl
xchg
je
cmp
clc
outsl
mov
into
dec
pushf
inc
dec
xchg
je
cs
dec
dec
sbb
inc
into
movsb
loopne
cmp
andl
and
sti
outsl
push
into
jmp
imul
and
ret
stos
dec
push
cmp
movsl
ljmp
mov
int3
ja
das
pop
lcall
jge
inc
int
jp
aam
pop
jl
test
jle
or
mov
int
ds
cmp
mov
mov
repnz
aas
cmp
push
gs
bound
in
ds
sub
clc
sub
mov
sub
sbb
pop
mov
clc
mov
inc
mov
lods
cmpsb
test
push
fadds
pushf
shrl
jp
add
mov
push
push
out
bound
or
shrb
cmp
inc
xlat
mov
dec
xchg
imul
xor
push
jnp
mov
test
insb
push
jb
cmpsb
int3
xor
jl
sbb
scas
movsb
insb
aaa
or
jecxz
rcr
divl
push
cmp
adc
in
adc
aas
mov
cld
pop
dec
pop
dec
icebp
jo
sbb
out
push
add
push
cmc
adcb
fsubrs
cltd
cmp
or
add
pop
mov
xchg
ds
push
ljmp
jbe
loope
dec
fstpl
xchg
js
inc
aas
push
or
int3
pop
cmp
iret
sbb
loope
lods
jmp
sub
inc
test
dec
stos
stos
sub
inc
and
das
js
jne
shrl
jae
in
mov
xchg
push
push
fcmove
sub
cwtl
jle
fsub
jl
das
mov
scas
sub
movsb
mov
js
out
lods
inc
shl
adc
fimull
push
push
fs
dec
xchg
mov
xor
mov
mov
cs
mov
and
mov
and
repnz
inc
and
adc
add
mov
mov
xor
or
dec
jmp
ret
pop
inc
xor
dec
and
ficoms
scas
sahf
pop
iret
and
push
xchg
ja
xchg
outsl
and
repz
and
loopne
mov
test
or
xor
lods
aam
mov
bound
xor
pop
cmpsb
lahf
sti
mov
cmp
movsl
cmpsl
ds
cmpsb
push
mov
stc
ss
repz
mov
ds
add
mov
cli
push
sub
mov
inc
popa
inc
bnd
aam
aas
cmp
insb
call
mov
inc
cltd
mov
sub
push
sub
push
sub
imul
push
sbb
outsl
jo
push
push
xor
sub
into
lds
xchg
das
sbb
mov
dec
sti
lret
lds
add
push
imul
add
fdivs
arpl
xlat
pop
dec
cltd
add
jp
fldl
mov
inc
adc
cmc
rol
das
aam
jne
fs
sbb
bound
sbb
aam
xchg
pop
test
es
add
cmp
jmp
inc
dec
cli
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
