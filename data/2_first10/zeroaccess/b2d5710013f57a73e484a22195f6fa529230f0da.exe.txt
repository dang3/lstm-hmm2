add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
out
mov
jle
fidivrl
jle
cmp
fld
ja
or
daa
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
mov
or
push
lods
cmpsb
hlt
dec
jno
test
cli
popf
inc
dec
enter
adc
aas
xor
rcr
adc
daa
fs
xchg
in
rcr
mov
bound
add
cld
pop
fbstp
mov
ljmp
xchg
pop
popf
lods
jecxz
lret
repnz
jg
adc
cld
les
inc
std
mov
sub
lret
call
push
sub
sahf
adc
mov
sbb
imul
mov
mov
jmp
fcmovnb
out
pop
cmp
es
mov
jae
push
mov
stos
addr16
ficomps
sti
in
cs
clc
push
xlat
and
movsb
sbb
test
sbb
push
jle
add
movb
lret
xor
add
add
adc
and
scas
pop
addr16
addb
jle
add
arpl
test
ja
mov
mov
adc
mov
pop
in
cmpsl
push
les
int3
inc
int3
fs
divl
std
loop
aam
and
dec
fimuls
and
aaa
adc
mov
xor
sbb
ret
cmpsl
jl
in
inc
push
xchg
cmpsb
loopne
sub
xor
lret
pop
adc
outsl
scas
sub
jo
repz
out
mov
xor
lock
in
mov
shrb
movsl
bnd
mov
jge
xchg
pop
adc
out
jbe
fld
popf
lret
cmp
cmp
cld
mov
push
xchg
push
clc
sbb
es
jne
xchg
out
mov
sbb
jo
mov
pop
push
mov
cld
fnstsw
push
fdivrs
sbb
xchg
sti
stc
xor
xchg
add
lcall
and
out
adc
jns
lods
ret
in
inc
ret
dec
inc
pop
inc
cmpl
sbb
js
push
sbb
sbb
or
xchg
inc
in
dec
pop
ljmp
jnp
outsl
sbb
xchg
xor
add
stc
daa
adc
rorb
xor
add
or
stc
dec
add
aas
lahf
lret
iret
xor
test
jle
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
loope
push
jle
jg
jle
out
jle
daa
pop
sti
dec
pop
mov
mov
mov
push
out
mov
out
or
in
out
arpl
out
pop
or
clc
out
fucomp
sbb
bound
fwait
lcall
les
insl
xchg
xor
cmp
enter
fistpll
jne
adc
aad
or
cmp
leave
pop
sti
sbb
push
xchg
gs
fnstenv
dec
push
add
sahf
mov
mov
mov
stos
push
mov
mov
out
cmp
fs
mov
out
mov
imul
inc
and
int3
fwait
mov
adc
jmp
cltd
mov
in
push
push
adc
or
popa
and
push
mov
push
and
jmp
mov
pop
and
pop
adc
stc
fucomp
and
inc
xor
shll
jns
leave
push
js
fwait
push
je
mov
ds
xchg
test
add
and
mov
jmp
cwtl
mov
cmp
test
or
sbb
dec
ljmp
sub
stos
bound
ja
sbb
imull
stos
pop
xor
pop
lahf
outsb
dec
jp
fistpll
add
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
xlat
add
jle
jg
jle
jge
int3
lods
loopne
in
fildl
imul
imul
mov
mov
add
stos
pop
push
push
inc
test
int3
adc
cld
test
scas
dec
dec
leave
je
add
cmpsl
push
jo
push
in
and
or
and
mov
je
push
adc
out
test
or
div
jl
sub
inc
and
repz
movsl
mov
xchg
call
shll
mov
jl
insb
insb
pop
mov
push
pop
dec
aam
xor
fldcw
jl
gs
add
push
gs
lret
nop
popa
roll
sbb
push
mov
jne
int
sbb
ja
sbb
test
or
pop
pop
xchg
fsubrs
push
sub
xchg
jl
push
stos
adc
fdivrs
cmp
inc
xchg
xor
fists
std
jge
mov
mov
adc
pop
mov
sti
xchg
or
in
sbb
lret
aad
xchg
stos
jbe
lahf
fs
and
fcompl
orl
inc
fsubrs
adc
aad
xlat
ret
and
hlt
test
sub
inc
lods
pushf
inc
jmp
dec
dec
cld
imul
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
ljmp
ss
push
test
scas
jno
pop
rclb
mov
stos
fcomps
mov
xchg
sbb
hlt
sub
sbb
push
clc
test
push
jns
xchg
call
nop
fidivs
outsl
dec
es
jge
or
enter
leave
pop
insl
xor
es
fldl
shrb
testl
inc
bound
sbb
sti
inc
sti
ljmp
sub
jns
fs
in
ss
mov
test
imul
sbb
vprotb
lods
lds
pop
jmp
loop
out
mov
mov
popf
inc
dec
inc
out
je
ds
xchg
das
push
adc
add
sbb
test
or
mov
xchg
cmp
jns
dec
xor
test
pusha
and
xchg
mov
jo
sub
pop
mov
pop
std
popf
divb
idivb
add
push
cmp
clc
movsl
mov
pop
cmpsl
scas
push
fstpt
mov
sbb
test
add
stc
sub
subb
hlt
add
outsl
aaa
mov
test
sbbb
int3
imul
pushf
loopne
dec
dec
cmp
call
outsl
xor
add
adc
add
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
aad
sbb
jo
jle
jg
jle
xor
inc
mov
imul
inc
ja
scas
mov
aas
faddl
jl
mov
adc
push
add
sbb
mov
cmp
je
mov
jb
add
imul
lret
push
mov
adc
rcl
push
xchg
sahf
pop
in
cmpb
stos
shrl
sbb
enter
mov
xor
inc
iret
xchg
push
dec
inc
andl
cmp
mov
pop
add
pop
xlat
and
pop
jmp
mov
fidivrs
dec
adc
outsl
fdivr
shlb
neg
pop
out
les
xchg
xchg
call
shl
mov
cmp
fildll
stos
mov
arpl
cmp
inc
pop
out
dec
outsb
loop
inc
mov
mov
pop
test
cwtl
jb
add
add
mov
fcomi
and
adc
fdivp
in
inc
pop
cmp
iret
mov
mov
cmpsb
cmp
push
mov
push
stos
pop
mov
sbb
xor
or
push
push
ret
mov
popa
dec
lret
popf
jg
and
adcl
dec
in
popa
cmp
cmp
or
out
aas
mov
mov
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
sbb
std
push
jbe
jle
jg
jle
movsl
inc
inc
jnp
mov
imul
mov
pop
cs
push
sub
mov
pop
pop
loop
push
push
cmpsl
fnsave
xchg
imul
push
stos
lcall
jecxz
sbb
push
pop
sub
or
or
xchg
ja
xchg
and
subl
sbb
je
ror
cs
or
ret
cs
xor
mov
repnz
mov
pop
pop
lods
jl
push
and
pop
cmpsb
lds
inc
stc
fwait
int3
sub
in
jl
sahf
xchg
pop
mov
inc
cmp
rcll
jge
or
push
clc
lock
mov
out
push
js
repz
pop
rcrb
dec
mov
insl
or
push
movsl
mov
pop
pop
fs
mov
js
aaa
test
in
sahf
repnz
adc
out
mov
fistps
popf
aad
rcll
fld
repz
xlat
fisttps
shl
pop
sub
pop
out
enter
jge
popa
daa
mov
jnp
movsl
dec
addr16
clc
je
aam
mov
shrb
or
xchg
cmpsb
sub
sahf
iret
sub
dec
test
fstpl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
cmpb
jg
jle
jae
scas
test
sub
jns
adc
in
xchg
jmp
shll
add
je
lret
dec
xorl
jbe
cmp
adc
dec
nop
je
mov
aad
adc
xchg
push
xor
lock
add
push
int
lock
mov
cli
rclb
and
cmpsb
fnstcw
push
push
cmp
xor
mov
aad
jge
sti
stos
cli
fisubrl
xor
sbb
lahf
xchg
adc
cmp
repnz
insl
inc
pop
add
into
test
lcall
hlt
jg
push
les
pushf
mov
dec
stc
movsl
push
push
test
pop
in
pop
sub
rol
ret
jmp
mov
sbb
aam
pusha
aad
pop
or
jno
scas
fnsave
cmc
scas
sbb
cmp
sub
add
push
pushf
and
out
repnz
cmp
inc
xchg
lahf
lock
jo
jnp
xchg
popf
popf
gs
movsb
add
out
or
mov
adc
fildl
pminsw
push
push
stos
xor
and
xchg
pop
ds
and
scas
jg
inc
mov
pop
lcall
ret
dec
loop
cli
fs
fs
imul
add
arpl
ljmp
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
enter
pop
je
jle
jg
jle
scas
test
mov
pusha
lods
mov
dec
push
insl
in
sti
add
mov
adc
mov
dec
cmp
adc
push
pop
out
xchg
jne
scas
popf
jb
xchg
data16
pop
push
mov
lods
jl
and
lea
push
mov
loopne
shrb
cli
xchg
xor
mov
mov
lock
pop
and
cld
add
pop
test
in
out
jg
insb
ret
jmp
lret
hlt
mov
sbbb
mov
cmp
cmp
xorl
faddl
jb
mov
or
imul
xor
mov
sbb
in
lods
imul
test
or
in
jecxz
call
imul
hlt
push
ljmp
pop
lods
mov
loope
mov
in
sbb
or
cli
stc
rorl
pop
addr16
cmp
shrb
adc
rorb
movsl
jl
push
and
add
stc
bound
in
jno
mov
and
xor
lea
mov
lret
movsl
xor
pop
pop
enter
sub
dec
jmp
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
xchg
xchg
fnstcw
or
fidivrl
jle
nop
data16
or
test
lret
push
fdivl
dec
out
cld
dec
adc
adc
daa
ss
xchg
stos
icebp
add
cmpsb
stos
ss
cmp
shlb
fadd
xchg
in
push
out
out
push
sbb
jl
push
hlt
pop
push
dec
adc
xlat
pop
insb
dec
hlt
cmc
cs
pop
cmpsb
mov
jo
add
mov
mov
dec
pop
gs
loop
int
inc
jmp
loope
stos
out
test
cli
in
mov
or
sahf
pop
sub
sarb
and
rorb
ret
orb
sub
daa
mulb
mov
nop
dec
mov
pop
in
mov
inc
pop
leave
test
shlb
testb
xor
adc
mov
mov
dec
mov
stc
mov
fnsave
push
adc
jecxz
adc
fldt
mov
push
add
and
adc
jl
sbb
pop
jb
xchg
xchg
inc
adc
icebp
cld
ret
mov
daa
push
push
stos
push
aad
push
mov
or
cli
and
mov
inc
adcl
and
adc
cmpsb
clc
int3
inc
in
or
leave
js
daa
xchg
pushf
jns
and
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
popf
mov
xchg
jle
and
jle
jns
sub
jnp
and
sub
sar
dec
pop
loope
lss
lds
pop
mov
test
mov
in
push
aad
mov
and
imul
repnz
repnz
inc
cmc
mov
fcmove
insb
mov
cmp
insb
add
pushf
ljmp
js
test
cltd
inc
int
mov
dec
mov
pop
mov
xchg
fwait
xchg
in
repnz
lods
mov
inc
push
add
mov
push
pusha
push
sbb
xchg
xor
fists
clc
cli
pop
xlat
mov
jge
test
sbb
stos
cltd
jl
hlt
test
sbb
mov
js
sub
lea
pop
sbb
xchg
in
mov
or
les
scas
mov
sub
sbb
stos
mov
cmp
shl
ret
popa
xor
aas
repnz
xorl
xlat
add
mov
je
cmp
and
lea
jo
out
inc
jo
xchg
pop
stc
cmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
and
or
and
jle
stos
cmc
in
mov
sbb
push
sti
loopne
and
pop
inc
mov
cmp
stos
andb
into
mov
pop
jmp
into
mov
inc
outsb
aam
add
rorb
jo
push
xor
inc
into
sub
out
insb
fdivrs
mov
jnp
aad
pop
sti
into
xchg
fmulp
xchg
out
mov
scas
scas
dec
mov
outsl
loop
push
and
ja
repz
sbb
mov
inc
loop
xchg
mov
mov
add
inc
ljmp
nop
sbb
fwait
das
xor
clc
clc
sub
nop
leave
daa
dec
or
and
aaa
cwtl
pop
jmp
add
push
in
or
cmc
cltd
loope
sub
push
sbb
outsl
mov
add
fdivl
push
hlt
pop
testb
int
add
outsl
lcall
andl
mov
movsb
testl
jne
and
dec
xor
adc
data16
test
push
shll
and
das
mov
inc
jmp
or
mov
or
sub
cs
jl
jle
and
jle
lret
loope
sbb
daa
xchg
movsl
pop
hlt
xlat
ljmp
xchg
cmp
scas
lds
xchg
jp
loope
jp
out
add
mov
mov
clc
mov
and
iret
jno
daa
push
lods
or
ret
ja
sbbb
mov
jle
pop
adc
xor
cmp
xchg
and
and
xor
xor
add
jbe
call
sub
mov
sbb
and
dec
adc
fistl
orl
clc
push
or
push
pop
stc
ljmp
inc
pusha
mov
stos
xor
cmc
fildll
pop
dec
mov
out
mov
scas
std
jne
adc
addr16
lcall
clc
jmp
in
or
push
jae
bound
hlt
jp
sub
bndstx
xchg
popf
inc
cmp
mov
mov
dec
xlat
ss
add
push
leave
add
cmp
hlt
and
xchg
cmc
xchg
lds
in
enter
add
lcall
xchg
cmp
lret
xchg
ret
pop
pop
mov
and
xor
adc
pop
pop
inc
adc
push
add
cmp
sbb
test
or
add
cmp
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
lret
and
jle
and
jle
push
cltd
jmp
inc
movsb
or
fdivrl
xchg
xor
mov
repnz
repnz
mov
xchg
mov
roll
faddl
out
cmovp
push
loope
stos
in
xchg
sahf
push
jg
jg
fstpt
mov
std
mov
mov
rorl
out
dec
xchg
in
jae
mov
pop
imul
fimull
cltd
hlt
in
arpl
and
ja
test
fcomip
jle
sub
scas
aaa
xor
jecxz
jne
insb
fstpt
fs
aad
pop
or
stc
pop
into
loope
sbb
xor
lods
jbe
frstpm(287
xchg
mov
lock
xchg
add
cmp
aaa
int3
jne
xor
pop
insl
test
push
pushf
mov
and
iret
mov
imul
enter
push
test
or
mov
push
xor
lcall
test
daa
addr16
in
js
fwait
mov
stc
out
aaa
cmpsb
add
mov
pop
mov
mov
pop
sub
sub
jge
sub
inc
loop
push
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
dec
xor
jg
push
aad
scas
inc
sbb
xor
cmp
shr
cmp
imul
sub
adc
ds
dec
push
cltd
mov
mov
fsubs
mov
lods
jmp
mov
mov
mov
insl
into
mov
add
mov
xchg
cwtl
sub
inc
dec
cmp
movsl
or
sub
js
jb
scas
lret
push
cmpsl
and
pop
clc
aas
das
push
int3
stos
cmp
jl
pop
jmp
xchg
add
pop
aad
push
or
call
mov
xor
inc
push
lods
dec
outsb
xchg
xchg
in
sub
das
or
xchg
pusha
mov
int
leave
dec
fists
mov
fiadds
cmp
fcoml
mov
adc
dec
mov
mov
sbb
lret
rorb
imul
cmp
mov
xor
mov
push
add
sub
xlat
lods
pop
sbb
jg
xor
or
mov
push
cld
add
sub
ja
or
stc
add
imul
mov
jmp
jbe
xchg
call
adc
mov
lahf
or
jle
adc
mov
in
jno
jbe
mov
negl
mov
xor
jnp
cmp
scas
and
xchg
pop
mov
pusha
fldenv
lret
hlt
and
xor
movsl
cld
test
sub
div
and
pusha
mov
dec
mov
aaa
pushf
cmpsb
bound
adc
std
cmp
dec
int3
cmp
or
jmp
xor
push
jle
inc
adc
pop
mov
imul
cs
push
push
shl
arpl
xchg
xlat
xchg
test
aaa
bnd
cmp
fwait
movsb
out
cmpl
and
dec
fnstsw
pushf
push
mov
jl
lea
lea
push
mov
mov
sub
mov
inc
jno
mov
loopne
xor
sbb
mov
sbb
lods
in
es
xchg
push
push
or
push
push
fsub
dec
xchg
mov
filds
decb
push
ss
addr16
mov
mov
sti
shlb
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
ret
mov
and
jle
test
fld
cmp
or
or
and
sahf
jmp
mov
rclb
xchg
mov
aas
cmp
push
test
outsl
test
std
nop
jo
test
adc
jo
dec
pushf
mov
popa
cmpsb
stos
cmc
fidivrs
dec
aam
cltd
lea
or
add
in
sub
xor
scas
mov
and
adc
pop
pop
xlat
ja
sub
mov
cmp
sub
mov
or
les
in
jl
dec
cmp
je
adcl
jae
sub
sbb
mov
and
insl
mov
push
test
stc
sub
movsb
cmp
outsb
stc
popa
or
cmp
insl
out
mov
and
and
cmc
jl
pop
jecxz
mov
jbe
sbb
movsb
ja
outsl
cld
pop
cmpsl
xchg
mov
mov
mov
ret
push
rcrl
std
sti
jl
mov
and
and
jne
pop
mov
push
pop
mov
lock
out
push
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
xor
sub
jle
and
jle
rcr
push
je
mov
mov
or
int3
push
dec
dec
sub
pop
ret
mov
cmc
push
lock
cmpsl
sub
add
dec
adc
pop
or
enter
loopne
sbb
and
sub
sbbb
icebp
cmp
outsb
insb
xor
insb
arpl
imul
mov
dec
arpl
dec
or
fisubrs
cli
push
sahf
ljmp
mov
and
fidivl
int3
pop
mov
mov
jl
mov
gs
jnp
pusha
gs
lcall
daa
adc
aas
lods
xor
jns
add
out
jle
jmp
sub
mov
push
pop
push
mov
es
out
xchg
push
ss
scas
into
outsb
push
sbb
xor
insl
jno
scas
xchg
call
sub
push
aaa
ret
into
call
inc
jbe
jp
push
in
out
inc
rcll
dec
es
push
lods
jb
es
out
pop
das
cltd
fldenv
jmp
call
int3
add
imul
xchg
xor
jmp
int
mov
stc
repnz
loopne
add
and
jle
cmp
or
sbb
repz
movsb
push
lcall
jne
sub
js
push
ss
jae
fistpl
dec
and
into
mov
das
xor
adc
pushf
testb
cmp
das
ret
jge
mov
xchg
pop
push
sbb
cmp
imul
enter
dec
addr16
or
mov
adc
leave
stos
jb
jecxz
shrb
lods
push
xor
pop
inc
xor
mul
and
add
xchg
mov
lds
leave
xchg
add
ret
pop
dec
sbb
mov
xor
call
push
dec
js
mov
fbld
addl
outsl
loope
dec
mov
mov
mov
and
test
into
cmp
inc
into
iret
xor
and
stos
out
jo
mov
pop
jb
lods
pop
cld
jp
pop
movsl
ret
inc
mov
cmp
cmp
sub
sbb
and
sbb
pop
sub
fimuls
shr
pop
add
add
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
inc
push
insl
xchg
and
adc
cmp
nop
fnstcw
ret
roll
cmp
inc
scas
lret
jl
fmuls
aaa
notb
sbb
popa
xchg
into
cwtl
mov
outsl
xor
xchg
shl
outsl
aad
sub
and
fmuls
mov
inc
xchg
adc
out
js
aad
repz
dec
outsl
lret
and
arpl
call
or
or
cld
mov
mov
xchg
cmp
lea
out
les
or
cmp
xor
lock
insl
aaa
cmc
dec
sub
stos
dec
sbb
cwtl
or
cmp
push
lods
mov
mov
popa
mov
adc
cwtl
pop
in
imul
adc
mov
xchg
sbb
push
mov
andb
adc
add
or
imul
inc
test
cmp
xchg
add
addr16
mov
movl
or
in
jb
lahf
pop
sti
xchg
cmp
and
fnstenv
idivl
xor
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
shll
jle
push
mov
psadbw
jns
jbe
mov
rclb
xchg
jns
mov
int3
push
scas
dec
mov
jbe
out
xor
pushf
lret
add
data16
in
ja
cmp
je
popa
jl
repz
out
and
mov
shlb
xchg
or
pop
notb
roll
push
in
mov
sbb
inc
and
push
jge
fnstcw
test
ljmp
mov
sar
adc
sub
xchg
iret
fwait
dec
jl
aad
jmp
lcall
xchg
into
mov
dec
mov
fwait
mov
pop
dec
xchg
scas
and
cmp
and
jbe
addr16
sti
jbe
xchg
in
jl
xchg
mov
mov
push
hlt
subl
pop
xor
testl
shll
outsl
out
add
popa
mov
es
jb
stos
adc
andb
jg
jle
mull
pop
push
movb
add
and
cmc
mov
jmp
jns
mov
dec
js
movsl
mov
lods
inc
int
mov
and
jle
lods
mov
je
or
mov
lds
mov
push
mov
mov
daa
sti
jmp
sbb
cmc
adc
sub
out
fldt
movsb
scas
cmp
in
pop
les
sbb
xchg
jge
push
fstl
cmc
pop
dec
xchg
iret
xor
add
push
xchg
push
int3
cmp
mov
bound
mov
or
inc
imul
mov
scas
into
and
adc
cli
pop
fisttps
push
dec
cmp
dec
push
xor
xchg
enter
std
mov
rcr
xor
repnz
mov
lret
adc
adc
sbb
fidivs
pop
fiadds
out
jg
addr16
cld
adc
dec
xor
or
cmp
aad
stos
jle
xor
xchg
dec
push
xor
leave
and
dec
fbstp
fisubl
jb
hlt
rorb
jo
bound
jae
pop
packsswb
mov
out
inc
inc
sbb
push
lds
ret
xchg
or
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
push
add
and
jle
inc
cmpsb
inc
inc
sbb
shl
cmp
cmp
lods
jbe
lods
mov
outsl
das
negb
je
add
std
inc
sti
adcl
test
andb
jl
pop
and
stos
enter
cld
aad
xor
sbb
movsl
pop
pop
sub
xor
or
cmpsb
mov
outsb
mov
mov
ljmp
jmp
ljmp
push
imulb
bound
sbb
imul
loopne
nop
push
inc
jne
and
push
inc
movb
into
mov
mov
and
and
inc
gs
xor
sub
sarl
push
and
cltd
test
cmp
inc
pop
pop
pop
fldcw
mov
mov
aas
lea
loope
mov
lahf
data16
ds
add
clc
push
divb
lock
and
sbb
mov
lret
inc
rclb
int
or
pop
movsb
pop
enter
inc
fnsave
ds
stos
orb
jo
insl
xor
loope
inc
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
scas
movsb
addr16
sbb
and
jle
adc
mov
sbb
dec
popa
dec
sbb
mov
or
lea
mov
dec
mov
stos
fs
add
test
sbbb
adc
push
iret
jns
lods
pop
push
xchg
es
loope
fsubp
into
aad
dec
pop
push
sub
jmp
fisttps
add
push
cltd
xor
pop
mov
jno
scas
rcl
jae
xor
dec
or
push
dec
fildll
adc
mov
mov
in
mov
lcall
movsl
out
cs
mov
push
mov
stos
or
les
adc
test
aaa
enter
cmp
mov
mov
push
rcll
sub
test
call
dec
cld
dec
sti
pop
mov
int
sbb
subl
dec
cmpsb
icebp
mov
adc
clc
mov
pop
jnp
mov
and
aam
repnz
lcall
jo
xor
int3
cmp
sub
inc
sub
mov
pushf
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
test
jle
jg
jle
adcl
pop
iret
icebp
aam
cwtl
sub
and
jecxz
out
inc
mov
or
jle
jbe
jb
push
cld
sbb
loop
orb
push
or
sub
lret
lock
test
out
or
aam
outsl
lods
mov
jge
arpl
ljmp
test
push
jecxz
push
stos
fistpll
fsubr
cmpsl
mov
insl
jmp
mov
xchg
mov
inc
test
mov
push
xchg
sahf
pop
pop
roll
push
lods
test
pop
sub
and
aad
sbb
sub
leave
jno
lret
sub
sub
push
aad
pop
in
xchg
faddl
mov
mov
sti
push
xchg
gs
cmpsb
out
mov
dec
nop
cmc
add
pop
push
leave
push
test
xchg
jns
jmp
and
and
gs
cmp
push
or
sbbl
int
adc
xchg
push
pop
xor
imul
fistps
fwait
xorb
adc
sbb
cmp
out
int3
push
cmp
jge
out
cmp
or
push
mov
jmp
jb
test
adc
test
lods
sbb
jmp
mov
mov
lds
test
sub
jb
xor
mov
xor
mov
stos
xor
dec
jno
pop
mov
cs
pop
pop
sub
aaa
and
scas
dec
and
push
movd
int3
adc
bound
popf
pop
mov
dec
lea
xor
outsb
or
enter
cs
loop
cmc
add
lods
push
cmp
add
jle,pn
fists
rolb
icebp
out
mov
lcall
div
aas
rcll
mov
jg
and
scas
mov
sub
aas
mov
fdivl
pop
adc
pop
test
or
pop
push
nop
sub
cmp
mov
adc
xchg
pop
in
neg
lods
add
push
bnd
sub
mov
cmp
xor
push
repnz
cs
arpl
fldenv
pop
mov
and
mov
les
ja
mov
xor
mov
ret
add
jae
jecxz
lcall
mulb
push
cs
and
dec
lea
xlat
clc
sub
js
mov
icebp
jnp
cmp
cmp
mov
mov
jno
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
ret
sub
pop
jle
jmp
movsl
jno
mov
or
test
outsl
dec
test
into
or
mov
ret
jle
mov
ret
call
loopne
jae
movsl
cmpsl
arpl
jne
pop
in
enter
push
stc
pop
std
push
andb
cmp
jge
xor
popa
push
imul
push
out
pushf
js
jbe
push
enter
cs
mov
loope
outsl
pop
adc
sarb
inc
sub
sub
push
pusha
insb
out
push
fcoms
test
xlat
jl
cld
xchg
mov
gs
lods
inc
sarl
xchg
std
repnz
mov
lret
popf
pop
cmpsl
or
ficoms
cld
out
shlb
imul
cmc
mov
inc
cwtl
popa
movsb
fwait
cmc
in
add
push
lds
jge
xor
into
movsb
or
sbb
iret
stos
pop
jl
ds
dec
push
in
popa
push
insl
lret
int
lods
in
ja
daa
rcr
adc
inc
popa
cltd
fldl
xchg
and
inc
loop
pop
mov
jne
mov
and
enter
mov
jb
dec
lock
int
test
adcb
xchg
mov
lea
xor
sbb
mov
nop
cltd
cmpsb
fwait
in
roll
scas
ss
ss
out
lods
sahf
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
cmp
xchg
pop
stos
fists
inc
loop
popf
leave
vandps
lock
dec
daa
pusha
xor
xchg
insl
es
lea
inc
call
xchg
ljmp
xor
test
and
push
cmp
mov
xor
ljmp
adc
mov
inc
inc
mov
jo
adc
gs
xor
ret
test
sahf
stc
orl
add
fnsave
xor
mov
dec
repz
stos
and
cmp
jb
pcmpeqd
scas
adc
and
dec
cmp
mov
add
add
out
xchg
inc
sbb
jle
enter
test
out
inc
xor
cmpsb
dec
cmp
pop
sbb
dec
mov
jmp
sub
fiaddl
je
jl
xor
shl
sub
xchg
loope
sbbl
push
mov
jns
pop
cmp
movsl
div
test
jecxz
in
push
pop
addl
jbe
mov
mov
cmp
mov
pushl
jle
or
fcmovu
shlb
mov
pusha
fistps
xor
jns
out
mov
incl
shl
ja
push
clc
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
inc
sahf
jle
jle
jmp
sub
scas
xorl
and
lods
sbb
push
cs
loopne
loop
cmp
stos
ret
or
cmp
negb
dec
arpl
mov
arpl
jno
test
ret
aad
adc
xchg
outsl
les
mov
push
adc
mov
cmp
push
sbb
pushf
mov
repz
std
test
fisubs
jge
pop
or
pop
fldcw
mov
mov
fwait
sub
sbbl
cmpsb
pop
ja
push
jnp
lcall
stc
sub
repnz
loopne
rorl
aas
pop
or
addr16
and
xor
adcl
pushf
iret
pop
mov
or
and
mov
jns
inc
sub
xor
jmp
in
jmp
sub
mov
xchg
std
jmp
add
or
arpl
daa
mov
xor
xchg
idivl
mov
lea
data16
loope
cmpsl
hlt
push
mov
rclb
cltd
daa
int
rol
pop
inc
mov
sbb
pop
fsubrs
rcrb
inc
lcall
sahf
jae
xchg
add
adc
mov
roll
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
loope
adc
fdivrl
jle
sti
dec
jbe
stos
add
stos
into
sub
das
into
mov
mov
test
push
mov
jns
out
icebp
and
inc
xchg
jg
pop
lcall
ja
add
pop
mov
push
fsub
es
pop
mov
adc
push
shrl
adc
pop
xchg
jb
mov
xchg
mov
shlb
adc
jne
cmp
popf
ret
jp
dec
mov
lods
outsb
dec
fists
in
das
sti
sbb
dec
loop
xchg
mov
mov
sub
aam
mov
add
mov
test
dec
cmp
loop
mov
inc
jb
js
inc
or
arpl
faddl
jge
jl
scas
mov
dec
mov
jg
cmpsl
push
sti
lds
ljmp
out
shlb
pop
add
mov
jle
inc
pop
int3
adc
arpl
add
mov
sbb
add
xchg
add
jecxz
inc
mov
add
sub
sub
cmp
xchg
jle
lods
cmp
lahf
ficoms
push
sahf
daa
dec
repnz
cmp
pop
fmull
mov
inc
add
pop
pop
adc
pop
popf
roll
dec
adc
arpl
fwait
sub
pop
or
shll
stos
inc
add
inc
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
cmp
jle
fdivrl
jle
out
test
xor
add
sarb
lcall
cmpsl
loop
sbb
pop
jo
sbb
fwait
pop
dec
sbb
push
mov
dec
xchg
mov
ret
out
push
int3
adc
xor
and
leave
mov
out
jecxz
shlb
ljmp
xchg
les
push
movsb
movsl
sub
in
push
stc
adc
cmp
pop
aad
mov
adc
int
fidivs
mov
mov
pop
xor
mov
pop
sub
inc
lock
add
faddp
fsts
jne
movl
mov
int
push
jle
push
sti
mov
pop
xchg
cmpsl
movsb
mov
into
and
loopne
fisubs
push
add
into
mov
cmp
mov
iret
inc
cmp
arpl
inc
lea
sahf
and
mov
mov
sub
inc
hlt
mov
nop
sub
out
push
jne
mov
mov
mov
inc
mov
sahf
xchg
fucom
in
xor
cli
mov
cld
sbb
ljmp
popf
and
mov
mov
and
adc
push
xchg
popa
and
aam
adc
mov
cs
inc
in
push
xor
roll
mov
mov
jmp
and
pop
xchg
adc
arpl
lret
push
sub
jg
jle
and
repnz
mov
pop
aaa
mov
mov
mov
mov
dec
pop
sbb
sub
xor
xor
andl
push
dec
cmpsb
sbb
outsb
iret
mov
test
add
ljmp
xor
cltd
cmpsb
je
bound
pop
pop
mov
dec
outsl
sub
sbb
pop
insl
mov
cli
jne
icebp
loope
push
scas
mov
inc
cwtl
inc
lods
xchg
loopne
mov
sahf
inc
jge
aad
xor
out
dec
pop
add
cmpsb
cmp
das
inc
mov
mov
mov
adc
nop
pop
cmpsb
and
push
fidivl
mov
fstps
hlt
sbb
movsb
xor
inc
push
pop
adc
aad
xor
pop
aas
icebp
aaa
fucomi
addr16
jae
sahf
dec
lahf
shll
out
lods
xchg
cltd
hlt
dec
mov
xchg
movsb
and
sub
mov
ds
or
daa
loope
popf
xor
add
and
mov
mov
and
xor
cwtl
sbb
mov
popf
xor
pop
mov
cmc
testl
mov
pushf
xor
aaa
sub
enter
dec
hlt
mov
data16
roll
mov
jmp
mov
jmp
push
gs
movsb
test
adc
adcl
jle
jg
jle
leave
dec
lahf
sub
cld
mov
aas
adc
mov
lahf
xchg
mov
shrb
sbbb
aaa
pushf
xor
ret
loope
pop
stos
cli
mov
sub
ja
or
mov
adc
add
mov
mov
ret
cmp
loop
sbb
sbb
or
cmp
js
cmpsb
sbb
xchg
sbb
adc
fstps
lods
and
push
pop
push
cmpsl
pop
fcoml
xchg
ljmp
pop
xchg
adc
mov
call
ljmp
adc
pop
inc
jne
mov
xor
push
das
lret
cmp
ljmp
sub
test
lods
out
shrb
or
push
mov
jmp
mov
push
sbb
fdivs
push
cld
xchg
sbb
push
call
ret
pop
cmp
adc
pop
rcrb
mov
ja
lret
daa
mov
sbb
add
popf
inc
sub
adc
test
cmp
call
cld
inc
inc
es
pop
xchg
ficomps
test
sub
mov
lds
dec
mov
dec
hlt
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
push
xchg
adc
f2xm1
xchg
dec
pop
inc
pop
stos
leave
outsb
or
inc
add
in
ja
insb
movntq
sti
negl
frstor
push
inc
sbb
jae
dec
mov
dec
cmp
sub
push
xor
testb
and
xor
jno
cmc
xchg
shll
push
aas
adc
addr16
arpl
push
jbe
jnp
dec
les
cmp
sub
int3
jb
test
xchg
or
mov
mov
push
jp
push
imul
lcall
add
add
fnstsw
add
xor
mov
jecxz
lock
xchg
jnp
sti
xlat
mov
test
xor
xorl
movsl
or
fildl
fistps
push
inc
ljmp
icebp
dec
xlat
xlat
lcall
lcall
lret
out
adcb
add
lock
mov
hlt
add
sub
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
shll
jge
jle
or
jle
jae
das
repnz
roll
xor
mov
loope
add
jmp
hlt
xor
inc
xor
and
test
nop
or
dec
mov
xchg
sbb
add
lahf
out
or
fisubs
and
cmp
dec
sub
push
sbb
push
mov
ror
mov
out
xor
ja
mov
out
es
cmc
or
sbb
sub
imul
cltd
mov
shr
cmp
clc
bound
fs
mov
xchg
add
fnsave
mov
fs
movsl
scas
das
xor
outsl
dec
insb
mov
into
sub
xchg
repz
stos
mov
lahf
lea
divb
cli
sub
mov
outsb
cmp
push
cmc
xor
pop
das
lods
fstl
jmp
push
mov
jne
leave
orb
data16
and
jnp
dec
cld
dec
jge
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fisubl
sub
or
jle
dec
icebp
push
xor
cmp
mov
cmp
adc
or
jp
data16
lret
adc
lea
sbb
adc
rcll
cmp
adc
andl
jmp
rcll
scas
sub
movsl
sbb
mov
xchg
inc
cwtl
jp
jg
adc
lcall
popf
fs
jns
cmp
dec
or
mov
icebp
data16
out
mov
mov
imul
pop
scas
addr16
and
nop
sar
sub
sub
sbbl
js
or
xor
pop
add
cmp
ljmp
inc
sub
jle
mov
push
scas
mov
loopew
test
cmp
rolb
das
std
dec
xor
mov
popf
xor
sub
in
std
ret
scas
loopne
mov
ret
jae
mov
or
in
add
enter
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
fwait
mov
add
jg
jle
push
adc
mov
aad
inc
push
pushf
push
cltd
movsb
and
pop
adc
inc
adc
cld
mov
adc
clc
pop
dec
xorb
inc
cmp
pop
stos
pop
mov
mov
sbb
xchg
ds
mov
mov
loope
icebp
lsl
mov
xchg
lea
addb
dec
repnz
xchg
cltd
pusha
cmpsl
test
dec
mov
lahf
mov
mov
das
pop
jge,pt
lcall
pusha
adc
mov
mov
or
cwtl
xor
mov
aaa
and
pop
insl
popf
pop
fwait
sub
out
and
adc
aas
pop
xor
rcrb
iret
sub
test
mov
cmp
les
mov
cmp
dec
mov
mov
jp
dec
scas
fisttpll
sbb
shll
movsl
inc
negl
insl
push
loopne
jl
iret
arpl
xor
inc
adc
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
js
cmp
sub
or
jle
aaa
in
movsb
sbb
xor
movsl
mov
fcmove
mov
sub
mov
dec
xchg
shrl
dec
push
xor
sahf
push
or
cmpsl
sarl
inc
shrb
in
cmpsl
add
das
and
fidivrl
loop,pn
adc
repz
sub
jne
pop
rcl
push
xor
ss
cwtl
das
divb
cld
stos
fidivs
mov
mov
add
sub
enter
scas
pusha
imul
stos
stc
lock
jae
cld
mov
fsubrs
jno
dec
je
lret
stos
pop
sub
movsl
mov
push
popf
add
idivl
inc
push
hlt
call
fsubrs
mov
add
stos
adcb
fadds
repnz
sbb
scas
mov
mov
mov
test
jno
mov
cmp
or
jnp
roll
fbld
outsl
daa
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
pusha
lcall
jg
jle
inc
clc
clc
out
sbb
inc
outsl
aaa
idivb
push
test
fisttpl
sbb
jno
sub
je
cltd
or
xor
mov
daa
adc
movb
inc
out
push
push
fstl
cmp
into
int
push
in
mov
mov
call
addr16
rorl
cwtl
pop
push
arpl
clc
jnp
or
inc
sti
push
divl
sarl
inc
mov
imul
xor
jnp
lods
insl
adc
repz
cmp
xchg
mov
mov
mov
sti
or
sbb
or
stc
negb
call
jnp
inc
mov
sub
pop
jl
jb
pop
sahf
mov
icebp
cmc
push
outsb
or
inc
adc
sbb
push
adc
push
popf
imul
jmp
sub
addr16
jmp
sbb
dec
adc
inc
sbb
xor
dec
mov
inc
adc
or
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
sub
jle
jg
jle
incb
das
xchg
das
addr16
push
pop
into
jle
cli
cmp
add
sbb
rorl
into
or
scas
jb
add
or
or
jecxz
push
cmc
or
pop
jo
jp
adcb
jnp
adc
adc
repnz
xchg
das
inc
mov
bound
jl
inc
movsl
sbb
sbb
mov
add
pop
and
rcr
mov
fbld
pop
or
and
mov
insl
in
xor
in
movsb
push
dec
int3
adc
std
movsb
out
std
push
movsl
pop
fnstcw
loopne
movsb
mov
mov
pop
or
adc
push
test
and
inc
in
pop
shrb
test
or
test
aas
popf
fstpt
jecxz
repnz
push
mov
jo
call
lea
jl
jle
cmpsb
jnp
verr
sahf
add
mov
jmp
dec
sub
lock
dec
jbe
sub
jle
jg
jle
jo
lret
cli
jne
enter
mov
mov
push
mov
adc
je
les
int3
inc
orb
xchg
sub
ja
pushf
sbb
xor
clc
xchg
mov
popl
add
cltd
cmp
sti
std
mov
xor
dec
out
xor
mov
int3
sbb
in
sbb
out
and
int3
add
in
xchg
push
imul
dec
enter
xchg
lahf
js
mov
mov
addr16
inc
pushf
pushl
push
lods
mov
and
in
mov
xchg
push
adc
into
sbb
jmp
in
out
xor
xor
mov
dec
popf
ret
add
ds
mov
mov
pop
jmp
mov
cwtl
fisttps
jg
jb
xor
imul
loop
cmpsl
mov
pop
loope
lods
jne
mov
jbe
pop
pop
rorl
jb
negb
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
pop
adc
or
jle
fwait
icebp
adc
and
fidivl
das
adc
push
test
lahf
xlat
lahf
test
xchg
mov
inc
ret
jl
mov
cltd
add
xchg
push
aaa
rclb
cmp
cld
mov
jg
add
ret
mov
ret
aas
lods
pop
push
push
mov
add
inc
das
pop
shlb
test
add
sti
jecxz
adc
pop
pop
cmp
adc
outsl
in
outsb
fdiv
mov
aas
xor
push
push
lret
xchg
push
jne
je
mov
jecxz
daa
sbb
mov
cmp
push
dec
xchg
clc
mov
push
imul
push
pop
mov
mov
push
sub
push
lock
add
sbb
aad
sbb
inc
orl
stos
or
adc
xchg
jge
rolb
shr
jp
out
jbe
adc
inc
daa
aam
and
outsb
xlat
fs
xor
roll
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
inc
lods
imul
jg
jle
lods
les
jns
test
sub
ja
sbb
sub
sbb
bswap
stos
shrb
subb
inc
cmp
popa
scas
add
pop
je
fs
mov
cltd
out
ss
mov
data16
cmc
mov
sbb
ljmp
leave
xchg
cmp
addr16
inc
out
dec
movsb
pop
push
ficomps
aam
mov
test
adc
lcall
lahf
add
je
jecxz
mov
add
xchg
in
lret
insl
je
cmp
lret
add
sub
push
ficoms
inc
jne
sbb
inc
lds
aaa
es
inc
dec
sub
fucomip
pop
idiv
jae
test
jo
cmp
repnz
out
in
les
add
je
sti
clc
mov
pop
addr16
sub
adc
lds
int
inc
mov
and
adc
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
mov
jle
jg
jle
lods
and
sbb
jb
test
push
or
inc
sub
cmc
pop
and
in
mov
nop
push
insl
gs
push
gs
ljmp
xor
xchg
inc
xchg
lods
imull
mov
pusha
cli
mov
sub
test
ret
notb
add
dec
sti
sub
mov
fidivrl
pop
push
xor
sbb
les
rorb
mov
fs
inc
out
mov
loopne
aas
cmp
adc
cmpsb
lods
test
mov
lods
stos
iret
or
mov
fwait
rolb
pop
negl
inc
xchg
std
mov
cmp
jnp
in
ja
test
fwait
cmpsb
dec
lcall
in
jge
dec
cli
xor
pop
pop
aam
fisubrs
cmp
xor
pop
dec
rclb
pop
popl
wbinvd
stos
repnz
repnz
jle
jnp
pop
adcl
rol
imul
add
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
cs
test
in
xlat
adc
rclb
stc
cmp
add
adc
fabs
sub
jecxz
test
les
inc
push
jne
fwait
add
dec
aad
stos
push
mov
pop
mov
sbb
lea
mov
leave
fwait
sub
sub
jge
jmp
pushf
dec
lea
in
pop
add
fstl
gs
dec
pop
push
cmp
jp
push
or
ja
and
cmpb
nop
mov
ljmp
pusha
adc
jne
mov
mov
mov
jmp
es
mov
les
xor
and
cmpb
cltd
dec
cs
sti
fisubs
stos
and
mov
aaa
mov
push
int3
jp
inc
pcmpeqw
aam
stc
push
xchg
fimull
mov
inc
in
stos
jnp
add
inc
mov
ficoml
outsb
adc
ja
pop
sbb
fdivl
addb
xchg
xchg
ja
ljmp
ficompl
pop
ljmp
rcrb
add
insl
orb
pop
ljmp
insb
cmp
idivb
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
and
push
jg
jle
xchg
adc
lea
pusha
ds
adc
push
or
sahf
scas
add
ret
xlat
in
rorb
xchg
or
sub
aam
mov
add
aaa
inc
mov
dec
sbb
jp
push
mov
or
shlb
cwtl
jnp
in
adc
pusha
adc
je
das
rorl
or
dec
inc
push
mov
and
test
ss
daa
dec
shlb
cmp
ficompl
nop
sub
in
imul
push
mov
dec
test
xchg
push
lods
cmp
stos
cmp
int3
test
repz
cltd
push
mov
ljmp
mov
addr16
flds
repz
sbb
pop
xchg
scas
add
cld
adc
loope
lods
out
xchg
jno
dec
jns
adc
mov
in
dec
test
jl
jnp
push
dec
pop
sub
out
xor
jle
fucom
mov
jle
divl
ss
lahf
xor
xor
rol
inc
cld
cmp
pushf
clc
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
cmp
mov
jle
push
jg
jle
pop
sbb
jbe
jle
adc
jl
push
int3
cmc
xchg
in
mov
push
add
out
jecxz
push
aas
in
mov
divb
dec
ficoms
add
mov
adc
hlt
mov
xchg
shlb
jp
pop
subb
mov
arpl
aas
jo
add
jge
mov
ds
pusha
push
mov
aad
stos
and
add
mov
push
pop
in
xchg
add
cld
pusha
sbb
sub
fmuls
popa
cmp
sar
mov
lods
adc
js
rcr
loope
dec
xchg
pop
rol
cmp
add
pusha
sarb
es
xchg
inc
and
mov
or
push
das
rorb
jnp
int
ret
andl
add
shlb
adc
test
push
ja
pop
inc
sbb
lahf
mov
call
adc
lret
icebp
sbb
push
mov
sar
mov
xchg
das
insb
and
mov
int3
push
inc
xor
in
cs
adc
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
xchg
jle
push
jg
jle
mov
arpl
aas
dec
and
jns
sub
dec
pop
imul
xor
or
inc
es
outsb
push
clc
mov
mov
sbb
push
jg
cmp
ffreep
mov
push
shrl
adc
in
cmc
or
mov
add
sub
mov
test
xchg
xor
cmp
lock
into
cmp
fwait
mov
ret
dec
mov
aas
lret
mov
cmp
in
jae
sahf
outsb
push
daa
out
push
pop
jae
and
push
lret
out
push
push
pop
sahf
ret
pop
adc
add
in
mov
xor
jne
push
lret
sub
sbb
jp
pop
popa
dec
out
std
ljmp
sbb
jbe
les
push
and
mov
jno
aam
and
out
pop
test
imul
jbe
adc
xor
push
fcomip
or
and
bound
or
mov
shlb
inc
pop
stos
sub
stos
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
pop
mov
jle
lds
jle
fwait
dec
sub
sbb
push
div
pop
int3
test
xchg
cmp
mov
dec
and
imull
js
out
mov
and
pop
xor
sbb
cmpl
xchg
pop
stos
mov
pushf
cld
loop
ds
and
cmpsb
mov
dec
lcall
inc
mov
scas
jmp
shll
ljmp
push
test
or
push
cmp
ss
fadd
push
push
inc
insl
mov
es
rcrb
push
imul
ffree
fcomps
xor
dec
std
call
cmp
outsb
inc
lahf
mov
in
data16
arpl
pop
loop
scas
jns
cmp
and
adc
mov
fcoms
cmp
test
mov
ja
out
mov
and
imul
mov
dec
movsb
cmp
jmp
out
cmp
dec
add
or
xor
movsl
jns
pop
repz
cmp
cmp
out
mov
dec
jns
pop
push
mov
insb
stos
andl
jno
push
mov
xchg
add
push
sbb
mov
push
xor
cs
sbb
cwtl
inc
add
jp
mov
fldcw
dec
push
xchg
gs
pop
daa
fldcw
repz
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
fistl
jle
lds
jle
inc
dec
mov
inc
jno
and
aam
clc
das
test
ficoml
fsub
lcall
cmpsb
imul
mov
add
lods
jle
getsec
mov
mov
es
bound
sbb
mov
mov
cmpsb
cmp
push
inc
movsl
pop
icebp
mov
adc
mov
stc
es
imulb
fstps
push
dec
mov
xchg
lods
cs
psraw
jmp
dec
add
test
outsl
in
xchg
lret
fldt
xor
xchg
inc
jmp
shlb
mull
sbb
out
cmp
add
rorb
mov
sub
sbb
sbb
lahf
fs
push
lock
lret
fucomip
std
sub
orb
ja
sbb
push
mov
mov
or
mov
push
sub
adc
mov
addl
jle
outsl
stos
mov
call
jo
ljmp
lret
pop
mov
jbe
notl
shr
int3
sbb
movsb
stc
mov
dec
int3
push
pop
enter
mov
sub
movsb
divl
dec
xor
xor
add
jmp
jg
add
jns
cmp
loop
dec
cmp
lds
jle
loope
cmpsl
pop
mov
jg
pop
das
push
pop
lahf
sbb
xor
pushf
clc
mov
repz
jne
dec
nop
test
add
and
loop
jns
dec
std
iret
loop
aam
aas
mov
jae
pop
and
cmc
xor
inc
mov
cld
aas
test
jbe
cwtl
xchg
negb
push
vmread
test
std
adc
cmp
inc
add
popa
sub
in
out
and
bound
ja
push
fimuls
add
cmc
test
pushf
inc
jmp
sub
pop
sbb
mov
in
sbb
pop
ja
jns
movsl
dec
xor
push
mov
or
mov
push
mov
pop
inc
mov
fdivrs
rcr
in
add
or
cmpl
je
mull
ffreep
inc
inc
mov
cmpsb
mov
jle
jb
cmp
out
repnz
jnp
xchg
imul
mov
push
sbb
idivl
inc
jge
out
dec
jge
stc
clc
jmp
out
push
sahf
push
hlt
or
ds
add
shlb
shll
das
cmp
mov
mov
xchg
fldenv
dec
in
cs
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
cmp
lds
jle
in
pop
movsl
sub
jp
xchg
aaa
mov
shrb
push
pusha
lahf
mov
adc
dec
out
xor
sub
movsb
icebp
fildll
push
pop
je
xchg
mov
divb
push
add
sbb
mov
pop
loop
jnp
movsb
mov
loope
sbb
push
in
adc
out
sub
jns
jg
cmc
out
jecxz
scas
sub
sub
dec
sub
pop
jmp
lret
call
inc
inc
in
and
les
in
sub
in
lcall
pop
xlat
addl
test
ds
lcall
inc
push
push
lahf
and
cld
dec
gs
add
popf
mov
sub
xchg
push
mov
xchg
adc
lea
cmp
sub
int3
lcall
call
cmp
adcl
adc
pop
adc
lret
mov
cld
fdiv
jno
mov
inc
or
sub
fidivl
jns
insl
sbb
addr16
and
imul
popa
movsb
and
pop
mov
loop
push
add
test
push
testb
sub
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
sub
jg
jle,pt
mov
jle
inc
fistpll
or
push
mov
inc
and
inc
imul
negb
pop
dec
les
jb
insb
add
call
test
jbe
push
inc
xor
jb
mov
daa
push
fbstp
push
and
xchg
pop
and
bound
and
ret
fmul
cmp
adc
loop
js
imul
add
jb
icebp
adc
lahf
outsl
jge
cld
pop
or
pop
loop
lds
mov
cwtl
jo
inc
stc
xchg
xchg
sbb
jnp
scas
xor
stos
cli
sub
dec
cmpsb
jge
cmp
arpl
inc
cmp
dec
mov
mov
ja
cs
call
adc
add
lret
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
mov
jle
mov
jle
imul
cmp
pop
jo,pn
xor
icebp
adc
adc
adc
adc
jge
in
push
mov
or
movsl
cmpsl
mov
xchg
jmp
sbb
xchg
jp
scas
sub
int
or
fisubrs
jns
mov
jle
push
mov
jns
out
inc
inc
fdivp
repnz
imul
adc
pop
out
cmp
xor
add
push
mov
hlt
inc
sub
movsb
cmp
hlt
fisttpl
push
cltd
cli
pop
movsb
es
shl
flds
mov
xchg
add
int3
inc
sbb
push
idivb
jb
and
les
movsb
sbb
push
adc
cmpsl
jno
push
mov
clc
movzbl
and
jmp
mov
stos
popa
jns
in
mov
cmpsl
ds
add
jle
jle
jle
sbb
jmp
mov
jmp
imul
das
dec
fstps
lods
lods
call
sahf
pop
testb
flds
push
sahf
ficompl
push
inc
mov
and
xor
mov
std
pop
sub
cli
rcl
or
pop
fsubrs
hlt
fsub
dec
std
jmp
xor
lret
adc
outsl
sar
stc
mov
outsb
dec
or
ret
push
and
jo
and
fistpl
pusha
dec
cmp
push
rorb
testl
in
movsl
add
imul
add
je
cltd
scas
jns
rcrb
jae
ds
orb
cmp
xor
ds
push
push
adc
mov
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
dec
cmpsb
sbb
jle
mov
jle
lods
mov
mov
inc
cmp
and
xor
jle
jns,pt
lea
cmp
adc
shll
jb
jno
test
push
hlt
stos
xlat
stc
xchg
lock
push
pop
ds
jecxz
cld
push
rcrl
popf
pop
dec
jecxz
push
push
sahf
xchg
ds
jmp
jp
mov
popl
les
push
pushf
dec
and
cmp
lret
fistpl
inc
lcall
push
int3
lock
mov
loope
mov
inc
push
xlat
frstpm(287
mov
add
insb
xchg
add
or
jnp
jp
or
add
lods
mov
jno
jnp
inc
cmp
insb
leave
gs
mov
leave
lds
add
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
or
jle
mov
jle
dec
iret
pop
and
ljmp
pop
sbb
mov
shrl
sar
pop
push
hlt
push
icebp
lcall
outsb
shll
addps
loopne
xchg
jecxz
push
sti
push
loopne
jns
pop
out
test
fbstp
movsl
jno
fmuls
and
out
pop
adc
sbbl
aad
cmp
inc
mov
mov
sbb
pusha
cmp
sahf
and
dec
mov
shld
sub
push
inc
xchg
or
testb
xlat
jno
les
es
sbb
inc
jle
outsb
or
icebp
jae
mov
push
adc
push
jp
stos
jo
sub
sahf
dec
rorl
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
cmp
inc
jmp
jle
jle
and
stos
push
mov
mov
movsl
cwtl
fimuls
or
mov
divl
mov
xor
mov
sti
daa
mov
popa
ret
cmp
mov
int3
sbb
sub
cmc
stos
push
add
fwait
aad
dec
jo
add
jg
xchg
mov
in
push
lea
out
ret
jb
dec
push
lret
fwait
jg
sub
pop
mov
aas
fbstp
mov
mov
mov
sbb
lods
mov
gs
sub
cmp
pop
ljmp
dec
mov
or
cli
lock
sbb
cmp
das
imul
arpl
pushl
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
imul
jle
jle
into
mov
pop
pop
fsubrl
addr16
jle
out
adc
cmp
push
add
mov
lds
inc
stos
icebp
inc
push
dec
sub
out
mov
and
jne
bound
jns
mov
dec
cmp
repz
mov
test
mov
pop
fsubr
das
fstpl
ja
pop
lds
adc
fs
std
and
lea
or
bound
mov
jae
mov
sbb
jle
std
addr16
cmp
mov
fdivl
mov
or
inc
mov
js
xchg
out
icebp
leave
xchg
sub
cmp
cli
push
jl
cmpsl
lret
js
into
ja
adc
pusha
addr16
pop
gs
mov
aad
mov
inc
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
jns
jle
mov
jle
daa
outsl
dec
xlat
pop
fincstp
daa
pop
or
dec
lods
pop
lea
adc
stos
bound
mov
pop
xchg
repz
andl
or
push
unpcklps
jecxz
jo
std
je
lea
sub
arpl
ret
jae
dec
xor
xor
aaa
cmpsb
add
dec
aas
push
xchg
scas
cmp
cmpsl
rorb
imul
lcall
push
pop
pop
mov
call
fistl
xor
pop
icebp
mov
add
fwait
push
inc
adc
movsb
and
out
xchg
mov
pop
ss
data16
mov
and
sub
add
inc
or
mov
xlat
xchg
adc
negl
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
or
jle
jle
jle
sahf
dec
xlat
cltd
jno
xor
push
jge
cmc
push
hlt
cmp
sbb
daa
stos
inc
and
inc
and
sbb
jl
mov
leave
stos
sub
mov
test
push
fisubrl
cmp
mov
pop
in
aas
push
int3
sub
imul
dec
adc
imul
ret
orb
push
fimuls
push
out
mov
mov
xchg
adcb
mov
ror
movhps
jg
dec
movsl
arpl
lcall
mov
insb
jg
adc
andl
fcomi
sub
or
push
adc
xchg
mov
jo
push
inc
push
stos
xor
adc
mov
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
sub
adc
xor
mov
jle
icebp
xchg
xchg
ror
es
cmp
cmp
sti
or
xor
scas
dec
pop
jge
cmp
cmc
mov
mov
mov
push
ret
adc
or
movsl
nop
mov
pusha
xchg
dec
int
adc
pop
aas
jo
cmc
mov
or
mov
xchg
mov
lcall
pop
and
jl
mov
idivb
lret
stos
xchg
push
orl
fs
pop
xchg
adc
int3
add
sub
cmc
dec
loope
inc
lds
cmp
mov
add
jne
adc
and
jmp
dec
dec
in
or
mov
data16
push
dec
pop
fwait
lds
in
loopne
pop
inc
aas
mov
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
xchg
andb
ss
mov
jle
rorl
mov
lods
ret
sbb
repz
mov
es
inc
fdivrp
stos
leave
xchg
movsb
and
into
fs
and
pop
sti
xchg
mov
pop
adc
ss
pmovmskb
adc
cld
add
and
push
divl
jo
je
mov
rcrb
mov
dec
jns
mov
int
inc
adc
xor
mov
scas
fs
fistps
frstor
sahf
adc
mov
les
loopne
pushf
data16
iret
out
mov
add
out
mov
sbb
mov
dec
fdivrl
sub
jge
rcrb
addr16
fistl
mov
mov
sarl
ret
or
add
mov
jmp
decl
xchg
stos
dec
fcomip
sbb
jle
mov
jle
test
cmp
jnp
cmp
and
and
push
add
mov
lcall
iret
mov
enter
in
jae
loope
inc
jle
cmp
and
mov
sahf
pop
dec
xchg
add
cmp
sarl
jl
imul
pop
shll
icebp
mov
adc
dec
mov
xchg
mov
in
pop
dec
test
mov
xchg
lock
push
in
add
shlb
pop
das
imul
mov
sbb
push
mov
or
add
mov
mov
sbb
jae
ljmp
aas
mov
test
sub
or
inc
imul
jmp
inc
loop
xchg
imul
push
das
push
aaa
jle
mov
jle
dec
pop
pop
hlt
movsb
das
out
jle,pt
xor
fisubrl
rolb
imul
dec
iret
rorl
sahf
or
pop
stos
adc
aam
pop
lret
jno
mov
mov
adc
in
enter
lock
shll
data16
les
sub
and
into
xchg
in
sub
mov
out
pushf
lcall
mov
ds
mov
imul
repz
out
das
adc
stos
shlb
jae
bound
stc
in
fsub
sbb
icebp
mov
adc
mov
sub
xor
xchg
push
jmp
sub
mov
xchg
movsb
dec
pushf
xchg
push
jp
aaa
pop
sbb
fsub
popw
mov
pop
in
leave
loop
xchg
jnp
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
cmpsl
or
dec
test
jle
jle
test
data16
movsl
sti
cmp
das
add
xor
inc
lods
adc
inc
sbb
popa
pop
fisttps
outsl
dec
cmp
mov
fs
mov
movsb
sub
adc
dec
pushf
lea
mov
fs
jno
lods
pop
fcmovnbe
jbe
lret
pop
lret
adc
aam
loop
lret
cmpsb
jmp
mov
push
pop
jb
in
push
stc
dec
iret
notb
add
jg
adc
xchg
jnp
ja
pusha
insb
or
mov
int
mov
pop
dec
cmc
adc
jecxz
mov
add
aas
in
pusha
bound
lods
test
push
sahf
fwait
pop
push
rolb
shrl
loop
add
mov
int
test
jnp
cmp
les
pop
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
das
mov
jmp
xor
jle
stos
mov
pop
adc
andl
mov
je
sub
sbb
push
cld
out
ret
in
add
outsb
les
fsubrs
sub
inc
test
out
mov
lea
in
push
adc
pcmpeqb
out
jbe
sub
pop
and
aas
and
out
popf
inc
test
add
push
jmp
shrb
jge
jo
inc
add
sbb
mov
jp
mov
ja
cld
bnd
mov
outsb
test
enter
insb
xchg
lahf
lret
in
dec
sbb
adc
pop
aas
or
mov
scas
xor
lcall
add
shrl
lods
cmpsl
xchg
dec
shlb
xor
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
aam
push
jmp
aaa
push
pop
lds
stos
imulb
xorb
lret
or
dec
sbb
xor
call
jb
cli
jmp
xor
clc
add
js
mov
call
xchg
sbb
lods
push
mov
add
inc
mov
add
mov
sub
aaa
push
mov
fistpl
pop
xchg
jecxz
pop
fmull
push
lods
sti
mov
fwait
in
pop
into
fstps
mov
xchg
pushf
cmp
das
stc
add
push
or
inc
test
int
into
pushf
or
stos
iret
xchg
ss
test
push
stc
sbb
mov
inc
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
repnz
jno
jno
jle
mov
jle
jmp
mov
stc
jecxz
stc
test
sbb
add
mov
loop
icebp
inc
push
push
jge
lods
xchg
jne
into
sbb
and
pushf
jecxz
add
mov
inc
xor
adc
sarl
aas
mov
adc
mov
inc
dec
mov
jmp
cmp
jo
mov
cmp
je
pop
xlat
ret
rcrb
aad
jno
je
aas
imul
cmp
pop
incb
stos
mov
jmp
aas
push
add
iret
mov
add
push
hlt
mov
divl
inc
test
movsb
mov
divb
adc
mov
mov
movsl
int
sub
movsb
push
xchg
ret
fdivp
call
xor
jmp
popa
jno
jnp
jnp
or
cli
movsb
ss
lret
jle
mov
jle
andl
mov
rcl
sbb
sahf
insb
daa
mov
loope
mov
jns
add
mov
leave
mov
xor
insb
mov
insl
loop
dec
xor
xor
fwait
mov
mov
dec
sti
add
dec
clc
ja
das
xor
or
mov
loope
popa
jg
and
aaa
xchg
push
pushf
repnz
xor
nop
fistpl
cwtl
xchg
loopne
mov
sahf
mov
xor
sbb
jb
in
xchg
out
mov
jbe
or
jp
int
and
sub
push
ds
cmp
push
cmpsl
loop
mulb
fs
js
leave
loop
mov
lock
sub
xchg
cmpsl
or
dec
xchg
sub
outsl
sbb
cmp
jmp
test
xchg
push
stos
push
push
gs
enter
jle
jle
mull
arpl
popa
in
push
mov
sahf
addr16
sub
xchg
add
pop
cli
sti
add
sbb
incb
shll
scas
pop
push
mov
cltd
insl
mov
or
and
and
adc
sbb
pop
mov
test
ds
test
add
mov
sub
test
mov
jle
cmpsl
jae
jo
out
insl
dec
pushf
jl
lock
les
push
clc
mov
pop
xchg
rcrl
jmp
or
cmp
xor
xchg
fcmovu
aad
xchg
lret
xchg
mov
out
fs
inc
dec
xor
movsl
lods
mov
pusha
mov
lds
jg
test
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
jle
and
jbe
pop
xchg
sub
jge
cmp
icebp
jge
jge
jb
mov
mov
mov
fnsave
jg
push
mov
mov
mov
fistpl
inc
xchg
fs
jno
xchg
test
cmpl
movsb
rcr
repnz
ljmp
xchg
xor
mov
test
dec
jne
jecxz
test
xchg
mov
out
pusha
xlat
sarb
jecxz
add
mov
or
loopne
add
add
mov
arpl
mov
pop
fadd
push
jecxz
jnp
std
jbe
xchg
cs
mov
cmp
stos
add
lods
and
adc
xchg
inc
je
jmp
cmp
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
