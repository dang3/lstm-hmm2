push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jo
sbb
sbb
adc
sbb
mov
mov
clc
out
or
xchg
mov
adc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
mov
add
outsl
das
or
in
pop
sub
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
idivl
or
bound
icebp
daa
fcomi
pop
sub
movsl
jecxz
out
gs
dec
popa
and
add
pusha
pop
int3
loope
jb
cwtl
fs
dec
mov
adc
rorb
and
xchg
outsb
or
dec
mov
test
fimuls
hlt
xchg
stos
fidivrs
xchg
aad
or
mov
mov
cltd
outsb
ret
adc
mov
sbb
and
js
scas
test
adc
push
arpl
or
jne
push
xchg
or
fdivrs
es
sbbl
jae
jl
cmp
sbb
xchg
pop
addr16
es
mov
mov
stos
scas
bound
inc
cmpsb
xlat
sub
inc
mov
fildl
pop
xchg
lret
push
fdivrp
pop
mov
in
xlat
xor
push
adc
in
inc
stos
xchg
adc
addr16
or
mov
adc
pusha
fildl
and
inc
lret
sahf
sub
jns
push
dec
xlat
outsb
mov
sbb
in
xchg
fcomi
adc
cmpsl
cld
mov
mov
adcb
fwait
mov
outsl
push
mov
cmc
fbld
or
xor
and
push
cmp
mov
arpl
mov
icebp
dec
fwait
inc
rcll
xchg
xrelease
cmp
dec
es
sub
adc
test
fadds
dec
das
jg
pop
adc
adc
cmp
and
pop
or
inc
dec
jmp
dec
ja
stos
repz
out
rorb
mov
sub
push
insb
int
and
xor
jecxz
pop
lock
insl
das
fstpt
jno
add
mov
mov
jae
repz
lahf
popf
lret
ret
divl
arpl
cmpsl
out
test
or
sbb
out
cltd
clc
and
sbb
hlt
mov
sbb
push
xchg
sbb
xor
ficoms
fucom
addr16
lahf
dec
rorb
lret
jp
jmp
and
loopne
inc
out
adc
rcl
pop
es
inc
aas
out
lds
sub
and
and
add
repz
aas
inc
pop
xlat
xchg
pop
xchg
int
sbbb
xor
stc
shr
mov
pop
mov
sub
xchg
xor
dec
mov
call
mov
roll
sub
mov
jno
jmp
imul
add
sub
popf
pcmpeqw
data16
cmp
dec
dec
fwait
ljmp
adc
add
jl
cs
add
fdiv
aad
pusha
cmc
sbb
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
sub
movsb
mov
js
subl
adc
insb
out
scas
pop
rorb
xor
int
xchg
cmp
dec
jns
lods
nop
ja
jmp
mov
int
in
lods
es
iret
push
scas
mov
jle
adc
cmp
jmp
pop
mov
arpl
fldt
out
and
mov
ja
jb
mov
or
jle
mov
or
lods
adc
daa
pop
dec
push
inc
pusha
jle
aas
ss
lahf
lcall
ret
jbe
ljmpw
push
not
pop
out
jmp
mov
iret
sbb
add
mov
out
mov
xchg
xor
in
aad
xchg
cwtl
movsb
pushl
dec
cmpsb
mov
lcall
mov
out
jle
popa
inc
adc
xor
test
loope
psubq
imul
ret
je
xchg
es
fstps
in
or
addr16
stc
sti
outsl
mov
pop
dec
jne
ret
dec
mov
push
fimull
pop
test
fld
stos
mov
lahf
lock
and
jmp
or
fisubrl
cmpsb
and
sbb
lods
lods
out
mov
sbb
jp
jmp
xorl
in
outsl
lods
sbb
in
pop
pop
cmp
mov
cld
xchg
push
dec
insl
dec
pop
aam
jge
xchg
push
jge
adc
xor
arpl
cmp
push
add
rcll
jle
pop
bound
cld
lods
adc
ljmp
dec
adc
mov
mov
enter
pop
scas
xchg
fwait
roll
xor
jl
adc
in
lcall
filds
and
mov
cmp
lret
mov
cmp
or
cmc
in
pop
mov
pusha
xchg
sbb
hlt
bound
out
std
dec
xchg
add
fsubr
cmc
pop
pop
pusha
lahf
out
or
sbb
jo
cld
imul
jo
aam
xor
rolb
add
sub
ret
pop
add
cmp
fstl
sar
or
movsl
dec
bound
out
mov
push
inc
loope
add
push
and
jae
xchg
pop
mov
ret
jg
and
mov
fsubl
aam
push
push
xor
jmp
std
push
inc
data16
mov
call
hlt
sub
pushf
insl
add
and
push
lods
lea
pop
test
pop
ja
cmc
and
insb
stos
in
jae
cmp
push
mov
lock
les
call
xchg
sbb
insl
mov
in
sbb
jns
push
arpl
lret
call
jbe
sahf
push
arpl
iret
mov
sti
into
test
dec
es
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
jo
or
sbb
adc
sbb
jnp
xor
mov
movb
pop
pop
xlat
sbb
movsb
or
cltd
hlt
dec
pop
inc
sub
outsl
push
inc
and
inc
cmc
pop
sub
std
jp
add
icebp
les
out
adc
lcall
sub
add
insb
inc
dec
and
lods
sbb
xor
sbb
in
adc
movsb
sti
stc
jae
push
es
notl
cmc
adc
ror
sub
inc
out
jne
xchg
fmul
mov
pop
mov
lea
out
mov
mov
test
sbb
xchg
pushf
pop
cmpsl
ret
leave
jl
les
std
cli
loopne
push
sub
cld
mov
fcomps
dec
fisttps
loop
loop
mov
int
xchg
jge
repz
ret
fisubrs
loopne
pop
push
mov
sbb
xchg
fwait
mulb
fwait
add
mov
in
call
mov
mov
aaa
jmp
out
mov
mov
inc
test
jp
jo
mov
sbb
fimuls
mov
aam
pop
xor
adc
and
popf
pop
mov
enter
insb
mov
addr16
sbb
and
popa
ljmp
add
pop
push
out
adc
rcl
jbe
and
add
push
cmpb
aas
pop
xchg
dec
and
shlb
xchg
loop
jb
cmp
mov
fldenv
out
mov
push
repz
sbb
inc
push
mov
jmp
loope
cli
mov
mov
mov
mov
or
pop
pop
stc
jp
cmpl
adc
pushl
bnd
sub
icebp
inc
mov
stc
pusha
fbstp
rcrl
lret
mov
adc
ja
xchg
filds
sbb
cmovge
xchg
movsl
testl
sub
addl
add
arpl
xchg
test
xchg
fisttps
mov
sub
ds
mov
scas
es
push
adc
icebp
xor
test
notl
imul
fcomps
sub
push
es
iret
xchg
lods
movsl
mov
into
xlat
daa
or
mov
rcrb
sub
xchg
or
rcll
inc
mov
sub
jg
and
push
xchg
push
adc
xchg
mov
dec
gs
and
add
push
iret
inc
mov
cmp
mov
xchg
push
dec
jno
sub
cmp
pop
clc
push
xchg
ret
dec
cmpsb
roll
sub
fldenv
insl
fdivl
andb
xchg
orl
cltd
push
fdivs
xorb
jb
xor
imul
sub
xor
fcoml
insb
cli
push
xor
jmp
sub
jmp
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
xor
repnz
add
sbb
adc
sbb
subl
loope
imul
lock
jg
sbb
loope
mov
pushf
out
and
mov
out
cli
outsl
sti
lods
push
cmc
or
sbb
and
dec
aad
test
mov
int
cmp
daa
adc
dec
jb
fistps
mov
jo
stos
mov
dec
outsb
inc
lods
or
repz
aas
push
rolb
inc
inc
lods
les
cmp
int
mov
imul
cmovo
push
sub
add
lret
cltd
fstl
ja
std
mov
and
push
xchg
mov
out
jg
test
and
out
fisttpl
fmull
jecxz
adc
push
cltd
test
int3
mov
dec
and
mov
dec
jle
ret
pop
outsl
fstpt
jb
push
mov
outsb
loopne
aad
cmp
loopne
xor
push
mov
push
mov
push
fidivrs
in
jnp
adc
mov
hlt
addl
or
xor
repnz
xor
jo
or
push
push
adc
lret
and
shl
sub
repz
mov
mov
sbb
stos
sub
sti
std
mov
rcrl
rcrb
fcomps
pop
pop
add
es
add
cmp
sbb
shrl
rorl
nop
jae
icebp
adc
mov
add
sub
xchg
stc
mov
push
push
std
int
std
jl
xchg
adc
int
adc
add
int
clc
mov
xor
scas
jbe
addl
sbb
xor
dec
push
outsb
and
sbb
or
decb
adc
sbb
push
jb
clc
in
in
filds
cli
scas
ret
nop
popf
sub
loope
mov
pop
jne
inc
jl
ja
mov
sbb
das
and
jmp
fdiv
in
addb
ficomps
inc
and
sarl
out
sbb
mov
int3
imul
pop
les
adc
testl
inc
xor
sub
rol
cmc
mov
xchg
add
clc
shll
push
jbe
push
sarl
stos
jno
add
cmp
in
adc
push
lea
cs
adc
stos
addr16
pop
lds
inc
mov
push
push
sti
or
orl
inc
cmp
mov
arpl
pop
xchg
out
xchg
in
or
pop
mov
mov
cmp
ja
mov
shrb
xor
push
smsw
cmpsb
mov
mov
xchg
jg
or
dec
adc
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
cmp
stos
inc
cld
sbb
and
sbb
push
sub
push
jge
lods
sbb
and
add
or
jmp
mov
and
xchg
inc
and
ficoml
rclb
inc
jle
lds
mulb
mov
call
pop
xor
shrb
lahf
sub
test
push
push
mov
push
out
inc
fcomp
ja
mov
insl
lahf
out
int3
in
scas
xor
cmpl
lods
sbb
push
scas
sbb
push
mov
sbb
pop
mov
pop
sbb
in
jle
mov
adc
pop
leave
out
call
test
fbstp
pop
clc
fcmovne
arpl
mov
dec
orl
inc
xchg
push
inc
mull
popa
divl
and
adc
push
insl
imul
sub
sahf
push
cwtl
and
loope
push
lds
jle
pop
cmp
negl
jb
ja
fs
orl
xchg
pop
inc
mov
xchg
sbb
lret
in
loope
sbb
push
and
scas
out
lahf
jp
cltd
fcmovu
lahf
test
shrl
aas
int3
imul
rorb
setle
mov
test
xor
mov
sar
gs
imul
dec
xchg
stc
push
mov
push
inc
repnz
movsb
and
ret
sub
sti
sub
cli
loop
fisubs
outsb
repnz
out
xor
data16
jns
test
cmp
xor
or
shl
inc
pushf
icebp
push
xchg
xchg
nop
dec
jnp
stos
mov
sub
mov
xchg
cmpsl
popf
gs
ss
mov
shl
xor
xchg
mov
adc
push
push
stc
sbb
movsb
add
fdivrs
out
dec
mov
dec
std
lcall
and
jbe
mov
cli
inc
jae
test
stos
jns
lea
pop
mulb
sbb
jnp
rorl
mov
mov
or
scas
mov
cmp
jns
adc
iret
jmp
jae
xchg
ds
rclb
pop
jge
dec
push
mov
push
cmp
fnstenv
ficompl
aaa
int
jnp
fwait
stos
jmp
mov
cmp
pop
push
jno
les
rclb
mov
shll
mov
jmp
push
enter
movsb
call
xor
adc
loope
jl
mov
ss
jecxz
jp
sarl
mov
sbbb
mov
in
mov
adc
lds
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
rcrb
and
sbb
mov
adc
cmpsb
iret
pop
loope
in
mov
sub
lret
mov
dec
or
xorl
in
in
mov
rclb
sahf
daa
mov
push
aas
jg
sbb
std
sub
add
push
or
lahf
pusha
xchg
scas
push
jmp
in
cltd
push
and
xor
out
mov
cmp
adc
test
inc
mov
pop
push
call
out
cmp
jp
dec
mov
bound
xbegin
jbe
sub
xor
pop
jmp
sbb
and
jo
mov
mov
sahf
dec
push
iret
sub
loope
dec
int3
iret
popa
mov
adc
push
stos
pop
int3
dec
xchg
mov
fs
ret
push
int3
cmp
xor
enter
scas
jg
or
sub
mov
lret
add
in
add
mov
pop
lcall
imull
and
fsub
or
adc
inc
aaa
lcall
inc
enter
les
orb
cmpsb
cmp
push
xchg
jnp
dec
aas
fiadds
aas
insl
icebp
mov
sti
xor
mov
orb
mov
xchg
bound
push
loop
add
mov
and
push
call
add
pop
pop
mov
jg
or
cltd
mov
in
rcrl
adc
cli
mov
and
xchg
ja
adc
mov
mov
push
cmc
inc
fildl
and
jp
and
jbe
cmp
clc
test
mov
and
andl
mov
add
inc
or
sbb
mov
jae
stos
icebp
shlb
dec
lds
repnz
push
jl
lds
les
lock
mov
mov
outsb
inc
fdivl
cmp
pushw
js
daa
cwtl
and
cmpsl
jne
lcall
inc
mov
pop
sub
inc
push
mov
scas
push
and
jno
fwait
mov
frstor
add
mov
pop
cmpsb
stos
dec
subl
pusha
mov
pop
loopne
xor
xchg
cs
sbb
pop
test
cli
add
cmp
subb
mov
inc
mov
rolb
mov
arpl
out
or
cs
dec
in
in
mov
in
xchg
out
lods
and
cmp
fwait
loopne
fs
xor
push
dec
sub
or
mov
in
inc
mov
jmp
scas
push
repz
cmp
fisubrl
push
push
or
es
andl
movsb
test
call
pop
popa
ljmp
lret
pop
mov
lods
icebp
mov
mov
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
loope
push
lock
and
sbb
stos
sub
mov
jns
scas
inc
mov
pop
clc
pop
je
jae
repnz
adc
jnp
in
or
pusha
add
cmp
xor
repz
stos
jmp
cmp
dec
outsl
aaa
mov
xor
das
fildl
xchg
mull
imul
ds
cs
or
push
push
jnp
andb
or
jae
add
ds
add
js
addb
addr16
shrl
mov
inc
jp
out
pop
rolb
icebp
mov
add
xor
push
loop
push
es
out
mov
mov
int3
inc
xor
adc
sub
lods
stc
and
push
xor
dec
es
cltd
adc
pop
sub
loop
inc
test
pusha
jge
out
inc
arpl
cmp
xchg
test
stos
xlat
mov
mov
mov
imull
out
add
add
dec
lods
push
pusha
lcall
dec
fs
ror
and
mov
pop
sbb
mov
pop
push
pop
xchg
inc
lahf
stos
sahf
gs
sub
data16
mov
xchg
cmp
shrl
jns
stos
or
js
sub
outsb
cmc
sarl
test
mov
sbb
pop
sbb
hlt
jmp
and
imul
imul
mov
in
xchg
lcall
in
fmulp
cs
xchg
sbb
pop
insb
xor
cmpsb
out
jne
xchg
mov
mov
jne
xor
fnstenv
clc
fistpl
in
sti
lcall
sub
push
inc
dec
pop
push
or
pop
test
xor
mov
popl
loope
hlt
mov
adc
adc
or
lea
movsb
popa
sub
add
bound
test
pop
scas
lods
shll
dec
mov
ret
push
mov
xchg
inc
loop
mov
inc
sbb
test
xchg
in
ljmp
lods
xchg
jp
mov
xor
dec
xchg
cmpsb
rorl
sahf
inc
adc
movsl
push
out
push
pop
xor
mov
fnstsw
mov
jns
pusha
addr16
jb
adc
pcmpeqb
xlat
jbe
fstpt
pop
cmpsb
jns
mov
xor
and
movsb
push
negb
fdivl
push
dec
dec
push
mov
imul
pop
loope
xchg
jecxz
adc
repnz
gs
cmpsl
in
int
xchg
fcoms
mov
mov
fsubl
mov
cmp
out
cwtl
in
mov
adc
ds
lret
popa
pushf
jmp
and
popf
add
ret
sub
mov
shrd
jmp
out
push
push
push
mov
ret
mov
pop
jmp
sbb
adc
sbb
mov
pop
sub
loope
cmp
ja
movsl
mov
xor
icebp
stc
inc
or
lods
pop
mov
ss
xor
pop
and
popa
xchg
mov
xor
adc
adc
fdivp
and
test
lret
sbb
into
cmp
adc
sub
sbb
testl
int
cld
cmp
cmp
xor
push
jmp
add
jge
or
xor
fldt
add
arpl
mov
pop
sub
adc
outsb
js
and
cltd
xchg
jae
jne
pop
jnp
and
mov
in
dec
fimull
xchg
stos
xchg
mov
add
mov
xor
dec
scas
add
clc
dec
fimull
sbb
xor
sbb
mov
xor
push
inc
mov
out
sub
mov
arpl
adc
mov
incb
lods
sbb
jbe
es
cmpsl
in
leave
inc
test
adc
and
es
mov
pop
aaa
arpl
push
xor
test
dec
cmp
cmp
jbe
or
mov
fwait
inc
sub
incb
int3
mov
sub
sub
lods
jae
enter
lret
jg
test
andl
push
cld
mov
ljmp
das
clc
xchg
icebp
fisubs
scas
xlat
push
xor
subl
lfs
inc
imul
mov
stos
stos
shrl
les
mov
or
dec
push
dec
cli
in
cld
add
xor
mulb
cmpsl
faddl
cli
sbb
pop
loop
loope
xchg
or
sub
sub
inc
mov
xor
jl
mov
cwtl
sbb
inc
jae
cmc
shll
negb
mov
or
pop
mov
and
fs
or
jae
mov
jno
sub
mov
jle
aad
hlt
sub
inc
jbe
andl
jns
mov
jmp
push
aad
or
int3
sbb
pop
jno
leave
cltd
dec
mov
testb
ret
mov
mov
in
roll
sbb
int
stos
adc
xlat
addr16
jp
les
lahf
pop
ret
aam
jle
call
and
mov
mov
popa
jno
int
call
cmp
sbb
mov
daa
mov
mov
or
loope
push
cltd
pop
orl
adc
jnp
mov
fistl
mov
adc
sbb
dec
add
ret
mov
fisttpl
mov
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cwtl
pop
jo
in
sbb
adc
sbb
mov
lock
mov
sti
hlt
or
and
and
sahf
inc
addl
adc
daa
mov
pop
mov
adc
and
push
fcmovu
fs
dec
jnp
cs
cli
jg
mov
dec
pxor
mov
dec
int3
test
jp
pop
push
sbb
xchg
cmp
addl
push
insl
decl
popf
cmp
imulb
sbb
and
xchg
or
xor
add
outsb
loopne
gs
in
movsl
fwait
sar
pop
or
push
sbb
dec
mov
pop
jmp
repz
daa
leave
movsb
adc
push
or
sbb
mov
bound
lcall
outsb
jle
mov
jno
jne
adc
or
loop
rcrb
adc
xchg
mov
aam
dec
addr16
xchg
mov
or
cmp
stos
adc
pusha
cmpsl
mov
fxch
jo
inc
sti
fldcw
stos
sbb
push
dec
into
mov
icebp
out
push
lds
test
repnz
scas
int3
push
cmp
aas
fdivr
in
clc
orps
sub
aad
push
mov
std
daa
neg
mov
aas
outsb
into
iret
xor
jl
lods
data16
jl
pusha
xchg
jb
stc
sti
outsl
mov
outsb
cltd
outsl
dec
pop
je
push
movsb
stos
cmp
fsubl
sbb
adc
gs
sbb
shlb
cmpsl
fildl
popl
cli
aas
push
in
adc
outsb
pop
sub
dec
lods
push
fildl
movsl
mov
cs
cmp
or
pop
xor
mov
or
mov
mov
inc
aaa
cmp
popf
iret
sbb
fsubrs
cmc
jmp
in
sbb
mov
ds
fscale
add
test
stos
cld
or
stos
sbb
sbb
add
mov
cmpsb
mov
stc
and
shlb
or
or
dec
xor
repz
movsl
dec
test
sub
jge
fucomp
cltd
aaa
adc
adc
inc
mov
aas
jbe
push
arpl
adc
repz
nop
sbb
push
push
ret
mov
xor
cmp
dec
cmp
je
xchg
sbb
pop
mov
movsb
jns
adc
rorl
cmp
aas
jp
adc
xchg
xor
bound
xchg
in
scas
jne
and
ss
xchg
inc
dec
jbe
mov
mov
pop
xchg
adc
mov
cmpsb
cmpl
cmp
sti
or
pop
sub
je
and
mov
cmp
test
dec
popf
es
inc
leave
test
or
mov
mov
jmp
nop
dec
nop
add
lock
pop
mov
sbb
and
sbb
mov
insl
cld
sub
in
dec
jle
xchg
and
jmp
pop
mov
sti
test
mov
lret
mov
in
cli
mov
fistl
rolb
loope
test
sub
int3
push
cmp
pop
int3
or
shll
cli
adc
data16
cld
xor
cmc
inc
sbb
ret
and
out
jnp
mov
xchg
ljmp
jmp
subb
inc
xchg
jmp
sahf
xchg
dec
xor
pop
mov
into
inc
into
fisubl
aad
jb
jp
dec
lret
lahf
cld
das
jmp
sub
dec
fwait
adc
sub
xchg
shlb
fsubs
mov
lahf
or
fucompp
repnz
fstps
add
and
pusha
movsl
pusha
fisttps
push
lret
adc
cmp
inc
push
dec
ret
dec
and
cltd
iret
cmpsb
rcrl
test
dec
xor
movsb
cltd
pop
pushf
cmp
je
mov
sbb
movsb
rol
mov
fwait
mov
stos
in
scas
sub
pop
stos
iret
fs
jbe
roll
sbb
int
sbb
and
xchg
and
fs
cmovns
faddl
dec
and
in
pop
xor
jge
adc
mov
mov
and
jle
pop
lahf
sub
mov
scas
addr16
xchg
xchg
insb
pop
std
jo
add
lret
stc
xchg
loop
sbb
add
mov
sahf
mov
or
lcall
cmc
shll
sbb
sub
cld
add
push
popf
dec
std
cmp
push
pop
cmpsb
ja
ljmp
mov
and
jle
jns
add
pop
xor
lds
inc
cli
sub
mov
nop
aaa
fprem
jp
ss
pop
adc
insl
imul
push
xor
cs
xchg
sbb
dec
add
je
mov
outsb
sbb
xchg
sbbl
lahf
push
sub
mov
loopne
stc
lret
sbb
shll
adc
cmc
xchg
dec
scas
mov
push
mov
nop
out
nop
cmp
incb
mov
shlb
insl
loop
mov
mov
fdivs
xchg
into
sbb
mov
fcomps
push
jmp
push
lcall
and
imul
xchg
hlt
lock
out
pop
cmp
out
ljmp
jl
addb
subl
adcb
jns
fld
lcall
lahf
and
dec
std
in
cmp
in
insl
push
lea
mov
mov
incb
add
arpl
icebp
jbe
stos
xor
mov
lods
jmp
inc
sbb
push
xchg
pop
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
int3
inc
fistpll
xchg
adc
adc
mov
dec
inc
fwait
and
into
push
xlat
das
mov
and
add
cmp
out
jl
sahf
fldt
adc
pop
jge
mov
inc
mov
shrl
outsb
test
jbe
jae
stos
lods
inc
cmpsb
push
jmp
ds
jns
les
xlat
jnp
arpl
pusha
enter
mov
cmp
cmpsl
add
imul
and
lcall
adc
mov
test
leave
xchg
into
cmp
mov
inc
and
sbb
lret
fdivrl
mov
xchg
mov
pop
fld
popa
mov
dec
and
bnd
cmpl
movsb
movsl
dec
sbbl
frstor
mov
out
test
sbb
lods
inc
pusha
enter
and
xor
nop
or
mov
outsb
test
dec
out
js
les
mov
mov
mov
cmpsl
jg
nop
outsl
fwait
bswap
stos
mov
and
cmpsl
add
dec
mov
jae,pn
push
sub
mov
lcall
jno
popf
mov
adc
ljmp
xchg
or
es
or
xchg
jns
push
sti
and
sbb
or
inc
ljmp
pop
sbb
fsubrp
sbb
out
xchg
bound
xchg
dec
jl
fbstp
cmp
sub
jae
sub
dec
add
daa
rclb
mov
pop
mov
mov
xchg
or
outsl
add
xbegin
push
xor
or
mov
in
xchg
xor
mov
pop
xlat
jmp
cmp
fnsave
pushw
dec
int
pop
mov
scas
pop
out
jmp
and
jo
sub
pop
mov
in
outsb
pop
pop
mov
orb
fisubl
jp
es
xor
mov
jmp
and
pop
push
cmp
xchg
stc
testl
adc
pop
pop
ret
lock
mov
xor
jbe
in
sbb
jo
lods
nop
xor
mov
or
adc
cld
add
adc
cmp
ss
and
mov
xor
xor
lods
pop
pop
add
sbb
out
pop
lret
pop
cmp
push
aaa
pop
pop
mov
jle
out
sahf
and
xor
pop
jo
insl
add
add
jle
push
and
data16
jnp
nop
aam
lahf
sub
ds
iret
ja
push
lahf
lret
mov
ss
add
or
lea
sbb
inc
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
or
rcrl
sbb
adc
sbb
add
enter
jecxz
mov
cmovb
addb
inc
dec
cmpb
fadd
scas
inc
dec
enter
mov
sbb
xchg
sar
xchg
mov
push
and
leave
mov
inc
out
ret
sbb
clc
cld
bound
andnps
scas
push
pop
int3
sbb
or
fstpl
hlt
jno
ret
push
enter
andl
mov
sub
lods
cmp
inc
mov
int3
add
int
lods
std
cmpsl
xchg
jo
sub
dec
xchg
dec
mov
int3
sub
inc
cmp
cmpsb
lea
and
orb
std
or
cwtl
push
shrb
test
cmpsl
or
jns
sbb
mov
lret
push
lds
sar
lret
test
rorl
adc
mov
sbb
imul
pop
inc
pop
addb
sub
and
pop
scas
pop
mov
shlb
jl
or
inc
dec
cwtl
mov
repz
lea
dec
imul
sub
inc
das
add
incl
daa
add
jmp
icebp
lds
rolb
mov
or
mov
in
push
mov
addr16
jmp
and
adc
js
and
pop
inc
mov
add
daa
xchg
xor
sub
cmp
dec
inc
dec
inc
popf
popl
xcrypt-ctr
cmpsl
fiadds
mov
or
insl
push
cmp
fcmove
or
movsb
enter
cmc
push
stos
cmp
movsl
push
adc
adc
jne
fldl
inc
push
mov
sar
pop
in
xor
imul
jae
jecxz
stos
xchg
ret
mov
test
loopne
movsb
stos
addr16
fimuls
xchg
movl
mov
scas
or
cmp
mov
test
mov
lods
ds
mov
dec
mov
out
xchg
sarl
fsubp
sub
dec
orl
dec
sarb
cwtl
inc
jecxz
push
mov
mov
jg
dec
test
mov
cs
fistpl
add
pushf
stos
mov
mov
xchg
cli
mov
and
xor
xchg
mull
mov
lock
in
sbb
cmpsb
cmc
mov
add
shll
sarb
cli
push
out
stos
int3
andl
mov
mov
jno
jl
test
mov
sub
cmp
mov
mov
sbb
add
pop
xor
out
mov
mov
or
stos
xor
or
or
aas
dec
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
mov
int
sbb
adc
sbb
cld
fbstp
mov
nop
insb
repnz
sub
or
adc
addl
int3
imul
lods
mov
dec
inc
push
and
mov
test
imul
inc
aam
push
movsb
push
ucomiss
push
popf
cli
jo
jbe
push
mov
mov
fiadds
or
int
adc
rclb
ss
ljmp
cmp
push
push
inc
push
lahf
in
repnz
mov
jbe
jp
subb
adc
push
daa
inc
mov
pushf
mov
int3
insl
inc
push
jmp
push
mov
jns
movsl
lods
std
imul
ret
fisttps
jg
xlat
or
imul
xor
jo
sbb
sti
leave
cmpsb
js
push
inc
or
lcall
mov
cld
pop
lds
and
push
mov
add
or
ds
xchg
adc
dec
cmp
xchg
es
mov
outsb
int
ljmp
xchg
add
lea
fsubrl
push
outsb
pop
mov
and
xchg
mov
xchg
cwtl
and
mov
push
cli
or
inc
and
and
sbb
loope
mov
sbb
idiv
mov
jns
push
imul
mov
test
pop
add
and
and
jne
jecxz
xchg
dec
popa
shl
sub
cs
cwtl
ficoms
or
and
xchg
add
adc
inc
xchg
aad
add
xor
rol
aaa
insb
push
adc
cld
sub
arpl
pop
jnp
je
pop
addr16
pop
adc
arpl
jl
inc
mov
mov
push
xchg
mov
ljmp
push
dec
je
fistpl
mov
adc
cmp
jp
inc
push
pop
ret
icebp
cmp
ds
sbb
and
add
scas
imul
mov
or
es
jns
in
rclb
adc
mov
adc
ja
cmp
push
xor
adc
adc
add
aaa
cmp
and
add
and
rcrb
jmp
jae
lock
cmp
cwtl
xchg
daa
dec
scas
jp
scas
sbb
push
jne
jle
jno
rclb
test
pop
dec
cld
dec
adc
inc
les
sti
mov
xchg
lds
push
pop
movsb
xchg
push
scas
out
inc
mov
push
mov
or
outsb
cs
imul
lock
inc
pop
jae
lret
mov
cs
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
pop
jo
sbb
and
sbb
out
cs
dec
push
pop
pop
push
jo
lea
leave
js
cmp
mov
cs
mov
int
js
sub
cltd
sti
rclb
mov
pushf
xchg
xor
or
in
cmp
mov
enter
hlt
and
jbe
push
xor
arpl
imul
into
es
or
loopne
out
andl
cld
inc
pop
push
pop
ret
lahf
je
pop
cmpsl
ss
stc
fsubrp
imul
cwtl
test
pop
bound
jno
lahf
inc
mov
push
adc
or
or
scas
subl
aaa
cmpsb
push
sti
cwtl
loop
mov
aad
mov
adc
pop
jns
xor
dec
push
xchg
lahf
subl
mov
imull
adcb
xchg
jl
adc
cmp
call
nop
fadds
jge
inc
int3
pop
add
jno
fildll
loopne
fwait
jl
fs
aam
mov
aas
sarb
jne
je
out
dec
mov
fnsave
xchg
lea
pop
aad
pop
mov
and
mov
jbe
cmp
mov
push
lea
adc
fnsave
into
sbb
mov
sbb
pop
mov
int3
add
out
and
inc
test
bswap
loope
sub
jns
test
jo
xor
and
sub
push
xor
hlt
xchg
fstl
push
mov
xchg
inc
mov
mov
pop
pop
cwtl
test
movsb
push
call
jae
scas
orb
fstpl
pushf
push
jle
mov
dec
adc
and
sbb
mov
cs
fsubrp
lds
inc
ljmp
fiaddl
cmpb
cmpsb
jge
pop
sarb
insb
es
cmp
orb
in
or
jge
arpl
mov
mov
and
lods
pop
call
incb
lret
cld
xor
movsb
adc
aas
inc
pop
sbbb
ret
pushf
fdivr
xlat
mov
repnz
push
cmpsb
outsl
cmp
push
lds
jmp
mov
loope
call
mov
nop
lock
sbb
cltd
and
mov
js
orb
jae
lahf
sub
xlat
xor
mov
jg
mov
cmp
insl
data16
pop
xor
ljmp
inc
xchg
adc
lds
push
jecxz
push
push
adc
lahf
insl
in
jl
enter
into
hlt
mov
aam
adc
add
xor
mov
das
insb
or
jno
lea
popf
jbe
mov
push
data16
dec
mov
pop
addr16
dec
out
stos
mov
jo
mov
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
ret
nop
rcrl
and
sbb
test
pop
rcl
enter
xchg
xchg
and
mov
pop
jns
xchg
in
mov
rcrl
xchg
popa
mov
jae
in
stos
cmp
add
adc
mov
sub
sbb
push
lods
xchg
pop
sbb
cmpl
add
sahf
and
pop
pop
adc
jae
xor
xor
lret
fwait
push
fcomps
ret
jmp
jge
push
inc
fldenv
les
xchg
ret
xchg
fisubrs
outsb
fildll
pushf
lods
daa
pop
sbb
adc
fnsave
dec
ret
sarl
lret
or
addr16
mov
push
aad
popf
jl
and
sbb
and
fs
and
je
inc
es
push
lock
test
pop
or
cmpsl
add
call
es
lcall
cmpsb
xor
mov
ret
andl
les
mov
test
mov
divb
sbb
leave
movsb
xor
mov
loope
or
mov
mov
mov
pop
hlt
push
bound
cmpl
pop
lret
repz
mov
arpl
inc
fsubrs
push
icebp
mov
or
cmpsl
jmp
cmp
mov
adc
dec
out
fisttpl
dec
stos
pusha
sahf
or
pop
jne
jns
sti
xchg
out
xchg
fwait
mov
fstp
shl
adc
data16
mov
jecxz
adc
outsl
pushf
inc
rclb
popf
shlb
dec
xchg
imul
out
call
or
and
gs
cmc
repz
int3
scas
ficomps
mov
les
sub
fsubl
mov
and
ret
aad
out
lods
sub
stc
dec
xchg
repnz
into
add
jle
sub
mov
push
negb
int
push
sub
clc
cmc
dec
or
dec
adc
sub
jae
or
jmp
or
pop
lahf
push
incb
mov
cli
lock
cmp
fsubs
and
pop
xchg
dec
xor
lods
in
rcrb
xor
xchg
jbe
fwait
pop
aaa
dec
addb
jne
xchg
test
fstpl
sbb
dec
add
sub
mov
mov
outsb
insl
adc
inc
cmp
jp
fiaddl
cwtl
test
addr16
xor
sub
pop
push
cmp
dec
xchg
cwtl
cmc
std
inc
ljmp
shll
lret
cmpsb
fwait
test
aam
rclb
popa
sub
adc
jnp
fwait
add
loop
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
and
sbb
stc
dec
loope
and
orl
pop
stc
push
cli
inc
and
outsb
and
lods
in
push
lahf
dec
into
and
repnz
lods
or
fs
cmc
cmp
or
sub
aam
jmp
ds
fwait
test
jmp
xchg
insl
in
sbb
mov
push
pop
pop
adc
sub
loope
push
out
imul
push
pop
add
add
imul
popf
jmp
gs
push
iret
add
or
ret
ss
lods
xchg
push
repz
jno
mov
and
cwtl
cmp
adc
aas
sub
lock
jb
cmp
push
iret
inc
xbegin
insb
movsl
test
hlt
inc
pop
leave
xchg
fidivrl
push
lret
and
inc
jae
outsb
jmp
mov
mov
and
inc
out
sbb
mov
or
mov
lods
andb
add
dec
lods
or
mov
xchg
cltd
inc
fwait
mov
mov
mov
and
xchg
pop
xor
clc
xlat
sub
sbb
enter
lock
xor
subb
lret
pop
or
adc
sarl
dec
mov
sbb
mov
mov
mov
and
mov
inc
dec
push
nop
rcll
inc
fwait
inc
mov
fadd
add
xchg
mov
stos
or
or
out
sub
cld
or
xor
lods
add
xchg
dec
jp
fstpl
jae
ds
push
stc
insb
imul
repnz
ret
arpl
js
pop
sub
mov
inc
sti
dec
dec
push
inc
push
mov
jmp
jl
lahf
lret
mov
ljmp
push
mov
jg
mov
inc
aas
call
out
jo
sub
mov
jbe
jecxz
sbb
je
push
xor
arpl
mov
clc
push
mov
lret
in
lret
js
movsl
out
inc
fldenv
or
pop
xchg
or
fld
fsubr
cmp
popf
adc
xor
int
cmp
dec
cmpsb
outsb
cmp
ret
leave
pop
mov
sbb
mov
popf
add
mov
movsl
jno
jne
cs
ret
pop
mov
cmp
fdivr
push
lahf
add
jne
mov
sbb
outsl
addr16
mov
mov
sbb
mov
movsl
lahf
outsl
cmp
sub
sub
negb
sbb
jp
ret
filds
cld
notl
mov
mov
imul
mov
and
aas
sub
push
pop
pop
jl
adc
cwtl
jmp
subb
cmp
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
sbb
and
sbb
xor
stc
ja
rolb
dec
test
ffree
and
mov
cltd
cwtl
push
xlat
push
pop
aas
aam
dec
adc
ljmp
add
sbb
pop
test
mov
xchg
push
idivl
je
mul
add
or
dec
test
rorb
mov
popa
inc
xchg
lahf
lock
mov
pop
xor
jl
jne
pop
sbb
push
jae
or
xor
popf
cld
xchg
aas
icebp
int3
repz
xchg
or
push
jno
pop
cli
mov
rcr
cmp
popa
mov
adc
ret
add
popa
add
loopne
mov
mov
cmpsb
es
into
sbb
fucomp
pop
xchg
call
jmp
push
int3
ja
shlb
xor
cwtl
lea
sbb
xor
fsubs
iret
call
pop
mov
mov
arpl
and
ljmp
stos
paddsb
cltd
stos
inc
fldenv
loop
fidivrl
leave
cmpsl
mov
mov
out
xchg
sub
fcom
pop
add
faddl
add
or
out
or
ret
imul
and
jo
mov
in
ja
sub
in
add
nop
lret
shrb
fistpl
sub
inc
dec
xor
dec
pop
rcrb
pushf
es
mov
cmp
shrb
jne
imul
xchg
jne
cld
sub
outsb
cwtl
push
enter
or
mov
xor
insb
and
test
add
pop
les
dec
ret
lcall
jmp
jmp
leave
push
sahf
cmp
test
mov
xor
cmpsl
inc
in
xorl
adc
jno
sti
push
jle
out
rorl
push
lods
lahf
and
pop
adc
mulb
add
daa
dec
fwait
notb
jl
pop
adc
cmc
test
das
sbb
push
xor
int3
cltd
and
mov
push
aad
pop
jo
mov
xor
add
mov
lea
xor
shl
mov
ficomps
dec
dec
mov
pop
and
inc
mov
sbb
jp
jnp
cmp
and
lea
sbb
push
loopne
out
cmp
inc
cltd
lret
movsb
mov
push
push
inc
pop
ret
jbe
fnstsw
cld
cld
or
inc
ret
inc
cmc
xor
in
rcl
pop
jo
add
test
jae,pt
pop
lret
sub
pop
test
sbb
jne
stos
test
jne
fldenv
fs
in
cmpsb
push
mov
stos
movsl
mov
xchg
test
dec
cmp
fmull
outsl
scas
fwait
pop
les
out
cmp
sti
pop
lahf
movsl
sbb
ljmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
sub
xor
mov
stos
sub
xchg
cmpsl
sub
pop
lods
inc
jo
int
cmp
es
and
jbe
and
lods
dec
fistpll
scas
in
mov
pop
in
pop
jl
mov
push
sbb
insl
or
dec
or
adc
addr16
jo,pn
jmp
jo
or
sub
push
xchg
ret
out
lahf
hlt
ret
lret
add
lcall
in
aaa
jg,pt
xchg
mov
xchg
mov
mov
xor
mov
repz
js
sahf
pop
mov
xchg
shrb
pop
mov
jg
leave
mov
out
leave
call
mov
jge
dec
icebp
dec
jno
mov
cmp
or
ja
test
adc
jp
das
add
and
push
sbb
pop
mov
ss
out
lahf
sub
shlb
in
or
mov
notl
int
jb
dec
and
daa
jnp
je
dec
icebp
incl
movsl
aam
subb
sub
add
es
pop
fisubs
aaa
aam
aad
push
test
jge
and
adc
inc
jmp
mov
sbb
jbe
sbb
fsubrl
mul
sbb
pop
mov
mov
dec
aam
in
lret
mov
inc
add
test
sub
cld
and
mov
cmc
inc
mov
es
pop
in
and
lods
and
adc
ss
mov
in
orb
adc
repnz
ljmp
lods
cltd
data16
sub
mov
bnd
mov
jle
push
mov
push
inc
sbbl
and
adc
push
ret
sbb
js
inc
mov
int3
mov
roll
insl
cmpsb
mov
xchg
inc
mov
sarl
xchg
mov
mov
mov
dec
adc
jnp
mov
jo
xor
jo
xor
xchg
arpl
lods
fmull
mov
mov
cli
pop
roll
push
cmp
movb
insl
and
ret
sub
push
fcoms
std
sbb
sub
xchg
cs
pop
fwait
jl
clc
adc
fidivl
xchg
sar
cmp
mov
inc
dec
mov
and
pop
cmpb
out
or
sub
jae
mov
in
mov
rcrl
fldl2e
pop
adc
test
jg
incb
je
test
adc
lret
pop
sub
ds
imulb
cmp
jnp
pop
hlt
jmp
sub
adc
inc
lret
xchg
adc
scas
inc
call
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
pop
jns
mov
sbb
and
sbb
pop
mov
ja
xor
add
les
movsb
call
cmp
mov
js
arpl
aas
fsts
mov
loop
subl
gs
mov
push
push
mov
inc
cmp
mov
dec
mov
sar
enter
xor
and
mov
cmpsb
lcall
jge
sub
push
pop
ficoml
cld
icebp
insb
int3
sti
cli
dec
jne
pextrw
imul
or
push
scas
jno
xor
outsb
xchg
loope
inc
or
add
jle
sbb
imul
and
inc
aad
mov
pushf
mov
out
lret
pop
icebp
lea
cwtl
leave
sti
sti
sbb
jg
cmp
les
das
ja
pop
mov
lea
js
imulb
jns
jge
jnp
std
jno
mov
test
lock
imul
sub
scas
lahf
fwait
and
and
nop
daa
icebp
sub
inc
mov
inc
in
mov
int
call
outsl
stos
mov
push
inc
sub
mov
je
test
xor
xchg
je
repz
jle
push
push
jle
insb
xchg
lds
aas
aas
add
mov
outsl
add
orb
pop
xor
xchg
push
sarl
int3
ljmp
dec
push
and
inc
divl
shl
push
inc
test
mov
dec
enter
sub
and
jp
sbb
push
jge
mov
fisttpll
lahf
or
jne
pop
add
or
push
dec
test
test
sub
pushw
sbb
mov
loopne
cmp
popa
lcall
mov
jae
je
adc
subl
mov
sbb
xor
loope
pop
cli
jb
test
mov
test
xor
sbb
mov
test
mov
aaa
add
xchg
or
mov
sub
cmpb
iret
mov
mov
xor
ret
movzwl
and
sbb
xchg
add
xor
clc
lea
cmpb
sarb
stc
xor
mov
or
inc
mov
jl
add
xchg
add
subl
cmpsl
sbb
lret
mov
jo
shl
imul
std
inc
sbb
ja
mov
sarl
data16
stc
dec
outsb
push
clc
and
repz
mov
ljmp
sbb
xchg
clc
cmp
mov
jl
jns
cmp
and
pop
pop
push
aaa
ljmp
mov
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
and
sbb
adc
sbb
std
ds
fadds
fiadds
mov
add
cmpsl
in
loope
movsl
sbb
or
dec
outsb
sub
lcall
add
push
pushf
push
js
mov
xlat
sub
mov
pop
mov
aam
scas
int
and
or
xor
push
add
cbtw
lods
sub
push
mov
push
inc
in
jb
aaa
sbb
shlb
lret
lret
dec
rcll
push
das
clc
and
or
lea
sbb
ljmp
test
or
add
cmp
lock
jbe
movsb
mov
adc
mov
inc
push
int
fisubl
insl
decb
rcl
pop
movsl
sbb
andb
outsb
jb
xor
outsl
sbb
sbb
mov
mov
test
add
sub
in
ret
movsb
jg
mov
imul
jecxz
add
pop
mov
int
mov
jge
std
mov
clc
enter
adcb
stos
push
inc
mov
sbb
inc
push
movsl
dec
shlb
inc
fs
adc
ficompl
xchg
mov
jp
or
imul
jns
daa
cltd
dec
cmpsb
or
pusha
add
in
lods
lret
rorl
stos
pop
cld
lcall
or
xchg
or
nop
push
lret
and
gs
sub
jmp
cmp
fsubrs
cwtl
cmp
mov
sub
out
lcall
sarl
fcmovne
stos
cmp
cmpsl
xor
push
jge
insl
fs
pop
outsb
mov
ljmp
sahf
ljmp
cmp
in
xor
push
pop
mov
and
inc
mov
mov
sbb
divl
out
mov
jnp
xchg
and
mov
sti
test
lock
data16
add
outsl
mov
xlat
sub
adc
inc
ja
fwait
adc
adc
insl
fnsave
xchg
inc
mov
push
and
imul
pusha
adc
movsb
mov
into
sub
lods
in
imul
cmp
sbb
xor
mov
adc
int
mov
sub
mov
das
sub
sub
enter
push
jne
add
lea
into
aas
fwait
cmpsl
dec
dec
clc
inc
rcrl
shll
sub
mov
sbb
shr
push
push
mov
fwait
divl
std
popf
in
clc
lods
inc
add
pop
adc
cmp
divl
movsl
inc
adc
aas
adc
shrl
inc
or
adc
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
inc
pop
xor
sbb
adc
sbb
fistpll
in
jbe
or
mov
outsb
rorl
cwtl
adc
inc
push
insl
fs
dec
in
sbb
popa
int
out
add
inc
pop
fst
xchg
shrb
dec
cmp
cltd
std
stos
ljmp
sbb
call
pop
jmp
or
out
mov
xor
and
cld
mov
movsb
int
rol
cmp
ja
scas
test
lret
mov
aas
rcr
std
xchg
out
push
clc
in
push
sub
fsubrs
dec
ret
jmp
bound
pop
out
movsl
push
cmp
pop
lock
int
bound
clc
dec
add
loop
jnp
repnz
xbegin
pop
add
xor
or
jl
jae
mov
out
dec
push
cld
jp
and
js
in
orl
xchg
mov
test
ss
dec
lahf
popf
cs
movsb
rcll
hlt
add
das
es
push
out
test
fcoms
out
stc
jp
sub
jnp
xchg
rcll
cmp
inc
shll
fsincos
push
fsubrs
cwtl
jge
ljmp
lock
jle
jb
jp
fwait
push
add
pop
mov
cmp
test
pusha
mov
push
pop
enter
jae
mov
sub
xor
movsl
mov
adc
xchg
out
push
aam
mov
loopne
mov
push
ds
test
out
addr16
pop
fildll
or
mov
imul
jmp
dec
mov
adc
mov
cli
imul
push
outsb
in
jle
repz
lds
aam
adc
fisubrs
call
pop
enter
faddl
mov
fstpt
xchg
ret
fidivl
sbb
jne
xchg
mov
inc
ja
leave
push
push
xchg
fdiv
outsl
fwait
mov
cmp
repz
lods
cli
fcmovnu
sub
repz
cmp
cltd
inc
mov
loope
ja
mov
jne
scas
mov
enter
rorl
dec
xchg
sbb
sbb
dec
or
dec
cmc
cmpsl
pop
xor
push
and
xchg
xchg
dec
shlb
pop
adc
orb
test
outsl
cmp
cltd
add
testb
adcb
rcrb
stc
lock
mov
xor
aaa
stos
into
stos
sub
in
and
iret
mov
cmpsb
in
mov
mov
subl
in
in
aas
mov
inc
mov
ss
orb
hlt
outsb
outsl
xor
jp
test
mov
xchg
cmpsl
xor
lret
aaa
std
and
add
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
inc
fildll
sbb
stc
rorb
fnstcw
movsl
lock
inc
push
sub
jns
stos
fisttpl
xor
popl
ret
inc
test
ret
mov
push
xchg
ds
xchg
pop
std
and
ds
ja
xor
and
mov
mov
mov
cmpsb
fs
pop
push
xor
bound
jb
xchg
arpl
outsl
or
in
mov
jmp
xchg
sbb
popa
cltd
jnp
lret
jp
xor
dec
dec
and
sub
scas
mov
sbb
jbe
roll
xchg
aam
loop
aam
jmp
aad
loop
test
icebp
movsb
cmp
pop
arpl
pop
xchg
loope
setp
and
popa
mov
jmp
pop
outsl
fistl
lods
inc
arpl
jns
movsb
jecxz
sbb
mov
pop
incb
repnz
arpl
pop
sbb
add
scas
push
arpl
imul
clc
pop
pop
push
xchg
push
mov
jae
pop
inc
sub
clc
cld
pop
xchg
pop
aaa
incb
mov
push
sbb
jns
es
fwait
push
pop
xor
adc
sti
xor
mov
add
push
sub
pop
pop
cmp
xchg
inc
dec
xchg
add
repz
dec
mov
es
arpl
ds
push
outsl
sbb
xchg
push
cmpb
push
loopne
arpl
and
into
or
jg
aam
jp
xchg
mov
enter
out
popa
test
insb
fldt
sub
jb
jl
ret
cmp
shl
and
inc
fcomi
inc
xchg
sub
call
cmp
shrl
shlb
pop
jns
movsl
loope
stos
test
fistpl
lret
insl
fsubl
lock
or
mov
js
mov
dec
aas
je
out
dec
push
xor
pop
pop
adc
mov
jl
and
and
std
sbb
in
es
or
cmp
fwait
sbb
push
mov
pop
fsubl
sahf
push
sbbl
or
scas
ret
and
popa
jno
divl
movsb
adc
xchg
mov
subb
dec
sar
cli
repnz
ret
add
and
push
test
adc
jge
mov
ret
mov
mov
mov
lods
jbe
and
push
inc
adc
jno
stos
pusha
popf
cld
in
mov
fidivrl
mov
addr16
ffreep
imul
out
cmp
mov
adc
pusha
outsb
lods
sti
push
adc
and
adc
decb
push
leave
jle
xchg
cmp
out
fimuls
shl
jmp
cmp
sbb
push
push
out
push
in
mov
and
sbb
imul
or
inc
cmp
in
loop
push
mov
pop
je
int
and
cmp
jo
sbb
call
in
aam
mov
dec
loop
unpcklps
dec
ss
pop
into
loop
dec
lds
ss
cmc
loopne
add
mov
xor
push
jl
mov
mov
lret
loopne
cmp
adc
xchg
inc
inc
xchg
add
push
xor
movsb
test
xor
sub
insb
js
mov
data16
out
and
jae
shl
push
add
lea
pop
dec
mov
aaa
mov
movb
ss
lret
and
jg
fisubrs
xchg
dec
mov
adc
in
stos
push
les
movsb
fldenv
fwait
stos
gs
sbb
cmp
xor
test
int
stos
aas
insl
mov
or
shlb
insl
shll
mov
xchg
test
pop
mov
imul
mov
pop
cmp
mov
loopne
inc
insb
mov
std
push
push
out
dec
xchg
pusha
dec
jge
cltd
insl
adc
fstpt
inc
jno
cs
jge
cmp
iret
sub
int
mov
sub
xchg
sbb
cmpsb
pop
sbb
ljmp
jle
aaa
repz
repnz
loopne
negb
into
add
mov
mov
in
and
repnz
out
outsb
mov
cs
fwait
icebp
sahf
mov
insl
pop
cli
adc
dec
push
repnz
bndstx
jmp
xchg
jmp
mov
mov
adc
ja,pn
xchg
mov
jmp
setns
test
add
dec
sahf
int
inc
aas
adc
pop
and
rcrb
je
pop
cli
pop
or
jge
mov
or
or
xor
xor
les
xchg
or
scas
xlat
inc
sbb
add
xlat
insl
cmp
inc
movsl
add
popa
leave
jno
std
fs
nop
mov
out
jge
and
cmpsb
test
mov
pop
test
clc
xchg
inc
pop
sbb
sub
mulb
mov
xchg
push
cli
xor
shr
adc
mov
test
repz
jbe
pop
ret
pop
fwait
addb
xorl
scas
push
sbb
jnp
repz
inc
incb
cmc
cld
std
cmp
add
ret
sub
jle
rclb
cmp
xor
leave
add
cld
cmp
aad
sbb
xor
mov
mov
loopne
inc
repz
push
js
les
aaa
cmp
sub
ds
xchg
push
imul
ficomps
dec
lcall
ret
in
inc
add
or
enter
add
or
mov
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
pop
sub
ljmp
inc
mov
push
xchg
push
mov
jge
in
cld
aaa
aam
or
sbb
dec
sbb
xchg
test
add
xor
mov
adc
leave
adc
imul
mov
inc
pop
and
cmp
nop
loop
mov
pop
pop
test
ret
lea
xchg
mov
sub
hlt
xor
push
icebp
dec
adc
orl
jl
push
insb
sti
add
pop
fiaddl
xchg
mov
in
out
mov
jecxz
lods
fadds
fnsetpm(287
cmp
pop
nop
das
jb
into
jle
mov
or
ret
gs
jmp
jle
stos
lods
mov
sti
mov
mov
mov
shrb
shlb
fnclex
repz
and
sub
out
mov
call
mov
mov
sub
inc
cmp
decl
leave
out
push
in
cmp
adc
jns
aam
pop
cmp
jl
jne
scas
push
ror
push
push
addb
inc
cmp
push
sub
cmpsl
pop
xchg
and
sub
mov
mov
stos
or
or
pop
mov
stc
sbb
mov
push
push
jb
adc
inc
std
loop
addb
enter
pop
es
cld
xor
add
clc
out
cmp
inc
or
insb
fucomp
or
shrl
shll
out
arpl
dec
push
pusha
adcb
mov
mov
addb
sub
dec
push
xor
pop
mov
or
cmp
mov
shll
mov
and
lahf
jmp
adc
fdivr
mov
mov
jnp
xchg
pop
lock
es
lock
in
sbb
sahf
arpl
lds
enter
daa
mov
adc
in
pop
and
aam
negb
imul
js
leave
lods
iret
adc
sub
pushf
cmp
push
in
lret
ret
cltd
and
cmp
test
mov
shlb
arpl
mov
mov
inc
xchg
insb
or
sahf
push
sub
mov
mov
lods
gs
nop
lahf
sbb
stos
loop
test
add
mov
sarb
loop
push
pop
mov
inc
flds
xor
outsb
xor
sub
pop
stc
or
scas
loop
ret
adc
loope
test
pop
psrlq
movsb
add
test
fistpll
stos
push
pop
bsf
push
push
aaa
mov
loope
push
adc
mov
daa
jne
imulb
mov
adc
jns
cli
and
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
inc
ja
loopne
sbb
and
sbb
mov
fsubp
mov
out
xor
push
push
rorl
push
repz
xor
xchg
jns
and
sbb
ljmp
jp
pop
sub
int3
cs
mov
pop
inc
negb
bound
outsb
dec
xchg
xchg
nop
mov
add
bnd
xchg
mov
mov
jbe
pop
dec
add
dec
imul
mov
in
push
or
dec
add
scas
mov
cmc
les
sub
imul
adc
mov
push
orl
das
es
fstpt
add
daa
popf
xchg
mul
es
scas
push
jne
adc
pop
push
mov
mov
pop
pop
jo
and
in
lods
lods
sub
pop
push
sbb
ror
ja
mov
cmp
xchg
fbstp
pop
clc
push
aad
lods
ja
add
xchg
cmpsb
sbb
xchg
repz
lds
jno
gs
push
arpl
hlt
lea
dec
jmp
enter
daa
fistpll
in
fists
xchg
inc
out
push
and
or
ret
jmp
inc
xor
shlb
loopne
ljmp
xor
mov
mov
xchg
in
push
or
fidivs
xor
and
sub
std
jecxz
mov
adc
xchg
out
imul
push
mov
xchg
cmpsb
dec
pop
push
fsubrs
jo
sub
outsb
ds
out
test
sbb
jnp
rorl
cmpsb
addr16
mov
pop
sbb
xor
mov
sub
cmc
sbb
sub
mov
gs
jbe
shlb
mov
shll
shl
jne
hlt
push
mov
daa
inc
cmp
ljmp
out
and
subb
push
test
cmc
hlt
movsl
shrl
clc
mov
push
xor
sub
mov
shrl
adc
icebp
jl
aas
dec
xor
addb
aad
cmp
push
mov
jb
xor
icebp
adc
jno
jp
stos
inc
pop
jecxz
push
outsl
in
xchg
push
insl
push
mov
repz
mov
aam
sarl
cmpsl
cli
sub
out
mov
test
xchg
sub
sub
and
cs
jns
imull
data16
stos
mov
jnp
add
dec
mov
xchg
test
test
inc
pop
dec
push
ja
xchg
mov
mov
mov
gs
icebp
stc
and
cmp
stos
jge
sbb
dec
mov
fbstp
shrl
add
shrb
sar
cmp
or
icebp
ljmp
adc
stos
popw
out
dec
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jle
jg
sbb
adc
sbb
push
loopne
lea
adc
pop
nop
cmp
push
dec
pop
xor
dec
xor
sar
jp
sub
or
loope
pop
mov
dec
iret
das
and
mov
mov
add
pop
ds
insl
sarb
pop
rcll
iret
push
mov
jae
stos
dec
mov
and
push
inc
and
clc
jno
jne
dec
in
insl
xchg
jne
js
es
xchg
xchg
imulb
mov
dec
inc
mov
mov
and
outsl
and
mov
pushf
pop
jmp
stc
inc
push
mov
cmp
fsubl
jnp
dec
mov
pushf
push
data16
inc
pop
xchg
pop
cmpsb
sbb
in
jbe
push
scas
rcl
and
cs
out
ret
inc
jae
or
imul
sahf
mov
jae
mov
shlb
loopne
ret
call
enter
pop
adc
add
cli
dec
xorl
leave
xchg
int3
hlt
cmp
mov
pop
xor
ja
adc
paddd
cmp
jno
sbb
ret
mov
dec
xchg
push
cmp
push
push
inc
jecxz
fcoms
lock
sahf
and
adc
jbe
loope
xor
mov
insb
cmp
fdivrp
cli
insl
dec
inc
pop
lahf
std
cmp
pop
push
cld
pop
bound
ret
ds
cltd
adc
sbb
jb
dec
inc
inc
or
lds
test
sub
int
dec
mov
xor
movsb
jp
adc
inc
pop
push
mov
push
sahf
outsl
test
popa
idivl
or
mov
fisubrs
add
cld
xchg
pop
jno
int3
mov
sub
subb
idivl
lock
imul
inc
and
add
pop
lret
test
cmp
jp
imul
cmp
xlat
or
cmp
dec
fisubs
movsl
add
movsl
cmc
sahf
cmpsl
fwait
mov
jle
orl
inc
out
push
pop
das
jecxz
adc
ret
cwtl
inc
sub
inc
mov
je
xchg
adc
push
dec
mov
inc
lret
jl
push
cmp
mov
lock
frstor
out
call
push
cltd
movsb
mov
cmp
cmp
mov
push
cmpsl
pop
notl
mov
mov
xchg
cld
inc
les
jns
pushf
sarl
loopne
scas
and
stos
arpl
mov
add
mov
inc
and
dec
in
mov
xchg
sbb
sub
inc
xor
or
mov
sahf
sti
push
test
clc
test
inc
cs
or
mov
cmp
add
sub
int3
nop
and
mov
sbb
lods
sub
pusha
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
nop
dec
push
jns
sbb
adc
sbb
into
xor
hlt
sahf
int3
sub
xor
xchg
adc
mov
loope
inc
ret
fs
inc
mov
out
movsl
bound
xchg
shl
fwait
mov
test
jae
sub
and
mov
frstor
test
idivl
sub
add
add
mov
xchg
mov
pusha
sbb
sbb
mov
leave
lock
cmp
cmpsb
aas
sub
push
add
push
push
aaa
jns
pop
dec
popa
popf
mov
or
xor
jecxz
loop
pop
and
mov
test
aas
pop
sbb
sbb
mov
fisubs
jg
lods
ja
in
out
mov
sbb
sbb
lock
cmp
std
jp
push
cli
inc
mov
aaa
aas
dec
fwait
adc
cmpsb
andl
push
movsl
repz
jo
hlt
lds
mov
mov
xor
fs
mov
cltd
in
mov
fs
jp
push
jnp
add
add
xchg
ds
pop
dec
mov
es
ret
jmp
or
lret
aam
jge
jl
or
pop
xchg
inc
mov
sti
cmc
cli
jns
xor
repnz
mov
adc
pop
aad
mov
fwait
push
cmp
imull
inc
add
pop
bound
data16
inc
sub
push
cltd
push
adc
mov
push
mov
cmpsl
mov
adc
push
out
sub
repz
jne
sbb
pop
or
das
scas
or
fmuls
jns
mov
mov
enter
repnz
sti
andl
jmp
movsl
pop
sbbl
add
adc
dec
cmp
ret
xchg
aaa
lods
mov
push
xchg
loopne
mov
xchg
popl
fldt
mov
aas
mov
xchg
push
dec
cmp
mov
imul
sub
cli
cld
inc
mov
xor
pop
nop
jecxz
arpl
outsb
inc
or
rorb
inc
push
aam
aas
test
fs
or
jno
imulb
out
js
jle
scas
in
scas
cmpsl
bound
or
or
icebp
cmp
mov
dec
mov
mov
and
repz
push
int3
aam
lock
xlat
add
cmpsl
mov
jmp
push
fcmovnbe
xchg
xchg
inc
xor
cmpl
jp
and
out
lcall
aam
out
mov
inc
push
jp
fldl
sbb
add
sahf
sub
ret
mov
scas
adc
mov
xchg
in
pop
ljmp
mov
push
adc
dec
sbb
cmc
sub
push
sbb
arpl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
fdiv
lret
lret
fxch
jne
sbbl
dec
or
jle
add
mov
xlat
inc
ljmp
sbb
frstor
das
jecxz
lock
inc
nop
stos
sahf
jbe
imul
add
push
mov
dec
sub
cmp
add
lods
jp
or
andl
stc
daa
daa
lret
dec
sbb
leave
sbb
int3
mov
xchg
mov
pushl
test
push
jb
lret
push
push
lret
ja
xchg
test
jp,pt
popf
push
pop
mov
pop
cltd
rclb
or
xlat
ljmp
in
rolb
lock
mov
pushf
cs
hlt
gs
repz
hlt
mov
repz
or
lds
or
andb
icebp
and
aad
mov
rorb
dec
push
lret
and
adc
mov
aas
rcll
jg
movsl
ret
outsb
fidivl
sbb
aad
jmp
push
negb
push
cld
neg
mov
jecxz
in
push
pop
int3
cmp
aaa
stos
aas
test
call
shl
stos
inc
shrb
dec
repz
fwait
xlat
xchg
jg
mov
pusha
in
or
fisubrl
mov
cmp
jnp
pop
lds
sub
inc
adc
mov
and
inc
mov
cmpsl
cmpsl
aaa
repnz
fsubrl
jp
push
out
dec
push
out
push
mov
push
dec
mov
sbb
test
addr16
cld
mov
xor
xchg
imul
sti
sub
dec
and
adc
xchg
test
nop
cld
adc
cmp
dec
xchg
aad
xor
shrl
insb
ret
sbb
or
push
mov
orb
addb
mov
test
sbb
xor
mov
push
pop
fisubs
sahf
jno
lock
or
arpl
not
xchg
stc
xor
dec
cltd
inc
imul
lcall
dec
lods
leave
and
push
mov
scas
cmp
pop
popa
mov
repz
pop
sbb
lods
aam
icebp
inc
icebp
pop
jne
pop
lock
icebp
repnz
std
adc
pop
cmpsl
pop
mov
ret
adc
sub
fists
out
mov
nop
lock
inc
enter
adc
xchg
or
mov
repnz
sbb
call
lcall
rorl
push
pushf
xor
aas
mov
stos
sub
loope
out
enter
test
aas
sbb
fsubrl
iret
mov
xchg
adc
idivb
xchg
mov
push
mov
inc
into
lret
jge
mov
pop
xlat
pop
mov
push
and
test
xor
scas
jb
and
insb
xor
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
or
add
sbb
adc
sbb
or
stc
mov
cmp
cmp
mov
aas
clc
roll
adc
xor
cmpsl
mov
loope
imul
jno
inc
push
mov
xlat
or
mov
pop
pop
inc
data16
jle
mov
inc
orb
sbb
dec
cmp
push
stos
data16
jbe
lock
jmp
cmpsl
outsl
xlat
cmpsl
mov
ret
daa
pop
mov
jns
fcomps
sub
fisttps
jp
cwtl
xor
dec
mov
pop
jle
js
add
ss
jecxz
adc
jge
inc
adc
sbb
dec
inc
add
mov
loop
icebp
mov
cmp
jne
out
and
xchg
adc
xchg
mov
ret
pop
inc
jle
jns
push
outsb
jle
rcrb
clc
cs
xchg
mov
fwait
orb
iret
push
xor
add
adc
fidivrs
xor
lods
push
mov
xor
pop
aas
adc
loop
imul
push
jbe
int
and
int
out
xor
insl
imul
jns
fs
push
mov
xchg
add
aam
cwtl
lret
lahf
iret
popf
out
stc
inc
mov
popa
fiaddl
jbe
aad
sub
addl
mov
orl
es
jmp
inc
mov
push
ret
xor
dec
sub
movsl
aas
clc
add
xor
mov
andb
mov
in
lods
lods
push
cmpsl
daa
lods
sub
ss
nop
and
cli
data16
out
pop
sbb
jb
imul
or
lret
add
and
xor
out
daa
or
sahf
add
nop
test
out
mov
ret
adc
xchg
cld
inc
jg
dec
aad
sti
mov
out
iret
js
or
sahf
jbe
lret
or
inc
or
stc
jb
popa
aas
mov
add
and
add
call
xlat
push
lcall
cmp
inc
mov
into
xor
and
mov
dec
add
aaa
lret
cld
mov
jg
adc
test
lds
dec
mov
jle
xchg
mov
sbb
insl
sbb
xor
and
push
mov
cmp
mov
mov
mov
js
xchg
push
jns
outsb
movl
add
imul
lahf
inc
dec
in
cmp
imul
insl
lcall
dec
cli
sub
mov
ljmp
jle
mov
inc
call
into
mov
movsl
mov
mov
shrd
shr
shr
jmp
and
push
sbb
push
loopne
mov
and
sbb
cmp
cmc
xchg
adc
jbe
push
sti
aad
ret
and
shl
outsb
lcall
add
aas
pop
fstpt
cmp
mov
lret
mov
jo
and
jl
lcall
pop
xor
xchg
test
mov
adc
inc
push
aam
inc
cmp
or
movsb
test
test
in
or
push
xor
push
xchg
outsl
dec
pop
mov
stos
outsb
push
mov
scas
cld
push
adc
and
stos
mov
mov
into
jne
push
push
jp
je
scas
fadd
xchg
mov
dec
inc
jne
div
dec
add
rcrl
push
xchg
adc
dec
xchg
cmp
lret
and
jg
cmpsl
pop
stc
fadd
sarl
and
pop
jns
in
inc
xchg
mov
mov
out
jae
test
repnz
mov
mulps
pop
inc
pusha
pusha
mov
mov
inc
nop
jne
pop
mov
jmp
cmp
xchg
fisttps
aas
xchg
sbb
mov
and
clc
adc
scas
mov
or
mov
repnz
mov
pop
cmp
cmp
jno
inc
movsl
js
push
pop
xor
push
call
mov
sar
push
pop
lcall
push
sti
jne
aas
das
jo
push
int3
add
and
out
adc
out
fistpll
test
pop
lods
sbb
pop
mov
sahf
xor
add
outsb
cmpsb
pusha
inc
cld
mull
xorl
mov
mov
test
push
sahf
aaa
mov
dec
or
cwtl
jg
mov
push
sbb
pop
sbb
xchg
in
in
jmp
fcmovb
jmp
ret
sbb
fs
aad
xor
dec
popl
pop
mov
xchg
push
test
add
mov
vrsqrtss
pusha
xor
lods
sbb
sbb
in
in
aam
adc
dec
lea
xchg
jo
sbb
inc
sti
lahf
adc
or
add
add
neg
sub
mov
cld
mov
and
mov
scas
stos
inc
les
orb
insl
loope
insb
movsl
pushf
inc
sub
jb
int
push
adc
cmp
cwtl
sbb
add
cmc
outsl
push
jnp
mov
dec
jns
push
pop
mov
xlat
test
xor
ret
cli
stc
rcrb
push
cmp
mov
ret
shlb
xor
sbb
rorl
inc
hlt
adc
fsubp
out
push
jmp
push
insb
cmp
pusha
in
outsb
decb
aas
fwait
sar
out
sbb
insb
add
push
shrl
iret
loope
jp
xchg
sahf
in
icebp
jp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
xchg
mov
and
sbb
cld
fistps
lret
aaa
xor
test
mov
pop
xor
add
pop
idivb
pop
adc
mov
dec
push
in
ljmp
in
mov
in
jb
add
mov
popf
push
into
int
jmp
or
dec
aad
dec
idivb
lcall
jp
push
mov
int3
les
cmpsb
stos
inc
adc
push
shl
or
in
mov
sbb
pop
or
sahf
out
rcrb
inc
push
mov
scas
in
outsb
mov
scas
into
push
pop
dec
sbb
or
into
push
testl
mov
dec
xlat
cs
lock
jge
outsb
imul
jecxz
or
dec
test
mov
xchg
jbe
sub
inc
add
adc
sahf
sub
lret
popa
divb
jecxz
push
mov
inc
jbe
sahf
je
mov
mov
sub
lcall
enter
sbb
iret
insb
sbb
push
rcl
cs
stos
xlat
mov
xchg
jbe
or
lea
cltd
push
dec
mov
mov
aam
popa
sub
fwait
jmp
pop
pop
xchg
xchg
out
fcoml
das
pusha
pop
pop
shlb
std
xor
lds
pop
push
jp
int3
aad
mov
movsl
enter
jmp
ret
pushf
adc
jmp
outsl
fiadds
mov
add
cwtl
mov
scas
jae
test
cmp
inc
addr16
mov
mov
cmp
cmc
orl
adc
lea
stc
xlat
adc
hlt
loopne
push
out
jl,pn
loope
rorb
add
add
inc
roll
jmp
mov
scas
add
fwait
push
push
pop
jle,pn
stos
pop
dec
xor
repz
je
sub
fmull
pop
aaa
mov
and
shrl
test
jmp
popa
jb
mov
in
out
cli
pusha
mov
jb
lods
std
orl
popl
push
jmp
xchg
fists
insb
add
inc
pop
inc
add
cmp
addl
mov
out
pop
mov
adc
add
push
nop
nop
push
mov
push
orl
popf
inc
in
cmpsb
ss
add
mov
fbld
push
orb
inc
lcall
pop
fidivs
bound
loop
jnp
movsb
mov
and
in
or
xorb
jge
mov
mov
sbb
or
imul
daa
push
xchg
jae
imul
outsb
xchg
pop
notl
ss
js
mov
jb
xchg
lret
pop
es
pop
cs
in
inc
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
push
stos
sbb
sbb
adc
sbb
or
daa
outsl
mov
pop
fstl
lds
inc
xchg
xor
xchg
mov
sub
jp
xchg
add
and
sbb
xchg
sbb
sub
mov
les
and
adc
dec
daa
bound
clc
fnstcw
movsb
daa
mov
mov
popa
mov
aaa
in
out
cli
pop
jmp
insl
xchg
jg
es
lods
test
dec
mov
jnp
or
int
enter
test
popl
cli
dec
sub
mov
cmp
mov
fdivrl
lea
fsubr
push
fsubs
insl
xchg
dec
cmpsl
xor
sub
mov
pop
jl
and
inc
imul
fcmove
ret
call
in
pusha
sub
mov
fisttpll
xor
pop
jno
scas
cld
xchg
add
pop
pusha
loope
mov
outsb
mov
lds
test
jnp
in
cmp
jae
clc
xchg
mov
sbb
rcr
and
movsb
pop
ret
jge
pushf
fs
lock
mov
ja
mov
test
sbb
dec
pop
or
addl
cltd
jge
sti
xor
bound
out
test
jmp
rcrb
push
pop
dec
sbb
pop
aad
add
std
mov
and
imul
popf
out
add
sub
add
aam
repz
leave
mov
push
aaa
push
cmp
fimuls
add
mov
out
jg
stos
aaa
stos
fcomi
out
xchg
dec
mov
mov
xor
adc
into
iret
xchg
jge
sarb
add
mov
cmp
push
in
mov
pop
jg
scas
das
pusha
push
ja
adc
test
xchg
scas
shlb
loopne
pop
xor
ja
out
xchg
sub
mov
mov
pop
dec
fisttps
xor
les
adc
subps
rcrb
cmp
fdivrs
movsl
sbb
call
sti
push
adc
sahf
add
sub
icebp
not
out
adc
pop
sbbl
or
aas
mov
cmp
ja
call
jmp
into
or
mov
sub
lret
cmp
xchg
fs
mov
mov
loope
dec
adc
jne
daa
stos
add
in
js
sti
imul
lahf
leave
and
push
dec
outsb
and
lea
xor
xchg
xor
sarl
stos
cs
xchg
dec
push
jle
mov
mov
ret
cli
cld
lds
adc
stos
into
mov
jle
rolb
insb
push
sbb
xlat
fs
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
cmp
sbb
adc
les
bound
outsl
add
addr16
push
dec
sahf
cmp
arpl
sarb
jb
and
nop
jmp
or
cmpsb
fildll
les
sti
int
daa
aad
mov
inc
or
rcrl
mov
rolb
add
js
mov
mov
imul
into
push
xchg
xlat
jge
mov
aas
and
push
pop
jo
xlat
jae
inc
mov
cld
cmc
ss
repnz
lahf
sarl
inc
fwait
insb
iret
and
mov
sub
xchg
xor
mov
jb
stc
subb
xchg
lock
push
or
add
mov
and
mov
xchg
subb
addb
jle
aaa
aaa
mov
cli
xor
popf
imul
inc
imul
pushf
les
xor
pop
push
subb
int3
adc
mov
dec
das
pop
xor
das
imul
sub
outsl
stos
lret
sbb
outsb
push
lea
jnp
pop
lahf
and
inc
jbe
mov
sti
adc
push
icebp
mov
adc
jne
insb
push
int
ja
jge
dec
fdiv
imul
and
adc
fsubrs
mov
sbb
mov
ret
add
loopne
sbb
jl
fcomps
pop
rolb
insl
cmp
push
inc
test
cmp
adc
add
aad
cmpsl
lcall
push
jecxz
adc
sub
fst
cmc
or
jnp
pop
push
jmp
jge
xchg
out
jge
aam
cmp
push
outsb
cmp
or
pop
xadd
dec
sti
mov
sahf
sub
idiv
fisttpll
push
pop
mov
inc
icebp
sahf
xorl
mov
add
cld
xor
xor
pop
jae
mov
dec
fwait
inc
vmovaps
add
mov
gs
filds
mov
pop
pop
ljmp
mov
xchg
adc
sbb
outsb
stos
or
enter
mov
mov
mov
int
xor
int
and
pop
sub
mov
or
xlat
iret
add
cmpsb
jecxz
xchg
imul
xor
dec
sub
sub
stos
rorl
jg
jbe
mov
mov
mov
xor
cmp
insb
jmp
sub
or
jge
subl
frstor
jecxz
sub
jmp
ljmp
leave
and
and
out
jne
xchg
in
in
mov
mov
adc
fs
fucom
or
mov
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
xor
xchg
pop
sbb
mov
lds
lahf
das
das
sub
cmp
pop
mov
ret
test
icebp
cmpsl
flds
gs
mov
and
or
fisubl
mov
lret
repz
fdivrl
clc
pop
ja
jbe
aaa
pushf
xchg
std
insb
divb
xlat
call
or
and
call
cmp
xor
xor
cmp
test
aaa
fsubs
or
xor
outsl
mov
sub
pop
mov
cltd
fisttps
arpl
insb
push
lds
mov
mov
pushf
cmp
in
xchg
xorl
pop
pop
sub
in
mov
pop
leave
add
push
and
pop
ds
cwtl
pusha
adc
out
xchg
stc
dec
xor
movsb
scas
push
nop
pushf
aam
out
dec
lock
test
or
shll
cmpsl
pop
dec
cmpsl
push
add
pop
std
dec
cmp
inc
add
test
xchg
rclb
movsb
push
repnz
adc
stos
inc
lret
test
cmc
cmp
cld
nop
xor
adc
adc
dec
subb
jnp
fwait
xrelease
jecxz
scas
iret
inc
push
loope
mov
add
jbe
lret
mov
lock
ror
jne
xor
mov
add
sub
sti
adc
rcrb
xor
data16
lcall
mov
pop
or
es
aam
in
rorl
add
xchg
sub
scas
push
mov
imul
xlat
inc
aad
jle
and
bound
push
push
sbbb
faddl
mov
mov
add
fs
mov
cmp
push
leave
test
adc
or
push
mov
or
xor
cld
shll
rcrl
adc
mov
addr16
jp
and
cmp
xchg
inc
pushf
or
rclb
pushl
mov
aad
test
lds
jecxz
jb,pn
xor
stos
mov
or
out
ds
lods
cltd
cmc
loope
xchg
aas
aad
mov
xchg
mov
data16
add
mov
jp
and
repnz
outsb
shll
flds
into
dec
shll
or
lret
mov
mov
cmpsl
sbb
out
test
out
sbb
daa
and
rorb
dec
mov
cmp
ja
mov
adc
ret
test
fstpt
fistps
jne
jnp
sub
mov
outsl
fdivrl
sbb
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
pushf
adc
add
sbb
cltd
dec
or
icebp
fsubs
lea
fisttpll
loop
xchg
cli
cmp
jmp
pushf
enter
inc
push
mov
or
imul
push
cmp
scas
loopne
andb
push
dec
stos
xchg
xchg
mov
jns
aad
cmp
xchg
xchg
popa
push
jae
mov
addr16
adc
dec
inc
or
cltd
aas
or
sub
sub
loope
or
dec
jnp
test
adc
mov
add
repz
shll
inc
lret
fisttpll
rclb
insl
mov
and
adc
lahf
das
push
popf
jg
mov
test
bound
jbe
jae
push
sbbl
stos
aaa
test
push
repz
lcall
xor
jb
add
loopne
dec
jp
mov
outsl
popf
into
lret
sbb
inc
cltd
sub
jl
jbe
punpckhwd
dec
in
scas
aad
arpl
cmp
out
mov
pop
out
cmpsb
lock
out
std
adc
fnstcw
jne
mov
out
adc
sub
dec
sub
and
lret
cmpsb
add
mov
jmp
push
hlt
sbb
pop
fwait
pop
ret
and
and
sbb
nop
sarl
stos
fwait
push
and
pop
dec
sbb
out
adc
sbb
lcall
insl
arpl
ja
in
fwait
xchg
add
mov
std
iret
je
adc
outsl
mov
imul
imul
xlat
fldl
sub
push
dec
scas
xchg
jns
cmp
mov
dec
out
loopne
ss
stos
sbb
and
pop
and
int3
mov
cmc
pop
sbbb
mov
les
in
clc
or
rcrl
mov
mov
pop
data16
scas
filds
dec
imul
leave
cltd
mov
jg
mov
dec
mov
ljmp
loopne
cmp
xor
mov
out
xor
push
out
mov
shrl
sarb
mov
dec
sub
mov
pop
adc
pusha
rdmsr
cld
test
daa
in
mov
or
out
es
enter
jb
stos
jmp
mov
dec
lock
push
cli
dec
or
imul
inc
stos
add
xor
xchg
inc
mov
and
dec
push
mov
loopne
pop
dec
cmp
insl
idivl
cli
movsb
push
cmpsb
lods
inc
jns
cmpsl
jb
and
xor
es
ds
sub
push
les
or
fmull
sub
imul
loope
sti
aad
shll
test
int
xchg
jne
mov
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
dec
inc
mov
sbb
sbb
adc
sbb
incl
adc
jo
out
jns
cwtl
clc
sub
xor
sub
pushf
pushf
adc
sti
mov
inc
sub
sub
dec
cwtl
jecxz
pop
lahf
xchg
jno
inc
stos
xchg
pop
movsb
fisttpll
es
or
xchg
jne
aad
inc
ja
jae
inc
jae
ret
aam
rolb
pop
push
scas
mov
fs
stc
push
mov
jnp
icebp
mov
mov
sar
cmc
scas
inc
inc
sbb
inc
fwait
sbb
push
outsl
pop
out
lret
aas
sbb
loopne
mov
lods
sub
ret
imul
lcall
insl
aaa
je
adc
xchg
shrl
aas
addb
mov
cs
xchg
rorb
mov
out
pop
and
or
xor
push
push
add
mov
xor
ja
jmp
jne
jne
jge
insb
cmp
pop
push
aaa
scas
addr16
orl
xchg
and
add
jo
push
scas
repnz
pushf
arpl
sar
popa
das
mov
dec
stos
fcmovbe
and
mov
jecxz
jne
iret
mov
gs
jns
push
das
fwait
ret
xchg
pop
outsb
int
mov
popa
mov
jnp
pop
pop
int3
jns
xchg
mov
cwtl
sahf
sbb
sub
sbb
insl
movsb
dec
lret
cld
mov
clc
out
lret
out
fisubrs
subb
fcomps
rcl
into
jo
repnz
clc
mov
nop
mov
or
out
clc
sbb
jbe
inc
cmp
mov
imul
mov
fsubrs
outsb
mov
mov
dec
imul
insb
scas
dec
mov
pop
fmuls
or
out
jge
or
pop
aad
pop
mov
in
enter
ret
outsb
push
add
notl
fwait
aaa
cmc
subl
xchg
push
ret
cmp
insb
ss
mov
inc
push
adc
loope
cmpsb
outsl
mov
mov
inc
negl
lret
int3
inc
jae
popf
gs
aad
repnz
test
faddl
xor
mov
sub
cmp
xchg
jmp
push
ss
jmp
pop
cmp
adc
xor
ds
jge
mov
stos
lods
loopne
arpl
ss
mov
popa
orb
notb
cmp
sub
mov
or
clc
scas
dec
jge
jg
fwait
stos
push
lock
or
jb
or
ja
insb
sysret
add
fs
pop
lcall
and
xor
movsl
cmc
add
push
cmpsl
out
push
mov
mov
jne
cmp
lds
fs
call
mov
sbb
fsincos
fisubs
push
aam
inc
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
jns
mov
sbb
adc
sbb
inc
loope
mov
rcrb
and
xchg
fisttpll
sub
cmpsb
shll
mov
jno
mov
jnp
inc
bound
int3
fmull
pop
loopne
xlat
lret
fists
repnz
ficomps
out
inc
pmaxub
xor
aas
fsubl
jmp
mov
mov
rcrl
inc
inc
mov
push
and
mov
push
loop
pop
scas
lock
dec
aad
xchg
fstpl
xchg
cmpsb
sub
loopne
or
xor
jmp
aam
or
dec
xchg
cld
push
add
pop
cmp
mov
push
insl
jg
dec
ljmp
push
lret
mov
shl
xor
stos
add
adc
sbb
es
sbbl
push
mov
gs
and
shl
test
sbb
sub
xchg
pop
mov
in
repz
sbbb
shrb
ret
pop
cld
push
xchg
sbb
push
call
mov
sub
idivl
data16
fcoml
loope
stc
imul
sub
call
or
scas
icebp
arpl
adc
xchg
pop
or
jbe
lahf
xchg
jge
or
stos
adc
xchg
ss
mov
xchg
sbb
pop
call
xor
xor
cmp
xchg
inc
adc
cld
push
ds
jns
jp
lret
repnz
cwtl
das
and
add
ret
and
cmp
rol
add
push
add
jl
dec
sbb
or
rcrl
imul
mov
pop
inc
mov
outsl
icebp
adc
iret
hlt
inc
jb
dec
and
mov
sub
xchg
enter
jb
icebp
movsb
jae
mov
fwait
es
aaa
push
sub
fsubrl
out
inc
pushf
ds
fnsave
inc
jmp
repz
sub
adc
lret
adc
lds
mov
mov
mov
mov
mov
stc
and
pinsrw
cmp
mov
xchg
sbb
xor
sbb
mov
jno
fimull
fstpl
aam
aas
rclb
lcall
mov
pop
push
sahf
data16
stos
xchg
jnp
in
add
push
mov
mov
pusha
jne
aad
add
outsb
cmp
jle
loop
mov
fwait
fwait
push
fistps
push
iret
sahf
cs
aam
fnstenv
sub
xchg
icebp
add
into
iret
mov
imul
add
imul
shlb
pop
mov
mov
stc
sub
mov
dec
cltd
push
pop
std
cmpsb
adc
scas
sbb
dec
js
cmp
out
movsl
fisttpl
jne
loopne
sbb
pop
test
inc
or
in
int3
loopne
loope
sbb
pop
sub
in
inc
cwtl
pushf
test
mov
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
rclb
call
adc
sbb
or
xor
je
mov
popf
cmp
lcall
addl
jne
sub
mov
sub
or
mov
push
sub
or
and
int
sub
mov
dec
add
sbb
sbb
adc
mov
aad
repz
add
cltd
push
jle
xor
pop
daa
and
xor
xchg
cli
mov
lds
or
mov
or
or
dec
pop
outsl
pop
mov
inc
sub
or
mov
and
nop
and
rcll
loop
nop
sub
test
pop
es
in
push
xchg
cmp
int
call
fldenv
cmp
mov
lret
pop
std
inc
dec
jbe
nop
mov
addr16
int
push
call
cmp
dec
mov
addr16
es
stos
aam
sbb
xor
test
cmp
mov
cmp
lods
inc
push
add
pop
stc
mov
arpl
stos
call
cmp
andb
test
mov
popf
stos
rcll
mov
mov
imul
mov
imul
jns
mov
inc
cmp
test
pcmpgtd
aad
sahf
inc
jbe
xchg
cmp
nop
inc
pop
rcll
flds
pop
nop
push
cmovge
pop
aam
mov
mov
out
aam
inc
add
scas
and
jp
cmp
mov
sbb
hlt
leave
out
cmp
xchg
imul
mov
nop
push
sub
icebp
mov
mov
pop
mov
fldl
bound
jbe
jb
aad
sbb
mov
inc
insl
xchg
shll
mov
bound
sub
ja
mov
lcall
jl
jecxz
sbb
dec
add
adc
jp
fndisi(8087
pop
push
dec
push
js
xchg
dec
ljmp
mov
inc
int3
out
lds
fucomp
mov
fcomp
adc
cltd
push
shll
shrb
mov
cmp
pop
nop
or
fsubs
sti
jno
addr16
outsl
cmp
push
arpl
in
sub
fcmovnb
fbstp
sub
je
pop
jp
imul
pusha
inc
js
add
or
sbb
ss
std
xchg
in
ljmp
daa
push
ffree
mov
mov
jge
adc
and
xchg
pop
sub
and
arpl
inc
shlb
cmp
ljmp
rol
sahf
xchg
fwait
into
pop
mov
push
cmc
cli
xchg
adc
mov
dec
cmpsl
cmp
ss
cmp
jae
movsl
int
in
icebp
pop
adc
add
add
pop
mov
inc
pop
sub
mov
add
mov
mov
movsb
sbb
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
ret
jl
xor
sbb
adc
sbb
enter
fldt
mov
add
fiaddl
int3
jnp
add
xor
cmp
lret
dec
dec
lods
dec
mov
mov
or
xor
push
mov
xor
ljmp
xlat
into
scas
fbld
or
addr16
xchg
cmp
xchg
scas
les
outsb
add
insl
insl
cmc
stos
sub
mov
dec
mov
scas
inc
bound
loop
ss
in
dec
repnz
and
test
dec
cmp
add
sub
clc
lods
add
out
and
insl
shl
sub
out
mov
pop
inc
roll
xor
lahf
mov
inc
fsubr
xchg
in
or
push
sbb
dec
push
inc
sbb
popa
imul
pusha
imul
aas
cmpsb
adc
fdivl
arpl
jns
rolb
lcall
lea
enter
or
ja
xchg
stos
fnstenv
ja
cmp
adc
out
mov
or
mov
xchg
push
cmp
shrl
rsm
orl
sahf
xchg
insl
stos
adc
dec
pop
dec
inc
nop
jo
jns
fwait
stos
fcompl
inc
mov
jp
fnstenv
xchg
adc
movsb
int3
in
popf
inc
mov
je
lcall
jp
cmp
loop
add
sub
fistl
int
push
sti
lret
add
fnstenv
mov
xor
xchg
fists
repz
xor
push
pushf
add
imul
dec
dec
ret
lods
mov
lahf
pop
fisttps
or
xchg
gs
bound
push
xor
leave
adcl
push
cmp
mov
sti
sahf
shl
fs
xchg
lock
and
in
popf
xchg
aad
inc
rorb
push
mov
xor
stc
xchg
inc
shrl
mov
frstor
and
rol
rorb
mov
lcall
or
push
repnz
sarb
iret
jmp
stc
arpl
or
pmaxsw
mov
jmp
clc
aam
xor
ss
pop
cs
or
mov
out
pop
ljmp
pusha
mov
mov
xchg
add
mov
loope
cwtl
lds
and
xor
mov
test
pop
pop
inc
test
xor
rorb
aas
xor
push
sbb
mov
pop
jl
imul
jle,pt
cmp
rcl
repnz
and
cmp
and
xchg
xlat
push
and
or
pusha
scas
mov
xor
push
push
jge
bound
add
jmp
add
push
sbb
ja
lcall
arpl
adc
sbb
pop
inc
filds
mov
sub
fnstenv
sub
lret
inc
mov
mov
sub
cmp
outsb
mov
dec
scas
pop
or
push
ss
cmp
ljmp
push
mov
or
sahf
cld
in
xchg
or
bnd
and
cmp
and
sub
pusha
cmp
movsb
call
addr16
push
lret
insl
inc
ss
pop
sti
and
jge
mov
push
lds
hlt
mov
dec
in
dec
rcrl
xchg
decb
pushf
xchg
jne
mov
fstl
cmpsl
mov
and
in
mov
fwait
dec
pop
xlat
add
test
lods
sub
cmp
push
add
mulb
ljmp
mov
outsl
pop
pop
push
out
or
addr16
xchg
push
jae
cltd
ror
ljmp
out
sbb
lock
repnz
sbb
divl
and
mov
loop
xchg
loopne
xor
jnp
js
mov
and
std
lret
adc
clc
mov
push
negl
sbb
loop
mov
cltd
mov
dec
jge
dec
in
sub
fwait
mov
dec
mov
cld
lcall
leave
pusha
packsswb
pop
push
pushf
xorl
xchg
mov
xchg
mov
pop
lret
rdmsr
inc
inc
and
pop
lret
xchg
shrb
shll
orb
inc
rcrb
mov
mov
aad
mov
outsb
int3
xchg
movsl
aam
and
mov
cwtl
ljmp
fbstp
mov
fidivl
pop
jae
sub
dec
mov
pop
xor
mov
nop
adc
adc
pop
sub
insb
mov
push
push
mov
mov
sub
push
fidivl
addr16
inc
inc
je
pop
andl
xor
imul
aas
jp
mov
dec
add
lret
adc
push
lock
aad
sbb
mov
pop
popf
sbb
mov
aas
iret
dec
mov
push
out
mov
pop
inc
mov
dec
jmp
cwtl
imul
xor
and
popf
xor
push
fldenv
inc
hlt
dec
orl
outsl
incb
push
or
pop
out
dec
cmp
stc
gs
and
pushf
popa
mov
jne
pop
fimull
push
mov
mov
sub
jae
pop
out
icebp
or
adc
cmpsb
rorl
mov
sarl
lds
inc
jle
jnp
movsb
pop
mov
mov
icebp
popf
xchg
rcr
insb
repnz
std
lock
sahf
in
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
or
sbb
add
sbb
pop
or
pop
sar
movl
imul
pop
inc
out
or
push
es
jl
jae
inc
xchg
jp
xchg
jge
dec
and
cmpsl
add
mov
insb
jl
push
push
cmp
sub
or
mov
insl
lret
imul
jo
cmp
jne
jo
mov
xchg
aas
dec
cmpsl
push
orb
sbb
sub
aas
loopne
sbb
into
sbb
in
lods
insl
adc
lcall
jge
mov
and
sbbb
bound
mov
loop
cwtl
scas
pop
adc
xchg
cltd
cmp
movsl
xchg
loopne
fwait
mov
add
add
mov
pop
fstpt
add
mov
pop
push
sub
pop
sub
arpl
lock
jae
jb
jl
mov
out
dec
sbb
dec
adc
loope
jo
fcompl
push
jl
call
popa
mov
dec
adc
or
sub
sub
mov
and
popa
stos
stc
mov
divb
mov
cmp
xchg
and
mov
jmp
mov
dec
fdivrl
or
je
inc
fcmovbe
call
lahf
sbb
and
jb,pn
fwait
test
lahf
int3
fdivs
roll
pop
cmpsb
shll
pop
mov
out
dec
push
lea
addr16
movsb
test
mov
cli
ljmp
arpl
in
movsb
lods
cwtl
sub
popa
repz
call
lret
cmpsl
cmp
clc
and
jle
imul
pop
push
stc
rclb
data16
ds
jp
pop
cmp
mov
fcoml
in
rclb
in
mov
cmp
sub
in
ret
cmp
sbb
outsl
orl
pop
mov
addr16
pop
push
xor
shll
ljmp
movsb
in
jl
pushf
sti
gs
fisubrl
push
push
jmp
icebp
sub
adc
mov
jno
xor
cld
mov
pop
jbe
or
sarb
leave
cmp
loopne
xchg
cmpsb
mov
pusha
jnp
mov
mov
sarb
add
jne
push
jbe
cwtl
cmp
pop
inc
jns
mov
mov
notl
jns
ds
dec
inc
or
mov
in
or
scas
inc
icebp
or
xor
pop
push
out
push
jmp
push
add
jle
inc
mov
and
jl
outsb
push
cwtl
mov
inc
add
das
leave
fsubp
cmpsb
data16
push
fistl
or
shlb
inc
mov
mov
inc
dec
rorl
faddl
push
push
outsb
xor
jb
inc
leave
sar
mov
mov
in
shll
imul
xchg
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
mov
jle
pop
sbb
add
sbb
aas
jns
stc
mov
popa
xchg
outsl
jnp
add
rolb
movsb
pop
push
mov
and
and
popa
repz
inc
iret
cs
nop
mov
lods
xchg
mov
pop
sbb
pop
into
movsl
jb
add
sub
in
enter
push
pushf
xchg
fcoml
inc
shlb
lcall
xchg
stos
cmp
scas
mov
pop
sbb
push
mov
and
inc
or
cmp
repz
in
and
cmp
dec
xchg
sbb
ret
cli
adc
sbb
popa
push
movb
dec
pop
push
cltd
mov
dec
rcrl
xchg
push
xor
and
and
jl
shrl
xchg
in
mov
mov
popf
mov
bound
fsubl
inc
and
jbe
inc
add
dec
clc
fstpl
xchg
scas
imul
and
sarl
add
pushf
in
stos
adc
cwtl
adc
out
mov
xor
aaa
push
inc
ds
in
xlat
lcall
dec
cli
cmp
mov
decb
push
ret
pop
rorl
pop
sbbb
icebp
mov
jnp
ret
cltd
js
dec
pmulhw
mov
sub
inc
jecxz
and
aaa
sbb
scas
loope
xor
stos
int
aaa
cmp
popf
out
je
xchg
lods
pop
xor
inc
stos
sbb
mov
lock
push
cmpsb
pop
daa
int
sbb
cltd
fs
aam
imul
mov
mov
mov
aaa
xor
vmovdqu
inc
ficoml
shlb
dec
mov
push
sub
jecxz
icebp
push
cs
cltd
mov
inc
inc
idivb
mov
repz
push
jns
js
out
mov
sbb
cltd
push
mov
and
jbe
jbe
jb
xchg
push
jb
int3
xchg
pop
adc
adc
rol
fwait
mov
push
sarl
arpl
in
test
add
mov
std
adc
inc
pop
mov
ret
push
mov
testl
pop
mov
mov
lret
aas
testb
mov
sti
jno
iret
lret
fistl
lock
scas
mov
dec
popf
push
pop
add
fmull
jle
icebp
fstl
mov
dec
dec
adc
js
mov
fsub
cmp
cmp
shl
lods
pusha
lods
xor
or
adc
loopne
fcmovu
mov
test
daa
out
addr16
adc
aad
mov
xchg
bound
inc
mov
imul
sbb
xchg
mov
fs
mov
rcll
mov
cld
sub
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
sbb
cmp
jae
fldenv
mov
xchg
fcoml
aas
loop
adc
aam
in
xor
mov
push
cli
outsl
insl
and
test
inc
mov
jl
imul
adc
call
test
iret
cld
jge
test
add
loop
pop
xchg
out
int
test
stc
jmp
adc
sbb
pop
push
push
cmpsl
push
xor
inc
icebp
add
shl
sub
adc
iret
insb
out
xchg
cmp
xor
fldcw
fldcw
fistpl
jns
fbstp
in
mov
ds
and
fwait
shlb
rep
add
out
mov
leave
cmp
ss
test
mov
xchg
in
and
lret
js
outsl
jo
xor
iret
jo
jl
push
add
imul
fildl
imul
xor
push
mov
js
pop
jbe
stos
imul
in
sarl
pop
push
push
js
lret
inc
ljmp
jg
flds
cmp
pop
mov
insl
mov
ret
push
dec
stos
xor
sub
lds
fisttps
rorb
clc
adc
insl
cmpsb
and
jle
movsl
push
cmp
mov
push
bound
dec
pop
lret
mov
rclb
xor
dec
lds
movsl
stos
imul
or
mov
pop
je
shl
test
dec
jns
test
add
add
mov
cmp
out
pop
gs
in
mov
push
sbb
jno
popf
xchg
push
lods
hlt
movsl
insl
adc
or
roll
loop
outsl
out
cld
imul
mov
jae
jae
scas
jg,pt
clc
inc
popa
iret
xchg
fs
mov
jbe
sub
ja
or
enter
inc
orb
mov
jne
mov
aad
mov
xor
jns
sbb
fucomp
insb
out
mov
sbbl
jne
xchg
test
mov
push
mov
xor
sub
js
sub
or
test
mov
nop
int3
mov
xor
loope
mov
scas
aaa
in
or
cmpsl
sub
fwait
pop
mov
jge
insl
cli
notb
and
xchg
xchg
mov
cmpsb
and
dec
push
inc
jno
and
stos
xchg
jecxz
imul
add
mov
cmc
inc
add
lahf
jnp
adc
popa
mov
and
or
inc
inc
ljmp
and
adcb
sub
dec
jmp
jb
mov
add
in
jecxz
xlat
pusha
push
pop
subb
push
dec
cwtl
push
or
idiv
fmul
jg
mov
pusha
call
xchg
jae
in
insb
je
pop
pop
push
push
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
fstl
xor
add
sbb
jo
jo
cltd
sub
call
xchg
and
repz
push
xor
cs
jecxz
in
xor
sbb
jo
mov
loopne
inc
call
add
xchg
std
into
dec
sub
adc
enter
cs
ds
push
ljmp
pop
adc
mov
es
inc
stos
xchg
adc
movb
pop
jo
testl
xchg
inc
shll
es
mov
jl
mov
sbbl
pop
jne
iret
adcb
adc
scas
push
xchg
std
imul
sti
fwait
ret
movsb
push
lahf
fcoms
xchg
pop
sub
mov
mov
ds
cmpsb
push
lds
mov
and
and
mov
jb
xchg
fcmovb
lods
std
cmp
add
jno
add
push
inc
aaa
ljmp
sub
enter
pop
stos
test
out
push
stc
push
dec
insl
out
ljmp
pusha
int3
cmpsl
cld
int3
xchg
outsl
mov
fcomps
cmp
or
dec
inc
mov
or
sbb
fs
xor
jge
loop
inc
test
pop
cmpl
enter
out
xor
push
ds
loope
sbb
int
in
rolb
xor
and
inc
xor
mov
incb
xrelease
mov
ret
js
into
data16
je,pn
pop
mov
mov
mov
movsb
arpl
inc
xchg
sbb
dec
arpl
shll
pop
mov
jbe
dec
movsl
pop
out
clc
shr
in
cld
xor
mov
cmp
fdivrl
and
jb
add
xchg
mov
and
mov
jnp
aas
mov
jecxz
cmp
jo
add
mov
scas
test
push
das
fcompl
testl
dec
shlb
lcall
xchg
xor
push
dec
mov
add
jecxz
nop
ljmp
leave
jp
dec
sub
xchg
xor
jmp
orl
imul
sub
cmp
popa
push
push
in
cmp
sahf
loop
sub
fsubp
jbe
testb
fwait
push
test
push
out
xchg
hlt
fdivrp
jg
movb
sbb
jg
xchg
imul
out
ja
or
cmp
jne
sbb
stos
hlt
xlat
add
sti
pushl
jno
outsl
push
loop
inc
xchg
sbb
mov
lds
or
lea
xchg
pop
aaa
orl
rolb
repnz
bound
movsb
cmp
xchg
popa
mov
push
pop
in
inc
addr16
imul
and
in
or
gs
pop
sbb
jae
inc
repnz
cmpsl
pop
clc
fsub
mov
or
pop
mov
mov
push
jo
add
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
push
adc
inc
or
sbb
dec
out
sub
pop
adc
mov
fstps
mov
mov
or
inc
push
imul
push
in
push
xchg
push
dec
cmp
sub
fs
data16
mov
nop
sbb
xchg
jb
in
out
jmp
push
repz
jno
test
xchg
cmpsl
andb
je
jb
and
mov
ss
flds
jbe
sub
sahf
push
ud2
jne
mov
js
fdivrp
push
mov
fwait
ret
xor
mulb
aad
cli
arpl
sbb
xchg
lods
cli
pusha
movsl
cmp
push
mov
mov
or
cmp
movsb
dec
xor
mov
rclb
test
lret
fimuls
mov
or
lea
jle
imul
inc
mov
cmp
or
sub
cmc
repnz
call
push
lods
cmc
test
cmp
fcmovnu
mov
and
movsb
lods
sbb
add
loop
mov
add
push
or
aad
popf
cli
ret
bnd
mov
sti
scas
js
inc
pushl
js
xchg
push
mov
sub
inc
mov
sub
out
or
pop
xor
inc
xor
aad
xchg
push
mov
xorb
mov
dec
mov
out
pushf
xor
stc
cmpsb
add
cmp
arpl
in
aaa
clc
sbb
sub
ffree
jne
ljmp
mov
mov
shlb
ljmp
movsb
mov
sub
xor
sbb
mov
int3
push
out
rclb
jge
add
fsubr
xorb
or
ljmp
out
in
stos
test
imul
jno
loopne
pop
mov
sbb
cli
mov
jae
jp
aaa
xor
add
test
or
push
pslld
out
test
jl
repz
mov
mov
test
js
xchg
pcmpgtb
pop
pop
pop
xor
add
je
sub
xor
mov
and
and
sti
imul
mov
cmp
inc
mov
and
orb
sub
or
loopne
jb
clc
push
jmp
ret
cmp
js
mov
dec
gs
cltd
aaa
sbb
stc
sbb
popa
rsqrtps
and
int
popa
pminsw
imul
je
xchg
xor
sbb
cmp
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
fwait
xor
test
sbb
enter
scas
inc
inc
xlat
mov
cltd
ret
mov
and
stc
stos
sub
mov
sub
or
jecxz
xchg
lods
add
pusha
jp
mov
and
adc
imul
or
fstp
jge
mov
sub
sbb
xor
inc
pop
sarl
cmp
daa
pop
pop
mov
sbb
out
dec
sub
push
mov
outsl
fistpll
adc
jno
cmp
in
xor
mov
pop
daa
adc
ret
test
adc
inc
rorl
das
imulb
push
sub
pop
add
movsl
pop
es
jmp
xor
add
and
mov
data16
fwait
scas
negl
inc
mov
loope
dec
cltd
lret
mov
xchg
jae
and
or
mov
pop
lahf
cmp
or
roll
xor
or
pop
scas
movsb
or
stos
insl
rcrb
jae
loopne
das
dec
adc
jmp
addl
cwtl
pop
popf
xchg
lret
shrl
push
outsl
or
adc
ss
lods
cmpsl
mov
push
out
mov
ss
std
jmp
xlat
push
lods
stos
rorb
push
ljmp
pop
addr16
mov
fistpl
out
sbb
icebp
std
jbe
pusha
je
mov
out
jno
test
mov
dec
jmp
jecxz
idivl
and
push
scas
or
mov
fisubl
aaa
in
ljmp
cmp
test
or
cmp
and
enter
loopne
jmp
mov
cs
mov
sub
push
jp
and
or
rcrb
stc
rorl
sub
stos
pop
mov
insb
mov
pop
pop
inc
mov
jae
jl
or
add
mov
xchg
sub
data16
and
pop
pop
add
in
fstps
pop
std
lods
mov
ret
sbb
adc
aad
addr16
hlt
inc
mov
das
insb
loop
sbb
scas
pop
sbb
loop
pop
popf
movsb
inc
xor
out
mov
pop
jmp
pop
psraw
sbbb
test
cwtl
push
xor
cmpsl
mov
jns
enter
inc
int3
mov
add
mov
in
sbb
test
mov
mov
jp
jae
push
adc
movsb
inc
jle
dec
ja
insl
loopne
inc
jo
add
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
add
mov
test
sbb
pusha
mov
inc
mov
mov
fs
insb
push
sbb
out
push
sahf
mov
and
sbb
sar
ljmp
repnz
inc
inc
lcall
leave
xchg
sub
push
jge
adc
orl
lods
int
sarb
test
sbb
or
popf
push
movsb
pop
je
loopne
mov
inc
xlat
inc
add
or
and
and
add
out
lock
pop
scas
and
cld
xor
push
sbb
push
sbb
lret
pop
push
or
or
add
xor
mov
lds
js
dec
subl
dec
out
cmp
sbbb
xchg
xor
loope
xchg
mov
pop
or
test
addr16
bound
mov
xor
rorb
sti
and
xor
dec
or
mov
pushf
mov
dec
push
inc
and
lcall
and
ja
inc
js
xchg
test
push
in
aas
or
lret
dec
jl
sgdtl
fidivrs
aam
ss
es
arpl
mov
sub
sbb
out
shr
imul
repz
or
negl
add
and
gs
add
push
hlt
xchg
mov
xor
arpl
popf
pop
push
dec
enter
nop
stos
sub
gs
mov
andb
adc
mov
xor
jmp
push
loop
call
jl
push
addr16
jmp
inc
xor
xor
test
push
pushf
pop
jecxz
jo
push
mov
mov
scas
repnz
adc
jno
cmp
xchg
loope
test
pop
sbb
scas
data16
cwtl
push
adc
es
out
ljmp
insb
push
xor
push
hlt
xor
dec
je
or
das
fs
lret
stos
daa
fimuls
test
sarl
push
mov
push
lods
push
dec
push
fimuls
inc
mov
fcmove
jle
push
inc
xlat
mov
popa
das
cld
pop
jns
sub
mov
sub
shl
mov
pop
lea
mov
daa
into
in
dec
fmulp
out
mov
mov
insb
in
ljmp
cmp
pop
testb
adc
inc
mov
aas
jmp
lds
inc
js
adc
jb
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
pop
imul
adc
sbb
addr16
sbb
mov
enter
xchg
dec
shl
shrb
xorb
push
adc
loopne
mov
sbb
pop
ja
leave
lahf
cwtl
and
lret
movl
sbb
and
sbb
sbb
sbb
cmp
mov
or
int
mov
xchg
loope
mov
rcll
pop
out
sti
pushw
cltd
cli
imul
lods
wbinvd
fistpll
adc
clc
andb
dec
and
sub
or
shlb
xlat
sahf
pop
movsb
mov
jle
stos
imul
push
cmp
lods
mov
xor
out
push
shl
loop
int
cmp
mov
mov
mov
pop
shlb
in
cmp
lahf
mov
push
out
or
xchg
mov
imul
lods
jle
jg
pop
or
fcmovbe
push
ss
push
cmp
add
ljmp
shll
rclb
jp
dec
adc
out
sub
jle
jnp
enter
pop
mull
sub
icebp
lock
out
scas
jo
fucomp
push
push
cmpsb
dec
jmp
int
push
aaa
cmp
lcall
dec
fists
hlt
int3
aad
in
addl
push
lock
and
sbb
movsb
test
pusha
inc
push
push
fcoml
aad
jg
xchg
std
push
sbb
lock
test
push
iret
lds
push
in
sbb
lahf
inc
ret
cltd
jmp
jmp
lods
push
pop
jmp
xor
xor
aam
inc
dec
test
mov
mov
in
ret
sub
lret
dec
movsb
cltd
insb
pop
test
into
dec
popa
add
mov
loop
pop
xor
inc
mov
stos
push
lods
leave
in
addr16
mov
push
mov
inc
dec
es
cmp
or
nop
rcl
ss
adc
std
repnz
or
mov
push
in
cmp
xchg
js
sub
xor
sarb
cmpsb
stos
mov
push
add
xor
outsl
jge
or
push
add
pop
sbb
out
cmpsb
ret
add
int
and
inc
stc
dec
jp
add
subb
repz
cmpsl
cmp
push
rclb
xchg
pusha
jb
rol
sbb
cmp
push
fcoms
cmp
add
in
fsubrs
je
dec
or
std
add
sbb
arpl
mov
jne
lock
push
lret
pop
sbb
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
popf
in
mov
test
sbb
jno
gs
and
enter
fimull
dec
mov
addr16
in
lahf
or
xchg
in
lea
mov
test
ret
stc
sub
push
shr
cmp
cld
and
test
hlt
inc
xor
mov
dec
stc
sub
js
movsb
fs
cmp
dec
arpl
or
movsl
sbb
or
insl
sub
dec
out
push
inc
cmp
outsl
sub
test
mov
and
jg
fyl2x
or
push
cmc
jae
outsb
dec
sub
xor
cli
adc
mov
decl
bnd
xor
jb
xchg
xchg
dec
jecxz
or
mov
mov
adc
bound
add
mov
mov
lret
loopne
adc
orb
lret
pushf
sbb
dec
aas
push
dec
hlt
xor
lods
jmp
cld
push
mov
mov
data16
lea
out
ror
test
in
cmpl
cwtl
aaa
imul
add
xlat
imul
ljmp
into
aaa
jmp
xchg
mov
inc
jp
inc
bound
xchg
cmp
aad
mul
dec
mov
xor
hlt
or
sbb
xchg
ficompl
and
andb
lret
jae
jle
stos
and
movsl
cwtl
les
cs
jne
in
mov
fsubp
stos
dec
popf
jp
mov
stos
filds
mov
or
mov
fsubrp
cmpb
stos
or
in
jnp
and
adc
out
jmp
aad
out
inc
movsb
adc
subb
xchg
xlat
mov
jb
xor
sbb
xor
fadd
or
pop
pop
loop
loope
sbb
sub
pop
or
sbbl
in
mov
fs
fs
xchg
add
rorl
lock
push
stos
push
nop
js
ret
adc
sbb
arpl
or
and
mov
sub
les
int3
jae
insl
add
orl
mov
push
push
pop
ss
mov
lea
dec
and
cmp
sahf
xchg
popa
push
data16
fnsave
add
mov
int3
test
mov
enter
or
daa
pop
sbb
inc
call
movl
jmp
aas
mov
mov
dec
mov
jne
adc
sbb
test
sbb
iret
aas
jnp
push
mov
lods
xor
or
add
dec
mov
test
adc
adc
push
js
sbb
push
dec
inc
mov
sti
jmp
xchg
mov
test
in
aam
add
cmp
ja
jl
pushf
dec
lahf
idivb
scas
pop
sub
and
inc
add
repz
cmpsl
rcr
pop
popf
cmp
push
lds
jl
and
sbb
jp
mov
mov
xchg
adcl
out
out
adc
mov
test
fadds
and
lahf
cmpsb
inc
gs
pop
pop
fwait
insb
sahf
cmc
fs
jp
ja
les
cmpl
lret
mov
cltd
in
cmp
mov
adc
lret
fisubrs
jl
xor
xor
dec
mov
mov
mov
ds
fs
in
push
jmp
xchg
mov
sub
pop
pop
fisubrs
mov
popa
inc
mulb
cmp
adc
mov
cs
jp
in
push
imul
pusha
dec
in
das
jne
or
push
sbb
or
cmp
lds
xchg
xor
in
shlb
mov
ret
dec
int3
inc
inc
and
loopne
push
xor
clc
sar
out
negb
lods
add
adc
std
imul
cmc
add
push
fcmovbe
aaa
pop
mov
mov
inc
mov
outsl
in
sub
sbb
icebp
cmp
cmpsb
lret
pushw
jne
scas
sub
rolb
xor
sub
xchg
dec
and
aam
decb
xchg
or
test
and
jns
jnp
fwait
out
jb
sub
outsb
insl
sbb
scas
xchg
and
xor
push
inc
aaa
pop
out
and
cmp
sbb
rorl
or
mov
fdecstp
mov
or
and
call
push
lods
testl
loope
mov
lahf
cwtl
notb
jbe
std
and
adc
sub
decl
daa
dec
ljmp
mov
lahf
aaa
mov
leave
add
lahf
adc
sub
repz
into
insl
loope
divl
mov
lcall
pop
jle
adc
ror
cmpsb
push
pop
mov
test
mov
fiaddl
dec
in
mov
fmuls
movsb
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
inc
clc
push
ljmp
push
scas
mov
mov
jno
frstor
mov
push
loope
adc
out
cmc
das
fcoms
ret
rolb
adc
cmp
mov
gs
sub
lcall
ret
fimull
movsb
filds
scas
aad
aas
mov
rcrl
fists
push
testl
adc
lods
ret
cmp
sbb
mov
outsb
fwait
call
pop
ret
dec
imul
fdivr
cltd
sbb
rorl
repnz
cs
cmp
cmp
cltd
adc
cli
mov
es
jo
popf
and
test
jnp
push
sbb
sbb
cmp
mov
imul
outsl
adcl
hlt
dec
push
icebp
mov
repz
jge
fmull
aaa
mov
iret
or
jmp
lcall
or
pop
mov
movb
into
pop
lods
sahf
es
pop
rcl
jmp
and
in
icebp
fs
imul
jae
out
adc
rcrb
gs
mov
test
in
insl
mov
scas
inc
push
xor
mov
push
jecxz
mov
jge
fisubs
lahf
inc
inc
add
pushw
jmp
into
xchg
or
lds
sbb
push
jbe
pop
daa
dec
cmp
inc
dec
into
push
or
push
mov
push
fsubrs
pop
push
cltd
nop
mov
out
or
pop
mov
pushf
das
sti
jmp
or
push
adc
pop
lea
sbb
lret
and
inc
mov
aad
imul
iret
aaa
jg
cltd
lahf
mov
sub
lock
mov
jnp
inc
and
ds
adc
pop
mov
mov
iret
fistpll
hlt
mov
xchg
insb
sti
dec
lcall
sarb
lret
enter
xchg
sbb
lea
mov
ja,pt
cmp
sub
inc
inc
out
xchg
mov
dec
push
mov
jg
lds
or
mov
pop
arpl
jge
mov
nop
mov
ret
sub
and
dec
aaa
ret
or
inc
dec
cwtl
pop
push
fisttpl
jg
cs
push
jo
sbb
pop
sub
repz
mov
and
decb
shrl
lock
mov
xchg
sar
pop
push
stc
addb
ss
adc
fs
or
pop
loope
jne
adc
xor
inc
imul
imul
outsl
xor
sbb
xchg
jp
loop
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
ret
hlt
push
out
sbb
mov
sub
pop
fs
loope
mov
jno
shlb
sbb
test
test
mov
lcall
dec
mov
xor
loopne
push
xchg
movsl
stos
pop
cmp
clc
cltd
aam
jae
lret
scas
sub
in
fnstcw
adc
lret
loopne
dec
decb
push
arpl
scas
lahf
sbb
dec
xchg
push
pushf
sub
mov
pop
mov
lahf
pop
mov
jle
dec
pop
cmp
xchg
jp
inc
pop
shl
push
test
adc
push
push
pop
les
stos
sahf
gs
xor
loop
test
sahf
xchg
and
sbb
repnz
ds
xchg
test
adc
ja
popf
sbb
jb
mov
lret
mov
pop
out
sbb
push
in
stc
push
xor
jle
gs
mov
jp
cmpsb
mov
data16
sub
mov
jno
stc
jo
imul
mov
out
movsb
sub
imul
or
in
lret
add
mov
insb
sbb
mov
imul
lahf
and
pop
inc
insl
sahf
dec
fwait
cs
sub
or
test
outsb
and
movb
xchg
add
and
addr16
mov
adc
jb
mov
repz
shrb
or
int3
dec
cmpsb
int3
jge
out
mov
pop
je
mov
dec
push
mov
inc
xchg
ss
push
in
cmpl
jne
inc
lret
inc
cmp
inc
vmovdqa
clc
cmpsb
aaa
syscall
cs
out
cmp
inc
stc
and
leave
cmp
loop
sub
sbb
jl
sarl
gs
cltd
out
pop
jp
sub
and
mov
jecxz
adc
es
push
imul
cmpsb
cmp
iret
fucom
testl
pop
push
cmp
lock
outsb
es
out
inc
popa
push
roll
pop
pop
sub
xchg
and
scas
movsb
cwtl
outsb
push
nop
inc
call
lods
mov
lret
xor
sub
icebp
or
popa
ficomps
mov
ror
add
mov
pop
loopne
pop
mov
jnp
fldt
mov
add
fiaddl
pop
aas
jl
into
fidivrs
shl
pop
dec
push
inc
xchg
inc
movl
jp
xor
adc
sbb
or
lret
and
sub
decb
dec
inc
push
mov
cmp
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jo
loopne
sbb
pop
cs
out
mov
mov
aam
ss
sbb
enter
pop
inc
and
mov
sti
push
inc
js
cltd
mov
mov
xor
pop
int3
fstpl
jle
cltd
mov
or
add
in
or
sahf
ds
jae
jb
mov
jae
mov
data16
nopl
fdivp
clc
mov
fdivr
fdivp
insl
cmpsb
sbbl
sbb
fs
or
adc
jg
int
out
adc
xor
and
invd
repnz
pop
fnstsw
nop
jb
in
inc
cmpsb
cltd
fdivp
sub
pop
xor
inc
addr16
and
jo
dec
test
scas
ds
fsubr
cmp
dec
dec
mov
loop
mov
sub
inc
jno
lahf
adc
add
mov
fists
xchg
push
mov
jns
jns
lcall
sbb
push
gs
arpl
mov
add
dec
ljmp
jo
jbe
stos
sub
sarb
stos
push
mov
daa
stc
inc
dec
ret
and
lea
push
mov
mov
cld
ficoms
bound
mov
or
pushf
and
fidivrl
and
jp
stc
push
cmpsb
push
xlat
push
cmp
push
dec
jp
inc
shll
ret
add
xor
jge
movsl
jecxz
mov
in
mov
push
std
rcll
xchg
sub
lret
pop
aaa
int
push
cwtl
sub
jecxz
mov
inc
xor
ljmp
xor
adc
in
and
jge
jns
ds
cmp
gs
jp
adc
icebp
scas
mov
mov
xlat
cmp
imul
sbbb
ljmp
and
xor
ss
dec
fisttpl
pop
adc
mov
fidivs
adc
add
in
push
inc
push
jg
rclb
adc
ficoml
jg
shr
ljmp
add
adcb
lret
std
popf
lock
xchg
mov
dec
pop
out
mov
dec
jle
test
adc
jae
rorb
andb
std
arpl
iret
repnz
mov
pop
jl
int3
adc
mov
dec
leave
ss
adc
in
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
mov
sbb
xor
sbb
imul
cmpsb
les
jp
cmc
imul
jbe
loopne
dec
lods
out
daa
out
sub
mov
dec
dec
cltd
sbb
adc
pop
mov
js
std
jb
aad
cmp
jmp
fcomip
es
and
test
mov
aaa
jno
fsubs
repnz
test
stos
push
scas
out
push
enter
fmuls
jp
fldl
jnp
push
and
push
jle
loop
sub
shl
inc
in
inc
ja
test
pop
jp
push
ds
movsb
pop
ljmp
aaa
cmc
cli
insl
pop
popa
lds
icebp
loop
pop
mov
outsl
xor
add
mov
mov
push
cs
sub
pop
scas
call
adc
mov
add
iret
and
js
cld
je
add
mov
xchg
xchg
pop
lods
mov
cmp
push
lret
and
imul
mov
inc
rcl
std
sub
xor
add
jecxz
ljmp
sub
repnz
orb
sti
add
xchg
fidivrl
jae
sbbl
dec
fstl
and
lods
sahf
pop
mov
scas
imul
out
mov
arpl
imul
lods
enter
aad
mov
cmp
movsb
movsl
push
sti
ljmp
jns
pop
insb
call
aas
rcrl
clc
adc
adc
add
mov
out
xor
sbb
sub
cmp
cltd
bound
mov
adc
lea
inc
add
mov
in
into
jp
in
arpl
insb
pop
cli
jno
aas
dec
or
dec
adc
add
mov
push
xchg
shl
xor
lret
dec
pop
imul
dec
xor
and
stos
inc
shrl
pop
jle
les
cmp
sub
loopne
es
add
int3
int3
cmpsb
adc
repz
arpl
into
negl
icebp
dec
cwtl
fsubrs
pop
fsubrs
mov
lcall
lret
sub
imul
jp
loopne
ljmp
mov
xchg
mov
cli
dec
sub
les
rcl
add
xchg
cmp
fdivr
faddp
in
insl
inc
add
clc
dec
sub
in
fisttps
mov
or
repnz
outsl
inc
mov
dec
js
dec
add
jns
mov
pop
jg
mov
cmp
pop
cmpsl
sub
scas
mov
or
push
das
xchg
call
gs
lds
cmp
dec
loopne
test
mov
mov
push
int
adc
daa
sub
inc
das
test
mov
add
popa
jp
repnz
mov
push
pushf
push
adc
sbb
lret
jmp
fistpl
bound
xorb
xchg
mov
push
dec
mov
loop
push
jmp
rcr
outsb
ds
sbb
movsl
jmp
or
xchg
test
stos
cmp
push
pop
sbb
inc
pop
cmp
dec
mov
jb
das
inc
test
inc
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
cmp
push
adc
sbb
aad
das
cmp
mov
push
js
loopne
or
lea
push
sbb
sub
sub
jmp
mov
repz
imul
sbbl
sbb
xchg
sub
or
or
and
inc
inc
aas
xchg
xchg
xchg
push
push
std
xchg
lea
add
adc
fcmovnb
adc
mov
es
dec
cmc
rcr
sbb
push
pop
loope
fisttpl
jne
sbb
mov
jg
loop
popa
mov
aam
out
mov
insb
das
test
xor
cmp
adc
push
mov
xchg
inc
mov
clc
adc
sub
mov
jp
dec
f2xm1
dec
test
mov
mov
cld
cmp
xchg
int
mov
xchg
push
cmp
scas
fcoml
cld
rol
outsl
in
cmpsl
mov
jne
test
fidivrs
xor
shrl
dec
sub
insb
push
mov
sbb
xor
xlat
sti
fistpl
cmpsb
cli
and
getsec
pusha
mov
dec
dec
mov
jb
inc
aad
shrl
sbb
in
xchg
fs
cmpsl
stc
jns
lea
and
rcl
outsl
rcrl
fnstsw
and
mov
or
dec
sub
mov
pushf
xor
sbb
sub
icebp
fs
xchg
jp
and
inc
cmp
repnz
or
sarl
jge
pop
repz
rclb
push
jno
xor
cmc
mov
jmp
rorl
xchg
lret
test
fsubrs
nop
out
cli
int
cmp
test
fsts
push
mov
sub
sti
fstpl
sbb
icebp
jge
sub
cld
sbb
cmp
dec
dec
mov
cmc
xor
mulb
pop
or
mov
bound
fs
or
xchg
flds
fistpll
sub
cs
inc
adc
in
pop
cmp
faddl
mov
dec
mov
cmpsb
push
xor
mov
out
flds
fsub
das
push
test
mov
ss
xchg
leave
jge,pn
pop
mov
daa
sub
inc
mov
cmpsl
push
ja
lahf
cmp
das
lods
and
les
push
cmp
and
pop
mov
cli
jmp
push
in
fs
stc
rcl
jae
pushf
fcomi
and
fs
rolb
mov
out
xor
movntq
lret
fsubrp
mov
xor
add
cmp
pop
lahf
in
bound
and
nop
xchg
insl
stos
call
sub
cmp
je
pop
sbb
add
cmp
cwtl
cltd
out
shlb
xlat
cmpsb
jno
push
lock
fcmove
test
sarl
imul
js
pop
dec
ja
dec
icebp
sub
jp
test
out
inc
mov
pop
ds
jge
and
ror
and
testb
cmp
pop
addl
sub
inc
lret
popf
int3
push
je
push
and
or
out
mov
in
iret
inc
mov
movsl
pop
pop
mov
in
jmp
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
loope
jbe
cmc
std
mov
ret
xchg
or
nopl
jmp
push
pop
hlt
cmp
inc
add
lods
and
add
xor
and
add
jge
jl
decb
movsl
popf
es
cltd
sub
lcall
subb
and
jbe
push
push
inc
or
ljmp
clc
inc
lahf
inc
roll
cmp
or
push
adc
push
dec
shrb
mov
fidivs
loop
fistpll
dec
push
stos
inc
push
fcmove
lods
push
xchg
mov
gs
inc
rorl
cmp
stos
inc
cld
adc
xor
push
adc
mov
mov
in
inc
mov
ja
push
dec
repnz
fdivl
inc
dec
decl
mov
push
sbb
and
movsl
push
stos
mov
lock
loop
mov
popf
mov
rcrb
mov
sbb
and
cwtl
insl
jbe
and
mov
lea
stos
shlb
or
arpl
int
fists
push
sbb
mov
icebp
mov
les
jnp
dec
hlt
iret
pop
mov
es
push
jo
scas
movsb
add
sbb
xor
xchg
icebp
xchg
xor
shlb
aad
sub
sbb
xchg
dec
mov
mov
add
mov
mull
jb
ja
mov
movsb
shr
cltd
xor
jg
lahf
pop
pop
lea
sub
dec
stc
sbb
aaa
xor
hlt
cmp
pop
daa
sub
jl
gs
inc
rcrl
push
mov
sbb
dec
je
mov
and
aaa
in
es
ret
mov
aas
leave
divl
addl
pop
leave
mov
cmp
stc
iret
fwait
test
insb
lahf
add
inc
jg
clc
or
out
or
sbb
andb
xor
add
push
dec
jp
adc
rcrl
aam
in
test
jp
sbb
loop
test
ret
xor
push
add
or
push
int3
cwtl
mov
add
jl
mov
xchg
push
xor
mov
push
testb
fstpt
cli
or
add
or
sti
push
call
cmp
jae
sahf
mov
cltd
sbb
cmp
ljmp
sub
push
es
test
lret
add
test
out
lret
arpl
dec
inc
mov
push
xchg
cmp
mov
jne
pop
rolb
sbb
cmp
mov
lret
jle
pop
dec
pushf
cli
test
ljmp
inc
pop
popa
mov
mov
adc
sbb
les
mov
rcrl
shll
rcrl
lcall
outsb
xor
sahf
daa
fstl
adc
js
push
loope
insb
sub
loopw
bound
pop
add
push
outsl
ficomps
push
mov
sub
aaa
mov
int3
aam
pushf
mov
bound
adcl
add
sub
jmp
xchg
popf
jbe
xchg
sub
loope
xor
adc
pushf
cmp
out
or
pop
scas
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
push
mov
push
sbb
xor
sbb
addr16
xchg
fistpl
jl
inc
fwait
shlb
enter
fisttpll
out
mov
jecxz
pop
push
jle
jnp,pt
inc
sub
pop
push
jo
pop
pop
dec
daa
fildll
sub
leave
out
lret
cmp
mov
fmul
xor
adc
scas
mov
pop
pop
sbb
xchg
ret
sub
mov
popf
paddd
and
loop
out
pop
pop
sub
lcall
repnz
pusha
sbb
lods
dec
jg
in
js
adc
adcl
sarb
popf
sbb
clc
push
cs
cli
andl
fwait
insl
cmpsl
push
pop
pop
nop
jnp
pop
sbb
push
xchg
cmc
dec
aaa
xchg
test
jbe
fdivr
add
jl
dec
addr16
stos
pop
jecxz
jecxz
pop
mov
cmp
out
test
sbb
lret
les
mov
pusha
jl
add
mov
shlb
jb
lds
enter
adc
push
add
xor
out
adc
rcl
inc
xchg
lret
push
es
shl
test
mov
xchg
into
add
lahf
stc
push
stos
mov
push
repnz
vmulss
test
fwait
mov
imul
jns
push
jb
cmp
hlt
call
daa
arpl
xchg
repz
add
ds
jmp
imul
movl
xor
ficomps
cmp
push
lret
in
lea
mov
arpl
sbb
cmp
push
pop
dec
dec
test
out
gs
aad
adc
sub
sub
dec
cmp
dec
push
jb
pop
or
xchg
mov
stc
out
cmpsl
cmp
data16
fnstenv
sbb
mov
repnz
or
aam
jge
sub
ja
inc
or
cmp
inc
incl
push
iret
sbb
xor
insl
or
mov
pop
jecxz
lods
pop
notb
scas
fs
or
cmovge
cmpsl
mov
push
fsubrl
sub
sub
iret
pop
subb
lret
dec
int3
xchg
rcrl
inc
cmc
call
les
stc
rol
pop
aas
xchg
xchg
test
shll
xlat
mov
fscale
cli
lea
es
sub
push
xor
mov
mov
rol
fsubrl
pushf
popf
shlb
rol
ljmp
pop
jns
cmpsb
cmp
fucom
ss
pop
fimuls
mov
inc
jne
pop
add
cmovle
leave
rcl
dec
fsubr
mov
int
xchg
sti
negl
inc
mov
add
fimuls
sbb
ljmp
adc
sub
jg
adc
xchg
jmp
faddl
fcmovnb
mov
lods
inc
push
lods
inc
mov
cld
jbe
mov
popf
out
cmp
cmp
jae
or
fiaddl
icebp
inc
in
pop
xchg
out
ret
dec
dec
jl
pop
mov
sarb
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
out
sub
xor
sbb
adc
cmp
gs
xchg
call
fld
out
and
scas
pushf
pop
bound
stos
push
mov
adc
push
dec
adc
loope
pushf
test
int
add
or
adc
mov
mov
outsl
jno
mov
xor
addr16
insl
scas
je
and
daa
pop
cmc
mov
adc
ja
and
mov
jbe
lds
sbb
int3
sub
cli
add
ja
iret
data16
xor
jmp
adc
dec
push
movsb
clc
xchg
jbe
jl
xor
loop
test
mov
xchg
test
jmp
lcall
ficomps
mov
aad
sbbl
mov
roll
out
jne
mov
fdivrs
sahf
push
int3
test
mov
es
sahf
lock
jbe
inc
mov
pop
xchg
xchg
mov
out
fnstcw
ljmp
inc
das
mov
enter
cli
fldl
mov
push
cld
repnz
loopne
adcl
test
or
jecxz
mov
push
rolb
insl
aad
mov
sahf
jg
mov
xchg
and
add
xor
in
lods
outsb
ret
sbb
jmp
dec
shl
jecxz
push
mov
fidivrl
loopne
in
lds
in
fmull
mov
sbb
adc
push
add
or
and
mov
lahf
mov
push
jl
sahf
push
and
lret
ljmp
dec
in
or
leave
mov
push
popa
push
push
clc
mov
repnz
cmpsl
xlat
shl
mov
adc
inc
imul
dec
adc
push
loope
xchg
mov
xor
jecxz
mov
aaa
mov
enter
xor
push
jecxz
sub
xchg
pop
outsb
mov
jo
inc
and
adc
push
aad
pop
push
sti
xor
sub
test
mov
cwtl
mov
ret
push
pop
lret
push
mov
mov
fldenv
popa
daa
cmc
push
jecxz
adc
jle
orl
cld
les
adc
stos
cmp
and
xor
jecxz
popa
cmp
out
jl
adc
add
repz
fnstsw
leave
int
xchg
cmp
xchg
ret
sub
orb
push
nop
aaa
jmp
ss
mov
push
mov
movsb
mov
cmpsl
lahf
push
xor
add
pusha
mov
xlat
and
mov
sub
dec
sbb
xor
jecxz
adc
xor
sbb
or
add
dec
jns
rcrb
jb
push
and
mov
mov
push
mov
cmp
into
or
sbbb
sti
xlat
mov
xchg
sbb
pop
adc
cltd
rolb
sbb
les
xor
ret
fsts
sbb
popf
loopne
add
gs
inc
jb
sbb
das
push
xchg
in
adc
mov
je
add
push
cld
mov
jb
repnz
fbld
fildll
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
cmp
enter
xor
sbb
js
pop
das
rorl
nop
shr
inc
icebp
imul
xchg
ja
push
jg
rclb
int
mov
pop
push
and
mov
mov
inc
lahf
pop
sbb
sbb
mov
adc
fistps
data16
pop
add
fst
lods
sub
nop
and
mov
call
or
dec
lret
in
push
inc
bound
stos
outsl
dec
sub
jae
imull
rep
cmp
shl
js
pop
sub
stos
jnp
div
xchg
pop
cmp
push
pop
adc
mov
lock
and
sub
aaa
mov
cmp
xor
jmp
cmpsl
jns
mov
or
daa
lret
aas
inc
cltd
bound
fdivrs
xlat
pop
or
ljmp
into
cmc
jb
xchg
flds
movsb
lock
movsb
sarb
push
aad
mov
std
jnp
cwtl
cmp
push
cmp
dec
push
popa
outsb
loope
mov
sbb
insb
call
sbb
fsts
dec
rorl
in
dec
out
stos
ret
dec
mov
mov
xchg
sbb
xchg
mov
jl
mov
sbb
pushf
dec
dec
sbb
cmp
mov
lahf
fwait
inc
pop
pop
sarl
mull
and
jecxz
mov
or
cmp
aas
les
ret
in
or
mov
bnd
shl
dec
sub
push
shrl
cmpsb
adc
push
add
popf
lret
mov
push
or
imul
sub
in
leave
popa
sbb
jp
pop
xor
lock
cli
fisttps
fisubrl
inc
imulb
push
ja
and
test
jns
lahf
jb
sbb
or
popw
push
dec
xchg
daa
mov
sbb
js
lcall
pop
arpl
lret
imul
insl
dec
into
leave
mov
jmp
sbb
xor
data16
loope
iret
cmp
leave
sbbl
jle
xchg
test
adc
lret
daa
or
sub
and
shl
repz
loope
cmp
shrl
imul
std
dec
pop
mov
sub
add
sti
aad
clc
cmp
sub
out
cs
lret
adc
xor
stc
rorl
add
and
pop
icebp
shrb
dec
dec
or
test
das
or
cmc
pop
fdivrl
push
sub
shl
loope
mov
aas
shll
xchg
push
or
dec
mov
inc
cwtl
loop
ja
adc
test
imul
xchg
push
inc
call
add
popf
xchg
stos
xchg
xlat
cli
adc
jno
clc
ss
xchg
pop
fsubl
imul
cld
das
sbb
iret
enter
mov
push
mov
divb
cs
mov
ljmp
jno
pushf
cwtl
cld
das
jecxz
xlat
mov
movsb
and
jb
sarb
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
adc
mov
xor
sbb
push
stos
xchg
or
lea
stos
adc
sbb
outsl
inc
sbb
jle
cmc
push
bound
out
or
xchg
jae
inc
add
mov
jl
stos
arpl
mov
mov
leave
jo
and
xor
sbb
popa
test
jne
shrl
sub
xor
daa
inc
stos
movsb
mov
push
arpl
bound
sub
sub
cmp
adc
je
mov
mov
sbb
outsl
movsb
lods
iret
dec
int
or
pop
sarb
adc
div
scas
sbb
enter
or
and
scas
into
out
push
bound
xchg
fldenv
cmpsl
push
popf
sbb
outsl
fwait
inc
jmp
jno
sbb
cmpsl
xor
repnz
test
data16
mov
or
and
inc
int
xor
jle
ja
fstps
loope
fsubl
lock
frstor
xchg
pop
xchg
jg
add
xor
pop
fwait
test
icebp
loop
inc
cld
stos
scas
rorl
mov
mov
adc
mov
rcll
lds
es
loop
dec
lcall
sub
imul
out
adcb
inc
adc
or
enter
xchg
jno
cmp
push
in
add
sub
lds
je
xor
rcll
inc
cmc
pop
jecxz
icebp
or
push
mov
sub
cmpl
std
xor
sub
clc
adc
cmp
ss
dec
sbb
xor
dec
test
nop
in
lahf
stos
das
pop
movsb
stos
out
push
adc
push
lcall
leave
leave
sbb
loop
or
mov
scas
addb
cltd
push
fisubrl
adc
lcall
mov
sbb
das
push
repz
mov
call
inc
push
adc
xchg
fadds
data16
mov
xchg
mov
mov
sbb
fdiv
cmpb
or
mov
jp
gs
imul
mov
jno
sbb
jl
pop
add
popa
cltd
sub
cmp
mov
push
xchg
shrb
push
xor
shlb
std
ror
dec
jecxz
cmp
orl
movsb
sbb
cmp
sub
andb
dec
rclb
xchg
inc
pop
adc
mov
sbb
out
fdiv
push
lods
or
fadds
jbe
xlat
mov
push
addr16
movsl
cmc
imul
and
or
ljmp
inc
push
mov
add
fdivl
in
pusha
out
mov
scas
outsl
pop
push
adc
fldenv
push
enter
aad
inc
mov
add
mov
push
add
sti
negl
stos
jo
push
sbb
xor
pop
divb
xor
movsb
les
xlat
ss
repnz
mov
mov
test
out
fcmovb
or
aam
mov
mov
add
lock
sbb
lock
into
icebp
cmp
sub
jo
jge
insb
inc
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
sahf
add
stc
stos
sbb
test
mov
test
daa
pop
test
inc
movsl
out
or
mov
add
je
xchg
add
es
adc
fwait
mov
scas
xchg
inc
xchg
push
insl
or
out
push
cli
lcall
push
fwait
mov
cmpsb
sub
fs
mov
pop
sbb
mull
add
mov
iret
xor
call
push
cmpsb
sbb
add
sbb
mov
lods
pushf
xor
rorl
cmp
pop
repz
aad
out
and
sar
scas
aaa
fistps
mov
je
mov
repz
femms
mov
mov
test
jmp
in
cmp
xchg
adc
bound
pop
push
cmc
mov
imul
std
dec
out
adc
mov
mov
imul
inc
sbb
negl
jg
jnp
mov
cltd
minps
popf
sarb
shrl
push
and
mov
lods
clc
pop
and
mov
nop
dec
pusha
and
mov
mov
inc
sub
aaa
mov
xor
mov
shrb
test
xchg
je
insl
mov
aas
sahf
push
sbb
sbb
xchg
push
jae
stos
imul
sub
jge
imul
out
mov
add
jmp
imul
jg
jg
test
pop
jle
arpl
out
or
cmpsl
scas
lea
push
testl
mov
and
jne
adc
fwait
xchg
int3
sti
dec
and
aad
pop
mov
gs
jno
jne
nop
dec
imul
and
es
in
pop
loope
shll
jge
sti
negb
xor
inc
or
stc
fdiv
sbb
lret
or
sub
xchg
test
push
jns
out
into
je
negb
push
push
mov
pusha
xchg
push
pop
pop
imul
stc
jo
rorl
in
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
mov
stc
cltd
mov
les
in
add
out
xor
xorl
xor
pop
pop
data16
int3
mov
clc
jo
push
sub
push
ret
xchg
sub
mov
test
ficomps
sbb
xchg
fisubl
aas
testl
and
jp
xor
and
sub
inc
cmpsl
mov
xor
addr16
mov
cmpb
ret
pop
jle
mov
mov
mov
push
outsb
add
jo
out
mov
inc
mov
or
fsubp
or
sub
dec
mov
inc
mov
jp
pop
pop
push
mov
push
stos
les
lods
stc
sti
leave
xor
mov
adcb
lcall
call
jmp
lcall
xchg
mov
push
or
aaa
xor
mov
pop
mov
filds
pusha
xchg
lock
or
in
mov
or
iret
xchg
dec
je
scas
sbb
js
cmp
enter
leave
cmp
dec
loop
nop
jne
and
jnp
scas
cli
stos
jmp
call
pop
or
inc
sbb
pop
jns
popa
cmp
push
jge
das
cmp
or
mov
dec
lods
xor
cmp
ds
jne
lcall
test
jmp
inc
insb
daa
repnz
or
imull
loopne
add
repz
add
pop
out
fwait
setle
xchg
and
fldt
jmp
psrad
into
mov
popf
pop
jp
xor
iret
jl
insb
push
call
cmp
lret
testb
xor
sub
addr16
into
lods
adc
addr16
cs
xor
jp
add
mov
jns
aam
add
stc
jo
insl
es
sahf
dec
loopne
dec
push
notb
mov
pop
or
sahf
and
fists
js
add
ja
jp
pop
xor
push
add
popa
mov
add
sub
lds
std
ja
in
dec
pop
fisttpll
in
mov
mov
push
jmp
sub
and
jb
push
stos
shll
sbb
test
jge
loope
sbb
iret
ret
std
push
nop
mov
jne
mov
lods
push
les
fwait
ds
int
int
cmpxchg
or
adc
sbb
in
clc
jno
xlat
iret
shl
add
ret
lods
fldcw
scas
push
test
mov
pop
ret
mov
movsb
xchg
push
inc
and
xor
je
mov
dec
sub
jae
test
sub
push
insl
mov
faddl
ret
les
and
pop
inc
xor
push
mov
xchg
pushf
insb
movsl
adcb
ret
sub
or
sbb
jnp
filds
cmc
add
xlat
or
xchg
orl
je
repnz
ja
fcmovb
repnz
cmpsb
mov
dec
mov
aaa
sub
mov
lret
dec
jl
push
jne
mov
pop
stos
add
xor
inc
mov
js
std
lock
ret
adc
cmp
sub
daa
cmp
sbb
adc
jae
cmp
xorb
popf
sub
sbb
xor
repnz
rorl
dec
aaa
fsubrl
xchg
repnz
mov
and
scas
adc
fdivr
and
into
pop
bound
test
stos
pop
subb
add
js
lea
mov
pop
insb
aas
add
mov
sub
push
outsb
or
fidivrs
in
pushf
push
gs
stos
cmp
std
or
insl
xor
das
xchg
loope
jecxz
lea
sahf
in
ja
xchg
les
popa
xchg
in
pop
rcl
icebp
pop
add
bound
and
cmpl
scas
pushf
xor
add
sbb
jbe
xchg
or
jae
xlat
push
add
xchg
sbb
das
jnp
test
filds
adc
dec
mov
push
xor
test
in
cmovle
cmp
mov
xor
lret
cmp
mov
not
push
inc
adc
jbe
push
xor
into
dec
xor
outsb
das
inc
std
pop
in
pop
cli
test
shll
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
and
sbb
inc
jp
and
jmp
or
in
jmp
sbb
cwtl
mov
xchg
enter
fimull
sbb
cmp
mov
xor
shl
jne
mov
xchg
mov
cmp
mov
sub
xchg
mov
cmp
jnp
jb
push
mov
mov
insb
mov
outsb
out
push
adc
dec
adc
jo
and
or
xchg
push
ljmp
je
test
adc
cmc
sbb
mov
iret
push
xor
jnp
sti
mov
imul
insb
in
push
jp
jnp
aad
jp
mov
rolb
stos
jmp
movsb
jno
jb
imul
mov
dec
sub
fdivl
xchg
mov
cld
dec
inc
pop
jns
push
test
sub
into
movsl
inc
inc
push
int
ds
or
fnstenv
cltd
outsb
lret
or
sub
inc
lcall
dec
sbb
dec
and
lods
fsubs
inc
adc
mov
imul
xchg
shll
dec
repnz
fmul
sub
inc
jle
fs
pop
mov
jge
xchg
lock
out
fbstp
dec
repz
jae
xchg
dec
push
pop
stos
lahf
xchg
cmp
popf
dec
call
insl
jno
test
in
sub
sub
or
xor
lods
loopne
jne,pn
mov
pcmpeqd
pop
sub
pushf
mov
scas
xchg
adc
mov
push
sbb
xor
and
out
mov
jle
pop
adc
outsl
sahf
cltd
out
mov
push
push
jecxz
and
scas
xchg
bound
shrb
in
test
adc
and
faddp
in
sbb
pop
cld
inc
xor
sbb
inc
out
jge
and
jbe
std
jl
call
aam
pop
adc
sub
cmpsb
adc
in
fwait
pop
xor
in
sub
scas
lret
insl
dec
fstl
dec
adc
in
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
push
jle
cwtl
sbb
test
or
mull
shlb
aam
das
sarb
inc
and
sub
inc
in
out
jecxz
jo
dec
in
add
xchg
dec
sub
das
push
xchg
pop
xchg
pop
test
adc
xor
cmp
xchg
sbb
inc
adc
push
inc
subl
xor
push
fsubs
outsl
pop
mov
xor
mov
shl
clc
push
rolb
test
gs
insl
hlt
cmp
push
fidivl
inc
jle
adc
or
stos
les
push
push
out
adc
call
jns
inc
movsb
pop
into
popa
cld
aaa
jns
cmp
or
fwait
inc
fnsave
shld
and
loop
push
fists
push
cmp
orl
mov
mov
jnp
mov
mov
cltd
stos
mov
pop
inc
gs
loop
fdivrl
outsb
dec
std
xchg
stos
xchg
jle
fs
out
addr16
rcrb
enter
sub
test
lock
mov
inc
sbb
test
or
lods
mov
pop
adc
mov
push
add
sbb
jbe
ja
and
cmp
sub
fsubl
out
aas
mov
jle
out
rcrb
dec
push
inc
cmpsl
jnp
cltd
popa
popf
dec
dec
cli
sbb
out
dec
mov
adc
inc
outsb
icebp
inc
sarb
fisttps
xchg
outsb
cmp
outsb
push
sub
call
fisttpl
adc
mov
cmpsl
sbb
arpl
psllq
push
mov
sti
push
adc
sbb
or
inc
movsl
daa
cmp
orb
test
incb
mov
jecxz
outsl
and
push
imul
mov
push
pop
xchg
mov
jbe
cmp
in
cmp
push
xlat
ds
rol
es
out
xor
and
inc
setb
imul
jl
test
sbb
lahf
sub
nop
mov
hlt
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
int
xor
xchg
dec
and
std
je
ss
sbb
inc
andb
sub
dec
pop
mov
addl
mov
jae
cmpsl
add
je
dec
popa
sbb
pushf
pop
pop
test
dec
cmpsl
lret
add
cmp
ja
lods
or
sbb
jno
fsubrs
or
lahf
movsl
fnstsw
sbb
outsb
pop
lods
jle
mov
cs
bound
adc
sahf
sub
sub
xor
and
js
adc
fs
jo
nop
ss
add
mov
jae
add
loop
mov
pop
dec
sbb
jno,pt
popf
cmp
loopne
mov
int3
push
roll
adc
sbb
mov
mov
jae
sub
fisubrl
push
call
sbb
imul
int3
inc
xchg
jns
ss
adc
addl
or
xchg
in
mov
mov
sub
mull
mov
nop
aad
popf
adc
mov
imul
sbb
arpl
sbb
adc
xchg
xor
mov
sti
add
gs
adc
mov
outsl
inc
pop
xlat
in
jmp
mov
jne
fdivl
sbb
sub
cld
and
repz
aam
xchg
cmp
je
jp
mov
fwait
pop
jl
jns
mov
push
notl
stos
test
sbb
mov
clc
aaa
mov
cmpsb
loop
push
cs
scas
std
push
pop
loopne
adc
repz
xchg
dec
push
dec
cmpsl
pop
mov
or
jb
xchg
mov
imul
decb
dec
pop
pop
adcb
jp
cmp
hlt
push
adc
xchg
or
mulb
or
dec
sarb
gs
add
stc
push
stc
dec
jbe
jl
xor
das
arpl
dec
in
xor
or
jmp
push
and
mov
jle
nop
sbb
test
icebp
sub
fucomip
xlat
test
loope
not
sub
adcl
cmp
adcl
pop
cs
sub
aaa
ds
inc
mov
fcomi
bound
outsl
sbb
das
je
ret
cmp
out
or
js
sbb
jae
ss
imul
test
lods
xlat
xlat
std
out
dec
adc
cmp
shlb
mov
test
inc
lret
push
ljmp
and
jnp
repz
inc
mov
jecxz
faddl
lods
gs
mov
pop
mov
jns
int3
popa
stos
sbb
mov
xor
aam
shlb
shrl
inc
cli
push
cmp
mov
inc
lret
xor
and
es
cmp
in
scas
lahf
push
and
push
jno
test
int3
sub
int
out
shrl
cmc
gs
sbb
pop
and
pop
xchg
arpl
lds
shlb
jb
je
popf
int3
test
adc
mov
test
lea
pop
push
pushf
cmp
or
adc
mov
test
jp
xchg
mov
xor
mov
or
adcl
or
enter
jge
xchg
lds
leave
xor
xchg
add
inc
jns
lahf
push
mov
mov
jle
test
sti
or
push
cmp
add
loope
fisttpll
cltd
loopne
sbb
rclb
lea
sbb
mov
inc
xchg
dec
in
xchg
xchg
inc
gs
ds
add
jecxz
shr
icebp
or
jno
mov
ret
lcall
dec
or
mov
xchg
aas
test
push
stc
jbe
mov
pop
jmp
lods
scas
xchg
fwait
push
cs
adc
test
fcomi
outsb
xlat
pop
and
sbb
js
push
lock
pop
inc
mov
psllw
add
scas
popa
test
mov
xor
jge
jb
add
rolb
dec
sbb
jge
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
fwait
jo
mov
sbb
outsb
and
ret
ds
ljmp
jne
xor
push
mov
pop
aad
jmp
cmp
or
xchg
aas
push
orl
aas
mov
aaa
lea
and
lea
sub
cli
add
xlat
popf
arpl
or
enter
pushf
jne
xchg
jecxz
sbb
push
mov
ret
loope
clc
or
pop
data16
jno
stos
les
repnz
shlb
mov
gs
nop
mov
imul
pop
lcall
mov
sub
add
add
ret
push
add
mov
popa
jno
loope
dec
adc
mov
mov
jae
mov
js
or
mov
insb
sbb
and
lods
nop
ja
jle
clc
push
cmp
mov
add
push
jp
and
pop
clc
add
push
pop
rcl
sub
scas
je
ret
cmpsl
shll
stos
out
les
shlb
adc
lret
sub
in
loop
mov
push
mov
pop
push
divb
push
bnd
jp
rcr
push
mov
lret
test
cli
fwait
loopne
ljmp
xchg
push
xchg
mov
adc
mov
xchg
xchg
pop
or
rcrl
popa
xor
ret
jp
and
adc
ja
cmp
cmpb
repz
in
cld
out
jp
out
aaa
mov
xchg
test
sbb
mov
sbb
mov
sar
lcall
pop
loop
mov
xor
xor
lea
inc
lods
std
and
xlat
fcomps
push
lea
out
sub
sub
out
push
adc
cmp
das
clc
fstpl
push
cwtl
std
cli
faddp
inc
fcmovnbe
jmp
dec
aad
cmp
mov
xchg
out
das
enter
mov
push
lods
cmp
xchg
pop
fstp
jge
and
xchg
dec
lds
pop
and
xlat
jl,pt
inc
or
dec
or
shrl
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jl
xchg
sbb
sbb
mov
mov
inc
ret
xchg
sub
sub
inc
jle
aas
xchg
stos
xchg
jbe
xchg
inc
mov
push
inc
xor
cmp
out
imul
ds
popa
and
addr16
xchg
add
out
scas
push
enter
fstl
sub
push
iret
pop
ret
pusha
mov
mov
popf
mov
std
repnz
jle
es
out
and
inc
xor
into
out
jae
js
daa
mov
xchg
ljmp
and
sub
je
dec
mov
pop
push
or
push
mov
dec
sbb
cli
cmp
insl
push
jmp
ljmp
xor
cmp
xchg
cmp
repz
rcrb
test
and
inc
xchg
pop
jp
in
push
mov
outsb
push
jo
nop
lret
int3
leave
cmp
push
inc
int
mov
add
pop
lods
dec
fsts
cli
lods
cld
fmuls
xchg
adc
push
hlt
push
xchg
subl
jbe
sbb
push
lahf
rcl
jge
cmp
bound
inc
jle
inc
jp
in
mov
jle
int3
cmpl
push
outsb
in
aaa
testl
cmp
fwait
jb
pop
lods
mov
dec
fidivrl
aaa
daa
xchg
in
sub
loope
cmc
inc
mov
sahf
mov
sub
int
jge
and
in
xor
adc
jo
das
xor
fld
andl
and
add
or
orb
mov
jmp
push
mov
sub
ret
data16
mov
scas
fcmovbe
ret
push
mov
repz
push
pop
inc
or
sbb
jmp
push
or
ja
jns
jnp
xchg
push
dec
jnp
lcall
jno
int3
adc
xchg
ljmp
out
lahf
and
aas
mov
das
stos
pop
jne
jle
mov
imul
hlt
std
sbb
push
ljmp
mov
imul
rclb
sti
or
lret
jge
or
mov
lret
je
inc
push
sub
dec
add
pop
adc
and
xor
adc
inc
sub
enter
mov
out
daa
inc
jecxz
test
stos
xor
push
stos
mov
mov
in
cmpl
push
lret
ffree
in
xchg
mov
jge
outsb
or
enter
or
lret
movsl
iret
in
pop
dec
test
stos
ret
adc
loop
std
sbb
punpckhdq
mov
xchg
shlb
and
push
fistl
dec
or
test
mov
add
lock
stos
xor
outsb
out
outsl
imul
jae
roll
scas
and
into
movsl
mov
dec
mov
mov
es
imul
imul
mov
dec
xor
xchg
sub
rcll
sub
jno
test
mov
insb
add
add
jne
inc
sbb
pop
clc
push
loope
fadds
sbb
push
lods
xor
push
fisubrs
ret
push
fsubrl
ret
sahf
mov
popf
fcoms
jg
scas
ficomps
sub
jo
and
in
icebp
shll
rcll
cltd
jo
lcall
lret
cmp
xchg
sbb
sub
out
fs
stc
cli
mov
stos
xorb
cwtl
in
dec
jmp
int3
test
imul
repnz
push
cld
mov
ret
xor
std
aam
daa
daa
mov
hlt
cvtps2pd
lret
or
or
xor
or
hlt
jno
or
sbb
push
pop
aaa
mov
mov
aaa
cwtl
dec
sub
mov
mul
ficompl
pusha
dec
lcall
imul
orb
pop
mov
jae
shrl
in
enter
mov
mov
xchg
lods
cli
imul
sub
mov
out
mov
sbb
cli
loope
mov
xchg
or
adc
lcall
pop
int
in
inc
mov
imul
ret
test
pop
sbb
cmp
in
xchg
mov
imul
cmc
js
sub
jne
fidivrs
shlb
mov
or
cmp
cmp
cmp
loopne
lret
sbb
scas
jge
mov
cmp
mov
or
cmp
xchg
shl
cmpb
lods
ljmp
pop
pushf
dec
sub
popf
mov
in
test
std
add
mov
add
out
add
mov
xchg
push
shrb
cmp
or
movsl
scas
out
sub
sbb
insl
cmp
mov
mov
or
mov
call
and
xchg
std
mov
cmp
rcrl
mov
xor
leave
loop
sbb
adc
nop
and
push
into
pop
jg
cmp
pop
jmp
push
out
mov
mov
jmp
mov
cs
xchg
into
jle
pop
int
pop
repz
ljmp
loop
adc
push
dec
lock
iret
mov
jg
das
jmp
imul
outsl
push
rclb
mov
ret
ret
and
add
cld
jns
mov
sub
iret
xchg
stos
xlat
testl
in
sub
push
cmp
lret
or
inc
sub
imul
push
lahf
bound
or
notb
adc
fs
loope
inc
and
dec
cmp
lods
ret
jecxz
and
dec
imul
and
js
sub
pop
popa
mov
or
mov
mov
imul
daa
sbb
into
dec
les
xchg
add
jecxz
lcall
jp
jmp
test
push
adc
repnz
mov
or
jnp
push
sub
or
xchg
push
or
in
mov
xchg
lret
and
movl
push
sbb
test
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
cmpsb
sbb
jnp,pn
jb
in
adc
or
ret
push
pop
dec
mov
in
jo
inc
adc
add
mulb
scas
push
or
and
fs
sbb
mov
push
add
clc
push
out
cmc
mov
stos
push
cmp
xchg
sti
subl
or
push
int
mov
out
cld
in
pop
in
movsl
mov
inc
pop
sbb
sbb
into
test
icebp
ds
jno
icebp
stos
dec
xlat
jo,pt
lods
sbb
xchg
mov
mov
out
dec
sub
inc
and
aaa
movsl
sub
pop
push
test
xor
mov
lahf
out
mov
jnp
pop
adc
push
int
sub
aam
or
incb
scas
cmp
popa
test
push
fnop
mov
mov
lock
add
jp
pop
aas
cmp
mov
push
push
push
inc
jg
and
mov
cwtl
and
adc
jno
push
outsl
cltd
push
daa
ljmp
nop
into
mov
testb
sbb
repnz
jo
dec
dec
fisubl
xchg
mov
cmp
cmp
push
mov
dec
icebp
out
pop
or
cmp
sub
mov
push
cs
cli
xor
cmp
imul
out
push
mov
sbbl
mov
inc
pop
fisttpll
push
adc
clc
adc
jecxz
in
and
cmp
inc
out
sbb
imul
sbb
xor
xor
xchg
fisubs
pop
ljmp
cmc
jno
inc
popf
sub
int
jmp
lock
adcl
add
sub
adc
jmp
cmpsl
inc
cs
xor
jp
dec
dec
fisubrs
add
jg
ret
mov
dec
hlt
imul
lods
xchg
sub
bound
mov
push
dec
fcmovu
jnp
insb
lret
mov
imulb
and
pushf
adc
pop
aam
dec
adc
sbb
test
fcmovne
jns
test
sbb
out
cmpb
repnz
cmc
lea
mov
mov
jg
mov
shl
fcompl
jecxz
test
mov
pop
fcmove
pop
fucomi
out
loopne
dec
fldenv
scas
insb
sbb
mov
inc
add
loope
mov
scas
jae
mov
mov
sbb
push
push
pop
test
in
clc
movsb
insl
push
out
pop
fildll
xchg
jb
lods
js
sbb
loopne
data16
test
ret
sub
rcll
or
rcrb
lds
and
mov
nop
orb
pop
and
lods
stos
pop
add
je,pt
inc
int3
insl
in
mov
fwait
and
sub
and
inc
cmp
lret
shl
mov
std
andb
cmpsb
es
pop
mov
pop
jmp
cld
and
jl
sahf
cmp
inc
or
negl
sbb
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
xchg
push
jp
notl
out
push
sbb
mov
dec
repnz
or
pop
lock
fdivrl
mov
aaa
xchg
jne
popf
mov
arpl
sub
cmp
fwait
icebp
adc
lods
xor
out
add
or
mov
sti
repz
clc
in
dec
add
sub
mov
push
xchg
mov
xchg
fmuls
daa
or
in
std
lret
scas
scas
lds
mov
cwtl
inc
enter
push
sbb
mov
push
fstps
mov
xchg
pop
ficompl
daa
fcompl
jge
je
cmp
pop
rcrb
add
add
fdivp
jbe
jge
push
xlat
in
mov
mov
inc
scas
add
push
ja
sbb
je
into
stos
inc
cwtl
gs
ja
dec
xor
adc
movsl
mov
sbb
sahf
pop
mov
pop
push
adc
push
jno
push
fsubrp
push
ret
outsb
inc
pop
aam
adc
jbe
sti
fs
std
and
and
cmp
clc
jns
sbb
xor
in
mov
cmp
mov
aas
xchg
mov
jno
sbb
mov
pop
jp
adc
clc
je
dec
mov
sbb
or
fs
sbbb
lret
sbb
test
lods
xor
scas
sub
adc
rcll
es
xor
cmpsb
fstpl
in
xor
sub
push
popa
xlat
in
outsb
scas
cmp
movlps
xor
cmp
sbb
rclb
pop
cmp
arpl
aaa
xor
and
adc
push
adc
das
or
mov
into
xor
sbb
jle
cmp
in
push
xor
pop
add
shll
fmulp
aaa
cs
test
enter
aas
push
je
test
shl
movsb
cli
cltd
into
and
push
enter
push
jecxz
mov
call
aam
pop
out
jns
repz
cmpsl
jne
xchg
bound
jno
shr
adc
call
xlat
insl
cmc
dec
xor
sub
adc
repnz
mov
lahf
clc
adc
cli
mov
loope
mov
cwtl
xor
xchg
xchg
xor
in
xchg
in
dec
push
mov
dec
push
sbb
mov
add
stos
lock
and
stos
jno
push
add
dec
lahf
fsub
aad
push
jno
hlt
push
push
in
rorl
hlt
lods
push
sarl
cmp
and
dec
fisubrs
out
enter
jg
inc
cli
in
mov
in
add
or
mov
xchg
test
and
das
shrb
jecxz
or
cmp
frstor
add
cmp
cs
loopne
out
js
das
xchg
mov
aad
scas
mov
or
scas
adc
test
or
mov
out
movsb
xchg
xor
or
mov
orb
mov
int
insb
rclb
jnp
xchg
dec
movsb
cmp
pop
ss
xchg
or
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
cmp
stc
insb
sbb
jns
sbb
psrlq
imul
push
test
gs
mov
fstps
add
mov
hlt
pop
xchg
jmp
cmpsb
shr
push
out
mov
das
pop
clc
sub
mov
add
jns
rol
adc
imul
push
bound
jg
inc
loope
adc
lahf
insb
enter
pop
mov
mov
sbb
mov
roll
dec
gs
mov
fstpl
es
mov
call
adc
int
adc
lods
pop
sub
enter
mov
je
cmp
push
push
clc
push
sbb
test
call
inc
sub
aad
fcomps
inc
mov
lock
jb
ss
mov
or
dec
les
dec
popf
xchg
mov
xchg
mov
push
leave
push
dec
or
fmull
outsl
cmp
jg
cmp
mov
xor
ds
movsl
jmp
arpl
and
dec
and
out
pop
pop
dec
push
fisubrs
sbb
jne
push
dec
aam
lods
jge
or
faddl
test
xor
and
adc
rclb
and
xchg
fmul
push
mov
test
cld
pop
and
addb
lahf
nop
data16
test
std
pushf
repnz
xchg
mov
in
pop
bound
lret
mov
and
mov
loop
fisttps
das
in
mov
mov
data16
xchg
fcomi
les
aad
stc
add
out
scas
dec
fldcw
adc
in
stos
decb
pop
insl
sti
or
jb
rcrb
xchg
dec
xorb
fnstcw
scas
or
pop
mov
test
outsl
sti
popa
hlt
test
pop
test
pop
sbb
inc
lock
rcrl
fmuls
scas
call
dec
or
cmc
dec
mov
add
or
out
mov
lret
dec
cltd
mov
dec
mov
loop
xchg
push
test
mov
cmp
mov
jne
test
mov
testb
push
cmp
push
dec
xchg
ss
xchg
xor
mov
push
jl
ret
aaa
mov
flds
arpl
addr16
mov
stc
sub
or
pop
adc
jmp
dec
sbb
xchg
dec
push
lret
mov
fadd
or
sub
nop
sahf
sti
xchg
arpl
dec
sub
mov
pusha
sub
jns
andl
imul
mov
sbb
insb
imul
mov
adc
mov
add
push
shr
enter
aaa
mov
cmp
mov
inc
adc
push
lds
cmp
fimull
in
and
movhps
fstp
xor
enter
mov
mov
fnsave
popa
out
pop
add
and
das
fisubl
mov
push
leave
mov
jg
lods
les
out
addl
cmp
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
lea
mov
data16
jns
sbb
mov
cmpsl
das
pop
add
pusha
lods
jmp
lds
add
or
xor
ret
mov
cli
in
push
push
lods
xchg
shll
mov
mov
mov
add
mov
popa
cmpsb
int3
int3
dec
jne
adcb
fwait
out
and
popf
mov
inc
jnp
sbb
sbb
or
int
mov
and
inc
icebp
sub
adc
mov
clc
push
mov
or
pop
cmp
ds
inc
inc
push
xchg
stc
std
into
push
mov
sahf
push
fisttpll
sti
dec
push
fwait
xchg
daa
pusha
outsl
jae
dec
xchg
jle
ffree
push
push
mov
xor
push
bound
or
outsl
mov
ficompl
pop
inc
cmp
mov
fiadds
lahf
and
mov
int3
imul
xchg
add
push
stc
mov
mov
mov
adc
aaa
xchg
std
jae
jae
loope
sub
jmp
xor
sti
jb,pn
outsl
xchg
xchg
inc
or
jae
sbb
adc
aaa
cmpsb
fnstcw
out
and
mov
sbb
dec
mov
out
data16
adc
xorl
xchg
mov
sbb
inc
popa
popa
lahf
adc
jge
jno
sub
test
xor
imul
sbb
rolb
inc
out
dec
or
cmpl
adc
dec
dec
xchg
push
cmp
shr
sbb
jae
jns
out
fildll
outsl
dec
mov
aaa
lods
sbb
movsb
sahf
jmp
push
imulb
mov
imul
mov
sub
cmpl
push
arpl
jge
xor
movsb
popa
pop
lods
leave
push
sub
xchg
jecxz
comiss
jb
lds
in
mov
stos
cs
dec
loope
ret
clc
es
rol
add
jae
fs
add
cmp
pop
out
in
xor
mov
jns
and
pop
dec
xor
sahf
cs
icebp
mov
loope
jg
fistpl
in
les
loopne
or
rorl
mov
xlat
loope
rorl
jg
lahf
mov
sti
inc
bound
outsb
sahf
sbb
test
out
fcmovbe
xlat
cwtl
dec
dec
ret
adc
jo
sub
int3
mov
cmp
out
push
cs
lods
inc
addb
iret
ds
unpcklps
incb
lods
mov
mov
scas
push
xlat
mov
mov
lods
inc
icebp
pusha
lahf
jecxz
sub
mov
jno
or
lock
cmp
push
fstp
xchg
insb
cmp
ret
sbb
inc
mov
jle
clc
sti
pusha
jb
lahf
push
test
sarb
cltd
xchg
sbb
lds
stc
add
jmp
adc
mov
mov
mov
leave
mov
mov
out
xchg
enter
loope
sub
and
les
pop
sub
lea
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
mov
pop
sbb
jns
sbb
cltd
pushf
stos
clc
pop
lahf
rcr
or
mov
sub
les
imull
jnp
mull
scas
subb
sbb
insl
mov
push
sbb
cltd
xlat
jb
push
xor
or
in
add
mov
test
and
dec
jle
into
ret
sar
popa
aam
icebp
mov
lods
pop
cmp
addr16
cmp
stos
inc
pop
icebp
cmp
inc
bound
xchg
jno
inc
mov
out
dec
test
inc
jb
lea
sub
das
and
fs
sub
push
jae
mov
lret
dec
fisubs
or
imul
xchg
mov
or
xchg
jg
jns
ficoms
xchg
jne
cmp
jb
icebp
lods
clc
rcr
lds
pop
jo
loop
js
push
xor
shlb
push
pushf
lahf
jmp
jbe
aad
mov
lods
stos
xor
les
test
outsl
aam
stc
notl
pop
cmc
jg
jb
inc
mov
pusha
stos
mov
push
mov
pop
adc
xchg
dec
jl
inc
mov
lahf
shl
sbbb
lret
xlat
xchg
sahf
fstpt
mov
xchg
lret
mov
mov
mov
mov
cmp
mov
dec
hlt
into
add
push
cmpl
addr16
ficoml
into
jnp
mov
push
addb
int
pop
and
in
adc
rolb
sub
mov
popa
inc
dec
add
mov
add
and
or
mov
pop
mov
enter
pusha
mov
andl
pop
jmp
jle
mov
or
lods
mov
stc
daa
popa
out
outsb
repnz
ds
sub
inc
ss
dec
push
lea
or
repz
sub
jbe
mov
lret
xchg
arpl
push
xchg
lret
fldl
cmp
cmp
xor
imul
icebp
mov
pop
cmc
xor
lcall
sub
pop
fisubl
push
dec
sbb
in
sbb
xchg
cli
sub
jmp
leave
lods
cwtl
mov
sbb
lahf
mov
add
data16
sub
mov
xchg
jb
cmp
lahf
mull
sbb
test
sbb
imul
sub
mov
pop
out
mov
jb
shlb
out
xchg
je
lret
xor
and
js
pop
shrb
mov
out
cmp
adc
daa
sbb
mov
mov
xor
adc
or
lds
and
mov
sub
test
shrb
in
out
ja
mov
loope
xchg
out
addr16
fsubp
mov
dec
stc
loop
mov
sub
fwait
out
into
cmpsb
shll
sub
lahf
dec
inc
pushf
and
in
cwtl
jns
push
iret
fcompl
sbb
jns
lret
mov
mov
xor
mov
mov
cld
mov
add
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
movsl
mov
sbb
sbb
sbb
xchg
loopne
test
xor
imul
pop
sbb
loop
call
movsb
fisubl
sub
xorl
or
pop
decl
test
je
pop
enter
fmull
mov
push
loopne
push
ret
inc
lods
outsb
shlb
sbb
ljmp
int
or
or
movsl
cmp
aaa
cli
imul
scas
outsl
loope
sbb
jle
adc
jbe
inc
sub
std
pop
adc
shlb
adc
je
pop
cmp
decb
imul
jp
xchg
mov
jb
loopne
shl
mov
outsl
pop
adc
and
jmp
sahf
daa
hlt
jl
cwtl
andb
cld
jae
ja
inc
fwait
lret
or
sbb
xor
leave
cmp
jns
repnz
push
push
sub
dec
cmp
pop
mov
jnp
push
adc
add
bswap
sbb
mov
and
cmpb
lret
mov
mov
adc
jns
popl
sub
cmp
xor
sub
or
dec
lock
xchg
ss
sahf
adc
mov
out
cmc
mov
popf
vprotq
dec
add
ret
push
test
pop
jp
mov
loop
std
adc
cmp
or
aam
dec
scas
ljmp
arpl
imul
xlat
lret
stos
sti
and
enter
add
xchg
adc
add
mov
das
sahf
test
outsl
or
fidivl
pop
aaa
daa
cmpsb
jg
adc
addr16
dec
sbb
mov
jb
sbb
divb
add
fldcw
das
lret
add
mov
imul
daa
test
iret
mov
xor
lret
dec
ss
leave
lds
inc
mov
scas
cwtl
cld
jo
fiadds
inc
add
dec
jns
xchg
enter
jecxz
mov
movsb
sub
js
and
mov
int
xchg
cwtl
add
mov
int
mov
and
aas
cmp
addl
cmc
mov
mov
movsb
ret
adc
and
insb
lds
pop
add
in
xor
dec
xor
movsl
rcr
loopne
mov
jnp
adc
cmp
jmp
out
lods
and
sub
ljmp
jnp
aas
adc
mov
leave
lcall
mov
pusha
scas
orb
or
insb
cmpb
and
imul
enter
enter
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
repnz
push
sbb
and
sbb
int3
mov
lahf
fdivrs
mov
xlat
add
xlat
into
movsb
gs
outsb
or
xchg
xor
imull
mov
jmp
mov
add
fs
add
not
inc
push
testb
and
out
inc
cltd
inc
sahf
repz
std
aam
mov
xorl
call
sub
mov
sti
gs
fadds
repnz
mov
andb
xor
pop
hlt
push
jge
xor
adc
ja
repz
pop
pop
mov
ja
leave
cmpsl
cwtl
adc
and
push
shll
insl
ljmp
fcoml
dec
sub
ds
jb
test
xchg
cli
outsb
or
addb
bswap
and
imul
push
xchg
pop
sbb
push
out
lahf
insl
and
lods
mov
lods
inc
mov
pop
mov
jns
lods
in
jbe
aam
rcll
add
and
insl
and
sbb
mov
repz
dec
push
inc
push
int3
add
adc
mov
mov
adc
int3
lcall
aaa
fidivl
ljmp
adc
xor
je
pop
sahf
pop
stos
mov
dec
aam
fisttps
gs
mov
mov
lret
ds
out
jno
xchg
out
lock
mov
fcmovnbe
adc
mov
sub
xor
mov
and
movl
cli
mov
imul
push
or
inc
mull
push
push
lods
mov
jl
xor
inc
repnz
jp
mov
xor
mov
fsts
pop
adc
sbb
adc
ja
push
mov
imul
int3
into
dec
push
and
fdivs
fbld
imulb
mov
and
pop
imul
and
lcall
push
dec
lea
jle
iret
mov
jle
and
lds
xchg
lea
shlb
add
push
out
mov
and
or
iret
mov
mov
inc
pusha
sbbl
inc
jns
mov
fbld
inc
lret
xor
int
xchg
fwait
in
jno
xchg
repz
add
inc
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
xor
sbb
jge
loope
mov
fsubrl
test
adc
insl
jne
insl
mov
jp
and
jb
mov
add
gs
or
ds
lahf
mov
jb
mov
cltd
in
cmp
sbb
push
and
scas
or
test
add
stc
bound
cwtl
pop
into
pop
xchg
jge
mov
cmc
and
xor
aad
xor
mov
in
cmp
add
addr16
out
add
push
dec
or
test
mov
loopne
cltd
push
jg
pop
cmp
jb
mov
pusha
mov
mov
adc
test
hlt
jl
lcall
stos
sbb
insl
cltd
icebp
xor
jns
das
pop
xor
jecxz
dec
xchg
shrl
jle
jnp
xchg
pop
xor
into
xor
idivl
imul
in
jnp
fmull
push
mov
mov
xchg
jl
insb
dec
or
pop
fsubl
cli
mov
sub
xchg
push
loope
jo
es
int
mov
jmp
inc
mov
int3
sub
adc
imul
and
mov
outsb
xchg
dec
sbb
cmc
xor
mov
inc
inc
and
data16
mov
fabs
and
or
aas
and
sbb
adcb
sub
addr16
pop
xchg
insl
sti
incb
inc
add
pop
inc
negl
inc
popa
sbb
dec
or
sub
loop
sti
hlt
mov
jb
mov
sarb
xor
push
jecxz
push
cmpsb
clc
xor
adc
xor
xchg
jg
push
xchg
leave
fdiv
pop
into
in
inc
iret
jbe
lea
dec
xor
xchg
mov
je
cmc
iret
push
jecxz
lea
adc
ja
daa
push
in
scas
loopne
faddl
stc
add
aaa
pop
mov
std
jecxz
or
jno
aam
dec
mov
mov
push
sbb
cmp
jae
icebp
data16
imul
or
jo
pop
cmp
sub
into
cmpsl
mov
enter
mov
xchg
mov
stc
or
xchg
sbb
stos
lods
push
sub
popa
jl
mov
pop
lea
movsb
inc
cmp
ljmp
ret
inc
ja
stos
fst
addr16
pop
pop
int3
nop
loop
loope
jmp
inc
jmp
cs
sbb
sub
adc
in
data16
cli
dec
mov
mul
cld
xor
inc
mov
addr16
jb
repnz
lods
adc
pop
mov
adc
mov
insb
adc
fdivrl
stc
addr16
cmp
insb
dec
jecxz
jne
inc
jl
popf
jno
and
adc
jecxz
stc
xchg
test
shll
int3
gs
inc
jge
test
ds
cmp
neg
mov
and
outsl
sbb
popa
jae
rcl
ljmp
sub
mov
push
pop
aad
push
sahf
cmp
call
jl
dec
xchg
pop
mov
pop
popa
sbb
pop
in
sbb
sbb
cltd
mov
inc
mov
mov
inc
into
mov
std
arpl
stc
jae
int3
scas
dec
out
mov
inc
and
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
lods
shll
adc
sbb
insb
shr
pop
pop
adc
mov
stos
mov
push
out
jecxz
testl
mov
test
outsl
lahf
adc
adc
push
jno
das
and
adc
jbe
in
out
mov
sub
push
dec
fsubs
out
repz
std
lret
xchg
sti
inc
mov
mov
stos
cmpsb
pop
fldpi
sub
pop
and
and
rolb
mov
in
sub
add
mov
stos
mov
test
outsb
xchg
xor
push
add
dec
xchg
js
and
inc
enter
pushf
add
movsb
xchg
xchg
cltd
inc
jne
cmpsb
je
mov
bound
test
xchg
cmpsb
dec
in
stc
or
test
inc
in
mov
dec
jp
mov
pop
dec
sub
jg
lock
ret
jg
add
rorl
and
mov
stc
mov
push
jnp
jb
cs
rcrb
js
fsubrs
push
sbb
cmp
shll
add
test
test
xlat
and
shrb
add
jns
gs
xor
test
sbb
std
andl
dec
lods
hlt
pop
mov
aam
leave
lds
repnz
adc
out
stos
mov
rcll
lock
rorb
pushf
or
cmp
loop
cmp
mov
bound
ja
subl
inc
mov
cmp
in
lea
imul
jmp
mov
sub
inc
or
fstpl
xchg
pop
cmp
and
loop
inc
push
jp
adc
lock
sbb
push
sbb
mov
mov
loope
cs
mov
push
or
lds
xchg
inc
sub
xchg
imul
mov
out
iret
ds
sti
fsub
and
mov
sarl
adc
jnp
push
jno
mov
sbb
orb
cmpsb
jp
in
mov
xor
fdivrl
lret
adc
inc
mov
scas
adc
lds
push
lret
cmpl
push
popa
inc
xor
pop
mov
aad
scas
inc
or
aad
imul
shll
test
xor
loop
out
cmc
jecxz
aaa
mov
xchg
scas
lret
mov
jecxz
cmp
xor
sub
fldenv
aaa
cwtl
jecxz
iret
scas
data16
popf
and
gs
xchg
imul
push
arpl
in
mov
call
idiv
pop
dec
mov
aam
lahf
mov
movsl
dec
movsb
int3
mov
std
fistl
mov
pop
outsb
stos
inc
sarl
lret
adc
imul
lds
xlat
and
adc
and
int3
sbb
cmc
stos
popa
stc
inc
xlat
in
int3
fstpl
push
lods
test
dec
push
aas
inc
ljmp
mov
movl
mov
pop
aaa
sub
mov
xchg
loopne
or
ds
adc
int3
scas
fidivrl
shl
aad
dec
mov
mov
cmp
es
fidivl
jge
pop
dec
out
dec
mov
fldenv
shrb
stc
mov
sub
pop
mov
outsb
popa
aaa
pop
xchg
mov
sahf
sahf
repz
rclb
xchg
rcrb
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
popa
inc
push
sbb
notb
sbb
mov
into
sub
sub
xchg
movb
and
or
aad
sbb
xchg
mov
or
xor
cmp
mov
data16
loopne
mov
and
push
jge
cmpsb
pop
adcl
sahf
cmp
pop
xor
pop
lahf
dec
aad
inc
cmp
arpl
movsl
pop
push
testl
xor
jns
xor
xchg
addb
mov
ficoml
pop
adc
inc
mov
xchg
js
cwtl
sub
mov
xlat
lods
lea
sahf
shl
cmpsb
jb
popf
push
jo
xchg
out
bound
push
pusha
dec
dec
pop
dec
xchg
xchg
scas
mov
push
inc
cmp
je
inc
inc
xor
jnp
cmpsb
jp
lea
mov
push
ds
sbb
mov
out
jns
sub
rcll
and
les
pop
or
cmp
and
inc
icebp
fmuls
cmp
sub
mov
test
xchg
out
insl
push
xor
pause
icebp
push
and
xchg
xchg
mov
pusha
pop
push
push
inc
or
inc
into
fildl
repnz
pop
ja
divb
insb
shl
das
std
lock
add
sbb
dec
icebp
jle
out
sub
daa
xor
or
and
xchg
xchg
int3
mov
dec
mov
dec
push
insl
xlat
aas
jb
sbb
sahf
incb
sbb
xlat
xlat
cwtl
mov
cs
mov
repnz
leave
fs
cli
lods
mov
xchg
pop
dec
insl
adc
mov
in
jle
fsubrp
leave
jle
or
mov
stos
lea
aam
xchg
clc
jne
clc
sbb
data16
cmpsb
testb
cmc
mov
outsl
xchg
jecxz
push
inc
je
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
mulb
sbb
notb
sbb
rcr
imul
add
fimuls
xor
mov
jle
xchg
not
push
inc
push
aas
test
or
xchg
adc
jns
lcall
lret
jnp
adc
or
cmp
sti
pop
and
pushf
in
jb
adc
dec
mov
movsl
sub
clc
mov
fs
in
jmp
sbb
xlat
jle
les
int3
ret
inc
out
daa
ss
mov
and
xchg
xor
adc
sub
mov
in
ror
wrmsr
pop
loope
shlb
fsubrs
in
inc
pop
popf
push
lret
push
int
call
cmpsb
bnd
outsl
jmp
or
cmp
popf
in
lcall
aaa
in
rcrb
cmp
addr16
mov
sbb
push
int3
push
mov
xor
and
push
jmp
mov
sub
into
je
movsb
or
in
mov
mov
out
add
inc
mov
sti
lds
iret
jne
pop
sbb
pop
jno
fsubrl
add
ljmp
in
push
js
inc
sbb
mov
js
sub
fidivl
faddl
adcb
test
or
cwtl
xchg
adcl
cmp
or
cmpb
inc
addl
push
fidivs
adc
imul
jb
mov
divb
jmp
push
jae,pt
repnz
sub
cmp
sub
push
cmp
mov
stos
mov
pushf
push
imul
jg
pop
push
xchg
and
lret
js
mov
stc
stos
adc
jle
sub
cmpsb
sbb
jno
cs
cmp
movsb
cmp
mov
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
xchg
jl
sbb
notb
sbb
decb
lret
inc
scas
lods
inc
jne
pop
lds
dec
cltd
aad
pop
fldt
add
imul
dec
shll
pop
mov
cmp
fbld
lcall
bound
add
pop
sub
xchg
dec
dec
xor
rclb
fbstp
ljmp
repnz
lcall
scas
pop
aam
mov
sbb
subl
and
lret
xchg
popf
or
scas
dec
jno
fdivs
imul
ljmp
mov
js
inc
and
mov
xor
mov
leave
mov
inc
sbb
xchg
fildll
popa
hlt
sbb
mov
sbb
popa
cmp
jecxz
and
mov
repnz
pusha
mov
xchg
xor
sub
pop
jnp
fistps
dec
pop
mov
in
jl
and
jbe
mov
movsl
loopne
adc
dec
dec
and
scas
call
mov
dec
popa
jmp
insl
push
cmp
nop
pop
sbb
add
inc
sub
mulb
pop
jge
adc
loop
pop
pop
aam
jb
mov
mov
les
fiadds
pushf
mov
push
xchg
xchg
mov
sub
pop
mov
icebp
sbb
xchg
add
fstpt
mov
push
inc
or
cmp
or
loope
inc
or
das
and
mov
mov
mov
pop
imul
inc
adc
cwtl
and
lds
mov
paddsw
push
mov
push
aam
xchg
pushf
pop
stos
cli
inc
add
mov
jns
inc
push
jmp
daa
or
dec
les
and
mov
pop
enter
into
repz
mov
pop
nop
xlat
sub
adc
cmpsb
into
divl
shlb
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
jbe
aas
aad
adc
cli
pop
xchg
add
rclb
mov
cmp
call
mov
enter
pop
ss
mov
outsl
lods
mov
inc
cmp
mov
addr16
dec
adc
push
pop
ja
inc
sahf
cld
sub
jo
xchg
jnp
and
push
dec
mov
and
mov
sbb
push
arpl
out
or
div
int3
arpl
andl
std
sbb
push
sti
pop
mov
ljmp
xchg
mov
xchg
mov
and
sbb
fwait
and
push
push
cmp
outsl
into
mov
cmp
stos
adc
sub
inc
seto
push
xorb
repz
mov
pop
leave
inc
int
aam
inc
cli
or
fimuls
fidivl
cmc
stc
in
mov
lcall
lret
mov
cmc
leave
mov
and
sub
cmp
jb
adc
mov
mov
int3
pushf
pop
andl
pop
mov
adc
mov
xchg
mov
inc
fldcw
push
std
add
lods
in
xchg
shr
clc
or
andb
xchg
sarl
fdiv
xor
leave
fcmove
or
pusha
cmp
mov
in
mov
jne
pop
mov
push
push
sbb
int3
mov
xor
aam
sbb
mov
pop
mov
aaa
mov
call
pop
inc
popa
imul
inc
mov
lds
lret
mov
mov
cmpsb
add
push
adc
ss
push
jns
lret
xlat
je
dec
and
and
lods
xor
sbb
adc
or
lods
push
clc
sub
ret
sub
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
int3
loopne
test
fs
cld
mov
push
sarl
mov
jnp
imul
stos
mov
and
fiaddl
flds
adc
push
pop
push
jg
insb
in
out
scas
pop
scas
jl
adc
loopne
adc
insb
pushf
mov
clc
imul
or
cmp
push
popf
mov
jp
mov
mov
jge
iret
mov
imul
shrl
clc
adc
lcall
or
or
ficoms
jae
mov
repz
nop
outsl
std
pop
sti
pop
cmp
ret
sbb
lods
jmp
mov
pop
lret
ljmp
push
push
out
arpl
sub
dec
lret
mov
cs
push
cmp
xchg
add
movsl
imulb
call
or
in
mov
cwtl
jl
fsubrp
inc
hlt
mov
add
or
sub
push
jno
jge
pop
mov
outsb
sbb
pop
stos
lret
push
ljmp
shll
pusha
dec
or
jl
fsubrl
int3
out
into
sbb
stc
lcall
in
mov
cmpsb
cmc
jo
loope
sbb
mov
leave
xchg
ror
mov
jno
cmp
sahf
fsubs
inc
or
test
jl
push
or
xchg
mov
fwait
jne
pop
fdivrl
sub
inc
add
das
dec
outsb
mov
mov
inc
gs
dec
rol
push
leave
mov
push
mov
pop
pop
inc
dec
ja
add
ret
pop
loop
pop
inc
add
push
jb,pn
mulb
rclb
lcall
push
lahf
jecxz
dec
outsb
jns
sti
frstor
cld
nop
xlat
fs
outsb
ss
mov
add
xchg
xchg
movsb
out
mov
std
sarb
cmp
fidivs
push
mov
mov
jmp
aaa
and
dec
mov
push
out
add
stos
ljmp
sbb
notb
sbb
popf
push
sub
dec
adc
pop
loop
and
stos
sub
pop
pop
dec
insl
jns
lock
mov
ret
jb
jmp
ret
cmp
lods
xor
jle
es
pop
jnp
push
xchg
imul
ret
and
dec
push
push
cwtl
sbb
jb
adcl
cmp
xchg
xchg
lret
pop
sti
fistps
mov
pop
dec
ljmpw
cli
inc
lock
dec
test
jnp
jnp
pop
fidivrl
and
insl
out
dec
dec
scas
cmp
jns
add
aam
mov
sbb
mov
push
shll
loop
stos
scas
pop
js
xchg
mov
cld
add
mov
ja
or
data16
outsb
cld
ret
pop
daa
mov
jmp
pop
lods
ret
and
jle
inc
jmp
mov
dec
pushf
test
pop
jge
js
fcoml
sbb
dec
pop
mov
stos
test
inc
inc
movsl
test
pop
cmp
ss
push
ficoms
ja
jo
pop
mov
mov
lahf
mov
popf
adc
cltd
adc
push
je
dec
mov
out
lcall
mov
movsl
out
out
rol
sub
xchg
pop
or
or
imul
xor
out
or
outsl
in
mov
mov
addl
mov
jb
cmc
faddp
sub
and
sbb
xchg
pop
or
push
ret
jg
push
ret
push
sub
pxor
test
mov
jge
inc
jmp
fwait
mov
stos
mov
adc
cltd
cmp
cmp
mov
or
icebp
jle
jp
lock
and
popf
pop
cmc
popa
add
sub
cmp
test
popf
mov
in
aad
dec
sahf
stc
add
lods
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
out
or
adc
sbb
popa
cmc
cmp
adc
xchg
pop
test
mov
fidivrs
pusha
xor
mov
cmp
add
mov
sbb
jne
ret
das
inc
cmovae
imul
ror
fidivrl
stos
decl
push
leave
mov
inc
outsl
mov
in
shrb
adc
das
in
jle
popf
mov
fmul
imul
iret
nop
sub
adc
stos
in
je
fmuls
dec
movsb
js
mov
ljmp
fstpt
jg
ljmp
pop
fwait
popa
adc
or
add
mov
mov
jl
or
iret
shl
dec
sub
push
dec
sahf
cmp
mov
dec
daa
mov
mov
cmp
xchg
test
push
rol
or
movsl
ret
push
lret
sahf
xchg
ret
sub
lahf
mov
cs
mov
shl
mov
pop
pop
insw
pop
adc
das
mov
stos
or
outsb
cs
mov
jmp
pop
jno
and
xor
xchg
repnz
add
enter
xor
push
xchg
xchg
popf
or
xchg
push
in
ret
xchg
sarb
lret
out
and
in
mov
jae
push
cmp
incl
xor
and
lret
or
popa
push
mov
xor
inc
rorb
mov
in
xor
mov
data16
and
mov
add
jg
fwait
or
mov
shr
pop
je
ss
int
xor
lahf
cmpsl
rcll
in
aas
andl
mov
addr16
and
lods
mov
ljmp
mov
stc
inc
inc
mov
jns
dec
arpl
push
clc
add
lods
xor
cli
popf
fdivrl
lock
dec
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
xor
loopne
pop
mov
xchg
dec
sahf
xor
aaa
stos
mov
or
or
sub
ret
idivl
bound
push
xchg
ja
in
sbb
pop
push
jns
mov
xor
and
cli
or
rorl
push
fidivrs
jbe
xchg
pop
les
daa
or
xchg
push
ret
cmc
sbb
adc
cld
adc
std
jmp
das
cmp
movsb
push
xchg
test
imul
aaa
jl
adc
pop
or
inc
dec
mov
fisubl
push
mov
jno
pushf
sub
push
fs
mov
jns
or
repnz
and
bound
or
movsb
add
ja
mov
jnp
lock
fwait
hlt
sbb
subl
icebp
mov
or
testl
in
pop
ret
lahf
pop
out
lock
std
cmpsl
lret
or
pop
fldenv
clc
stos
mov
inc
push
jmp
mov
and
insb
add
inc
cmp
cld
pop
add
fistpll
mov
lret
lret
lea
pop
popf
adc
addr16
add
push
pop
in
testb
popa
shrb
push
mov
pushf
int3
dec
loop
xchg
mov
sbb
mulb
inc
dec
aaa
add
dec
adc
inc
movsb
in
sahf
insb
push
jle
sbb
add
adc
inc
or
iret
pop
ret
or
mov
insb
xor
mov
jle
mov
shll
mov
sbb
insl
cmp
pop
test
sbb
mov
xchg
or
stos
add
or
pop
sarb
push
pop
fdivrs
cmp
inc
out
xchg
mov
add
dec
sub
fstpl
loop
dec
leave
imul
clc
call
fcoms
sti
hlt
outsb
cmp
cmc
push
aam
and
pop
cld
push
ja
mov
sub
dec
push
and
popa
and
lods
outsb
lcall
lock
jns
cli
xor
dec
pushf
xchg
mov
sti
jl
andb
mov
push
and
sahf
or
jno
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
sbbl
pop
adc
sbb
mov
xor
sbb
mov
sahf
push
cld
mov
add
pop
out
stos
scas
dec
xor
mov
pop
clc
out
sub
adc
and
insb
adc
mov
jge
in
mov
movsl
dec
test
iret
frstor
aaa
sbb
rorb
negb
mov
outsl
sub
movl
jb
mov
icebp
and
std
out
enter
jl
gs
add
add
fs
repz
pop
jl
jp
test
push
bswap
cltd
imul
jl
mov
leave
add
lods
ficoms
pushw
pop
mov
in
cmp
jo
jle
test
lock
or
fidivrl
movsl
outsb
jbe
dec
addb
addl
stos
lock
dec
sub
sbb
testb
cltd
add
push
mov
std
sbb
add
fsubl
pop
aas
adc
leave
rcrb
add
xchg
in
mov
mov
andb
jne
mov
xlat
sub
orl
jp
loop
inc
std
js
push
xchg
into
xchg
mov
cli
hlt
addl
lds
lods
jb
mov
pop
push
pusha
mov
xor
stc
aam
pop
jmp
mov
into
loop
in
outsl
lcall
push
cmp
les
jne
inc
pop
jp
cmp
cmp
cmp
mov
inc
scas
xchg
subb
in
adc
shlb
xchg
stc
sbbb
mov
xchg
popf
rolb
add
es
cmpl
aad
cmp
out
das
inc
dec
andnps
push
in
mov
add
push
in
out
insb
out
xchg
xchg
gs
ror
mov
push
xor
in
shll
outsl
mov
add
pop
or
push
cmp
mov
out
and
mov
scas
cmp
jb
dec
pop
mov
push
dec
xchg
shrl
pop
cmp
xor
cld
jns
js
mov
add
icebp
ret
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
jl
sbb
sbb
adc
sbb
cmpsb
cmp
out
subl
insl
dec
push
cli
divb
inc
les
jle
fiaddl
and
adc
push
pop
jg
mov
int
and
cmp
cmp
mov
rolb
nop
xchg
sub
mov
jae
xor
cmp
push
adc
jo
xor
inc
push
jns
test
fisttpl
or
sarl
mov
fisttpl
cld
and
dec
loope
xor
aam
xchg
js
dec
ret
aas
pop
pop
xchg
push
mov
in
push
jno
fstpl
or
rcr
add
pop
sar
cmpsb
cmc
rclb
jo
pop
js
pop
cld
roll
add
xchg
push
mov
xchg
popf
and
dec
jo
cmp
dec
mov
std
jne
fidivrs
movsl
mov
jno
dec
jb
outsl
jmp
mov
je
loopne
cmp
dec
lret
xor
and
stc
ret
mov
pop
cmpsb
out
adc
mov
jbe
adc
adc
pop
stc
jmp
pop
insb
mov
lahf
je
scas
mov
inc
out
push
xor
adc
mov
subl
aam
andb
mov
sub
scas
dec
mov
pop
mov
xor
mov
test
out
test
jno
imul
mov
mov
jle
aad
cwtl
ljmp
aas
mov
xor
inc
les
cmpsb
scas
adc
xor
cmp
fdivrs
jae
push
repz
std
lea
cmp
orl
jg
pushf
test
jmp
fnstsw
loope
shll
pop
and
xorl
adc
mov
push
mov
jg
ficomps
dec
repz
into
test
cmc
xchg
je
lret
push
ficomps
or
add
jecxz
ret
mov
mov
cmp
or
cltd
and
add
and
jnp
push
dec
and
sub
xor
adc
lret
cmp
inc
sbb
mov
jecxz
fsts
mov
dec
xchg
cmp
into
pop
call
add
mov
jecxz
loop
repz
jae
inc
jle
ds
orb
imul
cmp
repnz
addr16
jl
pop
mov
jb
dec
and
out
fidivs
outsb
les
pop
adc
jl
fldcw
xchg
cmp
cs
xor
pop
cld
cli
cmp
in
jl
dec
add
popf
dec
es
aas
xor
dec
nop
rorl
cmp
push
cmp
fisttps
mov
incb
sarl
cwtl
sbb
jne
xchg
sbb
mov
cs
mov
test
cmp
ror
je
roll
cmp
rolb
push
push
sub
sahf
out
out
div
dec
fistpl
popf
imul
dec
push
pop
mov
in
aaa
add
dec
add
dec
enter
adc
stos
pop
xchg
mov
inc
and
test
cmp
clc
js
cmp
cltd
cmp
cmp
add
icebp
adc
add
add
scas
enter
addl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
rcrl
sbb
adc
sbb
push
xor
and
imul
bound
xchg
cwtl
xor
or
ret
xchg
leave
test
clc
dec
andb
mov
dec
pop
mov
addr16
add
out
leave
xchg
imul
jle
dec
mov
xchg
pop
addr16
dec
dec
pop
fcoms
dec
inc
mov
cmp
sti
cmc
push
sbb
cmp
popf
daa
outsb
sub
idivl
ljmp
cmpsb
push
cmc
mov
inc
pushf
lods
iret
daa
push
sbb
pop
sbb
cs
cmc
or
mov
pop
outsb
fwait
arpl
in
pop
sub
and
pop
shl
or
mov
jne
out
jo
pop
popf
mov
mov
mov
pop
mov
mov
add
push
gs
ss
dec
lods
test
ffree
je
add
sbb
sbb
sub
mov
jecxz
mov
ds
jbe
out
ret
pop
push
imulb
jnp
arpl
jge
rorl
and
mov
and
add
jnp
stos
sbb
pop
and
stos
sbb
cmp
je
sub
inc
dec
test
aaa
jp
in
pop
insl
jl
push
test
pop
sbb
sub
das
jno
shlb
aaa
cmp
cmp
popf
jp
dec
or
add
jbe
stc
adc
pop
push
in
subb
cmpsb
sbb
insl
dec
mov
ficoml
subb
sbb
xchg
sbb
in
and
pop
inc
xor
sbb
sbb
xor
cltd
bound
loopne
stos
scas
idiv
out
shl
scas
shll
xor
inc
xor
inc
sbb
pop
in
push
pop
mov
mov
out
inc
mov
fmull
dec
mov
ret
into
add
repz
je
es
xchg
fucomi
aad
ja
aam
stc
push
lea
push
fcompl
les
dec
push
jnp
dec
inc
mov
sahf
cli
add
stc
inc
loope
push
pop
cli
sti
adc
dec
jmp
lahf
add
jne
mov
imul
sub
pop
repnz
std
imulb
test
pop
arpl
xchg
adc
lret
cmpsb
je
mov
push
jb
cld
dec
loope
test
xor
mov
pop
lret
faddl
addr16
andl
arpl
fbld
lret
scas
xor
mov
inc
jle
repz
xchg
mov
sbb
les
ss
add
or
fidivrs
add
adc
fisubrl
lsl
sub
sbb
jbe
lock
fldenv
enter
stc
inc
or
into
push
jp
sbb
gs
and
adc
out
sbb
mov
inc
popa
movups
push
outsl
idivl
fs
sbb
shl
cwtl
inc
inc
jg
shl
push
xlat
adc
mov
lret
or
nop
mov
daa
and
sub
jg
sbb
js
mov
outsb
out
jno
orb
push
and
loop
adc
mov
mov
mov
xchg
stos
dec
add
adc
sahf
xor
add
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
cld
add
inc
or
sbb
adc
sbb
gs
or
repz
popf
xor
aam
push
mov
in
leave
or
cmp
sbb
mov
mov
xchg
push
adc
xchg
jno
les
sbb
dec
mov
mov
mov
ljmp
jo
mov
xlat
lods
mov
add
cltd
bnd
clc
mov
lret
jno
in
adc
sub
lahf
adc
lret
push
mov
add
fwait
loopne
stc
xor
mov
sbb
and
test
push
ffree
jmp
lds
sbb
loope
and
lock
scas
inc
sub
mov
sar
aam
scas
cmp
sbb
sub
xchg
decl
je
je
push
test
mov
inc
jecxz
lds
mov
push
mov
repnz
xorl
pop
cld
mov
xchg
xchg
notb
outsb
hlt
mov
enter
imul
mov
xchg
mov
xor
sub
inc
push
iret
xor
arpl
sub
sbb
or
cld
inc
cltd
jo
repnz
cmp
lret
mov
aaa
inc
push
pushf
shll
xchg
dec
ss
test
adc
xchg
fsubrp
mov
jp
push
lcall
movl
insb
mov
int
leave
test
lret
inc
add
outsb
aaa
movl
push
ficomps
cld
rep
adc
pop
popa
imul
stc
xchg
jmp
add
ds
cmp
test
pop
pop
inc
inc
cwtl
popf
das
mov
popf
aaa
lret
mov
or
mov
sti
ss
lods
test
inc
cmc
fwait
mov
fstpl
rcll
push
xor
adc
call
adcb
sbb
cltd
mov
hlt
mov
cs
sar
in
jg
inc
pop
popa
mov
in
sbb
pop
int3
stc
in
adc
out
xorb
clc
cmpsb
stos
lret
sub
add
lds
push
out
mov
jmp
pop
test
cwtl
popf
fisttps
fdiv
jg
push
xchg
push
out
int3
ljmp
int3
lds
popfw
jp
rolb
pop
filds
insb
outsl
push
daa
mov
pop
rcrb
adc
push
adcl
pop
sarl
clc
sub
and
repnz
cmp
or
inc
cli
push
xor
sti
adc
loope
mov
pop
loop
dec
sti
push
ljmp
mov
fwait
cmpsb
or
add
pop
je
mov
xchg
mov
push
jo
sub
or
stos
mov
testl
push
ret
pushf
inc
mov
fdivs
push
sbb
fcompp
xor
add
repz
test
ja
ss
mov
cli
sti
fcmovne
cld
sub
inc
mov
shr
ss
sbbb
es
into
stc
inc
shr
jb
lock
rolb
popf
and
mov
xchg
jecxz
fidivrs
int
filds
mov
imul
lret
add
addl
add
mov
push
in
xor
cs
jle
add
sbb
adc
sbb
xchg
sub
jecxz
jbe
arpl
ds
pusha
addb
hlt
lahf
pop
mov
ja
movsl
xchg
dec
xchg
scas
mov
xor
xchg
add
jae
inc
negb
loopne
clc
mov
shufps
cmpsl
jp
incl
xchg
mov
inc
aam
sbbl
pop
adc
mov
callw
shll
es
pop
js
and
inc
sbb
mov
fldl
jae
cmpsl
dec
test
stos
fwait
pop
in
sub
sbb
xchg
dec
sub
cmp
in
or
mul
cmpsl
in
inc
add
loope
fwait
pop
movsb
adc
push
sbb
shlb
dec
adc
push
inc
test
sbb
mov
hlt
push
mov
into
add
sbbb
xor
mov
loope
scas
negl
aaa
pushf
mov
cmpsl
inc
call
shrl
sub
and
mov
in
mov
mov
push
dec
dec
or
inc
je
add
aas
hlt
jbe
dec
and
cmp
in
push
adc
lods
rcrb
mov
sub
and
cmp
jmp
sub
repz
xchg
mov
mov
inc
lcall
sbb
lock
orl
pop
lret
iret
pushf
add
mov
test
pop
clc
out
inc
push
cmpsl
jo
add
fs
and
lock
das
xchg
arpl
sub
xchg
adc
out
shll
adc
mov
push
ds
sub
inc
sti
mov
lock
cmp
jl
mulb
sbbl
inc
sbb
push
pop
outsl
inc
aaa
xchg
mov
shlb
push
or
fisubrl
jecxz
stos
js
mov
dec
mov
adc
sub
dec
rcrb
fiadds
aad
mov
and
ss
shll
mov
sbb
dec
rcrb
jle
jbe
aas
inc
sub
cmove
cmp
xchg
inc
pop
das
cmp
xor
jp
xor
outsl
hlt
jle
imull
jne
lock
fisubs
xor
jns
adc
push
mov
and
add
push
sbb
mov
in
lcall
out
in
test
movsl
pop
mov
cmp
sbb
inc
inc
fstpl
test
xor
mov
inc
vfnmadd132pd
xlat
or
mov
dec
sub
sar
adc
lods
in
sub
sbb
mov
shlb
dec
cmpsb
jmp
cld
jne
out
repz
sub
or
jo
xchg
mov
int3
stos
push
scas
loope
mov
xchg
jmp
dec
loopne
repnz
and
xor
fidivs
rclb
and
jmp
lret
xor
out
jecxz
cmpsl
xchg
adc
gs
xor
mov
add
inc
jmp
sub
stc
rcrl
cwtl
mov
mov
mov
inc
sbb
adcb
enter
cwtl
add
pop
pop
adc
push
fldcw
cmp
jno
inc
int3
movsb
xchg
adcb
inc
incl
add
inc
add
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
fwait
das
jecxz
sub
jno
enter
adc
ficomps
imul
je
xor
pusha
jp
ds
ljmp
mov
nop
dec
les
sbb
lahf
sub
decb
int
push
cmp
gs
lods
push
bound
test
xchg
mov
xchg
icebp
mov
rorb
movsb
mov
cmpsb
cwtl
std
std
lods
repnz
xor
inc
pop
fimuls
sbb
pop
imul
sti
push
ss
js
jae
mov
daa
test
cld
xor
out
jb
fnsave
mov
or
add
and
xchg
int
xor
daa
shl
and
fistps
leave
out
pop
or
das
xchg
imul
sbb
adc
lods
sbb
jmp
adc
push
mov
inc
std
cmp
sbbb
ret
adc
cltd
aaa
sub
mov
sar
les
xchg
data16
fs
pushf
ss
sub
mov
mov
fs
add
rcrb
xchg
cmp
mov
subb
mov
push
xchg
gs
jl
lahf
stc
bsf
sbbl
cmp
es
jp
add
or
iret
adc
jne
xor
in
push
ss
repz
push
xchg
sbb
aam
aam
test
mov
sarb
pushf
push
movsl
mov
sub
setno
std
imul
loope
sbb
fmul
cmc
xor
jmp
repz
filds
lcall
movsl
add
insb
lea
inc
pop
adc
ja
out
cmp
data16
mov
aad
aas
inc
imul
jbe
cli
cs
pop
insl
lods
leave
or
cld
out
mov
daa
cmpsb
enter
push
xor
and
xor
jecxz
xchg
pusha
and
xor
and
push
cmp
les
push
pop
inc
sbb
add
sub
imul
shl
shrl
add
jbe
repz
in
cmpsl
jl
mov
push
mov
fmul
cmpsb
dec
cli
mov
mov
cmp
xor
push
enter
int
jns
adc
rcll
imul
call
sahf
shll
lods
in
pusha
aaa
rcrb
push
xlat
jne
dec
test
pop
xchg
in
cmp
lret
and
data16
je
sti
pushf
aad
insb
or
fadds
sbb
jg
std
out
push
mov
cmp
mov
jbe
data16
enter
inc
or
cmpsb
cmp
xchg
push
inc
lock
lahf
inc
inc
shll
ss
add
mov
jmp
dec
out
cmpsb
xchg
pusha
cld
fcomp
jae
jo
xchg
enter
cld
test
add
das
cli
rolb
cmpsl
sub
cmpsb
xchg
icebp
jbe
add
dec
mov
push
clc
in
push
frstor
dec
arpl
or
je
insl
cmp
out
mov
movsb
push
mov
cmc
pusha
or
sub
xchg
stc
jno
inc
lcall
pop
adc
loopne
jnp
stc
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
aaa
fwait
ret
jl
notb
sbb
adc
sbb
loopne
popf
add
jge,pn
xor
xor
mov
mov
pop
cmpsl
add
dec
popa
inc
pop
imul
cs
test
pop
xor
xor
addb
add
inc
jne
adc
xor
loopne
push
mov
inc
pop
call
jg
inc
std
stos
xchg
hlt
mov
in
out
cmpl
push
icebp
and
roll
mov
in
adc
mov
pop
jb
cmp
cmp
sbb
das
adc
mov
in
int3
adc
sbb
das
mov
repz
test
sbb
or
outsb
sbb
xchg
push
outsb
and
mov
dec
mov
clc
adc
mov
xor
scas
xchg
xor
xor
pop
into
push
push
data16
mov
fsubl
sub
stos
pop
insl
mov
test
jmp
mov
jle
daa
inc
add
es
xchg
dec
ss
notb
adcb
cli
jge
sbbl
lret
loope
lea
hlt
sub
les
dec
mov
iret
popf
push
xor
inc
fwait
dec
inc
mov
data16
aad
dec
fcmovu
sub
adc
push
push
ja
dec
cmpsl
iret
adc
test
bound
in
mov
iret
in
fisubl
add
mov
pushf
jecxz
dec
mov
aas
hlt
mov
lcall
xchg
pushf
mov
lock
sbb
in
xchg
cmpsb
testb
mov
jg
out
lahf
mov
repz
fstpl
test
inc
pop
rorb
push
cmp
xchg
in
jecxz
or
push
ret
push
jp
fnstsw
or
out
lea
iret
push
pop
int
jmp
sbb
out
call
and
dec
and
jl
test
in
aaa
jo
je
cwtl
dec
repnz
out
out
xchg
mov
adc
cwtl
pop
cmpsl
outsl
dec
sbbl
mov
mov
adc
and
mov
mov
add
xlat
mov
mov
data16
mov
cmp
test
sbb
sbb
push
lret
mov
adc
aaa
scas
xor
jb
pop
and
jle
ja
mov
xor
repz
mulb
out
adc
mov
mov
mov
es
add
adc
sub
push
enter
stos
aam
pop
int3
sbb
mov
stos
or
fisubrl
adc
popa
imul
jl
in
adc
mov
push
xor
aam
inc
mov
ror
cmpsb
pop
in
xchg
je
pop
imul
clc
xchg
in
lret
inc
mov
xor
repz
aad
mov
dec
push
subl
push
pop
lods
pop
pop
rol
and
scas
lret
push
sub
daa
and
lret
cli
adcb
aaa
cmp
add
out
add
divl
jo
jmp
cmp
pop
outsb
je
xchg
fcmovbe
inc
push
fnstenv
jno
out
cmp
xor
outsl
pop
sti
divl
je
addr16
push
sub
xchg
sub
repz
cli
cmpsl
leave
sub
sub
jmp
ret
mov
dec
pop
cmp
int
sub
push
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
mov
loope
inc
dec
loopne
mov
rorb
ljmp
xlat
stc
xchg
das
sbb
pop
out
push
jge
dec
cmp
cld
sub
sub
enter
push
repnz
aam
popf
fstpl
add
hlt
bound
leave
imul
in
push
lods
adc
fs
adc
out
xchg
and
rorb
add
inc
loop
mov
ss
pop
pop
xchg
xchg
pop
outsl
or
push
stos
xlat
mov
xor
adc
test
mov
pop
ljmp
xchg
jno
lods
fimuls
sbbl
jne
mov
cmp
sbb
push
clc
int3
lahf
jno
xchg
mov
mov
jne
and
stos
jno
outsb
hlt
fistl
testb
sti
pop
inc
out
inc
jecxz
repz
push
push
inc
inc
out
subb
add
pop
sub
popa
cmp
movsb
jb
cmpb
imul
mov
add
sub
mov
adc
inc
mov
aaa
shll
divb
cltd
arpl
sub
adc
or
fcomip
mov
out
das
pusha
push
pop
mov
or
jae
fcoml
push
dec
loope
mov
inc
loope
xlat
push
gs
ds
push
insb
insb
inc
adc
and
and
mov
into
icebp
lret
mov
sti
pop
xor
sbb
add
mov
inc
ja
jmp
test
js
cmc
mov
pop
adc
jb
xor
jle
xchg
arpl
cmp
lret
push
cmc
data16
jo
stos
jp
lret
pop
iret
sbb
lock
pop
outsb
sbb
sub
jbe
adc
ss
out
mov
push
int3
mov
sub
leave
adc
jae
loopne
rol
fmul
int
data16
xchg
inc
adc
lret
mov
adc
lret
pop
fnstcw
push
push
popa
sbb
cmpsl
or
xchg
mov
sub
sub
jb
mov
cs
pop
cmc
xor
in
add
mov
imul
sbb
mov
sbb
push
xchg
fsub
mov
lahf
pop
str
mov
fwait
gs
adc
or
test
mov
andps
cmp
push
add
in
sub
fbstp
outsb
fisubs
adc
pop
push
lcall
test
xchg
push
scas
xchg
xlat
fldt
movsb
cmc
sub
jge
xor
imul
addr16
xor
and
int
adcb
hlt
adc
lret
ljmp
pop
das
loope
stos
mov
clc
dec
lahf
insl
test
inc
data16
nop
push
or
int
lret
pop
lret
xor
xor
cwtl
std
lods
orb
movsb
mov
mov
cmpl
or
xchg
pop
scas
mov
mov
xor
jg
nop
jae
mov
dec
lret
popa
xor
or
cmp
fidivl
insl
aas
sub
inc
jmp
sahf
dec
xchg
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
dec
leave
jnp
inc
jmp
sbb
mov
test
scas
add
fs
lret
push
add
pushf
mov
pop
mov
jo
push
pop
js
aaa
sub
xor
outsl
neg
inc
mov
mov
mov
mov
sub
sub
sub
push
dec
out
dec
jnp
fisubrl
inc
imul
das
xchg
mov
fs
push
jno
aad
xor
sub
dec
xchg
cld
sbb
pop
pop
or
push
lcall
sbb
xor
sbb
or
out
insl
arpl
xor
call
arpl
jg
mov
mov
inc
dec
lock
xor
sub
hlt
into
rcll
es
and
in
stos
and
add
je
and
jno
divb
adc
test
dec
pop
mov
push
push
aad
std
xchg
dec
dec
inc
mov
je
imul
push
sbb
sbb
in
push
mov
adc
xor
pop
repz
adc
cs
pop
leave
pop
loope
or
inc
sbb
loope
jns
int3
push
lods
mov
inc
popa
jno
adc
mov
mov
jle
pop
adc
rcl
and
xor
cmp
in
and
push
jl
xchg
push
mov
pop
loope
pop
push
mov
jbe
lcall
pop
pop
in
mov
subb
scas
add
mov
ficoml
cmp
sbb
mov
fcmovne
lods
add
cltd
das
push
push
push
jae
test
and
push
test
jecxz
repnz
xchg
add
ret
sbb
mov
mov
xor
adc
mov
movsl
push
insl
push
andb
inc
mov
or
mov
fcoml
in
mov
insl
repnz
sarb
idivb
mov
cmpsb
push
fbld
and
xchg
add
mov
icebp
xchg
push
insb
add
mov
leave
pop
lcall
jecxz
push
lods
out
lcall
loopne
mov
and
jb
add
jno
jno
jge
cmp
cmpsl
add
xchg
cmp
adc
lock
jne
xchg
rcl
rcll
mov
adc
cld
sbb
mov
push
mov
dec
data16
xchg
test
ret
mov
or
push
mov
inc
loopne
sbb
sbb
sbb
shlb
aas
sub
aas
jae
xchg
cmp
inc
jg
mov
cmp
mov
dec
test
mov
mov
mov
mov
pop
inc
jno
cwtl
js
add
adc
jne
cmp
ds
push
push
lods
loopne
inc
imulb
fsubp
cwtl
addb
iret
hlt
mov
pushf
out
scas
stos
and
xchg
push
lcall
cmp
scas
ss
sahf
xor
pop
xor
sbb
es
add
add
mov
mov
sbb
popa
push
add
mov
mov
xchg
nop
pop
fwait
inc
movsb
fidivs
mov
les
cli
mov
cli
jbe
inc
pop
loop
cmpsl
cmpsl
cmp
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
int
inc
loope
sbb
adc
sbb
mul
xor
and
mov
std
addl
jo
clc
ret
lcall
mov
dec
test
mov
lcall
mov
cld
cs
push
sahf
mov
int3
jecxz
outsl
and
gs
pusha
add
stc
pop
mov
outsb
mov
mov
mov
call
mov
pop
xor
sub
cmp
inc
jbe
mov
jb
sbb
popa
or
and
cltd
or
add
cmpsl
jns
push
adc
shll
sbb
sub
xor
xchg
jo
mov
popf
out
add
repz
mov
stos
adc
fsubs
clc
test
sbb
inc
xorb
mov
mov
fnstenv
push
add
call
cmp
xchg
or
cmpsb
lods
nopl
rcr
cs
mov
dec
inc
je
popa
idivb
lods
mov
push
rcl
or
out
add
repnz
adc
test
pop
xchg
xchg
scas
jns
mov
xor
jb
dec
cmpsl
loope
out
rorl
imul
jl
mov
jno
sub
das
pop
leave
lods
shl
add
push
mov
sub
push
push
subb
std
pop
add
cmp
cmc
pushf
or
js
mov
stos
sti
ret
std
fwait
dec
cmpsl
inc
jmp
inc
je
adc
cltd
jp
rclb
xor
pop
call
out
lods
xchg
lahf
cmpsb
pop
scas
cmp
sti
push
das
shl
sub
dec
push
lahf
push
outsl
push
roll
inc
cmp
ret
push
hlt
xlat
out
out
int
sti
mov
mov
mov
cwtl
addr16
cmc
adc
jno
fwait
in
push
and
xchg
test
repnz
out
push
cmc
mov
or
mov
xchg
dec
sbb
out
shrl
ss
lret
insb
mov
pushf
xchg
adc
push
repnz
xor
insl
cmp
pop
cmpsb
int3
mov
cmp
iret
mov
es
jge
xchg
aam
adc
mov
aam
add
loope
sub
adc
int3
or
adc
mov
imul
mov
cmpsl
mov
hlt
in
mov
testb
fisttpl
or
cmp
ficoms
push
mov
test
lahf
pop
lock
xchg
dec
xchg
xchg
sarl
adc
pop
out
adc
imul
je
cltd
jae
push
mov
and
push
cmc
loope
es
sub
cmp
ss
insb
daa
or
or
cli
push
jo
push
push
xor
cmp
imul
icebp
outsb
ljmp
pusha
sar
test
mov
jb
pushf
bsr
cli
sti
jb
bound
xchg
mov
neg
xor
adc
and
movsb
jecxz
mov
inc
les
in
xor
std
repnz
cmc
in
lock
push
push
ds
out
lock
mov
xchg
mov
ret
into
je
repnz
repnz
outsb
pushl
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
mov
fistl
sbb
adc
sbb
xor
call
sbb
sbbb
add
dec
out
lret
cmp
lcall
and
test
mov
imul
arpl
inc
and
loop
stos
into
mov
pop
subb
mov
cmc
push
pop
sbb
aas
pop
mov
out
scas
je
movsb
repz
jns
mov
ret
aaa
insl
xor
cli
pop
lret
xor
cmp
int
scas
push
mov
jg
and
and
add
inc
in
pushf
mov
scas
sub
cli
dec
and
add
lea
in
out
sub
sub
pop
add
add
subl
dec
decb
sub
lret
pop
lea
rcl
das
out
daa
and
or
out
out
and
inc
comiss
fimuls
in
inc
mov
mov
push
jmp
sbb
bswap
adc
lods
jg
push
in
pop
sbb
int3
inc
xchg
test
mov
fs
mov
xor
xor
ljmp
xchg
mov
jns
leave
aaa
dec
arpl
enter
rol
mov
sbb
test
repnz
stc
add
xchg
mov
jle
addr16
test
fidivrl
sbb
xor
mov
shrl
cmp
out
mov
cmp
test
and
add
inc
push
std
ret
lea
push
rclb
and
jne
push
mov
popf
es
mov
sti
sub
das
mov
test
data16
subl
push
rcrb
scas
test
inc
int
lcall
mov
adc
ds
dec
and
loopne
subb
mov
fsts
inc
xchg
mov
imull
aam
loope
lcall
scas
lret
imul
mov
jne
add
and
addr16
fidivl
loope
sbb
sub
pop
fwait
in
cmp
mov
push
aaa
inc
mov
dec
cmpsl
add
scas
add
mov
addb
sub
fstpl
cmp
dec
test
sub
stc
xchg
xor
xchg
test
push
cmc
das
xor
inc
aas
subb
sub
popf
or
mov
inc
hlt
test
xor
jne
dec
or
jb
add
es
sti
push
mov
jmp
mov
xchg
sbb
cs
inc
movsb
int
out
lret
and
pop
insl
arpl
loope
jmp
and
roll
xchg
cmp
fadds
sbb
in
sub
aad
cmp
push
adc
dec
and
out
or
mov
mov
mov
mov
ret
jge
fisttpl
iret
inc
popf
add
mov
cld
sahf
xor
sbb
lahf
jge
push
xor
scas
mov
addr16
shll
fsubrl
mov
loop
sub
mov
cmp
sub
cmp
pop
jmp
push
xor
pushf
sbbl
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
fdivrl
mov
rcll
sbb
adc
sbb
jb
inc
nop
rorb
ss
clc
cmp
pop
cmp
and
aaa
jno
mov
push
hlt
mov
sub
imul
xchg
inc
mov
fsubrl
pop
cmp
add
mov
filds
jnp
and
jmp
sub
jo
int3
mov
stos
sub
aaa
ljmp
lcall
push
mov
cltd
jbe
mov
js
popl
cmp
cmp
jnp
push
pushf
ret
sbb
pop
fists
cmpl
pop
fdiv
out
jne
mov
sub
add
lcall
cli
or
or
fimuls
cli
inc
movsb
loop
test
dec
mov
daa
pop
and
imul
dec
ror
in
les
fsubs
cmp
dec
ja
add
jmp
lret
ror
lret
xchg
cmp
or
test
outsl
enter
mov
call
leave
lea
and
mov
push
inc
xchg
je
cmp
es
loope
stos
inc
push
cmp
jnp
call
je
subb
jb
clc
test
es
pop
into
add
and
lret
pop
lcall
adc
mov
inc
jnp
fwait
xchg
in
popl
shr
ljmp
xlat
jecxz
dec
xchg
xchg
stos
pushf
xlat
push
pushf
and
inc
sub
lret
out
xor
addr16
cs
bound
and
insb
scas
or
or
test
sub
sahf
mov
imul
xor
int3
pop
pop
mov
cmpsb
push
lods
bound
mov
mov
adcl
fisubs
jmp
adc
cmp
ror
sub
lea
fmulp
dec
pop
sub
add
pop
push
cs
es
aas
in
in
add
push
scas
dec
xchg
subl
sbb
lret
lods
loopne
aad
lds
es
jmp
and
cs
bound
scas
and
adc
nop
mov
mov
cmp
inc
ret
mov
dec
in
rcr
sbb
ret
in
sbb
cmp
push
movsb
xchg
jge
add
mov
add
sti
lods
or
push
xchg
out
aas
into
adc
push
gs
in
movsb
xlat
repz
das
fnstenv
das
shll
dec
xlat
movzbl
jle
ret
mov
sbb
pop
sub
mov
push
rolb
test
mov
xor
ja
cmp
sbb
cltd
lds
lds
xchg
inc
pusha
sub
daa
cs
jl
repnz
push
repz
out
ret
sbb
leave
fptan
xchg
int
add
aam
in
scas
xor
int3
aaa
arpl
sbb
pop
rcr
adc
iret
scas
xchg
mov
mov
sahf
mov
pop
movsl
push
cwtl
add
dec
pop
push
mov
hlt
mov
push
mov
and
add
jns
leave
pop
push
push
cmpsl
inc
xor
push
xchg
ret
and
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
jne
mov
int
sbb
adc
sbb
outsb
mov
push
stos
and
mov
jmp
lods
cmp
xchg
xor
adc
add
outsl
xchg
push
leave
mov
int3
in
add
test
cmp
inc
mov
jbe
sbb
mov
mov
sarl
and
ds
mov
xchg
idivb
cmc
std
or
insb
rcrb
cmpb
and
outsb
fadds
inc
push
lret
repz
mov
rorb
inc
sti
in
mov
fnstenv
jae
push
cmp
lret
les
lock
xlat
out
xor
cltd
fwait
jle
dec
xchg
mov
jg
mov
xchg
andl
cld
mov
dec
imul
das
sbb
cmc
sub
cmp
xchg
pop
sub
or
out
and
and
imul
inc
or
test
out
daa
arpl
in
cwtl
movsb
subps
bound
inc
dec
mov
inc
lahf
in
sub
mov
mov
add
mov
inc
pop
mov
das
scas
mov
pop
in
jo
mov
mov
cmp
mov
sub
pop
shrb
cmp
out
xchg
adc
into
inc
out
dec
shlb
cs
arpl
in
jns
aas
cli
jns
call
push
pop
inc
and
pop
rcl
arpl
std
sahf
fwait
sbb
dec
cmp
jb
fadd
int
mov
xor
arpl
add
cmp
jl
cmp
and
xor
adc
xchg
cmp
int
scas
addr16
shll
mov
flds
outsb
push
stc
adc
cmp
or
in
popf
scas
scas
sbb
pop
pop
gs
mov
aaa
cltd
or
xchg
jnp
out
insb
das
dec
loopne
jne
outsl
scas
js
mov
or
xchg
jno
xor
cli
es
mov
mov
or
mov
outsl
lods
push
jnp
gs
cmp
pop
cwtl
icebp
dec
push
scas
cmpsl
mov
mov
mov
movsl
fs
adc
cmp
mov
ret
idivl
dec
mov
add
xor
add
jne
jl
mov
into
ds
dec
push
int3
push
das
sbb
addr16
bound
in
ret
leave
pop
dec
into
jne
mov
push
push
push
and
inc
addb
push
mov
movsb
aam
dec
fmuls
imulb
pop
js
xchg
or
in
pop
test
and
fnstcw
adc
add
sub
adc
lahf
xor
inc
jg
adc
out
pop
and
movl
adc
shlb
addr16
or
add
test
cmc
repz
cld
push
cld
orl
je
xchg
sbb
mov
test
out
jp
aad
mov
loop
xor
push
pop
ss
pop
sub
xchg
inc
cmc
pop
shll
add
shll
cmp
pop
aas
cld
or
adc
ljmp
out
mov
fidivrs
mov
cmp
out
xor
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
dec
xlat
mov
sbb
sbb
jmp
pop
cmpsb
test
test
pop
or
push
js
orb
test
icebp
mov
sbb
in
movl
ret
fidivl
fadds
push
cmp
mov
test
in
ds
cmpl
cmp
jge
sub
and
jae
xchg
loop
jnp
pusha
subl
sub
sti
lret
jecxz
mov
outsl
mov
jge
or
fbstp
out
push
stc
jbe
jnp
jns
pushf
and
into
inc
xor
sub
sub
inc
cltd
mov
mov
jb
or
mov
out
push
push
mov
sub
jae
xchg
jbe
xor
and
inc
roll
pop
addb
xor
push
stos
test
sti
fdivrs
cmp
shrb
lock
fs
or
or
dec
bound
ljmp
imul
dec
shl
sub
rorl
mov
jp
add
stc
mov
pop
movsl
mov
out
jbe
add
lret
cmp
jno
mov
es
dec
or
mov
ret
and
sbb
loope
jb
or
cld
xchg
mov
pop
dec
outsl
adc
cmpsl
insl
mov
xchg
out
loopne
pop
mov
and
mov
in
pusha
pop
pop
loop
das
les
lods
stos
pop
fisttps
inc
mov
mov
int3
fs
jb
pop
fnstenv
or
push
stc
mov
pop
in
out
pop
lock
cmp
bound
test
inc
cmpb
test
movsb
cmp
ja
jmp
insl
and
push
inc
or
dec
dec
stc
lret
mov
push
xchg
or
repz
mov
pop
mov
pop
insb
dec
xchg
shr
mov
jae
dec
mov
sbb
cmpsb
sub
adc
add
ret
jbe
and
dec
sub
add
ffreep
push
ds
jnp
or
fs
cmp
pop
mov
imul
scas
or
cltd
lahf
lods
cwtl
dec
inc
shr
cmp
push
sub
push
in
aam
pop
add
das
push
pusha
rol
mov
filds
mov
or
imul
repz
xchg
repnz
push
jo
cmp
outsb
lds
arpl
fucom
mov
jg
mov
mov
xchg
stos
xchg
push
and
popa
int
xchg
inc
pop
cmp
sub
sub
mov
or
les
xor
mov
cmpsl
aam
in
aaa
cmp
mov
ret
jns
sbb
out
mov
ret
inc
arpl
dec
cli
dec
das
ss
mov
adc
pop
popf
inc
pop
pop
fmull
inc
fprem
popf
movsl
sbb
lds
dec
or
pop
fdivs
sbb
fsubr
imul
fstpl
adc
js
xchg
mov
loopne
data16
fildll
mov
das
cltd
and
lret
dec
jle
fidivrs
aam
insl
and
sub
lods
fdivr
pop
popf
add
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
mov
sbb
js
push
mov
dec
xor
mov
fdivs
es
out
add
test
cltd
push
push
jne
lock
push
movsl
push
out
pushf
lret
jno
addl
sbb
mov
sti
aam
jno
add
fidivs
cld
lahf
adc
jmp
int3
xchg
jle
dec
cmp
mov
addr16
mov
scas
dec
ds
inc
lds
je
nop
lcall
fiaddl
add
or
pop
addl
cwtl
adc
dec
cmovg
jmp
sbb
cmp
mov
dec
jno
les
or
xor
fdivr
dec
cs
lea
stc
pop
dec
daa
fidivs
je
scas
inc
and
xor
addb
js
insl
ja
inc
jmp
rclb
cltd
cmp
xchg
scas
dec
lret
or
lods
push
data16
das
or
or
test
rorb
xor
out
aaa
sbb
jge
pop
jg
push
ss
addr16
outsb
sbb
scas
into
repnz
mov
insb
mov
lock
aad
cli
sub
push
bsf
shlb
inc
cmp
push
sbb
dec
inc
test
or
mov
or
xor
mov
movsl
into
or
movsb
or
xchg
pushf
fmul
lret
cs
paddd
push
ja
sub
cmp
xor
mov
or
mov
xchg
aas
fdiv
xchg
in
xchg
int
xor
cmp
dec
es
dec
mov
dec
lea
imul
int3
xchg
iret
cmp
fstpl
jmp
xchg
aas
push
int3
fidivs
add
xor
sbb
jne
sub
mov
ret
adc
jnp
jbe
je
add
repnz
in
mov
and
in
clc
ficomps
dec
push
jnp
stc
sub
repnz
push
or
orb
jnp
or
and
add
ljmp
lret
sub
daa
cmpsl
and
cmpsb
out
adc
cmc
mov
int
loopne
es
xchg
dec
hlt
add
icebp
xor
mov
les
pop
lods
pop
xor
inc
sbb
idivl
call
ret
imul
mov
xorb
in
mov
add
adc
scas
mov
cli
in
das
jecxz
and
loop
es
push
shll
std
mov
xchg
adc
add
sbbl
mov
dec
stc
pop
dec
add
and
andb
bound
and
insl
sbb
pop
push
pop
inc
jns
xor
enter
jle
nop
pushf
clc
das
pop
insl
sbbb
iret
xlat
push
mov
sub
stos
and
das
icebp
jnp
fldcw
or
sub
cltd
stos
and
das
mov
cmp
outsb
xchg
mov
or
out
add
hlt
sbb
aad
mov
mov
mov
push
push
mov
pop
mov
cmp
pop
xchg
mov
cmpsb
cmp
push
xlat
roll
lcall
dec
ret
jle
push
leave
fiaddl
mov
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
or
divl
push
sub
cmp
mov
fcmovne
xlat
cmp
mov
mov
sti
shlb
cmpsb
lods
xor
cmp
push
mov
es
outsl
aam
add
rol
mov
jbe
mov
and
dec
ror
mov
sub
into
ljmp
xchg
mov
jno
mov
mov
mov
mov
cltd
lods
pop
jmp
mov
mov
jns
aam
sbb
jns
or
rcrb
jmp
push
cmpl
lahf
sti
mov
mov
pop
inc
adcb
stos
mov
jmp
or
scas
mov
xchg
sti
adc
dec
xchg
maskmovq
imull
cmc
dec
jb
enter
lods
sbb
add
jnp
fs
push
dec
in
sub
xchg
mov
dec
cld
pop
sahf
mov
cmpsl
dec
jp
fs
pushf
mov
les
imul
aam
mov
inc
js
sbb
dec
and
mov
or
cmp
inc
subb
sahf
push
jns
mov
ret
les
jle
cmp
out
movsl
and
jne
je
mov
test
mov
repz
jle
js
sub
loop
push
jne
into
fsubrs
inc
std
jbe
stc
hlt
mov
mov
negl
pop
cmp
in
xchg
rolb
jg
adcl
repnz
mov
mov
mov
dec
mov
aam
sbb
sub
aas
divb
mov
das
test
xchg
adc
or
jne
repnz
popf
add
scas
add
jg
cmp
stc
xchg
dec
adc
int3
adc
gs
js
stos
mov
addb
or
les
cs
lret
int
out
jecxz
mov
aaa
adc
mov
and
inc
mov
adc
mov
xlat
cmp
sahf
xchg
sub
sahf
out
arpl
mov
pusha
mov
clc
mov
jle
cmc
enter
icebp
mov
or
mov
adc
sbb
mov
int3
dec
mov
stos
scas
pop
mov
dec
or
jge
inc
sub
out
movsl
cmp
popa
mov
push
dec
dec
cltd
mov
mov
inc
loopne
dec
jae
subl
pusha
leave
in
jecxz
xchg
lret
fldl
inc
outsl
jg
lret
outsl
inc
mov
mov
mov
and
pop
mov
dec
in
imul
aas
filds
or
icebp
and
in
inc
call
push
addr16
push
inc
movsb
fidivrl
popa
jmp
xchg
or
enter
push
popf
xor
je
pop
arpl
lret
mov
jae
mov
and
inc
negb
xchg
lret
adc
frstor
dec
mov
pop
movsb
aaa
lahf
add
fwait
hlt
movsb
shlb
push
mov
dec
out
xor
or
push
hlt
stos
gs
mov
sub
mov
bound
es
and
push
xchg
sub
inc
rcrb
add
test
pop
jg
cmpsb
iret
add
push
stos
sub
adc
add
inc
cmp
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
jge
xor
test
pushf
sti
xor
add
ljmp
std
into
mov
mov
popf
adc
and
xchg
pusha
cmp
add
insl
je
rdpmc
adc
shr
push
pop
xorl
pop
pop
out
mov
mov
inc
rclb
jmp
jb
dec
fiaddl
and
call
pop
outsl
push
xchg
push
pusha
sbb
stos
out
push
test
out
aam
test
mov
sbb
xchg
pop
arpl
loop
sub
sti
push
or
sbb
mov
jbe
daa
lds
inc
mov
jno
cmc
pop
insl
dec
xor
cmp
out
push
lret
mov
outsl
xchg
stos
lcall
out
lret
mov
addl
inc
insl
roll
inc
js
fwait
pop
pop
out
outsb
lds
call
jmp
jmp
add
loope
xchg
fs
push
push
je
add
lea
xor
mov
div
jge
hlt
jp
fnstenv
or
movsl
or
in
call
mov
add
xor
jge
sub
sbb
xchg
mov
xchg
jnp
mov
mov
mov
pop
data16
sub
push
xor
pop
shrb
sbb
test
add
push
jl
inc
stos
movsb
lahf
mov
add
inc
mov
call
cmc
enter
js
cmp
cmpsl
push
jnp
jae
rcrb
repz
push
ror
std
imul
pop
push
pop
push
rolb
add
jno
mov
test
das
sbb
incl
push
int3
shlb
pop
or
jecxz
inc
mov
sbbb
push
or
dec
sbb
add
add
aam
repnz
inc
sbb
mov
imul
les
pusha
push
mov
push
xorb
sub
sub
sbb
sbb
and
loopne
pop
cmpsl
fidivrs
popa
mov
rolb
mov
or
out
xchg
test
cmpsl
lret
jbe
push
mov
clc
inc
fwait
addr16
mov
sbbb
sbb
inc
mov
add
push
cld
movsl
movsb
mov
shll
arpl
mov
test
xchg
lods
fildl
in
lahf
dec
fnsave
jno
std
fldcw
and
inc
pop
and
xchg
mov
sub
das
pop
xor
pushl
dec
jg
mov
xchg
jnp
ficomps
or
notl
repnz
je
inc
aad
pusha
leave
push
lds
in
loope
js
cs
cld
adcb
scas
or
sub
push
fbstp
mov
or
add
cs
fisubrl
inc
enter
mov
xchg
movsb
fwait
lods
xor
shr
cmp
insb
std
add
shr
dec
cltd
shll
sahf
ljmp
sub
push
int
push
xor
adc
pop
stos
cmc
inc
fucomip
mov
arpl
lods
pop
loope
fistpll
adcb
loop
xor
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
xchg
imul
cmpsl
push
fists
sahf
xor
clc
dec
scas
imul
jo
cmp
sbb
or
ds
data16
jmp
out
sub
in
test
in
push
rcrl
fs
mov
mov
xchg
mov
mov
mov
cmpsl
loopne,pt
inc
xchg
cmovg
and
lahf
icebp
add
aam
and
inc
mov
cmp
cmp
xor
rol
xchg
mov
pusha
mov
push
push
mov
bound
sub
aaa
popf
mov
mov
sub
add
push
mov
dec
ret
mov
mov
xor
call
cli
cmp
pop
inc
pushf
orl
jmp
jnp,pn
pop
push
adc
pop
push
sub
and
data16
je
scas
adc
or
sbb
call
fsubrs
andb
xchg
je
gs
cs
pop
mov
adc
mov
jmp
adc
add
jb
fstps
stos
jmp
cmp
sbb
data16
adc
push
sar
ret
mov
cli
xchg
rorl
jl
lret
xchg
sbbl
fwait
push
xchg
xchg
mov
icebp
inc
fildll
test
insl
sbb
or
xor
dec
lcall
push
add
aas
cmpl
xchg
neg
cwtl
mov
adc
mov
dec
stos
sub
subl
lock
xchg
icebp
loope
into
add
imul
jmp
incb
ret
pop
adc
sbb
dec
repz
adc
push
adc
cmpsl
add
add
sbb
pop
lods
sti
loop
sub
mov
outsb
repnz
ljmp
sub
mov
call
in
cmpl
mov
mov
mov
sub
movsb
and
inc
inc
decl
mov
scas
mov
repz
fxch
ret
pop
mov
jbe
aaa
push
mov
push
mov
pop
stos
push
adc
mov
xchg
mov
clc
xlat
jns
add
push
xchg
xor
cmc
leave
cmp
jg
xchg
lods
cmp
subl
sarl
mov
push
mov
rclb
dec
push
in
pop
mov
icebp
mov
xchg
sbbb
lods
and
adc
sub
stos
push
outsb
adc
xchg
inc
mov
xchg
sub
and
sub
loopne
rcll
out
inc
and
mov
and
movsl
add
iret
cmpsb
sub
mov
cli
adc
orb
scas
mov
mov
ja
out
inc
cmp
popf
shrb
loope
cmp
or
inc
jle
fcomps
imul
mov
dec
cltd
pop
jae
idivl
mov
adc
dec
sti
sbb
or
and
movsb
js
jp
movsl
int
sbb
xchg
push
jmp
mov
pop
adc
rclb
cmpsb
pop
stc
xchg
jo
rorl
fstpl
arpl
test
push
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
adc
adc
push
mov
sbb
mov
add
mov
leave
cltd
push
ret
push
daa
dec
inc
push
daa
mov
addr16
rcl
push
enter
xchg
rol
pusha
into
push
fldl
cltd
insl
scas
xchg
out
cld
leave
test
rclb
mov
push
imulb
leave
jecxz
pushf
aam
fisttpll
sbb
mov
cmp
lcall
jl
mov
cltd
xchg
inc
add
push
inc
jge
arpl
mov
test
popa
leave
test
sbb
testl
pusha
dec
jmp
push
xchg
add
add
dec
cmovl
rorb
sub
dec
push
stos
sbb
int3
cwtl
jmp
iret
or
in
xor
cltd
dec
jmp
mov
mov
jle
pop
fsubrl
mov
jecxz
gs
push
sub
xchg
je
adc
pop
mov
es
jl
mov
lret
arpl
es
loop
div
mov
outsl
jmp
lret
aam
aas
xchg
bound
dec
push
cmpsl
fs
fucompp
and
xchg
adc
stc
aas
inc
mov
ret
std
pushf
clc
loop
cmp
xor
push
hlt
push
cwtl
mov
inc
clc
stc
xchg
and
pop
frstor
in
cmpsl
jg
aam
sarl
pushf
xchg
movsl
xchg
fs
dec
iret
lods
out
mov
fdivrl
test
or
stos
aas
lret
mov
pop
add
mov
outsb
out
push
test
inc
shll
lahf
mov
pusha
sti
fcomps
or
outsb
outsb
mov
xchg
dec
ret
shrb
outsb
fstps
or
mov
and
jmp
push
out
inc
mov
pop
outsl
leave
iret
fucomip
in
pop
push
dec
loopne
adc
fwait
or
jbe
sub
jmp
pop
and
popa
repz
push
lcall
lcall
test
or
out
and
mov
pushf
je
mov
or
idivl
aas
sbb
adc
add
push
jno
mov
pop
add
pop
cmp
xchg
ljmp
mov
pop
andl
fdivs
or
in
jae
test
mov
jp
stos
daa
aas
lret
subb
sub
test
repz
cmp
add
jbe
add
push
sub
lahf
sbb
repnz
push
outsb
or
xor
mov
inc
inc
hlt
cmc
sbb
ds
jg
mov
push
xor
lahf
push
into
jae
fyl2xp1
or
cld
pop
xor
stos
mov
xchg
lock
inc
xchg
xchg
mov
incb
cli
mov
dec
jb
ja
xchg
pop
rcrb
incl
btc
or
orb
jne
fwait
inc
sub
or
pop
push
loope
sub
lock
clc
pusha
jne
jp
and
inc
gs
mov
cld
lds
or
dec
push
jl
lret
or
or
flds
pop
lds
or
ljmp
add
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
dec
in
mov
and
sbb
push
xchg
mov
mov
adc
fcomps
daa
ret
xchg
int3
shll
repz
test
jecxz
and
test
test
lock
xlat
xor
pop
scas
push
sbb
sub
icebp
aam
and
arpl
enter
lret
sti
movsb
test
or
lret
mov
inc
cmp
cwtl
idiv
lds
lods
scas
xchg
jg
add
daa
gs
push
lods
jo
test
mov
adc
xor
and
loopne
imul
sub
xor
inc
icebp
and
mov
pop
dec
loop
lea
loop
pop
inc
push
mov
add
inc
in
jecxz
outsb
push
or
cli
inc
sbb
mov
dec
or
sti
mov
mov
fs
mov
cli
lock
sub
fbld
mov
or
or
sahf
xorb
inc
push
jge
add
imulb
xor
pop
rol
fstl
mov
jle
push
or
adc
sbb
inc
dec
xor
xchg
mov
mov
in
es
loope
push
insb
pop
mov
mov
mov
jge
lcall
cmp
inc
out
push
dec
sbb
xchg
or
popa
mov
addr16
test
pop
and
xchg
popa
xchg
jge
inc
inc
and
clc
pop
addr16
pop
incb
dec
push
or
inc
hlt
and
add
inc
cmpsb
lahf
pop
mov
push
sbbb
push
mov
in
pop
leave
stos
sbb
xchg
pop
or
mov
rol
dec
dec
inc
stos
fcomi
mov
out
daa
mov
test
sub
mov
pop
and
repnz
mov
jne
inc
mov
out
mov
lods
xchg
repnz
jecxz
pop
pop
push
cld
mov
jnp
and
xchg
dec
push
je
push
scas
rorb
iret
and
dec
cwtl
add
lea
add
ficoms
and
inc
movsl
mov
jo
ret
xchg
je
test
stos
push
cmpsl
movsl
sarb
cld
shll
mov
mov
fwait
bound
push
ret
mov
mov
xchg
sub
lahf
les
test
es
inc
sub
jmp
pushf
pop
addr16
jl
cmpsb
jo
movsb
in
xchg
xchg
jno
xchg
icebp
push
sub
jl
mov
cmp
xlat
xchg
fwait
push
mov
sub
loopne
js
jp
mov
inc
addl
push
or
les
shrl
push
outsl
lea
or
add
mov
iret
sti
and
push
icebp
xchg
mov
push
popf
add
push
aaa
insl
fwait
rcrb
sar
fwait
mov
sub
out
mov
inc
movsb
cmp
xor
jno
cmp
jnp
pop
sbb
gs
inc
je
pop
lret
fisubs
dec
cmp
or
pushf
sub
insb
loope,pn
mov
insl
mov
pop
clc
call
and
mov
shl
xor
rcr
rclb
mov
std
nop
or
mov
stc
mov
loope
dec
mov
lcall
and
xchg
sbb
shlb
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
int3
inc
push
xchg
push
sbb
adc
sbb
or
mov
push
cmp
mov
pop
hlt
ds
or
mov
lds
dec
in
mov
sub
repz
idiv
push
and
pop
jp
add
lock
inc
xor
inc
dec
sub
push
mov
dec
adc
into
adc
cmp
notb
ret
mov
sub
fsubr
aaa
cld
cmp
clc
push
pop
call
push
stos
aaa
addr16
lock
cmpsb
scas
jnp
sbb
je
out
sbb
repz
lods
mov
adc
ss
sbb
and
mov
cld
aad
rclb
jnp
push
out
xor
inc
hlt
cmp
popf
xchg
fcoms
movsb
mov
push
sub
sbb
pop
ret
adc
rorb
gs
outsb
dec
cmpsl
pop
mov
mov
jae
xchg
xor
fildl
fwait
push
rorl
jo
fcmovb
sahf
aas
cmc
pop
adc
mov
into
jp
sbb
jl
mov
lret
sbb
xchg
cmpsl
mov
call
inc
xchg
mov
and
pop
es
popa
sub
xchg
insb
in
mov
enter
sti
jo
adc
push
outsl
arpl
test
lods
jo
cmp
rcrb
inc
add
out
nop
addr16
xchg
xchg
sub
scas
push
cltd
sub
xor
cmp
mov
inc
pop
mov
fists
jo
push
pop
mov
mov
test
pop
stos
push
je
sbb
sub
sbb
inc
mov
int
pop
mov
mov
xor
jno
stos
adcl
mov
add
and
sub
dec
popf
mov
sbb
and
pop
mov
jp
sub
xor
add
push
nop
es
insb
dec
cli
jmp
sub
mov
fninit
sbb
loopne
idiv
sti
cmp
cmp
fcompl
scas
jl
jp
push
or
shrb
inc
jp
push
mov
scas
stc
xorl
mov
adc
push
ror
mov
and
mov
cltd
inc
pushf
inc
jmp
or
dec
sbb
push
mov
test
add
test
inc
cld
into
xorb
jl
test
sbb
jle
lock
xlat
lret
xor
clc
sub
inc
cmpb
or
xor
mov
pop
push
xor
dec
sbb
adc
dec
fdivrl
test
add
pusha
rolb
push
cli
and
dec
dec
ds
push
sahf
sahf
addl
out
cmc
inc
xchg
dec
fidivrl
cmp
sarl
stos
out
and
loopne
pop
push
adc
test
test
fidivl
add
lea
or
xchg
cs
add
xor
sbb
jb
pop
pop
sub
mov
leave
cmp
stc
lcall
xchg
mov
cmp
aaa
test
cwtl
lahf
xor
call
test
jns
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
jg
add
outsl
lea
sbb
adc
sbb
add
add
pop
cmpsl
mov
dec
bound
and
nop
fimuls
pop
es
jns
pushf
movsl
push
arpl
lods
popa
xchg
mov
jmp
mov
xchg
rcll
or
xor
jg
pop
out
xor
pushf
mov
mov
or
movsl
jnp
pop
add
mov
popa
jbe
inc
adc
jae
push
mov
repz
pop
add
lods
mov
adc
sti
loop
add
call
add
sbb
push
inc
pop
icebp
and
adc
gs
enter
jp
mov
sub
pop
icebp
js
mov
jle
in
shlb
leave
mov
jg
subb
stos
mov
ljmp
fxch
aad
movsb
xor
push
ja
stc
add
es
movsl
jns
insb
cwtl
adc
inc
push
mov
ds
test
adc
cmp
add
cmp
push
insl
or
hlt
dec
out
jmp
adc
and
lret
mov
xchg
push
or
ret
pop
movsb
pushf
rolb
fwait
stos
lcall
fiaddl
and
and
cmp
pop
out
call
cmp
lret
addl
lods
sbb
xor
sbb
adc
int
jbe
lods
imul
xchg
out
xor
stc
test
cmpsl
pop
inc
lock
in
dec
lods
jne
or
nop/reserved
inc
cmpsb
or
lcall
lock
loope
in
fsubl
dec
mov
jnp
fimuls
arpl
insl
out
cmp
dec
rcrl
out
ljmp
popa
cld
cld
dec
call
popa
sub
sbbl
mov
xor
dec
paddw
cmc
cs
incb
insb
mov
outsb
int
sub
notl
sbb
mov
lret
add
ja
sahf
xor
mov
cwtl
and
lret
add
sbb
xchg
push
sbb
push
xorl
jg
add
xor
aas
jmp
leave
sbb
daa
pop
sbb
or
xchg
nop
pop
js
inc
ljmp
repz
pusha
mov
pop
push
add
mov
mov
popa
cmc
enter
and
pop
cli
add
in
pop
hlt
mov
sub
mov
mov
adc
push
xchg
dec
fsubs
je
pop
push
rol
xchg
add
add
xor
fildll
jg
inc
movl
lcall
lahf
jmp
clc
inc
push
dec
push
cwtl
lret
test
pop
mov
movsb
ffreep
mov
pop
mov
cld
mov
xor
jae
cmpsl
dec
pushf
mov
nop
clc
dec
xchg
movsl
add
je
mov
cmp
mov
aaa
jne
fisubl
fidivrl
les
mov
pop
add
add
mov
push
es
movsl
xor
addr16
mov
adc
inc
dec
mov
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
sub
push
xchg
sbb
adc
sbb
cmpsl
jnp
gs
add
inc
test
dec
jne
jl
mov
pop
les
pcmpgtd
cmp
jle
ljmp
inc
inc
pop
popf
inc
push
fcmovnbe
pop
cld
sbb
add
dec
sti
out
fs
and
pushf
mov
pop
addr16
lods
scas
das
xchg
out
jle
mov
sarb
lock
cmp
clc
cmp
fsubrl
jp
jo
and
mov
es
add
flds
int3
sbb
and
or
inc
or
push
stc
xchg
sbb
cmpxchg
jo
aas
inc
clc
add
cmp
aad
enter
and
jg
pop
jge
push
les
fsubs
and
out
pop
push
push
mov
call
dec
cmp
fldcw
lret
into
gs
pop
popf
stos
adc
mov
add
ficomps
push
add
into
mov
mov
data16
push
xchg
insl
mov
idiv
mov
rcll
or
jmp
inc
sub
inc
stos
cli
mov
stc
and
and
outsb
push
mov
sub
jp
xchg
int3
push
fs
jg
lret
jo
push
dec
xchg
cmp
mov
mov
xchg
xlat
push
adc
mov
fwait
adc
imul
test
cmp
sub
popf
rorl
and
jecxz
push
push
inc
loopne
pop
sar
mov
orw
int
mov
jb
shl
daa
or
push
rolb
cmpb
sti
jb
dec
push
lret
enter
ret
xchg
lret
cli
xchg
aas
in
pand
jo
pop
test
jne
jmp
xchg
imul
and
stos
fcoms
xor
and
push
aas
push
pop
orb
js
sub
pop
pop
jnp
rcr
test
ja
pop
std
dec
stos
xchg
addr16
push
or
adc
sub
cmp
int3
inc
xchg
shr
repz
repnz
mov
mov
paddsb
insb
adc
jns
pop
xchg
les
fcomi
pop
mov
mov
je
lahf
gs
jecxz
ljmp
inc
push
and
mov
mulb
arpl
pop
out
inc
cltd
push
scas
push
mov
mov
test
sar
dec
andl
aaa
sub
test
pusha
inc
ret
sahf
loopne
shrl
jne
jbe
jno
jg
mov
mov
inc
lret
push
sti
or
cld
jecxz
popf
sti
inc
ss
and
andb
outsl
incb
sub
jno
bound
xor
mov
mov
rclb
out
push
cmpsb
mov
rclb
pop
or
pop
push
xchg
rclb
cli
xchg
cmp
pushf
sbb
push
repz
arpl
mov
repnz
cmp
push
sbb
mov
pop
push
leave
in
inc
out
push
add
stos
fisttps
insl
and
mov
jae
pop
inc
fstps
mov
or
xor
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
jo
jg
sbb
adc
sbb
hlt
mov
insb
gs
popf
dec
sub
xor
mov
dec
and
je
sub
fbld
mov
inc
rcr
xchg
rol
xor
lret
outsb
push
out
or
adc
insl
sbb
jno
data16
rorl
icebp
mov
and
jl
pop
mov
inc
inc
test
addl
loop
pop
imul
add
lret
aam
test
pop
pop
in
cltd
fstpt
cwtl
pusha
lds
xchg
iret
out
mov
fcmovnu
fcomps
lret
and
adc
insb
xor
xchg
jo
int
dec
shlb
or
add
xchg
ds
mov
cmpsl
cmpsb
jp
mov
call
inc
add
fwait
aaa
clc
mov
mov
mov
jp
addl
xlat
sub
stos
sbb
dec
stc
rolb
pusha
in
mov
mov
dec
cmp
call
push
xchg
mov
xor
push
push
add
pop
sbb
das
adc
or
jp
out
jb
iret
mov
xor
fs
cmp
je
and
test
addw
out
inc
lcall
inc
push
dec
fdivrs
and
mov
push
out
clc
mov
mov
jp
movsb
xchg
sub
mov
in
mov
jbe
in
outsb
dec
call
stc
jne
popa
mov
push
mov
push
ds
mov
lods
mov
ret
xor
mov
and
push
xlat
out
fucomip
sub
jo
mov
aas
mov
xchg
mov
pop
xor
das
jmp
inc
jnp
ficomps
imul
int3
push
push
loopne
or
lods
pop
cld
adc
push
addr16
mov
insb
inc
fistl
pop
ljmp
fnclex
and
mov
push
dec
inc
pop
sub
mov
movsl
movsl
push
addb
push
ficoml
mov
jge
mov
sahf
mov
push
dec
mov
add
pop
ficoml
xlat
mov
neg
pushf
add
unpcklps
adc
pop
sub
fsubl
xchg
add
inc
mov
jnp
and
ds
lret
dec
or
jae
xor
dec
pop
push
sub
stos
push
push
hlt
pop
icebp
push
fsubrl
fnsave
inc
cmpsl
incb
cmpsb
sbb
inc
xchg
addr16
lret
outsl
xor
sub
push
ror
sbb
mov
std
mov
xchg
into
out
loope
xchg
stos
mov
imul
mov
inc
cli
jge
jbe
push
or
mov
sbb
adc
in
ds
mov
lods
mov
mov
aaa
jmp
sbb
fwait
sti
push
dec
jae
loop
and
test
test
lea
loop
pop
add
mov
sub
mov
inc
fldl
fisttps
out
jp
adc
cmc
fcmovnb
shrl
cli
iret
dec
test
ret
jbe
or
in
or
test
jb
pusha
in
je
push
and
leave
cmpb
mov
inc
jmp
xor
add
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
mov
jns
sbb
adc
sbb
test
pop
add
add
mov
mov
sub
mov
icebp
cld
out
sbb
dec
std
push
mov
inc
push
stos
mov
mov
rcrb
icebp
jle
push
icebp
inc
push
or
enter
stos
js
push
test
jecxz
sub
dec
sub
jg
rcl
mov
repz
sbb
jae
dec
lods
iret
mov
je
add
jmp
bound
xor
adc
xchg
fwait
mov
cmp
nop
xor
or
movsb
mov
rol
fiadds
push
and
jo
mov
inc
cmp
jp
orb
xor
movsb
sub
xor
pushf
aas
insl
outsl
push
jnp
cmp
inc
ss
pusha
mov
stos
cwtl
add
mov
mov
lds
shl
adc
incb
ret
pop
test
xchg
push
dec
push
scas
xchg
sbb
mov
fcoms
xchg
push
insb
mov
std
push
xor
mov
xchg
sbb
push
inc
push
mov
fistpll
adc
jg
mov
dec
xchg
xchg
cmp
call
xor
popf
aad
hlt
xor
jle
clc
sub
mov
ljmp
fwait
and
cmp
scas
push
mov
mov
sub
scas
pop
fsubrs
sub
outsb
mov
clc
bound
lret
xchg
fistps
lds
cmp
dec
and
and
mov
leave
lahf
cmpb
mov
inc
mov
pop
icebp
mov
or
push
jle
sarb
in
scas
xchg
jle
adc
subl
je
pop
and
pop
fadds
add
sbb
lods
xor
cli
sub
pop
pop
repnz
push
jno
jg
sbb
or
push
and
test
and
cld
mov
or
add
fwait
sub
setp
lods
call
sub
jmp
clc
mov
ds
add
xchg
and
pushf
xchg
sub
sbb
cmp
lret
mov
jns
lahf
lret
jecxz
jle
fmuls
pop
je
repnz
insb
test
pop
lcall
jno
sub
popa
sbb
or
sub
loop
jb
mov
jle
adc
cmp
sub
lea
sbb
sahf
lds
sbb
aam
iret
adc
jnp
ret
jbe
jecxz
push
daa
test
jns
fldenv
test
sub
lret
add
bound
cltd
call
xor
mov
inc
add
jbe
test
inc
add
subl
divl
mov
mov
sbb
inc
sbb
xor
mov
jne
pop
jo
jbe
pop
loopne
clc
test
pop
xchg
add
aas
jns
xor
jecxz
sbb
lds
mov
xlat
inc
sahf
ljmp
xor
stos
cmp
sbb
es
pop
cmpsb
rolb
dec
lds
jne
jle
or
and
add
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
movsl
lea
jno
sbb
adc
sbb
js
pop
ror
add
fs
xor
aaa
inc
lcall
inc
ret
add
popf
test
test
cmp
popa
add
js
xlat
inc
in
push
jnp
cltd
cli
push
and
sub
std
add
pop
sub
adc
xor
test
dec
into
scas
rol
ljmp
sbb
mov
cmpsb
outsl
jno
popf
cwtl
mov
mov
dec
jmp
sbb
mov
push
hlt
push
mov
mov
sbb
enter
loopne
jg
repz
dec
jno
cmp
adc
movb
or
jl
jno
out
xor
movsb
sbb
hlt
pop
lods
cwtl
xchg
jmp
adcb
add
pushf
test
sbb
testb
push
lock
cmp
push
cmp
xchg
repnz
mov
xchg
popa
leave
push
ret
push
jns
clc
inc
pop
jg
dec
dec
fsubrs
inc
and
mov
icebp
inc
mov
pop
dec
add
and
scas
adc
js
xor
push
addr16
test
add
xlat
mov
stc
fcoml
in
fimull
sbb
repz
pop
stc
je
adc
sub
adc
mov
and
xchg
xchg
enter
es
int3
jnp
and
xchg
cwtl
inc
insl
cmp
mov
lret
outsl
cmp
xchg
add
inc
lds
dec
or
push
cs
gs
xlat
test
jmp
sub
lcall
jns
xor
add
enter
in
adc
push
ftst
ljmp
jp
push
sbb
leave
loop
outsl
jb
push
lea
jl
fmuls
mov
jb
inc
mov
mov
push
xor
sar
push
pop
aad
ret
sbb
inc
cmpsb
push
sub
xchg
sbb
sbb
inc
push
xlat
jmp
div
fstps
cmp
cli
fidivrs
imul
psubd
sub
stos
aas
inc
mov
shll
inc
je
repz
ljmp
add
lret
loopne
sbb
mov
dec
repnz
stos
mov
sbb
jp
sub
enter
mov
mov
mov
xor
out
ja
xor
rcl
push
xlat
mov
cli
cmpsb
add
inc
mov
lea
jge
adc
test
lret
lret
fucomi
shl
push
ret
cmp
jle
add
lds
pop
and
loopne
push
push
jnp
nop
out
mov
push
pop
xchg
mov
call
test
xchg
push
xchg
test
sub
cwtl
aas
inc
shrb
sbb
push
and
add
or
loopne
mov
pop
pop
add
sub
and
fdivrl
adc
dec
int
clc
push
stc
xchg
dec
pop
in
and
aad
in
push
cmp
loope
pop
and
dec
push
fs
orb
push
dec
stc
shl
test
outsl
fdivs
pop
xchg
sbbb
aaa
shrl
inc
inc
mov
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
xor
push
imul
and
sbb
xchg
jae
sub
adc
sti
out
insl
jb
push
dec
jp
inc
xchg
xchg
or
ja
pop
imulb
fwait
rcrb
jbe
out
lock
test
outsb
pop
pusha
cmc
sbb
adc
pop
lds
add
sub
adc
cmp
not
mov
lea
mov
rorl
inc
push
adc
js
movsb
call
pop
cmp
push
jp
xor
aam
sbb
lds
hlt
push
outsl
test
rcrl
cmp
sbbb
enter
jb
add
jno
jecxz
adcl
lods
jmp
pop
int
sub
sbb
pusha
cmp
movsb
push
aad
pop
push
mov
stc
mov
int3
push
sub
nop
push
out
adc
out
cmp
push
add
movl
sub
dec
push
pop
pop
testl
loop
mov
jle
sub
and
mov
xchg
xchg
lea
push
push
xchg
icebp
and
cmp
inc
dec
push
popa
stos
aaa
sbb
ret
aas
inc
jge
cmp
outsl
mov
aas
les
out
std
pop
imul
mov
leave
push
jnp
cwtl
mov
stc
push
mov
xorl
xchg
jl
mov
mov
mov
mov
pop
fdivr
ss
xchg
iret
test
sub
insl
icebp
aas
cmpsl
inc
loop
xchg
inc
aam
cltd
scas
fldl
hlt
shl
subl
jp
cmp
sub
mov
js
int3
mov
cmp
mov
or
mov
and
xchg
jbe
fdivrl
fistpll
dec
aaa
pop
or
loope
xchg
sub
sbb
arpl
xchg
out
pop
add
sub
nop
and
and
ror
faddl
fisubrs
xchg
scas
jbe
jns
cmp
mov
les
ficoml
sub
pop
out
mov
cs
jb
hlt
cwtl
pop
xchg
hlt
daa
rcrl
test
sahf
adc
call
movsl
mov
pop
lods
aad
fwait
ja
adcb
out
sahf
int3
jmp
inc
jp
jl
cli
or
test
adc
xor
div
jbe
sub
stc
mov
push
mov
loope
rcr
ss
push
xor
imul
jnp
jl
int3
imul
cli
leave
mov
xchg
xchg
shr
mov
dec
rcll
inc
adc
sbb
mov
jmp
lods
stos
add
ljmp
mov
fadds
mov
dec
ret
mov
push
pop
aaa
movsl
pop
pop
mov
outsb
fcompl
and
adc
aaa
outsl
push
mov
or
sbb
push
aam
and
dec
ljmp
ret
jno
daa
push
push
leave
inc
jmp
mov
ljmp
mov
xor
fsub
xlat
lahf
sub
out
out
dec
bound
test
jno
shl
jbe
outsl
outsl
mov
push
leave
in
lcall
xor
scas
mov
cld
mov
shll
xchg
or
lea
jnp
rclb
cmpsb
arpl
or
mov
movsb
xchg
xor
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
xchg
push
mov
push
sbb
adc
sbb
lds
adc
sbb
int3
push
mov
xchg
xor
mov
mov
mov
pop
in
cmpsb
je
pop
add
pop
call
xchg
jae
rclb
cmp
or
cmp
dec
test
inc
popf
jmp
inc
fmull
or
cld
fisttpl
sub
insb
lret
cmp
dec
pop
daa
dec
movsl
inc
or
push
or
movl
sbbl
je
cmpsl
xchg
fdivl
stos
out
mov
adc
sbb
inc
mov
out
jo
jmp
or
out
int3
push
mov
aas
cmp
push
ss
xchg
xchg
and
dec
mov
repnz
js
xor
add
push
mov
test
rol
xor
ds
or
jmp
lahf
cli
movsl
repz
xor
adc
out
jae
lahf
dec
or
popf
stos
jns
mov
jle
repz
iret
or
in
and
addl
test
in
lcall
adc
sti
sub
cmpsb
xchg
repz
xchg
lahf
out
into
xchg
fldcw
xor
dec
mov
mov
and
cmpl
aad
xchg
xor
orb
loop
scas
add
lods
push
cmp
pop
testl
outsb
add
getsec
jmp
cmp
push
insl
stos
int3
pushf
dec
pop
mov
mov
aas
push
lock
test
xor
aas
jae
and
add
cmpsb
addr16
xor
dec
or
add
test
sbb
or
mov
enter
fcomi
pop
jl
mov
push
adc
loope
neg
and
aam
test
out
inc
ret
rcrb
das
push
arpl
sub
pusha
sub
pop
mov
je
scas
test
sub
cltd
popa
jne
dec
pop
ret
mov
loope
lock
and
mov
push
arpl
sbbl
jo
xlat
daa
cmp
pop
int3
mov
mov
or
and
inc
insl
xor
outsb
push
fcomps
adc
xor
sbb
sti
dec
inc
daa
jg
cmp
cld
adc
outsb
ret
icebp
out
inc
aam
mov
fisttps
sbb
es
and
inc
mov
movsl
sub
push
xor
and
in
je
je
jg
push
loop
sahf
es
mov
rclb
mov
xchg
movsb
test
sbb
cmp
jmp
xchg
subl
or
pop
lods
cld
inc
std
mov
ret
jle
pop
push
push
inc
test
mov
movsb
xor
mov
insl
insl
cmp
lahf
inc
bound
into
sbb
lea
imul
pop
push
mov
push
leave
mov
and
pop
adcl
lea
cmp
je
jno
mov
int
push
cs
mov
orl
sbb
lods
push
fsubrl
fcompl
aam
pusha
xor
pushf
jbe
push
jnp
cmp
cwtl
xchg
stos
or
jg
cmp
popa
push
sahf
mov
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
mov
mov
push
sbb
adc
sbb
fwait
das
push
and
pushf
popf
add
cmpsb
in
sti
ja
loope
xchg
in
int
sub
jae
push
adc
lret
sbb
fmuls
jl
out
pushf
lock
xchg
fidivrl
xchg
xchg
ror
sar
test
cmove
inc
lea
fmull
clc
mov
rclb
imul
mov
or
inc
std
or
shrb
jns
loope
pop
jecxz
test
pop
cmp
cltd
mov
andl
adc
lcall
in
jge
add
mov
mov
arpl
add
or
pop
pop
loope
cli
enter
lcall
std
outsl
test
cmpb
movsb
rcl
push
testb
popf
adc
ror
fidivl
jg
sti
mov
hlt
push
mov
jecxz
pop
out
out
sub
or
fists
or
jmp
adc
jb,pt
sub
movb
lock
imul
mov
into
int
pop
pop
and
and
pop
hlt
daa
cmp
inc
push
mov
jns
stos
jne
movsb
sarl
xchg
adc
insl
ja
adc
fnsave
lret
in
or
jbe
mov
arpl
sub
mov
dec
adc
jg
push
mov
and
bound
loopne
scas
pusha
or
mov
aas
inc
dec
fcomi
dec
jp
pop
adc
add
sbb
in
adc
dec
push
int
jno
ficoms
mov
add
dec
xor
dec
addb
cld
fstpl
adc
js
xor
mov
mov
scas
mov
ds
shlb
lods
sbb
movsl
shl
pop
mov
or
pop
cmp
jmp
sub
add
lock
jp
cmpsb
jno
sub
xor
inc
xchg
aam
rclb
dec
pop
clc
scas
push
add
test
hlt
cmp
repnz
jmp
pop
out
jl
imul
or
xchg
fisubs
sub
sbb
cli
arpl
push
push
sub
push
insl
neg
hlt
sbb
fcoml
jmp
and
or
jge
repz
adc
iret
lods
add
sarb
or
jns
jecxz
scas
dec
adc
lret
add
cmc
arpl
insl
addl
push
shlb
fwait
insb
mov
mov
adc
repnz
jns
dec
xchg
in
test
sbb
push
pop
lahf
cmpsb
jne
xchg
sbb
fcompl
cmpsl
mov
jo
arpl
jle
loop
daa
lods
add
lret
adc
pop
sbb
aas
push
fxch
lods
hlt
adc
fnstsw
push
orl
repz
sub
adc
das
bound
push
mov
dec
jnp
mov
stos
pop
jbe
pop
cmpb
or
jp
pushf
test
lods
shrb
cmpsl
fldenv
cwtl
lahf
jne
push
sub
pop
adc
jns
incb
jo
or
lret
insb
adc
into
push
mov
in
jbe
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
push
add
and
sbb
xor
stos
clc
cwtl
sti
in
sahf
and
mov
jmp
xlat
out
sbb
push
push
fs
cltd
pop
insb
lock
jbe
icebp
lret
cwtl
aad
xor
movsl
sub
sbb
js
rcrl
fcmovnu
sarb
ljmp
mov
fnstenv
jmp
orl
lret
stc
jo
ficompl
jnp
pop
cmp
xor
scas
aas
jge
inc
cmp
sub
xchg
xor
push
cmp
add
sbb
data16
pop
stos
shll
in
and
add
sbb
ja
int
rcrl
shlb
aad
sahf
and
adc
je
mov
jo
inc
xchg
mov
stos
or
scas
rcrl
jl
mov
push
xchg
pop
add
scas
push
mov
scas
scas
dec
ret
and
add
xor
mov
xlat
leave
jo
mov
inc
push
ret
jno
sahf
mov
sbb
push
push
sbb
xor
popa
inc
sub
cli
jns
and
xchg
cld
lea
fldenv
inc
mov
mov
pushf
pusha
jp
xchg
test
loope
inc
mov
inc
cmpl
xchg
or
and
es
ret
ja
jmp
lcall
aad
push
nop
or
out
in
dec
mov
lea
int
mov
mov
movsl
out
mov
imulb
pop
sub
out
aad
leave
cmpsb
dec
ficompl
rolb
mov
clc
pop
push
in
out
imul
in
iret
sub
imul
xchg
mov
sahf
cwtl
pop
pop
call
pop
in
pop
scas
push
push
je
mov
inc
pop
ljmp
and
xchg
int3
pushf
dec
jmp
pop
fsubs
push
cld
cmp
mov
fucomip
sub
pop
add
push
mov
mov
mov
jle
bnd
dec
cli
int
ljmp
ja
push
les
adc
test
cltd
out
pop
loope
shlb
stos
cmc
aad
fbstp
fwait
popa
sub
aaa
int3
pop
or
xchg
sub
mov
pop
mov
mov
aas
mov
mov
xor
dec
repnz
cmp
cli
arpl
fdivrl
mov
pop
mov
mov
pop
cmpsl
push
xor
ret
imulb
aaa
rcrl
xchg
sub
and
jae
out
js
into
sub
push
ret
dec
sbb
mov
addl
cld
leave
fs
add
dec
int3
clc
movsb
loope
enter
movsb
mov
sub
jbe
aad
arpl
cmp
mov
leave
lret
pop
aad
mov
dec
and
icebp
push
push
dec
cmpsl
dec
and
test
icebp
jo
ja
test
push
repz
jbe
jne
jbe
arpl
jge
sbb
xchg
mov
and
dec
ds
lret
sti
pop
mov
cmp
cwtl
mov
rorl
adc
pop
popf
cs
inc
fisubrl
shrb
jbe
mov
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
push
mov
sbb
adc
sbb
cld
lcall
xor
sub
pop
push
mov
or
mov
pop
jb
fmull
cld
adc
enter
outsb
pop
mov
mov
int
pop
mov
fstl
jno
stos
rcrb
pusha
pop
add
lcall
fdivs
jbe
jge
addl
cld
std
push
adc
cmpsb
xchg
dec
pop
lds
jns
mov
ds
in
aam
cmp
adc
test
pop
test
cmp
push
icebp
insl
in
lods
mov
pop
stos
cmovl
xor
ljmp
adc
arpl
clc
push
cli
or
decl
xlat
xchg
xchg
xchg
dec
sbbl
mov
mov
inc
mov
pop
sub
and
sbb
lock
or
out
les
imul
pop
sbb
dec
stos
shll
inc
fisttps
sbb
sti
movsb
pop
dec
cmp
lea
push
jne
mov
xchg
mov
cmp
sub
rol
cmpl
pop
mov
jbe
sbb
mov
pop
add
jbe
cmp
mov
pop
dec
mov
mov
fadds
test
add
or
negl
call
hlt
cmp
cmp
loope
xor
push
ror
add
in
mov
and
jg
pop
xchg
jns
aaa
nop
bound
jno
mov
and
fmull
mov
inc
fcoms
add
inc
mov
daa
ljmp
stos
hlt
fisttps
je
into
fldcw
btcl
sarl
scas
sti
jecxz
jnp
hlt
es
pop
xor
in
mov
adc
lcall
out
jl
push
jp
in
xchg
lods
dec
cmp
lea
pushf
dec
sti
pushf
inc
aam
inc
pop
add
lret
inc
xor
into
adc
mov
jg
sub
outsb
push
stc
pusha
xor
lds
jne
ret
cwtl
or
mov
mov
pop
or
inc
push
in
dec
out
xchg
add
mov
or
push
push
std
mov
imul
xchg
pop
jnp
fstl
cld
test
adc
cmp
or
adc
cs
mov
ss
push
fwait
popa
int
xor
sbb
scas
bound
outsl
or
insb
test
ljmp
scas
popl
rcr
mov
lret
das
jb
movsb
test
ret
mov
ds
outsb
xchg
mov
test
adc
pop
int
xchg
fisubrs
test
imul
aam
lds
inc
jo
jb
cwtl
sbb
pushl
ret
sahf
ljmp
xor
ljmp
pop
fwait
shl
xchg
or
cs
mov
loope
dec
sahf
sub
or
or
mov
sbbb
lods
push
pop
negb
dec
inc
mov
lods
lds
aam
adc
sub
cmp
setne
fisubrl
fucom
jnp
push
imul
xchg
cmp
jmp
mov
cmovp
jae
cmp
popf
and
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
jecxz
jo
inc
push
sbb
adc
sbb
xor
xor
push
cmovb
aad
add
mov
das
daa
xlat
add
or
xlat
fisubrl
lods
int
add
pop
pushf
mov
insb
sbb
pop
dec
adc
lcall
mov
movsb
fcmovnbe
push
ljmp
jns
lock
dec
sbb
icebp
fmull
jb
daa
sbb
call
orb
idivb
xor
inc
fdivr
push
xchg
sub
loope
or
sbb
pop
pop
into
fistpll
xchg
shlb
mov
aaa
test
and
mov
adc
cmpsl
pop
dec
shl
aad
int3
pop
into
fcompl
add
aad
pop
mov
sub
leave
dec
movsb
cmpl
or
xor
rcrl
xchg
mov
cmpl
xlat
push
adc
addr16
outsb
push
in
cmp
or
add
sbbl
cli
adc
sbb
aad
stos
hlt
sub
mov
cmp
int3
mov
in
pop
pop
jmp
add
pop
fld
mov
adcb
ja
cmp
cld
das
ljmp
dec
inc
sub
push
adc
fcmovnbe
xchg
push
push
imul
and
add
add
and
xchg
mov
push
adc
mov
pop
add
or
inc
out
cmp
clc
bound
jb
fistl
dec
and
adc
or
addr16
fistl
pop
out
movsb
je
out
pop
mov
int3
arpl
push
insb
es
xchg
jnp
int
out
dec
add
and
cmp
sub
fwait
add
xchg
loopne
push
jnp
and
cli
mov
sbb
mov
jno
mov
sbb
push
enter
les
pop
ds
bound
stc
adc
mov
jno
movsb
or
mov
in
fisubs
xchg
fildl
imul
mov
stc
sbb
sti
xchg
xorl
fdivr
test
mov
insb
cmp
rclb
popa
mov
shlb
dec
or
dec
inc
daa
out
pop
das
subb
adc
leave
mov
movsb
aam
pop
mov
dec
push
cmp
inc
xchg
test
jge
loopne
mov
rcrl
jb
call
fcomip
bound
leave
les
lods
nop
sub
shlb
sub
mov
pushf
lcall
pushf
sbb
add
add
inc
cmp
stos
xchg
aas
stos
jg
inc
outsb
testb
adc
push
call
imul
xor
rcrl
into
ds
cmp
mov
fdivl
mov
push
es
push
jmp
aas
imul
and
data16
add
fildll
and
addr16
xchg
pop
xchg
jb
fcmovb
sti
aaa
jb
mov
mov
loop
dec
push
push
cmp
mov
pusha
js
sub
je
mov
pop
call
xchg
cmpsb
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
int3
loopne
pop
inc
test
aas
or
repnz
dec
hlt
push
mov
bnd
xor
add
add
add
adc
and
imulb
rcl
enter
mov
popa
push
dec
fisubl
int
inc
pop
popa
popf
sbb
int3
xor
stc
push
mov
xchg
fsts
test
inc
jns
fs
adc
rolb
cmpsl
loop
aam
pop
cltd
shll
int
xchg
jle
mov
mov
inc
jge
imul
jge
adc
mov
adc
dec
cmpsb
or
bound
add
fidivrs
xchg
sub
sub
sbb
jae
xchg
rolb
movsl
sub
std
xchg
andl
leave
repnz
idivl
push
icebp
out
inc
lahf
cld
or
add
cs
mov
aam
jo
mov
shl
ret
sbb
inc
jns
pop
sub
jg
mov
mov
lock
sbb
dec
adc
lcall
das
jle
imul
xchg
adc
jae
insl
scas
adc
xor
push
mov
pop
adc
xor
in
xor
sbb
in
and
test
mov
cmpsb
inc
and
cmp
cltd
in
jmp
push
or
sub
cli
sti
pop
xchg
jmp
jge
testl
push
fs
add
push
test
test
fnstenv
inc
add
ds
sub
outsb
pop
adcl
ljmp
mov
push
add
punpckhbw
scas
adc
sti
inc
inc
scas
dec
mov
pop
xsha256
cmpsb
adc
mov
jmp
sub
out
jbe
jg
test
das
add
rolb
fcmove
movb
add
pop
fldcw
into
adc
mov
jle
ret
xchg
dec
ss
mov
ja
loope
xchg
dec
fisubrs
jle
pop
sarb
cmc
add
mov
adc
add
mov
stos
je
xchg
es
mov
and
mov
aaa
jl
or
mov
and
cmc
stc
clc
gs
pop
jecxz
jb
add
push
gs
clc
push
push
and
dec
mov
cmp
xor
cmpsl
test
and
mov
scas
bound
and
cmp
loopne
cmp
cmp
mov
or
dec
add
aaa
idiv
dec
cmp
add
pop
mov
test
lahf
test
mov
mov
sbb
inc
imul
sub
mov
or
pop
insl
jne
sub
int
inc
dec
adc
clc
fs
sbb
mov
jno
in
mov
lods
ljmp
dec
pop
add
mov
pop
and
jmp
xor
inc
sub
xchg
adc
or
xchg
lock
push
sub
or
dec
mov
sub
test
addr16
stc
xor
mov
and
mov
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
push
cmp
sbb
adc
sbb
ja
icebp
mov
or
orl
out
ljmp
fwait
sahf
inc
sub
xchg
push
sahf
ss
cmp
pop
jg
pop
int3
ds
ret
xchg
push
or
hlt
push
inc
loope
or
cmc
enter
xor
dec
call
les
push
push
popf
inc
hlt
xor
out
std
loopne
adc
pop
lret
shrb
push
and
pop
int3
cmp
mov
mov
mov
sbb
cwtl
outsl
push
out
mov
dec
jmp
pop
and
inc
int
add
mov
into
jg
push
imul
insl
in
sbb
pop
and
hlt
out
add
sbb
dec
mov
rorb
nop
mov
jge
or
pusha
xor
loop
in
in
fisubl
jo
adc
add
sbb
mov
loop
aam
outsb
xchg
push
and
aad
cmc
incl
rcl
out
movsb
and
out
lock
add
enter
add
mov
shlb
shr
je
hlt
je
sti
addr16
jnp
fsub
test
pop
shrb
int3
ss
jbe
mov
ret
add
cmpsb
fsubrl
sub
movsl
test
xor
cmp
xor
jl
incl
test
loop
scas
pop
movsb
or
fsubrs
push
pop
dec
cmp
decb
or
icebp
mov
pop
mov
sub
mov
je
add
fwait
mov
xor
lods
rol
pop
inc
and
adc
sub
fimuls
cmp
dec
cli
enter
mov
or
out
xor
jns
push
fistpl
je
push
in
aaa
enter
outsb
pop
mov
mov
push
fwait
mov
insl
movlps
cwtl
push
sub
add
rcr
fistl
mov
push
popa
jmp
pop
mov
push
je
idiv
push
add
ret
sbb
ljmp
ret
add
scas
sti
mov
sub
adc
push
sbb
arpl
pop
inc
lds
aaa
outsl
push
aaa
push
pop
inc
pop
push
jns
popa
stos
cmpsb
pop
test
jl
loop
fidivs
lahf
jg
sub
xchg
and
rcr
shlb
outsb
es
mov
jl
add
mov
ljmp
fsub
out
dec
and
mov
inc
mov
or
test
xchg
sub
mov
jmp
pusha
mov
pusha
jge
loop
pop
ja
push
popf
push
mov
setg
stos
leave
adc
xlat
in
iret
lcall
cmp
repnz
pop
and
clc
mov
sub
inc
mov
testb
add
and
push
addr16
mov
ret
sub
sti
push
outsl
and
push
lock
sbb
mov
mov
jo
mov
sub
mov
aad
xchg
cmp
xlat
adc
adc
lahf
mov
adc
adc
jge,pn
inc
dec
mov
push
enter
sub
outsl
lcall
dec
xor
mov
scas
orb
cmp
jp
lods
mov
test
psubq
dec
testl
lret
pop
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
dec
hlt
push
xor
sbb
adc
sbb
mov
mov
dec
push
insl
xor
and
aam
loopne
jmp
pop
push
jge
ljmp
pop
cmp
loope
jb
and
ss
add
aam
leave
xchg
xchg
jnp
lcall
jmp
inc
lret
cmpsl
push
sbb
mov
lret
push
push
mov
jl
iret
xchg
int3
inc
inc
iret
bnd
xor
push
or
gs
push
ljmp
and
sbb
lods
addr16
outsl
ja
sbb
out
fbstp
jno
mov
sub
or
dec
or
imul
test
lret
sub
pop
mov
scas
add
xor
subl
mov
adc
push
inc
int
ret
insl
dec
adc
std
xchg
adc
repz
stos
push
jl
in
mov
pop
call
int
pop
popa
push
imul
aam
xchg
lds
call
push
fcmovb
mov
mov
dec
xor
insb
dec
aas
and
pop
lahf
inc
push
in
mov
cmc
add
jno
dec
sbb
test
nop
into
lea
shlb
mov
lea
sbb
call
jle
imul
in
fsubp
cmp
or
paddsw
cwtl
or
ja
mov
mov
stc
mov
dec
nop
or
pop
adc
subl
mov
mov
mov
or
jnp
sub
sbb
and
data16
ds
pushf
xchg
test
call
mov
adc
clc
xchg
dec
push
and
pop
les
out
arpl
shll
stos
out
std
imul
cmp
out
cmpl
cmp
clc
jne
loop
aaa
or
dec
xchg
pusha
icebp
ljmp
pop
push
lahf
or
iret
mov
jo
sub
mov
stos
stc
bswap
cwtl
or
cmp
cmpsl
xlat
xchg
ds
or
jmp
or
dec
inc
mov
popa
cltd
adc
sub
out
mov
test
test
sbb
dec
repnz
scas
repnz
leave
cmp
xor
xor
sub
sbb
jp
in
sub
mov
stc
sub
f2xm1
mov
insl
or
inc
imul
mov
insl
mov
jne
cmp
int
pop
test
std
cmp
jno
mov
movhps
cmp
sub
jns
push
mov
cmp
leave
cmp
dec
dec
iret
inc
mov
xchg
mov
push
pusha
add
dec
xlat
xor
shlw
mov
or
out
int3
mov
mull
sbbb
js
inc
sidtl
jo
sub
jecxz
add
divb
es
adc
mulb
lock
das
mov
jecxz
icebp
xor
fmull
adc
insl
scas
ds
mov
scas
jge
rcl
mov
lock
mov
or
mov
rcrl
sub
out
xchg
aam
sbbb
nop
xor
adc
xor
sbb
test
dec
adc
inc
lret
pop
pushf
cld
cwtl
fs
ss
sti
pop
cmp
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
addl
and
sbb
pop
mov
mov
mov
out
loope
je
xchg
mov
das
push
jae
and
xchg
pushf
roll
lock
cmp
mov
in
sub
lock
and
mov
mov
adc
xchg
jbe
dec
dec
andl
mov
or
ret
clc
sbb
aam
sbb
stos
jmp
sub
lea
cmp
out
xchg
dec
out
push
pop
test
iret
jecxz
cmp
xlat
cmpsl
mov
mov
mov
jg
das
loope
cmc
inc
adc
and
cli
jbe
loop
jbe
jbe
icebp
imul
add
mov
mov
les
in
inc
jno
mov
in
jl
call
add
pop
lret
imul
xchg
lret
sbb
push
lea
add
xchg
or
sub
dec
out
clc
in
xchg
jge
mov
bound
sub
inc
dec
add
notl
lahf
in
jbe
pusha
ret
jg
and
dec
test
out
loope
int3
imul
scas
jo
push
pop
mov
pusha
cltd
mov
inc
pop
xor
sbb
lds
inc
sar
popa
inc
loope
test
xchg
sub
and
nop
test
stc
mov
jnp
mov
sbbb
popa
fldenv
data16
fldt
outsb
sub
imul
idivl
subl
or
scas
dec
in
cli
pop
sbb
jbe
push
adc
xor
int
xor
adc
add
movsb
fsubs
rorl
cli
lods
xchg
mov
es
adc
inc
enter
mov
pop
cmp
pop
jecxz
push
imul
sbb
inc
pop
cmpsl
lods
lea
scas
pop
movlps
mov
mov
add
mov
repz
stos
xchg
ret
pop
out
mov
fdivl
lret
push
fadds
mov
pop
in
xor
sbb
push
es
fcoms
cmp
lret
push
xchg
push
sub
loopne
arpl
pop
xor
mov
out
test
sub
xchg
xchg
cmp
jle
idivb
mov
push
jns,pn
icebp
das
pop
or
es
inc
jbe
rorl
push
pop
popa
fmul
sbb
cld
push
aaa
clc
clc
mov
sbb
bsr
mov
lret
ret
xchg
and
and
adc
gs
and
and
fnstenv
mov
int
xchg
jnp
jg
loopne
lret
std
dec
rcrb
mov
sub
aaa
pop
orb
enter
xchg
aad
mov
sub
mov
cli
mov
divl
call
add
testb
addr16
or
pop
adc
sub
cmp
scas
add
sbb
les
dec
xor
negb
lods
pushf
push
movsb
imul
popa
add
aad
sub
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
jecxz
add
adc
sbb
movsb
inc
sub
iret
out
scas
mov
xor
xor
daa
fdivrl
enter
add
out
jno
iret
dec
and
cmp
adc
jns
movsl
jecxz
test
shll
jmp
insl
xor
popf
lock
stos
arpl
xor
pop
mov
mov
mov
aad
fildl
push
push
lahf
and
or
mov
mov
inc
aaa
push
jge
or
outsb
andl
xor
push
push
mov
xlat
in
test
pop
mov
xchg
add
fcompl
or
and
int3
cs
adc
clc
jne
and
out
jge
aas
neg
dec
mov
fldenv
mov
pop
stc
pop
std
mov
icebp
jl
or
and
idivl
xchg
push
scas
and
dec
aas
das
adc
jne
xchg
je
loope
push
mov
add
mov
ljmp
lahf
test
fnstcw
push
loopne
sub
hlt
and
mov
mov
psubb
andl
sarl
pop
xor
sub
popf
xorb
cmp
adc
add
mov
add
dec
sbb
daa
mov
andps
iret
in
push
add
pusha
cltd
inc
lahf
ret
lahf
jl
push
out
fs
sbb
decb
and
inc
scas
jl
cmpsl
bound
xchg
fisttps
ret
cli
mov
cmp
repnz
cmp
push
mov
sti
loope
xor
push
andb
test
test
cmp
and
mov
sbb
cwtl
sbb
xchg
cmp
dec
iret
in
mov
push
cli
test
push
inc
sub
fnstenv
and
mov
lret
das
hlt
clc
sbb
cmc
outsb
enter
mov
daa
cmpsl
xchg
loope
and
dec
inc
cmp
add
rolw
in
addb
xor
sub
gs
cltd
mov
xchg
out
cltd
mov
stc
das
mov
test
jbe
lock
pop
pusha
aas
xor
or
xor
adc
inc
mov
jne
insb
test
xor
push
call
data16
lods
popa
in
mov
sub
pop
push
jae
xchg
cmpsl
cwtl
sbb
fs
sbb
xchg
lret
out
and
sti
sbb
test
and
popa
adc
push
sbb
das
inc
or
icebp
mov
push
cmp
lcall
inc
cmpsb
mov
push
jmp
in
xchg
shlb
xchg
push
cwtl
xchg
stc
jg
int
test
and
mov
adc
sti
jp
adc
lcall
test
xor
mov
sub
sbb
popf
mov
std
lock
test
fsubs
pusha
mov
jg
test
cld
sub
jecxz,pt
test
iret
sub
push
inc
mov
xchg
imul
or
out
jge
enter
mov
enter
out
lret
ret
enter
leave
xor
mov
or
dec
stc
dec
lret
sbb
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
or
or
sbb
sbb
scas
cmp
sub
jo
adc
inc
aaa
xchg
push
cmpsl
sbb
popl
mov
lds
adcb
sub
ja
aaa
and
mov
lea
fwait
lds
js
movsb
pop
sahf
sbb
out
cmp
shll
popa
shll
adc
and
mov
and
jae
pop
adc
cmovne
inc
pushf
cmp
sbb
sub
fnsave
incl
xchg
push
sub
inc
mov
mov
test
sub
fstpt
dec
jp
insb
pop
fcom
pusha
test
mov
divb
outsl
mov
aam
xchg
test
rcl
cs
and
std
jbe
mov
mov
int
and
in
push
icebp
sub
or
sub
sub
push
bound
add
mov
cmc
adc
add
daa
lods
mov
call
jp
jecxz
push
push
leave
popa
test
inc
call
mov
xlat
cmpsl
sub
in
enter
push
cmp
xchg
enter
test
adc
cmp
stos
pushf
sub
pop
jnp
fistps
js
mov
pop
jae
fsts
dec
pop
out
mov
mov
fld
lret
xchg
xchg
das
mov
sub
xchg
int
and
xorb
and
lahf
sbb
jnp
loop
cmp
and
xchg
dec
pop
sbb
orb
dec
aas
std
mov
enter
lahf
cmp
nop
in
shll
lahf
add
inc
es
fildll
jecxz
aaa
jg
sbb
or
sahf
ljmp
mov
and
test
repz
mov
enter
jb
lcall
cmpsl
clc
and
cmpl
mov
and
cmpsb
add
add
les
lcall
lret
sar
sub
inc
loop
mov
and
ffreep
jmp
lret
lea
jo
out
fisttpl
enter
mov
pop
mov
push
fstpl
jmp
jp
xchg
xor
das
lcall
out
xlat
add
scas
xor
mov
cs
stos
and
sbb
cmpsl
ja
dec
in
js
xor
mulb
ja
sub
push
imul
pop
add
mov
xchg
pop
cmp
lods
bound
insb
test
cmp
fdivs
or
jecxz
shlb
sub
jno
int3
and
and
add
cs
xlat
inc
nop
cltd
stos
aam
add
mov
dec
and
dec
adc
mov
pop
add
stos
adc
mov
icebp
clc
jl
mov
sub
dec
inc
and
ss
shlb
mov
insb
scas
movsl
or
pop
ret
ficoml
imul
xchg
sub
pushf
pop
js
mov
scas
push
mov
xsave
insb
das
dec
mov
scas
and
je
std
jnp
add
out
jnp
test
imul
xor
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
push
pop
push
sbb
adc
sbb
pop
fldcw
outsl
orl
adc
mov
lcall
pop
sbb
jl
xor
sbb
js
or
je
js
push
and
clc
sub
inc
mov
les
jmp
aad
imul
cmp
es
push
lds
adc
out
xchg
jo
jno
cmp
xor
sbb
or
mov
xor
lock
psllq
iret
mov
jne
loopne
push
arpl
adc
shll
enter
push
in
test
aas
pop
mov
push
mov
movsb
mov
xchg
mov
xor
sbb
mov
imul
pop
aad
cmpsl
xchg
cwtl
adc
jp
jge
dec
add
add
sub
shlb
mov
push
jnp
andl
and
scas
pop
mov
mov
mov
inc
call
sbb
aas
xchg
je
ss
pop
rcll
mov
inc
popf
out
xchg
jg
xchg
pop
jecxz
call
mov
adc
stc
mov
out
cltd
pop
iret
push
push
dec
inc
mov
aas
lds
mov
fs
outsb
in
ja
fidivs
movsl
and
push
jp
xchg
cmp
sub
jo
push
lea
cmpsl
adc
xchg
inc
and
fucomi
cmpsl
jbe
pusha
stc
sub
mov
sub
fcomip
push
pop
cwtl
adcl
xchg
ror
jg
int3
repz
push
jb
enter
pushf
aam
mov
ret
mov
pop
mov
cli
cltd
jbe
jns
ja
iret
iret
insb
mov
out
add
adc
jle
or
mov
repz
add
jle
xor
es
jo
xchg
shlb
jge
and
adc
fdivr
out
incl
in
fbld
mov
jl
push
popa
imul
mov
xchg
fs
leave
aaa
in
cmp
fcompl
nop
push
mov
inc
cwtl
pop
mov
xor
aaa
cli
and
dec
xchg
mov
sbb
sbb
mov
inc
jns
orb
into
cwtl
clc
add
fldl2e
loop
sarb
xchg
mov
imul
cmp
ja
inc
sub
mov
xchg
ret
lods
sbb
mov
sub
mov
cmp
imul
out
inc
mov
xor
ja
loopne
xchg
jb
cmp
and
add
enter
and
fs
test
or
jns
js
clc
fs
or
gs
sub
outsl
jbe
bound
cs
out
loope
iret
xchg
pop
push
mov
sahf
nop
out
ljmp
add
fstl
aas
push
add
mov
lahf
call
push
sbb
std
mov
mov
pop
repz
or
jle
push
hlt
ljmp
push
adc
shr
movsb
enter
adc
push
cld
lret
mov
in
xchg
pop
je
dec
push
cltd
mov
mov
outsb
add
mov
inc
lds
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
adc
test
sbb
push
sub
and
push
or
mov
and
push
movsb
push
mov
jl
push
imul
pop
adc
cmpsb
sub
or
pop
sahf
int3
ficoms
and
add
and
enter
sub
xor
cld
add
test
or
fdivrl
std
stc
mov
jl
sub
sarl
and
pop
stos
inc
pop
jecxz
xor
xor
sub
mov
or
xchg
inc
mov
fisttpll
cmpb
pop
lods
cmp
mov
dec
test
lock
or
push
sub
xchg
dec
int
cltd
adc
lods
jbe
sub
sbb
mov
pop
and
jbe
jecxz
and
repnz
or
and
or
notl
push
pusha
cmp
mov
pop
scas
push
aaa
jae
fwait
subb
ret
loopne
scas
xor
pcmpgtb
nop
add
loop
addr16
mov
icebp
and
xchg
cld
pop
fwait
outsl
imul
dec
push
xor
stc
mov
sbb
inc
out
cmp
imul
pop
pop
addl
push
aas
ds
shrb
cmpsl
xorl
mov
xchg
sbb
test
lret
test
fwait
and
nop
mov
pop
sub
les
xor
adc
xor
cmp
roll
insb
cs
mov
ffree
push
fnstenv
iret
mov
dec
xor
mov
sbb
clc
mov
dec
push
lret
xchg
lret
popf
jl
or
pop
in
xor
jl
fisubs
dec
cmp
xchg
and
sbb
fcoms
in
sub
je
push
mov
pop
hlt
rorb
xor
imul
xchg
mov
xor
clc
daa
fldl
and
dec
inc
icebp
cwtl
add
xor
shll
lret
mov
lret
add
fcomi
jle
mov
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
addb
add
add
add
add
add
add
test
add
faddl
add
add
add
lock
add
add
add
add
add
insb
mov
add
add
enter
jp
add
dec
xchg
add
int3
test
add
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
mov
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
int3
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
cmp
inc
add
inc
add
inc
add
daa
inc
add
inc
add
add
jg
add
add
daa
inc
add
es
add
inc
add
daa
inc
add
lret
push
movsb
scas
or
movsb
dec
es
add
es
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
daa
inc
add
inc
out
mov
inc
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
add
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
xor
add
sub
add
add
scas
lcall
das
dec
add
sub
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
scas
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
mov
inc
add
addl
mov
addl
scas
addl
mov
inc
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
into
addl
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
push
adc
bound
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
inc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
test
add
add
jl
add
nop
test
add
add
mov
test
add
test
add
test
add
add
adc
add
xchg
add
xchg
add
add
pop
xchg
add
add
add
add
lahf
add
addb
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
cmp
add
pop
xchg
add
add
jb
add
test
add
cmpsb
xchg
add
add
loop
add
xacquire
add
xchg
add
mov
add
add
mov
add
add
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
inc
mov
add
add
push
add
jp
add
mov
add
stos
mov
add
add
loop
add
add
add
cld
mov
add
mov
add
mov
add
mov
add
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
