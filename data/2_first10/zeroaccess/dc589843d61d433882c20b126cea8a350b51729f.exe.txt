mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
cs
and
nopl
jmp
mov
ffree
mov
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
fcomps
mov
pusha
xor
xchg
ffreep
in
mov
mov
mov
mov
jg
aaa
enter
sub
dec
inc
adc
inc
xchg
out
fwait
mov
into
adc
jecxz
je
sbb
ljmp
xor
mov
cmovae
xor
js
cmc
scas
insl
jbe
data16
out
xor
mov
inc
in
out
dec
ja
shlb
dec
lock
xchg
and
in
jbe
adc
lret
xchg
adc
into
jo
push
xor
int3
nop
addl
sar
repz
xor
mov
ret
out
fbstp
pop
push
ds
and
aam
lea
push
es
divl
dec
enter
test
stos
mov
mov
and
add
fildl
jnp
fcmovnb
xor
nop
mov
fs
jecxz
mov
and
mov
repz
xchg
out
aaa
pop
pop
pop
fidivs
push
pop
sahf
imul
mov
lock
lea
ret
loope
jl
filds
and
mov
mov
adc
loope
lods
xchg
mov
pop
cld
sub
stos
add
mov
clc
mov
xchg
mov
jb
pusha
push
loopne
sub
cli
mov
jno
shll
adc
inc
nop
cmp
add
mov
stos
int
inc
xor
jmp
sbb
sub
sub
pop
insb
js
loope
mov
hlt
int
sub
lcall
aad
lret
sub
mov
xchg
fninit
lea
leave
out
jns
cmp
pop
jmp
ret
mov
mov
nop
test
lret
or
mov
push
lock
mov
inc
jb
cs
sub
adc
lods
cmp
vandps
mov
push
cmp
xchg
imul
xor
cmp
cli
cmp
movsb
daa
jp
lahf
leave
dec
sbb
xchg
sbb
xchg
mov
imul
sbb
xchg
pusha
xor
and
mov
leave
adc
mov
inc
sub
outsl
std
xchg
mov
dec
xor
push
pop
mov
mov
daa
stos
jnp
lea
aad
js
sub
subl
cmp
jp
sbb
mov
test
inc
addr16
sar
cltd
imul
jl
movsb
xchg
xchg
int
pop
jnp
ja
stos
cmc
jecxz
jecxz
push
push
xchg
push
mov
loopne
mov
and
push
pop
inc
pop
into
shrl
in
imul
int
mov
sbb
jmp
and
daa
inc
fisubs
push
jne
push
lock
movb
or
xchg
int
ret
sbb
and
pop
in
mov
les
ret
adc
cmp
je
scas
sbbb
or
xor
pop
add
mov
and
scas
test
dec
pop
clc
sti
jle
mov
inc
jnp
jb
test
gs
and
rorl
mov
shrl
int
xor
mov
dec
mov
idivb
stos
lret
push
pushf
fwait
incb
cltd
mov
jno
jmp
push
adc
ja
js
push
call
outsb
xor
inc
push
sub
loopne
ficompl
xor
ret
or
test
addr16
jnp
sbb
sub
and
jbe
dec
in
imul
or
xchg
popa
jl
mov
into
sbb
js
insl
add
push
les
adc
aad
test
leave
mov
jecxz
adc
clc
call
sub
xchg
mov
sbb
pusha
sbb
clc
adc
ja
mov
xchg
js
aas
in
jns
push
adc
mov
sbb
pop
dec
aaa
dec
mov
neg
loopne
bsf
sub
mov
push
xchg
ret
jnp
dec
jmp
xchg
clc
mov
sbb
dec
mov
or
add
sahf
adc
int3
addr16
movsb
inc
mov
mov
loop
xchg
adcl
pop
es
add
xchg
clc
inc
dec
xchg
sbb
fmuls
pop
bound
mov
cmp
outsl
pop
add
shll
xlat
jg
mov
dec
push
mov
data16
jae
push
xor
mov
xlat
cmpsb
xchg
stos
jb
cld
test
dec
mov
push
mov
jns
jmp
jp
je
xchg
outsl
decb
pop
scas
lret
pop
inc
movl
jecxz
fs
push
mov
add
sub
in
pop
xor
cmp
sbb
mov
lds
lods
mov
insl
ret
cmp
fisttpl
mov
test
aad
adc
push
les
dec
jne
or
inc
dec
mov
add
xchg
sahf
xchg
hlt
ror
adc
lcall
add
test
and
out
sub
inc
mov
fcomip
inc
aam
rolb
icebp
cli
pop
mov
scas
lea
jno
popa
pushf
inc
out
out
sbb
faddp
adc
sti
dec
sub
cmpsl
cwtl
decb
fwait
enter
adc
pop
ss
sub
sti
jae
and
mov
test
xchg
pop
xchg
sub
loop
ds
aad
mov
pop
out
push
repz
push
push
push
aad
sbb
js
arpl
cwtl
leave
addr16
pop
test
pushf
andl
lods
es
and
jg
dec
pop
aas
loop
xchg
fisttpll
loope
sbbb
mov
and
mov
mov
adc
ret
xchg
jmp
dec
xchg
cwtl
into
sub
fstpt
mov
sub
stos
andb
xor
mov
dec
enter
or
outsb
insl
mov
daa
and
pop
inc
inc
pop
lds
sub
mov
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
ja
leave
push
sub
xchg
shrl
mov
adc
popa
adc
mov
jnp
testb
cltd
fdiv
pop
xchg
sbb
gs
adc
adc
cld
les
add
imul
test
out
in
jl
pop
jae
out
mov
jecxz
out
lods
mov
das
xor
mov
cmc
sarl
xor
jbe
jb
sub
dec
test
ficomps
testb
das
inc
push
fstl
outsl
mov
aam
loopne
push
inc
xchg
xchg
push
xchg
cmc
jno
cmp
adcb
scas
aam
lock
dec
call
hlt
mov
or
sub
dec
dec
mov
inc
imul
push
dec
xchg
mov
pushf
lock
cld
dec
js
push
fistps
inc
jge
jecxz
sbb
mov
je
daa
and
jbe
inc
cli
inc
mov
sbb
push
pusha
xrelease
sti
or
cmpl
push
out
and
js
rol
fldl
flds
cmp
cmp
je
cld
aad
enter
xchg
popa
test
cmp
xchg
ss
dec
cmp
das
jno
push
dec
pop
shlb
cli
jecxz
imul
and
clc
xor
jno
or
testl
fdivs
dec
xlat
pop
cmp
inc
mov
sbb
lods
mov
lock
cld
jne
test
xchg
cmpsl
sub
add
stos
fndisi(8087
add
dec
adc
sub
push
movsb
scas
xor
add
sub
push
aas
xchg
mov
loop
popa
mov
cmp
icebp
loopne
popa
clc
mov
hlt
movsl
sbb
shrb
bound
adc
mov
bound
mov
dec
movsb
nop
xorl
mov
adc
pop
jno
fisttps
jl
push
xchg
test
inc
mov
inc
int
int3
sub
push
rcrl
aam
in
loop
pop
add
stc
and
movsl
dec
test
push
xchg
push
and
cld
std
jno
test
add
imul
pop
das
and
sarb
mov
mov
lahf
xchg
and
xchg
mov
push
in
jbe
out
xchg
test
nop
inc
mov
lea
stos
ds
popf
jge
jno
into
ficomps
sti
outsb
jle
mov
push
cmp
mov
sub
aaa
xchg
add
or
inc
and
jecxz
loopne
repnz
xchg
inc
mov
xor
xlat
jmp
insl
cmp
mov
popa
inc
xchg
sub
inc
cmp
in
sbb
gs
pop
mulb
ror
and
shlb
nopl
cmp
shrl
test
mov
xchg
lret
xchg
mov
rcr
scas
in
xor
nop
push
stos
inc
pop
lahf
mov
push
fwait
cmp
insl
xchg
inc
mov
ds
adc
push
sbb
rcl
mov
mov
dec
push
bound
sahf
loope
jbe
movsl
mov
rorl
jb
sub
jbe
cld
push
insb
dec
mov
cltd
shrl
outsl
cmp
add
push
insl
sub
push
mov
scas
jae
fstps
and
and
lock
dec
inc
pop
add
adc
adc
mov
xor
push
lds
adc
je
cmp
leave
cmpsb
test
inc
shlb
xchg
js
jp
fs
fcompl
addr16
ret
dec
xchg
mov
xlat
mov
lahf
mov
adc
fs
sub
dec
outsb
pusha
lock
gs
out
jge
pop
xor
sbb
pop
push
inc
dec
mov
cmp
push
pop
and
and
add
cmpsb
cmp
aad
test
jae
lahf
push
xchg
insb
cmovae
shlb
stos
out
xchg
imul
hlt
mov
ds
jo
push
jae
fdivr
jbe
xor
outsb
stc
movsb
push
les
outsb
adc
jp
fiaddl
rcl
jle
sbbl
add
cmpsl
cmpsb
push
mov
nop
sub
sub
popl
mov
push
inc
lock
sub
test
les
adc
mov
inc
scas
jne
inc
mov
or
fadds
dec
add
std
fisubrs
cmp
sbb
push
dec
out
push
jl
lods
xchg
sbb
adc
gs
popf
lds
stos
inc
hlt
pop
mov
out
mov
and
in
aam
test
das
push
push
adc
popa
bound
xor
imul
es
jg
adc
out
movsl
fbstp
int
push
mov
dec
js
pop
sub
xchg
and
xor
pop
dec
mov
dec
xchg
int
cmp
es
cmp
xchg
or
add
insl
ficoml
cmpsl
or
cmp
cmp
ljmp
mov
add
fsubr
test
rcll
loop
add
in
mov
lahf
push
dec
mov
xchg
loope
lds
sub
mov
mov
pop
fldl
test
adc
or
cmp
lds
into
dec
cld
test
xchg
push
je
shll
cmp
inc
inc
inc
movsb
lea
push
in
fadd
scas
jno
or
sbb
xchg
out
insl
mov
jl
sar
adc
shr
mov
rorb
inc
and
clc
popf
pop
int
jnp
mov
and
pop
and
jl
cs
cmp
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
pminsw
mov
movsl
mov
inc
push
sbb
shrb
xor
ja
or
pop
notb
incb
aam
lock
jne
pop
lahf
sbb
or
sub
setg
aas
fists
push
outsb
ljmp
subl
sbb
imul
pop
stos
mov
cmp
mov
jbe
mov
cmpsl
insl
mov
aam
cmpsb
in
mov
scas
dec
inc
repz
dec
mov
inc
lods
insl
cmp
sub
mov
fucomip
xchg
or
xor
in
ret
push
xchg
inc
mov
pop
dec
ja
mov
push
mov
adcl
outsb
inc
repz
stc
add
sub
sahf
lods
adc
adc
negb
mov
push
and
int
sahf
fsubrs
clc
sub
mov
push
mov
and
sub
test
shrb
or
ret
sbb
lods
lods
ljmp
mov
xchg
and
cmp
int3
sub
push
or
mov
scas
hlt
mov
add
outsb
pusha
pop
xchg
repz
push
cmp
pop
ljmp
adc
mov
inc
adc
repnz
jb
cli
push
cwtl
push
inc
shl
aad
cmpsl
call
imul
or
aad
jae
adc
jae
dec
aad
in
aas
adc
and
pop
lret
cli
jle
lods
hlt
das
mov
scas
addb
fadds
dec
ljmp
imulb
mov
xchg
pop
popa
out
or
mov
mov
fisubl
nop
sub
xchg
lock
sub
cmp
push
into
xor
jb
mov
aaa
adc
mov
std
bound
and
mov
mov
xor
js
lock
loopne
xchg
and
cli
mov
jle
popf
push
jbe
push
push
jns
rorb
add
sbb
bnd
pop
int3
xor
shlb
fnstenv
iret
lea
pop
xor
jl
repnz
std
lahf
inc
add
aad
jbe
xor
dec
and
and
mov
stc
rclb
mov
decl
das
addr16
iret
pop
shrl
mov
fmull
dec
cmpsl
inc
in
test
loope
cmp
inc
lret
pop
and
dec
out
es
je
push
sbb
es
fidivl
nop
push
or
aaa
out
test
mov
adc
cmp
sub
pop
xor
mov
sar
lods
int3
xor
cmp
cmp
cmp
int3
dec
xchg
dec
pop
mov
js
pop
jmp
pushf
push
pop
sbb
xchg
mov
fs
mov
add
xchg
outsb
lret
loopne
loope
jmp
fistl
xchg
rolb
mov
push
and
enter
repz
shrb
repz
inc
mov
cmc
dec
xor
xor
out
loop
ja
mov
in
bound
stc
lods
dec
dec
xchg
sbb
push
test
xor
movsl
and
in
xchg
jno
out
sub
and
and
scas
fistps
pop
pop
inc
adc
out
sbb
sub
jae
inc
mov
push
test
sbb
xchg
jnp
jne
cmpsl
sub
scas
rcrl
inc
cmc
insl
int3
xchg
int
cmp
rorl
jp
mov
dec
jmp
sbb
sub
mov
and
sbb
pop
or
int
push
addr16
lahf
lods
sbb
cmp
dec
mov
pop
mov
scas
mov
mov
pop
lcall
out
or
scas
mov
ja
scas
out
mov
push
popf
js
and
sub
das
dec
popa
gs
add
push
sub
fsubrl
mov
add
cmp
jge
pusha
fs
js
jle
mov
xor
xor
shlb
mov
and
mov
add
loop
aad
lret
lcall
ficoml
lahf
stc
stos
arpl
pop
cs
adc
push
inc
and
enter
shll
add
cmpsb
fsubrs
mov
aas
addr16
push
xchg
jnp
lret
xchg
push
adcb
sub
ss
imul
inc
add
xor
cmp
hlt
roll
sahf
xchg
test
stc
std
cmp
and
imul
xor
adc
inc
cli
adc
outsb
lahf
xchg
aad
xchg
xor
xor
lcall
shrb
jle
mov
dec
std
out
repnz
mov
fcom
sbbb
inc
out
push
jae
cmpsl
mov
sbb
cmp
jo
mov
cmp
dec
mov
pop
xor
cli
stos
mov
pop
jo
cmp
mov
imul
mov
push
incb
lret
sub
mov
cltd
imul
xchg
testb
add
stos
daa
sbb
adc
xor
call
in
int3
arpl
cltd
sbb
sti
or
fcompl
test
inc
sub
pop
imul
je
pop
cmp
mov
jne
mov
cmp
xor
mov
xlat
push
cmpsl
xor
jne
jmp
xlat
cmp
push
push
ret
jmp
dec
out
or
pop
mov
push
xor
adc
jae
push
sbb
mov
inc
call
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
pop
cwtl
js
fimuls
pinsrw
unpckhps
xor
les
add
push
loopne
push
and
adc
sbb
jb
pusha
push
out
cmp
push
add
jo
dec
mov
adc
loopne
sbbl
lret
cs
lret
mov
cli
imul
cmp
lods
mov
in
cmpl
dec
imul
fwait
pusha
push
sub
cmp
in
clc
sub
cltd
push
vcvtpd2psx
int
sub
movsb
test
xchg
pop
mov
int3
xchg
daa
lret
shll
jl
stc
push
cmc
xor
lods
aad
mov
inc
ret
insl
in
jl
stos
iret
add
in
jg
mov
ja
mov
inc
xchg
xor
mov
leave
sbbl
dec
scas
ljmp
and
ljmp
cmpsb
pusha
push
cmpsb
xchg
in
push
push
or
mov
add
mov
outsl
addb
xor
dec
mov
stos
rcrl
ja
jnp
pop
out
popa
inc
dec
movsl
jp
sub
pop
rorb
push
hlt
mov
and
jns
xor
test
push
mov
mov
cs
mov
out
cmovb
or
loopne
daa
imul
arpl
in
push
dec
cmpsl
or
lret
mov
arpl
bound
jmp
ds
data16
cmp
jmp
adc
push
xor
ds
shrb
mov
push
jl
fs
push
xorl
push
outsl
adc
dec
imul
insl
mov
pop
in
cmpl
sbbb
fidivrs
lods
mov
in
lods
push
in
dec
xchg
out
mov
mov
add
pusha
mov
fadd
xchg
and
cmp
and
movsb
adc
add
xchg
xor
and
fsubrs
movsb
jge
test
into
int
ja
pop
sbb
or
mov
pop
jecxz
xor
xor
or
inc
add
call
sbb
loopne
or
mov
and
sub
pop
jo
xchg
mov
mov
lods
mov
je
mov
jl
xchg
sti
push
push
xor
arpl
mov
ret
jo
sbb
in
inc
movsl
cmc
mov
jge
adc
js
repnz
sbb
xor
mov
mov
popf
pop
push
mov
dec
in
std
mov
and
adc
jns
std
mov
in
lahf
decl
pop
repz
mov
sub
and
fs
inc
insl
inc
mov
cld
cmp
mov
enter
shrl
cld
jo
mov
mov
in
cmp
int
aad
or
or
mov
inc
mov
mov
xchg
push
and
sbb
jnp
test
mov
xor
jmp
xorl
addr16
scas
push
jmp
jbe
movsb
cmpsl
mov
mov
scas
adc
cmc
push
gs
and
cmpsb
mov
jb
aas
cmp
int3
loopne
iret
lcall
mov
int3
movsb
fistps
mov
dec
mov
incl
dec
dec
or
and
sub
mov
dec
lds
jp
mov
sti
movsl
pop
mov
es
pop
pop
cmpsb
das
repz
jle
cmp
aaa
mov
sbb
cmp
in
push
divl
out
ret
cmp
inc
cmp
arpl
dec
cmp
sbb
sbb
aas
adcb
jo
and
jp
or
jge
popl
repnz
bound
inc
adc
imull
push
icebp
movsb
sub
roll
shl
loopne
sbb
pop
or
mov
cld
into
fldt
mov
ja
stos
ret
test
insl
push
cmpsl
lcall
cli
or
push
cltd
or
insb
dec
insb
xchg
movsl
xor
fiadds
ret
pop
test
add
ret
cld
pop
ja
mov
inc
popf
add
and
adc
and
loope
cli
sub
lds
mov
fsts
push
test
sub
and
xchg
js
or
pop
pop
sbb
clc
es
test
aaa
ljmp
jmp
popa
stc
inc
mov
ret
mov
gs
lods
cld
push
mov
or
mov
inc
call
dec
into
push
or
push
push
jmp
push
xchg
mov
inc
mov
push
gs
xchg
lahf
mov
cli
pop
ljmp
ja
xchg
lret
mov
mov
push
cmp
add
not
xor
cmp
repz
loope
ja
in
cld
xchg
stc
push
dec
iret
shlb
mov
jmp
cmp
lea
test
stos
mov
mov
in
ds
es
and
adc
addb
add
in
fs
les
push
pop
dec
pushf
jno
xchg
out
adc
mov
fists
xlat
or
sub
ss
cwtl
push
popf
ficomps
ret
je
add
stos
aaa
dec
sarl
push
inc
and
pop
cmp
pop
jae
cmp
push
mov
loop
sbb
adc
or
xor
adc
xlat
icebp
pop
insb
xchg
cmp
out
inc
pop
or
adc
pop
dec
push
add
jge
sti
insl
mov
sub
stc
lret
pusha
xchg
je
xchg
and
jg
cmpsl
inc
int3
clc
cmpsl
call
addr16
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
bswap
arpl
lds
xor
adc
mov
jge
dec
clc
lret
or
dec
push
push
repnz
and
xchg
and
lock
dec
xor
jnp
stc
cmp
push
mov
pop
ficomps
aad
and
adc
jno
mov
push
loope
adc
ljmp
rcl
push
xchg
icebp
push
dec
enter
iret
scas
mov
ficoml
dec
repz
adcb
sbb
jecxz
pop
mov
sub
xor
ss
test
dec
add
mov
icebp
rcl
movsb
adc
sub
or
jle
cltd
cmp
jl
pop
out
mov
movsb
jle
jbe
pop
xchg
es
fcompl
add
enter
mov
aaa
inc
add
cmpsl
fimull
repnz
sbb
sti
fnsave
adc
pop
xor
lcall
push
dec
cmp
shl
xor
cld
xor
xor
jecxz
mov
push
jnp
test
in
bound
dec
adc
lcall
pop
inc
outsb
jecxz
sbb
xchg
cli
mov
mov
mov
into
stos
or
enter
cs
int3
and
pop
fs
insl
popf
dec
xchg
stos
mov
jmp
outsl
mov
in
dec
movb
lea
sub
hlt
lahf
scas
lret
pop
andb
xor
inc
pop
roll
push
sbb
movsb
pop
cmp
adc
jg
xchg
cmpsb
je
mov
cmp
lcall
cltd
push
ret
ja
nop
cs
lea
mov
ficompl
jo
sub
lea
pop
outsb
xlat
push
insb
stos
jmp
and
shr
testl
dec
inc
xor
incb
mov
testb
cmp
mov
cmp
ljmp
adc
clc
push
mov
hlt
cmp
fs
push
mov
xor
fsubs
stc
mov
add
std
idiv
loope
or
popa
dec
sahf
jns
iret
jb
or
push
jb
xor
dec
outsl
xor
jb
adc
add
repnz
and
mov
mov
cmpsb
dec
mov
pop
popa
or
sbb
jmp
jo
cwtl
push
lods
push
xor
mov
jbe
in
add
and
jae
subb
mov
dec
notb
std
sbb
mov
mov
jne
jbe
pop
repnz
mov
pop
xchg
les
or
xchg
inc
mov
bound
in
fwait
inc
add
jns
add
hlt
add
ret
pop
mov
mov
ljmp
pop
adc
add
xor
rolb
pop
pushf
icebp
mov
push
setns
pop
adc
adc
xorb
sbb
test
repz
jmp
pop
mov
shl
aas
dec
xor
sub
jb
mov
inc
mov
outsl
sbb
mov
adc
repnz
jl
shlb
dec
adc
sti
lock
or
pop
adc
packssdw
xchg
nop
nop
cmp
int3
or
sub
fisttpll
inc
mov
sbb
jo
rcr
xor
pop
lods
xchg
mov
adc
adc
adc
jb
aam
xchg
sbb
jne
jecxz
cmpsl
loope
lea
add
lcall
xor
aad
cmpsl
and
sub
int3
loopne
daa
faddl
push
add
inc
mov
orb
data16
testl
or
jp
mov
mov
fcoml
fs
das
add
sub
test
ljmp
pop
pop
add
jmp
jmp
int3
sub
xchg
inc
push
movsb
xchg
mov
dec
int3
xchg
push
jl
pop
insb
into
mov
xor
sub
insb
ret
adc
pop
sbb
add
jl
add
pop
xchg
dec
mov
fidivrl
fnsave
ret
and
cmp
fidivl
loopne
outsl
xchg
add
push
rolb
jp
or
pop
cmpsl
and
enter
rcll
and
addr16
lock
shrb
rorl
xor
cltd
push
jbe
dec
iret
mov
add
nop
cwtl
out
arpl
sbb
es
fdivrp
dec
pop
cmp
ret
fwait
sub
mov
fcmovnbe
insl
jbe
sub
arpl
mov
idiv
cmc
adc
fcoml
xchg
fwait
in
pop
mov
fidivrs
fidivs
in
mov
das
js
inc
mov
test
sub
jno
int3
inc
and
nop
negl
xchg
addr16
in
mov
hlt
jns
push
movsl
nop
push
mov
aad
mov
lods
ret
xchg
mov
mov
mov
mov
and
or
dec
or
mov
cmpsb
imul
xor
addr16
xchg
mov
mov
pop
mov
mov
std
fldenv
cltd
push
sbb
sub
lcall
outsl
pop
ljmp
cld
bound
cmp
xchg
fsubrs
scas
fiaddl
push
sbb
aam
fsubrp
ja
insl
cld
into
mov
add
xor
mov
lods
xchg
xor
adc
mov
pop
cmp
sub
addl
mov
rcrb
jbe
insl
jne
lcall
pop
xor
dec
lods
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
sub
in
rorb
pinsrw
setae
xchg
add
lock
stos
jge
addr16
and
jae
jb
adc
aaa
ds
ret
lcall
mov
je
lahf
cmp
xchg
add
mov
jge
rclb
jbe
xchg
arpl
daa
fcos
fwait
and
shl
call
cmp
cmp
xchg
mov
ja
sub
clc
push
mov
lret
stos
xor
mov
push
les
ss
outsl
hlt
in
lahf
or
xor
cmp
fists
add
fnstcw
pop
push
mov
push
mov
cmp
loop
pop
outsb
hlt
arpl
mov
rcll
out
fldpi
cmc
dec
gs
decb
adc
cmp
ss
mov
nop
bound
cld
das
int3
mov
mov
jle
cmp
out
pop
fwait
lcall
push
sub
addl
call
jge
xchg
pop
jb
dec
dec
lret
pop
icebp
sbb
push
jle
fstpl
and
push
insl
push
and
jmp
mov
and
mov
les
clc
sbb
in
and
dec
push
rorl
pop
cld
cltd
cmp
gs
bound
cmp
pop
and
xchg
push
inc
fidivs
cmpsb
into
inc
push
sub
cwtl
adc
cwtl
std
inc
divl
ds
jae
mov
ret
inc
cmp
mov
clc
mov
jb
sub
in
cmp
scas
mov
out
int3
or
cmp
lcall
pop
jo
lods
pop
dec
aaa
cli
push
add
decb
ljmp
xor
adc
pop
lcall
add
cmp
stos
sbb
iret
push
insl
scas
leave
int
test
cltd
push
mov
add
adc
cli
std
and
popf
es
pop
mov
mov
int
jge
in
subl
jnp
inc
xchg
js
dec
sti
or
adc
mov
test
test
lcall
sbb
ficomps
push
roll
pop
int3
dec
clc
into
xorb
or
cmp
inc
lea
inc
cld
dec
fists
mov
out
and
or
mov
enter
test
dec
insb
xor
adc
xchg
int
scas
clc
jp
pushl
test
cmc
lret
dec
cwtl
cs
stc
movsb
in
push
popa
push
cmp
mov
sbb
jb
test
sarb
cmpsl
xchg
repnz
enter
inc
sub
jle
movb
mov
pop
pop
or
out
fwait
jb
add
and
hlt
adc
push
mov
addl
push
fnstcw
sub
sbb
in
add
jbe
mov
xchg
mov
mov
sbb
mov
add
enter
adc
ret
mov
lret
xchg
dec
shrb
cs
or
daa
push
imul
das
shll
nop
dec
rcl
sbb
and
push
xor
cmpsb
mov
inc
jmp
cmp
sbb
jp
mov
ja
mov
mov
mov
inc
or
gs
inc
sbb
xchg
mov
imul
xchg
fldt
xchg
or
movsl
insb
lahf
fcoms
mov
cmovae
cmp
test
dec
xor
leave
sbb
jne
inc
and
cmp
cmp
iret
mov
inc
lods
sbbl
nop
loop
and
inc
push
xchg
mov
jnp
fisttpll
push
scas
ss
cwtl
lds
jl
aas
test
push
mov
and
andb
and
mov
or
or
enter
sbb
pop
loop
rclb
lds
daa
pusha
out
pop
out
call
inc
or
data16
push
jae
push
pop
sub
adc
loope
cs
rcll
xchg
add
popa
arpl
mov
pop
and
incb
jmp
pop
push
dec
fsts
push
push
lret
fs
mov
push
push
and
adc
and
xchg
div
sbb
fstl
add
ds
test
mov
add
dec
lods
sbb
int
push
test
sbb
push
int
mov
lret
push
lret
cld
lea
in
sbb
das
jle
shrb
cmp
outsl
cwtl
xchg
fisubs
andb
cmp
sbb
sub
adc
pop
push
ljmp
mov
jle
test
lahf
lds
adc
sub
mov
add
out
stos
jae
test
clc
mov
or
cmp
sbb
ja
movsl
mov
push
xchg
fcomp
dec
adc
in
xor
mov
jo
scas
clc
sbb
out
pop
je
cmp
jnp
adc
pop
filds
xor
dec
ret
pop
dec
jmp
and
jb
add
jne
lea
fucomp
pop
mov
xchg
mov
mov
pop
cmc
outsl
outsb
cs
xlat
fdiv
out
jmp
pusha
pop
cmp
daa
jp
mov
popa
cwtl
push
mov
sbb
or
jmp
les
insl
sahf
xor
cmpsl
imul
jnp
xchg
fildl
mov
pushf
mov
rol
hlt
repnz
mov
iret
scas
inc
mov
push
xchg
cld
imul
rep
fisubs
jp
cmp
or
bound
pop
mov
je
outsb
ret
out
rclb
cwtl
idivl
mov
mov
pop
sub
mov
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
pop
aam
dec
mov
pinsrw
psllq
and
rcr
dec
cmp
int
push
stos
int
outsl
stos
cmp
test
pop
in
shrl
push
stos
les
pminub
dec
mov
mov
stos
jle
je
push
mov
insl
sbb
add
lds
leave
test
mov
in
repnz
lret
cmp
daa
lcall
mov
mov
inc
add
mov
mov
movsb
xchg
in
leave
pop
movups
sub
gs
test
call
add
xorb
push
cmpsl
out
sahf
dec
mov
icebp
xor
shl
xor
mov
dec
pop
xchg
out
outsb
sbb
sbb
sub
and
ss
push
cmpsb
sbb
fimuls
xchg
aaa
mov
jge
mov
or
or
stos
neg
cmp
inc
xchg
inc
into
sbb
xchg
lods
xor
xor
stos
push
fistps
push
or
mov
dec
rsm
xchg
imul
leave
pop
jae
jmp
dec
lds
loop
std
jae
pop
test
inc
mov
add
fs
pushf
add
inc
loop
mov
jg
lods
lock
fistpll
pop
in
sub
mov
mov
inc
das
jle
cwtl
cmp
xchg
popa
sub
mov
mov
jp
pop
xchg
add
add
and
filds
push
ss
push
push
dec
jbe
xchg
mov
push
jns
sub
push
or
xchg
mov
fwait
xchg
js
repz
push
and
or
lds
push
pop
je
cltd
push
xor
int
jecxz
movsb
xchg
mov
aam
mov
cmp
cmp
scas
sub
lods
sbb
lcall
pop
stos
je
dec
int
xchg
sbb
inc
lock
pop
pop
outsb
jmp
sbb
add
add
xchg
dec
push
or
dec
xchg
sub
int3
or
pop
sub
xor
imul
test
je
inc
stos
in
icebp
or
leave
add
and
xor
je
and
adc
aad
int3
mov
add
sbbl
jle
aas
pop
jo
addr16
pop
ds
fisttps
imul
xchg
dec
add
fsubs
ret
jo
pop
mov
jecxz
dec
test
push
sbb
fsubp
or
mov
mov
jg
movsb
fwait
add
sub
mov
mov
dec
push
and
push
xor
mov
inc
sub
and
out
arpl
xchg
lret
sbb
shll
and
push
mov
shlb
mov
addr16
dec
jb
pop
pop
pop
loopnew
cmp
pop
sbb
pop
mov
mov
push
inc
stos
out
xor
jp
daa
push
jle
sti
roll
or
push
mov
cmp
mov
pop
and
jae
orb
push
out
xchg
or
cmp
test
xor
imul
out
imul
inc
pop
out
daa
stc
inc
lret
ljmp
and
out
and
jno
bound
cmovg
mov
mov
and
jno
out
in
fs
dec
rcr
xchg
sti
adc
aam
fwait
das
bnd
imul
in
sub
inc
popf
or
call
roll
loope
fnstcw
jae
dec
sbb
pmaxsw
mov
filds
pop
sbb
dec
in
jbe
mov
dec
int3
lds
dec
sub
das
imul
cmp
insb
pop
xor
imul
mov
inc
repz
mov
add
push
adc
jmp
les
inc
popa
mov
xchg
fcomps
xchg
xor
add
pop
out
aas
loop
xchg
inc
cwtl
dec
pop
pop
adc
and
mov
push
lock
pop
loop
xchg
add
cs
ficoml
xlat
cmpsb
jno
xchg
cltd
add
or
sbb
int
mov
addr16
enter
por
push
push
or
ds
and
clc
daa
pop
fistps
inc
out
and
stos
push
fisttpl
hlt
subb
daa
mov
sbb
ficoml
add
imul
mov
push
xchg
jae
dec
mov
cld
jae
fcomip
mov
mov
aam
mov
lea
dec
sarl
sub
js
inc
popa
sub
stos
andb
arpl
add
icebp
sub
testb
xor
inc
stos
loop
or
in
inc
mov
cli
or
xchg
mov
and
push
sbb
popa
fisubrs
andb
aad
je
adc
xor
enter
cmp
or
ljmp
pop
mov
out
jnp
add
test
dec
xchg
push
jg
mov
enter
popa
push
lahf
mov
test
mov
mov
aad
loope
inc
ja
xor
int3
insb
and
pusha
push
repnz
cmp
sub
repz
pop
mov
lea
push
and
and
lods
lds
mov
in
mov
gs
push
sti
or
pop
or
cltd
sbb
pop
pop
push
jle
int3
or
fistpll
into
insl
cmp
das
pusha
cltd
mov
sbb
jns
hlt
mov
andl
andb
mov
loop
mov
dec
cmp
bound
xchg
addr16
adc
movsb
test
fbld
and
aam
jl
jmp
push
sbb
out
sub
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
filds
pinsrw
comiss
fistpl
xor
rcr
add
adc
repnz
outsl
enter
aaa
adc
push
icebp
inc
mov
cs
mov
lods
mov
les
add
xor
aad
push
sub
int
shll
inc
mov
sti
les
fs
daa
fwait
mov
mov
aad
insl
sbbl
pushf
mov
setbe
ja
mov
pushf
push
aad
jmp
mov
ljmp
pop
mov
ror
icebp
in
aad
adc
jmp
inc
lods
pushl
push
adc
outsl
jecxz
jb
or
sub
in
pop
clc
fisubrl
fdivl
sbb
xchg
in
mov
imul
idivl
mov
cmc
lock
cmp
or
js
xor
bound
push
mov
mov
ljmp
cmp
out
divb
mov
or
into
adc
data16
push
fldt
test
xor
lods
loopne
in
lret
js,pn
add
testl
mov
sub
mov
mov
filds
movsl
cmc
jp
iret
sbb
sahf
xor
mov
fcmovnbe
testl
fisttpll
cltd
sub
int3
bswap
mov
idivb
gs
jno
xchg
adc
lock
cmc
xchg
iret
jg
je
fdivl
fwait
xor
andl
outsb
js
ret
dec
adc
pop
pop
jno
ret
cld
arpl
mov
out
out
adc
in
pop
test
mov
stc
vdivss
stc
pushf
loop
cmp
push
mov
test
movsl
dec
cmpsl
into
lods
mov
sbb
xchg
sub
or
das
iret
arpl
shll
dec
dec
sub
push
push
adc
sbb
cwtl
cs
clc
push
xchg
jmp
lods
cmp
sbb
dec
shrb
and
mov
mov
hlt
test
xchg
sub
js
mov
inc
loop
xchg
int3
mov
cltd
imul
jb
sub
fstp
cmp
push
je
xor
inc
fstp
movsl
push
add
dec
iret
fincstp
or
cmpl
adc
or
mov
pop
fnsave
in
dec
sbb
test
arpl
gs
mov
mov
icebp
dec
aam
stos
xchg
sub
cmp
dec
jmp
adc
lods
mov
xor
and
int3
cwtl
ret
arpl
lds
push
mov
insb
nop
lods
xchg
aad
jecxz
dec
rorb
lock
pop
addr16
hlt
test
jmp
fwait
cmp
stc
lret
mov
ja
shr
inc
cltd
xchg
loop
ja
push
mov
jo
and
jmp
and
or
mov
popa
nop
mov
pop
pop
mov
cwtl
dec
lods
loop
adc
fs
mov
mov
xor
test
push
iret
icebp
sbb
in
push
test
mov
push
sbb
aam
pop
dec
fldz
mov
pop
xchg
xchg
push
add
mov
adc
in
adc
fisubs
push
and
jae
cmp
scas
inc
adc
ss
jae
xchg
add
adc
pop
adc
es
sub
data16
aam
stc
mov
cmpsl
jns
xor
mov
ja
and
inc
sub
inc
gs
add
ljmp
fistpll
mov
adc
xlat
into
scas
out
pushl
cltd
pop
and
pushl
cs
dec
cmpsb
or
sub
inc
movsb
xor
roll
lock
cs
ss
add
sbb
out
sti
inc
jge
sarb
and
mov
mov
pop
notl
mov
jbe
cmp
jp
mov
mov
adc
xchg
jne
je
jno
shrl
movsl
mov
push
shr
sbb
clc
cltd
inc
inc
dec
mov
aas
xchg
mov
jecxz
jle
jne
mov
sbb
push
and
pusha
sub
adc
dec
iret
push
fildl
fidivs
push
rcrl
jb
das
inc
or
mov
cmpsl
xchg
ds
add
cmp
arpl
cwtl
sahf
adc
xorl
push
jnp
adc
xor
jg
test
repnz
inc
ljmp
insb
add
call
data16
cmpsl
loope
orb
or
cld
stc
daa
push
mov
je
lock
out
cmpsl
cs
imul
daa
imul
sti
mov
cltd
mov
or
std
jmp
movsl
mov
insb
mov
add
rcrb
popf
mov
dec
cwtl
lcall
cmp
mov
pop
jns
xchg
test
fnstcw
adc
inc
mov
add
lahf
push
and
xchg
adc
add
or
insb
jo
sarb
pop
or
frndint
push
addr16
insb
fisubl
inc
call
jb
imul
pop
aas
lods
mov
push
pop
test
in
and
cmp
in
fmuls
add
mov
sub
sbb
sub
clc
clc
jmp
lret
int
xor
xchg
pop
xchg
add
push
ljmp
daa
data16
dec
push
iret
mov
mov
imul
notb
dec
mov
inc
arpl
inc
jo
sub
xor
das
das
aaa
inc
imul
rcll
pop
cmpsb
dec
in
jg
mov
sub
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
push
or
pinsrw
or
lds
insb
xor
mov
pop
or
call
add
pop
aas
sub
std
push
ja
inc
jno
mov
aaa
enter
cs
loop
enter
cli
xor
add
mov
or
and
xor
popa
sbb
cmp
mov
dec
inc
mov
icebp
cs
insl
mov
jle
pusha
shll
mov
xchg
lock
cwtl
mov
xor
xchg
cli
cld
arpl
mov
dec
lret
addr16
stc
sub
inc
push
mov
dec
mov
clc
out
fcmovu
xchg
adc
jbe
and
mov
daa
and
scas
and
xchg
jo
push
roll
in
sbb
adc
sub
cmp
jae
fsubrl
push
cmp
or
sbb
imul
add
jge
mulb
lret
idivb
sarb
adc
add
push
add
sub
sahf
xchg
repz
xchg
popf
jno
rol
imul
inc
es
mov
mov
push
repz
add
fldenv
add
jl
or
int3
mov
and
shll
or
lock
mov
xchg
add
xchg
pop
add
xchg
mov
mov
loopne
jno
inc
and
inc
sti
ds
leave
mov
subb
jmp
adc
pop
movsl
inc
test
dec
insb
movsl
push
call
jecxz
loope
outsl
andl
fildll
mov
or
cmp
loopne
jecxz
and
mov
pop
push
jl
lret
xchg
cli
sti
ret
jmp
mov
mov
cltd
push
mov
push
sbb
fiaddl
mov
daa
jb
mov
bound
std
push
pop
lods
cmp
ret
sahf
mov
shll
iret
add
sub
sbbb
sbb
push
lods
aam
xchg
por
jae
xchg
sbb
cmp
pop
adc
pop
push
and
lods
dec
dec
and
sub
inc
cmpsl
dec
repnz
mov
in
mov
xchg
sub
test
outsl
sbb
cli
jae
imulb
outsb
mov
adc
mov
ret
push
mov
mov
idiv
or
in
inc
cmpsb
fcoml
xor
inc
and
movsb
adc
push
cmp
dec
mov
scas
mov
pop
add
pop
cld
ret
fs
outsb
loope
fnstcw
and
mov
in
ret
popf
add
aaa
rclb
out
adc
mov
repnz
addr16
pop
lea
xchg
sbb
out
lds
push
orb
adc
mov
shl
add
push
in
leave
pop
enter
xchg
xchg
push
popa
pop
out
mov
idiv
inc
imul
dec
loop
lcall
aam
mov
mov
cmpsb
ror
lcall
xchg
dec
sbb
xor
sbb
ljmp
dec
std
cmc
mov
push
jno
sub
pop
outsl
cmp
mov
sub
repz
js
sti
out
test
aad
sahf
push
xor
dec
push
jle
hlt
in
jo
cmpb
mov
mov
imul
lock
mov
xor
or
jne
outsb
xchg
lods
jno
aam
pop
das
jb
pop
cmp
mov
mov
xchg
adc
adc
sarb
inc
dec
lret
mov
ljmp
mov
aaa
je
movsl
mov
movsb
icebp
cmp
jo
fisubl
xlat
xchg
xlat
jae
pop
pop
jae
clc
fcomp
push
jg
or
fcoml
mov
mov
popa
xor
scas
push
sahf
xor
jno
mov
in
movsl
dec
mov
cmp
imul
lret
aas
sti
mov
pop
jb
xchg
test
loope
mov
mov
je
cmpsb
movzwl
mul
movb
mov
xor
sbb
jnp
test
inc
xor
jecxz
fwait
lcall
inc
scas
xlat
cli
stc
or
push
or
mov
xor
adc
fwait
cmp
dec
jecxz
inc
mov
inc
cmp
outsl
jne
xchg
add
jecxz
nop
cwtl
test
adc
inc
loopne
xor
shll
lock
das
add
div
aaa
nop
xor
mov
and
testl
push
sub
sbb
les
cld
in
ss
ljmp
sbb
dec
test
in
sbb
jmp
repnz
int
mov
dec
sbb
sub
dec
stc
lds
fmull
nop
fs
imul
ja
sbb
mov
stos
dec
cmp
xor
adc
sub
adc
and
dec
lds
or
hlt
shll
pop
xor
enter
out
fwait
mov
mulb
and
xchg
sti
adc
mov
popf
sarl
lret
xlat
mov
fldlg2
jmp
pop
arpl
mov
pop
sub
std
sub
scas
mov
out
lahf
push
fimull
pop
mov
xchg
mov
addl
aas
mov
jge
rorb
lock
lahf
shll
xor
jnp
xor
stos
fs
icebp
sub
mov
mov
cmp
dec
inc
lahf
mov
testl
cmpsl
mov
lods
jmp
out
outsb
sub
mov
cmp
rol
push
dec
sti
in
fmuls
mov
dec
mov
mov
pop
mov
mov
mov
sti
ja
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
sahf
jp
mov
add
xcrypt-ctr
cmpsl
sbb
test
mov
aam
adc
scas
shlb
test
and
jl
pop
dec
mov
inc
dec
lcall
xchg
cmpb
mov
addr16
int3
mov
xor
les
popa
mov
sbb
int
jge
jecxz
adc
mov
sbb
sbbl
xor
cmp
dec
cmpsl
fists
and
inc
push
gs
rorb
cwtl
and
push
inc
js
and
fdivr
sub
je
sti
aad
jecxz
mov
mov
or
inc
push
adc
sysexit
imul
sbb
sub
xor
fcompl
loope
cmc
cmp
push
sbbl
lods
push
jne
scas
jp
ror
int3
cltd
pop
cmp
insb
pusha
inc
out
mov
mov
jg
mov
cmp
out
pop
testl
inc
mov
xchg
in
adc
inc
imul
mov
mov
cmp
bound
je,pn
iret
and
xchg
or
dec
imul
cmp
add
push
mov
xlat
and
mov
add
and
cwtl
inc
jecxz
cltd
mov
and
cmpsb
or
push
mov
loop
adc
test
loopne
adc
orb
out
test
pop
mov
jecxz
addr16
pop
cmp
mov
nop
gs
in
lods
addr16
les
lahf
iret
pop
mov
jns
mov
pop
mov
or
les
dec
sbbb
or
mov
adc
jne
mov
icebp
rclb
sbb
loopne
inc
imul
pop
xchg
and
xor
sbb
lds
lock
xchg
shrl
jge
mov
mov
push
mov
mov
test
outsb
lcall
pop
xchg
fwait
and
sti
aaa
imul
and
dec
cmp
daa
xor
push
dec
mov
push
lea
fucom
add
jb
mov
leave
adc
ret
outsl
add
stos
push
lahf
and
hlt
lods
mov
jbe
stos
les
push
jecxz
and
mov
pop
ds
dec
add
cmp
jmp
fnstenv
cltd
test
sahf
aas
fldcw
xchg
add
xchg
mov
inc
lock
lds
test
into
pop
mov
push
jb
fsubl
adc
ds
xchg
cmp
nop
dec
inc
fidivrl
das
xchg
pop
xchg
fists
adc
sub
jge
insb
jne
jl
mov
adc
jne
mov
and
jle
xchg
and
ror
inc
dec
ds
lds
push
mov
sub
pop
les
adc
sub
out
xchg
inc
andb
jecxz
imul
jno
add
lds
add
pop
push
icebp
dec
sti
es
movsb
rorb
in
repz
xor
mov
in
fcomps
xchg
mov
lods
jge
mov
mov
pop
sub
ret
mov
orb
and
and
push
add
shrl
cmp
cwtl
mov
movsl
jne
sub
xchg
aas
jmp
pop
push
mov
fisubs
mov
in
add
jno
dec
std
lret
add
arpl
daa
mov
mov
inc
mov
fsubp
adc
sar
sub
sahf
or
bound
pop
xor
jle
sbb
fists
je
stc
out
sbb
fsubr
popa
sbb
sub
pop
cmpsb
sub
jne
imul
pop
push
insb
mov
ds
arpl
xchg
lds
dec
test
mov
xchg
icebp
in
pusha
cmp
inc
cs
push
add
mov
stc
sbb
jp
push
inc
shrb
cltd
test
xchg
aas
sbb
cli
add
aad
dec
add
xor
jns
cmp
dec
es
push
xor
out
mov
enter
scas
inc
fwait
add
ljmp
mov
out
add
inc
aam
xchg
xlat
push
pop
in
push
xorb
cli
loopne
dec
cwtl
insl
pushf
and
cs
add
iret
icebp
mov
les
adc
rorl
aad
jp
stc
stos
rcr
lcall
popf
ljmp
sti
sti
fdivp
jecxz
lahf
loopne
outsb
mov
es
movsl
popa
clc
scas
push
cmp
bound
sarb
xchg
dec
jne
pop
sub
mov
sub
call
add
aas
std
mov
mov
lret
lcall
enter
push
push
pop
xchg
stc
insb
add
cmp
jno
insb
lahf
dec
leave
jns
cwtl
insb
inc
in
les
or
push
fdivl
and
fwait
stos
andl
xor
nop
sub
add
rorl
xor
lock
out
rolb
ret
test
sbb
xchg
inc
xor
pop
adc
fnstcw
pop
loop
fimull
push
repz
xchg
mov
push
movsb
ret
mov
push
addr16
gs
out
sar
xor
jns
xor
aam
dec
xchg
mov
cmp
and
idivb
sub
into
cmp
jge
push
add
roll
sub
mov
sbb
inc
addr16
clc
inc
sub
dec
sbb
lods
sahf
loopne
rcll
notl
shlb
xor
fdivl
into
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
hlt
mov
pinsrw
cmovne
test
inc
sub
dec
jno
and
arpl
outsl
popf
scas
cmp
jae
insl
sbb
fimull
xchg
adc
xor
push
adc
dec
jp
or
and
xchg
pop
es
sbb
cmpsb
mov
test
add
jo
sti
aam
stos
rcll
pop
lret
xchg
push
out
pop
les
pop
daa
gs
loope
aad
in
ret
daa
std
mov
xchg
stos
adc
stos
pop
hlt
mulb
xchg
mov
xlat
inc
add
pop
inc
jp
pop
sub
testl
repnz
movsl
dec
mov
mov
cwtl
jl
popa
inc
or
cmpb
xchg
sub
adc
fmuls
repz
xor
inc
ljmp
push
mov
out
gs
push
push
rcll
addb
jbe
inc
repnz
jb
arpl
dec
cmp
jo
add
add
mov
jnp
fsts
aad
cmpsb
pop
push
cmp
test
lret
jle
jp
jo
adc
inc
cmp
mov
add
add
cmp
jl
sbb
subl
xchg
or
lea
push
add
dec
aas
sbb
stos
mov
cmp
repz
jmp
cmp
add
jnp
fidivrs
lock
and
repz
dec
addr16
mov
paddsb
fcmove
popa
pop
adc
and
inc
xchg
and
fstps
in
dec
jecxz
adc
mov
dec
inc
ret
fcomps
rcll
push
cwtl
fadds
sarb
outsb
fs
add
mov
jne
fs
cmp
neg
mov
sbb
mov
and
cmp
pop
je
outsl
inc
cmp
and
rcrl
push
stc
dec
jno
std
sbb
mov
in
jge
jg
ret
push
pushf
lods
nop
in
push
fwait
scas
dec
popf
lahf
push
xchg
pop
mull
loopne
mov
repnz
mov
add
sbb
hlt
mov
mov
testl
cmp
lret
daa
loopne
dec
enter
gs
adc
mov
lret
sbb
mov
and
inc
sub
test
cwtd
mov
sbb
dec
push
dec
insb
repnz
cli
aad
popf
dec
jl
cmp
test
lret
push
cmp
sbb
pushf
mov
xchg
mov
cmpsb
loopne
ret
dec
xor
cli
push
icebp
outsb
out
je
popa
jne
outsl
shlb
dec
mov
adc
adc
add
or
ret
push
cmp
adc
iret
adc
ja
enter
popa
ss
mov
in
pushf
xor
xchg
cld
jbe
cmp
clc
xor
xchg
sbb
push
pop
adc
inc
cmp
xor
cmp
sub
scas
cltd
and
dec
call
xor
push
popa
outsb
xor
hlt
test
adc
mov
mov
push
xor
inc
jecxz
xor
mov
xchg
jnp
jb
dec
mov
shll
adc
sbb
pop
adc
sbb
cmpsb
iret
xchg
push
cmp
add
inc
xchg
rclb
or
das
js
push
enter
pop
shrl
inc
and
sahf
sbb
movsb
xchg
xchg
rorl
rclb
xor
loopne
shrl
or
lret
lahf
aad
jg
lods
shlb
and
adc
inc
push
imul
je
vmwrite
leave
mov
shrb
lock
cmpsl
adc
iret
icebp
sub
out
shl
jg
scas
lret
push
and
cmp
fs
rorb
cmc
outsl
cld
test
lahf
dec
mov
mov
and
xor
mov
dec
arpl
push
ja
inc
add
dec
inc
or
pop
cmp
fwait
cli
aam
jge
repz
xchg
loopne
cmpsl
lret
out
clc
lods
incl
jmp
inc
test
xor
cmp
jae
movsb
test
push
aaa
enter
in
xchg
xor
dec
mov
arpl
cmc
lock
sahf
dec
jo
gs
xchg
or
sarl
out
xchg
pusha
add
jnp
in
pop
and
sbb
or
popa
jl
dec
mov
xchg
fsts
std
push
das
mov
jp
popf
das
insb
jg
mov
push
push
decb
pop
xchg
in
pop
push
mov
adc
cmp
repnz
cmc
in
inc
out
insl
imul
pop
pushf
ja
mov
pop
stos
and
loop
push
and
xchg
cmp
int3
and
out
adc
dec
ja
push
add
shlb
loop
fbld
dec
add
ficomps
xor
scas
dec
sbb
sbbb
mov
stc
mov
cmp
in
mov
mov
je
ss
mov
adc
cs
icebp
inc
addr16
daa
mov
lods
in
andl
sbb
pop
pop
xor
popa
pop
lcall
dec
out
inc
mov
lock
cmp
add
ja
sbbl
cltd
jl
cwtl
cmpl
in
push
push
inc
mov
sub
xchg
incl
fsubs
fcoms
ds
xor
and
shlb
push
mov
add
mov
das
and
dec
mov
jp
xor
push
sarb
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
add
js
add
mov
leave
jbe
xor
fldl
xlat
stos
ljmp
and
out
mov
mov
addl
adc
scas
mov
je
jle
cmpsb
sbb
jns
dec
xchg
pop
fsubrl
cmp
pop
test
fsubrl
pop
in
fldl
adc
add
xor
adc
and
xor
cli
xor
cltd
pusha
jl
mov
loopne
push
jge
pop
imul
push
or
shlb
jne
imul
lock
stos
sub
inc
jnp
dec
mov
mov
push
xor
lock
mov
pop
sbb
ss
push
xchg
or
insb
clc
push
fldln2
mov
xor
push
and
js
insl
loopne
aas
adc
or
sahf
xor
xor
lods
mov
jge
mov
iret
sarl
pushf
add
lcall
lea
xor
xor
xor
out
jno
push
les
sarl
cmp
shrb
and
pop
mov
xor
inc
aad
xor
mov
pop
jns
cld
sub
mov
mov
cmpsb
xchg
mov
test
pop
mov
xchg
inc
mov
pushf
xchg
sti
pop
sbb
push
loope
mov
loop
repnz
jnp
out
cmp
fcoml
adc
sub
xor
xor
icebp
push
pop
fcmovu
test
fdivr
les
dec
insl
aam
ja
xchg
mov
and
jle
sti
fs
xor
mov
mov
fstpt
cmc
mov
mov
push
hlt
add
adc
int3
mov
xorl
test
and
push
mov
jp
in
stos
loopne,pn
xor
test
cli
cld
popf
xchg
jo
xchg
sbb
sbb
add
push
dec
mov
inc
imul
imul
out
and
leave
pop
push
ds
in
aad
lds
inc
sbb
dec
dec
mov
lods
pop
or
jbe
loopne
dec
jecxz
enter
mov
std
stos
sbb
inc
test
pusha
jp
popf
cmp
sarb
cmpb
inc
inc
cmc
clc
push
sti
outsb
cmp
icebp
fistps
into
jne
mov
cmpsb
fidivl
mov
addr16
aas
faddl
hlt
push
or
call
mov
cmp
dec
adc
aam
icebp
mov
mov
and
jbe
mov
lods
bound
xchg
add
jb
div
mov
mov
add
xchg
arpl
ja
or
push
cmp
insl
xchg
mov
xlat
sbb
adc
xchg
dec
je
pop
jns
mov
ret
mov
push
xchg
jge
cmp
mov
into
mov
popf
cld
fnop
insl
sub
adc
jg
enter
mov
les
sub
std
push
mov
dec
subl
inc
loop
pop
push
call
inc
call
in
cmpsl
inc
jle
or
mov
cmp
push
adc
lret
jbe
sbbb
inc
inc
data16
dec
inc
aaa
insl
jp
add
push
pop
xor
inc
lock
clc
mov
push
mov
cmp
pop
std
sub
stos
out
hlt
mov
inc
jmp
and
push
mov
jmp
aad
dec
xor
cld
out
mov
jb
stos
dec
add
push
mov
push
xlat
outsb
std
lds
jge
sbb
cmp
test
ds
cmp
lret
out
aaa
jno
jne
lock
jmp
cwtl
mov
out
mov
jp
rcll
inc
cs
in
stc
cli
mov
push
mov
outsb
xor
cmp
cmpl
lods
outsl
test
movsb
mov
fdiv
insb
xchg
rcrb
mov
dec
pop
cmpsl
dec
ds
outsb
pusha
outsl
sub
insl
enter
scas
cmpsb
call
and
pop
ljmp
inc
mov
adc
mov
or
outsb
pop
subb
xchg
pop
int
mov
mov
lahf
sti
dec
xchg
adc
cmp
xor
ss
ds
mov
aas
xchg
shr
push
sbb
add
and
fiaddl
cmp
and
mov
jno
leave
add
cli
push
das
pop
sbb
xor
imul
pop
mov
ret
clc
mov
cltd
dec
aad
push
nop
inc
call
add
scas
mov
loope
jo
push
mov
data16
xlat
pop
flds
mov
sti
cmp
cmpsb
mov
push
mov
add
mov
adc
and
add
add
icebp
enter
test
enter
xor
sbb
shrl
or
sbb
ljmp
nop
fdivl
movsb
xor
test
sahf
notb
adc
repz
test
jo
aaa
or
in
or
xchg
or
push
out
iret
jae
rorl
movsb
popa
out
insb
orb
movsb
mov
fnstcw
adc
mov
insl
dec
cltd
icebp
dec
in
pushf
int
popf
and
mov
rcrl
pop
sub
or
mov
cmc
sub
xor
mov
loop
lahf
pushf
jmp
cltd
scas
lahf
cltd
mov
sub
insl
ret
push
push
pop
xchg
rcl
adc
out
push
mov
test
sbb
jmp
cmpsb
repz
pop
jle
sub
fidivs
xchg
fistl
push
mov
xchg
imul
gs
ret
cmpsb
sub
les
addr16
pop
imul
mov
inc
ss
jns
xchg
jne
out
mov
xchg
outsb
fs
sbb
sub
cmp
lahf
inc
shlb
mov
push
xor
iret
mov
lret
xchg
push
mov
imul
subl
aam
scas
pushf
mov
into
loopne
pop
cmp
jl
iret
scas
hlt
data16
push
jne
imul
movsl
out
pop
inc
nop
sub
mov
stos
loopne
mov
sarb
add
adc
xor
xchg
arpl
out
dec
dec
js
fcmovb
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
jecxz
js
push
pswapd
xor
gs
pop
dec
cld
jns
scas
loope
xor
in
in
mov
es
mov
stos
pusha
cli
fbstp
inc
add
test
mov
mov
jl
mov
push
arpl
rcrl
cltd
fcomps
xchg
ret
jns
ss
sub
rcrl
xchg
fisubrs
or
sub
jnp
mov
into
nop
mov
movl
push
mov
aas
inc
enter
mov
mov
rcr
fsubs
dec
dec
das
repnz
mov
jbe
inc
adc
dec
lock
jg
aaa
or
xor
cltd
add
dec
insb
aad
rorl
xchg
mov
push
mov
cmpsl
dec
divb
or
push
enter
mov
dec
mov
mov
jbe
fadds
imulb
dec
lods
sbb
mov
dec
or
mov
in
leave
inc
mov
lea
sub
or
dec
fists
in
les
mov
fiaddl
test
ljmp
pop
sti
inc
outsb
adc
cmp
push
mov
aas
mov
inc
cmpsb
into
lahf
mov
push
jg
lret
sub
mov
dec
sti
mov
stos
in
repz
fsubs
int
sbb
push
test
lock
mov
xchg
sbb
cmp
shll
push
mov
pushf
mov
cmc
outsl
imul
test
add
fistl
int
ret
insl
dec
adc
or
ds
pushf
mov
jb
or
lods
frstor
or
ret
sub
pusha
xor
pop
insl
push
mov
dec
cmpsb
dec
les
and
cmp
pop
aad
dec
add
mov
repz
push
les
pusha
repz
negl
ret
pop
fstps
arpl
push
adc
test
pop
cltd
sub
pop
test
adc
xchg
dec
sbb
adc
mov
pop
sbb
cmp
addr16
adc
cmp
cmp
or
je
ret
mov
loop
lahf
rolb
btr
push
sub
push
insb
mov
shrl
std
cmpsl
in
jl
push
and
and
aad
mov
out
roll
inc
mov
es
push
fstp
scas
js
xor
in
rcl
pop
test
mov
jo
mov
push
popf
push
mov
add
icebp
sbb
subl
jne
jge
stc
sti
scas
pushf
mov
mov
test
pop
add
scas
es
or
push
fwait
rcl
jecxz
ss
outsl
push
xor
cmc
dec
jmp
fldl
roll
ffree
pop
call
push
lahf
imul
adcb
rcrl
cwtl
scas
cmpsb
or
pop
incl
adc
mov
adc
scas
cwtl
negl
or
sbb
jo
shr
repz
outsl
fsub
in
shll
mov
test
addr16
int3
dec
out
sbb
popf
test
int3
sbb
mov
xor
inc
cmp
dec
outsb
push
sub
mov
mov
xchg
xorb
dec
sub
cltd
pop
sti
das
pop
sbb
aaa
pop
sbb
mov
push
mov
mull
jmp
sbb
cmp
cmp
pop
js
call
fidivrs
push
pop
sbb
cltd
fimull
sbb
mov
xor
popa
push
in
sbb
push
mov
pop
jbe
push
sbbb
loope
outsb
cli
cmp
bswap
fcmovbe
out
push
adc
sub
mov
cld
mov
jmp
aad
lods
loop
stos
lcall
filds
or
insl
cmp
push
scas
push
cwtl
mov
lea
int3
mov
jns
imul
jo
test
adc
adc
std
jecxz
adc
or
add
mov
scas
adc
and
mov
push
icebp
push
fmul
push
sub
addb
jae
nop
ds
sbb
fcmovu
mov
out
test
rol
fisubrl
std
mov
adc
jne
outsl
leave
mov
aas
inc
cltd
lahf
stc
das
add
pop
jb
sar
and
idivl
cmp
int
aas
lret
shl
pop
fimuls
cmpsl
mov
ja
pop
pop
test
push
hlt
aaa
lcall
lods
adc
xor
dec
pop
subl
and
les
int3
rcll
mov
add
ds
movsl
cmp
cmc
adc
mov
aad
cli
xor
lahf
xor
add
es
stos
outsl
mov
inc
cwtl
mov
sbb
or
mov
sahf
decb
adc
adc
scas
sbb
pop
subb
cs
adc
pop
xor
loopne
cmpsl
adc
jb
push
out
jmp
inc
dec
jae
hlt
mov
mov
fld
or
decl
jge
cmp
scas
jb
stc
addr16
xchg
sahf
loope
push
negl
clc
hlt
fxch
adc
sarl
pop
mov
inc
mov
test
jns
or
or
imul
call
dec
mov
mov
sub
xor
call
push
dec
in
ds
xor
shrb
lahf
pop
pop
or
sarb
mov
ret
inc
add
sub
jmp
fsubs
div
pop
pop
aad
fcmove
push
add
stc
outsb
test
faddl
scas
lds
dec
movsl
seta
es
repnz
lock
cmpsl
push
pusha
and
adc
imul
or
cmc
jb
rclb
dec
mov
dec
xor
jae
xor
cmp
push
aad
push
aam
push
mov
xor
jmp
inc
or
and
dec
aad
xchg
shl
mov
lret
andl
xor
xor
and
push
xor
popa
and
cmp
loope
xchg
cmc
ljmp
imul
out
or
lret
jmp
clc
mov
cld
jge
aad
cmc
xchg
and
aas
inc
dec
shr
ret
xor
cmc
mov
inc
push
fists
mov
repnz
stos
mov
mov
sarl
sbb
ljmp
jae
les
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
mov
insb
xchg
stos
pop
add
scas
cmc
fsqrt
jg
xor
xchg
std
push
cs
lar
xchg
push
xor
lret
adc
iret
in
sub
jle
sbb
add
lcall
sbb
int3
adc
lds
cmp
jle
cmpsl
jbe
aad
adc
rcll
test
jns
test
adc
inc
push
sti
nop
out
pop
mov
jecxz
dec
call
or
xor
dec
cltd
jmp
lret
lret
jns
push
jg
add
mov
scas
jge
out
cmp
testb
inc
jae
das
mov
jb
fwait
ljmp
test
sub
std
lods
push
int3
jl,pt
jg
fcomip
lock
fs
pusha
cmp
xchg
mov
sarl
pop
xchg
es
rorb
fstl
adc
xchg
insl
and
aaa
loope
out
scas
outsl
enter
or
sti
stos
je
jge
call
jns
pop
imul
fldcw
jnp
xchg
dec
rorl
icebp
sti
movl
add
outsl
sub
or
and
jge
cmp
dec
and
push
cmc
jmp
mov
pusha
sarb
hlt
sbb
pop
sahf
out
stos
dec
push
xor
jae
pushf
dec
outsl
arpl
sti
lea
sbb
sarl
sbb
push
push
dec
jecxz
loope
sbb
xchg
mov
leave
jb
xlat
pop
xor
or
repz
sub
lods
sub
nop
and
je
les
jnp
mov
lock
xchg
push
lds
push
dec
dec
mov
insb
push
dec
aam
cld
stos
pop
fldl
lock
inc
loop
push
jbe
mov
adc
iret
out
stos
or
push
test
movsb
leave
jno
or
add
mov
mov
ja
insl
mov
cwtl
nop
pop
cwtl
comiss
dec
dec
ficoml
mov
arpl
push
or
dec
cmc
sub
addr16
fsubp
mov
out
scas
daa
test
xlat
pushf
adc
cltd
dec
and
arpl
cli
xor
push
sbb
cli
add
int
movd
mov
cli
pop
mov
mov
fistl
mov
sub
cmp
pop
push
and
popf
dec
cli
inc
fisubrs
dec
std
xor
pop
and
lods
xchg
loop
clc
jb
into
push
lret
addl
inc
js
or
out
insl
fnstcw
xor
adc
jnp
and
hlt
xor
js
outsb
add
inc
add
xor
xchg
mov
aas
dec
data16
xor
mov
inc
pop
or
loopne
es
outsb
or
cs
rcrb
or
cli
xchg
fcmovnb
into
xchg
clc
xor
cltd
jns
push
cmp
jno
mov
roll
mov
aam
adc
push
cli
xchg
xchg
pop
push
adc
xchg
rorl
lret
mov
lock
lret
loop
out
arpl
xchg
movsl
pop
aad
rorb
fwait
add
xchg
mov
lea
hlt
add
notl
inc
jnp
dec
push
aad
xchg
movsl
ret
div
popf
xor
arpl
adc
into
repz
push
cmp
push
push
in
outsl
aad
xor
in
imul
mov
in
cli
ret
mov
pop
in
ds
mov
push
repz
adc
sub
sub
xchg
mov
shlb
mov
out
dec
leave
dec
lret
icebp
push
xchg
leave
in
pop
mov
or
adc
mov
aad
lret
clc
inc
mov
addr16
ds
test
andl
jno
mov
insl
mov
xchg
pop
or
jmp
push
lods
movb
sbb
or
pop
cmp
xchg
sbb
xchg
ja
sub
sub
jno
sbb
rcr
xor
cmc
out
icebp
scas
or
test
outsl
xorl
jne
add
lock
pop
pop
inc
lret
inc
popf
shll
sub
bound
push
cmp
or
mov
jno
jnp
push
mov
loop
stc
adcb
mov
out
out
inc
mov
call
addb
push
ret
add
ss
push
push
aas
sbb
ret
int
es
jg
pop
pop
jl
jle
xor
xchg
sti
sub
mov
sbbb
aaa
push
idivl
insb
xchg
cld
fdivrs
fdivp
je
js
js
xor
push
xor
sub
push
lea
clc
mov
lahf
jb
sub
jbe
jns
negl
in
add
push
add
andb
xor
xor
jbe
inc
mov
cmp
jmp
lods
jne
fidivrl
jle
adc
xor
or
mov
sbb
mov
insb
pop
loop
adc
jge
inc
fistpl
clc
push
sbb
jae
mov
mov
enter
outsl
cmpsl
dec
mov
jl
push
iret
xor
adc
cwtl
fmul
insl
push
sahf
pop
cwtl
movsb
mov
xor
arpl
xchg
js
xchg
and
mov
xchg
and
mov
fadds
jb
lea
pop
cwtl
fcmovnu
fstps
or
movsb
test
mov
dec
push
lahf
jo
aam
pop
push
iret
jge
pop
insb
orb
aas
pop
outsl
stc
std
sub
inc
std
push
in
mov
sbb
cmp
inc
inc
ss
sub
cmpsb
pop
mov
mov
push
sub
dec
repz
cli
inc
cmpsl
pop
lods
pop
mov
xor
dec
fistl
push
dec
mov
flds
stos
gs
push
ja
push
or
jecxz
push
xchg
in
testl
mov
testb
in
pop
data16
inc
jmp
xchg
lods
mov
sbb
inc
stos
mov
cmp
sbb
leave
movsb
mov
jb
mov
hlt
xchg
mov
cmp
add
mov
pushf
pop
xchg
sbb
push
movl
fidivl
lods
pusha
fisttpl
inc
pop
mov
iret
mov
inc
push
xlat
pop
xchg
cmp
add
mov
mov
add
xchg
pop
into
roll
dec
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
push
out
mov
push
add
sbb
mov
add
mov
lods
aam
imul
xor
inc
or
and
sub
cld
int
ss
sbb
mov
cltd
mov
dec
outsb
repz
lret
ret
add
pop
iret
daa
pop
mov
sub
sub
add
inc
mov
jl
add
adc
add
outsb
cmpsb
pop
je
out
es
xchg
xchg
insb
mov
xor
int
jo
add
and
mov
js
mov
cltd
cld
jge
pop
out
add
in
popf
push
fistpl
pop
adc
movsb
test
cmp
ds
push
cmp
lods
mov
push
jmp
jmp
stos
lea
jns
jl
icebp
test
gs
mov
scas
cmp
pop
cmp
cmp
mov
push
add
jbe
sbb
jp
pop
mov
lock
pop
sbb
adc
push
lret
imulb
xchg
or
and
leave
or
push
add
push
outsl
or
cld
lret
lahf
and
aam
divl
jg
mov
in
jns
das
fsubrl
push
mov
and
pop
push
push
test
pushf
cmp
out
mov
sbb
inc
fdivl
and
cmpsl
icebp
cmp
xchg
cmp
fbld
subl
push
lea
or
lahf
pop
ret
data16
fwait
xor
xchg
cwtl
jge
or
sahf
aas
int3
push
int
sub
inc
loopne
push
ss
xor
pushf
sarb
rorb
xchg
and
sbb
pop
filds
cld
jb
or
in
lahf
jmp
test
adc
ret
lock
push
dec
fnstcw
movb
and
pop
pop
in
and
out
mov
mov
aaa
jmp
subb
pop
lcall
jnp
inc
pushf
test
mov
xor
sub
and
imul
and
out
push
sbb
fstps
pop
dec
add
loop
dec
add
or
dec
lds
imul
fwait
lods
or
xor
test
pop
inc
xor
jbe
je
leave
loop
lret
xor
ret
mov
sbb
loop
cmpb
sub
fistl
pop
sbb
mov
inc
sub
fcoms
jmp
pop
data16
out
xchg
dec
inc
pop
jne
outsl
xchg
mull
test
or
pop
sub
push
outsl
sub
xchg
ljmp
repz
pop
in
sub
daa
aam
int
lret
xchg
fdivrs
ds
stos
add
fwait
xchg
or
repz
out
mov
movsb
xor
mov
out
cld
fadd
repnz
imul
sbb
sub
jmp
sub
cmp
jbe
arpl
in
shll
and
sbb
ja
insb
cmpb
out
cs
repnz
mov
bound
or
mov
mov
lahf
inc
in
push
popa
jle
ljmp
in
insb
inc
jo
out
insl
inc
xchg
pop
pushf
in
mov
cmpsl
outsb
add
test
dec
mov
fcomi
jge
mov
fistpll
enter
repnz
aam
fisubs
clc
fwait
dec
jp
dec
ja
push
xor
cmpsb
jb
ret
mov
lock
or
jo
and
cmp
mov
mov
push
xchg
jg
push
dec
inc
push
outsl
test
add
std
test
add
divb
aam
pop
mov
icebp
scas
inc
cmp
or
mov
test
push
mov
mov
or
outsb
rorl
int
mov
xor
mov
ja
pop
xchg
call
xor
or
sub
pop
mov
jbe
lcall
cmc
add
or
sub
and
lahf
inc
test
pop
push
xor
mov
mov
adc
idivl
add
js
mov
pusha
jnp
shl
inc
mov
mov
fsubs
leave
xor
popf
pusha
jbe
mov
push
push
pop
mov
popa
push
scas
mov
enter
shrb
pop
mov
dec
jge
push
sub
fs
jo
test
dec
loop,pn
and
cmp
cmp
adc
mov
fldl
imulb
add
push
xor
or
call
out
mov
in
inc
jb
adc
movsb
adcl
cmp
enter
cmpl
cld
xor
xchg
insl
dec
aad
or
jnp
or
scas
sub
adc
repnz
jb
arpl
add
sbb
adc
in
rcrb
shlb
inc
std
arpl
xorb
dec
dec
mov
mov
ror
inc
cmp
xor
sub
xchg
into
in
sub
mov
sahf
loopne
aad
mov
fisubrl
and
pop
add
negl
lds
add
popf
mov
add
test
push
xor
cmp
aad
jl
daa
add
jmp
rclb
cmpsl
lock
mov
mov
lret
test
pop
daa
lods
ret
mov
pop
cwtl
add
in
cmc
mov
jae
mov
call
and
aad
jmp
scas
adc
hlt
roll
sbb
test
sbb
fs
stos
out
sub
adc
xor
jb
aam
pop
mov
leave
xchg
loope
and
dec
fs
stos
add
ja
push
pop
imul
or
push
add
sub
mov
or
out
jmp
incl
dec
pop
or
sub
jg
int
xor
pop
cmp
cmp
xor
sbb
lahf
negb
jb
push
das
ja
fs
test
dec
int
sbb
fdivs
out
and
jae
fs
sbb
and
mov
or
out
int3
lods
mov
push
movsb
int
test
outsb
fxch
adc
mov
mov
repz
cld
mov
xor
inc
push
dec
sbb
cli
mov
fsubrs
mov
rclb
or
test
inc
jne
dec
cltd
sbb
pop
and
sub
stos
cmp
lret
bound
push
mov
add
aam
mov
push
push
mov
mov
mov
push
sub
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
nop
repz
cs
add
shll
cmp
push
mov
push
add
lock
mov
or
add
iret
mov
pop
fcmovbe
mov
fwait
dec
jno
hlt
or
aas
sub
mov
push
stos
xchg
sbb
xchg
or
xchg
add
and
stos
mov
fcompl
mov
or
mov
out
notl
xor
pop
sub
arpl
sarb
pushf
pop
shlb
dec
cld
insl
inc
out
adc
stos
mov
repnz
xchg
sbb
push
xchg
jle
dec
lret
sar
jp
push
sahf
xor
pop
call
shll
repnz
inc
pop
xor
dec
sbb
dec
push
fsts
popa
mov
xchg
jg
mull
inc
push
or
out
mov
out
call
fwait
xchg
stc
scas
ret
leave
iret
xchg
jl
repz
sbb
mov
aam
cmp
stos
cwtl
cmp
ljmp
movsb
imul
adc
insb
push
jbe
mov
jbe
call
cmpsb
jg
pop
pop
lods
xchg
or
ret
mov
pop
adc
daa
int
lods
sahf
cmp
lcall
rcl
fsubp
jno
lock
push
popa
xor
sti
lcall
add
sub
mov
imul
movsb
pop
test
and
or
add
js
xchg
cmp
jg
movups
xchg
pop
rorb
ja
rorl
add
stc
cmp
pop
mov
pop
fmull
mov
pop
pop
xchg
fstpl
fwait
mov
cwtl
xchg
scas
sbbl
push
sub
mov
test
mov
add
cmc
and
arpl
inc
push
divb
pop
ljmp
sub
int3
leave
and
aas
jle
mov
mov
fstps
rcr
out
ret
stc
out
mov
xor
xor
popa
daa
add
dec
mov
pop
test
pop
leave
inc
ret
xchg
sub
adc
das
icebp
mov
insl
xchg
movsb
fidivrl
popf
fisttps
add
dec
pop
frstor
js
cld
cmpsb
gs
insb
inc
test
xchg
fidivrl
sub
ret
push
jns
fwait
xchg
xchg
testb
or
out
adc
test
jae
fwait
or
sbb
lcall
xchg
fs
ja
add
mov
imulb
xorb
call
aaa
lock
jmp
pusha
jge
repnz
loopne
loopne
addl
in
cmpsl
push
sbbl
sub
sub
loope
xor
xchg
sub
or
aam
xor
sub
cmp
iret
ljmp
enter
cmc
cmp
mov
or
lods
push
in
ret
in
add
shlb
jo
insl
xchg
jle
xchg
pop
cwtl
fs
pop
stos
dec
inc
popf
cmp
xchg
sar
test
decb
fnstsw
scas
addr16
and
out
pop
cmp
sub
cmp
xchg
jo
inc
aad
or
rol
inc
push
addr16
loope
outsb
push
sti
mov
mov
and
mov
and
inc
fimull
jmp
cltd
hlt
or
sub
repnz
or
cmp
imul
jecxz
jl
cmp
mov
push
imul
fwait
inc
push
cltd
mov
test
inc
push
mov
mov
inc
pop
mov
ret
ja
jle
sub
xchg
pop
rorl
sbb
ss
mov
xchg
xchg
fwait
mov
pop
outsb
push
movsb
or
in
prefetch
or
mov
pop
add
fbstp
jl
insb
xchg
fcomip
nop
call
push
xchg
flds
cld
sbb
sbb
sbb
xchg
cmp
pop
sub
mov
subl
jecxz
scas
jns
push
inc
pop
push
cltd
mov
out
int3
js
jo
or
push
cltd
cmpl
test
lods
dec
into
mov
out
sbb
push
mov
fistps
push
add
enter
clc
add
fistpll
cmp
jns
jno
jno
shrb
ja
jbe
daa
adc
rolb
adc
sub
cmp
out
sub
mov
loop
xor
aaa
mov
jne
hlt
inc
mov
and
xchg
dec
mov
mov
stc
out
push
sbb
dec
cmp
fistpll
shl
sbb
pop
fildll
sahf
aad
pop
ficoml
lret
pop
pop
cmpsb
clc
test
or
gs
mov
stos
fs
popa
frstor
sub
jg
aad
push
ret
shlb
cs
dec
sbb
dec
xor
insl
pop
jno
sahf
scas
or
push
lret
test
pop
lods
filds
push
dec
cltd
in
cwtl
gs
push
leave
jae
lret
icebp
popf
inc
mov
add
movsb
out
xor
add
lea
movl
add
jo
repnz
fdivrl
test
pop
jle
pushw
addr16
xor
fcom
mov
mov
lock
add
call
mov
mov
xchg
xchg
adc
nop
jecxz
adcl
adc
push
outsl
xchg
or
push
cmp
sub
lret
int3
scas
popl
push
and
push
sub
sbb
pop
mov
nop
xor
xor
bound
push
arpl
hlt
jmp
sub
sub
insl
dec
enter
in
leave
negl
fildll
mov
aad
lods
add
add
xor
xchg
pop
dec
es
hlt
cmc
lahf
ja
and
pop
pop
push
movb
iret
imul
cwtl
mov
dec
test
adc
jmp
pop
movsl
movsl
mov
scas
jp
push
std
ljmp
adc
js
xlat
jmp
and
xchg
fdiv
enter
out
ret
lods
aad
hlt
popf
dec
inc
push
testb
cltd
popf
mov
movsl
adc
jecxz
repz
pop
sbb
divl
insb
addr16
or
cmc
icebp
imul
filds
and
fcomp
clc
push
aad
aam
push
sbb
jbe
imul
inc
inc
or
mov
idivb
fcoml
xchg
xchg
cmp
mov
inc
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
ss
push
in
inc
add
adc
dec
or
pop
and
cmp
xor
insb
mov
popf
mov
jp
add
aas
pushf
pusha
push
ja
imul
pop
out
xchg
loop
xchg
cld
das
in
and
out
dec
stos
xchg
icebp
bound
dec
adc
cmpl
inc
hlt
and
xchg
lods
push
mov
adc
outsl
into
jecxz
insb
lods
mov
inc
cwtl
adc
cmpsl
push
loope
dec
adc
cld
shrb
clc
cli
fsubl
mov
mov
data16
out
enter
mov
outsl
or
jecxz
popa
test
lret
pop
insb
inc
iret
adcl
pop
faddl
xor
enter
mov
ret
xchg
sub
stc
in
push
sbb
cmp
mov
test
stos
lock
aad
fdivrp
jecxz
out
int
fisubl
cmp
or
push
aas
pop
outsl
stc
push
mov
roll
mov
orl
rorl
in
popa
sahf
gs
xor
push
push
mov
inc
xchg
insb
sar
inc
loope
movb
inc
adc
cmpsb
jle
cmpsb
iret
push
sub
testl
xor
jmp
addb
filds
xchg
test
adc
sub
inc
xchg
aaa
jge
bound
jo
test
cs
mov
add
outsb
lea
aam
ja
inc
lds
int3
icebp
ljmp
mov
int3
mov
push
xor
fistps
dec
fcoml
shlb
cmp
and
jg
scas
sbb
dec
lea
fwait
cmpsl
aam
inc
add
lret
lock
jle
push
out
jmp
sti
xor
xchg
cli
mov
xor
or
ret
iret
outsl
mov
out
aam
ret
and
lcall
pop
dec
pop
shlb
sub
ja
jle
aas
jp
push
decb
shlb
les
adc
test
adc
lods
mov
sbb
mov
pop
orb
jnp
ds
inc
fdivr
pop
push
add
mov
cmp
jb
call
repz
push
iret
jbe
in
cmp
sbb
loop
push
inc
lds
jb
mov
out
inc
add
sub
xchg
outsl
aam
adc
popa
ss
push
sub
popl
adc
lods
adc
mov
mov
lds
outsb
outsl
mov
shlb
in
pop
call
adc
mov
leave
les
xchg
imul
xor
shlb
dec
movsb
cmp
and
xchg
sbb
divl
rcll
push
rol
jle
cmp
pop
repnz
mov
fnstenv
xchg
push
adc
mov
and
movsb
add
bound
xchg
mov
fstpt
bound
mov
cwtl
xor
push
sub
pop
mov
clc
push
push
pop
fistpll
push
rol
imul
loop
mov
inc
adc
or
pusha
scas
ret
mov
in
jne
sub
lret
shrl
test
mov
mov
pusha
jecxz
pop
add
sbb
data16
stos
or
jae
sub
mov
push
sarb
clc
lret
xchg
xchg
pusha
xchg
mov
mov
icebp
push
push
xor
call
mov
cmp
jns
jo
fsubp
push
lock
or
out
cwtl
aas
fnstsw
in
dec
and
push
add
test
push
faddl
popa
pop
sbb
xchg
mov
xchg
push
leave
sub
and
fistpl
sti
fcoms
adc
cmpl
xor
mov
xchg
push
inc
pop
imul
mov
shlb
inc
outsl
shlb
test
xor
or
lcall
mov
popa
push
leave
pop
mov
out
mov
jb
rorb
or
add
jmp
jg
dec
pop
sub
imull
arpl
ds
loope
or
mov
ljmp
sub
pop
cli
pop
mov
outsl
rclb
out
aaa
xor
cltd
out
and
shrl
out
mov
call
jmp
std
imul
xchg
pop
es
fsubrl
and
subb
enter
mov
pop
jnp
pop
push
mov
push
ljmp
lcall
adc
das
jp
sub
hlt
adc
ud0
xor
and
test
lock
out
in
xor
divb
add
pop
test
xor
sub
cli
jno
icebp
repz
cmpsb
cmc
lods
pop
jb
xor
movsl
sub
mov
push
test
lock
fcomi
mov
fs
daa
gs
pop
icebp
mov
dec
outsl
dec
out
dec
cmpsl
or
inc
int
ja
js
and
sbb
loopne
mov
sarb
mov
cwtl
push
pusha
divb
es
push
mov
insb
pop
add
iret
es
add
jns
shrb
ja
negl
pop
and
sub
pushf
ljmp
test
lock
jnp
rclb
inc
mov
sbb
cmc
sarl
jnp
xchg
or
adc
cmp
mov
cmp
sbb
or
dec
jecxz
aad
or
icebp
add
cmp
shrl
movsl
shrl
test
jno
mov
sbb
push
aad
push
fmull
popa
cmp
nop
add
mov
jecxz
jmp
dec
sbb
and
insl
push
jecxz
movsb
repnz
inc
add
pop
cmp
jle
jo
jmp
and
jl
in
sti
push
loopne
cmovne
lods
push
lock
scas
jge
pop
outsl
adc
adc
dec
mov
mov
mov
pop
jecxz
push
notb
pop
ljmp
add
mov
out
cmpsb
sbbb
xchg
dec
cmp
mov
inc
mov
les
out
hlt
mov
je
loope
mov
push
pop
sbb
rcll
mov
cmp
mov
cmp
js
adc
mov
sub
xchg
leave
mov
lret
repz
lods
imul
cmp
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
movsl
push
rclb
mov
mov
lret
cltd
push
and
sub
jbe
cs
jb
ss
cld
popa
sti
jl
jo
or
and
out
jl
lahf
ds
mov
clc
aaa
mov
mov
scas
jnp
push
push
mov
test
xor
xor
jg
jg
test
dec
jns
inc
adc
in
xchg
add
or
or
imul
push
or
add
adc
mov
mov
push
adc
and
pop
pop
cmp
add
movsl
xchg
sub
dec
mov
push
test
test
cmp
pop
xor
sub
mov
cmpl
push
insl
inc
jo
push
sub
push
or
inc
or
mov
scas
jb
addb
jno
repz
push
pop
mov
cmpsb
inc
clc
sub
push
cmpsb
sub
or
mov
sahf
test
and
adc
sub
lahf
fists
and
add
and
insl
movsb
sub
inc
sbb
shll
or
rolb
cwtl
sub
test
pop
shr
stc
dec
je
fadds
mov
mov
pop
out
mov
lock
push
or
lds
inc
and
xor
or
cmc
cli
mov
adcl
sub
call
adc
add
adc
mov
xor
mov
stos
dec
js
xor
lret
in
dec
jo
out
pop
je
fisubl
rcll
mov
jp
push
jecxz
xor
cmpsl
mov
dec
jno
mov
pop
pop
mov
rorl
dec
addr16
mov
lds
push
jmp
mov
mov
jecxz
sub
aas
push
or
push
dec
add
xorl
nop
decb
mov
daa
xor
dec
jbe
pop
sub
cmpsb
add
dec
add
in
xchg
in
mov
clc
pop
fsubs
lcall
dec
cmp
mov
int
sub
push
pop
cmp
mov
fldl
in
lds
cmpsb
ljmp
jo
popa
sbb
cmp
dec
movsl
movsb
mov
pop
or
std
add
sub
hlt
fildll
data16
pop
out
nop
mov
push
push
pop
fidivs
mov
movsl
mov
dec
std
push
lcall
lahf
es
aam
incl
xor
and
mov
leave
fcmovb
sub
dec
lods
xor
inc
xchg
mov
leave
into
aad
mov
cmp
pop
push
scas
dec
cmpsl
add
shr
xor
clc
shlb
in
clc
mov
sub
std
das
arpl
lds
rcl
shld
stos
nop
adc
js
insl
lea
and
xor
xchg
cwtl
or
xchg
adc
cmp
inc
jg
mov
movsl
jns
fiadds
sbb
cmp
shll
adc
lcall
pop
loope
imul
not
cmp
fldl
push
outsl
es
cmp
cmp
pop
mov
cmp
je
mov
in
xor
sbb
xor
pop
mov
mov
and
addr16
xchg
inc
sub
fsubrp
jl
divl
push
inc
ret
movb
fcompl
adc
loopne
lahf
sahf
jle
push
aad
ljmp
mov
cltd
repnz
inc
push
movsl
jo
mov
andl
sub
pop
or
cltd
add
jno
test
add
xchg
cmp
inc
adc
ret
xchg
push
out
test
in
push
mov
jp
push
push
adc
push
cmp
dec
jecxz
cs
gs
lret
jnp
daa
push
mov
pop
gs
push
adc
mov
out
push
mov
rcl
loope
add
or
dec
lds
cwtl
push
ret
mov
xor
sub
cs
adc
dec
pusha
xor
jl
ret
push
push
mov
out
and
pop
js
dec
mov
out
cmp
mov
lcall
popa
or
scas
jae
jae
mov
dec
mov
add
jnp
lods
out
test
sub
and
ljmp
push
nop
imul
push
sub
push
sbb
jne
imul
jecxz
test
stos
inc
cmpsb
and
lret
mov
sub
inc
and
out
xor
in
or
pop
bound
je
adc
fidivl
bound
inc
imul
fs
mov
stos
lahf
push
add
popf
xchg
lret
clc
in
sbb
repz
into
cmp
xor
mov
xor
jne
bswap
aas
adc
aad
fwait
push
movups
sbb
and
sub
pop
lahf
jle
mov
adc
and
and
or
inc
cmc
jo
xor
sbb
inc
fs
sub
cmpl
xchg
ss
adc
xchg
sub
enter
fcom
sub
addl
sbb
mov
or
add
out
pop
movsb
and
adc
inc
cmp
imul
sbb
or
std
or
pop
sbb
cmp
nop
out
push
sbb
in
cli
call
in
sbb
aam
orb
xchg
add
and
mov
addl
imul
mov
int3
inc
push
xor
icebp
inc
mov
ja
dec
adc
dec
jae
out
pop
and
fs
jb
mov
mov
into
repnz
lods
cmp
sub
inc
xadd
jo
add
ret
adc
add
loopne
mov
insl
push
test
shr
push
cltd
sbbb
into
ss
mov
nop
xor
push
shrb
xor
loop
mov
mov
and
in
sbb
fsubrl
pop
xchg
dec
enter
mov
xlat
outsb
cmp
mov
data16
sbb
stos
fisubrs
andl
imul
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
and
add
jae
and
mov
mov
sarb
mov
push
daa
test
cmp
mov
stos
popf
fwait
loopne
mov
imul
fsubrp
rolb
pop
enter
insb
scas
fstpl
adc
jp
adc
or
inc
add
or
imul
jmp
sub
cltd
movsl
xor
dec
insl
mov
dec
jbe
or
repnz
sub
popf
mov
nop
enter
xchg
pop
mov
stos
inc
gs
ret
xchg
cmp
sub
and
daa
mov
dec
lret
inc
js
cli
inc
xchg
ficompl
mov
cs
int
in
jl
cmc
mov
xchg
lret
jmp
sub
les
mov
test
cmp
jns
addr16
push
testb
call
xchg
xor
mov
sbb
leave
dec
leave
popa
rcrl
ret
lods
ret
dec
cltd
lea
cmpsb
dec
pusha
adc
inc
and
imul
sub
mov
and
push
gs
cmp
testb
push
mov
or
pop
imul
jecxz
fwait
inc
fsubl
xor
dec
loopne
adc
ljmp
int
inc
mov
rclb
int3
add
dec
stc
xchg
jle
push
sub
push
cmp
pushf
dec
mov
roll
incl
mov
inc
movsb
sub
gs
dec
and
jl
mov
pop
test
xor
push
xchg
pop
mov
das
adc
add
and
adc
jmp
stos
inc
inc
enter
add
dec
or
int
mov
push
adc
cli
cli
repnz
push
push
mov
or
or
xlat
xlat
mov
outsb
pop
imul
int
loopne
std
dec
sar
cmp
push
aam
std
ret
or
cmp
mov
mov
pop
notl
ds
jnp
shlb
ja
fsubrl
daa
adc
adc
pop
mov
mov
xor
lahf
xor
jno
inc
sarl
clc
dec
mov
push
insb
test
enter
xchg
aas
jecxz
arpl
repz
mov
inc
pop
loopne
cmp
pop
imul
mov
loopne
push
add
cmc
dec
jp
xor
insb
pop
push
push
or
cltd
mov
pop
mov
fidivrl
mov
mov
insl
pop
cs
ret
es
push
mov
add
mov
pop
stos
mov
out
fdivr
jo
cmpsb
lahf
gs
stc
xor
insb
hlt
sbb
jg
mov
xchg
cwtl
or
stc
or
fstps
popa
rcrl
mov
fstpl
leave
adc
cltd
addl
das
xor
pop
jl
push
sbbl
sarb
test
mov
xchg
jge
sti
lea
ljmp
into
repnz
es
into
ret
pushf
mov
jg
pop
mov
imul
dec
lret
cmpl
mov
and
mov
and
fcomi
cmp
xchg
sbb
inc
add
sub
and
add
cmpsb
sbb
popa
push
or
aas
sbb
jno
pop
add
and
daa
push
jbe
mov
push
ret
mov
pop
jbe
mov
sahf
test
lds
lret
fwait
or
lock
push
ss
popf
adc
push
xchg
mov
dec
mov
dec
test
bound
decl
rclb
movb
popf
sbb
xchg
or
sahf
orl
adc
xorl
dec
mov
xchg
dec
scas
lcall
fisttpll
aam
adc
xchg
xchg
orl
mov
arpl
sbbb
jnp
add
js
shll
pop
dec
mov
loopne
sbb
jge
inc
les
into
arpl
mov
sarb
push
shll
test
add
int
mov
inc
cmp
stc
push
pop
je
jo
jae
push
sti
sub
js
lods
js
sti
pop
imul
jae
pusha
popa
fcoml
nop
sahf
inc
sub
jb
xor
adc
sbb
faddl
sub
in
sahf
pop
sbb
xor
enter
pop
arpl
loop
movb
xchg
push
mov
std
cmp
cmp
xor
inc
sbb
fdivl
dec
mov
rcrl
loop
je
pop
mov
push
push
jmp
or
and
jb
fstl
andl
sti
adc
push
ret
mov
mov
movsl
jmp
pop
lret
sahf
inc
sti
movsl
cmpsl
lret
dec
or
into
xor
xchg
xor
sub
cmp
cwtl
das
sbb
imul
jno
cmp
xor
ljmp
dec
cmp
mov
jnp
dec
das
xchg
inc
gs
xchg
cmp
dec
push
add
or
push
mov
test
sub
mov
jp
xlat
or
aaa
push
sbb
insb
sub
call
mov
cmp
lock
stos
jp
test
pop
imul
repz
outsb
mov
mov
xor
push
andl
aaa
inc
icebp
ficoml
ret
sub
xor
cs
mov
jno
adc
ret
adc
addr16
inc
sub
pop
pusha
insl
cs
hlt
roll
sbb
popf
test
mov
or
push
dec
jnp
jb
loope
xchg
mov
mov
cmc
mov
cld
insb
cwtl
testl
idivl
inc
ljmp
and
add
sbb
hlt
pop
inc
jbe
mov
jp
lret
mov
add
push
push
clc
shlb
imul
es
pop
jo
or
je
loop
lcall
cmp
inc
dec
dec
mov
sahf
fwait
add
icebp
inc
mov
dec
mov
mov
inc
dec
repnz
sub
or
jle
mov
and
lret
fists
xor
jp
in
inc
out
add
cmpsl
dec
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
mov
add
adc
sarb
pusha
and
cs
xchg
xlat
mov
lret
adc
pop
pop
sub
aas
les
rcrb
jge
enter
sub
inc
mov
jl
cmp
out
sub
in
leave
pop
pop
stos
xor
mov
and
int
ret
mov
cmp
mov
fidivl
xchg
lods
push
xchg
push
inc
fmul
mov
bound
and
out
inc
imul
push
dec
icebp
push
stc
fisttpll
cltd
aam
mov
inc
lea
adc
arpl
and
add
push
xor
xchg
data16
addb
insb
aaa
jg
mov
pushf
mov
jo
xchg
or
cmpsb
xchg
push
xchg
mov
dec
mov
jge
test
idivb
popf
pop
fmulp
push
fidivl
mov
push
mov
xor
pop
cld
and
xchg
add
add
rclb
adcl
pop
jl
jmp
xor
dec
sub
jb
dec
xchg
test
flds
dec
outsl
cli
add
push
and
xchg
dec
inc
mov
mov
notl
movsb
mov
cld
stc
inc
dec
adc
adc
push
pop
pusha
push
cmp
mov
xor
lret
js
sub
push
dec
sub
sbb
jae
pop
add
sbb
fistpll
sbb
je
xchg
jmp
arpl
and
and
in
imul
ret
fimull
mov
lods
push
testb
aas
movsl
ret
test
icebp
jnp
iretw
fsub
in
and
pop
and
adc
cmpsb
lods
dec
stos
cmpsb
cmp
dec
bound
inc
mov
jecxz
mov
xor
mov
adc
mov
mov
sbb
clc
dec
and
adc
int
xchg
xor
addr16
push
decb
pushf
add
sub
jg
lods
push
dec
outsl
ja
xlat
mov
cmpsb
scas
cmp
scas
xor
dec
pop
and
sbb
lcall
rorl
scas
cmp
push
mov
pop
outsl
xchg
subl
jge
jp
lock
std
imul
add
inc
int3
xor
and
pop
jg
or
jmp
ljmp
test
pop
lahf
mov
shlb
jmp
nop
movsl
adc
sbb
cltd
in
sub
add
or
adc
les
sahf
icebp
shl
popf
rorl
xlat
or
push
pop
into
sahf
imulb
lcall
iret
aad
push
loope
ljmp
jnp
mulb
iret
imul
mov
mov
cmp
sbb
jb
cltd
cmpsb
jno
sbb
stos
cmp
lods
outsl
jo
fcmovnbe
mov
out
pop
js
subb
mov
jae
pop
fs
cs
lcall
inc
icebp
or
test
mov
rolb
loopne
stos
cmc
adc
scas
jg
push
fwait
adc
es
xchg
cmpsl
popf
pop
iret
fs
sub
and
cmp
into
loop
mov
adc
inc
push
loop,pn
cld
ficoml
dec
dec
lahf
aas
ja
out
enter
pop
dec
inc
pop
mov
aaa
sbb
push
push
cmp
push
bound
movaps
xor
pop
cmc
mov
cmp
add
jmp
ret
and
mov
sbb
or
dec
aam
inc
les
ret
inc
idivl
les
jnp
daa
aad
push
data16
adc
push
cmp
subl
pop
xor
pop
dec
scas
dec
pop
inc
addb
scas
xchg
into
mov
popf
mov
cmp
mov
call
repnz
insl
lret
in
fbstp
xlat
xor
xor
pushf
sbb
adc
cmpsl
lods
push
insb
mov
mov
fxch
stc
xor
clc
idivl
push
aaa
cmpsl
xor
cld
push
xchg
cs
sbb
inc
pop
movsb
ret
rol
mov
lret
mov
pop
sub
or
daa
fdivrl
fbld
add
sbb
dec
xchg
push
lcall
fsubrs
dec
popf
push
inc
inc
pushf
lock
jle
in
cli
jae
aad
js
flds
mov
out
jge
lea
dec
arpl
lret
jle
mov
and
pop
sti
lods
xchg
pop
test
fldt
cmpsl
leave
in
fidivs
loop
jle
in
xchg
jmp
cmpsl
mov
cmp
adc
dec
adcl
cli
mov
in
xchg
cmpsb
pop
repnz
cmp
and
jno
out
fcomps
test
cmp
and
pop
inc
icebp
imul
test
push
xchg
dec
jl
je
cmpsb
rcl
test
jnp
mov
movsb
imul
push
xor
pop
icebp
lret
add
or
xchg
xor
push
push
add
xchg
push
push
sub
enter
stos
push
lcall
ljmp
rolb
test
jnp
sbb
push
push
add
lods
pop
rorb
addr16
push
outsb
lods
inc
xchg
lret
jle
movsl
sbb
aad
mov
xchg
cmc
repnz
mov
adc
or
frstor
mov
push
dec
gs
push
dec
dec
not
daa
cmp
add
jno
push
popa
mov
push
add
or
rolb
stos
call
hlt
enter
inc
shll
cld
pusha
inc
call
sub
hlt
mov
rorl
or
jp
pop
xor
sbb
test
cmp
jne
das
movsb
xchg
psrad
jne
mov
mov
mov
push
jo
fwait
cwtl
sbb
and
mov
in
sub
dec
in
popa
in
loop
and
push
mov
ja
mov
mov
test
ret
int3
cmpl
mov
ret
and
cmp
pusha
popf
outsl
mov
mov
sbb
gs
mov
fbld
cmp
sar
and
or
cmp
jg
mov
ror
lods
inc
xor
jl
xchg
or
sub
cmp
lret
or
in
pop
subb
loope
pop
push
mov
stos
nop
in
jno
jne
push
stos
dec
push
pop
test
pop
sub
rorl
adc
and
add
xchg
pop
pop
push
test
test
push
loop
and
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
sarl
add
decb
adc
mov
adc
xchg
int
cld
xchg
testb
pop
inc
jecxz
cmp
scas
mov
je
sub
call
in
or
inc
std
arpl
iret
sub
ficoml
cwtl
test
js
lock
stos
int3
xchg
and
jbe
out
outsb
xor
in
lahf
int3
mov
dec
int3
sbb
repnz
rclb
push
mov
leave
cwtl
dec
and
xchg
aad
mov
xchg
movsb
sbb
jmp
cmpsb
inc
cmp
out
mov
cwtl
jbe
xchg
lahf
push
lcall
push
cmpsb
stos
jbe
int
addr16
mulb
movsb
xor
iret
mov
ret
dec
shrb
or
sbb
inc
sub
cmc
xchg
mov
shrl
loop
pop
outsl
cmc
and
pop
mov
sahf
mov
out
add
movsb
or
mov
sub
xchg
jecxz
mov
pop
xor
adc
stc
addb
dec
adc
icebp
xchg
rolb
imul
test
sarb
scas
icebp
bound
lods
mov
or
mov
dec
mov
sbb
lahf
pushf
in
insl
and
insl
sbb
daa
jae
in
movsl
xchg
sbb
shl
pop
shrb
hlt
icebp
negl
icebp
pop
inc
push
jnp
jecxz
pusha
pop
in
fsub
movsb
adc
mov
cltd
lret
jg
xor
fildll
jl
xchg
cwtl
xchg
es
cmpsb
movsl
xchg
cld
mov
cltd
insb
and
pop
jns
jbe
mov
test
pop
push
pop
jg
add
and
incl
outsl
repz
stos
sbb
sbb
fsub
cmp
dec
ror
push
or
mov
push
push
push
test
ja
push
or
sbb
push
xor
xchg
inc
or
out
imul
clc
out
inc
push
jo
inc
adc
mov
sbbb
push
sti
add
inc
dec
loopne
dec
ljmp
mov
aas
fwait
ja
mov
dec
add
cltd
xchg
or
popa
xchg
fmull
push
mov
mov
mov
push
and
or
lds
push
sbbl
outsl
jp
aas
and
inc
cli
jl
rcll
icebp
mov
cmp
mov
and
jmp
and
push
je
iret
jne
jo
repz
adc
ret
setns
sub
imul
or
imul
mov
inc
inc
adc
popf
lods
inc
xchg
jnp
xchg
sub
or
xor
incl
imul
xchg
mov
add
shll
ds
test
xchg
mov
pop
cmpsb
adc
sub
dec
into
pop
sarl
dec
push
pop
cmc
lods
test
outsl
push
cmc
jge
jge
push
fdivrs
gs
aas
mov
add
mov
inc
stos
cli
fdivrl
out
jo
es
xchg
repz
dec
ret
test
and
hlt
or
popa
or
push
xchg
ljmp
dec
mov
fmul
push
pop
repnz
cs
lcall
push
pop
push
js
jo
test
enter
int3
jns
lret
push
mov
cmp
cmp
inc
sub
dec
dec
mov
jbe
fsubr
insb
shlb
and
or
sbb
mov
push
mov
int
out
cmp
xchg
inc
mov
jnp
pop
push
in
or
pop
push
dec
xlat
push
in
out
and
cmpsb
adc
fidivrs
push
fistl
sarl
sbb
jae
mov
testl
fucomip
add
sub
scas
shl
mov
sbb
in
lretw
mov
pop
dec
orl
push
jle
ljmp
xor
xor
inc
push
das
nop
fs
or
add
xchg
pop
mov
les
gs
shll
dec
loope
cmp
stos
fwait
insl
je
cmc
mov
add
mov
lods
test
jg
loopne
mov
fadds
lods
cmpsb
imul
cwtl
pop
sbb
in
cmpsb
repnz
ror
and
inc
sahf
nop
in
jmp
lret
pop
repz
fbstp
int
clc
rcl
ss
mov
rol
pop
sbb
dec
xlat
in
iret
lea
icebp
add
je
push
hlt
xlat
push
repnz
sbb
dec
bound
stos
dec
mov
and
mov
add
negl
ds
ja
sub
xchg
jmp
jge
jle
xlat
mov
jo
jo
jmp
jae
pusha
stos
std
add
xor
mov
cmp
sub
mov
insl
adc
add
es
lahf
add
daa
clc
test
fdiv
js
stc
popf
out
outsb
bound
or
cld
mov
mov
push
push
adc
sub
xchg
sub
xor
fnstsw
sbb
rep
roll
push
int
clc
and
jecxz
lds
iret
insl
mov
jbe
inc
xchg
mov
jmp
jg
orb
dec
ljmp
lcall
push
pop
mov
inc
aas
mov
in
mov
pop
xchg
test
adc
sub
dec
addr16
jmp
lcall
sub
insl
jl
mov
inc
mov
push
cmp
mov
ret
in
enter
push
and
loop
cld
inc
inc
nop
inc
cmp
mov
outsl
push
ret
cld
sub
fptan
fisubrs
pop
scas
and
shl
push
push
movsl
jns
jecxz
cmp
cmp
das
mov
std
popf
pop
int
cld
sti
in
mov
cmpb
adc
dec
aam
js
and
loopne
push
and
icebp
in
adc
xor
xor
daa
pop
cmp
sub
mov
aaa
out
mov
cltd
int3
jo
inc
and
sbb
lcall
mov
mov
cmp
jb
mov
and
insb
shlb
push
jge
jl
cld
mov
or
divb
inc
sbb
adc
js
sbb
mov
adc
filds
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
or
icebp
mov
add
xchg
cld
or
fnstsw
leave
inc
fscale
sbb
add
or
int3
nop
jge
ljmp
mov
cmp
pop
mov
inc
sbb
inc
mov
mov
mov
inc
inc
mov
lret
add
sbb
repnz
push
mov
or
adc
fwait
cmp
xor
fstpt
fwait
add
test
xchg
stc
nop
pop
pusha
adc
push
sbb
and
pop
mov
mov
jg
xchg
or
add
add
add
xchg
or
push
jecxz
mov
xchg
iret
cli
fwait
and
mov
jo
in
or
ljmp
mov
addb
push
shrb
daa
or
lahf
fisubl
jbe
cmp
cli
loopne
aas
imul
aas
daa
stc
add
stos
sahf
lcall
rclb
fisttpl
insl
daa
mov
repz
sbb
and
or
jae
push
xlat
aad
jbe,pt
cld
mov
ret
mov
test
push
aaa
cmpsb
jno
mov
pop
rcll
bound
or
pop
sub
in
mov
pop
add
nop
loop
iret
xchg
in
mov
jae
add
dec
fnstenv
cwtl
sti
lahf
cwtl
fldl
stc
repz
mov
xchg
jnp
ret
movsb
or
aaa
imul
lret
out
adc
lret
jae
out
negl
push
stos
pop
inc
xchg
cmp
or
sbb
xor
enter
sub
cmpsb
jl
test
inc
les
inc
roll
xchg
add
int3
dec
jo
scas
and
movl
xchg
adc
test
xor
jo
sub
push
hlt
mov
xor
out
jmp
pop
into
ljmp
test
inc
cmpsb
fs
sbb
cld
ds
sub
inc
xlat
test
in
and
push
add
adc
pushf
es
jl
cmpsl
add
inc
mov
dec
dec
mov
filds
or
push
sti
orl
dec
pop
xchg
inc
sbb
call
pop
dec
mov
xchg
pop
push
xchg
pop
cltd
addr16
leave
add
push
sub
hlt
stos
pushf
cs
jnp
add
pop
in
cli
cli
outsl
aad
jo
cmp
xchg
in
or
fidivrs
pop
insl
icebp
sbbb
out
insl
cli
stos
cmpsl
mov
jb
mov
nop
in
loop
sub
jmp
jge
loop
fcmovu
inc
adc
lahf
sti
xor
mov
xlat
cmpsl
aaa
lods
xor
mov
imul
adc
sub
popa
je
and
out
jmp
out
std
ss
and
or
xchg
pop
push
cmpsl
loope
ljmp
mov
mov
push
in
xchg
inc
lods
out
push
mov
ficomps
add
cmpsl
les
cmp
jle
and
push
mov
xchg
inc
mov
pusha
jbe
fwait
dec
sbb
cwtl
jp
push
lret
lret
lret
aaa
lods
xlat
jns
js
and
sarb
or
and
sbbl
in
jmp
mov
mov
push
test
pop
cmp
mov
pop
into
xchg
jae
sbb
push
cmpl
mov
dec
mov
insl
ja
mov
loopne
lret
sub
push
arpl
jns
jge
lea
xor
jecxz
cmp
mov
fcoms
xlat
sub
mov
mov
ja
movsl
outsl
or
jns
das
sahf
dec
rcl
mov
jo
dec
mov
mull
shll
int3
repz
inc
andl
sahf
cmp
rclb
pop
adc
out
push
data16
mov
movsb
push
enter
aaa
into
xchg
mov
push
cmpsb
jp
xlat
sbb
leave
mov
pop
dec
or
cmpsl
mov
dec
mov
scas
sub
mov
lahf
push
xchg
out
xor
pop
pop
cmpsl
stos
fcoms
lock
in
sbb
scas
add
inc
shll
outsb
lds
roll
popf
out
mov
sub
mov
jmp
jmp
push
cmp
sbb
jmp
xor
sub
xchg
jmp
jbe
lock
mov
repz
stc
mov
jecxz
push
fimuls
dec
bound
outsb
mov
fstpt
ret
mov
insb
cmp
add
addr16
hlt
pop
addr16
inc
sub
cwtl
scas
ret
mov
out
inc
loop
or
int3
fists
sbb
mov
divb
into
push
mov
mov
frstor
inc
cltd
loope
ret
mov
inc
stc
lret
je
addb
cmp
pop
fsin
add
shll
mov
cs
pop
adc
or
jge
push
sbb
mov
xchg
xor
sub
push
jmp
jl
pop
je
cmpsb
xchg
xchg
inc
xchg
dec
out
shr
pop
test
cmpsb
xchg
dec
mov
cmp
sbb
cltd
jecxz
cmp
jno
inc
lret
pop
pop
mov
clc
cmpl
mov
lods
aad
dec
adc
jbe
push
jnp
sbbb
mov
fs
stos
add
dec
inc
inc
xor
xor
mov
pop
jmp
ret
imul
stos
pop
data16
sbb
pop
cld
sbb
loop
mov
or
loopne
out
xchg
jmp
xchg
dec
push
xchg
or
scas
xor
add
adc
dec
nop
jne
pop
ror
adc
sahf
adcb
inc
pop
jae
call
xchg
push
pop
pop
adc
clc
mov
inc
pop
lahf
push
adc
adc
sbb
xor
aas
fstps
out
lret
icebp
call
les
pop
push
adc
roll
addr16
testl
xor
and
mov
iret
cwtl
gs
mov
xor
pop
mov
mov
int
nop
or
and
sub
xor
cmpsl
jl
outsb
mov
daa
nop
push
movl
bound
dec
lret
popl
push
mov
les
addr16
testl
pop
mov
mov
push
and
xor
jnp
pop
jmp
iret
sbb
adc
imul
lods
sub
lods
dec
sbb
inc
pushf
lds
in
jp
rolb
jbe
xchg
hlt
add
ja
subb
test
lock
add
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
movsbl
and
aaa
pop
and
add
sub
stos
xor
repz
inc
aaa
jge
popa
xor
aas
pop
stos
sbb
int3
cmp
mov
push
pop
aaa
jae
push
mov
cli
imul
fldcw
xchg
jbe
mov
jle
mov
xchg
decb
mov
jl
fwait
out
dec
dec
adc
add
sbb
stc
lock
sahf
ss
add
popf
xor
mov
ljmp
outsb
pushf
jb
arpl
in
es
mov
xchg
adc
sbb
mov
rcl
cmp
or
lods
pop
fs
lods
sub
xchg
addr16
outsl
and
push
mov
rcrl
fst
iret
idivb
xchg
lahf
inc
and
sbbl
imul
push
pop
or
push
inc
xor
inc
or
xchg
scas
in
cmp
popf
ss
xchg
iret
aas
call
call
jmp
xchg
in
push
push
loop
aad
push
push
cli
rol
dec
cmp
lret
push
cmpsb
ljmp
movsb
loop
mov
arpl
sbb
out
cld
pop
xchg
cs
and
jb
xchg
sub
inc
jmp
or
jnp
sub
sbb
push
jae
rcrb
test
insb
jno
leave
or
out
in
and
jg
sub
adcl
fsubs
rcrb
mov
pop
das
imul
add
iret
mov
sbb
mov
frndint
mov
cmp
out
mov
rcr
dec
mov
mov
rolb
xchg
outsl
ds
adc
xchg
imul
xchg
cmp
xor
jns
cld
lods
fbld
mov
divb
loop
push
and
sbb
cmpsl
xor
jo
lods
scas
scas
add
adc
repz
sbb
subb
addr16
mov
pushw
adc
xchg
out
loop
xchg
and
fcoml
test
or
xlat
ljmp
mov
cmpsb
lcall
and
push
dec
subl
fmull
dec
sbbl
mov
test
fwait
add
jp
pop
movw
leave
pop
or
pop
imul
imul
adc
fcomps
jl
pop
into
sub
pop
cli
sbb
cltd
lea
scas
pop
pop
int3
faddp
or
inc
adc
int
jb
jns
adc
pop
outsl
mov
push
jo
mov
push
push
lds
loope
jmp
jge
test
test
int
nop
lahf
je
loopne
jnp
lahf
jbe
fsubrp
jge
sub
ljmp
jmp
xchg
std
pop
pushf
push
out
mov
cmp
jp
add
cmp
add
push
cmp
imul
iret
outsl
push
iret
pushf
jo
sbb
dec
scas
ja
int
and
sahf
pop
sarb
test
jae
add
test
pop
sbb
jle
std
and
dec
je
fisubrs
test
mov
orl
and
cli
stc
xor
cwtl
iret
jbe
icebp
in
jnp
int3
cmpsb
les
lcall
bswap
jo
lock
jmp
mov
push
jmp
jbe
lds
inc
xchg
xchg
push
mov
popf
xor
dec
add
jecxz
insb
xor
inc
aaa
cwtl
push
pop
mov
sbb
inc
push
shrl
sbb
mov
mov
add
xlat
pop
mov
mov
jge
cmpsl
mov
dec
sarb
testb
add
in
jno
push
and
cmpsb
js
adc
pop
inc
scas
push
mov
sub
mov
cltd
sbb
xchg
pusha
push
adc
sub
mov
in
push
sub
push
xchg
int
andl
test
pop
pop
sbb
popa
push
dec
add
addr16
ret
or
nop
insl
lods
pop
xchg
stc
dec
in
data16
mov
xor
test
int3
mov
fdivs
les
dec
dec
js
popl
test
mov
dec
push
push
xchg
test
mov
cli
jmp
inc
jnp
data16
mov
imul
popa
sub
inc
mov
dec
dec
adc
pop
cmp
fcmovnbe
mov
jecxz
std
mov
repz
mov
dec
jecxz
mov
aas
adc
leave
jle
mov
cwtl
cli
ss
scas
mov
lcall
cmpsb
xchg
xchg
leave
fisubs
push
lea
push
and
mov
into
dec
out
addl
ds
icebp
in
frstor
ret
sub
call
test
inc
inc
loopne
cmc
push
push
nop
enter
stc
adc
test
push
cmp
xor
not
lods
daa
sbb
inc
into
add
jo
xor
or
jo
ret
and
rcll
xor
xlat
lahf
in
pop
mov
inc
pop
sbb
and
mov
mov
negb
jmp
xchg
shlb
or
and
pop
jg
cmpsl
pop
stos
mov
push
jg
mov
and
mov
and
sub
jne
mov
add
pop
push
rorl
fs
sub
repz
cwtl
ss
xor
push
stos
xchg
or
shl
xchg
icebp
jmp
add
imul
clc
sbb
jle
adc
sbb
loope
sbb
ficoms
out
lret
pop
dec
push
stc
dec
mov
loopne
push
push
sbb
sbb
cld
rclb
jae
cmp
mov
sbb
or
mov
scas
xor
bound
cmp
adcb
adc
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
mov
loope
invd
add
pminsw
fildll
xchg
adc
mov
mov
mov
and
adc
xor
mov
xlat
sbb
mov
mov
fwait
adc
mov
clc
and
jle
and
sub
jp
out
cmp
push
mov
arpl
xor
into
mov
mov
decb
sbb
mov
add
xchg
mov
aam
aam
fucomp
push
sbb
lea
lcall
fnstsw
jnp
mov
test
or
popa
push
and
cld
cmp
in
or
mov
jbe
sub
testb
lea
mov
lock
addl
or
sbb
out
out
mov
xor
dec
pop
repz
push
sub
jge
and
cmc
adc
test
xlat
mov
cli
xor
dec
cs
sub
ljmp
xchg
mov
mov
inc
cmp
loopne
xchg
lds
push
xor
ja
xchg
mov
in
adc
sarb
lods
push
paddsb
lock
imul
or
ffreep
or
in
pop
addl
mov
pop
popf
push
and
out
dec
mov
mov
push
inc
push
add
push
sar
idivb
sbb
mov
or
loopne
inc
lds
mov
scas
dec
loopne
xor
in
jns
fwait
daa
dec
pop
repnz
xor
iret
roll
mov
push
inc
ljmp
pop
xchg
mov
addr16
push
lahf
or
jg
loop
enter
cld
in
je
dec
mov
mov
std
mov
fs
fstpt
lds
fwait
fistpll
dec
jge
sub
sub
dec
mov
mov
scas
ljmp
or
add
mov
xor
push
daa
loop
jno
adc
xor
xchg
stos
mov
hlt
mov
lret
data16
pop
cmp
pop
pusha
push
pop
inc
pop
mov
shlb
push
dec
in
movsl
ja
cltd
loop
and
adc
xor
mov
cmpsb
out
shll
mov
inc
add
shlb
sahf
pop
cld
adc
out
push
or
inc
adc
cmc
fstps
mov
dec
sub
aaa
mov
inc
inc
lret
and
dec
adc
lret
lret
pop
sub
cs
rcrl
push
jg
jo
mov
add
mov
xchg
outsb
push
jb
inc
xchg
pop
push
dec
imul
in
sarl
pop
lods
pop
repz
out
pushf
mov
jb
shl
sub
test
adc
mov
addr16
mov
xor
dec
sbb
pop
movsl
andb
add
rclb
pushf
inc
cmc
and
mov
and
inc
push
into
gs
push
sti
mov
jmp
sahf
test
std
inc
cmp
cmp
fisttps
ljmp
repz
les
mov
repz
add
sub
repz
ror
inc
out
bswap
xor
push
cmpxchg
cmp
cli
adc
add
xchg
mov
imul
pop
mov
jbe
add
xchg
clc
push
mov
enter
incb
sub
pop
or
push
lods
lods
xchg
xchg
int
inc
jecxz
push
push
pop
inc
xchg
stos
dec
scas
fbld
call
in
sbbl
cmp
pop
push
sbb
notl
out
aam
jo
jne
push
jae
or
xchg
pop
lret
mov
imul
xchg
out
and
fmuls
xor
aam
pop
dec
xchg
lds
jmp
xor
es
adc
push
pop
jle
movsb
jb
lcall
push
in
xor
and
ret
in
mov
push
mov
scas
push
mov
pop
or
pop
mov
pop
loope
mov
xchg
lea
les
roll
pop
xlat
in
jge
aam
jnp
mov
fsub
mov
and
repz
lods
cmp
and
pop
push
mov
mov
pop
or
jl
rorb
mov
jnp
mov
or
adc
pop
push
enter
mov
dec
pop
jg
and
arpl
je
fdivrl
and
dec
addr16
mov
adc
dec
mov
iret
outsl
test
inc
and
js
xchg
add
mov
enter
inc
cmp
mov
inc
stc
es
lods
inc
cltd
jp
or
and
jp
push
mov
mov
mov
dec
jne
inc
idivb
adcb
sbb
jae
xchg
movl
push
scas
das
xchg
pop
cmp
push
in
mov
arpl
xor
mov
ljmp
xchg
fs
sub
jmp
fs
fbld
xchg
js
xchg
or
or
movsb
mov
aad
sbb
mov
sub
inc
adc
push
xchg
sbb
and
push
mov
fcomip
fisttpll
test
out
dec
mov
mov
test
fisubs
add
mov
inc
shrl
js
jmp
lret
dec
sbb
inc
arpl
adc
or
or
and
sbb
out
xchg
mov
iret
or
cmp
std
sub
orl
lret
fidivrs
mov
insl
push
jo
push
xor
xchg
xchg
mov
xchg
int
imull
push
xchg
into
lcall
fistps
sub
je
xchg
test
fisttpl
sti
mov
dec
mov
in
sub
std
jae
mov
sub
sarl
cmc
sub
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
xchg
mov
or
cmovge
mov
pop
aad
pop
bound
lea
enter
jecxz
xchg
xchg
sahf
jmp
cltd
cmpl
mov
cmp
clc
xchg
mov
jb
jne
mov
jae
js
leave
xchg
pop
jecxz
fldenv
js
push
sub
xchg
inc
insl
outsb
cmp
in
pop
inc
dec
lock
aaa
hlt
inc
dec
jno
adc
mov
imul
inc
movsb
mov
xchg
outsb
out
gs
addr16
or
mov
lcall
and
imul
dec
movsl
dec
mov
lret
mov
js
daa
lea
js
out
movsb
or
mov
dec
jge
add
test
push
add
sarb
je
cmp
loope
jnp
push
push
mov
sbb
adc
jl
icebp
xor
or
pushf
ja
dec
fsubrs
std
pop
sub
mov
stos
aaa
popa
popa
push
dec
sbb
push
cmp
popa
pusha
push
mov
popa
insb
in
mov
imul
daa
adc
sahf
xchg
jno,pn
cs
mov
mov
xor
push
jl
mov
popf
enter
jle
jbe
cmpsl
mov
mov
les
ja
addr16
inc
popa
fldcw
cmpsl
xlat
inc
adc
xlat
jmp
dec
mov
out
mov
ret
aam
push
pop
leave
add
out
or
addr16
into
scas
jecxz
or
repnz
das
dec
pop
fwait
adc
cmp
adc
mov
mov
enter
pusha
jae
jno
or
loopne
push
cmp
ss
ja
icebp
sbb
or
mov
or
mov
testb
daa
xor
bound
test
sub
rcll
hlt
adc
movsl
and
sbb
test
jno
push
bound
into
fbld
ljmp
out
ficompl
outsl
loopne
push
cwtl
cmp
jecxz
jge
cmp
mov
and
lret
sbb
cmpsb
fdivrs
cmpsb
or
push
in
lret
xor
or
mov
outsl
and
pop
in
pop
rcl
arpl
fists
arpl
pop
push
cmp
jb
mov
repz
inc
mov
xchg
push
inc
test
cmp
mov
jns
ret
xor
orb
pushf
cwtl
sub
test
inc
imul
mov
jnp
lea
ljmp
xlat
fimuls
mov
lret
cmp
loopne
and
sbb
iret
leave
nop
enter
add
testl
addl
arpl
push
imul
enter
in
cmp
inc
add
xorl
lock
fs
add
and
mov
or
adc
into
ja
adc
lods
lds
mov
adc
cmp
loope
adc
pop
push
inc
enter
insl
xchg
inc
xchg
lahf
push
pop
mov
cld
hlt
mov
push
push
push
pop
mov
inc
cmp
movsl
sbb
ss
loopne
es
mov
hlt
nop
mov
pop
pop
scas
lcall
sbb
inc
out
jp
lahf
mul
jnp
dec
inc
nop
pop
pop
dec
pushf
repz
cmp
cli
xlat
fidivrs
pop
cmp
iret
push
mov
push
sbb
xlat
sub
lds
ret
mov
aas
lock
mov
mov
or
arpl
mov
cwtl
mov
ret
andl
mov
mov
dec
cmp
popf
scas
sub
lahf
cwtl
insl
enter
fisubl
lcall
test
inc
out
sbb
xor
aad
stos
ss
imul
pop
xchg
out
lea
adc
lret
ja
cltd
push
add
push
jg
pop
xchg
jge
push
orl
xchg
scas
pop
fisubl
mov
sbb
jo
jae
sahf
push
xchg
and
adc
pop
sahf
sub
cmp
mov
xor
cltd
xor
mov
call
out
cmp
testl
cmp
lahf
test
dec
xor
and
ss
sub
sti
bound
add
arpl
inc
scas
xchg
or
sub
mov
movsl
or
push
jno
pop
into
and
pop
test
inc
in
xlat
mov
movsl
mov
repnz
jb
adc
pop
ja
or
jae
sub
jbe
and
pop
mov
pop
push
lret
in
mov
daa
cld
sahf
movsb
popf
movsb
cltd
and
fidivs
shlb
ror
sbb
fadd
in
ja
add
add
adc
sub
out
mov
xor
out
dec
shlb
mov
fiadds
jne
popf
nop
jo
imul
pop
xor
mov
or
testb
outsb
call
sub
mov
mov
aaa
add
ljmp
push
add
sub
and
jns
push
cmpsb
ja
lcall
dec
jae
push
push
mov
sbb
xor
fisubrs
scas
subl
push
testb
or
lods
xchg
inc
sbb
mov
mov
xor
js
jp
stos
and
insl
sub
mov
xchg
jo
and
cmpsl
cmp
jb
cmpl
imul
dec
jnp
sub
and
dec
jmp
js
iret
fisubs
xchg
arpl
decl
push
jbe
test
jge
pop
lea
ret
ljmp
imul
and
mov
fbld
push
clc
cltd
jge
jmp
cmp
sub
insb
push
rol
xor
pop
idiv
and
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
jge
and
sbb
cmpsl
mov
pop
push
sbb
ljmp
or
lock
rcrl
pop
lret
fimuls
repz
cmp
pop
cmp
sub
cs
and
or
sub
adc
adc
and
add
enter
ret
lret
sub
adc
lahf
mov
push
push
push
jmp
or
pop
add
inc
out
mov
ja
loopne
sahf
fisttpl
sahf
lods
mov
xor
das
push
adc
mov
pushf
xchg
dec
pop
jge
jns
sub
xor
xchg
stc
das
jl,pt
dec
mov
push
clc
pusha
dec
mov
inc
mov
xchg
mov
sbbl
xchg
inc
xor
push
fdivs
inc
xchg
pop
jp
dec
dec
push
pop
cmpsl
jno
lods
or
push
repnz
lret
jge
or
insl
cmp
fstl
mov
popa
inc
mov
adc
push
cld
dec
out
loope
pop
adc
mull
popf
test
outsb
jg
pushf
add
or
cmp
mulb
rcll
push
sbb
out
imul
mov
adc
mov
in
shll
loopne
cwtl
adc
lahf
xor
push
pop
shll
aam
gs
sub
loop
jne
cmp
dec
out
or
ss
dec
and
aaa
into
testb
dec
xchg
push
mov
pcmpgtb
mov
mov
cld
or
loopne
mov
jns
xor
fcoml
test
sub
mov
add
pushf
data16
leave
fsts
xchg
cmp
adc
int3
aaa
cltd
daa
sub
mov
dec
push
adc
mov
sbb
lcall
scas
inc
ret
fisubrl
xlat
fwait
or
cmp
jecxz
bound
pop
nop
shl
lcall
in
xacquire
in
out
adc
mov
lahf
lds
pusha
mov
mov
test
clc
fs
inc
mov
dec
iret
cmp
jp
mov
add
sub
into
sub
fnstenv
jbe
adc
push
add
out
std
jge
or
cli
xorl
mov
leave
lods
add
andl
movl
pop
push
cltd
dec
rcll
arpl
xchg
mov
cmc
dec
mov
popf
iret
cmpsl
adc
or
cmp
clc
jecxz
inc
cmp
pop
xchg
sub
pop
and
push
aaa
rorl
pop
ret
das
adc
imul
daa
mov
xchg
popa
cwtl
into
jmp
lret
bound
mov
xor
out
pop
sbb
frstor
xor
in
jmp
lret
shlb
popa
adc
sbbb
push
mov
aas
stos
xlat
xor
pusha
inc
pop
jp
pop
andb
test
ja
xor
push
je
pop
test
aam
aaa
adc
rcll
mov
pop
test
push
dec
jp
adc
jecxz
in
das
in
rdpmc
push
cli
xchg
fs
fs
popf
repnz
js
lcallw
pop
xchg
bound
out
mov
and
or
jbe
in
cwtl
icebp
inc
sbb
xchg
jg
aas
adc
xor
aam
mov
fdivl
xorb
pusha
sub
cmc
sub
cmp
jp
leave
inc
arpl
sub
jmp
aaa
orb
and
cmpsb
leave
pop
into
movsb
lock
pop
mov
data16
pusha
idivl
xchg
add
add
shrb
add
sti
lahf
test
adc
mov
decl
cs
loopne
add
add
mov
push
popa
cwtl
enter
mov
fsubrl
scas
shlb
imul
push
cltd
les
repz
clc
or
push
add
jmp
or
fcompl
push
cmp
pop
mov
hlt
mov
in
inc
ffree
stc
xlat
into
inc
enter
stos
les
xor
cli
dec
jecxz
ficoms
lret
xchg
stc
mov
xor
cmc
inc
push
xchg
icebp
cmp
enter
rcr
in
roll
xchg
lods
inc
sub
fdivs
mov
hlt
dec
test
aad
pop
std
je
jns
bound
dec
push
enter
arpl
loop
dec
dec
jl
shl
adc
dec
jns
idiv
aam
xchg
pop
cmp
fisttps
enter
lods
adc
sub
popf
sbb
dec
out
mov
dec
ss
push
jecxz
popf
xchg
mov
add
jnp
insl
add
pushf
pop
rcll
inc
add
leave
inc
dec
sbb
pop
adc
push
push
fbld
pop
imulb
mov
insb
pushf
jbe
mov
daa
mov
dec
jns
sub
repnz
xchg
roll
mov
xchg
sub
test
pop
mov
stos
lea
dec
cltd
lret
les
jg
mov
cltd
dec
mov
adc
lcall
sahf
mov
scas
rcl
ja
in
mov
int3
inc
sub
and
jbe
sub
and
imul
adc
aas
mov
cmp
or
xchg
adc
jno
cmpsl
mov
fistps
xchg
pop
pushf
iret
insb
mov
and
mov
out
lds
outsl
mov
repnz
insb
jns
fsts
out
out
shlb
and
rolb
sub
pop
dec
pop
mov
jne
push
inc
sub
jmp
mov
jns
mov
or
sbbb
imull
fidivs
cmp
test
jecxz
mov
icebp
pop
dec
jo
repnz
cmc
cs
xchg
sub
insl
inc
cmpb
insb
xorl
jmp
iret
int3
fisttpll
jle
and
push
xchg
jmp
pop
imul
shll
mov
pop
mov
pusha
jo
xchg
addl
lods
jg
roll
sub
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
inc
loope
mov
or
unpcklps
lock
cmc
pop
shlb
jne
cmc
gs
adc
sarl
aam
mov
adc
pusha
orb
xchg
jg
or
pop
adc
jp
scas
sbb
pop
cmp
dec
xor
jb
and
cltd
cltd
leave
es
and
pop
adc
sbb
lea
jno
out
cmp
popf
and
mov
pop
xor
popa
out
mov
jno
mov
imul
fdivl
lods
decl
xchg
cmp
movsl
xlat
cmp
aaa
mov
and
mov
cmp
cmp
repz
mov
sbb
push
jns
mull
cmpsb
dec
aaa
cmp
sbb
stos
icebp
sub
test
xor
sub
lcall
shll
xor
ror
rclb
sbb
cmp
lods
pop
jmp
insl
push
inc
xor
loope
or
fidivl
jmp
les
js
lods
mov
negl
es
inc
mov
pop
cmp
std
push
pop
or
mov
mov
jnp
mov
mov
lods
add
bound
into
push
sbb
push
push
testb
scas
in
lea
push
fiaddl
push
jnp
jbe
gs
lea
dec
dec
push
sahf
jle
incl
add
lret
cmp
imul
sti
push
pop
push
rorl
aam
hlt
add
cmp
xor
push
push
jne
mov
out
cmpsl
xor
lods
mov
mov
out
mov
push
jne
out
cs
or
loope
enter
push
sub
pop
jns
pop
push
push
pop
inc
sbb
js,pn
iret
push
push
jb
mov
cmp
push
repnz
imul
xor
icebp
add
cmp
sarl
out
in
sbb
in
imulb
rorb
dec
pop
je
pushf
scas
aam
cli
lret
iret
xchg
xor
inc
in
add
in
jno
sbb
pop
enter
push
fisttps
mov
popf
sbb
dec
cwtl
lods
mov
cld
push
xchg
dec
fdivs
push
and
lods
imul
lret
or
and
insb
sub
subl
pop
lods
ret
movsl
dec
mov
sub
in
cmp
into
call
nop
loope
jecxz
fldpi
and
and
push
bound
mov
ds
mov
inc
test
xchg
dec
stos
leave
lea
push
inc
push
out
jnp
mov
push
insl
sbb
mov
push
pusha
ss
aam
fimull
jo
jnp
push
imul
xor
cs
xor
lret
aas
mov
test
jno
cli
inc
dec
loopne
xchg
mov
movsl
mov
jbe
jle
loopne
dec
adc
jecxz
stos
or
xor
sub
ret
xor
xchg
sub
outsb
push
push
hlt
sbb
jo
and
ficomps
sti
mov
mov
dec
clc
xor
xchg
stos
stc
xchg
clc
mov
ret
std
scas
ja
push
adc
bound
inc
add
inc
dec
subb
lods
popf
xor
sahf
cmp
addr16
int
lods
xchg
fistpl
jb
testb
add
or
in
and
cmp
jl
lods
sbbb
push
dec
mov
int
adc
inc
leave
ja
push
into
addl
or
scas
insb
mov
push
jecxz
dec
lea
repnz
fisubs
jl
les
xor
dec
dec
mov
leave
or
mov
lret
out
rorb
dec
push
mov
mov
pop
lds
in
lret
pop
fidivs
and
sub
and
imul
js
aam
test
push
insb
imul
mov
dec
loope
ds
pop
daa
aam
repnz
push
and
xchg
jecxz
sbbl
inc
xchg
out
adc
ds
stc
push
jb
je
lahf
mov
dec
pushf
push
mov
dec
mov
ret
popf
mov
and
lea
dec
mov
adc
enter
jp
jmp
out
add
std
adc
sub
pop
and
push
loop
scas
mov
decl
xchg
push
xchg
push
call
loop
clc
lret
cs
or
cs
int
scas
fimull
in
sti
push
xor
aam
out
pop
push
xor
or
ficompl
bound
sub
adc
push
roll
jp
sbb
push
insb
rcr
fs
and
adc
xchg
or
lods
or
ljmp
outsl
gs
sahf
into
test
sbb
lock
mov
in
imul
data16
pop
adc
pop
sarb
js
push
push
cmpsl
loope
ror
int3
mov
jp
aam
and
in
inc
mov
and
adc
xor
adc
rcll
movsl
jbe
xor
les
xor
push
mov
xor
sbb
lock
xchg
xchg
add
xor
imul
adc
rol
or
insl
iret
and
into
mov
dec
dec
int3
ljmp
popa
fnstcw
lods
mov
sbb
inc
add
outsb
sub
repnz
mov
fisttpll
mov
sub
imull
jmp
push
fildll
iret
cwtl
nop
jno
dec
scas
fistpl
outsl
mov
ja
dec
xchg
into
push
dec
jns
xchg
stos
xchg
out
dec
inc
add
xchg
xor
jmp
adc
lods
jno
decb
mov
scas
icebp
orb
dec
outsb
scas
aam
inc
enter
sahf
fidivs
jnp
lahf
or
neg
lods
and
and
negl
imul
rcrb
stc
jmp
mov
xchg
mov
lcall
or
pshufw
inc
mov
push
data16
add
xchg
hlt
cmp
push
lods
repnz
insb
mov
jns
sub
stos
jmp
out
fs
pop
les
or
push
outsl
fcoms
cmp
mov
xor
xchg
mov
in
icebp
in
int3
xor
imul
orb
xchg
sbb
notl
pop
outsl
scas
sahf
add
sbb
lods
mov
inc
loopne
es
cmp
mov
or
add
lea
sbbb
mov
inc
sbb
pop
ficomps
cmp
and
fwait
mov
pop
lret
and
add
pop
test
mov
aas
mov
je
dec
sbb
mov
xchg
jge
sbb
les
nop
outsl
pop
daa
adc
push
loop
es
mull
std
addr16
jmp
insb
addb
call
out
pop
int3
sbb
cmp
pop
or
pop
add
call
pop
xor
xor
int3
lret
pop
adc
out
jae
loopne
mov
ja
sbb
out
loope
sbbb
ret
jecxz
stos
lahf
xor
ret
sub
jnp
sbb
push
lret
pop
rol
mov
adc
das
dec
lcall
sub
adc
adc
cmp
push
aaa
jecxz
add
cmpsl
add
pusha
dec
addr16
shrb
and
adc
mov
dec
stc
mov
xor
jb
cwtl
and
fs
rclb
mov
push
adcb
test
paddsw
push
ljmp
outsb
or
adc
lcall
lock
and
push
push
cmp
ja
int
faddl
call
hlt
ja
ficoml
jno
cmp
subl
jb
fcompp
aas
dec
in
cmpsl
jae
jg
or
fbstp
jge
repnz
adc
ficomps
imul
out
fadd
pop
push
pop
add
addl
jae
pop
psubb
scas
push
inc
shlb
inc
dec
adc
imul
add
loop
adc
inc
cmp
mov
sub
mov
cmp
pushf
aad
add
mov
das
cmp
mov
inc
outsl
test
mov
fsubrl
ret
sbb
insl
sub
hlt
inc
xchg
mov
sahf
scas
jg
insl
jge
sbb
mov
outsb
and
mov
negb
loop
push
push
stos
inc
iret
xchg
sbb
cli
hlt
add
jne
sub
add
lcall
and
inc
rcrb
sahf
imul
call
mov
loope
movsb
rcrb
mov
sub
fdiv
sub
addb
mov
or
loopne
cmp
mov
mov
mov
rcll
pushf
sub
repnz
pop
jmp
cwtl
es
jae
and
mov
iret
adc
aaa
aaa
sub
sub
inc
mov
inc
adc
iret
xchg
pop
loope
pop
test
jl
hlt
sbb
rclb
xchg
jle
loop
pop
test
cmp
and
fldl
repz
and
gs
fsincos
movsb
dec
xchg
cmp
mov
addr16
imul
fcmovbe
sbb
jecxz
sbb
add
or
daa
push
in
add
sbbb
mov
sub
mov
mov
adc
push
mov
mov
mov
or
inc
push
stos
xchg
pop
daa
gs
lea
add
incl
es
jnp
aas
test
mov
push
jns
push
mov
notl
orb
pop
xor
mov
add
xor
dec
outsl
jge
cli
lret
sbb
popf
cmp
jl
sbb
mov
and
div
mov
sbb
in
in
js
out
mov
in
sub
and
outsl
sbb
mov
adc
iret
cmp
lahf
ss
mov
jne
loop
fcomp
andb
mov
xchg
xchg
mov
sbb
outsl
js
jecxz
sbb
push
mov
in
jb
mov
mov
mov
sub
push
mov
scas
and
out
ja
dec
cmp
push
bound
sub
sbb
fs
and
cmp
imul
nop
leave
mov
addb
popa
cmp
and
mov
cs
outsb
push
into
sub
dec
mov
and
int3
or
sub
sahf
clc
cwtl
adc
xor
mov
jnp
xchg
imul
xor
cmp
rcrl
inc
aad
mov
xchg
xchg
idiv
cmp
pop
lret
cltd
imul
xchg
jge
pop
cmp
push
mov
sub
fnstcw
push
cld
push
ret
add
and
data16
jle
ds
movsl
push
adc
repz
mov
out
call
sbb
pop
inc
inc
push
rcll
into
cmp
push
mov
jecxz
popf
xchg
pop
xor
mov
iret
ds
jnp
pop
jne
jo
add
cmpsb
sub
add
push
icebp
mov
add
xchg
dec
mov
shrl
sub
jle
nop
xlat
or
xchg
hlt
nop
test
fdivr
lcall
imul
fbstp
pushl
cmp
dec
sahf
aad
or
dec
add
inc
sub
mov
mov
lret
dec
jb
std
inc
in
add
shlb
add
pop
mov
inc
icebp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
dec
test
invd
add
ud2
iret
and
or
fisubrl
int3
flds
sbb
ja
dec
xor
and
sub
xor
out
in
push
movsl
addr16
test
mov
pushl
int3
xor
test
mov
xchg
rcrl
jecxz
lea
sbb
rolb
pop
jmp
pop
scas
fwait
mov
push
mov
dec
mov
mov
les
push
mov
mov
aam
push
mov
adcl
adc
fs
rorl
mov
nop
pop
imul
stos
in
xchg
incb
dec
inc
dec
ljmp
adc
push
scas
mov
push
lods
movl
dec
andb
sbb
lods
lock
xchg
ja
subb
iret
inc
xchg
sub
cmpsb
push
lods
sbb
sahf
test
mov
adc
adc
add
jne
lods
add
sub
jg
sbb
sub
push
repz
insb
mov
out
stos
and
inc
adc
aaa
insb
fst
pop
mov
subb
xchg
inc
stc
xor
push
ret
cwtl
decb
jecxz
mov
fisubrl
cld
ficomps
cmp
sbb
ljmp
xchg
mov
in
push
js
add
pop
shlb
das
rcrb
popa
xchg
in
pop
dec
xchg
mov
adc
cmpsb
push
fsubrl
cs
aad
pop
sbb
int
aas
jge
jno
ds
mov
cs
inc
ret
xchg
jmp
fidivrs
mov
mov
into
es
outsb
inc
and
daa
sub
or
out
mov
ficoms
cmp
clc
loop
dec
push
lods
inc
dec
pop
pop
pop
es
test
into
test
mov
stos
dec
imul
insb
outsl
xorl
inc
add
adc
imul
test
movl
mov
std
mov
andl
xor
sub
or
mov
arpl
scas
sbb
cmpb
add
mov
scas
push
aam
cmp
pop
jnp
arpl
inc
xchg
pushw
ret
je
test
adc
mov
sub
dec
sbb
jecxz
in
std
mov
cmp
cltd
sbb
push
loop
orb
js
call
adc
ja
mov
push
jp
xor
mov
shrl
int3
in
jecxz
inc
movsl
shll
adc
lret
jb
sahf
std
sub
jg
aas
sub
movsl
lods
dec
insb
xchg
fld
test
imul
aas
subl
int
js
stos
pop
adc
fstpl
push
fldl2e
push
xchg
clc
loopne
jae
pushf
and
or
xchg
or
cmp
mov
lea
mov
pop
jbe
xor
sbb
pop
mov
push
push
mov
ja
push
mov
out
mov
push
add
lret
inc
lds
stos
shlb
mov
push
sbb
cmp
sahf
leave
dec
loop
push
movsl
addr16
lea
js
fstps
sbbl
add
in
leave
mov
imul
xor
add
mov
add
sub
imul
idivl
and
add
and
adc
lahf
or
push
xchg
pop
mov
xlat
fsubrl
xlat
push
cwtl
test
sbb
sub
mov
dec
icebp
xchg
mov
dec
or
inc
repnz
stc
xchg
test
aam
mov
out
jbe
adc
push
aaa
lds
pop
or
fs
inc
pop
xchg
push
and
loop
testl
adc
push
mov
sti
sbb
ss
in
xor
in
jle
and
incl
dec
into
stos
cmpsb
pushw
xchg
out
xchg
xchg
xchg
mov
stos
mov
pop
sbb
push
jns
or
mov
outsb
std
cmp
scas
jg
xlat
sbb
jmp
test
test
push
push
jo
mov
pop
fiaddl
dec
mov
call
leave
pop
inc
loop
add
mov
fnstenv
je
jle
xor
and
mov
add
lods
cmpl
in
test
xor
dec
jp
adc
mov
xchg
cmp
inc
fsubs
das
sub
lea
mov
arpl
dec
mov
mulb
pushf
idivl
mov
call
cmp
inc
jns
jo
xchg
xor
push
je
loop
jl
mov
out
mov
mov
jns
ja
or
stc
enter
mov
lret
sti
mov
cld
xchg
push
cmpsb
enter
xchg
ljmp
flds
push
add
and
cmp
out
fidivl
cmp
loop
outsb
cltd
dec
lods
xchg
sti
mov
mov
enter
xchg
dec
fistl
mov
aam
leave
mov
jo
fadds
xor
or
sbb
into
enter
adc
outsb
jbe
fldl
mov
jp
rolb
mov
insl
rorb
fs
mov
test
mov
xorb
mov
es
addr16
scas
push
in
pop
mov
aaa
pop
pop
pop
and
inc
test
ret
icebp
cwtl
int
insb
enter
fwait
add
sub
jb
cwtl
jno
mov
stos
cmp
shll
cmp
je
add
dec
fbld
xlat
ljmp
je
lock
jge
jg
ljmp
repz
or
nop
pop
addr16
arpl
push
sub
jl
sbb
jl
sub
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
xchg
dec
mov
add
seta
cmp
sub
add
imul
iret
inc
rcrb
or
test
sbb
div
hlt
pop
loope
mov
sbb
mov
cwtl
mov
add
xchg
out
aam
push
xor
aad
in
push
adc
fwait
mov
jb
roll
insb
fucomip
mov
cmp
data16
aas
add
or
xor
jecxz
lods
adc
inc
pop
cwtl
dec
clc
repnz
les
cwtl
and
cmp
or
mov
in
push
fdiv
mov
mov
mov
push
or
cmp
pop
jb
setp
push
cld
mov
dec
scas
or
jne
cs
adc
test
push
pusha
fidivs
gs
loop
ret
les
pop
xor
aad
imulb
dec
and
aam
pop
xor
mov
push
mov
ljmp
enter
xchg
out
pop
mov
fistpl
lahf
xchg
lods
cmc
es
cs
popf
lcall
cmp
mov
adc
jge
movsl
das
fistpll
lcall
push
push
cmp
testb
lret
add
jne
aam
mov
cmp
sbb
pushf
sub
lret
sub
mov
ret
pop
mov
sbb
add
bound
pop
test
movsl
test
mov
xorb
or
nop
gs
adc
je
xchg
mov
shl
pop
cmc
xchg
xor
mov
int
sbb
faddp
repnz
inc
dec
mov
dec
repz
aas
fadd
int
jns
mov
or
xor
cmpsb
int3
popf
in
xchg
fnstenv
divl
jne
cmpl
dec
pop
xlat
movsl
adc
js
iret
jmp
jle
popa
sbb
or
add
add
push
and
pop
insb
imul
int
andb
iret
push
add
in
leave
js
push
fstps
out
pop
enter
add
sub
push
dec
imul
jo
xor
jge
pop
divl
add
or
mov
jp
lds
pop
lods
popa
dec
repnz
xorps
mov
dec
jle
jae
aaa
mov
mov
and
ljmp
add
imul
pop
pop
repnz
adc
xor
mov
cmp
fldt
inc
rcrl
mov
ror
fnsave
lods
es
inc
add
mov
sbb
bswap
xor
jne
jge
xchg
popa
pop
pop
out
push
stc
cs
fldl
clc
ret
mulb
gs
dec
bound
mov
ja
mov
lock
add
xchg
lcall
cmp
jecxz
test
mov
jo
push
daa
mov
ss
je
andb
sub
ror
leave
xchg
dec
push
icebp
lds
add
pushf
sbb
icebp
ret
pop
sbb
mov
aaa
adc
in
pop
int3
movsl
les
mov
add
fwait
je
int
mov
cmpsl
in
imulb
xchg
push
mov
int3
ss
jecxz
add
push
push
iret
xor
test
out
adc
insl
ja
dec
lods
xor
push
xor
pusha
jecxz
mov
lcall
mov
jo
push
mov
es
xchg
dec
inc
inc
js
fwait
roll
sub
jge
cmpsb
nop
add
pop
push
not
mov
rcl
arpl
lret
push
sbb
mov
hlt
test
and
dec
in
jge
lods
xor
dec
aas
out
addr16
cld
and
rol
lret
xchg
orl
sbb
dec
cli
mov
in
cmpl
mov
rcll
ret
aam
das
out
fstps
repnz
insl
or
movsl
dec
inc
adc
pop
insl
into
cli
and
imul
faddl
push
dec
filds
mov
popa
mov
mov
xor
sub
push
push
add
inc
pop
xchg
insb
mov
jl
lcall
jmp
fwait
mov
xchg
push
cmp
pop
je
lahf
icebp
mov
inc
cmp
fldcw
jmp
scas
sub
fildll
lret
sub
sbb
lock
mov
cli
cwtl
out
dec
lret
mov
mov
lcall
cld
shl
sbb
inc
push
lcallw
xchg
add
enter
push
push
cmp
jae
adc
enter
push
jecxz
sub
repnz
loop
sub
pop
mov
cmc
pop
insl
jns
jno
lds
fisubl
adc
test
pop
sahf
cmp
jmp
mov
scas
push
es
fnsave
cmp
jl
push
or
cmp
movsl
sub
outsb
in
pop
popf
jae
int
pop
nop
and
mov
shlb
mov
lods
jae
ds
cmc
add
lret
mov
mov
mov
xchg
mov
arpl
dec
roll
ss
dec
mov
jb
scas
mov
push
jecxz
mov
jbe
pop
aas
inc
ret
imul
and
cmp
inc
shrb
cmp
add
mov
or
jne
psubusw
mov
pop
adc
push
sbb
in
subb
inc
push
sub
loopne
inc
push
xor
imul
out
pop
push
push
push
and
ja
cmpsl
leave
mov
pop
nop
and
mov
mov
sbb
lds
out
cmc
jmp
push
leave
mov
xor
sbb
xchg
sub
fimuls
stos
rcr
jge
mov
mov
pop
and
dec
inc
stos
pop
mov
add
sbb
add
test
arpl
push
in
pop
inc
daa
into
iret
repnz
xor
lods
push
setns
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
xor
dec
mov
add
mov
jne
les
popa
inc
xor
add
xlat
aaa
cwtl
test
test
jl
and
inc
jle
dec
inc
mov
add
ret
lds
xor
push
fistl
invd
push
rclb
call
jb
add
fnstcw
decb
movsb
cmp
and
imul
mov
mov
bound
gs
gs
cmpsb
lds
aad
or
inc
enter
icebp
rcrb
into
cs
cmp
adcb
xchg
jg
or
push
push
push
sbb
inc
pop
in
mov
inc
nop
pop
pushf
call
mov
xchg
dec
shrl
and
lea
pop
ret
not
test
adc
adc
sub
sbb
jo
das
cmpsl
inc
xor
sbb
jae
pop
push
push
lret
arpl
jge
mov
pop
aad
jb
add
push
shrl
add
and
adc
mov
jne
rcrl
cli
mov
push
jg
sbb
pushf
push
negl
mov
cltd
dec
mov
mov
popa
imul
dec
mov
dec
lods
hlt
xchg
fcomps
pause
mov
mov
test
inc
movl
bound
cld
ds
into
mov
int
push
fs
cmc
stos
ljmp
loope
jns
call
imul
mov
sub
mov
cli
or
mov
fs
jae
les
ret
xchg
jmp
cwtl
adc
sbb
outsb
adcb
jne
push
lcall
sub
dec
cmp
xor
mov
mov
fdivr
xchg
jbe
inc
rcr
pop
shrb
repnz
mov
cmp
rol
cld
rcll
xlat
int
in
xor
xchg
sti
adc
arpl
ds
xor
inc
paddd
in
push
push
test
cli
enter
divl
inc
sub
mov
xor
dec
mov
cmp
adcb
aas
in
and
jle
enter
imul
jbe
nop
bnd
dec
add
and
pusha
imul
arpl
cmp
fwait
xor
movsl
loope
lea
adc
sti
cli
dec
icebp
mov
or
les
data16
pop
lret
in
sbb
daa
sub
imul
jnp
ja
dec
bound
bound
fisubs
cltd
test
int
cmpsb
jbe
jne
rcr
cmp
mov
insl
xor
repnz
repnz
jge
nop
adc
gs
jbe
push
xchg
cltd
addr16
mov
ljmp
es
push
cmp
dec
int3
dec
inc
xor
push
pop
jg
ret
xor
roll
and
lret
mov
fucomi
insl
xchg
popf
pop
or
in
push
xchg
stos
mov
dec
pop
cmp
jne
ja
sahf
jp
push
mov
mov
mov
roll
mov
pop
inc
mov
lahf
rcrb
sbb
std
jne
iret
jo
pop
and
add
lods
inc
clc
mov
mov
inc
shrl
dec
xchg
push
adc
xor
aad
fadds
inc
or
rclb
mov
rcrb
in
push
test
sub
jbe
fdivrl
pop
jns
jne
dec
xchg
int
add
inc
push
das
lods
addr16
leave
mov
mov
inc
xor
popf
cmovno
cmp
or
cltd
fdivrp
gs
xor
dec
rcrl
leave
mov
jno
or
insb
ljmp
lds
sti
mov
mov
or
sahf
cltd
test
add
pop
lods
shrb
mov
lods
sahf
inc
push
mov
mov
iret
stc
and
out
mov
xchg
fidivrl
into
inc
fcomi
loope
out
push
dec
mov
cs
push
adc
dec
jge,pt
push
sub
xor
sbb
jp
divl
in
xor
or
xchg
repz
les
shll
mov
push
cli
jl
xorb
sub
sbb
test
pop
xor
pop
push
jae
jp
into
xor
lret
sbb
mov
aas
fucomip
nop
lret
push
movsb
push
mov
mov
idivb
push
add
repnz
cmp
ret
pop
jnp
xchg
insl
xor
pop
sbb
nop
inc
pop
pop
leave
xor
push
and
or
cmp
out
daa
sbb
lahf
aad
daa
test
out
adcb
les
push
hlt
inc
xchg
xorb
out
ds
sbb
sbb
mov
inc
shll
dec
sub
xchg
out
push
aad
jo
fsincos
add
testl
jp
mov
sub
mov
add
mov
or
ljmp
mov
xchg
insb
out
dec
sbb
and
inc
sti
mov
int3
lods
or
lsl
mov
cmpsl
inc
cld
xchg
ret
mov
jnp
shlb
xchg
inc
jb
scas
and
pusha
jge
adc
sbb
or
test
movsb
xchg
mov
push
iret
or
or
in
add
push
mov
or
ljmp
xor
mov
sbb
enter
sbb
hlt
movsb
lret
mov
std
xchg
es
adc
mov
jg
or
fwait
mov
pop
idiv
lahf
mov
mov
push
xchg
sbb
popf
inc
in
test
xchg
dec
divb
add
iret
sub
outsl
repnz
int3
jmp
sbb
or
xchg
inc
adcb
cmpsb
sbbl
or
xchg
out
jne
sub
loopne
xchg
cwtl
in
daa
cmp
popf
ret
imul
cmp
test
cmpsl
rcl
jbe
call
add
ficomps
jb
fidivrs
cmpsl
in
fisttpl
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
vmread
cmp
js
aaa
push
xchg
fbld
ljmp
xor
int
mov
sbb
cmp
aam
cmp
sti
or
es
and
jae
jb
jo
sub
add
mov
loope
cmpsb
fistpll
sub
cli
das
hlt
pop
mov
pop
sarb
sbb
fists
pop
clc
inc
out
sbb
jne
or
mov
lock
jecxz
mov
sbb
mov
lea
test
in
ja
mov
or
movzbl
gs
mulb
or
in
repnz
cmp
stos
push
mov
imul
aaa
icebp
mov
xchg
fsubrs
int3
mov
iret
push
cmc
ljmp
mov
je
stc
jnp
push
iret
cmp
cltd
aas
bound
adcb
xor
out
pop
add
xchg
push
enter
mov
cmp
fs
xchg
fwait
sbb
clc
xchg
mov
add
dec
jmp
xchg
bound
test
add
lds
xchg
mov
sahf
ficoml
cmpsb
gs
jnp
lock
push
mov
dec
or
cmp
mov
pop
ss
sub
ds
or
and
pop
xor
mov
es
fimuls
adcb
cmpsl
imul
pop
inc
adc
cmp
add
divl
xchg
fimull
shlw
mov
arpl
stos
je
xlat
in
xlat
shrb
or
cmp
push
mov
xchg
outsl
mov
pushf
adc
pop
ds
mov
jns
ret
adc
inc
mov
aas
xor
in
popf
adc
movsl
es
cltd
sti
pop
call
add
out
jp
in
arpl
lea
addr16
in
push
cmp
cmpsb
lcall
push
jne
shlb
mov
test
xor
xchg
leave
mov
mov
xor
aam
loope
and
dec
pop
ljmp
imul
mov
aaa
cmp
jns
addb
pop
nop
repz
insb
ja
loopne
push
adc
sbb
into
enter
lret
pop
ljmp
cmp
stos
lcall
mov
or
js
mov
xchg
mov
lahf
fs
jle
fcomps
jnp
es
add
idivb
inc
and
mov
push
mov
dec
stc
test
movsb
out
std
jae
push
test
dec
mov
fcomps
test
jb
mov
cmp
aaa
jns
mov
xchg
jno
pop
dec
std
dec
jae
adc
insl
mov
jge
jnp
sub
xchg
repz
faddl
mov
jle
leave
xor
mov
ja
out
lret
mov
jae
clc
imul
pop
cmpsb
pop
mov
stc
mov
test
pop
cwtl
push
add
orl
jmp
push
cmp
lcall
push
xorl
in
sub
ja
pop
rol
jne
xchg
pop
cmp
xor
rcrl
sbb
or
add
jo
inc
push
loop
dec
into
or
or
stc
fistl
mov
cld
dec
mov
add
mov
or
cmp
mov
ljmp
test
or
lea
adc
lcall
out
mov
popa
sbb
adc
cmp
dec
pop
mov
imul
lea
in
pop
loope
mov
loope
sahf
out
sti
mov
into
icebp
cmp
mov
stos
shrb
cmp
adc
out
inc
mov
stc
dec
loop
rorb
lods
adc
mov
ret
lret
xor
cmp
mov
jne
adcb
push
aas
out
andl
adc
fcompl
popf
aad
and
sub
mov
lea
pop
imul
xchg
push
std
ret
es
and
rcr
sub
dec
es
ret
or
fsubs
jg
inc
or
fmulp
mov
nop
bound
cli
loopne
dec
out
jp
push
std
shl
cmp
fistl
dec
sub
xchg
dec
and
push
mov
or
sahf
push
shll
aad
mov
xor
dec
les
pusha
cli
push
fs
add
pop
pop
hlt
pop
mov
or
push
out
mov
inc
fsubrs
rclb
shlb
arpl
inc
out
sbb
add
rcl
addr16
subl
ljmp
xchg
inc
ss
mov
adc
dec
sti
adc
aad
xor
sub
dec
stos
jp
lahf
and
popw
lods
iret
fs
and
lds
add
mov
add
mov
scas
inc
test
pop
cmc
lret
mul
fists
aam
or
dec
hlt
xchg
out
or
mov
gs
pop
cmp
ja
push
cmp
adc
int3
pop
add
mov
je
mov
push
cli
rclb
push
sarb
dec
movsb
pop
mov
lret
and
mov
fisttpl
dec
xchg
imul
cmc
push
leave
dec
in
push
push
test
mov
xchg
add
jo
xchg
inc
xor
adc
pop
mov
and
rolb
fdiv
sahf
cltd
lcall
jl
adc
push
push
jp
roll
or
push
sbb
test
repnz
arpl
loop
loopne
mov
inc
test
scas
mov
pop
adc
sbb
scas
enter
cmp
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
repnz
mov
push
invd
add
mov
or
std
mulb
ret
inc
adcl
push
xlat
cwtl
lock
pop
movsl
push
daa
add
adc
and
out
cld
jbe
pop
push
lret
inc
add
iret
xchg
xchg
dec
cwtl
and
fldl
jle
daa
or
inc
fiadds
cmp
push
in
xlat
inc
sub
inc
arpl
les
shr
fisttpll
cmp
cli
xchg
dec
add
push
jo
push
adc
mov
xor
add
loop
mov
or
xchg
test
xchg
std
in
js
cmp
jge
sbb
leave
adc
in
push
jns
aad
or
lock
stc
shl
jns
xchg
adc
add
cwtl
subl
into
fwait
xor
dec
mov
push
jecxz
pop
mov
inc
fidivrs
push
adc
aad
in
enter
repz
xor
mov
call
mov
cmc
xor
adc
cmp
pop
mov
inc
adc
jp
repnz
push
xchg
or
or
in
add
fcomp
int3
mov
cmp
adc
push
fldcw
fs
cmp
imul
cmp
cmp
mov
faddl
xchg
dec
cmp
bound
push
fsubl
sub
adc
nop
pop
sub
ret
sub
or
andl
and
fists
lods
add
in
ret
mov
dec
lahf
push
les
or
push
jns
push
fcomps
and
repz
imul
out
out
out
inc
ja
test
rcrb
fs
icebp
ret
outsb
imulb
lret
push
jb
into
lret
pop
sbb
or
inc
mov
mov
jnp
shll
or
cmp
cltd
xchg
mov
sahf
sbb
lods
adc
cmc
stc
and
ljmp
push
fmull
test
ss
into
scas
cltd
sub
popl
push
xchg
fs
sbb
xchg
xchg
psrad
fsubrl
cmp
bound
lahf
movsl
cmp
cmp
inc
jmp
fisubl
push
loopne
leave
arpl
popf
stc
xchg
cmp
outsb
lret
ja
xchg
push
push
pop
pop
sbb
and
mov
loopne
loop
hlt
pop
lea
ss
push
les
mov
mov
int
out
dec
push
push
cmc
mov
jmp
adc
sbb
jae
and
loop
cmp
stos
das
inc
jmp
and
xchg
push
imul
cmpsl
inc
xlat
xchg
cltd
lea
mov
add
adc
fldl
push
sub
inc
repz
movl
jns
inc
das
test
inc
cmpsl
cmc
in
imul
dec
mov
push
fistpl
cmpsl
rol
lcall
push
adc
mov
jno
fistpl
arpl
fistpll
mov
test
pop
scas
insl
sub
insl
cmp
clc
jg
and
push
adc
push
cmp
jecxz
jo
sarb
mov
sahf
mov
jecxz
mov
or
sbbl
xor
or
mov
and
pusha
lock
andl
or
fstl
mov
cmp
das
push
push
imul
daa
push
sbb
mov
dec
lock
lcall
inc
enter
mov
fxch
xchg
adc
xor
add
inc
mov
cs
and
pushf
mov
js
sbb
pop
ja
cmp
sbb
pop
xchg
pop
xchg
rol
mov
push
out
fisttpll
shrb
xchg
pop
cwtl
adc
lahf
sub
xlat
sbb
arpl
into
adc
push
std
cld
int
xchg
pop
xchg
sub
cmp
xchg
lods
adc
aaa
aas
loopne
or
movsl
mov
shlb
insb
push
mov
mov
mov
mov
jbe
in
fnstcw
test
push
pop
ss
push
pop
inc
mov
insl
ret
pusha
aad
xchg
leave
mov
test
xchg
push
cld
outsl
cmpps
std
pop
movb
mov
pushf
test
ffreep
push
std
cmp
xchg
enter
call
imul
sarl
dec
lret
adc
in
inc
jo
loopne
xor
out
or
pop
js
and
or
or
and
adc
in
jo
mov
insb
or
mov
sub
std
outsl
mov
subl
push
mov
cmc
aaa
adc
jns
add
es
jae
repz
cmp
inc
in
jmp
mov
or
ret
or
sahf
xchg
mov
shrb
mov
lods
push
pop
int3
ljmp
mov
mov
sub
xorb
sub
sub
dec
sahf
sbb
xchg
mov
test
mov
xchg
xchg
xchg
sub
inc
int3
jecxz
enter
nop
loope
inc
mov
rcrb
xchg
adc
mov
pop
pop
incl
jp
lret
lods
sbb
adc
push
jnp
loopne
mov
and
lret
sbb
test
push
sti
jl
push
sub
popa
in
into
mov
add
pop
vpaddb
imul
add
loope
push
add
pusha
xlat
inc
cmpsb
cmp
jmp
int3
sahf
xchg
rcll
or
xchg
insb
sub
dec
xchg
leave
loope
in
cmp
movsl
scas
xchg
mov
es
push
mov
xor
adc
fwait
imulb
lret
sbb
xchg
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
sub
mov
dec
invd
add
jno
inc
test
adc
xor
repz
fisttps
pop
insb
dec
outsl
sub
ljmp
out
outsb
and
imul
pop
inc
out
xchg
jno
in
loop
inc
movsl
jecxz
outsb
mov
icebp
in
fcomip
lret
jp
mov
jbe
lret
leave
sbb
aad
leave
daa
jl
clc
test
mov
adc
scas
das
out
sbb
adc
out
xchg
push
inc
cs
add
and
iret
insl
nop
jp
ss
call
xor
adc
or
imul
inc
xchg
lea
out
ret
clc
add
cmp
sahf
pop
dec
inc
cmpsl
dec
popf
lahf
or
stos
mov
movsl
rorl
repz
adc
push
push
push
clc
sarl
pop
or
push
mov
push
pop
add
jp
int3
and
jle
test
xchg
pop
push
or
xor
and
inc
or
xor
rorb
sbbb
or
xor
push
push
outsb
lock
mov
dec
pop
cs
or
mov
push
fnstenv
and
lea
jg
repnz
mov
in
ss
addr16
cmp
mov
sahf
push
jmp
add
mov
xlat
pop
add
push
notl
or
adc
push
or
and
inc
mov
xor
scas
and
mov
icebp
sbb
inc
inc
and
and
pushf
shlb
pop
jns
or
mov
mov
ret
out
fstl
repz
shlb
xor
loopne
jae
leave
shll
mov
testb
jg
movsb
sbb
sbb
sub
negb
test
shrl
add
mov
inc
sbb
inc
mov
push
adc
aam
ret
mov
shrl
xor
mov
add
scas
add
aam
pop
pop
mov
jne
xchg
ficoms
bound
xchg
leave
lock
jb
je
jl
pushw
add
shrd
mov
add
and
cmpb
cld
push
cmc
mov
pop
fwait
inc
mov
add
push
pop
out
out
cmp
leave
lds
divl
pop
rolb
inc
lods
push
ret
xchg
fimuls
psadbw
and
inc
clc
scas
and
sbb
inc
fstpl
mov
jp
dec
or
ljmp
dec
and
mov
jp
add
out
jmp
fdivl
mov
mov
loop
scas
int3
push
and
push
outsl
nop
fwait
in
aas
push
loop
loopne
add
mov
mov
repnz
fmull
push
into
inc
adc
add
sbbl
xor
and
push
lcall
gs
pop
xchg
mov
jo
in
scas
fidivl
add
pop
popf
mov
cli
or
mov
add
mov
das
mov
aas
pop
jp
scas
add
or
dec
gs
xchg
inc
dec
xor
orl
and
add
mov
mov
mov
or
adc
les
jns
push
xor
movsb
mov
mov
adc
or
xchg
push
inc
sbb
rcrb
adc
hlt
mov
xor
daa
lods
jecxz
outsb
mull
movsl
ficomps
push
out
ficoms
es
test
mov
test
cltd
xor
subl
loopne
loop
inc
inc
and
inc
jb
lret
faddl
pusha
sub
insl
das
xchg
push
dec
in
daa
fcomps
jl
xor
pop
sbb
cs
fwait
xchg
pop
jle
mov
xor
jg
or
mov
add
rol
dec
shrb
je
std
xchg
push
out
dec
stos
out
add
sbb
cmp
push
sbb
mov
sahf
in
sbbb
dec
movsl
xchg
decb
and
sbbl
sub
xchg
shll
loopne
sbb
or
sub
lods
ss
aas
lea
mov
stos
mov
add
fwait
push
pusha
in
call
adc
add
hlt
inc
mov
andb
test
gs
scas
xchg
imulb
adc
mov
stos
add
xor
subl
dec
into
popf
sbb
and
daa
dec
scas
pop
dec
daa
push
push
inc
in
push
sub
mov
cld
xlat
adc
outsl
push
add
mov
cwtl
sar
test
add
addr16
sbb
das
testb
jecxz
pop
add
pop
pop
fimuls
mov
stos
repz
add
shll
ret
arpl
inc
cmp
mov
jne
stc
out
jl
stc
push
stos
pop
cmp
jle
push
pop
mov
mov
and
adc
adc
cmp
mov
fwait
mov
sbb
mov
ljmp
dec
mov
sub
pop
out
jg
clc
mov
add
negl
popf
aaa
inc
jecxz
add
pushl
cmpsb
add
fwait
mov
mov
dec
pop
in
lea
inc
xlat
das
sub
cmc
mov
inc
xchg
pop
in
mov
mov
nop
jb
sbb
aam
dec
jns
enter
jg
and
not
and
sbb
pushl
dec
pop
cwtl
in
lret
addb
fldenv
and
jno
xchg
loop
pop
inc
jo
fwait
sub
adc
ja
test
or
je
aad
xor
add
mov
ret
into
mov
das
jbe
xchg
in
mov
sub
jecxz
mov
jecxz
cmp
jae
daa
jmp
mov
daa
leave
mov
dec
std
or
pop
bound
int
add
cmpl
add
inc
clc
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
rcpps
js
repz
hlt
sub
imul
movsb
jnp
or
cltd
push
clc
fdiv
xor
dec
push
adc
out
mov
mov
ret
and
and
insb
adc
push
add
jge
repz
xchg
mov
sub
mov
fisttps
cmc
ficomps
sub
inc
aad
fwait
mov
xchg
test
pop
push
lds
adc
fldt
pop
mov
xchg
lods
lahf
mov
add
movsb
movsb
cltd
sbb
in
xor
or
pop
xor
mov
nop
dec
arpl
in
or
xchg
push
lcall
xor
cmp
daa
pop
loope
loopne
and
ffreep
mov
jecxz
jmp
pop
test
cmpsl
pop
repz
stos
dec
sbb
les
lods
gs
xor
stos
negl
jmp
and
push
xchg
inc
mov
add
outsb
or
xchg
mov
xchg
xor
push
sbb
cmp
fcompl
inc
ss
sbb
xchg
and
insb
lods
and
addr16
test
ljmp
pop
inc
out
stos
xchg
cmp
iret
and
add
pop
dec
or
mov
stc
testb
add
bound
popa
sarb
push
aas
lock
sbb
push
test
inc
push
add
push
and
sub
clc
adc
mov
adc
int3
cmp
test
loop
inc
add
sub
mov
out
lock
push
jmp
mov
ret
mov
cmp
mov
scas
outsb
mov
ja
loop
xchg
mov
cmp
mov
xchg
leave
adc
sub
jl
fidivs
aam
dec
pop
dec
and
add
mov
dec
push
fmull
xchg
enter
cli
jg
sbb
mov
mov
xchg
aad
push
data16
mov
mov
jbe
jp
movsl
lods
addr16
scas
mov
movsl
stos
cmc
mov
out
mov
jl
cmp
insl
repz
mov
ffreep
pop
sbb
mov
sahf
sbb
lds
inc
and
or
mov
adc
xorb
inc
inc
popl
pusha
mov
inc
lods
pushf
adc
mov
ds
imul
lret
enter
fildll
rolb
cwtl
xchg
or
dec
or
shlb
repnz
ja
into
xor
push
cmp
arpl
jb
movsl
mov
pop
xor
inc
jo
push
dec
inc
divb
imul
mov
orl
mov
out
mov
outsb
jmp
fists
inc
xchg
and
mov
jmp
push
int3
cmp
int
pusha
jne
mov
sub
testb
outsl
jbe
jg
out
jecxz
int
stc
add
test
pushf
mov
shlb
push
pop
lods
sbb
push
fdivrs
das
addr16
dec
mov
in
push
push
add
repnz
mov
insb
xchg
arpl
sahf
pop
pop
cld
sbb
mov
insl
cmc
and
cltd
jmp
shll
jb
dec
in
push
mov
inc
adc
adc
xor
test
xor
popa
bound
ja
mov
sbbl
shl
cmp
or
lret
clc
movsb
out
aaa
push
int
aad
ss
mov
aaa
and
call
xchg
punpckldq
push
mov
mov
fwait
cli
test
into
cmc
inc
sti
repnz
iret
and
repz
jg
out
imul
sub
mov
cmpl
les
ja
push
mov
push
fnsave
push
and
imul
scas
lahf
test
aad
lret
and
jns
fwait
cmp
lahf
jp
out
scas
les
cmpsb
popa
mov
das
js
xor
hlt
jge
rol
adc
mov
in
sti
mov
jl
lock
jmp
je
xor
xchg
mov
adc
imull
ret
mov
test
loope
push
xchg
ret
sbb
in
or
scas
repz
push
push
fisubs
insl
mov
adc
imul
mov
jg
rcrb
mov
mov
mov
and
or
mov
pop
mov
cmp
rclb
and
push
xchg
inc
cli
push
adc
mov
pop
push
shlb
push
mov
cmp
dec
push
xchg
mov
push
and
sub
inc
ds
call
scas
inc
sbb
into
lret
push
adc
xor
sti
dec
xchg
fcomps
lahf
mov
loopne
test
pop
push
outsl
xor
mov
scas
test
scas
xor
mov
and
insl
pop
pop
adc
addr16
mov
sub
ss
sub
adc
push
adc
js
into
push
mov
and
notb
xlat
test
pop
jle
into
cmp
pusha
inc
sbb
pop
dec
inc
shlb
shrl
fidivs
jg
gs
mov
out
xchg
pusha
and
int3
ljmp
push
lahf
add
aaa
sbb
mov
dec
movsb
shl
mov
mov
mov
test
into
cmp
out
sub
imul
data16
bound
jle
test
mov
push
test
aas
jo
xchg
addr16
bound
lret
into
loopne
leave
out
scas
pop
pop
or
sti
fiadds
adc
fstpl
mov
in
mov
jp
push
inc
leave
sub
je
lret
xchg
push
in
push
push
pop
jge
pushf
add
pop
mov
and
sti
stos
xlat
popa
or
add
popa
out
pop
and
push
in
rolb
fbld
jo
mov
arpl
ljmp
in
decl
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
test
inc
invd
add
rdmsr
dec
mov
push
xchg
test
jg
cwtl
mov
fldcw
sarb
sub
or
inc
add
mov
or
bound
movsl
mov
pop
cld
xchg
aam
xor
pop
adc
adcl
leave
xchg
xor
cmp
std
bound
push
mov
push
or
dec
stos
cwtl
mov
pop
jo
pop
dec
xchg
fisubrs
mov
ss
rolb
aad
sbb
aas
lret
mov
mov
jbe
insl
ret
xchg
repnz
inc
jbe
inc
pop
ljmp
cltd
adc
mov
xchg
cmpsb
jne
push
inc
fwait
test
lret
cmp
incb
jg
adcl
jmp
imul
call
adcb
les
enter
loop
imul
sbb
sarl
xor
imul
das
gs
jns
fisubs
movsl
xchg
mov
out
cmp
cmpsb
push
ficoms
js
xor
push
sti
xor
pop
xchg
mov
sbb
pop
mov
xor
orb
inc
out
mov
mov
and
cmp
sub
test
jmp
sti
inc
cli
les
adc
rcrl
leave
mov
sub
jnp
ret
adc
or
fcomip
addr16
int3
xor
cltd
ja
arpl
xor
dec
loop
outsb
push
std
xchg
lret
push
xor
jno
jecxz
mov
xor
lods
inc
aam
adc
test
sbb
pop
adc
or
lcall
inc
mov
out
xchg
or
out
sbb
jmp
into
outsb
cli
std
push
xor
add
jne
out
mov
addb
mov
int
sbb
dec
push
pop
fists
adc
mov
and
imul
xchg
cltd
out
fs
mov
adcl
bound
mov
lods
sub
sbb
pop
xor
xchg
pop
mov
rcll
mov
test
shll
in
nop
cmc
mov
add
dec
and
dec
pop
jo
cli
sub
ficomps
mov
jle
lret
push
dec
imul
imul
cmc
cmp
adc
in
sbb
or
add
subb
xchg
movsl
push
mov
inc
jne
stos
pop
ja
mov
cli
cmp
mull
jae
push
add
lods
daa
bound
mov
jmp
jo
cmp
lcall
dec
jb
jg
add
int3
nop
sub
fisubrs
cmp
lds
shrb
test
xchg
dec
loopne
sub
pop
or
pop
inc
insb
test
mov
dec
pop
xchg
push
cwtl
cmp
dec
pop
stc
xchg
cwtl
dec
sbb
bound
iret
ljmp
mov
enter
mov
mov
adc
mov
mov
lcall
test
xor
add
cmp
repnz
lahf
inc
and
popa
cwtl
pusha
repnz
mov
in
popa
repz
mov
push
outsl
hlt
mov
push
add
test
ljmp
gs
lahf
push
sub
add
adc
mov
jbe
shll
sbb
movsb
outsb
jae
out
and
sub
out
sbb
repnz
repnz
jp
mov
scas
daa
lret
cmp
adc
fisubrl
pop
or
push
lds
add
mov
pop
pop
jp
inc
fists
shl
js
xor
loop
sbb
enter
xchg
push
icebp
jae
arpl
popf
rolb
cmp
jmp
test
outsl
jne
dec
call
inc
std
ficoms
xchg
int
nop
mov
and
jle
mov
pop
and
int
dec
imul
rorb
rorl
cmp
jns
and
inc
shrl
fcomps
push
inc
sbb
lcall
dec
pop
je
dec
lea
insl
xchg
adc
pop
ret
mov
fmuls
jp
sub
or
or
inc
and
mov
or
xchg
pop
imul
enter
out
jecxz
lcall
hlt
insb
and
cmpsb
dec
insb
cmp
inc
stos
shl
pop
repnz
icebp
inc
stos
jecxz
icebp
add
jo
imul
scas
mov
sbb
nop
pop
pushf
push
xor
outsl
in
inc
pusha
xor
ss
cltd
jno
jl
mov
push
and
jns
aaa
stos
sbb
sahf
add
mov
aad
rorb
sahf
adc
mov
jg
movsl
ret
adc
daa
mov
jno
adc
push
sbb
scas
rclb
and
dec
scas
stc
hlt
push
xor
push
cmp
clc
jecxz
add
jp
fmull
jns
mov
cmc
or
jb
fisttps
or
loopne
arpl
and
xor
push
orl
xchg
shrl
jne
in
push
int3
mov
pop
cmc
or
lahf
test
inc
mov
jle
pop
cltd
mov
inc
xchg
lahf
lret
mov
cmp
adc
dec
stc
jno
cmp
xor
incb
xor
in
jno
ljmp
shlb
xchg
pop
pop
mov
pop
inc
ss
lea
pop
seto
nop
pop
sbb
xlat
xlat
mov
jbe
and
push
rclb
shll
cmp
xor
insb
sub
jmp
cli
jno
add
or
dec
addr16
and
fidivs
xor
mov
push
xchg
ljmp
addb
xor
mov
xchg
mov
xor
orb
jg
sbbl
outsb
add
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
mov
and
xchg
mov
mov
idivl
mov
push
inc
cmp
lds
cmpsl
push
add
xor
xchg
push
and
mov
je
stos
dec
stc
int
lds
xchg
lret
sti
push
mov
movsl
aam
and
mov
fildll
push
inc
int3
mov
jg
lcall
cmp
nop
pop
scas
out
jb
test
push
lods
leave
or
adc
xor
xor
test
out
fdivs
pushl
inc
cmp
inc
sbb
arpl
in
fucomip
shrb
sub
add
mov
jns
pop
add
fsubl
fldenv
push
movsl
cmp
lods
out
sti
mov
xor
pop
sbb
inc
add
mov
in
hlt
inc
mov
lahf
cmp
insl
std
in
std
pop
in
lret
negl
lods
or
lods
sub
xchg
lahf
pushf
rcr
sbb
pop
mov
daa
fsubrl
push
cli
addr16
jae
or
test
enter
pop
pusha
push
sub
imul
add
jp
or
push
testl
lret
sub
dec
mov
xor
jmp
das
push
iret
jecxz
ret
aas
xor
jecxz
sbb
sbb
loop
shrb
in
stos
test
sub
mov
loope
jbe
fwait
stos
scas
into
cmp
stos
jecxz
or
mov
sahf
pop
ss
psubw
and
xor
jae
in
xchg
ret
adc
imul
decb
push
int3
negl
jb
sbb
mov
mov
iret
cmp
push
iret
lds
fmuls
scas
or
in
es
cmp
scas
mov
fadd
hlt
push
and
inc
int
mov
dec
loop
dec
mov
cmpsb
lea
mov
es
out
cli
push
push
sahf
inc
xchg
lahf
stc
jne
xchg
jge
lea
mov
popf
in
inc
xor
fiadds
ja
or
out
nop
pop
daa
add
add
xchg
loopne
fistl
mov
mov
push
adcl
jne
mov
mov
sti
movsl
adc
mov
push
pop
dec
test
inc
mov
inc
in
aam
stc
loope
fidivl
add
in
daa
jmp
jno
add
cmp
and
data16
in
popl
and
push
les
test
bound
cmp
sub
jo
fstpt
cmpsb
sub
aaa
lret
dec
rolb
xchg
cmp
xchg
mov
dec
shrb
mov
aam
test
jno
loop
pop
lea
scas
lds
out
adc
out
dec
xchg
xchg
inc
fs
div
hlt
mov
in
sub
rep
mov
xchg
imul
dec
push
jnp
pop
fsubr
mov
jecxz
dec
pop
popl
sub
lahf
outsl
int3
fdivl
mov
test
cmp
and
cli
and
test
mov
cs
ret
mov
imul
cmpsl
or
dec
movl
enter
cltd
sbb
xchg
loope
pop
dec
mov
scas
das
xor
push
pop
sbb
ljmp
fisubs
enter
popa
dec
inc
fld
mov
push
cmp
aaa
lret
jp
pop
xchg
jmp
cmp
lds
icebp
pop
fwait
push
and
shlb
pop
and
les
movsb
xor
call
or
adc
imul
or
sub
push
mov
hlt
push
sbb
lahf
xchg
scas
fwait
mov
stos
pop
push
fldcw
stc
in
mov
pop
das
sub
adc
adc
nop
fisttpll
xchg
inc
pushf
jge
sub
and
mov
xchg
pop
bound
mov
sbb
pop
or
mov
popa
stos
inc
negb
ret
dec
mov
mov
fnstenv
sbb
dec
ss
pusha
push
push
mov
xor
xchg
ja
fldenv
aad
cmpb
dec
dec
sbbl
jne
push
push
xchg
pop
sarb
loope
inc
in
mov
cwtl
pop
and
shll
xchg
test
lret
push
xchg
fwait
sub
lods
cmp
leave
pusha
mov
addl
cmpsl
pop
dec
into
adc
inc
leave
push
sahf
cmp
stc
mov
std
movsb
mov
hlt
push
les
or
andl
xchg
addb
push
das
and
mov
cmp
cs
js
push
xor
sub
fwait
outsl
and
ret
shr
fisttps
mov
shlb
pop
dec
call
xor
xchg
sbb
push
sarl
dec
mov
dec
cmp
and
push
pop
fsubl
jb
dec
sbb
dec
pop
mov
mov
fimull
pushf
call
std
sbb
test
adc
ljmp
mov
xchg
shrb
rcl
nop
enter
xchg
xchg
jle
sbb
pop
movb
cmp
adc
mov
scas
lret
pop
lock
lcall
dec
popf
or
cmp
jg
mov
xchg
push
movsl
pop
sub
lods
out
dec
out
xchg
push
stc
inc
addr16
push
dec
add
scas
jmp
es
sti
arpl
lods
aam
push
xchg
adc
jmp
pop
fidivrs
inc
fstpt
cmp
cmpl
mov
lea
inc
xchg
push
dec
shl
push
test
insl
dec
dec
xchg
enter
cmp
jle
outsl
out
add
in
aaa
lahf
js
inc
mov
test
ss
es
insb
add
pop
inc
addr16
lret
icebp
pop
sub
inc
shll
pop
insb
mov
les
stos
jns
jo
mov
xor
sub
xlat
inc
inc
repz
into
push
scas
fsubrs
dec
ror
xchg
dec
enter
dec
push
in
or
ja
mov
inc
add
into
inc
pop
pop
dec
popf
movsl
arpl
push
sub
mov
imul
jmp
notl
cmp
stos
mov
insb
out
repnz
sub
stc
xchg
sbbl
sub
jae
sub
leave
lret
loop
mov
jnp
mov
imul
addr16
lods
gs
push
dec
sub
inc
test
stos
or
mov
pop
push
fstl
js
addr16
xchg
lahf
or
and
jbe
in
cmp
rcrl
jno
xchg
jmp
lahf
pop
sub
popa
dec
jg
xchg
arpl
out
sbb
aam
mov
outsl
adc
inc
inc
das
pop
imul
inc
mov
pusha
push
gs
inc
stos
xor
sub
dec
inc
and
das
enter
inc
call
jp
lcall
stos
imul
inc
push
cwtl
mov
pop
xor
in
imul
mov
pop
stos
push
mov
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
xchg
sbb
mov
mov
sub
mov
daa
dec
push
lock
adc
adc
in
mov
jg
xor
mov
je
pop
push
add
mov
inc
jmp
ret
outsb
pop
dec
enter
push
jcxz
adc
pop
jle
xchg
lea
dec
push
out
mov
cmpsb
or
insb
das
loopne
or
pusha
ja
xor
xchg
pop
mov
xor
mov
test
cmova
mov
sar
lods
shlb
sub
adc
mov
cmpsb
jge
or
aaa
or
cmp
movsl
push
repnz
stos
push
cltd
pop
pop
out
into
cmpsb
mov
jne
sub
mov
push
lea
inc
adc
or
or
popa
pop
lahf
mov
push
add
lds
jbe
aas
cwtl
repz
mov
sti
aas
xchg
push
fcoml
and
pop
das
jno
sti
mov
lods
jno
hlt
pop
cld
push
adc
cmp
add
lods
jns
mov
jl
mov
loope
pop
test
mov
jne
andl
pushf
call
inc
movsl
call
pop
fnsaves
xchg
into
adc
int
xor
inc
mov
add
jg
les
sbb
cmp
inc
pusha
fistps
add
add
jmp
pop
dec
jb
add
fs
call
das
std
js
add
out
pop
push
xchg
mov
fstpt
xlat
repz
lahf
jge
gs
stc
test
dec
subl
cmc
adc
aam
xor
lahf
and
ror
adc
addb
aad
dec
outsl
or
cmp
adc
inc
jb
lods
stc
adc
lds
cli
sbb
jmp
sbb
add
movsb
dec
jl
mov
mov
and
and
sbb
mov
in
cmpsl
clc
imul
out
out
insl
jle
cmp
out
imul
mov
sub
inc
push
test
daa
movsl
push
cmp
mov
imul
xchg
aaa
and
test
pusha
movsl
inc
jecxz
xchg
lret
xor
xchg
xchg
mov
sbb
inc
das
filds
std
jns
mov
add
insl
rcrb
jg
mov
lods
sbb
arpl
inc
fstpl
gs
mov
fcmovnb
mull
shrb
sub
popf
and
dec
gs
or
xorb
add
mov
sti
lods
imul
xchg
pop
scas
cltd
cmp
push
mov
sahf
cmp
loope
scas
pop
add
repz
arpl
stos
shrl
jne
cwtl
cs
xchg
test
pushf
fsubrl
cmp
imul
nop
insb
sbb
out
nop
ja
negb
int3
stc
popa
les
mov
mov
add
push
clc
addb
mov
aad
cmc
xor
mov
lock
and
shl
ljmp
das
mov
mov
pushf
sbb
mov
insl
shrl
mov
in
and
mov
inc
sub
or
addb
adc
lock
fwait
mov
loope
mov
jp
rcrl
jg
js
add
adc
pusha
push
xchg
hlt
shrl
clc
insb
push
test
subb
into
and
inc
jg
fisttpll
cmp
popa
stos
gs
icebp
add
ds
push
jecxz
inc
inc
cmp
call
subb
mov
fmuls
or
dec
xchg
fs
xchg
xchg
fs
outsb
fdivl
aas
cli
pop
sub
cwtl
cld
push
rorb
les
inc
adc
stos
addb
jmp
mov
xchg
ljmp
or
jno
cmp
xor
sti
in
push
sbb
in
or
xchg
push
mov
pop
mov
push
lahf
xchg
dec
mov
negb
cmc
mov
ret
cmp
jae
test
and
xor
mov
lods
in
adc
xor
fmul
loope
shl
inc
xor
rclb
push
mov
xchg
int3
jp
andl
aaa
sbb
in
movsb
cld
gs
xchg
xchg
cmc
push
aas
ror
mov
or
clc
adc
lahf
notl
ljmp
outsb
jp
enter
stos
xchg
mov
and
xor
inc
dec
sub
ds
cmp
inc
imul
js
fsubrs
and
add
addr16
adc
xchg
shll
lods
adc
mov
cmp
fmuls
sti
jns
fucomip
clc
fsubl
out
lahf
and
sub
jb
cmc
mov
adc
add
loopne
adc
dec
adc
rolb
clc
fst
out
sbb
dec
push
xchg
sub
int
mov
and
jp
add
add
push
pop
jecxz
fnsave
cwtl
and
mov
jae
sub
add
xchg
in
dec
jns
adc
cmp
inc
in
mov
push
xchg
nop
adc
push
lds
or
ss
ret
fdivrs
int3
punpckhdq
push
add
js
test
push
mov
or
scas
mov
mov
jmp
or
aaa
rep
xchg
lods
jno
ret
icebp
fwait
mov
pop
fsubr
inc
hlt
clc
aam
xchg
hlt
es
push
mov
cmpsl
in
ljmp
jmp
stos
stos
inc
fiaddl
mov
fcoml
ja
out
lret
pop
inc
sub
popf
add
popa
aaa
or
fcompl
dec
cld
mov
popa
leave
jb
imul
fdiv
das
jns
mov
xchg
jb
or
push
int
ja
sbb
dec
loope
notl
out
jecxz
and
loop
lods
andl
in
dec
jb
jle
xor
cwtl
inc
cmc
fxch
xor
mov
pop
cld
and
sbb
repnz
or
js
dec
mov
aas
mov
sar
cmp
aam
mov
dec
in
lea
int
mov
out
outsl
push
mov
mov
dec
loopne
cwtl
and
outsl
or
sbb
xchg
jecxz
sbb
pop
inc
shl
std
cmpsb
mov
jg
push
jnp
test
adc
pop
fimull
jae
repz
jbe
xorl
mov
ja
and
mov
out
fwait
repnz
sahf
div
movsb
mov
sub
cli
mov
lahf
pop
jle
xchg
xor
rcrl
pop
or
xchg
cmp
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
dec
sub
pop
pop
mov
pswapd
push
sub
out
je
xchg
dec
and
pop
cmp
mov
out
testb
mov
pop
sub
call
pop
sub
sti
in
stos
adc
repnz
and
jnp
outsb
cmp
push
mov
decb
push
jb
push
adc
jb
cmp
cmp
jne
dec
adc
sbbb
pop
push
jo
xchg
jg
test
addr16
stc
jbe
in
push
pop
fwait
in
mov
xor
mov
std
sahf
stos
pop
or
loop
adc
push
xor
pop
push
sub
out
adc
les
mov
cmp
das
sbb
pushf
aam
shll
pop
add
sbb
push
stc
and
out
daa
jne
fbld
push
ja
push
and
rcrb
clc
test
jle
adc
pop
mov
push
push
stc
xchg
clc
sar
jmp
cltd
sbb
push
test
xor
fstpl
mov
es
lds
adc
cli
daa
jle
xor
mov
inc
jns
pop
pop
popf
cld
fisubrs
inc
dec
loope
test
mov
movsw
into
fsts
ja
jg
cmc
icebp
xchg
jns
mov
cmp
mov
inc
aas
in
adc
and
cli
jmp
cmpsl
les
ret
push
movsb
jle
filds
fdivrl
mov
mov
sarl
jb
push
out
pop
inc
cmpsl
push
cli
sub
xchg
xor
xchg
dec
inc
cmp
push
mov
imul
sbb
and
lods
xchg
or
mov
cmp
leave
xchg
jne
out
ja
aaa
orl
ret
add
sbb
divl
stos
lret
ja
dec
js
fucomp
testl
mov
pop
adc
mov
movsl
addr16
pop
repnz
lods
adc
cld
xchg
out
cli
jg
loopne
sbb
lods
dec
dec
dec
or
adc
and
roll
and
sub
pop
pop
gs
and
roll
sub
mov
pop
sub
sub
sti
je
iret
pop
rcll
out
dec
lea
out
cld
rcl
adc
pop
outsb
and
jge
jae
pop
iret
pop
icebp
xlat
mov
inc
sbb
sbb
mov
stc
pop
fisubl
jno
ss
add
fstpl
cli
ficoml
pop
stos
inc
jp
push
fdivrs
and
in
xchg
cmc
movsl
jmp
cld
adc
scas
inc
and
dec
push
fldcw
and
arpl
int3
adc
addb
stc
inc
leave
mov
and
push
cltd
sahf
out
xchg
in
jo
lcall
insb
add
dec
or
adc
push
popa
dec
pop
lds
or
std
add
out
mov
cs
xchg
scas
mov
outsl
enter
xor
cmp
roll
shrl
jne
adc
fisubl
push
jecxz
jp
fcoms
jae
add
cmp
ret
popa
push
cmp
adc
lahf
xchg
sbb
add
aad
sbb
mov
fadds
fnsave
mov
push
sbb
xchg
mov
and
stc
je
leave
loope
xchg
adc
sub
inc
mov
mov
jge
arpl
movsl
xor
mov
dec
xor
and
add
dec
jmp
or
int
or
and
xchg
and
test
gs
xlat
outsl
adc
push
repnz
xchg
or
and
aas
jle
jnp
ljmp
xchg
mov
neg
sbbl
mov
pop
mov
mov
inc
je
rorl
je
dec
call
jg
xchg
shl
mov
lret
fwait
rcrl
fs
or
in
pop
adc
pop
jns
jp
pop
mov
sub
dec
fisubrs
xor
test
push
jo
sahf
ret
or
test
xlat
mov
mov
fisttps
push
mov
lret
pop
xchg
and
jle
jp
jg
add
sbb
lret
bound
movsl
pop
cmp
std
add
fcmovb
repnz
ljmp
lret
add
int
push
jns
jmp
xor
dec
jmp
jp
xorb
jecxz
mov
or
or
dec
xor
pop
pop
and
les
cmpb
add
pop
adc
jle
clc
fs
fiaddl
mov
stos
in
sbbl
mov
mov
nop
cmp
in
test
mov
xchg
ljmp
aaa
and
xor
sub
out
sti
ret
push
aas
jno
xchg
push
repz
xacquire
sahf
std
mov
test
push
or
adc
sbb
loop
add
ljmp
in
mov
add
jl
rorl
jge
insb
call
dec
clc
into
mov
aaa
test
ja
outsl
pop
je
icebp
leave
dec
stos
lock
scas
dec
fdivs
jl
lds
out
cld
and
leave
in
lret
fcoms
out
fimuls
jns
add
add
jno
scas
mov
push
stc
push
scas
cmp
inc
and
xorb
pop
lock
rolb
aad
mov
ljmp
push
in
pop
xchg
addr16
and
outsb
pop
adc
inc
dec
lods
outsb
jb
mov
add
shlb
dec
xchg
and
push
fs
pop
movsb
addb
or
fs
dec
sahf
nop
daa
mov
mov
js
notb
xor
xchg
adc
cmp
cmc
mov
inc
popl
adc
push
xor
mov
es
ret
sti
out
mov
push
incl
or
cwtl
sbb
cmp
ja
or
pop
data16
cli
daa
jg
jp
lods
int
popa
and
xlat
push
push
push
popf
mov
nop
out
add
push
dec
jecxz
cmp
fsts
out
mov
insb
ljmp
mov
pusha
pop
cltd
loopne
mov
fildll
sub
adc
mov
adc
cmp
mov
mov
xor
sub
sub
popa
scas
inc
and
sbb
jae
and
imul
aad
xor
movsb
add
inc
jle
dec
cwtl
inc
aas
andl
add
xchg
lahf
sbb
pusha
cmc
neg
rcrl
lret
addr16
jecxz
mov
sub
adc
jmp
into
add
or
scas
xor
adc
and
mov
inc
std
jmp
add
test
addr16
loop
int3
enter
loope
inc
scas
jl
movsb
mov
scas
sarl
mov
push
jge
lea
xchg
adc
mov
cld
je
jne
dec
loop
sbb
inc
clc
mov
jae
adc
adc
inc
mov
sub
mov
jp
mov
add
scas
xchg
xchg
inc
sbbl
lods
and
loop
mov
sbbb
xchg
sbb
je
xchg
cmp
sarb
sub
jg
repz
inc
in
sbb
push
push
rcll
dec
or
ret
sub
ss
cmp
sbb
push
jp
xchg
push
std
js
sbb
mov
cmc
jecxz
mov
test
inc
jp
in
pushf
jno
test
mov
iret
sti
stos
mov
ss
arpl
enter
out
lods
shll
insb
and
push
jae
cli
stc
inc
push
mov
stos
cmp
xchg
std
jge
mov
and
sbb
pop
xchg
adc
inc
inc
fs
shll
loope
stos
cmp
nop
roll
adc
inc
mov
or
fldt
jbe
xchg
adc
add
inc
mov
sahf
inc
sbb
pushl
and
call
sbb
pop
inc
mov
int3
or
sahf
jbe
scas
mov
pop
inc
icebp
int
roll
sbb
cmc
pop
sbb
imul
push
ds
popa
push
inc
add
sub
mov
ds
cmp
dec
push
rcll
fs
mov
or
sarb
push
push
mov
xchg
shl
jne
loopne
testl
orl
nop
lock
outsl
and
mov
mov
adc
xchg
mov
outsl
push
cld
pop
leave
test
xchg
js
or
rcr
test
popa
popa
ljmp
cmc
sti
mov
nop
push
nop
mov
sub
rolb
mov
push
fsubs
aam
in
xchg
jge
fistl
dec
pop
daa
cmpsl
add
divl
leave
repz
es
imul
dec
repz
inc
xor
jne
testb
and
int
addl
push
iret
sahf
scas
loope
jnp
fcompl
fstp
xlat
and
push
cmp
lcall
xlat
pop
xor
and
pop
dec
cld
scas
cmp
mov
pop
mov
jp
in
push
pop
pop
cmc
into
push
out
inc
lret
test
cld
loopne
test
in
test
jg
pop
rclb
xor
cli
add
scas
jmp
inc
xlat
lret
pop
data16
pop
shl
nop
test
xchg
dec
paddq
dec
negb
sbb
xchg
out
push
popa
popf
fwait
xchg
adc
or
popa
jo
sbb
and
movsb
mov
mov
outsb
cmpsl
shll
mov
sti
and
cmpsl
jnp
pop
lret
cmp
lds
add
loope
push
xchg
dec
push
lock
scas
jmp
or
inc
adc
fwait
xor
jg
mov
rcl
push
cmpsl
cwtl
scas
inc
jle
xchg
daa
jns
and
roll
jmp
cltd
gs
int3
mov
and
xchg
les
push
mov
dec
js
hlt
lahf
mov
fildll
pushf
aas
and
sbb
popf
jp
mov
or
mov
lret
mov
and
pushf
fwait
mov
repz
leave
popa
repz
pop
jle
in
inc
jne
out
loop
cld
imul
jbe
shlb
gs
pop
outsb
xor
in
cmpl
sub
xor
and
xor
inc
and
and
inc
cmp
adc
mov
jge
mov
sahf
xchg
cwtl
dec
inc
adc
sbb
aam
ja
cmc
jge
das
mov
sbb
data16
push
dec
pop
mov
pop
fs
inc
xor
andl
out
dec
pop
mov
out
mov
pop
xlat
adc
push
cmp
mov
jmp
pop
hlt
imul
or
shl
sbb
outsb
mov
or
adc
sbb
adc
cmpsl
dec
jnp
nop
sbb
repnz
int3
out
test
jne
push
gs
xor
scas
xchg
mov
mov
nop
mov
cmp
fsubrl
arpl
pusha
aam
outsb
add
inc
jecxz
jge
pavgb
test
out
xchg
iret
mov
xor
jl
adc
adc
mov
hlt
adc
or
push
shrl
sbb
bound
notb
scas
mov
push
sbb
cmp
lahf
xchg
add
add
push
dec
sti
pop
push
and
mov
or
lea
iret
ror
je
fmuls
cld
mov
call
mov
mov
and
fnstcw
insl
in
sarb
stos
push
stos
mov
je
mov
fistpll
cmp
mov
out
mov
adc
lods
jl
nop
test
out
ret
mov
push
dec
inc
int3
and
inc
fcmove
inc
imul
add
add
orb
xchg
movsb
xchg
out
inc
mov
cwtl
add
adc
mov
or
ret
cmp
push
push
stc
jae
fcmovnb
pinsrw
push
outsl
mov
pop
mov
pop
mov
aam
mov
fs
jecxz
fs
sub
std
inc
adc
pop
mov
push
jo
cmpb
push
pop
push
fsts
testb
leave
mov
jnp
or
lcall
outsl
cmpsb
pop
push
jecxz
mov
imul
xor
out
adc
pop
cld
mov
sub
cwtl
mov
imul
pop
xor
mov
xor
pop
dec
sbb
outsl
iret
cmp
sti
int
xchg
jmp
cmp
out
xor
je
fucomp
dec
and
jl
adc
stos
dec
das
faddl
or
lods
add
mov
popa
mov
arpl
data16
repz
ja
jnp
ja
add
push
lcall
mov
and
int
gs
pop
loope
rclb
mov
or
leave
xchg
adc
jl
and
into
lahf
push
push
addr16
xor
and
cmc
xchg
insb
fldcw
adc
xor
dec
mov
fcoml
imul
dec
pop
dec
or
mov
adc
inc
and
mov
fs
cmpsl
sbb
fstpt
ljmp
hlt
in
jno
out
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
rcrl
daa
in
adc
and
scas
xor
test
out
sub
push
cmc
leave
pop
imul
cwtl
in
popa
xchg
outsb
das
lahf
fmul
out
test
push
xchg
and
lret
pop
lods
pop
push
stos
mov
mov
pop
popf
add
pop
add
mov
pop
stc
push
outsb
ret
lret
jne
or
push
ss
aas
inc
adc
mov
sub
jecxz
jle
jb
in
mov
mov
outsb
orl
jmp
out
xchg
push
push
movsl
scas
fildl
iret
je
inc
push
adc
les
mov
and
fld1
xchg
push
xlat
and
cmp
movsb
add
pop
js
test
pop
and
sub
scas
sahf
sub
jl
clc
push
je
imul
stos
and
leave
pushf
fcmove
sub
gs
orl
aam
or
xor
into
fs
dec
and
adc
mov
dec
push
les
inc
adc
outsl
push
sbb
inc
add
cmp
xor
cmpsl
xor
jo
mov
loope
int
inc
clc
aas
cmpl
jae
or
repnz
adc
xchg
insl
cmpsb
or
test
and
xor
adc
mov
xor
clc
sbb
rol
pop
pop
jne
int
shll
adc
or
inc
jns
push
mov
sbbl
jmp
pop
mov
jno
add
push
jo
pop
mov
mov
stos
jns
stos
or
sbb
shrb
mov
xor
vunpckhps
bound
scas
int3
mov
stos
lcall
lcall
xchg
test
inc
in
jmp
test
rorb
sbb
cmc
int3
lds
out
pop
gs
testl
sub
lods
inc
lahf
mov
sub
adc
fsub
jb
adc
mov
and
sti
pop
clc
frstor
mov
xor
cmp
and
inc
repz
in
cmp
mov
sub
sub
imulb
push
mov
cmpsb
test
mov
jne
mov
mov
dec
mov
icebp
lcall
xor
xchg
js
jp
inc
pop
inc
call
push
pop
jge
sbb
xor
push
imul
in
lods
fiadds
jno
mull
das
mov
adc
adc
int
push
daa
xchg
sbb
mov
cmp
mov
push
lahf
jmp
out
insl
dec
xchg
pop
scas
adc
inc
ss
pop
dec
sbb
rcrb
cld
jl
xchg
and
nop
push
pop
add
dec
mov
repnz
aad
sbb
mov
dec
int
mov
sub
gs
xchg
dec
dec
fiadds
inc
data16
sub
push
or
and
mov
orl
mov
inc
xchg
or
add
pop
test
push
sub
jge
adc
loopne
inc
adc
xor
sub
and
pop
stos
outsl
hlt
in
std
xor
xor
out
cmp
loopne
lcall
inc
or
cli
push
insl
lds
fcompl
in
dec
jb
or
or
or
pushl
idivb
sbb
sub
testb
sub
int
fsub
or
mov
dec
mov
cmp
pop
push
cmp
pop
jbe
push
into
push
sahf
and
inc
jmp
push
mov
insb
push
push
shlb
fwait
sbb
dec
push
shrb
dec
divl
ss
or
pop
jno
outsb
cmp
ljmp
nop
add
les
std
jge
sub
push
and
or
and
mov
movsl
in
int3
repz
int3
pop
cmp
test
push
add
cli
hlt
lahf
outsl
lock
shlb
decl
inc
push
int
pop
ja
ljmp
xchg
stc
jecxz
push
in
add
dec
push
mov
aaa
insb
mov
inc
pop
jle
ds
stc
mov
add
out
xor
imul
gs
jg
mov
pop
adc
adc
mov
test
iret
or
push
scas
scas
out
lahf
xlat
mov
leave
add
mov
jo
nop
mov
xor
sbb
outsl
pop
cmp
ljmp
imul
rcrl
aaa
xor
push
arpl
movsb
xchg
popf
out
mov
call
jp
dec
out
lods
ror
dec
fcos
pop
mov
jno
push
pop
loopne
sbb
pop
sub
outsl
cli
test
or
sbb
cli
dec
jnp
lds
addr16
out
mov
cmc
scas
pop
sbb
popf
mov
sbb
adc
fnstsw
repz
xor
adc
adc
ds
sets
xchg
push
stos
js
test
xor
mov
jno
sub
imul
aad
in
lret
ret
pop
sbb
ss
and
pop
fstpl
mov
mov
js
mov
dec
cmc
leave
sub
add
push
or
pop
test
outsb
testl
sub
jbe
and
add
sbb
mov
rcrb
imul
shrb
js
cmp
add
or
push
test
stos
in
mov
out
xchg
inc
push
xchg
or
fs
push
add
push
mov
les
mov
xlat
push
or
cs
lds
xchg
out
mov
mov
nop
adc
loopne
cmpsb
bnd
add
push
mov
lods
inc
daa
in
mov
movsb
push
mov
int
push
int3
mov
inc
and
cltd
and
rcr
sti
call
and
push
out
sub
aaa
enter
test
jns
dec
cmp
jecxz
fnstenv
fdiv
es
lea
cmp
shrl
pusha
or
jns
xor
fdivs
pop
cwtl
sbb
add
jle
sub
and
testl
dec
and
sbb
inc
lock
xchg
in
repnz
xorb
push
mov
sbb
xchg
fidivs
cmp
ret
sub
stos
cli
repnz
inc
shll
mov
cmpsb
mov
jle
ret
push
dec
out
addr16
sub
cmp
mov
pop
stos
cwtl
mov
push
and
pop
sub
sahf
in
lahf
jae
inc
inc
fadds
aad
repnz
lods
or
arpl
das
dec
test
xlat
push
sub
fcom
adc
mov
rolb
jmp
or
scas
insb
lock
fcomp
data16
mov
hlt
lea
adc
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
adc
dec
cmp
adc
and
jmp
and
push
xor
dec
gs
addr16
leave
out
mov
inc
pop
fdivl
ss
jmp
stc
xchg
shll
jmp
cltd
sbb
scas
imul
mov
lret
ret
sub
and
cmpsl
sbb
xorb
dec
and
mov
aam
push
pop
xchg
pop
sbb
insb
xchg
fs
push
mov
call
shlb
jecxz
mov
dec
or
ljmp
pop
inc
movsb
mov
push
mov
jne
call
lret
mov
popa
jo
inc
jge
movsb
bound
sub
inc
mov
or
mov
sbb
hlt
xchg
rcll
mov
roll
lods
imul
add
in
and
aad
jg
sub
shrl
je
jecxz
in
xchg
jb
out
or
push
sbb
sub
out
test
xor
movsb
out
pop
xchg
fs
pop
adc
sub
out
int
in
daa
lds
cli
jno
xchg
jecxz
in
fsubl
dec
mov
sahf
mov
stc
inc
out
adc
js
push
int3
int
push
sti
mov
movsl
jb
popf
out
rclb
push
pop
push
push
sub
jle
in
mov
lods
adc
fstpl
dec
outsl
push
add
mov
dec
insb
push
shrb
test
int3
movsb
and
xchg
out
lret
fisubrl
xchg
sub
stc
inc
daa
jg
imul
hlt
mov
fwait
sbb
clc
cmp
push
test
push
xchg
ja
xlat
movsb
rclb
xchg
loope
jae
or
or
repz
adc
sbb
mov
inc
mov
in
cmc
test
test
enter
sbb
lret
fs
scas
push
sbb
mov
push
out
sbb
inc
xor
add
lcall
adc
dec
adc
ss
dec
fwait
inc
push
test
inc
push
and
insl
jge
rcll
cld
out
sub
adc
xchg
aas
inc
aad
shrl
fstl
mov
inc
adc
aad
cmp
mov
dec
add
sub
in
enter
jo
outsl
iret
dec
fwait
bound
fcomps
add
mov
adc
push
ss
push
inc
jne
xor
jb
nop
insb
in
dec
ret
lock
pop
lock
loope
int3
push
mov
xor
sahf
add
lock
sahf
fs
rclb
xchg
xchg
mov
dec
and
push
repnz
push
push
outsl
push
fldcw
fdiv
aad
mov
test
loop
fsubrl
pop
aad
dec
push
adc
pop
and
cmp
lret
aad
ret
dec
adcb
push
add
shrb
sub
adc
test
pop
jl
div
lret
mov
push
js
pop
test
daa
pop
inc
jo
lock
add
sbb
je
xchg
stos
cld
inc
fidivl
adc
aaa
cmc
js
std
inc
shrb
imul
and
stc
dec
jnp
lahf
cmpsl
mov
pop
insb
push
mov
pop
dec
push
sub
testb
or
push
cs
rcll
loope
xchg
adc
ljmp
bound
int3
adc
js
pop
test
inc
pop
jns
out
xor
mov
ret
adc
mov
cmp
adc
fdivs
sbb
in
shlb
sub
xor
repnz
test
arpl
push
insl
lods
pop
push
aaa
in
outsl
loop
dec
enter
xor
mov
push
in
repnz
test
rclb
inc
adc
push
mov
inc
and
stos
ja
jge
loopne
inc
ret
fs
mov
into
int
sub
jnp
in
cli
sub
xor
and
xchg
xchg
jb
loope
mov
xor
dec
mov
jne
inc
lret
das
call
call
jo
bnd
inc
pop
add
fiadds
add
lods
inc
cmp
test
cmp
xchg
pop
push
out
aad
cmp
sbb
mov
jbe
imul
jle
fs
lahf
mov
in
imul
das
or
jge
mov
lret
xchg
mov
mov
mov
sbb
mov
cmp
lods
dec
popf
bound
lret
push
pop
or
pop
loope
outsb
xchg
jecxz
jbe
orb
sbb
aaa
leave
inc
xchg
cmpsb
adc
or
jns
jecxz
daa
jge
bound
pop
lret
sar
sub
sbb
jno
dec
fwait
mov
jecxz
mov
lcall
into
in
jecxz
dec
or
inc
movsl
inc
pop
hlt
repnz
cmp
cli
sbb
xchg
es
bound
mov
sbb
add
leave
inc
arpl
ja
lock
push
notl
xchg
sarb
pop
andl
mov
pop
fidivs
mov
adc
into
sub
popf
or
sub
and
mov
push
adc
jo
inc
lock
fwait
mov
mov
adc
int
cmc
jg
cli
fiaddl
add
mov
adc
jmp
mov
adc
jnp
test
int3
mov
push
ljmp
ficoml
push
dec
jns
jbe
lods
push
or
int
call
mov
inc
xchg
aaa
dec
pop
sub
cmp
add
lea
dec
cli
hlt
mov
not
xchg
jecxz
add
fdivp
popa
sub
adc
aaa
cmp
xlat
jae
push
int3
sti
add
insl
cmp
or
mov
xor
inc
rcrl
fstpl
arpl
and
xchg
cmp
add
jmp
pop
daa
ds
repnz
mov
cmp
out
jmp
cs
mov
xor
orb
xlat
insl
push
call
jl
test
push
adc
ret
jmp
aas
mov
movsl
pop
lahf
add
push
cmpsl
enter
aam
sub
and
inc
add
shl
nop
pop
lcall
lahf
xor
push
fsubrs
ror
jno
aam
rcrb
jns
and
dec
nop
inc
lret
cmovns
in
fcmovb
out
les
xchg
jnp
xchg
repz
movsb
inc
ret
in
ja
andb
inc
loop
sbbb
dec
jne
push
dec
cwtl
mov
inc
sarb
mov
sbbb
mov
scas
inc
iret
lods
xchg
scas
sub
xchg
loope
sahf
out
ja
push
cltd
push
ret
aad
fstpl
xchg
lock
mov
sahf
sbbl
and
add
adc
xor
insb
xchg
scas
stc
inc
out
lret
gs
rolb
or
jmp
cmc
xchg
cmp
push
mov
adc
dec
cmc
dec
inc
int3
adc
and
sbbb
mov
imul
negl
aad
roll
xchg
outsb
test
add
mov
icebp
cmp
lcall
pop
ss
jo
popf
subb
repz
fists
mov
jns
inc
sub
mov
vaddsd
mov
aas
lret
pop
lret
or
ret
mov
jbe
popf
push
mov
fcmovu
rorl
jg
cwtl
imul
popf
and
jge
jnp
out
ss
push
jp
cmpsb
std
not
add
adc
mull
repnz
nop
cmp
es
shll
fstpl
jae
dec
mov
pop
sub
repz
xorb
cmp
inc
dec
testl
das
push
adc
js
pushf
pop
dec
push
mov
xor
xchg
sbb
pusha
insb
xchg
add
cltd
or
lcall
adc
and
adc
push
movsl
inc
scas
jmp
cmpsl
pop
shll
cpuid
dec
pop
cs
push
repz
jb
mov
out
lds
loopne
mov
jmp
inc
lahf
jne
xor
cmp
clc
adc
mov
cltd
adc
xchg
cmpsb
pop
sub
popf
js
shlb
fbld
aam
ret
js
jb
ljmp
dec
ljmp
jae
lea
dec
nop
push
add
imulb
inc
push
push
inc
push
sub
out
repz
aaa
add
add
xlat
lods
mov
pop
adc
ljmp
cmc
cmp
enter
cmpsl
lret
in
jno
decl
or
pop
cmpsl
mov
xchg
and
test
pop
jl
shrb
test
mov
fildll
lcall
mov
xor
add
stos
jo
pop
inc
cwtl
sbb
push
shufps
jne
insl
enter
sti
mul
fs
add
jo
cmpsb
and
lcall
jl
pop
fwait
dec
mov
outsl
aas
dec
in
mov
aad
lods
mov
add
push
int3
test
fnstsw
test
ret
add
sbb
test
mov
sub
js
xlat
lods
rcrl
lds
mov
or
xor
add
or
push
add
ljmp
scas
insl
cwtl
jmp
push
out
aas
or
mov
shrl
pop
jno
idivl
pop
movsb
rcrl
les
cli
repz
mov
cmp
scas
xor
cmp
mov
cli
rcll
mov
push
push
mov
or
pop
mov
jo
aaa
jl
das
xchg
xlat
jmp
les
push
inc
push
leave
jo
cltd
insb
adc
ja
stos
es
int
aad
dec
dec
mull
leave
sub
sar
dec
dec
sub
lock
rol
add
xor
add
hlt
movsl
pop
mov
inc
jbe
xor
lock
loop
add
adc
movsb
push
dec
mov
cmp
lahf
xor
cmpb
xchg
icebp
add
xchg
hlt
in
aas
out
adc
shr
jg
ret
mov
push
or
loope
int3
mov
das
mov
nop
insl
sub
jecxz
dec
pop
jecxz
xchg
mov
adc
cwtl
int
ljmp
push
bound
jg
dec
push
or
sbb
cmpsb
jns
mov
sub
lock
testb
in
sbb
in
or
adc
sub
addl
ss
xor
mov
push
or
loop
data16
adc
fiaddl
imul
push
cmp
clc
gs
jae
lods
xor
js
outsl
fnsave
loope
cmp
mov
mov
push
movsl
cmp
es
dec
inc
dec
ret
mov
bound
mov
pop
frndint
fidivl
jge
ja
pop
fnstcw
out
arpl
loope
push
jmp
push
mov
enter
mov
or
jbe
inc
hlt
sbb
ret
or
test
out
mov
xor
pop
mov
push
jmp
clc
nop
push
jg
push
stc
xchg
jnp
fistps
pop
push
mov
pop
xlat
sub
shll
fidivs
or
jo
jmp
out
fs
call
mov
and
dec
push
enter
movsl
sbb
and
mov
cltd
mov
in
and
and
lcall
mov
popf
out
or
lods
pop
ror
jmp
and
sub
mov
mov
lock
rcr
push
mov
mov
xchg
mov
aas
imul
outsb
test
out
push
adcl
mov
leave
cmp
mov
xlat
jne
add
rorl
shrl
inc
push
negl
or
js
and
clc
adc
xchg
imul
xor
js
nop
adc
fisttps
sahf
test
and
mov
paddw
lds
jo
jle
jno
mov
xor
xor
fxam
aaa
add
add
jl
fdiv
adc
lds
xchg
xchg
mov
push
inc
or
les
rcr
or
fmuls
inc
adc
ja
xchg
insb
jnp
out
mov
test
or
add
bound
popa
mov
fistl
outsb
lods
xchg
test
jg
fsts
mov
cmp
lahf
inc
mov
push
inc
mov
iret
inc
leave
outsl
cmpsb
xchg
pop
cmpsl
and
data16
pop
jecxz
inc
pop
sub
and
insl
cmpsb
ficomps
inc
fists
lock
sbbb
cld
push
adc
pop
cmp
cmp
in
movsb
dec
or
int3
jae,pn
lret
aad
clc
add
fwait
adc
fbstp
inc
cld
add
dec
dec
sti
pop
or
clc
add
jmp
jae
push
inc
adcb
sbb
aas
in
inc
popa
das
inc
and
aam
xchg
sbb
xor
and
arpl
add
push
stc
int
or
and
dec
inc
xchg
lods
popa
jno
fwait
push
xlat
fldcw
int3
xor
jge
xchg
test
outsl
xchg
dec
les
fcmovb
imul
icebp
in
daa
fmul
inc
jmp
clc
and
les
mov
mov
test
jb
loope
mov
push
dec
mov
sub
mov
adcb
fisubl
pop
xchg
ret
jecxz
iret
mov
push
clc
movsl
jae
dec
movsb
cmc
stc
int
mov
mov
push
arpl
insb
fcmovnbe
pusha
add
das
ficoml
jae
sub
cli
mov
mov
lret
mov
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
pmaddwd
cmpsw
mov
jne
jne
jns
mov
and
sbb
icebp
stos
add
cmp
mov
lret
insb
mov
rolb
dec
fistpl
and
push
xchg
out
kortestb
mov
pop
dec
int3
push
mov
push
cs
shll
test
cmc
stos
push
aaa
jo
inc
mov
jl
pop
sbb
adc
inc
nop
mov
lods
mov
sub
mov
pop
jnp
mov
push
push
lret
shrl
lods
push
data16
cltd
xchg
mov
ss
mov
aaa
mov
mov
sub
test
outsb
mov
push
mov
movsl
mov
sarl
add
jbe
xor
ljmp
jl
mov
dec
add
jg
mov
pusha
lcall
jae
pop
xchg
sub
mov
test
imul
xchg
or
mov
fistpl
xchg
fmull
test
out
or
pop
lds
or
lret
push
xor
int
iret
test
xchg
and
pushf
fwait
decb
adc
sbb
jnp
sub
movsb
rcr
mov
inc
mov
int
and
mov
inc
imul
outsb
popf
lock
clc
sarb
rolb
or
aas
les
clc
inc
xchg
xchg
and
cmp
mov
sbb
and
xor
les
repz
adc
mov
nop
cmpl
cwtl
xlat
xchg
pop
mov
enter
aam
push
test
mov
mull
or
pop
gs
inc
ret
cs
test
cmp
push
js
mov
cmp
call
lret
dec
in
subl
add
bound
insb
sub
sti
insl
aam
sub
data16
lock
movsl
ds
lods
adc
add
nop
clc
repz
imul
fwait
lods
inc
push
dec
add
dec
sub
jmp
cmp
xchg
data16
leave
cmp
shll
pop
push
jae
lahf
into
rorl
xor
into
adc
lcall
xchg
mov
mov
inc
loopne
mov
dec
insb
jp
outsb
push
rcrl
push
shrb
push
das
push
push
add
sub
adc
and
ret
and
daa
and
pop
leave
mov
in
dec
insl
xor
call
test
or
js
inc
sbb
xchg
pushl
shll
loope
mov
mov
mov
dec
jmp
mov
popf
fstl
fnstenv
adc
popa
jg
inc
imul
insl
adc
mov
lret
movsb
add
add
sub
rcrb
std
pop
pop
test
nop
std
and
or
xor
sub
fistps
mov
pop
xchg
jle
push
mov
dec
in
arpl
fwait
rol
popf
adc
or
pop
mov
push
wrmsr
lret
inc
add
cmc
adc
insw
data16
inc
insl
xchg
cmp
ret
stos
aam
addr16
cwtl
xor
pop
repz
shl
push
pop
or
dec
in
or
mov
int3
push
das
add
inc
addr16
mov
sahf
cmpsl
subl
and
jb
xor
sbb
test
mov
jg
fdiv
add
xchg
int3
stos
adc
repnz
pop
fcmovb
mov
js
pop
insl
stc
jne
sbbb
lret
jl
add
inc
insb
fcmovnbe
cmp
adc
popa
mov
cmp
and
mov
sbb
push
mov
shrb
sti
in
testb
push
mov
mov
aad
mov
add
je
pop
fsubs
sub
pop
decl
fbstp
pop
cmp
pop
ret
popf
xchg
xchg
jo
sti
ss
inc
sti
pop
pushf
mov
incb
lods
inc
mov
jb
jmp
ret
outsb
cwtl
in
call
mov
mov
jmp
aaa
imul
mov
adc
mov
orb
mov
add
push
inc
lds
neg
pop
inc
lret
cmp
test
sub
loope
push
mov
xor
ret
out
dec
sub
mov
fisttpl
pop
in
sub
cltd
pop
adc
push
push
out
cli
inc
sub
xor
sbb
sahf
and
imul
sbb
cmp
jno
stos
mov
daa
push
imul
clc
ljmp
in
adc
add
sub
and
adcl
push
or
jl
pop
gs
mov
aam
sbb
adc
add
ja
aaa
dec
cmp
mov
pop
xor
dec
jbe
in
pop
xor
sbb
xlat
jp
cmp
mov
cwtl
lods
hlt
adcb
mov
mov
lret
sahf
imul
insl
test
sub
sub
and
xchg
cmpsb
push
jp
popf
ret
lret
insl
cmp
pop
mov
bound
adcl
in
shrl
and
pop
pop
and
push
cmp
stos
data16
cmp
movw
bound
pop
xchg
or
sbb
mov
mov
push
jbe
std
jae
adc
mov
clc
dec
cmp
cld
xchg
xchg
stos
mov
popa
mov
cmpsl
add
sbb
jmp
and
repz
inc
cmp
mov
or
imul
cmp
push
mov
fnstenv
je
push
mov
jnp
sbb
sbb
add
ljmp
mov
mov
add
fidivl
rcrl
adc
mov
fadd
cltd
movsb
call
mov
lret
rorl
adc
lret
out
out
xor
mov
mov
les
mov
cmpsl
adc
mov
jne
mov
mov
lds
std
mov
test
mov
pop
pop
jno
mov
push
or
jo
add
jne
push
mov
add
and
mov
aaa
repz
push
outsb
lahf
lods
lea
and
pop
sbb
lea
int
sbb
lret
cmp
in
mov
out
lods
fdivrs
imul
lret
aam
cld
je
decb
sub
sbb
sbb
out
fbstp
outsb
mov
ljmp
dec
in
dec
or
adc
sbb
push
dec
and
xchg
addr16
inc
adc
test
xchg
push
outsl
mov
or
icebp
mov
and
and
jmp
jne
add
subl
xchg
cmp
dec
addr16
and
cmpsl
ret
or
mov
fdivr
add
jnp
push
es
mov
xchg
mov
fwait
sbb
push
loope
mov
hlt
shl
bnd
or
bound
cmpsl
movsb
sbb
cmp
cmp
sbb
jl
rcrl
movsb
cld
bound
ja
fs
push
stos
inc
cmpsb
loopne
dec
mov
push
ficomps
inc
or
addr16
testl
sub
xchg
push
and
jbe
fwait
adc
clc
hlt
jb
sti
or
jmp
xchg
les
mov
mov
mov
push
pop
mov
xor
mov
mov
pop
fimull
cli
sub
sbb
cli
mov
js
mulb
js
test
in
pop
lock
pop
mov
xor
je
lret
inc
sbb
lea
pop
or
jns
in
sub
adc
les
sbb
je
lret
pusha
in
cmp
cmpsb
outsl
insb
pop
dec
add
imul
js
pop
jno
mov
in
jo
js
addl
jmp
lret
and
inc
cltd
xchg
mov
mov
dec
inc
fmull
jno
push
and
mov
inc
or
mov
inc
or
adc
push
push
pusha
pop
cltd
or
pop
push
test
popl
scas
mov
ret
adc
cs
int3
insl
push
or
mov
add
push
popf
cmpsl
mov
cmp
and
fnstsw
sbb
add
int
sbb
jl
inc
ds
adcb
imul
outsb
fimuls
and
cmpsl
xchg
and
int
nop
or
mov
jb
xchg
jo
mov
outsl
push
pushf
subl
dec
mov
movsl
push
mov
pushf
or
lods
jle
or
push
xor
js
loop
push
std
adcl
mov
call
mov
idivb
les
jo
sub
inc
cmp
mov
aam
scas
xor
icebp
lret
pushf
fs
xor
shll
mov
lret
jns
adc
and
in
push
pusha
mov
adc
in
daa
sub
outsb
xchg
sub
repz
sub
cmp
incl
into
sub
push
xchg
in
mov
mov
popa
scas
ja
pop
ds
dec
ja
pop
jb
sbb
and
inc
push
nop
flds
int
xchg
add
pop
lret
xor
decl
stc
sbbl
lret
jg
mov
mov
jnp
add
ret
dec
das
jb
push
inc
aas
in
push
movsl
inc
mov
mov
xchg
addb
lds
cwtl
sub
fldenv
add
inc
movsl
not
and
xchg
and
jne
push
cmp
and
repz
push
popf
test
or
je
mov
mov
inc
mov
xor
jecxz
ficomps
loopne
loop
sbb
or
test
jo
xchg
mov
sub
xchg
fsub
outsb
ffree
into
push
nop
in
cmp
push
fisttps
dec
jmp
jb
adc
jb
decb
hlt
and
and
xchg
loopne
and
mov
xor
inc
and
push
gs
inc
sub
mov
xorl
leave
xor
pop
cmovns
sbb
negl
cmp
adc
test
mov
mov
out
or
dec
cmc
lock
jmp
dec
xor
shrl
neg
sbb
lret
repnz
xor
stos
and
in
fildll
int
stc
movsl
mov
hlt
pop
jnp
cli
mov
movsl
or
mov
dec
jl
repz
lods
adc
leave
sarl
mov
cmp
jnp
xor
aas
and
rolb
mov
clc
and
in
test
or
ss
mov
stos
pop
xor
hlt
mov
fcmovne
sbb
lock
pushf
mov
mov
mov
inc
sar
js
jno
push
cmp
adc
fisttps
and
inc
lock
bndstx
addr16
cmp
mov
inc
jg
sbb
mov
test
jb
adc
test
mov
into
gs
out
fistps
fiaddl
mov
subl
adc
jecxz
dec
mov
adc
pop
xchg
loop
xchg
out
ret
cld
outsb
mov
test
pop
jb
roll
sub
cli
adc
adc
sarl
push
jl
aad
cld
adc
adc
filds
push
pop
sbb
scas
push
xor
pop
add
sti
inc
sub
or
fs
int3
ss
sti
cwtl
inc
xchg
in
adc
adc
mov
imul
push
mov
jne
ja
lcall
ja
rorl
adc
imulb
fisttpl
mov
dec
add
lods
pop
mov
or
xor
repnz
popf
and
fimull
bound
into
sti
fadds
dec
dec
push
adc
iret
shlb
and
cmc
jecxz
stos
mov
sub
xchg
mov
fisttpll
and
jbe
stos
lds
jp
xchg
cli
aas
mov
jecxz
fistpl
add
mov
inc
and
std
mov
jg
pop
or
inc
repnz
lcall
push
push
fsubs
lahf
mov
aad
mov
mov
roll
aad
sub
sub
fwait
jle
inc
xchg
cmp
ja
push
addb
jg
mov
jle
jns
mov
adc
mov
loop
ss
js
or
add
cmp
mov
movsb
ds
push
push
xor
in
fdivs
jne
xchg
xor
cltd
lahf
repnz
leave
icebp
xlat
add
shrb
shll
std
dec
in
sbb
dec
pusha
loope
or
in
repz
pop
mov
aad
ficomps
jle
xchg
clc
test
pop
cli
inc
add
out
nop
pop
loope
lds
lcall
jnp
pop
fsincos
inc
push
and
lcall
pop
xchg
jae
mov
push
pushf
fimuls
cld
sbb
jg
dec
ja
jg
sbb
jae
movsb
scas
and
xor
mov
jae
mov
and
or
aas
popf
scas
lds
ds
xchg
jno
je
in
mov
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
into
sbb
js
adc
and
mov
call
push
mov
idiv
xor
cltd
into
orl
sahf
sbb
loop
loop
loop
in
cld
push
push
int
lock
add
mov
cmc
mov
clc
pop
out
xchg
lret
xlat
es
ds
inc
push
or
fistpll
push
dec
cmp
test
sbb
jmp
mov
ja
in
xorb
insl
mov
loop
xchg
sbb
or
push
bound
pusha
pop
clc
ljmp
mov
cltd
sub
add
xchg
xor
repz
out
cltd
mov
pop
add
pushf
xlat
xor
xchg
mov
cld
push
icebp
xchg
mov
scas
je
dec
in
xor
jb
leave
ds
icebp
aad
mov
dec
mov
test
arpl
mov
cltd
xchg
or
jg
pop
test
das
sbb
adc
and
mov
dec
hlt
mov
push
js
dec
mov
scas
xor
shl
add
or
jns
out
cmp
fisubrl
jge
sub
enter
cmp
adc
dec
pop
rcrb
testl
jge
arpl
dec
mov
aam
mov
mov
lahf
inc
mov
and
repnz
mov
nop
mov
dec
scas
and
out
les
or
fisubrl
push
cmove
and
lods
inc
or
jns
stos
mov
xor
lret
lods
adc
xor
lcall
pop
out
lcall
sub
sub
int
gs
test
jns
dec
arpl
scas
negl
in
xchg
mov
mov
dec
push
inc
inc
dec
mov
jle
imul
inc
andl
ljmp
movsb
repnz
loopne
or
sbb
in
cmpb
cwtl
insb
pop
lea
inc
xchg
sti
xchg
sahf
mov
test
icebp
jge
bound
mov
jns
mov
lods
add
rcrl
mov
fadd
inc
add
dec
inc
sub
sub
in
push
or
test
mov
mov
in
pop
nop
jle
and
inc
push
ret
pop
fnstsw
jne
call
sub
cmc
das
mov
adc
fisttpl
mov
pop
push
or
mov
lea
je
sub
das
dec
mov
negb
sbb
jg
out
lcall
scas
test
test
stos
dec
dec
add
push
movl
and
movsl
cs
popf
dec
ljmp
mov
add
add
jb
mov
jp
and
imul
roll
xor
fs
pop
push
int3
mov
scas
es
jo
lock
and
mov
enter
ja
bound
in
loop
leave
outsb
sub
add
mov
xor
inc
dec
cwtl
test
pop
pop
dec
icebp
aaa
bound
sub
ficoms
movsb
stos
ret
inc
sbb
xchg
hlt
mov
das
testb
push
lea
push
subb
stos
ret
rorb
add
mov
cltd
pop
add
loop
xlat
pop
push
adc
jg
push
cmpsb
jmp
mov
fisubl
or
sub
push
push
roll
sub
imul
repz
mov
pop
imul
or
mov
mov
and
hlt
xchg
mov
outsb
shll
icebp
ss
ss
jns
sub
mov
lea
les
outsl
cmp
pcmpgtd
ret
leave
jae
leave
insl
test
push
aam
lret
push
mov
daa
fstpl
lret
outsb
fwait
imul
add
test
popf
out
mov
call
jp
pop
mov
xchg
adc
das
loope
outsb
imulb
push
fmull
aaa
imul
inc
adc
das
sub
inc
decl
fnstsw
fcomps
dec
in
out
ljmp
mov
jg
and
fdiv
fcoml
out
pop
or
push
dec
popa
mov
cli
lahf
mov
mov
test
cld
lahf
stos
idivb
dec
inc
or
cli
cmp
out
fldcw
jbe
mov
add
aad
mov
inc
jae
outsl
aaa
cmp
push
addb
mov
lret
dec
xchg
dec
xchg
jmp
add
lret
ljmp
cmp
cmc
int
sub
je
insb
stos
sub
inc
psllw
inc
dec
lea
bnd
xor
das
mov
imul
push
xor
jecxz
pusha
add
sti
pop
mov
gs
rcr
fwait
jb
cltd
inc
icebp
and
sub
repnz
mov
jle
push
pop
dec
or
sbb
mov
hlt
bound
push
dec
stc
jl
dec
and
add
int3
push
stos
xchg
jns
incl
mov
jge
scas
inc
mov
test
jecxz
jns
inc
xorb
daa
in
mov
pop
dec
ret
rcr
loopne
push
xlat
out
push
enter
out
inc
pushf
or
mov
push
cmp
rorb
lods
jg
lods
dec
bound
lea
jne,pt
ljmp
cs
push
call
jbe
xchg
sub
test
xchg
aaa
movsb
addr16
or
pop
adc
push
jnp
xchg
lods
lahf
int
adc
pushf
sbb
dec
aam
push
dec
in
daa
mov
sub
movsl
mov
add
inc
mov
pop
add
mov
add
push
fucomip
add
inc
cmp
ficomps
adc
mov
popf
ja
dec
sbb
adc
mov
xchg
stc
inc
lods
int
ss
inc
mov
imul
mov
es
ror
sbb
in
lds
xlat
and
add
push
jmp
dec
pop
aaa
ret
das
mov
faddl
inc
sbb
loopne
mov
dec
shll
pop
add
and
xlat
imul
inc
pop
mov
cmpsl
xchg
mov
push
xor
dec
leave
rcrb
push
aas
ds
jl
imull
shll
fcomps
arpl
mov
sbb
in
mov
gs
hlt
fdivl
iret
cld
push
mov
divl
ja
xchg
sbb
add
int3
insl
cwtl
lea
cmp
lcall
jns
jo
xor
push
sahf
pusha
loope
clc
mov
add
sbb
inc
outsb
imul
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
cmc
dec
xchg
sqrtps
xor
xchg
inc
repnz
outsb
ret
sub
push
iret
insb
lods
jle
or
insl
icebp
pop
add
dec
mov
mov
mov
test
insl
pusha
sub
mov
and
les
ja
insl
nop
inc
jmp
jno
std
movsl
mov
inc
mov
lret
sub
xchg
jb
daa
push
inc
ljmp
cmp
mov
inc
sbb
cmpb
inc
xchg
cmp
adc
xchg
stos
adc
int
add
cmp
shll
int
mov
mov
std
test
mov
addb
or
xor
std
dec
sbb
leave
and
jns
xor
mov
mov
push
pop
sbb
mov
add
into
push
lea
push
and
or
test
lea
inc
mov
aaa
xor
ret
iret
das
adc
pop
and
cld
jl
lret
roll
mov
pop
mov
pop
mov
fadds
xor
xchg
push
loop
jmp
push
pop
xchg
cmp
arpl
mov
test
inc
xchg
adc
mov
inc
mov
int3
rorb
hlt
cmp
cltd
mov
pop
popf
adc
cltd
sbb
dec
or
fsubrl
adc
mov
sahf
sbb
out
inc
jo
subb
xchg
mov
and
in
pop
dec
repnz
popf
aam
add
mov
or
dec
jno
imul
dec
xchg
dec
scas
jg
pushf
imul
outsb
das
hlt
jbe
and
ret
lea
or
popf
movl
pushf
test
sub
xor
loop
pushf
in
pop
and
xchg
int
xchg
std
push
jmp
cmp
mov
insl
cmp
adc
xor
clc
aas
mov
psubsb
sbb
inc
or
adc
jp
aas
mov
in
hlt
inc
mov
in
loope
pop
pop
shll
jnp
test
xchg
out
mov
orb
fs
sub
mov
mov
out
mov
xor
sub
dec
or
cmp
inc
loope
jae
lret
shlb
out
xchg
sar
push
mov
push
sbb
loope
lret
sarb
fnstenv
hlt
xchg
mov
fldt
xchg
mov
pop
scas
shrl
jbe
mov
mov
xorl
out
je
lods
shll
or
andps
cld
dec
sub
ds
sub
dec
mov
leave
int
rcll
loope
sub
call
adc
mov
mov
sti
sub
les
add
push
jo
xchg
call
das
mov
pop
xor
sub
mov
push
inc
pop
sub
xchg
movsb
push
push
daa
push
xchg
mov
cmp
mov
insl
xor
jmp
andl
mov
int
imul
cmp
popf
call
lahf
loop
roll
jge
pop
pop
add
cmp
xor
pop
les
mov
mov
stc
or
lcall
mov
je
call
mov
mov
mov
rclb
mov
mov
or
push
scas
mov
iret
or
sbb
sub
sbb
mov
pushf
aad
xor
push
jne
jmp
test
mov
aam
sbb
and
bound
push
push
xlat
push
xchg
mov
and
in
faddl
lret
movsl
sub
pop
jmp
jecxz
inc
jecxz
outsb
or
mov
les
stc
inc
in
pop
lods
xchg
fidivl
sbb
fwait
pop
adc
add
cmp
loopne
sbb
insl
aam
mov
inc
into
fistpll
cmp
jge
mov
adc
imul
daa
or
xor
jle
sub
je
or
pusha
pop
mov
mov
mov
push
push
mov
gs
imull
dec
icebp
cltd
jl
pop
sahf
int3
pop
mov
mov
push
push
xor
xchg
fimull
inc
jg
lret
adc
xor
and
out
xchg
sbb
add
test
push
adc
dec
add
clc
fisttpll
lock
imul
add
aas
sahf
fisubs
lock
sbb
dec
push
out
adc
sahf
mov
or
sub
stos
daa
or
sbb
dec
mov
sub
loop
gs
pop
fisubrl
push
fiadds
jmp
pop
mov
push
dec
xchg
or
dec
test
xor
shr
ljmp
adc
hlt
hlt
divl
lcall
fadds
xchg
dec
cvtdq2ps
or
je
xchg
scas
jbe
pusha
sahf
xchg
cmp
sti
sahf
into
in
cmp
pushf
mov
arpl
cmc
hlt
leave
adc
pop
not
ljmp
test
cmp
and
in
jp
lods
shrb
lods
lods
add
lret
out
rclb
fcomi
inc
call
popa
pop
jnp
sbb
stc
pop
lock
in
leave
scas
rcrl
cmp
je
out
loopne
jg
pop
inc
sbb
sbbb
imul
lods
jg
fnstsw
mov
push
mov
mov
xchg
popa
arpl
imul
test
pushf
call
cs
movsl
xchg
and
dec
les
test
popf
cwtl
mov
adc
sub
add
xlat
mov
push
mov
lods
jle
or
cmp
fnstsw
jecxz
mov
rolb
sub
arpl
sub
mov
icebp
jg
cmp
imul
aad
and
in
ret
scas
sbb
mov
or
and
jmp
xor
addr16
xchg
lret
hlt
adcl
shll
test
adc
mov
pop
sahf
xor
pop
fidivl
mov
cmp
addr16
xchg
andb
addr16
mov
je
mov
std
in
and
dec
mov
loop
jb
sub
out
jmp
add
xor
test
loope
xor
mull
jbe
out
scas
in
icebp
arpl
or
sbb
push
mov
inc
lret
xor
push
pushf
xchg
sub
stos
jecxz
inc
ja
xor
inc
repnz
es
push
dec
xchg
lret
rcll
add
sub
jle
loope
pause
mov
test
nop
pop
add
sbb
push
adc
xchg
int3
xchg
mov
xchg
cwtl
nop
adc
and
shlb
add
push
cmp
mov
jae
arpl
pushl
add
notb
loope
mov
cmp
cld
js
test
lock
inc
sti
fwait
enter
ja
add
enter
testb
orl
das
sub
in
and
inc
lcall
or
nop
icebp
and
add
sbb
sbbb
inc
jg
xchg
push
sbb
mov
imul
pop
scas
mov
movb
scas
sub
add
cli
adc
dec
xchg
sahf
out
stc
mov
xor
add
jns
mov
pusha
sbb
add
int
xlat
or
mov
insb
cmp
in
test
jne
aam
mov
or
push
pop
pop
cwtl
pop
mov
packuswb
repnz
cmp
divb
js
sti
xchg
in
in
lock
popf
shlb
data16
or
push
outsb
adc
out
jecxz
mov
mov
scas
aam
lods
sub
cmp
and
sbb
and
imul
adc
in
cli
out
dec
shrb
cwtl
popa
imul
in
ret
push
dec
and
sub
mov
repz
nop
inc
or
mov
out
xor
cld
aam
scas
cld
adc
or
add
jle
pop
jb
movsb
jae
frstor
xchg
push
iret
jb
out
bound
jg
std
add
test
lods
lcall
push
and
decb
mov
mov
scas
fstpl
ljmp
lahf
call
add
sub
sub
cltd
cmp
ss
out
xor
test
sbb
xchg
sbb
dec
xchg
and
pop
pop
push
add
pusha
adc
pop
addr16
inc
and
or
data16
mov
and
sub
loope
fmulp
pop
inc
movsl
mov
in
leave
cmp
decl
add
mov
mov
jne
cwtl
jne
rorl
and
fs
lret
lock
data16
xchg
inc
xchg
test
push
fst
jecxz
mov
aas
call
test
hlt
push
scas
insb
cmc
mov
out
cmp
pop
cmpsb
mov
jmp
repz
mov
ss
mov
rcll
adcb
fs
xor
aas
call
out
pop
adc
mov
fdivrs
lret
imul
sbb
mov
sbb
dec
std
push
adc
mov
loopne
aam
cmpsb
test
daa
mov
and
lods
pop
add
fdivrs
test
loopne
jg
subl
xlat
cld
mov
lods
sbb
sub
pushf
ficoml
dec
insl
pop
in
push
rcrb
mov
in
sti
xor
mov
xor
jns
mov
mov
clc
push
sbb
mov
mov
jecxz
icebp
add
insb
mov
sub
sub
aaa
push
clc
movsb
daa
push
sbb
mov
xchg
mov
adc
pop
add
icebp
idivl
xchg
mov
sbb
jge
in
imull
sahf
mov
popa
scas
jb
sarb
xchg
arpl
insb
test
mov
mov
les
adc
mull
cld
pop
data16
push
and
pop
dec
aas
xchg
js
popa
or
push
shll
inc
xchg
mov
cwtl
jge
xor
test
outsl
cmp
cmp
dec
or
js
pop
ss
loop
out
inc
lods
mov
int
movsb
call
flds
test
dec
and
inc
mov
cmp
adc
adcw
cli
out
sti
cltd
fs
mov
xchg
sbb
cli
jae
jmp
jo
adc
fcmovne
sbb
cmp
dec
jns
addl
nop
rcr
addb
mov
sub
in
pop
test
aam
pop
sub
xchg
and
xor
icebp
dec
jmp
fldcw
push
jae
shl
mov
pop
mov
push
cmpsl
aam
inc
and
out
jp
adc
shlb
pop
btl
mov
sti
mov
cmp
mov
insl
bound
mov
rcrb
in
xchg
and
sar
pop
mov
jg
getsec
vpsadbw
fcoms
arpl
imul
xchg
lcall
and
and
js
enter
add
push
lods
lods
inc
push
inc
repz
fs
lds
or
into
pop
xlat
call
mov
pusha
dec
or
lahf
enter
insl
cmp
xor
js
ja
jae
sbb
in
daa
in
jb
xor
mov
imul
out
mov
popa
xchg
les
outsb
test
push
out
xor
aaa
cmp
mov
sub
cmp
sub
jne
adc
btr
call
fwait
movsb
jns
add
and
xor
xchg
sbb
push
jns
or
es
mulb
int3
out
jo
outsb
imul
in
cmp
cmp
ja
xchg
cmp
sbb
and
mov
mov
es
sahf
scas
inc
dec
in
aas
lods
movsl
pop
mov
stos
adc
insl
lret
sbb
es
test
scas
mov
and
les
push
cmpsl
nop
xchg
dec
mov
add
aas
mov
or
in
mov
xor
je
stos
xchg
fdivs
mov
adc
pop
and
jae
push
test
inc
aad
push
cmp
inc
jp
pusha
das
mov
xchg
rcrb
xlat
xchg
mov
pushf
lcall
addr16
inc
or
mov
pop
mov
adc
sbb
daa
mov
push
out
ja
cmp
push
test
dec
in
push
mov
sbb
jo
pop
popf
out
es
mov
fistl
lahf
idivb
dec
aas
push
mov
mov
adc
push
and
cli
and
jno
insl
or
inc
mov
add
lret
fdivrl
mov
fxtract
call
jno
or
mov
int3
cwtd
xchg
sbb
mov
scas
dec
push
movsl
cmp
imul
out
icebp
and
inc
sub
ja
sbb
xlat
lcall
aaa
adc
fldcw
cmpsl
ret
fldt
movsl
mov
jne
cmp
cs
decl
adc
fucomip
aas
sahf
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
pusha
mov
cmpsl
xchg
jno
test
mov
push
or
xor
sbb
lods
stc
gs
fwait
sbb
inc
lock
lahf
int3
or
add
stos
xor
imul
stos
out
es
jb
ljmp
in
mov
cltd
orb
jb
fmull
push
pop
out
lcall
in
mov
addb
aad
pop
add
dec
dec
imul
jne
push
add
cmp
and
jno
jno
dec
jne
pop
mov
mov
into
jb
fdivr
stos
sub
lds
mov
dec
mov
jb
fimuls
orl
xchg
mov
pop
js
mov
aam
shlb
das
mov
fwait
dec
adc
fists
into
cltd
mov
sub
cs
mov
push
scas
dec
stos
dec
xchg
shlb
dec
jmp
add
jmp
pop
out
xor
jb
xchg
xchg
fmuls
xchg
xchg
pop
jae
fcmovbe
dec
fwait
out
xor
pushl
sarb
pop
mov
lcall
mov
push
pop
mov
push
push
out
pop
clc
add
stc
inc
inc
int
sti
push
xor
mov
pop
scas
mov
pop
aam
nop
lods
sbb
pop
xchg
shlb
mov
jmp
or
mov
mov
sbb
xchg
arpl
jns
in
xor
or
enter
adc
psubd
sbb
xor
add
fisttps
xor
mov
mov
int
out
and
imul
xchg
inc
aam
ds
lcall
lods
xlat
iret
xchg
sbb
aas
xorl
mov
or
pop
adc
mov
jle
push
inc
aaa
fprem1
in
icebp
imul
xchg
icebp
fwait
nop
add
xchg
icebp
mov
jo
sub
and
cmp
mov
sbb
pop
cmpsl
or
mov
and
das
lods
mov
add
scas
xor
jbe
push
mov
test
xor
add
daa
pop
test
push
push
fcoml
scas
mov
std
or
or
ss
dec
cwtl
aad
mov
mov
test
leave
push
xchg
push
sub
add
sub
cmp
icebp
lahf
xchg
fnstsw
inc
pop
repnz
jp
ljmp
mov
aad
nop
cli
jp
rcrb
aad
outsl
rcr
jl
shll
cmp
pop
addb
mov
rcr
mov
inc
sub
mov
out
mov
ret
imul
and
cld
cmp
or
mov
dec
sarl
lret
push
testl
in
repnz
sub
lahf
pushf
data16
push
dec
add
das
adc
sbb
sbb
push
xor
shll
fsubrs
ret
inc
xor
cmp
dec
or
mov
arpl
and
mov
ja
daa
shr
pop
pop
xchg
push
pop
in
mov
xchg
ljmp
sub
xchg
add
pusha
invd
into
lock
jb
idivl
loope
in
push
fidivl
pusha
push
push
sub
subb
ret
ljmp
adc
fbstp
ljmp
mov
pop
dec
sbb
jno
and
pusha
popa
inc
aad
ss
sahf
cmp
push
inc
inc
and
rolb
adc
cs
pop
idivb
repz
pop
testl
cmpsl
cwtl
mov
cmp
jl
clc
outsl
push
loope
pop
cmp
xchg
fwait
roll
mov
or
int3
xor
inc
pop
and
insb
xor
cmp
xor
movsb
jno
add
mov
xchg
pop
hlt
sbb
ret
mov
add
inc
aaa
pop
or
add
sbb
mov
sub
mov
les
inc
mov
push
cmp
inc
sahf
int
dec
adc
out
pop
stc
sbb
stos
mov
cmp
lea
dec
dec
loope
je
ror
adc
sub
mov
clc
sbb
outsl
loope
cld
cli
cli
loop
test
pop
push
leave
mov
repnz
test
shll
sbb
out
pop
xchg
and
pop
jp
sbb
jmp
les
pusha
pop
jp
rclb
in
mov
jecxz
pop
pop
adc
mov
ss
call
mov
mov
lahf
jae
push
cmp
imul
and
cmc
xchg
sub
shll
ret
loop
xor
mov
push
and
repz
push
fs
bound
sahf
cmpsb
cmp
daa
fs
pusha
dec
les
stos
js
cmc
nop
adc
fcmove
lods
mov
inc
sbb
or
ljmp
jmp
fsts
aaa
push
sar
fstps
mov
out
div
push
dec
loopne
out
or
icebp
push
call
pop
ds
arpl
add
or
cmpsb
or
jne
adc
movsl
inc
lock
dec
enter
push
mov
shrb
mov
inc
jo
dec
pop
xorl
aad
fs
cmp
lods
jno
outsl
cmp
js
jae
xchg
mov
mov
dec
adc
scas
xor
jl
add
fdivl
jl
jecxz
cmp
jecxz
push
sub
sbb
imul
jg
data16
movsl
jp
jle
push
testl
sub
fcomi
iret
int
in
lret
dec
lea
add
in
lcall
sbb
fidivs
mov
sub
pop
std
das
inc
mov
jmp
stos
jno
int3
or
scas
sub
ficompl
iret
dec
cmp
mov
enter
dec
fstpl
outsb
stos
les
inc
push
scas
cwtl
push
sub
sbbl
sbb
cmpsb
push
es
ret
xchg
dec
sti
push
outsb
rorb
ja
or
bound
push
nop
mov
sti
sbb
xor
pop
out
enter
sbb
mov
lret
lock
rcrb
inc
push
aam
adc
fisttps
fisttpl
dec
shlb
insb
adc
int3
lods
pop
addr16
add
inc
inc
js
inc
and
adc
inc
outsl
xor
or
out
xorb
and
ret
xchg
mov
pusha
xchg
popf
adc
xchg
pop
pop
cltd
ljmp
movsbl
nop
pop
jne
pop
out
pop
cmpb
lcall
push
js
mov
jg
test
test
adc
xchg
inc
data16
jnp
xchg
push
dec
int3
mov
mov
or
cs
cltd
lret
cmpsl
mov
push
xchg
fsubrs
mov
lea
cmpsb
rorl
or
scas
inc
inc
add
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
push
int3
xchg
jbe
jno
mov
sub
ss
add
mov
test
sbb
daa
mov
push
sub
mov
mov
or
sarl
mov
rep
icebp
xlat
out
testb
popa
sbb
cmc
xor
ror
test
sti
push
xor
mov
mov
xor
pop
pop
in
and
jl
fidivrl
lock
xlat
mov
push
and
adc
cs
pushf
sti
cmpxchg8b
leave
pop
and
ss
mov
mov
jns
inc
jo
jle
mov
les
in
cli
and
ja
mov
jne
xchg
addr16
popa
xorb
push
and
mov
push
mov
and
dec
shll
in
loope
repz
and
mov
xor
mov
push
inc
lock
push
mov
cltd
imul
push
xchg
test
into
dec
mov
push
std
aam
test
adc
leave
bound
sarb
imul
adc
or
sbb
inc
mov
push
in
xor
xchg
inc
cmc
sbb
mov
push
jmp
addr16
leave
outsl
repz
add
test
add
iret
cli
outsl
sbb
mov
subb
dec
test
push
jb
leave
add
mov
mov
mov
stos
push
or
jmp
fimull
stos
xor
sbb
das
mov
stos
mov
jns
lcall
push
add
mov
test
pop
aaa
dec
lahf
mov
adc
pop
sbb
sbb
push
push
addr16
dec
fnstenv
mov
sbb
pop
stos
jmp
jg
adc
push
xor
test
dec
fsubl
and
jmp
cs
sahf
lret
jmp
movsl
mov
push
loop
cmc
fisubrs
cli
mov
movsl
and
mov
cmpsb
inc
icebp
js
jg
push
andb
outsb
mov
in
and
adc
xchg
ljmp
push
jle
das
leave
int3
adc
ret
jns
jae
sub
dec
cltd
rorb
scas
pop
das
fcompl
shlb
shlb
das
xchg
pusha
and
sbbb
test
aaa
cmp
movsb
ds
mov
xor
pop
or
push
xor
push
psubd
mov
loop
push
lods
imul
mov
xchg
mov
jmp
fisubrl
dec
xor
outsb
js
and
imul
cmpsb
jns
adc
xchg
loopne
out
lret
inc
push
xchg
mov
insl
dec
add
xchg
fisttpl
push
adc
popaw
push
add
stc
cltd
and
lods
dec
mov
mov
aas
cmp
repnz
mov
cmp
and
fisubrl
bound
movsb
add
add
cmc
dec
inc
xchg
or
xchg
cltd
enter
mov
mov
nop
adc
xchg
ljmp
or
test
ret
mov
mov
lock
adc
mov
cli
add
jbe
lcall
je
outsl
imul
call
mov
cmp
sti
mov
pop
add
les
shr
xchg
sub
inc
xchg
adc
cmc
pop
jp
ja
adc
push
xchg
pop
or
mov
insl
pop
jge
or
clc
ds
inc
jecxz
repz
and
cwtl
lea
aaa
sub
fs
jae
and
dec
and
add
mov
sbb
push
jns
add
repnz
xchg
or
and
test
mov
jle
mov
xchg
add
insl
mov
orl
mov
insl
stos
in
rorl
sbb
fwait
and
ds
in
cli
jbe
jg
pushf
out
addl
xchg
shlb
stos
pusha
xor
fisubrs
mov
jl
ss
add
loop
sub
sbbb
inc
and
jo
repnz
xlat
cmc
out
jecxz
movsb
xchg
ds
xor
mov
adc
dec
mov
mov
dec
mov
and
imull
xchg
mov
adc
stos
adc
and
mov
dec
xchg
push
dec
test
test
jno
xchg
mov
mov
cmc
lcall
sbb
inc
and
test
sub
jb
sub
and
sti
pop
filds
xchg
addl
pop
cmp
js
outsl
push
push
stc
aas
pop
pop
into
push
roll
dec
mov
loopne
push
sbb
cs
jns
and
cmpsb
aam
adc
enter
mov
arpl
int
lock
jnp
testl
lahf
dec
sub
xchg
mov
fstpl
xor
cld
jb
das
out
dec
inc
xor
insb
stos
sub
stos
lods
fwait
and
cmp
aaa
sbb
data16
in
aaa
std
adc
xchg
sbb
lcall
mov
and
dec
scas
xor
pushf
icebp
fdiv
stos
sub
and
sbb
cmc
jae
pop
int
mov
lock
dec
push
movsl
jne
movsl
aad
insl
push
test
and
in
rcr
icebp
mov
sub
fcomip
ja
pushl
imul
pushf
fisubl
mov
add
mov
popa
xchg
or
add
pop
imul
or
arpl
dec
fwait
xchg
mov
popa
sub
push
push
int
add
mov
cmp
adc
push
xor
cmc
cmp
or
inc
xor
fidivs
movsl
mov
sbb
stos
dec
out
test
add
add
insl
dec
sti
sub
sub
and
dec
fwait
jle
jae
in
pop
test
dec
mov
int
data16
jae
and
fildll
outsl
mov
inc
sbb
bound
adc
lock
or
mov
ret
sbb
sbb
fs
ret
outsl
mov
and
fstpl
mov
les
mov
loope
xchg
in
movsl
icebp
jmp
jne
mov
xorb
cmpsb
push
cmp
pop
mov
mov
data16
mov
scas
or
xchg
mov
jae
inc
lea
lods
inc
or
sbb
dec
sub
dec
dec
loopne
adcb
push
xchg
rclb
jl
cmp
jae
dec
jg
sub
sub
jnp
ja
inc
adc
or
adc
xorl
adc
lret
pop
jo
out
sbb
subb
pop
scas
pushf
jg
jbe
imul
mov
sahf
xor
mov
nop
push
sub
lcallw
cli
fisubrl
xchg
aad
sbb
dec
or
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
push
pushf
xchg
xchg
adc
addl
scas
xor
push
mov
hlt
inc
pop
adc
inc
sbb
push
push
das
push
insb
mov
nop
adc
mov
stos
pop
mov
cltd
std
cmpsb
out
inc
iret
xor
cmp
jl
add
jl
mov
mov
pop
mov
mov
in
aad
cwtl
xchg
pop
lahf
pop
xlat
xor
xchg
jmp
movsb
pop
mov
pop
inc
sbb
lret
out
mov
movsb
jne
pop
cmp
inc
bound
mov
rcll
imul
repnz
popl
nop
ja
cltd
add
mov
add
ja
mov
cmp
jp
sub
and
inc
or
inc
xchg
lea
mov
in
jmp
xchg
js
nop
pop
movsl
mov
mov
cmpsb
xor
outsb
popa
mov
test
out
fisttpll
mov
arpl
push
mov
je
subb
mov
xchg
add
imul
cmp
adc
add
push
sub
ss
jmp
shll
sub
dec
int
push
cmc
add
inc
dec
daa
xchg
dec
and
mov
in
mov
mov
movsl
jl
pushf
repz
fisttps
popf
or
stos
lods
xchg
xlat
sbb
sbb
adc
adcb
pop
inc
iret
xchg
loope
add
mov
popf
sbb
xor
rclb
dec
es
fwait
push
data16
pop
and
shrl
test
shll
movb
cs
and
sub
cmp
add
sub
out
jae
mov
sub
sub
aam
aas
and
insl
pop
jns
cwtl
cmp
fistl
fcmovnu
mov
jae
xor
stos
pop
mov
add
lods
pop
mov
mov
xchg
jne
icebp
xlat
shrl
xchg
negl
hlt
cmp
arpl
test
and
out
loop
movsb
stos
scas
outsl
jns
sbb
ds
cmp
cmpsl
dec
stc
ss
jne
pop
sbb
divl
dec
sbb
pop
out
mov
xor
movsb
test
pop
jmp
or
insl
push
sub
add
stos
adc
pop
insl
int
sub
jae
enter
icebp
and
jns
push
test
orl
and
push
jp
push
or
lret
adc
mov
in
xchg
in
lret
ja
imul
inc
incb
ds
or
mov
fwait
test
repz
ret
pop
loop
jnp
add
dec
pop
xor
ret
cwtl
movsl
inc
mov
cwtl
pop
hlt
divl
ds
sbb
scas
mov
add
jne
xchg
rorb
insl
repnz
ss
mov
sbb
lret
dec
cs
icebp
scas
push
adcb
addr16
out
jae
fisubrs
mov
pop
inc
lret
loopne
test
or
rep
sub
jle
insb
adc
cld
movsl
adc
mov
lret
int
popa
mov
xor
lret
ret
push
das
lods
inc
clc
movsl
push
scas
jecxz
nop
clc
repz
push
imul
jns
das
push
scas
xor
mov
jb
movsl
mov
loopne
cltd
pop
push
pop
outsl
mov
pop
jmp
insb
testb
jg
xchg
push
inc
fidivs
jae
lret
leave
xchg
aad
pop
loopne
test
int
mov
pusha
xchg
xchg
xchg
repnz
shll
movsb
push
jae
aad
rcrl
mov
or
outsl
or
jbe
sub
push
fisubrs
sbb
sahf
fbld
mov
jl
mov
push
mov
pop
or
loope
cld
inc
rorl
add
push
adc
jecxz
mov
jle
jb
shlb
inc
in
xor
dec
fisubrs
dec
xchg
call
les
xchg
mov
in
daa
pop
mov
dec
jae
jae
jecxz
call
addr16
lret
lea
and
jae
cmp
sub
xor
add
add
xor
xlat
push
pop
lcall
fiadds
adc
ds
xor
loop
inc
mov
mov
xchg
pop
das
mov
data16
fwait
cmp
imull
jle
jp
fsub
ret
ficompl
inc
jmp
jo
ja
loopne
xchg
out
add
or
popf
call
pushf
xor
loopne
xor
lret
sub
xorl
imul
fdivrl
dec
mov
mov
pop
push
roll
and
sbbb
aaa
jmp
call
mov
sarb
repnz
icebp
test
sbb
adc
addl
pop
and
cmpsl
rcrl
pop
push
test
fdivs
mov
les
inc
arpl
adc
into
scas
outsb
jb
stos
pop
jecxz
test
dec
push
xchg
jmp
xor
mov
push
sbb
jb
out
push
push
aam
movsb
fcmovbe
jne
xchg
dec
lea
push
or
hlt
int
pop
out
shll
inc
aad
push
adc
inc
mov
jns
inc
insl
sub
idivb
jl
pushf
daa
pushf
cld
mov
cmp
insl
out
sub
sub
or
fadds
xchg
and
fisubrl
pusha
dec
dec
ficomps
push
cmp
sub
inc
xchg
ret
insl
stos
cmpsl
dec
mov
shl
popf
inc
nop
sub
mov
sarb
or
add
sar
cmp
imul
sti
sahf
mov
sahf
pop
xlat
inc
lock
fld
inc
sbb
add
xor
add
in
push
mov
dec
dec
cld
mov
mov
jl
xchg
sahf
inc
sbb
addr16
or
push
test
es
xor
jg
loop
push
bound
rcrb
fsqrt
data16
push
xor
push
inc
ljmp
or
popf
add
out
insb
mov
nop
call
lahf
fdivrs
add
addl
cld
add
dec
lea
mov
testl
cmpsl
mov
mov
xchg
jmp
in
mov
pop
shrl
cmpsb
int3
xchg
mov
xor
dec
add
push
adc
lds
xchg
in
mov
dec
fsubrs
sbb
out
sbb
es
and
loopne
or
notb
cld
mov
adc
ss
inc
push
imul
push
outsl
xor
mov
dec
inc
call
mov
xchg
jns
dec
sub
shlb
mov
es
cmpb
enter
pop
inc
les
ds
sub
sub
pop
test
adc
lods
sarl
lods
mov
jmp
pushf
rorl
mov
jmp
cmpsb
add
in
mov
inc
into
aam
rorb
adc
pop
outsb
pop
mov
test
orl
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
leave
or
add
add
sub
lock
stos
rorl
out
or
mov
out
inc
or
daa
std
sub
push
jg
stos
mov
data16
jl
lret
flds
mov
mov
in
push
dec
insb
gs
pop
rcr
cmpsl
in
push
ret
mov
xor
loope
jmp
push
push
aaa
mov
and
mov
sti
std
cld
cmp
xchg
xchg
adcb
lcall
loop
pop
xor
lahf
sub
cs
ljmp
fcoms
mov
xor
ret
mov
adc
inc
sbb
mov
in
mov
in
subl
inc
mov
adcb
sub
imul
nopl
aas
xchg
and
idivl
push
jle
lods
movsl
popf
fsts
push
xlat
rolb
mov
or
arpl
fsubr
adc
ret
push
bound
test
adc
dec
cmc
xor
sub
addl
pop
or
sbb
lahf
jg
pusha
lret
in
jae
imul
dec
mov
jo
icebp
adc
and
int3
cmp
push
pop
clc
jle
adc
mov
xchg
jmp
mov
es
popa
out
out
cmp
cmpsl
xor
in
repz
or
xor
jb
mov
cmp
fiadds
fucom
xchg
cmp
pop
nop
imul
pop
lret
mov
jno
sbbl
loopne
dec
or
inc
add
das
shrl
mov
jmp
scas
dec
and
loop
movsb
jno
lret
repz
rol
das
xor
loop
call
push
cmpsb
sub
mov
or
imul
mov
inc
out
push
aaa
push
lret
push
insb
in
dec
or
test
in
sti
test
mov
repz
mov
mov
jp
xchg
out
lods
cmp
mov
fstl
loope
mov
lcall
dec
mov
imul
movsb
push
cmc
xor
fst
shrl
push
insl
in
scas
orb
shrb
lahf
xchg
lods
sub
dec
push
popf
shlb
jp
jae
sahf
xchg
out
inc
int
fnstenv
and
cs
mov
jno
xlat
stos
dec
fs
sub
stc
dec
mov
xor
jae
push
and
hlt
xchg
cmp
fwait
dec
mov
jae
mov
jmp
test
jmp
sbb
sti
ss
pop
insb
mov
cmpsl
and
cli
sub
sub
dec
test
sbb
dec
or
sub
dec
or
sbb
sub
adc
rcll
imul
mov
aam
lahf
mov
fsub
cmp
cs
call
sub
repz
aas
xor
rcrb
mov
arpl
nop
ljmp
pop
ja
cmp
je
filds
mov
movsb
lods
movsb
fldcw
ror
xchg
mov
lahf
adc
add
pop
push
iret
inc
xor
mov
sbb
lock
fdivs
cmp
stc
lret
sarb
in
adc
cmp
pop
add
ret
insl
cmp
rol
scas
scas
xor
push
inc
jne
shll
scas
push
xchg
sub
ret
in
pop
sub
cld
pop
shll
loop
sti
icebp
nop
adc
mov
arpl
cmpb
push
mov
xchg
xor
adc
xorb
pop
xor
xor
mov
scas
test
push
lahf
lahf
cmpl
stc
insb
ret
xor
xlat
outsl
mov
ljmp
mov
cmpsb
je
sub
inc
pop
outsb
insb
jp
push
sbb
dec
xchg
or
push
les
pop
push
shll
fdivl
xchg
repz
clc
dec
lods
jns
add
or
lods
lahf
jno
inc
out
jge
ss
movsb
cmp
stc
mov
cmp
cs
lods
mov
mov
lods
dec
jno
mov
mov
add
add
push
xor
jmp
test
ds
out
mov
add
push
push
mov
cmc
icebp
repz
add
dec
adc
push
dec
or
mov
mov
out
cmp
out
push
sbb
std
movsb
lock
ljmp
mov
je
mov
outsl
xchg
addr16
ror
and
call
mov
jge
sbb
pop
sub
call
and
mov
push
xchg
xchg
imul
std
jns
sub
or
mov
xor
xchg
in
xorb
mov
nop
push
icebp
repnz
sbb
jnp
mov
cmpsb
notb
push
call
jmp
adc
inc
or
repnz
filds
pop
cmp
outsb
cld
aaa
cld
xor
adc
jl
enter
das
das
ss
xchg
pop
sub
ljmp
pop
sbb
xchg
movsb
and
and
mov
xchg
push
fnstcw
mov
and
sahf
mov
pop
ss
incb
xlat
ja
addr16
jne
jno
push
sbb
mov
mov
movb
imul
stos
insl
icebp
adc
or
aam
fwait
jns
scas
scas
xchg
add
fdiv
fidivs
xchg
loope
in
out
dec
mov
std
jl
gs
push
jne
mov
or
fmuls
cmpsl
movsb
loopew
mov
loop
imul
and
and
mov
and
stc
jb
fsub
add
and
jbe
sbb
das
pushf
ficoms
mov
push
andl
stos
push
imul
enter
cmpb
jns
jnp
mov
arpl
int
outsb
jp
cltd
push
dec
popf
jne
add
sub
ret
movsl
cmp
push
pop
dec
mov
adc
fcomps
ret
push
scas
aad
push
xchg
push
cltd
iret
mov
and
sub
push
dec
lods
loope
push
shlb
add
dec
ficomps
or
xchg
insl
mov
fprem
pop
aas
rcrl
adc
lods
mov
pop
jle
dec
ret
ljmp
ds
mov
sub
inc
sahf
sbb
cmp
js
ret
xchg
pop
ret
add
sbb
mov
sahf
sbb
jae
dec
xchg
push
xchg
sub
inc
jns
lds
cmpsb
dec
lret
cltd
dec
addb
cmp
mov
idiv
mov
out
pushf
mov
roll
cltd
je
cmp
mov
pop
int3
push
jb
bound
cmp
stos
or
rorb
loope
aam
addr16
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
rcrb
push
jns
mov
in
notl
mov
aaa
inc
mov
lods
bound
xor
loope
inc
ret
jl
dec
std
pop
int3
mov
xor
ds
pop
in
adc
adc
sub
sarl
cmp
cmp
cli
pop
xor
mov
popf
outsl
sbb
fbld
push
loope
jg
jnp
shrb
pop
lret
repz
push
mov
stc
popa
idivb
xchg
and
inc
insl
lret
mov
pop
pmullw
into
hlt
xchg
mov
lret
adc
push
jl
xorl
xor
push
dec
add
jae
sbbb
dec
cltd
inc
dec
and
enter
ss
fs
sbb
ret
pushf
sarb
ror
mov
cwtl
sbb
imul
mov
push
lahf
gs
sub
pop
mov
and
add
mov
cld
fdiv
out
aad
push
push
stos
sbb
int
xchg
outsb
dec
xor
dec
mov
dec
in
sub
scas
xchg
mov
sbb
add
cmp
pop
in
mov
xchg
out
and
push
out
out
test
cmpsl
scas
push
les
jmp
addb
sub
into
int
sbb
mov
sub
pop
repz
xchg
in
jp
add
push
in
add
sarb
testb
xchg
inc
mov
test
jp
ljmp
push
mov
pop
or
lods
testb
test
cmp
pop
xchg
shll
inc
push
xor
iret
fwait
mov
mov
daa
aad
or
push
xor
out
dec
mov
adc
xor
jne
xor
push
cmp
dec
hlt
xchg
dec
jo
pop
dec
cmp
scas
test
add
lret
inc
mov
adc
inc
test
fldenv
mov
xlat
add
insl
pop
mov
dec
jae
jecxz
jnp
and
fwait
mov
sub
sti
dec
das
and
clc
mov
mov
xchg
ret
loopne
pop
xchg
sbb
into
out
mov
lret
jo
jl
xor
mov
cmc
jns
lret
insb
xchg
sbb
andb
cmpsb
imul
insl
mov
lea
push
data16
jne
or
and
outsb
jp
cmp
sub
and
sub
adcl
cmp
shl
mov
dec
mov
adcl
test
mov
ficomps
sarl
inc
or
xlat
movsb
push
outsb
xchg
out
rcrb
enter
mov
shl
dec
mov
rcrl
and
test
jecxz
push
xchg
cli
call
pop
xchg
gs
into
push
xor
mov
jecxz
push
aad
push
aaa
f2xm1
clc
in
outsb
rolb
js
mov
push
test
cmp
sbbl
ror
add
pop
inc
mov
mov
int3
jp
imulb
cmp
pop
jne
repnz
fsubl
inc
rcrl
loopne
jg
aas
lcall
add
orb
in
das
add
dec
stc
movsl
pop
test
mov
inc
dec
pop
shl
or
and
lea
shll
movsl
rcrl
lcall
gs
adc
ss
das
int3
cs
int3
sbb
mov
cmc
sub
xchg
xchg
cmp
push
cmp
sub
clc
pop
repz
fisttps
mov
in
mov
adc
xchg
xor
orl
mov
jg
stc
xchg
mov
ficompl
test
insb
loope
bound
or
jbe
shl
shrl
shll
sbb
jne
rorb
inc
sbb
rclb
loope
enter
or
jmp
xlat
ja
xchg
jb
inc
mov
fcomi
or
mov
into
mov
mov
sub
sub
loope
and
loope
es
in
fiaddl
push
cmpsl
adc
dec
lock
adc
or
test
lahf
mov
ljmp
stos
cmpsb
xor
push
or
mov
mov
dec
movsl
jns
sub
mov
xor
cmp
int
and
mov
mov
sub
sbb
mov
or
mov
bound
std
les
xchg
stc
cmp
pop
xor
and
xchg
jbe
pop
cmpsb
mov
inc
aad
mov
ja
hlt
in
dec
adc
xchg
call
cs
ja
pop
sbb
mov
mov
loop
popa
lret
mov
push
mov
cmpsb
cld
mov
repnz
aam
jbe
inc
std
and
xor
push
sub
jg
pop
pop
or
dec
fildl
out
mov
push
and
xor
adc
dec
jecxz
mov
lcall
adc
mov
test
mov
dec
xchg
lods
mov
inc
mov
jnp
pop
mov
rol
orb
pushf
lock
ljmp
mov
mov
ficoml
dec
into
loope
aaa
and
iret
scas
or
data16
mov
arpl
lods
dec
mov
out
out
pop
out
ja
lds
shrb
sbb
push
xorl
jle
mov
cmpsl
xor
int3
add
sbb
pop
shll
mov
jne
icebp
jle
dec
and
mov
jmp
out
mov
jl
jb
push
sub
xor
or
jnp
enter
xchg
inc
sub
push
je
arpl
testl
mov
ss
imul
test
lret
jmp
pop
icebp
and
stc
fstpt
cmp
shll
mov
or
push
rep
or
push
popf
cmc
push
fmuls
cmp
sub
xor
sub
jo
ficoms
or
mov
push
je,pt
add
aaa
lcall
leave
jecxz
decl
mov
test
xchg
sarl
test
pop
dec
push
mov
adc
jecxz
ja
shlb
std
inc
and
xlat
movsl
adc
cmp
add
hlt
mov
adc
pop
sbb
and
in
rcrb
es
adc
mov
das
sti
stos
xor
jne
xchg
fisttpl
pop
mov
push
mov
push
mov
xlat
xchg
movsl
xchg
inc
ja
outsb
stos
lcall
sahf
filds
je
lcall
xor
cmp
or
xor
daa
mov
popf
cs
test
aas
fwait
aas
aas
jl
rorb
cmpb
sub
js
fxch
rep
mov
and
leave
movsl
xor
xlat
mov
repz
pop
mov
pop
add
shll
fs
mov
sarb
clc
mov
mov
jl
xor
inc
roll
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
fists
outsb
xchg
loope
adc
addl
mov
les
pop
imul
mov
add
mov
call
ljmp
sbb
pusha
lds
test
pop
sub
dec
cld
push
push
jne
outsl
loope
mov
sarb
je
pop
push
and
stos
dec
sahf
out
imul
sub
dec
adc
push
mov
xchg
aad
addr16
push
arpl
mov
ret
and
push
mov
dec
xor
inc
mov
rolb
and
cmp
js
outsl
in
sbb
push
add
test
add
cwtl
lea
popa
mov
scas
cmp
xlat
push
ss
push
jne
aaa
jne
pop
ret
fnstsw
decb
xchg
mov
push
cmp
xchg
adc
out
push
jmp
push
pop
sub
incb
mov
mov
jp
add
xchg
sbb
lcall
stos
and
test
sub
call
inc
ss
icebp
jl
jb
pop
push
pop
xor
pushf
imul
mov
mov
add
dec
and
fbstp
and
rclb
xchg
add
aam
mov
cmp
nop
jg
dec
sbb
dec
repz
pusha
sbb
incb
and
mov
jl
sbb
mov
fsubr
mov
repz
das
lock
movsl
jmp
adc
mov
js
mov
ficoml
cmp
adc
mov
add
stos
xor
es
sti
add
xchg
jecxz
add
arpl
pop
aaa
cld
push
icebp
idiv
out
fstp
enter
or
in
mov
mull
inc
inc
jno
and
pop
adcb
jbe
mov
xchg
lret
sbb
stos
add
mov
repnz
ror
aad
push
sets
fwait
ret
fwait
mov
inc
mov
cmp
jge
aam
pusha
ss
sbb
pop
adc
pop
in
insb
sbb
add
inc
sub
add
rcrl
sahf
sub
outsb
popf
pushf
es
jo
sbb
cmpsb
and
or
fstpt
pop
shll
stos
insb
xchg
adc
xlat
and
fwait
cmc
mov
jge
xor
test
cmp
push
fisttpll
push
mov
ret
adc
xchg
arpl
cwtl
mov
mov
int
sbb
ljmp
std
ljmp
pop
xchg
cld
jno
sub
dec
inc
pushf
stc
pop
dec
sub
out
inc
cwtl
es
mov
iret
add
sub
mov
mov
mov
movsl
xchg
pop
jbe
inc
adc
xchg
sbb
fistpl
xchg
jnp
dec
or
lahf
push
leave
sub
sahf
hlt
pop
rcr
fisubrl
or
addl
jns
mov
sub
adc
pushf
fdivs
int3
jno
in
les
shr
jl
rcrb
inc
out
outsl
test
enter
test
popa
lret
lcall
push
mov
mov
sub
dec
and
mov
ret
roll
inc
ret
lods
mov
insl
mov
vmaxsd
mov
daa
lock
or
fisttpl
or
test
pop
lods
das
xchg
push
mov
cmp
mov
sub
xor
outsb
cwtl
or
pop
inc
xlat
lret
push
pop
outsl
sbb
mov
sub
scas
js
pop
push
and
nop
mov
bswap
scas
sub
mov
jae
subl
and
daa
imul
dec
in
popa
xchg
and
adc
mov
in
or
sar
adc
scas
sbb
mov
add
repnz
lock
dec
pop
js
jb
push
stos
fldenv
shrb
mov
popl
mov
mov
lock
cmp
or
ja
pop
call
in
cmpsb
dec
pop
mov
inc
out
inc
lret
push
sbb
nop
fs
mov
in
vaddsubpd
out
notb
or
xchg
dec
pusha
ljmp
inc
or
sbb
daa
xor
in
cmc
jb
mov
in
push
or
xchg
out
mov
pop
in
xorb
dec
jl
icebp
pop
and
jnp
in
setnp
jae
push
mov
aas
sbb
out
or
test
fisubrs
pop
ret
jb
out
dec
rcll
sub
cmp
cmp
adc
add
push
aaa
cmp
loopne
pop
das
adc
pusha
lea
bnd
loope
int
nop
xchg
call
mov
loop
pop
or
inc
inc
cmp
decl
jo
test
unpcklps
jnp
inc
or
ja
iret
movsl
movsb
test
push
scas
ss
test
dec
test
jns
adc
sub
adc
mov
sbb
gs
dec
xor
pop
xor
iret
fs
inc
shrl
jo
jmp
nop
loope
inc
dec
sbb
push
ja
push
adc
call
stos
packuswb
in
lock
movsb
adc
cmpsb
cs
xor
sbb
fildl
mov
adc
adc
push
int3
fwait
pop
cmpsb
in
or
mov
jp
fldt
lahf
add
xor
pop
mov
lret
inc
sbb
and
insb
dec
sarl
push
loop
push
aad
or
fdiv
scas
rcrl
addb
add
cmp
leave
xor
xchg
jno
scas
mov
test
and
int3
fists
cmp
fdiv
lods
icebp
push
adc
aam
xor
fs
pop
pop
sarb
scas
mov
push
enter
pop
ficomps
push
xchg
hlt
call
xor
cmpsl
and
xchg
mov
sub
dec
add
popa
mov
das
xor
pop
scas
cli
and
pop
push
or
mov
int
xchg
fmuls
fxam
and
pushf
mov
xor
pusha
and
ss
jns
dec
push
les
push
aaa
jns
lahf
imul
movsb
in
mov
inc
sbb
push
icebp
scas
pushl
movsb
dec
and
mov
into
dec
mov
imul
fbstp
pop
mov
scas
subl
jmp
es
repnz
sub
cmp
and
arpl
xchg
pop
fst
repnz
movsl
jnp
cmc
cmc
xchg
adc
fs
fildl
out
mov
adc
shl
xchg
lret
loop
jge
int3
pop
rcrl
aaa
sub
lods
dec
fcoml
mov
mov
test
gs
dec
or
int3
adc
cltd
cmp
xor
push
in
roll
fwait
insl
cmp
pop
mov
lea
xor
push
push
push
add
adc
mov
mov
sbb
ret
andl
adc
mov
push
daa
repnz
pop
decl
out
inc
add
pop
add
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
add
jnp
inc
ret
add
testl
leave
or
pop
mov
subl
ljmp
pop
arpl
pop
repz
ret
inc
lahf
ret
sbb
test
movl
sub
mov
aad
pop
add
test
or
pop
sub
push
dec
lahf
popa
movsl
push
cmp
add
popa
lods
or
stos
repnz
mov
into
inc
icebp
out
mov
inc
cmp
fs
mov
rorl
mov
hlt
fstpt
dec
pop
lahf
pop
pop
mov
cld
mov
pusha
push
divb
inc
mov
mov
into
jecxz
out
pop
dec
aam
inc
addr16
cmpsb
sub
insl
das
jle
in
jbe
std
pop
jecxz
insl
lret
pop
test
pushf
mov
test
lea
and
test
adc
notl
scas
xor
or
arpl
lret
xchg
pop
aam
icebp
sbb
adc
mov
inc
or
scas
mov
movsl
fcomi
andl
sbb
and
push
lcall
xchg
sbb
in
sub
mov
divb
xchg
push
xor
fwait
movsb
fidivs
sbb
xor
xchg
jae
jne
pusha
inc
cltd
mov
xchg
jo
adc
insl
test
jl
stos
mov
mov
inc
nop
outsl
mov
gs
insl
mov
pop
xchg
mov
adc
mov
add
jb
adc
push
jne
xchg
jne
insl
inc
dec
shll
add
aam
mov
inc
aam
xor
xor
mov
dec
out
xchg
dec
mov
and
sub
fbstp
addr16
mov
add
call
add
push
imul
cli
mov
mov
jo
lret
dec
ret
icebp
sahf
dec
xchg
out
mov
inc
push
xchg
push
adc
pop
inc
stc
push
mov
cmp
sub
xchg
adc
lcall
aas
in
pop
or
je
enter
je
lock
mov
mov
xlat
push
pop
fsubl
jns
push
xchg
jb
fs
movsl
xor
bound
or
cs
je
adc
jb
xor
dec
sbb
lods
scas
incl
sti
jbe
imul
mov
add
pop
add
jb
mov
pop
cmp
or
cmp
xor
sbb
rcl
testb
sbbl
fistpl
inc
and
into
adc
repz
in
fdivrs
inc
fucomp
xchg
adc
fisubrl
test
push
mov
std
mov
xchg
lds
pop
jge
call
cmc
sub
lret
or
pop
js
ss
fiadds
and
sbb
sti
mov
addr16
xor
mov
add
hlt
lods
faddl
sbbl
pop
cmp
push
dec
mov
dec
cs
cmp
cli
jnp
mov
mov
jle,pt
pop
sbb
ljmp
cmp
jecxz
or
out
mov
dec
pop
call
and
and
add
sub
lock
push
xchg
rcrb
inc
mov
and
testb
shlb
push
sarb
push
and
aas
mov
and
nop
push
mov
lock
lret
dec
push
dec
fdivl
pop
movl
pop
or
push
add
scas
xchg
mov
fcompl
ret
das
xchg
add
cltd
mov
sti
cwtl
or
adc
pop
pusha
ds
mov
or
repnz
shrl
xlat
cltd
pop
icebp
ret
inc
and
cmp
jg
xchg
inc
leave
pop
out
mov
push
ds
sbb
jno
jae
mov
dec
xor
iret
jmp
jmp
aam
dec
out
mov
filds
sub
rolb
pop
lahf
and
ret
mov
mov
lcall
dec
in
lods
out
insl
cltd
nop
aas
test
cs
frstor
outsl
popf
aas
out
xchg
sbb
add
mov
neg
mov
ds
stc
insb
frstor
xchg
xchg
inc
jnp
movsl
cmpsb
shlb
sti
cltd
jno
sbb
pop
inc
insb
mov
jmp
push
mov
cmpsb
sbb
cmp
lds
and
daa
adc
adc
jns
push
sub
xchg
adc
or
ljmp
lea
rolb
inc
jnp
mov
pop
adc
xor
and
xor
inc
dec
cmc
inc
inc
mov
nop
ds
jbe
lea
clc
cltd
icebp
loopne
adc
aas
scas
les
test
insb
push
jae
cltd
insl
lock
mov
sbb
mov
shlb
ret
repz
pop
xchg
bound
pop
push
add
fwait
cmpb
push
rclb
xchg
lods
cmp
pop
jge
pushf
jp
lea
cs
inc
lahf
mov
fdivrl
stos
mov
push
xor
jns
addb
add
fisttps
popf
dec
aaa
popf
mov
xor
ret
inc
int
adc
stos
sbb
fdivs
xchg
mov
adc
sub
out
ljmp
mov
sub
pop
xchg
enter
jle
imul
pop
pop
rorl
sbb
push
std
mov
adc
int3
pop
mov
dec
mov
cmpsl
jle
jp
sub
pusha
ret
mov
adc
je
sub
push
jno
adc
aas
outsl
lea
mov
dec
jnp
in
loopne
sbb
ds
xchg
iret
mov
mov
pop
mov
stos
das
push
int3
cmp
arpl
xor
cld
and
fdivl
pop
repnz
mov
mov
xchg
repz
jp
repnz
pop
lods
cmp
rclb
xchg
cmp
pop
pop
pusha
add
pop
fwait
lods
icebp
dec
out
inc
dec
data16
sti
adcl
scas
pop
cmc
sbb
or
fldenv
pop
dec
mov
std
dec
in
imul
mov
mov
ret
nop
test
int3
mov
and
fildl
jbe
lret
pop
shl
jne
jmp
pop
popf
add
dec
scas
jg
adc
aaa
lcall
loope
cli
into
addr16
push
jno
lret
imul
xchg
fdivr
cli
into
xlat
loopne
ficoml
lret
or
mov
sbb
iret
jge
iret
fstpl
dec
fwait
sbbb
lret
cmpb
mov
pop
pop
nop
int
mov
pop
es
adc
xor
je
adc
out
and
ret
popa
xor
xchg
loope
das
lret
insl
sub
cmp
mov
ret
mov
daa
addr16
mov
repz
loopne
push
test
push
inc
in
inc
cmpb
fldcw
popa
stos
stos
orb
fists
xchg
ss
sub
jae
sbb
mov
xchg
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
inc
sub
scas
adc
jno
sarb
push
mov
push
push
out
jl
int3
sbb
pop
in
cmpsl
and
xor
add
subb
dec
jg
xor
incb
sbb
movsl
rcrl
daa
dec
insb
sub
mov
xchg
mov
stos
jle
add
cmpsl
ret
cmp
cmp
push
aas
sbb
inc
pop
loopne
into
or
xor
in
cltd
test
mov
lret
mov
mov
pop
xchg
js
jbe
mov
jle
mov
scas
out
imul
add
push
sbb
xor
test
xlat
aam
orb
sbb
dec
sahf
xor
je
pusha
pop
and
push
sbb
xor
cmp
mov
or
fistps
adc
cmp
popf
lret
mov
adc
mulb
mov
rcrb
loopne
sahf
shlb
or
pop
hlt
ret
ds
lds
sub
or
mov
daa
jmp
repnz
xchg
rcrl
add
rcrb
xchg
stos
divb
xchg
xor
mov
sub
jnp
loopne
sbb
lcall
filds
movsl
aas
pop
cld
or
ja
test
popf
test
shlb
outsl
std
in
sbb
ret
mov
mov
push
pop
jecxz
imul
mov
adc
fldenv
jno
ret
popa
iretw
mov
and
ljmp
push
outsb
sbb
sti
andl
jl
arpl
adc
mov
leave
stc
xchg
out
adc
mov
pop
push
lock
jnp
rcl
out
popf
call
cmp
test
fcoms
inc
hlt
dec
dec
lock
mov
mov
cmpsb
jmp
push
rcrl
push
fidivrs
popf
loope
cmpl
pop
sbb
ss
jecxz
add
cwtl
push
fisubl
xlat
cmp
fisubl
lea
jae
mov
jbe
int
push
scas
rorl
sbb
sbb
xor
cmp
pop
fsubl
xchg
mov
test
sbb
mov
and
jle
sbbl
lods
xor
icebp
lock
test
and
testl
lods
add
lret
xlat
pop
iret
mov
mov
bound
ljmp
sbb
lds
andl
mov
lahf
sbb
cmpb
in
mov
cmp
lret
mov
fcomi
inc
mov
aaa
cmc
inc
xchg
fbld
aam
mov
test
or
in
outsb
mov
outsb
mov
push
loop
lds
shl
jbe
jmp
notb
mov
xchg
inc
mov
jb
cli
sar
mov
rcrb
dec
ret
rolb
enter
adc
rcl
cmp
sbb
jmp
fsts
test
mov
aas
aam
lds
ljmp
push
sub
mov
sbb
cld
out
xchg
cli
cmc
adc
das
mov
lret
push
push
ljmp
jnp
in
aas
aaa
in
dec
fwait
les
insl
lock
adc
cmpsl
test
pop
jl
mov
xor
dec
sub
pop
dec
mov
cmc
jno
popf
and
push
mov
dec
and
cmp
gs
add
pop
adc
je
xor
push
xchg
add
jae
int
push
xor
ja
cwtl
fsub
shrl
push
aas
jo
mov
fisubl
rep
adc
dec
addl
push
enter
cwtl
out
lret
lret
ficoml
mov
movsb
aam
addr16
or
sbb
sbb
sbb
push
rorb
xlat
aaa
jae
out
xchg
dec
and
pop
mov
pop
out
pop
loope
inc
mov
mov
cmp
pop
xlat
sbbb
flds
and
sbb
ds
mov
pop
push
lock
lea
mov
cvtps2pi
push
pop
mov
subl
inc
pushf
cmp
cs
sbb
add
dec
movsl
sbb
stos
add
movsl
inc
xor
pop
push
cmp
movsl
andl
mov
cmp
lods
sub
loop
fimuls
aas
int
xchg
stc
fidivrl
mov
sbb
jl
pop
popf
sub
jnp
and
xchg
pop
insb
call
out
xchg
movsb
jp
mov
mov
and
jle
dec
push
mov
fmuls
jo
pop
cmp
sub
pop
mov
rcl
dec
outsb
addr16
test
inc
mov
aam
imul
leave
sbb
or
mov
dec
adc
test
sub
int3
adc
xor
pop
shll
outsl
ljmp
push
inc
lret
sbb
mov
fsts
stos
sbb
popa
jo
or
mov
lds
iret
mov
lcall
sbb
xorl
cmpsb
cmp
or
mov
sub
pop
adc
enter
jnp
dec
and
jns
mov
lds
adc
mov
inc
push
add
movsb
pop
sbb
into
sub
inc
stc
xor
mov
movsl
sbb
in
repz
xor
xchg
dec
jns
push
inc
and
dec
push
push
movsb
fisttpll
pop
inc
sarl
mov
ljmp
mov
out
jmp
push
push
push
pop
stc
mov
mov
lods
lcall
enter
nop
pop
int
pushf
add
push
les
xor
mov
test
pop
pop
mov
aaa
jp
popa
pop
jns
frstor
mov
rep
jno
add
pop
je
inc
cmp
and
push
mov
fucomp
pop
dec
add
mov
popa
outsl
shrb
xor
pushw
jbe
dec
push
jl
not
adc
and
ss
in
mov
out
dec
test
push
mov
adc
imul
jo
push
ret
mov
mov
jae
loop
sbbb
cmp
mov
add
sub
scas
sub
jge
gs
xor
jge
add
outsl
iret
jae
dec
call
scas
or
xchg
sub
popf
jne
outsl
bound
mov
push
xor
jecxz
add
push
mov
in
fiaddl
mov
sbb
rclb
add
mov
dec
pop
push
jo
dec
inc
sbb
daa
hlt
adcb
fucomp
xchg
xorl
in
mov
xchg
add
stos
sub
data16
mov
out
ficoml
pop
ds
jl
sbb
mov
cmp
inc
cmp
stos
mov
xchg
or
push
inc
mov
cmpsl
xor
push
inc
pop
lods
daa
scas
cmp
call
and
xor
lods
sti
repnz
mov
testl
push
jl
fistps
xor
and
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
push
cli
adc
mov
or
pop
sub
mov
in
cltd
stos
popa
mov
nop
pop
test
out
lods
jecxz
out
adc
and
and
aad
rclb
into
mov
pop
loope,pt
imul
mov
xor
shrl
sbb
pop
jnp,pt
pop
in
mov
adc
sbb
pushf
lock
jmp
mov
mov
hlt
pop
mov
dec
incl
dec
dec
in
loope
dec
or
cmp
sti
in
out
xor
dec
push
mov
pushf
adc
xchg
mov
or
movsb
rolb
jmp
mov
ret
dec
push
in
mov
stos
adc
outsb
xchg
loopne
cmp
cmp
pop
push
cmp
scas
icebp
and
mov
orb
ficomps
add
pushf
xchg
frstor
loopne
fadds
add
pushf
inc
fs
ds
mov
pop
mov
mov
test
fldl
mov
lahf
test
bound
mov
mov
pop
mov
lods
add
jb
jge
mov
push
xchg
mov
pop
cmp
mov
out
dec
jl
in
daa
mov
sbbl
inc
push
adc
rolb
lods
sahf
clc
mov
aad
and
inc
dec
es
call
mov
mov
ljmp
imul
and
xchg
stos
push
ret
inc
repz
and
push
fimuls
cmp
jnp
pop
add
stos
pop
jecxz
xor
loopne
out
mov
aas
xor
mov
dec
xchg
and
inc
jle
mov
mov
jns
int
jmp
stc
xchg
push
repz
out
lods
adc
inc
stos
xchg
inc
aad
cmp
shrl
in
jp
ss
or
xlat
cmp
pop
adcb
orl
inc
cld
rcll
mov
fists
cs
fadds
repz
or
shlb
stos
arpl
mov
jo
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
