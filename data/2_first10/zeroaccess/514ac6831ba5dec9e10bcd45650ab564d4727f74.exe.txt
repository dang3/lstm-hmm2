push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
push
inc
push
jp
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
xchg
mov
daa
data16
lock
loope
stc
mov
nop
lret
sub
and
daa
push
xor
pop
or
iret
ret
lock
push
push
cmc
mov
mov
movsb
push
mov
mov
shl
pop
test
pop
lret
ss
scas
mov
xor
loope
jbe
in
inc
repz
jae
jne
sarb
imul
push
inc
rcrl
cmp
lret
and
aas
pop
filds
xchg
in
and
xchg
pop
int3
cwtl
mov
xchg
cmp
add
ret
sti
testl
ljmp
push
outsb
sbb
cmpsb
pushf
ret
inc
pop
stc
mov
push
cltd
leave
jno
pop
int3
adc
popa
dec
out
out
xor
push
out
mov
icebp
lret
leave
xchg
and
stos
out
push
inc
push
mov
ficoms
and
and
in
mov
loope
lret
sbb
pushfw
out
lret
loopne
push
dec
push
sbb
hlt
addr16
cmc
and
mov
sbb
mov
fidivrl
test
scas
dec
in
push
adc
jb
hlt
dec
gs
jns
xchg
mov
sahf
xchg
test
jle
hlt
adcl
js
stos
dec
in
data16
add
ljmp
pop
daa
pop
jp
push
xchg
mov
rclb
imul
inc
add
shr
insl
xor
add
cmp
jmp
xchg
cltd
and
push
or
popa
sbb
sub
mov
pop
mov
pushf
jl
lret
or
loop
or
cmp
and
or
inc
xchg
ret
sbb
push
call
out
fsub
add
inc
es
dec
sub
fcmovu
je
orb
add
jne
gs
icebp
lea
lahf
push
mov
jo
inc
adc
sbbb
xor
outsl
out
test
outsb
push
xor
out
bound
mov
lea
adc
mov
ficomps
scas
mov
mov
fldt
inc
mov
ret
mov
lods
jns
loopne
shr
imul
xor
imul
add
xchg
cmp
insb
jmp
push
sarl
mov
xchg
push
ret
roll
aad
into
jge
jne
add
divl
cmp
sbb
xor
pop
repnz
lcall
jbe
inc
addl
sbb
sub
xchg
xchg
out
inc
push
inc
loope
inc
loope
xorb
sti
xchg
test
sub
dec
lret
jns
in
or
jge
jmp
mov
xchg
into
mov
dec
sti
cmp
ficomps
test
mov
pop
andb
hlt
dec
lods
xchg
popa
insb
shl
and
jl
cmp
pop
into
ljmp
pop
add
sbb
pop
in
sti
jmp
xchg
pop
jno
das
fildll
adc
pop
imul
jae
sub
shl
pushf
dec
ljmp
jo
adc
out
xor
or
hlt
std
xor
xor
int
fwait
xchg
sbbl
lock
pusha
clc
out
mov
pop
loopne
rcr
fcomps
dec
dec
movsl
dec
enter
and
movl
in
addr16
xchg
jg
sbb
fisubs
imul
outsl
mov
lcall
mov
jle
imul
xchg
and
les
andb
jmp
mov
cld
jp
push
jns
jno
or
mov
and
jae
push
mov
add
dec
cltd
or
pop
add
icebp
rcrb
mov
add
in
dec
adc
pop
sub
jecxz
pop
daa
mov
push
scas
sub
xor
ss
das
adc
in
inc
je
pushf
insl
pop
sub
add
jmp
insl
cmp
lods
out
pop
leave
and
mov
lds
popa
mov
cld
push
aam
movsb
and
xchg
inc
loopne,pt
aam
xchg
mov
adc
push
push
ds
and
and
jb
and
ret
mull
fnsave
incl
das
stos
mov
xchg
mov
push
outsb
je
adc
adc
int3
mov
mov
clc
jbe
data16
repnz
mov
xchg
sub
loop
std
adc
push
dec
jle
mov
pop
jge
push
inc
cwtl
mov
or
xchg
xchg
mov
and
xchg
jp
push
xor
mov
idivb
out
les
jnp
mov
flds
xor
cs
jge
cmpsl
stos
aas
lret
xor
cmpsl
outsb
aaa
in
in
xor
jo
mov
mov
push
jns
mov
lret
push
xchg
dec
and
jne
adc
mov
dec
push
imul
or
lods
daa
push
and
mov
mov
add
repnz
inc
add
lock
push
lds
imul
sahf
xchg
divb
push
aad
push
movsl
sti
xor
leave
mov
adc
ror
mov
xchg
cmc
sub
lds
xchg
lea
cwtl
psrlw
inc
push
cmpsb
mov
popa
xchg
das
ret
jg
mov
pop
jbe
xchg
mov
data16
adc
sarl
ret
ret
and
and
sub
call
out
in
mov
adc
pop
data16
lret
jp
out
loope
les
sbb
sarl
test
xchg
push
test
and
xor
aam
adc
and
mov
out
mov
lods
cmp
fisttpl
repnz
xchg
cmpsl
es
popf
inc
adc
rclb
pop
scas
lea
mov
xchg
mov
mov
pop
sbb
mov
idivl
jge
sbb
outsb
insl
pushf
imul
xchg
sbb
fwait
or
daa
and
inc
cmp
push
insb
insb
xchg
mov
mov
loope
xor
cwtl
movsb
sub
ret
or
inc
xor
fnsave
stc
mov
lods
dec
adc
pmaddwd
sub
adc
out
push
jmp
push
in
fs
or
popa
es
lret
mov
fisubrl
fwait
not
jnp
pop
popa
add
mov
fiadds
in
push
cltd
mov
enter
mov
stos
push
add
sub
insb
and
and
aam
inc
adc
push
add
insb
dec
test
into
into
aas
out
lods
jl
push
jnp
mov
add
adc
cmp
mov
xor
sti
subl
popf
cli
pop
scas
daa
pop
and
sub
jmp
inc
mov
cltd
adc
jge
orb
dec
outsl
fcmovnbe
xor
mov
shl
pop
fldt
push
cld
jle
outsb
jge
xchg
mov
aam
loopne
or
incb
test
cs
cmp
push
repnz
jno
mov
dec
mov
cmpsb
shl
pop
jns
std
fsubrl
xchg
push
or
mov
mov
jmp
mov
mov
sbbb
mov
or
push
or
adc
or
enter
sbbl
dec
in
imul
inc
testb
inc
xchg
xchg
loop
scas
mov
movsb
adc
mov
or
dec
and
push
sarb
jecxz
out
call
orb
adc
mov
pusha
mov
sahf
ficompl
add
aas
movsl
push
cld
inc
inc
dec
clc
test
fsubrs
adc
sub
jecxz
jecxz
pop
push
fldpi
mov
pop
mov
inc
jno
mov
pop
scas
push
push
in
ret
jnp,pn
fs
test
jne
cmp
dec
adc
push
mov
loopne
rcl
call
pop
jno
dec
inc
or
xchg
aas
or
cmp
mov
or
leave
data16
inc
aam
sbb
jp
insb
loop
jno
jae
or
fsts
jo
lea
mov
or
sub
mov
mov
sub
dec
cmp
fwait
nop
mov
addr16
push
aaa
or
push
dec
lock
mov
push
or
call
mov
xor
push
mov
xchg
pushf
xchg
ror
bound
insb
sti
push
nop
push
cmp
out
aam
xchg
loope
lcall
in
stc
mov
dec
push
push
push
mov
in
push
sar
or
jmp
clc
dec
xor
mov
clc
jg
and
jb
loopne
push
jle
sub
cmp
mov
clc
adc
push
sub
std
aas
cwtl
loopne
xchg
or
mov
aas
fisubrs
jae
js
andl
insb
add
jno
stos
ret
fdivr
mov
jl
js
or
testb
mov
xor
aaa
aaa
dec
pusha
jb
in
cltd
mov
pushf
dec
lock
movl
inc
mov
mov
lgs
loope
std
neg
cmp
icebp
inc
jb
xchg
les
push
icebp
dec
dec
shll
test
sar
aad
cltd
loopne
loope
xchg
sbb
je
jno
dec
std
cmp
ja
fwait
fs
inc
int3
ss
cmp
adc
push
cmp
jecxz
loopne
ror
lcall
clc
jecxz
fwait
mov
push
inc
enter
inc
mov
loop
shrl
repz
fcmovnu
dec
jmp
mov
dec
adc
push
jae
pusha
insb
out
jmp
lods
test
insb
dec
mov
leave
loope
pop
sub
jne
in
pop
dec
jno
fucomi
shlb
les
xor
sbb
fsubrs
push
pop
stc
repnz
leave
lret
jl
push
fwait
outsl
push
add
ret
into
std
jno
xor
in
cmpsb
mov
xchg
in
jl
mov
adc
lods
loope
mov
test
add
inc
pop
pop
in
mov
nop
add
fldt
lods
cld
loop
or
and
sbb
sahf
mov
pop
cmp
mov
cmpsl
jo
jbe
cltd
inc
popf
mov
and
cmpsb
scas
mov
adc
fadd
sti
mov
dec
pop
add
xchg
jnp
test
add
ret
pop
adc
push
clc
cmp
inc
and
push
clc
and
xor
cmpsb
in
push
es
mov
sbb
xchg
xor
mov
aaa
mov
movsb
push
sub
fcom
push
test
idivb
lock
mov
xor
xchg
nop
cmp
add
jecxz
movsb
inc
jo
jbe
insl
ljmp
cmp
dec
fwait
pop
xchg
aad
xchg
cmc
imul
cmp
dec
std
and
adc
fists
or
push
inc
lods
insl
ds
dec
jp
mov
inc
fmul
mov
insl
in
jg
ja
pop
cmpsl
jg
sbb
test
ror
mov
jb
sbb
push
adc
and
adc
lock
sbb
jb
inc
mov
xchg
push
push
pop
and
stos
int
pushf
popf
jle
xchg
mov
xor
sbb
push
xchg
push
and
mov
ja
xor
popa
popf
jle
push
dec
cmp
sbb
fimull
adc
jmp
out
es
lret
cmp
xchg
xor
out
sbbl
mov
push
rclb
push
in
mov
iret
and
not
pop
or
clc
xor
repz
popa
test
pop
pop
cltd
inc
mov
xor
ret
das
sbb
leave
jae
pop
sbb
in
inc
fcoms
outsl
aam
push
shll
cld
or
sbb
insb
scas
mov
jo
xchg
or
jge
enter
pop
sub
rolb
pop
or
int
fstpt
jns
xchg
pusha
decl
outsb
aas
mov
pop
cmp
add
cmp
jg
ret
leave
adc
sub
sub
jecxz
cmp
scas
mov
mov
test
sbb
push
inc
or
popf
and
int3
and
push
leave
dec
xchg
sbb
push
cld
and
inc
stos
pop
out
addr16
or
leave
enter
mov
mov
arpl
dec
jge
shll
xchg
mov
push
xor
pop
outsb
shrb
gs
subb
gs
inc
imul
add
aad
aad
daa
nop
push
ja
sbb
push
aas
es
rolb
or
rcrb
inc
lret
mov
loopne
add
jbe
inc
cli
mov
inc
jp
scas
push
jmp
sbb
inc
int
inc
jo
push
cli
add
mov
xchg
xchg
cmpsl
xor
push
lret
mov
out
mov
adc
je
cmp
mov
adc
dec
lock
aas
and
fadds
push
repnz
pop
push
std
int
jae
mov
in
ret
mov
enter
cmpsb
lcall
pop
hlt
shr
push
mov
cwtl
jns
xor
aaa
xor
sub
adc
mov
mov
sub
pop
out
mov
out
out
cs
mov
sbb
push
mulb
xchg
sub
lret
fnstsw
push
inc
sbb
pop
adc
xchg
pop
inc
fidivs
movaps
and
lret
stos
adc
pop
jo
mov
movsb
scas
or
pop
pop
out
xchg
push
call
daa
jmp
scas
aam
mov
mov
pop
adc
jge
mov
cmp
das
push
stos
orb
pop
adc
sub
jl
nop
imulb
cltd
roll
fistps
enter
mov
pushf
pop
cmp
mov
pop
xor
aad
mov
mov
xchg
xor
push
je
daa
testb
pop
test
adc
out
xchg
test
movsb
leave
icebp
jo
add
lret
setbe
push
cmp
cmp
repz
test
fisttps
lret
hlt
jl
jl
dec
addb
xchg
pop
pop
negl
mov
pop
mov
jle
rol
dec
insl
and
adc
xor
cmp
mov
xor
push
je
call
jle
loope
cmp
test
inc
icebp
sbb
popf
mov
rcrl
jno
addr16
mulb
inc
push
inc
and
cmpsb
rcrl
mov
test
sbb
ljmp
mov
and
lods
pop
adcl
loop
popf
mov
mov
pushf
sbb
leave
mov
or
xor
clc
sbb
push
enter
repnz
add
xchg
sti
outsl
jecxz
or
fwait
xchg
aam
jne
je
loope
testl
push
icebp
imul
dec
mov
aad
push
or
push
cli
lock
jecxz
jne
mov
add
xorb
pop
insl
add
and
push
xor
push
aas
xchg
sti
inc
ja
mov
inc
lahf
mov
out
push
add
jg
push
popf
fcmovb
push
jb
xchg
mov
leave
cmp
mov
jecxz
cmp
lods
ret
xorb
cmp
sub
cld
fdivl
add
add
and
andb
leave
fisttpl
lock
leave
pop
xchg
mov
cmp
push
push
ljmp
sub
loopne
sbb
xor
push
dec
loop
hlt
mov
ret
mov
lcall
sbb
fidivrs
jge
dec
and
in
fstpl
je
add
imul
les
addr16
ss
jl
movsl
or
iret
inc
fsubrl
mov
or
movsl
imul
mov
inc
and
out
ds
test
rcrb
mov
pop
cmp
mov
ss
cmp
push
mov
ret
xchg
pop
xor
mov
or
fnstsw
popf
shll
lea
and
test
ljmp
rcrl
stc
mov
xchg
movb
arpl
cmpsb
clc
adc
pop
jp
andb
sbb
push
pop
popf
out
mov
mov
repnz
and
adc
scas
ljmp
popf
pop
mov
call
sbb
jp
sub
dec
cli
fs
dec
or
jecxz
out
sub
mull
js
push
lods
pusha
and
mov
jg
xor
andb
cmpsb
scas
lret
pushf
or
test
jo
fbld
popf
push
out
pop
stos
call
int
sub
adc
add
xor
fimuls
stos
clc
scas
mov
sarb
xchg
dec
movsb
lcall
pop
sub
aam
scas
fistpl
xor
pop
call
nop
outsb
lds
push
leave
les
popa
enter
arpl
xchg
dec
subl
loope
xor
out
iret
sti
dec
stos
mov
cmp
push
sub
mov
xchg
outsb
push
xor
test
jno
push
sti
mov
pop
loopne
test
data16
pop
adc
outsl
pop
mov
or
js
push
loope
movsb
insl
xor
es
jg
adc
adc
pop
bound
jecxz
mov
daa
fisubrs
mov
xchg
movsl
out
cmc
scas
stc
ficoms
xchg
popf
scas
sbb
dec
jno
pop
xchg
add
adc
ret
mov
mov
dec
call
sti
xor
fldenv
into
pusha
es
gs
pop
ret
xchg
in
or
inc
cmp
push
jge
subl
mov
jns
add
movlps
and
adc
cmp
inc
icebp
push
loopne
hlt
icebp
pop
cmp
int
sbb
add
adc
mov
divb
adc
pop
xlat
insb
add
das
fwait
push
sub
arpl
outsb
add
push
cmp
test
je
loop
pop
mov
sub
mov
ljmp
push
cmp
shlb
xor
mov
pop
dec
push
ret
inc
out
mov
add
dec
push
cwtl
mov
xor
xchg
loopne
pmulhw
int3
dec
jb
ret
jbe
push
dec
pslld
adc
daa
lret
adc
xchg
sub
mov
pop
xchg
adc
mov
shl
mov
icebp
mov
les
sub
inc
cs
fwait
subb
push
jo
je
std
mov
add
mov
mov
mov
xchg
ss
adc
add
and
or
sbb
out
pushf
jg
fmul
in
dec
leave
ret
cmp
mov
js
pop
inc
lahf
stc
mov
inc
lock
push
pop
inc
xchg
pusha
xchg
addl
lcall
rcll
outsb
jno
aad
in
andl
add
loop
sahf
popf
push
lds
inc
xchg
mov
imul
and
movsl
fcoml
popf
fiaddl
dec
add
popa
sarl
or
pop
in
cmp
inc
or
mov
popf
rorb
sub
clc
pop
aas
add
dec
or
sbb
pop
je
loope
filds
call
and
push
push
xor
mov
outsl
push
jns
xlat
popa
test
inc
mov
fildll
mov
push
enter
mov
fidivrl
cs
lahf
test
mov
fimull
pop
cld
mov
mov
paddw
mov
call
out
adc
inc
jg
dec
and
popf
pusha
pop
enter
lods
lea
push
cmp
add
xor
and
mov
das
xor
jnp
out
aad
dec
push
mov
bound
dec
addr16
dec
add
sbb
pop
notb
push
scas
daa
pop
or
inc
dec
cld
sti
comiss
rcrl
rcrb
sub
jbe
mov
cmp
inc
or
xchg
icebp
fcoml
mov
stos
add
sub
xchg
push
pop
xor
ret
fldcw
mov
xchg
xchg
ljmp
sub
ret
xor
ljmp
pop
pop
pop
std
sahf
mov
ret
stc
das
and
jbe
xchg
int3
test
adc
movsb
arpl
enter
xchg
shrb
scas
mov
hlt
addr16
mov
or
out
loope
xchg
out
push
mov
outsl
cmpsb
stos
pushf
push
daa
sbb
mov
dec
enter
inc
jns
movsl
fwait
inc
mov
or
push
push
jns
push
inc
js
add
enter
cld
leave
in
mov
rorl
es
sbb
mov
in
pop
mov
fldt
fs
push
mov
imul
jnp
into
adc
mov
jecxz
push
cmc
jns
aaa
outsb
xor
jg
dec
stos
roll
scas
or
cmp
imul
xchg
mov
xor
pop
jnp
jo
aam
stos
jecxz
xchg
mov
mov
mov
imul
fstpt
and
mov
and
je
pop
jle
dec
mov
xchg
rorb
mov
fucomip
mov
fwait
mov
or
sbb
xchg
push
vandnps
inc
imulb
adc
pop
pushf
lock
in
pop
enter
clc
push
nop
fsubrl
xchg
dec
int
imul
imul
sub
mov
int
insl
sbbl
gs
xchg
ljmp
jge
and
outsl
push
fcmove
das
jge
sar
inc
mov
jbe
icebp
mov
mov
cmp
cmpsl
lret
mov
dec
js
sbb
loop
cmp
jl
pop
pop
or
sub
push
mov
pop
rorb
jg
scas
mov
fstpl
jo
push
jns
jbe
lret
adc
sarl
addr16
inc
frstor
mov
leave
out
pop
sbb
lock
mov
cmpsl
cmp
into
std
mov
mov
repz
repz
ret
das
adc
nop
adc
cmpsl
sub
inc
out
std
cmpsb
sbb
sbb
fbstp
out
xor
and
dec
cmp
insl
loopne
xor
inc
aad
sti
std
cmpsb
push
xchg
mov
xchg
pop
lret
rol
sub
sbb
adc
aaa
xchg
loop
push
das
cmc
outsw
decl
xchg
lds
or
cmp
cli
es
inc
jae
push
xor
rorb
outsb
xchg
mov
in
subl
ss
adc
dec
test
xchg
out
xlat
daa
push
dec
mov
push
int
ds
dec
push
repz
adcb
sbbl
push
xor
cmpb
pop
das
scas
mov
inc
in
das
inc
or
dec
aam
and
inc
jne
call
loop
dec
pop
lcall
imul
gs
imul
repnz
mov
jns
cld
stos
imul
fldl
push
sarb
imul
pop
lahf
out
fwait
test
xchg
add
lock
test
shll
sub
jl
cmc
sub
pusha
pop
push
in
lahf
xchg
sbb
cwtl
mov
sub
repnz
enter
push
mov
fnstsw
es
inc
scas
add
jb
add
inc
cmp
inc
push
add
or
xchg
pop
popf
pop
jbe
cmp
lea
push
push
mov
cli
jl
sbb
or
dec
jmp
jne
out
push
mov
stos
daa
or
xchg
insb
bound
lods
dec
in
fmulp
mov
int
pop
popf
mov
lods
out
pusha
rorl
pop
std
push
fwait
jae
inc
or
movsl
scas
jne
pop
mov
ljmp
divb
into
lahf
mov
ljmp
or
data16
pop
stc
sub
iret
stos
push
iret
cmpsl
ja
jno
into
test
lea
dec
leave
cmp
in
decb
ret
mov
and
xor
test
sbb
addb
in
inc
sub
outsl
xor
xchg
xchg
fs
push
adc
loop
push
fwait
rolb
mov
ss
xchg
cld
sbb
loop
gs
cmp
cmpsl
sahf
fwait
sarl
mov
arpl
icebp
add
jae
icebp
dec
or
pusha
divb
imul
cmpsb
mov
stos
scas
iret
sbb
pop
cmc
add
sbb
orl
cmc
dec
push
mov
fadds
pop
inc
ret
addr16
cltd
aaa
adc
daa
test
adc
add
data16
rep
mov
xchg
sub
out
mov
xchg
or
or
cmp
xor
pop
shll
mov
jnp
fstpl
xchg
hlt
jmp
call
in
mov
fcoml
dec
out
adc
mov
jle
enter
pusha
push
sub
mov
pop
adc
repnz
cmpsl
test
rolb
ret
loopne
cld
cmp
outsb
insb
hlt
int
adc
dec
lds
sbb
fwait
mov
or
sbb
push
xor
adc
inc
jae
push
cwtl
pop
adc
xchg
flds
ret
xlat
jg
sbb
iret
push
mov
sbb
sub
dec
shll
mov
sub
in
ds
cld
jbe
enter
pand
push
sub
test
cmpsl
adc
scas
cmpsb
lock
pop
or
push
jbe
arpl
ret
pop
pop
lds
or
xchg
lea
sbb
gs
mov
fldenv
dec
xlat
aad
iret
adc
add
stc
lods
push
or
and
mov
sbb
mov
fs
push
xor
imul
ja
dec
pop
popf
es
cmp
add
insb
in
ja
in
sub
mov
ds
fbld
fsubrs
inc
dec
cld
jo
nop
mov
inc
push
out
ljmp
rcr
loopne
jae
sub
pop
adc
lcall
lret
inc
and
mov
int3
rolb
mov
into
je
xor
add
not
nop
pushf
mov
ljmp
movsl
fisubrs
fsubrs
and
lret
mov
mov
imul
xchg
mov
lods
in
jl
cld
jle
or
or
fwait
mov
push
push
mov
add
cmc
cs
mov
pusha
out
les
fs
mov
adc
push
sahf
jle
cmc
dec
jl
test
or
sbb
outsl
cmp
pop
jmp
jp
xchg
pusha
mov
jecxz
sbb
dec
outsl
cwtl
outsb
push
dec
jbe
popa
scas
mov
sub
cmc
in
push
pop
jne
cmp
in
sbb
jnp
out
cmpsl
arpl
pop
dec
mov
mov
arpl
mov
loopne
mov
jno
dec
mov
aaa
sbb
popa
cld
int3
xor
push
rcrb
jae
sbb
sub
cmp
mov
pop
and
cmc
adc
lret
mov
pop
mov
leave
cmp
dec
shll
push
test
fcompl
aam
add
inc
in
sbb
jae
mov
mov
outsl
pop
out
mov
add
xchg
mov
cmp
sbb
pop
dec
int3
nop
pop
incl
test
xlat
inc
inc
mov
jge
sti
xchg
push
mov
adc
jo
nop
sti
sub
cmp
jbe
pop
sbb
rolb
dec
cmp
movsl
outsb
inc
fcmovnu
add
mov
aas
repnz
xor
mov
lds
lods
cmpsb
icebp
lods
jp
mov
repz
enter
jns
pop
pop
mov
in
mov
roll
insb
std
je
ss
adc
gs
cwtl
out
in
adc
aaa
add
pop
adc
mov
jbe
lcall
fdivl
or
push
icebp
xlat
ss
inc
mov
adc
cmp
mov
nop
inc
cmp
shlb
jbe
shlb
xlat
negl
or
leave
outsb
sbb
imul
pop
xlat
pop
shlb
repnz
call
ss
out
fiadds
cmp
mov
rorl
pop
ljmp
mov
jns
xlat
cmp
cmc
mov
dec
pop
loopne
imul
les
mov
cmpsb
pushf
ja
and
imul
stc
jnp
xchg
jle
icebp
xor
jb
sub
popf
daa
mov
addr16
add
outsl
sub
adc
pop
and
loop
ret
dec
xchg
cmp
dec
mov
into
and
in
jno
cwtl
pop
mov
test
inc
mov
fnstcw
setge
push
dec
xchg
mov
cs
xchg
or
add
lock
ljmp
cmp
xchg
cmc
ret
push
push
jnp
cltd
es
mov
cmpsl
jns
pop
out
lods
subl
or
in
lret
je
and
push
sarl
fistl
test
pusha
cmp
das
cld
cmc
mov
lcall
mov
aam
fbld
stos
pushf
lret
sbb
fneni(8087
push
lcall
repnz
jns
jl
imul
in
adc
movsb
shlb
lret
popa
xchg
scas
push
mov
fldenv
negb
adc
adc
sub
xor
adc
sub
or
mov
xor
adc
dec
insl
mov
in
cmpsl
jmp
arpl
mov
push
outsl
jp
mov
cmpsb
jbe
or
push
data16
sub
test
jecxz
and
or
in
mov
sbb
xor
pusha
popa
sub
jno
xchg
jb
jle
xchg
jmp
std
ret
loopne
or
loop
rcr
andb
adc
push
push
aaa
gs
lret
push
push
sub
test
imul
ret
pusha
fwait
mov
xchg
mov
sbb
push
mov
mov
jge
and
push
hlt
ss
lods
mov
shll
ljmp
mov
cmp
push
and
jo
adc
lret
in
pusha
add
and
les
jmp
push
cli
int3
inc
pop
rcll
and
ret
adc
call
in
xor
leave
dec
rol
pop
ret
fisttps
cmpsl
or
notl
icebp
sbb
les
stos
call
loope
sti
out
les
or
iret
and
aas
loope
int3
fcomps
ss
and
nop
cwtl
sub
lcall
sub
cli
mov
mov
sar
or
or
xchg
in
mov
cmpsb
add
test
scas
inc
aam
push
and
and
mov
sarl
cmp
das
sbbl
sub
scas
sbbw
push
jo
arpl
out
fsts
push
dec
sahf
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
fsubs
pop
jp
std
mov
xchg
mov
cmp
inc
stos
mov
mov
std
rcrb
cmp
cmp
mov
imul
ficoms
mov
in
xchg
loopne
imul
add
xchg
fstl
test
jno
pop
and
pop
fwait
cli
ljmp
nop
loopne
cli
xor
push
test
mov
push
sbb
scas
push
daa
push
call
pop
dec
testb
aam
out
mov
loopne
push
inc
push
mov
add
xchg
push
call
sbb
loope
xchg
pop
pop
jl
outsl
mov
push
push
cs
insl
mov
out
push
xor
rcrb
inc
mov
in
das
daa
std
inc
test
and
mov
in
push
xlat
imul
push
fildl
cld
insl
mov
aam
jo
aad
jmp
xchg
inc
push
in
imul
and
imul
jmp
imul
mov
inc
repz
out
push
aas
icebp
add
shlb
nop
xor
add
xchg
stos
inc
mov
stos
daa
sahf
xchg
fucomp
lret
imulb
icebp
mov
inc
bound
arpl
cld
arpl
ret
xor
mov
js
cmp
sarl
aad
inc
subl
jp
mov
jmp
inc
scas
ds
push
fwait
xor
dec
jle
mov
loope
mov
cwtl
sub
sti
daa
pop
movsb
xlat
mov
lcall
push
call
push
inc
mov
fisubrs
cs
subl
fs
stc
lret
pop
lods
cltd
sub
dec
cld
or
adc
stos
fbld
insl
aaa
push
and
or
ja
jb
sbb
fistl
sub
and
testb
and
pop
inc
xor
push
push
popf
sub
mov
inc
inc
inc
mov
inc
pushf
cld
push
xchg
clc
imul
rolb
rorl
mov
pop
pop
inc
mov
js
xorb
loope
stos
inc
mov
enter
dec
and
pop
inc
scas
dec
xchg
das
test
cmp
jecxz
lds
test
sbb
pop
push
stos
xorb
das
xor
or
insl
mov
enter
lods
cmp
jo
xchg
aaa
jecxz
inc
mov
add
inc
out
inc
ja
mov
fmuls
pop
dec
or
ss
pop
push
mov
pop
mov
pop
jmp
push
stos
cmp
mov
lahf
xchg
test
cmp
cmpl
std
jge
les
and
cli
xchg
adcb
push
and
test
jnp
or
pop
pop
int
sub
push
movsb
mov
pop
and
sti
adc
cwtl
and
fdecstp
aad
dec
in
int3
out
test
scas
loope
xor
mov
add
sti
xchg
xchg
outsl
jb
pop
aaa
repz
sahf
jg
adc
sub
mov
sbb
lret
in
les
into
dec
divl
in
pop
insb
ds
imul
in
frstpm(287
mov
mov
call
dec
push
fisubrl
popa
xchg
xor
or
pop
inc
jecxz
mov
mov
inc
pop
or
repz
lea
lds
test
sub
push
movsl
jecxz
loopne
sbb
jp
enter
shlb
aaa
bound
sbb
daa
loope
cmp
sahf
fistl
push
mov
fwait
lock
shrb
pop
data16
lahf
inc
idivl
cmpsl
xchg
xor
fs
stos
imul
sub
mov
leave
jns
push
xchg
sbb
and
js
ljmp
or
daa
jo
test
push
in
xor
and
ret
xchg
xchg
rcll
cld
cwtl
mov
icebp
xchg
jne
inc
mov
fadd
and
scas
ds
jno
dec
xor
pop
in
leave
and
xor
mov
mov
mov
and
cwtl
jmp
cs
add
dec
hlt
add
lods
mov
hlt
xchg
dec
subb
movsl
push
clc
cli
cmp
pop
test
or
sbb
sub
jl
jnp
or
fidivrs
adc
mov
add
std
cmp
out
cld
cmc
or
mov
xchg
sub
in
stos
out
pop
std
or
mov
jle
inc
lret
aas
rol
cmp
xchg
mov
movsb
sti
mov
and
mov
inc
add
xlat
add
imul
lock
pop
cmpsl
xchg
sub
xchg
or
fwait
jae
fsubrl
outsl
out
mov
jbe
adc
dec
adc
in
sbb
push
push
cmp
push
jge
aad
xor
subl
inc
cmp
insb
dec
push
cmp
test
outsb
arpl
xchg
sub
inc
mov
out
mov
pop
sbb
mov
fmul
roll
pop
cmp
xchg
std
sbb
or
cmpsb
call
add
repz
xor
sub
loopne
dec
mov
ja
ret
xor
pop
loopne
cmp
es
mov
lret
stc
clc
lahf
nop
xor
xchg
dec
push
inc
pop
inc
fwait
or
into
add
or
or
jbe
push
mov
add
push
mov
or
sahf
movsb
loop
xor
jae
call
in
hlt
subb
clc
jmp
jp
movsl
jbe
xchg
push
jle
push
mov
ss
sbb
xchg
cmp
ror
adc
cmp
pushf
cli
jb,pn
xchg
inc
fstpl
xchg
pop
negl
xchg
lds
mov
jo
add
cmpsl
inc
repz
cmpsb
icebp
xchg
ret
cmpsl
pop
es
pop
push
leave
popf
cli
xor
call
cmp
push
push
cmp
test
add
push
test
cmp
int3
dec
ret
mov
out
push
dec
std
jo
sahf
inc
mov
mov
or
push
lods
xchg
jp
test
jno
push
lods
call
scas
mov
loop
push
fbld
and
add
rorl
pusha
pop
push
cmp
xchg
push
cmp
adc
or
shrb
fildl
out
lret
in
jmp
jge
sub
pop
jecxz
loopne
mov
adc
shlb
loope
outsl
inc
stc
stos
or
rcrl
lea
mov
cs
aad
adc
add
lock
repz
mov
stc
pop
push
lods
inc
mov
cmp
sub
adc
mov
pop
lods
inc
lock
inc
dec
sbb
mov
ret
sbb
jp
push
loope
fcom
cld
cs
ficompl
bound
jle
sahf
mov
int
scas
enter
cwtl
lar
fdivrp
sub
dec
mov
add
les
jmp
pop
cmc
cmp
xor
stc
add
xchg
add
jp
jg
mov
rcrb
lds
adc
mov
cmp
bound
pop
xchg
pop
push
xchg
sbb
rol
inc
sbb
push
out
rep
inc
movsb
addr16
xor
xchg
fcompl
fistl
addr16
pop
mov
cmp
xchg
and
in
cli
push
aaa
xor
or
pop
mov
mov
mull
push
sbb
jmp
cwtl
data16
pop
mov
aas
jl
mov
out
dec
stos
test
lds
shl
push
outsl
aaa
fwait
jae
data16
mov
shrl
fstps
mov
lods
decb
lcall
sub
pop
adc
movsb
cmc
data16
idivl
pop
push
inc
movsl
dec
roll
inc
imul
xor
jge
cs
adc
push
or
or
mov
das
mov
test
fisubrl
sub
cs
lods
xchg
cmp
mov
cmp
bound
cmp
gs
shll
adc
add
pop
sub
mov
push
loope
and
or
xor
pop
and
xlat
dec
jg
sbb
das
xchg
cmpsb
or
mov
jae
test
mov
lret
ljmp
jmp
add
aas
jp
cltd
xchg
pop
jmp
sbb
lahf
pop
jae
add
das
mov
mov
les
adc
adc
xchg
jecxz
pop
aad
dec
test
xchg
or
xor
repnz
jmp
jl
jg
push
pop
fnsave
jnp
addr16
cs
add
cmc
decb
loope
into
inc
outsb
cmc
jnp
shr
jg
lahf
stc
in
repnz
int
int3
loope
pop
test
dec
xchg
aas
mov
cwtl
fldcw
fsts
pushf
mov
push
mov
inc
xor
loope
xlat
mov
sbb
mov
lcall
sub
push
mov
repz
xchg
scas
imul
mov
mov
lods
jno
lods
add
pop
pop
push
in
stos
add
cmpl
xchg
scas
jge
je
fcoms
mov
xorl
mov
in
jo
scas
mov
or
sub
jl
adc
inc
fidivs
mov
jp
dec
cmp
jb
sub
mov
out
gs
lcall
dec
imul
aam
push
dec
xchg
popf
add
aas
xor
out
popf
lock
sub
into
sti
jbe
fdivrp
fisttpl
dec
mov
movsl
dec
pop
mov
and
lahf
push
cmp
dec
je
jae
jne
in
xlat
sub
cld
adc
arpl
test
and
add
mov
dec
stos
xor
mov
push
repnz
sub
shrb
fistl
sahf
scas
ret
mov
je
pop
mov
lahf
dec
aaa
loopne
inc
rcr
test
lcall
mov
adc
add
dec
mov
cmpsl
ss
inc
dec
mov
popf
jge
mul
sbbl
dec
sarb
test
das
test
aad
pop
mov
in
ret
stc
pusha
lds
popf
aad
or
cwtl
pop
pop
inc
inc
loop
sahf
ja
or
data16
mov
fildl
out
xchg
mov
cmp
cmp
enter
mov
mov
cmpl
movsl
and
pushf
pop
repnz
stc
fnstsw
jge
sub
lock
xchg
lea
imul
xor
xchg
out
push
and
mov
insb
call
iret
lock
xchg
ret
ffree
cmp
sar
in
roll
nop
and
mov
pushf
cmp
xchg
cmp
lret
or
ror
sar
ret
mov
push
jp
lds
icebp
mov
cmpsb
or
sahf
das
xchg
jle
je
imul
mov
inc
xchg
xor
in
insl
jge
fdivrs
incl
add
adc
sbb
add
lcall
jp
cmp
dec
notl
pop
xor
dec
mov
adcl
mov
pop
mov
push
sub
scas
xchg
fldcw
mov
pop
rcrl
out
jno
call
and
inc
and
out
outsb
pushf
jnp
scas
jo
ljmp
add
dec
pusha
pop
inc
bound
lods
test
in
inc
xor
mov
mov
in
imul
jae
adc
lcall
adc
nop
lahf
fcomi
mov
cmp
xlat
mov
dec
dec
cvttps2pi
mov
and
cmp
ret
out
repz
loopne
rcl
ja
int
ss
mov
sub
add
mov
xor
jne
nop
add
sbb
sarb
jb
stos
mov
or
loop
div
jmp
faddp
push
sarb
inc
jle
jl
repnz
andl
inc
shlb
andb
dec
dec
or
test
stos
add
and
lret
sub
mov
sbb
into
stos
es
lods
cmpsb
arpl
in
xor
jae
int
lods
xor
push
dec
sub
std
cli
push
add
and
jnp
lret
or
shlb
jno
add
rclb
jno
cmp
lods
pop
push
xchg
imul
jb
sbb
sbb
mov
repnz
call
jge
mov
jae
add
pop
xchg
outsl
mov
inc
dec
pop
add
dec
pop
sub
std
sbb
pop
fdivrp
mov
out
stos
xchg
mov
test
test
aaa
push
mov
push
jge
dec
xchg
pushl
push
pop
std
test
dec
popf
sbb
ret
ret
dec
ret
pushl
xorb
hlt
sbb
dec
jle
inc
ds
lahf
cmpsl
pop
loope
sub
add
in
imul
ss
call
add
mov
stc
into
jmp
loop
mov
cmp
pop
shrl
jmp
jb
cld
lock
mov
xchg
sbb
rclb
cwtl
jp
inc
ret
add
adc
lret
in
data16
and
pop
cmpsb
inc
cmp
inc
mov
lcall
mov
jecxz
cli
cli
inc
in
shlb
fsubrs
or
xor
out
leave
lock
mov
lods
jns
sbb
inc
xchg
push
int3
fisubrl
xor
lods
sbb
call
jmp
mov
aad
mov
jg
jb
cmpb
in
sbb
cmpsl
fidivs
lahf
dec
loopne
add
aad
xor
in
push
cltd
in
gs
dec
out
mov
test
push
mov
mov
incb
dec
movsb
nop
aaa
pop
dec
pusha
cmpl
mov
push
mov
out
lret
xchg
rcrb
mov
lea
aam
mov
in
clc
aad
test
push
test
imul
movsb
xor
ljmp
rorb
in
push
jnp
test
pop
into
inc
rcll
jb
xchg
sub
push
fdivs
in
add
mov
mov
jne
cmp
out
shrb
out
mov
xchg
mov
sub
push
adc
insb
or
lea
and
nop
lret
into
and
push
ds
xchg
mov
dec
push
sub
into
iret
cmc
lods
and
xchg
movsl
push
inc
aas
outsb
movsl
aas
sbb
loope
into
mov
bound
std
pusha
add
sub
dec
mov
mov
jmp
push
mov
push
inc
xor
add
prefetch
or
rcrl
lods
inc
inc
mov
aad
mov
cmp
adc
enter
jno
inc
xchg
inc
adc
sub
xlat
cmp
mov
mov
jno
stos
xchg
push
cwtl
and
fldt
lods
ss
push
push
jnp
insl
sub
push
hlt
les
ret
or
je
call
xchg
orb
adc
in
sahf
mov
stc
xchg
pop
or
jl
cmpsb
je
nop
idivl
push
sbb
fdivl
or
out
addl
pushf
stc
shlb
pop
int
mov
xchg
into
testb
jno
subl
push
into
or
int
and
cmc
hlt
pop
frstor
push
mov
repz
lret
dec
fldl
data16
mov
arpl
scas
lret
cs
fadd
xchg
sbb
cmp
pusha
nopl
dec
dec
cli
in
outsl
sub
lds
int
dec
and
je
scas
mov
push
outsl
lcall
dec
inc
xchg
insl
hlt
aaa
test
jmp
orb
pop
aaa
shll
aam
repnz
pop
int
and
xor
inc
cld
popf
loopne
and
inc
hlt
jg
jb
cmp
testb
pop
test
adcb
and
jnp
xor
aad
ds
imul
scas
scas
in
repz
fwait
pop
insl
adc
and
out
jnp
imul
stos
jmp
dec
jb
and
sbb
mov
push
xlat
rcll
leave
cld
mov
pop
test
stos
mov
push
sub
rclb
mov
xorb
repz
push
jecxz
inc
shr
leave
sub
sti
out
lret
sbb
push
lret
sar
sub
xor
jnp
push
stos
xchg
push
dec
es
decl
mov
scas
in
inc
add
adc
sub
mov
cld
arpl
ja
inc
push
ret
sbb
out
pop
sub
je
jge
insl
insb
ja
movaps
sbb
jge
and
or
dec
sahf
xchg
sti
inc
fadd
into
and
ficoms
add
sbb
lds
int
out
jg
jge
into
sbb
or
xchg
cmp
inc
pop
pop
test
push
mov
adc
iret
cmpsl
pop
push
pop
mov
pop
loop
fisubrl
cmp
gs
push
ffree
or
movsb
in
aas
xor
adc
pop
dec
lret
jl
mov
int3
sbb
jg
in
scas
out
xchg
fdivr
adc
stos
mov
mov
jo,pn
dec
loopne
stc
push
or
mov
jecxz
inc
sbb
add
icebp
ret
dec
mov
movsb
shrl
scas
jp
sub
jbe
dec
pop
and
fisttpll
xor
cwtl
xor
loop
xor
outsb
dec
sti
psubusb
data16
push
sbb
ret
xchg
cmp
mov
or
outsb
out
nop
test
out
and
mov
sbb
dec
xor
or
aaa
adc
daa
push
jge
fistpl
and
adc
outsl
pop
in
es
test
xor
ljmp
sbb
mov
dec
enter
aam
inc
call
mov
imul
js
insb
push
add
push
mov
lret
push
es
out
lds
inc
mov
mov
add
mov
sub
sub
mov
dec
in
or
out
sbb
mov
hlt
je
bound
xchg
sub
rcl
xchg
stos
cwtl
out
out
ja
mov
dec
sahf
gs
sbb
adc
lcall
jl
and
cmpsb
out
cmp
jno
jle
fisttpl
dec
aad
imul
arpl
xchg
in
ja
mov
or
rcrb
mov
fs
xor
jecxz
inc
push
bound
jmp
mov
mov
push
dec
repnz
js
cli
push
cmc
shrb
out
xchg
ss
icebp
scas
mov
fidivrl
jbe
iret
lcall
sbb
in
imul
inc
decl
repnz
mov
fistps
pop
mov
pminub
push
inc
in
jl
js
sub
rcrl
mov
out
test
outsl
sub
inc
sbb
sub
scas
xlat
mov
cmpsl
jnp
lret
out
stos
inc
lds
xchg
pop
or
sbb
sub
xlat
jae
sub
hlt
xor
mov
adc
test
sub
sti
negl
xor
pop
or
iret
sub
fimull
adc
xchg
dec
fistpll
pop
push
mov
in
cs
or
sub
sbb
cwtl
jle
adc
pop
mov
mov
neg
cwtl
mov
pushf
mov
fisubl
push
iret
cmpsb
test
cmpsl
mov
jnp
std
mov
mov
mov
sti
mov
fsubp
imul
sarb
push
dec
mov
mov
jmp
ljmp
xor
push
cmp
mov
xor
xlat
arpl
mov
movsl
sub
jb
inc
sbb
movl
incb
add
mov
or
imul
push
sub
cli
mov
sbb
js
aad
push
sub
cmovne
dec
mov
push
add
fldcw
orb
in
ret
mov
outsl
fists
mov
scas
into
or
int
out
add
xchg
leave
outsl
outsl
mov
repnz
xchg
or
pop
xchg
sub
fcmovbe
or
sub
push
ret
pop
enter
mov
loop,pn
cmp
sbb
mov
pop
dec
mov
pop
cld
mov
and
push
mov
and
inc
into
ja
mov
loopne
push
jecxz
inc
mov
or
mov
lahf
les
imul
jne
mov
mov
and
repnz
mov
pop
mov
rorl
pop
push
insl
repz
cld
nop
out
dec
push
jg
stc
int
scas
inc
aad
sub
imul
adc
fsubs
loop
fisubl
call
jle
inc
sbb
xchg
xor
pop
shlb
cld
pop
sti
jle
bound
jns
scas
cltd
fwait
push
filds
rcrl
les
add
xor
adc
nop
xchg
jb
mov
ss
or
outsb
ret
fwait
dec
pop
mov
pusha
pop
pop
cmp
adc
inc
inc
mov
xchg
cmc
adc
leave
xchg
mov
mov
mov
adc
sahf
and
xor
jg
in
pop
push
dec
dec
cs
inc
lods
mov
xchg
xchg
lods
jle
and
sbb
jnp
xlat
les
scas
pop
push
aaa
pushf
std
cmp
lret
addr16
pop
mov
shll
cmp
ret
notb
push
sarb
leave
shlb
push
jbe
cmp
mov
ret
sbb
out
xor
out
sbb
push
leave
jne
aaa
fwait
out
cmp
dec
aas
xchg
or
and
mov
mov
push
mov
mov
lods
sub
jne
out
jmp
jecxz
xor
jl
add
pop
push
clc
ljmp
dec
push
int3
jp
sub
xchg
pop
pop
fldt
cmc
test
add
pop
inc
aam
mov
fists
xor
js
jbe
scas
adc
fiadds
and
mov
pop
scas
loop
and
add
insb
ret
mov
sar
int
aad
out
mov
ss
in
divps
sbb
mov
scas
xor
fsts
mov
ror
pushf
or
in
pop
xor
lock
xor
out
and
mov
push
jmp
pop
mov
push
jmp
cmc
hlt
add
push
push
lods
fdivrs
insb
lcall
mov
fs
dec
dec
cmp
xor
pop
mov
gs
xchg
mov
inc
cmpsb
push
push
sub
xor
pop
push
xchg
inc
xchg
cmp
and
adc
jb
ljmp
sbb
gs
pop
and
inc
fnsave
pusha
cli
xor
cs
jecxz
mov
out
jae
aaa
aas
sbb
in
mov
add
ret
or
orl
add
aam
xchg
mov
fstps
aad
add
je
inc
dec
js
mov
aaa
jp
mov
push
sbb
sbb
push
xchg
mov
arpl
rcll
jge
int3
adc
outsb
into
outsl
jl
test
cmp
test
inc
or
loopne
loopne
push
inc
fmull
jns
push
rclb
insl
fildll
nop
add
in
outsl
mov
rol
add
cli
and
or
sub
push
inc
sahf
mov
dec
mov
je
leave
cmc
adc
cmp
lcall
inc
mov
push
xchg
mov
loope,pt
and
mov
shll
stos
jle
out
sub
cmp
fcmovnb
push
in
xchg
jmp
sbb
int
ljmp
xchg
daa
negb
cwtl
xor
maskmovq
idivl
pop
sbb
mov
jo
scas
and
xchg
scas
adc
sub
sbb
clc
sarl
call
mov
xchg
xlat
mov
jbe
cmp
jb
out
gs
scas
in
mov
pop
lret
push
js
fistps
adc
pop
pop
cmp
mov
adc
or
sbb
mov
lret
inc
xchg
insl
or
cmp
or
cmc
aas
hlt
fistps
aaa
mov
in
jo
sbb
scas
jns
mov
adc
cmp
aam
xorl
ret
mov
inc
arpl
rclb
ret
lahf
pop
rolb
mov
lods
repz
xor
xor
push
scas
scas
std
xchg
mov
hlt
push
push
mov
mov
cmpsl
sahf
dec
sub
js
int3
loop
mov
dec
pushf
add
inc
in
inc
jle
push
mov
aam
sbb
imul
jnp
xchg
insl
xchg
sbb
mov
mov
fadds
cmpsl
jae
test
into
mov
mov
add
clc
stos
sub
out
mov
mov
mov
call
aam
sahf
cld
out
rcl
xchg
les
gs
hlt
xchg
shll
scas
pop
inc
xor
ja
shll
loop
addr16
add
and
ss
das
add
jg
test
ss
fnstenv
loope
dec
enter
mov
and
xor
ja
mov
add
jbe
push
mov
sbb
sahf
sub
or
loope
mov
dec
andl
ficoms
add
and
mov
cmpb
stc
xor
or
push
insb
pop
xchg
or
xorl
mov
dec
arpl
cmp
cs
mov
add
dec
pop
call
mov
je
pop
fsubrs
test
and
enter
pop
add
pop
sub
std
icebp
outsl
jno
cmp
stos
xchg
loopne
cmp
xor
jl
jmp
adc
pop
in
fbstp
jge
int3
out
push
leave
lods
inc
cmpsl
js
cs
je
inc
ret
pusha
nop
inc
data16
cmp
cmp
outsb
lea
sbb
shlb
mov
xchg
arpl
dec
dec
sarl
je
cmp
mov
sub
popl
mov
aam
es
push
dec
inc
iret
inc
setnp
jb
imul
cmovp
repnz
jno
enter
fcompl
repnz
jnp
add
into
pop
int3
push
fcomip
jp
push
loopne
nop
jbe
in
std
fistl
out
jns
sbb
and
mov
imul
mov
mov
outsl
mov
mov
and
adc
jg
repnz
ret
ret
ds
in
inc
xor
ss
xchg
adc
jp
add
jecxz
out
lods
cmc
imul
mov
and
popf
fdiv
push
mov
lret
inc
fcoml
ror
in
arpl
stos
xchg
push
mov
adc
mov
cmp
xchg
scas
inc
mov
pop
mov
sbb
push
dec
and
jl
es
jbe
data16
dec
sub
cmp
sub
rcr
jge
in
jge
push
stos
insb
sbb
sbb
call
das
and
push
jb
loope
das
fwait
push
inc
mov
fimuls
mov
mov
adc
imul
repnz
sbb
scas
sub
fisttpl
scas
fimuls
fnsave
adc
mov
cmp
out
test
pop
mov
cmpsl
push
int3
dec
vunpckhps
into
push
mov
sub
cmpsb
push
fiadds
out
add
aaa
lcall
call
xor
push
adc
dec
xchg
imul
push
jnp
mov
dec
push
in
insl
jo
loopne
repz
xor
leave
push
jne
xchg
test
out
scas
and
js
or
imulb
mov
mov
clc
ror
mov
xor
scas
push
xchg
fs
pop
ffreep
mov
scas
scas
xlat
pop
bswap
pop
fwait
mov
dec
dec
sub
mov
cmp
and
mov
sub
fcomp
loopne
test
sub
dec
js
insb
repnz
adc
push
dec
or
push
sbb
mov
les
ja
les
les
mov
and
mov
jmp
dec
les
sbb
pushf
call
into
lods
mov
pop
pop
xchg
or
call
mov
int3
je
cmp
dec
push
repz
ja
and
push
popf
loopne
jg
add
shrl
ja
mov
popa
mov
rorb
cmp
lret
testl
dec
mov
lods
mov
pop
xlat
sarb
adc
xor
pop
dec
and
inc
int3
daa
test
cli
gs
mov
cmp
sbb
mov
mov
dec
cmp
sarl
dec
addr16
cmp
mov
mov
inc
and
xorb
insl
mov
add
lods
ljmp
sbb
dec
cli
int
movsb
or
inc
sub
xchg
jge
repnz
xor
sti
clc
je
jg
inc
xor
mov
cmp
ficoml
lods
adc
sub
lret
mov
ret
incl
cmp
cs
mov
mov
enter
dec
jl
ja
and
add
cmc
aaa
test
pop
cmp
stos
mov
inc
pusha
cli
push
cwtl
push
in
into
push
push
xor
or
hlt
jmp
jle
mov
inc
push
jg
xor
test
pop
imulb
data16
call
mov
mov
shll
je
jno
mov
fstl
sub
mov
xor
data16
dec
jae
neg
and
adc
push
out
andl
jo
mov
fisttpl
mov
aam
push
fbld
ljmp
sub
shll
je
ja
and
insb
test
insb
shll
push
ficoms
inc
movsb
jb
fisttpll
jp
std
into
mov
lea
rcrb
sub
push
jae
lcall
rcrb
xchg
or
sbb
lret
mov
push
jle
fwait
and
shl
aam
inc
adc
push
movsb
inc
inc
push
xchg
lods
aad
outsb
stc
pop
lahf
cmp
lds
mov
add
add
lds
rol
jmpw
ret
mov
call
or
sahf
sbb
or
and
icebp
sbb
dec
sbb
sub
pushf
stos
repz
push
pop
jmp
push
in
sub
arpl
adc
jge
ficompl
loope
pop
pop
mov
into
xor
inc
adcb
xchg
lods
sbb
sbb
push
cmp
mov
inc
aas
jg
mov
dec
popf
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
xchg
and
scas
mov
data16
addr16
dec
test
add
jmp
or
mov
in
sub
out
push
aaa
imul
xchg
lock
dec
fidivl
enter
push
adc
test
xchg
add
pusha
stc
sbb
loopne
scas
or
fiadds
jle
into
sub
cli
stos
into
addr16
cmp
popa
cmc
xor
ljmp
sbbb
int
or
add
inc
loopne
jbe
fs
sub
cld
popf
sbb
jecxz
scas
js
nop
lods
cltd
iret
aas
hlt
arpl
cwtl
adcl
les
jo
xlat
mov
sbb
clc
shlb
aaa
jnp,pn
jmp
mov
mov
sbb
std
or
arpl
icebp
les
cltd
stos
xchg
or
inc
fistps
jl
push
cmc
lods
push
adc
or
mov
inc
jae
add
lcall
inc
aaa
iret
push
xchg
insl
or
mov
sbb
pop
jmp
ret
jp
dec
xchg
or
mov
sbb
xchg
add
cld
lods
and
xlat
push
jb
push
fimuls
and
adc
jecxz
fdivl
sbb
or
jns
call
dec
filds
clc
leave
out
ret
ljmp
stos
sub
fimull
les
jmp
shll
cmpsb
out
lea
test
outsb
push
mov
cmp
mov
or
lcall
push
lods
mov
sar
popf
icebp
sbb
sbb
fs
outsb
xchg
add
andl
mov
mov
mov
push
cmpb
mov
sbb
cmp
out
mov
incl
movsb
rcr
mov
push
int
cltd
test
mov
das
cmp
addl
dec
push
mov
add
fildl
sub
sub
inc
lods
lds
adc
les
xchg
push
rcl
orb
sbb
ret
nop
scas
jno
mov
inc
adc
mov
inc
mov
out
sarl
roll
fwait
in
push
xchg
clc
nop
mov
rcl
xchg
inc
jg
cmpsb
es
out
or
roll
out
jnp
test
mov
orl
mov
ret
mov
pop
inc
int3
jns
mov
mov
dec
cli
cmc
or
or
jl
mov
data16
xchg
push
cmp
test
loop
lcall
test
leave
ljmp
fisubl
pop
push
lret
enter
jns
cmpsb
arpl
jae
pop
pushl
js
pop
out
dec
in
lods
sub
test
shlb
ss
mov
sbb
fs
push
xchg
movb
outsb
call
mov
leave
lock
mov
inc
add
push
mov
shlb
add
mov
js
lods
mov
mov
push
leave
mov
lea
test
in
and
sbb
ja
jle
mov
mov
jns
fmulp
loop
pop
icebp
inc
inc
jnp
in
adc
sbb
das
cmp
xchg
add
mov
sti
lret
aad
loope
xchg
loopne
and
sahf
push
xor
fwait
push
mov
mov
jge
and
mov
jae
loopne
cmp
shr
scas
xor
inc
aaa
pop
add
cmp
mov
test
push
adc
xor
push
jl
push
scas
out
or
mov
ja
dec
inc
xchg
sbb
and
lock
cmp
sub
ja
mov
cli
ret
aaa
fwait
in
cmp
cmp
mov
sarb
sbb
es
pop
and
ss
push
xor
popa
jbe
movsb
inc
mov
cmc
lcall
movsl
rcl
adc
cmpsl
xchg
test
data16
fadds
sahf
aaa
jae
mov
into
aaa
les
test
repnz
lcall
into
or
decl
and
insb
push
or
sbb
test
sti
mov
js
lods
insl
popa
lret
push
adc
mov
lcall
inc
sub
xor
xor
popf
push
or
in
sahf
adc
sarb
mov
in
ja
movsb
je
lds
out
add
lahf
ret
mov
adc
aas
jo
insb
xor
xor
cmpsl
pop
adc
jmp
xchg
or
fcmovnbe
pop
mov
sub
xchg
push
jno
cmpb
xchg
or
out
add
cs
inc
xchg
dec
jb
add
mov
and
int
inc
xor
mov
rcll
inc
ret
mov
inc
ss
push
movsl
mov
inc
pop
ret
ret
shlb
or
and
cltd
in
jae
andb
ljmp
rcll
mov
aas
xchg
test
mov
jp
mov
int3
mov
adc
in
stc
dec
movsl
into
in
xor
ja
stos
mov
addr16
pop
jge
mov
push
nop
push
out
test
pop
addr16
inc
cmpsb
cltd
jmp
cmpsl
popf
pop
xchg
mov
xor
mov
repnz
outsb
cld
inc
and
jae
daa
dec
xor
daa
fnstsw
jnp
std
mov
lret
std
push
sub
lahf
sbb
adc
push
out
cmp
inc
cld
mov
iret
dec
pop
pop
sub
adc
jp
and
pop
das
dec
inc
test
sbb
inc
test
push
cmp
fwait
loope
pop
lock
cmp
hlt
jl
int3
lock
mov
sbb
mov
push
dec
sti
or
fmulp
sub
orb
shll
repnz
outsl
rclb
pop
scas
add
jne
mov
jg
mov
push
inc
daa
dec
pushw
jns
mov
push
test
mov
pop
cmpsb
mov
jnp
push
dec
mov
fcoms
mov
jae
scas
xchg
push
push
dec
mov
cwtl
adc
jne
add
aaa
pop
loop
xor
jno
mov
mov
xchg
shrb
fimull
aaa
or
and
cmp
repnz
pushf
add
popf
sub
pop
pop
dec
cmp
push
call
mov
lcall
mov
lds
stos
scas
int
int3
jmp
rcrl
es
out
mov
mov
pop
sbb
mov
adc
jle
jns
xor
sbb
mov
lods
jg
test
outsb
fldenv
hlt
aas
xor
in
outsl
pop
or
pop
shr
ficoms
jl
stc
testb
ss
lahf
shll
inc
push
lret
mov
outsb
push
jns
inc
add
add
push
lods
repnz
sti
sbb
mov
in
mov
xor
inc
jmp
rol
xor
xchg
test
ret
fisttpll
cmpsl
push
daa
xor
xor
cmp
mov
sub
sbb
enter
clc
bound
test
or
shlb
ds
push
lods
dec
mov
das
xchg
sbb
jp
sti
sbb
mov
shlb
pop
cmp
or
fidivrl
stc
icebp
ret
and
testb
jge
sbb
push
cmp
cli
sub
das
je
andb
enter
mov
decb
cmp
push
inc
adc
push
pop
ja
out
sub
pop
loop
or
and
insb
pcmpeqd
dec
dec
cmpsb
jae
jp
ds
popa
aaa
mov
xor
les
jbe
gs
shll
rclb
lds
and
push
mov
add
rclw
movsb
int
pop
add
pop
mov
leave
add
sub
andb
inc
jmp
fwait
clc
lea
cld
icebp
mov
js
dec
subb
jmp
dec
xchg
inc
mov
les
xor
loope
hlt
or
shll
jne
test
add
mov
out
imul
cvtps2pd
test
call
cmp
cmp
sbb
cmp
mov
push
mov
push
scas
xlat
movsb
mov
roll
xchg
lock
es
aaa
mov
and
in
test
mov
pop
call
fisubrs
leave
mov
mov
cmp
aaa
push
movsl
aad
inc
out
jb
push
xchg
sbb
movsl
mov
mov
lods
into
mov
sub
mov
enter
jnp
lahf
pop
push
mov
xor
add
xchg
and
std
inc
aad
or
dec
xchg
outsl
mov
lods
loop
fs
xor
imul
cwtl
pop
push
add
enter
adc
and
mov
adc
lahf
xchg
out
lcall
fwait
lock
mov
rolb
popa
stos
jnp
cmp
mov
sbb
loop
out
bound
pop
jge
cli
xor
inc
push
stc
mov
or
sbb
movl
in
sub
or
fsubs
or
clc
jno
shrb
push
fidivrl
sbb
stos
dec
jmp
stos
int3
lods
pushl
fdivrl
stos
adc
mov
clc
sbb
cmpsl
pop
loopne
cmp
ffree
into
xor
in
and
add
adc
inc
inc
sub
xchg
ret
pop
cmp
jecxz
test
aad
mov
cmp
pop
xchg
and
pop
out
mov
lods
inc
adc
push
adc
mov
icebp
aas
lock
clc
arpl
adc
cld
jno
lret
cmp
push
xor
imul
xor
andl
les
popf
mov
ret
mov
mov
dec
mov
data16
mov
mov
loop
cmpsl
mov
int
push
loop
mov
sub
or
shr
or
popf
hlt
ds
mov
cmp
cmpsb
dec
xor
test
jle
mov
xchg
hlt
mov
inc
and
jnp
jae
data16
unpckhps
lods
loop
dec
in
inc
call
sub
jnp
dec
jg
movsb
ja
hlt
icebp
iret
cli
ss
jge
pop
fists
cmp
rcll
cmc
popf
xlat
fldenv
pop
mov
xchg
sub
push
outsb
clc
xor
xor
mov
adc
mov
sarb
icebp
lret
dec
inc
cmp
jmp
adc
shrb
push
mov
mov
or
xor
jecxz
jmp
sbbl
mov
movsl
mov
movsb
jge
xorl
imul
cli
repnz
cmp
cmpsb
jo
jbe
subl
clc
mov
jle
mov
je
mov
outsb
hlt
mov
shrl
cmc
jge
add
pusha
pushf
out
faddl
mov
add
and
mov
inc
shlb
xlat
dec
fs
or
sbb
sbb
ret
shr
call
and
rolb
in
mov
jmp
inc
mov
outsb
pop
or
jle
jecxz
loop
push
rorl
mov
cmp
add
lret
clc
mov
repnz
jno
xchg
and
je
push
jl
inc
loop
sbb
xor
inc
xchg
test
mov
adc
adc
or
mov
ret
in
pop
push
push
mov
rorl
fdivrs
xor
ret
and
xchg
lods
inc
mov
push
dec
sub
mov
int
sub
ds
enter
iret
in
or
mov
mov
or
repz
popf
jae
cld
sbb
ret
push
add
fsubl
pop
xor
cld
adcl
cmpsl
jo
sub
popa
pop
pop
enter
mov
mov
ss
cli
inc
jge
cmpsb
popa
idiv
pop
dec
ret
sti
xchg
inc
mov
sub
pop
ficoms
jp
shll
mov
lds
mov
xchg
jbe
mov
pop
push
add
shll
sub
ror
sub
outsl
xchg
outsb
pop
pushf
stos
xor
idiv
xchg
lods
sti
aad
pop
repz
pop
sbb
sub
adc
jns
fwait
and
lcall
or
adc
je
mov
push
adc
jno
sbb
add
xchg
addr16
mov
ss
mov
nop
push
jo
dec
sub
sbb
pop
pushf
mov
out
jmp
add
movsl
bound
add
inc
adc
sti
fisubrl
leave
popa
xchg
ds
jno
mov
movsl
int
addr16
and
lock
push
icebp
pop
push
stos
std
in
sbb
sbb
inc
xchg
hlt
inc
aaa
psubsw
lock
loopne
cmp
and
scas
or
cmp
loope
lahf
lods
test
hlt
js
mov
jae
daa
rcrl
popa
xchg
push
inc
and
out
test
xchg
dec
stos
push
pop
std
popf
shll
sbb
loope
dec
xchg
jns
std
or
fisubrl
pop
out
nop
leave
push
mov
dec
scas
mov
push
pushl
mov
adcl
daa
push
les
jecxz
jecxz
mov
mov
out
lea
adc
push
mov
test
dec
imul
push
int3
jno
aad
dec
jecxz
pop
jnp
sbbl
pop
ret
inc
mov
adc
insb
aaa
xchg
dec
jmp
mov
adc
jg
inc
cmpsb
pop
cmp
cld
and
add
push
cmpb
popf
pop
wbinvd
loopne
lds
push
dec
les
in
out
xchg
test
lock
xor
lock
xor
push
popa
mov
adc
adc
jecxz
jae
cmp
mov
inc
cmp
movsl
jne
sbb
out
xlat
dec
mov
mov
das
push
rcll
sbb
xorb
out
dec
out
lock
aas
into
add
inc
or
test
das
add
cld
fisubs
in
pop
adc
mov
mov
pop
mov
xchg
sbb
push
js
lods
inc
movsl
nop
cs
pop
mov
xor
dec
adc
or
mov
stos
lahf
sbb
sub
inc
mov
mov
in
pop
push
sub
es
xchg
add
add
cmp
dec
stos
js
ss
inc
insb
xor
xor
mov
scas
sbb
mov
pusha
arpl
mov
leave
lret
pop
movsl
xor
adc
lds
and
mov
push
lea
and
shlb
dec
cli
fs
jp
enter
lahf
mov
xlat
jns
popa
pop
cmpsl
sbb
fsub
mov
push
stc
push
lahf
int
xchg
jbe
add
pop
inc
popf
lret
jmp
push
movsl
mov
scas
stos
jmp
out
outsb
cltd
js
mov
dec
mov
movsl
imul
mov
add
inc
fnstenv
jmp
cmp
and
mov
in
jb
dec
pop
or
jp
xor
pop
stc
and
inc
mov
jmp
dec
jmp
lret
in
cmpsl
scas
xchg
cmp
jle
pusha
sti
sbb
mov
xlat
fidivs
push
sub
dec
cmc
mov
xor
cwtl
dec
rcl
call
sub
test
jns
idiv
push
sbb
inc
dec
inc
cmp
xlat
jg
rcrb
fcmovb
std
xchg
ja
test
mov
popa
in
mov
in
mov
or
xor
stos
fnsave
mov
xor
in
rcrl
sub
scas
dec
fucom
push
pop
popa
movb
inc
lds
add
dec
int
jo
sub
xor
sbb
fstl
push
mov
push
out
cltd
loope
enter
loope
cmp
in
sbb
ja
aas
xchg
insb
xchg
inc
mov
leave
dec
adc
scas
sub
inc
lcall
cmp
dec
jae,pn
lret
loop
push
sbb
pop
mov
aam
pop
dec
repz
and
dec
sub
lods
cmpsl
push
subl
insb
imul
sub
scas
fdiv
dec
push
inc
adc
sahf
stos
insl
adc
jne
xor
mov
iret
fbstp
xchg
data16
es
inc
arpl
jb
sbb
scas
imul
loop
les
gs
sahf
out
dec
dec
ds
or
xor
pop
mov
pop
push
pop
pushf
imul
and
jo
pop
std
adc
in
inc
fwait
loopne
pop
or
scas
push
inc
pop
xorb
inc
popf
adc
imul
mov
fadd
and
adc
out
sub
std
and
adcb
fimuls
pop
repz
jnp
call
mov
inc
flds
jno
in
xchg
gs
inc
adc
and
in
jns
out
dec
adc
gs
jge
push
sub
leave
or
jb
pop
pop
cld
xor
dec
lods
arpl
ret
mov
jnp
leave
cmp
dec
adc
das
ljmp
lods
xchg
mov
xor
fs
add
cltd
and
xchg
insl
sbb
sbb
js
dec
xchg
dec
pop
in
scas
xor
out
xor
push
add
hlt
int
mov
jb
test
cmp
roll
adc
xor
inc
into
lea
in
clc
add
or
push
cmpsl
gs
push
jae
popa
jbe
stos
inc
xor
repnz
sti
sbb
and
jecxz
pop
mov
lods
sbb
sbb
int
sbb
in
stc
cmp
nop
out
out
adc
cltd
xlat
mov
ljmp
pusha
scas
pop
cmpsl
or
repz
hlt
xor
out
mov
leave
and
or
dec
push
test
addr16
push
mov
dec
inc
imulb
les
mov
sti
and
dec
cmp
cmc
decb
sub
bound
inc
and
add
mulb
ror
pop
mov
nop
or
and
lahf
movsl
and
std
jno
inc
jae
push
loopne
mov
shrl
add
iret
icebp
aam
pop
inc
jo
mov
mov
incl
les
xor
dec
pop
inc
in
pushl
movsl
idiv
add
out
daa
inc
lret
mov
jnp
fs
adc
mov
stos
lret
mov
iret
add
push
call
repz
and
or
inc
mov
ret
movb
aad
adc
or
push
push
hlt
fistpll
clc
lods
adc
mov
adcb
gs
inc
xchg
jl
mov
add
push
data16
stos
inc
popa
mov
ja
or
stos
mov
aaa
or
loope
adc
addl
push
and
out
aam
dec
inc
nop
rcll
sub
add
cmp
xor
ffree
fdivl
adc
xchg
cmp
xor
fstpl
jmp
cmc
outsb
or
out
adc
pop
test
sahf
stc
mov
scas
xor
mov
out
pop
js
idivb
mov
shl
add
add
into
aad
clc
xchg
xchg
cmp
test
btl
pop
and
adc
adc
push
rcll
jl
call
jecxz
or
lods
fcompl
sbb
xchg
sub
jecxz
cmp
and
or
pop
dec
xchg
xor
mov
out
jle
pusha
imul
inc
pushf
pusha
mov
mov
mov
popf
inc
mov
sahf
mov
addr16
mov
notb
cmp
popf
mov
sub
jl
cmpsb
nop
push
mov
pop
int
pushl
adc
jno
push
jmp
xchg
jne
mov
xlat
xor
outsb
sbb
je
sahf
aad
push
int
lods
push
lea
jo
mov
icebp
dec
repz
je
adc
shlb
aam
mov
aas
das
or
dec
loope
in
je
sub
int3
adc
scas
jns
in
js
in
add
push
cltd
pop
in
jno
scas
mov
push
pushw
jle
mov
rclb
jb
inc
and
jmp
and
popf
push
movsl
xor
pop
aaa
sbb
dec
in
lahf
pop
inc
je
test
iret
movsl
sub
ret
sbb
rcrl
test
or
pop
push
imul
dec
jle
aad
addr16
pop
cmc
pushf
jae
jb
push
push
ret
or
mov
sbb
pop
lahf
outsb
inc
xchg
or
stos
xor
cmpsl
movsb
scas
sahf
stc
mov
lahf
pop
jo
push
pop
xor
movsb
mov
cmp
cmpsl
inc
pop
jmp
lds
adc
ret
imul
frstor
scas
push
pop
popa
mov
sbb
ja
cmp
jmp
in
xchg
out
imulb
rsm
dec
sbb
out
adc
adc
cmpsl
sub
data16
stos
pop
jo
out
sbb
or
xlat
jmp
xor
or
lret
mov
das
sbb
mov
clc
xchg
sub
push
loope
scas
popa
inc
add
jae
in
cmpsl
sbb
adc
js
lret
jmp
cmc
addr16
mov
push
sti
cmpsl
gs
mov
imul
fdivrl
scas
pop
scas
test
or
add
jno
adc
inc
fwait
cmpsb
push
cmp
gs
or
jo
out
mov
stc
cmp
add
push
in
loopne
cmp
xchg
int
cmp
sbb
pop
arpl
testl
jl
notb
sbb
mov
fs
mov
and
or
mov
pop
push
shrb
jne
xor
test
sahf
ljmp
pop
pop
push
out
and
out
sbbb
mov
dec
jecxz
aad
rorl
in
cli
xor
loope
ljmp
push
mov
stos
subl
inc
cmp
cmpsl
daa
aas
lcall
or
jmp
push
adc
test
das
loopne
or
pop
dec
inc
daa
ds
dec
arpl
mov
push
add
cld
das
cld
movq
adc
push
ret
mov
mov
push
lds
pop
pop
pop
and
pushf
inc
aas
inc
repnz
mov
loop
std
adc
jle
int
shll
xchg
inc
jp
push
lods
inc
push
push
dec
inc
mov
cmpsb
push
mov
xchg
mov
or
push
out
stos
clc
lock
test
jno
mov
sub
shl
pop
pop
fnsave
push
or
mov
cmpsl
adc
loop,pn
jmp
and
adc
push
and
lcall
jmp
outsb
outsl
shr
shlb
cmp
aad
sub
push
mov
push
fxch
mov
inc
mov
nop
in
sarl
sahf
xor
xor
sbb
inc
je
and
mov
int3
pop
and
pop
add
fcmovne
je
test
imul
push
arpl
add
jae
pop
mov
lods
cmp
mov
jno
loop
jne
inc
clc
mov
fldenv
test
ljmp
imul
jg
leave
mov
mov
das
dec
push
popf
das
jge
cli
push
xor
sub
popa
or
add
mov
fimull
je
push
and
cli
and
mov
pop
xor
fcomps
ss
mov
mov
xchg
or
sub
mov
jno
les
sbb
std
popf
movsl
mov
repnz
sub
and
js
fmull
sarl
stc
or
inc
sbb
adc
in
add
ror
mov
push
je
push
pusha
les
in
cltd
mov
imul
ror
cmp
add
hlt
test
mov
enter
loopne
and
mov
arpl
cltd
loopne
xlat
out
cmp
jbe
dec
mov
jle
ja
sub
inc
fdivrs
mov
test
sbb
jmp
pop
xor
cmp
clc
movsb
es
rorl
push
jbe
cmp
cmc
cmpl
pop
iret
dec
or
ss
les
xchg
pop
adc
das
ret
mov
ja
into
fs
mov
outsb
cmp
jle
sbb
xchg
scas
jle
daa
adc
sahf
sub
aaa
pop
jmp
xlat
adc
in
push
js
or
xor
mov
es
lods
pop
mov
push
dec
and
jmp
ljmp
mov
xchg
adc
xor
test
bound
outsb
mov
stos
pop
movsb
push
enter
aas
pop
jb
push
sbb
icebp
adc
cli
xor
leave
cmp
cwtl
mov
jno
push
scas
cltd
cmp
mov
fiadds
dec
cmp
lcall
push
mov
xchg
fs
mov
loopne
xlat
mov
add
mov
xchg
sub
imul
leave
xor
popf
int
into
add
cmp
cli
sub
fmull
mov
mov
jmp
subl
inc
xchg
pop
mov
mov
shl
out
dec
insb
push
mov
cli
or
arpl
nop
sub
mov
mov
int
jl
and
sub
in
mov
add
sbb
enter
filds
flds
mov
dec
adc
mov
mov
xchg
or
pop
mov
add
jns
xor
cmpsb
pop
dec
in
xlat
push
cmpsb
sbb
rolb
fcompl
mov
fstpl
lods
or
clc
test
mov
xorb
xchg
jl
in
ja
inc
cld
dec
and
lock
xchg
stos
sbb
pop
dec
sbb
xchg
or
addr16
push
out
cmp
xchg
fsts
inc
mov
and
outsb
je
aam
or
scas
js
sub
mov
lock
mov
dec
insl
stos
dec
add
into
cmp
pop
leave
mov
add
aam
cmpsl
in
ss
bound
pop
ds
outsb
cmp
or
es
loope
xchg
adc
dec
lock
fisttpl
aas
push
or
shr
in
rorl
popf
dec
push
rcrb
mov
push
lret
cwtl
rclb
dec
repz
add
push
adc
jmp
sub
imull
sbb
jmp
leave
leave
mov
popl
jg
jbe
jle
mov
lahf
inc
mov
push
in
inc
add
movsl
clc
fimuls
inc
cmp
mov
lahf
xchg
cli
push
xor
test
mov
jo
cmp
jmp
divl
scas
push
add
rorl
jb
das
outsl
xor
jnp
pop
dec
call
push
fs
aas
inc
or
stos
mov
mov
or
mov
push
or
shll
cmp
inc
or
add
sar
icebp
jbe
adc
es
inc
xchg
add
cmp
test
aad
sbb
gs
roll
pop
push
mov
add
lods
inc
adc
xchg
out
adc
jne
ljmp
pop
push
inc
fldl
jg
testl
outsl
scas
dec
data16
imull
mov
fisttpll
test
filds
pop
adc
cld
and
stos
sub
cmp
add
lds
mov
xor
lds
jle
pop
jmp
dec
les
mov
ret
jbe
add
fisttpll
rorb
sub
jb
mov
mov
cmp
xchg
add
mov
fdivrs
enter
or
daa
clc
int3
jp
fwait
cmp
add
pop
fistl
jb
orb
jmp
mov
negl
adc
add
stos
cmpsb
mov
and
jnp
mov
in
mull
mov
scas
roll
loope
aaa
sbbb
ret
ljmp
xchg
std
les
mov
sub
push
xor
outsb
mov
mov
inc
dec
rcrl
jne
dec
in
dec
je
test
lods
jae
je
adc
sub
mov
lret
rcrl
lcall
inc
mov
or
divl
incl
adc
xor
xchg
add
icebp
hlt
stos
jecxz
and
pushw
rorl
out
inc
xor
add
sbb
scas
ss
mov
pop
sbb
jo
mov
or
mov
inc
outsl
pop
inc
inc
push
imul
jge
cmpsl
filds
test
sub
push
xchg
repz
out
das
jle
lret
mov
push
mov
mov
mov
stos
hlt
dec
adc
int
cmc
arpl
mov
dec
or
aaa
lods
push
sbb
or
fcoml
test
push
dec
out
xchg
ficompl
bound
jns
cwtl
sbb
jp
jmp
mov
subl
into
fmul
shll
jbe
dec
add
push
mov
xor
jl
imul
ds
inc
sub
and
xchg
repz
push
xlat
std
sahf
ret
xor
addr16
inc
pop
aam
aas
inc
mov
pop
fisubrs
push
rcr
inc
xchg
lahf
add
mov
les
test
adc
push
adcl
sub
movsb
btc
inc
sub
cmpb
ljmp
xchg
je
jecxz
adc
mov
xchg
inc
pushf
jnp
icebp
ret
call
pop
mov
pop
fistpl
sbb
xor
cld
mov
add
dec
push
cmp
sarb
inc
jmp
cld
inc
aas
and
popf
cmp
xchg
hlt
leave
mov
or
cmpsl
push
out
dec
and
inc
mov
cld
add
inc
adc
mov
mov
adcl
xor
jecxz
sub
mov
fistl
dec
idivb
rol
pusha
push
into
lret
add
jns
mov
out
mov
push
jecxz
xlat
lods
call
pop
ljmp
insb
cltd
mov
stc
sub
pop
loop
pop
les
lfs
fsubs
cmp
cwtl
je
nop
jne
push
xor
mov
movsb
sbb
in
clc
out
pop
mov
mov
adc
les
cmp
les
jo
cltd
xchg
repnz
push
mov
nop
les
and
and
pop
int3
repz
aas
dec
insl
jae
cmp
cmp
loopne
outsl
cmp
xchg
stos
nop
call
mov
rcr
ds
dec
andb
mov
xor
pop
xor
mov
into
outsb
test
aam
bound
mov
adc
in
mov
cmp
xchg
popf
adc
ds
mov
ljmp
jl
fsubrl
xlat
adc
aam
jbe
adc
popa
lcall
movsl
xor
filds
or
cmpsb
pop
adc
idivl
xchg
fistpl
xor
jo
push
pushf
jns
mov
or
sub
mov
movsb
sub
imul
int
rcll
add
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
je
cmp
jp
out
jp
add
add
mov
sub
cmp
int
cmp
push
out
pushf
lret
lahf
enter
jno
mov
rcrl
sbb
xchg
jge,pt
mov
inc
mov
lock
rcll
dec
or
sub
dec
mov
mov
add
popa
push
cltd
sbb
cmpsl
mov
xchg
xchg
popa
in
insl
mov
lods
cmp
movsb
jb
add
sti
dec
jge
cmpb
inc
push
adc
adc
jb
mov
jno
nop
stc
and
inc
mov
int
in
xchg
push
adc
ret
test
frstor
mov
stos
inc
in
test
cmp
xor
addr16
xlat
add
and
mov
dec
jecxz
es
nop
lods
xlat
cmp
mov
mov
lds
xchg
dec
mov
jo
ss
das
int3
cmc
outsb
sub
jecxz
push
sbb
pusha
and
jae
fdivl
fucomip
loope
mov
sub
xchg
sbb
jno
jle
ljmp
dec
jno
xchg
adc
xchg
pop
clc
lret
sbb
or
shll
inc
push
cltd
fisubs
test
dec
inc
xchg
xchg
rorb
call
push
stos
xor
or
mov
cli
mov
mov
insb
sbb
mov
push
ret
pop
iret
cmp
into
xorl
jo
jmp
bound
fs
gs
mov
and
iret
sub
outsb
call
xchg
and
icebp
jp
cli
fisubs
pop
out
add
decb
clc
adc
into
fiadds
popa
cmpsl
jmp
push
sbb
pop
xor
jl
fdivl
inc
push
aad
lret
out
inc
leave
inc
sub
sbb
pop
sahf
mov
mov
push
dec
nop
and
ds
xchg
jge
cs
sbb
cs
pop
rcll
jl
sub
cmp
cmp
cmc
cld
adc
jmp
xlat
icebp
int
add
les
unpcklps
xchg
push
dec
xchg
cs
sarl
add
and
cmp
add
cmpsl
cmp
sub
jecxz
adc
ljmp
xchg
sbb
in
ret
jo
add
bound
fdivrp
mov
pop
dec
stos
xchg
sbb
scas
inc
pop
mov
pop
mov
pop
push
mov
add
popf
fmuls
mov
dec
outsb
add
stos
xchg
and
stos
xchg
and
icebp
std
mov
les
fisubrs
push
es
sbb
daa
jb
xchg
pusha
leave
xchg
pop
sti
stc
mov
mov
test
vaddsubps
jmp
mov
mov
out
aad
testl
mov
dec
loope
loopne
xchg
inc
imul
mov
sbb
in
add
cmp
mov
xlat
sbb
lret
jbe
xor
imul
sti
mulb
xorb
xor
lds
stos
cmpsl
adc
shll
push
jns
sub
ficoml
scas
pop
aam
push
jecxz
add
cld
pop
insb
jns
push
out
sub
inc
mov
sbb
test
mov
or
std
and
insl
mov
movsl
and
and
in
fs
nop
int
inc
xchg
sbb
xor
sub
aaa
and
test
mov
mov
mov
sub
cld
outsl
add
inc
push
push
mov
nop
add
add
imul
adc
or
push
stos
cltd
adc
inc
jl
aas
stos
or
pusha
mov
push
in
jp
xor
leave
xor
stos
push
roll
gs
roll
pop
aas
xor
mov
or
outsl
jp
jno
add
add
test
pop
jle
and
andl
insl
and
mov
mov
sbb
loope
dec
shrl
sub
and
js
imul
push
xlat
mov
push
push
and
and
dec
idivb
inc
movsl
cmp
fiadds
mov
out
jo
sbb
pop
xchg
nop
inc
push
sbb
mov
inc
aad
pushf
dec
in
sahf
jp
in
sbb
aas
jmp
mov
or
xchg
addr16
mov
dec
dec
push
mov
jle
cmpb
mov
sub
push
test
scas
and
cmp
add
or
imul
ja
cld
clc
mov
ss
call
aaa
pop
adc
into
leave
cmp
add
jae
inc
clc
scas
jae
testb
mov
and
xlat
mov
aaa
aam
push
loop
adc
sete
mull
shl
std
add
std
imull
cltd
lock
pop
jp
dec
loope
or
sbb
in
out
cmc
loop
add
sub
out
mov
js
xlat
stos
adc
loopne
imul
lret
ret
push
cmp
imul
sbb
push
int3
pop
mov
pop
inc
or
int3
cmp
ja
jnp
es
jns
inc
shrl
mov
inc
fwait
dec
xor
cwtl
lret
fisttps
xor
push
shlb
add
push
inc
mov
in
sbb
insl
cmc
dec
ss
dec
imul
cmp
pop
jnp
aaa
push
sbb
data16
addr16
jl
inc
test
adc
das
cmp
pop
std
rcl
cs
jnp
test
scas
test
or
fistpl
adc
push
jno
or
lahf
sysexit
mov
jo
adc
sub
sbb
dec
shll
cmpsl
adc
xlat
push
js
push
and
pop
mov
mov
mov
or
cmpsb
ret
es
xchg
jle
call
lods
stos
cmp
or
or
xor
pop
mov
xor
dec
loopne
addl
icebp
scas
mov
rorb
cs
xchg
ror
ss
jns
adc
mov
fldenv
movsb
rclb
movb
mov
out
inc
push
jo
and
mov
mov
ret
in
lret
out
adc
adc
adc
jl
popf
loope
xchg
ja
mov
sbb
movb
mov
lea
xchg
aaa
push
inc
adc
repz
mov
lock
subb
rcrb
fldl
lods
and
cmp
mov
add
add
xor
adc
push
hlt
cmp
pusha
je
nop
add
rcrl
movsl
xchg
and
fcompl
fistps
daa
jecxz
in
jbe
cs
and
ror
and
mov
inc
jl
jae
cmc
or
add
das
pop
cmp
gs
loop
mov
rcll
popa
sub
paddsb
or
adc
adcl
out
cmp
xor
pop
repnz
cmp
xor
or
xor
cmpsb
sub
ficomps
sbb
mov
lret
jo
pop
push
xchg
ret
in
leave
pop
out
and
mov
into
insl
inc
in
cmp
push
mov
icebp
int
pop
int
sub
xor
xchg
or
dec
in
xchg
push
filds
cmp
testl
cli
or
stos
add
xor
mov
ror
sbb
add
mov
scas
aas
test
pop
movsl
fisubs
leave
sub
inc
pop
fmuls
sbb
mov
jle
inc
sbb
jne
mov
and
dec
mov
inc
notl
ljmp
mov
in
stc
sbb
loop
or
and
out
mov
lock
lds
lret
push
mov
xorb
or
cs
push
mov
mov
or
or
pop
into
out
lret
pop
in
sub
jbe
scas
xchg
test
imul
daa
jl
sbb
repnz
pop
incb
fisubrs
xchg
mov
sbb
xor
lcall
test
outsl
xor
pushf
lahf
dec
enter
or
stos
lods
inc
adc
mov
or
or
int
cmp
mov
icebp
in
enter
and
inc
pop
mov
push
push
cwtl
cmp
loop
xchg
imul
ficomps
out
adc
jno
and
mov
cmp
lret
aam
sub
mov
out
xchg
cmp
aaa
dec
inc
loop
pushf
mov
sub
mov
loopne
loope
clc
fwait
bound
inc
ja
or
push
das
cmp
test
pop
ret
aam
and
mov
mov
or
sbb
rcrb
jne
lret
xchg
mov
mov
or
mov
ror
sbb
pop
and
sbb
or
dec
into
push
jbe
cmp
loope
in
and
pusha
mov
fwait
or
push
mov
and
std
mov
jbe
sub
dec
pop
cld
cwtl
push
push
in
aad
insb
pop
pop
and
push
adc
ja
push
fmulp
ret
cmp
lock
cmpsl
imul
insl
sub
out
mov
cwtl
pop
push
pop
clc
add
fbld
into
mov
std
add
pop
lds
out
scas
gs
or
in
mov
add
clc
fildll
add
mov
add
adc
pop
sbb
pushf
loope
and
and
inc
mov
mov
gs
xor
stos
mov
fdivrp
test
xor
pop
icebp
std
cli
call
in
out
enter
sbb
mov
imul
int
jo
pop
and
sbb
int
xchg
decb
leave
icebp
stos
aas
shll
jb
lgs
sub
and
int
sub
sbb
adc
adc
pop
pop
mov
or
pushl
add
xor
jno
cmp
data16
inc
xchg
add
adc
xlat
test
cmp
jne
addr16
pop
shr
mov
movsl
xor
xorl
mov
xchg
push
push
xor
add
int
cmpsb
fs
insl
bswap
ljmp
mov
pop
fsubr
cmc
icebp
aad
out
mov
sbb
mov
push
and
mov
jle
jecxz
lret
push
fsubrp
in
mov
adc
mov
xor
mov
push
lahf
xor
cs
adc
in
out
adc
sbb
dec
mov
dec
add
mov
adc
cmp
adc
leave
adc
add
stos
mov
fdivl
fldt
add
ss
xor
loope
in
jb
fisubrl
jle
sub
adc
pop
repnz
in
mov
push
lods
adc
dec
sbb
loopne
inc
mov
mov
addl
js
test
mov
sarb
int3
mov
lret
jmp
sti
pop
fs
add
movl
mov
xchg
dec
xchg
xchg
rcrb
mov
pop
inc
cltd
bnd
and
testb
jl
pop
jmp
cmp
stos
movsl
fisubrs
or
add
loopne
add
shlb
rcll
sub
jecxz
mov
scas
xchg
outsb
das
sbb
pushf
or
sbb
dec
ffree
adc
dec
pop
dec
subl
xor
pusha
cs
scas
out
sub
jb
lret
test
fdivp
or
fwait
repz
es
daa
fistps
adc
jno
inc
cmp
out
fucompp
arpl
lock
xor
xlat
jp
add
mov
cld
or
mov
movsb
sub
mov
xchg
fildl
in
pop
mov
movsb
mov
fisubrs
cmp
cli
pop
cmp
sub
std
jmp
pop
push
scas
adc
push
mov
xchg
negl
mov
cmp
imul
leave
mov
push
popl
int3
mov
nop
pop
inc
subb
sub
dec
push
mov
inc
sbb
dec
and
test
xchg
jecxz
and
jb
popa
inc
test
mov
lahf
mov
dec
cmpb
sbb
mov
andb
clc
stc
outsl
jo
add
dec
xchg
jno
das
sarb
push
add
sbb
int
adc
adc
push
and
adcb
jno
aaa
repz
ss
cmp
push
subl
mov
in
icebp
pop
aaa
xchg
adc
push
pop
mov
sbb
jp
out
leave
out
pop
pop
pushf
xchg
inc
mov
mov
and
pushf
fdivrl
sub
in
nop
les
fwait
jns
pop
push
repnz
loopne
xchg
sahf
loop
push
int3
and
nop
xor
fdivr
add
imul
shlb
or
fdivl
dec
enter
aad
dec
dec
pop
fucomip
std
das
inc
lea
lret
jo
popa
jb
mov
and
out
mov
cmp
sbb
call
test
lahf
out
ds
inc
mov
cmp
or
sbb
jo
and
add
mov
and
mov
sbb
cmp
pop
dec
in
and
cld
lahf
sbb
shr
cld
adc
out
mov
imulb
xor
inc
mov
dec
lds
and
outsb
int3
daa
xlat
adc
xor
add
sbb
arpl
mov
pop
cmp
dec
sub
stos
and
loope
popa
jno
fcom
mov
lock
iret
outsb
scas
bound
popa
jns
aaa
test
sbb
ret
out
test
or
fs
xor
jo
mov
jbe
xorb
push
test
mov
sbb
inc
fldcw
or
les
scas
dec
fimull
cmp
fs
jge
fucom
sbb
aaa
scas
test
and
pop
inc
clc
xchg
inc
fcompl
sbb
cmpsb
jne
jns
inc
rclb
cs
stos
xchg
mov
mov
push
addr16
jae
adc
out
and
mov
lds
pop
xor
ljmp
decb
push
mov
das
and
mov
jb
fucomip
push
and
add
test
push
mov
mov
cltd
cmp
dec
mov
jnp
pop
dec
gs
dec
inc
lcall
and
icebp
lock
outsb
mov
call
fimuls
clc
daa
inc
insb
mov
stc
xchg
popa
cltd
jge
test
jae
dec
adc
out
std
or
bound
sub
jp
xor
int
mov
insl
mov
iret
mov
push
or
test
jle
add
ret
test
mov
jbe
std
lods
or
repnz
lods
sub
cmp
sbb
fmuls
lods
mov
call
sub
push
fiadds
sub
stos
imul
adc
xor
dec
les
xorl
js
mov
mov
stc
outsb
nop
xor
mov
inc
and
lcall
xor
push
daa
push
xchg
adc
outsb
sub
xchg
and
fwait
push
loop
leave
pop
pushf
das
push
or
bound
into
push
int
pop
jbe
negb
clc
pop
scas
mov
or
pop
inc
sti
mov
fcmovu
or
fstp
or
sbb
mov
mov
je
adc
movsl
out
jo
adc
sbb
sbb
cmp
ret
fwait
shlb
xor
aaa
push
xor
inc
in
rolb
js
dec
or
out
mov
sub
xchg
mov
fdivrs
mov
sub
test
pop
repnz
jnp
pop
and
addr16
and
sub
cmp
into
dec
xchg
and
loop
fisubrl
cmpsl
cmp
jae
add
jo
fucom
ret
push
or
sti
add
fmuls
dec
jmp
push
out
mov
mov
dec
movsb
stc
rorb
push
out
mov
sub
push
pusha
xlat
scas
movl
add
mov
pop
scas
fld
mov
push
cmp
jnp
jl
cmp
fwait
cmpsb
dec
mull
rcrb
xchg
daa
pop
xchg
push
jbe
add
mov
dec
add
mov
xchg
int3
aam
test
cmpsl
mov
or
pusha
sbb
mov
rorl
mov
inc
xchg
pop
stc
cmc
out
push
test
xchg
leave
adc
movb
cmp
inc
sahf
pusha
dec
vprotd
in
fwait
pop
or
daa
jbe
mov
and
and
sub
nop
cld
xchg
test
pop
mov
xchg
sti
sub
lods
mov
ja
nop
sub
dec
mulb
arpl
push
lock
inc
shl
fadd
mov
xchg
mov
fisttps
xchg
in
loopne
xlat
lock
ret
lahf
jg
sbb
or
xor
mov
pop
rolb
xchg
imul
subb
jp
pop
jle
aaa
mov
xchg
rcr
fsubr
sub
inc
test
js
stos
decb
sti
mov
mov
cmp
pop
repnz
mov
pop
adc
ss
ret
lds
xor
sub
int
and
or
insl
mov
push
insl
add
xor
mov
mov
jns
js
repz
xlat
push
insb
push
mov
pop
push
insl
dec
out
lds
loope
mov
stos
jno
enter
jge
std
dec
lret
fsubl
fwait
mov
cs
test
pop
jbe
hlt
push
xor
xchg
xorl
sub
aas
xlat
and
pop
outsl
lock
cmp
add
stos
pop
cmc
fwait
and
xchg
js
mov
fst
out
push
and
and
fidivs
insl
mov
fucomip
aas
push
rclb
in
ret
aaa
mov
test
sahf
or
jp
cmp
shlb
in
jb
mov
sbb
add
fucomi
scas
ljmp
jbe
enter
ret
outsl
scas
enter
pushf
pop
push
int3
pop
xor
sbb
inc
outsl
das
insb
fdivl
scas
fisubl
ja
mov
xor
xor
xlat
out
push
data16
pop
scas
sub
push
imul
js
pop
leave
jns
xor
mov
imull
cmp
ret
mov
lods
adc
mov
sbb
scas
imul
push
add
mov
and
mov
jp
test
mov
push
repz
and
jl
out
lds
call
inc
adc
arpl
js
lods
xchg
daa
jge
loop
je
stos
stos
jae
daa
shlb
jle
stc
xor
jb
lods
scas
iret
les
repz
sbb
cmp
jbe
incb
mov
fsub
imul
jb
adc
xorb
jae
xchg
sub
push
dec
lret
inc
cmpsl
mov
mov
xchg
mov
cmpsl
xchg
xchg
push
inc
sub
lret
and
and
xchg
or
add
fs
scas
clc
data16
mov
inc
loopne
aam
jne
das
fimuls
cmpsb
push
sarl
mov
outsl
fsubrs
sbb
pop
mov
pusha
mov
xchg
movl
enter
mov
fbld
mov
cs
push
and
dec
fimuls
mov
movb
pop
jge
add
rolb
outsl
std
jp
sti
ffree
in
cmp
int
sub
push
or
sbbl
test
in
out
mov
add
lcall
test
sbb
mov
mov
mov
xchg
out
or
cmpb
ja
xor
dec
mov
lcall
andl
sub
arpl
ret
imul
push
xorl
mov
rcr
jmp
cld
in
fwait
aaa
add
push
rcr
adc
adc
push
cltd
pop
ss
hlt
add
fmulp
mov
or
rcll
leave
sbb
in
test
mov
outsl
or
mov
xor
out
push
outsb
sti
es
stc
and
out
fstpt
test
push
out
jnp
test
xor
mov
cltd
sbb
cltd
notb
pop
xchg
cmp
sbb
adc
icebp
jmp
pushf
call
inc
sahf
lods
into
les
mov
sbb
adc
xor
and
xchg
sbb
mov
xchg
stos
insb
dec
lea
scas
insb
outsb
cmp
test
add
cmp
or
sbb
push
inc
das
jno
xchg
xchg
mov
mov
aad
movsl
cmpb
shlb
cmc
cmp
jle
inc
into
mov
dec
fildll
rorl
mov
sub
ret
icebp
in
jmp
push
mov
imul
les
xor
mov
jecxz
xchg
ds
xorb
js
pusha
leave
bound
loopne
andb
mov
hlt
popf
xchg
cmp
mov
mov
xchg
xchg
add
or
das
loopne
fucomi
sbb
cmpsl
das
filds
test
xchg
xor
ds
or
es
popa
mov
dec
call
into
lods
cmpsb
adcb
inc
dec
cmc
xchg
es
jg
loope
sbb
in
test
cmp
push
das
mov
and
lods
sbb
mov
mov
int
jl
sub
xchg
sbb
out
scas
popf
adc
xchg
popa
ret
jbe
mov
sub
cmp
je
jmp
jge
add
inc
xchg
mov
movsl
mov
fwait
add
xchg
movsb
xchg
or
adc
jmp
or
loope
cmp
cli
sbb
arpl
adc
xchg
testl
ja
inc
pop
sub
or
movsl
push
lea
inc
andl
js
jb
mov
or
fistl
sbb
mov
out
dec
vsqrtpd
pop
push
xor
pushf
dec
std
fisubrs
in
mov
enter
popa
inc
icebp
dec
push
movsb
sahf
test
mov
emms
or
sbb
dec
cmpsb
dec
mul
push
add
fs
or
push
test
mov
fucomi
pop
jbe
das
mulb
jnp
imul
pop
jle
add
add
gs
pop
xchg
xchg
cld
add
xchg
pushl
mov
in
jl
faddp
sahf
sbb
cltd
mov
cmp
lcall
adc
fidivs
insl
pop
inc
pop
cld
inc
movsl
jmp
int
xor
loopne
lea
sbb
test
out
jno
lahf
sbb
adc
xor
sahf
jecxz
data16
aas
push
push
cltd
popf
sbb
idivl
pmullw
idivb
pop
xor
in
ficoml
rcll
or
pop
mov
mov
xchg
mov
repz
push
mov
cmpsl
dec
push
test
imul
lods
add
int
fimuls
jo
and
sub
daa
sub
hlt
push
lcall
inc
xchg
out
loope
xor
mov
fmuls
enter
pop
push
mov
shrl
lods
pop
mov
cmp
xchg
pop
jp
jo
add
pop
add
and
push
mov
sbb
add
nop
mov
mov
aas
call
jns
lock
xchg
cld
mov
dec
push
pop
dec
and
xor
leave
out
shlb
cmp
das
test
adc
lret
push
push
aam
and
cltd
loope
lahf
inc
cs
ljmp
mov
ds
add
stos
loope
dec
iret
fidivl
jecxz
inc
fwait
cmc
add
push
mov
sbb
lea
lret
pop
or
cld
dec
xlat
jnp
ds
cmpsl
cmp
push
dec
lahf
adc
scas
jl
mov
call
pop
push
add
aam
scas
push
mov
cli
fcos
or
add
fwait
stc
int
mov
rcrb
pop
fidivs
and
mov
xor
subb
sbb
lcall
xchg
xor
lret
iret
fnstsw
outsb
mov
sbb
dec
cli
or
lret
popf
jno
repz
sub
sub
add
xchg
mov
fisttps
mov
jnp
addb
xchg
sub
push
jmp
gs
inc
jge
and
dec
lcall
pop
stc
shrl
xlat
push
fsts
jge
nop
and
sarl
xchg
incb
cmp
sbb
cmpsl
mov
pop
xchg
jb
js
ret
dec
data16
leave
lock
jne
nop
mov
inc
jae
orb
cmp
lods
mov
test
sub
xchg
push
dec
push
mov
fbld
and
das
scas
sub
lock
js
add
fs
mov
jno
mov
pop
or
cli
xchg
addl
push
xchg
imul
push
leave
jg
shl
dec
dec
pop
pop
cld
in
ss
test
pushf
sti
hlt
nop
mov
icebp
icebp
xchg
jg
mov
or
test
push
lahf
sbb
mov
arpl
insb
add
lods
pop
mov
sar
or
aad
mov
stos
test
xor
inc
mov
jge
inc
mov
bound
jne
pusha
sbb
sbb
rcrb
xchg
adc
push
xlat
cmp
mov
xchg
and
jns,pn
sub
stos
stc
nop
mov
cmp
pop
add
jno
in
xor
jo
loop
and
notb
mov
jecxz
dec
pop
xchg
push
xor
int3
pop
int
adc
fwait
jl
inc
mov
and
rorb
rcl
scas
jg
iret
jmp
pop
fisubs
mov
ror
sbbl
ljmp
mov
mov
add
fidivs
rcr
lea
int
pop
pusha
incl
les
inc
testb
cld
ficomps
adc
leave
fmuls
or
push
jle
sub
mov
xchg
mov
xchg
test
and
insb
std
or
aad
testl
dec
cltd
popf
pop
sbb
test
gs
lds
outsl
xor
xor
xchg
lds
cmp
test
repnz
leave
int
lret
cmpsl
sbb
pop
lods
and
fwait
mov
stc
sub
jmp
loope
xor
jae
jle
mov
mov
mov
ja
adc
sub
lcall
mov
pop
xchg
dec
int3
jmp
imull
rorl
adc
cs
pop
sbb
out
dec
popa
push
mov
data16
and
mov
cmp
mov
nop
mov
inc
shlb
mov
repz
sub
xor
mov
outsb
nop
dec
xor
or
xchg
inc
cmpsl
dec
aas
xor
sbb
adc
pop
sbb
or
fiadds
lds
mov
aas
lcall
mov
xchg
gs
dec
jmp
es
push
int3
mov
data16
adc
shr
push
push
push
mov
mov
in
cld
mov
mov
gs
sbb
fsts
pop
lock
cmp
insb
and
pop
jnp
and
rol
mov
dec
xor
outsb
jb
clc
sub
pusha
pop
out
push
ss
arpl
mov
xor
adc
xor
imul
mov
mov
cmp
sti
jle
outsb
pop
fldenv
cmp
fdivs
pop
cld
pusha
xor
mov
mov
dec
xor
mov
cli
loop
inc
xor
int3
add
add
jmp
push
insl
cmp
jmp
fistps
lret
xor
rcll
imul
inc
push
xor
pop
and
bound
out
mov
mov
adc
in
pop
mov
xor
clc
movsb
test
cwtl
xlat
mov
out
sbb
adc
aas
mov
mov
out
pop
cmp
lret
and
dec
add
out
adc
add
and
fnstenv
in
jle
ljmp
inc
lret
xchg
add
cld
dec
xor
mov
cld
cmp
sahf
aam
lds
inc
popf
lgs
xor
pop
cmp
lds
xchg
test
push
sbb
and
or
and
jmp
in
std
cmp
jo
test
stos
cwtl
xchg
mov
xchg
push
pop
jnp
lret
repnz
lods
pop
mull
in
fldt
jno
popa
insb
lea
scas
ja
sahf
out
daa
mov
cltd
lods
sub
push
push
adcl
in
jnp
or
outsl
ret
aam
mull
pop
stos
lds
push
aad
cmc
push
pop
mov
in
or
add
insb
icebp
cmpsl
fs
iret
outsl
insl
sub
imul
mov
leave
xchg
and
pusha
xchg
imulb
or
mov
push
hlt
shlb
lds
xchg
mov
pop
stc
dec
fucomi
mov
in
mov
add
xchg
shlb
dec
mov
xor
idivl
shrl
js
stc
in
std
jne
popa
or
mov
xchg
push
jge
sbb
in
lret
mov
sbb
scas
arpl
fs
add
enter
push
lret
int
push
int3
and
xchg
repz
std
out
xchg
mov
scas
orl
daa
and
mov
sbb
mov
adc
jo
cmp
dec
sbb
loope
in
xor
call
fiadds
fidivl
je
das
push
lret
ror
sbb
testb
loope
and
sbbl
insb
add
dec
ljmp
mov
lcall
enter
sub
outsb
shlb
hlt
pause
adc
stc
push
sub
insl
int3
test
jmp
lcall
inc
ds
mov
adc
cmpsl
xor
xchg
les
mov
mov
dec
outsl
fnsave
ret
xchg
add
sahf
xchg
data16
mov
clc
xor
add
adc
mov
andb
adc
cltd
stos
test
push
pop
pop
and
pop
jp
push
aas
cmp
bound
mov
mov
fdivrl
adc
fs
sbb
sbb
stos
jge
or
push
insb
pop
loope
xchg
dec
sbb
pushf
sub
add
lods
xchg
dec
and
fwait
pop
jmp
std
in
jbe
xchg
sahf
sbb
or
push
fs
ret
lcall
popf
aas
and
push
add
enter
xchg
or
jl
dec
ret
repz
or
out
imull
push
cmp
ss
clc
shl
mov
inc
imul
lcall
das
jp
or
xlat
sbb
mov
xchg
inc
ja
jg
jns
push
fwait
test
outsl
fisubl
cmp
jl
aaa
enter
in
jecxz
nop
mov
xchg
add
hlt
addr16
adc
jne
hlt
push
ljmp
push
fists
cmc
repnz
inc
jecxz
xchg
inc
xorl
in
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
out
adc
jne,pn
les
jnp
jge
addr16
ret
test
cli
inc
pop
shlb
inc
loop
imul
fisttpll
clc
xlat
repz
push
jnp
rcrb
jp
jle
cmp
idivl
jne
aas
sarb
scas
fmull
mov
xor
inc
js
jae
outsb
sti
enter
mov
mov
mov
call
roll
je
pop
adc
jo
movsb
out
pop
mov
fcoml
and
rorl
out
xor
adc
inc
lcall
push
mov
adc
aas
out
push
rorb
jle
and
or
push
mov
movl
fisttpll
lods
or
std
and
rol
mov
outsl
int
mov
mull
lock
pusha
xor
dec
lods
mov
test
pop
stos
stos
push
add
push
adc
das
scas
aad
cmp
pop
sbb
mov
ret
rclb
out
mov
test
jmp
leave
sub
push
loop
addr16
adc
lcall
stos
push
out
addb
icebp
shll
jae
or
jo
outsb
arpl
repnz
dec
add
pushf
shll
xchg
test
arpl
in
lea
in
lods
jae
int
push
rcrl
xchg
inc
pop
test
pop
in
filds
gs
mov
lret
pop
lcall
mov
push
adc
icebp
lcall
mov
repz
outsb
int
mov
jo
xchg
push
sarb
mov
rcll
pop
push
xor
mov
sahf
out
add
stc
dec
jne
daa
call
push
push
cmpsb
hlt
jne
adc
adc
sbb
ss
fmul
pop
sub
pop
inc
push
dec
int3
cs
movsb
jns
inc
mov
cwtl
push
dec
lret
adc
mov
rolb
jnp
adc
stos
fisubrs
mov
daa
pop
inc
jmp
push
icebp
xchg
bnd
aas
sub
mov
lods
lcall
pop
push
ds
ja
jns
mov
dec
stos
out
pop
dec
xor
enter
ret
xchg
mov
xor
lock
outsb
clc
in
ds
jmp
pop
repz
ja
pop
nop
movsl
mov
ret
gs
fnstcw
nop
dec
fdivp
push
dec
inc
inc
cmp
andb
mov
shlb
pop
aaa
mov
ret
fsubl
mov
add
xchg
xor
sub
ficoms
hlt
or
iret
out
dec
xchg
xchg
data16
cwtl
aam
pusha
popa
stc
fwait
sbb
gs
jno
les
lds
jne
inc
xchg
cmc
movsl
pusha
jmp
daa
aas
ljmp
mov
sbb
mov
fimull
popf
nop
jmp
pop
xchg
push
negl
subl
cmpsb
lret
push
xlat
fmull
jle
in
mov
xchg
mov
ficoml
ret
mov
aad
sti
dec
sub
sbb
shrb
dec
cli
stos
push
jge
mov
dec
adc
enter
popf
nop
test
outsb
adc
xchg
pop
cmpsb
scas
ss
addr16
daa
cmp
fcoms
out
ss
pop
aam
pop
xchg
int
adc
xor
jecxz
mov
sbb
js
jo
push
mov
and
addr16
mov
push
and
bound
mov
negb
dec
add
jo
imulb
push
adc
js
cmp
fmuls
jns
push
ja
outsl
jno
lds
mov
lds
les
movsl
mov
sub
sub
inc
cmp
mul
cmpsb
insb
mov
out
hlt
adc
arpl
sub
push
pop
push
jae
jmp
sub
fs
push
psrld
fidivs
popa
sbb
jnp
and
inc
aam
mov
dec
addr16
push
pusha
adc
jne
mov
outsl
pop
test
nop
and
stos
inc
ds
mov
jns
jecxz
sbb
lods
outsb
or
push
push
repnz
and
movsb
mov
out
popl
insl
jo
push
pop
add
mov
push
or
in
les
dec
sub
shll
incl
pop
in
jmp
xchg
shrb
movsl
gs
out
lock
lahf
pop
cmp
add
inc
out
inc
cmc
cmp
adc
aaa
int
dec
loop
mov
jmp
xlat
scas
or
int
js
push
loope
sbb
scas
fcoml
mov
or
stos
nop
jne
sti
das
pop
nop
mov
nop
push
mov
and
xor
mov
xchg
mov
jno
test
roll
jb
mov
add
pop
pop
dec
cs
cmp
popa
fidivl
push
bound
mov
jns
test
sub
je
and
into
jge
cmpsb
mov
ja
and
ds
mov
push
sbb
pop
into
xchg
sti
mov
fldenv
pushf
out
cltd
clc
addr16
sub
mov
popl
mov
test
xlat
icebp
hlt
sub
shrl
mov
scas
xor
adc
fs
adc
lret
fwait
std
lahf
ljmp
into
jne
or
mov
outsb
or
and
inc
sbbb
xchg
fsubl
jbe
scas
fcomi
scas
mov
mov
out
push
in
add
cmp
fstpl
ss
iret
loopne
stc
test
add
repnz
add
xor
fs
inc
stc
shl
repz
dec
adc
mov
jmp
add
and
add
daa
sbb
adc
ret
mov
jnp
push
sti
mov
push
xor
fcmovu
pop
pop
lret
in
loop
or
aam
jnp
dec
push
cmp
sbb
stos
inc
mov
mov
dec
push
pop
incl
add
insl
push
and
xchg
and
scas
push
dec
mov
daa
int
or
cmp
add
insl
rcrb
movsl
ret
jl
jl
inc
lods
pop
or
mov
xchg
into
jmp
pop
cmp
ljmp
ds
cld
inc
mov
xchg
addr16
mov
dec
mov
adc
jbe
pop
and
push
test
inc
test
ljmp
inc
dec
fisttpll
inc
in
cltd
adc
mov
jno
popf
xchg
sub
shll
adc
mov
xor
mov
cmpsl
aam
in
clc
adc
mov
push
mov
test
xor
cmp
dec
clc
popa
fs
xchg
or
push
inc
sahf
sub
cmp
push
jnp
lahf
and
mov
gs
sub
popf
pop
and
add
repnz
lods
repz
jp
sti
dec
and
lret
stos
insl
out
pop
aad
sub
sbbb
je
jp
adcl
jge
adc
xchg
adc
jmp
adc
push
imul
xlat
mov
and
lret
mov
inc
in
lahf
ja
mov
mov
arpl
dec
je
adc
and
dec
xchg
push
sub
int3
inc
mov
cs
nop
shrl
push
sbb
in
enter
je
iret
cmp
or
movsb
and
das
js
or
imul
adc
sub
rcl
hlt
ficomps
push
loopne
lret
loop
pusha
rcrl
pop
pop
xorb
push
addr16
inc
mov
in
pusha
into
pop
fpatan
pop
jge
out
xor
std
mov
xlat
jne
add
xchg
dec
xchg
mov
daa
int
rcrb
and
mov
mov
aaa
test
int
enter
popa
pushf
mov
sbb
aad
std
xchg
rcll
or
lods
mov
adc
in
pushf
fcmovnu
iret
push
sub
push
popf
fs
test
leave
pop
fwait
das
ss
push
lock
insl
idivb
out
adc
push
jmp
shlb
jg
ror
adc
cmc
jg
int
ja
push
sbb
sbb
test
pop
addr16
push
mov
sbb
inc
push
arpl
call
push
mov
inc
fistpll
jge
stc
test
push
cmpsb
test
lock
cmpsb
icebp
mov
jecxz
dec
bound
xchg
in
fists
repnz
adc
jecxz
fwait
sbb
pop
imul
pop
mov
jge
jbe
aad
ror
ja
mov
cmpsl
fwait
xor
mov
or
mov
std
add
scas
fldenv
pop
sbb
out
and
cmp
cli
ljmp
dec
sbb
call
divb
xor
and
insb
mov
stc
lret
ret
mov
push
movb
ficompl
dec
stc
sbb
mov
mov
cmpsl
xchg
bound
subb
mov
fcmove
ja
xchg
push
push
lcall
inc
mov
out
pop
pop
sbb
shrb
pop
loopne
incl
mov
test
insb
xor
imul
cmp
jmp
and
jno
sub
dec
imul
imulb
dec
pushf
sbb
pop
addr16
negb
xchg
fdivs
sbb
cmpsl
mov
or
repnz
pop
xor
and
xchg
inc
xchg
lods
cld
aaa
cmp
jmp
mov
and
ret
cmp
pop
cmpsb
test
addr16
daa
scas
das
pop
movsb
sub
scas
fmul
dec
sub
pop
nop
repnz
outsl
gs
jnp
cmp
xchg
mov
mov
inc
push
dec
cli
stos
mov
mov
push
lock
lods
mov
add
ja
xchg
adc
jb
pop
sub
lds
es
jo
inc
mov
lret
xchg
lret
in
or
pop
les
in
daa
lcall
mov
inc
mov
xchg
bound
popa
loopne
stc
and
xor
cld
xchg
add
ret
and
daa
lcall
sbb
mov
sub
aaa
xor
dec
and
mov
mov
ds
int3
mov
jmp
pop
out
sub
popa
mov
repnz
push
jo
cmp
xchg
mov
lret
pop
icebp
clts
mov
and
mov
adc
test
ss
les
pop
mov
sbb
cmp
out
push
mov
xchg
lcall
pop
mov
sbb
rcll
inc
pop
cmp
xor
mov
daa
pop
jmp
fsubrp
repz
adc
lods
jo
and
std
adc
and
push
cmpsb
pop
pop
fildl
dec
mov
mov
jge
test
xor
rolb
lods
adc
lret
sbb
sub
mov
fs
pop
dec
xchg
shll
push
xor
xor
xlat
push
mov
xor
jg
jge
xchg
frstor
movsl
mov
stos
mov
add
adc
add
nop
dec
out
data16
out
jns
das
test
popa
sub
in
mov
push
arpl
ficompl
shlb
ret
or
shll
in
ror
inc
movsl
jns
jbe
xor
daa
leave
xchg
iret
push
out
call
test
in
fmuls
in
dec
inc
repnz
ja
in
bound
jmp
and
ret
adc
mov
cmp
test
les
xchg
lods
xor
cmp
adc
jns
fmull
lods
les
mov
cmp
pop
mov
push
cmpsl
cmp
push
mov
gs
xchg
repnz
mov
loopne
pop
dec
push
cmp
imul
cmpsb
mov
jns
or
push
fst
stc
leave
outsl
cli
mov
xchg
pop
mov
loopne
add
scas
outsb
mov
addr16
scas
push
cmpl
adcl
lock
xor
inc
sarb
call
inc
dec
xlat
inc
test
push
mov
fcmovu
loope
push
xor
leave
xchg
lret
loop
jns
mov
out
dec
in
std
fcmovnbe
jne
push
pop
jg
sub
push
inc
mov
mov
repnz
push
mov
jle
inc
jnp
cmp
sub
out
ja
cmc
or
pop
cli
pop
fnstsw
ljmp
pushf
or
pop
push
rorl
add
sti
jmp
cwtl
pusha
sub
pop
outsl
xchg
pushf
mov
and
xchg
lods
push
movsl
sub
sbbl
push
xchg
movsl
incl
cli
pushf
stos
scas
sub
aaa
pushf
pop
xlat
adcb
push
mov
clc
xlat
or
add
fnstsw
icebp
add
lock
pop
rorb
jne
mov
shr
mov
xor
loop
mov
dec
or
jo
pop
hlt
and
inc
arpl
dec
int3
movsb
xchg
leave
jge
aaa
dec
xchg
mov
icebp
jg
jbe
loop
sbb
cs
insl
aad
push
pop
sub
xchg
fiaddl
sbb
mov
hlt
xchg
cli
ljmp
inc
jmp
test
sbb
add
in
pop
ret
dec
cmp
testl
testl
cld
push
stos
in
lcall
lahf
test
mov
mov
add
cltd
sub
fwait
sub
mov
int3
sti
cmpsl
sahf
shlb
pop
xchg
arpl
cli
fimull
int3
push
or
or
adc
jb
test
xchg
mov
and
js
sbb
adc
jg
lret
lods
test
adc
push
push
sbb
mov
dec
sub
xchg
pop
mov
sub
scas
xor
or
lahf
xchg
mov
sub
and
test
mov
test
loop
fcompl
movsb
aas
gs
mov
int3
adcl
jne
shll
loopne
pop
dec
mov
fisttpl
add
aaa
or
mov
mov
frstor
test
mov
jl
loopne
gs
inc
push
adc
dec
fs
inc
fistpl
mov
push
sbb
fidivrs
ss
adc
jns
sbb
rcl
in
movsb
pushf
dec
sbb
adcb
cmp
jbe
and
int
inc
test
int3
cltd
fldenv
fsub
or
fldt
xlat
mov
xlat
scas
mov
mov
adc
test
ss
int
out
out
fs
or
push
xchg
and
jge
add
int3
decl
or
pop
outsb
insb
adc
loopne
xrelease
mov
cld
pop
add
adc
pop
xorb
or
aaa
adc
or
sub
js,pn
sarl
sarb
push
lds
mov
lods
in
out
push
xor
adcl
inc
xchg
jns
scas
test
xchg
push
jb
scas
push
mov
aaa
clc
divl
or
mov
xor
arpl
adc
fsubrp
mov
sub
xchg
adc
ja
xchg
sub
lret
js
lock
mov
popa
xchg
cmpsb
fmul
sub
sub
cmpsl
bound
test
mov
adc
adc
pop
dec
jb
test
xchg
das
arpl
dec
jmp
or
cmpb
int
iret
jge
jecxz
cmp
cmp
cwtl
pop
cli
in
ja
sbb
mov
xchg
adc
ret
cli
and
iret
rorl
and
push
xor
pop
cwtl
xor
sub
cmpsl
aaa
rcrl
std
mov
jbe
push
add
inc
mov
mov
jecxz
test
or
call
popa
sub
ror
cmpsb
xlat
lods
call
jae
in
sub
xor
and
xchg
leave
pop
in
cli
vphaddbq
inc
in
push
lds
jbe
shll
sbb
in
push
pop
rolb
add
rolb
push
iret
je
jmp
xor
cli
stc
shll
xor
in
or
inc
outsl
mov
faddl
cwtl
clc
jmp
test
mov
jmp
or
addl
shlb
enter
jl
jnp
pop
mov
cmc
jb
mov
jmp
jmp
xlat
pop
add
push
push
flds
pop
sbb
cmc
fnstcw
int3
inc
inc
or
xchg
loopne
pop
lock
jns
cmp
stc
fiaddl
push
idivl
movsl
in
cmp
xchg
mov
cltd
cmp
jne
mov
xlat
push
dec
arpl
shrl
push
add
sbbl
inc
jmp
ds
mov
xchg
pushf
fs
mov
inc
ljmp
xchg
cmpsl
sbb
xor
jmp
lds
in
testl
out
ret
addr16
call
mov
sub
inc
pop
cli
movsl
xchg
fidivrs
test
movsb
rorl
lods
inc
mov
hlt
xchg
mov
fldl
xor
pop
sub
mov
and
test
test
call
sbb
aam
dec
push
sub
ja
sbb
adc
pushf
mov
pop
lahf
imul
or
sub
fistpl
mov
add
mov
xor
call
lcall
std
popf
clc
cmpsl
fs
test
cmc
mov
in
gs
pop
mov
push
lcall
mov
sbb
insl
xchg
xor
das
movsl
inc
xor
fisubs
xchg
mov
xorb
add
jne
lock
test
fucomp
mov
xchg
push
and
mov
inc
adc
sub
mov
stos
and
stc
lahf
cltd
xchg
push
mull
jg
lret
mov
ds
mov
in
movsl
insl
sbb
lcall
cwtl
xchg
jo
inc
shll
inc
icebp
sub
or
mov
jl
mov
or
nop
into
es
icebp
adc
lret
mov
stos
roll
movsb
fldt
adc
insb
or
shll
dec
clc
push
mov
repz
mov
outsb
fists
fnstcw
outsb
mov
ret
lret
pop
adc
mov
out
mov
arpl
jns
or
lahf
in
std
cmp
addr16
shrl
fisubl
movsl
jbe
and
fsts
or
mov
imul
mov
movsb
pop
add
jge
dec
dec
add
stos
cmp
data16
jg
cli
mov
jmp
loop
pop
xor
insb
sbb
ficoms
and
rcrl
popa
arpl
cmp
das
push
pop
sbb
fldl
mov
int3
sbb
jbe
xchg
into
xor
add
dec
push
call
cltd
mov
call
adc
jg
aaa
adc
push
fwait
icebp
mov
loopne
rdmsr
mov
sete
stos
lods
xlat
movsb
ljmp
hlt
jnp
out
inc
add
xchg
pop
mov
lcall
mov
push
lret
mov
mov
cmpl
or
push
or
addb
mov
shll
cli
mov
outsb
jno
fdivs
inc
xchg
int3
ds
and
xlat
mov
adc
mov
sub
lock
in
adc
cmp
xchg
xorb
arpl
shlb
movsb
mov
pushf
dec
adc
mov
xor
jne
ds
inc
jnp
gs
xchg
pop
mov
xchg
add
call
lret
bound
mov
hlt
pop
cmc
pop
mov
je
xchg
sbb
and
mov
mov
repnz
adc
inc
xor
inc
xchg
ss
test
popa
jge
mov
negb
mov
imulb
ds
fs
sbb
dec
lds
nop
shr
jb
inc
subb
mov
sbb
dec
xor
push
outsb
push
inc
mov
pop
xor
xchg
sbb
jl,pn
dec
xor
push
aad
je
loope
hlt
pop
repz
enter
adc
out
aam
xor
imulb
sub
inc
or
fwait
jo
jp
loope
enter
lret
aam
sub
inc
push
adc
test
pop
lcall
sub
fs
loopne
fsubrs
jl
and
fsts
rcrb
loop
mov
popa
and
outsb
jbe
and
push
mov
sti
ret
lds
and
mov
sbb
and
aas
or
cld
jecxz
clc
fsub
cmpsl
icebp
aad
nop
or
sbb
fmull
or
xchg
push
pusha
xchg
outsl
pop
jmp
movsb
mov
adc
jnp
jle
pextrw
adc
aas
adc
inc
movsl
add
in
ss
push
pop
fimull
or
lret
std
mov
out
icebp
push
pop
or
filds
inc
std
nop
inc
test
std
loop
add
sti
pop
jo
dec
test
cmp
aas
and
shr
mov
mul
mov
out
and
jmp
scas
movsb
sbb
adc
scas
insl
xchg
js
mov
mov
or
adc
pop
cmp
iretw
dec
addb
cmp
mov
inc
inc
sti
lock
movsl
movsb
and
ss
mov
add
movsl
and
pop
or
add
push
cmp
nop
in
mov
pusha
mov
outsb
test
dec
push
mov
movsl
jle
cmc
and
inc
ds
and
in
push
dec
popa
sbb
daa
insb
pop
icebp
fwait
jb
and
shr
scas
pusha
mov
aam
pusha
outsl
mov
mov
cmp
xor
sbb
sub
out
jl
popa
in
and
fisubs
popa
cmpsl
push
push
stos
xor
jns
and
out
xchg
sub
push
adc
push
lahf
and
adc
or
into
xor
int3
clc
adc
test
sbb
cmp
mov
in
and
cmpb
xchg
out
cwtl
jecxz
jnp
pop
dec
jle
or
mov
test
bound
mov
gs
adc
lret
movsb
jb
and
add
and
or
cltd
roll
test
xchg
adc
adc
xchg
les
insb
ret
dec
adcl
add
cmpsl
jno
mov
lahf
imul
or
pop
lcall
subl
out
in
fucom
dec
std
test
sbb
das
adc
mov
std
arpl
dec
jecxz
test
sbb
push
cmc
push
adc
and
jbe
lret
xchg
scas
hlt
cmpl
xchg
mov
roll
dec
xor
std
loope
sbb
cmp
add
jbe
or
call
roll
cmp
addl
mov
sahf
sbb
stc
pop
decb
or
cltd
jae
mov
dec
add
test
imul
xchg
lds
push
test
xchg
push
lahf
xor
andb
enter
or
cmp
add
mov
popf
push
jno
adc
and
in
xor
mov
mov
ret
je
jecxz
jge
shrl
dec
int
xchg
pop
jmp
dec
jp
or
cmc
or
xchg
sub
leave
or
lret
dec
mov
push
lods
mov
lds
mov
push
lods
popf
cmpsb
movsb
aad
jbe
jo
pusha
jecxz
jns
jae
vmaxsd
es
ja
push
aam
adc
xor
pop
call
cmpsl
mov
xchg
jns
cmc
cmp
mov
cwtl
insb
cltd
test
fs
fdiv
pop
or
les
adc
or
xor
push
pop
jb
lods
sbb
rorl
mov
dec
loop
cmpsb
cmp
or
or
lods
add
inc
iret
pop
cs
and
cmp
or
inc
sbb
push
push
call
push
nop
cs
sbb
or
shl
cmc
inc
cmp
je
pusha
dec
adc
hlt
and
sarb
add
out
jno
adc
jb
pop
jmp
push
xor
lea
sti
or
cmp
xchg
out
jmp
rol
and
push
inc
inc
cmp
push
xlat
add
shrl
push
movb
mov
mov
shl
roll
dec
stc
jnp
add
pop
stc
jg
cmp
arpl
out
sarl
pop
xchg
adcl
add
lret
dec
add
leave
stos
rorb
inc
popf
sahf
cmp
pop
js
inc
fsubrl
xor
sub
stos
test
repz
pop
scas
inc
mov
inc
mov
sbb
fsts
cmp
sub
xchg
rol
daa
roll
rdtsc
aaa
lock
sub
mov
mov
xchg
jbe
jecxz
sbb
fwait
cmp
mov
lcall
in
mov
bound
mov
xchg
das
sbb
aad
test
sub
xor
subb
cmpsb
mov
adc
xchg
mov
test
and
nop
popf
leave
negl
test
sbb
lds
push
cwtl
and
enter
loopew
mov
rcl
add
je
negb
loope
mov
lods
pop
icebp
clc
cmp
leave
scas
jo
pop
test
scas
mov
sub
xor
or
mov
mov
sarl
xor
sbb
cmpsb
jnp
aad
add
or
jle
adc
mov
or
fwait
stos
jl
ret
aaa
data16
mov
mov
rcll
pop
sti
sub
repnz
mov
sahf
lcall
in
xchg
lods
xchg
xchg
pop
push
orl
fistl
cmpl
inc
jmp
dec
pop
dec
mov
push
dec
inc
add
mov
dec
lods
mulb
inc
addr16
mov
push
shlb
jge
ljmp
push
xchg
cli
shll
aam
jmp
xchg
cmp
inc
popa
aaa
fnsave
push
push
stos
and
gs
stos
hlt
imul
cmp
adc
dec
adc
fsubrl
push
ficompl
cmp
xor
push
xchg
mov
cmpsl
xchg
xor
push
fidivs
adc
add
out
cwtl
mov
mov
push
fs
sti
jmp
icebp
jne
mov
dec
les
sti
cs
mov
das
xor
sub
push
pop
mov
lods
repz
data16
nop
adc
xor
outsl
jmp
xor
test
pusha
ds
or
into
ret
test
jecxz
outsl
mov
mov
ja
movsl
cmp
imul
sahf
or
decb
ljmp
jl
cs
mov
mov
xlat
aam
mov
ja
mov
push
pop
leave
out
jecxz
lock
repz
and
mov
sahf
mov
sub
mov
pop
or
jb
lods
adc
pop
ss
sub
cltd
jg
icebp
xor
imul
xchg
sahf
push
xor
push
sub
imul
ja
mov
add
mov
xchg
xchg
mov
js
sub
test
sub
inc
and
sti
mov
sahf
jnp
fs
ret
out
test
sti
dec
or
push
fsts
test
mov
lock
xchg
imul
lea
ficoms
sbb
out
ljmp
dec
xlat
dec
or
sbb
and
out
mov
or
call
or
add
inc
mov
xor
int
xor
dec
call
lods
out
mov
mov
lods
mov
fisttps
lods
add
xor
mov
add
ljmp
fstpt
out
fidivl
sbb
das
sub
lock
or
cltd
xor
stos
sbb
cmc
add
inc
inc
in
cmp
pusha
fsts
cltd
cmc
out
and
shl
adc
add
cmp
pop
or
lea
jne
push
jg
mov
lods
sub
mov
out
scas
test
insl
jne
cmp
cltd
call
scas
jecxz
mov
inc
lret
outsl
movsl
jb
int3
testb
repz
pop
mov
lret
or
lea
cmc
pavgb
mov
fstpl
cwtl
in
jg
lcall
lcall
inc
daa
or
jp
das
sub
and
scas
inc
data16
outsl
scas
lret
pusha
pop
jmp
cmp
mov
popl
fldl
sbb
pop
mov
movsb
xchg
adc
cmpsb
push
xchg
push
pop
fistpll
lahf
cmpsl
mov
imul
xchg
testb
or
repz
std
mov
add
adc
aaa
sbb
pusha
hlt
inc
sub
push
iret
les
pop
mov
into
jnp
je
adc
enter
add
sahf
stos
call
adcl
hlt
in
mov
rcrl
or
je
clc
idivb
dec
inc
test
loop
lods
insb
pop
add
push
xor
push
dec
xor
xor
jle
xchg
mov
sarb
dec
lods
cmp
ret
mov
adc
push
shlb
or
jecxz
push
xor
aas
pop
stos
sub
dec
cld
push
es
push
mov
mov
or
nop
cmc
dec
mov
mov
adc
fmuls
sub
pop
ror
jae
out
addr16
sti
fmull
adc
sub
mov
mov
fdivrs
add
inc
inc
or
add
push
mov
addr16
loope
arpl
dec
into
mov
flds
mov
cs
fisubs
es
js
cld
jmp
mov
inc
xor
add
adc
lahf
cmc
stc
xchg
ret
mov
mov
sub
push
ret
dec
js
xor
dec
push
mov
jecxz
rorl
loopne
pushf
sbb
cmp
pop
int
inc
push
cld
pusha
pusha
adc
dec
stos
cmp
mov
pop
lea
jge
mov
mov
daa
add
add
jno
ljmp
in
ret
aad
mov
mov
mov
in
data16
or
jle
test
inc
addb
addb
or
data16
sbb
pop
arpl
and
sbb
or
jns
cmc
outsl
mov
jne
int3
mov
mov
sub
outsl
fstp
in
mov
jge
ds
dec
push
push
sub
fsubl
mov
add
and
shll
add
imul
mull
mov
jo
pusha
mov
lahf
jns
pop
gs
add
add
cmp
shll
rclb
xor
mov
outsl
cmpsl
mov
mov
pop
xlat
push
aad
fldcw
jp
jp
outsl
test
push
lods
faddl
mov
test
std
xchg
cmc
std
sub
mov
mov
out
pushf
cmp
pop
das
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
pop
mov
jp
sti
pop
jp
sub
xchg
xchg
sbb
mov
les
fistps
cwtl
imul
ror
lcall
aas
jnp
fsts
push
icebp
jbe
int3
nop
xlat
sub
mov
cld
jmp
divb
cli
cmp
pop
testb
xor
gs
cltd
imul
push
in
xlat
jmp
pop
addb
cmp
push
xchg
xchg
in
bound
inc
lods
mov
cltd
ret
out
add
repz
sub
cwtl
or
dec
cmpsl
jge
push
imul
movsb
inc
mov
es
ja
mov
dec
hlt
stos
mov
fldl2t
lds
cltd
pop
pop
enter
mov
cmp
and
fdivl
cwtl
in
lea
cwtl
pop
inc
out
cwtl
or
and
or
cltd
cwtl
sub
inc
jbe
lea
lds
xor
aas
data16
push
idiv
lahf
stc
mov
pop
mov
das
mov
or
jg
or
add
stos
or
inc
testb
or
lds
les
cmp
mov
pop
jmp
jnp
jb
test
xlat
or
out
les
movsb
push
cmpsl
mov
fadd
repz
iret
lcall
imul
sbb
pop
add
cs
gs
mov
test
out
or
cmp
dec
test
mov
xor
mov
out
push
mov
rcll
pop
and
fistpll
nop
jecxz
sub
cmc
sub
aaa
mov
ljmp
or
mov
mov
xor
jg
xchg
outsl
lcall
mov
sub
add
jbe
jecxz
ljmp
push
loope
adc
pusha
push
mov
pop
xor
decl
mov
js
xchg
mov
mov
mov
lds
fstps
fimull
mov
or
js
sub
mov
fists
out
xchg
dec
js
cltd
sahf
popf
pop
pop
aad
xor
scas
stos
xchg
cmp
xor
bound
test
lea
aam
cwtl
fwait
add
or
loopne
in
clc
sbb
pop
lock
mov
xchg
mov
sub
iret
fwait
shrl
pop
mov
add
xchg
cli
jns
sub
add
cmp
loopne
scas
out
mov
dec
or
adc
mov
push
push
lcall
push
clc
xor
jmp
test
mov
xchg
inc
cltd
pushf
mov
std
mov
jbe
xlat
dec
in
in
clc
cltd
xchg
in
sbb
ret
hlt
lea
test
out
data16
cmpsb
rol
daa
xor
aad
fdiv
or
out
cmp
push
push
or
stos
pop
aam
cmp
lea
shr
popa
pop
add
dec
cld
pop
or
inc
jo
scas
andl
sub
mov
pop
inc
sub
pop
fimull
sbb
mov
and
mov
jg
nop
mov
mov
xchg
jns
outsb
test
cmp
dec
jecxz
and
mov
cmp
jno
push
sbb
and
mov
sub
and
sub
imul
push
sbb
fcmove
lods
add
cmpsb
cmp
push
test
insl
jo
dec
add
sbb
mov
sbb
lods
rolb
xor
cmp
add
stc
iret
and
dec
pop
pop
ret
mov
cmp
or
loop
xchg
je
cmp
adc
xor
hlt
and
jmp
cmpsb
dec
push
pop
cmp
sahf
andb
cmp
inc
xor
fwait
gs
add
sbb
inc
shlb
out
out
xchg
adc
bound
xor
jbe
xchg
xchg
std
adcb
repz
and
jno
lret
pop
and
stc
out
cmp
leave
insl
inc
xor
fcoms
or
adc
aam
or
stc
pop
cmc
in
out
xor
enter
mov
push
cs
gs
or
jmp
cmpb
fldcw
fcomip
sarb
scas
add
and
repnz
shlb
jns
xchg
xor
sub
shll
push
shll
xchg
hlt
mov
js
les
inc
xor
xlat
or
lret
jmp
lds
addr16
repnz
lcall
mov
mov
mov
add
fs
cmpsl
dec
jae
leave
cmp
lods
mov
sub
cld
nop
out
js
push
cwtl
jge
aas
dec
xor
sub
js
add
adc
push
adc
add
xor
popf
ss
inc
pusha
pop
insw
push
fisubrs
or
mov
sub
fildl
push
sub
and
mov
pushf
adc
lock
ss
aad
lret
inc
add
sbb
inc
insl
mov
pop
inc
mov
xchg
sbb
aad
pop
enter
adc
cmp
orb
cltd
aas
sub
push
mov
sti
cmp
ss
adc
xrelease
ja
fwait
les
loopne
ds
lret
xlat
sbb
vmovaps
add
adc
xlat
inc
nop
jae
jns
shrb
or
push
in
mov
ret
in
and
sahf
lods
js
mov
pop
fld
or
rcr
jbe
je
and
dec
popf
pop
sti
adc
and
sbb
pop
mov
loop
das
dec
loop
and
jge
lea
inc
xor
arpl
jmp
mov
sbb
push
lods
scas
clc
loopne
jae
cmp
mov
xchg
lahf
mov
cmpsl
dec
sbb
cmp
adc
jns
cmp
pusha
scas
pop
dec
cli
mov
pushf
dec
scas
xor
lock
inc
xor
mov
pop
ficomps
jae
push
and
mov
dec
insl
bound
add
mov
mov
fistps
and
dec
mov
ja
sarb
or
movsl
lcall
cltd
mov
and
daa
mov
pushf
cs
rcl
push
sub
in
cmp
pushf
aaa
jge
mov
icebp
cmc
and
add
or
cmp
pop
leave
push
xchg
out
hlt
ret
sahf
cwtl
fdivs
int
arpl
sub
xor
cwtl
jae
mov
insl
cltd
pop
loope
incb
push
push
leave
adc
insl
cli
or
dec
mov
test
and
mov
stc
mov
inc
je
adc
out
rcll
scas
bound
inc
out
push
sbb
out
sub
mov
or
mov
repnz
mov
das
bound
pop
xor
xchg
adc
inc
inc
xorb
mov
cli
jo
lods
scas
clc
cmc
push
and
inc
xchg
pop
mov
data16
jne
jl
pop
insl
insb
sti
mov
cmp
cmpsl
lock
testb
cmp
shlb
xchg
subl
insb
fs
inc
mov
mov
arpl
nop
les
iret
nop
dec
pushf
sbb
sti
add
pushf
pop
or
inc
sti
xor
and
xor
xor
add
cld
xor
xacquire
dec
in
xchg
xor
inc
cmp
adc
mov
adc
and
je
pop
sar
dec
push
gs
push
scas
cmp
push
xor
adc
adc
lock
out
pop
movsl
loop
fs
xor
loope
orl
out
mov
cmpsl
mov
dec
pop
jbe
mov
mov
mov
inc
rcll
or
sbb
jl
fs
lock
loopne
push
rolb
pusha
cwtl
out
inc
mov
loopne
out
push
xlat
cmp
pop
cmp
ret
or
and
inc
test
dec
lea
ds
in
lahf
mov
push
in
ja
nop
or
ficompl
aaa
sbb
js
pop
cli
cmp
cmp
lods
aas
lret
mov
std
fildl
add
mov
jle
xchg
push
dec
mov
sahf
fstpl
pop
mov
push
enter
inc
jge
xchg
rcl
fwait
add
sbb
xor
rcl
icebp
push
aas
shlb
std
and
xchg
xchg
lcall
out
jmp
pop
jno
dec
xchg
push
movsb
or
bound
out
xor
mov
cmp
or
push
mov
add
loope
insb
dec
or
insb
stos
xchg
push
fwait
push
scas
xchg
ret
push
jns
ret
addr16
xchg
push
push
scas
jge
xchg
xchg
sub
sub
mov
xchg
outsb
movsl
sub
mov
and
fs
repnz
xchg
dec
dec
mov
or
xchg
jmp
mov
dec
in
add
jmp
push
pop
bound
fdivr
pushf
das
cld
ret
push
shr
test
mov
lahf
xor
sbb
pushf
xor
jmp
xchg
ret
xor
rorl
int
shrl
test
hlt
mov
xchg
loop
xchg
movsl
negl
icebp
push
sahf
mov
insl
pop
pop
and
lahf
das
cltd
imulb
iret
popf
out
mov
fildl
mov
rcr
or
mov
sub
ds
jne
loopne
scas
jge
addr16
notl
movsb
fsubl
xchg
aaa
push
lds
push
xchg
sub
xor
shlb
aas
jg
jbe
pop
daa
mov
and
sbb
subl
jmp
add
lret
scas
ljmp
test
ljmp
lahf
inc
out
js
jmp
sti
aas
cmc
je
push
xchg
aam
push
mov
scas
out
mov
fimull
shr
xchg
popa
lret
insl
adc
and
push
mov
iret
loopne
imul
or
stos
repnz
add
cmp
js
js
repz
and
or
daa
icebp
add
out
popa
jge
jns
and
cmp
subb
cmp
or
dec
xchg
popf
mov
loop
push
xor
inc
and
jns
ret
sbb
rorb
add
xchg
mov
sarl
xchg
aad
mov
mov
lret
pop
out
jmp
outsb
push
hlt
xchg
or
push
sub
pop
add
pop
xchg
jle
fstps
jmp
xchg
xchg
mov
cmp
aaa
ds
divl
mov
adc
push
pop
inc
dec
jbe
xor
mov
xor
fs
mov
pop
pop
mov
sti
mov
jnp
js
out
cmp
push
mov
cli
push
sub
and
push
iret
into
pop
jmp
in
xor
in
rcrb
nop
arpl
fcompl
nop
aaa
popa
jnp
sub
sub
xor
sub
dec
dec
jae
in
mov
and
add
popf
in
push
cli
aad
adc
fldcw
pop
mov
push
movb
pop
test
xor
jne
add
adc
cli
push
mov
xchg
js
mov
stos
jge
cs
test
jmp
mov
fnstcw
shll
lock
in
sub
cld
ror
mov
push
pop
xchg
push
xchg
cmp
push
iret
mov
cmp
mov
mov
cwtl
inc
or
mov
pop
pop
cmc
mov
xlat
stos
out
push
ficompl
into
push
loopne
arpl
fsubrl
mov
stos
mov
xor
xchg
xor
mov
outsb
jge
pop
jo
mov
incb
rclb
mov
xchg
mov
stos
notb
sbb
dec
lods
pop
test
dec
sbb
cmp
dec
adc
or
fsubs
pop
idiv
aaa
or
subb
cmp
pop
insl
push
faddl
cs
dec
and
mov
mov
stos
xchg
out
std
cmp
out
arpl
dec
ja
insb
sub
leave
shr
sahf
xchg
scas
adc
in
stos
xor
sub
mov
ror
bnd
lods
jp
cmp
inc
gs
xchg
dec
fistpll
inc
cmp
popf
shll
adc
arpl
test
sbb
daa
cmpsb
pushf
dec
gs
inc
or
pop
std
out
pushf
jmp
imul
xor
cmc
iret
jg
cltd
mov
dec
imul
fmulp
imul
popa
cwtl
jge
mov
cli
jg
dec
pop
into
pop
in
push
andb
test
mov
add
test
push
mov
xor
loopne
test
dec
and
or
mov
stos
sbb
xchg
ret
mov
cmp
outsl
jl
mov
pop
cmp
adc
fsubl
jg
rol
adc
jg
adc
push
pop
clc
mov
es
add
pop
mull
loope
iret
test
mov
cmc
mov
testb
sbb
outsl
push
mov
test
jo
mov
testl
mov
jo
sbb
fisttpll
xchg
loope
test
scas
dec
in
jmp
mov
or
test
jae
pop
arpl
sub
mov
xchg
mov
fcompl
lock
pop
lcall
movb
fabs
or
outsb
add
jo
data16
test
fdivrs
jg
out
jmp
bound
out
stc
cld
mov
or
hlt
in
nop
inc
adc
xchg
mov
dec
lods
sbb
dec
call
das
cmpl
imul
ljmp
or
inc
addr16
int
daa
cmp
arpl
mov
test
dec
push
mov
or
test
xchg
nop
mov
in
push
inc
stos
inc
or
mov
inc
rcll
sbb
sbb
sbb
push
sub
jae
aam
jmp
add
mov
jne,pt
cmp
add
inc
cld
mov
xacquire
daa
or
sub
xchg
es
pop
inc
sub
bound
ret
aas
cs
nop
inc
out
xchg
cmp
js
aad
mov
sbb
fsubrs
pop
mov
hlt
scas
into
push
dec
mov
push
mov
fildll
xor
inc
push
xchg
aaa
or
mov
idivl
movsb
jmp
or
int
test
pop
mov
xor
orb
push
inc
out
xchg
or
movsl
push
or
nop
inc
or
ret
pop
sub
push
mov
bound
lcall
mov
xor
daa
cmp
pop
inc
push
sub
dec
push
mov
filds
xchg
mov
sbb
fidivl
scas
jmp
hlt
adc
push
xor
rolb
insb
mov
clc
xor
ss
or
inc
add
fwait
cmp
pop
or
loope
fnsave
movsl
icebp
sub
adc
add
andb
xchg
xor
xchg
enter
dec
adc
and
adc
mov
add
push
repz
and
fs
or
jbe
in
inc
dec
xchg
or
fneni(8087
pop
js
fistpll
int3
add
fistl
mov
mov
jo
pop
inc
ret
dec
fxch
jp
ficoml
pop
movsb
mov
movsb
js
fwait
rorb
push
jns
fnsave
scas
or
add
rorl
mov
jp
data16
shl
jo
add
int
push
cmp
imul
js
ss
mov
mov
mov
lret
sbb
cmp
xlat
cmp
in
ljmp
jne
aam
pop
xchg
out
aad
fnstcw
add
mov
jae
and
scas
and
pop
and
imul
js
aad
cld
ja
testl
test
data16
dec
sbb
cmp
or
mov
out
ds
mov
sbb
cli
sbb
dec
mov
and
cmp
or
clc
mov
sti
xor
mov
fists
test
sbb
inc
mov
in
popf
arpl
scas
mov
in
loope
notb
mov
jae
pop
cmp
cmpsl
push
lock
dec
in
inc
pop
push
push
repnz
ret
mov
fwait
adc
push
lds
imul
cmpsb
adc
pushf
push
test
out
pop
push
test
mov
push
jg
jl
add
xchg
sbb
mov
insb
out
sub
pop
test
cmp
lock
aaa
mov
cmp
sbb
aaa
pop
jno
and
xchg
mov
mov
jmp
int
repnz
sbb
xchg
sbb
imul
ret
int3
and
adc
cmpsb
mov
fdiv
aas
adc
sub
out
loop
jg
sbb
pushf
sub
cmp
pop
and
out
outsb
push
and
out
in
jecxz
mov
fidivs
adc
jns
cs
jae
push
mov
mov
sub
je
insl
add
pop
ror
dec
adc
sub
dec
adcl
in
pushf
pop
enter
inc
mov
js
push
pop
xchg
and
outsb
sub
cmp
insb
pop
pop
fstps
mov
int
pop
sub
mov
test
inc
stc
repnz
sti
pushf
outsl
ficoml
xor
inc
push
rclb
dec
aas
jecxz
adc
aas
jle
leave
dec
pushf
aad
mov
xchg
nop
sti
cmp
dec
leave
mov
fwait
xchg
inc
nop
or
xor
jnp
or
inc
sti
faddp
xchg
mov
in
sbb
fdivs
mov
xchg
stos
add
cmpsb
adc
and
lahf
fs
mov
sub
pusha
sub
lds
jmp
jno
pop
divb
push
sub
pop
add
inc
int3
inc
add
js
call
push
clc
jecxz
out
popf
aaa
aas
stos
cs
or
lret
inc
mov
out
aas
pop
jns
imul
jle
in
mov
cmp
test
pop
cli
push
call
call
stos
ss
add
sar
add
and
loop
fdivs
addl
test
or
fisubrl
inc
aad
and
push
mov
movsb
outsl
enter
adc
and
lock
fistpll
add
inc
lret
push
lock
shll
dec
pop
enter
dec
and
shlb
movsb
orb
mov
mov
cmp
je
xchg
arpl
daa
lds
mov
js
xchg
mov
pop
cwtl
inc
in
mov
mov
lret
rclb
dec
outsl
aaa
sar
adc
ds
scas
ficompl
sbb
cmpsl
dec
mov
inc
add
xor
das
cmpsl
jmp
lcall
out
cmpb
roll
cmp
push
mov
inc
ss
add
xor
xor
daa
loop
pop
shll
rorb
popa
dec
pop
lret
insb
push
test
das
mov
out
mov
xchg
adc
jg
dec
mov
addl
dec
aas
aam
sti
mov
fstpl
loop
roll
jecxz
pop
pop
or
jmp
inc
fsubr
sbb
pop
daa
outsb
mov
cld
xorl
jae
testb
sbb
dec
stos
pop
fldenv
pop
sbb
and
cmpsb
jl
lods
mov
jae
loope
test
lock
jmp
lods
cltd
rcrb
or
fidivl
and
ss
arpl
xor
imul
inc
add
int
dec
jb
arpl
fsubs
sarb
mov
and
ds
mov
dec
repnz
xchg
push
shlb
dec
enter
in
pop
xor
gs
stos
call
xor
or
in
lahf
mov
jmp
clc
fists
xlat
fs
ficoms
mov
es
inc
dec
and
dec
sbb
popa
and
aas
add
pop
sti
rol
xchg
xchg
mov
mov
lea
and
xchg
push
mov
xor
jp
mov
lods
dec
adc
mov
shlb
into
mov
mov
iret
adc
mov
pop
inc
leave
jo
push
mov
loope
cs
push
sub
bound
cltd
dec
daa
out
in
fwait
xchg
xlat
add
jb
push
aas
scas
jno
testl
lcall
jmp
xor
sub
ret
cmpsl
inc
lea
mov
sti
subb
inc
stc
shrb
jge
cmpsb
mov
push
push
loop
cltd
outsb
pop
jg
dec
cmpsb
lea
pop
data16
adc
out
adc
nop
sbb
lret
and
enter
push
jnp
js
leave
push
lods
notl
add
xchg
incb
lcall
je
imul
into
je
stc
test
or
jae
inc
stos
cmp
int3
test
add
lods
mov
dec
pushf
add
inc
sub
cmpsb
addb
pop
or
imul
imul
fisubrs
cmp
or
pop
adc
mov
in
fldt
mov
fsubrs
mov
adc
mov
adc
inc
jl
subb
movsl
inc
mov
jb
ja
or
pop
aaa
add
inc
mov
adc
inc
dec
mov
inc
idivl
test
roll
addr16
aad
xor
jnp
stos
int3
rcrl
test
xchg
movsb
into
push
fisttpl
and
pop
jecxz
pushf
hlt
popf
fadds
xchg
xchg
loope
add
ljmp
fstps
jns
inc
fisubrl
sbbb
int3
rep
lea
push
shrb
aas
rcrb
test
mov
add
rcrb
into
arpl
xchg
lcall
and
popa
sub
mov
add
or
mov
cmp
dec
inc
pcmpgtb
outsb
xor
jg
jae
or
sbb
notb
dec
push
inc
sbb
dec
fcomi
call
ja
jp
jbe
fsts
add
adc
aam
add
test
sbbl
mov
ficoml
jno
cmc
in
fisttpll
dec
aam
pop
fdivrl
cwtl
shl
mov
inc
sbb
movswl
ds
mov
jns
hlt
mov
ficoms
nop
mov
sbb
ja
test
lahf
out
adc
in
daa
push
test
in
push
adc
mul
int
and
adc
xor
addl
insb
and
fs
mov
nop
loope
pop
xchg
hlt
outsb
adc
pop
outsl
rolb
cmp
rcrl
and
fnsave
cmp
movsl
sarb
cld
add
or
ds
aad
mov
lds
cltd
cmpsb
mov
insl
in
xor
sub
mull
mov
gs
fildll
aas
xor
mov
mov
xor
cmp
mov
inc
mov
cmp
inc
cmp
xor
push
fists
cwtl
shl
jae
aam
lock
xacquire
cmp
adc
mov
pop
jle
lret
add
jl
iret
test
mov
fdivp
and
cltd
mov
mov
test
or
scas
push
pop
jle
mov
in
xor
lds
jne
rolb
faddl
sbb
test
mov
ljmp
das
inc
add
leave
test
or
mov
xchg
nop
xchg
jp
in
jg
sub
sub
jge
movsb
mov
insb
sub
pop
jmp
pop
pushf
sbb
cmp
icebp
push
jg
push
inc
inc
js
pop
aaa
add
xlat
std
sub
imul
roll
push
cwtl
lret
and
sahf
add
lret
lods
aam
mov
out
add
mov
pop
jl
mov
out
iret
adc
aad
lcall
pop
bound
jle
iret
bound
adc
push
adcb
adc
out
mov
je
test
lret
nop
imul
test
push
loope
xor
push
ret
sbb
call
shll
jecxz
cli
mov
pop
insl
jmp
xchg
shrb
popa
jns
das
jmp
mov
pusha
adc
out
pop
lods
das
pusha
cmp
dec
shrb
cld
mov
and
inc
stos
xor
dec
mov
dec
jle
int3
xor
sbb
mov
jae
lea
lcall
mov
xor
add
int
popf
jle
dec
dec
gs
cwtl
sarl
xor
loop
mov
and
gs
imul
in
repnz
push
mov
lcall
mov
sub
mov
ja
dec
std
lcall
fldcw
pop
pusha
dec
sbb
add
sbb
shlb
aad
jo
inc
push
jge
daa
repz
mov
inc
out
lock
cmpsb
es
aad
cmc
jl
mov
mov
repz
mov
jnp
sbb
or
in
mov
sub
int
or
or
daa
push
loopne
and
pop
mov
fldl
push
mov
inc
lcall
and
adc
inc
push
mov
xor
cli
mov
and
add
fildll
test
xchg
test
cmp
test
inc
xor
sahf
push
mov
or
insl
cltd
adc
and
insl
sub
daa
mov
mov
fiadds
dec
or
xchg
xchg
leave
fldenv
xor
stc
bound
pop
gs
push
rorl
fsubr
mov
pop
test
add
or
add
iret
xchg
push
adc
in
rcrb
sti
dec
jge
cld
or
xchg
push
jbe
bound
mov
or
mov
adc
mov
sbb
inc
sbb
hlt
aas
mov
ret
mov
dec
pop
push
adc
sub
and
cs
loope
xchg
int3
insb
add
sbbl
push
popf
push
xchg
push
cs
fdivrs
fucom
dec
xor
mov
inc
pop
test
lods
mov
jnp
cmp
mov
scas
push
lahf
and
sub
test
xchg
aaa
pop
add
sub
jne
stc
cld
scas
dec
aaa
push
mov
add
sbb
or
gs
cmc
add
cmp
pop
jnp
xchg
out
xor
pop
lahf
fsubl
std
mov
daa
inc
xchg
test
enter
sub
clc
mov
jns
std
repz
sbb
mov
jne
lret
das
sarl
mov
int
cld
cwtl
call
pop
aas
gs
inc
scas
sti
mov
sahf
sbb
add
inc
mov
ljmp
shll
push
mov
test
out
mov
jne
pop
inc
lods
xchg
dec
icebp
sub
mov
push
insb
cmc
xor
add
lds
push
adc
sbb
je
lret
adc
femms
sbb
daa
add
pusha
cmp
adc
mov
and
ja
sti
fsubrl
loopne
movsl
push
add
les
arpl
in
and
daa
pop
sbb
mov
js
fcoms
cmp
mov
lcall
mov
int
add
popa
je
cltd
jns
push
std
lds
cmp
scas
std
and
jmp
sub
das
lods
inc
mov
test
pusha
mov
int3
sahf
dec
lock
ret
xor
or
cld
mov
cmpsl
push
jle
repz
std
scas
inc
jae
sub
sub
sbb
clc
mov
mov
cli
mov
insl
outsl
test
shlb
lock
addl
lods
pushf
pop
mov
push
decl
mov
notb
inc
dec
push
sti
aaa
daa
inc
lahf
scas
mov
xchg
aas
sbb
clc
dec
push
xor
sub
mov
repnz
gs
xor
loope
loopne
dec
dec
fwait
cmp
data16
outsl
and
mov
dec
cmp
push
pop
stc
hlt
icebp
out
inc
dec
sar
aas
adc
add
fistpll
mov
cs
outsb
xchg
push
sbb
sbb
jno
jnp
mov
pop
push
lods
dec
jg
push
les
adc
in
xor
fwait
shl
sahf
nop
add
sbb
pop
mov
fiadds
xor
and
mov
add
jbe
and
inc
sub
cli
mov
dec
arpl
pop
daa
loop
push
imul
popf
test
fldt
jge
nop
adcl
mov
dec
int
sbb
push
hlt
xchg
push
ret
jb
or
mov
aad
out
subb
or
mov
imul
jae
push
das
aam
es
in
dec
pop
pop
call
lds
jnp
jb
pop
fcompl
mov
out
subl
sbb
sub
cmp
cmp
mov
add
dec
or
add
sub
jnp
pop
ficoml
and
or
pop
mov
out
test
add
dec
push
add
aam
test
insl
dec
adc
mov
jbe
sub
and
jne
shlb
xor
push
add
xchg
xor
pop
jl
push
ljmp
out
mov
mov
sub
scas
ljmp
dec
jp
mov
mov
lahf
xchg
iret
test
jge
pop
sbb
es
jns
dec
inc
mov
xchg
xor
aad
adc
fistpll
xchg
leave
loop
sub
rorl
xchg
or
sub
dec
jbe
jns
jo
pop
add
cmp
ret
cmpsb
test
lcall
mov
xchg
jb
or
imul
hlt
mov
adc
jp
inc
mov
xor
pop
and
fwait
mov
jo
push
mov
cmpsl
lea
andb
outsl
scas
insl
shr
jnp
jmp
push
stos
lahf
shlb
dec
gs
mov
andl
xchg
stc
cs
mov
mov
pop
and
fldl
mov
push
sbb
aad
js
add
mov
and
outsb
pop
shll
fs
jnp
cmp
pop
or
xchg
push
inc
sub
sti
popf
mov
jno
xchg
movsb
push
es
jo
xchg
add
mov
mov
add
test
push
push
repnz
and
mov
mov
jge
or
dec
lods
mov
sbb
in
xchg
pop
xor
insl
mov
dec
movsl
or
div
inc
loope
or
xor
xchg
cld
in
aaa
aam
and
push
mov
sub
jo
das
mov
pop
imul
inc
hlt
ja
sub
mov
fs
inc
shll
push
sbb
dec
fmuls
inc
cmc
xor
je,pn
sub
push
jns
dec
xchg
lret
mov
sbb
kxnorb
jnp
adc
cmovle
cld
and
push
mov
and
call
gs
mov
loope
dec
xchg
and
adc
jecxz
mov
inc
mov
inc
pop
or
fdivl
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
inc
repnz
inc
sarb
mov
fstps
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
push
dec
cmp
add
cmc
add
add
popf
in
je
jns
inc
rcll
adc
push
xor
dec
out
dec
sbb
rcll
popf
mov
mov
popl
lds
xchg
jbe
xchg
cmp
dec
dec
negl
sti
daa
dec
pop
shl
push
dec
adc
repz
push
xchg
lahf
ss
add
lcall
xor
mov
adc
js
stos
dec
aam
repz
sbb
jecxz
pushf
pop
mov
outsb
or
cli
adc
cld
jecxz
inc
and
cmc
xchg
mov
sbb
xor
push
push
mov
push
push
lds
lcall
inc
into
adc
push
jg
jp
lret
push
xor
dec
inc
mov
and
and
xchg
mov
sub
lds
adc
ret
jmp
lods
arpl
add
lods
sub
or
push
and
cld
aad
shlb
fsubrs
js
pop
scas
mul
sbb
xchg
pop
mov
xchg
jne
das
shlb
xor
nop
nop
cmp
aas
lods
add
vcvtps2pd
adc
stos
cmp
pop
xchg
inc
mov
fists
cltd
hlt
scas
adc
push
les
inc
push
mov
and
push
cld
dec
pshufw
repz
sub
call
push
mov
in
or
xor
das
lret
mov
xchg
and
movsb
mov
cld
cmp
in
mov
mov
in
call
out
ljmp
sbb
mov
mov
fs
scas
mov
fldl
add
adc
jle
push
fsub
gs
cmc
popa
fists
ret
aad
stos
add
mov
push
into
inc
je
jnp
je
fwait
xchg
popf
cwtl
jg
mov
cld
xchg
fdivl
aam
sete
add
hlt
cld
cmp
xchg
std
jae
cmp
out
adc
jp
sti
jns
cmp
dec
mov
inc
cwtl
pop
lret
lods
notb
lds
lds
movsb
ja
xor
cmp
fistpll
sub
or
push
xchg
pop
ja
lds
ficoms
cmp
fcomi
mov
in
cli
dec
xchg
jno
sub
movb
jmp
dec
and
and
and
out
jecxz
lea
mov
jb
push
vmovlps
outsl
aad
jnp
lods
outsb
or
xor
notb
mulb
in
jno
push
loop
cmp
fwait
je
leave
push
jecxz
repz
stos
hlt
je
clc
pop
ret
les
mov
das
movsl
push
fldenv
outsl
push
sti
sbb
out
mov
push
jne
jp
jp
xchg
dec
aam
out
xchg
adc
icebp
add
fsqrt
adc
mov
dec
push
js
sbb
aam
mov
mov
nop
mov
inc
mov
stc
aad
cmp
push
add
add
cltd
mov
xchg
ljmp
mov
bnd
daa
inc
jb
inc
loope
pop
imul
add
pop
xor
dec
add
aad
lods
push
clc
out
inc
xchg
orb
dec
push
push
test
mov
xchg
mov
roll
sub
unpcklps
flds
push
outsl
mov
push
outsb
cmp
mov
std
sub
sub
pusha
or
add
jl
inc
stc
imulb
idiv
push
xor
in
fwait
int3
mov
subb
fimuls
movsl
sbb
cmpl
popf
jp
rcrl
out
adc
lods
sub
out
xchg
pop
inc
stos
mov
cmp
inc
dec
sti
daa
enter
mov
add
jae
mov
fists
xor
shrb
sub
cmp
dec
inc
outsl
lea
pop
enter
adc
and
inc
inc
jbe
mov
adcb
ds
cmp
jecxz
inc
jb
mov
popa
shll
mov
push
pop
loope
and
in
std
add
test
adc
and
xchg
jns
push
popa
or
mov
push
mov
popf
mov
push
shlb
sub
enterw
xchg
iret
pusha
aaa
pop
loopne
ja
or
add
or
push
mov
test
dec
pop
sub
aaa
call
add
xchg
repnz
and
sub
rclb
pop
lahf
jg
gs
rcrl
flds
add
add
add
int
inc
int
or
icebp
js
pusha
insb
jno
ljmp
sahf
in
shrl
test
dec
jl
mov
pop
call
mov
xor
pop
jle
fs
push
sbb
push
cmc
inc
mov
xor
fprem1
mov
xchg
mov
popf
orb
cld
enter
or
or
fcmovbe
pop
dec
or
jle
fistl
roll
pop
dec
and
or
dec
enter
fstpt
or
mov
adc
xchg
cmp
enter
fistpl
or
pop
cli
push
dec
jge
mov
into
out
rclb
mov
nop
les
push
into
or
loop
or
push
xchg
jbe
loope
cmpsb
ficoms
jmp
ficomps
push
mov
into
push
pop
stos
sbb
fwait
sarb
je
in
inc
xchg
test
int
cmp
push
gs
mov
mov
pop
arpl
lock
inc
jmp
int
mov
push
mov
jl
or
jns
and
div
push
dec
sbb
outsl
dec
inc
inc
fcmovne
cmpsb
test
adc
cmp
repz
inc
push
sbb
in
or
int3
aas
pop
out
push
xchg
rol
dec
pop
hlt
cwtl
js
loop
pop
inc
loope
push
pop
sbb
mov
adc
stos
mov
sub
push
repnz
jle
jo
inc
fbld
lea
iret
aaa
jae
jns
in
pop
mov
dec
mov
pop
jo
in
shll
mov
sbb
push
fdivrs
cmp
dec
in
dec
xchg
lcall
mov
inc
clc
pop
jmp
mov
popa
adc
repnz
outsb
inc
shll
xorb
pop
dec
cmp
rclb
sub
and
aad
mov
sbb
jb
jae
sbb
xchg
pop
sbbl
add
pop
cli
pop
shll
lds
outsb
push
dec
negl
lods
es
jg
loop
cmpsb
icebp
cs
pop
jg
fstpt
adc
je
jl
loope
dec
mov
and
cmpsb
dec
cmp
mov
or
sub
push
xor
push
inc
popa
icebp
lahf
cmp
mov
aas
mov
cmp
xor
xor
into
cltd
jle
sbb
mov
mov
aaa
mov
jnp
lock
dec
scas
js
mov
xchg
cmpsb
adc
int
clc
adc
xor
add
inc
stos
stos
lock
and
xchg
inc
push
ss
movsl
add
pop
cwtl
jp
fdivp
push
pop
sub
and
adc
call
mov
rcrl
sub
adc
ss
dec
in
ds
pop
xchg
and
outsl
push
jo
jnp
xchg
cmp
dec
cld
push
repz
sub
insb
imul
or
loope
nop
scas
stc
subb
adc
outsb
or
cmp
in
push
xor
jnp
jg
lds
xor
sub
aas
lea
mov
add
push
dec
mov
jge
cmp
popf
fwait
testb
movl
xchg
rcrb
cltd
stos
cmp
and
sub
mov
jl
and
jb
mov
call
xor
into
bound
test
fisubrs
lret
or
mov
loope
mov
adc
lret
aam
jmp
loope
idivl
cli
cmpsb
fdivrp
in
ds
ds
mov
push
sub
pop
fdivs
xchg
or
fwait
xchg
push
sbb
xchg
mov
mov
mov
lods
and
cwtl
daa
push
and
mov
adc
into
inc
dec
pop
pusha
cmp
iret
or
inc
popa
mov
icebp
dec
es
je
sub
sbb
mov
and
jl
dec
outsb
and
mov
sarl
cli
nop
pop
lods
mov
shll
das
cmp
xchg
adc
push
sar
dec
clc
and
sbb
push
jno
cmp
dec
xchg
dec
jae
ja
sub
shl
addl
pop
dec
xor
jg
pop
xchg
mov
clc
stos
negl
hlt
bound
shr
into
iret
inc
adc
mov
jbe
add
pop
jbe
int
bound
pop
fldt
xchg
pusha
insl
jo
cmc
jp
xchg
add
fadds
ja
pop
push
js
push
jp
aaa
and
sbb
add
add
jne
cmpsb
jg
mov
jae
mov
add
cmc
add
add
lahf
xchg
dec
ja
out
pop
repnz
sbb
mov
cmpsb
jo
lods
pusha
dec
cwtl
ret
nop
out
xor
cmp
orl
mov
lahf
xor
movsb
push
dec
fcoml
stos
add
xchg
or
mov
mov
push
push
push
iret
dec
and
mov
push
aam
stos
jnp
inc
andl
pop
int
dec
dec
in
or
iret
mov
aad
jb
aam
call
iret
jle
mov
out
cmp
addr16
or
pop
and
les
mov
mov
lcall
xor
mov
and
jecxz
cmpsb
add
icebp
fsubrs
mov
loop,pn
iret
push
outsb
shl
mov
pop
pop
mov
mov
subb
sbb
aaa
idiv
xor
jmp
jb
mov
xchg
lods
adc
popf
loop
add
fistl
cltd
fidivrl
call
js
mov
xchg
rorb
or
gs
push
xchg
xchg
adc
xorb
xchg
sarb
popa
cwtl
mov
andb
fildl
scas
sarb
xchg
hlt
out
insl
out
jae
popf
push
mov
popa
shll
xchg
mov
daa
test
ficoml
clc
insb
jecxz
shlb
divl
fisttpll
cli
inc
sbb
loope
js
xchg
mov
fiadds
adc
pop
mov
mov
adc
adc
fs
adc
jl
movsl
push
imul
mov
aas
pop
add
jmp
cmp
xchg
data16
inc
jge
arpl
pop
mov
fdivrp
push
sbb
mov
xor
dec
notb
pop
fptan
incb
adc
inc
push
mov
les
cmpb
mov
jne
lods
pusha
cmp
add
dec
repz
sub
cmpsb
bound
outsl
push
leave
pop
cmpsl
inc
xchg
test
std
inc
jecxz
mov
lcall
sbb
add
inc
or
pop
lea
repz
popf
jl
cmp
repz
pusha
jmp
mov
stc
mov
cltd
xor
push
pop
fists
xor
xchg
fdivs
call
dec
icebp
movsb
mov
mov
lods
jecxz
mov
pop
rcll
jo
push
ret
push
cmp
push
lahf
xorb
rcrl
pop
ljmp
jns
icebp
fwait
sbb
pop
sbb
push
pusha
shrl
popa
inc
aad
stc
shld
cld
into
jnp
or
inc
dec
sahf
in
adcl
or
push
fstpl
inc
xchg
jp
sub
cmp
pop
lahf
sub
mov
fdivl
pop
push
idivl
sub
or
xor
in
in
int
clc
jge
xchg
popl
adc
ret
les
div
mov
cmc
int
mov
cmp
dec
add
xchg
mov
cmp
iret
mov
sub
push
pop
xor
ss
jb
lods
cmpsl
mov
inc
xor
addr16
push
pop
loopne
mov
pop
pop
add
dec
lea
dec
pop
in
inc
lahf
pop
xor
cltd
mov
push
push
sub
stc
add
inc
xchg
enter
in
ss
jnp
out
dec
das
jmp
fwait
jl
jb
mov
push
imul
or
cmp
cmp
cmp
cmp
lds
adc
out
int3
push
jo
xor
add
loope
xchg
pop
push
and
iret
pop
out
push
push
mov
cmp
sbb
add
lods
cli
int3
adc
out
mov
push
mov
cltd
repnz
fisubrs
adc
push
push
jle
and
mov
push
je
jmp
test
add
aam
jecxz
test
push
cs
repnz
jae
ljmp
push
dec
loop
push
jle
test
or
jle
add
addr16
ss
sbb
fadds
inc
call
adc
ficoml
movsl
xchg
pop
das
mov
dec
xchg
mov
jecxz
mov
xor
movsb
mov
adcl
repnz
cltd
inc
in
ds
cltd
or
int
push
dec
sub
jnp
popf
inc
pusha
xchg
pop
sub
or
dec
rcrb
scas
test
pusha
jo
stos
add
add
pminsw
idiv
repz
lret
rcrl
add
add
add
jg
out
dec
fdivrs
sbb
fildll
pop
cmp
mov
push
push
push
std
jecxz
sub
inc
rcr
jbe
ret
cmc
lods
push
jge
xchg
fisttpll
and
mov
jmp
inc
xor
jbe
fdivl
je
cs
lcall
or
mov
sbb
xchg
hlt
jo
repz
and
leave
dec
lcall
in
repz
inc
test
mov
fwait
pop
icebp
nop
sub
jmp
jbe
stos
lods
sub
lahf
xchg
push
mov
xor
ljmp
incb
sti
jmp
popf
inc
nop
adcb
into
cmp
jl
scas
cmp
js
mov
adc
fstps
xor
pop
in
add
and
add
jne
repnz
test
jae
and
pop
push
pop
rcrb
xchg
cmp
sbb
movups
sbb
push
cmpsl
xchg
mov
cltd
movsl
add
jecxz
jp
push
aad
nop
sbb
pop
xchg
lret
inc
insl
xor
jno
es
jno
xchg
into
fs
out
xchg
lret
or
arpl
std
dec
pushf
orl
pop
in
push
dec
sub
aas
sub
cmc
cmpsl
lods
mov
sub
adc
jae
xchg
push
xchg
inc
dec
in
bound
or
repz
rclb
insb
rcl
fwait
cmpsl
or
lret
dec
mov
insl
rorb
movsl
in
sub
leave
push
xchg
aaa
push
lahf
jne
mov
mov
shlb
pop
and
push
leave
lcall
or
ffree
pop
mov
mov
clc
div
cltd
ret
shl
pop
fcoms
push
dec
in
cmp
cmp
test
adc
ret
pop
and
test
cmpsb
fwait
add
xchg
cmpsl
add
out
dec
pop
mov
sub
loope
sbb
sub
dec
arpl
mov
xchg
gs
jl
mov
outsl
fimuls
sub
sub
icebp
imul
bound
push
sub
mov
adc
scas
arpl
dec
ss
imul
push
roll
push
rol
xchg
in
pushf
into
jo
in
and
xor
das
sbb
movsb
gs
insl
mov
jnp
jge
cmp
movsl
and
cmp
push
jb
movsl
shll
dec
inc
jne
or
sub
ret
jae
stos
xor
inc
repz
push
mov
lods
and
push
in
mov
pusha
or
pop
cmp
inc
loope
pop
fstps
es
addb
popa
mov
add
adc
push
cmp
cmc
jl
mov
jo
or
int3
ja
lods
and
push
adc
jl
shr
xchg
sbb
sub
jns
sub
nop
insb
sarl
pusha
mov
inc
jns
lea
inc
sar
aas
insl
cmp
mov
gs
jge
lods
jg
loop
pop
add
jbe
call
ljmp
pusha
lret
adc
jae
xchg
addr16
or
or
test
xchg
and
inc
add
rcll
mov
andl
fwait
push
out
arpl
or
cmp
aad
pushf
dec
pop
add
or
daa
das
cmp
pop
arpl
mov
ss
repz
xchg
fscale
leave
cmp
cmp
repnz
scas
inc
adc
dec
mov
jo
and
js
mov
leave
aas
enter
inc
cmp
xchg
repnz
mov
nop
int3
enter
push
push
sbb
mov
gs
ud1
ja
dec
push
jecxz
and
adc
add
out
jns
mov
mov
jbe
aas
bound
xrelease
dec
je
pop
push
sar
fldcw
xchg
iret
icebp
push
testl
adc
sub
mov
mov
je
dec
mov
dec
arpl
fdiv
adcb
mov
mov
pop
sub
add
pop
sub
int
add
adc
xchg
int
sahf
rcr
or
std
in
jge
xor
mov
and
and
sub
pop
in
insb
shlb
popf
jb
or
in
jns
loopne
out
or
gs
outsb
jecxz
div
rcrl
pop
adc
xchg
lret
jnp
sarl
sbb
dec
dec
call
add
adc
scas
std
hlt
adc
adc
test
scas
jp
pop
stos
pop
inc
dec
fs
scas
sbb
popf
jecxz
mov
frndint
push
mov
push
pop
std
and
jns
mov
pop
test
or
sbbl
lock
inc
in
or
popf
push
jecxz
dec
outsb
test
dec
loopne,pn
hlt
pop
sbb
pushf
cmp
ja
addr16
mov
dec
jge
push
dec
out
add
in
push
or
mov
mov
or
jno
bound
out
dec
pop
add
scas
inc
push
lds
push
in
push
pushl
imul
movsb
add
iret
aam
leave
push
scas
and
jnp
cmp
sub
xchg
in
enter
hlt
jo
pop
jno
jbe
in
mov
pop
int
divb
and
jecxz
es
and
pop
fwait
out
ret
rorl
jo
je
pop
loope
test
ror
daa
rclb
and
lock
repnz
inc
jle
jp
adc
xor
mov
mov
pop
bound
xchg
xchg
lods
sahf
insl
leave
cmp
loope
or
fwait
jmp
loop
adc
cmp
imul
ret
push
xchg
fsubrl
jg
xchg
lahf
fistps
jne
mov
dec
lock
out
add
je
cld
movl
int3
jno
in
sub
and
call
sbb
xor
mov
push
adc
jb
out
mov
mov
mov
xor
adc
daa
mov
negb
pop
test
push
insb
inc
jp
xchg
mov
xchg
dec
lea
es
add
jnp
jecxz
sub
jl
int3
in
addr16
in
inc
in
and
add
sbb
mov
jp
sbb
push
insl
mov
fdivrs
pop
lds
jl
fdecstp
xor
mov
pop
les
inc
push
lahf
cmp
jbe
add
inc
or
dec
mov
scas
add
out
mov
push
icebp
mov
mov
jg
xchg
data16
push
mov
outsl
mov
push
aam
xacquire
int
and
nop
mov
mov
in
pop
xor
sbb
xorb
xchg
sub
cmpsl
in
mov
cmc
and
insb
cltd
imul
int3
xchg
jae
not
inc
outsb
mov
in
mov
mov
and
xchg
cmpl
scas
sahf
call
mov
pusha
cmpsl
inc
in
push
shl
iret
sub
popf
sub
xor
pop
jge
fwait
pop
dec
push
sbb
xor
call
jge
push
je
pop
gs
push
pop
sbb
xchg
into
inc
jle
imul
test
scas
scas
mov
cwtl
lods
jbe
lock
cli
jge
pop
aam
push
test
sbb
loopne
loopne
stos
jbe
scas
pop
push
mov
lret
sub
pop
in
stos
add
lods
jge
loopne
subl
jbe
lock
mov
hlt
cmp
sub
jns
adc
mov
jmp
fdivrs
cmp
cli
bound
jbe
xchg
jae
lods
imull
mov
jbe
in
lock
pop
or
or
jl
lahf
es
adc
mov
cmc
outsb
mov
fdivs
jl
stc
adc
cli
adc
jmp
mov
inc
outsl
into
cmp
mov
xor
in
data16
pop
or
das
jb
inc
inc
mov
test
adc
cmpsl
and
adc
inc
daa
fimuls
mov
add
mov
and
push
lock
sbb
out
jno
es
mov
pusha
dec
fcompl
arpl
xchg
sub
hlt
dec
mov
adc
fimuls
push
pushf
mov
cwtl
fwait
popf
sahf
popa
int
popf
mov
ret
sub
and
mov
lods
stos
dec
inc
js
aam
xor
test
xchg
xchg
movsl
das
test
pop
fwait
int3
cmpsl
std
pop
movl
add
call
jmp
xchg
ret
jmp
out
add
jl
xor
dec
gs
add
pop
test
adc
outsb
adc
add
cmc
add
add
ret
and
loope
adc
lret
xchg
les
imul
sar
sti
out
mov
adc
mov
adc
push
pop
aad
fucom
in
dec
mov
dec
cwtl
push
xor
jns
mov
sub
mov
adc
outsl
mov
xor
ds
jmp
addb
mov
dec
fisubrs
or
mov
jbe
std
pop
fsubrp
mov
icebp
dec
test
test
inc
js
jae
fisubrl
in
cli
inc
push
loopne
pushl
cli
sbb
adc
and
cmpsl
arpl
mov
shlb
or
sbb
frstor
dec
adc
jge
in
stos
sbb
es
js
xor
movsl
je
dec
imul
stos
push
rcrl
jge
push
icebp
inc
inc
xlat
cmp
mov
mov
push
dec
sbb
sub
push
inc
lcall
dec
jno
inc
sub
aam
or
xchg
xor
xchg
add
adc
lods
test
ss
out
mov
arpl
sahf
cmp
dec
nop
mov
dec
out
jecxz
test
das
push
aas
push
stc
sti
scas
jecxz
mov
outsb
movl
add
xor
mov
shrl
gs
lret
mov
popa
fld
stc
test
nop
popf
nop
xor
adc
pop
xor
fs
xor
test
inc
repnz
sub
pop
pop
rcr
add
cmp
repnz
inc
test
cwtl
les
jle
outsl
scas
lret
inc
jbe
cmp
pop
cmpsb
leave
ret
push
in
push
int3
cld
cmp
mov
mov
sbb
fdivr
push
dec
xchg
add
xor
loope
outsl
js
ja
mov
negl
shll
gs
jbe
xor
push
test
push
mov
ret
into
push
in
minps
pop
ljmp
lods
dec
inc
dec
pusha
sbb
mov
xor
cwtl
lds
test
xor
mov
inc
sub
sub
outsb
jl
and
mul
fldenv
inc
and
faddl
call
orl
dec
or
or
mov
fs
ds
jl
cmp
or
mov
xchg
fcomp
test
arpl
testb
cwtl
xchg
cmpsb
in
sbb
mov
cmpsl
nop
leave
mov
subb
icebp
stos
int
mov
test
push
or
fistpll
sub
sahf
mov
pop
dec
dec
add
xor
mov
jmp
and
mov
stos
inc
or
mulb
or
xchg
es
mov
scas
fwait
inc
pop
xchg
jne
lea
repnz
lds
sbbl
cmp
std
sbb
arpl
cmp
add
push
add
mov
jo
cmp
sbb
jb
cmp
push
daa
and
jo
cltd
sbb
or
inc
dec
je
sub
adc
ja
dec
stc
dec
mov
lods
mov
mov
jne
int
call
cmp
cmp
test
xor
std
jnp
lds
xor
xor
pushf
jecxz
adc
xchg
cmp
push
imul
js
fstpt
ja
mov
inc
dec
jnp
lret
xor
mov
cwtl
popa
xor
jnp
dec
aaa
pop
out
int
adc
out
sub
stos
shlb
insb
sub
sub
xchg
dec
std
lahf
aas
xlat
gs
sub
push
mov
cmpsb
jl
adc
cltd
fimuls
jo
mov
cmpl
xorb
mov
adc
stos
cmpsl
out
push
sub
cmpsl
xor
mov
pop
gs
fidivs
dec
push
add
outsl
movsl
fisubl
sbb
into
adc
cmp
ret
and
and
pop
sub
push
sbb
inc
xchg
sbb
mov
mov
sub
imull
pop
fldl
cmp
out
pop
mov
loopne
sbb
dec
dec
out
or
sub
aaa
lret
and
push
push
les
xor
mov
mov
xchg
sub
push
aad
inc
jecxz
jnp
ret
call
mov
test
bound
dec
pop
cmp
xchg
mov
pop
repz
scas
fstl
add
fisttps
mov
adc
lret
or
aaa
repnz
cmc
add
add
mov
mov
cwtl
orl
cs
mov
and
loop
xchg
bound
icebp
es
jg
jns
es
push
sti
lea
jne
sbb
dec
mov
push
scas
in
or
cmp
sub
xor
aam
mov
call
push
lea
mov
shrl
mov
jbe
hlt
in
leave
in
je
xor
loop
outsl
mov
cmp
pop
nop
es
insl
test
pusha
iret
in
jmp
add
cltd
inc
lret
outsl
adc
lea
mov
dec
es
adc
or
out
adc
ljmp
lds
add
xchg
nop
icebp
push
adc
arpl
adc
out
xor
into
sbb
mul
js
lock
cld
fcoms
or
adc
insb
pop
jnp
out
shrb
push
loop
mov
inc
insl
sbb
mov
pop
push
mov
mov
push
insl
mov
xor
loopne
shll
add
imul
ret
int3
adc
movsb
and
aad
ss
lea
dec
aas
jecxz
adc
repz
pusha
mov
lods
fstpl
popf
and
fwait
addr16
lds
pop
xor
cmp
in
and
sbb
fstpt
aaa
push
mov
adc
loop
xchg
shr
out
inc
pop
idiv
dec
jp
push
mov
out
lea
cltd
cmc
in
pop
xor
push
negl
and
fdivl
mov
add
push
add
lods
push
lock
in
cmp
pop
cli
add
inc
xchg
lret
popf
je
push
mov
xor
setge
xor
jb
jbe
inc
pop
xor
in
jbe
cs
adc
adc
fcmovb
dec
out
inc
adc
andb
push
int
xchg
out
fisttps
out
aad
loop
push
push
inc
add
arpl
ljmp
xor
fadds
dec
lahf
fwait
addr16
push
push
mov
lds
mov
add
daa
out
imul
movsb
or
ljmp
jmp
push
sub
and
cmp
pop
cmp
and
test
outsb
enter
into
mov
dec
in
mov
pop
imul
mov
mov
push
jo
push
cs
scas
mov
inc
add
push
sub
std
fadd
sbb
inc
in
loopne
data16
or
imul
xchg
fcoml
add
insb
xor
or
cmp
leave
pop
jae
pop
mov
sahf
adc
stos
rclb
lods
add
fwait
sub
leave
inc
jae
mov
cmpsb
rol
xchg
push
nop
movsl
jmp
aad
aam
sahf
jecxz
jle
cmpb
xor
mov
jae
std
xor
lods
or
cmp
in
pop
push
fucomip
pop
insb
mov
andb
pop
imul
sub
sub
loope
sbbl
ds
dec
test
mov
shl
in
aas
push
int3
inc
icebp
jno
xor
dec
push
ss
push
mov
testb
inc
xchg
push
out
xor
xchg
xchg
inc
iret
jno
push
icebp
push
outsl
fisttps
dec
insl
imul
adc
jg
sbb
cmpsb
mov
sbb
ret
std
les
lea
pop
sbbb
test
push
and
sahf
cmp
sbb
jne
lea
cmpsl
xorl
cli
sub
or
pop
cmp
pop
repnz
push
cmp
xchg
jno
lret
push
mov
movsl
push
sub
jmp
add
popa
ficompl
ljmp
cli
push
leave
adc
jl
sbb
repnz
xchg
sahf
into
ret
test
mov
sahf
xchg
cmpsl
mov
mov
jge
aas
test
into
xor
add
xchg
push
and
sub
leave
mov
aad
fimull
sbb
or
pop
out
sarb
add
and
adc
ljmp
push
test
lds
ja
sbb
insb
dec
test
loop
pop
ja
movsb
cwtl
xor
stc
push
test
dec
mov
push
rcrb
ljmp
outsb
pushf
cmp
adc
xchg
ljmp
jge
xchg
add
in
pmaxub
in
aas
rcrl
rolb
mov
xchg
shll
xchg
mov
sub
movsb
fwait
jno
fisubrl
mov
cli
xlat
outsl
addr16
insl
into
jp
es
xor
test
mov
add
mov
jno
cmc
divl
mov
fldcw
add
cmc
add
add
push
or
lret
xor
or
rorl
and
cli
ficoms
mov
ds
dec
testb
js
mov
imul
test
mov
and
pusha
movsl
dec
fidivs
sub
ds
pusha
or
loope
inc
sti
fildll
imul
jbe
mov
sbb
cmp
aas
sub
out
cli
add
lods
leave
xchg
jno
xchg
test
mov
add
jo
xor
out
cltd
mov
out
sub
mov
dec
stc
jmp
std
test
lret
mov
repnz
in
dec
mov
inc
or
sbb
or
sbbl
push
jo
adc
cmpsb
cs
push
aad
dec
pushf
xchg
add
adc
fwait
sti
inc
dec
test
out
push
lcall
lret
roll
add
lds
or
sub
out
in
add
mov
add
std
push
mov
cli
pop
pop
mov
jg
ret
push
or
arpl
sub
test
dec
sub
and
lret
rcl
cli
outsb
sub
fcoml
je
sbb
enter
add
daa
jns
sub
push
dec
or
and
sub
cs
icebp
mov
filds
fdiv
mov
dec
jns
rorl
pop
and
add
into
sub
sarb
adc
sbb
pop
dec
inc
pop
sbb
inc
ss
je
rcrl
xchg
mov
rolb
push
xor
fcomip
jnp
ret
mov
or
fnstsw
mov
int3
repz
xor
nop
pop
xchg
les
ja
jbe
inc
mov
push
inc
add
xchg
call
jecxz
sub
sbb
lret
adc
aas
test
out
sbb
xchg
popa
gs
stc
icebp
jge
mov
cmp
inc
sbb
iret
jns
dec
jo
sub
cmp
sub
adc
aam
jle
mov
xchg
and
mov
int
test
shlb
jne
shll
push
iret
test
push
lods
dec
jb
pop
das
and
mov
push
out
fwait
and
push
sbb
dec
mov
nop
sahf
mov
jno
cs
sbb
aad
test
and
and
xchg
fs
cmp
jbe
call
jecxz
outsl
pop
xor
aam
mov
ljmp
sub
fimuls
add
nop
xorb
lods
jp
sar
hlt
clc
rcr
fdiv
imul
jne
test
adc
loop
dec
pop
fs
adc
mov
xor
ds
mov
push
push
cmp
sbbl
and
out
pop
subl
mov
aam
cmp
xor
mov
xchg
aas
push
pop
sub
cmp
cmc
push
or
sub
or
xchg
es
or
adc
test
jno
xor
xchg
mov
mov
cmpsb
test
jmp
pop
test
aad
gs
dec
lds
sbb
adc
out
xchg
inc
add
push
cmp
shrb
scas
lock
scas
push
dec
movsb
out
iret
inc
cli
lcall
fisttpll
ret
in
inc
aas
mov
movsb
sarl
repz
fwait
adc
pop
mov
sahf
xchg
insb
mov
addb
movsb
add
sahf
push
dec
insb
in
inc
push
jmp
out
pop
fldenv
mov
jo
out
ja
sahf
push
xchg
pop
add
fisttps
pop
adc
nop
or
xchg
push
cwtl
xchg
ret
cmp
mov
push
and
ret
add
sbb
arpl
in
jl
push
imull
push
sbb
adc
mov
and
or
fs
cld
adc
into
fnsave
add
std
pop
aam
xchg
lcall
xor
push
mov
ds
in
mov
sub
in
leave
out
ljmp
and
fdivl
int
adc
in
adc
test
mov
or
dec
dec
mov
clc
cmp
pushf
mov
rcr
sub
sub
adc
rorb
mov
subb
bound
jge
fisubrl
aas
push
xchg
mov
or
push
mov
lods
orl
jae
lock
imull
mov
and
lods
push
jne
inc
or
ret
inc
fisttps
lahf
int
push
paddw
add
cmc
add
add
aam
or
fcoml
roll
xchg
mov
cld
pop
xlat
inc
inc
inc
cmp
jmp
and
sub
dec
inc
adc
mov
scas
lahf
xor
js
into
ss
mov
fdivrl
repnz
jge
mov
dec
lahf
out
hlt
pop
js
imul
cmp
pop
mov
xchg
cmpsb
mov
xchg
xchg
inc
cmp
cmp
cmp
sti
stos
mov
jae
push
and
push
cmp
ret
or
mov
dec
btr
int
jge
in
or
test
xor
je
fistpl
into
cld
pop
push
sarb
mov
js
mov
shrl
add
test
out
loop
imul
test
mov
push
mov
lret
pop
xchg
subb
ja
imul
cwtl
dec
push
into
stc
faddl
jmp
xor
jl
mov
jl
lods
lahf
mov
sbb
cs
mov
and
cmp
xchg
pop
inc
enter
cli
popf
xorl
pop
mul
lret
push
cmc
or
xor
fsubrl
in
add
std
pop
xchg
mov
sub
push
adc
leave
inc
sahf
ret
aaa
inc
lcall
inc
pop
and
and
mov
aad
sub
and
sbb
dec
lret
lock
xchg
pop
rcll
jbe
jae
ljmp
repz
leave
cmpsb
jmp
movsb
mov
pushf
fdivrs
push
pop
imul
inc
xchg
std
js
xchg
popa
jne
sbb
lcall
dec
fdivrl
inc
sti
daa
dec
movsl
sbb
cli
jmp
insb
repz
mov
jb
jnp
fsubr
mov
push
into
or
call
cmovns
test
jmp
daa
inc
movzbl
xor
mov
roll
sti
jl
mov
ljmp
and
cmp
mov
loop
cmp
pop
push
fildll
rolb
es
add
mov
mov
lcall
je
cmpsl
in
dec
jb
insb
and
or
and
popf
xchg
gs
cmp
pop
bound
pop
shlb
and
clc
nop
sahf
and
dec
xor
int3
cwtl
cmp
dec
inc
mov
insl
ljmp
lret
movsl
data16
mov
jo
arpl
movsl
cmp
ljmp
jp
jb
mov
jbe
stos
push
xchg
xor
pop
or
mov
into
outsb
inc
fiadds
sar
sti
dec
xchg
cld
inc
jg
mov
mov
shrb
pop
adc
jmp
ret
jo
loope
ljmp
push
and
push
cmp
insl
lea
out
cmp
push
shll
and
jecxz
jmp
nop
sub
fmul
xor
divl
testl
andl
aas
test
dec
fstpl
lds
mov
xor
sbb
ret
enter
rcr
dec
std
out
icebp
push
jg
adc
inc
dec
cli
out
add
dec
add
fisubl
into
lea
cltd
call
mov
adc
cmpsb
sub
popa
popa
inc
jae
pusha
into
leave
inc
es
mov
jne
jnp
and
cmp
push
mov
and
loope
fcompl
bndstx
cmp
mov
or
orl
es
test
outsb
cmp
pop
pushf
dec
xor
dec
mov
xchg
push
xchg
xchg
xchg
repz
inc
pop
lcall
dec
pushf
out
fxch
add
ficoms
daa
rcll
inc
into
mov
stos
pop
stos
mov
mov
test
push
cmpsl
mov
xchg
push
cld
push
and
loopne
mov
jp
sbb
cmp
pop
push
divb
sbb
fcmovu
mov
mov
std
xor
sub
out
mov
popa
mov
in
cmp
mov
das
xor
cmp
shlb
stc
stc
push
sub
shrl
xor
push
inc
lret
inc
mov
mov
sti
jbe
mov
mov
mulb
or
repnz
in
js
mov
and
add
dec
sub
loop
popa
mov
xlat
hlt
fisubs
inc
pop
jp
add
ret
adc
xor
push
rolb
add
xchg
cmp
xlat
aas
popa
adc
cmpl
add
cmc
add
add
xchg
xchg
or
int3
xlat
pop
push
xchg
andb
ret
fldt
inc
inc
jl
fcoms
xchg
mov
push
dec
and
push
pop
daa
ret
and
loope
in
or
dec
xor
cmp
adc
inc
dec
notb
lods
test
lods
int
mov
sub
sbb
stc
cwtl
pop
xor
push
and
mov
cli
push
sub
jns
dec
mov
loope
push
push
enter
xchg
jg
sbb
jbe
xor
xchg
mov
sub
and
imul
les
pushf
insl
sub
movsl
fidivl
movsl
incb
inc
icebp
shlb
addr16
mov
or
mov
stc
and
xor
inc
leave
iret
sarl
cwtl
in
lods
dec
sbb
scas
jecxz
lea
lret
aaa
lods
dec
push
sbb
in
inc
jge
xchg
mov
out
cmp
add
imul
fmul
mov
and
push
movsb
pop
inc
xorb
ret
lret
fsubr
pop
add
stos
aam
mov
fdivr
cmpl
sarl
mov
jae
pop
push
cmp
jb
pop
repz
add
roll
mov
mov
divb
test
mov
daa
jno
scas
xor
mov
jae
mov
jmp
lds
sub
es
or
jne
xchg
movsb
cmp
lds
jo
adc
add
stos
es
cltd
aad
lock
movsb
jo
out
stc
add
mov
and
xlat
fs
cs
aas
sbb
sbb
mov
xchg
push
add
jg
fmull
pop
shrl
xor
jmp
sub
test
xchg
cld
call
dec
stos
ja
push
add
cltd
int
mov
xchg
mov
sub
cld
sbb
sar
ja
mov
pop
in
adc
xchg
mov
mov
mov
stos
adc
lods
or
mov
jno
xor
mov
call
add
jmp
fwait
loop
sub
sub
imul
or
pop
jbe
mov
scas
aam
je
cmc
test
dec
pop
mov
xor
pop
jp
nop
nop
lods
leave
or
adc
scas
loop
push
cwtl
mov
out
test
loopne
adc
daa
xor
fsubrp
add
xchg
xor
pop
mov
jge
mov
pop
ss
mov
cmp
and
dec
movsb
xchg
add
cmpsb
in
out
ja
imul
dec
fdivrs
jecxz
inc
fcmovnb
shl
mov
dec
popa
inc
xchg
mov
frstor
sub
xchg
rorb
mov
scas
or
test
xchg
inc
dec
jnp
mov
stc
jnp
pop
dec
dec
mov
pop
xchg
and
push
push
xor
jo
sbb
scas
dec
call
xor
mov
fcompl
int
pop
ftst
dec
push
pusha
rolb
clc
pslld
pop
mov
ljmp
add
pop
insb
push
sti
inc
movsb
cmp
adc
mov
xor
add
icebp
mov
dec
jne
ret
fdiv
aaa
pop
add
mov
mov
xchg
lret
push
fisttpll
aaa
cmovg
aad
ss
push
adc
push
sub
mov
dec
out
xlat
popa
out
stos
add
sbbb
adc
dec
pop
repnz
inc
inc
arpl
lods
xchg
pushf
pop
and
xchg
cmc
popa
mov
or
movsl
xchg
pop
test
psubd
mov
xchg
sbb
sahf
mov
jo
pop
xor
xchg
or
rclb
lret
lods
and
popf
lds
fdivs
cld
mov
adc
ljmp
stos
lods
xor
push
stc
inc
xchg
lret
popf
lahf
aad
cmc
ljmp
das
jecxz
stos
addr16
inc
popf
mov
mov
mov
mov
and
inc
test
out
js
pusha
in
testb
imul
test
sbb
divl
xor
cltd
cmp
lea
mov
aas
jp
sbb
leave
mov
jns
sarb
add
jb
test
xor
test
or
xchg
ljmp
or
push
dec
push
lea
or
add
fidivrs
int
push
add
add
int
dec
mov
subb
adc
mov
js
std
push
sbb
in
cmp
ss
inc
jno
sahf
into
and
aas
or
fistl
jae
rcrl
xchg
in
out
mov
mov
push
mov
fstps
mov
inc
adc
fists
sahf
sbb
pop
pop
jl
jge
sbb
outsb
fmull
and
add
lret
pop
jle
daa
sbb
mov
inc
push
iret
mov
cwtl
enter
cmp
mov
mov
sub
call
enter
push
xchg
test
mov
fidivrs
xchg
or
push
mov
fwait
sbb
xchg
sbb
insb
cmpsb
ficoml
mov
mov
mov
add
push
cmpsb
or
fcmove
mov
aad
mov
jo
mov
aam
mov
nop
shll
adcl
inc
dec
scas
dec
cmp
xchg
mov
enter
fldcw
nop
into
je
mov
and
mov
pop
dec
sbb
cmp
pushf
rclb
cld
or
cs
shlb
or
push
xor
xor
int
sub
lret
sub
jmp
push
js
dec
cmp
or
adc
subl
push
push
rorl
hlt
jle
mov
out
inc
in
dec
mov
or
mov
gs
int
sub
pop
cmp
out
test
into
xchg
dec
inc
rcrb
je
and
idivb
out
mov
rol
fxch
mov
push
and
xor
xor
mov
inc
mov
and
and
movsl
pop
xor
pop
jmp
cld
sbb
insl
inc
sub
xor
lea
push
or
push
es
int3
xor
inc
push
push
xchg
jmp
sbb
int
jmp
mov
iret
mov
dec
sub
inc
xchg
scas
out
pop
lahf
jmp
in
popf
lods
scas
imul
mov
in
scas
fsubs
jne
je
hlt
add
push
dec
in
mov
pop
add
mov
js
int3
mov
sbb
inc
mov
jne
and
pop
test
sub
push
push
mov
aaa
sbbl
test
pop
aas
movsl
lock
inc
fdiv
mov
jne
push
sub
mov
dec
call
cltd
sete
fcmovnbe
inc
lahf
add
push
cmpsb
mov
jmp
sti
push
mul
je
pop
xchg
xchg
jg
xlat
cmp
dec
or
xor
or
xchg
xor
sbb
movsb
ret
iret
jnp
cs
cli
xlat
das
data16
out
xchg
scas
xchg
inc
or
mov
inc
mov
push
cmp
aam
and
xchg
fwait
or
repnz
push
int3
cmp
gs
test
arpl
mov
popf
sub
cmpb
cld
in
adc
push
data16
dec
or
fstps
insb
outsb
push
je
pusha
sbb
mov
xor
mov
jl
aaa
loopne
jmp
sub
xchg
mov
mov
pop
jae
sarl
and
xchg
ljmp
shlb
js
sub
pop
xor
add
mov
fistpl
sub
cmpsl
mov
fildll
notl
cmp
xchg
and
sbbb
std
add
dec
push
xor
jg
sub
ljmp
xor
lea
pop
loop
call
nop
push
sbb
repnz
push
in
mov
mov
sar
sti
push
fyl2x
push
mov
pop
mov
inc
ljmp
lock
xor
lret
iret
fwait
inc
pop
cld
scas
xchg
or
mov
push
sarl
in
ljmp
lock
test
and
jecxz
add
jmp
shl
push
in
add
adc
aad
push
les
mov
and
inc
mov
aad
mov
rorl
pushf
lret
ret
push
and
divps
fsubrs
jb
pop
repnz
push
and
ljmp
stos
out
cmp
mov
jae
outsl
fcmovnbe
mov
mov
pop
inc
andl
or
dec
imul
fs
test
and
jle
xchg
imul
aas
cmp
add
std
mov
push
jg
mov
add
add
cmc
add
add
cmpsb
in
add
sbb
outsl
clc
xor
dec
fldcw
sub
cmp
mov
xor
or
out
jle
mov
sbb
pop
jmp
adc
mov
adc
xchg
cmp
pop
mov
push
notl
mov
adc
and
mov
and
out
mov
pusha
lcall
data16
stc
mov
icebp
mov
aam
ret
es
fcomi
js
dec
or
fwait
or
add
fnsave
lds
add
iret
lret
movl
mov
repnz
dec
insl
mov
inc
and
sbb
call
js
cld
or
jge
aas
lods
shrb
sub
jae
jle
ja
mov
icebp
in
arpl
and
iret
mov
pop
out
mov
sbb
ljmp
push
lcall
shrb
and
mov
mov
mov
mov
dec
or
mov
clc
push
lcall
stos
push
mov
mov
popa
hlt
xor
lock
pop
lock
sbb
mov
add
cmp
inc
mov
pushf
insb
inc
add
popf
stos
or
fmuls
pop
cmp
sub
mov
xor
mov
push
arpl
mov
push
aas
sti
insb
mov
orb
clc
cmp
loope
ljmp
jno
aam
enter
xchg
incl
mov
or
fsubrs
cmc
stos
lds
jbe
cli
sbb
dec
xchg
fwait
inc
arpl
jg
mov
xor
cmp
hlt
xchg
repz
es
insl
out
push
sbb
xlat
add
iret
pop
push
adc
movsl
decb
dec
or
and
add
xor
test
imul
mov
push
sub
js
test
and
mov
or
iret
test
and
or
insl
pop
pushf
nop
js
leave
mov
jg
inc
lods
push
push
movsl
or
xchg
inc
mov
insb
pop
jg
out
repnz
lret
sbb
inc
outsl
push
cld
out
mov
pop
cmp
mov
push
inc
aas
adc
movsl
pop
inc
push
cltd
notl
test
iret
jb
inc
mov
leave
pop
rcrl
xor
aam
mov
jecxz
xchg
or
pop
dec
aad
xor
ja
lcall
or
fimull
call
ljmp
mov
or
fimuls
and
push
xchg
aas
popf
imul
jnp
shl
mov
loop
dec
adc
sub
sbb
jno
mov
push
xor
out
pop
repz
jne
jno
sub
xchg
in
xchg
xlat
mov
mov
xchg
adc
ds
bound
mov
ds
imul
jle
pop
sub
inc
add
mov
pop
or
fmuls
in
mov
filds
jge
add
sub
sbb
and
sub
push
in
dec
cli
addps
inc
pop
daa
mov
jb
jo,pt
sti
pop
pop
cmp
push
adc
shl
dec
std
cwtl
pop
out
imul
xchg
ds
cmp
push
lock
mov
stc
sbb
fidivs
push
jl
jl
out
mov
js
add
gs
or
hlt
fimuls
or
stos
lahf
push
dec
icebp
sbb
std
mov
adc
outsl
fdivp
add
adc
fwait
cmp
leave
stos
in
in
icebp
movsb
push
sub
push
inc
fwait
sub
test
rcrl
popa
push
add
sub
rorb
icebp
cmp
mov
mov
or
lods
repz
mov
or
xchg
stos
and
sbb
lods
cmp
aaa
mov
xchg
sub
xor
push
lock
sbbl
pop
aaa
sub
fnsave
xor
sbb
sub
jbe
sub
dec
les
jo
pop
pop
mov
adc
pop
xor
aam
scas
xchg
mov
nop
xor
ds
shll
dec
jmp
dec
mov
dec
mov
aas
sti
cltd
pop
xor
mov
in
fsts
add
rolb
loop
call
stos
andl
int3
imul
pop
in
push
filds
out
inc
jnp
fsin
mov
push
inc
shl
fwait
adc
pop
ret
add
add
lret
in
out
dec
add
test
cmc
sgdtl
cmc
add
add
cmp
pop
push
inc
clc
mov
ja
ficoml
push
sub
fwait
xchg
div
pusha
adc
xor
xor
cli
fcoml
pop
inc
adc
xchg
testl
cmp
repz
cmp
test
out
inc
or
jne
cld
add
mov
ljmp
fisubs
inc
or
shrl
jbe
mov
pop
call
cmpsl
es
in
dec
ja
push
insb
mov
ja
lret
nop
imull
adc
xor
adc
outsl
ret
lods
nop
jle
pop
sbb
cmc
dec
and
mov
jp
and
jno
mov
test
dec
lret
push
and
pop
frstor
test
fiaddl
adc
shl
mov
xchg
xchg
pop
ret
aas
xlat
pop
clc
push
cld
add
sbb
testb
sbb
leave
jmp
xor
aas
push
jmp
mov
dec
jns
in
cmp
xchg
push
das
sbb
lods
cmp
out
call
clc
out
lret
lock
cmpsb
outsl
inc
adc
leave
push
lea
outsl
cmp
dec
dec
sti
aas
stos
jae
stc
nop
jmp
shl
sbb
cmp
test
and
cwtl
push
xchg
inc
inc
ljmp
fmull
notb
inc
sub
or
lods
xchg
add
sub
in
imul
xor
mov
in
jl
cmp
daa
sub
mov
jne
movsb
ss
and
push
xlat
sub
or
sbb
shrb
dec
push
xor
addl
xchg
jns
orb
nopl
sbb
xor
inc
xchg
jle
add
fimull
fsubrs
mov
loopne
mov
stos
jle
pop
in
leave
es
pop
xchg
xchg
cwtl
aaa
int3
idivb
mov
jb
fiaddl
jg
and
or
mov
cmp
push
push
lret
gs
inc
adc
add
adc
push
pop
and
pop
sbb
xchg
outsb
lcall
loopne
ja
mov
dec
mov
jp
mov
dec
or
icebp
fldt
ret
push
or
dec
out
xchg
add
lret
push
mov
pop
lcall
and
pop
fisubrl
sub
lret
out
orl
repnz
movb
nop
mov
xor
mov
fstpt
push
and
shll
jne
jg
pop
outsb
stc
mov
push
daa
inc
push
xor
push
mov
imulb
mov
stos
mov
shr
xchg
inc
push
jle
stos
dec
fwait
dec
mov
jmp
xchg
jbe
and
loope
scas
iret
sahf
jle
notl
xchg
repnz
cld
imul
adc
inc
adc
adc
lret
loop
outsl
lret
mov
cmp
call
mov
test
dec
mov
jle
loope
jg
and
ljmp
test
js
jg
insl
or
imul
fstpl
push
dec
je
push
sbb
sbb
ljmp
fninit
push
ret
rclb
les
out
mov
ljmp
push
in
jl
nop
lret
pushf
iret
and
cmp
cmpsl
lret
scas
add
dec
ret
les
cmp
xchg
cmp
cltd
push
or
jnp
or
cmpsl
pop
ficoms
stc
mov
pop
sbb
out
inc
sub
add
add
cmp
mov
sub
in
cltd
into
or
dec
xor
lea
cmp
mov
je
mov
adc
push
mov
cmp
mov
inc
dec
cmc
pop
imul
mov
push
mov
enter
push
lds
rcrl
negb
sahf
pop
rorb
push
les
jge
pop
add
mov
inc
je
iret
and
stc
mov
aam
jb
pop
ficompl
dec
shll
or
pop
sub
in
xchg
stos
cmpsb
lret
inc
out
das
test
lret
jbe
rcr
lret
test
sbb
stc
mov
call
jmp
daa
flds
sub
push
xor
push
xor
sub
into
and
fnstenv
imul
xor
cmpsl
and
adc
es
cli
out
inc
mov
lret
jbe
movsb
into
dec
insb
or
fdivl
adc
jne
sbbl
nop
scas
negb
pop
xor
mov
loope
dec
subb
add
adc
je
std
mov
ror
nop
daa
shr
adc
add
add
add
jnp
sti
out
stos
xor
pop
cmp
xchg
pop
test
push
cli
andb
fs
outsb
fchs
inc
mov
imul
adc
mov
push
insl
cltd
in
lret
xchg
ss
fisubrl
sti
mov
xlat
mov
cmp
or
adc
fisttpll
xchg
gs
aam
xchg
int
sub
in
in
or
mov
ret
das
outsb
cmpsl
mov
test
loop
andl
dec
out
std
jnp
bound
push
hlt
pop
iret
lcall
mov
lea
cwtl
popa
orl
mov
xchg
adc
adc
icebp
jge
outsl
data16
test
pop
jne
aaa
fildll
and
pop
or
push
pop
xor
inc
xchg
inc
mov
jmp
dec
in
negb
cmp
push
ret
and
rcrl
nop
jae
stos
dec
lcall
lahf
or
leave
ror
cltd
cmc
sub
test
xchg
jmp
jne
mov
adc
cmove
fsub
pop
xchg
or
xor
cmp
iret
es
fdivl
sbb
int3
push
mov
xchg
xor
test
sub
orl
mov
shl
and
xchg
mov
or
cltd
dec
xchg
mov
lahf
popf
andb
js
out
test
insl
lock
dec
mov
and
jmp
mov
push
jmp
add
andb
les
lret
lahf
jp
shlb
test
nop
out
or
dec
adc
push
xlat
jnp
adc
mov
mov
mov
sbb
pop
in
jno
pop
push
lahf
arpl
xchg
inc
jg
cmpsb
or
sub
or
fildl
inc
pop
push
lock
sbb
inc
push
aad
repz
and
fidivrs
xor
jo
cltd
je
pop
mov
cmp
or
jle
popa
or
xlat
add
lock
pop
stc
sbb
mov
mov
and
ja
clc
fldcw
push
add
lahf
out
into
push
jae
jge
movd
fs
and
ss
jne,pn
jmp
ret
das
xchg
adc
test
loope
daa
fadds
xchg
pop
mov
and
mov
xchg
movntps
xor
dec
out
fdivs
cmpsl
int
xor
pop
stos
jo
test
jns
fnsave
in
push
aaa
inc
iret
fbld
or
sbb
cli
cmp
jecxz
fcoml
mov
sub
mov
icebp
cmp
repnz
jl
xchg
push
int3
xchg
iret
xchg
mov
popa
aaa
push
cmpsl
jne
and
mov
jge
mov
sub
decb
add
adc
inc
test
dec
scas
pop
xchg
sub
pop
rcr
aaa
scas
rorb
sub
fcmovb
sub
adc
iret
push
xchg
popf
push
aad
clc
out
outsb
adc
out
loop
insb
mov
dec
jnp
mov
push
rcrl
dec
dec
dec
jne
outsb
inc
arpl
add
loop
jne
add
xor
sahf
mov
and
mov
jbe
lahf
push
cmp
mov
imul
daa
add
mov
rcl
pop
cs
mov
ds
call
push
out
cvttps2pi
cld
stos
sub
mov
loop
xor
or
adc
pop
xchg
fistps
push
lret
les
mov
call
mov
sub
sarl
std
mov
sti
mov
mov
mov
in
flds
scas
popa
out
lods
push
inc
adc
xor
fisttps
out
jmp
add
inc
clc
roll
dec
movb
inc
addr16
add
das
inc
stc
sbb
adc
daa
cmovb
mov
jg
add
lods
popf
jns
sbb
adc
inc
stos
dec
sub
inc
js
nop
pop
push
mov
xchg
dec
nop
iret
add
gs
mov
or
jnp
add
inc
lret
mov
frstor
pusha
sub
cmp
mov
push
enter
call
call
sub
lock
stc
pushf
mov
inc
xlat
and
and
fnstcw
das
xchg
bound
sub
ret
ljmp
cmp
mov
add
mov
fs
lods
in
or
adc
cmc
add
add
dec
fiaddl
mov
mov
sbb
dec
mov
mov
enter
push
ja
xor
mov
jp
outsl
dec
nop
adc
cmc
xor
rorl
leave
jnp
fmuls
scas
int
xor
out
sbb
jmp
and
adc
lret
lret
push
or
jp
aam
or
lock
cmp
scas
xlat
xchg
push
hlt
push
cmp
xor
ds
and
jle
mov
ret
jns
sub
fdivs
sarb
cmpsl
pusha
ret
rolb
push
scas
push
mov
adc
sub
fdivl
push
and
mov
ss
dec
cmp
xchg
pop
test
mov
cmp
sbb
andb
mov
push
popf
or
xlat
clc
dec
mov
shlb
adc
data16
clc
lods
xor
jge
mov
cmp
xchg
loopne
xor
fists
psubsb
mov
pop
adc
cmp
js
fdivl
sub
jmp
ljmp
loopne
cmpl
jb
and
imulb
imul
ret
xor
xor
shr
int3
shr
sub
xor
bound
sbb
mov
xchg
mov
sub
jg
xchg
rolb
xor
cmp
imul
aas
inc
mov
pop
movsl
xchg
aaa
adc
sbb
pusha
dec
push
push
outsl
notl
jl
mov
clc
mov
ss
popa
mov
jg
loop
movsb
adc
xor
xor
lahf
adc
out
xchg
mov
sti
pop
test
loop
sub
push
adc
je
xchg
pop
out
das
mov
or
cli
dec
fistl
fst
addl
fs
js,pn
xchg
dec
ret
jmp
xchg
inc
mov
inc
aad
aam
pop
push
outsl
cltd
jmp
mov
mov
inc
jbe
adc
rcrb
mov
push
bound
mov
nop
add
or
outsb
ret
ret
stos
ud2
fidivrl
push
es
dec
jnp
add
adc
inc
cmpsl
aas
mov
lds
rorb
pop
push
jo
enter
dec
pop
dec
roll
mov
cmp
int3
or
int
outsl
dec
jge
mov
in
mov
jge
inc
gs
mov
pop
push
mov
xor
lret
testl
and
xor
lea
mov
clc
popa
div
dec
xchg
or
repnz
js
lods
js
sub
mov
push
xor
popf
cmp
fisubs
sbb
and
pop
aas
or
inc
mov
mov
call
or
jecxz
sub
sbb
loop
adc
cmpsb
pop
push
fwait
and
dec
and
dec
stos
sbb
sahf
xlat
mov
jo
int3
jecxz
cmpl
sbb
ja
rorb
mov
push
pop
jno
xlat
mov
mov
pop
inc
in
pop
pop
lret
sbb
jmp
lret
cmc
mov
mov
ret
fwait
jo
mov
cld
das
xchg
jae
push
out
ficompl
lahf
jg
lcall
sbbb
push
inc
push
pop
hlt
mov
imul
and
test
in
repnz
push
xchg
loopne
add
rorl
sahf
cmp
gs
cmp
xchg
cmp
mov
push
dec
sub
jb
jo
lret
or
fbld
ljmp
adc
pop
add
adc
out
ret
xchg
xor
popa
dec
repz
loop
out
into
repnz
mov
leave
std
dec
cmp
jge
out
sahf
testl
inc
mov
movsb
lahf
xchg
cld
and
mov
xorl
sti
mov
lock
pusha
xor
clc
mov
out
cmp
xchg
mov
xchg
stos
and
leave
jae
xor
incl
cmp
mov
inc
sbb
insb
adc
push
stos
or
ret
cmpsb
lock
mov
fadds
sbbl
and
jae
repnz
stos
lock
iret
xchg
dec
stos
je
xchg
push
cwtl
push
stc
scas
js
outsb
or
mov
insb
iret
xchg
scas
dec
push
mov
cwtl
sbbl
or
cmpsl
insb
or
and
jnp
push
pop
mov
push
iret
cltd
xor
mov
stc
mov
scas
shlb
dec
or
adc
jle
add
sbb
add
lods
test
andb
das
aam
add
cmc
add
add
je
cmpsb
adc
dec
push
call
lcall
js
stos
cmp
push
pop
mov
call
pop
add
movsl
je
mov
jns
in
xchg
imul
sarl
lea
aad
ljmp
jno
mov
push
adcl
loope
sub
sbb
push
outsb
notl
jg
dec
add
cs
popa
mov
mov
or
jl
ljmp
jno
out
mov
mov
cmpsl
pop
test
nop
pushf
push
incb
mov
jl
push
or
leave
mov
jo
ja
insl
les
cmp
or
loope
lods
mov
icebp
jg
not
std
adc
daa
xchg
mov
push
sub
dec
paddsw
call
je
fildll
push
mov
mov
inc
je
dec
out
sbb
xchg
bound
pop
loop
push
pop
push
jle
or
push
add
sbb
sub
mov
into
mov
cld
cmp
pop
int3
sahf
movsb
dec
inc
out
lds
mov
cmp
lock
mov
mov
xchg
leave
cmp
or
out
push
add
jno
sbbb
push
jbe
adc
rorb
in
jecxz
push
inc
jb
fucomp
test
xchg
sahf
jecxz
outsb
fsubs
pop
ret
pop
jae
divl
jae
repz
sub
scas
int
jp
pop
add
lods
insb
cs
add
jg
andb
idivb
sti
cld
lock
adc
push
push
cmp
mov
pop
or
loope
mov
xor
inc
or
cmp
mov
push
sbb
mov
push
cld
imul
ret
jne
jmp
pop
popf
dec
rcl
out
sub
test
cmp
and
push
dec
loop
mov
daa
or
imul
push
xor
sbb
and
push
lcall
cs
push
out
sub
jb
adcb
jmp
cltd
aam
lahf
or
or
mov
add
ds
repnz
cmpsb
in
lret
fnsave
rcll
std
test
or
les
xor
pusha
aaa
jle
pusha
nop
mov
cmpsb
std
push
xchg
mov
push
adc
xor
mov
lock
lea
sahf
sbb
fidivs
dec
test
shll
or
push
imul
fidivrs
lea
cmp
cs
daa
call
add
into
addr16
sti
clc
lret
and
push
pop
shlb
cmp
or
stos
mov
arpl
repz
xorb
testl
sub
xchg
cmp
pop
in
aaa
aaa
aas
imul
int3
mov
or
arpl
in
dec
mov
mov
adc
ret
fs
repz
addr16
call
sbb
xor
sbb
rclb
xchg
mov
dec
jge
add
jns
mov
mov
bound
or
jmp
push
outsl
sub
js
adc
ficomps
push
mov
out
cmp
je
int3
movsl
insl
repz
xchg
mov
call
push
mov
sub
mov
test
mov
inc
call
xor
pop
aam
cmp
fsubs
pop
mov
mov
xchg
js
add
mov
movsl
repnz
jle
sbb
inc
movsb
add
aas
imul
inc
inc
movsl
lods
cld
aaa
push
lret
insl
fxch
inc
xchg
inc
push
cmp
loope
add
push
arpl
test
cmp
jecxz
xchg
int3
fcmovnbe
add
stos
xchg
sub
fwait
out
mov
jbe
jmp
pop
mov
mov
pop
mov
and
mov
pop
rol
inc
xchg
mov
xchg
std
lock
push
pop
int
lahf
jne
out
add
in
daa
mov
or
imul
sub
pop
pop
in
into
dec
subl
cld
dec
inc
jle
adc
mov
xchg
or
adc
testb
rclb
cs
hlt
xor
sbb
imul
pop
inc
cli
fs
mull
mov
sub
dec
sub
repz
cmpl
inc
test
jnp
xlat
imul
fisubrs
out
cli
repnz
add
je
jne
pop
outsl
out
aaa
jae
ds
dec
leave
and
add
add
add
loop
fstp
rorl
push
jmp
scas
shl
push
jmp
int3
mov
dec
popf
sub
mov
mov
inc
bound
repz
leave
mov
cmp
mov
cltd
jl
fbld
cmp
adc
and
sbb
adc
outsb
and
loopne
arpl
mov
mov
xchg
push
scas
cmp
cmp
push
dec
and
dec
and
sub
push
cmp
dec
or
shrb
add
and
iret
mov
nop
loope
ret
lds
repz
in
icebp
inc
lcall
jne
xchg
pop
es
gs
push
mov
arpl
add
adcl
pop
repz
xor
dec
movsl
insl
popf
dec
scas
mov
sub
push
inc
sbb
pop
rcrb
in
popa
jne
arpl
jbe
cmp
inc
cmpsb
das
inc
in
mov
xchg
call
sbb
xchg
mov
inc
nop
pop
in
mov
push
adc
pop
inc
push
add
dec
jb
mov
jg
aas
cmp
and
movsl
adc
mov
ret
push
mov
cltd
cmc
xor
cmp
imul
int
adc
mov
enter
mov
scas
stc
or
pop
xor
sarl
lret
in
mov
mov
xor
inc
mov
repnz
sbb
pop
inc
mov
popf
xchg
push
mov
ud0
in
popa
jg
das
and
popa
and
adc
xor
int3
sbb
inc
sub
mov
jne
adc
jp
cmp
sbb
jae
sub
lcall
call
mov
pop
cld
pop
mov
adc
sub
cltd
cmpsb
ja
es
icebp
pop
and
mov
mov
pop
sar
iret
inc
mov
icebp
cmp
or
jmp
test
or
loope
rcrl
sub
incb
pushf
cwtl
add
mov
mov
add
cmp
scas
mov
jg
out
adc
xor
stos
jo
repz
pusha
orl
add
aaa
test
cmp
negl
popa
push
push
adcl
push
adc
test
inc
xchg
and
pop
fcompl
pusha
cmp
sub
jae
sub
lds
mov
in
dec
adc
dec
mov
inc
les
fldcw
lcall
and
aaa
cli
cmc
dec
xor
loope
xor
mov
nop
mov
or
jecxz
mov
push
xchg
pop
and
arpl
notb
test
test
inc
sbb
js
cmpsb
popf
in
sub
lahf
pusha
jecxz
inc
cmp
or
lods
repnz
inc
mov
pushf
xchg
lret
cmp
fwait
dec
lcall
call
cmp
ficompl
or
outsb
mov
mov
and
in
push
add
out
ja
lret
xor
pop
decb
xchg
dec
mov
sbb
fwait
stc
out
mov
mov
out
fistl
mov
dec
or
xlat
push
inc
sub
sbb
sub
sub
push
jg
xchg
imul
push
mov
or
inc
sahf
rcl
xor
rcrl
inc
roll
add
jg
orb
jb
test
or
inc
loopne
repnz
or
in
xchg
test
mov
cmpsl
sub
jp
adcb
mov
sbb
out
sbb
cmpsl
push
clc
rorb
decb
dec
dec
pop
sub
pop
fdivr
sbb
icebp
jbe
sbb
push
mov
push
daa
sbb
icebp
fmul
test
aaa
mov
call
imul
pusha
out
into
xchg
cltd
push
xchg
es
out
jmp
pusha
hlt
sbb
loopne
mov
mov
ss
mov
inc
xlat
pusha
adc
out
sub
jmp
xlat
les
in
inc
dec
scas
pop
imulb
adc
repz
out
add
jno
add
push
sub
mov
cmp
stc
inc
mov
int
or
scas
push
stos
test
mov
divb
xchg
loopne
lahf
adcl
jb
mov
lret
xchg
fsubrl
inc
mov
push
pop
adc
pop
in
stc
xor
and
mov
stos
fwait
push
dec
dec
add
add
ss
std
iret
cmp
cld
sub
add
add
add
aad
lahf
cmc
lock
test
and
in
add
outsb
mov
fucomi
repnz
lods
xchg
nop
rcrl
add
push
add
cmp
or
cmp
shr
imul
pushf
jae
mov
hlt
ljmp
cmp
push
cli
cmp
dec
push
clc
repnz
mov
jp
add
sub
in
pop
aaa
mov
mov
cmp
pop
or
bound
mov
hlt
fsub
inc
push
mov
popf
jb
enter
leave
arpl
stos
sbb
orl
mov
sbb
sub
shrb
inc
add
sub
add
cmp
pop
inc
sub
sbb
mov
dec
push
in
push
sbb
lods
fs
ret
push
dec
adc
push
jb
pop
mov
scas
bound
pusha
add
and
jb
sub
dec
xchg
add
cmp
dec
dec
shll
add
mov
jae
jge
out
mov
loopne
xlat
insl
loop
push
xor
mov
repnz
and
cld
adc
inc
xchg
arpl
fcmovu
lret
int3
loopne
sbb
push
fs
mov
repnz
or
push
push
mov
push
adc
out
repz
imul
movsl
adcb
mov
bound
enter
out
fcoml
outsl
dec
inc
xbegin
fidivrl
cmp
aas
xchg
andb
add
cld
sub
mov
push
inc
decb
inc
add
rcr
fs
aad
mov
jg
aas
mov
adc
dec
push
insb
adc
push
lods
dec
adc
cld
mov
subl
cmp
mov
and
jge
cmp
or
mov
add
push
inc
cmp
js
jg
aaa
or
cltd
fistps
cmp
cmp
imul
lret
pop
xor
pop
mov
push
jbe
fimuls
mov
repnz
pusha
loopne
cmp
jb
es
inc
push
cmp
sahf
mov
jmp
mov
jns
xor
stos
shr
jno
sub
loopne
sbb
sub
ret
lds
aam
rcl
out
sbb
ror
sbb
popf
adc
aam
mov
shl
shlb
into
ljmp
lods
das
ja
lods
out
fdivs
out
out
fildll
testb
mov
xor
adc
add
jge
jecxz
insl
repz
add
out
in
pop
push
jl
movsl
in
nop
or
jmp
cmpsb
mov
jle
lods
dec
or
call
cmp
jne
adc
mov
int3
add
ss
sahf
outsb
xchg
in
mov
lea
out
idivl
dec
daa
mov
imul
sub
lret
push
push
xchg
xchg
mov
mov
cld
cmp
jo
xor
cmp
pop
cmp
movzbl
pop
and
push
or
lea
jb
loop
idivb
and
in
shll
or
in
pushf
fldcw
jecxz
fistps
lea
loop
mov
adc
out
int3
int3
pop
in
pop
ret
lock
rsqrtps
mov
xorb
fcoml
push
aaa
out
fimull
sahf
nop
mov
scas
add
int3
and
scas
pop
ss
test
call
leave
fmul
dec
mov
mov
cmp
adc
cmp
cmp
mov
shlb
repz
sub
cwtl
or
jmp
dec
dec
xchg
daa
sub
fdivrl
call
jae
ss
adc
clc
cmp
cltd
mov
mov
cmp
mov
cld
adc
jp
shl
jecxz
xchg
xor
pop
mov
jb
jecxz
dec
int3
mov
pop
and
shr
in
and
addb
pop
push
mov
stc
int
push
fsubs
or
cwtl
sahf
push
cmpsl
sub
insl
mov
mov
mov
pop
sub
fcomi
lds
pop
loope
out
pop
stos
arpl
sub
mov
push
push
adc
mov
lahf
insl
mov
xchg
pop
inc
or
xchg
mov
cmp
into
jae
jns
pushf
cmp
jecxz
jg
cmp
add
adc
lods
out
xlat
pop
add
add
es
mov
jmp
fdivrp
fdivl
add
cmc
add
add
jl
mov
test
jecxz
xlat
cltd
push
iret
mov
sub
cmc
mull
push
pusha
lea
and
push
clc
mov
lods
fs
fwait
mov
fwait
jnp,pt
xor
aad
sbb
aaa
test
ror
mov
inc
into
cld
enter
mov
jo
in
jmp
mov
xor
roll
ds
add
xchg
int
ja
sub
xlat
adc
pop
frstor
jns
mov
inc
xlat
stc
int3
outsl
sbb
pushf
pop
dec
sub
adc
inc
jns
sbb
mov
or
or
pushw
aas
cmp
mov
xchg
mov
push
fstpt
je
mov
sbb
ret
popa
loope
or
adc
xorl
cltd
xor
aaa
mov
lahf
xchg
frstor
into
popl
and
xchg
and
test
xor
test
inc
inc
jle
xor
lds
test
mov
std
and
pushf
sub
jmp
sbb
pop
add
dec
mov
inc
cmp
jp
push
loopne
mov
enter
cltd
ror
add
pop
clc
pusha
jp
adc
subl
test
repnz
movsb
ja
sub
inc
xor
int3
pop
push
lods
and
ja
das
jb
inc
sub
es
jne
xor
dec
sub
shl
pop
fdivl
mov
jge
mov
pop
or
cltd
sahf
xchg
ljmp
push
pop
xacquire
retw
lds
dec
pop
and
rorb
cmp
and
ret
pop
popf
lock
mov
clc
xchg
sub
std
jno,pn
inc
testb
lods
xor
hlt
dec
jns
jl
lret
mov
shr
arpl
cmp
gs
sbb
xor
adc
mov
xor
into
cmp
mov
jmp
les
mov
mov
ret
orb
xor
or
add
xchg
sub
pop
mov
cwtl
mov
leave
mov
or
inc
movsb
mov
pop
mov
jmp
shll
or
subl
cwtl
mov
leave
jne
jo
outsb
cmp
pop
mov
dec
sub
sub
jp
gs
hlt
xchg
xchg
push
fdivrl
test
jno
pop
adc
xchg
jle
jg
adc
cmpsb
insb
add
cs
fidivrl
add
lock
aas
jb
dec
xchg
clc
idiv
jo
cmp
cmp
mov
sbbb
jl
or
add
push
iret
pop
aas
jl
popa
icebp
mov
inc
mov
xchg
stos
or
out
mov
cmp
dec
or
or
aas
lret
in
add
push
popa
push
out
rclb
lret
nop
int
scas
in
xchg
into
std
mov
jne
jbe
mov
adc
aas
notl
mov
movsb
mov
mov
fldl2t
mov
test
loope
inc
pop
jo
call
stos
sub
xchg
in
insl
mov
add
cltd
xchg
in
and
and
xchg
stc
test
inc
arpl
stc
mov
add
fldcw
movb
lds
iret
stos
inc
movsl
jmp
dec
aaa
out
mov
jae
shrl
pusha
ds
push
or
pop
mov
aad
imul
cmp
lea
popl
and
lods
add
adc
add
in
xlat
fbld
loop
ja
mov
pushf
loope
aad
scas
bound
mov
into
je
lret
jecxz
push
add
cwtl
fs
addr16
std
scas
loopne
insb
pop
ds
dec
rcrl
inc
push
jb
fisubl
scas
dec
popa
sti
bound
cmp
push
shl
fistpl
and
mov
xchg
adc
stos
outsl
mov
add
lret
je
inc
add
sbb
fwait
push
xchg
cltd
and
cmpsl
sbb
push
fistpll
mov
ss
loopne
mov
rcl
jne
lret
movsl
pop
shrb
dec
mov
pop
ja
fisttpl
cwtl
xchg
out
into
adc
rcl
dec
sub
xor
lods
xchg
and
push
pushf
out
into
repz
push
bound
shlb
daa
jecxz
fcoms
nop
cmp
out
cmc
mov
lea
sub
aaa
ja
add
add
aaa
sti
addr16
out
fidivs
mov
xor
add
add
add
sbb
pop
sub
cmp
dec
push
xchg
adc
test
mov
shlb
cwtl
repz
xor
stos
jne
push
lods
sbb
je
xor
scas
ret
fsubrl
mov
jnp
ljmp
push
mov
arpl
push
cmpsl
jg
inc
sbb
fsubr
jne
xchg
sahf
add
cltd
ret
and
ror
int
push
repnz
inc
lcall
shlb
add
adc
scas
sbb
cmpsl
pushf
sbb
xorb
mov
rclb
inc
adc
jp
cmp
movsb
push
outsb
push
shll
stc
bound
dec
mov
jecxz
mov
mov
rclb
movsb
mov
fsubs
mov
push
movsl
in
push
sub
dec
sub
xlat
imul
mov
shll
push
pop
adc
sbb
adc
jmp
adc
jnp
daa
inc
mov
nop/reserved
jno
or
xchg
dec
xchg
inc
xchg
movsl
les
pusha
test
cmp
ljmp
jae
insl
lods
das
sbb
push
inc
data16
ss
loop
popa
arpl
sbb
jle
fs
lods
orb
movups
sub
sub
inc
jmp
cld
ret
jns
jg
mov
sti
mov
mov
movsb
fadds
jb
test
sub
or
daa
push
mov
lods
push
mov
jle
das
loope
jnp
insl
shll
adc
sahf
rorb
lods
out
data16
xchg
stos
imul
nop
int
jecxz
jo
mov
ds
add
arpl
rcr
gs
mov
jle
or
add
gs
insb
fistl
add
std
sbb
inc
mov
fisubrl
adc
mov
movsb
pop
shrb
mov
add
mov
xchg
pop
enter
cmp
dec
inc
inc
sub
scas
jns
mov
jae
inc
scas
lret
es
xor
ret
jge
roll
xor
and
mov
pop
mov
cli
test
int
dec
testl
cld
push
sbb
stc
lods
cmp
xchg
dec
jmp
push
cltd
scas
push
out
orb
jle
sbb
divb
aaa
xchg
jns
jmp
cld
and
add
xchg
daa
cmp
sbb
add
test
cmpsb
adc
popa
leave
cmpsb
cmpsl
popa
push
jbe
jle
stos
or
jle
pusha
pusha
mov
dec
jmp
lock
pop
push
mov
cmp
or
xor
sub
jnp
cs
fisttpl
inc
mov
outsl
lods
cmp
inc
pop
push
dec
mov
pop
mov
jle
xor
inc
out
addb
pop
ljmp
sarl
pop
inc
dec
imul
jno
xchg
mov
mov
add
xchg
push
inc
pop
push
ds
cld
out
add
hlt
jp
test
dec
aaa
lea
sbb
lret
mov
xor
mov
outsb
add
cmp
movsl
or
subl
or
movsl
js
sbb
jecxz
fcmove
mov
pop
mov
push
xorb
pop
push
jl
cld
divl
xlat
out
inc
xor
xchg
pusha
je
or
mov
push
xor
sbb
sbb
roll
aam
movsl
mov
cmpsb
cs
jbe
pop
lret
out
inc
aad
mov
jae
ds
scas
xor
mov
mov
cmp
sub
imul
mov
gs
xchg
push
test
jmp
mov
push
out
ss
inc
push
mov
lret
js
ficoms
mov
or
push
and
and
push
adc
sti
dec
adc
jno
rolb
mov
dec
sbb
cld
mov
adc
out
fcoms
call
xor
out
aas
aas
pop
dec
enter
sub
and
lea
popf
loop
xlat
jp
mov
sbb
cld
cmp
and
fs
sbb
fs
cld
mov
clc
flds
add
lret
lcall
pop
pop
call
negb
push
or
movsl
adc
add
arpl
out
out
sbb
ret
adc
jmp
out
mov
arpl
jo
add
out
sbb
repz
xchg
cwtl
mov
add
add
xchg
mov
add
cmc
nop
xchg
push
adc
popl
pushf
jg,pt
fisttps
or
mov
xchg
mov
or
fs
mov
icebp
push
sub
scas
mov
mov
mov
cmpsl
mov
dec
mov
aaa
mov
out
mov
pop
testb
and
or
in
aam
pop
psubusw
cs
cmc
nop
or
dec
stos
into
flds
leave
jbe
xchg
and
popf
mov
xchg
dec
scas
jg
scas
push
in
mov
out
sub
rol
cli
ffree
clc
movsb
dec
sbb
movsb
test
gs
push
insb
lcall
aas
sub
push
in
fsubrl
push
insl
mov
rcrl
mov
push
sti
jnp
pop
adc
mov
test
sbb
mov
arpl
jae
sbb
push
mov
mov
aaa
loop
fcmovu
or
dec
fsubrl
sbb
ljmp
bound
xor
in
add
cmp
faddl
xor
ljmp
mov
bound
les
xchg
movsl
jp
push
cmp
test
jp
jl
inc
sbb
push
mov
out
mov
cld
icebp
mov
sbb
dec
decl
outsb
pop
test
in
mov
stos
aad
sub
cmpsb
mov
xchg
cmpsb
cmc
stc
std
sbb
mov
mov
rol
test
jge
push
sub
xor
call
or
mov
mov
jb
jbe
push
add
mov
ja
fdivrl
push
and
mov
push
rorb
stc
mov
fnsave
fcoms
adc
out
mov
pop
aas
arpl
stos
fadd
add
divl
aam
jmp
xchg
lods
inc
shlb
push
and
cmpsl
xor
mov
jbe
repz
and
fcompl
mov
imul
xor
les
xchg
pop
inc
jge
cmp
add
push
test
mov
outsb
cmp
sbb
cmpsb
and
arpl
sbb
addr16
dec
xorl
xor
movsb
icebp
movsb
sub
mov
fwait
cltd
jmp
jbe,pn
xor
pop
jl
mov
xor
movsb
xorl
lret
movsb
or
or
cli
lcall
out
pop
pop
xchg
loop
xchg
pushf
fs
repnz
lods
pop
xchg
sbb
push
mov
adc
push
pop
inc
arpl
push
mov
mov
xchg
or
push
stos
ljmp
xchg
bound
dec
mov
test
or
dec
dec
push
loop
pop
add
dec
data16
rorb
arpl
push
xor
fstl
data16
push
dec
jl
mov
scas
cmp
popa
enter
cltd
mov
inc
and
scas
xor
rol
pop
mov
movsb
push
add
popf
mov
cmpsb
or
inc
negl
scas
outsb
ss
lods
bound
mov
ss
pop
aad
sub
and
and
dec
fcoms
pusha
and
mov
and
adc
pop
xor
lahf
std
and
test
rcl
add
cmpsb
xor
sbb
psllq
and
sub
and
xor
lods
xchg
and
pop
std
inc
out
inc
cmp
aaa
ret
jbe
test
xchg
xor
in
lock
pop
cld
cmp
xchg
jb
cmp
mov
mov
insl
mov
mov
jle
aam
cs
pop
test
ljmp
out
inc
adc
mov
out
imul
outsl
mov
xor
lret
mov
pop
flds
xchg
in
ficoms
and
jg
sub
outsb
jns
push
sbb
adc
cwtl
xlat
sqrtps
lds
aam
imul
or
mov
cmp
dec
sbb
enter
lret
mov
jmp
add
xchg
repz
xor
loop
in
sti
fwait
in
mov
out
cld
ret
jp
inc
mov
cmp
cmp
mov
std
shll
pop
insb
inc
jo
mov
mov
popa
pop
sub
lahf
out
push
mov
pop
sbb
lods
pop
sbb
sbb
out
cmp
icebp
xor
fcoml
xor
pushf
punpckhwd
jnp
push
jle
xor
add
add
mov
dec
adc
or
add
add
loop
sbb
icebp
xor
test
aam
cmpsb
iret
and
scas
fnstenv
pushf
xchg
out
call
cmp
test
jle
cmp
add
dec
jmp
movsl
adc
and
xor
int3
mov
mov
addb
sub
mov
iret
paddb
shrb
int3
dec
lahf
ret
adc
jo
sahf
in
sahf
cmp
lods
pop
es
xor
insl
add
aaa
push
jmp
mov
add
xchg
frstor
shl
mov
mov
push
sar
shlb
ljmp
jno
sbb
pop
pop
test
mov
xchg
js
cmp
xor
cwtl
fmulp
push
lods
shlb
adc
xchg
mov
das
test
mov
xor
test
xchg
xor
call
ds
or
cmc
in
mov
cmpb
ss
clc
lcall
outsl
xor
idiv
lea
xor
push
push
xchg
mov
xchg
mov
push
cs
jb
xlat
xor
mov
pop
add
repnz
and
jae
iret
cltd
adc
push
cmp
das
jae
iret
scas
mov
xchg
xchg
push
sti
push
push
ljmp
enter
je
aam
hlt
add
shll
sahf
xchg
jb
rcll
or
lahf
into
inc
jle
scas
sub
cmp
cltd
sub
xchg
mov
pop
xchg
mov
in
out
push
xchg
ja
inc
jae
pop
mov
sti
mov
dec
js
mov
je
push
test
mov
shlb
xor
fistl
fwait
shl
pop
lea
and
loope
push
inc
cmpsb
fwait
dec
xchg
and
fdivrs
push
insl
add
push
xor
xor
xor
sbb
sub
in
pop
cmp
stc
cld
movsl
fwait
cmp
cmp
pop
pop
jae
adc
or
xor
mov
daa
movsl
xor
clc
push
and
les
sub
mov
movsb
cmpsl
rorb
xor
mov
xor
mov
fistps
test
mov
cmpl
rcrb
mov
push
inc
add
arpl
mov
arpl
xchg
pop
in
push
cmpsb
mov
add
cmpsb
es
pop
adc
or
ret
jg
dec
ljmp
cs
pop
pop
js
ja
jge
loop
fnstsw
jne
mov
sbb
and
push
nop
fisttps
mov
jg
dec
fbstp
psrld
dec
or
jno
cmp
int3
into
lahf
enter
aaa
jns
push
jno
aas
cmpsl
es
adc
sbbb
das
std
or
and
dec
ljmp
mov
into
push
add
ret
inc
int3
loope
outsl
in
or
xchg
push
dec
xor
pop
jp
les
js
lods
mov
ficoml
in
notb
out
jecxz
test
dec
mov
jae
jne
sbb
jmp
mov
xchg
in
sbb
xchg
in
cmpsb
adc
out
and
mov
leave
clc
sahf
loop
movsl
ja
dec
and
mov
lods
xchg
rcll
fimull
xchg
push
sbb
jmp
pop
xor
popf
mov
popa
dec
shrl
push
cmp
fcompl
sub
scas
pop
fidivrl
xchg
nop
xor
out
or
adc
cmpsb
push
or
lret
icebp
ljmp
mov
cmp
stc
sbb
xchg
jns
out
jns
sbb
test
inc
int3
dec
mov
and
int3
cltd
push
push
pop
lods
push
pop
loope
cli
pop
jp
xor
in
or
mov
xabort
stc
sub
icebp
adc
int3
cs
outsl
arpl
jp
xor
adc
cmp
adc
jns
cli
mov
outsb
jg
stos
jl
clc
or
cld
push
imul
add
js
xchg
pop
inc
and
enter
pop
call
imul
cmp
rcl
pop
cwtl
mov
sub
fistpl
mov
dec
xor
inc
push
cmp
iret
push
rorl
cmp
std
add
in
aas
pop
push
and
and
in
pushf
mov
jbe
enter
pop
adc
sub
fsubrs
jp
mov
cmp
push
ficomps
ss
mov
rorb
aad
mulb
jge,pn
hlt
sahf
push
sub
test
push
shlb
ja
add
add
adc
dec
negl
mov
or
int3
imul
add
test
enter
aas
mov
sahf
orb
jne
cmc
popa
mov
andl
ja
jo
fst
es
outsb
into
sbb
movsb
stc
pop
push
roll
sahf
adc
mov
add
jae
ret
cmc
inc
jno
sub
scas
ret
fidivrs
sub
adcl
fnstcw
sbb
addr16
jnp
std
in
and
shl
pushl
in
rsqrtps
das
inc
lea
icebp
outsl
rclb
out
jo
lock
and
ljmp
adc
fisubrl
scas
and
jmp
enter
push
sbb
lock
cwtl
scas
daa
inc
sub
lret
adc
shll
mov
je
sub
pushf
pop
ja
xor
fsubrp
je
pop
xchg
loope
mov
mov
cmp
faddl
jbe
adc
andb
inc
ret
pop
push
jbe
add
push
mov
xor
adc
les
xchg
mov
sub
sub
loope
push
inc
outsl
dec
aas
lock
pop
pop
adc
sbb
jnp
stos
fiaddl
mov
in
or
cmp
inc
or
int3
test
leave
sub
fdivs
fsubrs
lahf
push
fdivr
xor
mov
pop
add
je
nop
and
cmp
sbb
cvtps2pi
pop
mov
push
jge
aaa
push
mov
inc
pop
xor
push
mov
andb
push
sbb
stos
cmp
jb
dec
mov
ret
mov
imul
add
cmp
fdivl
fsubp
xor
lds
cmp
mov
xchg
mov
ss
ds
mov
mov
stos
lea
jmp
cmp
loop
sbb
add
mov
out
jbe
leave
outsl
mov
mov
shll
inc
mov
push
int
das
fldenv
adc
xchg
outsl
cmp
aas
mov
mov
and
add
mov
cwtl
mov
filds
out
lods
xor
push
int
lcall
xchg
xlat
lods
pop
pusha
icebp
sbb
add
pop
mov
mov
inc
fsubs
xor
sbb
xchg
ja
xor
sub
xchg
sbb
xchg
stos
ljmp
lods
mov
les
and
fcmovb
arpl
fimull
arpl
movsl
lret
mov
cmp
adc
sti
fadd
repz
sbb
arpl
stos
and
sbb
mov
xchg
ror
jne
pop
mov
subb
daa
mov
or
test
sarl
push
jns
into
test
je
mov
cmp
sub
sbb
int
fwait
inc
push
lcall
stos
mov
mov
lret
fcoms
and
scas
je
xchg
mov
and
stos
popa
mov
mov
pop
or
dec
ret
pop
jno
jo
pop
lret
cltd
pop
xchg
pop
xchg
loop
cmp
ds
cmpl
test
lods
cs
add
addr16
add
mov
lret
jb
xor
mov
lods
ret
je
ret
adc
mov
sahf
sub
cmp
xor
mov
cmp
push
mov
into
nop
scas
push
bound
repz
cmp
mov
aaa
testb
stos
push
out
lahf
mov
cmc
mov
add
ret
stos
push
ret
xor
fcomps
orb
sahf
lock
addr16
in
inc
add
fdivl
xchg
ja
out
xor
fiaddl
or
fimuls
je
add
movsl
dec
push
mov
aaa
sub
adc
lret
add
outsb
pop
es
sti
mov
cmp
inc
mov
insl
scas
ss
xchg
mov
std
sub
jo
mov
push
pop
arpl
mov
add
xchg
fs
or
je
das
bound
movsl
loopne
cmovge
es
pop
mov
mov
pop
add
test
push
cmpsl
lock
mov
imul
cmpsl
add
mov
movsb
push
pop
xchg
inc
sub
adc
shl
js
arpl
pop
push
fsubr
mov
mov
cmpsb
cmp
test
stos
pop
shlb
jmp
sbb
shll
push
jmp
rorl
dec
cmp
test
pop
mov
cwtl
mov
mov
add
ds
fdivp
cld
ds
daa
cmp
cmp
add
cmc
add
add
icebp
cwtl
aad
ds
cli
push
cmpsl
sbbl
mov
push
pop
fwait
add
push
xchg
aam
adcl
loop
dec
mov
aad
sarl
adc
mov
sbb
in
xchg
xchg
test
imulb
std
mov
inc
lret
loop
sub
scas
add
out
test
push
rclb
outsl
fs
loopne
mov
cmovle
pop
ljmp
cmpb
xchg
xchg
cs
xchg
xchg
jns
scas
jmp
jmp
inc
push
inc
sub
xor
call
pusha
jns
push
or
push
pop
mov
shll
mul
dec
sub
inc
jbe
mov
or
sti
pop
repz
pusha
scas
or
or
out
mov
lds
decl
mov
std
mov
rolb
dec
mov
sbb
cli
movsl
fs
aas
imul
je
add
inc
stc
movsb
notl
cltd
repz
call
xor
inc
mov
jnp
inc
and
pop
mov
aad
mov
into
cmp
loope
mov
das
mov
mov
dec
mov
rol
gs
or
add
mov
jne
movsb
and
push
jmp
mov
jge
jg
test
adc
mov
cmp
gs
or
lahf
mov
roll
jp
test
mov
dec
mov
pop
mov
push
pop
mov
dec
or
loopne
mov
dec
mov
pop
loopne
jno
push
dec
jnp
pop
mov
movsl
pop
jecxz
in
pop
shll
cmp
and
test
and
out
outsl
mov
outsb
lods
loop
dec
int3
sub
xchg
addl
sbbl
sub
add
xlat
adc
mov
mov
subl
sbb
daa
inc
pushf
testb
push
ret
fwait
jo
bound
das
mov
dec
xor
push
cmp
icebp
mov
arpl
sub
call
lock
mov
decl
xor
xor
in
xchg
jb
mov
push
and
repz
push
dec
xlat
fisubs
mov
mov
push
lret
mov
movsb
push
and
call
pop
in
sub
xor
in
adc
dec
mov
fiadds
inc
push
cli
jecxz
dec
mov
pop
xchg
and
xchg
dec
popf
mov
fsubl
fistl
dec
or
sbb
mov
addl
xlat
js
dec
mov
mov
fnstenv
mov
clc
fnstsw
push
dec
ret
loope
pop
adc
aad
add
lock
mov
inc
pushf
aam
std
std
sub
push
mov
lods
jae
xchg
jnp
sahf
rcll
jae
push
js,pn
mov
pop
mov
push
mov
stos
ds
or
inc
test
fcoml
vhsubps
clc
inc
iret
inc
popa
pop
push
jnp
in
in
arpl
add
cmovno
push
push
inc
mov
loopne
cmp
jbe
mov
inc
scas
push
ljmp
mov
in
inc
mov
js
cmp
jle
mov
mov
rclb
aad
lock
nop
mov
lcall
dec
jo
jge
dec
icebp
ja
and
jns
sbb
sub
jle
or
mov
dec
pop
mulb
pop
add
push
mov
add
add
loope
or
les
test
xchg
inc
adc
inc
into
fs
pop
jae
cmp
shl
cli
inc
and
adc
push
mov
imul
mov
sti
leave
jle
stos
aad
cmp
enter
in
std
cmp
sbb
pop
fisttpl
scas
iret
and
aaa
pop
mov
cmp
mov
jecxz
je
or
rcrb
cmp
dec
faddl
call
or
push
xchg
dec
and
or
xchg
call
data16
clc
icebp
inc
fcoml
sub
dec
jnp
leave
jmp
dec
adcl
ljmp
dec
push
mov
andl
in
inc
data16
xchg
sub
lods
cmp
stos
xor
jns
das
push
popf
out
pop
addb
xor
insb
imul
cmp
jne
mov
add
jnp
xor
jg
sbbl
jno
add
cmc
add
add
pusha
xlat
std
sub
dec
andb
mov
mov
mov
repz
fbstp
pop
das
adc
push
cld
xchg
add
fbstp
mov
cmp
pop
xor
stc
cmp
jge
into
xchg
fidivl
scas
jecxz
push
in
jge
push
shll
insl
pop
push
arpl
jb
in
lock
xchg
std
paddsb
mov
sahf
push
and
adc
push
cmp
sbb
inc
lcall
insb
sbb
cmp
call
in
rcrl
push
es
scas
mov
sub
div
xchg
cwtl
jnp
mov
lock
inc
pop
leave
xor
out
into
out
gs
scas
lahf
lock
sbb
cmpsb
repz
bound
lds
dec
sbb
fildl
push
adc
dec
add
rcl
sbb
push
in
adcb
out
xor
lods
cmp
push
jecxz
push
int
cmp
stos
and
movsl
xor
les
stos
pop
xor
pop
stos
lcall
sub
loope
jbe
push
adc
dec
inc
aad
movsl
xchg
fbld
jae
lret
insl
ret
and
lea
sub
clc
mov
dec
je
scas
ret
xchg
and
aas
and
dec
xchg
jno
arpl
pop
hlt
aas
dec
aam
mov
pop
stc
cs
jecxz
sbb
pop
mov
and
xor
ja
add
mov
lret
dec
push
xchg
loop
add
jbe
stc
int
adc
jle
fucom
sub
cmp
clc
jo
test
mov
mov
adc
push
fwait
imulb
inc
xchg
sub
xor
mov
ret
shrb
call
jno
lock
mov
add
pop
sbb
cmp
mov
loope
push
mov
mov
lahf
inc
lcall
lret
sub
jbe
ss
mov
insb
cmpsb
inc
bnd
cwtl
movsl
pop
xorl
mov
xor
test
cmc
js
aad
mov
loop
int
xor
push
pop
sar
out
push
gs
out
iret
sbb
lock
ret
jmp
xchg
pusha
xchg
aas
repnz
jmp
mov
mov
leave
push
sbb
xchg
leave
call
jg
push
mov
xchg
mov
out
xchg
je
incb
shl
test
leave
not
push
sub
jmp
xor
test
pop
mov
arpl
and
repnz
enter
xchg
dec
shrb
cmpl
aad
pop
fwait
movsl
sub
inc
cmc
adcl
push
mov
ss
addr16
adc
push
aam
lret
lea
xor
call
cmp
or
inc
mov
adc
data16
lret
or
leave
or
sbb
pop
lea
mov
pop
cmp
loop
sti
dec
icebp
inc
push
loop
cs
jno
lods
leave
sub
jns
shll
int3
mov
fbld
decl
data16
lods
jl
in
mov
int3
or
cmc
outsb
orl
cwtl
sbb
fdivl
fcoms
push
mov
xor
or
arpl
push
inc
arpl
add
push
mov
frstor
mov
inc
dec
mov
inc
shrd
stc
test
std
pop
xor
add
les
xchg
push
imul
mov
cmp
in
out
push
push
ljmp
les
mov
add
aas
inc
pop
fwait
cwtl
xor
lret
or
adc
mov
adc
jne
mov
mov
in
jnp
jmp
out
mov
mov
enter
imul
xor
pop
stos
and
scas
cmpsb
inc
rolb
jno
int
mov
pop
lock
int
jnp
mov
mov
iret
mov
dec
jns
dec
stc
testl
pushf
or
xchg
cmp
stos
addb
mov
test
pop
sbb
hlt
insb
sahf
adc
push
push
mov
in
aaa
sbb
out
int3
fadds
mov
mov
or
cmpsl
lods
xchg
popa
mov
jp
shrl
leave
cwtl
ret
fsubrl
adc
push
test
adc
in
cltd
or
iret
gs
push
mov
add
add
or
xchg
jmp
adc
pop
std
jae
mov
cmc
add
add
es
jp
sub
jmp
xchg
jp
out
leave
mov
xchg
stos
cmc
enter
add
and
cmc
clc
imul
add
xor
sarl
xchg
mov
nop
pop
je
push
xchg
inc
pop
roll
lret
and
jb
cmp
lret
movsl
into
lds
aas
cmpsb
adc
mov
xchg
mov
sbb
adc
pusha
xchg
cld
adc
flds
xchg
sub
mov
jp
adc
call
out
adc
cmp
cmpsb
iret
std
movsb
pop
fwait
sbb
xchg
mov
and
sub
push
test
xchg
cmp
shl
int
xchg
mov
imul
sar
sbb
loope
push
or
add
adc
push
inc
int
into
push
pushf
jae
sbb
pusha
push
mov
mov
into
inc
loopne
mov
lods
js
mov
aaa
xorl
sub
nop
jns
xor
push
or
popf
je
adc
pop
adc
leave
pop
fsts
mov
mov
mov
fsubp
filds
fsubs
inc
scas
ds
inc
mov
add
mov
push
mov
push
jmp
call
push
adcl
shlb
je
mov
sbb
mov
push
mov
shlb
adc
push
popf
or
sbb
in
insb
call
mov
movsl
mov
xchg
add
push
cmp
pop
cmp
cmp
jp
test
or
and
lcall
pop
push
and
dec
sub
xchg
add
insb
inc
arpl
jbe
adcb
not
cli
add
mov
fistpll
das
sarl
inc
lcall
out
mov
mov
int3
jmp
inc
jmp
pop
movsl
lea
vpmulhw
ss
pop
jae
inc
aaa
jmp
mov
mov
sub
or
out
push
test
out
sbb
stc
jb
mov
pop
mov
mov
xchg
jns
out
jp
dec
and
pop
xchg
hlt
mov
enter
dec
cmc
jmp
lods
fisttpl
lds
out
rol
mov
cmp
addr16
mov
pop
movsl
mov
xchg
sbb
mov
pop
js
jle
imul
xor
push
inc
scas
es
add
sub
call
fldt
loop
or
add
test
movsb
test
xor
lock
sbb
scas
mov
mov
pop
adc
mov
loop
inc
or
out
js
sub
out
add
mov
inc
jns
fwait
jne
mov
or
sub
add
pop
adc
fistps
movsl
or
or
inc
popf
xor
push
and
mov
lods
arpl
dec
mov
imul
sub
fldcw
out
xor
dec
js
mov
cmp
jl
jecxz
jbe
loop
mov
pop
cmc
inc
sti
ljmp
test
loope
jecxz
or
cmpsl
cmpsl
jmp
lcall
jecxz
int3
push
sarl
cmpsb
sbb
mov
in
fsubr
dec
les
loope
imul
adc
mov
jl
cs
mov
mov
mov
and
fcmovne
xchg
fdivl
aaa
imul
mov
out
orl
cmp
ja
jl
adc
adc
pusha
push
lods
fadds
pop
pop
cmp
fadd
fstps
mov
jp
scas
je
add
sub
jbe
sub
mov
mov
in
xchg
inc
cmp
dec
xorb
dec
cmp
aas
and
lea
jmp
adc
mov
xchg
fbstp
mov
leave
mov
loope
cmpsl
lret
add
dec
andl
inc
call
mov
lea
xor
xor
repz
sub
insl
adc
mov
ja
jb
sub
xor
shlb
and
dec
in
inc
mov
sbb
ficomps
jae
sbb
mov
and
add
push
pop
xlat
incl
repz
mulb
js
lahf
pop
and
sub
add
add
loope
loope
fistpll
adcl
jl
loope
pop
push
add
cmc
add
add
jge
mov
idivl
cmc
add
mov
xor
cli
push
jmp
popl
out
sub
nop
hlt
lock
rcll
push
ds
pushf
xchg
je
cmp
push
mov
in
fadd
and
push
int3
clc
inc
test
popa
mov
out
jecxz
outsb
mov
add
pop
nop
pusha
pushf
fistpll
jmp
rorl
mov
push
mov
jmp
hlt
push
sbb
jne
mov
cmp
insb
aam
cmp
faddl
daa
dec
pop
and
lahf
add
pop
adc
lcall
cmp
push
cwtd
icebp
cmp
jno
dec
cwtl
leave
in
adc
fisubrs
sahf
es
mov
lock
mov
clc
mov
push
sahf
xchg
or
lods
stc
fdivs
fldcw
and
dec
test
popa
out
add
or
cmpsb
and
lret
add
popf
pop
pop
insl
jg
mov
pop
jg
sbb
aas
inc
cmp
mov
leave
neg
fwait
jecxz
and
in
sub
cli
mov
or
jns
sub
in
daa
lret
xor
pcmpgtb
movsb
repz
daa
lea
cli
movsb
nop
ficoms
dec
push
jbe
fsubrs
lcall
fistps
add
cmpsb
push
and
enter
fdivs
cmp
jp,pn
xor
and
mov
scas
icebp
add
jp
jno
lret
int
ja
ror
mov
mov
jle
sub
or
cld
sbb
push
jo
iret
pop
mov
mov
pop
cmp
out
addr16
xchg
mov
cmp
jno
sub
scas
fdivl
adc
jno
pop
mov
js
cwtl
jg
loopne
pop
popf
stos
mov
jecxz
adc
pop
mov
adc
xor
cs
in
les
loopne
pop
mov
ds
cmp
inc
jecxz
or
cmpsb
mov
sbb
mov
rorb
leave
jae
hlt
ja
je
adc
inc
mov
mov
rorl
bound
je
or
adc
mov
in
dec
push
xchg
pop
or
jmp
iret
push
mov
arpl
imul
int
movsl
sbb
insl
adc
dec
jmp
sti
les
or
or
inc
xchg
mov
movsb
daa
push
sub
mov
xlat
xor
cmp
xor
mov
cmp
dec
shl
icebp
mov
push
leave
cli
mov
sbb
or
mov
scas
mov
dec
cltd
push
test
imul
fidivs
cld
cmp
jb
cmp
or
xor
and
jnp
shlb
aaa
jmp
pop
push
mov
sbb
imul
xchg
cmp
hlt
pop
int3
daa
test
cmp
in
lods
hlt
scas
pushf
sub
add
jmp
add
mov
sbb
pushw
hlt
and
les
pop
push
xor
sub
add
jno
jg
jmp
dec
sbb
push
xlat
pop
sub
hlt
or
jno
call
cmpsb
sbb
and
xchg
pop
dec
data16
stos
jp
aaa
scas
mov
jmp
cmp
xor
dec
add
add
aaa
xchg
jmp
xchg
mov
xor
xchg
fdivl
mov
mov
mov
jg
push
imul
movsl
fcmovu
in
adc
sub
js
xchg
mov
or
divl
xchg
iret
inc
jg
mov
ds
aaa
fistps
cmp
ja
jo
mov
add
fs
fsub
xchg
jp
sub
out
pushf
jg
stos
fwait
mov
sub
xchg
test
test
push
xlat
fs
inc
push
icebp
xchg
in
jp
mov
test
cmp
int
popw
dec
pop
pusha
lea
mov
out
and
mov
jmp
imul
push
lcall
int
lret
add
xor
ds
fnstsw
sti
jbe
xchg
cmp
xor
push
idiv
es
fisubs
js
sub
and
and
ret
daa
mov
sub
data16
popf
cmp
repz
jb
lret
jmp
std
addr16
dec
cltd
js
clc
sbb
dec
test
repz
js
cwtl
or
sti
fimull
stos
addr16
dec
push
fistps
fiadds
add
loope
xchg
out
notl
and
push
pop
add
cmc
add
add
sbb
int
push
or
push
jae
push
add
leave
imull
and
outsb
inc
xchg
and
in
cmp
ds
leave
test
popa
in
movsb
add
jae
xchg
daa
adcb
push
popa
mov
iret
jg
pop
pop
push
jle
sub
testl
cmp
sbb
and
rorl
loopne
and
int
push
inc
lret
sub
sub
or
out
fdivs
leave
inc
mov
inc
inc
insl
nop
sar
mov
shrb
xchg
sahf
enter
cli
pop
popf
or
sbb
arpl
sub
movsl
xor
pop
inc
pop
outsl
jns
imull
clc
dec
mov
in
aaa
mov
fildll
ret
loop
addb
mov
int3
push
adc
sbb
loopne
outsl
adc
mov
dec
fwait
mov
cmp
jne
jl
arpl
mov
pop
add
cmp
mov
inc
jbe
aas
sti
adc
jle
fs
test
bound
inc
mov
ja
xchg
pop
es
stos
iret
cmp
insb
imul
push
xor
push
mov
in
pop
adc
xor
imul
add
test
mov
or
popf
or
jne
jns
inc
mov
pop
aam
inc
jbe
cmp
aaa
mov
into
loope,pt
lcall
fisubrs
mov
addl
push
das
xor
call
fldl
cmp
push
mov
inc
or
stos
or
sub
push
jbe
stos
push
cmp
data16
js
repz
dec
in
cmc
add
mov
cs
fsts
mov
nop
out
sub
cmp
insl
out
or
push
insb
adcl
out
cmp
insl
sbb
int3
loope
je
mov
fistl
aam
cmp
arpl
mov
in
fwait
ds
lret
mov
inc
in
or
fnstcw
push
std
loope
dec
out
ss
push
xchg
jbe
daa
out
sub
cmc
je
bound
dec
cltd
out
icebp
mov
imul
outsl
fxrstor
pop
test
mov
adc
cmpl
int
cli
pop
inc
cmpb
lret
testl
pop
test
mov
sbb
adc
dec
jg
outsl
fistps
rorl
ds
xchg
mov
or
xchg
or
adc
ret
imul
pushf
inc
into
add
xor
out
fcoms
xchg
cmp
fsubrs
pushf
jns
push
call
andb
and
mov
jnp
mov
fcmovu
test
loope
push
out
cmp
inc
inc
adc
arpl
mov
mov
es
jecxz
pop
adc
jne
or
mov
imul
aam
cmp
sbb
out
inc
add
cmp
dec
les
test
add
lock
mov
mov
dec
mov
cmp
cli
sti
ljmp
cld
xor
fbstp
adc
cmp
sub
add
lods
pop
mov
xchg
xor
xchg
pop
mov
scas
xor
xchg
pop
js
push
push
push
in
dec
popa
xor
or
in
out
adc
std
add
sub
xor
dec
push
shll
testb
or
sbb
fdiv
or
frstor
and
pop
lahf
fcmove
dec
or
in
push
mov
mov
movsl
idiv
lret
mov
xorl
js
xor
pusha
pop
cmp
mov
jae
push
mov
imul
in
or
test
out
adc
nop
pop
outsb
leave
in
xlat
lea
jl
cmp
outsb
imul
mov
inc
lods
xchg
fiadds
mov
mov
inc
das
pushf
pusha
rcll
movsb
rcll
mov
popa
cmp
dec
add
jns
shll
aam
lret
ret
in
scas
push
fs
jp
out
mov
sub
lret
sub
faddl
xlat
gs
xchg
mov
xchg
and
add
iret
ja
dec
loope
dec
add
push
add
xchg
or
lcall
xor
jmp
aaa
push
stos
xchg
out
add
pop
int
push
enter
repz
add
cmp
loope
mov
mov
add
add
add
cltd
mov
xor
rcll
push
xchg
movb
inc
push
cmpsl
mov
in
cmp
xor
ds
das
sub
sub
jb
pop
add
in
sarb
inc
dec
mov
and
cmp
push
mov
stc
xor
sbb
shll
mov
xlat
leave
aas
push
push
inc
mov
ljmp
mov
cmpsl
rclb
inc
and
pop
dec
shl
push
jo
dec
test
or
inc
test
lock
leave
rorb
xchg
jo
clc
rclb
add
loope
jg
mov
imulb
enter
or
pusha
js
test
scas
or
ds
inc
cld
dec
mov
lea
in
and
rcll
into
mov
popf
aad
lods
mov
cmp
cltd
aaa
lea
repz
push
add
mov
inc
nop
or
lods
inc
ja
std
roll
mov
jo
sub
bound
das
xchg
jbe
jbe
xor
stc
int3
xor
xchg
leave
push
pop
lock
add
sub
inc
filds
sub
cmpsb
push
scas
pusha
arpl
outsl
das
or
test
sti
sub
sbb
es
fptan
jns
xor
cmp
rcrb
andb
cmp
fdivr
addr16
or
cwtl
xchg
cmpsl
sub
stos
fildll
mov
push
nop
adc
push
es
aas
or
test
es
in
fwait
adc
ds
jae
add
cmp
adc
dec
jg
xchg
jl
push
xlat
popa
das
or
add
sbb
mov
daa
lcall
xchg
rcrl
adc
dec
jnp
or
and
push
rcl
push
push
test
insb
ffreep
bound
pop
xchg
inc
loop
sbb
mov
pop
mov
xlat
or
ljmp
sub
mov
push
imul
jle
adc
cmp
test
cmp
rcrb
data16
mov
test
mov
add
int3
cmovg
or
mov
iret
repnz
cld
enter
mov
sbb
mov
jb
add
rorl
gs
sti
push
push
call
je
popf
shl
insl
je
xchg
cmc
add
push
xchg
mov
stc
call
icebp
jo
repnz
sbb
mov
xchg
push
mov
pop
jb
adc
lret
mov
pop
xchg
push
xor
xlat
mov
sbb
mov
sub
insl
test
cwtl
popf
mov
sbb
js
jno
enter
sti
jmp
push
jg
dec
inc
cwtl
sbb
jb
mov
inc
clc
xor
xor
popa
cmp
lcall
js
inc
add
cld
mov
jecxz
insl
mov
or
data16
shlb
popa
cmp
sbb
cmp
jl
cmc
xorb
flds
mov
call
out
orl
test
sub
mov
sbb
fdivp
adc
icebp
pop
div
dec
int
ljmp
rclb
mov
and
inc
mov
mov
in
xchg
popf
push
push
xor
shrl
adc
in
xchg
mov
sbb
lret
scas
sbb
cmp
ret
xor
pop
push
imul
bound
mov
jle
xchg
js
fnstenv
add
fdivp
add
mov
mov
mov
std
mov
dec
aad
push
mov
enter
adc
mov
and
in
mov
outsb
mov
push
jo
daa
movsl
icebp
aad
mov
in
test
enter
xor
in
sti
xor
in
inc
pop
inc
dec
mull
rolb
imul
inc
add
cs
xchg
gs
sahf
xchg
jbe
shlb
adc
inc
cmc
mov
xor
xor
mov
loopne
out
push
jns
testb
lods
fiadds
xor
sbb
test
and
pop
ret
push
inc
xlat
jle
push
sets
mov
cmp
lcall
out
std
or
jmp
call
jle
arpl
pop
adc
or
adc
jo
add
add
mov
jp
ret
jnp
push
mov
add
cmc
add
add
filds
repnz
call
jno
xchg
data16
std
pop
lcall
mov
stos
mov
std
in
add
mov
inc
popa
jno
sub
loop
xchg
lcall
pop
pusha
mov
gs
out
aam
push
imul
cmove
fdivrs
push
std
jge
out
pop
mov
sub
and
aam
mov
xchg
popf
roll
sar
mov
mov
jne
push
cs
pop
cltd
out
and
test
cmc
adc
iret
pop
mov
pop
repz
ljmp
aas
lock
js
in
inc
aam
dec
shrb
mov
sub
mov
aad
gs
inc
mov
aaa
shll
jae
jb
nop
int
and
cmpsl
xchg
addr16
rclb
testl
adc
movsl
and
test
call
mov
adc
push
loop
fdivrs
adc
inc
jmp
add
add
xchg
ret
xor
pop
sti
pop
jnp
hlt
test
xchg
movsl
or
dec
iret
divb
sbb
pusha
gs
sbbl
out
das
sbb
mov
iret
pop
push
or
cmp
dec
mov
jnp
fldz
arpl
add
mov
or
cmc
aad
shll
and
cwtl
lret
js
out
cli
fcomi
dec
sbb
repz
jnp
push
call
sub
in
ds
pop
jbe
repnz
xor
sbb
inc
and
popa
xchg
push
cs
pusha
jne
hlt
lcall
daa
push
sbb
push
fs
imul
mov
jae
js
outsl
xchg
lock
pop
cwtl
xor
hlt
jp
mov
fildl
push
sub
push
mov
jae
mov
movsl
cmp
sbb
clc
add
test
inc
loopne
push
push
mov
inc
jns
out
sub
mov
repz
es
mov
sub
pop
mov
push
mov
orb
sub
sti
daa
ss
testb
sub
scas
jns
call
and
jle
jp
inc
rorb
xor
add
and
insl
subb
mov
adcl
lea
push
ss
daa
mov
fldenv
jbe
loope
jnp
in
xor
mov
xchg
cmc
loope
jae
aaa
push
lcall
xchg
roll
jns
xor
pop
div
pop
popa
push
push
shlb
mul
cmp
and
stos
pop
cwtl
out
mov
cs
lcall
or
cmp
nop
popa
xchg
or
dec
add
test
rcl
xor
inc
inc
inc
jmp
in
shrl
and
scas
jae
movswl
lahf
xor
and
cwtl
mov
adc
test
loopne
loope
lea
push
cmp
mov
js
pop
out
dec
inc
lock
dec
fdivr
and
scas
jp
mov
fs
into
mov
jecxz
xchg
mov
std
hlt
and
insb
in
adc
push
lcall
inc
sub
pop
xchg
adc
xchg
fwait
inc
sub
sbb
adc
mov
pop
and
pop
stos
jae
out
pop
jmp
fs
cwtl
idivb
out
push
imul
xchg
ds
push
xor
stos
pop
xchg
fdivrs
dec
sbb
out
out
in
jecxz
add
repnz
test
jno
add
mov
and
pop
xor
sub
pop
xchg
push
jle
pop
push
hlt
sbb
data16
aas
jmp
mov
xor
cmp
in
gs
je
and
loopne
iret
push
mov
scas
sbb
dec
mov
sub
jp
sub
out
cmpsb
fsubrs
push
insb
jno
lret
scas
js
in
outsl
aaa
jmp
loop
outsl
out
aaa
jns
cmp
roll
fistl
cmp
cmc
insb
xor
mov
mov
pop
inc
adc
data16
xchg
pop
mov
cli
jo
fsubs
cmp
inc
sbb
out
inc
pop
pushl
imul
repz
and
movsb
jae
dec
xor
add
sub
mov
mov
insl
mov
and
loopne
mov
sub
and
out
jno
popl
add
push
push
cmp
cmp
push
pop
mov
lahf
lock
push
das
imul
add
jp
fdivr
inc
add
imul
sub
mov
inc
mov
ret
push
fcmovnbe
movsb
in
movsl
test
jo
push
adc
add
mov
bound
cmpb
and
rep
jl
add
add
ss
mov
cmp
mov
movsb
and
fnsave
jl
ss
jle
movsl
dec
or
pop
fs
icebp
cltd
imul
lock
subb
ja
insb
sbb
pop
pop
sbb
push
mov
sbb
pop
mov
movsb
into
jp
pop
jae
and
aaa
sub
sbb
pop
icebp
or
and
les
jecxz
movsl
pop
push
test
mov
inc
aam
and
mov
inc
xchg
push
inc
lret
andl
push
mull
sbb
adc
push
fsubrl
and
cmpb
decb
inc
repnz
cld
shll
xchg
and
jbe
movsb
shrb
fs
fcmovnb
ja
mov
rorl
pop
dec
mov
xlat
hlt
je
xor
insb
xchg
ljmp
mov
out
push
stos
push
and
scas
inc
clc
push
push
jp
cltd
xor
inc
add
flds
rorb
je
or
add
aad
loop
mov
hlt
push
mov
fs
mov
dec
arpl
add
adc
xor
push
loopne
and
rorb
xchg
cmovb
xor
xchg
pop
dec
bound
adc
xchg
test
repz
push
inc
in
inc
jb
add
pop
scas
insb
lock
jge
outsb
and
mov
aas
mov
sbb
inc
jnp
cmp
dec
cmpsl
dec
gs
mov
sub
sarb
lods
pop
jmp
jbe
icebp
cmp
fnsave
xchg
or
mov
insl
push
lret
xchg
add
jbe
cmpsb
push
test
insl
out
pop
and
pop
add
mov
jae
cmc
sbb
or
scas
xchg
adc
xor
stos
iret
fistl
mov
ret
sub
inc
mov
sub
rcrl
andb
imul
orl
xchg
rclb
outsb
idivb
sarl
sub
das
add
jnp
pushf
push
push
sub
push
push
test
push
push
mov
movsb
repz
shll
and
leave
and
ja
mov
xchg
loope
xchg
and
mov
pusha
and
dec
sbb
cli
xchg
jp
jge
jae
cmp
inc
mov
je
mov
out
jae
jle
xchg
dec
xchg
push
xchg
cmpsl
xorb
insb
addr16
ror
pop
dec
mov
lods
fnstcw
test
lret
fwait
insb
cmp
fwait
add
int
movsb
mov
out
fsubl
mov
add
push
dec
mov
loop
gs
jno
sub
popa
pop
dec
shrl
ds
lcall
inc
inc
jle
lods
or
sbb
sub
push
adc
xlat
jl
or
fmull
jb
aad
jbe
cltd
mov
pop
push
push
decb
shll
out
shll
xchg
int
mov
cmp
pop
mov
jmp
jp
in
inc
dec
nop
call
inc
dec
sub
aam
xchg
repz
in
jmp
mov
ss
mul
nop
inc
mov
mov
lock
sbb
xor
sub
cmpsl
out
xchg
xchg
into
popf
sub
imul
mov
push
add
in
scas
xor
fadd
sub
xor
mov
test
ret
xchg
daa
pop
test
mov
mov
lods
fistpl
daa
movsl
sub
pop
mov
cmp
inc
fbld
adc
or
insl
cmp
cmpsb
cmp
or
mov
shll
shrl
xchg
xchg
xor
dec
test
sti
into
sub
int3
std
push
pop
jg
mov
pop
cmp
xchg
mov
push
push
mov
fidivs
inc
clc
and
xor
sbb
out
pop
jns
mov
int3
sti
sub
adc
mov
dec
out
ret
dec
lds
pop
movsb
cmp
dec
sbb
inc
fsubrl
popf
jb
dec
and
sub
xor
sub
and
int3
imul
ja
push
lret
and
pop
cmp
out
cli
mov
inc
push
rol
aam
out
fwait
gs
dec
sti
push
test
add
add
mov
jg
test
out
xorb
loopne
and
add
cmc
add
add
cmp
and
into
or
insb
cmp
jg
mov
and
jle
mov
inc
dec
cs
fcmovu
aad
cwtl
and
mov
xchg
fsub
or
mov
jmp
adc
out
rolb
push
or
xchg
popf
fisttpll
adc
in
or
stc
push
ret
imul
add
mov
sti
pop
and
mov
adc
cmp
loopne
jne
fstpl
pop
loop
jl
fistpl
push
mov
fisttps
cmp
push
pusha
pop
sahf
jp
xchg
jnp
out
add
inc
rol
pop
cmp
mov
in
or
idivl
iret
rolb
movsl
fldt
mov
fldenv
mov
pop
mov
and
fstps
adc
pop
rolb
test
push
insl
dec
mov
push
movsb
psubw
and
sub
mov
bswap
aas
xchg
mov
pop
jnp
and
pop
nop
dec
jne
jl
mov
dec
and
sahf
jl
xchg
int3
push
xlat
jns
out
fs
pop
xor
mov
sub
aas
sub
fidivl
dec
adc
hlt
push
cmp
cmpsl
mov
xchg
mov
ds
hlt
push
push
rolb
bound
or
test
pop
imul
sahf
leave
or
cli
sarl
mov
insb
inc
jns
cmpsl
outsl
and
push
and
lock
ds
push
sti
ds
popa
js
out
clc
and
and
push
xchg
push
jbe
sub
lret
ret
pusha
ds
bound
add
and
cmp
insl
pop
fs
mov
mov
fdivs
out
lahf
mov
or
adc
stos
enter
jo
dec
push
xchg
pop
fdivrl
jge
call
bound
mov
add
adc
mov
sub
dec
jp
insl
xchg
scas
xor
add
movsl
jp
xor
cmpsl
mov
mov
ret
mov
add
lods
enter
dec
mov
fs
mov
inc
jl
loopne
lds
inc
xor
adc
mov
aas
mov
xchg
loop
adc
call
pop
jge
xchg
imul
add
jo
dec
adc
push
sbb
add
jecxz
out
lret
cmp
or
outsl
and
stos
xchg
jo
jb
pop
sti
ret
rolb
cmp
fisubrl
xchg
lret
push
dec
or
cmc
jmp
fistl
pop
aam
push
push
shlb
fidivrs
jl
shlb
sub
pop
inc
lock
test
mov
sahf
aas
mov
pop
push
lock
mov
leave
xchg
adc
push
jns
mov
rolb
std
mov
xor
dec
decl
pop
jge
jge
loop
cmp
repz
xchg
xchg
mov
jns
es
push
ret
pop
std
out
add
dec
stc
and
pop
ja
stos
dec
dec
adc
sub
lods
sub
sbb
insl
lea
xchg
inc
movsb
test
fcom
sub
mov
vpaddd
scas
xor
aas
xchg
mov
pop
xchg
ds
jnp
inc
out
and
mov
inc
mov
mov
xchg
xchg
jecxz
mov
xor
add
je
mull
out
adc
adc
add
xchg
leave
adc
test
pop
out
ljmp
xor
add
add
xchg
add
sub
cmp
inc
push
loop
stos
fstps
add
int
push
in
mov
push
sti
jmp
les
insb
out
cmp
scas
ret
push
data16
pushf
mov
fimuls
test
mov
mov
sti
xor
xchg
insb
push
ja
bound
lcall
inc
push
push
test
add
jp
pushf
and
fs
jl
or
dec
test
insb
inc
inc
mov
movsl
lods
xchg
sahf
jmp
mov
test
cld
jmp
shl
xchg
jo
leave
xchg
sub
mov
inc
jl
adc
pop
les
leave
imul
loope
jo
in
jbe
pusha
ljmp
ret
add
cmp
xchg
or
push
xchg
rolb
arpl
insl
shr
add
add
mulb
repnz
out
inc
in
mov
sbb
add
add
add
sub
jmp
dec
out
mov
repz
enter
cmpsl
test
pop
cmp
jae
mov
lret
jne
sub
and
sahf
inc
das
sti
mov
add
and
cmp
sbb
jmp
pop
cmp
sub
and
xchg
fs
in
mov
push
imul
jecxz
pop
sbb
dec
dec
adc
push
ss
out
arpl
dec
pop
mov
lea
mov
xor
push
cmp
cmpsb
push
scas
imul
xor
negb
jg
outsb
mov
insb
hlt
xor
jle
sbb
leave
scas
push
outsl
sbb
es
sbbb
fcompl
inc
test
mov
cld
sbb
stc
push
insl
pop
rorl
in
out
push
cmp
pushl
dec
push
jge
ret
jge
enter
inc
lods
out
pop
sbb
repz
lcall
mov
loope
js
dec
shrb
xchg
xchg
mov
inc
dec
push
mov
loopne
ja
or
pop
pop
add
or
pop
add
mov
jae
dec
lahf
dec
push
mov
imull
push
ret
pop
sbb
scas
lea
loope
neg
cltd
sbb
mov
push
and
in
ja
mov
jl
ret
and
cmovnp
hlt
inc
mov
push
loopne
mov
cmp
fs
and
push
mov
push
rcrl
imul
stc
fdivrl
leave
mov
imul
jg
or
adc
out
xchg
call
and
call
push
pusha
das
jno,pn
inc
push
xor
insl
cmpl
dec
sbb
out
cmpsb
jle
jp
fwait
lret
or
testb
jecxz
out
call
inc
repnz
ljmp
test
adc
fsub
mov
jo
xchg
mov
jnp
aas
je
jl
mov
or
pop
sub
mov
mov
scas
mov
cwtl
fiadds
outsb
sbb
cwtl
popa
inc
movsl
dec
in
inc
fildll
pop
ror
fldenv
sbbl
cmpsb
ljmp
cmp
test
test
cmp
push
fistps
mov
xlat
das
inc
push
movsl
jb
pop
adc
adc
ss
sub
lret
sub
dec
sbb
sbb
dec
sbb
push
and
lock
mov
arpl
cmc
daa
in
xchg
add
and
enter
pop
xchg
inc
test
aam
pop
jle
aas
xchg
xchg
xchg
pusha
xchg
les
sub
shll
inc
mov
cwtl
addr16
addr16
decb
pusha
cwtl
data16
jne
cld
jnp
bound
cmpsb
call
jl
mov
dec
test
add
push
mov
push
lret
xor
or
ret
int3
mov
xor
fists
or
and
xchg
or
cmp
and
jno
mov
jne
pop
jmp
inc
sub
cltd
ret
xorb
xlat
divl
jecxz
add
jno
sbb
mov
bound
jbe
or
loop
imul
in
inc
das
jo
cmp
inc
pop
xchg
insb
inc
adc
sahf
int3
inc
push
popa
mov
lods
sub
sbb
push
push
sbb
repz
idiv
and
mov
icebp
ret
imul
out
mov
inc
mov
jl
leave
mov
sub
sti
xor
mov
and
in
mov
mov
movsl
and
adc
or
sahf
add
mov
fldcw
std
xchg
inc
out
dec
test
fidivrs
jnp
insl
lcall
jl
inc
mov
movsl
hlt
in
jo
jno
cld
push
pop
jge
dec
push
inc
mov
mov
xor
in
popa
dec
scas
int3
fs
jnp
sbb
inc
mov
mov
sbb
les
cmp
mov
inc
sbb
lea
add
lds
xchg
push
in
or
aaa
stos
mov
mov
push
stos
mov
pop
sub
dec
fimull
push
sub
jl
fucomi
dec
dec
div
aaa
repz
cwtl
fwait
sarb
in
mov
mov
nop
push
cmp
jge
into
xor
mov
mov
mov
inc
scas
clc
inc
hlt
mov
sti
mov
repnz
add
mov
mov
add
orb
add
cmc
add
add
imul
fadd
mov
mov
add
xor
mov
decb
mov
std
sarl
xchg
push
shll
pop
mov
mov
jbe
rol
fs
std
popa
lret
jno
data16
data16
nop
mov
push
dec
mov
sub
push
push
stc
jb
mov
fisttpl
mov
je
iret
sbb
repz
pop
loope
mov
inc
lret
and
cmp
sbb
push
bound
xchg
inc
dec
lds
pop
test
xor
cs
fisttpl
cmp
stc
loope
rcll
mov
out
cwtl
arpl
jae
in
popl
xchg
aam
mov
adc
or
shlb
addr16
and
mov
lds
js
mov
mov
ret
arpl
push
and
sbb
jb
sbb
jle
into
clc
mov
lea
les
cmc
sti
xchg
mov
jl
dec
xchg
mov
aam
ja
xchg
jne
xchg
fdivrs
ja
adc
push
xchg
cltd
xor
int3
cmpsb
insl
sarb
add
inc
adc
inc
pop
data16
decb
mov
rorl
pop
mov
mov
insl
push
repnz
pop
sub
imull
inc
jae
dec
fdiv
xchg
mov
ljmp
pushf
push
dec
rorb
add
aad
int3
mov
add
inc
xchg
push
flds
xor
loope
push
sub
scas
sub
pop
mov
out
mov
rorb
mov
mov
inc
nop
dec
loop
or
sbb
cwtl
sarl
push
pop
xchg
and
xchg
je
mov
out
add
sbb
ss
testl
int3
push
stos
jl
out
cmp
dec
stos
imul
mov
in
push
lods
xor
mov
int
or
sahf
or
or
adc
xchg
movsl
jno
lods
lcall
iret
stos
out
or
cld
inc
aas
mov
aam
push
push
repz
lahf
in
aad
mov
loop
sub
out
xchg
sub
stc
or
mov
mov
es
pusha
pop
pop
push
add
test
and
scas
icebp
push
fmuls
jl
jecxz
inc
and
add
add
in
xor
lods
cli
mov
enter
adc
mov
mov
imull
push
in
push
inc
pop
in
sbb
xor
fisttpl
ljmp
loop
mov
aaa
sbb
dec
outsl
jle
stos
scas
andb
stos
int
daa
jb
dec
insl
xor
arpl
xor
out
aaa
int
mov
mul
sti
cmp
repnz
cs
in
xchg
mov
adc
jnp
orl
jns
loope
popa
lret
pop
dec
lea
push
mov
adc
loop
push
insb
pop
inc
hlt
sarb
loop
add
mov
pop
popf
inc
add
cmp
insb
subb
sub
out
imul
imulb
jmp
jge
ror
sbb
enter
stos
stc
sub
or
pop
arpl
divl
adc
outsl
fwait
pop
js
lock
adc
pop
add
iret
jns
cmc
insb
fucomi
dec
notb
cwtl
mov
mov
iret
xchg
loope
inc
fcoms
les
pop
bnd
iret
or
lahf
outsb
jnp
mov
mov
arpl
lret
call
mov
movsb
jmp
pop
dec
xor
popf
jecxz
pushf
sbbb
repz
xchg
movsl
cmpsb
sub
add
cld
lahf
and
das
in
sub
out
dec
lahf
repnz
xchg
cmpsl
and
arpl
jbe
aam
mov
xchg
push
shrl
sub
lcall
cs
ret
sbb
rcl
ss
inc
and
inc
jb
xor
cmpsl
sbb
xchg
push
outsl
dec
adc
mov
cltd
inc
repnz
or
sahf
aam
insb
or
scas
pop
std
insl
push
lcall
sarl
pop
jmp
push
mov
push
add
mov
mov
ficoms
pop
xchg
adc
ljmp
inc
es
fwait
push
js
loope
sbbl
mov
mov
xlat
push
scas
cs
mov
aas
mov
dec
bound
or
sub
and
pop
push
cmp
ffree
or
and
gs
cli
lahf
mov
std
mov
pusha
mov
xchg
test
push
mov
and
sbb
jge
add
add
add
or
fsubp
ret
push
cmp
out
inc
xchg
lods
pop
pusha
mov
cs
mov
cmp
push
call
xchg
loope
adc
xor
popf
or
popa
dec
cs
mov
inc
mov
add
jmp
sbb
int3
dec
push
sti
into
aas
jecxz
cli
add
subl
sbb
and
add
and
pop
cwtl
push
jecxz
mov
data16
ss
mov
in
in
fs
in
add
fidivrl
pop
ds
lret
jmp
jl
and
dec
cltd
xor
cwtl
sbb
push
pop
sarl
jb
xchg
lds
or
mov
jbe
incb
add
in
inc
jl
bound
push
inc
xchg
loope
shr
xlat
rorb
lahf
sbb
jg
pop
push
lahf
add
inc
ret
imull
sub
pop
dec
inc
outsl
adc
out
xor
mov
cltd
addr16
es
xchg
repz
negb
int3
push
sub
rorb
lss
push
leave
adc
mov
rclb
xchg
cmp
pop
sbbl
push
push
mov
cmp
aad
xlat
dec
push
int3
lods
lahf
out
xchg
test
inc
cs
fistpll
rcl
stos
cs
loopne
ret
fnsave
sub
daa
aas
cwtl
mov
loopne
inc
mov
adc
xlat
mov
cmc
loope
mov
imul
cli
sbb
jbe
shl
inc
cmpb
lds
icebp
jno
or
hlt
fstp
pop
cmp
xchg
mov
shrl
add
test
xor
jb
roll
lock
test
cmc
xor
xchg
jp
add
pushf
cwtl
es
rorb
sbb
or
test
fimuls
cmp
repz
stos
lahf
ja
xchg
mov
xchg
sbb
add
push
cwtl
xor
pop
mov
adc
push
xor
pop
mov
std
jae
jge
xchg
iret
mov
add
and
push
aaa
cwtl
xor
je
mov
push
aaa
scas
aam
add
jne
push
movsb
iret
lds
addr16
fdivl
or
lahf
mov
and
xor
add
pop
hlt
test
lods
mov
jbe,pt
cmp
pop
mov
jl
mov
push
in
in
jl
insb
jnp
clc
push
add
loope
jmp
jbe
ss
ljmp
nop
xchg
mov
pop
jb
jmp
fldt
rcll
sbb
sub
popf
jmp
mov
in
mov
xorb
pusha
and
lods
clc
mov
into
xchg
add
sub
lods
adc
xchg
pop
cmp
test
or
mov
and
sbb
sub
sub
sbb
int3
jmp
cmp
pop
in
pop
rorl
pusha
int
call
adc
nop
ja
lods
cmp
adc
outsb
mov
hlt
and
cwtl
sbb
rcrl
stos
mov
lock
sub
lret
dec
jb
push
sti
push
and
enter
push
push
mov
out
mov
in
int
pop
and
dec
sbb
lret
cmc
ficoms
imul
xchg
mov
inc
push
jns
mov
add
dec
xor
stc
sub
loope
cmp
test
popa
mov
jo
test
adc
dec
loopne
sbb
xchg
inc
stos
mov
das
pop
jno
stos
test
jmp
cli
das
push
test
iret
jb
mov
scas
mov
fdivs
cmpsl
imull
mov
adc
jge
ja
mov
sbb
push
movsl
out
pop
pop
hlt
xchg
in
mov
aas
lcall
cmp
sub
push
test
xorb
xor
adc
das
outsl
bound
out
imul
cmp
das
add
pop
mov
pop
push
xor
lret
push
jle
je
mov
inc
push
mov
or
mov
fnstenv
ror
cltd
cli
lods
cmp
jl
mov
sub
shlb
pop
stos
adc
pop
dec
and
jl
push
sub
inc
popf
pop
add
adc
cmp
fsubr
test
sbb
xor
mov
movsl
cmc
int
sub
adc
pop
pop
in
sub
jns
jmp
out
les
mov
pop
fldl
inc
sti
aas
jb
add
mov
xor
add
add
add
inc
pusha
je
sahf
ror
mull
mov
jbe
out
out
mov
aam
ljmp
mov
test
popa
push
xor
or
test
loopne
pushf
mov
icebp
pop
lock
dec
pop
mov
pushf
pop
roll
mov
xchg
dec
xor
xchg
jnp
iret
out
test
dec
sarb
adc
or
push
push
sub
dec
dec
int
stos
push
and
divb
push
jns
adc
mov
jle
mov
xchg
scas
or
adc
mov
aaa
jl
jg
sti
sub
jle
jmp
shr
popf
ja
imul
cmpsb
add
pushf
push
out
shlb
lds
cld
push
hlt
pop
cmpl
or
in
test
movsb
pop
pop
add
pop
mov
dec
xchg
or
fs
jnp
and
bound
pusha
call
lea
xor
test
mov
fwait
dec
fwait
nop
in
cmpsl
ret
lock
loopne
aas
movsl
lret
xor
bound
xchg
xchg
lea
mov
add
cmp
xor
adc
popa
or
mov
lahf
xchg
add
mov
jge
sbb
sbb
dec
mov
cmpsl
sbb
lea
test
stos
lods
in
push
jge
pushf
lds
repnz
or
pop
stos
or
push
cwtd
pusha
push
loope
sti
insl
dec
inc
push
xchg
push
pop
fs
out
arpl
sbb
shll
cmp
arpl
rcll
test
pop
sbb
mov
sbb
adc
adc
in
rcrb
and
iret
loop
xor
xchg
mov
dec
jne
cmpb
dec
pop
jo
xor
pop
xchg
out
fdivs
fsubrl
xchg
mov
inc
pop
pop
aam
mov
out
push
roll
cmp
stos
js
push
jle
in
insl
adc
cmp
adc
mov
pop
icebp
cmp
fstl
mov
cli
mov
xchg
sahf
push
jno,pt
scas
nop
outsb
and
popf
mov
in
fdivrs
jae
xchg
out
xor
adc
das
bound
dec
add
xor
sbb
push
sbb
test
mov
outsb
pop
push
adc
cmpsb
sbb
neg
mov
jb
pop
add
lock
push
hlt
sbbb
test
lret
inc
pop
movsl
int
cmp
pushf
lahf
inc
aaa
sar
in
lea
mov
stc
and
push
stc
fmulp
popa
aas
ja
imul
or
pushf
leave
adc
push
nop
mov
cmp
jmp
sbb
fidivl
xchg
fs
mov
lds
mov
shlb
movsl
push
cld
dec
adc
insb
add
inc
lods
xchg
and
cmpsb
test
dec
push
fidivs
mov
add
and
cmp
cmp
pop
testb
insl
out
jg
xchg
leave
xor
cld
fs
xchg
xchg
cmp
mov
sbb
dec
xchg
xchg
imul
xchg
cmp
lock
cli
subl
pop
mov
fwait
mov
xor
pop
idiv
add
jbe
cwtl
divb
lds
ss
into
and
dec
fidivs
mov
mov
test
add
icebp
in
in
and
jnp
jns
cwtl
pop
ss
mov
mov
adc
jge
divb
add
sub
mov
fstl
into
dec
out
jge
jo
mov
cltd
ja
aam
mov
push
out
adc
jae
mov
cmp
mov
xchg
arpl
outsb
mov
jge
sti
inc
lret
fisubrs
outsb
inc
sub
jg
in
insb
lods
push
or
iret
inc
sahf
pop
loop
mov
fistps
dec
pop
mov
or
and
rcll
xchg
add
pop
or
repz
push
outsl
das
enter
cmp
inc
test
cs
or
lods
cli
out
adc
and
mov
repnz
push
xor
inc
dec
or
inc
addr16
sahf
arpl
xor
sub
jecxz
inc
gs
rorl
fs
jns
mov
mov
dec
adc
push
and
inc
mov
out
cld
fmuls
or
dec
push
rclb
add
cmc
xchg
or
aaa
xchg
mov
lds
stc
xor
sub
dec
mov
flds
add
add
mov
or
shl
xchg
add
add
add
int
adc
dec
jg
out
and
insb
mov
out
scas
mov
insb
jp
aas
mov
addb
mov
and
call
scas
mov
xchg
mov
ss
sub
cs
jecxz
push
rep
inc
insl
popf
dec
insl
inc
divb
sahf
jns
lods
test
xchg
jae
xchg
stc
stos
js
fnstcw
jns
or
mov
mov
stos
fstl
cmp
les
cmpsb
jmp
dec
mov
push
push
adc
mov
jb
loop
dec
imull
dec
xchg
notl
lock
mov
dec
mov
iret
lahf
dec
inc
add
roll
xchg
out
in
pop
lcall
test
aad
jmp
iret
sbb
arpl
pop
je
adc
adc
push
jnp
in
shll
jae
lcall
js
push
push
out
pop
cmp
mov
movsb
pusha
mov
leave
mov
fimull
arpl
push
xchg
and
mov
sarb
pop
mov
jmp
inc
mov
adc
jae
jnp
out
bound
outsl
pavgb
mov
sbb
dec
push
sub
aaa
rcr
push
sbb
shrl
pop
push
pushf
sbb
mov
outsl
inc
mov
mov
hlt
insl
inc
cmp
jb
into
push
push
popa
dec
aas
sets
out
inc
icebp
cltd
and
jp
popa
push
and
pusha
inc
ret
outsb
loop
dec
scas
rolb
jg
test
jp
push
push
mov
xchg
icebp
add
sti
jmp
mov
sti
and
stc
or
test
fistl
aad
push
lds
or
cmc
xor
or
test
fcoms
ja
jbe
lds
mov
icebp
or
adc
cmc
or
or
out
push
test
cmp
ljmp
xrelease
adc
mov
cmp
push
mov
and
test
inc
mov
je
roll
inc
jno
bound
dec
enter
shrb
aam
push
cmp
in
xor
lcall
adc
mulb
les
cmpsb
inc
scas
and
add
int3
xchg
or
mov
inc
add
roll
and
mov
dec
push
add
jne
jg
mov
loopne
lret
into
mov
aaa
pop
dec
bswap
ret
mul
or
arpl
lods
sbb
inc
pop
enter
cmpsb
lock
or
mov
imul
or
cld
xor
cltd
adc
shll
add
mov
hlt
add
sub
mov
lds
and
repz
mov
xchg
and
movsb
pop
mov
inc
lds
pop
cmp
cmp
push
cld
jmp
outsl
mov
ficoms
daa
adc
add
fisubrs
in
mov
fidivl
pop
loop
lahf
ret
xchg
mov
lock
mov
aas
mov
repnz
pop
lock
add
fsubr
das
paddsb
adc
data16
lcall
out
test
xchg
lcall
lret
cltd
push
cmp
ss
pop
xchg
xchg
sbb
scas
cltd
mov
adc
mov
sub
mov
mov
mov
int3
cli
test
lea
hlt
xor
je
or
data16
add
mov
mov
lea
sub
dec
pop
mov
imul
aaa
outsl
xchg
mov
lds
push
out
xchg
les
add
mov
dec
lret
mov
jmp
cmp
and
repnz
shr
call
pusha
mov
cmpsl
es
outsb
cwtl
fldcw
jl
xchg
pop
mulb
sarb
xchg
fwait
mov
insl
fcmovnbe
adc
movsl
jl
xchg
adc
stos
lock
es
xor
xlat
xlat
dec
add
xchg
js
inc
jmp
inc
popf
mov
cs
lahf
iret
jg
mov
xor
jl
les
shrb
test
mov
outsb
stc
mov
std
sub
sbb
mov
jns
int3
xor
jnp
pop
stc
and
sub
jp
cmpsb
aaa
aas
scas
pop
bound
pop
mov
dec
and
mov
sahf
jg
push
adc
mov
cli
shll
xchg
loopne
cli
lods
xchg
cmp
pop
loope
mov
mov
mov
mov
lret
fsubrp
mov
jbe
push
add
iret
adc
pop
mov
cmp
push
incb
add
cmc
add
add
inc
fld
cmp
cmp
jo
add
in
and
xchg
frstor
jns
or
inc
jecxz
bound
cld
ret
add
fwait
ret
mov
loop
gs
jecxz
xchg
testb
jo
sbb
or
jecxz
hlt
pop
cwtl
les
into
cmp
pushf
sub
cltd
outsl
int3
sub
mov
inc
mov
jp
movsb
xor
mov
adc
ret
pop
jae
push
inc
aaa
jmp
into
push
enter
cmpl
repz
cli
jmp
imul
testb
imul
jmp
test
aad
cmp
ficompl
pop
cwtl
bound
xchg
xchg
fmull
addb
sub
stos
iret
mov
sbb
sub
adc
incb
rcrl
cmp
sub
add
loopne
pop
movsb
push
mov
cmc
pop
mov
ds
inc
cmpsb
aam
xchg
push
test
push
add
lea
push
mov
lds
jnp
jo
adc
lds
fisubrl
jp
scas
int
mov
jbe
out
or
pop
aad
stc
ja
fiaddl
jg
test
dec
lea
movsl
lcall
cs
mov
push
inc
add
imul
or
xor
inc
push
inc
mov
in
cmpsb
mov
insb
pop
xchg
stos
dec
mov
add
add
outsb
push
mov
ja
mov
mov
out
jns
mov
mov
sti
mov
mov
dec
insl
sub
push
or
cmpsl
sub
fcoms
loop
loopne
bound
sub
rclb
push
push
pop
push
push
push
stos
test
jg
lret
cmc
push
cmp
xor
lret
pop
lahf
jae
mov
imul
std
in
or
cltd
sti
jge
xabort
pop
mov
sahf
sub
rcll
mov
pop
dec
shr
out
mov
rcrl
sarl
sbbb
enter
sub
cld
push
sub
xor
inc
jecxz
movsb
push
mov
rclb
movb
sarl
inc
movsb
ljmp
sbb
mov
int
sub
or
push
vzeroall
shrb
ficoms
pop
into
pop
jo
jns
or
mov
inc
sbb
push
pop
mov
outsl
lahf
sbb
add
negl
xor
mov
mov
add
adc
jne
fdivr
test
aaa
mov
lods
cmp
mov
sub
sub
fcoms
rcrl
addr16
es
ficomps
dec
mov
into
jo
push
mov
and
scas
dec
adc
imul
pop
ss
cmp
sub
jo
mov
pop
xchg
lret
cmp
xorb
add
mov
popf
insb
adc
pop
roll
push
sub
into
jmp
std
mov
daa
loope
lcall
repnz
stos
fdivl
rcrb
das
scas
xchg
ficompl
test
int
in
pop
adc
into
leave
nop
addr16
test
mov
lock
ljmp
inc
jmp
repz
or
dec
fwait
adc
orl
out
cmp
lret
insl
xor
inc
mov
bound
notl
adc
jg
mov
adc
out
neg
dec
lea
subb
xchg
repz
dec
push
shrl
insl
ret
into
scas
icebp
and
je
jo
movsl
inc
ret
cs
jnp
mov
fisubrs
jbe
nop
loope
sbbl
sbb
push
ror
sub
pop
inc
cld
lret
das
jg
js
dec
pop
sub
cmpl
inc
subl
mov
subl
fidivs
popa
call
fistl
push
shl
ror
push
fnstsw
inc
dec
inc
cmp
shlb
aas
mov
sahf
sarl
mov
mov
aaa
pop
or
and
sub
cmp
bound
das
cmp
mov
dec
mov
clc
rcll
or
insb
sub
cmpsl
cld
sub
lahf
fwait
jmp
xchg
out
movsl
jns
xchg
enter
jnp
divb
and
or
jg
call
mov
popa
pusha
sbb
adc
xchg
and
add
sti
and
es
sti
std
sbb
adc
iret
xlat
nop
add
cmc
add
add
leave
cmp
cmp
lcall
popa
nop
push
push
jb
lcall
inc
stc
adc
inc
hlt
out
popf
cmc
movsb
lret
push
scas
nop
push
pop
rolb
out
xor
call
inc
ja
lcall
cmp
arpl
mov
xchg
sar
inc
bound
sbb
pop
sbb
jmp
lock
jbe
insb
test
push
out
arpl
cmp
enter
lock
into
sbb
mov
xchg
push
ret
mov
push
outsl
mov
mov
add
jp
aaa
xchg
out
lcall
pop
out
sub
sar
fwait
dec
call
lods
inc
pop
neg
inc
add
fldt
mov
outsl
or
sbbb
loope
loopne
add
xchg
xchg
xchg
mov
push
in
mov
jnp
and
pop
add
daa
cmp
and
push
jg
dec
add
push
mov
cmp
mov
cmp
mov
mov
sub
push
sbb
faddp
or
lea
mov
fcompl
and
rorb
or
mov
mov
hlt
pop
xor
testb
stos
leave
out
sbb
fisttpll
dec
cli
outsb
jae
xor
in
mov
pcmpgtw
cmp
add
and
lcall
lea
push
movsl
push
jne
inc
fnstsw
jmp
and
jmp
je
cmpsl
js
sbb
and
xor
push
cmp
or
lret
inc
xchg
push
dec
dec
push
insb
and
inc
or
testb
push
sbb
xor
sub
lret
add
popf
lds
push
popa
cmp
dec
pop
cmp
imul
push
adc
scas
push
xchg
faddl
adc
in
movsl
add
iret
sub
xchg
and
frstor
push
pop
shll
cmp
xor
cmp
scas
dec
rorb
in
mov
cmc
or
mov
pop
push
mov
push
jle
cmc
jo
ss
mov
movsl
sub
pop
sbb
insl
sbb
inc
and
jnp
push
std
pop
dec
xchg
jns,pt
xor
test
mov
push
mov
pop
insl
dec
mov
out
pushf
push
or
lods
jl
push
les
push
and
out
sub
push
mov
mov
push
add
imul
cmp
xchg
pop
out
xchg
jle
or
xchg
pop
ret
adc
mov
icebp
clc
xor
ja
mov
fdivl
ret
lods
xor
pop
out
or
push
push
imul
es
xor
mov
iret
ss
sarl
dec
xor
sbb
add
adc
sub
ss
sub
push
mov
out
xor
icebp
sub
fbld
std
jecxz
mov
push
cs
and
dec
lods
icebp
andb
mov
iret
xchg
int3
mov
dec
sub
add
or
mov
jns
ret
adc
stos
push
mov
mov
repz
ss
pop
pop
mov
iret
call
ficomps
pop
ljmp
xchg
and
mov
sti
mov
pop
jne
fcomp
cmp
ljmp
ss
dec
xor
outsl
xchg
adc
mov
mov
jl
enter
ljmp
pop
add
xor
je
stos
aas
aas
ficompl
mov
and
mov
sbb
ljmp
cmp
mov
inc
mov
stos
addl
in
push
arpl
fiadds
scas
sub
and
aam
stos
lahf
movsb
ror
popa
fldt
aad
sbb
mov
rcrb
clc
lea
dec
mov
inc
fdivr
inc
ss
sbb
nop
ficoms
fmuls
sub
out
sbb
popw
lret
mov
xchg
repz
cmp
imul
pop
jne
cmpsl
ss
fcoms
xlat
movsb
orl
aad
or
out
mov
cmp
dec
ret
out
jne
cmp
mov
inc
cmpsb
mov
pop
mov
xor
and
scas
jge
sbb
mov
inc
into
jle
fisubrl
add
cmp
or
mov
sahf
dec
cmpsb
xor
adc
inc
sub
mov
int
pop
jge
jb
xchg
rclb
inc
cwtl
mov
add
jmp
inc
les
out
hlt
mov
adc
mov
add
add
mov
jg
lcall
or
xchg
add
cmc
add
add
jge
jno
popa
ret
pop
fdiv
lods
adc
pushf
ret
mov
les
xor
mov
int
mov
sbb
xor
jmp
xchg
lds
cld
lret
jle
rclb
sub
xor
or
xor
ret
xor
aas
mov
xor
inc
lea
fs
neg
int
mov
inc
dec
inc
in
out
and
inc
dec
outsl
pop
mov
fidivl
mov
sarl
inc
into
fdivl
icebp
shrb
ficoml
enter
jae
mov
push
in
das
sub
das
pop
outsl
or
dec
fs
mov
jbe
mov
pop
xor
cwtl
inc
scas
int3
pusha
mov
inc
adc
js
fsubrl
xor
and
rorl
jne
rcrl
fsubl
mov
test
xchg
cmp
xchg
es
mov
mov
jno
mov
fimuls
ret
movsb
sbb
add
push
in
stos
inc
cmp
in
pop
mov
in
inc
xchg
outsl
js
or
jge
in
mov
pop
inc
mov
idivl
in
adc
mov
ficompl
mov
insl
imul
jae
mov
pop
ret
cmp
mov
test
ljmp
ret
cwtl
push
lahf
xchg
int
cmp
sub
inc
and
testb
push
orb
das
xchg
into
xchg
cmp
movsl
outsb
add
adc
in
jmp
stos
pop
pop
out
scas
adc
imul
mov
fstpt
outsl
push
lds
pop
daa
test
sub
subb
fnstenv
test
sbb
call
mov
mov
pop
es
push
ds
adc
push
add
popa
ret
paddw
outsb
aas
mov
push
je
xchg
test
inc
add
insb
daa
jecxz
mov
push
or
int
fucomp
xchg
mov
aaa
fcmovnbe
adc
in
adcl
mov
mov
in
mov
lcall
push
mov
add
jge
fs
inc
or
jo
xor
sahf
mov
std
mov
adc
fbld
ss
xor
mov
push
cmp
xor
dec
cwtl
dec
ja
ret
or
scas
sub
stos
xchg
test
fyl2x
inc
sti
mov
jb
jp
mov
xlat
add
sub
ss
mov
sbb
mov
dec
mov
scas
dec
pop
xor
cld
stc
pop
shl
mov
or
sub
pop
xchg
mov
xor
roll
push
enter
test
fdivrl
jle
je
pop
mov
and
dec
aad
repnz
xchg
data16
xor
shll
xchg
add
sbb
jge
cmc
dec
or
and
add
pop
addr16
fs
mov
pop
or
xchg
cmp
push
ret
jge
movb
stc
pop
flds
mov
sbb
and
daa
mov
insl
mov
dec
jns
aaa
sahf
push
out
cmp
dec
jp
sub
fldl
into
push
mov
inc
out
dec
cmpsb
cwtl
movsl
adc
jo
rcrb
stc
adc
dec
sarb
aad
jmp
clc
cmpsb
in
push
adc
and
mov
call
or
cltd
loop
push
stos
pusha
in
rol
inc
pushf
jb
xlat
xor
jb
adc
scas
pop
dec
pop
data16
and
lcall
in
je
fcoms
addl
mov
xlat
popa
std
in
push
add
out
sbb
and
mov
mov
or
add
or
sub
inc
into
xchg
mov
pop
and
dec
repnz
inc
das
aas
int3
or
sub
insl
movlps
jp
mov
jo
movsl
sbb
sbb
add
push
loop
out
lahf
adc
mov
add
aad
jmp
rclb
xor
push
sub
fstpl
jmp
es
sbb
xchg
cmp
outsb
sahf
hlt
lcall
mov
jle
lea
add
jl
adc
outsl
jae
xor
and
jmp
inc
inc
notl
push
xchg
mov
jl
jp
lea
cltd
mov
nop
sbbb
testl
ror
rol
push
test
adc
push
cmpsl
sbb
cld
inc
bt
inc
push
sti
add
stc
pop
sub
stos
jns
dec
sub
imul
rcrl
add
loop
lret
insb
push
pop
cmc
clc
lods
out
test
and
mov
jno
and
cmp
inc
cmp
clc
cmp
push
xchg
lods
icebp
push
push
mov
les
loop
stc
fisubs
dec
pop
insb
incl
add
jae
repz
add
popf
mov
mov
leave
popl
fcmovbe
push
sub
jo
jg
dec
movsl
xlat
aad
stos
mov
ret
test
aas
push
mov
adc
adc
stos
sbb
add
into
movsb
outsl
push
cmp
and
insl
sub
xor
shll
ficompl
sti
mov
jmp
mov
stc
scas
aad
pop
dec
ret
push
and
ljmp
ljmp
xor
cmp
xor
jne
jge
cwtl
inc
imulb
in
gs
adc
add
push
add
xchg
repz
jb
fadd
iret
pop
stos
mov
stos
fcmovne
test
sbb
mov
sbb
not
dec
ret
cs
lret
lcall
xchg
mov
sub
xor
pop
pop
cmpsb
jns
mov
mov
xlat
push
sbb
fcomps
mov
jmp
daa
es
mov
mov
pusha
mov
or
sbb
dec
push
scas
div
mov
add
push
push
fists
xor
les
faddp
lea
test
fdivrs
mov
mov
xchg
repz
xchg
je
push
js
and
jle
jmp
ja
rolb
fnsave
pop
pop
nop
mov
jbe
cld
scas
neg
std
daa
pop
mov
cmp
lock
ret
xchg
cmpsl
cmp
dec
jecxz
data16
test
mov
push
mov
sub
arpl
mov
js
xchg
cwtl
sub
scas
jns
cld
push
mov
push
xchg
xor
mov
mov
cwtl
gs
stc
in
cld
sbb
out
rcll
adc
lret
fldt
cs
ret
fmuls
or
or
mov
push
clc
cmp
loop
mov
jne
pop
xchg
or
and
arpl
lods
jg
je
in
adc
pop
lock
nop
adc
jecxz
add
scas
in
mov
jae
mov
loope
stos
leave
addr16
dec
test
add
ljmp
imul
add
dec
fidivrl
jge
and
lods
jp
jl
pop
in
push
mov
mov
lods
sbb
cmp
in
test
mov
add
add
jo
add
dec
adc
movnti
out
add
push
jecxz
les
les
mov
daa
dec
repnz
dec
test
or
test
not
divl
and
adc
sbb
rcrb
loopne
scas
xchg
aad
mov
jg
mov
cmp
push
fldl
aam
lds
stos
leave
adc
lods
sub
sbb
int3
jnp
xor
std
je
xor
shll
inc
or
sub
mov
lods
xor
insb
mov
sbb
stos
sub
xor
je
sbb
test
fidivl
lahf
dec
lds
call
mov
mov
subl
sbb
int
dec
inc
test
imul
xchg
or
xor
rorl
aas
jbe
iret
cmc
cs
inc
or
dec
fldl
xor
push
and
ss
imul
jae
push
cmp
scas
jmp
or
push
outsb
nop
nop/reserved
cli
jecxz
inc
add
and
inc
sub
cmp
fcomi
xlat
mov
dec
xchg
out
cmp
cs
mov
mov
pop
push
shll
neg
xchg
lods
hlt
test
inc
daa
iret
or
and
int
jnp
mov
jg
adc
dec
xor
lret
xchg
ret
cmp
fiadds
mov
mov
test
sub
dec
jnp
add
cmp
ja
xchg
or
clc
pop
fsubrs
and
and
adc
icebp
jo
cmp
mov
mov
dec
pop
and
or
fs
pop
xchg
loop
push
test
aad
arpl
and
push
aaa
fbstp
add
jnp
ljmp
jns
sub
sub
cmp
adc
dec
jge
xchg
outsl
jge
lcall
add
cmc
add
add
xchg
jg
or
sub
add
mov
int
mov
arpl
std
dec
jg
adc
jecxz
inc
int3
push
xor
push
mov
sarl
lds
jb
lahf
push
pop
push
pushf
ret
mov
pop
outsb
int3
xchg
xchg
aaa
pop
imull
mov
mov
add
outsl
es
adc
ja
lcall
inc
cmp
xchg
pop
cltd
sbb
pop
iret
jg
cmp
stos
xchg
mov
push
xchg
xchg
xor
pop
cmp
std
mov
popa
dec
mov
sub
mov
sub
das
sbb
xor
dec
dec
pop
mov
cmp
int3
aam
dec
dec
mov
aad
push
push
add
and
xchg
cltd
cltd
dec
push
insl
push
xor
and
in
add
dec
mov
ror
jp
cmp
jp
and
ljmp
pop
cmpsl
aas
outsl
rcll
fisubrs
shl
inc
call
test
lret
lcall
and
sti
pop
leave
movsb
scas
sarl
mov
xchg
aad
out
fistpll
icebp
in
push
xchg
repnz
push
repnz
clc
lcall
dec
add
pop
mov
inc
xor
inc
outsl
mov
dec
movsb
lcall
mov
add
lods
jp
leave
movsb
mov
test
in
sbb
or
fs
cltd
push
out
mov
mov
mov
mov
outsb
dec
in
dec
push
xlat
mov
mov
fucom
clc
out
aas
jmp
iret
rclb
push
pop
dec
pand
sbb
mov
leave
dec
jecxz
inc
xchg
rcll
push
mov
loop
pop
mov
xchg
pop
mov
push
fwait
shr
sub
sub
jmp
inc
rorb
es
and
lret
shrl
es
les
or
icebp
xor
xchg
icebp
sti
mov
or
jbe
aaa
pop
dec
lods
xchg
inc
mov
push
arpl
cld
adc
mov
mov
cmpb
cmp
or
inc
mov
xor
test
clc
xlat
mov
xchg
jl
push
lods
inc
stos
pop
dec
insl
inc
adc
call
sub
imul
add
mov
fcmovnbe
movsb
test
pop
aad
lock
cmpb
into
inc
xchg
or
jnp
imul
cmp
push
mov
pop
and
notb
mov
inc
mov
cs
mov
jp
popa
rolb
cmpl
dec
xor
xchg
das
mov
or
sub
loop
pop
sbb
fwait
std
into
aaa
pop
test
xchg
or
add
cltd
lods
rcrl
arpl
xor
mov
xchg
sub
lock
cld
and
add
sti
cmp
ds
push
lds
shl
inc
adc
stos
jb
fwait
or
fwait
pop
push
mov
popa
loopne
shl
jns
jmp
iret
push
inc
dec
aam
mov
sub
add
je
push
mov
test
mov
xchg
mov
push
ljmp
shrl
enter
outsb
push
je
add
fimull
push
pop
ret
mov
test
mov
jmp
pop
je
mov
fs
push
lret
lret
incl
lcall
hlt
loope
adc
pop
or
loope
addr16
or
rorb
es
xchg
sbb
ljmp
stos
jl
cmc
mov
xchg
xor
lret
cmp
aam
ffreep
push
sbb
pop
sub
test
jp
pop
cmpsl
inc
arpl
outsb
mov
jo
sub
or
inc
pop
cmpsb
sub
addr16
testl
xchg
roll
shlb
rcll
andl
inc
dec
aaa
out
loop
push
mov
xor
bound
aas
outsb
xlat
js
in
and
push
dec
popa
mov
jmp
lods
fcomi
or
pop
clc
push
fcmove
iret
test
cmpsl
int3
rolb
mov
xorb
test
negb
lock
cmpsb
into
iret
jno
mov
mov
outsl
mov
and
imull
or
add
ret
mov
sub
xchg
add
add
hlt
push
ljmp
sub
cmp
stos
movsb
add
cmc
add
add
mov
xorb
inc
ret
mov
or
push
insb
aaa
aad
jb
inc
idivl
test
push
xchg
in
and
lcall
push
out
in
push
jb
lock
popf
adc
in
and
xor
ret
adc
push
xchg
or
std
movsl
add
movsb
or
sub
mov
cmp
in
popa
sub
add
xchg
jo
push
add
test
inc
dec
jb
popa
into
xor
sbb
and
scas
push
imul
sbb
push
pop
fcompl
dec
cmpsb
lcall
or
cwtl
mov
out
jns
imul
ja
outsl
lret
lcall
pop
xor
jae
mov
movsl
xor
fiaddl
fisubl
repnz
ss
cli
ds
lahf
hlt
add
xchg
inc
pushf
js
lock
inc
int
test
xchg
mov
in
pusha
stos
fldl
adc
lret
jecxz
cmc
mov
adc
xchg
test
sub
ret
dec
mov
inc
xor
xlat
mov
mov
add
push
xor
push
mov
jb
mov
xchg
adc
cmp
sbb
xchg
mov
pusha
sar
sarl
mov
push
int
push
fdivs
bound
ret
imul
cmp
add
mov
sar
jecxz
xlat
xchg
lea
aad
jp
mulb
in
pop
push
iret
out
cmpsb
int3
repnz
fsubl
push
arpl
adc
sar
sub
jae
and
adc
aas
jg
pushf
jnp
sbb
loopne
insl
mov
std
cmp
arpl
gs
aam
mov
or
mov
pop
in
ja
out
inc
dec
fists
cltd
dec
addl
lret
out
push
jns
addr16
fstpl
mov
inc
cs
lahf
sbb
add
imul
xchg
xchg
adc
call
push
sub
add
mov
and
adc
stos
fildl
push
pop
imul
inc
loop
mov
out
add
fsubrl
adc
bound
daa
cmp
mov
icebp
sar
aam
es
jno
jo
jmp
scas
sbb
arpl
push
mov
cmpsl
mov
dec
stos
xor
fsubl
cmp
add
loopne
dec
xlat
daa
dec
mov
call
inc
mov
icebp
mov
sbb
mov
and
jb
sub
cmp
mov
mov
imul
dec
lds
test
pop
xor
jb
push
enter
test
pop
arpl
push
mov
mov
cltd
push
scas
mov
loopne
arpl
bound
mov
jle
xchg
jecxz
xchg
aaa
in
test
cmp
popf
cmp
pop
cmp
lods
sarl
jge
and
xchg
cmp
sbb
xor
push
xchg
add
arpl
mov
pusha
repz
ja
jl
sar
or
iret
fwait
lock
inc
push
jnp
aas
or
loope
popa
nop
mov
es
lods
inc
cmp
xchg
loopne
scas
stc
xchg
sbb
xor
sub
push
test
xchg
xor
dec
jbe
push
add
add
mov
jo
out
pop
mov
adc
pushf
hlt
jb
test
push
clc
pop
ret
ljmp
stos
ret
insl
pop
dec
sti
jecxz
mov
sub
scas
pop
inc
xor
popf
out
sti
pop
sbb
mov
cmp
mov
jae
cmp
push
push
movsb
cmp
pop
mov
ret
nop
stos
xchg
sbbb
arpl
mov
cmp
mov
add
xor
mov
dec
shl
mov
sbb
int
notb
clc
sahf
cmp
int3
shlb
inc
lea
jnp
inc
inc
je
inc
in
dec
subb
push
xchg
adc
and
enter
les
aas
popf
cmp
cmpsl
push
mov
adc
ret
subl
xchg
jo
push
add
push
cwtl
std
idivl
shl
jbe
sti
jb
popa
sub
ljmp
lret
sbb
rorb
hlt
insb
call
bound
mov
push
lea
out
cmpsb
jno
dec
pop
add
mov
push
les
es
sti
inc
lcall
rcll
popf
mov
add
dec
cld
cltd
fstl
mov
add
pop
test
aam
lahf
pop
dec
sar
adc
test
add
popf
jle
adc
xor
aas
pop
xor
fld
lock
daa
inc
sub
sub
inc
rcrl
inc
roll
or
jmp
dec
add
fcmovb
jnp
xchg
jbe
bound
xchg
andb
loope
push
fnstsw
mov
and
dec
sbb
addb
adc
adc
lods
cmp
shlb
add
ja
adc
scas
insl
out
mov
xchg
mov
shll
clc
sub
mov
xor
inc
mov
xchg
jmp
nop
sub
decl
jp
push
sub
jae
push
aam
pop
outsl
in
jns
mov
xchg
or
popa
sub
ds
repnz
in
xor
sarb
in
loopne
stc
lods
lock
pop
roll
idivb
sti
jno
mov
add
jl
lret
and
dec
mov
sbb
push
imul
into
xchg
fwait
lahf
mov
ja
in
scas
stos
test
push
pop
popf
ret
scas
push
push
mov
out
or
mov
jne
push
fisubl
out
xor
xor
gs
adc
mov
and
ficomps
push
inc
sti
jge
add
cmp
inc
test
movsl
xchg
pop
das
sub
dec
cmp
push
mov
scas
out
fcompl
std
mov
les
cmpsl
adc
mov
out
push
fisubs
sbb
xchg
cltd
jle
and
dec
lods
iret
adcl
jae
arpl
in
xor
mov
test
fnop
add
dec
cmp
rorb
mov
jmp
sti
mov
inc
dec
out
rclb
bound
fsubl
xchg
dec
push
xchg
sub
dec
pop
cmp
mov
cmp
lcall
ss
adc
jns
hlt
std
int3
inc
mov
dec
sub
jecxz
mov
aas
inc
jb
lods
test
cld
and
xchg
push
mov
ds
aas
push
loope
je
rcr
mull
cltd
nop
dec
repz
daa
imul
cmpsl
pop
out
bound
sbb
mov
mov
sbb
pop
inc
xchg
xor
mov
inc
adc
mov
enter
cltd
insb
sbb
mulb
push
inc
scas
roll
adc
into
add
les
mov
mov
xor
jecxz
scas
test
scas
lods
add
push
mov
cmp
loop
pusha
push
xor
pushf
jp
push
jnp
int3
mov
fldt
aam
scas
aam
lret
repz
shll
or
scas
push
push
dec
bound
push
push
gs
add
dec
jecxz
cltd
push
fidivs
aad
test
call
push
lcall
dec
mov
push
dec
dec
cmp
in
mov
xchg
hlt
pop
sbb
jg
cmp
xor
sub
sbb
ret
xchg
dec
movsl
xor
mov
pop
mov
dec
mov
mov
out
cmpb
clc
cwtl
inc
jp
cmpsl
push
push
int3
dec
mov
xchg
sub
mov
inc
cvtdq2ps
mov
daa
fildll
pop
inc
scas
xchg
pop
or
add
scas
aaa
imul
xchg
dec
movsl
stos
enter
inc
shl
add
insl
xchg
inc
data16
jle
xor
and
sub
add
shrb
lar
lret
fsubr
inc
cwtl
sub
movsb
mov
pushf
pop
lds
push
cmp
shrl
cmpsb
dec
arpl
dec
cmpsb
sub
pop
out
mov
add
into
sbb
mov
or
adc
test
and
imul
push
adc
inc
aas
mov
inc
repnz
inc
sarl
fists
mov
scas
lahf
push
mov
mov
jb
js
mov
cmp
pusha
jne
inc
cmp
xor
rorb
adc
js
int3
push
out
jns
adc
xchg
pop
nop
aam
in
movsl
fwait
sbb
loop
push
push
mov
cmp
int3
enter
int
mov
push
dec
pop
ljmp
add
dec
mov
lret
mov
daa
jmp
push
xchg
scas
add
cmc
add
add
clc
negl
xchg
fadds
dec
mov
cmp
dec
mov
push
mov
mov
and
cmp
ficomps
jbe
aad
pop
shl
mov
mov
mov
xchg
xchg
or
xorl
enter
xlat
sub
cli
leave
cmp
iret
in
int3
enter
or
or
sbb
push
sub
mov
cmp
xor
sub
arpl
sarb
jmp
lock
std
repnz
rcrl
or
sbb
ljmp
cmp
mov
cltd
lea
push
pop
add
shll
mov
lock
xchg
cmpsw
adc
jp
mov
scas
in
sub
addr16
cltd
ror
loopne
pushf
mov
mov
test
je
out
mov
cmp
mov
mov
imul
jle
adc
in
push
fldt
sbb
movsb
shr
cmp
sub
in
jnp
xchg
fwait
imull
xchg
xor
es
fcomi
sub
xorl
arpl
pop
dec
cltd
xchg
cmp
int
repz
adc
add
cs
loopne
mov
stos
sbb
movsl
jl
cmp
leave
jp
fildl
lahf
dec
push
js
repnz
dec
cmp
nop
out
jmp
adc
and
sub
nop
fs
fabs
jo
fidivs
mov
jo
pop
fdivr
mov
testl
fdivrs
aad
mov
cmpsb
jmp
aaa
fsubp
jo
mov
add
mov
in
sbb
xor
cli
pop
je
pop
jmp
cmp
jecxz
shlb
pop
adc
cmp
ss
xor
inc
sbb
js
fmulp
pcmpeqw
in
push
dec
dec
sub
jl
cs
push
mov
inc
in
sub
ja
scas
mov
add
jne
sahf
ja
xor
loop
push
int3
xlat
loopne
dec
iret
pop
push
jg
dec
rcr
mov
out
fists
sahf
jno
mov
fsubrl
mov
into
pop
into
jbe
mov
sbb
xor
jnp
mov
mov
das
test
sub
fs
cltd
test
jge
adc
push
filds
or
mov
jno
jno
and
lret
add
scas
orl
push
mov
jb
xchg
sbb
inc
mov
jb
push
mov
inc
xlat
sub
cmpsl
cmpsl
fdiv
fstpl
or
sub
or
sub
aas
das
pop
inc
xor
inc
fsub
nopl
xor
and
cwtl
jmp
mov
sub
ja
inc
mov
mov
insb
and
rcrl
mov
pop
jle
pop
popf
xor
and
cld
popa
add
push
push
hlt
push
scas
dec
sub
negb
aas
aaa
push
sbb
popa
sbb
or
sbb
mov
andb
aaa
rdpmc
int
andl
jg
sarb
pop
movsb
ret
rcrb
dec
push
add
jecxz
dec
jne
inc
shr
ja
jo
fst
mov
xchg
repz
sbb
shll
loope
aam
sub
mov
cltd
loop
sub
in
or
add
aad
aam
jle
sub
lock
lea
in
adc
pop
cltd
mov
insb
jnp
in
sub
lahf
dec
loope
sub
lea
fucomip
repz
ss
cmc
int3
add
adc
shl
adc
sti
ret
mov
push
imul
jg
xchg
bound
cli
and
test
andb
ss
dec
sbb
pop
cli
out
and
loop
xor
lahf
cli
pop
clc
shrl
inc
inc
mov
xor
and
mov
loopne
xchg
jns
add
sbb
mov
push
sbb
insb
rol
shl
clc
int
cltd
jae
lock
dec
fistl
sub
stos
sub
scas
out
outsb
mov
xchg
lret
inc
jle
fmull
ljmp
xchg
sbb
pop
and
inc
sub
sahf
dec
in
jbe
cmp
sub
scas
sub
loopne
ss
pop
adc
fcompl
pop
cmp
xchg
pop
add
pop
xor
cmp
cmp
sub
jb
push
mov
into
jecxz
js
jnp
dec
jge
sub
or
repnz
push
test
or
add
inc
xchg
daa
cmp
mov
and
mov
add
cmc
data16
lock
sbb
inc
mov
sbb
lods
xchg
sbb
bnd
clc
das
jecxz
and
xor
fsin
cmp
fsts
pop
test
and
xor
jns
dec
orb
jno
rcrl
test
xchg
push
lret
inc
iret
hlt
adc
and
xchg
or
and
pop
or
inc
push
inc
mov
jge
push
mov
dec
add
or
pop
adc
rclb
pop
xchg
ror
or
orb
cli
cli
fisttps
filds
lock
int
mov
and
int
fs
popa
mov
pop
in
clc
int
enter
dec
roll
xchg
lretw
outsl
adc
mov
push
divl
leave
repz
mov
inc
adc
pop
jp
movsb
cmpsl
ds
data16
lods
out
push
cmp
jno
xchg
cmpsl
xchg
inc
xor
icebp
cmpb
xor
mov
out
aaa
pop
xor
mov
sub
imul
loope
movsbl
inc
ss
and
fxch
popf
icebp
int
mov
dec
pop
insb
jne
or
lahf
negl
fdivrl
mov
adc
dec
and
push
mov
push
cmp
inc
outsl
ja
cmp
add
or
das
in
je
jno
jo
xchg
pop
sub
jae
and
xchg
jp
call
fdivp
and
aam
out
ss
insl
fistps
lods
movsb
das
aam
pop
cmp
fs
arpl
movsb
mov
sub
mov
push
mov
sub
xchg
inc
mov
scas
xor
cmp
in
sub
ja
dec
in
mov
nop
inc
lock
cs
loope
cs
loopne
lds
pop
es
and
in
pop
sub
jae
bound
jnp
repz
not
mov
mov
pusha
jo
inc
std
ret
iret
and
mov
mov
cmc
pop
mov
adcl
scas
fnstcw
insb
negl
orb
adc
push
push
enter
jmp
adc
dec
add
fucomp
adcb
insl
scas
lret
cmp
cmc
fidivs
xchg
add
pop
dec
sub
jns
cmpsl
sbb
sub
adc
test
cmp
push
pop
mov
aad
je
cwtl
dec
movsl
dec
mov
popf
out
dec
sub
out
inc
addr16
xlat
adc
sahf
js
jne
adc
jg
jae
sbb
xor
mov
pop
aad
iret
aas
scas
mov
mov
imul
rclb
gs
mov
sbb
sbb
enter
and
push
stos
mov
mov
add
jnp
sub
push
mov
add
roll
ficompl
mov
icebp
jge
test
stos
loopne
cmpsl
shlb
push
inc
or
gs
cmp
cmpsl
ljmp
jae
fwait
or
adc
sarb
test
stc
mov
sti
mov
inc
sbb
sahf
adc
loop
fildll
mov
scas
daa
mov
xchg
dec
in
iretw
push
jg
adc
ljmp
sbb
cld
rol
inc
enter
adc
xchg
aas
in
ret
in
add
pushf
push
lods
pop
stos
outsl
loope
push
ret
out
movsb
into
mov
sbb
inc
push
out
popa
mov
es
mov
pusha
sahf
mov
adc
or
addr16
insb
in
mov
jns
mov
mov
adc
rorb
andb
xchg
pushw
enter
inc
sbb
inc
movl
or
xchg
dec
sbb
pop
data16
subb
in
enter
dec
into
scas
sbb
sub
pop
add
fcmovne
sub
or
out
bound
andl
jg
push
test
imul
imul
clc
mov
xchg
and
push
jb
push
int
jnp
enter
xor
int
and
mov
mov
out
xchg
movsb
dec
cmp
test
sbb
lock
cmp
and
xchg
pop
neg
cli
scas
jae
outsb
enter
in
push
out
loopne
jne
mov
pop
xchg
dec
dec
in
cmp
adc
xchg
dec
dec
lds
add
sar
data16
mov
out
fidivl
mov
add
adc
mov
jo
leave
push
jmp
mov
scas
inc
mov
or
xor
or
push
outsl
dec
mov
mov
subl
out
shr
mov
and
mov
mov
popa
adc
xchg
addr16
and
cmp
call
rcll
bswap
fdivrp
sbb
add
jecxz
test
xchg
aas
push
dec
inc
sub
sub
ja
out
or
loopne
push
scas
inc
fiaddl
xchg
sub
xlat
out
xchg
loop
fwait
mov
fbld
xor
xor
rcl
cltd
inc
pop
or
ret
pop
pusha
xor
movsl
incb
mov
insb
or
lds
dec
push
outsl
and
mov
dec
rolb
out
mov
jle
dec
gs
mov
add
mov
into
xor
int3
push
mov
pop
inc
movsb
ljmp
jno
xor
aam
or
arpl
dec
icebp
jmp
stos
mov
sub
cwtl
aaa
xor
and
xor
mov
insb
lock
inc
add
xor
sub
push
mov
dec
shlb
std
mov
out
adc
adc
cmp
mov
inc
push
fbstp
sub
sbbb
outsl
pushf
imul
pop
or
sub
xor
mov
out
sbb
adc
xchg
add
popa
fs
ljmp
bound
fs
sub
or
icebp
sbb
sbb
pop
les
xchg
mov
mov
dec
xorb
cmp
mov
mov
loop
stos
ss
lcall
mov
sahf
in
cmc
lcall
xchg
xchg
mov
fcomi
xchg
jl
lock
imul
in
xlat
adc
push
lcall
mov
sti
xchg
fidivl
or
es
dec
or
inc
dec
daa
jo
or
xor
mov
cli
outsb
push
inc
jo
pop
fisubs
adc
repz
cld
lds
fld
or
pop
scas
or
xchg
mov
dec
int
fldl
and
repz
imul
scas
dec
push
mov
dec
mov
or
scas
notb
or
pop
cmpsb
mov
fadds
cld
jne
sub
ret
repnz
lret
xchg
dec
cltd
cmpsb
push
cli
xchg
mov
cld
pop
jnp
add
and
cmp
lahf
mov
jl
adc
inc
aam
out
in
sahf
bound
sub
cmp
jecxz
std
repz
xchg
push
shrb
xchg
adc
pop
stos
jns
push
aaa
xor
push
mov
add
lea
mov
inc
adc
xchg
repz
xchg
fists
aas
jb
iret
add
dec
out
sbb
sub
aaa
pushf
mov
mov
dec
add
mov
dec
xchg
ret
insl
mov
pop
shrb
cld
dec
mov
inc
push
out
inc
cltd
xor
aad
cmp
mov
sarb
fstpl
icebp
jp
gs
insl
mov
decb
mov
lret
ja
fiadds
test
add
cmp
ss
adc
pop
push
ret
out
cmp
inc
sbb
int
rorb
loopne
js
push
out
pusha
out
pop
scas
sub
sarb
iret
int3
pop
jae
cmp
push
add
or
mov
test
mov
push
out
xchg
and
pop
sub
or
and
dec
mov
repnz
pusha
sub
pop
aaa
mov
testl
jnp
mov
xlat
ficoml
xchg
fisttpll
sub
lods
jmp
iret
push
mov
insl
out
pop
dec
xor
jns
out
fcmovbe
fimuls
cmpsl
sbb
lock
in
xor
inc
cld
pop
cmp
testl
mov
cmpsl
dec
xor
lret
jg
and
mov
dec
jge
ja
adc
lret
jl
adc
jno
jae
faddl
inc
sub
repnz
mov
xchg
add
das
clc
jecxz
xchg
xor
lea
add
adcl
adc
sti
push
xor
sbb
insl
aaa
mov
push
mov
push
xchg
mov
and
mov
das
mov
push
mov
nop
out
fbld
or
adc
add
iret
cmp
outsl
jecxz
push
insl
or
fsubrl
cmc
add
add
mov
xlat
fisubrl
dec
mov
stos
dec
into
enter
es
je
in
scas
sbbl
das
or
mov
fnstsw
inc
and
fisttpll
andl
sahf
cmp
faddl
sub
jecxz
jae
push
in
mov
aad
shl
lea
jbe,pt
cmc
dec
xor
push
inc
jo
fisttpll
loopne
fildl
or
sbb
ret
lret
cmpsb
mov
cmc
push
adc
dec
mov
mov
push
add
inc
pop
and
push
xor
rep
pop
xor
sub
xchg
cmp
ret
loopne
nop
push
mov
and
sti
fdivr
and
outsb
pop
jmp
stc
jl
xor
ljmp
int3
sbb
pop
or
pop
lea
xchg
sbb
stos
xchg
mov
pop
ss
adc
shr
jne
pop
and
test
and
mov
outsb
mov
lret
jmp
mov
cld
and
pop
push
clc
push
rol
call
fsts
addr16
leave
movsl
sub
in
ret
sahf
addr16
dec
cwtl
mov
cmpsl
hlt
arpl
or
cmpsl
lea
mov
mov
les
aaa
pop
and
cld
sahf
or
pop
adc
cltd
inc
leave
ror
popa
inc
or
mov
dec
pop
aaa
mov
dec
cmpsb
dec
hlt
lds
insl
inc
mov
and
and
cmp
sub
les
inc
data16
out
pop
sub
mov
pop
mov
lea
insb
dec
into
push
xchg
xor
stos
sbb
daa
movsl
sub
add
lock
sbb
xchg
jge
lock
dec
subl
test
les
test
mov
cwtl
push
pop
sbb
movl
dec
and
in
inc
jne
mov
mov
lea
int3
mov
mov
push
push
movsl
push
outsb
inc
add
sub
icebp
mov
pop
dec
or
xorb
int3
fdivrl
mov
jmp
adc
inc
cmc
mov
push
push
add
mov
repnz
enter
push
add
popa
call
xchg
mov
and
cmc
scas
out
push
sbb
imul
jns
mov
inc
mov
adc
loope
mov
mov
outsb
popf
mov
out
add
push
fmuls
adc
sub
push
xchg
lahf
sub
sti
pop
pop
into
inc
fstps
mov
jno
or
repnz
add
lcall
cld
bound
and
xorb
scas
popa
data16
jg
es
jp
mul
mov
inc
sub
loope
lret
pop
fwait
jge
ds
call
lcall
outsb
aam
jno
ljmp
pusha
adc
xor
movsb
pop
pop
sbb
push
stos
fmul
mov
rolb
cmp
into
mov
jbe
cmp
in
scas
int
xor
cli
ja
test
push
fdivrp
ds
test
imul
add
int
dec
andl
mov
push
pop
flds
push
imul
dec
and
subb
repz
cld
movsl
icebp
jae
movsl
loopne
add
es
outsb
lods
cmp
icebp
cmp
lret
jge
cmp
jbe
data16
xchg
xor
das
xchg
xchg
xlat
jnp
test
inc
adc
repnz
mov
add
xorb
adc
push
outsl
dec
cli
mov
jno
pop
repz
sub
ret
cmp
in
sub
dec
cmpsl
clc
jp
addb
or
gs
negb
adc
fdivs
pop
mov
repnz
fistpl
pusha
pop
lods
pop
push
mov
out
xchg
mov
sti
lea
or
sbb
lret
imul
mov
cmc
push
adc
dec
movsb
mov
jns
push
sbb
jae
jnp
pop
add
pop
jbe
ljmp
push
cmp
sbb
int
in
icebp
or
lds
dec
fstpt
inc
test
inc
dec
dec
cmp
je
add
ss
add
mov
std
fucomi
xchg
sub
test
movsl
jmp
or
push
imul
js
adc
adc
push
std
and
movb
mov
add
cmc
add
add
sub
push
cltd
in
pop
jle
js
xor
cmp
dec
mov
jge
sub
or
call
lahf
xlat
sub
xchg
rcll
mov
aam
mov
nop
lcall
add
sub
push
xor
add
fs
cld
mov
testl
fwait
cmc
dec
pop
inc
dec
popa
mov
cmp
das
mov
sarl
add
sbb
push
pop
repnz
adc
fiaddl
les
mov
lea
cmp
test
and
sub
dec
adcl
sarb
loope
sub
sub
and
pop
and
cmpsb
test
pop
jmp
sbb
dec
das
inc
or
int
sbb
inc
js
sti
outsl
pop
dec
in
sarl
stos
sub
sarl
fldl
call
mov
inc
xchg
cwtl
xchg
fsubl
stos
dec
lods
clc
jae
cmpsl
cltd
out
fisttpl
rcrl
icebp
loopne
pop
sbb
lcall
jo
inc
gs
push
sahf
ljmp
inc
push
outsb
jle
mov
cmp
dec
ss
cli
or
cli
sbb
pop
clc
into
jge
cmp
push
push
push
inc
les
xlat
push
dec
adc
inc
lret
hlt
and
mov
lds
rcll
cmpsl
outsl
xchg
test
hlt
cli
sub
push
adc
pop
jmp
jbe
jmp
inc
dec
dec
jne
mov
xlat
movsb
xchg
shll
cmp
mov
test
mov
outsb
stos
std
lret
movsl
cmp
xchg
test
lahf
mov
jmp
cmp
mov
jns
mov
push
popa
leave
mov
iret
stos
push
in
out
inc
jo
adc
push
jae
push
sub
lea
repnz
mov
dec
pop
int3
jle
and
adc
in
in
jbe
out
mov
xchg
cmc
xor
xor
stos
jb
xor
dec
xchg
mov
imul
hlt
mov
xor
cmp
mov
mov
orb
adc
mov
aaa
mov
pop
clc
jge
cs
andl
add
xchg
push
adc
xchg
loopne
aas
sbb
outsl
stc
test
xchg
adc
jbe
add
test
push
fcmovbe
push
mov
jno
jnp
shrb
test
iret
imul
lock
popa
hlt
cmp
sti
sarl
pop
clc
sti
rcrl
cmpsb
test
jbe
mov
jo
test
test
mull
mov
iret
mov
pusha
repnz
jne
ss
popa
stos
aas
push
jae
lds
arpl
dec
mov
xor
insb
mov
inc
add
mov
or
fsubrs
dec
or
out
pop
lahf
repz
fs
mov
fwait
jmp
cmpsb
pop
sbb
xor
scas
jbe
push
rep
mov
lods
fidivrl
pop
enter
push
movsb
push
orb
sbb
jo
aas
add
sahf
daa
fwait
aaa
clc
cld
jp
pop
testb
jle
mov
dec
setl
inc
cltd
out
mov
push
rcrl
or
punpcklwd
and
mov
sub
mov
and
movsb
inc
jecxz
rcr
xor
jno
dec
lret
pop
adc
sbb
bound
stos
mov
jb
mov
sub
add
ret
test
jecxz
xor
dec
clc
popl
cmp
repz
xchg
jo
pop
mov
jbe
test
mov
sub
ja
cmpsl
ds
rorl
fsts
or
and
pusha
mov
test
xchg
stc
jmp
pushf
sub
ret
lcall
mov
xlat
call
dec
bound
divb
xchg
pop
ds
mov
mov
and
movsb
aas
xchg
cltd
adc
or
dec
lret
dec
push
test
mov
mov
int
lcall
movsb
in
cwtl
jbe
pop
mov
sub
xor
xor
test
cltd
fmuls
pop
in
sbb
fwait
int3
repnz
rclb
aas
and
inc
inc
and
addb
bswap
test
dec
or
aam
pop
movl
add
xchg
sbb
data16
test
inc
sbb
xchg
sub
pop
sub
mov
jae
sahf
pop
xor
int
xchg
cmp
mov
cmpsl
aaa
repnz
pop
popa
add
ja
leave
mov
out
xchg
add
or
mov
jo
xchg
lahf
test
mov
pop
mov
sti
or
lahf
fadds
mov
mov
or
mov
sub
test
je
sbb
js
ret
daa
xor
in
icebp
cltd
inc
int3
mov
repnz
loope
or
dec
ss
scas
sbb
stc
adc
mov
inc
lea
lock
mov
divb
cs
out
mov
cmp
inc
scas
sbb
outsl
xor
out
sbb
outsb
dec
cmpsb
adc
sub
jno
andl
rcrl
cmp
inc
xor
pushl
fsubs
inc
xor
les
imulb
daa
add
insl
mov
cvtpi2ps
mov
daa
jb
shrl
fcom
lods
aas
dec
xor
popa
mov
push
out
mov
xor
fidivrs
fbld
aad
jne
dec
ret
add
or
stos
scas
add
mov
repz
adc
mov
pop
adc
push
lret
dec
cmpsl
xchg
jl
shlb
push
push
iret
xchg
vmovupd
jnp
cmp
arpl
pop
out
imul
iret
mov
add
jecxz
and
pop
fwait
repz
push
inc
mov
jg
xor
xchg
mov
lahf
inc
mov
xor
cmp
arpl
clc
and
cmp
mov
cmp
divb
lcall
in
cld
sbb
lock
nop
movsl
inc
mov
out
mov
popa
inc
push
out
aaa
pop
inc
push
fwait
inc
jo
adc
inc
insl
add
sarb
test
dec
mov
icebp
inc
loop
test
adc
sub
inc
cmp
and
add
fwait
mov
fsts
pop
cwtl
cs
inc
int3
xor
xchg
mov
dec
mov
inc
jl
mov
dec
fidivrs
or
addr16
cmp
dec
sahf
xor
mov
xor
repnz
mov
enter
add
cli
mov
push
fimuls
mov
push
jne
icebp
sahf
gs
repnz
pop
and
stc
leave
xor
ret
push
into
cmp
fnstenv
repnz
and
or
add
shl
test
out
inc
mov
mov
mov
xor
mov
mov
fistpll
rcl
jbe
or
mov
gs
pop
in
mov
call
rep
subl
cltd
daa
dec
mov
daa
sbb
cwtl
mov
test
jge,pt
xchg
xchg
mov
adc
fcoms
inc
adc
jl
jae
lahf
into
stos
mov
int
ficomps
dec
insb
cmpsl
add
and
out
mov
pusha
mov
pusha
sub
loope
sbb
sub
lret
sarl
mov
std
or
mov
ds
mov
jg
outsb
mov
movsb
dec
push
adc
adc
inc
add
sbb
int
pusha
lock
popa
mov
jle
jae
into
dec
insl
adc
lret
pop
cld
gs
cmp
xchg
inc
cmp
sub
clc
enter
movsl
aaa
fidivrs
arpl
pop
ficomps
or
inc
add
ret
rclb
or
jl
out
in
outsl
inc
push
les
dec
xchg
cmpsb
push
xchg
testl
lret
jbe
jb
ficoml
aas
pop
xorl
xchg
mov
jge
cs
mov
dec
je
xchg
cmp
in
push
out
sbb
sbb
adc
jbe
std
fstl
inc
daa
es
adc
pop
lock
cli
pop
push
adc
sub
cmpsb
jns
pop
pop
mov
adcl
lret
out
ds
fisttpl
sub
sub
cmp
pop
das
lea
cli
fdivr
int3
repnz
push
cmp
push
in
in
inc
add
mov
jae
pop
pop
shr
dec
in
adc
es
or
xor
dec
jmp
mov
sbb
repz
leave
push
jecxz
or
xchg
adc
inc
xchg
repnz
movsb
bswap
addr16
lret
call
add
jg
cmc
or
scas
rolb
push
int3
add
cmc
add
add
mov
dec
cmp
push
stc
outsb
add
mov
push
jae
jb
mov
jae
pop
pop
sub
inc
mov
lret
or
scas
pusha
jno
dec
addr16
enter
gs
in
mov
insb
rorb
push
mov
xlat
int3
test
or
incb
aam
lcall
out
leave
jge
arpl
scas
insl
jae
mov
mov
imul
mov
sub
ljmp
std
int
xchg
arpl
subl
jns
bound
xchg
fimuls
addr16
xchg
and
inc
mov
push
add
cmp
icebp
adc
std
sub
mov
clc
add
pop
inc
test
fildl
sbb
add
imul
or
sbbl
sbb
mov
loop
test
addl
pop
lds
repz
inc
lcall
stos
clc
dec
jmp
pop
popf
lods
clc
inc
ljmp
sbb
shll
pop
adc
xchg
mov
aam
mov
loop
pusha
cmp
and
add
mov
sub
es
in
incl
cmp
add
and
orl
jne
pusha
sbb
sub
inc
xor
shrb
call
jnp
jo
ljmp
adc
lods
dec
lea
daa
loopne
fidivs
lret
and
mov
fistpll
mov
stos
test
jb
shll
xor
sub
and
dec
sti
vcvtsi2sdl
test
jno
mov
shlb
ljmp
and
inc
jb
pop
xchg
scas
rcrl
inc
push
adc
ja
add
mov
mov
xchg
mov
adc
or
and
jnp
mov
xchg
test
fsts
mov
inc
mov
pop
fwait
inc
push
ficomps
pushf
scas
cmp
lret
imul
dec
push
pop
jb
fnsave
xor
cwtl
push
mov
pop
pop
sub
jmp
loope
out
fsubl
clc
pop
push
sbb
cmp
lcall
adc
cmp
fisubrs
std
push
jo
mov
adc
xchg
push
cmpsl
scas
std
mov
jecxz
mov
and
mov
mov
mov
ret
sub
mov
scas
imul
cmpsl
pop
ret
xchg
std
sbb
aam
xor
add
and
mov
sub
insl
stc
ret
push
fcoml
mov
push
sbb
cmp
sub
adc
pop
inc
pop
jmp
fldenv
cwtl
or
test
mov
sbb
rcrl
cmp
inc
stos
jb
add
ds
mov
add
jmp
fs
cltd
jo
push
cmpsb
js
inc
inc
push
sub
xchg
jbe
scas
xchg
imull
lods
stc
iret
xor
pop
adc
sbb
ret
out
lds
sbb
inc
jg
vpaddd
add
mov
ja
icebp
xchg
or
jbe
add
or
add
or
push
nop
jecxz
scas
mul
ja
mov
jae
std
test
pop
mov
add
mov
jo
xchg
cmp
mov
dec
lock
sub
sbb
lods
sarb
jecxz
psubusb
mov
idivb
cmp
imul
outsb
jmp
fsubrl
ret
dec
cmpl
mov
lods
push
sti
cmp
cmp
dec
ret
xchg
jno
popf
jge
int3
fimull
cmp
jmp
hlt
inc
std
cmp
insl
pop
ljmp
sti
xor
mov
push
mov
dec
fst
mov
xlat
add
sub
sbb
adc
sar
sub
jecxz
test
inc
imulb
or
pushf
negb
test
mov
ds
imul
sub
xchg
je
mov
push
fstpl
fs
test
fnsave
mov
sbb
mov
xchg
xor
in
icebp
ss
xorl
dec
mov
and
ljmp
add
pop
je
and
xchg
jnp
jg
mov
pop
pop
bound
pop
cmp
sub
add
scas
cmpsl
lods
adc
fsubl
loope
aam
add
test
sbb
dec
inc
xor
add
add
outsb
out
lds
push
mov
dec
roll
add
add
add
xor
rorb
gs
lds
jae
xchg
lret
loop
mov
ljmp
pop
or
mov
sbb
rcr
cwtl
jbe
xor
and
out
push
mov
or
mov
inc
pop
outsb
mov
mov
cwtl
pop
mov
pusha
icebp
pop
or
jge
jmp
mov
cmpsb
mov
mov
mov
pop
inc
mov
mov
mov
mov
fiadds
xchg
or
mov
testl
imul
mov
mov
sub
sahf
aad
or
clc
jb
ss
leave
adc
add
jbe
out
inc
arpl
xchg
aam
inc
add
inc
lcall
mov
and
nop
add
pop
movb
mov
lea
push
jg
loopne
pushf
adc
push
decl
ret
shlb
cs
jge
aad
mov
mov
adc
lods
xchg
inc
and
xchg
sbb
fdivp
or
cld
movsb
or
adcb
fmull
movsb
fbstp
ljmp
mov
jg
inc
cld
dec
inc
idivb
sub
add
jnp
sbb
das
lret
pop
imul
mov
fwait
cwtl
mov
fisttpll
aam
xchg
and
pop
cmp
hlt
cwtl
mov
sbb
inc
mov
call
mov
ds
add
rcrb
or
xor
pop
ja
mov
fwait
xor
mov
aaa
dec
mov
xchg
mov
cmp
clc
into
in
dec
outsl
lret
paddw
incl
jbe
xchg
call
dec
in
fldl
scas
inc
loop
rorb
loop
mov
popa
inc
in
xchg
push
clc
mov
notl
mov
in
das
adc
cli
jbe
scas
movsl
aam
inc
cltd
jge
mov
pop
or
sbb
nop
js
jns
jp
mov
inc
xlat
cmc
cmp
or
sarl
xchg
sti
lock
pop
sub
stos
jae
xchg
lods
popf
or
cmp
cmpsl
jns
dec
push
mov
pop
push
adc
and
adc
sbb
xchg
mov
movsb
les
pop
push
sti
scas
mov
pop
sbbb
imul
push
popa
mov
pop
mov
mov
inc
in
rclb
jp
xchg
pusha
mov
add
mov
cmc
inc
out
push
sbb
jmp
sbb
jp
mov
lahf
stos
pop
add
ret
add
daa
call
sti
pop
test
out
pop
xchg
leave
pop
lret
ljmp
adc
push
and
fstps
hlt
out
orb
sbb
aas
cmpsb
dec
clc
add
mov
lock
mov
movsb
dec
sbb
or
nop
pop
cwtl
arpl
dec
dec
stos
xchg
cmp
mov
mov
repnz
pop
cmpsl
stos
mov
std
mov
leave
movsb
shll
dec
mov
mov
jnp
lods
aad
mov
xchg
mov
sbb
jbe
sub
gs
ret
xchg
cli
xchg
stos
mov
cld
addb
xchg
push
outsl
pop
jbe
lret
mov
sub
fistpl
cmpsl
iret
xchg
sbb
inc
gs
fmull
orl
xchg
and
xor
loope
lahf
mov
adc
lahf
xchg
int3
loopne
popa
mov
xchg
push
sub
xlat
jne
sbb
pusha
fs
cmp
dec
inc
je
outsb
testl
cwtl
and
adc
imul
cltd
xchg
sub
mov
decb
pop
rcrl
out
arpl
daa
sbb
cmp
scas
cs
jnp
push
sub
sahf
iret
std
addr16
and
mov
add
xor
pop
mov
cmp
or
inc
jmp
out
loop
inc
jbe
jno
incb
movsl
lods
cli
lea
mov
sbb
dec
inc
scas
sub
mov
lret
add
sahf
adcb
inc
cmp
std
dec
sbb
dec
negb
dec
pop
out
dec
in
sub
or
sbbb
lods
jmp
sub
scas
and
out
pop
stc
popf
popa
sarb
mov
jecxz
jo
out
imul
or
inc
push
nop
nop
xchg
adc
mov
add
fstpt
pop
shl
popf
orl
jnp
add
out
lret
lods
xlat
sti
mov
sahf
xor
add
cmc
add
add
scas
xlat
mov
subb
repnz
jmp
aad
cli
into
pusha
stc
sub
xchg
jmp
inc
adc
mov
dec
add
sub
and
int3
loopne
mov
mov
jns
xchg
in
icebp
jne
cmc
dec
lret
out
scas
inc
sti
lds
mov
pusha
test
and
cmp
adc
and
je
and
inc
ljmp
pop
or
shl
push
loopne
dec
mov
cmc
cld
push
aaa
sti
adc
push
mov
jge
mov
lahf
and
out
aad
add
movsb
mov
addr16
jge
out
dec
inc
inc
popa
xor
test
mov
out
xchg
aad
dec
imul
addr16
mov
je
ja
push
movsl
sbb
xchg
cmp
xor
jl
stos
pop
test
push
inc
jno
push
and
decl
hlt
std
rolb
pop
dec
mov
sbb
xchg
jmp
insb
enter
sbb
inc
imul
and
xchg
bound
je
inc
repz
test
loopne
outsl
int3
loop
push
sub
hlt
fisttpl
in
dec
addr16
loope
andl
jle
adc
rclb
xlat
pop
add
push
jbe
repz
stc
sbb
je
jmp
adc
stos
jb
outsl
dec
inc
rclb
es
insb
or
or
or
xchg
sbbl
movsb
mov
xor
aam
mov
add
xchg
and
pop
pop
add
or
cmc
test
mov
cmc
cmpb
lea
push
dec
jns
loope
mov
push
dec
pop
pop
or
dec
and
ljmp
mov
out
stc
inc
jne,pn
shrl
inc
mov
xchg
cmp
xlat
sbb
jmp
mov
inc
push
rcrl
mov
mov
enter
test
int
test
cmp
addr16
dec
cmpsb
pop
mov
in
pop
mov
dec
scas
lods
add
xchg
loop
sbb
push
xchg
mov
movl
jbe
bound
fsubrp
stc
adcl
hlt
cltd
aaa
hlt
or
dec
cmc
inc
jnp
rcr
dec
insl
popl
push
mov
xor
or
je
movsb
add
lods
xchg
mov
or
ds
push
mull
rclb
mov
loop,pn
pusha
rolb
fnstsw
sbb
mov
mov
lods
mov
adc
cmc
xchg
sti
cmp
ret
mov
push
push
pop
lcall
packssdw
jle
jo
pop
adc
mov
and
sub
sahf
cmpsl
inc
ret
sub
or
fsubrl
pop
sbb
xlat
lods
sbb
lds
cmc
in
sub
cmp
xlat
mov
jecxz
adc
bound
test
addb
shrb
movl
xor
lds
insb
jbe
nop
pop
mov
fs
xchg
or
mov
fbld
jp
sbb
fsubrp
add
sub
add
cmpb
add
in
xor
lret
and
insb
lods
out
pop
mov
nop
pop
pushl
push
lds
push
stos
insb
mov
push
popa
in
iret
fstpt
mov
pop
fwait
mov
divb
mov
mov
js
xor
sub
lods
enter
pop
in
ljmp
adc
xor
cmp
neg
cmp
aaa
or
pop
pop
jns
mov
xchg
lds
xor
and
ret
cmp
and
mov
inc
stos
dec
in
and
sbb
push
cmp
inc
dec
jne
andl
pop
push
or
int3
sbb
scas
xor
call
int3
or
mov
aad
mov
pop
sub
xchg
mov
fwait
mov
fnstcw
jbe
xchg
insl
dec
mov
iret
mov
inc
stc
cld
mov
adc
in
into
xorb
cmp
adc
es
cmp
les
movl
push
in
cmp
fisttps
lods
int
mov
mov
dec
js
mov
xor
test
lcall
pop
cltd
aam
les
dec
out
fstl
ljmp
popa
xchg
cmp
cmp
add
stos
add
add
loop
bnd
fcomi
mov
push
pop
pop
ret
add
cmc
add
add
aad
or
add
adc
loopne
aam
xlat
popa
mov
lds
add
test
out
xchg
or
insb
mov
xor
and
or
push
xchg
inc
cwtl
mov
cmp
imul
loopne
ss
movsb
mov
int
cwtl
das
negb
dec
inc
add
cmc
sub
mov
cwtl
push
or
push
jae
mov
loopne
cld
mov
mov
xchg
sbb
sbb
jg
cmc
mov
mov
push
sti
add
push
sti
xchg
fisttps
xor
and
inc
push
cmp
jns
cli
mov
jmp
inc
and
mov
aas
xor
push
shlb
pusha
arpl
pop
sbb
and
xor
push
outsl
jae
mov
mov
xchg
pop
adc
sbb
loopne
xchg
cli
aam
call
pop
loope
rcll
sar
pop
add
inc
jg
lods
out
add
cli
out
jns
lret
sub
movsl
push
inc
mov
push
jnp
or
and
cmp
ret
cmp
aaa
outsl
sbbb
test
xchg
lcall
sahf
fs
or
sbb
fcomp
loop
xchg
inc
rorb
push
ds
std
sbb
aam
pop
xchg
ss
mov
es
adc
call
push
hlt
andb
fidivs
cmpsl
jns
sbb
test
pop
dec
dec
push
dec
repnz
rcll
arpl
mov
sarb
jbe
mov
sub
aad
jle
mov
shl
cmp
scas
movsl
ret
push
jbe
or
inc
shlb
pop
inc
pushf
pop
sub
mov
mov
pop
lret
lcall
add
mov
jl
loopne
xchg
adc
jg
fildll
mov
jl
idiv
and
shll
pop
jge
or
pop
xor
sub
jb
in
xchg
mov
ljmp
mov
mov
daa
aam
inc
sti
movsl
adc
sub
push
sub
push
xor
cmp
sub
aas
mov
mov
sbb
jbe
sarb
jp
push
rorl
and
repnz
fcmovnb
jne
movsl
rsqrtps
pop
test
push
mov
inc
xor
mov
push
out
cmpsb
push
bound
jae
push
fildl
sub
daa
aaa
test
mov
xchg
lods
xor
cwtl
jo
pop
rolb
in
jbe
mov
mov
add
xchg
add
lods
or
and
das
sub
push
mov
cmp
lret
or
xchg
mov
push
repz
icebp
sub
push
dec
pop
mulb
mov
cmp
sub
ljmp
movsl
mov
xor
stos
and
iret
enter
iret
mov
adc
orl
scas
fwait
iret
clc
cmp
ret
sbb
sub
add
add
and
or
mov
add
enter
xlat
jmp
lahf
lods
cmp
cmp
rcll
or
mov
inc
fnstsw
adc
inc
mov
mov
cmpsb
or
pop
loopne
popa
mov
jnp
sbbb
dec
mov
fbld
jbe
imul
stos
pop
push
cld
addr16
cwtl
imul
es
inc
sbb
mov
dec
stos
pop
or
xor
xchg
imul
outsb
jecxz
fildl
xlat
cld
xor
mov
dec
fadds
xchg
test
loopne
push
adc
scas
cs
in
clc
mov
sbb
loop
pop
rep
lods
aam
inc
adc
aaa
pop
stos
and
jp
push
scas
test
lds
xchg
mov
xchg
or
iret
cltd
pop
insl
les
outsl
imul
iret
out
fs
xchg
lods
fsubs
jo
cmpsb
lret
sbbl
xor
aas
and
jle
or
mov
push
lods
adc
xor
test
insb
or
lock
or
outsb
outsb
stc
subb
jmp
xor
push
in
cmp
stc
pop
add
clc
cld
mov
out
ja
pop
adc
shld
add
add
ss
in
inc
fistpl
or
loopne
add
add
add
cmp
into
psubb
rclb
mov
mov
push
xchg
xchg
fidivrl
aas
les
sbb
inc
andb
lret
jo
rolb
mov
cwtl
mov
jmp
inc
push
aad
in
sarb
adc
rcrb
bound
fsubrl
sbb
dec
xchg
inc
adc
imul
jle
xchg
ret
out
inc
scas
mov
pop
push
mov
js
stos
push
mov
into
test
push
xchg
icebp
adc
iret
sbb
shrl
ja
ror
sbb
push
loop
and
out
out
jp
negb
jb
mov
dec
scas
push
mov
jg
iret
sub
ficoms
scas
lret
jnp
aas
jp
pop
lods
mov
das
inc
or
ficoml
loopne
xlat
pop
loop
andl
mov
idivb
div
cmpl
or
add
pop
cmp
ret
cmpl
xchg
inc
and
mov
cmp
in
fwait
scas
adc
sub
lods
mov
add
xchg
pop
mov
xchg
push
es
mov
sub
addl
test
pop
mov
mov
imul
pop
stc
mov
and
adc
and
pop
dec
adc
or
int3
jl
shlb
sub
fsubl
sbb
or
gs
inc
xchg
xchg
stos
arpl
inc
xor
sub
pop
xor
loop
cwtl
call
jbe
hlt
push
outsl
lods
lea
mov
test
out
mov
gs
es
sbb
mov
sub
and
push
mov
stos
add
in
sbb
rcrb
orb
inc
cmp
arpl
pop
adc
adc
in
in
jge
sub
mov
sbb
cli
mov
insb
mov
clc
push
push
sbbb
mov
in
pop
cs
fidivs
or
aaa
cs
insb
mov
mov
test
sub
in
and
pop
pop
popf
mov
push
int3
idivl
push
cwtl
jne
adc
das
mov
dec
pusha
arpl
in
jl
dec
adc
xchg
or
decb
cs
push
cmpsb
insl
dec
outsl
in
xchg
ss
xchg
test
and
lock
or
sti
pop
cmc
notl
mov
jno
and
push
insl
mov
lahf
push
sub
xchg
shlb
adc
or
or
sbb
dec
clc
ror
inc
and
cmp
lret
pop
jl
fistpl
int3
dec
lds
int
mov
or
lea
mov
hlt
cmpsb
pop
xchg
mov
cmpsl
add
mov
pop
jl
adcb
bound
faddl
inc
sub
cwtl
lds
mov
in
cmpl
jb
addl
pop
sbb
nop
cmpsb
sbb
popa
and
fwait
movsb
std
mov
xchg
js
scas
repz
pop
hlt
sbb
cmp
push
sub
inc
add
dec
out
loope
jbe
dec
jecxz
rep
sub
pushf
stc
mov
fucom
movsb
daa
scas
lock
push
ljmp
leave
in
jge
xchg
push
or
and
fstl
sahf
les
xor
and
pop
mov
cmp
and
push
cmpsl
lea
and
fcomps
jge
and
cltd
je
jg
or
std
dec
mov
or
ds
sbb
loope
ja
aaa
mov
jle
cmp
prefetcht0
dec
jmp
dec
rorb
cwtl
fstpl
push
add
cmpb
mov
mov
shlb
inc
dec
cwtl
mov
inc
fcom
stc
jp
lret
adcl
int
jmp
js
mov
jae
mov
insb
cld
daa
in
enter
pop
addb
rorl
lods
or
ret
pop
mov
lret
rorl
dec
cmp
mov
sbb
jbe
fdivs
dec
add
addb
imul
add
lahf
sti
out
cmc
xor
jge
adc
hlt
icebp
rolb
push
pop
dec
inc
jmp
fdivr
out
shlb
adc
out
push
mov
jno
mov
xlat
filds
add
xchg
rcrb
pop
roll
inc
pop
jae
in
add
add
add
push
insl
jbe
or
xchg
mov
cmp
pop
sbb
jno
les
mov
sbb
arpl
fxch
cmc
loop
sbb
xchg
sbb
aad
lcall
jne
mov
popf
daa
incl
lret
push
cmpsw
and
pusha
popa
nop
mov
push
das
mov
cmpl
adc
loopne
or
adc
xchg
ret
cmp
test
pop
mov
or
data16
adc
inc
stos
mov
jge
scas
lret
inc
xor
lods
lahf
clc
addl
jno
mov
push
repz
jge
daa
add
leave
sub
adc
sub
cmpl
aas
mov
pop
das
fwait
cmp
cmp
sbb
add
into
mov
das
cmp
jl
nop
mov
push
bound
add
xchg
add
push
or
mov
imul
cwtl
jg
xor
imul
cltd
cmp
jg
xor
inc
pop
xchg
stos
scas
mov
sbb
addr16
jmp
imulb
cmpsb
out
incb
popa
js
add
movsl
cld
inc
mov
xchg
mov
adc
mov
imul
adc
or
loopne
movsb
fcoms
mov
cld
cmp
arpl
xor
aam
mov
in
xor
aas
adc
xor
out
lds
mov
test
jmp
aam
mov
out
in
mov
fdivr
pusha
leave
pop
cmp
dec
call
cmp
mov
sub
repnz
mov
outsl
sahf
std
mov
and
xchg
xchg
rcrl
sub
scas
xchg
rcr
and
pop
push
sub
cld
inc
or
fcmovnu
xlat
cmc
loope
idiv
pop
iret
sahf
cld
stc
cmpsl
orl
cmp
cwtl
stos
shlb
mov
dec
scas
push
lret
popa
jg
mov
cmp
mov
or
mov
aam
nop
out
cmpl
xlat
rorb
push
jmp
int
mov
icebp
test
int
pop
add
jmp
movsb
pop
cmpsl
push
sub
icebp
paddusw
xchg
out
dec
test
sbb
sub
in
cltd
mov
sbb
push
xchg
xchg
lock
aam
or
stos
sub
jbe
inc
or
ret
shrl
lea
pusha
je
jae
jo
test
pop
inc
jg
jb
and
jbe
push
ds
push
dec
rolb
jg
add
idiv
lcall
imul
xor
pop
test
outsb
cmpsl
xchg
jl
jns
scas
fs
mov
xchg
fcmovu
hlt
scas
arpl
inc
inc
mov
and
jnp
add
fcomps
mov
adc
jb
inc
xchg
ret
xor
inc
or
call
mov
and
push
dec
adc
addr16
test
and
pop
pmaddwd
sbb
and
mov
popa
xchg
inc
or
xlat
push
dec
loopne
mov
jae
mov
not
jle
loop
jmp
mov
lea
xlat
pop
lret
xor
js
adc
xorl
aad
mov
sub
jno
pop
test
insl
in
stc
pushf
addr16
jge
repz
add
popf
orb
mov
dec
xchg
jl
jg
leave
mov
push
pop
push
sbb
leave
mov
iret
andl
fisttpl
sbb
enter
mov
xor
jmp
sarb
imul
inc
int
mov
dec
jp
stc
gs
nop
mov
iret
push
xor
fwait
jbe
inc
cmp
add
flds
es
lret
cmp
aas
lock
arpl
xlat
push
cwtl
out
sub
mov
adc
fistpll
and
cld
pop
mov
sbb
loope
push
ds
xor
mov
sub
push
cld
add
sub
into
pop
pop
ljmp
jle
mov
or
or
adc
pop
adc
mov
mov
jmp
leave
pop
pop
push
push
mov
js
int
cs
lcall
stos
aad
hlt
sub
pop
lcall
repnz
push
or
inc
fsubrs
rcrl
sbb
jge
push
fdivrp
xchg
cltd
orb
je
cmp
add
xchg
std
repz
inc
cmp
add
add
add
sub
popa
dec
jl
pushf
loope
jae
add
into
or
inc
lods
sub
es
xor
test
in
out
inc
jne
aad
mov
mov
clc
add
out
ret
popa
and
inc
add
sbb
mov
aad
ss
pusha
mov
ret
sbb
pop
gs
clc
adc
xor
in
push
pop
in
in
shrb
xchg
cld
aad
fld
dec
les
inc
cmpsb
xor
sub
int3
adc
xchg
push
mov
test
adc
pop
cwtl
cmp
sahf
movsb
inc
les
mov
add
sub
popa
or
mov
add
mov
loopne
xchg
aam
push
xor
xor
test
sbb
cmpsl
and
in
push
test
mov
dec
ss
in
jne
mov
jle
sbb
mov
jg
jae
add
mov
cld
mov
or
cltd
int
ljmp
stos
sbb
jmp
or
xchg
psubsb
nop
jge
mov
jecxz
mov
imul
cmc
xchg
jge
jae
dec
sub
rolb
fldt
xor
push
aam
and
and
sbb
sub
testb
and
sbb
adc
xchg
jl
adcl
gs
push
sbb
shrb
inc
out
mov
cmpsb
mov
stos
ds
mov
push
loopne
or
push
test
fimull
das
sub
cmp
fs
mov
mov
push
call
call
not
xchg
stc
and
add
or
out
jle
inc
roll
and
sti
jmp
dec
mov
adc
mov
out
pop
insb
dec
jecxz
inc
or
xor
mov
dec
std
insb
mov
push
lods
test
aam
hlt
pop
sti
xlat
xchg
dec
daa
pop
jo
addr16
adc
int3
stos
cwtl
jecxz
pop
mov
jb
pop
pop
push
test
and
jecxz
loope
in
fnsave
inc
les
jg
gs
test
jle
fsts
push
scas
es
and
pusha
xchg
popf
cmp
test
hlt
mov
mov
lea
lds
out
jae
fcomip
in
push
lods
push
xchg
sub
test
fs
es
mov
les
outsb
sarb
sub
push
cltd
fstp
cmp
pop
lds
add
aas
test
xlat
mov
ja
scas
and
jl
stos
gs
inc
fldcw
add
add
icebp
hlt
cmp
cmp
xchg
rorl
aam
mov
pop
cmc
adc
mov
sub
push
je
std
lods
sti
pushw
dec
inc
cmpsb
xchg
mov
fiadds
js
xlat
cwtl
das
pushf
mov
dec
or
xchg
mov
mov
xchg
lcall
fwait
cmpsb
test
imul
loopne
repz
cmc
push
in
jge
jg
test
add
add
iret
xchg
push
mov
fwait
pushf
push
inc
arpl
fdivr
mov
inc
imul
xchg
adc
outsb
add
sbb
pop
cltd
addb
push
loopne
stos
pop
mov
inc
mov
mov
into
mov
pop
into
jb
mov
in
and
nop
mov
cmp
leave
sub
outsl
mov
push
jp
add
loope
inc
xchg
jbe
sahf
test
add
scas
add
out
idivb
jae
add
fidivs
mov
dec
incl
pop
lock
mov
jle
lret
cmp
stos
das
icebp
in
addr16
pop
imul
ljmp
hlt
mov
xchg
push
adc
xchg
lcall
cmp
mov
fildll
movsl
mov
clc
insb
in
jo
aas
mov
div
or
pop
jb
or
push
cmpsb
outsb
adc
and
lret
xlat
std
mov
rorb
adc
pop
enter
scas
xorl
mov
fwait
addr16
stos
xchg
js
aas
mov
aam
dec
lahf
pop
and
mov
push
mov
aaa
fsubs
int
stos
and
dec
jmp
push
lahf
test
sub
jle
cwtl
shrl
dec
sub
inc
imul
add
bound
mov
movsb
movsl
data16
test
les
std
mov
xchg
mov
add
add
add
xchg
repz
loopne
fadds
test
jge,pn
pop
pop
ret
xlat
int
jnp
pop
jo
sub
or
and
clc
aaa
mov
add
in
jae
aaa
shrl
ljmp
push
xchg
cld
outsb
sahf
std
add
sti
ljmp
aam
xor
mov
jns
pop
in
stos
cltd
imul
pop
cmc
decl
or
iret
cmp
mov
mov
sbb
cli
out
into
fisttps
adc
stos
xchg
imul
cmp
out
mov
push
sbb
pop
cmp
mov
mov
movsb
es
jne
add
outsl
sarb
dec
hlt
xor
pushf
movsl
scas
and
sti
gs
xor
mov
sub
popa
xor
clc
xor
repz
or
pushl
stos
inc
xor
sub
push
inc
pop
jno
scas
jge
mov
mov
sarb
mov
and
cld
das
test
jg
mov
test
push
fistps
sti
lds
popf
mov
mov
pop
push
shlb
je
push
push
xor
pop
movsb
add
hlt
jns
xor
adc
sbb
sbb
sahf
data16
mov
push
sahf
loope
push
out
into
and
jl
push
gs
fistpl
sub
jnp
out
and
sub
outsb
mov
push
xchg
cmpsb
jbe
nop
mov
in
push
lods
mov
xchg
int
shlb
cmp
sbb
mov
mov
out
in
adc
xchg
xchg
or
cmpsl
inc
je
sub
subl
lcall
out
lcall
push
sub
bound
sti
jle
int
sub
aad
lea
popf
cmp
xor
test
pop
rorl
mov
lret
fldenv
cld
fs
push
outsl
pop
aaa
xchg
adc
repnz
and
mov
jbe
stc
bound
movsb
insl
cmc
ret
inc
movsb
aad
mov
imul
test
in
rorl
and
and
xchg
jmp
pop
dec
or
push
lret
lock
jle
sub
aaa
jns
and
fildll
jo
mov
mov
push
and
push
fisubl
and
mov
push
enter
lret
orl
jecxz
mov
fcoms
lret
les
pusha
jmp
add
lahf
jb
outsl
call
aam
lock
cmp
dec
sbb
jno
adc
jno
test
arpl
sti
std
mov
mov
xchg
add
cmp
data16
mov
test
jne
and
lret
adc
adc
sub
fmull
fistl
lret
cmc
and
rorb
dec
pop
cmpsl
dec
lods
clc
jg
iret
xor
rclb
loop
loop
in
clc
ret
fs
loope
iret
rorb
push
test
lahf
mov
jb
aam
shrb
mov
rclb
popf
imul
pop
sbb
and
je
sub
push
dec
push
into
data16
add
in
inc
cld
cmpl
jp
and
popf
or
sub
jno
push
js
adc
repnz
push
pop
jge
andb
cltd
inc
dec
dec
iret
mov
int
mov
data16
pop
or
aad
adcb
mov
les
jb
lcall
insl
js
lds
stos
pop
or
decb
xor
push
xor
and
mov
rolb
loop
or
mov
jae
pushf
jb
inc
mov
cmc
orl
mov
sub
test
fdivrs
mov
cltd
push
or
xchg
mov
lea
mov
pop
repz
cld
or
cmp
sub
shll
clc
cmp
test
test
mov
iret
mov
movsl
outsl
in
mov
aam
cmp
mulb
pop
es
inc
imul
adc
mov
jl
mov
ret
mov
push
into
add
movl
mov
dec
dec
inc
or
xchg
mov
not
mov
movsb
mov
xorb
sti
imul
divl
call
add
ja
push
dec
shr
jg
push
mov
adc
sti
repz
cmc
add
add
out
dec
dec
es
pop
adc
lea
mov
jge
jns
add
push
pop
or
push
or
pop
add
mov
cwtl
shrl
sub
xchg
andb
add
lods
mov
push
in
xchg
lods
dec
cmpl
cmp
lahf
dec
adc
in
xor
cltd
idiv
add
push
sti
js
insl
dec
das
pop
dec
out
lock
jp
lret
jnp
and
repz
and
rcl
mov
lret
lcall
stos
ds
movsb
or
and
orb
mul
jb
pop
cmp
push
pop
fnstenv
dec
shrb
movl
add
add
imul
mov
nop
lret
sub
cld
enter
jecxz
mov
iret
push
inc
repz
rclb
adc
test
in
pop
shr
adc
mov
cmp
loopne
je
fidivrs
jg
js
punpcklbw
jo
enter
pop
pop
hlt
data16
push
pop
and
pcmpeqw
xchg
in
mov
mov
outsl
adc
cwtl
mov
mov
imul
sbb
bound
pop
xor
movsl
and
mov
push
adc
iret
pop
faddl
stos
cmp
icebp
imul
jl
nop
and
xor
fiadds
dec
and
loopne
jnp
es
flds
cs
mov
js
sbb
mov
scas
and
cmp
xor
xchg
cwtl
inc
pop
out
scas
mov
dec
in
sbb
mov
stc
pop
and
cli
sti
enter
stos
push
and
inc
scas
xor
cltd
and
xchg
jb
sahf
call
fwait
cmp
push
adc
jle
add
lret
stos
or
dec
cmp
jne
lret
dec
push
int
adc
fildll
pusha
fildll
jmp
and
sub
jmp
cmpsb
mov
xor
hlt
adc
lock
sub
push
add
pop
lds
int
fsqrt
mov
cltd
jo
jb
jno
xor
xor
mov
imul
jecxz
icebp
stc
mov
xchg
jecxz
loop
push
inc
jmp
cmc
add
scas
mov
stos
push
xchg
xor
sbb
enter
xchg
xor
pop
cmp
fisttpll
addr16
cmp
sub
and
push
ss
scas
pop
jbe
in
test
push
fwait
rolb
aam
inc
jno
inc
push
cwtl
inc
in
bound
or
pop
sbbb
cmp
inc
arpl
inc
mov
ss
adc
cwtl
sbb
xchg
ret
push
xchg
mov
idiv
or
mov
mov
insl
jp
xchg
lcall
rorl
mov
cmp
push
scas
popa
rorl
es
lock
std
jnp
sbb
popf
jp
movsb
jmp
add
push
sbb
mov
lock
int3
outsb
xchg
pop
push
pop
sbb
jne
and
sub
mov
rcr
das
inc
dec
mov
outsl
js
add
xchg
cli
es
pop
inc
adc
and
repz
cmpsb
and
cld
dec
jb
jecxz
push
pop
mov
add
les
add
jp
jns
mov
cmpsl
or
inc
cwtl
pop
pop
cs
into
jbe
inc
push
jg
out
jne
shrl
or
rcrb
inc
pushf
xor
dec
in
inc
das
pop
and
mov
xor
xchg
sub
xor
push
cld
repz
scas
xchg
in
loopne
aad
mov
aaa
sarl
cwtl
loop
stos
in
pop
and
lret
xor
jecxz
xchg
das
jno
add
jmp
pop
out
bsr
into
xor
cmpsl
dec
int3
sub
test
roll
sub
popa
mov
mov
ss
pop
in
sbb
imul
push
insl
jecxz
out
xor
mov
leave
cmp
or
aas
add
enter
adc
or
add
or
adc
jne
subl
cmp
and
movsb
repnz
in
fwait
adc
mov
rcl
or
add
insl
repz
xor
inc
add
fistl
fcoms
mov
add
movsl
nop
subl
ret
filds
pop
or
sub
add
add
movsl
push
movsl
shl
divl
sti
inc
ja
clc
add
in
add
add
mov
inc
xchg
or
cmp
inc
test
xchg
lock
movsb
mov
inc
das
xchg
iret
sbb
rol
xchg
xor
roll
sub
cmp
jmp
mov
mov
xchg
in
or
add
repnz
mov
xchg
into
xchg
pop
arpl
cmp
popf
scas
jg
jle
jg
fdivp
push
aaa
mov
cmp
cmp
out
icebp
sub
hlt
cmp
ret
jle
xchg
lea
daa
pop
mov
push
pop
fucomi
test
mov
aam
push
sbb
mov
xchg
dec
dec
fwait
inc
push
ljmp
dec
mov
pop
scas
sbb
pop
fdiv
imul
jbe
mov
or
sub
mov
int
mov
jge
pop
mov
imul
fcomp
jns
mov
inc
and
mov
mov
jbe
mov
and
mov
lods
enter
dec
mov
dec
mov
rclb
sub
ret
push
mov
mov
cmp
and
aad
push
andb
inc
aam
test
adc
mov
and
pusha
xor
jnp
mov
add
mov
pop
mov
out
outsb
pop
pop
adc
mov
cwtl
aaa
dec
sti
jne
jg
loope
push
pop
out
ss
insb
push
out
mov
and
push
dec
push
in
and
jecxz
adc
rclb
pop
dec
push
fidivl
fsubl
movsb
inc
outsb
aam
xor
enter
push
out
jmp
sub
inc
jo
push
es
sbb
sbb
fidivrs
fwait
sub
cmp
jbe
inc
push
sub
sub
mov
movsl
aaa
sub
cmp
jg
sbb
lea
popa
shll
add
iret
xor
push
xchg
imulb
insl
cmc
enter
sbb
pop
cmp
or
cld
aaa
jp
push
out
fsubs
jp
cmp
xor
jne
push
mov
popa
aam
daa
sbb
mov
cmpps
mov
cmpsb
jl
sub
aas
subb
jns
mov
pop
pop
and
jo
mov
or
mov
or
jb
enter
xor
sarl
or
inc
sbb
jge
insb
inc
lcall
es
jp
push
xchg
in
jae
cmp
jnp
call
shlb
call
cmc
cmpb
mov
cmp
ja
dec
or
xchg
incl
xchg
std
push
jl
out
aam
and
and
icebp
out
lahf
sbb
pop
xchg
adc
cmpsl
sahf
dec
dec
ds
or
stos
fimull
out
out
fcoms
loop
xchg
ljmp
mov
ljmp
push
mov
xchg
or
ja
inc
pop
jno
inc
xchg
flds
push
clc
pop
lock
push
cmp
jae
rcll
sbb
sub
push
sbb
mov
aad
stos
sub
les
in
pusha
mov
shrb
pop
mov
xchg
pop
xor
jmp
inc
mov
push
adc
int
addr16
add
stc
shl
and
int
in
cmp
cs
iret
dec
sub
push
adc
dec
nop
push
icebp
jne
xchg
cli
addr16
pop
hlt
les
hlt
pop
mov
movsl
sar
add
sbb
stos
inc
lcall
aas
in
push
outsb
orb
mov
cld
sbb
sbb
adc
sub
and
sbb
cmp
and
mov
pop
xor
mov
sub
int
push
repnz
adc
jbe
cmp
xchg
fimuls
movsl
mov
bnd
lret
rcrl
xchg
sub
or
dec
adc
jp
lret
sub
stc
ljmp
xchg
gs
fdivrl
sub
cmpsb
xor
jne
cmp
xor
cmp
mov
stos
int3
jb
out
and
fwait
lods
mov
or
pop
mov
xchg
js
cmc
pop
es
movsb
push
jae
push
jl
adc
push
loopne
int3
pop
rcrb
add
and
jae
mov
daa
cld
inc
stc
jno
andl
mov
add
inc
mov
push
sbb
