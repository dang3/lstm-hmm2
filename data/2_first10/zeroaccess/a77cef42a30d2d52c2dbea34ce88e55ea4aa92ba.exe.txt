push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
adc
mov
mov
push
ds
add
lds
mov
repnz
adc
out
ss
test
repz
fisubs
mov
int
cmp
icebp
arpl
call
pop
rcl
inc
dec
shll
jmp
cmp
dec
in
inc
lds
dec
xor
jnp
cmp
outsl
cmp
leave
xchg
rcrb
sbb
sarb
sti
loop
jge
loope
lret
mov
add
movsb
rcr
jl
mov
adc
repz
je
rorb
jnp
pop
and
or
leave
mov
shlb
jmp
xchg
jl
inc
mov
mov
adc
pop
lods
xchg
ss
aas
fisttpll
int3
wbinvd
rcll
mov
sub
in
inc
and
out
pop
div
mov
sahf
stc
leave
jmp
cltd
or
inc
leave
inc
mov
mov
int
cmpsb
test
mov
inc
cmpsl
pop
add
popa
jae,pt
push
sbb
dec
mov
in
adc
pop
gs
xor
aam
lds
inc
cli
jge
out
jae
or
or
fcomp
and
push
or
js
hlt
testl
push
xchg
jl
mov
xor
fdivrl
push
mov
xchg
repz
inc
mov
xchg
or
pusha
scas
mov
shrl
adc
cmpsb
and
adc
push
fdivrs
xchg
jne
sbb
sbb
jge
mov
stos
push
xor
rclb
daa
dec
pusha
mov
mov
push
incb
ret
mov
jne
sbb
dec
ret
sahf
mov
dec
pop
fldt
enter
movsl
popf
push
mov
add
hlt
stos
iret
fidivrs
push
repnz
cmp
cmp
pop
movsb
jnp
xcrypt-ecb
cmpsl
leave
mov
into
pop
and
or
pop
dec
leave
inc
leave
ret
loopne
enter
pop
out
add
push
mulb
sbb
and
cmp
ljmp
jmp
lea
rorb
pusha
jbe
mov
and
lret
loopne
mov
movsb
test
sub
adc
sub
mov
repnz
or
and
pop
test
adc
push
inc
cld
orb
sub
mov
and
cmc
mov
iret
cmp
pushf
inc
push
pop
sbb
add
or
jns
sub
jl
add
jp
addr16
pop
sbb
scas
in
cmp
xor
rorl
add
fists
mov
mov
pop
push
sbb
lods
fcoml
repz
movsl
dec
mov
int3
jbe
xchg
es
pushf
xchg
xchg
fistl
ficoms
aas
or
imul
add
in
cltd
pop
lea
adc
sbb
and
add
ja
ds
mov
loopne
arpl
mov
repz
adc
popl
dec
sub
dec
mov
push
mov
cmpsl
int
sbbb
fiaddl
mov
arpl
roll
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
mov
dec
out
cmp
mov
sub
mov
bound
test
scas
shll
lock
inc
pop
jecxz
xor
repnz
mov
push
pop
push
mov
nop
pop
mov
lret
jg
mov
insb
shlb
sub
imul
js
fstl
test
shrb
sbb
cld
jno
jl
inc
and
add
scas
jmp
mov
in
and
insb
sahf
jg
daa
push
mov
loope
pop
popa
xlat
fwait
cmp
fildl
enter
sub
pop
jmp
repnz
std
inc
mov
outsl
mov
insl
xchg
es
icebp
lcall
push
inc
ss
outsb
jg
es
enter
mov
dec
sahf
jle
aam
sub
pop
int
fdivr
sbb
cmp
xchg
and
pushf
xchg
sbb
dec
aaa
mov
cmp
andb
add
movsl
add
push
inc
xor
xchg
inc
in
dec
ret
push
aaa
cmpsb
mov
icebp
sub
cmp
mov
jl
xor
call
xor
dec
or
loopne
in
cwtl
push
and
sbb
jg
mov
je
push
sbb
pop
imul
cmpsl
or
jns
jle
gs
ret
cmp
push
icebp
icebp
and
sarl
popa
jl
inc
icebp
dec
mov
cmpsb
ficoml
cltd
cs
lret
imul
gs
fcoms
mov
push
adc
lcall
mov
push
ret
push
gs
sbb
pop
dec
pop
sub
pop
lret
xor
mov
xchg
xchg
pop
push
repnz
mov
fisttpll
xor
push
in
ret
pushf
test
sbb
mov
sub
sarl
mov
iret
test
mov
sub
mov
stos
lea
dec
inc
jle
dec
rcr
pop
sub
addb
adc
add
lock
cmpsb
jns
cmpsb
ja
stc
and
aas
sbb
push
into
leave
scas
sub
repz
imul
jge
mov
adc
das
bnd
dec
add
into
push
int
xor
aam
mov
js
jno
inc
ljmp
lock
sub
mov
mov
ja
test
jge
xlat
cltd
fs
xchg
cmpsb
loope
dec
xor
pop
mov
fnstenv
mov
jbe
ja
xor
imul
pop
mov
mov
dec
push
dec
stos
jg
cmp
int3
mov
jle
aam
mov
mov
repnz
jo
mov
cld
test
movsl
sti
jl
mov
sarb
mov
sbb
xchg
lret
mov
cmp
or
jp
out
mov
popa
nop
cltd
cltd
cmc
loopne
pop
cmc
mov
loopne
das
or
bound
enter
and
mov
je
stos
repnz
es
xchg
daa
int
aad
adc
jl
xor
jbe
sbb
ja
fidivs
lcall
inc
lret
push
out
fstpt
addl
iret
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
movsb
mov
les
xchg
popa
imul
cmpsl
mov
push
dec
mov
insb
adc
jnp
sbb
fsubrs
xor
shll
xchg
sti
jbe
pushf
mov
add
mov
push
in
into
fcom
sub
out
or
lods
outsb
or
push
out
fdiv
mov
pop
adc
lods
mulb
push
pusha
jge
push
or
dec
add
mov
lcall
xlat
cmp
andb
push
js
iret
lea
jno
bound
or
adc
aam
test
push
imul
or
pop
inc
fcoml
sarl
shlb
vmwrite
outsl
test
stc
into
fisttps
pop
mov
and
pop
mov
cmp
inc
mov
jle
pop
loope
loop
and
mov
pop
mov
push
sub
xchg
sub
and
push
sbb
int
xor
push
cmp
into
mov
add
mov
in
outsl
pop
lcall
push
shl
lea
lea
ror
or
xor
cs
test
andb
push
out
js
sarl
hlt
inc
fildl
test
push
dec
mov
mov
adcb
repnz
and
cmp
stos
scas
xor
pop
in
and
addl
mov
pop
sahf
inc
mov
add
repz
pop
mov
lahf
push
divb
ds
mov
hlt
js
dec
inc
dec
pop
scas
mov
ffree
int
shrl
repnz
mov
mov
lods
xorb
sbbb
pop
xlat
iret
mov
push
dec
cltd
or
mov
shlb
test
int
fwait
add
inc
imul
sahf
in
nop
sahf
sbb
push
loopne
test
jl
pushf
test
scas
aas
negl
cmp
aaa
mov
stc
and
xchg
out
mov
xor
adc
pop
inc
iret
fs
xchg
dec
iret
adc
jg
das
sarb
ficompl
je
lock
sub
mov
xor
jnp
les
sub
aaa
cmpsl
pop
mov
popf
fidivrl
pop
stos
mov
adc
out
adc
mov
lret
out
mov
jae
mov
in
out
push
inc
std
fnstenv
or
decb
lret
out
sbb
pop
add
adc
cmp
lret
cmpsl
repnz
cmc
flds
iret
jg
paddusw
frstor
adc
fcompl
movsb
out
jl
pop
mov
and
or
and
sbb
jo
and
imul
mov
sub
cmp
outsl
ljmp
rorl
xlat
push
repz
xor
push
shlb
imull
daa
ljmp
mov
or
shlb
adc
popf
jge
rclb
dec
inc
popf
fs
adc
mov
push
sub
add
inc
xchg
outsl
inc
add
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
lods
jmp
sahf
mov
les
mov
ret
testb
clc
cmp
clc
stos
lock
add
jl
add
repnz
std
shrb
out
adc
cltd
scas
lret
addr16
std
scas
mov
sbb
pop
dec
inc
lahf
adc
inc
mov
inc
xchg
push
adc
dec
int3
aad
sbb
cltd
pop
push
push
jmp
dec
outsl
xchg
mov
sahf
mov
jb
in
ret
sub
movsb
fdiv
enter
add
push
mov
sti
inc
call
test
dec
test
push
push
push
jns
add
dec
jb
cmp
add
xlat
movsl
sbb
test
in
jb
into
int
and
pop
fmuls
push
push
fimull
sbb
mov
cltd
jne
out
push
lea
xor
pop
sbb
adc
sub
fbstp
jle
sub
jmp
jbe
outsb
fsubrs
lret
loopne
leave
mov
pusha
insb
test
cmp
mov
xor
add
inc
out
and
sbb
mov
out
and
or
ljmp
jo
fnstcw
shr
mov
pop
sbb
repz
fsubl
sbb
int3
ret
jg
pop
or
push
ljmp
push
adc
enter
jle
ret
xchg
push
add
xchg
push
daa
jns
je
out
mov
dec
push
cmp
fimuls
mov
cs
or
xor
jnp
add
sub
inc
or
insb
int
inc
rcrl
cmpsb
arpl
fiadds
sub
add
mov
mov
cmp
or
add
adc
push
push
js
mov
fistps
lcall
cmp
orl
and
cmp
das
add
insb
sub
int
mov
fbld
lods
orl
cmp
popa
mov
shll
pusha
xchg
gs
lds
jl
cmp
dec
mov
call
or
outsl
jbe
call
int
xchg
or
push
cmp
cmp
js
clc
adc
and
sti
push
cmpsl
scas
js
and
scas
in
daa
les
cmp
adc
and
std
and
idivb
mov
mulb
xor
pop
xor
std
push
push
arpl
in
xchg
sub
int
roll
shlb
orl
stos
add
repnz
xor
push
mov
lcall
pop
push
xor
inc
jno
jnp
das
sbb
fiaddl
mov
ja
dec
jo
addr16
adc
std
cmpsl
adc
or
fmulp
ja
daa
daa
es
gs
dec
lock
mov
movl
mov
stos
inc
in
ds
test
pushf
mov
and
mov
add
lret
in
lahf
xchg
imul
insl
lret
dec
xchg
fcoms
outsb
push
shlb
pop
lret
jno
fstpt
pop
jge
lahf
jmp
mov
inc
inc
inc
outsb
test
daa
push
pop
outsb
push
push
das
xor
xchg
repz
xchg
pop
ljmp
add
sbbl
call
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
or
xor
mov
les
mov
mov
fdivr
pop
loopne
xchg
jno
aaa
sbbb
ja
js
jle
inc
and
loop
andl
rcll
push
mov
or
hlt
repz
pop
adc
cs
aad
punpcklwd
push
iret
fnsave
push
sti
popf
sub
add
jg
mov
inc
or
out
push
shll
nop
lock
push
fadds
adc
adc
push
push
gs
or
dec
cli
cmp
sbb
insl
lret
pop
xchg
mov
mov
ficompl
std
cltd
rcrb
nop
into
fistpl
in
pop
fbstp
mov
jmp
rol
int3
icebp
xchg
pop
sbb
pop
sub
xchg
lock
push
xor
loope
push
mov
ret
and
das
out
pop
sub
mov
mov
xchg
in
aam
inc
jns
inc
gs
adc
mov
xor
jbe
mov
ret
es
pop
test
leave
sbb
add
mov
popa
add
adc
out
adc
jno
sub
mov
xchg
xchg
idiv
sub
pop
adc
jo
fmuls
adc
lods
add
popfw
pop
or
pop
push
mov
dec
push
out
dec
push
push
jmp
dec
push
cmpsb
sti
sahf
push
out
sub
mov
sbb
pop
mov
mov
addr16
mov
movsb
js
push
push
insl
add
and
shll
aad
sub
arpl
movsb
pop
fisubl
or
cmpsb
cmc
dec
and
pop
push
jbe
push
ljmp
imul
test
pop
nop
les
imul
cmp
jmp
cmp
jne
out
add
mov
xchg
mov
dec
pop
push
filds
push
jecxz
imul
aas
daa
mov
nop
orb
out
loop
or
in
loop
mov
sti
aam
lcall
push
mov
fimuls
cli
pop
scas
test
cwtl
jae
mov
mov
inc
push
cbtw
cmp
dec
xchg
das
sub
xor
das
shll
add
or
or
cli
mov
popa
inc
stos
shll
sub
xchg
xchg
loop
cmp
mov
xchg
hlt
cmp
xchg
mov
adc
sub
fldt
addr16
dec
sbb
xchg
ret
cmp
outsb
pushf
xchg
leave
or
mov
xor
xor
repz
outsl
fimull
scas
ja
les
std
frndint
test
and
xchg
jp
xor
pop
xor
add
pop
es
aad
ret
or
mov
jno
es
jmp
subb
cmp
mov
mov
mov
das
sbb
jbe
or
cld
adc
mov
insl
js
imul
and
repnz
pop
dec
into
mov
add
push
js
or
jne
and
xor
lds
mov
iret
test
sar
or
add
sbb
aad
cmp
dec
xchg
les
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
aas
mov
les
xchg
cmp
into
inc
ja
je
adc
in
cltd
cld
fdivrl
xorl
ret
mov
mov
dec
cmp
cwtl
dec
in
imul
dec
aad
aaa
mov
cltd
mov
hlt
dec
cli
adc
dec
lret
mov
push
fidivl
scas
push
hlt
inc
sub
push
sarb
test
fcmovnb
popf
lret
xor
imul
xlat
sub
jnp
stos
bound
inc
mov
ret
add
mov
jg
lcall
xchg
and
mov
and
wbinvd
shrl
rcrl
ror
pop
xchg
cli
adc
mov
lahf
movsb
or
jae
push
std
jle
or
pop
xor
cwtl
lret
fnstcw
scas
xlat
fimull
sub
mov
ror
mov
push
arpl
test
in
rcll
test
loop
or
jnp
xor
inc
and
pinsrw
or
dec
pop
sbb
test
mov
fs
dec
push
xchg
call
frstor
pop
stos
pop
dec
xchg
movsl
lock
in
mov
and
xchg
pop
jns
shrl
fcoms
aas
sub
inc
adc
jae
xor
jge
int
int3
and
ret
pcmpgtd
jne
iret
shlb
xor
lahf
packssdw
jmp
xchg
inc
insb
xorl
mov
cltd
adc
mov
aaa
push
cmp
lods
xchg
push
add
shrb
sbb
popf
test
movsb
ficomps
in
fcmovnbe
inc
neg
inc
xchg
enter
fbstp
xchg
je
or
cmp
adc
lods
jmp
xchg
xchg
cltd
and
xor
lds
leave
mov
lea
push
lahf
or
dec
lods
int
lcall
jp
inc
lret
push
and
inc
daa
mov
mov
add
jbe
lcall
andl
xlat
mov
mov
bound
xchg
decb
aad
inc
xchg
jecxz
mov
push
into
xor
inc
inc
jo
clc
cli
cmp
into
movsb
xlat
mov
sbb
mov
dec
inc
xchg
sbb
mov
pusha
fs
dec
mov
xchg
mov
xor
mov
fdivl
cmp
sbb
movsb
adc
push
and
xor
leave
push
imul
push
into
push
jp
in
in
addr16
in
fs
pusha
add
inc
out
mov
cwtl
imul
xor
std
es
cmc
and
xor
adc
sub
and
imulb
lods
aad
orl
sbb
scas
stc
repz
popf
fcmovnu
jo
sbb
lahf
icebp
fldl2t
movntps
mov
xchg
pop
mov
dec
xchg
mov
arpl
inc
in
cwtl
cli
sbb
inc
push
cltd
notb
mov
jne
shr
cmp
out
dec
dec
gs
movsb
shl
jg
lcall
jmp
mov
call
mov
sbb
int
adc
mov
and
push
push
leave
mov
into
lret
lds
cmp
test
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fucomp
fists
mov
pop
je
ret
fwait
pusha
mov
pop
lds
xlat
psubd
pusha
adc
add
icebp
xchg
ljmp
mov
adc
imul
jge
xor
daa
rcrl
push
int3
leave
sub
pop
adc
dec
mov
sub
inc
sti
fsubr
xchg
add
mov
int
pop
loope
decb
lahf
test
push
jle
sahf
in
fucom
iret
gs
cmp
inc
and
sti
imul
lock
fistl
and
add
dec
repz
sub
mov
jl
add
fmuls
cmp
or
flds
xor
insb
inc
mov
aad
add
cmc
xor
aad
rcrl
mov
mov
sub
jne
cmp
xchg
je
mov
xchg
xlat
cmp
repnz
lret
int
pushf
dec
add
xor
daa
mov
and
mov
enter
pop
pop
xchg
sbb
imul
adc
push
sub
in
xor
rcrb
sbb
dec
mov
fldt
xor
mov
pop
inc
push
add
rorb
jno
mov
mov
sbb
add
or
js
fisubl
ds
in
call
movsb
pop
adc
stos
cs
aas
ret
aaa
loopne
xlat
mov
mov
dec
jle
dec
inc
xchg
dec
xor
dec
std
out
xchg
sub
dec
aaa
pop
subb
add
xchg
aas
call
das
bound
pushl
jecxz
stos
pusha
xchg
sbb
clc
jecxz
lds
clc
icebp
lock
fwait
rcr
mov
lcall
mov
sub
mov
push
mov
or
xor
mov
stos
mov
shll
dec
roll
adc
adc
sti
sub
xor
push
inc
and
mov
mov
dec
and
inc
and
or
clc
push
or
sarb
mov
insl
xor
adc
pop
icebp
mov
icebp
addr16
sbb
test
mov
testl
jno
sarl
ljmp
jo
or
pop
push
or
xor
inc
je
xchg
jo
aam
push
imulb
nop
lahf
push
dec
std
push
jp
cmp
mov
imul
ficoms
fiadds
ffree
add
mov
mov
cmc
mov
adc
xchg
push
pop
mov
and
pop
mov
cli
xor
out
mov
mov
inc
and
pop
sbb
aam
lods
add
lret
sahf
ljmp
lods
sub
sbb
jp
fstps
mov
or
iret
sub
and
pop
mov
int
cmp
inc
ss
lcall
dec
jns
xchg
jmp
mov
stc
add
in
sti
or
or
std
push
idivl
adc
sub
cmp
push
imulb
mov
jge
stos
push
jbe
push
adc
jmp
push
xchg
mov
xor
pop
xchg
test
movsb
adc
cwtl
cwtl
or
cmp
sarb
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
xchg
jg
xor
inc
fadds
test
add
dec
mov
sub
push
sbb
in
out
push
jle
leave
push
jecxz
sbb
ss
xchg
xor
in
movl
das
sub
cmc
leave
pop
or
cmp
pop
pop
ds
adc
pop
icebp
push
gs
repz
cli
fnsave
jb
fldt
cmp
mov
push
or
mov
mov
fsubrp
shlb
xchg
in
call
mov
repnz
lcall
sub
imul
int3
or
outsl
xchg
mov
mov
in
ds
and
mov
in
loop
dec
adc
test
dec
push
fwait
lret
mov
cmp
xor
shlb
sbb
movsl
cmp
subb
push
and
loopne
adc
fstpl
adc
stos
movsl
pusha
cmc
cwtl
cmpb
jne
cmc
je
xchg
adc
pop
jecxz
and
mov
decb
adc
addr16
cmpsl
cmp
bound
movsb
xor
aas
push
and
out
jae
push
fistl
mov
rclb
xor
add
inc
xlat
arpl
ret
call
test
inc
jo
cli
inc
mov
push
mov
xchg
xor
loop
inc
and
push
cmp
lock
inc
xor
push
and
cmp
adc
outsl
jmp
lahf
iret
filds
or
dec
xchg
sub
fstl
and
out
insl
stos
cli
fidivrs
mov
out
out
mov
mov
lods
pop
jno
push
loopne
push
fistpll
aad
sbb
jmp
jne
test
and
fwait
and
and
jecxz
pop
rclb
inc
adc
jle
xchg
dec
imul
dec
sbb
or
subb
movsl
mov
mov
dec
mov
push
add
mov
add
push
cld
pop
out
jecxz
inc
mov
push
cmpsb
outsl
cltd
fbstp
jno
popl
loopne
cmpsl
mov
push
add
jg
ret
mov
ds
lea
nop
outsb
adc
lock
aad
xchg
int
cmp
inc
jbe
int3
rorl
rclb
add
in
jnp
xchg
mov
inc
ret
test
xchg
mov
mov
xorl
fmuls
push
test
mov
push
jo
lds
nop
sarl
mov
arpl
xlat
out
subb
daa
aas
cmp
jmp
xlat
xor
pop
in
mov
stc
mov
pop
lock
test
icebp
sub
mov
push
push
shll
out
insl
adc
insl
lret
mov
xchg
js
cmc
pop
or
fcoms
xor
leave
inc
add
sbb
adc
rcll
jge
and
fs
cmp
aas
enter
fs
inc
mov
push
inc
pop
push
mov
mov
mov
add
xor
lret
adc
mov
or
xchg
sahf
and
adc
jb
cmp
rorb
ret
and
or
movzwl
and
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
ror
lods
movsb
mov
les
xchg
cmpsl
fnstsw
xchg
or
out
add
inc
into
mov
lock
fmuls
push
test
cmp
lock
mov
sub
addr16
xchg
push
or
jmp
push
fadds
ja
aad
push
push
cmpsl
jg
mov
repz
mov
dec
mov
mov
push
js
jb
add
pop
add
lods
fcoms
xchg
in
rcl
xchg
xor
negb
and
or
jg
mov
lahf
decl
fstpt
sub
gs
fcoml
sahf
mov
addr16
cmp
inc
loope
jecxz
jle
into
jo
jne
mov
xlat
aaa
imull
int
sbb
scas
xchg
into
ret
fisubs
inc
mov
into
mov
xchg
int
mov
add
jle
mov
aas
jmp
xor
or
mov
jo
mov
mov
stos
cmp
cmpsl
mov
sar
add
mov
pop
movsb
scas
or
and
insb
push
inc
lret
adc
sbbb
jg
imul
mov
xchg
lods
aaa
xchg
pop
sar
lds
sbb
xor
cmpl
mov
mov
xchg
ficoms
mov
push
or
imul
ret
push
fsubl
lods
testl
mov
rcr
stc
xlat
cmp
in
cmp
dec
dec
mov
ficoml
cmp
scas
xchg
iret
outsl
inc
lret
and
dec
addr16
cmp
lret
push
sub
jle
dec
punpcklbw
dec
mov
pop
rorl
dec
mov
mov
rcrl
in
add
jbe
addl
jmp
into
es
sti
and
inc
dec
adc
mov
ljmp
and
popa
call
sub
call
bound
mov
sti
xchg
xchg
xor
inc
movsb
out
test
mov
xchg
mov
add
sbb
rcrb
test
scas
mov
arpl
outsl
add
test
pop
test
mov
les
mov
lock
mov
pop
jge
nop
pop
rorb
mov
ja
mov
mov
stc
and
icebp
stos
lods
mov
sbb
xor
insl
xor
xchg
dec
adc
mov
test
fcompl
shlb
popa
es
pop
pop
cmc
dec
sub
or
mov
inc
mov
add
or
ret
sub
jns
lea
or
xchg
iret
test
jae
stc
daa
sub
test
pop
std
jae
mov
cmpb
cmp
adc
mov
add
inc
lcall
pop
push
or
cmp
xchg
roll
pop
repnz
aaa
sub
imul
and
icebp
sbb
les
jo
in
push
mov
mov
dec
jae
adc
add
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
cmpsl
adc
cmp
lahf
sbb
xor
ja
stos
stos
xor
jb
scas
incb
call
out
cmp
push
jmp
loope
inc
cmp
inc
mov
bound
or
cmp
repnz
aam
dec
pushl
pushf
lds
dec
call
pop
ljmp
adc
mov
inc
cmp
outsb
rol
and
in
lret
cmp
imul
ret
rolb
dec
sbb
push
inc
mov
cltd
test
lock
jno
jp
push
sbb
gs
inc
add
mov
test
mov
cmc
sub
jns
mov
repnz
or
movb
mov
in
ds
dec
loop
push
inc
add
mov
sbb
push
or
mov
ja
in
popa
xor
fsubl
adc
movsl
or
lods
lret
dec
sti
in
xor
mov
adc
pop
xchg
test
pop
lret
push
je
insb
test
rcrl
js
or
scas
pop
dec
inc
mov
pop
movsb
ficompl
out
imul
xchg
ret
adc
fld
daa
sbb
lods
pop
dec
dec
cmc
adc
xchg
mov
aad
mov
dec
test
jo
push
orb
cs
xchg
iret
test
int
bound
loop
loopne
nop
test
jle
ds
mulb
and
mov
pop
mov
xor
out
aad
push
cmp
das
loopne
inc
bound
out
ss
je
mov
or
pop
mov
dec
testb
pop
or
push
lea
les
adc
sti
aam
popa
fldcw
pop
test
ds
int
pop
sbb
filds
lret
out
sub
and
adc
movsl
cltd
int
push
out
push
mov
push
push
js
cmpsl
mov
push
jbe
adc
xor
int3
sahf
mov
shlb
mov
es
or
loope
aas
insl
arpl
pop
mov
adc
inc
add
mov
int
sub
loop
xorb
outsb
push
aad
mov
xlat
jg
pop
fs
mov
add
mov
ret
enter
add
jbe
shl
gs
sbb
add
inc
mov
test
cmc
mov
fdivrp
mov
les
mov
es
dec
shrl
push
stos
xchg
ljmp
pusha
mov
inc
outsl
jmp
jg
mov
jo
dec
mov
sub
mov
jecxz
iret
sbb
movsl
xor
das
mov
and
adc
aam
xor
ret
mov
xor
jmp
push
inc
or
movsl
nop
sub
rcr
jno
inc
xorb
outsl
xchg
fs
test
arpl
mov
lea
push
fs
out
lret
pop
mov
mov
or
enter
jge
outsl
std
push
and
pop
rcrb
inc
xlat
mov
and
dec
push
or
inc
rorb
enter
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
loope
mov
mov
mov
ds
sub
push
out
add
fdivr
jb
in
cmp
mull
xor
or
repz
jle
inc
sbb
push
das
push
idivl
add
sub
repz
jmp
aas
aaa
rolb
mov
fnstcw
frstor
cmp
movsb
pop
add
js
or
fisttps
in
adcl
jg
pop
and
add
cld
dec
ja
shll
jmp
pushf
mov
pop
push
aam
and
pusha
cmpsl
mov
out
outsb
fcoml
jmp
aam
sar
xchg
adc
jnp
adc
into
lret
mov
mov
out
cld
shl
fbstp
in
jmp
cmp
sbb
cwtl
and
xchg
popf
add
push
mov
sub
inc
xchg
subl
dec
scas
notb
dec
sbb
inc
ja
icebp
push
sahf
lahf
xor
hlt
iret
ficomps
pop
fildll
out
cmpsl
fcmovnbe
xchg
cld
adc
gs
popa
and
call
clc
mov
pop
push
rcrl
jge
or
push
aam
fs
jl
xchg
stos
je
insb
mov
jp
fcompp
insl
fldt
mov
dec
rol
add
loope
imul
cwtl
loopne
cmc
adc
add
and
mov
add
sbb
shll
inc
jo
or
mov
jle
mov
xchg
lods
stos
and
andl
dec
xchg
inc
arpl
loop
movsb
mov
jne
xchg
adc
movb
or
push
xchg
out
gs
std
and
es
mov
and
xor
jecxz
test
ret
mov
dec
adc
out
aam
xor
inc
inc
add
arpl
xlat
in
sbb
mov
jbe
jnp
aam
adc
dec
ss
dec
enter
xor
sbb
xchg
pop
popa
sub
sbb
test
and
test
add
sub
in
adc
aaa
sub
scas
push
and
lahf
sbb
jle
sub
add
mov
lret
pop
mov
aas
inc
loop
and
jecxz
xchg
add
pop
test
sbb
or
xor
xor
cmp
mov
dec
cmp
and
out
jl
dec
in
and
pop
loopne
out
insl
scas
rol
mov
ficomps
adc
in
sub
mov
jno
int
and
cmp
fs
das
push
mov
adc
mov
adcl
add
pop
insl
scas
hlt
mov
push
sub
enter
pop
outsb
fstp
cmp
pop
inc
icebp
mov
into
orb
sbb
in
lret
movsb
mov
cld
les
ja
xor
xor
mov
cwtl
push
inc
mov
fwait
jecxz
loope
jbe
bound
inc
add
roll
cmp
and
pop
mov
pop
fists
arpl
pop
aaa
fcompl
ljmp
add
in
push
mov
lods
push
adc
mov
pushf
inc
shlb
xchg
jbe
sub
pop
sbb
rol
data16
ds
or
and
in
es
pop
fidivrl
out
push
cmp
mov
movsb
ret
subl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
sbb
mov
mov
pop
mov
aaa
shr
cmpsb
xor
sub
scas
add
sbb
mov
call
or
aas
and
roll
inc
push
push
daa
mov
movsl
jo
imull
mov
repnz
pop
cmp
sub
adc
mov
movsb
cmp
push
jmp
sbb
rolb
fdivr
lahf
inc
cmovs
sahf
dec
mov
inc
cmp
pop
test
jae
mov
addr16
cmc
pop
pop
enter
in
out
stos
mov
imul
lahf
clc
fsqrt
pop
and
lcall
lock
repnz
ja
jge
popf
stc
test
loop
outsl
insl
imul
scas
out
stc
lock
mov
mov
cli
ret
je
pop
adc
jbe
lahf
dec
mov
insb
xlat
cmpsb
sub
mov
push
ljmp
add
dec
ja
sbb
pop
int3
dec
xlat
sub
fcmovbe
dec
data16
das
rorb
inc
add
sub
adc
xor
jp
test
insb
mov
adc
dec
lahf
in
outsl
or
jecxz
addb
adc
push
xchg
xor
jge
insb
dec
sub
stos
clc
in
jp
lock
pop
cmpsb
xor
ret
lods
xchg
lahf
push
pop
and
insb
dec
mov
lock
pop
inc
add
test
jne
repz
nop
jl
insl
add
pop
lds
fnstcw
cmp
in
loopne
lods
ror
push
add
scas
xor
ret
sub
jae
dec
jnp
stc
cltd
mov
fcomip
popa
xchg
fcmovbe
lods
fdivr
imul
jp
jne
mov
enter
jns
add
xchg
ja
mov
ljmp
pop
rcrl
loope
or
push
mov
loope
cmp
jecxz
sbb
push
das
hlt
jbe
stos
jo
sub
mov
mov
mov
jns
and
das
fs
and
xchg
je
aaa
mov
inc
mov
lea
inc
mov
adcl
lds
push
sti
or
dec
push
cmc
aas
mov
gs
sbb
rclb
sbb
mov
mov
test
inc
mov
dec
push
xchg
loope
dec
dec
pop
stos
clc
mov
icebp
sub
loope
mov
dec
aam
inc
cwtl
in
jno
sub
mov
mov
inc
or
dec
dec
scas
aam
mov
or
mov
nop
stos
in
mov
daa
mov
xor
mov
jb
loope
out
add
arpl
adc
es
call
jne,pn
inc
rcll
dec
dec
lahf
dec
ss
or
lcall
mov
icebp
push
filds
push
mov
adc
in
lahf
imul
push
jne
fld
int3
fmul
jb
sub
in
dec
sbb
orb
loope
adc
xchg
jl
xchg
mov
push
lods
dec
sbb
dec
sbb
aad
enter
ss
aas
iret
cltd
or
pusha
cmc
and
mov
sub
mov
mov
out
roll
push
cmp
and
mov
dec
ret
add
mov
out
pop
mov
jns
es
sahf
adc
aad
mov
ret
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
jecxz
xchg
mov
les
fisubl
mov
jl
adc
pop
xor
repnz
and
mov
fisttpl
and
mov
cmp
test
sbb
lea
psubsw
stos
mov
pushf
mov
cmp
sbb
insb
in
shl
out
mov
pop
fdivrl
sbb
in
repz
cmpxchg
test
faddl
adc
xchg
jno
idivl
into
in
xchg
add
jl
add
lock
out
sub
push
nop
pop
ror
popf
enter
in
outsl
inc
pusha
xor
dec
adc
repz
aaa
aas
iret
cli
pop
lea
xchg
daa
popf
pop
ds
icebp
or
sub
sub
mov
sub
pop
cwtl
cmp
adc
add
out
sub
shrl
cmp
sbb
sarb
loope
mov
ds
test
pop
cmp
in
jnp
xchg
daa
sbb
addr16
fstl
movsl
mov
in
inc
stos
cmp
ficomps
mov
pop
jb
insb
cmp
or
sub
add
add
pop
dec
js
mov
jecxz
stc
jle
inc
clc
mov
mov
out
pop
jmp
arpl
out
mov
shl
pushf
push
or
std
and
xchg
lock
sbb
push
xor
les
ds
xchg
mov
mov
lea
and
fidivs
cs
cmp
test
sub
cltd
cwtl
fdivrs
add
pop
rcrl
pop
sub
push
xor
jmp
lock
dec
sar
sub
xor
add
inc
movl
and
pop
out
xor
out
xor
mov
mov
int3
pop
mov
mov
ret
out
lds
in
popa
fildll
sub
adcb
xchg
xor
cltd
xor
into
je
push
in
enter
out
add
shl
inc
test
xlat
popf
xchg
shrl
lret
xchg
jb
mov
outsl
xchg
aaa
push
lcall
nop
scas
cmpsb
lret
ror
iret
push
xor
stos
inc
inc
incl
push
lds
cmp
leave
repz
imul
mov
pushl
dec
fldenv
or
sbb
cmc
les
xor
inc
rcll
push
or
jns
sahf
imul
dec
dec
push
out
pushf
ss
aam
mov
cmpb
mov
je
inc
inc
in
mov
outsb
ss
repnz
fiaddl
xor
sub
outsl
ja
inc
add
negl
cltd
test
out
gs
push
or
call
push
or
bound
fstpt
cwtl
stos
or
aaa
push
fwait
jnp
mov
mov
std
loop
movsl
pop
pop
xchg
ja
pop
stos
shll
and
cltd
sbb
sub
sub
sbb
jecxz
cmp
es
push
enter
es
pop
aam
or
push
aam
xor
fwait
push
out
dec
aam
or
paddw
sbb
mov
cmc
out
in
add
aaa
push
ficoml
xor
mov
lds
movb
mov
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
adc
sbb
mov
les
fildl
lahf
sarb
roll
push
mov
ds
inc
inc
add
cmp
gs
imul
adc
lock
xlat
ret
sub
push
mov
imul
xor
or
cltd
jns
sbb
adcl
xlat
mov
adc
out
out
or
xchg
shr
jmp
lea
sbb
or
xorl
push
movsl
stos
and
inc
lods
push
xchg
xlat
xor
sti
or
cmp
fidivs
push
push
mov
test
loopne
mov
push
stos
stc
pop
into
mov
outsl
mov
insb
leave
push
and
ds
cmpl
lock
jbe
mov
pop
dec
mov
gs
js
mov
xchg
lcall
addl
xchg
xchg
loopne
scas
push
loope
mov
fcmovb
xchg
cmp
insb
sub
mov
ja
dec
call
pop
out
jmp
add
or
add
out
add
lret
mov
jno
clc
arpl
sbb
add
stos
add
call
lahf
lret
ds
ds
movsl
mov
fdivs
xchg
addr16
loopne
insb
sub
cmpsb
sub
mov
int
and
scas
mov
out
decb
sub
jns
jbe
jg
sbb
xor
xchg
mov
sub
loop
add
fldl
xchg
sahf
jle
aaa
adc
pop
xor
and
jb
jle
adc
pop
jb
mov
sbb
or
stos
cmc
sub
pop
out
sarl
push
fwait
std
mov
mov
pop
in
dec
aas
mov
pop
scas
cmp
mov
or
clc
xchg
push
push
cmp
and
mov
dec
mov
cmp
adc
cmc
enter
dec
popl
sbb
dec
cmp
push
mov
lret
dec
mov
mulb
mov
cld
in
adc
imul
jg
jne
push
test
call
mov
mov
movsl
sti
mov
loopne
ss
and
outsb
mov
push
mov
adc
insl
cmp
add
mov
cmp
aaa
add
std
add
fstpl
std
inc
lahf
cwtl
popl
stos
dec
xor
xchg
push
pop
iret
mov
push
push
cmpb
loopne
loop
and
xlat
jmp
shll
mov
stc
adc
scas
vunpckhps
rcll
and
sub
sub
int
xchg
pop
pop
pop
arpl
xchg
cmp
in
nop
scas
inc
mov
notb
push
mov
sub
add
adc
or
lret
mov
pop
sti
popf
fucom
mov
pusha
xlat
inc
mov
cmp
stos
jno
in
fldt
gs
sub
xchg
pop
mov
lods
aaa
mov
loop
sbb
unpckhps
cmp
dec
insb
push
filds
sub
inc
push
les
int
scas
add
sub
daa
xchg
jg
dec
orb
and
arpl
mov
out
jo
dec
or
int3
cmp
iret
xor
or
mov
dec
not
jmp
int
mov
sbb
mov
shl
repz
les
fstps
mov
jne
push
inc
jns
ret
fnsave
jnp
popf
sub
pop
jnp
loope
popa
cltd
pusha
call
jae
push
dec
push
imul
jns
sbb
mov
jns
adc
lahf
loop
popl
sahf
sti
and
mov
sahf
push
mov
xorl
leave
mov
mov
push
sub
dec
lahf
jbe
add
mov
mov
mov
inc
test
addr16
fstpt
outsb
adc
movsb
leave
popa
mov
adc
cmc
mov
dec
push
add
mov
mov
iret
mov
fistps
pop
cltd
cmp
push
es
test
cmc
sub
inc
sti
and
pop
mov
sub
lret
inc
mov
pop
jecxz
movsl
mov
aaa
pop
into
sbb
lea
dec
lods
dec
in
stos
inc
jbe
xlat
dec
push
fwait
cld
xor
ds
cwtl
xchg
orb
inc
inc
into
aam
jge
insb
sbb
scas
mov
pop
and
fstl
scas
mov
test
loopne
fnstcw
pop
inc
mov
cmc
pop
imul
add
mov
lods
arpl
jns
xor
jl
repz
ret
hlt
dec
mov
pop
aam
rcll
pop
ficomps
sahf
or
mov
cwtl
adc
gs
add
lock
jo
cwtl
xor
mov
loope
dec
pop
aas
add
push
std
mov
subl
sub
sub
mov
push
clc
call
addl
mov
je
push
inc
pop
movsb
or
adcb
in
xlat
mov
xlat
push
fwait
in
fnstenv
jns
adc
mov
jns
pusha
out
nop
and
sbb
adc
jmp
enter
cmc
orb
add
push
xchg
mov
pop
clc
xchg
aaa
dec
ja
and
leave
add
into
cmp
test
push
aaa
push
pop
jge
les
lea
repz
push
sti
leave
push
cmpsb
shlb
movsb
xchg
push
xor
mov
xor
mov
mov
pop
mov
fdivs
mov
repnz
jecxz,pt
push
shrb
xor
arpl
pusha
sub
pop
out
or
ret
sbb
cmpsl
sub
das
ret
cmp
jo
mov
sub
adc
xor
mov
pop
ror
pop
mov
int3
dec
inc
jl
loopne
sub
push
xchg
pop
lret
cmp
rcrb
push
sub
cs
and
mov
cld
mov
cld
shlb
ljmp
jle
jl
cmpsb
daa
inc
scas
scas
xor
and
cmc
andl
push
das
movzwl
cmp
mov
addr16
in
inc
dec
sub
stc
stos
push
push
ret
xor
cld
movsl
mov
cmp
test
int
call
mov
mov
xchg
in
cmpsl
mov
pop
inc
push
aas
loope
push
ss
mov
jne
push
xor
stos
imul
mov
add
mov
icebp
insb
lret
pop
ljmp
scas
pusha
and
lock
xor
jbe
ret
xchg
or
pop
lock
das
dec
stos
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
lds
movsb
mov
les
xchg
in
shlb
loopne
pop
addr16
loope
es
cmpsb
stos
push
pop
ja
xor
fmuls
iret
mull
inc
jmp
xchg
push
xchg
jl
pop
fisubrs
imul
cltd
mov
xchg
lea
dec
mov
push
pop
push
bound
xchg
ret
das
fmull
fldenv
scas
fcompl
add
fnstcw
in
mov
sarb
fildll
loopne
adc
cmp
arpl
push
or
out
mov
push
push
dec
leave
movsb
icebp
rorb
add
push
jp
xchg
dec
test
mov
xchg
enter
or
pop
push
xor
adc
pop
in
repnz
in
lret
mov
dec
sub
xchg
lds
push
arpl
movsb
int
rorl
lea
mov
ret
notl
adcb
sbb
cmc
or
loop
push
fcom
push
aad
rcrb
xlat
push
nop
mov
aad
fdivr
outsb
push
mov
mov
fwait
dec
dec
inc
dec
jl
std
cmp
pop
ljmp
pop
mov
call
cwtl
xchg
xchg
push
mov
adc
shll
adc
mov
sub
dec
es
pusha
pop
adc
dec
xchg
rcll
stos
add
xchg
pop
cmp
mull
pop
rolb
jo
sbbl
pushf
mov
shlb
push
mov
mov
ss
popa
pop
mov
jb
fnsave
lret
mov
and
insb
inc
inc
fistl
movsl
adc
xor
jge
out
cli
mov
outsl
pop
gs
push
jo
or
xchg
inc
ds
cltd
mov
loop
jbe
pop
and
jle
xchg
mov
in
js
and
mov
nop
xor
pop
insl
data16
mov
mov
xchg
test
push
jnp
cwtl
rolb
cmp
setl
stos
nop
dec
repz
mov
jae
ja
jecxz
vpxor
add
add
jmp
sub
add
or
adc
lret
mov
mov
and
jne
popf
in
xor
call
pop
inc
pop
int3
aas
lock
jne
into
or
js
jg
sub
xchg
stc
aaa
xor
aas
jo
adc
sub
adc
in
mov
push
xchg
fcmovne
mov
sbb
cmpsl
shl
pop
and
adcl
mov
jbe
cmp
mov
lret
and
jge
in
into
rorl
pop
or
lods
mov
jb
sbb
dec
push
mov
insl
mov
mov
dec
stc
stos
mov
push
add
dec
gs
xor
rorb
outsl
jp
inc
pop
shll
shl
imul
sub
cmp
ss
add
push
inc
mov
jnp
and
inc
inc
mov
xor
lret
pop
bound
icebp
inc
loopne
or
mov
ja
add
sub
pop
leave
mov
mov
shl
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
fnstsw
movsl
rcll
mov
push
sbb
cmp
sub
jmp
cld
shrl
ret
jg
repnz
and
rorl
push
mov
push
push
jecxz,pt
jnp
scas
out
es
push
hlt
inc
movsb
pop
mov
dec
les
shl
cmp
add
push
pop
inc
xchg
shlb
movsl
jns
pop
mov
cmp
push
int
cmpl
sbb
mov
dec
cmp
inc
inc
sti
ja
inc
pop
cmp
dec
mov
cmp
cmp
push
or
les
into
jge
cmc
inc
nop
push
sub
inc
cltd
sub
fnstcw
pop
insb
inc
cmc
mov
sub
in
sbb
int
mov
js
rcll
ljmp
adc
int
repnz
cmp
out
std
push
loopne
mov
xchg
movsb
fsubrl
mov
ljmp
cmpsb
rol
rcll
movsb
cmpxchg
mov
in
pop
jl
daa
sbb
stc
mov
bound
in
or
inc
cmp
push
test
mov
pop
imulb
test
add
es
adc
repnz
jecxz
mov
mov
mov
dec
mov
aam
in
ds
xchg
xchg
sub
sbb
mov
mov
xchg
add
mov
xchg
cmpsl
pop
mul
push
hlt
adc
jne
jp
sub
xchg
jmp
xorb
call
push
cmp
cmpsb
jno
loop
ljmp
add
xor
lds
pop
push
mov
mov
lret
sbb
inc
push
mov
sbb
mov
xchg
sbb
loop
sub
cmp
test
out
adcb
test
idivb
or
mov
mov
mov
and
mov
stc
or
imul
xor
dec
cmp
mov
and
das
pusha
sbb
xor
lods
fbstp
lcall
pop
sahf
das
mov
les
adc
stc
push
roll
cmpsl
sti
idivl
iret
and
repnz
mov
in
push
shrb
mov
nop
pop
xor
sbbb
jno
test
push
rolb
arpl
add
inc
or
dec
movsb
mov
push
cwtl
inc
popf
mov
lret
shrb
xlat
test
pop
jmp
sub
sahf
pop
mov
push
xchg
int
pop
sti
in
adc
orl
sbb
adc
in
sub
xorb
andl
movsl
test
int
fsubrs
movsb
lcall
xchg
pop
xor
test
mov
dec
scas
xlat
ficompl
insl
cmp
sub
push
cmp
pop
dec
xchg
cmp
xchg
add
pushf
adc
add
or
mov
dec
push
mov
lock
push
sbb
xchg
adc
cmc
adc
pop
lock
aaa
jnp
jne
mov
sti
sub
push
outsb
xchg
sub
movsl
xchg
mov
leave
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
or
in
mov
les
xchg
pop
iret
imul
pop
aad
inc
mov
loopne
sub
cwtl
xor
and
adc
push
lret
cmp
ljmp
stos
jecxz
bnd
mov
jbe
ljmp
repnz
mov
pop
repnz
cmp
adc
push
inc
pop
push
inc
mov
xor
mov
xor
push
xor
sub
or
into
cmp
jbe
pop
std
int3
cmp
and
mov
add
not
push
fs
dec
add
ficomps
xchg
xchg
adc
incl
mov
ret
cmp
xor
je
popa
stos
scas
enter
mov
jbe
sbb
add
mov
xlat
adc
bound
in
cmpsb
dec
xchg
fwait
scas
cmp
mov
cmp
ret
pop
rclb
inc
lods
stos
jbe
or
daa
in
and
fimull
xlat
cmp
in
xchg
lods
out
aad
push
cmc
pop
pop
int3
aas
push
cmp
jae
or
stc
dec
shl
push
shr
mov
dec
push
push
dec
outsl
es
scas
gs
dec
add
inc
jle
cli
imul
dec
addr16
lods
mov
or
pushf
sahf
sbb
xchg
add
mov
sbb
push
lds
out
push
rsm
or
inc
cwtl
add
fstl
sub
xchg
outsb
pop
std
pop
test
jl
rol
jmp
in
push
enter
inc
xorl
and
xchg
enter
stos
icebp
repnz
add
cmpsl
push
or
add
pusha
xchg
mov
pop
dec
mov
adc
adc
cmp
arpl
and
js
sbb
mov
push
mov
inc
leave
and
xor
outsl
ljmp
and
xor
mov
mov
lret
fisttpl
pop
jne
lcall
inc
mov
inc
in
mov
aad
mov
cld
xchg
mov
cmp
jns
push
test
push
cmp
clc
adc
push
push
clc
fdivs
adc
iret
jmp
push
push
xchg
mov
cltd
xor
mov
mov
outsb
pop
sub
sub
cli
ljmp
dec
nopl
jg
inc
sub
xor
fsts
cmpsb
popa
loopne
add
sarl
sub
xchg
and
insb
pop
std
or
adc
pop
data16
sub
nop
dec
orl
test
in
jb
inc
jp
jmp
fwait
push
inc
mov
cmpsb
in
outsb
xchg
and
std
xchg
mov
ljmp
rcll
push
or
loope
add
mov
cmp
iret
mov
push
mov
lods
enter
inc
inc
popa
jmp
call
sbb
ljmp
push
pop
fs
mov
fisttpll
fs
dec
inc
daa
les
push
and
lods
cli
lret
xchg
add
mov
mov
scas
jecxz
mov
sub
inc
rolb
mulb
or
pop
sti
enter
add
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
or
cmp
mov
mov
lret
mov
xchg
sub
cmp
scas
cmpl
push
dec
call
inc
mov
cwtl
shlb
pusha
inc
cmp
push
lods
cmp
in
movl
jmp
mov
xor
and
stos
out
xchg
xchg
cmovge
imul
mov
pop
jmp
inc
testl
test
xchg
jb
mov
pushl
xor
test
xor
adc
out
jg
mov
das
jg
mov
enter
xor
cwtl
xor
xor
pop
push
loop
mov
mov
in
jnp
or
xor
cltd
lock
sbb
aam
js
pop
insb
aaa
inc
dec
cld
fucomi
das
js
jnp
xchg
jge
out
scas
in
jno
iret
lock
sub
scas
cmpsl
push
pop
push
cs
and
or
mov
inc
xor
push
movsl
and
lret
xchg
in
dec
cmpsb
out
insl
vxorps
dec
imul
fmuls
into
out
aaa
and
add
cli
jmp
cmp
fucomp
or
dec
add
pop
sbb
sti
mov
mov
out
xchg
inc
loopne
aaa
cld
js
add
push
ret
cmpsb
ret
aad
xorl
gs
inc
in
add
in
movsl
inc
dec
mov
pop
mov
cmpsb
add
enter
cs
and
rorb
mov
pop
cmp
jnp
pusha
into
push
movsl
push
imul
test
mov
cmp
repz
stc
les
dec
repz
addr16
push
and
clc
mov
mov
or
cmp
inc
call
xchg
add
cmp
pop
mov
pop
push
fwait
loop
mov
jecxz
std
icebp
add
jg
add
inc
in
lods
cld
jnp
cmp
mov
aad
or
cmpsl
addb
cli
inc
outsl
pop
fs
xchg
sub
mov
xor
arpl
call
inc
aam
push
sti
xchg
cwtl
sub
dec
cmp
push
lret
push
in
lods
or
adc
int
idivb
sbb
aas
cmpsl
cs
push
mov
sub
xlat
mul
cmp
clc
cmp
mov
dec
adc
jb
add
dec
into
scas
ficoms
push
or
lods
sbb
pop
xchg
pop
out
jge
mov
ret
and
popf
cmp
mov
mov
std
mov
xor
scas
mov
push
int
ficomps
lods
mov
out
data16
push
loope
sub
mov
les
push
aad
add
xchg
mov
xor
xorb
inc
pop
jae
test
cmp
sbb
xchg
sbb
sarl
sti
add
mov
sbb
jg
pop
adc
fimull
jmp
data16
push
sub
lret
jecxz
pop
xor
jns
dec
pop
and
adc
dec
pusha
sarl
in
mov
sbb
dec
dec
insl
mov
cwtl
or
inc
xchg
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
xchg
pop
pop
sahf
mov
les
mov
mov
adc
mov
xchg
sbb
jbe
or
push
das
leave
mov
cs
repz
aas
xor
add
es
add
rcll
int
imul
hlt
sub
adc
cmp
mov
cmpsl
pop
and
push
lods
popa
loope
outsb
insl
jbe
int3
jmp
mov
sub
push
idiv
push
mov
jmp
mov
lods
dec
ds
js
pop
mov
enter
inc
insl
mov
fwait
das
out
in
push
sub
or
inc
out
orb
xor
out
cmp
outsb
das
dec
xor
insl
cli
lods
les
jno
add
ds
pextrw
std
add
mulb
fs
packssdw
cmp
push
test
mov
xchg
imul
cmp
xlat
sbb
andl
and
pushf
out
icebp
insb
sbb
hlt
push
sub
out
outsb
orb
das
movsb
dec
cmp
and
ret
in
cmc
mov
xorb
and
fs
push
inc
enter
and
dec
cli
lcall
mov
enter
mov
jge
xchg
inc
add
test
mov
call
dec
loop
jmp
in
dec
cmc
inc
push
mov
adc
loope
jne
inc
and
mov
in
in
cmp
sbb
nop
add
and
adc
xor
cmp
or
movsb
adc
pop
inc
sbb
arpl
popl
cs
int3
pop
dec
mov
cmp
in
orl
pop
aad
imul
leave
and
stos
movsl
loope
adc
dec
les
xchg
fcmovne
xchg
push
pop
pop
mov
shr
mov
add
in
cld
mov
add
aas
pop
jno
or
cmc
xor
push
neg
adc
dec
sub
aas
add
xchg
es
lahf
imul
jae
out
pop
sbb
cmp
mov
repnz
nop
cmp
les
mov
jno
jae
pop
cmp
push
lahf
mov
sub
xchg
fcmovnb
pop
sbb
sahf
jb
adc
faddl
jp
repnz
pop
cmpsl
dec
jle
sub
xor
or
inc
or
mov
fisttpll
jge
jo
sbbb
sbb
mov
std
adc
call
inc
loope
push
mov
jne
pop
xchg
bswap
int
cli
or
enter
pusha
iret
movsl
repnz
sub
sbbl
push
or
add
add
dec
fisubrs
fwait
lret
push
jle
sub
jg
mov
adc
mov
hlt
test
outsl
sub
inc
cmp
sbb
popa
mov
ds
pop
lea
sbb
fdivrl
shr
ljmp
jnp
jno
rcrb
adc
xor
jno
cltd
addb
jg
hlt
push
pop
sbb
add
jb
jg
xchg
sub
cmp
int3
icebp
mov
sar
dec
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
fisubs
jo
jb
sub
jle
sub
push
test
mov
cltd
jbe
push
insb
into
enter
flds
pop
and
cmp
jno
and
pop
adc
rcll
push
jge
je
ficompl
clc
fsubl
stos
add
pop
dec
int3
insl
sub
sbb
cld
or
push
mov
cwtl
lock
repz
dec
xor
fs
loop
xchg
adc
xor
mov
dec
rolb
call
outsb
jmp
pop
xchg
or
jecxz
ja
mov
xchg
mov
repnz
cmpsb
mov
adc
adc
mov
sbb
xor
pop
xchg
push
mov
cmpsb
out
subb
imul
mov
inc
dec
cmp
pop
daa
jle
mov
ret
cmp
push
inc
cmp
lahf
lret
insl
or
andb
mov
cmpsl
xchg
into
in
cs
xchg
xchg
imul
or
aaa
lds
and
mov
push
add
sub
fidivrl
std
dec
sub
mov
xor
adc
lods
leave
dec
lahf
lret
call
mov
adc
inc
mov
mov
scas
cld
xchg
xchg
mov
lods
push
pop
mov
mov
sub
mov
data16
jns
std
mov
pop
sbb
inc
inc
outsb
popf
jae
scas
icebp
stos
lahf
pop
sbb
xor
pop
cmc
sbb
pop
jmp
inc
pop
mov
fldcw
jnp
popf
adc
jo
idivl
xchg
popf
rcrl
das
aam
push
in
and
addr16
imul
test
cmpsb
and
push
sbb
add
and
lret
fwait
leave
sub
cmp
inc
in
notb
sub
in
adc
inc
push
mov
and
push
sub
out
popa
sbb
and
scas
inc
jns
in
pop
aam
enter
add
sahf
add
inc
rcr
sub
lea
rol
repz
mov
movsl
add
rcrl
or
test
cmpsl
inc
cld
pop
dec
les
iret
mov
sti
mov
and
cmp
xchg
out
imul
sub
ja
jmp
mov
cwtl
sarl
imul
jb
repnz
jns
inc
sti
leave
push
cmp
sti
fstps
xchg
xlat
gs
xchg
xorl
sbb
jbe
pushf
push
lods
xor
addr16
aad
aaa
cmpsb
lods
fldz
push
out
or
or
dec
mov
outsb
rorl
cmp
mov
in
mov
das
setge
adc
movsb
push
xchg
xchg
in
loope
and
sti
into
mov
out
mov
test
pop
sub
sbb
mov
jno
andb
mov
xchg
ret
pop
lods
cmp
popf
sbb
push
cld
xor
mov
dec
addr16
rcl
jae
bound
xor
cmp
lock
pop
push
scas
xor
pop
repnz
stc
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fldl
dec
mov
mov
into
out
inc
jp
lret
push
xorb
inc
inc
mov
bound
or
test
sbb
push
dec
sub
std
adc
cmp
xchg
cmpsl
les
xchg
cmpsl
xchg
js
and
bound
mov
push
fs
test
loopne
mov
jge
push
xlat
loope
movsb
jbe
push
lea
cmp
or
aad
lods
in
sub
test
xchg
repz
aaa
or
cwtl
ljmp
jno
xchg
ss
fcompl
mov
stos
cmpsl
xchg
bound
divb
pusha
cmp
flds
or
mov
mov
inc
adc
mov
and
aam
js
je
and
push
inc
in
cmp
inc
cmp
cli
daa
jae
mov
sbb
push
rorl
cltd
push
cmpsb
gs
push
and
bnd
adc
xchg
mov
std
dec
jge
testb
das
xchg
cmp
inc
movsl
addr16
cmp
popf
dec
mov
mov
mov
pop
add
scas
aaa
push
or
sarl
and
mov
cltd
sarl
incb
jge
fs
mov
cmp
cmp
mov
mov
mov
ljmp
jno
lcall
xchg
mov
stos
in
sbb
rcrl
push
adc
mov
mov
cmpsl
mov
dec
sub
xchg
pop
gs
xchg
inc
dec
std
iret
cmpsb
pop
roll
xchg
mov
mov
sub
cmp
sub
inc
pop
enter
mov
movsb
jecxz
add
popa
mov
fists
mov
ja
icebp
xchg
or
xchg
arpl
iret
cmp
fwait
subb
lret
cmp
and
in
ljmp
dec
cs
mov
push
dec
fisttpl
icebp
jne
jmp
push
stc
nop
mov
in
mov
dec
dec
pop
and
call
stos
xchg
dec
pop
pop
cmc
adc
pop
adc
dec
xchg
das
jge
nop
andl
test
sbb
adc
mov
popf
pop
ljmp
shrb
loopne
jmp
adc
jae
movsb
jae
test
jns
mov
xchg
or
repnz
push
mov
push
fsubp
pop
mov
pusha
pop
outsb
sar
jecxz
dec
stos
jle
out
or
push
divl
fbld
cs
jp
jg
mov
leave
push
fadds
jnp
or
push
push
std
push
pop
std
push
iret
xchg
push
cli
adc
imul
lret
dec
rclb
and
or
dec
jae
fs
mov
jg
mov
jns
imulb
jle
icebp
mov
mov
popf
cltd
mov
jae
leave
adc
xor
inc
js
sub
jbe
adc
cld
sbb
xchg
test
inc
fcmovbe
xchg
in
and
add
mov
aad
jmp
and
leave
mov
repz
sbb
xor
into
push
mov
sub
outsl
jecxz
mov
filds
and
jmp
pop
pushf
inc
and
jb
cmp
jle
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fisttpll
stc
ss
mov
les
fcompl
int3
push
loopne
arpl
mov
outsl
cmpsb
xorl
sti
cmpsb
jae
lcall
jo
loop
sub
xor
or
fists
jmp
adc
or
lcall
inc
je
and
inc
dec
leave
je
int
mov
jno
adc
jo
dec
das
xor
xchg
popa
or
cmp
fwait
xchg
test
cmp
aam
dec
push
inc
out
xchg
sbb
pop
aam
cmp
mov
jecxz
mov
fimull
mov
bound
dec
gs
and
aas
sbb
mov
lahf
push
cli
fistpll
push
inc
lcall
mov
outsl
mov
or
jmp
dec
mov
inc
mov
ficoms
jg
ljmp
cli
int3
pop
lahf
jbe
adc
sahf
mov
sbb
mov
xchg
stos
daa
mov
aas
lret
push
imul
and
pop
inc
test
jmp
push
pop
fistpll
xchg
ljmp
sub
and
ret
or
scas
and
test
pop
xor
out
aad
dec
repnz
mov
mov
dec
mov
sub
lods
xchg
xchg
test
pop
movsb
push
jnp
sub
cmp
jge
sbb
es
mov
dec
insb
push
xchg
fwait
cs
lods
xchg
fildll
call
xchg
outsb
inc
cmp
add
dec
mov
imul
push
stos
or
ja
sub
pop
adc
add
in
out
stos
aad
jmp
movsb
sarl
ss
cmp
outsb
mov
call
mov
pop
mov
out
roll
push
jae
mov
ja
shl
into
test
dec
xor
lret
and
fistpll
cmpl
js
mov
cmc
cmp
push
cmp
aas
ja
test
ljmp
mov
arpl
int
ja
outsb
or
faddp
repnz
cmpsl
out
inc
sub
clc
cld
popa
call
mov
sub
clc
adc
cmc
clc
jae
inc
sbb
or
add
adc
scas
hlt
lock
imul
adc
int
pop
outsb
lret
faddl
push
and
add
jo
inc
ret
push
pusha
ljmp
mov
dec
mov
movsl
mov
adc
or
sahf
or
mov
ret
bound
dec
arpl
pushf
mov
out
dec
push
mov
pop
fcmovnu
mov
in
and
lods
pop
aad
insl
mov
jmp
mov
push
out
in
fs
push
mov
mov
pop
add
mov
aas
mov
jae
dec
test
rol
cmpsl
xor
cld
inc
push
fidivrs
mov
cwtl
mov
pop
jmp
lret
test
aaa
idivb
sub
xchg
out
mov
add
push
pop
mov
pusha
or
cmp
movsl
pop
mov
pop
rolb
push
push
xor
daa
roll
inc
mulb
xchg
scas
movsb
or
loopne
pop
pop
sti
xor
mov
dec
xor
add
shll
roll
lods
xchg
lcall
inc
movsl
dec
fmul
inc
icebp
jbe
ss
or
push
ja
out
or
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
pop
int3
jecxz
mov
les
les
push
cmp
xor
inc
aad
mov
data16
fnsave
push
dec
jb
lret
loop
lods
mov
push
je
out
jl
clc
push
dec
ss
ds
mov
xor
mov
push
leave
jecxz
filds
rorb
mov
es
lea
cld
outsb
xchg
ljmp
add
or
jecxz
xchg
lds
sbb
push
push
or
mov
xchg
ja
icebp
xchg
inc
shlb
xchg
cmp
lret
xor
lcall
push
arpl
scas
hlt
xor
mov
push
or
cld
mov
arpl
shlb
hlt
arpl
movsb
adcb
out
mov
adc
add
iret
sub
icebp
out
in
bound
dec
aad
aas
fcmovnbe
fsubl
sbb
lods
icebp
cmpsl
lds
dec
xchg
cmp
mov
jmp
dec
das
mov
add
add
sub
cltd
or
test
mov
scas
add
out
sahf
pusha
rclb
test
add
gs
movsb
add
imul
lahf
lea
negb
pop
xor
cmp
enter
loop
outsb
push
xchg
xchg
xchg
fisubrl
fdivs
in
jns
push
adcl
mov
xchg
add
mov
sbb
repnz
jns
repz
enter
icebp
jae
notb
mov
hlt
add
xor
and
jnp
mov
xor
pop
or
lcall
testb
sub
jp
ss
mov
sahf
jbe
adc
into
dec
pop
ljmp
xchg
bound
adc
jp
imulb
loopne
cmp
iret
add
sahf
push
add
shl
mov
fimuls
lret
cltd
int3
and
pushf
jbe
cmp
mov
fisubrs
scas
sbb
movsb
mov
mull
lea
pop
xor
test
mov
cmp
clc
or
or
or
or
loopne
mov
hlt
push
xor
loop
mov
jl
leave
pop
mov
hlt
mov
popf
fsubs
je
push
scas
add
xchg
icebp
ja
sbb
es
cmc
add
popa
dec
dec
push
enter
add
jle
imul
popf
std
xor
push
mov
pop
icebp
pop
jmp
inc
test
out
mov
xchg
fildl
js
lahf
lea
jo
xchg
jg
addb
jno
jb
pop
ficoms
cwtl
jle
xor
sti
or
cmp
lret
cli
xor
or
test
mov
sbb
mov
inc
inc
movl
lods
scas
and
xchg
pop
sbb
imul
jne
and
movsb
push
mov
cli
notb
scas
lahf
out
stos
cmpsb
sbb
lret
clc
outsb
cmp
adc
dec
push
adc
aaa
and
ja
or
jmp
negl
enter
je
push
pop
gs
sahf
shrb
mov
sti
sub
jns
test
into
jecxz
dec
jg
dec
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
mov
mov
mov
clc
jae
xchg
pop
popa
das
lret
sub
shll
sub
aas
cwtl
cmp
scas
lods
inc
xchg
sbb
xor
lret
je
in
mov
repz
jns
lret
cli
icebp
dec
or
dec
or
mov
loopne
mov
mov
in
inc
jg
not
xchg
icebp
sbb
fdivrs
push
pop
mov
cmp
sahf
inc
adc
sub
call
cmpsl
call
adc
sbb
shlb
rorb
scas
and
add
aaa
div
or
mov
add
cli
push
cmc
xor
mov
cmpsl
enter
mov
sub
les
and
test
popf
pop
dec
cmp
ret
mov
lret
rorl
stos
test
mov
test
out
push
xor
inc
movsl
inc
test
jp
push
int3
into
inc
and
add
xchg
mov
adc
pop
pop
sbb
or
pop
paddusw
inc
push
jge
xchg
scas
stos
popf
cwtl
pop
shr
push
add
jns
xchg
jo
lods
test
fidivrs
and
imul
add
mov
sarl
jecxz
movsb
inc
mov
mov
stos
add
les
cld
mov
enter
cmc
test
and
loop
les
adc
aam
push
mov
cmp
ret
jge
mov
in
dec
cmpsb
das
inc
inc
mov
inc
fisubrs
mov
clc
and
fs
push
jmp
ja
pop
xor
sub
loop
daa
lret
mov
movsl
pushf
adc
aas
add
adc
inc
lcall
or
xchg
and
jns
movsb
push
lret
mov
mull
fsubrs
inc
pop
cld
test
negl
xchg
cmpsl
xchg
mov
outsl
aaa
ficoml
fstps
jecxz
adc
mov
scas
scas
jb
push
xchg
adc
aad
sub
insb
adc
sbb
stc
ljmp
out
and
push
mov
pop
add
mov
sub
lock
lds
repz
and
inc
pop
jb
push
and
arpl
jno
mov
cmpsl
data16
dec
mov
add
jp
sub
inc
adc
rcrl
xchg
movsl
mov
movsl
cmp
xor
ss
sub
fnstcw
cli
rcrb
ret
jg
insb
pop
mov
ljmp
xchg
sub
inc
lahf
dec
push
test
add
outsb
mov
or
add
sti
mov
pop
or
loop
js
jp
js
ret
jl
xchg
push
icebp
xor
clc
cmpsl
mov
mov
repz
xchg
je
mov
dec
loope
sub
dec
out
cmpsb
jecxz
sarl
int
ljmp
shrl
sbb
js
dec
mov
dec
push
pop
pop
lahf
mov
in
stos
push
ret
jmp
mov
out
or
jge
in
repnz
out
iret
xor
and
push
dec
adcl
gs
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
adc
sarl
les
fnstenv
and
sbb
hlt
movsb
jno
loop
xchg
mov
and
xchg
push
rclb
jbe
cmpl
sti
pushl
mov
ret
shll
mov
lahf
add
xlat
popa
cmp
sub
nop
mov
repnz
sbb
lcall
add
repz
iret
mov
clc
xor
cli
filds
mov
les
popf
mov
xchg
pop
or
aas
jle
dec
jnp
or
scas
jmp
jae
mov
fbld
mov
hlt
pop
sahf
addr16
jae
mov
push
iret
xor
aad
loop
xchg
inc
call
cs
ljmp
sahf
shll
or
or
mov
vhsubps
lods
push
inc
cltd
mov
dec
fstl
int3
mov
cmp
xlat
add
pinsrw
ret
inc
adc
mov
push
sub
sbb
out
xlat
aam
scas
mov
adc
jle
mov
mov
push
inc
or
xchg
sbb
cmp
cmpb
lds
std
pop
into
nop
mov
push
mov
and
mov
inc
and
sbbb
fildll
cmpsl
sub
test
scas
jbe
jnp
xor
and
push
or
rolb
pop
mov
xchg
cmp
push
into
push
pop
adc
dec
mov
cmp
outsb
orb
mov
jge
mov
jle
movsb
sti
jecxz
xchg
lods
sbb
movsl
jge
push
les
sbb
addr16
fwait
ds
pushf
stos
sbb
in
sti
lock
jecxz
mov
cmp
sub
jle
dec
jne
add
jbe
push
das
cmpsb
loop
mov
mov
fidivs
dec
in
lods
add
adc
not
imul
cmp
gs
std
movb
cmpsl
jno
mov
das
xchg
lcall
fidivrs
cwtl
xor
jp
jno
push
jae
sub
inc
pop
lods
imul
sbb
jo
pop
jg
jbe
rcr
xchg
or
stos
jb
cmpsb
cmpsl
inc
or
pop
test
clc
gs
adc
jge
loope
xchg
orb
testb
fisubrs
mov
shll
int
or
mov
bnd
rolb
sbb
daa
stos
jnp
mov
cmp
lds
sub
sub
and
fidivs
or
fldl
pushf
mov
sub
xlat
daa
in
test
ljmp
test
rorb
cmp
inc
fwait
mov
adc
dec
mov
aas
push
arpl
sbb
push
or
stc
arpl
push
outsl
fdivs
mov
push
pop
sbb
clc
lret
push
and
out
lock
or
int
sub
cld
cmp
pop
cltd
dec
mov
push
jmp
pop
in
and
cli
mov
mov
test
jnp
outsb
cltd
adc
jge
push
lock
xchg
hlt
lods
xor
pop
popw
lret
fcoml
stos
movsl
mov
nop
lock
inc
mov
mov
aad
fwait
js
sbb
mov
pushf
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
dec
scas
iret
mov
les
rcrl
xchg
mov
jp
popa
test
xor
aad
ret
cmp
sbb
sub
xchg
push
cltd
pushf
pop
or
adc
data16
ficoms
es
pop
adc
pop
pop
lods
pop
pushf
adc
and
flds
push
test
adc
adc
xchg
fcmovbe
shll
pop
push
mov
jl
std
mov
cwtl
popl
push
inc
movsb
add
cmp
push
in
iret
mov
in
jb
mov
clc
lret
sub
and
movsb
in
in
inc
inc
cli
adc
pop
jnp
testl
mov
shll
int
arpl
stos
adcl
xchg
push
sub
mov
mov
fidivl
inc
fdivrs
xchg
sub
sub
push
jmp
aam
loopne
scas
xchg
notl
loop
xor
xchg
push
add
add
mov
lds
mov
push
inc
or
or
ja
mov
fcoms
add
data16
mov
pop
fucompp
fldl
jmp
jge
sahf
adc
fisubl
inc
jnp
cmovno
jg
jp
mov
mov
ljmp
into
push
mov
sbb
cmpsb
and
push
test
mov
push
pop
leave
push
ret
dec
ds
out
loope
dec
aad
lea
shrb
outsb
clc
iret
sbb
into
jbe
dec
stc
out
dec
ljmp
pmulhw
ffree
sahf
aas
sahf
popa
mov
pop
cwtl
cmp
xor
cmpb
pop
xor
in
mov
dec
mov
cmove
fidivrs
fldt
dec
jle
cltd
jne
push
push
sbb
dec
and
sbb
roll
fstp
push
stos
ljmp
xor
push
lcall
nop
cwtl
xor
pop
lods
cmp
movsb
sub
adc
sbbb
dec
data16
pop
mov
test
ds
imul
inc
lret
sbb
xorl
jo
arpl
ljmp
xor
jge
jmp
push
mov
pop
inc
movsl
xor
cmp
outsb
cmpsl
fsubrp
adc
inc
aam
imul
std
adc
dec
jge
pop
cmp
sub
xchg
es
lea
dec
inc
push
sbb
stc
call
mov
pop
shr
xchg
mov
cmp
and
cmp
push
loopne
sbb
dec
out
jg
std
shr
loope
jg
xchg
cmovae
shl
dec
sub
shll
jl
testb
sahf
stc
in
dec
in
fdivl
adc
or
dec
daa
and
push
and
push
mov
mov
out
jo
lcall
popf
mov
sub
out
dec
aaa
sbb
sbb
mov
lods
shl
or
lahf
call
mov
test
shr
in
outsl
test
jl
xchg
pop
inc
sbb
xchg
jnp
sub
leave
shll
std
push
or
inc
scas
pop
fs
cwtl
mov
rorb
test
add
add
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
rorb
mov
ret
push
rol
ret
fldl
sahf
or
stc
ret
mov
push
jmp
rcrb
fmuls
mov
into
jl
pop
enter
dec
je
or
mov
lea
cld
mov
rcr
ss
in
lret
xchg
sub
and
xor
xchg
pusha
hlt
inc
sahf
push
xchg
js
stos
mov
mov
lret
scas
add
jle
ret
js
push
jne
shll
out
into
or
outsl
lcall
in
cmp
xchg
sbb
fisubl
test
xor
xor
adc
or
xchg
adc
jecxz
cmp
cmp
cs
int3
test
xor
push
dec
iret
pop
ds
pop
test
add
std
repz
ss
je
clc
sub
mov
ds
flds
aaa
xchg
lock
insb
jns
pop
mov
into
and
sbb
jecxz
cwtl
sub
arpl
push
sahf
push
jle
fdivs
xlat
sbb
int3
pop
add
insl
loope
mov
mov
mov
adc
fsubs
fistpll
lcall
pop
lock
xorl
mov
pop
dec
mov
sub
pop
jbe
mov
pop
shrl
leave
cmpl
out
rcl
subl
js
or
xor
dec
repnz
pop
sbb
jg
js
scas
imul
and
xor
ljmp
cmpsl
inc
and
and
jb
jge
or
push
sbb
sbb
pop
mov
pop
lcall
repz
insb
in
xor
fimull
ljmp
inc
addr16
mov
inc
xor
insb
test
sub
pushf
sub
add
xor
mov
cmp
xchg
jge
mov
pop
addl
sub
fisttpl
sahf
inc
cmp
push
pushf
push
adc
and
adc
pop
adc
sahf
jb
popf
fnstenv
adc
pop
fnstenv
sub
dec
pop
je
fiaddl
xor
mov
xchg
popf
and
xlat
aaa
mov
loopne
arpl
iret
clc
divb
inc
xchg
iret
shrb
push
lahf
lds
filds
sub
in
xor
inc
call
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
xlat
lods
or
jge
mov
out
mov
sarl
lea
icebp
aas
outsb
mov
sbb
std
sub
repnz
adc
xor
jae
test
movsl
and
mov
adc
stos
es
imul
sub
mov
call
push
js
in
popa
mov
btc
pop
inc
or
cmpsb
aam
and
repz
nop
push
addr16
cmp
cmp
add
jb
jl
jl
iret
pop
pop
movsb
test
jnp
icebp
jbe
int3
mov
lret
loope
mov
cmp
ret
ljmp
call
jne
jp
data16
sub
or
sbb
push
nop
cmp
mov
fimuls
adc
decb
cmp
cmpsl
jmp
or
mov
pop
les
repz
push
push
inc
inc
je
push
jno
xchg
inc
insb
mov
xor
push
out
insl
xor
imul
inc
cmc
mov
imul
loopne
fcompl
or
pop
lods
push
mov
loopne
or
rcrb
dec
jno
dec
rcr
and
sarl
push
mov
xor
mov
dec
and
dec
popl
push
lds
shll
pop
cmpsl
adc
mov
jp
into
movsb
cmpb
insb
inc
mov
ror
or
in
ss
rorl
mov
mov
pushf
jns
xchg
repnz
and
jbe
pop
xor
fstps
mov
xor
inc
addl
adc
pop
mov
mov
xchg
sub
arpl
pop
les
push
adc
or
sub
inc
test
cmpsl
rcrb
int
popa
xchg
lock
mov
add
and
insb
lcall
xor
or
insb
dec
push
mov
inc
hlt
jle
outsl
adc
sti
enter
cmp
sub
popf
push
jb
dec
and
sub
out
jo
arpl
cli
jae
xor
mov
cltd
add
mov
in
outsl
das
cmp
dec
fcomip
mov
push
xor
mov
xor
fisubrl
add
sub
mov
lret
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
frstor
add
xor
ret
xchg
rorl
push
pop
mov
sbb
sahf
lea
loope
or
dec
pop
mov
add
call
dec
mov
sub
dec
test
sti
jnp
nop
scas
fwait
data16
push
lcall
adc
loop
lahf
insl
invd
mov
enter
fmull
mov
adc
ss
adc
stos
mov
fldt
cwtl
pop
mov
int
jp
mov
pushf
nop
mov
sbb
lret
or
push
adc
shlb
loop
push
fdivs
mov
and
or
xchg
mov
or
loope
std
cmpsl
inc
outsl
je
pop
icebp
iret
cmp
xchg
xchg
mov
in
les
mov
jae
enter
cmc
mov
jl
mov
jecxz
or
sub
loop
or
lods
test
xchg
pop
xchg
mov
test
push
popa
xchg
hlt
dec
repz
mov
fsubp
pop
popa
mov
sub
and
xchg
cltd
sbb
aas
int3
in
pop
cltd
cwtl
xchg
cmp
push
pop
dec
pop
cltd
movb
mov
loopne
push
bound
xchg
sub
ja
repnz
pop
jecxz
andl
pop
pop
popf
iret
lea
pop
dec
and
subb
xchg
dec
movsl
stos
cmp
pop
das
clc
sbb
rorb
sub
sbb
in
icebp
data16
jle
mov
mov
test
in
shll
xor
mulb
test
cld
sbb
mov
in
cli
cli
pop
fwait
fs
imul
das
es
shlb
sbb
mov
xorb
mov
lock
loop
mov
addl
decb
xchg
imul
jns
jno
or
jns
push
xor
test
in
mov
dec
sub
xchg
jo
lock
shll
je
mov
pop
sti
in
bswap
enter
lods
push
aas
scas
and
xor
outsb
loop
lods
shll
in
or
mov
dec
cwtl
loopne
lods
xchg
push
add
jne
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
fisttps
mov
nop
rolb
imul
rorb
pusha
out
sarb
sub
bound
pop
scas
cld
decb
sub
daa
jl
adc
sub
fldenv
push
and
adc
repnz
xlat
js
nop
cmpsb
fidivs
jecxz
scas
outsb
pop
subl
daa
mov
sub
pop
xor
add
les
pop
xchg
mov
dec
setb
sub
mov
lret
nop
jne
stos
xchg
lea
lahf
adc
and
mov
sub
ret
loop
sub
outsl
adc
sbb
cmp
sahf
push
popf
adc
xor
call
add
repnz
fnstcw
jnp
and
mov
lcall
cmpsl
lahf
scas
and
aad
cmp
leave
and
les
leave
sbb
in
sbb
in
dec
std
pop
xor
xchg
jmp
jle
xor
insb
outsb
leave
out
call
sub
into
push
pusha
outsl
idiv
notb
das
dec
int
jno
shl
adc
bound
sub
les
lret
jne
cld
push
out
add
popf
and
repz
movsl
push
testl
rcrb
imul
pop
jl
pop
or
nop
outsb
rolb
pop
or
dec
or
cmpsl
cmpsl
shlb
dec
pop
or
add
cmc
mov
xor
sbb
loopne
inc
stos
cmp
ja
inc
jo
hlt
repnz
jmp
add
shlb
mov
aad
mov
test
imul
add
xchg
lds
mov
es
lcall
pop
or
into
xor
or
in
and
in
fisubrl
out
jmp
je
xor
or
addr16
inc
test
pop
pop
cmpsb
movsl
cmpsl
jecxz
neg
mov
jg
adc
pop
mov
mov
xchg
mov
mov
cld
callw
fldt
pop
in
mov
add
sub
jge
inc
jl
add
push
fidivrs
dec
push
test
int3
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
aam
shrl
ret
int
imul
jl
sbb
rcr
dec
lret
jne
push
imul
add
jns
popfw
mov
in
lea
lahf
lods
dec
mov
push
imul
ret
les
cmp
cmp
fs
and
xchg
in
xchg
inc
mov
xchg
cmp
push
jnp
mov
add
jne
ds
inc
jns
vcmppd
loopne
lret
push
aam
adc
adc
data16
popa
lods
lods
fsubs
push
out
xor
inc
mulb
jb
insb
and
xchg
dec
inc
ljmp
aam
pop
cmp
ja
lea
cmp
push
mov
sbb
pop
shl
push
mov
add
pop
popf
scas
mov
mov
mov
out
mov
repz
js
mov
orl
in
jge
jle
mov
push
hlt
cmp
out
aad
pushw
or
in
scas
push
test
inc
fmul
pop
test
insl
jns
mov
mov
lret
xchg
sarl
and
jno
iret
shlb
mov
adc
in
adc
sahf
inc
nop
enter
pop
adc
adc
jb
loop
jb
shl
in
int3
rorb
mov
add
pop
popa
sahf
lret
xor
or
test
push
sub
push
pushf
add
pop
jecxz
or
cltd
jmp
jne
mov
aam
xor
and
cld
lea
je
adc
jb
mov
cmpsl
stc
push
mov
xor
sti
test
xchg
mov
loop
pop
cs
rolb
mov
pop
jle
fs
out
and
jle
lods
stos
push
mov
addl
mov
hlt
sahf
mov
insl
cli
jl
jno
inc
jns
lret
add
cmp
lods
cmpsl
lods
xchg
enter
sub
scas
xor
out
ret
mov
rcl
and
inc
and
or
mov
jmp
adc
rorb
fucom
mov
dec
in
jo
and
mov
insb
or
xchg
mov
repz
mov
or
sti
and
aad
xor
ja
insb
pusha
in
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
jbe
imul
cmpsl
jecxz
loop
cmp
mov
inc
pop
cwtl
arpl
pop
ljmp
pop
inc
aaa
and
aad
aam
cmpsb
mov
cmp
sbb
xchg
mov
cmp
pop
push
popf
mov
mov
dec
repz
add
fbstp
les
inc
xchg
pop
aam
and
pop
jae
out
push
mov
loope
jne
fdivl
mov
fisubs
sbb
pop
cmp
in
and
push
inc
adc
jae
sub
xchg
popf
push
loope
cmpsl
mov
inc
add
adc
popa
pop
fbld
and
xor
sahf
adc
sub
mov
inc
xor
ror
lcall
pop
xchg
dec
test
pop
cbtw
xor
pop
js
add
mov
js
mov
mov
out
add
cld
call
repz
jo
movsb
dec
sub
sbb
pop
jb
or
fdivrl
push
inc
mov
cmp
stc
xchg
jns
or
mov
rcrb
mov
xor
push
mov
mov
push
aas
fisttpl
sub
das
lret
in
fisubl
and
dec
xchg
xchg
lahf
data16
dec
daa
mov
push
mov
push
sti
leave
pop
arpl
sbb
call
std
scas
xchg
sub
mov
cs
dec
pop
lahf
pop
mov
in
adcl
loope
mov
or
sbb
xlat
pop
out
test
adc
cmp
jp
xor
push
push
out
inc
and
push
push
cli
mov
add
out
jmp
cmc
stos
enter
imul
fucomip
jne
sahf
jb
mov
adc
mov
das
mov
outsl
xchg
cli
test
sub
lock
into
sbb
jge
cmpsl
testb
sbb
or
stc
lock
push
xor
sbb
xchg
fdivp
adc
rcrl
xor
xor
jb
andl
rorl
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
lock
test
scas
neg
stos
das
or
jle
cmp
enter
rorl
push
mov
js
jo
jl
bound
in
and
push
vorps
in
mov
sub
add
negl
inc
bound
rorb
xchg
push
sub
shlb
mov
loope
add
lock
mull
repnz
mov
push
fildll
sub
subl
ljmp
push
mov
sub
and
or
popf
out
lods
add
mov
in
notl
pop
fwait
cmp
sub
and
setbe
sarb
push
sbb
adc
int3
leave
dec
pop
mov
loop
inc
ja
nop
arpl
and
mov
shlb
or
xor
hlt
or
add
insl
fwait
mov
mov
mov
shlb
mov
and
mov
jmp
inc
jne
imulb
push
sub
fildll
xchg
mov
mov
mov
inc
push
xlat
xor
sub
push
mov
cwtl
fcompl
and
mov
and
xorb
mov
xlat
xor
test
lret
sub
sbb
sbb
sub
and
and
jle
std
inc
sbb
cwtl
fucom
pop
dec
ds
cmp
cmc
and
inc
int
push
cmp
ds
or
sbb
sbb
test
ror
mov
dec
movsw
push
xor
iret
sub
or
and
test
leave
insl
xchg
fdivrs
push
push
mov
je
sub
fldenv
inc
jo
cld
jmp
aad
and
xchg
pushf
push
std
inc
mov
in
jb
js
add
and
mov
pminsw
mov
loop
cld
jnp
cli
jnp
mov
orl
out
jp
lds
movsb
dec
outsb
and
pop
or
cld
in
fs
cmp
decb
mov
mov
add
movsl
movsb
ret
mov
jecxz
ret
xchg
mov
mov
nop
xchg
std
push
sbb
jno
movsl
pop
out
xchg
mov
test
fimuls
cltd
pushf
and
inc
fstl
inc
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
jnp
push
sahf
adc
mov
mov
mov
jno
shlb
add
push
fisubrl
sbb
lock
pop
sub
cmp
dec
js
adc
cli
xchg
push
add
add
and
push
orb
jne
adc
dec
xor
mov
adcb
jbe
jp
js
jnp
jg
add
xlat
test
dec
add
sub
test
dec
cs
andl
add
mov
add
pop
mov
ror
or
lcall
jo
mov
jns
test
ret
dec
jns
mov
enter
push
pop
mov
rolb
inc
int3
lcall
aam
ret
mov
scas
stos
inc
xor
aaa
sbb
les
sbb
stos
dec
jmp
xorb
insb
sbb
aaa
mov
push
bound
mov
enter
and
mov
dec
push
cwtl
arpl
sahf
dec
cli
jg
in
out
mov
push
loop
inc
mov
popa
ret
out
sahf
push
add
fucom
sahf
lods
xchg
adc
mov
inc
mov
sub
xchg
push
cwtl
xchg
ffree
sahf
mov
inc
add
xchg
popa
jb
icebp
aam
dec
fbstp
sbb
cld
loope
out
inc
mov
iret
add
sarl
shl
push
xchg
jg
idivb
cmp
aam
fidivrs
std
inc
pushf
int3
or
jae
inc
adc
or
add
mov
outsb
popf
jecxz
mov
in
cmp
adc
and
xor
test
adc
aas
or
lahf
mov
xor
cmp
push
cwtl
in
ds
jo
dec
sti
jmp
aas
neg
mov
jmp
adc
jecxz
repz
popf
jae
jg
mov
xchg
adc
or
gs
mov
and
mov
sbb
jae
iret
mov
push
daa
int
int3
ror
dec
mov
adc
mov
movsl
ss
pop
adc
mov
stc
stc
imul
loop
xchg
aad
xchg
lea
xchg
xor
sbb
or
and
lods
push
in
iret
push
cmp
loopne
ja
cmp
leave
je
mov
test
out
orb
jle
je
jp
push
push
clc
adc
lea
ja
fwait
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
jno
push
lahf
mov
mov
rcll
movd
mov
xchg
fimull
mov
aam
xor
add
fwait
ss
or
mov
xchg
rclb
outsb
mov
insl
inc
push
outsl
adcl
mov
in
pop
push
jle
ja
dec
hlt
inc
xorl
mov
xchg
loop
rclb
or
sub
pop
mov
jge
sub
pop
pop
add
mov
mov
adc
hlt
mov
and
jbe
repz
inc
mov
xor
fisttpl
in
push
pusha
adc
mov
fwait
add
stos
inc
add
repnz
mov
shll
xor
mov
stc
cmp
inc
xchg
out
dec
pusha
xchg
enter
mov
cmpsl
mov
mov
or
cmp
clc
mov
test
popf
cli
das
push
or
sbb
dec
sbb
pop
mov
divb
cmp
nop
sbb
mov
xchg
rolb
sub
mov
xor
fmull
repz
xchg
mov
pop
jmp
decb
popf
dec
std
mov
lcall
jp
fdivrs
pop
cmpl
pop
clc
ficompl
xor
dec
xor
push
stos
mov
inc
leave
shlb
mov
lahf
add
shrl
pop
test
dec
add
xor
out
lods
cli
lock
jecxz
mov
mov
leave
xchg
jb
inc
xchg
jle
mov
push
mov
mov
sbb
mov
jae
mov
mov
inc
ficoms
lods
mov
mov
and
stos
fdivr
loop
jns
lods
add
mov
jbe
cmp
adc
gs
xchg
sub
dec
out
lcall
mov
outsl
xor
std
xor
jmp
das
movsb
mov
shll
jg
rolb
ret
mov
das
jae
pop
dec
jo
and
dec
data16
jmp
push
pop
fcomi
or
cmp
bound
jecxz
ret
mov
dec
sbb
outsb
orb
lret
out
faddp
xor
sbbb
inc
lahf
lret
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
dec
pop
fists
test
rolb
popw
std
xor
add
dec
sub
int3
push
daa
mov
push
or
jbe
jb
lock
or
push
stc
jp
mov
in
stc
sbb
xor
xchg
sub
sbb
jecxz
and
inc
les
xchg
xor
popf
and
mov
shrb
int
inc
mov
push
cltd
cli
dec
lret
cld
adc
dec
dec
lcall
jmp
mov
stos
dec
dec
ficompl
mov
xor
in
mov
xor
je
out
loop
xor
mov
cltd
mov
dec
addr16
and
pop
or
stc
xchg
cmp
xor
ds
cmp
jp
nop
out
rcr
sub
gs
push
insl
pop
aad
in
push
push
fidivrl
jmp
push
leave
int3
cmp
add
imul
aad
mov
out
xor
mov
test
ss
and
dec
test
add
aam
xchg
cld
lods
push
pop
xchg
sbbl
mov
je
int3
jmp
mov
lret
xor
insb
xor
inc
cld
popf
mov
cld
aad
inc
lahf
je
frstor
sahf
inc
lea
pop
sub
push
fs
mov
inc
xchg
fists
sub
sbb
cmp
sti
lea
das
xor
arpl
in
mov
les
mov
aas
lea
cmpsb
push
stos
ljmp
mov
ljmp
jecxz
dec
movsl
ss
mov
lcall
dec
outsl
das
and
std
xor
sub
push
sbb
pop
rclb
dec
mov
loope
sbb
cld
je
aas
mov
mov
cli
les
fisttps
and
sbb
mov
stc
add
iret
mov
loopne
sbb
dec
jnp
out
jmp
negl
lahf
ja
xor
add
adc
dec
mov
scas
push
dec
js
int3
jecxz
xor
mov
test
xchg
bound
mov
push
sti
pop
jae
jge
ret
sbb
stos
popf
imul
pop
and
push
jae
xor
pop
repz
push
iret
negb
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
sahf
aad
mov
mov
pop
fld
popf
sbbl
pop
jo
xor
pop
enter
ss
dec
push
fcompl
aad
dec
int3
sbb
movsl
mov
ret
or
insb
in
popf
sar
xchg
fwait
insl
cmp
fcompl
push
jbe
stc
cmp
icebp
pop
lods
js
fildll
fildll
repnz
pop
jbe
or
fidivl
les
outsb
int3
xchg
jns
stos
mov
in
arpl
xor
pop
push
sbb
or
adc
push
loope
cmp
dec
dec
cltd
ja
pop
cltd
test
dec
xor
push
push
std
call
jo
push
pushf
sbb
aaa
xchg
call
arpl
outsb
mov
stos
fsubrs
test
add
inc
mov
daa
cmp
mov
jnp,pt
mov
mov
jl
data16
addr16
xlat
add
jo
sub
cld
sub
bound
push
xchg
icebp
inc
mov
test
shll
adc
sub
mov
rcrb
loop
push
xchg
je
mov
scas
mov
jnp
mov
test
xchg
push
sub
fs
or
xor
pushf
iret
enter
dec
dec
lret
sbb
insb
aam
aad
ret
jo
xchg
aas
pop
inc
mov
clc
pop
stos
push
sahf
inc
lock
push
add
or
stos
add
jg
push
lret
mov
pop
pop
add
pop
and
xchg
lret
pushf
pop
xor
popa
xor
into
inc
sbb
rcrl
inc
out
dec
dec
into
mov
mov
repz
sbb
je
fidivrl
mov
xor
sbb
js
mov
nopl
jg
dec
add
mulps
push
in
push
inc
and
xchg
test
out
outsl
sub
iret
lock
bound
js
ljmp
js
cs
add
sub
pop
jp,pt
ljmp
mov
mov
scas
mov
jmp
shll
add
sub
push
jnp
mov
push
pop
in
stc
or
jbe
push
movsl
inc
push
and
fisttps
int
popa
push
test
pop
loopne
scas
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
adc
ret
mov
inc
pop
mov
adc
in
inc
add
hlt
push
int3
lock
or
add
sbb
pop
push
cmpsl
adc
mov
outsl
stos
inc
iret
cs
push
or
sbb
cmp
sbb
jbe
stc
cwtl
cs
push
sub
dec
add
sbb
orl
mov
pop
lcall
aas
xlat
bound
cli
ds
and
imul
lods
jo
subb
popa
or
xor
adc
push
push
out
jl
and
fnstenv
dec
or
push
ret
jg
cmp
call
lret
or
dec
sbb
shlb
sbb
xchg
fcmovb
pushl
cmp
repz
fisttpl
enter
mov
outsl
lods
adc
sub
mov
out
inc
into
mov
gs
pop
mov
mov
mov
sub
loope
jb
push
out
ficompl
aaa
imul
mov
adc
or
stos
repz
icebp
adc
ss
push
sbb
jnp
jnp
dec
dec
push
mov
pop
cmp
dec
jnp
lods
mov
dec
mov
dec
and
nop
cld
pop
dec
or
test
negl
dec
and
rolb
fwait
aas
add
push
mov
in
adc
movsl
insl
mov
and
cmp
push
adc
jmp
dec
je
fcmovnb
loop
int3
shlb
out
popf
mov
mov
dec
dec
add
or
xor
mov
mov
cmpl
repz
or
sub
adc
cmp
sbb
mov
repnz
adc
cmpsl
es
xlat
inc
fimuls
inc
movsl
mov
cmc
lods
imul
js
pop
xchg
fildll
mov
jne
sbb
pushf
lret
fistl
push
mov
jg
mov
ror
and
cmp
or
jmp
xor
cltd
je
gs
mov
or
jbe
jmp
fld
out
xor
mov
aaa
mov
test
fstpt
loopne
ret
dec
mov
mov
test
lret
adc
mov
movsl
adc
out
cmc
insb
sbb
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
int
lods
mov
mov
cwtl
aas
or
dec
mov
lahf
sti
mov
hlt
xor
pop
cmc
ja
adc
add
push
test
jnp
lds
pusha
test
aam
ret
dec
and
or
icebp
add
int
mov
jb
jno
call
hlt
decl
mov
xorb
mul
rcr
movsb
xchg
and
lret
mov
outsl
sub
pusha
cli
sub
xor
push
xchg
mov
std
mov
clc
bound
cmp
and
inc
sbb
cmc
aaa
sar
mov
fbstp
sub
mov
into
or
incb
shrb
sbb
push
in
stc
add
mov
daa
stos
xlat
xor
push
ja
jl
pop
add
mov
lret
test
dec
popf
std
mov
cmpsl
insl
mov
addr16
test
stc
dec
sub
cmpsb
jg
hlt
mov
push
cmpsl
cmp
fwait
cwtl
aad
shll
ljmp
dec
mov
out
dec
int
push
sub
rcr
inc
stc
adc
vpcmpgtd
in
cwtl
pop
out
mov
scas
int3
sub
xchg
insl
cmp
nop
fs
stc
mov
push
dec
xchg
and
insb
mov
xor
fwait
call
and
out
scas
enter
das
out
mov
pushf
dec
mov
sub
adc
or
xchg
cs
jbe
out
dec
mov
mov
adc
push
mov
jb
add
outsl
nop
mov
into
xor
and
popf
mov
and
mov
pop
in
xchg
into
mov
mov
xlat
sti
sub
mov
adc
mov
imul
mov
sub
mov
sbb
pop
fdivs
adc
dec
icebp
scas
cmp
mov
dec
int
mov
push
pushf
cmpsl
xorl
mov
enter
ds
push
pop
repnz
mov
sbb
mov
lds
cltd
sbb
sbb
pop
out
inc
hlt
cmp
into
out
add
stos
out
shr
mov
test
sbb
mov
push
fwait
ret
inc
aam
push
lock
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
sub
lcall
mov
popf
or
push
loopne
in
sub
lahf
popa
iret
pop
and
xor
inc
ret
pop
xor
push
test
in
dec
pop
mov
jno
jle
or
mov
scas
mov
in
xor
lahf
addl
pop
jl
in
dec
dec
and
pop
mov
pop
add
xor
adc
dec
push
push
jg,pn
nop
xchg
xor
adc
sbb
fsts
jecxz
dec
cmp
fs
sbb
sub
sbb
div
xor
stc
xor
fldt
jnp
xor
lret
ja
cmc
movsb
sahf
pushf
mov
cmpsl
cwtl
ficoms
leave
jne
fstpt
add
pop
cmc
pop
mov
inc
mov
popf
stos
data16
outsl
push
or
daa
pop
dec
inc
cmpb
addr16
nop
mov
inc
mov
push
dec
inc
jnp
inc
mov
push
fidivrs
adc
mov
loopne
fmull
sti
xor
push
adcl
xchg
xchg
mov
mov
ljmp
mov
xchg
inc
jmp
mov
mov
lods
xor
lahf
add
mov
out
jae
lea
outsb
mov
xlat
xor
movsb
adc
sub
sbb
and
leave
leave
insl
or
ljmp
mov
cltd
sbb
adc
fisttpll
mov
dec
sbb
and
sub
cmpsl
jne
cmp
cmpsb
enter
mov
dec
movsb
xchg
push
cmp
ret
push
pop
in
stos
cmp
insl
adc
lods
rorb
inc
ret
and
lods
push
movsl
and
xor
scas
in
stos
push
pusha
loop
les
mov
mov
mov
cmpb
sbbb
cmp
jo
lea
lods
addr16
xor
loop
pop
inc
mov
mov
dec
lret
jo
fstpt
xchg
stos
enter
sbb
scas
lret
and
lods
pop
sbb
jns
xor
stc
and
mov
sbb
and
cwtl
adc
cs
scas
pop
jb
aaa
cmpsb
addr16
jge
push
fucomip
outsb
pop
adc
popf
outsl
push
push
push
pop
in
jne
out
push
fbld
jne
pop
cmp
pop
stos
andb
add
xor
cmp
sub
mov
sbb
loopne
mov
jge
enter
cmpsl
pop
pop
out
scas
sbb
push
jae
ja
pusha
mov
daa
fwait
setae
or
add
cltd
jo
enter
xor
movsl
add
jno
das
adc
push
or
andb
dec
jmp
lds
jne
mov
adc
mov
out
pop
sub
sub
mov
clc
push
scas
adc
inc
push
popf
push
cli
insl
lret
fdivp
mov
aas
test
add
mov
sbb
push
jle
xchg
out
ret
sbb
sub
fs
add
jae
mov
jg
mov
cwtl
cmp
xor
imul
mov
loopne
lds
xchg
mov
sbb
sub
adc
mov
jnp
ficoms
sbb
sbb
in
sbb
loopne
pop
mov
xchg
insl
mov
and
repz
and
js
decl
nop
imul
js
mov
insl
jmp
sub
xchg
jge
push
mov
popa
sar
imul
cs
or
hlt
bound
xchg
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
repnz
sahf
outsb
mov
mov
mov
push
ja
loope
xor
imul
mov
inc
sbb
push
imul
pop
push
sbb
jb
mov
idivb
sbb
cmpsl
jg
mov
int3
jne
test
cmp
inc
xor
aam
jecxz
inc
fst
sarb
call
daa
lcall
lcall
cmp
xlat
cmp
mov
shrb
inc
mov
inc
imul
clc
jmp
push
lcall
cltd
or
insl
xor
sbb
jg
adc
xor
push
mov
cld
mov
addr16
mov
icebp
sub
jl
pusha
inc
testb
out
fsubp
mov
pop
xor
mov
cs
repnz
jge
test
cmc
sahf
and
movsl
lret
cmp
nop
gs
aam
inc
and
mov
mov
jne
mov
adc
sub
or
jge
iret
dec
or
pop
in
test
xchg
imul
cwtl
mov
mov
fsubs
sbb
sti
xchg
shl
pop
test
xchg
add
das
std
cs
sub
xchg
jmp
and
pushf
mov
cmp
sahf
sbb
fcmovnb
cwtl
lods
rcll
sbb
lcall
out
push
in
xor
cmp
popf
lret
inc
push
adc
fiaddl
imul
cmpsb
mov
xor
js
fs
and
jle
jge
paddsw
jmp
gs
inc
shr
insl
aas
cmp
mov
dec
inc
cltd
pop
hlt
data16
push
fsubrs
jl
cmp
hlt
mov
adc
ret
lret
cmpsl
xorb
adc
sahf
jnp
xchg
aaa
in
test
out
push
xchg
push
xchg
mov
iret
aam
stos
stos
cmpsb
aad
leave
aaa
lcall
push
loop
gs
pop
lock
inc
int
cltd
push
out
mov
daa
daa
ret
fistl
cli
add
mov
xchg
jle
and
adc
push
cwtl
sub
mov
jmp
add
adc
inc
fimull
jp
outsb
sar
add
pusha
mov
stc
lahf
jno
sahf
push
fisubl
int3
inc
mov
adcl
shrb
aad
pop
push
sbb
stos
cltd
clc
ljmp
jg
cmp
les
test
and
loopne
clc
dec
rcrl
rclb
stos
jmp
gs
add
cmpsb
adc
lods
out
stc
add
xchg
neg
pop
cmp
jge
es
mov
xor
lahf
xor
out
inc
rcl
ret
lcall
pushf
in
xchg
or
jle
adc
pushf
dec
out
push
testb
mov
jns
mov
pop
adc
adc
gs
popa
or
xchg
pop
mov
push
cmp
push
mov
repz
xchg
pop
into
mov
push
push
lock
ljmp
clc
das
testb
xchg
jo
iret
jo
scas
jae
mov
movsl
outsl
inc
shlb
pop
jecxz
mov
cwtl
fcmovnu
jbe
add
mov
outsl
jb
mov
es
out
movsb
test
xor
xchg
and
or
mov
pop
and
xchg
mov
aam
clc
dec
push
inc
js
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
roll
mov
mov
push
insb
lds
push
ret
test
fs
loopne
ficoms
pop
loope
out
push
sbb
cmp
and
std
scas
sarl
ficoml
pop
and
gs
sub
push
pop
sbb
xor
xor
pop
or
or
call
mov
jp
cltd
pop
enter
push
scas
dec
popf
jns
shll
push
push
dec
lock
inc
push
arpl
mov
or
mov
imul
lods
mov
xor
fwait
fwait
cmpb
ja
pop
mov
or
mov
sbb
mov
lahf
lret
adc
xchg
sbb
int
dec
lods
sbb
imul
lods
ret
lret
adc
adc
fsubrs
mov
jne
in
push
inc
mov
loopne
pop
sub
lods
imul
xor
jmp
jle
leave
xor
pop
push
mov
iretw
ja
cmpl
or
andb
cli
jl
rorb
sub
loop
lcall
mov
mov
mov
hlt
adc
mov
fwait
mov
jg
std
lods
jnp
int3
dec
stos
in
and
jmp
push
fst
jmp
jb
jb
or
mov
cld
dec
and
jns
pop
faddp
mov
jns
clc
incl
cmp
inc
js
mov
jl
lret
xorb
sub
cmp
shrb
and
xchg
lea
inc
loop
sub
data16
aas
fwait
adc
into
adc
imul
mov
imul
movsl
cmp
out
cwtd
outsb
into
dec
in
stos
out
add
mov
dec
call
push
cli
xchg
aas
shl
cmp
xchg
push
add
popa
test
fnstcw
fdivrs
test
rcr
cli
jae
rcrl
and
cmc
sub
sub
pop
imul
and
loopne
push
ja
pop
cmp
pop
cmp
mov
imul
or
push
insl
lock
clc
aaa
cwtl
insl
cmpl
test
sbb
sti
mov
xor
in
fidivl
sar
dec
lahf
and
dec
mov
mov
insb
in
movsb
loope
mov
in
mov
fdivs
sbb
clc
outsb
pusha
sbb
dec
dec
in
and
aam
std
stc
adc
sbb
icebp
pop
repnz
mov
pop
loop
add
outsb
movsb
jl
push
jecxz
sub
ds
subl
ljmp
pop
movsb
jbe
les
stc
jle
and
and
sub
fistps
fs
enter
push
jbe
xor
int
jl
pop
lcall
imul
xlat
scas
outsb
and
xor
nop
add
mov
mov
loope
fisubrl
in
shrl
jae
pushl
iret
and
lods
iret
adc
mov
jmp
sub
lea
push
and
gs
popa
outsl
sahf
or
jg
jge
addr16
gs
icebp
loop
lret
dec
sub
orb
in
inc
add
and
stos
add
adc
gs
push
sub
inc
mov
dec
js
aam
sub
test
mov
push
stc
out
mov
cmp
xor
orb
fists
fs
cli
sahf
call
les
add
xchg
push
fidivs
pop
std
mov
sarb
clc
or
mov
add
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
xchg
push
iret
mov
mov
lret
out
push
push
mov
push
dec
fstpt
lret
rcl
jno
shll
xchg
mov
and
adcl
movsl
in
add
outsb
iret
xor
and
repz
cmp
adc
leave
jb
xor
or
mov
test
pop
xor
jne
imulb
or
jge
sub
adc
test
mov
jnp
xchg
mov
push
imull
or
jne
ror
hlt
out
add
push
stos
pop
mov
jbe
loopne
arpl
dec
dec
xor
rcll
js
add
mov
xor
mov
push
addl
sahf
mov
or
jne
mov
cmpsl
test
fwait
add
dec
dec
mov
inc
cmp
jmp
pushf
sbb
adc
jno
ss
sbb
pushf
popa
pop
insl
pop
jle
imul
das
push
add
mov
das
mov
mov
in
mov
cli
or
out
mov
idiv
sbb
push
movsb
xor
push
jno
mov
dec
dec
xor
loop
out
adc
xchg
test
cmp
push
jge
js
push
sub
fbld
es
dec
lret
inc
mov
aad
and
or
lcall
addb
sti
xchg
xchg
xor
dec
addr16
aaa
fbld
sbb
mov
add
nop
in
jae
lods
loope
scas
hlt
push
ja
xor
push
fs
pop
mov
xchg
in
das
dec
inc
outsl
xchg
lret
je
test
inc
nop
scas
lds
inc
in
dec
jno
or
push
aas
pop
pop
sub
push
cwtl
mov
jle
mov
jno
ret
pop
iret
es
cmp
mov
sbb
sbb
xor
xlat
clc
xchg
in
xchg
ljmp
fstpl
jmp
iret
les
and
mov
lock
insb
js
xchg
jmp
sbb
jno
mov
push
xchg
fdivl
push
add
and
movsb
inc
cmpsl
mov
push
xchg
fdivp
xor
xchg
sbb
cmp
enter
cmp
cmp
fwait
adc
daa
or
fcmovne
icebp
test
test
fdiv
ss
xchg
lods
repz
xor
push
hlt
push
jmp
mov
dec
sub
test
iret
jecxz
cli
jp
je
repz
inc
push
dec
lods
xor
aam
inc
cs
flds
dec
es
jne
cli
mov
jae
sub
fdivrl
imul
sbbb
push
add
adc
and
mov
push
movsl
rcrl
into
push
std
adc
pusha
repz
mov
std
or
jns
les
jmp
out
add
cmp
add
repnz
mov
mov
test
repnz
out
pop
and
filds
cli
sti
adc
loope
or
lock
repz
clc
pop
add
fiaddl
ss
nop
loope
add
jp
bsf
and
push
ds
xor
xor
mov
addr16
add
sub
insl
add
adc
sub
push
rol
jl
cmp
push
sub
inc
jnp
sub
ret
xchg
stos
cmpsl
sbb
or
lods
mov
in
push
xor
xchg
jecxz
mov
mov
pop
or
inc
add
add
outsb
js
jp
cmp
and
mov
sbb
in
mov
add
pushf
cwtl
add
iret
jno
shll
xlat
pop
and
sti
je
pop
rolb
je
pushf
loopne
outsl
clc
xor
dec
sbb
xor
movl
movl
mov
jmp
fisubrl
mov
or
or
xchg
les
fadd
or
fidivrs
fcmovbe
xchg
sub
mov
fs
psrld
lcall
test
ljmp
stos
hlt
pop
shll
shll
subl
stc
imul
xchg
push
std
loope
sbb
pop
mov
or
push
xchg
mov
leave
add
cwtl
js
mul
aaa
mov
push
mov
pop
inc
sub
push
outsl
xlat
mov
popa
rolb
mov
push
sbb
mulb
je
fistpll
movsb
sbb
test
jno
int3
mov
in
xchg
cs
adc
push
mov
stos
sbb
mov
frstor
jae
and
push
pop
movsl
stos
pop
add
push
push
inc
or
out
sub
loope
int3
dec
jg
aaa
es
test
stc
xor
push
and
jns
inc
cwtl
loopne
ds
mov
push
xchg
repz
sbb
mov
and
dec
and
out
adc
mov
loope
mov
xchg
mov
int3
outsb
sub
xlat
sub
out
lea
int
sarb
in
or
cld
jmp
test
movl
int
cmp
mov
ss
dec
add
cmpsb
mov
dec
cmpsb
popf
les
lods
scas
sbb
loop
add
data16
dec
adc
jae
outsl
xchg
or
lods
inc
fcmovb
mov
push
clc
outsb
sti
addb
mov
lret
inc
add
pushl
lahf
dec
inc
in
push
add
and
jp
dec
repnz
mov
and
loop
mov
inc
out
sub
shlb
das
cli
jl
cmp
and
gs
push
push
or
aam
pavgw
in
mov
mov
cmp
mov
das
jle
popa
sti
cmp
push
outsb
fbld
ss
scas
out
xor
pushf
jl
hlt
test
in
and
iret
xchg
xor
mov
iret
call
add
pop
cmpsb
shll
aaa
fcoml
dec
sub
leave
imul
sbb
rcl
shll
test
cmp
push
mov
jb
movsb
popa
mov
outsl
sub
xor
or
bound
pop
mov
test
popf
sbb
pushf
sbb
mov
pop
cs
push
cmp
cmpsb
jb
sub
xchg
xchg
mov
in
push
outsb
arpl
mov
cmpsl
mov
dec
int3
cmpsb
mov
loope
jbe
int3
mov
shlb
lds
aaa
push
shll
test
push
call
adc
jle
lahf
fs
and
int
aaa
mov
loop
dec
jge
pop
mov
jge
addb
pop
stos
andb
aam
mov
enter
cmp
xchg
loop
mov
popf
insb
pop
mov
mov
cs
cltd
inc
hlt
call
jae
adc
sbb
int3
mov
fisttpll
inc
std
sahf
into
adc
mov
push
cltd
jg
add
xchg
or
xchg
scas
cwtl
sub
pop
sbb
ret
aaa
clc
pop
cld
outsb
fwait
out
jns
and
sub
or
mov
and
icebp
dec
lcall
popa
bound
xchg
outsb
repz
lock
insl
sub
int3
into
cmp
lea
in
out
in
jbe
xchg
in
sbb
cmp
popf
mov
out
sub
add
push
pop
pop
mov
addr16
push
in
jne
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
pop
repnz
mov
les
ret
int3
pop
and
adc
adc
gs
mov
in
aad
sbbl
fwait
push
push
popf
addr16
repz
xchg
test
dec
jge
jle
es
shll
mov
in
xor
dec
xor
insl
sahf
inc
popa
push
lods
scas
leave
test
mov
test
es
and
push
rcrl
inc
add
decl
movsb
xor
adc
lds
inc
inc
loope
fcmovnu
lds
das
fimuls
sub
fs
iret
je
mov
iret
shll
push
inc
adc
xor
pop
mov
addr16
pop
shlb
xor
cmpsb
addr16
xchg
xchg
or
push
lods
iret
jbe
lcall
lcall
out
jmp
xor
loop
ret
pop
dec
and
les
aaa
outsb
dec
dec
push
inc
add
std
leave
fstps
and
xchg
mov
in
fnstcw
sbb
mov
pushf
xchg
in
xchg
in
push
push
icebp
mov
cld
ljmp
push
xchg
js
movsl
mov
das
push
xor
mov
dec
fldenv
adc
je
les
in
je
jbe
cmp
mov
inc
mov
or
mov
fildll
adc
xor
in
fiaddl
setno
call
or
in
ja
mov
jno
rcll
test
dec
inc
pop
addb
mov
xchg
rcll
pushf
xchg
iret
andb
mov
call
cmpsl
mov
xlat
pop
imul
ficoml
gs
push
in
insb
scas
add
cmp
pop
mov
fs
mov
cltd
inc
sub
aaa
adc
mov
mov
daa
jg
sbb
xchg
sar
push
push
ret
mov
mov
add
fcompl
lock
jle
xor
fwait
mov
cltd
add
inc
add
in
popf
jae
in
fdiv
movsl
mov
xchg
mov
aad
push
or
call
imul
pop
test
jne
out
rclb
sub
xchg
stc
xchg
mov
sbb
jl
xor
fs
mov
sbb
cmp
scas
jecxz
and
jae
adc
addr16
cli
xor
cwtl
iret
mov
jbe
lock
stos
xor
dec
rcrl
inc
outsl
nop
sub
out
fdivrp
rorb
sbb
orb
mov
shrl
jmp
mov
sbb
addl
sub
push
pop
cwtl
scas
mov
inc
sub
inc
inc
cmc
adc
adc
not
lods
add
pop
repnz
dec
cmpsl
sub
dec
out
dec
incb
imul
mov
mov
mov
inc
mov
jmp
loope
ret
fisubs
push
lea
xchg
insl
add
push
and
gs
jl
xchg
push
ljmp
out
aaa
xchg
pop
outsl
fdivrl
sbb
sub
rorl
xchg
or
or
loope
fimuls
sub
cwtl
ret
inc
add
rol
lcall
pop
mov
add
insb
add
mov
mov
das
cmp
lods
or
out
jns
mov
push
jo
xor
push
popa
mov
stc
test
jle
push
jae
insb
mov
inc
in
cs
ljmp
lcall
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
push
imulb
xchg
out
mov
xchg
cwtl
outsb
fildl
pop
aas
scas
dec
imul
cmpsl
movsb
dec
adc
xchg
es
mov
adc
push
cltd
out
jnp
clc
test
cmp
bnd
mov
scas
pop
mov
xchg
mov
rolb
aad
ja
shl
xchg
push
jle
jo
lahf
or
xor
repz
roll
repnz
push
mov
add
push
mov
pop
fmul
ds
or
aad
mov
cmp
push
mov
inc
outsl
xchg
rcll
fs
daa
fst
push
loopne
sbb
pop
out
jmp
movsl
push
add
and
loop
lods
jmp
jmp
sub
pop
dec
adc
shll
mov
mov
cmpsl
fs
push
or
or
xlat
adc
dec
into
in
fdivl
cs
sub
cmp
mov
sub
xchg
cld
push
repnz
fistpl
fsub
push
cmp
mov
repz
sbbb
stc
jp
push
push
sbb
sub
leave
push
in
pop
mov
fstps
sub
and
jae
js
jns
jl
sti
push
jbe
sti
jecxz
test
in
and
ja
scas
sub
mov
in
add
test
inc
mov
push
mul
xlat
mov
jnp
jmp
fstpt
dec
pop
sbb
mov
call
push
pusha
lods
outsb
cmc
push
loope
mov
ficoms
je
add
js
sbb
lods
ss
and
movsl
mov
fisubrl
inc
pcmpgtb
stos
or
movsb
push
push
mov
js
cmp
shll
aad
std
cmp
scas
js
dec
insl
lock
push
subl
xchg
in
shll
lds
mov
pop
scas
dec
sbb
push
lar
mov
mov
mov
sub
adc
imul
push
jbe
scas
adc
stos
xchg
adc
daa
gs
testl
test
lea
or
lea
inc
mov
cmpsb
sub
mov
shlb
shll
sub
inc
lods
xchg
xlat
push
data16
and
inc
xor
or
xor
movsb
push
pop
mov
mov
scas
cmp
cmp
shll
or
sbb
dec
jbe
sbbb
pushl
jne
sub
repz
cltd
mov
aad
ss
jecxz
pop
es
mov
hlt
iret
nop
stc
outsl
sbb
cmp
add
push
jbe
bound
dec
mov
cmp
ds
dec
lds
and
aam
jnp
movsl
adc
and
and
pop
mov
aad
repz
hlt
push
imul
stos
sahf
push
iret
xor
js
in
andb
pop
insb
sbb
jl
add
aas
aam
mov
mov
shll
out
push
fstpt
inc
jl
jno
test
jo
out
icebp
cmp
mov
ss
sbb
jle
in
shrl
idivl
sub
xor
push
push
cltd
out
data16
fmull
fnsave
inc
add
out
inc
jnp
xor
stos
sub
mov
shlb
or
je
pop
sbb
daa
cs
in
sbb
fwait
xchg
pop
jp
sbb
ljmp
lds
mov
mov
sbb
push
mov
cmc
jne
inc
shlb
fsts
xchg
cmp
jl
inc
movsl
cwtl
jmp
and
es
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
js
xor
gs
mov
notl
or
cs
mov
push
fisubs
mov
sbb
mov
push
mov
and
pop
mov
loop
mov
inc
xor
jb
fldt
adc
lcall
loopne
or
loope
aad
fadd
jp
orb
cwtl
cmc
pop
and
in
jbe
jmp
nop
sub
in
sbb
sub
add
ret
sub
jle
cltd
lods
stos
dec
loopne
test
lcall
dec
mull
jo
sub
or
addr16
jmp
add
and
call
repz
sbb
or
sbb
stos
rolb
aam
in
mov
mov
addl
mov
hlt
push
jb
sub
jle
jns
fmuls
pop
adc
sub
aas
aaa
leave
and
iret
jg
shrl
add
mov
leave
ffreep
imul
pop
xor
lret
idivl
imul
bound
inc
jnp
and
cmp
aad
mov
adc
push
sub
fists
roll
dec
jmp
scas
mov
int
in
jno
out
in
fmul
loop
and
or
stos
mov
fcom
pop
cmp
xchg
jb
dec
xchg
imul
jne
mov
ja
or
pop
mov
rcll
aas
sar
fwait
pop
cmp
mov
js
sub
and
and
test
cmp
xchg
rcrb
mov
insl
inc
imul
cs
faddl
jecxz
xchg
or
sub
rcr
adc
jecxz
loope
xor
mov
mov
cmp
cmp
push
inc
mov
xor
xor
int3
lcall
cmpsb
ja
adc
aas
addr16
std
je
shl
sbb
sbb
mov
ds
adc
stos
push
aas
mov
popa
sti
jmp
mov
fmuls
mov
jns
pop
sbb
mov
inc
cmp
push
pop
xchg
jl
iret
rol
lds
xor
dec
js
mov
sub
mov
xlat
inc
dec
aad
fldpi
cld
mov
cltd
out
call
cmp
push
dec
cmp
push
dec
mov
xchg
xor
dec
fcmovu
je
stc
push
js
mov
mov
ss
ja
sub
popa
iret
adc
pop
in
sti
mov
dec
push
add
sub
add
mov
test
mov
insl
jge
repnz
push
sbb
sbb
sbb
lret
in
ret
mov
stc
in
inc
in
ljmp
push
or
fcomi
test
sahf
lcall
mull
mov
push
push
mov
andl
xor
sub
pop
sti
call
orb
pop
es
inc
jmp
sbb
push
out
fcoms
mov
cmpb
adc
int3
mov
sub
mov
cmp
scas
std
mov
xor
dec
mov
jg
dec
fs
int3
ret
fstl
xor
lods
pop
sub
sub
mov
xchg
daa
lret
inc
xchg
sahf
add
sub
das
js
rcrl
das
cli
jmp
inc
jnp
and
dec
jp
cmp
push
xchg
pop
fdivs
pop
adc
in
or
loopne
push
jmp
inc
or
ljmp
out
add
cmp
push
repnz
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
rorl
int3
dec
xchg
cmp
mov
mov
out
xchg
mov
inc
iret
cmc
lock
imul
test
mov
aam
jns
xor
mov
pop
je
xor
in
inc
incl
lock
pop
xchg
pop
sub
sbb
adc
jecxz
pushf
sbb
adc
stos
add
inc
call
jbe
shrl
mov
aaa
push
sti
sbb
and
pusha
cmpsb
inc
popa
aas
mov
push
aas
testb
call
mov
cmp
stos
mov
pop
aaa
sub
leave
inc
cmpsl
cmp
cmp
dec
repnz
jp
mov
push
add
xor
mov
push
test
mov
push
xlat
xchg
rol
lret
addr16
jmp
das
sahf
push
test
out
mov
mov
aaa
aaa
addb
push
push
sbb
push
ss
sbb
repz
jle
popa
jl
mov
jmp
adc
dec
sbb
mov
adc
xor
mov
jne
out
add
arpl
sbb
or
lret
xchg
sub
jns
and
pop
xchg
js
lock
pop
or
int
movsb
push
fildl
push
mov
mov
xchg
mov
xor
fsts
es
outsb
ss
xlat
insb
out
push
jecxz
decb
fwait
mov
aaa
xor
and
sarl
popf
jl
jns
dec
or
in
cmp
mov
adc
xchg
pusha
es
stos
jp
aaa
xor
dec
dec
ss
mov
fstps
iret
js
dec
sbb
in
xchg
or
call
sar
mov
add
and
cmp
jecxz
mov
adc
push
out
js
jmp
add
stos
push
and
pushf
sbb
pop
mov
inc
addr16
lds
mov
pop
outsl
xchg
sub
sbb
push
pop
ficompl
lret
pusha
iret
jns
es
and
xor
mov
jp
inc
push
mov
mov
shr
les
mov
ret
dec
mov
xor
inc
call
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
xchg
and
push
cld
mov
mov
jmp
or
jp
loope
repnz
mov
xor
mov
jg
lock
sub
xor
and
and
icebp
adc
test
add
shl
push
lret
outsb
cmpb
cmp
xlat
xor
inc
cmpsb
lret
das
imul
in
adc
mov
mov
jbe
clc
lods
inc
jno
call
dec
jle
iret
push
scas
add
mov
adc
fstpl
or
pop
mov
jp
aam
lcall
jmp
data16
repnz
ror
push
jmp
xor
aam
or
cltd
jmp
or
mov
push
in
lods
outsb
push
adc
xchg
add
lods
xchg
add
fsub
lret
and
lods
adc
adc
xchg
rolb
imul
aad
iret
inc
test
inc
rorb
and
jle
jg
add
lcall
lahf
int
cs
sbb
clc
sub
js
cli
loope
test
shlb
out
sub
sub
jne
icebp
adc
or
cmp
mov
fldenv
push
pop
push
leave
pop
inc
cwtl
aad
mov
imul
mov
or
or
and
lock
xor
outsl
lds
inc
and
movsb
mov
jg
jg
mov
je
shll
rorl
shll
mov
xorb
movsl
pop
cwtl
mov
aam
jns
xor
or
dec
mov
cs
scas
push
or
or
out
push
xchg
cmp
nop
sbb
jns
mov
jno
jo
jns
test
inc
jne
scas
push
xor
lods
push
lock
sbb
lret
sarl
and
std
mov
jle
insb
bnd
ss
mov
pop
sahf
jno
push
pop
addr16
adc
push
fdivrs
lcall
sti
jns
jbe
and
jmp
mov
repz
sbb
fbld
stc
hlt
push
push
lret
pop
jo
inc
stos
lds
sbb
mov
leave
hlt
jle
fsubs
pop
xchg
push
xor
add
inc
in
jge
add
inc
call
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
push
mov
mov
mov
mov
ret
mov
mov
bound
mov
dec
data16
fwait
push
xor
xor
xchg
leave
imul
pushl
push
lds
das
aaa
daa
sahf
jl
mov
out
mov
jp
pop
ljmp
pusha
add
lods
loop
sub
lret
mov
scas
cmp
pop
jo
cs
or
dec
mov
cli
out
ljmp
mov
or
and
iret
dec
bound
and
jno
mov
dec
mov
sub
shlb
insl
sbb
daa
mov
dec
pop
jg
adc
jne
add
ficoms
out
aam
xor
pusha
addl
setl
xorb
icebp
sbb
pop
aad
aad
sti
loopne
in
cmc
cmp
movl
mov
inc
pop
push
mov
ret
lahf
insl
popa
pop
mov
pusha
std
jno
shl
sbb
fnstsw
loope
mov
mov
out
daa
addl
fnsave
xor
inc
int
stc
or
mov
lretw
aad
cwtl
inc
frstor
xchg
fs
add
test
lods
adc
mov
dec
mov
cmp
push
lea
loopne
hlt
nop
insl
mov
shr
mov
pop
mov
cmp
xchg
lock
xchg
fdivrs
sarl
aad
icebp
ror
add
stos
sub
mov
aaa
ja
sub
iret
and
into
cs
adc
leave
jb
in
sbb
mov
jle
sti
sarl
push
jnp
js
and
mov
jne
mov
adc
call
or
gs
stos
mov
movsb
adc
out
test
js,pn
pop
lret
ret
jne
repz
adcb
xchg
in
xchg
or
jecxz
cmp
xchg
cmp
mov
or
jnp
lock
pushf
adc
pop
sbb
xchg
rorb
aam
loope
jae
rorb
int3
aad
xor
jl
daa
and
adc
jge
int3
ljmp
push
call
lds
stos
stos
cli
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fstpl
pusha
sahf
int
mov
mov
ror
or
mov
mov
adc
and
pop
inc
loop
lcall
adc
lret
mov
fdivs
cmp
push
or
push
daa
lcall
popf
mov
mov
shrb
jmp
in
mov
or
jle
scas
loop
mov
sbb
push
dec
xor
out
or
jecxz
loop
insb
fsubrp
adc
add
daa
jae
pop
lods
jno
mov
loope
cmpsl
mov
xor
xchg
lods
xchg
jge
xor
and
mov
mov
idivb
mov
jg
outsl
gs
in
cmc
inc
mov
mov
test
dec
xor
int
int
mov
push
imul
inc
sbb
inc
out
movsb
xchg
cltd
arpl
cmp
aam
xchg
inc
xchg
pop
xor
pushf
fst
push
mov
setb
std
and
popa
stos
add
test
xor
inc
or
add
shrl
sti
cwtl
lret
ds
inc
xchg
gs
xchg
xchg
scas
adc
sub
pusha
adc
xor
mov
mov
ljmp
dec
outsb
mov
adc
fdivr
jae
icebp
adc
push
cli
cli
pushf
cltd
jmp
push
aad
add
test
cwtl
jns
sbb
jmp
push
loop
shll
sarl
clc
sub
pushf
scas
fstpt
inc
xchg
out
sub
mov
push
in
mov
jae
lret
jno
push
in
arpl
inc
jle
pop
ret
adc
jge
push
pop
hlt
mov
dec
sub
mov
aad
mov
daa
mov
xchg
lds
movsl
into
int3
insb
iret
add
lock
in
lea
test
add
outsb
daa
pop
fsubrs
lds
lcall
into
push
pop
dec
data16
test
stos
fistpll
dec
inc
pushf
cmpsb
les
xor
mov
dec
cmp
pop
sub
cmp
dec
out
xor
mov
xchg
jecxz
std
pushf
mov
pop
sub
scas
pop
push
dec
push
jmp
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
iret
stos
or
mov
fbstp
mov
or
mov
xchg
test
shlb
mov
jb
pop
std
xchg
push
pop
xor
xchg
outsb
ret
mov
mov
notb
xchg
loopne
repz
dec
mov
mov
jle
aaa
sub
fisubl
jb
in
dec
hlt
xor
fldcw
push
insb
mov
call
sahf
dec
xchg
vmovapd
cmp
jbe
dec
jae
mov
or
iret
hlt
xor
ss
out
rorb
lds
frstor
inc
jge
gs
scas
dec
arpl
ret
add
pop
sbb
inc
push
adc
lea
ss
xor
aas
outsb
es
add
sbb
fcompl
mov
int
cmp
rorl
lret
enter
adc
nop
mov
push
shll
fnstenv
bound
andl
repz
sub
lcall
xor
push
out
movsl
stc
xlat
xor
pop
lods
repnz
divl
mov
int3
cmpsl
mov
inc
adc
xchg
add
or
sub
pop
dec
sbb
aad
cmpsl
pop
or
lods
inc
sub
jl
aad
dec
jnp
arpl
loopne
test
add
push
in
movsl
stos
inc
lods
arpl
mov
scas
mov
test
sbb
pop
clc
xchg
xchg
push
or
ja
jns
pushf
and
xchg
loop
pop
mov
jns
adc
mov
lret
add
jge
fwait
mov
xor
and
insl
inc
lcall
cmp
pop
fs
test
push
nop
sahf
cli
repnz
lret
or
in
xor
pop
jmp
std
cld
adc
fwait
sbb
sub
stos
popa
roll
aaa
je
xlat
pop
test
cmp
and
push
scas
cmpl
add
adc
push
add
test
sbb
xor
pop
or
mov
and
mov
xchg
int3
jle
ja
jno
dec
cmpsb
jae
mov
call
addb
shll
lcall
inc
scas
pop
mov
push
adc
arpl
pushf
jnp
mov
xchg
xchg
sub
jae
loop
stos
pop
cmpb
lcall
lea
call
mov
repnz
mov
fldcw
pop
cmpsb
cmpl
ds
jge
sarl
sbb
call
push
sub
jo
jecxz
pop
xchg
addb
loope
mov
mov
jne
mov
xchg
push
in
jb
repnz
xchg
jmp
pushl
loopne
gs
movsb
mov
or
mov
movsl
sub
ljmp
pop
pushf
push
insb
add
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
nop
test
mov
mov
jae
stos
mov
into
mov
mov
xchg
imul
test
hlt
inc
fs
sti
rcl
xor
sub
dec
mov
je
addb
sub
int3
jmp
jo
je
scas
jp
cmp
lea
cmpsl
in
or
xchg
les
nop
imul
fcompl
enter
scas
js
test
and
adc
mov
std
out
add
mov
ds
push
cmp
std
imul
add
xchg
mov
jmp
xchg
jmp
mov
mov
pop
les
les
mov
clc
pop
xchg
ss
es
jecxz
xchg
sti
ficoms
jmp
and
dec
or
pop
inc
out
mov
idiv
pop
mov
cmp
push
or
pushf
lcall
push
into
sub
adcl
adc
push
outsl
std
dec
xchg
xor
lahf
push
inc
jg
jbe
stc
pusha
fs
je
ss
and
adc
xor
andl
mull
push
lcall
lret
movsl
arpl
shrb
sub
sub
fsubrl
sub
xor
arpl
xchg
adc
jg
test
jnp
fsub
dec
aad
jg
je
sbb
push
mov
gs
pop
and
mov
adc
lock
ret
dec
iret
fidivl
mov
ret
arpl
jp
inc
fldenv
xor
fs
push
xchg
push
jmp
je
cmpsl
stos
sbbb
xchg
dec
add
sbb
mov
push
inc
xchg
ljmp
and
jnp
stos
sbb
pop
xchg
jle
mov
jns
cmp
pop
cld
dec
jle
fs
mov
lsl
nop
add
dec
add
mov
nop
jp
inc
repnz
jne
sbb
popf
sti
and
jbe
rclb
fistl
sub
adc
jmp
sub
jno
jns
jne
ret
fistpll
pop
lahf
jns
xchg
cmp
decb
fcomi
cmc
xor
jnp
or
jmp
aas
test
xchg
repz
mov
mov
xor
sbb
lcall
lea
es
aaa
subl
pusha
jecxz
mov
fsubrs
in
push
mov
mov
pop
and
imulb
xor
fwait
cmp
push
cmp
or
mov
adc
mov
mov
cmp
xor
insb
call
je
andb
or
xchg
js
mov
sbb
je
sub
adc
test
mov
iret
xchg
dec
ret
ret
dec
pop
fcmovnb
or
sti
out
repnz
xchg
popf
pop
push
pop
lret
pop
lcall
add
add
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
int3
ss
xor
mov
mov
xchg
outsb
enter
sub
imull
mov
sbb
addr16
adcb
loopne
call
jmp
mov
repz
add
popa
js
fisubrs
mov
ret
xor
leave
in
dec
arpl
int
pop
out
dec
mov
xor
dec
sbb
cmc
sbb
fdivrs
adc
sub
adc
mov
out
aaa
push
xor
inc
lret
je
lds
imul
sar
mov
inc
jle
aas
mov
dec
enter
push
push
xchg
pop
or
dec
xor
test
push
dec
ljmp
dec
or
push
rcrl
cmp
sbb
adc
mov
out
imul
lock
mov
mov
jp
test
gs
mov
adc
adc
cld
push
push
mov
fadds
lds
sub
add
mov
adc
mov
shll
cs
cmpsl
andb
mov
jnp
or
push
shlb
cmp
inc
dec
int
push
push
push
or
inc
mov
mov
xchg
sbb
lahf
inc
sub
shrl
mov
fdivl
or
fdivs
pop
mov
jns
dec
out
jle
bound
js
mov
jne
push
stc
aaa
cmp
leave
lret
or
sbb
inc
popf
dec
pushl
jl
inc
repnz
shrb
lahf
sbb
push
fcompl
xor
mov
and
fcomi
mov
sbb
aaa
mov
mov
and
jge
xchg
fimuls
mov
mov
loop
repnz
adc
lods
dec
lock
out
ljmp
jle
sbb
xlat
pop
enter
dec
jne
jae
bound
dec
inc
test
jmp
sbb
rcrb
daa
lret
daa
shll
shlb
xchg
add
in
pop
fs
cli
cmp
pop
and
ret
bound
mov
cmp
or
lahf
inc
push
arpl
jp
rcll
and
or
cmp
icebp
cmp
or
in
cmp
ret
adc
inc
xchg
mov
iret
mov
stc
xor
lea
shlb
push
dec
xor
or
daa
movsb
mov
cmc
imul
inc
aas
fwait
cwtl
cld
mov
jbe
add
jg
out
pushf
cmp
cmpsb
into
test
popf
mov
push
jae
mov
js
jnp
popa
mov
mov
ret
les
lcall
cmpsl
je
mov
ret
dec
loopne
dec
or
es
fsts
adc
dec
sub
into
fldt
jo
test
into
inc
lds
repnz
addl
das
stos
sub
imul
jp
stos
xchg
lret
stc
cmp
clc
orl
fdivrl
cs
xchg
inc
ficomps
sub
fst
into
hlt
loop
hlt
js
and
add
mov
jmp
cs
xor
mov
mov
xor
cmpsb
orl
pop
ret
insl
insb
inc
and
int3
pushf
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
pop
mov
pop
push
mov
mov
insb
fs
das
mov
pushf
cltd
mov
stc
mov
xor
jno
sub
insl
hlt
nop
mov
cli
testl
call
push
pop
insb
dec
fistpll
outsl
sbb
xchg
sahf
lret
insb
push
push
mov
pop
pushf
mov
or
push
cmp
jne
and
in
fwait
je
dec
mov
mov
cmp
test
outsb
or
and
or
stos
bound
sbb
dec
dec
es
shl
pop
imul
movsl
sub
mov
push
ss
dec
into
imul
and
xor
and
cltd
xchg
inc
ficoms
ret
push
mov
inc
jno
mov
cmp
mov
xchg
and
push
sbb
sub
xchg
sahf
repz
enter
cmp
jbe
jno
inc
adc
cmp
add
pop
bound
imul
je
lods
push
add
xor
cmp
jo
test
mov
out
out
sti
jge
das
push
jecxz
addr16
jo
xor
bound
mov
cmp
or
lock
out
mov
sti
mov
aaa
test
xchg
mov
push
rcrb
and
push
popf
enter
add
xor
stos
int
dec
mov
clc
pusha
add
add
dec
sbb
dec
or
push
add
mov
push
inc
push
mov
mov
enter
bound
les
xchg
dec
sti
mov
cld
adc
ds
addr16
mov
xor
xor
test
mov
cmpsl
fldenv
cwtl
outsb
jmp
dec
xor
aaa
jns
cmc
pop
data16
dec
mov
xchg
or
xchg
add
lods
dec
adc
push
out
xchg
mov
mov
mull
or
push
loop
sub
xor
or
jge
xchg
insb
or
cmp
clc
in
cmp
adc
fsub
arpl
sub
push
pop
ja,pt
cld
popa
push
mov
int3
ficompl
mov
inc
dec
das
aad
jp
fiadds
mov
fistps
mov
cmp
dec
sbb
adc
adcb
cmpb
push
int3
call
mov
loopne
and
adc
pop
mov
dec
pop
cld
mov
fistl
pop
xorl
cmpsl
scas
sub
movsl
cmp
mov
cmp
mov
ret
adc
push
shlb
ljmp
sahf
orb
das
icebp
imul
out
mov
lock
lcall
push
adc
sbb
je
popa
test
fisubrl
int
movsb
inc
inc
sbb
lret
fwait
repnz
test
mov
cmp
xor
shll
in
iret
fcoms
cmc
xor
loope
cwtl
mov
fs
addr16
pop
int3
out
pop
xlat
gs
adc
ss
cmpsb
mov
and
sub
push
sub
std
into
jmp
push
sbb
scas
cli
mov
std
stos
mov
test
dec
into
or
mov
cmp
in
shrb
imul
fwait
movsb
lahf
inc
jecxz
sbb
pop
push
dec
mov
mov
push
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
inc
js,pt
jge
mov
mov
testb
js
rorl
rorb
xchg
jle
cmpsb
repnz
test
push
mov
mov
sub
sbb
dec
andb
icebp
pop
ficoml
xor
or
mov
push
sub
sub
insl
mov
cli
or
push
push
sarb
pushf
lcall
pop
lock
fwait
and
mov
testb
xchg
xchg
xor
and
sbb
mov
test
push
lds
inc
inc
sbb
mov
lcall
mov
push
arpl
outsb
rcl
in
leave
adc
xchg
cwtl
adc
test
rcll
fucomp
fsubr
xchg
inc
xchg
jge
outsb
add
out
and
and
aam
jb
nop
push
inc
push
and
fistpll
inc
fisttps
pusha
jg
pop
xor
xor
dec
jnp
daa
in
push
sbb
lret
out
fisubrl
sbb
je
dec
in
jmp
cltd
int3
int
and
jge
or
cmp
hlt
test
mov
mov
rcrb
into
push
imul
jb
push
mov
test
and
jo
push
cmc
ret
mov
scas
in
repnz
mov
jne
mov
xlat
stc
gs
jmp
ljmp
or
je
int
dec
mov
sbb
and
icebp
xor
mov
das
repnz
push
and
scas
fdivs
xchg
dec
cmc
mov
repnz
fcmovu
ja
adc
sub
mov
mov
scas
lea
fnstcw
mov
sbbl
mov
pushf
sbb
sbb
inc
leave
mov
loop
cltd
push
sahf
xchg
cmp
push
push
inc
ja
ds
popf
mov
and
out
paddsb
cmp
sbb
push
dec
pop
jns
test
add
pop
mov
out
outsb
enter
mov
xchg
xor
or
xchg
sbb
pop
cmc
je
aas
inc
mov
sbb
mov
lret
mov
ljmp
push
stc
imulb
dec
jns
js
mov
sbb
fdivs
loop
inc
fs
shrb
dec
mov
loope
aam
shll
fimuls
fcomp
je
sti
jg
push
push
hlt
xor
add
jae,pn
add
cli
pop
dec
adc
adc
xlat
mov
fiadds
aam
lea
push
and
inc
inc
xchg
dec
rdmsr
lret
loope
or
pop
mov
sahf
inc
shlb
shll
xchg
mov
insl
jns
mov
xchg
adc
andl
mov
mov
xchg
loop
test
orl
outsl
enter
loope
cmp
lret
shr
push
xor
mov
or
xor
cmp
nop
shlb
jmp
lods
cmpsl
addr16
push
pop
roll
fs
jno
icebp
hlt
xor
mov
movsb
mov
jge
sub
popf
enter
jmp
decb
rorl
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
por
movsb
sub
mov
aad
jno
mov
cmp
lods
pop
jl
mov
push
mov
inc
setne
fists
cli
push
sti
dec
and
lods
sbb
xchg
jne
inc
je
scas
sbb
call
bound
sti
and
call
inc
xor
inc
or
mov
das
outsb
lods
arpl
jo
repnz
aam
popf
loope
shlb
sub
scas
pop
cld
or
cmp
insb
push
or
adc
add
xor
and
out
xchg
mov
mov
jmp
lods
fdivrl
daa
push
jg
arpl
cld
xor
sahf
adc
push
lods
or
icebp
aaa
xor
icebp
jg
jmp
xchg
xor
mov
pop
add
xchg
rcll
mov
inc
dec
mov
xor
xchg
das
call
movsb
enter
daa
push
add
lret
jle
ret
stos
out
out
push
adc
sub
inc
sbb
sub
jo
pop
stos
repnz
sahf
fbld
arpl
push
sbb
xchg
adc
or
or
in
jo
jge
add
push
jmp
mov
aam
xor
sbb
stc
dec
das
jae
jns
outsl
movsl
cmp
mov
add
mov
pop
jnp
mov
std
and
gs
inc
add
pusha
fmuls
insb
pop
and
arpl
ret
fcmovbe
sub
out
enter
icebp
cli
jb
in
repz
inc
xchg
push
dec
mov
or
sbb
mov
ds
pop
mov
into
cmp
dec
xor
movsl
cmpsl
mov
in
add
inc
add
pop
add
jno
jecxz
cmc
scas
push
mov
xor
rolb
ds
cmpsb
push
repnz
popl
and
push
nop
inc
decl
clc
outsb
sub
push
inc
mov
xor
sbb
aam
les
cmp
inc
adc
pop
push
mov
xchg
jns
outsl
add
lock
mov
flds
stc
out
mov
pop
insb
xchg
cld
pop
dec
loopne
imul
cmpsl
jno
pop
add
ja
lods
gs
or
call
mov
dec
xchg
sbb
daa
icebp
mov
lds
in
sbb
call
push
xchg
sub
adc
mov
push
mov
pop
stos
mov
data16
popa
add
and
fcompl
arpl
js
xchg
aaa
and
ss
jbe
mov
cwtl
repnz
fldenv
cmp
sar
push
jp
jae
inc
and
jae
fsubs
ds
andb
add
pop
stos
out
sub
mov
mov
out
fisubl
sahf
std
out
insb
xchg
xchg
ja
sub
rclb
es
or
jp
and
cmp
sbb
nop
test
sub
inc
cli
sarl
and
icebp
mov
aaa
push
stos
pusha
and
out
addr16
lds
mov
movsl
pop
adc
out
int3
lcall
outsl
pop
mov
into
mov
or
push
jecxz
outsl
sbb
nop
inc
sbb
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
insb
in
ss
leave
xor
mov
mov
sub
scas
out
fnstcw
aaa
pop
into
fsubp
cli
mov
test
cwtl
jle
or
sub
movsl
or
push
lods
push
and
enter
cld
xor
lcall
shr
add
shlb
movsb
ja
fidivs
std
pop
iret
sbb
or
xchg
xor
push
push
mov
mov
std
or
fsub
dec
mov
rclb
and
xchg
push
mov
ss
hlt
sub
jnp
and
sbb
sbb
andb
in
adc
out
xchg
js
dec
loopne
imul
inc
mov
mov
or
lea
cmc
iret
add
movb
shl
scas
adc
sbb
roll
xor
sub
inc
xchg
sub
repz
pop
jge
outsl
sti
in
and
and
add
or
jae
ljmp
and
fstpl
jmp
testb
mov
xchg
dec
dec
orb
xchg
jno
addr16
cwtl
ds
arpl
xchg
add
ret
jae
movsl
jmp
repnz
mov
mov
gs
cmc
pop
jp
in
jle
pop
ret
insb
jge
jg
icebp
std
push
fwait
add
out
and
mov
in
dec
cmp
imul
lahf
sbb
adc
test
negl
mov
or
js
inc
jno
pop
mov
xchg
test
sub
iret
push
dec
jg
out
fadds
pop
or
push
xchg
and
movsb
pop
call
add
iret
insl
ret
or
arpl
mov
adc
loop
inc
fistpl
call
jb
test
cmpxchg
mov
test
jmp
rcll
dec
fimull
test
jne
push
and
ret
xchg
adc
fldl
in
xchg
inc
scas
addr16
mov
aam
pop
sti
and
aaa
jo
loope
and
inc
adc
sbb
in
lahf
lds
pusha
and
lea
das
sbb
std
sub
mov
repnz
mov
push
xchg
int3
icebp
push
xchg
cmp
lds
scas
pusha
xchg
push
mov
lods
mov
adc
ds
add
xorb
pusha
xor
mov
fisubs
push
mov
jns
outsl
je
insb
xchg
enter
neg
cmpsl
jecxz
add
inc
popa
sub
cs
test
fistpl
mov
rcr
or
mov
mov
xchg
rcl
push
ficoml
dec
xlat
adc
fidivs
hlt
in
and
arpl
cmp
in
push
pusha
xlat
and
in
dec
pop
ret
add
mov
test
xchg
cld
mov
lret
push
mov
outsb
dec
add
pop
rcrb
mov
pushf
mov
test
out
push
addl
loopne
mov
stos
push
or
lcall
add
sub
cld
mov
sbb
dec
popl
dec
xchg
push
fsubrs
mov
sbb
movl
sbb
xor
pop
adc
sub
pop
aam
dec
or
xor
lret
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fnstsw
cmp
mov
addr16
add
mov
xchg
call
psubsb
mov
sub
das
push
push
insl
pop
sbb
lret
add
ds
out
cli
in
jecxz
mov
pop
jl,pn
sbb
fistl
loope
popf
mov
push
mov
mov
cmpl
popa
push
push
sbb
lock
outsl
mov
sahf
cmc
mov
lcall
mov
test
testl
movsb
jl
rol
lcall
ret
inc
mov
and
mov
jno
enter
fstpt
test
mov
fld
outsl
push
xchg
repz
push
adc
push
ss
cmp
mov
shll
or
std
mov
dec
cmp
jae
aad
mov
jl
ror
push
jne
sub
jnp
and
add
xchg
lahf
pop
sbb
add
pushf
inc
ficomps
add
imul
aad
pop
sub
add
push
cltd
dec
xor
xchg
inc
arpl
leave
mov
cmp
test
or
jae
xor
insb
jns
add
outsb
out
test
pop
pop
and
add
push
jg
inc
fdivrl
sahf
mov
in
out
jbe
mov
cmp
sub
inc
addr16
mov
insl
push
movsl
mov
pop
xor
test
testl
addb
lods
and
dec
adc
or
leave
popf
aad
in
pop
or
and
roll
mov
sbb
aas
insl
push
int3
sbb
clc
jo
std
cli
adc
pop
repz
dec
clc
out
mov
scas
out
test
and
in
and
daa
xchg
cmp
add
jbe
cli
jge
pop
stc
nop
dec
fadd
je
sub
and
mov
sarl
jmp
inc
stos
and
mov
ja
adc
add
pusha
push
sub
aad
rol
imul
testl
lods
and
mov
sub
mov
cmpsb
ficoms
in
adc
outsl
xlat
mov
cmp
xchg
les
cmp
popf
addb
or
sub
mov
ds
cmp
sahf
pop
xchg
dec
imul
lahf
push
add
js
cmp
dec
cwtl
pop
push
xchg
and
inc
sbb
inc
and
adc
into
stos
sbb
aad
sti
push
jnp
dec
sbb
sarl
dec
sub
xor
sbb
jne
and
rorb
scas
jle
in
aas
sub
push
lods
or
scas
lret
xorl
inc
mov
lock
xchg
daa
mov
dec
cs
and
lock
or
mov
out
mov
movsl
scas
mov
lcall
xchg
ror
mov
jge
dec
aas
fildl
mov
scas
icebp
int3
movsl
sbb
pop
cltd
push
dec
es
ds
es
test
dec
in
fstpl
fwait
adc
leave
pop
arpl
sub
int
nop
bound
test
jns
fwait
push
scas
pop
push
dec
cmc
pop
sbb
jmp
jle
sbb
in
adc
adc
mov
and
adc
lods
jnp
add
push
cltd
jle
inc
xor
loop
addb
mov
test
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
jecxz
inc
mov
mov
jo
or
jge
sub
mov
mov
out
dec
nop
psllw
adc
repz
iret
and
ljmp
dec
xor
pop
pop
push
mov
scas
mov
xlat
int3
pop
xor
mov
aas
adc
mov
lock
mov
cld
pop
dec
fdivl
imulb
adc
movsb
jmp
movsb
or
pop
pop
inc
jbe
aad
mov
push
shr
push
pushf
movsl
iret
mov
xor
push
aad
addb
int3
div
push
sti
loopne
mov
out
pop
js
cmpsb
cmp
add
jg
das
lock
repnz
jno
insl
push
cmpsb
movsb
scas
xchg
sti
mov
cmp
add
cld
pop
rcrb
jnp
je
mov
inc
push
cmp
cmp
and
adc
xor
or
or
sub
mov
dec
jno
scas
int
add
jae
add
jp
mov
lret
movsl
imul
ss
push
mov
sarb
xchg
mov
mov
lea
sbb
jbe
aas
mov
xor
mov
sub
sbb
lods
mov
add
mov
out
ret
add
sub
in
mov
inc
xchg
testl
ret
xor
jmp
mov
adc
mov
and
data16
jb
movhlps
lea
xor
and
sbb
leave
clc
dec
xorb
jge
jnp
mov
push
nop
cmc
dec
xlat
sahf
pop
cmp
or
mov
pop
out
das
fcoms
pop
out
rorb
mov
daa
cmpsl
dec
lods
sub
imull
cmp
xchg
or
mov
mov
push
push
mov
scas
mov
stos
or
ret
cmpsl
xor
hlt
jbe
outsb
cmove
pop
cmpsl
jns
arpl
sti
repz
jp
loope
notl
aam
adc
int3
rcll
mov
pop
outsl
fwait
ret
daa
sub
test
cmc
sub
lock
out
jb
arpl
loope
in
int
ja
sub
pop
aas
and
inc
push
loope
xlat
cltd
outsl
mov
lds
fs
mov
fadds
sbbb
pop
iret
and
outsl
inc
es
mov
sub
icebp
dec
or
mov
outsb
mov
ss
mov
xchg
je
push
and
or
dec
dec
cmpsl
xchg
sbbb
pusha
lea
scas
push
jmp
and
pop
ror
bound
or
add
adc
add
jecxz
out
mov
pop
jnp
xchg
xchg
sub
dec
in
adc
jmp
pop
mov
mov
popa
or
lea
test
in
jge
popa
int
shr
inc
mov
sbb
sub
xor
adc
mov
dec
js
popf
inc
sbb
add
out
add
mov
je
outsb
or
hlt
subl
lahf
xchg
addl
lods
dec
mov
xchg
pop
adc
sub
jl
cmpb
filds
xchg
lret
sbb
sub
mov
das
sahf
aad
ficoms
rcrb
xchg
adc
scas
shl
imul
mov
sahf
push
xchg
push
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
mov
mov
movsb
lock
sbb
addr16
sahf
jge
aam
xor
outsb
outsb
shll
jg
cmpl
stos
fstl
xchg
push
cwtl
lahf
sbb
jmp
xlat
aad
in
and
aas
out
and
ret
add
insb
movsb
cmovno
add
aad
cmp
addr16
xor
jbe
cwtl
push
cmp
dec
pusha
or
in
mov
test
mov
loop
lea
push
sub
neg
mov
loope
mov
inc
aam
sub
popf
push
fwait
mov
cmpsb
movsl
into
andb
aas
jo
cmpsb
rcr
push
fs
or
scas
jo
and
pop
out
lret
iret
outsb
cmp
dec
sub
mov
cmp
rolb
loopne
xchg
sub
scas
lock
sahf
jb
das
nop
mov
arpl
fists
inc
imul
jecxz
out
jge
push
jae
imul
pop
mov
lock
fisttpll
cmp
fnsave
popf
mov
in
mov
push
xorl
lret
out
mov
mov
jp
fwait
mov
iret
movsl
cmpsl
or
sub
xor
xor
adc
shr
push
int3
mov
mov
push
and
push
mov
out
movsl
out
icebp
das
inc
xchg
pushf
adc
aas
icebp
pop
push
sub
push
mov
lock
scas
or
add
push
std
pusha
mov
sub
and
ds
mov
jge
lret
or
insb
jno
xor
cs
adcl
shrb
popf
mov
sub
pop
push
test
fnstenv
icebp
cmp
sbbl
sub
stos
add
mov
cmpsb
addr16
andb
lods
addr16
sub
cmp
dec
adcl
mov
je
push
popa
mov
loopne
cmp
fwait
inc
jp
pop
push
mov
push
mov
in
push
jle
jg
mov
in
dec
cmc
jae,pt
sub
pop
aas
ja
inc
shlb
cs
jle
aam
push
aas
add
lret
stos
leave
popa
sbb
cli
and
dec
movl
movl
movl
jmp
pop
daa
fcompl
mov
aad
pop
loop
jecxz
dec
mov
mov
sub
ficoml
pusha
push
pop
leave
repz
mov
jo
inc
cmpsb
xchg
out
xlat
push
sub
loopew
xchg
imul
daa
inc
inc
ss
xlat
repz
movsl
insl
sbb
stos
xchg
mov
mov
and
decl
daa
inc
lods
and
add
cmp
dec
imul
insl
pop
shl
mov
nop
je
or
inc
xchg
and
or
scas
ja
aam
insl
jge
fistps
imul
scas
repz
dec
inc
call
and
jo
push
bound
in
stc
mov
rcrl
mov
adc
xor
movsl
mov
pop
je
adc
addr16
insl
jmp
mov
cltd
ret
mov
cs
mov
out
fdivp
xor
mov
insb
mov
or
les
push
lods
repz
add
sub
xchg
cmp
pop
into
in
outsb
jb
andb
mov
xchg
cmp
adc
push
pop
ljmp
arpl
sarl
test
push
sbb
mov
fists
lahf
add
shll
in
movsb
xchg
dec
sbb
mov
clc
jns
cs
dec
jmp
insl
clc
or
dec
mov
stc
fnstenv
inc
cltd
in
sbb
and
pop
sub
mov
mov
scas
pop
std
inc
jns
test
sub
out
in
stos
mov
ret
subb
into
pop
repz
adc
aam
stc
mov
test
push
sub
pop
pop
push
mov
fsubrl
or
imul
lcall
push
js
mov
sub
ljmp
call
mov
xchg
lods
xor
mov
mov
fistps
add
push
call
inc
pop
pusha
push
dec
mov
icebp
stos
out
push
cmc
movsl
mov
imul
in
cltd
xchg
xchg
fbld
rcr
arpl
cmp
xchg
jns
mov
jbe
ror
imul
jb
negb
xchg
push
adc
je
cmp
mov
jbe
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
movl
mov
ret
cmp
xchg
jne
int3
iretw
aad
push
push
adc
fiadds
cmpsb
lods
imul
mov
xchg
xchg
nop
mov
rcrl
jb
loop
push
mov
cwtl
mov
inc
dec
mov
push
fisubrl
out
pop
push
mov
ret
shlb
pop
jno
lds
adc
push
adc
mov
mov
mov
test
test
movsl
pop
pushf
out
xor
mov
outsb
cmp
les
neg
mov
and
jns
xchg
or
sar
mov
inc
sbb
xchg
stos
jb
xchg
mov
leave
cs
jge
pop
cld
mov
aas
aas
lods
ficomps
push
xchg
push
adc
push
loop
mov
dec
popa
test
test
lcall
adcl
ljmp
dec
imul
cmp
pop
icebp
or
push
enter
rol
fidivrl
push
imul
sub
ret
inc
lcall
jnp
out
je
add
and
leave
dec
mov
stos
int
addr16
push
sbb
clc
xorl
lcall
cmp
ret
imul
sti
push
dec
lods
addr16
ret
push
dec
jp
adc
lods
test
xlat
xchg
lcall
rcrl
mov
push
dec
jb
iret
inc
adc
xlat
movsl
adc
cmpsl
ret
cmp
pop
stos
std
jg
loop
out
adc
cwtl
pop
mov
push
call
xor
pop
add
out
sti
pop
imul
adcb
int
cltd
mov
or
ja
inc
cli
imul
in
leave
mov
ljmp
adc
sub
clc
fdivrp
mov
lahf
repnz
xor
dec
dec
faddl
and
pop
cld
stos
xchg
pop
fdivrl
push
js
push
jmp
iret
jmp
adc
int
cmp
mov
ds
ds
aad
or
inc
jne
mov
xlat
sbb
movl
dec
sub
dec
lods
adc
cmp
mov
cmpsl
outsl
adc
jnp
push
mov
in
lret
sub
jecxz
hlt
pop
and
fisubl
loopne
outsl
add
aad
xor
sbb
pop
inc
sub
xchg
jmp
adc
dec
or
popa
testl
or
bound
call
cmp
dec
pop
fmull
scas
adc
mov
pop
add
sbb
mov
xlat
xor
sub
push
sub
repnz
push
ja
out
insl
inc
mov
xchg
scas
ss
mov
mov
mov
cmp
add
adc
andb
pop
xchg
mov
stc
pop
shlb
arpl
test
rorl
mov
rclb
in
stos
jecxz
mov
ljmp
cmp
jnp
xchg
xchg
and
dec
test
lock
jno
adc
mov
push
int
lods
leave
test
popf
push
jmp
xlat
xchg
push
lcall
fists
jecxz
pop
mov
mov
popf
xor
xor
cmc
add
pop
sbb
lret
outsl
cmove
push
or
pop
scas
push
out
cld
add
jg
or
punpckhwd
ss
xchg
mov
lahf
aam
stc
call
add
sub
push
mov
cltd
pushf
sbbl
cltd
ja
mov
test
add
outsl
pop
adc
outsb
aas
sub
push
xor
or
dec
scas
adc
push
mov
xchg
dec
cmpsl
mov
in
add
and
adc
negl
in
cltd
lds
sbb
rolb
mov
inc
loopne
cmp
jnp
push
movl
jmp
movsl
dec
bound
sbb
inc
out
arpl
add
inc
pop
scas
repz
popa
lods
adc
xchg
or
jl
insl
mov
and
repz
and
adc
bswap
daa
jne
pop
scas
xor
mov
gs
mov
jae
pop
imul
dec
jmp
mov
xchg
rclb
mov
sbb
mov
icebp
arpl
std
add
jb
inc
mov
hlt
out
mov
cli
out
adc
arpl
and
rclb
clts
popa
cltd
xchg
fsubrs
pop
adc
cmp
cmp
daa
sub
add
mov
jb
mov
lret
mov
mov
push
cmpsl
jp
imul
stos
jnp
sub
mov
push
mov
jne
fmull
jl
daa
lcall
cmp
dec
pop
jle
sti
xchg
cmpl
cld
dec
insb
and
push
inc
and
sbb
test
adc
xor
sub
mov
cmpsb
xchg
adc
cltd
and
adc
daa
mov
stc
pop
fwait
mov
add
fsts
loope
mov
jge
pusha
and
cmc
push
xor
roll
lret
sarb
int3
out
cmc
loopne
mov
jnp
add
std
out
fildll
lahf
cmp
fsubs
sbb
xor
pop
lds
sub
dec
pushf
movsb
fidivrl
in
and
mov
sub
popa
push
xor
ret
and
call
fstpt
push
lods
repnz
cwtl
pop
fs
inc
shl
testb
enter
popf
adcb
out
adc
fcmovnu
sahf
xor
fdivl
pop
mov
inc
xchg
add
int3
push
xor
rcr
dec
insb
lock
add
addr16
inc
in
and
movsb
pop
mov
cmp
jo
mov
pushf
sub
sbb
xchg
outsb
pusha
pop
fsubrs
arpl
cmp
out
rcrl
stos
rcr
mov
lods
xor
inc
jmp
push
mov
leave
sarb
addr16
push
sub
ljmp
out
xchg
push
cmpsb
add
mov
jle
clc
inc
xchg
stc
lret
mov
mov
xor
cmp
jp
mov
sbb
add
repz
pop
das
jo
jne
cld
jle
mov
inc
enter
subl
mov
ss
mov
xchg
lds
adc
xor
cmp
stc
xor
mov
and
push
mov
jo
push
movsb
neg
mov
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
orb
mov
pop
sub
pop
sbb
out
adc
in
fmuls
jg
stos
add
push
stos
mov
pop
mov
xor
cmp
jmp
in
repz
mov
jb
jecxz
add
aaa
ljmp
cld
cltd
push
xor
xor
xchg
rolb
push
rcll
sbb
mov
add
cwtl
mov
or
jmp
leave
push
xchg
addr16
popf
adc
iret
repnz
rclb
xchg
pop
push
popa
xchg
mov
test
ljmp
rorl
outsb
nop
mulb
pushf
out
dec
test
jne
pop
fistpl
and
add
xor
sarb
stos
jg
push
jecxz
xchg
mov
sub
sbb
icebp
xchg
stos
idivb
jo
cwtl
movl
stc
cmp
inc
mov
sbb
out
iret
es
xchg
faddl
nop
mov
test
adc
sbbl
clc
dec
les
dec
cmp
in
sbb
xor
push
mov
jmp
sbb
sbb
icebp
mov
jmp
push
mov
scas
lret
rcrb
or
mov
inc
mov
popa
sahf
je
adcb
movsb
je
iret
test
loop
popf
cmpsb
fnstcw
push
scas
sub
sarb
xchg
adc
mov
or
xchg
adc
mov
ds
or
and
pop
push
and
pop
int3
cmpsl
lods
pop
mov
adc
int3
add
add
lret
loope
insb
dec
insl
pop
out
jb
sub
insl
sbb
lods
addr16
inc
mov
inc
insb
push
mov
pop
xor
test
fcmovb
jno
xchg
mov
mov
jmp
inc
xchg
enter
out
mov
mulb
push
ja
xchg
in
dec
fwait
sbb
inc
push
push
or
sub
sub
adc
jnp
fwait
pop
dec
fcompp
lahf
ss
inc
xor
jecxz
rcrb
pop
imul
jae
js
icebp
jo
cmp
pop
cwtl
push
ljmp
xor
daa
test
xchg
and
es
sbb
orb
inc
sbb
jmp
adc
and
jg
pushf
xorb
data16
stos
in
lock
insl
imul
mov
sub
add
data16
clc
xchg
cmp
xchg
gs
loop
xchg
fiadds
jp
add
jge
xchg
adc
pop
push
xchg
sub
lods
lret
push
sbb
pop
and
loopne
lods
js
mov
sbb
xchg
addr16
cwtl
sub
rclb
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
cmp
mov
mov
fs
xchg
jmp
ljmp
lods
add
jb
cmp
pop
mov
mov
test
mov
cmp
dec
js
xchg
jo
repz
ljmp
sbb
out
mov
lret
add
int3
mov
dec
clc
mov
filds
aad
mov
jno
pop
mov
lcall
mov
mov
movsl
ret
adc
pop
movsl
std
in
iret
mov
repz
nop
out
or
adc
cmpsb
xchg
push
test
inc
jb
std
mov
pop
push
fwait
pop
stos
sarl
aas
clc
xor
xor
mov
fsub
or
sbb
mov
cmp
xchg
pop
xorl
fcomi
pop
inc
pop
mov
pop
adc
mov
fsubl
dec
or
ljmp
pusha
mov
jo
push
outsb
mov
fcomps
sub
clc
jg
test
lret
jp
pop
lds
repnz
cli
pop
shl
cmpsl
testl
adc
jle
sbb
aaa
call
rcr
add
popf
xor
shrl
fcomps
sub
xor
inc
pop
outsb
jp
sub
loopne
adc
xor
aaa
jnp
fnstenv
inc
add
jb
enter
and
dec
add
popa
pop
roll
mov
lret
jp
mov
sarl
mov
xchg
arpl
in
mov
xor
dec
sbb
push
lahf
loopne
inc
imul
jnp,pt
cmpsb
cmp
pop
mov
aam
fstps
or
ss
push
rcrb
push
mov
push
mov
jge
jge
fcoml
xor
or
cmc
dec
dec
and
stc
lock
mov
xor
dec
mov
lcall
sbb
lea
hlt
pop
adc
pop
popf
sbb
pop
pop
adc
push
push
sahf
inc
push
jb
movsl
add
or
outsb
test
cmpsb
add
cli
mov
imul
movsl
dec
cwtl
into
pusha
jg
clc
adc
xchg
inc
pop
les
dec
xchg
rclb
xrelease
lret
push
je
pand
jl
out
mov
dec
sti
cmpsb
inc
jae
das
sbb
push
and
scas
inc
addr16
cmc
sbb
cmp
les
jmp
add
popf
xchg
ja
loop
sub
jbe
arpl
andl
dec
xchg
sbb
sbb
adc
rclb
pop
dec
cmp
add
pop
push
dec
xchg
cmp
or
stos
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
sub
xor
sub
mov
mov
mov
cli
mov
sbb
sbb
adc
lahf
insl
mov
fdivrs
adc
imul
int3
pop
push
push
arpl
scas
sbb
cmpsb
push
lock
stc
mov
add
shll
xorb
sbb
mov
shll
ds
jb
psrlw
xchg
mov
sbb
daa
nop
xchg
fiaddl
jne
dec
es
push
ja
adc
xor
jmp
xchg
xchg
mov
outsl
xchg
sbb
in
jp
sub
sbb
mov
jg
pop
adc
jo
mov
mov
popa
inc
inc
outsb
jl
mov
ds
jp
or
clc
ja
daa
mov
xchg
dec
hlt
fsubs
arpl
pop
add
inc
pop
xchg
test
mov
sbb
cli
cmp
fsubp
push
push
loop
icebp
or
push
dec
mov
adc
sbb
fidivrl
xchg
ljmp
xor
mov
mov
sbb
cwtl
jmp
jns
pusha
faddl
mov
dec
jp
hlt
add
push
push
add
jg
xchg
stc
ds
mov
ret
lea
inc
and
sub
aaa
clc
dec
rorl
loope
aas
mov
roll
inc
test
sub
sub
push
mov
outsl
dec
mov
test
cmp
push
roll
ljmp
pop
mov
lods
inc
aaa
mov
fnstcw
mov
pop
cli
insl
fs
pop
testl
sub
xchg
adc
jecxz
jle
and
enter
inc
cmpl
mov
sahf
movsb
frstor
cwtl
push
mov
mov
hlt
jge
mov
out
popl
xchg
iret
push
push
aaa
mov
js
xor
or
xchg
bound
jbe
jle
xor
jg
out
sub
or
and
and
sti
imul
popa
xchg
jns
outsb
sbb
sbb
mov
lock
mov
adc
xor
pop
int
sahf
push
lcall
shl
mov
jge
bound
mov
outsb
das
or
js
mov
jl
imul
fcmovnb
les
pop
mov
jge
or
std
cli
jbe
loopne
std
stos
push
mov
or
xor
sub
pop
cli
cmpsl
out
rorl
lods
in
pop
cltd
jns
sbb
push
nop
mov
movsb
sub
stc
pushf
sbb
filds
mov
mov
std
out
mov
mov
sbb
jb
dec
ss
adc
shll
jmp
push
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
mov
pop
jb
mov
inc
adc
fistps
push
inc
xchg
add
or
mov
jae
pop
xchg
je
sub
cmp
call
mov
mov
outsb
sbb
or
in
lods
popa
js
inc
rolb
or
popa
inc
lock
and
adc
or
cld
jle
cmp
push
dec
loopne
enter
inc
cwtl
sbb
popf
jle
outsl
jns
out
mov
mov
sar
stos
inc
or
xor
iret
popf
in
add
inc
mov
out
imul
cwtl
cmc
call
xor
jo
cmp
dec
bound
mov
ja
mov
mov
dec
dec
hlt
jnp
les
stos
insl
pop
sahf
xchg
push
in
mov
adc
mov
scas
stos
inc
adc
adcl
inc
pop
dec
push
xchg
sub
icebp
scas
ss
les
andl
cld
ljmp
cmpsl
cltd
out
lahf
lds
ret
mov
pop
nop
jnp
xchg
rolb
clc
push
jae
shll
shll
pop
popa
pushf
adc
add
repz
adc
cld
inc
in
and
in
sub
fwait
call
dec
movsl
es
xchg
data16
mov
mov
mov
push
cmp
or
rclb
repnz
ja
push
sub
adc
pop
lds
dec
inc
add
push
adc
movsb
inc
mov
mov
pop
imul
xchg
je
movsl
insb
cltd
sub
xor
hlt
xor
pop
enter
ret
ss
add
push
sbb
inc
adc
cmp
xchg
lret
mov
ljmp
pop
andl
xchg
in
mov
push
and
imul
sub
inc
jge
xchg
xor
dec
lock
push
cmpsb
xchg
lret
cwtl
push
cmp
jb
pop
pop
mov
fcmove
mov
js,pn
push
fcomps
mov
loop
test
adc
cmc
mov
cmp
cld
dec
rorb
scas
clc
sbb
jae
icebp
stc
inc
dec
scas
dec
jecxz
loop
xchg
cld
pop
out
xchg
push
sbb
xor
fs
or
mov
hlt
sub
ljmp
inc
or
cs
sahf
push
dec
mov
push
scas
mov
out
jge
cli
jno
or
arpl
cwtl
aad
subb
jge
mov
cmp
fcoms
fucom
xchg
jp
fsubrl
jecxz
insb
sti
mov
mov
and
insl
xchg
cmc
cmp
or
les
cli
cmpsb
sub
sbb
inc
xor
mov
stc
mov
lods
shl
movsw
das
dec
adc
mov
pushw
popa
jmp
sub
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
sahf
mov
xchg
leave
dec
pop
mov
sti
lds
inc
mov
dec
add
daa
inc
das
lds
dec
xchg
mov
cmp
mov
stos
adc
shl
sahf
mov
aaa
cmp
rorb
arpl
rclb
pop
jnp
cmovp
push
fcmovb
push
lcall
sbb
mov
outsl
es
add
push
and
jp
iret
pop
stos
xchg
xchg
adc
add
jg
mov
aam
popa
sub
cmp
xor
pop
push
xor
and
xchg
lods
outsl
loopne
js
out
rep
inc
push
stos
jmp
add
stos
push
inc
in
sbb
orb
repnz
jp
xchg
sub
outsl
push
mov
mov
repz
fdivs
cmp
cmp
hlt
out
pusha
dec
scas
divl
fs
out
fcom
mov
and
mov
push
repnz
je
test
adc
push
es
sbb
push
daa
cmp
das
subb
enter
and
les
ljmp
mov
sbb
adc
add
pop
int
shll
jl
jns
xchg
pusha
das
push
clc
jo
imul
jbe
pop
mov
adc
popa
inc
add
xor
lahf
adc
cli
xor
cwtl
fwait
pop
das
or
fs
xor
sahf
mov
push
stos
bound
fcoml
push
cli
jg
jecxz
enter
fldenv
pop
in
push
or
out
xchg
movsb
rcrb
stos
add
and
sub
mov
lahf
scas
mov
icebp
ficoml
movsl
cmp
dec
jge
add
sub
or
mov
cmpsb
ficoml
loop
jno
ds
mov
je
or
mov
cmp
lods
mov
popa
pop
fistl
xorl
add
sub
rcll
mov
dec
in
aas
enter
adc
push
and
cmp
pop
fbstp
inc
sub
inc
inc
jb
cmp
push
fldcw
mov
faddl
xchg
mov
out
xchg
lahf
mov
bound
divb
xchg
insl
mov
lret
or
jne
or
outsb
popf
cs
adc
xchg
gs
outsl
shll
rcll
in
leave
mov
inc
dec
lock
stc
adc
aad
ret
fdivrl
cltd
mov
out
or
fs
cmpsl
sbb
out
dec
lods
dec
es
jnp
mov
mov
jnp
in
mov
and
aam
jmp
mov
sbb
incl
xchg
mov
loope
mov
pop
mov
popf
add
out
mov
fldcw
iret
lea
js
das
aam
pop
popa
scas
mov
dec
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
hlt
mov
movsb
mov
les
xchg
inc
push
xchg
arpl
int
push
dec
push
int3
nop
adc
inc
jb
add
orb
ds
sbb
cmp
xlat
cmp
xchg
sbb
gs
jae
sbb
mov
in
jbe
pop
test
or
mov
adc
fwait
in
lcall
cli
mov
jno
call
sub
inc
inc
outsl
adc
push
movsb
sbb
pop
adc
jne
jb
aam
andl
in
in
cld
push
aaa
in
loope
je
dec
xor
popa
cmp
and
fcmovne
lock
loopne
xchg
cmp
fstps
mov
loope
mov
adc
add
pushf
loope
orl
mov
jae
iret
imul
gs
mov
out
bound
insb
arpl
mov
push
jne
clc
sub
aas
mov
test
mov
adc
mov
outsl
roll
notl
xchg
addr16
pushf
add
jmp
mov
leave
mov
lahf
adc
not
and
fwait
adc
xchg
cmpsb
mov
jne
xor
mov
sbb
pop
clc
insb
or
mov
dec
out
iret
inc
jb
push
mov
jg
fidivs
fisubl
mov
xor
cmp
mov
mov
adc
push
mov
cli
xor
sbb
lcall
add
test
xlat
orl
or
mov
outsl
outsb
mov
sub
leave
mov
lods
inc
pop
cmc
pop
xor
mov
xor
rolb
jo
ss
movsl
or
ds
dec
das
pop
sub
adc
sti
lods
pop
jg
add
fwait
cltd
jge
mov
out
hlt
xchg
inc
mov
mov
jo
scas
pop
loopne
pop
and
adc
stos
lret
sub
nopl
loop
fisubl
lret
push
cwtl
pop
jg
movsl
mov
es
movsl
mov
ficoml
xchg
pop
lock
xchg
and
and
loopne
dec
sti
ds
inc
pusha
outsl
fdiv
adc
sbb
dec
nop
outsb
push
ret
fadds
mov
sbb
mov
xchg
jmp
jo
pushf
psubb
mov
xlat
sub
out
add
mov
dec
mov
mov
adc
jg
xchg
add
jbe
xor
fcompl
sbb
adc
pop
scas
xchg
and
cmp
xor
mov
call
push
mov
fildl
xchg
in
int
inc
mov
in
sub
dec
add
sub
xchg
hlt
out
in
dec
xlat
inc
std
pop
push
fisttps
xor
test
std
push
xor
or
cmp
sub
push
inc
nop
popf
push
push
pop
jne
xchg
icebp
mov
mov
adcb
xchg
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
cmp
jecxz
xchg
mov
mov
jns
fwait
xchg
add
aas
mov
and
jns
xor
pop
jecxz
mov
dec
dec
aam
fwait
leave
rorl
aaa
test
sub
xlat
mov
cmp
push
push
or
add
scas
cli
dec
or
out
orl
test
inc
divl
jmp
ret
sub
and
adc
inc
scas
divl
in
dec
mov
ret
imul
imull
in
das
in
aaa
aam
push
icebp
iret
dec
stos
adc
inc
mov
xchg
xchg
or
insb
sub
adc
add
mov
fwait
ja
jns
clc
xor
aam
cmp
xchg
cmp
sub
jg
jo
inc
popf
shlb
repnz
movsb
adc
mov
push
xor
cld
push
pop
add
inc
or
xchg
xor
adc
pop
shll
sbb
cwtl
loopne
xchg
fs
cli
xchg
inc
dec
lahf
and
out
roll
clc
mov
adc
mov
cmpsl
inc
cmp
ret
rcrb
inc
iret
addl
push
sbb
cld
bswap
popf
and
inc
je
ss
imul
cmp
xor
cmp
add
inc
adcl
les
push
imul
insl
pop
push
xchg
mov
das
cmp
mov
fisttpll
mov
sbb
mov
std
lret
inc
mov
mov
hlt
stos
imul
iret
dec
in
rol
add
shr
mov
lods
xor
mov
jge
add
or
inc
jge
inc
push
mov
fimuls
imul
in
xchg
rorl
add
and
enter
push
imulb
add
outsb
pop
js
lret
xchg
insb
add
clc
pop
loope
pop
mov
movsl
adc
adc
jne
push
pop
mov
lret
icebp
push
cmp
loop
ljmp
inc
es
cmp
push
push
outsl
add
push
mov
and
clc
inc
sbb
rcrb
into
and
cli
sbb
fcompl
mov
lcall
mov
mov
lcall
aas
adc
testb
leave
push
add
xchg
mov
insl
push
push
jg
test
out
stos
je
imul
jmp
push
jl
in
test
out
decl
cmp
pop
or
xchg
out
adc
sbb
and
rol
adc
cli
lods
insl
mov
mov
pushf
fucom
outsb
dec
stos
icebp
dec
js
cmp
and
adc
mov
jg
inc
dec
fs
cmp
icebp
mov
cmp
adc
imul
jae
ds
push
icebp
jo
push
idiv
lods
cli
cmp
shlb
add
loop
das
fistps
sti
mov
adc
notl
fistpl
jecxz
pushf
mov
adc
lods
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
xchg
jecxz
mov
mov
imul
addr16
cmpsb
jp
xchg
scas
xor
daa
stos
ds
sti
ret
cmp
les
stc
cmp
pinsrw
cs
push
shlb
in
sub
jbe
aas
mov
jge
mov
push
lds
mov
xor
in
out
sub
insb
jge
push
clc
pop
xchg
and
cmpsb
leave
cmp
fisubl
pop
ss
or
scas
aam
fst
sub
scas
aad
add
dec
sbb
jecxz
xor
push
movsl
and
roll
and
sbb
add
xchg
or
pop
mov
stos
adc
not
lods
mov
bound
rcrl
rclb
dec
pop
push
fcomip
rcll
outsb
or
xchg
out
cli
xchg
repnz
xchg
jmp
cmp
inc
lds
mov
out
xor
jae
movsl
rol
ds
imul
loope
fildll
and
sbb
push
cli
and
repnz
bound
mov
jae
test
in
jecxz
and
xchg
daa
enter
fildl
and
fildl
sub
test
aaa
fisubrl
negl
xchg
pop
cmp
xor
or
fisttpll
test
jge
je
incl
ficomps
enter
dec
xchg
sub
cmpsb
add
call
xor
in
lea
pop
sub
clc
or
cmc
sarl
jp
mov
and
mov
mov
and
daa
int
fiaddl
test
xor
testb
pop
xchg
cmp
test
and
add
push
xor
xor
mov
loopne,pt
in
imul
pushf
scas
jbe
int
xchg
xchg
shll
fistps
repnz
push
popf
scas
inc
out
cmpsl
movsb
mov
rorb
lret
or
cmp
shrb
iret
mov
outsb
xchg
pop
mov
or
sub
adc
ret
dec
repz
int3
test
cld
add
mov
mov
rcrb
sub
rclb
movsl
push
aad
test
fdivr
or
pop
push
cltd
sub
loopne
or
push
push
sub
or
cli
fcmovu
push
aaa
pop
add
jno
push
mov
out
push
inc
xchg
data16
out
gs
popl
cmp
vmwrite
js
pusha
outsb
pusha
repnz
or
xchg
or
adc
notb
neg
aas
jno
cmpb
ret
pop
sarb
mov
push
dec
mov
jb
in
fcomps
sub
pop
lret
adc
cltd
mov
loop
add
jae
cmp
xor
cmp
adc
enter
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
or
in
les
fdivrl
sub
out
bound
loope
xchg
aaa
add
push
test
sbb
loop
popf
out
mov
lock
cmc
mov
das
jno
inc
cmp
add
call
mov
adc
xchg
push
pcmpgtd
ret
jge
imul
lock
scas
and
ret
fstpl
jb
cmp
aas
jl
test
sbb
xlat
iret
xor
and
and
push
mov
add
push
dec
addb
or
arpl
mov
mov
rcl
stos
mov
dec
int3
add
add
sub
pop
mov
icebp
cltd
xchg
xchg
icebp
pop
jno
js
jno
push
add
xchg
cmp
lods
dec
push
pop
lret
dec
pop
dec
aad
inc
push
loop
cmp
mov
cmpsl
and
mov
aaa
cltd
leave
mov
popf
pop
lret
lahf
popa
fidivrl
aad
scas
mov
out
jne
ljmp
lcall
jmp
lahf
fnstenv
ficoms
imul
push
dec
or
in
mov
xor
pop
inc
mov
sbb
outsb
and
adc
xor
cmp
mov
dec
pop
xlat
add
icebp
in
dec
jo
and
aad
inc
jnp
xlat
mov
shll
add
dec
sub
push
rolb
leave
ret
loopne
ja
inc
adc
fldcw
cmp
adc
lret
mov
icebp
mov
lds
push
pop
sbb
mov
orl
jb
cmp
mov
xor
lar
test
mov
sub
and
xchg
pop
cli
ss
mov
popf
sbb
pop
aam
insl
push
mov
es
mov
or
or
xor
cmp
in
pop
mov
dec
jae
push
divb
popa
adc
xlat
andl
sub
ja
hlt
lret
jecxz
pop
jge
pop
popl
pop
inc
cmp
adc
mov
outsl
add
sbb
bound
sbb
lret
cmp
sub
data16
jmp
jmp
jecxz
and
pushf
cmp
and
orb
loop
subl
sub
xchg
mov
rcrl
rcll
or
jnp
orl
out
sbb
cli
cmp
std
fs
cmp
pop
adc
sti
inc
jmp
inc
rcl
popf
and
adc
scas
fnstcw
les
cmc
xchg
inc
in
out
pusha
les
jnp
xor
enter
and
jle
or
cmp
ds
arpl
adc
test
aaa
cmc
lcall
leave
jle
in
pop
in
jp
cmp
gs
push
imull
mov
add
rorl
shrd
shr
xor
jmp
cmp
sub
xchg
mov
cwtl
mov
mov
adc
push
dec
jle
fdivrs
add
mov
adc
pop
add
hlt
push
add
mov
jge
fiaddl
rclb
dec
fsubrs
inc
lods
cmc
and
test
lds
jmp
out
fcoms
sahf
lret
xor
inc
push
iret
sub
mov
out
testl
lods
stc
and
pop
sub
pop
pop
fld
imulb
repnz
in
pusha
mov
addr16
and
pop
in
xor
test
insl
movsb
and
fwait
push
and
xchg
arpl
js
shlb
jnp
mov
or
loope
pop
fildll
mov
ja
mov
jo
cmpsb
mov
xor
xor
aas
sbb
sbb
stos
insb
push
stos
pop
movsb
test
mov
sub
in
ljmp
mov
xchg
fmul
movsb
pop
push
in
or
leave
jne
out
xchg
out
out
jle
flds
out
sbb
adc
jb
add
dec
mov
xchg
cld
iret
popa
fdivl
clc
loopne
stc
aam
jae
ret
lods
repz
addl
xor
into
sahf
and
mov
or
jae
inc
ret
xlat
or
addr16
push
pop
pop
test
mov
xor
lds
pop
inc
shrl
maxps
sub
aad
xchg
mov
mov
mov
in
aas
and
pop
adc
mov
adc
ud1
scas
test
mov
das
shl
xchg
test
and
cmp
pop
cld
mov
push
scas
cmp
xchg
sub
sub
add
mull
leave
fldcw
pop
imul
sbbl
jl
or
and
adc
shrb
ret
mov
push
pusha
mov
sbbb
sub
cmp
cltd
lcall
sub
add
dec
int3
div
pop
add
rol
lcall
dec
cmp
sub
push
adcb
xlat
testb
mov
loop
mov
push
or
jge
xchg
loope
stos
jbe
mov
adc
movsb
loop
ror
xor
add
or
bound
or
jecxz
xlat
add
xchg
call
ds
out
movsb
test
mov
fs
add
incb
adc
jl
jbe
jmp
cmpsb
cmpsl
hlt
das
adcb
in
int
xchg
dec
call
pop
mov
xchg
push
mov
jbe
pop
xchg
pop
push
je
int3
out
dec
cmc
lea
dec
jae
xlat
cld
push
and
pop
arpl
dec
jo
xchg
call
lock
mov
mov
or
and
mov
in
dec
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
push
xchg
stos
sahf
mov
mov
xorl
in
cmpsb
popa
imul
jge
xor
in
dec
pop
in
hlt
sub
mov
xchg
xor
push
or
loope
es
movsb
mov
je
and
sbb
scas
cmp
dec
mov
test
or
cld
and
fcomps
outsl
cltd
gs
popa
in
out
outsb
mov
jle
sbb
xor
xor
movsb
cli
push
xchg
fildll
add
inc
cld
dec
xchg
loop
lods
scas
stos
mov
xchg
mov
hlt
lods
fldcw
sub
enter
rcrb
mov
into
inc
mov
xchg
insb
mov
loopne
icebp
lods
and
mov
sub
dec
jl
pop
or
ljmp
lods
xchg
loopne
movsb
in
inc
testb
jb
dec
lock
inc
iret
push
pop
add
mov
insb
push
sbb
cmc
mov
stos
aaa
nop
and
xchg
inc
inc
movsl
adc
jne
fdecstp
je
aas
xor
lea
jle
add
cli
or
rcr
sub
xor
mov
lcall
inc
leave
jbe
aam
pop
or
add
sbb
cld
or
mov
pop
rclb
negl
push
push
add
or
adc
rolb
ds
xor
in
pusha
or
xchg
cmp
cmp
vaddsubps
xor
mov
into
jns
loopne
pop
imul
loop
dec
jp
add
cmpsl
push
cltd
lret
add
test
icebp
sub
movsl
leave
add
xchg
cmp
aam
test
and
cmpsb
ret
push
mov
dec
push
push
sbb
or
jne
es
sub
pop
ja
adc
popa
cmp
sub
movsl
and
sbb
sub
pop
lods
adc
jmp
imul
mov
scas
jp
loop
and
ret
dec
mov
lcall
dec
test
pushf
arpl
loope
push
stos
in
jl
and
mov
push
adc
or
cmp
ficoml
ret
pusha
cld
or
xor
adc
jmp
sub
or
fucomi
jbe
pop
imul
sub
lret
cmc
out
jne
movsb
pop
aad
aad
and
push
xchg
mov
xor
or
mov
push
adcb
loopne
inc
dec
fs
add
rclb
cltd
xchg
xchg
sahf
xor
mov
sbb
jo
pushl
int
add
pop
out
sbb
test
add
insb
shl
popf
sub
lods
push
shlb
xchg
je
cli
fmul
mov
jecxz
inc
inc
loope
out
js
mov
sbb
cld
push
cmp
push
inc
into
lods
je
aad
rol
add
dec
scas
inc
movsb
out
movsl
andb
and
and
xchg
or
adc
xor
adc
lods
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
pop
dec
sahf
mov
push
cwtl
pop
or
xchg
sbb
or
mov
in
mov
out
cmc
icebp
adc
leave
adc
ja
imul
push
jo
loop
push
add
cmp
rcr
pop
push
es
sub
lods
jmp
adc
in
inc
int3
add
jnp
sub
fisttpl
inc
arpl
push
bound
sub
add
lds
push
pop
push
push
out
pop
pop
cmpsb
pop
aas
add
sti
cmpsl
push
aas
mov
dec
sub
pop
pop
shl
in
push
addr16
sbb
mov
pop
mov
shll
iret
mov
int
cs
fistl
push
dec
mov
pop
mov
jmp
sub
inc
lods
adc
test
mov
cmp
mov
cltd
adc
or
lret
mov
pcmpgtw
pop
ljmp
push
jg
popa
mov
shl
inc
dec
jp
inc
sub
sti
inc
dec
and
cld
and
andl
push
fdiv
jb
dec
dec
fcomip
inc
fisubrs
cmpsl
sub
call
push
jns
divb
out
test
lret
dec
xchg
lret
outsb
pushf
stos
fimuls
pusha
add
mov
lret
popf
dec
mov
rorl
sub
cltd
xlat
mov
das
mov
xchg
pop
mov
sub
outsl
lea
jp
in
mov
and
lret
andl
scas
frstor
into
cmp
push
rorb
icebp
jecxz
div
repz
pop
push
jo
add
shrl
mov
cmpsb
repz
xchg
cli
int
push
std
dec
pop
fcoml
cmp
notl
cmp
jmp
test
rcll
mov
ds
mov
test
or
cmp
dec
aas
cmp
or
outsl
out
outsb
dec
jno
gs
sub
dec
mov
xorb
cmc
scas
fwait
jecxz
adc
int
xchg
fs
sub
sahf
jle
dec
bound
add
sahf
cmpsb
stos
pop
outsb
shlb
fimuls
add
aaa
ds
fsubl
dec
movsl
mov
push
and
data16
movsl
fldenv
xchg
lret
jno
mov
jg
jge
jno
je
clc
sbb
mov
arpl
inc
popa
in
xlat
ss
xor
das
mov
in
testb
mov
push
cmp
dec
cli
sbb
into
mov
fsubp
mov
mov
rclb
scas
xchg
push
inc
push
adc
dec
mov
mov
mov
lods
dec
inc
lahf
aam
push
jecxz
cmp
inc
jecxz
pop
bound
lods
clc
and
cmpsl
mov
sbbb
jle
mov
pop
mov
sbb
pop
fs
xchg
cmp
jno
pop
imul
cmp
jmp
call
mov
mov
sbb
stos
mov
mov
add
adc
inc
cmp
mov
xchg
mov
sbb
push
sbbl
mov
push
dec
cli
test
add
mov
push
jno
aaa
cli
xchg
lret
fadds
loop
and
jecxz
imul
or
inc
mov
insl
aad
cmp
mov
xchg
jne
jmp
sub
fsubrp
stc
leave
arpl
cli
fcoms
mov
in
inc
sarl
xchg
xlat
add
cmp
jg
adc
nop
cmp
mulb
cmp
loope
fbstp
pop
test
nop
cs
fcomip
xchg
jno
adc
out
adc
ja
sbbb
mov
mov
enter
ret
push
dec
pop
push
add
cs
ret
xchg
jp
and
mov
icebp
xchg
inc
test
test
cmpsb
or
pop
xchg
data16
push
add
aam
imul
loope
hlt
jno
sub
clc
std
ret
cmp
or
cmp
jge
imul
xor
mov
aas
cmpsl
add
sub
ljmp
jle,pn
sbb
scas
pop
jo
push
pop
imul
lods
xor
and
jl
pushf
mov
cmc
xor
mov
andl
je
lret
and
mov
pop
lods
sub
outsl
jb
add
addl
inc
lods
sahf
iret
mov
dec
sub
jo,pn
mov
data16
cmpsb
xor
sbb
int
mov
inc
loope
sbb
mov
cltd
jns
mov
jo
pop
daa
out
addr16
or
jle
mov
rcl
push
xchg
lret
lea
out
jg
call
add
sub
leave
icebp
sub
sub
jbe
bnd
and
addr16
mov
lret
mov
push
icebp
add
aam
insl
add
mov
xchg
insl
scas
push
cli
cmp
and
lahf
imul
and
and
cwtl
xor
iret
sti
pop
xor
or
or
inc
pop
shl
stc
mov
jb
cmp
sbb
pop
dec
cmp
movsb
xor
fbstp
addl
or
and
dec
inc
xchg
ja
xchg
scas
cmp
adc
mov
mov
iret
pop
cwtl
ja
jb
fwait
test
gs
mov
out
aad
xchg
sub
mov
popa
cld
dec
lods
dec
icebp
fwait
sti
or
mov
push
clc
jl
int
xor
mov
mov
call
sbb
mov
pop
and
add
in
or
add
aas
pop
pop
or
hlt
and
jmp
sub
and
cmp
mov
cmpl
jp
push
pop
add
movl
mov
xor
test
jmp
jno
mov
fs
sub
xchg
fiaddl
mov
mov
sub
pop
sbb
push
xor
push
push
mov
pop
cmp
xchg
insl
dec
and
xorb
aad
dec
pop
int3
xchg
lret
aad
das
push
xchg
push
lods
inc
fldt
cmp
popf
or
xchg
es
xor
es
imul
mul
cmp
pop
or
sub
insb
movsb
jge
jecxz
mov
or
fs
cwtl
jp
dec
mov
pop
push
fmuls
int
push
pop
jb
in
dec
adcb
ja
mov
mov
movsb
imul
lds
xorl
jle
mov
xor
xor
daa
push
sbb
testl
mov
cwtl
lock
rolb
and
test
jp
sub
xlat
inc
jno
add
gs
bound
gs
push
and
loope
popf
loop
mov
xchg
lret
sbb
adc
outsl
pop
scas
mov
jns
mov
cmp
sbb
xchg
mov
into
jmp
stos
loop
nop
fldt
sahf
sbb
and
pop
mov
sbb
mov
mov
fcompl
pop
call
hlt
test
inc
sub
repz
or
dec
mov
aad
adc
cmp
sub
adc
cmc
adc
aam
dec
and
push
stc
test
sub
push
adc
in
add
in
in
ffreep
scas
lods
popl
add
adc
add
ret
mov
icebp
sbb
int3
icebp
sub
popl
pop
adc
imul
movsl
adc
jno
and
lret
or
cwtl
and
iret
ds
jmp
push
je
nop
mov
std
test
xchg
mov
fwait
in
push
jg
ret
xchg
adc
arpl
lahf
dec
adc
pop
mov
lea
xor
sbb
sbb
sub
jb
nop
je
stos
aaa
lods
cmpsl
xor
iret
jecxz
aad
xor
out
mov
inc
loope
push
add
jae
out
xchg
popf
pusha
cmp
in
cwtl
sub
iret
ds
and
enter
sarb
andl
push
je
pop
sti
cwtl
cltd
adcl
cmp
ljmp
mov
dec
sbb
bnd
xlat
test
movsl
push
mov
pushf
adcl
pusha
mulb
sarb
insb
lds
loope
or
popa
scas
jp
push
loop
mov
fcompl
add
fldcw
push
iret
ljmp
xor
sbb
add
jnp
mov
add
jmp
aad
mov
adc
in
out
fucomip
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fstpl
iret
insb
mov
mov
fisttpll
ret
outsb
xchg
dec
push
idiv
out
lods
clc
jne
or
loopne
mov
dec
cmpsl
aas
je
jne
mov
fwait
inc
sub
xor
fsubr
adc
fisubrs
mov
andl
in
mov
dec
sbb
cli
push
rorb
std
or
cmpsl
or
sahf
sub
cmc
add
xchg
add
pop
dec
mov
cmp
pop
test
add
ret
sbb
test
imul
pop
jne
jb
xchg
inc
decb
inc
cmp
cmp
das
clc
push
adc
or
dec
sbb
xor
int3
inc
aad
xor
aad
push
jmp
mov
xor
movsb
cmpsl
push
sbb
xor
ljmp
mov
mov
push
out
gs
dec
ja
cli
aaa
lods
in
shr
psubusw
sub
mov
inc
test
cmp
add
mov
jmp
and
out
jp
int3
notl
nop
sbb
cmp
ss
add
xchg
rclb
out
es
ja
clc
adc
jl
fldl
push
pop
jp
jmp
flds
push
cmp
jae
insb
mov
movsb
insb
imul
lds
push
incb
sub
es
sub
lret
lcallw
xlat
sarb
and
loopne
inc
mov
aam
je
cmc
xchg
push
flds
or
and
and
pmullw
pop
adc
test
and
pop
je
sbb
shrl
movsb
popa
pop
jns
xor
sbb
pop
cmc
jo
bts
or
inc
test
push
ret
xchg
mov
mov
jne
ljmp
in
sub
inc
pop
aas
bound
mov
scas
cs
movsb
sub
les
repnz
xor
sbb
pop
or
or
mov
jmp
pop
add
cs
xchg
std
in
cwtl
outsb
xor
and
mov
inc
lock
dec
jl
dec
fnstsw
mov
imul
fcmove
mov
sbb
cmp
into
dec
xchg
mov
push
in
cmpsl
mov
jge
fdivs
push
cmc
adc
lds
jb
iret
clc
and
sbb
push
add
js
jae
rorb
mov
icebp
lds
push
cmp
cwtl
test
lock
mov
das
jne
adc
mov
inc
mov
and
or
or
lret
in
lods
lods
dec
mov
aad
in
mov
fwait
sbb
pop
push
mov
cmp
jne
pop
dec
push
jnp
mov
scas
lods
std
loopne
xchg
mov
std
repz
sbb
dec
iret
pop
ficoml
push
outsl
repz
pop
nop
loope
leave
jmp
jmp
mov
loop
sbb
outsb
scas
push
and
inc
push
and
ret
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
movsb
pushf
mov
mov
xchg
push
push
cmp
loopne
mov
add
ja
sub
jbe
xchg
dec
dec
ret
adc
jle
add
movsb
in
xor
xor
repz
adc
jno
cmpsl
mov
enter
mov
sti
sbb
into
mov
dec
mov
xor
or
fstps
push
fildl
and
mov
fistpl
xchg
rol
loop
sub
je
inc
dec
pop
or
data16
mov
pop
call
dec
sub
pop
xchg
lods
and
inc
lcall
dec
dec
inc
sub
nop
clc
push
mov
ret
mov
outsb
stos
cmp
add
mov
mov
jle
pop
jl
testl
int
mov
in
sbb
push
mov
add
cmc
push
lcall
call
push
dec
mov
andb
ss
sub
and
add
xchg
or
data16
dec
sbb
stos
xlat
mov
xchg
cmpsb
xchg
and
outsl
addr16
int
das
lea
testl
inc
mov
stos
sbb
inc
adc
push
xor
push
mov
push
jo
out
sub
jbe
xchg
js
xor
aaa
pop
roll
jle
aas
and
sub
mov
cwtl
cmpsl
leave
into
addr16
sub
call
aas
and
sub
sub
loope
sarb
or
lret
inc
fbld
mov
cltd
sarb
das
fisttps
aam
xorl
mov
ret
test
outsl
mov
negl
loop
sti
pop
in
sub
jle
xchg
ss
cmp
sbb
psllw
adc
test
rcrl
lahf
lock
rcll
inc
dec
pop
in
jb
mov
enter
arpl
jl
inc
arpl
fs
pop
push
mov
shr
rorl
add
or
mov
push
pop
popa
sbb
jg
jmp
adc
xchg
into
and
sub
inc
filds
fildl
pop
xchg
repz
and
sti
ljmp
pop
sbb
ret
jbe
incl
adc
mov
sbb
jne
adc
test
lcall
and
ja,pn
sti
repnz
out
icebp
cmp
scas
jecxz
js
cs
jp
int
pop
cld
jmp
push
leave
dec
mov
lea
xchg
mov
bound
lods
mov
in
adcl
xorl
in
pop
inc
cmp
pusha
sti
xor
mulb
outsb
xor
xlat
and
mov
or
xchg
push
pandn
push
xchg
cmpsl
movsl
int
aam
mov
pop
out
or
sahf
mov
jne
aam
add
push
dec
inc
fisubl
sub
fldenv
mov
mov
sahf
ja
dec
test
addr16
leave
jle
pop
rorb
clc
ret
scas
imul
test
pop
jnp
xchg
mov
mov
shrl
xchg
int3
push
subb
sub
mov
jb
repz
inc
adc
adc
mov
sub
outsl
loope
aad
outsl
cmp
jns
xchg
aaa
imul
cmpsb
add
jae
mov
pop
ret
call
push
pushf
sub
jns
xor
pushl
mov
sti
add
sarb
fimull
xchg
or
add
add
add
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
iret
insb
sarb
inc
lcall
cmp
push
inc
repnz
data16
lds
dec
test
je
aad
int
sub
jbe
dec
ret
mov
mov
and
andb
pop
loop
ficompl
add
adc
sti
ret
mov
jne
dec
in
mov
daa
test
popf
cltd
adc
orb
shrb
xor
hlt
pusha
mov
jbe
imul
lret
inc
aad
test
dec
shl
clc
jnp
outsb
push
mov
dec
pop
cmp
mov
repnz
mov
mov
inc
jae
inc
stos
or
out
imul
clc
and
mov
and
and
sub
stos
xor
mov
aaa
inc
mov
or
inc
frstor
mov
ret
and
in
shr
ljmp
insl
jge
xor
and
inc
sti
cmpsb
jno
out
and
cmp
insb
sbb
ljmp
out
push
es
lods
adc
jb
jae
push
sbb
repz
lods
imul
test
lds
xor
xor
xor
cmpsb
lods
jb
pusha
fstl
jbe
mov
dec
xor
addr16
loop
adc
das
sub
out
sub
jbe
add
vpshuflw
push
mov
mov
mov
sub
sub
cld
and
adc
cmpsl
stc
sub
fnstcw
jnp
iret
jbe
or
or
scas
mov
jecxz
cltd
push
cmp
addr16
pusha
stos
pop
shll
xlat
xchg
xchg
cwtl
scas
xchg
subl
pop
cmp
rclb
fsubrl
sub
test
fdivl
add
pop
scas
mov
xchg
gs
addr16
jl
incb
addb
outsl
inc
in
ja
cmp
lods
dec
jb
je
enter
dec
lds
pop
lock
mov
test
adc
inc
dec
lea
lret
outsb
jg
inc
mov
pop
setg
test
mov
xor
sbb
add
sti
popa
icebp
inc
iret
jae
xor
repnz
sbb
and
jb
jg
mov
lods
dec
jle
add
push
inc
imul
pop
adcb
and
cltd
int
pop
mov
and
rcll
roll
xor
add
xor
or
les
xor
pop
test
dec
dec
push
adc
sub
out
dec
or
mov
or
dec
sahf
pop
fs
dec
repz
bound
push
sbb
dec
dec
pop
mov
lea
popa
xchg
pop
xchg
or
in
dec
cmp
xchg
cwtl
cwtl
lods
lret
stos
cwtl
or
imul
arpl
rol
adc
sbb
push
fildl
faddl
xor
shrl
ljmp
mov
repnz
outsl
out
xor
and
cld
or
jg
int
mov
daa
lods
cmp
ds
subl
dec
pop
pop
xlat
sarl
cli
sub
test
mov
xchg
sbb
inc
nop
je
ja,pt
stos
lcall
fbstp
les
jno
cmpsb
jns
sub
push
fucomp
xchg
xchg
mov
adc
xor
aaa
or
stc
mov
cmp
loope
movsb
insb
sub
cmc
es
leave
sbb
inc
imul
add
inc
aam
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
leave
add
cmp
sarb
loopne
ficoml
jne
ret
xchg
out
cmp
ret
xor
aaa
cmp
outsb
jo
es
dec
fdivr
sub
mov
sbb
aas
sbb
inc
xchg
mov
mov
mov
mov
stos
push
adc
mov
mov
add
xlat
mov
or
out
out
aad
cld
das
pop
mov
mov
stos
mov
push
les
mov
idivl
pop
popf
js
movsl
push
adc
xor
fdiv
enter
in
pop
lea
mov
pop
ret
mov
adc
int3
imul
insl
popa
sub
jg
jl
sahf
mov
mov
jecxz
outsl
in
xchg
dec
push
cmpsb
mov
mov
lods
loop
xor
gs
or
xor
and
pop
pushl
sub
mov
pop
ljmp
sbb
mov
lret
in
gs
cmp
inc
mov
sbb
jmp
fs
or
add
inc
mov
outsb
mov
lods
fcoms
or
ret
dec
jl
lcall
or
sub
fcoml
bound
inc
mov
fidivs
js
cmp
jmp
cs
idiv
jnp
imul
test
fcmove
inc
jle
inc
imul
jmp
fcmovbe
jmp
fildl
push
lods
xor
daa
add
inc
aam
pop
cmp
sbb
inc
mov
les
inc
loopne,pt
ret
pop
sub
std
movsl
scas
mov
inc
push
out
or
imul
add
addr16
push
gs
mov
mov
addr16
xchg
pop
data16
cmp
jl,pt
and
add
inc
add
repnz
mov
ljmp
sub
repnz
add
cmp
dec
sbb
loopne
nop
stos
pop
pusha
jmp
fnsave
inc
outsl
sub
cmp
push
sbb
cs
out
jns
xchg
adc
inc
inc
shlw
mov
add
inc
push
xchg
add
test
or
sub
loopne
sub
dec
add
dec
sub
sbb
jp
scas
cmpsb
inc
jb
aas
sti
inc
mov
dec
cmp
mov
scas
lods
xchg
add
or
jae
ljmp
insb
sbbl
mov
std
lock
daa
and
mov
cmp
sub
fdivrp
or
lea
pop
aad
push
into
call
dec
aaa
daa
or
out
pop
jecxz
sbb
sar
push
pop
inc
push
pop
jge
aaa
xchg
addr16
frstor
or
mov
sbb
cmpsb
flds
push
sub
rolb
sbb
cwtl
fidivrs
pop
dec
fistl
sbb
lcall
imul
jbe
push
in
daa
or
scas
stc
push
xlat
xchg
jb
lods
hlt
faddl
imul
popf
icebp
jmp
dec
mov
ja
adc
jbe
mov
add
lahf
movsl
inc
ror
xor
add
and
clc
mov
fs
test
or
add
orl
or
xor
lock
and
int
arpl
xlat
ss
adc
add
inc
lock
hlt
xchg
shlw
into
test
add
out
push
mov
sbb
sbb
out
jne,pt
negl
in
or
aam
iret
aam
mov
adc
test
rolb
inc
dec
lahf
and
xor
dec
mov
out
adc
sbb
les
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
jmp
aam
mov
cmpsb
cmpsl
jae
shlb
cmp
test
aaa
insb
hlt
cli
dec
sbb
push
jbe
pop
xlat
fstpl
add
mov
xchg
int
out
es
je
jmp
jp
daa
movlps
mov
xor
mov
inc
testb
push
add
sarb
lods
cmpsb
int
mov
lock
cli
dec
push
js
sti
lock
lahf
not
aaa
xchg
jmp
popa
daa
bound
or
lcall
jp
inc
cmpsb
iret
insb
fnstcw
mov
push
mov
mov
jp
lods
mov
in
push
pop
insb
frstor
fbld
cmp
ljmp
jl
inc
add
call
imul
mov
bound
imul
cld
les
mov
pushf
or
pop
push
test
add
sub
nop
int
dec
push
xchg
movl
rcrb
imul
or
add
lods
cmp
testl
sub
mov
lods
hlt
add
lret
or
fistpll
arpl
cs
xchg
das
fwait
inc
mov
insl
je
pop
mov
mov
xor
jbe
mov
push
js
jo
cld
insb
mov
mov
jbe
inc
aaa
jne
jg
cmc
adc
fpatan
lock
push
push
insb
sbb
pop
push
mov
lea
sub
inc
sbb
clc
xchg
jne
mov
push
or
in
dec
out
sbb
sahf
clc
mov
clc
ss
jge
jmp
scas
add
bound
fisubrs
rdpmc
xor
in
jl
xor
xor
aaa
sahf
leave
xor
inc
xchg
bound
gs
pop
imul
mov
int3
or
mov
lret
cmp
mov
jmp
push
nop
sbb
mov
stos
mov
imul
mov
xor
iret
test
arpl
icebp
and
aaa
stos
mov
sbb
rolb
push
lds
add
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
out
test
sarb
sti
pop
xchg
push
inc
ret
jns
add
not
scas
nop
inc
pop
mull
dec
out
sub
inc
xchg
add
inc
jl,pn
mov
mov
xor
cmpsl
push
add
sub
and
sub
outsl
ss
cmpsl
mov
xor
mov
xor
fldcw
jae
push
mov
pop
insb
inc
sub
cld
cmpsl
daa
push
inc
lods
cld
add
xchg
in
adc
xor
adc
in
imul
and
xor
jg
test
push
jg
cmp
or
xchg
push
aas
mov
dec
test
xchg
adc
xchg
push
sub
or
out
add
pop
inc
jbe
bound
les
pop
xchg
xchg
cmp
frstor
pop
popa
sub
push
nop
pop
and
or
dec
cmpb
insl
dec
sahf
mov
aad
bound
insl
pushf
xlat
setnp
shlb
mov
xchg
out
sbb
out
fisttps
sbb
fisubs
dec
mov
inc
jb
and
xchg
cwtl
fidivrs
xchg
in
fsubrl
shll
xor
fsubrs
inc
popf
xchg
in
xor
out
rolb
add
faddp
jae
add
leave
push
fs
jne
jge
bound
cld
sub
inc
scas
daa
dec
adc
aaa
in
scas
xchg
mov
jno
roll
out
xchg
fidivs
in
xchg
or
push
movsb
jb
popa
inc
incb
mov
mov
adcl
out
testb
sub
pop
in
inc
jbe
or
cmpsb
ja
stos
inc
xchg
mov
imul
pop
add
movb
adc
xor
adc
push
inc
shrl
or
mov
sbb
arpl
sub
cs
iret
cmp
and
aad
popl
cmp
lea
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
mov
or
faddp
mov
inc
mov
or
repz
mov
jp
mov
xchg
imul
fadds
cmp
cmpsl
jns
cmp
test
mov
ret
faddl
aad
out
xor
shlb
mov
xor
jp
adc
aam
inc
pop
cmp
pop
push
repz
jmp
or
scas
pop
mov
xchg
into
movsl
push
adc
mov
xor
incb
loope
mov
lcall
adc
int3
out
pop
jne
or
pop
repz
das
mov
mov
mov
icebp
pop
jg
sbb
enter
add
cmp
data16
test
inc
xchg
lret
cmpsb
sub
stos
xlat
enter
xchg
roll
scas
mov
lods
cmp
in
fwait
mov
mov
and
shrl
push
ds
out
mov
pop
rolb
inc
gs
repz
push
mov
cli
adc
adc
mov
or
xchg
in
ret
outsl
repz
mov
or
rcrl
scas
add
ja
pop
xchg
stc
fdivrl
inc
jge
mov
ror
mov
pop
push
adc
ja
lock
pop
push
inc
mov
stos
xor
or
incl
mov
loop
pop
jne
sub
jne
test
sub
leave
sarl
mov
jg
lock
jb
sbb
addb
jge
push
mov
test
pop
xchg
sub
fisttps
mov
xor
mov
xchg
xchg
out
out
call
and
jae
and
mov
jecxz
mov
xchg
xor
jae
mov
cld
push
cltd
sbb
xchg
xchg
inc
fimull
xorb
test
in
push
mov
inc
repz
stos
xchg
mov
movsb
pop
lcall
adc
mov
sti
mov
movsl
imul
xor
xchg
and
popf
rolb
xchg
ret
jb
jl
sbb
add
inc
add
pop
add
add
add
xchg
jecxz
mov
jb
sahf
nop
mov
and
xor
lret
lods
repnz
jge
push
rolb
repz
mov
cmp
adc
mov
dec
cmpsb
xor
mov
mov
xchg
clc
sub
or
enter
and
mov
stos
xchg
scas
cmp
cmp
push
es
fidivs
xor
call
sbb
jae
into
shr
add
pop
sub
mov
xor
sbb
ret
add
ljmp
call
rclb
mov
cmpsb
cs
pop
mov
imul
xchg
mov
cwtl
or
xchg
mov
push
dec
mov
scas
fsincos
push
xchg
push
sub
jns
jg
rcr
mov
outsl
cmp
xlat
xchg
shlb
push
jae
cmpsl
adc
dec
xchg
adc
mov
cmpsb
sbb
jp
mov
fisubs
rcr
push
aaa
pop
icebp
jne
clc
mov
stos
cs
lods
xor
adc
or
je
push
dec
inc
or
fisubs
adc
or
test
gs
lret
movsb
jns
ret
dec
sbbl
mov
out
xchg
sbb
xor
test
or
sbb
mov
adc
ja
ljmp
pop
and
jns
cmpsl
adc
outsb
fmuls
leavew
stos
loop
add
hlt
xchg
push
xchg
pop
dec
cmpsb
cmpl
xor
mov
push
movsb
mov
or
or
jp
adc
ljmp
nop
cmc
cli
xchg
ja
in
subl
add
add
stos
movsb
jecxz
mov
jns
mov
push
xchg
lock
push
and
mov
test
sbb
lret
push
sbb
jae
data16
enter
dec
loopne
ss
and
inc
stos
sub
and
mov
loopne
cmp
sbb
mov
sbb
movsb
sub
jl
sub
sti
add
mov
inc
iret
mov
addl
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
pusha
and
xor
jo
mov
push
inc
push
mov
dec
ficomps
dec
inc
rcr
popf
jg
iret
andb
mov
outsl
or
out
div
imul
out
enter
mov
mov
add
sbb
or
in
ss
nop
enter
scas
cmp
loopne
xchg
dec
add
insl
mov
and
mov
out
adc
dec
jl
clc
mov
adc
cmp
leave
das
pop
xchg
in
fbld
and
dec
push
je
mov
jp
ljmp
rclb
jne
mov
ret
dec
into
in
xor
incl
push
push
mov
xor
push
insb
xchg
mov
mov
mov
mov
jecxz
test
or
pop
xor
cmc
pusha
imul
iret
xorb
add
gs
cli
pop
and
adc
jmp
dec
les
lods
popa
push
xchg
push
int3
pop
mov
into
arpl
or
sub
cmpl
pusha
xchg
pop
xor
sbb
pop
push
aam
stos
pop
dec
inc
adc
insl
stos
call
sub
jge
xchg
ja
cmc
sbb
les
lock
inc
xchg
leave
xor
mov
daa
je
lcall
cwtl
mov
cmp
and
js
xchg
sub
mov
sub
movsl
dec
in
stos
pop
xchg
je
fcompl
inc
daa
pop
js
pop
call
inc
xchg
stc
inc
sarl
popa
or
subb
cld
mov
repz
cmp
push
scas
xchg
test
xor
rol
into
and
data16
sti
dec
popf
fsubrp
hlt
stos
in
lcall
nop
insb
int
sbb
cmpsl
dec
rcl
xor
test
popa
lock
push
sub
dec
ss
cmp
jmp
mov
jne
inc
mov
dec
ja
inc
cmpsb
loope
cli
and
lea
cmpl
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
andb
mov
add
xchg
mov
jb
push
jo
push
xchg
rcll
divb
adc
xor
xchg
mov
sbb
pop
xchg
fs
cwtl
mov
call
addr16
loop
je
push
cmp
and
pop
ss
test
outsl
add
arpl
jmp
push
pop
mov
out
or
test
icebp
popf
ljmp
rclb
pop
mov
call
addr16
cltd
sbb
into
sbb
sub
dec
jl
mov
mov
push
jecxz
sub
dec
mov
jno
sbb
mov
inc
fwait
test
mov
mov
xor
inc
sub
out
jmp
pop
xchg
ret
fstps
leave
cld
cmp
push
mov
adc
lea
cld
lret
cs
mov
sete
insl
outsb
push
mov
sub
pusha
xchg
ffreep
dec
jo
ss
into
push
fnstcw
jl
arpl
andnps
xor
inc
push
xchg
aad
pusha
jg
test
stc
cmpsb
add
inc
lods
mov
inc
daa
pop
imul
into
out
pop
add
das
push
insl
inc
or
jo
cli
orl
leave
iret
vpsadbw
mov
subl
inc
ret
test
and
dec
hlt
mov
icebp
lahf
xlat
push
je
sahf
mov
imul
icebp
not
dec
mov
mov
push
xor
inc
pop
stc
andb
and
mov
mov
fstl
lock
pop
fsts
mov
jb
leave
roll
xchg
adc
bound
xor
ss
mov
jge
sbb
push
sub
shll
jns
clc
or
mov
push
or
outsl
jl
sbb
repnz
test
dec
pop
or
push
dec
jecxz
lds
mov
mov
popf
mov
xchg
testb
fmul
mov
cmp
sarb
out
and
sub
push
jp
push
pop
push
jmp
pop
pop
push
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
jecxz
out
sarb
mov
aad
xor
outsl
mov
hlt
lret
aam
mov
js
sahf
sbb
and
or
data16
xchg
mov
jbe
fcmovnbe
mov
sbb
nop
lcall
fdiv
or
ss
lret
mov
outsb
sub
mov
adc
stos
mov
mov
push
dec
mov
pop
jp
js
push
dec
fstps
cmp
fstpl
mov
lock
aas
and
fisttpll
in
mov
lea
mov
inc
jle
xchg
jo
enter
or
aam
or
push
ss
ret
pushf
test
jne
jecxz
adc
fnstenv
jns
das
lahf
test
sarl
repz
cli
xchg
lret
andl
mov
ret
xor
sub
fmull
mov
push
mov
int3
test
add
ss
push
outsb
inc
dec
inc
or
int
insl
push
mov
dec
jecxz
sub
dec
or
insb
push
mov
add
or
mull
fdivrl
mov
aaa
lcall
ja
lods
xchg
cs
cmp
dec
pop
cmc
jecxz
mov
int3
jecxz
mov
icebp
loop
or
or
and
jecxz
imul
mov
mov
sbb
mov
movsb
cmc
pop
iret
mov
jo
jae
dec
imul
pop
push
dec
pop
xor
in
mov
lea
je
jle
in
arpl
pop
adc
xchg
test
popf
pop
fldenv
sbb
into
lods
pop
pop
inc
decb
les
pop
add
xor
cmp
dec
sbb
jmp
mov
mov
test
mov
jnp
dec
hlt
fisubrl
dec
pushl
pop
adc
stc
stos
icebp
sub
dec
xchg
cmpsb
jl
std
mov
insl
sbb
imul
jl
sub
roll
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
iret
push
repz
test
ret
jmp
jge
test
imul
incb
scas
test
loope
inc
dec
pop
pop
push
jge
pushf
add
lret
rcrb
cmp
xor
in
test
mov
pop
dec
sub
or
mov
mov
xchg
repnz
insl
out
dec
push
fwait
mov
and
xchg
adc
pop
aas
out
dec
mov
pop
add
stos
jbe
movsb
and
mov
repz
sbb
inc
nop
sbbl
cmp
enter
imul
mov
cmc
lock
aam
adc
adc
inc
xchg
in
scas
into
rorb
popf
inc
sahf
arpl
shlb
lods
and
fsubrp
pop
lahf
inc
xchg
les
stos
dec
lods
dec
iret
jnp
sub
cmp
data16
xor
lds
and
cmpsl
hlt
ret
mov
xchg
sarb
enter
mov
add
add
mov
lret
test
dec
sub
iret
cmp
iret
mov
jp,pt
jb
int3
inc
xor
cld
in
test
repz
loope
loopne
std
cmpsb
jg
rorl
mov
or
lea
inc
roll
enter
sbb
iret
out
js
scas
es
mov
lds
mov
sbb
in
cmp
inc
popa
scas
mov
in
mov
enter
rorb
pusha
iret
cmp
ss
add
iret
push
movsb
dec
shrb
cmp
out
mov
sub
fs
imul
ret
arpl
dec
pop
xor
fwait
dec
in
cmpsb
adc
xor
fxam
or
sub
lea
loopne
fstps
jge
xchg
xchg
xchg
xchg
xchg
adc
inc
fldcw
pop
mov
sahf
mov
jbe
inc
push
adc
rolb
mov
ss
mov
shrl
test
imul
lods
xor
push
add
mov
nop
or
xchg
mov
addr16
inc
and
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
jnp
cwtl
jecxz
test
mov
mov
sti
dec
test
xlat
adcl
clc
pop
sub
outsl
jo
inc
sar
or
jo
fwait
in
addr16
es
mov
idiv
test
mov
jg
cltd
push
push
adc
add
arpl
pop
pop
push
push
repnz
cmpsl
push
gs
and
loopne
cld
cs
mov
dec
jbe
add
int
mov
mov
mov
jmp
es
dec
loopne
fadds
std
mov
fdivrl
sbb
in
push
fcmovnb
sbb
inc
xchg
push
jl
scas
cmp
jbe
in
loope
add
lods
jo
je
sbb
pusha
je
cmpl
lcall
out
fadd
outsl
out
xlat
xchg
cld
mov
lcall
adc
std
and
in
cwtl
int3
icebp
push
push
or
and
push
jl
js
mov
ja
das
ds
sub
in
cmp
fistl
add
pop
hlt
push
lret
nop
imul
mov
test
test
push
mov
out
call
push
jmp
add
cmpsl
add
call
and
lcall
jns
mov
fbstp
dec
cmp
mov
cmp
test
cwtl
xchg
clc
unpcklps
cmpsb
push
xchg
icebp
fdivr
push
sahf
sub
mov
xor
cld
enter
insl
scas
mov
inc
push
pop
add
hlt
pop
rol
test
cmpsb
ds
pop
xchg
enter
ficomps
mov
push
ds
add
add
jp
jbe
dec
xchg
scas
and
das
dec
mov
push
stc
mov
imul
jecxz
add
mov
aad
mov
cmpsb
cmp
mov
inc
jp
dec
jbe
sub
dec
icebp
outsl
sbbb
push
mov
scas
jb
add
mov
lahf
pop
inc
sahf
xchg
mov
std
mov
int
cs
sbbl
jg
mov
addr16
aaa
pop
jnp
ja
adc
sbb
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
roll
mov
pop
imulb
sahf
xor
lret
pop
roll
push
pushl
jp
mov
jle
jno
xor
xchg
aas
iret
sub
fisubl
xor
fcoms
push
enter
repnz
and
movsl
test
cmp
mov
add
pop
mov
stos
mov
pusha
lock
push
jge
mov
mov
hlt
dec
and
push
test
loopne
push
pop
sub
sbb
jl
inc
ret
test
xor
xor
xor
mov
sti
rcr
mov
jp
or
cmpsb
int
ret
loopne
movsl
or
test
into
int3
das
imul
dec
shrb
pop
lahf
jns
sub
inc
cmpsb
push
mov
std
inc
adc
pop
mov
and
aam
aaa
out
sub
mov
dec
xor
xor
dec
or
or
pop
and
sub
sub
stc
cmc
mov
dec
pop
mov
cmc
jnp
shlb
mov
sub
sub
xchg
icebp
dec
mov
sub
lret
mov
ficomps
test
repnz
jo
pop
je
add
sub
inc
wbinvd
jmp
cmp
cmpsb
jno
dec
xchg
mov
and
adc
push
les
faddl
add
dec
pop
pop
shlb
lret
jmp
in
call
jns
and
mov
out
xchg
jp
inc
outsl
add
and
test
scas
shlb
shr
mov
mov
mov
mov
mov
mov
popa
lcall
adc
rclb
fmulp
mov
movsl
inc
cs
adc
push
loop
out
popa
sarl
mov
push
fs
call
cmp
mov
or
sarb
jle
sbb
push
push
outsb
xchg
dec
popf
add
sbb
rcl
clc
cmp
mov
mov
sbb
add
cmp
test
push
xchg
mov
cmp
jne
cmp
je
mov
mov
xor
shld
jmp
lret
repnz
xchg
xor
sub
inc
fnstsw
mov
mov
lret
in
cld
pop
nop
cmp
mov
fdivl
lds
sbb
cwtl
leave
pop
mov
or
fstpt
stos
adc
xchg
and
or
push
inc
sbb
out
adc
mov
jne
sub
jae
ljmpw
mov
inc
and
pop
stos
mov
into
int3
jg
lcall
add
repz
aam
push
pop
inc
addr16
adc
cmp
cwtl
adc
mov
scas
in
adc
and
sub
dec
insb
stos
pop
imul
mov
mov
jb
shlb
lods
cmp
leave
fists
or
push
mov
sbb
jmp
in
enter
pop
enter
or
and
dec
push
fxch
scas
mov
addr16
int3
iret
adc
jno
add
cld
dec
sbbl
je
insl
xchg
mov
push
pop
aam
out
into
xor
mov
cmp
shlb
dec
insl
inc
sub
repnz
lods
popf
inc
lods
mov
adc
movsl
jecxz
sbb
jo
sub
sub
bound
out
push
scas
aad
out
sub
loope
in
repnz
imul
or
bound
leave
sbb
dec
repnz
mov
lret
fldt
and
mov
mov
dec
xorl
mov
outsb
sub
sub
pushf
mov
shl
mov
inc
ret
out
sub
aam
push
cmpsl
pop
xchg
ss
xlat
addr16
in
inc
adc
add
adc
stos
sti
loop
mov
fsubrl
cmc
shll
mov
mov
cmp
xchg
nop
aad
mov
dec
add
out
mov
sub
pop
jb
push
into
add
jmp
stos
outsl
sub
mov
jns
xchg
jg
lods
imul
pop
mulb
pop
clc
cmpsb
cmp
rorb
or
jmp
aaa
in
loopne
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
imul
mov
mov
fxch
pushf
mov
cmp
mov
mov
add
jns
imul
popf
dec
push
sub
sub
aas
cmp
fcomps
mov
ret
std
pop
sbb
mov
or
repnz
aaa
test
dec
xchg
outsl
adc
push
pop
lcall
loope
cmp
orl
dec
xchg
xor
mov
lock
adcb
adc
jecxz
pop
pop
xchg
add
jae
add
data16
inc
mov
dec
and
cmp
iret
out
fwait
je
mov
jb
mov
mov
cltd
inc
mov
out
gs
ss
enter
shrb
dec
add
xorl
div
imul
xchg
add
fnsave
xor
xor
subb
in
add
icebp
cmpl
es
mov
dec
cmpsl
xchg
mov
or
mov
in
push
inc
sub
mov
pop
and
mov
adc
call
imul
mov
mov
ret
dec
stos
es
xor
out
scas
sbb
gs
adc
or
loop
xlat
push
jp
adc
int3
or
pop
push
mov
jo
pop
xchg
pop
inc
repnz
adc
cmp
inc
popa
stos
mov
rolb
push
lods
fcom
and
sub
mov
or
lods
xor
jmp
adc
mov
xor
mov
lcall
mov
stc
jno
lock
pop
scas
mov
cli
cmpsb
aad
in
ret
lock
fisubs
or
cmpsb
xchg
rcrb
mull
aas
mov
data16
jnp
int3
bound
or
push
stc
imul
imul
xchg
es
mov
mov
mov
shrb
mov
and
loop
adc
or
xchg
jmp
add
jb
or
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
outsl
xor
mov
push
test
mov
xchg
clc
pop
ss
ficoms
insb
enter
fimull
inc
aam
ds
pusha
add
gs
addr16
lahf
fstpt
cmp
push
push
and
pushf
add
ret
and
pop
out
ds
mov
sub
jp
fidivl
cmp
xor
je
inc
pop
mov
clc
add
iret
inc
mov
push
mov
inc
add
mov
pop
jae
gs
mov
dec
and
pop
mov
arpl
push
jmp
mov
add
xor
out
fcoms
adc
out
lods
push
xlat
push
or
jmp
mov
pop
xchg
sahf
imul
lds
xchg
sti
jb
fnsave
pop
fdiv
cmpsl
adc
scas
lods
xorl
push
inc
mov
inc
flds
ja
xchg
lret
cltd
pop
fnstcw
ds
or
rcl
out
test
jo
xchg
shll
or
mov
mov
and
xchg
adc
shufps
mov
mov
add
jl
adc
inc
jle
jecxz
adc
jle
enter
iret
jb
pop
mov
gs
jl
pusha
mov
cmpsl
mov
sub
inc
push
fstpt
inc
and
cltd
push
das
sahf
pause
mov
frstor
ret
mov
out
xor
leave
push
and
std
jne
pop
iret
adc
aam
mov
jns
push
cmp
in
ret
mov
push
mov
jmp
mov
sbb
mov
shlb
les
or
js
push
scas
inc
es
cmp
push
dec
stos
outsb
or
xchg
fidivrs
push
and
mov
mov
mov
inc
filds
jl
repnz
and
add
mov
ror
push
push
test
and
jmp
sar
in
sbb
adcl
repnz
push
mov
pop
movsb
cli
faddl
dec
sarb
xor
cmc
and
mov
imul
dec
divb
and
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
test
mov
and
sarb
jns
xchg
pop
repz
cmpsb
xorl
or
sub
adc
dec
cmp
fs
pop
fwait
ja
lcall
sbb
ss
sar
cltd
cmpl
cmpsb
mov
adc
inc
ja
hlt
jbe
scas
mov
gs
imul
xor
push
in
divl
add
notl
xor
out
and
mov
in
mov
and
fisttpl
leave
repnz
jne
xchg
sti
imul
lcall
test
rep
add
loopne
xor
jmp
push
call
lahf
push
ljmp
test
fcmovb
es
das
outsl
mov
loop
int3
iret
jmp
dec
add
push
rolb
mov
mov
sbb
dec
imul
pop
pop
shll
je
ds
mov
sbbb
cmp
out
push
fisubl
sbb
js
mov
or
xor
mov
pop
inc
inc
mov
out
ja
cmp
adc
cs
push
jmp
ret
gs
stc
pop
lcall
rcll
lret
imul
and
sub
jle
arpl
mov
inc
and
lods
pop
out
mov
out
cmp
sahf
sbbb
xlat
inc
xor
into
cmp
jl
flds
sbb
iret
xor
inc
mov
cmc
out
jbe
inc
call
and
cltd
out
mov
stos
mov
inc
adc
sar
jne
imul
inc
pusha
push
out
popf
mov
inc
adc
aam
mov
cmp
mov
fldt
sub
or
cmp
cmp
out
and
roll
push
aam
clc
mov
std
nop
fwait
gs
cs
imul
xor
adc
pop
inc
lahf
dec
pop
xchg
sub
insb
xor
xor
jle
ljmp
lahf
out
pop
sbb
push
and
add
mov
xchg
stos
stos
or
add
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
pop
xor
adc
mov
cwtl
movsl
mov
lods
and
dec
cld
adc
popa
divb
adcb
fsubs
ljmp
or
clc
mov
iret
sbb
xchg
jp
ret
repnz
jecxz
cli
test
fcmovu
xor
inc
fwait
pop
xor
mov
cld
fsubrs
fdivrp
lret
cmp
adc
shlb
nop
pop
push
push
mov
mov
mov
sbb
xchg
bound
push
test
xor
rcl
pop
fs
sub
mov
movsb
inc
mov
mov
iret
lahf
jp
push
shl
fnstcw
jno
sbb
lahf
in
rep
adc
mov
adc
push
fidivrl
loope,pn
push
lahf
fdivl
and
loop
inc
sbb
mov
leave
and
inc
sbb
sarl
int3
xchg
insl
inc
cmpl
lock
les
inc
imul
stc
pop
test
dec
rcrl
jbe
xlat
cmpl
or
test
inc
xchg
push
lret
jl
in
adc
adcl
push
fdivp
cwtl
int
mov
jae
mov
pop
sub
push
ss
rcrl
mov
iret
into
cmp
dec
mov
outsl
mov
dec
addr16
movsl
mov
std
mov
sub
flds
lret
push
sbb
repz
mov
xchg
pop
popa
or
add
mov
mov
pop
ss
in
inc
sub
cmpl
or
jne
stos
xor
sti
or
push
jmp
inc
cmc
rsm
ds
or
ds
addr16
mov
mov
adc
inc
pop
dec
xchg
in
push
imul
bound
push
in
inc
or
adc
icebp
cmp
cmpsb
mov
pop
bound
js
fimull
in
jb
test
xor
ret
jne
jno
pop
cltd
dec
mov
arpl
je
adc
mov
inc
dec
data16
lret
cmpl
mov
int3
mov
pop
jle
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fisttpll
push
sahf
adc
sarb
inc
std
mov
adc
neg
clc
and
sub
jecxz
inc
popf
mov
adc
fptan
xchg
lods
ljmp
popf
sub
push
clc
and
stc
adc
shll
xor
lahf
push
stc
xchg
jmp
sub
pop
das
sti
loope
pop
xor
sarl
test
lcall
cld
rol
jg
adc
insl
repnz
jmp
adc
inc
cwtl
adc
jle
and
inc
out
xchg
mov
mov
pop
cld
popf
mov
es
pop
dec
push
add
jns
push
sbb
repz
add
sub
mov
mov
pushf
sub
or
pusha
cmp
je
push
pinsrw
hlt
fimull
ja
jl
push
sub
pop
cmp
xchg
push
mov
and
ficomps
data16
sbb
out
push
cmp
or
or
jge
addl
xor
js
jnp
lcall
push
jbe
fcmovb
adc
add
push
shrb
sub
xchg
dec
sub
cwtl
lds
imul
mov
movsl
test
mov
push
cmpsl
cmp
push
jnp
add
mov
add
fcompl
mull
dec
xlat
cmp
adc
cwtl
sub
imul
sub
addb
pop
adc
or
adc
adc
dec
test
clc
jne
push
or
add
shr
out
dec
lcall
subl
ret
mov
repz
and
imul
add
xor
std
dec
clc
mov
dec
loopne
xchg
div
lcall
inc
push
mov
jmp
div
in
js
lahf
outsb
dec
adc
add
sub
push
lea
push
imul
inc
xchg
andb
lods
int3
cld
push
and
popf
stc
add
hlt
or
into
fsubrp
lock
shrd
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
sarl
js
rorl
ret
gs
pop
cmp
lret
shll
leave
std
adc
iret
jo
leave
insl
mov
cmp
xchg
stos
mov
inc
xor
and
js
out
stos
out
cmp
call
dec
sbb
pop
sbb
xchg
mov
in
sub
shlb
repz
mov
ret
mul
dec
leave
jle
das
add
xor
bswap
add
fwait
sti
jmp
push
or
aas
in
inc
inc
xchg
hlt
dec
adc
test
lea
pop
jnp
fmuls
dec
add
je
adc
inc
sub
je
push
aaa
cmpl
lcall
scas
xchg
mov
iret
add
inc
pop
cmpsl
mov
stos
movsb
test
outsl
cmpsb
pop
push
lods
mov
jle
data16
lock
jmp
inc
lods
les
push
xchg
xor
mov
fnstenv
xor
mov
adc
data16
mov
sbb
adc
jns
movsb
sub
popa
pusha
int3
add
dec
out
stos
adc
jge
scas
ret
test
loopne
in
xor
cwtl
out
in
inc
and
bound
fsubl
popf
push
push
sub
push
push
pop
cmpsl
push
inc
inc
pop
shl
out
and
into
lahf
mov
movsb
mov
fistpl
sahf
es
loopne
shl
rcll
sbbl
jp
sub
mov
rcrl
rorl
dec
dec
dec
fcmovu
sar
scas
sahf
mov
dec
clc
mov
xchg
cli
sub
pusha
in
imul
xor
inc
sbb
pop
mov
subb
lahf
fidivl
fwait
into
push
dec
out
call
outsb
lods
les
rcrb
xor
xchg
xchg
mov
fidivs
jnp
in
and
outsl
mov
pop
and
popa
popf
cwtl
es
dec
cmp
inc
cmp
popl
sbb
imul
xor
loope
mov
mov
dec
icebp
sub
cs
mov
xchg
jne
cmp
sbb
jb
adc
mov
lds
mov
stos
in
stos
fs
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
mov
pop
sarb
in
ret
fwait
xor
cs
cli
mov
sar
into
rcrb
pop
scas
mov
aaa
dec
cmp
cmp
cmp
leave
scas
jnp
stos
int
push
jnp
scas
push
inc
push
outsb
and
inc
arpl
testl
dec
mov
pop
sahf
ret
jp
popf
test
jp
popf
aad
pop
je
roll
mov
sub
and
addr16
adc
mov
rcr
das
mov
ftst
inc
shlb
rolb
loopne
leave
stos
dec
mov
add
ja
movl
notb
push
adc
inc
pop
mov
mov
xor
std
jmp
popf
sar
xchg
fnstsw
sub
xchg
push
loope
hlt
xlat
xor
sub
push
pandn
pop
ret
bound
fs
fisttpl
xchg
jb
push
icebp
dec
cli
sbb
in
jge
into
test
rcrl
out
aad
aad
mov
pop
es
aas
pop
test
pushf
repz
xlat
arpl
ja
sbb
jae
adc
sub
mov
jl
mov
dec
pop
pop
fisubrs
lea
add
enter
rorb
ret
in
shr
outsl
xchg
xor
test
pop
out
cmp
cltd
or
movsl
xchg
not
adc
xchg
mov
jmp
cld
jo
shrl
xor
rorl
shl
cmp
pop
test
rcrb
popa
movsl
sti
ja
add
adc
int3
out
cltd
ds
sbb
test
outsl
js
xor
rol
test
ljmp
mov
xchg
lahf
pop
inc
data16
mov
jmp
jmp
sub
add
int
call
cli
cmp
pop
add
fwait
pop
pop
icebp
sarb
adc
xor
add
int
jbe
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
and
sarl
mov
jge
and
stc
and
imul
cmpsl
lock
mov
sarb
push
push
mov
shrl
les
jmp
in
mov
xor
xchg
ficompl
fcmovbe
and
ljmp
xchg
dec
add
and
lea
pop
imul
cmc
push
icebp
mov
adc
neg
popf
xlat
js
jne
mov
sti
push
pusha
xor
sub
push
ss
ret
or
addr16
sbb
into
push
es
add
in
dec
movsb
inc
mov
pop
sub
outsb
out
popf
sarb
pop
test
push
iret
pusha
je
data16
mov
mov
notb
or
and
cld
lods
test
inc
pop
fwait
jecxz
sbb
call
aad
jns
and
or
fdivrl
out
push
and
gs
jecxz
push
push
sub
xchg
pop
or
pusha
insl
das
rolb
sbb
jne
insl
data16
lds
fidivl
lock
fwait
inc
pop
jno
add
or
adc
push
jo
jecxz
pushf
lret
scas
pop
and
sub
adc
divb
mov
ficoms
notb
lds
mov
pop
insb
dec
loopne
jbe
aad
out
movsl
fprem1
scas
adc
rcrb
sbb
ret
jl
arpl
icebp
leave
mov
fistpl
aaa
pop
xchg
mov
lods
xchg
sub
popf
and
jmp
inc
lock
cmp
nop
xlat
loopne
adc
adc
mov
jnp
mov
jge
insl
fidivrl
mov
and
add
test
mov
sub
lock
lea
inc
rorb
or
mov
outsb
push
js
xor
ja
xchg
push
sarl
in
dec
sbb
xor
pop
sbbb
dec
push
mov
sahf
sub
dec
std
adc
mov
mov
lock
sbb
pop
fmul
pusha
iret
pop
dec
mov
dec
xor
fsubrp
lea
sub
adc
dec
and
cwtl
xor
insl
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
and
mov
popa
fld
sbb
cmp
mov
rorb
sbb
and
xor
lcall
mov
fmull
movsl
push
rclb
pop
leave
add
and
inc
cs
imul
mov
fmulp
cmp
scas
negl
test
mov
dec
bound
xchg
repz
lret
mov
jnp
fidivs
sbb
cmp
xor
jo
sbb
aam
mov
xor
fidivrs
fcompp
cmpsb
lds
test
orl
cltd
jl
mov
pop
mov
mov
outsl
add
jg
push
xchg
push
mov
mov
mov
and
jb
ljmp
jnp
mov
int
cmp
push
das
sti
dec
ja
xchg
daa
test
xchg
stos
push
test
jg
fistpll
clc
es
mov
popa
je
cmp
mov
in
out
ret
rolb
adc
mov
pop
lcall
xor
mov
inc
dec
jmp
sbb
mov
jne
or
movsb
mov
pop
sbb
xchg
jae
pop
jl
mov
mov
movsl
roll
push
pushf
insb
fdiv
hlt
sub
mov
ja
adc
pop
mov
xor
mov
xchg
push
fcompl
jne
je
lods
and
sub
and
in
mov
mov
nop
daa
add
inc
adc
cmpsb
or
cmc
or
arpl
movsb
pop
call
roll
out
dec
movsb
stos
mov
inc
mov
sub
push
jnp
out
stc
sarb
hlt
sti
les
lcall
xchg
push
mov
fst
inc
aad
add
xlat
xlat
ret
fcmovnbe
pusha
xor
das
cmpsl
or
arpl
inc
adc
lea
dec
add
mov
int
bound
test
pop
mov
push
xchg
add
rorl
lock
ret
xchg
fyl2x
push
dec
call
push
sbb
mov
jbe
dec
call
cltd
jg
sbb
and
add
and
jmp
xor
frstor
test
fwait
push
sub
imul
mov
or
push
xorl
mov
fnstenv
arpl
test
sbb
outsl
mov
scas
rcrb
fs
movsb
push
xchg
fmul
mov
in
or
sub
mull
and
cli
add
add
pop
pop
movl
aad
jo
mov
and
pusha
ret
sbb
or
fiadds
xchg
sub
sub
xor
inc
lcall
lods
xchg
rcr
and
sbb
gs
test
imul
sub
adc
add
lods
lods
mov
xchg
int
scas
div
sub
jle
mov
jge,pn
push
mov
xchg
insb
inc
call
imulb
test
pop
mov
daa
mov
jns
mov
mov
or
stc
add
add
popf
outsl
dec
lds
xor
push
imul
push
notl
ss
mov
mov
cmc
fdiv
add
in
nop
push
sbbl
in
dec
popa
aas
call
sbbb
mov
enter
addr16
fiadds
pop
sub
cld
cltd
sub
add
jae
test
iret
in
inc
jno
fst
mov
inc
sub
js
mov
pop
dec
bound
stc
jmp
xor
and
jne
xor
mov
push
das
in
sbb
dec
add
dec
insb
push
clc
dec
sahf
clc
jmp
push
stos
pusha
mov
in
cld
pop
xchg
pop
into
push
mov
xchg
sbbl
adc
mul
test
adc
cld
fisubrs
lcall
in
dec
xchg
cmp
cld
and
mov
stos
pop
repz
sub
jns
out
cmc
out
outsb
in
stc
enter
jmp
out
ljmp
pushf
dec
mov
jp
sub
xchg
cmp
adc
cltd
nop
lret
in
aas
jp
mov
movsb
popf
jns
sub
sahf
sub
loope
add
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
and
mov
push
outsl
mov
mov
sbb
pop
insl
adc
or
or
add
mov
xchg
xchg
lds
push
mov
cmpsl
adcl
loope
mov
pop
fisttpl
jbe
and
rcrl
outsb
mov
dec
bound
sub
fsubrs
cmpsl
dec
adc
gs
cmpb
cmpsb
xor
testb
sbb
sub
cld
jp
inc
movsl
les
xor
out
push
and
ljmp
std
adc
jmp
jmp
ss
loopne
jae
dec
push
test
push
xor
dec
lret
std
push
insl
in
inc
sub
popf
xchg
shll
out
pusha
sarb
mov
ficoms
inc
adc
insl
or
call
jnp
ljmp
popa
add
aas
es
cmp
mov
cmp
jmp
inc
out
lcall
xchg
loopne
cmp
mov
pop
rcrb
sbb
stos
shll
and
lcall
aaa
test
sub
fimuls
pop
movsb
mov
dec
in
inc
xchg
or
jp
inc
cwtl
fiadds
sbb
jle
xor
aad
imul
sbb
inc
nop
dec
aas
pop
inc
and
push
fidivs
clc
jmp
sbb
push
mov
stc
ljmp
aam
sub
sbb
adc
adc
cltd
push
sahf
lds
push
sahf
dec
or
pop
lcall
mov
add
fists
push
stos
stos
sub
shr
or
adc
imul
ds
lock
mov
cmp
lods
stos
fisubs
faddl
cmp
mov
jne
cltd
add
pop
nop
cld
pushf
cli
in
or
push
push
xchg
push
or
ror
jo
outsb
cmp
lcall
xchg
cmpsb
out
sub
insl
test
call
adc
pop
pop
shr
sbb
sub
mov
add
out
clc
sbb
fwait
lds
adc
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
push
in
fstpl
mov
mov
insl
jbe
xor
xorl
xor
inc
mov
jg
mov
xor
sar
cs
test
ja
pushl
inc
sbb
sahf
mov
or
push
stc
mov
cmp
in
push
cmp
scas
gs
cmp
xchg
mov
nop
std
push
bound
mov
ret
cmp
es
sub
fnstcw
jo
test
add
fwait
xchg
jo
adcb
pop
pop
jne
jmp
movsl
pop
inc
aaa
fidivl
inc
stc
xchg
xor
mov
popf
sbb
loope
cmp
test
aas
jle
add
pop
adc
out
cmp
and
cmp
decl
std
jns
xchg
sub
rolb
mov
xor
mov
rcrl
ret
and
dec
inc
sarb
insl
rcll
ret
mov
push
int
jp
out
xor
shrl
cs
sahf
sahf
xor
aaa
dec
pop
sub
push
loope
je
sub
lret
xchg
push
ucomiss
jne
movsb
je
mov
jecxz
aam
inc
sbb
pusha
addb
jbe
mov
negl
dec
in
rol
rorl
jae
imul
mov
inc
cwtl
inc
sub
sbb
mov
arpl
aam
in
push
int
inc
push
adc
or
mov
add
xchg
push
pop
stos
cmp
mov
sub
lds
cld
xchg
or
xchg
cmp
mov
sahf
jmp
inc
out
lds
push
dec
repz
in
jbe
add
jl,pn
cli
imul
shr
shrb
loop
pop
xchg
jle
test
xchg
pop
aad
dec
dec
loope
aad
out
andb
inc
aaa
adc
gs
les
push
lock
cltd
mov
push
nop
sub
imul
dec
sub
repnz
test
sbb
mov
push
jl
scas
fwait
push
movsl
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
iret
aam
sarb
mov
dec
jo
add
jecxz
fsts
cmpsb
das
sbb
loopne
lret
pop
sbb
int3
cmp
adc
push
lret
mov
cs
pushf
push
pushf
sahf
ljmp
jle
dec
mov
and
sub
mov
arpl
shlb
xor
loop
ficoms
popa
inc
xchg
push
mov
or
jns
imul
insb
cmpsb
adc
sbb
je
mov
or
or
dec
rolb
jb
jne
lea
vmovdqu
mov
add
adc
lock
or
stos
push
shlb
iret
mov
mov
aad
rcrb
lock
lods
cmp
xlat
pop
xchg
fisttpl
das
mov
push
xchg
push
jmp
xor
push
in
lahf
and
incb
and
call
sti
ret
sbb
dec
jns
jnp
sbb
stos
adc
pop
in
orb
sub
call
das
sbb
mov
call
inc
into
fisubrl
mov
fs
test
and
outsb
push
imul
xchg
dec
jns
icebp
aas
mov
stos
nop
subb
jp
pop
shrl
dec
push
fidivrl
subb
ss
clc
test
fildll
sub
or
jb
je
pushf
adc
fs
cmpsl
insb
out
in
inc
outsb
cmp
xchg
inc
and
shr
adc
mov
out
xor
jae
inc
dec
jg
or
and
jo
pop
insb
pop
sbb
inc
jg
cmp
pop
sbb
lret
movsb
sub
sub
and
xor
inc
jb
data16
in
sbb
mov
jo
lcall
add
outsl
fdivl
xorb
inc
fildl
add
pop
pop
rol
dec
jmp
mov
stos
xor
add
mov
lock
ret
ljmp
sub
sbb
mov
pop
shrl
cmc
cmp
sahf
adc
test
aas
aam
fnstsw
cmp
aam
adc
cld
sahf
lcall
mov
xchg
adc
rcrl
addr16
rclb
sub
add
roll
sti
cmp
loop
mov
lods
and
cld
inc
mov
sub
rcr
sbb
push
stos
mov
insl
leave
repnz
or
pop
jne
lds
ljmp
jno
cmp
mov
jo
into
adc
push
mov
inc
loope
sub
cli
push
push
jg
push
mov
pop
arpl
rcl
mov
cmp
sub
jg
or
ret
int
ljmp
divl
js
jl
mov
cmp
mov
icebp
or
jl
xlat
xor
arpl
sahf
fcmovbe
cmc
lock
cld
pop
fdivs
jae
jge
ss
in
sahf
and
out
mov
mov
test
jne
jle
cli
iret
mov
sar
lea
xchg
sbb
or
hlt
xchg
in
mov
mov
bound
cmc
mov
inc
cs
ljmp
imul
ja
push
fwait
adc
movsl
sarb
xchg
fistl
sub
push
mov
jecxz
jmp
cmp
cmp
adc
ja
xor
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
sub
sarb
aaa
or
loopne
jecxz
out
mov
cmp
movsb
push
pop
pop
cli
jb
push
cmp
imul
cmpsb
stos
inc
push
in
lock
cmp
jb
sub
xchg
inc
popf
cltd
inc
jae
test
call
int3
sub
mov
xor
frstor
gs
ret
push
mov
mov
pop
scas
cmp
lcall
stc
jns
mov
popf
and
or
loop
mov
js
cld
hlt
inc
push
out
sahf
es
sub
and
mov
ja
ret
popf
xchg
mov
inc
loope
fwait
aad
sub
sub
cmp
pop
mov
fadds
je
xchg
stos
popf
sbb
dec
mov
idivl
xor
outsl
loope
lods
mov
lcall
jbe
cmp
xchg
adc
shll
dec
aam
aas
or
jecxz
cmp
std
cltd
cs
in
scas
ss
orb
out
mov
shlb
int3
mov
jge
mov
lds
call
sbb
jle
test
pushf
sarl
in
add
es
fdivl
in
cmp
jns
push
pop
jno
push
mov
dec
sahf
iret
add
ret
or
push
fwait
js
push
cmpsb
outsb
iret
shufps
fmuls
in
ss
inc
scas
loope
adc
sbb
or
out
xlat
mov
cwtl
sbb
nop
xchg
shll
ja
and
cs
js
sub
test
sbbb
lds
int
inc
test
pminub
mov
cltd
xchg
pusha
add
lods
xchg
push
mov
in
push
sub
dec
mov
out
pushf
inc
pop
hlt
bnd
stc
add
fidivrs
jmp
ljmp
push
add
and
fstl
adc
xchg
xor
and
xchg
fistps
adc
or
xchg
out
add
mov
jge
mov
push
or
dec
pop
ljmp
orb
daa
nop
cld
fmull
sub
sti
jo
inc
insl
popf
fistpl
call
ror
push
aad
bound
repz
pop
std
mov
movl
fisttpl
mov
out
or
or
or
movsb
mov
mov
add
aam
faddl
and
push
fisttpl
cmpsl
sbbl
push
scas
push
add
daa
xchg
add
push
cli
in
js
pop
dec
sahf
and
in
insb
insb
andb
adc
sbb
cmp
mov
add
es
clc
mov
loop
cmp
loopne
rcll
cmp
cli
mov
xchg
pop
pop
rcpps
jbe
icebp
push
fsubr
sub
jmp
pop
cmp
lods
jae
repnz
adc
outsl
lret
or
insl
push
scas
and
sub
call
dec
int3
mov
lds
adc
int
sub
mov
and
fwait
repnz
ret
cmpl
inc
dec
cwtl
sub
sti
mov
adc
fldl
or
and
cmp
leave
or
jns
mov
test
dec
and
sbb
jmp
xchg
xor
int
ja
into
mov
mov
dec
ret
sbb
lock
mov
inc
daa
mov
add
popa
dec
repz
aas
nop
pop
fs
arpl
popa
mov
mov
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
lds
dec
les
xchg
outsb
sti
into
negb
mov
mov
insb
icebp
das
shll
mov
and
aaa
jo
mov
test
fbstp
std
inc
das
pop
mov
mov
mov
andl
dec
mov
push
out
pop
mov
mov
fwait
int3
jbe
sahf
mov
xchg
push
cltd
in
stos
cmpsl
out
push
jg
mov
sub
lods
jae
push
rolb
and
daa
pop
mov
mull
or
cmp
fstps
stos
flds
or
mov
cli
jle
insl
mov
iret
loop
cmp
sub
pop
loope
push
popf
fldl
repnz
cld
mov
pop
jne
and
sbb
notrack
ja
inc
jo
push
cltd
out
add
xlat
cmpsl
adc
fs
fdivs
cmp
xor
cltd
scas
xchg
shrb
cld
jecxz
icebp
adc
add
insl
sti
push
xor
repnz
cmpsl
pusha
jnp
sbbb
mov
dec
cli
cmpsb
cmp
out
js
adc
and
adc
cmp
stos
leave
mov
dec
mov
mov
movsl
mov
jns
shll
xor
icebp
xchg
pop
cmp
js
cmpsl
fisubrs
test
shll
test
cmp
mov
jne
mov
mov
adc
mov
movsl
jl
or
mov
in
ja
and
or
lea
cmpsb
je
shrb
lods
cmp
pop
xchg
into
dec
pop
repz
fwait
mov
outsl
pop
xchg
jb
mov
xchg
jmp
inc
dec
xchg
movsb
jb
xor
push
lret
cmpsl
push
das
jns
mov
inc
arpl
subw
dec
inc
cmpsb
push
mov
push
loope
jb
lahf
shrl
movsb
sub
jns
test
jp
aaa
mov
cmp
filds
pop
push
sbb
stos
cmp
mov
je
stos
fldt
xor
sar
das
mov
imul
out
jecxz
jae
sahf
fnsave
or
jge
stos
xor
cmpsl
clc
cmpsb
out
cmp
fistpl
xchg
inc
insb
fwait
dec
inc
sub
in
mov
loopne
fstl
aad
rcll
mov
lock
jecxz
and
pusha
jno
movsl
ljmp
inc
jg
push
and
cmp
or
loope
outsl
gs
daa
cmpsl
repz
mov
cld
shll
cs
jb
push
and
mov
rcll
inc
mov
push
aad
ret
sub
sbb
mov
jbe
addr16
sub
sti
and
sbb
add
hlt
imul
frstor
lcall
fdivr
insl
popa
es
and
cmp
xchg
jne
and
xor
and
pushf
fs
mov
mov
dec
jp
mov
pop
or
movsb
push
cmp
push
sarl
mov
mov
aaa
cltd
rorb
cwtl
int
xor
dec
jae
or
scas
stos
cmp
dec
incb
fwait
packsswb
inc
sub
fneni(8087
bndldx
jne
fs
or
add
loope
pop
or
in
jae
fisttps
outsl
sbb
dec
pop
lds
dec
cmpsl
adc
data16
ja
xor
jp
dec
pop
inc
mov
pop
inc
sbb
sbb
int3
mov
inc
sahf
popf
out
jae
pop
mov
cmp
xor
xor
les
xor
xchg
fmull
pop
pop
dec
mov
pop
in
movl
xor
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
pop
pop
mov
pop
dec
sub
pop
mov
dec
sub
xchg
scas
cmc
jne
cmp
fs
dec
push
mov
pop
push
push
sub
add
fdivrs
cld
sub
dec
popa
insl
adc
sti
adc
pop
cwtl
rcrb
jno
sarl
cmp
lahf
sub
xchg
ret
sahf
lahf
pop
scas
dec
push
out
adc
jo
mov
add
fst
adc
add
test
test
push
iret
imul
hlt
sbb
aad
cwtl
dec
xchg
notl
dec
and
leave
mov
lds
data16
mov
pusha
push
xlat
push
add
lretw
je
loop
insb
fmuls
bound
push
jns
sbb
mov
sub
rorl
jp
xchg
scas
cwtl
push
jns
fisttps
daa
xchg
pop
fs
stc
dec
aaa
adc
or
cmp
fstl
push
inc
mov
fisubrl
jo
cwtl
inc
or
sbb
xor
addl
int3
mov
js
or
fdivp
rorb
xchg
jno
adcl
iret
pusha
dec
scas
fisubl
addr16
pop
daa
jo
pop
sub
mov
inc
je
sti
rcll
cmc
mov
cmc
cmp
fiaddl
xor
aad
fs
sub
sub
lea
mov
xchg
xchg
and
mov
les
loopne
mov
hlt
dec
cmp
addl
stc
push
or
pop
mov
inc
cli
addr16
test
jnp
pushf
lcall
xchg
push
cli
mov
sub
mov
dec
es
push
xchg
xchg
cltd
adc
addr16
lcall
adc
cwtl
cmp
jle
out
xchg
mov
nop
sbb
in
in
aas
push
div
repnz
loop
fdivs
pop
add
inc
pop
mov
jle
push
insl
in
or
imul
popf
js
stc
cmp
inc
cmp
mov
in
shrb
lods
outsb
mov
sbb
push
call
sub
inc
xchg
pop
push
es
mov
dec
jp
cld
aad
lea
pop
xchg
lea
jge
repz
lds
push
int3
xchg
xchg
push
sub
sarl
cmp
enter
xor
or
or
cmpl
inc
mov
sarb
xchg
fsubr
xchg
xor
daa
inc
dec
mov
mov
sbb
jmp
insb
mov
xor
and
cmpl
jo
dec
add
and
pop
or
aad
sbb
mov
jb
jae
fldl
jge
out
cmc
mov
xchg
add
jbe
adc
mov
lock
sbb
jl
xchg
xorb
pop
push
rorl
jmp
shll
inc
pushf
jge
push
sub
sti
js
cli
test
push
in
sbb
or
inc
loope
imulb
testb
pusha
xchg
dec
and
insb
pop
dec
add
rorb
add
rcl
xchg
rorl
lret
imul
fisubrs
xor
jge
mov
xchg
add
jge
jp
icebp
fwait
imul
mov
lret
jb
mov
xor
jb
das
dec
popf
mov
outsl
cmp
outsb
iret
iret
mov
ret
hlt
ja
popf
jb
mov
js
out
and
xchg
sub
ljmp
roll
push
aas
lcall
push
icebp
sub
pushl
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
cld
movsl
movsb
nop
add
mov
pusha
push
push
ret
mov
insb
inc
push
int
insl
sub
cmp
int
pop
push
sbb
push
dec
lret
hlt
insb
pop
push
lods
mov
jns
pop
jnp
test
out
push
mov
xchg
lds
push
ds
mov
pop
xor
xor
fnstenv
filds
out
insb
adc
lods
dec
jbe
imul
in
or
adc
mov
xorl
imul
dec
xor
mov
xlat
and
adc
jb
faddl
fs
lods
scas
add
mov
mov
cld
ss
push
mov
das
xor
xchg
adc
mov
sub
adcl
mul
mov
mov
pop
lret
rol
lods
dec
enter
jp
mov
xchg
adc
sub
in
mov
ja
scas
inc
jnp
cs
pop
inc
incb
mov
js
fsubl
sti
mov
filds
adc
ss
dec
clc
lea
outsb
xor
or
mov
ficompl
test
and
xlat
push
mov
inc
push
movsl
leave
arpl
xorl
in
xchg
jne
call
or
js
movsl
lahf
push
pop
fs
sti
dec
add
outsb
fcomp
xchg
mov
jecxz
jbe
mov
popa
xor
xchg
pop
addr16
cmp
and
and
fcomip
fs
incb
and
mov
fldl
imul
jp
imul
mov
push
xchg
lcall
gs
scas
xor
inc
sbb
cwtl
mov
out
dec
fwait
push
dec
rcrb
pop
insl
mov
inc
fisubs
lret
mov
xor
sbb
adc
cmc
and
hlt
cmp
clc
push
pop
mov
inc
lods
iret
adc
sahf
jg
sbb
inc
push
sbb
pop
mov
fistps
lock
jns
sbb
add
fdivp
xor
push
das
ret
aaa
pop
fs
aas
in
js
ljmp
add
fisubrs
cmp
add
add
sbb
in
sub
and
test
arpl
sub
pop
cmc
in
push
sub
sub
pop
loopne
cmp
cli
xor
mov
inc
mov
fsubl
sbb
xchg
popa
mov
adc
in
ss
aam
sysret
punpckldq
or
pop
clc
movsl
jbe
mov
inc
sbb
into
cli
push
add
cmc
dec
es
mov
sub
mov
jmp
arpl
cmp
scas
ret
push
sbb
test
mov
and
adc
cmpsb
dec
lds
aaa
push
test
sub
push
mov
sbb
in
mov
hlt
lahf
scas
or
shlb
jno
push
and
sbb
mov
imulb
mov
test
das
mov
mov
insl
or
lock
loop
popl
mov
mov
test
and
pop
cmp
dec
add
sbb
cmp
pop
add
cs
or
mov
xchg
lds
sbb
inc
mov
add
jge
xchg
and
push
cmp
sar
pop
into
cmovs
adc
push
das
adc
lods
out
adc
cmp
pmaxsw
ljmp
jp
dec
in
push
adc
and
jno
fbstp
mov
lret
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
in
fldenv
sahf
nop
pop
sarb
or
mov
push
or
adc
mov
and
sarl
mov
out
lahf
push
in
clc
out
stc
mov
pusha
inc
cmp
sbb
xchg
or
sbb
into
or
cli
add
out
iret
mov
nop
mov
mov
test
sbb
leave
ja
inc
add
mov
jbe
cmp
xor
movsb
fcom
lods
and
cwtl
push
push
shlb
xor
dec
xor
dec
arpl
ror
stc
adc
movsl
cmc
aam
jg
lock
sbb
dec
mov
or
mov
iret
scas
mov
fidivl
adc
lds
jnp
js
mov
lahf
cmp
sarl
xchg
sbb
sub
ss
in
and
fisttpll
cli
jo
xchg
into
inc
jne
fsub
add
and
ficoml
sbb
mov
rcrl
mov
push
fdivrl
dec
mov
stos
rol
sbbb
cmp
xchg
js
or
mov
mov
and
push
xor
shl
cmp
push
xor
dec
jmp
and
pop
stos
or
jbe
dec
fistpl
shrb
push
jno
jge
jne
push
sub
lods
jne
sbb
xor
ret
out
mov
rcrb
mov
loope
xlat
mov
mov
or
scas
adc
or
es
push
sahf
add
leave
and
xchg
pop
popf
add
repnz
call
lds
jmp
mov
insl
popf
jl
or
sub
adcl
popa
adc
and
pop
aaa
mov
xorb
fildl
inc
arpl
inc
mov
adc
pop
imul
xor
jae
cmp
pop
stc
mov
test
cmc
cmpsl
pushf
and
xor
add
add
mov
pop
dec
mov
cmpsb
outsl
xor
jo
scas
in
pop
xorb
dec
sbb
jne
jns
inc
inc
push
adc
fstps
mov
movsb
xor
inc
clc
add
fbld
add
outsb
sahf
fwait
jmp
push
dec
xchg
cli
js
lret
pop
push
mov
or
mov
fnstenv
rolb
mov
das
scas
arpl
lret
xlat
call
xchg
cmp
push
aaa
out
pop
push
mov
push
addl
out
in
xlat
stos
sbbb
push
pusha
push
cmp
sbb
outsb
hlt
ja
cmp
shl
cld
cmpsl
lods
out
add
aad
add
inc
leave
or
mov
cli
pop
sub
push
pop
dec
mov
js
stc
and
jp
xor
inc
cltd
loope
mov
lods
mov
mov
out
js
jnp
mov
jg
stos
fisttpl
push
inc
push
repnz
jecxz
je
inc
push
pop
scas
aas
shl
sbb
add
mov
fidivl
std
jne
mov
stc
cmp
jge
adc
jo
mov
xlat
rcr
movsb
xchg
mov
jo
fistps
and
cmpsl
and
dec
xor
mov
pop
jmp
jl
mov
gs
nop
xor
test
xchg
shlb
ja
adc
cmp
pop
testb
fcoml
xchg
jnp
lock
dec
add
mov
outsl
sar
cmpsb
sarb
cli
mov
out
in
lret
arpl
cmp
xchg
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
cli
push
sarb
push
cwtl
rol
in
and
cmpsb
cmpsl
jg
aas
inc
loope
and
mov
out
xchg
xchg
ss
sbbl
jecxz
sbb
mov
mov
stc
pop
jns
ss
xchg
stos
lret
sub
test
int
mov
lds
mov
daa
jae
cmp
test
dec
sub
jl
sub
dec
sarl
xchg
dec
popaw
and
and
xor
mov
inc
adc
xchg
stos
cwtl
and
cmp
inc
sbb
sub
rorl
dec
icebp
xchg
push
mov
cmp
movsl
insl
inc
cmp
mov
ret
inc
add
stos
and
xor
in
shlb
mov
mov
pop
and
ja
add
insl
cltd
xlat
or
cld
lods
insb
addl
into
dec
add
popf
mov
pop
xchg
pop
add
inc
ret
sbb
hlt
adc
pop
push
mov
popl
cs
mov
lahf
movsb
fwait
jno
jbe
jle
xchg
shrb
mov
push
jns
hlt
inc
xor
loop
xchg
push
jbe
addb
pushf
mov
add
sub
xor
mov
push
mov
mov
mov
jp
out
mov
xchg
mov
cmp
ja
std
adc
insl
test
cs
in
stos
out
inc
repnz
xchg
arpl
adc
roll
push
mov
cli
pop
fistl
pop
or
jae
mov
data16
mov
xor
mov
sbb
jge
add
adc
test
fstps
cld
jmp
pop
fnsave
inc
dec
xor
pop
pop
adc
mov
pop
into
mov
lcall
psubw
sti
movsb
sbb
mov
cmp
dec
cs
mov
or
repz
jbe
dec
pop
popf
cwtl
icebp
xor
enter
out
mov
nop
sub
xchg
ret
daa
loopne
xor
mov
lock
ffree
incb
jo
and
rcr
mov
into
dec
dec
enter
jns
mov
mov
adc
int
adc
insb
jne
dec
scas
push
push
mov
push
aad
adc
mov
dec
mov
dec
sbbl
inc
fcoms
subl
xchg
mov
inc
cmp
xchg
dec
mov
test
xchg
adc
mov
insb
pop
mov
imul
rorl
outsl
sbb
add
mul
or
lods
std
lret
icebp
inc
sub
jns
scas
cmp
jnp
nop
xchg
cli
jne
repz
mov
xor
xchg
xchg
mov
pop
dec
and
mov
sarb
push
lods
insl
mov
cmp
repz
mov
ja
mov
mov
sarl
test
ja
jl
hlt
jae
add
hlt
mov
xor
cmp
cs
or
shrb
cmp
jg
push
push
sarl
sub
add
lods
jmp
nop
inc
imul
pop
xchg
mov
jbe
inc
lods
aad
dec
or
inc
push
shll
jne
add
call
mov
out
mov
aas
cmpb
sub
mov
ss
das
cld
adc
in
fcompl
sbb
test
jno
decl
cmp
jmp
mov
xor
mov
mov
nop
xlat
xor
nop
cmpsl
outsl
sarb
scas
push
les
xchg
ret
adc
das
mov
movsl
sub
push
sbb
dec
jne
inc
out
or
inc
jmp
std
into
xor
loopne
or
jmp
push
les
stc
mov
push
jns
ja
pushf
push
xchg
arpl
test
fisubl
jae
fisubl
mov
mov
or
add
mov
jge
jne
mov
icebp
xor
xor
stos
push
cli
cmp
mov
subl
sub
add
imull
in
xchg
sbb
cmp
push
dec
lret
in
les
lock
dec
mov
roll
popf
sub
dec
idivl
mov
and
test
sub
xchg
sbb
adc
pop
jo
or
lods
push
pop
jl
inc
into
dec
pop
js
xchg
mov
add
data16
test
sub
outsb
adc
rcr
sub
mov
jmp
and
cmp
xchg
mov
testb
sahf
sub
jbe
pop
pop
xor
dec
enter
fs
pop
mov
rorb
jmp
lret
xor
lds
cmp
ds
push
xchg
sbb
jne
push
leave
adc
in
loopne
adc
and
jl
fs
mov
into
mov
insb
daa
mov
lock
adc
adc
add
mov
lahf
and
cmp
lret
xchg
lret
dec
dec
jbe
bound
add
mov
cmp
cmp
gs
mov
lret
xchg
gs
dec
pop
lea
xor
xor
ret
imul
repz
fsubl
jb
dec
aas
adc
in
adc
addr16
cmpsb
xchg
out
test
cltd
popf
loope
incb
xchg
mov
js
aas
inc
fisubrs
insb
imul
je
cs
jno
mov
shll
lods
or
pop
lods
push
popf
inc
dec
mov
movsl
add
je
pop
mov
sub
sbb
and
pop
fwait
or
pusha
test
into
adc
add
ss
decl
sbb
bound
adc
push
mov
xchg
add
pop
pop
int3
and
addl
ret
mov
adc
xchg
xchg
push
pushf
jmp
push
mov
pop
in
repnz
dec
sub
sbb
xorl
pop
subb
sub
lcall
popf
pop
mov
sarb
xchg
pop
in
push
insb
mov
push
inc
nop
call
mov
xor
add
popf
cmp
pop
mov
or
and
ret
jb
inc
sbb
pushf
test
enter
adc
xchg
lret
fwait
je
inc
sahf
sbbb
dec
imul
push
add
mov
mov
jno
je
cmc
in
jbe
insb
lock
push
lods
sbb
out
insb
push
add
xchg
fldcw
rcrl
sbb
push
cmp
and
jl
mov
das
movsl
subl
sub
xchg
out
or
pop
push
add
and
pop
and
mov
mov
mov
or
jmp
cmpsl
cmp
cltd
ficoml
cli
lock
sbbb
addps
push
sub
shl
shl
xchg
je
mov
jmp
cld
sbb
mov
sahf
lock
jp
xor
mov
push
cmpb
adc
push
mov
mov
std
cld
mov
push
mov
xchg
movsb
cmc
lods
pop
comiss
xor
mov
das
mov
push
jbe
push
inc
mov
rdpmc
cmpsl
rclb
sbb
add
pop
mov
sbb
das
cmp
add
cmp
ds
cld
xchg
mov
mov
int3
dec
and
out
push
insb
into
mov
jg
sbb
jo
rcr
std
testl
std
in
adc
ja
movsl
inc
test
and
fwait
lock
jecxz
add
bound
cs
mov
pop
movsb
ljmp
xchg
inc
sahf
push
mov
sbb
and
cwtl
in
push
popf
loopew
stc
push
and
fmull
add
repnz
sbb
mov
ror
and
xor
shlb
jbe
fisubs
dec
loop
jno
in
je
sbb
out
xchg
pop
icebp
test
dec
das
lock
xchg
sub
shlb
fcoml
jle
call
outsb
pop
daa
and
lods
sub
stc
jae
dec
push
push
ljmp
or
sbb
fdivs
shrb
or
cwtl
mov
xor
out
cli
leave
jge
pushf
push
dec
ficomps
xchg
and
jecxz
sar
sub
lahf
add
jmp
movsb
in
xor
dec
stc
cmp
adc
fwait
and
xchg
cli
fwait
cmp
fwait
int3
das
pop
std
lock
loopne
insb
pop
jb
and
popa
aaa
sub
cltd
loope
mov
adc
fsubrl
or
out
in
cmp
and
out
pop
inc
loope
mov
aam
xchg
ficompl
out
adc
popa
jg
dec
mov
popl
push
cmp
push
mov
and
dec
xor
cmp
adc
pop
sub
pop
jo
xor
sub
pop
fldenv
pusha
fsubr
in
iret
lcall
fs
repnz
cld
mov
mov
ret
loop
data16
inc
lds
mov
jl
ljmp
jo
or
adc
or
mov
aad
adc
loop
inc
pop
outsb
mov
push
lret
push
or
shl
subl
idivb
cltd
sub
out
xor
jnp
js
repz
or
scas
adc
dec
xchg
adc
sbb
dec
inc
mov
js
in
push
and
ret
ret
pusha
aas
adc
sub
sbb
pop
pop
iret
dec
movsb
push
aad
jg
pop
stc
mov
fmull
dec
push
pushf
aad
lods
sbb
and
sub
arpl
jo
xor
add
lods
mov
movsb
aam
sbb
cmc
lock
out
orl
mov
xor
sbb
out
pop
ret
dec
mov
ss
sub
lock
mov
and
jns
add
jo
mov
in
movsb
mov
int
popf
mov
adc
add
inc
ds
in
test
mov
and
aas
cmp
loop
faddl
lret
scas
adc
decl
jmp
sbb
sbb
popf
aaa
cmp
xor
arpl
add
pop
cmpsb
mov
pop
andl
push
sbb
popa
aam
cmp
aam
icebp
and
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
stos
mov
sarb
dec
les
fsubl
out
fcoml
xor
loopne
xor
pop
inc
popf
mov
test
sbb
sub
adc
inc
sbb
or
lock
push
ret
in
jno
inc
xchg
cmp
mov
lret
pop
mov
fdivs
test
cmp
cmpsl
mov
in
insb
cltd
je
sbb
mov
movb
cmp
sbb
xchg
cs
mov
testb
pushf
mov
dec
jge
jge
dec
pop
or
je
dec
int3
sub
insb
xchg
push
jmp
adc
mov
fdivrl
mov
xor
jnp
mov
les
mov
push
divl
jbe
sbb
popf
sub
aad
enter
push
fsubs
loope
xor
aaa
sbb
repz
push
dec
fstl
aam
lods
test
int3
clc
sub
cld
popa
addr16
adc
and
sbbl
mov
ror
sub
frstor
pusha
jg
test
cmp
rsqrtps
call
popa
in
popa
inc
push
pop
dec
jmp
xchg
stc
ret
inc
and
add
jmp
push
repnz
xchg
lcall
mov
subb
jmp
into
xor
push
outsb
out
sarb
pop
jmp
jle
inc
lea
bound
sti
sbb
aaa
jge
or
rcrb
xchg
icebp
decb
scas
dec
scas
loope
add
push
sbb
jp
lds
test
es
mov
xchg
loope
dec
and
pop
sbb
or
add
mov
and
loope
push
inc
push
dec
and
mov
bound
cmp
cmp
pop
cmp
leave
mov
sub
mov
fnstsw
mov
dec
rorl
icebp
rol
pop
cs
inc
rcrl
into
inc
fisubl
sbb
mov
xchg
cs
mov
cmp
insl
or
inc
sbb
aad
inc
jle
popa
mov
lret
movsb
sub
lds
adc
mov
pop
jb
lock
inc
dec
lcall
pop
sbb
inc
pop
int
cmp
or
inc
cmp
popa
inc
je
and
dec
sahf
xchg
adc
repz
sti
call
mov
inc
int
push
xchg
inc
fmull
mov
jae,pt
lea
aas
addl
sub
and
jbe
ret
mov
outsl
imul
sub
nop
dec
add
stos
jne
pusha
mov
negl
cmp
cld
sub
mov
mov
sar
movsl
mov
xor
mov
mov
mov
mov
mov
aas
jg
aam
xorb
adc
cmp
mov
jns
mov
and
sbbl
cmp
divl
sarl
stos
inc
ret
sub
shlb
lahf
and
adc
pushf
inc
add
int3
pushf
pop
ror
test
loop
push
mov
and
cltd
pop
cmp
mov
mov
mov
add
sar
jo
bound
fwait
and
icebp
mov
jge
sub
add
movsb
xorl
push
aas
int
loopne
addr16
push
jle
lahf
dec
dec
xchg
popa
pop
fnstsw
icebp
inc
lods
or
cwtl
push
hlt
mov
stos
push
mov
test
mov
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
jp
cld
movsb
dec
test
mov
push
sbb
shrl
in
add
pushf
out
addb
cs
shll
inc
aad
call
jns
shrb
repz
mov
popf
loope
pop
lret
and
or
dec
push
loop
or
lea
cmp
xchg
movsl
fnstsw
sbb
bound
add
add
je
add
xchg
popf
mov
popa
stos
and
inc
mov
jns
xchg
jb
mov
cmc
jl
xchg
mov
test
ja
mov
movsb
push
stos
aaa
or
push
idivb
call
int
push
mov
jecxz
mov
lret
std
push
mov
and
test
out
sahf
add
add
xchg
es
into
es
cmpsb
mov
mov
lock
sarb
iret
inc
xor
lahf
dec
sti
xchg
ret
adc
or
mov
push
in
sbb
mov
inc
loope
jle
call
loopne
cwtl
push
cmp
insb
lock
arpl
mov
aas
add
hlt
out
mov
push
mov
push
push
push
push
inc
icebp
jnp
mov
lahf
fwait
out
and
cmpb
pushf
rcr
loope
inc
imul
out
aam
out
xchg
dec
pop
lahf
imul
adc
sbb
jb
add
invd
inc
jb
xor
jns
and
das
xor
xchg
sbb
int3
movsb
cmc
cmp
mov
xlat
xor
cmp
push
pop
mov
adc
sbb
mov
add
rcll
xor
dec
popf
stos
pop
or
push
repz
in
sub
aaa
shl
mov
subl
sbb
loope
lods
outsl
out
dec
inc
fwait
movsl
cmp
int
pop
jno
insb
fcoml
pusha
fucomp
add
push
jmp
and
fisubrs
lret
mov
xchg
add
xor
mov
push
popf
aam
in
xor
pop
add
mov
xchg
pop
xchg
xor
rcll
cmp
jg
or
out
sbb
clc
aas
loop
fldcw
or
jo
test
rol
sub
or
iret
in
xchg
frstor
sub
pop
mov
mov
orb
lods
sbb
icebp
cmc
aaa
mov
out
and
push
rorl
pop
sbb
jl
mov
jbe
std
dec
mov
jnp
add
cli
xchg
pop
and
out
pop
add
xchg
pop
ds
xchg
mov
jne
jmp
or
fisttpl
fadds
jg
or
xchg
fmull
scas
mov
aaa
into
inc
jbe
mov
and
pop
outsl
testb
stc
loop
scas
jg
stos
xlat
fnstenv
xor
adc
add
lds
das
mov
out
or
sbb
popa
jns
lea
mov
cwtl
sub
inc
or
out
mov
or
repz
mov
outsl
fstps
add
pop
inc
mov
pop
xchg
jg
call
dec
or
cmpsb
js
adc
sub
ds
or
add
sbb
pushl
sbb
in
scas
popf
and
aam
or
psrlw
jmp
adc
sti
xchg
in
scas
and
xor
mov
mov
dec
or
mul
add
lret
jb
or
push
loopne
lret
hlt
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
sbb
sarb
jae
shrl
mov
into
ljmp
mov
mov
int
sub
out
jo
jl
xlat
xor
and
jle
ret
pop
stos
xchg
mov
pop
fwait
cmp
repnz
lods
leave
imul
cmp
cltd
scas
mov
notl
shlb
cmpsl
enter
insl
push
sub
cmp
xor
xor
push
pop
xchg
rorl
enter
xchg
outsb
xor
adc
inc
test
mov
out
lea
frstor
jle
pop
jmp
or
push
jmp
insl
pop
and
dec
and
xchg
sbb
inc
push
hlt
sbb
jecxz
fdivrl
out
cli
ja
nop
jmp
or
xchg
jle
xchg
lcall
imul
or
ret
pop
pop
cmp
lods
scas
jmp
das
loop
aam
insl
sbb
std
add
adcl
pop
cli
mov
inc
out
mov
ror
mov
cmc
adc
outsl
fsubr
cld
push
xchg
jo
add
jmp
pusha
lret
test
adcb
ret
sti
dec
jbe
aad
movsb
mov
dec
pop
inc
mov
scas
adc
adc
inc
stos
sub
inc
mov
and
cmp
inc
ret
xor
pusha
int
fisubrs
movsb
ficomps
pop
cmp
stos
ljmp
mov
cmp
nop
push
js
ret
xchg
mov
mov
fdivrl
or
inc
and
mov
outsl
jne
subb
cmp
pop
sub
das
movsl
inc
fidivs
cld
test
shlb
leave
fiadds
jnp
push
add
sub
inc
pop
ret
mov
cmp
sbb
sbb
mov
scas
push
pop
push
jmp
loop
jp
jp
pop
lock
jb
stos
adc
jg
mov
mov
sub
sbb
cmpsl
jp
ret
mov
lret
out
mov
cmp
jo
jmp
test
adc
xor
ficompl
loopne
xchg
mov
fdivl
or
sub
stc
mov
lret
jmp
enter
xchg
push
nop
out
xor
push
sub
xor
clc
roll
orl
xor
jns
jo
mov
or
dec
or
push
xchg
call
xchg
out
push
aam
int3
pop
and
cld
push
cwtl
fsubr
fst
mov
jmp
out
jbe
aad
mov
test
push
jmp
pop
pop
cmpsb
insl
inc
clc
jg
popa
insb
jae
xchg
xor
cwtl
pop
xlat
or
insb
ja
js
and
sti
mov
adc
or
sbb
jg
scas
add
iret
and
in
or
inc
mov
scas
in
pop
mov
jg
inc
hlt
add
jle
and
aaa
inc
ja
push
out
stos
mov
sub
sub
fistpll
jne
xchg
cwtl
or
xchg
sub
hlt
sbb
dec
outsl
mov
lret
xchg
mov
lods
negb
mov
ds
hlt
adc
ljmp
fcompl
pop
sub
fcoms
dec
pop
loope
mov
pop
jae
mov
pop
lahf
mov
js
jnp
std
sbbb
enter
imul
notb
sarl
or
jne
add
fsubl
dec
push
adc
stos
xchg
adc
in
adc
repnz
stos
xor
mov
inc
mov
shrb
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
mov
xchg
sarb
stos
jecxz
pusha
pop
outsb
fimull
push
inc
lret
mov
pusha
cs
dec
mov
ret
mov
divb
shlb
jb
sub
scas
icebp
cmp
shrb
mov
pop
adc
pusha
xor
out
in
ret
jae
in
xchg
xor
sub
adc
sbb
xor
insb
and
jg
out
and
out
or
xchg
jo
cmp
std
inc
and
ljmp
pop
fs
call
push
dec
mov
mov
jg
lret
movsb
adc
aaa
push
xor
dec
add
bound
add
stc
not
or
daa
divl
insl
inc
mov
xor
ret
je
sub
fldl2e
fdivrs
int
push
or
in
add
loop
add
fsubrs
dec
lret
shrb
les
push
xor
aad
sbb
lret
and
cmpsb
ljmp
addl
cwtl
je
lret
in
mov
xchg
add
aas
inc
jg
and
in
scas
inc
lret
sub
xchg
sub
repz
jge
adc
in
xor
jo
mov
and
or
inc
xchg
or
xchg
dec
sub
or
mov
cltd
xchg
decb
std
pop
jns
dec
shlb
aas
jae
imul
dec
jmp
xor
xchg
pop
dec
mov
mov
loope
outsl
push
nop
insl
jl
jecxz
pop
aas
xchg
loope
les
imull
mov
mov
mov
mov
inc
stos
pop
popa
pushf
pop
int
lods
push
fists
mov
pop
lea
adc
add
add
shlb
jmp
inc
adcl
pop
js
daa
xorl
jbe
lcall
js
pop
insb
out
aaa
lahf
and
jbe
daa
sti
adc
imul
or
dec
sub
popf
xor
inc
test
bound
cmpsb
repnz
stc
cmp
ret
mov
mov
aad
loope
jb
mov
inc
xchg
jns
notl
lods
stos
dec
add
cli
mov
daa
mov
nop
sub
enter
xlat
mov
jge
fs
pop
jb
iret
movsb
push
pop
mov
mov
push
test
insb
movsl
lock
ds
in
imul
fadds
fdiv
je
adc
in
dec
sbb
pop
sbb
push
insb
dec
scas
out
adc
add
xlat
sub
sub
mov
sub
and
sub
inc
and
into
sti
pusha
loope
int3
inc
push
sub
add
inc
aad
mov
xchg
and
push
push
lcallw
js
mov
xor
cs
stos
insl
jns
sbb
sub
pop
xchg
dec
pop
jmp
mov
jb
sub
stos
sub
mov
shrb
pop
fbstp
imul
ret
cmp
dec
imul
sub
mov
mov
lods
and
shrb
stc
mov
movsl
cmp
jecxz
cwtl
and
pop
leave
sub
jle
cli
adc
sarl
in
aam
inc
mov
sbb
cmp
dec
and
mov
or
inc
jmp
and
clc
shrb
test
inc
inc
xorb
ja
push
inc
push
add
outsb
add
nop
lahf
add
aaa
adc
jns
xor
cmc
jae
xor
les
cmpsl
xor
in
mov
dec
or
lods
loopne
lea
incl
add
add
add
add
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
popa
cmpsl
test
out
popf
sarb
push
rol
lods
popf
mov
and
call
std
cs
fsubs
dec
mov
int3
std
negl
pop
xor
sbb
int3
mov
dec
xlat
outsl
fwait
int3
test
leave
repz
repnz
xor
push
out
rorb
mov
ret
dec
loope
insb
jnp
fdivl
and
aas
lahf
ljmp
sbb
frstor
lds
arpl
mov
or
test
dec
loope
cmc
add
dec
or
loope
pusha
mov
cmpsl
test
jo
addl
push
ss
or
lahf
mov
ss
jle
xlat
xchg
xor
fs
daa
jmp
test
xor
and
rcrb
mov
xchg
pop
sbb
jle
jmp
cltd
adc
aas
mov
jmp
adcl
and
sbb
add
jne
and
push
or
push
inc
out
mov
es
std
mov
pop
and
add
out
cld
ss
popa
pusha
inc
repz
out
xchg
jg
and
cmp
jecxz
mov
sbb
jne
ror
xor
hlt
fwait
push
stc
inc
cmp
aam
stc
push
jb
push
or
movsb
inc
dec
les
adc
xchg
pop
sbb
push
out
mov
ret
dec
cmp
and
lock
inc
pop
and
jo
fnstcw
mov
mov
sub
icebp
jne
push
mov
add
mov
xchg
xchg
push
ret
push
adc
mov
inc
xor
cmp
ss
jmp
push
aaa
adc
test
xor
nop
or
daa
push
movsb
mov
out
popa
shlb
add
fcmovnb
jne
imul
int
lret
fs
cs
aam
push
mov
push
push
daa
mov
mov
out
mov
dec
push
fdivrs
pop
clc
lcall
imul
mov
jae
xchg
pop
addl
iret
mov
repz
sarb
adc
sbb
lret
push
push
in
mov
aam
jge
or
mov
mov
jae
sahf
xchg
aaa
mov
mov
inc
insb
jp
or
fisttps
cmpsl
inc
cs
xchg
sub
mov
outsl
adc
je
int3
rorl
pop
and
sbb
jp
mov
push
aad
or
testb
adcb
inc
mulb
int3
pop
les
sbb
fdivl
ljmp
or
mov
scas
test
sbb
push
daa
xchg
push
sub
mov
in
mov
push
scas
leave
mov
negl
xor
loope
in
fistl
in
jl
add
scas
inc
mov
shl
or
or
scas
mov
int
int
mov
sbb
pusha
mov
test
mov
adc
and
mov
leave
adc
jne
daa
fildl
xorb
xor
ljmp
mov
or
hlt
jl
popf
pop
ss
mov
fstl
mov
and
or
pop
jo
mov
outsb
mov
incb
outsl
pop
sbb
lea
loopne
push
inc
sbb
mov
jns
mov
xchg
cmp
orl
jge,pn
push
jo
mov
out
adc
pop
imul
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
hlt
int3
stos
jecxz
mov
mov
xchg
add
lods
sub
ret
aam
pop
hlt
js
xchg
xlat
mov
cmpb
lds
adc
jmp
repz
leave
sub
arpl
and
push
mov
loop
xchg
xchg
lret
dec
adc
xor
popf
icebp
jbe
ljmp
mov
repnz
scas
dec
jno
lds
imul
mov
adc
cmc
pop
sub
dec
jno
in
mov
xlat
fcomps
daa
lea
imul
mov
mov
and
js
push
pop
push
xchg
int3
pushf
rclb
sub
aaa
mov
xchg
add
into
push
scas
mov
jecxz,pn
mov
jns
out
stos
sub
ds
sbb
push
rclb
pop
adc
inc
push
and
adc
or
fwait
enter
mov
fmul
adc
stos
xchg
jl
cli
daa
dec
xor
ficoms
mov
dec
xlat
pop
aas
call
imul
mov
push
gs
push
lret
mov
mov
jl
mov
pushf
pop
es
enter
out
xchg
dec
test
dec
jnp
addr16
mov
dec
pop
into
jmp
push
mov
insb
xchg
hlt
cltd
cmpsb
repnz
or
loope
xchg
pusha
leave
test
insl
adc
sbb
or
and
mov
pop
xchg
push
aas
mov
sbb
sbb
fsubrl
outsl
pop
mov
stc
xchg
pop
jne
pop
mov
movsb
mov
jl
cmpsl
push
dec
lea
iret
xchg
cltd
mov
adc
ljmp
jge
push
js
mov
imul
les
push
mov
xor
mov
mov
pop
add
jle
add
or
outsl
jmp
mov
cmp
xchg
sbb
ret
cmp
out
xor
mov
scas
test
ljmp
push
cmp
je
add
xor
inc
popf
mov
rcrb
outsb
or
and
push
enter
and
insb
pop
sbb
aam
cmp
dec
push
mov
lret
clc
notb
loop
ret
mov
adc
fwait
gs
mov
out
loope
pop
jbe
inc
xchg
xlat
hlt
cmp
jmp
rcll
sbb
sub
int3
xchg
imul
mov
loopne
ljmp
fistpll
cli
push
xor
push
pop
pop
sti
popa
dec
cld
cltd
lcall
sbb
mov
pushf
loope
and
push
mov
xchg
je
push
iret
cwtl
jmp
xchg
pop
mov
shlb
lahf
mov
sub
pop
dec
xchg
inc
out
jmp
mov
stos
cltd
lret
adc
inc
cwtl
loop
fnsave
aas
cmpsl
dec
cmc
sahf
add
xor
in
incl
pop
mov
jne
mov
sbb
lock
cmpsl
xchg
arpl
and
pusha
push
arpl
rorl
cmpsl
andb
xor
cwtl
dec
cltd
loopne
fcoms
loop
ja
aam
cld
mov
cmc
mov
add
fcmovbe
mov
sub
cli
lahf
push
ds
dec
mov
cmpsl
out
sarl
clc
mov
ss
mulb
mov
out
and
addl
in
cld
push
mov
jae
or
jne
test
push
rcr
loop
add
imul
lret
jae
pop
sub
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
andps
or
inc
pop
dec
push
push
cmpsl
stc
mov
es
lock
in
dec
nop
scas
lods
cmp
push
pop
xlat
pop
dec
sahf
jno
std
lea
bound
divl
loop
pop
and
mov
xchg
jp
mov
inc
jbe
mov
or
out
outsl
mov
das
push
push
inc
shrl
pop
ss
sbb
outsl
ds
in
xor
inc
push
stos
adc
xlat
pop
bts
xlat
cmp
sbb
ja
ret
scas
xchg
ljmp
cmp
jmp
mov
ffree
stos
mov
or
lods
xchg
rcll
pop
ljmp
ret
fsts
in
js
ds
xchg
mov
inc
xor
pop
jg
aam
cmpb
adc
and
scas
clc
ljmp
rcrb
xchg
pop
fucomip
mov
xchg
add
or
negl
cltd
stos
lret
jo
push
jecxz
rorl
mov
jecxz
xchg
add
cmp
mov
push
loopne
fldenv
adc
xor
pop
rolb
arpl
mov
mov
ljmp
rcrb
pop
shr
push
mov
or
xor
fnsave
cmpsb
dec
xor
mov
sarb
inc
xchg
lahf
sub
addr16
and
lock
or
dec
mov
stos
mov
jae,pt
mov
jbe
es
and
clc
mov
sbb
cmc
pop
pop
repz
xor
pop
fsubl
xchg
subb
sbb
inc
fstl
mov
mov
jae
hlt
rorb
add
enter
lods
dec
jmp
xor
dec
mov
mov
ret
test
test
orb
stc
lods
xchg
lahf
xor
popa
cmpl
aam
pushf
repz
cmp
scas
into
push
outsl
std
pop
movsb
dec
xor
mov
mov
dec
or
inc
pop
nop
fwait
inc
mov
jae
sbb
push
xor
imul
loopne
push
mov
idivb
inc
stos
sub
scas
filds
add
mov
mov
and
cli
arpl
fldt
push
xlat
sbb
cmpb
cmpsb
add
in
out
jecxz
popf
sbb
int
cmc
adc
rol
mov
jae
mov
mov
ror
faddl
mov
cmp
out
pop
jnp
jmp
add
inc
fldenv
push
int
outsb
es
fisttpl
xchg
loopne
nop
xor
repz
xchg
mov
xor
dec
sbb
mov
int
fmul
pop
mov
fwait
nop
test
add
in
mov
dec
adc
push
movb
adc
pop
mov
sbb
test
mov
outsb
xchg
inc
inc
sbb
ss
cmp
sahf
hlt
movsl
sub
xor
cmp
dec
pusha
popa
mov
in
fcomps
lds
add
in
xor
scas
cvtpi2ps
mov
cmc
mov
xor
loope
imull
xchg
jecxz
cmp
xor
fsubrl
mov
mov
xchg
iret
mov
loop
adc
lea
jl
es
mov
mov
imul
xchg
pop
stc
add
flds
push
and
sbb
and
push
insl
xorb
dec
lret
scas
test
dec
mov
adc
imul
test
adc
add
decl
or
adc
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
shlb
sarb
fwait
sti
xchg
repz
jl
in
or
dec
lds
add
sub
pop
dec
xchg
mul
or
sbb
pop
xchg
mov
mov
ja
loope
mov
lock
in
pop
lret
cmp
cmpb
cmp
movsl
bound
pop
xor
xchg
lret
sub
orb
rcr
cmp
sub
xor
popf
adc
cld
inc
push
mov
pop
or
lcall
inc
shl
icebp
popf
stos
je
push
push
mov
pop
add
test
adc
xchg
xor
es
mov
jne
das
fs
cmp
jbe
sub
in
jno
mov
pop
jmp
mov
cli
mov
cmc
or
inc
cmp
xlat
test
nop
mov
out
sub
or
lret
int
mov
mov
pop
icebp
outsb
pop
repz
mov
leave
add
cltd
sbb
push
inc
mov
dec
xchg
lret
xchg
push
or
addr16
mov
mov
int3
push
leave
lock
adc
and
push
jno
aaa
sbb
pop
jp
sbb
aam
mov
lcall
or
clc
jmp
pusha
xor
or
dec
aad
adc
mov
mov
xchg
inc
adc
pop
test
ficoml
mov
dec
inc
sbb
test
frstor
sahf
dec
loope
loope
push
mov
dec
mov
add
mov
xor
or
sbb
xor
cmc
pop
lret
mov
inc
cmc
jle
sub
int
std
jo,pn
roll
sbb
cmp
or
outsb
into
test
lods
lahf
xchg
test
and
and
inc
pop
lret
sbb
out
cmovns
jb
int3
jp
js
rcrb
and
clc
shll
mov
cmpl
icebp
xchg
ss
adc
jae
lds
add
adc
mov
imul
xchg
lock
mov
xchg
aaa
sbb
stc
cmc
mov
loopne
repnz
jae
dec
jb
sub
or
jecxz
push
dec
or
int3
sub
js
fcom
cmpsl
push
daa
mov
xor
push
stos
out
push
scas
pop
mov
icebp
push
pop
mov
jl
sub
es
push
mov
mov
jbe
rcrl
and
frstor
fwait
add
leave
jo
aas
xlat
imul
ss
repnz
jmp
sub
push
cmp
xchg
mov
ljmp
push
sti
mov
adc
add
rclb
adc
dec
lock
rcll
and
add
xchg
iret
stos
dec
out
cs
cmp
fldl
xchg
xor
cmpsb
out
int3
lods
pop
cmc
sub
nop
push
xchg
stos
lret
add
cmp
and
fwait
mov
hlt
xlat
fdivr
stos
dec
loop
dec
fnclex
mov
push
mov
nop
inc
in
mov
mov
jge
cmp
rolb
add
psrlq
data16
fdivs
fsubrs
mov
popf
xchg
cmp
sahf
adc
aad
add
mov
mov
or
mov
sub
add
pop
push
xchg
xchg
add
jle
hlt
repz
aam
mov
or
jno
inc
jp
lret
sbb
incb
pushf
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
popa
int3
movsb
nop
pop
mov
mov
ret
pop
dec
push
mov
push
dec
mov
out
jle
xchg
imulb
jb
lea
jbe
jp
mov
sbb
das
jb
pop
rcl
out
mov
pushf
jmp
cli
pusha
clc
jge
stos
push
into
in
loop
outsb
add
xchg
rorb
xor
out
push
and
push
lock
aad
cmpsl
adc
add
xchg
add
movsl
mov
repnz
mov
sbb
inc
aam
lea
nop
xor
dec
mov
and
sub
movsl
mov
sarl
mov
push
sahf
out
sbb
clc
lret
inc
inc
divl
ret
out
push
es
jge
int3
pop
push
lret
xor
xchg
mov
mov
mov
jl
pop
sub
mov
inc
addr16
jae
dec
cld
ds
cmp
insl
leave
test
pop
fisttps
jae
outsl
imul
inc
inc
xchg
aaa
mov
dec
into
int3
adc
imul
xor
jae
cmp
mov
add
jp
gs
daa
mov
push
test
lock
push
inc
cmpsb
pop
rcrl
pop
jns
les
in
ds
sub
pop
pop
xor
lods
sub
lock
pushf
adc
lods
push
add
stc
lods
jb
js
loop
mov
shll
or
cmc
insl
nop
pop
dec
jb
movsb
mov
shl
adc
mov
adc
fwait
sbb
movsl
not
imul
pop
inc
repz
and
pop
test
imul
and
imul
cli
test
jmp
das
ljmp
xchg
and
mov
xchg
xlat
cmpsl
inc
in
mov
scas
shll
pop
add
leave
push
or
adc
shll
push
mov
mov
loopne
lcall
lock
jnp
push
iret
xchg
jae
xor
sub
push
adc
shll
mov
sbb
lods
ret
push
pop
jae
std
and
orb
sbb
jg
xor
in
sbb
lret
adc
int3
negl
ret
cmpb
mov
in
dec
or
aas
cmpb
sub
in
xlat
mov
in
lahf
stos
stc
jmp
mov
mov
mov
lret
mov
or
xchg
pop
test
mov
mulb
push
mov
icebp
sub
movsb
stos
mov
xor
shl
lea
adc
xchg
push
out
dec
pop
popa
ss
std
lods
sahf
xchg
test
mov
into
sbb
in
sarl
or
inc
in
into
aam
lds
inc
pop
pop
dec
fcomp
pop
mov
jg
mov
idivl
xor
and
je
dec
sbbl
test
into
mov
mov
push
aaa
or
orl
xor
lret
out
mov
or
xor
cmpsl
push
sub
xchg
cmp
and
cmc
popf
jbe
adc
stc
inc
loopne
orl
mov
inc
call
sbbb
fimull
jecxz
inc
bsr
pop
push
js
sbb
insl
xor
in
inc
lret
xchg
sub
sub
popf
xchg
xchg
pop
xchg
add
test
push
push
pop
cltd
mov
fists
ja,pt
inc
cmp
call
dec
scas
mov
push
out
mov
pop
fwait
movsl
stos
or
testl
add
es
repz
push
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
push
jb
nop
lods
rol
dec
les
les
jle
xchg
ret
pop
ljmp
inc
sub
hlt
mov
or
sub
lock
in
gs
sbb
mov
mov
add
or
adc
fdivrp
idiv
js
xchg
add
jecxz
ret
and
fisubrl
aas
test
pushf
outsb
xchg
cmp
cmp
cmp
sub
loopne
mov
fstp
lock
bound
or
lret
push
cmp
mov
adc
std
mov
cmp
cld
repz
jecxz,pn
ret
xchg
jnp
fldl
xchg
push
and
jg
mov
jp
or
aas
decb
mov
pop
push
jno
decb
pushf
dec
lcall
add
pop
cmp
xor
pusha
loop
xchg
data16
js
ret
adc
repz
out
pop
out
pop
adc
dec
test
xor
movsb
fisubrs
and
and
mov
jnp
pop
pop
pushf
stos
mov
xorl
xchg
nop
jno
ret
mov
outsl
les
out
dec
adcb
fists
mov
ja
mov
sub
sub
adc
push
or
pop
stos
aam
aad
jbe
cmpsb
inc
sub
adc
inc
cmp
dec
xor
in
adc
or
adc
push
push
jecxz
jns
lcall
jo
int
imul
push
and
fdivrs
rcl
pop
mov
lods
pop
je
shlb
ret
jnp
fs
inc
mov
movb
pop
mov
ss
sub
adc
jnp
sbb
fldcw
mov
adcb
aaa
push
pop
push
lret
fists
or
test
inc
mov
xchg
pop
sub
lcall
dec
loop
sbb
imul
clc
clc
inc
mov
xor
mov
mov
ret
ds
jge
dec
lret
insb
mov
push
cmp
dec
in
lret
pop
xor
cld
pushf
ffree
cmpsb
jo
sbb
mov
test
pusha
sarb
xchg
fisttpll
mov
test
mov
test
jmp
leave
cwtl
mov
cmp
jmp
sub
jmp
insl
or
sbb
clc
stc
pop
inc
sbb
sbb
mov
mov
lcall
push
xchg
into
loope
xor
in
pusha
mov
popa
push
sbb
movl
push
rcll
repz
mov
hlt
mov
inc
mov
pusha
out
push
addl
loope
das
js
and
lods
add
push
icebp
inc
add
loop
dec
mov
jp
mov
je
jle
xor
dec
lea
mov
std
or
push
cmp
data16
jnp
dec
xlat
sbb
add
jno
cmp
lea
or
test
mov
outsb
pop
sahf
insl
jae
cld
mov
daa
push
mov
lret
xor
cmp
sbb
fcoms
clc
out
pop
imul
pop
push
ret
inc
push
add
inc
and
push
and
pop
sbb
cwtl
or
lret
cmpsb
rorl
mov
ds
insb
test
sbb
or
inc
je
out
mov
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
mov
cmp
sarb
xor
xlat
mov
xchg
int
and
mov
insb
jns
mov
xlat
mov
fcomps
pop
cli
mov
dec
psraw
sub
jne
mov
push
jl
inc
xlat
sub
xchg
cmp
mov
rcll
push
cld
or
fbstp
push
lds
shlb
aas
lret
push
sub
mov
jge
cltd
ss
mov
jp
pop
or
inc
sysenter
inc
aad
int3
imul
xchg
gs
addr16
push
sbb
mov
inc
mov
or
decl
decl
mov
xorl
clc
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
fsubl
add
gs
arpl
push
outsl
inc
jne
jae
jb
fs
add
add
add
and
inc
add
sub
loopne
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
nop
and
inc
add
inc
add
daa
inc
add
jle
add
inc
add
sub
test
inc
add
sub
in
daa
inc
add
push
movsl
scas
or
inc
add
inc
add
add
inc
add
daa
inc
add
inc
add
daa
inc
add
sub
scas
fwait
push
movsl
cmp
mov
adc
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
test
inc
add
push
movsl
cmp
xlat
movsl
dec
add
andb
addl
add
hlt
stc
sarb
inc
pop
jg
add
add
jle
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
mov
inc
add
daa
inc
add
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
or
add
test
adc
test
sbb
test
and
test
sub
test
xor
test
cmp
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
add
inc
add
inc
add
inc
add
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
lds
add
test
roll
add
test
fldl
add
test
jmp
test
icebp
test
cmc
test
stc
test
std
test
add
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
inc
add
inc
add
inc
add
inc
add
add
sub
mov
add
add
inc
xchg
add
add
add
add
add
add
add
adc
add
and
add
add
add
adc
add
mov
add
add
pop
mov
add
add
jbe
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
mov
add
add
pop
mov
add
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
pushf
mov
add
add
loop
add
lock
add
add
adc
add
mov
add
mov
add
add
pusha
mov
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
inc
lea
add
add
lea
add
add
mov
add
movsb
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
xor
add
inc
mov
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
and
add
push
popl
add
add
je
add
mov
add
mov
add
lret
add
popl
add
popl
add
popl
add
nop
add
sbb
add
cmp
add
dec
nop
add
pop
nop
add
jb
add
mov
add
mov
add
enter
ficoml
add
cld
nop
add
or
add
sbb
add
ds
add
dec
xchg
add
pop
xchg
add
jo
add
jle
add
mov
add
scas
xchg
add
rclb
add
xchg
add
lock
add
cld
xchg
add
or
add
sub
add
dec
xchg
add
pop
xchg
add
push
xchg
add
add
add
xchg
xchg
add
movsb
xchg
add
mov
add
into
xchg
add
loopne
add
repnz
add
or
add
sbb
add
es
add
cmp
add
pusha
xchg
add
jo
add
adcb
add
add
mov
xchg
add
out
add
cld
xchg
add
adc
add
xchg
add
inc
xchg
add
push
xchg
add
jb
add
mov
add
xchg
add
ficoml
add
xchg
add
adc
add
xor
add
push
xchg
add
xchg
add
jl
add
mov
add
lods
xchg
add
mov
xchg
add
fcoml
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
jp
add
dec
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
