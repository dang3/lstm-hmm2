add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
inc
cmc
jle
jle
fidivrl
jle
cmp
fxch
ja
or
inc
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
adc
fdivrl
push
sbb
mov
dec
and
lret
push
stos
ljmp
inc
mov
xor
or
pusha
xlat
cld
adc
lock
repz
push
push
push
push
sub
int3
das
addr16
arpl
pop
pusha
aad
xlat
xchg
pop
fcomps
ror
jecxz
mov
stc
push
or
ljmp
mov
dec
sbb
and
gs
or
adc
shl
stos
out
push
sub
push
sub
or
adc
mov
adc
scas
mov
add
cmpb
icebp
mov
test
sbb
and
add
movb
lret
xor
jmp
fstl
cltd
loope
jns
and
scas
pop
addr16
out
enter
jle
jg
jle
jnp
mov
sub
jp
pusha
imul
mov
out
or
loope
xor
cmp
dec
hlt
add
xchg
mov
popa
jmp
mov
jle
and
mov
shl
cmp
lods
mov
in
mov
pop
jge
pop
aad
mov
lahf
jo
add
pop
loop
push
ror
push
inc
fbstp
sub
dec
sub
jae
mov
dec
add
stc
cmp
sbb
or
jmp
mov
push
cltd
jecxz
mov
aad
jbe
pop
das
daa
fwait
out
sbb
cmp
push
xor
bound
aaa
mov
loop
xchg
arpl
scas
and
out
and
iret
mov
mov
shll
fimuls
sub
pop
xor
xor
dec
push
xchg
xor
cmp
add
loope
je
dec
add
stc
jp
sub
dec
or
dec
int
in
mov
mov
in
add
in
fsub
jno
push
xor
sub
jb
jmp
aam
jl
jo
dec
pop
repz
negl
dec
ljmp
jle
xor
adc
push
mov
inc
and
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
ja
cmpsb
jl
jle
jg
jle
adc
psubsw
push
fildl
cmp
xchg
pop
decl
testl
notb
mov
mov
mov
adc
loope
je
push
inc
pop
and
les
int3
cmp
repz
cmp
subl
push
sarl
cs
pop
ljmp
leave
repnz
sub
popa
pop
mov
mov
dec
mov
stos
xor
push
mov
leave
aad
test
adc
call
andb
int3
test
jg,pn
in
outsb
xchg
sti
aad
xor
je
mov
lret
cli
movsb
dec
xlat
pop
or
mov
or
sbb
jne
xchg
add
in
or
xchg
push
push
mov
lds
mov
xchg
shll
jle
jb
cli
push
shlb
loopne
hlt
or
jns
std
xchg
inc
ror
ss
pop
scas
sub
push
repz
es
movsb
jnp
cmc
mulb
mov
adc
shlb
arpl
in
jno
sbb
xchg
loop
lock
ljmp
insb
test
jmp
push
sub
push
movsb
jp
mov
shl
aad
mov
sbbl
inc
mov
sbb
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
lds
jb
jle
jg
jle
cmp
cmpl
jle
push
int3
sarl
mov
fisubrl
stos
sub
ret
pop
fnstcw
test
sbb
aad
mov
and
aaa
in
dec
in
cmpsl
std
pop
ja
mov
cltd
bound
inc
fnstsw
pop
rcll
cld
jbe
push
mov
int3
dec
out
shl
int
imul
shll
xlat
mov
mov
sbb
lret
inc
outsb
stos
mov
mov
iret
pop
mov
mov
or
pushf
mov
scas
insl
imul
ljmp
mov
inc
xchg
lods
call
inc
hlt
loopne
out
pop
lcall
jecxz
jl
mov
pop
cs
push
sub
xchg
aaa
mov
in
jle
out
mov
fldt
loopne
sahf
popa
jle
arpl
imul
cltd
mov
mov
cmp
add
dec
lret
mov
jmp
jmp
sub
insl
jne
sub
aaa
dec
nop
fdivrp
popf
inc
andb
bound
test
sbb
test
sbb
sub
jno
sbbb
mov
insl
cmpl
subl
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
mov
mov
inc
or
stos
into
arpl
es
mov
mov
rolb
negl
lock
in
sahf
push
add
sarl
lcall
scas
jl
xor
gs
and
jnp
mov
nop
add
int3
push
jg
jne
nop
xor
insb
movsb
sub
out
out
sbb
pop
jbe
adc
aaa
test
inc
bound
or
sahf
ret
adc
call
push
sbb
loopne
test
pop
dec
fildl
popf
push
fsubl
ljmp
rcrl
mov
imul
inc
sub
sub
mov
in
test
pop
pop
mov
or
lret
cmp
ja
xchg
mov
ja
mov
lret
adc
movsb
stos
mov
jp
mov
pop
pop
ja
das
frndint
scas
fdivs
xchg
lret
cmp
add
sub
add
push
sbbb
xor
sub
inc
pusha
mov
pop
and
pop
mov
mov
sbb
scas
add
cmp
dec
movsl
iret
sahf
mov
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
add
fidivrl
jle
or
cmp
lods
aad
subl
je
int
and
call
adc
xlat
and
sbb
jne
mov
stos
cmp
xchg
push
inc
in
add
dec
mov
add
cwtl
das
sbb
inc
mov
dec
dec
pushl
rorl
pop
jae
aam
mov
cli
adc
and
mov
mov
cmpsb
scas
pop
mov
push
movsb
jp
aas
jo
pusha
lret
add
cld
cmp
daa
mov
out
call
add
pop
jecxz
cli
sbb
cmp
inc
and
repz
iret
rcl
push
ret
clc
cmp
aam
pushf
jmp
pushf
xor
mov
shr
jb
dec
ds
jge
das
out
jne
loope
mov
pop
sarl
mov
pop
jecxz
mov
cmp
pop
mov
clc
dec
lock
fs
mov
dec
sbb
fs
jae
mov
adc
or
mov
mov
push
enter
pop
xchg
outsb
int
sub
loope
pop
mov
or
loope
mov
add
adc
ja
sub
out
inc
mov
rclb
clc
jmp
clc
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
inc
sub
aaa
push
jbe
jle
jg
jle
fs
insl
fdivrl
test
mov
pop
push
cmp
mov
pop
outsb
ja
xor
repnz
and
out
dec
cmp
pop
sbb
cmp
imull
mov
ficoml
and
divl
or
xor
leave
out
mov
lock
lods
inc
xor
xchg
imul
push
fwait
xlat
inc
xor
sub
dec
test
xor
int3
repz
popf
in
sub
loope
jmp
insl
adc
mov
mov
addl
repnz
jbe
insb
nop
xlat
jge
dec
mov
or
stos
int
mov
push
test
xchg
pop
decl
movsb
aam
push
mov
mov
jl
push
xchg
xchg
enter
test
pop
or
mov
jae
mov
enter
arpl
dec
les
mov
pop
setns
pop
add
mov
lods
add
mov
insl
es
dec
mov
iret
addr16
push
sar
mov
test
aaa
adc
pusha
addr16
loop
mov
mov
psubb
lret
or
jg
aas
push
and
xor
cwtl
loope
cmp
push
mov
add
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
sub
bnd
jle
jg
jle
and
cmp
sbb
mov
push
pusha
dec
mov
arpl
and
mov
cwtl
out
or
aas
inc
mov
dec
icebp
xor
repz
jnp
gs
ss
ljmp
sbb
das
xchg
popf
dec
jmp
jne
frstor
sub
cmp
or
rcl
insl
movsl
pop
push
out
stc
lea
pusha
pop
call
leave
inc
loope
dec
aaa
jo
das
subl
cmc
and
mov
out
xchg
pushf
jb
dec
jl,pn
xor
jmp
idivl
js
fdivrl
and
xor
pop
je
cmpsb
mov
cmpsb
lock
ret
fcmovnb
test
fwait
shl
jmp
push
movaps
enter
push
jg
mov
pop
fwait
cli
testb
jno
or
push
popa
repnz
mov
das
pop
out
pop
cltd
cmp
dec
pop
jge
int
cmc
cltd
xor
into
out
scas
out
pop
imul
data16
andl
jo
xor
mov
add
xchg
out
shr
push
imul
cli
xchg
add
jb
cli
dec
sbb
cmp
shrl
scas
jmp
xor
pop
ss
jb
daa
sbb
in
add
mov
pop
movsb
mov
inc
decl
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
dec
leavew
sbbb
jle
jg
jle
sub
fildl
xchg
in
in
cli
jns
insb
popf
movsl
je
stos
or
xor
push
cmc
fwait
rorb
in
arpl
xor
mov
enter
sbb
rcrl
cmp
inc
xor
sub
cmp
loope
movsb
fsubp
jle
cli
cmp
sub
lret
movsl
jbe
cld
sub
std
das
or
hlt
decl
sbb
fstl
int3
cmpsl
jge
sub
popa
xchg
ss
jns
and
sbb
xchg
sbb
mov
pop
xchg
adc
jl
stc
insl
mov
cmpsb
insl
in
sbb
and
insl
add
imul
mov
popa
adcl
jno
jb
jno
push
popf
and
pop
mov
mov
or
inc
sbb
ret
cmp
cmp
fwait
test
pop
xchg
outsb
or
cmp
pop
sub
pop
dec
jl
pop
sbb
xor
xor
rorl
shlb
stc
sti
mov
rcll
xor
sbb
cmpsl
repnz
inc
pop
loope
movsl
inc
add
in
daa
sub
push
xlat
shl
xchg
inc
dec
imul
xor
inc
xchg
hlt
fnstcw
mov
int
or
mov
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
push
sahf
daa
idivl
or
fidivrl
jle
in
movsb
test
dec
lret
popf
aaa
mov
mov
data16
sub
xor
ret
int
fsub
mov
xor
in
add
lret
xchg
aad
and
dec
fsubr
ret
ja
sbb
cs
ja
mov
daa
loopne
xchg
ja
fidivl
imul
pusha
movsl
in
sub
mov
mov
jno
popf
dec
bound
pop
lock
pop
add
sbb
shrl
mov
sbbl
hlt
mov
push
mov
and
sbb
popf
adcl
or
inc
sbb
xchg
push
daa
negb
leave
mov
mov
pop
aas
stos
mov
jle
adc
sti
ja
aam
ss
loop
movsb
mov
sub
push
ds
xor
mov
xorb
sub
insl
mov
and
fwait
data16
jnp
jns
jae
jp
sahf
jno
and
push
xchg
cld
jo
mov
clc
sbb
in
pusha
fdivl
dec
pusha
std
adc
fdivs
mov
mov
lret
into
jb
dec
inc
xor
daa
fwait
mov
mov
fistpll
daa
adc
out
out
nop
js
add
pop
lret
lret
fmuls
dec
inc
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
jnp
ret
or
and
jle
fisttpll
push
xchg
sbb
mov
push
cmp
imul
sbb
mov
mov
pop
or
outsl
xchg
sbb
sti
loop
pop
mov
sbb
lods
lea
cmpsl
cmp
sarb
pop
mov
flds
jl
data16
lcall
or
sub
cwtl
repnz
sub
daa
cwtl
or
jnp
mov
push
dec
sub
mov
and
or
push
push
cmp
dec
push
mov
cwtl
cmp
adc
sbb
lcall
mov
jno
cs
cs
push
dec
add
mov
mov
scas
dec
cmp
sub
fdiv
pop
sbb
xchg
mov
and
dec
jns
inc
pop
jmp
push
lds
fdiv
mov
int3
sub
sub
add
inc
and
pusha
cmpsl
adc
addr16
or
daa
outsl
lret
pop
jnp
shlb
and
xor
and
or
cmpsl
in
inc
add
adc
sbb
insb
mov
cmc
and
push
or
add
add
add
sldt
add
decl
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
orl
dec
or
and
jle
fildl
mov
ret
mov
insl
mov
sbb
cld
mov
sbb
sbb
lock
inc
inc
das
xor
shrb
call
arpl
ret
movb
sbb
xlat
and
cltd
dec
adc
adc
cmp
in
fldcw
test
mov
jl
in
cmp
sub
dec
aam
cmp
fbstp
sub
jge
mov
aad
xlat
pop
and
cmp
shr
push
adc
cmc
cld
dec
xchg
sub
pushf
add
xchg
aaa
pop
out
cmp
pop
enter
mov
mov
rcr
mov
daa
mov
xor
push
xchg
push
cwtl
les
pop
cmp
ljmp
jns
sub
pop
add
jne
and
mov
jne
pop
xchg
jg
xor
cmp
push
and
mov
dec
lock
pop
rcll
into
push
mull
adc
jmp
mov
mov
lods
add
rcll
mov
and
hlt
std
jle
sbb
xchg
dec
add
add
mov
or
fsubl
stc
fidivrs
jle
jg
jle
fwait
sarb
sbb
test
mov
mov
xlat
loope
sub
and
mov
jno
dec
pop
inc
pop
inc
es
out
je
xchg
fsubl
arpl
dec
xchg
jbe
vmread
stos
cmp
mov
subb
pop
lock
jnp
xor
lcall
pop
add
mov
or
cmpl
dec
and
les
xchg
repz
daa
sub
test
or
test
sbb
rcll
or
mov
icebp
shll
or
je
sahf
adc
outsl
lock
pusha
inc
xor
daa
frstor
mov
mov
mov
mov
repnz
lret
dec
push
mov
repnz
pusha
cmc
addl
test
repz
or
aad
jae
arpl
or
daa
mov
pop
stos
ficomps
into
mov
mov
jo
pop
xor
test
and
pushl
add
adc
dec
jne
xlat
lea
insl
dec
add
dec
mov
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
xor
and
jle
and
jle
divl
daa
push
enter
pop
mov
les
adc
xrelease
jo
test
or
pop
insb
mov
shrb
ss
mov
push
or
icebp
popa
sub
lock
gs
mov
pop
nop
lret
cwtl
adc
cli
pop
test
and
sub
aas
cmp
push
mov
cmpb
or
inc
fdecstp
subb
add
sbb
les
jae
sbb
loopne
imul
and
ret
sub
lret
mov
mov
dec
mov
pop
cld
pop
dec
xchg
out
stos
dec
nop
loopne
push
and
daa
cmc
sbb
test
and
mov
loop
xchg
dec
and
stc
call
hlt
add
cmc
cs
daa
fidivrl
xor
xchg
xor
rcrb
pop
pushf
mov
insl
divl
loop
jge
stc
mov
jae
dec
cmp
cmpb
push
pop
loopne
pop
push
out
jbe
sub
das
mov
add
or
int
inc
in
push
fs
imul
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
mov
loope
cmp
jmp
addr16
adc
push
shl
in
sbb
adcb
mulb
xor
ss
xchg
dec
cli
xchg
loope
jp
pop
mov
push
stc
dec
addb
and
int3
sub
pop
and
lock
arpl
mov
push
pop
incb
pushf
fs
pop
cmp
fcom
inc
outsl
das
mov
test
orb
inc
mov
lcall
das
xor
adc
leave
cmc
and
out
cmpsb
out
push
mov
data16
cwtl
sti
add
mov
adc
and
pop
test
mov
xchg
stos
hlt
inc
not
sbb
call
or
adc
dec
xchg
loopne
add
pop
inc
fs
push
in
mov
arpl
adc
and
ss
scas
mov
popa
mov
dec
pop
jmp
cmc
cld
fs
mov
sub
in
mov
mov
mov
jo
mov
pop
sub
xchg
fwait
pop
int
mov
cs
out
rep
pusha
mov
mov
call
add
imul
mov
jmp
jbe
xchg
call
adc
xchg
lahf
lahf
or
jle
push
fwait
testl
add
cmpsl
shrb
into
cmpsb
mov
outsl
out
and
jb
pop
aas
mov
je
inc
and
inc
icebp
in
jae
mov
xor
in
mov
add
rcrl
call
mov
test
movsl
sarl
adc
xlat
test
push
mov
and
jne
xchg
mov
pushf
sti
pop
pop
pushf
insl
mov
jne
jb
rcrl
loopne
jno
lods
pop
repnz
mov
push
enter
in
jge
or
sub
cmp
xchg
repz
hlt
or
or
lods
mov
rorl
cld
in
mov
addr16
test
adc
push
xorb
adc
loopne
rolb
xchg
jbe
test
dec
push
add
sub
mov
jo
jne
insb
add
pop
push
push
pop
fs
and
test
adc
les
es
jg,pt
lods
loop
dec
pop
int3
xchg
js
call
push
gs
fs
insb
mov
out
sub
and
popa
aad
addr16
jp
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
sti
mov
and
jle
mov
xchg
shrb
leave
lea
loope
outsl
es
cld
pop
test
insl
inc
sub
push
fdivrp
mov
or
push
mov
adc
lods
orl
pop
adc
mov
add
pop
xorl
xor
into
pop
loop
stos
inc
mov
xor
sbb
movsl
mov
xor
adc
repnz
pop
pusha
push
pushf
nop
stos
pop
mov
addr16
xor
popf
or
mov
mov
popf
dec
pop
xchg
mov
int3
fwait
or
jmp
pop
gs
xchg
fistpl
stos
or
pop
outsl
dec
xchg
sub
mov
dec
pushf
jns
nop
sub
cli
and
mov
xchg
cltd
push
stos
add
inc
fisubrs
fdivp
sub
mov
loopne
add
cmpsl
icebp
dec
or
das
xor
in
and
int3
cwtl
sbb
cmp
dec
lea
pop
and
fistl
hlt
xor
das
leave
test
icebp
mov
push
xchg
les
push
xchg
in
das
sbb
jl
sbb
push
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
subb
jne
jle
and
jle
push
cmp
mov
dec
sbb
bound
test
xor
sbb
mov
lahf
dec
test
call
ljmp
out
and
xchg
flds
imul
sub
movsb
in
fbstp
stc
fistpl
sbb
sahf
cmc
sbbl
mov
xor
xor
mov
jns
ljmp
cmp
lahf
mov
mov
adc
adc
fucomi
xor
sub
xchg
test
xor
scas
cmp
lret
dec
pop
repnz
lods
add
push
sarb
jbe
movsl
sub
push
xchg
dec
lea
sub
dec
mov
xchg
es
fsubs
movsl
popa
out
adc
dec
scas
mov
jecxz
arpl
sbb
push
pop
pcmpgtw
push
das
adc
xor
mov
adc
pop
faddl
and
adc
enter
cmp
xchg
adc
mov
jae
shrl
ret
push
inc
out
scas
inc
cmp
stos
inc
repz
in
fiaddl
pop
xor
shr
dec
add
add
sti
mov
stc
repnz
test
add
and
jle
sub
xor
fs
je
jecxz
adc
push
jne
push
add
mov
pusha
out
shrb
jmp
das
cs
sub
cmp
mov
insb
imul
jo
xlat
cmp
nop
pop
xchg
fxch
push
daa
and
xor
or
push
cmp
test
incl
dec
mov
dec
test
cmc
insl
movb
xchg
cmpsl
les
and
cmc
inc
sub
and
or
outsl
or
clc
cmp
lahf
jmp
mov
out
das
test
inc
std
lret
pushf
imul
lcall
pop
je
xor
inc
cmp
jb
sub
adc
jp
std
notb
out
dec
hlt
lret
push
ljmp
adc
xchg
jne
fists
and
push
insl
xchg
shlb
adc
int3
pop
or
inc
mov
and
mov
jnp
inc
lods
outsb
into
lahf
mov
or
sbb
pop
cli
insl
dec
and
cli
push
or
insl
lds
or
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
ret
pop
jns
xchg
jl
sahf
add
popa
adc
xlat
leave
cmp
mov
movsl
arpl
mov
xor
iret
sbb
or
inc
in
sbb
sbb
inc
pop
lret
call
sbb
inc
insb
mov
insb
loopne
xor
sti
mov
xchg
mov
or
sbb
clc
xchg
lahf
and
dec
cltd
jns
sarb
arpl
insl
popa
sbb
pop
mov
stos
insl
xchg
movsb
ret
movsb
jne
push
lfence
ja
cli
adc
roll
addr16
stos
out
notb
push
loopne
sbb
mov
xchg
mov
push
fisubrl
aam
cli
inc
sbb
lcall
lds
fimull
mov
testl
in
xor
push
xchg
mov
scas
fiadds
in
dec
ret
test
in
popf
inc
jne
lcall
fnstsw
cmc
shr
mov
jne
dec
sub
out
xorl
push
jno
leave
fisubrs
mov
and
aas
lock
out
pop
adc
int
lods
cltd
cs
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
iret
add
xchg
pop
jle
and
jle
mov
je
and
cmpsl
cld
xchg
inc
loope
leave
push
push
push
stc
or
xchg
aas
ja
fwait
rorb
in
xor
pop
lahf
popa
pop
movsl
cmp
in
xchg
ja
mov
jmp
fadd
stos
ja
rclb
daa
cmc
sbb
mov
jecxz
add
mov
inc
cmp
jb
lcall
lods
push
jp
cmp
ss
in
mov
imul
xor
pop
adc
subl
mov
pop
sarb
rclb
in
in
daa
adc
shl
neg
push
out
orl
adc
xor
pop
pop
adc
insl
stos
data16
push
jb
cmpsl
lock
shll
aad
push
test
fldcw
gs
jbe
test
dec
ficoms
fdivl
mov
jmp
or
push
in
popf
xlat
int
lock
xchg
test
in
aas
movsl
xchg
mov
xor
addr16
xor
imul
pop
inc
sub
add
popf
inc
pop
outsb
movsb
es
mov
jmp
jns
mov
dec
js
movsl
mov
lods
mov
das
xchg
pop
add
jle
jg
jle
jae
dec
push
adc
orb
scas
xchg
mov
jg
mov
mov
push
xchg
lds
sub
add
push
mov
dec
pusha
lock
push
fwait
xchg
inc
cmpsl
jmp
out
das
scas
sbbl
adc
xor
push
repnz
inc
dec
pushf
xor
and
inc
mov
jg
int
sbb
sub
mov
fldl
cmp
call
mov
add
ja
test
push
pop
ljmp
sbb
enter
push
jle
mov
leave
jmp
cmpsl
pop
push
outsb
lds
inc
mov
stos
subb
xchg
add
cmp
push
adc
lods
gs
shrb
jg
mov
ds
cmc
adc
scas
out
mov
hlt
adc
out
fcoms
insb
popf
popa
ret
das
lcall
insl
sub
leave
shlb
nop
inc
sub
add
xchg
add
out
mov
xchg
and
scas
add
je
jg
inc
iret
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
jmp
adc
add
jle
and
jle
mov
mov
xchg
or
inc
lea
aas
popa
push
xchg
and
push
xchg
jb
xchg
xor
xchg
xchg
sbbb
lea
jp
fisttpll
push
cltd
gs
mov
pcmpeqb
push
xchg
iret
imul
test
loopne
pusha
pop
pop
aaa
imull
ljmp
stc
xor
cs
xor
movsl
cmp
lea
les
jb
add
cmp
sbb
mov
sbb
cld
mov
ja
mov
inc
dec
sub
xchg
push
jp
movsl
mov
mov
cli
mov
adc
mov
push
testb
stos
cmp
push
sbb
pusha
movsl
fcmove
movsl
fisubs
je
inc
cmpsb
cmp
sub
iret
cmp
sub
fsubs
push
rclb
stc
dec
hlt
push
sub
mov
inc
fst
dec
dec
xchg
cltd
cmpsl
lret
or
nop
cmp
data16
mov
fwait
loope
jge
mov
scas
mov
clc
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
mov
jle
and
jle
or
les
in
int3
dec
lock
call
cmc
outsl
pop
addr16
pop
std
jecxz
or
scas
fldcw
fstpt
repnz
pop
mov
mov
shlb
mov
ja
fcom
pop
testb
adc
push
mov
xorb
jno
lock
and
jge
and
negl
mov
push
das
in
xor
out
rorl
inc
mov
add
cmp
in
mov
das
gs
aaa
dec
add
add
dec
test
test
push
repz
test
sbb
mov
int3
cmp
pop
outsl
dec
scas
cmc
int3
or
dec
daa
pushf
xlat
lods
loope
loopne
icebp
xchg
mov
pop
sub
pop
scas
jl
push
adc
xchg
mov
lds
pop
sub
shll
xor
mov
add
add
outsl
mov
imul
je
mov
sbb
hlt
lret
ret
mov
ret
cmp
aad
stos
and
pop
mov
loopne
mov
movsb
mov
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
popa
dec
clc
sbb
and
jle
lods
lock
stos
dec
push
cmp
and
ljmp
bound
mov
insb
pushf
andl
sub
outsb
in
push
lods
push
push
cld
pop
ds
loopne
cmp
std
xor
cmp
pop
bound
int
push
xchg
incb
sbb
pop
lods
mov
pop
mov
cld
loopne
pop
fadds
ds
jbe
xchg
push
push
scas
loope
sbb
jle
push
mov
jno
leave
xor
data16
insb
push
add
add
inc
outsb
int3
call
sub
or
repz
sbb
sbb
mov
ss
out
inc
fnstcw
xchg
push
lcall
jg
and
insl
jne
pusha
xor
push
mov
mov
xchg
jp
xor
add
jno
mov
rolb
cmp
mov
bound
insb
xor
aaa
push
adc
jbe
jae
mov
sbb
jmp
add
in
sti
test
mov
dec
nop
xor
leave
ret
push
mov
jmp
jb
test
adc
push
shrl
jle
sbb
mov
add
repz
dec
mov
mov
and
aad
sbb
imul
inc
mov
inc
push
pushf
dec
leave
mov
push
jae
test
sub
jno
movsb
push
popl
jne
int3
leave
shl
clc
cli
test
pop
icebp
mov
popf
stc
pusha
leave
std
pusha
iret
rorl
inc
shll
sub
cmpsl
mov
leave
test
aad
testl
push
mov
mov
pop
fbstp
xor
mov
sbb
sarb
pop
dec
mov
jne
mov
jecxz
adc
fcompl
cmp
xorb
test
fcompl
inc
int
shll
cmpsl
mov
popa
sub
cmpsl
fcmovu
and
es
lcall
sub
les
dec
add
and
xlat
rorb
pop
mov
jmp
xchg
jno
jg
clc
fisttps
mov
mov
push
xor
mov
mov
sbb
enter
vpunpcklbw
sbb
imul
test
jne
fldenv
xor
sub
sub
lods
jno
pop
nop
scas
cmp
pop
ror
cltd
loopne
in
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
xor
sbb
jle
jmp
lock
dec
insl
or
shll
jle
dec
in
ss
xchg
xor
jnp
cmp
sbb
roll
les
das
sbb
add
stc
mov
push
cmp
pop
nop
fcmovnbe
xor
jg
pop
cmpsl
das
mov
out
xor
xchg
xor
orl
ss
jns
jp
std
and
pushw
lahf
push
lds
lret
test
sbb
sub
jg
scas
aas
jns
cmpsl
cmpsb
pop
popf
pslld
dec
and
out
das
test
cld
std
adc
lahf
lret
sbb
xchg
xor
daa
insb
push
insl
jmp
push
sbb
nop
std
cwtl
pop
aad
lea
mov
rorl
mov
mov
and
inc
xor
push
jb
in
cld
mov
adc
dec
xchg
sub
pushf
push
add
mov
shld
cwtl
orb
jl
or
loopne
out
cli
stos
cmpsl
xor
cmpsb
jo
sub
pop
mov
or
push
and
lods
cmpsl
inc
stos
push
iret
nop
call
xor
loope
leave
hlt
les
inc
xor
ret
popa
call
in
loope
fisttps
popa
cli
jae
and
insl
das
push
inc
push
pop
ror
shrb
inc
ljmp
inc
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
inc
in
jmp
adc
pop
mov
xor
push
outsl
lea
sbb
or
or
cmp
cmpsb
xchg
sbb
enter
mov
fildl
or
inc
jno
xor
pusha
ret
gs
adc
jge
icebp
xor
insb
ror
and
and
sahf
int
sub
shl
loopne
jbe
mov
mov
xchg
loop
sbb
jmp
jae
hlt
pusha
arpl
cwtl
scas
imul
imul
scas
or
stos
aad
out
rcrl
sarl
inc
sub
pop
aaa
sub
sti
pop
arpl
sub
jnp
les
add
pushf
xorl
les
ja
je
hlt
and
jecxz
inc
arpl
lods
lcall
in
jg
sbb
jae
rcll
sbb
lods
js
inc
cmpsb
xor
or
shl
cmp
fiadds
sbb
adc
stos
gs
dec
enter
repnz
cld
pop
cmp
adc
inc
pop
jns
jo
sbb
dec
adc
mov
arpl
or
sti
or
adc
in
test
push
cmp
imul
push
clc
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
lock
adc
jmp
jecxz
or
ja
add
xchg
clc
xchg
xchg
add
or
mov
in
je
mov
sti
dec
mov
pop
fwait
subl
and
mov
movsb
jmp
clc
lock
mov
xchg
dec
scas
xchg
xchg
fistl
xchg
dec
scas
inc
ret
sbb
aad
inc
rcrl
outsl
popf
xlat
gs
fmulp
dec
mov
outsl
push
jno
lods
aam
sarb
popl
or
arpl
inc
pop
lods
push
repnz
shl
fnstenv
jmp
in
push
outsb
push
xor
in
push
negl
jae
subb
aam
ret
push
into
mov
inc
and
aad
pusha
add
mov
mov
mov
pop
rorb
jle
mov
mov
sti
aam
mov
mov
or
sbb
fmuls
lcall
sti
frstpm(287
mov
push
push
jo
pop
add
xor
cltd
pop
negb
arpl
cs
push
push
add
push
jae
cmp
adc
mov
cltd
je
jne
mov
or
fldl
jge
xlat
adc
xchg
inc
cmp
das
push
jg
adc
lret
hlt
leave
fbld
push
push
xchg
test
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
cwtl
jmp
jg
jle
adc
cmp
aaa
dec
jno
xchg
into
fcoml
jb
cmp
ret
addr16
cmpb
test
repz
sub
data16
cmp
mov
ret
sbb
outsl
bound
and
and
test
fsubl
int
jne
mov
mov
jle
xor
push
push
int
cmpsl
pop
sbb
out
push
pop
or
adcb
lcall
jl
int
mov
lods
xchg
loope
adc
into
pop
cmp
sbb
sahf
jl
pusha
js
sbb
inc
in
xchg
dec
cmp
mov
insb
stos
out
data16
ljmp
xchg
shrb
inc
mov
fucomip
jge
fwait
add
outsb
xor
push
jb
jmp
sahf
or
dec
out
imul
or
test
lcall
mov
cmpsl
scas
jno
xor
and
outsb
add
shrb
sub
pop
jns
movsb
orl
into
call
stc
fs
adc
xor
xchg
and
rcll
sbb
in
lods
push
mov
into
aam
out
cwtl
sub
insl
push
or
jae
lds
bound
aam
fcomps
cmp
jo
repz
push
xchg
mov
and
or
fwait
icebp
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
jne
dec
adc
fdivrl
jle
inc
push
cmp
mov
adc
push
rol
rcll
out
mov
ljmp
cmp
mov
jbe
fcoms
mov
sbb
or
xchg
pop
sbb
daa
mov
mov
and
jmp
mov
push
decl
mov
pop
xor
mov
mov
push
pop
pop
inc
pop
mov
xor
xor
out
es
mov
jl
xchg
mov
ror
jne
cwtl
jnp
jne
add
in
repz
pop
jbe
dec
je
sbb
stos
ret
hlt
lret
std
daa
xchg
int
xchg
das
in
cltd
loop
cmp
repz
iret
sub
ret
or
sti
xor
mov
xchg
mov
cmp
and
jne
mov
fldenv
mov
rcl
arpl
and
push
push
mov
jne
or
lock
and
movsl
cmp
mov
cmc
push
mov
imul
fcoms
push
jge
xor
pop
sbb
inc
negl
dec
sarb
mov
sbb
out
mov
andb
ror
push
mov
rcll
sub
lret
cmp
push
cwtl
int
les
insl
xor
mov
push
push
inc
xorl
add
mov
mov
jmp
and
pop
xchg
adc
arpl
mov
push
jle
fdivrl
jle
das
repz
int3
nop
fwait
loopne
out
out
add
jbe
dec
and
mov
add
mov
mov
je
dec
mov
lea
lcall
xor
add
out
pop
mov
lods
sub
jg
imulb
repnz
adc
or
push
sbb
sub
xlat
mov
rclb
scas
ljmp
into
jge
push
enter
lahf
incb
mov
cli
fbstp
loopne
xor
je
mov
fimull
mov
or
das
jo
js
or
movsl
insl
inc
lcall
xchg
add
xor
cmp
aam
push
fldenv
push
xchg
imul
mov
mov
mov
dec
inc
mov
cmp
mov
stos
mov
in
inc
repnz
xchg
lods
mov
xor
stos
andb
fstpl
lock
icebp
inc
jmp
ss
mov
clc
inc
negb
in
push
fidivrl
adc
pop
and
les
push
cld
aam
push
adc
xchg
sub
pop
stc
fwait
movsb
pop
stc
cmp
je
mov
jbe
dec
push
mov
add
inc
and
dec
rcrl
xor
add
mov
jmp
mov
jmp
push
gs
movsb
add
in
pop
jle
fdivrl
jle
ja
mov
cmp
xorl
push
dec
push
std
and
lock
cmp
push
lods
loopne
pop
gs
xchg
mov
fstpt
in
loopne
or
ficoml
lret
lods
test
insb
xor
loopne
fcmovbe
daa
les
add
push
inc
or
xchg
cmp
fmul
xchg
jp
add
adc
roll
mov
pop
add
and
loopne
dec
cs
cwtl
test
push
scas
pop
cs
fcmovnu
sub
sahf
xor
jb
insb
and
dec
into
inc
inc
jmp
sahf
pop
push
iret
mov
cmp
adc
inc
lods
pop
jl
stos
jae
xchg
xor
mov
xor
sbb
xchg
jl
pusha
aas
pusha
dec
rcrl
cwtl
push
mov
negl
xchg
xor
jle
or
test
xor
xchg
aam
mov
xchg
fcomps
xor
outsl
out
repnz
imul
or
nop
or
add
je
fbstp
cmp
shll
jmp
testl
jnp
jp
cmp
ror
mov
lahf
test
or
pop
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
mov
imul
push
scas
sub
xlat
or
aad
jne
icebp
sub
jle
mov
push
push
push
xchg
int3
or
iret
push
cmp
cmp
cmpsl
add
ss
or
fimuls
jne
sbb
mov
call
pop
push
and
xor
adc
es
mov
mov
xorl
fists
sub
and
and
ja
cmp
adc
mov
and
jne
adc
ss
popa
lret
pcmpeqd
mov
mov
into
js
xor
dec
jecxz
out
idiv
lcall
mov
sbb
icebp
jb
push
test
cld
push
inc
out
xor
add
sbbb
dec
testb
jno
cwtl
bound
jg
pop
adc
or
ljmp
pop
es
pop
out
testl
sub
inc
and
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
fs
stc
jge
jle
or
jle
testl
xchg
test
popl
mov
out
pop
in
fldenv
xor
jmp
mov
xlat
mov
orl
and
dec
or
adc
pop
mov
ss
ret
hlt
mov
sub
push
leave
and
icebp
test
mov
xchg
jle
push
es
mov
sbb
jmp
inc
mov
popa
aaa
inc
jg
lods
mov
inc
shlb
imul
mov
push
mov
and
push
sbb
pop
push
lret
es
mov
inc
movsb
ss
pop
mov
inc
push
and
adc
ret
or
pop
pop
js
ror
mov
inc
inc
adc
sub
adcb
xchg
in
or
cmp
and
mov
jp
mov
adc
jle
mov
jl
sahf
movsb
dec
mov
mov
mov
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fcmove
cmp
or
jle
or
jle
sbb
mov
std
xchg
sbb
popa
xor
push
xor
test
insl
pop
aas
cs
mov
pop
xor
sarb
out
and
sub
ds
add
xor
aam
add
dec
stos
cmp
int3
mov
pop
mov
dec
fwait
fs
inc
mov
xor
xorl
pusha
mov
loopne
push
add
and
outsl
and
mov
fstl
adc
cmp
lcall
cltd
ret
cmp
xchg
inc
push
fiadds
sahf
addr16
jno
mov
lret
push
fldl
icebp
push
stos
inc
xor
inc
fidivl
push
popf
loope
xor
xor
push
gs
jg
vpcmpgtd
rclb
pushf
add
and
inc
je
lret
vpackssdw
sub
adc
sub
add
dec
bound
cmp
dec
mov
lea
popf
sbb
loop
jl
xchg
push
inc
clc
cmp
add
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
std
adcl
and
adc
push
jg
sub
xor
notl
ss
jmp
sahf
xorl
imul
jp
sub
inc
pop
or
test
sarl
aad
repnz
imul
pusha
test
out
test
and
cmp
cmpb
call
daa
cmpsl
sub
scas
jl
xor
pop
shll
cmp
add
dec
je
add
cwtl
xchg
stos
xchg
push
stc
or
push
out
and
and
aam
mov
or
shrl
mov
cmp
sub
test
xor
push
ljmp
pop
popa
xchg
cmp
mov
fisubl
ret
pop
into
cs
movsb
inc
mov
xor
cmp
into
outsb
push
inc
loope
rol
aas
outsb
addr16
inc
mov
push
xorl
popf
mov
adc
sub
pop
mov
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
in
sbb
adc
jle
or
jle
stos
sub
push
rorl
cltd
jmp
pop
hlt
cli
dec
test
sub
jno
sbb
mov
lcall
enter
sub
lret
mov
xlat
add
mov
sahf
sahf
lock
subb
cltd
nop
sub
mov
inc
sbb
cs
mov
loopne
aad
fnsave
jb
repz
mov
push
xchg
cmp
push
mov
and
xchg
xlat
add
dec
pop
nop
les
rorl
inc
cmp
std
je
mov
andb
or
test
lcall
ret
add
scas
imul
clc
popa
cmp
mov
cmpl
stos
mov
jmp
dec
clc
adc
ljmp
jb
lods
aad
stos
xchg
xlat
jno
sub
lea
add
cld
mov
or
xchg
nop
cmp
sub
jo
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
fcomip
jg
jle,pn
or
jle
sub
push
test
sbb
out
xor
orl
pop
bound
mov
inc
xchg
push
inc
mov
xchg
ret
rcll
iret
dec
ds
mov
sarb
pop
dec
cs
pop
lcall
push
pop
adc
jg
adcb
dec
arpl
xchg
xor
repnz
lcall
out
push
dec
loope
dec
popa
stos
filds
dec
dec
push
lret
out
mov
fdivl
mov
lret
out
fcoml
fists
loop
mov
add
int
cmp
ret
mov
push
xchg
pop
roll
xor
sti
mov
hlt
out
in
hlt
cmp
push
std
incl
ljmp
inc
adc
leave
push
adc
je
mov
xchg
add
inc
shll
xchg
shlb
mov
in
repz
pop
ja
mov
sub
inc
mov
adc
stos
hlt
int
scas
mov
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
mov
jle
or
jle
lret
mov
jbe
enter
cmp
repz
mov
mov
js
aas
leave
dec
clc
lahf
cmpsl
fdivrl
gs
sub
clc
inc
jle
les
xchg
repz
sbb
movb
gs
outsl
and
insl
imul
push
dec
out
popa
and
movsl
in
cmp
call
or
pop
and
jg
sbbb
mov
jmp
xchg
popf
stc
pop
push
dec
inc
mov
cmp
rsm
push
ficoms
stos
pop
scas
cmp
jo
add
popf
push
inc
xchg
xor
imul
and
pusha
sti
pop
fldl
add
cmp
mov
das
in
push
mov
jae
jbe
jge
dec
fucomi
fcomp
loop
push
mov
xchg
xchg
mov
out
out
pop
and
in
dec
add
sbb
mov
jmp
dec
sub
lock
cltd
aaa
xor
jg
jle
loopne
adc
adc
xchg
je
jae
arpl
lods
mov
pop
loope
xor
mov
int3
in
fcmovnbe
call
shl
mov
inc
mov
xor
mov
sti
insl
xchg
enter
test
jnp
jno
push
imul
sbb
or
out
mov
inc
mulb
addl
clc
push
mov
xchg
sbb
int
negl
mov
iret
cmp
leave
jbe
jecxz
int3
lret
xor
test
mov
icebp
jno
lea
mov
pop
aam
icebp
test
std
popf
xor
add
arpl
inc
ficoml
mov
push
cmp
inc
and
mov
xor
cmp
inc
push
scas
xchg
sbb
addb
lods
test
sub
loopne
arpl
cltd
jp,pn
test
or
inc
jb
xor
adc
in
leave
mov
pop
mov
push
in
or
cmpsl
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
push
fcmovnb
sub
jle
fbstp
mov
into
sahf
ret
pop
inc
mov
inc
shl
jno
addr16
std
cmp
push
mov
jbe
sti
add
adcb
cld
xchg
sbb
sbb
addl
aaa
cmp
out
or
cs
push
push
dec
in
push
subb
mov
sub
imul
cltd
in
nop
adc
push
in
sarb
xor
popf
xor
mov
xchg
scas
cmc
in
push
sbb
loop
cmp
pop
sbb
pushl
ss
dec
pop
popf
cli
test
jno
and
mov
lret
inc
cld
pop
push
jnp
xor
cmp
cld
scas
bnd
or
notl
fnstsw
or
repnz
sbb
loope
sub
fisttpl
adc
xchg
shlb
mov
cwtl
shlb
add
mov
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
or
and
or
jle
sub
ror
in
inc
fisttpll
les
sbb
add
jb
in
addr16
inc
pop
adc
mov
cmpb
test
jl
clc
mov
stc
pop
movsl
cmp
jae
mov
sub
mov
ja
push
out
push
or
sbb
xchg
lods
loop
ror
push
leave
addb
test
movsb
popf
dec
jge
orl
and
jo
sub
and
push
jecxz
dec
lahf
pop
shll
hlt
cmpsb
push
out
fstpt
pusha
pop
adc
xchg
fdivrl
xchg
xchg
clc
mov
adc
jge
xchg
sbb
daa
scas
xchg
repnz
pop
lret
adc
cmp
andb
cmpsb
lahf
imulb
das
movsl
jg
fcomps
test
inc
mov
xor
dec
fbld
xchg
dec
inc
push
mov
xlat
add
jle
addb
test
stc
inc
adc
xchg
xchg
daa
and
lea
mov
incl
jmp
mov
xor
jmp
or
stc
push
insb
push
jmp
jg
jle
leave
push
test
jb
push
ret
add
jne
mov
aad
lock
std
jno
repz
pop
mov
and
lcall
sub
ds
fists
in
push
push
or
rcrl
jle
rolb
sub
shll
push
aam
jb
mov
adc
and
jne
jle
lcall
push
cmp
std
push
or
push
xchg
testb
dec
out
xor
sbb
rorb
ret
loopne
inc
aas
xor
sbb
cmp
mov
pushf
movsb
bound
pop
testl
repz
mov
push
adc
mov
sub
add
sahf
std
js,pt
sbb
xchg
jns
inc
insb
and
mov
xchg
or
gs
push
and
sbb
dec
dec
movsl
jmp
mov
call
cld
mov
mov
sbb
add
add
pop
bound
xchg
jmp
aad
dec
adc
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
cmp
xor
out
xchg
insl
xchg
or
nop
subl
cwtl
push
xor
call
mov
fistpll
mov
inc
mov
and
aaa
std
ret
addb
das
sub
cmp
ljmp
mov
fstpt
jo
jae
xor
sub
jl
int
ficoms
and
xchg
scas
shl
loopne
adc
out
xor
or
fs
je
ret
test
or
cld
cmp
shr
mov
mov
mov
mov
jmp
es
mov
les
xor
and
cmpb
addr16
movsb
movsb
sahf
mov
icebp
stc
out
sbb
dec
dec
dec
imul
xlat
cmp
dec
fwait
pop
cli
adc
aaa
xorl
add
ds
pop
cld
or
mov
push
jmp
inc
and
scas
bound
test
jbe
and
or
in
sbb
dec
xor
div
mov
xchg
cmc
cmc
lret
cs
lahf
loopne
mov
adc
cmp
sbb
fwait
xchg
cmp
cmp
or
push
aaa
push
push
ss
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
and
push
jg
jle
cmc
je
inc
xlat
and
jg
fidivrs
ljmp
xor
insl
enter
inc
mov
aad
pop
int3
mov
fiadds
jmp
jo
fstl
cmp
mov
repnz
jnp
mov
mov
xor
xchg
xchg
popf
jl
jb
cmc
sti
mov
adc
jl
adc
or
loopne
adc
cli
andl
mov
gs
sbb
out
xor
std
pop
add
mov
stc
push
xchg
fsubs
dec
in
fiaddl
jae
hlt
jle
jle
add
jo
clc
addr16
mov
xchg
jo
lock
mov
push
call
mov
and
pop
xorl
inc
ret
incb
shrl
lcall
adc
js
lock
ljmp
addr16
pushf
and
and
or
inc
jge
inc
loopne
lret
es
out
cmpsl
mov
add
stc
pop
loopne
shl
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
dec
mov
jle
push
jg
jle
jmp
insb
out
push
cmp
dec
leave
loop
repnz
lods
dec
iret
in
mov
or
loopne
cmp
lahf
je
cmp
sbb
push
jecxz
dec
iret
sbb
inc
jno
mov
push
fsubrl
ljmp
loopne
sti
xchg
cld
ljmp
add
pop
adc
add
fiaddl
das
and
mov
or
shlb
or
pop
push
shrb
pop
jns
mov
jbe
flds
adc
outsl
or
call
lock
pushl
fidivrs
mov
jg
aad
dec
andl
jae
fisttps
fwait
inc
bound
xor
imul
and
cmc
mov
inc
xchg
repz
hlt
xchg
sbb
outsl
popa
stos
gs
pop
mov
inc
loopne
cmpsb
mov
sbb
mov
jno
or
sbb
fdivr
insl
jmp
adc
push
jle
sti
aaa
fwait
jge
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
loope
daa
jle
push
jg
jle
dec
hlt
mov
scas
xor
cmp
roll
pop
pushf
outsl
imul
dec
mov
fbstp
mov
sar
roll
movsl
fnsave
jecxz
jg
xlat
sub
mov
into
ljmp
call
dec
sub
jecxz
inc
sub
and
xchg
imul
loop
outsl
std
cmp
call
nop
je
xor
icebp
cld
jbe
cmp
icebp
xchg
in
fcoml
or
xchg
sub
dec
pop
jmp
shll
xor
aas
add
les
xor
add
and
dec
and
mov
sub
pop
cltd
sbb
addr16
adc
aaa
loop
in
push
clc
outsl
push
hlt
arpl
fcoml
mov
sbb
mov
loope
jp
test
pop
cmc
jno
sbbb
xchg
dec
xchg
clc
sahf
add
or
dec
jg
mov
add
jbe
fcoms
push
je
mov
cwtl
ret
test
or
ss
sub
jb
push
adc
cmp
loop
mov
mov
sbb
push
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
cltd
xchg
sti
lods
add
jg
jle
xchg
lock
mov
inc
arpl
push
push
adc
xor
jne
sub
loope
jne
mov
stos
fsubr
add
mov
xchg
sti
xor
out
pushf
jle
les
add
fisttps
out
xchg
jmp
cmpl
add
notb
xor
cmpl
mov
sub
mov
icebp
pop
lock
loopne
movsl
mov
in
sbb
insb
mov
je
sar
in
mov
fs
lock
jbe
jge
je
cmpsb
jnp
js
iret
into
xor
mov
sbb
jmp
jne
repnz
loope
add
dec
jl
cmp
in
adcl
into
pop
xor
sbb
mov
mov
es
les
negb
pusha
pop
add
pop
mov
xchg
xchg
out
js
dec
push
jecxz
or
ret
xchg
jae
mov
adc
add
mov
movsb
pop
add
sahf
pop
dec
mov
pusha
mov
cmp
dec
and
shl
aad
iret
push
das
mov
lods
in
jmp
or
repz
rcrb
sar
mov
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
into
cmp
fwait
loopne
jle
lds
jle
ret
out
lcall
push
jae
cs
dec
js
or
mov
jg
xor
lahf
xor
ss
adc
sub
mov
jle,pn
mov
stos
push
mov
jmp
pop
lea
shll
frstor
hlt
adc
mov
or
pop
out
popa
imul
daa
mov
xchg
dec
pop
pop
scas
mov
daa
and
push
or
mov
subb
addr16
lret
stos
mov
sti
jb,pn
sbb
popf
sbb
mov
lds
and
sarl
sub
sub
pushf
cmc
into
pop
adc
inc
std
loope
or
xorb
js
das
jecxz
mov
mov
xor
push
repz
pop
mov
add
add
add
mov
xor
mov
mov
push
jge
pop
cld
dec
cmp
lds
ret
aaa
popa
xor
fimull
xchg
sub
pop
jle
shlb
lea
or
jg
fsub
loope
xchg
rorl
and
jmp
inc
sbb
out
les
pop
lret
lea
pop
cwtl
shrl
shrb
leave
xor
xor
add
jmp
jg
add
jns
cmp
sub
cmp
lds
jle
dec
fdivrl
cld
int3
adc
inc
push
jp
pushf
cmc
das
jmp
into
inc
lock
sub
or
mov
out
shl
fsubrs
test
mov
jle
fcoms
call
and
adc
dec
push
addr16
jmp
ljmp
pop
push
mov
shrl
jbe
add
pusha
xchg
xchg
sbb
xor
gs
pushf
jge
repnz
stos
or
cmpsl
jo
ljmp
xlat
mov
inc
jmp
aas
std
testl
inc
enter
mov
es
add
insl
outsl
xor
imul
repnz
jo
lcall
lfs
ret
insl
mov
icebp
cwtl
adc
xchg
add
sub
xchg
xor
dec
or
scas
sbb
nop
loop
mov
xor
subl
sbb
xchg
jecxz
bound
xor
loope
lret
mov
xor
jmp
pop
popa
adc
and
dec
xor
aaa
lods
imul
movsl
dec
fadd
pop
data16
incl
movsb
cmovl
shlb
sbb
push
scas
mov
pop
stc
inc
cld
mov
sti
mov
data16
or
rcrb
or
enter
int
addb
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
mov
fsubrl
cmp
lds
jle
inc
int
push
adcb
push
loope
inc
and
fstps
scas
add
leave
and
lcall
jno
lods
divb
inc
pop
ss
adc
stos
xchg
test
pop
jp
adc
sar
cli
adc
or
fs
shl
jbe
fsubrl
fs
stc
cmp
push
int3
jl
inc
je
cwtl
sbb
enter
dec
jge
lds
and
push
push
inc
jae
mov
and
pop
shlb
lods
dec
mov
sbb
sbb
jmp
adc
dec
mov
iret
daa
aas
pop
inc
cmp
in
and
or
sub
mov
push
fstpl
mov
push
jnp
xchg
bound
sub
mov
pusha
inc
mov
nop
pop
and
fwait
push
push
inc
out
mov
pop
jge
pop
jae
push
pop
jmp
js
into
cmp
dec
add
movsb
jae
mov
test
and
pop
scas
xlat
sub
ds
imul
mov
inc
lcall
pusha
push
leave
mov
dec
xor
outsl
xchg
test
cli
sbb
fidivs
fdivrl
test
fwait
sbb
fstl
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
pop
aad
icebp
jle,pt
mov
jle
sub
aaa
xor
mov
cmc
dec
pop
repz
neg
adc
mov
sbb
xor
jg
inc
push
sbb
cmp
and
xor
push
push
cltd
sub
inc
sub
cltd
scas
mov
icebp
lret
adc
in
jo
imul
dec
test
shld
cmp
fists
scas
mov
fcmovbe
cli
stc
aaa
mov
cwtl
mov
add
movsb
mov
test
jb
push
fwait
ret
aaa
dec
outsb
adc
fbstp
gs
testl
or
leave
cmp
sahf
mov
movsb
cmp
std
leave
mov
sbb
add
addr16
shrl
sub
cld
fdivrs
inc
pop
fstps
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
aas
push
out
aas
jle
mov
jle
add
or
jns
xchg
popf
jp
inc
jmp
notb
sub
lcall
mov
jmp
shlb
mov
push
xchg
add
fidivrs
push
out
xor
lods
test
out
movsb
dec
xor
lods
in
push
push
lcall
movsl
push
mov
add
mov
push
inc
cwtl
ret
mov
jae
mov
push
jnp
loopne
and
mov
nop
out
repz
fimuls
aad
bound
cmp
les
fistps
inc
jecxz
ljmp
adc
jmp
mov
dec
std
leave
sub
lret
sbb
into
dec
pop
into
out
outsl
and
repz
or
clc
movzbl
and
jmp
mov
stos
popa
jns
in
mov
movsl
jmp
jle
jle
jle
push
in
lock
push
das
push
adc
loopne
sti
xchg
cld
xchg
cmpsb
and
testb
cmp
cltd
mov
cmpsl
bound
mov
adc
sbb
cmp
ret
xchg
rorb
iret
mov
xor
sbb
cmp
xchg
xor
sbb
out
out
sub
and
cmp
repz
es
xor
jmpw
lea
mov
test
adc
aas
cmp
jns
add
push
sbb
xchg
mov
adcl
idivl
ja
mov
pop
outsb
mov
mov
dec
jbe
cld
fs
cmp
push
cli
daa
loopne
push
jg
jns
ds
or
dec
call
inc
add
inc
add
enter
cmp
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
jae
jecxz
cmp
jle
jle
jle
das
sub
xor
sti
outsb
sbb
test
pushf
push
and
mov
xchg
push
adc
push
cmpsl
add
mov
xchg
xchg
test
mov
outsb
sub
dec
les
mov
in
dec
cld
pop
fsubl
stos
push
jne
int3
inc
mov
stc
add
aad
push
jp
rol
mov
sub
fcomp
cmp
test
in
lea
mov
repnz
sub
gs
loop
mov
insl
out
mov
jp
jmp
mov
dec
xchg
sbb
pop
repnz
or
std
jbe
out
lret
test
mov
pusha
cmp
inc
cwtl
bound
ss
jle
sbbb
popl
or
add
xor
adc
incl
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
sahf
push
insl
xor
jle
jle
lods
call
xchg
fprem
aas
sbb
pop
jno
add
scas
and
mov
mull
cwtl
adc
outsl
shl
test
and
inc
jne
shlb
repz
fidivl
sub
pop
pop
rolb
dec
aad
mov
xchg
ljmp
into
mov
mov
cmpsb
mov
cmp
in
sub
icebp
faddp
add
scas
xor
cs
cmp
int
xchg
inc
inc
pop
in
xor
sbb
sti
loop
lods
out
aaa
fnstenv
out
mov
cmp
and
sub
lahf
sti
sbb
test
cmpsb
icebp
rclb
loop
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
cwtl
or
mov
jle
jmp
inc
sub
cwtl
lret
cmp
out
fwait
xlat
mov
popa
mov
jb
adc
inc
in
lret
xor
push
mov
addl
bnd
in
inc
push
sbb
ret
add
btc
push
xor
sahf
mov
ja
xor
mov
mov
jne
push
ss
mov
add
sub
or
scas
cmp
aad
in
rcll
pusha
test
jbe,pt
push
adc
xchg
add
push
in
push
jns
mov
cs
scas
cmpsb
xlat
into
lock
lods
shl
mov
and
out
mov
xor
dec
pop
aas
insb
movsb
std
inc
das
xchg
inc
sub
xor
popa
pop
ds
add
or
mov
cmp
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
cmp
jle
jle
jle
xor
jmp
or
pop
jge
lods
or
push
push
push
test
addb
mov
adc
push
inc
aaa
fs
push
xchg
mov
jb
mov
jo
sbb
add
cwtl
cmp
pop
mov
cmp
insl
pop
sub
cmp
je
sarl
and
lds
shlb
push
mov
lods
jo
out
loope
std
pop
cli
iret
inc
mov
inc
movsb
aaa
call
pop
out
repz
or
xor
andb
xchg
lea
test
ffreep
ret
and
cmpsb
sub
iret
fsubr
sti
mov
lock
dec
sub
push
mov
mov
leave
jo
pop
xor
xor
jno
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
mov
and
jns
jle
mov
jle
aam
lret
pop
negb
fnstcw
popf
xor
out
inc
adc
filds
test
mov
cmp
and
je
pop
fldl
lcall
xchg
jge
jmp
sbb
mov
stos
adc
shrl
loope
test
fwait
pop
push
mov
sbb
movsl
and
out
mov
popf
push
and
loopne
aam
pop
add
mov
jp
pop
dec
xchg
test
ljmp
jne
adc
std
aam
daa
fdivrp
xor
jbe
jno
filds
mov
inc
sbb
pop
push
dec
mov
inc
ret
cs
jbe
inc
cld
cmc
pusha
mov
adc
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
sub
mov
jle
cmpps
mov
cmp
sbb
push
call
inc
mov
dec
cmp
dec
inc
xchg
mov
imul
lahf
fcmovne
add
data16
jo,pt
mov
mov
rcrb
lea
stos
jle
mov
ret
dec
cli
lcall
pushf
pop
fnstsw
or
out
rcl
repz
add
sbb
push
stos
sub
lahf
mov
mov
fs
and
mov
mov
or
out
out
dec
pop
xchg
jecxz
movsb
std
data16
adc
pushf
ja
sub
xchg
push
icebp
in
dec
fsts
rcll
dec
int
inc
cltd
xlat
scas
jecxz
dec
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
repnz
jle
jle
jle
mov
cmp
test
shl
xor
mov
mov
stc
xor
add
in
les
and
jno
inc
rcll
and
jmp
shl
xchg
loope
inc
jne
ret
lods
popa
pusha
cmp
shr
cmp
shl
rcll
xchg
aam
aas
and
repz
ds
rcl
aaa
mov
xor
sti
hlt
xlat
or
adc
push
xchg
sbb
lahf
in
mov
daa
notl
xor
adc
sbb
stc
int
xor
fcompl
sub
push
pop
jb
out
das
pop
mov
int
dec
jne
repz
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
idivl
jle
mov
jle
mov
xchg
call
add
loope
lret
cs
scas
jne
stos
nop
leave
or
int3
pop
mov
in
wrmsr
add
dec
sbb
loop
jns
fidivs
sbb
xchg
and
int3
or
jae
push
daa
iret
xor
je
adc
xor
outsl
sbb
xchg
pushf
cld
mov
and
dec
leave
test
jo
je
mov
mov
jno
dec
imul
mov
or
pop
lret
shrl
scas
mov
and
insl
aam
rcr
adc
adc
stos
ja,pn
out
xchg
mov
mov
pop
or
xor
in
dec
cmpsb
into
push
mov
out
jbe
xor
mov
add
mov
mov
xor
add
mov
jmp
decl
xchg
loopne
daa
push
sbb
jle
mov
jle
inc
dec
cltd
cmp
repnz
mov
cld
pop
movsl
push
mov
cmp
xchg
add
or
jnp
cmc
push
xor
and
imul
mov
jg
jp
insb
cwtl
bswap
or
dec
popa
push
fisttps
scas
xor
pop
imul
aaa
or
mov
inc
pop
ja
xchg
cltd
sub
add
pop
xchg
jmp
insb
inc
sub
jb
lcall
sbb
clc
jnp
adc
xor
fwait
pop
imul
adc
cmp
mov
dec
out
out
sbb
lea
movsl
popa
adc
jecxz
dec
fnstcw
fnstsw
push
pop
or
pusha
sbb
imul
jmp
inc
loop
xchg
imul
lea
jle
mov
jle
or
scas
repz
push
mov
shlb
or
sub
lods
rcrl
stos
dec
sbb
adcl
mov
and
jp
js
fiaddl
xchg
xchg
out
popa
pop
pushf
out
call
or
adc
xchg
mov
clc
pop
inc
shl
popf
sub
push
or
ret
je
mov
and
or
xor
cmp
inc
out
negl
in
test
push
push
lea
clc
xchg
dec
add
inc
aam
ret
and
mov
xchg
adcl
adc
test
jge
insb
stos
jg
mov
push
sahf
mov
jge
jp
mov
xchg
rol
cld
popf
mov
mov
cmp
mov
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
push
and
jle
jle
jle
aas
push
outsl
mov
inc
push
mov
inc
pop
adc
cmp
dec
jnp
cmp
jcxz
xchg
out
dec
push
adc
jg
adc
pop
dec
jb
fsubrl
jo
or
mov
sbbl
frstor
fs
lds
fwait
sub
out
ja
pop
add
pushf
repnz
call
jl
sbb
jge
int3
push
pop
push
mov
inc
in
les
outsb
out
stos
cmp
cmc
bound
mov
idivl
aaa
jp
dec
cld
jmp
jno
add
sub
push
pop
lret
mov
sub
imull
pop
add
test
add
rcl
sahf
push
inc
fmulp
lock
in
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
xchg
mov
jle
mov
jle
or
sbb
sbb
mov
mov
imul
mov
xlat
nop
mov
sub
out
insl
popf
add
call
adc
mov
lahf
out
outsb
dec
shlb
jns
loope
mov
mov
xchg
icebp
lods
mov
add
dec
mov
in
adcb
daa
cmpsb
xor
scas
inc
mov
xchg
xchg
ret
xchg
xchg
and
stos
add
fisttpl
mov
push
daa
sub
lret
cld
cmpsl
sarb
cltd
add
fistpll
insl
dec
or
out
les
push
cmpsb
jae
mov
pop
adc
insb
xor
lds
dec
xor
int3
sti
or
pop
adc
or
sub
fidivs
lahf
jb
add
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
lea
imul
outsl
mov
cmp
iret
jp
iret
subb
stos
pushf
push
idiv
cld
and
neg
jne
sub
jecxz
jge
insb
ret
imull
and
mov
sub
cmp
fwait
and
jp
pop
test
mov
lret
jl
mov
add
jg
daa
push
fwait
push
mov
fiaddl
jl
dec
cli
adc
mov
loopne
outsb
sub
cmp
cmp
loope
shll
or
mov
push
rcr
xor
aam
mov
clc
test
out
lahf
add
scas
mov
push
sbb
cmp
js
inc
data16
inc
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
push
xchg
mov
mov
jle
mov
leave
adc
popf
or
jge
jbe
movsb
adc
pop
mov
add
dec
and
xchg
or
xchg
fsqrt
mov
jnp
into
jg
pop
mov
out
dec
cmp
out
leave
shlb
enter
sbb
inc
into
or
iret
aam
pusha
cmp
mov
fcmove
push
test
pop
cld
mov
mov
add
ljmp
mov
js
mov
add
mov
ljmp
pop
in
jecxz
mov
fdivrl
cmp
imul
imul
add
es
jns
xchg
movsl
cmp
sahf
cmp
xchg
xchg
adc
bound
xor
jmp
popa
jno
jnp
jnp
or
and
or
jle
mov
jle
sbb
inc
mov
outsl
fdivrl
out
sub
pop
push
cmpsb
dec
sahf
and
sahf
or
in
xchg
rcr
or
scas
loop
mov
cmpl
sub
xchg
mov
lea
inc
cld
test
xlat
ret
sahf
aad
sub
dec
mov
cmp
push
stos
dec
aaa
movsl
xchg
fiadds
adc
inc
pop
rcll
xchg
cli
pop
mov
sub
pop
std
lock
pop
xchg
aaa
js
loope
jno
push
dec
sbb
sub
dec
in
ret
inc
cmpsl
mov
in
and
test
mov
and
lock
hlt
mov
fimull
cmpsb
popf
bound
fldt
inc
out
lods
or
enter
sub
inc
cmp
jmp
test
xchg
push
stos
push
push
gs
and
jle
mov
jle
test
pop
in
jo
jne
dec
lods
and
pop
push
push
adc
fistps
movsl
lcall
inc
dec
push
fisubs
and
or
inc
and
je
icebp
test
jle
es
movsb
test
cmp
cmp
popa
mov
incl
mov
int3
xchg
sahf
cmp
repz
mov
fildll
call
and
in
inc
adc
scas
popa
or
xor
fxch
into
jne
mov
add
shlb
or
add
jb
pop
mov
ret
mov
sub
adc
fcomps
jbe
sarl
sahf
jo
cli
add
in
dec
fimull
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
xchg
cmp
repz
or
ds
hlt
dec
in
ret
mov
jmp
in
and
mov
in
push
lods
mov
xchg
push
jo
push
in
sbb
jns
test
sbb
mov
insb
pop
clc
out
jae
ss
addr16
popf
ffree
mov
stos
in
inc
lcall
ds
sbb
mov
rol
mov
shll
stc
add
push
sbb
sbb
sahf
movsb
adc
je
jno
push
mov
mov
jbe
outsl
mulb
jnp
fs
and
xor
mov
mov
adc
xchg
xchg
in
pop
sub
mov
mov
fs
sbb
push
pop
enter
inc
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
