push
mov
sub
mov
mov
jmp
adcb
shrl
add
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
fdivs
pop
ret
or
movsl
and
mov
fidivs
adc
cmp
push
and
lahf
jo
push
inc
xlat
jne
adc
push
rcll
jno
lcall
push
comiss
mov
push
imul
ja
loope
push
pushw
xlat
sub
es
dec
add
and
dec
out
mov
lret
mov
inc
hlt
jmp
das
sub
mov
dec
sub
mov
pusha
or
cmp
repnz
sbb
adc
mov
ret
bound
push
fcmovnu
in
mov
pop
jns
push
cmp
jno
mov
jno
inc
xor
out
gs
xor
sbb
bound
and
sarl
xchg
shll
repz
fwait
add
std
xchg
pop
div
cmp
sub
sarb
rclb
icebp
repnz
lds
leave
ror
xor
mov
add
push
push
xchg
in
fadds
popa
pop
inc
sbb
add
adc
cmpsb
sub
mov
xor
lcall
lret
push
jo
fidivl
xor
mov
int3
rorb
mov
clc
incb
pop
push
add
adc
push
mov
aaa
cli
pop
mov
jmp
in
in
test
and
clc
dec
insl
rorl
popf
cmp
xor
gs
pop
scas
mov
lahf
scas
add
adc
in
push
ret
in
fsub
mov
daa
gs
jno
out
lret
or
xchg
xchg
mov
jb
xchg
mov
les
cld
dec
push
lret
jle
dec
add
and
test
lods
pop
jg
jb
loop
and
sub
jg
lahf
and
dec
push
aas
popl
clc
adc
cltd
ja
aaa
push
int3
cmpb
ss
lahf
pusha
loopne
ret
pop
hlt
gs
dec
shll
stc
push
push
jecxz
mov
jmp
pop
mov
pop
mov
fstps
mov
sbb
xchg
pop
or
adc
loope,pn
cmp
sbb
xor
cmp
subb
mov
outsb
sahf
test
and
cwtl
movl
pop
mov
jb
sbb
xor
cmp
pop
inc
dec
dec
shrl
cmp
dec
flds
cmc
jbe
in
js
jge
push
and
into
insb
hlt
loopne
aam
or
imul
jmp
ret
push
rcrl
inc
jp
add
or
fisubl
inc
into
les
aam
add
aaa
or
and
dec
pop
push
push
dec
push
jnp
fildl
mov
jns
pusha
pop
sub
jp
imul
cld
sbb
fidivrs
xchg
mov
js
or
in
addb
xor
inc
fistl
push
test
adc
xchg
scas
ds
pop
cltd
pusha
cli
jg
popf
test
mov
mull
mov
aaa
addr16
or
jle
mov
test
cltd
dec
sub
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jge
jle
jge
jle
jmp
shlb
xchg
xchg
dec
or
js
fwait
bound
inc
xchg
mov
in
test
js
testb
lcall
adc
jmp
in
or
push
insb
in
stc
fisubs
insb
lock
bound
push
push
js
dec
mov
push
int
pop
push
jmp
clc
jae
mov
or
sbb
stc
adc
dec
dec
aas
loopne
xchg
aaa
push
fs
xchg
movsl
jnp
xor
push
xorb
in
rolb
xor
xor
xchg
inc
jmp
sbb
lret
rclb
sub
adc
imul
lea
subl
mov
pusha
adc
scas
and
and
xchg
lcall
pop
std
add
mov
xor
ljmp
sbb
pop
sbb
jge
test
fiadds
fs
popf
mov
dec
jno
insl
out
cmp
jnp
imul
mov
add
popa
dec
rolb
dec
mov
insl
fidivs
pusha
in
andb
inc
cltd
xlat
jg
inc
imulb
xor
das
push
sub
lods
popf
push
sub
movsl
xchg
mov
jnp
mov
hlt
fwait
xchg
imulb
stos
mov
fs
cmp
repz
mov
push
mov
xchg
les
adc
jnp
int3
push
imul
test
mov
lock
xchg
sub
test
push
imul
jp
pop
xor
cwtl
jmp
sub
cld
cmpsb
mov
cwtl
call
sub
out
cmp
nop
inc
rolb
cwtl
pop
lods
pop
xchg
int3
shlb
and
pushf
sbb
rorl
mov
lods
sahf
push
pop
pop
ss
int3
mov
add
xor
push
test
pop
out
xchg
fadds
in
lret
mov
mov
inc
imul
add
xchg
pop
push
mov
into
xchg
daa
sbb
mov
adc
inc
inc
lods
ficoms
lods
dec
mov
xchg
xchg
and
cs
mov
mov
cmpsl
fwait
pop
sub
leave
cld
in
cmp
and
push
outsb
push
movsl
outsb
es
cmp
add
pop
sti
sbb
test
push
inc
les
cmpb
push
jae
and
jecxz
hlt
push
mov
ja
lret
xchg
xorl
or
ret
mov
jno
js
lea
int
adc
loope
mov
jae
push
xlat
jle
std
aad
mov
jne
push
mov
cmpl
inc
add
xchg
adc
fidivs
xchg
sbb
push
mov
inc
cld
hlt
je
mov
icebp
sub
pop
jp
sbb
rclb
fwait
loop
jmp
and
out
leave
add
int3
sub
out
gs
or
cmp
push
adc
adc
stos
popa
dec
iret
insb
nop
jbe
imul
clc
shlb
ret
loopne
fsubrl
leave
sar
adc
addr16
sub
aas
push
testb
stos
xchg
pop
data16
adc
ret
fwait
shr
data16
pop
mov
dec
lods
lods
outsb
cltd
out
in
lds
pop
xor
cmpl
out
jbe
inc
inc
xor
insb
clc
add
mov
stc
inc
ljmp
sub
cmp
add
xor
jg
sub
mov
loope
ja
mov
imul
negl
pop
dec
xor
inc
push
mov
imul
sbb
ficomps
add
nop
sbb
mov
fs
lcall
test
or
dec
push
cmp
movl
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
pusha
das
sbb
jns
jle
jge
jle
shl
xchg
cmp
bound
in
and
ljmp
call
pop
mov
dec
fsubrl
cmp
and
xchg
and
xor
mov
jbe
popf
jns
jne
lods
jbe
test
dec
mov
mov
inc
xlat
fldenv
cmpsb
add
pop
jl
jg
dec
xchg
sub
xchg
int
jae
mov
pop
and
outsl
xchg
js
das
cmp
pop
cmp
sbb
fstpl
sub
sbb
push
sti
add
test
fxch
jnp
mov
push
and
orb
pop
add
push
pop
std
push
data16
ret
mov
xchg
mov
or
rorb
sub
mov
dec
insl
out
cmc
test
jg
fisubrl
jne
mov
sub
ffreep
fimuls
dec
rcrl
sub
xchg
scas
push
or
shr
sub
inc
sbb
insb
xchg
fadds
push
call
jne
mov
or
or
lahf
lcall
mov
pop
lsl
fnstsw
jns
or
or
and
fistpll
xchg
call
scas
addr16
repnz
and
push
mov
iret
cmp
or
mov
sbb
and
in
mov
jbe
mov
test
scas
xchg
lods
jb
jmp
mov
jmp
pop
xlat
insl
push
jp
cmpsl
fmul
xchg
movsl
sbb
jecxz
in
cli
dec
inc
mov
jmp
mov
cs
mov
xor
lret
sub
mov
sbb
dec
sbb
add
inc
outsl
leave
mov
repnz
add
lock
adc
inc
xor
sahf
lea
sbb
mov
lea
cmp
pop
and
or
imul
clc
aad
cltd
jge
add
data16
icebp
popf
out
test
adc
js
inc
inc
xor
movsl
inc
xchg
mov
stc
adc
lds
xor
cmp
mov
inc
cmc
xchg
dec
or
or
mov
nop
idiv
mov
je
enter
mov
mov
test
mov
test
dec
push
adc
inc
sub
sub
pop
out
cmc
inc
xchg
mov
sbb
xor
xor
mov
mov
xchg
jbe
cwtl
push
push
mov
dec
push
push
xor
pop
rorl
stos
insb
fcmovnbe
cmp
jmp
adc
jle
ret
in
lret
and
stos
xor
arpl
pop
fs
push
or
mov
pop
sbb
and
xchg
sub
mov
and
adc
scas
aam
es
pushf
mulb
xor
xrelease
aas
ret
mov
ret
adc
divb
dec
rcl
pop
inc
int
push
xchg
mov
scas
inc
loope
femms
cld
cmp
int3
incb
push
cld
rorb
call
rcrb
dec
push
aam
jnp
jl
push
push
mov
mull
stos
negb
roll
call
cltd
int3
jecxz
and
push
and
loopne
out
mov
mov
cli
shll
mov
add
or
sbb
sub
sub
cmpsb
repnz
popf
clc
xor
mov
sub
pop
sahf
inc
es
add
outsl
mov
mov
mov
pop
fists
ds
push
orl
sub
je
rorb
lahf
jmp
out
jg
mov
out
sarb
test
push
add
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
fwait
mov
jle
outsl
jge
jle
add
shll
jae
das
insl
pop
add
stc
mov
adc
mov
pop
popa
cmp
aad
mov
add
mov
aaa
jo
pop
mov
push
aas
mov
jecxz
addl
mov
cmpb
addr16
and
ret
push
sahf
outsl
mov
pusha
add
pop
sbb
or
pop
jo
add
sahf
sbb
icebp
ret
popa
lds
nop
repnz
addr16
lods
push
sub
stos
sbb
inc
subl
push
loopne
and
mov
xor
or
mov
mov
ffreep
aas
add
lea
mov
ficoml
loopne
inc
mov
cltd
xchg
lea
dec
inc
xchg
jg
push
lahf
push
mov
outsl
std
ds
mov
aam
push
popa
xchg
fldenv
jge
jb
out
and
popa
pop
lea
mov
push
repz
lret
push
stos
into
sbb
ret
xchg
pop
shufps
loope
pop
inc
fistl
fadd
push
cli
adc
push
dec
bound
imul
inc
popf
lds
cmpsb
nop
sub
shl
ljmp
pop
test
mov
add
mov
into
and
add
pushf
or
mov
push
cmp
cmpb
ss
ljmp
sub
mov
aam
fldt
testl
flds
outsl
or
icebp
adc
dec
popa
pop
dec
decb
inc
scas
dec
push
sahf
cld
repz
scas
cltd
ret
push
sbbb
jae
popa
and
adc
cmpsl
rcrb
jecxz
push
lock
cmp
push
sub
stos
lock
cmp
mov
imul
pop
inc
stos
and
add
sub
cld
lret
mov
xor
ljmp
push
loope
hlt
dec
int3
dec
pop
adc
popa
ljmp
sarl
push
jl
xchg
out
ret
inc
adc
adc
rcll
xlat
pop
popa
test
push
cmpl
jnp
test
add
jae
es
pop
dec
xchg
push
dec
mov
ret
lret
or
hlt
dec
push
and
loopne
jns
ret
push
jno
xor
vsubpd
pushf
in
test
sub
sarl
jo
cs
jmp
pop
xchg
push
or
inc
pop
mov
cmp
imul
jl
mov
mov
cmp
adc
loopne
cli
cltd
mov
sbb
aad
and
jae
pop
push
scas
mov
sbb
out
push
sar
jl
push
pop
mov
pop
add
cmpsb
and
jnp
in
testb
js
cmpsl
ja
std
inc
mov
fwait
cmp
pop
mov
int
mov
mov
loopne
stos
dec
pop
sub
lock
jbe
daa
imul
int3
cmp
movsl
out
test
lods
xchg
dec
pushf
inc
outsl
adc
mov
add
les
test
mov
sub
cwtl
mov
fiaddl
push
lods
mov
add
push
stos
outsl
mov
inc
les
push
ret
push
ret
or
das
mov
shrl
xor
fwait
dec
pop
out
mov
inc
xchg
fstl
inc
cwtl
xchg
push
xchg
push
aad
adc
ret
dec
sub
fnstsw
dec
jl
test
mov
leave
xor
cmpsb
and
cmp
cmp
mov
push
out
push
adc
inc
push
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
test
jle
outsl
jge
jle
lock
out
scas
jp
cmp
mov
aaa
icebp
fisubrs
jbe
inc
enter
mov
cmp
adc
fwait
adc
mov
loopne
and
sub
push
leave
lods
jmp
dec
adc
out
imul
popf
insb
pusha
ljmp
clc
shll
jecxz
fnstcw
jecxz
fwait
xchg
addr16
mov
test
and
sbb
mov
push
add
fs
out
jg
and
push
test
fucom
xlat
jge
sahf
inc
movl
loop
mov
es
sub
int3
pop
orb
and
dec
loop
xchg
pop
xor
stos
mov
cwtl
mov
push
call
das
arpl
lcall
dec
pcmpgtw
lret
mov
mov
aas
dec
call
cld
aas
pop
outsb
mov
rcll
insl
add
shlb
adc
int
or
lret
test
pop
push
fiaddl
pushf
fldt
lock
fadd
push
sahf
push
fbstp
and
pop
in
sub
pop
or
jecxz
test
fyl2xp1
scas
xchg
push
aas
adc
into
sbb
push
test
sub
and
or
loopne
dec
or
hlt
adc
xchg
call
hlt
mov
dec
push
jmp
mov
rolb
push
dec
mov
and
xchg
cmpsl
xor
add
and
push
push
lcall
fwait
dec
xchg
fcomps
dec
mov
or
xchg
xor
stos
sti
out
mov
jb
cmp
xchg
mov
cmp
ds
fsubrp
dec
inc
mov
enter
nop
and
out
cmpsl
xor
xchg
into
in
movsb
notl
std
leave
and
mov
fmulp
js
dec
adc
insl
pop
gs
sub
rcrl
std
sbb
fcompl
xor
add
mov
inc
or
lods
xchg
fstpl
cmpb
inc
and
xor
mov
jb
punpckldq
mov
adc
testl
pushf
loop
xor
out
sbb
enter
lock
add
scas
xor
pop
or
cltd
daa
insb
nop
sub
inc
fildl
or
scas
cs
sbb
xchg
in
movsb
je
inc
adc
pop
in
or
xor
mov
mov
aas
jno
cmp
dec
rcll
sub
push
punpckhdq
dec
shl
loop
xor
jne
jae
negb
cs
inc
mov
testb
cli
jnp
jo
mov
mov
mov
je
and
xchg
into
and
push
js
push
ret
inc
pop
sbb
mov
stos
call
push
or
aaa
mov
mov
roll
push
loope
cli
push
xor
movsb
adc
sbb
int
xor
cmp
lcall
xor
mov
pop
dec
xor
and
inc
sbbl
cltd
push
cld
inc
lahf
mov
xchg
push
aam
in
dec
call
rcrl
test
push
dec
repz
das
add
mov
ljmp
pop
out
push
adc
jmp
icebp
aaa
jg
mov
sti
loope
push
jbe
cmp
jge
sti
inc
pop
jmp
mulb
mov
fwait
cmp
pushf
sbb
push
xchg
dec
into
mov
js
loopne
cs
push
push
imul
pop
ret
mov
loopne
fisubrl
jmp
push
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
mov
xchg
cli
mov
dec
les
sub
ret
stos
and
sub
mov
inc
dec
sub
and
sub
push
sbb
cli
adc
mov
fstl
xchg
inc
test
movsb
or
mov
imul
popf
jmp
cmp
jns
scas
les
fldcw
out
jmp
mov
out
mov
cmp
jecxz
lods
and
mov
ss
dec
scas
pop
pushf
or
fwait
pushf
push
dec
aam
push
adc
pop
mov
cmp
imul
repnz
sbb
scas
push
dec
repz
fld
in
adc
imull
ss
mov
mov
pop
int3
pop
fimuls
lods
sub
jno
push
add
push
neg
sub
setns
daa
jne
mov
xchg
flds
add
jp
aas
sahf
pop
jmp
add
popf
sarb
aad
lds
mov
xor
cs
xchg
in
mov
test
adc
sbb
mov
and
ja
adc
enter
lcall
cmp
xchg
sbbl
pop
sbb
and
aad
stos
inc
movl
gs
or
jmp
inc
in
inc
pop
sti
push
stos
xor
or
xchg
cmpsl
xchg
sbb
sti
cmc
xor
out
clc
or
dec
ss
and
pop
pop
push
pop
aad
push
aad
mov
and
in
sbb
lock
negb
xor
pop
movsb
fbld
jae
push
sbb
jns
pop
xor
bound
test
mov
movsl
adc
xor
xor
iret
xor
lods
js
mov
push
int
insb
mov
hlt
inc
notb
loope
pop
test
jecxz
ljmp
xor
imul
push
jecxz
xor
pop
adc
movsl
ret
push
ss
dec
int
cmp
hlt
push
popa
ds
pop
les
in
fidivrl
mov
clc
push
gs
hlt
mov
ret
pop
out
lahf
test
pop
add
dec
in
in
xor
aam
mov
jnp
out
inc
or
sbb
fwait
mov
ss
test
jmp
clc
adc
mov
sbb
mov
adc
mov
orb
cmpsl
out
inc
pop
lahf
shll
jb
cwtl
sub
dec
sbb
cli
cmp
out
inc
rorb
les
in
inc
jae
in
movsb
adc
jo
jg
or
sub
cwtl
and
pushf
lds
cmp
sbb
fdivrs
loopne
fs
pop
or
test
pop
popf
inc
sbb
cmpsl
mov
pop
popf
xchg
push
lahf
popa
fwait
hlt
mov
dec
rcll
inc
aas
push
xchg
ret
and
mov
jmp
dec
mov
paddusb
loopne
stos
scas
movsb
hlt
mov
rolb
inc
and
mov
push
call
jmp
mov
ret
shlb
inc
jl
and
mov
sti
mov
or
fdiv
jp
arpl
ss
push
out
jge
lods
xchg
lods
iret
or
into
mov
sub
lea
call
aaa
cmp
fwait
jecxz
gs
hlt
adc
or
lahf
arpl
es
imull
dec
test
add
mov
pop
xchg
stc
adc
es
aad
sub
sbb
imul
mov
push
cli
js
and
jnp
dec
or
out
iret
sbb
in
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
dec
add
jge
jle
jp
and
sbb
ret
add
subb
sub
out
push
inc
mov
add
pop
push
mov
jg
mov
jno
lret
imul
fidivrs
cmp
jae
mov
dec
jbe
ret
mov
repz
movsl
sub
sub
popa
insl
add
pop
inc
loop
jns
or
outsl
fisubrl
scas
loopne
arpl
aad
rcl
and
add
push
push
mov
add
xchg
loope
push
call
inc
add
jno
aam
cltd
sub
enter
fdiv
cmp
sarb
mov
hlt
push
and
cmpsb
sbbl
cmp
jmp
mov
testl
sar
insl
cs
das
rol
insl
into
dec
adc
test
cmp
out
or
sbb
icebp
sub
shrb
inc
cli
adc
mov
cmc
call
inc
pop
das
mul
xor
stos
in
pop
aam
fistpl
cmp
push
repz
and
cltd
aam
nop
filds
mov
push
fiadds
subb
jne
or
movsl
adcb
push
scas
lds
outsb
mov
and
sar
fs
or
stos
adc
ror
inc
outsb
loopne
adc
mov
mov
lea
sub
ret
xor
hlt
pop
xchg
out
std
jnp
mov
and
and
pushf
push
adc
hlt
lock
insb
xor
jno
mov
pop
test
dec
jae
scas
daa
or
sbb
pop
in
adc
fldl
lret
mov
jecxz
xchg
das
fildll
add
cmp
jo
sub
fimuls
xor
inc
cmp
jno
outsb
xlat
inc
lods
andl
out
aas
lcall
outsb
xchg
mov
pop
sbb
dec
dec
mov
in
ret
xchg
fisttpl
in
daa
pop
inc
testl
in
inc
call
pushf
loop
cld
fsubrl
call
mov
xor
stos
scas
jae
cmpsb
inc
mov
sbb
movsb
mov
sub
call
push
dec
stos
mov
ret
mov
mov
cmpsl
push
aaa
cwtl
and
pop
push
lds
dec
or
nop
ret
lock
xor
or
push
clc
inc
cmp
jns
push
add
or
jmp
cmp
ljmp
mov
aas
ret
sti
lods
je
in
js
arpl
loope
ja
out
xchg
leave
sub
push
mov
pusha
arpl
adc
scas
pop
add
je
sar
dec
aam
mov
cmp
divb
add
dec
mov
xorl
cmpsl
xor
jns
mov
mull
sbb
sbb
daa
imul
jo
pop
adc
cld
data16
xchg
hlt
sub
fwait
add
dec
fldenv
ret
xchg
xchg
stos
out
pop
inc
and
cmp
fistpl
pusha
sub
push
fildl
and
push
scas
popf
arpl
test
or
std
clc
fwait
out
adc
les
dec
push
jecxz
loope
mov
mov
or
xor
or
and
xor
jnp
cmp
or
jge
push
dec
mov
repnz
loop
add
jne
push
hlt
push
lret
xchg
test
fwait
test
out
cli
mov
icebp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
sbb
jle
outsl
jge
jle
sub
call
sub
les
mov
es
cmpsb
psrld
adc
jb
inc
aad
in
xchg
cmp
test
dec
ljmp
xchg
addr16
adc
imul
mov
repz
mov
stc
fisttpl
ljmp
lcall
add
ds
in
repz
mov
nop
cmpsl
jg
imulb
aad
adcl
sbb
push
push
inc
xor
icebp
popl
in
scas
sbb
xor
dec
cmp
lcall
sub
in
insl
jecxz
clc
jmp
fidivrl
pusha
mov
push
popf
push
fs
popa
lock
cmp
push
or
fstps
dec
inc
sub
add
bound
pusha
divb
jne
push
outsl
jl
adc
rcrl
fidivrs
ss
loope
push
test
adc
negl
or
jle
jl
out
lds
sbb
push
jecxz
or
jl
pop
sbb
imul
dec
imull
sarb
rorb
into
lea
sub
int3
data16
fisubl
mov
jbe
jmp
popa
outsb
mov
cmp
cltd
mov
sbb
mov
push
inc
nop
andb
mov
adc
dec
adc
outsl
mulb
jb
lret
data16
sahf
mov
mov
mov
xor
dec
dec
adc
xor
mov
adc
and
cmpsb
and
adc
and
fadd
lock
dec
imul
bswap
push
rcrl
push
mov
jo
sub
lods
push
mov
ja
jns
cmpsl
ljmp
sub
pop
xchg
mov
pop
das
push
arpl
aam
das
push
stos
cli
into
adc
lcall
ds
out
fstl
push
pop
testl
sub
pop
fadd
test
jp
out
mov
pop
loope
mov
shlb
sbb
out
lret
leave
mov
repnz
dec
add
sahf
fwait
sbb
fsubrs
and
xor
dec
jnp
cmp
jb
jne
pop
cmc
in
leave
or
push
add
xchg
in
mov
into
fimull
inc
mov
addb
xor
lock
pop
mov
jg
out
sbb
mov
mov
xor
call
push
dec
or
cmp
mov
lea
cwtl
sahf
hlt
test
sbb
imul
loope
mov
pop
sbb
lret
xchg
fcmovb
push
daa
es
mov
push
test
fdivs
sahf
lretw
loop
jae
inc
pop
shl
lods
jl
mov
mov
xlat
movsb
cli
leave
cmp
xor
popa
ret
dec
test
xchg
pop
mov
jnp
fucomp
shl
mov
pop
push
mov
push
and
loope
lock
ja
xchg
nop
in
hlt
aad
cli
dec
jle
inc
xchg
loop
mov
cmp
mov
adc
adc
out
dec
ds
enter
add
mov
ljmp
sub
fistpll
lahf
add
je
inc
mov
add
fwait
pop
cmp
pushf
fwait
add
push
ja
sub
lret
pop
cmp
inc
mov
fnstsw
aad
adc
out
and
test
inc
rcr
inc
jg
jb
and
test
mov
add
mov
stos
pushf
mov
and
adc
mov
lods
push
pop
stos
adc
inc
adc
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
sub
jle
outsl
jge
jle
scas
push
cmp
jb
push
mov
fmulp
jmp
adc
xchg
and
xor
test
lock
mov
inc
pop
sbb
aas
sbb
stc
lcall
cmc
test
or
shr
addr16
outsb
adc
mov
adc
and
dec
jmp
out
es
mov
pop
cld
mov
mov
rcrb
mov
mov
orl
lcall
push
inc
push
xor
adc
mov
mov
orb
shlb
xchg
jo
xorb
test
add
imul
sbb
js
ret
lret
int3
out
outsb
xchg
repnz
jp
xor
sub
and
mov
lds
inc
mov
cld
prefetch
or
mov
xor
cmc
aam
jb
inc
dec
jb
cmp
lods
fstpl
pushf
test
mov
sbb
in
outsb
in
mov
xchg
stc
sahf
jecxz
lds
pushf
mov
inc
hlt
test
pop
jmp
les
leave
mov
arpl
xchg
jno
lret
mov
sub
fs
mov
sbb
lcall
fsubrs
fdivrs
insl
mov
cmp
xlat
aad
pop
push
stc
stos
cmp
insb
pop
dec
imul
or
iret
stos
dec
mov
cmc
in
push
jmp
jbe
shll
roll
stos
sub
jmp
mov
scas
push
stos
push
cmp
movsb
xchg
push
in
mull
jecxz
in
aas
pop
loope
js
mov
mov
mov
lcall
mov
fstl
xchg
sbb
xor
inc
hlt
pop
aam
mov
mov
out
stos
mov
ljmp
push
outsl
lret
cltd
cmp
adc
rcrb
leave
push
add
aam
xor
out
aam
nop
xor
fimull
fsubrs
sbb
popf
insb
adc
lds
loopne
adc
lret
jg
jno
fisttpll
mov
push
fs
inc
lds
andb
fadds
jo
addr16
cmp
add
insb
cs
imul
ret
lahf
adc
gs
fmulp
jbe
sub
inc
test
cld
mov
xchg
outsb
aaa
icebp
stos
mov
xor
dec
push
jmp
mov
xor
aas
daa
sbb
xor
mov
fistpll
in
sub
dec
fdivs
mov
fdivrs
sub
test
loop
lds
imul
idiv
sti
movsb
jge
xchg
out
stc
cmp
pushf
pop
pushw
dec
jl
cmpsl
aaa
cmpsb
scas
push
jecxz
subb
mov
xor
add
enter
adc
cld
xlat
and
pusha
or
iret
pop
xor
xchg
pushf
push
outsb
pushf
ret
cmc
sub
lods
mov
mov
push
push
pop
mov
xor
fcomps
mov
cli
sbb
outsl
jno
mov
std
repnz
gs
and
and
out
cmc
imul
fwait
xlat
dec
pop
xor
insl
es
mov
enter
addr16
mov
xchg
add
std
jl
loop
jno
pop
fcomps
jne
mov
nop/reserved
lret
sbb
cmp
add
jo
fs
mov
lds
push
jno
leave
rolb
lock
mov
sbb
loope
inc
push
aaa
pushf
je
xlat
xchg
push
in
mov
and
xchg
bswap
rcl
fisttps
inc
adc
sbb
ficoml
jbe
int3
popa
xor
xor
xlat
daa
sub
es
push
rcrb
lcall
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
je
icebp
fwait
negl
jle
jge
aad
mov
daa
out
insl
or
loop
icebp
add
outsb
inc
fimuls
pop
cmpsb
adc
mov
sti
and
jl
int3
inc
lock
repz
xlat
pop
ljmp
dec
aas
jbe
insl
add
movsl
dec
insl
ret
adc
lret
mov
or
in
xchg
mov
outsl
jne
cmpsl
jp
aad
mov
xchg
leave
push
iret
aas
sbb
mov
fstpl
cmp
pushf
and
fnstenv
mov
dec
cld
jg
ret
lock
xchg
adc
movsl
sbb
push
or
aas
pop
scas
mov
push
jmp
adc
and
mov
or
pop
ljmp
pop
inc
lods
mov
insb
ja
int3
push
pop
xchg
aam
cli
adc
inc
mov
insb
movsl
inc
call
filds
imul
and
pop
pop
jno
ljmp
push
out
out
fucom
in
rorl
jnp
lret
xorb
shll
mov
and
mov
int
lret
mov
mov
jb
cs
cmpsb
movsb
add
aad
lea
ret
jp
add
ljmp
and
aad
dec
cmp
jae
lods
lcall
imul
mov
shl
pop
negl
mov
sbb
stos
fwait
add
add
stc
or
scas
adc
jo
add
fdiv
adcl
jle
in
inc
arpl
mov
push
sbb
adc
cmp
popa
outsl
aas
inc
mov
daa
sub
push
push
push
fistl
sti
imul
pop
dec
orl
in
out
add
rcr
and
cltd
sahf
mov
test
test
out
ja
sub
pop
gs
ds
jmp
repnz
psubsb
sub
jno
jp
decb
shl
sbb
js
jmp
mov
fisubl
jmp
leave
mov
clc
call
repz
inc
fisubs
ffreep
std
in
aam
jno
loope
fdivrl
test
sub
mov
pop
lahf
sahf
jbe
ret
insl
push
pushf
negl
sub
sbb
lock
negb
test
and
mov
adc
negl
push
popa
int
mov
add
pop
jo
push
mov
shl
jle
mov
mov
fildll
or
call
jb
icebp
jmp
lock
shlb
fwait
push
xchg
std
adc
imul
fisubrl
in
add
pop
cmc
or
mov
push
aam
rcr
cmp
xchg
popf
les
inc
mov
scas
push
scas
push
shll
in
mov
jne
rcr
push
aam
mov
cmpsb
neg
bound
fcomip
push
inc
pop
jo
stos
sub
jge
movsl
sbb
or
xchg
xor
hlt
arpl
push
outsb
fucomi
test
mov
popf
xlat
pop
sbb
sbb
xchg
add
xor
or
test
fidivl
scas
xchg
dec
sub
xchg
incb
cmp
xor
dec
dec
jnp
js
jg
in
cmp
ljmp
int
lcall
add
xchg
fiaddl
neg
and
enter
push
fisttps
sarl
xchg
or
sbb
movsb
sub
sti
cmp
xlat
cmpsl
or
test
mov
mov
adc
leave
in
jns
dec
mov
jns
cmp
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sbb
outsl
jge
jle
dec
adc
mov
orl
and
iret
daa
adc
rcr
stc
xchg
mov
add
es
std
cmp
icebp
stc
loop
loope
in
out
rcll
cmpl
inc
xor
sti
movsb
pop
xchg
cmpsb
fmuls
imul
mov
pushf
lds
jns
stos
test
mov
loope
test
dec
out
jg
cmp
xor
mov
clc
cwtl
sub
or
mov
or
fwait
inc
es
xor
shlb
cmp
sub
ret
or
cltd
adc
xor
jmp
ja
inc
dec
push
scas
ret
xchg
dec
test
notb
pop
roll
ja
in
ret
fnstsw
sbb
inc
push
dec
mov
dec
adcl
xor
outsl
push
insl
jno
cmp
cmp
xor
add
pop
mov
inc
imul
ror
negl
lock
and
sub
fbld
mov
mov
insl
mov
pop
movsl
push
mov
mov
jp
inc
ret
xchg
fcmovne
test
or
jp
cs
dec
mov
xchg
inc
inc
add
pop
out
or
mov
mov
adc
popa
lcall
add
in
adc
sti
or
pop
sub
lret
data16
cwtl
test
adc
js
cmpsb
mov
adc
jnp
inc
cmpsl
in
fs
enter
xchg
sub
lods
mov
mov
lea
sahf
rolb
inc
mov
xor
xchg
or
lock
mov
xchg
pop
adc
mov
inc
pop
xor
les
sbb
sbbl
add
sarl
or
pusha
sbb
or
in
sub
sti
sub
sbbb
sbb
mov
mov
insl
dec
out
daa
add
repnz
xor
dec
lcall
addr16
imul
outsb
lds
aas
jb
and
xchg
mov
or
fadds
inc
xchg
int3
xchg
fwait
pop
jmp
adcl
push
das
fnstcw
leave
inc
xchg
loop
xor
cmpsb
inc
jmp
add
js
pop
jecxz
pop
cmp
mov
ds
jecxz
jb
in
push
or
fldenv
outsl
lock
test
lock
mov
and
aas
call
sbb
push
jae
xchg
stos
push
sub
cmp
insl
xor
imul
enterw
add
das
dec
aad
daa
sub
ja
daa
mov
dec
mov
sbb
or
xchg
jp
and
sub
dec
mov
cmp
adc
xchg
sarl
jo
jmp
sub
fidivrl
ljmp
sub
add
insl
and
clc
mov
add
push
stos
outsb
mov
xchg
repz
into
mov
int
push
inc
loop
dec
mov
pop
das
enterw
jae
cmpsb
dec
jmp
enter
xlat
jno
lods
shlb
fmuls
movsb
jge
in
sbb
dec
mov
pop
mov
fbstp
push
addl
adc
inc
pop
cmp
fs
add
ljmp
dec
adc
jl
xchg
dec
push
les
dec
jp
in
pushf
cmp
repz
xchg
loope
popa
lds
test
jo
xchg
xchg
sbb
jg
add
push
sub
pop
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
ret
sbb
and
jle
addl
sub
jmp
dec
add
xchg
aas
xchg
push
sub
jns
pop
mov
sahf
cmp
pusha
stc
out
les
sub
test
movsl
out
inc
pop
into
aaa
jo
sbb
mov
shll
add
addr16
mov
cs
pop
ret
loop
fcomi
jmp
mov
clc
daa
sbb
add
push
dec
fisubrs
jge
into
cmp
outsl
test
push
out
push
stc
sub
imul
cltd
add
fwait
xchg
div
enter
or
lcall
addr16
mov
mov
frstor
xchg
dec
fldenv
jecxz
sti
lods
mov
fcoml
pop
and
stos
mov
mov
jmp
push
nop
mov
pop
xor
push
mov
leave
arpl
out
sbb
jmp
pop
js
in
xor
stc
lock
add
xchg
rol
icebp
fs
jns
cmp
mov
xchg
adc
icebp
mov
pop
dec
or
testl
and
loopne
sbb
adc
adc
xor
mov
imul
insb
ret
jo
jne
mov
rclb
xlat
loop
pop
sahf
push
sub
jo
outsl
loop
pop
push
add
arpl
push
mov
cmpsb
adc
lret
mov
cwtl
lret
adc
xchg
testl
test
sub
shlb
jo
lock
enter
lods
imul
scas
stc
movl
sub
mov
jbe
mov
jge
in
sub
punpckhdq
and
jo
mov
sub
dec
data16
mov
jne
pop
mov
inc
or
sbb
and
sbb
mov
pop
jle
push
iret
std
mov
aad
outsl
pop
dec
mov
enter
jns
mull
add
lds
aaa
loope
popa
movsl
rep
sarb
call
js
loop
je
adc
gs
push
adc
test
mov
out
fmulp
cmp
aas
pop
sbb
aad
aaa
or
inc
mov
xor
rcrb
pop
out
insl
call
sub
or
push
stc
sub
leave
xlat
in
popf
inc
jl
lahf
data16
faddp
sbb
xchg
push
ljmp
lea
jne
imul
xchg
and
mov
sahf
and
push
jae
std
inc
test
fcmovnbe
mov
imul
fucom
jnp
xor
xchg
fstpl
pusha
icebp
cmp
jne
das
fwait
ds
aas
and
jge
aam
xchg
lcall
inc
push
mov
mov
cmp
jne
insl
ret
stos
and
out
add
cli
inc
jp
loopne
dec
jbe
dec
mov
pop
sub
outsb
adc
mov
mov
mov
cmp
sub
ret
or
inc
subb
mov
pop
and
inc
mov
jns
push
mov
clc
xor
daa
mov
xchg
adc
sti
inc
add
inc
andl
and
out
ret
inc
cmp
loope
pop
pop
pop
pusha
dec
or
adc
jecxz
pop
pushf
stc
int3
jno
idivl
and
clc
sbb
xor
test
imull
jg
mov
pop
daa
cli
andb
adc
add
jmp
fdivrl
pop
or
test
mov
cmp
xor
add
xor
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
in
and
outsl
jge
jle
lods
stos
int3
fs
jnp
push
jne
fs
add
clc
cmp
ss
mov
pop
dec
cltd
and
mov
push
subl
inc
push
sbb
inc
je
cmp
xchg
aas
lcall
je
or
daa
test
jbe
insb
cmp
clc
mov
fiaddl
ret
adc
into
or
dec
das
pop
pop
insb
scas
into
insb
test
repz
xor
ret
mov
mov
lods
jno
sub
int
pop
mull
and
adc
enter
xchg
ljmp
shrl
inc
call
mov
arpl
mov
xor
stc
rep
aas
fs
dec
shll
xchg
aam
cmp
pop
stos
bound
lret
clc
xchg
stos
lds
or
or
sub
jp
add
and
mov
sub
add
lock
or
push
pop
cmp
pop
sbb
sub
cltd
mov
dec
stos
scas
std
sbb
xchg
dec
pop
cmp
popa
mov
adc
sarb
loope
pushf
and
cmp
movsb
push
push
xor
addr16
fcomps
and
data16
js
leave
in
popl
sahf
nop
mov
out
and
dec
sbb
adc
jo,pt
cmp
inc
test
dec
xchg
sub
jbe
fldcw
pop
or
add
in
sub
and
pop
lods
mov
jo
stc
sbb
fucom
push
adc
call
sbb
jns
gs
lds
sub
sbb
lods
or
cmpsl
push
pop
cltd
gs
cmp
jecxz
jb
jmp
mov
das
and
jnp
jl
push
in
inc
repz
clc
cmp
mov
out
fildll
push
cli
fcmovnb
sbb
rcll
lea
dec
xchg
int3
sub
notb
mov
jg
pop
ret
pop
ljmp
push
enter
enter
xchg
inc
stos
and
add
mov
or
pop
mov
stc
divb
push
fst
ret
dec
daa
jb
out
add
cmp
dec
sub
dec
cwtl
rcll
push
cli
ja
rcr
push
clc
mov
sub
pop
jl
loope
aas
adc
cmp
enter
sub
lcall
xor
stc
xor
mov
adc
rcll
out
insl
je
mov
leave
in
into
les
lret
fldenv
xlat
std
addr16
add
sbb
or
stos
repnz
imul
cmc
ret
mov
test
in
negb
mov
rorl
in
aaa
filds
sahf
hlt
pop
xor
ds
clc
mov
mov
icebp
in
xor
dec
iret
je
inc
jle
xchg
pop
pop
push
subb
jg
fcoml
jnp
aaa
push
aas
push
imul
aaa
mov
adc
mov
js
and
push
ret
cmpb
gs
repz
js
hlt
jp
xchg
mov
pop
filds
jae
mul
add
xlat
add
ficompl
aam
mov
shl
es
mov
frstor
out
das
cmpsl
add
push
cmc
mov
pop
fsubr
mov
jle
xlat
add
sbb
inc
pop
inc
jnp
add
lds
push
sub
fwait
mov
fdivrs
loope
shrb
inc
fisttpl
data16
pop
test
lret
xor
push
push
je
leave
xchg
adc
stos
jp
pop
leave
jae
jne
or
xchg
xchg
lcall
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
push
int3
insl
out
mov
xchg
and
xchg
lods
cmp
mov
sti
lods
push
lret
xor
cmp
pop
fs
inc
ljmp
mov
repz
xchg
lea
adc
cmp
cli
xchg
ret
jnp
mov
nop
sub
fsubrs
lret
movsb
jp
shll
daa
mov
insl
push
xchg
clc
cltd
mov
mov
aad
iret
lcall
mov
repz
and
xchg
add
scas
pusha
ror
jecxz
int
leave
scas
jnp
icebp
aaa
jns
add
gs
les
out
pop
xchg
fwait
xor
in
movsl
lret
cmp
in
mov
in
stc
dec
cmp
push
pop
ret
loop
xor
pop
shll
add
mov
insl
pop
push
mov
shrb
lds
dec
arpl
jge
jl
sbb
imul
mov
push
je
sbb
xlat
addl
test
adc
mov
mov
push
mov
jns
cmc
repnz
mov
sbb
sub
lods
inc
and
push
enter
pop
pop
lahf
jmp
or
out
int
adc
ret
repz
mov
jno
scas
and
push
test
enter
dec
pop
xorl
mov
pop
cmp
das
or
icebp
imul
mov
jne
cmc
push
mov
xor
repnz
rorl
fwait
int
jle
and
adc
jl
in
mov
sbb
cmp
enter
js
lods
xor
xor
sbb
sbb
mov
xor
and
mov
mov
sbbb
popl
push
adc
je
in
in
push
inc
add
inc
push
xlat
mov
mov
sbb
test
ds
loop
popf
movsb
mov
xor
enter
add
pop
orb
mov
jg
xchg
fcmovnb
mov
insb
pop
movsb
push
dec
push
lea
test
adc
ror
sub
popf
sbb
lock
lret
dec
imul
push
jecxz
pop
jae
imul
ss
enter
push
or
mov
mov
mov
and
push
mov
mov
pop
inc
mov
adc
inc
sub
mulb
out
adc
dec
cmpsl
xlat
mov
arpl
sbb
xor
data16
pop
push
push
cmpsb
psubusw
sub
push
lea
xlat
insl
push
sub
outsl
inc
cmp
sti
sbb
sub
pop
adc
test
aas
pop
xor
cld
sahf
insb
push
inc
jno
dec
or
jecxz
mov
mov
sbb
fwait
stc
pop
and
or
addl
and
mov
push
pop
add
lock
dec
loop
mov
cmc
call
gs
add
mov
scas
movsb
out
popa
inc
jno
push
or
add
or
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
ja
add
hlt
sub
xor
jle
std
cmp
orl
mov
in
cltd
dec
cwtl
data16
and
jp
and
test
andl
pop
push
jbe
lods
lcall
pop
mulb
dec
mov
pop
in
dec
jmp
mov
ret
shll
fsubs
mov
roll
or
lds
divb
inc
pop
lret
cs
insb
add
outsl
mov
fldt
outsb
dec
jno
sti
insb
shrl
fbstp
movsb
aad
xorl
xchg
mov
jno
jb
in
out
mov
mov
mov
adc
sbbb
jbe
iret
cld
adc
pop
mov
push
push
out
push
out
sbb
pop
js
iret
and
or
pop
shll
aad
jns
js
sbb
mov
sub
add
ja
in
xchg
shr
ret
mov
jae
int
mov
idiv
or
in
dec
into
orl
jns
cmp
stc
and
int
mov
push
inc
pop
pop
or
mov
xor
fimuls
push
add
hlt
push
mov
fs
mov
or
rcrl
cltd
xor
std
scas
rcr
mov
pusha
pop
test
ljmp
sub
push
dec
jo
mov
xchg
lahf
imul
mov
push
and
push
jo
aam
add
imul
sahf
xor
push
adc
mov
cmp
sarl
xorb
push
mov
push
mov
adc
or
sahf
bound
inc
sub
jbe
xor
or
pop
or
dec
push
into
inc
out
xchg
jmp
mov
mov
add
daa
jmp
jnp
std
sub
or
and
dec
movsl
mov
xor
sahf
js
stos
jle
add
pop
xchg
xchg
leave
pop
jl,pt
sub
dec
mov
push
les
xchg
mov
fdivr
push
addr16
loop
mov
lahf
push
adc
pop
pop
dec
fdivs
shrl
xchg
and
mov
mov
jl
gs
cmpsb
push
xchg
push
popa
cltd
push
xchg
xchg
sti
ss
and
push
sbb
mov
adc
add
data16
dec
cmp
pushf
js
sub
fisttpl
bound
clc
mov
cmpsb
jno
mov
loopne
mov
cmp
xor
scas
ror
jg
stos
xor
mov
int
and
xor
jbe
push
mov
test
or
dec
testb
inc
cmpsl
adc
cltd
iret
jb
cmc
inc
sub
mov
inc
mov
mov
mov
dec
lds
or
sbb
icebp
sbb
fs
sahf
sahf
push
shr
jo
mov
int3
adc
pop
lock
jge
test
push
mov
mov
mov
adc
push
add
jmp
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
sub
or
pushf
lock
outsb
or
int3
xchg
adc
xor
call
aad
add
dec
in
jb,pt
xchg
aad
or
scas
loope
insb
lods
jmp
out
or
push
loopne
jns
push
in
popf
sbb
sub
lahf
adc
xor
adc
mov
movsb
rcll
or
clc
jns
xor
inc
adc
in
push
pop
push
xchg
push
cmp
xchg
or
add
and
fs
push
xchg
mov
push
push
pop
addb
lock
rcll
adc
mull
jnp
pop
ret
dec
mov
sbb
inc
jle
inc
sbb
xchg
cs
push
scas
rcrl
mov
stos
pop
shl
or
loopne
push
and
mov
sub
push
dec
outsl
gs
fiadds
stgi
jp
fidivrs
out
pop
test
mov
leave
pop
jecxz
std
addr16
jne
or
mov
mov
push
jns
mov
pop
imul
shll
push
adc
push
ss
and
adc
loopne
fnsave
adc
or
cmp
test
pop
jl
lea
jle
fbstp
xchg
pop
rcr
fmull
insl
in
dec
loopne
cmpsl
lods
int
pop
dec
add
push
sbbl
sti
push
dec
adc
cmp
mov
in
orl
fnsave
mov
clc
pop
jge
jmp
xor
in
test
sbb
jmp
xchg
enter
mov
or
inc
and
fidivl
fdivrl
cmp
mov
pop
hlt
int
jne
jne
daa
jmp
rcr
out
ljmp
fs
sbb
in
gs
in
les
mov
xchg
jnp
adc
fildll
and
fwait
mov
movsb
xlat
imul
mov
inc
in
cmpsb
movsb
ljmp
aaa
push
loop
dec
or
ljmp
lret
xchg
nop
cmpsl
mov
dec
stos
out
push
das
jb
xchg
loop
adc
cmpsl
fisubrl
adc
add
sbb
dec
cmp
and
pop
out
xchg
ret
ret
and
push
jne
and
int
xor
mov
xor
add
fwait
movsb
jecxz
inc
jns
push
inc
jl
fucomi
add
dec
into
out
divb
popa
scas
icebp
lret
outsb
push
and
mov
aam
dec
xor
and
ret
xor
mov
insb
pop
in
enter
cmp
cmpsl
jae
xor
xor
add
lods
divl
fldl
cs
jno
int
mov
fadd
xor
cmp
adc
cmp
fmul
add
inc
mov
pop
sub
mov
arpl
mov
mov
cmp
cmp
push
cmp
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
fistpll
push
jle
xor
jle
xlat
mov
sub
mov
dec
push
mov
dec
cmp
notl
rcrb
cmp
pop
jp
popa
loope
mov
jnp
dec
push
pop
lods
and
sub
mov
pop
aas
adc
jno
inc
cwtl
repz
loope
test
movb
xchg
scas
mov
into
mov
push
and
popa
lods
addr16
stos
inc
pop
in
enter
in
gs
pop
xchg
sub
sar
mov
shrb
or
fmulp
ret
sub
loop
push
outsb
xchg
loope
subl
loope
push
jne
lcall
scas
popf
nop
push
daa
cmp
lock
cmpsb
lods
fistl
lret
movsb
mov
sbb
rorb
pop
xchg
or
xchg
mov
out
jmp
stos
pusha
mov
sub
ds
aam
mov
ret
mov
pop
jecxz
lods
pop
stc
shll
scas
movsl
pop
aaa
lds
loopne
das
lods
xlat
xchg
jl
setb
xor
inc
dec
enter
inc
mov
or
loope
cmc
aas
inc
shll
mov
enter
jbe
fcmovb
pop
adc
clc
adc
pop
xchg
or
lahf
and
test
adc
push
mov
data16
ljmp
ds
mov
sti
jbe
xchg
mov
add
sub
icebp
sbb
sub
push
push
push
pop
push
fwait
sub
stos
loope
les
cmp
enter
and
mov
sahf
adc
int3
mov
jge
add
lahf
addr16
xchg
cmp
rcll
outsl
add
out
loope
negb
out
mov
mov
mov
jb
xchg
fsts
fadd
dec
inc
xchg
xchg
scas
jmp
fcos
push
adcl
or
repnz
inc
jecxz
xor
mov
xchg
cltd
cmp
add
pop
enter
xchg
mov
xchg
cs
roll
pop
sarl
adc
test
inc
xchg
imul
jbe
adc
int3
arpl
xchg
ljmp
arpl
les
pop
inc
addb
movsb
push
sbb
stos
rcrb
jle
std
xchg
adc
test
fbld
lods
rcrb
xor
or
sub
xchg
jne
in
or
add
fs
lock
or
sub
xchg
pop
jle
imul
jno
aam
push
xchg
sbb
pop
shll
cwtl
loope
repz
pushf
cltd
mov
push
insb
sub
mov
mov
daa
enter
and
xchg
aaa
aad
cmp
pop
mov
scas
lcall
bound
pop
enter
in
fs
xor
stos
inc
cmpsb
or
aad
sarb
jbe
pop
shl
pop
mov
mov
in
push
dec
icebp
or
lret
mov
pop
or
xor
insl
lret
or
in
or
paddsb
jnp
pop
dec
xor
lea
ret
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
jg
outsl
push
das
jle,pt
xor
jle
add
cs
push
inc
xchg
sub
outsb
int
pusha
push
xchg
cmc
cmpsb
and
call
add
pop
les
jecxz
pop
ds
out
mov
pop
stos
xchg
sbb
sub
aam
mov
inc
jle
add
js
mov
insl
push
fdivl
dec
cs
inc
mov
icebp
imul
mov
loopne
dec
jmp
mov
and
ret
push
outsl
adc
inc
mov
int3
xchg
daa
xchg
push
negl
in
push
jns
mov
nop
xchg
fs
add
xorl
jno
push
sbb
mov
xlat
dec
jne
lods
cwtl
stos
leave
fwait
inc
and
pop
sbb
sbb
in
out
pop
push
mov
pop
mov
imulb
add
call
ja
inc
lret
stc
sub
lods
push
adc
in
mov
jns
idivl
clc
xchg
out
or
shll
int3
rcrl
or
repz
notb
dec
adc
xchg
in
out
hlt
ret
clc
adc
push
cmp
test
fists
add
mov
jl
or
mov
and
sti
sbb
inc
xor
mov
dec
pop
sbb
dec
or
mov
ds
cld
add
inc
sbb
mov
inc
inc
push
andl
aam
mov
loop
xchg
push
pop
xor
popf
ficoml
jb
enter
jne
or
xchg
jp
aad
aaa
adc
xchg
lcall
les
mov
test
loopne
shll
fs
jge
stos
sbb
inc
roll
xchg
xchg
sbbl
mov
mov
sbb
push
insl
xchg
mov
shrl
rcrb
enter
adc
cmp
dec
adc
je
enter
jp
mov
xor
lret
inc
pop
arpl
jne
into
dec
lods
out
lea
jne
jle
sbbb
xchg
ljmp
xchg
sahf
aaa
cmp
push
dec
pop
mov
cmpsb
bound
adc
sti
and
enter
jb
fsubr
fdivs
cli
sbb
dec
push
test
in
pop
dec
sub
lock
and
cmp
mov
adc
fldt
rcll
mov
push
outsb
dec
arpl
addr16
shlb
je
or
sub
fcomp
mov
jns
js
xchg
add
addr16
mov
xor
inc
push
jae
sahf
stos
fsubrp
sbb
imul
adc
out
lahf
popa
lret
lret
mov
sub
fs
and
lret
sub
or
enter
divl
sub
inc
push
cmc
vpor
cmp
mov
jmp
test
jno
ja
shrb
std
insb
out
loopne
jle
xor
jle
and
add
add
pop
pop
data16
or
es
in
mov
pop
repnz
orl
sub
test
cli
rcrb
addl
jecxz
xchg
mov
rcr
xchg
andb
cmp
call
ret
add
push
push
and
pop
frstpm(287
sbb
stos
hlt
sbb
mov
pop
add
mov
test
rcrb
add
jb
loop
jmp
clc
cmp
mov
xchg
dec
pushf
loope
jmp
mov
in
fstpl
cltd
cmpsl
pop
sub
lret
loopne
pop
loope
cld
adc
iret
call
es
mov
out
subb
movsl
stos
mov
add
aaa
fsts
and
insl
hlt
jns
sub
scas
cmpsb
in
insl
sarl
push
sub
ret
out
add
ficompl
xchg
lock
or
std
cs
scas
bound
sub
fdivr
push
leave
add
adc
mov
jno
or
mov
data16
cltd
jp
sub
in
movsl
stos
lcall
cmp
xor
xchg
xor
push
in
fs
xchg
dec
jecxz
add
sbb
cmp
mov
in
scas
out
shll
in
mov
xchg
pusha
scas
sub
test
lds
sub
mov
movsb
ljmp
lds
movsb
aam
mov
sbb
int3
pop
adc
mov
inc
add
cmpb
test
pop
movsb
popa
inc
inc
xor
cmp
inc
sbb
pusha
push
sub
shrb
push
and
sahf
js
xor
xor
int3
hlt
mov
mov
fidivrs
lret
adc
jne
test
aaa
xchg
sbb
popf
imul
pop
cwtl
push
mov
inc
mov
outsl
outsl
jecxz
cmpl
lret
aam
sti
xchg
adc
dec
ret
jne
cmc
daa
daa
or
or
push
mov
mov
mov
push
aaa
pushl
sub
inc
int
adc
sbb
cmpsl
inc
mov
pop
mov
mov
fsubrl
in
pop
xor
data16
cmp
dec
cli
out
mov
in
mov
iret
and
cltd
xchg
pop
lret
push
pop
ret
mov
rcr
or
aam
mov
or
js
push
xchg
mov
movsb
shlb
push
jae
mov
xor
mov
cmp
popf
inc
dec
in
sti
push
loope
aaa
and
out
rclb
push
or
xor
aad
jbe
dec
test
cmp
jae
mov
into
push
adc
jbe
sub
scas
xchg
cltd
test
mov
sub
sbb
outsl
pop
in
push
pop
shrb
sub
jmp
inc
stos
enter
push
cld
xchg
adc
jmp
push
cmp
xor
jge
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
push
dec
jno
movsl
cmp
xor
jle
sbb
xchg
lcall
test
scas
outsl
xlat
push
dec
jge
cmp
es
sbb
out
adc
jns
dec
outsb
sbb
and
movsl
cmp
dec
jge
jns
int
pop
lret
stos
sbb
xchg
data16
push
inc
adcb
test
push
cmp
cs
mov
sub
pop
fiaddl
insb
xchg
pushl
pop
push
push
or
jmp
clc
mov
in
hlt
out
enter
cmp
clc
push
add
push
dec
dec
out
jmp
imul
ds
movsl
cmp
or
inc
sub
popa
inc
insl
in
sbb
nop
ljmp
or
std
fnstcw
inc
mov
sub
sbb
scas
scas
and
push
mov
lret
loopne
cmp
aad
xor
aam
inc
pushf
jb
aaa
js
add
push
ja
inc
cmp
pop
dec
jg
lds
jmp
fs
inc
sahf
sbb
dec
js
cmp
daa
inc
jo,pt
inc
addr16
imul
mov
sbb
sbb
mov
adc
inc
ja
cmp
andl
aam
divb
jmp
adc
sub
push
enter
test
movsl
jl
ret
es
mov
ret
add
mov
mov
mov
mov
push
sub
dec
sub
nop
add
xchg
pushf
insl
adc
pop
sbb
insl
stos
xor
push
stc
jmp
into
test
in
cwtl
jp
gs
mov
out
arpl
fisubl
and
sbb
mov
and
pop
gs
mov
sub
pop
adc
cmp
sarl
sub
cwtl
mov
movsb
mov
outsl
out
sarl
inc
mov
dec
testl
leave
les
mov
dec
bound
data16
scas
aam
cmp
mov
divb
aas
dec
adc
mov
das
push
pusha
mov
dec
dec
cmp
stc
jmp
stos
mov
stc
or
sti
cmp
jo
addb
daa
xor
out
orb
sarb
mov
jecxz
gs
stos
jge
push
xchg
mov
gs
dec
mov
pop
mov
dec
and
addr16
xor
scas
out
push
mov
fnstenv
adc
push
and
clc
rcll
insl
gs
lret
sbb
mov
shl
pop
pop
call
pop
fcmovnu
rcll
test
pop
mov
inc
inc
pushf
stos
aaa
out
iret
in
xchg
sbb
xor
sub
data16
lock
cmpsb
lcall
jbe
or
mov
aas
cmp
mov
pop
pushf
sbb
inc
add
loopne
mov
popf
mov
scas
js
mov
xchg
dec
call
pop
int3
lock
outsl
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
shll
jle
fistpll
xor
add
jbe
cmpsb
je
fbstp
test
popa
jo
adc
cmp
inc
cmpsl
subb
dec
pushf
shll
jae
test
mov
mov
cwtl
rol
pop
jge
xchg
lock
pcmpeqw
xor
xor
in
or
jns,pt
or
mov
std
ja
jne
sub
sbb
mov
sub
decl
mov
sub
lret
sub
pop
sub
stos
jle
inc
leave
inc
or
lds
sbb
jb
decb
mov
iret
lods
add
int3
inc
out
inc
je
sbb
mov
loopne
popf
mov
push
ljmp
call
shr
popa
call
jnp
pop
les
movsb
movsl
lds
and
rcrb
mov
aaa
jl
mov
cmp
adc
mov
xchg
call
pop
add
add
pusha
and
jae
push
popf
into
out
mov
fdivs
lods
into
out
add
mov
hlt
lahf
call
loop
repz
inc
les
je
mov
lock
imul
sub
icebp
sub
add
cmp
mov
flds
push
test
addr16
ljmp
pop
lret
or
inc
cmp
into
enter
inc
bts
cmp
aaa
lahf
add
stos
pop
imul
daa
pop
loop
mov
push
sub
mov
or
jg
arpl
cmpsb
cmpb
xchg
stc
cmp
cli
add
pop
movsl
jne
xor
sti
sahf
subl
iret
cmpsb
cmp
mov
inc
rcrb
cmpsl
sarl
addb
test
iret
or
lcall
mov
jnp
jecxz
movsl
rcll
sbbl
imul
jbe
icebp
sub
lcall
or
lods
adc
test
pop
jp
xor
jae
jo
pop
aas
push
mov
pop
pop
jne
mov
int3
and
stos
add
jno
push
fnstsw
testl
or
pushf
add
add
xor
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
jne
mov
jle
out
bound
xchg
sub
jmp
daa
lret
xlat
xchg
cs
inc
dec
loope
add
lock
adc
mov
aam
dec
sahf
test
sbb
rcrb
push
popf
lea
jl
and
xchg
test
add
lods
orb
loope
loopne
xor
push
xor
popf
mov
fimull
int3
icebp
test
jb
jecxz
insl
inc
xor
and
xor
loope
sub
mov
mov
or
loopne
in
pop
add
lret
in
fdivs
aaa
mov
adc
enter
out
loopne
scas
dec
xor
sahf
xorb
or
mov
in
push
dec
pop
in
mov
fimull
es
cwtl
cmp
sub
sti
in
or
push
sub
fisttps
adc
lahf
insb
xchg
lea
mov
popa
add
xorl
mov
xlat
inc
ss
sahf
sti
stc
std
adc
sub
cmp
pop
jp
stos
movsl
in
gs
cmpsl
dec
push
dec
es
and
mov
and
mov
testb
mov
or
mov
pop
test
repz
add
enter
rcrb
sbb
xchg
mov
dec
jmp
jl
mov
pop
pop
testl
lods
dec
out
jecxz
mov
sub
shll
outsb
int
dec
sbb
xchg
add
cmp
push
push
ljmp
push
cmp
adc
pushl
mov
add
jecxz
adc
xchg
inc
cmp
xchg
pop
mov
mov
clc
or
test
lods
mov
jecxz
pop
testb
rcr
pop
mov
adc
test
xchg
cld
stos
pmuludq
push
pop
cmp
pop
int
jns
xor
aas
stos
xchg
cmp
cwtl
pop
fdivl
mov
inc
adc
outsb
adc
and
js
ficoms
mov
adc
cmpl
mov
dec
or
pushf
sub
dec
es
cmp
push
mov
inc
adc
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
es
shld
jle
jge
jle
addr16
insl
sub
lock
repnz
jns
inc
adc
sub
push
push
test
mov
ljmp
adc
xchg
incl
and
or
scas
add
mov
cmpsb
xor
pop
test
xor
fsubr
jbe
xchg
fsubr
push
clc
jmp
mov
mov
jbe
inc
push
pop
hlt
inc
cmpl
lock
mov
outsb
lds
and
dec
fs
xchg
dec
dec
jl
daa
pusha
push
call
push
and
ljmp
lret
push
mov
sar
cmp
in
jl
mov
pop
inc
pop
xor
dec
dec
loop
mov
push
jl
push
dec
mov
push
ret
ja
push
loope
cmp
hlt
adc
ja
inc
push
sub
aaa
int
mov
pop
imul
fs
or
cld
movb
rcr
arpl
mov
ds
mov
scas
jecxz
mov
fisubl
push
sub
pop
dec
push
push
movsl
testl
pop
dec
xchg
push
jl
sbb
sbbl
push
mov
mov
mov
sbb
loop
in
sahf
stos
or
out
push
adc
rorl
stc
mov
adc
inc
cmpsb
mov
test
in
inc
bnd
mov
imul
sbb
std
lahf
sub
push
fimuls
jmp
lahf
repz
adc
fsub
pushf
push
sbb
dec
in
fimull
inc
stos
jg
or
filds
mov
insb
mov
fidivl
aas
dec
icebp
cmp
cmp
cwtl
clts
push
std
xor
xorl
mov
leave
aam
sbb
jae
leave
call
shll
jg
adc
mov
call
xlat
lods
cmpsb
mov
jbe
lock
jo
jne
adc
std
mov
mov
pop
push
push
mov
pop
push
push
fcoms
mov
mov
pop
arpl
inc
sbbl
dec
adc
and
mov
sti
jo
nop
or
pushf
loop
inc
aam
arpl
sbb
shl
scas
push
cltd
dec
push
jmp
es
cld
lahf
out
mov
ss
jmp
mov
repz
mov
dec
dec
ret
cmpsl
je
xor
insb
xor
js
or
scas
jg
mov
shlb
iret
push
inc
xchg
push
and
cmp
mov
jnp
add
dec
roll
pusha
pop
add
inc
sti
mov
movsl
pop
addb
xor
je
sbb
cmp
mov
push
stos
mov
dec
and
xor
xchg
lds
xchg
ja
xchg
sub
pop
add
mov
sti
lods
or
mov
mov
int3
cli
sub
add
dec
loopne
cmp
cld
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
sbb
in
dec
push
iret
jle
and
jle
push
ljmp
adc
imul
jo
dec
lret
mov
push
dec
sub
xor
xchg
mov
rol
repnz
jae
ja
sbbb
jne
lcall
xor
pop
test
imul
sbb
sub
push
outsl
rorl
adcb
sbb
es
fwait
mov
mov
ljmp
cmp
cmp
pop
test
mul
mov
jbe
lock
out
test
mov
je
xchg
mov
xchg
imul
jle
imul
sbb
and
test
in
mov
es
icebp
xchg
std
icebp
lahf
iret
hlt
inc
sbbl
push
xor
push
hlt
push
push
les
mov
movsb
cmp
mov
in
mov
lods
outsl
aam
adc
xlat
bound
pop
arpl
sbb
shlb
mov
sti
add
sbb
lods
jbe
int3
mov
add
outsb
insb
cltd
lods
insl
jle
out
sbb
push
fsubr
aad
out
aam
mov
and
sub
add
test
pop
mov
mov
stos
and
addr16
je
jo
pop
test
test
mov
jnp
icebp
inc
gs
push
sbb
sub
push
pop
fldt
int
jnp
popf
pusha
inc
xchg
cmp
imul
aam
clc
xor
jp
cmc
insb
icebp
mov
mov
xchg
aam
cmc
addr16
xchg
insl
xor
cmp
and
mov
out
rcr
aaa
test
mov
or
xor
icebp
lea
jne
js
cmp
add
pop
scas
jle
push
dec
adc
paddsb
das
adc
push
int
cmp
clc
aam
mov
push
repz
xchg
jne
push
scas
mov
xchg
add
movsb
call
push
mov
mov
repnz
dec
mov
dec
imul
dec
jmp
jecxz
push
stos
into
inc
ret
jp
test
out
adc
rcl
test
sbb
and
cmc
mov
xorb
xchg
sub
es
ja
cmpsb
loopne
fisubrl
int
scas
pop
xchg
xor
jo
dec
inc
push
jg
out
xor
jb
mov
lods
cld
cmp
pop
and
leave
je
sbb
mov
mov
add
out
cmp
xchg
pop
push
mov
xchg
dec
xchg
loope
pop
repz
or
sub
adc
das
fdivs
jge
mov
dec
pop
pop
xchg
mov
inc
inc
orl
xor
mov
fbstp
dec
call
sbbl
das
outsb
aaa
test
ds
xor
sbb
mov
sbb
enter
add
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
cmp
cmpb
jle
jge
jle
dec
jne
pop
subb
mov
xchg
mov
enter
insb
movsb
and
pushf
testb
fdivrl
call
xor
loopne
popa
sbb
cmp
sbb
out
dec
int
sti
sub
addr16
sbb
mov
nop
ret
mov
mov
popf
aas
push
nop
xchg
dec
insl
lret
aas
sub
inc
sbb
aas
lds
inc
add
mov
or
int
rcr
movsb
out
sub
cmp
mov
mov
sub
adc
pop
in
into
jb
es
sub
xchg
icebp
imul
inc
sub
xchg
push
and
jne
xchg
jle
cmp
in
lret
movsb
or
fistpll
rcll
lcall
lods
neg
inc
adc
adc
iret
mov
inc
lods
sbb
inc
test
ja
insb
xor
daa
repnz
jno
shl
mov
mov
das
sub
inc
push
in
sahf
inc
outsl
jns
cmp
repnz
jb
enter
cmp
jge
cltd
insl
or
xor
mov
inc
sti
mov
mov
jo
jle
push
sbb
dec
xchg
lahf
mov
mov
imulb
and
jle
loopne
xor
xchg
cmp
out
xor
in
pop
inc
aad
ss
rolb
jbe
push
inc
pop
outsl
add
pop
ret
push
fstpt
pop
inc
mov
das
dec
dec
adc
je
std
lock
and
imul
mov
loop
shlb
sahf
mov
mov
pop
sub
sbb
fxch
fstpl
dec
mov
mov
or
in
cli
sbb
cmpsb
dec
add
icebp
jp
mov
mov
pop
stos
loop
mov
gs
mov
hlt
call
pop
es
fwait
stos
mov
sub
lret
cwtl
clc
sub
xor
xchg
fistps
or
cmp
pop
xchg
div
fdivrs
push
sbb
sub
jae
and
cmp
cmp
jl
lret
sbb
push
outsb
mov
repz
pushf
mov
sub
js
popa
cmp
dec
xchg
sbb
sbb
testb
dec
sarb
mov
jp,pn
sub
inc
fnstenv
xchg
push
cmp
pusha
add
popa
mov
mov
xchg
xlat
std
and
arpl
ds
pusha
inc
sbb
sbb
add
fildl
xor
mov
pop
jp
shll
insb
lock
pop
mov
mov
outsb
adcb
adc
les
mov
sbb
scas
xlat
in
into
je
pushf
or
mov
out
imul
sahf
push
push
sub
cmova
mov
mov
outsb
mov
jle
ds
xlat
orb
lret
sarb
mov
mov
mov
push
dec
je
je
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
test
int3
into
sub
jle
in
jle
outsb
shlb
jne
push
jmp
and
rorl
fs
icebp
aaa
mov
jecxz
aad
mov
lods
sub
fdiv
xchg
jno
push
int3
or
ss
cmpl
cmpb
push
xchg
jb
push
push
mov
dec
xchg
test
cmp
sub
pop
pop
sbb
mov
dec
imull
xchg
cmc
pop
popa
fbld
inc
jle
mov
in
xor
into
xchg
fildll
cmp
jnp
pop
cs
xlat
or
sub
dec
fdiv
push
notb
int
out
ds
push
imul
add
int3
arpl
cmpl
mov
adc
push
sub
insl
addl
adc
jnp
fucomip
ret
cmp
sub
call
mov
xchg
push
cmc
mov
pop
lods
cmp
loope
loop
xchg
xor
faddl
cmp
scas
rcl
call
jnp
sbb
aam
cwtl
cmp
out
mov
data16
sbbl
test
mov
push
bound
cmp
aas
loopne
js
std
in
pop
or
xor
fcmovne
jns
push
decb
jg
test
in
inc
scas
xchg
mov
in
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
inc
nop
xlat
jle
in
jle
insl
xchg
testb
scas
xchg
addr16
cmpsl
sarl
pop
inc
pop
out
adc
jmp
pop
aad
xor
cld
sub
cmovp
test
dec
pop
xchg
aad
or
sbb
pop
loop
std
dec
das
aam
adc
lret
cmp
and
rclb
mov
push
sbb
fimuls
in
mov
fcoms
push
sbb
push
pop
out
test
stos
ja
stc
and
or
adc
push
int
hlt
jb
pop
loop
cmc
adc
and
leave
xchg
insb
sbb
cli
stc
inc
cmp
adc
jb
or
sbb
mulb
stc
add
loop
cmpb
dec
lock
cmpsl
cs
cmp
lcall
cli
les
cmp
out
dec
add
and
scas
push
rorl
sub
inc
cmp
inc
mov
dec
pop
nop
inc
aad
cmp
je
jg
xor
sub
cmpsb
xlat
rcll
repnz
inc
cs
ja
sbb
push
sbb
sahf
mov
test
cmpb
pop
mov
icebp
ljmp
shrl
je
fistpl
xchg
stos
iret
icebp
or
data16
mov
divl
roll
jo
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
mov
cwtl
jo
pusha
sbb
or
scas
sub
mov
jp
jbe
push
lods
js
movsb
ds
mov
jnp
push
rcrl
sbb
mov
inc
pop
pop
shl
xchg
in
mov
sub
pop
jp
in
adc
lock
nop
mov
mov
jnp
js
or
mov
or
and
add
add
mov
cli
xchg
mov
sbb
pop
and
adc
stos
add
fadd
leave
or
cmpsl
pop
lods
mov
xchg
sbb
dec
in
jbe
sahf
inc
js
icebp
add
ret
adc
in
pop
sarb
cmp
mov
gs
jmp
adc
into
xor
push
stc
shlb
movsb
cmp
push
cmc
or
mov
iret
push
sub
pop
ja
lods
add
imul
xlat
dec
dec
shrb
mov
not
test
fdivrl
jae
xchg
cmp
mov
xor
neg
call
jo
sub
xchg
xor
sti
lahf
lcall
mov
lret
pop
xchg
subb
dec
shlb
das
out
inc
out
xchg
into
repz
pushf
push
jnp
inc
push
or
mov
sub
out
je
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
imul
jle
jg
jle
cmc
inc
movaps
mov
mov
inc
popa
lret
mov
and
pop
clc
cmp
or
or
cmp
jbe
push
sbb
jnp
fildl
icebp
ficoml
mov
mov
jae
pop
stos
mov
or
mov
addr16
rolb
ret
mov
mov
push
jp
test
scas
mulb
shlb
je
push
pop
xchg
xor
fnstsw
jg
in
push
and
mov
adc
or
and
add
or
dec
loop
mull
and
sahf
arpl
sub
shl
mov
inc
inc
and
or
in
ljmp
loop
pop
or
dec
pop
stos
and
fs
dec
jo
xchg
popf
xchg
inc
paddq
loop
mov
jp
and
mov
lds
mov
mov
and
insl
sbb
xchg
lods
sti
xchg
in
jle
popa
xchg
mov
pop
lods
insb
pop
insl
xor
jg
jle
jae
inc
sbb
or
mov
aad
add
inc
and
fdivs
dec
out
mov
adc
pop
lods
cmp
sub
cli
mov
decl
xor
cli
sub
or
adc
fisttpll
cli
mov
jmp
mov
xor
add
jmp
adc
test
or
mov
jle
in
jle
xchg
cmpsl
call
aam
mov
fstl
hlt
xor
and
mov
ds
cld
add
jle
jae
pop
mov
push
out
push
mov
js
jno
stos
jge
push
xchg
xchg
sbb
cmp
push
pop
faddl
pop
inc
sti
xorl
jle
and
jb
fwait
push
jecxz
nop
sbb
loopne
lcall
stos
dec
movsb
in
xlat
push
fists
sbbl
call
bnd
push
mov
push
sub
lock
inc
dec
sbb
and
addr16
mov
xchg
cwtl
xor
and
hlt
in
ret
andl
inc
movsl
push
shr
js
pop
inc
cmpsl
pusha
adc
fsubrs
mov
or
and
cld
call
loope
icebp
xorb
mov
mov
cmpsl
ljmp
and
push
cmp
rcrb
shrb
jns
cmp
xchg
movsl
test
pop
add
sbb
mov
xchg
cmc
call
dec
lods
imul
dec
imul
pop
jns
lds
js
clc
cmpsb
xchg
dec
inc
aas
or
sub
push
add
and
pushf
xchg
push
scas
fiaddl
xchg
mov
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
pop
dec
cmp
jle
in
jle
jge
loope
pop
adc
test
jmp
add
sub
or
mov
push
push
mov
mov
out
int
xchg
cmp
push
jae
sti
mov
das
xchg
jns
jmp
fildl
push
outsl
jp
lret
adc
and
in
xchg
fcmovnbe
pop
mov
fstl
jmp
pop
insb
fisttpll
inc
movl
pushf
inc
int3
adc
daa
movsb
sub
pop
cld
lods
push
repnz
stc
and
xchg
lahf
call
add
ror
enter
adc
in
sti
jbe
cmp
rcll
mov
cmp
mov
mov
pusha
adcl
inc
sbb
insb
inc
aad
stos
cli
out
xchg
fucomp
in
inc
faddl
call
or
and
push
outsl
xor
cmp
leave
outsl
mov
add
dec
lock
add
push
jns
xor
xchg
imul
dec
mov
call
iret
sbb
sub
mov
and
cld
xor
dec
cmp
or
loope
jnp
pushf
mov
push
fnstsw
lds
cmp
lds
std
push
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
mov
fidivrs
in
jle
icebp
dec
mov
mov
lods
pop
std
jmp
cmp
cmp
jno
js
pop
add
data16
cmp
out
into
cltd
sub
daa
popf
sub
sub
das
adcb
sahf
xchg
addr16
push
incb
cmp
outsl
loopne
mov
fbstp
xchg
jl
fcmovb
xchg
mov
sbb
mov
inc
cs
xor
arpl
mov
mov
jnp
lret
negl
test
mov
leave
or
sbb
dec
shrb
mov
je
dec
xor
mov
mov
xchg
rcrb
minps
leave
pop
ret
ljmp
jg
xlat
pop
loop
out
hlt
inc
flds
mov
lods
ret
xchg
fcomps
mov
cmp
push
lahf
mov
xchg
cmp
loopne
imul
jo
mov
in
les
icebp
int3
out
xchg
cmp
mov
ret
mov
insb
xor
pop
or
xor
cli
cld
pushl
lds
fimull
jne
aaa
nop
sarl
jmp
in
or
push
jmp
mov
cltd
jge
popa
imul
sbb
cmp
jbe
jmp
test
repz
jp
sbb
mov
cli
dec
dec
add
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
sbb
jle
in
jle
test
inc
decb
std
testb
test
fistps
push
mov
subb
xorl
cltd
cmpsl
pushf
out
in
mov
dec
ljmp
gs
es
loop
leave
es
jp
push
daa
jecxz
or
rcl
sub
jo
sbb
xor
inc
out
inc
adc
inc
mov
idivb
mov
adc
lods
stc
std
xor
stc
mov
scas
xor
xor
les
pop
adc
cltd
lock
ficompl
scas
sti
lret
sbb
shrl
movsl
aad
mov
shlb
cmpsl
mov
xlat
mull
pop
mov
cmpsb
sub
xor
xchg
jge
pop
xchg
fdivr
icebp
pop
mov
sbb
mov
cltd
jmp
cwtl
es
mov
and
sbb
ftst
ret
gs
mov
dec
mov
movsl
sbb
xor
jns
cld
je
pusha
sbb
pop
iret
cmp
out
rcl
mov
sub
cmp
xlat
pop
cmp
mov
adc
mov
ljmp
ret
lcall
inc
push
sub
add
ret
or
jp
test
decl
add
idiv
decl
add
add
xchg
xor
jmp
cli
fnstsw
in
jle
xchg
and
adc
daa
jb
dec
cld
divb
mov
popa
pop
cmp
fsts
insb
test
gs
loopne
pop
xchg
mov
ss
add
sbb
outsb
xchg
dec
mov
inc
xchg
icebp
stos
pop
add
inc
sbb
shll
push
rorl
mov
cmp
or
push
xchg
dec
inc
dec
das
ret
insl
adc
dec
mov
fsubr
adc
xchg
and
repnz
jo
pop
fildll
mov
or
mov
jmp
pop
fstpt
xchg
xchg
mov
movsl
mov
add
jo
aad
mov
scas
push
fldcw
dec
gs
fisubl
out
dec
sub
lods
xor
add
xchg
pop
out
enter
xor
push
lds
add
inc
ja
push
icebp
pop
cwtl
stos
jns
and
lcall
cli
ds
jge
jnp
dec
mov
sub
mov
fisttpl
mov
xchg
outsl
cmp
out
xor
and
mov
add
jbe
icebp
mulb
inc
cmpsl
out
das
adc
sti
pop
outsb
xchg
mov
test
fistpl
imul
iret
lret
shrl
jno
push
aaa
xor
cmp
test
lcall
call
in
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
pop
dec
andb
jle
jge
jle
out
mov
jbe
pop
insl
adc
adc
inc
push
mov
jg
stc
arpl
pop
jge
pushf
fsts
push
sar
les
mov
push
lahf
cmp
or
aaa
shlb
xchg
sahf
mov
pushf
jecxz
inc
pop
mov
add
xchg
iret
jl
push
push
enter
int
lock
stos
ret
mov
hlt
andl
jo
cmc
dec
jecxz
mov
sbb
pop
lcall
in
cmp
jae
jb
xchg
pop
je
mov
ds
jne
imul
dec
stos
lret
fadds
pop
ret
int3
mov
pop
arpl
adc
test
adc
sub
add
shlb
mov
mov
pop
cmp
shrl
mov
aam
ds
adc
ss
sub
jne
movsl
adc
inc
bsf
lret
adc
mov
lcall
pop
orb
mov
mov
sbb
cmpsb
ret
sbb
mov
in
inc
cmp
movsl
scas
je
or
xlat
lahf
mov
test
imul
in
jp
adc
sub
repz
and
jg
out
in
mull
aaa
sub
xor
lock
xlat
lret
push
xor
cwtl
scas
push
inc
cltd
jp
xchg
jne
push
lods
push
movsb
aaa
pop
cmp
xchg
adc
sahf
mov
lods
data16
popa
sbb
imul
in
push
scas
mov
cmp
pushf
or
and
lahf
mov
aad
adc
sahf
inc
js
imul
mov
hlt
repnz
dec
stc
js
sar
notb
mov
push
sub
adc
push
push
out
sbb
xor
mov
dec
pop
inc
lea
and
jle
outsb
fisubl
daa
ja
fstl
out
cli
insb
lds
mov
cmc
sbb
or
lods
and
fadds
ret
call
movsb
andb
push
xchg
pushf
popf
stc
scas
js
xor
outsb
pop
outsl
or
and
mov
or
jo
push
cli
sti
sets
stos
insb
imul
mov
pop
inc
add
cmc
aas
out
outsl
fimull
faddp
adc
xchg
adc
xor
movsl
enter
sub
or
pop
jbe
int
aas
push
test
mov
mov
inc
mov
jg
outsb
cli
std
stos
iret
cmpsb
mov
add
jbe
ljmp
mov
mov
stos
pop
in
and
imul
test
mov
out
and
push
sbb
lret
jecxz
xchg
adc
movl
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
sbb
jle
jge
jle
mov
pop
mov
fsubrp
or
inc
mov
lock
ss
sbb
jb
fucomp
cmpsb
cltd
jmp
push
into
lods
pop
xchg
out
and
xchg
inc
push
mov
addl
ret
ja
pop
xor
jmp
jmp
sub
fldl
cmc
mov
fwait
jne
popf
movb
cwtl
xchg
fstl
data16
sbb
jo
test
jmp
add
mov
push
push
sti
sbb
jge
inc
push
mov
xchg
out
mov
push
aaa
inc
jp
sub
test
je
leave
pusha
or
roll
int3
sub
mov
imul
inc
fwait
sub
or
add
repnz
shr
fs
jmp
fsubrp
mov
mov
push
jg
scas
and
mov
addr16
sti
psrlq
pushf
push
mov
ss
popa
in
into
cmp
jl
div
mov
push
adc
daa
add
xchg
mov
adc
mov
insb
adc
loopne
sbb
stos
loope
test
push
push
leave
mov
dec
mov
xchg
ret
xor
mov
pop
enter
in
into
jp
fmull
add
xchg
cmpsl
push
fnstcw
fimuls
push
lret
dec
shlb
daa
lods
in
hlt
jno
in
fs
mov
outsl
roll
mov
jg
out
and
push
jnp
lods
jno
nop
mov
mov
repz
mov
push
cmc
mov
fisubrs
push
test
jns
adc
out
in
in
in
int3
push
push
adc
negb
jecxz
mov
inc
mov
clc
push
jno
pushf
push
push
mov
aas
insb
data16
lods
mov
add
pop
sub
push
popf
xchg
scas
mov
fld
in
mov
xor
ljmp
data16
pop
sti
xchg
push
adc
xor
cld
jns
push
mul
sub
mov
and
mov
xchg
push
cmc
mov
mov
mov
lock
jl
ja
pop
dec
lods
sbb
lret
inc
mov
xchg
notl
add
xchg
mov
or
lcall
lods
pop
add
in
subl
icebp
into
es
jns
or
pop
popa
and
pxor
add
out
sbb
inc
inc
mov
add
rcrl
repnz
mov
mov
mov
or
mov
test
ret
clc
dec
lahf
jge
push
pop
cld
push
inc
inc
fwait
cli
xchg
dec
jbe
nop
or
inc
xor
and
pushf
sbb
mov
pop
out
int
cltd
outsb
call
xchg
roll
cmp
out
fwait
test
mov
jo
pop
fnstsw
cmp
mov
mov
or
daa
mov
mov
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fisttpll
in
jle
jge
jle
mov
push
shll
dec
into
xchg
and
sbbl
loop
test
cmp
mov
scas
dec
dec
jmp
mov
push
cli
cmc
cmp
loopne
sub
mov
sahf
inc
sub
aaa
jno
adc
xor
or
aad
insl
insb
mov
pop
mov
cmp
into
into
xor
ljmp
jbe
inc
cld
sub
dec
or
insl
imul
out
xchg
loop
sbb
out
lods
sub
jb
or
bound
inc
inc
pusha
dec
adc
pop
popa
add
aaa
das
aad
fucomip
icebp
cmp
mov
cltd
popa
das
test
mov
not
sti
xchg
pop
pop
lock
jbe
xchg
orl
cmpsb
call
rcrb
mov
leave
or
xchg
dec
or
push
hlt
inc
adc
rcll
gs
aad
test
daa
and
sbb
pop
sti
cmp
sbb
pop
lcall
out
cmp
outsb
sub
or
push
inc
lds
inc
rorb
inc
mov
stc
jmp
cwtl
or
loop
dec
mov
aaa
imul
xor
shr
in
andl
aaa
jecxz,pt
dec
mov
lods
xchg
ret
mov
jnp,pt
cs
call
or
mov
mov
add
faddl
jne
jmp
add
pop
int3
jne
int3
shlb
sub
or
xchg
or
ja
mov
sbb
mov
js
jnp
out
mov
xor
push
fnsave
mov
imul
jp
mov
movsl
mov
hlt
cld
loopne
dec
icebp
inc
sbb
movsb
jg
xorl
push
mov
popa
mov
cmp
ss
xor
test
add
add
cmp
adc
jl
push
cmpb
out
or
mov
adc
pop
scas
mov
fnstsw
ja,pn
loope
rorl
loope
idivb
cwtl
adc
add
jge
cmpsl
fisttpll
pusha
jns
cmc
push
mov
mov
add
cmpsb
insb
mov
gs
jge
addb
xor
nop
sbb
hlt
xchg
std
repz
imul
pop
les
mov
das
mov
mov
dec
push
rorl
test
xor
mov
and
adc
cmpsl
cmpsl
out
js
xchg
iret
loopne
mov
rol
add
mov
push
or
sahf
xchg
jns
daa
int
mov
pop
outsl
inc
outsl
loope
cli
cmp
imulb
cld
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
icebp
rcr
std
je
jle
jp
jle
mov
lds
sbb
jg
jp
cltd
test
sbb
out
add
xor
rcrl
out
pop
and
imul
lea
pop
enter
sti
jecxz
push
mov
call
cld
shll
hlt
cmp
sbb
fmuls
mov
or
insb
call
shll
xor
daa
ficoms
repz
jmp
mov
nop
mulb
cmpsl
cmpsb
inc
scas
sbb
lock
or
das
adc
pop
xor
int3
xchg
sbbl
ds
adc
and
addb
push
outsl
sbb
in
pop
mov
insl
cmp
adc
pop
lea
test
loopne
adc
pop
sbb
rcl
lods
testb
movsb
inc
mov
mov
jne
aad
arpl
mov
outsb
cltd
les
decb
fucomip
cmc
in
fwait
xchg
mov
dec
push
mov
test
xchg
out
add
movsl
push
adc
int3
and
inc
insb
pushf
cmp
jns
cmp
sbb
jnp
push
addr16
fwait
dec
lods
and
ficomps
and
pop
push
rclb
pop
pop
sbb
mov
arpl
loopne
insb
test
cmp
xchg
test
push
mov
and
cltd
iret
sub
enter
ljmp
adc
out
pop
sarb
movsl
ja
cmc
insl
pop
test
xor
ror
sbb
flds
sarb
add
sub
jle
mov
or
mov
jge
xor
in
push
addr16
sar
fmul
jg
jb
sub
jo
or
dec
sarl
fisttps
adc
sbb
aad
out
loop
sbb
mov
inc
push
out
push
dec
gs
mov
lret
sti
daa
xchg
test
add
shrl
inc
push
iret
rclb
cld
and
repnz
or
repnz
xchg
pusha
notl
jae
pop
mov
aas
jmp
inc
pop
xchg
shll
ljmp
xchg
jbe
dec
xlat
mov
mov
fcomi
ljmp
enter
arpl
lods
mov
daa
int
add
lahf
pop
sbbl
pusha
cld
shr
popf
pop
inc
test
jbe
pusha
sub
push
cmp
xor
mov
inc
sub
dec
pusha
ds
push
cmp
loop
pop
sub
push
xchg
push
lret
mov
scas
fs
repnz
mov
in
or
movq
inc
pop
mov
dec
push
loop
mov
int
movsl
pushf
shll
or
cmp
mov
xor
add
mov
mov
mov
jmp
enter
enter
sbb
mull
add
mov
jle
jp
jle
push
xor
mov
ret
test
je
xor
push
xor
mov
and
sub
fnstcw
jno
mov
dec
jg
push
leave
and
mov
mov
dec
cld
in
mov
sbb
inc
addr16
out
std
pop
sti
mov
xor
loope
mov
dec
test
int
lret
pop
add
in
xor
cltd
and
push
jle
addr16
sbb
cltd
sub
gs
repz
mov
dec
fnstenv
in
xchg
mov
cmpsb
mov
and
out
and
shr
mov
mov
xor
stos
mov
pop
dec
xor
or
dec
mov
and
test
adcl
jae
dec
or
fdiv
fidivrs
int3
push
daa
sbb
sbb
lahf
jge
imul
mov
addr16
mov
int3
add
adc
dec
fwait
hlt
clc
sarl
ds
and
cs
sub
and
mov
dec
ret
test
jbe
fs
das
ja
cmp
mov
lds
fcoms
sub
ja
mov
sarl
cltd
adc
push
mov
sbb
pop
les
pop
cld
loopne
cmp
aaa
enter
js
xchg
sbbb
push
fwait
test
iret
adc
dec
jns
push
in
mov
sub
cld
cmp
nop
inc
or
cmp
dec
icebp
jb
mov
dec
mov
push
jae
aad
ds
es
adc
sub
ljmp
clc
add
push
popf
mov
inc
push
or
inc
int3
inc
jmp
jmp
pop
xor
lcall
push
mov
inc
jns
cs
and
adc
ljmp
inc
lahf
or
pusha
add
xor
dec
push
outsl
sub
add
mov
mov
xor
xor
add
jo
in
dec
push
xor
jg
test
rorl
ffreep
dec
in
test
adc
mov
mov
das
fcmovnu
pop
mov
aam
adc
ljmp
push
or
scas
fwait
pop
dec
push
adc
or
cs
ss
mov
sahf
xchg
hlt
pop
cmc
mov
xchg
sahf
sub
sub
ja
out
dec
dec
xchg
cli
pop
xchg
sub
sub
push
xchg
cltd
xchg
scas
pop
fcmovnb
insb
mov
iret
mov
push
inc
lea
push
and
loopne
pop
and
jae
xor
mov
push
test
loope
std
cmp
aad
add
jo
cmpsl
pop
clc
pop
xlat
js
lock
sbb
fs
xor
sub
cmp
cmp
aam
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
loope
test
ljmp
imul
mov
js
ret
repz
aaa
jl
lods
mov
xchg
mov
fistps
xlat
push
leave
ror
mov
repnz
adc
aam
jge
push
sub
mov
mov
and
dec
lcall
dec
cli
lcall
xchg
inc
xor
mov
inc
inc
out
pusha
out
sbb
pop
test
test
mov
xchg
hlt
adc
push
xor
test
unpckhps
pop
mov
push
test
adc
mov
sbb
pusha
add
pop
push
cli
pop
decb
mov
shll
clc
mov
psubq
insb
dec
out
je
popf
das
es
pop
push
leave
mov
jg
fistps
jle
inc
nop
mov
arpl
out
sbb
push
mov
into
movsb
aam
dec
adc
leave
and
pop
sub
cli
xchg
loope
xor
jp
lds
scas
add
into
in
mov
push
repz
in
aad
push
and
mov
fwait
and
in
cmp
push
shlb
cld
popa
rcrl
sub
xchg
jl
fisttpl
mov
mov
xchg
mov
xor
push
add
sti
ds
mov
lahf
pop
push
into
xchg
adc
aad
insb
bound
and
jo
cmp
lock
sub
cmp
lret
sub
stos
cmp
neg
xchg
inc
cmc
and
mov
ss
pop
or
xor
jmp
sbb
or
cmpb
adc
fwait
jg
pop
cld
xchg
xor
xchg
rorb
sub
mov
test
xchg
push
or
sub
gs
ja
inc
jecxz
jne
adc
push
popa
hlt
mov
mov
jbe
pop
ror
cli
mov
das
adc
dec
stc
aaa
sbb
sub
jb
imul
int
in
jns
jbe
pop
push
fsts
stc
or
xor
icebp
loop
or
jmp
cmp
mov
lahf
and
enter
out
push
lahf
and
into
jg
nop
dec
imul
pop
fstpt
imul
push
call
std
test
sbb
aam
mov
int3
adcl
out
int3
leave
mov
sub
leave
aam
int
sti
pop
out
fwait
es
arpl
sub
or
mov
addl
sbb
scas
imulb
loope
jnp
mov
pop
dec
fistpl
add
push
dec
inc
xor
daa
repz
fwait
out
jb
or
fsubr
xchg
fsubrl
outsl
scas
rolb
scas
scas
mov
pushf
shlb
aad
add
pop
mov
call
lods
pop
rcr
push
mov
rclb
dec
cwtl
cld
mov
push
mov
jmp
in
notb
sub
or
jle
jp
jle
lahf
ret
ljmp
pop
jb
pop
mov
xchg
cs
leave
add
ljmp
mov
cwtl
xlat
imull
data16
and
popa
out
push
add
mull
inc
out
sub
icebp
add
es
cmp
shl
lahf
mov
mov
and
loopne
mov
mov
or
xlat
sub
sub
out
call
aam
adc
pop
push
ficompl
roll
out
test
in
xor
lcall
jns
rcrl
sub
pushf
jle
outsb
aam
out
lds
pop
aas
push
add
and
jne
cmpb
inc
fidivrs
pop
inc
fmuls
aas
hlt
cs
imul
sti
mov
mov
mov
int
jge
mov
jg
out
lret
into
cmp
rcll
push
xchg
in
dec
add
jle
add
xlat
pop
mov
test
mov
dec
cmp
daa
gs
lods
test
or
xor
sbb
pop
inc
out
sti
mov
xchg
fs
add
xchg
xchg
stc
popa
adc
or
xchg
loop
jns
lahf
imul
lret
iret
or
jns
add
or
je
sbb
mov
dec
insl
in
dec
inc
sub
and
mov
popa
lds
sub
int
mov
xchg
or
xchg
cmc
pushf
add
mov
stos
test
rcl
call
xor
or
in
jmp
divb
ja
xchg
jo
orb
jbe
lea
pop
jb
es
push
xchg
orl
outsl
and
jl
cmp
add
aad
fmull
mov
aad
and
jno
in
hlt
jbe
push
adc
push
mov
scas
icebp
adc
std
aad
mov
pop
or
or
mov
je
pop
dec
fnstsw
out
bound
dec
ret
mov
cmp
inc
lret
or
adc
scas
je
lods
jns
and
fcompl
daa
or
enter
or
and
sbb
sar
jnp
mov
mov
js
mov
dec
lods
push
stos
mov
xor
lods
dec
cmovo
inc
in
aad
stos
push
stos
adc
push
ja
jnp
lret
in
out
mov
cmpsb
jp
gs
pop
sbb
push
outsl
adc
lods
xor
add
test
jmp
outsb
outsb
push
std
xchg
and
lret
pop
repnz
inc
fidivrs
outsl
push
lret
stc
clc
sbb
pusha
inc
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
mov
enter
jle
jge
jle
and
push
clc
enter
mov
in
out
pusha
sbb
pop
sti
aam
aam
pop
inc
imul
les
ss
pop
sub
andl
fistpll
insb
push
push
mov
cmp
mov
cmp
and
add
add
loope
dec
or
int3
add
xor
inc
xor
sbb
add
pop
sub
mov
pop
xchg
hlt
mov
sub
lcall
out
mov
int
mov
shlb
clc
push
ret
addb
ja
jo
pop
lock
into
rol
push
jae
sahf
scas
push
roll
fisubrl
cmpsl
jle
cld
pop
mov
and
rcrl
cmpsb
cld
mov
ljmp
aaa
fisttpll
adc
xchg
adc
mov
push
add
orb
jmp
das
hlt
mov
ss
jle
insl
sti
leave
xor
jp
cmpsb
mov
aaa
xchg
pop
jmp
or
into
ljmp
push
insb
cs
push
movsl
and
ja
mov
mov
inc
mov
or
dec
outsb
daa
inc
into
fldl
lahf
mulb
sbb
and
xchg
push
orl
stos
movsb
out
dec
pop
in
icebp
cmp
push
lahf
cmpsb
into
pop
inc
sbb
lcall
mov
inc
pop
mov
xor
js
inc
push
pusha
push
sub
pop
fs
jne
leave
dec
xchg
cltd
hlt
sub
rcrl
adc
mov
sbb
add
lcall
pop
jae
mov
in
xchg
test
popa
ret
ds
cmp
mov
mov
mov
push
xorb
cmpsl
inc
in
jl
ljmp
stos
cltd
and
lret
adc
push
repz
pop
lea
lret
push
aaa
sarl
or
sbb
ficompl
pop
sub
cwtl
xor
pop
loope
negl
roll
out
or
cmp
ja
xchg
sbb
out
iret
push
into
fwait
or
aas
adc
sub
shr
std
sub
sti
fwait
push
out
mov
xor
push
cwtl
int3
mov
inc
jg
lods
scas
fdivrs
inc
fiaddl
pushl
dec
mov
pop
hlt
out
cltd
in
std
ljmp
clc
push
loopne
in
xchg
sbb
lcall
jge
roll
mov
fcompl
test
sub
and
push
je
lcall
shll
jg
add
outsl
lcall
lahf
push
pop
test
cld
mov
pushf
push
lock
cltd
cltd
std
add
mov
enter
mov
cmp
pop
adcl
xor
mov
xorb
sub
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
and
jp
jle
mov
pop
push
push
adc
nop
lods
pusha
negl
clc
cmp
or
jns
mov
xchg
sbb
clc
mov
push
int3
pop
lock
cmp
fucomip
dec
cmp
cli
inc
mov
mov
jno
pop
push
es
mov
cmp
lds
fimuls
data16
push
cmpsl
or
xor
mov
stos
mov
or
out
lahf
int3
into
daa
xor
sub
and
push
pop
jmp
out
popf
sub
mov
cli
test
mov
push
outsl
stos
aam
add
pop
xlat
mov
lea
jl
dec
shl
sti
xor
cmovg
push
sub
lahf
or
idivb
out
pop
add
sbb
xchg
in
arpl
dec
push
jg
dec
imul
fnsave
mov
iret
xchg
imul
hlt
cmp
cltd
fmulp
icebp
std
pop
xor
ja
cmc
out
mov
push
jle
lea
jle
push
xor
mov
movsb
inc
popf
mov
repnz
dec
push
mov
js
or
das
dec
clc
imul
inc
cmp
jmp
sub
xor
adc
or
xchg
pop
inc
mulb
adc
mov
jnp
mov
ret
lret
outsl
xor
mov
xchg
fwait
sti
inc
or
scas
fidivrl
aas
xchg
mov
push
ret
inc
mov
fidivrl
nopl
pop
paddd
cmp
xlat
pop
daa
scas
test
xor
ds
xor
or
mov
ljmp
add
mov
or
mov
sbb
sub
addb
sbb
fcoml
test
add
or
push
stc
or
mov
fadds
jns
mov
sub
xchg
sub
xchg
xchg
mov
xchg
push
pop
cmp
add
pusha
cs
pop
adc
pop
shll
stc
test
popf
cwtl
inc
imul
pop
sarl
mov
call
cmpsl
mov
dec
or
stc
stc
adc
add
dec
xchg
xchg
test
and
lods
or
or
push
cmp
sarb
xor
std
xlat
xchg
inc
xchg
xchg
xchg
lods
xchg
adc
stc
push
fwait
nop
inc
sar
push
ljmp
bound
in
test
arpl
xor
and
jg
ljmp
cmpsb
aaa
sbb
rorb
cmpsl
fildll
jae
or
call
scas
stos
jge
push
jne
nop/reserved
xor
imul
dec
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
sbbb
jle
jge
jle
in
mov
jb
fiadds
adc
xchg
loope
sbb
shrl
jbe
adc
cmp
shrl
pop
xchg
push
add
icebp
insl
cmp
jne
mov
jle
add
ror
test
cwtl
pushf
fwait
outsb
mov
jne
jmp
mov
sub
lcall
cmc
mov
outsl
jo
lcall
mov
cld
lret
mov
stc
sti
je
jecxz
jne
rclw
sub
test
sbb
in
and
outsb
xchg
leave
push
push
imul
push
mov
jbe
enter
daa
cmp
jle
test
inc
xor
orl
inc
or
xor
paddusb
fs
ja
imul
cs
jno
push
sub
add
jns
sbb
push
and
in
fs
movsl
xlat
cwtl
lds
adc
cmp
mov
cld
test
adcl
imul
xchg
xchg
xchg
mov
out
loope
sahf
out
out
or
push
pop
fisubrs
jne
hlt
data16
pop
dec
es
mov
or
sbb
in
je
sbb
ror
cmp
xchg
inc
or
jmp
fwait
add
sub
dec
hlt
add
or
fdivrp
push
outsb
add
je
scas
fldcw
dec
fucomip
mov
adc
mov
jmp
push
lahf
rol
pop
je
int
mov
jae
repnz
cmp
mov
jbe
pop
jb
lods
sahf
popa
sub
mov
popf
fistps
inc
mov
not
fnstsw
sti
cltd
xor
cmp
test
out
inc
lahf
dec
aad
push
dec
ret
xor
stos
cmpsl
or
pop
cmp
int3
or
ret
notb
bswap
gs
xor
mov
fnstcw
jmp
je
aaa
psubsb
mov
mov
pop
cmpsb
cmp
test
clc
mov
cmp
xor
out
enter
mov
fxch
adc
loop
dec
popa
inc
xchg
imul
push
xchg
lcall
nop
ljmp
sbb
mov
enterw
aas
movsl
adcb
dec
push
jmp
adc
or
cmp
add
push
scas
sbbl
subb
call
daa
mov
imul
fs
ja
arpl
xchg
insb
adc
xchg
test
rcll
add
mov
icebp
cwtl
stos
lock
mov
adc
pop
pop
dec
cmpsb
push
ret
and
xchg
loopne
repnz
inc
mov
jbe
js
jne
fdivrs
gs
sti
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
cvtps2pd
mov
cmp
mov
mov
push
int
jl
mov
int3
aam
mov
rcl
insb
je
mov
mov
test
aam
bound
inc
mov
lods
push
cld
std
push
sbb
cmp
sub
out
xor
std
xor
lods
idivb
sbb
test
lret
shl
ret
add
pop
fwait
pslld
adc
pop
push
pop
stc
inc
mov
into
xor
int3
pop
cmp
add
mov
hlt
bound
xchg
jb
inc
xor
cmp
clc
mov
pop
fidivrs
ljmp
xor
in
stos
outsl
fsub
add
push
int3
scas
ljmp
xor
testl
mov
push
sbb
push
cmpsl
mov
jno
jb
fistpl
mov
jae
frstor
arpl
mov
ficoml
int3
mov
clc
ljmp
mov
add
jb
fldt
in
mov
sbb
popf
pop
and
lods
sbb
pop
daa
rcll
jl
push
adc
inc
cmp
xchg
outsl
and
pop
jmp
idiv
mov
inc
inc
dec
pushf
je
adc
pop
adc
or
mov
xchg
inc
mov
mov
inc
sub
push
fisubrl
stos
jo
into
mov
and
push
push
ja
daa
ljmp
push
dec
jp
mov
hlt
push
les
xorb
scas
or
or
jbe
outsl
icebp
cmpsl
adc
xor
fwait
dec
jb
or
daa
inc
out
mov
xchg
iret
xchg
pop
addr16
push
sub
pop
mov
or
dec
xchg
mov
push
and
mov
repz
lahf
inc
out
mov
pusha
dec
sub
rcll
int
cli
inc
fidivrl
mov
aas
leave
js
lea
loopne
and
clc
and
lahf
mov
fmull
xor
adc
cwtl
or
add
int
lds
clc
test
mov
nop
and
xchg
rorb
push
mov
test
or
mov
push
sbb
test
aaa
out
push
cmp
add
incl
shl
xchg
jb
movsl
lock
sti
mov
inc
sbb
mov
addr16
jne
adc
loope
inc
ret
dec
fwait
rorb
rorl
mulb
fisubl
ja
adc
dec
lcall
into
push
add
push
cli
or
or
aad
lods
sbbl
mov
cmp
sub
xchg
test
lods
sbb
add
out
mov
xchg
shlb
mov
nop
cmc
jp
push
fisttps
popl
sub
add
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
sti
ljmp
jle
jmp
shrl
stc
push
and
js
jno
cmpsl
test
jge,pt
cmp
dec
xor
pop
xchg
in
adc
cwtl
loopne
shrl
mov
sub
xor
xor
inc
leave
fstps
jle
pushf
adc
jmp
lods
std
jmp
fcomp
add
lret
inc
fldenv
jg
pop
inc
aad
add
lea
das
in
add
into
fwait
mov
scas
cmp
loope
int
jo
repz
mov
xchg
adc
adc
mov
jnp
insl
xchg
xor
insl
mov
in
and
cld
fldenv
xchg
adc
inc
add
push
ds
mov
cs
aam
js
std
mov
lods
push
xchg
mov
mov
dec
dec
fbstp
mov
scas
shl
and
dec
je
xchg
leave
cmpsl
mov
adc
xchg
stos
je
pop
out
sbb
test
insl
cltd
jo
sbb
pop
fcomip
jp
cmpsb
les
insb
xchg
icebp
data16
xor
xchg
scas
outsl
lret
outsl
add
mov
pop
fstps
aas
xor
aas
push
push
jp
and
push
ret
xlat
pushf
fcmovu
adc
mov
push
rorl
gs
jb
jle
or
mov
ljmp
mov
std
xchg
jb
int
lds
sbb
add
xchg
mov
scas
imul
adc
rcrl
mov
jle
addr16
fcomps
repnz
push
mov
arpl
testb
cwtl
cmpsl
cmpsl
jmp
sbb
lock
xchg
xchg
dec
cmpsl
fcmovnu
push
fadds
inc
pop
cli
and
scas
aad
cs
pusha
jl
adc
mov
and
repz
and
mov
out
cmp
sbb
xchg
pop
call
fs
call
test
scas
and
jecxz
push
je
fs
fwait
mov
loop
mul
pop
ljmp
lret
ljmp
xor
stos
stos
repz
lock
jg
inc
imulb
jno
popa
jo
push
xchg
int3
pop
mov
xchg
test
mov
insb
mov
dec
mov
fwait
pop
stc
xchg
adc
xchg
out
xor
mov
pop
test
movsb
pop
xor
sti
cmp
adc
mov
push
mov
jnp
pusha
mov
hlt
outsb
cmp
daa
in
comiss
testb
les
in
mov
outsl
ss
pop
add
fcmove
add
push
out
out
or
icebp
loope
dec
jnp
lret
gs
cmp
inc
mov
mov
cmp
inc
xchg
jmp
sti
movsb
mov
int
shlb
lock
push
std
into
and
pusha
stc
ret
int
pop
push
jp
dec
jmp
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
jle
jp
jle
add
push
push
loop
aas
mov
add
mov
clc
push
mov
adc
shll
xchg
jge
mov
pop
loopne
mov
je
inc
nop
js
jae
or
ficoml
push
sub
sti
mov
js
sub
mov
ret
jnp
xor
loope
mov
imul
das
and
cmp
ret
cmpsl
mov
or
inc
shll
cmpb
outsb
aas
popf
daa
pop
and
xor
sub
in
rcrl
ret
mov
hlt
xchg
push
mov
xor
aaa
mov
sbb
pop
xor
and
in
mov
mov
aas
pop
dec
lods
ds
dec
mov
lods
cmpsb
shrb
add
or
jae
fdivrs
push
jmp
pop
fisubrl
in
roll
lahf
lahf
mov
ljmp
xor
add
pop
outsl
xchg
xor
aad
pop
loopne
popf
mov
inc
push
cltd
xchg
dec
add
mov
pop
in
les
mov
ss
daa
iret
push
cmp
jle
loop
mov
lock
mov
cmp
push
cmp
mov
xchg
xor
cmp
cmp
xchg
xchg
mov
pop
sti
pop
arpl
js
iret
jl
sbb
push
adc
movsb
lock
stc
insb
mov
shlb
mov
or
shld
dec
in
sbb
imul
jmp
ja
stos
insb
mov
out
arpl
fdivrl
lea
mov
xchg
hlt
xchg
mov
rorl
sti
push
push
xlat
pop
or
push
xchg
pusha
clc
aaa
or
nop
pushf
cld
xor
in
or
shl
jns
stos
sub
and
xchg
int
fstpt
inc
push
xchg
mov
mov
ret
push
cmpxchg
jo
xor
adc
xchg
lock
mov
xor
cmp
lods
xor
inc
adc
inc
adc
mov
xor
pop
ljmp
divl
sub
cmp
js
mov
addr16
xchg
pop
aam
add
push
pop
je
and
fisttpll
ja
cli
fs
jns
push
sub
inc
aas
push
test
adc
mov
sub
test
imul
cltd
mov
jnp
je
push
sar
inc
jg
cmp
call
sub
lcall
shl
cs
lahf
insl
cmp
cmp
ljmp
lcall
xor
arpl
pop
dec
ret
daa
add
enter
xchg
mov
loop
inc
cltd
in
adc
add
adc
movsb
dec
fsubl
jnp
insb
add
subb
or
add
out
xor
mov
loop
into
xor
xchg
dec
ffreep
and
jp
jle
add
sub
scas
enter
mov
inc
sbb
jecxz
dec
mov
xchg
loop
xchg
aas
aam
insb
addr16
nop
sarb
push
into
cld
imul
ss
dec
adc
sbb
adc
mov
repz
pop
das
mov
cmp
lods
pop
movsl
hlt
and
push
pmuludq
shlb
xchg
xor
movsb
mov
mov
jbe
call
adc
shrl
xor
movb
lret
lods
ja
insl
mov
andb
xchg
dec
test
sbb
cmp
dec
rorl
data16
sbb
pop
test
fldenv
cmp
pop
fsubrs
popa
negb
inc
cmp
stos
sub
cmpsl
push
or
loope
stos
sub
xchg
daa
adc
add
add
and
dec
cmpsb
cmp
gs
sub
and
jmp
add
jg
push
sbb
aam
and
or
sarl
inc
bnd
lret
popf
mov
adc
lret
sbb
inc
inc
out
add
mov
cmpsl
jmp
or
out
push
jp
push
cwtl
lea
add
sbb
lea
test
jmp
mov
cld
add
sahf
stc
mov
fs
pop
dec
dec
mov
mov
add
je
xchg
mov
int
loope
daa
or
jge
lock
aad
pusha
ja
push
xor
xorl
push
mov
inc
out
out
aad
outsl
add
mov
rorl
sub
jp
xor
pop
cmp
push
sub
addr16
sbbb
xor
imul
in
lock
adc
mov
in
or
cmc
inc
cwtl
lret
xor
hlt
or
data16
fcoms
or
mov
iret
or
push
ja
roll
ret
cmp
mov
add
pop
mov
outsl
cmpsl
jle
xor
mov
mov
jb
push
xchg
dec
dec
aas
repz
adc
xchg
int
push
mov
mov
fisttps
xchg
mov
add
xor
mov
mov
dec
xchg
sbb
push
sub
fs
dec
dec
aas
jecxz
das
fistl
mov
adc
out
mov
xchg
in
mov
int
pop
or
pop
cmp
ds
test
mov
stc
push
add
fidivs
xor
pop
xor
mov
mov
jp
shrl
mov
mov
xchg
add
mov
mov
adc
daa
fmul
jle
cld
jge
cwtl
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
aad
sbb
jle
cmpsl
push
daa
cmp
loop
mov
addb
pusha
lods
xor
addr16
sbbl
cmc
mov
mov
xor
idiv
sbb
out
add
insb
pop
test
mov
jle
xchg
in
sbb
or
scas
addl
or
add
xchg
rorl
sarl
test
push
jno
cmpsl
sbb
jl
aaa
mov
clc
cmp
cmp
pushf
or
lret
xlat
jle
sbb
cmp
jg
push
add
outsb
loopne
and
and
std
lods
and
std
scas
xchg
jno
sti
movsb
mov
dec
jne
add
pop
add
clc
pushf
divl
notl
push
xchg
xlat
lret
mov
adc
push
cmp
pusha
adc
xchg
in
add
mov
rolb
stc
insl
insb
in
bound
std
ret
or
push
push
jg
sub
fcoms
jb,pt
scas
add
clc
xchg
int
inc
xchg
int
xor
adc
add
aaa
or
mov
mov
and
push
jle
inc
inc
outsl
pop
outsl
push
cwtl
popa
movsb
cmp
and
decl
aam
sub
cmp
xchg
sti
adc
fdivrs
lds
xor
popf
sub
popf
cmp
mov
cmp
push
jns
sbb
lahf
pop
mov
and
adc
jecxz
popf
mov
cmpsl
in
mov
cltd
inc
gs
imul
fidivs
daa
mov
aaa
bound
xor
pop
sbb
sub
pushf
sti
dec
les
xor
fisttpl
aaa
js
add
pop
xchg
das
test
mov
std
cltd
push
dec
lds
rcr
popa
enter
jae
and
dec
notl
mov
mov
imul
js
mov
out
or
jl
es
xor
xor
jnp
dec
es
add
dec
push
add
lcall
int
dec
outsb
add
xchg
loope
out
popa
mov
mov
jnp
add
xchg
and
out
cmc
rcl
xor
pop
sahf
das
and
iret
mov
adc
xor
jno
loop
test
jmp
insb
jns
and
les
and
and
je
insb
cmp
stos
pop
or
lret
xor
stc
or
mov
mov
cmpsb
cmc
cmp
arpl
mov
mov
arpl
addb
mov
inc
out
stos
jp
mov
add
push
adc
mov
sub
clc
in
pop
push
add
adc
ret
push
pop
jmp
test
popa
psubd
lret
movsb
add
mov
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
add
mov
mov
jge
jle
jecxz
xlat
xchg
jmp
leave
jmp
mov
aad
or
mov
xor
pusha
inc
lret
or
fstpt
clc
loop
add
andl
jns
hlt
add
inc
nop
shrb
lods
sub
lds
fs
xorb
iret
iret
or
popa
out
cmc
push
cmp
and
out
cli
cmp
jb
dec
xchg
add
jecxz
xchg
jge
xor
mov
cvtps2pi
mov
or
cmpsl
rolb
xchg
lods
dec
dec
fisttpl
inc
sbb
repnz
js
imul
or
xchg
inc
jmp
rcrb
jge
clc
ja
xchg
int
mov
mov
xchg
jge
and
addr16
in
push
or
out
and
and
sbb
fdivrs
std
ret
outsl
mov
mov
lods
adc
out
push
xchg
sahf
out
push
icebp
inc
xor
iret
push
pop
lea
es
cwtl
mov
sbb
scas
mov
inc
xor
fsubrs
outsl
arpl
xchg
cmp
cmp
sbb
xor
mov
jle
mov
adc
cmp
cmp
jge
icebp
push
fcomps
fisubs
mov
shl
inc
in
divb
xlat
or
in
sub
and
push
add
mov
loop
testb
lret
js
or
mov
sbb
xor
rcrb
inc
shlb
out
mov
pop
nop
rclb
aas
sbb
jp
inc
inc
ja
orb
clc
sub
mov
inc
sub
popa
enter
les
jne
aaa
jg
movsl
fldenv
repz
mov
jge
das
mov
jg
shr
cmc
xchg
shll
mov
pushf
xor
dec
cmpsb
shll
int3
cmp
sub
and
out
bound
add
addl
jl
stos
popa
es
lock
or
iret
std
sub
out
cli
mov
cmp
bound
sbb
dec
xor
push
gs
mov
sbb
jge
pop
stos
outsb
mov
cli
cltd
adc
stc
aaa
mov
xchg
mov
pop
fdecstp
mov
loop
mov
xchg
loope
dec
jo
mov
lret
jnp
fcoms
dec
in
arpl
add
dec
pop
mov
out
push
pop
cmp
push
adcb
lret
mov
jl
or
push
pop
insb
sbb
mov
popa
xchg
mov
xchg
cmp
jp
mov
stos
pop
rclb
dec
outsb
mov
pop
mov
std
adc
ret
je
pop
shrl
sub
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
fwait
adc
repnz
stos
cmp
in
outsb
int
push
and
subl
pushf
pop
pusha
jl
iret
jnp
out
loop
push
add
movsb
data16
pushf
dec
aad
fxch
shrl
sub
xchg
sub
loopne
xor
js
inc
insl
inc
das
xor
test
push
fwait
es
cmp
mov
repz
je
pop
ja
fisubs
dec
rcll
xchg
insb
xor
mov
fnstsw
mov
gs
xor
paddq
lods
ja
int
cltd
adcb
aaa
cwtl
jg
xchg
jle
cli
inc
int
ror
add
icebp
push
and
cmc
lret
pop
out
pop
push
lds
sbb
stos
ja
dec
cmpsb
jnp
rorb
dec
mov
mov
orl
push
mov
cltd
mov
jbe
in
or
cld
ds
js
dec
rcl
rorl
ljmp
sti
dec
cltd
dec
cmpl
iret
stc
pop
scas
sub
stos
jle
mov
imull
jno
mov
ss
fdivr
mov
adc
test
lods
adc
inc
insb
nop
sub
out
lock
add
in
or
inc
roll
add
sbb
xor
mov
and
das
jo
ljmp
adc
ret
icebp
std
shl
out
add
nop
cmp
cld
add
aam
mov
imul
shrd
dec
mov
cmpsl
out
mov
xchg
in
mov
lcall
xchg
inc
ret
xor
repz
mov
mov
cmp
add
leave
mov
fwait
std
inc
pop
daa
test
sub
addr16
jmp
gs
push
sub
movsl
mov
push
xlat
fwait
push
je
je
xchg
in
lcall
dec
push
mov
cltd
lahf
fsubl
cmpsb
adc
dec
repnz
jg
call
ljmp
push
pop
push
stc
std
sub
xchg
movsb
jmp
inc
pop
enter
add
into
lods
nop
and
mov
rcr
cmc
mov
push
pusha
cmpl
jge
out
or
bound
mov
mov
outsb
add
inc
stos
sbb
sub
cmpsb
inc
add
popf
push
sub
mov
lea
das
call
or
cmp
mov
mov
ret
or
aas
adc
addb
outsl
jmp
push
jmp
loopne
jo
je
out
adc
push
inc
xchg
push
xadd
adc
pop
les
pusha
mov
pop
enter
into
dec
sbb
pop
mov
leave
sti
hlt
jne
testb
hlt
xchg
je
dec
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
push
or
jge
jle
xchg
cmc
xor
je
cmc
test
sbb
lcall
mov
cmp
roll
inc
popa
dec
dec
ds
and
inc
pop
je
scas
push
fisttpll
movsb
jbe
jle
leave
cmp
test
nop
sbb
cmp
pop
sub
ja
adcl
daa
in
leave
jg
mov
dec
shrb
adc
dec
mov
inc
clc
dec
push
enter
dec
test
fwait
xchg
cwtl
jecxz
xchg
jo
shrl
mov
jbe
cmp
mov
fucomi
loopne
or
push
sbb
or
movsl
out
test
aam
jno
lret
lret
push
in
push
cmc
jb
shl
add
dec
repnz
loopne
lea
aas
or
mov
xlat
mov
call
push
dec
mov
mov
int
jge
std
sti
mov
mov
xchg
pop
lea
xor
test
push
mov
cmpl
fs
xor
ret
je
scas
xlat
pusha
fcompl
test
xor
ret
add
cmpsl
and
fs
xchg
mov
sbb
jg
adc
or
imul
mov
jne
or
jne
lcall
out
lds
mov
imul
lds
push
int3
sbb
jl
push
sub
jne
loopne
push
loop
jmp
pop
pop
mov
mov
loop
pusha
pop
mov
repnz
popf
cld
pushf
loopne
pop
jecxz
push
jecxz
mov
xor
add
mov
mov
sahf
mov
clc
mov
inc
cmp
pop
sbb
fnsave
jle
adc
cmp
mov
dec
cmpsb
and
mov
inc
cmc
cmp
push
mov
jae
and
loope
mov
and
movsb
addr16
ret
xchg
or
push
repnz
out
idiv
xchg
out
cmp
das
test
ret
xor
xchg
fcmovne
push
dec
stos
mov
mov
jmp
or
cs
fcmovne
out
pop
mov
pop
and
mov
inc
jecxz
pusha
enter
mov
das
xor
mov
jp
scas
add
inc
or
dec
enter
inc
cli
ss
add
fstpt
sub
fldl
cwtl
mov
popa
and
push
cmp
outsl
out
rcr
fidivrs
scas
popa
mov
insb
imul
mov
xor
mov
pop
dec
pop
add
lock
enter
inc
dec
cmpsb
xchg
test
lret
fcoml
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
mov
dec
iret
sub
jle
jge
jle
add
jne
ds
sub
out
adc
push
nop
cltd
orl
lock
pop
ret
loope
out
daa
jle
cmp
push
pushl
add
adc
insb
out
mov
nop
jmp
and
inc
lret
jle
sbb
pop
outsb
pop
pusha
pop
int
mov
das
mov
ds
mov
jno
call
inc
pop
mov
pop
xchg
shl
std
js
repz
lea
jmp
stos
and
jge
and
xchg
inc
stos
push
jo,pn
mov
dec
or
das
pop
gs
inc
inc
xor
test
mov
fcmovnb
daa
xchg
push
je
mov
cmp
jb
inc
insl
adc
jecxz
add
inc
push
mov
pop
daa
and
loop
add
jmp
adc
lret
mov
pop
mov
and
dec
addr16
pop
scas
jb
mov
movl
jae
out
scas
lods
lods
jno
insl
ss
xchg
and
jle
xchg
sub
pop
push
jecxz
dec
enter
jecxz
inc
mov
addr16
repnz
loopne
pushf
or
cld
jb
or
scas
test
jmp
push
mov
ja
cwtl
push
stc
or
xchg
insl
notl
out
hlt
and
aaa
in
lret
fwait
clc
pop
out
das
jae
fimull
ja
xor
mov
pop
pop
in
ss
rclb
push
inc
sbb
add
hlt
dec
mov
ret
mov
push
push
out
dec
outsb
sbb
xor
shrl
adc
fnstcw
push
test
in
aas
cmp
test
sbb
push
cmc
in
insb
loopne
bound
or
mov
ja
xchg
lods
cmp
sbbb
ret
andl
fsubs
rcr
insb
inc
xor
sub
inc
cmpsl
or
dec
lret
int3
add
jg
std
or
lock
rcrb
roll
inc
fstp
out
or
mov
xchg
inc
out
aam
adc
adc
int
je
dec
jo
fldenv
or
test
cmp
push
cmp
data16
js
jne
mov
adc
pop
sahf
push
mov
xor
pushl
mov
adc
pop
mov
xor
pop
sbb
ss
mov
stos
mov
fdivrs
mov
sarl
daa
pop
dec
cmp
test
sarb
xchg
and
out
or
ss
push
enter
mov
or
add
adc
stos
mov
and
in
aad
push
out
fcmovu
mov
adc
sbb
pusha
lret
loop
inc
mov
rorl
in
add
test
out
aam
pop
add
loope
imul
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
cmp
jle
jge
jle
insl
mov
mov
insb
dec
data16
lods
xchg
mov
lcall
enter
popf
pusha
or
pop
adc
std
dec
pop
mov
out
dec
pop
fs
fisubs
pop
mov
mov
mov
imul
push
bound
cmp
jo
mov
adc
outsb
push
repnz
in
mov
ljmp
inc
pop
cmpsl
fldl
lcall
es
inc
scas
mov
shrl
icebp
dec
cmp
in
dec
mov
pop
test
js
sarb
mov
pusha
push
mov
push
push
dec
adc
jae
ss
repz
sahf
rcrb
inc
mov
mov
mov
movsl
test
cmpsl
and
ficomps
pushf
pop
push
es
adc
ss
aam
es
fbld
pop
xlat
outsl
inc
cmc
xor
mov
dec
mov
ficoms
aaa
mov
sbb
aaa
and
mov
lds
je
arpl
or
rorl
shrl
jo
inc
insb
out
pop
ljmp
sti
mov
in
daa
pop
mov
jae
or
mov
rolb
divb
loopne
pop
ret
cmpsb
mov
and
loope
dec
xor
cmpsb
dec
mov
ja
dec
repnz
push
out
call
stc
and
leave
shlb
fdivl
fdivrs
push
mov
clc
cmp
or
test
stc
iret
sub
out
cltd
mov
fwait
xor
stos
je
bswap
adc
out
icebp
int3
xor
idivb
lods
outsl
inc
js
or
add
adc
xlat
test
cs
lret
je
mov
fbld
jge
fidivrs
stos
dec
xor
ret
push
push
add
out
pop
or
iret
in
loopne
mov
popf
fs
fs
mov
jae
insl
lret
cmp
pop
pop
in
je
ds
add
lret
push
push
out
stos
cmp
ds
jb
add
adc
sub
xor
dec
sbb
adc
or
mov
pop
arpl
xchg
mov
popl
out
or
xchg
jge
dec
scas
mov
testb
lret
jns
pop
or
ss
sbb
addr16
aaa
xor
test
jge
int
les
jmp
adc
and
in
notb
out
jbe
sub
cmpsl
mov
sub
push
cmpsl
insl
in
or
inc
aad
inc
push
call
stos
scas
or
add
jmp
stos
out
mov
cmpsb
aad
ds
inc
outsb
ja
ss
push
fmul
pusha
clc
sub
add
lcall
lea
jmp
das
subb
mov
xor
fwait
sbb
add
lahf
jle
jge
jle
xchg
push
out
push
out
mov
or
bound
cmp
dec
push
push
xchg
outsb
mov
sbb
mov
mov
loope
xchg
cmp
fcmovnbe
jp
adc
hlt
in
div
sub
mov
lock
add
lret
jecxz
fisttps
and
cmc
loope
pushf
pop
xor
mov
xor
lahf
packssdw
std
roll
repz
bndldx
add
cmpsb
clc
ja
imull
xor
inc
push
jns
push
cmp
pop
icebp
cmp
and
jmp
aam
mov
jno
fsub
adc
adc
xchg
rcrb
add
cmp
aam
shrl
xor
cltd
sub
neg
jbe
jb
jns
pop
adc
rcl
add
int3
dec
or
mov
aad
inc
mov
call
sub
es
imul
bound
xchg
int
out
jge
mov
loopne
clc
sarb
xor
add
mov
and
mov
pop
jbe
stos
out
mov
in
ja
fistpl
neg
mov
jl
and
add
outsl
push
xchg
sub
dec
cmp
fdivr
or
mov
cmp
iret
push
ss
xchg
sbb
add
jne
mov
push
sti
inc
ss
dec
and
outsb
jmp
imul
mov
mov
or
mov
pop
aam
and
bswap
bound
lret
dec
pop
xorb
aam
pop
and
arpl
nop
int
std
stos
jp
ret
or
stos
sub
push
sbb
add
dec
and
push
push
sub
int
and
out
xchg
jecxz
cmp
adc
mov
lret
jno
mov
adc
sub
sbb
sar
sub
mov
jne
es
loopne
stos
dec
sub
or
ljmp
gs
pop
sub
shlb
mov
rcll
insb
lds
and
mov
mov
mov
sti
aaa
push
mov
cmp
jg
je
mov
shr
lods
out
mov
mov
ret
repnz
add
push
push
push
mov
adc
das
and
fisttps
push
adc
lea
divl
push
adc
fcmovne
insl
hlt
xor
pop
mov
inc
outsl
mov
pushw
jl
pop
xchg
dec
mov
mov
outsl
nop
mov
dec
cmp
lret
and
shrb
and
std
repnz
lret
xchg
sbb
push
xor
jns
repnz
cltd
mov
sbbb
ret
mov
jge
jmp
repnz
adc
aad
fcoms
adc
jle
jge
jle
pop
imul
loopne
xor
push
jmp
icebp
xchg
adc
mov
cli
dec
fistps
call
shr
js
sti
call
scas
cmp
orl
xchg
jnp
mov
mov
xor
xchg
mov
push
sub
xchg
imul
leave
push
mov
cli
xchg
sub
lea
pusha
mov
mov
ja
jmp
mov
sub
jmp
jbe
pop
inc
cmp
aas
popf
test
test
mov
test
fmull
out
arpl
stos
cmp
xchg
add
loop
aaa
arpl
sbb
hlt
stos
dec
or
jge
cmp
mov
mov
mov
jecxz
stos
add
xor
sub
cmp
leave
in
or
or
scas
pop
lahf
lret
aam
add
mov
push
push
jmp
loope
push
loopne
dec
jb
lret
cld
cs
jge
push
adc
mov
rcrl
gs
dec
pop
xchg
adc
fimull
rcr
fidivrs
mov
xchg
or
je
in
push
push
cmpsb
push
cmp
or
out
mov
push
into
ret
insb
mov
fcmovne
or
insb
or
fwait
pusha
jge
and
dec
je
or
adc
adc
enter
jge
jg
or
push
incl
stc
and
addr16
fnsave
jg
movsl
je
bound
dec
subl
repnz
cwtl
pop
in
mov
xchg
mov
fwait
mov
mov
in
cmp
jmp
rcl
ds
enter
aaa
mov
pop
push
pushf
das
fisubrs
shr
repnz
adc
adc
stos
sub
pop
scas
subl
xchg
pop
push
mov
pop
jbe
xor
xor
movsb
test
nop
xor
sbbl
pop
int
ss
push
into
cli
icebp
jecxz
dec
mov
gs
mov
and
in
iret
pushf
les
adc
aas
stc
mov
sbb
mov
jae
xchg
mov
xchg
sbb
cld
xorb
lea
and
outsb
fwait
in
daa
xor
mov
xor
push
push
push
andl
push
mov
sti
pop
cmp
pop
xor
push
xchg
call
out
and
in
jb
and
pop
pop
inc
mov
daa
jae
or
mov
xor
dec
addr16
in
add
push
sub
pop
mov
pushf
cmp
inc
sub
adc
pop
es
mov
stos
jl
mov
test
jle
xchg
pop
push
pop
dec
inc
cmpsb
cmp
sub
nop
stos
sbb
call
rorl
add
call
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
paddb
jle
jge
jle
add
test
cwtl
jbe
arpl
enter
and
push
stc
daa
and
add
adc
fnstenv
jle
push
add
dec
movsb
push
cwtl
cmp
dec
and
jns
sub
jg
jmp
adc
dec
hlt
dec
cmp
inc
dec
sbb
xor
jle
sarl
cs
xchg
stos
ret
mov
and
sbb
push
inc
ds
mov
mov
bound
dec
test
lcall
push
cmc
push
add
dec
push
mov
jbe
mov
nop
out
mov
dec
add
pushf
mov
xchg
xchg
sub
mov
pop
inc
xchg
fidivrl
shlb
and
add
decl
out
imul
xorb
lea
daa
ror
ja
lock
hlt
push
cmp
aaa
dec
repz
pop
lds
icebp
in
cmp
inc
dec
dec
and
fwait
loopne
aaa
cmp
add
imul
jg
jnp
imull
sti
or
cld
sarl
fisubrl
xor
pop
pop
mov
lock
test
enter
fldt
jo
repnz
mov
ret
out
jne
push
call
cmc
sub
lahf
fidivrs
sahf
and
daa
adc
loope
inc
jns
dec
fldenv
out
sti
enter
enter
jecxz
mov
int
daa
insb
sbb
sbb
sar
ds
cmp
pusha
cmc
or
and
pop
mov
push
stc
lcall
mov
add
pop
rclb
out
mov
jne
outsb
mov
sub
push
mov
lea
jecxz
sub
loope
frstor
loopne
cs
imul
dec
jns
aas
sbb
or
dec
movsl
mov
test
not
out
movsbl
inc
lcall
js
aad
jp
insb
push
adc
or
mov
stos
dec
test
inc
adc
sbb
fs
ret
in
fs
sbb
ss
sti
aas
stos
xor
adc
sub
and
push
mov
pop
xchg
pop
mov
and
iret
pop
mov
cmpsl
cld
or
inc
jne
mov
pushf
pop
inc
push
fldl
mov
ficomps
xchg
sbb
mov
leave
lahf
rcrl
rcrl
addr16
cmp
adc
push
and
daa
int3
sbb
and
iret
push
and
faddl
in
stc
sub
lea
mov
shlb
idivl
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
jmp
imul
push
jg
jle
lock
add
lock
cwtl
lea
xchg
add
pop
inc
xchg
cmpsb
pushf
inc
adc
push
mov
or
jnp
sbb
push
xor
sub
adc
cmp
sbb
jle
in
unpcklps
lret
popa
in
mov
shlb
pop
adc
stos
mov
lret
mov
jb
stc
adc
iret
pop
lahf
je
lds
mov
sub
cs
and
loopne
dec
xchg
psubq
push
dec
cmp
mov
push
dec
mov
roll
xchg
mov
or
addr16
fmul
add
mov
inc
pop
pop
loope
lret
lahf
mov
lods
sahf
pop
hlt
dec
dec
lea
and
out
jge
xchg
js
stos
lods
hlt
push
jae
hlt
sbb
inc
in
sub
in
mov
loop
lods
ss
cmp
lods
dec
icebp
dec
dec
lahf
in
js
dec
inc
dec
sbb
arpl
cli
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
rdtsc
iret
movsl
jle
push
jg
jle
pop
add
cmpsl
or
xlat
add
inc
lahf
aam
jo
pop
outsb
stc
fucomi
xchg
cmp
pop
sbb
cmp
je
mov
sahf
and
int3
lds
pop
pop
imull
arpl
sub
adc
adc
push
sbb
rolb
jmp
js
dec
jno
or
int
mov
cmp
in
lret
aaa
xor
cmp
fs
jne
ret
cmp
adc
dec
push
repnz
lods
int3
aam
paddq
and
fchs
sub
mov
outsb
mov
fcmovne
cmp
xchg
call
mov
jp
stos
cmpsl
addl
cld
data16
xor
dec
enter
mov
dec
jg
gs
lret
scas
cli
push
mov
xchg
mov
out
jle
or
aas
xchg
ss
mov
cwtl
push
aam
mov
sub
das
sub
dec
in
jae
lds
adc
movl
test
add
mov
xor
add
jmp
xor
xor
mov
cmpsb
jg
mov
jle
xchg
jmp
xorb
in
sti
ds
sbb
sbb
xlat
adc
jo
cs
imul
imul
lea
into
and
lret
out
je
insb
pop
rcll
loope
fwait
adc
ret
imul
mov
jge
sbb
xchg
pushf
sbb
push
push
fcomps
push
imul
pushf
paddsb
popa
cmpsl
dec
nop
icebp
xor
repnz
fchs
or
ret
dec
pop
icebp
lret
idiv
std
and
push
add
cmp
mov
testl
loopne
mov
gs
ljmp
jns
mov
ds
fldt
mov
sub
mov
fwait
aas
mov
xchg
in
cmp
inc
enter
jnp
lock
fwait
loopne
xor
mov
push
jge
popa
mov
and
push
and
in
inc
mov
jmp
jmp
push
pusha
movsb
xor
pop
loopne
pop
fiaddl
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
xchg
int
mov
jle
in
orl
test
lret
mov
xchg
pop
add
dec
imul
out
and
dec
popl
idiv
cwtl
mov
xor
and
and
or
stc
xchg
and
jae
adc
or
inc
adc
xor
jno
clc
sub
and
ss
xor
cli
out
push
pushf
loope
pop
gs
test
xchg
pop
xchg
dec
adc
inc
test
mov
outsb
dec
pop
or
jle
sub
add
scas
sbb
fisttpl
cmpsb
xor
inc
pop
jnp
sub
dec
idiv
push
jae
inc
and
jmp
add
mov
inc
leave
adc
dec
enter
sarb
fcmove
add
divb
mov
push
jp,pt
test
push
in
cmp
pop
mov
fisttps
xchg
dec
push
imul
push
jge
adc
movsb
idivl
adc
adc
test
scas
shlb
jne
fwait
aam
arpl
cmc
push
or
mov
xor
inc
and
xchg
mov
push
addr16
sub
fadds
inc
or
or
push
ja
sbb
jp
mov
cli
ret
mov
cmp
ret
mov
push
rclb
cli
add
fwait
sub
test
jns
popa
push
cmp
pop
mov
cli
adc
pop
cli
scas
mov
sbb
sahf
dec
cmp
mov
mull
sti
loope
popa
es
push
out
pop
sub
nop
jp
leave
push
loopne
jmp
mov
push
int
sub
insl
int
jae
and
and
cmpl
mov
xchg
xlat
mov
fsubr
adc
ret
and
xor
push
sub
sahf
test
aam
jle
stos
xlat
mov
leave
mov
inc
xchg
jno
scas
xchg
out
rcl
loope
inc
jle
add
add
xchg
aas
add
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
sbb
enter
das
out
sub
mov
les
es
add
jg
mov
pushf
inc
pop
jge
dec
ljmp
fs
xchg
pop
popaw
mov
inc
jo
lea
adc
sbbb
mov
vmread
jb
stos
pop
and
cwtl
cmp
ss
mov
adc
jno
mov
dec
mov
inc
pop
or
jb
and
jno
fistpll
sub
cmpsb
dec
enter
pop
sbb
movsl
push
add
and
cmp
mov
sub
das
jl
imul
pop
adc
lret
fimull
clc
adc
lcall
inc
movsl
xchg
fsubs
xchg
int
test
std
cmp
pop
test
lcall
xor
mov
jnp
dec
xor
fcomp
push
add
push
jge
push
test
lock
jle
xor
sub
jecxz
adc
push
xor
std
push
movsb
ljmp
in
mov
inc
xorb
push
dec
lret
sub
daa
out
push
sbb
mov
out
mov
imul
and
faddp
out
repnz
dec
testl
sub
xchg
divl
shr
jo
test
dec
pop
and
adc
adc
jmp
loope
les
std
icebp
xchg
cs
bound
push
jmp
cmp
insl
add
jl
cltd
std
rclb
fisubs
loopne
pusha
lock
imull
daa
insl
scas
jg
sbb
mov
movsl
push
pop
and
mov
sbb
test
cmp
ret
lods
xor
ja
fsub
pop
jae
push
or
xchg
dec
andb
adcl
clc
sbb
jne
sub
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
xlat
cmp
pop
hlt
xor
push
jmp
movsl
cmp
sub
xor
cltd
ja
les
xor
sub
pop
mov
fsubl
mov
and
mov
aad
adc
insl
xchg
les
movaps
sbb
add
mov
jbe
shll
icebp
insl
cmp
cmc
imul
push
arpl
dec
cwtl
jae
fildll
cmp
in
mov
sbb
int
mov
pop
aam
fnstenv
push
jg
add
cli
xlat
mov
out
fldt
pushf
hlt
inc
aaa
inc
mov
mov
xchg
fildl
pop
daa
jns
pop
sub
jle
push
xor
and
out
mov
push
pop
cmp
cli
pop
in
inc
cmp
mov
iret
xor
jp
mov
xor
jne
fnstenv
gs
lods
jecxz
adc
aas
fstp
insb
mov
jbe
xlat
fdivrl
adc
inc
pusha
xor
les
ds
mov
push
call
push
iret
and
clc
xchg
and
popa
stos
faddp
mov
es
add
andb
lret
movsb
fistpl
jp
imul
xor
push
lea
jae
out
dec
int
jb
pop
das
mov
leave
mov
mov
fwait
mov
push
push
dec
imul
bound
cmp
hlt
cmpl
mov
cmp
or
mov
div
fcoms
bound
ja
mov
or
pop
cld
xorb
pop
adc
sub
jg
pop
lahf
shrl
push
mov
orl
enter
inc
mov
fisubrs
je
mov
mov
pushf
cli
sub
pop
mov
mov
jnp
adc
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
aam
xchg
fisubrs
and
pop
orl
sbb
xchg
xchg
cmpsb
pushf
outsb
jmp
xor
out
xchg
xor
pop
sub
xor
nop
sbb
push
xchg
mov
xchg
sub
test
mov
add
lock
rclb
fistpll
dec
inc
xchg
xor
push
hlt
inc
push
add
xchg
loopne
pop
jb
nop
lods
xchg
lock
rorl
dec
aas
out
inc
call
push
stc
mov
in
mov
mov
pop
mov
sub
lahf
cmp
dec
movb
inc
add
shll
mov
sbb
pop
scas
xlat
or
cmp
inc
imul
mov
dec
int3
test
pop
xor
pushf
loop
push
lea
mov
loope
cmp
cmp
and
hlt
in
and
or
cmc
dec
fwait
out
push
sub
xchg
and
ficoms
dec
nop
rcll
in
sub
dec
pop
jb
loopne
inc
or
push
xchg
je
stos
imull
jle
imul
jns
enter
shlb
les
dec
pop
jle
shl
push
pop
shrb
mov
cltd
cmp
test
add
mov
jmp
dec
std
mov
lock
lret
test
xchg
into
lea
or
cmp
mov
cmp
mov
inc
ss
mov
jo
stos
in
rolb
and
cli
cmp
cmpsl
pinsrw
popa
les
sti
pop
xchg
xchg
in
xor
cmp
jo
inc
pushl
mov
data16
outsl
arpl
dec
sub
lods
sbb
test
cmp
adc
repz
lret
daa
xor
leave
jnp
pop
into
in
dec
xor
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
inc
sub
scas
stos
jle
lods
jl
jle
or
dec
lcall
mov
bound
popf
add
pop
repz
xchg
inc
imul
fidivrl
pop
jecxz
dec
bound
dec
mov
cmp
cmp
cld
adc
sahf
je
popa
push
js
add
or
mov
cmpb
or
jbe
mov
incl
aaa
jne
dec
lret
arpl
cmp
inc
loop
jl
and
call
push
fistl
lret
mov
pop
mov
les
and
sbb
dec
inc
xchg
fcoml
pusha
jmp
and
jg
fstps
xor
jmp
jns
enter
cmp
pop
ret
aam
hlt
xchg
leave
pop
add
out
jne
and
mov
in
test
pop
loopne
popa
push
rorb
push
stos
mov
test
pusha
pop
out
movsl
fisttpll
neg
xchg
xchg
jne
les
popf
daa
mov
pop
dec
or
shrb
pushf
call
mov
jo
mov
stos
cmp
gs
rorl
lds
sti
and
fwait
jecxz
loope
test
push
push
or
sarl
or
push
mov
cmp
fcompl
mov
inc
cmp
xor
sub
bound
cmp
mov
std
jmp
add
cmp
ret
mov
mov
ss
shrb
and
pop
jns
mov
cmp
out
push
fwait
cmpsl
cmc
xor
lret
cmp
jecxz
rcrl
xor
imul
jae
or
add
xor
cwtl
xchg
add
mov
sbb
mov
hlt
xor
jge
mov
jae
aas
test
insl
and
fs
loop
je
test
or
mov
dec
push
or
out
stos
ljmp
pop
add
xchg
mov
sub
daa
stos
cltd
fistps
mov
or
xor
cmpb
stc
adc
leave
mov
xchg
mov
inc
sbb
add
in
inc
mov
fcoml
cmpsb
cli
inc
push
or
fs
inc
pusha
scas
pop
xchg
jge
sbb
dec
mov
pop
jno
cmp
test
push
loop
pop
rolb
imul
mov
adc
push
aam
cli
xchg
or
cld
xor
daa
aaa
inc
add
add
mov
addl
jmp
insb
xchg
xchg
in
or
mov
xorb
jle
lods
jl
jle
mov
pop
xor
bound
insb
push
push
fcmovbe
pop
ss
punpcklwd
addr16
mov
push
and
sbb
push
mov
out
lahf
dec
lods
mov
xor
mov
arpl
frstor
mov
stos
inc
orb
int
lret
sub
pop
mov
in
test
jnp
dec
jno
data16
in
addr16
xor
dec
push
mov
dec
push
sti
and
jae
imul
xor
adc
adc
stos
pop
int
sbb
xlat
sahf
inc
clc
xorb
mov
jl
bound
xor
xchg
iret
pop
jmp
iret
rcrb
cmp
test
dec
mov
int3
pop
jle
cmpsl
pop
shr
xor
mov
std
test
ret
xchg
lods
jmp
psllw
cmp
jl
sti
or
ljmp
mov
int3
jmp
pop
sub
mov
inc
adc
aaa
fsts
arpl
sub
xchg
sahf
jmp
sahf
in
enter
add
push
jp
ficompl
add
sub
add
xorl
xor
aaa
dec
jne
jmp
inc
ret
lods
cs
cmp
mov
and
ror
cmp
or
add
imul
shll
mov
jmp
adc
sti
inc
inc
imul
roll
pusha
in
aaa
mov
fnsave
sub
mov
pop
jg
add
fcompl
sub
das
mov
loop
out
pop
mov
dec
ficoml
arpl
cltd
outsb
leave
cmc
sub
sub
jae
dec
jmp
orb
and
and
shrl
and
lahf
mov
js
push
js
or
fs
jecxz
jns
mov
icebp
xor
je
hlt
jb
mov
outsl
xchg
mov
xlat
clc
mov
and
aas
lret
aad
adc
mov
dec
inc
aaa
mov
mov
dec
pop
iret
cmp
loop
mov
and
ja
or
sbb
sbb
sahf
in
jo
dec
icebp
add
jae
xchg
fistl
jl
mov
ljmp
jb
mov
mov
sub
xlat
adc
mov
jmp
inc
mov
test
daa
inc
xor
aaa
pop
push
js
aas
das
sbb
mov
out
sbb
adcl
add
or
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
cmp
jle
lods
jl
jle
aam
xchg
push
cmp
out
sbbb
adc
push
add
test
mov
les
push
in
push
int3
in
lea
and
cmp
xor
xchg
mov
fdivrl
repz
pop
int3
push
jecxz
daa
xor
fwait
loopne
dec
or
and
pop
dec
jno
fnsave
pushf
ret
loopne
jg
and
pushf
inc
pop
inc
pop
dec
les
lcall
sbb
in
imul
insb
mov
pop
mov
inc
ja
dec
repz
fldl
shlb
iret
out
insl
jno
or
mov
pop
in
mov
cwtl
test
pop
jno
pop
pop
test
or
imul
xor
imul
push
adc
mov
mov
mov
mov
fs
mov
inc
and
adc
dec
movsl
ret
sbb
push
bound
inc
inc
push
fnstcw
sub
scas
and
sub
dec
push
mov
push
cmpsl
decb
push
test
cli
and
and
or
xchg
sub
xchg
push
adc
outsb
add
testl
push
inc
ret
mov
out
cmpsb
lahf
or
jecxz
loopne
adc
mov
mov
mov
out
mov
adc
mov
inc
pop
pop
cli
push
js
mov
push
mov
mov
inc
and
lods
addr16
sbb
pop
repz
pop
or
loopne
ds
adc
sbb
or
fdivrl
int
add
cmp
dec
inc
mov
pop
xchg
fdivr
gs
shrl
mov
xchg
adc
sub
jl
inc
mov
movsb
dec
arpl
scas
adc
jnp
push
roll
jecxz
in
pushf
hlt
sbb
in
jp
ja
add
inc
mov
lret
jl
jb
int
setb
dec
sarb
inc
rol
push
mov
int3
fcompl
cmc
loope
dec
cmpsl
fsubs
sbb
add
xor
mov
ja
loop
lret
and
lock
loop
cmp
dec
test
repz
dec
enter
negb
fadds
jno
insl
or
in
mov
imul
movsl
mov
pop
mov
mov
pop
aam
imul
inc
dec
test
arpl
pusha
xor
dec
inc
aad
stc
call
loopne
icebp
add
jmp
lock
arpl
sub
scas
ret
rcll
jle
jl
jle
mov
aad
adc
xor
fcoms
cs
arpl
pop
add
mov
jb
std
mov
lret
sbb
mov
out
xchg
dec
fldcw
jp
push
mov
mov
cmp
jbe
and
pop
in
jmp
jns
les
aad
pop
stos
sahf
rorb
rcrb
lods
jge
mov
xor
addr16
lods
jo
push
repz
mov
xchg
pop
jbe
jnp
jbe
js
ss
loop
lods
mov
shlb
adc
cmc
outsl
loopne
mov
negb
xchg
add
dec
add
int3
daa
sub
lock
push
loope
add
arpl
fmul
mov
jl
mov
pop
jmp
or
repz
shlb
mov
dec
dec
mov
or
into
popf
dec
jne
lret
stc
or
mov
les
je
or
mov
mov
shll
adc
fadd
repz
jp
push
inc
mov
imul
or
mov
mov
int
push
js
xor
rolb
mull
add
push
idivl
xchg
cltd
jbe
mov
xor
ja
pop
sbb
rolb
lds
add
sarl
movsb
mov
fs
sub
xor
arpl
sbb
dec
test
xor
out
jne
and
in
enter
dec
addr16
push
mov
leave
sbb
or
cs
in
fwait
mov
jb
in
call
inc
shll
cmc
adc
jnp
movb
jae
push
push
inc
jg
lds
sahf
xchg
adcb
xor
xchg
cs
lods
push
addr16
mov
cmp
dec
mov
pop
pop
hlt
sete
loop
mov
les
outsl
xorb
repz
pop
scas
clc
dec
jle
iret
push
das
popf
inc
xchg
push
add
sti
xor
inc
out
push
cmp
pop
inc
xchg
dec
push
aas
push
push
sti
out
in
stos
or
pop
push
cmpsl
shrb
es
adc
cmpsl
outsl
dec
add
jo
sub
cli
or
mov
lock
mov
out
and
adc
lcall
testb
ret
dec
popf
es
das
mov
iret
sub
lea
inc
bound
scas
or
mov
add
inc
push
in
or
mov
scas
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
xchg
test
lods
jl
jle
add
sbb
jmp
or
cld
push
add
stos
fdivr
pop
lods
or
iret
frstor
lret
cmp
fidivrs
adc
int
jmp
inc
adc
jmp
cmpsl
xchg
push
dec
dec
into
call
idiv
jnp
notl
lods
xor
push
adc
add
fisttpll
ret
jo
lds
icebp
sbb
rorl
xor
sbb
lds
add
lret
leave
push
mov
test
mov
mov
orl
add
dec
hlt
and
xor
mov
add
jmp
push
pop
call
pop
pop
fwait
push
dec
xchg
psubd
mov
inc
fistps
or
sbb
xor
jo
cmc
ss
stc
add
test
jo
ret
or
test
cmp
int
cltd
inc
pop
in
ficomps
inc
test
fildl
andl
jo
movsl
iret
out
test
jo
cmp
add
sbb
and
stos
or
lret
xor
mov
sti
and
or
push
shr
sti
xchg
jno
pop
aas
mov
mov
lcall
or
pushf
xchg
imul
cwtl
xchg
add
adc
dec
xor
pop
sub
xchg
in
pop
mov
cmpsb
sahf
daa
stos
xchg
dec
test
cmpsl
in
jecxz
js
inc
jb
add
jmp
stos
std
mov
lods
and
sub
cld
inc
lds
pop
pop
ljmp
and
inc
ficoms
andb
cli
or
clc
sbb
filds
sbb
clc
and
loope
sahf
dec
insl
dec
imul
in
adc
and
decb
fidivrs
lea
hlt
cmpsb
cmpsb
jns
or
mov
std
fs
xchg
pop
mov
ret
les
xchg
mov
inc
mov
out
push
mov
xor
imul
enter
stos
sarb
pop
movsl
hlt
lea
mov
or
mov
xor
jmp
adc
cld
or
jg
fisttps
push
dec
mov
adc
cmpsb
adc
mov
inc
add
mov
mov
ret
leave
push
push
adcl
mov
cmp
xor
aad
inc
mov
loope
add
add
push
lock
add
jg
push
out
fsubl
insl
cwtl
inc
out
mov
add
mov
add
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
and
adc
aaa
push
dec
pop
push
aad
mov
push
bound
fsubl
or
enter
mov
sub
jmp
aaa
push
test
jne
cmpb
and
into
jl
icebp
fld
mov
int
in
lahf
aaa
jmp
push
mov
stc
mov
call
mov
or
sub
or
loope
out
mov
sub
ret
arpl
shrb
push
jns
mov
jecxz
mov
nop
or
inc
outsb
aaa
mov
mov
enter
jo
xor
fstps
loope
mov
and
xchg
inc
icebp
mov
xchg
shrl
dec
or
jecxz
mov
mov
cmc
sub
or
or
in
arpl
dec
pop
dec
ja
sbb
cld
nop
jmp
leave
jp
pusha
rcl
push
ficomps
cmp
push
sar
clc
les
sub
sub
jbe
cmp
mov
jl
jns
add
push
scas
stc
lret
shlb
cmp
in
sti
or
aaa
shr
pop
mov
mov
fisubrl
push
pop
push
in
push
xor
mov
les
rcll
xchg
or
pusha
sbb
xchg
sub
sub
icebp
shrl
inc
mov
dec
in
dec
add
adc
jae
in
lds
add
pop
add
aaa
rcll
push
punpcklwd
fiaddl
aam
add
shrb
into
jnp
out
andl
stos
in
aam
stos
lea
mov
push
mov
int3
out
test
aaa
fcmovbe
cmpsl
into
mov
add
xchg
inc
cld
xor
jne
push
pushf
sti
cmpsb
aas
and
into
or
inc
mov
jns
push
adc
and
cmpsb
cmp
or
mov
xchg
shrb
aad
enter
add
mov
scas
xchg
and
ljmp
je
pop
cmp
mov
hlt
subb
or
pop
test
cmp
jnp
mov
jecxz
inc
icebp
pop
push
xor
sbb
xor
and
push
icebp
int3
push
mov
or
hlt
imul
or
stc
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
shrb
jle
jl
jle
pop
pop
xchg
inc
int3
and
in
pushf
aaa
ja
pop
pop
out
adc
in
fistpll
jge
or
sahf
outsb
mov
insl
mov
sti
fstps
sahf
fisubrs
mov
pop
mov
inc
outsl
inc
je
icebp
mov
jb
fs
aam
add
cmpsb
popf
lret
mov
arpl
imul
push
gs
xchg
xlat
xor
xorb
pop
int3
mov
lret
sub
xchg
mov
loope
cmpsl
ret
pushf
fs
pop
test
scas
jg
xor
jo
aas
xchg
ret
cmp
das
cmp
mov
lahf
mov
es
dec
add
sti
xchg
and
fcoml
inc
imul
mov
shrl
or
jno
shr
sarb
test
fistl
mov
cwtl
add
iret
rcll
stos
into
inc
loope
aam
and
clc
adc
adc
push
test
lods
movsb
and
xchg
std
addr16
mov
inc
inc
push
insb
fidivs
lcall
push
mov
and
loop
enter
mov
sti
adc
jge
and
rcll
into
and
xlat
and
pop
jle
pop
xchg
bound
stc
sub
xchg
fbstp
cmp
inc
cs
add
push
cmp
dec
stc
ret
jge
or
inc
pop
test
fwait
or
add
aas
xchg
movsl
scas
pop
pop
push
lcall
in
pop
scas
leave
jns
mov
cwtl
cmp
insl
test
and
imul
and
sti
lock
shll
pop
shll
pop
pop
mov
mov
subl
in
bound
or
in
or
xchg
fsubs
or
movsw
add
lds
dec
inc
or
xor
or
stos
roll
mov
movsl
inc
mov
dec
add
pusha
out
js
loopne
push
pop
ds
jne
imul
outsl
push
les
push
xor
out
das
mov
lea
inc
cwtl
dec
clc
or
cli
dec
sub
insb
enter
sub
pop
hlt
jle
setne
bnd
cli
call
jmp
mov
in
push
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
int
jle
inc
jle
icebp
jg
jle
scas
loop
out
in
arpl
pop
push
jg
or
jg
push
lock
jae
aas
push
gs
repnz
enter
pop
fmull
cmp
aaa
xor
icebp
xchg
pop
dec
dec
ss
add
fwait
lock
std
lods
mov
ss
mov
repnz
leave
out
popa
stc
out
mov
rcr
mov
stc
mov
adc
movsl
out
imull
and
lock
in
hlt
in
cmc
int3
dec
dec
add
stos
dec
add
or
int
stc
cmp
jp
mov
dec
jns
cmp
aaa
adc
lret
xlat
cli
movsb
ret
pop
andb
mov
inc
xchg
cltd
in
cmp
lcall
xchg
jo
ret
jne
xchg
into
in
std
cmp
push
cmp
add
sbb
mov
sub
cmpsl
test
ja
adc
jno
stos
xchg
in
xchg
add
testb
pop
push
mov
out
rorb
out
sub
push
adcb
mul
mov
pop
movsb
mov
cmpsl
pop
stc
dec
popa
aam
js
and
xchg
fstpt
daa
aas
cs
lock
out
ficomps
mov
push
xchg
xor
out
loop
mov
pop
xchg
cmovno
mov
sti
cs
push
cmp
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
out
iret
nop
mov
jle
jg
jle
aaa
je
pop
fnstsw
into
push
jmp
jmp
cltd
mov
and
call
sub
xchg
je
jmp
dec
fcoms
jl
mov
out
cld
xchg
stc
add
dec
out
jno
lds
mov
xor
and
adc
add
aad
repz
xchg
cld
pushf
mov
es
sub
inc
fcomip
clc
pop
lods
pop
enter
mov
ljmp
cmp
adc
aas
dec
sbb
xchg
xor
pop
add
sarl
inc
xor
jp
pop
sbbl
pusha
xchg
mov
xor
aad
repz
sbb
addr16
jne
and
sub
xor
xchg
movsl
lods
jnp
jmp
jns
cltd
mov
dec
jle
pop
sub
mov
xor
loop
popa
mov
and
aad
xchg
andl
mov
pushf
mov
loop
inc
dec
ret
aaa
call
sbb
in
inc
cmp
aaa
hlt
outsb
mov
mov
push
inc
adcb
fcomps
std
movsb
out
int3
movsl
icebp
sub
out
shlb
sub
les
mov
cmp
cmc
add
ret
cs
and
cmc
popf
in
das
mov
or
adc
or
psubsb
into
mov
push
add
add
rolb
das
aaa
inc
add
add
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
aas
loop
in
inc
jle
icebp
jg
jle
lret
lods
add
push
inc
inc
xor
push
fisttps
inc
pop
cmp
aaa
hlt
std
sbb
push
mov
jbe
sbb
pop
jecxz
and
loope
xor
lods
out
jmp
mulb
fmuls
push
out
in
arpl
or
mov
loop
mov
rolb
inc
jns
inc
jle
cmp
cmp
ficoml
rolb
aam
pop
test
dec
cmp
std
inc
and
push
xchg
sub
ds
cmpsb
and
pop
int
lods
and
jge
scas
fidivl
jp,pt
xchg
shl
ficoms
icebp
jae
call
adc
or
jecxz
mov
lods
add
mov
rcr
int
test
jge
cwtl
push
pushf
aam
mov
xor
push
sub
add
inc
out
rcrb
imul
outsl
sbb
cld
sub
jl
push
mov
sbb
mov
iret
leave
mov
cli
xor
mov
mov
aas
dec
xor
cmpsb
xor
repz
push
testb
pop
adc
fs
or
mov
jge
adc
ss
outsb
cmp
int
scas
testl
insl
pop
cmp
ljmp
push
ret
int
lcall
add
add
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
leave
add
icebp
jg
jle
pop
adc
adc
repz
aad
push
pop
in
fnstenv
das
test
jge
sub
dec
or
leave
test
neg
xchg
mov
pushf
jo
out
js
pop
lcall
inc
inc
push
jae
lret
mov
push
mov
mov
mov
fstpl
lcall
sbbl
lret
fimuls
imul
or
fmulp
jne
pop
and
call
jae
pop
add
pop
cmp
sbbb
jae
into
xchg
out
add
push
xorb
mov
orb
fstp
cmpsl
test
cmp
ficompl
or
pop
mov
xor
mov
jecxz
dec
xchg
cmp
movsl
dec
xchg
lret
idivl
dec
cmp
push
lods
cmpl
aad
xor
in
dec
jb
imul
stc
cmp
inc
sub
mov
das
mov
fcmovnbe
mov
rcll
loop
aaa
ret
mov
adc
add
lea
ss
int3
mov
rcrb
f2xm1
ret
mov
fadds
and
add
and
cltd
aad
je
out
pop
outsl
inc
enter
xchg
pop
sub
pop
and
xor
sar
adc
add
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
fwait
add
jle
jg
jle
xstore-rng
cmpsl
add
out
fcmove
in
mov
jbe
pop
pop
mov
mov
addr16
lcall
loope
mov
or
jg
mov
adc
sbb
cs
xor
add
mov
pusha
pop
outsb
push
dec
je
dec
jo
cmpsb
adc
movsb
sti
arpl
orl
or
arpl
jmp
jb
jnp
repnz
shll
repnz
add
dec
ret
dec
int3
pop
mov
call
xor
stos
dec
hlt
adc
je
stc
mov
pop
adc
or
pushl
in
popa
sbb
es
sbb
mov
std
jns
jae
or
fldcw
cs
mov
test
scas
dec
pop
mov
lcall
es
fldt
out
nop
sti
mov
cmpb
dec
mov
push
mov
jo
cmc
jbe
ds
jecxz
inc
pushf
imul
test
aas
dec
ret
loope
test
scas
sbb
lret
into
pop
outsb
xlat
loope
lods
cmc
dec
add
fnstenv
scas
push
cmp
das
aam
inc
lods
sti
pop
aaa
xchg
or
lods
sahf
cmp
popf
ret
and
lea
fcmovu
packsswb
icebp
cltd
icebp
add
mov
dec
fldt
pop
ret
lret
inc
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
test
test
addb
icebp
jg
jle
xchg
mov
push
call
and
arpl
fucomip
pop
sbb
inc
jb
add
addr16
arpl
dec
and
sbb
sbb
xchg
imul
addr16
jle
or
xor
outsb
cmp
movsb
jge
xor
stos
mov
cld
cli
jb
adc
notw
lods
push
sbb
cmp
xchg
inc
fcomps
sysexit
and
sub
repnz
insl
shl
sub
sub
pop
jg
hlt
hlt
loopne
inc
xchg
iret
cmp
cltd
mov
mov
test
inc
xor
jl
lcall
sti
out
lods
sbb
shrl
xchg
cs
sbb
mov
lds
test
mov
ret
mov
and
fwait
pop
mov
jmp
fdivrl
adc
pop
lods
in
dec
mov
mov
sbb
ljmp
hlt
add
xlat
rol
adc
outsl
xchg
xor
adc
ret
sub
or
pop
mov
hlt
testb
imul
ret
add
dec
jg
inc
jne
mov
popa
adc
iret
int3
or
jae
cmpsb
mov
xor
jns
orl
cmp
push
shrb
std
les
out
mov
popf
fnstcw
int
cmp
div
inc
mov
push
sbb
call
mov
inc
mov
aaa
push
and
dec
adc
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
dec
fidivl
xchg
dec
xor
sbb
fcmovnb
test
mov
lods
int
mov
iret
andb
xor
cwtl
lea
leave
mov
popf
xchg
fsub
sbb
mov
pop
out
hlt
popf
xor
xor
jbe
push
daa
and
out
jge
push
cmp
pop
stc
fcmovnb
fbld
stos
je
cmp
lahf
mov
sti
xor
add
xor
cmp
jnp
addr16
xchg
add
pop
shll
mov
out
inc
shrl
cmp
fcomps
ret
mov
cmpsb
test
lods
mov
mov
push
rcr
dec
xchg
popa
mov
je
das
push
sbb
lcall
push
aam
mov
push
vprotb
fnstsw
out
inc
and
call
js
inc
adc
xchg
lock
dec
sti
cld
loop
ret
push
imul
shlb
cmp
je
addr16
idivl
dec
sbb
lahf
cld
sub
sti
mov
xor
in
mov
push
loopne
adc
mov
jmp
inc
sahf
nop
cmp
mov
add
cmp
mov
pop
mov
push
jge
fs
inc
dec
daa
jmp
ret
sub
mov
mov
adc
out
push
push
rolb
dec
push
xor
cmp
sbb
mov
xchg
lahf
push
psllw
repnz
stc
cs
xchg
mov
pop
sub
mov
adc
shrl
add
xlat
shlb
or
nop
lock
lea
sti
push
cmp
punpcklwd
xor
or
icebp
push
mov
jmp
enter
fisttpl
inc
shl
out
negb
scas
push
aam
xchg
jle
aas
in
in
sub
addl
sahf
add
or
mov
cmc
sbb
cmp
jns
hlt
mov
jno
pop
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
pop
mov
jle
jl
jle
and
loopne
pop
sti
sub
das
pop
pop
jmp
loope
push
stos
cld
iret
sbb
adc
adcb
in
dec
mov
jp
lds
lcall
leave
and
pop
cltd
jge
mov
jg
out
out
add
js
pop
sub
dec
sbb
fsts
popf
inc
adc
test
xor
mov
fcomps
es
jg
or
ret
inc
aad
cmpsb
inc
adc
icebp
ljmp
pusha
mov
and
or
mov
mov
pop
add
pop
js
jp
sahf
sbb
in
mov
enter
or
cwtl
fildll
and
mov
test
repz
stos
sub
jno
aam
pop
sub
insb
cltd
gs
cmc
aas
ds
imul
jg
mov
jp
loopne
cmc
inc
das
pop
andb
fldcw
jl
enter
ljmp
mov
fcmovu
addl
cltd
jle
imul
pop
mov
add
fsubrs
iret
and
sub
or
roll
gs
insb
push
mov
sbb
mov
inc
push
lea
dec
nop
cli
or
faddp
loope,pt
dec
sbb
les
cmp
ss
sbb
pop
pop
lock
sbb
mov
lea
shrl
push
iret
icebp
ror
out
add
inc
and
mov
xchg
inc
and
push
loope
fldt
dec
add
mov
mov
imul
jb
aas
dec
lret
dec
data16
cmp
jbe
add
leave
xchg
je
inc
dec
jecxz
mov
fidivrs
outsb
enter
jbe
cmp
movsb
or
call
adc
and
lds
fcoml
xchg
pushf
add
popf
test
push
xor
push
mov
mov
add
jmp
mov
imul
adc
ja
dec
jle
adc
dec
int
in
andb
pop
mov
insb
mov
pop
mov
cmp
inc
iret
sbb
pop
out
push
dec
push
mov
mov
sbb
pop
test
mov
outsb
mov
and
fistps
andl
add
xchg
and
divl
pusha
test
mov
and
dec
dec
adc
aad
mov
ds
outsl
pop
xchg
inc
mov
cmp
xor
xor
adc
shlb
popf
cmpsb
fdivrl
mov
mov
stos
pop
leave
hlt
jp
mov
adc
cmp
jb
sub
outsl
bound
bound
scas
rcrl
mov
ss
add
inc
sbb
jns
je
test
fidivrs
lret
lds
shrb
fists
push
rcrl
scas
jecxz
add
jnp
sub
adc
int3
mov
jp
ja
andl
xchg
lods
cwtl
icebp
rcrl
fcomip
bound
xor
inc
jl
pop
mov
cli
add
cld
mov
pop
movsb
pop
cli
out
push
adc
sbb
fcomip
mov
fisubs
jl
mov
sub
mov
movsl
loope
int3
xor
stos
loop
fldenv
ds
mov
mov
inc
repz
jmp
mov
scas
rdpmc
sti
xchg
and
jmp
sbb
jns
aam
mov
lods
add
pop
mov
jno
sbb
adc
mov
mov
loope
push
sbb
mov
bound
lea
mov
inc
aas
xor
sbb
ror
and
and
in
mov
jae
push
fwait
push
jg
xchg
std
and
loop
pop
das
sub
lret
dec
mov
mov
and
stos
cmp
jp
push
cmpsb
and
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
test
add
jp
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
xlat
jbe
call
add
add
loop
ret
jge
cmp
mov
cwtl
inc
pusha
cmc
sub
iret
xor
cmp
jl
sub
mov
lods
scas
test
test
or
add
jne
sahf
fs
cmp
xlat
std
addr16
fwait
insb
jmp
lea
mov
cmpsl
call
movsb
adcl
dec
ds
cmp
and
dec
add
pop
shrb
mov
repz
roll
loopne
push
dec
mov
or
icebp
sub
insl
sbb
out
in
popf
inc
xor
lret
dec
mov
jle
adc
inc
in
mov
imul
xchg
ja
xchg
and
pop
cmp
and
test
scas
xchg
sub
or
test
cwtl
arpl
mov
ljmp
filds
loop
sbb
scas
adc
cld
ljmp
addl
pop
ficoml
in
jle
lcall
mov
fadds
add
add
add
jg
dec
xchg
pusha
mov
fnstcw
jg
xchg
sub
mov
or
xlat
sub
xchg
dec
mov
or
int3
aam
mov
cmc
iret
xor
fidivl
test
addr16
jle
xchg
jb
or
mov
insl
pop
lahf
mov
and
icebp
or
xor
pop
mov
fs
icebp
dec
repz
pop
or
or
fsubrs
rorl
xchg
jb
adc
daa
shlb
lods
pop
or
cwtl
nop
cmpl
sub
pop
out
cmp
inc
daa
aaa
cld
xor
jnp
rorb
rcrl
adc
cmpb
das
fsubs
mov
inc
jno
out
incl
sahf
xor
push
out
int
sbb
popf
push
and
cs
sbb
mov
xchg
divb
xchg
sub
shll
sbb
add
add
popf
aaa
sbb
add
add
adc
mov
mov
push
test
add
add
add
ja
ret
sbb
pop
insl
fs
xchg
jno
dec
fisubrs
jo
movsb
jmp
aad
test
movsb
and
xor
idivl
pop
xchg
fisttpl
popa
sub
lret
mov
xchg
sub
and
xchg
add
out
xchg
sbb
scas
jmp
imul
xor
pop
mov
rcrl
outsl
outsb
movl
push
pop
std
inc
pop
lret
cmp
sti
sub
shll
mov
add
pop
inc
push
repz
daa
incl
pop
out
mov
pop
pushf
push
dec
les
stc
imul
jmp
popf
out
sbb
ljmp
hlt
xlat
int
sbb
adc
pop
cs
adc
pop
lret
mov
in
xchg
jl
lods
clc
out
cmc
pushf
cmp
mov
add
add
subl
roll
stc
sub
inc
fiaddl
add
add
add
or
out
shl
sarb
and
in
push
adc
outsb
repnz
rolb
add
clc
cmp
add
ja
and
loop
lock
in
es
pop
xor
cli
cmp
mov
rol
xchg
mov
dec
mov
and
lahf
rcl
mov
fidivs
add
sbb
pop
data16
fisttps
js
or
cld
sub
vmread
dec
rorl
adc
lahf
imul
je
xchg
ret
push
mov
pop
dec
mov
xchg
shll
mov
daa
add
loope
and
mov
in
mov
mov
mov
mov
cmpsb
cs
xchg
or
cmp
adc
rcr
push
pop
mov
sbb
fisubrs
outsb
insl
fbld
pop
ja
fisubrl
popf
push
push
lahf
mov
lret
add
pop
jae
or
pop
dec
or
and
fildl
add
add
add
mov
bound
out
dec
sti
data16
mov
mov
popa
imul
scas
filds
lods
or
or
insb
repnz
stos
mov
lahf
dec
loopne
out
mov
in
pop
sub
mov
stc
adc
stos
jecxz
out
mov
push
or
push
je
pusha
jmp
cs
cmpsl
fisttps
sbb
arpl
jge
cmpsb
inc
sbb
mov
xchg
adc
fwait
rclb
jle
inc
in
cli
mov
mov
movsb
ret
lcall
push
push
int3
mov
xor
push
and
xor
out
mov
out
sub
gs
push
repnz
test
cld
in
push
subb
lret
scas
xorl
rolb
dec
out
mov
int
add
push
sub
xchg
or
test
mov
stos
ljmp
add
jg
cmc
insl
cmc
out
lcall
enter
push
inc
andb
add
add
add
jns
adcb
jmp
add
push
jmp
adc
lea
nopl
hlt
insb
repnz
xchg
aad
cmc
bound
inc
sbb
mov
repz
jo
xchg
cmp
mov
adcl
aas
inc
pop
and
xchg
push
jecxz
nop
xor
lahf
fwait
dec
mov
push
xor
adc
lahf
mov
ja
sbb
sbb
aam
cmp
xchg
jecxz
popf
lds
mov
push
inc
jge
mov
push
mov
ret
bnd
add
rclb
mov
pop
mov
add
mov
dec
cld
cmpsb
or
xchg
movsl
adc
mov
xorb
nop
bound
and
jbe
sti
and
push
pop
ds
int
dec
pusha
daa
ret
jl
jmp
mov
lret
dec
nop
sbb
popa
dec
mov
add
add
jle
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
mov
xor
test
loop
sbb
and
or
adc
push
dec
pop
or
sar
cmp
andb
test
jo
pop
jno
int3
push
fdivs
sbb
adc
rclb
pushf
int
inc
in
movsb
and
stos
push
decl
cmp
mov
aam
sbb
xlat
test
test
rorb
loop
cmp
mov
pop
dec
test
xor
andl
lret
aad
scas
dec
mov
mov
add
push
mov
iret
lea
or
jae
outsb
in
mov
aas
lock
outsl
add
dec
and
pop
ja
mov
jno
ret
inc
pop
mov
mov
jmp
fsubl
enter
jle
popf
sub
or
xchg
ficomps
fcmovb
enter
push
add
jle
and
scas
sti
jle
pop
push
pop
xor
add
add
add
fstps
push
popa
xchg
in
cmpsb
fcomip
movsb
ror
jge
out
subl
je
xchg
mov
adc
push
shll
hlt
mov
scas
mov
mov
cmc
jmp
cmp
dec
leave
add
dec
push
and
cmp
nop
push
cltd
jno
mov
roll
mov
mov
rorl
pop
or
stos
inc
int
daa
inc
push
xchg
repnz
jnp
xchg
fistps
jmp
clc
hlt
sub
dec
repnz
in
adc
cmp
mov
mov
inc
int3
jnp
movsb
nop
test
push
cmp
sub
movsb
xor
mov
xchg
and
add
cmpsl
scas
enter
cmp
sbb
push
cmpsb
int3
test
test
mov
ljmp
dec
imul
mov
jns
sbbl
jmp
or
lcall
add
add
negl
arpl
mov
add
add
pop
cwtl
js
cmp
test
adc
dec
sub
push
pop
fs
ds
pop
jns
mov
dec
out
dec
adc
and
subb
jae
mov
xchg
sub
fnstsw
sbb
mov
test
orl
lcall
dec
addr16
push
out
fidivrl
ja
push
and
sub
and
popf
les
shll
dec
fldl
stos
xchg
adc
push
push
jne
rcrl
add
xor
xchg
and
adc
and
inc
lock
jecxz
lret
sub
lods
pop
in
jnp
popa
je
and
sar
fidivrs
testl
pop
xchg
mov
iret
mov
mov
mov
insb
xchg
test
ss
sbb
lds
xchg
mov
inc
aam
movsb
mov
rcll
jo
sahf
lret
int
pop
pop
mov
add
add
push
jl
jle
insb
out
adc
test
loopnew
add
add
add
icebp
xorb
icebp
dec
bound
imul
cli
adc
lock
in
frstor
fwait
imul
fwait
or
push
cs
repnz
dec
neg
leave
pop
mov
iret
out
and
add
pop
pop
inc
cli
psubusw
inc
or
incb
stc
mov
rcrl
push
sub
jecxz
xlat
ret
push
push
clc
addr16
sub
dec
lods
sti
jnp
mov
mov
pop
mov
sub
cmp
adc
sbb
shll
adc
dec
lock
call
aad
in
mov
lock
or
sbb
xchg
and
stos
inc
and
mov
or
push
stos
push
xchg
cmp
pushf
push
jne
nop
mov
cmp
pop
jne
mov
pop
subb
or
pop
insl
mov
adc
in
xor
adc
loopew
add
add
add
stos
dec
adc
add
jb
jmp
mov
mov
fs
sub
dec
push
pop
pop
add
xlat
or
xchg
popf
into
xchg
push
insl
xchg
es
das
insl
shl
leave
mov
test
call
arpl
repz
icebp
push
pop
inc
popa
or
add
fstl
sub
imul
arpl
xor
push
or
fistl
push
adc
cmp
idivb
in
push
f2xm1
adc
add
cmp
xor
iret
ja
mov
jl
pop
in
sbb
mov
imul
sar
je
pop
and
inc
loop
jmp
sub
in
test
xchg
dec
jne
roll
inc
or
aas
in
add
and
add
imul
jmp
mulb
mov
pop
aas
sbb
and
aaa
data16
jne
mov
lcall
add
add
add
jmp
xchg
dec
outsl
xchg
into
xor
aam
je
in
sbb
mov
fldz
scas
cmp
mov
xchg
inc
pop
fwait
xor
inc
lea
test
faddl
outsl
rol
push
adc
sub
jo
lret
cwtl
and
push
out
inc
adc
xor
mov
out
cld
fsubrs
xor
inc
adc
pop
shr
cli
sarl
push
outsb
das
pop
jbe
pop
sub
xor
fcomps
aad
mov
and
xor
fcmovnu
enter
xlat
scas
sbbb
gs
out
aas
imul
add
mov
jecxz
push
or
sbb
aad
cmpsb
int3
pop
adc
cmp
lcall
mov
and
sbb
and
jbe
sbb
sbb
adc
cmp
mov
imul
and
add
inc
jnp
add
jnp
sti
xchg
lahf
mov
cmp
add
add
add
pop
fwait
xchg
lods
insl
xor
out
xchg
pop
stos
xchg
push
jp
cltd
je
fwait
aad
push
mov
adc
push
aaa
and
inc
push
ss
imul
sbb
mov
jg
sub
adc
and
sub
fs
in
stos
mov
xchg
and
pop
sub
loop
or
pop
xchg
aaa
sub
mov
test
ljmp
arpl
loop
scas
pop
push
dec
xor
mov
cmp
mov
jge
cmp
add
mov
mov
call
sahf
adc
mov
add
ficomps
mov
push
fiadds
xchg
push
fchs
sub
sti
lods
jmp
sub
fdivl
sbbl
or
xchg
test
sahf
cmpsl
jo
shrb
insb
clc
sub
in
pop
cld
ds
cmp
movaps
mov
add
pop
sarl
mov
inc
addr16
add
add
add
imul
dec
popf
popf
mov
mov
out
inc
andb
inc
ljmp
sub
dec
in
into
xchg
xor
pop
sub
shrl
iret
idivl
aad
int
dec
in
xchg
ljmp
pop
repz
adc
nop
repnz
jle
cmp
inc
cld
push
mov
test
aaa
add
inc
lods
pop
dec
pop
push
sbb
in
popw
and
xchg
fidivl
into
out
sbb
rcrl
pop
push
cmp
testl
cmp
mov
subl
iret
lret
sbbb
imul
mov
jg
dec
int
imul
ret
xchg
xor
adc
push
dec
jns
dec
push
aaa
mov
data16
sbb
popl
jmp
lods
pusha
int3
add
in
mov
add
add
repz
std
repz
or
add
add
add
bound
xchg
sub
cmpsb
lock
add
popa
push
es
outsl
scas
sbb
pop
or
insb
test
or
cmp
out
iret
rcrb
in
and
call
sar
into
and
xchg
movsb
push
sub
aaa
xchg
clc
inc
mov
insl
push
xor
add
dec
adc
push
aaa
or
cmp
inc
mov
popa
and
shrb
dec
stc
or
jmp
adc
inc
adc
xchg
sub
lahf
push
stc
sub
xchg
xor
lret
insb
dec
out
es
repnz
push
in
xchg
dec
les
push
dec
xchg
out
push
jno
jge
push
mov
ret
test
rsqrtps
movsl
je
call
push
and
inc
and
pusha
mov
pop
fmul
pop
pop
in
daa
add
add
pop
fcoms
inc
lock
add
in
sub
cmp
arpl
je
or
add
add
add
test
aaa
xor
mov
test
test
dec
ret
int
mov
xor
jo
cmp
mov
xchg
or
mull
imull
clc
push
stos
push
xor
mov
jb
ror
ds
xor
int
loopne
rcll
jno
add
sbb
jbe
and
or
xchg
gs
add
push
popf
jle
push
aad
xor
mov
jg
adc
adc
push
adc
adc
xor
and
inc
call
add
mov
push
pop
jne
add
or
push
cltd
sbb
and
pop
mov
sbb
and
rcl
push
jg
inc
xchg
and
iret
mov
stos
or
lcall
ljmp
push
lods
jmp
lahf
rcrl
or
movsl
ret
inc
pop
lret
xchg
in
mov
mov
add
add
mov
mov
jecxz
push
mov
out
add
add
add
bound
inc
cmp
push
push
xchg
adc
test
push
andb
dec
xchg
xchg
std
mov
imul
xor
cli
shr
inc
je
cmpsb
jno
inc
push
imul
addr16
mov
jno
bound
aaa
xchg
pop
rclb
add
das
daa
fimull
sbb
push
adc
sub
in
movl
push
sbb
adc
arpl
jmp
mov
sub
push
cltd
hlt
push
jno
fldenv
cmp
or
mov
sbb
jnp
mov
je
cmp
popf
sbb
roll
push
mov
sahf
sarb
mov
push
jbe
fstpl
push
pop
pushf
jae
pop
jb
xchg
daa
add
jns
sbb
fnstsw
fwait
or
jecxz
stc
inc
mov
add
add
xchg
in
mov
incl
sar
int
xchg
add
add
add
into
pop
xor
gs
mov
adc
sbb
lahf
mov
out
in
push
aad
fadd
jns
data16
inc
or
mov
jl
cmpsl
jbe
pushf
rorl
pop
jl
inc
mov
adc
adc
mov
das
mov
mov
push
add
sbb
in
outsb
jbe
or
mov
push
ss
or
lock
or
add
fstpl
cld
inc
pushf
fiaddl
sub
mov
sbb
xchg
mov
test
pushf
popa
frstor
sbb
push
add
xor
es
push
into
mov
out
xchg
mov
adc
jnp
stc
adc
xchg
ja
sbb
scas
addr16
add
xor
test
outsl
lahf
mov
daa
push
repz
or
in
cli
and
mov
xchg
stos
add
mov
daa
fs
sbb
out
cmpsb
xor
dec
inc
mov
in
negl
sub
movsb
das
cmp
jns
jmp
add
pushf
cli
jp
test
jbe
lods
cmp
nop
fadd
sub
adc
sbb
cmp
mov
jp
xor
rcll
sub
jno
cmpsl
or
cli
es
adc
inc
rorl
and
inc
ret
fwait
lret
sbb
push
lret
jb
lods
mov
subl
pop
dec
popa
xchg
cwtl
mov
sbb
sub
rcll
adc
adc
dec
xor
fdivrl
ds
inc
lock
hlt
into
jb
rcrb
jmp
adc
in
pop
inc
add
mov
fmuls
in
push
mov
mov
mov
jno
xchg
and
aam
sub
push
iret
mov
out
add
lods
loop
iret
jp
jmp
fcmovnbe
xor
and
xor
shlb
inc
aam
xor
sub
mov
inc
push
sub
cli
iret
and
mov
shl
sbb
add
fistpll
stc
dec
push
fsub
popa
inc
arpl
add
add
add
mov
mov
pushf
fisttpll
dec
push
es
mov
cmpsb
out
or
movsb
sub
sub
in
xchg
cmpb
clc
mov
cmp
mov
sub
mov
jl
add
divb
loopne
push
outsl
jl
in
jge
loopne,pn
fsubp
and
daa
daa
jne
mov
lcall
std
kmovd
jge
dec
inc
insb
xchg
out
xchg
in
cltd
fisubs
or
jle
push
mov
push
jmp
outsl
mov
in
roll
xchg
dec
xchg
mov
cmpsl
mov
xor
jecxz
jmp
push
lods
lds
and
inc
pusha
loop
push
lret
cmp
mov
jne
push
fistl
push
adc
fidivs
mov
jns
inc
or
pop
push
addr16
sub
int3
fsubs
mov
jo
mov
cmp
mov
push
push
push
mov
jl
jmp
add
add
add
sub
jbe
mov
outsl
imul
in
and
cli
jl
inc
stos
and
into
cli
fldcw
mov
test
fidivrl
addr16
call
or
call
cmp
shrl
orl
notb
jg
lods
scas
mov
adcl
mov
outsl
sbb
xchg
push
sub
popa
mov
loop
pop
pop
rcll
in
scas
lcall
xlat
jae
dec
jge
ja
pop
jb
xlat
into
mov
or
hlt
mov
or
mov
lock
mov
or
sbb
sbb
icebp
sbb
jns
lds
les
mov
mov
mov
mov
insb
in
dec
dec
int3
xchg
adc
repnz
in
lret
ss
mov
fidivrs
in
inc
cmp
inc
pavgb
leave
test
insb
inc
in
cs
out
repnz
add
pop
lcall
les
test
add
add
dec
outsl
ret
inc
xor
insb
das
or
in
jbe
xor
test
sub
repnz
jge
mov
in
scas
dec
mov
inc
and
pop
daa
and
imul
sbb
sub
lret
sbb
dec
pop
clc
jecxz
hlt
mov
pop
jb
and
notl
sub
jb
fs
jg
pop
push
add
test
cltd
add
dec
push
cmovns
pop
dec
adc
rol
mov
sti
push
jle
xor
loopne
dec
pushf
adc
and
stos
xchg
in
je
mov
jge
push
cwtl
ds
icebp
test
xchg
mov
fscale
dec
jae
in
sar
pop
adc
push
adc
ficompl
cmp
out
enter
and
cwtl
enter
add
cld
stos
popf
sbb
aas
and
cli
jmp
jg
sub
gs
mov
out
cmp
fisttpll
jo
aam
inc
fwait
mov
pusha
es
dec
movsb
pop
adc
add
add
mov
push
decl
das
lahf
popf
push
addr16
add
add
add
cs
mov
pop
repnz
pop
fildll
aad
loop
rcrb
sub
adc
xchg
shrb
adc
mov
movsb
adc
sbb
adc
fldl
rcrl
xor
mov
dec
das
leave
xor
into
push
mov
sub
adc
in
push
xor
mov
mov
fldenv
add
fisubrs
pushl
outsl
pop
or
pop
sbb
filds
xchg
cmp
andl
and
xchg
mov
test
dec
movl
outsl
mov
ss
dec
rcll
push
inc
pusha
fnstenv
mov
adc
imull
sbb
push
jle
in
cmp
sub
mov
and
inc
mov
lahf
xchg
repz
call
mov
xor
mov
bound
mov
arpl
jecxz
and
add
and
cmp
sti
fsubp
inc
push
sub
adc
add
add
add
cmp
xchg
and
inc
jp
testl
int3
movsl
and
jae
pop
jbe
ret
xlat
das
cmc
ret
shl
mov
imul
enter
outsl
mov
and
push
and
jle
cwtl
iret
inc
cmp
sub
mov
cmp
mov
xchg
cmpsl
cmp
push
add
inc
or
shlb
out
das
adc
sub
les
xor
sub
stos
xorl
call
mov
por
pop
push
push
xchg
or
cmp
pop
sub
sar
mov
xchg
xor
inc
xchg
pop
cs
mov
mov
jl
xchg
and
mov
ljmp
xlat
and
sbb
ss
mov
mov
xor
fwait
aam
mov
into
jl
addr16
adc
fstpl
inc
arpl
idivl
push
cmpsb
jo
inc
inc
sbb
mov
lods
cltd
mov
mov
add
add
outsb
xor
mov
lcall
out
add
add
add
aaa
aas
shrl
inc
push
gs
push
dec
pop
sbb
lret
sub
movsl
mov
andl
pushf
add
rclb
xchg
out
pop
std
dec
push
imul
rcll
cmp
xor
lret
fwait
xor
xor
shrb
lea
xchg
outsb
cld
pop
pushl
adc
mov
scas
lahf
xor
inc
jg
cltd
and
pop
xor
enter
jb
mov
and
mov
pop
icebp
pop
pop
push
sti
jno
xchg
lods
out
scas
cmp
inc
clc
cld
xchg
clc
pop
into
insl
jae
jbe
jbe
jo
push
add
inc
loope
jno
ds
out
push
cmp
fnstcw
loope
mov
sbb
sub
sub
pop
add
fldenv
stc
sbb
sub
je
lea
pop
pushl
push
mov
shlb
pop
lea
mov
neg
adc
sahf
std
rolb
add
add
inc
ror
lock
jnp
xor
xchg
or
lock
add
add
inc
fsubrs
addr16
dec
sub
enter
push
mov
cs
fdiv
insl
adc
movsb
adc
das
or
in
fcompl
sub
test
sbb
mov
es
jae
jecxz
add
cmp
mov
push
mov
pop
jmp
lahf
gs
fsubrs
cmp
sbb
adc
out
test
idivb
add
xor
cmp
js
arpl
push
or
and
fdivr
adc
and
xchg
mov
arpl
dec
adc
ret
in
lret
cmp
gs
xchg
js
or
ret
data16
arpl
cmp
daa
add
fldenv
pop
fdivrp
push
inc
sbb
repnz
xor
gs
cwtl
ret
lock
or
hlt
pop
lret
and
imul
cmp
out
xor
mov
and
repz
fisubs
sbb
add
add
add
mov
inc
cmp
stos
jle
xchg
dec
mov
ds
sbb
jle
test
jae
mov
inc
cmp
stos
cwtl
sub
or
pop
pop
push
popf
dec
push
lods
int3
icebp
and
fldenv
flds
mov
cwtl
mov
jmp
pop
int3
add
and
dec
xchg
jecxz
shrl
rorb
dec
insb
imul
insb
or
out
sbbl
ds
repnz
jmp
xchg
mov
jnp
sbb
cmp
rcll
push
aad
test
mov
inc
out
adc
mov
in
movsb
adc
jmp
or
jbe
inc
cmp
icebp
add
mov
push
in
mov
mov
pop
sub
xchg
fs
inc
push
jecxz
outsl
cli
dec
fsubr
lods
fstpl
xchg
dec
adc
push
lods
jmp
xchg
mov
add
pusha
adc
ja
outsb
mov
loopw
out
sbb
shll
add
add
add
cmp
enter
int3
and
adcl
inc
fisttpl
pop
mov
adc
sbb
test
xchg
loope
and
adc
popa
icebp
sub
fimuls
sbb
or
idiv
loopne
sbb
in
fimuls
stc
mov
ss
mov
jg
adc
inc
sti
mov
and
cmpsb
jecxz
dec
push
sahf
xchg
push
mov
xor
add
dec
aaa
mov
arpl
jo
push
add
jae
jmp
adc
ljmp
mov
fstpt
js
sarb
xor
in
inc
shrb
push
xchg
mov
imul
add
adc
cld
sbb
sarb
adc
ret
and
xchg
xchg
es
lds
add
add
scas
push
repz
cmc
scas
sub
mov
repz
add
add
sbb
jl
imul
push
dec
lods
cmpsb
jno
jmp
ljmp
sbb
cmp
dec
mov
jl
sbb
xchg
clc
or
push
test
xor
stos
xchg
inc
add
insb
push
mov
and
aad
push
jnp
in
andl
inc
int3
ss
xor
mov
jns
mov
fildll
jecxz
fsubrs
dec
addr16
dec
icebp
push
sub
sti
jg
call
and
stos
jnp
addr16
adc
loop
mov
pop
dec
lret
cmp
sbb
addl
ret
add
shll
and
sbb
xlat
les
pop
mov
call
ds
js
pop
xchg
mov
dec
fldt
push
jl
sahf
pop
sbb
or
add
add
pusha
rorb
cmpsb
mov
inc
dec
addr16
add
add
add
and
jmp
ret
pop
scas
mov
mov
and
insl
mov
xchg
mov
in
sbbl
jae
xor
sub
cld
mov
cmp
pushf
movsb
cmpsb
loopne
inc
fstpt
fldl
add
push
imul
repz
in
lods
mov
lahf
lahf
xor
in
popf
sub
mov
sub
cmp
and
lods
inc
xlat
js
cmpl
cs
pop
mov
mov
or
adc
icebp
add
cmp
iret
inc
clc
ljmp
push
jno
or
in
iret
dec
into
cmp
scas
pop
mov
fcomip
shll
adc
mov
adc
sub
cltd
jns
jb
adc
pusha
pop
fisubrl
adc
push
inc
fcom
mov
test
hlt
xchg
xchg
and
loope
cmp
pop
cmpsl
loope
pop
xor
mov
fdiv
pop
out
jecxz
push
testl
std
push
adc
add
add
add
xchg
dec
mov
mov
popa
or
in
outsl
mov
push
and
rorl
daa
pop
fsubs
arpl
insb
into
scas
movsl
and
jmp
hlt
and
lahf
movsl
daa
shl
repz
sti
fstpt
adc
or
push
mov
adc
lcall
lret
mov
mov
pop
bound
or
mov
mov
test
negl
repnz
cmc
xchg
adc
xchg
lahf
pop
mov
jmp
add
stc
mov
lock
les
mov
mov
fsts
das
test
mov
push
or
ss
push
push
sarl
adc
mov
test
inc
dec
xor
daa
xor
cltd
hlt
fmul
out
and
out
and
outsb
adc
out
subb
cmpsl
pop
xor
and
daa
lahf
mov
pop
das
push
lcall
add
add
enter
mov
mov
sbb
imul
sbb
fsts
inc
iret
xor
jp
xchg
add
cmp
push
insl
adc
mov
outsl
mov
push
int3
ficompl
clc
mov
lods
iret
stc
jo
loopne
ficompl
mov
loopne
insb
jbe
shl
in
and
adc
xchg
dec
xchg
push
mov
jecxz
jg
ss
jb
in
out
fwait
cltd
out
adc
pop
mov
into
push
cmp
xchg
std
pop
inc
or
test
or
or
fidivs
lds
pop
sub
jnp
jae
jg
inc
jp
jns
jp
fnstsw
push
pop
dec
cltd
mov
rcr
or
test
or
pop
dec
in
xchg
in
scas
push
jnp
xchg
xchg
insl
fcoml
inc
lods
pushf
mov
mov
fucomi
xor
dec
xchg
testl
add
dec
hlt
imul
mov
ja
pop
ficomps
jns
stc
add
jecxz
mov
stos
bnd
aaa
pop
sub
mov
mov
js
test
or
shlb
or
or
add
push
cmp
push
leave
add
xchg
scas
cltd
xor
fs
rcl
scas
cwtl
dec
jge
push
push
and
pop
outsl
repnz
sbb
test
cmp
jne
mov
jb
adc
mov
mov
out
cmp
sbb
daa
xor
fcompl
rorl
jmp
pop
cmpsb
xor
test
cmc
test
sbb
add
gs
mov
mov
jp
xor
into
dec
lahf
xchg
dec
fstps
out
ja
push
add
loope
mov
insl
mov
sbb
xchg
ljmp
pusha
aad
jbe
push
inc
pop
jns
aas
loopne
sub
popf
outsl
clc
addr16
add
add
add
mov
push
insb
lahf
and
lahf
testl
jmp
mov
jl
into
leave
mov
xchg
xor
shlb
adc
sti
push
cmp
mov
in
mov
loope,pn
stos
sub
loopne
push
leave
call
int3
xchg
pop
aad
inc
js
xor
cmp
jle
fwait
mov
sbb
cld
rorb
enter
mov
ja
inc
fildl
jmp
jecxz
out
int3
xor
jae
dec
test
cltd
xchg
cmp
and
push
xchg
push
cltd
sahf
push
adc
or
mov
in
in
or
and
cmp
enter
lcall
push
adc
adc
mov
or
adc
mov
mov
push
les
or
cmpsb
sbb
jnp
mov
jnp
daa
mov
stc
add
add
add
or
sbb
pop
or
mov
mov
xchg
push
shrl
scas
xlat
sti
stc
dec
pop
subb
xlat
jnp
and
adc
fstps
pop
xor
pop
iret
pop
imul
xchg
jp
mov
add
insl
imul
fistps
movsb
mov
jp
pop
ret
stos
sar
in
std
cmp
add
in
inc
frstor
mov
mulb
ds
mov
das
orb
adc
aad
outsb
imul
fwait
xchg
idivl
jmp
push
and
insb
sub
andl
jnp
sbb
cmp
xor
ja
fcmovne
add
into
sbbb
adc
pop
dec
stc
and
stos
xor
insb
mov
jmp
xor
mov
movsb
jb
fincstp
jle
pop
pop
sti
sbb
insb
xchg
add
add
in
add
addb
imul
gs
lods
jge
addr16
add
add
add
ret
jmp
inc
adc
push
jb
pop
fdivl
adc
mov
pop
fstpt
xor
jno
imul
out
fdivrl
push
inc
sbb
xorb
and
enter
mov
inc
inc
rcl
add
out
movsb
mov
movl
or
mov
push
es
dec
xchg
mov
rclb
leave
imul
jge
xor
lahf
adc
je
cs
push
or
data16
pop
int3
test
addr16
sbb
mov
icebp
leave
loop
sub
popa
jp
sbb
out
push
mov
stos
adc
dec
dec
add
clc
out
jle
sub
daa
sbb
sub
sbbl
sbb
mov
mov
dec
test
aaa
mov
fsubl
in
pop
clc
push
and
xchg
jle
or
lret
xchg
mov
idivl
iret
int3
aas
movsb
addr16
add
add
add
shll
lods
dec
sub
ficompl
push
aaa
sub
mov
push
rcr
mov
sub
dec
dec
dec
inc
push
sbb
repz
mov
ret
repnz
xchg
or
popa
add
loope
stos
push
jle
fbld
push
push
orb
cltd
fwait
jbe
mov
ficomps
aas
out
push
sahf
fnstsw
xlat
push
or
xchg
or
mov
in
xor
cwtl
out
faddl
test
icebp
xchg
in
test
xchg
lret
jne
aas
sub
sbb
inc
repnz
jo
xlat
sub
in
or
inc
and
sbb
jbe
xchg
ret
add
mov
sbb
sbb
sub
repz
mov
xor
xchg
push
cli
push
sti
mov
mov
pop
aam
xchg
insb
mov
inc
jbe
popf
mov
loope
sbb
test
mov
fisubl
test
cld
add
add
add
fiaddl
sub
loopne
dec
jnp
cld
or
mov
test
icebp
sbb
xor
fnsave
lods
jg
jns
sub
or
mov
xchg
mov
sbbl
mov
jl
xchg
ss
int3
lahf
mov
ja
aam
cmpsb
adc
add
out
pop
or
mov
js
scas
lock
insl
push
push
bound
cmpl
pop
sti
icebp
nop
cs
lods
cmpsl
cs
jge
or
push
push
fwait
adc
pop
adc
pop
sahf
es
push
sbb
scas
or
adc
pop
divb
fmul
push
js
pop
data16
js
lret
cmpsb
mov
fisubrs
aas
stos
or
cmpsb
lahf
dec
enter
mov
aaa
push
adc
fimull
test
imul
enter
push
rcr
lret
rep
inc
pop
sti
xchg
xchg
das
jne
add
add
push
pop
push
jmp
rclb
or
loop
std
add
add
add
test
sbb
add
dec
in
lods
add
jbe
lea
xchg
test
dec
xchg
outsl
xchg
jo
xor
mov
add
pop
pop
cmp
jmp
cwtl
icebp
push
popf
mov
imul
shl
jmp
gs
movsl
hlt
sub
jl
mov
push
fcompp
je
mov
and
dec
dec
sbb
sub
inc
int
insl
xor
test
sahf
inc
add
arpl
lods
push
cmp
and
inc
xor
pop
add
jmp
lds
mov
prefetchwt1
mov
cmp
cmpsl
ds
xor
xor
fldenv
xchg
or
jecxz
or
aad
cmpb
daa
and
mov
ret
movsb
roll
mov
mov
int
cmp
mov
push
inc
pop
cmpsb
sub
mov
jmp
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
jo
nop
loope
incb
add
add
add
and
data16
ret
push
pop
aaa
mov
inc
in
and
fisubl
cwtl
mov
push
jmp
fisubrl
jl
outsb
icebp
mov
mov
cmp
mov
adc
cld
test
lcall
xor
arpl
cmp
adcb
and
scas
popa
fs
gs
add
pop
dec
add
dec
loopne
adc
gs
ror
shrl
xchg
cs
test
and
fisubl
dec
into
rorb
leave
mov
dec
shl
inc
scas
mov
xlat
outsl
cmpb
xchg
inc
adc
sub
dec
fistps
insb
in
lahf
out
int
push
fisubrs
fcmovnbe
sbb
or
cld
and
mov
adc
adc
lret
fldl
cmp
dec
mov
cli
es
inc
loopne
jl
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
out
repnz
cmp
cld
xchg
mov
mov
sbb
int3
sti
popa
jle
push
mov
in
sbb
mov
mulb
dec
ljmp
xchg
inc
mov
mov
test
stos
jmp
cwtl
mov
or
ja
xchg
or
into
adc
and
pop
lret
fcompl
xor
loopne
dec
fistps
ret
aas
rcrb
sub
or
rorl
pop
int3
arpl
xor
loope
mov
cmp
dec
push
test
sbb
mov
lahf
dec
nop
loopne
dec
pop
cmc
lds
mov
mull
scas
mov
dec
cld
jg
mov
lods
inc
pusha
xor
aad
cmp
insb
and
mov
adc
xor
mov
mov
add
mov
nop
test
aam
int
aaa
das
aam
xchg
es
add
add
add
add
cli
daa
dec
jnp
dec
jne
arpl
filds
subl
nop
cmc
fildl
sahf
add
cmp
cmpsl
xchg
popl
scas
fldl
lods
popa
dec
sbb
push
xchg
std
or
imul
xchg
test
xor
or
xlat
scas
test
hlt
sub
out
inc
pop
fs
inc
mov
jle
adc
pop
xchg
adc
ljmp
arpl
leave
in
xchg
pop
sahf
push
dec
and
pop
add
mov
sahf
js
lock
push
test
je
jae
or
xchg
fcmovne
vmovhpd
adc
jo
sub
or
dec
mov
ret
fldcw
jb
das
ret
fsubl
pusha
test
sub
ret
jecxz
fdivl
jno
scas
rolb
inc
xor
push
enter
enter
pusha
daa
pusha
testl
add
arpl
addr16
sub
dec
iret
shl
add
add
add
add
ja
fwait
dec
cld
pop
push
push
adc
mov
cmp
jmp
mov
push
imul
push
pop
mov
mov
jl
push
test
or
jge
jnp
cwtl
sbb
test
fdivl
mov
add
ror
movsb
out
fdivrs
scas
mov
stos
adc
xor
or
push
inc
or
clc
or
in
and
add
xchg
loope
and
fnstsw
fs
shll
imul
dec
and
push
and
push
add
sbb
gs
and
add
cmp
pop
inc
hlt
or
mov
leave
cmpl
cmp
xlat
push
lds
loope
int
repz
pop
jnp
out
jno
es
jp
stc
xchg
das
dec
adc
fs
lds
jp
jmp
repnz
bound
cwtl
das
jle
push
iret
hlt
out
cmp
cmp
pushl
xchg
xor
jecxz
push
sub
add
add
pop
sbb
xlat
jle
or
mov
adc
iret
jl
jo
sub
push
test
mov
mov
cld
push
lret
jb
jnp
aad
in
or
cltd
sbbl
xchg
ljmp
pop
cltd
loop
dec
outsb
fsub
stos
mov
mov
nop
pusha
fwait
push
nop
pop
cmpsb
sub
jo
mov
jle
pop
ljmp
out
mov
fs
pop
lret
jbe
adc
arpl
inc
mov
cmpsl
mov
push
jno
dec
xor
ffree
pop
iret
inc
pop
aas
jb
outsl
je
dec
stos
rcr
icebp
std
push
fwait
aam
js
mov
xor
lods
jle
xor
sbb
sub
cmp
lea
lcall
andb
sub
sbb
mov
int3
loope
ret
adc
dec
in
xor
les
pop
sahf
jmp
mov
jge
add
scas
int3
sbb
fdivrs
test
push
scas
mov
jo
andb
add
add
add
ja
jge
and
add
cld
mov
xor
jecxz
rolb
sbb
fisubl
ret
inc
aas
xor
jmp
push
inc
sub
push
dec
ss
adc
in
adc
icebp
xor
dec
adc
pop
fisubrl
out
mov
xchg
jo
out
xlat
xchg
mov
dec
add
pusha
fldt
jae
ja
ljmp
xchg
sbb
gs
repnz
or
jge,pn
stos
aas
lds
dec
scas
cmpsb
enter
shll
adc
shrb
or
jbe
push
push
add
loop
add
pop
ret
inc
mov
loopne
push
dec
sbb
aas
ljmp
jo
out
addr16
xor
idivl
test
mov
prefetchwt1
or
lds
jl
sub
dec
xchg
insl
and
insl
nop
xchg
push
xorb
dec
add
jno
mov
mov
add
add
xchg
and
movsl
mov
mov
mov
xor
add
add
pop
movsb
pop
xchg
out
sbb
addb
and
sbb
cmp
lea
test
and
mov
pushw
inc
sbb
pop
data16
jo
int3
cmp
or
and
sub
aad
cmp
sub
out
clc
add
sub
dec
or
mov
jmp
js
je
scas
cmp
std
pop
pop
lret
jae
lret
mov
scas
in
sbb
dec
cwtl
sbb
adc
jb
sub
pop
sahf
in
cwtl
fldt
mov
mov
sbb
pop
xor
pushf
adc
imul
jmp
adc
or
sahf
push
ret
repnz
movaps
cltd
xchg
add
test
mov
orb
ret
push
pop
cld
xchg
pop
aam
mov
xor
mov
jns
lods
pop
incl
subl
add
add
mov
push
jg
mov
or
es
add
add
and
mov
jmp
inc
mov
jae
leave
cwtl
xchg
ret
mov
andl
shrl
ljmp
ljmp
hlt
mov
std
les
pop
add
lds
ljmp
cmpsb
dec
imul
aad
add
or
sti
xor
mov
lret
or
jnp
addb
xor
scas
mov
stos
push
mov
inc
add
js
jmp
add
xchg
iret
leave
push
sub
test
fcomp
sbb
test
push
cmc
sub
adc
fldenv
test
push
hlt
lret
in
shll
pushf
mov
lods
fs
jne
xchg
ret
xchg
jae
leave
xchg
jo
loope,pt
adc
sub
loop
xor
negb
hlt
xchg
mov
cmp
add
inc
stc
mov
mov
lods
imul
into
out
mulb
add
add
add
mov
mov
push
jp
movsl
push
jecxz
pop
cmc
mov
inc
mov
cmp
mov
push
xchg
and
jbe
clc
fwait
incl
push
mov
sbb
adc
mov
adc
sarl
xor
fidivrl
insb
jp
jns
arpl
lahf
sbb
push
inc
jg
xor
imul
outsl
lret
jecxz
repz
mov
and
jge
addl
sbb
cmp
pop
mov
hlt
fwait
pop
mov
xchg
fbld
mov
movsb
sub
pop
pop
push
mov
and
push
push
in
or
pop
pop
stc
mov
mov
xor
stos
popa
mov
lods
cltd
mov
addr16
mull
sub
push
sub
ss
mov
test
mov
push
roll
push
js
jmp
xchg
sub
scas
or
cmp
mov
pop
add
add
add
stos
mov
or
mov
cmc
fdivrs
cld
std
int
xchg
fs
pop
push
mov
push
out
jecxz
jl
sbb
lds
lea
es
das
lcall
in
jo
je
xor
pop
out
test
lahf
popf
movsb
mov
popf
sbb
fsts
sbb
loop
dec
push
mov
xor
fisubs
stos
lsl
mov
and
push
inc
jo
sbb
je
test
loope
xchg
rolb
scas
mov
push
lret
mov
popa
aas
inc
jnp
mov
pop
cmp
mov
xor
and
es
adc
cmpsb
into
imul
and
sub
test
mov
inc
ret
neg
push
mov
xlat
cltd
movsl
cmp
mov
add
add
hlt
fbld
loopne
mov
add
add
pop
push
repz
pop
mov
imul
push
in
adc
mov
lcall
pop
push
clc
and
scas
outsl
jno
xor
mov
mov
xchg
jp
adc
lds
lods
mov
xor
xor
outsl
ret
mov
leave
inc
cmp
cmp
in
pushf
xchg
pop
out
nop
cs
mov
sahf
add
sti
push
pop
lods
lods
mov
stos
adc
cmp
lret
add
ret
stos
shl
mov
xchg
fwait
outsl
xchg
lods
push
xchg
pop
xchg
xor
fwait
imul
mov
leave
es
add
lods
divl
xor
dec
lahf
xor
lock
in
pop
imul
mov
gs
push
xchg
jno
and
arpl
cmp
fidivs
jge
and
scas
ljmp
mov
mov
into
fwait
add
mov
xchg
or
add
add
add
push
push
popf
dec
sti
jns
call
dec
adc
popa
dec
int
pop
pushf
iret
int
inc
mov
negb
pop
mov
or
mov
mov
and
adc
mov
xor
and
mov
xlat
cmpsl
dec
sar
jbe
and
mov
inc
psubusw
inc
stos
mov
mov
and
test
mov
scas
rclb
dec
mov
or
cmp
ffree
or
test
pop
mov
mov
xchg
cmp
inc
inc
pushf
cmpsl
inc
ret
jne
clc
stos
addr16
negl
lds
push
push
push
cltd
mov
jmp
ds
jns
outsl
jle
gs
pop
aam
mov
les
rcrl
sti
inc
dec
sbb
movb
jp
dec
sub
cmp
push
inc
sarb
repz
add
add
xor
mov
pop
sarb
in
xchg
sub
or
add
add
add
ret
mov
or
dec
jns
mov
ljmp
add
push
sbb
add
fcomi
dec
lods
and
jnp
mov
mov
dec
sub
popa
loopne
iret
pop
xchg
les
in
pop
sub
lods
fcoms
mov
lret
repz
test
and
mov
jns
jecxz
sbb
cmp
idivb
cmp
sub
sub
or
mov
sbb
sbb
jl
adc
dec
cmpsl
sub
aas
jge
or
jo
out
imul
inc
push
or
mov
dec
pop
mov
pop
pop
or
cmc
mov
inc
shrd
xchg
xor
mov
inc
sahf
fldl
adc
sahf
xchg
jecxz
adc
icebp
fisttpl
xlat
or
jmp
cli
mov
lods
stos
mov
mov
sti
inc
out
aas
mov
rcl
xchg
adcb
add
add
add
pop
adc
aas
jo
cli
sub
adc
push
aad
mov
outsb
sbb
add
movsl
cmp
cmp
popf
jp
adc
xchg
pop
in
push
or
xor
ret
std
push
cmp
jae
cmp
dec
fstpl
mov
aad
mov
push
xchg
in
and
dec
movsb
repnz
xchg
cmp
push
adc
sbb
aaa
mov
sub
arpl
out
cltd
rorb
in
dec
dec
int3
adc
and
or
or
pop
mov
imul
dec
mov
sbbb
add
xchg
paddusb
repnz
cmp
movsl
insb
xchg
and
xchg
pop
cwtl
sub
dec
addr16
mov
cmp
inc
push
jmp
lods
pop
mov
sbb
jl
xor
inc
ror
jno
push
bnd
dec
leave
and
nop
loope
addr16
add
add
add
pop
mov
or
sub
push
cmp
mov
mov
fwait
mov
pop
add
hlt
fs
or
test
test
pushf
daa
jns
lods
inc
cmp
int
and
shll
cmp
jae
xor
push
loopne
cld
mov
push
mov
push
push
lret
pop
xor
enter
xor
imul
push
inc
xchg
popf
pop
popf
out
je
xor
out
test
rorb
xchg
pop
jp
add
sbb
fdivs
mov
stc
mov
repnz
js
cmpsb
and
inc
dec
pop
daa
inc
mov
subb
sahf
dec
sub
mov
fs
inc
scas
dec
or
out
xor
movsb
pop
mov
mov
and
mov
lods
jmp
jb
aaa
out
js
xor
xor
xchg
pop
jne
ret
add
add
in
out
ja
filds
arpl
add
add
add
xchg
mov
or
lret
cwtl
push
cli
pushf
outsl
je
jmp
hlt
xor
negb
push
out
std
cmp
movb
aad
and
test
add
push
jmp
test
test
lods
ficoms
ds
jno
or
leave
sbb
or
add
xor
push
mov
adc
mov
mov
out
add
stos
push
adc
dec
lods
nop
inc
xchg
lret
mov
fisubs
pop
iret
push
pop
dec
cmc
int
mov
in
daa
insb
test
cmp
push
pop
insb
dec
adc
cmp
lds
lock
loope
insl
je
lcall
sbb
or
cli
cmpsl
jns
aad
xchg
mov
push
ljmp
adc
mov
sub
inc
mov
dec
jmp
fdivrp
pusha
dec
dec
inc
sbb
stos
cwtl
inc
push
pop
scas
test
in
inc
push
or
or
add
add
add
arpl
iret
push
jmp
lock
mov
adc
sub
xor
adc
rcrl
cmp
mov
jne
test
pop
sub
jnp
movsb
aas
ret
sti
psllw
mov
addr16
inc
jnp
inc
inc
xchg
call
lret
mov
js
push
mov
jp
and
adc
and
or
mov
aam
cmp
and
icebp
push
fsts
or
roll
sarl
ss
jg
mov
jbe
xor
sub
adc
sbb
icebp
and
test
pop
addr16
shl
mov
jmp
call
push
or
stos
mov
jmp
out
xchg
or
add
xchg
int
js
adc
dec
out
adc
call
in
mov
lcall
pop
mov
add
add
jg
neg
pop
daa
inc
mov
sgdtl
add
add
or
faddp
out
aam
sbb
mov
fadds
adc
dec
push
xchg
rorl
fcomps
xchg
xor
std
mov
push
inc
sbb
fiaddl
mov
jmp
mov
xchg
insb
mov
jbe
stc
scas
popf
mov
jbe
fisubrs
mov
cmp
xchg
lods
lcall
mov
and
jbe
inc
in
int3
sub
pop
cmp
push
inc
mov
fsubs
call
sbb
not
out
ds
adc
lret
lods
mov
pop
std
idivl
cltd
cmp
dec
push
movsb
pushf
cld
or
stos
jmp
mov
adc
mov
mov
jno
or
push
in
std
dec
lahf
inc
mov
sub
add
jns
cld
push
mov
pusha
or
aaa
mov
pop
mov
lock
or
arpl
add
add
sti
jg
cmp
je
out
jmp
adc
add
add
add
decl
pushf
jmp
mov
and
jp
push
sub
int
pop
sar
mov
cmp
adc
mov
fcoml
lds
lahf
pusha
lahf
cmp
je
lret
mov
or
cmpsb
test
push
dec
pop
pop
div
sbb
mov
test
pop
pop
je
rorl
inc
pop
xchg
mov
push
push
scas
jns
je
or
insl
int
mov
call
push
pop
lret
push
push
inc
jmp
sbb
fidivl
je
mov
sbb
iret
mov
add
adc
repnz
inc
inc
jns
add
cmpsl
jmp
jl
sahf
push
jl
pop
pop
jecxz
fsubp
or
repz
rcrb
nop
scas
dec
and
fldt
mov
xchg
pop
sahf
mov
bound
jne
decl
inc
push
dec
fstpt
push
mov
imul
cmp
add
add
jnp
fstp
fcompl
sbb
lcall
add
push
lcall
pop
into
jmp
and
inc
ficompl
mov
xchg
lea
aad
mov
inc
clc
in
popa
and
pop
ljmp
xlat
repnz
sub
push
nop
popf
in
push
inc
fcmovnbe
push
mov
fisubl
insb
push
ds
mov
xor
sub
pop
scas
and
fnsave
xor
sub
lds
cmpsb
add
push
xor
push
sub
jg
cmc
stos
leave
outsb
jge
or
mov
adcl
cmp
jns
inc
outsl
add
repz
loop
aad
and
cmc
xchg
push
mov
push
cwtl
aaa
dec
mov
nop
test
lcall
int3
fnstsw
addb
push
jmp
xor
add
fnstenv
movsb
ds
push
cmp
fcmovnb
jb
mov
jno
std
outsl
mov
add
in
mov
add
add
add
mov
add
stc
pushf
inc
cmpsb
mov
mov
mov
cmpsb
mov
movsb
adc
mov
mov
xchg
insb
or
lods
adc
ja
popa
mov
loopne
adc
pusha
aaa
sbb
int3
push
insl
fs
enter
add
mov
sbb
and
mov
icebp
or
out
inc
dec
xchg
cmp
fimuls
in
and
clc
inc
cs
test
fldt
push
mov
xchg
popa
sahf
fnstcw
mov
loop
pop
inc
add
cvtdq2ps
imulb
pushf
mov
dec
into
dec
cmc
icebp
repnz
push
sahf
jb
jg
out
cli
cli
shlb
lock
mov
sub
clc
cmp
movsb
hlt
iret
dec
je
pop
int3
jecxz
pop
das
into
dec
cmp
cmc
inc
add
nop
fiaddl
sub
adc
repnz
inc
and
add
jmp
fnsave
mov
adc
add
add
add
lods
add
push
bound
es
sbb
loopne
sbb
sub
inc
fbld
das
mov
inc
adc
push
shrb
and
jne
adc
mov
ljmp
fistpll
adc
sbb
xchg
fsubs
adc
incb
xorb
sti
or
imul
insb
add
fcmovne
xor
mov
std
push
mov
iret
loope
fldcw
cmp
cmpsl
icebp
mov
into
test
pop
xchg
mov
bound
test
fimuls
mov
sbb
fidivrl
psubb
add
jns
int3
call
jp
xchg
jae
or
mov
push
inc
mov
pop
outsl
std
jle
xlat
mov
push
lds
add
xor
xchg
lds
rcll
cltd
addr16
add
add
add
sti
stos
or
lret
fiadds
int
enter
push
dec
sub
hlt
bound
adc
mov
jl
push
lret
popf
xor
pop
ds
dec
idivl
out
cli
iret
sub
test
jge
pusha
gs
pop
cmp
sub
add
insb
ret
int
pushf
movsl
pop
lock
cmp
push
stc
ljmp
mov
sub
and
jb
mov
aas
mov
pushf
or
adc
pop
lcall
xlat
add
mull
cmpsb
xor
mov
mov
nop
clc
sub
dec
mov
pop
pop
shll
dec
xor
cmp
jl
lcall
sub
sub
std
or
test
jecxz
fistps
imul
push
or
pop
and
sub
mov
push
sbb
push
jae
pop
int
daa
adc
add
add
cli
inc
jg
int
xchg
lods
or
je
dec
addr16
add
xor
cmp
or
je
mov
rolb
xchg
mov
les
fists
cld
inc
push
adc
lret
push
dec
pop
xlat
xor
jnp
push
daa
push
and
std
sub
pop
scas
cmp
ror
lahf
pop
orb
mov
and
outsl
fnstenv
ljmp
push
jmp
mov
mov
jns
in
pushf
jge
addr16
add
js
inc
cmp
adc
test
mov
lods
insb
sub
mov
mov
xchg
pusha
mov
nop
fildl
xchg
inc
lea
cld
sub
or
lret
idivl
scas
repnz
arpl
xor
adc
int3
mov
mov
into
xchg
mov
mov
mov
rcrb
dec
je
cmp
fdivs
push
aaa
movsl
out
jp
cli
inc
sub
loopne
popf
lock
std
cmp
jle
fistpll
ss
lea
mov
push
add
add
add
inc
mov
pop
xchg
daa
add
pop
loopne
jl
orl
xchg
iret
push
or
movsl
mov
leave
sbb
push
loop
aad
mov
rcl
and
enter
std
test
cmp
lods
cmp
mov
ret
rclb
aam
cmc
cltd
or
pusha
xchg
pop
stos
shlb
lods
sub
or
cmp
cmp
roll
adc
and
sub
lea
insb
aam
cmpsb
add
pushf
adc
std
cmp
les
lods
mov
push
rclb
es
push
test
pop
dec
es
sahf
xchg
pop
movb
mov
adc
push
sbb
mov
int
pop
push
inc
mov
rol
stos
jmp
dec
or
pop
jp
add
int
mov
sbb
aaa
dec
mov
das
or
jns
inc
push
jp
jg
ja
cmp
or
xchg
pop
lds
xlat
ficompl
inc
add
pop
add
add
add
sub
jo
lock
mov
mov
loop
push
and
mov
lret
dec
nop
mov
mov
inc
icebp
jge
andb
imul
fwait
or
xchg
push
fnsave
adc
incb
je,pt
xor
sarb
xchg
lret
jmp
lret
adc
xor
inc
repnz
fcmovnbe
jl
xchg
mov
cmpl
aaa
sahf
loopne
sahf
pop
ret
andl
movsb
sub
fmul
jp
xchg
inc
push
inc
insl
xchg
push
aaa
lret
adc
jge
stos
cli
fidivrl
cmp
test
adc
test
or
lret
icebp
jp
rcrb
out
cmp
cld
aad
jmp
lahf
scas
iret
jnp
xchg
push
movsl
add
scas
loopne
pop
xchg
dec
cltd
or
pop
out
aam
fimuls
incl
movsl
jbe
inc
dec
dec
jno
cwtl
sub
sub
xor
jg
les
dec
jmp
dec
scas
iret
outsb
jmp
push
test
sub
sbb
add
add
add
mov
jmp
jo
hlt
iret
dec
js
mov
inc
push
mov
add
outsl
inc
xchg
xchg
test
xor
pusha
dec
inc
jl
ljmp
and
lods
or
gs
xor
mov
or
pop
outsb
cmpsb
mov
push
cmp
lea
popf
adc
cltd
xor
fsubrs
les
cmp
cli
adc
das
mov
cli
iret
cmp
nop
push
push
sbb
mov
push
fdiv
insl
cltd
mov
inc
sbb
xor
xor
dec
bound
fs
popa
inc
mov
bound
jle
outsl
fucomi
in
or
jg
and
adc
icebp
data16
rolb
rcll
call
adc
xlat
xchg
jecxz
push
notb
xor
dec
ja
and
popf
rorb
adc
roll
push
xlat
push
andl
add
add
std
sbb
stc
cld
or
or
bound
sbb
add
add
add
lds
es
or
add
into
js
and
mov
xchg
loopne
enter
sub
xchg
or
sub
and
push
mov
hlt
xor
jne
ljmp
sub
cmp
test
jb
xchg
xor
inc
lcall
sub
jae
or
popa
scas
mov
cmp
mov
arpl
mov
out
mov
int3
negb
xchg
sub
inc
mov
testb
or
dec
push
lret
adc
xchg
imul
aas
mov
test
pop
cmp
mov
scas
xor
and
jns
fcomp
sub
daa
inc
xor
xor
mul
sub
xchg
add
xchg
ljmp
jnp
sub
addr16
das
mov
test
dec
jmp
cmp
lea
negl
adc
pop
xchg
cmpsb
scas
pushf
pop
ja
sbb
add
add
add
fs
rcll
cmp
rcrb
add
inc
int
cmpb
pusha
out
out
mov
xchg
lret
clc
cmp
push
jg
pop
jnp
mov
mov
iret
test
jmp
push
test
add
mov
jns
pop
mov
mov
adc
mov
out
js
jg
popf
das
push
mov
daa
repnz
shll
outsb
and
dec
xor
lds
lret
pop
roll
sub
test
lock
cwtl
divl
adcl
sarl
push
pop
inc
ja
push
push
loopne
mov
popf
dec
mov
and
enter
sbb
xor
pop
push
pushf
aad
inc
mov
dec
rolb
iret
pop
popa
in
push
cmpsb
out
lock
push
fdivr
rcrl
mov
dec
pushl
sbb
mov
add
add
add
or
stc
fiadds
ja
mov
negl
pop
lahf
int
test
imul
das
shrl
mov
rorl
push
jl
lea
dec
mov
jge
xlat
ret
enter
or
inc
pop
int
mov
cli
cwtl
aad
fwait
push
or
jge
mov
call
movsb
imul
data16
xchg
sbb
cmpl
cmpsl
push
jbe
in
mov
mov
outsl
adc
xor
insb
mov
pop
dec
mov
sahf
inc
xchg
aas
mov
and
pop
subb
rep
into
out
arpl
loopne
dec
inc
shll
scas
outsl
sub
sub
fbld
xor
jns
repz
dec
dec
xchg
jmp
sbb
loop
sbb
and
lds
mov
push
leave
pop
cmpl
inc
add
les
mov
or
mov
cs
pop
sub
inc
ja
pop
aas
dec
push
popa
shll
add
add
add
shrb
mov
out
ljmp
adc
lods
leave
cpuid
push
test
mov
aas
adc
imul
mov
pop
pop
cmpsb
je
dec
xor
jge
adc
insl
test
push
sub
pop
jae
inc
sbbl
mov
adc
cwtl
dec
pop
sub
mov
mov
sub
repnz
sbb
and
dec
xchg
enter
add
cmc
sbb
mov
jl
pop
push
mov
push
ficoms
xchg
and
or
fidivrl
push
js
mov
inc
scas
clc
mov
outsl
pop
popf
cld
ja
pop
or
test
fistl
das
jmp
or
pushf
imul
stos
repnz
imul
into
mov
add
inc
fists
jge
dec
jnp,pn
testl
add
xchg
jae
ja
div
mov
push
jno
addr16
add
jl
andl
pushf
mull
sub
mov
push
aas
addr16
jle
test
pop
push
mov
pop
enter
push
cltd
out
push
sub
into
push
ret
add
sub
arpl
dec
out
push
scas
add
mov
sbb
shrl
dec
dec
call
iret
or
push
mov
push
rorl
inc
pop
add
enter
adc
push
jl
push
enter
stc
sahf
sahf
sbb
lea
iret
imul
mov
cmp
push
fmuls
xor
mov
lahf
ja
cmc
pop
popf
imul
mov
pop
xchg
outsl
lods
out
gs
fs
in
subl
cmpsl
add
and
xchg
or
jecxz
jmp
pushf
jp
jmp
ljmp
pop
mov
test
test
movsb
bound
add
add
cli
std
jg
push
pushf
dec
outsl
fldenv
pusha
addr16
add
add
add
data16
jecxz
xchg
repnz
push
lods
jo
mov
pop
adc
push
in
fadds
fcomip
push
push
mov
filds
fidivrl
mov
cmp
testl
std
sbb
mov
clc
shlb
dec
insb
or
mov
daa
pop
jle
in
mov
rclb
mov
mov
push
jmp
negl
pop
ficomps
pop
lea
outsl
fistpll
das
fsubl
or
scas
push
mov
test
sub
gs
xor
mov
lods
mov
das
fcmovu
inc
and
popf
inc
je
movsb
push
jmp
or
ficoml
cmp
ss
or
jg
insb
daa
xchg
pop
and
jmp
je
cmp
xor
mov
or
mov
cli
xor
adc
dec
shll
xchg
iret
testl
incl
sbb
mov
pop
add
add
add
push
das
push
movsl
xor
dec
add
fsubrs
jbe
inc
fisttps
stos
xor
xor
mov
inc
mov
popf
shrl
dec
xor
xorl
pushf
daa
in
imul
xchg
push
xlat
out
mov
push
shll
addl
sub
loop
xor
dec
cmp
fdivrl
push
jge
sbb
test
or
popf
or
xchg
mov
mov
adc
jo
adc
adc
sub
shrb
popf
push
adc
xor
cmp
mov
jecxz
data16
add
pop
je
sahf
jbe
xchg
mov
inc
pop
mov
pop
and
test
xchg
ss
mov
sbb
xchg
push
adc
arpl
loope
imul
loope
pop
sub
mov
push
das
jp
loopne
push
aaa
test
sahf
push
es
jg
pop
or
xor
outsl
andb
add
add
add
aam
in
cmpsb
subl
imul
cmpsb
loop
mov
je
mov
or
jp
in
cmp
rorl
or
xor
jb
cmpsb
cli
mov
cmpsb
pusha
lods
mov
mov
les
call
sbb
sub
aad
push
pop
inc
xor
pop
out
mov
inc
adc
xchg
push
mov
mov
pop
lahf
in
test
dec
fisttpll
mov
cmpsb
lods
jnp
out
xor
jo
shl
das
pop
mulb
addb
lods
xorl
push
adc
sbb
xchg
cmc
mov
sub
add
aas
mov
subb
add
mov
cmp
int3
sbb
outsb
xchg
lahf
and
test
outsl
cmpb
add
add
or
dec
push
cmp
and
add
add
add
aad
pop
pop
mov
lea
jg
fbld
or
test
and
movsb
xchg
or
es
xchg
inc
inc
pop
das
mov
repnz
inc
sbb
js
adc
or
fistps
and
std
add
sarl
ss
testb
pusha
mov
adc
adc
test
in
jnp
hlt
shrl
data16
mov
add
subb
jo
cmp
fstps
fistps
push
xchg
lahf
bound
cmp
pop
int3
loop
shr
andb
rclb
test
mov
add
sub
xchg
cmp
imul
lahf
sbb
push
rol
test
loop
inc
decl
add
imul
cmp
pop
fldl
mov
add
stc
lods
xor
mov
popa
repz
add
add
add
sbb
add
sbb
fcomps
push
aas
cli
icebp
mov
mov
nop
clc
push
mov
lds
cld
mov
lret
lret
sbb
add
rcl
pop
adc
push
push
xchg
test
test
push
dec
inc
icebp
movsl
insb
cld
mov
push
adc
lret
push
sti
jno
outsb
adcb
pop
insl
adc
add
mov
daa
loop,pt
and
loopne
mov
xor
cld
call
test
ja
cmpsb
cmpsl
push
subl
xor
shll
dec
inc
out
test
adc
gs
push
push
pop
leave
jne
inc
in
or
lods
mov
push
fidivs
push
out
mov
jbe
insl
inc
iret
inc
lock
pop
in
add
cwtl
outsl
rol
sar
sahf
test
mov
test
sub
add
add
ficoms
stos
sbb
call
mov
and
add
add
add
movsl
xchg
sarb
push
int
dec
enter
sbb
jle
ss
nop
push
lret
faddl
icebp
push
jl
add
jl
in
jo
pop
call
inc
je
lock
nop
mov
ds
movsb
adc
add
sbb
mov
sub
jne
jbe
and
pop
mov
mov
lods
mov
pop
cli
and
fcompl
inc
cmp
pop
mov
cs
adc
xchg
out
inc
sub
push
xor
aad
dec
btc
inc
dec
xor
sbb
addr16
mov
cld
fcoml
pusha
sarl
dec
cmpsl
adc
imul
add
or
int
xlat
add
push
dec
divb
cwtl
or
cmpl
or
xor
ljmp
mov
mov
imul
add
mov
out
stos
jge
or
cmpsb
xchg
add
add
add
push
fwait
sub
scas
xor
in
add
stos
call
into
push
fdivs
xlat
out
mov
jae
lods
test
mov
adc
pop
jne
rorl
faddl
insb
test
mov
ds
mov
data16
ss
xor
mov
sub
pop
shll
lcall
lahf
roll
cld
fbstp
mov
add
mov
jo
aaa
out
mov
xchg
ret
dec
jb
sub
lds
sub
fnstenv
das
out
sub
repnz
test
pop
pushl
adcb
lods
adc
xchg
inc
es
inc
push
cmp
jne
pop
imul
jb
in
or
les
cmp
cmp
stos
loope
dec
out
xor
repz
rolb
mov
dec
or
andb
in
into
fdivrl
add
add
sbb
out
xchg
iret
push
aas
js
hlt
das
addr16
add
mov
mov
push
jmp
inc
pop
add
outsl
xor
leave
jnp
arpl
fidivs
xchg
xor
fsts
in
stos
push
pop
adc
cmp
loopne
nop
mov
xor
inc
dec
push
or
jo
shrd
pop
jo
fbstp
test
movsb
rolb
pop
fnstenv
jg
sbb
add
mov
mov
fildll
xchg
xor
inc
aad
lock
outsl
mov
repnz
iret
add
mov
das
cmp
jb
push
mov
ljmp
fcoms
cmp
dec
xchg
xchg
lock
repnz
and
or
xchg
ds
or
push
idiv
js
push
adc
jecxz
cmp
and
xchg
in
jne,pn
push
or
pushf
push
mov
xchg
sbbb
es
mov
add
add
in
add
cmp
out
loope
jns
dec
xchg
xchg
out
add
add
add
jecxz
mov
sub
int3
stc
rol
xlat
imul
mov
cmpsb
lea
mov
jb
les
aam
push
shrl
icebp
addl
fs
dec
mov
dec
push
iret
mov
add
lret
call
je
jns
cmp
pop
jo
mov
pop
push
mov
leave
pop
mov
jb
outsl
imul
sbb
icebp
pop
sbb
mov
sbb
clc
mov
dec
scas
sbb
mov
call
inc
and
dec
mov
xchg
inc
dec
cmpsl
std
inc
cmp
and
push
or
dec
and
fcmovnu
lret
mov
sti
xchg
frstor
ljmp
push
stc
inc
dec
mov
jns
enter
test
fwait
jl
shr
xchg
xlat
adcl
out
cmpsb
sbbb
lods
aaa
push
add
test
sbb
sti
push
mov
inc
cltd
lret
daa
add
add
add
aas
pusha
push
lcall
xchg
std
xor
dec
repnz
dec
ljmp
mov
and
test
mov
push
push
mov
push
ficoms
mov
call
jb
adc
das
xchg
lock
xchg
call
or
xlat
xchg
jae
in
mov
mov
cwtl
js
out
add
push
scas
inc
popa
or
outsl
andl
sbb
ds
inc
insl
jno
jb
fstps
dec
sbb
sti
push
dec
shll
push
rolb
mov
imul
or
pusha
jnp
mov
sbb
outsl
nop
adc
in
add
cmpl
jmp
xchg
aas
popa
lds
dec
add
fnstsw
push
inc
popf
sti
pushf
mov
inc
lcall
and
adc
mov
in
sub
mov
mov
dec
idivl
cld
ret
add
in
packuswb
add
add
add
mov
jns
pusha
in
jnp
cmp
pop
cli
lahf
roll
inc
outsl
ss
aaa
filds
stc
out
jge
inc
push
xchg
mov
mov
or
mov
shll
popa
sub
mov
stos
sub
pusha
cwtl
ss
fidivrl
push
mov
cmp
lcall
leave
xchg
cmp
daa
fs
mov
cmp
and
ljmp
shrb
rcrl
adc
inc
cwtl
subb
lods
xor
sbb
push
pop
xor
pop
adc
and
sub
push
jae,pt
dec
jge
push
sti
sbb
inc
xchg
adc
cmp
inc
popf
mov
pop
pop
adc
in
sub
rcr
sub
scas
lcall
mov
jns
or
shrl
sub
aad
adc
ds
call
jg
mov
loope
xor
mov
inc
mov
add
mov
iret
mov
dec
jge
int3
sub
add
add
add
xchg
mov
movb
fbstp
and
cmp
fsubrp
hlt
adc
sbb
cli
and
mov
ljmp
orb
aas
push
dec
lea
repnz
dec
xor
in
jecxz
cld
sub
mov
sub
lods
test
in
xchg
int3
xchg
mov
ret
jne
cli
rcll
es
daa
shlb
cmpsl
shlb
imul
hlt
jg
xchg
and
jno
cli
push
fwait
mov
sbb
jns
mov
je
mov
pusha
mov
jle
out
adc
mov
jle
mov
testl
ret
jne
xlat
push
pushf
cmp
pop
sub
cmp
mov
or
iret
pop
pop
mov
xor
pop
fcomps
cmp
lea
push
pop
fmul
rcr
rorl
leave
adc
addr16
lea
pop
leave
cmp
outsb
push
xchg
test
mov
roll
add
or
jg
arpl
ficomps
sub
add
add
add
in
rcll
inc
lods
jecxz
jle
or
push
filds
nop
rol
test
sub
mov
aam
pop
sbb
dec
dec
std
add
std
dec
pop
shrb
push
jle
adc
ja
pop
inc
adc
dec
xlat
in
mov
jp
mov
je
test
xchg
and
mov
call
and
jl
mov
dec
icebp
aaa
dec
gs
jno
pop
fnsave
jmp
sbb
jp
push
and
xchg
jbe
jo
imul
and
xor
sarl
mov
dec
cs
roll
jle
inc
dec
pop
mov
pop
int3
push
outsl
jno
loop
sub
stos
std
push
std
jnp
adc
enter
mov
pop
je
jbe
sbb
xor
dec
aad
idivb
mov
js
push
insl
mov
xchg
in
mov
sub
push
aad
add
add
xor
clc
cli
clc
sarb
sti
mov
inc
mov
sub
add
add
add
loopne
cmp
js
cwtl
mov
push
xor
push
out
jecxz
adcb
gs
sbb
or
jae
test
sbb
xor
xchg
inc
xlat
xchg
jl
movsl
add
mul
push
ja
lret
testl
mov
lret
les
cmp
push
push
daa
add
sbb
sarb
or
icebp
lret
ljmp
imul
mov
xchg
sti
pusha
mov
js
shr
sbb
sbb
mov
mov
mov
push
je
mov
xchg
sbb
stos
es
inc
ljmp
mov
or
sub
jp
pop
cmc
xlat
test
xchg
sbb
jg
in
fdivrl
push
mov
ds
jl
xlat
jae
mov
movsl
cli
and
inc
jecxz
test
imul
mov
das
sub
add
add
mov
xchg
cli
pusha
jge
mov
push
adc
call
lock
loop
outsl
mov
xchg
xlat
iret
incl
add
ss
mov
fs
jl
mov
inc
pop
sbb
pop
ds
or
insb
clc
jg
push
pop
ljmp
push
or
or
lds
cmp
es
inc
sahf
jns
fwait
inc
and
outsl
add
imul
xchg
cltd
bound
inc
push
adc
cmc
add
sbb
test
and
xchg
bnd
bound
rolb
fadds
hlt
sbb
cmp
xor
gs
dec
test
incb
xchg
pop
addb
bound
push
insl
lods
imul
std
lds
pop
leave
rcrl
mov
shlb
in
add
test
cmp
mov
add
js
inc
fs
es
data16
insb
daa
mov
out
mov
addr16
add
enter
popf
mov
movsb
fcoml
stc
es
push
add
insb
arpl
mov
mov
jl
xchg
mov
js
aas
test
cmc
xchg
arpl
push
mov
cmp
leave
pop
cmp
xor
and
imul
in
mov
int
sbbb
stos
lret
push
outsl
loop
hlt
jg
mov
cmp
aam
repz
and
and
int
sbb
push
add
std
hlt
mov
ss
add
cld
mov
dec
dec
lcall
aad
std
cmpsl
out
pop
adc
std
data16
mov
aam
or
repz
mov
pop
mov
mov
add
movsb
adc
in
and
mov
and
push
mov
xor
sti
mov
fldl
filds
add
add
dec
mov
imul
pop
loop
add
add
add
arpl
and
in
mov
fidivrs
push
pusha
adcb
jne
push
push
adc
jp
fistl
xorl
sbb
imul
jne
mov
jne
repnz
cmp
xchg
mov
and
pop
jle
sbb
fisubs
in
sbb
loop
imull
loop
cli
inc
dec
sub
add
or
dec
test
mov
xor
jecxz
in
sub
and
scas
pusha
push
cmc
ja
inc
cmpsl
out
scas
jmp
sub
lahf
outsb
or
jge
aad
xor
sbb
sarl
cs
std
fbld
push
push
cmp
dec
iret
adc
xor
sub
jle
xor
mov
dec
jp
push
jne
lods
jle
or
mov
sarl
mov
cmpb
mov
xchg
out
ret
lods
add
mov
repz
push
sti
cmpsl
enter
cli
out
pop
stc
addr16
add
add
add
out
imul
lcall
lret
jne
mov
xchg
adc
dec
fs
cmp
xchg
xchg
stos
mov
dec
ja
test
jmp
pop
mov
jns
test
sub
mov
stos
rcrb
addr16
or
cmp
xor
cmovle
out
and
mov
test
rcrb
jae
sbb
loopne
inc
xor
leave
popf
in
ss
je
dec
test
dec
mov
mov
fs
xchg
mov
xor
xchg
icebp
mov
popl
les
popa
mov
loopne
outsb
jo
add
leave
mov
pop
lock
mov
iret
push
mov
inc
xchg
fistpll
sub
ja
lret
jle
adc
lds
mov
adc
inc
push
test
movsb
gs
cmp
jo
nop
bound
fs
dec
pop
je
add
add
mov
std
mov
dec
push
inc
inc
adc
add
add
add
add
stos
push
dec
xor
push
daa
mov
repz
pop
pushf
jno
insl
adc
and
mov
dec
push
insb
stc
xchg
xchg
mov
lea
mov
stos
int3
lret
mov
sahf
andb
dec
pop
popf
out
cmp
mov
dec
cmp
pusha
aam
mov
mov
loop
or
push
aaa
stc
sarb
aad
xchg
jbe
popa
mov
pop
insl
mov
jne
cli
cmp
pop
movsb
mov
shl
scas
cltd
lret
pop
mull
cli
xchg
push
dec
xor
sub
out
dec
jmp
faddp
mov
in
stos
cld
xchg
nop
jo
add
pop
icebp
inc
dec
je
mov
mov
push
lods
mov
and
and
rclb
inc
inc
pop
into
adc
daa
les
jg
mov
scas
scas
jnp
scas
sbbb
ror
push
add
and
jecxz
and
lcall
add
add
add
xchg
sub
jae
cli
sub
loopne
outsl
cmp
mov
push
inc
sbb
push
loop
sub
into
outsb
mov
clc
mov
sbb
int3
sub
pop
leave
sub
inc
pop
outsb
dec
rorb
mov
mov
and
sub
jae
iret
sub
js
cmp
sbb
jb
add
repnz
sbb
adc
mov
sarb
push
lahf
test
cmp
mov
add
and
ss
dec
out
js
cmp
push
jns
sbb
mov
jecxz
push
ret
es
jno
and
and
loopne
jecxz
pop
mov
jns
hlt
in
out
lret
mov
inc
xchg
fnstcw
aas
test
sbb
mov
cltd
shlb
js
mov
cmc
lcall
mov
cmp
mov
add
arpl
push
mov
add
add
add
xchg
ficomps
cmp
lahf
push
push
xchg
push
xor
add
add
add
test
mov
push
inc
mov
repnz
add
pop
inc
push
add
cmp
in
jmp
cmc
lds
das
negb
lret
and
xor
clc
inc
adc
mov
rolb
movsl
xor
sub
push
imul
push
pop
rcrb
popa
add
pop
outsl
les
inc
jb
aam
shl
rol
fadd
mov
in
dec
mov
push
gs
test
adc
sbb
fwait
ja
sbbl
lcall
sub
ficoml
fimull
sbb
outsb
loopne
test
fiaddl
add
and
rorb
stos
inc
push
xchg
stos
jae
rcll
mov
jb
jno
jae
lock
in
in
or
and
inc
and
cmpsl
in
addr16
scas
inc
cmp
shll
in
push
call
add
add
lods
xor
mov
cmp
pop
dec
push
push
xor
add
add
add
push
sbb
pop
movsl
loope
lds
lcall
xor
or
inc
push
mov
mov
repz
outsb
nop
nop
test
mov
sti
jo
icebp
enter
shl
dec
out
xor
les
pop
push
pop
jecxz
cld
fcoml
lds
cmp
call
mov
push
pop
dec
movsb
arpl
push
mov
imulb
push
scas
hlt
adc
aaa
push
outsl
jle
push
into
mov
lahf
mov
pslld
not
sbb
push
ret
cmp
hlt
dec
mov
aaa
pop
jnp
hlt
in
movsl
jmp
pop
mov
push
xchg
pop
shr
dec
dec
xor
xor
in
fnstenv
xchg
inc
decb
mov
popf
pop
xor
xchg
aam
push
and
pop
add
lcall
sahf
movsl
ret
cmp
stos
mov
add
add
lret
mov
or
or
xor
add
add
add
add
dec
sahf
push
push
or
pop
pop
cmp
jge
and
pop
and
mov
scas
pop
cmc
pop
mov
dec
jmp
je
sub
xchg
and
sbb
xor
aam
es
mov
es
sub
es
mov
cmp
jne
test
fdivrl
mov
add
stc
arpl
cwtl
mov
sub
xchg
adc
out
imul
mov
inc
mov
ss
adc
ss
or
xchg
and
fmul
mov
xor
dec
jnp
data16
stc
dec
aaa
jbe
out
fmull
sarb
push
mov
clc
mov
fmuls
ret
call
out
or
xor
gs
stc
out
xchg
dec
sub
sar
sbb
mov
jmp
cmp
push
aas
lahf
cmp
add
sub
sti
pop
jge
neg
hlt
add
add
add
add
add
inc
out
cmpsl
sahf
js
and
stc
notl
bswap
imul
mov
xchg
lea
cmp
mov
and
sti
sub
cli
push
jl
cmc
in
fldt
cmp
push
loopne
in
xchg
push
faddp
sahf
lahf
sti
pop
dec
test
jle
imul
jl
push
imul
scas
mov
xchg
adc
xchg
adc
loopne
data16
pop
mulps
je
mov
stc
and
jb
cmp
jmp
sub
mov
adc
sbb
clc
notb
stos
xchg
or
xorl
pop
mov
pop
pop
cmpsb
cmpsl
mov
daa
inc
fidivrl
pop
xor
pop
mov
imul
icebp
or
xor
cmp
inc
lcall
aad
pop
dec
mov
stos
lea
xchg
repz
inc
jo
xchg
pop
sbb
cmp
movsb
mov
stc
inc
pusha
cltd
fsub
std
in
popf
in
stc
jmp
or
pushf
add
add
add
mull
ret
imul
adc
dec
sub
test
mov
data16
sbb
inc
cwtl
and
aad
fcoml
in
cmp
pop
push
mov
lods
std
insl
cs
mov
pop
mov
imul
stc
xor
insb
leave
loopne
adc
jno
pop
jb
iret
into
and
scas
mov
mov
sbb
push
repnz
mov
jo
and
and
loop
dec
jmp
cmpsl
idivl
mov
dec
loopne
push
jne
sub
nop
scas
insl
jo
fucomi
sub
jge
pushf
mov
inc
pop
pop
cmp
loopne
and
nop
dec
aam
sbb
dec
add
mov
pop
dec
icebp
cmp
jns
mov
push
jmp
out
inc
inc
rolb
jo
frstor
out
sbb
icebp
sbb
repnz
into
pop
sbb
dec
test
add
dec
push
pop
jp
jnp
sti
xchg
jle
jp
lods
xchg
adc
add
add
add
or
mov
or
jp
pop
pop
fucomi
mov
mov
dec
mov
lods
inc
enter
jle
push
lahf
pop
aaa
int
and
leave
sub
sub
push
jecxz
aam
nop
mov
addr16
mov
inc
out
mov
sbb
jno
jmp
shll
pop
bound
dec
jno
cmpb
sub
lods
and
test
mov
push
adc
and
fstl
push
jae
das
cwtl
mov
lods
push
aas
fistl
add
cmpsb
lock
fcomps
hlt
movsl
scas
mov
stc
fadds
mov
fcmovb
cmpb
pusha
stos
fiadds
fcomip
fwait
imul
movsl
rcrl
repnz
iret
mov
loope
jle
outsb
pushf
nop
adc
sarb
pop
insb
or
xchg
les
xchg
add
add
push
sti
decb
mov
cmp
add
add
incb
adc
mov
out
cmpsl
je
jmp
adc
stc
mov
dec
xorb
push
push
xchg
movsb
pop
mov
jo
mov
jge
inc
ds
aaa
aad
jmp
xchg
repz
jb
xlat
lret
lock
push
mov
mov
push
pushf
sbb
cs
inc
scas
mov
test
lock
icebp
lea
pop
mov
sbb
jbe
dec
push
adcb
fcmovnbe
inc
mov
out
jmp
xchg
xor
mov
fnstcw
pop
or
pop
push
std
sub
sarb
les
js
outsl
pop
out
cmpsb
sbb
loope
pop
nop
fwait
lahf
cmpsl
xchg
mov
sahf
push
movsl
mov
inc
scas
jecxz
jle
mov
sbb
incb
ljmp
cmp
xlat
mov
idivl
pop
in
pop
scas
je
add
add
cmp
xor
hlt
jae
clc
out
cmp
add
add
add
hlt
test
push
xchg
jb
mov
xor
pushf
cmp
and
scas
fstps
lods
ds
sbb
sub
cld
xor
clc
ljmp
jo
jecxz
fsubs
mov
sbb
mov
pop
push
aaa
cmp
mov
xor
movsb
dec
ljmp
ljmp
fisubs
jl
pop
inc
cwtl
pop
and
xchg
ss
movsl
int3
sbb
add
xchg
out
xchg
shlb
or
push
mul
xchg
loop
inc
int
js
fsubrs
int
out
insl
pop
gs
popa
imul
cld
into
inc
sarl
mov
push
inc
xor
push
js
inc
push
insb
std
push
js
lods
imul
mov
sub
add
lcall
push
xor
repz
pop
in
jmp
jno
dec
xchg
std
repnz
cltd
arpl
add
add
cmp
jge
stos
lea
shrb
jns
cmp
add
add
add
push
lods
addl
cmp
pop
fsubrs
in
rcrl
clc
push
mov
stos
xchg
aas
inc
jb
adc
idivb
addl
mov
scas
imul
int3
mov
add
cli
scas
pop
cmp
pop
test
mov
leave
sbb
xor
cmp
lea
in
negl
insb
xchg
mov
cmpsb
or
pop
add
jae
and
addb
sbb
pop
test
xor
das
fwait
xchg
ja
ret
mov
flds
jae
sub
cmp
xchg
jbe
scas
test
loop
stos
cmp
popf
mov
sbb
sub
mov
lahf
lcall
mov
mov
push
push
popf
push
sub
mov
mov
lahf
dec
or
mov
or
push
leave
push
sub
scas
testb
cs
les
cli
ret
movl
add
add
rclb
nop
lcall
cmp
add
add
add
je
int
in
xor
arpl
push
dec
mov
in
mov
std
add
add
or
mov
or
sarb
lret
xor
lods
sti
js
cmpsb
pushf
lods
pusha
and
ljmp
test
jmp
mov
test
push
ja
mov
test
sbb
xor
in
jmp
sbb
push
mov
pop
ret
dec
jae
imul
mov
or
push
adc
jg
icebp
pop
sub
pushf
scas
pop
daa
outsl
rorl
and
imul
xlat
mov
dec
cmp
rorl
xorl
mov
pop
dec
pop
repnz
mov
jecxz
aaa
fistps
cmpsl
cltd
rcl
imul
stc
sbb
jae
outsb
inc
dec
leave
fbstp
push
add
lret
fsub
mov
lret
mov
add
add
jbe
idivl
or
repnz
add
add
xchg
lret
scas
pop
sub
imul
dec
jecxz
pop
out
mull
or
imul
dec
sti
mov
xchg
pop
add
sub
cmp
inc
es
mov
out
fs
mov
loope
fstps
xlat
dec
stos
adc
xchg
out
imul
sub
pop
je
or
mov
pop
cmpsl
pop
scas
sbb
push
clc
lds
jecxz
adc
sbb
push
push
and
lods
xchg
push
mov
jne
sbb
cmp
scas
lret
jle
cmp
outsl
sub
xor
enter
inc
mov
dec
xor
outsl
sub
add
out
push
pushf
pop
and
loop
lock
sti
ret
test
xor
ret
loop
loope
cld
and
outsb
sub
stos
fs
jmp
leave
aas
inc
in
dec
mov
cmp
add
and
mov
outsl
imul
sbb
daa
pop
imul
popa
cmpsl
mov
je
mov
aaa
lret
cmp
and
push
push
mov
lods
mov
xor
xchg
sbb
mov
pop
mov
dec
cmp
jns
shrl
jg
xchg
mov
inc
loop
and
nop
je
enter
dec
dec
mov
int
push
mul
loop
and
add
lods
arpl
xor
popa
aas
cmpb
xor
jae
mov
in
add
or
pop
in
daa
gs
fcmovnb
fistpl
mov
and
cmp
shlb
repz
inc
dec
call
cmpsl
mov
test
sbb
adc
or
xchg
and
inc
rclb
dec
lret
lcall
or
mov
add
add
insb
pop
pushf
scas
fistpll
outsl
paddusw
add
add
add
inc
and
negl
mov
sti
lcall
pop
inc
jl
push
imul
scas
addr16
push
jecxz
xchg
ficompl
sbb
xchg
sbb
lahf
jg
and
rcl
insb
in
cli
sbb
lcall
xchg
jp
in
jp
and
movsb
je
mov
negb
nop
xchg
mov
or
std
pop
push
mov
cmp
pop
enter
test
stc
fs
lds
mov
cmp
popf
addr16
bound
dec
in
or
inc
sub
leave
sub
add
loop
enter
or
lahf
in
sub
fwait
into
cmpsb
push
jp
movsb
sbb
fisttpl
das
dec
push
mov
rcll
cmp
arpl
adc
push
scas
push
or
cmp
mov
jno
into
pop
insl
sub
add
add
cmp
movsb
push
sbb
adc
lea
add
add
add
cmp
insl
push
movsl
shrl
ds
cli
inc
ds
int3
outsb
fwait
cli
loope
jp
pop
dec
int3
adc
mov
test
repnz
popf
cmc
push
insl
hlt
mov
rorb
lcall
pop
pop
jne
icebp
out
aam
mov
pusha
dec
repnz
popa
shl
lds
jne
pop
sub
loopne
loopne
ss
sbb
xorb
jle
stos
adc
sub
dec
xlat
mov
hlt
dec
cmpsb
lods
pusha
out
xor
fiaddl
scas
add
iret
out
push
loop
rcll
sub
push
mov
push
rcr
pop
call
lock
sti
mov
pop
je
jnp
jmp
seto
inc
dec
jns
push
pop
push
imul
es
jge
insl
nop
pop
outsb
sub
out
sub
mov
inc
sbb
inc
fstpt
adc
mov
push
stc
xchg
outsl
lret
mov
out
jmp
hlt
in
addr16
add
add
add
push
xchg
outsb
imul
cs
mov
sub
sbb
imul
jo
inc
jns
push
adcb
push
mov
inc
xor
mov
or
into
lret
and
popf
jae
add
push
mov
lea
mov
sub
cld
fwait
in
out
jecxz
lods
leave
mov
sub
cmp
pop
movl
out
data16
jne
ds
in
xchg
pop
cmp
out
mov
loope
or
movsl
mov
mov
test
aaa
mov
bound
mov
inc
enter
mov
adc
pop
sub
cld
in
mov
aad
shr
sub
rcrl
inc
ret
xor
call
fucomp
daa
mov
and
divl
cmpsl
sbb
rolb
test
sbb
rorl
out
adc
fcoms
and
das
cmp
lods
repz
mov
add
mov
add
add
add
sbb
or
cld
xlat
scas
or
cmp
cmpsl
insl
dec
lods
dec
jle
imul
sbb
es
push
mov
scas
pop
push
or
sahf
sbbl
cwtl
or
loop
loopne
imul
pop
enter
dec
dec
jno
adcb
rol
lods
stos
shlb
xchg
dec
xchg
xlat
push
lock
loope
test
xchg
cwtl
push
mov
rcll
xchg
push
push
xor
mov
hlt
or
or
or
movsl
in
aaa
inc
dec
faddl
cmc
scas
inc
push
cmpsl
les
imul
and
pop
xor
int3
cmp
subl
jns
mov
cmp
lock
or
cld
call
and
mov
stos
cmp
popa
cmc
pop
push
adc
gs
cmp
arpl
push
or
call
sbb
push
pop
pop
pop
mov
sub
in
lock
inc
cltd
aas
daa
push
cld
push
std
jmp
dec
push
xor
inc
add
add
add
movsl
and
mov
xchg
aam
iret
out
pop
fists
xchg
push
in
je
insl
jne
pop
xchg
enter
xchg
sbb
daa
and
popa
gs
xchg
das
arpl
insb
ret
sub
xlat
or
and
lods
pop
xlat
push
add
inc
movsl
mov
dec
jne
clc
popf
lock
shr
adc
pop
or
stos
pushf
adc
or
pop
cld
adc
adcb
pop
in
adc
mov
pop
lock
arpl
outsl
lods
outsl
pop
and
std
mov
add
push
lret
cmp
aaa
fmul
outsl
mov
cld
scas
stos
fsubl
sub
shll
js
cmp
add
xchg
fldenv
inc
jg
ja
fisttps
sti
xchg
in
adc
and
xchg
pop
mov
xchg
ja
les
popf
ss
int
ds
xor
jb
or
aam
mov
add
add
add
sbb
dec
push
out
aad
mov
test
add
add
add
int
int3
mov
das
mov
aad
dec
pop
cmp
sub
lret
jg
sub
adc
or
fdivrl
inc
std
out
test
ret
fwait
jg
xchg
mov
fmull
inc
xchg
icebp
dec
mov
shlb
sar
fsubr
outsb
leave
mov
mov
xlat
dec
and
mov
mov
jae
or
sti
jg
dec
or
aaa
or
pusha
andl
and
outsb
dec
pushf
jmp
out
shrl
movsl
cmp
or
loopne
push
stos
xchg
or
inc
jns
cld
out
divb
mov
sarl
jecxz
inc
into
push
pop
lret
push
js
je
jl
repnz
outsl
pop
xchg
mov
xor
xchg
into
dec
pop
icebp
push
adc
lret
into
push
xor
sub
imul
stos
add
push
mov
or
gs
add
add
add
test
int
xor
xchg
mov
push
jns
xor
push
movsb
lahf
jo
bound
out
out
sub
and
mov
dec
aas
test
mov
dec
fistps
scas
xor
iret
jle
bound
push
rcrb
adc
push
loope
test
je
push
lock
mov
pushf
pop
lret
jmp
lods
adcb
fistl
jae
push
xor
push
and
loope
dec
int
push
xchg
pusha
mov
push
rol
loopne
popa
sub
cli
shll
mov
je
xor
dec
pop
and
mov
loopne
lret
jae
cwtl
add
out
jnp
adc
mov
mov
sarb
ficoms
pop
xlat
cmp
gs
lock
rcrl
aad
cmp
mov
ss
sub
push
andl
rcrb
faddl
mov
arpl
repz
std
push
stos
jmp
inc
mov
ja
jg
xchg
orl
push
addr16
add
add
add
inc
out
ljmp
add
out
pop
add
es
xlat
jl
cmc
ljmp
sbb
pusha
cmp
out
jb
cli
adc
mov
mov
cmp
push
pop
sbb
and
mov
mov
pop
pop
lods
mov
ss
jbe
or
lods
inc
adc
lret
mov
mov
stos
aam
sub
push
or
test
pop
sbb
sub
nop
cmp
xchg
out
push
in
fstpt
je
enter
mov
ja
shl
popf
in
adc
xchg
ja
incb
pop
push
mov
or
fucomp
aas
push
xlat
push
pop
push
or
adc
int
enter
push
sbb
fstpt
stos
sub
test
lahf
scas
mov
into
stos
or
jnp
int
dec
out
and
dec
lret
jmp
imul
aaa
je
adc
iret
addr16
add
add
add
in
imul
push
cmp
outsb
dec
mov
fldcw
es
dec
outsl
xchg
loope
mov
movsl
push
sub
in
push
cmp
scas
pop
inc
nop
pusha
rorl
sar
in
dec
popa
pop
out
sub
mov
call
out
leave
in
aaa
adc
pop
xor
mov
cmp
cmpsl
push
into
imul
addr16
repz
xlat
push
fwait
cmc
inc
xchg
xor
push
mov
xor
movsb
sub
cmp
rclb
pop
jg
sub
out
out
and
xor
jbe
popf
out
mov
lcall
pop
sbb
cmp
push
jae
pop
push
xor
dec
pop
inc
adc
jmp
push
js
pop
daa
sbb
jecxz
mov
or
aad
push
ss
inc
mull
imul
scas
notb
add
lds
cmc
cwtl
xchg
push
sub
adc
addr16
add
add
add
xchg
and
lods
out
jmp
inc
lods
int
mov
test
ljmp
mov
fldenv
mov
inc
lcall
loope
popf
push
fnsave
mov
outsl
inc
shlb
inc
and
inc
mov
jnp
mov
lods
lret
aas
or
sub
cmp
jno
pop
lea
imul
arpl
aam
or
sbb
push
push
imul
neg
test
sbb
loop
cli
fisubrl
dec
mov
lods
outsb
push
mov
mov
mov
inc
push
xchg
scas
rcl
gs
xchg
cmpsb
sub
xchg
mov
loopne
jge
adc
outsb
addr16
cmpsl
clc
inc
je
fistl
es
mov
inc
mov
push
stc
xchg
out
pop
mov
icebp
dec
ss
pop
sub
jns
xor
jg
fldl
add
add
add
mov
int3
add
popf
outsb
ds
sub
xchg
jb
push
loopne
cltd
ret
mov
jno
sahf
push
mov
adc
mov
pop
pop
sbb
insb
add
cs
aad
sahf
loopne
test
xchg
call
jb
inc
mov
cmp
xor
mov
das
dec
fisttpll
jae
fimuls
test
fldcw
inc
pop
inc
add
xor
sti
fdivrs
add
movsl
scas
sti
js
add
stc
jno
inc
test
xchg
xchg
dec
xor
dec
dec
and
mov
imul
sahf
jg
iret
sbb
outsb
push
xchg
movsb
test
loop
rcr
fldcw
mov
jg
push
inc
mov
jno
adcl
push
push
pusha
das
iret
sub
mov
mov
xor
and
lock
int3
xchg
mov
push
icebp
xchg
iret
js
ret
jg
decl
rol
push
shr
jo
dec
add
add
add
jae
xchg
dec
jae
jl
inc
movsb
adc
xor
bound
mov
clc
cwtl
loopne
aaa
mov
in
bound
scas
outsb
xchg
jbe
out
fdivs
mov
das
jo
xchg
mov
nop
lcall
fs
in
aam
imul
mov
mov
mov
lret
mov
lock
adc
mov
orl
xor
in
xchg
mov
mov
cld
sti
mov
stos
dec
xchg
pop
add
addr16
je
cmpsl
out
rcll
sbb
mov
pop
in
lret
jne
out
pop
out
lcall
out
inc
jne
dec
xchg
subl
ret
ret
mov
adc
notl
pop
cli
aas
jbe
adc
adc
cmp
sti
mov
out
inc
and
jle
call
jb
in
fidivrs
nop
xor
adc
mov
out
aad
outsb
scas
addr16
add
add
add
scas
dec
rorb
xchg
data16
scas
mov
inc
scas
pop
mov
push
cmp
pop
rol
lds
xchg
adc
ljmp
xchg
xor
arpl
jg
sbb
mov
in
or
clc
mov
mov
inc
in
or
push
pop
arpl
adc
testb
jae
shlb
in
push
mov
stos
fsubl
stc
mov
decl
rorl
sbb
addb
sub
lret
pop
loop
fsubrl
dec
add
fsubs
cmpsl
xchg
cmp
out
cld
je
clc
fs
jl
lahf
fcom
in
test
fwait
push
mov
jge
xor
testb
fwait
mov
dec
fdiv
dec
cmp
xor
and
pushf
pop
nop
and
pop
ds
sub
cs
xchg
cs
iret
dec
jns
mov
add
hlt
gs
dec
adc
gs
add
add
loop
je
imul
cmpsl
mov
enter
and
or
verr
in
push
sub
lock
dec
or
jmp
cmpsl
rorl
jg
xor
ret
and
leave
mov
mov
cmp
inc
gs
test
xchg
fimull
cltd
vfmadd132pd
jns
lahf
xchg
hlt
add
mov
shlb
iret
and
gs
mov
sub
xchg
fisubs
cmpsl
imul
dec
insb
roll
pop
jmp
loop
adc
cmc
shlb
adc
insl
nop
cli
stos
cmpb
popa
add
xlat
std
int
inc
pusha
std
jle
mov
ret
fimuls
mov
stc
pop
nop
xchg
xchg
mov
repz
in
mov
andl
mov
shr
sbb
loopne
mov
add
add
aas
gs
pop
repnz
dec
add
add
add
cmpsb
les
arpl
sahf
and
out
add
out
mov
xchg
inc
mov
and
mov
testl
fcoml
ror
xchg
mov
mov
les
jmp
outsl
imul
ret
inc
inc
mov
dec
or
jl
cmp
std
in
aas
data16
stos
loope
sahf
mov
add
scas
outsb
andb
lods
lods
je
loope
outsb
loope
jp
andb
out
dec
jge
popa
push
std
push
negl
ret
and
dec
jns
loop
inc
test
mov
adc
sbb
arpl
movsl
or
xchg
cmp
ret
jmp
add
dec
add
jne
insb
sub
idivl
bound
sbb
adc
xor
mov
xor
lret
push
push
rcrl
push
ret
lds
add
add
out
fisttpll
lock
lahf
mov
dec
add
add
add
inc
or
out
mov
xchg
imul
and
jge
xor
fisubs
adc
arpl
rcrl
dec
rolb
adcb
push
sub
adc
xor
test
mov
out
shrl
daa
xor
ljmp
stos
adc
inc
and
cmp
sahf
inc
loope
dec
push
outsl
imul
xor
and
jle
movsl
cmp
push
out
outsl
movsl
and
dec
das
lods
jle
movhps
dec
mov
stc
and
std
nop
loopne
loopne
insl
pop
add
inc
inc
xchg
cs
inc
out
or
lcall
cltd
icebp
les
lock
lahf
sub
xchg
jo
xlat
jle
insl
jae
inc
shr
jno
mov
andl
je
pop
fsubr
data16
cmpsb
insl
xchg
lret
test
pop
dec
ret
add
add
mov
ljmp
add
add
add
cmpsl
mov
or
mov
pop
add
and
imul
or
insb
dec
fmul
out
pop
mov
adc
stos
inc
lods
xchg
inc
and
addb
sbb
mov
les
popf
addl
cmp
pop
or
jmp
xchg
outsb
jns
nop
xor
jne
scas
sub
xor
push
mov
std
cli
pop
popf
fidivrl
mov
xor
rorb
mov
or
into
jo
and
sbb
xchg
les
mov
xchg
ret
and
dec
jg
bnd
test
add
dec
push
outsb
xchg
dec
lods
cltd
cli
rcrl
mov
scas
or
sbb
xchg
sahf
movsl
pop
fistpll
mov
aam
jb
pop
imul
pop
outsb
lods
in
push
pop
mov
aad
inc
inc
jo
push
pop
push
sbb
jmpw
fnstcw
jo
sahf
jb
pushw
addr16
add
add
add
shr
adc
ja
incb
shrl
mov
sub
mov
adcl
cmp
jmp
inc
fisubs
mov
or
mov
pop
test
lahf
call
loop
sub
add
insb
xchg
and
shrl
arpl
lret
gs
sub
xchg
xchg
inc
movsl
mov
sbb
mov
lahf
movsb
gs
cmp
adc
mov
jle
push
mov
imul
push
lret
repz
mov
add
pop
mov
or
repnz
std
idiv
cmpsl
or
outsl
jmp
test
or
push
pop
xchg
dec
inc
in
fldl
jb
in
sub
xor
xchg
decl
adc
shll
dec
js
cmp
inc
push
popf
xchg
dec
mov
gs
fs
mov
out
or
insb
daa
or
push
enter
jae
sub
add
add
imul
out
mov
mov
fsincos
leave
addr16
add
add
add
and
add
aad
xchg
aam
lcall
lea
sub
ja
test
cmp
xchg
xor
popf
shl
mov
or
pop
sbb
jns
jb
or
mov
cmp
sti
clc
jns
outsb
cld
sbb
mov
inc
les
cmp
dec
adc
fistpll
repnz
pop
fwait
mov
pop
jmp
ficomps
or
popf
cmp
jo
fld
inc
and
jp
ret
mov
mov
lahf
rcr
movsl
or
int3
icebp
aaa
sbbl
xchg
hlt
mov
mov
cmp
add
or
or
es
push
imul
xchg
push
adc
cli
pop
sbb
rcrl
rcrl
into
xor
sbb
jo
lret
lret
aaa
pop
pushf
aad
pushf
sbb
and
jge
orb
add
add
add
dec
stc
mov
ljmp
addr16
add
add
add
ljmp
mov
pusha
and
xchg
dec
cltd
ss
stos
fcmove
or
sarb
cmp
out
mov
mov
in
pop
outsb
jg
inc
jp
inc
mov
mov
in
xor
push
shrb
scas
cmc
push
pop
cs
xchg
cwtl
xchg
es
cmp
rclb
les
rcr
int
cmp
mov
and
es
pop
inc
xor
jmp
sbb
jb
fsub
inc
loopne
push
fadds
mov
inc
xchg
dec
xor
lods
sbb
andb
adc
and
jbe
jno
lods
dec
lcall
in
aaa
push
dec
sub
leave
insl
push
inc
test
das
xor
rorb
mov
cmp
sub
add
pusha
bsr
dec
repz
mov
jno
adc
das
sbb
test
popa
jp
push
jb
jge
mov
add
jg
cld
lcall
lahf
addr16
add
add
add
push
cmp
aad
xor
insl
das
jle
add
jae
jb
rclb
sub
jae
sub
adc
sbb
sub
popf
imul
rolb
and
pop
and
mov
mov
lds
aam
dec
rol
adc
sti
sbb
stos
sbb
sbb
xor
in
xor
add
nop
fwait
push
lods
and
aaa
push
push
ret
add
push
fwait
inc
gs
ja
push
in
cltd
leave
rcrb
hlt
adc
popa
add
in
lahf
icebp
or
lea
adc
gs
lods
outsl
ficomps
xor
mov
xchg
adc
imull
and
adc
lret
pushf
repnz
dec
xchg
mov
jle
sti
fsubrs
test
rcr
push
cmc
jle
fcoms
fldt
mov
lahf
lret
orl
pop
or
add
add
xchg
mov
pop
and
sub
add
add
add
out
and
xor
in
je
jmp
push
mov
movsl
mov
inc
adc
push
in
in
xchg
int3
push
or
mov
es
push
mov
cs
enter
jecxz
xchg
lea
cltd
nop
test
pushf
lret
fidivs
xchg
loope
adc
push
adc
dec
inc
lods
mov
insl
jmp
or
cmp
mov
inc
outsl
inc
dec
mov
add
in
pop
lock
push
jno
jne
aaa
adc
mov
inc
cltd
sbb
lcall
inc
sub
xor
xchg
mov
rorl
xchg
inc
test
mov
jno
loope
and
sub
jo
fsubrs
xorb
mov
aas
leave
outsl
sub
nop
xor
or
out
dec
cwtl
and
cmpsl
dec
loop
mov
add
or
mov
and
adc
addr16
add
add
add
lret
push
es
cltd
jmp
rolb
js
cmc
push
inc
jecxz
xchg
fs
sbb
iret
cmpsl
jno
popf
je
mov
mov
aaa
out
xor
mov
cmpsl
jb
jno
in
xlat
jecxz
mov
mov
or
fwait
mov
jle
cmc
mov
stos
rcll
jbe
aam
push
add
pop
int
mov
in
js
cmpsl
push
jge
mov
inc
jnp
or
pop
mov
xchg
mov
es
pop
jg
adc
cmp
jno
mov
push
or
andb
push
movsl
sbb
and
ret
es
fstpl
jecxz
jg
lcall
jecxz
xchg
mov
loope,pt
nop
xor
test
pop
xor
xchg
inc
or
sbbb
test
stos
pop
fnsave
rorb
leave
lret
pop
cwtl
cli
dec
pop
and
add
fsubrl
mov
out
cmp
ret
or
aam
add
addr16
add
add
add
scas
mov
es
ret
insl
push
sub
jmp
cmp
es
lret
cs
jmp
add
mov
aam
sahf
imul
pop
push
sti
pop
push
or
lret
cmc
mov
cs
mov
dec
mov
ja
sbb
ret
lret
dec
mov
push
mov
adc
xchg
jno
mov
jge
lahf
jno
ret
imul
repz
and
iret
cmc
pop
xlat
test
jmp
push
insl
fmul
xor
xlat
jmp
lcall
mov
sub
fistpl
xor
rolb
shll
mov
das
mov
or
inc
test
jns
mov
mov
mov
xor
arpl
aam
mov
test
loop
fwait
adc
inc
jl
adc
jp
daa
dec
cmpsl
pop
fmull
cmc
cli
inc
push
jmp
mov
jns
test
or
push
shll
out
pop
pop
pushf
push
or
add
add
add
and
sbb
xchg
pushf
aaa
cltd
add
sub
cld
cmpsl
inc
jne
dec
int
fsts
sbb
inc
jle
pop
shlb
xor
jno
and
mov
and
and
outsl
and
mov
std
or
cmpsl
aas
xchg
mov
mov
movsb
outsb
mov
in
cmpsl
adc
sahf
add
cmp
dec
loope
clc
jnp
mov
cmp
mov
ss
xchg
out
mov
jge
lock
sub
ret
xor
jmp
adc
sub
sbb
fnstcw
mov
push
and
imul
adc
xlat
push
rcr
pop
dec
rcll
sbb
add
push
in
dec
lods
xor
jno
je
xchg
stos
jge
les
pushl
roll
xor
in
out
lods
xchg
test
dec
aad
cmp
mov
jae
test
add
stos
push
lcall
hlt
mov
sbb
shlb
add
add
add
out
clc
mov
jge
cmp
xor
outsb
push
mov
or
push
sahf
stc
movsb
scas
cltd
jg
xchg
inc
ss
mov
sub
push
push
dec
jo
fs
jg
and
fsubrl
jbe
outsl
push
dec
sub
push
xchg
fisubrs
insb
pop
sub
jmp
pop
sub
fisubs
aaa
test
mov
sub
inc
fidivs
mov
adc
int3
inc
sbb
sub
xchg
insb
dec
lret
jmp
sub
clc
call
mov
cli
out
je
out
frstor
sub
fisttps
ror
insb
imul
cmp
faddl
pop
clc
add
int
arpl
outsb
dec
adc
adc
push
aad
insb
dec
stos
mov
fsubs
and
icebp
xchg
add
add
out
mov
pop
mov
add
bound
imul
ret
addr16
add
add
add
mov
sbb
adc
mov
jne
cwtl
std
lea
xchg
inc
mov
xchg
loope
cltd
roll
or
lods
sub
sub
mov
imul
push
clc
and
and
and
mov
lds
sti
pop
sub
jnp
insl
shrl
inc
jg
loopne
pop
jle
loope
adc
mov
insb
je
scas
pop
mov
sbb
jl
sarb
ret
add
cltd
in
dec
push
push
dec
cmpsb
push
out
int
xchg
inc
int3
push
dec
in
mov
loop
sub
fsub
xchg
mov
mov
rcrl
mov
pop
loope
popa
shrl
les
push
cmpsb
mov
cmp
out
loop
flds
mov
mov
stos
packsswb
push
popa
xchg
insb
mov
fnsave
pushf
jae
fwait
cmp
stos
sarb
addr16
add
add
add
pop
jg
mov
mov
imul
inc
dec
inc
push
outsb
aas
leave
lods
push
ret
ds
ss
addr16
adc
outsb
stc
lock
bound
jns
in
iret
test
fldcw
mov
loopne
sahf
cmp
or
arpl
mov
jg
and
mov
repz
and
dec
outsb
shl
jge
rcll
push
mov
push
mov
rol
stos
lret
cmp
mov
xor
xchg
jmp
dec
dec
fs
add
mov
xor
stos
cmp
bound
pop
fidivs
leave
push
test
iret
shll
sti
push
and
add
mov
sahf
and
addr16
cs
fwait
or
in
into
sbb
aam
dec
xor
or
mov
addr16
outsb
lahf
or
inc
icebp
mov
mov
xchg
push
or
sbb
popa
jb
inc
push
clc
mov
and
hlt
sahf
loop
cmp
add
add
add
lods
mov
pop
jle
pop
lret
aad
shll
popf
jns
jp
inc
pusha
mov
pop
adc
mov
cmp
shll
mov
sub
and
cmp
jns
aad
sbb
mov
inc
sahf
xor
or
mov
gs
jge
sarb
ss
xor
mov
inc
pop
das
push
inc
popf
orb
ss
jne
stos
movsb
lock
cmp
or
rcl
clc
cmp
cmp
push
inc
dec
mov
mov
or
jecxz
mov
xor
std
cmp
loop
scas
aas
scas
aam
sbb
pop
lock
notl
outsl
mov
rcll
push
gs
fistpl
fsubrl
mov
or
mov
loopne
roll
jns
cmp
add
test
xchg
add
shr
xchg
scas
xchg
push
adc
out
mov
xchg
cmc
jb
pop
add
add
add
mov
mov
cmp
mov
push
jno
arpl
push
lcall
add
out
mov
xor
js
jae
in
adc
aad
loop
ret
rcrl
je
cmp
in
arpl
call
cwtl
jbe
sub
repz
push
pusha
into
dec
jne
test
jle
mov
dec
pop
cltd
enter
push
popa
cmp
pop
call
jecxz
scas
outsb
out
pop
lods
in
stc
pop
loope
mov
jo
push
ds
mov
lds
xor
dec
insl
cs
loope
push
cmp
inc
imul
loop
lods
dec
mov
jge
outsl
xorl
or
shlb
inc
movsl
je
ja
fwait
xchg
and
dec
mov
jp
ljmp
out
adc
add
test
or
fdivs
mov
pop
add
add
add
mov
jle
xchg
jne
pusha
push
ss
lea
xor
jecxz
cmp
jnp
cmp
imull
fisubrl
imul
mov
stc
push
and
insb
push
mov
pop
mov
ret
fiaddl
cmp
adc
sub
mov
or
ljmp
push
jmp
jge
add
fistpll
sarb
cli
or
xor
scas
mov
dec
mov
mov
sti
test
imul
fwait
pop
push
xchg
sahf
ret
fsubl
aam
mov
dec
mov
stos
sbb
cmpsl
jae
test
adc
scas
mov
outsb
je
push
imul
dec
in
enter
xchg
inc
dec
stos
add
pop
fwait
xchg
shlb
fidivrs
fstp
mov
sub
mov
or
je
mov
or
lahf
mov
and
das
cmp
pusha
arpl
addr16
add
add
add
cmp
and
orb
jmp
movsb
rsm
xor
pop
out
movsl
aad
popa
sti
lea
in
lock
push
into
das
xlat
les
xchg
jmp
popf
mov
int3
ds
testb
aam
jp
hlt
sub
xchg
movsb
mov
ja
dec
inc
pop
shrl
lret
mov
pop
push
hlt
cli
dec
lods
loope
sahf
cmp
push
mov
data16
das
repz
sbb
rolb
aas
shlb
mov
push
mov
in
mov
pusha
or
stc
movsb
cmpsb
jle
pop
pusha
aas
jg
mov
les
stos
inc
xor
addl
mov
ret
andb
add
push
enter
jb
or
pop
jo
scas
pop
insb
outsl
pop
subl
jmp
jno
sti
gs
sbbl
cmp
insb
pop
fsubl
mov
ja
mov
aad
mov
add
add
and
lret
mov
out
push
cmp
jl
addl
repz
loop
add
sbb
fsubrs
jno
fldt
ret
cmp
leave
stc
mov
leave
sahf
cmp
xchg
cmp
pushf
adc
cwtl
adc
dec
inc
repnz
popf
mov
subb
fwait
push
jg
and
sub
aaa
add
mov
arpl
subb
jge
xor
arpl
or
es
mov
adc
mov
cmc
push
shlb
test
jnp
testl
fisubs
daa
mov
adc
sbb
shlb
sbb
dec
das
push
ja
arpl
test
mov
mov
pop
add
imul
aad
test
cmp
add
add
xor
xlat
out
cld
dec
stc
push
addr16
add
add
add
jns
push
xorb
sbb
xchg
enter
inc
cmp
in
bound
lods
aaa
jo
dec
negl
stc
sbb
or
xor
test
enter
adc
mov
scas
pop
sub
sti
push
sbb
inc
mov
test
inc
dec
pop
or
pusha
fwait
mov
bound
pop
sahf
scas
push
push
imul
jle
cmp
pop
arpl
aas
ret
shrb
mov
push
nop
repnz
and
call
xchg
cltd
jne
add
dec
mov
call
mov
mov
jne
call
seta
mov
icebp
pop
xchg
out
test
int3
call
test
lret
repnz
xor
shll
das
jmp
fs
lds
pushf
and
sbb
mov
mov
mov
in
data16
addr16
add
add
add
xor
bound
repz
sbb
test
cmp
shl
aaa
outsb
jecxz
xor
mov
mov
popf
or
testb
lret
sub
sbb
push
adc
ficomps
std
jno
cmp
sub
into
cmc
sbb
mov
loope
jmp
adc
and
mov
scas
xchg
cmpsl
jmp
ret
int
test
xchg
add
outsb
in
mov
jecxz
push
push
xchg
into
jle
mov
xchg
jo
testb
xchg
stos
mov
outsl
sbb
std
mov
sub
outsb
add
flds
mov
mov
repz
fimuls
sbb
fwait
add
ljmp
adc
inc
inc
mov
popf
xchg
fnstenv
cmp
add
rclb
dec
daa
cmp
mov
ficompl
push
inc
xor
mov
add
add
push
into
push
push
inc
lahf
mov
addr16
add
add
add
shll
in
or
mov
loope
fstl
inc
andl
inc
iret
adc
or
cmp
arpl
push
inc
xor
jmp
addb
pop
data16
inc
lret
scas
rorb
jo
les
jno
loope
mov
push
sub
xor
gs
cltd
or
cs
inc
push
push
dec
sub
pop
andl
gs
push
imul
and
mov
aaa
mov
push
pop
pop
mov
xor
jecxz
add
ds
pop
mov
jnp
sub
rorl
subb
pop
fadds
out
mov
pop
pop
lock
lods
sub
and
and
shl
and
cwtl
repz
sub
hlt
lahf
test
out
jp
pop
popf
idivl
ljmp
jg
push
mov
dec
cmp
add
add
xchg
inc
shl
xlat
mov
jg
or
bound
add
add
add
mov
mov
pop
fdivs
mov
xor
test
jbe
in
pop
dec
ret
loopne
xor
mov
fiadds
jb
cmpsl
sbb
fiadds
test
orb
jg
push
je
clc
mov
insb
in
in
cmp
imul
cmpsb
les
pop
outsl
jl
ss
loope
cmp
pop
ffree
ja
jb
jbe
pop
inc
mov
shll
xor
mov
je
in
fidivl
ficomps
xor
imul
ss
push
sub
je
push
out
mov
sub
shl
cs
pop
cld
sbb
sub
ljmp
mov
jecxz
cmpsl
dec
ss
mov
lret
xor
in
mov
xor
mov
ret
jne
sbb
lcall
or
add
add
lahf
pop
cmpsl
jne
mov
sbbl
add
add
mov
jmp
cmc
dec
xor
push
mov
js
add
fcomi
jbe
cmp
out
adc
push
pushf
imul
imul
mov
shl
mov
mov
fcoml
fistpll
cmp
jbe
mov
cmc
add
into
outsb
divb
inc
decb
outsb
jecxz
dec
pop
push
mov
and
out
push
ds
xchg
adc
sub
pusha
clc
mov
jb
pushf
push
out
fadds
iret
mov
mov
or
mov
ljmp
cmpsb
mov
jno
outsb
repz
jnp
loope
inc
adc
sbb
dec
inc
mov
pop
je
outsb
sub
mov
into
jle
and
xchg
push
out
mov
lds
mov
es
mov
fcompl
mov
ror
sahf
pop
testl
mov
add
add
add
cmp
push
push
ds
insl
dec
in
inc
int3
lods
lret
aas
dec
pop
and
repz
xor
fstpt
in
adc
inc
sbb
mov
push
push
add
jecxz
int
insl
add
loopne
dec
jnp
js
cmpsl
cmpsb
imul
shlb
jecxz
sarb
stos
or
out
mov
add
mov
scas
out
jo
adc
cmp
mov
js
cmc
lds
mov
ds
mov
jmp
fnstsw
inc
inc
or
leave
sbb
pop
push
imul
dec
out
stos
leave
in
mov
cmp
fistl
mov
ja
int
outsb
cmp
jbe
int
jle
jecxz
jmp
pop
sbb
pop
cwtl
dec
das
aaa
pop
sub
shll
inc
inc
pop
mov
fstps
das
jb
add
add
add
mov
jmp
insb
popl
rorb
aad
dec
aaa
ljmp
outsb
mov
fcomp
jmp
into
rolb
lcall
subb
hlt
pop
sbb
imul
or
sub
xchg
bound
loop
push
out
stc
sub
xor
mov
rclb
add
jne
pop
mov
cmpsb
adc
cwtl
xchg
sub
imul
clc
outsb
cmp
sub
push
ja
inc
loop
popf
fstp
daa
test
mov
cmp
mov
fiadds
xchg
and
adcb
ja
mov
mov
adcb
push
jg
xlat
xor
pop
imul
adc
mov
cs
lods
scas
in
push
daa
sbb
pop
inc
mov
mov
in
pop
mov
or
inc
lds
xor
adc
ret
xor
add
repnz
movsb
jle
arpl
pop
imul
add
add
add
mov
sub
jnp
inc
jnp
and
aas
cmpsb
mov
cmpsb
movsb
es
jmp
pop
cli
push
das
test
or
addr16
arpl
movsl
mov
push
or
in
inc
aam
bound
add
dec
arpl
out
daa
imul
dec
add
pusha
and
lcall
jbe
inc
and
add
stc
sub
xchg
pop
mov
push
adc
and
add
fs
lret
out
mov
hlt
inc
pop
xchg
push
sbb
data16
call
pop
sti
mov
inc
or
pop
fisttps
cmp
cmpsb
loopne
scas
mov
mov
js
out
adc
outsl
ret
xor
adc
sbb
sbb
ret
mov
jg
fstl
or
enter
mull
fs
dec
xor
rcr
idivl
incl
mov
stos
sub
stos
out
jmp
sub
lcall
add
add
add
repz
lds
imul
icebp
je
sti
lcall
roll
cmp
jns
sub
stos
add
mov
andb
inc
push
test
cmp
hlt
sbb
inc
push
jmp
or
fs
jecxz
or
dec
in
mov
jo
or
adc
pop
lahf
gs
sbb
dec
sub
stos
addl
loope
and
jnp
lods
or
or
mov
or
push
inc
insl
mov
and
pushf
rcll
mov
sbb
roll
movsl
pop
dec
add
jno
adc
aas
cmp
pop
add
fsubl
jp
push
in
mov
xchg
inc
mov
js
shll
clc
mov
mov
sbb
test
mov
push
pushf
int3
test
pop
cmpb
ja
fcmovbe
adc
shll
fnstenv
sahf
adc
cmp
add
add
fnstsw
pop
outsl
out
sbb
into
cli
clc
sbb
int3
les
sarb
mov
inc
in
xlat
sbb
xor
lahf
fdivl
adc
sbb
mov
lods
test
mov
lcall
lret
loopne
push
sub
cmp
xor
mov
fisttpl
sbb
mov
mov
add
pop
int
mov
mov
inc
xor
inc
jno
loop
add
stos
xchg
aam
and
cmp
in
iret
pop
inc
out
adc
mov
xchg
jnp
sub
ds
jne
hlt
mov
mov
fidivs
mov
jge
inc
shll
aas
pop
dec
xor
into
popf
sbb
push
xor
xchg
mov
cmpsl
sub
pop
test
test
out
mov
lret
out
push
jno
mov
mov
faddl
add
add
cld
je
jbe
jns
sbb
fdivrs
and
add
add
add
fcoms
fcoml
jle
adc
inc
inc
sub
aaa
in
loopne
ficoms
jno
pop
push
out
nop
push
test
pushf
ret
stos
test
jo
imul
cmp
pushf
dec
jge
jmp
loopne
bndldx
popf
testl
lret
leave
ja
xchg
outsl
sub
enter
or
mov
xchg
pop
lock
outsl
outsl
ret
scas
dec
push
dec
rcrl
pop
lahf
mov
testl
xchg
mov
mov
xchg
cmc
lahf
fwait
lds
xlat
sub
aas
jmp
xorl
push
ret
scas
mov
loop
push
lock
push
in
push
les
or
push
adc
repnz
pop
and
mov
dec
in
pushf
jnp
mov
bound
xchg
jecxz
in
stos
push
pushf
sti
cwtl
ljmp
push
in
dec
cmp
push
cltd
jmp
fildl
or
push
add
add
add
jnp
inc
sahf
mov
pop
notl
aaa
add
mov
cld
movsb
clc
pop
xchg
adc
push
jecxz
sbb
int3
outsb
std
xchg
jl
hlt
dec
aad
icebp
lret
stc
sub
and
lahf
rorl
mov
loope
xor
xor
fmull
cmc
into
push
out
lods
push
adc
dec
bnd
or
shll
mov
xor
and
and
pop
jp
sub
or
xlat
imul
jns
fdivr
fstps
jge
jo
jecxz
clc
in
jmp
cwtl
pop
sub
adc
insl
data16
sbb
test
inc
mov
into
dec
push
mov
jno
jno
rcl
inc
hlt
shr
mov
sbb
sbb
push
in
and
addr16
bound
repz
call
inc
cmc
ljmp
add
mov
mov
push
jg
dec
xchg
dec
mov
mov
imul
add
add
adc
test
mov
fsubs
icebp
imul
mov
adc
mov
pop
xchg
adc
jb
sbb
aaa
pop
mov
nop
mov
aas
scas
js
mov
inc
test
pop
stos
daa
mov
lcall
pushf
push
sbb
cmp
shll
jge
and
insb
arpl
enter
or
xchg
sub
pop
mov
add
push
xchg
sub
hlt
mov
pusha
or
ja
hlt
ljmp
xchg
and
mov
scas
js
movsb
ror
fbld
mov
fs
iret
stc
xchg
mov
push
das
inc
push
push
jno
out
dec
mov
sbb
orb
fildll
and
or
testb
outsl
cmpsb
mov
movsl
push
xchg
scas
scas
jg
xchg
test
xor
or
add
iret
mov
fucomip
push
insb
xor
fmuls
adc
add
add
add
fwait
sbb
bound
cli
push
mov
fisttps
adc
leave
mov
and
fidivl
pop
add
lahf
mov
push
lods
cmp
aaa
sti
daa
or
jecxz
dec
push
or
dec
std
cmp
cmp
pop
push
inc
add
shr
dec
adc
mov
in
in
les
popf
fimull
loop
or
ret
jp
cmpsl
fldt
mov
sub
out
adc
ficoms
mov
fstps
jne
insb
inc
adc
data16
push
aas
jno
sub
jns
jo
addl
das
mov
fdiv
sti
shl
out
sahf
xor
js
xlat
repnz
leave
push
test
sar
jbe
les
cmp
movsb
aam
sbb
mov
push
bound
nop
jno
inc
or
rcll
pop
loop
jns
mov
out
leave
inc
sub
cmp
imul
dec
out
iret
jmp
aas
in
push
popw
jecxz
jp
insl
add
add
add
gs
into
lods
adc
sub
leave
into
fiaddl
push
jl
test
pushf
movsl
dec
fidivl
cmp
in
and
xchg
mov
xchg
out
ja
mov
repnz
adc
xor
xor
dec
xor
fdivrl
mov
jns
mov
xchg
xor
xchg
cmp
aas
lds
sbb
fidivl
in
push
jno
rorb
in
test
mov
aam
push
inc
mov
jno
sub
or
ljmp
js
scas
add
xchg
dec
mov
adc
pop
inc
xchg
sbb
aaa
mov
mov
loop
jo
shrl
scas
cmp
xchg
imul
std
adc
fs
xchg
movsb
xchg
ficomps
sub
scas
int
push
ret
jnp
add
cmp
inc
xchg
sub
add
add
std
cmpsb
pop
dec
sub
sub
add
add
add
imul
adc
and
or
fcmovnbe
xor
jbe
je
mov
dec
cmovge
xor
sub
push
mov
mov
cli
push
outsl
aas
push
mov
jl
pusha
sub
arpl
je
mov
into
xchg
mov
addr16
fidivrl
jl
cmpsb
xor
movsl
push
inc
adc
sbb
and
cmp
aaa
vmread
and
in
mov
pusha
adc
jnp
pusha
mov
test
inc
sub
mov
out
shll
int
xchg
js
xchg
in
insl
inc
pushf
popf
aad
jne
repnz
aad
div
ret
add
mov
jo
dec
cltd
xlat
int3
scas
inc
test
lcall
sub
mov
xor
sbb
sub
cltd
pop
jb
pop
sub
cld
mov
lods
stc
sbb
cmpb
push
dec
xor
pushf
sub
test
add
add
neg
std
sub
dec
addb
push
outsl
add
add
add
pop
mov
add
push
adc
adc
push
sbb
push
les
adc
push
mov
iret
dec
jno
push
rcll
pop
pop
fisubrs
js
or
mov
test
fnstsw
test
push
jno
out
or
icebp
pop
cmp
pop
mov
lret
push
lds
mov
add
pop
in
add
add
mov
dec
mov
mov
add
stos
int3
mov
cld
mov
add
xor
pop
scas
hlt
adc
mov
pop
decb
pop
popa
aas
sub
idiv
push
fsubrl
outsb
sahf
mov
xor
mov
in
jno
dec
add
rol
and
mov
cmc
je
jmp
gs
fwait
es
sarb
xor
test
pop
sbb
pop
add
mov
fadds
push
subb
in
push
mov
fsubrp
int3
pop
addr16
add
add
add
jb
call
adc
push
pop
shr
sahf
jae
mov
enter
or
sbb
les
cmp
ficoml
cli
leave
jns
pop
and
push
stos
xor
fwait
dec
jmp
test
mov
adc
roll
dec
sub
sub
subb
pop
icebp
stc
xchg
pop
sbb
add
test
cmpsl
lock
call
subb
ret
insb
xchg
xor
out
mov
movsl
mov
sbb
cld
sbb
out
xchg
hlt
xor
pop
push
add
push
bound
sbb
add
inc
aad
sub
subb
xchg
in
inc
cmp
in
test
fdivl
adc
add
andb
data16
jle
mov
mov
mov
fstl
mov
mov
or
jecxz
das
fsubrs
add
ja
out
sbb
subl
add
add
xor
lods
jo
psadbw
repz
cmpsl
lea
mov
sub
pop
and
cwtl
push
in
aam
inc
ljmp
sbb
into
test
inc
push
lock
push
cli
in
imul
lods
insl
jp
add
xor
mov
pop
mov
cmp
dec
or
test
dec
cltd
adc
stos
sarb
pop
push
test
pop
or
push
xor
cmp
jge
xchg
fnstenv
divl
ret
xor
int
cli
arpl
inc
int
stos
pop
cmp
pop
pop
mov
repz
add
pop
lcall
icebp
sbb
add
push
enter
or
sub
int3
js
mov
cmp
gs
mov
scas
data16
sbb
ret
movsb
cmc
fxch
movsb
movsl
int
jno
push
dec
sete
daa
sub
ja
mov
fldcw
add
add
add
sbb
inc
cmp
insb
iret
in
popaw
mov
jl
lcall
loopne
outsb
and
sbb
lahf
lcall
pop
xchg
dec
andl
pop
cwtl
shll
sbb
fwait
jne
bswap
xor
jbe
xor
pop
sbb
add
sbb
sbb
popf
inc
fstpt
les
pop
outsl
push
test
hlt
int
in
mov
and
movsb
or
mov
js
icebp
das
inc
and
lods
popf
scas
xchg
add
inc
cltd
add
add
fldenv
xchg
push
cld
mov
loope
mov
insl
cmp
fldcw
loopne
mov
lcall
lahf
daa
in
test
sbb
jg
dec
dec
pop
test
inc
fdivrs
jl
inc
jecxz
dec
ja
xor
js
movsl
adc
dec
or
mov
js
in
inc
sub
xchg
adc
fisubrl
stc
adc
add
add
cmp
jnp
outsl
cmpsb
loopne
hlt
pop
scas
addr16
add
add
add
test
push
nop
or
pop
sbb
ds
out
jno
je
inc
cmp
sti
inc
in
fimuls
or
mov
xor
jae
add
lock
mov
inc
adc
mov
test
rcrl
push
pop
and
adc
psadbw
imul
clc
xchg
mov
mov
jbe
cmp
xor
cmp
test
mov
ficomps
rcll
sti
in
push
sub
fdivs
outsl
data16
adc
icebp
cmpsb
xlat
inc
jns
leave
jnp
lret
jns
test
inc
jmp
fnsave
inc
xchg
dec
orb
xor
mov
cmp
pusha
sub
adc
sbb
mov
mov
call
pop
idivb
in
jp
jle
lahf
cmp
cli
loop
xchg
push
mov
cli
xchg
jle
push
je
pop
jge
frstor
add
add
add
aam
mov
ret
ja
stos
dec
insb
jo
xor
hlt
pop
and
and
fisubl
inc
icebp
jmp
iret
or
cmp
or
fwait
les
es
unpcklps
cmp
push
pushf
push
inc
sub
popa
pop
shlb
rcr
in
cld
pop
inc
ds
popf
cmp
pop
xor
js
jnp
xor
xlat
orl
xchg
add
mov
push
mov
bound
call
push
add
sbb
scas
mov
xchg
or
or
cltd
pop
add
sar
sub
aam
xor
dec
mov
fcoms
inc
sbb
aad
rcrl
pop
movsl
mov
daa
pop
int
add
xchg
mov
test
mov
xor
loope
enter
scas
out
push
std
lds
pusha
orl
sbb
add
fwait
jnp
aad
sbb
add
addr16
add
add
add
icebp
ds
mov
stc
push
cmp
xlat
mov
jne
clc
into
jl
fisttpl
add
icebp
rcrb
rorb
fdecstp
jge
out
sub
outsb
pop
nop
jbe
sub
les
mov
jo
xchg
call
xor
adc
xchg
push
mov
fmuls
stos
sahf
out
testl
cli
xchg
add
xlat
mov
cld
std
je
les
inc
rcrl
xchg
xlat
popa
ss
cmp
loope
add
adc
cvtdq2ps
xor
outsb
test
xor
and
push
cwtl
sahf
sbb
sti
mov
jl
pop
dec
neg
rorl
fidivs
in
mov
push
gs
lret
mov
push
inc
dec
xchg
aas
leave
push
sbb
testl
orl
jbe
or
mov
std
mov
sub
jbe
add
add
add
xchg
and
cmc
fimuls
hlt
pop
adc
mov
xchg
fimuls
shlb
jb
jno
dec
mov
imul
fs
fstpl
inc
sub
mov
dec
xchg
xchg
push
and
push
js
popf
adc
mov
inc
imul
lods
into
pop
push
sbb
ret
les
mov
vmovlps
movsb
lea
fadds
loope
shll
jo
cmp
mov
mov
and
sarl
sub
dec
hlt
xchg
movsb
xlat
push
add
les
scas
std
xor
mov
jnp
js
gs
push
adc
popa
pop
cmp
cmpsb
shrl
mov
push
xor
out
push
sub
imul
inc
dec
jp
or
mov
hlt
fs
movsl
icebp
arpl
push
xchg
adcl
xchg
fisttps
mov
je,pt
ja
add
add
add
adc
add
dec
repnz
loop
fstps
mov
cmp
xlat
lods
int3
sub
rcrl
leave
mov
jle
mov
push
pop
test
lcall
mov
sub
cmpsl
mov
cmc
sbb
or
lods
jnp
mov
cld
and
in
xchg
dec
int
dec
xchg
fstl
sbb
adc
inc
and
imul
icebp
testw
sub
lods
out
ja
or
cwtl
mov
leave
cmp
pop
insl
and
pop
ja
or
pop
adc
or
lcall
xchg
rolb
stos
sbb
cmpsl
iret
jns
fs
mov
push
adc
and
push
cmpsl
imulb
xchg
mov
lock
fisubrl
mov
jbe
jg
fcmovnu
insb
jno
or
int
jnp
add
out
add
inc
in
mov
mov
out
sub
sbb
js
add
add
add
xchg
std
lods
sarb
jmp
rcr
jnp
jnp
aam
push
xor
test
aaa
rolb
add
cs
dec
mov
mov
xor
mov
scas
adc
test
or
push
in
xor
pop
ret
jmp
outsl
scas
cmpsb
insb
mov
and
enter
push
aas
enter
shll
jmp
or
sbb
mov
ret
and
sbbb
and
add
and
sbb
ficompl
jbe
lods
pop
stos
out
in
xor
jge
cmp
sbb
push
in
sub
and
mov
cli
mov
pushf
popf
xor
movsl
and
mov
test
cmp
and
dec
sbb
hlt
aaa
pop
pop
adc
jbe
xlat
cmp
cli
int
mov
push
inc
jns
divl
in
sub
addr16
add
add
add
push
add
cli
add
cmovl
push
call
inc
jl
fisttpll
lret
data16
sti
subb
iret
mov
mov
mov
dec
dec
or
pop
push
subb
pop
pushf
ret
push
cmpsl
into
mov
not
sbb
imull
cltd
dec
xchg
xchg
testb
push
fnstcw
outsl
mov
inc
pusha
and
es
push
mov
dec
dec
movsb
pop
xchg
hlt
inc
out
fnstenv
pusha
sbb
rcr
cmp
gs
add
cli
or
xor
cmp
hlt
fwait
dec
pop
and
stos
repnz
inc
xchg
xchg
dec
add
cmp
clc
aaa
pop
push
int
xor
loope
add
popa
ret
loopne
dec
insb
int
ds
stc
jbe
mov
loop
adc
push
in
dec
or
xchg
pop
in
test
sub
jp
ror
cli
cmp
das
std
mov
clc
fisubs
mov
mov
xor
addr16
add
add
add
push
inc
push
mov
add
in
in
or
xlat
in
jnp
add
stos
and
pop
push
sub
sbb
ds
pop
or
fsubp
loope
orb
imul
shrb
insb
fistpl
pop
mov
pushf
cltd
inc
insb
dec
pushf
fsubrs
cmpsb
stos
in
in
sub
sub
testl
sub
pop
ss
push
mov
pop
jae
je
dec
cmc
dec
add
ds
out
push
pop
xorl
mov
sub
inc
jae
xor
and
in
pop
jle
in
loope
jl
je
jecxz
imul
mov
movsb
cmp
icebp
call
ret
dec
fistpll
orb
icebp
pop
inc
imul
add
andl
xchg
iret
add
mov
negb
mov
add
shlb
mov
add
jnp
add
add
add
movsb
cltd
aad
jmp
adc
push
out
mov
cmpb
pop
stos
xchg
mov
shrl
inc
ds
pop
mov
mov
mov
fildll
cmp
mov
mov
inc
fld
cmpsb
test
xchg
rcrb
fucomp
andl
in
mov
mov
les
xchg
pop
jmp
int3
fdivrs
sub
mov
cmpsb
mov
inc
mov
fidivrl
adc
in
jo
add
test
fcompl
jo
sbb
and
sbb
fisubrs
notb
xchg
out
scas
scas
jp
sbb
sbb
mov
pop
mov
adc
insl
xor
js
adc
jmp
mov
pop
popf
inc
ljmp
lret
or
cmp
repnz
stos
inc
int3
in
lock
dec
push
orb
ljmp
jl
pop
inc
outsl
addr16
add
add
add
sub
adc
push
sbb
jns
inc
shrl
cmc
in
inc
pop
ljmp
push
arpl
push
ds
xchg
jg
add
add
leave
cmp
es
cmp
ljmp
add
test
gs
ljmp
int
aas
pushf
iret
adc
test
or
fisubl
mov
cmpsb
scas
mov
push
mov
scas
test
cmp
mov
sub
jno
mov
xchg
fwait
cli
push
rclb
les
adc
ret
inc
mov
inc
lahf
jo
cmp
fcomps
push
in
aad
or
iret
cmp
xchg
xchg
pop
mov
outsb
imul
pop
std
cltd
jae
ljmp
mov
inc
imul
push
loope
inc
push
xor
xor
psubsw
jno
xchg
loope
repnz
cmpsl
sbb
mov
das
xchg
int3
call
paddsb
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
dec
daa
xchg
lock
pop
push
mov
sbb
out
in
xor
stos
data16
imul
sbb
xchg
ljmp
data16
xor
jno
movsl
movsl
jnp
xchg
js
hlt
ret
mov
push
inc
dec
cmp
rorl
xchg
dec
sub
ljmp
out
ret
pop
lahf
cmp
pop
cmpsb
sbb
test
aaa
jnp
movsl
stos
add
jnp
cmp
shlb
cmp
dec
add
lock
sbb
subl
pop
stc
push
mov
fstpt
inc
lret
icebp
cmpsb
sub
mov
in
ficomps
mov
lcall
mov
sub
xchg
loope
sub
sub
push
dec
rcr
jne
sub
mov
mov
jp
adc
test
rorl
stc
lods
movsb
inc
add
lcall
add
mov
cmpsb
push
sbb
lea
jle
add
add
add
outsl
lret
mov
and
sbb
mov
in
mov
adc
mov
cmp
leave
pavgw
mov
test
scas
notb
lods
fdiv
int3
jnp
jno
scas
or
xorl
imul
fstpl
sub
int3
sub
fcomp
adc
sarl
decb
inc
out
sbb
leave
mov
inc
scas
inc
nop
iret
inc
movsl
shr
push
test
cwtl
mov
into
scas
mov
in
hlt
xchg
jmp
jecxz
dec
fwait
lea
adc
dec
mov
movsl
xchg
mov
adc
sbb
and
ss
cltd
jno
jle
cs
in
out
lret
sbb
push
pusha
mov
xchg
and
and
outsb
rolb
push
cmpsl
adc
stos
xlat
aad
imulb
cld
jae
lahf
xchg
dec
push
js
mov
add
add
cmp
cli
mov
das
gs
out
addr16
add
add
add
push
xor
xor
aas
outsl
add
mov
icebp
cmpsb
or
repz
mov
sub
in
inc
jno
jmp
rcrb
xor
imul
sbb
mov
loop
lret
push
jle
mov
into
pop
pop
orl
outsb
jp
sbb
lods
ret
inc
cs
mov
aas
jns
fsubrl
and
cmp
les
lds
adc
stos
jmp
push
dec
mov
bnd
cltd
repz
mov
movsl
lods
aas
je
pop
dec
sub
xor
cmpsb
mov
cli
xchg
mov
push
xchg
mov
add
pop
xadd
mov
icebp
cmc
add
cs
cmp
adc
hlt
xlat
xor
jmp
mov
xorl
add
std
test
lcall
adc
or
addb
add
add
mov
pusha
cli
mov
sbb
xchg
les
imul
loopne
scas
jmp
aas
pop
mov
mov
push
add
pushf
data16
mov
mov
mov
push
dec
movsl
xor
fmuls
testb
and
mov
jmp
mov
lea
pop
push
dec
fldl
pop
add
js
add
mov
and
nop
jecxz
add
add
out
rcr
rorl
and
mov
jno
cwtl
pop
inc
loopne
pusha
cmp
cmp
or
and
cmpsb
insb
ficompl
adc
out
push
jmp
mov
jmp
test
loop
mov
jmp
add
test
bound
movsb
inc
mov
nop
mov
les
inc
idivl
imul
pop
incl
lcall
push
hlt
int
sti
gs
dec
andb
testb
daa
mov
pop
addl
add
insl
dec
adcl
mov
push
shr
arpl
adc
out
jecxz
add
cltd
sbb
or
test
nop
das
std
jno
or
imul
mov
shrb
lods
inc
pusha
add
pushf
mov
mov
cmp
add
or
pushf
sahf
out
or
aad
lods
push
sarl
mov
and
adc
mov
add
mov
mov
fisttpl
mov
lods
in
xor
inc
cmc
jg
pop
sahf
jecxz
jno,pn
jl
iret
rolb
mov
dec
sarl
add
lret
mov
mov
xor
mov
adc
je
js
in
imul
or
jmp
aad
mov
sahf
rol
sbb
cmp
and
mov
inc
sbbl
popf
jb
lods
or
lock
or
outsl
scas
outsl
inc
scas
lcall
adc
sbb
arpl
add
add
add
pop
mov
adc
pushf
mov
sub
mov
pop
mov
pushf
in
stos
adc
mov
adc
imul
outsl
stos
stos
sti
xor
mov
ss
sbb
in
xchg
lcall
cmpsb
pop
mov
int
ret
imul
lods
push
jmp
adc
jno
dec
lea
loopne
mov
rcrl
repz
popf
cmc
mov
pop
and
es
cmp
cld
arpl
out
or
adc
insl
dec
int3
adc
xchg
push
popf
and
push
cmp
and
jns
lret
jl
jno
inc
mov
das
inc
mov
dec
in
push
add
int3
ljmp
orb
aas
push
mov
mov
adc
pop
je
pop
out
test
push
repnz
es
cmp
inc
sbb
jl
cs
idiv
jne
iret
or
add
add
add
aaa
mov
mov
add
sub
jb
xchg
sub
dec
cwtl
sub
mov
pop
pop
lret
inc
testb
cmp
stos
add
loop
mov
fwait
xor
xor
mov
add
or
xchg
jmp
ret
test
cmc
test
rcll
lock
int
lret
fnstenv
sub
jmp
dec
shrl
scas
loopne
push
xor
cmp
inc
clc
sbb
popa
inc
sbb
repz
imul
rclb
pusha
outsb
sub
out
push
or
repnz
pop
nop
cmp
mov
inc
cmp
mov
ljmp
push
or
imul
push
mov
lock
push
arpl
loope
jmp
aad
mov
pop
sbb
push
push
pop
adc
xchg
pop
cmp
into
imul
fcoms
cmp
xchg
pushl
sub
fldt
add
add
add
into
enter
rorl
popa
aaa
roll
cmpsb
es
sbb
movsl
cli
xor
fs
sar
lea
jge
dec
mov
icebp
mov
xchg
jnp
inc
jp
inc
out
mov
fdivrl
scas
int3
push
sub
fwait
sti
or
hlt
jb
pop
jnp
inc
cmpsb
sbb
sub
outsl
insl
decl
mov
fs
adc
cmp
sahf
xchg
cmp
pop
jbe
sub
push
fsubl
push
sub
xchg
divl
arpl
mov
mov
push
rcr
lahf
imul
xchg
pusha
lret
mov
mov
xlat
out
sbb
push
std
mov
outsl
out
dec
repz
inc
cmpsb
filds
cmp
out
push
pop
lret
in
mov
cmp
popa
stc
sub
repnz
push
cmc
cld
adc
jg
scas
push
dec
cmp
mov
ds
out
bnd
std
mov
jge
std
sti
iret
ss
push
jno
mov
mov
test
add
add
add
xorb
loope
push
pusha
movb
call
dec
inc
adc
cmp
dec
jb
and
in
int
xchg
sub
add
les
cmp
and
sub
pop
cmpsb
popf
insw
rolb
jno
xchg
outsb
faddl
sub
cltd
dec
pop
mov
mov
push
cltd
adc
xchg
mov
inc
fwait
imul
cli
xchg
dec
lret
imul
cmc
fs
jecxz
mov
clc
sbb
into
outsb
cli
dec
outsl
rorb
mov
shl
loop
insb
inc
mov
mov
gs
or
pop
aam
jo
sub
movsl
fmuls
sbb
dec
pop
outsb
das
movsb
dec
or
lods
inc
push
inc
sahf
push
xchg
push
gs
add
mov
mov
aam
add
vpshufhw
cmp
scas
sub
push
testb
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
jne
jp
xchg
add
add
add
push
aad
pop
inc
addb
decb
push
inc
int
push
loopne
dec
pop
movsb
shl
or
call
mov
lahf
stos
js
jno
inc
ds
sub
xsaves
and
jecxz
pushf
pop
in
stos
enter
movsl
scas
jle
xor
lret
pushf
iret
inc
imul
xchg
cmp
dec
mov
dec
sbb
hlt
adc
sub
int3
jno
pusha
jp
and
add
scas
mov
rolb
xchg
aaa
mov
push
mov
aad
ljmp
push
adc
bswap
pop
sub
mov
dec
and
addr16
add
cmpb
out
mov
pop
mov
mov
das
test
vphaddubq
jne
cmp
add
lock
mov
xchg
movsb
cmp
das
mov
sbb
pop
mov
out
mov
mov
mov
popa
in
xchg
add
add
add
idivl
xor
pop
fisttpl
jg
int
lahf
push
popa
mov
adc
mov
cmc
push
iret
je
jp
cmpsb
xlat
lods
dec
scas
sar
pop
jne
fildll
js
arpl
xor
outsl
arpl
mov
in
pop
pop
addr16
xchg
dec
add
push
sub
xchg
sti
mov
jne
jmp
mov
popl
inc
xor
lea
or
aad
jb
icebp
popf
bound
and
cmp
mov
test
jmp
or
jns
mov
negb
int3
xchg
shr
lcall
jmp
daa
es
and
add
cmp
inc
xor
sbb
pop
popf
pop
push
outsl
ja
inc
and
mov
xor
scas
outsl
xor
xor
ss
lret
ret
dec
dec
jno
and
add
add
pop
test
ljmp
lock
xchg
jno
push
mulb
add
add
add
sbbl
mov
cld
pop
xchg
pop
jns
jo
fildll
ds
xor
xlat
mov
dec
inc
mov
dec
xchg
cmp
jbe
test
add
repz
sbb
in
fisttpl
lock
loop
lret
cs
mov
lods
ja
mov
add
adc
push
loop
dec
repnz
push
inc
adc
jno
lods
mov
addr16
xor
cmpsl
and
int3
das
mov
sub
gs
pop
mov
lcall
stc
pop
lods
pmuludq
roll
fists
test
stos
mov
mov
xchg
dec
lock
int3
test
cmc
xor
sbb
inc
sbb
in
inc
and
xchg
inc
mov
sbb
dec
cmp
fdivr
add
mov
mov
pusha
ret
data16
mov
jmp
add
arpl
jnp
sbb
push
xor
jge
mov
add
add
add
imul
xor
fistpll
stc
dec
adc
roll
mov
jns
insl
add
out
pop
lods
in
pop
enter
cmp
cmp
dec
test
adc
xchg
inc
lcall
mov
test
pop
mov
icebp
fldcw
enter
out
ja
arpl
push
lea
push
xor
jle
push
dec
lock
mov
mov
nop
dec
sbb
sub
lcall
push
stos
faddl
or
mov
inc
lds
test
mov
movq
adc
xor
insl
pop
push
cmp
or
add
push
pop
push
imull
push
and
negb
add
ljmp
sti
push
jne
cmpsl
sbb
gs
test
pop
inc
scas
out
mov
aaa
push
stos
mov
movl
add
push
aas
or
mov
and
mov
add
add
add
dec
mov
push
in
sti
in
jmp
add
mov
pop
movsl
inc
jne
iret
sarl
nop
jmp
outsb
out
xor
pop
xchg
aam
stos
xor
sar
test
inc
lea
sub
push
jg
pop
mov
loope
push
daa
mov
cmpsl
dec
mov
test
push
and
int
notb
mov
xchg
push
mov
push
int3
mov
hlt
into
in
nop
pop
jl
pop
xchg
cld
xchg
and
lea
pop
mov
jns
or
in
push
mov
int3
sub
xor
and
xchg
and
dec
and
and
jno
jecxz
inc
or
dec
sbb
pop
bound
mov
or
scas
add
les
popf
or
push
das
mov
inc
mov
dec
and
lcall
rorl
dec
addl
add
insb
fidivl
bound
fmul
mov
add
add
add
cltd
xor
movsl
and
data16
iret
pop
notl
popf
mov
pop
push
mov
add
inc
cltd
add
lret
out
mov
out
adc
cmp
xorb
fsts
pop
xor
mov
mov
test
ficomps
popf
or
inc
cld
rorb
test
jb
push
cmp
js
cld
jg
leave
aad
xlat
bswap
cmp
adc
xor
aaa
adc
and
xchg
dec
cmp
nop
bound
adc
cmp
xlat
push
xchg
xchg
cld
mov
jns
xor
mov
hlt
push
pop
jecxz
fadds
pop
ss
pop
mov
lret
mov
call
jbe
xorl
jle
frstor
and
dec
mov
sub
ficoms
jbe
dec
mov
jecxz
jg
fisubrl
pop
xchg
push
fucompp
xor
push
out
jp
adc
xor
adc
add
cmp
mov
jns
add
mov
add
add
jle
mov
imul
xor
pop
xor
imul
and
cmp
add
inc
jb
ljmp
mov
and
jnp
cli
imul
and
push
or
inc
dec
sbb
insb
push
push
fxch
cmp
out
enter
or
fstl
lahf
and
in
pop
xchg
mov
inc
xor
push
arpl
dec
mov
popf
jbe
adc
pop
aas
inc
dec
or
xor
jb
mov
jle
xor
fs
cld
mov
pop
fidivrs
and
cmp
xchg
dec
xor
fisubl
dec
xchg
ds
stos
ljmp
jno
das
in
icebp
lahf
clc
fists
lea
and
dec
out
stos
xchg
pop
jle
pop
out
mov
ss
clc
xor
adc
pop
jno
push
repnz
ja
sbbl
mov
sbb
pop
or
and
add
add
int
fstp
iret
push
cmpsb
fadd
dec
xchg
andl
add
push
roll
daa
shlb
xchg
cmpsl
or
cmp
jl
xor
xlat
popf
movsl
sbb
gs
fdivl
xchg
das
inc
pop
cli
lcall
mov
fsubl
sbb
out
ffreep
fmull
dec
and
dec
push
mov
xchg
xor
or
popa
cmp
lret
addr16
adc
add
test
or
and
fsubr
dec
rorl
xchg
xor
dec
pop
dec
fsubs
xchg
repnz
cld
sub
pop
data16
aam
in
xchg
mov
add
jns
pop
dec
inc
dec
insl
fidivl
pushf
dec
repz
mov
cli
bound
xor
xchg
add
xchg
sbb
rorl
loope
lds
sub
sub
pop
in
rcrl
xchg
cmpl
aas
sub
aaa
jle
addr16
pop
notl
mov
popf
loopne
mov
add
add
adc
std
out
ljmp
mov
add
add
add
nop
pop
out
jg
xchg
or
cmc
cmpsb
dec
neg
sbb
cli
sub
leave
mov
sbb
dec
cltd
add
mov
lret
ja
addl
call
hlt
aas
pop
jl
mov
adc
jb
inc
shrl
call
add
xchg
dec
cmc
lea
pop
and
cltd
inc
add
je
lret
fdivrs
pushf
scas
out
adc
loop
mov
icebp
or
insb
es
enter
add
fsubrs
dec
jge
mov
pop
inc
jno
sub
cmp
call
jbe
push
decl
ss
push
jge
leave
ljmp
xchg
jmp
int3
sub
or
mov
lret
fwait
push
xchg
aas
inc
adc
sbb
into
repnz
fwait
out
cwtl
jg
aad
xchg
push
lods
dec
mov
hlt
adc
dec
lret
xchg
ret
loope
dec
dec
mov
mov
lods
les
jnp
mov
icebp
xchg
daa
aad
popl
add
add
add
jns
push
xchg
setno
je
cmp
cmp
mov
icebp
xlat
lds
outsl
mov
fistps
fdivr
clc
push
sahf
mov
inc
pushf
dec
je
rolb
jne
out
xchg
adc
cli
stos
jae
jg
xor
std
cmp
fsubrl
xchg
mov
xchg
roll
scas
inc
popf
es
in
dec
push
daa
mov
ret
jg
subl
movsb
xor
pop
cli
push
fmulp
push
arpl
dec
xchg
scas
jecxz
lcall
jbe
js
pop
daa
push
pushf
aam
add
mov
idivl
or
xchg
sbb
test
mov
inc
jns
jo
xor
mov
mov
adc
pop
mov
sub
xchg
dec
popa
xchg
mul
inc
iret
and
iret
pushf
test
leave
jnp
pusha
mov
jae
pusha
mov
inc
or
test
fcomps
add
adc
addr16
add
add
add
mov
adc
stc
push
andb
inc
xor
sbb
sahf
mov
movb
xor
mov
mov
pop
fs
scas
cs
jmp
outsl
popa
xchg
sub
insl
cltd
insl
mov
jae
jb
aaa
dec
cmp
nop
or
es
mov
testb
out
and
or
in
jmp
add
mov
adc
add
movsl
xchg
pop
sbb
mov
add
or
and
adc
mov
mov
test
jns
mov
sub
sahf
cmp
rcl
sbb
xor
pop
popa
les
and
test
nop
lods
out
loope
add
je
addr16
sahf
sub
clc
mov
cld
jp
push
cmp
or
mov
ljmp
dec
mov
jbe
addr16
add
add
add
lods
loop
arpl
inc
pop
pop
adc
loope
cmpsl
inc
xor
add
pop
push
adc
lock
dec
std
or
jmp
lret
ljmp
lahf
adc
sub
imul
mov
jmp
movsl
push
adc
sti
imull
and
inc
out
pop
add
arpl
fldl
lea
mov
mov
xchg
addr16
sti
std
inc
lods
mov
out
adc
add
repz
mov
lds
jp
pop
push
sub
inc
fsts
sub
les
sbb
fisubrs
dec
ljmp
lret
mov
pop
push
mov
in
xor
rcl
scas
sbb
fwait
xchg
sub
cli
test
les
into
xchg
add
add
or
cmp
inc
pop
sub
decb
lods
loope
lret
test
pop
sub
scas
fwait
pop
iret
jl
jb
mov
aaa
shlb
cmc
div
testl
mov
add
add
xor
imul
lahf
dec
test
jbe
lret
jle
adc
xchg
out
loop
movsb
cli
jns
std
dec
xor
jne
scas
jb
cmpsb
test
cltd
lahf
mov
rcr
lahf
lods
jo
xchg
ss
inc
pop
nopl
jbe
xor
push
dec
jnp
stos
call
inc
ja
sub
hlt
repnz
xor
adc
jbe
nop
les
xchg
dec
jg
cli
adc
roll
scas
out
lods
shrl
mov
mov
daa
pusha
mov
loop
and
inc
loopne
sbb
jb
add
or
jne
int
push
pushf
cmp
sub
pop
cmp
aad
adc
cmp
stc
inc
mull
or
outsb
cmpsb
dec
aas
movsl
jmp
inc
push
imulb
fld
icebp
cmpsb
mov
sbb
test
mov
jle
mov
test
outsb
xlat
mov
insl
mov
mov
pop
push
nop
push
sahf
rcr
pop
adcb
aam
jge
addr16
add
add
add
jecxz
xchg
mov
inc
divb
fwait
ss
jne
fidivrl
pop
add
pop
inc
adc
mov
xor
mov
mov
into
and
lock
pop
pop
pop
ljmp
fs
sub
jbe
movsl
adc
jp
outsb
push
push
dec
push
sub
fwait
dec
sub
fildll
sahf
xor
push
push
movb
nop
arpl
dec
scas
clc
sbb
lahf
ficoms
mov
enter
lds
popa
cmp
icebp
jecxz
bound
add
inc
popa
add
lds
adc
push
js
sbb
xor
adc
int
ljmp
cld
hlt
sub
mov
or
pop
ret
jp
cld
xor
mov
sbb
mov
divl
lock
ds
mov
push
inc
mov
movb
add
shll
cmpsb
jcxz
fimull
addr16
add
add
add
jmp
xchg
in
pop
cmpl
hlt
and
icebp
loope
adc
jmp
sub
push
or
stos
lea
es
outsl
adc
in
mov
int
mov
inc
mov
or
jg
lds
sbb
pop
pop
int3
push
cmp
add
xchg
xor
or
hlt
mov
adc
sub
lcall
jg
xchg
enter
cmp
test
ret
add
aaa
xchg
mov
hlt
and
xlat
and
test
jp
or
movsb
sbb
jl
std
nop
inc
imul
jae
lock
mov
hlt
int3
xor
sbb
push
cld
pop
aaa
popl
and
inc
pop
aam
and
cld
and
pop
xchg
pop
shll
mov
push
adc
pop
mov
out
mov
jecxz
jo
shr
test
lcall
out
push
iret
ljmp
pop
fildl
add
add
clc
jnp
jg
in
cli
enter
std
and
addr16
add
add
add
cvttps2pi
mov
stos
and
add
ljmp
in
and
dec
inc
pop
out
and
rorb
ljmp
sub
imul
mov
push
inc
lret
sub
movsl
fwait
mov
maskmovq
negl
sub
or
int3
xchg
aas
jne
mov
stos
xchg
or
aam
push
sub
out
or
loopne
sub
pusha
inc
pop
fs
popf
adc
pop
pop
mov
inc
dec
xchg
cld
cltd
popf
mov
and
xor
or
sub
mov
enter
cmp
add
stc
pop
pushf
dec
nop
sub
orb
dec
pop
sbb
inc
xchg
mov
push
push
test
lds
xor
iret
pusha
dec
lea
lahf
arpl
inc
push
xchg
cmpsl
xchg
dec
push
adc
dec
dec
push
cmpsb
out
xchg
ret
push
jp
sub
jbe
lods
mov
xor
rolb
add
lods
faddl
fbstp
cld
gs
mov
addr16
add
add
add
mov
pop
push
ss
movsb
sub
ljmp
imul
pop
imul
pop
lods
and
cmc
or
push
xor
sub
cmp
out
sarb
or
xchg
aas
xlat
mov
in
jmp
sub
pop
ljmp
pop
xor
inc
gs
mov
push
sbb
mov
adc
cmp
push
mov
xchg
mov
sub
mov
cmpsl
cld
xchg
outsb
push
xorb
cli
sbb
movsl
popa
js
jle
dec
jp
iret
aam
inc
les
mov
in
aaa
in
push
nop
and
int3
add
and
and
lahf
dec
enter
movsl
adc
sub
cmp
jmp
daa
aaa
negl
mov
adc
stc
sbb
xchg
push
mov
cmp
dec
ss
sbb
jl
sar
std
jle
pop
popf
scas
jae
lret
xchg
add
add
add
pusha
add
imul
mov
orb
leave
nop
mov
pop
mov
pop
pusha
fildl
movsl
fnsave
push
push
fwait
sahf
scas
push
jmp
arpl
pop
xorl
test
pop
push
shl
pop
stos
xor
std
jge
rcr
mov
push
cmc
cmp
xchg
test
jns
sbb
add
push
mov
iret
negb
adc
jp
cld
jg
movsb
push
inc
fmuls
xchg
xor
ja
cli
dec
inc
add
mov
and
jo
pop
subl
and
pushf
scas
push
cwtl
pop
test
xor
inc
negb
lcall
push
or
and
cmp
xorb
les
or
lahf
fnstenv
push
bound
sbb
dec
rol
push
sar
xchg
or
arpl
pop
in
inc
stc
jb
int
mov
sbbl
sub
mov
pop
and
mov
cmp
cmp
in
aaa
xchg
fwait
shlb
add
add
add
mov
push
scas
lock
mov
jle
mov
out
dec
dec
loope
mov
inc
mov
faddl
gs
mov
fsubrl
movsl
pop
xor
xchg
adc
lods
negl
fwait
mov
inc
repz
loop
push
sti
lock
jl
daa
test
fwait
xor
sbb
dec
idivl
call
xchg
sbb
mov
jnp
add
jae
scas
int
jne
sti
imul
popf
add
and
js
add
mov
add
std
test
and
lds
es
mov
sub
jnp
and
cmp
adc
stc
push
test
inc
lds
adc
fldt
lahf
inc
mov
mov
push
push
ds
divb
mov
outsl
mov
inc
sub
jmp
mov
xlat
add
cmc
aaa
loop
hlt
jns
lock
in
push
popa
mov
pop
mov
add
fwait
and
popa
mov
xorl
addr16
add
add
add
pop
jge
add
mov
jl
or
cmc
push
icebp
sub
fndisi(8087
pusha
xchg
pop
hlt
pop
lea
loop
mov
imul
jmp
sbb
shll
and
push
int3
outsl
jno
jb
repnz
insb
inc
sbb
mov
std
mov
outsl
cmpsb
xchg
addr16
shl
and
stos
adc
popa
inc
daa
bswap
or
dec
repnz
adc
imul
sub
mov
mov
arpl
push
inc
cs
lret
les
xchg
jge
icebp
mov
mov
lds
sub
repnz
push
cltd
cltd
out
stos
push
sbb
imul
jo
pop
hlt
add
jecxz
or
insb
adc
cmpsl
movsb
lret
jo
dec
int3
fdivrs
mov
aam
subl
arpl
add
add
dec
std
out
xlat
aas
dec
sbb
or
addr16
and
mov
sub
and
push
call
jnp
rorl
sub
outsb
mov
add
cvtps2pd
lds
pop
hlt
sub
hlt
shl
inc
popa
pop
iret
mov
shlb
arpl
adc
cmp
pop
push
fsubs
mov
push
push
aas
test
gs
mov
adc
fstps
mov
test
and
in
add
mov
inc
incb
lock
leave
repz
repnz
jmp
cmp
mov
and
pushf
inc
inc
mov
dec
adcl
mov
inc
das
nop
sub
test
aaa
xchg
push
sti
push
or
stc
and
push
sub
cmpsb
sbb
mov
sbb
adc
out
ljmp
notl
lods
add
les
mov
mov
cmp
jmp
add
mov
mov
jmp
test
fwait
add
add
add
fstpt
jnp
mov
addr16
popa
xchg
cmc
out
fcomp
fcomp
mov
mov
int
adc
repz
popa
idivl
dec
push
fs
arpl
sub
arpl
xchg
fimull
and
xchg
pop
jns
or
imul
mov
push
xchg
add
cmpl
addr16
mov
outsl
cld
cmp
dec
movsl
loope
shrl
or
push
xchg
mov
insl
sub
aad
mov
xchg
cli
dec
pop
sub
movsb
fildl
sub
loop
xor
or
lods
push
in
or
push
mov
sub
cmpl
pop
mov
orb
cmp
add
hlt
add
jecxz
sahf
lcall
adc
lock
faddp
jl
jmp
imul
push
mov
leave
add
add
add
lret
sbbl
popl
push
addr16
add
add
add
je
roll
jno
scas
test
fisttps
mov
mov
sbb
mov
mov
lret
cltd
pop
and
jo
xor
or
enter
and
jl
mov
in
shll
out
sub
jns
cmp
mov
mov
cmp
sbb
dec
sahf
fidivl
gs
sub
adc
inc
lea
int
bnd
pop
cmc
jmp
nop
mov
cltd
int3
mul
mov
push
and
sbb
fcom
jmp
lret
adc
cmp
mov
out
dec
into
lea
sti
sub
fsubrl
cmp
pop
mov
inc
xor
pop
inc
and
cmp
mov
cmp
popa
nop
shl
fwait
jl
or
mov
pop
xchg
divb
mov
sub
mov
mov
mov
add
add
imul
movsb
and
mov
popf
add
add
add
out
push
mov
push
inc
add
inc
fisubl
shlb
ds
scas
or
cltd
dec
push
fsub
adc
fwait
jo
push
mov
xlat
jnp
stc
je
rcrb
jecxz
or
push
call
push
int3
and
loopne
pop
fcomps
rcr
mov
jmp
outsb
pop
push
data16
adc
enter
test
ja
mov
inc
dec
add
jmp
mov
shll
xor
aas
xlat
ret
mov
xor
sub
inc
shrl
pop
push
ret
cmp
sub
jns
sti
mov
gs
dec
push
xchg
dec
and
stos
cmp
pop
lahf
outsl
lcall
fs
push
bound
icebp
push
add
fistpll
shll
xchg
pop
xor
ljmp
jecxz
sbb
inc
xchg
push
and
add
add
mov
sub
lahf
mov
push
and
addr16
add
add
add
and
push
lods
gs
xor
jmp
and
push
xor
mov
dec
mov
loop
jg
popa
mov
lret
mov
or
cmp
in
popf
testl
andl
loope
dec
inc
pop
mov
push
or
lret
jae
rclb
leave
fistl
and
sbb
mov
lods
stos
xchg
ret
sarb
data16
sub
jnp
pop
xor
mov
fidivrl
sub
scas
inc
sbb
and
pushf
sahf
xchg
mov
out
fwait
ss
sub
mov
xor
xorl
jl
mov
push
cmp
add
outsb
stos
push
xor
mov
loop
adcb
js
outsl
push
dec
xchg
or
rcl
scas
and
lods
imulb
inc
lahf
je
js
rolb
cwtl
jecxz
add
add
ja
out
inc
sub
or
dec
std
imul
add
add
add
mov
pop
das
fmuls
jno
enter
jg
pop
inc
inc
cld
jb
lcall
push
ret
dec
enter
xor
rcrl
adc
imul
mov
cmp
xchg
mov
jnp
fildll
sub
and
scas
push
pusha
mov
inc
fisubl
mov
fdivrl
std
mov
icebp
lods
movsb
add
pop
cmp
test
fidivrs
mov
inc
insb
pop
ds
jb
xchg
xchg
mov
cmp
adc
or
xchg
leave
out
ret
and
lods
aad
pop
cwtl
or
lods
sbb
dec
cld
ja
cmovg
jmp
inc
and
adc
jbe
add
cmp
loop
lcall
stos
fldenv
lods
cmp
nop
loopne
jo
fdivs
push
testl
mov
bnd
push
aas
dec
or
lret
loop
test
mov
cld
mov
addr16
add
add
iret
bound
leave
cmp
int
and
stos
das
xchg
pop
shlb
mov
testl
xor
mov
pop
push
lds
in
dec
call
repz
shll
pop
cmp
pushf
mov
mov
mov
jmp
in
rcrb
popa
push
jge
pop
jmp
mov
loop
rclb
xchg
pop
mov
push
lock
cmpsb
xchg
fwait
inc
and
push
sbb
pop
pop
mov
gs
mov
movsb
xchg
bound
xchg
mov
outsl
sbb
xchg
cld
and
dec
outsl
int3
xchg
test
xor
test
jno
into
jmp
push
movsb
sbb
insl
jecxz
mov
outsb
fdivrs
imul
ficompl
imul
hlt
ret
mov
cmc
sbb
popf
adc
or
adc
fidivs
mov
lods
add
or
lcall
aaa
mov
addr16
add
add
mov
sub
dec
or
pushf
jo
jne
dec
or
mov
scas
sahf
test
andl
movsl
push
adc
fsubrs
adc
adcl
leave
lock
fstl
cmp
scas
out
cmpsb
jo
bound
daa
xchg
inc
insb
fwait
out
cmpsb
scas
push
imul
sahf
or
imul
mov
push
inc
hlt
mov
shlb
shlb
orb
sub
movsbl
mov
arpl
cmpsl
std
jb
outsl
movsb
cld
mov
mov
rcrl
or
push
mov
das
xor
stos
lock
hlt
push
dec
pop
rolb
dec
addb
xchg
sbb
cltd
jmp
arpl
rcrb
mov
xchg
or
dec
add
jmp
test
mov
pop
popf
sub
negl
rcl
and
cs
push
icebp
and
leave
lret
movb
pop
fnstcw
movsb
mov
mov
inc
inc
add
mov
add
add
mov
add
cli
int3
add
fbld
mov
mov
push
mov
ss
lods
aad
lods
xor
ja
pusha
and
test
fldt
pop
orb
mov
cwtl
mov
mov
xor
ss
aam
jl
pop
sub
out
push
xchg
lea
sahf
nop
data16
xchg
xchg
dec
xor
shll
arpl
fnstcw
movsb
arpl
push
lahf
jl
sti
xor
scas
push
inc
jle
outsb
mov
sbb
xchg
jmp
inc
pop
adc
testb
mov
mov
jae
mov
fmulp
xchg
fiadds
daa
pop
mov
incl
mov
mov
fistpll
iret
imul
fmul
aad
mov
pop
imul
sub
cwtl
sbb
jp
xor
cmp
pop
cmp
add
or
sbb
inc
mov
setb
add
add
add
je
push
mov
mov
in
xor
push
loope
push
push
dec
push
stc
xchg
es
ljmp
sbbl
test
clc
cmpsl
pop
daa
jmp
or
into
mov
addl
aad
inc
or
mov
je
aad
add
sbb
stc
cld
ja
ret
imul
sti
dec
gs
clc
pop
xchg
js
sti
push
cmp
pop
aad
mov
jge
insl
dec
bound
sbb
icebp
sub
dec
imul
inc
adc
les
in
test
add
xor
repnz
push
clc
cli
mov
pop
or
cmpsl
outsl
stos
popa
add
jnp
sub
xchg
mov
push
bound
cld
xor
xor
jns
dec
call
push
sub
mov
test
add
push
inc
fdivl
push
dec
mov
movsb
add
add
add
daa
enter
lret
call
push
mov
pop
and
bound
jecxz
jl
xchg
ret
add
repnz
adc
jmp
in
outsb
pop
aaa
push
imul
fs
mov
xor
jns
insl
jns
sub
xchg
loopne
mov
dec
stc
jg
xor
mov
aaa
xchg
mov
lock
mov
xchg
inc
dec
push
test
lods
adc
rcll
and
ret
mov
sbb
ljmp
push
jo
xor
jl
cli
push
sub
sbb
fisttpll
rcll
lods
pop
push
pop
loopne
mov
xchg
pop
addr16
xchg
lcall
inc
rcr
sub
mov
ds
cmc
lds
cli
push
ss
jg
inc
adc
adc
pop
sbb
add
sbb
mov
sbb
movsl
add
add
add
pop
cmp
adc
pop
xchg
inc
leave
lahf
xchg
adc
fnstsw
jbe
jb
lret
lcall
jne
mov
ficoml
shrb
inc
ja
push
cmpsl
xchg
ficompl
gs
int3
sub
sub
mov
std
mov
xchg
xchg
xor
notb
js
cmp
insl
sbb
xor
pop
aam
je
dec
out
outsb
pushf
sahf
pop
mov
sbb
sti
xor
lock
jnp
loopne
mov
and
je
pop
sub
out
push
mov
cwtl
sbb
insl
dec
fwait
cld
stos
dec
sbb
pop
lret
in
inc
lcall
testb
ja
and
mov
cmp
dec
push
and
push
ficomps
adc
xchg
arpl
and
xor
jp
inc
out
fmul
popa
and
add
sub
sub
inc
pushf
xchg
push
mov
add
stos
hlt
jmp
cmp
jbe
or
and
cmpsb
add
add
add
sub
push
mov
mov
test
dec
popw
pop
dec
add
xor
adc
pop
stc
fmull
xchg
pop
or
push
data16
push
iret
jb
cmp
dec
push
cmp
ret
dec
ljmp
aam
push
lods
xchg
sahf
mov
enter
mov
mov
sub
subb
into
and
and
mov
repz
dec
mov
mov
jmp
and
cmp
or
jnp
fcmovbe
lods
dec
movsb
sub
lret
inc
or
mov
enter
pop
mov
mov
pop
push
and
cmpl
shll
and
dec
stos
cli
sbb
cmp
cmp
mov
mov
das
les
out
jmp
and
loopne
addb
adcl
adc
cwtl
add
out
xlat
out
jg
in
xor
daa
rorl
cmpsl
add
add
add
sahf
rcll
mov
lds
xchg
sub
jle
mov
or
xor
mov
shl
fwait
lret
mov
movsl
or
or
loope
mov
xchg
sub
fisttps
cmp
adc
fsubrp
lahf
enter
pop
mov
nop
ret
xlat
mov
dec
ljmp
adc
pushf
pop
clc
ret
dec
inc
sti
mov
test
jl
sbb
ljmp
enter
or
jae
push
fcompl
dec
scas
cmpsb
adc
mov
adc
adc
mov
pop
mov
fs
mov
addb
push
inc
xchg
sbb
lcall
sub
mov
inc
add
inc
fyl2xp1
xlat
repnz
imul
int
in
push
enter
ror
xchg
leavew
sub
adc
add
sbb
pop
fbstp
fldl2e
cmp
jae
addr16
add
add
add
fisubrs
lret
lcall
pusha
cwtl
ds
insb
mov
sti
rcrb
ja
adcl
out
test
fdiv
jle
xchg
dec
aaa
fidivrl
jb
int
aas
call
xchg
aam
cmpl
icebp
fidivrl
mov
sub
test
jg
or
dec
fimull
rolb
repnz
icebp
sahf
and
aad
loope
lock
jbe
mov
stos
test
sub
inc
sub
jecxz
rcll
jg
push
mov
fsubs
sahf
stos
movsb
inc
stc
bsf
mov
mov
dec
pushf
sbbl
lahf
stos
jne
sarb
je
popf
adc
iret
push
loope
xchg
mov
sahf
jbe
mov
stos
movsb
or
dec
adc
addl
mov
hlt
into
das
push
cmpb
jmp
mov
es
lcall
std
inc
jne
sbb
adc
addr16
add
mov
movsl
cltd
std
imul
jns
push
jle
pop
and
sbb
xchg
std
pop
cmp
or
jne
lock
push
adc
mov
dec
cs
fcom
in
ljmp
sub
mov
xchg
dec
pop
lds
subl
inc
loop
psraw
and
imul
mov
push
mov
and
rcrb
sahf
filds
mov
decl
lock
lock
sbb
lahf
outsl
mov
mov
mov
enter
xor
or
add
outsb
xchg
sub
jns
in
into
push
jb
mov
fdiv
fstps
fsts
mov
jae
jg
adc
push
mov
cmp
pop
movsb
mov
sti
test
sub
xchg
fcompl
xor
mov
popa
lret
mov
push
jmp
add
add
mov
push
sti
jmp
push
mov
testb
arpl
add
add
add
lods
fdivrs
push
insb
outsb
mov
mov
fstps
fsubrs
das
lret
jp
xchg
fwait
mov
iret
lods
movsl
test
dec
int3
ds
imul
push
xor
adc
cmpsb
cmp
nop
add
or
jle
mov
ficompl
rolb
xchg
jo
cmp
cltd
inc
mov
pushf
and
testl
and
sbb
in
data16
mov
adc
add
cli
aam
pop
test
test
xchg
xchg
mov
daa
dec
mov
jae
mov
aaa
mov
sbbb
mov
cmp
cld
xlat
in
fidivrl
jmp
mov
popl
add
gs
loope
lds
arpl
dec
jp
lcall
cs
xor
and
or
enter
aad
mov
jecxz
lock
loop
stos
add
add
add
shll
bound
std
push
adc
call
stos
notl
add
xchg
xor
mov
cs
icebp
mov
test
negb
pop
jnp
jl
sti
xchg
aam
dec
jl
pusha
ljmp
mov
leave
sub
mov
nop
xchg
xchg
repnz
ss
mov
ds
mov
insl
cmpsl
jno
ret
adc
push
dec
rolb
testl
test
jmp
sub
xchg
dec
repz
hlt
pop
js
mov
fmuls
js
sbb
movsb
in
adc
imul
pop
int3
jne
jb
lds
sub
fwait
lea
scas
xchg
mov
inc
sarb
adc
sbbl
sbb
push
sub
jo
pusha
and
add
cld
mov
leave
outsb
jo
xlat
lods
add
add
add
inc
sub
out
in
mov
dec
or
dec
cmp
xchg
imul
mov
adc
leave
mov
mov
filds
mov
add
iret
or
pop
fadd
popf
mov
xor
pop
test
out
les
inc
dec
icebp
cld
push
lret
or
call
dec
jge
lods
jge
mov
xchg
dec
fs
dec
rolb
xchg
mov
jo
sub
inc
aas
pop
sbb
push
inc
cmp
sub
and
or
pop
xor
jns
and
scas
dec
and
mov
sub
mov
inc
out
jb
sbb
notb
mov
mov
loop
jmp
nop
mov
xor
sbb
sarb
sbb
xrelease
mov
outsl
or
neg
scas
lea
aam
les
mov
pushf
repnz
mov
dec
das
pop
out
cmc
mov
shll
out
lods
add
add
add
repz
dec
mov
xor
adc
xchg
push
loope
idiv
pop
test
xor
inc
out
mov
jbe
lcall
xor
sbb
inc
test
repnz
lods
icebp
popl
insl
cld
jne
ds
incb
mov
mov
xchg
mull
adc
xchg
push
push
adcl
jne
lock
mov
xor
test
ss
data16
dec
jg
xor
cmpsl
xlat
dec
sbb
or
add
dec
adc
adc
pop
cmp
sarb
push
and
out
push
push
push
outsl
adc
lds
clc
jne
xor
cvtps2pi
jbe
std
std
push
mov
push
lret
cmp
cmpsb
iret
push
gs
stos
rcl
jo
mov
jne
lgs
sub
dec
addr16
daa
ss
inc
cmp
leave
rolb
lock
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
fadd
subl
add
add
or
pmaxsw
jle
outsb
fdiv
sbb
mov
iret
sub
cwtl
orb
push
push
jp
and
icebp
xor
rolb
enter
mov
das
imul
pop
mov
push
ljmp
lcall
adc
mov
cmp
cvtps2pd
ret
mov
pop
cmp
mov
cltd
xchg
push
or
ret
sub
and
dec
and
mov
sbbb
xchg
mov
sub
or
shll
and
sub
mov
xchg
popl
adc
pop
lret
mov
lret
pushf
xchg
sub
mov
mov
push
and
sub
repnz
pop
sub
loopne
cld
cwtl
sbb
ja
push
or
cmpl
fidivs
loop
ljmp
insl
stos
fdivrl
add
add
pop
xor
inc
stc
or
cmp
shrb
jnp
clc
jb
inc
arpl
or
in
jae
ds
aad
xor
sbb
cmp
sti
mov
and
cmpsl
dec
and
into
nop
add
cmpsb
sbb
sub
and
push
out
loopne
cld
lret
cmp
or
sti
gs
cmp
out
xchg
cmpsb
xor
push
jo
rclb
roll
cmp
mov
popf
rcrl
into
sub
xlat
inc
imul
push
sub
inc
cmp
jmp
adc
popa
je
jno
inc
adc
popa
repz
hlt
dec
ds
mov
or
call
inc
xor
mov
vmptrst
mov
mov
in
jmp
lahf
fndisi(8087
pop
jne
inc
inc
insl
popa
xor
inc
adc
push
and
add
add
xchg
jg
jmp
std
mov
aas
int3
das
addr16
add
add
add
push
mov
inc
mull
pop
nop
jle
push
adc
inc
mov
mov
pusha
pop
adc
mov
xchg
dec
sub
xchg
push
jle
das
daa
pop
aas
xor
xchg
insb
cmpsl
pop
push
xchg
sarl
loop
rolb
pushf
je
pop
loope
jbe
push
fimull
sbb
cmp
lret
cwtl
inc
nop
jb
lods
adc
xchg
jp
adcb
xchg
test
mov
addr16
pushl
xor
lock
aaa
ror
or
cmp
clc
push
xor
pushf
push
ds
xlat
xchg
and
popa
pop
sub
mull
in
faddl
repz
int3
mov
leave
lret
sahf
cmp
xor
test
xor
ret
push
test
mov
aaa
orl
sbb
fcomps
les
mov
add
xor
inc
mov
pop
inc
addr16
add
add
add
repnz
xchg
jmp
dec
push
mov
sbb
and
mov
inc
scas
dec
lret
lcall
dec
dec
sub
pop
dec
js
lock
or
subl
mov
push
xorl
dec
loop
mov
or
or
sbb
jae
in
dec
fcoms
fprem1
imul
push
and
xor
in
sub
scas
and
adcb
cmc
sahf
mov
xchg
jbe
in
mov
push
std
repnz
cmp
jg
mov
loop
xchg
popa
pop
movsl
push
out
mov
add
mov
inc
xor
jg
enter
push
cmc
aam
jle
mov
adc
lods
lea
sub
outsb
fs
pop
xor
xchg
adc
mov
sbb
out
push
pop
xor
cmp
inc
call
pushf
addr16
add
add
add
nopl
mov
push
cmp
pop
cmp
cs
jb
sub
adc
mov
mov
hlt
inc
sub
movsb
jb
lahf
je
mov
and
mov
mov
add
test
xlat
push
push
add
sub
dec
xchg
out
mov
in
rcll
push
push
out
arpl
sub
xchg
jmp
subl
adc
fs
ficomps
xor
mov
or
daa
inc
jnp
mov
decb
jg
pop
sub
jbe
cli
dec
scas
push
inc
jl
rolb
pop
rclb
dec
xor
nop
fadds
xchg
inc
test
jg
mov
addr16
jecxz
lods
aas
into
and
sbb
add
adc
xchg
xor
out
and
int3
gs
add
gs
ljmp
jae
jae
push
popa
pop
add
add
es
les
mov
arpl
shrl
mov
add
add
add
dec
jae
cmp
mov
insb
sbb
ljmp
stos
mov
popf
and
popa
adcb
push
loop
aam
sahf
add
mov
ja
imul
jl
xor
mov
push
out
outsl
aaa
push
xor
xor
and
cmp
adc
push
xchg
std
cmpsl
ds
mov
pushf
imul
ljmp
mov
sub
inc
sbb
out
add
jl
sub
and
sti
mov
pop
cld
aam
mov
cmpb
mov
add
push
fisttpl
jge
xchg
and
sub
dec
mov
mov
lds
sub
or
test
add
insl
mov
mov
add
mov
lcall
lock
enter
jo
add
add
clc
pop
stc
out
push
pop
bound
ljmp
add
mov
pop
mov
aas
loopne
ds
fcoms
enter
arpl
jg
popf
addr16
adc
fs
cmp
sbb
sti
outsb
push
testl
push
out
inc
rolb
adc
fsts
fs
cmp
iret
xchg
out
mov
sub
js
mov
pop
nop
cmp
jecxz
mov
or
cmp
adc
fs
jl
xor
fsub
xorb
sbb
sbb
inc
jge
push
xchg
mov
pop
fbstp
jnp
dec
add
jne
aaa
dec
cmp
push
imull
inc
mov
xor
mov
cld
divl
adcl
mov
out
or
fcoms
mov
adc
lret
dec
dec
push
loopne
and
add
cmp
lret
jo
imul
add
add
push
mov
lcall
push
addr16
add
add
add
repz
push
cmp
jne
je
push
into
cmp
mov
mov
rclb
fidivs
ss
or
push
push
in
push
fisttps
cmc
inc
les
mov
mov
or
lea
adc
pop
fcoms
push
sbb
jns
add
push
ja
les
sahf
mul
insb
adc
out
lahf
push
fadds
cmpsb
imul
xlat
adc
and
mov
pop
pop
and
inc
and
outsb
inc
sub
jno
les
pop
sbb
or
jns
xor
pop
imul
sbb
ficomps
pop
and
push
adc
popf
ljmp
pop
jbe
sbb
imul
pop
xchg
outsb
loopne
lea
dec
and
jnp
xor
xchg
lret
dec
mov
repnz
sbb
add
xorl
insb
lret
shr
mov
add
add
add
pop
pusha
or
mov
push
popa
rclb
jo
js
pop
cltd
and
addb
into
xchg
int3
xlat
out
pop
sahf
lret
mov
lods
fisttpl
fnstcw
jge
mov
pop
inc
xchg
repz
movsl
jne
leave
leave
ret
nop
sub
popf
rcl
mov
scas
xlat
add
out
mov
shlw
push
cmp
xchg
sbb
xchg
mov
cmp
into
push
adc
iret
test
or
cli
mov
out
push
push
test
mov
cmpsb
adc
mov
jb
lds
test
jmp
or
fwait
out
lods
inc
lods
jnp
jb
nop
insl
dec
aad
jl
jecxz
fs
mov
jb
dec
xlat
or
sbb
xor
xchg
inc
js
cmpsl
inc
insl
xchg
sarl
cmp
cltd
mov
mov
int
dec
dec
cmp
add
add
pop
sbbl
fstp
rorl
or
cmp
add
add
add
aas
in
cmp
mov
sbbb
or
mov
fistpll
imull
dec
mov
jb
pushf
sbb
insb
scas
stos
sbb
enter
jecxz
in
xchg
clc
leave
inc
fwait
adc
pop
ss
dec
xor
push
mov
fwait
pusha
inc
fdivrp
in
xchg
enter
xorl
shlb
mov
mov
mov
push
cltd
jp
xor
orl
mov
stos
leave
xchg
aaa
fimull
lock
xor
lret
inc
mov
mov
mov
jge
jl
bound
pusha
outsb
mov
out
and
fnstenv
jmp
movsb
loope
std
push
cmpsl
stos
int
mov
rcr
pop
add
xchg
sti
add
push
push
ret
pop
add
andl
les
xchg
sahf
cld
xchg
pop
adc
loope
mov
jecxz
out
mov
loop
lret
add
add
add
inc
push
cld
xchg
mov
xchg
or
repz
jb
adc
mov
testl
push
cmp
or
lea
sbb
mov
gs
adcl
mov
sub
ja
push
std
mov
jns
ss
mov
cld
inc
je
mov
popa
xchg
xchg
cmpsb
mov
enter
test
lock
jnp
sbb
punpckhdq
push
cs
in
sti
fiaddl
and
xchg
jle
out
clc
fnsave
sub
les
shrb
stos
sarl
push
pop
rolb
mov
cmpsb
out
aad
dec
jmp
inc
insb
outsb
outsb
cltd
fadds
sub
xchg
pop
inc
mov
dec
lret
xor
push
nop
and
jge
push
pop
and
mov
xor
mov
cmp
aad
mov
push
xchg
test
jg
into
lret
orl
add
add
push
xor
lods
fimull
and
xchg
mov
movsb
lahf
mov
mov
test
jno
arpl
push
cmp
and
sbb
leave
inc
je
mov
jo
cmp
cmp
cwtl
loop
cltd
pop
jle
repz
jno
push
push
lahf
ret
dec
rolb
push
dec
dec
mov
jno
jno
sub
aam
dec
push
mov
or
xchg
mov
movsl
mov
adc
cmp
sub
jge
mov
test
and
or
ret
mov
and
mov
mov
aam
lret
pop
add
clc
fadd
mov
test
sub
mov
movsl
shlb
xor
dec
call
pop
mov
and
incb
mov
pop
xor
cld
das
je
rol
sti
pushf
inc
das
lock
in
lcall
jae
dec
mov
dec
sbb
add
add
add
int
lret
pop
aaa
dec
sbb
mov
scas
push
and
outsb
fldz
xor
mov
mov
xor
mov
repz
mov
adc
jecxz
xchg
jmp
jle
stos
sbb
inc
popf
mov
or
fsubr
cmc
shlb
push
sub
push
ss
jmp
mov
push
scas
mov
ds
mov
mov
add
push
loopne
test
std
push
xchg
mov
push
int
mov
test
sub
sub
mov
test
jp
pop
xchg
add
inc
inc
aad
stc
dec
dec
imul
push
sbbb
or
std
mov
xchg
or
imul
pop
test
outsl
push
nop
or
jle
add
push
push
stos
add
mov
pop
cmpsb
mov
ds
and
das
ret
mov
mov
movsb
pop
jmp
add
add
sub
jg,pt
dec
arpl
jo
mov
add
add
nop
orl
dec
out
xlat
xchg
dec
add
ds
into
mov
pop
imul
push
and
mov
js
subl
cli
pop
sub
loop
xor
xchg
loopne
int3
jo
add
xchg
xchg
push
rorl
xor
dec
movsl
dec
push
xor
jecxz
pop
xchg
sub
sti
addr16
aaa
mov
sub
mov
test
jne
dec
adc
rcrb
inc
test
icebp
ret
pop
fcompl
push
cmc
cmp
dec
sbb
add
in
aas
ljmp
push
pop
in
jge
fcmovnbe
notl
pop
cmpsl
sub
nop
repz
cmp
mov
daa
bound
in
fwait
adc
cwtl
mov
mov
clc
adc
dec
push
jbe
addr16
jmp
mov
mov
mov
cmp
mov
lret
cmp
push
xor
push
mov
add
add
out
idiv
outsl
mov
mov
mov
add
sub
fwait
jecxz
dec
lock
fucomip
mov
xor
dec
incb
push
aaa
xor
pop
pop
sbb
sbb
test
jle
loop
gs
ds
cmp
or
lahf
iret
sahf
xchg
or
cmc
or
jo
shrb
cmpsb
sbb
ljmp
mov
pusha
mov
mov
dec
lcall
aam
or
fdivrl
mov
aas
pop
adc
icebp
cld
ja
dec
inc
lret
es
notb
imul
out
jnp
mov
and
movsb
popf
push
jge
mov
and
cmp
hlt
jne
xchg
adc
xchg
aam
push
mov
lret
stos
push
enter
or
jnp
xorb
jmp
mov
or
jno
shrl
out
sub
add
push
scas
or
sbb
mov
jnp
popf
sahf
dec
dec
pop
xor
mov
pop
jmp
loopne
addr16
add
arpl
test
push
jae
push
and
fldt
fbld
loope
insl
lods
icebp
adc
and
lods
cmpl
out
in
pushf
insb
cmp
insl
mov
cmpsb
leave
xor
cmp
rorb
cltd
jle
or
sahf
ljmp
pop
movl
and
xlat
pusha
ss
or
lods
pop
cmp
jmp
je
push
jb
and
flds
jle
sub
arpl
mov
les
mov
gs
imul
out
xchg
ss
and
sarb
iret
mov
loope
scas
ljmp
pop
pushf
fwait
sub
in
loope
test
aaa
pop
xchg
push
cld
test
rolb
in
jl
xchg
popf
fs
lcall
inc
xlat
jnp
sbb
inc
data16
ljmp
das
or
iret
pop
inc
int
add
add
fistpll
call
gs
addr16
add
xchg
mov
dec
and
add
add
int
iret
sbb
ljmp
jle
cli
lods
roll
and
xlat
test
cmpsb
in
jg
cmp
xchg
xor
mov
mov
cwtl
mov
cmpsb
mov
or
loope
and
cmovbe
ja
or
inc
andl
push
mov
es
push
sub
pushf
negb
and
inc
loopne
mov
xchg
and
popf
ret
xchg
jg
mov
adc
sbb
icebp
mov
adc
pop
mov
or
and
dec
ja
mov
pop
fwait
xor
imul
js
dec
xchg
fmull
movsl
pop
dec
push
lods
imul
mov
push
ljmp
or
ds
out
cwtl
stc
in
cmp
mov
in
idivb
into
std
sti
leave
sti
iret
jmp
ja
packuswb
add
test
xchg
add
aas
ljmp
or
push
ror
sub
shrb
and
add
jne
dec
mov
push
mov
adc
push
adcl
xchg
mov
mov
mov
je
mov
insb
sub
movsb
dec
addb
lock
mov
and
xor
out
jns
or
aad
shlb
pop
mov
orl
or
add
lods
cmp
lret
jecxz
lock
fdivrs
loopne
push
popf
fwait
mov
cli
in
pop
fwait
mov
sbb
adc
sub
mov
ss
arpl
out
stc
mov
adcb
cli
sbb
sub
pop
sub
adc
mov
cmp
fistl
xchg
xor
and
std
arpl
out
jno
outsl
dec
int3
and
dec
imull
inc
inc
movsb
and
adc
xor
add
add
mov
xor
jb
mov
add
add
add
das
ret
push
jne
movsl
lret
hlt
xchg
icebp
xor
jbe
push
dec
loop
push
fimuls
arpl
lock
aam
aad
push
add
adc
sbb
shrl
add
repz
push
test
mov
cmp
add
xchg
xchg
add
push
ret
adcb
sbb
jbe
pushf
imul
jnp
pushf
dec
imul
jae
lret
in
je
and
sbb
or
out
popf
lods
pop
lds
sbb
mov
je
aas
in
nop
enter
pusha
ljmp
scas
cmp
or
test
pop
adc
xor
dec
aad
shll
inc
push
lods
or
xchg
push
dec
pop
add
insl
fldl
pop
cmc
nop
iret
sub
sbb
pop
xchg
loop
int
arpl
mov
xchg
fidivl
fwait
mov
or
jg
mov
sahf
loop
je
sub
roll
add
add
fiaddl
xlat
jg
shll
cmpsl
repz
lahf
cmp
scas
mov
fbstp
sbb
inc
sub
scas
mov
pop
xchg
add
cmp
mov
loop
adc
xor
xor
lea
jo
test
or
fldcw
cmpsl
sub
negb
mov
adc
out
outsb
leave
push
mov
dec
sub
xor
xor
cmpsl
jg
or
mov
or
or
rcl
sub
cmp
inc
dec
aas
xchg
out
popf
ret
iret
mov
adc
notb
ret
scas
fldenv
dec
les
inc
call
mov
xlat
add
or
ret
mov
mov
mov
sbb
sbb
arpl
movsb
cmp
inc
xor
sar
lret
mov
add
add
inc
enter
pushl
cld
sbb
addr16
add
add
mov
lcall
jbe
lea
push
roll
cmp
icebp
test
and
rclb
fsts
xchg
or
lods
addr16
in
mov
mov
aad
adc
push
test
mov
xchg
push
test
adc
jp
outsl
in
test
popf
dec
fidivs
ljmp
sub
jecxz
xor
and
sbb
insl
push
test
xor
xor
mov
mov
push
hlt
pop
dec
loopne
lods
cltd
out
push
sbb
push
shlb
dec
xor
mov
jnp
aas
lahf
ljmp
out
pop
push
jmp
mov
fwait
and
roll
movsb
adc
mov
mov
push
popl
sbb
int3
clc
andl
lea
xchg
loop
mov
xchg
mov
das
arpl
mov
jae
cltd
jecxz
mov
add
xlat
pushf
shrb
lcall
mov
ret
add
add
add
cmpsb
or
inc
es
pop
adc
imul
cwtl
gs
jle
cmp
iret
dec
mov
xor
mov
outsl
aad
jo
fs
sbb
mov
lods
repz
mov
mov
or
pop
or
je
push
adc
rorl
notl
add
mov
push
adc
sar
push
mov
pop
add
lahf
push
lds
mov
jae
mov
mov
inc
test
ljmp
or
lods
inc
mov
inc
mov
or
xchg
xlat
in
jecxz
and
inc
icebp
arpl
stc
into
aam
inc
in
jl
nop
jle
lods
sbb
xchg
dec
ljmp
or
push
stos
sbb
mov
jno
jecxz
pop
out
es
jb
inc
loopne
dec
cmp
mov
mov
cld
shlb
movsb
add
sub
ss
add
test
mov
aas
scas
fnstenv
shlb
add
add
popf
lods
insb
jmp
test
and
xlat
test
mov
xorl
outsl
test
jl
mov
mov
or
mul
xchg
mov
inc
adcb
adcb
lods
cmc
cmp
cmpb
xlat
jecxz
and
lods
mov
push
xor
push
popa
or
addl
xor
icebp
adc
orl
jno
xchg
push
sbb
icebp
xchg
xchg
rorl
push
ljmp
jge
mov
das
jl
scas
push
sub
je
fldcw
imul
hlt
es
sarl
lock
jbe
gs
subl
rorb
pop
mov
stos
in
aas
pop
fwait
test
out
adc
dec
sub
sbb
xchg
inc
jp
sub
sub
or
jg
jne
jne
jg
loop
mov
movsl
lds
add
add
add
int3
mov
adc
in
xor
sbb
std
sbb
xchg
cld
ljmp
pop
aam
xor
fmuls
or
popf
cmp
shrl
faddl
inc
andb
lea
sub
xor
addl
pop
stos
or
push
jmp
dec
stos
jmp
and
jmp
pop
dec
jno
outsl
inc
cs
or
pop
sub
sub
lods
jecxz
fst
das
cli
fstpt
push
adc
mov
jo
mov
out
leave
cli
aad
mov
lds
or
or
push
inc
les
mov
xor
jns
clc
push
in
mov
add
cmpsl
lret
and
rclb
sbb
aaa
lock
jle
cs
mulb
cmc
in
xor
aad
int
test
push
in
and
ret
cwtl
dec
jns
scas
mov
jecxz
push
push
sub
sbb
mov
cmc
mov
mov
add
add
add
sub
mov
and
sub
call
pop
mov
stos
push
popa
xchg
icebp
adc
stc
in
addb
dec
iret
popa
dec
testl
adc
scas
or
shll
test
dec
call
scas
sub
dec
imul
sbb
mov
jl
fdivrp
xchg
aaa
in
cli
out
bound
je
mov
test
in
stc
es
or
mov
xor
and
push
repz
lea
xor
dec
test
adc
push
sub
xchg
popa
leave
shll
mov
flds
pop
pop
jno
ja
int3
rep
lret
decl
cmp
adc
addl
dec
mov
test
mov
test
pop
out
cld
jecxz
lea
loop
xor
and
outsb
jle
lods
testl
movl
add
xor
dec
shrb
jne
add
cmp
and
adc
mov
cs
pop
clc
in
mov
mov
cmp
jns
aaa
lcall
adc
ljmp
push
dec
lock
or
xchg
sahf
sahf
scas
nop
lret
lret
movsb
pop
inc
push
scas
loopne
or
adc
lcall
pop
push
jl
ds
sbb
iret
shl
test
mov
in
in
outsb
mov
aam
cmp
and
outsl
dec
sti
test
xchg
sub
pop
mov
mov
out
xchg
xlat
lds
shlb
sub
push
cmp
mov
mov
outsb
fs
lods
add
add
jecxz
jno
outsl
shlb
mov
jg
std
or
fimull
mov
dec
lock
lods
adc
add
add
mov
xchg
insb
stc
mov
daa
addr16
add
add
gs
or
out
adc
inc
or
in
push
xabort
sbb
adc
lods
bound
pop
jp
pop
and
int
inc
cmp
or
test
icebp
sbb
pushw
nop
nop
sbb
push
test
or
push
xor
repnz
and
jae
adc
sub
loope
mov
das
ss
pop
clc
pop
jg
xor
lea
pushf
xchg
ud1
push
fsubp
test
or
inc
stos
push
mov
inc
cmp
sub
es
pop
cwtl
jb
mov
into
xor
addr16
fiaddl
int3
shrl
cmp
xchg
in
and
jns
adc
sbb
cmp
rcll
out
mov
sbb
jp
push
gs
enter
cltd
les
mov
pusha
jge
enter
je
adc
pop
jp
jne
lods
lahf
test
add
add
out
sti
xlat
in
aad
jmp
leave
add
add
add
mov
aaa
xor
jo
scas
stc
out
xchg
fadds
rorl
imul
xor
je
push
cmc
and
mov
pop
call
pop
xchg
sahf
adc
pop
jno
cmc
mov
das
enter
jg
xchg
sar
xchg
jp
clc
adc
jns
cmc
unpckhps
aas
jecxz
rclb
mov
stc
testb
and
mov
xor
ror
stc
mov
ret
shl
fsubrl
mov
cmp
les
add
addl
cmp
icebp
dec
divl
pop
fstl
je
clc
or
je
imul
push
cs
rolb
ja
and
int
mov
xchg
in
dec
or
inc
dec
mov
xor
out
movsb
sub
cmp
aas
in
sbb
dec
movsl
call
ds
sub
cmp
jg
and
mov
ds
ljmp
add
int3
jne
xchg
xchg
cli
pop
dec
xchg
add
jne
call
pop
mov
dec
xchg
jbe
xor
adc
pop
cld
popf
pop
inc
out
test
sub
mov
test
sub
push
rcrl
jo
sti
repnz
mov
sbb
fnstcw
sub
cli
dec
dec
aam
jne
fisttps
jecxz
insl
inc
call
in
mov
bound
and
arpl
aam
sub
push
xchg
dec
push
adc
ss
mov
jnp
dec
push
mov
les
mov
mov
test
lds
aas
xchg
lcall
jo
enter
sub
xchg
cmc
jns
mov
push
mov
repz
mov
jbe
lahf
cs
mov
and
xor
mov
sub
push
or
ret
jmp
ds
repz
fcoms
or
xchg
mov
add
add
add
ficoml
or
addr16
out
push
les
seta
nop
sbb
pushf
or
fs
sbb
xor
shrl
test
fisubs
ficompl
ss
rolb
pop
das
jge
fcomps
lret
dec
insb
loope
pop
and
movsb
pop
pusha
enter
lret
ret
xchg
mov
clc
rol
lahf
imul
iret
movsl
jno
xchg
test
jg
unpcklps
divl
lret
mov
mov
fwait
fwait
shrb
jo
jecxz
clc
pop
jle
add
pop
mov
mov
fistps
xchg
xchg
xchg
jmp
nop
out
fwait
in
sbb
aam
xchg
jmp
leave
mov
mov
sti
ret
cli
sub
sub
movl
popf
add
and
push
mov
dec
ja
mov
sti
xchg
mov
mov
mov
aas
mov
mov
int3
add
add
add
add
scas
dec
loopne
outsb
mov
movsl
rcrb
scas
testl
push
pop
sahf
je
lcall
inc
mov
subb
lret
pop
mov
jge
and
repz
mov
out
fidivl
lea
repnz
out
in
mov
inc
cmp
mov
inc
add
jmp
sbb
pop
clc
cmp
push
mov
test
pop
aad
add
inc
xchg
subb
scas
nop
jp
ljmp
xchg
popa
xchg
push
pop
test
movsl
sub
les
xchg
or
popf
lcall
pop
cmp
nop
and
shr
lds
fwait
scas
mov
push
xor
jo
adc
pushf
lds
inc
dec
cli
lds
sub
shr
lods
out
add
push
imul
stc
enter
in
sbb
push
inc
daa
addr16
add
add
add
lods
pop
or
lock
xor
add
test
out
rol
mov
rclb
mov
fists
mov
xchg
in
test
mov
scas
xchg
inc
fwait
xchg
stos
jo
ja
pop
aad
add
pop
loopne
inc
sub
call
jne
pusha
xor
in
add
inc
adc
daa
xor
js
jo
popa
xor
jnp
inc
xor
js
int3
scas
into
movsb
aas
pop
popa
or
movl
ja
add
aam
xor
pop
pop
push
sarb
ja
das
test
push
imulb
imull
cmpsb
mov
jno
cmp
xchg
testl
mov
andl
xor
sahf
je
xor
in
dec
mov
test
sub
push
test
arpl
insw
testb
fs
inc
jne
imul
cmc
call
inc
push
popa
mov
into
add
add
add
fimull
adc
xor
add
sbb
and
mov
mov
mov
mov
jmp
loope
lcall
jne
sahf
push
cwtl
movsl
int
add
insb
insl
or
bound
jbe
les
sub
xchg
cmp
cmp
jle
loope
push
inc
pusha
shll
jp
xor
add
shl
fbld
call
scas
cmp
imul
adc
jecxz
ret
and
aam
xchg
xor
fisubl
xchg
dec
aas
pop
fcoml
xor
cmpsl
mov
sbbb
fnstenv
mov
and
dec
cmpsl
mov
stc
jl
fldcw
ds
cmp
int3
out
cmp
mov
mov
adc
dec
cmp
divb
fidivrl
movsl
mov
lods
hlt
mov
pusha
insl
pop
nop
test
movsl
mov
iret
sub
jecxz
dec
addr16
add
add
add
push
in
aaa
xchg
dec
movsb
cmp
fldl
xchg
push
mov
mov
lods
mov
cmp
fimuls
mov
push
and
mov
lea
cs
cmp
adc
testl
push
or
jle
adc
mov
and
loop
xor
lahf
insb
repz
push
jle
add
sarb
xchg
stos
addl
cmp
loop
icebp
sti
sub
pop
enter
lods
pop
clc
jecxz
mov
ret
lea
je
jb
shrb
loopne
mov
adc
xchg
jl
jo
test
add
mov
xchg
stos
pushf
or
rcll
cmpb
jl
xchg
ja
ret
stos
int
dec
ffree
int
data16
cmc
mov
jecxz
ja
scas
xor
ret
decb
in
lret
mov
out
out
out
into
gs
cld
test
dec
rolb
add
add
add
cld
inc
repz
and
inc
aad
lret
in
test
jecxz
pop
mov
iret
ljmp
js
adc
xor
loop
add
mov
pop
and
inc
cwtl
mov
mov
mov
stc
dec
mov
iret
outsb
test
in
lods
clc
sbb
dec
outsl
add
daa
mov
mov
mov
sbb
push
lret
mov
int3
loopne
sarl
je
ret
mov
pushl
add
roll
js,pn
jae
add
mov
stos
sbb
out
inc
mov
mov
sub
mov
jecxz
dec
out
imull
out
xor
stc
out
dec
and
repnz
adc
test
dec
lcall
sub
and
repnz
lret
jns
sub
inc
lds
adc
mov
loop
or
xor
mov
add
add
xchg
and
je
out
mov
push
push
mov
roll
add
add
add
or
mov
mov
inc
and
cld
mov
int
cmp
xchg
mov
pop
aad
mov
pop
lahf
movsb
xor
and
rol
ljmp
lds
outsl
addr16
pop
pop
or
rcrb
adc
mov
out
arpl
orl
fiaddl
xchg
add
loope
pop
shll
inc
in
jo
adc
mov
clc
pop
mov
stos
xchg
icebp
mulb
leave
adc
sbb
pop
jge
test
cli
pusha
xchg
xor
imul
xor
insl
mov
fwait
mov
adc
les
lock
push
sarl
inc
fldcw
push
nop
stos
push
push
or
jb
and
jns
cmc
pop
cmp
dec
cmp
icebp
sbb
pop
mov
dec
cmp
inc
jb
xchg
in
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
icebp
dec
push
sbb
add
add
add
arpl
inc
dec
or
sbb
loop
mov
repnz
ja
or
shrb
lahf
push
ja
jecxz
hlt
sub
sub
and
les
xchg
clc
inc
andb
and
mov
outsl
out
into
cmc
add
inc
dec
mov
fstsw
dec
fimull
testl
out
jle
cld
hlt
jmp
jle
jo
sbb
xchg
fstpl
fstpt
xchg
fisttps
clc
cmpsb
lods
aad
xchg
fcmovu
mov
jne
call
jnp
dec
mov
adc
js
dec
orb
sub
push
pop
xchg
pop
js
and
shll
inc
xor
inc
fdivp
mov
bound
jp
xchg
inc
mov
jmp
xchg
sahf
outsl
or
and
aad
rorb
mov
xor
wbinvd
push
sub
pushf
mov
call
out
lahf
ret
or
pop
dec
inc
roll
add
add
add
ror
mov
gs
mov
mov
addl
sbb
inc
loop
imul
aas
sub
out
pusha
shlb
rcl
push
fbld
dec
aad
inc
pusha
lcall
aaa
or
out
dec
pop
or
stos
mov
push
adc
push
push
fistps
push
dec
test
sbb
sbb
outsl
sub
int3
xlat
in
cli
mov
add
jns
jne
lret
das
fsubs
jnp
cmpsl
sti
mov
jp
or
inc
ljmp
out
pop
mov
sub
add
xchg
xor
pop
xor
lret
out
jae
mov
xor
cmp
imul
outsl
cmp
xchg
cmp
out
das
push
and
insl
shlb
inc
pop
and
xchg
lds
cli
aaa
test
add
pop
or
xchg
std
stos
inc
inc
and
hlt
push
mov
js
mov
mov
mov
pop
xchg
or
and
add
add
add
cvttps2pi
test
hlt
cld
insb
adc
mov
stc
inc
mov
ret
push
sub
fiaddl
jno
jb
pushf
fdivrs
mov
fdivl
lock
sbb
jns
in
test
addr16
ss
sbb
jne
xchg
or
inc
mov
pop
push
test
sbb
inc
push
negb
sar
dec
cwtl
gs
pop
js
rcll
push
test
xchg
inc
shrb
mov
test
incb
int
cwtl
cmp
jl
push
cmp
incl
lock
je
push
rorl
idivb
lcall
inc
cmc
loope
sub
fbld
mov
addr16
cmc
cmp
cmp
push
inc
dec
lahf
mov
adc
xlat
cld
jae
sub
sahf
sarl
xchg
cmp
mov
xor
add
sbb
sub
dec
dec
jge
pop
addr16
add
add
add
addb
sub
test
push
stos
xlat
jecxz
pop
mov
or
insl
and
insl
rcrb
mov
add
test
icebp
cmpsl
xor
out
aam
pop
mov
in
out
dec
loopne
push
adc
push
out
xchg
loop
in
sub
add
call
mov
outsb
xchg
daa
xchg
out
test
addl
or
push
das
xchg
dec
mov
in
test
in
add
sahf
popf
mov
dec
xor
dec
adc
std
sbb
push
jbe
lea
repz
mov
mov
movsb
scas
xor
in
sub
push
stos
add
pop
mov
outsb
inc
lahf
sbb
or
iret
shl
out
inc
dec
push
push
push
mov
dec
mov
xchg
pop
xchg
stos
out
sbb
mov
pushf
adc
ds
jae
movsl
mov
add
add
add
cltd
popa
sub
xchg
rcrb
sub
xchg
cld
or
push
fstl
pop
mov
popa
push
cmp
sbb
cmp
inc
mov
mov
clc
icebp
mov
xor
sbb
dec
adc
mov
inc
in
xchg
xchg
lret
cmp
dec
test
lods
push
pop
xchg
xor
mov
fwait
aad
test
xor
arpl
mov
je
push
data16
and
jae
pop
ja
push
mov
movb
cmp
xchg
jae
sahf
bound
scas
jb
mov
lret
jle
sub
int3
mov
dec
and
jl
push
dec
push
fwait
movsb
or
mov
lock
inc
outsb
dec
inc
mov
adc
push
scas
mov
sub
inc
add
cmp
sarl
mov
out
leave
xor
int3
cmpsl
jp
push
test
xchg
and
idiv
lahf
insl
mov
or
hlt
xlat
add
add
add
imul
dec
orb
dec
lcall
stos
lret
aaa
out
dec
lahf
imull
mov
scas
add
flds
pop
movsb
in
outsb
mov
clc
mov
frstor
paddd
out
stc
sbb
xor
sbb
mov
lcall
rcl
scas
mov
in
adc
mov
mov
ss
adc
dec
bound
aad
mov
outsl
xor
add
pop
jl
jb
push
jl
xchg
pop
dec
popf
fs
push
inc
lods
sbb
mov
pop
fs
mov
pushf
testl
sti
adc
leave
dec
pop
bound
ret
xor
stos
push
and
pop
in
adc
cmp
mov
insb
mov
add
cmp
gs
imul
pop
lcall
imul
clc
rcl
lods
lahf
jno
jnp
out
lock
add
cmp
jg
leave
or
mov
mov
add
add
add
sbb
adc
imul
jge
or
shr
inc
xor
mov
aaa
lahf
or
aam
jg
ja
xchg
mov
sbb
push
nop
dec
cmp
movsb
add
dec
push
movsl
dec
negl
cmpsl
dec
ja
adcb
inc
nop
inc
sbb
fsubr
shll
pop
insb
ja
dec
and
aaa
lock
nop
rclb
cmp
dec
inc
jl
jae
and
outsl
and
mov
fsubrs
xlat
mov
setl
mov
dec
xchg
mov
adc
movsl
sbb
xchg
out
mov
ljmp
dec
test
or
fwait
cs
push
xchg
imul
xor
imul
in
jl
repz
call
daa
shll
fstpl
add
cmp
push
int3
cs
mov
testl
imul
xchg
movsb
cli
test
xchg
flds
add
add
add
mov
xor
cmp
mov
pop
insl
shll
js
data16
scas
and
cmp
push
xchg
sbb
cmpl
xor
stos
repz
pop
mov
jb
dec
stos
xchg
scas
enter
arpl
lods
out
jg
lods
mov
dec
jb
xchg
out
xchg
xchg
jae
push
push
mov
fwait
mov
sub
mov
rcrb
or
dec
imul
dec
dec
in
jle
push
xchg
movsl
leave
movsb
push
or
inc
lods
ret
fdiv
js
cltd
mov
xorl
cmpsb
mov
shlb
sub
imul
icebp
or
sarl
scas
xchg
pop
adc
iret
push
mov
test
add
mov
mov
jg
cltd
and
mov
std
jns
iret
dec
cmpsl
cmp
cmpsb
jecxz
dec
ds
add
out
fldcw
push
in
sub
xlat
fiaddl
add
add
add
sahf
inc
xchg
es
leave
sarl
ja
incl
or
fadds
adc
inc
mov
jbe
or
les
lods
out
mull
mov
xor
mov
fs
outsl
jmp
push
sbb
xchg
lret
mov
addr16
cmp
aam
mov
in
push
imul
test
xorl
mov
scas
sbb
int3
jecxz
xor
dec
mov
add
dec
dec
iret
stos
clc
cmp
clc
stc
push
mov
mov
je
outsl
lds
jl
out
test
inc
insl
in
setns
pop
lds
cmp
dec
xchg
xchg
xchg
and
lock
dec
adc
outsl
fdivp
mov
jg
fsubrs
inc
xor
dec
ret
aas
adc
push
add
enter
ljmp
sbb
add
lods
scas
sub
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
xor
add
add
bound
cmp
push
dec
and
das
xchg
stos
sar
lods
addb
imul
lret
push
or
imull
dec
jne
mov
sbb
cltd
ljmp
adc
lods
outsl
in
out
rcrl
psadbw
sub
mov
push
cmp
mov
sbb
inc
or
in
pop
cwtl
sbb
cld
or
adc
add
mov
jl
flds
int
call
dec
mov
pop
cltd
fxch
xchg
push
xchg
inc
inc
iret
arpl
fcmovbe
ja
push
rolb
dec
outsb
fs
aas
or
and
mov
mov
mov
stc
loopne
loop
sti
add
jmp
loope
rcrl
dec
das
mov
and
add
lea
je
jge
push
mov
enter
push
mov
fisubrl
aas
xlat
fwait
pop
fnstcw
sbb
add
add
jle
jg
std
fstpt
insl
dec
andb
add
add
add
push
dec
lea
mov
push
xchg
hlt
mov
mov
aaa
dec
xor
jbe
negb
xchg
jb
ret
lcall
jmp
mov
rolb
jo
pop
cmp
xor
rcrl
pop
ficomps
data16
scas
jne
xorb
ss
or
das
daa
in
xor
cmp
pop
cmc
shlb
jb
jno
std
adc
ret
mov
dec
mov
shll
or
xchg
test
fsub
sub
mov
xor
or
or
dec
jp
pop
mov
mov
pop
and
outsl
leave
rorl
pop
mov
add
mov
test
lcall
fwait
xchg
mov
xlat
adc
ja
xchg
mov
push
inc
outsb
lret
std
mov
cmpsl
dec
push
xor
incl
add
add
mov
sti
idiv
lods
pop
sbb
and
fldl
add
add
add
and
sub
aam
pop
cltd
aad
outsb
xchg
leave
sbb
xorl
imul
xchg
and
pcmpgtd
rcll
pop
ljmp
jle
es
jbe
or
aad
inc
loop
enter
mov
dec
leave
subl
sub
pop
jno
lret
pusha
fdivl
mov
jns
out
leave
sbb
xor
xor
sub
fwait
lods
je
push
mov
cli
inc
cmpsb
xchg
cmp
sbb
rcll
aaa
mov
add
outsl
xchg
movzwl
adc
sub
scas
inc
dec
int3
popa
push
push
mov
lds
mov
pop
test
aas
mov
sbb
add
jle
sub
lahf
mov
pop
xor
aas
pop
std
or
push
jl
fiaddl
in
arpl
sti
inc
in
inc
test
dec
les
stc
je
mov
and
mov
add
add
sbb
jmp
scas
inc
call
fiadds
add
add
add
fistpl
cltd
notl
mov
pop
dec
pop
rorl
fsubl
sbb
mov
sub
outsb
xor
xchg
insb
mov
or
mov
lods
into
call
dec
xchg
bound
addl
sahf
sub
out
adc
ds
in
ret
cmpb
mov
lcall
jge
xchg
pop
dec
xor
mov
xor
or
sub
adc
cs
cld
mov
xchg
pop
int
int
mov
call
out
lods
inc
bound
mov
popf
testb
cmp
lods
mov
insl
loopne
lds
cmpsl
ljmp
pop
push
lock
dec
imull
mov
out
jns
pop
sahf
outsl
or
adc
push
std
lcall
out
outsl
ljmp
or
aas
push
push
mov
fcmovb
xchg
mov
jl
orl
cmpsl
fimull
faddl
stos
pop
filds
add
add
add
imul
mov
sbb
lret
mov
push
popf
cmp
xchg
jnp
push
out
pop
adc
into
jmp
push
adc
outsl
pop
shrb
push
or
scas
fwait
xorb
in
jle
jns
mov
icebp
imulb
daa
mov
ret
cmp
jnp
and
push
jo
adc
mov
lock
inc
int
inc
or
xchg
sub
dec
int
pop
test
test
fidivrl
insb
push
aaa
je
xchg
test
mov
bound
out
mov
or
repnz
cs
sarl
pop
test
insl
ret
pop
jle
cmpsl
mov
sbb
inc
xchg
sub
in
mov
in
testl
and
scas
jle
dec
adc
sar
or
mov
pop
or
push
xchg
mov
lock
or
insb
ss
fldcw
jg
mov
lcall
fisttps
or
loopnew
add
add
add
test
stos
dec
pop
testb
cmp
xor
dec
je
jecxz
push
js
lods
cmp
xchg
hlt
xchg
push
fimuls
adc
mov
ljmp
push
pop
sub
inc
cmp
std
pop
je
add
push
call
xchg
sub
jl
in
xchg
mov
adc
addl
iret
jl
mov
loop
mov
adc
lcall
sti
std
xchg
or
mov
popa
sahf
rcll
jmp
ret
loope
fbstp
test
xchg
and
jae
mov
mov
sub
mov
and
lock
mov
mov
ss
add
xchg
imul
insl
jl
dec
ja
jnp
sub
stc
add
inc
sub
in
sahf
sarl
sbb
pop
lcall
add
sbb
jns
xchg
xchg
mov
cmp
loopew
add
add
add
cmpsb
fisubrs
int
mov
jge
movsb
xchg
xorl
sbb
outsl
inc
sbb
insl
sti
lret
fildl
adc
aaa
cwtl
pusha
sub
popf
cmp
jmp
sbb
mov
jge
and
jl
orb
xchg
push
add
fucomp
push
pop
repnz
pusha
pop
jae
xchg
pop
data16
icebp
sub
push
lods
cwtl
dec
mov
mov
js
sub
shrl
jnp
dec
mov
jl
enter
scas
xor
cmp
test
mov
movsl
shl
loopne
flds
imulb
and
sbb
mov
add
sub
fsubrl
push
add
mov
or
xchg
bound
dec
or
mov
loop
gs
aas
mov
mov
mov
sub
push
or
shll
add
add
fadd
fsubp
jnp
or
cld
les
loop
add
add
add
cs
dec
scas
jg
loope
fildl
mov
and
mov
imul
xchg
pop
hlt
mov
xor
clc
stos
sahf
pop
sub
int
pop
pop
shlb
cmc
dec
sbb
rcl
arpl
mov
ss
stc
jle
xor
xchg
out
nop
movsb
or
jecxz
andl
mull
jbe
xor
xor
xchg
or
fbstp
cvtdq2ps
dec
cmp
xor
jmp
fnsave
jle
pop
data16
fistpll
mov
inc
sar
les
jge
ret
repnz
cli
mov
pop
cmp
mov
test
ja
mov
pop
cli
cmp
or
inc
inc
jnp
std
inc
xchg
sahf
and
xor
push
mov
aam
and
push
rolb
divl
push
adc
sbb
cmpsl
out
fcoms
push
cmp
sub
cld
cli
jle
dec
nop
xor
and
jcxz
add
add
add
rclb
in
mov
push
jmp
mov
enter
xor
pop
xchg
lret
sub
shlb
sub
push
insb
dec
std
clc
fiaddl
dec
cs
lock
fisubs
sub
cmp
aam
inc
jecxz
inc
xor
cmp
aaa
add
neg
mov
popa
enter
cmpsl
movsl
xchg
pop
movsl
sbb
xor
cmp
pop
cmp
pop
scas
std
sbb
pop
mov
jge
sbb
call
movsl
xchg
add
adc
stos
aaa
sbb
sub
aam
jg
xor
cmp
fildll
dec
xchg
orb
cmp
mov
fdivr
aas
mov
ljmp
adc
sub
lcall
loop
in
sahf
mov
jecxz
fmuls
mov
daa
xchg
mov
inc
add
repz
add
add
ja
sti
aaa
out
ja
repnz
in
add
add
add
push
jge
jg
xor
xor
fists
inc
dec
mov
popf
test
add
filds
cmp
cmp
notb
inc
incl
out
push
push
inc
add
rclb
lahf
subl
imul
in
lds
arpl
gs
std
aas
mov
imul
pop
push
lods
out
sbb
add
lret
lahf
mov
jno
sbb
cmc
cmp
fwait
mov
cli
fwait
lods
arpl
sub
jne
adc
mov
test
mov
imul
or
mov
pop
pop
inc
insb
je
sub
mov
push
in
scas
fstpt
aaa
out
cmp
int
repnz
push
jecxz
jne
cs
negl
mov
out
ljmp
push
cmpsl
negl
popf
lahf
push
adc
mov
int
fldcw
xor
add
add
into
arpl
pop
xchg
aaa
pushf
pop
out
jno
in
add
add
add
clc
push
xchg
fsubs
pusha
addr16
data16
mov
xchg
mov
jo
lret
cmp
pusha
sti
movsl
inc
or
cmpsl
mov
in
rorb
pop
out
cmpsl
faddp
xor
push
pusha
push
mov
movsb
push
add
stos
xlat
jbe
les
enter
pop
cmp
xor
pop
popa
mov
repnz
lret
xchg
add
jnp
mov
cmp
rcll
and
es
mov
addr16
dec
xor
push
ret
jbe
push
and
cli
adc
arpl
jg
and
idivl
mov
pop
jl
cmp
mov
adc
rclb
dec
xlat
sub
mov
pop
cmp
mov
dec
ret
mov
add
hlt
pop
push
mov
sub
mov
sub
addb
or
add
cltd
cmc
adcb
fcos
pop
mov
lahf
addr16
add
add
add
in
lods
jmp
cltd
cltd
pop
movsl
stos
sbb
jnp
jl
xchg
sar
sbb
sbb
addr16
xor
add
sbb
shlb
in
sahf
gs
or
je
xchg
inc
pop
cld
rcrl
lahf
out
pop
push
xor
cmp
f2xm1
mov
mov
rcr
inc
xor
pop
inc
jno
xor
jno
mov
nop
dec
mov
stos
cli
repz
jo
push
shll
push
add
shlb
ja
test
in
outsb
dec
push
cli
insl
xchg
int3
inc
mov
ret
mov
les
or
pushf
jmp
mov
xor
adcb
xchg
orl
dec
jecxz
fs
in
mov
dec
lret
sbb
pushf
scas
cmc
jmp
mov
add
rol
bound
add
pop
pop
enter
sbb
repz
lock
jg
in
and
sbb
add
add
add
cmp
fildl
and
add
add
pop
sbb
xchg
in
and
inc
sbb
pop
dec
inc
fldlg2
mov
mov
cmpsl
dec
xchg
outsb
jo
ret
lods
cmp
fucom
adc
mov
call
movsl
bound
dec
inc
hlt
mov
ja
push
cwtl
stc
or
ror
testb
xor
cmp
or
cmp
push
dec
out
jae
or
dec
cmp
push
and
aaa
loopne
in
fninit
xchg
add
cmpl
rol
dec
xchg
dec
popf
ret
cmp
into
jp
adc
mov
sti
pushf
pop
cmp
loope
sbb
bound
rcrb
dec
xchg
mov
pop
clc
in
loope
inc
outsb
mov
xor
mov
sub
jl
and
dec
pusha
push
incb
xchg
mov
mov
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
push
cltd
andl
add
add
add
xlat
pop
stc
sbbb
bound
fstps
test
imul
cld
js
lea
xor
or
lds
stc
inc
xchg
adc
add
sub
in
push
lods
pop
push
movsl
cmp
mov
add
test
and
dec
xchg
xchg
mov
fsts
bound
cmp
int
xchg
fildll
jbe
outsb
mov
xor
sbb
scas
push
mov
mov
push
loopne
jae
lret
ror
shlb
rorb
cltd
cmpsl
xor
cli
sbb
jmp
pop
addl
xor
push
scas
or
and
mov
fdiv
rcl
lods
and
xchg
mov
icebp
or
shll
in
aaa
es
mov
mov
mov
lods
xchg
scas
dec
push
in
and
das
faddp
cli
and
push
jnp
negl
push
add
add
stc
mov
dec
js
stc
mov
dec
int
sar
out
addr16
add
cmpsb
cmp
jl
daa
into
rol
and
jle
fbstp
mov
js
push
mov
cli
ret
les
add
stc
cmp
xchg
pop
out
mov
in
sbb
inc
je
push
lea
stc
aaa
pop
je
cmc
sub
xor
bound
dec
mov
mov
fstl
adc
xorl
and
xor
psadbw
jle
sub
sub
aaa
mov
mov
add
push
push
push
fnstcw
movsl
add
fsubrs
xchg
in
int
xor
daa
mov
inc
andb
aad
jae
mov
push
stos
adcl
mov
xchg
and
and
fucom
stos
invd
pop
xor
shrb
shrb
fmull
aad
mov
popf
push
pop
mov
add
add
insl
repz
fwait
jns
jns
mov
mov
add
add
add
subb
mov
dec
mov
jbe
and
frstor
pop
and
add
cmp
jl
fsubrl
test
push
shlb
sahf
movsb
mov
cmc
mov
inc
test
xchg
movsb
bound
xor
push
in
fs
lahf
or
lods
jg
push
push
scas
out
mov
mov
arpl
xchg
push
ldmxcsr
lds
adcb
movsb
sti
xchg
jb
push
and
test
jne
or
pop
xor
push
movsl
push
jbe
jl
sbb
cmc
scas
cmp
jb
sbb
adc
das
cmp
addr16
outsl
jmp
dec
push
dec
lods
mov
mov
mov
dec
xchg
inc
push
cmpsl
adc
pop
push
ss
lock
xor
mov
add
cmp
jnp
adc
jne
jecxz
push
and
add
add
add
jp
lret
sbb
xchg
inc
adc
scas
in
xchg
ljmp
mov
repnz
xchg
insl
out
inc
jno
sbb
js
out
clc
xchg
add
xchg
dec
jge
jg
aam
std
aad
xor
fcompp
cmp
mov
mov
jp
add
jge
mov
popf
cltd
lahf
sti
sahf
sbb
cmp
sub
jb
pop
test
test
in
hlt
xchg
jp
addr16
jno
arpl
pop
lds
inc
inc
aas
fildll
ja
les
pop
and
mov
popf
dec
inc
or
mov
sub
insl
cli
cmpsl
in
xor
mov
push
lea
or
mov
movsl
sti
repz
pop
cmp
hlt
jge
add
cld
fildl
aas
mov
icebp
inc
pop
imul
icebp
out
lods
xor
aas
xlat
fistl
das
call
adc
addr16
add
add
add
leave
je
pop
pop
mov
push
add
shll
inc
lods
xchg
push
sub
movsb
xor
dec
mov
sub
cmpsb
sub
arpl
sbb
test
or
add
cmc
inc
or
rol
cwtl
cld
aad
jg
xchg
aaa
ds
sub
lea
sub
sbb
xchg
push
arpl
push
inc
movsb
mov
dec
loop
ss
push
jnp
test
decl
mov
pop
cltd
jge
sarl
inc
icebp
jb
push
loope
test
jnp
lock
xchg
mov
cmp
jnp
data16
sahf
jnp
out
add
loop
sahf
dec
inc
sub
cmp
in
test
and
xor
movsb
test
and
shlb
das
repnz
ja
lea
push
scas
sbb
addl
add
add
jb
scas
decb
fisttps
fcompl
sbb
add
add
add
cmp
mov
stos
sbb
lret
and
push
jae
lcall
rorb
loopne
jbe
mov
add
dec
mov
sbb
and
arpl
sbb
nop
xor
mov
les
dec
mov
call
mov
sbb
mov
add
sti
imul
pop
das
pusha
inc
ljmp
sub
das
js
xchg
xchg
fistpl
add
cli
add
pop
pusha
sbb
pop
jge
mov
ret
cmc
push
out
cmpsb
lret
sbb
pusha
sbb
sub
xor
pop
into
sub
mov
mov
jnp
popf
mov
inc
mov
rorb
jp
cmc
cmc
sti
clc
xchg
frstor
mov
mov
jmp
add
mov
lea
push
adc
aam
int
rcrl
add
xlat
mov
xchg
loopne
addr16
add
add
add
in
sti
mov
and
sub
fisubrl
push
mov
xor
sub
jle
adc
or
add
jno
ljmp
push
xor
or
stos
jg
pushf
mov
jmp
outsb
scas
std
ljmp
push
xchg
bnd
test
jl
or
pushf
decb
mov
out
es
rcrb
jo
inc
cmp
xchg
loop
out
cmp
mov
sahf
push
jge
cmpsb
lods
push
leave
pop
fldcw
lahf
jae
mov
jp
push
or
push
push
cmp
mov
in
fbld
stos
push
in
mov
clc
push
jbe
mov
int
and
lds
sbb
sub
rorl
in
jg
xor
xchg
std
ret
in
repnz
imul
adc
push
sub
sub
jne
or
stos
outsb
pop
inc
push
mov
xchg
mov
jge
cmpsl
pop
jle
imul
sub
addr16
mov
add
add
mov
aas
mov
data16
mov
out
add
add
add
jb
mov
aad
push
cmp
ja
adc
pop
jmp
jecxz
pop
mov
xor
pop
mov
imul
mov
and
daa
adcb
push
sbb
shll
test
sbb
xchg
xorl
in
sub
sbb
cltd
cmpl
sbb
xchg
jbe
push
cmp
outsb
cmp
leave
jb
movsb
mov
in
es
pop
insl
push
cmp
fidivrs
pop
test
ret
stos
sub
xchg
and
js
jg
mov
xchg
negl
or
cmc
inc
mov
xor
test
loopne
fnstcw
stos
gs
sbbb
mov
pop
mov
mov
push
jp
repnz
adcl
movsl
mov
adc
and
sub
adc
ud0
inc
cmp
aam
pop
inc
xchg
add
add
mov
sti
mov
nop
movsb
inc
mov
lock
add
add
and
inc
mov
mov
pop
xor
inc
fwait
cltd
leave
enter
ljmp
gs
aad
fiaddl
xchg
fwait
dec
jb
imul
mov
push
les
jg
dec
cmc
addr16
and
mov
push
mov
or
xchg
int3
sarl
into
test
jbe
cmp
movl
jecxz
scas
adc
cmp
stos
call
pop
push
fbstp
add
adc
and
adcl
test
and
ljmp
ret
fdivl
popf
scas
jecxz
scas
xchg
dec
testl
les
repnz
and
shll
test
shrb
insl
aad
mov
pop
and
les
mov
cmc
pop
mov
cmp
movsl
icebp
jp
ss
fs
out
xchg
or
cld
lods
cmp
inc
fstps
inc
loopne
or
add
into
adc
neg
jge
xchg
jns
xor
add
add
add
pop
mov
or
jno
sahf
rclb
jno
shr
jle
rcl
or
add
stc
ret
aaa
scas
jecxz
decb
mov
dec
fwait
je
hlt
movsl
out
xor
xor
out
pop
lods
xor
clc
shll
push
jnp
fnstenv
insb
sbb
nop
stos
cmp
pop
imul
push
jp
addl
adc
mov
call
jle
mov
jno
xchg
decl
fstsw
or
sbb
cld
pop
js
test
sbb
and
hlt
adcb
stos
jno
add
pop
leave
or
mov
xor
popa
test
loop
fbld
add
or
sbb
pushf
xor
jg
ret
data16
mov
outsl
adc
jg
mov
lods
inc
nopl
jmp
push
stos
push
xor
addl
inc
enter
mov
mov
add
add
dec
sub
sub
fidivl
in
pop
dec
repnz
add
add
add
add
xchg
mov
adc
stc
push
iret
add
filds
loope
push
adc
fisubrs
inc
cmp
outsb
testl
mov
dec
dec
dec
inc
scas
cwtl
mov
jmp
pop
jle
into
iret
jae
inc
sub
sbb
pusha
and
xchg
or
cwtl
jmp
cmpsl
into
bound
ret
lods
xchg
jbe
test
ds
adc
mov
stos
lods
int
push
outsl
jae
push
push
wrmsr
scas
fildl
cmp
push
dec
cmp
pop
xchg
fildll
cmpsb
jnp
outsl
sbb
test
std
xor
popf
popf
leave
mov
sarb
cmp
sbb
fwait
or
xor
lock
dec
dec
push
and
stos
jno
ret
jmp
into
fdivs
adc
adc
jbe
out
sbb
pop
mov
add
or
ret
ja
and
aaa
divl
xor
sti
repz
add
add
stos
and
add
and
pop
ror
sbb
shrb
xlat
and
ljmp
cli
push
rcll
xlat
sti
cmp
pop
mov
ret
or
lods
fdivrl
test
lea
push
xchg
shlb
sti
fs
fdivrs
cmpsl
sti
or
icebp
push
movb
push
sub
sbb
sub
mov
lods
mov
or
loope
leave
and
push
mov
lret
cmp
je
mov
and
mov
cmp
shl
xchg
xchg
inc
cmp
fwait
lea
out
dec
dec
dec
aas
test
daa
loopne
xor
dec
mov
pop
cltd
or
call
loope
ja
out
xchg
les
outsb
sbb
push
icebp
fs
jae
xor
jnp
gs
jle
dec
xlat
mov
cmp
into
pop
out
cwtl
adc
in
xchg
jecxz
jmp
mov
jg
dec
mulb
add
add
add
and
dec
pop
xchg
mov
lods
scas
cmc
xlat
addl
repnz
fsub
mov
inc
mov
add
pop
mov
pop
mov
and
inc
push
arpl
sbb
inc
fmulp
cmp
mov
and
dec
popf
xor
sahf
and
cmpl
jbe,pn
shll
mov
aaa
cmp
add
out
adc
lods
imulb
adc
ficompl
loop
push
jg
push
loop
pop
dec
push
and
bound
lds
into
xor
inc
or
sahf
xorl
cmp
adc
scas
pusha
push
or
fcompl
inc
add
data16
cmpsb
out
scas
sbb
fstpt
sbb
int
les
mov
adc
das
push
out
push
jge
jl
pop
ret
adc
and
mov
jle
jne
pusha
popf
pop
adc
cmc
add
add
add
mov
and
xchg
test
mov
in
dec
sbbl
ss
mov
test
or
jae
jmp
sbbl
pop
outsl
adc
ret
mov
je
call
enter
lods
jbe
mov
push
push
idivb
ret
idivl
lcall
out
out
adc
jb
cmp
outsl
pop
xchg
arpl
lods
aad
push
out
shr
cld
adc
iret
loope
pop
dec
inc
and
mov
in
lret
cmp
add
aad
pop
lods
mov
inc
sub
ljmp
icebp
pushl
repz
lret
push
add
fsubp
lea
inc
out
dec
mov
mov
in
sbb
push
aas
and
or
dec
out
dec
jp
xchg
lods
mov
inc
xchg
int3
mov
scas
mov
data16
add
sub
scas
fdivr
fnstcw
jecxz
test
testb
add
add
cs
hlt
inc
mov
push
xor
cmp
enter
daa
popf
jbe
fwait
cld
adc
pop
aas
inc
movsb
cmc
adc
in
sbb
cs
lahf
cmp
mov
xchg
clc
xor
mov
adc
ds
pop
sub
push
mov
insl
mov
nop
mov
mov
testb
fs
dec
cmpsb
cmp
push
xchg
sbb
imul
mov
jmp
arpl
sti
jno
insl
cmp
cmp
rcrl
in
cmp
mov
and
and
cmp
dec
scas
frstor
push
pop
dec
imul
pop
xchg
and
or
rolb
sbb
stos
jbe
adc
cltd
sti
and
or
cmpsb
movsl
dec
mov
mov
add
push
mov
stos
mov
xchg
mov
ja
adc
lret
dec
ret
add
xor
jb
jae
not
pop
testw
add
add
mov
xchg
mov
mul
stc
mov
mov
xchg
pop
mov
mov
lahf
push
sbb
dec
mov
call
jb
iret
add
lock
aam
inc
daa
stc
mov
decl
mov
pop
icebp
xor
or
pop
loope
mov
pop
pusha
or
xor
mov
andb
or
mov
sbb
scas
xchg
dec
inc
dec
add
nop
fwait
icebp
adcl
loopne
movsl
adc
pushf
enter
inc
jno
jo
adc
jge
mov
incb
pop
adc
shl
lock
sub
icebp
push
imul
in
arpl
push
mov
arpl
incl
nop
sahf
adc
jmp
xor
inc
and
aaa
lock
rcrb
outsl
or
and
jns
arpl
int
pop
dec
addr16
out
push
clc
or
cld
imul
add
add
ds
in
idivl
js
mov
jle
repz
addr16
add
add
add
es
and
xrelease
gs
lcall
mov
push
xor
daa
jb
jmp
jmp
sub
adc
les
mov
lds
es
inc
or
pusha
subl
lahf
pop
inc
in
inc
pop
iret
out
sar
inc
jns
sub
daa
cmpb
mov
and
sbb
adc
imul
cmp
repnz
adc
sbb
xchg
rcrb
sub
fwait
mov
std
int3
stos
arpl
pushf
cltd
add
jnp
fdivrl
pop
sbb
psraw
or
xchg
cmp
mov
inc
loope
fidivrl
and
out
mov
cmpsl
adc
inc
dec
loope
cmp
add
scas
inc
mov
ret
dec
or
and
sub
data16
pop
rolb
add
add
jecxz
inc
cli
aas
into
lret
jns
push
out
addr16
add
add
add
xchg
or
mov
imul
jnp
xchg
adc
jae
push
or
lret
fistps
sbb
inc
aaa
fmuls
mov
xor
stc
pop
out
xchg
adc
test
lods
and
jns
call
dec
cmp
mov
adcl
movsb
add
jbe
rcrl
dec
dec
sbb
or
jecxz
and
rclb
addl
imul
lcall
inc
test
lds
push
test
jge
cmc
mov
pushf
enter
inc
fs
jnp
pop
mov
cltd
gs
inc
stc
aad
lret
or
or
jno
lock
and
sbb
xor
loop
fsubl
sbb
fwait
adc
add
repz
xchg
dec
aas
xor
stos
sti
xor
push
mov
push
mov
cmp
sbb
dec
mov
push
in
adcb
add
add
lcall
mov
cli
add
add
add
mov
or
out
add
jl
inc
add
mov
xchg
cmc
and
cmpsl
rcrb
mov
mov
lock
mov
push
jno
loopne
dec
push
fisubrl
gs
xor
or
repz
sbb
lds
mov
ds
sub
aas
jns
jb
sahf
dec
int3
mov
fs
jbe
jg
out
cmpsl
cmpsb
fbstp
push
push
or
push
das
test
nop
push
insl
mov
rcrb
out
push
push
dec
rclb
mov
push
mov
nop
adc
jle
push
sub
inc
filds
icebp
fsubrs
pop
jno
sbb
add
inc
pop
or
push
sbb
icebp
out
fistpl
mov
xor
sbb
lock
or
loop
out
andb
add
jnp
dec
push
inc
or
add
add
jae
cltd
dec
mov
jno
ret
inc
adc
add
add
add
add
sti
pop
inc
mov
into
jmp
leave
add
lods
insb
cmp
mov
dec
les
mov
je
mov
filds
inc
aaa
movsl
rorl
push
dec
dec
rorb
mov
in
sub
mov
xchg
out
inc
lods
test
fcmovnu
sar
sarl
xchg
mov
mov
dec
mov
rcll
cli
push
mov
sbb
test
dec
ficoml
in
aad
les
inc
push
mov
push
shll
xchg
daa
xlat
imul
into
rcr
rcpps
fwait
pushl
jmp
fidivl
mov
push
ja
sbb
sarb
push
fistps
push
aas
and
cmpl
in
adc
in
adc
add
jno
in
add
or
cmpsb
sbb
sbb
xchg
cli
rol
add
or
in
ds
into
nop
out
cwtl
jle
push
sub
dec
jecxz
ja,pn
cld
add
add
add
pop
popf
jp
dec
movsb
inc
in
pop
jl
inc
and
lock
out
sti
imulb
insb
adc
push
aam
jge
enter
test
inc
add
and
jecxz
outsl
sbb
idivb
sbbb
mov
jbe
data16
bound
shrl
in
xchg
push
inc
icebp
bound
shrl
mov
dec
jnp
mov
push
xchg
mov
or
scas
into
lahf
xor
mov
ret
push
pop
push
xchg
mov
flds
add
inc
dec
hlt
popf
cld
mov
jle
sub
mov
add
add
clc
or
dec
pcmpeqw
clc
xchg
or
xchg
aas
inc
stc
push
call
and
pop
scas
cld
sbb
in
and
push
pop
das
scas
inc
idivb
pushl
sub
idiv
jno
test
jg
push
pop
push
mov
addr16
add
add
add
xchg
cli
xchg
outsb
cs
xor
dec
push
mov
dec
clc
lret
dec
dec
dec
and
lods
movsb
neg
in
mov
add
lret
mov
mov
sub
clc
int3
ja
pop
adc
fsubrs
and
aas
out
dec
fwait
sahf
das
add
popf
rolb
insl
xor
in
mov
arpl
test
stos
push
xor
xchg
push
pop
sub
lods
adc
and
and
repz
cltd
add
lret
sbb
sbb
mov
rcrb
or
lea
push
cmc
mov
aad
push
mov
leave
cmpsl
push
dec
jmp
dec
test
aad
pushf
inc
outsb
scas
fiaddl
ret
xchg
inc
jp
sbb
in
mov
mov
mov
dec
sub
jb
sub
cwtl
cltd
inc
sti
pop
xor
cltd
add
into
repnz
into
push
gs
add
mov
add
add
movsb
push
in
cmc
jne
sbb
js
test
incb
add
add
add
inc
mov
dec
mov
sub
or
jnp
clc
push
xor
push
outsl
popf
insl
or
jge
jp
mov
or
je
iret
pop
push
mul
jns
int3
cmp
insl
mov
sbb
jmp
cwtl
shll
repnz
pop
setno
imul
aas
sub
sub
add
lret
jg
adc
inc
ja
sbb
nop
lret
testb
or
mulb
stos
sbb
into
in
cli
inc
jne
inc
test
popa
std
icebp
inc
jno
stc
jmp
enter
push
inc
add
mov
xchg
mov
std
inc
push
aad
cmp
xchg
xlat
lock
popf
adc
mov
repz
lahf
mov
enter
cwtl
adc
out
mov
inc
enter
cmp
push
clc
fadds
mov
dec
push
mov
add
add
out
shlb
aas
out
int3
mov
out
inc
push
incl
add
add
add
dec
repnz
loope
mov
jae
add
inc
cltd
push
mov
xor
or
push
fwait
xchg
lods
pop
cmp
js
or
adc
lahf
out
test
mov
jo
arpl
test
dec
inc
mov
cmp
jg,pn
add
sub
divl
imul
adc
mov
aam
jae
jno
cmp
addr16
gs
adc
cmpsl
cs
arpl
inc
je
jno
jne
lds
rolb
inc
mov
repz
cltd
dec
leave
sti
mov
pushf
loopne
test
int
pop
in
jo
pusha
test
stc
jmp
mov
mov
fsub
lret
lods
data16
mov
push
adc
cmp
pop
lret
fstl
pop
ds
add
or
mov
and
and
add
add
add
add
test
aam
and
xchg
pushf
dec
xor
dec
nop
cmpsb
scas
and
xchg
cmpsb
gs
dec
mov
pop
into
insb
xchg
and
sbb
inc
sbb
pusha
in
fdivs
mov
jmp
push
sbb
or
and
hlt
add
pushf
xchg
mov
mov
fcmovnbe
fs
cs
push
sbb
inc
popa
sbb
or
int
fs
and
and
cltd
movsb
clc
mov
mov
jnp
jb
loopne
mov
out
ret
movsl
loopne
jno
stos
imul
inc
enter
psubq
repz
push
lds
mov
cmpl
das
push
dec
or
push
mov
and
mov
push
or
pushf
mov
or
cmpsl
xor
outsb
sti
cmpl
fs
add
add
ret
bnd
cmc
inc
stos
repz
testl
add
add
add
inc
mov
fst
push
sahf
adc
shrl
shll
aas
dec
jns
jo
dec
mov
jbe
pusha
xchg
xor
out
adc
mov
sahf
jecxz
insb
xchg
dec
xchg
mov
mov
push
jle
js
cwtl
imul
fwait
cmp
sub
popa
sub
xchg
and
mov
cmpsl
cmp
rclb
cmpsb
pushf
add
cmp
cmp
pop
lret
inc
sub
ds
dec
xchg
add
jmp
adc
cmp
and
dec
scas
or
int
pushf
fwait
push
das
or
and
cmp
cltd
inc
adc
stc
jmp
mov
aas
outsl
cmpb
adc
sbb
or
roll
cmp
int
clc
xchg
add
fadds
cmp
test
push
add
jae
mov
adc
pusha
sub
cmp
gs
test
add
add
std
aaa
mov
shll
das
add
add
ds
add
dec
dec
stos
cli
fisttpl
fs
lcall
das
xchg
jne
shlb
mov
call
aam
pop
pusha
xchg
movsl
fstps
adc
push
test
pop
inc
add
repnz
scas
loopne
shlb
lds
and
push
cltd
xchg
into
cbtw
push
jecxz
add
or
subps
lods
push
add
js
call
inc
cmp
mov
clc
into
dec
into
icebp
push
rolb
mov
daa
cmpsb
je
idivl
shrl
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
ss
add
ss
add
ss
add
ss
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
aaa
inc
add
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
ds
gs
ja
dec
sahf
arpl
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
