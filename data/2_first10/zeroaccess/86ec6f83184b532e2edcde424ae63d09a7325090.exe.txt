push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
push
sbb
sbb
adc
sbb
mov
sub
mov
mov
clc
out
or
xor
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
mov
add
outsl
das
or
in
pop
sub
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
idivl
or
bound
icebp
daa
fcomi
pop
sub
movsl
jecxz
out
gs
dec
popa
and
add
pusha
pop
int3
loope
jb
cwtl
fs
dec
mov
adc
rorb
and
xchg
outsb
or
dec
mov
test
fimuls
hlt
xchg
stos
fidivrs
xchg
aad
or
mov
mov
cltd
outsb
ret
adc
mov
sbb
and
js
scas
test
adc
push
arpl
or
jne
push
xchg
or
fdivrs
es
sbbl
jae
jl
cmp
sbb
xchg
pop
addr16
es
mov
mov
stos
scas
bound
inc
cmpsb
xlat
sub
inc
mov
fildl
pop
xchg
lret
push
fdivrp
pop
mov
in
xlat
xor
push
adc
in
inc
stos
xchg
adc
addr16
or
mov
adc
pusha
fildl
and
inc
lret
sahf
sub
jns
push
dec
xlat
outsb
mov
sbb
in
xchg
fcomi
adc
cmpsl
cld
mov
mov
adcb
fwait
mov
outsl
push
mov
cmc
fbld
or
xor
and
push
cmp
mov
arpl
mov
icebp
dec
fwait
inc
rcll
xchg
xrelease
cmp
dec
es
sub
adc
test
fadds
dec
das
jg
pop
adc
adc
cmp
and
pop
or
inc
dec
jmp
dec
ja
stos
repz
out
rorb
mov
sub
push
insb
int
and
xor
jecxz
pop
lock
insl
das
fstpt
jno
add
mov
mov
jae
repz
lahf
popf
lret
ret
divl
arpl
cmpsl
out
test
or
sbb
out
cltd
clc
and
sbb
hlt
mov
sbb
push
xchg
sbb
xor
ficoms
fucom
addr16
lahf
dec
rorb
lret
jp
jmp
and
loopne
inc
out
adc
rcl
pop
es
inc
aas
out
lds
sub
and
and
add
repz
aas
inc
pop
xlat
xchg
pop
xchg
int
sbbb
xor
stc
shr
mov
pop
mov
sub
xchg
xor
dec
mov
call
mov
roll
sub
mov
jno
jmp
imul
add
sub
popf
pcmpeqw
data16
cmp
dec
dec
fwait
ljmp
adc
add
jl
cs
add
fdiv
aad
pusha
cmc
sbb
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
sub
movsb
mov
js
subl
adc
insb
out
scas
pop
rorb
xor
int
xchg
cmp
dec
jns
lods
nop
ja
jmp
mov
int
in
lods
es
iret
push
scas
mov
jle
adc
cmp
jmp
pop
mov
arpl
fldt
out
and
mov
ja
jb
mov
or
jle
mov
or
lods
adc
daa
pop
dec
push
inc
pusha
jle
aas
ss
lahf
lcall
ret
jbe
ljmpw
push
not
pop
out
jmp
mov
iret
sbb
add
mov
out
mov
xchg
xor
in
aad
xchg
cwtl
movsb
pushl
dec
cmpsb
mov
lcall
mov
out
jle
popa
inc
adc
xor
test
loope
psubq
imul
ret
je
xchg
es
fstps
in
or
addr16
stc
sti
outsl
mov
pop
dec
jne
ret
dec
mov
push
fimull
pop
test
fld
stos
mov
lahf
lock
and
jmp
or
fisubrl
cmpsb
and
sbb
lods
lods
out
mov
sbb
jp
jmp
xorl
in
outsl
lods
sbb
in
pop
pop
cmp
mov
cld
xchg
push
dec
insl
dec
pop
aam
jge
xchg
push
jge
adc
xor
arpl
cmp
push
add
rcll
jle
pop
bound
cld
lods
adc
ljmp
dec
adc
mov
mov
enter
pop
scas
xchg
fwait
roll
xor
jl
adc
in
lcall
filds
and
mov
cmp
lret
mov
cmp
or
cmc
in
pop
mov
pusha
xchg
sbb
hlt
bound
out
std
dec
xchg
add
fsubr
cmc
pop
pop
pusha
lahf
out
or
sbb
jo
cld
imul
jo
aam
xor
rolb
add
sub
ret
pop
add
cmp
fstl
sar
or
movsl
dec
bound
out
mov
push
inc
loope
add
push
and
jae
xchg
pop
mov
ret
jg
and
mov
fsubl
aam
push
push
xor
jmp
std
push
inc
data16
mov
call
hlt
sub
pushf
insl
add
and
push
lods
lea
pop
test
pop
ja
cmc
and
insb
stos
in
jae
cmp
push
mov
lock
les
call
xchg
sbb
insl
mov
in
sbb
jns
push
arpl
lret
call
jbe
sahf
push
arpl
iret
mov
sti
into
test
dec
es
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
jo
or
sbb
adc
sbb
jnp
xor
mov
movb
pop
pop
xlat
sbb
movsb
or
cltd
hlt
dec
pop
inc
sub
outsl
push
inc
and
inc
cmc
pop
sub
std
jp
add
icebp
les
out
adc
lcall
sub
add
insb
inc
dec
and
lods
sbb
xor
sbb
in
adc
movsb
sti
stc
jae
push
es
notl
cmc
adc
ror
sub
inc
out
jne
xchg
fmul
mov
pop
mov
lea
out
mov
mov
test
sbb
xchg
pushf
pop
cmpsl
ret
leave
jl
les
std
cli
loopne
push
sub
cld
mov
fcomps
dec
fisttps
loop
loop
mov
int
xchg
jge
repz
ret
fisubrs
loopne
pop
push
mov
sbb
xchg
fwait
mulb
fwait
add
mov
in
call
mov
mov
aaa
jmp
out
mov
mov
inc
test
jp
jo
mov
sbb
fimuls
mov
aam
pop
xor
adc
and
popf
pop
mov
enter
insb
mov
addr16
sbb
and
popa
ljmp
add
pop
push
out
adc
rcl
jbe
and
add
push
cmpb
aas
pop
xchg
dec
and
shlb
xchg
loop
jb
cmp
mov
fldenv
out
mov
push
repz
sbb
inc
push
mov
jmp
loope
cli
mov
mov
mov
mov
or
pop
pop
stc
jp
cmpl
adc
pushl
bnd
sub
icebp
inc
mov
stc
pusha
fbstp
rcrl
lret
mov
adc
ja
xchg
filds
sbb
cmovge
xchg
movsl
testl
sub
addl
add
arpl
xchg
test
xchg
fisttps
mov
sub
ds
mov
scas
es
push
adc
icebp
xor
test
notl
imul
fcomps
sub
push
es
iret
xchg
lods
movsl
mov
into
xlat
daa
or
mov
rcrb
sub
xchg
or
rcll
inc
mov
sub
jg
and
push
xchg
push
adc
xchg
mov
dec
gs
and
add
push
iret
inc
mov
cmp
mov
xchg
push
dec
jno
sub
cmp
pop
clc
push
xchg
ret
dec
cmpsb
roll
sub
fldenv
insl
fdivl
andb
xchg
orl
cltd
push
fdivs
xorb
jb
xor
imul
sub
xor
fcoml
insb
cli
push
xor
jmp
sub
jmp
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
xor
repnz
add
sbb
adc
sbb
subl
loope
imul
lock
jg
sbb
loope
mov
pushf
out
and
mov
out
cli
outsl
sti
lods
push
cmc
or
sbb
and
dec
aad
test
mov
int
cmp
daa
adc
dec
jb
fistps
mov
jo
stos
mov
dec
outsb
inc
lods
or
repz
aas
push
rolb
inc
inc
lods
les
cmp
int
mov
imul
cmovo
push
sub
add
lret
cltd
fstl
ja
std
mov
and
push
xchg
mov
out
jg
test
and
out
fisttpl
fmull
jecxz
adc
push
cltd
test
int3
mov
dec
and
mov
dec
jle
ret
pop
outsl
fstpt
jb
push
mov
outsb
loopne
aad
cmp
loopne
xor
push
mov
push
mov
push
fidivrs
in
jnp
adc
mov
hlt
addl
or
xor
repnz
xor
jo
or
push
push
adc
lret
and
shl
sub
repz
mov
mov
sbb
stos
sub
sti
std
mov
rcrl
rcrb
fcomps
pop
pop
add
es
add
cmp
sbb
shrl
rorl
nop
jae
icebp
adc
mov
add
sub
xchg
stc
mov
push
push
std
int
std
jl
xchg
adc
int
adc
add
int
clc
mov
xor
scas
jbe
addl
sbb
xor
dec
push
outsb
and
sbb
or
decb
adc
sbb
push
jb
clc
in
in
filds
cli
scas
ret
nop
popf
sub
loope
mov
pop
jne
inc
jl
ja
mov
sbb
das
and
jmp
fdiv
in
addb
ficomps
inc
and
sarl
out
sbb
mov
int3
imul
pop
les
adc
testl
inc
xor
sub
rol
cmc
mov
xchg
add
clc
shll
push
jbe
push
sarl
stos
jno
add
cmp
in
adc
push
lea
cs
adc
stos
addr16
pop
lds
inc
mov
push
push
sti
or
orl
inc
cmp
mov
arpl
pop
xchg
out
xchg
in
or
pop
mov
mov
cmp
ja
mov
shrb
xor
push
smsw
cmpsb
mov
mov
xchg
jg
or
dec
adc
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
cmp
stos
inc
cld
sbb
and
sbb
push
sub
push
jge
lods
sbb
and
add
or
jmp
mov
and
xchg
inc
and
ficoml
rclb
inc
jle
lds
mulb
mov
call
pop
xor
shrb
lahf
sub
test
push
push
mov
push
out
inc
fcomp
ja
mov
insl
lahf
out
int3
in
scas
xor
cmpl
lods
sbb
push
scas
sbb
push
mov
sbb
pop
mov
pop
sbb
in
jle
mov
adc
pop
leave
out
call
test
fbstp
pop
clc
fcmovne
arpl
mov
dec
orl
inc
xchg
push
inc
mull
popa
divl
and
adc
push
insl
imul
sub
sahf
push
cwtl
and
loope
push
lds
jle
pop
cmp
negl
jb
ja
fs
orl
xchg
pop
inc
mov
xchg
sbb
lret
in
loope
sbb
push
and
scas
out
lahf
jp
cltd
fcmovu
lahf
test
shrl
aas
int3
imul
rorb
setle
mov
test
xor
mov
sar
gs
imul
dec
xchg
stc
push
mov
push
inc
repnz
movsb
and
ret
sub
sti
sub
cli
loop
fisubs
outsb
repnz
out
xor
data16
jns
test
cmp
xor
or
shl
inc
pushf
icebp
push
xchg
xchg
nop
dec
jnp
stos
mov
sub
mov
xchg
cmpsl
popf
gs
ss
mov
shl
xor
xchg
mov
adc
push
push
stc
sbb
movsb
add
fdivrs
out
dec
mov
dec
std
lcall
and
jbe
mov
cli
inc
jae
test
stos
jns
lea
pop
mulb
sbb
jnp
rorl
mov
mov
or
scas
mov
cmp
jns
adc
iret
jmp
jae
xchg
ds
rclb
pop
jge
dec
push
mov
push
cmp
fnstenv
ficompl
aaa
int
jnp
fwait
stos
jmp
mov
cmp
pop
push
jno
les
rclb
mov
shll
mov
jmp
push
enter
movsb
call
xor
adc
loope
jl
mov
ss
jecxz
jp
sarl
mov
sbbb
mov
in
mov
adc
lds
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
rcrb
and
sbb
mov
adc
cmpsb
iret
pop
loope
in
mov
sub
lret
mov
dec
or
xorl
in
in
mov
rclb
sahf
daa
mov
push
aas
jg
sbb
std
sub
add
push
or
lahf
pusha
xchg
scas
push
jmp
in
cltd
push
and
xor
out
mov
cmp
adc
test
inc
mov
pop
push
call
out
cmp
jp
dec
mov
bound
xbegin
jbe
sub
xor
pop
jmp
sbb
and
jo
mov
mov
sahf
dec
push
iret
sub
loope
dec
int3
iret
popa
mov
adc
push
stos
pop
int3
dec
xchg
mov
fs
ret
push
int3
cmp
xor
enter
scas
jg
or
sub
mov
lret
add
in
add
mov
pop
lcall
imull
and
fsub
or
adc
inc
aaa
lcall
inc
enter
les
orb
cmpsb
cmp
push
xchg
jnp
dec
aas
fiadds
aas
insl
icebp
mov
sti
xor
mov
orb
mov
xchg
bound
push
loop
add
mov
and
push
call
add
pop
pop
mov
jg
or
cltd
mov
in
rcrl
adc
cli
mov
and
xchg
ja
adc
mov
mov
push
cmc
inc
fildl
and
jp
and
jbe
cmp
clc
test
mov
and
andl
mov
add
inc
or
sbb
mov
jae
stos
icebp
shlb
dec
lds
repnz
push
jl
lds
les
lock
mov
mov
outsb
inc
fdivl
cmp
pushw
js
daa
cwtl
and
cmpsl
jne
lcall
inc
mov
pop
sub
inc
push
mov
scas
push
and
jno
fwait
mov
frstor
add
mov
pop
cmpsb
stos
dec
subl
pusha
mov
pop
loopne
xor
xchg
cs
sbb
pop
test
cli
add
cmp
subb
mov
inc
mov
rolb
mov
arpl
out
or
cs
dec
in
in
mov
in
xchg
out
lods
and
cmp
fwait
loopne
fs
xor
push
dec
sub
or
mov
in
inc
mov
jmp
scas
push
repz
cmp
fisubrl
push
push
or
es
andl
movsb
test
call
pop
popa
ljmp
lret
pop
mov
lods
icebp
mov
mov
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
loope
push
lock
and
sbb
stos
sub
mov
jns
scas
inc
mov
pop
clc
pop
je
jae
repnz
adc
jnp
in
or
pusha
add
cmp
xor
repz
stos
jmp
cmp
dec
outsl
aaa
mov
xor
das
fildl
xchg
mull
imul
ds
cs
or
push
push
jnp
andb
or
jae
add
ds
add
js
addb
addr16
shrl
mov
inc
jp
out
pop
rolb
icebp
mov
add
xor
push
loop
push
es
out
mov
mov
int3
inc
xor
adc
sub
lods
stc
and
push
xor
dec
es
cltd
adc
pop
sub
loop
inc
test
pusha
jge
out
inc
arpl
cmp
xchg
test
stos
xlat
mov
mov
mov
imull
out
add
add
dec
lods
push
pusha
lcall
dec
fs
ror
and
mov
pop
sbb
mov
pop
push
pop
xchg
inc
lahf
stos
sahf
gs
sub
data16
mov
xchg
cmp
shrl
jns
stos
or
js
sub
outsb
cmc
sarl
test
mov
sbb
pop
sbb
hlt
jmp
and
imul
imul
mov
in
xchg
lcall
in
fmulp
cs
xchg
sbb
pop
insb
xor
cmpsb
out
jne
xchg
mov
mov
jne
xor
fnstenv
clc
fistpl
in
sti
lcall
sub
push
inc
dec
pop
push
or
pop
test
xor
mov
popl
loope
hlt
mov
adc
adc
or
lea
movsb
popa
sub
add
bound
test
pop
scas
lods
shll
dec
mov
ret
push
mov
xchg
inc
loop
mov
inc
sbb
test
xchg
in
ljmp
lods
xchg
jp
mov
xor
dec
xchg
cmpsb
rorl
sahf
inc
adc
movsl
push
out
push
pop
xor
mov
fnstsw
mov
jns
pusha
addr16
jb
adc
pcmpeqb
xlat
jbe
fstpt
pop
cmpsb
jns
mov
xor
and
movsb
push
negb
fdivl
push
dec
dec
push
mov
imul
pop
loope
xchg
jecxz
adc
repnz
gs
cmpsl
in
int
xchg
fcoms
mov
mov
fsubl
mov
cmp
out
cwtl
in
mov
adc
ds
lret
popa
pushf
jmp
and
popf
add
ret
sub
mov
shrd
jmp
out
push
push
push
mov
ret
mov
pop
jmp
sbb
adc
sbb
mov
pop
sub
loope
cmp
ja
movsl
mov
xor
icebp
stc
inc
or
lods
pop
mov
ss
xor
pop
and
popa
xchg
mov
xor
adc
adc
fdivp
and
test
lret
sbb
into
cmp
adc
sub
sbb
testl
int
cld
cmp
cmp
xor
push
jmp
add
jge
or
xor
fldt
add
arpl
mov
pop
sub
adc
outsb
js
and
cltd
xchg
jae
jne
pop
jnp
and
mov
in
dec
fimull
xchg
stos
xchg
mov
add
mov
xor
dec
scas
add
clc
dec
fimull
sbb
xor
sbb
mov
xor
push
inc
mov
out
sub
mov
arpl
adc
mov
incb
lods
sbb
jbe
es
cmpsl
in
leave
inc
test
adc
and
es
mov
pop
aaa
arpl
push
xor
test
dec
cmp
cmp
jbe
or
mov
fwait
inc
sub
incb
int3
mov
sub
sub
lods
jae
enter
lret
jg
test
andl
push
cld
mov
ljmp
das
clc
xchg
icebp
fisubs
scas
xlat
push
xor
subl
lfs
inc
imul
mov
stos
stos
shrl
les
mov
or
dec
push
dec
cli
in
cld
add
xor
mulb
cmpsl
faddl
cli
sbb
pop
loop
loope
xchg
or
sub
sub
inc
mov
xor
jl
mov
cwtl
sbb
inc
jae
cmc
shll
negb
mov
or
pop
mov
and
fs
or
jae
mov
jno
sub
mov
jle
aad
hlt
sub
inc
jbe
andl
jns
mov
jmp
push
aad
or
int3
sbb
pop
jno
leave
cltd
dec
mov
testb
ret
mov
mov
in
roll
sbb
int
stos
adc
xlat
addr16
jp
les
lahf
pop
ret
aam
jle
call
and
mov
mov
popa
jno
int
call
cmp
sbb
mov
daa
mov
mov
or
loope
push
cltd
pop
orl
adc
jnp
mov
fistl
mov
adc
sbb
dec
add
ret
mov
fisttpl
mov
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cwtl
pop
jo
in
sbb
adc
sbb
mov
lock
mov
sti
hlt
or
and
and
sahf
inc
addl
adc
daa
mov
pop
mov
adc
and
push
fcmovu
fs
dec
jnp
cs
cli
jg
mov
dec
pxor
mov
dec
int3
test
jp
pop
push
sbb
xchg
cmp
addl
push
insl
decl
popf
cmp
imulb
sbb
and
xchg
or
xor
add
outsb
loopne
gs
in
movsl
fwait
sar
pop
or
push
sbb
dec
mov
pop
jmp
repz
daa
leave
movsb
adc
push
or
sbb
mov
bound
lcall
outsb
jle
mov
jno
jne
adc
or
loop
rcrb
adc
xchg
mov
aam
dec
addr16
xchg
mov
or
cmp
stos
adc
pusha
cmpsl
mov
fxch
jo
inc
sti
fldcw
stos
sbb
push
dec
into
mov
icebp
out
push
lds
test
repnz
scas
int3
push
cmp
aas
fdivr
in
clc
orps
sub
aad
push
mov
std
daa
neg
mov
aas
outsb
into
iret
xor
jl
lods
data16
jl
pusha
xchg
jb
stc
sti
outsl
mov
outsb
cltd
outsl
dec
pop
je
push
movsb
stos
cmp
fsubl
sbb
adc
gs
sbb
shlb
cmpsl
fildl
popl
cli
aas
push
in
adc
outsb
pop
sub
dec
lods
push
fildl
movsl
mov
cs
cmp
or
pop
xor
mov
or
mov
mov
inc
aaa
cmp
popf
iret
sbb
fsubrs
cmc
jmp
in
sbb
mov
ds
fscale
add
test
stos
cld
or
stos
sbb
sbb
add
mov
cmpsb
mov
stc
and
shlb
or
or
dec
xor
repz
movsl
dec
test
sub
jge
fucomp
cltd
aaa
adc
adc
inc
mov
aas
jbe
push
arpl
adc
repz
nop
sbb
push
push
ret
mov
xor
cmp
dec
cmp
je
xchg
sbb
pop
mov
movsb
jns
adc
rorl
cmp
aas
jp
adc
xchg
xor
bound
xchg
in
scas
jne
and
ss
xchg
inc
dec
jbe
mov
mov
pop
xchg
adc
mov
cmpsb
cmpl
cmp
sti
or
pop
sub
je
and
mov
cmp
test
dec
popf
es
inc
leave
test
or
mov
mov
jmp
nop
dec
nop
add
lock
pop
mov
sbb
and
sbb
mov
insl
cld
sub
in
dec
jle
xchg
and
jmp
pop
mov
sti
test
mov
lret
mov
in
cli
mov
fistl
rolb
loope
test
sub
int3
push
cmp
pop
int3
or
shll
cli
adc
data16
cld
xor
cmc
inc
sbb
ret
and
out
jnp
mov
xchg
ljmp
jmp
subb
inc
xchg
jmp
sahf
xchg
dec
xor
pop
mov
into
inc
into
fisubl
aad
jb
jp
dec
lret
lahf
cld
das
jmp
sub
dec
fwait
adc
sub
xchg
shlb
fsubs
mov
lahf
or
fucompp
repnz
fstps
add
and
pusha
movsl
pusha
fisttps
push
lret
adc
cmp
inc
push
dec
ret
dec
and
cltd
iret
cmpsb
rcrl
test
dec
xor
movsb
cltd
pop
pushf
cmp
je
mov
sbb
movsb
rol
mov
fwait
mov
stos
in
scas
sub
pop
stos
iret
fs
jbe
roll
sbb
int
sbb
and
xchg
and
fs
cmovns
faddl
dec
and
in
pop
xor
jge
adc
mov
mov
and
jle
pop
lahf
sub
mov
scas
addr16
xchg
xchg
insb
pop
std
jo
add
lret
stc
xchg
loop
sbb
add
mov
sahf
mov
or
lcall
cmc
shll
sbb
sub
cld
add
push
popf
dec
std
cmp
push
pop
cmpsb
ja
ljmp
mov
and
jle
jns
add
pop
xor
lds
inc
cli
sub
mov
nop
aaa
fprem
jp
ss
pop
adc
insl
imul
push
xor
cs
xchg
sbb
dec
add
je
mov
outsb
sbb
xchg
sbbl
lahf
push
sub
mov
loopne
stc
lret
sbb
shll
adc
cmc
xchg
dec
scas
mov
push
mov
nop
out
nop
cmp
incb
mov
shlb
insl
loop
mov
mov
fdivs
xchg
into
sbb
mov
fcomps
push
jmp
push
lcall
and
imul
xchg
hlt
lock
out
pop
cmp
out
ljmp
jl
addb
subl
adcb
jns
fld
lcall
lahf
and
dec
std
in
cmp
in
insl
push
lea
mov
mov
incb
add
arpl
icebp
jbe
stos
xor
mov
lods
jmp
inc
sbb
push
xchg
pop
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
int3
inc
fistpll
xchg
adc
adc
mov
dec
inc
fwait
and
into
push
xlat
das
mov
and
add
cmp
out
jl
sahf
fldt
adc
pop
jge
mov
inc
mov
shrl
outsb
test
jbe
jae
stos
lods
inc
cmpsb
push
jmp
ds
jns
les
xlat
jnp
arpl
pusha
enter
mov
cmp
cmpsl
add
imul
and
lcall
adc
mov
test
leave
xchg
into
cmp
mov
inc
and
sbb
lret
fdivrl
mov
xchg
mov
pop
fld
popa
mov
dec
and
bnd
cmpl
movsb
movsl
dec
sbbl
frstor
mov
out
test
sbb
lods
inc
pusha
enter
and
xor
nop
or
mov
outsb
test
dec
out
js
les
mov
mov
mov
cmpsl
jg
nop
outsl
fwait
bswap
stos
mov
and
cmpsl
add
dec
mov
jae,pn
push
sub
mov
lcall
jno
popf
mov
adc
ljmp
xchg
or
es
or
xchg
jns
push
sti
and
sbb
or
inc
ljmp
pop
sbb
fsubrp
sbb
out
xchg
bound
xchg
dec
jl
fbstp
cmp
sub
jae
sub
dec
add
daa
rclb
mov
pop
mov
mov
xchg
or
outsl
add
xbegin
push
xor
or
mov
in
xchg
xor
mov
pop
xlat
jmp
cmp
fnsave
pushw
dec
int
pop
mov
scas
pop
out
jmp
and
jo
sub
pop
mov
in
outsb
pop
pop
mov
orb
fisubl
jp
es
xor
mov
jmp
and
pop
push
cmp
xchg
stc
testl
adc
pop
pop
ret
lock
mov
xor
jbe
in
sbb
jo
lods
nop
xor
mov
or
adc
cld
add
adc
cmp
ss
and
mov
xor
xor
lods
pop
pop
add
sbb
out
pop
lret
pop
cmp
push
aaa
pop
pop
mov
jle
out
sahf
and
xor
pop
jo
insl
add
add
jle
push
and
data16
jnp
nop
aam
lahf
sub
ds
iret
ja
push
lahf
lret
mov
ss
add
or
lea
sbb
inc
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
or
rcrl
sbb
adc
sbb
add
enter
jecxz
mov
cmovb
addb
inc
dec
cmpb
fadd
scas
inc
dec
enter
mov
sbb
xchg
sar
xchg
mov
push
and
leave
mov
inc
out
ret
sbb
clc
cld
bound
andnps
scas
push
pop
int3
sbb
or
fstpl
hlt
jno
ret
push
enter
andl
mov
sub
lods
cmp
inc
mov
int3
add
int
lods
std
cmpsl
xchg
jo
sub
dec
xchg
dec
mov
int3
sub
inc
cmp
cmpsb
lea
and
orb
std
or
cwtl
push
shrb
test
cmpsl
or
jns
sbb
mov
lret
push
lds
sar
lret
test
rorl
adc
mov
sbb
imul
pop
inc
pop
addb
sub
and
pop
scas
pop
mov
shlb
jl
or
inc
dec
cwtl
mov
repz
lea
dec
imul
sub
inc
das
add
incl
daa
add
jmp
icebp
lds
rolb
mov
or
mov
in
push
mov
addr16
jmp
and
adc
js
and
pop
inc
mov
add
daa
xchg
xor
sub
cmp
dec
inc
dec
inc
popf
popl
xcrypt-ctr
cmpsl
fiadds
mov
or
insl
push
cmp
fcmove
or
movsb
enter
cmc
push
stos
cmp
movsl
push
adc
adc
jne
fldl
inc
push
mov
sar
pop
in
xor
imul
jae
jecxz
stos
xchg
ret
mov
test
loopne
movsb
stos
addr16
fimuls
xchg
movl
mov
scas
or
cmp
mov
test
mov
lods
ds
mov
dec
mov
out
xchg
sarl
fsubp
sub
dec
orl
dec
sarb
cwtl
inc
jecxz
push
mov
mov
jg
dec
test
mov
cs
fistpl
add
pushf
stos
mov
mov
xchg
cli
mov
and
xor
xchg
mull
mov
lock
in
sbb
cmpsb
cmc
mov
add
shll
sarb
cli
push
out
stos
int3
andl
mov
mov
jno
jl
test
mov
sub
cmp
mov
mov
sbb
add
pop
xor
out
mov
mov
or
stos
xor
or
or
aas
dec
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
mov
int
sbb
adc
sbb
cld
fbstp
mov
nop
insb
repnz
sub
or
adc
addl
int3
imul
lods
mov
dec
inc
push
and
mov
test
imul
inc
aam
push
movsb
push
ucomiss
push
popf
cli
jo
jbe
push
mov
mov
fiadds
or
int
adc
rclb
ss
ljmp
cmp
push
push
inc
push
lahf
in
repnz
mov
jbe
jp
subb
adc
push
daa
inc
mov
pushf
mov
int3
insl
inc
push
jmp
push
mov
jns
movsl
lods
std
imul
ret
fisttps
jg
xlat
or
imul
xor
jo
sbb
sti
leave
cmpsb
js
push
inc
or
lcall
mov
cld
pop
lds
and
push
mov
add
or
ds
xchg
adc
dec
cmp
xchg
es
mov
outsb
int
ljmp
xchg
add
lea
fsubrl
push
outsb
pop
mov
and
xchg
mov
xchg
cwtl
and
mov
push
cli
or
inc
and
and
sbb
loope
mov
sbb
idiv
mov
jns
push
imul
mov
test
pop
add
and
and
jne
jecxz
xchg
dec
popa
shl
sub
cs
cwtl
ficoms
or
and
xchg
add
adc
inc
xchg
aad
add
xor
rol
aaa
insb
push
adc
cld
sub
arpl
pop
jnp
je
pop
addr16
pop
adc
arpl
jl
inc
mov
mov
push
xchg
mov
ljmp
push
dec
je
fistpl
mov
adc
cmp
jp
inc
push
pop
ret
icebp
cmp
ds
sbb
and
add
scas
imul
mov
or
es
jns
in
rclb
adc
mov
adc
ja
cmp
push
xor
adc
adc
add
aaa
cmp
and
add
and
rcrb
jmp
jae
lock
cmp
cwtl
xchg
daa
dec
scas
jp
scas
sbb
push
jne
jle
jno
rclb
test
pop
dec
cld
dec
adc
inc
les
sti
mov
xchg
lds
push
pop
movsb
xchg
push
scas
out
inc
mov
push
mov
or
outsb
cs
imul
lock
inc
pop
jae
lret
mov
cs
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
jg
mov
sbb
and
sbb
pusha
mov
insb
dec
lret
cmpsb
jo
orb
jl
rcll
loopne
dec
jl
sahf
pop
js
rcrb
pop
sub
inc
bound
dec
adc
xor
mov
and
pop
xchg
aam
cmpsl
loop
mov
mov
push
jo
jae
jp
movsb
xchg
add
inc
xor
lahf
das
push
test
stc
aam
mov
inc
push
cmc
cmc
mov
sub
loope
adc
inc
mov
enter
test
iret
mov
cmovl
mov
mov
ret
adc
mov
push
lods
bsr
mov
cwtl
cmp
push
insl
dec
pop
and
inc
or
mul
fdivl
adc
call
outsb
xchg
cmpsl
fdivrl
into
arpl
mov
sub
push
inc
fsts
sbb
dec
or
dec
push
stos
or
sub
jle
loopne
test
sbb
dec
aad
jl
push
cmp
outsb
in
insl
jmp
sub
and
sete
xor
cmp
cs
push
jo
popa
mov
loop
cmp
jle
and
and
inc
sar
jb
or
lret
xchg
mov
adc
add
loop
xor
out
bound
fadds
sbb
es
pusha
push
nop
das
add
jbe
inc
mov
push
scas
inc
lret
subb
mov
lods
add
push
aaa
adc
push
hlt
ret
mov
xorl
and
mov
sarb
incb
sub
add
loope
mov
repz
or
jns
ficompl
pop
sbb
push
ret
mov
mov
jecxz
jno
jne
push
ds
in
stos
lret
imul
jp
xrelease
xchg
add
pop
outsl
jg
repz
sub
scas
cmp
mov
pop
adc
in
insl
pop
adc
mov
sub
cmpsl
jb
sub
inc
dec
lock
orb
daa
inc
pop
sbb
inc
lock
mov
popa
pop
fstps
outsl
sub
daa
jg
mov
rcrb
roll
dec
aaa
mov
or
jecxz
sbbb
cmp
jb
mov
mov
and
or
icebp
inc
es
imul
fwait
or
loop
add
dec
jbe
pop
aaa
xor
addr16
xchg
push
or
ret
jecxz
out
inc
push
cmp
add
dec
mov
cwtl
dec
dec
pop
hlt
aad
in
pop
lret
call
cs
out
nop
pop
mov
sbb
pop
pop
add
jg
stos
jno
bound
cmpsb
ret
sbbb
push
int
add
outsb
cmp
jecxz
cli
inc
clc
rolb
pop
sar
push
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
nop
sbb
rcrl
and
sbb
imull
pop
sti
arpl
movsl
gs
lahf
cwtl
xchg
fs
neg
mov
out
sbb
xchg
inc
lret
popf
test
out
dec
jl
jmp
ja
movups
or
mov
add
push
repnz
movb
push
mov
mov
mov
mov
imul
pop
add
inc
ret
pushf
out
gs
lcall
into
xchg
push
inc
not
cld
inc
insb
mov
and
xor
and
xchg
mov
jg
in
mov
cltd
sbb
pop
bound
sbb
cmpsl
and
lock
daa
fwait
in
fstpt
fidivrs
incb
mov
test
adc
add
lods
fiaddl
imul
clc
cmp
lret
mulb
jecxz
lds
out
test
xor
push
add
out
ss
cmpsb
loope
pmaddwd
andl
clc
mov
stc
lahf
inc
pop
mov
inc
insb
aaa
mov
lods
push
mov
xchg
lret
lds
add
or
sub
loop
imul
push
movsb
mov
mov
dec
push
ds
adc
jecxz
xor
or
jnp
das
icebp
mov
push
push
adc
xchg
mov
ret
mov
out
movsl
shll
jno
sbb
jl
adc
lcall
ds
mov
cmpsb
sub
sbb
hlt
inc
cmpl
andl
stos
mov
inc
pop
xor
dec
insl
push
dec
jbe
adc
add
andl
xchg
ljmp
xchg
and
arpl
xor
lods
push
mov
cmp
jp
adc
negb
cmp
xchg
cmp
xor
jl
jo
in
addr16
outsl
inc
jb
mov
es
inc
fcmove
xchg
cmp
mov
mov
jp
inc
pop
lret
mov
cmp
fildll
mov
push
lods
mov
div
sahf
rcll
in
stc
push
test
scas
jnp
mov
fistps
sbbl
mov
push
jle
sub
out
sar
shrb
bound
out
dec
adcb
imul
jnp
cwtl
and
lcall
jmp
insb
clc
insl
imul
lods
sub
cltd
in
jmp
imul
lods
mov
pushf
adc
sub
scas
ljmp
xor
hlt
sbb
fcmove
xor
and
mov
scas
cmp
popf
mov
pusha
sbb
jg
push
outsb
rcrl
iret
call
movsb
fwait
sbb
jmp
mov
xlat
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
stos
cwtl
mov
sbb
cltd
scas
pop
daa
mov
in
jecxz
xor
fcmovu
mov
and
lea
in
cltd
je
decb
aas
cwtl
loope
imul
fs
nop
fwait
push
sbb
and
pop
ficoml
adc
jg
jg
es
mov
pop
push
addr16
jmp
push
jge
or
rcll
div
and
repz
or
cmp
into
ljmp
jmp
xor
cmpb
into
xchg
mov
ja
add
sbb
fstl
pop
mov
mov
mov
sbb
mov
shll
xchg
xor
xor
jb
outsb
ljmp
jmp
mov
xchg
push
test
xor
mov
cmpsb
jmp
push
js
stos
pop
cltd
inc
sub
test
insl
push
fsubp
adc
jle
fildll
popa
addr16
movsl
out
in
or
dec
pusha
sbb
fiadds
pop
shrl
jg
js
or
inc
mov
jne
cmp
xor
scas
movsb
cmovg
rclb
jnp
scas
mov
push
sarl
xchg
pusha
hlt
xchg
push
mov
dec
xchg
fsubrl
pushf
ljmp
push
les
out
xor
jnp
stos
inc
sub
div
mov
mov
xchg
insl
iret
jg
mov
in
cmp
xchg
movsl
div
adc
push
int3
push
cmp
cli
mov
push
inc
sub
out
add
mov
xchg
ret
mov
adc
fwait
push
adc
jae
lds
cld
add
xchg
je
lds
pop
xor
sub
pop
popa
fwait
mov
pop
or
fnstcw
jo
data16
and
cmp
idivb
or
inc
sbb
idivl
scas
adc
xchg
test
and
aaa
pop
mov
nop
adc
push
jno
cli
xlat
sbb
mov
lea
jnp
ljmp
or
loop
dec
arpl
pop
lea
cmp
push
mov
clc
inc
popf
rcl
cmpsb
sub
mov
shl
cmp
cld
and
cmc
pushf
push
scas
dec
pop
mov
mov
mov
xchg
aaa
dec
ja
cmc
mov
pop
movsb
mov
add
pop
icebp
mov
sarl
out
ficompl
adc
shl
inc
xchg
sub
mov
fldl2e
jecxz
popf
ljmp
iret
push
xor
mov
jle
aam
jne
rolb
enter
sub
cltd
aad
jns
cmp
push
rol
or
sbb
repnz
lods
dec
pop
or
sub
enter
xchg
inc
push
pushf
jne
cmpsl
inc
fstpt
mov
push
leave
dec
add
adc
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
aam
mov
and
sbb
in
js
sahf
shr
xor
outsb
rolb
push
aad
mov
mov
sub
dec
mov
int3
inc
iret
js
fcompl
mov
cmpsb
mov
shr
cmp
cmp
subl
pop
dec
push
mov
push
shlb
push
mov
sti
mov
sub
or
cli
dec
insb
dec
push
mov
inc
push
ss
lods
dec
divl
add
aam
or
fiadds
loopne
cmpsl
outsl
cmp
adc
adcl
dec
xchg
call
lret
push
jnp
aad
and
imul
add
lret
mov
leave
pop
js
push
pop
xor
loopne
push
adc
mov
negb
mov
cli
enter
push
jns
dec
lahf
fimull
add
bsr
rcr
mov
lcall
fcompl
loope
and
rorb
mov
fs
loope
push
mov
mov
xchg
ret
loope
out
add
ret
mov
jecxz
push
cmp
fadd
jle
flds
cmp
cmpsb
dec
push
dec
xchg
ljmp
repz
out
sbb
pop
cli
xchg
cmpsb
and
jne
xchg
sbb
xor
inc
pop
cs
inc
ss
outsl
adc
xchg
dec
aad
adc
imul
shrb
outsb
and
dec
push
sub
inc
sahf
addr16
sbb
hlt
push
mov
sahf
enter
scas
pop
or
adc
pop
inc
xor
ret
push
jecxz
test
loop
xchg
stos
test
pushf
cmp
leave
stos
insl
push
add
iret
pop
mov
xor
jnp
mov
ja
dec
std
dec
data16
call
adc
shrl
push
dec
mov
ljmp
aas
nop
ss
mov
sub
mov
orl
mov
mov
stos
xchg
into
push
popa
cmp
jns
or
mov
pop
sub
xchg
test
jb
imul
adc
out
lret
sbb
xor
lret
sbb
lret
mov
leave
call
imul
pop
mov
in
ud0
push
ja
add
sti
push
addl
dec
mov
cmc
arpl
ss
sbb
pop
xchg
push
aad
fadds
push
clc
pop
inc
xchg
popa
testb
pop
std
addr16
mov
outsl
in
or
or
mov
ret
pop
push
test
jmp
lock
jg
jecxz
lahf
jle
outsl
adc
ror
jo
mov
mov
stc
rcrb
pusha
mov
ret
jge
test
ljmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
imul
push
sub
faddp
pop
mov
imul
push
push
mov
popa
jae
push
mov
dec
shl
stos
pop
loope
sbb
pop
xchg
and
hlt
mov
iret
icebp
gs
pop
cwtl
pusha
std
sub
pop
loopne
test
mov
rcr
adc
sub
jo
xchg
xor
jb
bound
or
into
push
mov
sbb
sbb
adc
inc
xchg
pop
push
int
in
push
jl
jg
test
jno
jmp
movsl
jmp
data16
adc
adc
ds
jno
xchg
lret
data16
lcall
adc
sub
xlat
push
jmp
mov
scas
clc
ja
testl
mov
in
shlb
insl
fiaddl
out
cmp
push
popa
shl
stos
adc
adc
pop
mov
pop
inc
pushf
cwtl
dec
stos
mov
adcl
data16
ds
into
xchg
pop
xchg
adc
imul
movsl
loop
insl
push
add
sbb
hlt
cmp
dec
lods
cmp
ret
push
fwait
and
les
les
cmp
test
inc
mov
call
stos
or
xchg
imul
and
testl
in
mov
cmpsl
and
pop
sub
lock
mov
bound
cmc
mov
inc
xchg
fbld
cmpsb
inc
inc
xchg
ss
cmpsl
add
add
adc
outsb
push
fistps
mov
imul
jno
mov
lock
dec
xchg
std
shlb
shrb
rorl
data16
push
leave
jb
loopne
negl
popa
lods
mov
mov
push
xchg
mov
push
leave
dec
std
and
mov
fwait
cmpsb
es
push
push
aam
dec
imul
out
dec
mov
insb
loopne
sub
outsb
ljmp
rclb
inc
repz
fnstcw
ljmp
add
dec
pushf
pop
add
ds
in
cmc
mov
in
jo
js
mov
dec
call
movsb
enter
jg
push
lret
adc
scas
pop
push
ret
xlat
sbb
cmp
mov
push
fs
push
loope
and
xor
cmp
xor
push
cs
das
sbb
add
cmc
jns
sbb
lock
movsb
xchg
add
test
orl
mov
loope
pop
xchg
push
popa
pusha
xchg
hlt
adc
and
ljmp
call
dec
mov
and
sarl
add
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
pop
leave
jl
test
sbb
inc
loopne
xchg
or
dec
aam
cmp
aad
dec
cmp
cmpsl
and
inc
jae
mov
mov
enter
ljmp
xchg
and
pop
pop
jle
inc
sbb
out
sti
dec
adc
pop
sbb
mov
test
mov
push
push
scas
xchg
scas
adc
adc
cmp
mov
movsb
ss
stos
or
hlt
dec
stos
fisubrl
stos
fwait
int3
pop
test
jb
mov
arpl
jne
mov
adc
js
in
mov
adc
push
loopne
outsl
add
lds
lahf
cmpsl
outsl
xchg
iret
test
jo
test
imul
sbb
or
int
jne
pop
andb
test
and
jmp
fstl
sahf
xor
fcmovnb
dec
div
add
or
mov
push
in
ret
test
mov
jns
mov
sbb
jmp
adc
pop
adc
daa
clc
mov
xchg
sub
std
jno
dec
sub
into
adc
xchg
test
test
mov
scas
sub
jne
inc
insb
in
fldcw
adc
test
xchg
jnp
mov
xor
push
movsb
mov
push
in
cltd
adc
js
aas
inc
xchg
adc
loop
add
and
xchg
cmp
and
mov
push
test
clc
scas
sbb
cmp
hlt
dec
xor
rolb
mov
in
lods
adc
ret
stos
pop
jae
push
test
jnp
fstpt
xor
js
fs
daa
stc
in
push
cld
cltd
pushf
lret
adc
cltd
xor
fnsave
fs
out
pop
sbb
jbe
gs
xor
push
inc
adc
xor
xchg
stos
inc
xor
cmp
mov
jg
mov
mov
mov
pusha
das
ret
jns
cltd
cmpsb
loop
daa
push
lret
sub
sbb
jl
mov
js
mov
es
les
mov
mov
push
or
inc
lret
jns
jno
mov
movnti
popa
mov
loope
sbbl
lods
insl
sub
pop
xor
fisubs
dec
push
pop
push
lea
mov
iret
mov
adc
push
sarb
add
or
repz
inc
aad
mov
adc
mov
fs
xchg
test
lea
stos
xor
add
popa
leave
and
test
push
mov
aas
adc
roll
insb
pop
jmp
fadd
push
dec
test
aas
mov
imul
or
fdivrs
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
clc
push
mov
sbb
scas
fisttpl
outsl
lahf
and
jmp
dec
rcl
jno
xlat
sarb
repnz
subl
adc
xchg
into
mov
or
ret
enter
jne
movsb
aas
lds
rolb
int
in
nop
cld
rcll
xor
mov
add
add
adc
and
ss
xlat
xchg
ss
mov
jno
pop
xor
sbb
jb
jecxz
pop
add
loope
popa
push
push
mov
rclb
push
xor
push
jecxz
push
and
lret
sub
sub
mov
push
push
in
pop
pop
insl
push
jge
enter
imul
scas
ret
andl
data16
and
and
sbb
jae
arpl
push
pop
inc
xorl
sbb
jecxz
mov
fstp
push
adc
jecxz
repz
mov
cmp
aaa
mov
jg
or
loopne
mov
inc
inc
add
push
cli
or
jmp
data16
lret
stos
rorl
out
cmp
mov
sbb
fwait
xor
jl
mov
xlat
inc
push
inc
and
adc
and
out
neg
pop
icebp
xor
rorb
push
int
sahf
push
aaa
rcr
stos
push
pop
pop
mov
fisttpl
cmp
aas
sub
dec
leave
test
or
sub
sub
jbe
imul
test
jns
lret
sbb
rcrb
lods
and
mov
lds
jae
scas
xchg
scas
inc
enter
fmull
lds
insl
adc
lret
outsb
pusha
inc
jo
adc
add
or
inc
sbb
test
push
jg
out
cmp
arpl
sbb
mov
or
mov
sub
into
and
push
fnstcw
shll
jb
das
sti
mov
cmp
rcr
in
out
adc
int3
scas
inc
data16
popaw
stos
pop
sahf
mov
rolb
pop
int3
sarb
lock
imul
or
daa
pop
mov
jl
in
pop
dec
cmp
xchg
mov
pop
cli
push
sbb
mov
scas
inc
jns
xor
xchg
int3
xor
pushf
repnz
adc
dec
mov
out
jl
repz
mov
js
stc
xchg
js
lahf
lods
aaa
xchg
ds
mov
xlat
cmp
xor
jg
ljmp
mov
stos
test
enter
shl
push
dec
sbb
inc
cltd
out
fldenv
das
xchg
lret
add
and
jae
pop
stos
pop
cmp
mov
mov
or
negl
adc
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
or
popf
sbb
and
sbb
aaa
int3
and
sub
add
mov
pop
and
xchg
test
rcrb
sbb
std
in
lret
scas
add
lcall
arpl
clc
call
lods
stos
fidivl
aad
and
rol
mov
or
cmp
xchg
lea
and
cwtl
inc
jl
jle
jbe,pn
cmp
in
lock
sti
pop
mov
sub
daa
repz
mov
gs
xchg
fucomp
lock
pop
mov
push
jbe
jo
mov
lret
dec
shrl
out
test
mov
dec
iret
loope
xor
movsl
mull
jg
aaa
cs
arpl
sub
aad
mov
imulb
jae
push
nop
int3
xor
ja
cmpsl
or
dec
cmpsb
sbb
mov
push
dec
lcall
add
mov
push
mov
xchg
fldt
mov
xlat
lcall
jmp
xchg
push
int
loope
pop
sar
lret
stos
into
roll
xor
sahf
nop
sbb
je
ficompl
pop
jecxz
or
in
add
data16
cmc
or
jmp
sbb
jbe
xchg
lds
inc
add
xor
out
imul
inc
cltd
sub
xchg
add
repnz
stc
pop
es
and
insb
xor
sbb
pop
xor
add
in
xchg
out
adc
inc
sub
aaa
repnz
fidivs
mov
pop
cmc
sbb
xchg
adc
rcrb
jecxz,pn
adc
js
rorl
jnp
imul
sahf
daa
cltd
cmp
sub
fmuls
mov
fsubrs
jmp
into
imulb
lret
out
mov
sub
gs
adc
xor
outsl
push
je
cwtl
add
js
sbb
add
push
push
ds
subl
mov
and
jo
mov
hlt
fsubr
xchg
aad
add
mov
adc
ljmp
xor
push
cmp
cmc
pop
xchg
cmova
int
mov
or
mov
xchg
jbe
js
call
xor
jmp
repnz
faddl
pop
pop
mov
pop
in
rcrb
cltd
stos
pop
jnp
stos
add
push
in
call
jnp
mov
jnp
loope
add
clc
out
mov
out
aad
or
nop
xor
jle
pop
fbld
sbb
mov
mov
xchg
hlt
pop
xchg
sub
scas
aad
or
enter
mov
dec
stc
arpl
push
push
sahf
mov
out
pusha
pop
out
cmpsl
fwait
sbb
mov
add
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jo
xchg
sbb
and
sbb
test
insl
daa
lcall
add
cld
lret
mov
testl
add
lds
mov
call
ret
out
lock
fldcw
mov
mov
cltd
and
shll
fstp
push
in
mov
jle
mov
adc
int
mov
push
xor
pop
ret
xchg
movsl
lret
add
daa
jne
xor
decl
mov
daa
or
or
mov
mov
lock
and
pop
pop
in
cwtl
lret
in
stos
lea
or
mov
je
outsl
xlat
pushf
out
push
mov
movsl
loop
xchg
mov
popf
nop
mov
pop
add
fisubl
push
mov
mov
xor
stos
mov
stos
mov
lds
xchg
or
add
out
push
sbb
adc
mov
call
push
nop
repnz
mov
popf
xchg
ss
inc
movsl
rcll
std
mov
or
ss
cmpsb
cmp
adc
in
sti
adcb
test
out
jp
or
jo
movsl
add
mov
pop
or
dec
sbb
ja
pop
lret
push
and
jmp
cmpsb
cs
cwtl
mov
cs
out
sar
sbb
cmpsl
push
xor
hlt
test
iret
lret
pop
adc
jl
push
fwait
xor
jmp
jmp
iret
divl
mov
cmp
out
pop
and
fldenv
xor
mov
pop
shll
push
aam
mov
sti
or
jge
mov
inc
dec
mov
cmpsb
in
or
ljmp
rolb
mov
pop
das
rolb
enter
inc
movsl
push
sbb
dec
inc
mov
pop
test
or
sarb
sub
cld
mov
leave
loope
adcb
xor
repz
fdiv
outsl
sub
lea
aaa
cmpsl
cmp
rcrb
and
ljmp
pusha
inc
mov
dec
mov
leave
stc
mov
mov
fwait
sbb
pop
data16
mov
cmpsl
jno
xor
lret
mov
int
cs
out
pop
lahf
in
lret
push
fldl
movsb
popf
xor
cmp
addr16
out
cmc
inc
or
out
push
add
outsb
inc
pop
roll
jnp
insl
lcall
push
fwait
mov
add
repnz
pop
aad
pop
pop
out
inc
inc
jmp
push
iret
pop
pop
in
or
enter
mov
jmp
dec
shl
sbb
xor
adcl
mov
aam
add
inc
adc
out
dec
xor
popf
sar
inc
adc
neg
bound
shl
jmp
cmp
sbb
push
push
out
push
cmpsl
daa
stos
rclb
sbb
mov
mov
imul
xchg
mov
scas
sbb
add
xchg
and
mov
idiv
leave
sbb
mov
adcl
inc
ds
inc
cmpsl
orb
arpl
cmpsl
movb
int
mov
push
pusha
nop
fldl
xchg
jl
sub
sbb
in
dec
fwait
lods
aad
cmp
xchg
nop
add
xchg
iret
ret
or
stos
sub
jmp
pop
pop
mov
je
fstl
out
das
jbe
jae
loope
mov
sub
push
pusha
push
jge
mov
mov
xchg
push
fldt
out
leave
mov
fistpl
xor
jae
movsb
pop
ljmp
pop
jne
adc
sbb
push
push
add
pop
pop
mov
int
call
das
adc
sbb
imul
insb
xchg
inc
lds
je
shrl
imul
repz
clc
xor
jae
and
rol
push
dec
mov
sbb
xchg
imul
adc
inc
mov
cmp
cmpsl
mov
mov
add
jmp
fimull
mov
cltd
fs
cmp
cmp
sub
xor
jg
enter
jp
add
sub
or
mov
push
xchg
lahf
les
push
mov
jp
or
outsb
in
adc
fstpl
and
ret
add
shll
repnz
sbb
cltd
out
jmp
hlt
fcmovbe
into
jnp
sub
lods
lret
jae
inc
and
stos
dec
pushf
fs
icebp
out
push
adc
dec
mov
test
mov
sbbb
fistpl
enter
jmp
ret
sbb
add
xor
shrb
push
mov
je
aam
dec
je
push
in
push
cmp
sub
leave
xchg
repnz
sarb
and
cli
mov
addr16
sub
out
outsb
mov
inc
lock
xor
or
inc
push
sbb
jecxz
add
fldenv
std
ds
fcoml
arpl
pop
lods
test
inc
jle
add
fdivs
cs
xchg
shrb
xchg
popf
push
mov
js
push
fldenv
xor
mov
cmc
popf
test
xchg
les
xchg
movsl
pop
in
push
pminsw
pushf
mov
push
pushf
fnstsw
cli
xor
inc
addr16
clc
and
pop
aad
movsl
cli
xor
in
push
jp
or
sbb
push
out
jne
push
and
xchg
mov
mov
aas
mov
cli
jae
and
rorb
ret
hlt
and
adc
inc
or
enter
add
or
mov
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
jo
pop
daa
mov
in
xor
add
inc
xorb
int
fwait
scas
sbb
das
xchg
roll
fcompl
js
mov
inc
push
and
pop
stc
inc
fstl
movsl
in
into
in
adc
push
xor
ljmp
repz
fwait
xchg
xchg
xchg
aad
dec
nop
mov
in
scas
int3
imul
fdivs
insl
sub
add
test
fldpi
dec
xchg
pop
pavgb
mov
jmp
ret
inc
insl
cli
testl
sub
mov
test
pop
stc
in
adc
mov
or
mov
sahf
insl
push
and
aaa
mov
fildl
and
mov
or
mov
mov
xchg
add
mov
into
add
aas
dec
pop
jg
add
add
outsb
out
xchg
mov
inc
jo
in
lds
mov
or
bound
pop
cmp
and
and
clc
mov
flds
ja
stc
lcall
sub
pop
jo
jbe
lahf
and
clc
jecxz
pop
pop
dec
cld
lret
enter
mov
sub
enter
sub
xchg
jbe
scas
jmp
dec
out
xor
rorb
imul
jne
sub
jnp
sbb
dec
xor
add
loopne
sbbb
xchg
leave
scas
fs
lock
out
mov
and
adc
stc
sbb
in
insl
sub
add
int
push
adc
scas
sub
and
cmp
mov
cmp
sub
inc
jmp
dec
inc
xchg
dec
sub
jle
xor
xor
scas
fneni(8087
lea
lret
adc
aam
dec
in
jnp
sub
loopne
add
ficompl
dec
into
ljmp
aaa
jecxz
inc
mov
hlt
and
call
or
js
loopne
adc
ret
lahf
xlat
test
scas
inc
cmpsb
push
mov
pop
jae
sub
arpl
jbe
ljmp
cmp
stos
lret
adc
cmp
xor
sbb
mov
sub
fwait
rcrb
push
and
inc
lods
test
push
cld
sahf
in
ret
out
or
lods
cmp
test
sbb
push
xor
xchg
loop
cwtl
push
dec
mov
mul
dec
int3
sbb
and
fwait
xchg
xor
mov
orb
icebp
sub
push
iret
sub
pop
pop
lea
daa
jl
cltd
out
shll
jge
sub
adc
lds
or
mov
icebp
les
fnstcw
seto
fldl
outsb
cltd
pushf
cmp
out
pop
xor
sahf
cmp
sub
add
jb
dec
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
ljmp
and
sbb
enter
pusha
jnp
adc
jle
add
scas
mov
stc
mov
lods
push
out
das
ud0
pop
imul
or
jae
loope
or
inc
mul
jnp
icebp
call
push
aad
mov
xor
iret
xchg
mov
bound
mov
jg
leave
pop
lea
fsubrl
pop
xchg
jnp
in
pop
push
cmp
sbb
sar
or
pop
pop
sar
out
inc
xchg
inc
push
xlat
shrl
in
sub
bound
imul
testl
test
sbb
fs
jle
loop
mov
loope
add
mov
inc
fdivl
insb
lods
dec
sub
push
loope
inc
popf
gs
rorb
xor
divl
mov
stos
ret
xor
movsb
and
xor
xchg
cmc
mov
loopne
fnstcw
sub
sbb
inc
loopne
xchg
ja
int
ljmp
mov
js
sub
ret
aad
add
pop
sbb
cmp
lock
mov
cmpsl
pop
insb
popf
div
push
pop
in
mov
mov
push
in
pop
inc
in
mov
xchg
or
int
add
sbb
dec
push
dec
mov
dec
fsubs
ret
mov
test
dec
cwtl
stos
sub
push
dec
xchg
lock
inc
sahf
or
mov
adc
std
idivl
mov
js
mov
and
sbb
push
fsts
popa
xor
or
jle
inc
pop
movsl
fistpll
mov
ds
idivb
dec
push
inc
jle
scas
xor
or
pushf
jbe
add
les
pop
sub
xor
mov
ret
mov
sub
pop
dec
cld
rcrb
xor
mov
gs
add
inc
xchg
mov
lret
adc
scas
shl
into
xlat
sbb
sbb
cmc
cmp
ljmp
push
aam
xchg
jbe
aas
inc
stos
lret
outsb
ret
iret
pop
fdivr
rclb
push
out
dec
icebp
movsl
nop
leave
repnz
push
insb
jmp
push
adc
aad
lods
cmp
pop
xchg
mov
inc
push
sub
pusha
pop
pop
das
push
mov
xchg
lcall
push
cmp
dec
dec
and
inc
lods
adc
xchg
ljmp
insl
pushf
ja
mov
sub
iret
stos
call
add
stc
hlt
inc
cmc
repz
or
pop
lods
xor
fstps
xchg
push
cwtl
std
cmp
and
incb
mov
mov
dec
imul
mov
mov
mov
inc
ja
stos
aam
cld
inc
out
pop
les
mov
lods
enter
add
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
mov
jg
sbb
adc
sbb
mov
xor
mov
adc
das
jne
lahf
incb
xor
or
sbb
or
arpl
lock
bound
test
jbe
cmp
push
je
and
xchg
mov
leave
test
in
push
pop
cmpsl
loopne
insb
aad
ret
mov
push
cli
imul
pop
stc
sbb
ret
outsl
out
popf
xor
mov
gs
sti
xorl
ret
sbb
and
in
sbb
int
andb
jo
jecxz
xor
sub
xor
mov
pop
push
mov
out
jno
stos
jno
mov
or
sub
mov
mov
aad
fisubrl
scas
sti
and
xchg
xchg
imul
or
bound
test
inc
cmp
bound
mov
mov
pop
push
xlat
shrl
jnp
add
push
je
dec
inc
mov
int
jae
arpl
add
ret
or
mov
iret
cwtl
jnp
mov
pop
fsubs
jns
adc
cld
fwait
cmp
imul
movsl
inc
pop
iret
push
sbb
or
xor
pop
stos
ljmp
jp
ret
mov
fsubrp
adc
mov
rorl
repz
iret
jno
jno
rolb
inc
jmp
popf
hlt
outsb
sub
jl
add
xor
pop
cmpsb
inc
sub
fstpl
fisubl
cs
les
mov
or
xchg
pop
push
in
pop
mov
inc
mov
cmpb
or
fchs
mov
and
add
inc
cmp
dec
scas
jge
insb
cmp
shll
jp
leave
shl
mov
mov
sub
mov
cmp
jbe
aaa
mov
and
aam
cli
nop
jg
orl
incb
sub
pop
jnp
and
sahf
mov
lock
ret
outsl
pop
mov
sbb
add
incb
cmp
scas
push
mov
mov
push
lcall
lea
xlat
xor
ja
sbb
and
push
cmp
test
push
pop
mov
pop
bound
arpl
das
and
mov
mov
in
push
dec
push
hlt
lcall
jmp
inc
cmp
aad
pop
popf
inc
jne
int
inc
cmp
dec
bound
jp
enter
clc
mov
cmp
loope
pop
mov
data16
mov
stos
jns
fsubrl
adc
dec
mov
int
mov
xchg
xchg
std
imul
add
cmp
ja
jns
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
in
xchg
mov
and
sbb
mov
fbstp
scas
movq
in
iret
jmp
adc
add
out
mov
cmp
fsts
andb
lock
adc
lock
inc
inc
dec
and
jo
or
repnz
lahf
out
push
pushf
in
add
gs
scas
pop
shlb
dec
and
ret
je
push
sbb
mov
sub
xor
outsb
mov
xor
fwait
bnd
mov
sub
inc
gs
pop
test
xor
loope
mov
push
call
push
into
insb
fwait
jmp
cmpsl
fwait
into
or
add
pop
xchg
mov
dec
mov
das
xor
jbe
int3
jge
sbb
mov
scas
cli
mov
mov
mov
push
inc
jbe
jo
fsubrl
arpl
adc
les
and
push
lahf
xchg
fcmovbe
adc
xchg
aam
aas
rcll
ret
mov
xor
repnz
lea
dec
arpl
pop
out
xchg
iret
fcomps
xchg
mov
icebp
jnp
mov
xchg
out
sub
mov
fisttpl
mov
jmp
dec
test
inc
ja
mov
mov
xor
sbb
repz
dec
leave
add
jl
lret
cmpsb
fbld
push
loop
orl
repz
rcrl
ret
mov
scas
sbb
int3
xor
les
add
cld
aam
in
insl
and
out
rcll
adc
lock
xor
mov
mov
loopne
mov
jne
stos
sti
mov
jnp
jo
je
mov
pusha
xchg
data16
fiaddl
sub
popf
insl
fs
cmpsb
jae
test
xchg
jbe
mov
sbb
test
cmp
adc
pop
lods
fmull
lds
xor
jb
pusha
test
mov
pusha
pop
scas
cmc
jns
aas
negb
add
sbb
andl
xchg
push
push
lds
sub
clc
stos
jae
ss
test
adc
sti
bound
outsb
js
ds
les
lret
sarl
aad
add
xchg
add
pop
jg
jb
popa
mov
adc
xchg
jae
fisubrl
mov
popa
sbb
inc
mov
daa
push
sub
imulb
sub
adc
mov
mov
mov
push
outsb
sub
into
xchg
sarl
outsl
hlt
sbb
push
pop
or
cmc
push
iret
or
sbb
push
cwtl
test
mov
scas
sahf
or
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
sub
loope
mov
or
addr16
into
mov
cld
cmpsb
clc
xchg
pop
addb
jle
mov
cld
lcallw
ret
pop
inc
pop
push
cmp
ja
vpsadbw
rcll
inc
lret
cmp
mov
popa
lea
adc
aaa
cltd
sub
adc
pop
mov
das
andl
mov
inc
dec
aaa
inc
rcrl
adc
push
or
inc
push
out
mov
mov
imul
in
mov
lret
sub
ss
mov
mov
repz
out
rclb
or
lahf
dec
jne
inc
loope
or
pop
add
mov
xor
jo
aas
repz
call
cli
add
mov
xchg
in
movsb
decl
aaa
xchg
ja
into
jo
sub
pop
std
das
leave
jnp
and
pushf
push
fsubr
mov
add
jb
sbb
add
ss
in
dec
xor
das
and
xlat
xor
inc
jnp,pt
mov
pop
jecxz
clc
icebp
jle
std
pop
mov
xor
lahf
add
xchg
test
sbb
adc
iret
and
stos
stc
lret
push
dec
into
bound
orl
dec
ret
mov
scas
lods
popf
adc
mov
xchg
shlb
xlat
or
subl
sbb
add
movsl
subl
fdivl
adc
or
pushf
cwtl
out
std
xor
dec
pop
stos
xlat
sbb
pop
movsl
mov
mov
or
mov
fwait
mov
pop
mov
mov
out
inc
leave
inc
and
pop
jmp
cwtl
int
shrl
inc
xor
lahf
fdiv
sub
sbb
iret
outsb
xlat
cs
mov
das
cwtl
adc
mov
add
es
ret
mov
shll
mul
add
sub
sub
enter
fisubs
repnz
mov
xchg
sbb
ret
in
pop
int
into
popf
jl
outsb
jecxz
xchg
stc
faddl
mov
or
test
roll
mov
nop
push
push
popl
lret
rclb
jns
jb
xchg
sarl
imul
out
mov
fimull
xor
mov
sbb
pusha
lds
dec
or
dec
fimull
mov
push
jnp
arpl
out
jo
iret
ds
movsb
jmp
push
or
not
loope
xchg
mov
jp
lret
cmp
gs
loope
and
mov
je
movsb
insl
jl
fs
setp
xor
push
mov
dec
pushf
mov
cmpsl
inc
mov
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
jo
mov
and
sbb
adcb
aam
push
push
fidivrs
aam
add
insb
shr
mov
and
icebp
xor
ds
adc
outsb
jge
fmul
push
push
jmp
pop
pop
sub
or
rclb
dec
pop
pushf
push
bound
dec
leave
mov
or
xchg
sbb
xor
sbb
gs
cmp
or
mov
sub
scas
and
cmpsb
loop
in
adc
xbegin
inc
mov
inc
or
sarl
push
adc
pop
arpl
push
push
mov
movsl
ds
sbb
adc
mov
cmp
add
inc
push
mov
mov
xor
xchg
cld
xor
sbb
xlat
ficompl
out
xchg
xor
add
pop
in
fistpl
mov
nop
cmpsl
push
pop
sub
je
cmp
push
jo
daa
js
outsb
sub
fiaddl
push
dec
jno
jle
adc
ret
sub
inc
mov
dec
cmpsl
ret
sbb
mov
js
sub
arpl
loop
imul
loop
inc
lret
imulb
cmpsb
iret
divl
xorb
add
movsl
push
push
adc
movsb
push
aad
rcr
cmp
or
in
push
and
popf
repz
stc
ds
cltd
test
mov
loop
les
clc
pop
jns
mov
xchg
xchg
mov
ficoml
jp
adc
mov
jg
insb
add
push
dec
fs
es
push
cmp
sar
and
xor
pop
filds
dec
xchg
mov
pop
xor
repz
lcall
jl
gs
mov
jmp
push
shlb
jmp
addb
dec
jae
ds
xor
clc
adc
fs
jle
mov
inc
loop
push
lret
imul
fisubs
push
lock
xchg
mov
leave
pop
out
sahf
mov
or
push
push
jmp
lahf
pop
xchg
into
dec
cld
push
pop
icebp
aam
jo
dec
push
mov
cmp
jge
rolb
out
adc
or
addb
insb
lcall
cmpsb
pop
dec
jmp
pop
dec
mov
cmpsl
mov
inc
mov
test
mov
pop
push
xlat
mov
pop
sarl
sub
or
xchg
mov
mov
aam
mov
imul
mov
mov
lods
adc
mov
pop
psubsw
and
imul
xor
jbe
fnstenv
xchg
js
inc
addb
pminub
lods
enter
add
ljmp
and
push
sbb
push
aas
xchg
mov
and
sbb
or
fsubl
xchg
pushf
mov
cmp
push
xchg
mov
jecxz
fs
dec
fldl
ret
inc
inc
inc
and
add
in
mov
test
jns
clc
mov
push
sub
jbe
das
mov
cmp
dec
loop
pop
in
sub
iret
cld
cwtl
mov
cmp
or
sbb
pop
dec
subb
dec
mov
mov
dec
aam
js
stc
in
dec
dec
addb
inc
adc
cmpsb
xor
mov
mov
into
daa
mov
mov
jmp
jmp
ret
sahf
js
outsl
fbld
ss
mov
push
jg
lahf
add
and
idivl
lcall
imul
mov
dec
xchg
xchg
in
xchg
sbb
lea
dec
dec
outsl
or
xor
jo
xchg
ljmp
sub
fstpl
mov
fwait
test
push
gs
jl
test
and
pop
les
ds
cmp
test
mov
mov
std
outsb
inc
das
int
scas
pusha
mov
xchg
sub
jge
call
jg
or
addl
mov
sbb
std
aam
pop
insl
sbb
add
popf
addr16
jle
sub
outsl
scas
mov
push
mov
dec
pop
aaa
jns
jp
jp
or
popa
sub
pushf
inc
fidivrl
add
mov
mov
je
sub
bound
dec
mov
stos
lcall
or
fldl
cmpb
jo
scas
push
repz
int3
dec
lcall
xchg
das
fadds
dec
cmp
mov
push
push
xlat
push
pusha
stos
into
cmc
xchg
jnp
push
pop
mov
pop
xchg
mov
out
inc
cltd
mov
rorl
cmpsl
dec
or
mov
idivl
aam
pop
jp
dec
dec
mov
lahf
xchg
sbb
pop
inc
jbe
addr16
and
dec
insb
pusha
loop
xor
jge
out
mov
xchg
fwait
xlat
inc
arpl
cli
jp
add
addl
hlt
in
cmpsb
add
cs
je
popf
stos
mov
mov
ljmp
and
xchg
call
shl
data16
sub
sbb
xchg
inc
xchg
orb
call
stos
sub
pusha
pop
mov
and
jns
pusha
sarb
rcll
cmc
mov
shrb
call
sub
movsl
xchg
popa
or
imull
out
jnp
mov
mov
mov
icebp
popa
sbb
mov
mov
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
push
jle
popa
sbb
and
sbb
ljmp
dec
xchg
pusha
std
cmpsb
subb
xchg
mov
add
fs
shl
add
cmp
hlt
shrb
imul
mov
xchg
cld
xlat
rcrb
js
cmp
lahf
sub
fiaddl
jmp
mov
out
add
loop
sbb
cs
into
cs
xchg
mov
or
mov
jg
int
push
aam
sbb
movsb
in
push
push
pop
pop
xlat
call
popa
mov
inc
sub
push
repnz
ror
and
mov
adcl
jl
jns
cwtd
pop
scas
jle
xchg
jl
sarl
andb
loop
sti
out
stc
add
inc
popa
je
mov
xchg
cmp
sub
icebp
shrb
inc
loope
out
mov
mov
xchg
and
and
sbb
push
insb
cmpsl
or
stc
lret
push
or
push
sahf
sbb
lods
inc
repz
mov
adc
out
cmp
jb
lods
xchg
repnz
in
inc
mov
out
imul
cmc
inc
divl
mov
outsl
cmp
je
mov
ret
jnp
and
mov
mov
sub
xor
and
into
pop
arpl
adc
outsl
inc
addb
negl
andb
iret
fstpl
inc
dec
popf
xchg
aad
loopne
jecxz
scas
adc
xchg
fbld
and
cmpsb
test
rcrb
dec
pop
mov
ss
lea
add
xor
and
enter
add
rorb
movsl
dec
test
ret
repnz
pushf
in
data16
mov
fwait
jb
lahf
stc
test
popa
or
inc
scas
lods
adc
and
inc
jns
shlb
jae
mov
mov
adc
into
icebp
xor
xchg
jmp
or
or
out
imul
mov
jnp
pop
rorl
sbb
repnz
jb
decl
sbb
rorl
or
jne
xchg
outsb
scas
fistl
mov
iret
cmc
icebp
enter
and
leave
dec
pop
add
pop
xor
xor
cmp
xchg
push
aam
xchg
pop
test
mov
loope
sbb
xor
pop
clc
pop
inc
mov
ret
aad
jbe
inc
mov
repz
jbe
bound
les
icebp
xor
sbb
push
imulb
add
jns
fcomi
shlb
aaa
add
jmp
ret
imul
jecxz
bound
enter
loope
push
movsb
roll
outsl
popf
cmp
fwait
cmpsb
inc
in
xor
adc
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
mov
stos
sbb
sbb
adc
sbb
cmpl
pop
sbb
or
sbb
sub
dec
push
mov
stos
out
fdivs
pop
mov
divb
push
ret
fdivrp
lret
fbld
dec
xor
fistps
call
in
xlat
xor
xor
adc
aas
pop
xor
stc
pop
mov
fldl
ss
sbb
push
psubb
loopne
pop
lds
aas
sbb
mov
push
ds
sub
sub
sbb
xchg
rcrl
and
jnp
out
lret
fcomps
or
std
jnp
flds
sub
je
andb
mov
lahf
add
mov
filds
dec
or
mov
xchg
xchg
popf
or
cmc
fisubrs
or
mov
test
cmp
dec
jmp
xor
sarb
sbb
pop
xlat
movsb
mov
mov
cld
in
aaa
fdivrs
mov
mov
outsl
inc
call
out
and
cltd
jle
inc
jmp
and
and
mov
aad
cmp
mov
sbb
lret
out
lcall
sbb
or
sarb
test
jae
jl
xorl
jge
ret
inc
pop
push
cmp
and
das
pop
dec
fbstp
cmp
inc
dec
push
dec
add
nop
inc
jno
sbb
imul
cmpsb
or
mov
push
loope
clc
dec
add
aad
mov
lods
mov
out
call
adc
mov
ja
clc
aas
dec
mov
xlat
cmp
and
mov
xor
and
push
jmp
pusha
cmc
ja
xor
adcl
fdivs
sti
scas
testb
push
mov
jb
out
inc
arpl
outsl
jo
int
mov
xchg
mov
sbb
daa
jg
sbb
adc
shlb
push
inc
push
dec
inc
das
mov
scas
call
jnp
addr16
dec
xor
dec
push
mov
rorl
or
clc
cmp
push
push
scas
ret
adcb
repz
xlat
shll
xlat
insl
in
sbb
mov
mov
out
mov
mov
push
test
clc
aam
cld
xor
cmp
push
and
fistpll
adc
mov
dec
push
xor
mov
loop
addl
mov
imulb
inc
xchg
mov
cli
outsb
into
int3
mov
cltd
jl
dec
ss
imul
outsb
int
in
add
mov
add
cmc
arpl
adc
aam
gs
fistl
sub
scas
out
ret
pushf
inc
or
inc
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
mov
adc
mov
and
push
mov
dec
stos
pop
and
out
aad
inc
js
mov
push
fdivl
push
xchg
jb
add
fs
push
mov
inc
push
dec
bound
call
add
sbb
jnp
stos
pop
movaps
mov
and
cmp
mov
xor
fxch
push
xchg
xor
pop
dec
cs
jns
jl
jb
xchg
or
dec
cvtps2pi
in
aad
inc
cld
xor
cmovp
push
mov
out
inc
xchg
lds
xor
stos
pop
rcrb
jb
out
sbb
rcll
inc
jmp
push
psubusb
ljmp
or
data16
pop
and
sbb
dec
gs
push
xor
or
sbb
and
mov
jnp
jbe
cmp
jnp
jle
test
add
sub
pop
sarl
icebp
xchg
inc
neg
pop
pop
push
fisttpl
fimuls
push
std
aam
std
lea
pop
aad
mov
jae
nop
aad
rcrl
adc
aad
or
andb
fwait
inc
pop
sti
xchg
add
cmpsb
flds
aad
sub
sub
mov
xor
jle
jne
into
imul
pop
jo
icebp
leave
in
js
dec
pop
and
es
cmp
dec
ds
addr16
and
mov
cld
inc
dec
pusha
or
cmp
movsl
jnp
enter
inc
insb
adc
mov
cmp
divl
fs
ljmp
mov
outsl
fs
jmp
in
lock
in
xor
je
xchg
pop
mov
mov
out
add
ss
dec
mov
das
adc
mov
bound
jecxz
or
mov
mov
push
ss
mov
lahf
roll
test
jbe
hlt
in
inc
popf
or
pushf
int
push
inc
daa
push
mov
jo
into
lret
ficomps
mov
insl
mov
das
jno
scas
std
inc
in
pop
in
outsl
lock
sub
xor
nop
cmp
lods
int3
sbb
dec
fistpll
add
nop
ds
clc
push
xor
outsb
push
stos
pop
pop
outsl
adc
ljmp
decb
sbb
sub
push
mov
sbbl
pop
and
pushf
lret
jnp
dec
mov
daa
mov
cmp
lret
test
iret
mov
jge
mov
lcall
xchg
loopne
mov
stos
pop
icebp
pop
mov
pop
and
dec
lods
rcrl
and
loope
nop
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
adc
idivl
cmp
loopne
xlat
pop
lods
push
jmp
add
jecxz
leave
dec
or
in
jb
pop
out
lds
sbb
out
mov
push
mov
addr16
ss
daa
divb
xchg
pusha
lock
pop
dec
out
cmc
repz
add
into
sbb
imul
test
daa
in
pop
push
inc
jno
clc
dec
mull
or
js
mov
mov
pop
int3
out
dec
aad
ja
negb
or
in
mov
and
dec
push
mov
adc
rolb
push
sbb
jmp
jbe
dec
push
add
out
cmp
xchg
int3
lret
cmpsb
and
pop
xchg
rcll
adc
and
cmp
cmp
test
mov
xlat
cmpsl
dec
hlt
insl
push
shrb
in
jno
movsl
fs
mov
clc
or
cmc
stc
inc
outsb
ficomps
ret
movsb
rorl
cmp
jle
sti
pop
enter
dec
mov
mov
ss
stos
dec
cmp
inc
sbb
jo
push
cmpsb
shrl
int3
or
mov
jp
ljmp
test
in
or
pop
cmp
cmp
imul
std
xchg
sub
mov
mov
ja
xor
ja
and
pop
aam
scas
push
pushf
subb
xchg
lods
jo
pop
clc
es
jb
cmpsl
pop
dec
sbb
testl
xor
clc
adc
shr
mov
test
and
lea
inc
xchg
cld
outsb
mov
imul
and
xchg
xchg
repz
xchg
stos
mov
outsl
sbb
or
data16
pusha
jmp
dec
inc
lcall
cmp
outsb
fdivr
xchg
inc
lea
and
sbb
mov
popa
idivl
mov
cmp
mov
scas
jmp
pop
xchg
fs
jne
push
sub
mov
pop
lahf
out
inc
jmp
sub
out
insb
popa
mov
std
jb
negl
fildll
sarb
mov
fstps
pop
jns
sarb
daa
push
les
adc
cmp
hlt
cmp
jb
push
subl
outsb
mov
sahf
or
sti
xchg
andnps
and
push
add
cmc
andb
popa
les
orl
sbb
jl
dec
fisubrs
pop
movsb
popa
daa
sbb
cld
inc
dec
mov
ret
fnstcw
test
repnz
sbb
movsb
pop
pushf
enter
cltd
cltd
mov
jmp
fiaddl
jmp
insb
je
sub
mov
lea
mov
outsl
cli
inc
popa
and
jl
stos
xchg
fnstenv
push
jns
xor
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
xor
xor
sbb
adc
sbb
ja
das
cmp
inc
shrl
dec
or
xchg
pop
and
rcll
push
sub
pusha
addl
mov
in
pop
jge
repz
jne
or
cli
pop
mov
xor
jecxz
dec
dec
sbb
jae
push
sub
rcrl
mov
icebp
bound
jbe
mov
xor
sarl
xorl
fnstenv
push
sbb
je
mull
cltd
not
fcoml
fwait
addr16
inc
inc
mov
add
jecxz
inc
mov
sub
clc
pop
sbb
jae
push
push
stos
sub
mov
lds
push
fidivl
stc
jp
aas
mov
and
int3
les
fbstp
in
pushl
sti
push
dec
iret
cli
adc
mov
push
sbb
in
pushf
test
cmpsl
popf
in
aad
jno
pop
mov
outsb
aad
mov
ror
xor
aaa
adc
jae
push
push
rorb
iret
test
mov
mov
and
or
xchg
movsl
pop
push
pop
ja
add
pusha
xchg
or
mov
cmp
push
dec
mov
xchg
mov
cltd
mov
shll
ficompl
ja
test
sbb
fldl
rcll
lret
inc
inc
call
push
data16
and
in
sub
cli
push
sahf
cltd
xchg
in
adc
push
inc
popl
mov
mov
stos
cmpsb
jbe
addr16
int3
outsb
push
xchg
mov
addr16
cmc
push
aam
xchg
or
jns
jmp
push
xchg
fwait
inc
sub
adc
and
insl
lret
lock
mov
dec
fwait
or
adc
jmp
mov
in
add
mov
cmc
or
es
push
mov
sahf
jp
gs
lret
adc
fimuls
test
aaa
punpcklbw
sbb
push
int
scas
filds
ljmp
daa
ja
int3
ret
into
cmp
pop
imul
adc
xchg
lock
imul
insl
xor
scas
mov
add
adc
adc
int3
cmp
aad
ficoms
xlat
stos
jge
and
rcrl
repz
or
sbb
aad
mov
sbbl
popf
les
sub
nop
cld
pop
dec
les
dec
test
push
lock
pop
and
adc
sbb
mov
cmp
bound
pop
lock
imul
push
and
sub
pop
stc
sar
les
sub
stos
ja
mov
imul
sarb
cmp
add
inc
aam
dec
leave
or
jmp
rorb
push
dec
dec
negb
xor
aas
jl
or
aas
ljmp
xlat
pop
lea
lock
in
pop
sti
pushf
cwtl
cli
nop
pop
sarb
pop
cmp
pop
ret
xchg
inc
xchg
push
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
dec
xor
mov
add
sbb
add
clc
sub
cmp
cmp
mov
cltd
outsb
mov
mov
dec
fcmovb
outsl
add
xlat
sbbb
aas
leave
sub
aaa
cmp
xor
in
out
cmp
rol
adc
je
lahf
xchg
pop
ljmp
cmp
int3
cmp
movsl
movsb
leave
notl
adc
addr16
mov
jno
xchg
shrl
inc
loopne
xchg
bound
dec
or
ja
aad
adc
std
ret
adc
stc
jecxz
insl
cli
mov
mov
inc
cmp
xchg
push
mov
js
shll
dec
cwtl
aas
or
cmpsl
jnp
lds
pop
mov
cmp
insb
add
fwait
js
dec
mov
mov
test
out
sbb
js
jl
mov
pop
mov
hlt
out
push
jmp
fdivrs
imul
pop
outsl
int3
lea
pop
cmpl
xchg
repnz
cmp
or
pop
adc
ret
arpl
in
fisttps
jns
movb
mov
rcr
in
xor
add
or
movsl
aas
popf
stc
popa
lret
enter
insl
nop
pop
std
pop
dec
jno
dec
rclb
mov
cmp
icebp
jg
jge
dec
dec
mov
mov
jge
lret
cmc
test
arpl
and
jae
test
in
lcall
jecxz
lahf
pop
mov
cltd
loop
mov
ret
xor
xor
fidivrs
mov
mov
lock
adc
jae
cs
fists
fsubs
psrad
loope
sbb
cs
loop
jmp
insb
cmpsl
push
stc
and
mov
repnz
lods
mov
stc
push
scas
int3
out
or
cmp
mov
fidivl
out
push
imul
cmp
cmp
mov
nop
idiv
inc
mov
or
adc
dec
std
fcmovb
lahf
push
mov
test
nop
add
arpl
orb
sbb
push
push
sbb
push
cmc
loop
stos
test
aam
dec
dec
neg
loope
or
push
xchg
cmpsl
and
push
icebp
rcll
jne
xor
mov
pop
inc
mov
dec
sub
out
pop
mov
xchg
sub
pop
mov
repz
int
test
scas
out
roll
aaa
push
mov
cmp
shrl
xor
aas
jg
lret
mov
stos
mov
mov
sub
or
sub
cmp
cmp
sbb
push
sbb
shrl
dec
loop
pop
mov
jl
ljmp
add
mov
push
mov
adc
pop
clc
in
mov
cmpsb
inc
movd
sbb
shll
in
scas
sbb
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
stc
aaa
lods
mov
cmp
sbb
inc
imul
sub
adc
stc
fcompl
pop
ds
iret
cld
jns
sarl
pop
imul
cmp
inc
inc
fwait
in
outsl
dec
push
pop
push
sbb
leave
xchg
popf
adc
std
mov
xor
aaa
mov
out
mov
mov
xchg
add
and
mov
mov
mov
mov
std
push
insl
in
popf
jne
popa
punpckldq
mov
imul
mov
jg
stc
fdivrs
pop
imul
inc
push
je
sbb
bound
add
mov
into
mov
and
fstpl
dec
push
or
sub
frstor
cmpb
lret
scas
in
pop
push
jbe
ss
cs
or
sub
mov
mov
leave
rcrl
jo
out
bound
sub
fldenv
push
pop
test
jge
cmpsb
das
sti
mov
ss
push
aas
loop
xor
test
imul
test
int
in
adc
stos
sahf
jnp
push
negl
jmp
ret
and
outsl
pop
pop
ss
fildll
pop
pop
stc
in
cmp
sar
cwtl
add
je
adcl
out
pop
pushf
push
xchg
flds
mov
rcll
cwtl
sbb
addb
js
imul
cs
int3
or
shl
xchg
xorl
push
adc
jb
inc
iret
sub
pop
fisubl
inc
mov
cld
pop
sub
adc
xchg
lods
imul
cmp
mov
push
orl
ljmp
neg
mov
sahf
xor
adc
fldl
lea
xchg
inc
ds
mov
add
sub
xor
or
jg
je
inc
inc
xchg
aas
pop
js
xchg
and
mov
pop
leave
dec
imul
mov
aas
lret
cmc
fimull
dec
aas
dec
or
enter
sub
jb
sub
inc
imul
xchg
cltd
js
jl
xchg
mov
aam
aas
imul
outsb
lock
dec
adc
test
inc
or
repz
push
mov
push
imul
insb
mov
lahf
addr16
cmp
test
jl
roll
push
add
mov
add
mov
clc
mov
aas
mov
cld
jp
mov
fcmove
cmpsl
mov
dec
jo
push
xor
or
or
sbb
gs
push
and
lgdtl
mov
jns
push
mov
nop
nop
scas
sub
insb
mov
xor
inc
xchg
cvtdq2ps
int3
mov
and
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
fmuls
jle
aaa
sbb
add
sbb
addr16
stc
sub
inc
xor
pop
dec
push
add
mov
cmpsl
movsl
dec
push
inc
xorl
pop
mov
js
inc
scas
sub
pusha
divl
sub
cltd
outsb
pop
jecxz
jg
bound
add
sub
xor
into
cmp
jb
fdivs
lods
out
popa
in
adc
icebp
js
cs
adc
inc
fld1
loopne
mov
and
ficomps
out
aam
add
push
adc
daa
shll
loope
mov
andb
add
dec
fcmovb
fisubs
ret
jle
push
push
xor
out
sub
ds
out
ljmp
fmulp
lahf
inc
xchg
push
jae
int3
test
and
fisttps
pushf
mov
iret
stc
add
cmp
ljmp
xchg
sub
mov
cmpsb
loop
dec
or
rorb
push
addr16
or
pop
cltd
roll
stos
gs
sub
aaa
sub
pop
and
movsl
xchg
lret
mov
mov
xchg
push
fwait
push
sbb
data16
push
push
popa
jnp
popa
aas
aam
add
stos
xor
mov
lahf
dec
sub
gs
cmp
cld
xor
jo
and
mov
or
mov
pop
leave
test
dec
daa
pop
in
pop
stos
pop
repnz
sbb
ds
push
mov
adc
sahf
cltd
stos
lret
mov
and
mov
dec
sti
les
jmp
push
lahf
dec
push
sbb
push
lods
into
jnp
pop
push
ficoms
lods
mov
sbb
jecxz
inc
add
push
jmp
push
addr16
loop
mov
pop
jae
insl
pop
jp
dec
or
gs
and
and
aam
out
popf
clc
dec
jnp
pop
call
in
sbb
inc
lret
dec
xchg
cmc
scas
es
pop
mov
pop
notl
jl
jl
jl
mov
mov
xor
movsl
push
xlat
pop
and
dec
incb
mov
jmp
jae
ja
mov
pop
outsl
sub
jg
add
add
nop
add
nop
xchg
or
jns
pushl
add
inc
dec
dec
sahf
xchg
int
lods
inc
sub
xchg
pushf
shl
scas
test
dec
inc
imul
mov
pusha
jmp
cmp
adc
pop
ret
sar
cmpsb
mov
pop
inc
mov
call
push
int3
call
mov
ret
outsl
sub
jmp
insl
push
mov
fwait
jo
fisubrl
push
loopne
movsl
in
jl
fcomip
ljmp
sbb
clc
xor
call
fsubr
mov
test
movsb
sub
pop
sub
jno
lods
sub
orl
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
cli
mov
add
sbb
cmp
clc
stos
test
adc
stc
jo
sbb
mov
imul
cmpsb
fdivs
add
jno
test
ret
in
jno,pt
pop
mov
xchg
shll
jecxz
push
mov
inc
push
aaa
mov
sbb
test
loopne
mov
je
movsb
cltd
out
addl
add
roll
loopne
fs
push
cli
dec
sbb
loopne
mov
pop
mov
nop
scas
xchg
or
cs
or
or
xchg
dec
daa
push
xchg
push
and
popa
cmpsb
inc
aam
cmp
push
pushf
and
mov
adc
jl
push
mov
psrlw
push
gs
imul
xchg
lahf
sub
aas
mov
outsb
xchg
adc
xor
stos
adc
sti
mov
cmp
popa
sarb
sahf
pop
jmp
mov
js
push
fiadds
roll
sub
push
inc
cmp
mov
jno
mov
cmp
xor
xchg
inc
add
xchg
sarb
fcoms
mov
mov
out
loopne
xor
sub
in
dec
jns
pop
cltd
xor
ljmp
pop
adc
into
xor
scas
stos
add
insl
xorl
inc
movsl
arpl
and
pop
ret
popf
insl
or
icebp
or
cmp
addr16
shll
movsb
scas
loope
js
push
enter
filds
cmp
cwtl
pop
jne
and
lock
loop
dec
mov
xchg
movsl
loopne
sbb
xchg
aad
pop
xor
sahf
dec
cmpsl
imul
jmp
ficompl
push
test
hlt
fimull
push
xchg
loop
leave
adcl
pop
test
xor
fldt
xchg
ljmp
push
push
or
mov
mov
and
adc
xchg
mov
push
sbb
out
test
push
push
xchg
push
out
adc
add
ret
mov
loop
sti
push
push
dec
mov
adc
fwait
andb
mov
push
cwtl
pop
push
mov
imulb
inc
xchg
xor
gs
dec
insl
adc
push
jbe
sub
or
inc
cmp
sahf
pusha
imul
lcall
or
sbb
test
enter
pop
dec
dec
jge
or
cmp
or
inc
mov
test
cmpsl
pop
outsb
sbb
in
outsb
mov
jno
inc
mov
pop
cmp
shrl
xchg
scas
mov
cs
and
jecxz
movsl
or
jae
lock
aam
mov
pop
out
cmp
push
lcall
das
push
jmp
add
push
sbb
ja
in
shll
adc
sbb
and
sbb
cltd
int3
jmp
outsb
cwtl
inc
jl
loopne
movsb
dec
in
sar
out
xlat
ficompl
pop
inc
jg
mov
scas
pushf
lret
and
sub
sbb
xor
inc
inc
shrb
xor
push
push
aas
fwait
call
shll
xchg
xor
xor
into
leave
scas
push
mov
dec
in
and
nop
push
movsl
out
test
inc
push
sbb
dec
lahf
jae
xchg
outsw
mov
xchg
jnp
stos
popf
outsl
cmc
lds
jp
mov
mov
or
jl
or
insl
add
and
lret
or
pop
xlat
mov
cmp
mov
adc
mov
cmp
inc
movsb
push
dec
xchg
aam
imul
shrl
fcmovbe
dec
add
mul
rcrl
gs
mov
jb
clc
xlat
mov
jl
adc
add
or
sub
insl
push
cmpsb
iret
xor
rolb
inc
lods
xor
xchg
aad
or
mov
adc
mov
inc
xchg
ficomps
test
stos
into
int3
popa
jns
jne
fistpll
mov
adc
test
cmpsl
testb
lea
fisubrl
mov
movsb
flds
adc
icebp
aas
cmpsl
jl
xor
xlat
mov
adc
fcmovb
int3
fnstcw
out
xchg
sub
xorb
lret
push
sahf
lock
mov
inc
iret
jge
aas
aaa
mov
dec
mov
jmp
sub
ja
pushf
push
fdivrl
dec
decl
movsb
pusha
or
push
pop
xchg
jle
sbb
movsl
add
add
pop
xchg
push
add
out
movb
mov
mov
xor
icebp
adc
mov
add
mov
cmp
pop
inc
stc
xchg
lds
mov
or
or
pop
lahf
inc
out
xor
mov
sbb
push
lahf
inc
fidivrs
or
add
sbb
in
insb
add
cmc
fildll
inc
push
lds
pop
adc
mov
lods
out
insl
push
pop
inc
sbb
fisttpl
jp
jl
cmp
insl
pop
pop
ja
outsl
push
cmp
ja
pop
and
gs
adc
or
inc
rorb
movsb
mov
jb
js
loope
iret
mov
xchg
xor
mov
mov
mov
xchg
sub
popa
xor
dec
sub
lret
xor
popf
negl
dec
mov
hlt
jmp
icebp
test
dec
call
sub
cmpsb
in
in
subl
adc
sub
insb
lcall
subl
mov
in
pop
and
add
hlt
mov
mov
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
outsb
lock
add
sbb
xor
sub
into
shl
adcb
test
call
push
rol
js
cli
inc
popf
addr16
pop
pop
inc
aad
inc
std
fdivl
rorb
ss
decb
push
les
or
test
in
inc
pop
xor
mov
pop
std
aam
sub
pop
test
rclb
movsl
mov
dec
sub
enter
cmp
push
test
mov
stos
mov
cmp
nop
or
in
mov
xchg
jo
jb
loopne
dec
lcall
loopne
add
movsl
xchg
push
in
or
mov
mov
data16
xor
or
fs
mov
mov
xchg
repnz
fstl
mov
test
js
jns
dec
xchg
out
add
push
mov
push
mov
mov
stos
push
push
xor
outsl
push
add
and
or
sahf
add
xor
aam
pop
xchg
jmp
out
stc
cmp
adc
and
lock
stc
inc
sbb
aaa
dec
push
mov
adc
dec
addb
pop
movsb
dec
aam
rclb
cmpsl
shlb
cmp
xchg
xor
cmp
xchg
into
inc
xor
and
mov
push
sub
daa
mov
or
sbb
fiaddl
lea
xor
repz
pop
test
dec
dec
pop
lret
lods
fisubrl
push
aam
adc
jg
adc
jl
cmpsb
test
mov
cmp
sbb
pop
movsl
dec
bnd
loope
sbb
cs
lea
and
addr16
in
jb
jg
gs
cmp
cmp
dec
inc
test
cmpsb
sbb
jmp
sahf
add
orl
jl
pop
cmp
scas
adc
stos
ret
xor
adc
cld
fcoms
jae
mov
and
push
insb
cmc
jae
inc
inc
cmp
loope
hlt
add
push
lret
push
cmp
jmp
push
and
je
mov
or
cmp
or
mov
cmp
xor
data16
cwtl
cmpsl
pop
fisttpll
jl
push
sbb
jge
xchg
inc
cmp
inc
mov
stc
mov
adc
dec
or
call
or
ljmp
push
mov
xchg
sub
insb
sub
frstor
mov
sbb
mov
test
insl
pop
cmp
and
fimuls
lcall
jge
lods
mov
mov
cmp
divl
mov
icebp
lods
sbb
imul
imul
or
dec
test
lcall
les
add
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
mov
mov
pop
sbb
add
sbb
shll
xor
cld
cmpsl
out
cld
repnz
ret
std
shlb
jmp
es
mov
les
aad
repnz
mov
and
cwtl
add
jge
sbb
cld
outsl
imul
mov
adc
fwait
rolb
jg
mov
mov
cmc
sbb
stc
outsl
shrl
call
fsubrs
jp
adc
sub
movsl
lds
test
daa
and
sbbb
sarl
and
push
lcall
icebp
sbb
push
inc
mov
add
shrl
sbb
mov
cmp
ficompl
bound
in
ficomps
adc
adc
jo
int3
enter
int3
insl
aad
bound
fstps
inc
and
cltd
jp
fwait
fs
adc
notl
int3
or
cltd
loope
dec
dec
ljmp
mov
dec
push
and
hlt
lret
adc
add
imul
adc
add
jbe
fiaddl
and
mov
clc
test
mov
test
mov
out
xor
xchg
pop
in
in
xor
hlt
push
mov
ret
les
xchg
lea
add
std
dec
xchg
xor
mov
ljmp
in
pop
sbb
inc
inc
les
scas
sarl
test
mov
sbb
push
scas
inc
jl
fiadds
cmp
je
push
fstps
in
adc
adc
xchg
lock
popf
pushf
stc
stos
leave
inc
push
pusha
push
stos
push
lds
dec
sub
out
sbb
not
out
das
ret
xchg
and
add
std
movsl
fmuls
and
leave
adc
pushw
out
lcall
cltd
pop
mov
je
mov
and
xor
mov
mov
ret
outsl
jno
cli
arpl
fimuls
pop
pop
inc
ljmp
dec
decl
sbb
inc
les
mov
mov
xor
mov
pop
ret
mov
popf
mov
jb
repnz
jmp
cmc
in
inc
ret
cwtl
fwait
mov
ficoms
or
xchg
push
outsb
and
mov
psrad
bound
aaa
clc
loopne
data16
pop
xchg
fbld
dec
movsl
sbb
loope
ss
jg,pt
cmpsl
out
inc
popa
xchg
loopne
mov
xchg
mov
xlat
cmpb
je
sub
mov
mov
xor
or
cmpsb
hlt
sub
push
pop
sub
mov
pop
dec
cmp
fsubp
xor
out
aaa
test
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
test
cmp
std
and
cmpsl
or
jns
xchg
xchg
adc
mov
or
add
xorl
adc
sub
mov
jmp
jne
xchg
or
nop
cltd
mov
insl
sbb
jecxz
or
pop
mov
fwait
jo
cmp
xchg
popa
xchg
loop
daa
cmp
push
mov
push
and
andb
inc
mov
push
mov
xchg
ja
dec
fcomps
in
scas
rorb
mov
add
nop
inc
jge
cld
mov
mov
repnz
xorb
dec
adc
pop
lods
pop
push
and
push
mov
sub
add
add
or
adc
outsl
ret
outsl
jp
pop
test
and
pop
xchg
dec
mov
inc
scas
inc
mov
jmp
dec
stos
inc
ret
or
stos
aam
and
mov
divb
ja
mov
xchg
addb
mov
lods
jp
ljmp
movsb
pop
imul
inc
iret
movsb
cmc
or
lcall
push
mov
jl
jns
jns
scas
inc
lahf
inc
adc
addl
ja
inc
cmp
mov
xchg
inc
je
and
fmuls
dec
ret
lea
inc
pushf
sbb
push
jle
sub
jnp
push
movsl
mov
aas
movsl
popf
jb
mulb
sti
imul
daa
or
xchg
bound
add
int3
xchg
lods
cmp
cs
cli
dec
xlat
shl
push
es
ss
gs
cmp
cmp
inc
sub
and
gs
mov
mov
mov
pop
inc
js
stos
add
sarl
sub
mov
or
mov
pop
into
std
xchg
cwtl
add
subl
inc
xchg
ss
push
adc
add
mulb
xlat
push
sub
push
xchg
push
inc
mov
lret
inc
ss
xchg
cmp
sub
fwait
inc
sbb
call
popf
loopne
push
loop
lcall
into
xchg
lods
iret
sbb
andb
in
push
cmp
scas
aas
mov
sti
cmpsb
lahf
push
inc
jg
in
cmp
jl
sub
lahf
xchg
jg
out
fdivl
xchg
stos
and
stos
enter
cmp
dec
jno
outsb
push
xchg
clc
push
out
dec
popa
int
jno
mov
mov
pop
ss
xor
int3
mov
sbb
sbbl
cmc
stc
lea
shrb
dec
xchg
rcll
dec
outsl
and
jp
dec
in
pop
sbb
test
ret
hlt
scas
pop
adc
test
push
mov
jbe
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
push
pop
jge
pop
adc
sbb
adc
sbb
inc
lahf
das
fldcw
jo
mov
fs
cmp
mov
jmp
push
jne
test
cmc
xlat
fst
sti
test
adc
hlt
loope
jbe
out
pop
cmpsb
or
sti
fldt
in
pop
dec
movsl
jle
adc
cmp
test
aaa
and
xor
stos
add
mov
inc
test
inc
pop
xchg
call
sub
mov
xor
mov
fnsetpm(287
mov
addb
mov
xor
int
mov
cli
enter
xchg
mov
sub
push
xchg
lds
pop
or
adc
mov
dec
aas
ret
imul
mov
sbb
pop
scas
pop
cmp
jae
lods
cmpsl
mulb
or
insb
jl
icebp
sahf
sub
subb
dec
add
sbb
jb
outsb
sbb
sbb
push
inc
loope
lods
dec
add
into
les
pop
aam
xchg
xchg
xchg
rorl
xor
mov
in
fcoms
xor
mov
adc
dec
pop
and
mov
jb
dec
ds
or
std
hlt
mov
test
jae
or
clc
sub
jae
call
cmp
xchg
scas
pop
movsb
lods
pop
in
xor
and
es
enter
sub
stc
repz
add
or
jle
insl
xchg
lock
xchg
fs
out
mov
add
pop
xor
popf
roll
xor
in
mov
in
ss
push
jp
enter
cmpsb
and
mull
mov
pop
inc
jmp
fcmovne
cmc
cmp
insl
xor
ja
out
ja
sbb
inc
lods
sbbb
mov
aas
mov
aaa
sarl
mov
sub
cmc
add
lret
ds
insl
adc
and
xor
enter
sbb
mov
mov
push
in
aam
mov
adc
add
shr
adc
mov
and
xchg
data16
sub
push
sahf
iret
mov
jno
leave
repnz
cmpsb
and
inc
shlb
xchg
lcall
xchg
jg
xlat
mov
xchg
pop
adc
jns
call
mov
push
loopne
dec
repnz
mov
xchg
repz
mov
push
pusha
imul
dec
dec
fwait
imul
testl
cs
sbb
xchg
jg
jno
repnz
adc
cmc
out
jbe
leave
hlt
pusha
push
sbb
mov
divl
arpl
push
mov
inc
fwait
dec
popa
xor
xor
addb
sbb
inc
fst
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
call
sbb
test
sbb
xor
add
dec
test
xor
dec
shll
out
dec
xchg
inc
dec
bound
lds
adc
xlat
and
mov
enter
xlat
insl
cmp
icebp
test
pop
jecxz
gs
out
or
divb
cmp
jl
or
lds
push
fmul
adc
adc
xchg
xchg
inc
mov
push
cmp
hlt
scas
arpl
in
je
xchg
enter
push
jmp
fidivs
sbb
cld
xchg
mov
lret
daa
data16
out
mov
push
mov
fsubp
aas
dec
adc
cwtl
jbe
ret
add
xor
imul
mov
or
xchg
inc
cmp
ret
test
or
fistpll
add
xchg
pop
jp
dec
ja
inc
pop
loope
or
jmp
add
mov
aad
xor
arpl
cmp
or
xchg
mov
ret
adc
xchg
or
inc
movsb
imul
cli
pop
sbb
adc
aas
sub
fs
cmp
rclb
adc
das
and
bound
js
and
lret
test
sbb
cmp
scas
dec
xor
cmp
shrl
stos
outsb
sub
outsl
out
push
lea
pop
or
fldcw
fisubl
jp
xor
das
inc
aas
repnz
hlt
cltd
mov
jp
xchg
lcall
mov
loop
ror
cmp
xor
xchg
inc
int3
adc
jecxz
cltd
std
pop
into
push
mov
icebp
push
push
mov
sar
sti
xlat
into
sti
out
jnp
lds
insl
mov
adc
in
das
cmp
push
testb
or
pop
out
dec
sbb
jl
hlt
movsl
adc
push
mov
add
mov
lds
pop
mov
ror
dec
dec
inc
sti
mov
add
cmp
xor
adc
call
out
jnp
loope
fs
jmp
adc
cmp
sbb
inc
pop
pusha
push
lahf
or
sub
test
adc
movl
in
xor
and
popf
loope
push
loop
or
sbb
fimull
mull
dec
cmp
or
cmp
cld
mov
aaa
imul
mov
fdivs
jne
cmpsb
ret
lds
cmp
mov
ror
in
sub
ret
xchg
insb
jbe
addl
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
adc
mov
test
sbb
test
sub
in
and
cmp
pop
inc
movsl
push
out
jg
lcall
out
rorl
add
and
out
sub
jle
in
lret
lret
repz
sbb
pop
je
cmp
jle
mov
loope
movsb
mov
jmp
in
mov
jmp
or
in
cmp
ja
adc
push
test
cmpsb
inc
int
xor
pop
dec
jae
loope
or
sub
cmp
lret
cwtl
iret
push
mov
jmp
stos
jnp
arpl
jnp
mov
mov
or
lcall
adc
add
das
mov
or
js
add
lods
or
ds
and
setge
lods
sub
inc
and
insl
cmp
jo
sbb
mov
mov
xor
cmp
dec
cmp
mov
xor
aam
jecxz
pop
jp
loop
movb
outsl
or
fmull
xor
xor
mov
sbb
xor
lods
push
jmp
sbb
ss
mov
or
jl
dec
and
push
cmp
stos
xor
in
or
ja
aad
sub
out
cmpb
mov
push
mov
stc
cmpsl
add
pop
xchg
loop
inc
cmpsl
sub
fnstsw
sbb
cmp
bswap
lods
mov
fists
or
ds
jo
arpl
das
pop
push
ja
repnz
pop
lret
mov
adc
int
mov
push
adc
stc
xchg
adc
jae
out
xor
mov
or
mov
sub
add
out
sub
lods
test
rol
xor
inc
mov
ficoml
mov
pushf
push
jmp
xchg
fcmovb
dec
test
pop
fidivrs
fstpt
and
mov
scas
fwait
ret
jno
mov
fcmovnbe
dec
leave
xor
cmpsb
push
mov
or
cli
subb
insl
inc
xchg
xchg
out
xlat
loope
mov
pop
lock
or
sub
cmp
inc
inc
insb
or
jecxz
cli
cld
lcall
mov
ljmp
lret
xor
movsl
hlt
jo
dec
loopne
push
sub
ret
mov
out
lea
mov
sub
push
inc
xor
test
mov
jmp
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
pop
or
add
sbb
dec
iret
sub
sti
xor
in
pushf
divl
lcall
nop
iret
sub
xor
add
ds
push
lret
sahf
icebp
mov
inc
cli
movsl
test
mov
inc
ja
call
ss
add
testb
dec
jg
into
and
fmuls
mov
mov
push
push
fistps
sub
nop
add
repz
or
mov
sub
lock
mov
roll
imul
mov
fsin
mov
cmp
in
insb
out
and
push
push
fmull
stos
sub
rcll
adc
push
imul
push
or
push
pop
xchg
lret
in
mov
imul
pop
cmp
adc
jmp
xchg
pop
jp
mov
xor
or
aaa
cmc
call
mov
mov
aaa
fcoml
sbb
aam
add
lahf
add
pushfw
mov
jo
orl
mov
lahf
nop
lcall
sbbb
int3
mov
arpl
adc
jp
mov
cmp
stos
mov
stc
mov
ret
pop
mov
push
mov
pop
jp
mov
adc
cli
out
push
scas
pop
aad
sahf
fsts
inc
or
lds
inc
lds
dec
xchg
add
mov
or
dec
cmc
or
sarl
push
push
push
lret
lods
cmp
add
sub
test
lret
sub
mov
jle
andb
addr16
mov
push
mov
mov
and
mov
lock
mov
enter
mov
inc
loop
mov
cmp
aaa
dec
lds
into
mov
dec
sbb
arpl
adc
cmp
ret
push
packssdw
xchg
gs
clc
pop
push
stos
add
pop
lea
xchg
pop
insb
and
xchg
cld
data16
xchg
ljmp
xor
xor
loope
dec
or
and
test
mov
orl
lods
js
imul
imulb
or
cs
cmp
mov
insb
leave
mov
push
xchg
mov
aaa
pusha
jle
inc
pop
call
stc
addl
in
xor
jp
push
cmp
and
bound
push
pusha
into
in
subb
push
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
cld
mov
sti
sbb
test
sbb
pop
shl
loope,pn
lock
adc
mov
sbb
dec
jns
or
fcoml
outsl
xor
out
xchg
ja
stos
in
test
pop
cli
push
and
xchg
out
push
pop
xchg
or
sbb
call
fmul
aas
leave
cmp
in
pushf
mov
pusha
xor
test
repz
ds
xor
hlt
ficoms
jge
aad
mov
sub
outsb
cmpsl
inc
sti
jno
push
sbb
pop
add
adc
and
stos
cmpsb
icebp
nop
repz
daa
pop
adc
loopne
decl
xor
das
dec
mov
into
add
ret
dec
es
dec
adc
sarl
cmc
adc
fbstp
lret
daa
inc
push
mov
sbb
cmp
shr
inc
sbb
dec
sbb
pop
or
test
cmp
cmp
arpl
ds
mov
ljmp
fldenv
loop
mov
jecxz
pop
inc
fwait
scas
sub
mov
sar
add
scas
add
sahf
and
jle
xor
mov
rcrl
mov
cltd
jecxz
mov
add
xchg
push
dec
push
ficoms
jp
push
fimuls
mov
loopne
mov
cmpsb
popl
and
loop
cltd
fprem1
dec
cli
cmc
decb
sti
jp
mov
ficomps
mov
ss
cmp
mov
out
movsl
stos
js
sub
or
jo
aam
ror
lods
dec
pusha
iret
mov
jecxz
jmp
push
outsb
push
dec
mov
cmp
movl
aaa
icebp
pop
jns
inc
rcll
add
dec
cmpsb
or
fildll
movsb
jle
iret
in
push
lret
lock
lea
imul
sub
push
lock
icebp
mov
push
orl
cli
jmp
out
out
leave
jmp
pop
adc
xchg
lret
mov
xchg
lock
mov
xchg
xchg
jne
add
add
jbe
push
cmp
inc
fsubs
pop
xor
mov
into
rol
pushf
lods
cmp
or
sbb
and
loopne
jmp
inc
insb
pushf
lods
data16
xlat
mov
inc
mov
imul
mov
and
packsswb
stos
jp
sbb
xorb
popf
sbb
icebp
test
addr16
mov
cmp
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
fnclex
push
jle
negl
sbb
xor
stc
nop
movsl
pop
pop
sub
add
fbld
loopne
punpckhdq
lock
or
mov
in
bound
into
cmp
push
test
xchg
int3
jb
leave
fs
addl
mov
rcrb
stos
loope
xor
mov
sbb
pushf
ret
adc
pop
out
or
mov
stos
sbb
out
inc
mov
cwtl
mov
jbe
pop
outsl
shll
xchg
and
das
hlt
testl
add
fcmovbe
push
mov
pop
jg
xchg
adc
fnstenv
cld
call
mov
cmp
jno
std
push
or
popf
popa
cmp
icebp
jns
sbb
add
and
in
js,pn
shll
fwait
iret
add
jbe
test
adc
filds
aam
sbb
int3
jns
shl
mov
and
inc
insb
dec
mov
or
ret
add
lods
jecxz
loopne
inc
arpl
add
add
call
stos
or
xchg
clc
mov
mov
std
xchg
xchg
jle
jno
rol
adc
jns
push
out
adc
into
cmp
hlt
insl
in
sub
push
aaa
inc
fcompl
jmp
or
jne
pop
popf
jg
lcall
or
mov
clc
test
cltd
jl
sbb
push
cmp
mov
pop
cmp
sub
sbb
mov
fcmovne
fsub
out
mov
sub
imul
inc
mov
mov
and
pop
add
test
enter
loope
push
testl
leave
lods
cmp
push
rcll
sarl
test
push
int3
int
shl
jns
adc
loop
xor
stc
mov
fsts
das
xchg
xchg
nop
in
les
shlb
cltd
roll
pop
fwait
arpl
es
std
or
jae
enter
sub
mov
cmp
das
rcl
into
lods
sti
sub
xor
adc
pop
mov
je
and
xlat
out
gs
pushf
int
sbb
pop
pop
dec
cmpsb
sbb
sub
mov
ret
pop
das
mov
arpl
pop
mov
aas
sbbb
mov
inc
iret
mov
jge
out
fs
ret
sub
xchg
rcrb
cmpl
push
xchg
xchg
out
insb
dec
lock
cmpsb
ja
inc
std
dec
or
in
dec
pusha
hlt
lds
hlt
cwtl
shll
rol
inc
call
movl
jmp
aas
mov
mov
dec
mov
jmp
sbb
add
jno
xchg
mov
add
repz
pushf
pop
cli
dec
pop
xchg
pop
test
test
loope
mov
fsubl
or
scas
fcompl
add
sub
loope
sbb
mov
pop
std
popa
icebp
xorb
inc
push
inc
aaa
mov
cmpsl
fwait
stos
lret
test
adc
out
mov
xor
mov
sti
bound
inc
pop
push
add
fistpl
aas
gs
xor
mov
or
xlat
mov
daa
test
and
in
ret
cmc
ret
je
out
mov
call
mov
dec
pop
adc
cmpsb
fnstenv
aaa
fcomps
and
sub
push
cmp
dec
mov
mov
mov
jecxz
xchg
std
push
sbb
repz
shl
js
inc
cmp
sbb
xor
aas
jmp
into
adc
mov
push
xchg
jno
pop
sbb
out
inc
shlb
push
lock
fucom
scas
mov
leave
cltd
enter
mov
fisttps
adc
mov
mov
pop
mov
or
and
dec
jl,pt
lret
call
bound
shll
lahf
fisubs
sub
jno
ja
jmp
aad
shll
or
pop
mov
push
bound
and
lcall
cli
nop
pop
outsb
mov
nop
sub
in
lea
add
jae
in
test
popf
pop
inc
sbb
jae
jle
lahf
es
inc
sub
add
inc
aas
outsl
cmp
aad
lahf
or
jge
popa
xchg
push
jae
imul
loopne
mov
inc
movsb
push
pop
dec
mov
push
lret
lea
jbe
xor
mov
mov
pop
mov
lret
ljmp
push
mov
cs
mov
cwtl
out
sbb
or
pop
lock
lahf
mov
push
mov
jbe
aad
adc
ss
add
jbe
xor
or
add
and
cmp
lcall
jecxz
xor
shlb
loopne
xor
test
xchg
mov
sar
jl
out
aad
pusha
mov
popf
repz
or
pminsw
addr16
jo
sub
fmul
jae
aam
leave
sbb
icebp
int3
out
fdivr
fstl
push
or
jge
push
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
jecxz
mov
adc
sbb
and
int3
stc
add
inc
pop
in
das
and
cmpsb
or
popa
push
pop
dec
inc
jb
xchg
and
jg
pop
popf
xor
subl
inc
pop
add
push
ljmp
mov
and
iret
insl
adc
push
std
xchg
je
pushf
jmp
xchg
lds
and
ja
jne
daa
sbb
sti
lods
imul
pop
dec
cltd
addr16
mov
flds
dec
or
mov
add
pop
mov
sub
cmp
and
dec
jecxz
push
lods
xchg
je
pop
int
loop
and
movsb
fisttps
hlt
jo
push
cmp
add
jbe
and
mov
daa
cs
jle
sar
gs
in
cmc
pop
es
dec
add
stc
bound
adc
adc
ljmp
movsb
pop
jle
push
sub
mov
sbb
inc
mov
mov
aad
test
ja
mov
adc
jo
xchg
lret
mov
or
adc
or
rorl
mov
xchg
jmp
and
fs
insb
xchg
or
add
ret
setno
out
xchg
pop
jo
inc
mov
and
and
cmp
out
aad
xchg
fbld
stos
loop
fwait
lret
test
mov
push
jb
push
sub
sub
nop
imul
shlb
sub
cmpsl
push
mov
clc
push
lods
sub
mov
out
into
add
pop
pop
push
in
mov
test
push
clc
mov
push
jecxz
mov
mov
out
inc
jecxz
dec
mov
fcoms
ss
jecxz
sahf
mov
jo
enter
adc
xchg
mov
pop
loop
mov
rcrb
ss
out
add
jecxz
cmp
je
rcll
ret
mov
jne
cltd
lock
add
mov
adc
mov
out
repz
stos
cmp
sbb
push
push
mov
je
cmp
in
les
jns
imul
dec
jle
lods
mov
xchg
shl
adc
mov
test
xor
pop
mov
into
ja
jg
add
dec
pop
mov
xor
and
mov
popa
les
sub
dec
xchg
je
pop
popf
cs
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
jecxz
jo
out
sbb
ss
test
loop
icebp
xor
mov
sti
jecxz
data16
dec
jbe
xchg
bound
cmp
sti
idivb
mov
jl
or
sub
mov
int
xchg
outsb
lret
sbb
out
addr16
and
sub
pop
and
add
mov
or
stos
mov
and
add
pop
jb
int3
push
inc
cmc
stos
int
xor
int3
cwtl
and
or
rol
shrb
and
mov
aas
jl
sub
cli
push
adc
fs
mov
pop
int
in
sbb
inc
insb
cmpsb
fisttpll
idivb
nopl
repnz
insb
inc
lds
int
or
push
push
cmc
sub
mov
push
std
cmp
shrl
mov
mov
testl
out
pusha
add
pop
psubsw
jmp
pop
leave
clc
daa
lds
pop
les
int3
mov
test
setne
pop
and
fiadds
imul
sbb
das
cmp
push
sub
add
pop
fisubrs
sub
rcrl
mov
psubusw
jae
bnd
sbb
sbb
mov
out
daa
sub
in
mov
push
out
fsubrl
aam
clc
fbstp
sbb
das
or
imul
mov
add
xor
iret
dec
in
xchg
sub
jns
mov
cld
shlb
in
das
push
loope
dec
push
or
dec
mov
scas
je
lods
adc
decl
dec
insb
mov
and
sub
imul
mov
jle
xchg
cmp
dec
andl
dec
out
mov
int
stos
add
out
adc
rclb
push
lahf
leave
cmpsb
push
shll
mov
jle
sarl
test
xor
incl
in
mov
andl
pop
icebp
loope
je
test
xchg
mov
mov
rcll
cmpsb
lret
lret
outsl
jne
xchg
xchg
sub
cmpsb
jle
xabort
and
pop
xor
xor
push
inc
rorb
int3
mov
and
mov
pop
jmp
testl
hlt
jl
icebp
push
adcb
dec
inc
bt
or
sub
fldl
int3
lods
fisttpl
nop
push
loopne
ja
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jl
loopne
sbb
sarb
cmc
repz
repnz
clc
xor
dec
dec
adc
and
pop
dec
and
stos
in
addr16
add
mov
jne
neg
pop
or
xchg
sbb
xor
mov
stos
sub
jg
test
push
dec
adc
es
cmpsb
xchg
mov
fs
xor
lods
push
or
mov
add
mov
pop
sarb
sub
popf
jbe
insb
outsl
mov
loopne
mov
mov
fstpt
xor
outsl
out
mov
call
adc
ss
out
mov
insb
shl
sub
aad
mov
xor
or
mov
xchg
adc
mulb
lock
fs
dec
push
jl
mov
jb
mov
scas
roll
in
xchg
test
ss
loopne
push
mov
inc
xchg
ret
out
in
pop
mov
cwtl
mov
movsb
mov
pop
sbb
mov
inc
arpl
or
ret
test
mov
inc
pop
js
xchg
int
add
mov
xchg
rcll
mov
add
cs
or
mov
mov
xchg
mov
pop
in
sbb
mov
leave
and
movsl
imul
push
stos
fwait
test
sbb
repz
cmpsl
and
and
iret
dec
mov
push
dec
outsl
push
pop
xor
xchg
mov
push
outsl
pop
xchg
and
idivl
es
lea
push
pop
lea
bound
outsb
or
dec
cmpsl
and
jbe
lret
cmp
adc
mov
and
cs
gs
sbb
sbb
ds
jne
mov
add
je
test
ds
insb
and
push
subb
xchg
sahf
adc
dec
adc
jne
dec
scas
inc
stos
jnp
pusha
inc
add
pusha
fdivl
fdivr
cmp
int
cmc
sbb
pop
shrl
ja
pop
dec
in
fs
sub
fsubs
fs
insl
lods
mov
push
insl
add
mov
xchg
sub
dec
adc
outsl
je
cwtl
repz
daa
lea
jecxz
in
shll
jecxz
mov
dec
faddp
int3
inc
xchg
xchg
repz
xchg
jne
std
fsubl
jo
lret
shlb
inc
cwtl
mov
pop
cmpl
push
fwait
push
loopne
mov
lods
xchg
adc
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
push
adc
push
ficompl
sbb
adc
sbb
sub
sbb
test
pop
inc
mov
aaa
jo
aaa
xor
cmc
shlb
inc
int3
iret
push
adc
mov
add
dec
xlat
push
push
mov
cmp
enter
call
mov
or
dec
adc
out
jb
mov
mov
dec
xor
jecxz
or
and
pop
pop
push
ja
fnsave
inc
in
sbb
subb
dec
neg
nop
popa
pop
add
cmpb
movsl
mov
and
adc
jne
mov
jb
fisttpl
div
clc
test
adcl
xchg
call
pop
enter
or
stos
push
add
arpl
test
outsl
and
stos
push
fstps
mov
xor
mov
push
pop
sub
call
imul
int
push
insb
rcll
xor
mov
xlat
push
xchg
push
sbb
int3
pop
into
test
icebp
jnp
mov
xor
mov
stos
add
jmp
inc
call
mov
mov
pop
es
or
icebp
call
into
cmc
mov
push
mov
pop
add
mul
mov
repnz
push
out
cltd
dec
loop
pop
sti
lahf
loop
cmc
sahf
or
push
push
fs
push
movsl
cmc
mov
sub
sbb
push
mov
pop
dec
repnz
pop
jbe
bound
cli
add
push
push
xchg
adc
fwait
push
lret
scas
adc
out
icebp
paddsb
inc
push
xor
cwtl
fsub
clc
pusha
xor
and
jecxz
test
push
insb
mov
imul
mov
push
push
jbe
or
stos
inc
or
bound
sbb
add
add
lahf
push
push
inc
mov
pop
out
and
mov
adc
mov
mov
sbb
inc
pushf
lret
call
sahf
icebp
test
cmp
repz
push
ret
mov
in
xor
mov
imul
push
sbb
shlb
mov
scas
stos
xchg
or
lret
lahf
test
push
pop
shlb
or
jnp
add
in
sub
add
push
xchg
lret
jmp
ds
loop
adc
push
cli
or
or
xor
dec
jg
int
int3
xor
jnp
in
mov
in
xchg
xchg
mov
rcrb
and
call
jno
jne
jmp
test
inc
xchg
into
int3
ret
leave
enter
add
icebp
inc
popf
cli
in
bound
pop
notb
cmp
scas
mov
pop
cli
cmpsl
fdivl
sub
js
fisttpl
add
lea
fwait
sahf
daa
jg
mov
pusha
test
mov
add
jp
andl
and
in
outsb
inc
jae
xchg
scas
lahf
add
dec
pop
push
sub
push
jb
pop
dec
fimull
xchg
int3
and
notl
in
sbb
xchg
rcrb
jns
dec
cmp
mov
jp
rcrl
repz
sti
mov
outsb
bound
mov
lods
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
loopne
mov
aam
sbb
adc
sbb
pop
jecxz
cmp
inc
ret
add
cmpsb
mov
out
rorl
jae
stc
cmp
pop
and
jmp
mov
push
jno
call
jge
scas
aas
outsl
es
cltd
push
mull
ljmp
rcl
mov
leave
cli
sbb
or
mov
push
sbb
pop
jg
sar
jno
mov
lahf
jg
arpl
movsl
pop
iret
pop
icebp
or
fldenv
add
ds
insl
dec
mov
in
push
xor
jmp
gs
cmp
pop
adc
jge
shrl
push
mov
pop
outsb
test
out
xor
cmp
xchg
dec
xor
jo
jae
shlb
insb
mov
lea
mov
cmp
pop
shll
sub
cwtl
add
add
jbe
push
outsl
push
cltd
push
adc
js
call
inc
rcll
pushf
sbb
and
movsl
jne
adc
pop
or
inc
out
stc
mov
fbstp
xor
pop
ja
mov
or
clc
popf
or
imulb
popa
xchg
dec
mov
pop
cltd
or
lods
enter
into
test
push
iret
mov
add
lods
pop
and
inc
dec
mov
jl
jo
xor
mov
inc
sbb
pop
lahf
jb
and
xchg
stos
loopne
rcll
mov
xchg
jge
in
hlt
dec
or
and
and
stos
mov
fdivs
or
xchg
mov
or
repnz
fsub
push
push
shr
sbb
cmp
rcrb
or
lea
loop
and
inc
inc
outsl
push
mov
cmp
outsl
dec
sahf
xchg
lahf
ret
xchg
lods
shrl
sub
push
cmp
push
mov
mov
add
pushf
xor
inc
dec
push
loop
lods
push
push
adc
fwait
rolb
mov
xor
jmp
mov
jae
outsb
dec
fldt
je
ret
notl
push
push
shr
jb
mov
jbe
push
repz
xor
daa
jmp
or
dec
jmp
stos
sti
shlb
add
fists
das
cs
cmpsb
jb
mov
stc
loopne
js
cmp
mov
pushf
add
fnstcw
shrb
jl
test
ret
mov
cs
aas
jo
lds
mov
mov
adc
xor
pop
sub
mov
mov
int
mov
fldenv
cli
push
push
push
and
mov
mov
sbb
mov
js
roll
jl
orb
dec
lahf
push
lods
pop
test
push
mov
adc
and
movsb
sbb
pop
xchg
in
push
fidivs
jge
test
insl
mov
jp
xchg
int
notb
dec
sub
call
ja
or
repz
sahf
push
push
mov
mov
sbb
cmp
sar
decl
xor
dec
dec
jno
inc
jno
cltd
mov
arpl
arpl
enter
loop
pop
jnp
fdiv
dec
inc
movsl
pop
test
cld
ljmp
pop
push
add
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
dec
mov
iret
mov
pushf
and
mov
mov
xchg
ret
sub
leave
adc
mov
int3
sub
into
rcrl
fucomp
mov
clc
call
jo
popa
lods
sti
ljmp
jg
hlt
mov
ficoms
push
test
cmp
lods
imul
adc
fcoms
and
inc
test
add
xor
sbb
add
loope
pop
test
test
dec
hlt
or
add
jnp
push
or
andb
mov
test
pop
hlt
sbb
divl
sahf
negl
jbe
pop
movsb
gs
jae
dec
jge
mov
bound
and
fnstcw
xor
cs
mov
int
xchg
fidivs
fidivrl
sub
dec
ljmp
and
jl
push
imul
sbb
push
push
popf
mov
add
inc
je
push
sbb
inc
jb
iret
mull
pop
data16
sub
enter
mov
iret
sub
mov
popf
pop
jl
push
mov
mov
outsb
out
xchg
lret
and
scas
repnz
mov
mov
aas
inc
roll
or
lds
push
sub
scas
aaa
popa
inc
bnd
mov
add
add
jmp
test
push
test
movaps
testb
mov
push
push
imul
enter
jecxz
mov
ftst
fsubl
test
xchg
stos
sti
mov
sbbl
into
mov
or
pushf
add
mov
test
mov
pop
fnstsw
loope
add
sarb
movsb
clc
bound
push
jno
lret
mov
fstpt
pop
sub
out
push
pushl
loop
daa
dec
test
lds
insl
clc
outsb
push
out
sub
enter
xchg
test
loopne
jns
ss
jnp
sub
cmpsl
push
popa
fdivrl
sbb
add
xchg
push
sub
and
mov
stc
or
aaa
loope
mov
jl
jge
inc
add
pop
cmp
or
dec
mov
mull
cs
sbb
ret
out
push
inc
cmpsl
insb
fisttps
xor
dec
adc
xor
fldt
cmp
push
xorl
movl
mov
sar
imul
repz
xchg
jmp
push
push
add
in
cmp
call
mov
ja
mov
add
testb
lcall
mov
mulb
adc
imul
adc
dec
movsb
mov
xchg
call
inc
shlb
fistl
out
sub
push
scas
jle
adc
mov
sbb
inc
jecxz
jno
xor
movsb
cmp
add
adc
mov
pop
dec
mov
popa
sub
push
sbbl
xor
xchg
or
ficomps
dec
mov
stos
lods
sub
lods
mov
xchg
push
mov
adc
add
sbb
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
jbe
jg
cwtl
sbb
xor
sbb
dec
cmpsb
mov
xchg
pop
out
jno
scas
jp
push
ljmp
stc
jae
cld
sbb
sub
scas
sti
fdivrl
scas
stc
adc
sub
mov
or
dec
adc
imul
add
push
dec
xchg
fbld
xchg
push
inc
adc
sbb
rclb
test
arpl
bound
mov
push
xor
push
mov
inc
sbb
jmp
cld
jnp
add
and
lods
or
mov
xchg
mov
sbb
mov
icebp
in
xchg
out
mov
loope
mov
addr16
mov
fs
pop
or
cmp
and
mov
push
cwtl
daa
mov
data16
out
inc
lea
inc
mov
idivl
pop
std
push
push
pop
sbb
nop
pop
scas
jae
dec
out
mov
dec
movsl
orb
int
xchg
dec
push
out
mov
mov
cmp
iret
mov
cmp
jne
fistpl
and
jno
arpl
movsl
push
or
fcmovne
int
push
dec
cld
adc
arpl
cmp
jns
push
sbb
inc
push
jae
jle
scas
les
repz
sbb
pop
mov
mov
adc
dec
or
cmp
test
push
pop
push
xor
cmp
dec
xchg
scas
xchg
xchg
mov
sub
mov
dec
mov
pusha
cmp
mov
repnz
jecxz
js
addr16
movsb
sbb
cmp
add
lock
xchg
f2xm1
outsl
cmp
stos
xchg
jne
enter
pop
imul
call
leave
rcrl
sbb
cwtl
cltd
jl
mov
rcl
insl
or
dec
xor
lea
push
call
xchg
jbe
fsts
jl
add
ja
repnz
arpl
push
sahf
test
push
test
xchg
jnp
dec
lahf
mov
mov
mov
xor
mov
adc
jb
xor
mov
popa
dec
cmpsl
imul
in
push
add
xor
push
push
xchg
xchg
xlat
dec
xchg
cmp
lock
test
sti
xchg
inc
movl
shl
pop
arpl
ds
dec
test
jle
ds
ds
dec
or
pop
inc
mov
pop
and
mulb
and
dec
call
in
xchg
insl
pop
in
sub
test
rorb
push
mov
mov
shll
push
ret
dec
stos
inc
outsl
fsubs
mov
mov
mov
nop
xchg
js
sub
cmp
add
jb
xchg
jp
cld
pushf
shl
adc
cmp
inc
sbb
mov
outsb
jne
loope
cli
aad
or
add
pop
movsb
test
xchg
test
add
lds
imul
jl
or
test
mov
push
aas
andb
fisubs
inc
repz
jno
hlt
xorb
ja
lret
out
push
test
loopne
mov
add
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
or
mov
sbb
xor
sbb
jbe
lret
imull
inc
xor
cli
inc
push
mov
push
cmp
pop
repz
cmp
xchg
and
testl
imul
xchg
sub
mov
mov
sbb
ret
sub
hlt
push
and
sub
mov
or
adc
aaa
jnp
repz
inc
rcr
insl
xlat
scas
rcr
rcrb
mov
xchg
inc
push
sbb
pushf
xchg
pop
jo
rcl
jno
jp
stos
pop
lods
ret
rorb
jns
push
add
and
jle
cli
roll
cmp
adc
filds
fdivl
jne
insl
in
pop
aad
inc
bound
fwait
adc
adcb
adcb
sbb
lret
ret
clc
xor
insb
xchg
cld
movsb
dec
cmc
cld
xchg
cwtl
lret
iret
outsb
cmpsl
cmp
mov
scas
pop
pop
js
lea
sub
ds
push
pop
shlb
or
add
jae
push
fs
xchg
xlat
sbb
xchg
sbb
sub
mov
mov
iret
arpl
dec
mov
dec
je
inc
gs
fsubrl
hlt
fstps
push
call
adc
xchg
jge
mov
pop
cmp
sub
ss
test
adc
scas
add
fs
dec
pop
and
rclb
movsl
jmp
adc
and
fmull
dec
iret
jmp
push
xor
stos
adc
push
aaa
push
xchg
in
hlt
cltd
dec
daa
pop
pop
popf
andl
and
aam
lret
sbb
mov
pop
inc
rol
aas
adc
imul
mov
mov
gs
dec
popa
fnstenv
aad
cmp
mov
sbb
lods
outsb
popf
pop
add
clc
pop
inc
jp
jge
cmp
push
lds
shl
sbb
cmp
push
movsl
fidivrs
dec
xlat
insb
gs
nop
xchg
pop
jbe
xor
add
fs
and
push
and
jns
mov
mov
sbb
push
sbb
push
jb
xlat
ljmp
xchg
lahf
pop
push
dec
mov
mov
adc
mov
ja
movntps
fsubs
inc
mov
movsb
xorl
jo
fcmovne
or
push
push
cli
ljmp
mov
xor
jne
xlat
cmp
loopne
sub
mov
repz
mov
mov
push
int3
mov
ret
xchg
push
cmp
xchg
and
pusha
xor
xlat
movsl
mov
pop
in
lret
in
pusha
test
ljmp
lock
add
into
lahf
fildl
add
xchg
mov
mov
cld
lcall
push
inc
movsl
xor
push
dec
insl
mov
dec
jmp
icebp
jbe
add
add
mov
insb
lods
xor
mov
int
jg
jl
dec
fisubrl
cmp
sahf
cmpsb
clc
inc
pop
adc
xchg
in
add
push
mov
cmpsb
rol
jg
lahf
pop
fidivl
aas
repnz
call
sbb
inc
sbb
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
or
stos
enter
xor
sbb
rorl
add
gs
lahf
cmp
fcmovnu
imul
push
push
lcall
adc
cmpsb
jo
lcall
inc
jae
sbb
jl
ljmp
inc
mov
aas
in
push
dec
in
or
inc
inc
push
mov
arpl
cld
fs
xchg
cld
mov
push
pop
jle
push
imul
lcall
or
fcmove
aam
or
fildll
lret
jmp
mov
jne
idivl
jb
push
notb
mov
mov
adc
arpl
mov
mov
jl
repnz
je
push
xchg
decb
inc
aam
scas
ficoms
fidivs
adc
and
int3
dec
xchg
mov
inc
out
stos
adc
and
inc
std
mov
fmul
xchg
lods
imul
mov
pushf
sub
scas
mov
mov
fisttpl
and
std
in
mov
xchg
push
or
cmp
dec
adc
call
mov
stc
fidivrs
js
lcall
cmc
hlt
sbb
jb
in
sbb
dec
or
add
loope
cmp
mov
daa
xchg
cmp
call
hlt
negb
pop
push
jmp
out
fidivrs
mov
cmpsb
sub
mov
push
pushf
cld
lcall
mov
jne
and
mov
insb
sarb
aad
shll
mov
sarl
imul
xor
adc
mov
sbb
push
adc
out
jecxz
mov
mov
inc
mov
mov
imul
pop
adc
sbb
sbb
jb
lods
test
enter
sub
or
and
lds
push
mov
hlt
push
sub
inc
fldt
lcall
into
xor
pop
dec
leave
sub
pop
sbbb
pop
fcmovnu
loop
test
push
mov
sub
pop
dec
or
xchg
lcall
mov
push
mov
outsl
jo
fwait
test
mov
jae
sub
test
sahf
aas
stos
jg
test
lods
repz
inc
cmp
sub
mov
ret
xlat
pop
scas
mov
push
icebp
mov
fcmovnbe
mov
push
mov
stc
cmc
cmc
jo
jae
inc
shlb
stc
outsl
jmp
test
adc
ds
jle
popf
stos
cmpsb
cmc
fldl
dec
sbb
push
push
jo
dec
lcall
test
in
xchg
mov
in
and
scas
xchg
jp
mov
xchg
outsb
mov
cld
cmp
jle
mov
or
mov
push
in
aaa
push
adc
xchg
mov
cld
idivb
bound
lret
dec
pop
pop
mov
xchg
popf
popa
mov
dec
negb
jnp
adc
or
inc
mov
push
and
lcall
std
xor
xchg
inc
mov
mov
sbb
or
movups
loopne,pt
jg
xchg
or
rol
xchg
out
sbb
mov
je
xchg
repnz
add
and
test
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
push
push
stos
loope
sbb
xor
sbb
sub
adc
fsts
push
jp
inc
jmp
int3
cld
push
fists
fnsave
js
jnp
fwait
sbb
sub
stc
xor
lods
fcomps
add
push
leave
je
lock
mov
cmpsb
lods
setg
scas
xor
loope
sub
jecxz
dec
scas
add
jno
lds
imul
les
int3
sarl
ljmp
rol
inc
and
inc
iret
sub
mov
mov
adc
add
cli
jp
rolb
xchg
rorb
mov
xor
mov
in
or
mov
add
ror
inc
cmovne
mov
outsb
repz
mov
lcall
icebp
sbb
icebp
xor
mov
decl
sbb
and
sahf
or
imul
mov
sub
cwtl
pop
or
sbb
insl
sub
scas
mov
xchg
mov
jmp
push
faddl
loop
movsl
pop
push
outsb
gs
jno
in
les
pushf
push
je
pop
test
sbb
ror
xchg
sbb
mov
sbb
adc
push
imul
mov
test
push
clc
test
in
xchg
jo
in
loopne
addb
jb
lea
xor
mov
cs
or
jmp
jge
aam
mov
scas
xlat
pop
mov
push
xchg
dec
dec
lret
imull
xchg
sub
mov
lret
addr16
lret
jb
lds
jo
lret
jns
pushf
call
fucom
fs
aam
mull
shrb
or
xchg
cmc
mulb
std
cwtl
aam
xchg
in
mov
in
lock
mov
cld
jg
mov
loop
add
inc
mov
xchg
std
scas
stc
mov
ja
sti
xchg
mov
xor
incl
sar
maskmovq
negl
xchg
add
jnp
fstpt
mov
movl
mov
out
aad
ja
aas
xchg
inc
out
addb
mov
mov
mov
out
fistl
repz
clc
bswap
mov
pop
dec
addr16
pop
rcrb
fisubrs
lcall
aas
push
aam
sti
fsts
or
sub
xor
aas
xchg
inc
pop
mov
or
loopne
inc
es
les
or
rorl
and
sbb
out
mov
lock
outsl
pop
sub
adc
sbb
and
jbe
jae
adcb
sbb
cmp
sbb
dec
mov
in
cltd
xor
pop
push
or
pusha
cld
or
sub
dec
or
xchg
sub
movsl
mov
xchg
push
pop
dec
imul
dec
push
add
fidivl
insb
shrb
std
xchg
dec
mov
xchg
stos
ja
int
lea
outsl
jp
and
dec
push
mov
call
xchg
adc
arpl
cltd
xor
negl
insb
cmp
sub
cmpxchg
pop
xlat
push
lcall
inc
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
xchg
or
stc
stos
sbb
test
adc
xor
aad
ficoml
mov
ret
push
or
fwait
lahf
xchg
leave
scas
inc
shlb
pop
fidivl
xor
shl
popa
pushf
dec
mov
lret
mov
scas
add
pop
daa
lds
pushf
push
addb
xor
aaa
dec
push
jp
pop
or
pop
out
adc
mov
xchg
sbb
test
lods
mov
cmp
sbb
lahf
xor
or
push
gs
icebp
mov
loopne
sub
jb
fwait
test
ret
fwait
mov
mov
jp
mov
loope
inc
xor
xchg
push
jae
jge
pop
hlt
sub
xor
jo
xchg
movsb
mov
stc
mov
mov
scas
inc
clc
ljmp
pushf
or
lret
icebp
pop
mov
pop
mov
dec
sub
inc
shlb
repnz
js
cmp
sub
outsb
andl
push
lds
arpl
cmc
aad
idiv
fs
movsb
xor
mov
arpl
test
call
mov
sbb
push
jns
fldt
sub
mov
aad
outsb
cld
sahf
push
movsbl
ret
cs
sti
xchg
mov
inc
repz
sub
inc
add
and
and
popa
mov
or
mov
sub
mov
hlt
in
sub
sahf
or
adc
push
pop
xor
jo
jb
jnp
cmc
push
push
push
in
cmp
fsubs
xor
orl
inc
outsl
mov
stos
repz
in
or
mov
out
insl
sbb
popf
iret
sbb
or
addr16
mov
jp
xor
pop
push
add
in
inc
subb
fdivp
repz
cltd
test
popa
mov
aas
mov
mov
inc
pop
scas
inc
gs
dec
inc
cmp
dec
outsl
in
and
cwtl
jno
or
mov
xlat
leave
lcall
daa
mov
cld
adc
mov
sub
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
push
movsb
cmp
xchg
push
mov
iret
rcl
ljmp
int
xchg
and
ret
fs
or
les
cmp
dec
enter
xor
jns
push
xchg
in
pop
inc
iret
stos
push
fs
cwtl
jecxz
pop
mov
rol
jne
push
cld
push
or
je
mov
addb
fmull
xchg
cltd
mov
jo
aam
inc
lea
sub
out
repnz
test
sub
mov
push
sbb
lods
repnz
addl
out
sbb
and
jns
push
and
dec
frstor
gs
popl
cmp
mov
sbb
inc
shll
pop
outsl
in
fs
ret
enter
insb
lock
cmp
jge
fistl
mov
lcall
fwait
lds
iret
ds
push
in
xorb
sti
mov
add
push
mov
cs
je
mov
pushf
outsl
aaa
cs
leave
sbb
dec
xor
pop
or
lods
push
movsb
pop
notb
add
cmp
outsb
jecxz
inc
or
and
add
mov
adc
mov
out
in
adc
ror
leave
lret
int3
push
pop
fs
pop
xor
dec
movb
neg
mulb
sbb
mov
push
fwait
xor
addr16
ss
test
adc
loope
sub
mov
push
aas
xlat
loop
insl
mov
lret
leave
mov
fcoms
sbb
mov
ret
cld
lods
lcall
cmp
jnp
dec
fidivs
add
in
cwtl
je
xchg
push
std
out
cmp
imul
push
fistl
loop
pop
mov
rclb
les
ds
les
pop
mov
pop
mov
fcmovnu
push
push
mov
mov
xchg
add
hlt
mov
xchg
pop
mov
mov
mov
mov
mov
mov
push
jmp
sub
and
jb
push
stos
jne
or
mov
sbb
dec
lcall
mov
mov
or
pop
or
pop
hlt
and
push
or
mov
aam
cs
jmp
jle
mov
addl
mov
and
or
adc
mov
sub
pop
stos
loope
dec
dec
xchg
sbbl
mov
mov
test
lea
ret
repz
mov
pusha
sar
add
jmp
and
and
lds
das
decl
fmuls
and
sbbb
lcall
lock
jb
mull
mov
sbb
into
fnstsw
inc
sbb
les
lods
les
push
push
cmc
or
cltd
push
push
jl
icebp
pop
jmp
lds
das
rclb
pop
push
adc
loopne
lret
hlt
push
rcr
addr16
jmp
insl
cwtl
sub
cli
loopne
mov
push
ja
mov
inc
add
fistl
jbe
inc
mov
pop
and
lods
pop
pushf
and
mov
addr16
mov
sub
in
sbb
mov
xor
sti
cwtl
jae
dec
mov
cli
xchg
jb
or
and
sbb
jne
pusha
cmc
jb
adc
add
cld
andl
fnstenv
ret
xor
add
xchg
mov
frstor
cmpsl
gs
adc
out
xor
test
lock
cmp
inc
pop
mov
aam
xchg
sub
xchg
out
daa
ficoms
ds
fwait
test
and
mov
jle
cltd
es
jmp
enter
cltd
aaa
pop
cs
or
rorb
testb
stos
testb
repnz
xlat
sbb
repz
mov
bound
add
lods
int3
cmpsl
mov
cltd
stc
inc
push
and
push
shlb
push
mov
lock
xlat
mov
clc
mov
xor
push
arpl
aam
mov
or
pop
int3
xchg
cmc
xor
add
mov
jl
int
pop
stos
fisubs
icebp
jmp
cld
inc
mov
ret
imul
in
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
jle
push
pushf
sbb
test
movb
jae
arpl
out
pop
and
push
out
arpl
fstpt
clc
es
jmp
negl
je
sti
cld
pusha
daa
rcl
mov
inc
or
dec
testl
cmp
mov
push
scas
ja
clc
add
into
stos
outsl
jecxz
test
push
ret
or
pop
or
cmc
out
adc
insl
leave
push
movsb
arpl
inc
mov
push
inc
mov
xor
ret
dec
lcall
frstor
fcoms
jo
push
xchg
out
pop
outsl
push
or
pop
ret
mov
jecxz
xor
push
jno
subl
ljmp
push
or
and
xor
js
inc
in
adc
inc
ss
jecxz
pop
cs
sub
stos
mov
sub
int3
movb
xchg
inc
jns
data16
stc
push
mov
adcl
cmp
ja
je
fsubr
adc
push
jne
adc
scas
sbb
ds
jmp
or
test
push
lret
sbb
in
cmp
sarl
ss
push
jle
aas
inc
js
xchg
pop
ds
xlat
push
cwtl
mov
inc
fidivl
test
jle
hlt
mov
lock
pusha
cmp
xchg
and
aad
mov
sub
lahf
into
inc
jno
out
mov
mov
fwait
loope
cmp
aad
dec
lahf
enter
xor
pop
sbb
sub
ret
xor
sahf
scas
ja
or
add
xor
shr
add
cmp
mov
jl
inc
lea
pop
daa
pop
in
mov
push
xchg
adc
cmp
icebp
test
clc
mov
jmp
out
inc
mov
and
cmp
test
jecxz
pusha
cli
dec
popa
sub
icebp
aam
sbb
aaa
cmp
scas
aaa
or
or
adc
jle
lods
andl
dec
push
in
jno
fldl
xlat
call
in
and
or
dec
imul
push
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
cmp
jo
cwtl
sbb
test
lret
xor
lcall
fsubrl
lods
lret
cmp
mov
mov
or
movsb
cld
inc
fwait
in
or
rcrl
xchg
jp
imul
fldenv
dec
pop
dec
inc
or
mov
shl
adc
outsb
fmull
int3
aam
fdivs
imul
or
je
mov
cli
es
js
or
mov
es
mov
test
mov
test
pop
add
outsl
mov
test
inc
in
jecxz
mov
cmp
repz
test
or
clc
mov
lret
pop
cli
iret
or
aad
pop
fisubrl
cmpsb
ret
inc
and
shlb
popa
scas
cmp
jmp
nop
loope
out
inc
jo
stos
addl
orb
mov
and
popf
int
fdivrs
jle
lea
popf
out
mov
test
call
lret
mov
jnp
imul
loop
adc
fnsave
rcrl
rcr
and
je
fs
mov
fisttpll
bswap
int3
aaa
cld
pop
jae
lcall
or
adc
pop
cmc
lds
or
outsl
sarb
mov
mov
jne
mov
loope
mov
mov
fwait
insb
xor
cs
cmp
push
test
in
pushf
sarl
cmp
jbe
mov
cs
push
mov
inc
cmpsl
lock
fdivrl
mov
mov
fildl
mov
sahf
fbld
in
mov
out
sbb
insb
adc
in
xchg
out
adc
fldt
jne
or
dec
into
xor
lret
xchg
xchg
inc
test
popa
ficompl
jp
sub
adc
jnp
mov
in
xchg
loopne
pushf
mov
popl
inc
aad
mov
add
loopne
aad
mov
pop
push
repnz
add
xor
repz
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
out
movsl
das
int
add
add
imul
jne
pushf
adc
push
xchg
mov
fiaddl
divl
imul
sbb
adc
icebp
pop
and
mov
pop
pop
mov
fcom
adc
xor
push
dec
aas
push
clc
push
or
pusha
imul
push
adc
dec
inc
cmp
arpl
mov
shll
jl
pop
jne
negl
dec
mov
imul
mov
push
insb
and
pop
mov
sub
out
dec
and
int
jle
and
gs
xchg
pop
dec
cs
fmull
stos
xchg
bsr
and
jne
cmp
test
mov
lcall
xchg
roll
mov
push
mov
sbb
pushl
fwait
push
insb
fiadds
sti
add
aam
leave
aam
fwait
test
fiaddl
dec
pop
mov
stos
mov
je
inc
test
data16
jecxz
mov
jle
adc
dec
movsb
lds
push
and
movsb
mov
pop
arpl
pop
ds
xchg
fildll
jge
aas
xchg
fldcw
jnp
sbbl
push
mov
fisubs
mov
sub
out
xchg
jno
in
daa
sbb
out
pop
fdivrl
mov
xchg
fisubs
or
sub
xchg
mov
mov
test
lds
addr16
mov
addl
dec
mov
jge
loope
jp
sbb
pop
jge
dec
push
dec
and
inc
mov
cmp
aad
pop
adc
outsl
pusha
push
fidivl
into
imul
lods
pop
mov
clc
pop
lret
dec
or
scas
xor
xor
cmc
mov
inc
xor
sbb
gs
mov
mov
sbb
loope
sbb
adc
xchg
arpl
pop
xchg
cltd
inc
adc
inc
js
clc
aad
pusha
lret
and
fnstsw
sub
icebp
mov
xor
or
jmp
push
and
mov
jle
nop
sbb
test
and
xchg
sub
iret
cmpsl
pusha
cmpsl
adc
mov
or
mov
push
push
inc
hlt
iret
jno
int3
sub
aam
mov
push
out
or
mov
out
fnstenv
ret
pop
cwtl
jne
lret
xor
lods
mov
mov
cmp
lret
iret
addr16
jnp
test
nop
insb
bound
jge
popa
and
and
jecxz
clc
push
ss
and
lods
add
push
pop
dec
add
push
push
dec
stc
das
dec
sbb
lods
inc
cmpb
xlat
mov
pop
mov
imul
xor
out
test
mov
outsl
stc
imul
sti
jns
jbe
mov
sub
mov
sarl
in
xor
test
test
inc
jp
cmp
repz
sbbl
fcmove
push
inc
stc
mov
xchg
lret
mov
int
inc
dec
and
pop
out
es
inc
dec
mov
fwait
inc
loope
or
pop
sbb
outsl
ficoms
mov
aam
mov
daa
aam
xor
inc
pop
xlat
stos
pop
dec
sbb
cmp
ds
sub
lret
sbb
jae
imul
test
add
insl
hlt
mov
stos
mov
cmp
add
sbb
sub
ret
mov
ret
push
pop
xchg
sbb
push
or
pop
dec
stos
cli
and
and
je
adc
faddp
xor
push
cmp
cwtl
mov
sbb
cmp
mov
sub
cli
lea
xlat
xor
out
divl
lahf
sub
adc
lods
inc
ret
dec
push
sti
ret
pop
lcall
rorl
fyl2x
push
arpl
sub
dec
xchg
cs
xchg
fs
jb
push
fcompl
jge
cmc
push
dec
lea
pop
mov
pop
mov
jp
shlb
inc
inc
pop
cs
pusha
dec
ret
repz
sbb
sbb
mov
jp
xchg
lds
adc
rorl
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
scas
mov
mov
sbb
mov
sub
pop
daa
add
adc
jb
sbb
in
sub
cmp
and
fdivs
aas
mov
inc
mov
shll
push
fcmovb
repnz
dec
insb
cmpsb
shl
cmp
jne
jbe
xchg
pop
sahf
and
data16
ret
arpl
addr16
gs
test
roll
jb
out
xor
imul
push
sub
jmp
and
lock
or
in
and
sbb
xchg
and
or
outsb
cs
mov
xorb
out
ret
into
push
pop
sti
mov
mov
pop
fnstenv
test
test
sbb
xchg
cli
insl
cltd
adc
pusha
dec
cltd
ja
dec
addl
imull
lahf
insb
jg
or
add
cmpb
test
fs
sbb
jle
outsl
push
aam
test
es
scas
sub
pushf
mov
addl
out
push
lahf
push
jo
fs
addr16
out
ret
sub
push
in
es
imul
movsl
jne
fcomps
jnp
dec
int3
test
jge
mov
jp
outsl
jae
fists
mov
ds
xchg
xchg
sbb
in
clc
and
push
mov
sub
lods
jl
mov
inc
lock
push
jge
sbb
jge
sub
adc
std
sahf
xlat
lods
repnz
mov
mov
xorb
xor
cmc
or
sbb
loopne
pop
popf
das
clc
push
xchg
lahf
and
mov
lods
mov
aam
add
sbb
xchg
cmp
and
leave
bound
mov
pushf
jge
cmp
test
lods
outsb
repz
mov
pop
xchg
jg
pop
movsl
jmp
push
int3
cli
addb
jecxz
inc
adc
mov
aas
cmpsl
popa
cmp
push
outsb
jb
aaa
mov
xchg
mov
mov
imul
addl
jl
or
int3
mov
cmpsl
loopne,pt
rorb
in
dec
inc
xor
inc
push
sub
push
add
dec
dec
jl
inc
or
dec
or
shrl
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
mov
xchg
sbb
sbb
cltd
lods
cmpsb
xor
pop
subb
mov
adc
cmp
push
icebp
add
push
sti
adc
lahf
test
add
inc
xor
dec
imul
or
xchg
adc
cmc
fmul
add
pop
sbb
mov
inc
hlt
mov
xor
addr16
or
ja
cmp
pop
aad
push
subb
xchg
push
shll
bound
pusha
mov
jae
xor
push
int
pop
popa
push
mov
int
enter
movsl
mov
cmp
test
out
sbb
mov
push
mov
test
adc
jge
dec
inc
mov
cld
jae
inc
push
sbb
jmp
aad
inc
mov
pop
sub
lcall
add
movsb
int
jecxz
mov
and
cmpsb
fwait
pop
leave
decl
popa
dec
test
inc
testl
and
mov
out
pop
clc
pop
cwtl
ljmp
pop
rol
into
movsb
lds
sbb
lods
push
push
fstl
scas
sar
xchg
pop
test
dec
or
das
cmp
xor
int3
sbb
xorb
pop
lods
ljmp
daa
push
cmpb
jmp
dec
std
jb
mov
push
cmp
shrl
pop
push
mov
loop
push
nop
stos
insb
mulb
int3
push
lcall
inc
inc
or
lods
ficoms
push
mov
arpl
jns
add
in
lcall
in
sbb
in
jecxz
jno
mov
fsts
or
push
adc
sti
jnp
mov
sub
jns
pop
ss
fdivrp
mov
out
int
inc
mov
pop
sbb
leave
mov
pop
into
mov
pop
repz
iret
imul
or
inc
push
imul
and
jg
inc
xor
call
aas
jo
and
push
mov
test
in
or
push
ja
xor
cmp
std
cmp
sbb
jb
push
lods
mov
lahf
cmp
aam
das
and
aas
shll
test
out
aam
push
je,pn
ja
stos
dec
arpl
repz
jle
adc
gs
or
pop
rclb
lcall
sahf
ss
dec
cmp
rorb
sub
inc
inc
insl
ss
push
inc
pop
jns
add
sbb
mov
dec
cmpsb
xchg
mov
or
pop
dec
into
xchg
shrl
adc
pop
inc
mov
popf
mov
dec
push
ja
dec
mov
repnz
adc
push
xchg
sbb
xor
js
push
arpl
cmpl
mov
pop
mov
push
xchg
aam
or
mov
cmp
decb
iret
sbb
and
popf
and
dec
mov
dec
add
es
scas
xor
mov
jns
adc
xchg
and
aas
pusha
sub
push
test
clc
dec
mov
push
movl
fmuls
mov
jne,pt
js
add
cmpsb
dec
add
inc
mov
insb
add
add
jne
inc
sbb
pop
clc
push
jns
fadds
sbb
ds
insb
jmp
stc
lahf
adc
jne
lds
lret
movsb
jae
xor
xor
movsl
pop
outsl
xchg
adc
icebp
push
bound
jo
ljmp
mov
push
pop
add
inc
push
fs
xchg
dec
insb
cmp
add
pop
mov
nop
add
inc
es
js
jge
rcr
inc
xlat
cmpsl
push
lds
not
mov
xchg
xchg
mov
flds
es
dec
stc
jae
mov
out
push
pop
cmp
mov
sub
loop
mov
shl
inc
push
in
push
inc
push
incb
inc
pop
adc
push
scas
je
mov
loopne
dec
push
jbe
int
std
ficoml
mov
adc
cmpb
dec
add
sbbl
mov
rol
jb
orb
ss
lahf
ret
arpl
push
flds
dec
in
sbb
dec
lret
movsb
sbbb
ss
jmp
xchg
jnp
icebp
dec
andl
and
push
testb
dec
pop
repz
daa
adc
dec
clc
xchg
ljmp
fcmovb
fistl
test
test
push
stc
dec
cmc
rol
mov
sti
jne
cmp
lds
hlt
pop
in
test
movl
adc
fs
sarl
push
xor
dec
lea
aaa
stos
xchg
sub
stc
sti
adc
cmp
and
cmpsl
and
in
mov
cmp
shll
jno
cmc
xchg
js
mov
std
pushf
adc
xlat
popf
mov
cmp
mov
fstpl
xchg
in
es
pop
je
push
das
sbb
mov
insb
lea
jb
mov
pop
mov
aad
dec
add
push
pop
pop
dec
mov
inc
int3
or
in
mov
aas
push
repnz
sub
fadds
sbb
mov
fisttpll
test
mov
insl
repz
sbb
mov
mov
xchg
jb
inc
fidivl
sub
std
ret
sahf
sbb
enter
and
mov
mov
mov
cmpsl
xor
lahf
subb
push
or
je,pn
jns
cwtl
jge
xchg
push
xchg
push
jno
dec
aaa
mov
subl
iret
push
outsb
xchg
cld
add
sub
sarl
hlt
push
xor
cmp
dec
sti
jns
inc
sub
pop
push
inc
sub
inc
cmp
movsb
sbb
out
xchg
xchg
lret
lds
xchg
sbb
push
cmp
pusha
data16
addr16
lcall
dec
popa
pop
loopne
push
jp
lret
dec
sub
and
xchg
mov
or
dec
and
mov
addr16
jg
dec
cltd
or
aam
pop
mov
xchg
outsl
jl
scas
xchg
and
jns
lret
xor
in
add
cmp
mov
sbb
or
cmp
mov
xor
lds
jnp
add
pop
xchg
add
sahf
cwtl
test
repnz
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
push
sti
in
divl
xor
jmp
cltd
icebp
pop
out
testl
shl
pop
add
mov
int3
sbb
add
fisttpl
addr16
jle
popa
fs
mov
insl
inc
rol
xchg
mov
cmpsb
loopne
outsb
cmp
lret
insb
fistpl
mov
or
sahf
pop
inc
je
or
jae
loop
push
lea
xlat
in
sbb
adc
mov
loope
ljmp
loop
pusha
xchg
cmp
xor
jp
ds
fsts
lahf
add
mov
mov
mov
xchg
xchg
dec
cmp
sub
in
adc
or
jae
adc
iret
push
out
cltd
pop
and
xor
lret
push
xor
std
pop
lahf
push
inc
roll
aad
jl
sbb
int3
sbb
push
xchg
ds
repnz
push
mov
push
mov
inc
out
inc
lock
popa
and
ja
nop
sbb
ljmp
lcall
lds
inc
jnp
adc
test
bound
es
imul
mov
sub
loope
xchg
add
cli
aas
cld
cmpsb
push
jle
cmpsw
pop
mov
jne
mov
cmpsl
xorl
aam
mov
lock
mov
dec
js
pop
jno
sahf
or
add
loope
data16
push
bound
lret
inc
xor
aad
adc
sub
loopne
mov
movsb
push
sbb
inc
and
adc
xor
pop
cld
imul
mov
int
dec
xor
pop
fistl
inc
data16
pop
mov
into
mov
test
movsb
sahf
jp
or
out
fcompl
std
mov
add
sub
dec
movsl
lcall
push
std
push
inc
mov
add
mov
and
insb
insb
imul
in
jg
arpl
test
aaa
jp
push
and
dec
mov
lret
sarl
leave
lret
adc
or
jg
xchg
mov
mov
add
negb
sub
cmpl
and
xchg
xorl
sbb
inc
fisubl
xchg
push
lret
aas
push
lcall
add
ret
mov
add
xchg
gs
or
adc
adc
dec
in
push
jge
xchg
xor
mov
jmp
inc
out
mov
mov
cli
pop
pop
cli
movsb
ret
mov
mov
inc
insb
loope
or
dec
push
rcrl
xchg
jle
cmp
cmpsb
and
jge
xlat
dec
inc
jb
mov
loop
aaa
int
addr16
loop
cmpsb
cli
lock
mov
enter
xchg
addr16
leave
sbb
sbb
or
jne
push
cmp
loopne
fsubp
cwtl
cmpsb
dec
jle
and
imul
out
test
or
jle
mov
sub
and
push
mov
or
add
jecxz
jbe
ret
in
jmp
fildll
lahf
dec
push
dec
pusha
sbb
repnz
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
xor
sbb
xchg
mov
test
mov
mov
jg
sub
cmpb
or
xchg
cmp
push
push
xchg
push
aad
push
outsl
test
pop
push
inc
pop
clc
fdivrl
and
mov
jnp
imul
sub
lret
int3
test
jbe
and
xchg
nop
addb
dec
fistpll
mov
subb
fsqrt
inc
scas
shlb
ja
nop
jb
out
cmpsl
cmp
or
in
sarl
jbe
in
sbb
enter
inc
mov
mov
or
sub
jno
mov
xchg
repz
out
cmp
in
loope
jbe
mov
inc
push
push
mov
insl
lret
and
pop
fwait
xor
inc
leave
pop
push
int3
inc
adc
xlat
aas
js
cs
dec
test
jp
adc
insb
or
hlt
movsb
addb
imul
cmp
lods
pop
pop
call
sub
add
ret
push
in
mov
xchg
jo
gs
pop
ret
or
pop
test
jg
movsl
mov
sbb
popa
lock
mov
lret
cltd
stos
cli
sbb
xor
insl
sar
sub
repnz
cmp
stc
cwtl
sbb
mov
xchg
ret
fcoml
shlb
add
mov
int
pop
jmp
lds
adcb
inc
mov
xchg
dec
pusha
imul
aaa
dec
pmulhw
push
dec
inc
sbb
in
or
leave
sbb
sub
ficoml
add
mov
xor
inc
inc
cmp
mov
stc
xlat
cltd
dec
or
out
leave
or
jecxz
dec
mov
popa
or
cwtl
test
dec
orb
inc
xchg
push
push
jmp
test
stos
mov
cmc
jne
ljmp
pop
imulb
cmp
cmpsl
test
jo
insb
std
repz
cltd
mov
mov
aaa
mov
or
jl
fsubl
ffree
xchg
xchg
pop
je
pop
in
add
jno
mov
outsb
or
repz
xor
sahf
push
enter
jae
xor
cmpsb
jo
pop
xchg
jnp
pushf
je
aad
fsts
lods
int3
fld
shll
repz
add
jle
jl
nop
mov
pop
shll
mov
out
and
in
mov
lea
sub
push
das
test
rcrb
lret
dec
scas
dec
mov
or
sub
or
lahf
inc
pop
popf
out
pusha
out
imull
cmp
subb
insl
nop
andb
sbb
pushf
xchg
push
bound
shrb
jo
outsb
cs
mov
add
adc
pop
psubq
cmpsb
mov
dec
xchg
mov
ud2
clc
scas
decb
mov
test
mov
mov
out
fistl
movsl
mov
inc
push
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
pusha
arpl
adc
sbb
cli
jecxz
xor
mov
jl
jp
je
push
push
xchg
sub
sbb
pop
jle
ja
jns
test
mov
sbb
inc
push
push
jnp
imull
aam
scas
inc
and
out
test
insb
addr16
xchg
sbb
outsl
enter
mov
mov
mov
push
adc
cmp
andb
jge
pop
mov
inc
xchg
push
cmp
jbe
xchg
scas
push
sub
fsubrl
pop
adc
leave
dec
jmp
cmp
divl
or
add
ds
in
arpl
dec
jl
mov
inc
insb
jmp
or
mov
pop
divl
test
dec
adcb
jle
cs
aam
ror
clc
xchg
pop
dec
cltd
loopne
iret
out
insb
popf
lret
xor
outsl
aaa
mov
addb
xor
lods
das
cwtl
jae
and
pop
lcall
daa
cmp
adc
cmp
bound
inc
xchg
jecxz
push
cmp
sahf
ret
rcr
cmpsb
arpl
mov
aam
in
mov
mov
test
mov
leave
andl
std
les
imul
pusha
sub
aaa
push
mov
adc
popa
ds
enter
movsl
push
xchg
ss
add
sbb
and
addr16
int3
sbb
movsl
pop
jmp
mov
mov
nop
xor
xchg
adc
pop
sahf
sbb
iret
xchg
adc
sarl
adc
xlat
push
loope
inc
sub
shlb
sbb
mov
enter
push
mov
push
cmp
cltd
mov
push
sbb
and
and
cmpsb
repnz
adc
mov
and
or
mov
jmp
ja
fcmovne
sub
sub
sbb
push
and
or
popf
cwtl
in
sbb
clc
cld
lret
out
dec
fstpt
les
shll
mov
jne
mov
push
test
shlb
int
cmc
es
sub
out
ss
notl
sub
xor
mov
mov
hlt
dec
lds
icebp
movsl
mov
std
cmpl
mov
enter
in
pop
push
jb
aad
jmp
push
pop
popa
adc
sbb
lods
add
dec
push
sbb
inc
repnz
xchg
gs
inc
dec
sar
push
cmpsb
inc
push
fadd
loop
sub
jb
cld
dec
das
roll
and
jne
mov
xlat
and
rcrl
test
sbb
xor
stc
gs
out
dec
and
cltd
mov
add
sbbl
jp
movsb
add
int3
test
int3
imul
shl
jecxz
add
pop
and
jbe
inc
in
cmp
jnp
adc
fs
hlt
hlt
popa
enter
mov
fidivl
push
sub
lret
je
or
cmpsb
stos
xchg
xor
cmp
pop
pop
jbe
scas
add
and
sbb
lret
pop
lds
sbb
in
dec
rorb
push
inc
mov
inc
xchg
clc
jl
sub
xorl
sti
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
femms
mov
sbb
sbb
cmpsb
or
stos
cli
data16
add
push
jnp
dec
mov
jno
faddl
pavgw
out
outsb
arpl
jle
loopne
sbb
push
ss
pusha
sbb
add
jb
mov
mov
repnz
enter
cmpsb
push
in
daa
rorl
dec
es
aaa
mov
xor
adc
add
adc
mov
pop
sar
scas
test
mov
loope
and
cmp
add
mov
jle,pt
mov
negb
pop
lods
adc
and
jns
daa
outsl
push
stos
inc
imul
add
jecxz
aad
jecxz
in
mov
in
shlb
jae
mov
or
pop
pushf
cmp
pop
jp
enter
pushw
fs
test
push
pop
mov
por
mov
push
add
mov
stos
scas
js
in
sub
adc
add
les
daa
inc
pushl
add
hlt
pushf
mov
or
cmpsl
sub
outsl
or
or
stos
pusha
std
xor
cmp
push
cs
jno
loope
mov
dec
or
push
decb
sbbb
pop
pop
stos
add
imul
push
aad
mov
mov
sti
mov
sbb
and
and
lds
in
adc
shll
xor
int3
mov
jnp
fldcw
sub
jne
or
mov
push
push
sbb
enter
push
push
push
xchg
mov
outsb
insl
add
int3
and
lret
add
mov
or
sub
cld
arpl
sbb
out
or
sbbl
pop
inc
jmp
pop
rcrl
pop
nop
out
les
mov
adc
xor
adc
xor
cmp
insl
dec
je
out
sub
xchg
lods
stos
add
in
faddp
adc
out
push
dec
aaa
fsub
imul
aas
and
fwait
mov
loope
inc
data16
sbb
fidivrs
cmc
lcall
xchg
push
pop
movsb
imul
add
fisubrl
shl
add
dec
loop
adc
dec
arpl
or
push
out
shrb
cs
shrl
pop
std
shrb
dec
and
sahf
inc
pop
leave
add
mov
mov
or
push
fsubs
or
popa
scas
xchg
mov
xor
sub
jl
mov
push
inc
sbb
popa
push
or
sbb
sahf
nop
js
stc
jmp
and
mov
cmpsb
inc
mov
lret
push
and
ljmp
pusha
sbb
push
or
in
cmp
sti
push
lahf
push
lods
mov
cmp
stc
hlt
lea
test
gs
jp
js
add
aad
push
mov
out
shlb
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
dec
repz
mov
adc
sbb
mov
lock
dec
cs
insb
push
aad
and
into
loop
or
mov
repz
and
mov
fs
xchg
aaa
fimull
loop
adc
bound
ds
out
sbb
xchg
xchg
xor
loope
test
call
pop
push
ja
mov
fisttpl
outsb
adc
inc
fwait
pushf
sub
dec
mov
add
jno
outsl
lret
adc
sbb
inc
rorb
pop
ds
fwait
xchg
jmp
and
fiaddl
pop
imul
fwait
out
dec
clc
shlb
stos
jge
les
mov
enter
es
mov
movsb
out
add
xchg
inc
mov
cltd
out
mov
cmpl
icebp
mov
xlat
rcll
sbb
xor
std
test
inc
lret
add
jmp
pop
inc
test
loope
nop
int
in
movsb
cli
or
sub
outsb
xor
sarl
or
test
cmpsl
sbb
cmp
jmp
push
hlt
cmp
adc
add
push
rorl
pop
jge
in
mov
jns
mov
cs
pop
jge
aas
movsb
mov
xchg
rcr
test
in
gs
cmp
cmp
daa
movsl
push
in
sub
inc
mov
dec
iret
inc
lods
sub
cmp
push
mov
and
push
xor
xor
fidivl
push
xor
in
mov
mov
cmpsl
mov
cmpsb
aad
arpl
in
cld
fs
xchg
aaa
jecxz
icebp
sbbl
mov
out
sbb
jne
cs
fildl
out
sbb
pop
fwait
sbb
scas
inc
mov
out
cmp
cmp
je
pop
outsl
sbb
lcall
and
mov
pop
jecxz
adc
xchg
scas
lretw
sbb
rclb
jge
cmp
jge
in
pop
push
sbb
xor
lods
repnz
dec
pop
cmp
xor
add
jle
sbb
mov
cmovo
test
out
sahf
out
add
cmp
popf
icebp
xor
xchg
sub
jbe
sub
push
std
jl
mov
xor
pop
pop
push
lds
ljmp
adc
mov
ret
decl
nop
ret
aam
mov
sub
xchg
xor
push
push
aaa
mov
shlb
lret
popa
std
popa
in
inc
or
loopne
cmc
cmp
movl
jo
popf
mov
aam
xlat
push
jmp
test
or
pop
iret
mov
add
xor
mov
pop
scas
in
rolb
rcr
test
sbb
add
xor
jl
add
leave
jbe
call
mov
sbb
into
dec
xchg
mov
xchg
ja
xor
popa
pop
mov
inc
in
mov
cmpsl
int3
into
in
sub
testb
std
rcrl
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
fcmovu
jle
pop
sbb
je
sbb
mov
cmp
cmp
ficoml
daa
addb
xor
imul
cmc
call
jne
cld
int
push
rclb
ret
pop
je
shll
jae
gs
in
repz
in
pop
daa
shrb
cmp
push
and
sbbl
push
adc
mov
add
fwait
test
inc
xchg
or
xor
test
xchg
jl
stc
data16
inc
adc
jmp
rolb
xchg
roll
cmpl
scas
in
sti
out
and
cmpl
mov
mov
sub
sbb
incl
stos
test
adc
jno
cmp
scas
adc
inc
andb
je
add
xlat
sbb
pop
mov
shll
mov
imul
dec
and
ret
sahf
andl
dec
xchg
xor
mov
in
aad
insb
push
jnp
cmp
loopne
jle
cli
jb
movsb
aam
and
or
ret
add
movsb
pop
adc
xchg
jb
into
pop
mov
xor
insb
mov
ds
and
aaa
pop
testl
xor
xchg
imul
or
lcall
js
testb
scas
mov
xor
cmc
add
loop
arpl
test
insb
lods
lret
ds
lret
cmp
dec
clc
int3
cmpl
test
pop
cmp
mov
sub
outsl
mull
add
notb
sbb
int3
and
cmp
fwait
xor
jge
sbb
xor
fiaddl
cmp
pusha
aaa
xor
cmp
xorb
stc
mov
xchg
cwtl
or
adc
into
fsubl
fdivrl
lods
pop
sub
andb
sbb
insl
call
inc
push
sub
jno
movsl
ret
xor
xchg
sahf
and
jmp
add
cwtl
in
push
ret
dec
loope
int3
cmp
pop
pusha
pusha
cltd
add
ficoms
xor
push
xchg
popa
pop
gs
adc
stos
add
and
stos
repz
and
lret
loope
add
int3
mov
clc
int3
ds
dec
pop
sub
push
movsb
cmpb
fmul
scas
ds
in
sub
pop
leave
lret
ss
pop
sub
sti
cmpsb
and
push
inc
repnz
sbb
lret
jnp
jbe
and
xor
push
mov
adc
cld
sbb
popf
stos
cmpsl
mov
sub
cmp
dec
int3
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
das
mov
and
sbb
sbb
fcmovnu
and
aaa
sbb
mov
iret
sarl
sbb
aam
sbb
inc
lock
cs
shlb
cmp
test
adc
fmuls
add
mov
mov
and
data16
mov
lods
movsl
shll
push
pusha
mov
aas
sub
hlt
sbb
mov
fisubrs
or
jecxz
shrl
mov
cmpsb
int
imul
out
xchg
mov
mov
inc
bound
inc
cli
xchg
jns
es
mov
and
cmpsb
clc
or
push
movsb
pop
lret
inc
pop
xchg
push
cmpsb
push
inc
das
aam
fsubrl
mov
mov
out
outsl
imul
icebp
aad
push
aas
jbe
in
notl
mov
cmc
ds
in
subl
xchg
popa
jge
cmp
push
sub
loop
inc
jae
or
ret
dec
push
repnz
adc
jno
aas
mov
pop
std
jbe
xchg
sti
pop
mov
addr16
out
leave
dec
mov
adc
push
sbb
or
pusha
mov
inc
jb
mov
ss
pop
sbb
mov
mov
or
push
stos
xor
repz
aaa
stos
xor
arpl
push
add
addr16
push
mov
inc
stos
iret
jmp
pop
inc
mov
mov
scas
pop
nop
fistpll
cmpb
xchg
mov
and
xor
test
mov
dec
in
stc
arpl
stc
jno
adcb
aad
mov
mov
lret
mov
mov
nop
push
sbb
jg
gs
loope
loop
mov
repz
mov
inc
outsb
lret
out
adcb
inc
push
push
filds
mov
and
jmp
stos
adc
mov
cmpsb
sbb
jg
mov
xchg
nop
decb
int
dec
xor
notl
out
daa
sarl
or
cld
adc
xor
xor
cmp
cli
push
and
and
sub
jl
xchg
xorb
mov
js
adcl
pop
add
xchg
add
mov
push
push
push
dec
aas
adc
mov
cmp
lds
shl
test
ja
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
mov
jl
dec
sbb
scas
adc
sbb
pop
shl
mov
add
sbb
and
add
push
stos
jno
mov
mov
das
lds
gs
loope
sbb
mov
test
or
xor
cmpsb
fmul
cld
or
dec
lods
xor
mov
push
fnsave
out
add
popa
push
or
add
daa
xor
sub
mov
or
test
ds
or
addb
test
mov
mov
mov
lret
call
xor
sahf
mov
sub
add
mov
cmc
out
pop
testb
sub
loope
fcomps
mov
cwtl
xchg
and
mov
ja
ja
andb
fisubrs
inc
cwtl
jge
hlt
call
cld
mov
sbb
jb
xor
sbb
iret
orb
mov
cmp
shrb
or
xchg
inc
out
inc
mov
andb
mov
stos
pop
adc
insl
lahf
std
movsl
push
dec
ret
sbb
sar
cltd
jno
push
dec
iret
and
xlat
dec
fs
and
add
sbb
mov
jo
add
add
mov
push
cmpsb
sbb
push
icebp
xlat
and
mov
daa
mov
dec
insl
push
add
fwait
and
and
cmpsl
add
jo
ret
frstor
mov
jne
sbb
push
andl
or
negb
pop
mov
sub
mov
mov
jo
fcoms
rol
mov
outsb
scas
popa
jnp
sbb
add
add
mov
lods
fs
add
fwait
cwtl
mov
sub
ret
imul
push
lods
mov
xor
test
popa
ds
ljmp
or
jne
nop
movl
fldcw
inc
pop
jmp
mov
popf
bound
test
sbb
out
dec
paddd
jp
hlt
cltd
xchg
mov
jns
mov
je
loopne
lods
cmp
int3
sbb
ss
iret
jg
mov
loopne
add
lcall
bnd
out
sti
dec
lret
rcrl
out
movsl
cwtl
sub
mov
jmp
shlb
call
inc
clc
or
je
sti
fsubs
cmpsb
pop
xchg
adc
or
ljmp
scas
pminsw
adc
imul
jnp
aam
lock
aas
mov
outsb
push
mov
sbb
mov
pop
out
mov
mov
test
std
fbld
jp
xor
insl
lds
inc
js
xchg
xor
ljmp
cmp
inc
pop
add
out
adc
int
adc
les
gs
dec
inc
stos
ret
xor
mov
out
insb
cmpsb
mov
sbb
jmp
dec
test
mov
xchg
fldl
mov
sub
push
mov
ja
rclb
cmpsb
lods
xchg
stos
jo
xor
cmc
xor
aam
jbe
add
jbe
fbld
sbb
push
xor
inc
mov
cmpsl
aas
cmp
mov
test
fiadds
dec
xchg
push
mov
decl
dec
and
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
mov
sbb
scas
adc
sbb
adc
adc
clc
pop
pop
fstp
je
mov
mov
sub
paddd
ss
pop
or
loope
rcr
fs
mov
fsubrl
loope
test
pop
js
outsb
pop
rol
sbb
push
and
loop
mov
xchg
mov
mov
inc
icebp
js
pop
enter
pop
sahf
orb
in
pop
xchg
cmp
jmp
xor
xor
pop
fs
cli
add
jg
lahf
push
xchg
sbb
and
imul
testb
dec
popf
ja
mov
lcall
add
je
pop
xchg
add
clc
or
mov
fimuls
out
ljmp
push
mov
fistpll
sahf
xorl
aas
xor
pop
and
aaa
mov
xlat
sub
scas
and
mov
pop
pop
sbb
imul
std
enter
pop
sbb
jl
pop
inc
mov
mov
loop
mov
int3
jg
movsl
add
xchg
test
bnd
push
insb
add
cwtl
jno
adc
mov
jo
movsl
outsb
xchg
scas
lock
xchg
jo
mov
push
and
popa
stos
xorb
sub
xchg
sub
xor
cmp
sti
insb
inc
mov
sbb
xor
aad
and
xor
rorl
sarb
or
xorl
push
jo
adc
jmp
add
lods
sbb
sub
sar
sub
iret
jle
push
xchg
movsb
arpl
mov
adc
cld
lea
sub
in
inc
xchg
xchg
int
or
pop
sbb
inc
ret
jno
mov
shll
jo
cmp
divb
lcall
adc
adc
outsb
mov
stos
stos
mov
bound
jg
cld
ret
and
lret
and
inc
dec
stos
test
pop
mov
dec
dec
pop
xchg
and
in
out
xor
jecxz
cmp
out
ja
bound
adc
mov
ss
ljmp
rol
daa
cmp
mov
mov
jmp
bound
mov
add
push
cmp
inc
popa
imul
aas
inc
lods
mov
icebp
or
dec
cmp
ljmp
or
add
cmp
popa
lahf
sarb
adc
std
xchg
push
add
pusha
mov
and
jno
stos
xchg
sbb
xlat
cmp
fiaddl
jl
or
mov
mov
xchg
cmpsb
dec
add
mov
or
pop
nop
mov
adc
outsb
pop
sub
or
loopew
scas
lret
cltd
xchg
mov
push
daa
mov
mov
xchg
mov
pop
jnp
xor
sub
dec
fxch
add
mov
pop
jmp
insb
fsubp
xor
pop
hlt
and
mov
mov
inc
pop
and
pop
pop
paddusw
cmpsb
mov
fsubrl
shll
xlat
out
and
filds
das
lock
into
jge
test
sub
xchg
mov
push
adc
in
mov
xchg
cmp
pop
pop
ljmp
je
xchg
fldcw
cmpb
or
and
or
jge
mov
in
xchg
ja
addr16
push
mov
adc
idiv
inc
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
movb
notb
sbb
rcr
shlb
fstps
sahf
inc
xchg
or
add
scas
inc
xchg
mov
mov
mov
mov
test
sbb
xor
int3
cmc
push
mov
fwait
aam
std
les
pop
outsb
dec
fistpl
sub
cwtl
pop
scas
cmp
imul
mov
int
incb
jb
repz
xchg
int
sbb
fidivrs
add
xlat
pop
cmc
outsb
test
dec
lea
dec
aaa
mov
xlat
stos
mov
jmp
pushf
cli
xchg
sub
cmpsl
rcrl
ss
mov
dec
movsb
inc
sbb
fimuls
pusha
dec
iret
mov
pop
adc
es
sbb
sbb
outsb
into
mov
icebp
push
add
leave
loope
dec
jmp
loop
jmp
test
push
dec
test
adc
pop
add
mov
mulb
stc
repnz
xor
xor
xor
mov
inc
sbb
js
leave
mov
mov
adc
mov
lahf
jo
ret
inc
repnz
xchg
mov
and
lcall
push
inc
fcmovnb
movsl
scas
dec
push
or
mov
adc
enter
sbbb
cltd
mov
jnp
jno
inc
cltd
fidivrl
mov
ljmp
jg,pn
dec
sbb
ljmp
addb
pop
xchg
js
clc
je
lahf
pop
sbb
jge
fs
testl
mov
hlt
imul
xchg
mov
mov
cmp
mov
xchg
cmp
das
push
xchg
arpl
lret
call
adc
loopne
xchg
dec
andb
pop
loope
jle
jecxz
mov
xor
add
sbb
cmpsb
mov
sub
add
nopl
cltd
dec
adc
test
or
fiadds
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
int
mov
notb
sbb
xchg
pop
pop
mov
push
pop
lret
loop
in
aaa
jnp
loope
push
cli
testl
cld
loop
ja
daa
add
or
stos
aam
sub
movsb
mov
and
lock
sarl
es
jge
negl
mov
insb
pcmpeqw
jecxz
sub
jnp
dec
push
cmp
aam
jg
repnz
mov
mov
push
lret
addr16
stos
adc
pop
lds
adc
call
sti
iret
jno
js
and
inc
orb
pop
cmp
shlb
scas
bound
push
or
cmp
test
daa
ljmp
in
jl
scas
mov
push
das
pushf
and
imul
jo
or
xor
enter
in
cmp
lret
aad
repz
or
aaa
outsl
jl
xor
ljmp
xor
ljmp
cwtl
pop
rorb
push
fistpll
stos
lcall
mov
scas
push
sbb
xchg
jecxz
push
dec
loopne
lods
dec
pop
aam
cli
rsm
daa
stos
jmp
jae
mov
fcompl
mov
jb
pushf
pushl
and
iret
add
icebp
movhps
jmp
aas
add
movl
xorb
call
jecxz
xchg
sbb
xchg
sahf
pop
pop
xor
dec
cmpsb
adc
or
adc
adc
repnz
and
jg
inc
ret
push
push
jp
imul
push
repz
sub
and
or
enter
sahf
sub
xchg
ss
sti
and
into
pop
pop
pop
es
bound
repnz
jb
or
xor
das
out
fistl
std
test
sbb
cmpl
out
mov
xchg
mov
adc
rorb
ret
test
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
jae
push
push
sbb
notb
sbb
xlat
sub
aaa
push
cs
xchg
sbb
cmp
sbb
daa
add
adc
or
jnp
sbb
jge
into
pop
das
mov
sbb
xchg
xchg
in
and
enter
ret
movsb
push
xchg
rolb
sub
xor
add
push
push
pop
or
mov
out
fldcw
pop
and
jg
or
mov
out
lds
and
jp
push
fadd
scas
insl
movsl
push
out
aad
jnp
lods
pop
sub
inc
jmp
stos
outsl
cmc
and
pop
push
inc
push
sahf
xor
xor
mov
pop
pop
fnsave
jae
xlat
and
aas
fsubrl
lds
int
xor
out
arpl
movsl
out
dec
cmpxchg8b
mov
xor
insl
sti
aas
mov
sarl
jo
cmpsb
sub
movsb
or
xor
repnz
test
lea
jae
cmp
in
out
aas
mov
xlat
mov
sub
mov
lea
jae
mov
mov
push
cs
pop
sub
clc
push
mov
das
into
mov
sbb
loopne
repnz
sarb
and
mov
icebp
lods
stos
or
inc
xor
xchg
sub
fisubrs
pop
pop
fwait
ret
sub
aam
loop
orb
push
xor
sbb
mov
inc
scas
imul
lret
xchg
fistl
lea
in
mov
aas
cmp
cmp
negb
lcall
arpl
jno
jle
jl
out
fisttps
dec
mov
shrb
call
add
into
dec
cmpsb
mull
outsl
cmp
lock
fwait
push
pop
xchg
fxch
sub
mov
mov
inc
sbb
jne
sbb
mov
mov
icebp
pandn
shlb
imul
push
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
mov
add
jb
pushf
cmp
inc
and
sub
adc
mov
mov
and
shlb
or
iret
mov
sti
and
in
cmp
imul
sahf
fbld
shl
push
push
bound
sub
andps
ss
aam
pop
and
xchg
fxch
imul
in
fildl
inc
jno
in
push
cli
popf
xlat
push
sbbl
test
aad
jnp
xor
dec
xchg
xchg
and
fiadds
xchg
sti
imul
cmp
and
dec
shlb
into
orb
dec
or
scas
fistps
fwait
movb
nop
dec
enter
shrb
mov
mov
inc
rcl
xchg
add
xor
ja
adc
adc
mov
push
scas
xchg
mov
adc
lret
cmp
les
mov
insb
mov
fmull
push
fwait
dec
push
jbe
lcall
pusha
inc
leave
adc
and
jno
aam
dec
xor
push
inc
inc
fnstenv
and
aas
mov
jno
pushf
daa
lahf
xor
xor
dec
mov
jle
loope
xchg
add
jge
mov
pop
fisttpl
cmpsb
out
jl
push
mov
nop
ret
aam
inc
push
fsubr
rolb
imul
sub
movsl
pop
fadds
pop
data16
add
pop
push
cmp
mov
in
ficoml
pop
insb
sub
sub
mov
shll
arpl
iret
inc
gs
xor
jg
out
mov
push
loopne
stc
mov
loope
inc
and
pop
ds
mov
test
pusha
add
mov
pushf
mov
bound
ljmp
xchg
mov
cwtl
dec
pop
mov
lahf
cli
inc
ret
xchg
xor
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
loope
mov
add
pop
std
mov
adc
push
mov
add
imul
clc
inc
aas
arpl
dec
js
or
inc
push
jbe
push
mov
push
sbb
mov
movsb
insb
lods
mov
add
ret
insb
xor
xor
mov
xor
push
popa
mov
jge
push
iret
or
mov
jne
add
add
repz
scas
inc
push
out
leave
pop
inc
xor
cmpsl
jb
das
repz
popf
jg
loope
pop
aas
sbb
movsb
push
push
cmpsl
jmp
adc
xchg
int
dec
xor
ret
sub
inc
jbe
mov
mov
adc
cmp
rcrb
fidivrs
push
adc
pop
add
in
aam
mov
adc
add
inc
push
push
push
xchg
jae
pushf
shr
dec
frstor
sarl
xlat
stos
mov
popa
mov
cltd
fmuls
dec
jnp
and
lcall
fisttpll
jo
pop
fldt
add
les
cmpb
mov
fcoml
leave
hlt
mov
sub
dec
rcr
sub
out
shl
adc
cmpsb
mov
jnp
push
cltd
and
rcrl
dec
bound
insb
mov
push
jbe
push
test
scas
lds
push
sub
mov
out
dec
in
jbe
pop
arpl
mov
mov
fadd
popa
jecxz
sahf
mov
cmp
lret
mov
sub
fidivs
sar
cli
pop
das
aas
mov
daa
dec
fsubrl
addb
je
aad
rol
outsl
sub
mov
mov
push
sub
add
sub
pop
xor
mov
pop
push
enter
sub
jecxz
inc
mov
addr16
jmp
xchg
or
stos
pop
imul
adc
adc
fmuls
add
insb
pop
add
mov
mov
jmp
aaa
and
dec
mov
push
out
stos
fwait
inc
push
sub
sbb
adc
sbb
push
mov
sub
mov
fwait
cmp
fs
inc
out
push
and
fiaddl
dec
mov
enter
xor
mov
movsb
fdivrs
push
sbb
mov
and
push
add
mov
mov
jb
lock
adc
sbb
insl
add
xchg
adc
sti
cmp
jle
enter
mov
pop
cs
das
sbb
sbb
and
mov
test
cmp
jns
int3
or
push
stos
test
fyl2x
jns
xchg
inc
adc
je
mov
scas
lods
ja
lds
jge
mov
adc
enter
push
dec
clc
cmp
sbb
pusha
xchg
push
int
insb
xchg
adc
and
or
clc
in
clc
lret
and
mov
mov
movsl
je
imul
xchg
mov
sahf
push
arpl
pop
cmp
adc
jnp
in
mov
jo
shlb
mov
int
xchg
insl
call
add
sub
sbb
pop
jb
push
and
std
mov
test
mov
sar
fildll
int3
mov
fnstsw
movups
mov
fldl
xor
daa
adc
jns
adc
test
lret
mov
and
or
aaa
dec
mov
dec
jb
mov
pop
xchg
out
add
or
adc
rcl
insl
test
out
dec
outsb
adc
cmp
inc
push
outsl
jg
xchg
subb
dec
rcrb
jbe
sbb
and
xor
sbb
data16
xchg
mov
jge
mov
sub
test
mov
in
dec
icebp
stos
out
dec
repnz
push
sahf
push
std
or
sub
push
cmpb
xor
loope
lods
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
dec
fbld
jl
mov
popa
cmpsl
xchg
mov
lods
mov
mov
dec
add
inc
inc
and
hlt
leave
mov
dec
push
dec
outsb
mov
xor
aad
lahf
repz
outsl
cwtl
sub
fdiv
cmpsb
pop
xchg
push
jo
pop
insb
arpl
xor
inc
mov
outsl
rcrb
aaa
dec
fidivrs
xor
xor
adc
ds
clc
xor
jae
insl
and
fsubrl
push
pop
sub
push
insl
push
out
mov
int3
mov
sub
cmpsl
dec
sahf
aaa
inc
mov
stos
and
xchg
xchg
scas
jns
cmpsb
cmp
mov
mov
jecxz
inc
lock
sbb
in
push
aam
outsl
lods
sub
pop
gs
mov
dec
dec
inc
xor
sahf
inc
nop
addl
xchg
out
mov
sarl
lea
xlat
iret
stos
adcl
xchg
ljmp
add
inc
adc
add
jge
inc
cmpsb
gs
push
in
or
jbe
push
jne
loop
fldcw
jp
inc
sbb
loopne
sub
mov
cli
testl
push
sahf
insl
jmp
pop
mov
push
jle
mov
fcoms
cmc
stc
inc
aas
pop
adc
shrl
fmuls
fmuls
and
and
inc
lods
addr16
ficomps
ds
sbb
cmpsl
movsb
shlb
or
xlat
sarb
jno
push
push
jge
mov
cmp
cmp
aas
scas
adc
int3
movd
fstl
pop
sub
notb
not
add
push
addr16
add
push
push
loopne
adc
mov
addr16
mov
lret
adc
pop
sbb
sbb
iret
mov
push
int3
mov
dec
jecxz
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
cmc
mov
lahf
xchg
pop
jb
xor
jne
dec
les
inc
xor
push
popa
aas
stos
add
or
sti
lea
mov
cwtl
dec
mov
push
sub
mov
pop
aas
aad
push
sti
push
dec
daa
push
popa
jmp
adc
sbb
mov
test
les
lock
dec
ds
push
mov
cld
jns
fsubrl
aam
sub
adc
cmp
dec
out
int
fs
push
mov
push
pop
mov
rolb
mov
inc
pop
pop
lods
test
inc
and
add
jne
mov
and
lahf
fmul
lcall
fisttps
pop
call
mov
jb
test
daa
in
stos
dec
mov
jmp
and
xor
pushf
jg
xchg
mov
lret
fbstp
push
test
repnz
ja
imul
imul
push
lret
aam
cmp
movsb
ljmp
call
pop
inc
call
xor
jbe
mov
lods
icebp
cld
rcrb
cmpl
jo
mov
bound
sbb
and
test
sbb
popa
stos
mov
divb
into
out
adc
sub
lahf
cmp
and
or
pushl
pop
mov
mov
insb
pop
aaa
out
scas
scas
outsl
sub
nop
adc
data16
sbb
fbld
inc
pop
fdivrs
test
ret
push
repz
adc
sbb
xor
in
mov
xchg
cmp
xor
push
cmp
out
jle
test
sub
mov
inc
and
scas
mov
or
loop
mov
fs
pop
es
nop
enter
sar
leave
incl
lods
pop
dec
add
jecxz
pop
adc
ftst
aam
ja
mov
mov
push
sub
cmp
cmc
inc
jecxz
inc
dec
arpl
je
push
mov
add
or
jae
insb
mov
fcmovnbe
pushf
out
mov
call
sub
inc
arpl
pop
fnstsw
mov
push
add
iret
ret
scas
pop
jne
dec
fimull
int3
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
xor
sbb
sbb
pop
ja
loopne
pop
push
adc
std
add
outsl
xor
xchg
lods
iret
ret
test
jecxz
pop
ret
cmp
xchg
out
lods
inc
lcall
pop
xchg
movsb
or
shlb
fnsave
pop
xor
sub
test
cmp
push
in
or
xchg
mov
mov
dec
test
xor
js
lret
loop
adc
popa
je
outsl
fisttpl
add
loope
or
cmpb
xor
sbb
movsb
idiv
hlt
xchg
call
sti
pop
mov
pop
cmp
xchg
add
adc
jbe
out
inc
aam
inc
sbb
das
inc
push
and
mov
add
xor
out
sbb
movaps
pop
stc
push
lea
mov
or
add
mov
mov
mov
stc
jbe
push
xor
mov
shll
scas
xor
fdivrl
sbb
frstor
pusha
scas
xorb
mov
sbb
pushf
notb
sub
pop
inc
pop
lret
sbb
and
repz
stos
lds
push
sarl
cmc
push
jbe
mov
icebp
lret
pop
sub
cltd
stc
dec
mov
daa
mov
lods
inc
cmpsl
mov
aas
test
ret
call
imul
cwtl
and
jmp
sbb
cwtl
sbb
mov
shrb
lock
xor
mov
adc
mov
dec
loopne
push
pop
dec
lret
les
mov
mov
jno
xlat
divl
je
adc
leave
mov
mov
add
lret
out
scas
hlt
xlat
xchg
jns,pn
push
sub
subb
xchg
pop
sbb
enter
push
mov
cltd
into
pop
inc
or
dec
jo
sub
imull
sbbl
mov
test
movl
lret
testl
aas
push
cmp
fs
or
add
sti
push
mov
cmovb
popa
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
jo
sbb
sbb
adc
sbb
in
fildll
shrb
adc
dec
outsb
out
lock
cwtl
mov
pop
fwait
ret
iret
addr16
xchg
dec
bound
push
xchg
test
mov
arpl
into
je
xchg
cs
pop
loop
push
in
bound
shlb
sub
aas
xor
add
aaa
mov
inc
jp
aad
lea
leave
adc
fisubl
cmpsl
push
mov
and
ror
fidivrl
xchg
inc
fstpt
jl
insb
sbb
or
daa
xorb
shll
leave
pop
mov
mov
inc
mov
and
fs
xor
into
and
loop
pop
inc
dec
test
les
cld
lret
lea
mov
rolb
dec
addr16
xchg
loope
in
pop
mov
fists
add
fisttps
repz
push
insb
push
mov
out
and
xor
in
dec
add
xchg
sub
sbb
pop
outsl
dec
jle
mov
xchg
jb
add
xor
dec
sbb
cmp
cmp
and
push
push
sbb
adc
je
aam
mov
jnp
aas
add
and
mov
or
int3
jp
mov
rcrb
lods
xchg
lds
xchg
scas
and
aaa
test
inc
sbbb
push
mov
ljmp
mov
mov
lret
jns
lcall
mov
xchg
aad
xchg
xor
jno
stc
mov
jg
cmc
fsts
pop
and
call
pop
nop
jge
jae
jb
mov
fistps
sbb
imul
dec
cmp
js
lds
push
adc
cltd
dec
or
and
add
rol
mov
adc
je
ljmp
cmp
lock
test
mov
repz
test
enter
sahf
cltd
push
imul
insl
into
imul
movsb
loop
push
mov
lcall
xlat
mov
stc
hlt
cmc
cmpsb
push
mov
mov
clc
jl
imul
andb
add
mov
cmp
adc
pushf
sub
rcpps
push
movsb
or
adc
pusha
adcb
testb
arpl
push
xchg
sub
sbb
push
stos
in
stc
int
lret
adc
mov
sbb
lcall
subl
pusha
cmp
sub
push
mov
jne
mov
lea
outsl
repnz
inc
lret
outsl
push
adc
clc
or
ja
adc
out
das
xchg
popl
outsl
xchg
sbb
stos
push
cmp
jb
setle
pop
cmpsb
xor
cwtl
mov
mov
mov
shlb
push
or
adc
cmp
mov
mov
in
add
addb
pop
adc
pop
xorb
test
lret
xchg
push
mov
cmp
mov
lret
shlb
and
inc
and
movsl
inc
xor
push
das
leave
jb
mov
ror
xchg
aaa
push
dec
es
adc
inc
and
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
and
jle
adc
sbb
adc
sbb
cmpsb
out
and
push
xor
inc
cmp
push
faddp
pop
dec
cmp
mov
aaa
shr
xchg
fists
jb
inc
cmp
sub
xor
movsl
mov
pop
cmpsl
mov
dec
out
aad
cmp
adc
jmp
inc
mov
data16
dec
dec
aas
in
dec
lret
cltd
int
lahf
sub
in
shl
mov
xchg
cs
or
test
pop
into
mov
dec
cmp
nop
push
xor
into
sub
sahf
sub
mov
cmp
sub
jmp
loop
pop
inc
push
sahf
push
add
and
add
add
testb
cmpsl
sbb
add
jmp
push
stos
jle
aam
jp
mov
xchg
out
jecxz
cltd
mov
mov
pushf
mov
cmp
movsl
negl
lds
mov
xlat
xor
bound
cwtl
outsl
mov
push
add
test
xchg
xchg
roll
sbb
jno
jns
add
cmp
lret
stc
ljmp
mov
push
mov
mov
sub
int3
xchg
mov
dec
add
pusha
mov
jecxz
lahf
cld
mov
push
stos
rolb
or
pop
inc
stos
nop
das
shlb
ljmp
in
inc
fsubl
in
int3
lds
push
roll
mov
idivl
push
je
fwait
push
ss
les
nop
lods
mov
mov
rclb
stc
repnz
jecxz
push
xor
inc
decb
repnz
sahf
adc
sub
add
movsb
pop
push
testb
cli
xchg
out
out
add
sbb
outsl
ds
repz
dec
rcll
test
push
loop
dec
pop
mov
or
adc
mov
dec
loopne
sbb
arpl
int
cli
aas
jae
mov
fmuls
inc
lods
mov
imul
mov
dec
mov
dec
fdivrp
ror
cmpb
xchg
and
icebp
in
add
fcmovbe
sub
gs
dec
std
cld
hlt
in
mov
test
lods
into
sub
scas
jns
adc
cmc
in
dec
mov
shll
fcomi
idivl
xor
xchg
cmpsb
push
mov
push
sarl
jno
jg
sbb
pusha
jne
jno
out
jmp
inc
push
enter
ja
leave
lea
out
cwtl
mov
mov
gs
test
sahf
inc
aad
stos
rclb
mov
dec
xor
insl
stos
test
dec
fdivrs
push
pop
push
mov
sbb
dec
xor
lea
ret
imul
adc
mov
in
pop
jne
sub
cmp
nop
sub
lods
dec
leave
cli
insb
adc
pop
repz
cmpb
fldt
cltd
adc
inc
fistpll
xor
stc
movq
adc
test
jge
fs
dec
add
adc
adc
hlt
outsl
xor
dec
xor
loop
xchg
or
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
pop
lock
sbb
sbb
inc
pop
outsl
clc
inc
jne
outsl
xchg
add
add
add
add
ret
add
cli
xchg
add
mov
jge
push
cld
cmp
dec
out
ficomps
cmpxchg
stos
loopne
push
sbb
aam
fbstp
cwtl
je
insb
imul
cmp
dec
cmp
bound
sbb
inc
mov
frstor
push
push
pop
dec
je
adc
dec
or
pop
push
leave
arpl
push
out
outsb
jns
push
and
pop
arpl
xor
and
pop
roll
lret
jbe
popl
cmpsb
fcmovbe
inc
sbb
inc
cmpsb
shrb
cmpsb
inc
loope
mov
cmp
pop
mov
or
es
fs
sbb
sbb
pushf
flds
sahf
sbb
xchg
enter
imul
fs
outsl
test
ljmp
rorl
cmp
xor
jge
push
outsl
les
pop
fsubl
pusha
xchg
dec
aam
mov
inc
jbe
in
add
cmp
cmp
and
pop
ffreep
cld
inc
add
jns
stos
jno
out
test
test
mov
push
pop
into
add
push
mov
addr16
pop
pop
mov
dec
fistpll
xor
fistpll
inc
scas
popf
jae
pop
push
hlt
pop
dec
inc
mov
cmpsb
pop
adc
insl
loop
xchg
clc
mov
inc
or
jnp
add
test
cs
mov
pop
stos
cmp
push
icebp
sbb
cmp
mov
push
push
and
sub
xor
mov
mov
cld
pop
xchg
repz
jg
scas
push
push
pushf
rorl
in
sub
rcrb
shll
movb
xor
test
push
js
push
mov
adc
lods
cwtl
lds
adc
mov
sbb
mov
push
dec
test
shll
je
inc
push
sbb
jl
pop
sar
cli
xchg
mov
cli
in
mov
lahf
pop
fucom
mov
ljmp
mov
pop
and
add
pop
pop
stc
popl
sti
roll
adc
movsb
push
mov
cmc
stc
fdivl
and
fnstenv
leave
xor
pop
ret
repz
inc
dec
mov
addl
ret
and
sti
lods
leave
rorb
ret
lods
ss
sbb
push
adc
xlat
movsb
cmp
gs
pop
iret
xchg
pop
mov
xchg
jg
jecxz
push
xor
fs
test
push
or
pop
popa
xchg
outsb
sub
das
dec
inc
test
dec
cmp
xor
daa
arpl
imul
scas
movsb
mov
pop
inc
or
addr16
rclb
cmp
negl
mov
jns
imul
clc
sub
inc
cmp
cli
cmp
fmul
mov
mov
jbe
mov
dec
arpl
xor
dec
xchg
and
mov
inc
sub
pop
push
daa
xor
jg
in
mov
mov
sub
pop
xlat
mov
rorl
mov
mov
subl
jmp
mov
push
in
xor
arpl
adc
sbb
or
movsb
insb
jne
mov
pop
sbb
jae
inc
das
aam
leave
scas
sbb
mov
cli
daa
out
adc
es
dec
sub
pop
add
mov
adc
add
leave
mov
rolb
shll
push
or
gs
gs
sbb
and
jecxz
cmp
sbb
lods
test
lcall
inc
std
xchg
sub
test
sarb
or
pop
adc
daa
out
hlt
mov
idivb
mov
dec
inc
inc
xlat
test
iret
pusha
sbb
adc
sar
add
sub
lret
xlat
adc
aam
lahf
scas
fnstenv
push
mov
dec
rorb
mov
vpxor
daa
lret
loop
cmp
mov
pop
fs
cmovbe
icebp
inc
add
jno
js
fsubs
sbb
pop
sbb
sbb
xchg
outsb
sub
xchg
in
jg
insl
loope
mov
fwait
push
cwtl
sub
jno
mov
xchg
mov
jno
push
mov
adc
movsb
into
mov
out
mov
mov
lock
and
je
dec
imulb
mov
pop
cmp
loope
jno
mov
fwait
sub
mov
or
cmp
sub
mov
out
fimuls
loopne
lcall
popf
cld
mov
test
rcll
cmc
lret
and
adc
ret
mov
xchg
xor
in
insl
mov
jns
int3
pop
xorl
es
inc
pop
cs
mov
pop
loope
outsb
call
pop
outsl
cmp
les
sbb
jecxz
inc
xlat
iret
out
cli
cmp
subl
push
lahf
cli
insb
cmp
sub
stc
iret
mov
push
cmp
ja
enter
xchg
adc
add
sub
push
cmp
xor
jns
and
or
add
cmc
cwtl
mov
xchg
adc
sub
rcl
movsb
jecxz
aaa
jge
cmp
jp
sub
push
add
or
das
xchg
repz
cmp
sub
stos
arpl
fstps
das
mov
sub
mov
lods
xchg
mov
fldl
xchg
sti
aam
mov
in
sbb
out
mov
mov
fs
sbb
xorb
fnsave
or
jg
xor
jns
xchg
cli
and
mov
notl
jmp
xor
sti
popf
mov
mov
ljmp
xlat
jge
cmp
jb
hlt
and
shrb
and
outsl
lret
cmp
sub
sub
pop
mov
jl
jb
fs
mov
in
sbb
push
gs
movsb
lock
sbb
ret
push
xchg
xor
loop
in
pop
dec
loop
mov
out
and
je
loope
jle
sbb
xchg
pop
fidivl
xor
aad
xchg
or
jae
daa
and
mov
and
jmp
jo
and
xchg
lcall
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
not
mov
jbe
jmp
movsl
jo
mov
jae
xchg
daa
mov
mov
arpl
push
loop
pop
inc
int
jo
xor
mov
in
or
mov
addr16
xor
mov
jl
push
cltd
loopne
rolb
imul
lods
pushf
inc
stos
cld
pop
std
cltd
xor
ss
pusha
xchg
testb
cmp
dec
inc
dec
shll
push
js
in
xor
pop
mov
movsb
inc
int3
push
fs
sarl
mov
cmp
ss
pop
lret
stos
lret
dec
imul
xchg
pop
je
out
mov
test
pusha
sub
sbb
out
or
push
cld
inc
jecxz
mov
sub
or
pop
mov
lods
adcl
lea
sbb
fistpl
nop
cmp
xor
nop
stc
cmp
sub
mov
pop
andl
iret
push
aas
xor
popa
push
hlt
and
insl
mov
cmp
or
mov
fisttpl
je
jae
jl
cmp
fistpll
ffreep
cmpsb
cltd
fiadds
ja
mov
push
data16
xlat
sub
xchg
enter
push
jnp
cs
adc
dec
jb
pop
mov
push
sbb
jnp
sub
adc
jmp
imul
test
leave
sub
scas
inc
or
ss
jmp
filds
lea
cmpsb
inc
sbb
stc
cmpsb
stos
fsts
jnp
cmc
inc
xchg
xchg
xchg
xchg
imul
aaa
mov
and
push
cltd
mov
lahf
imul
mull
rcll
xchg
movsb
fadds
out
dec
sub
movsb
push
out
call
dec
or
lcall
xor
stc
xor
mov
push
mov
cli
and
test
mov
mov
inc
popa
or
xchg
cltd
adc
jno
in
data16
add
lret
aam
out
cmp
xchg
sahf
mov
pop
aas
or
mov
mov
pusha
cmp
xchg
arpl
mov
mov
imulb
in
inc
bound
xchg
mov
jnp
lods
or
and
lret
push
cmp
cmp
insl
ds
xor
jg
jae
fimuls
mov
inc
add
mov
pop
out
outsl
ret
aas
scas
mov
fwait
icebp
push
insl
dec
es
clc
movsb
dec
clc
mov
jp
das
mov
and
cmp
sbb
stos
nop
pusha
outsl
jl
loopne
sub
push
pop
int3
jne
pop
sti
daa
sahf
add
rcrl
mov
hlt
cmp
mov
popa
xchg
fs
data16
lock
jbe
adc
rclb
cli
mov
dec
pop
sti
mov
cmp
stos
mov
cltd
mov
dec
jbe
in
push
mov
scas
xor
ret
test
push
mov
adc
mov
scas
mov
pop
mov
lods
or
sub
fprem1
pop
test
mov
lock
enter
and
stc
repnz
jge
xchg
enter
dec
jle
adc
pop
and
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
call
notb
sbb
adc
sbb
add
lods
xchg
mov
call
ret
mull
and
fidivl
mov
cwtl
idivb
inc
fcomi
jbe
adc
fisttps
push
mov
mov
popa
inc
sbb
cltd
or
lret
sub
call
rcl
mov
add
syscall
xor
das
mov
popa
xor
mov
sahf
out
js
push
dec
push
push
iret
sub
adc
cltd
leave
sarb
dec
in
dec
sbb
dec
push
adc
sbb
cli
jne
popa
data16
jne
sti
adc
ljmp
lds
mov
pop
jg
in
cmp
xchg
jmp
dec
and
jg
jge
imul
outsb
mov
add
sbb
and
lea
mov
jb
call
xchg
jbe
bound
pop
aaa
int3
outsb
sbb
adc
aas
out
jnp
add
cmpsb
movsb
dec
insl
imul
xlat
push
js
cs
ja
hlt
fstl
cmpl
jae
xchg
les
lods
bound
adc
in
fsubr
push
in
leave
cli
lret
mov
sub
sub
xor
pop
mov
shlb
push
mov
cmpsl
jno
out
imul
in
jb
clc
inc
dec
sbb
sbb
sbb
xor
int
pushf
pop
js
or
imul
mov
pop
and
lret
mov
xchg
mov
or
lcall
pop
iret
mov
pop
jbe,pn
dec
ret
push
movsl
dec
shrl
sti
jno
out
xor
int3
jnp
mov
cs
pop
fldcw
loopne
mov
dec
mov
cld
test
shrl
and
and
int
shrl
loopne
xchg
jno
sbb
cmp
hlt
xchg
test
jg
pop
ret
fdivl
aad
jmp
cli
cmpsl
mov
out
xchg
arpl
fistps
divb
imul
insb
mov
push
lds
std
loop
jno
leave
mov
xchg
mov
sub
stc
mov
stc
into
aaa
leave
mov
or
push
dec
cmc
pop
push
cmp
sub
push
mov
fs
xlat
and
enter
mov
dec
xchg
push
fistl
stos
ja
jmp
or
popf
mov
mov
aaa
clc
outsb
test
test
push
aaa
pop
xchg
add
mov
lods
inc
inc
push
jmp
and
ret
addr16
sub
xlat
icebp
or
add
or
in
xchg
addb
stos
pushf
bound
jmp
ja
sbb
or
out
pop
mov
lea
dec
mov
push
movb
pop
and
mov
popa
loope
inc
cmc
sbb
repz
aas
clc
shll
xor
mov
xchg
rcr
jmp
stos
dec
xchg
xor
out
fwait
xchg
pop
dec
sbb
xchg
or
xor
adc
and
aaa
test
rcll
hlt
push
jnp
cld
int
nop
shrl
negl
adc
mov
xchg
mov
out
sti
and
inc
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
repz
sbb
int3
xchg
cmp
insl
repnz
arpl
das
js
sbb
cwtl
mov
loope
aam
adc
je
jecxz
repz
fwait
loopne
pop
movsb
sbb
xchg
mov
jo
imul
xchg
adc
mov
xlat
out
sti
dec
in
adc
repnz
mov
and
pop
enter
dec
push
cltd
ds
xchg
mov
and
das
cs
inc
push
jb
inc
mov
mov
fmul
test
in
scas
xchg
jno
stos
dec
sbb
jb
xor
lock
xchg
and
leave
mov
mov
inc
cwtl
sub
mov
jl
scas
sbb
les
mov
fdivp
jp
add
dec
sbb
lahf
sub
cmp
out
pop
cs
push
xor
fwait
rcrl
sbb
pushf
mov
ds
push
pusha
pop
dec
clc
addr16
stos
pusha
cld
or
outsl
xchg
ljmp
cli
clc
sub
arpl
rcr
test
inc
lock
ret
out
sbb
or
xor
jge
inc
or
or
push
sub
jg
lods
mov
pop
or
andb
xchg
sbb
adc
pop
mov
outsb
mov
out
addr16
xchg
ret
cs
cmpsb
popf
push
push
add
stos
mov
rclb
mov
push
cld
lods
loope
scas
mov
pop
mov
mov
and
sarl
std
mov
xchg
sbb
hlt
sub
cmp
add
dec
rorb
jns
adc
loope
sub
pushf
and
sub
inc
hlt
lcall
pop
sub
pop
in
into
xor
ja
sub
and
testl
cmpsb
leave
lcall
sub
int
adcb
ds
xchg
jp
adc
imul
in
sbbl
out
aaa
in
dec
mov
cmp
in
mov
out
shlb
leave
mov
cwtl
dec
iret
or
mov
leave
clc
push
jmp
scas
daa
xchg
mov
and
xchg
testl
xor
addr16
mov
or
jo
jl
inc
push
dec
sbb
fcmove
and
xchg
or
or
aaa
cli
test
fbld
cmp
jmp
outsb
mov
push
push
sub
jo
loopne
fwait
shrl
hlt
ror
iret
out
add
cmp
push
ja
mov
test
nop
jmp
mov
ret
pushf
pop
clc
aaa
or
int3
stos
loop
arpl
mov
je
sbb
popf
ljmp
mov
lock
data16
sbb
and
rcrl
sbb
push
adc
inc
jge
jnp
add
jmp
aad
mov
fdivl
es
and
stos
jbe
jge
repz
cmp
xchg
cwtl
inc
sbb
test
xlat
iret
outsl
shlb
pop
dec
cmp
sahf
popa
lcall
mov
adc
arpl
jge
xchg
xchg
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
outsl
mov
push
sbb
adc
sbb
xor
jl,pn
fistpl
pop
inc
jns
mov
jnp
rorw
push
push
aad
pusha
mov
pusha
sti
pop
adc
insl
add
pop
lret
mov
inc
dec
cli
pushf
dec
lret
aam
inc
xorl
mov
jg
movlps
je
mov
popf
xlat
cmpsl
push
jmp
jge
or
lcall
ret
out
mov
mov
shlb
mov
jecxz
jo
cmp
xchg
sub
insl
or
xchg
js
aaa
movsl
add
and
arpl
fcomp
xchg
dec
mov
add
adc
mov
pop
adc
jp
jae
arpl
dec
mov
daa
enter
repnz
std
sub
sbb
pop
mov
xchg
push
mov
popa
ja
cmp
mov
inc
les
sbb
sbb
shll
pop
push
dec
mov
clc
out
cmp
mov
xorb
leave
sarl
into
addb
sbb
jmp
mov
mov
pop
data16
pop
out
sahf
mov
jecxz
mov
fmulp
icebp
dec
inc
stos
jno
or
xchg
lret
pop
cmp
xor
mov
xchg
jg
push
mov
adc
in
std
shl
inc
sarb
xchg
fstps
jp
pop
mov
cmpsb
lds
xchg
addb
push
jl
cmpsb
cmp
js
pop
push
mov
cld
jb
mov
outsl
and
ret
fisttps
inc
jbe
fwait
imull
xchg
or
cwtl
pop
and
push
pop
int3
and
mov
pop
lods
xchg
in
cwtl
stos
mov
sub
jb
mov
pop
ss
mov
das
shl
rorb
inc
xchg
add
in
xor
cmpsb
jae
pop
sahf
add
testb
sbb
lods
sbb
pop
pop
daa
fiaddl
and
inc
add
mov
push
jl
cli
test
pop
mov
clc
int
dec
cmc
jbe
xor
jmp
sbb
or
lds
xchg
out
les
dec
popf
out
lea
pop
hlt
data16
scas
mov
cmp
es
adc
imul
and
shrb
cmp
hlt
jl
add
outsl
jp
jg
aad
cmp
in
lea
and
and
pop
sub
dec
xchg
push
mov
rcl
fildl
jmp
add
fmull
mov
mov
mov
fistpl
cld
xor
idivl
call
ret
pop
repnz
xor
jnp
jecxz
pop
iret
add
rorl
sbb
pop
sahf
inc
inc
shll
loopne
fnstcw
cmpsb
jle
xchg
cmpsl
and
push
or
cmpsb
xchg
shlb
mov
lcall
xchg
adc
int
cmpsb
jnp
or
pop
ret
call
push
jb
call
dec
insb
fs
fimull
iret
shrb
sub
push
push
xor
xchg
scas
xchg
push
sbbb
pop
lcall
and
out
pop
or
and
jl
scas
lock
inc
fiadds
jmp
fnsave
jb
dec
lahf
mov
aaa
pop
mov
lock
add
pop
es
sub
lcall
sub
jne
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
mov
sbb
adc
sbb
jle
mov
add
int3
outsb
stc
sub
lock
xor
popa
dec
cld
js
mov
and
mov
adcb
dec
mov
push
mov
inc
push
movsl
cmp
in
push
clc
cmpl
nop
mov
sub
sub
idiv
sub
hlt
hlt
loope
push
inc
fisubl
sbb
in
je
pop
fs
lods
ficoms
add
in
xchg
shrb
dec
adc
xor
inc
fcompl
sbb
cli
cmp
mov
nop
add
push
lock
inc
mov
cmpsl
lahf
cmpsb
and
adc
scas
ror
aaa
lret
add
dec
pusha
xchg
mov
add
gs
xchg
mov
pop
lret
aam
pop
mov
subb
mov
or
ja
or
lods
cmpsb
outsb
xchg
lahf
sbb
iret
fsubrs
in
aam
inc
repnz
jp
push
pop
mov
or
sub
push
xchg
fsubrp
leave
add
jp
and
mov
std
mov
shr
or
jecxz
fisttpll
lods
xor
gs
xchg
jl
mov
imul
inc
loopne
in
and
cli
jno
shlb
jb
pop
adc
cmc
sti
dec
test
mov
add
cld
xor
adc
mov
lds
lea
loope
and
cli
inc
rcrb
inc
test
add
out
nop
lcall
jnp
ret
push
lds
subl
xlat
testb
jns
pop
mov
iret
mov
aad
lahf
inc
adc
outsb
int3
out
repnz
cmp
xlat
jno
add
add
adcb
push
mov
push
sbb
xor
out
cmc
xchg
xor
and
adc
adc
test
add
fistps
sbb
cwtl
pushf
fmul
fmuls
xor
mov
sub
test
mov
fcmovnu
mov
fdivs
jno
sub
cmp
std
imul
xorl
xor
add
ds
rolb
ja
jae
xor
xor
aas
ss
test
pop
mov
push
fnstcw
test
shlb
inc
ret
hlt
dec
push
inc
sub
xchg
jae
or
mov
push
add
mov
pop
cmc
xchg
dec
out
mov
pop
sub
ja
inc
pop
rorb
xchg
out
loopne
loop
sub
mov
int3
stc
mov
lods
mov
sahf
mov
inc
add
sub
es
bound
sti
and
cwtl
int
out
test
js
and
cwtl
jnp
pop
out
test
and
scas
lds
mov
jne
pusha
shlb
lret
repnz
pop
gs
sarl
push
ljmp
jg
sbb
xchg
mov
cmpsb
push
add
scas
xor
loopne
sub
fnstenv
or
in
imul
out
stc
bound
mov
pop
sbb
xchg
sbb
dec
fiaddl
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
mov
fistl
sbb
adc
sbb
ja
dec
mov
pop
mov
test
fldenv
enter
xor
adc
subl
rcrl
jo
lret
dec
xchg
orl
dec
loopne
call
cmp
cmpsl
or
lahf
int
sbb
sbb
jp
and
sbb
push
xchg
cs
mov
jb
sbb
add
ljmp
call
and
adcb
and
adc
push
xor
hlt
in
mov
mov
add
in
cmp
sbb
out
jno
test
inc
lret
shlb
inc
ss
scas
mov
inc
insl
addr16
ljmp
aam
or
repz
roll
xchg
or
inc
mov
test
ljmp
adc
push
lods
cmpsb
mov
loop
decb
sbb
xlat
les
mov
sbb
test
mov
xor
std
cwtl
fists
or
std
insb
add
loopne
imul
sbb
cmp
xor
ja
pop
cmp
push
jno
aaa
incb
push
jle
aam
add
ret
testb
repz
test
push
cs
inc
mov
lcall
mov
mov
push
popf
pushf
out
shrb
movsb
pop
dec
cmpsl
mov
inc
jp
in
and
scas
clc
test
pushf
clc
pop
sub
xor
inc
jne
ret
or
cmp
aad
and
test
iret
nop
mov
mov
sbb
pop
addb
and
mov
adc
scas
out
pop
pop
inc
stos
ret
or
sarl
xchg
xchg
mov
int
jb
jmp
test
cmpsl
cmp
or
lret
idivl
pop
dec
inc
adc
sub
dec
cmpsl
insl
mov
popa
push
je
mov
icebp
stos
cmpsl
aam
rcpps
mov
les
movsb
and
in
inc
sbb
lea
push
das
pop
inc
sub
rcl
mov
aaa
lret
push
lret
std
xor
mov
clc
ja
adc
dec
sbb
lcall
pop
out
push
sbb
or
lret
inc
jo
pop
jg
xor
mov
sbb
add
clc
pop
sbb
je
mov
ficompl
cmp
shrb
fs
push
cli
fwait
push
int3
adc
or
in
int3
xor
lcall
mov
std
add
push
das
in
sbb
rcll
push
dec
adc
lea
sbbl
xor
sbbl
mov
push
fsub
pop
push
aaa
cmp
rclb
xor
and
or
sahf
outsl
movsb
aad
fistpll
fisttps
sub
mov
rcrl
jg
add
jmp
shlb
push
stc
fldt
rorb
mov
adc
outsb
or
repz
jle
insl
iret
cs
lret
sub
je
push
scas
cmpsl
rcrl
repz
jne
jg
inc
cmp
push
and
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
jl
arpl
adc
sbb
popl
xor
out
push
mov
orl
jae
arpl
fnstsw
pop
cmp
xor
lods
sti
in
add
pop
div
dec
rol
sub
rol
sbb
mov
pop
lds
enter
mov
mov
add
cmc
mov
or
cmp
aaa
push
inc
lea
aas
jne
pop
sub
subb
lea
lahf
add
or
mov
mov
xor
mov
outsb
and
rorl
pop
in
popf
in
movsl
mov
push
sbbl
adc
insb
push
mov
ljmp
sbb
jo
cmpb
and
push
pop
loop
rcll
push
pop
xor
add
or
dec
cmp
sbb
mov
jb
pop
enter
cmp
mov
cmp
iret
xchg
xchg
sahf
sti
pop
int3
lods
sbb
lods
inc
pop
pop
loop
sub
sub
pop
inc
xor
jle
adcl
sbb
inc
push
or
mov
ss
inc
test
outsb
mov
mov
inc
mov
nop
or
jbe
sub
test
shrb
xchg
stc
ljmp
aam
mov
pop
jecxz
push
repz
fldt
dec
in
inc
bound
je
mov
mov
jecxz
or
add
inc
dec
lds
cli
lods
outsl
jb
insb
push
push
mov
sbb
sbb
test
sbb
sub
inc
aaa
sbb
xchg
mov
ret
js
rolb
clc
lret
loop
push
pop
imul
inc
leave
fisttpll
movsb
popa
or
jnp
pop
sbb
cmp
and
push
cld
ds
and
cmp
int
push
aam
arpl
sub
push
ds
sti
lods
add
ljmp
in
loope
lock
leave
push
adc
and
cmp
add
jl
push
sub
mov
aam
dec
mov
and
nopl
cmpsl
jno
rcrl
push
in
aam
add
fidivs
sub
out
out
cwtl
fs
arpl
mov
sti
jno
out
xchg
in
lea
mov
mull
ljmp
cmp
dec
push
jl
sub
sub
push
mov
sbb
lcall
lahf
jnp
mov
sbb
in
insb
push
push
in
fadds
pop
cmp
sbb
cmpsl
jmp
add
jg
test
push
cmp
popa
mov
andnps
test
jge
in
lret
jle
push
mov
ffreep
mov
aad
out
ljmp
lret
fcoml
wrmsr
pop
xor
cli
cmp
popf
adc
xor
jne
in
jb
test
push
fwait
cmpxchg
shlb
or
pop
sti
mov
xor
sbb
add
fwait
iret
mov
mov
lar
lret
lret
ss
push
xchg
jo
sub
fwait
out
js
push
or
into
fcomip
hlt
loope
mov
push
jmp
aad
xor
jmp
mov
jecxz
jmp
ljmp
dec
mov
pop
nop
or
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
pop
xor
int
sbb
adc
sbb
xchg
push
aas
pop
mov
and
add
pop
fnstsw
push
shrl
nop
sub
fimuls
or
sbb
outsb
cli
mov
and
mov
repz
cwtl
mov
in
in
jmp
testl
daa
sub
mov
notl
enter
inc
aad
cmp
mov
and
cltd
xchg
xor
aam
mov
jbe
sahf
adc
enter
bound
out
aam
lret
enter
add
fcmovb
jno
test
mov
sbb
fbld
lods
xorl
repnz
jo
test
cli
and
pop
stc
shrl
and
fisttpll
inc
mov
jne
jle
sub
adc
mov
test
mov
js
jmp
xlat
mov
xchg
aad
xchg
sbb
sbb
lea
jmp
adc
pop
cmp
aam
popa
lea
add
movsl
or
xchg
xor
lret
or
imul
and
rcll
jmp
and
or
push
dec
imul
push
repz
jo
rcrb
imul
adc
scas
and
stc
sbb
mov
mov
dec
pop
cltd
scas
jae
inc
push
add
movsb
nop
mov
das
mov
es
dec
inc
sbb
pop
and
gs
inc
sub
cltd
cmp
inc
or
and
sbb
cmp
aas
push
push
jbe
pop
push
ret
fwait
push
test
and
jb
dec
pop
je
sbb
pop
sub
add
loope
pop
aam
insb
rcll
rol
push
lcall
or
or
xchg
rcrl
sbb
movsl
dec
rcrl
outsb
cmp
jnp
int3
ljmp
mov
ss
and
dec
dec
push
inc
enter
mov
jns
push
out
push
sbb
ret
pop
dec
sub
inc
sbb
add
mov
jns
push
sbb
ret
movsl
movsb
xlat
shll
fcomps
daa
mov
push
sti
cmpsl
aaa
adc
mov
dec
cmp
mov
add
push
std
aaa
lds
clc
into
outsl
mov
sbb
daa
clc
push
popa
in
jl
xchg
jge
pop
xor
clc
paddd
in
mov
inc
xchg
adc
scas
inc
cmp
stos
mov
fwait
adc
inc
sbb
scas
sub
and
ret
sbb
test
aaa
loop
push
sub
lock
lahf
jle
xlat
dec
add
mov
movsl
xchg
cltd
loop
sub
outsb
mov
dec
test
das
mov
ss
push
jnp
dec
mov
aas
mov
jp
cmp
ja
push
enter
movsl
xor
imul
pop
pop
mov
jns
icebp
sub
jl
mov
adc
or
orb
sahf
push
fwait
dec
cli
clc
lock
cmp
fsub
fists
into
lret
add
mov
jns
ja
or
xchg
mov
xadd
push
rclb
test
insl
fisttps
sbb
dec
mov
in
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
data16
mov
sbb
sbb
loope
pop
loope
dec
mov
into
das
in
mov
mov
ljmp
fs
add
bound
jo
lahf
enter
sbb
push
jne
dec
mov
cwtl
xor
lods
popl
xchg
mov
test
xor
push
jne
out
push
push
jo
aad
add
out
shrb
cmpsl
lahf
dec
mov
inc
cwtl
das
bound
bnd
pushf
sti
sarl
das
xor
sbb
xchg
fs
rorl
lods
ja
test
arpl
and
enter
pop
in
call
popf
xor
mov
sub
ds
dec
cltd
pop
mov
std
xor
push
sub
fstl
nop
into
cmp
std
mov
adc
push
loopne
je
clc
xlat
sbb
inc
dec
push
test
movsl
fbld
movsl
nop
push
inc
dec
jp
sbbb
jne
mov
push
out
pusha
ja
lods
push
pop
scas
adc
adc
fcomp
enter
lods
movsl
mov
fsubrp
addb
jb
xchg
out
filds
push
push
mov
jmp
xchg
stc
aam
mov
test
sub
inc
movsb
sahf
sbb
fiadds
fadds
mov
fucomi
jb
lahf
or
test
push
lock
lock
jle
ret
jl
mov
dec
cmp
test
mov
cmpsl
pop
add
inc
ret
mov
shrl
mov
ja
les
push
dec
xchg
xor
aam
sub
aaa
xchg
lea
nop
dec
scas
xor
aas
xchg
lods
ds
das
sbb
loopne
outsl
push
jno
lret
movsb
sbb
iret
xchg
push
sub
add
cmp
test
jp
adc
movsl
test
call
je
fdivrp
lahf
push
push
repz
out
adc
out
jle
notb
fwait
mov
sub
sub
mov
inc
hlt
icebp
es
xorb
out
xchg
xor
gs
icebp
adc
lods
into
lcall
sar
lret
les
push
add
mov
or
scas
push
jmp
xchg
or
push
out
jmp
aas
jae
dec
sti
mov
lods
sbb
in
mov
int3
std
dec
ja
cs
outsb
pop
aas
xchg
andl
call
push
repz
stos
pop
out
jge
sub
adc
std
push
imul
xor
imull
jl
cmpsb
pop
mov
push
lea
push
insb
sub
xchg
sub
xor
sub
mov
xchg
ds
rol
repnz
fwait
fwait
lods
je
inc
adc
repnz
je
fucom
orb
pop
xor
icebp
adc
lods
loopne
andl
or
movsl
shrb
xchg
bound
dec
jg
mov
mov
repz
insl
dec
lret
jo
mov
ss
mov
shl
out
sub
movsl
adc
das
cld
push
mov
pop
and
outsl
pop
push
loopne
sahf
xor
xlat
fucomi
jge
enter
outsb
pop
pop
dec
inc
mov
jne
rcrb
shrb
popa
inc
xchg
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
jl
mov
sbb
es
fimuls
subb
es
outsb
sub
jl
or
subb
dec
sti
mov
mov
push
lods
pushf
outsb
inc
mov
rorl
xor
or
lods
jle
xor
sbb
xchg
pop
dec
ror
inc
out
xor
cmp
stc
enter
xchg
xlat
sbb
dec
cmp
das
mov
mov
mov
or
movsb
or
xchg
lods
and
fnstcw
es
xchg
popf
imulb
ret
dec
xor
xchg
lahf
aaa
pop
pop
pop
mov
xor
pop
pop
xor
mov
loop
andb
mov
lds
add
cmp
mov
jle
pop
cmp
sbb
out
pop
sahf
or
dec
sub
jo
xor
xchg
out
movsb
js
clc
cmp
mov
push
std
sbb
push
ret
xor
mov
mov
jbe
repz
inc
inc
mov
test
paddb
mov
add
aas
stc
test
in
cwtl
in
out
cmpb
addr16
push
fadd
cld
leave
in
cwtl
or
rclb
bound
jge
iret
jecxz
sbb
test
xchg
ds
test
dec
jb
cmp
pop
sbb
sbb
test
dec
lock
das
jb
lods
insb
sbb
bound
mov
lret
popl
test
sub
xchg
fwait
sbb
push
jns
mov
cwtl
mov
cmc
xchg
pop
outsl
cmpsl
movsl
notl
in
in
dec
push
mov
mov
pop
cli
or
dec
pop
in
cmpsb
adc
out
cmp
orb
bswap
pop
sbb
fmuls
mov
mov
leave
push
iret
push
idiv
jle
movsl
push
loop
pop
jp
jmp
lcall
mov
pop
xchg
lea
xor
sbb
push
scas
int3
scas
or
xor
dec
std
mov
adc
push
dec
bound
lea
fwait
push
lock
fs
jmp
xchg
sbb
add
insb
bound
sbb
xchg
mov
xor
fisttps
jo
xchg
cmp
sbbb
pop
xchg
enter
notb
int3
xchg
push
rclb
mov
in
fcom
mov
dec
push
daa
in
inc
sub
mov
mov
or
fs
xchg
cmpsl
xchg
fisttpll
sub
push
sub
daa
push
or
mov
fdivrs
ljmp
xchg
mov
test
fisubl
or
dec
jns
movb
inc
outsl
gs
pop
int
mov
jecxz
add
pop
outsl
xchg
mov
xor
push
dec
insl
data16
outsl
clc
pusha
sbb
stc
in
outsl
call
dec
adc
outsl
pop
push
and
push
or
fistpl
lods
divb
xchg
adc
enter
xchg
mov
adc
insl
cwtl
sbb
cmpsb
ret
xchg
add
sbb
sub
shrl
pop
inc
enter
sahf
imul
ds
fsubrp
int
int3
or
mov
lea
nop
jl
dec
add
cltd
mov
das
call
adc
ret
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
mov
dec
jg
jmp
call
cmp
inc
sbb
loopne
roll
imul
movb
shl
mov
das
xchg
sti
stos
gs
test
cwtl
pop
or
pop
daa
pop
cmp
mov
xchg
add
xlat
mov
outsl
ss
fisubrs
lock
and
fnsave
push
int
cmp
adc
sbb
ljmp
sti
fwait
push
inc
ss
pop
push
arpl
xchg
add
push
mov
adc
jo
lret
jne
movsb
cmp
pusha
dec
pop
xchg
pop
or
inc
out
fiaddl
cld
cmp
dec
xchg
xor
inc
shl
mov
ss
mov
hlt
and
lock
stc
adc
inc
adcb
dec
jp
iret
adc
ss
sub
mov
ja
add
aas
lods
jmp
mov
iret
or
out
sbb
shrl
or
mov
dec
lods
push
shrl
and
lods
push
sub
xor
jne
clc
mov
inc
jnp
inc
or
sbb
adc
add
rcrb
sbb
jp
out
push
push
lods
test
adc
cmc
push
pusha
cmpsb
loopnew
mov
add
add
outsl
xor
cmp
ss
push
divb
pop
mov
jge
cmp
xchg
sub
mov
fxch
fisttpl
daa
les
testl
imul
inc
jnp
xlat
xchg
or
out
xchg
icebp
dec
or
cmp
icebp
inc
shrb
fisubs
sub
add
pop
test
add
in
movsb
mov
jnp
and
sub
mov
mov
lods
xor
imul
lods
add
loopne
xchg
movsb
pop
sub
enter
add
aaa
and
xor
add
push
fldenv
bnd
enter
stc
outsb
lahf
mov
adc
push
dec
mov
pushf
adc
sbb
cvtpi2ps
xor
mov
int3
cld
sbb
inc
sub
cld
xchg
int
or
pop
ljmp
add
lcall
aad
or
fisttps
movsb
stos
pop
popf
adc
pop
out
adc
push
cmp
mov
pop
out
outsb
pop
in
test
dec
es
mov
rcpps
mov
sub
hlt
dec
rorl
mov
ret
or
mov
repnz
mov
push
adc
push
mov
ss
fdivrl
jb
ss
xor
cmp
and
xlat
sub
sbb
sub
fisttpll
jle
shlb
scas
fnstcw
lock
bound
adc
push
or
xor
sbb
aas
call
sub
movups
cmp
in
lods
fmul
xorl
inc
std
inc
xchg
jmp
out
xchg
and
push
and
cmp
cwtl
jmp
mov
ficoms
rcl
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
into
popa
cmpsb
jnp
ljmp
mov
add
fcoml
in
leave
repnz
sbb
pop
sub
push
movsb
mov
jg
push
popf
int
mov
adcl
adc
push
lds
dec
mov
xchg
lcall
mov
addl
mov
das
addb
loop
cmp
jmp
lret
pop
sub
inc
int3
popf
rorb
xor
enter
fsubrl
aad
mov
cwtl
sub
cmp
adc
cld
adc
test
into
jne
hlt
adc
jmp
dec
mov
std
push
sbb
je
mov
mov
adc
mov
push
sub
adc
push
sbb
mov
push
pop
mov
or
push
mov
jl
scas
ljmp
ds
mov
push
fs
fstps
mov
mov
jecxz
out
popa
mov
xchg
scas
jo
andl
mov
sub
sub
cmpsb
and
push
aaa
movsl
outsb
sub
push
mov
mov
xor
xor
test
adc
and
fidivrl
jne
sbb
mov
pop
mov
push
in
cmp
add
jns
stos
cwtl
mov
sub
adc
dec
fadd
popf
or
mov
cmpsl
in
sbb
inc
ljmp
jno
pop
sahf
repz
cltd
cmp
xor
cmp
lahf
dec
jge
jmp
push
imul
push
lcall
ficoms
xchg
arpl
jl
push
lahf
jbe
daa
sub
push
inc
mov
and
movsb
repnz
das
mov
loopne
sub
cltd
rolb
jns
cmp
ja
and
mov
mov
lock
mov
pop
add
mov
mov
test
loop
inc
sub
ficompl
clc
sub
subl
push
roll
jge
push
lods
data16
daa
adc
outsb
cli
add
imul
or
mov
push
sbb
rcrb
outsl
push
xchg
mov
fidivs
fisttpl
or
push
add
xor
mov
je
std
add
iret
add
mov
aas
in
xchg
clc
in
pop
mov
dec
pop
xor
add
xor
mov
jge
xor
push
and
popa
or
pop
test
fdivs
mov
test
es
cmp
or
adc
subl
jmp
mov
mov
mov
lahf
pop
cmpsl
imul
pop
sub
xor
int
sbb
dec
shl
jp
sbbb
shlb
sub
leave
dec
pushl
sub
iret
popa
jmp
je
xor
insl
outsb
jnp
lock
int3
mov
jmp
xlat
movsl
std
mov
dec
clc
and
repnz
repnz
cltd
mov
fdivs
and
jmp
test
les
in
sub
pop
cmp
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
mov
or
test
sbb
cmpsb
dec
shrl
cwtl
push
mov
or
insl
fisubrs
sti
aas
mov
js
cmp
mov
dec
lods
mov
sahf
xor
jmp
lcall
mov
lds
bound
sub
popa
dec
push
lds
outsl
cltd
movsb
cmc
jns
enter
cmpsb
pop
stc
or
xor
stos
insb
mov
shrl
xchg
mov
fldl
cwtl
hlt
jmp
icebp
and
fmull
sbbl
dec
shrb
add
ljmp
adc
or
icebp
notb
cmp
inc
dec
jp
and
and
cmpsb
adc
scas
xchg
inc
and
cwtl
push
cmp
xchg
push
aam
adc
jnp
loopne
ficompl
jp
lods
addb
aad
into
adc
xchg
in
lods
out
jl
mov
push
fmuls
mov
inc
int3
mov
cmp
dec
popa
in
jae
int3
cld
dec
push
mov
hlt
adc
imul
mov
clc
cld
fdivl
test
sub
push
pop
movb
ror
jae
mov
pop
sub
icebp
inc
jb
sbb
pop
fistps
repnz
cld
cmp
repz
mov
or
sub
aas
insb
dec
push
sub
add
sbb
cli
daa
inc
aas
fisttpll
in
jb
mov
mov
loope
out
sbb
inc
sub
mov
mov
xor
sub
pop
mov
push
ret
adc
fstpl
out
out
lock
es
xor
stos
enter
jl
subb
dec
sbb
orb
aad
shlb
cmp
aam
pop
out
sahf
dec
lods
daa
sbb
dec
sub
sti
pop
inc
xchg
pop
in
inc
adc
jno
clc
in
fwait
push
inc
stos
lret
movsl
scas
sbb
jecxz
xor
inc
dec
push
jge
sbb
push
and
jge
add
pusha
push
cwtl
insl
push
popa
popa
push
jge
out
lea
push
lret
dec
adc
ret
mov
adc
pop
ret
bound
xchg
push
shl
fsubr
cli
lods
gs
xchg
adc
xchg
cld
cli
and
in
jbe
and
fildl
sbb
pop
pop
lods
outsb
rcll
pop
fistps
xor
xor
sub
psrld
jbe
mov
ljmp
test
sahf
pushf
enter
in
lret
hlt
lea
add
xchg
ret
out
fidivl
std
jbe
xor
add
cmc
fnsave
sti
dec
mov
adc
xchg
cmp
jle
push
sub
mov
push
and
cmp
dec
mov
xor
xchg
cs
andl
out
inc
mov
movl
negl
roll
fwait
push
cwtl
mov
cmp
jmp
test
sub
es
dec
xor
xor
pop
adc
in
sti
jmp
push
push
xor
sbb
xchg
xchg
sub
cmp
cmp
or
cs
rorb
dec
sbbb
in
hlt
xor
in
fidivrl
jecxz
sub
mov
cmp
fsts
leave
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
into
push
xlat
mov
and
sbb
test
lret
ret
cld
mov
sbb
sub
jecxz
jo
push
xchg
mov
xchg
jb
stc
fldt
xor
out
push
outsb
in
pop
fmuls
outsl
mov
addb
add
xchg
inc
cmp
mov
lods
repnz
mov
jmp
pushf
dec
shrl
in
andnps
pop
notl
adc
pop
test
or
sbb
cltd
mov
movsb
jbe
add
lret
aaa
shlb
pop
dec
rcl
cmp
xor
cwtd
jns
cltd
mov
lahf
les
clc
jno
jae
and
xchg
fiaddl
cmpsb
mov
movsb
pop
loopne
inc
xchg
mov
out
mov
push
push
mov
dec
hlt
dec
loope
rcr
dec
push
jae
pop
dec
jbe
icebp
lahf
xlat
daa
jl
inc
add
rcrl
insl
out
add
push
repz
mov
pop
pop
xchg
jno
pop
sub
bound
ljmp
and
add
nop
mov
cmpsb
add
cmp
out
adc
xchg
mov
dec
pop
xchg
xchg
add
jmp
mov
pusha
lahf
mov
jno
mov
inc
in
and
enter
mov
decb
scas
dec
out
scas
pop
ret
cmp
into
jp
mov
dec
cmp
sti
cmp
jmp
shrl
lcall
mov
in
dec
and
push
nop
in
out
pop
popf
in
xchg
xor
mov
push
dec
mov
xor
dec
sarl
loop
daa
out
lea
enter
mov
stos
test
insl
daa
je
xor
mov
and
xchg
add
fdivp
jmp
sub
cltd
jne
xchg
jnp,pn
mov
faddl
jg
and
in
jge
hlt
mov
dec
dec
inc
mov
cli
sbb
popf
adc
push
cmp
push
jb
cmpsb
jmp
sahf
pop
int
xor
inc
jp
sub
lret
lret
sbb
rcll
mov
loopne
jae
ficomps
outsb
frstor
or
inc
sbb
jg
cmp
sahf
mov
popa
rcrb
inc
pop
dec
and
pop
jne
data16
cli
pushf
cmp
pop
xchg
in
mov
fwait
test
mov
adcl
adcb
mov
pop
inc
push
adc
adc
cmp
inc
shrl
fldl
jo
mov
movsb
push
fidivl
xchg
sbb
orb
in
push
inc
pop
leave
andl
xchg
xchg
lods
in
dec
outsb
jmp
push
mov
hlt
jl
mov
and
mov
adc
aas
pop
push
fwait
ss
mov
pop
add
movsl
psubb
xor
loope
repz
push
in
rorl
lea
sti
cmpsl
les
jmp
and
in
xor
mov
or
in
shr
adcb
add
ret
pop
cld
add
adcl
sbb
push
push
dec
gs
jb
fwait
enter
push
mov
cli
sahf
into
and
or
lcall
xor
or
pop
pop
clc
xor
out
xor
mov
andb
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
jmp
push
sbb
adc
sbb
sbb
sub
mov
push
imul
scas
jnp
jne
lcall
or
push
push
nop
sub
xor
pop
icebp
mov
loop
dec
test
shll
or
lods
cmp
loopne
pop
sbb
and
fsubs
push
xlat
sub
mov
lret
in
inc
or
push
inc
inc
push
test
or
dec
cwtl
adc
pop
xchg
adc
dec
shlb
adc
sbb
in
sbb
cmp
add
mov
dec
test
cs
xor
mov
movups
addr16
xor
sbb
and
add
mov
xor
adcl
dec
sub
pop
pop
mov
stos
xchg
test
push
pop
sub
sti
fcomps
dec
stc
xchg
add
cltd
dec
cmpsl
mov
sbb
aas
mov
rcrl
xchg
mov
and
sub
push
outsb
pop
xor
inc
loope
faddl
xor
stos
stc
cmp
push
cmp
imull
and
xor
mov
jp
icebp
pushf
orb
inc
lret
mov
push
jb
dec
hlt
stos
daa
jl
xchg
sbb
nop
outsl
lods
push
push
jns
aad
dec
loop
add
pop
push
mov
mov
sub
jmp
repnz
cmpb
ja
testb
sbb
sbb
std
jns
add
add
les
je
jecxz
repnz
ss
sub
ljmpw
int3
dec
xchg
sub
cld
insl
and
loopne
lret
inc
push
sbb
pop
sbb
sarb
hlt
push
mov
add
xchg
insb
into
and
enter
stc
arpl
jl
adc
jne
in
fnstcw
test
pop
xlat
or
adc
xor
or
bound
pop
insb
xor
lcall
push
dec
rep
pop
sub
insb
push
lcall
xor
je
dec
sar
stc
movsl
outsb
mov
mov
pop
test
sbb
dec
mov
das
cwtl
cmp
std
and
das
adc
imul
mov
push
sahf
mov
cmpsb
mov
xor
dec
mov
xchg
mov
and
cmp
mov
xchg
cltd
mov
bound
scas
push
into
rolb
daa
mov
inc
das
and
push
push
mov
das
cmpsb
xor
xchg
ja
add
lock
inc
hlt
mov
xorb
addr16
dec
popa
sti
push
icebp
pop
inc
and
pop
ror
repz
mov
xchg
push
sbb
lods
insl
jns
push
xor
leave
or
mov
mov
xor
push
in
mov
pop
push
das
frstor
lcall
dec
xchg
dec
pop
sti
ds
lock
xor
loopne
fmull
aaa
pop
pop
pop
push
stos
push
cmp
lea
fucomi
sub
cmp
xchg
push
aad
dec
ss
es
in
mov
stc
leave
scas
fsubrs
xor
and
fsub
mov
pop
into
subl
icebp
imul
cli
and
sub
cmp
mov
add
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
or
sbb
adc
sbb
pushf
adc
push
jno
or
sbb
xor
stos
in
or
sahf
sarb
sbb
mov
hlt
leave
std
aaa
dec
jno
sub
inc
movsb
mov
js
cltd
pop
test
out
pop
push
cld
jo
insl
push
lods
popf
stos
mov
or
lds
sbb
jge
cmp
mov
adc
int3
in
cwtl
pop
popf
fwait
adc
adc
or
xchg
jp
push
mov
lods
mov
lcall
movsb
dec
int
ret
imul
lock
dec
shl
gs
addb
negb
sahf
arpl
jmp
out
mov
sarl
in
push
add
ja
and
test
cmp
syscall
push
cmovs
stos
xchg
inc
lea
adc
stos
mov
aad
adc
ret
fsubr
cltd
stc
ds
add
dec
mov
xchg
mov
test
cmp
repz
jns
jb
push
dec
pushf
sbb
sbb
call
bound
adc
or
inc
cltd
adc
push
push
pop
or
mov
pusha
or
test
int3
inc
dec
cmpsl
ret
out
hlt
test
std
insb
je
mov
push
push
add
xchg
jle
lcall
push
repnz
sbb
arpl
ja
pop
out
dec
movsl
in
loopne
test
sbb
test
add
mov
int3
sbb
idivb
roll
jb
pop
int3
loope
push
into
xor
sub
jge
jle
push
cmp
iret
dec
push
scas
leave
or
xor
push
sbb
paddw
lock
xchg
rorl
adc
push
mov
inc
or
xchg
adc
add
and
sahf
mov
fnstcw
lret
bound
and
sub
xor
pop
and
notrack
int
dec
aam
add
mov
lods
lret
mov
ret
or
push
cmp
add
pop
mov
aas
js
push
or
jb
icebp
sub
daa
cltd
sub
xchg
adc
ret
dec
loopne
call
fcmovne
sub
dec
sti
ja
and
push
mov
add
mov
sub
pop
call
add
jle
dec
sub
pop
cli
jg
xor
xchg
jg
jmp
xchg
icebp
inc
cld
stos
jp
dec
xchg
out
xor
int
mov
push
xchg
or
faddp
mov
clc
and
xor
pushf
jno
lods
add
cltd
rol
dec
adc
cs
sbbl
push
js
adcl
adc
mov
pop
rorb
cmp
lret
sub
cmp
mov
negl
std
fidivrl
pop
rcr
rol
push
fisubrl
out
pop
push
shl
push
mov
fimull
test
sbb
pop
outsb
out
mov
fimull
ljmp
xchg
dec
test
mov
mov
int
idivb
test
inc
clc
out
push
inc
das
stc
pop
add
inc
iret
icebp
dec
cmp
dec
out
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
dec
xchg
movsl
mov
and
sbb
mov
loope,pt
sbb
mov
xchg
iret
aas
addb
nop
mov
xchg
cld
push
sub
xor
les
pop
inc
cmp
jae
nop
ret
in
scas
jno
pop
popf
lahf
mov
push
sub
xchg
fildll
pop
inc
sub
push
stos
scas
cmp
aad
shl
iret
out
inc
mov
mov
fcoml
sub
dec
add
inc
out
mov
bound
mov
stos
aas
xorb
push
cltd
aaa
pop
sbb
lods
dec
dec
mov
and
inc
arpl
cli
push
lahf
fmuls
pop
insb
xor
adc
ds
dec
arpl
xor
xchg
loope
cmp
push
movsb
xchg
mov
lds
xor
dec
outsb
or
adc
imul
shrl
pushf
fisubs
sbb
cmpsb
pusha
adc
add
cs
adc
arpl
push
loop
ds
sbb
sbb
into
mov
push
dec
call
in
sbb
push
inc
pop
jne
aas
mov
pop
popf
enter
xchg
lret
mov
push
dec
xchg
outsl
or
fucomip
lret
je
dec
dec
mov
movsl
dec
mov
mov
fldcw
fstl
sahf
jne
jnp
xor
jp
aam
xor
cmp
cwtl
adc
shl
in
inc
adc
xchg
das
adc
je
icebp
add
mov
mov
xchg
into
inc
push
in
pop
xchg
call
jnp
negb
sbb
out
cmpl
jmp
adc
dec
icebp
movl
adc
out
and
lcall
ljmp
mov
ret
jmp
lea
mov
inc
push
jecxz
shl
nop
push
push
insb
xchg
in
lret
dec
loope
adc
in
rcrb
xchg
adc
fisubrl
repz
fwait
aam
call
push
int
movsb
cmp
xor
daa
push
sbb
mov
mov
inc
xchg
cld
into
adc
pop
mov
mov
jge
dec
push
sub
test
mov
and
sbb
shr
add
arpl
je
jg
fisttpll
jnp
lock
aad
pop
movsb
cltd
adc
push
add
enter
xor
fidivrl
dec
dec
fldl
daa
orl
dec
cmp
ret
cmp
xchg
xchg
enter
mov
es
add
pusha
inc
adcb
jae
ljmp
jae
lret
insb
and
mov
into
push
iret
scas
push
inc
and
in
lds
fsubrs
addr16
sahf
jg
daa
xchg
cltd
lock
mov
jo
andb
ljmp
fidivrl
cmp
cmpsl
andb
loopne
mov
and
fldt
push
rclb
fimull
cmp
fiaddl
and
pop
dec
and
das
xchg
pop
and
daa
mov
les
sbb
ficoms
mov
js
in
or
in
adc
loopne
push
mov
inc
outsl
scas
adc
test
dec
jns
cmp
inc
push
addl
movsl
test
pop
aaa
cmp
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
pop
push
cli
mov
and
sbb
imul
int
adc
je
jecxz
test
test
sub
rcrb
mov
push
mov
sub
dec
sub
sub
xchg
dec
jns
ja
fidivl
sarl
repz
mov
and
inc
fildl
lea
lock
cs
ret
roll
test
daa
ret
test
lret
mov
mov
insl
sti
jae
mov
push
xchg
popf
outsl
mov
push
push
xchg
loop
mov
add
pop
in
jecxz
bnd
and
in
sbb
cltd
xchg
cmpsl
dec
or
lods
or
lahf
clc
movsl
add
cmp
sahf
jae
js
loopne
test
and
sub
push
in
int
mov
out
pop
mov
inc
xchg
jecxz
sbb
jo
js
testb
cmp
lahf
push
pushf
sbb
mov
daa
adc
scas
dec
aad
movsl
pop
xchg
sub
pusha
test
pop
fwait
ljmp
jecxz
sarb
ja
add
sahf
pop
std
and
insl
dec
pop
sbb
jp
or
stos
add
push
push
xchg
adc
stos
mov
and
or
jnp
pop
mov
jne
xor
dec
cmp
scas
adc
mov
lock
jno
outsb
or
xchg
rolb
or
cmp
and
aas
fisubrl
ljmp
and
mull
cli
jmp
and
cmp
lret
mov
pop
rol
cmpsl
shl
pop
inc
cli
xchg
je
push
in
hlt
xor
inc
push
loopne
outsl
inc
je
jecxz
adc
fiadds
les
xchg
repnz
mov
stos
inc
add
scas
ss
jo
cmp
jb
movsb
or
jmp
inc
inc
int3
ficompl
inc
lret
out
addr16
mov
pop
or
pop
push
es
cmpsb
mov
inc
stos
je
xchg
sbb
fcoms
jnp
fildll
int3
in
or
out
push
cmp
insl
and
scas
out
fdiv
sbb
shlb
cmp
sahf
ror
add
dec
scas
leave
aaa
and
lea
push
mov
pusha
mov
hlt
push
push
mov
lret
push
dec
xor
std
push
mov
xor
add
sbb
inc
jns
fiaddl
xlat
sbb
pop
sub
stos
pop
jmp
lret
aad
cltd
nop
daa
outsl
bound
xor
mov
aas
and
lcall
ret
mov
in
ret
inc
or
lods
mov
pop
pusha
popa
jo
cmp
dec
imulb
loope
adc
out
mov
xor
loop
loopne
push
mov
inc
jns
out
mov
mov
movsb
xor
push
push
xor
xchg
mov
jb
lret
pop
cmp
jno
inc
aas
pop
xor
cltd
insl
hlt
int
jbe
enter
mov
push
mov
xchg
and
div
sbb
add
inc
mov
js
mov
jmp
cwtl
xchg
mov
int
cmp
jo
out
subb
test
sbb
lds
cwtl
insl
pop
fcompl
jge
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
lea
jg
sbb
adc
sbb
aam
lret
adc
shll
fstl
nop
div
int3
mov
xchg
push
adc
mov
adc
pop
repz
notl
iret
and
roll
sub
das
adc
adc
lret
sbbb
stos
dec
and
aam
inc
ret
ljmp
mov
mov
sub
xchg
push
push
inc
pop
mov
mov
pop
push
das
in
xorb
mov
sub
xchg
jmp
jp
ljmp
das
cmp
mov
aad
aas
in
xchg
insb
std
push
fdivs
leave
call
jle
insl
xchg
or
fldcw
jmp
daa
xchg
loopnew
lret
jp
loopne
mov
sahf
push
pop
mov
lods
shl
out
mov
lret
outsb
je
popf
je
lods
and
bound
sbb
popa
nop
dec
sti
mov
add
in
js
cmp
pop
cmp
ret
int
enter
push
into
clc
enter
ja
mov
xor
loope
fldt
daa
loop
stc
jl
sub
fwait
sbbl
lds
mov
orb
pop
shr
inc
inc
loopne
cmp
cmp
mov
push
cli
jae
cmc
idivl
das
fisubl
cltd
sahf
xchg
cs
leave
adcb
out
pop
pop
jecxz
ljmp
push
pop
daa
mov
div
jmp
inc
pop
jns
testb
scas
es
inc
sbb
aaa
out
dec
jbe
mov
mov
sbb
in
push
mov
cmp
mov
ret
cmp
popf
push
mov
dec
jne
add
fwait
mov
js
xchg
or
repz
aam
iret
dec
jmp
jbe
xor
pop
hlt
jbe
outsl
in
and
jmp
loop
ljmp
mov
jp
mov
jecxz
mov
dec
fisubl
pop
push
cld
mov
lret
shr
aas
pop
push
inc
add
cs
jo
xchg
clc
enter
aam
jo
mov
neg
hlt
mov
insb
nop
jg
fidivrl
movsl
push
lahf
mov
sbb
xchg
sarb
mov
fs
popa
sbb
jnp
loop
xor
or
mov
sub
hlt
je
pop
add
out
daa
dec
ss
jl
pop
and
scas
cmp
xchg
mov
arpl
in
insl
arpl
and
sub
insl
popf
call
mov
sbb
dec
sub
stos
popa
add
les
aaa
or
bound
lcall
lods
cli
sub
add
jo
dec
jp
mov
adc
mov
xchg
or
jbe
popl
lahf
lret
in
cld
cmpsl
jae
scas
and
pop
cli
push
dec
popa
jge
mov
dec
das
arpl
mov
ret
xor
dec
adc
pop
loopne
jl
movsl
scas
mov
cltd
enter
or
and
test
inc
int3
jae
stc
cmc
jae
and
out
imul
shrl
lret
out
sub
or
in
pop
test
loopne
push
bound
push
subb
ljmp
in
sbb
jne
jle
notb
mov
xor
sti
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
mov
jns
sbb
adc
sbb
cmp
mov
cmp
jne
mov
add
cmovge
rcl
sub
lods
dec
push
dec
repz
lcall
lret
mov
aam
pop
lret
mov
inc
mov
mov
jns
cltd
fwait
xchg
mov
test
push
mov
dec
lret
lods
sbb
push
lock
imul
imull
add
lea
outsb
xor
inc
xchg
iret
mov
bound
adc
es
mov
insb
leave
push
pop
pop
daa
sbb
cmp
ret
inc
xlat
sub
inc
cltd
xchg
jl
jmp
stc
adc
jnp
loop
ret
jle
call
je
jno
jae
imul
push
in
cmpsb
cmp
inc
das
jne
in
or
popfw
lods
aaa
and
mov
dec
push
push
mov
insl
add
adc
pop
mov
mov
or
and
scas
pop
inc
add
test
in
and
xchg
idivb
pop
dec
push
jae
pushf
stos
aad
pop
icebp
test
ds
mov
push
xlat
sbb
call
jno
stos
int
pop
and
dec
jae
sbb
enter
out
daa
mov
rorb
loope
pop
inc
pop
jne
xor
adc
imul
push
insl
fisubs
cmp
out
sub
sbb
arpl
rorl
into
out
mov
movsl
mov
sub
mov
mov
pop
push
push
jmp
fmull
xchg
ja
loopne
sub
and
jo
fwait
arpl
inc
stos
push
daa
sub
adc
mov
mov
jne
pop
addr16
push
pop
fnstsw
imul
pop
xchg
inc
aas
ljmp
icebp
pusha
cmc
iret
movsl
je
out
push
das
pusha
inc
pusha
adc
outsl
scas
iret
lea
mov
movhps
mov
gs
addr16
cmp
test
fists
mov
mov
xor
shlb
xchg
das
adc
rclb
sbb
or
jp
push
mov
inc
insl
int3
sub
dec
and
mov
cmpb
pop
push
jo
jle
or
xchg
lea
xchg
adc
xchg
aas
inc
mov
or
cmpsb
cmp
jp
jbe
test
je
jmp
push
out
aad
repz
movsb
ror
hlt
js
sub
stos
mov
dec
and
adc
ret
sub
loop
adc
data16
sub
iret
cmp
adc
pop
loope
aas
adc
pop
cmp
in
sbbl
push
lahf
and
cmpsb
test
lock
in
adc
adc
outsb
aam
repnz
adc
int3
sub
test
push
add
cld
jne
cwtl
or
jb
mov
or
jns
push
imul
cmp
cmpsl
xchg
out
sub
pop
push
lods
jb
xchg
sbb
adc
adc
int3
mov
mov
pusha
fiaddl
dec
pop
adc
mov
fbld
inc
lods
sbbl
cmc
je,pn
add
or
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
icebp
pop
jle
jno
sbb
adc
sbb
cmp
xor
cmpl
mov
jns
test
push
and
pushf
mov
std
and
push
push
inc
outsb
mov
dec
inc
test
lods
xchg
mov
test
outsl
repz
cwtl
outsb
sti
movsb
jmp
leave
aas
out
xchg
push
xchg
test
inc
sbb
dec
or
sub
arpl
popf
cmp
sbb
cmp
pop
push
les
or
out
stc
nop
sbb
mov
nop
jne
mov
xchg
aaa
inc
stos
orl
mov
cmp
xchg
inc
call
xor
mov
or
mov
mov
stos
repnz
bound
adc
lret
into
jb
cmp
sbb
mov
push
test
xchg
push
mov
rolb
icebp
and
rcll
pop
sub
pusha
outsl
divb
aaa
mov
jne
popa
dec
mov
out
loop
push
sbb
popf
xlat
imul
sahf
pop
cmp
mov
bound
imul
imul
pop
push
pop
inc
xor
enter
push
call
gs
stc
icebp
push
mov
mov
cmp
iret
push
fsubs
push
mov
adcb
xor
enter
scas
mov
pop
repnz
and
cmp
mov
lods
xchg
clc
stos
push
incb
xor
add
jl
jbe
aas
sub
xchg
insb
ds
movsl
xor
pop
pop
pop
push
adc
pop
xor
iret
jge
xor
pop
pop
mov
fistpl
jmp
xor
mov
dec
and
repnz
out
add
xor
pusha
mov
ret
pop
adc
out
insb
imul
add
xchg
pop
bound
mov
xchg
push
mov
in
gs
adc
aad
jb
ds
xchg
jb
out
mov
jmp
lret
je
jp
mov
fcoml
adc
mov
ret
loopne
push
xor
jg
push
pop
test
xchg
cmp
sbb
into
imul
cmpsb
xlat
subb
mov
inc
ret
jae
xchg
das
mov
push
mov
ss
loopne
cmp
ret
xor
jge
jbe
sbb
sbb
mov
test
loope
or
imul
add
sbb
das
adc
daa
sub
inc
or
mov
jns
or
adc
loopne
les
mov
out
and
scas
gs
stos
addl
mov
mov
jecxz
loope
jae
leave
lods
push
push
add
das
in
sbb
and
inc
orl
fildll
ficompl
lret
cld
repz
inc
int3
dec
out
adc
lret
sbbl
xor
inc
cli
js
mov
test
insl
insb
push
lea
aad
inc
mov
das
negb
mov
and
mov
jmp
push
lcall
dec
cld
sbb
cmpsb
inc
cmp
and
leave
pmaxub
lcall
arpl
add
adc
pop
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
nop
outsl
mov
imul
and
sbb
mov
ja
sbb
push
and
ret
mov
pop
in
inc
mov
dec
addl
out
xor
cmp
push
repz
xchg
lret
popl
add
pop
mov
xchg
mov
idiv
mov
ret
dec
mov
outsb
movsl
sbb
cmpsl
sbb
xchg
xor
push
ljmp
push
arpl
xchg
cmc
je
dec
ficompl
pop
mov
xchg
cmpsl
push
xor
testl
adc
std
sub
nop
adcb
inc
xchg
dec
leave
dec
and
cmp
movl
inc
nop
push
out
jb
or
add
fnstcw
out
js
outsl
fiadds
or
xchg
jmp
push
js
xor
out
neg
mov
push
xchg
scas
mov
mov
out
push
sti
jmp
rcll
and
push
jnp
rcrl
mov
mov
and
cmp
stos
push
sbb
push
bound
xor
sbb
sbb
jg
test
or
divb
xchg
add
fidivrs
rcll
enter
adc
mov
nop
lcall
imul
push
or
sbb
push
sarl
jp
push
cmp
arpl
sbb
dec
fs
add
stos
pusha
xlat
ret
repnz
cmpsl
in
call
mov
xchg
mov
dec
fldl
add
and
mov
lods
and
outsb
jg
int3
adc
clc
lret
fists
shl
mov
mov
add
pop
inc
addr16
pop
repz
imul
in
add
mov
mov
in
sbb
imul
inc
test
mov
fcoml
rcll
cltd
inc
dec
push
add
popa
sub
or
fisubl
dec
and
lock
and
mov
pop
dec
inc
jmp
popf
insb
clc
add
or
outsb
repz
pop
testl
out
fistpll
outsl
sub
dec
in
push
sbb
dec
insb
and
scas
js
sub
sub
or
mov
xchg
push
mov
pop
aaa
pop
xor
jb
xchg
addr16
add
jnp
xchg
dec
jno
push
daa
stc
outsb
or
sbb
rcr
out
ljmp
test
sti
sub
out
pop
pop
out
push
lock
lret
stos
rorl
dec
mov
inc
xor
fstps
scas
adc
std
or
pop
mov
mov
outsl
test
pop
mov
in
or
dec
pusha
push
pop
jecxz
inc
ja
sbb
cmp
mov
addb
nop
pop
pusha
sahf
dec
mov
mov
adc
mov
inc
shlb
scas
inc
jmp
pop
cmp
lret
data16
sub
jge
xchg
cmc
cmp
and
inc
push
push
int3
icebp
fidivrs
pop
inc
mov
sbbl
mov
pop
int3
leave
cli
data16
adc
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
dec
jle
mov
arpl
sbb
adc
sbb
pop
xchg
int3
cmp
mov
or
repnz
and
adc
add
dec
sub
push
cmp
adc
mov
stc
scas
push
imul
mov
aaa
jp
outsb
mov
cltd
out
lods
fistpll
je
notb
out
inc
shl
hlt
add
mov
jnp
dec
rcl
clc
sahf
aaa
jecxz
mov
gs
insb
rol
stos
cmovp
xor
mov
pop
ds
pop
xchg
xchg
test
cs
rorl
dec
fwait
js
cli
pop
repnz
pushf
ljmp
jo
popa
int3
sbb
mov
test
scas
xchg
in
aas
scas
sahf
daa
jnp
movsb
imul
arpl
jbe
dec
xor
mov
insb
repz
cli
sti
lret
pushf
sbb
fdivrl
loop
addb
mov
insl
and
sbb
int
mov
decl
insb
inc
dec
pop
dec
out
pop
cmpsl
jb
jle
je
ret
or
iret
nop
fisttpl
adc
fs
xchg
ljmp
out
xor
and
pop
sahf
inc
ss
hlt
adc
xor
dec
stos
lock
adc
cmp
es
mov
mov
dec
pop
xor
xor
hlt
inc
xor
inc
and
jb
outsl
test
ret
out
jns
push
pop
add
xchg
mov
int
inc
adc
popa
mov
cmp
push
mov
jbe
outsb
pop
addr16
aam
mov
and
sbb
arpl
in
les
clc
xor
or
ret
or
jecxz
push
xor
dec
stos
add
cmpsb
pop
das
jo
gs
pop
ss
imul
adc
adc
dec
addr16
nop
inc
imul
test
push
lahf
xchg
mov
dec
pusha
inc
xchg
mov
cmc
stos
cli
dec
in
je
es
das
data16
jle
push
or
dec
out
daa
jg
cmp
xor
fsubrp
mov
cmp
inc
xchg
mov
push
pushf
jl
jnp
add
cs
jb
jl
sbbb
test
popa
pushf
ds
fisttpll
mov
lds
jle
repz
repnz
or
orl
mov
push
gs
pop
sub
dec
pop
stos
mov
mov
mov
mov
or
push
movl
dec
sarb
fidivs
daa
fdivrl
push
mov
shll
lock
incb
inc
xchg
mov
outsb
stc
in
in
or
xchg
pusha
fsts
in
mov
push
mov
arpl
fldt
mov
enter
out
mov
xchg
dec
and
cmpsl
mov
lods
test
or
test
frstor
cwtl
cmp
icebp
push
dec
das
call
lds
sbb
pop
incb
sar
loope
into
pushf
mov
and
or
rol
leave
inc
jo
cmp
pop
mov
mov
adc
xchg
outsl
ss
push
xlat
lahf
or
popa
leave
lea
pushf
ss
popf
or
data16
std
sti
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
mov
mov
push
sbb
adc
sbb
push
fisttps
mov
ja
stc
or
cli
jmp
das
out
jns
shrb
jge
mov
mov
mov
mov
pop
sbb
aaa
push
movsb
jno
pop
mov
cs
cli
imul
adc
testl
rol
mov
mov
cmp
mov
sbb
pop
push
sub
xor
and
out
pop
cwtl
outsl
mov
inc
sbb
aaa
xlat
pop
inc
aad
pop
aam
fs
adc
sub
mov
sub
outsl
lds
sbb
lods
xchg
aam
pushf
hlt
add
jl
push
daa
aam
incl
add
out
scas
dec
xchg
mov
xor
movsb
pushf
loopne
mov
pop
outsb
jne
icebp
addr16
imul
out
and
negb
jns
ret
push
jge
sarb
fldenv
push
cmp
inc
sbb
pop
cmp
jae
xor
inc
xchg
lahf
test
pop
add
sbb
nop
sub
push
inc
xchg
sub
jp
sub
sarb
dec
mov
or
and
lock
popf
out
inc
std
data16
shl
inc
fdivrl
and
int
test
pop
mov
repz
adc
sbb
loopne
rcll
js
popa
inc
mov
add
xchg
mov
sbb
cmp
push
lods
mov
inc
pop
mov
cld
dec
mov
lcall
pop
mov
sbb
out
or
test
sub
and
and
or
pop
in
in
sub
rorb
aad
sarb
mov
dec
push
fs
arpl
push
sti
sbb
aas
push
adc
dec
xor
jmp
pusha
mov
loope
push
mov
mov
cld
mov
mov
clc
mov
fstpt
push
shrl
sarb
pop
es
jl
lret
lock
adcl
dec
dec
sti
roll
adc
and
pop
je
pusha
jb
dec
sub
out
pop
in
xor
jno
rcll
add
add
cs
mov
repnz
stos
fsubl
fnstsw
jb
rcrl
mov
push
sub
outsb
dec
adc
xchg
in
jl
push
in
pop
clc
and
xlat
ljmp
pusha
and
fstpt
pushf
and
test
or
test
adc
cld
jne
and
fwait
scas
adc
xor
push
mov
imul
or
mov
stos
pop
sub
push
aad
aad
out
or
rcll
xchg
daa
mov
imul
xlat
shrb
cwtl
cmp
mov
fdivrs
jl
cmp
adc
pop
std
gs
aad
clc
cmp
rcll
mov
popa
cli
ljmp
in
push
out
sar
dec
push
das
push
fs
adc
inc
xor
je
bound
scas
mov
lret
add
dec
divb
sahf
and
mov
lret
ret
add
xor
push
rcr
cmp
rep
mov
xor
loop
ljmp
fwait
or
adc
or
ficomps
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
cmp
push
sbb
adc
sbb
lret
sbb
test
int
pop
or
test
aaa
cmp
mov
nop
jne
pop
in
dec
pop
sub
push
cmp
lods
xor
sub
test
fistpl
popa
dec
add
mov
shll
push
dec
fsubr
cmp
xor
inc
icebp
or
nop
xchg
ret
hlt
andl
stos
xchg
pop
int
stc
jl
in
icebp
inc
loope
inc
rorb
testb
imul
aam
shr
jmp
lods
adc
push
test
pushf
sub
jns
push
adc
mov
test
and
sbb
jo
popa
into
jae
jl
xchg
movsb
int3
sbb
push
inc
outsb
push
ljmp
les
fimuls
std
sbb
cmp
dec
push
or
repz
movsl
jne
mov
leave
sbb
test
ret
and
fisubrs
outsb
shrl
and
sub
adc
imul
lcall
arpl
lods
lar
xchg
xchg
call
sbb
mov
fcomi
dec
ret
pop
out
cld
xor
cmc
pop
popa
outsl
aaa
je
sub
je
outsb
jle
sbb
test
mov
std
in
outsl
fwait
push
mov
jbe
fsubs
ret
stos
adc
jg
sub
pop
mov
hlt
nop
imul
mov
in
movsl
movsl
in
xor
cld
xchg
push
sub
das
sbb
mov
shrb
scas
inc
add
fdivrs
lods
shll
loopne
jle
subb
pop
cmpsl
pusha
mov
fwait
addr16
mov
jmp
data16
cmp
dec
dec
adc
aam
fiaddl
mov
add
stc
arpl
outsb
shll
mov
sarb
cmp
cmpsb
pushf
xchg
mov
gs
cmp
stos
sysenter
out
jbe
push
mov
roll
add
mov
div
loope
rcll
in
popf
scas
mov
xor
xor
jecxz
push
pop
imul
std
test
cmc
cmp
popa
in
mov
mov
rclb
or
call
adc
sbb
pusha
iret
aad
sbb
xchg
sbb
outsl
inc
pop
push
push
and
inc
pop
bound
and
cmpsl
fwait
mov
dec
es
test
sub
jo
pop
mov
paddb
es
insb
lcall
imul
jno
sahf
xchg
jo
fnstsw
cmp
and
sub
mov
mov
cmp
push
in
cltd
cltd
cmp
fildl
jl
pop
or
in
fsts
mov
mov
sbb
arpl
mov
bswap
iret
popf
shlb
movsb
sub
jae
loopne
or
insb
test
not
sub
xchg
mov
add
or
icebp
xchg
inc
imulb
add
lds
ljmp
imul
sub
inc
and
jle
sbb
pushf
mov
xor
rorl
ss
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
adc
and
sbb
jns
push
sub
mov
mov
out
mov
aaa
aad
mov
cwtl
jge
lret
pushf
jbe
push
ret
sbbb
lahf
adc
mov
mov
mov
mov
stos
arpl
shrl
loope,pt
inc
adc
add
xorb
mov
adc
xorl
add
xor
cmp
or
dec
mov
dec
call
or
cmc
aam
cmp
cld
push
scas
aad
push
sti
in
dec
int
mov
arpl
in
mov
pop
mov
loop
xchg
or
enter
push
push
jno
mov
insb
repnz
loop
inc
int3
sbb
int3
es
scas
mov
ljmp
push
addr16
push
test
mov
mov
stos
pop
out
mov
and
lcall
test
pop
fistl
xchg
pop
inc
mov
ret
leave
addb
mov
cmp
fwait
jmp
sahf
loopne
imul
ss
mov
mov
mov
mov
cmpsb
shlb
or
jmp
adc
push
cmpsl
sub
mov
mov
dec
lock
jg
test
mov
add
cmp
addr16
push
inc
leave
dec
fmul
lods
inc
jl
std
and
add
cwtl
mov
sbb
push
mov
mov
in
outsl
mov
push
sbb
mov
shlb
shrl
fimull
scas
add
scas
mov
adc
push
ljmp
mov
and
cmp
sbb
or
lcall
pop
lret
xor
inc
int
mov
out
xchg
orb
cmp
lods
pop
fcomps
lahf
andl
fldl
and
pop
arpl
jecxz
mov
and
dec
pop
mov
out
outsb
and
test
aam
cmp
test
imull
or
stos
and
jne
movsl
insl
scas
xor
mov
pop
xor
mov
or
test
test
jo
inc
dec
push
shrl
sub
in
in
repnz
push
jle
mov
mov
xlat
jl
fisttps
xor
js
mov
inc
mov
jns
and
fwait
movsl
adc
jbe
sbb
jecxz
inc
lret
mov
jge
ret
orb
cmp
negb
mov
int
fiaddl
lret
pushf
add
adc
inc
or
in
sbb
gs
pop
jo
jno
incl
pushf
mov
push
mov
cmp
xchg
into
sbb
aaa
mov
and
sar
shlb
or
cmp
mov
mov
cld
mov
or
lcall
jno
pop
add
jle
bswap
stos
xchg
push
js
fdivl
sbb
or
lods
les
orl
cwtl
subl
call
das
rcll
pop
pop
xchg
cmp
xchg
cmp
or
das
inc
lea
mov
int3
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
add
push
sbb
adc
sbb
lods
call
jl
in
push
cmp
or
popf
fmul
lcall
loop
inc
mov
pop
cmp
mov
mull
cltd
insl
mov
stos
in
and
inc
cltd
in
cmc
mov
adc
jp
add
jmp
add
ja
dec
movsl
fcoml
xchg
cmp
movsb
push
sbb
or
mov
stos
mov
ljmp
std
movsl
ds
xor
mov
jg
push
mov
cmp
clc
cwtl
out
sub
mov
scas
mov
sbb
pop
push
stos
dec
pop
int3
imul
clc
into
pop
xchg
xchg
test
jbe
cld
idivl
push
outsb
dec
int3
and
mov
mov
pop
call
pop
call
cmpsb
clc
xor
fbstp
mov
xchg
inc
inc
sarl
stos
pop
xchg
sub
int
inc
loop
xchg
loop
sub
jns
loope
mov
cltd
sbb
lods
iret
stos
lods
push
test
std
mov
jno
vpsubsw
pop
xorb
pop
jp
adc
shll
insb
nop
add
stos
mov
es
repz
daa
cli
cmpsb
imul
stos
cmpsb
adc
inc
jbe
xorb
mov
in
pop
sbb
subb
mov
xor
fcmovnbe
dec
test
in
add
mov
mov
out
sub
xor
dec
stos
mov
clc
cmp
lcall
les
dec
insb
xchg
dec
imul
pop
xchg
cli
ror
dec
filds
sarb
js
dec
mov
in
aas
xor
xchg
fnstsw
dec
cmp
mov
mov
xor
xor
popf
mov
cmp
bound
lret
enter
inc
xlat
cmpsl
fs
mov
sbbl
rorb
mov
xor
test
and
jb
das
repz
cmpsl
push
dec
decb
daa
int
adc
faddl
mov
rcrl
cmp
adc
push
xchg
add
or
add
clc
or
add
cmp
pop
xor
int3
xor
popf
stos
lods
cmc
add
jae
icebp
dec
ret
push
ss
dec
int
jg
add
pushf
jne
add
decl
mov
sbb
pop
push
add
stc
push
dec
out
jl
or
pop
popf
pop
mov
nop
bound
inc
fucom
push
add
and
inc
and
out
fs
lds
inc
repz
sar
pop
xchg
jbe
shl
jp
imul
scas
into
xchg
sbbb
pushf
loope
inc
add
ret
outsl
pop
push
jge
cmp
movsl
or
or
xchg
jnp
jne
fsubs
dec
loope
int
mov
iret
pop
sbbb
and
fidivrs
xchg
xchg
jecxz
cmp
and
popa
and
mov
insb
adc
cli
shrl
js
into
movb
aas
mov
loope
push
fsubr
outsl
aam
ljmp
mov
jle
sub
cmp
mov
stos
push
mov
or
and
add
xchg
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
outsl
jmp
inc
addb
cmp
jo
out
int3
mov
xor
pop
mov
push
or
scas
add
cmc
fildll
enter
mov
rorb
push
jmp
jo
xlat
jg
hlt
mov
sub
cmp
movsl
mov
sub
cmp
lods
cmp
ss
es
jnp
jnp
push
and
jp
xchg
mov
push
xor
ror
enter
shrl
or
dec
mov
test
dec
fucomp
or
ficoms
scas
ret
xor
pop
or
mov
pop
lret
fldt
lods
rcl
add
in
mov
sub
inc
pop
cmp
sub
pushf
fistpll
jno
fstpt
cmp
inc
sbb
scas
sub
and
push
add
xchg
mov
das
add
mov
stos
xchg
iret
mov
out
jl
cmp
push
and
and
rcll
inc
int
inc
jecxz
inc
test
mov
test
xchg
fimull
ret
jns
in
fdivl
mov
mov
fsubs
insl
aad
cs
cli
pop
inc
pop
imul
mov
pop
pop
mov
xchg
dec
mov
sub
pushl
inc
fildl
cmpl
cmp
mov
outsb
mov
iret
fs
add
mov
ficompl
inc
xchg
add
pop
xchg
jbe
adc
loop
aaa
add
pop
push
sti
and
pop
fsincos
or
adc
scas
fdivrl
cmp
out
ret
adcb
lods
dec
in
cmpb
pop
inc
xor
mov
fnsave
push
jmp
jnp
mov
ja
scas
mov
or
push
mov
pop
inc
stos
pushf
sahf
xor
jb
leave
jecxz
out
adc
aaa
and
fists
push
mov
xchg
push
or
lock
dec
daa
pop
in
dec
aas
push
or
cmp
pop
sbb
and
dec
mov
test
push
mov
jecxz
lret
xor
fsts
call
mov
loopne
sbb
sti
movsb
in
or
addl
stos
jle
mov
popa
rorl
aam
cmpsl
jle
jnp
mov
pop
in
sub
aas
rorl
fimull
stos
and
mov
inc
loopne
cld
sarl
fisubrs
adc
mov
push
cmp
fistpl
scas
push
ret
sub
pop
xchg
nop
and
ss
jge
daa
enter
or
dec
fimull
sub
out
sub
inc
movsl
mov
lret
add
inc
shll
pop
scas
jl
adc
out
out
fwait
out
cmpsl
fdivrl
push
mov
icebp
sbb
jmp
lea
add
mov
sahf
push
mov
fadd
test
mov
xor
es
mov
das
shlb
out
pop
pop
pop
out
mov
adc
sub
and
fisubs
xor
in
add
adc
cmp
sbb
test
add
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
mov
and
sbb
shll
loope
push
in
shll
mov
dec
ss
orb
dec
popa
pop
jmp
aam
in
sbbl
jg
pop
jp
xlat
cmp
mov
js
sub
pop
sub
adc
pop
int3
mov
hlt
push
loopne
hlt
lock
push
int3
push
add
nop
add
outsl
cmc
fcmovnbe
mov
mov
fcompl
mov
dec
ret
sub
arpl
add
sub
mov
xchg
clc
jno
push
inc
shl
popa
cmp
add
movsl
outsb
adc
addr16
ficoml
jnp
lock
jb
mov
sub
mov
lock
mov
inc
notl
sbb
fs
jb
data16
sub
sarb
jl
les
sbb
and
xchg
sbb
sbb
add
push
outsl
lods
or
popa
fisubrs
xchg
lahf
mov
aaa
stos
mov
movl
inc
iret
xchg
inc
mov
push
cmp
fcomp
mov
icebp
arpl
outsb
lcall
add
mov
sub
xor
pop
and
jns
jg
fbstp
lods
jne
xchg
scas
jne
xor
mov
lock
inc
fiaddl
sub
mov
adc
mov
cmp
inc
gs
sbb
sbb
adc
mov
push
clc
lahf
repnz
cmp
int3
mov
cwtl
call
add
cwtl
enter
ss
arpl
inc
sti
xchg
mov
xor
cmp
jno
call
jnp
pop
mov
cmp
out
lret
jecxz
sbb
arpl
loope
popa
imul
sysret
fiadds
sbb
mov
hlt
les
popf
push
bound
fcomps
lea
mov
xor
lods
jae
test
mov
adc
cmpb
and
insb
sub
popa
call
sbb
unpcklps
mov
out
pop
mov
lahf
inc
and
xchg
and
or
push
push
les
jns
inc
lahf
mov
or
ljmp
xor
sub
mov
lahf
in
cmp
int
mov
fsubs
jle
mov
or
shl
jo
jmp
enter
dec
in
aaa
js
adc
rcll
and
and
out
dec
pop
imul
sar
adc
or
faddl
mov
pop
icebp
aaa
sub
mov
cmc
sub
mov
mov
cmp
aas
mov
iret
xchg
jnp
loop
paddb
adc
mov
cmpsl
cmpsb
lahf
divl
insb
and
sbb
xor
xor
pushf
mov
xor
dec
sub
enter
pop
ds
xchg
sub
jg
fadds
mov
mov
jo
add
arpl
push
orl
mov
push
orl
je
push
sbb
aaa
in
jmp
lods
sarb
mov
add
cld
or
lds
xchg
pop
dec
xor
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
push
pop
jo
xor
sbb
adc
sbb
add
sub
loop
cmp
hlt
push
jo
ret
in
fcoms
xor
std
or
jb
cmpsl
sbb
xchg
cmpsl
mov
jecxz
fs
push
sbb
cmp
test
xor
in
inc
fwait
push
aas
ds
pop
dec
cmpsb
ret
cmpsb
mov
and
adc
xor
fwait
sarl
jge
repz
aaa
mov
out
in
cmp
dec
adc
dec
and
cmp
fmul
pop
add
mov
loop
lret
and
fidivrl
pop
xchg
and
pop
push
sahf
pop
mov
insb
call
xchg
fnsave
jg
xchg
movsb
xor
add
pop
xchg
outsl
int
icebp
and
and
and
movsb
jl
aam
movsl
sbb
fmuls
test
and
sbb
sub
jns
pop
mov
or
cli
es
dec
xlat
add
std
mov
or
daa
xor
repz
fs
xor
jecxz
xchg
gs
mov
cmpsl
ja
in
xchg
xor
orb
mov
rol
cli
push
stc
insl
and
movb
lods
push
aaa
out
pop
ljmp
imul
push
lock
scas
dec
in
mov
es
shufps
cmp
pop
mov
cwtl
stos
xchg
mov
jl
imul
mov
std
mov
cwtl
outsb
push
cmp
adc
jge
popa
shl
mov
pop
test
movsl
lods
cmc
or
fwait
jb
push
sbb
lret
dec
lret
and
lahf
aaa
sub
inc
mov
jl,pt
inc
add
mov
and
sbb
mov
shlb
aaa
sub
pop
imul
into
rcr
mov
cmp
popa
cmp
frstor
push
sub
adc
daa
movb
mov
je
add
lods
and
test
pop
pusha
adc
rcl
clc
pop
out
push
cwtl
mov
ljmp
fldl
xchg
cmpl
pop
xchg
inc
xchg
fiadds
mov
cmpsl
xchg
outsb
add
jo
xor
jae
xchg
xchg
ljmp
pushf
and
scas
cmp
int
lea
popf
pushl
test
and
push
xchg
shrl
adc
dec
sarl
shr
test
pop
mov
enter
cwtl
pop
mov
pusha
sub
decl
sbb
xchg
mov
push
adc
daa
in
and
and
or
or
xchg
andl
pop
out
and
mov
jmp
lret
sub
cmp
mov
fistps
push
inc
pop
pop
mov
sbb
push
mov
jnp
data16
insl
inc
enter
xchg
adc
std
mov
cmp
sub
std
jl
xor
push
fisubs
add
sbb
stos
or
roll
js
notb
jp
sub
shl
jo
push
in
jp
out
adc
mov
pop
sub
inc
pop
jge
flds
push
fcmovnu
jns
add
or
push
test
inc
in
inc
mov
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
fstl
cli
sub
sbb
adc
sbb
subb
clc
sbb
jno
popf
cmp
push
mov
xlat
outsl
cli
push
fcmovnu
ljmp
rolb
xor
mov
movsl
stos
xchg
lcall
push
or
dec
test
jge
arpl
lret
mov
ja
in
jecxz
cmpsb
loope
cli
cmp
aaa
fdivl
out
stos
js
xchg
ds
dec
ss
mov
push
pushf
or
sub
cmpb
mov
add
pusha
mov
movsb
ljmp
iret
or
dec
inc
xchg
cwtl
lret
clc
or
shlb
adc
jb
sub
push
inc
xor
inc
push
ss
das
sbb
pop
nop
mov
insb
in
ret
sarl
pop
cltd
fistpll
cmc
mov
jnp
or
inc
jae
iret
or
insl
sbb
sahf
gs
mov
clc
in
arpl
mov
add
iret
mov
adc
int3
out
cltd
cmc
add
addr16
inc
int3
sub
cmp
cmp
pop
test
aad
std
lcall
imul
jmp
mov
mov
div
sub
sbb
inc
adc
jg
imul
test
pop
stc
sbb
push
ret
xchg
and
scas
popa
jp
push
fidivs
lds
in
dec
mov
add
rcll
jmp
push
push
and
insb
mov
in
xchg
and
repz
lods
xchg
out
fs
fst
mov
fbstp
ja
roll
and
jle
fidivrs
inc
es
shlb
jge
jecxz
lret
mov
adc
add
mov
push
std
sub
push
mov
mov
cli
adc
stc
adc
test
cmp
outsl
orl
lods
lds
scas
fisttpll
sub
mov
in
push
into
es
and
outsb
int3
adc
push
inc
jp
inc
dec
int
mov
sbb
outsb
idiv
gs
out
or
mov
fimuls
testl
test
mov
sub
test
cmp
add
cmp
aas
pusha
sbbb
jmp
jge
dec
dec
mov
and
stos
dec
add
pop
notb
inc
mov
push
into
mov
les
sbb
rcrl
push
ja
daa
mov
pop
inc
js
xchg
sbbl
mov
loope
cs
popl
push
rorb
lds
lahf
fisttpll
daa
leave
xchg
mul
hlt
jae
lret
ficoml
push
push
out
out
mov
outsb
cmpsb
sbb
testb
fwait
cltd
xchg
lods
aas
xlat
daa
mov
dec
dec
js
out
mov
or
insb
and
mov
mov
lret
push
xor
cmp
jle
sbb
mov
ss
and
mov
and
push
xchg
in
and
je
out
and
push
cmp
mov
xchg
dec
mov
pop
ljmp
push
test
gs
xchg
add
push
aaa
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
das
mov
and
sbb
shrl
pop
xchg
fdecstp
lods
pop
inc
and
pop
into
jle
cld
icebp
nop
push
incb
xor
sub
fisttpll
sahf
cmp
rorl
xor
dec
in
mov
movsb
test
rcll
notb
mov
mov
jnp
in
xlat
xor
hlt
or
mov
rcr
insb
shll
call
push
and
and
mov
cli
test
lods
insl
lea
sub
andb
cmc
mov
dec
int
inc
fs
add
mov
jle
lea
jecxz
jp
shl
aam
dec
xor
js,pn
cmp
mov
jmp
lea
mov
mov
jbe
push
inc
add
lahf
or
enter
scas
repnz
popa
loop
sbbb
dec
or
jmp
daa
lock
pop
cmp
jns
xchg
data16
fwait
jge
cmp
inc
lock
mov
clc
sub
ja
rorl
jno
add
loopne
cmp
or
loopne
ljmp
jbe
fnsave
stc
fdivl
fisubs
sub
cmp
and
cmp
push
xor
mov
mov
movsb
jne
or
in
ret
pop
inc
xchg
xlat
dec
mov
pusha
cld
scas
mov
add
cmp
mov
imulb
jecxz
scas
rcrb
pusha
pop
shl
arpl
ja
dec
ss
scas
and
xlat
lahf
push
lock
call
ficompl
je
jge
jbe
icebp
sti
sbb
movsl
xor
or
mov
popf
out
nop
call
inc
aad
mov
insl
push
mov
or
outsb
inc
negl
lods
inc
add
mov
cmc
andb
rcll
adc
adc
dec
inc
dec
push
sub
cmp
push
sub
outsb
aad
push
adc
xor
scas
mov
mov
jmp
jo
lret
jmp
les
sbb
dec
icebp
sub
cmp
xor
mov
adc
and
and
test
fdivrs
jbe,pt
int3
sbb
fsubs
mov
sbb
pop
pop
and
out
aam
leave
add
or
fldenv
lock
mov
and
leave
push
mov
lea
jo
mov
pop
shr
inc
divb
inc
adc
aad
jmp
mov
push
cmpsb
and
or
test
jmp
jb
cmp
packssdw
inc
and
push
jne
insb
cli
mov
or
pop
push
mov
les
mov
shlb
pop
mov
pop
mov
testw
mov
pop
call
jecxz
lods
pop
bound
out
sti
clc
cmp
in
rcll
ljmp
repnz
mov
jns
dec
jns
inc
xor
pop
int3
popf
call
movsb
sbb
lea
xlat
cltd
push
mov
push
pop
cmp
add
pop
jl
mov
dec
mov
ror
out
xor
jl
sbb
data16
test
adc
decl
pushl
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
or
dec
jle
sbb
sbb
scas
je
not
mov
lret
dec
sti
stos
stos
imul
adc
shrl
cmp
imul
pop
clc
cmp
shl
or
test
cmp
and
xor
sbb
mov
mov
fidivl
aaa
in
sarl
int
lock
and
in
dec
lods
test
sbb
and
sub
loope
sbb
mov
adc
ja
inc
test
or
adc
adcl
es
lods
add
lahf
dec
jns
scas
push
pop
mov
pop
adc
pop
xchg
mov
lret
ljmp
mov
mov
in
add
movsb
aaa
pushf
push
lcall
pusha
mov
sub
fiadds
xchg
gs
pusha
fs
adc
idivl
fdivs
jle
dec
in
sbb
jle
icebp
into
pop
mov
dec
fbld
stos
sbb
cmp
dec
push
movsl
ficoml
cld
fsubl
cli
iret
stc
inc
push
push
and
out
sbb
xchg
push
je
mov
scas
xor
fwait
addr16
push
addr16
dec
addr16
jb
or
pushf
add
testl
insl
jno
aam
outsl
mov
dec
pusha
fld
lcall
adc
push
jl
in
in
inc
lret
and
pop
mov
aam
xlat
pop
mov
xlat
inc
sbbb
stos
out
cwtl
mov
inc
adc
push
lods
or
fisttps
push
sub
popf
dec
mov
xor
add
scas
mov
ss
jecxz
dec
or
mov
mov
sub
fistps
mov
pop
mov
call
out
push
imul
test
dec
imulb
jno
es
pusha
daa
hlt
int3
pusha
cltd
js
test
xchg
jp
sbb
bound
nop
fldenv
mov
dec
aas
out
xor
negl
cmpb
loope
bnd
push
les
or
bound
rcrl
testl
xchg
ret
iretw
gs
and
sub
xchg
lcall
dec
pop
testl
test
std
sbb
xchg
cmp
test
scas
mov
or
stc
jo
mov
pop
and
outsl
adc
pop
ss
inc
and
aad
outsb
cli
adc
subb
fnstsw
add
rcrl
mov
cmp
xor
outsb
xor
inc
std
push
xchg
jns
fidivl
jmp
cwtl
outsl
mov
dec
mov
test
out
enter
adc
fisttps
and
loope
emms
add
inc
pop
dec
ljmp
lods
test
bound
xchg
rcr
and
stos
inc
insl
jge
and
imul
xchg
and
mov
imulb
mov
cmp
adc
jb
jae
ja
pop
cmpsl
in
mov
mov
jns
mov
sarb
sbb
cltd
stos
mov
xchg
enter
movsl
or
popf
sbb
pop
mov
add
add
adc
inc
stos
and
xor
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
push
pop
push
sbb
adc
sbb
das
leave
sub
pop
fdivs
lock
sbb
xchg
adc
push
and
pop
mov
mov
dec
inc
pop
mov
movsbl
into
andl
pop
mov
bound
cmpsl
js
shll
sub
adc
mov
dec
vmread
cwtl
in
test
push
ret
call
scas
add
daa
jmp
fs
fwait
add
pop
jmp
or
jecxz
sarb
pushf
pop
cwtl
popf
jo
pop
push
pop
fld
pop
call
mov
jo
in
pop
jp
movsb
mov
rclb
nop
std
sbb
ljmp
call
outsl
and
out
mov
dec
repnz
inc
xor
dec
fcmovnu
nop
dec
pop
or
or
clc
xor
fsubrs
mov
xor
pop
mov
mov
pop
and
loopne
imul
xchg
sbb
fnstsw
sbb
mov
dec
test
sbb
es
push
or
decb
lret
pop
mov
mov
push
lods
sti
mov
push
cmp
inc
cli
pop
jg
xchg
addr16
js
push
push
js
icebp
jge
out
mov
dec
rcr
aam
sbb
xchg
xor
in
or
cli
sub
mov
out
jno
jp
sub
dec
jb
ss
fcmove
data16
dec
push
inc
rclb
sub
ljmp
iret
and
xor
pop
nop
mov
inc
pop
add
push
mov
pop
inc
inc
repnz
lcall
lcall
inc
cld
popa
mov
or
push
jmp
imul
repnz
lods
mov
dec
icebp
or
ret
xor
les
inc
aaa
pop
in
mov
rcrb
roll
and
bound
pop
sbbl
add
sub
sub
data16
xchg
sub
mov
bswap
insb
gs
xor
scas
sti
sub
call
test
nop
sbb
shr
adcl
outsl
roll
sti
idiv
mov
mov
mov
or
mov
aad
test
aam
lcall
les
dec
sahf
sahf
push
lds
mov
gs
push
mov
mov
xchg
mov
out
cld
mov
add
push
cmc
je
xchg
inc
test
mov
lods
and
addr16
or
xchg
jo
cmp
add
loop
das
xchg
jge
movsb
cwtd
imul
dec
mov
push
sub
sbb
fildll
cli
sarl
lret
loop
icebp
pop
notb
cmpsl
clc
xorl
insb
cmc
je
push
hlt
dec
repz
mov
ss
test
pop
and
arpl
mov
loopne
dec
movsb
negl
mulb
pusha
or
and
jl
fiaddl
ret
inc
adcl
mov
and
cwtl
nop
cmc
sbb
cmpsb
sub
adc
mov
cs
insl
and
dec
mov
mov
inc
jb
dec
push
xchg
push
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
inc
jl
adc
sbb
sbb
push
mov
les
enter
pop
xchg
stc
jle
adc
push
inc
fwait
mov
mov
sysexit
test
add
push
pop
std
pop
and
int3
fidivrs
xor
pop
fidivl
mov
das
fdivrl
push
sub
int3
inc
push
jne
faddp
push
add
pop
aas
xor
iret
jbe
fwait
js
cld
push
fdivs
add
mov
lcall
pause
inc
cwtl
push
lock
test
test
ljmp
bound
aas
mov
sbb
sbb
pop
in
sub
shl
ss
jecxz
mov
xchg
xchg
cmpl
scas
add
add
lock
pop
and
xlat
repz
repnz
inc
cld
stos
jne
lahf
xchg
addr16
loope
lret
pop
pop
sti
inc
test
fs
outsl
push
or
repz
add
test
cmpsl
sbb
int
jmp
xor
lcall
mov
add
mov
pushf
loope
sahf
sub
icebp
jo
pop
fcmovu
insl
clc
xor
out
nop
call
adc
test
pushl
je
mov
iret
push
hlt
xor
adc
mov
add
rorb
pop
pop
ja
ljmp
lret
or
pop
mov
xchg
pushf
mov
or
das
adc
lret
cmpb
rcll
dec
xor
xchg
dec
mov
in
cmp
mov
xchg
das
arpl
and
jns
dec
mov
scas
ret
subb
fadd
cmpl
mov
out
loopne
lods
enter
out
ret
int3
push
xor
mov
sbb
hlt
leave
rcrl
inc
adc
adc
push
nop
das
int
movsl
iret
cmp
stos
ret
sbb
pop
pushf
inc
push
dec
xchg
iret
cwtl
hlt
xor
lahf
mov
fnstenv
test
fs
cwtl
addb
dec
in
add
mov
sub
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
add
add
add
add
add
nop
add
in
add
xchg
xchg
add
add
addl
add
add
mov
add
add
add
add
add
add
fadds
add
add
add
xchg
add
faddl
add
add
add
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
les
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
fsubl
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
dec
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
pop
es
add
inc
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
daa
inc
add
inc
out
les
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
adc
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
inc
and
add
sub
add
add
scas
lcall
das
dec
add
cmp
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
xchg
addl
sahf
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
push
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
test
add
add
test
add
add
mov
add
lods
test
add
test
add
test
add
test
add
test
add
add
and
add
xchg
add
add
pop
xchg
add
add
jle
add
add
add
lahf
add
addb
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
push
add
jp
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
mov
add
add
add
orb
add
mov
add
add
fimuls
add
decb
add
mov
add
add
inc
mov
add
add
add
jp
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
add
add
push
mov
add
mov
add
add
push
mov
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
mov
add
les
add
in
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
