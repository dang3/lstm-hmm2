push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
push
lcall
add
cmpxchg
xor
sahf
adc
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
int
lret
sbb
xchg
aaa
mov
test
and
lds
xor
dec
pop
cltd
inc
add
inc
jmp
mov
in
mov
test
call
sbb
dec
fisubl
loope
mov
bound
out
arpl
mov
cmc
xchg
mov
out
cmpsb
mov
dec
mov
add
mov
icebp
pusha
loop
inc
or
cmc
loopne
loop
fwait
xor
ljmp
cmpsl
cmpb
xor
pop
jl
xor
inc
inc
adc
pop
mov
cmpsb
push
jno
add
clc
sbb
cmp
or
add
dec
add
xor
sbb
in
mov
mov
xor
lahf
and
jae
mov
sarb
insb
or
icebp
adc
cmp
movsb
gs
outsl
mov
sbbl
lea
ja
fstpl
mov
sub
je
imul
lock
sbb
xchg
jnp
pushf
movl
daa
scas
outsb
add
push
jno
in
adc
pop
test
mov
jmp
std
bound
lcall
xchg
outsb
je
mov
xchg
jmp
adcl
inc
or
xor
or
jl
mov
pop
adc
or
movsb
xlat
jmp
popf
mov
pop
adc
and
add
mov
add
pop
sti
sub
fmul
in
push
add
inc
lcall
xor
sbb
inc
andl
fs
mov
mov
pusha
insb
lret
add
push
sbb
xchg
cmc
push
in
mov
es
loope
fcoms
insb
mov
into
test
adc
ljmp
cmp
or
mov
and
jl
jae
lahf
mov
mov
orl
sbb
lds
xor
push
inc
shl
xor
xchg
leave
adc
clc
jle
push
ja
arpl
push
rcrb
inc
test
lds
adc
xchg
imul
sarb
push
mov
dec
cmp
xchg
sbb
pop
push
je
ret
call
pop
jmp
pop
sub
std
das
mov
pushf
lods
inc
ds
push
mov
ds
fs
pop
notl
mov
dec
arpl
lods
insl
popa
je
dec
movsb
stc
pop
testl
aad
test
dec
cmpsb
adc
es
stos
sub
mov
adc
inc
xchg
int
xor
push
and
pop
stos
test
stc
xor
dec
jno
cmpb
xor
sarb
insl
aaa
shll
sub
or
jecxz
loope
arpl
mov
lahf
dec
lahf
cwtl
fwait
pop
adc
test
sbb
jno
fsubl
test
mov
rcll
lcall
aas
sbb
adc
xchg
xchg
jne
jbe
xor
pushf
xlat
xorl
jbe
iret
inc
mov
stos
movsb
into
xchg
dec
mov
jns
push
sbb
jb
sbb
and
cld
or
movsb
cwtl
scas
aas
mov
mov
int3
mov
mov
lods
pop
xor
xchg
mov
or
mov
cwtl
jge
and
push
sub
insb
xchg
sbb
jmp
shl
ljmp
ror
nop
lahf
ja
xlat
mov
adc
or
sbbl
push
jns
add
movsl
sbb
sub
sar
mov
dec
mov
push
push
loope
mov
push
mov
mov
sub
push
test
call
int3
aad
lahf
stos
mov
bound
xchg
or
mov
test
dec
iret
sub
or
out
sub
jge
jg
hlt
sub
inc
repnz
cmp
sahf
insl
insb
mov
lods
lret
movsl
dec
pop
jns
sub
popf
repnz
and
pop
pop
push
sub
fnsave
cmp
cmc
mov
mov
xor
test
xor
movsb
mov
sar
in
pop
mov
adc
mov
out
inc
lods
mov
mov
push
lcall
pop
rorl
cmpb
clc
cmc
lret
push
jp
stos
mov
or
xchg
fsubrl
mov
jno
out
out
iret
icebp
sub
les
lods
ds
push
aaa
das
sbb
pushf
xor
adc
in
xor
push
push
addr16
aam
dec
stos
xor
lods
das
and
in
mov
sub
test
cmp
popa
xlat
cmc
pop
loope
aad
fdivr
out
cmp
mov
ja
xor
xchg
mov
and
add
shr
mov
xchg
dec
push
cmc
mov
adc
push
pop
mov
data16
cwtl
cld
mov
dec
push
xchg
sub
dec
sbb
dec
imul
lcall
aas
lods
cmpsb
loopne
push
xor
dec
lea
or
push
lcall
xchg
repz
ret
add
loop
insl
leave
or
or
xchg
sub
lods
das
sar
lds
jle
rcl
iret
fcoms
popa
out
push
ficomps
xor
jle
ss
out
fs
mov
mov
xlat
out
xor
das
add
jp
jp
add
mov
out
fisttps
adc
push
jl
cmp
adc
mov
and
fwait
sahf
sarb
inc
mov
sbb
pop
icebp
pop
add
je
std
and
fistpl
mov
lcall
and
shrl
pop
mov
mov
sbb
sub
or
sub
jbe
pinsrw
push
stc
jle
dec
cmp
mov
shll
int
jecxz
mov
jo
scas
clc
test
cmp
cmp
push
mov
xor
sub
aam
mov
fsubs
mov
aad
decb
push
dec
mov
das
jne
loopne
xor
insb
jg
add
jmp
mov
into
jecxz
add
jle
jne
jle
mov
stos
pop
cli
je
push
outsl
mov
dec
je
cmpsl
rorl
into
jmp
lods
and
dec
das
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
icebp
aam
xchg
xadd
mov
and
sti
test
xchg
add
dec
inc
xlat
dec
add
fdivl
shrl
cld
and
push
ds
sub
mov
dec
xor
push
mov
jno
pop
in
cld
ds
loope
in
jbe
jmp
dec
or
shrl
movsl
fsubp
cli
cs
lahf
ret
mov
icebp
mov
outsb
cwtl
fxch
repz
xchg
jle
inc
ret
popa
icebp
pop
cmp
push
jmp
loope
lcall
andb
mov
fcoml
les
or
cld
lock
sbb
cmp
in
popa
push
mov
mov
push
leave
outsl
sub
cmp
push
sbb
cmp
ficompl
xchg
cld
inc
pop
movsl
jmp
fwait
mov
insl
fistl
cmc
sahf
push
jle
popf
idivl
scas
mov
add
clc
lcall
data16
dec
mov
push
pusha
pusha
jns
ljmp
add
fsubs
test
inc
subl
cmp
imul
mov
mov
loop
inc
in
jecxz
xchg
outsl
push
mov
insb
cmp
mov
push
adc
aad
cmp
adc
sahf
jno
sub
xchg
sbb
inc
jne
imulb
in
cmc
xchg
add
or
adc
dec
hlt
mov
in
in
or
adc
mov
rcll
xor
mov
out
pop
shrb
lea
sti
push
xor
lea
push
cmp
xor
sbb
pop
das
and
cmc
mov
rclb
bound
incb
push
push
sub
ret
sbb
ret
std
mov
push
icebp
imul
imul
jno
xchg
inc
stos
xor
inc
fstpt
xchg
pop
sub
movsb
sbb
mov
sub
pop
or
lcall
jge
jo
push
imul
sbb
cwtl
push
inc
jecxz
pop
dec
jne
dec
aas
loopne
inc
cmpl
jb
cs
xchg
xchg
jno
out
sub
filds
mov
mov
adc
mulb
lds
jno
sub
add
jge
loope
dec
rolb
mov
call
sbbb
add
dec
or
cwtl
out
cmc
sbbl
das
xorl
or
push
adc
or
xchg
sub
xchg
push
push
imul
push
xchg
lods
jnp
xor
mov
inc
pop
cld
dec
jno
adc
mov
dec
push
and
aam
mov
stos
cmp
pop
nop
hlt
dec
jno
jne
int3
in
dec
mov
ret
xor
cmp
cmp
sahf
clc
mov
dec
daa
adc
rolb
mov
out
jb
xor
ret
dec
std
loopne
movsb
add
mov
jmp
mov
jge
ret
pcmpgtb
ret
mov
xchg
mov
jns
add
inc
xor
test
inc
test
xlat
push
data16
outsl
jae
pushf
push
push
cli
sub
leave
xchg
push
addr16
push
xchg
mov
in
sub
xchg
in
rolb
mov
ds
dec
into
jecxz
dec
push
sbb
iret
fdivrl
xor
shl
or
in
jbe
bound
int
in
data16
pop
call
sbb
sbb
dec
dec
jb
das
stc
push
loope
pop
outsl
sub
mov
insb
xchg
dec
push
pusha
popf
xchg
andl
lret
push
lods
std
outsb
insl
sbb
out
dec
sub
cltd
cmp
cmc
xchg
mov
push
dec
inc
insl
je
cmpb
pop
hlt
sub
mov
dec
insb
in
jo
fstpl
movsb
and
iret
bound
push
xchg
mov
adc
mov
jecxz
jle
xchg
mov
out
out
sbb
movsb
dec
loope
test
ds
cltd
cmp
mov
rcrb
cli
test
sbb
push
loope
outsb
les
adc
push
mov
cmp
xchg
aam
jae
jp
popa
loop
inc
mov
cwtl
rclb
add
outsb
and
fcomp
ds
in
mov
mov
adc
inc
adc
data16
fxch
test
test
sbb
jo
testl
ds
cmp
lahf
xchg
fdivl
test
push
or
cmp
cmp
pop
iret
imul
mov
call
mov
sbb
in
fs
push
pop
out
jbe
test
dec
xlat
fisubl
or
jb
mov
add
cli
mov
mov
repz
jo
mov
in
add
mov
cmp
cwtl
test
dec
push
push
jno
adc
out
lcall
mov
jg
jmp
or
push
ja
xor
fs
fistpll
jmp
js
jae
shll
lods
mov
out
jg
sub
mov
push
or
std
in
push
repnz
loope
mov
cli
cwtl
xor
std
gs
mov
idivl
inc
mov
mov
mov
xchg
sahf
insl
imull
fnstenv
outsl
mov
adc
fs
jmp
test
enter
arpl
imul
imul
xchg
jo
mov
bound
or
cmp
loop
push
jle
lahf
xlat
xchg
dec
push
insl
pop
mov
xor
fildll
mov
out
lcall
add
dec
insl
out
loope
jns
movsb
push
push
jg
mov
inc
fdecstp
insb
cmp
cmpsl
loopne
int3
hlt
dec
sti
das
mov
sahf
ds
jp
cmp
rolb
xor
or
addb
dec
cld
scas
add
pop
fwait
insb
xor
and
jne
xor
test
das
jbe
cli
js
sbb
ficoml
mov
pop
dec
not
push
adc
movsb
sub
fs
adc
pop
add
mov
xor
dec
jle
pop
mov
add
in
and
jge
inc
mov
movsl
cmp
ficompl
sbb
mov
lcall
mov
cmp
xchg
hlt
mov
out
or
or
stos
jnp
push
rcr
call
les
mov
addb
mov
dec
push
mov
push
insb
cmp
push
adc
push
mov
stos
fcomps
mov
shr
out
jg
daa
push
pop
insl
insb
mov
les
mov
xchg
xchg
movsb
cmp
ret
push
push
mov
sbb
sub
push
push
int3
test
push
sub
dec
out
movsb
mov
push
or
xchg
iret
lcall
sub
mov
or
push
sbb
mov
xor
repz
push
xlat
mov
or
lds
loopne
aam
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
jmp
repz
and
ja
shll
sbb
pop
aaa
push
pop
and
ret
cmp
mov
inc
fistpll
and
jno
push
inc
test
inc
pop
adc
push
inc
ja
fadds
inc
out
inc
clc
insl
ret
inc
adc
or
mov
mov
mov
cmp
cld
xchg
pop
je
ss
xlat
lret
push
outsb
shll
xchg
mov
jns
mov
mov
cmp
sbb
jno
lea
add
push
cmc
inc
cmp
fs
add
stc
inc
mov
add
xchg
lods
pop
jecxz
sbb
mov
jns
mov
pop
ss
mov
imul
das
xor
sbb
adc
adc
fistps
int3
xor
adc
pop
and
adc
scas
roll
cli
fcomi
sbb
fdivrs
lds
or
ss
outsl
aaa
dec
sub
aaa
xor
lods
dec
mov
int
mov
in
hlt
lret
test
xor
jg
dec
jmp
push
add
pushl
mov
lahf
out
jmp
push
add
fucomip
dec
mov
insl
xor
sti
aam
push
iret
adc
jne
cmp
lret
inc
stos
add
daa
ds
scas
nop
xor
push
jg
in
xor
call
xchg
mov
mov
adc
mov
push
dec
rorb
jg
out
inc
pop
jo
push
iret
pop
sub
add
loope
cs
adc
push
and
nop
cmp
les
test
arpl
sub
out
lea
cltd
in
mov
into
movsb
into
fdivs
jecxz
icebp
filds
sarl
popa
mov
xchg
mov
daa
dec
xlat
fcomi
mov
sub
and
or
out
xlat
inc
lahf
xor
sti
mov
pop
aad
lods
jmp
int3
mov
xor
push
or
sbb
pop
jmp
and
mov
push
test
inc
inc
push
call
mov
jno
and
fsubl
test
dec
sbb
jo
jnp
icebp
and
fsubs
mov
or
sti
popa
jge
mov
fst
or
orl
ds
xchg
stos
ret
fcomps
jle
add
leave
stc
cs
popf
jg
lfs
je
jae
lea
and
cmp
cmp
fwait
jb
dec
stos
clc
mov
fstl
mov
xchg
ss
push
out
es
pop
mull
les
aam
push
push
jno
and
repnz
lret
push
sub
sub
jmp
mov
sub
push
push
insb
push
sbb
in
pop
push
xchg
cmp
lahf
mov
dec
aam
lods
sub
pop
insl
push
ljmp
sbb
pop
hlt
addb
sub
mov
rcrw
js
jecxz
nop
adc
cwtl
cmp
stc
sub
jmp
xchg
mov
inc
aaa
jns
pop
pop
in
mov
mov
mov
enter
es
rorl
push
shll
pop
cmp
push
jecxz
inc
test
stos
cmp
lahf
popf
xchg
and
loopne
push
add
std
sbb
inc
repz
hlt
pop
lds
popf
or
les
add
sbb
pop
inc
arpl
pop
sub
or
pop
adc
rolb
fs
dec
xchg
mov
outsl
sbb
mov
sti
faddp
jecxz
aam
ds
pop
ja
cwtl
std
mov
add
pop
rorl
movsb
psllw
fldl
add
out
fstl
xchg
stos
pop
push
pop
loopne
je
test
xchg
mov
mov
sub
leave
dec
or
push
sub
cli
in
test
xor
fwait
push
in
or
xchg
mov
push
jb
jne
dec
scas
inc
jle
inc
nop
fistps
inc
dec
mov
lret
imul
adc
in
mov
mov
xchg
sub
dec
aas
or
les
es
addr16
and
inc
mov
xor
push
and
pusha
push
mov
push
shrb
fmuls
pop
xchg
mov
adc
dec
pop
push
push
es
adc
push
cltd
inc
repnz
sar
dec
fsts
out
push
insl
imul
rcl
adc
jmp
sbbb
push
and
mov
lahf
mov
lret
xchg
pop
loope
popl
popf
shrl
bound
inc
cwtl
jmp
mov
mov
mov
adc
xchg
pop
cmp
inc
out
mov
pop
clc
shrb
fistl
lret
outsl
xor
pop
xor
jb
lcall
mov
sub
enter
add
push
fcomi
aas
ret
push
cmp
push
aad
push
xchg
stos
push
es
push
jno
inc
lods
mov
mov
test
out
mov
cltd
fisttps
je
rorb
mov
lods
and
jge
aam
cmp
cwtl
lret
mov
sbb
in
push
dec
mov
inc
je
rorb
adc
popa
mov
or
cmp
mov
xchg
mov
pop
imull
push
cmp
and
mov
or
add
std
test
cs
je
or
mov
out
nop
inc
arpl
xchg
test
mov
iret
sub
out
cmpsb
xchg
stos
lcall
leave
cwtl
lods
out
mov
mov
cmp
cli
mov
xchg
pop
xchg
mov
jp
clc
inc
jns
sbb
fldenv
mov
jmp
adc
xor
mov
xchg
push
jbe
and
add
mov
sub
imul
gs
inc
imul
or
lea
jmp
shlb
jb
cld
in
cltd
std
add
in
das
jno
in
cmc
stos
pop
or
cmp
sbb
sub
scas
popf
aaa
jne
and
inc
incb
sub
xchg
cmpsl
cwtl
xchg
sub
lods
sbb
lea
pop
jp
mov
sti
loope
pop
cmpb
jno
push
out
mov
xlat
cvttps2pi
or
test
lahf
dec
ret
sarl
sub
rorb
inc
sub
push
jno
test
cmpsl
jb
push
jl
insl
icebp
lret
xchg
mov
mov
aas
and
adc
lahf
mov
cmp
sub
fwait
jmp
mov
add
jb
inc
dec
test
push
enter
mulb
push
pop
lock
hlt
mov
sbb
movhps
inc
push
outsl
xchg
sbb
rorl
enter
or
js
lods
jbe
sbbb
icebp
lods
lods
push
mov
jge
fs
or
cld
pop
sub
mov
outsl
mov
shl
aam
sbb
inc
ret
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
lret
cmp
xchg
add
lcall
std
shll
cld
test
mull
out
cld
bound
in
sub
dec
cltd
inc
fistps
ds
jp
faddp
mov
mov
sbb
fidivrs
std
pop
inc
sbb
adc
pusha
clc
mov
cmpsl
cwtl
and
jecxz
add
call
test
and
xchg
cmp
dec
icebp
sbb
jge
into
push
scas
mov
inc
add
cs
sub
pushf
lods
sub
pop
xchg
lret
push
cs
loope
mov
jo
mov
jmp
jecxz
push
mov
pop
fwait
mov
dec
and
test
push
addr16
jno
sub
pop
rcll
sbb
push
loop
sbbb
push
movl
int3
outsb
jo
xchg
pop
add
cmp
mov
fiaddl
jns
xor
addr16
xor
insb
negl
sti
call
jne
scas
je
shl
sti
dec
cmp
movsl
lcall
mov
cmpps
push
inc
jge
gs
shll
inc
pop
test
or
lods
mov
xchg
pop
cmc
mov
addl
les
sub
cmc
repz
cltd
mov
mov
loope
lea
and
add
cmp
push
repnz
hlt
pop
cli
pop
jo
ret
and
frstor
neg
repz
xchg
adc
fsubrl
in
push
gs
xchg
pop
sbb
sub
dec
lret
mov
dec
bound
test
pusha
add
push
mov
and
xor
dec
pop
jnp
mov
fisubrl
pop
mov
ljmp
sub
cmp
int3
lods
aam
js
orl
adcl
xchg
daa
hlt
add
rcrl
mov
inc
pushf
mov
mov
xchg
test
scas
inc
std
arpl
dec
js
movsb
fdivr
xchg
mov
shl
mov
add
repz
or
dec
jecxz
cmp
mov
dec
sub
imul
lret
clc
pushaw
jnp
or
or
fcomi
mov
adc
addr16
popl
xor
push
pop
testb
jmp
xchg
xchg
jnp
push
dec
in
cmpsl
pusha
fstps
jmp
xchg
out
movl
das
jns
sub
in
sti
dec
or
arpl
iret
leave
repnz
outsl
not
js
test
and
push
lret
lahf
fidivrl
stos
dec
cltd
mov
test
add
push
push
into
mov
insl
imul
gs
mov
fmuls
fisttpll
fcomps
push
imul
dec
push
mov
push
rol
cmp
push
popf
mov
mov
and
pop
fnstsw
popf
js
subb
popa
or
ss
pop
adc
mov
popa
insb
xchg
xchg
pop
dec
jge
mov
push
iret
sbb
outsl
push
sub
test
dec
xor
ja
pop
mov
in
and
xchg
xchg
mov
clc
scas
mov
jecxz
ljmp
pop
xor
push
mov
scas
ja
imul
inc
insl
mov
subb
cmpsb
adc
jl
sbb
xchg
adc
gs
and
adc
ss
jnp
lcall
dec
xchg
incb
mov
hlt
push
xchg
enter
push
jae
stos
mov
sub
iret
out
lret
pop
pop
outsb
jb
mov
jg
fimull
add
xor
add
pop
std
adc
fdivs
mov
and
mov
imul
mov
sub
push
sub
daa
adc
adc
xor
xchg
or
pop
gs
and
pusha
test
out
incl
mov
xchg
ss
mov
cmp
mov
pop
pop
jge
mov
jp
fistpl
cmp
and
stos
lods
dec
xor
or
jp
cwtl
test
pop
dec
loope
pushf
or
pop
ret
adc
pop
ret
shrl
mov
or
in
mov
mov
fcompl
xchg
mov
lock
fwait
popf
mov
mov
mov
dec
pop
sub
cmp
pop
sbb
int3
add
gs
sub
mov
test
int3
movsl
adc
frstor
cmp
fnsave
sbb
cmp
cmpsl
inc
mov
insb
ja
inc
mov
cmc
mov
fistps
sub
stos
jp
iret
and
xor
push
fstpl
jne
in
or
add
pop
sub
inc
push
or
ret
push
sub
cs
rol
or
out
imul
add
xor
daa
fstpt
pop
rclb
and
xchg
pop
loopne
sahf
push
das
ror
mov
dec
push
jbe
dec
faddl
sub
jns
int3
xchg
mov
sub
cmpb
add
sub
xchg
mov
push
js
sarb
aaa
shlb
mov
iret
add
dec
mov
push
int3
aad
pop
jp
pop
test
adc
mov
in
lea
dec
sbb
or
in
stos
stos
repz
dec
cmpsl
adc
stos
out
ret
js
cmp
sbb
mov
push
push
or
fcoml
mov
mov
sbb
int
call
xor
add
nop
popa
hlt
sub
ss
mov
mov
imul
cmp
add
adc
xchg
stos
or
hlt
divl
repnz
in
jno
sub
jg
loop
ret
or
xchg
movsl
and
add
xchg
mov
inc
push
loope
add
in
xor
fstpl
push
ret
fs
outsb
mov
nop
aad
aaa
add
mov
jmp
cmp
ljmp
ficoml
xorb
ret
ljmp
shrb
mov
fsubrs
adc
ret
mov
ds
lret
cld
imul
cmpsl
movsl
fiadds
stos
fnstcw
scas
cmpl
sbb
in
test
cmp
pop
fcomi
dec
pop
fucomp
cmc
xchg
cmc
dec
cmp
pop
xor
pop
ficomps
jge
xchg
sbb
sub
lods
add
lret
leave
pop
inc
pop
ds
outsl
popa
stos
in
test
cltd
cmc
dec
lret
scas
mov
inc
jp
and
shrl
sbb
ljmp
inc
xlat
ret
jmp
jg
xchg
faddp
or
rcrl
out
push
add
jle
dec
mov
imul
jg
mov
stos
fs
cs
xchg
aas
dec
pop
rclb
pop
mov
std
notl
mov
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
jl
sub
aam
ja
cmpsb
cmp
and
ret
sbb
pop
or
lret
push
jne
in
push
cltd
dec
push
scas
cwtl
sub
mov
addr16
fbstp
xor
jns
inc
mov
mov
xor
insb
or
aas
imul
pop
xchg
enter
pushf
and
mov
push
pushf
inc
sub
add
das
dec
test
incb
cmc
arpl
outsb
pop
scas
repz
jecxz
push
cmp
jecxz
cmp
mov
adc
inc
mov
fnstsw
fidivl
adc
inc
shrl
mov
cmp
xorb
pop
std
mov
mov
mov
add
cmovns
cmpl
dec
insb
aaa
fistpl
lods
dec
jle
push
xor
hlt
mov
aaa
je
stos
sbb
and
ljmp
in
test
or
xor
push
int3
out
sbbb
add
sbb
rcl
and
sub
xor
daa
lret
lods
adc
pushf
dec
leave
jle
lea
cmc
inc
mov
jae
mov
jno
shl
lods
xor
ret
stc
add
jo
or
xor
sahf
cmpsb
shlb
shll
xor
data16
or
test
push
pop
movsl
jecxz
rcr
mov
inc
scas
aad
mov
inc
push
mov
loopne
jp
in
xchg
dec
xlat
in
icebp
call
fildl
lcall
sti
mov
jbe
pop
push
or
cmp
in
jl
mov
and
fwait
in
insb
out
subb
faddp
add
inc
clc
arpl
sbb
inc
pop
pop
mov
jnp
stos
sti
dec
or
mov
cld
or
jmp
repnz
jmp
arpl
xchg
sub
xchg
les
cmpsb
cmp
or
sti
imul
in
incb
fdivr
pop
daa
pop
jbe
enter
ficoml
scas
cmp
inc
fisubl
pop
cmc
xchg
cmpsl
hlt
ja
lds
xchg
dec
mov
dec
cmc
lods
scas
dec
ret
add
faddl
mov
xor
mov
xor
or
inc
out
inc
cmp
dec
into
ret
cmp
jmp
insl
popa
xchg
rcrl
mov
jecxz
fimull
in
pop
cld
xchg
pop
out
in
iret
mov
sbb
mov
into
cwtl
pop
ret
push
aam
adc
sarl
sbb
aaa
rcrl
insl
and
in
test
sysret
dec
add
aam
aas
data16
test
or
imul
stos
bswap
mov
pushf
adc
push
bound
sbb
add
filds
mov
mov
and
push
mov
arpl
hlt
es
into
mov
popa
movl
push
ret
cwtl
imull
cwtl
sub
mov
scas
dec
test
adc
mov
repnz
imul
shll
or
cmc
sbb
rcl
ss
movsl
mov
jns
mov
pop
in
loopne
cmp
xor
je
xorb
cmp
adc
mov
mov
mov
inc
pop
pop
sti
dec
xchg
sub
and
pop
loopne,pt
scas
cmpsl
push
cmp
or
jno
faddp
ficoml
lock
adc
push
fldpi
jp
imul
cmp
cmp
dec
fldcw
cmp
stos
notl
xchg
test
ja
ss
inc
insl
sti
out
test
push
sahf
out
xor
insb
dec
jo
in
mov
filds
or
cmpsl
or
xor
sbb
dec
scas
mov
sbb
sub
cmp
xchg
mov
mov
push
mov
mov
je
jbe
sbb
jl
rcrb
or
jne
xchg
repnz
stos
imul
lahf
cld
int
sbb
test
in
inc
jo
cmpsl
mov
sbb
inc
dec
xor
jb
rorl
dec
mov
fdivs
movsb
pop
clc
fsubs
or
sahf
pop
dec
leave
jmp
movl
movsb
or
out
incb
jp
movsb
out
ret
lret
call
and
lea
icebp
xor
mov
jae
pop
or
aam
lcall
pop
insl
adc
xchg
fldcw
xor
jl
pop
mov
leave
stos
mov
mov
push
mov
dec
rcrl
lock
mov
mov
call
pop
mov
clc
repz
pop
fisubrl
imul
std
push
gs
sub
outsl
es
cmp
mov
add
cmp
push
fs
mov
mov
cli
inc
add
scas
push
repz
jge
lret
cltd
addb
dec
scas
add
out
mov
sarb
enter
data16
adc
xor
push
ret
push
cmpb
lcall
divl
pusha
and
stc
stc
fildll
mov
jne
or
and
ja
mov
add
add
inc
int3
and
stos
sub
cmp
push
jb
rcll
test
fwait
cltd
xchg
div
inc
repnz
cmpl
outsb
mov
cmpsb
or
out
fwait
pushf
and
call
cmp
nop
sub
mov
lock
arpl
inc
aam
cmp
pop
cwtl
vpcmpgtd
call
mov
imul
test
cld
insl
ss
insl
pop
mov
inc
and
push
mov
mov
mov
into
mov
adc
or
jo
cmp
repnz
adc
pop
pop
call
loopne
inc
fnstsw
xor
pop
insl
jb
or
outsb
ret
mov
test
pop
mov
dec
fmuls
cmp
lret
sbb
xor
mov
or
stos
mov
leave
push
mov
adc
xor
push
clc
mov
inc
or
mov
pop
and
mov
xchg
cwtl
xchg
stos
int3
sub
xor
pop
push
fwait
cmp
es
adcl
pop
push
cmpsb
xor
jecxz
adc
cmp
inc
adc
jge
mov
divl
sub
outsl
shll
xchg
movsl
mov
pop
insb
cmp
mov
mov
push
daa
mov
loope
ret
adc
and
sbb
sbb
add
jge
mov
xor
sbb
dec
imul
jp
xor
mov
lods
out
adc
jnp
or
and
and
repnz
jnp
push
lods
mov
enter
stos
mov
out
nop
scas
push
jne
xor
xchg
dec
fwait
ss
xchg
sbb
mov
sub
sbb
cmp
clc
inc
nop
inc
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
loope
mov
jae
addr16
jmp
dec
mov
and
int
hlt
xchg
call
xchg
daa
cmpsb
xchg
push
lret
adc
mov
and
cmp
into
xadd
arpl
xor
enter
js
dec
cmpsl
fidivs
jns
test
ja
test
mov
gs
jmp
cmpsb
enter
and
cmc
leave
notb
and
pusha
mov
cld
sbb
movsl
arpl
xchg
loop
add
push
xchg
sbb
xchg
xor
and
hlt
xor
pop
sahf
cmc
movsl
mov
in
out
mov
cltd
xor
lret
inc
or
mov
jmp
int
mov
subb
or
and
xchg
shlb
arpl
shrb
lahf
cmp
mov
fisubrl
loopne
dec
icebp
outsl
mov
fcom
sub
je
jmp
ds
push
ds
jle
sub
sbb
xchg
push
lahf
inc
sub
stc
or
fldenv
xchg
mov
inc
mov
ljmp
jl
xchg
mov
mov
jne
rcrb
sub
sub
mov
sahf
cmp
filds
dec
pop
movsl
pop
ficompl
dec
aad
xchg
aaa
out
mov
idivb
inc
dec
and
ficoml
aad
inc
lds
ror
lock
cmc
dec
movsb
lods
imul
outsb
pushf
sbb
cmp
clc
cs
fisttps
adc
data16
ss
cld
sbb
push
mov
nop
adc
fs
sub
cltd
mov
add
cld
mov
mov
outsb
loopne
shll
divb
or
nop
call
jns
jg
in
out
mov
fistpl
out
adc
mov
mov
sub
out
loopne
jle
mov
and
popa
cmc
iret
mov
jge
push
cmc
std
xchg
adc
test
adc
pop
movsb
dec
xchg
mov
inc
inc
or
in
inc
push
loope
inc
inc
ds
mov
jmp
dec
mov
pushf
sbb
rorl
mov
int3
add
inc
pop
out
ret
movsl
add
xcrypt-cfb
cmpsl
and
mov
fs
sbbb
jmp
rol
sub
push
bound
repz
rorb
cli
xchg
and
stc
or
int3
addr16
sub
cmp
fs
mov
rol
mov
jle
pop
jmp
inc
push
stos
cmp
jns
add
cltd
out
jno
pop
fiadds
add
stos
psubw
sti
pop
cli
inc
imul
cmc
cmp
jne
repnz
sahf
fcomip
add
lock
test
jo
xor
rorl
mov
jp
not
mov
sbb
inc
xlat
xor
mov
pop
jno
loopne
test
adc
sti
mov
sar
push
pushf
dec
pop
sbb
daa
adc
adc
cmpsb
jae
push
imul
int
dec
sub
fcoml
push
push
sarb
daa
pop
mov
xchg
aam
pop
in
pop
cmpsb
movsb
pop
jl
fmul
and
pop
mov
mov
sub
dec
sbb
ret
loopne
jg
jno
cli
jle
mov
ror
movsl
xchg
data16
loope
imul
mov
pop
sbb
stos
inc
and
xlat
stc
movsl
pop
mov
push
mov
shrb
jp
lock
or
jecxz
popa
imull
push
pushf
movsb
es
lcall
popf
jns
sub
lods
ret
dec
jae
int
ret
lret
mov
mov
aad
mov
xchg
in
and
jecxz
aas
ss
jge
fistps
out
mov
icebp
add
xor
movsl
test
xchg
xor
scas
iret
and
and
push
inc
femms
and
sub
into
and
mov
icebp
mov
movsb
xchg
enter
cmp
filds
jno
jo
push
mov
in
sub
inc
pop
ljmp
push
mov
cmp
dec
aaa
insl
sub
ja
loop
push
push
ret
jae
jne
push
es
fcoms
sahf
add
dec
arpl
test
jecxz
pop
push
jb
or
cmpsb
jg
adc
cmpsl
ja
pop
lret
pop
daa
shll
ds
in
loope
mov
xchg
add
test
mov
aad
or
jnp
test
fiadds
mov
ds
arpl
mov
push
out
push
cmpsl
repz
sub
das
in
aaa
or
lret
clc
shrl
test
andb
xlat
jno
movsb
idiv
stos
mov
fbld
push
lock
aaa
mov
mov
mov
mov
insb
outsb
xor
sbb
insl
fwait
dec
call
xchg
mov
fstps
mov
lea
into
in
push
fistpll
push
std
lahf
adc
adc
push
mov
mov
mov
dec
xchg
cltd
fs
subl
and
push
mov
mov
dec
push
mov
or
sub
mov
sbb
inc
lds
mov
aaa
push
cs
insb
inc
fimull
xor
iret
stc
mov
xchg
push
sbb
addr16
mov
sub
iret
mov
inc
dec
adc
sub
sub
movsl
shlb
add
ficoml
cmp
xor
sbb
adc
xchg
push
fwait
cld
fadds
movsl
loopne
sub
inc
adcb
mov
aaa
mov
mov
repnz
inc
pop
out
pop
dec
iret
ss
xlat
jno
shll
fs
sbb
sub
lds
fbstp
xor
mov
mov
cmp
dec
popf
shr
xchg
lods
sub
pop
movsl
sarb
add
clc
inc
fmuls
adc
in
sub
xchg
pop
mov
mov
mov
mov
jp
out
rcrb
out
neg
push
lahf
gs
js
xor
cmp
cltd
std
pushf
lret
sub
inc
cwtl
sahf
push
loop,pn
jb
call
or
dec
adc
jbe
test
mov
and
insl
xchg
pop
shlb
mov
mov
into
dec
xor
lretw
sbb
fimull
clc
inc
sub
push
xchg
xlat
mov
xor
push
dec
pop
mov
aas
enter
inc
fstps
inc
repnz
scas
push
out
add
xchg
add
repz
stc
punpcklwd
leave
mov
mov
or
adc
out
ljmp
lahf
mov
xor
xchg
nop
mov
add
cltd
ret
les
push
mov
mov
in
inc
and
psrlw
std
or
test
mov
pop
add
fisttps
int
outsb
mov
in
aad
aam
pop
std
xchg
outsb
mov
push
mov
mov
addr16
jmp
jg
push
nop
dec
mov
loope
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
ret
insl
insb
jnp
repz
int3
pop
imul
and
adc
jl
push
pop
rcrl
push
mov
fisubl
mov
lcall
pop
mov
add
enter
idivl
mov
in
inc
adc
test
mov
jmp
ds
and
pop
test
popf
daa
repz
or
dec
jp
xchg
jmp
push
in
cmpsl
lods
xchg
sahf
inc
pop
cmpsl
sub
shll
dec
pop
scas
mov
inc
ljmp
aam
cmp
xchg
jnp
or
mov
or
mov
mov
fdivp
loopne
xor
addr16
aad
ret
insb
or
push
test
mov
orb
add
pop
jnp
sbb
mov
sbb
das
into
sar
fs
xchg
cmp
mov
in
jo
lret
movsb
fstl
inc
lds
jl
lret
and
xchg
pop
out
gs
fdivrs
and
mov
addb
dec
xor
or
mov
inc
xor
ret
imul
jae
jmp
aaa
mov
ds
push
mov
mov
shlb
lock
mov
dec
rcrl
inc
push
inc
data16
mov
inc
call
jne
cmp
das
test
push
xor
cmp
aas
cmc
mov
incl
lahf
repnz
inc
clc
stos
aas
negl
sbb
loope
push
pop
sub
cltd
je
cmp
inc
scas
pop
xchg
inc
movl
sub
lods
outsb
push
add
dec
sbb
or
shll
pop
sbb
outsb
loop
jb
cmp
aad
lock
pushf
in
lea
test
mov
dec
aas
push
lock
or
push
xor
fistpl
mov
outsb
shrl
fs
dec
and
lahf
dec
and
aaa
pop
cmc
icebp
push
cs
repz
lret
ds
mov
pop
lock
cld
rorl
and
out
daa
outsl
mov
outsb
xor
pop
inc
or
push
push
pop
sbb
ss
jecxz
shrl
loope
push
pushf
les
xor
cmp
dec
aam
jg
mov
adc
js
pushf
in
push
int
pusha
mov
sbbb
lea
test
push
add
jno
pop
loopne
icebp
roll
jbe
dec
pop
and
or
fxch
inc
movsl
mov
push
in
pop
xchg
jb,pt
arpl
stc
cmp
pop
mulb
and
mov
int
mov
xor
nop
imul
pop
cmc
push
pop
in
test
jns
add
jbe
stc
inc
jbe
fistps
inc
xchg
mov
cmp
sbb
xor
shrl
aaa
pop
mov
sub
dec
and
push
xchg
xorl
stos
test
fwait
rcrb
sub
adc
rcl
sub
jmp
decl
mov
icebp
xchg
cmpsb
xchg
mull
add
bound
push
fiadds
lods
or
pop
jecxz
xchg
pop
and
pop
faddl
mov
inc
and
mov
mov
adc
cmc
outsl
inc
fsubl
mov
cltd
push
lcall
sti
add
adc
push
movl
inc
and
cmpb
mulb
loopne
mov
shrl
iret
xchg
add
sti
push
inc
loopne
mov
clc
mov
leave
adc
mov
fdivp
shl
push
stos
push
mov
sbb
pushf
out
enter
sahf
sbb
push
and
inc
or
std
dec
sub
xor
sbb
push
push
loop
pop
and
adc
sub
aad
in
sbb
xchg
sbbl
pop
shl
sbb
push
cmpsb
mov
push
push
lret
mov
push
loopnew
daa
and
push
lock
pop
cmc
sar
mov
aas
fwait
mov
popa
sub
scas
mov
jbe
popf
jg
and
outsb
rolb
sub
adc
pop
shl
lret
push
mov
test
dec
pop
jmp
call
into
push
fisttpl
insb
push
inc
xchg
insb
xchg
sub
dec
das
aam
inc
pop
sbb
aas
out
pop
sbb
and
mov
add
insl
dec
enter
aaa
aas
andl
es
loopne
iret
adc
push
xor
pop
pop
stos
mov
js
leave
push
dec
lea
mov
in
dec
inc
repz
cmpsb
pop
bound
sbb
xchg
jno
stc
es
or
dec
es
cmp
jno
movsb
lret
leave
divl
jg
push
adc
cmpsb
stos
ja
sbb
test
sub
inc
adc
or
daa
mov
outsb
xchg
mov
dec
pop
ss
push
mov
add
addr16
xor
mov
mov
and
mov
ret
lret
sbb
pop
cmp
bound
mov
les
xor
jno
and
mov
push
mov
xor
pushf
ret
sbb
xchg
call
lret
lret
jle
xchg
js
nop
xchg
xor
and
cmpsl
fcmovnb
cmpsb
pop
es
es
int3
lea
in
dec
jmp
push
movb
lret
xchg
mov
lds
into
adc
je
jno
inc
cmp
or
add
inc
jns
repnz
cwtl
jbe
ds
imul
movsl
adc
pop
enter
push
mov
mov
adc
in
divl
jle
adc
inc
jnp
cmp
pop
dec
lods
sub
js
dec
lds
adc
stos
jle
mov
sub
lock
jno
ja
sbb
xor
hlt
cltd
jecxz
fs
add
push
sub
push
call
outsb
cli
and
int3
mov
inc
mov
adc
push
and
mov
cmpb
js
out
in
hlt
test
sub
xor
stos
sbb
std
cmp
shll
dec
and
outsl
into
cmc
sub
or
sbb
popa
ret
je
xchg
out
pop
jae
ret
mov
lcall
aad
std
es
rcr
test
ret
push
imul
inc
xor
leave
pop
add
hlt
inc
cmp
mov
push
ret
std
jnp
imull
mov
stos
push
add
pop
sub
js
enter
insb
mov
mov
sbbb
mov
ljmp
pop
inc
jmp
leave
sub
fsts
bound
mov
push
cs
sahf
sub
hlt
sbb
enter
ret
pop
push
push
bound
imul
popa
adc
add
pop
popf
mov
inc
mov
xchg
push
inc
and
mov
mov
popf
repz
add
sub
mov
and
mov
mov
gs
jo
into
push
and
mov
cld
dec
xor
push
inc
mov
jecxz
jle
loopne
cli
into
pop
out
fst
push
push
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
je
pop
js
movsb
pfrcpit1
cli
scas
xor
lcall
pop
and
pushf
in
cmp
clc
je
mov
out
cmp
jle
mov
push
incl
clc
insl
insb
add
push
dec
mov
jb
dec
adc
cmpb
push
jle
fidivl
adc
sbb
mov
mov
movzwl
xchg
popl
inc
paddsw
mov
sbb
pop
out
dec
mov
je
pop
call
cs
orl
out
negb
sbb
pop
in
pop
fisttps
insl
sbb
repnz
insl
scas
rcrl
add
mov
sub
adc
lea
and
stc
or
shlb
or
jecxz
mov
adc
int3
sarb
adc
shl
xor
mov
dec
jnp
movsb
xor
sahf
mov
loop
cmc
or
or
xchg
loope
negb
or
cmp
fimuls
and
jb
divl
mov
sbb
push
xlat
shlb
push
adc
adc
inc
pop
test
adc
lods
out
push
into
pop
sub
inc
cmpsb
add
mov
imul
arpl
xor
stos
popa
mov
mov
bound
loop
and
push
sub
add
pop
leave
inc
xor
jo
pop
mov
sbb
jmp
mov
dec
push
imul
into
push
adc
jecxz
pop
imul
pop
sbb
mov
jp
xor
lret
stos
inc
xchg
dec
inc
adc
add
jl
mov
dec
pusha
xchg
jmp
lret
mov
mov
ljmp
stc
loopne
adc
loop
lcall
xor
mov
xchg
mov
dec
lahf
movsl
ljmp
mov
or
jno
testl
ret
inc
jbe
add
adc
xchg
int3
mov
jg
pop
out
imul
mov
mov
ja
inc
jecxz
test
jne
faddl
cmp
pop
or
inc
test
loop
push
xor
fistpll
sbb
inc
xchg
mov
out
test
inc
movsl
int3
lcall
sbb
repz
mov
xor
inc
adc
mov
lcall
adc
xor
push
outsb
and
lods
sub
in
inc
or
lcall
mov
mov
out
jle
sub
mov
je
or
sub
mov
jno
sbb
xchg
subb
mov
clc
or
and
test
pop
pop
jmp
enter
inc
sub
ljmp
fwait
loop
imul
sbb
test
aad
fisubl
aad
stos
sbb
fdivrl
lcall
out
jmp
jne
add
xor
paddb
xor
fsubp
call
push
sub
inc
hlt
dec
subb
ljmp
inc
add
ljmp
pop
popf
add
aad
mov
in
stos
les
imul
add
cltd
addr16
daa
push
sub
xlat
cmpsl
push
jmp
xlat
xor
sarl
push
and
bound
push
out
lret
xchg
add
add
push
mov
orb
cmp
fistpll
pop
repz
hlt
pop
jge
pop
xchg
inc
sbb
pop
mov
out
adc
std
mov
adc
xchg
inc
roll
add
jbe
cmpsl
push
jge
or
and
rorl
sub
mov
gs
lahf
movsb
xor
fimull
or
sub
pushf
push
int3
in
cmc
nop
and
sub
into
filds
mov
xlat
or
lea
cmp
fdiv
xor
rolb
mov
sti
jg
push
inc
xor
popa
xor
sbb
lret
adc
pop
add
cmp
lds
cmp
fbstp
sar
in
pop
jg
dec
jne
add
jp
add
bound
adc
push
cmp
sbb
add
inc
in
cmp
jl
push
lret
mov
bndldx
shll
jge
insl
push
jp
mov
or
ds
sub
adc
sti
mov
sub
lea
push
rcl
mov
sbb
xor
popa
test
pop
adc
stos
aam
test
jge
bound
mov
xlat
in
or
jb
scas
or
xor
sub
stos
mov
push
jno
cwtl
pop
roll
insl
pop
add
inc
sub
pop
jp
ljmp
and
int3
dec
mov
nop
cli
cmc
loope
loop
or
lds
mov
stc
dec
mov
xchg
jp
adc
xchg
push
iret
popa
imul
out
out
cmpsl
mov
sti
dec
mov
mov
shrl
rcrb
sbb
adc
std
add
mov
adc
lret
xor
notb
sub
sti
outsb
std
cltd
push
adc
aas
pop
mov
or
loope
inc
ja
push
test
test
add
inc
mov
add
sub
fstpl
arpl
lods
mov
scas
mov
mov
rcr
jge
or
aad
jle
pop
ja
cli
sub
adc
movsl
testb
xchg
inc
movsl
push
pushf
mov
sar
pop
ja
mov
lahf
rcrb
rcrl
fstpt
xchg
or
lahf
pop
add
fisttpll
lret
ss
push
fmuls
test
iret
popf
and
fsub
dec
pop
divb
dec
and
pop
mov
imul
lcall
leave
es
in
xchg
fildll
push
add
fdiv
mov
jae
jle
or
dec
out
xchg
in
pop
mov
jg
dec
dec
je
or
cmp
sub
or
fucomip
sbb
hlt
push
mov
lret
cmp
xor
arpl
sub
mov
cmc
enter
xorl
aad
sbb
jmp
dec
jmp
popf
ret
ret
out
jne
and
cmp
xchg
xor
and
sbb
mov
add
adc
fnstsw
outsl
lods
push
pop
cmpsb
fldcw
push
sub
fnstsw
and
daa
add
fwait
lock
das
cmc
jo
loopne
or
mov
push
ja
adc
jns
adc
adc
in
adc
lret
pop
movsb
lds
or
cmp
jp
mov
js
rolb
push
pop
pop
sti
mov
push
addr16
je
out
insb
lcall
pop
ja
push
cltd
mov
pop
ljmp
in
jno
int
xchg
dec
inc
mov
dec
pop
enter
es
insb
movsb
sbb
in
mov
mov
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
test
jp
dec
mov
ja
scas
jnp
imul
lcall
fisubrs
ja
or
dec
mov
jnp
mov
adc
lods
cmpsl
push
mov
or
mov
push
sub
jge
push
jmp
pop
int3
enter
sahf
and
mov
cld
insl
pop
push
jns
faddl
and
jnp
rcrl
cmp
insb
cmc
lods
or
fstl
mov
jb
sub
mov
sub
scas
lret
mov
adc
or
adc
dec
imul
loop
inc
jmp
test
or
aas
ljmp
mov
cmpsl
and
push
lret
subb
mov
mov
dec
ss
and
enter
pop
out
add
clc
mov
loopne
sbb
or
inc
jb
leave
lcall
pusha
and
std
imul
xor
lods
fsubs
mov
jbe
mov
jge
lcall
jbe
xor
je
fimuls
scas
or
add
mov
repnz
cs
mov
shll
mov
clc
push
into
data16
xor
iret
aam
cmpb
pusha
push
insb
jae
adc
es
jl
into
scas
or
out
cli
in
mov
inc
out
sti
scas
ljmp
lock
mov
int
int
lret
cmp
or
pop
daa
subl
lret
icebp
mov
test
and
fdivs
out
repnz
dec
sahf
pop
test
in
ss
pop
mov
cltd
scas
test
sbb
mov
and
adc
sub
out
mov
movsb
pop
add
jo
inc
push
or
ds
jnp
add
push
xor
stos
or
xchg
jo
cmp
sbb
mov
xchg
mov
push
in
fimull
scas
stos
sub
call
inc
aaa
push
jp
and
lcall
cmp
std
int3
in
nop
or
in
and
jge
fildl
lret
push
mov
xor
adc
mov
sbb
mov
inc
cmp
mov
cli
jg
fimuls
rorb
mov
adc
ljmp
xor
jne
mov
daa
sub
push
out
sbb
hlt
xchg
push
stos
pop
lods
or
enter
pop
stc
push
jg
pop
mov
mov
lcall
mov
mov
inc
int3
adc
stc
cmp
in
in
xor
std
dec
mov
jo
adc
inc
pop
cmp
pop
and
popa
push
shlb
dec
dec
adc
lcall
out
mov
hlt
push
std
nop
xchg
xor
adc
imul
ret
hlt
cld
daa
mov
stc
out
je
in
pop
stos
sbb
scas
test
push
popf
xchg
in
adcb
hlt
push
adc
mov
cmpsl
mov
or
jecxz
push
jmp
push
inc
pop
sub
sbbb
add
ficoml
lds
fistl
adc
in
rcll
push
scas
dec
div
xchg
cmp
xchg
sub
pop
push
push
jl
add
pop
pop
sub
mov
popf
cmpl
sub
pop
adc
into
push
cmc
lret
std
or
inc
imul
cwtl
push
mov
mov
mov
outsb
inc
sbb
pop
repz
sub
idiv
insl
pop
add
outsb
sbb
lea
xor
mov
test
push
and
ret
fists
cmp
std
lea
cmpb
push
pop
lods
jno
test
sbb
fcomps
mov
jmp
push
ja
xor
xchg
pop
xchg
pop
nop
call
inc
rcll
ficoml
sub
fstps
inc
cwtl
sahf
push
mov
and
lock
out
bound
arpl
push
mov
inc
leave
mov
pop
mov
xchg
mov
loope
jp
inc
cmp
cmpsb
sub
nop
pop
outsb
add
sub
lahf
enter
or
rcrl
imul
addr16
mov
jo
add
dec
sbb
sbb
lret
sbb
xchg
mov
sti
add
jecxz
ret
sbb
je
inc
mov
xor
mov
pop
mov
adc
cld
ljmp
mov
and
sbb
pop
out
pop
xor
rcl
cmpsb
rolb
sbb
pop
addr16
push
push
loopne
or
rcrb
jle
push
movsl
icebp
mov
lcall
inc
aas
data16
or
es
and
sbb
outsb
or
xchg
sub
push
fstpt
ficomps
scas
pushf
in
or
mov
mov
or
jne
push
icebp
and
lods
cmpsl
jmp
mov
fdecstp
cmp
lods
bound
mov
push
push
push
icebp
push
leave
imul
jb
lds
lret
jno
jp
test
stos
or
cmpsb
inc
std
in
loope
mov
sbb
and
mov
call
dec
insl
pop
nop
fldenv
inc
or
cltd
rcl
outsb
subb
pop
sub
inc
sahf
and
or
jecxz
int3
pop
jne
mov
loopne
test
or
pusha
push
mov
cmpsb
test
mov
or
leave
adc
and
cmpl
push
pop
push
fcomi
jno,pt
std
jbe
cmc
inc
lcall
fistl
push
ss
pop
and
stos
xchg
mov
je
cmpsl
cwtl
jg
imul
cmpsb
xlat
sbb
push
add
and
icebp
repz
dec
pop
inc
aad
xor
lods
inc
repz
sub
inc
loop
mov
fsubrp
jno
push
addr16
test
outsl
adc
add
shl
jae
int
lods
orl
shl
jne
cli
popa
insl
pop
popa
and
dec
lds
addr16
fcompl
push
stc
iret
jmp
push
jo
mov
shlb
pop
push
mov
insl
ss
lock
xlat
nop
push
mov
les
cltd
ds
lods
pop
call
jg
inc
popa
jns
cmc
leave
pop
hlt
mov
clc
inc
adc
lea
inc
lea
sbb
jg
xor
mov
leave
add
push
out
mov
add
aad
cmp
pop
push
xchg
rol
les
out
pop
inc
push
pop
xor
lea
mov
add
in
or
push
inc
aad
repnz
int3
mov
enter
xor
jle
add
xor
inc
test
jbe
push
inc
jmp
sbb
push
mov
int
test
jno
or
xchg
das
push
ds
mov
icebp
loop
filds
or
shlb
leave
outsb
mov
jle
xchg
mov
add
clc
imul
add
add
dec
in
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
scas
out
mov
jp
ja
pop
inc
mov
mov
cs
xor
cmpsl
pop
leave
push
movsl
fsubr
mov
jne
hlt
cltd
imul
push
lods
rcrb
pop
shr
aaa
ljmp
ds
push
pop
xorb
sub
insl
data16
adc
mov
push
test
push
pop
jne
or
repz
push
jg
fildl
lahf
sub
out
jae
jae
adc
arpl
sub
jae
xor
mov
sbb
fsts
sub
stos
call
lods
dec
mov
and
dec
insl
insb
and
dec
sarb
push
in
inc
mov
rcr
test
int
dec
test
and
sbb
int
fs
jno
lods
mov
inc
jbe
lea
mov
repz
push
jecxz
aas
dec
popf
lea
ds
cmp
mov
push
inc
in
mov
icebp
jle
les
fnsave
mov
mov
gs
in
pop
bnd
push
lods
fdivrl
xlat
repnz
mov
cmp
xchg
jno
mov
lcall
or
jns
inc
xor
or
cmc
arpl
cwtl
aas
rorl
lock
arpl
adc
mov
shr
xchg
dec
or
lods
gs
pop
jnp
mov
cmp
sti
mov
sub
add
imul
xchg
insl
dec
or
outsl
or
cli
mov
fimuls
mov
inc
mov
aaa
or
movsb
mov
pop
inc
es
push
push
imul
bnd
mov
push
jecxz
leave
hlt
push
lcall
loopne
mov
pop
xchg
xchg
jge
je
cltd
std
sti
lcall
rcll
cmp
insl
mov
mov
push
aam
mov
jnp
arpl
ret
shl
push
int
jne
dec
jmp
jg
jbe
mov
int
fsts
mov
arpl
call
sub
shrb
data16
xchg
lds
out
mov
arpl
mov
jecxz
mov
push
sahf
push
xchg
jns
mov
ljmp
mulb
xor
mov
jl
outsl
adc
sub
lcall
imul
stos
int
ret
fwait
inc
std
aam
popf
sbb
adc
mov
jp
jecxz
in
inc
outsb
pusha
test
mov
lods
shrl
cmp
pushw
inc
ds
adc
mov
cmpl
cmp
dec
sub
loopne
lock
ljmp
out
pop
iret
rclb
mov
cmp
roll
shlb
or
loop
imul
movsb
mov
lods
in
das
clc
not
inc
out
cmc
inc
add
scas
xchg
mov
jo
or
inc
pop
xor
xchg
add
out
stos
imul
cltd
and
add
mov
js
shll
std
cld
loop
ljmp
out
adcl
lret
xor
rcrb
movsb
mov
ret
in
stos
xchg
add
inc
stos
test
jge
imul
in
xor
or
sub
testb
and
leave
cwtl
xor
mov
fmuls
mov
stos
adc
clc
adc
pop
inc
and
aad
ja
jns
push
lock
mov
jno
shl
and
jmp
xchg
mov
xchg
nop
loope
adc
push
jnp
mov
pop
loop
pop
imul
xchg
call
cltd
int3
and
lods
repz
lea
inc
js
fwait
imul
lcall
sub
jns
out
mov
pop
imul
mov
mov
lock
dec
push
jle
push
nop
pushf
repz
xchg
sbb
and
add
and
imul
lock
sub
jg
adc
repz
dec
stos
out
jo
invd
jne
cmp
push
dec
je
rclb
add
jl
out
call
mov
repz
lods
testb
movq
stos
and
cmp
add
xchg
es
cmpsb
xor
shl
movaps
fsubl
adc
xchg
aad
jge
push
push
cmp
xlat
jmp
je
das
xchg
cmpsb
mov
mov
or
outsb
pop
divl
clc
and
cli
pop
push
inc
frstor
out
loope
mov
mov
xor
xor
add
jno
jae
leave
jb
lods
and
xlat
roll
add
scas
pop
scas
out
push
sub
pusha
add
xor
mov
push
fdivr
mov
inc
dec
inc
stos
loope
dec
pusha
sbb
shl
in
jge
cmp
fmull
outsl
and
pop
ds
daa
and
cmp
in
adc
in
and
arpl
xchg
arpl
ljmp
inc
xchg
xchg
repz
add
shll
bound
mov
push
or
cmp
pop
mov
mov
and
loopne
mov
nop
out
inc
es
xchg
mov
mov
jp
iret
mov
cmp
imul
mov
imull
aaa
adc
adcb
ds
mov
lea
sub
inc
and
and
iret
xor
push
xchg
mov
cmpsl
insl
mov
in
fstpt
into
sbb
aas
and
xlat
fadds
or
jns
ja
addl
aas
in
jl
inc
test
inc
jae
sbb
xchg
les
ja
pshufw
pop
and
aam
out
xchg
push
cwtl
lea
push
dec
jle
imul
mov
mov
jecxz
insl
mov
jl
pop
orl
lods
out
jecxz
idivb
stos
pop
cld
out
mov
jns
sub
es
call
popa
aam
pop
sub
add
fistpll
insb
in
inc
outsb
dec
loope
lcall
test
or
dec
dec
dec
sbb
inc
dec
xor
roll
outsb
subb
adc
push
pop
fwait
add
jno
xchg
aas
pop
nop
jns
xlat
js
fnsave
nop
mov
mov
or
mov
inc
xchg
cmp
add
add
fwait
loop
mov
scas
mov
and
xlat
addb
decl
xor
mov
add
mov
testl
test
sbb
popf
andl
sahf
out
push
xchg
cwtl
push
inc
lcall
and
adc
outsb
sub
outsl
ss
aam
xchg
int3
jmp
pop
xor
xchg
mov
push
xchg
imul
dec
add
cmp
jns
cmp
sbb
je
scas
xor
scas
fsubl
xrelease
and
cmp
jg
jle
ficomps
in
push
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
jge,pt
pusha
push
ja
push
fimull
ja
and
popf
lods
aad
js
aad
xchg
dec
cli
data16
icebp
cs
scas
sbb
arpl
push
mov
rol
sbb
mov
and
lods
xchg
mov
arpl
pusha
in
imul
js
and
cmc
adc
cli
ret
mulb
xchg
adc
es
cmp
ud1
or
pop
adc
inc
push
fiadds
inc
dec
je
inc
sub
setbe
xchg
lea
cmp
fs
ss
shlb
pop
in
adc
mov
mov
add
jne
fnstenv
inc
adc
enter
test
in
xchg
xchg
xchg
cld
data16
sub
shll
dec
in
icebp
js
stos
mov
mov
je
movsl
cmpsl
fdiv
add
cmp
xchg
icebp
mov
mov
pusha
sub
adc
ljmp
adc
in
jmp
jno
dec
mov
jle
push
cmp
or
sub
leave
dec
leave
ret
cmp
pop
inc
dec
scas
mov
mov
test
or
es
add
repz
xor
lret
xor
cli
sub
mov
xchg
aad
movsb
fidivrs
xchg
mov
daa
fwait
inc
jns
jmp
xchg
jae
daa
or
fs
jae,pn
je
inc
scas
xchg
add
jle
mov
cmc
out
jne
sub
xor
into
jne
imul
mov
lods
cmp
and
jnp
les
jo
idivl
fucom
sbb
repnz
jae
data16
repz
mov
sti
loopne
outsb
mov
imul
dec
mov
jecxz
hlt
les
dec
popf
mov
rorb
mov
mov
fcoml
pop
fwait
sub
inc
xor
sbb
add
incl
mov
cwtl
cmp
push
in
add
or
lods
and
repz
xchg
jecxz
loopne
arpl
or
jne
nop
xchg
imul
mov
or
in
jnp
js
jecxz,pn
jmp
lcall
shrb
in
jb
jg
push
stos
cmp
shlb
sub
cmpsl
ja
xor
cli
mov
jp
push
out
aas
lods
sub
addr16
xchg
and
add
pop
iret
or
mov
pop
jg
loopne
push
ds
lods
je
subb
adc
and
dec
imul
insl
cmc
stos
shrl
jecxz
push
les
xchg
jle
fs
icebp
pop
insl
cmp
jmp
addl
sbb
or
and
xchg
int
pusha
sub
sti
mov
or
loope
dec
ret
xor
mov
cmp
xor
push
pop
loopne
sub
insl
adc
xchg
lret
add
and
mov
pop
cmpsb
sbb
jb
jb
mov
xchg
dec
pop
jl
movsl
push
mov
mov
add
fcomip
push
mov
pop
and
mov
icebp
mov
add
vcvtss2sd
sbb
mov
ret
faddl
cmp
nop
rorl
ds
xor
jo
loop
les
cwtl
rorl
std
pop
sarl
leave
arpl
loop
and
inc
stos
dec
jge
inc
mull
xor
add
mov
pushf
fwait
mov
or
repnz
pop
mov
fnsave
fisttpl
and
test
pop
xor
andb
sub
push
add
clc
adc
and
cmp
roll
insb
jns
test
sbb
pop
mov
mov
loopne
mov
jne
push
fldenv
jnp,pn
shlb
je
inc
ja
xor
cmp
adc
mov
mov
pop
lds
mov
pop
sahf
repnz
out
lods
xchg
lea
xor
mov
gs
dec
mov
and
fnsave
out
and
and
push
negb
ljmp
jo
push
push
cmp
lods
mov
ja
outsl
nop
in
cmpsl
inc
fstl
xor
ret
test
mov
inc
and
cmp
insl
xor
aad
inc
cs
sbb
test
icebp
mov
clc
adc
lds
sbb
imul
fcmovnb
lret
loope
xchg
lds
xchg
xlat
push
cli
inc
and
cmp
jmp
mov
jmp
mov
add
adc
out
daa
mov
movsb
add
das
or
adc
aam
cwtl
mov
idivb
cltd
scas
jb
fldenv
pop
cmpsl
jne
rorl
jmp
mov
dec
mov
mov
cmpsl
ja
das
lock
ljmp
fmull
and
shll
nop
shll
mov
or
test
rolb
mov
ljmp
clc
or
jbe
ret
es
jnp
into
in
hlt
in
inc
xor
mov
std
push
in
push
inc
cli
aas
mov
or
mov
addr16
ror
adc
mov
sub
lcall
imul
mov
xchg
xchg
test
stos
sarb
or
fmull
mov
icebp
cs
and
mov
test
call
add
in
dec
dec
stos
push
mov
sub
sbb
insl
fildll
fiaddl
fsubs
clc
popf
mov
data16
mov
fsts
push
cmp
jnp
adc
xor
xchg
mov
es
adc
and
adc
mov
fcomps
push
stc
sbb
inc
stc
ret
out
mov
pusha
aas
loopne
sbb
mov
cwtl
in
test
add
jbe
scas
and
xor
les
sub
push
xor
add
iret
into
js
jl
mov
rolb
jge
sbb
xor
push
xchg
push
out
mov
xchg
cmp
aas
dec
lcall
mov
xor
out
jae
movsl
jmp
lcall
push
shl
popa
xchg
lret
lods
cmp
add
sbb
add
lds
addr16
add
aas
aad
cmp
fisttps
jno
repnz
sahf
cmc
sbb
and
sahf
out
mov
sub
mov
fwait
call
adc
inc
jnp
scas
inc
pop
push
xchg
aam
fldcw
cmp
fnstenv
lahf
imul
in
dec
jo
gs
mov
pop
cmp
jl
inc
js
mov
in
adc
cmp
outsl
outsl
daa
jp
mov
sub
aam
jmp
mov
sbb
lock
mov
mov
xchg
jecxz
sbb
hlt
sbb
push
lahf
xchg
xor
shrl
push
out
jbe
mov
sbb
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
xor
pusha
push
sti
fldlg2
dec
jp
inc
and
test
sbb
sub
sbb
mov
lret
sbb
jae
push
jge
pop
aaa
test
dec
pop
inc
test
mov
push
push
fwait
sbb
and
aas
test
cmp
test
xchg
mov
jbe
ret
adc
cmp
xchg
lods
addr16
ret
cmpsl
jae
push
jo
hlt
push
mov
testb
jo
aaa
cld
dec
scas
ja
xchg
push
cmp
xchg
sub
into
stos
push
lfs
xchg
aad
mov
cli
pop
loop
aam
jne
cmp
sahf
movsl
ds
rcrl
in
sbb
ljmp
pop
jl
mov
adc
mov
push
pop
jg
push
mov
out
mov
enter
jl
push
cmp
test
mov
adc
sahf
dec
hlt
dec
lods
adc
lea
sub
cmpb
jno
mov
xchg
cmp
mov
push
mov
jae
lock
enter
inc
mov
xchg
inc
ljmp
push
lods
mov
pop
jns
mov
fs
mov
sbb
lahf
shlb
push
cmpsl
add
push
push
sbb
test
imul
fistps
sub
inc
push
push
sbb
rorl
mov
push
jne
ret
aam
mov
mov
jecxz
xor
pop
pop
cmc
bound
mov
cmp
jmp
mov
out
and
call
cmp
fs
loopne
repnz
pop
pop
aaa
fs
in
and
cli
jge
xor
loop
mov
mov
adc
or
dec
xor
shll
stos
pop
fcompl
xor
sbb
push
mov
into
test
cmpsb
push
sbb
jg
popf
dec
xor
pop
xor
and
push
adc
jne
shlb
dec
lds
insl
dec
ljmp
and
nop
lods
jecxz
addr16
gs
sub
cwtl
xchg
add
pusha
in
adcb
call
pop
mov
mov
sar
out
mov
andl
pop
lds
sbb
mov
into
jns
cmp
sub
jmp
shll
push
jno
pop
lret
popf
inc
js
mov
mov
out
jne
push
xor
fcomps
mov
jbe
jl
out
cmc
lods
aas
add
xorb
mov
out
cmp
mov
mov
jmp
pop
xchg
or
loopne
push
push
and
decb
aam
mulb
xacquire
test
push
das
cmp
cmpb
popa
push
das
xchg
fisubrs
or
dec
jg
aam
arpl
inc
test
ja
push
and
in
imul
mov
icebp
clc
ds
push
loop
stos
imul
rcl
bound
es
add
lea
fdivr
dec
push
mov
sbb
push
out
movb
jmp
mov
mov
pop
ret
push
push
or
insb
sub
shlb
leave
cmc
popf
jg
adc
dec
lea
lret
and
hlt
add
ret
sbb
fs
pop
pop
xchg
es
lret
lahf
xor
pusha
shl
cmp
rcll
jmp
pop
xor
cwtl
fadds
and
daa
push
aaa
das
add
fists
push
mov
pop
sub
pop
gs
cs
lods
mov
out
xchg
cmp
aad
jecxz
ret
bound
sub
test
jg
push
dec
add
push
insb
pop
pop
add
pushl
test
popa
mov
rol
jo
pop
ss
addl
out
xlat
in
jle
loope
pop
mov
test
xchg
xchg
lahf
xchg
jl
lcall
jmp
ret
xchg
mov
notl
sub
lds
xor
jo
shrb
push
subb
cltd
inc
loopne
adc
imul
arpl
push
mov
sub
shll
adc
lcall
cli
jne
popf
ljmp
shlb
movb
cmpsl
pop
and
addl
outsb
cmc
sub
cmpsl
sbb
mov
call
orl
jge
outsb
or
dec
fsubrl
push
addr16
andps
adc
xchg
sub
push
popf
lcall
ss
ds
dec
xor
lods
outsl
sbb
mov
aam
sahf
int
mul
pop
jnp
cld
shrb
insl
or
cmc
push
dec
sub
inc
rorb
xor
es
add
lcall
push
popa
mov
in
dec
pop
std
mov
adc
movl
imul
arpl
shlb
lods
scas
add
sbb
pop
dec
daa
xchg
loope
loope
cmp
and
out
push
mov
and
add
xchg
mov
xlat
lods
outsl
rclb
or
add
xchg
scas
inc
and
xchg
hlt
sbb
xchg
xor
pop
in
das
mov
push
mov
notb
inc
sarb
add
dec
test
insl
cwtl
jb
mov
faddl
fmull
sahf
sahf
push
aam
push
outsl
mov
addr16
jo,pt
hlt
xchg
lret
daa
and
pop
inc
dec
outsl
loopne
cwtl
xor
lods
inc
mov
insb
mov
mov
xchg
inc
fwait
cmc
out
mov
sub
dec
pushf
loop
in
fs
add
jo
aam
mov
sbb
sub
sbb
adc
mov
rclb
lret
jle
pop
xor
sbb
or
xor
pop
xchg
repz
pusha
lret
or
push
inc
add
cltd
adc
iret
sbbl
popf
mov
and
cmp
das
bound
xchg
cmpsb
cmpb
dec
push
pushl
dec
jmp
push
push
clc
cltd
fldpi
and
dec
dec
xchg
xchg
sti
and
cmp
fucomi
gs
movsl
push
mov
xorb
xor
pop
jp
leave
xor
popa
xor
ljmp
sarl
lahf
xchg
mov
jp
jnp
push
aaa
in
xor
rclb
test
or
int3
cmp
cmp
cmp
mov
fdivs
sbb
cmp
mov
cld
dec
xchg
fcoml
cld
movsw
mov
jmp
cltd
pop
mov
or
stos
pop
add
inc
lahf
and
mov
loop
mov
add
idivb
sbb
cmp
jmp
mov
mov
mov
sbb
cmp
rcll
out
fisubrl
xor
lar
jg
cmc
lret
jle
adc
pusha
or
add
xchg
mov
sbb
js
rcll
cmc
test
cwtl
test
and
or
or
or
dec
clc
add
dec
lock
adc
ljmp
sub
mov
and
cs
scas
sbb
jge
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
pop
or
outsl
dec
ja
test
mov
addr16
pop
mov
gs
repnz
dec
push
icebp
jmp
sbb
xchg
fcomip
mov
jo
xchg
inc
sub
mov
clc
adc
or
shrb
repnz
mov
dec
shlb
pop
nop
scas
jge
imul
dec
and
jp
fisubrs
jle
iret
stos
ds
fucomp
sar
add
repnz
lret
or
addl
jle
mov
shr
in
or
sbbl
and
lds
and
aaa
pop
push
cmp
lret
mov
mov
mov
sub
xor
out
xchg
lret
arpl
std
jg
lcall
adc
mov
jge
test
in
fsubrs
cltd
movsb
enter
in
test
cmp
clc
pushl
jmp
push
popf
cs
or
or
test
imul
jg
inc
cld
loop
push
das
cmp
mov
into
mov
mov
test
jb
ficomps
insl
insb
das
mov
fs
pushf
lret
inc
in
negl
pop
jne
sbb
and
insb
cmp
adc
jl
fdivrs
iret
bound
xor
sbb
sbb
add
sub
push
stos
daa
out
out
imul
ja
dec
mov
lock
xor
aas
mov
lods
add
mov
jns
xchg
push
xor
inc
mov
int3
mov
lcall
sbb
cmp
inc
inc
dec
adc
ret
stc
inc
clc
insb
jbe
outsb
pushf
add
sbb
mov
lods
or
clc
movsl
pop
dec
loopne
test
pop
push
fs
rcll
lret
ds
or
shlb
push
xchg
addr16
fimuls
out
adc
inc
jecxz
mov
cmp
push
mov
stos
daa
mov
fwait
andl
pop
mov
and
push
xchg
push
mov
fadds
nop
movsb
jg
nop
jmp
xchg
push
cmp
xor
ja
repnz
shr
mov
lods
lahf
sbb
and
add
xor
in
cwtl
repnz
stc
leave
mov
fisubrl
push
out
out
cwtl
addl
shll
dec
clc
push
lahf
mov
fwait
scas
pusha
push
rorb
inc
push
ss
fcomps
mov
leave
jecxz
call
pusha
or
addl
jb
mov
mov
sub
aas
ljmp
mov
xor
adc
push
lds
pop
sub
test
insl
daa
pop
sbbb
add
push
and
jb
cmp
dec
xchg
push
pop
in
lret
adc
cmp
lret
add
dec
dec
mov
add
ljmp
or
cwtl
pop
jp
aaa
dec
jecxz
mov
lock
hlt
and
and
push
mov
int
pop
enter
push
jno
mov
fnstenv
lcall
addb
xchg
mov
outsl
jno
or
jle
pop
mov
das
jg
pop
js
fmull
fwait
daa
inc
test
pushf
jge
test
adc
push
sbb
aas
fldcw
inc
mov
add
je
xchg
hlt
jno
dec
imul
xor
dec
adc
das
ja
jl
lods
push
sub
std
mull
inc
mov
ja
mov
outsb
push
jb
adc
bound
test
ss
mov
pop
cs
mov
cmp
clc
notb
jne
bound
lret
test
or
fiaddl
or
iret
cmp
aad
dec
xor
aaa
pop
mov
xchg
aaa
mov
mov
cmp
sbb
pop
cld
xor
adc
out
inc
inc
ret
lcall
imul
in
sahf
mov
mov
push
push
movl
scas
jecxz
incb
out
add
xchg
mov
loope
mov
mov
cmp
psraw
dec
ret
and
jp
or
enter
sub
mov
dec
xchg
rolb
lods
outsl
stc
test
or
insb
outsb
fwait
mov
in
mov
es
xchg
mov
sbb
and
les
lods
dec
xlat
add
and
push
jo,pn
adc
xor
outsb
adc
shll
dec
jbe
inc
pop
lods
and
in
fisubs
rorl
pop
sub
jnp
pop
insl
icebp
daa
jp
add
and
fistpll
cs
stc
or
subb
js
add
cmp
movsb
fst
or
jmp
imul
repnz
lret
push
xchg
xor
pushf
nop
adcl
mov
jae
in
pop
hlt
insl
dec
movsb
sbb
imul
xchg
outsl
jl
xchg
adc
popa
and
or
fucomp
sbb
fistl
shl
add
xchg
mov
pop
mov
repnz
jb
imul
scas
push
sub
pop
push
in
mov
clc
jae
sub
lea
mov
fdivr
addl
mov
das
dec
in
push
inc
sbb
pop
sbbb
pop
add
rcl
jo
ficompl
popf
xchg
cmp
test
aam
cmp
add
test
sub
nop
repnz
fsubrs
fidivl
adc
or
push
shlb
mov
or
and
nop
xlat
iret
jnp
xor
jp
mov
add
jns
cmp
xor
pop
mov
gs
insl
es
fdivl
loopne
lea
fdivrl
repz
iret
push
mov
je
xor
dec
and
sarb
call
scas
mov
mov
in
daa
shll
or
and
xchg
rclb
adc
or
mov
lret
pop
xlat
sbb
add
lods
cmc
movsb
jecxz
xchg
mov
test
dec
mov
adc
sbb
scas
lds
loope
mov
mov
sar
imul
cmp
inc
mov
aam
push
cmp
cmp
mov
insb
or
dec
or
popa
sbb
lock
add
out
mov
and
sarl
pop
adc
cmpsb
mov
ficoml
daa
mov
int
push
leave
scas
inc
jb
push
cld
or
xor
mov
inc
sbb
out
decb
bound
mov
push
std
and
jge
mov
pop
fdivp
lret
loop
and
adc
inc
sarb
fiaddl
adc
sbb
out
inc
loop
rclb
mov
pushf
jp
dec
shll
and
int3
mull
out
and
scas
pusha
jnp
inc
repnz
mov
pop
jbe
fisttps
daa
into
leave
popa
add
cs
add
and
stos
inc
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
fdivr
in
call
add
pop
mov
mov
push
xchg
pop
popa
std
add
bound
jp
fcompl
lea
clc
sub
mov
cmp
mov
stos
loop
mov
lods
and
mov
sbb
rep
add
add
sti
insl
test
scas
das
out
mov
das
dec
dec
xchg
rolb
pop
scas
fxch
sub
push
dec
pusha
cltd
mov
jo
mov
xlat
je
notl
lret
pop
nop
mov
stc
stc
mov
sar
cli
cli
aam
test
add
add
mov
add
fcoms
lcall
lahf
mov
adc
stos
sbb
and
xor
mov
dec
dec
xorb
into
push
xchg
imul
mov
nop
gs
add
jg
add
mov
imul
int3
sub
scas
lods
fmul
lret
xlat
dec
mov
imul
cwtl
iret
pop
icebp
adc
xor
clc
jnp
add
pop
dec
lahf
mov
sbb
movsb
inc
sub
dec
je
inc
ret
mov
cmp
dec
sub
add
jecxz
mov
jno
ja
inc
cwtl
lret
ss
pusha
fsubp
push
xchg
hlt
cmp
icebp
lock
xchg
into
int3
in
lods
mov
ret
sub
call
xchg
jne
mov
inc
mov
pusha
lret
xlat
dec
jmp
mov
clc
aaa
data16
dec
sbb
out
xlat
mov
ja
mov
mov
xchg
std
stos
pop
aad
aaa
ljmp
aaa
jp
clc
xor
sbb
jns
xor
adc
rcll
aad
pop
push
aas
push
pop
ljmp
aam
sub
out
call
or
mov
shrb
addr16
mov
push
pusha
sub
push
sub
scas
popf
div
jecxz
fmull
mov
test
pusha
pop
scas
sub
sub
jne
fidivs
xor
jnp
jge
jae
popf
adc
lcall
push
in
in
mov
add
dec
iret
mov
pop
je
enter
shlb
idivb
sbb
dec
pop
and
ret
sub
sbb
mov
mov
or
lock
out
jl
cmp
clc
xchg
repnz
inc
lods
sbb
insl
movsl
clc
mov
int
xchg
ret
das
imul
out
push
loopne
inc
pop
andl
and
cmp
fcoml
sub
cltd
jmp
dec
pop
sbb
and
cld
test
pop
jle
es
popf
jge
aaa
jo
stos
mov
xchg
and
sub
add
js
push
and
mov
es
dec
adc
out
inc
imul
leave
vorps
xor
xor
pop
mov
pushf
pop
dec
stos
pop
call
stos
insb
sbb
jle
cmp
mov
enter
arpl
std
aas
int
cmp
incl
in
sub
cmp
gs
mov
hlt
bound
inc
mov
lret
icebp
lock
add
mov
movsl
testl
gs
jg
ljmp
or
aas
mov
call
das
sbb
inc
push
js
jl
ret
dec
out
popa
mov
outsb
pop
fdivrl
mov
push
ja
or
dec
xacquire
pop
inc
sbb
xchg
je
mov
cmpsb
rcrb
xchg
jae
aaa
and
jp
daa
and
sbb
lahf
lods
lds
xchg
cmp
icebp
cmpb
dec
mov
cmp
adc
pop
and
fwait
int
sti
les
mov
xchg
in
dec
push
jecxz
xchg
fs
sbb
fisubrl
add
cs
push
gs
int
inc
fsubs
xchg
cld
sub
lea
mov
arpl
out
pusha
mov
xor
jns
mov
xlat
jne
xor
xadd
sbb
or
xchg
pop
cwtl
cmp
pop
lock
mov
lods
mov
ss
or
push
mov
pushf
movsl
push
test
pop
jae
dec
mov
sbb
inc
cmpsb
jno
inc
adc
movsl
or
dec
pop
pop
jg
or
clc
addr16
jecxz
mov
out
shrb
push
sti
ja
ret
gs
add
pop
or
ljmp
sub
mov
gs
lret
imul
shll
idivb
lret
aas
add
rcl
mov
lret
sbb
shrb
sahf
fldcw
sahf
sti
push
push
int3
ja
mov
jecxz
jb
cltd
xchg
aam
jo
mov
dec
cmp
in
filds
xor
xor
loope
pop
or
push
adc
dec
or
push
leave
movsl
adc
enter
push
test
mov
jg
pop
test
cs
jg
lods
mov
pop
or
addr16
dec
mov
mov
call
and
or
pop
or
arpl
lods
test
daa
or
mov
jge
rcrl
int3
cmp
xchg
fs
shlb
clc
adc
pop
pop
cwtl
cmp
loop
push
add
mov
lods
repz
sti
xchg
lock
aaa
sub
jns
push
loope
lret
cmpsl
pop
push
sub
loop
jge
cmpsl
test
fst
dec
je
or
dec
xor
cs
inc
fs
popa
mov
xor
addr16
lods
addr16
push
leave
mov
iret
imul
and
mov
scas
pop
mov
xor
xor
mov
sbb
popa
subl
aaa
jp
mov
aas
pop
and
std
stos
inc
jecxz
cmp
pop
mov
mov
xchg
mov
cmp
sbb
popa
mov
add
and
outsb
shrb
add
adc
lahf
cld
or
dec
inc
sbb
sbb
je
jb
fwait
insb
pushf
pop
cmp
nop
inc
fbld
mov
add
fimuls
insl
xchg
shr
into
int3
mov
arpl
xor
aaa
test
dec
leave
sub
cmp
cmp
sub
outsb
jno
and
jle
psubusw
or
xlat
insb
in
insl
and
dec
repnz
hlt
adc
mov
outsb
sahf
mov
js
cmp
mov
fadd
movsb
jl
jae
pop
leave
add
imul
mov
mov
lods
xor
jb
sbb
loope
out
negb
sahf
orl
cmp
stos
dec
movsb
add
pushf
ss
cmp
stc
negb
or
push
imul
jmp
mov
call
or
or
insl
ds
mov
mov
inc
lock
aam
mov
inc
pop
pop
mov
fwait
in
cmp
lret
outsb
add
mov
dec
clc
jne
test
out
incl
out
in
enter
scas
fidivl
rcrb
ljmp
hlt
das
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
int3
out
movb
movmskps
jecxz
inc
inc
adc
sub
les
lock
pop
dec
popf
dec
or
out
jecxz
scas
mov
sub
sub
out
adc
aad
adc
test
xlat
rclb
imul
push
inc
std
lods
inc
add
sbb
test
xchg
ss
inc
mov
clc
loopne
push
add
add
mov
cmpsl
mov
out
push
adc
or
lret
add
scas
fwait
loope
icebp
and
icebp
push
sbb
sub
scas
sahf
icebp
int3
aam
adc
out
add
int3
xlat
mov
jg
cmpsb
in
mov
movsbl
dec
xchg
pop
fistpl
or
push
sbb
les
xor
jb
pop
ja
stos
roll
push
movsl
movsl
jnp
fidivs
mov
inc
cmp
ret
dec
cmp
add
sbb
pop
out
dec
shrb
movsl
cmp
daa
scas
outsb
gs
mov
dec
call
repz
pop
inc
mov
into
adc
loope
jbe
ljmp
std
mov
dec
dec
pop
cmp
inc
cmc
movsb
jl
roll
flds
mov
cmp
icebp
lcall
mov
pop
mov
dec
fistpl
xor
fildll
push
mov
out
inc
xor
pop
xlat
cmp
lahf
cli
mov
push
xchg
stos
dec
mov
mov
add
mov
lcall
in
add
adc
sbbb
mov
dec
fcmovu
popa
xchg
das
push
pop
cmp
lds
inc
jmp
dec
gs
dec
adc
push
add
int3
jecxz
add
pop
sti
sbb
xorl
sub
insl
sbb
cld
bound
mov
gs
and
lds
mov
jb
or
sbb
loopne
movsl
fs
imul
sbb
pop
icebp
xor
popf
icebp
dec
sarb
push
popf
or
and
test
insl
fsubr
xchg
nop
jb
cltd
cmc
aaa
and
sbb
adc
popa
mov
fisttpll
in
or
jg
in
xchg
inc
rclb
mov
jmp
pop
aas
out
stos
data16
cwtl
fsubr
into
sbb
out
inc
dec
sbb
inc
outsb
ret
adc
adc
stc
repnz
call
mov
adc
in
dec
sbb
cmp
jle
daa
push
add
mov
je
nopl
clc
and
fiaddl
jg
push
pop
popf
test
cmp
or
pop
mov
jge
pop
push
dec
dec
cmp
add
mov
rolb
arpl
scas
mov
adc
ret
popa
ja
in
fimull
push
push
clc
adc
push
dec
out
push
pop
xor
xor
imul
pop
arpl
cmp
push
ret
into
xchg
mov
or
jecxz
or
fadd
test
shll
sub
cmp
dec
push
test
loope
daa
sahf
mov
push
outsl
and
jae
lret
mov
xchg
daa
test
notb
fwait
loope
sti
xor
mov
lock
cmp
sub
sbb
sbb
adc
fwait
mov
mov
sub
mov
lret
mov
push
ds
in
xchg
fisttps
inc
and
xlat
fsubs
fisttpll
in
mov
push
xchg
iret
mov
and
fisubrs
mov
shr
movsl
push
add
mov
ljmp
ljmp
sti
pop
in
imul
sti
in
add
mov
sbb
mov
xchg
pop
and
mulb
das
int
adc
sub
xchg
jne
fsubl
sbb
pop
loopne
mov
add
sar
cmp
out
jle
xchg
mov
aas
xor
insl
mov
push
loop
leave
or
out
add
dec
gs
cld
cmp
inc
fisubl
fdivrp
xchg
aas
mov
xchg
hlt
cmp
mov
lock
aas
mov
mov
pop
lret
lock
cld
jg
add
mov
mov
in
loop
push
inc
add
pushf
sbb
imulb
movsl
or
scas
shrb
lea
pop
mov
negb
sub
jmp
lret
mov
outsl
loope
push
aam
lods
test
pop
and
in
stc
and
mov
mov
testl
fnstsw
out
test
stos
or
mov
cmp
outsl
push
mov
adc
bound
in
xchg
xor
push
and
cltd
xor
jmp
lcall
xchg
in
outsl
in
in
pop
dec
dec
testb
mov
or
sbb
aaa
shrl
arpl
aad
cmp
gs
mov
arpl
loopne
movsl
stos
dec
lret
pop
cmpsl
lret
inc
dec
js
jmp
ret
rcr
in
hlt
and
loope
je
or
or
cwtl
hlt
scas
jae
in
js
and
pop
xor
shlb
sbbl
inc
nop
push
cmp
ds
bound
inc
call
jb
mov
and
aas
test
loopne
cmp
out
pop
scas
xor
cli
dec
fildll
mov
mov
push
pop
test
cwtl
roll
xchg
lret
cmp
add
pop
pop
cmp
nop
ret
mov
xchg
push
and
roll
enter
les
pop
shl
jge
sbb
sub
cmp
movsl
out
outsb
ljmp
xor
mov
mov
aas
or
popf
scas
adc
cmp
xchg
jne
pop
push
sub
daa
bnd
xchg
repnz
push
insl
adc
jb
sbb
adc
jbe
insl
dec
je,pt
mov
mov
popa
push
stos
sbb
dec
mov
or
push
mov
add
and
data16
addr16
or
mov
shrb
jmp
or
push
dec
xchg
jle
iret
cld
push
popa
mov
mov
pop
pop
pop
cld
test
fistl
push
fs
mov
dec
shlb
sbb
popf
cmovge
pushf
sub
subl
enter
cli
or
out
sub
call
pop
in
out
nop
fwait
rcr
mov
xchg
and
ljmp
comiss
popa
je
add
cld
and
mov
cmpsl
add
and
xchg
repz
test
imul
ja
pushf
adc
hlt
jne
test
pop
std
out
cwtl
and
cmc
add
xchg
push
jge
sbb
clc
daa
pop
lret
mov
pop
fiaddl
cmp
mov
dec
std
pop
shl
call
std
jb
add
push
aad
and
scas
dec
inc
sub
sub
and
icebp
add
aas
push
gs
mov
movsl
cltd
and
push
pop
outsl
cmp
adc
xor
ja
jg
add
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
pop
jne
js
sbb
ja
xchg
sub
fs
sub
push
insb
cmp
dec
cmp
dec
daa
adc
cs
dec
pop
xchg
in
mov
rcl
adc
pop
jne
call
adc
leave
adc
adc
mov
mov
lret
arpl
pop
int
ja
cmp
fs
fldl
mov
pop
dec
mov
enter
clc
adc
inc
sarb
in
pop
stc
mov
xchg
mov
lods
add
sub
and
adc
cld
xchg
ds
cmp
jae
mov
jns
dec
sbb
dec
add
dec
sbb
xlat
outsl
mov
lret
fwait
aam
xchg
sub
jl
das
adc
mov
xor
shrb
jecxz
insb
ret
scas
adc
push
push
aas
xchg
sub
imul
or
aaa
push
cmp
or
xor
add
lods
jo
ficoml
out
mov
mov
add
adc
xlat
loope
out
or
shl
int3
pop
cmpsb
std
adc
sarb
pop
push
idivb
aaa
and
ss
pop
ds
cmp
mov
scas
jge
adc
dec
or
imull
lods
mov
fsubrp
adc
mov
mov
dec
imulb
and
shl
inc
movsb
lods
sub
jb
sbb
xchg
add
int
xor
xchg
imul
iret
mov
or
je
pop
out
in
adc
stos
xlat
sti
jb
inc
fwait
xor
adc
add
or
sub
dec
ja
lods
shr
mov
sub
xlat
popf
test
ja
in
xchg
cmc
test
jmp
pusha
inc
cmp
loopne
pop
mov
push
faddl
pop
and
mov
jle
pop
stc
in
insl
jmp
fwait
cmc
pop
inc
add
enter
stc
shll
je
add
xchg
in
mov
jmp
leave
mov
jl
fwait
pop
ds
xchg
dec
and
dec
mov
cmpsl
dec
jb
lret
cli
out
bound
arpl
adc
mov
rcl
je
or
repnz
jl
mov
arpl
mov
xchg
jge
xor
jb
ds
pushf
inc
mov
xor
push
sub
add
mov
dec
xor
sbb
mov
xchg
sbb
addr16
push
mov
mov
fsubs
sar
lcall
mov
pop
push
jl
sahf
and
jno
pushf
es
pushf
xor
sub
les
pop
jbe
leave
adc
bnd
std
pop
in
lock
cmp
or
aad
pop
fwait
cmp
aaa
pop
sbb
jnp
dec
popa
in
push
pop
dec
xchg
clc
xchg
xchg
aas
sti
push
push
jle
in
cmp
in
cli
fdivs
xchg
sub
popa
and
dec
cld
pop
sub
inc
loopne
pop
aam
scas
sub
adc
push
or
ret
dec
push
mov
jae
in
jnp
xchg
in
sbb
mov
adc
sbb
xchg
inc
int3
adc
loop
cmpsl
jne
pop
xchg
mov
jno
in
inc
dec
and
pop
xadd
or
shl
inc
arpl
add
jbe
mov
pop
sub
mov
sti
lcall
mov
mov
clc
sahf
cmpsb
sti
or
jnp
ret
pop
sub
push
xchg
dec
mov
ficompl
js
cmp
mov
jns
test
es
and
rcll
inc
adc
dec
mov
dec
or
gs
or
nop
ret
pusha
mov
mov
jb
in
xlat
pushf
je
push
add
divl
add
push
pop
pop
outsl
in
imul
inc
inc
pop
mov
add
fmul
push
enter
int
inc
dec
dec
es
divl
and
pop
ret
shlb
and
imul
or
mov
and
cmpsl
mov
sbb
cld
sbb
cli
mov
popf
mov
push
jno
negl
loopne
int
shrl
and
inc
adc
jl
mov
jge
iret
out
fcmovb
in
ret
sbb
stc
cmp
daa
xorb
push
stos
lret
or
jge
dec
pop
scas
sub
adc
nop
mov
fldcw
sub
sub
je
mov
addr16
pop
aaa
cmpsb
outsl
dec
into
adc
js
leave
jb
or
add
xchg
imul
sub
rcll
or
jecxz
mov
add
push
leave
lret
daa
ds
mov
rcrl
inc
pop
loopne
jo
ss
leave
mov
inc
aaa
add
cmp
xor
push
enter
cmp
jge
lahf
sti
rclb
or
insl
cwtl
les
call
xlat
out
push
test
and
movq
xchg
xchg
rorb
scas
fidivrl
sbb
popl
or
daa
xchg
out
push
lcall
daa
push
ret
das
jl
xchg
jno
adc
movsb
mov
outsb
xchg
frstor
pop
push
enter
pmaxub
mov
repz
sub
mov
mov
mov
popf
or
ret
insl
js
lods
sub
mov
test
out
sbb
inc
sbb
ds
jmp
pop
adc
test
outsb
jae
dec
lods
add
cwtl
mov
sub
xor
push
ljmp
je
push
ret
add
inc
movsb
push
shrl
push
test
lea
iret
and
loop
ja
cwtl
das
rorb
jle
insl
push
sub
and
in
adc
jg
dec
pusha
mov
mov
fmuls
dec
adc
es
subl
jle
repz
mov
enter
adc
and
dec
hlt
mov
mov
sub
loopne
dec
ficoms
gs
mov
xchg
lcall
cmp
add
push
xchg
dec
into
popa
push
add
pop
add
xchg
push
pop
ret
sbbl
pop
push
xchg
inc
push
adc
mov
jbe
addb
dec
dec
push
dec
aas
jo
mov
and
adc
jb
int3
mov
loop
iret
shrd
jnp
jb
xchg
lahf
xchg
jae
jnp
movl
adc
or
xor
cmc
fsubr
fisttpl
mov
popf
lds
scas
xchg
cmc
cltd
stos
fwait
cmpl
vsqrtss
jbe,pt
aas
push
push
inc
sbb
pop
inc
jge
push
and
mov
stc
test
sahf
jp
ret
enter
xchg
jb
addr16
add
xlat
test
and
scas
adc
inc
add
cmp
lods
xor
mov
push
vpsrlq
xchg
les
dec
aam
insl
fdivrp
lret
xor
add
data16
mov
xchg
xor
dec
orb
lahf
lods
idiv
insl
sbb
fisubs
lahf
inc
enter
popa
fnstcw
in
add
sub
add
loope
imul
jmp
add
or
or
adc
mov
xchg
nop
mov
int3
insb
inc
lcall
mov
add
insl
mov
cwtl
jp
xchg
and
sbb
jo
lcall
out
cli
dec
imul
scas
adc
jbe
pop
mov
lret
in
push
pop
pop
adc
dec
dec
sbb
push
pop
mov
mov
xor
lods
cmpb
mov
call
dec
mov
into
ret
cmp
jnp
popa
push
push
mov
movsl
das
xlat
or
in
push
jae
insb
outsb
das
add
ret
sahf
jecxz
mov
nop
mov
or
and
insl
cs
ss
dec
das
cmpsl
mov
mov
sub
mov
mov
mov
push
mov
notl
or
mov
mov
movsl
jae
inc
mov
xchg
and
mov
loopne
cwtl
xchg
push
xchg
push
mov
push
mov
add
bound
fs
das
or
mov
push
dec
fwait
subl
dec
cld
ds
outsb
es
orb
dec
pop
cmpsb
cmp
fisttpll
and
xor
imul
add
xor
lock
aad
or
sub
xchg
outsb
mov
ja
pop
add
sub
mov
adc
jmp
stos
inc
xchg
mov
sbb
xchg
loope
jnp
adcb
push
xlat
scas
pop
mov
ja
mov
or
pop
push
sbb
inc
mov
jp
lcall
dec
in
push
pop
fdivl
mov
cmp
push
fistl
mov
outsl
aam
jb
int
arpl
jle
stc
xor
push
and
test
sbb
pop
pop
mov
sbb
mov
cmp
fnsave
pop
sub
cmc
out
in
mov
testb
adc
mul
andb
test
popf
cli
sub
cmpsb
stc
add
cmp
ret
popa
dec
xor
mov
jnp
sbb
jnp
jns
adc
fwait
or
xor
push
push
lret
clc
insl
mov
inc
pop
push
test
aas
stc
mov
sbb
dec
pop
or
mov
or
enter
movsl
in
dec
int
fsubr
ds
lds
adc
sti
lahf
pop
mov
and
mov
add
sbb
add
neg
adc
shl
lods
pop
cmp
das
adc
in
dec
cmpl
fistpl
stc
inc
out
mov
mov
sub
mov
push
nop
sahf
jmp
outsl
faddl
push
mov
fwait
mov
stos
test
xchg
sub
js
mov
push
mov
popa
fs
sbb
jg
pop
cli
push
inc
pop
inc
jbe
mov
adc
mov
jbe
adc
pop
outsl
pop
sahf
insb
inc
and
lods
popa
fwait
ss
lret
or
cld
sahf
jge
insb
push
imul
mov
dec
cmp
icebp
inc
jnp
cmpsl
shl
dec
mov
movsb
mov
xchg
in
fdivrp
insl
aam
fsubr
aam
xor
imul
mov
daa
popf
push
imul
movsl
lcall
jmp
mov
mov
inc
xchg
test
push
adc
jmp
lods
insb
push
jle
cmp
jmp
dec
jne
cltd
mov
cmpsb
shlb
cli
push
cmp
mov
mov
lret
repnz
xchg
xor
popl
lahf
outsb
imul
je
cwtl
out
es
or
outsb
stc
push
aad
aaa
jo
mov
push
mov
mov
mov
mov
stos
outsb
cld
add
mov
cmp
paddusb
or
mov
xchg
xor
aaa
movb
jl
add
cld
push
ja
sub
sahf
scas
aad
adc
lret
lock
pop
or
inc
jae
fs
lods
and
mov
ljmp
dec
cwtl
cmp
shrb
xor
xchg
or
jno
sub
sub
repnz
pop
mov
xor
pop
xchg
sahf
push
pinsrw
push
into
push
lods
sarb
dec
out
cwtl
xchg
jge
push
mov
push
mov
dec
inc
push
push
daa
insb
sbb
xchg
inc
frstor
adc
insb
push
lret
lods
xor
inc
cmpl
lods
add
sub
shlb
sahf
repnz
jp
rol
mov
daa
loop
mov
nop
mov
and
adc
cmp
rolb
push
adc
bound
call
add
cmp
adc
nop
mov
or
pop
aam
or
dec
jnp
inc
mov
adc
sbb
movsl
repnz
testl
je
lahf
lods
lea
pop
adc
sub
and
into
xchg
repz
pushf
mov
pop
jge
jge
cmp
and
pusha
subb
outsb
pop
shld
retw
pop
shll
ljmp
in
stos
stc
xor
mov
cmp
pop
cli
sahf
jbe
sbb
mov
leave
lahf
dec
inc
cmp
std
lahf
mov
dec
outsl
es
add
dec
mov
ss
mov
aas
insb
add
sub
or
stc
negl
outsb
sbb
mov
inc
incb
inc
mov
mov
jmp
push
std
mov
pusha
or
jg
sub
lock
or
test
inc
loope
sahf
ss
mov
pop
stos
add
push
mov
lret
mov
sarl
jmp
icebp
xlat
mov
sbb
pusha
fldcw
adc
jns
and
lahf
sbbl
pop
andb
jge
xlat
out
xlat
imul
and
icebp
pop
pop
mov
out
std
pop
add
pop
je
fstps
xor
mov
mov
jb
and
jne
pop
outsb
je
addr16
pop
lahf
inc
cmp
aam
xor
mov
pop
bound
mov
inc
or
adc
push
test
faddl
sbb
inc
xor
adc
dec
mov
xor
push
and
je,pt
sbbb
sbb
loope
dec
sub
pop
pop
repnz
fwait
xor
aaa
cmc
popa
mov
cmp
enter
lock
jmp
leave
sti
add
ret
adc
mov
aam
xor
cmp
fs
ds
add
addr16
jae
dec
and
cmp
xchg
mov
hlt
inc
pop
pop
or
or
fstp
loope
stos
add
fnstcw
sahf
stc
push
jecxz
dec
out
and
cld
adc
sarl
js
dec
dec
jge
dec
mov
mov
pop
out
je
inc
mov
and
subl
adc
push
jle
xchg
push
add
leave
jno
out
mov
or
jae
cwtl
icebp
in
test
mov
stos
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
in
insb
stc
mov
decb
ja
fs
mov
sbb
sub
dec
and
inc
sub
out
pop
cmp
shr
xor
push
cli
aad
push
out
jg
inc
fcomps
push
mov
adc
cli
gs
pop
adc
and
push
push
fwait
aam
out
xchg
sub
lock
pop
push
jae
scas
fstpl
jnp
jbe
cs
cmp
push
nop
push
fidivrl
ja
das
imulb
aaa
stos
daa
xchg
les
sti
mov
outsb
aaa
lods
shl
cmp
addr16
mov
xchg
push
inc
fldl
inc
push
dec
xchg
pop
arpl
inc
lods
dec
jb
or
xchg
mov
xor
cmp
push
pop
inc
jmp
sub
aad
stc
add
mov
cmpsb
sbb
xor
inc
in
pop
sub
jle
aaa
adcl
jno
or
pop
push
dec
mov
leave
testb
jp
test
mov
sub
out
jb
push
andb
xor
mov
push
in
fcmovnbe
fcmovu
fwait
popa
sarl
mov
int3
gs
xchg
inc
pop
pushf
lock
ljmp
fisttpl
cmpsb
or
mov
cli
ret
pop
lds
xorb
dec
nop
rcrb
shlb
std
push
pop
mov
outsb
jp
call
xlat
adc
sub
insb
sbb
test
clc
xlat
xchg
push
fistps
mov
cmp
push
scas
push
loope
jmp
ret
add
adc
roll
lock
leave
imul
aad
mov
test
xchg
push
dec
sub
testb
pop
push
neg
jbe
dec
push
out
or
cmpsb
int
scas
cli
mov
mov
dec
test
xadd
cmp
jae
fdivrl
lea
pop
loopne
pop
mov
adc
mov
popa
ltr
ficoms
fstpl
mull
stc
sbb
fcoml
insb
ficomps
inc
push
fwait
loopne
mov
cmp
dec
stos
arpl
push
test
push
push
pushf
out
pop
outsl
stc
jl
ja
add
jno
cmp
movsl
pop
repnz
inc
mov
lds
gs
cmpsb
push
inc
int3
shll
sbbl
mov
and
in
xor
push
test
mov
nop
mov
aas
dec
fucom
xchg
sub
xchg
sub
or
xchg
fbld
adc
push
push
jg
mov
ret
xchg
sub
in
sbb
test
adc
aam
imul
into
and
es
add
imul
fiaddl
repnz
inc
dec
cmpsl
inc
clc
ficoml
je
jecxz
sbbl
popf
dec
lahf
mov
out
repnz
clc
and
cmpsb
enter
xor
cmpsl
or
adc
ja
push
or
pop
pop
mulb
sub
lret
add
sub
inc
icebp
pop
aaa
cmp
out
xchg
movsb
in
mov
loopne
out
pop
xchg
push
repz
mov
mov
pop
jge
pop
into
ficompl
xlat
jno
mov
outsb
push
push
mov
mov
push
jbe
xchg
fs
aaa
call
in
test
xchg
push
pop
and
cmpsl
lods
lcall
test
cmpsl
xchg
xchg
shrl
lahf
in
push
push
xor
mov
shrb
adc
cmp
mov
pusha
stc
push
add
pop
pusha
add
nop
jle
dec
and
dec
fidivrl
xchg
pop
push
daa
in
fldcw
fs
and
adc
in
inc
adc
sub
rolb
dec
push
jbe
push
jns
cwtl
add
imul
sbb
push
bound
in
push
rol
mov
stos
push
cmp
gs
in
sti
packuswb
aas
mov
cmp
dec
outsl
jmp
mov
mov
mov
inc
lret
jg
cli
jb
push
adc
push
nop
cmp
pop
mov
xchg
jl
pop
pop
hlt
mov
ds
shl
rcrl
outsb
mov
es
aam
jmp
arpl
jnp
or
lods
inc
fwait
fs
repz
dec
jmp
mov
and
xchg
mov
cmp
jle,pt
test
push
xor
lods
call
push
outsl
xor
pop
lods
pop
cltd
mov
xor
arpl
mov
out
pop
fwait
out
and
das
cmp
test
sbbb
leave
jecxz
cmp
and
push
pop
stos
daa
leave
repnz
sbb
adc
jnp
daa
lods
loopne
pop
imul
loopne
adc
rol
ds
shlb
sub
mov
out
fidivs
xchg
cmpsb
or
ret
sub
lods
jbe
ret
stc
pop
push
shrd
scas
sbb
pop
rorl
in
cmpsl
addr16
sahf
fsubrl
pop
adc
pop
stos
xorb
sbb
call
xor
clc
jl
mov
inc
mov
notb
push
xor
in
aam
das
cmp
mov
inc
add
lods
into
sarb
movsl
sbb
jo
add
insb
cltd
adc
int3
fsubl
fsubl
imul
inc
rclb
mov
ljmp
dec
add
or
push
mov
fdivrs
and
dec
xchg
or
mov
aaa
cmc
ficoms
pusha
outsb
xchg
jnp
dec
adc
add
mov
mov
xchg
adcl
jge
or
pop
rorb
hlt
push
sbb
in
dec
iret
repnz
xchg
xlat
push
mov
sbb
in
dec
enter
and
sbb
mov
cli
dec
and
cmp
mov
mov
int
or
sbb
ss
and
sub
cld
push
and
adcb
mov
ds
push
sub
dec
scas
xor
mov
insl
dec
mov
mov
jmp
add
jg
and
mov
mov
enter
mov
mov
rcrb
sbb
pop
inc
stos
xor
in
xor
add
clc
jbe
adc
xchg
js
xchg
mov
dec
xchg
popa
ljmp
lret
sub
decl
sbb
mov
sub
jb
jecxz
jo
mov
ret
mov
ss
push
xchg
push
pop
xchg
movsb
mov
sahf
in
mov
mov
mov
je
lods
out
loope
pop
push
mov
pop
in
push
pop
outsl
xor
adc
xor
cmpl
mov
xchg
mov
ss
imul
in
mov
dec
or
pop
mov
ljmp
adc
out
pushfw
pusha
cs
pop
add
inc
mov
stc
mov
scas
mov
fldcw
fcoms
pop
add
lret
lret
lods
push
pop
popf
pop
mov
mov
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
js
out
ja
xchg
aas
scas
adc
incb
xchg
add
push
adc
inc
push
jmp
rcrl
dec
sbb
cmp
and
aaa
cli
xor
cs
lahf
or
ret
or
mov
ror
mov
mov
imul
aaa
dec
pop
mov
mov
mov
into
xchg
negl
ja
cs
mov
jle
mov
inc
int
gs
mov
or
sbb
int
gs
mov
mov
sti
je
loop
mov
dec
fadds
or
xor
mov
lods
mov
stos
lret
inc
scas
sub
dec
ud1
jnp
jp
sub
mov
imul
test
lret
sbb
push
and
int3
pop
insl
cmp
fbstp
aam
loopne
xchg
fwait
sbb
clc
cmpsb
or
xor
jb
and
push
popa
jp
ljmp
je
add
or
jle
int
cmp
sbb
sub
mov
stos
das
int3
dec
shlb
dec
sbb
inc
push
sub
rcrl
shl
or
scas
xor
cld
insl
sahf
adc
ljmp
dec
add
mov
sbb
xchg
adc
dec
or
shrb
push
cmp
out
xchg
daa
scas
add
lock
and
mov
mov
arpl
aaa
add
in
or
lds
in
push
and
mov
sub
lcall
jno
test
mov
hlt
aas
pop
pop
or
insb
lds
cs
sub
inc
clc
icebp
rep
fs
lods
mov
fistps
cmp
ds
fsubrl
int
je
arpl
xchg
jne
sti
mov
pop
inc
cmp
fisubs
fbstp
test
out
scas
rolb
and
lret
into
push
fs
or
scas
mov
xchg
jg
sub
mov
push
ljmp
aaa
js
lret
cwtl
ds
outsl
push
in
jge
sub
or
sub
xchg
xabort
and
pop
cmp
mov
inc
mov
fbld
mov
popa
jae
mov
fildll
aam
sbb
aas
and
outsl
jne
xchg
dec
mov
popa
jo
int
les
das
adc
repz
pop
mov
sbb
sub
stc
push
ljmp
into
jnp
jnp
daa
inc
imul
sbb
loopne
push
cmpb
pop
fsubs
fsubl
pop
cmp
add
bound
ja
cmp
pop
std
clc
loop
ds
mov
mov
and
out
xchg
cmp
sub
pop
lret
hlt
pop
and
add
inc
insb
add
pop
stos
inc
icebp
out
pusha
mov
push
xor
xchg
out
call
pop
insl
testb
fsubr
add
mov
add
hlt
jnp
aas
out
movsl
movb
outsl
out
mov
adc
imul
lret
mov
xor
sahf
aad
add
lret
or
sbb
mov
mov
loope
les
push
idivb
cwtl
rcl
cli
adc
es
bound
or
ret
in
xor
out
add
and
lret
mov
mov
movsl
mov
out
mov
imul
adc
jl
aas
push
and
pop
cmp
outsb
cmp
dec
adc
add
ret
jne
imul
sub
in
and
pusha
sar
mov
fstl
popf
int3
rcl
dec
mov
cli
inc
dec
push
addl
in
cmp
push
pop
sub
xor
rorb
stos
add
scas
adc
adc
stos
mov
mov
add
adc
adc
lret
and
dec
in
sbb
cli
out
test
sbb
mov
arpl
cmp
dec
mov
incb
adc
out
push
adcl
push
rclb
cmpsb
pop
or
jbe
adc
repnz
inc
inc
push
aam
loopne
cltd
sbb
jb
popf
xchg
sbb
aam
repz
mov
pop
mov
pop
scas
dec
test
fisubrl
stc
mov
std
jne
and
aam
pop
shlb
pop
push
popa
lret
aaa
mov
cmp
cs
and
jg
dec
lea
nop
sbb
mov
int
mov
pop
push
push
mov
add
mov
xor
mov
pop
test
cmp
pop
mov
sub
js
leave
sahf
xchg
mov
out
push
icebp
popa
ret
loope
ds
fs
call
bound
push
add
pop
scas
xchg
mov
sub
adc
lea
bound
or
data16
scas
jb
ficoms
and
push
xchg
enter
repz
inc
mov
sbb
mov
jbe
or
dec
out
pop
sub
lock
or
lret
xchg
in
cmp
clc
cwtl
ja,pn
sub
add
lods
mov
jecxz
inc
xorb
imul
inc
mov
cwtl
js
mov
sbb
rcll
mov
xor
jo
sbb
ljmp
inc
mov
movsl
outsl
sub
outsb
cwtd
insb
and
jp
leave
bnd
push
aas
jbe
cmp
rcrl
mov
push
cmpsb
adc
jmp
ret
in
std
lock
xor
stc
add
mov
aas
fcompl
mov
idiv
mov
sbb
mov
scas
cld
push
push
adc
sbb
cmp
cmpb
cmp
pop
inc
mov
cmpsl
fisttpll
movsb
call
or
xor
pop
cmpb
xor
jmp
js
repz
iret
and
mov
xchg
add
daa
in
rcll
push
inc
and
sbb
xchg
jns
sbb
push
enter
adc
cltd
mov
sbbl
fnstenv
push
jge
sub
add
jecxz
cmp
mov
repnz
loope
imul
add
sbbl
outsb
sbb
call
bound
adc
sub
imul
mov
lcall
mov
ljmp
mov
xchg
mov
push
push
push
pop
out
or
loope
xchg
aad
adc
test
cld
dec
nop
fmull
mov
andl
and
fnsave
pop
push
shll
inc
cmp
daa
test
imul
aas
xchg
xor
rorb
fmul
out
scas
jge
lods
das
push
sbb
xchg
or
stos
sahf
sbb
or
sahf
jl
add
idivb
shlb
push
cmp
ss
mov
dec
sub
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
or
xor
std
cmp
inc
push
jb
mov
fsts
andb
int3
or
leave
out
xor
sbb
fdivl
inc
xchg
sub
in
cmp
pusha
movb
cmp
test
out
push
in
jo
stos
xchg
push
mov
push
sti
mov
or
and
lcall
cmp
lahf
adc
mov
lcall
sahf
mov
addl
in
insl
pop
lods
dec
data16
test
cs
mov
dec
fidivrs
icebp
cmc
cmpsl
mov
and
test
xor
loopne
cld
xor
daa
push
jg
dec
mov
fildl
testl
pop
movsb
jl
or
sub
cld
xchg
idivl
iret
inc
jle
push
fsubrs
push
jbe
adc
cltd
mov
adc
ds
loop
movsb
imul
lods
loopne
jnp
insl
sbb
xor
popf
push
fwait
add
jbe
add
les
popa
push
lods
mov
mov
or
cmp
xlat
icebp
and
add
inc
xor
pop
test
push
mov
mov
stos
test
mov
adc
sbb
sub
adc
outsb
outsb
jo
imul
dec
pop
loopne
ds
mov
ja
cmp
shrl
rorb
push
stc
push
hlt
xor
sub
pop
ds
idivl
jb
gs
jmp
fists
mov
arpl
cmpl
insl
cmp
pop
in
ljmp
xor
xchg
and
xchg
sbb
adc
jge
cltd
scas
ret
inc
jmp
dec
pop
mov
daa
les
mov
imul
shlb
cwtl
insl
xor
scas
sub
dec
sbbl
fsub
adc
xchg
mov
stc
inc
dec
cmp
pushf
pop
jge
dec
std
orb
mov
jl
or
enter
xorb
xor
lcall
lock
pusha
ja
lahf
jge
sbb
mov
jno
pushf
lea
into
addr16
cli
pop
jns
inc
sbb
testb
mov
or
mov
adc
and
or
enter
out
adc
xchg
lock
sbb
sahf
sub
adc
outsl
addr16
push
subb
iret
sbb
int
mov
xchg
int
jge
daa
inc
das
cmp
mov
dec
test
inc
xor
fisubl
cmp
xchg
imul
push
testb
cmp
jne
ret
dec
xchg
and
mov
adc
cltd
lcall
jns
fldcw
lds
mov
jmp
cwtl
mov
outsl
lret
popf
iret
sarb
xor
or
aaa
mov
cmpl
cmpl
push
out
adc
addb
sarb
hlt
loop
adc
mov
int
cmp
dec
paddsw
subb
push
outsl
cwtl
test
mov
rorb
inc
out
inc
or
adc
jnp
inc
dec
sub
cmpsb
push
inc
out
test
mov
dec
repnz
fs
xchg
inc
push
jb
stos
dec
jmp
in
fdivrp
adc
fnsave
dec
push
add
out
inc
sbb
dec
sub
je
rclb
jmp
hlt
movsl
test
shl
cs
test
mov
icebp
adc
xchg
insl
mov
mov
fsubl
stc
int3
dec
add
ja
pop
dec
and
and
les
pop
add
inc
lods
mov
shl
lods
jae
sbb
add
les
ret
push
outsb
mov
test
pusha
pop
out
fwait
xor
cmpsl
cmp
out
mov
shrl
ret
nop
not
ja
and
das
jno
xor
roll
xlat
insb
in
arpl
sahf
cmp
mov
cmpl
push
scas
xchg
jne
outsl
jo
add
mov
rclb
cmp
fsts
pushf
inc
sbbb
xchg
repz
orl
sahf
jno
adc
jne
test
jge
mov
mov
test
mov
aam
lcall
mov
sub
int3
sbb
jecxz
fidivs
mov
pop
out
add
dec
repz
movsl
mov
cltd
mov
scas
pop
add
movsb
xchg
repnz
or
faddl
sbb
dec
fdivl
in
mov
fdivrs
inc
mov
pushf
push
xor
xchg
mov
popf
xchg
xchg
sub
fdivl
arpl
aas
and
fidivs
jmp
cmp
clc
mov
pop
lods
mov
xor
clc
add
pop
ja
push
cld
sbb
cmp
popa
add
ret
dec
add
mov
push
clc
imul
or
dec
mov
sub
inc
insl
adc
pop
and
add
into
cmp
inc
imul
out
divl
sub
sbb
sahf
mov
popa
dec
jae
mov
and
imul
rorl
sbb
repnz
mov
push
mov
call
jmp
add
mov
mov
xchg
or
or
addr16
sbb
push
cmp
mov
mov
and
add
stos
movsl
pop
cmpsl
add
inc
dec
mov
cmpsb
mov
xchg
adc
idiv
fs
in
pusha
add
pushf
push
push
test
sub
sbb
mov
and
scas
mov
loopne
sub
stos
orl
jnp
jae
push
dec
or
mov
inc
pop
mov
daa
sub
test
das
jge
loop
adc
repz
lret
inc
cld
shrb
icebp
inc
fidivs
sarl
shll
sbb
jmp
pop
mov
fdivs
cmp
test
in
in
in
sub
int3
sub
xchg
stos
xchg
ret
adc
data16
aad
add
sarl
sbb
push
lock
aaa
sub
sub
cmpl
test
push
in
mov
mov
lods
xchg
scas
shlb
ja
xchg
mov
add
or
popf
or
sbb
shl
out
pmulhuw
inc
mov
repz
pushf
idiv
jo
cmp
mov
scas
sbb
cmpsb
nop
sbb
cmp
inc
in
jno
pop
mov
inc
jmp
push
dec
loop
push
iret
push
push
mov
ret
push
fcoml
lods
sbb
roll
jne
mov
out
or
gs
mulb
or
xchg
les
divb
std
mov
dec
jno
repnz
push
imul
xor
ret
mov
fstpt
mov
xchg
xor
loopne
mov
jne
pop
xorl
rorb
enter
pop
add
add
dec
push
adc
call
adc
xchg
add
inc
mov
xor
pop
pop
jmp
aam
jb
pop
cmp
fcmovu
movsb
sahf
arpl
and
out
xchg
loopne
adc
call
xchg
dec
dec
into
in
pop
jo
movsb
out
cmc
mull
call
pusha
xor
xchg
dec
and
xchg
out
in
cmp
dec
jns
hlt
jne
inc
push
jmp
dec
test
and
mov
and
aad
mov
jnp
adc
mov
gs
rclb
in
sub
ret
divb
pusha
or
insl
repnz
fdivl
int3
cld
jo
pop
push
ds
ja
pop
je
and
mov
insb
push
push
xchg
lret
push
movzwl
ror
jl
jge
and
dec
mov
pop
outsl
outsb
add
xor
cld
lods
xchg
out
add
test
adc
add
clc
ret
rolb
and
loopne
out
mov
jns
lds
scas
adc
ficompl
mov
cmp
test
fsubs
and
je
hlt
sarb
enter
inc
or
xchg
rorb
xchg
lret
mov
pop
mov
div
sub
in
or
pop
inc
push
int
loope
mov
adc
addb
ficompl
test
or
lea
dec
repz
leave
std
insl
push
mov
aam
xchg
cmp
jg
jle
inc
push
add
dec
pop
aam
cltd
jno
cmpsl
out
push
mov
das
inc
add
std
push
lods
arpl
fsubr
push
int3
ja
or
or
fsubrs
push
mov
fimuls
and
mov
outsb
jae
cmp
dec
mov
loope
jg
sarb
data16
pop
dec
dec
xchg
xchg
mov
cli
sahf
inc
stos
or
jmp
fstp
cmc
sub
mov
cs
adc
ja
adc
sti
mov
fnstcw
or
lahf
leave
mov
dec
xchg
ss
and
push
lret
adc
push
dec
rcr
data16
mov
and
inc
xor
fistpl
nop
push
decb
xchg
pushf
jmp
rcrb
loopne
inc
mov
gs
ja
cmpsb
mov
sti
clc
in
lahf
in
mov
xchg
push
jg
ret
sbb
addr16
test
xchg
sub
jle
test
and
sbb
adc
mov
pop
sbb
scas
push
call
add
ljmp
mov
mov
aad
push
stos
push
fs
icebp
arpl
push
xchg
divl
pop
dec
push
pop
ficoml
cwtl
cld
fwait
push
jne
push
sbb
lea
jo
andl
push
xor
mov
ret
fs
stos
mov
adc
popl
call
mov
dec
add
sub
pop
jle
gs
mov
test
imul
cltd
jo
inc
mov
and
daa
mov
lds
push
das
dec
jbe
sbb
jbe
test
lahf
or
mov
fs
push
jns
hlt
sub
xchg
sbb
push
cmpl
mov
fnstsw
fwait
aam
sbb
cmp
fwait
fwait
xor
add
push
aad
inc
add
lock
js
shll
clc
mov
repnz
lcall
xchg
push
fwait
jne
sub
stos
inc
add
mov
xchg
fmulp
mov
sbb
popf
add
mov
jg
inc
jmp
inc
pop
pop
xchg
push
test
jl
lea
iret
fbld
out
xchg
out
cwtl
pop
iret
jg
or
dec
out
sub
inc
xor
push
mov
outsl
dec
aad
in
dec
pop
scas
jl
push
lods
xchg
in
mov
jp
dec
mov
inc
fidivl
out
sub
fildl
pop
aas
mov
push
push
mov
pop
xchg
xrelease
js
aad
push
pop
movsl
xor
or
test
out
or
ja
je
stc
push
pop
adc
stc
pop
push
inc
js
outsb
xor
mov
jbe
mov
sarl
dec
push
out
cmpsl
cmp
adcb
push
icebp
aad
cmp
adcl
xor
add
js
pop
cmp
ljmp
jnp
ss
fisubs
and
mov
pusha
jns
mov
sub
mov
pop
fcomps
jmp
cmp
fmuls
inc
rorl
pushf
push
test
aas
mov
sub
aas
xchg
and
mov
pop
stos
out
daa
mov
outsb
out
and
jo
ret
subb
insb
and
cmp
mov
dec
xchg
push
xchg
pop
push
jne
in
dec
mov
xor
and
push
cmc
pop
push
jns
push
inc
sti
rcl
xchg
mov
lods
mov
in
stos
dec
mov
out
testb
cli
movsl
mov
mov
xchg
in
push
movsl
aaa
je
addl
jns
jl
sub
int3
in
xor
mov
add
or
mov
mov
push
and
mov
movsl
sbb
je
sti
jg
push
out
pop
add
imul
rcrb
cld
dec
or
in
ror
lods
stos
dec
test
jb
inc
jns
lret
inc
xchg
popa
in
out
xorl
jbe
jnp
mov
xchg
loope
adc
or
sbb
pop
mov
stos
insl
stos
mov
mov
dec
psubw
mov
xor
aam
lret
les
icebp
mov
daa
mov
in
lock
push
fucomp
mov
mov
xchg
aad
mov
add
fwait
mov
jno
insb
out
pop
shll
mov
jle
pusha
lock
test
mov
inc
mov
cmpsb
sbb
jecxz
stos
adc
sbb
cmpl
sti
add
mov
mov
popf
pop
cmp
inc
negl
jne
fimull
icebp
sub
sub
xorb
ret
and
push
mov
int3
imul
cld
popf
adc
dec
rep
add
in
shrl
cmp
mov
out
push
das
out
mov
adc
rorl
into
fcmovnb
in
or
mov
xor
push
das
repz
ss
movsl
mov
fildl
in
push
push
int3
ret
mov
dec
ret
dec
push
mov
push
icebp
adc
lret
dec
pop
jbe
xlat
cld
clc
jb
xor
jmp
pushf
int
xor
out
pop
or
stos
xor
cmpsb
outsb
jl
sbb
bound
jmp
inc
ljmp
sbb
sub
sub
in
jecxz
mov
lea
and
inc
xchg
jg
mov
divb
cmp
push
popf
in
into
cmp
shr
fwait
sbb
out
sahf
xchg
rep
push
es
mov
int3
mov
mov
insl
mov
in
fdivl
inc
jg
jmp
out
in
rol
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
fcmovnbe
mov
mov
sets
xor
jbe
push
je
hlt
cmp
ret
inc
in
scas
mov
and
enter
pop
adc
icebp
mov
imulb
pop
stos
pop
jns
jns
sub
gs
lods
xor
sti
fwait
out
cmp
subl
scas
lret
aad
sbbb
mov
add
jp
mov
idivb
cli
or
insl
adc
and
add
lahf
in
ljmp
sbb
in
add
inc
jo
in
cmp
dec
sbb
xor
cmpsl
push
mov
xchg
popa
pop
push
pop
in
mov
lcall
sub
dec
push
xchg
push
mov
and
sbb
jg
ljmp
jae
inc
mov
jge
vunpcklpd
mov
imul
mov
sbb
hlt
push
mov
push
jg
xchg
in
sti
imul
rorl
push
or
mov
bound
jne
add
shll
movsb
scas
mov
sub
fsubp
cmp
jb
dec
xor
xlat
ljmp
psadbw
repnz
lret
jb,pt
insl
lock
std
hlt
mov
in
ret
xor
pop
mov
pusha
xor
imul
int3
pop
mov
in
repnz
xchg
push
add
add
push
or
pop
push
pop
cs
or
mov
shr
out
mov
es
adc
mov
int3
fucom
sbb
mov
aaa
mov
xor
and
inc
es
mov
mov
sbb
add
test
icebp
gs
mov
push
xchg
insb
push
add
cmpl
jg
inc
int3
jnp
es
popf
jns
cmp
sbb
xchg
add
fs
and
mov
pop
fstpt
jns
jmp
pop
sub
inc
stc
dec
repz
push
in
xchg
je
mov
or
das
int
push
add
out
lea
cmp
sub
push
xchg
pop
mov
mov
movsb
aad
xchg
and
pop
pop
mov
js
jle
push
jns
lret
popf
outsl
push
test
or
and
sti
das
pushf
adc
xchg
pop
imul
mov
push
add
aam
lahf
lret
xchg
rol
pushf
inc
pop
add
adc
lods
les
inc
cmp
movsb
push
push
and
jae
bound
mov
inc
loopne
mov
lds
adc
scas
scas
daa
test
inc
pop
faddl
movsb
mov
lods
xor
pop
pusha
add
rorb
in
add
aaa
mov
andl
push
clc
lahf
mov
call
stos
repnz
mov
push
mov
popf
incl
xchg
and
and
lahf
add
loope
ljmp
test
mov
xchg
enter
aas
push
and
mov
lret
xor
xchg
aam
jmp
jge
inc
pop
loop
mov
cmp
add
es
cmc
jno
lods
and
jne
push
rcll
shlb
in
jnp
jb
popf
jle
je
mov
jnp
xor
push
sub
cmp
jmp
in
mull
hlt
cmpsl
mov
fisttpll
in
push
jae
xor
in
mov
ljmp
jle
pop
cmp
cli
add
sbb
movl
lock
ds
ret
dec
flds
std
sbb
cs
jle
push
inc
push
cmp
mov
push
nop
jp
mov
jle
pop
jmp
in
sub
in
inc
cld
test
in
jns
dec
xchg
xchg
jp
mov
out
in
jge
sahf
dec
js
xor
xchg
sub
int3
ret
outsl
mov
dec
dec
inc
clc
add
add
or
popa
in
jb
rcr
lods
imul
sub
mov
inc
out
test
insl
xchg
pop
not
mov
inc
inc
or
lea
std
add
pop
cmpsb
jmp
push
ja
lcall
loop
push
inc
test
fdivrp
int3
insb
lea
jg
adc
in
in
jb
mov
shll
add
in
push
dec
pop
add
xchg
rcl
push
ret
rorb
ljmp
push
xchg
sahf
jno
aas
sub
ret
insl
cmpsl
test
or
jo
fs
cmp
test
push
cmp
inc
mov
inc
lock
ja
cs
push
mov
in
inc
pop
aam
fs
xlat
fiadds
mov
js
sub
or
mov
movsl
int
jge
andb
jecxz
test
sbbb
pop
std
ss
jae
adc
xor
punpckhbw
sbb
lock
lret
insl
pop
jb
jg
push
xchg
dec
inc
cmc
adc
adc
mov
lods
mov
js
lret
rcrl
cld
aaa
pop
loope
enter
sub
jae
or
lods
scas
and
pop
or
cmp
mov
or
xchg
inc
fucompp
es
in
mov
stos
sub
sub
cmpsb
sar
xchg
jo
add
loop
sbb
lahf
xchg
mov
nop
cmp
cld
xchg
push
sar
repz
imul
ret
xor
jmp
mov
pop
push
push
cwtl
and
loop
and
sbb
test
pop
xchg
out
aaa
movsl
jbe
in
mov
sahf
push
dec
daa
andl
out
push
dec
sub
xchg
xor
dec
dec
sti
push
mov
cli
fidivs
mov
dec
xor
rcr
add
xor
pop
out
jo
cli
jnp
sti
sub
lret
xor
mov
imulb
mov
add
jl
mov
arpl
cmp
jp
cmp
cs
arpl
lahf
pop
sbb
fwait
sbb
mov
xor
out
mov
repz
cmp
or
inc
cmp
mov
cmp
or
popf
sbbl
mov
mov
inc
mov
xor
push
out
jbe
fsubl
loope
aaa
orps
fs
es
aad
cmp
jp
cmp
hlt
lods
cmpsl
sbb
pop
push
mov
or
add
or
setae
sbb
push
lds
inc
add
iret
movsb
out
fcmovu
pop
jnp
inc
inc
fistpl
push
ret
rorb
in
popa
loop
test
ficoms
or
loope
pop
inc
dec
inc
inc
xor
adcb
mov
mov
xor
iret
add
pop
pop
rorb
lahf
lea
jle
aad
in
divl
lcall
sub
and
or
stc
cmp
jl
popf
push
pusha
cmp
out
mov
push
sbb
and
push
cmpsl
fs
and
or
pop
shlb
ss
addr16
mov
jl
cwtl
outsl
adc
repnz
jp
in
jnp
xor
jne
jno
cmpsb
scas
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
cld
into
xchg
stos
ja
and
mov
in
lock
je
ljmp
int3
repnz
icebp
lret
fld
leave
cmpb
dec
mov
push
sbb
sbb
sub
ja
jbe
fadd
cmp
pop
inc
jbe
sahf
mov
push
es
jb
pop
addb
rcl
xchg
cld
test
jno
cwtl
inc
negl
jns
shll
test
mov
cltd
es
aam
jb
repnz
pusha
adc
push
jns
rcr
insb
jno
mov
in
xchg
pop
jmp
jo
fwait
ljmp
xor
icebp
xchg
clc
push
push
and
int3
pop
sarl
leave
inc
std
and
jo
push
clc
mov
sahf
sub
or
xchg
pop
push
int
fisttpl
jne
add
int
fs
arpl
movsb
xor
bound
mov
lahf
sub
dec
or
nop
dec
push
les
push
aaa
mov
push
sub
xor
pop
gs
sbb
inc
sbb
sbb
mov
cltd
dec
xchg
pop
hlt
pop
orb
pop
pushf
andl
sbb
jno
and
fdivrl
sti
test
push
pop
cs
lock
lea
shrb
movsl
popl
and
mov
inc
cwtl
stos
pop
lock
xchg
aaa
jb
push
jno
popf
mov
add
scas
xor
in
inc
inc
test
push
add
inc
sub
cmp
mov
mov
mov
aas
aam
repz
call
das
leave
call
jecxz
imul
shr
push
out
test
js
into
pop
push
xchg
enter
xor
leave
sbb
mov
arpl
add
mov
paddd
inc
mov
cmpsb
push
xor
pop
pop
xor
mov
insb
flds
mov
push
xchg
popf
inc
aad
adc
adc
and
add
lahf
adc
es
mov
fwait
jne
xor
pop
shrl
enter
add
aaa
sbb
std
pop
jbe
and
cmpsb
xchg
sarb
add
and
jle
sbb
add
adcb
popf
mov
lea
mov
out
cwtl
cli
sti
fwait
outsl
hlt
stos
bound
xor
mov
sub
popa
lcall
cs
gs
or
jmp
loop
dec
cmpsl
je
dec
clc
or
push
addr16
pop
push
cmpl
adc
mov
in
es
mov
pop
pop
cltd
mov
mov
jbe
xchg
mov
cli
inc
mov
mov
ja
pop
ret
mov
fs
jae
fs
divl
jbe
imul
xchg
mov
jp
negl
push
xor
sti
fcoms
dec
sti
dec
jecxz
or
mov
or
pop
test
xchg
orl
leave
mov
and
pop
and
sub
outsl
int
aas
cld
lea
dec
push
xchg
mov
scas
in
mov
scas
out
fwait
push
add
repz
dec
inc
test
sub
insb
outsb
sti
pop
lea
adc
aas
adc
fmulp
popa
das
cmp
mov
mov
or
ss
sbb
scas
pusha
xchg
popa
sbb
leave
gs
sub
adc
push
mov
xor
xor
and
pop
cmpsb
icebp
sub
jns
xchg
jl
mov
pop
mov
xlat
cwtl
addr16
and
out
out
sbb
rol
xor
test
aam
dec
shl
out
mov
xor
jb
fcmovb
aam
xor
daa
mov
ficomps
lods
fldl
rcl
push
sub
jo
sbb
cmp
inc
pushf
test
lcall
push
fdivrs
and
dec
imul
cmc
pop
int
lds
aam
imul
mov
fimull
push
fisubl
push
out
jecxz
gs
loope
mov
dec
xor
cmp
fsubrl
sbb
mov
sarl
push
ret
mov
outsl
pop
push
mov
out
insl
jno
cmpb
stos
mov
or
notl
cld
out
or
sbb
mov
jl
jbe
jns
cmp
xchg
fistl
std
jae
outsb
jg
sub
push
int3
mov
or
shll
mov
xlat
rcll
or
iret
lret
inc
adc
pop
inc
mov
push
and
test
lret
pop
cld
stc
push
sahf
data16
mov
fnstenv
js
insl
jmp
inc
aad
xchg
mov
adc
in
movsl
sbb
mov
push
lods
sub
dec
or
enter
leave
jb
mov
mov
sti
pop
xor
test
adcl
xchg
or
iret
dec
insb
inc
aas
mov
sbb
push
or
shlb
sbb
shlb
jge
fs
shll
or
fisubl
nop
mov
sub
or
adc
ret
outsl
mov
bnd
andb
adc
lds
test
add
sti
and
scas
jno
cmpsb
jo
movaps
frstor
test
pop
test
add
mov
vmovq
outsb
push
dec
fwait
xchg
or
test
stc
xor
addb
or
repnz
add
js
mov
add
bound
addb
iret
mov
imul
sbb
je
pop
push
cmp
xor
adc
outsl
xchg
push
cmpsl
cltd
out
mov
lock
imul
xor
xor
sub
fwait
dec
mov
in
and
pusha
inc
mov
xchg
fs
enter
bound
ret
es
xchg
sub
sub
stc
adc
or
sub
fdiv
jae
jp
mov
sub
jl
fstpt
divl
jae
push
stc
mov
sti
cs
adc
mov
pop
mov
daa
xor
add
fnstsw
loop
push
enter
xor
out
push
aad
popf
adc
cmp
in
mov
lock
scas
cmc
or
stos
pop
loopne
aas
enter
aam
enter
sti
cltd
xchg
add
mov
push
int3
cld
jne
add
bound
inc
stos
xlat
add
mov
mov
xor
xorl
dec
jp
mov
jge
push
jmp
inc
xchg
cli
movsl
push
aas
pop
movsb
cmp
push
cld
jge
mov
fcoms
jmp
les
lock
test
mov
movsb
iret
out
repnz
mov
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
mov
mov
ja
in
into
mov
push
xchg
push
push
mov
sti
sub
sbb
mov
rsqrtps
rcrl
ljmp
mov
and
shr
xor
xchg
add
or
sti
xor
sub
mov
push
sbb
insb
lret
cmp
faddp
push
enter
sbb
bound
and
sahf
mov
addr16
mov
cli
aas
push
pop
lahf
imul
mov
mov
popf
jmp
fidivrs
das
push
pushw
cmp
mov
out
push
cli
and
mov
mov
out
mov
mov
gs
fdivrs
xchg
outsl
or
pop
dec
push
mov
xor
pop
mov
es
xrelease
sub
dec
packssdw
jg
es
test
or
sbb
push
or
mov
cmp
mov
push
lcall
and
fstpt
pusha
push
xor
dec
nop
xchg
push
ret
and
inc
icebp
stos
jl,pn
out
jb
scas
icebp
dec
dec
leave
mov
dec
dec
iret
dec
aas
cltd
mov
add
inc
mov
or
call
out
mov
outsl
cltd
loopne
pop
and
and
pop
mov
out
adc
mov
lds
mov
sbb
outsl
fsubrs
jbe
or
xchg
push
push
jp
mov
movsb
gs
sub
add
aas
adc
pop
mov
mov
sbb
outsb
mov
fmuls
out
popf
xor
jp
push
sub
xsavec
scas
popa
test
add
cmp
and
and
sub
add
into
aad
rcrl
test
push
sti
sbb
sti
or
add
test
decb
stc
mov
ficomps
pushl
leave
test
xchg
scas
xlat
xor
xchg
mov
or
sti
arpl
inc
add
mov
push
pop
or
test
loop
aaa
add
cmp
xchg
dec
mov
push
pop
or
gs
sbb
in
mov
adc
and
mov
sub
lds
jmp
push
imul
pop
loope
sahf
push
cltd
jns
xorl
cs
pop
pop
enter
adc
sub
arpl
push
bound
sub
aam
inc
test
aas
jecxz
aam
es
mov
in
out
inc
mov
scas
xchg
or
aas
mov
cs
and
sub
xor
or
jae
pop
stc
or
mov
lods
mov
sbb
dec
dec
mov
inc
mov
adc
sbb
aad
adc
push
sbb
pop
iret
es
stos
sbb
or
xchg
jl
data16
outsl
test
imul
and
xlat
fimuls
in
lret
in
cmp
or
add
pop
loop
shl
in
cmpsl
ljmp
mov
add
stos
mov
xchg
inc
std
mov
pop
mov
mov
sahf
into
lea
fmulp
lahf
arpl
mov
rcll
jo
xchg
mov
popa
mov
sub
je
pushf
test
sbb
xor
or
sub
cmp
mov
or
out
sbb
mov
outsl
and
loopne
cltd
dec
aam
mov
aam
xor
mov
jl
lret
inc
mov
stos
mov
jl
sub
idivl
repz
sub
mov
lcall
push
jno
mov
lods
mov
test
aas
jb
mov
mov
adc
loope
push
add
push
stos
push
mov
shl
sarl
pop
arpl
loop
adc
rorb
add
adc
jnp,pt
ljmp
push
fdiv
adc
ljmp
mov
push
jo
pop
jb
adc
xor
test
popa
jb
mov
mov
sub
push
mov
add
cmpsl
xchg
sub
xchg
ficoml
inc
mov
in
mov
ret
rep
cltd
gs
mov
inc
daa
jg
fcomps
jae
or
and
loope
jo
ror
add
fldl
xor
cmp
xor
fsubrl
jne
sar
mov
int
in
daa
push
stc
out
out
test
dec
gs
imul
aad
cmp
mov
cmp
add
je
cld
stos
mov
sbb
xor
in
sbbb
cs
out
add
pop
xchg
hlt
mov
in
mov
sbb
lret
sub
loope
arpl
inc
mov
sub
enter
arpl
fwait
mov
xlat
push
mov
add
lahf
jae
into
jle
pop
push
movzwl
xchg
xor
add
bnd
mov
test
out
push
popa
sbb
call
loope
inc
push
push
jmp
push
sub
pop
gs
push
outsl
mov
mov
mov
sbb
in
xchg
cmpsl
fs
aas
inc
jp
leave
push
popa
ss
push
xor
inc
dec
scas
add
adc
push
mov
jb
out
lods
adc
adc
out
sahf
jb
cmp
lahf
mov
mov
push
push
mov
mov
jns
jb
sbb
bound
xchg
lcall
xchg
out
xchg
jle
out
jge
mov
adc
gs
push
mov
mov
daa
std
jb
dec
shr
arpl
push
lret
enter
cltd
mov
xchg
in
sbb
xchg
xor
lret
sub
or
xor
or
xchg
push
cltd
mov
sbb
mov
fdivs
sub
rolb
lcall
shrl
mov
into
xor
insb
mov
pop
mull
scas
push
push
adc
mov
dec
jo
push
frndint
xchg
push
sub
fcmove
pop
movsl
loope
jo
inc
dec
test
scas
lods
mov
sub
xor
sub
or
arpl
subb
aad
adc
test
pop
sub
popf
xlat
aas
es
insb
ds
fwait
sbb
rcrb
fsubrs
adc
sbb
fs
popa
pop
xchg
sbb
and
inc
fildll
sub
fisubrs
aas
mov
into
test
push
out
testb
xchg
mov
mov
in
xor
in
jge
incl
mov
xchg
add
adc
test
outsl
push
testl
mov
mov
sub
and
orb
add
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
and
pf2id
iret
mov
inc
mov
cmpsl
imul
jmp
iret
mov
sbb
loopne
push
jns
vpperm
sbb
xorl
jg
movsl
dec
jle
sahf
inc
sub
dec
fdivl
dec
xchg
dec
mov
call
testl
insl
bound
xor
les
xor
enter
lds
mov
mov
gs
sbb
pop
and
pop
push
bnd
fmull
or
cmp
pusha
mov
out
lret
stc
lret
lea
inc
ret
test
scas
add
xor
fimuls
dec
xor
addb
ljmp
sub
jg
pusha
decl
xchg
mov
test
jne
and
pushf
cmpsb
loop
div
fdivl
lcall
inc
add
hlt
pop
mov
or
stos
out
jp
mov
inc
pop
movsl
or
scas
mov
fsubr
xor
fnstcw
sbb
outsl
jne
popa
das
push
xorb
sub
lea
pop
cmpsl
rorb
cmp
xor
adc
jle
ljmp
inc
ja
mov
fmull
faddp
jno
and
ss
leave
repz
popf
loope
add
imul
es
aaa
inc
adcb
pop
cmpsl
pop
daa
mov
int3
hlt
hlt
in
mov
cld
pop
xchg
cmp
inc
mov
or
cmpsl
xlat
xchg
test
rorl
xor
out
insb
popa
sbb
mov
outsb
push
int3
inc
mov
ljmp
and
mov
xor
cmc
icebp
push
into
sub
pop
andl
es
xor
sub
test
pop
fs
and
pusha
cmp
dec
es
adc
idiv
cmp
iret
je
inc
mov
or
aas
out
popf
hlt
or
jb
iret
xchg
inc
or
fistpl
lret
pop
cmp
stc
outsb
push
insb
je
push
ljmp
cmp
and
psraw
jne
negl
push
sub
mov
or
mov
jb
push
rcl
fmull
pop
icebp
dec
das
cmc
jmp
adc
dec
fs
mov
add
mov
pop
out
lret
fs
sbb
aam
cmpb
mov
aad
mov
dec
stos
loopne
es
imulb
insl
cmp
sbb
es
sti
xchg
or
aas
leave
aas
pop
inc
movsl
sbb
pop
mov
rclb
pop
lods
push
shll
jb
push
outsb
loop
cmpsb
out
test
leave
movsb
jge
jae
push
fldenv
pop
ja
add
iret
stos
pop
enter
push
mov
inc
shlb
in
outsb
loopne
call
jno
arpl
lcall
popf
insl
ljmp
bound
xlat
pop
jmp
leave
or
stos
sti
pop
arpl
ret
stc
es
mov
mov
push
int
mov
decb
jl
mov
sahf
mov
mull
xor
jp
mov
dec
cmp
cmc
sbb
pop
adc
and
jge
mov
popa
cld
jmp
cmc
sub
daa
cli
inc
add
testl
push
int
iret
push
sub
xchg
movups
pop
out
stos
adc
jg
add
aaa
pop
std
xchg
rolb
hlt
addb
lcall
adc
or
inc
mov
add
popa
mov
data16
xchg
jg
sub
mov
fists
and
ret
pop
xchg
sbb
pushf
mov
jno
subl
loopne
clc
icebp
xlat
test
adc
xor
gs
les
add
jmp
push
cmp
push
xchg
jle
imul
cli
es
mov
dec
repz
push
inc
daa
inc
sti
cmp
aam
popf
mov
dec
sbb
inc
je
nop
xor
jno
or
ljmp
movsl
outsb
rcrl
inc
and
int
sub
mov
mov
rcrb
pusha
ffreep
aad
stos
cli
add
repnz
std
xchg
and
xchg
inc
rorl
jbe
dec
in
or
jne
in
cmc
jo
inc
cltd
stos
xor
or
add
enter
les
fistl
orb
or
out
jns
lcall
mov
mov
sub
inc
mov
enter
ficomps
cltd
xchg
pop
dec
into
xorb
jae
in
dec
cltd
sbb
popf
cmp
and
xchg
aam
fistpl
mov
das
fisttpll
push
fdivrs
fdivs
in
pop
int3
xchg
lods
lods
mov
scas
rcl
fcomip
filds
movsb
jae
jb
cmp
mov
add
cmc
sbb
or
shrb
and
call
cld
fsubrl
inc
dec
stos
enter
jne
or
mov
mov
sub
pop
cmpsb
push
or
iret
in
stos
pushf
inc
mov
mov
dec
push
test
xchg
jmp
cwtl
inc
es
rol
xchg
dec
jl
xchg
ret
xchg
aam
out
lods
imul
mov
xor
mov
pop
in
mov
lods
in
jmp
mov
adc
ja
test
adc
jno
jno
xchg
xor
shlb
cmc
aad
out
popa
hlt
or
xchg
push
push
mov
clc
sbb
jbe
xchg
cmp
mov
xchg
hlt
cmp
jmp
xor
cmp
nop
xchg
subl
aam
add
add
dec
sub
les
fstps
enter
push
inc
call
mov
xlat
stos
mov
jmp
divl
jno
add
fs
or
fidivs
inc
dec
shll
fcmovnb
jge
lret
lods
rclb
and
stc
loop
cmc
sub
push
xchg
sub
cmpsb
movsb
mov
mov
mov
cld
jp
adc
jnp
ss
nop
lods
sub
push
or
lret
pop
fucomi
shll
aad
adc
loopne
mov
sub
shrl
shl
mov
cmpsl
push
in
pop
sbb
push
test
rep
dec
pushf
or
jp
xchg
loop
nop
adc
fwait
or
pop
mov
adc
jg
inc
jnp
test
push
and
mov
add
jne
or
mov
and
mov
test
and
xlat
roll
inc
or
push
cmp
or
xchg
and
lcall
stos
in
jmp
roll
jno
jnp
jge
cmc
add
imul
js
mov
xchg
sbb
sbb
inc
aas
rolb
cmp
push
push
xor
int3
inc
es
jbe
xchg
fstps
and
fdivrp
hlt
gs
and
stos
in
and
or
loopne
bnd
testb
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
shlb
ja
jnp
xchg
adc
lds
jae
mov
dec
call
fwait
dec
xchg
dec
jmp
dec
xchg
cmp
hlt
mov
sbb
daa
adc
jmp
scas
sbb
cmp
fldt
in
push
sub
add
xor
bound
daa
popa
push
adc
mov
pop
inc
pop
jb
add
and
mov
cwtl
xor
subb
insb
lods
push
shrb
pop
pop
adc
sub
xor
xchg
and
in
sahf
jle
outsl
jecxz
les
push
std
dec
inc
mov
popa
sub
and
ret
push
pop
leave
daa
lret
fstps
mov
sbb
lock
popa
addb
cld
pop
inc
addl
lock
inc
mov
lods
push
inc
fcmovne
in
popf
or
dec
ficomps
in
clc
adc
adc
mov
mov
adc
mov
and
xor
inc
sbb
inc
fcompl
add
mov
inc
dec
cmc
test
push
stos
pop
fistps
pop
fcoms
imul
into
xor
pop
mov
jno
ret
lret
sbb
push
inc
aas
jnp
in
aas
cmp
test
mov
adc
out
inc
cli
loop
insl
ret
data16
push
or
push
bound
jns
mov
dec
mov
in
pop
xlat
test
pop
addr16
adc
push
mov
notb
inc
scas
xchg
add
arpl
fsubrs
ds
enter
pusha
outsl
push
scas
push
inc
dec
repz
fxch
lret
sbb
out
adc
cmp
xchg
shrb
cli
scas
lock
sbb
sub
pop
cwtl
movsl
xchg
es
int
cli
and
movsb
ss
push
decl
pusha
push
movsl
dec
jge
add
int3
mov
test
aam
fiadds
and
pusha
es
adc
lcall
mov
lds
add
movl
mov
mov
jno
jl
movsl
ss
adc
pop
mov
lcall
mov
sbb
cmp
or
mov
cmc
arpl
out
lock
mov
cmp
mov
cmp
loopne
jl
pop
scas
rolb
and
xorl
and
pop
xchg
or
into
fiadds
pop
mov
clc
outsl
ljmp
or
xchg
pop
adc
mov
out
scas
pop
pop
jp
ja
fnstcw
stc
mov
sub
push
sbb
or
ja
inc
inc
ljmp
xor
fisttpll
insl
mov
mov
xor
test
test
inc
mov
cmp
test
mov
push
add
enter
sbb
mov
jne
nop
dec
movsb
sbb
add
pop
int
mov
mov
push
call
gs
loope
lret
das
add
fwait
and
mov
jns
jae
lret
or
cltd
push
scas
dec
push
cmc
jecxz
mov
dec
sub
mov
jae
push
in
call
insb
fstl
adc
mov
or
rep
jl
outsb
repnz
mov
jae
lods
jmp
pop
push
jae
adc
or
inc
cltd
je
push
in
es
pop
addr16
xor
mov
mov
pop
cmp
fwait
push
int
mov
push
stos
fiadds
std
jmp
jp
xchg
sub
cs
out
or
pop
sti
sub
test
rorl
xor
repz
aad
xchg
xchg
movsl
push
aas
jle
mov
cmp
in
cmp
push
jnp
in
and
pusha
js
js
dec
fucom
mov
push
pop
xchg
adcb
mov
jne
loopne
pop
test
mov
fnstenv
cmp
cmpsl
out
loop
pop
insl
jecxz
out
shlb
push
in
mov
dec
and
daa
adc
mov
or
or
xchg
inc
mov
loope
sahf
fisttps
in
mov
sub
stos
rclb
into
fs
xchg
ret
sbb
inc
xor
pop
mov
add
aaa
iret
mov
shlb
xchg
or
das
fwait
cmp
lcall
xlat
adc
out
stos
gs
xchg
adc
mov
lods
xchg
cs
aad
cmp
insl
mov
pop
pusha
or
outsl
orb
cmp
or
push
xlat
mov
in
adc
addr16
dec
pusha
mov
mov
sub
dec
fucomp
out
jl
jmp
icebp
push
mov
push
inc
icebp
xchg
fs
dec
xlat
jb
push
lcall
scas
push
lods
adc
aam
mov
or
pusha
js
mov
adc
ja
fs
pop
mov
cmp
daa
into
repnz
mov
into
jmp
adc
lret
push
sub
xor
jb
cmp
mov
addb
mov
sub
stc
or
sub
xchg
stc
push
push
sub
fisubs
dec
jg
mov
hlt
es
call
das
inc
fisttpl
pushf
icebp
pushl
dec
xchg
add
sub
dec
movsb
mov
pop
mov
adc
les
lods
push
cmpsl
mov
inc
rep
cmp
pop
sub
sub
fists
repz
outsl
inc
ret
adcb
ret
pop
nop
test
enter
mov
imul
adc
out
rcrb
or
or
aaa
rol
or
adc
fisubrl
or
sbb
out
pop
in
lods
sub
ljmp
push
rcrb
push
inc
dec
mov
and
shll
jmp
and
nop
jge
je
mov
int
jmp
pop
pop
inc
fs
ja
sbb
xor
ror
xor
in
mov
lret
pop
lahf
inc
dec
adc
lock
xchg
and
ficomps
mov
test
andl
jl
xchg
cmp
fsubrl
out
push
pop
cltd
shlb
pop
rorl
and
mov
cltd
mov
ret
mov
ret
add
and
jne
jg
jp
push
repnz
mov
xor
rclw
insl
mov
pop
cmpsl
lds
scas
mov
dec
push
cmp
in
stos
sub
add
dec
aaa
dec
xchg
ljmp
mov
mov
xor
xor
lds
icebp
repz
mov
mul
xlat
ret
iret
sbb
loope
in
add
clc
addl
cmc
rcl
stos
sbb
xchg
jle
lds
mov
sbb
in
add
mov
rol
mov
push
or
lods
mov
idivl
or
les
push
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
sahf
push
mov
ja
sti
mov
loope
cltd
jbe
mov
or
subb
sarb
mov
jp
jae
push
ss
aam
lcall
push
pushl
mov
pop
add
int
dec
cltd
sub
xor
push
pusha
add
mov
out
sub
add
sbb
scas
dec
xor
mov
stos
int
sbb
pop
mov
xchg
aam
fdivs
jbe
xor
adc
cmp
jo
add
shl
dec
aas
and
sahf
add
xor
cmp
mov
cli
popa
xchg
fcomp
xchg
and
leave
dec
mov
sbb
inc
jnp
in
mov
mov
dec
mov
push
jge
or
mov
std
pop
test
xchg
hlt
adc
add
mov
dec
sbb
add
mov
add
lds
add
xor
js
lock
in
sbb
pop
aaa
inc
movsl
mov
push
push
inc
mov
xor
lods
and
mov
hlt
das
pop
adc
adc
cmp
sar
push
pusha
jnp
cmp
test
sbb
push
and
pushf
sub
test
dec
js
pop
cmpsl
jne
jg
je,pn
outsl
mov
popf
adc
mov
movsl
movsb
sub
xchg
int
loope
aas
xor
hlt
in
push
lods
jb
jns
or
xor
int
subb
mov
mov
sub
dec
ret
cld
ret
mov
cmp
jnp
mov
and
bound
int
sti
mov
jmp
mov
pop
dec
dec
xor
mov
sub
inc
pop
dec
std
or
loop
imul
aaa
mov
inc
aaa
in
lods
scas
aad
mov
arpl
lods
mov
ficompl
pop
mov
pop
in
rolb
icebp
jnp
cmpsb
pop
jl
jg
xchg
gs
incb
es
pop
mov
sti
sub
es
jmp
jle,pn
or
dec
cltd
sbb
xchg
jae
jp
push
pop
jl
gs
mov
int
jp
adc
loopne
dec
jne
sahf
push
test
insb
push
andb
push
ljmp
daa
test
mov
jle
movsl
sub
mov
test
lods
xchg
push
pminub
add
inc
std
cmp
or
mov
outsl
and
gs
cli
imul
adc
pop
pushf
bound
and
mov
imul
or
or
mov
and
lcall
test
sbb
into
mov
adc
dec
sahf
sub
movsl
dec
add
shlb
mov
sarl
adc
mov
lds
add
push
jge
cld
pop
imul
popf
sahf
das
push
add
or
in
daa
and
jno
mov
iret
mov
scas
cmp
push
scas
jge
pop
fmulp
or
nop
pop
and
push
cmc
xorb
or
aad
ss
iret
daa
mov
shrb
sub
sbb
daa
xchg
daa
mul
jg
dec
cmp
mov
mov
mov
pop
cmp
daa
ljmp
leave
in
dec
jns
das
movsl
jmp
rep
scas
dec
scas
inc
cmp
sbb
xor
je
sahf
push
sahf
push
movsl
jg
add
inc
movsb
pushf
pop
inc
dec
mov
mov
fbstp
mov
mov
roll
sbb
test
and
sub
mov
mov
in
inc
loope
xchg
sti
faddl
shlb
mov
ret
dec
lods
jmp
sbb
jne
and
jns
push
mov
cmp
das
jns
mov
xor
or
or
xor
mov
inc
push
inc
sub
push
adc
adc
cld
push
sub
jno
fyl2xp1
testb
xchg
lock
add
cwtl
mov
adc
push
das
push
pop
mulb
lret
adc
aam
test
sbb
cmp
loop
loop
in
mov
imul
inc
clc
dec
jmp
xor
jnp
clc
mov
movsb
pusha
fcmove
fnstcw
adc
imul
fisubs
repnz
pop
ret
je
in
push
xchg
inc
push
sub
sub
add
jecxz
in
cmp
add
in
out
shrb
pushf
cmp
imul
in
rcr
divl
shrb
mov
mov
in
loop
jns
jle
push
push
addr16
scas
dec
add
cld
lea
pop
fstps
sbbl
jne
add
mov
mov
sbb
xor
lret
jl
test
jecxz
or
mov
push
outsl
ljmp
sbb
mov
shl
int
xchg
nop
stos
add
daa
mov
pop
negl
mov
or
leave
or
xor
sub
test
sub
xchg
mov
shl
iret
xchg
rcll
ja
mov
test
ret
addr16
les
les
push
mov
stos
scas
sbb
push
sub
sbbl
inc
dec
cli
jle
jle
pusha
mov
aad
add
xchg
xor
jns
sbb
dec
sub
push
jnp
mov
popf
outsb
add
in
push
arpl
push
push
loop
inc
jle
cmp
mov
mov
pusha
push
clc
mov
jae
cmp
dec
ss
mov
add
sbb
shlb
loop
in
push
aaa
rorl
out
ficoms
dec
insl
pop
popf
sub
add
nop
lods
xchg
jbe
xchg
add
push
outsl
add
rcrb
and
daa
lods
cwtl
outsb
mov
gs
add
jne
sbb
xadd
mov
popa
mov
and
mov
fmull
mov
enter
inc
gs
in
test
in
fistl
shl
movsb
push
push
hlt
inc
leave
test
cmp
jg
aad
xchg
sub
mov
xchg
or
add
cwtl
sbb
jno
and
aad
imull
inc
lea
popa
dec
insb
mov
div
push
in
icebp
icebp
scas
add
lock
call
mov
jnp
pop
outsb
push
xchg
test
test
mov
jne
pop
or
in
inc
shll
xchg
cltd
mov
adc
sbb
pop
rorb
mov
das
ret
in
in
pop
out
ficomps
mov
subb
fwait
xchg
mov
push
test
adc
fisubs
in
adc
inc
push
lock
inc
mov
or
mov
pop
pop
mov
xchg
cmp
add
pop
movsl
mov
jge
popf
adc
and
xchg
and
mov
outsb
dec
jg
ficoml
je
loopne
cmp
sti
data16
jp
dec
mov
pcmpeqw
repnz
jl
popf
xchg
mov
mov
jmp
aam
inc
test
addr16
add
and
mov
ja
into
cmpsl
pop
lret
jns
dec
push
mov
push
fdivrs
jno
pop
inc
sbb
mov
jno
shrd
xchg
cmp
cmp
push
mov
dec
pop
sbb
fidivrl
pop
cmp
lcall
repz
fs
lods
ret
roll
pop
and
das
jge
imul
ret
sub
xor
pop
stc
pop
inc
cmp
popa
fimuls
movsl
fdivr
outsl
imul
not
sbb
jns
add
sub
mov
jmp
popf
jge
insb
fadds
mov
aad
gs
mov
pop
push
inc
imul
or
cmpsb
out
loope
data16
inc
les
js
stos
xor
aas
pop
aaa
loop
jg
shll
or
dec
mov
jbe
movsb
movb
xor
ficomps
mov
fs
test
arpl
out
jne
sahf
push
xchg
mov
pop
xchg
testb
adc
neg
add
stc
jp
js
dec
inc
mov
cmp
loop
pop
fldenv
sbb
jae
into
xor
imul
pop
addr16
out
pop
cld
pop
jns
push
inc
outsb
leave
in
fisubrl
mov
xchg
movsb
stos
dec
pop
xchg
jg
sub
nop
sub
add
int3
push
icebp
pop
mov
lahf
and
nop
subps
jbe
fdivs
add
cmp
lret
je
mov
icebp
mov
mov
lcall
lods
push
pop
aam
aaa
icebp
add
and
mov
and
mov
in
cmp
shrl
mov
xchg
test
dec
stos
mov
sbb
push
into
fwait
in
mov
and
aam
fiadds
adc
sub
es
mov
fsubrp
mov
xor
mov
jle
pop
cltd
lret
loop
pusha
mov
mov
nop
sti
js
test
in
adc
out
mov
fsubrp
pop
ds
pop
mov
add
fwait
xor
stos
movsb
sub
bound
jbe
mov
es
cmp
iret
addr16
xchg
pop
push
mov
mov
bound
add
std
add
or
or
in
leave
xchg
fldl2e
and
outsb
add
jmp
cli
leave
inc
cmpsb
shll
and
scas
je
jo
shlb
push
or
in
dec
cmp
imul
andb
inc
dec
movsl
outsl
and
aad
aam
testw
das
cli
pop
nop
bound
push
dec
sub
adc
outsl
shlb
jae
inc
dec
es
je
add
outsb
and
push
jns
or
dec
push
sar
xchg
cmp
aam
sbb
ljmp
andb
push
ror
cwtl
mov
fnsave
push
pop
and
lods
and
scas
paddd
adc
mov
jg
cli
std
sti
in
dec
adc
push
mov
jns
shl
push
xchg
dec
rcrb
mov
ds
push
jo
add
push
push
and
xorl
adc
mov
hlt
and
in
cmp
int3
pop
loopne
or
jb
ja
mov
jo
cltd
sbb
mov
movsl
or
js
pushf
jmp
aaa
mov
fidivs
scas
dec
pop
sbb
dec
push
xor
mov
or
pusha
iret
add
andl
mov
inc
lret
int
dec
repnz
sahf
mov
mov
outsl
inc
sub
ficoml
mov
je
loopne
repz
dec
inc
icebp
mov
sbb
mov
ss
repz
loop
sub
push
mov
pop
ficompl
and
hlt
scas
ljmp
lcall
xchg
cmpsl
inc
loopne
je
ret
pop
cmc
and
mulb
aaa
xor
lcall
out
pop
sbb
pop
data16
ds
rcrl
cmp
and
xchg
xchg
imull
push
sbb
jns
aas
dec
lds
xchg
int
push
pop
sbb
xlat
push
mov
rcrl
repz
scas
aas
jl
ja
imul
inc
mov
pop
mov
xorl
cmpsb
enter
push
outsb
fisubrs
sti
jns
push
jne
fucomi
sbb
sahf
add
ret
pusha
lods
mov
mov
rorb
in
rclb
pop
inc
dec
sub
icebp
loope
sbb
sub
test
inc
adc
add
mov
in
pop
in
xchg
push
fimuls
shrl
hlt
shrb
es
sbb
xchg
cmpsl
xchg
movd
es
leave
mov
lahf
adc
dec
push
int
cmc
negb
mov
add
insb
pop
popa
out
pop
cmp
ret
mov
aam
stc
scas
repz
pop
pop
push
sahf
pop
imull
and
test
inc
inc
or
mov
lods
xor
les
test
aad
out
inc
loop
push
bound
pop
cli
out
shlb
je
enter
imul
adc
imul
adc
outsl
dec
je
ret
loopne
dec
sub
fmuls
pop
lods
cmpsb
inc
or
dec
psubd
cltd
mov
cwtl
xor
shrb
popf
mov
and
and
and
int3
sub
fisttps
mov
orl
or
push
mov
inc
mov
addl
adc
jno
jno
xor
sti
dec
shlb
aas
stos
mov
add
outsl
dec
sar
icebp
mov
jg
mov
mov
gs
insb
inc
cmpsl
dec
aaa
adc
scas
and
or
jecxz
subb
inc
mov
inc
test
sbb
clc
mov
cmp
push
mov
or
pusha
cmp
inc
mov
xchg
aam
pop
add
lret
inc
aas
adc
or
movsl
into
jp
dec
sub
mov
inc
mov
scas
push
aas
cmp
stos
mov
cmp
loop
jbe
es
js
repz
add
or
and
repnz
jo
inc
pop
adc
fs
sub
xchg
sub
je
push
or
push
mov
or
out
adc
pushf
pop
aad
adc
lahf
pop
clc
cwtl
pop
inc
call
rorb
xchg
xor
jnp
lahf
dec
pop
popa
cmp
sbb
push
cmp
imul
sbb
imul
mov
nop
int
sti
mov
lret
mov
adc
lcall
js
cmp
sbb
dec
mov
sbb
or
ljmp
es
dec
pop
jns
add
dec
fstpt
call
lret
mov
and
pushf
jecxz
dec
dec
pusha
imul
lea
fmuls
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
sti
pop
xchg
lock
ja
and
pusha
dec
inc
ss
pop
mov
ljmp
xchg
and
lahf
jb
in
mov
cmp
aad
xorb
pop
out
push
arpl
xlat
lahf
jne
add
cmp
shll
je
inc
filds
xorb
mov
mov
cmp
loopne
jne
gs
xchg
dec
cltd
pushf
std
xchg
loope
addb
iret
ret
ljmp
sub
std
ret
sub
call
jmp
xor
push
repnz
stc
push
rorb
push
js
into
jg
lret
inc
pop
lods
sti
pop
xor
mov
test
dec
pushf
out
jle
jnp
aas
stos
jbe
mov
and
push
repnz
inc
pop
cltd
jg
xor
test
lock
or
mov
add
js
ljmp
lea
scas
je
pop
fisttpll
xor
rolb
xchg
sbb
mov
ds
jmp
das
adc
add
aaa
mov
in
mov
pop
mov
cmp
mov
iret
test
les
in
sti
repnz
lahf
out
mov
xor
or
and
insb
xor
mov
xchg
sahf
dec
pop
mov
int
jae
mov
or
fistps
inc
jbe
inc
or
test
mov
pop
je
dec
inc
mov
arpl
lock
cmp
mov
lret
sbb
jbe
std
and
outsb
dec
in
push
mov
rclb
push
xor
push
out
nop
mov
jle
and
fistpll
push
push
sbb
aaa
scas
sbb
sub
aaa
sti
addl
int
flds
insl
inc
push
outsl
mov
inc
lret
mov
inc
ss
scas
hlt
dec
cli
jne
fcomi
std
add
push
mov
test
cmp
les
pop
nop
mov
lcall
movsl
xchg
add
dec
jns
in
aas
push
sahf
out
or
jecxz
push
jae
mov
scas
cmp
xchg
sub
into
hlt
jg
mov
mov
movsb
clc
je
shrl
xor
cmp
mov
mov
or
mov
clc
add
mov
inc
cltd
inc
repz
mov
aad
ds
dec
cwtl
mov
std
sbb
inc
ds
jns
xor
mov
push
pop
sbb
clc
push
jp
ret
ficoml
adc
mov
dec
repnz
mov
push
lcall
jmp
and
xor
enter
popf
push
sub
repz
xchg
inc
mov
test
push
dec
cwtl
ljmp
xchg
jb
pop
daa
push
gs
out
decl
push
popf
xchg
xchg
push
inc
roll
insb
and
push
out
inc
lret
aas
cltd
out
stos
or
cld
out
xor
insl
push
push
test
lcall
add
cs
stos
lea
test
loopne
cmc
js
imul
das
test
in
scas
push
stc
cltd
jae
loopw
jle
mov
movsl
mov
inc
outsb
outsl
inc
repnz
in
or
clc
lea
jnp
mov
mov
lret
xor
lock
sbb
jge
or
add
cmp
fidivs
lock
cmp
stc
inc
xchg
add
mov
gs
decl
push
push
jo
mov
push
lahf
lods
test
mov
push
jne
or
mov
enter
add
xchg
mov
adc
ret
fnstsw
pop
add
mov
movsb
outsl
xor
sti
mov
jne
cld
cmp
sbb
inc
mov
repnz
rcr
push
adc
rcl
fisttps
xor
scas
fs
cmp
jl
mov
xchg
out
gs
lods
shll
popf
cli
in
ljmp
jnp
jnp
psllw
mov
int
in
xor
ljmp
mov
ret
sti
out
test
pop
lcall
jbe
inc
pushf
std
enter
mov
and
ficoms
xor
ss
inc
ljmp
daa
repz
push
add
shrl
out
popf
xchg
sub
xchg
mov
das
xchg
mov
lahf
dec
popf
push
mov
and
mov
push
mull
imul
xchg
cmp
inc
lahf
fistps
jecxz
pop
out
jno
leave
push
daa
in
loopne,pn
and
daa
inc
mov
ret
out
cmc
sahf
lods
and
mov
mov
mov
addr16
dec
mov
xor
fimuls
mov
lea
mov
jae
or
jnp
lea
pop
push
mov
outsb
push
mov
insl
imul
pop
pop
inc
sub
sub
ja
cmp
lods
push
jg
scas
xchg
jbe
inc
outsb
fwait
mov
cmp
sbb
push
jmp
xlat
or
jmp
std
xlat
jnp
xchg
xchg
inc
shlb
mov
jb
inc
mov
icebp
into
push
inc
dec
fstpt
add
mov
rcrl
cmpsl
lods
scas
fadds
push
sti
jge
test
call
aaa
mov
or
cmpsl
add
sub
xchg
andb
lds
cld
mov
xchg
call
xor
push
mov
push
sbb
add
jbe
in
jecxz
mov
inc
cmp
cmp
cmpsl
mov
cmpsb
fdivrs
add
jo
aam
push
out
int3
fstps
jne
in
mov
xor
cld
stos
inc
outsb
xor
lock
mov
xlat
mov
jp
push
xor
adc
sub
outsb
jno
stos
or
movsb
pop
ret
xchg
imul
ds
es
lock
inc
rcl
mov
fs
sub
lahf
push
mov
jmp
push
stos
shrb
sbb
pop
mov
dec
in
inc
bound
mov
mov
out
pop
les
jae
jb
in
jmp
xchg
test
fstps
jnp
das
in
and
subl
sub
push
andl
pop
scas
cmpsb
ja
mov
dec
dec
andb
aas
xor
push
add
pop
inc
dec
in
add
ljmp
fcmovnbe
lcall
xlat
inc
xchg
mov
fistpll
dec
lock
pushf
and
pushf
jae
adc
mov
mov
push
sti
adc
outsb
aam
mov
movsl
outsb
xchg
inc
mov
mov
push
cmp
jmp
sub
jae
inc
movsl
mov
aad
in
repnz
hlt
adc
sbb
xchg
les
add
adc
add
dec
adc
loope
push
or
mov
mov
and
mov
movsl
in
subl
jg
loopne
ret
mov
xchg
dec
or
add
test
mov
or
xchg
lea
sbb
jns
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
or
sub
dec
ja
int
push
mov
add
lret
cwtl
sbb
ja
in
imul
add
pop
cmpl
sbb
pop
xchg
or
cli
or
cs
insl
fs
sub
loopne
jo
lahf
sbb
lds
andl
cmc
stos
and
jg
add
or
pop
sti
ret
jp
sub
lret
xchg
jmp
xlat
fdivs
ja
dec
cmc
mov
stos
bound
test
lcall
pop
imul
mov
adc
mov
in
pop
push
or
or
push
cmp
dec
in
adc
pop
cmp
xor
or
roll
jae
dec
inc
push
add
adc
lahf
mov
in
fstps
sbb
sbb
stos
dec
dec
sub
add
out
cmpl
addr16
loopne
pop
ss
mov
and
repnz
cwtl
or
pop
dec
add
jb
or
jp
inc
push
inc
test
test
daa
icebp
mov
or
pop
scas
mov
lret
addr16
fs
pop
into
push
push
scas
jns
adc
imul
addr16
mov
mov
cmp
mov
pop
mov
lret
fwait
shrb
mov
sub
shlb
cmp
repz
and
cmpsl
xchg
sub
jmp
push
xor
movsb
cmp
sbbb
daa
mov
push
push
xor
mov
outsl
ss
cmp
sbb
mov
mov
ljmp
dec
lods
iret
sub
pop
push
dec
push
xchg
sti
mov
popa
fnstsw
mov
xchg
cmp
xchg
and
les
das
pop
das
sbb
lea
xchg
xchg
xchg
push
mov
cmpsb
js
test
lret
xchg
push
orl
hlt
add
cmp
jg
call
ja
cmp
or
hlt
incb
add
sbb
lret
add
inc
push
or
or
jne
ja
test
xchg
sub
mov
or
xchg
mov
lea
lret
data16
push
je
je
fucomip
jbe
outsl
out
cmc
ror
cwtl
shll
out
xor
mov
stos
sub
inc
cmp
test
and
ljmp
sti
pop
in
in
xor
scas
cmp
insb
adc
test
push
insb
xchg
mov
add
fs
fs
jns
les
loopne
repnz
inc
push
sub
mov
lahf
sbb
jb
in
cmp
loope
sar
push
test
dec
mov
pop
scas
fisubl
hlt
das
xchg
jmp
push
jne
dec
pushf
xor
xlat
pop
cli
leave
fwait
mov
xchg
sahf
mov
dec
jo
sbb
cmp
or
rcrb
add
pop
int
jno
sbbl
cmp
fcom
es
or
fiadds
push
fprem
add
lods
shl
mov
mov
jmp
pavgw
adc
ja
xchg
and
mov
std
arpl
cmp
dec
cmp
lods
mov
and
jno
inc
pop
and
dec
adcb
xchg
jl
roll
add
repz
push
push
jo
out
jnp
repnz
mov
dec
aad
out
inc
pop
or
nop
adc
loope
jne
pop
scas
cli
insl
out
cli
cmp
sub
inc
in
push
jb
mov
sbb
mov
imul
mov
xor
pop
push
imul
adc
lea
mov
push
jge
cli
std
dec
orl
rclb
pop
push
and
ja
ja
in
popa
test
into
push
cmovb
leave
lret
rorl
mov
in
xor
push
and
idiv
push
das
insb
dec
mov
mov
into
cs
ret
stc
fidivrl
movsl
cmp
xor
xor
inc
shll
push
xor
pop
push
js
imul
xchg
pop
and
adc
inc
mov
jl
in
subb
and
pop
lcall
enter
pop
test
sahf
divb
imul
addr16
sbb
ljmp
sbbl
in
clc
push
dec
pop
push
adc
aaa
mov
fistpll
sub
divb
sub
adc
sbb
adc
jo
jbe
lret
fs
imul
xchg
push
mov
jbe
insb
fbld
lock
xchg
icebp
pop
or
xchg
es
mov
int
stos
cltd
xor
test
cli
bound
inc
ficoml
mov
or
aas
dec
mov
clc
dec
nop
mov
jecxz
jp
sub
sahf
mov
or
mov
mov
sahf
std
rol
lret
pop
loope
stos
rolb
pop
pop
pop
and
mov
pop
bound
xchg
mov
arpl
insl
mov
shll
enter
mov
icebp
mov
xor
les
dec
sti
popf
jnp
xchg
loope
orb
cli
inc
test
in
sub
mov
out
cld
and
aad
mov
shlb
mov
mov
lds
mov
jecxz
dec
mov
stc
sbb
mov
xlat
aam
lods
int
hlt
loopne
mov
lods
pushf
push
push
push
push
rcrl
mov
adc
das
push
cs
clc
xor
push
in
xchg
push
cld
shlb
inc
out
mov
cs
repz
stos
sti
int
fistpl
inc
sbb
cmp
pusha
xor
push
sub
clc
mov
fstl
ss
ljmp
outsl
and
iret
ret
xchg
jb
fistps
shrl
sub
shrb
insl
inc
sub
and
cmp
cmp
mov
repnz
sub
jecxz
and
inc
sub
push
std
jbe
xor
jecxz
jbe
or
jbe
or
cmc
cld
lret
jmp
bound
outsl
insb
notb
pop
das
in
mov
arpl
hlt
in
mov
jmp
xchg
cmp
ja
sub
ja
or
int
push
iret
and
mov
mov
mov
jne
scas
int
cld
push
nop
add
dec
cmp
push
pop
or
cmp
fbld
nop
fwait
pop
les
cmp
adc
in
fadd
sarb
lods
bnd
or
nop
movsb
hlt
jbe
jle
inc
push
ret
test
scas
hlt
dec
cmp
dec
ds
rorw
push
jae
test
rolb
pop
xor
adc
out
ljmp
sbb
push
cmpsb
inc
cmp
ret
add
adc
inc
int3
jo
outsb
and
sub
imul
xor
adc
or
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
xchg
call
ja
push
mov
fstps
enter
sub
pop
pushf
cmpb
push
jg
imul
cmp
leave
push
out
add
in
arpl
and
jg
add
fdiv
iret
das
xor
std
xor
lds
jge
dec
or
std
fadds
sbb
xor
repnz
jl
xor
push
nop
aas
push
sahf
sub
sub
push
prefetchwt1
pushf
pop
mov
mov
mov
and
mov
insl
jg
in
pop
or
outsl
or
lods
mov
inc
out
das
imul
insl
and
jnp
into
jmp
add
fs
imul
adc
jecxz
sbb
inc
fdiv
mov
xor
ret
or
sahf
jne
jecxz
hlt
pop
fsubl
adc
lret
mov
lea
inc
inc
and
xor
fisttpl
inc
cwtl
xchg
pop
cli
sbb
push
add
or
push
push
fs
loope
push
xchg
call
lcall
fldenv
je
roll
add
xlat
mov
adc
and
cmp
push
cwtl
jg
inc
jno
pop
fstps
mov
jge
movsl
mov
aad
xlat
pop
popf
xor
dec
pushf
pusha
outsl
cmp
sbb
fldl
lods
movsb
cwtl
das
push
jb
push
or
dec
push
das
xor
dec
mov
faddl
icebp
xlat
ffree
icebp
inc
inc
stos
fwait
mov
repnz
push
sub
dec
cli
jno
xchg
fidivrs
pop
into
push
sbb
cmp
push
sbb
subb
aaa
ret
mov
push
lcall
sbb
xchg
mov
cmc
lods
in
pop
dec
or
stos
sub
insl
inc
xlat
pop
lret
dec
adc
fdivs
cmp
xchg
pop
inc
ljmp
fwait
popf
bound
jnp
je
xor
cmpsl
mov
out
xchg
in
mov
enter
call
pop
push
mov
jmp
sub
fsubrp
xor
icebp
xchg
push
mov
movups
mov
cmpsb
adc
out
add
mov
inc
and
ret
push
sub
icebp
aad
in
add
std
repz
loope
push
iret
sbb
out
pop
cli
mov
sub
xor
pop
adc
cli
movsl
xlat
cmp
pop
add
push
lcall
push
jp
pop
xlat
xor
adc
pop
andl
dec
jns
xor
adc
js
nop
lods
add
mov
pushf
xchg
leave
cmp
fcompl
mov
mov
xor
cmpsl
sub
pusha
xlat
lcall
dec
pop
push
fwait
ss
push
pop
int
jno
movsb
or
outsl
cmp
dec
inc
outsl
rcrb
and
pop
js
jnp
scas
std
sti
push
push
push
mov
dec
cmp
gs
popf
sti
jns
loope
stc
mov
push
clc
push
repz
add
dec
aam
pop
jecxz
push
mov
repnz
dec
xchg
adc
pop
pusha
lock
shrl
les
inc
js
ja
mov
dec
and
cmp
das
std
xlat
lods
lea
rcl
cli
mov
pop
mov
add
sbb
jno
cld
add
mov
xchg
pop
xchg
fnstsw
idivb
sbb
imul
popf
sub
adc
shlb
loope
inc
xchg
push
cli
orl
mov
pop
je
arpl
hlt
sub
fwait
dec
lret
mov
push
push
jg
popa
fistps
dec
mov
add
dec
push
sahf
int3
int3
mov
sahf
movsl
sbb
stos
xor
pop
pop
lret
cltd
mov
arpl
inc
xor
inc
fidivl
xchg
mov
or
lock
fstl
sbb
lds
cmp
add
je
inc
je
popf
or
and
jg
mov
xor
mov
jecxz
or
sar
adc
loop
pop
xchg
inc
dec
in
mov
jecxz
hlt
scas
ja
cmp
mov
and
sbb
mov
cwtl
inc
adc
out
repnz
stc
loopne
lret
xor
cmc
pop
push
mov
movb
adc
testb
dec
sub
mov
and
cmp
dec
daa
arpl
mov
ss
sub
in
pop
cmp
leave
jns
inc
jp
into
push
negb
sbbb
es
mov
loope
leave
or
js
dec
adc
mov
lods
push
scas
push
add
push
cmp
mov
fbld
cmp
das
and
and
pop
cmp
sub
je
xchg
mov
lods
imul
jbe
sbb
js
ds
mov
and
jne
mov
lock
movsb
xor
movsl
jmp
insl
sti
stc
jbe
cld
sbb
jb
cmc
rclb
sub
imul
movsl
sub
or
mov
mov
push
test
in
mov
cmp
fs
sbb
jb
pop
xor
loopne
add
dec
ja
int3
not
sub
je
add
fwait
jnp
dec
leave
lods
nop
or
out
clc
pop
iret
fadds
loopne
jae
pop
pushf
dec
enter
rol
dec
add
imul
out
sub
ss
out
push
adc
adc
ss
fucomp
adc
jno
repnz
sbb
cmpsl
hlt
lods
mov
inc
fneni(8087
cmp
mov
and
adc
in
scas
cmp
cmpsb
loop
jns
sti
fs
xchg
hlt
loop
int3
daa
add
scas
dec
test
jge
push
mov
lcall
daa
add
sbb
and
cwtl
push
psubsb
push
call
pop
shll
or
outsl
bound
xor
je
fs
and
cmp
gs
movsl
cmpl
and
jo
scas
fistpl
testl
les
push
push
jb
bound
jns
hlt
pop
insl
pop
outsl
dec
sbb
pop
rorl
and
dec
outsl
mov
push
movl
jne
sahf
sub
jp
movlps
mov
lret
sub
fs
mov
jecxz
imul
imul
daa
fwait
sbb
cmc
cltd
mov
xor
push
jb
xor
std
mov
jl
icebp
cld
push
cli
mov
add
shl
adc
cli
cmp
mov
xor
inc
adc
jns,pt
aam
insb
fistps
aas
mov
jbe
into
out
jecxz
mov
enter
jb
and
mov
cmp
mov
stos
jle
lahf
pop
xor
and
test
ja
js
enter
mov
out
mov
sub
pop
sub
js
adc
es
fcompl
xchg
ss
sub
mov
pop
gs
xor
mov
dec
notb
in
in
out
ror
pop
adc
popf
jg
or
movb
inc
les
or
in
sbb
addr16
nop
int3
sbb
jbe
push
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
addr16
ja
ja
push
icebp
push
add
mov
in
xor
mulb
or
fwait
data16
xor
sti
out
inc
xchg
and
mov
scas
fwait
lock
xor
push
sbb
push
shrl
adc
iret
push
mov
inc
mov
cmpl
lock
jecxz
aas
push
add
dec
push
xor
pop
add
enter
and
xchg
addr16
mov
pop
mov
loop
xchg
xor
inc
lahf
lods
xchg
cmp
stos
out
icebp
pop
in
rclb
or
loopne
and
mov
jae
dec
sti
jne
pop
mov
mov
push
xchg
ret
js
push
outsl
into
fcos
jbe
xchg
add
pop
mov
aas
loop
cmp
push
lahf
mov
mov
loope
je
pop
lea
mov
sub
jge
add
push
rclw
in
sub
adc
lods
es
int3
imul
pop
mov
mov
data16
adc
jae
mov
xor
dec
inc
adc
mov
movb
cmp
cmp
lods
inc
pop
scas
cmpsb
mov
movsb
in
mov
sub
repz
dec
pushf
in
imul
fisttps
out
add
popa
lcall
sbb
inc
push
pop
leave
pop
mov
cmpsl
push
push
xchg
les
pop
lcall
iret
xor
pop
aad
stos
inc
in
xor
rorl
das
push
scas
push
push
mov
cmp
mov
out
lods
xorb
ret
mov
xor
push
jns
es
pop
pop
sbb
or
mov
inc
div
inc
loopne
enter
rclb
sbb
loopne
clc
hlt
out
outsl
xchg
xor
rcll
enter
dec
stos
pop
sbb
push
out
shl
push
sub
mov
xor
cld
and
mov
xchg
add
je
loopne
xor
fadd
pop
mov
push
ljmp
inc
pop
rorl
nop
xchg
testb
push
imul
push
mov
loopne
sub
ret
fisubl
scas
or
aam
pop
xor
jo
and
push
outsl
in
pop
addr16
hlt
movsb
inc
xchg
push
mov
mov
pop
movsb
sub
aam
test
ret
shrb
out
dec
aam
aam
shll
test
xchg
sbb
sarb
pop
rcrb
jmp
sahf
add
sahf
fbld
sbb
cmp
mov
mov
mov
and
out
add
jb
lret
fildl
jno
add
subb
out
jnp,pn
xor
cmp
cwtl
out
sarb
push
sbb
add
jmp
shr
pop
dec
mov
inc
stc
mov
ja
addl
mov
mov
inc
mov
sbb
ds
pop
sub
pop
xchg
inc
ljmp
fildl
cmpsl
push
push
cmovae
test
lahf
lds
lods
xchg
sub
mov
sub
xchg
xchg
insb
mov
std
or
adc
lcall
mov
adc
andb
fildl
lods
dec
hlt
add
loop
cmp
mov
push
lar
dec
xchg
sub
fstp
ljmp
adc
jmp
lea
cmp
dec
mov
jae
imul
test
flds
std
lea
sub
bound
repz
inc
cmp
xchg
mov
testb
xchg
mov
loop
std
lret
mov
sti
loop
pop
cmp
push
leave
addl
jle
adc
fisttpll
fldl
jecxz
loope
or
movsb
mov
sub
push
mov
xor
jae
adc
fxam
loope
pop
in
gs
ja
inc
cmp
inc
in
rclb
inc
shl
fcomps
lret
sti
mov
mov
add
cmp
sub
hlt
cmc
nop
pop
dec
sub
scas
sub
div
cwtl
lahf
inc
or
ss
js
movsb
les
movsb
popf
push
mov
push
and
jo
push
dec
add
push
movsl
js
or
jge
arpl
popa
mov
in
or
add
aad
iretw
xchg
push
cltd
int3
adc
out
push
pop
mov
push
mov
add
mov
movb
in
je
sub
push
mov
mov
jns
pop
test
dec
dec
stc
or
jp
jnp
xchg
scas
cmp
xor
imul
mov
xchg
cltd
cmp
int3
andl
mov
and
cwtl
stc
enter
and
ds
jmp
mov
dec
xlat
pop
mov
js
jo
mov
jge
mov
imull
lock
idiv
and
cmp
lock
mov
xchg
mov
js
aaa
pop
mov
pop
jnp
stc
in
imul
xchg
mov
xor
lahf
xchg
fwait
pop
jl
pop
cwtl
imul
cli
jmp
mov
mov
add
or
dec
xchg
out
sub
cmp
pop
test
lock
and
shl
xor
push
vmwrite
out
test
jb
mov
inc
inc
les
xlat
mov
dec
jle
xchg
and
jle
ss
sar
cmp
sub
pop
pop
arpl
xor
out
jp
mov
in
pop
ljmp
lods
das
mov
clc
push
pop
mov
and
sbb
loopne
outsb
negl
push
pop
sub
xor
and
push
add
xchg
lahf
adc
in
out
data16
daa
movsb
test
push
and
jle
insl
xchg
inc
mov
xchg
aam
sbb
sub
stc
negb
hlt
dec
sbb
loopne
xor
and
push
mov
enter
loope
jecxz
roll
or
push
xchg
ja
inc
repz
movb
arpl
scas
je
or
loopne
push
push
test
inc
pop
push
xor
in
pop
push
testl
mov
pop
sub
lock
adc
call
xorb
push
xchg
movsl
pop
mov
adc
or
arpl
test
movsb
sub
xchg
cli
pop
dec
insl
pop
cmp
out
xchg
lahf
insb
popf
xorl
inc
inc
push
push
fs
lret
es
daa
fsubrs
push
mov
pop
mov
mov
xchg
inc
mov
push
out
push
xchg
das
shufps
and
pop
sbb
ret
inc
adc
ljmp
mov
mov
mov
mov
dec
movsb
insl
push
testb
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
pf2iw
xor
fmuls
imul
pop
pushl
daa
sub
sbb
adcl
mov
cs
pop
jge
push
dec
arpl
and
ljmp
or
cmc
mov
pop
xlat
das
subb
and
test
test
cmp
jo
mov
pop
lock
pop
aad
fucomp
call
rorb
xor
jo
add
movlps
js
pop
xlat
ss
test
add
or
cmc
ss
aad
mov
movsl
loopne
lods
cmp
mov
xchg
stos
jae
push
test
xor
pop
jecxz
mov
in
rcrb
cwtl
sub
hlt
lods
mov
or
mov
adc
inc
ljmp
add
dec
push
test
cmp
xor
test
mov
imul
inc
push
dec
push
insl
cmp
xchg
cs
imul
rorb
add
andb
subl
lahf
sahf
addr16
xchg
push
stos
dec
xor
fs
inc
adc
dec
sub
push
es
ja
std
mov
aas
inc
addr16
sar
jae
pop
in
rcll
scas
jbe
jg
sbb
and
push
mov
fwait
orb
inc
daa
or
loopne
fisubrl
sbb
lahf
jg
es
xor
cwtl
mov
loop
test
int3
xchg
and
ficomps
or
and
xor
mov
push
repz
popf
sbb
scas
inc
mov
scas
int
inc
pop
stc
push
dec
mov
fcoms
leave
adc
inc
push
mov
jbe
into
adc
add
add
inc
es
ljmp
mov
mov
cmp
jmp
ljmp
sub
aaa
jmp
jnp
pop
cmp
push
push
dec
inc
lret
test
dec
pop
pop
outsb
out
or
pop
sub
jmp
jle
jge
sub
lds
subl
retw
mov
pop
sub
clc
fcom
les
adc
lret
jp
fidivs
lea
inc
test
push
jbe
mov
call
ror
lcallw
sub
pop
addr16
lock
fstp
popf
push
pusha
sahf
xchg
into
jmp
into
arpl
cltd
pop
pop
xor
je
mov
mov
push
sbbl
cwtl
jg
push
stos
pop
stos
add
and
pop
ja
mov
jecxz
push
dec
scas
jg
std
rolb
lret
popf
pusha
movsb
insb
push
aas
xchg
cmpsb
mov
mov
adc
loopne
fwait
jne
repz
aam
fcmovu
inc
lret
cli
and
movsb
aaa
dec
mov
in
stos
mov
or
stos
xor
xor
xor
movsl
sbb
adc
enter
repnz
xor
neg
xor
jne
push
lods
pop
cmp
icebp
jnp
add
dec
ficompl
dec
mov
jmp
jns
cmpsb
adc
lds
mov
aam
xchg
cmp
mov
shlb
sbb
ljmp
stos
call
fstp
test
out
push
cli
pop
jecxz
inc
or
inc
xor
push
roll
dec
aam
xor
fldl
lock
mov
push
inc
mov
mov
mov
mov
xchg
and
std
pushf
notb
enter
fildl
or
jno
xor
xchg
fxch
test
push
inc
clc
push
dec
jae
adc
push
cmpsb
dec
sahf
mov
imull
rcrb
pop
in
inc
out
inc
pop
adc
popf
dec
inc
mov
popf
gs
jl
cld
mov
leave
div
rolb
aam
push
pop
jmp
dec
add
pop
xor
jo
xor
push
fistl
les
inc
les
addl
mov
dec
mov
jns
dec
andl
jns
xchg
jae
mov
xlat
fstpt
jle
lea
xchg
adc
ret
sar
jo
int3
adc
and
sbb
enter
push
dec
and
mov
dec
lock
jnp
cltd
movsl
xlat
gs
mov
fcoms
int3
imul
repnz
mov
mov
mov
xchg
inc
cmp
iret
mov
dec
cmpsl
ret
iret
sti
ljmp
and
nop
sbb
sbb
pop
or
divl
jns
mov
adc
or
mov
push
jo
adc
out
int3
sub
mov
cmp
pop
mov
add
mov
xchg
jb
sub
out
data16
push
or
cltd
inc
loope
add
xorl
push
adc
pop
push
cmc
fcmovnb
mov
push
popf
add
cltd
sbb
movb
shr
adc
mov
pop
or
outsl
jg
sbb
xchg
mov
aaa
or
imul
arpl
int3
mov
ret
lods
jp
stos
pop
cmp
aas
aam
mov
xor
popf
sbb
dec
cs
pop
in
popf
or
les
jle
lcall
lods
lods
push
push
das
push
repz
lret
outsl
out
icebp
hlt
aam
cmpsb
repz
cmp
jns
xchg
mov
dec
fst
das
xor
dec
xlat
mov
inc
jo
xchg
cwtl
sub
sub
in
fcoml
pop
lret
mov
orb
movsb
cltd
xchg
cmp
cltd
and
pop
mov
jno
xchg
ja
push
fists
stos
xchg
push
test
test
cmc
pop
add
add
fstpt
in
outsb
fisubl
mov
jmp
aas
popf
adc
cmc
clc
sub
lock
sbb
and
push
pop
xor
and
fstpt
inc
add
popa
fistpll
mov
mov
fwait
scas
divb
inc
pop
cltd
std
sub
pop
nop
fcmovb
cmc
adc
ljmp
pop
jmp
sbb
arpl
push
dec
add
hlt
xor
xchg
jbe
repz
dec
push
fcomps
std
mov
or
sahf
inc
jb
mov
mov
lods
enter
es
dec
stos
jg
cmpsb
iret
std
popa
adc
jge
sti
pop
out
pop
pop
ret
imul
jmp
pop
mov
xchg
pop
data16
lds
scas
rcrl
inc
mov
sbb
pop
sahf
or
xor
jae
clc
dec
bound
cmp
pop
cmc
in
lret
and
or
xor
or
dec
mov
in
and
clc
push
pop
jl
loop
aas
sahf
mov
iret
inc
jl
jle
shlb
push
loope
outsl
push
mov
xor
jns
mov
mov
mov
mov
pop
testb
mov
loop
pop
sub
and
push
adc
dec
fists
mov
nop
repz
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
gs
fs
adc
and
scas
pop
add
ret
add
shl
idivb
push
sbb
and
repz
loop
lret
addr16
mov
or
pop
nop
and
jo
cmp
outsl
xor
adc
mov
cmp
and
sub
inc
popa
or
repnz
pop
in
mov
mov
sbb
and
and
lds
or
andb
fidivrl
push
xchg
aas
xchg
imul
mov
stos
pop
pop
mov
and
xor
std
cmp
lret
sbb
vphadduwd
scas
or
adc
or
adc
test
mov
mov
stc
jmp
mov
inc
rcll
dec
orl
loopne
push
and
mov
mov
xchg
dec
ror
sbb
mov
popf
int3
ljmp
outsl
loopne
xlat
and
push
xchg
orl
es
lret
xor
mov
fnsave
cmc
aad
test
push
frstor
lods
outsb
fisttpll
iret
adc
adc
mov
fistpl
dec
dec
jle
rorb
pop
pop
insl
mov
inc
sahf
imul
or
movb
cmc
sbb
xlat
xor
shl
pusha
mov
mov
arpl
fucom
xor
sbbb
xor
sarb
js
cmp
xchg
aas
insl
sbb
leave
je
jmp
in
movsb
call
or
inc
pusha
add
xchg
sub
popa
sub
cmpsb
pop
into
repnz
jp
dec
movsb
pop
sbb
dec
nop
scas
xorl
mov
cmpsl
out
mov
out
fdivr
sbb
aaa
add
push
lret
dec
in
xchg
push
or
mov
mov
and
dec
stos
out
shll
fcoml
jo
push
adcb
and
icebp
dec
fistl
sbb
pop
cmpsb
xchg
push
mov
rcr
pop
sbb
aam
pop
xchg
jae
xor
lahf
xchg
cwtl
sub
xchg
popa
jp
insb
dec
inc
sbb
xchg
les
mov
mov
popa
mov
mov
inc
pushf
out
mov
out
adc
adc
ret
cld
lret
movsb
xchg
mov
or
sub
dec
sub
cwtl
pop
in
loopne
out
push
dec
idiv
sbb
mov
xor
negb
mov
and
fnstcw
mov
loope
sbb
push
lret
mov
dec
dec
adc
loopne
mov
push
mov
test
xchg
pop
and
xchg
shrl
inc
mov
sti
adc
enter
xchg
cmp
in
pop
aad
cmp
sbb
push
add
hlt
in
dec
repnz
in
jne
sbb
and
ss
sbb
stos
add
mov
inc
push
pop
sub
roll
or
inc
lds
int3
adc
pusha
inc
adc
mov
out
jo
daa
andl
fwait
or
cwtl
filds
shrb
sti
fs
push
cmp
outsl
pop
push
test
push
sbb
movsb
nop
inc
lea
sub
cmp
call
sub
mov
pop
lahf
subb
movsl
sbbb
xchg
sbb
out
repnz
mov
scas
js
sbb
les
in
mov
dec
lcall
icebp
std
inc
movsb
bound
sbb
shrb
sub
dec
and
jne
ljmp
and
xlat
mov
inc
mov
or
lret
mov
jg
adc
lret
adcb
lahf
adc
adc
lahf
or
xor
out
xorl
jbe
mov
jmp
mov
movsl
cwtl
xor
jmp
push
mov
cmp
mov
and
mov
mov
or
and
xor
in
aad
jmp
ja
icebp
xlat
inc
and
mov
out
mov
cmp
test
dec
pop
sbb
repz
std
cmpb
mov
popa
mov
mov
jl
jmp
mov
out
sbb
loop
inc
fildl
and
cmc
mov
fcoms
xchg
cli
repz
mov
adc
mov
call
inc
in
add
es
into
xchg
mov
clc
cmpsb
sahf
imul
repz
sub
cmpb
inc
xor
add
in
push
mov
push
mov
mov
and
sti
out
sbb
inc
ja
shl
dec
in
add
test
lret
fwait
sbb
jge
pop
cmp
adc
cmp
sub
mov
cli
or
popf
int
stc
es
mov
xchg
xchg
popf
xchg
lahf
sub
ds
cli
into
cli
fisttps
sub
push
aam
and
cmp
ss
adc
sub
jns
push
or
xor
pop
inc
je
aaa
lret
add
xor
mov
dec
mov
outsb
out
insb
mov
push
or
xchg
pop
imul
sub
inc
pop
adc
fwait
sbb
insb
sahf
inc
pop
test
jns
imul
lods
inc
mov
mov
mov
out
inc
jnp
xor
pop
ja
je
push
jno
push
outsb
push
adc
fsubrl
sar
call
nop
xchg
mov
icebp
loope
lcall
mov
stc
add
or
mov
in
notb
cmp
and
add
adc
mov
dec
insb
mov
sub
insl
out
sbb
and
add
in
test
movsl
hlt
icebp
outsl
out
xor
mov
and
cmp
push
sbb
jle
sub
xchg
pop
not
mov
dec
jns
imul
dec
sahf
lahf
popf
dec
and
jg
jg
in
push
sbb
aaa
cmp
rsm
stos
not
push
jp
push
cmc
xchg
sahf
out
cld
xchg
nop
cmp
or
sti
cmp
push
fdivr
test
push
mov
pop
mov
lds
dec
in
jp
mov
ficoms
inc
repz
repnz
lea
lcall
mov
lea
mov
mov
push
cmp
ret
add
lock
ret
sbb
inc
push
std
add
push
fcmovbe
or
mov
adc
cmp
iret
aaa
cmp
daa
cmc
pop
xchg
out
int3
ds
data16
bound
cltd
sbb
sub
mov
mov
lcall
xor
push
dec
sbb
mov
shlb
dec
test
add
mov
mov
jae
insb
out
dec
pop
jo
or
negb
enter
jbe
call
in
lcall
xchg
mov
ret
out
mov
and
cmpsb
clc
push
or
mov
xlat
rcl
cmpsl
xchg
fldcw
add
add
popa
xchg
mov
adc
inc
adc
test
ret
or
test
push
mov
mov
mov
jmp
push
mov
adc
xchg
jnp
pop
add
ja
and
mov
xchg
sub
add
test
aad
inc
sub
aas
jb
push
inc
add
adc
mov
fimull
andl
sub
pop
xchg
dec
inc
xlat
fsubrs
xchg
ret
or
out
rclb
out
test
inc
and
pop
jno
xchg
js
sub
rol
push
repz
cmc
pop
out
sbb
sub
unpckhps
mov
cmpsb
andb
test
add
mov
sahf
sarl
adc
push
mov
add
pop
xchg
outsl
cmc
pop
js
inc
cmpsl
pop
and
xchg
sbbl
je
aam
clc
fidivs
mov
xor
mov
cmpsb
push
test
out
xor
in
fcompl
lock
insb
jo
xchg
mov
xchg
in
cli
in
jnp
es
test
or
fnstsw
jo
loop
mov
push
bound
das
adc
pop
enter
fsubs
jnp
out
jg
addl
fstpl
in
mov
sub
xchg
daa
or
insb
icebp
xchg
out
repz
hlt
mov
adc
mov
push
push
popw
adc
loopne
out
gs
mov
or
mov
mov
rolb
push
add
or
mov
lea
mov
movl
fbld
jmp
dec
mov
test
xchg
cmp
lret
sbb
pop
xlat
inc
pop
cmp
test
add
fistl
sub
test
sub
or
adc
mov
icebp
inc
pop
jle
dec
arpl
enter
inc
in
sbb
xchg
xor
jae
push
jp
mov
arpl
icebp
inc
xor
jo
dec
mov
push
push
outsb
xorl
add
lock
xor
inc
test
mov
mov
negl
sbb
add
popf
scas
std
inc
mov
xor
push
pop
dec
stos
dec
jb
push
dec
addr16
push
in
insb
js
aad
fmuls
or
ret
icebp
cmp
aad
cmp
sbb
fstpt
push
je
sub
into
lgs
cmc
dec
xor
ss
idivl
add
mov
cmp
out
sarb
scas
add
push
aaa
mov
fs
subl
mov
push
xchg
pop
jle
push
dec
hlt
int3
push
jg
and
push
cs
adc
fwait
das
dec
testb
addb
pushf
push
jg
jns
push
dec
dec
test
mov
jbe
loopne
xlat
add
xchg
out
dec
xor
outsb
fdivs
movsl
loop
mov
pop
in
add
dec
aas
or
je
addr16
leave
xchg
insl
test
les
aas
add
and
dec
push
dec
mov
cwtl
imul
pop
jp
std
jbe
sbb
cld
sub
out
adc
lcall
cltd
enter
inc
scas
and
mov
mov
int3
pop
aad
jae
or
push
jne
xlat
cmp
xchg
push
adc
in
cmc
cmp
dec
xor
xchg
xchg
add
out
popa
out
and
inc
mov
push
ret
test
fmull
aam
stos
in
fstpt
adcb
imul
push
insl
push
inc
sub
shlb
xchg
mov
push
enter
and
push
and
fistpl
inc
or
pop
mov
movsl
adc
xor
jge
push
sub
dec
mov
loop
fsubs
int3
inc
or
push
mov
xchg
xchg
test
or
shr
cli
fnstcw
test
movsb
push
shlb
in
xor
jne
sub
ret
push
sbb
push
test
pop
in
cmpsl
add
and
lret
mov
pushf
mov
out
movb
dec
and
pop
lods
test
dec
mov
inc
add
mov
xor
int
adc
or
xchg
and
fildll
and
or
adc
aad
xlat
push
daa
jns
sbb
inc
pop
stc
and
rorb
pop
mov
outsb
arpl
cmp
mov
lods
inc
mov
sub
pop
adc
les
add
enter
arpl
incb
ss
lods
and
jmp
adc
loop
mov
insb
or
push
arpl
jmp
push
sti
sbb
ud1
imulb
inc
xor
ret
rorl
push
cmp
lret
jnp
mov
cli
add
lret
mov
xchg
aas
and
loopne
popf
ficomps
inc
mov
dec
inc
mov
cmp
sbb
fistps
sbb
loopne
sbb
les
xorl
push
fiadds
subb
out
pushf
mov
scas
sti
mov
push
xchg
lock
mov
popf
pop
fildll
lds
stos
push
enter
lcall
cwtl
inc
jge
test
mov
add
bound
rcrl
pop
jbe
pop
aaa
lea
adc
sub
mov
xchg
push
lret
movsb
gs
adc
mov
lds
mov
jl
filds
xchg
rcrl
imul
stos
xchg
ds
imul
inc
add
insb
push
jl
popf
imul
test
jge
ss
or
xchg
xchg
lahf
dec
jae
cmpsl
lea
rol
and
and
insl
das
mov
xor
jno
push
push
cmp
mov
adc
add
jmp
stos
xchg
gs
cmpsl
and
js
test
fcmovnbe
mul
mov
aam
loopne
insl
cwtl
addr16
push
test
pop
or
xchg
lods
sbb
mov
jg
subb
sbb
push
pop
pop
test
xlat
and
sbb
mov
inc
dec
lret
les
cmc
in
sub
call
repz
inc
lods
push
mov
aam
stos
enter
arpl
push
hlt
cli
push
sub
cmp
shll
push
je
push
mov
scas
mov
outsl
inc
and
mov
std
popa
xchg
iret
jne
push
insl
mov
je
cs
shlb
xchg
insl
ficoms
arpl
push
sbb
dec
push
push
pop
aaa
aas
and
xor
inc
xor
ret
fsubr
ljmp
and
iret
inc
insb
jge
and
clc
into
fnstenv
imull
mov
mov
call
sbb
lret
xor
aaa
fldt
cmpsb
push
cmpsl
xorl
jmp
push
decw
js
push
sti
dec
sub
mov
push
dec
rol
sub
sti
ja
mov
mov
frstor
mov
mov
in
xchg
fs
imul
push
stos
adc
fadds
add
cmp
adc
mov
test
xchg
repz
xchg
sbbl
dec
inc
mov
test
mov
adc
mov
push
fdivs
fwait
inc
cmp
test
sbb
and
jno
jb
mov
or
orl
sub
jge
test
fimuls
adc
rcll
push
cwtl
sub
movsb
mov
addl
in
daa
mov
pusha
mov
cmp
gs
leave
sarb
je
stos
inc
pusha
in
pmaddwd
cmp
pop
pop
jle
xor
sub
jae
negl
mov
jae
pop
into
cld
sti
lods
sbb
mov
cmp
jg
mov
insb
push
sbb
pop
push
in
add
jns
mov
push
cmc
xchg
jo
push
cwtl
dec
push
cmpsb
sbb
pop
les
cmp
cmp
sbb
aad
imulb
into
shll
cltd
notl
or
cmp
rolb
mov
pop
cmp
ljmp
jo
sahf
jp
nop
imul
mov
sbb
push
cli
rorb
xchg
aad
test
push
dec
rorb
add
xchg
rep
mov
nop
into
int3
lret
out
rcll
mov
cmp
push
jge
int3
xor
xchg
mov
push
ljmp
clc
sub
sti
mov
and
fwait
lcall
ds
cltd
loopne
or
jecxz
cld
sbb
test
inc
ret
shll
test
and
push
or
mov
xchg
iret
push
ja
jne
adc
xchg
pop
pushl
ds
call
imul
loopne
mov
inc
nop
adc
repnz
dec
scas
les
lret
lods
mov
popf
and
movl
das
mov
xchg
dec
addr16
push
les
rol
xchg
xor
adc
stos
out
jecxz
mov
lods
and
dec
cmpsl
std
mov
jno
inc
cmp
enter
loope
lret
cmp
push
and
popa
inc
and
imull
jecxz
inc
cmp
pop
adc
and
adc
sbb
rcr
hlt
push
or
jl
jmp
nop
fldl
jge
mov
pop
adc
lds
icebp
xchg
addr16
push
test
loopne
xchg
jecxz
or
mov
cmp
and
and
je
ss
push
mov
imul
mov
lods
add
lcall
orl
fwait
out
mov
and
inc
ror
fnstsw
stos
inc
leave
fbstp
aam
fwait
add
out
movsl
into
fisttps
sub
pop
es
dec
mov
xlat
div
pop
inc
divl
jle
add
add
cltd
sub
push
mov
jne
mov
adcl
sbb
lock
fadd
test
push
push
fs
daa
stos
add
sub
add
mov
sbb
pop
out
pushf
mov
ret
and
jno
push
test
cmp
pop
shlb
jae
lods
testb
bound
xor
stos
and
outsb
cmpsb
in
outsl
jb
loop
add
inc
scas
in
sbb
sub
sub
sahf
cld
adc
stos
loop
mov
dec
cltd
rorl
andl
adc
mov
or
ja
addl
jecxz
in
into
mov
fnstenv
adc
mov
mov
mov
dec
rclb
cld
jns
inc
inc
pop
cmp
xchg
sbb
lahf
xor
mov
or
push
push
les
adcl
adc
cltd
icebp
in
stos
add
data16
out
xor
inc
scas
fistpl
pop
add
pushf
or
fs
sub
cmp
cmp
jp
call
and
mov
cmc
jecxz
repz
xor
fwait
ss
add
shr
lcall
xchg
inc
push
push
cmp
sub
icebp
cmp
xor
lods
xchg
push
or
mov
cltd
fdivs
inc
scas
clc
movsl
mov
mov
pop
jo
mov
inc
add
jp
add
int
mov
push
stos
mov
or
les
rcrl
push
je
inc
or
loop
imul
mov
mov
fcompl
aam
mov
lahf
cli
xor
sbb
push
nop
jnp
lds
in
sti
div
out
xchg
sar
push
mov
sti
cmc
mov
call
cmp
xchg
lds
adc
pop
jb
shrb
dec
pop
icebp
mov
mov
popa
movsb
movsb
movsb
aaa
subb
push
mov
subl
enter
into
adc
int3
xorl
sub
outsb
movsl
push
sbb
cmp
fcomp
cld
in
cmpsb
sbb
inc
and
cmp
push
ret
jecxz
aas
cmp
sub
pusha
sbb
shll
sub
insl
testb
dec
add
ret
aas
dec
hlt
adc
in
jnp
pop
ds
dec
push
inc
sbb
fadds
xchg
in
xchg
fisttps
push
sbb
inc
push
mov
xor
popa
mov
fadd
lret
jne
loope
sarb
adc
mov
inc
add
or
ret
cs
xor
insl
add
jp
loop
aas
addb
mov
adc
fldt
fs
imul
mov
mov
fnstcw
imulb
mov
clc
pop
fstpt
inc
ret
jae
xchg
jp
dec
dec
jecxz
int
jp
xor
in
cmp
imull
addr16
xchg
dec
cld
int
das
rclb
test
dec
mov
repnz
xchg
mov
leave
das
mov
cmpsl
int3
call
mov
inc
inc
add
pop
into
movsb
aas
popf
sbb
push
loop
jae
aad
mov
mov
pop
incb
cli
inc
jae
testl
jne
jle
pop
into
out
daa
pop
loop
mov
daa
pushl
imul
inc
push
rorb
sbb
inc
mov
clc
mov
lret
js
mov
sbb
shll
inc
push
pop
in
sub
inc
xchg
xchg
add
shl
iret
sub
fstpl
add
push
test
inc
mov
mov
int3
pop
push
dec
cmp
pop
test
stos
test
mov
sbb
jl
out
jle
icebp
xor
movsl
movsl
ds
mov
xchg
cmp
pop
dec
fdiv
dec
in
out
and
push
adc
call
pop
mov
mov
jns
mov
cmp
push
cmpl
dec
sbb
and
mov
add
xor
pop
inc
and
jl
aaa
das
mov
jl
xchg
popf
pop
imull
and
sub
decb
outsb
xor
movsb
add
ret
fisttps
mov
push
mov
or
gs
pop
jae
lret
adc
inc
ret
dec
push
mov
lods
ret
or
or
jbe
ja
or
sbb
int
xor
loop
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
call
lret
dec
mov
xor
pushf
cmp
jl
das
adcl
mov
clc
int3
mov
jmp
lds
out
mov
sbb
or
sbb
inc
scas
int3
xchg
mov
add
stos
out
hlt
pop
hlt
notl
cltd
sbb
out
mov
or
daa
stos
xor
rolb
popa
xchg
xor
xchg
mov
pop
leave
lcall
jae
jmp
cld
add
into
sub
not
cpuid
sub
ret
push
leave
les
ds
jb
adc
inc
mov
cld
dec
xchg
sub
icebp
sbb
dec
test
in
std
pushf
mov
lock
test
into
pop
leave
add
das
mov
aaa
or
adc
in
mov
clc
mov
aam
push
hlt
setge
daa
xor
icebp
icebp
cmp
adc
add
pop
insb
jmp
mov
les
lret
es
lret
push
fists
xor
ret
rolb
aad
inc
sbb
push
jl
stc
in
mov
test
in
subl
inc
cmp
cmp
loop
and
cwtl
jno
jo
adc
adc
insb
dec
adc
rcr
mov
mov
cmpsl
adc
mov
ret
mov
lahf
test
test
add
jp
rorb
push
push
cmp
aas
pop
sbb
and
mov
js
add
sbb
jge
add
push
and
lock
mov
jb
sub
test
cmp
fwait
dec
mov
pop
xor
test
push
xor
pushf
push
pop
fisttpl
test
aas
mov
push
call
stc
stc
loope
fwait
jns
add
das
cmc
cld
xor
loopne
addl
cwtl
mov
pop
push
jge
pop
lods
insl
popf
stc
sub
add
inc
lods
xor
mov
xlat
movl
or
clc
iret
mulb
sub
or
arpl
aad
data16
movsb
jp
pop
sbb
popf
aad
mull
fisttpll
das
add
mov
push
addr16
mov
push
sti
andb
rcrb
lret
icebp
and
cmc
mov
idivb
sbb
clc
fdivrl
jmp
cld
pop
shll
mov
dec
cli
scas
xchg
or
sub
mov
cmp
mov
jge
mov
cwtl
bound
xor
test
mov
fs
mov
cmp
inc
dec
cwtl
jge
aad
ret
int
push
faddp
stos
xchg
notb
sahf
push
es
ret
lock
and
mov
and
mov
sub
sub
cmp
push
pop
fistps
adc
push
outsb
cli
adcb
push
fadds
and
jnp
in
or
push
loop
sbb
sbb
shr
adc
std
aas
xchg
daa
std
out
jno,pn
arpl
xchg
addr16
sbb
negl
out
les
xor
jae
and
pusha
mov
sbb
cmp
dec
ja
adc
hlt
xchg
adc
aas
add
xor
sbb
push
imul
fwait
int
pop
pop
pop
rcrl
addr16
fisttpl
dec
adc
jae
movsb
and
dec
rol
push
in
inc
imul
ret
fsubs
in
cmp
leave
adc
sarb
insb
mov
lret
jg
movsl
repnz
sbb
cmp
ss
xor
adc
sbb
xchg
push
jle
cmc
popf
inc
insb
mov
inc
add
sub
fisubrl
dec
fs
xor
lahf
mov
dec
insl
mov
clc
shl
in
fiaddl
sub
push
xchg
jno
pushf
mov
mov
mov
sbb
ret
fdivrs
jne
ffree
cmpsb
xchg
sarl
test
pop
xor
jp
mov
cwtl
jns
and
addl
testb
scas
push
push
push
xor
icebp
movsl
push
xor
sbb
loopne
repnz
test
pop
aas
outsb
xor
adc
push
inc
pop
sub
lahf
bound
out
inc
mov
out
mov
and
mov
and
test
rolb
sub
xor
sbb
rolb
fistpl
outsb
pop
mov
rorb
call
pop
repz
pop
lcall
jns
xchg
std
add
adc
lds
lods
jb
repz
pop
pop
rolb
push
and
outsl
nopl
sub
int
shlb
mov
rorl
and
sbb
les
or
or
fs
or
rcrb
pop
xchg
push
lcall
sbb
pop
inc
jp
add
hlt
sbb
sub
inc
or
shl
jp
adc
outsl
xchg
adc
mov
mov
cmp
lods
add
push
lahf
loopne
and
sub
aad
mov
repz
pop
call
sbb
xchg
add
xchg
clc
dec
or
dec
pusha
jb
pushf
mov
loop
jbe
cmp
adc
cmp
testl
xchg
incl
mov
repz
pusha
mov
mov
mov
inc
inc
xor
and
push
mov
mov
cs
or
cmp
add
lea
jb
mov
mov
bound
and
loop
out
sbb
sub
mov
jnp
in
js
sarl
xor
adc
aaa
cmp
test
pop
aaa
inc
in
in
xor
scas
xor
sub
scas
scas
and
cs
ljmp
jno
imul
into
jmp
dec
fcoms
mov
xor
jae
jae
jecxz
aam
and
mov
dec
popa
xor
mov
stos
mov
and
dec
push
into
xlat
pop
mov
mov
rcll
push
ret
lea
test
mov
add
pusha
mov
mov
adc
stc
cmp
in
or
addr16
loop
add
push
aad
or
mov
push
and
adcl
xlat
xor
outsb
mov
js
fyl2xp1
out
jno
cmpsb
das
aad
xchg
push
mov
cmp
cmpsl
dec
pop
xor
dec
or
pop
pushf
clc
fisttpll
shlb
push
and
push
insb
push
push
cwtl
xor
mov
push
jb
pop
pop
push
repnz
add
cltd
es
das
imul
es
stos
stos
loop
imul
push
in
jp
jge
push
push
sub
pushf
xor
or
pop
dec
pusha
add
adc
adc
roll
aas
rcl
aas
lock
rcrb
or
pop
add
ljmp
sub
xchg
aam
test
adc
xchg
cmpsl
pop
dec
scas
inc
jge
aaa
mov
jno
lock
rclb
call
jae
stc
push
fbstp
gs
sbb
movsl
push
test
xlat
jne
and
out
pushf
mov
adc
cmp
in
scas
mov
mov
or
popa
mov
mov
fs
mov
adc
lret
mov
aam
jp
mov
loope
xor
fnstsw
imul
roll
movsl
sarb
push
jbe
test
notb
sti
adc
orb
rcr
clc
jg
fwait
mov
cli
popf
out
dec
push
inc
add
add
orb
mov
and
cmp
add
push
cmpsl
add
dec
jne
mov
jae
cmc
mov
inc
negb
fidivs
sbb
jnp
fcomip
xchg
rcrl
mov
pop
or
jbe
sbb
out
fnstenv
dec
stos
mov
sbbl
iret
xchg
or
add
inc
call
jmp
test
sbb
mov
mov
notl
das
test
and
ss
fbstp
xchg
or
jl
andb
add
lret
dec
popl
pop
add
mov
adc
repnz
ds
scas
inc
pop
adc
push
or
dec
repnz
lcall
xchg
pop
gs
popf
insb
movsb
mov
mov
inc
test
lret
cmpsl
inc
inc
cmp
int3
out
xchg
in
cwtl
movsl
fidivrl
or
movsb
fnstcw
xor
cmpsl
leave
mov
outsl
inc
cmp
sbb
pop
sbb
repz
in
ret
inc
xchg
clc
sbb
js
mov
push
pop
into
jbe
cli
xor
addb
push
cmp
pop
push
inc
test
jne
xchg
dec
push
inc
out
fsubp
inc
push
fsub
push
idivl
adc
xchg
jns
mov
pop
cmpsb
and
xchg
jmp
ret
test
lahf
daa
xchg
imul
jecxz
mov
pop
cmp
cmpsl
aaa
rorl
in
sbb
out
xchg
mov
inc
fisttps
jecxz
in
or
inc
jns
cmp
xchg
sub
mov
ficoms
xor
adc
std
or
mov
push
jmp
mov
cmpsb
addb
pop
adc
cmp
leave
stc
call
imul
adc
sbb
or
and
xor
ljmp
loop
inc
pop
stos
aaa
jle
and
in
mov
fsubp
pop
sbb
insb
mov
pop
ret
in
scas
lahf
int
jle
repz
lret
pop
js
push
pop
push
leave
fisubs
bnd
mov
aaa
clc
outsl
cmp
insb
xor
cmpsb
jge
inc
push
adc
imul
push
dec
dec
imul
mov
test
movb
mov
leave
call
pushf
fistpl
fcompl
arpl
in
movsl
scas
jo
push
idivb
xchg
movsl
jmp
sbb
shlb
andb
push
xor
popa
shrb
fst
lret
mov
ljmp
gs
xor
xchg
and
adc
jp
xchg
sti
test
xchg
ret
push
pusha
adc
pusha
das
mov
xor
clc
neg
sub
sahf
fwait
jnp
outsl
into
inc
loope
scas
shll
push
mov
imul
es
jmp
mov
and
inc
xor
lock
ret
mov
sub
jne
subb
dec
stos
xchg
cmp
dec
mov
jp
ja
push
push
mov
enter
push
stc
and
and
lret
neg
dec
pop
loop
pop
andl
cmpsl
mov
aaa
cmp
ds
sti
outsb
sub
inc
xor
ja
lock
xor
bnd
mov
cmp
and
mov
inc
xcrypt-ecb
cmpsl
dec
sti
dec
xor
adcl
mov
popl
push
arpl
push
adc
or
push
and
sub
adc
es
add
mov
fwait
gs
les
sub
and
mov
lcall
or
lock
psraw
xor
dec
in
cs
and
inc
adc
adc
dec
add
dec
imul
pop
jno,pt
xchg
cmpsl
in
int3
sub
jne
in
cli
adc
dec
mov
or
sbb
inc
shrb
iret
push
lods
je
mov
out
jp
jbe
loopne
add
pop
inc
pop
fxch
pop
sahf
movsl
or
lods
leave
mov
jne,pn
adc
pop
imul
xor
sar
add
sbb
icebp
call
ja
jg
cltd
stc
cmp
xor
xchg
in
xorb
mov
mov
jo
mov
lcall
or
and
cmpsl
pop
adc
mov
fwait
sbb
shrb
jmp
in
fiaddl
pinsrw
and
push
out
cmc
imulb
shl
add
out
sbb
mov
mov
dec
and
jle
loop
int3
jb
ret
add
ret
jle
adc
and
movsl
push
lods
pop
pop
jg
xor
daa
cmpl
andl
mov
lea
das
add
ljmp
iret
in
inc
xor
into
mov
lahf
dec
push
sarl
cwtl
lods
clc
insb
mov
aas
mov
mov
sub
ret
pusha
push
xchg
jns
mov
pop
cmp
iret
sbb
pop
adc
mov
imul
inc
pop
push
dec
dec
je
push
lahf
adc
cmp
call
push
fstpl
adc
cmp
push
inc
jmp
jae
icebp
xchg
rclb
mov
out
nop
jno
sub
xchg
fistps
hlt
xor
push
rol
pusha
xor
sbb
xor
sbb
sub
das
call
in
push
lds
xor
and
arpl
push
movsb
and
test
mov
inc
movsl
cmp
sub
pop
push
in
shl
inc
inc
call
fwait
dec
outsb
sbb
sub
ds
and
filds
jb
add
cwtl
pop
sub
call
jne
or
sub
push
ja
das
cmpb
push
inc
jmp
pop
out
or
jmp
mov
inc
loop
sahf
mov
fidivrl
inc
xchg
rcrb
sbb
shlb
inc
mov
or
mov
imul
push
fldenv
cmp
sbb
in
daa
jp
push
insb
ja
cld
mov
arpl
loopne
fisubl
mov
insb
out
fst
adc
ja
add
pop
outsb
push
pop
pop
loop
inc
int3
jae
iret
cltd
clc
cmp
ds
dec
mov
jno
lds
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
pop
shll
aas
mov
cmovs
xlat
pusha
nop
int
outsb
push
es
hlt
call
xor
into
push
pop
stos
mov
dec
pop
dec
push
mov
xchg
xor
pop
aad
sbb
test
jb
jo
insb
mov
push
stos
into
mov
xchg
add
jne
lcall
mov
cld
inc
mov
sub
fnstenv
sahf
mov
pop
stos
out
mov
and
fcoml
cmp
sbb
add
out
add
adc
scas
popf
aad
push
mov
adc
mov
push
add
push
adc
pusha
or
or
insb
xor
stc
out
lock
xor
and
std
dec
cmp
cmp
dec
pushf
aam
xchg
adc
es
mov
cmp
and
xchg
and
addr16
or
dec
sarl
test
es
push
xchg
xor
loop
lahf
aad
aaa
sbb
push
dec
xor
mov
mov
fisubrl
jbe
jecxz
cmc
bound
idivl
mov
notb
gs
movsb
fisubs
add
cmpsb
jecxz
int
lahf
sbb
jle
jae
iret
das
inc
push
cwtl
lods
mov
dec
add
push
fildl
pop
push
jno
jle
pop
dec
xchg
int
add
fcoms
jecxz
xchg
mov
imull
mov
daa
xchg
cltd
sbb
stos
bound
dec
cmc
sbb
and
aaa
int
and
ret
out
dec
int3
wbinvd
iret
mov
dec
fidivl
stos
inc
pop
adc
ret
xor
gs
sbb
push
mov
sbb
jecxz
rcrl
notb
subb
ljmp
subb
mov
lods
outsl
and
dec
xor
mov
shl
xchg
lods
es
inc
dec
cmp
jo
cmpsb
push
mov
adc
lock
les
imul
fisttps
and
dec
repnz
xor
mov
mov
sbb
fs
cmpsl
repnz
insl
push
jg
insb
sub
insl
std
and
sub
xor
fdiv
adc
xchg
mov
push
mov
sub
fs
das
lea
adc
or
xchg
faddl
xchg
and
daa
add
inc
dec
ja
data16
imul
lea
xchg
lret
mov
imul
mov
sarb
jge
ret
sub
jae
cli
mov
loope
leave
jmp
loopne
ja
daa
imul
adc
and
pushf
stos
test
movhps
shrl
mov
push
arpl
pop
fbld
fsts
and
out
xchg
je
mov
js
add
mov
pop
pop
jb
lcall
jg
ret
jbe
rorl
aam
mov
stc
xchg
sahf
test
mov
lds
mov
mov
mov
cltd
dec
test
push
cmpsl
stos
fsubrp
sbb
imul
enter
daa
aaa
xlat
sbb
mov
push
cmpsl
mov
ret
fsubrp
inc
int3
jle
popa
fnstcw
pop
inc
daa
stc
enter
push
dec
mov
loope
mov
lds
add
xor
arpl
dec
pop
pusha
loope
fdivl
push
js
lea
xor
test
mov
sub
cwtl
xchg
adc
cli
and
mov
mov
jl
cmp
je
or
jg
test
mov
pop
or
fsubr
dec
adcb
push
xor
pop
ja
inc
test
sub
dec
rcrb
pop
push
mov
sbb
sub
xor
sbb
pusha
sar
loopne
xchg
sub
icebp
mov
popa
std
jo
jno
pusha
xchg
mov
je
lret
sub
aas
jmp
movsl
mov
mov
sbb
in
js
or
add
or
sbb
xchg
mov
fnstenv
cld
push
inc
mov
cld
sub
push
cmp
or
xchg
lods
addr16
cmpsb
clc
out
jne
cmp
fisubrl
ss
orl
rcll
lods
cltd
mov
fimull
icebp
bound
jecxz
pushl
jns
pop
mov
add
loopne
in
test
popf
xchg
dec
leave
int
decb
push
lock
cmpsb
xor
enter
iret
dec
inc
movsl
popf
pop
mov
cmc
mov
add
sbb
jbe
adc
sarb
push
addl
mov
dec
dec
andl
cmpsl
scas
and
mov
jno
stos
ficoml
insl
push
or
in
jbe
mov
call
dec
notl
and
in
sbb
negl
pop
imul
es
mov
sub
fimull
iret
cmpsl
push
test
leave
sbb
push
jle
mov
aaa
pushf
arpl
pusha
sub
xlat
mov
gs
mov
hlt
in
out
dec
stos
je
add
adc
push
test
adc
adc
cmpsb
loop
pop
stc
pusha
pop
test
negl
mov
pop
jb
jbe
inc
fwait
movd
push
mov
lret
sbb
mov
inc
fsubl
xchg
sarb
sar
sub
xor
dec
pop
in
mov
nop
push
push
stos
movb
clc
add
push
push
in
sbb
enter
sbb
mov
jns
fs
rcrb
mov
ret
add
dec
and
sti
fisttpl
je
jl
in
ss
cmp
sub
ja
push
enter
cmp
addr16
popl
inc
seto
aaa
mov
sbb
sub
dec
or
out
xchg
xchg
addr16
mov
mov
mov
inc
mov
add
ds
iret
ss
stc
lcall
dec
addr16
leave
imul
and
sub
pop
push
subb
mov
fisttps
mov
mov
test
lea
adc
sbb
pop
ss
test
mov
ret
or
mov
fsubp
pop
rcll
mov
rclb
mov
xchg
decb
xor
push
lahf
js
pop
mov
shll
cmp
push
insb
dec
xor
int3
int
jl
and
xchg
dec
outsl
and
and
xor
push
sbb
aam
aam
rorb
loope
mov
call
or
lcall
int
mov
pop
pop
and
and
mov
je
lds
mov
enter
add
ljmp
imul
scas
sbb
xor
sbb
push
mov
xchg
cmpsl
mov
xchg
dec
push
in
jge
pop
and
scas
jp
fwait
mov
aas
or
fdivp
les
push
cmp
test
adc
and
inc
xor
movsb
add
xor
movsl
pop
mov
sbb
mov
pusha
cmp
jb
loope
adc
mov
push
and
cmp
add
shll
inc
ret
mov
testb
test
xchg
pop
push
jae
xchg
sub
add
loop
and
stos
inc
and
sub
jne
cmp
outsl
jmp
xchg
jp
shrb
adc
dec
pop
mov
mov
inc
out
pop
mov
int3
mov
jno
jne
int3
lcall
out
movsb
and
mov
pop
lret
jl
mov
push
hlt
icebp
cmp
cmpsb
fsubrl
xor
orl
mov
je
in
cld
es
xchg
fabs
or
loop
push
lahf
mov
call
xor
into
pushf
fwait
in
out
in
ret
xorb
fidivrs
movsb
in
mov
adc
outsb
and
lret
and
inc
xchg
inc
adc
jno
out
int
jo
push
push
sbb
xchg
ds
gs
inc
jg
dec
fimull
sbb
mov
or
adc
insb
xchg
lock
ljmp
and
push
outsl
push
addr16
lret
iret
cmc
int3
inc
jge
mov
incl
xchg
jne
and
dec
ja
jg
lcall
in
pop
lahf
sbb
lock
in
cmp
mov
popl
push
and
xchg
jge
push
sub
push
cmp
xor
xor
push
aam
push
or
sbb
mov
mov
test
push
push
rolb
and
loop
das
insb
xchg
cmp
xor
push
stos
negb
mov
inc
xlat
push
jnp
rol
xchg
imul
push
inc
pop
cmp
and
push
fdivrl
popf
and
xchg
xchg
jns
outsl
inc
sub
or
lods
incb
hlt
fildll
push
or
pop
xchg
fiadds
lahf
push
cs
sbb
jno
or
jo
push
adc
jge
xchg
enter
mov
insb
jge
push
jle
cli
push
add
fs
leave
out
movsb
movsb
push
cmp
and
jge
in
addr16
pop
pop
into
pause
sbb
loop
mov
insl
mov
nop
or
outsb
mov
lret
xchg
in
ficompl
inc
add
inc
es
pop
add
mov
inc
mov
aas
shlb
dec
xchg
addr16
or
pop
and
movhps
inc
add
mov
mov
fildll
lahf
sbb
insb
or
orb
cs
xchg
mov
mov
aam
jb
sub
arpl
mov
stos
scas
xchg
mov
jl
fldt
das
adc
fsts
sub
out
mov
insb
test
xor
in
xor
adc
and
pushf
inc
ret
leave
dec
sbb
fistpl
xor
dec
shll
pop
push
lahf
pushf
sub
inc
xchg
test
mov
stos
adc
dec
stc
sbb
dec
sub
loopne
imul
into
jns
icebp
in
dec
push
or
inc
jbe
mov
lret
pop
pop
push
stos
sub
rdmsr
or
out
pop
es
jbe
sbb
sbb
mov
adc
nop
pop
lcall
push
scas
std
stos
pop
loope
lea
cmp
mov
nop
xchg
ss
dec
inc
mov
sar
fs
inc
ss
jecxz
dec
dec
sti
pop
jns
out
sub
or
rorl
les
pop
adc
inc
mov
inc
in
cmp
add
inc
adc
stos
and
sub
pop
ja
shll
mov
adc
filds
sub
out
lea
out
mov
call
mov
jns
and
cmp
bound
cmp
loop
jns
and
xchg
cs
push
in
inc
xlat
push
pop
cmp
js
aam
imul
dec
nop
pop
call
insl
jg
aas
fidivrs
aad
xchg
pop
nop
and
mov
push
arpl
cmp
adc
mov
arpl
popf
push
push
push
cmp
iretw
dec
out
pop
aas
out
sbbb
lcall
jne
adc
sbb
inc
pop
mov
mov
sbbl
push
js
pop
cmp
inc
inc
xor
adc
mov
inc
nop
lahf
mov
repnz
fwait
leave
and
imul
pop
movsl
and
jmp
sub
inc
int3
jle
inc
mov
test
fistl
imul
pushf
outsb
rcrb
addr16
scas
jne
inc
push
inc
mov
stos
jp
fmull
cmp
lret
add
or
lret
lcall
out
ret
js
xchg
or
popa
xchg
mov
mov
mov
push
int
fadds
push
jb
or
pop
cmp
adc
lret
sarl
stos
or
notb
push
dec
sbb
inc
dec
cmp
pop
leave
call
shlb
and
into
ja
cmc
add
mov
clc
ja
jmp
xchg
rcr
jl
adc
mov
aad
dec
scas
sbb
outsb
movsl
inc
pusha
outsl
outsl
dec
jg
xchg
fimuls
mov
pop
stos
sti
lcall
mov
pop
in
stos
push
jnp
and
xchg
jbe
adcb
adc
cmp
stos
inc
nop
ss
push
ljmp
in
fdivl
mov
push
sbb
mov
cmpsl
inc
cld
test
jg
cli
lds
loope
and
xchg
mov
or
sbb
xchg
inc
xchg
cs
das
stos
aas
xlat
jge
mulb
test
mov
jo
out
sarl
cli
add
rolb
scas
out
fsubs
outsl
xchg
rclb
or
das
mov
push
lret
pop
sahf
js
sbb
in
push
rcr
and
je
dec
sbb
push
jo
es
mov
sti
cmpsl
out
jle
cmpsb
in
cmpsl
add
bnd
pop
sub
jno
adc
pop
push
jbe
icebp
hlt
aaa
push
pop
adc
or
popa
ds
xchg
and
xchg
imulb
cli
cmp
jae
aas
xchg
mov
movsl
or
pop
aad
ret
js
sbb
lds
popa
add
adcl
push
lock
mov
sbbb
mov
sbb
insl
shll
data16
cs
pop
or
adc
test
and
jo
hlt
out
cltd
stos
rclb
add
es
mov
cwtl
fildl
sbb
daa
insb
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
bound
adc
xchg
outsl
pop
movsb
xchg
jg
xor
bound
mov
fcompl
lods
into
dec
mov
clc
xlat
inc
jp
out
and
inc
aas
jb
stos
sub
and
push
add
popf
mov
sub
std
cmp
sbb
int3
push
mov
hlt
pop
inc
mov
aad
inc
mov
push
in
shr
add
xchg
lods
mov
loop
mov
icebp
dec
adc
shll
add
jne
aad
fistpll
ret
mov
xchg
mov
rol
mov
je
call
insl
jne
xchg
js
inc
xchg
cmp
and
inc
stos
scas
lods
jae
sbb
popa
pop
mov
mov
test
divb
jae
out
fisttps
into
inc
lret
outsb
das
add
mov
push
rorl
mov
push
mov
mov
sti
outsl
xchg
psraw
int3
vminsd
out
test
pop
mov
mov
dec
xchg
sbb
hlt
mov
movsl
pop
lahf
sbb
lock
scas
sbb
cwtl
xor
sbb
pop
xor
cmp
arpl
and
aad
loopne
add
cli
sub
lret
pop
imul
sahf
inc
aam
and
repz
sub
cmp
idivb
or
fisttps
mov
adcb
mov
iret
or
mov
jb
xor
fdivrl
xchg
orb
loop
fmuls
inc
push
outsb
or
out
int
mov
gs
in
jbe
or
lock
sub
sbb
adc
lock
push
push
loopne
test
sbb
jno
jne
cmp
inc
iret
jmp
test
enter
imul
xlat
and
sbb
orb
into
das
xchg
or
repnz
push
pop
imul
jbe
bound
call
mov
jle
dec
or
adc
add
outsl
hlt
mov
mov
mov
mov
sbb
xchg
imul
sbb
mov
and
jp
pop
jno
insb
imul
ja
jmp
mov
dec
cmpsl
push
lret
mov
sti
lahf
jmp
xchg
lock
jge
mov
shrl
es
xchg
dec
push
outsb
adc
and
jg
into
inc
mov
lods
into
lds
pop
rorb
or
dec
inc
jo
leave
jnp
jg
mov
clc
cmpsl
mov
jge
rcrl
fcom
fisubrl
fsubl
ret
fs
pop
subb
pop
add
mov
xchg
sub
ds
cmp
std
add
sbb
inc
movsl
out
sub
jnp
add
sbb
hlt
xchg
jle
pop
dec
sub
and
orb
mov
push
mov
and
movsb
or
mov
mov
andb
js
call
cmp
mov
fwait
jle
cmp
int3
mov
lret
mov
push
mov
scas
xor
vmptrst
push
pushl
pusha
xchg
pop
pop
mov
xor
jecxz
mov
cmpb
add
cmp
test
xor
sub
movsb
les
pop
rep
out
mov
jp
mov
cmp
mov
lret
ret
enter
and
jnp
cld
jg
enter
fdiv
sub
lret
lret
cmp
dec
xchg
and
stos
xlat
pop
inc
xchg
das
ret
rep
cltd
jns
push
inc
mov
jns
clc
jg
sahf
push
push
lcall
jb
or
outsb
popa
push
popl
cmp
xor
ret
push
enter
stc
xor
xor
sub
xor
xchg
cltd
adc
out
push
xchg
jae
arpl
rcrl
dec
movsl
js
add
call
cmc
xchg
jbe
sub
xchg
imul
rcrb
mov
pop
pop
repnz
xor
es
mov
mov
push
mov
jne
lret
ss
sbb
ret
mov
add
mov
lock
aad
dec
xchg
sbb
push
jecxz
push
push
jne
pop
shrb
pop
adc
mov
roll
pop
cmpsl
xchg
dec
dec
jns
push
sbb
mov
jp
mov
jnp
add
aaa
and
in
push
mov
enter
push
mov
mov
clc
ja,pt
mov
pop
push
xchg
sti
xchg
pop
test
xor
xor
sbb
pop
inc
mov
das
mov
popa
sbb
dec
sub
jns
jno
jg
gs
sbb
repz
sarl
fcom
lahf
cmc
pop
pop
ss
xchg
fld
add
enter
xor
adc
mov
jae
scas
inc
adc
xor
mov
lahf
xorl
jp
xchg
sahf
rcrl
push
int3
mov
adc
loope
scas
sbb
cs
jle
cs
add
cwtl
and
shlb
mov
outsl
jmp
cld
or
push
push
inc
sahf
scas
fistl
rol
jp
imul
pop
xchg
sbb
jbe
out
or
xchg
xchg
insl
jne
pusha
and
fisttpll
iret
xor
jbe
fldenv
pop
mov
adc
pop
test
jmp
in
repz
ds
push
pop
cmpsb
inc
mov
jmp
lds
sub
ret
stos
in
pop
sub
scas
hlt
mov
fwait
jmp
rcll
jg
xlat
cmc
lods
dec
lahf
js
inc
xchg
cmpsl
mov
out
nop
push
jo
jno
mov
mov
outsb
dec
in
or
nop
enter
xchg
push
jl
mov
mov
mov
test
add
fwait
jl
dec
push
push
mov
push
stos
popa
ss
and
movsl
negb
scas
jae
bound
pop
mov
data16
out
sbb
fdivrl
jmp
xlat
mov
jg
jle
cld
pop
test
or
lea
cmp
outsl
mov
cmp
mov
jns
loopne
or
jle
loop
fcoms
mov
sub
mov
or
in
jns
frstor
sub
sar
incl
cmp
mov
lock
xor
insl
fwait
sub
cmp
frstor
mov
fistps
rcll
jb
jp
test
inc
pop
int
or
outsl
adc
dec
cld
out
test
dec
loopne
xor
lahf
xor
mov
xchg
fs
loopne
dec
sti
mov
mov
jl
or
orl
push
lea
decl
xor
cmp
xor
test
and
and
out
mov
jl
mov
dec
mov
scas
addr16
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
xchg
bound
adc
xchg
scas
pop
jb
in
nop
or
lods
and
adc
scas
inc
jg
pushf
xor
out
push
inc
mov
out
sub
mov
sub
insl
jmp
and
out
stc
lahf
xor
sbb
bound
int3
cmp
ror
pop
sbb
mov
ret
in
cs
repz
repz
xor
inc
movsb
sub
clc
ljmp
sub
mov
mov
in
jne
pop
jle
stos
aas
mov
or
aas
cmp
sub
jo
mov
movsb
xchg
dec
adc
std
mov
enter
jnp
iret
arpl
or
enter
loope
jge
insb
mov
mov
xor
cmpsl
mov
sbb
bound
push
out
test
dec
jge
xor
xchg
pop
bound
add
jg
aas
dec
and
ja
decb
aad
repz
xlat
hlt
or
push
in
orl
stc
mov
cmc
fisubs
inc
dec
push
in
dec
mov
xor
inc
stc
stc
or
in
and
sti
out
jge
push
scas
fs
pusha
cmpsb
mov
cltd
xchg
in
imul
mov
cmp
addb
fisttpl
mov
fidivrs
sub
pop
lds
or
cmp
cmpb
rcr
dec
pusha
arpl
imul
faddl
aaa
dec
imul
pop
test
mov
hlt
pop
push
out
movsl
clc
pop
andb
scas
subl
adc
push
mov
jge
push
test
lods
les
pextrw
dec
mov
dec
xlat
jge
out
cs
icebp
arpl
std
xorb
mov
push
fldlg2
dec
je
mov
adc
call
int3
jle
sahf
add
dec
fwait
imul
mov
add
mov
addr16
ds
cmc
mov
insb
cmp
pop
mov
pop
mov
or
mov
repz
dec
test
pop
mov
out
push
xchg
mov
push
xor
cld
mov
addl
and
lahf
ret
mov
loope
cmp
jb
aaa
lahf
or
sub
jne
fnstsw
mov
mov
rcr
out
cld
incl
sbb
out
nop
inc
hlt
scas
movsb
mov
mov
int
call
pop
fsubrs
lods
cmc
adc
sbb
mov
pop
xlat
icebp
hlt
jns
ret
fsubrl
jp
mov
in
push
mov
movsb
pop
repnz
ret
inc
mov
stos
mov
aaa
rol
xor
outsb
xchg
out
jne
out
mov
lahf
imul
fisttpl
cmp
je
jnp
push
sbb
scas
cwtl
ljmp
inc
inc
adc
loop
sub
loopne
pop
cli
movsl
xor
mov
sti
pop
int
fwait
xchg
lock
fs
loop,pt
pusha
sub
inc
mov
lret
mov
adc
rolb
inc
push
xchg
xchg
data16
mov
into
sub
out
dec
and
cmp
lcall
or
xchg
sbb
xchg
sbb
xchg
mov
adc
jbe
out
adc
mov
aad
fsubl
fwait
dec
test
out
push
mov
lea
mov
or
arpl
les
dec
aad
lea
cmp
hlt
jmp
outsb
xchg
sarl
mov
and
imul
xchg
sub
sub
cmp
or
std
iret
pop
out
addl
xchg
pop
cmp
xchg
jge
mov
inc
xchg
test
hlt
push
or
mov
fidivl
dec
push
sbb
data16
and
lds
add
add
out
in
hlt
lahf
gs
inc
cmc
cld
mov
adc
sub
in
scas
cmp
xor
inc
mov
sub
mov
in
jae
and
dec
pushl
mov
mov
xchg
lret
into
fnstenv
mov
cmp
inc
notl
insl
cmpl
cwtl
test
test
dec
call
sbb
dec
pushf
xor
gs
ja
push
out
cmp
cmp
push
lret
and
hlt
rorb
jno
push
sbb
or
scas
pop
xchg
out
movsl
add
or
sbb
inc
sbb
cmovle
or
push
sbb
push
mov
cli
movb
fwait
xchg
repz
mov
ret
mov
push
jge
cmp
into
lcall
cmp
shrl
sbb
outsb
cmp
mov
shll
ret
pop
or
insb
pop
fnstcw
lock
rol
lods
iret
ss
arpl
mov
and
push
add
lds
sbb
movsb
cltd
push
dec
out
ja
and
jnp
xlat
push
cwtl
lret
mov
mov
jp
scas
sub
mov
into
push
ret
add
ret
mov
notl
lock
add
xor
imul
insl
pop
std
mov
xchg
andl
cmpsb
jno
cltd
pop
outsb
mov
fisttps
repz
cmpsb
push
jmp
jmp
call
sti
ljmp
xor
jmp
dec
int3
out
mull
scas
xchg
cli
or
call
ds
jne
or
jmp
pop
inc
lds
sbb
mov
xchg
pop
sub
iret
ja
sti
mov
mov
jge
pop
mov
mov
and
sub
mov
xchg
js
xchg
aas
jb
pop
lea
mov
or
push
js
aad
inc
idivl
loop
test
add
arpl
les
and
fadd
sahf
jge
rcrl
pop
jecxz
sarb
fsubrs
popf
mov
out
cmp
push
into
fiadds
jns
jp
imul
ds
pop
xor
jmp
enter
pop
fmuls
addr16
lret
cltd
push
mov
adcb
out
lock
inc
jo
lods
and
mov
aam
cmp
ficomps
sbb
mov
pusha
stos
rolb
insl
jb
inc
cmpsb
iret
movsb
add
xor
cli
aaa
adc
xor
gs
adc
jns
cmpsl
push
repz
push
jle
adc
mov
cmp
sbb
subl
xor
rorb
fadds
cmp
inc
lds
in
insb
dec
mov
sub
outsl
out
add
out
ret
pop
repnz
pushf
and
pop
fwait
cmp
cmp
mov
lcall
lock
pop
xchg
xchg
call
shl
test
xchg
add
mov
mov
pop
sahf
jno
lock
hlt
mov
stos
movb
lods
enter
add
fadds
add
and
add
loop
es
pop
js
xchg
push
pop
js
ja
cld
int3
mov
mov
sub
insl
addr16
sub
add
lret
je
push
mov
popf
cmp
iret
cs
aaa
xchg
push
push
clc
push
pop
add
shrl
dec
sub
je
pop
mov
pop
and
push
enter
dec
inc
les
cmp
daa
pop
cltd
mov
sbb
popa
test
hlt
jg
popa
pop
fs
and
push
es
xchg
push
scas
fcmovbe
sub
aam
add
ljmp
mov
push
cs
sbb
xchg
ds
jb
sarb
xchg
out
ret
mov
leave
jbe
int
mov
add
shrl
xchg
dec
movsb
xor
mov
pop
pop
dec
push
loopne
mulb
lds
jne
cmp
and
mov
push
pop
mov
jp
adc
pushf
jge
jmp
cltd
aad
mov
mov
mov
mov
cmp
into
push
movzbl
test
and
int3
in
mov
mov
shrl
fadd
mov
movswl
cmp
push
lcall
lock
push
aad
add
in
cltd
out
stc
cmp
xor
cmp
cmp
mov
dec
aas
mov
mov
push
inc
jle
cmc
ja
and
cmp
dec
call
or
movsl
lea
cmp
rcl
push
addr16
mov
sub
mov
test
outsl
adc
push
incl
lcall
aad
subb
mov
cmpsb
cmp
xchg
push
inc
clc
add
faddp
aaa
dec
and
imul
mov
nop
add
jno
push
push
and
xor
ss
inc
adc
sbb
jg
xchg
arpl
sbb
pop
aaa
fistpll
sbb
xor
loop
xorl
out
aaa
pop
mov
add
repnz
pop
pop
ret
jb
adc
cmpsl
push
test
mov
outsb
add
stc
inc
or
into
int3
mov
aaa
adc
fdivrs
push
add
stc
mov
out
sbb
shll
fdivrs
and
pop
adc
sub
mov
jl
sub
cmp
jbe
pop
insl
inc
sbb
notl
xchg
gs
fstpt
imul
xor
jae
divb
in
in
andl
mov
rcrb
sti
dec
add
jp
insl
adc
loope
imul
test
sbb
pusha
sub
dec
ret
or
add
in
aad
xor
pop
mov
sub
daa
negb
jne
sub
xor
lret
loopne
rcrb
dec
add
or
cmpsl
add
jmp
jae
incl
xor
rclb
loope
sbb
inc
sub
jmp
add
jecxz
sub
sbb
mov
mov
testb
enter
ja
cltd
pop
jge
or
xchg
popl
es
dec
push
mov
fsubr
inc
mul
dec
cld
lods
lds
mov
add
push
hlt
mov
xchg
push
shlb
arpl
push
ds
xor
mov
test
push
flds
xchg
fstps
adc
push
data16
orl
popa
jp
push
loope
cmc
fstpt
xchg
sbb
inc
leave
loope
mov
ljmp
pop
cmpl
push
dec
push
mov
adc
test
mov
cmpsb
push
enter
mov
cmp
inc
xchg
push
clc
mov
xchg
test
push
lcall
in
mov
inc
pop
hlt
push
jge
rorl
sub
push
pop
dec
aaa
mov
dec
call
in
nop
mov
popa
dec
sarl
push
sub
and
testb
inc
add
xchg
sub
mov
push
fmuls
dec
sbb
or
rorl
repz
and
std
sbb
jbe
push
mov
xchg
rol
ja
push
aam
imul
xchg
mov
popf
adc
xchg
dec
stos
scas
out
in
paddusw
pop
mov
mov
call
jbe
out
out
ss
xchg
push
sub
shl
mov
test
lea
outsl
bound
sub
and
xor
aaa
jae
addr16
sti
and
push
sahf
pop
xor
or
push
sub
adc
mov
add
fidivrl
mov
in
adc
sbb
aad
andl
out
xor
jmp
lret
into
imul
sbb
and
cmp
mov
xor
mov
xor
leave
mov
inc
sub
arpl
pop
pop
mov
xchg
push
pop
xor
sbb
push
lods
repz
fisubs
aad
dec
das
pop
mov
jp
je
adc
sub
orl
add
mov
and
lea
fidivs
in
data16
mov
loopne
and
xlat
icebp
dec
xchg
pop
xchg
and
mov
sub
pop
add
bnd
lock
inc
shl
or
stc
mov
out
inc
popa
cltd
out
sbb
mov
pop
add
cli
shl
jl
add
call
push
jo
popa
jnp
add
cmp
ret
ret
inc
lods
frstor
insb
insl
dec
lods
add
pop
dec
push
sub
les
push
cltd
sbb
cmp
xlat
ljmp
push
jge
loope
cltd
fimuls
push
mov
sub
mov
jo
cmp
or
jbe
pop
pop
push
ljmp
mov
mov
fbld
in
sbb
iret
inc
and
lock
mov
es
rorl
cli
cmpsl
jno
sub
flds
je
pusha
out
in
pop
loop
sub
xchg
fdivs
jbe
outsb
cmovae
adc
fmuls
addl
mov
cmpsb
jb
pop
dec
aaa
mov
mov
incl
sub
mov
cmp
jo
not
shlb
jae
imul
imul
xchg
xchg
jge
test
jo
outsb
cmpsb
lea
or
jle
sbb
inc
in
xchg
mov
add
mov
ret
xlat
push
in
je
les
sbb
bound
jb
pushf
cmp
arpl
pop
test
jle
cld
dec
or
test
negl
mov
xlat
leave
pop
js
mov
cmp
iret
iret
inc
sahf
mov
cmp
lods
pop
andl
xchg
xor
sbb
mov
div
sbb
imul
popf
stos
aad
mov
aad
and
scas
pop
push
cmp
dec
arpl
and
popa
xchg
or
sub
jmp
mov
movsb
mov
cmpsb
sub
sarb
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
dec
dec
jle
xlat
push
mov
popa
pop
jl
nop
xchg
mov
scas
sub
into
outsb
dec
push
inc
adc
jno
pusha
jno
push
jno
sub
mov
sub
push
mov
push
int3
shll
push
aas
mov
xchg
adc
inc
sub
pop
rolb
scas
pop
jp
adc
add
adc
adc
xor
das
clc
and
sahf
pop
pusha
mov
flds
mov
testl
and
push
cmp
jno
and
das
rol
mov
jecxz
pop
xor
mov
sbb
ret
lods
lock
add
pop
fiaddl
aam
hlt
insl
mov
xor
mov
enter
negb
push
in
pop
xchg
notb
sti
mov
push
leave
xor
inc
jp
mov
sbb
ljmp
cmp
cmc
dec
cmp
es
sbb
dec
sbb
hlt
inc
imul
dec
sub
ret
cs
sub
test
inc
clc
rcrb
in
sub
and
adc
cmp
rcrb
int3
out
or
pop
pop
push
lods
jge
addr16
sub
xchg
inc
sarb
mov
xchg
bound
mov
and
sbb
loop
jae
inc
cmpsl
push
std
xchg
add
jb
shlb
mov
es
dec
jp
xor
xor
and
cs
xor
int3
int
stos
enter
push
js
frstor
adc
imul
in
or
jg
sti
pop
jl
cwtl
popf
pop
enter
aam
sbb
into
or
or
mov
sarl
inc
cmp
orb
inc
or
daa
pop
dec
bound
pop
mov
sbb
jl
mov
cmp
cld
jl
arpl
lahf
lret
rcrb
data16
jecxz
and
xor
xchg
jle
out
cmp
sbb
or
test
aam
adc
out
sbb
ret
cwtl
xor
xor
xchg
jp
repz
xor
jno
je
je
shll
stos
adc
mov
lds
jnp
ljmp
mov
adc
sub
add
mov
xchg
jecxz
inc
daa
mov
dec
mov
lds
fs
jg
jle
daa
rolb
loopne
push
lret
mov
xchg
shl
inc
nop
sub
fwait
bswap
add
ret
or
mov
adc
adc
icebp
xor
lods
outsl
lahf
sarl
sbb
fildll
movsl
stc
aad
mov
hlt
fisttpll
adc
out
lret
call
iret
xchg
cmp
sti
call
cld
xchg
mov
clc
push
aas
in
aam
xchg
in
les
sbb
mov
out
mov
lds
scas
testb
cmp
scas
popf
inc
mov
sbb
and
and
sbb
jmp
mov
xchg
xor
mov
add
jg
lret
or
cmp
sbb
pop
inc
je
mov
fsubl
jnp
mov
dec
popl
std
je
loope
mov
inc
and
cmpsl
xor
sub
nop
loop
mov
stc
jno
repz
jae
xor
and
xchg
faddl
inc
loope
adc
shll
push
push
gs
or
sub
lods
xor
mov
in
fistl
push
xchg
rcrb
movsb
repz
jl
out
test
mov
xchg
int3
pop
ror
jle
rcrl
in
cltd
imul
icebp
inc
cs
add
pop
sti
mov
fcoml
xor
sbb
scas
into
fidivs
lea
and
cmp
hlt
mov
jle
mov
cmp
and
daa
fwait
imul
subb
nop
jne
adc
movsl
sbb
add
andb
stos
adc
ret
jge
mov
ljmp
insb
adc
imul
call
mov
shll
mov
movsl
scas
mov
add
add
xchg
stc
xor
cmp
jae
lret
bound
and
loop
clc
cmp
mov
sbb
and
jmp
filds
ret
int3
loop
lods
mov
inc
or
sub
adc
push
add
ljmp
or
sbb
push
and
addr16
xor
icebp
fimull
cwtl
imul
xchg
mov
scas
xchg
xchg
aas
or
out
addr16
inc
adc
mov
jae
inc
xchg
fidivrl
mov
pop
adc
sbb
test
hlt
repz
cmp
and
or
xor
xchg
insl
inc
and
sbb
repz
test
inc
dec
lret
unpcklps
inc
or
cs
ror
pusha
cwtl
dec
pop
jo
mov
repnz
fbstp
scas
movsl
iret
or
repz
out
dec
leave
push
rcrl
mov
xchg
xor
sahf
add
fcoms
in
pop
push
mov
lds
shrb
inc
jne
mov
nop
in
jmp
push
insl
les
pop
dec
cmpsb
sarb
out
rcll
xor
mov
out
out
outsb
xchg
or
push
movb
push
stos
mov
xor
js
pop
or
mov
push
push
cmc
add
loope
std
jmp
das
pop
inc
int
adc
ljmp
jge
add
stc
sbb
push
jp
scas
xchg
mov
cwtl
push
mov
orl
dec
scas
lret
dec
rcrl
and
adc
aam
test
lods
leave
in
xchg
cltd
test
es
mov
jnp
sub
pop
out
sbb
xchg
lret
mov
dec
imul
movsb
and
push
xchg
adc
es
daa
sbb
xchg
sbb
movsb
repnz
ds
popf
iret
jae
mov
jb
int
aad
dec
add
lock
sbbb
dec
pop
mov
sub
out
dec
mov
aad
cld
dec
inc
shll
mov
ret
fidivl
aaa
adc
lea
xlat
popf
leave
and
xor
shll
aam
mov
jo
mov
and
add
inc
movsb
sbb
fldt
push
shlb
inc
fistps
idivb
adc
arpl
dec
mov
push
aas
lahf
jg
sbb
dec
roll
les
clc
fstpt
cmp
lcall
push
mov
pop
fisttpll
jo
xchg
out
js
dec
add
in
fs
jno
mov
outsl
mov
fimull
xchg
add
push
mov
cmpsl
movsb
inc
push
pop
sbbb
dec
add
add
or
pop
inc
or
and
jo
adc
xchg
shlb
mov
ret
loop
outsb
sbb
jb
xor
pushf
or
jns
rolb
psubd
insb
xchg
mov
jno
sarl
sbb
loop
je
dec
push
jp
leave
int3
gs
clc
testl
xchg
or
inc
push
pop
mov
or
mov
mov
shrl
loope
cmp
iret
inc
mov
pop
pop
jae
repnz
ret
xchg
push
jns
dec
test
xchg
add
test
dec
dec
cmpsl
dec
outsl
mov
into
aad
nop
mov
fcomi
pop
mov
pusha
add
jge
in
adc
add
or
add
dec
test
outsl
add
mov
nop
aam
les
mov
ret
test
ret
sub
rcr
lea
bound
cmc
adc
xor
leave
sub
cmp
mov
dec
dec
lret
icebp
andb
shll
push
jae
xor
incl
sub
and
mov
divb
mov
rclb
imul
fisubl
lea
loopne
jns
pop
int
inc
fcmovu
ljmp
xchg
dec
mov
jle
dec
dec
cmp
cmp
es
in
sahf
insl
test
stc
je
and
push
mov
fstpt
xchg
mov
xor
les
jb
mov
xor
sub
or
ret
ljmp
mov
sbb
fidivrl
hlt
fcoml
notb
popa
movsl
xor
loopne
mov
xchg
dec
adc
dec
pop
push
xchg
fisttpl
cmp
sbb
scas
shl
jge
fisttpll
insl
and
mov
fnstenv
scas
mov
or
mulb
adc
iret
push
insl
lea
in
in
dec
lods
add
rorl
bound
mov
shlb
and
ret
sbb
pop
add
lahf
leave
sub
xchg
sub
jle
pop
jp
add
jl
loope
mov
imul
loope
inc
adcl
jg
mov
call
in
push
faddl
add
adc
int3
shlb
push
dec
stc
bound
adc
jno
dec
scas
dec
push
add
int3
add
out
xchg
lods
sbb
int3
and
sti
xor
xchg
pop
adc
jecxz
test
fwait
xchg
sub
jle
jmp
mov
mov
dec
int
or
pop
xchg
mov
mov
and
xchg
pop
repnz
cmp
pushl
or
aaa
aaa
scas
push
cmpsl
sahf
fwait
push
shl
inc
hlt
or
lahf
xor
mov
mov
inc
dec
jl
js
dec
pushf
jne
mov
bound
sbb
out
insb
inc
fcomip
cltd
out
and
xorb
cltd
xchg
insb
xor
xchg
sub
mov
fs
mov
xchg
les
cmp
xchg
pop
mov
adc
mov
mov
mov
imul
xchg
aas
popf
push
xchg
pop
lods
inc
sub
adc
js
push
xchg
pop
cmp
cmp
add
inc
lock
sbb
add
pop
pop
adc
bnd
test
pop
mov
out
mov
inc
lea
push
in
push
cmc
inc
insl
jbe
mov
test
int3
rcll
daa
leave
mov
and
lock
test
int
movl
xchg
mov
addl
cmp
icebp
fsin
outsb
lock
jge
mov
iret
xchg
rolb
jns
ss
xchg
out
or
add
pop
test
enter
ret
sbb
inc
and
and
ja
loope
jmp
cwtl
mov
out
jo
sub
dec
pop
xchg
jmp
mov
stos
mov
in
mov
test
mov
jmp
sub
lods
in
frstpm(287
in
sbb
js
mov
mov
insb
mov
popa
mov
xchg
imul
shlb
mov
add
test
rorb
sub
jle
mov
xor
adc
sub
mov
pop
pop
inc
out
jo
inc
dec
aam
cmpsb
jb
in
imul
and
add
push
dec
scas
stos
xor
popa
das
adc
mov
lds
roll
ljmp
mov
mov
gs
pop
sub
mov
ret
xor
fbld
dec
dec
jecxz
mov
mov
pop
mov
or
push
outsl
cmp
dec
xlat
in
jle
and
or
pusha
loope
fdivl
jecxz
cs
stos
test
cmpsl
and
xchg
pop
movsb
push
das
xor
xlat
cwtl
mulb
pop
jp
push
sbb
sbb
ja
test
adc
testl
dec
aam
in
adc
aad
inc
pop
ja
adc
lahf
orb
inc
xor
dec
xor
incb
pop
adc
iret
mov
loopne
xchg
lahf
loopne
xchg
and
or
and
xor
arpl
inc
xor
mov
rcrl
ds
psllw
mov
and
mov
bnd
or
ljmp
shll
sbb
adc
mov
sub
mov
dec
xlat
sbb
shll
inc
and
sarl
add
push
or
add
scas
xor
jne
stc
jo
xchg
push
xchg
mov
push
punpckhbw
repz
and
xor
or
jecxz
aad
nop
ja
mov
les
insl
adc
enter
pop
lods
jno
es
loope
repz
and
jnp
addr16
ja
sub
addl
arpl
pop
xchg
mov
adc
gs
mov
lds
out
push
or
lods
adc
pop
bound
icebp
adc
std
dec
cld
xchg
inc
mov
loop
lods
pop
mov
pop
or
xchg
or
adc
inc
sbb
dec
pop
or
jns
mov
rolb
repz
xchg
xchg
enter
sub
xchg
in
dec
out
cmp
mov
mov
pop
cmp
inc
outsl
xchg
stc
lock
adc
cli
cld
imul
out
test
dec
mov
hlt
fs
jnp
scas
loopne
jae
inc
rol
cltd
insl
push
fs
pop
imul
pop
mov
shr
push
and
dec
dec
push
insb
rcrb
xchg
and
rclb
outsl
dec
jmp
sbb
sub
ficompl
pop
xor
sbbb
dec
mov
xchg
push
aaa
adc
push
popf
dec
add
stos
xchg
and
and
jmp
stos
dec
pusha
push
repnz
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
aaa
daa
cbtw
cmp
cmp
xor
leave
push
repz
repz
jg
mov
pop
jb
loope
enter
and
mov
nop
cmp
xor
pop
and
pop
and
jmp
lahf
adc
dec
dec
in
test
lret
aaa
jl
stc
fmul
aaa
mov
push
xchg
inc
iret
rolb
inc
push
xor
movsb
sub
jg
daa
jb
xor
xor
add
ret
jl
mov
loope
cmp
xlat
inc
int
or
and
test
xchg
push
mov
cs
test
push
notb
mov
imul
cld
mov
jmp
push
mov
pop
enter
insl
push
out
ljmp
mov
dec
mov
jns
rol
sbb
fs
adc
dec
push
jg
mov
and
xchg
xchg
inc
xchg
sbb
and
mov
leave
push
imul
jae
jle
jmp
dec
mov
mov
pop
xchg
sbb
call
add
dec
stos
imul
push
pop
pusha
mov
inc
sbb
iret
sub
fs
icebp
jns
repz
test
js
popf
inc
xchg
outsl
pop
sbb
subb
scas
mov
mov
stc
jg
aaa
pop
pop
stos
cmp
dec
jae
pop
pop
mov
stc
ret
xor
adc
xchg
rclb
mov
fildl
mov
inc
loop
js
xor
and
filds
jno
pop
pop
sbb
sub
or
mov
sbb
jae,pt
bnd
cmp
shlb
mov
sbbl
add
lcall
call
jecxz
push
mov
lea
or
push
push
sar
dec
pop
in
mov
and
leave
iret
js
lret
xor
testb
jno
dec
mov
mov
xor
repz
mov
cli
mov
pop
ret
pushf
icebp
sub
iret
lret
cmp
xor
mov
mov
sbb
sbb
std
out
test
fs
stos
sbb
mov
enter
xchg
add
or
ss
pusha
dec
imul
jg
xchg
dec
in
fiaddl
std
cmp
dec
bound
push
fsub
enter
pop
stc
fsub
mov
call
sub
imulb
lea
push
add
cmp
cmp
inc
jecxz
push
xchg
pop
add
xchg
aaa
sub
dec
dec
arpl
lods
cltd
lahf
cmp
imul
xchg
in
xchg
dec
cmp
lea
andb
inc
pop
sbb
test
dec
or
push
outsl
and
mov
rolb
and
sbb
jno
lahf
mov
out
dec
inc
mov
pop
movsb
dec
adcb
pop
loopne
shlb
pusha
aam
test
adc
mov
dec
push
xor
imulb
mov
sbb
sub
aam
pop
out
mov
hlt
sbb
imul
lds
push
shlb
xor
mov
xor
fsave
or
fisubs
aaa
cmp
dec
repz
dec
inc
jmp
imul
add
push
fsubrp
jns
cmp
xchg
inc
ret
cmc
pop
bound
mov
sbb
pop
sub
jns
dec
mov
mov
lods
push
cmp
imul
jo
js
dec
mov
mov
orb
adc
pop
push
pop
fucomp
sub
jno
sub
sti
mov
push
mul
ret
xchg
or
mov
sbb
sub
sub
or
jge
loopne
and
adcb
cmpsl
out
pop
fbld
xor
imul
testl
lcall
loop
jb
add
inc
cwtl
repnz
jb
or
stos
into
mov
pop
repnz
pop
stos
cmpsl
or
xchg
jb
sbb
sub
sbb
inc
and
int
xchg
roll
sub
push
mov
dec
outsl
jb
int3
or
mov
jecxz
adc
lds
adc
cmpsb
xor
xor
add
mov
or
negl
roll
sub
nop
jnp
sti
cli
insb
mov
jecxz
popf
xlat
sbbl
lahf
mov
rep
mov
dec
lods
clc
push
mov
xchg
repnz
ss
lcall
clc
sbb
lock
add
add
loope
add
into
adc
imul
mov
mov
xchg
xlat
cmp
mov
add
leave
sub
jno
loop
push
fs
jnp
rcll
inc
push
and
push
mov
mov
push
inc
cltd
inc
add
mov
mov
outsb
pop
dec
push
scas
xor
dec
fistps
loop
data16
test
test
jecxz
test
popa
jns
mov
imulb
test
mov
ficompl
js
inc
aam
mov
cli
or
daa
mov
repz
repz
jmp
add
daa
inc
mov
push
lret
fldenv
cmpsb
xchg
jle
fs
push
pop
subb
ja,pn
add
inc
shrl
loop
adc
lret
pop
nop
dec
rcll
in
jmp
aad
ljmp
mov
hlt
pop
push
cmpsb
imul
or
add
inc
sbb
push
mov
std
ret
arpl
hlt
mov
sbb
xlat
xor
and
int3
pushf
insb
xor
lock
test
popf
daa
shrb
cmp
ret
std
or
cli
out
into
int3
add
or
lods
mov
aas
sbb
sub
fisubrl
dec
or
and
inc
loop
mov
call
xchg
mov
sub
dec
iret
leave
insl
or
sahf
aad
ret
inc
out
lcall
data16
stos
push
lcall
fs
mov
dec
ja
pushf
fiadds
repnz
push
xchg
faddp
push
std
aam
mov
mov
fdivrp
xor
jns
es
dec
sbb
cmpsb
push
xor
adc
dec
cmp
insl
pop
test
jo
sahf
xchg
mov
jmp
jg
fdivrs
mov
shll
add
imul
push
shrl
bound
subl
outsl
add
jne
lcall
inc
les
stc
pop
out
mov
sarb
mov
sahf
cvtpi2ps
mov
cmp
pop
jbe
push
fistpl
jo
std
fadds
fimull
int3
pusha
pop
fistpll
xchg
ret
insb
int3
in
xchg
dec
or
lds
adc
xor
adc
js
mov
mov
cmc
push
gs
jae
or
movsb
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
jne
dec
push
jg
adc
xchg
mov
mov
mov
push
insl
out
push
jne
push
add
sub
xchg
mov
adc
xlat
adc
jnp
mov
inc
iret
rcrl
sbb
in
pushf
icebp
es
out
jo
adcb
add
sbb
mov
lea
inc
std
mov
xchg
into
inc
testl
imul
jno
nop
imul
inc
sahf
push
stc
icebp
xchg
jge
stos
xor
mov
imul
pop
push
in
lret
mov
push
mov
imul
cmp
fs
out
jae
daa
inc
lods
cmp
inc
dec
or
out
inc
push
push
fidivl
or
jecxz
cmc
nop
arpl
cli
imul
or
add
sbb
sbb
into
adc
shrb
out
mov
enter
stos
jmp
sahf
push
inc
sub
repz
xchg
cmp
addb
cmp
scas
jo
jge
xchg
xchg
mov
push
test
das
fwait
pusha
jnp
mov
pop
stos
daa
adc
lds
lods
je
dec
sahf
jnp
bound
pop
lahf
shlb
fcoml
push
adc
xchg
mov
not
jp
addl
je
fildl
cltd
or
pusha
shl
repz
mov
pop
and
xchg
xchg
add
mov
scas
xchg
jmp
ret
int
arpl
movsb
jecxz
lods
dec
insl
stos
and
pop
into
dec
lods
aas
into
mov
ret
cmp
scas
movsb
sbb
ret
dec
and
push
mov
lea
xchg
notl
inc
int
incb
dec
outsl
iret
push
fcoms
inc
mov
int
push
xorl
arpl
cmp
jg
jmp
sbb
xchg
push
xchg
enter
add
sub
in
add
cmpsl
inc
mov
out
filds
cs
lret
sub
aas
xor
add
jnp
rcrl
pop
push
insl
loop
dec
pusha
sub
inc
push
jae
xchg
cli
outsl
add
in
int3
jmp
mov
fdivr
and
push
shlb
jne
sbb
fiadds
ljmp
pop
aad
xchg
popf
test
add
cmc
xchg
inc
scas
andl
ficoms
mov
int3
lods
rclb
iret
imul
xchg
test
dec
xlat
ljmp
mov
inc
inc
and
cmp
movsl
out
and
mov
push
sub
pop
pop
push
cltd
and
cmp
or
cltd
movsb
loop
adc
jl
xchg
mov
lret
push
push
iret
mov
rcr
enter
leave
imul
cmpb
call
push
xor
loop
out
mov
jmp
or
cltd
pop
imul
das
add
xchg
xchg
jo
jb
test
mov
add
ret
enter
and
rorb
mov
cltd
aaa
gs
inc
mov
repnz
push
loopne
je
sbb
jns
or
xchg
mov
cmpsl
inc
pop
xor
jl
mov
idivl
cltd
bound
je
push
mov
lea
aam
push
rcrl
cltd
or
je
sti
pop
pop
sub
clc
cmc
sarb
loopne
jns
ds
push
loope
jmp
cld
cltd
adc
mov
add
icebp
mov
mov
mov
fstp
push
negb
movsl
dec
jnp
loopw
xchg
pushf
ljmp
shll
jp
cmp
inc
jns
push
cli
sarb
out
insl
pandn
imul
lods
jo
stos
jnp
cwtl
add
sub
insl
cmp
mov
dec
jne
out
mov
cmp
in
xchg
jecxz
inc
sub
ja
outsb
addl
pushf
xchg
sarl
std
pop
mov
xor
loope
leave
lock
and
sub
je
andb
push
push
push
dec
inc
call
popa
imul
es
loopne
cmp
pushf
cltd
insb
add
add
and
xchg
xchg
push
push
and
mov
push
add
sbb
mov
mov
imul
cmc
xlat
xchg
mov
and
addb
cmp
xchg
jecxz
adcl
add
popa
inc
adc
les
adc
mov
sbb
xchg
adc
test
testl
adc
aas
mov
cwtl
mov
mov
jg
or
mov
xchg
sahf
mov
dec
je
or
les
out
lds
gs
cmp
stc
pop
lret
jbe
pop
jle
roll
mov
pop
mov
fiaddl
xchg
int3
out
xor
cmpsl
shll
insb
cmp
lea
lods
mov
cmc
dec
inc
loop
jp
enter
fmulp
mov
dec
xor
mov
or
pop
fists
cmp
or
push
jmp
aas
cmp
sbb
push
pop
jne
cmp
mov
fisttpl
ljmp
mov
adc
cmp
and
push
cld
nop
push
adc
mov
aad
push
ss
loop,pn
cld
push
pop
dec
out
test
inc
das
test
mov
aas
andps
ljmp
cmp
loop
fsubr
sti
lahf
int
movsb
outsb
in
cmpsl
push
adc
cmpsb
sub
sub
pop
and
sub
xor
push
xchg
bound
ljmp
ljmp
enter
xchg
insl
repnz
push
sbb
xchg
xor
sti
inc
dec
or
outsl
xchg
ret
std
movsb
ja
mov
cltd
scas
or
jno
adc
scas
jecxz
cli
in
pop
mov
notb
das
in
sbbb
cmp
jl
inc
inc
mov
xor
jg
push
push
jg
adc
outsl
or
adc
and
inc
sub
ss
sbb
fldenv
or
adc
not
jl
push
pop
cmc
pop
ficoms
adc
test
mov
sbb
add
xchg
int3
dec
ret
nop
pusha
pop
push
popaw
jbe
insl
insl
adcl
movb
icebp
bnd
mov
in
shlb
dec
sti
xchg
cld
fisubrs
cmpl
rclb
cld
popf
inc
pop
or
mov
movsl
cmc
clc
sub
rorb
xor
out
in
sbb
adc
push
inc
daa
pop
sub
das
jb
sub
cmpsb
cmp
aam
jl
ret
pop
and
loopne
dec
push
mov
mov
sbb
das
mov
xorl
incl
mov
inc
push
sub
mov
xchg
mov
scas
lea
loopew
jmp
cli
mov
fwait
adc
xlat
jmp
push
jg
sbb
repnz
or
cmp
popl
mov
rorb
ret
mov
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
cwtl
js
adc
xchg
add
add
pop
pop
ret
add
push
xlat
mov
lahf
dec
mov
or
fcompl
popa
rcrl
inc
ret
lahf
jp
ror
mov
mov
cmpsb
jge
mov
inc
in
jb
cmp
mov
icebp
lea
push
push
mov
js
lods
in
dec
mov
gs
add
fwait
cmpsl
push
inc
jp
lea
pop
pop
adc
popf
lcall
dec
push
adc
call
push
outsl
pop
add
repz
stos
and
mov
sub
jb
mov
js
out
loope
dec
push
dec
stc
lods
jno
ljmp
ror
gs
mov
sub
cmpsl
sbb
repz
sti
ss
inc
clc
mov
xchg
outsb
test
fs
sub
out
scas
pop
sub
xchg
jecxz
loopne
clc
addr16
popf
loopne
sub
pushf
jmp
mov
ss
push
pop
lea
cmp
ss
daa
xchg
pop
xchg
scas
ds
sub
out
lods
daa
cmp
mov
inc
sub
inc
mov
push
loope
mov
insl
stos
xchg
aaa
dec
out
pop
mov
jae
std
push
mov
mov
jecxz
scas
icebp
hlt
jno
nop
lcall
push
pusha
add
add
jmp
addl
mov
pusha
push
sub
and
fs
xor
cmp
test
adc
push
mov
xchg
ja
mov
std
jge
cmp
call
jne
outsb
outsb
fsubr
out
mov
aad
mov
adc
out
in
add
inc
or
ja
aad
aad
getsec
cmp
mov
dec
mov
cmp
mov
dec
dec
loope
and
lea
mov
jle
ds
sub
into
jno
popf
add
xchg
jo
xor
fldl
add
mov
in
leave
stos
shll
xor
inc
sub
in
mov
cli
and
sbb
mov
jge
scas
rcrl
dec
xor
std
jns
movsl
mov
pop
das
or
addb
xlat
or
pusha
test
rcr
pop
push
jge
dec
cwtl
inc
sub
outsl
sub
jne
adc
jp
cld
aam
outsl
je
mov
orl
fwait
xor
aas
dec
cmpsl
jb
xor
add
fcmovu
int3
addr16
dec
xchg
in
mov
in
adc
jbe
in
stos
rclb
pop
shll
popa
mov
pop
ret
cmp
or
aaa
push
pusha
or
testb
mov
cmc
xchg
mov
mov
dec
enter
and
mov
or
dec
add
in
js
jmp
mov
mov
iret
addl
xor
test
out
lock
shlb
and
sub
test
mov
push
xor
hlt
xchg
call
cmp
arpl
jecxz
in
jno
loope
sti
adc
push
xchg
and
fidivs
pop
out
stos
unpcklps
es
dec
lret
xchg
jge
lret
pop
dec
hlt
cmp
sbb
or
leave
pop
and
mov
aad
jl
xchg
xchg
push
mov
xor
fstpl
and
cmpsb
lahf
mov
mov
add
cld
xor
loop
sub
push
mov
stos
fadds
in
cltd
adc
mull
cltd
cltd
cs
jl
cmpl
fcompl
imul
pop
in
and
ja
rcrb
dec
sub
jo
idivb
stos
xchg
adc
test
pop
pop
popf
data16
movq
cmpsb
adc
out
lea
scas
mov
add
cmp
out
jbe
jnp
int3
sbb
cwtl
movsb
push
rol
mov
ret
inc
pop
sbb
adc
mov
add
stos
cmc
icebp
fdivr
call
pop
mov
pop
stos
in
iret
pop
ret
das
or
jno
push
add
adc
push
sub
adc
mov
push
fisubrs
cmp
xchg
mov
xchg
xchg
test
mov
rolb
sarb
ss
pop
aaa
test
xchg
adc
movsb
insb
adc
scas
xchg
xchg
lret
std
jge
push
or
leave
addr16
xorb
insl
jecxz
mov
sar
nop
mov
fadd
dec
or
inc
sub
sbb
pushf
push
aas
cmp
das
pop
popl
inc
mov
cld
stos
pop
add
xor
out
pusha
mov
cli
cld
dec
scas
push
stc
xchg
outsb
pop
cwtl
int3
jae
les
dec
ja
push
xchg
popf
lret
jecxz
sub
popf
in
pcmpgtd
fucomip
mov
inc
inc
clc
pop
int3
fs
fisubrs
test
shrb
pop
sub
push
sahf
adc
mov
xor
inc
jo
xchg
adc
aad
mov
pusha
jnp
or
lods
sarb
push
pop
dec
leave
add
das
or
fcomps
jecxz
aam
lret
mov
sbb
mov
rolb
movsb
xor
xchg
aaa
push
sbb
add
pop
cs
jns
das
dec
pop
xchg
cltd
jno
jo
loop
mov
sub
shrl
push
sub
jg
xchg
pop
push
mov
mov
popl
jge
dec
push
jnp
mov
cltd
notl
mov
xor
pop
aam
xor
or
dec
xchg
iret
ljmp
mov
ljmp
insb
mov
cmp
nop
outsb
loope
das
pop
insl
movsl
push
je
push
clc
movsb
mov
xchg
bound
fiaddl
dec
pop
mov
or
xchg
test
pop
loopne
fsubs
push
test
icebp
xor
icebp
cmpsl
das
gs
cmp
insb
ljmp
cld
jl
push
xorl
xchg
notb
into
aas
outsb
jmp
fmulp
pop
enter
ja
mov
movsl
jecxz
dec
dec
xchg
push
popa
ja
lahf
adc
lods
stc
jne
iret
cwtl
add
mov
fstpt
sarl
xchg
in
movsl
inc
xorl
push
insb
adc
inc
lds
outsl
mov
cmpsl
pop
mov
sub
cwtl
mov
xchg
xchg
mov
out
or
inc
xor
rol
push
ja
pop
test
out
pop
nop
inc
arpl
sub
sub
fcomip
sahf
adc
popf
icebp
mov
std
clc
or
in
jecxz
stos
test
jb
stos
jne
dec
mov
lock
fidivrl
push
mov
inc
leave
pop
fcoms
add
sbb
cmp
jo
and
mov
jmp
adc
in
push
ljmp
mov
mov
xchg
xchg
xorl
ds
in
neg
adc
mull
ljmp
dec
xchg
popf
xchg
scas
xor
aam
mov
cs
xchg
adc
xor
test
and
testb
pop
xlat
fwait
loope
addr16
cmpsb
test
enter
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
inc
push
xor
add
xchg
fwait
scas
movsb
test
xor
test
sbb
sub
mov
fsub
and
xchg
andl
arpl
movsl
cmp
and
pop
mov
insl
jae
idivl
bound
into
in
scas
sub
add
cli
inc
jg
cmpsl
adc
fs
enter
add
sub
imul
aas
lcall
mov
bound
cmpsb
inc
data16
dec
add
push
movsb
and
nop
mov
mov
mov
cltd
push
add
cmp
test
jp
mov
push
bound
aaa
mov
dec
or
ja
das
xchg
or
and
mov
loop
mov
insl
xchg
inc
mov
and
jo
cmc
stos
mov
por
lods
outsb
cli
jb
push
in
jp
iret
ret
pop
pop
sahf
test
xchg
les
ret
int3
inc
or
in
inc
mov
mov
mov
push
cmp
sarl
and
ret
add
cwtl
ficoms
pop
and
mov
clc
inc
pop
mov
lret
pop
xchg
jmp
pop
push
lcall
or
lahf
adc
and
add
je
out
imul
sbb
inc
popf
out
xchg
jne
out
loop
incb
and
imul
mul
repz
xor
outsl
int
sbb
repz
dec
cmp
addb
and
xchg
test
gs
sub
add
lret
adc
ja
jno
mov
xchg
loope
mull
cmc
in
cli
insb
inc
and
adc
sub
and
dec
test
push
gs
sbb
adc
pop
pushf
mov
sbb
adc
cmp
mov
and
or
scas
js
idivb
push
fs
fprem
xchg
fsubrl
incl
insl
xchg
push
pushf
loopne
int
fnsave
pop
mov
test
lea
mov
stc
mov
les
stos
add
add
repz
rcr
jecxz
xlat
sub
push
lret
div
or
add
movsl
gs
lret
sbb
daa
cmc
push
inc
and
sub
adc
movsl
push
ss
dec
ss
lcall
aam
rcrl
mov
es
jbe
xchg
stos
cmpsl
sub
and
add
push
push
xchg
push
aas
stos
mov
mov
push
stos
aas
movsb
imul
xchg
out
and
arpl
nop
mov
rorb
fnsave
leave
bound
mov
mov
pop
dec
and
add
mov
push
jle
out
hlt
add
ficompl
cmp
ja
cmp
ficompl
dec
aas
cli
xchg
xor
xor
inc
jae
mov
or
mov
inc
push
inc
popa
flds
scas
cltd
and
pushf
out
jmp
popf
cmp
inc
call
rolb
cmp
xchg
pop
push
dec
pop
and
inc
insb
or
or
mov
test
mov
cli
sbb
out
inc
mov
insb
xchg
shrb
es
sbb
out
and
test
movsl
sti
mov
jg
fs
mov
ja
outsl
stc
mov
mov
xchg
xor
cwtl
xor
mov
stc
jg
dec
push
call
xor
addr16
scas
pushf
pop
stos
push
xor
insb
jno
ret
push
imul
int3
push
test
cmp
aad
dec
mov
fmuls
inc
sub
jmp
mov
sub
cmp
call
rcrl
sbb
jbe
jmp
mov
xchg
test
loope
sub
or
clc
sbb
insl
outsl
stos
xchg
jge
push
lahf
into
lret
inc
sti
jmp
rcr
jo
andl
mov
adcb
insb
mov
pop
adc
and
imul
int3
xor
pop
daa
lahf
leave
mov
out
pop
or
leave
daa
dec
sub
sub
cld
cmp
add
mov
xchg
xor
lock
lods
inc
mov
idivb
testl
sarl
cwtl
data16
ficoms
sbbl
dec
pop
push
jns
mov
mov
or
or
xor
aaa
test
cmpsl
jbe
xor
cmp
pop
push
jbe
subl
lahf
loope
and
add
jno
inc
mov
xchg
pop
push
mov
mov
pop
dec
push
push
cmpsl
in
outsl
int
inc
cmp
mov
out
divl
lds
and
push
push
or
icebp
xor
cmp
push
mov
pop
pusha
mov
ljmp
cwtl
aad
mov
push
jl
ja
iret
jle
cld
inc
outsl
cmp
mov
int
add
mov
cwtl
push
cmp
outsb
xor
sti
add
pushf
test
mov
mov
cmpsl
jbe
and
and
lds
sarl
in
cmpsl
lock
cmc
xchg
add
testb
dec
fs
adc
xchg
push
call
scas
icebp
fidivl
add
aas
push
cmp
mov
add
out
std
loope
std
aam
xor
cwtl
inc
sahf
sbb
jb
add
push
dec
out
sarb
nop
repz
aaa
test
in
mov
fldenv
in
mov
and
lret
jecxz
xchg
pop
pop
roll
into
in
dec
xor
stos
pop
jl
mov
mov
arpl
mov
cmp
sub
scas
fistps
hlt
imul
nop
dec
push
jb
inc
cmpsl
loope
and
adc
xor
xor
pop
inc
pop
xchg
jns
adc
je
adc
cli
jg
add
mov
cs
test
inc
push
icebp
movb
mov
mov
iret
xchg
add
cmp
push
xor
push
xchg
jb
mov
test
subl
rcrl
mov
push
mov
inc
push
pop
xchg
cltd
lahf
sbb
fcmovne
aaa
lds
sbb
data16
xchg
push
xlat
jle
push
cwtl
adc
inc
inc
push
dec
inc
pop
push
imul
fwait
and
mov
sarl
dec
and
call
mov
popa
push
or
pop
cmp
bound
int3
cmpsb
dec
xorb
out
je
jle
lods
mulb
stos
jnp
dec
outsb
enter
rcl
push
adc
cmc
sub
and
fldcw
adc
test
xchg
mov
pop
fnsave
out
pop
outsb
enter
xor
in
out
fisttpll
dec
lret
add
jecxz
add
xchg
pop
imul
sub
jle
lret
inc
pminsw
pop
mov
push
sub
or
adc
xor
movsl
orl
dec
mov
insl
xchg
icebp
mov
pop
adc
adc
nop
movsb
push
cwtl
stc
mov
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
iret
in
mov
ja
jo
popa
mov
adc
repnz
dec
mov
inc
leave
mov
pop
adc
in
push
std
mov
test
jp
iret
cmp
jbe
andb
dec
je
push
lret
sub
inc
sbb
mov
mov
daa
pop
adc
dec
cmp
leave
stos
and
imul
mov
nop
pop
movsl
xor
or
sbb
jb
stos
inc
push
lcall
into
push
sbb
push
je
pop
outsb
fcmove
lret
mov
sub
dec
mov
data16
pop
push
fmulp
out
stos
dec
jne
leave
aam
test
lock
sbb
addr16
pop
or
push
fisttps
adc
dec
rorb
pushf
aas
outsb
scas
imul
outsl
test
mov
lret
and
fs
xchg
xchg
repz
cmp
adc
push
hlt
xlat
cmp
mov
xor
mov
ja
jnp
sbb
fbld
mov
add
push
enter
mov
cmpsl
pusha
push
push
decl
mov
lret
or
insb
mov
out
add
mov
test
pop
fisttps
and
dec
fucomp
mov
rcrb
inc
xchg
mov
popa
scas
mov
stos
push
fs
dec
sbb
in
stos
in
fisttps
test
test
mov
outsb
add
enter
test
int
xor
xchg
pushf
gs
jle
jbe
test
xchg
shrb
repnz
rcll
jmp
sub
mov
mov
outsl
push
xchg
and
pop
pop
xchg
cli
adc
shrl
lea
shll
dec
inc
int
pop
inc
pop
mov
aam
mov
and
inc
xchg
addr16
push
das
push
jo
pop
mov
mov
push
arpl
pop
adcb
pusha
and
inc
xchg
lret
sub
in
adc
xchg
stos
adcl
and
shlb
shll
movsl
add
iret
into
lods
jno
popa
int3
mov
scas
fistl
lea
and
pop
in
mov
hlt
mov
in
les
mov
mov
push
xlat
cmp
jo
fidivrs
lret
negb
jge
adc
or
in
and
push
xchg
repnz
test
sub
push
add
out
mov
and
mov
and
pop
test
ficoml
pop
lods
roll
sbb
dec
xchg
out
and
add
mov
insl
sub
add
adc
or
jno
xchg
idiv
cmp
xchg
out
mov
out
and
aad
imull
dec
outsl
sahf
notl
gs
sbb
lods
int
push
jmp
push
fistpll
scas
rcr
hlt
les
inc
loopne
in
xchg
or
repnz
jle
sti
into
xchg
ss
jle
mov
stc
stos
dec
push
leave
cmp
leave
int
das
adc
shl
push
movb
das
mov
out
scas
pop
mov
push
pop
sbb
mov
out
lret
in
pop
movsl
loope
push
cmp
mov
add
popa
pop
sbb
push
push
nop
xor
into
insb
cmp
int
add
test
pop
mov
and
mov
into
call
test
pushf
sahf
pop
jo
mov
mov
xor
int3
dec
mov
xchg
pop
das
enter
mov
add
mov
pop
shr
rcll
aaa
pop
cmp
xor
jmp
push
mov
jge
and
ds
jg
xchg
cmp
mov
push
mov
sbb
push
add
lahf
int3
movsl
sub
sub
xlat
sbb
ret
jo
out
cltd
jo
dec
imull
sub
nop
and
pop
test
fwait
hlt
into
adc
add
sbb
loopne
cltd
ja
les
add
dec
loopne
jg
xchg
incb
and
pop
lahf
mov
incb
mov
jmp
out
out
push
int
sbb
adc
aad
bound
pop
outsl
cli
pop
pop
or
ljmp
jno
mov
mov
aam
or
cmp
sub
mov
dec
test
inc
sub
xchg
iret
imul
add
outsb
ss
jno
jl
lcall
rolb
pop
xlat
ret
dec
cmp
repz
or
es
push
outsl
xchg
mov
mov
ss
bound
pop
rcrl
and
in
jae
mov
es
sbb
mov
cmpsb
push
xorb
inc
sbb
jns
dec
inc
lea
movsb
movb
ljmp
or
enter
mov
test
mov
into
adc
shrl
rol
pop
xor
fwait
push
jmp
inc
das
push
int3
push
cmc
sbb
rcll
pop
and
jmp
xchg
insl
mov
fisubrs
mov
jg
pop
mov
push
cmp
iret
push
movsb
out
leave
jecxz
mov
stos
xchg
push
cltd
lea
adc
mov
nop
dec
adc
fnstcw
inc
mov
mov
mov
mov
out
adc
cmp
loope
inc
mov
inc
dec
cmp
add
xchg
xor
push
xchg
jno
pusha
push
je
lods
mov
add
ret
jl
sbbl
lcall
mov
pop
inc
cmp
lods
cmp
loop
mov
test
add
push
pop
cli
add
mov
ss
scas
in
bound
mov
mov
push
shrb
arpl
bound
rorl
push
stc
pop
dec
mov
mov
mov
push
sbb
cmp
dec
xchg
repz
pop
and
adc
cmp
jno
cwtl
mov
sbb
aam
pop
insb
xor
into
loope
adc
mov
icebp
in
cs
sbb
adc
orb
jp
push
stos
enter
mull
push
add
rcrb
cmp
mov
add
or
adc
test
dec
add
xor
or
sbb
out
dec
sbbl
lahf
leave
mov
dec
jns
ret
int
pop
mov
pushf
jecxz
or
adc
cltd
pop
xchg
cmp
jae
jg
decb
jno
and
cmp
daa
repnz
out
test
arpl
or
mov
cmpsb
iret
scas
cmpsl
sbb
jne
lods
push
xchg
fnstcw
jl
xchg
xchg
testb
mov
and
data16
movsb
cmp
inc
icebp
lret
sbb
mov
sbb
in
sti
call
popf
mov
jno
sbb
cmp
pop
iret
push
lea
and
jbe
xchg
pop
push
xchg
das
add
loope
add
jbe
sti
jae
sub
mov
jo
imull
add
add
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
push
rclb
adc
pop
testl
popa
sub
push
inc
pop
loopne
and
aam
push
mov
lods
or
mov
movsb
pop
jecxz
adc
pop
or
cli
push
jnp
fsubl
or
add
repnz
or
scas
repz
inc
add
cmp
pusha
loopne
push
es
ror
push
dec
js
in
lods
cmp
scas
mov
data16
fidivl
cld
call
lcall
pop
add
pop
inc
mov
in
mov
pop
pop
jne
inc
fsubs
dec
jl
movsl
fwait
sbb
sbb
dec
mov
sub
mov
dec
mov
ljmp
shll
inc
rcr
or
pop
push
push
sub
jns
xor
je
pop
ret
lret
cmpsl
les
addb
cmp
xchg
mov
sub
xlat
int3
mov
pushl
in
push
lret
vphaddwq
dec
cmp
es
dec
insb
ljmp
push
pop
jle
dec
aam
ds
pop
fs
mov
sti
jmp
mov
fcompl
inc
push
inc
js
int3
in
repz
enter
sarb
aam
sbb
pop
inc
jbe
inc
lahf
inc
xchg
dec
inc
jp
aas
mov
pop
jp
arpl
push
gs
or
pop
pop
fnsave
fwait
mov
lea
sub
mov
xchg
stos
mov
or
jmp
cmc
movsl
cmp
cmc
sbb
mov
mov
fisttpll
insl
enter
cmp
js
insl
lcall
sub
dec
andb
test
jp
movsb
mov
jg
lret
arpl
out
ss
stc
xchg
or
out
and
jno
mov
adc
fistpl
scas
push
add
sub
lret
dec
popf
and
into
lods
ret
xchg
daa
ljmp
inc
push
push
cwtl
push
out
xchg
out
xchg
fwait
xlat
mov
fdivs
sahf
std
arpl
push
add
mov
push
sub
std
nop
push
pusha
ljmp
cmpsl
test
cmp
dec
or
pop
loopne
sbb
loop
fwait
sub
push
cmp
xor
sbbl
push
and
out
xchg
rol
dec
dec
mov
mov
xchg
inc
pop
shl
in
fsubrs
test
pop
in
push
lods
in
shl
enter
stos
aam
pop
repz
dec
cs
rclb
push
add
mov
xor
clc
cs
xchg
sbb
adcb
sub
ljmp
sahf
mov
decb
sub
or
pushf
xchg
loope
mov
pop
sub
icebp
insb
push
fs
dec
call
scas
lock
inc
rcrl
mov
mov
sub
cmpsb
lret
add
mov
test
insb
and
lea
fldln2
dec
dec
adc
and
dec
sbb
pop
sbb
int3
movsb
aaa
cs
mov
insb
push
stc
addr16
pusha
cmp
or
sub
jge
std
fucomp
xchg
imul
mov
sub
icebp
push
loope
jmp
hlt
dec
jl
sarb
iret
pop
mov
jle
xor
cmc
jne
ljmp
or
and
push
insb
sub
mov
pop
jns
call
in
cmpsb
test
adc
cmpsl
xchg
popf
cwtl
pop
mov
sub
inc
push
in
sbb
mov
popf
xchg
xor
frstor
insl
xor
xchg
jb
shl
cmpsb
xor
mov
out
pop
pop
imulb
mov
inc
loopne
xchg
xchg
mov
lds
stos
and
adc
xchg
add
std
jo
sbb
inc
sbb
aam
icebp
test
dec
xchg
mov
dec
lahf
sub
or
adcb
mov
or
out
mov
mov
jo
stos
movsl
mov
xchg
inc
push
fs
fcoml
leave
xchg
mov
jns
or
xor
sub
arpl
adc
sbb
dec
push
cmp
lea
add
or
ljmp
add
ret
stc
push
mov
jg
sbbb
cmp
mov
dec
mov
mov
insl
mov
sarb
rclb
mov
lret
int3
test
rclb
movsb
out
xchg
cmp
push
dec
movsb
rep
rol
int
push
mov
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
