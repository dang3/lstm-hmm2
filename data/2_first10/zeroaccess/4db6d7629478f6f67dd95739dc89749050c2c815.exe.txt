push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
xchg
push
jle
sbb
sbb
cmc
idiv
rorb
cs
shlb
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
add
mov
and
int
mov
out
in
xchg
cli
pop
notb
pop
movsb
stos
out
movsl
pushf
popf
xchg
dec
cltd
sarb
pop
xchg
cld
pushf
sub
mov
enter
mov
add
or
iret
mov
jns
mov
push
loopne
xchg
out
pop
pop
scas
and
inc
mov
out
mov
and
and
sbb
sub
test
cmp
mov
aam
insl
mov
adc
repz
bound
lods
mov
jbe
stos
inc
js
pushf
pop
cs
inc
jns
ret
jo
inc
lods
xor
mov
xlat
les
add
and
cmp
imul
push
cmp
xor
mov
sbb
cmp
cmpsl
or
push
cmp
sahf
xor
cmp
pushf
add
in
lods
mov
mov
adcl
fsubr
outsl
call
xor
xor
leave
mov
cmp
adc
scas
push
fisubs
dec
aas
xchg
mov
push
ret
inc
lcall
lahf
jge
adc
outsb
push
cmp
pop
shll
pop
jecxz
in
cmp
add
decl
push
testb
daa
insb
hlt
jb
or
xor
rcll
pop
push
je
mov
mov
cmp
cmpsb
sbb
aaa
scas
adc
pop
push
aad
sahf
and
adc
hlt
jo
test
add
mov
repnz
push
cli
xor
xor
sahf
inc
lret
std
aam
jle
ficoms
mov
pusha
jl
in
ljmp
add
jecxz
testb
aaa
inc
push
mul
jae
sbb
loope
mov
fdivrl
and
push
int
test
pop
rolb
cli
daa
inc
xchg
dec
data16
filds
push
pop
mov
dec
push
mov
repnz
jle
int
adcb
jge
ja
popa
cmp
adc
xchg
outsl
sti
mov
int3
stos
add
test
sub
cmc
sub
cmpsb
push
sbb
mov
imul
not
jecxz
cmp
fmul
loopne
pop
inc
icebp
imul
push
cli
add
pop
addr16
ds
int3
in
xor
daa
stos
call
mov
nop
inc
sub
cmp
sarl
xchg
pop
adc
mov
xor
xor
mov
mov
and
repz
mov
movsb
xor
xchg
rcl
movsb
in
insb
and
push
jne
mov
test
push
nop
sub
test
jns
ret
movsl
push
movsb
jp
jg
xlat
xchg
repnz
in
mov
pop
stos
and
icebp
scas
and
and
lret
call
dec
loope
mov
push
mov
adc
insl
sub
dec
ljmp
add
mov
jp
or
mov
xchg
adc
xchg
xchg
and
pop
out
or
fwait
movb
jbe
mov
ret
jbe
dec
mov
push
mov
ret
dec
addl
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jo
adc
sbb
ljmp
xor
inc
fwait
int
mov
cmp
dec
fwait
xchg
sbb
aaa
jmp
pop
xor
orl
adc
cmp
push
or
add
ret
inc
adc
pushf
leave
lock
jns
aaa
fistpll
dec
rorb
mov
mov
and
sarb
mov
or
mov
stos
jnp
enter
and
ss
push
xchg
sub
outsl
or
lock
cli
inc
sbb
mov
and
lds
xchg
cmp
fisttpl
pop
clc
push
fmull
add
lds
or
xor
js
xor
mov
or
add
push
xchg
inc
mov
ja
jle
jl
xchg
and
and
pushf
pop
cli
insb
lahf
mov
sbb
push
test
out
push
inc
push
jo
sub
pop
mov
int3
add
mov
adc
mov
scas
push
movsb
add
xchg
push
shrl
outsb
inc
mov
gs
cmpsb
pop
pop
dec
mov
rorb
sub
sub
test
lea
push
jae
jae
in
sbb
andl
and
loop
cmp
mov
add
mov
out
orl
out
add
add
xchg
mov
ret
int
icebp
jge
out
cmc
xchg
adc
lcall
scas
lods
adc
cs
out
outsb
or
cmp
push
adc
xchg
outsl
or
aam
sbb
push
jl
push
sti
cmc
adc
fbld
mov
pushf
pop
rclb
rcrb
daa
dec
add
sub
sub
jmp
bound
aad
jl
repz
aam
sbb
cs
sub
xor
push
dec
fidivrs
aas
pop
cmpsl
and
hlt
dec
jbe
xor
mov
pop
fucomi
mov
cmp
sti
and
lods
pop
incb
mov
jbe
dec
pop
pop
jb
ss
sti
cmp
inc
adc
push
push
xchg
cmp
std
or
add
rcll
push
add
adc
mov
rcll
jns
xorb
push
dec
add
sub
std
lcall
jle
pop
aam
add
pusha
cli
dec
dec
push
xchg
xchg
xchg
out
xchg
divl
out
mov
lahf
sbb
or
bound
or
enter
xor
pop
xchg
ret
aad
sarl
popf
mulb
sti
pop
adc
and
lock
js
sarb
test
in
adc
aad
or
loope
outsb
mov
inc
pop
sti
adcb
stc
lods
sarb
fucomp
pop
push
jno
add
lea
ret
aas
movsb
or
adc
dec
lock
xor
jne
adc
loopne
jae
push
dec
lret
pop
add
cmp
adc
or
rorb
dec
loop
nop
sbb
jnp
and
sbb
jns
jne
in
in
inc
pop
in
arpl
sbb
inc
sbbl
xor
sub
gs
mov
pop
mov
lcall
push
jecxz
adc
and
xchg
fs
data16
xchg
add
sub
or
stos
lods
icebp
fidivl
cmp
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
loope
jle
or
sbb
cmp
stc
fcmovnbe
dec
mov
xorb
stos
in
mov
pop
push
lret
inc
std
adc
or
shl
or
inc
out
int3
dec
scas
outsb
outsl
loope
mov
pop
fwait
cmp
das
ret
push
mov
cmpl
pop
and
jno
popa
fwait
pop
in
std
sub
mov
les
je,pt
ljmp
js
mov
sti
fsubrs
push
outsl
mov
fsubrl
bound
lret
mov
inc
mov
adc
xchg
pop
inc
add
jbe
mov
xor
or
jl
test
push
jb
xchg
push
repz
xchg
xlat
loopne
aad
clc
push
push
cmp
lret
mov
popf
repnz
loop
mov
lret
outsb
mov
push
push
ret
shrb
add
ret
int
add
and
adc
mov
xchg
push
jle
popf
and
pop
lret
lds
imul
adc
mov
hlt
int3
sub
jl
ja
dec
jle
pushf
mov
rcrb
out
cmc
adc
pop
mov
in
sub
xor
push
popa
addb
int
mov
pop
lock
jmp
sub
or
add
enter
or
subb
pop
pop
xchg
das
lahf
fs
pop
pop
movsb
ss
mov
xor
add
pop
dec
nop
xchg
or
xor
loope
push
sbb
pop
mov
add
data16
jns
nop
mov
add
cmp
inc
and
aam
imul
data16
lcall
inc
push
cmpsl
dec
loop
lea
xchg
mov
pop
xorl
adc
mov
xchg
ret
mov
jno
adc
inc
or
out
je
jl
sbbb
dec
mov
repnz
pop
outsl
out
mov
or
jb
sub
clc
mov
jp
adc
sbb
cwtl
lods
cmp
stc
push
enter
add
rclb
roll
out
hlt
idiv
out
xchg
lods
pop
lret
aam
cwtl
jbe
or
inc
js
clc
adc
fcomi
pop
test
pop
xchg
loop
sbb
cltd
pop
movsb
iret
dec
pop
push
inc
orl
int3
jge
arpl
lret
shrb
jmp
stc
dec
add
mov
cmc
fwait
ss
dec
dec
std
xor
cltd
cmp
scas
push
js
pushf
roll
js
sbbb
fcoml
scas
inc
push
cmp
insb
cmp
mov
sub
xchg
shl
lcall
cmp
mov
mov
sbb
inc
lods
cmpsl
aaa
mov
stos
xchg
xor
jne
mov
xchg
inc
insb
mov
addr16
push
add
cmp
pusha
jo
jl
push
repz
fidivrs
or
push
cmc
adc
lods
pop
sti
leave
in
loope
inc
add
add
mov
sub
push
test
loopne
in
push
mov
xchg
out
fwait
mov
adc
rorb
in
cwtl
xor
jmp
pmaxub
jns
ret
repnz
out
std
js
mov
mov
inc
xchg
xchg
add
jp
xor
jne
mov
fbstp
testl
and
out
out
jae
sbb
mov
and
adc
sarb
stos
fdivp
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
mov
insl
scas
ljmp
pop
fs
ljmp
cmp
mov
sbb
fs
xor
or
dec
pop
ljmp
inc
adc
inc
fistps
loope
outsb
and
repz
mov
pop
insl
lods
aam
cmp
pop
into
loop
pop
loopne
aas
cmpsl
inc
mov
lahf
call
lods
jb
push
jae
mov
fwait
or
or
ret
add
mov
daa
jns
imul
pusha
adc
hlt
mov
rcrb
int
sarl
loopne
xchg
inc
bsf
fwait
jnp
aaa
fwait
sbb
gs
pop
addr16
push
rep
and
es
es
and
xchg
xchg
push
add
iret
dec
int
mov
loop
mov
jns
jo
xchg
pop
iret
xor
clc
fistpl
rorb
push
and
mov
js
aad
mov
jge
xchg
aam
mov
aam
test
popa
push
sbb
rolb
testb
pop
sub
shll
sub
mov
and
or
in
inc
jno
pop
shrl
pop
inc
pop
test
in
dec
ret
pushf
imul
movsb
mov
loopne
out
add
in
jb
and
mov
jns
dec
xor
add
or
in
ss
loop
out
cltd
cli
rorl
mov
push
movsl
jp
ja
stc
call
imul
outsl
cmp
sub
insb
addr16
jp
jecxz
cmp
cmp
data16
idivb
into
mov
xlat
dec
xchg
or
in
xor
ret
shlb
ficoms
mov
imul
in
sub
outsb
xchg
int
loop
adc
push
neg
xor
shl
adc
cmc
jnp
mov
mov
pop
data16
stos
adc
dec
mov
aad
leave
or
cmpsb
aam
mov
adc
sub
xor
adc
jo
push
mov
addl
sbbl
and
sub
leave
jb
aam
sbb
mov
les
mov
enter
dec
lea
dec
incb
sbb
mov
jmp
enter
jns
arpl
fs
and
xor
loopne
xor
loopne
inc
mov
mov
imul
jmp
test
out
test
les
cmpsl
mov
dec
sbb
inc
lds
lret
xor
mov
ljmp
push
push
jo
je
stos
pop
xchg
bound
push
ljmp
jb
mov
int
mov
les
sahf
or
xchg
shlb
stc
cmc
push
mov
fbstp
cwtl
fisttps
adc
fbstp
or
add
in
push
pop
cmp
repz
fistpl
test
xor
outsb
sub
cwtl
pop
rcl
mov
jp
into
mov
rclb
daa
xchg
xchg
adc
and
pop
loop
out
lock
push
dec
push
mov
ret
inc
add
jbe
pop
ret
lds
and
ja
lods
mov
and
mov
pop
int
aas
jecxz
adc
mov
in
sbb
fidivrl
inc
nop
jb
add
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
arpl
movb
int3
and
jecxz
testb
adc
in
xor
and
cltd
dec
cmp
sti
rcr
sbbb
xor
test
imul
mov
add
mov
mov
lahf
nop
sbb
cmc
add
xchg
sahf
dec
flds
dec
sbb
scas
mov
out
mov
stos
cli
jecxz
hlt
inc
ficoml
and
out
fsubl
mov
add
dec
rcr
popa
cli
and
push
dec
ljmp
pop
roll
add
sub
xor
xorb
mov
gs
mov
scas
sahf
xchg
loopne
cmp
imul
xchg
das
xchg
mov
lcall
icebp
sub
sbb
outsb
out
jae
in
sub
lfs
jmp
sti
pop
xchg
repz
in
add
lahf
inc
xchg
test
je
int3
dec
subl
aam
or
xchg
jne
and
jns
leave
push
inc
gs
mov
mov
xchg
pop
cmp
sub
jecxz
imul
ja
loope
fistpl
loopne
sbb
sub
imul
call
frstor
ret
adc
inc
fcmovbe
xchg
insb
subl
cs
mov
push
xorb
pop
or
add
scas
insl
sbbb
mov
adc
clc
addr16
adc
cmc
rorl
mov
or
mov
addr16
dec
fistpll
xchg
mov
add
pop
dec
movsl
jge
and
sbb
insl
cmovl
xchg
ret
pop
pop
and
cmp
cwtl
sub
es
adc
sub
jb
add
lds
mov
loopne
movsl
lahf
xchg
in
sub
inc
fstpt
sbb
push
mov
cltd
cmp
mov
lcall
repz
and
sub
xchg
mov
jg
xchg
push
cld
rcll
aad
shl
cli
inc
push
call
add
hlt
iret
aad
xor
mov
arpl
mov
mov
mov
jge
popa
push
xchg
nop
popa
mov
mov
fsubs
mov
movsl
fdivr
test
mov
jns
gs
outsl
movsl
jbe
or
iret
jp
notl
jmp
std
std
or
jnp
jl
dec
mov
mov
sub
call
jmp
adc
aas
push
sbbl
call
dec
lods
add
ds
sti
fsubl
ja
adc
adc
lret
mov
sub
in
fildl
xchg
sub
dec
cmp
test
sbb
icebp
mov
xchg
fdiv
ds
out
stc
outsl
stc
mov
stc
fbstp
cltd
push
push
xlat
mov
lret
sub
mov
outsl
in
out
mov
jo
push
cmp
scas
sbb
xor
jg
lahf
aam
cmp
cmpsl
jbe
mov
add
jmp
or
and
outsl
ret
fs
pop
push
imul
add
notb
push
mov
cmpsl
aas
pop
jp
loope
sahf
imul
stc
shlb
insb
outsl
cmp
pop
and
arpl
enter
dec
iret
adc
lds
dec
and
push
inc
in
ret
in
xchg
sbb
dec
jno
les
or
ja
inc
add
inc
add
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
stos
mov
sbb
sahf
adc
sbb
xor
mov
gs
and
mov
jnp
repnz
shrl
scas
pusha
sub
mov
sub
std
std
push
adc
mov
div
jecxz
cmp
pcmpeqw
sahf
mov
jae
pushf
mov
aad
stos
stos
jecxz
cmpsl
xor
pop
cmc
mov
icebp
into
sub
pop
or
mov
lods
dec
ja
pop
mov
mov
push
and
xchg
cmpsl
fnstsw
lret
push
das
xor
bound
out
in
in
jns
mov
mov
mov
add
pushf
push
inc
movsl
pop
cmp
mov
fidivrs
notb
sbb
ret
mov
push
fsubp
mov
iret
push
clc
xchg
cli
xor
adc
fcmovnbe
imul
jns
jns
jne
xchg
mov
rcl
popl
shl
lret
pushf
lods
or
cmpsb
or
std
sti
in
mov
out
dec
mov
cli
inc
sbb
pop
mov
loopne
ret
arpl
adc
mov
cwtl
or
jmp
mov
or
lahf
xorb
pop
cmp
sub
xor
xor
xchg
lock
jecxz
out
jne
jecxz
in
cmp
ljmp
xchg
mov
pop
lcall
add
loopne
aam
sahf
cli
mov
sub
repz
jne
cmc
fists
mov
or
and
adc
or
mov
insl
arpl
clc
aaa
cli
cmp
xlat
add
lock
pushf
in
sub
jnp
cmpsl
out
gs
pop
test
pop
pop
pop
aam
mov
inc
ja
push
mov
add
int3
cmp
lods
loop
sbb
fwait
ja
addr16
ror
jle
pop
std
loope
pop
leave
jns
push
cmp
insb
sbb
add
and
fucomip
outsl
push
addl
add
fists
dec
loope
sarb
fistpll
xchg
shrb
or
mov
outsl
jne
or
inc
stos
jns
jge
mov
pop
sahf
cmp
push
jns
and
outsb
ss
or
scas
dec
scas
cmpsb
out
and
cmp
test
imul
xor
sub
ljmp
je
scas
jmp
test
pop
sti
lods
jnp
cld
adcb
pop
pop
repnz
sub
les
mov
inc
cld
scas
insl
or
cwtl
std
mov
repz
mov
mov
jmp
adc
das
repnz
pop
gs
add
ret
mov
and
mov
mov
sbb
js
pop
outsb
pop
jno
mov
outsl
sbb
and
push
lds
movsl
sbbb
push
jg
xchg
sbb
jns
cmp
pop
sti
push
ret
mov
movsb
lods
add
in
mov
xor
out
dec
gs
xchg
xchg
rolb
adc
lds
insl
addr16
inc
in
cmp
mov
adc
sahf
lcall
pop
lcall
xor
cmp
add
push
adc
xor
mov
test
xchg
ret
rcll
loopne
rorl
fnstenv
xchg
inc
xor
xchg
pop
xchg
add
stc
lds
xchg
sbb
bndldx
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
test
mov
sahf
adc
sbb
stos
arpl
in
adcl
xchg
or
dec
cmp
sub
pop
fmulp
fnstsw
xchg
scas
push
scas
cs
inc
pop
out
jo
in
mov
sub
cmc
movsb
in
dec
dec
inc
add
or
pop
dec
inc
dec
adc
and
xchg
push
insb
push
loope
and
ljmp
insb
push
nop
adc
mov
or
jo
sbb
in
push
js
adc
push
aas
lods
push
icebp
cmp
andb
jns
test
and
pop
les
mov
aas
mov
insl
fsubl
cmp
dec
cmp
ret
call
movsb
insl
mov
in
lds
mov
ret
hlt
es
xorb
or
mov
mov
aaa
xchg
inc
mov
mov
xor
jo
clc
je
leave
test
push
arpl
mov
jge
out
test
addr16
movsl
ja
out
lock
mov
and
xchg
sbb
dec
sbb
ds
in
and
aad
dec
sub
mov
out
mov
jb
fcmovbe
inc
popa
xchg
rorb
mov
xor
clc
xchg
xor
xlat
add
outsl
add
stc
xchg
cmp
xchg
inc
and
loopne
in
or
mov
cmp
push
sbb
rclb
mov
cltd
call
insb
loopw,pn
dec
jge
cmp
inc
jp
sbbb
je
push
cmp
sbb
subl
xchg
pop
loop
stos
sbb
stc
mov
ljmp
jbe
clc
sub
out
mov
push
mov
and
loop
mov
jle,pn
test
out
cmpsb
cmpl
je
icebp
repz
daa
xchg
cmp
out
adc
push
shll
lret
add
jb
xor
xchg
adc
leave
fstpt
adc
aam
call
push
jne
mov
and
cli
add
xor
add
push
mov
sbb
push
inc
and
leave
jg
scas
scas
jl
lret
mov
dec
mov
movb
or
cwtl
call
lds
inc
clc
or
pop
mov
loope
fcoml
dec
dec
xchg
test
xor
or
jp
jnp
add
lahf
add
and
xchg
push
xor
out
outsb
ret
lea
nop
adc
mov
js
notb
and
adc
cmc
lods
cltd
xchg
sub
rolb
xchg
aam
sarl
jp
and
mov
es
push
mov
ja
mov
clc
cwtl
aaa
add
xlat
cmp
mov
out
cmp
insl
mov
mov
pop
sub
mov
sbb
insb
jle
fwait
aad
push
mov
mov
loopne
test
scas
pop
lret
jb
jg
mov
xlat
mov
jne
sub
inc
popf
out
jp
jg
or
add
jbe
js
jmp
sbb
mov
sbb
rorb
cmpsl
add
movsb
or
fwait
imul
mov
dec
fdivl
dec
in
sub
sub
or
add
in
into
fsub
inc
in
inc
sbb
cli
imul
xchg
aad
mov
arpl
stos
fsub
lret
outsl
pop
or
out
andl
loop
ret
dec
sti
stc
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
stos
fstpt
in
sbb
xchg
and
cltd
out
stos
cmp
jg
ss
cltd
stos
imul
cmp
lret
mov
faddl
sbb
xor
in
out
dec
cs
ja
mov
rcrb
mov
mov
xchg
pop
sub
scas
pop
inc
adc
xor
mov
js
daa
sub
dec
lods
push
in
stos
popf
cmp
push
mov
pop
arpl
and
outsl
push
add
or
xlat
out
mov
mov
nop
jb
sub
pop
dec
xor
and
jb
pusha
pop
adc
xor
xchg
lds
or
dec
test
iret
rorb
scas
rclb
mov
sub
fldenv
inc
dec
pop
add
sbb
popa
mov
ret
int3
mov
stos
xchg
aaa
push
lea
out
fisubs
push
mov
ljmp
inc
shl
das
xchg
xor
pop
lret
add
mov
xor
sub
add
callw
xlat
jb
aad
sub
cmp
int
jo
das
jae
xchg
ret
mov
in
test
inc
shrb
add
mov
fisubrl
add
js
mov
fnstsw
dec
ret
je
cmp
popl
inc
mov
push
mov
in
inc
push
sbb
sub
data16
cli
shll
loopne
push
jns
mov
add
xchg
outsl
xchg
rcll
or
push
pop
daa
push
cmpsl
push
int
push
jae
ret
shll
mov
icebp
inc
jno
into
enter
out
in
enter
fsubl
pop
mov
and
xchg
aas
adc
iret
inc
mov
jno
pushf
jb
sbb
stc
xlat
aas
jb
pop
jnp
sarl
mov
in
or
arpl
sub
jno
sti
fiadds
testb
xchg
cmpsb
mov
jle
ds
push
push
out
mov
pop
arpl
shlb
out
jo
rolb
repz
fwait
add
test
rcrb
mov
cltd
or
cwtl
mov
dec
or
pop
mov
nop
in
pop
ficomps
push
push
mov
xchg
pop
mov
xor
inc
jo
popf
xor
es
cmpsl
in
mov
mov
add
movsl
push
imul
push
cmp
cli
ljmp
push
std
cmp
jecxz
adc
sbb
and
popf
repz
xchg
test
jp
outsl
jle
sub
mov
add
push
leave
into
push
or
int
inc
add
or
cmp
sbb
cmp
roll
push
add
mov
sub
push
add
scas
aas
neg
clc
out
xchg
sbb
jns
aaa
mov
xchg
repz
stc
pop
int
or
addr16
cmp
sub
mov
insl
mov
icebp
inc
lea
cmpsl
out
xor
repnz
jns
adc
movsb
repnz
xor
test
push
idiv
inc
insl
cwtl
and
or
ret
push
push
imul
aaa
inc
add
xor
cmpsl
adc
add
fmull
cmpb
repz
rolb
cmp
mov
ja
enter
cmc
pushf
rolb
push
je
mov
fists
sbb
popa
cmc
cltd
dec
push
cmpsl
sub
adc
pop
xor
adc
lret
push
fdiv
xchg
pop
shll
cmpsl
sbb
inc
addb
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
loope
push
jge
popa
fdivrl
or
adc
out
pop
sbb
enter
sub
push
xchg
add
push
out
pusha
mov
mov
pop
mov
scas
jne
inc
outsb
add
and
sbb
jmp
lods
fnstenv
push
repnz
mov
add
stos
in
cmpsb
outsl
pop
jl
jae,pn
cmp
pop
cli
push
call
mov
and
ljmp
fidivl
dec
negl
inc
lret
mov
out
in
jae
pop
and
jno
inc
repnz
dec
enter
mulb
fstps
add
and
and
aas
push
inc
and
jns
mov
cwtl
push
testl
pop
pushf
xchg
rcll
adc
in
call
test
out
pop
and
fldenv
pop
adc
cmp
pop
mov
sbbb
jns
daa
xchg
fwait
adc
test
sub
mov
and
jne
adc
inc
xor
arpl
add
es
sti
mov
sbb
iret
sub
and
lds
mov
fdivr
mov
push
dec
xchg
jo
mov
cltd
dec
sbb
push
mov
add
jbe
jmp
iret
mov
pop
cmovl
push
pusha
push
add
cmpsb
mov
std
cmp
mov
jnp
test
repz
ljmp
jne
jp
testl
scas
test
std
sub
scas
test
das
mov
in
jge
push
jle
adc
ss
mov
cwtl
adc
xchg
out
xor
into
movsl
movsb
in
push
ljmp
les
jecxz
aad
lods
xlat
data16
mov
gs
fs
sbb
xchg
rcl
sub
mov
cltd
cltd
push
cmp
mov
enter
in
xor
adc
dec
das
push
pop
xor
mov
sbb
sub
dec
xchg
mov
in
push
addr16
xor
push
or
test
fadds
test
dec
movsb
xchg
mov
pop
inc
pop
dec
sti
sbb
das
lods
repz
mov
lret
imul
jl
xchg
xchg
test
int3
aaa
mov
aad
mov
lahf
test
mov
fxch
jo
sbb
push
lods
loopne
and
xchg
mov
push
cmp
pushf
xlat
xchg
jbe
inc
iret
ret
rep
xchg
cld
fists
mov
test
cmpl
insl
sahf
add
pop
jecxz
xchg
adc
pop
pop
roll
imul
and
icebp
and
stos
js
movsb
mov
insl
ds
mov
cmp
sar
adc
cmp
mov
jmp
add
mov
jl
push
push
add
in
imul
loop
jg
lods
ret
pop
mov
sub
jae,pn
ficomps
lods
sub
imul
xchg
ss
pushf
cli
sub
shlb
sub
leave
xchg
push
and
scas
cli
xchg
in
das
clc
sub
cmp
pop
add
testl
mov
test
out
int3
pop
scas
push
jecxz
lods
das
inc
shrl
xor
and
dec
sub
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
push
xlat
sbb
sahf
adc
sbb
ljmp
dec
add
ret
mov
add
outsl
push
inc
int
shl
aam
insl
pop
mov
adc
mov
add
xchg
xchg
cmp
xor
shrb
push
mov
push
shll
mov
xchg
pop
pop
cli
lret
hlt
or
lea
fidivrs
popf
lcall
js
outsb
adc
cmp
loopne
ja
in
out
outsl
int3
in
rorb
and
out
sbb
outsl
cmp
ja
jnp
test
test
jne
aaa
nop
out
fs
imul
adcb
notl
filds
mov
out
push
test
in
sbb
movsl
clc
cmp
scas
pop
out
lcall
adc
xor
jecxz
xchg
rcrb
ljmp
ljmp
in
pusha
lock
jb
xchg
jle
mov
cltd
jecxz
xor
js
mov
fisubrs
into
fcmovnb
sahf
stc
sbb
xchg
xor
cmpsl
fcoml
incb
fcomps
imul
enter
ret
roll
dec
ficoms
cmp
insb
xchg
and
jl
xchg
adc
push
sbb
rcll
sub
push
cmp
jne
sarb
cli
add
cli
jg
out
or
inc
xor
lret
int
inc
xor
aaa
mov
xor
out
cwtl
jmp
pop
in
xchg
cmpb
push
pop
std
mov
fistpl
jmp
aas
add
in
fimuls
push
dec
ljmp
mov
lods
out
add
push
xorl
sbb
popf
jne
repnz
ljmp
cmp
daa
dec
cmp
xchg
mov
mov
clc
rcr
xor
add
or
xchg
cld
movl
es
xchg
fs
add
xor
test
test
push
jl
mov
jnp
xchg
out
or
movsl
and
jecxz
aaa
dec
lea
sti
sub
inc
and
lods
lock
out
out
daa
mov
jl
jno
out
lret
clc
push
pusha
je
mov
pop
adc
inc
arpl
stos
mov
xchg
and
pop
dec
pop
mov
stos
sbb
cmpb
out
jg
xor
cmp
push
inc
cmp
pop
push
inc
cmp
xor
mov
stos
mov
jbe
xchg
mov
bound
repz
sbb
add
sub
xchg
jle
lret
mov
out
std
rorl
jno
imul
cmp
dec
jl
or
and
and
inc
mov
iret
int
cmpsb
mov
cmp
or
cwtl
pop
jl
fidivrl
shl
mov
jp
aam
fisttpll
mov
xchg
dec
lods
xor
les
xrelease
out
fsubrs
stc
aam
stc
dec
dec
popf
in
cmpsl
mov
mov
push
or
push
jg
cwtl
push
cmpsl
add
jbe
push
xchg
sahf
out
pop
out
int3
roll
cwtl
xor
lea
jae
fdivrl
rcrl
shrb
enter
out
sahf
js
ret
and
xor
lds
out
pop
mov
inc
mov
push
add
xor
mov
in
push
fs
inc
mov
lea
adc
out
test
push
mov
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
out
jmp
push
iret
sbb
sahf
adc
sbb
std
ss
test
movsl
dec
mov
mov
lret
leave
sahf
dec
add
cmpsb
stos
clc
xchg
adc
push
mov
lock
jmp
fcmove
mov
xchg
stos
mov
add
add
mov
cmp
mov
in
bound
fcomps
nop
addl
subl
lea
xchg
sub
nop
push
fsubrp
loop
jecxz
movsl
icebp
test
push
out
in
test
nop
adc
in
es
xor
sbb
push
lea
pushf
mov
jle
inc
subl
pop
add
or
xchg
pusha
nop
xchg
jns
cmp
xchg
aad
push
cmp
jp
outsb
out
pop
stc
inc
mov
in
jp
out
mov
outsl
jmp
fwait
mov
sarb
push
push
adc
xor
or
inc
push
and
inc
jp
into
dec
mov
mov
jge
insl
inc
dec
rolb
sahf
cmp
mov
adc
inc
push
into
stc
mov
add
arpl
scas
lcall
pop
pop
stc
insl
shl
pop
add
add
mov
cs
lods
rcrl
lret
dec
andl
aaa
push
adc
add
stc
mov
rcl
shrl
mov
pop
andb
jbe
and
iret
out
mov
jno
test
mov
jge
mov
int
or
add
xchg
pusha
shll
repz
shlb
inc
mov
pop
fbstp
fistpl
mov
adc
jnp
lret
in
not
xchg
push
jb
insb
sbb
xchg
fnstcw
fdiv
mov
imul
push
push
movsb
fst
ja
xchg
in
and
add
leave
out
inc
ds
arpl
push
sub
lret
push
cwtl
loopne
and
test
pop
xor
ljmp
mov
add
mov
or
icebp
add
stc
sub
pushf
xor
in
adc
jp
adc
iret
jl
mov
loop
cmp
or
push
and
loope
sub
adc
xchg
rclb
xor
enter
sbb
cmp
dec
and
lods
dec
out
mov
dec
jle
sub
pop
test
cwtl
mov
nop
xor
test
into
shlb
add
call
out
cld
shlb
test
fisttpl
push
mov
add
push
jl
and
jbe
adc
mov
out
mov
leave
subl
dec
and
mov
sbb
xchg
scas
pushf
je
imul
sti
movsb
xorl
sbb
mov
mov
shrb
std
test
and
jbe
xlat
or
cmp
lret
ret
jns
jle
stos
push
add
pushf
rcll
out
fcmovb
sahf
shld
inc
xchg
frstor
ficoml
test
inc
mov
lock
insb
inc
icebp
mov
cmpsl
aas
mov
or
sub
imul
scas
jge
out
mov
inc
sbb
lods
pusha
mov
stos
cmp
cs
or
lea
add
mov
inc
aas
pop
insb
sbb
mov
inc
cmpb
sbbl
dec
add
por
mov
dec
mov
mov
mov
gs
shlb
xor
fwait
mov
lods
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
sub
idivl
mov
and
ss
push
push
call
inc
aam
and
xchg
xchg
pop
mov
sub
or
xor
insb
push
mov
cmp
test
stos
push
bound
adc
jle
mov
inc
das
addr16
loope
or
jge
scas
and
sbb
push
mov
mov
dec
mov
int3
mov
jb
inc
or
cmc
jp
stos
cs
inc
pop
dec
cmpsl
into
mov
repz
and
addr16
push
icebp
mov
adc
scas
and
jmp
lret
inc
mov
sub
dec
jo
mov
rcrl
adc
and
popf
jo
add
ret
mov
repnz
xor
dec
pop
pop
sahf
scas
xchg
inc
xor
es
lds
jg
aad
imul
pop
cli
mov
cmp
lret
pop
adc
mov
sub
fcmovu
out
ja
xchg
xchg
sbb
leave
in
out
and
cld
clc
jb
push
cmc
test
inc
sub
pop
jge
push
add
lds
push
sbb
jo
lea
mov
sbb
fcoms
ret
int
shl
cmp
pop
mull
daa
adc
loopne
add
movsl
je
mov
or
jbe
int3
and
and
clc
push
sbb
cmpsl
rolb
push
mov
pop
inc
pop
mov
pop
add
push
outsb
aaa
xchg
cmp
out
loopne
pop
jb
jge
call
and
stc
mov
mov
fstpl
add
cmpb
mov
jge
and
out
sbb
mov
cmp
lret
mov
adc
cmp
cmp
stc
and
test
jmp
aam
pop
fildll
pop
sub
push
fstp
push
mov
pop
or
sahf
push
and
mov
or
or
ljmp
xchg
pop
cmpsl
movsl
bound
xchg
jno
daa
lods
cwtl
cmp
popl
sub
pusha
nopl
push
loop
sti
pushf
out
into
sbb
inc
adc
adc
push
adc
jo
andl
cmpl
je
jns
xchg
lods
mov
sbb
dec
out
pop
or
mov
mov
pop
lcall
ret
xor
fisubl
mov
and
dec
jnp
and
aas
dec
push
sub
inc
mov
cmp
sbb
scas
je
xchg
js
mov
cmp
dec
pop
jno
mov
imul
mov
aad
imul
mov
aad
mov
das
stos
push
mov
xor
test
jmp
push
cmp
pop
clc
sbb
mov
push
fcmovne
nop
push
or
lods
sbb
cmp
loop
mov
jae
mov
cmp
pop
xor
lret
frstor
inc
data16
lcall
pop
imul
sbbb
jp
xchg
pop
pushf
in
lret
repnz
incl
lret
and
mov
pop
push
fsts
mov
mov
push
es
push
imul
cli
test
mov
sub
stos
in
xchg
lahf
xor
sbb
pop
in
repnz
push
repz
add
es
into
inc
movsb
insb
mov
mov
xor
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
mov
aas
mov
sahf
adc
sbb
push
mov
fwait
pop
push
or
cmpb
jle
mov
add
hlt
push
pop
popf
mov
push
xor
ret
dec
mov
mov
out
aam
rclb
and
adc
jl
push
loop
or
sbb
mov
adc
mov
inc
dec
jbe
orps
das
and
rep
mov
movsb
mov
es
std
mov
mov
push
aaa
push
pop
dec
cmpsb
mov
mov
pop
sub
std
xor
cmp
and
sbbb
fcomp
fisubl
stos
mov
divb
mov
int
leave
sub
iret
insl
push
xchg
xor
adc
inc
shl
repnz
mov
fbld
and
jns
mov
loope
inc
xor
aad
jmp
iret
jo
xor
inc
insl
fdivs
push
or
or
mov
or
aad
pop
jno
popa
mov
das
xor
xchg
push
outsl
inc
mov
loopne
dec
stos
cmp
ds
nop
jns
sbb
pop
shlb
pop
fldenv
xor
mov
pop
pop
push
lea
outsb
xchg
out
std
push
inc
mov
add
pusha
out
out
dec
fwait
nop
out
inc
mov
cmpsb
fidivrl
lds
popf
adc
mov
jne
notl
mov
insb
mov
fiadds
jg
add
lcall
sub
int
adc
js
hlt
fs
fwait
mov
cli
lock
push
repz
js
sub
and
xchg
clc
aam
sub
dec
xor
mov
outsb
dec
daa
addr16
jge
daa
or
pusha
std
adc
mov
cld
jle
push
fs
stos
sti
mov
in
mov
mov
mov
scas
cli
jne
lret
inc
loope
mov
mov
jl
sbbl
aam
pop
cmp
aas
daa
out
out
les
ljmp
mov
pop
rorl
sub
push
jbe
adc
xor
fwait
js
sarl
aaa
dec
daa
inc
inc
in
and
dec
fstps
addr16
cli
jae
adc
mov
test
adc
adc
push
dec
test
sbb
scas
add
mov
pop
add
adc
cmpsb
shrl
shlb
jmp
push
call
sub
adc
lds
xchg
mov
scas
cmp
jge
xor
add
int3
bound
icebp
cmpsb
ret
into
xchg
dec
insb
loope
in
std
daa
cmp
push
jmp
sub
adc
pop
jae
in
ss
xchg
insl
out
pop
mull
mov
mov
popa
out
das
sarl
sub
outsl
sub
pop
ficoms
pop
nop
add
jb
mov
repnz
stos
add
rcr
mov
out
lods
mov
sub
test
mov
sarb
mov
jl
jl
push
pushf
mov
out
or
mov
fwait
adc
sahf
push
or
mov
or
arpl
mov
or
xchg
and
pop
xor
imul
inc
mov
jmp
add
add
mov
jl
sti
inc
pop
or
xor
mov
jmp
sub
aad
jb
ds
push
rcrb
pop
insl
shlb
pushf
filds
enter
jmp
sbbl
shl
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
and
sbb
sahf
adc
sbb
cmp
push
stos
cltd
cmp
jne
iret
add
pop
hlt
add
mov
cs
add
jb
push
popf
fwait
js
dec
add
icebp
lods
dec
aas
xor
or
int3
cli
stos
mov
je
arpl
sub
es
inc
out
push
cwtl
pop
outsb
xlat
sahf
pop
jae
stc
push
loop
pop
push
and
clc
pop
mov
cmp
cmp
stos
stc
sbb
shlb
insb
jb
cltd
ja
mov
sbb
stos
adcl
lahf
pop
sbbb
std
jns
add
aad
leave
sbb
mov
mov
pop
sbb
in
clc
mov
movsl
aam
lock
cwtl
xchg
je
dec
negb
fsub
add
loop
loopne
push
cmp
test
lds
push
cmpsb
push
pop
add
add
lcall
hlt
fs
cwtl
pusha
mov
mov
scas
mov
jne
arpl
sbb
insl
lret
lods
push
jle
add
bound
mov
ficomps
push
ja
imul
adc
dec
pushaw
mov
pop
int
movsl
cmp
xchg
xor
cmpsl
xor
dec
sub
adc
pop
icebp
pop
ret
je
std
in
sbb
push
out
ret
cmp
lahf
add
je
pop
and
pop
jmp
sbb
inc
lcall
adc
jne
mov
call
cltd
mov
aam
and
mov
dec
stc
stos
or
cli
push
cwtl
iret
xor
outsl
push
mov
addl
and
shrl
stos
cli
les
inc
mov
ficomps
shl
sub
adc
test
cmp
push
sub
push
ficomps
inc
ljmp
fisttps
mov
int
test
test
inc
add
sbb
mov
daa
dec
test
std
xchg
push
dec
lock
cs
or
sti
out
xchg
aam
imul
in
loop
dec
lcall
jne
fstpt
pop
fwait
and
xor
add
mov
lds
jae
lock
aam
inc
push
imull
loope
jae
inc
push
cmc
mov
mov
mov
jne
lods
rcrb
imul
xchg
add
jns
inc
xor
ret
or
fdivs
sbbl
cmpsb
pop
xor
mov
jp
jp
mov
push
pop
pop
or
sbb
pop
int
ds
sahf
push
nopl
in
mov
ficompl
dec
insl
mov
lods
pop
add
mov
mov
fs
inc
fsubl
test
add
lea
cmc
test
mov
cmp
cmpb
pop
pop
fcoms
jns
sub
cmpsb
cmp
mov
or
enter
mov
outsl
cld
pop
call
push
leave
xor
sbb
in
rcrl
stos
ret
rcrl
adc
lret
cmpl
ret
inc
lods
out
add
cmpsb
sbb
repz
jg
push
rcrl
in
or
lcall
mov
ret
arpl
shrb
loope
lods
arpl
addr16
add
dec
shll
jno
add
aad
push
bound
mov
mov
repz
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
outsl
lret
jo
mov
sbb
mov
xor
andl
xchg
mov
mov
lcall
xchg
gs
mov
not
mov
lea
gs
mov
mov
xchg
out
mov
mov
stos
pop
mov
mov
push
and
in
negb
xchg
out
outsl
cmpsb
sbb
rol
fucomip
lcall
sarl
mov
mov
leave
push
xor
jge
cmp
sub
insl
inc
sbb
cmp
jge
mov
inc
mov
jb
pop
add
dec
mov
mov
shlb
aad
adc
pusha
daa
mov
pop
dec
dec
add
or
jbe
jnp
jmp
push
outsl
es
xchg
jl
add
lock
jl
sbb
fcmovne
ror
mov
icebp
inc
adc
repnz
xchg
in
add
aaa
inc
mov
or
pop
adc
repz
out
in
dec
mov
inc
push
dec
inc
and
jp
mov
mov
fisubrs
push
mov
add
cmpsb
mov
mov
add
pop
inc
int3
push
pop
mov
cmpsl
push
pushf
repz
shll
ja
xchg
xor
mov
scas
xchg
mov
outsb
and
dec
repz
aas
scas
and
loopne
cmp
mov
xchg
ja
loope
sbb
mov
cmp
jp
or
push
cmpsb
sbb
mov
pushf
xchg
xchg
mov
cmp
sbb
xchg
adc
in
inc
lods
sub
inc
jbe
jmp
push
xchg
mov
xchg
loope
add
xchg
xchg
pop
inc
dec
mov
jl
pushf
dec
or
adc
cltd
inc
sbb
fwait
jne
xor
scas
shrl
push
dec
push
mov
das
mov
loope
xor
cld
aaa
unpcklps
dec
lret
dec
fs
fsub
sub
sub
mov
and
ret
push
inc
xor
std
lcall
xchg
xchg
bound
jmp
adc
or
cli
sbb
iret
mov
inc
stc
std
and
dec
xor
push
and
xchg
loopne
cmp
cmp
enter
mov
jns
sub
ja
mov
lods
xchg
xchg
dec
lods
or
inc
sub
scas
aad
andl
outsb
loope
shrb
fldt
or
inc
fisubrl
push
das
in
mov
outsl
mov
shlb
and
mov
enter
sbb
dec
loop
sub
adc
xchg
in
out
push
into
hlt
enter
lds
xchg
mov
inc
jecxz
xchg
pop
adc
test
dec
pop
pop
pop
inc
pop
mov
movsb
repnz
ret
push
dec
pop
and
inc
push
rclb
lods
icebp
nop
lods
cvtpi2ps
cmp
mov
popf
pusha
movsb
pop
mov
pop
pop
mov
imul
ds
add
xchg
mov
push
push
fwait
dec
adc
stc
sub
xchg
cmp
add
nop
test
mov
or
sub
ja
cwtl
cmpsb
add
andl
aam
xchg
mov
mov
cmp
dec
fmul
in
lock
add
lds
mov
push
test
adc
test
jnp
es
jae
xor
adc
gs
xchg
jae
in
fisubrs
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
mov
sbb
sahf
adc
sbb
xchg
pop
sbbb
lock
call
dec
stc
mov
push
mov
inc
sub
or
cmp
iret
xor
lahf
sub
scas
test
pop
mov
notl
mov
shlb
movsl
inc
xor
and
sbb
lret
xchg
push
xlat
pop
adc
es
popa
mov
shl
xlat
hlt
mov
dec
ret
in
lea
mov
and
mov
or
aam
fcoms
mov
jns
mov
sbb
loop
cwtl
xor
or
lahf
cmp
stos
push
mov
sub
mov
cmp
mov
scas
stos
mov
out
xorl
add
xor
or
xchg
je
pcmpeqw
out
mov
mov
cmp
adc
push
loopne
xor
gs
lcall
roll
jbe
xor
gs
xor
fmull
pop
gs
dec
pop
stc
mov
cwtl
paddsb
cmp
dec
scas
loope
fisubrl
cmp
stos
out
cmp
mov
jo
les
push
test
push
jg
movsb
push
test
iret
lret
in
int3
aaa
ja
test
out
lcall
lock
int3
stos
jmp
jmp
xchg
mov
mov
lahf
jo
cmp
sbb
addr16
pop
sub
clc
add
cld
imul
pop
cmp
fmulp
xor
xor
dec
jge
test
xchg
sub
inc
lods
popf
loopne
arpl
jnp
sbb
vmovntps
and
sbb
lcall
adc
popf
push
and
fwait
and
jae
xchg
loope
ljmp
add
out
hlt
xor
or
mov
and
stos
and
int
mov
inc
add
arpl
xchg
insb
dec
loop
int
jg
gs
test
mov
out
xor
cmpsl
dec
fwait
dec
jge
fisubrl
leave
loopne
dec
in
inc
in
dec
inc
xchg
xchg
inc
popf
js
aam
jno
sub
pop
aad
and
sub
or
mov
inc
xlat
sub
notb
ret
pop
mov
ljmp
stos
lds
mov
mov
jns
test
or
lret
aas
idivb
mov
loop
fnstcw
cmp
adc
dec
mov
dec
rcl
inc
aaa
dec
xchg
lock
sub
mov
std
lods
sub
jp
sub
call
jmp
mov
mov
addr16
out
mov
jnp
mov
dec
inc
push
gs
imul
mov
mov
pop
addb
mov
xchg
cmp
idiv
sarb
xchg
jmp
fadd
clc
and
rolb
xchg
decb
test
pop
out
jnp
mov
mov
mov
test
lods
sbb
inc
cmp
xor
frstor
iret
mov
push
add
fistpll
and
sbb
push
popa
pop
mov
mov
js
mov
xor
popf
cmpsl
ja
js
sbb
imul
jb
xchg
pop
and
cmp
xor
push
cwtl
inc
out
add
ja
pop
mov
inc
cmp
push
cmp
add
int3
add
shr
clc
add
dec
nop
icebp
pop
sbb
test
iret
mov
test
jl
or
pop
movsb
les
orl
and
subl
inc
add
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
fmuls
mov
sahf
adc
sbb
sbb
sahf
mov
dec
mov
ja
in
shlb
xlat
ds
out
rolb
inc
in
out
jne
xchg
stc
add
out
aad
pop
or
adcl
mov
in
mov
data16
jne
cmpsl
inc
inc
inc
jnp
mov
inc
mov
push
or
mov
imul
mov
mov
in
jae
hlt
adc
arpl
cwtl
sbb
dec
and
sbb
lods
scas
fcoms
sbb
push
dec
and
xchg
cli
popa
mov
xchg
jbe
dec
out
pop
mov
adc
push
popf
pop
js
jg
clc
dec
or
dec
aaa
mov
sbb
cltd
add
mov
sbb
push
cmp
pushl
movsl
xor
jno
fdivrl
jbe
sub
jp
lods
dec
sarl
lds
cwtl
and
fisubs
push
cmc
xor
int3
mov
add
cmp
xor
and
push
jg
imul
mov
jbe
das
adc
inc
xchg
jp
dec
xlat
popf
mov
and
stc
enter
cmp
or
test
mov
sbb
ret
jmp
pop
fildll
enter
stos
lret
fldt
outsl
push
jle
lahf
outsl
loop
js
jg
inc
dec
nop
test
popf
insl
sbb
xchg
xchg
test
push
faddp
mov
dec
sub
add
sbb
aam
in
xchg
push
cs
mov
scas
push
fsts
movsb
sbb
lahf
out
out
mov
sbb
call
aad
sbb
fsqrt
nop
push
insl
aaa
cmc
dec
and
cmp
add
hlt
xchg
push
out
jp,pt
add
mov
xchg
stc
pop
imull
cld
dec
jl
inc
jbe
fwait
and
xor
and
inc
aas
adc
and
lcall
mov
lret
and
popf
xchg
jmp
dec
push
sbb
mov
outsb
pop
jo
enter
aas
cmp
gs
andb
notl
test
movsb
xor
repnz
push
les
mov
div
pusha
out
jnp
icebp
cmp
and
cltd
push
aas
push
es
or
jne
ret
sub
cmc
or
xlat
ljmp
add
mov
repnz
mov
mov
push
arpl
jp
sub
dec
ljmp
lret
pop
push
xchg
iret
cli
out
hlt
jb
inc
dec
scas
mov
pop
push
fwait
inc
jae
mov
dec
push
pop
or
idivl
fwait
adc
mov
enter
mov
and
add
mov
jmp
mov
movsb
push
mov
test
inc
mov
fdivl
adc
jg
mov
adc
push
jno
cmp
pop
outsl
cmp
fbstp
or
popa
in
imul
inc
xor
or
testb
mov
or
and
adc
jg
add
and
test
popf
xor
sbb
lods
sahf
mov
xchg
pop
repnz
jp
cmc
into
jbe
ror
xchg
ret
sub
hlt
xchg
cmpsl
int
cmpsl
js
movsl
sbb
xchg
daa
sbb
pop
gs
add
inc
inc
sub
inc
and
loop
mov
mov
mov
aaa
and
in
dec
in
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
push
iret
sub
pusha
shl
adcl
inc
mov
jp
inc
popf
sbb
add
mov
imul
add
dec
faddl
jmp
sti
scas
fadds
dec
and
std
push
aad
push
adc
cmp
test
dec
inc
jns
push
cmpl
sub
addr16
enter
cmpsl
jnp
jnp
lret
adcb
or
add
cmp
push
xlat
clc
orb
add
inc
inc
dec
nop
add
shll
add
mov
lods
ja
cmpsb
incl
sub
mov
xchg
xor
sub
fsubrs
xor
lahf
jle
insl
or
mov
js
sbb
clc
insl
std
and
nop
popf
pop
jle
sub
je
jno
cmp
and
imul
mov
jnp
cmpsb
mov
mov
sti
xor
movsb
shrb
or
push
dec
dec
pop
xchg
push
lcall
je
cmp
cmpsl
pop
mov
inc
mov
push
movsb
stos
loop
orl
loop
int
or
daa
xchg
cmc
dec
movsb
rcll
cmp
pop
pop
inc
mov
test
inc
mov
push
push
or
fs
cltd
adc
push
jmp
iret
mov
fs
out
and
inc
jg
push
push
lret
and
jae
jg
lahf
mov
into
cmc
sub
xor
adc
xorl
loopne
mov
mov
and
push
add
std
in
xchg
lret
fcomp
shrl
cmp
adc
ja
scas
mov
sub
xchg
mov
mov
or
push
int
in
mov
dec
and
test
or
inc
testb
add
jno
stos
imul
mov
popa
inc
mov
mov
push
bound
push
inc
cmp
push
shlb
cmp
pushf
xchg
mov
data16
jmp
ret
xlat
push
jle
iret
lahf
ret
movsl
xchg
inc
ss
lcall
mov
add
mov
inc
in
or
lds
in
fs
pop
js
or
inc
mulb
sahf
lds
imul
aam
cli
pop
popf
cli
xor
sub
sbb
push
or
ja
fdivrl
pop
scas
je
jne
js
push
cld
pusha
dec
scas
and
shrl
popf
aad
outsb
lret
jns
es
cmpsl
cmp
gs
xlat
pop
in
jmp
inc
in
cmpsb
mov
sub
xor
xchg
and
in
lahf
mov
fnstsw
cmpsl
mov
loop
sbb
mov
mov
and
das
popa
sub
lahf
sbb
cwtl
xor
dec
out
cmp
pop
fdivr
jg
adc
push
aam
mov
bound
sub
subl
push
addb
aad
pop
and
icebp
divb
sbb
inc
xor
std
inc
push
out
popa
test
fst
movsb
pushf
and
test
ljmp
sbb
push
dec
in
sub
mov
inc
insb
lods
jecxz
cmp
fwait
jl
stc
sub
test
xchg
inc
loope
cltd
fwait
gs
cmp
fsubs
jmp
int3
int3
xor
pop
enter
sbb
mov
jo
aaa
gs
cmpb
xor
rcll
xor
ja
mov
pop
xor
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
push
xor
sub
xchg
inc
lods
insb
stos
push
pop
mov
movsb
push
mov
lcall
cmp
cmp
cmp
ret
shl
cmc
enter
cmpsl
add
cltd
sbb
jge
mov
fcmovnbe
in
mov
shl
push
sbb
or
adc
mov
inc
push
pop
out
and
hlt
push
and
cltd
mov
mov
inc
pop
mov
or
movsb
sbb
inc
clc
and
dec
pusha
dec
add
sbb
push
mov
dec
or
scas
fs
sbb
push
jo
mov
fcmovu
xor
pop
ljmpw
addb
enter
or
pop
and
inc
inc
mov
test
xor
repnz
cs
xchg
push
sbb
ja
adcl
fxtract
sbb
lahf
mov
push
loopne
jae
jnp
sub
movsb
in
sbbl
jle
xchg
leave
jne
rcrb
push
in
add
mov
inc
push
lock
jmp
in
xlat
add
and
nop
mov
mov
jnp
je
mov
sbb
lret
rolb
inc
ficoml
mov
sbb
inc
cmp
xchg
cmp
jmp
clc
mov
shl
xchg
enter
out
mov
shll
sub
adc
cmpsb
pop
test
mov
lret
cltd
pop
sbb
packuswb
jnp
push
push
fnop
cmp
mov
mov
lock
pop
cmpsb
mov
mov
pop
push
xchg
call
mov
loop
mov
cli
or
push
jg
das
repnz
jo
and
and
mov
mov
or
mov
subl
lcall
cmp
idivb
loop
imul
mov
xlat
mov
xor
loope
nop
push
jb
es
jns
cmpl
cwtl
mov
xchg
mov
fldz
xor
jmp
lret
pop
xor
ds
jbe
jnp
pop
fimull
aad
xchg
sbb
test
icebp
cmp
sub
movsb
cmpsb
mov
cmp
xorl
push
pop
mov
sub
add
cmpsl
dec
adc
and
jbe
idiv
nop
in
dec
sbb
jmp
dec
sbb
mov
addl
shrl
dec
adc
lock
stc
lcall
add
and
cmp
mov
std
jb
cmp
xor
ret
inc
cmp
in
or
mov
adc
xchg
xor
add
in
jle
pop
push
jno
push
push
xchg
data16
data16
sar
mov
sbb
lret
popa
outsl
sarl
adc
inc
fs
pop
in
dec
push
jle
out
push
mov
icebp
iret
test
sbb
out
scas
daa
add
shll
and
add
scas
add
add
mov
or
jg
shll
add
adc
stos
loop
jmp
mov
adc
loop
mov
jbe
aas
push
pop
jo
inc
cmp
pushl
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
cmpsb
lea
mov
sbb
daa
loope
sbb
adc
add
pop
es
jl
test
inc
clc
cmp
inc
mov
jmp
jne
xchg
adc
repz
cmpsb
jnp
cltd
lods
addr16
test
cltd
push
movsl
push
aaa
int
and
jns
decl
lods
ret
sbb
dec
enter
movsb
sbb
sarb
mov
dec
movsl
jae
les
adc
sub
push
or
ret
mov
mov
inc
ror
int3
push
scas
push
mov
decl
dec
mov
sub
ret
and
cmpb
dec
fimuls
mov
insb
shll
mov
test
jecxz
into
sti
mov
std
cmp
pop
ja
mulb
fwait
push
sbb
push
pop
hlt
cmp
mov
mov
and
cmpsl
icebp
mov
pop
int3
push
push
and
dec
clc
lock
and
jle
orl
fidivs
sahf
push
xor
je
push
jmp
xor
sub
and
fildll
lcall
dec
stc
scas
mov
jns
test
stos
pop
outsb
jecxz
loop
xchg
inc
jle
scas
xor
loope
mov
fisubs
int3
adc
adc
or
mov
and
jne
stc
cmpsl
mov
cmp
outsl
dec
pop
sbb
es
add
add
std
mov
xchg
nopl
mov
cltd
fwait
adc
sbb
adc
repz
lcall
test
jmp
divps
push
movl
daa
inc
into
jmp
gs
adc
pop
mov
popa
jecxz
popl
test
dec
sub
cs
addr16
movsl
lret
aad
ja
xor
mov
aaa
in
int3
dec
test
fstl
cli
das
and
dec
mull
jbe
mov
jg
mov
jne
dec
stc
cmpsb
jno
xchg
jo
push
fcmovu
sub
and
xor
adc
scas
mov
js
mov
cwtl
pop
fistpll
cmp
out
pushf
ret
dec
inc
mov
adc
sbb
adc
daa
xchg
outsb
inc
sub
fcmove
insl
mov
rcr
enter
in
fildll
jp
pop
mov
and
inc
movsb
stc
shlb
mov
dec
clc
rol
test
jmp
sbb
insl
nop
lret
js
mov
mov
popfw
mov
sub
not
dec
add
pop
stos
adc
xchg
insb
and
in
call
mov
add
into
sbb
test
sub
loop
dec
mov
jo
test
xchg
sub
clc
lods
add
daa
push
lock
loopne
inc
xchg
aad
bound
push
scas
sbbl
adc
fsubr
arpl
xchg
adc
mov
inc
int3
pop
into
out
add
sbb
push
repz
lahf
xchg
clc
sbb
fcoms
adc
aam
scas
xor
int3
sti
lret
int
jo
jne
aas
sbb
pop
mov
movb
dec
gs
push
out
orb
xchg
in
mov
or
jae
push
shr
jg
or
push
into
lret
std
sbb
jmp
mov
mov
fisttpl
add
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
dec
jmp
sbb
sahf
adc
sbb
dec
jne
push
icebp
cs
jecxz
cmp
add
pop
pop
or
push
jae
adc
xchg
pop
sub
aad
addb
inc
mov
push
push
cmp
mov
movsb
add
jl
movsl
aas
cmpl
lods
push
cltd
pop
popf
cltd
sub
outsb
nop
out
scas
mov
push
test
mov
fwait
shlb
imul
inc
mov
sub
inc
push
add
insb
and
push
sub
jno
pusha
js
cmc
jge
rep
jp
repz
sub
into
add
and
xor
lea
icebp
gs
jne
jnp
adc
fldl
lret
jmp
shlb
in
ja
loope
ss
push
dec
in
fildll
inc
jp
jno
sbb
movsb
pop
popa
cs
hlt
jg
imul
in
inc
inc
dec
sub
sbb
mov
mov
mov
out
pop
push
pop
popf
cli
mov
push
sarl
jl
inc
into
push
testb
hlt
xchg
sbb
sbb
roll
sahf
sub
test
bound
mov
outsb
stos
adc
inc
xchg
movsl
js
mov
scas
not
ret
add
mov
ret
and
adc
aad
and
stos
mov
in
cmp
dec
and
adc
popa
push
dec
sbbl
push
adc
lahf
cli
aam
aas
inc
dec
cli
or
lods
pop
call
mov
pusha
dec
sbb
pop
shl
xor
jnp
and
out
popa
loop
mov
xchg
ja
int
call
stos
jg
fsts
pop
imul
ljmp
sub
mov
pop
dec
xor
xchg
ljmp
aas
lret
mov
and
enter
xchg
pop
dec
mov
or
das
mov
mov
mov
mov
mov
es
mov
lret
add
out
popa
cmp
outsl
cmpsb
xchg
dec
mov
cmp
outsb
xlat
out
es
mov
or
adc
outsl
out
in
loop
cmpsb
clc
sub
jne
cmp
in
popa
cmp
cmpsl
inc
push
jmp
xor
test
push
xor
xchg
bound
or
je
and
sub
fs
in
lea
sbb
int
scas
mov
sub
lcall
xchg
add
jl
aad
add
pushf
idivl
nop
cwtl
roll
mov
dec
inc
mov
jnp
jno
xchg
jo
fwait
adc
inc
mov
and
test
or
mov
add
mov
push
inc
cmpsl
lret
dec
popf
mov
jl
cs
andb
addr16
mov
or
leave
outsb
out
rorl
subb
std
xchg
aad
xchg
test
xchg
mov
pop
cwtl
pop
sub
sbb
adc
cmp
xchg
dec
pop
dec
or
adc
mov
mov
sub
and
pop
fs
xchg
sbb
cwtl
inc
ud1
add
cmp
xor
push
data16
jns
adc
jae
std
mov
pop
sub
or
jb
mov
pop
stos
js
and
sbb
inc
pop
mov
xor
aad
add
pop
movsb
ret
push
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
and
pop
jge
sbb
cmp
sub
mov
xchg
mov
orb
add
and
lods
mov
out
lahf
nop
add
pop
iret
mov
pop
cmp
test
inc
pop
hlt
jne
add
ja
daa
sbb
repz
mov
xor
pop
xchg
test
aas
or
iret
arpl
jle
lret
cmp
arpl
clc
fsubl
inc
push
and
dec
sahf
dec
push
sub
outsl
sub
push
test
sbb
aaa
add
dec
dec
lds
ret
fildl
pop
insb
aas
dec
push
pop
mov
out
dec
xchg
out
scas
scas
scas
xorb
imul
test
push
stc
jle
je
movsl
ja
jb
mov
mov
add
fmul
add
cmpsl
mov
dec
outsl
loope
scas
sub
outsl
or
lock
mov
cmp
in
pop
or
test
std
clc
scas
test
push
sti
or
fisubl
jp
and
rcll
add
cltd
xchg
mov
cld
jmp
pop
lds
jne
xor
loope
jb
jle
mov
and
and
jmp
and
and
inc
push
xchg
sti
xchg
insl
test
fsubr
adc
push
pop
push
rol
jnp
add
and
cmc
mov
xchg
mov
add
cld
sbb
or
dec
popf
icebp
aaa
mov
stos
ret
pop
add
loop
jnp
out
out
pop
push
shrl
xor
enter
scas
xor
adc
mov
jmp
lahf
sbb
push
dec
pop
nop
cmp
imul
fimull
js
cmp
sub
xchg
out
jp
push
mov
cmp
cld
lcall
cmpsb
mov
out
mov
movsl
pop
mov
xor
pop
or
addr16
addr16
jecxz
xor
fimull
mov
test
pop
push
and
xor
inc
arpl
inc
lods
add
stc
aad
xchg
push
mov
mov
sub
and
adc
pop
shrl
repz
dec
push
mov
aam
pop
cld
mov
dec
ret
pop
fwait
popl
repnz
shlb
nop
mov
push
xor
repz
jle
sub
aaa
push
mov
pop
sub
xor
cs
dec
push
rcl
mov
jg
sti
out
mov
test
mov
xchg
push
jne
mov
xor
ja
mov
sub
popa
loop
pop
mov
sub
xchg
int
iret
lock
cltd
dec
inc
lds
mov
scas
fstl
mov
pop
or
jecxz
test
lods
mov
xor
inc
out
xchg
mov
pop
sti
dec
sbb
or
idivb
mov
xchg
sub
xchg
lahf
xor
imul
mov
aas
xchg
sub
lds
jg
nop
xor
mov
push
pop
xchg
add
and
pop
inc
das
lahf
xlat
mov
mov
mov
push
cs
push
fildl
dec
jge
push
mov
ss
jns
pop
sub
test
test
int
test
jl
and
cmp
dec
mov
lret
fmull
stos
movsl
mov
mov
jl
ret
xorb
es
sbb
cmovae
xchg
xor
fidivs
hlt
pusha
dec
xchg
cltd
into
mov
inc
int3
jmp
repnz
jmp
imul
pushf
pop
jle
sub
sahf
adc
sbb
xchg
inc
inc
repnz
cltd
xor
test
pop
test
mov
mov
mov
adc
pop
lock
lods
jle
test
jp
push
and
jl
inc
mov
imul
call
sbb
pop
xor
lods
jns
adc
dec
and
pop
adc
aam
dec
imul
dec
dec
xchg
dec
sbb
add
sarl
jnp
xchg
cmp
cmove
repz
out
int
xchg
rcr
lods
fiadds
jae,pn
mov
add
divl
pop
bound
add
sti
sub
fwait
int
je
jns
addr16
iret
popa
dec
inc
push
test
lds
sbb
clc
sbb
pop
pop
lcall
jle
fwait
jnp
push
stc
jae
lret
push
ret
sub
imul
ret
sarb
inc
rcl
inc
notl
incl
push
xchg
xchg
stc
ret
mov
testl
imul
pushf
and
jp
popa
mov
cs
ret
dec
insl
test
cwtl
and
mov
pop
inc
inc
push
nop
jno
arpl
je
cmp
pop
pusha
adc
mov
mov
add
lea
insb
push
mov
xor
push
leave
pop
scas
bswap
jl
roll
mov
mov
incl
and
add
jmp
xchg
arpl
ds
and
clc
sbb
cmpl
inc
or
ret
in
je
enter
cmp
mov
das
aaa
push
mov
xchg
pop
rorl
in
movsl
dec
outsl
movsl
adc
jp
cli
mov
bound
loopne
mov
notb
loopne
or
or
movsb
pop
rclb
mov
ds
add
mov
xchg
mov
mov
xor
cld
pop
outsl
lds
pop
sbb
mov
cmp
adc
jp
mov
mov
mov
mov
lds
filds
or
jo
mov
dec
lret
push
cmp
mov
dec
jmp
arpl
jge
data16
push
rcrl
push
cmp
loop
pop
es
cli
outsl
pop
lahf
cli
xchg
push
adc
aad
mov
sub
gs
jg
dec
ret
mov
sar
and
out
jo
inc
ret
shl
std
pushf
jnp
adc
outsl
sti
jb
jb
movsb
imul
hlt
cmp
aaa
dec
call
insb
into
or
and
cmp
fs
jp
ja
fistps
repnz
shll
mov
xchg
lret
mov
inc
xor
dec
orl
cmp
xchg
add
inc
arpl
push
xchg
scas
stos
dec
or
mov
jp
or
clc
fbld
sbb
ja
push
cmc
and
out
push
mov
pushf
mov
les
pop
stc
adc
fists
loop
pop
inc
lcall
leave
mov
test
add
call
cmpsb
adc
mov
inc
das
cmpsl
sub
inc
fs
add
sub
sub
insl
xchg
mov
pop
and
fistps
sbbb
into
mov
and
out
mov
lods
test
rcrl
stos
mov
jmp
int3
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
sahf
adc
sbb
mov
cmp
insl
sti
je
sub
insb
repz
mov
lfs
int
jg
pop
and
add
cmpsb
push
icebp
jg
stos
jge
arpl
fsubr
leave
stos
outsl
sub
test
int
loopne
sbb
push
sub
sub
push
inc
scas
adc
lock
ret
lret
out
pop
inc
jae
push
xchg
std
lods
outsb
xchg
scas
mov
stc
movsl
jmp
add
aad
sarl
insb
les
push
ljmp
jmp
xchg
ret
jecxz
sbb
lods
mov
loope
scas
jno
aas
and
icebp
movsl
pushf
add
cmp
mov
out
call
int3
in
pop
lcall
jns
mov
outsl
fwait
adc
push
sbb
fsubrl
cmc
fildl
sahf
mov
adc
jae
lahf
in
dec
stos
xchg
lea
lds
add
lock
call
mov
pop
mov
enter
outsl
xchg
mov
enter
add
in
adc
out
mov
push
mov
clc
mov
out
push
ss
dec
out
jg
dec
add
in
sbb
loop
lock
sarb
pushf
sub
cmp
pop
sub
push
and
xchg
lods
push
mov
dec
and
hlt
loope
hlt
shrl
dec
add
cltd
inc
std
pushf
sbb
and
imul
imul
mov
cld
arpl
into
movsb
mov
jns
test
repz
push
mov
adc
pusha
jb
das
xchg
or
fldt
and
mov
cs
or
cmp
pop
jp
int
arpl
xor
mov
subl
fs
ss
imul
stos
rorl
cmp
arpl
enterw
imul
mov
xchg
mov
and
sub
xchg
sahf
xchg
sahf
fistl
push
sbb
add
outsb
lock
rol
cmpsb
je
xchg
mov
testb
loopne
fdivr
cltd
aam
adc
mov
push
push
jg
mov
mov
repnz
insb
and
xorl
mov
mov
adc
nop
xor
xor
sub
mov
xor
nop
inc
push
fcmovnbe
pop
lds
adcl
loope
cmp
xchg
mov
mov
mov
mov
mov
pushf
push
test
ror
jno
jns
icebp
mov
add
xchg
sub
inc
and
mov
insb
das
movsl
cmpsb
stos
dec
cmp
out
fistl
mov
pushf
or
nop
aam
jecxz
aaa
rorl
fdivl
cmpsb
or
mov
pop
sub
mov
sbb
xchg
lret
and
pusha
mov
lret
sbb
dec
subl
and
add
sub
xchg
xchg
push
hlt
int
das
lret
iret
int3
scas
push
bound
aaa
jge
mov
jg
push
adc
push
sub
mov
mov
pushf
loope
mov
adc
aad
cmc
sbb
dec
loop
add
popf
out
mov
mov
addr16
les
adc
mov
push
pop
push
mov
cmp
js
push
cmc
in
adc
push
cmp
loope
ficoml
cmp
dec
push
daa
roll
stos
inc
loop
negl
sbb
scas
repz
mov
xchg
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
repnz
sbb
sahf
adc
sbb
adc
ret
add
leave
dec
mov
add
dec
mov
and
adc
out
xor
frndint
mov
stos
mov
pop
int3
and
mov
xchg
in
mov
xor
js
jo
imul
dec
pop
jb
sub
call
insb
mov
std
enter
and
insb
sbb
ret
push
jl
scas
cmp
outsl
sbb
lcall
lds
cmp
inc
das
pop
addr16
sarb
mov
jne
cwtl
push
xchg
leave
pop
xchg
fs
fmuls
scas
lahf
add
cli
rorb
fisttps
sbb
adc
cmc
inc
cmp
add
imul
hlt
pop
push
jbe
mov
data16
pop
stc
imul
push
xor
shlb
loope
and
adc
sub
add
mov
pop
dec
cmp
xchg
push
std
inc
add
push
testl
cmp
jo
repnz
cmp
dec
cmp
xchg
cld
in
sub
mov
mov
imul
mov
pop
cmpsl
or
stc
movsb
movsl
or
cld
jnp
ret
sub
mov
and
pushf
lret
dec
dec
std
stos
jl
cld
stc
cwtl
aam
roll
sti
mov
shl
lea
mov
push
push
lfs
daa
cld
xor
mov
das
add
push
popa
push
lock
or
and
jnp
mov
mov
lret
ret
jp
ret
shrd
fst
mov
xchg
loope
mov
jle
cmp
shll
lods
dec
enter
add
fs
push
imul
push
nop
push
and
inc
and
repz
sub
xorl
push
repz
js
stos
scas
push
sub
jne
scas
dec
push
cmp
addr16
mov
pop
push
jle
insb
leave
sub
fdiv
add
and
sbb
jmp
lods
sbb
fadds
jns
adc
cs
push
jge
insl
dec
js
mov
jb
add
cmc
pusha
loop
and
int3
inc
add
mov
or
nop
push
inc
dec
cwtl
adc
stos
leave
fsubrs
inc
xor
sbb
jb
xchg
pop
jecxz
xlat
adc
aad
out
mov
push
clc
imul
pop
xlat
or
mov
pop
testb
mov
push
roll
testb
stc
xor
lret
inc
addr16
leave
lods
inc
pop
push
or
bound
inc
pmaxub
addr16
cmp
shll
xchg
dec
pop
push
or
iret
mov
sbb
dec
scas
xor
push
push
mov
xor
insl
sahf
mov
test
cmp
and
insl
mov
mov
mov
les
pop
mov
push
mov
sub
loopne
pop
add
push
out
pop
out
jne
inc
xor
hlt
loope
imul
pushf
mov
je
or
and
xchg
xchg
sbb
sbb
daa
rorl
addr16
xchg
sbb
int
lret
sahf
jp
loopne
nop
loope
addb
inc
xchg
movsb
mov
xorl
inc
cwtl
jl
stos
push
lods
sub
xor
mov
dec
pop
bound
sbb
pop
push
loope
test
add
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
adc
bound
and
mov
push
cmpsb
mov
arpl
and
roll
push
mov
and
dec
rolb
out
pop
xor
sub
pop
imul
scas
cld
in
test
mov
sub
rcrb
test
xchg
popa
pop
jmp
sub
jg
adc
sbb
mov
pop
cmpsl
push
xchg
out
sarl
push
repz
divl
cmp
and
mov
fdivrl
ljmp
add
mov
aam
or
add
sti
push
and
fnstsw
movsb
nop
shlb
pop
call
out
outsb
fstpt
imul
pop
lock
movsb
and
mov
in
mov
cmp
sahf
dec
or
inc
repz
nop
mov
xchg
imul
cmpsb
push
xor
xorl
jg
jbe
imul
or
xchg
sti
movsl
aas
and
mov
push
cmp
mov
inc
scas
mov
dec
mov
out
mov
jl
inc
mov
cmp
loopne
jbe
daa
xchg
inc
pop
mov
xor
fnsave
dec
stc
out
shlb
push
ret
out
inc
pop
aad
sbb
jae
pfacc
mov
clc
cmpsl
fcomi
testl
shrl
xor
sbb
inc
inc
ret
into
lahf
loope
repz
lods
push
shrd
shrl
sbb
je
stc
imul
push
jns
movsl
pop
jle
pop
js
sub
and
in
mov
pop
push
push
add
nop
imul
pop
loopne
cld
stos
sbbl
mov
lret
cmp
pop
inc
movsb
std
mov
test
push
xchg
mov
jae
std
insl
addr16
dec
in
mov
stc
movsb
invd
or
and
inc
rcll
xchg
push
pop
fcoms
xchg
sbb
or
jle
sub
loopne
das
stos
movsl
je
sahf
out
xchg
push
es
aas
stc
movsb
and
setle
aaa
pop
ret
push
mov
aaa
rcl
mov
inc
sub
jo
dec
scas
test
mov
call
jle
jb
ror
push
in
insl
mov
mov
sub
xlat
jnp
sbb
les
mov
fs
loope
dec
adc
jo
pop
add
outsl
pop
out
jnp
sbb
gs
inc
cmp
add
loopne
out
add
iret
lret
dec
out
push
xor
and
adc
mov
adc
jb
dec
enter
mov
mov
jns
mov
xchg
leave
jno
xchg
xchg
sbb
sarl
enter
jecxz
push
sbb
jnp
fcoml
or
lds
inc
dec
mov
aas
lret
fcoml
sbb
test
sbbb
lods
call
call
jmp
mov
sub
fidivrs
mov
push
mov
bound
sub
out
cmp
lds
and
xor
push
insl
xchg
movsl
mov
mov
mov
aam
cmpsb
mov
add
mulb
daa
jmp
in
scas
mov
fsubrp
inc
sbb
fstl
push
xchg
scas
adc
push
mov
jmp
pop
jno
mov
xchg
push
loopne
jle
push
sbb
sahf
adc
sbb
cmp
stc
in
test
in
mov
in
mov
sub
jo
orl
or
mov
sbb
xor
pop
cmp
push
mov
fldcw
mov
out
jg
shlb
and
push
xchg
daa
sbb
call
leave
test
cltd
and
add
popa
outsl
iret
cld
mov
jae
inc
mov
push
sbb
cs
movsl
fstl
mov
fsubrs
shl
dec
dec
xor
or
shlb
pop
test
fs
cwtl
dec
int3
nop
pop
sub
jecxz
or
push
pop
or
out
pop
push
cmpb
mov
loope
pop
cld
xchg
mov
cwtl
xchg
pop
mov
iret
aad
adc
add
xchg
push
jecxz
testb
in
mov
adc
int
inc
aas
push
sahf
pop
popf
cmc
or
neg
imul
test
popa
mov
test
mov
jns
push
into
lret
or
mov
aam
sahf
test
cmp
shr
cld
mov
aaa
xchg
push
or
stc
inc
mov
cmp
or
out
cmp
cmc
fidivrs
out
test
aad
or
mov
push
push
mov
and
xchg
in
sub
push
out
mov
push
test
push
js
and
adc
push
add
mov
out
stc
xor
cmovae
call
xchg
mov
lock
xor
stos
pop
lods
sub
push
pop
jae
stc
fldcw
or
xchg
loopne
test
mov
jge
cmp
cmp
fistpll
mov
pop
pop
outsl
arpl
mov
add
hlt
and
not
imul
push
xchg
adc
push
xchg
sub
aad
mov
je
jp
jle
inc
fsubrs
sbb
xor
push
sub
xchg
cld
fisubrs
imul
outsl
pop
dec
loop
pushf
in
add
push
inc
ja
jb
or
nop
sub
sahf
or
js
cmp
sbb
test
xchg
out
cmpsl
jl
adc
sbb
popa
mov
cwtl
call
cmp
xor
int3
shr
mov
outsb
fwait
sub
lret
pusha
imul
jge
cwtl
std
loopne
xchg
addb
ret
scas
mov
fs
mov
lret
mov
sti
bound
push
cmc
add
adc
es
sbb
shlb
add
inc
rclb
xor
lods
lock
mov
xor
cmp
aaa
mov
mulps
mov
cmpsl
xchg
imul
fadds
push
push
push
sar
sub
adc
jl
stos
mov
divb
scas
ror
mov
push
insb
loope
inc
std
clc
imul
test
mov
mov
popf
inc
sbbl
stc
sub
and
ss
xchg
inc
loopne
add
ljmp
lea
call
fsubrl
xchg
xor
cltd
int3
dec
lds
mov
cmc
dec
test
fistps
insb
sub
and
fwait
push
jbe
xchg
and
in
iret
ja,pt
jg
lcall
cmp
push
test
jns
fsubrl
lahf
out
adc
in
push
clts
js
lods
rolb
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
jecxz
mov
sbb
pushf
cmpsb
xor
sbb
into
cmpsb
sub
sub
fstps
mov
push
imull
mov
std
mov
dec
es
iret
loope
imul
jns
ret
nop
push
shrb
mov
or
pop
dec
test
enter
xor
adc
inc
sub
or
mov
mov
ret
add
jecxz
mov
adc
jmp
pop
daa
pop
div
add
sub
ret
in
lods
idivl
xor
jo
loopne
and
jecxz
mov
insb
lret
dec
test
push
filds
testl
jb
xor
push
or
xchg
test
mov
call
cmp
jb
mov
xchg
pop
cmp
mov
cmp
add
or
push
cmpb
rcrb
ds
mov
push
and
pop
jno
mov
std
xchg
das
push
rorb
add
pop
add
mov
push
andb
daa
scas
adc
aad
addr16
out
pavgw
in
mov
je
adcb
jo
mov
xchg
pop
js
into
jne,pn
sbb
daa
adc
add
das
push
movsl
adc
mov
adc
xchg
sbb
ret
mov
sbb
fdivrp
div
fs
jns
mov
fcompl
and
rcr
loop
xchg
rorb
mov
data16
je
xchg
andb
lcall
or
imul
push
dec
mov
cs
iret
adc
icebp
sub
and
mov
fwait
icebp
cli
cmp
adc
loop
ljmp
loopne
shl
xchg
mov
test
mov
mov
push
xor
sub
fbld
or
test
sti
adc
jecxz
mov
pop
gs
inc
jg
jns
fstpl
test
cltd
mov
dec
mov
and
sbb
into
lods
cmc
lahf
fistl
cmp
adcl
bound
out
mov
lock
dec
sub
mov
in
cmc
or
addl
mov
fwait
add
inc
add
jg
pop
xor
test
stc
xchg
ror
adc
orl
and
fmuls
xor
push
push
sub
mov
dec
jns
int3
or
iret
lahf
out
mov
add
scas
stc
and
cmp
frstor
sbb
bnd
xchg
out
push
jl
xor
repz
sbb
push
xchg
sub
test
cltd
stos
incl
xchg
sbb
push
roll
leave
mov
xor
jmp
xor
in
push
push
cmpsb
out
lock
pop
jmp
imul
push
jmp
test
sub
mov
icebp
fsubrl
int3
stos
inc
and
and
adc
push
shll
fs
sub
push
lret
sub
sub
lds
test
data16
ret
out
xor
push
xchg
pop
imul
test
or
in
xorl
sub
and
aam
push
sub
cmc
int
in
gs
xchg
cmp
test
mov
xor
pop
rcrb
stc
mov
mov
shll
xchg
mov
popa
in
pop
dec
cmova
mov
dec
ds
fbld
fs
shll
xchg
adc
cld
xchg
mov
fldenv
cmc
jno
int3
sbb
xor
shld
xor
mov
jmp
loop
es
mov
mov
dec
sbb
sahf
adc
sbb
mov
jl
inc
inc
xor
add
repz
sbb
add
je
sbb
js
dec
loop
xchg
sbb
mov
fisubs
cmp
in
fimuls
sbb
fisubs
jg
divl
jb
addl
fwait
sti
and
cmpb
imulb
je
push
sarb
fdivr
push
xor
xlat
mov
icebp
cwtl
mov
mov
dec
or
inc
lods
outsb
out
in
out
cwtl
icebp
mov
adc
sub
cmp
pop
inc
in
fimull
mov
outsb
cwtl
mov
lods
adc
arpl
pop
sub
fcomp
insl
jnp
pop
mov
inc
fucomip
pop
xor
or
mov
jo
fnsetpm(287
pushl
xchg
sub
imul
ret
and
push
stos
push
push
fsubr
jmp
jnp
insl
int3
inc
imull
orl
pop
dec
sbb
inc
and
fs
xchg
push
orl
push
outsb
bt
enter
cmpsl
mov
es
mov
sub
xchg
jmp
sbb
sbbl
mov
mov
leave
mov
fiaddl
loope
test
js
inc
dec
rcrb
mulb
loope
jmp
sbb
je
scas
jle
pushf
pusha
das
or
test
imul
lds
aam
or
and
cmp
sbb
clc
into
sbb
add
push
or
xchg
in
push
insb
subb
inc
cwtl
js
cmpsb
adc
rsm
jmp
cli
pop
mov
sti
cmpsb
push
sbb
or
mov
aam
arpl
cmp
sahf
int
enter
mov
mov
jno
push
loope
inc
in
call
sub
stc
pop
loop
rclb
jmp
sbb
and
and
clc
cmc
movsl
fnsave
adc
mov
pop
cmc
inc
and
outsl
in
ret
insl
outsl
out
mov
fs
out
cmp
sbbl
push
nop
dec
aad
pop
jle
pop
dec
adc
mulb
jno
jecxz
icebp
dec
cmc
cmp
jne
aad
movsb
enter
icebp
shl
in
lods
or
scas
ja
mov
push
xor
xor
xor
std
xchg
cmc
jg
add
jp
hlt
addl
fstl
and
mov
stos
aaa
mov
repnz
loop
jae
adc
add
ss
push
hlt
andl
lea
cmp
mov
cmpsl
lret
sti
hlt
ss
insb
cmp
xor
pop
mov
movsl
loopne
adc
cmp
cltd
sbb
jle
test
jnp
pop
xchg
mov
aad
vxorpd
push
xor
loopne
and
push
cld
ljmp
or
xchg
dec
xlat
imul
lahf
scas
xchg
in
xchg
pop
sub
in
mov
aam
pop
sbb
xchg
xchg
ficomps
orl
repz
insl
mov
mov
xorl
mov
rolb
inc
or
mov
popf
std
or
lcall
push
sahf
dec
movsb
pop
movsl
out
pop
mov
adc
enter
inc
pop
aas
inc
jne
outsb
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
nop
imulb
inc
sbb
sahf
adc
sbb
xchg
sub
popa
aas
push
iret
aaa
adc
mov
roll
movsl
or
roll
fwait
ljmp
hlt
mov
es
out
lds
out
pop
sbb
push
gs
into
dec
repnz
stc
fs
pop
cvttps2pi
pushf
and
bound
hlt
sbb
imul
std
gs
adc
ret
out
and
fidivl
jle
and
gs
sbb
shll
es
mov
cmp
or
or
cli
insb
push
bound
fildll
dec
pop
mov
push
pushf
jno
adc
push
fs
sub
add
xor
imul
aaa
mov
icebp
test
ret
cmp
xchg
pushf
xor
jg
pop
clc
and
push
cmp
push
xchg
imul
sbb
mov
cmpsb
lret
mov
push
fcomi
cmp
daa
mov
xchg
enter
sub
or
xlat
inc
push
loop
mov
aaa
fstpl
sub
cltd
xchg
adc
adc
xchg
shrb
add
out
jmp
jp
lret
lcall
mov
xor
dec
out
sbb
sub
cmp
mov
es
sahf
clc
lods
xchg
into
lods
sub
xor
lds
cmova
or
test
xor
mov
into
mov
dec
lods
inc
popf
xor
xchg
test
jae
in
insl
or
pop
push
adc
fmull
fucomi
push
mov
add
mov
out
xchg
imul
jbe
push
rcrl
repnz
cmpsb
pop
lock
ret
and
xchg
rclb
notb
mov
scas
dec
cmp
jo
jo
mov
mov
idivl
jmp
jb
pop
les
orl
cmp
repz
jb
movsl
les
dec
mov
inc
out
push
push
mov
call
add
std
xor
push
lret
xor
lcall
push
pushl
ds
xchg
inc
sti
enter
aad
enter
sub
sbb
cli
je
call
jb
dec
stos
leave
imul
repz
fisttps
aad
loope
or
jle
cmp
fs
jecxz
ret
dec
jnp
jae
jge
mov
xchg
mov
xchg
inc
int3
cmpl
mov
or
sub
mov
mov
adc
xor
xchg
sbb
sub
and
add
and
and
scas
or
add
cli
dec
daa
dec
jne
sbb
loop
fisubrs
xor
add
addl
je
lods
cmp
scas
push
pop
add
jl
insl
xchg
rsqrtps
adc
mov
out
and
jns
lea
std
xchg
in
rol
push
das
fst
jbe
dec
xchg
insl
dec
sti
stos
in
mov
icebp
testl
dec
jmp
frstor
ret
and
cmp
jge
mov
insb
mov
mov
inc
cmp
xchg
pop
imul
jne
rcl
ss
mov
mov
adcb
xlat
fimuls
sbb
lods
dec
add
cld
xor
cmp
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
jl
cmp
sbb
push
aad
jbe
sbb
test
mov
xor
sub
mov
adc
call
push
inc
lcall
fnstenv
xchg
or
mov
stos
mov
iret
sti
adc
cld
cmp
and
dec
fldt
aas
adc
nop
out
addb
mov
aad
pusha
fucompp
and
inc
dec
fdiv
fdivrp
pop
xlat
idivl
test
loop
fsubp
pop
inc
xor
or
out
in
pop
push
add
xchg
mov
lds
rolb
lcall
ljmp
cmpsb
sarl
scas
mov
pushf
jo
dec
das
add
or
jns
int3
jmp
pop
pop
pop
cs
or
sti
loopne
pop
cmp
repz
mov
aas
fstps
mov
shl
ret
cwtl
jo
cli
test
xchg
ficoms
jp
mov
daa
jecxz
pop
jmp
sahf
xchg
movsb
jno
imul
arpl
cmp
shll
in
scas
das
test
push
jns
xchg
js
mov
push
sbb
jle
aas
push
sub
lea
insb
scas
push
cmp
cwtl
mov
pop
dec
mov
fs
fdivrl
addr16
mov
rcl
mov
or
mov
pop
rol
insb
aaa
inc
in
loope
or
in
int3
mov
bound
xchg
lcall
mov
xchg
jg
loopne
fwait
pop
ds
cmp
jmp
cmp
sti
sbb
cmp
daa
jmp
adc
mov
cmp
add
in
mov
sbb
jge
inc
stos
push
aam
pop
mov
and
adc
rcl
mov
ret
push
out
mov
icebp
mov
mov
lds
das
mov
loop
pop
jp
test
and
cmp
cmpsb
cld
mov
sbb
fisubs
or
xor
xchg
ret
mov
add
cwtl
sti
add
bound
jl
fisubrl
mov
shlb
fnstenv
test
out
test
pusha
hlt
int3
gs
insb
pushf
jae
stos
push
stos
mov
lret
iret
test
js
jmp
inc
fnsave
and
xchg
jo
stos
in
push
ljmp
ss
pop
movsl
popa
jecxz
push
movsb
movsl
clc
jg
push
add
xchg
mov
xor
scas
jge
push
pop
rclb
and
push
sahf
xor
fistpl
jle
std
daa
fnsave
es
dec
insl
test
loope
int
push
adc
test
push
adc
orl
outsb
insb
mov
add
ljmp
mov
mov
mov
int3
popa
or
shll
das
imul
pusha
mov
sahf
xchg
xchg
popa
or
pop
fwait
lds
jp
sbb
idivl
mov
pop
sub
sub
mov
ror
inc
xchg
cmp
push
shrl
rcll
cmpb
lcall
xchg
push
jno
mov
mov
inc
pop
mov
sub
add
pop
xchg
je
shr
add
in
aaa
pop
sub
mov
cmp
pop
inc
inc
ds
fs
pop
outsb
lahf
mov
je
sbb
out
inc
or
ljmp
orl
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
imul
push
xor
sbb
mov
idivl
and
lods
xlat
push
push
fxch
je
xchg
push
push
pop
in
xor
cwtl
test
mov
int
in
lcall
fstpl
mov
repz
test
cmc
add
jbe
test
daa
pushw
icebp
jb
add
scas
add
rcrl
sub
push
add
testl
mov
jb
xchg
loope
fcmovne
test
sahf
sbb
rcrb
inc
xchg
movsl
pushf
push
ss
adc
pop
xchg
mov
jns
call
lods
mov
adc
lret
mov
pop
xchg
out
jg
in
sub
sub
mov
jecxz
xchg
jmp
outsw
add
xor
adc
aaa
and
push
pop
cli
add
inc
call
pop
add
inc
jmp
push
fs
mov
je
cltd
xchg
push
insl
cmpsb
lea
dec
shrb
or
sbb
add
or
mov
push
xor
leave
cmpsl
or
cmp
jne
ds
lret
rcl
in
pop
xchg
sub
cmpsb
mov
fisubl
inc
and
push
rorl
adc
xorb
jg
mov
add
daa
stos
mov
fstpt
sub
fcoml
inc
and
add
mov
aaa
pusha
pop
mov
out
push
movl
in
mov
xor
push
cmpsb
cwtl
adc
xchg
jmp
fisttpll
mul
ror
cmp
in
lea
pop
xor
inc
sbb
das
test
inc
dec
cmp
scas
clc
xor
repz
mov
mov
dec
pop
inc
dec
dec
push
aad
loopne
nop
mov
mov
xchg
cli
enter
lea
test
scas
inc
hlt
in
ret
mov
aas
ja
xchg
xchg
sbb
jge
lock
icebp
enter
mov
scas
pop
lods
lods
mov
push
xchg
sub
decb
cmp
xchg
out
and
lods
notb
cmp
push
sbb
leave
aas
fists
dec
jge
movsb
mov
fadds
jmp
jo
mov
pop
es
shrb
pop
sti
frstor
lods
arpl
jge
outsb
bound
fwait
out
out
in
mov
ss
out
loope
push
mov
adc
inc
pop
add
fs
fwait
xor
push
das
adc
scas
jns
pushf
lret
fldl
push
repz
std
gs
push
mov
cmpsl
pushl
in
push
and
and
cltd
int
cwtl
jge
bound
aad
jno
mov
adc
dec
inc
leave
mov
out
sahf
inc
sub
or
lock
daa
pop
imul
aad
leave
add
push
imul
ja
pop
push
cmc
xor
lret
hlt
cmp
scas
lods
jbe
dec
testb
out
pop
das
fstl
xchg
cltd
lcall
shll
ror
jnp
jne
mov
push
jo
push
popf
and
xchg
cmc
sbb
ret
pushf
push
addr16
cwtl
ljmp
sbb
mov
int
add
add
mov
push
imul
imul
inc
incl
mov
ret
xlat
cltd
orl
sti
imul
nop
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
movaps
sahf
adc
sbb
or
jmp
push
stc
or
int3
jnp
push
jge
fnstcw
mov
or
cmp
xor
js
fucomp
ja
in
xchg
or
dec
inc
scas
scas
fldt
and
pop
leave
imul
fsubs
stos
insl
insl
dec
xchg
orb
lea
mov
jl
xor
sarl
test
sub
loope
ret
loopne
sbb
repz
sub
sarl
xor
fisubrl
pop
jge
pop
das
push
and
add
lcall
inc
enter
push
test
repz
mov
int
push
fwait
call
xchg
test
leave
xor
xchg
cmp
xor
rorl
inc
rcr
xlat
pop
xchg
push
fisubrs
xchg
inc
push
and
fsubr
outsl
mov
cmp
insb
ror
cmpsb
pushf
repnz
cli
rcrl
icebp
dec
mov
pop
or
lahf
sarl
popf
jmp
rep
stos
cmp
dec
test
adc
cmpsl
sbb
inc
repz
or
sub
cld
test
xor
subl
loope
lock
aaa
jo
mov
cmc
leave
mov
push
lock
mov
ss
jae
inc
or
bound
sub
xor
dec
or
gs
xchg
lcall
jne
not
xchg
ds
test
bound
dec
outsl
jl
mov
rcr
mov
jnp
movsb
pop
ds
je
rol
hlt
sbb
push
push
out
scas
dec
or
sub
mov
jge
pop
mov
and
jo
das
or
in
push
jge
jb
inc
cmp
clc
and
repnz
dec
loop
rcrl
gs
sti
lods
ret
xlat
jl
push
test
push
add
mov
jg
test
das
lcall
and
dec
mov
andb
inc
inc
xlat
inc
add
mov
popa
and
jmp
aas
cmp
mov
test
imul
push
aaa
fsubs
and
or
cltd
inc
pop
enter
mov
std
push
divl
cltd
mov
xchg
push
sbb
and
dec
adc
popa
cmc
add
out
push
adcl
in
dec
orl
jmp
cmpsl
fnsave
mov
pop
ljmp
xlat
imul
pop
in
push
test
fst
sub
movsl
pop
sbb
nop
dec
arpl
dec
lods
shrl
mov
insb
neg
mov
loop
jp
cmpsl
imul
xchg
cmp
adc
xchg
aad
cmp
call
add
fnstenv
xchg
or
fstpl
xlat
push
mov
popa
lret
dec
jp
fildll
not
mov
push
roll
cli
xor
xchg
jno
shrb
push
dec
mov
push
cld
jge
adc
imul
call
std
push
sbb
mov
es
push
xchg
bswap
mov
je
sarb
pop
mov
push
mov
cmp
adcb
cmp
lahf
and
mov
in
stc
sbb
es
lods
idivb
adc
xor
out
int
adc
mov
jcxz
xor
mov
das
pop
xchg
leave
dec
xor
fidivl
out
pop
mov
popa
add
popa
mov
cmp
cmpl
cld
sahf
lret
repnz
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
fildl
sbb
sbb
inc
pop
lods
das
jbe
inc
mov
jne
xor
es
inc
jne
lea
mulb
pop
fcmovb
test
sub
ljmp
outsl
cmpsb
lea
xchg
ss
ret
dec
mov
add
gs
jns
or
and
cmp
int3
mov
mov
dec
pop
lods
ds
inc
fisubrl
pop
sub
cld
ret
pop
repz
xchg
pop
mov
ret
loopne
je
loopne
push
cwtl
xchg
rcrl
mov
out
sbb
rclb
or
int3
xor
imul
mov
mov
dec
jnp
in
jmp
xor
fwait
sub
dec
aas
cli
mov
out
ret
pop
jmp
cltd
mov
rcrb
xchg
add
sub
sbb
sbb
mov
stc
mov
sbb
inc
and
adc
cld
cmpsl
arpl
ja
jno
cmp
push
jns
pop
or
or
int
dec
adc
es
or
call
in
xlat
xchg
lahf
add
cmp
dec
pop
ret
cmp
in
adcb
popa
jl
stos
sbb
pop
ja
xchg
or
leave
pop
mov
mov
xchg
mov
xchg
push
sbb
cmpsl
lcall
push
fadd
mov
or
or
adc
push
ret
mov
jmp
fstpl
movsl
in
sar
das
push
iret
pop
mov
daa
xchg
sbb
loopne
jl
test
in
rcrl
je
xchg
adc
repnz
fistpll
fisubs
shrb
das
aas
or
inc
dec
sbb
repnz
lods
ret
inc
cmpb
cli
dec
mov
popf
mov
imul
xlat
xorl
fwait
mov
dec
lret
das
mov
test
cli
cmp
ret
shll
dec
cltd
xor
repnz
sub
mov
cld
cmp
lea
or
sbb
adc
push
mov
je,pn
addr16
sub
or
add
mov
xchg
cmp
mov
mov
lods
jno
imul
mov
in
push
inc
push
leave
out
dec
adc
cmc
jnp
push
shll
sub
loope
push
inc
mov
jmp
mov
rol
dec
mov
adc
fnstenv
sub
fbld
xchg
cs
shrl
or
aad
jmp
inc
jae
dec
fwait
mov
inc
sub
inc
mov
cltd
insl
sub
xor
bound
mov
fbstp
imul
sbbl
jb
imul
push
js
sbb
xor
outsb
and
sub
jno
ficompl
pop
cmp
cmp
mov
fxch
xor
ficomps
roll
ljmp
js
xchg
sub
fstps
adc
and
andl
mov
fdivrl
push
push
setbe
adc
mov
jno
cmp
mov
xor
xchg
bound
mov
mov
cmp
hlt
xor
cmp
adcb
jb
data16
sti
insb
mov
jbe
push
sub
mov
mov
std
inc
out
stc
dec
mov
mov
fsts
sbb
and
lea
pop
nop
rorb
xor
inc
ljmp
or
adc
in
insb
cli
shll
aaa
ret
daa
xchg
test
cmpsl
adc
fildl
pop
cmpsl
imul
cmp
inc
loopne
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
jge
out
mov
outsb
adc
sbb
stc
push
lahf
rorb
jb
iret
sarl
das
mov
ret
popf
fsubrl
insl
rolb
xchg
in
jecxz
movsb
call
pop
mov
add
pop
dec
mov
pop
pop
add
xchg
xor
cmp
xchg
push
sub
daa
fcompl
push
int
jbe
jle
adc
or
xlat
js
add
fwait
ret
cmc
sbb
fsubr
out
shlb
xchg
andb
lods
sub
xor
aas
inc
jno
cmpsl
jle
ret
scas
dec
rcrl
and
or
test
nop
inc
pushf
push
inc
xchg
jp
sub
rcl
mov
push
lds
in
xchg
shlb
sub
adc
add
cli
mov
insb
push
adc
test
lret
inc
push
imul
xor
push
pushf
xor
lret
mov
orb
mov
pop
add
push
mov
add
xchg
call
mov
imul
or
clc
pop
mov
mov
and
cld
movsb
lods
jmp
into
add
pop
aaa
push
jge
and
push
add
add
pop
and
insb
or
jg
test
pop
sbb
inc
xor
pushf
and
xchg
xor
add
sub
push
or
shrb
cld
cmc
jg
mov
clc
xor
cs
pop
std
imul
push
cmp
aaa
pop
aam
cmp
jl
jb
xor
daa
cmpsl
fldl
cmpsb
push
jmp
adc
in
cmp
loopne
sbb
or
fimull
inc
sar
jmp
in
in
adc
xor
sarl
fldt
push
xchg
mov
xor
enter
jg
xchg
dec
sub
mull
push
dec
scas
dec
adc
sbb
ffree
lret
xchg
mov
xor
xor
inc
sub
jmp
in
dec
sub
lods
cli
aam
in
mov
dec
das
push
imul
dec
frstor
cmpb
or
xchg
lods
push
cld
xchg
mov
xchg
mov
mov
cld
cmpsb
gs
je
call
dec
xor
dec
sbb
test
clc
roll
mov
leave
js
pushf
jo
dec
mov
movsb
inc
xor
ja
add
pop
push
push
fwait
dec
sbb
add
popf
cltd
xor
shrl
shlb
inc
pop
cmc
into
or
jne
outsb
mov
mov
xchg
insb
inc
repz
and
dec
shll
mov
sti
xchg
push
paddb
enter
mov
dec
test
imul
leavew
jbe
mov
pop
mov
scas
inc
fmulp
ja
adc
or
rcr
stos
sub
int
cmp
loopne
and
xchg
clc
divb
or
inc
push
push
adc
daa
sbb
cld
sahf
cmpsb
int3
test
loope
and
enter
pop
add
inc
add
bound
dec
push
stc
push
movb
lret
mov
sbb
stos
and
sub
inc
inc
xchg
sub
adc
outsl
lret
mov
xchg
dec
push
push
outsl
dec
jnp
or
sbb
sbb
push
and
push
pop
mov
xchg
xchg
jg
gs
int3
ljmp
js
jno
inc
and
ret
fmull
pop
call
cmp
fsubs
or
adc
addl
add
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
repnz
adc
sbb
sbb
jg
mov
and
jae
adc
into
jge
sahf
jbe
xor
sub
pop
cmp
jge
jae
out
into
push
movb
mov
sub
out
jne
in
insb
je
fmull
std
aas
mov
arpl
in
sahf
mov
pusha
cmp
fsubs
cwtl
test
mov
cmp
call
mov
cmp
lods
mov
pop
movsb
push
insl
jle
mov
ja
sbb
dec
insl
jg
test
aas
jle
cmp
add
jle
push
iret
push
xchg
bound
stos
jle
lahf
pop
push
sub
loopne
adc
out
sbb
or
fsubrl
add
dec
pop
sbb
scas
pop
int3
aam
mov
scas
pop
lahf
dec
push
lds
cmpsb
xor
add
adc
jg
pop
pop
xchg
mov
xchg
jl
mov
sub
mov
sub
cmpsb
sbb
repnz
or
sub
add
popf
push
repnz
stos
or
adc
out
jl
dec
fldcw
out
adc
lret
insb
clc
and
imul
jbe
fstps
sbb
lods
repz
aaa
jno
xor
jecxz
sub
sbb
xchg
xchg
stc
pop
sti
fdivs
pop
hlt
lods
xchg
cmp
adc
lods
dec
inc
push
in
aaa
adc
lret
xchg
dec
lret
fstpl
pusha
jge
iret
je
or
scas
mov
push
add
xchg
mov
mov
mov
gs
cwtl
lret
jge
pop
push
test
add
mov
icebp
fisubl
cmp
pop
fistps
movsb
clc
popa
mov
aam
cmpsl
jno
mov
stc
in
out
mov
fs
hlt
jb
stc
xchg
fidivl
pop
pop
cmpsl
fisttpl
push
dec
xor
arpl
sub
push
add
sbb
cmp
and
jne
addr16
cmc
ss
ret
mov
hlt
rcr
and
and
cwtl
enter
lea
push
adc
sub
lret
idivb
mov
sub
pop
push
imul
imul
nop
add
lods
hlt
xor
stos
dec
das
pop
xor
dec
sub
fstp
icebp
iret
dec
mov
xor
cmpsb
mov
dec
ds
mov
xor
data16
pop
mov
test
add
lret
pop
stc
aad
push
ss
sbb
bound
sbb
add
test
mov
sub
and
mov
push
cmp
jns
test
mov
loop
and
xchg
add
xor
push
test
rcrb
pop
add
dec
sub
mov
pop
outsb
pop
mov
xlat
iret
shlb
pop
cwtl
and
inc
call
add
dec
push
es
xchg
sbb
or
mov
push
nop
add
lea
push
loope
add
inc
dec
cltd
xchg
mov
mov
jno
pop
add
enter
in
inc
jb
aas
cmp
jae
test
andb
mov
add
sbb
lahf
pop
pop
pop
adcb
xor
adc
mov
adc
jg
mov
push
and
cmp
or
xchg
ret
jmp
jmp
lret
cltd
jecxz
or
sarb
mov
clc
lock
neg
rclb
cltd
out
cmp
scas
jno
sub
lret
out
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
into
andb
outsb
adc
sbb
popf
iret
out
addl
pop
aaa
sarb
in
push
xor
adc
pop
jmp
loope
and
xlat
push
test
dec
push
add
or
sbb
fistpl
add
lock
add
mov
push
test
jmp
scas
sub
or
xor
mov
rorl
mov
sub
and
std
dec
shlb
cmp
lods
loop
mov
mulb
mov
mov
jge
fsubl
sahf
cmpsb
imul
dec
cmp
jle
insw
sub
add
mov
fcmovne
rorb
pop
push
aam
lret
inc
stc
add
int3
shlb
pop
scas
je
sub
cmp
popf
mov
xchg
lods
mov
cmp
dec
mov
ds
inc
xor
int
hlt
mov
dec
cmpl
fwait
popf
mov
dec
cmp
fisubrs
cmpsb
xchg
jmp
xchg
push
lcall
shrl
test
jecxz
pop
dec
gs
inc
loop
int
inc
mov
mov
pop
push
and
and
mov
fisttpll
sbb
xchg
popa
inc
push
sbb
xor
cmc
jns
clc
test
pushf
ds
mov
mov
jno
jae
fisubrl
sbb
mov
push
out
lods
pop
dec
popa
dec
cmp
ret
and
inc
xchg
mov
mov
clc
pusha
push
push
xor
leave
enter
and
and
in
pop
loop
nop
sbb
inc
andnps
cmp
pop
pop
leave
adc
insl
xor
lods
mov
push
lea
je
aam
push
cmc
test
mov
mov
or
arpl
xchg
movsb
lcall
xor
lds
or
dec
jmp
mov
cmp
dec
mov
and
test
dec
lock
pop
mov
push
lret
adc
je
rolb
fmull
push
test
add
jns
int
in
das
sahf
cmp
sahf
sub
mov
inc
push
std
sbb
lods
push
sbb
xor
inc
loop
xorb
xchg
mov
mov
lods
jle
xor
mov
movsl
movsl
push
xchg
cld
add
pop
shrb
stos
fldenv
jno
aad
mov
mov
mov
popf
cld
iret
adc
dec
sbb
call
cmpsl
cmp
xchg
cwtl
ljmp
mov
and
push
mov
cs
cltd
mov
aaa
fmulp
push
sbb
inc
jne
lcall
lea
fsubs
xor
and
dec
sub
and
sub
andb
test
jo
add
xor
mov
stos
scas
out
shl
cmpsl
inc
sarb
pop
mov
imul
inc
cmpl
sbbl
mov
pop
fcoms
sahf
pop
daa
inc
aaa
push
cltd
sub
out
pusha
pushf
adc
adc
iret
ret
mov
out
adc
mov
and
xchg
pop
push
dec
test
pop
sbb
xchg
or
lret
sbbl
jno
mov
adc
aas
cs
xchg
adc
or
cmpsl
jge
push
push
pop
cld
insb
sahf
mov
jle
cmp
dec
pop
jnp
ja
repz
push
inc
or
mov
pop
sub
rcrb
jb
pop
aad
jno
add
or
fisttpll
ljmp
inc
loopne
dec
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
pushl
push
add
sbb
inc
enter
push
sbb
dec
aad
loop
add
mov
in
in
mov
sub
loop
pop
dec
dec
add
jo
fildl
test
shll
mov
xor
rcrb
sub
repnz
mov
shll
sbb
int
movsb
dec
jb
lahf
fs
call
loopne
sti
repnz
mov
lods
push
sbb
cmp
subb
sarl
add
jns
xchg
mov
stos
xor
fs
push
movsl
fstps
add
jnp
mov
mov
rolb
xor
adc
push
cli
loop
movsl
jge
jae
outsl
cmp
adc
mov
shll
stos
addr16
dec
adc
pop
cmc
iret
mov
and
add
gs
data16
lock
aas
cs
dec
out
mov
pop
sahf
or
flds
es
mov
sahf
daa
dec
adc
test
or
dec
dec
and
jb
outsl
fnstenv
and
ds
adc
roll
ret
fxch
push
imul
fstpt
push
pop
imulb
add
xlat
and
inc
pop
pop
adc
jae
in
lahf
inc
push
icebp
add
lods
mov
pushf
gs
sub
mov
loop
push
and
jo
shll
sbb
lock
mov
int3
mov
jmp
dec
daa
jns
leave
cmp
inc
xchg
pop
loopne
sbb
aam
loope
call
insl
mov
in
mov
sti
insl
sub
push
aas
aam
test
mov
adc
imul
mov
inc
jg
fcomi
add
je
aaa
mov
push
aaa
xor
nop
xchg
mov
ret
adcb
add
jmp
jno
jl
ss
fs
mov
outsl
mov
sub
mov
js
imul
adc
push
lock
sub
into
xchg
pop
jb
cmp
sub
stos
icebp
fnstsw
jbe
rcrl
xchg
push
xor
mov
imul
mov
xchg
clc
fbld
nop
mov
and
insl
push
or
je
fidivs
sub
xchg
faddl
not
pop
adc
repz
cmp
inc
mov
les
pop
and
mov
xchg
sbb
in
cmp
fdivrs
sub
mov
pusha
inc
clc
test
lock
clc
movsl
xchg
sbb
scas
test
push
sub
jp
daa
sbb
je
dec
loop
lock
inc
je
ret
adc
push
loop
fidivrl
into
add
lret
pusha
adc
clc
sbb
cmpsl
ljmp
push
mov
pusha
inc
mov
cwtl
add
xchg
push
add
xchg
or
nop
in
or
sbb
clc
mov
rorl
xor
ficoml
les
and
cmp
lock
ror
xor
data16
sahf
xchg
and
mov
pop
xor
or
push
int
and
in
lret
sbb
push
pop
mov
sbbb
cwtl
nop
test
imul
mov
into
fdivrl
lds
mov
cld
fyl2xp1
jns
orl
addr16
jb
mov
rcll
xor
xor
pop
sar
pop
dec
sbb
jge
lock
int3
cmp
sub
xorl
push
adc
ss
in
xchg
lret
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
jo
shll
adc
sbb
xlat
lods
xor
clc
movsb
ja
and
out
cmp
dec
scas
in
mov
fimuls
xor
dec
fwait
sarl
gs
xchg
leave
pop
adc
pop
hlt
dec
xchg
push
xchg
pop
push
out
into
xchg
es
and
adc
or
add
inc
movsl
cmp
add
jae
daa
out
stc
and
mov
sub
lret
in
fisubl
xor
fsubrl
mov
pop
test
xchg
xchg
dec
lods
lods
cmpsl
cmpl
xchg
arpl
fidivs
in
sub
mov
jne
icebp
lret
mov
rolb
xchg
stos
mov
loop
cld
mov
or
xorl
into
shll
out
ret
daa
mov
adc
mov
push
and
jg
jae
cld
stos
mov
mov
stc
jecxz
pop
sbb
aaa
and
add
xchg
test
jbe
pusha
inc
mov
jge
adc
xchg
xchg
bound
fs
inc
add
xor
xchg
cmp
jbe
loop
xchg
sarb
lods
cmpsl
imul
inc
push
and
mov
xlat
das
sahf
push
or
cli
mov
mov
xchg
mov
clc
cmp
or
inc
das
xor
mov
int3
imul
and
int
cltd
mov
arpl
cs
mov
inc
imul
or
mov
jge
and
or
arpl
cmp
jno
mov
mov
ja
pop
inc
and
cmp
xor
adc
dec
andb
dec
cli
cmpsb
mov
popa
mov
lcall
mov
je
mov
mov
mov
je
push
in
cltd
adc
test
or
aas
pusha
xor
xor
pop
push
into
pop
push
flds
jle
setns
jp
test
lahf
mov
fldt
aas
out
and
repnz
jle
aas
out
xchg
xchg
push
jns
test
and
sbb
or
jle
in
dec
xor
notl
adc
ds
mov
lods
mov
fdivrl
dec
pusha
sub
xor
dec
icebp
dec
cmp
ss
push
je
push
stos
jnp
lods
aad
outsb
xchg
enter
notl
rcr
lea
jns
push
xor
adc
push
loop
incl
cmp
dec
icebp
daa
push
jnp
mov
mov
cmp
int
cli
fildll
subl
mov
inc
push
call
sbb
cmp
dec
dec
mov
add
cmp
arpl
ds
jo
lret
lea
fstl
dec
push
xlat
mov
dec
jg
mov
jle
lret
sub
ret
arpl
adc
jne
push
lret
dec
popf
mov
sahf
xor
fmul
addr16
das
xchg
js
sub
sbb
arpl
xor
sarl
cmp
or
add
data16
cmp
cmpsb
ljmp
fmulp
mov
cmp
mov
mov
jp
repnz
push
movl
and
cs
les
push
jle
std
js
sarl
or
int3
pop
stos
stos
sub
xchg
sub
sahf
fcomp
or
ficoml
jmp
dec
fsubrs
sub
xchg
cmp
lcall
sub
xor
dec
addl
cvtpi2ps
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jl
cmc
sbb
outsb
adc
sbb
lcall
gs
pop
andb
push
imul
or
aas
cmpsb
dec
leave
and
sub
shll
jge
xor
aaa
call
xor
stc
xchg
test
stos
sbb
xchg
call
mov
shl
call
sub
fisubl
fistpll
hlt
aaa
fistps
xchg
lret
lret
pop
sub
das
push
adc
pop
or
mov
andl
pop
add
aaa
jnp
or
out
and
add
divb
xor
cmpl
mov
mov
orb
in
or
mov
xchg
cmp
push
pop
nop
add
dec
pop
gs
aaa
loope
inc
push
cmpsl
call
pop
jp
jp
sub
in
stos
imul
xchg
mov
push
mov
iret
push
cmpsl
xchg
mov
mov
call
push
pushf
dec
cmpb
pop
add
pop
in
test
pop
scas
outsb
stos
inc
imul
int3
pop
adc
cmpsl
mov
lret
mov
mov
mov
lds
or
dec
ss
shrl
imul
cltd
fidivl
mov
and
cmp
test
cmpsb
sub
jb
sti
dec
pop
lds
icebp
adc
sti
add
int3
mov
inc
push
and
cmp
cmp
popa
or
mov
lods
xchg
sub
inc
xor
scas
fcomps
pop
icebp
mov
js
xor
movsb
dec
pop
jp
shll
in
popa
mov
mov
jp
xor
das
rcrb
or
ret
in
cmpb
mov
or
lods
repnz
out
movsl
es
push
in
xor
loopne
shll
cmp
jmp
in
lret
mov
outsb
scas
fnstsw
cmpl
jg
sbb
sbbb
push
mov
test
ret
xor
cltd
add
imulb
divl
sub
out
xor
dec
jns
sbb
lcall
push
or
and
mov
adc
filds
mov
mov
cltd
dec
xchg
not
sbb
adc
push
mov
inc
jmp
cmpsl
add
fisttpll
aas
push
shl
jno
mov
pop
cmpsb
inc
mov
sbbl
loope
xor
adc
int3
or
sub
lea
xor
push
push
cli
xchg
adc
das
cs
mov
adc
pop
dec
aas
cld
mov
les
out
fwait
dec
mov
fmuls
pop
fadd
lods
movsb
test
jne
mov
jl
js
xchg
inc
xor
sub
sub
jne
pop
out
sub
call
jnp
inc
shlb
popf
or
int
imul
bound
pop
pop
andl
mov
popf
pushf
cli
enter
scas
pop
cmpsb
cmc
stc
sub
mov
add
add
ret
mov
mov
or
push
push
xor
fsubs
stc
inc
sbb
pop
gs
mov
jle
push
push
mov
xor
arpl
fildll
cmpsb
fimull
push
adc
ja
das
dec
out
rcr
in
and
fcoms
jbe
imul
push
repz
das
insb
aam
adc
std
mov
insl
push
mov
ds
out
sbbb
add
ret
or
sub
andl
add
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
pop
cmp
nop
stc
sbb
sub
xchg
push
and
pop
testl
lea
xchg
fisubrl
ja
cmp
sub
xchg
or
pop
adc
sub
js
dec
outsl
outsl
cmp
mov
cmp
sahf
dec
out
cmp
xchg
roll
or
sbb
loopne
mov
push
in
jne
pop
sub
imul
cmp
cltd
test
aad
sbb
push
xchg
arpl
cmpsb
jno
push
dec
sub
pop
and
pop
mov
xchg
negl
cmpb
sub
sub
inc
push
in
imul
loopne
rcr
add
lcall
rol
test
ljmp
cmp
pop
pusha
sub
fdivs
inc
and
adc
lahf
fst
and
jle
push
jle
sub
cmp
mov
mov
stc
out
insb
mov
xchg
ss
shrl
push
cmpsb
xchg
and
es
dec
jns
iret
jg
xor
movsb
sti
mov
cmpb
test
pop
test
push
das
test
cmp
fidivs
lds
stos
add
inc
and
push
xor
add
movsl
mov
add
and
push
out
jbe
insl
out
test
es
je
fcoml
bound
icebp
out
roll
push
jg
andb
stc
add
pop
pop
imul
lds
outsl
push
lret
and
mov
and
cli
es
filds
or
sub
repz
jno
and
test
add
jne
imul
bound
xchg
cmp
jno
xor
dec
call
xchg
inc
ljmp
addr16
add
insl
adcb
addr16
sti
in
fsubrs
adc
add
or
cli
dec
jle
cltd
inc
outsb
cs
inc
stos
test
sub
es
jge
jne
in
scas
xor
cmp
mov
xchg
and
mov
mov
xchg
ja
dec
dec
pop
frstor
cmp
fisubrs
adc
cmpsb
or
xor
ds
insl
in
xor
daa
out
pop
repz
cmp
push
jns
inc
jae
pop
shrb
mov
clc
popf
pop
lods
or
int
lea
pop
pop
and
push
out
adc
xor
cmc
and
cli
inc
sub
enter
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
mov
sbb
adc
sbb
repnz
mov
mov
xorb
adc
lcall
aad
enter
sti
mov
mov
test
in
leave
repz
adc
nop
mov
fidivrs
jp
xor
lock
inc
mov
dec
int
xchg
xor
add
jg
xchg
fsub
fsubr
shlb
xor
xchg
lcall
sub
add
sbb
ss
jmp
push
pushf
outsl
lds
aas
les
popf
pop
sbb
out
call
push
inc
dec
inc
sub
movsl
std
jbe
mov
in
movups
mov
rcr
movl
jecxz
sbb
xor
test
mov
dec
sbb
sbb
or
int3
xchg
mov
movsb
shlb
into
lods
adcb
add
sbb
push
in
sub
loopne
adc
sbb
lret
pushf
mov
ljmp
mov
push
jae
pop
inc
pop
pop
xchg
shll
jo
fcmovu
scas
outsl
and
dec
inc
xchg
out
mov
sub
into
pop
inc
iret
cmp
mov
cmp
dec
push
mov
aas
inc
push
mov
inc
dec
jno
dec
mov
dec
ret
cltd
fwait
scas
adc
and
add
jo
out
mov
cmc
fwait
jg
sub
sbb
mov
dec
ss
outsb
jle
enter
out
sub
jno
das
sub
fdiv
cwtl
xor
shrl
mov
jns
jecxz
fistl
in
jmp
push
xor
and
sbb
in
sti
sbb
sbb
adc
fs
lea
mov
mov
cltd
xchg
das
push
dec
push
inc
fsubrp
push
fbstp
adc
dec
xchg
push
dec
dec
pop
mov
test
lods
aas
test
jecxz
test
lods
imul
mov
mov
xor
add
sbb
dec
xor
cmc
je
shll
xchg
lea
test
mov
jp
imul
insl
push
sub
push
mov
inc
pop
jl
mov
jle
push
inc
pop
pop
adc
mov
xchg
cmp
lock
mov
jecxz
pop
mov
pop
mov
std
push
mov
jne
adc
orl
xor
out
dec
cmpsl
outsb
xor
jp
ret
xor
inc
push
sbb
mov
mulps
inc
in
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
mov
loop
sbb
adc
sbb
cmp
das
inc
cld
dec
cli
cmc
pushf
add
xor
fsub
inc
jo
lock
xor
stc
jle
xor
mov
fsubrs
out
mov
out
adc
xor
jmp
mov
pop
je
loopne
nop
push
out
mov
mov
inc
orb
stc
movsb
mov
sub
sub
push
mov
inc
xor
int
push
cmpsb
addl
push
addr16
and
popa
int
add
clc
mov
shrb
into
scas
or
fwait
testb
sbb
stos
daa
roll
mov
push
cmc
notl
int
orl
ljmp
jp
in
fists
rol
jno
mov
div
sarl
sahf
outsl
xorps
inc
not
mov
popf
and
xor
gs
rcr
xchg
fscale
adc
pop
jecxz
std
je
out
jbe
lods
sub
push
inc
add
mov
inc
cwtl
push
or
lret
cmp
scas
sti
push
rclb
lds
imul
push
mull
cltd
xor
gs
fbld
add
cmc
aam
popa
ljmp
aas
jb
cmp
subb
aam
xchg
cwtl
xor
lahf
mov
cld
outsb
in
test
add
in
mov
fwait
shl
js
popf
add
dec
dec
loopne
lahf
in
xor
fwait
ss
shlb
out
roll
push
aaa
adc
out
inc
cmpsb
mov
decb
mov
mov
bound
jle
inc
jmp
mov
inc
jb
scas
and
cmp
pop
push
pop
mov
xchg
mov
std
shll
mov
pop
add
cmc
ret
sbb
and
jge
mov
icebp
jno
aas
xchg
or
push
inc
add
adc
pop
shll
lret
xor
test
ja
gs
xor
sub
scas
enter
js
pop
pop
aaa
add
push
dec
notl
mov
les
arpl
xchg
repz
aad
outsb
sbb
mov
and
xor
mov
jmp
pop
ret
xchg
insb
push
add
sub
stos
out
inc
sub
cld
add
outsl
stos
xor
stos
movsb
lock
fdivs
sub
fadd
inc
inc
aas
dec
mov
adc
in
popa
cld
jnp
or
es
inc
dec
clc
sti
dec
jbe
sbb
mov
xor
jmp
pop
fdivs
sbb
pop
into
sbb
jae
add
out
sbb
rclb
sbb
xor
imull
push
jne
aaa
ficomps
out
jb
pop
and
or
mov
loope
out
jmp
mov
lret
mov
int
arpl
or
lret
mov
out
jmp
mov
jle
adcb
dec
out
add
sbb
decb
mov
dec
cmp
cmp
xchg
insb
lahf
push
xchg
mov
mov
rcrb
test
mov
xor
cld
push
aam
sbb
cs
xlat
jle
dec
or
mov
int
mov
adc
xor
mov
push
aam
push
js
pop
adc
xchg
out
lods
xchg
fists
cmp
xchg
sbb
ja
popf
mov
or
inc
iret
out
negl
push
mov
sub
test
add
xor
js
and
popf
sahf
js
stos
mov
dec
xchg
pushf
cld
pusha
testb
leave
rolb
and
xchg
test
es
mov
xchg
sub
xchg
add
jae
subb
notl
aaa
addl
mov
mov
adc
in
ret
dec
sbb
and
fnstcw
mov
mov
pushf
xchg
xchg
repz
and
adc
jmp
xor
sub
leave
in
push
cmp
push
lahf
fucomp
jle
pop
addl
subl
inc
add
sti
mov
push
scas
jns
xchg
inc
or
jl
xor
mov
in
sub
mov
and
and
dec
notb
stc
into
mov
in
cld
push
mov
popf
mov
loopne
or
jp
dec
mov
andb
adc
xor
aam
push
bound
loope
pop
jle
xchg
rcrl
push
jmp
jb
stos
xor
or
jl
pop
xor
movsb
out
push
jl
dec
ljmp
adc
lds
clc
cwtl
sbb
cmp
inc
adc
or
push
adc
sarb
jno
cmp
xor
inc
pop
imul
aas
fisttpll
lcall
or
dec
cltd
mov
aam
sub
mov
or
add
popf
fldenv
sub
xor
mov
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
push
fcomps
sbb
adc
sbb
outsl
shlb
push
lcall
jne
adc
and
adc
fsts
shl
inc
rclb
test
cmp
push
xor
popf
mov
movsl
pushf
cli
adc
inc
hlt
jne
sbb
push
mov
mov
adc
cmp
cmp
out
loopne
dec
or
and
mov
pop
mov
dec
adc
mov
cmp
rorb
xchg
pop
mov
outsb
push
repz
rol
jg
faddl
aas
in
sahf
loope
sbb
pop
imul
pop
idiv
shlb
jne
dec
cmpsb
sub
xchg
gs
add
adc
xor
jnp
lret
xlat
sub
lods
inc
std
daa
or
xchg
aam
lock
into
pop
insb
jae
jge
test
xor
fcoml
in
jno
add
push
cltd
adcl
and
sub
fidivl
push
dec
sbb
cmp
movups
add
repnz
negl
mov
sub
add
loope
mov
jl
jl
leave
mov
mov
rcrb
mov
outsb
clc
das
dec
int
ds
jbe
rcr
mov
xchg
pop
adc
js
xchg
cmpl
clc
xchg
xchg
fiaddl
pop
fnstsw
and
gs
test
repnz
jo
or
mov
out
imul
je
fcomp
int
push
adc
add
outsl
data16
push
push
mov
mov
fcoml
arpl
push
popa
movsl
cmc
leave
and
bound
mov
dec
daa
dec
jno
mov
cmp
and
stos
rorb
inc
fwait
and
jb
lock
notb
frstor
push
push
fidivrl
out
add
scas
fisttps
rcr
mov
mov
cmpsl
lds
push
cltd
in
pop
es
xchg
mov
scas
testl
out
in
mov
aas
sbb
repnz
pop
jecxz
mov
pop
aaa
stos
je
les
mov
movsb
xor
and
jo
stos
popa
xchg
pop
mov
adc
push
fbld
loope
ss
sbb
pop
push
icebp
adc
cltd
or
scas
inc
dec
mov
add
bound
mov
leave
add
add
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
jg
jl
rcrb
sbb
adc
sbb
ret
in
mov
xor
xchg
fisubl
push
in
sub
mov
rorl
mov
nop
sub
add
shl
ss
dec
cmp
xchg
mov
dec
das
test
mov
dec
mov
adc
push
xchg
push
and
mov
inc
pop
inc
loope
divb
cwtl
mov
xor
push
sbb
ret
cmp
test
outsl
lock
or
mov
cmp
scas
scas
imul
mull
hlt
andl
int
enter
dec
and
incb
cmp
stos
push
aam
inc
and
js
clc
lods
sbb
cs
mov
dec
xor
add
cmp
aad
je
adc
aas
pushf
xor
sbb
adc
into
cld
xor
dec
jns
mov
fsubs
out
adc
jle
rolb
mov
mov
or
outsb
ds
shlb
cmp
sbb
lods
ljmp
xchg
repnz
dec
insb
ss
outsl
xchg
dec
imul
shlb
jne
xchg
lock
aaa
add
pusha
mov
mov
inc
movsb
setnp
rcrb
stos
and
icebp
push
push
leave
or
lds
sub
insl
test
loop
pop
jecxz
lock
adc
scas
mov
pusha
push
das
jmp
adc
fwait
push
lret
imul
jno
push
mov
push
add
jp
cmpsl
xor
push
add
adc
push
mov
cli
lcall
sbb
test
scas
xor
xchg
stos
cmp
sbb
pop
cmpsb
imul
jge
cs
js
addl
add
dec
shlb
dec
sub
push
lcall
sbb
add
or
scas
pop
jno
sbb
dec
pop
clc
inc
dec
popf
mov
cmpsb
xlat
or
mov
jl
ds
cwtl
daa
rcl
inc
pop
jge
cli
ret
mov
push
jecxz
inc
cmp
es
repnz
cmp
push
jnp
outsl
in
negl
enter
inc
and
push
leave
cmp
sbb
jae
lods
inc
xchg
sub
or
add
cmp
cmp
in
xchg
loopne
ficoml
nop
pop
repz
cld
pop
movsl
insb
iret
sti
stos
dec
mov
sbb
adc
shlb
xor
cmpsl
dec
fdivrl
cmp
fs
cmc
or
mov
pushl
ret
rorb
and
mov
ja
fadd
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
xchg
push
push
int3
sbb
rclb
sbb
test
fsubrl
ret
out
lock
push
mov
pop
xlat
enter
mov
adc
xor
movsl
insb
pop
dec
jbe
mov
daa
jb
inc
mov
data16
jl
pop
push
ret
inc
or
push
adc
inc
pop
push
and
dec
ljmp
sbb
or
pop
push
xor
lods
jg
jecxz
cmp
inc
in
cltd
and
mov
sbb
mov
xlat
jnp
and
add
xchg
inc
ficoms
push
add
sbb
push
in
add
daa
mov
out
adcb
sbb
xor
adc
mov
jmp
cmpsl
movsb
or
fisubrs
jne
pop
and
ljmp
into
ds
xor
enter
addr16
sbb
xor
cmp
add
jle
jmp
push
add
fldt
xchg
pop
mov
call
pop
mov
pop
cmpsl
aad
insl
enter
rorb
imul
push
sub
lret
sbb
lcall
cltd
cltd
popf
mov
rcrb
mov
inc
aaa
repz
mov
jns
repz
pop
outsl
mov
or
mov
outsb
jg
int
cs
mov
in
in
add
xor
xor
push
shrl
lock
dec
test
arpl
push
mov
decl
mov
ja
scas
sti
add
stc
xchg
stc
adc
and
lods
push
lcall
mov
lock
push
xchg
shll
sbb
inc
jns
inc
daa
lock
loope
ffreep
cmp
inc
cld
adc
rorl
push
lahf
test
inc
push
sti
inc
dec
jo
cld
das
and
andl
sub
mov
mov
mov
push
cs
stc
cmp
movsl
or
std
xchg
xchg
jl
dec
cmc
popa
pop
jmp
jp
add
sub
add
xor
test
adc
and
and
xchg
mov
add
repz
fmuls
xchg
out
pop
cmp
in
mov
mov
icebp
inc
dec
int3
jge
jmp
jne
dec
mov
add
xchg
cmc
add
xchg
loop
cmpsb
or
popa
repnz
cmpl
push
add
mov
leave
or
add
sbb
addr16
add
xor
int
and
enter
xor
add
jmp
sub
mov
inc
pop
and
leave
out
jle
fisttps
into
enter
adc
sbb
pmaxsw
cmpsl
aam
fldl
popa
add
and
jle,pn
or
out
dec
or
test
out
jo
cs
and
cmpl
imul
hlt
xchg
jnp
imul
loop
fiadds
rorb
inc
mov
sarl
pop
or
les
mov
iret
test
fdivrs
cmp
sarb
int
popl
rcrb
clc
or
cmpsb
mov
lods
add
sarl
pop
movsb
mov
mov
out
mov
sbb
nop
in
push
jl
les
lret
push
add
out
cmpsb
xor
roll
cmp
or
inc
ljmp
inc
repz
push
test
cld
cmpsl
sub
inc
cmp
or
or
imul
adc
cmpsb
cmp
xchg
lock
mov
mov
mov
pop
sub
push
cli
mov
int3
testl
out
add
jb
roll
incl
cli
lret
cld
aad
jae
jp
mov
out
scas
lods
int
pop
leave
or
lea
in
lock
sub
aad
push
sti
mov
mov
loopne
sub
sti
mov
in
fidivs
movsl
adcl
mov
dec
pop
and
sub
xchg
cmp
lds
cmc
sub
out
js
adcb
fdiv
jne
in
push
mov
push
push
lock
mov
les
or
or
pop
sbb
lahf
mov
ret
or
or
mov
fxam
push
dec
add
adc
lock
icebp
mov
bound
movl
stos
xchg
nop
sub
and
push
out
pop
fstpl
mov
fidivrs
ficomps
pushf
mov
out
test
and
sub
xor
jnp
jne
inc
sub
push
orl
dec
jecxz
outsl
mov
sub
icebp
ret
rclb
cld
repnz
and
clc
hlt
popf
mov
addr16
add
clc
insl
int3
cwtl
add
orb
ret
sub
sub
ss
aas
sbb
rorb
xlat
xchg
lahf
add
inc
pop
fistpll
push
ss
daa
push
pusha
iret
xchg
stos
outsb
jg
mov
fisubrl
jo
lea
mov
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
push
test
subl
or
push
mov
cmp
aaa
sahf
jbe
xchg
sub
sbb
jno
imul
mov
inc
mov
push
xchg
inc
and
sub
mov
in
movb
clc
cmc
popf
stos
into
shl
out
daa
dec
insl
and
out
fiadds
enter
xchg
aad
out
xor
lcall
int
xchg
mov
mov
outsl
int3
mov
sub
gs
dec
and
in
mov
lds
cmc
hlt
sbb
jl
sti
sarl
xchg
mov
mov
pop
pop
mov
push
insb
mov
xor
scas
mov
inc
mov
jns
shlb
xor
mov
sbb
fisubs
jno
sub
lds
loope
sbb
xor
inc
daa
call
cmc
cmp
push
in
xchg
scas
pop
std
add
or
mov
cmp
test
push
mov
sub
and
push
xlat
adc
in
xor
sbb
lcall
mov
test
lods
dec
divl
mov
neg
pop
mov
adc
mov
jbe
call
and
xchg
lcall
or
push
je
scas
mov
push
adc
cmpl
push
push
lods
add
cmp
dec
leave
jo
dec
inc
and
mov
mov
mov
ja
stos
xchg
add
mov
push
push
mov
aad
inc
and
jae
ret
add
jge,pn
and
je
xchg
leave
fldenv
daa
cmp
pop
mov
das
sbb
mov
xchg
bswap
jl
mov
and
repnz
outsb
cld
cmp
bound
test
in
out
test
sub
adc
fs
ret
pop
jp
jae
movsb
aad
fs
loop
aas
mov
or
mov
mov
jae
cli
clc
addb
sbb
popf
dec
xchg
pushf
adc
mov
pop
pop
dec
cli
jne
out
stos
jge
jnp
mov
aas
pop
insl
rol
scas
xchg
adc
cmp
popa
int3
xchg
mov
mov
cli
cmp
imul
mov
push
xchg
cmpsb
inc
mov
pop
mov
pop
inc
jmp
bound
fcompl
xchg
cmp
test
or
dec
and
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
inc
mov
sbb
rclb
sbb
pop
sbb
aam
aam
filds
and
frstor
call
aam
ret
xor
enter
fwait
jbe
lahf
and
lock
xchg
imul
xchg
xchg
inc
push
aas
in
cmpsl
jnp
inc
sbb
mov
jg
dec
cmpsb
push
lcall
aad
inc
repz
ret
filds
mov
jno
cltd
xor
movsl
inc
xchg
xor
mov
xchg
cwtl
cmc
out
pop
or
pop
shl
movsb
adc
jl
out
lcall
lret
add
and
sub
dec
push
ss
xchg
cmc
lret
movb
rol
popf
cwtl
xchg
fists
in
and
sarb
adc
sahf
stos
dec
sbb
inc
dec
cs
mov
loope
fbstp
rcrl
xchg
test
sbb
pop
dec
addr16
cmpsb
push
int3
add
outsl
and
mov
xchg
mov
cmp
mov
mov
in
push
lock
add
cmp
mov
sahf
mov
fwait
jne
arpl
in
inc
pop
xchg
pop
cs
sbb
sub
pop
flds
push
jae
cmp
test
in
jl
int
pop
pop
ja
sbb
movl
and
psllq
and
xchg
mov
repz
sbb
in
int
fistpl
fisubrs
or
mov
das
and
jg
faddp
bound
add
mov
out
dec
data16
outsl
nop
es
mov
push
scas
mov
and
pop
fiadds
pusha
or
loope
call
dec
fisttpl
addr16
ja
addr16
neg
add
in
in
mov
xchg
pop
popa
jg
mov
inc
sbb
jl
xchg
aam
push
adc
mov
mov
jle
fwait
mov
cmpb
sub
push
in
sbb
ficomps
pop
enter
push
out
ss
fcoml
add
push
mov
xchg
testl
stos
je
mov
in
jb
loop
mov
ret
lods
test
mov
or
or
mov
sti
xor
loop
ljmp
stos
add
push
mov
lds
xchg
push
mov
out
mov
icebp
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
popf
lock
rclb
sbb
dec
insl
clc
call
out
adc
cld
test
mov
out
mov
enter
es
adc
mov
mov
mov
mov
and
push
xlat
inc
xor
xchg
pop
cmp
push
jp
sub
daa
xchg
xchg
pop
xchg
inc
jle
fdivl
shll
xor
cmp
xor
pop
shll
xchg
push
lret
push
movsl
sub
in
pop
adc
fwait
mov
call
test
pop
inc
pop
cmpsb
push
aaa
pop
adc
lods
test
int3
jne
lods
ss
out
sbb
xor
cmpsb
les
daa
repz
mov
out
mov
mov
test
add
je
mov
sbb
das
jno
sahf
jo
and
insb
mov
inc
repnz
sahf
sbb
cmp
xchg
dec
les
jg
ret
mov
mov
ret
and
pop
cmp
mov
adc
dec
mov
mov
hlt
sbb
push
shll
lock
bound
jp
cmpsl
mov
les
andb
push
arpl
enter
lods
mov
aaa
mov
test
pop
test
cmpsl
and
or
insl
xchg
into
cmp
pusha
fcomip
dec
or
push
dec
or
ds
into
lret
ror
scas
mov
mov
cli
into
mov
pop
sub
and
cmpsl
jmp
xor
push
pop
fstl
jg
inc
xor
stos
or
icebp
bound
out
sbb
adc
out
fdivrl
pusha
jl
cmp
aas
loop
mov
test
out
dec
daa
or
cmp
enter
bound
jp
cld
sarl
daa
fadds
popw
lahf
and
xor
aas
xchg
scas
xlat
mov
dec
sub
les
test
xchg
jl
out
clc
std
add
lahf
in
jne
in
mov
cmp
adc
lock
jns
mov
rorb
pop
repnz
inc
lock
call
sub
dec
dec
lret
fadd
mov
push
test
cli
addl
cmp
lock
call
add
push
sahf
cmpsb
test
mov
pop
sub
into
into
in
fs
fstpl
and
dec
aaa
in
inc
cli
in
and
cmpsl
sti
mov
add
mov
inc
mov
pop
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
ljmp
rclb
sbb
inc
jge
and
decl
adc
mov
cmpsl
and
and
jno
pop
arpl
fidivrs
sub
hlt
mov
jl
js
lret
out
addr16
in
lret
lcall
rolb
xchg
shrb
jmp
cmp
push
adc
cmpb
sbbl
repz
or
pop
sub
out
divb
bound
shl
faddl
push
or
jecxz
sbb
ret
outsb
andl
movsb
pop
or
mov
or
sbb
add
out
push
ja
jns
sub
sub
add
rcr
xchg
push
aam
sub
xchg
jo
dec
loopne
xchg
mov
ja
aas
xor
inc
cwtl
lahf
mov
or
mov
in
lret
push
push
xchg
js
add
pop
movsl
rcrb
or
mov
das
iret
test
or
pop
mov
sbb
and
ffree
cmp
fisttps
sahf
mov
xchg
stos
push
sub
inc
xor
sub
mov
repnz
repnz
pusha
jecxz
inc
shlb
sub
inc
sar
add
mov
pop
push
out
popf
lahf
orl
daa
and
or
lret
pop
push
xor
xchg
mov
mov
and
jge
mov
scas
mov
mov
imul
stos
fwait
negb
sbb
and
xchg
out
imul
xchg
fwait
inc
sub
in
std
push
cmc
fbstp
shl
lret
fs
insb
jmp
pop
out
xor
pop
cmpsl
mov
sti
add
pop
popa
fstl
dec
pop
lea
inc
cmpsl
mov
sbb
mov
ds
test
pop
jo
movsl
pop
jae
push
jne
mov
movsb
cltd
pop
cmp
and
mov
ficomps
adc
add
mov
imulb
pop
adc
adc
jecxz
push
dec
icebp
mov
repz
add
pop
push
cmp
mov
sbb
aad
mov
out
out
addb
popa
adcl
enter
adc
jle
lahf
std
scas
or
jmp
ja
sbbb
movsb
push
and
xchg
pop
and
lcall
dec
notl
mov
jne
pop
jmp
inc
mov
inc
lcall
inc
push
scas
sbb
rclb
sbb
mov
imul
repnz
push
fbld
mov
xor
test
movsl
stos
push
dec
shr
xor
pop
pop
jb
xor
test
dec
movsb
out
add
in
sub
jno
fidivs
jp
insl
imul
lret
mov
fistps
cmpsb
mul
push
aas
pop
fsub
mov
and
adc
sub
sbb
fistl
cltd
insl
into
imul
jmp
cs
or
dec
jnp
call
jns
gs
and
push
fcomps
mov
adc
jle
sub
jge
clc
pop
into
pop
cltd
inc
mov
andl
sbb
into
and
pop
mov
enter
dec
sbb
pop
insb
gs
pop
ffree
movsl
mov
adc
pop
cli
inc
adc
aam
jbe
or
mov
cmp
xchg
enter
sub
dec
ficoml
mov
pop
xor
cmc
lea
std
shlb
and
fstps
xchg
mov
rclb
mov
mov
mov
mov
leave
cmp
fadds
cmpsl
fists
bound
mov
add
cmp
pop
in
out
adcl
mov
daa
xor
ret
sub
push
jge
jge
popa
cmpsl
mul
inc
pcmpgtb
or
cmpl
push
js
jle
sti
sub
inc
mov
mov
xor
sbb
mov
cmp
pop
fcomps
xor
movsl
xchg
jns
sti
cmp
stos
shll
fstps
loop
dec
int
and
movsb
inc
inc
and
ret
std
xorb
jne
jmp
dec
cmpb
mov
scas
mov
cmp
pop
mov
shll
jne
push
jnp
mov
push
sub
shrl
adc
rclb
popa
ds
mov
or
lods
ljmp
adc
cmpsb
add
fnstsw
sbb
shlb
pushf
inc
test
pusha
rolb
and
inc
mov
dec
sahf
aad
nop
sbb
js
filds
lcall
rolb
pop
jl
clc
xchg
test
mov
push
lret
adc
clc
mov
xchg
mov
sbb
push
dec
mov
and
std
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
idivb
sub
sbb
sub
cmp
add
fwait
xor
insb
pop
sbb
dec
jo
jb
lock
mov
pop
loop
rcrl
mov
dec
cmp
jbe
mov
dec
stos
das
negl
dec
cmp
push
sahf
or
repnz
cwtl
adc
les
loope
sub
data16
sbb
hlt
and
fidivs
bound
add
jp
mov
push
cs
aad
out
hlt
lahf
outsb
mov
pop
dec
ret
std
push
jge
xchg
xchg
xor
pop
outsl
insl
add
cltd
cmp
dec
pop
xor
fwait
insb
shlb
movsb
fxch
mov
xchg
test
mov
adc
dec
stos
subl
outsl
stos
nop
dec
dec
dec
jne
sbb
and
mov
test
push
add
mov
or
ret
out
xchg
inc
ficoml
fcomps
jmp
into
cltd
adc
clc
mov
rclb
push
ja
dec
xor
adc
pushf
je
stc
sbb
leave
mov
cmc
js
pop
xor
or
add
cmp
loope
xchg
add
or
fs
lods
push
push
push
xchg
scas
loop
mov
sub
gs
dec
aas
inc
scas
push
mov
rcrl
in
nop
rcl
xor
insl
pop
pop
or
leave
ss
loopne
or
sub
insb
jb
cmp
enter
adc
lods
enter
pop
cs
mov
loopne
jb
dec
dec
inc
sti
dec
test
repz
mov
fdivl
test
stc
push
std
dec
lods
mov
sbb
fldlg2
insl
test
dec
add
pop
insb
and
fmull
divl
pop
pop
pop
out
movsb
shlb
mov
mov
scas
pop
mov
pop
fldt
push
inc
stc
loopne
push
aad
cwtl
scas
mov
mov
pop
pop
insl
je
sbb
push
add
cmp
pop
hlt
sub
test
je
mov
adc
cli
lret
adc
movsl
sub
push
mov
in
cmp
mov
push
add
cmp
fdivrl
pusha
push
mov
push
in
adc
in
dec
loop
movzwl
add
cltd
ljmp
test
scas
cmp
fldlg2
xchg
xchg
mov
push
inc
repz
pop
pop
inc
scas
xlat
mov
popa
ss
push
test
xor
sub
js
xchg
fisubrl
inc
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
mov
inc
call
pop
gs
shll
pop
in
rol
mov
aaa
push
mov
mov
pop
insb
add
frstpm(287
repnz
pop
dec
adc
cmp
mov
or
sbb
cld
adcl
notl
mov
mov
ret
arpl
push
loop
adcb
and
and
add
inc
lahf
xlat
push
rorl
enter
inc
addr16
mov
lock
and
punpcklwd
pop
daa
push
sbb
xor
or
lds
mov
mov
mov
lret
insl
pop
out
cld
xor
sahf
lods
orb
rcrl
mov
lds
aaa
jo
add
push
mov
std
inc
jmp
mov
adc
xchg
sbb
fsubp
scas
sbb
daa
repnz
add
mov
mov
bound
rclb
retw
cwtl
invd
dec
aad
jecxz
jns
cmp
fs
dec
mov
add
loopne
mov
adc
pop
loop
dec
inc
push
mov
lret
jne
mov
cmp
adc
mov
aam
push
int
cmp
sbb
lds
pop
testl
sub
daa
push
dec
sub
pushf
pop
or
pop
mov
mov
in
xor
and
stos
mov
cli
das
cmp
les
lahf
mov
xchg
sbb
sbb
mov
sub
cwtl
mov
xor
sub
in
les
or
cmp
dec
push
jno
push
std
ret
sarl
push
mov
ret
enter
data16
stos
fs
sahf
adc
pop
lds
or
fbstp
inc
js
repz
sar
ljmp
cmp
out
fisubl
xchg
mov
adc
sbb
idiv
mov
stc
cmp
js
mov
mov
les
mov
fisubs
fnstsw
and
jg
or
push
adcb
sub
xchg
mov
mov
adc
in
pop
lret
mov
aam
mul
mov
loope
and
mov
xor
mov
lods
dec
inc
jecxz
cmp
jae
dec
call
es
sbb
mov
sbb
loop
lahf
pop
pcmpeqw
mov
xchg
scas
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
push
sahf
sbb
mov
mov
es
enter
shlb
xchg
dec
bound
jmp
aaa
pusha
test
inc
aaa
test
loopne
jnp
or
clc
push
loope
loope
shll
mov
ret
es
sti
aad
or
nop
in
stc
add
cmp
xlat
aas
xlat
cmp
leave
les
sbb
stc
stos
xor
xor
mov
and
inc
es
gs
enter
cmp
push
fnstcw
mov
mov
mov
fs
adc
cld
mov
xor
orl
out
xchg
inc
fcomps
mov
dec
pop
mov
cmp
adc
aaa
cmp
rcrl
aam
dec
and
outsb
js
jbe
cmp
lcall
mov
loop
mov
fistpl
or
ja
mov
cwtl
imul
test
cmc
mov
mov
out
pop
les
inc
rol
jg
ret
lds
mov
addl
inc
insb
scas
pop
cltd
inc
pop
push
popa
or
lods
and
into
pushf
imul
push
out
cmp
rolb
dec
dec
sbb
ss
mov
mov
jae
and
das
pop
loope
vmovapd
lea
ret
fstpl
cld
pop
xchg
add
lret
dec
daa
jg
subl
pop
fnsave
push
xor
es
mov
push
push
push
jmp
ret
enter
add
push
mov
hlt
in
jnp
mov
daa
mov
xchg
or
cmp
dec
cld
add
xchg
cmp
dec
pop
push
in
xchg
mov
pop
aam
shl
shrl
push
and
sbb
and
or
flds
jle
pop
xor
pop
mov
mov
out
in
pop
xchg
jge
jnp
sub
mov
stos
aas
leave
stc
cmp
mov
add
xchg
add
sbb
and
test
lret
add
xlat
popf
adc
test
jne
and
pop
lahf
dec
int
fs
cmp
fldenv
dec
fwait
pop
inc
out
pop
adc
xor
sub
mov
mov
test
xchg
mov
cltd
decl
stc
hlt
push
sbb
mov
cmpsl
arpl
inc
sbb
jp
jp
dec
nop
inc
push
loop
or
sub
mov
xor
movsl
iret
shrl
test
mov
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
pop
jmp
sbb
dec
dec
sub
and
add
or
stos
cli
or
mov
das
mov
cmp
jo
fstpt
dec
xor
dec
mov
sbb
pop
out
bound
je
and
xor
loope
push
mov
bswap
sbb
lds
jbe
lcall
fwait
sub
stos
aas
xor
scas
ljmp
es
sbb
ret
sbb
imul
jbe
and
test
enter
das
add
xchg
mov
movsb
mov
mov
cltd
scas
call
sub
pusha
fsts
sbb
and
inc
add
outsb
xor
mov
scas
aam
repz
sbb
fisubrl
jl
and
mov
sub
or
rcrb
sbb
clc
jbe
test
negl
inc
cmp
xor
jne
scas
in
lret
mov
adc
ficompl
les
mov
or
push
addb
lds
mov
test
mov
dec
je
movsb
and
xorl
jecxz
cmp
sahf
out
xor
xor
push
jecxz
jle
xor
nop
add
mov
jle
sahf
bt
es
push
jge
cmpsb
jmp
jmp
cli
pop
popf
mov
ds
sbbb
lock
cmp
cld
adc
jle
ret
fs
cmp
fnstenv
sarl
cld
xchg
mov
fisttps
jno
mov
js
sbb
stos
push
or
jne
out
daa
stc
pop
in
pop
cmp
mov
mov
push
sti
cs
jmp
fsts
mov
pop
xor
xor
out
lock
out
into
ss
pop
inc
data16
repz
xchg
in
sbb
push
fistl
popl
lods
adc
adc
ret
pop
in
xlat
ljmp
mov
bound
mov
pop
xorb
xchg
xchg
ja
xchg
rcl
or
bnd
fnstcw
push
push
push
rcrl
test
xchg
aaa
inc
jbe
cld
fimull
sub
dec
int3
rolb
cmp
mov
sbb
pop
sub
xchg
andl
int3
push
test
and
jb
leave
sbb
push
mov
in
shr
mov
lods
in
lods
jne,pn
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
sbb
gs
mov
jb
filds
rolb
add
xchg
or
fs
loop
inc
ficoms
ljmp
cmp
je
scas
jb
push
or
inc
cmp
xchg
cmc
fcoml
dec
add
mov
inc
dec
mov
test
mov
pop
mov
loope
mov
dec
je
jg
in
push
aas
jne
and
sub
jns
pop
jg
push
cwtl
loopne
xor
add
sub
popa
ret
cmp
hlt
pop
cs
cmp
out
cmp
jb
add
ds
dec
dec
pop
mov
lret
in
pop
imul
pop
pop
repnz
xchg
rcl
sahf
fistpll
add
push
jno
push
mov
les
movsb
push
loopne
xchg
cli
or
xchg
arpl
daa
xor
and
mov
add
xchg
pop
and
mov
ficoms
push
push
sub
rclb
cwtl
cmp
dec
scas
ljmp
xchg
enter
add
push
shl
jl
pop
and
out
fmul
imul
je
or
pushf
or
sbb
cmp
sbb
fsts
sbb
out
sbb
aad
or
stc
xor
lds
mov
nop
ljmp
jl
ds
loope
fbld
pop
add
adcl
jb
js
in
inc
pushf
bound
push
push
xchg
cmp
retw
nop
push
cmp
fld
mov
inc
sub
sub
pop
mov
outsl
xchg
sahf
rorb
adc
popa
pop
repnz
inc
xor
add
dec
pop
or
sub
cmp
push
stos
fsts
xchg
enter
push
push
mov
out
lahf
pushf
push
fcom
int3
aam
xchg
in
adc
andl
mov
lock
xchg
jbe
lret
jle
repz
push
mov
out
imul
ficompl
jne
jl
adc
jp
pop
mov
ljmp
xor
cmpsb
lcall
rcrb
orl
fucom
sbb
repz
and
stos
je
mov
fidivl
ret
stos
mov
xor
cltd
lods
cmp
movsl
test
iret
dec
adc
inc
rcr
movsl
js
das
push
and
sub
add
and
push
ret
mull
outsb
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
pop
cmc
mov
sbb
outsb
test
in
push
mov
sbb
cmp
sbb
insl
adc
pop
xchg
adc
sahf
mov
mulb
test
sub
cmp
test
movsb
xor
xchg
inc
jl
xchg
leave
mov
inc
test
push
add
fcomps
jl
sub
imul
dec
aaa
fadd
ret
fnsave
pop
lock
lods
shll
imul
jbe
stos
mov
das
mov
adc
pop
and
jp
adc
inc
data16
idivb
and
mov
outsb
or
cld
xor
loope
mov
sti
mov
mov
gs
pop
lret
inc
xchg
inc
or
je
pop
mov
movsb
pop
into
jge
es
or
shlb
xor
xchg
pop
and
add
inc
mov
fnstcw
jnp
or
mov
bound
xchg
mov
and
sbb
in
add
cmc
or
fwait
xchg
add
xchg
mov
nop
sub
push
fldt
push
or
mov
push
fwait
jmp
adc
mov
popa
popf
xchg
test
pop
inc
int3
jnp
xchg
and
dec
into
inc
loopne
sub
std
faddl
push
popf
xlat
insl
mov
mov
xor
sub
ja
mov
sarl
jl
dec
jmp
test
movsb
std
std
insl
mov
pop
aad
fwait
or
clc
push
fisttpl
xchg
mov
or
movsb
xchg
push
ss
popf
stos
rep
repz
out
adc
call
bound
pusha
test
insl
jno
dec
fdivrl
push
loope
jno
xchg
jae
jecxz
cwtl
std
jge
mov
dec
mov
out
xchg
call
inc
loopne
sarl
jne
repz
popa
sbb
jecxz
mov
xchg
pop
sub
or
xchg
adcb
cmp
cmp
out
push
test
cmpsb
or
bound
adc
fiadds
pop
pop
mov
mov
fldl
dec
stos
pop
push
je
cmp
out
sbb
adc
cwtl
js
popf
dec
mov
mov
loop
inc
and
int
xor
pushf
inc
cmpsl
clc
mov
shl
push
fldcw
cmp
nop
or
lods
das
sbb
dec
mov
mov
imul
mov
push
inc
add
sub
mov
jle
dec
test
shr
sarl
lea
pop
or
or
inc
loopne
sbb
mov
sub
shr
arpl
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
dec
rep
imul
mov
xor
out
popa
push
scas
fldl
and
mov
lods
xor
pop
or
in
or
shll
and
add
xor
jno
mov
jp
imul
jg
inc
inc
inc
pop
ljmp
cmpsb
cwtl
push
jle
and
pop
out
nop
mov
lcall
xchg
sub
mov
xchg
mov
call
aas
jns
rcll
push
add
cli
mov
xor
xchg
mov
aaa
and
inc
xlat
ror
into
mov
shlb
cmp
cld
mov
and
push
pop
dec
push
ja
stos
pop
add
das
je
mov
fbstp
add
or
clc
sbb
xchg
stos
sti
fwait
add
stc
scas
push
leave
pop
push
out
and
cld
cmc
loop
or
int
mov
out
push
mov
dec
dec
pusha
loope,pn
jmp
incb
int
adc
rclb
mov
loope
cmp
xor
std
pop
pop
lahf
lock
xchg
bswap
shr
mov
mov
shrl
inc
int
les
lods
mov
jne
jg
sub
ljmp
testb
or
out
cmp
rcrb
inc
cmpsl
loopne
repnz
ficompl
sbb
in
dec
mov
jno
jns
rcr
and
insb
loope
mov
mov
xlat
xchg
pop
out
cs
mov
cmc
add
test
imul
aad
aad
js
xor
loopne
mov
xchg
repz
cmpsl
add
jecxz
aam
adc
shlb
pushf
mov
inc
loopne
or
js
and
xchg
lret
xor
jne
cmpl
loope
and
push
push
mov
lcall
cmp
adc
jb
xor
push
repz
cmc
mov
sahf
aas
pop
jne
add
push
push
sub
jns
popa
in
sbb
adc
lock
pop
int3
icebp
dec
fisttpll
lds
stos
repz
xchg
cs
mov
xor
outsb
icebp
js
ret
dec
cld
ret
add
call
pop
lods
div
pop
shlb
jge
dec
ljmp
into
scas
adc
into
andl
add
sti
or
cld
mov
in
rcl
subl
stos
xchg
std
addr16
or
or
mov
pop
jns
cmp
xor
dec
dec
scas
jl
test
cmc
push
mov
dec
mov
movl
mov
mov
sub
jmp
test
mov
push
fildll
insl
sbbb
lcall
das
jge
jge
sbb
cld
xchg
jg
cld
test
sbb
jno
imul
adc
push
loope
and
jle
cld
mov
aad
insl
roll
sbb
dec
shrb
ss
mov
or
sbb
in
cmp
out
cmc
test
add
inc
lahf
and
mov
pusha
sbb
in
movsl
popa
mov
movsl
loope
nop
jae
ds
push
adc
in
cld
jge
and
mov
frstor
addr16
mov
ret
mov
cmpsl
inc
andl
dec
addl
mov
and
or
adc
jl
cmpsb
in
int
push
dec
push
dec
lcall
dec
sbb
or
sbb
pop
sbb
jbe
pop
push
sbb
and
mov
pop
in
in
xor
or
aas
dec
mov
xor
fiaddl
aas
push
mov
mov
add
xor
imul
cmc
xchg
mov
add
push
leave
push
lea
fimull
sbb
adc
stc
jo
push
fisttps
test
arpl
ret
inc
test
adc
call
cmpl
aad
stos
and
mov
cli
fiadds
jno
loopne
adc
push
movsb
push
fcoml
xchg
int
dec
jmp
and
add
sbb
pop
add
lcall
xlat
insb
in
mov
xchg
push
or
lock
jne
adc
xchg
jbe
jne
pop
outsl
stos
movsb
push
es
jne
cli
dec
fldenv
mov
mov
mov
ret
xchg
sbb
pop
daa
in
push
mov
lods
out
add
cs
xor
dec
adc
push
sub
inc
mov
nop
mov
jg
cs
dec
push
sub
cld
adc
adc
adcl
mov
daa
sbb
mov
jne
bound
fstpt
jne
sahf
outsb
jmp
mov
ds
xor
scas
imul
sbb
cmp
push
push
lahf
mov
cmp
stos
push
ret
push
repz
insl
movsb
lahf
push
pop
dec
and
cmpl
icebp
cmpb
push
stc
jg
jl
hlt
mov
cltd
mov
int3
and
nopl
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
lea
sbb
sbb
cmp
push
loope
mov
dec
jno
mov
mov
cld
mov
nop
dec
cmp
xchg
pop
clc
insb
xchg
jb
outsl
xchg
ret
sahf
in
in
jmp
pop
fwait
sbbb
xor
insl
hlt
sub
pop
pop
lcall
jg
dec
cmp
outsb
cld
or
imul
mov
fwait
cwtl
and
outsb
icebp
add
jmp
jg
jae
sbb
leave
mov
and
pop
cmp
out
xchg
sbb
fcom
mov
adc
nop
mov
shl
movsl
pop
cmpsl
cwtl
imull
mov
mov
or
or
mov
mov
in
mov
and
cmp
adc
push
stc
adc
sbb
mov
pop
daa
movsb
push
mov
aas
sbb
out
xlat
mov
mov
leave
sbb
or
hlt
mov
jle
bound
fistpll
test
clc
insl
ljmp
xchg
adc
fisttpll
addl
pop
icebp
add
cli
mov
jmp
adc
in
push
pop
fistps
inc
aas
adc
xor
ss
pop
xor
in
dec
gs
int3
test
sub
cwtl
xor
lds
std
jmp
outsb
inc
or
mov
int3
in
scas
push
xchg
pop
lods
or
and
mov
ret
pushf
cltd
cmp
sub
loope
push
mov
scas
loope
leave
mov
cmpsb
lret
mov
or
push
ljmp
mov
in
mov
add
mov
lcall
fdivs
push
sub
test
xchg
out
insl
dec
xchg
orl
and
cmp
pop
loope
add
or
scas
inc
outsl
dec
jnp
sbb
inc
aad
xor
or
inc
not
movsb
and
sbb
dec
sub
into
int3
add
out
push
mov
insb
pusha
test
cmp
push
lea
and
lahf
pop
divl
dec
mov
cmp
pushf
mov
xchg
adc
sti
bound
inc
jne
rorl
lds
lret
inc
cmp
pop
cmp
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
imul
js
sbb
sbb
enter
cmp
dec
add
dec
stos
dec
jno
jp
inc
sbb
pop
pop
fists
pushf
jge
fwait
jmp
daa
pop
xor
jae
jge
push
out
cmp
loopne
mov
outsl
fldcw
andl
rcl
hlt
sub
sti
or
lock
push
lret
adc
outsb
xchg
cld
mov
pop
jo
mov
add
js
imul
cmpsb
mov
je
jge
xchg
or
iret
push
clc
xchg
lods
into
adc
mov
popl
xchg
xor
xor
mov
sbb
and
pop
jecxz
add
cmp
dec
sub
outsb
cmpsb
add
mov
inc
pop
xor
stos
loopne
and
test
xor
iret
divb
sub
xlat
dec
in
adc
test
test
pop
dec
test
jne
imul
inc
sub
lods
mov
jae
sbb
outsl
mov
daa
adc
out
ljmp
inc
dec
adc
insb
jle
sbb
push
xlat
fisubrs
push
inc
into
clc
mov
sti
xchg
ret
lods
push
pop
pusha
cmc
sub
inc
lock
inc
hlt
cmp
mov
popf
add
stos
cmc
frstor
cli
mov
sbb
and
jmp
std
mov
cmp
stc
das
test
xor
imul
jnp
push
jecxz
lret
jnp
test
jns
dec
push
fimuls
int
mov
out
fldcw
outsl
idiv
or
fcmovnu
fstpl
fildll
rorl
jge
xchg
jbe
fwait
cmp
or
int
xchg
and
out
xor
and
mov
faddp
cli
or
mov
outsl
pop
insl
cmpsl
sbb
jle
imul
pusha
push
pop
stos
dec
or
jae
int3
fidivrs
pop
cli
or
inc
xchg
std
adc
inc
andl
enter
jne
repz
cld
fnstsw
shll
adc
shll
loope
pop
ret
lret
jae
loopne
sarl
lods
ss
ljmp
sub
sarb
sub
pop
pop
lcall
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
fnstcw
adc
sbb
jge
loope
jns
inc
iret
int3
or
out
lods
ljmp
mov
add
xor
ret
addr16
add
into
pop
fldcw
aad
aam
scas
in
mov
mov
insl
cmc
test
ret
cmpsb
mov
in
pushf
loop
iret
aad
adc
leave
ret
xchg
outsl
rcrl
sbb
fisttps
fdivr
sub
and
xor
push
jnp
frstor
push
mov
das
std
cmp
mov
imul
sahf
cmp
scas
adc
dec
cld
push
add
jbe
xchg
push
es
out
and
adc
jg
push
xor
mov
push
or
hlt
loop
out
xchg
jmp
jp
mov
push
into
xor
mov
sbb
in
das
cmp
jmp
jge
das
mov
std
les
and
cmp
mov
adc
out
fildll
gs
xchg
mov
xor
std
cld
jecxz
test
in
lahf
mov
jp
xor
adc
pop
shll
dec
or
lea
dec
inc
inc
insb
add
xchg
pop
shrb
or
stos
ret
aaa
mov
pop
mov
mov
cmp
mov
ret
test
push
mov
arpl
hlt
adc
inc
inc
pop
cmp
mov
imul
xor
out
popa
ds
or
push
dec
sub
fiadds
sub
mov
adc
sbb
push
mov
adc
out
jmp
dec
xchg
dec
and
mov
arpl
test
fcoms
jl
jnp
mov
bound
inc
push
dec
addr16
pop
fdiv
lods
jno
mov
mov
or
dec
outsb
rcr
mov
in
jno
out
andb
mov
mov
mov
int3
adc
mov
lods
aaa
xor
cmpsl
xor
or
add
sbb
dec
shrl
jge
popa
repnz
dec
int3
jle
fsubl
ret
xor
and
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
or
adc
mov
mov
mov
stc
neg
mov
clc
movb
jle
pusha
inc
jbe
iret
or
lds
sti
push
ror
roll
pusha
daa
pop
sbb
pop
das
xchg
jne
ds
in
push
cs
fs
popf
xchg
int3
xchg
lret
add
aas
fists
rorl
cmp
cmp
inc
and
iret
and
cmp
aad
addb
jnp
lods
cld
dec
push
mov
fisubrs
lods
dec
test
sahf
inc
adc
lock
pop
scas
nop
mov
gs
sti
movsl
daa
loopne
sub
ret
jb
cmpsl
and
inc
lock
ljmp
stos
jmp
adc
nop
into
mov
shll
in
and
sbb
je
test
cld
inc
dec
pushf
outsb
in
js
das
xchg
add
push
add
dec
dec
xor
ret
je
outsb
int3
or
fs
in
sub
lret
adc
xor
xlat
inc
xor
pop
mov
push
pusha
mov
rolb
pusha
xor
inc
call
popf
pop
jmp
add
movsb
push
inc
test
sub
rclb
push
imull
xor
mov
pop
rorb
mov
sub
jbe
ss
sbb
nop
and
push
mov
fmull
lret
push
bound
jne
and
mov
je
and
fsubp
in
jmp
cld
push
mov
shlb
mov
xorl
pop
jno
std
jl
fdivs
imul
lods
jbe
push
pusha
fcompl
stos
mov
pushf
je
sbb
push
clc
out
ret
and
sbb
mov
std
xchg
or
adc
add
sarb
xor
adcl
in
out
daa
cli
push
xor
sub
sub
jg
fs
mov
dec
inc
hlt
das
and
leave
fisubrl
jb
sahf
rorb
es
cli
and
fxch
mov
cmc
pop
jb
fnstcw
mov
insl
sbb
cmpsl
sbb
xchg
fsubr
xor
mov
pop
popf
pop
push
jmp
lret
push
fbstp
dec
push
lds
lds
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
add
push
sbb
sbb
push
ffree
sub
add
adc
ds
sti
and
sub
insl
jnp
das
pop
inc
das
pop
sahf
pop
xchg
test
lret
push
xor
mov
fcompl
out
lods
push
mov
pop
sub
jle
adc
fsub
je
sbb
sub
pop
jnp
pushf
pop
popa
sbb
idivl
out
xchg
arpl
sub
sub
pop
std
out
call
fcmovb
dec
mov
add
iret
std
rcrl
fidivs
push
cmp
or
cld
imul
jno
inc
dec
cmp
int
clc
pop
popa
push
in
test
push
pop
sub
xor
ss
test
adc
add
push
add
pop
popa
test
dec
rcr
or
lret
pusha
add
lcall
div
mov
call
dec
jnp,pn
andl
test
aas
cs
sub
jl
sub
mov
lods
lret
xchg
notb
jg
out
push
cld
setl
pop
add
fdivl
push
dec
pop
clc
arpl
in
xchg
add
out
lods
sub
mov
out
jp
enter
rorl
cmc
dec
rcll
and
faddl
cmp
jp
lea
adc
enter
push
xchg
pop
sbb
mov
sti
mov
push
cltd
adc
std
mov
rol
jne
adc
dec
push
imul
xlat
xchg
leave
mov
mov
adcb
mov
pop
pop
inc
xlat
cld
mov
xor
stc
push
addl
lods
and
mov
mov
repz
push
cltd
pop
mov
push
ja
xchg
add
dec
fwait
mov
xchg
sti
mov
inc
addr16
and
in
scas
out
xchg
lea
negl
push
fdivr
clc
into
adc
pop
lods
sti
insb
push
enter
jno
jmp
ret
lods
push
fwait
mov
adc
lret
fwait
jno
fcompl
das
out
aam
stc
lods
insb
xchg
testl
ret
int3
into
out
out
and
inc
pop
and
and
push
mov
test
sub
adc
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
xchg
mov
jo
data16
jno
sbb
addr16
cltd
xor
jg
fwait
sub
xor
outsb
dec
mov
xchg
dec
in
and
push
in
lods
or
cmp
out
scas
gs
and
fsubl
das
xchg
jo
lret
push
cmpsb
add
fs
loop
std
ja
jnp
mov
pop
dec
dec
cmp
movsb
ss
push
add
xor
lea
push
jnp
push
movsl
adc
jp
mov
les
inc
ret
notl
xchg
and
decl
mov
cmp
sbb
cltd
cld
jmp
clc
fsubl
mov
dec
sub
orb
adcl
push
cmp
jns
xchg
mov
lods
dec
sub
addl
mov
dec
inc
jp
das
int
mov
dec
add
movsb
or
repnz
dec
fmuls
in
push
cs
fnstcw
hlt
jmp
dec
js
push
dec
sub
jbe
arpl
dec
lock
insb
sarb
mov
add
adc
shlb
cmc
xor
sarb
mov
loopne
pop
inc
jle
shlb
movsl
lret
xchg
xchg
sub
mov
jmp
ljmp
fidivrs
jo
sti
fisubrs
popa
sbb
dec
add
dec
cmp
test
mov
push
pop
add
xchg
loop
cwtl
inc
bound
xchg
sub
cmp
dec
cmp
push
mov
out
adc
mov
lock
movsl
mov
pushf
dec
pop
clc
aaa
repnz
adc
xor
xchg
rolb
insb
inc
andl
fidivs
fisubs
aad
mov
je
push
ret
mov
push
fnstsw
shlb
inc
int3
ds
ret
adc
pushf
addl
pop
jmp
rcl
inc
addl
stos
xchg
mov
mov
or
mov
push
mov
jecxz
out
add
lods
sub
fisubs
data16
and
or
in
push
iret
xor
outsb
jecxz
lea
push
loopne
loopne
dec
pop
jg
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
sub
jl
pusha
sbb
jno
sbb
aaa
add
out
add
scas
push
cli
gs
es
iret
imul
repz
clc
scas
jo
mov
sbb
and
lcall
and
out
adc
mov
or
xchg
lods
int
sub
dec
lea
aaa
push
mov
mov
fs
out
lods
aas
jo
push
mov
jp
jge
push
push
test
dec
in
sub
filds
insl
mov
shr
lock
jns
popa
inc
popf
fwait
pop
aad
cld
ret
daa
lahf
dec
xor
lret
adcl
inc
int3
jns
sub
xlat
xor
adc
ljmp
notb
adcb
fimuls
adc
sub
mov
or
fistps
mov
xchg
adc
xor
mov
inc
jno
pop
clc
nop
xchg
jg
pop
xor
jne
fildll
inc
xor
mov
mov
test
cwtl
mov
inc
out
gs
jge
and
incb
jae
add
lds
adc
sbb
jo
mov
scas
mov
nop
jg
ret
aad
es
data16
hlt
insl
repz
sbb
adc
lock
mov
outsb
mov
repz
dec
fsubrs
push
aas
push
adc
add
rep
jae
mov
xlat
fisubl
aaa
mull
stc
pop
lds
add
fs
cli
mov
inc
mov
loope
sub
leave
popf
mov
inc
mov
in
mov
inc
fstpl
aad
movsb
cmp
inc
mov
push
xchg
mov
movsb
movl
sbb
jo
stc
outsl
jnp
mov
lods
call
stc
inc
pop
nop
ss
loopne
divb
test
or
mov
out
push
or
add
xor
in
sahf
push
rorl
dec
sbb
outsl
mov
xchg
mov
sbb
mov
ret
sbb
out
popf
jmp
repz
mov
inc
pop
sub
mov
clc
mov
cmp
sbb
xor
pop
sub
movsl
mov
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
js
mov
pop
sbb
jno
sbb
mov
outsb
xor
and
add
adc
hlt
imulb
imul
rcl
js
addr16
mov
lcall
aad
repnz
inc
push
pop
xorb
pusha
adc
out
xor
in
xor
mov
insb
mov
mov
iret
mov
or
scas
jno
cmp
fimull
pop
push
adc
add
fisubs
jmp
xchg
aam
in
mov
scas
insl
adc
gs
aad
repnz
nop
mov
jns
cmp
lret
push
adc
sub
sbb
jl
xchg
push
mov
arpl
adc
dec
lods
sbb
fadds
push
cli
mov
dec
rcll
add
rcrb
cmc
pop
pop
clc
aad
stos
add
dec
jno
lret
push
loopne
jecxz
mov
mov
xor
pop
shrl
mov
icebp
imul
clc
mov
sbb
das
leave
mov
dec
xchg
mov
jge
repnz
iret
outsl
pop
xor
xchg
aad
add
inc
mov
aad
aas
cmp
das
lods
push
push
pop
inc
mov
mov
pop
movsb
dec
outsl
mov
roll
and
mov
xor
adc
movsl
xchg
ja
jmp
repz
js
scas
xchg
and
femms
or
and
sub
mov
lret
aaa
mov
add
mov
jmp
jae
pop
loop
dec
push
jbe
test
mov
sub
dec
ss
incb
mov
rcrl
dec
dec
shlb
int3
shr
cmp
xchg
push
jecxz
add
pop
rcr
bound
jb
dec
insb
test
xchg
pop
jge
rolb
daa
xlat
mov
outsl
leave
pop
add
sti
es
cmpsl
and
popf
bound
push
hlt
pop
std
push
loope
ja
or
push
and
cld
xchg
adc
test
rcrb
pop
mov
push
lcall
addl
stc
xchg
dec
outsl
rcrb
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
sbb
cwtl
outsl
mov
fsubr
jmp
bound
pop
jae
push
imul
push
subl
mov
jno
iret
in
popa
adc
sub
inc
les
mov
shrl
adc
les
or
xchg
xchg
adc
push
pop
jl
add
push
int
xchg
mov
sub
ficoms
add
adc
imul
sbb
nop
sub
sub
mov
xchg
cmc
test
ds
jae
mov
mov
pop
xchg
lea
dec
mov
lock
test
xor
ficoms
ds
mov
jl
sub
mov
stc
jns
sub
or
dec
inc
out
sahf
insb
inc
daa
sub
daa
push
inc
pop
push
jecxz
sbb
mov
leave
jno
lods
mov
adc
pop
lahf
fstpl
adc
jle
popa
fistps
xchg
clc
and
dec
hlt
aas
push
jne
push
pop
test
xchg
test
fcmovnu
mov
outsb
or
xchg
adc
lds
loopne
and
jg
push
mov
loope
xchg
add
sub
cmp
int3
or
xchg
adc
sahf
roll
in
pusha
xor
and
mov
or
pop
sub
leave
mov
mov
out
sar
cli
dec
adc
insb
inc
jl
jno
dec
mov
xor
cltd
dec
out
loope
loope
mov
jo
movsb
xor
test
lahf
sub
cmp
fmull
outsb
lret
pop
movsb
movsb
pop
or
aad
xchg
ficoml
mov
dec
stos
sub
fsubl
ret
gs
dec
lods
pop
pop
and
xor
nop
rorl
and
pop
ret
add
add
loop
xor
leave
cwtl
xlat
in
ja
outsb
icebp
shr
xchg
push
dec
aam
mov
cmc
mov
mov
mov
pop
imul
mov
pusha
loope
movsb
fidivl
lods
jns
daa
mov
pusha
arpl
xchg
int
icebp
ljmp
jmp
loop
gs
mov
dec
popa
pop
push
xor
inc
and
mov
sbbb
lahf
paddsw
lret
xchg
mov
inc
sub
ljmp
out
fs
jge
mov
adc
rolb
sub
ret
or
dec
cmp
js
movsb
repnz
sarb
mov
xchg
fdivrl
pop
icebp
imul
repnz
mov
fwait
leave
or
mov
adc
das
clc
dec
lds
aad
stos
cmp
sbb
or
insl
lahf
jmp
daa
cld
xchg
or
add
sub
fcompp
sub
xchg
add
shr
push
js
xchg
iret
orl
xchg
nop
mov
dec
lds
cmp
pop
fidivl
cld
jno
or
pop
sbb
fldenv
jecxz
fildl
push
inc
orl
mov
in
xchg
out
dec
mov
dec
fld
mov
jecxz
sbb
rorb
loope
ficoml
arpl
sbb
mov
stos
aad
lret
loope
mov
sbb
pop
std
xor
xor
lret
xchg
inc
or
iret
arpl
inc
clc
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
jno
sub
bt
pop
jo
mov
or
and
rcll
dec
jmp
lret
imul
lret
pusha
or
inc
mov
mov
out
mov
stc
and
mov
arpl
imulb
push
aaa
inc
or
mov
xchg
pop
xor
mov
sub
stos
test
adc
cmpl
mov
sbb
jne
mov
mov
inc
roll
sbb
pop
mov
js
and
mov
jae
jmp
les
cld
or
xor
in
xor
pop
addr16
push
mov
xor
in
mov
stc
lret
imul
pop
gs
inc
mov
add
jne
sub
call
or
cmp
into
fadds
pop
jle
daa
xchg
insb
xor
lret
iret
push
stc
xor
xchg
add
mov
or
push
jbe
jmp
xlat
jnp
pop
outsb
test
ja
lods
dec
push
xor
les
mov
loope
jb
inc
hlt
pusha
jbe
cwtl
jno
iret
hlt
sbb
mov
mov
shlb
mov
push
in
lea
test
push
notb
pop
dec
cmpsl
xor
es
jge
and
pop
mov
cmp
movsl
sub
loope
sbb
outsb
test
lret
stos
push
cwtl
sahf
add
xchg
and
imul
and
inc
sahf
adc
outsl
sub
xor
inc
cmp
sbb
pop
jle
in
outsb
imul
pop
push
mov
loope
stos
jecxz
jp
xchg
sbb
cwtl
cmp
stos
cmp
pop
inc
sbb
stos
and
inc
sbb
nop
jmp
ljmp
lahf
jp
push
icebp
icebp
xchg
rclb
lods
fcomps
xor
sbb
inc
mov
cmp
imul
popf
aaa
cmc
mov
cmpsl
dec
outsl
and
cwtl
dec
mov
adc
aas
pop
je
pop
xchg
aaa
push
loop
cmp
call
movsl
test
cwtl
or
cs
rorl
xor
das
add
pusha
pusha
dec
inc
add
lds
fnstsw
sub
jne
jns
imul
jne
add
sbb
inc
call
mov
inc
icebp
xchg
pop
rcr
sbb
push
in
repz
ret
in
cli
lea
pop
cltd
dec
pop
jg
and
lock
jg
cmp
pop
pop
xchg
mov
scas
lock
mov
rcll
sub
scas
jb
push
mov
pop
xchg
lea
stos
imul
xor
adc
inc
popl
push
add
sahf
mov
es
mov
cmpsl
dec
dec
add
mov
mov
sub
mull
dec
rorl
cmc
fiaddl
jmp
and
cmpsl
mov
int3
mov
sub
das
add
movsb
push
repnz
lea
jns
push
pusha
sub
shr
sti
jl
add
pusha
jge
or
in
cmp
bound
add
mov
pop
rorb
imul
andb
xor
push
jno
cmp
arpl
dec
mov
inc
adc
mov
or
add
and
ja
push
popa
out
pop
sub
xchg
out
outsl
push
fsubr
add
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
shll
dec
sbb
stos
adc
sbb
fcomi
mov
ss
adc
andb
xchg
mov
nop
mov
sub
ja
pop
inc
cmp
sbb
add
es
jns
adc
fiadds
shrl
daa
ret
mov
mov
xchg
xor
cmp
rcl
jp
jns
mov
add
addl
enter
push
out
jne
add
cmc
mov
shll
jo
jg
loop
mulb
in
vandnps
scas
fidivl
sahf
out
shll
push
and
ret
push
movsb
out
xorb
mov
movsb
add
pushf
iret
sub
imul
fs
jecxz
lret
int
dec
rorl
scas
xchg
push
pop
mov
mov
fsubl
mov
cli
js
adc
pushf
dec
out
repnz
cmp
mov
cmp
mov
in
fs
cs
out
out
cmc
push
pop
and
sbb
dec
inc
push
mov
lret
mov
adc
imul
imul
dec
lret
inc
mov
mov
add
das
jno
push
or
adc
xchg
gs
mov
cmp
or
sahf
add
les
into
jb
jg
push
dec
adc
pop
adc
cmp
jecxz
fsubl
mov
cmp
push
aaa
mov
push
and
add
lods
outsl
js
inc
mov
mov
pop
jbe
ret
xorb
and
push
sub
sbb
bound
sti
popf
xor
fstpl
sbb
aas
outsb
push
aas
notb
mov
shll
mov
ds
sti
addl
xorb
cmp
mov
sbb
dec
fdivs
add
fcmovne
lock
mov
aas
test
or
rol
mov
mov
dec
arpl
stc
mov
and
loop
mov
pop
out
sub
inc
xor
iret
in
das
jno
xchg
and
cwtl
cmp
cmpsl
adc
dec
add
xchg
push
fcomip
adc
int
xchg
mov
cmp
aas
mov
inc
mov
ljmp
mov
aas
ds
mov
loop
cmp
cmc
jmp
cmovbe
sub
lahf
fnsave
out
push
push
test
cmp
add
mov
xchg
sbb
ret
jg
shr
popa
xchg
ss
fs
jecxz
and
leave
leave
ja
mov
fwait
xchg
mov
movsl
test
mov
mov
sbb
push
outsb
clc
into
je
jnp
mov
xor
cwtl
jge
rolb
cmp
in
mov
es
ficompl
ja
adc
aaa
sub
out
hlt
ja
ja
adcl
in
jg
cltd
es
not
mov
nop
mov
out
mov
mov
arpl
rclb
push
pop
sbb
loope
fucom
ja
and
or
mov
cmpl
lods
xlat
push
sarl
xchg
mov
cld
cmp
cli
jg
fsubl
arpl
mov
into
nop
push
fidivs
push
data16
clc
pop
jns
jo
sbb
pushf
push
xchg
movsb
inc
push
addl
rclb
push
lock
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
aas
mov
stos
adc
sbb
divb
lret
pop
mov
insl
mov
lahf
jae
scas
xor
out
jns
sarl
and
dec
adc
mov
inc
jno
es
cwtl
pusha
sub
jns
orb
ja
xor
sti
stos
push
adc
push
xor
rcr
or
fdiv
xchg
xor
fadds
inc
cltd
js
push
fisubrl
cmp
jg
mov
inc
xchg
sbb
scas
mov
jne
cmp
insb
lcall
stc
data16
arpl
movsb
push
cltd
ret
push
test
ret
shrb
addr16
inc
pop
jbe
xchg
lahf
or
jo
movsl
add
enter
dec
mov
orb
in
icebp
inc
jne
sahf
push
adc
arpl
mov
cwtl
outsl
lea
or
jo
push
aam
test
mov
mov
jne
sti
leave
test
std
push
adc
pop
mov
out
cmp
dec
jbe
je
xchg
test
mov
and
mov
sbb
cltd
and
jbe
mov
ljmp
movsb
jno
lods
aad
lea
jg
jns
xchg
daa
cmp
es
loopne
bound
jl
iret
mov
jo
push
aam
cmp
iret
testl
out
mov
fisubrl
dec
incl
adc
jne
jg
scas
aad
pop
jne
xor
sbb
test
test
es
mov
push
sbb
mov
push
aas
jle
xchg
imul
push
mov
pop
sbb
xchg
jge
xchg
in
cld
push
pop
fs
notl
sbb
cmp
mov
mov
insb
int3
and
lods
lea
mov
add
mov
xchg
mov
subb
push
bound
nop
mov
inc
push
pop
or
cltd
pop
shll
mov
push
push
sbb
or
cmp
popa
lret
cmc
imul
mov
fimuls
xlat
inc
mov
sbb
dec
dec
les
cmp
adc
lea
aad
inc
pop
divb
pop
xor
test
rdpmc
dec
or
data16
mov
push
push
dec
sbb
mov
sbb
call
out
out
daa
imul
ljmp
movsb
dec
arpl
pop
xor
mov
popa
jle
out
dec
xor
add
add
aas
mov
or
jno
mov
arpl
cmp
sub
insl
mov
xchg
cli
ds
repnz
and
inc
shrl
jmp
and
pop
dec
dec
cmp
outsl
lds
mov
ljmp
and
push
fimull
mov
fisttps
inc
cltd
mov
xchg
nop
cmp
insl
iret
lret
push
fidivrl
jns
aaa
push
idivl
jl
lea
subb
imul
test
idivb
test
aad
mov
daa
mov
sbb
push
mov
dec
mov
sbb
fstpt
mov
sub
dec
jecxz
scas
insb
mov
loopne
xchg
mov
xchg
jo
imul
adc
int
cli
push
scas
lds
mov
cmpl
jg
mov
leave
mov
xor
pop
in
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
mov
sbb
stos
adc
sbb
popa
jge
outsb
cmp
xchg
loop
mov
lds
xor
adcb
mov
sti
jg
adc
dec
push
les
mov
cmp
lcall
pop
dec
hlt
mov
in
xchg
pushf
mov
in
adc
mov
insb
jb
lcall
cmpl
movsb
scas
xchg
nop
mov
pop
pop
jb
sbb
shl
test
ss
pop
pop
cmp
or
jbe
dec
lock
pop
fs
jnp
push
cld
inc
sbb
cmp
loope
imulb
push
fwait
mov
inc
or
mov
xchg
dec
outsl
jb
dec
lahf
mov
add
sub
arpl
aad
icebp
mov
aad
sahf
xor
dec
dec
mov
push
xchg
loope
or
and
cmp
cmp
lods
mov
lods
fstpl
jp
sbb
add
mov
mov
test
fcmovne
aaa
arpl
aam
add
mov
call
out
xor
test
movsb
inc
notb
nop
xchg
sahf
in
cmp
movsl
hlt
imul
ret
scas
or
adc
push
sub
js
nop
jnp
rorl
aam
test
mov
faddp
cmp
adc
mov
xor
daa
inc
mov
jo
out
sbb
inc
sahf
hlt
call
lods
push
fisttps
daa
push
pop
cmpsb
sarb
add
push
ss
cld
jno
and
jg
xchg
ljmp
ss
xchg
sub
or
mov
fdivrl
or
xchg
notl
adc
jae
ds
or
loop
cmp
shr
int3
daa
popf
mov
pop
mov
les
and
sub
ja
inc
ficoml
xchg
scas
cmpsb
adc
jle
pushf
lods
cmp
and
or
pop
push
add
fwait
mov
mov
xchg
push
push
scas
dec
scas
loop
fs
mov
mov
lods
fmuls
stc
inc
pop
push
adc
mov
lds
stc
std
or
or
or
movsl
lea
movsl
aam
add
out
enter
dec
leave
fcomps
mov
cwtl
cwtl
mov
pop
and
cltd
xchg
addl
sahf
adc
and
out
out
jne
repz
adc
fs
or
fistpl
mov
out
out
cmp
cmpsl
add
call
inc
xchg
mov
movsb
es
sarl
jg
lret
test
jg
lcall
sbb
jg
cmp
cmp
and
inc
mov
cmpl
int
pop
mov
cwtl
sub
push
ss
push
dec
out
adc
movsl
popf
mov
insb
pop
loopne
enter
popa
add
mov
adc
sub
dec
fdivr
imul
cld
dec
jge
addb
pop
and
mov
adc
enter
inc
adc
lock
mov
cmp
sub
jg
and
xchg
cs
and
loope
dec
pop
jge
push
rorl
jbe
jecxz
repnz
sbb
aaa
mov
std
mov
xor
push
in
ja
cmp
add
xor
das
out
cmc
notl
fldenv
frstor
mov
popf
int3
andl
repnz
inc
push
outsb
jmp
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
out
lods
mov
xor
sbb
movsl
pusha
xor
ja
cld
cmp
sbbb
mov
mov
decb
cli
mov
jg
out
loop
test
lock
or
mov
xchg
cli
or
xchg
xor
jmp
mov
push
call
jns
adc
cmc
xor
adc
ds
fnstcw
lea
in
push
push
iret
xchg
into
test
mov
cmp
and
lea
mov
xchg
add
fcmovnb
movsb
cmpsb
dec
xchg
cmp
inc
adc
addr16
cmpsb
or
rol
imul
jp
add
ret
inc
mov
shl
pop
andb
mov
or
loop
jle
xchg
repz
fmull
xchg
fsubrp
xchg
jbe
xchg
pushf
pop
imul
jno
dec
ja
and
lock
and
xchg
nop
sub
mov
insl
ret
icebp
lds
add
xchg
pop
fisubs
adc
cld
cmp
popa
les
xor
loopne
mov
xor
test
dec
int3
sbb
mov
cld
out
mov
sub
and
cmc
jl
cmpsl
mov
outsl
xchg
stos
jo
test
imulb
push
dec
hlt
push
mov
mov
imul
pop
jl
popa
inc
cs
jmp
jge
cmp
pop
lret
int
int
cmpsb
cmp
loope
jmp
lods
sub
imul
fs
mov
jo
stc
pop
or
pop
inc
aas
cmc
test
dec
mov
fnsave
pusha
cmp
mov
jge
and
fmuls
jp
push
repz
xchg
mov
rcrb
fwait
mov
mov
and
and
xor
sub
mov
mov
in
jmp
out
lret
mov
js
push
pop
xchg
mov
push
clc
sbb
pop
sahf
jl
pop
adc
push
icebp
mov
stc
add
shrl
mov
inc
cltd
mov
fcompl
aas
jno
test
gs
lcall
fcoms
popf
leave
sub
shrb
mov
mov
shl
inc
cmp
mov
and
call
mov
clc
jmp
inc
jo
xchg
fwait
repz
nop
mov
add
push
insb
and
into
stos
jne
scas
pop
sbbb
in
pushf
sbbl
in
pop
repz
sbbb
mov
add
shll
insl
sti
insl
test
in
xchg
loop
pop
rorl
mov
add
outsl
cs
sub
pop
adc
pusha
lcall
subb
nop
mov
loope
mov
movsb
outsl
lods
in
and
pop
fisttpl
mov
mov
popf
dec
mov
or
ret
push
or
shlb
hlt
rorl
inc
aam
in
mov
into
mov
inc
popf
cs
and
xor
imul
cmp
dec
test
std
ficoml
mov
nop
test
pop
in
ja
cmp
ret
and
addr16
jp
enter
pop
nop
das
outsl
mov
inc
push
cmp
jae
add
aaa
adc
fidivrl
jb
xor
negl
dec
aam
outsb
adc
mov
dec
cmpsl
pop
cmpsb
fwait
cld
mov
and
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
and
sbb
adc
sbb
inc
daa
jge
cmp
lret
mov
inc
repnz
scas
dec
jne
or
push
rcr
jb
cmp
adc
sub
dec
push
push
dec
in
push
iret
and
mov
sarb
std
push
sbb
movsl
jo
in
test
je
dec
pop
movsb
rorb
cmpsl
dec
sbb
mov
int
or
pop
mov
popf
enter
shrb
stos
xor
mov
pop
das
and
lea
test
mov
aas
js
test
jnp
psubsb
pop
mov
faddl
inc
mov
out
fdivr
imull
adc
fldl
lahf
and
xchg
ljmp
adc
inc
std
loop
or
sar
or
fiaddl
pop
dec
dec
mov
mov
ja
push
jle
jb
ret
cmp
sub
sub
dec
pop
xchg
or
es
push
stos
mov
dec
iret
xor
jg
cmpl
add
loopne
mov
add
and
repnz
loopne
loop
pop
mov
daa
arpl
lds
push
inc
cld
push
jb
cmp
aas
dec
popa
fwait
push
inc
mov
adc
push
jbe
xchg
sub
mov
jg
jbe
push
jge
cmp
pushf
call
or
adc
mov
push
and
popa
pop
gs
data16
cwtl
aas
jns
pop
daa
aas
pushf
mov
xchg
in
arpl
fcoml
popf
cli
fsub
test
and
pminsw
adc
outsl
xchg
pop
push
arpl
jecxz
cmpsb
std
add
loope
xchg
xorb
int
fucomp
cltd
inc
data16
call
sbb
mov
or
add
adc
les
in
sub
enter
push
ds
pop
in
dec
jo
leave
xor
insl
into
pop
rcrl
outsl
jo
xchg
pop
mov
clc
mov
in
fidivl
inc
xor
jl
mov
push
xlat
hlt
das
in
lock
data16
insl
out
xlat
fdivp
cmp
cld
add
fildl
cmp
dec
sub
mov
pushf
in
inc
xchg
xor
add
sar
fmull
inc
pop
cmp
push
insl
repnz
pop
ds
or
repnz
sub
jge
inc
mov
movsl
bound
ja
mov
imul
mov
fmuls
and
stos
in
fucom
jb
sub
sysexit
mov
test
mov
xor
iret
adcl
push
push
je
jns
aad
ret
bndldx
dec
mov
jne
mov
xchg
xchg
xor
mov
outsb
imul
stos
in
inc
sub
int3
dec
out
dec
pop
popa
xor
outsb
aad
scas
pop
mov
cmp
dec
xor
dec
mov
insb
aad
cmp
pop
cmp
mov
mov
shll
jmp
adc
in
ds
xchg
imul
xchg
lock
add
iret
lock
mov
sti
std
jbe
ds
popa
add
inc
hlt
pushf
sub
loop
sti
sub
pop
ja
mov
jp
push
subl
cmp
push
pop
lret
into
push
push
movsl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
call
sbb
rclb
sbb
inc
and
xor
jecxz
mov
sub
xlat
mov
fucomip
fwait
pop
sbb
rclb
inc
iret
test
add
lahf
inc
fnstcw
cmp
jl
out
or
push
leave
les
mov
outsl
xor
pop
incl
aaa
xor
pop
jae
stos
jmp
imul
add
insb
setbe
mov
mov
aam
cmp
push
pop
pop
jne
sub
or
dec
mov
scas
jmp
adc
mov
push
pop
or
mov
dec
das
sbb
xlat
push
test
out
mov
sbb
mov
sbb
mov
rcl
inc
push
fldl
fldcw
cmp
push
push
jg
mov
xchg
inc
std
into
movsl
xchg
mov
push
decl
or
push
cmc
pop
jle
mov
mov
nop
or
push
inc
inc
ds
xor
add
fdivrl
sub
bound
pusha
and
stos
es
or
pop
dec
push
aam
jg
mov
and
cs
mov
lahf
or
movsb
loopne
std
push
lret
cmpl
insb
xchg
sub
xor
push
mov
iret
or
push
in
and
nop
popl
xchg
jnp
push
gs
into
dec
inc
or
inc
jge
or
pop
add
fcoml
lcall
dec
add
push
add
xchg
dec
or
sub
out
jecxz
shll
out
hlt
xchg
imul
mov
jbe
and
jecxz
jmp
btc
jno
pop
subb
xchg
popf
mov
jo
jg
mov
and
cld
xchg
push
mov
lret
sub
xchg
mov
mov
push
jmp
aad
cs
mov
movsb
push
add
sbb
adc
pop
jns
jg
movsl
mov
repnz
and
inc
mov
out
aam
push
mov
jg
jno
and
pop
jbe
sbb
jnp
or
insl
inc
add
cmc
cwtl
jge
and
jns
cmpsb
out
fldenv
pop
insb
adc
out
gs
mov
push
mov
ret
sub
into
loop
or
xlat
cmp
sahf
pop
and
mov
vmwrite
add
std
xchg
xlat
pop
jnp
pop
shll
dec
xor
mov
sbb
pop
test
mov
mov
aam
jae
and
out
fs
sub
or
nop
mov
in
iret
or
xchg
and
mov
gs
xchg
inc
lret
aaa
inc
test
jo
xor
sub
pop
sub
lahf
push
aad
xchg
fwait
aad
push
dec
gs
add
dec
sub
mov
ret
leave
jne
jg
mov
sub
push
ss
xor
in
cmp
popa
lahf
cmp
int
and
insl
add
les
mov
xchg
and
push
iret
aam
pop
dec
dec
imul
cmp
sbb
push
cmp
add
cli
push
mov
mov
out
add
mov
scas
mov
leave
mov
mov
and
push
or
jnp
inc
ret
pop
popf
mov
ret
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
test
mov
rclb
sbb
test
data16
push
and
jae
out
mov
cmpsb
popf
jae
cmc
data16
mov
cltd
dec
mov
testb
mov
mov
sbb
les
pushf
add
inc
jge
inc
dec
jmp
pusha
loope
mov
mov
cmpsb
jle
out
mov
fidivrl
and
dec
sub
aas
and
jl
mov
das
sbb
or
adc
mov
cltd
add
mov
pop
and
lret
lock
or
inc
mov
sub
push
mov
mov
shr
jge
loop
mov
xor
xchg
jle
jo
push
sub
das
insb
sbb
notb
pop
in
add
enter
dec
xchg
ds
scas
xor
cmp
adc
push
mov
xchg
sub
clc
jo
add
adc
mov
movb
pop
xlat
imul
insb
inc
pop
push
push
outsl
hlt
lahf
icebp
ficompl
pushf
sbb
bound
push
scas
push
xchg
pop
mov
std
nop
xchg
cmp
out
cmp
es
ljmp
cmp
rolb
stos
mov
ljmp
aad
mov
fistpll
cmpsl
adc
int
mov
and
scas
add
push
das
enter
push
pop
in
cmc
int
mov
aas
mov
into
and
lea
mov
movsb
inc
and
jmp
or
stc
cmpsb
jmp
das
cld
pusha
jo
decl
inc
jle
stos
sub
xchg
jecxz
popa
mov
lret
cmp
dec
or
or
mov
mov
dec
jo
push
push
test
fs
xchg
fldcw
stos
xchg
sarl
xchg
jge
mov
and
cmpsl
pop
mov
mov
and
andl
daa
lcall
shrl
xor
stos
push
adc
inc
pop
push
push
xor
mov
push
xchg
pop
icebp
mov
mov
hlt
jmp
inc
shl
lods
mov
sub
xlat
mov
mov
subb
mov
adc
pop
in
inc
bound
ret
aam
das
jg
imul
mov
mov
push
fstl
daa
scas
mov
lods
and
cmp
inc
push
lods
jl
push
and
imul
and
or
iret
mov
or
mov
pop
lret
mov
stos
xor
sbb
push
mov
leave
rolb
mov
inc
int
inc
xchg
jne
dec
fsubl
sbb
cwtl
popa
scas
popa
pop
mov
stos
inc
pop
adcl
xchg
or
mov
aad
aas
pop
in
out
popf
ds
sarl
add
fiaddl
or
dec
pop
das
cmp
mov
xor
lods
add
mov
test
and
std
jb
xchg
cmp
gs
stos
push
imul
push
ret
imul
xor
cwtl
push
pop
pop
jo
sub
xchg
inc
jmp
push
sti
mov
rorb
mov
cwtl
xor
loopne
xchg
add
lcall
daa
pushf
cmp
nop
in
mov
lret
push
std
cmp
adc
add
jb
loop
rorl
dec
or
fsubs
rorl
dec
rorb
scas
rorl
dec
enter
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
dec
cmpl
sbb
push
ret
fidivs
or
mov
ret
pop
aad
mov
mov
lds
mov
add
adc
and
sbb
mov
push
sbb
push
sbb
xor
jno
sub
imul
pop
and
movsl
fadd
adc
repz
leave
xor
inc
aaa
scas
ja
jle
divl
mov
xor
out
les
sbb
movsl
push
jmp
pop
sbb
xchg
push
imul
pop
scas
mov
sub
push
lods
mov
decl
cmpsl
mov
mov
aaa
lock
shl
ficoml
push
dec
inc
dec
cmp
jl
pop
sub
jnp
cld
es
cmp
aaa
sarb
push
fdiv
xor
lret
lret
push
adc
mov
xor
xchg
and
pop
or
aaa
push
inc
lods
cmc
dec
cmpps
lret
popf
mov
inc
and
mov
mov
stc
adc
sub
pop
mov
lcall
fs
push
adc
pusha
push
push
sbb
or
add
jns,pt
lret
fisubs
xlat
outsb
fs
xchg
pop
test
dec
test
xor
lcall
mov
addb
iret
ja
rol
push
test
popf
xchg
dec
cmpb
pop
test
iret
stc
repz
movsl
mov
xchg
int
out
stos
movsl
dec
cltd
imul
stc
sub
pop
int3
fisubs
and
sbb
add
pop
stos
jg
js
movsb
jnp
mov
push
scas
test
ljmp
xchg
and
push
xchg
aas
sbb
divw
lock
cmp
adc
test
int3
push
adc
lret
loopne
xor
stos
and
in
ret
cmpl
jle
add
mov
iret
jbe
or
and
push
and
inc
push
mov
xor
repz
insb
les
pop
stos
add
dec
xor
mov
inc
test
jp
jnp
pop
iret
inc
das
xor
rcrb
loop
gs
inc
inc
addr16
sti
mov
pop
ja
cmpsb
cmpl
xchg
lods
nop
sbb
test
test
jmp
inc
xor
mov
negb
mov
pop
nop
cmp
sbb
ljmp
sbb
and
sbb
dec
inc
cld
std
xor
cs
sarl
cli
cmpsl
cld
sub
fbld
test
or
subb
push
pop
inc
cmc
mov
sub
adc
push
jbe
mov
xor
xor
out
add
idivl
arpl
jmp
mov
add
xorb
lret
popl
cltd
adc
xchg
dec
int
xorl
in
jnp
sub
jl
mov
xchg
mov
test
and
adc
loopne
and
mov
repz
ret
xchg
out
sub
jno
sub
ss
je
lods
repz
adc
mov
push
scas
into
pop
pop
jmp
inc
push
xchg
jg
mov
sub
daa
or
in
push
xchg
cwtl
dec
sbb
cmp
rorw
out
in
gs
jmp
sub
cli
or
jnp
stos
sbb
dec
cmp
or
pusha
inc
fwait
mov
xchg
sbb
cmp
cli
data16
push
jbe
mov
repz
pop
popf
jmp
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
inc
mov
push
sbb
test
push
sbb
test
jmp
out
out
jl
pop
xchg
notl
lcall
ss
xor
cwtl
or
mov
pop
sub
daa
or
xchg
movsl
sub
int
addr16
imul
out
fs
add
and
fsubr
mov
push
outsl
xor
movsl
mov
mov
stc
outsl
mov
xchg
or
jl
sahf
int3
xor
daa
pop
mov
pop
fdivs
sub
clc
lret
in
fsubrl
enter
push
div
jg
add
mov
or
add
mov
jl
dec
pop
jb
stos
xchg
pop
rorl
and
dec
xor
pop
dec
fst
cli
xchg
jmp
pop
loop
in
cmp
iret
or
push
sub
stos
cmc
pop
mov
rolb
cmp
int
int3
lret
jb
loop
xchg
jnp
lcall
push
mov
or
ja
test
lods
les
mov
dec
outsl
aam
sub
aam
imul
stos
dec
cmc
in
mov
adc
insl
ljmp
mov
inc
mov
or
add
dec
adc
aad
dec
inc
jl
adc
sti
add
and
ficompl
sbb
sub
and
test
aas
popf
pop
mov
jg
add
dec
call
loop
fbld
inc
cld
push
test
stos
ljmp
xor
roll
xchg
fs
or
xchg
lods
dec
cli
bnd
pop
mov
push
xchg
mov
cmp
cmc
dec
xlat
pop
pop
sbb
aas
addl
and
fistl
ds
adc
in
jl
lcall
mov
add
addl
xor
add
inc
in
ds
in
dec
mov
jnp
push
inc
xchg
pop
cmp
push
divl
outsl
stos
imul
push
cltd
mov
xchg
mov
or
push
test
test
mov
mov
dec
int
cmp
jp
or
iret
insb
mov
test
js
hlt
mov
mov
mov
call
imull
jmp
sbb
inc
dec
or
cmc
dec
pop
sub
mov
cmp
sbb
sti
movsb
movsb
pop
in
sti
xchg
inc
mov
sub
pop
sub
mov
pushf
cmpsb
push
pop
mov
and
dec
data16
movsl
mov
mov
imul
pop
sub
cwtl
jo
pop
xchg
sub
mov
xchg
add
fcmovnu
xor
adc
sahf
dec
sahf
dec
dec
es
lret
jg
jae
jbe
das
dec
stc
cmpb
ds
jmp
dec
lret
mov
rcl
dec
cmp
ret
mov
mov
aas
xchg
push
cmp
xchg
xor
jl
xor
nop
lahf
add
in
xor
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
xor
mov
mov
sbb
jmp
and
mov
lods
sbb
lea
sarl
sarl
outsb
and
jecxz
adc
mov
popa
adc
jp
loope
pop
pusha
add
dec
sbb
lret
sbb
dec
adc
insl
aad
arpl
jbe
dec
into
dec
loope
cmpl
push
cli
addl
ss
hlt
sub
fs
mov
stos
sahf
push
in
mov
test
ja
sub
inc
cmp
mov
mov
aad
lea
add
mov
jge
add
outsl
xor
mov
mov
mov
or
mov
xchg
cmpsl
ja
les
push
mov
push
mov
and
jno
fcmovu
jns
call
push
xor
in
pop
jmp
dec
add
push
mov
ret
sub
mov
stos
or
jle
pop
push
mov
fisubs
push
ret
inc
shrb
xor
dec
mov
insl
in
jns
mov
pushf
lret
mov
pop
sahf
repnz
xchg
stc
xlat
mov
sub
push
push
lret
imul
test
into
inc
aaa
xor
aas
and
and
inc
cmp
jb
add
in
jle
dec
mov
sub
xchg
jge
push
dec
xor
or
mov
es
scas
xlat
mov
add
rcll
sbb
mov
outsb
fstpt
lcall
aas
cmc
pusha
jb
dec
and
sahf
xchg
sahf
xchg
add
add
mov
add
push
les
push
push
rcrb
in
loop
popa
cmp
adc
iret
test
inc
dec
loopne
hlt
ficoml
and
jo
in
int
cmc
and
mov
xchg
js
popf
and
aam
mov
rcrl
push
insl
xchg
out
and
mov
int
inc
pop
fstl
mov
sub
rcrl
inc
test
rorb
insb
mov
mov
daa
mov
clc
out
mov
loop
lret
outsb
pushf
mov
push
push
xlat
add
imul
xchg
icebp
stc
push
test
aas
add
je
pop
push
in
sub
and
in
sbb
xchg
jl
addr16
push
imul
imull
inc
fyl2x
xchg
stos
daa
arpl
xchg
outsl
rcl
xor
out
loope
add
sbb
cwtl
les
leave
jnp
cwtl
or
cmp
jns
cmp
int
dec
addr16
int
hlt
dec
incl
pop
inc
xor
lret
dec
dec
stc
cltd
ljmp
outsb
mov
fcmovne
pop
jp
add
add
pop
mov
push
push
add
sarb
clc
mov
dec
pop
pop
dec
push
or
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
scas
loopne
jo
add
sbb
cmp
xor
inc
and
jnp
push
jg
call
mov
outsb
mov
loop
dec
xchg
xor
jle
nop
es
mov
add
addr16
loopne
jp
clc
insl
mov
or
pop
mov
es
or
out
mov
dec
pushf
orl
out
rolb
pop
gs
add
pusha
and
repz
scas
sub
jbe
insl
sbb
push
xchg
push
xchg
lahf
pop
fsts
sub
mov
mov
xchg
xor
in
loope
sub
dec
aam
xlat
insl
cmc
shl
jecxz
inc
adc
into
cmpsb
stos
aad
jnp
popf
xor
mov
mov
std
inc
popf
faddl
js
or
repz
cli
ds
dec
jmp
popa
cmp
stos
xlat
mov
bound
and
cmp
daa
sub
js
ja
rclb
into
dec
adc
and
xor
lcall
sub
addb
jmp
aas
mov
repnz
mov
push
lock
test
into
lret
sti
dec
sbb
mov
pop
stos
cmp
ret
icebp
add
les
or
test
fistl
xor
mov
out
into
sbb
js
dec
imul
lahf
scas
push
fcoms
fidivs
movsb
sub
test
sub
sub
mov
dec
push
mov
jg
dec
push
fnstsw
mov
mov
call
mov
loopne
idivb
orl
push
sub
fcomps
icebp
push
push
cmp
lods
add
aad
je
dec
xchg
call
inc
in
and
xchg
mov
mov
sub
popf
add
js
pop
mov
sbb
sbb
cmc
or
jmp
xchg
shll
vphaddwd
mov
and
pushf
pop
movsb
daa
out
insb
gs
pop
mov
stos
xchg
pop
push
hlt
sbb
push
cmp
xchg
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
fwait
adc
sbb
push
loope
clc
repnz
cltd
sbbb
imul
and
push
iret
and
and
or
inc
or
jnp
xchg
jno
mov
push
call
xor
pop
adc
jg
dec
xchg
int
enter
add
xlat
xchg
mov
xor
jb
mov
mov
fcomp
rcrb
and
fcomps
pop
jnp
js
mov
push
and
sbb
xor
mov
sti
pop
hlt
gs
lahf
xor
adc
mov
mov
and
cltd
loope
enter
mov
into
orb
sbb
xchg
sbb
repnz
packuswb
mov
jle
inc
enter
data16
cmp
cmp
sbb
pop
popa
add
das
mov
dec
lea
out
leave
imul
inc
add
xchg
push
add
cwtl
or
outsb
fmuls
ror
ja
lret
cmpsl
nop
push
mov
mov
lock
movsl
xorl
cmp
insb
jns
mov
pop
inc
mov
sahf
stos
mov
das
xchg
sbb
cltd
fimull
adc
enter
dec
sbb
mov
test
pop
and
test
fcom
ja
push
xlat
mov
xor
pop
inc
fs
sbb
or
testb
ret
or
lret
inc
jge
jno
enter
dec
loop
jno
add
jge
and
jb
mov
js
popf
xlat
aas
xchg
add
dec
pop
out
fdivr
sbb
inc
aas
mov
out
pop
push
inc
stos
dec
jl
fstps
and
lea
adc
mov
sti
and
movb
sbb
sbb
xor
in
mov
sbb
mov
xor
inc
icebp
rdpmc
or
push
fisubrs
add
mov
ds
mov
lret
inc
xor
lcall
arpl
mov
pusha
dec
push
divl
xor
dec
ss
fistl
sti
loope
clc
sbb
add
imul
sti
push
adc
inc
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
adc
sub
mov
cmp
mov
dec
mov
mov
dec
jmp
mov
shrb
shll
aad
enter
and
js
mov
nop
outsb
cmpsl
jp
jnp,pt
mov
cwtl
inc
and
and
jb
clc
mov
push
repnz
push
cmp
fildl
rorb
cmp
jne
mov
cmp
push
loop
incb
xchg
mov
shl
fdiv
in
jb
mov
cwtl
stos
fbld
jns
adc
arpl
inc
sbb
jmp
rcll
in
push
data16
loopne
sub
loopne
mov
push
sub
loopne
stos
sub
cmp
or
inc
cs
repz
call
enter
aas
stc
add
cmp
xor
dec
mov
aam
push
add
inc
data16
push
and
or
test
and
jmp
mov
pop
stos
sbb
sti
or
into
sub
xchg
imul
pushf
inc
sub
mov
sub
mov
push
fwait
leave
adc
out
popf
inc
movsl
push
int3
aad
cli
fwait
stos
adc
or
pop
cwtl
dec
jbe
sub
pop
sub
push
xlat
pop
insl
pop
addr16
push
lods
mov
testl
dec
mov
or
test
fwait
cmp
mov
lods
rcll
out
roll
xor
es
mov
pop
rcrb
ja
subl
out
test
fcomip
je
or
pop
xchg
test
cld
adc
ret
push
cmpl
and
dec
xor
push
inc
jg
in
lret
loope
arpl
sub
dec
add
or
test
lret
add
shlb
dec
jo
mov
in
sbb
push
cmpsb
push
push
gs
xor
jmp
inc
mov
jae
dec
jle
in
mov
xchg
add
ret
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
xor
jo
hlt
push
sbb
adc
sbb
leave
aaa
cmp
inc
in
sub
xor
mov
inc
pop
dec
ja
fdivs
inc
pop
fisttpl
lret
jg
mov
int
mov
sbb
aaa
jp
cwtl
stos
stos
fistpll
test
xor
bound
mov
mov
nop
sub
in
stc
xchg
cwtl
stos
mov
popf
add
pop
inc
sahf
mov
and
incb
sbb
xor
mov
jl
push
rclb
mov
xchg
mov
jnp
pop
mov
jae
stc
out
push
cs
inc
fnstcw
push
fimuls
jae
pop
xchg
xchg
cmp
jno
idiv
int3
cmp
mov
cli
pop
insl
call
mov
mov
add
push
and
mov
and
imul
and
test
sub
movsb
int3
lock
loopne
add
push
mov
in
mov
jo
and
cmp
cld
fldt
pusha
push
clc
jmp
stc
gs
rol
inc
push
imul
nop
mov
push
jmp
pop
push
outsb
icebp
loope
mov
jecxz
in
and
in
push
xor
shrl
and
aad
addr16
pop
sbb
pop
inc
push
aas
pop
jmp
ja
sub
fidivrl
fndisi(8087
in
outsl
adc
sub
sub
addb
push
dec
fwait
or
mov
pop
es
xchg
lcall
pop
lahf
jp
int
fdivrl
mov
mov
jo
fisubs
xchg
dec
inc
pop
dec
fwait
lea
mov
jmp
mov
sub
cli
xchg
push
xchg
and
icebp
aaa
mov
and
xor
adc
add
shll
test
and
call
and
lret
jmp
fsubrs
cmp
mov
sbb
jmp
dec
cmp
aaa
ret
sbb
cs
jmp
std
push
dec
sti
negl
sub
sarb
jns
jb
xchg
mov
jp
in
cmp
loopnew
mov
lret
in
adc
inc
dec
pop
push
xchg
mov
jmp
jmp
imull
mov
leave
and
aas
push
mov
out
lock
push
lock
pop
or
scas
sahf
or
sahf
inc
xchg
sbb
into
jbe
or
xlat
fsubr
lods
add
mov
jle
lods
cwtl
jno
sbb
inc
xchg
cmp
add
adc
cmp
imul
pop
inc
push
dec
fdivs
sbb
pop
std
dec
loopne
lret
push
cmc
popf
mov
push
and
xor
jp
add
xchg
dec
sar
lds
xlat
loopne
mov
fs
outsb
arpl
jns
cld
cmp
xchg
imul
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
jo
ficoms
xchg
shlb
cmp
inc
std
adc
xchg
cmp
inc
ja
ficoms
lock
sar
ds
shl
mov
into
xchg
stos
sbb
daa
mov
jbe
loopne
and
dec
rclb
rcr
jecxz
lahf
test
jmp
jmp
pop
jo
xor
test
pop
shrb
mov
jecxz
jbe
stc
mov
dec
js
ret
push
fwait
lret
fmulp
mov
mov
data16
aaa
jecxz
subb
iret
jecxz
lcall
mov
push
xorb
cmpsb
shrl
xchg
enter
mov
lret
icebp
inc
in
js
pop
inc
out
mov
in
xchg
es
mov
cmc
sub
cltd
cmpsl
sub
cmpsb
inc
push
xchg
hlt
xchg
jbe
jo
dec
shll
fisubs
inc
adc
pop
mov
aas
pop
push
fisubrs
inc
and
xor
gs
jge
cmp
dec
negl
gs
jmp
sahf
inc
and
xor
pop
and
xchg
aas
stc
popa
push
pop
popa
and
sti
in
imul
mov
popf
mov
shl
jmp
addb
loopne
inc
mov
sbb
nop
and
ljmp
push
insb
push
mov
push
xorb
xchg
sub
or
push
mov
xor
dec
xor
sub
xchg
shll
pop
pop
orb
in
mov
pop
ret
mov
lds
push
outsb
je
mov
movb
and
xlat
fs
gs
cmp
adc
addl
movsl
xchg
dec
cmp
faddp
dec
xchg
mov
stos
js
adc
adc
fildl
push
dec
cmp
mov
mov
ss
adc
in
and
lret
sarb
dec
lret
xchg
data16
adc
jns
bound
sbb
adc
add
xchg
les
pop
pop
lret
mov
push
fwait
clc
cmp
rorb
cmc
cmp
jne
xor
lds
jb
mov
mov
sub
push
sub
push
push
pop
xor
insl
fidivrs
push
in
inc
imul
es
or
mov
pop
lea
and
das
leave
push
xchg
sbb
push
loopne
bound
add
xor
xchg
mov
loope
outsl
mov
jmp
mov
scas
cmp
imul
imul
cltd
mov
jae
cmp
lret
test
lret
aas
cmp
fcmove
pop
push
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
das
cs
int
lds
cltd
das
rcrl
cld
jecxz
mov
mov
out
adc
add
push
sub
or
mov
mov
call
lds
subl
cmpsb
push
int3
roll
mov
mov
in
inc
lea
or
iret
xchg
fidivrs
and
xlat
enter
mov
mov
push
add
int3
xchg
sbb
clc
xchg
or
xchg
dec
addl
push
inc
test
outsb
ret
or
xchg
dec
jnp
inc
jno
scas
out
dec
xchg
in
sarl
xor
cmp
xor
dec
data16
inc
pop
dec
mov
out
push
mov
in
lret
pop
inc
out
mov
xor
cmp
sbb
or
inc
adc
push
or
jns
adc
or
in
cmpsb
ds
repnz
das
xor
cmp
stos
mov
add
push
daa
xlat
jl
pop
and
stc
mov
cmp
push
xor
shlb
add
mov
into
adc
stos
bound
adc
aam
push
lds
aad
clc
pop
push
leave
scas
jg
sbb
add
jbe
bound
aas
outsb
shlb
xor
mov
mov
xchg
xor
pop
imul
adc
mov
lods
ljmp
mov
mov
mov
add
jl
aam
stc
jbe
roll
mov
test
divl
pop
in
pop
ss
xor
and
shl
push
mov
int3
xchg
xchg
add
sbb
icebp
pop
int
lds
xor
sbb
stos
sub
add
and
push
int
or
negb
lret
leave
add
movsb
ljmp
jo
les
and
lods
pusha
mov
inc
push
popl
sti
stos
jge
loopne
xchg
sbb
jo
cli
jbe
cmp
xchg
je
add
lds
aas
in
scas
sahf
mul
xchg
sbb
add
sbb
pop
xor
dec
push
stos
ret
xchg
inc
xor
mov
outsl
sub
pop
jno
repz
dec
cld
rorl
test
sbb
addr16
push
shlb
push
int
stc
gs
cmp
xchg
imul
sarl
repnz
in
or
push
lret
andb
and
jmp
inc
int3
inc
fmul
test
pop
cld
aam
dec
xchg
int
dec
or
repz
mov
je
orb
pusha
jnp
iret
fsubs
lcall
mov
xlat
pop
dec
cld
sub
dec
cs
fsubp
rorl
std
rorl
pop
sub
jge
push
in
xchg
jmp
pusha
rcrb
mov
mov
inc
inc
xor
stc
or
ficoml
mov
xchg
adc
cmp
bsr
cwtl
sub
cmpsl
xchg
fisubl
and
movsl
jo
xor
mov
push
xchg
sub
je
add
mov
out
push
inc
sub
push
lods
cmpsb
rcrb
dec
xlat
xchg
orb
movsl
dec
inc
dec
call
movsl
pop
dec
adc
iret
stc
mov
mov
js
nop
mov
aaa
sbb
pushw
adc
test
mov
jo
pop
cmp
dec
pop
outsl
xor
cmpsb
sbb
test
jmp
jae
lahf
out
pop
adc
add
cmpsb
mov
mov
jns
and
mov
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
in
movsl
fiadds
mov
subb
and
inc
jns
inc
dec
repz
sbb
icebp
ret
pop
les
sub
and
ret
xchg
jo
or
push
xchg
jns
rcrl
out
and
enter
jne
icebp
addr16
lret
out
fs
push
add
outsl
pop
or
jp
in
shll
push
jns
std
jns
and
addr16
mov
xor
mov
je
xchg
fimull
shlb
push
push
subl
xchg
sbb
jmp
call
aas
add
push
mov
adc
inc
dec
aam
xor
ds
jle
cltd
rcrl
cmc
mov
sbb
std
inc
sbb
in
jmp
cmpsb
xchg
and
and
ret
cmp
mov
sbbb
cli
adc
jns
add
daa
sbb
mov
lock
pop
psraw
and
jmp
pop
push
xor
lcall
add
leave
mov
mov
mov
je
jg
test
cmp
popf
mov
popa
jmp
push
out
lods
inc
mov
outsb
neg
mov
out
push
bound
dec
jl
adc
rcrb
je
mov
xor
or
dec
es
cmpsl
jns
xor
lods
jo
and
cmp
xchg
fnstcw
or
addr16
stos
or
stos
aad
cld
test
lcall
aam
rol
sub
jne
mov
ror
sub
sbb
jae
int3
xor
outsb
or
movsb
int
and
cmc
jne
clc
push
xlat
call
negb
lea
ret
pop
add
dec
sub
push
mov
pop
push
stos
pop
jne
adc
sbb
dec
stos
pop
jns
inc
daa
mov
mov
pusha
divb
daa
push
pop
adc
dec
mov
dec
arpl
nop
jg
adc
sbb
mov
cmpsb
pop
xchg
inc
lahf
mov
add
pop
pop
push
sahf
mov
or
pop
mov
mov
in
lret
mov
out
fstpl
test
movsb
pop
adc
xadd
mov
nop
loopne
cmp
mov
outsb
jbe
sbbl
jge
test
xchg
mov
lock
dec
repnz
outsb
call
xor
jmp
repz
jle
add
test
jo
outsb
fnstsw
mov
mov
out
push
icebp
xor
ret
inc
test
paddb
and
cmp
mov
mov
int
add
inc
imulb
ds
push
mov
mov
out
dec
lret
add
test
adc
xchg
jecxz
pop
aad
xchg
and
leave
das
enter
lock
xlat
jo
mov
xchg
fdivl
add
idiv
sbb
je
je
into
fwait
sbb
imul
rolb
in
or
mov
adc
ret
popf
xor
mov
jo
xorl
mov
mov
leave
popf
sahf
mov
stos
or
shrb
sub
push
pop
pusha
sub
outsb
in
push
xchg
push
dec
mov
scas
in
adc
incl
pop
dec
gs
out
gs
dec
test
inc
movb
push
xchg
sbb
cmp
mov
mov
add
inc
inc
and
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
xchg
in
mov
mov
lcall
push
push
mov
mov
fstpt
jo
jne
movsb
or
loopne
mov
scas
add
shl
rolb
ret
jno
loopne
mov
sub
pop
cmp
sub
pop
test
push
into
cmp
fs
pop
xchg
in
jne
pop
push
pop
sahf
and
mulb
inc
loop
pop
ret
sbb
mov
sbb
mov
adc
cmp
fsubrp
insl
xchg
in
stc
jb
fisttpll
inc
fiadds
push
sbb
sub
pop
push
js
fwait
mov
mov
fucomip
loop
aad
jo
adc
mov
mov
add
add
sbb
inc
mov
mov
inc
xchg
popf
push
adc
pusha
mov
ss
imul
lea
mov
pusha
xchg
leave
jae
into
push
push
ds
pop
pop
sbb
aaa
xchg
aam
mov
mov
xor
inc
or
fcomps
mov
sbb
frstor
rol
jecxz
cmp
jb
leave
in
or
das
outsb
jbe
jae
test
push
sub
leave
push
imul
or
ja
jns
xor
loopne
fs
in
xchg
adc
mov
mov
pop
adc
cmp
push
xor
insl
sub
scas
jmp
jne
icebp
or
pop
sub
push
push
jge
movsb
sbb
mov
insb
lret
add
mov
out
shr
jp
inc
enter
mov
push
inc
outsb
cwtl
dec
loopw
push
jl
add
lret
add
aam
sbbb
repz
sbb
test
xor
scas
lret
mov
dec
pop
xor
sub
pop
inc
push
pushf
cmpsb
lret
jnp
add
fidivrl
mov
mov
shr
sub
adc
adc
and
or
pop
xchg
or
test
jge
mov
insb
jmp
icebp
bound
and
push
add
xchg
xchg
cli
sbb
nop
mov
lret
gs
cs
pop
inc
add
jmp
cmp
add
sbb
ja
pop
mov
adc
mov
lock
arpl
jae
in
stc
adc
dec
dec
sub
aam
and
int3
jo
mov
pop
jae
xor
mov
pop
adc
mov
jle
adc
cmc
jle
imul
mov
push
es
inc
mov
ljmp
sahf
jecxz
cmpsl
gs
les
cmc
stos
adcl
pop
mov
push
outsb
pop
andl
fcompl
xor
test
enter
push
clc
subl
inc
xchg
mov
sub
dec
jle
push
push
hlt
adc
lahf
add
xchg
adc
or
divb
pop
insl
jbe
and
sub
lock
pop
mov
pop
addr16
aaa
outsb
test
and
jno
push
iret
dec
aad
pop
adc
xchg
rol
je
jnp
mov
adc
mov
mov
jae
inc
outsb
fwait
movb
adc
inc
int
xchg
movsl
mov
and
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
jbe
cmpsl
mov
mov
mov
fdivs
mov
lods
cli
out
scas
jl
lret
sbb
dec
push
dec
jbe
cld
pop
rorb
dec
pop
xor
push
call
jg
mov
or
inc
fadds
das
leave
dec
adc
iret
fadds
dec
jne
in
xchg
cmc
xor
leave
pusha
popl
or
lret
mov
mov
xchg
lds
enter
outsb
cwtl
jecxz
sub
iret
adc
clc
in
jne
test
fdiv
gs
xchg
test
repnz
adc
xchg
and
movsb
cmpsb
sub
sub
mov
xlat
add
int3
fs
sti
sub
jp
fdivs
sub
push
jl
stos
cli
orl
pop
mov
ljmp
jno
mov
sbb
jle
xor
pop
lret
js
add
cmpb
into
clc
lahf
xchg
stos
sbb
jno
cld
cmp
cmp
push
add
pushf
adc
fisttps
mov
cmpl
pusha
sbb
pop
popa
or
inc
inc
inc
out
repnz
push
test
loopne
mov
shlb
enter
cmp
push
loope
fwait
movsl
mov
popf
sarl
lods
fwait
pushf
sbb
mov
adc
mov
aam
adc
sub
mov
mov
xchg
nop
adc
and
xor
clc
jg
ja
and
dec
outsl
lea
mov
mov
mov
mov
popa
mov
dec
cs
js
mov
pop
mov
push
outsl
enter
sub
aam
pop
mov
fldl2t
les
fcomps
testl
xor
add
add
imul
xchg
movsb
stos
icebp
and
fdiv
cmp
inc
mov
pop
sbb
adc
sbb
ret
mov
inc
jmp
adc
mov
cmc
mov
mov
mov
stos
add
faddl
lea
jne
or
jb
mov
andl
dec
vmwrite
pushf
je
in
mov
add
addb
mov
ret
add
cmp
ds
sub
imul
adc
pop
xor
push
stos
jno
test
imul
pop
mov
out
rolb
int3
fisubrs
fs
icebp
ja
fdivp
lret
test
push
mov
in
sarb
enter
dec
das
or
cmc
jns
inc
movsb
data16
stos
nop
sahf
jbe
jbe
jb
inc
cltd
fsubs
sub
adc
adc
sbb
in
mov
inc
mov
fs
fstps
fidivs
subl
xor
into
fiaddl
mov
push
cmp
mov
xchg
mov
into
mov
pusha
repnz
dec
sarb
gs
les
stos
xor
fmull
inc
pop
pop
fldl
mov
xor
test
loope
mov
or
mov
ret
or
adc
pushf
jp
or
cmpsb
mov
stos
cmp
dec
in
scas
dec
mov
les
inc
outsl
pop
push
pop
push
mov
mov
fwait
mov
cmpl
xchg
push
dec
cmpl
xor
negl
add
fildll
sbb
out
cmp
push
adc
mov
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
sbb
sbb
insb
xor
movsl
xchg
ja
push
test
mov
xchg
ljmp
mov
mov
int3
sub
push
mov
cmp
sti
xchg
or
add
js
pusha
out
jl
xor
sbbl
movsb
js
mov
lahf
pop
int
add
leave
and
je
adc
push
fsubrl
push
scas
and
ja
lods
mov
sbbl
arpl
lock
sub
add
xchg
dec
dec
mov
lea
fnstsw
push
cld
jg
pop
xor
mov
jbe
fsubl
negl
sbb
insb
aaa
adc
push
gs
mov
js
xor
outsb
adc
sti
cmp
dec
test
inc
dec
xlat
iret
test
bound
adc
adc
cld
sarb
ret
cmp
sub
and
mov
stc
scas
mov
jae
jecxz
jp
dec
xchg
incb
mov
and
mov
js
test
adc
push
dec
inc
movsl
xchg
lds
push
jne
je
lock
sub
mov
pop
dec
mov
xor
xchg
lods
cmpsl
fistl
jbe
mov
in
mov
dec
scas
mov
add
mov
push
jne
out
es
insb
scas
add
push
fdivp
and
push
xchg
nopl
shrl
ds
ficoms
adcb
jmp
sub
rolb
fs
sub
fistps
sub
cmp
xor
aas
jae
pop
inc
xchg
mov
jecxz
mov
imul
flds
adc
add
jecxz
movl
std
cmp
pushf
pop
add
test
pop
lahf
sbb
dec
in
divb
pop
pusha
cmp
shlb
pop
inc
out
dec
ss
fwait
push
dec
add
xchg
dec
sahf
cmc
jge
push
sbb
mov
adc
test
nop
sbb
movsb
cwtl
and
icebp
call
jge
pop
pop
push
dec
lods
or
xchg
sub
jo
add
rcl
movsl
fisubl
xchg
xlat
scas
sbb
scas
mov
push
jns
int
shl
mov
inc
fcomps
lock
add
aam
jmp
mov
mov
das
loopne
out
in
sbb
jmp
testb
iret
cmp
loop
push
lret
movsl
adc
pop
fsub
std
cli
ficoml
mov
mov
in
movb
adc
int3
testl
ret
lods
mov
movsb
lock
in
lret
fs
aas
arpl
rorb
aaa
aad
fidivs
push
shrl
lret
push
cli
jns
mov
pusha
and
push
fisubrl
cmp
loop
jg
cmp
mov
sahf
into
mov
push
outsb
lods
cmp
mov
jns
cmp
jns
sub
or
lcall
xor
cltd
push
rclw
jge
rorb
jmp
or
jne
jge
and
mov
jp
push
and
jge
jge
out
dec
cwtl
or
in
js
fistps
jns
push
jne
push
int3
inc
fcom
or
iret
jp
mov
mov
xchg
xchg
mov
js
gs
pop
pop
push
insb
push
popa
pop
clc
xchg
mov
lsl
ja
mov
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
and
jl
ret
push
sbb
shl
and
and
sahf
fwait
or
aam
add
cmpsb
sbb
sahf
sub
adc
sub
mov
cmp
push
sahf
out
jns
pop
enter
popa
push
in
cmp
lds
dec
sbbb
and
dec
sub
lock
shll
in
inc
out
sub
mov
jecxz
mov
pop
inc
add
mov
incl
lods
sub
cmpsl
out
sbb
jns
imul
aas
inc
inc
jl
add
sub
xchg
mull
dec
jle
cmp
daa
int3
cwtl
dec
out
jb
stos
int3
or
add
jl
inc
pop
das
sub
pop
push
mov
sub
jo
pop
mov
addr16
mov
mov
lret
mov
fildl
push
icebp
adc
adc
stos
jp
mov
les
add
imul
sub
and
adc
lock
je
jmp
aaa
cli
popf
mov
loopne
push
inc
js
lock
push
mov
inc
adc
and
jmp
push
ret
sub
shr
int
stos
sti
cmp
lahf
sahf
mov
mov
aaa
xchg
popa
push
jp
fwait
lods
repnz
std
or
jp
dec
clc
jl
dec
lahf
pop
xchg
es
jmp
or
inc
mov
add
jg
insb
or
addr16
push
inc
lods
adc
insl
mov
jno
jmp
cli
xor
add
jns
je
and
pop
lods
mov
mov
mov
jnp
push
test
fstps
sub
inc
xchg
mov
lcall
sub
and
and
inc
jl
stc
sub
mov
inc
xor
jne
lods
ds
and
sbb
outsl
xor
enter
push
in
xorl
movsb
jb
and
lds
jns
adc
xor
ja
xchg
and
lret
in
std
jno
filds
add
sbb
dec
push
inc
mov
dec
lahf
adc
stc
jae
push
inc
fwait
not
fsubl
ficoml
cmp
pop
mov
stos
daa
sub
rep
pop
cld
jmp
cmp
pop
and
xor
pop
cmp
movsl
mov
xor
pop
ja
rclb
notl
jae
and
in
xchg
dec
fistpll
xor
aaa
xor
sub
add
push
loopne
mov
out
call
cmpsb
cmp
mov
mov
push
ss
rolb
or
mov
hlt
jae
jmp
sarl
das
fiadds
imul
or
in
in
pop
mov
in
jns
mov
lods
rcrb
inc
fisubl
xchg
xchg
into
outsb
popf
mov
or
sbb
cmp
js
cwtl
mov
rolb
cs
lret
jbe
mov
mov
or
pusha
and
addr16
aad
loope
hlt
loope
or
addr16
scas
enter
bound
adc
fbld
push
faddl
xorb
sbb
or
nop
divl
dec
jb
add
iret
and
add
out
and
and
mov
aam
lret
or
add
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
push
push
stos
jecxz
push
sbb
sti
daa
dec
lahf
insl
stos
mov
loop
xchg
jmp
jl
adc
sbb
lahf
scas
sarb
mov
adc
push
fiaddl
xchg
aad
hlt
cmp
movsl
xchg
fmulp
mov
pushf
insl
cli
sbb
dec
and
arpl
cs
insl
mov
sub
sahf
sub
pop
orl
popf
jno
dec
outsb
mov
mov
movsl
and
fnsave
mov
jo
add
cmp
cmp
psrad
fisubrl
ret
pop
mov
adc
inc
push
leave
or
jb
push
mov
or
pop
sbb
sbb
fildll
sarb
ljmp
mov
and
mov
mov
add
pop
cwtl
in
mov
aaa
cmp
or
outsl
dec
dec
icebp
mov
fwait
popf
ret
outsb
cmp
rcll
movsl
add
push
jp
hlt
lahf
testl
adc
test
std
enter
int
cmp
enter
stos
loop
fs
xchg
jb
mov
jecxz
push
xlat
push
cmp
insl
push
xlat
pop
fcomps
iret
lds
push
mov
into
or
arpl
sahf
push
mov
ljmp
cmp
enter
sahf
pop
mov
add
cmpsb
cmp
adc
leave
incb
jge
daa
mov
aas
in
or
and
arpl
pop
testb
fsubrs
lcall
mov
ret
sbb
cwtl
lret
lds
test
movsb
in
add
xchg
and
pop
movsl
stos
lahf
pushf
lea
aas
jnp
mov
push
mov
lret
inc
es
inc
pop
push
mov
outsl
push
adc
adc
add
fdivrl
cmpsl
or
mov
push
pop
lahf
or
std
enter
fs
jmp
sbb
lcall
enter
sahf
xor
scas
cmpsb
push
adc
mov
push
dec
test
test
fs
dec
xor
and
push
add
cwtl
movsb
adc
rol
lcall
mov
idiv
stos
dec
xor
dec
fmuls
dec
insb
pop
popw
mov
inc
ret
ljmp
mov
jp
lahf
sbb
mov
fadd
lret
test
push
lods
xor
repz
out
clc
and
dec
inc
sub
cmp
pop
sub
test
popa
test
inc
xchg
mov
xor
rcrb
push
out
daa
xchg
pop
mov
test
cmp
mov
and
test
xchg
daa
popf
sbbb
push
and
add
iret
shl
lods
sbbb
inc
mov
mov
mov
push
push
add
lods
or
and
or
xor
or
inc
fadds
inc
mov
mov
movsl
insb
and
or
cs
push
in
xor
dec
xchg
rcr
repz
add
mov
dec
cmp
push
iret
adc
inc
xlat
ljmp
clc
pushw
ljmp
jbe
jl
pop
icebp
rol
push
or
ficomps
xchg
dec
scas
filds
lcall
scas
jl
sbb
mov
addl
or
pop
cli
data16
ret
stos
insb
mov
push
and
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
das
iret
fidivrs
out
in
and
fmull
orl
fwait
adcl
push
mov
pop
aam
jl
sarl
movl
test
add
inc
cld
jmp
lcall
pop
sub
fistpll
push
push
dec
fidivrs
loope
jg
shrb
shl
lods
in
ds
popa
pop
and
les
xor
call
sbb
clc
movsl
je
iret
jle
cmpsb
and
pushf
repz
mov
sub
int3
jg
dec
jecxz
into
add
data16
addb
inc
dec
popf
pop
add
pop
inc
in
add
xor
sbbb
int3
xor
lods
sbb
bound
loopne
js
mov
adc
ss
inc
iret
jne
pop
cmp
xchg
dec
and
mov
mov
sub
outsb
loop
into
outsl
into
stos
mov
mov
ja
es
cmc
sub
add
aam
pop
push
orb
popa
mov
in
pop
shrb
xchg
popa
xchg
inc
pop
xlat
mov
dec
js
decb
fdivrs
nop
cltd
xchg
cltd
iret
dec
add
cmpsl
repnz
jmp
sub
inc
ds
lods
cli
mov
sbb
cmp
test
pop
out
lcall
test
dec
xchg
negl
test
lds
arpl
insb
xor
in
loop
sahf
sti
xor
call
inc
lahf
rdtsc
outsb
jne
push
stc
scas
jno
inc
clc
add
mov
xlat
mov
sbb
pop
or
adc
pop
je
adc
mov
ja
pop
inc
repz
out
movsb
dec
add
sub
adc
jne
xlat
adc
or
in
or
outsl
lea
pop
inc
in
dec
stc
push
mov
mov
mov
je
dec
lock
and
lret
or
cmp
inc
jmp
insl
test
xchg
jecxz
xchg
repnz
lcall
xor
push
push
repnz
jne
or
into
push
cwtl
lahf
and
cltd
int3
ror
mov
shr
lods
loope
xchg
mov
mulb
sub
push
out
addb
inc
adc
sahf
ret
addb
ss
or
pushf
push
pusha
xor
and
icebp
bound
and
repnz
sbb
pop
xchg
jecxz
fists
cmpsb
in
adc
fldl
js
ljmp
pop
adc
cwtl
hlt
sub
into
aad
pop
je
aad
jne
fcompl
mov
cld
sahf
in
ret
test
sti
testl
or
jge
mov
rcr
push
pcmpgtw
jl
sub
sbb
inc
test
adc
rorb
gs
cmpsl
in
loope
call
dec
lea
cwtl
jp
push
sbb
lret
fwait
mov
push
mov
xor
in
cld
ret
scas
ss
dec
push
imul
dec
mov
es
xchg
test
fnsave
jl
ret
pusha
mov
enter
pop
enter
insl
mov
and
inc
fidivs
scas
mov
mov
std
or
pop
mov
test
inc
insb
xlat
add
dec
shrb
jae
out
fs
popf
insl
aam
sbb
imul
insl
repnz
adc
pop
xor
add
loope
xor
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
lcall
sbb
rcr
out
stos
cld
int3
or
in
add
in
mov
xchg
popf
jl
jne
lods
shl
fldcw
popa
sub
pop
and
pop
jns
cmp
add
bound
fwait
dec
mov
mov
icebp
shl
inc
popf
cli
add
and
out
mov
nop
mov
cmp
add
jmp
dec
or
push
jecxz
mov
pop
push
inc
fs
mov
mov
mov
adc
add
mov
sbb
loop
movsl
add
xchg
cmp
popf
dec
call
popf
je
filds
pop
xchg
hlt
into
fxtract
loop
movb
mov
xlat
push
xchg
aaa
xlat
cmp
mov
in
add
add
inc
dec
aam
fidivrl
iret
int3
cmp
xchg
xor
dec
cs
outsl
mov
dec
cld
out
das
fwait
dec
sbb
iret
or
aam
push
leave
jae
jbe
or
lcall
popf
rcrb
mov
in
das
dec
sbb
stos
cwtl
imul
inc
cld
xchg
in
in
shl
cmp
dec
inc
sti
leave
mov
push
push
data16
mov
mov
mov
mov
add
cmp
sub
arpl
adc
sub
sub
pusha
fmuls
pop
imul
aam
mov
cwtl
sub
scas
insl
and
or
fbld
mov
call
cmpsl
loope
nop
int
addr16
sahf
xchg
mov
loopne
test
test
cmpsb
push
stos
fidivl
push
cs
or
mov
inc
dec
outsl
pop
xor
sahf
das
test
fidivs
mov
add
lahf
push
jecxz
mov
mov
data16
or
and
ficoml
jbe
xor
jp
lea
movsb
xchg
jecxz
pop
adcl
push
rorl
push
add
or
push
jp
xchg
mov
push
into
jns
push
das
call
sbb
dec
idivb
push
shll
out
cwtl
fisttps
jb
movsl
fs
std
jnp
je
inc
and
and
mov
xchg
outsb
push
cmp
push
setge
or
in
jge
or
addr16
adc
fcoms
cmp
les
dec
adcl
sbb
push
roll
add
dec
jl
inc
pop
in
mov
push
sbb
mov
add
sub
jno
neg
fists
scas
pop
push
cld
jecxz
fimuls
pop
mov
cmpsb
shrl
xchg
mov
inc
out
flds
repnz
call
pushf
imul
xchg
and
adc
pusha
mov
out
mov
inc
aaa
mov
nop
push
pop
and
mov
std
adc
mov
xor
cmp
test
mov
cmp
push
mov
mov
sub
xor
and
cwtl
mov
imul
xor
fcoml
mov
shrl
lret
pop
adcl
iret
push
int3
pop
lcall
push
test
sub
test
leave
jnp
push
mov
add
add
pop
cld
or
pop
movsl
push
out
mov
call
add
sti
into
inc
push
test
sub
repz
cmc
psubusw
jmp
fidivrl
push
and
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
jne
and
movsl
push
sbb
sub
jb
push
dec
sbb
xor
push
in
int
mov
ret
add
xor
pop
push
sub
mov
xchg
adc
rcrl
iret
xchg
aaa
or
out
xchg
fildll
dec
addr16
jo
pop
scas
aas
mov
std
xlat
fsubr
lds
repz
mov
sbb
lret
xor
cmpl
mov
movsb
or
push
imul
mov
sub
pop
add
std
xor
mov
out
or
test
cmp
jne
rcll
jle
cli
ja
in
jge
pop
cs
movsb
rcrb
sub
ja
cli
xchg
fdivrl
xchg
adc
xor
ljmp
pop
dec
pop
fcomip
push
imul
call
mov
repz
dec
std
mov
rclb
mov
into
push
cmc
nop
xor
mov
or
popa
push
jmp
pop
mov
insb
add
xchg
repz
add
aas
sbb
lods
sti
jmp
pop
xor
bound
sub
dec
es
xor
mov
sub
mov
sbbb
mov
add
cmpsb
jb
xchg
xchg
mov
icebp
pop
mov
add
xor
mov
jmp
or
int3
testl
mov
sub
ret
pop
fisttps
int3
inc
sarl
mov
fcomi
add
jl
iret
es
aam
mov
push
push
les
rolb
mov
add
test
ss
cmp
cli
pop
pushf
std
test
dec
cmp
jmp
sbb
xchg
shll
mov
sub
adc
test
outsb
push
push
pushw
sub
cmpb
mov
push
add
cli
sbb
lcall
xchg
and
sti
xor
imul
cwtl
push
icebp
xchg
int3
pop
dec
cmc
jmp
fs
aaa
clc
xchg
pop
cld
out
push
dec
out
add
push
lock
daa
pop
inc
test
or
xchg
dec
subb
pop
add
sbb
mov
ret
outsb
pushf
jb
sub
frstor
std
xorb
mov
cli
cli
and
cmp
fadds
pop
jbe
imul
adc
mov
push
outsb
inc
mov
sbb
shrb
or
mov
stos
rolb
and
sbb
xlat
inc
stc
in
sbb
stos
cli
insl
cmp
cmp
iret
push
sbb
pusha
outsb
sub
out
dec
jno
pusha
fildll
gs
addr16
push
enter
jp
inc
imul
ret
movsl
call
mov
push
outsb
dec
clc
aad
pop
aas
inc
xor
leave
rolb
xchg
scas
jno
mov
mov
pop
or
push
les
int
sbb
cmp
das
ror
aaa
dec
dec
push
dec
pop
jno
mov
or
enter
adc
mov
jae
popf
fiadds
dec
lods
mov
pop
iret
out
stos
mov
imul
cli
cli
and
add
push
out
mov
mov
in
pop
out
or
fistpl
push
int3
aas
mov
add
enter
aad
test
add
push
daa
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
xchg
fmuls
test
dec
pop
loope
cwtl
push
inc
imul
jmp
leave
adc
aaa
mov
mov
inc
pop
xchg
fs
leave
xchg
mov
xchg
das
jecxz
insl
mov
cltd
inc
pop
adc
add
ss
bound
imulb
dec
jbe
dec
ret
xor
inc
sbb
fstp
xchg
xchg
je
fisubrs
lods
les
js
movsb
stc
inc
or
jmp
inc
adc
jb
sub
out
outsl
popa
sbb
mov
cmc
mov
xchg
js
sub
dec
pop
dec
repnz
clc
aas
clc
mov
mov
xchg
mov
fidivrs
mov
xchg
les
add
jl
std
sbb
loope
test
je
iret
and
sbb
and
xchg
jg
fwait
inc
and
test
xor
pop
test
out
call
lcall
and
or
sub
mov
js
pusha
stc
push
shrb
pusha
mov
movsb
mov
aad
pushf
lea
shll
in
xor
bound
cwtl
rol
inc
jbe
cwtl
mov
add
inc
mov
dec
nop
loop
lcall
mov
pop
mov
add
sti
cs
ja
mov
idivb
xor
movsb
leave
test
mov
xchg
popf
int3
jp
mov
movsl
es
dec
mov
jl
xor
pop
rol
es
xchg
jbe
cmpsb
cltd
inc
add
and
pop
cmc
std
stos
xchg
sbb
mov
stos
or
sti
mov
add
fucomi
hlt
jne
dec
pop
sahf
sbb
mov
mov
loope
or
test
or
inc
push
dec
push
dec
mov
xchg
loop
sti
or
pop
jbe
enter
jg
sbb
rorb
jle
and
mov
aad
mov
into
rolb
xchg
jmp
jle
xor
xlat
jno
adc
xchg
cli
stc
rcl
sti
jae
and
mov
cli
xor
lahf
or
mov
lcall
jne
sub
inc
xor
sbbl
clc
xchg
mov
enter
js
out
add
sub
xor
adc
adc
cwtl
int3
push
ret
pop
xor
repnz
imul
adc
xor
or
sarb
jge
push
sbb
xlat
lock
xlat
jmp
inc
jmp
jmp
push
int
add
jg
dec
scas
fnsave
pusha
sbb
jmp
push
push
inc
aad
call
bound
pop
loope
inc
shll
mov
in
mov
ja
loop
adc
ljmp
aaa
mov
rolb
es
pavgw
ffree
jge
in
testl
pop
icebp
mov
xchg
mov
adc
fstpt
int3
lods
sbb
lahf
ds
jmp
jb
outsl
ds
lea
rorb
xchg
xrelease
xor
xchg
push
mov
jge
or
add
xchg
stos
arpl
dec
int3
out
lahf
imul
cmpsl
repnz
mov
sti
sti
jg,pn
icebp
daa
mov
aad
dec
int3
inc
flds
xlat
dec
iret
retw
rorb
int
pop
mov
data16
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
sub
jo
xchg
push
sbb
fidivl
aaa
mov
enter
decb
adc
xchg
repnz
les
jne
movsb
xchg
out
sahf
jnp
adc
test
jle
mov
push
movsb
and
xor
xchg
sub
push
adc
sub
ss
jecxz
and
jecxz
push
stc
jne
mov
push
fistpl
cmc
in
adcl
loope
sub
out
pop
inc
and
filds
jmp
adc
pop
popf
mov
ljmp
repz
xchg
add
mov
lea
xchg
shl
ds
inc
mov
xchg
mov
cwtl
pop
dec
jnp
stos
jns
mov
pop
pushf
imul
xor
mov
mov
jmp
sbb
std
xor
iret
fldcw
enter
and
leave
mov
or
adc
movsl
test
lods
or
add
divl
mov
pusha
int3
jecxz
dec
lret
repnz
and
popa
shrb
inc
push
test
aaa
or
inc
xchg
inc
cmp
adc
push
xor
xlat
in
add
addr16
inc
repnz
jb
insl
jb
dec
mov
addr16
mov
cltd
in
lret
push
shlb
out
out
add
and
or
dec
add
jle
jo
dec
stos
pop
dec
sub
mov
dec
mov
xchg
jb
or
scas
pop
fwait
or
xor
data16
mov
sub
rcl
popa
call
mov
mov
sahf
xchg
sbb
lret
push
xchg
jo
or
dec
stc
int3
mov
movsl
sub
notb
inc
negl
add
inc
push
ffree
mov
lds
jnp
mov
iret
mov
xor
push
mov
xchg
or
adc
testb
pop
fsubrp
ds
inc
xchg
loopne
out
pop
xchg
sub
sub
pop
mov
jle
add
lret
call
xor
subl
push
mov
clc
dec
dec
push
xorl
inc
dec
jg
mov
mov
xchg
pusha
jp
cltd
arpl
fstpl
hlt
je
xlat
fisttpll
sub
adc
sub
lahf
dec
dec
jbe
shlb
insb
scas
mov
jbe
cmp
adc
mov
das
movsl
sub
cld
xchg
cmp
inc
frstor
scas
fldenv
inc
ss
insb
cs
sub
lock
loop
pop
jge
jb
aas
jmp
mov
in
xchg
xorl
jmp
loope
insb
jne
bound
dec
scas
cltd
ss
loopne
lret
fnstenv
movsl
mov
or
shr
mov
aam
es
test
sbb
xchg
mov
shrl
shrb
arpl
in
pusha
scas
mov
inc
cwtl
dec
pop
in
shll
pop
out
data16
or
xlat
ds
add
cmp
notb
hlt
es
js
mov
and
mov
inc
fistps
add
stc
pop
or
jl
or
add
mov
or
or
push
push
popf
and
scas
data16
out
mov
inc
lcall
sub
mov
jmp
adc
js
out
sub
or
jge
movsl
outsl
pusha
outsl
xchg
xor
mov
jns
shrd
shr
mov
mov
mov
jmp
push
or
sbb
loope
mov
adc
sbb
cmpsl
insl
xchg
out
in
fcomps
movsl
cwtl
fistpll
mov
mov
sbb
pop
in
je
sbb
sarb
and
add
inc
mov
test
mov
scas
push
xchg
xchg
mov
out
jmp
push
mov
fpatan
pop
mov
xor
stos
xchg
clc
sub
xchg
scas
push
shlb
insb
lcall
dec
and
mov
xchg
loopne
push
mov
cmp
inc
xor
mov
lods
jle
data16
jmp
xchg
dec
lahf
add
xchg
les
cmpsl
insb
sub
lahf
addr16
cmc
xchg
ljmp
leave
lret
xchg
into
repnz
loopne
test
lret
push
xchg
cmp
mov
fists
jmp
pop
cmp
loop
push
and
mov
insl
or
bnd
inc
mov
mov
jg
addr16
push
popf
ret
lahf
pop
fsts
and
adc
in
push
pop
mov
inc
bound
dec
in
mov
or
dec
int
mov
cmp
sub
dec
mov
insb
loope
fs
sahf
xchg
pop
add
mov
xchg
insb
inc
and
inc
imul
and
sbb
add
ss
orb
mov
push
mov
aad
pop
xlat
or
mov
pop
sahf
jmp
xchg
call
and
in
adc
pop
mov
or
subb
adc
fld
xchg
cltd
stc
mov
add
fsubs
jg
pop
adc
jge
cmp
sahf
movsb
pop
adc
adc
mov
inc
pop
or
mov
jbe
popf
mov
imul
dec
arpl
sbb
xor
or
in
xor
out
addr16
cmc
sbb
jecxz
adc
push
push
ret
out
sub
in
pop
out
insb
fidivrl
inc
fmulp
imul
and
add
push
or
cmp
scas
mov
mov
aas
dec
ljmp
mov
cmp
dec
xchg
mov
cli
je
jmp
fisttpl
mov
loopne
pop
push
lret
cmc
sbb
jo
push
iret
xor
ljmp
test
cmp
lea
mov
sub
popf
sub
inc
add
sbb
xchg
mov
aam
stc
test
or
dec
or
push
scas
mov
push
call
jb
shll
or
lret
push
dec
push
cld
iret
lahf
xlat
aaa
lods
push
lret
mov
iret
lahf
push
aad
mov
lea
enter
sub
sub
xor
and
out
cli
je
emms
dec
mov
xchg
inc
divb
js
push
test
pop
lret
xchg
mov
iret
jl
or
pop
lock
repnz
xor
inc
cli
test
add
scas
call
hlt
icebp
js
or
imul
ret
daa
int3
notl
push
sub
adcb
loop
repz
mov
addr16
add
js
imul
lock
scas
cwtl
ljmp
adc
test
and
sbb
sub
int
jecxz
loope
outsl
rcrb
scas
popa
mov
lea
fiaddl
mov
push
loopne
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
xchg
or
mov
sbb
out
add
gs
xchg
sbb
sarb
rcll
fwait
loopne
mov
jb
test
jp
cmp
mov
cmpsl
mov
and
nop
inc
sbb
push
aas
pop
mov
pop
aam
insb
jp
or
int3
cmp
jp
xchg
out
mov
aas
sti
fcmove
dec
xor
push
lcall
cmpsl
int3
fdivrs
cmpb
xlat
add
movsl
mov
sbb
jns
stos
cmp
adc
push
lcall
mov
pusha
push
add
mov
xchg
cmp
scas
pop
jmp
sbb
and
mov
add
mov
xchg
stc
push
xchg
ljmp
xchg
inc
pop
cmp
adc
or
repnz
sbb
lock
adc
repnz
arpl
idiv
pop
cmp
mov
mov
jp
pop
xor
or
bswap
addb
shrl
stos
mov
or
cmpsb
fmuls
jmp
xlat
sbb
shll
or
push
outsl
shlb
xchg
nop
jo
cmp
push
pop
cli
jnp
out
das
jae
adc
mov
sahf
mov
or
jbe
lea
pushf
lea
test
xchg
inc
push
fisubrs
jmp
int
jle
jns
fisubl
cltd
inc
push
xor
pushf
je
xor
sti
scas
sahf
inc
js
inc
push
mov
loopne
in
rclb
mov
loopne
jb
mov
lock
adc
cltd
leave
hlt
aaa
cmovg
push
js
jg
jecxz
cmp
mov
fs
adc
xlat
data16
mov
ja
sub
xchg
push
sbb
inc
inc
aam
out
icebp
call
les
stc
mov
das
in
lret
in
movsl
mov
push
fisubl
scas
dec
sti
cmp
pop
mov
imul
test
es
fistpll
or
sub
lods
sub
enter
sbb
sbbl
pop
in
fdivl
push
or
or
dec
push
dec
push
mov
in
adc
mov
fs
fsubr
lret
or
cmp
cmpsb
pop
jl
sbb
mov
push
cs
xchg
and
scas
push
push
mov
into
js
out
nop
gs
rcrb
add
jb
ret
ret
daa
rclb
bound
out
cmp
jne
and
mov
xor
add
movsl
mov
cmpsb
sub
insb
mov
mov
cwtl
sbb
imul
push
mov
mov
std
hlt
aam
push
sbb
jmp
ucomiss
jne
dec
loop
pop
arpl
cld
sbb
sbb
sarl
scas
sub
add
mov
lret
adc
gs
fisubrl
dec
test
mov
mov
std
jnp
icebp
clc
push
pop
mov
in
dec
inc
into
jmp
arpl
and
fsts
dec
ret
and
fwait
js
inc
lret
arpl
sbb
pop
push
les
mov
fnstenv
fwait
inc
mov
xor
mov
xchg
ds
in
shrl
repnz
or
jae
xor
push
adc
adc
cmp
lret
push
and
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
sbb
push
stos
add
sbb
rolb
inc
and
mov
cmp
and
pop
cmp
xchg
push
pop
xchg
daa
mov
mov
cltd
dec
add
push
sti
jle
jmp
lock
jle
push
lock
cmpsl
ret
mov
xchg
or
sbb
pusha
inc
js
stc
jns
cmp
push
out
inc
xchg
lret
mov
lock
imulb
dec
sbb
mov
sbb
sub
testb
into
pop
arpl
daa
repz
bound
mov
adc
movsb
sbbl
jbe
pop
xchg
jae
test
hlt
push
or
stos
cwtl
inc
repz
pop
cmpsl
test
out
ja
subb
jmp
xor
std
test
aad
imul
repz
and
out
outsb
xchg
aam
jo
mov
ja
out
nop
rcl
ss
test
jmp
loope
in
adc
jle
sahf
mov
int3
sub
test
sub
sub
pop
push
adc
mov
int3
pusha
cmp
lahf
mov
push
repz
cmpsl
cmp
jae
ds
dec
or
mov
nop
cld
movsl
pop
cmp
shlb
jbe
ljmp
xchg
adc
sbb
mov
mov
or
sbb
mov
add
mov
mov
aad
sahf
xor
jae
push
icebp
in
and
adc
aas
lret
call
aam
dec
inc
mov
xor
mov
mov
xor
push
sbb
sbb
cmp
call
and
sti
pop
cmp
mov
aaa
shrl
repz
mov
fcmovne
int
inc
push
pop
add
fdivp
pop
fistpll
jecxz
push
aas
mov
loop
mov
rcll
out
rclb
jae
sbb
in
mov
outsb
scas
adc
lods
fisttpll
cmpsl
pop
mov
push
xchg
data16
pop
insl
repnz
jns
je
icebp
iret
fcompl
leave
dec
mov
leave
dec
std
jg
sbb
xor
jo
mov
xchg
cld
push
mov
les
xchg
mov
out
inc
gs
and
paddb
rorl
sub
xor
inc
mov
dec
mov
mov
test
cmp
push
nop
mov
dec
xor
int
fisttpl
js
cs
lahf
push
rorb
sub
loope
xchg
xchg
mov
jae
or
xchg
jmp
jg
pop
dec
jae
pop
sub
sub
mov
subb
sbb
and
cmp
jp
xor
add
pop
movsb
shrb
xchg
adc
mov
icebp
mov
lock
mov
rolb
pop
xchg
cmc
cmp
clc
xor
lock
or
aam
nop
in
jecxz
xchg
nop
shl
xchg
arpl
into
popf
xor
in
mov
pop
stos
inc
xchg
jae
inc
cmp
lods
cmpsl
mulb
push
daa
xor
sbb
sbb
insl
xor
in
dec
pop
cwtl
fnstenv
cltd
jnp
in
aad
add
imul
lods
imul
and
mov
inc
insb
cmp
insb
xchg
xchg
nop
dec
out
sbbb
or
inc
loopne
test
jl
xchg
jecxz
pop
or
aam
dec
in
ret
adc
movsl
sbb
mov
test
pop
sbb
adc
cs
divl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
cwtl
aas
push
stos
cmpsl
jns
sbb
add
mov
mov
jb
lcall
add
push
sbb
outsw
push
loop
sbb
scas
imul
jmp
and
adc
mov
jns
xchg
xchg
pop
shlb
mov
push
mov
outsb
pop
dec
loopne
daa
cmp
cmp
xlat
jnp
dec
mov
lds
fisttpll
add
mov
inc
or
movsl
in
jns
and
ss
add
frstor
mov
das
jle
push
repnz
mov
or
test
insb
jl
in
pop
mov
ret
movsb
jnp
push
jmp
xchg
scas
daa
cld
sbb
adcl
pop
mov
gs
jb
loop
sbb
jle
mov
jmp
nop
inc
or
push
jecxz
lret
cmpb
push
scas
mov
roll
jmp
add
push
outsl
sbb
sbb
js
lahf
xchg
out
xor
loope
stos
inc
mov
pop
rcrl
in
and
mov
xchg
test
dec
cs
out
mov
fs
es
adc
ss
aam
or
or
jnp
mov
adc
popf
insl
shrl
inc
mov
push
in
jle
sbb
pop
lods
and
mov
dec
test
aam
cmpsb
or
scas
dec
cltd
pop
movsl
jae
fdivs
addb
dec
xor
xchg
jle
mov
cmpsl
mov
and
push
jno
adc
pop
aaa
xor
or
int
ror
push
cmp
jae
fs
xchg
mov
push
inc
loop
pop
iret
bound
jecxz
cmp
pop
mov
sti
mov
bound
jecxz
fs
out
insb
adc
lahf
xorb
or
mov
pop
jecxz
xchg
in
or
dec
mov
sbb
lea
jno
repz
fs
xchg
jmp
add
cwtl
mov
jnp
sub
icebp
pushf
stc
jg
lods
pop
sbb
cltd
mov
imul
mov
enter
mov
sbb
xor
sbb
cmp
idiv
pop
cwtl
push
pushf
xchg
fmul
loopne
insl
jb
pop
mov
mov
lods
je
jne
mov
shl
repnz
int
adcb
add
jmp
or
inc
in
fcomip
mov
aaa
cmp
pop
fs
popa
and
dec
pop
cwtl
pop
daa
inc
int3
xchg
dec
and
repz
xor
repnz
adc
rcr
repz
lret
imul
or
xor
or
dec
aas
sbbl
lods
sbb
or
rcll
es
lds
inc
add
dec
dec
xor
mov
sub
outsl
sti
and
sbb
dec
inc
ffreep
push
loopne
pushl
imul
xchg
into
push
inc
hlt
add
jnp
pushf
jns
ja
mov
lret
inc
cli
sti
mov
scas
jmp
pop
jnp
pop
int
addl
mov
jns
cli
xchg
push
out
and
fisubrs
sub
xorl
mov
call
pop
cmpsl
sbb
aaa
test
fcoml
unpckhps
lods
xchg
lret
pushf
dec
sahf
adc
imul
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
dec
push
stos
dec
jae
sbb
jmp
rcrb
cmp
ret
sub
pop
shrl
out
popa
xchg
dec
xchg
inc
leave
enter
push
stos
cmp
dec
shrb
cmpsl
cld
lock
int
xlat
lcall
clc
cmp
jno
repz
rolb
sub
cwtl
or
pop
jns
fwait
rcll
push
or
sbb
and
xlat
and
stos
loopne
aas
inc
in
popa
adc
jecxz
or
sbbl
das
dec
mov
pop
push
mov
int
in
or
rol
adc
popf
sbb
jno
xchg
inc
popa
inc
lret
push
mov
lcall
hlt
hlt
push
decl
mov
gs
test
popf
xchg
loopne
add
jnp
sbb
int3
add
stc
jbe
fists
adc
cmpsl
push
in
shl
sarb
dec
es
or
adc
sub
mov
test
je
cmpsl
xchg
leave
je
add
fdiv
sub
repnz
imul
dec
push
mov
rcl
pop
dec
dec
fisttps
adc
insb
shl
stos
mov
xchg
out
xchg
ss
push
shll
or
icebp
ret
cmp
inc
ror
sub
jg
push
sbb
out
enter
push
xchg
es
dec
test
scas
aam
lret
sbb
stos
pusha
pusha
jmp
popf
sub
xchg
fistps
int3
add
xchg
jecxz,pn
sbb
mov
clc
inc
cs
fiaddl
sbb
pop
fisttps
cmp
outsl
jp
or
xchg
subl
pop
std
sbb
lock
dec
imul
test
inc
or
jne
int
xchg
mov
and
jle
cmp
pop
rcrb
fcomi
cmc
and
bound
fs
insb
aas
leave
xchg
and
cs
lods
mov
out
in
fcmovne
lods
cmc
xorl
pop
inc
adc
sbb
adc
aas
out
sub
adc
xor
sbb
and
push
mov
adc
xor
sbb
out
adcl
mov
jp
jge
insb
mov
int
pushf
dec
dec
xchg
and
cmp
pop
setbe
mov
push
pop
jl
xor
call
aad
adc
loop
scas
std
cmpsl
nop
daa
mov
ljmp
gs
shrb
mov
add
loopne
xorl
mov
leave
cli
lods
leave
xor
jle
test
rolb
mov
xchg
xchg
and
repz
xor
xor
xchg
xchg
pushf
xor
aad
adc
xor
pop
rcrb
push
fdivr
adc
push
aam
pop
cwtl
fdivr
lahf
dec
jmp
push
pop
rcll
movsl
mov
stos
insl
repz
pushf
fsubs
movsl
test
or
mov
push
mov
loop
push
jbe
stos
adcb
dec
ljmp
cltd
pushf
negl
and
movsb
push
sub
das
mov
leave
adc
or
mov
xchg
pop
or
pushl
repnz
int3
cmp
iret
loope
add
ret
loope
xor
fwait
repz
cs
dec
sub
stos
jne
inc
pop
pop
dec
adc
outsl
mov
xchg
inc
pop
pop
add
xor
dec
inc
stos
mov
in
sub
mov
xchg
xor
adc
pop
mov
call
in
or
pop
jns
cmp
pop
clc
mov
cmp
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
push
idiv
push
imul
mov
bound
bnd
mov
mov
aad
lret
mov
rcl
es
call
add
jns
and
mov
adc
jbe
pop
sub
testb
das
xchg
dec
jle
inc
cmp
dec
mov
fidivrs
outsl
xor
scas
mov
in
imul
lcall
hlt
and
jae
gs
jo
andl
adc
push
fxch
sub
das
stos
outsb
or
jbe
sub
cmp
js
or
and
pop
mov
mov
pop
stc
je
cmp
fxch
bound
mov
sarl
mov
call
dec
pop
mov
in
pop
mov
aam
xor
pop
sbb
popf
popf
lahf
out
lret
mov
push
pop
scas
push
inc
pop
call
mov
aam
sbb
xor
and
push
jno
rolb
xchg
ss
aas
jbe
adc
shrb
sahf
dec
test
sub
mov
xchg
cmp
mov
rorb
cwtl
push
jecxz
sahf
dec
mov
sub
and
out
xchg
sbb
mov
xorl
fwait
imul
inc
push
cltd
jb
popa
lret
xchg
jp
cmp
mov
repnz
push
sahf
popf
lcall
out
stos
lret
imulb
mov
sar
sub
sub
mov
and
sbb
mov
outsl
popa
lds
push
enter
inc
cmp
push
stc
popf
pop
xchg
enter
add
inc
cmp
push
stc
xchg
test
int3
scas
inc
push
test
bound
dec
mov
les
and
test
push
jge
xchg
push
pop
in
jp
mov
pop
push
add
mov
lock
loope
out
jns
clc
push
push
xor
xor
xor
add
mov
addr16
xchg
adc
std
in
aam
mov
in
pop
jo
pop
push
test
pop
cmp
jnp
cwtl
cmp
nop
sub
sarl
dec
incb
xchg
and
adc
mov
rcrb
in
lods
lret
scas
xchg
jmp
test
mov
test
cmp
fdivr
das
xchg
add
mov
lahf
sbb
xchg
and
and
mov
insb
lcall
stos
dec
pop
arpl
test
push
mov
sub
mov
mov
xorb
mov
les
mov
outsl
iret
insl
stos
add
sbbl
pop
sbb
cwtl
jmp
stc
or
xor
shl
lcall
icebp
push
cltd
pusha
sub
lea
sbb
sbb
mov
adc
out
cltd
mov
sbb
ljmp
sbb
xchg
fsubrs
clc
aas
das
sub
test
dec
imul
test
lret
imul
fistl
cmp
sub
pop
mov
cmp
pop
jmp
insb
insl
adc
mov
ret
inc
in
jge
push
sbb
xchg
outsb
into
inc
repnz
cmc
div
cld
int3
inc
mov
cwtl
mov
sbb
pop
sahf
cld
shl
sbb
adc
repnz
enter
mov
xlat
and
or
dec
jmp
mov
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
and
stc
loop
in
es
or
filds
xchg
dec
aam
movsl
lcall
into
lea
add
xor
pop
les
sub
xor
push
ret
ficompl
in
xchg
jne
fcmovnu
and
mov
adc
xor
scas
adc
push
inc
loop
push
insl
xchg
jb
pop
dec
stc
pusha
ljmp
daa
and
pop
mov
out
stos
mov
test
adc
int3
int3
sbb
cmp
inc
push
iret
bound
fstps
mov
aad
leave
lahf
mov
out
dec
aas
and
insb
add
emms
ds
jae
inc
inc
dec
sbb
fs
idiv
and
loop
inc
push
sub
ja
cmp
xchg
inc
test
jmp
das
lcall
mov
inc
fwait
and
fsts
mov
fcoms
sti
push
push
ds
scas
jle
sti
icebp
data16
popf
add
aam
loopne
mov
sub
push
add
jno
fmull
sbb
jnp
mov
iret
shrl
push
adc
jecxz
arpl
and
adc
mov
lods
mov
cmc
ret
cmpsl
lds
inc
rdtsc
jns
add
xor
cmp
aam
jbe
ja
mov
jl
sub
mov
xchg
add
cmpsl
test
rcr
mov
cmp
cltd
dec
add
adc
xchg
and
in
xlat
repz
cmp
push
int
ret
jge
xchg
es
mov
mov
add
adc
xor
notl
dec
fisubs
gs
loope
dec
cmp
sbb
out
mov
ret
in
push
fisttpl
aas
stos
dec
jbe
js
inc
jns
in
push
mov
leave
imul
loop
loopne
jnp
jbe
sub
cmc
loope
rorb
jmp
jg
push
mov
cmp
or
inc
sub
daa
dec
sbb
cmp
stc
imul
or
cmp
in
mov
cmpsb
push
addr16
mov
mov
add
mov
or
fisttpl
adc
add
dec
ja
jo
in
sub
add
or
add
js
adcb
rcrl
in
bound
std
jnp
sub
xorb
cmpsl
pushf
sbb
mov
icebp
ja
push
testb
in
cmp
pcmpeqd
shrb
outsb
push
jecxz
popf
push
jno
jecxz
outsb
jecxz
inc
aas
mov
add
out
fistpll
sbb
or
popl
inc
inc
mov
mov
xor
cmc
ficoml
cli
cmp
mov
add
mov
push
sbb
clc
pusha
fcmovnbe
jne
dec
lret
dec
fnsave
pop
push
loope
pop
xchg
sub
jmp
sub
hlt
aam
add
inc
fistl
add
or
out
or
or
jge
push
dec
cli
pop
push
add
mov
cltd
out
cmp
lods
stc
call
movsl
push
out
sub
test
lods
dec
movsl
pop
xor
insl
and
push
arpl
imul
or
aas
sbb
xor
ret
sub
inc
jge
lods
xchg
fnstsw
or
js
ficoml
decb
daa
xchg
mov
out
xor
or
cvtps2pi
popf
inc
call
cltd
rcr
mov
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
inc
imul
cmpsl
dec
filds
inc
movl
shlb
cs
jno
inc
adc
and
cld
shl
mov
into
push
mov
xchg
add
cmp
iret
int3
cmpl
jo
fwait
pop
mov
cmp
xchg
push
nop
jae
jecxz
neg
lock
jns
ljmp
lds
xchg
or
test
mov
test
movsb
rcrb
xor
gs
in
mov
popa
add
sub
jl
or
jge
pop
xor
rcr
pop
lods
stos
pop
into
pop
loop
aad
adc
lahf
aaa
fwait
cmp
mov
push
dec
clc
daa
iret
es
ret
iret
lea
adc
rolb
jae
pop
iret
leave
in
sub
mov
inc
addr16
insb
loop
xor
push
ljmp
ficoml
lods
dec
pop
mov
mov
adc
shlb
call
and
jg
sub
and
adc
nop
pop
into
xchg
xor
sti
pushf
sahf
or
call
add
adc
xchg
xchg
je
int
cmp
jle
mov
pop
stos
out
fcoml
outsb
mov
push
aam
mov
adc
loope
pop
test
cmp
fs
mov
lods
mov
push
lahf
or
mov
sahf
rorl
mov
mov
scas
mov
pop
mov
ret
addr16
dec
inc
imul
fs
pop
jl
adc
stos
xor
das
mov
xor
movsb
enter
pop
jmp
in
jle
dec
loop
out
lahf
adc
dec
out
push
xchg
jecxz
jmp
inc
dec
cmp
bts
aaa
xchg
hlt
ljmp
mov
movsl
mov
and
out
or
enter
nop
cmp
mov
pop
xchg
sahf
lods
fwait
aaa
imul
sub
inc
mov
rcrl
mov
xchg
adc
lret
xchg
sbb
stos
adc
mov
pop
int3
loope
jo
hlt
adc
mov
mov
inc
call
add
xor
int3
repz
pushf
movsb
mov
pop
ljmp
cmp
cmpsb
mov
mov
or
mul
cmp
push
jmp
and
jae,pn
adcb
pop
int3
adcb
mov
push
lock
ds
jo
pop
lret
ss
je
cmp
sbb
fdivr
pusha
icebp
lret
add
xchg
adc
cltd
daa
pop
sbb
dec
xchg
mov
loopne
jne
addr16
sub
adc
push
loop
fwait
dec
xlat
ljmp
fwait
cmpsl
and
in
out
dec
loope
or
jo
inc
mov
shrb
shrl
pop
cltd
aad
adc
out
das
pusha
mov
push
mov
mov
in
pusha
inc
fwait
jle
cltd
add
xchg
push
pop
adc
or
jmp
push
xor
loop
pusha
push
jg
imul
dec
mov
les
jnp
arpl
mov
pop
xorb
outsl
js
roll
jbe
repnz
mov
sub
inc
mov
mov
ffreep
xchg
fistpl
push
inc
std
js
xor
ret
fs
sbb
or
mov
repnz
mov
fdivrs
ret
adc
inc
jecxz
cld
repnz
dec
xchg
and
rcl
inc
test
or
es
add
add
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
loopne
mov
push
push
sbb
js
cs
mov
push
mov
stc
push
shll
mov
adc
fnstenv
mov
push
mov
pop
sarb
jne
push
xchg
xchg
jecxz
mov
or
fucomp
add
cld
in
cwtl
repz
in
lcall
dec
xor
aaa
shll
mov
leave
add
js,pt
sbb
push
push
orb
sub
and
shrb
sti
jmp
mov
mov
pop
sbb
sbbl
pushf
into
lock
loopne
adc
movsb
stos
les
cmpsb
mov
gs
add
les
decb
aam
pop
in
xor
or
mov
xor
mov
xor
jl
movsb
mov
push
mov
xchg
pop
ja
sub
push
ljmp
adc
loopne
push
and
dec
xchg
ss
mov
sbb
mov
sbb
and
push
out
mov
into
cmp
sti
shrl
mov
inc
inc
decl
xor
sti
inc
lds
inc
sti
xchg
iret
aam
mov
xchg
pop
xchg
jle
pop
push
xchg
andl
incb
in
sbb
sub
cwtl
sub
shlb
push
add
imul
addl
push
lock
in
jae
adc
adc
mov
bound
sub
aam
inc
sti
cltd
mov
les
stos
test
mov
xchg
data16
and
xor
sar
xor
mov
jecxz
fnstenv
lahf
mov
or
sti
std
outsb
imul
gs
jmp
pop
sub
cmp
movsb
adc
pusha
js
pop
and
std
or
push
pop
pop
adc
cli
sbb
xor
sti
pop
push
mov
lock
xchg
xchg
dec
js
sbb
add
dec
das
fists
xlat
loope
das
sahf
inc
test
mov
sahf
lea
fstpt
les
xchg
push
dec
js
mov
or
sahf
sarl
out
pop
pushf
mov
ffree
inc
cmc
jle
jl
std
cmp
lock
inc
pop
cmpsb
mov
into
sbbb
xchg
xchg
enter
inc
push
pushl
test
cli
gs
mov
mov
in
xchg
mov
push
xchg
shll
int3
add
mov
shlw
push
and
mov
xchg
xor
int3
xor
sbb
ljmp
jp
push
xchg
jle
mov
sub
fsubrl
fs
loop
adc
or
mov
xchg
push
mov
push
add
cld
fists
sti
in
xchg
lods
push
and
jecxz
inc
jecxz
outsl
mov
xor
ja
adc
ret
pop
mov
xchg
push
mov
xor
pop
pop
int3
imul
call
test
into
mov
rol
mov
stc
lods
aaa
sub
inc
push
and
nop
minps
flds
out
adc
mov
xchg
cltd
out
or
inc
mov
outsl
sub
adc
shlb
cmp
cli
shlb
arpl
mov
pop
push
xchg
mov
rcl
jo
mov
dec
clc
dec
jl
mov
cmp
mov
shr
arpl
mov
sub
fsubs
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
jo
dec
push
sbb
aaa
mov
loope
scas
cmp
sbb
xor
push
mov
cmp
sub
gs
out
fstps
inc
das
jne
mov
jg
xchg
cmc
jg
push
push
popf
push
stos
iret
and
inc
dec
sbb
push
cld
push
jge
or
outsb
xchg
sub
dec
mov
and
sub
testb
jno
pop
jae
pusha
shll
inc
xor
or
lods
xchg
adc
mov
xor
aad
add
xchg
jno
inc
sub
mov
fdivs
jo
xchg
xchg
pop
addr16
inc
mov
push
outsb
xchg
pop
ljmp
arpl
lcall
or
cmc
inc
dec
lahf
jl
notb
mov
scas
adc
imul
mov
imul
cld
lods
lahf
pop
rclb
test
push
and
divb
in
mov
clc
sbb
stos
mov
dec
fs
jns
scas
xchg
push
outsb
lods
stos
sbb
mov
bound
in
fdivrl
xchg
divl
mov
push
jno
and
lods
jnp
dec
sahf
xor
or
jns
add
mov
or
mov
pop
imul
pop
dec
pop
jecxz
cmpsb
dec
icebp
sti
sbbl
in
adc
adc
add
call
flds
pop
in
test
add
test
pop
adc
jbe
insl
es
sbb
and
mov
xchg
mov
fmull
lret
divl
jbe
push
pop
inc
mov
push
fisubrl
test
mov
out
les
sarb
fs
sahf
mov
fisubs
in
out
sbb
addr16
mov
insb
xor
scas
pop
mov
mov
fistps
push
xchg
pmaxub
jbe
mov
shrb
pop
shlb
cmp
mov
hlt
mov
or
stc
and
bound
xchg
test
stos
sub
fwait
dec
aaa
jb
ret
out
mov
leave
outsb
repnz
mov
cmc
cmpsl
add
cwtl
push
pop
xor
mov
mov
pop
loop
fs
inc
and
sti
dec
xchg
sahf
push
mov
shl
in
ss
sub
mov
add
cmp
aad
inc
mov
imul
add
inc
jmp
dec
sub
iret
mov
xor
sbb
xchg
xchg
jge
xor
adc
dec
jmp
clc
dec
dec
fs
add
cld
pop
aad
pop
mov
sub
pop
add
ljmp
mov
or
stc
jmp
or
js
sbb
lret
stos
push
loope
cmpsb
mov
inc
out
ds
push
in
into
add
data16
jmp
mov
push
mov
test
push
int
in
mov
dec
adc
and
adc
into
into
outsb
xchg
xor
jae
push
add
xor
jg
push
pusha
mov
push
movsl
add
inc
push
cld
xchg
mov
out
pop
xor
push
add
mov
mull
mov
sub
lds
mov
stos
test
sub
data16
push
push
xchg
mov
lock
mov
fadds
inc
inc
mov
pop
cvtdq2ps
sbb
shl
adc
or
cmp
and
push
ljmp
sub
decl
add
mov
add
add
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
dec
mov
sbb
inc
loope
pop
pop
arpl
mov
jmp
loope
fmull
aad
ds
push
sbb
jbe
adc
mov
jge
test
decb
cmp
mov
in
pop
jl
popf
push
push
addb
pop
rorl
jp
repz
fnstsw
mov
or
mov
aad
pushf
ds
ljmp
pop
sub
push
lcall
inc
nop
cmp
sbb
mov
mov
pop
mov
inc
enterw
cwtl
lcall
fcmovnb
test
aas
cmp
push
lahf
jne
pop
daa
sbb
nop
dec
bound
push
out
xlat
mov
xor
inc
loope
xchg
or
shll
jbe
das
mov
push
adcl
inc
push
mov
xchg
sti
sub
adcb
ljmp
mov
dec
pop
aas
imul
sub
fsubl
into
mov
adc
and
pop
in
popa
dec
push
pop
push
cli
jmp
fsubrl
and
or
mov
flds
mov
add
movsb
add
jecxz
shrl
dec
dec
stos
add
in
mov
je
xchg
mov
jb
mov
dec
push
pusha
mov
rolb
jecxz
mov
das
cmp
je
mov
jle
adc
dec
push
jno
xor
mov
dec
stc
jge
nop
call
stos
das
inc
movsb
fisttpll
aas
iret
xchg
fwait
or
test
and
cmc
adc
mov
pop
sub
mov
mov
incb
aad
in
je
push
call
ja
ds
cwtl
sbb
mov
mov
insl
mov
mov
stc
xchg
iret
and
aam
jb
add
test
sbb
imul
inc
rcr
stos
pop
mov
nop
mov
adc
mov
popf
cmp
xlat
test
cmp
adc
and
and
mov
lahf
outsb
mov
jl
sub
cmp
xchg
mov
je
decb
pop
shrl
add
sti
pop
arpl
loop
cmp
pop
fstl
mov
pusha
add
sbb
pop
aam
xor
cld
mov
cld
xchg
and
arpl
jne
imul
icebp
sub
sarl
inc
call
mov
inc
cld
out
jne
lahf
pop
mov
dec
dec
xor
mov
dec
adc
scas
es
mov
add
aam
cmpsl
inc
and
pop
movsb
ret
movsb
fwait
lret
mov
dec
jge
aad
and
xor
mov
lret
push
popf
jns
in
dec
fstl
adc
add
and
f2xm1
mov
add
ss
bound
xor
xor
fadds
sahf
push
mov
add
mov
out
stos
out
dec
cmpsb
xor
xchg
fldt
xor
cmp
aad
stos
inc
and
xchg
jbe
pop
jne
fildll
pop
xchg
push
rorl
mov
push
mov
push
shrl
mov
mov
icebp
xor
mov
lret
js
adc
ljmp
negl
addr16
jne
or
inc
sarl
stos
push
mov
mov
rcrb
jp
repz
cmpsl
mov
subl
inc
add
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
lcall
sbb
xchg
sub
adcl
mov
lahf
adc
push
aam
and
inc
xor
cmp
sbb
fisubrl
jmp
notb
fldln2
sub
add
lret
jo
cmp
std
push
dec
jno
test
xchg
cs
insb
or
push
test
cmpsb
sbb
push
rcr
mov
cmp
rorl
push
xchg
push
mov
mov
inc
sub
or
je
sti
cmc
xchg
inc
and
aas
or
jge
je
inc
and
jns
push
inc
imull
mov
es
mov
into
xlat
pop
mov
mov
xchg
jmp
and
inc
imul
lods
in
addr16
pop
cs
sahf
imul
jge
push
out
or
push
mov
daa
mov
add
sbb
jb
shll
sbb
data16
pop
das
lock
pop
adc
xor
add
jl
jecxz
inc
cmc
jl
int3
pop
xchg
inc
aam
int3
mov
mov
jns
mov
out
cmp
gs
sbb
loope
pop
fcmove
jecxz
mov
mov
sahf
arpl
jns
popf
ret
ja
repz
insl
scas
sbb
movsb
lds
in
cmpsb
mov
adc
stos
xchg
and
pop
jmp
mov
sub
inc
lret
xchg
lds
cwtl
adc
adc
out
subb
inc
pushf
sub
ljmp
mov
repnz
js
dec
push
popa
lahf
cmp
popf
in
adcb
sbb
xchg
mov
sub
sbb
inc
insb
mov
lods
jp
imul
mov
cmp
shll
xlat
cld
lret
sbb
and
mov
mov
icebp
add
sbb
pop
fnstcw
sub
imul
xchg
xor
add
daa
ficompl
cmp
outsl
aam
and
ror
jmp
popa
mov
lods
stos
mov
add
int
cli
mov
pusha
fildl
push
loope
mov
dec
pop
xchg
xor
mov
jne
xor
in
jns
stos
repnz
mov
xlat
addb
cld
add
jns
leave
pop
es
es
add
sbb
cmp
ds
sahf
pusha
cmp
adc
mov
stos
jl
outsl
jae
dec
cmpl
jb
lods
xor
xor
push
sub
test
fcoms
xchg
fwait
and
adc
cld
mov
movsb
aaa
hlt
xchg
test
mov
jo
and
xchg
mov
cmp
hlt
mov
pop
pop
cld
cs
inc
clc
or
enter
daa
push
loope
mov
mov
mov
je
push
out
mov
sub
jl
xor
popf
sub
test
xor
ja
pop
loope
dec
add
jnp
pop
negl
jge
roll
loopne
jo
hlt
mov
insb
xchg
inc
popa
dec
scas
iret
xchg
and
jb
push
xor
and
mov
aam
fs
in
test
jbe
rclb
mov
push
mov
xchg
test
adc
mov
lret
or
aaa
popa
and
adc
add
gs
out
mov
jmp
shl
or
jmp
test
nop
lahf
jp
and
xor
jne
push
aaa
push
sbb
mov
loop
pusha
test
das
es
push
popa
icebp
js
mov
push
rorb
scas
pop
xchg
jg
enter
scas
pcmpgtw
das
lock
mov
out
aas
jo
jmp
jge
add
jns
jle
jne
fdivs
scas
sbb
adc
shll
xchg
in
push
cmp
adc
jecxz
call
cmp
cltd
mov
js
and
inc
push
xchg
nop
push
mov
xchg
sub
jg
std
or
mov
pop
out
inc
mov
push
clc
push
lods
sarb
fistps
gs
cmpsl
and
jge
xor
sti
out
jl
out
mov
mov
sub
mov
adc
pop
cld
pushw
cmc
cltd
cmp
and
in
xchg
mov
mov
mov
cmp
shlb
enter
mov
push
shrl
cmp
push
aaa
addr16
mov
jno
shr
addb
xor
gs
loop
cmp
ja
sbb
pop
inc
add
stc
into
jns
mov
and
xor
xchg
test
and
cmp
ljmp
stos
pop
clc
adc
sbb
fnstcw
jbe
imul
push
shlb
fadd
push
fcoms
setnp
or
xor
fldcw
add
mov
out
test
movsb
mov
pop
out
sbb
push
imul
fimuls
movsl
loop
xchg
cmp
jne
test
mov
lret
pop
and
xchg
fdiv
mov
sub
and
sti
fcomp
ja
out
into
jno
out
xchg
mov
xor
scas
out
out
or
xchg
out
insl
mov
ret
inc
mov
jl
jns
add
into
mov
bound
adc
leave
out
imul
loop
in
shrl
add
mov
lcall
mov
sbb
dec
dec
mov
jo
bound
gs
loopne
lock
or
sub
cmp
mov
data16
out
mov
jge
jl
or
sbb
arpl
or
jo
vpslld
mov
cltd
mov
mov
mov
lock
xor
sti
out
mov
jecxz
sub
ja
mov
mov
stc
adc
push
test
xchg
in
adcl
int3
inc
pop
lahf
push
inc
arpl
lret
call
sub
mov
dec
pushf
cmpsb
pop
xor
les
repnz
cmp
or
rcll
clc
inc
jge
rolb
insb
cwtl
sahf
stos
repnz
js
out
mov
adc
fildll
imul
shll
popa
in
aad
lods
das
in
fimull
aad
loopne
xchg
mov
shll
test
js
enter
out
xchg
leave
ja
mov
push
mov
decb
outsl
incl
inc
mov
jb
mov
rcrb
test
lret
dec
adc
jmp
dec
repz
pusha
pop
mov
jle
pop
outsb
dec
and
aam
addr16
mov
inc
aas
out
sti
dec
scas
push
jle
or
dec
sarb
data16
add
dec
popl
fs
jle
xorl
je
pop
aam
iret
repz
out
xchg
dec
push
scas
jecxz
outsl
push
adc
fwait
adc
imul
sub
arpl
repnz
mov
mov
push
loop
xchg
jae
sub
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
cmc
and
mov
jo
daa
mov
daa
sub
xchg
jbe
movl
cmp
jmp
inc
adc
cmpl
bound
pusha
jne
test
jmp
mov
jb
or
add
movb
cmp
pop
or
outsb
jg
ret
mov
adc
jle
neg
stos
inc
mov
jo
pop
aad
fldl
loope
pop
pop
or
mov
sbb
and
out
imul
hlt
in
mov
mov
stc
dec
push
testl
popa
imul
loope
cli
pop
lret
fucom
popf
push
dec
leave
jmp
sbb
in
fucom
idiv
sub
mov
jbe
pop
mov
inc
mul
push
ljmp
mov
in
sub
jmp
lcall
in
nop
lods
mov
out
add
out
sbb
jb
fistps
je
pop
mov
inc
and
enter
mov
xchg
xchg
loope
inc
andb
push
xchg
adc
pop
outsb
dec
pushf
loop
rcrl
sar
sub
aad
push
sub
repz
ret
xor
stos
xor
cmp
lahf
inc
cmc
or
mov
les
push
mov
loop
ds
mov
fwait
xchg
pop
sarb
adc
shll
mov
imulb
dec
loope
outsb
test
push
lret
and
cs
mov
in
repnz
adc
popa
cmp
mov
fld
movsl
int
adc
jb
jmp
push
mov
jae
push
es
andb
dec
jns
sbb
lock
insb
mov
cmp
gs
xchg
or
movsb
sub
fwait
stos
push
out
dec
lret
push
mov
aaa
xchg
pop
sub
cmpsl
push
xor
mov
fmull
dec
mov
jne
sub
leave
cmpsl
jnp
in
test
jns
dec
orb
cs
mov
call
fwait
jl
jno
cmp
and
cmp
lcall
repnz
inc
push
adc
jno
dec
cmpsl
roll
pop
in
jno
call
pop
jne
lods
fiadds
call
clc
lods
jge
es
fidivrs
jns
dec
jb
stos
or
pushf
sub
jle
cltd
fs
cltd
fsubrl
pop
dec
xor
pop
dec
jle
mov
push
fcoml
adc
jns
or
loope
push
dec
dec
push
pop
adc
cwtl
fistpll
out
add
inc
adc
mov
loopne
jp
push
push
aam
mov
mov
xchg
push
xor
add
dec
pop
call
int
xchg
fcoms
xor
or
mov
fmuls
add
cmp
jge
rclb
xor
or
mov
inc
loop
mov
add
sbb
mov
sub
sub
add
xlat
enter
jnp
and
mov
mov
adc
xchg
xor
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
jl
sub
sbb
mov
sti
xchg
jb
adc
shrb
mov
lcall
pcmpeqw
leave
pop
ljmp
mov
ret
ret
jl
sete
addr16
pop
sahf
mov
jmp
mov
loope
call
jle
mov
push
imul
sub
cmovnp
add
addl
pusha
scas
jo
push
push
xchg
dec
cmp
std
xchg
sbb
and
jbe
pop
faddl
dec
sbb
repz
jo
ds
ficoms
and
test
and
sbb
push
scas
or
aad
sbb
int
cmpsb
inc
push
data16
mov
rorl
fldenv
jg
cmpsl
lret
xchg
fidivrl
pop
jmp
mov
xchg
dec
xchg
adc
mov
push
sarl
inc
repnz
xor
adc
push
enter
mov
mov
push
adc
or
push
ficoml
call
or
push
inc
mov
ds
push
popf
push
push
xchg
aaa
out
test
jb
addb
inc
mul
outsl
mov
jnp
xadd
push
mov
mov
decb
addr16
mov
orb
ss
aas
add
pop
leave
inc
adc
add
mov
add
mov
jae
jns
mov
shrl
dec
sti
clc
add
push
test
inc
ss
scas
mov
cmp
cmp
outsb
mov
adc
incl
mov
mov
xchg
sub
mov
clc
cmp
repnz
aad
pop
xor
enter
xchg
xchg
pusha
adc
jle
nop
js
dec
clc
popl
aam
jne
cmp
fsubp
aam
xor
cmp
icebp
xchg
adc
or
shll
pop
ret
imul
adc
sbb
divb
xchg
int3
lock
push
xchg
sbb
jo
pop
pop
divb
stos
and
xor
and
xor
inc
mov
sbb
mov
addr16
stc
cmpsl
test
push
enter
mov
daa
movl
dec
add
int
push
sub
fldt
pushf
fmulp
movsl
inc
in
iret
je
sti
xorl
fildll
sbb
roll
fnstenv
lods
repz
or
inc
and
loope
adc
and
adc
lcall
sahf
daa
rorl
inc
pop
lock
mov
pop
dec
xchg
cwtl
inc
lea
aaa
or
stc
jae
push
or
hlt
adc
data16
fs
xchg
inc
loop
sub
mov
lcall
dec
imul
add
pop
cmp
pop
imul
aas
cmc
push
mov
pusha
push
sbb
sets
sahf
insb
and
mov
xchg
jge
cwtl
sar
dec
in
pop
clc
push
and
aam
cmp
inc
test
mov
pop
xchg
mov
sbb
rol
nop
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
test
sbb
stos
fldt
test
in
inc
add
dec
sbb
pop
stc
pop
mov
xchg
dec
push
loope
jecxz
pop
inc
or
arpl
aaa
call
or
adc
arpl
call
mov
mov
bound
mov
cmpsl
or
sub
cmp
jo
stos
fisttps
xchg
xchg
cld
imul
test
int3
inc
xchg
ss
aam
sub
bound
sub
je
aad
ret
jg
inc
push
das
mov
and
ss
in
std
imul
scas
adcl
fsubl
mov
dec
leave
xchg
xor
icebp
and
pop
rorb
xor
jl
or
les
insb
push
sbb
and
lahf
repnz
sti
mov
or
fstps
cwtl
push
or
call
test
adc
arpl
push
test
add
dec
dec
add
out
stc
jg
sub
jne
stos
fsubrs
cmp
push
out
push
mov
popa
cld
dec
fsubl
pop
sbb
fisubl
xor
inc
push
addr16
sub
fnstcw
jge
xor
jmp
xor
jp
adc
cmpsb
test
mov
aam
call
pop
std
lds
add
xor
sbb
add
mov
xor
in
adc
pop
jg
ret
loopne
mov
dec
or
aas
pushf
orb
mov
dec
cmpsb
xor
cmp
push
jmp
cmp
jns
sub
add
sub
xchg
and
testb
negb
push
mov
scas
lcall
test
std
and
add
cmpsl
in
mov
ss
sbb
fs
inc
mov
pop
fs
out
aaa
repz
jg
jnp
pop
inc
sbb
jno
sub
ret
movb
fmuls
jne
cmc
sbb
push
adc
push
pop
push
jg
or
mov
pop
mov
sub
sti
adc
add
fsubrl
and
stc
loopne
xchg
js
adc
sbb
xchg
xor
cltd
push
insl
aaa
xor
imul
dec
hlt
sbb
mov
and
and
int3
into
cmp
jae
movsl
std
int3
aam
adcl
clc
push
mov
mov
mov
push
pop
dec
xor
fistps
push
or
add
mov
aam
add
pop
ja
jge
lods
nop
ficomps
pop
inc
es
xchg
sbb
sbb
jmp
add
mov
ret
mov
enter
add
cmp
xchg
lcall
loopne
xchg
loope
clc
sti
in
faddp
jbe
sti
cmp
cld
bound
push
clc
daa
mov
hlt
fisttpll
xor
push
sub
out
push
jle
adc
icebp
popf
add
out
push
in
pushf
lahf
int
inc
rorb
orl
sub
mov
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
testl
sbb
inc
test
loopne
scas
xchg
loopne
inc
pop
jp
mov
or
repnz
lds
dec
dec
cmp
filds
pop
int3
mov
adc
in
mov
sbb
push
cmp
xchg
popl
lcall
mov
cmpsl
lock
add
sbb
out
gs
jecxz
push
inc
xlat
cmp
lock
sub
aam
adc
addr16
add
cld
sbb
ja
inc
push
or
stos
add
fistl
jae
ja
aam
mov
xchg
jmp
inc
sbb
es
in
mov
stos
xchg
lods
sub
lret
jae
enter
mov
push
clc
das
jo
out
jae
xor
sbb
mov
in
xor
hlt
cli
fwait
xchg
sti
test
sbb
lahf
clc
loop
sub
sub
sbb
fs
jb
jne
cli
jmp
xchg
fucom
adc
pop
dec
xchg
xor
dec
lock
xor
dec
sti
fldenv
jbe
sti
andb
jmp
jnp
ss
mov
xchg
in
pushf
xor
jns
jle
mov
push
push
mov
enter
insl
push
jae
jg
cs
push
xchg
add
pop
or
xchg
outsb
xchg
int3
jb
and
dec
dec
fldcw
pusha
repnz
test
cmpb
xchg
les
lret
jmp
cltd
sbb
jne
jne
dec
add
push
adcb
js
jnp
les
cld
mov
mov
das
push
push
ljmp
test
loope
push
cmp
aam
outsl
and
dec
lock
mov
sub
inc
jl
sbb
inc
data16
arpl
out
or
pop
fnstcw
xchg
lds
inc
mov
scas
lea
mov
pop
adc
xchg
add
scas
jno
cmpl
inc
sbb
inc
sub
cmpl
mov
lds
xchg
enter
addr16
adc
rolb
pop
push
popa
sti
jp
sbb
cli
insb
sbb
inc
fcomi
adc
imul
lods
cmp
mov
xchg
mov
adc
push
ljmp
pop
sarb
inc
lock
fsubs
hlt
dec
mov
fildll
out
test
loope
cli
into
sub
lcall
adc
push
inc
imul
inc
cwtl
jb
nop
js
or
cli
cmc
mov
aam
sub
mov
cmp
pop
dec
dec
and
mov
stc
mov
adc
push
mov
fdivrs
insb
mov
mov
adc
inc
ret
jne
movsl
ljmp
cmp
fisttps
fadds
or
jae
popf
fidivl
call
and
enter
and
mov
mov
iret
test
loop
bound
arpl
adc
mov
mov
mov
repz
push
and
test
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
sbb
push
sbb
dec
imul
iret
stos
stos
fs
adc
popf
sbb
add
popf
ja
mov
dec
pop
outsl
stos
test
ret
sti
push
adc
mov
pop
lret
js
cli
sub
inc
push
jae
je
xchg
xor
pop
lcall
addr16
xchg
sahf
cmc
mov
in
jle
rorb
ret
mov
adc
scas
rolb
mov
divl
aad
sub
dec
or
inc
es
in
loopne
pop
pop
mov
stos
bound
es
outsb
adc
jno
sub
adc
jp
sti
out
or
nop
fldl
idiv
psrlw
mov
dec
test
jns
hlt
out
cmpl
xchg
cmpsb
movb
in
mov
shll
push
lret
adc
and
inc
add
popf
mov
ds
fcmovu
jns
adc
out
mov
push
jmp
cmp
xchg
rorl
cmpsb
les
or
pop
and
rolb
cmp
ror
dec
cmc
test
pop
sahf
sub
rcr
xor
and
les
xchg
add
fs
mov
movsb
mov
mov
lret
lahf
aam
repnz
xchg
leave
aas
sbb
rcrl
lret
test
inc
pop
xor
call
pop
loope
in
sahf
jo
adc
icebp
mov
xchg
data16
pop
dec
scas
out
popa
imul
adc
inc
adc
jo
adc
sti
cmp
cwtl
add
cld
aad
ja
ret
fs
dec
sarl
ljmp
xchg
mov
xor
sbb
xchg
xor
cmpsl
mov
sub
fidivrs
mov
cmp
add
add
jo
shlb
pop
cmc
fldt
inc
bound
pop
movsb
mov
popf
mov
push
iret
mov
push
jle
outsb
or
adc
call
or
adc
xchg
into
out
rolb
push
jmp
std
adc
adc
and
in
into
ret
pop
pop
jl
outsl
xchg
popa
aas
fmul
insb
loopne
xor
aad
jo
hlt
pop
shll
outsl
mov
or
jbe
mov
ss
ret
ds
sub
xchg
std
mov
lds
sti
insb
sbb
mov
mov
inc
pop
lcall
or
add
mov
sub
ds
mov
dec
jl
imul
dec
jne
push
iret
mov
add
test
fs
and
mov
loopne
cli
jnp
test
cmp
test
adc
xor
jae
inc
pushf
add
je
mov
aaa
sbb
mov
add
mov
jno
icebp
jecxz
or
icebp
or
pop
out
stc
sub
sbb
mov
ss
mov
lods
fsubrl
mov
cli
jp
movb
shlb
mov
mov
pop
sbb
inc
and
adc
xor
sub
mov
sbb
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
inc
jo
movhps
cmp
sbb
cmpsb
mov
push
and
in
pushf
mov
add
cmc
pop
and
mov
in
xchg
xor
les
movsl
adc
inc
in
dec
jmp
std
mov
add
pusha
ficompl
and
ds
mov
ss
scas
and
pop
les
xchg
adc
outsl
sub
sbb
lahf
mov
dec
sbb
mov
adc
fisubrl
stc
in
loop
mov
mov
out
arpl
outsl
rcrl
out
cmp
in
orb
out
xrelease
cmc
inc
mov
xchg
mov
pop
outsb
es
pop
mov
fsubrs
ds
shrb
cwtl
xchg
adc
and
or
pop
and
mov
mov
sbb
jo
xchg
inc
jo
pop
jns
add
inc
std
test
fstpl
es
push
push
lret
movsl
dec
les
nop
dec
push
les
pusha
sahf
or
orl
mov
jnp
cmp
dec
nop
sub
or
dec
xchg
ljmp
pop
add
ljmp
outsl
in
daa
mov
mov
repz
cli
outsl
xor
mov
mov
dec
sub
aam
push
mov
xor
mov
sub
mov
popa
rcrl
inc
cmp
int3
mov
cmp
scas
or
rorb
adcb
sti
jle
sbbb
shl
mov
aaa
ror
aaa
push
sub
mov
mov
iret
sub
lods
xchg
shlb
cmpsl
jmp
stc
add
dec
popa
push
xor
mov
gs
push
dec
push
rolb
movsb
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
add
add
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
or
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
xchg
and
push
daa
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
shlb
add
and
inc
add
add
and
inc
add
es
add
add
inc
add
inc
add
inc
add
push
movsb
scas
or
movsb
shlb
inc
add
inc
add
es
add
inc
add
es
add
inc
add
inc
out
cmp
inc
add
inc
add
and
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
scas
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
mov
inc
add
loop
js
lcall
and
add
mov
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
cmp
dec
add
add
xor
add
add
add
add
add
add
add
adc
add
enter
in
add
testb
add
xchg
add
add
dec
xchg
add
add
add
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
test
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
add
cmp
add
dec
mov
add
add
js
add
mov
add
lods
mov
add
add
fimuls
add
cli
mov
add
mov
add
add
mov
add
add
dec
mov
add
add
push
add
orb
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
mov
add
add
pop
mov
add
add
xchg
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
xchg
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
lea
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
test
add
test
add
xchg
add
xchg
add
add
dec
xchg
add
add
add
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
test
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
add
cmp
add
dec
mov
add
add
js
add
mov
add
lods
mov
add
add
fimuls
add
cli
mov
add
mov
add
add
mov
add
add
dec
mov
add
add
push
add
orb
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
mov
add
add
pop
mov
add
add
xchg
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
xchg
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
add
