push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
jmp
adc
xor
test
jg
ss
jp
jp
cld
pop
jp
and
daa
cmp
jno
jne
fwait
jbe
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
adc
mov
or
aaa
add
or
inc
cli
out
out
ja
daa
imul
lret
cmpsl
sahf
mov
rcr
xor
mov
jl
test
push
aam
rclb
sbb
and
jge
insb
dec
ja
sub
mov
inc
shl
jl
in
roll
dec
inc
mov
xchg
sbb
push
jmp
cmp
test
xor
out
out
pushf
insl
or
jge
xchg
mov
out
ss
jle
lret
mov
jle
mov
fldenv
fs
jmp
inc
orl
add
adc
in
lcall
scas
cli
push
aam
outsb
jae
cli
pop
pop
mov
adc
cmp
shlb
fs
xchg
cltd
mov
fdivrl
test
loope
cmp
jecxz
push
mov
sahf
daa
leave
pop
addb
outsb
dec
pop
ficoml
cmp
adc
pop
lods
ds
cmp
jns
inc
es
ds
nop
add
lret
cmp
mov
mov
stc
pushf
testb
push
out
push
int
mov
push
rcll
jbe
shlb
mov
mov
push
mov
mov
mov
xor
xlat
mov
mov
mov
mov
xor
mov
or
jp
and
lock
push
test
ret
test
daa
add
fisttpl
movsb
cmc
or
dec
stos
fdivr
call
inc
jnp
popa
lods
cmp
shll
movsl
gs
imul
sbb
rcrl
xchg
push
adc
loop
lea
jmp
enter
int3
or
mov
shrb
stos
je
pop
inc
lods
inc
in
in
sbb
leave
mov
add
mov
dec
inc
shl
adc
subb
xor
push
decb
outsl
dec
out
cmpb
sahf
out
and
pop
xchg
sub
fadd
pop
fsubs
or
arpl
andb
repnz
adc
push
pop
and
gs
in
mov
xchg
aam
iret
stos
pop
xchg
push
push
lea
in
mov
and
iret
push
xor
dec
jp
mov
imull
dec
jae
jl
adc
aam
inc
stos
vmwrite
movsb
in
add
adcl
jl
sti
inc
inc
adc
lods
adc
arpl
sbb
ret
sub
ja
mov
dec
fcomip
fsubs
nop
or
rcrb
jg
xor
push
ret
pusha
sub
push
fucomi
xchg
add
or
mov
lret
ret
xor
int3
out
outsl
cmp
scas
adc
jle
sarb
inc
imul
mov
outsl
dec
test
xchg
mov
inc
mov
popf
lock
jge
xchg
lcall
in
mov
pushf
lret
push
xchg
jb
mov
mov
inc
xor
leave
xchg
push
jmp
in
xchg
jmp
cld
aas
ret
push
xchg
test
push
icebp
xor
enter
mov
js
popa
adc
cmp
mov
jp
xor
mov
sub
shlb
imul
mov
scas
out
mov
ret
inc
ss
ljmp
mov
pushl
pop
ds
test
fistpll
mov
clc
inc
inc
movsb
in
loope
insb
fldl
inc
paddw
fiaddl
xchg
dec
shl
popa
insb
cli
mov
mov
sbb
and
and
xchg
pop
es
dec
ljmp
pop
fisubs
les
add
and
mov
mov
xorb
cmp
mov
stos
jmp
xor
push
movsb
fucomi
aam
test
ljmp
pop
dec
cmp
in
push
sahf
iret
movsl
sarb
pushf
adc
out
mov
pop
mov
jle
pop
icebp
test
and
sarl
adc
inc
cmp
int3
pop
scas
mov
cmp
data16
cmp
and
jno
cltd
xchg
mov
rorb
outsb
cli
inc
loopne
mov
push
scas
sub
add
stos
mov
hlt
ret
jge
out
bnd
frstor
or
jl
push
insb
jmp
out
inc
xchg
sbbb
sbb
add
jmp
dec
adc
mov
in
jbe
adc
and
xchg
and
jno
outsb
shrl
test
xor
out
loope
pop
pop
xchg
jne
jbe
repz
sti
push
and
hlt
jg
push
pop
sub
fildll
adc
hlt
andb
loopne
inc
xor
int
lods
push
mov
sahf
adc
dec
cmpsl
jb
negl
jbe
jbe
dec
pop
cmp
call
ret
mov
lds
mov
mov
jl
dec
xchg
std
or
or
xchg
repz
jge
call
and
in
inc
es
imul
fldenv
push
dec
jecxz
ror
cmp
or
addl
adc
inc
add
adc
gs
out
clc
push
and
cmp
aas
push
lock
push
xchg
sub
pop
and
lret
adc
inc
cmp
add
inc
and
iret
xchg
cwtl
pop
adcb
and
add
movsl
add
or
push
insb
or
rcrb
pop
jle
and
dec
dec
xchg
cltd
sbb
xchg
mov
enter
add
outsl
mov
adc
lahf
sahf
push
dec
shlb
cmpsl
sahf
scas
stos
jle,pn
ret
cli
imul
push
pop
jo
mov
cmpsb
mov
aaa
decl
push
sbb
in
pop
rcll
loopne
and
rorl
cs
jl
inc
cmp
pop
fcmovb
mov
ja
pop
in
mov
pushf
pushf
lret
mov
imul
adc
les
cmp
xchg
cmpsb
inc
xor
adc
aaa
push
inc
jbe
sub
xchg
dec
test
dec
call
add
xchg
jecxz
push
sub
add
cmpsl
pop
rcrl
out
adc
pushf
or
push
cwtl
inc
sbb
lcall
aam
jl
and
sysexit
cwtl
lretw
or
jo
adc
xchg
test
mov
lcall
or
mov
or
mov
pop
xor
lea
xlat
adc
mov
add
jmp
repnz
cwtl
nop
cmp
pop
lock
xor
out
stc
sar
push
ja
pop
ret
movd
pop
mov
pop
mov
mov
pushf
adc
inc
cmc
sbb
aaa
out
jp
push
test
in
pop
or
fisubrs
inc
cltd
cld
xchg
cmp
bound
lods
mov
pop
mov
sbb
ss
stos
push
and
mov
xchg
mov
out
test
jo
iret
xchg
ret
xlat
mov
out
add
pop
push
mov
or
in
ret
jne
pop
ja
out
push
sbb
sub
mov
lea
mov
stc
push
stos
rep
pop
mov
jno
sub
lahf
mov
lahf
outsl
cltd
insl
adc
mov
aaa
es
jge
push
test
insb
sub
lcall
lcall
dec
ja
rcrl
stos
or
lds
sub
mov
add
je
sbb
hlt
adc
imul
inc
ljmp
test
lret
mov
and
cmc
or
iret
push
faddl
cli
fsubl
stc
mov
adc
adc
dec
sub
jge
scas
xchg
xor
pop
test
ss
icebp
subl
add
divb
dec
sub
dec
das
jo
dec
cmpb
add
sbb
das
mov
dec
jb
sbb
inc
imul
in
stc
mov
adc
xchg
xor
outsb
inc
xor
addr16
enter
hlt
add
add
cmp
lcall
pop
es
popa
out
lahf
testb
jmp
pop
imul
movsl
pushf
adc
or
sbb
push
ficoml
adc
std
inc
notb
xchg
lea
leave
xchg
pop
xor
lods
xor
stos
insb
outsl
dec
movsb
ds
jmp
lret
and
adc
movsl
outsb
fadds
adc
add
clc
xor
and
fidivrs
loope
lahf
inc
enter
std
shrl
aas
push
mov
sarb
push
repz
js
insl
jecxz
mov
sti
xor
mov
xchg
dec
jl
imul
mov
cltd
fmull
add
pop
mov
int
mov
lock
xchg
xor
stc
ret
sbb
lea
mov
push
mov
sti
push
rorl
in
and
fsubs
mov
pushl
push
shrb
pop
jl
adc
jl
jp
aaa
adc
pusha
jb
push
int3
movsl
daa
sbb
mov
inc
adc
sub
push
aad
repz
movsl
push
fildll
pop
inc
sub
and
cltd
push
rorl
jmp
fwait
cmpsl
lds
inc
mov
hlt
inc
iret
cmp
aaa
cltd
or
xchg
fstpt
test
cmp
test
aam
xchg
add
inc
scas
enterw
mov
aad
xchg
xor
dec
std
outsb
cmpsb
mov
sub
into
mov
cmpsl
jb
jle
cmc
fisttps
movsl
mov
add
stc
sub
push
cmp
xchg
and
mov
in
faddl
sbb
push
imul
or
in
cmp
mov
les
fiadds
dec
push
js
rcrb
clc
mov
ja
push
jg
idivl
push
lods
cli
cmp
daa
cmpsl
adc
arpl
jb
out
push
sbb
outsb
outsl
inc
xor
cmp
pop
cwtl
cwtl
lods
add
daa
popa
xchg
or
shll
lcall
push
mov
adc
cmp
cmpsl
je
dec
js
jmp
lods
jno
rcrl
push
test
cmpsl
test
jl
roll
add
pop
shlb
pop
and
dec
add
dec
inc
and
jo
nop
adc
inc
stc
xchg
mov
fmuls
pop
add
cmp
shlb
and
mov
sub
push
imull
pop
shl
xchg
imul
xchg
mov
jl
lcall
ja
fstpl
add
aam
xchg
jns
int
jg
iret
ret
pop
mov
mov
xchg
inc
imul
lret
ffree
inc
sbb
adc
pusha
xor
sub
btr
lds
in
ja
inc
test
inc
out
test
lea
inc
mov
sarb
cmp
jne
in
movsl
and
cmp
loop
cwtl
inc
leave
push
cltd
add
and
pop
push
or
xor
sti
sub
and
or
pavgb
sbb
outsb
cmp
mov
dec
outsl
insl
lea
mov
dec
mov
jnp
clc
lock
mov
dec
and
and
dec
hlt
sub
cmp
mov
pop
gs
push
cmp
xchg
mov
scas
pop
dec
out
popa
jg
jb
dec
mov
test
shl
mov
mov
mov
ret
cmpsl
mov
ficomps
mov
add
adc
fadd
jl
pop
rorb
loopne
jmp
fnstenv
dec
imul
lahf
int
mov
add
addr16
cmpsl
ljmp
cmp
cwtl
daa
scas
lods
movsb
push
negb
scas
test
arpl
cltd
adc
adc
mov
pop
mov
cmpsb
xchg
push
ret
pop
mov
insb
inc
cmp
mov
xchg
add
cwtl
hlt
dec
xor
pop
dec
push
jbe
bound
je
pop
lods
mov
aaa
pop
jnp
aad
popa
dec
jmp
mov
dec
sbb
fdivs
xchg
xchg
xor
and
push
dec
inc
and
cmp
daa
mov
stos
pop
orb
sbb
mov
jne
rcr
test
xchg
sti
outsb
fnsave
aas
or
cmpsb
xchg
cld
mov
and
fidivs
jno
mov
push
mov
sarb
fiadds
ret
xor
stos
push
js
outsl
iret
push
cwtl
add
mov
jle
push
mov
nop
push
xchg
int
clc
sub
xchg
mov
sub
mov
shll
sbbb
push
xlat
sahf
lea
int3
es
jp
and
popf
stc
sub
xlat
test
mov
hlt
mov
nop
push
dec
add
xor
cs
lahf
jo
xchg
add
xor
test
ret
or
loope
jmp
repnz
in
sbb
xchg
fwait
int3
lea
scas
jbe
adc
dec
pop
int3
jge
mov
xchg
mov
cwtl
test
gs
cmp
xchg
fisubl
movsb
inc
ret
stos
sbb
push
gs
lahf
xchg
sbb
or
int3
in
sbb
enter
xor
sar
minps
push
push
ret
sbb
mov
dec
adc
sbb
dec
xor
arpl
cmp
push
pop
mov
je
sub
push
out
or
hlt
les
jns
rolb
mov
sbb
outsl
pop
aam
in
gs
mov
mov
xchg
test
aaa
sub
arpl
sahf
or
movsl
xlat
pop
dec
test
xchg
ror
dec
adc
add
xchg
xchg
sarl
cltd
loopne
dec
ret
inc
dec
fimull
lcall
popf
scas
fs
repnz
jg
test
push
mov
or
pop
mov
mov
and
pop
in
mov
mov
shll
dec
pop
shrb
push
push
sbb
mov
pop
cmp
gs
outsb
cs
sub
add
in
nop
stos
scas
cmpsb
pop
xchg
pop
cwtl
xlat
call
xor
addr16
dec
mov
hlt
mov
mov
lret
sbb
mov
lds
mov
xor
scas
dec
jg
dec
dec
hlt
aad
xchg
pop
pop
mov
sbb
test
lret
adc
scas
mov
sarl
es
fwait
cmc
xchg
test
pop
enter
fmul
and
fbstp
repnz
jno
jae
adc
cmp
ret
and
mov
sbb
jg
xchg
jae
pusha
mov
int
cwtl
cmpsl
mov
cmc
in
add
inc
sbb
ja
ja
insl
push
or
cli
shr
pop
or
push
inc
arpl
or
push
bound
aaa
js
sbb
mov
cmp
fisubl
out
fbld
jbe
dec
inc
xchg
sub
or
mov
push
push
sub
push
mov
push
mov
mov
loopne
out
int
adc
cmp
loope
pusha
jae
out
jecxz
call
sub
mov
push
repnz
popf
arpl
insl
mov
mov
movsb
lock
mov
or
mov
add
pop
in
subb
fwait
mov
fisubrs
ljmp
je
into
loopne
adc
les
add
or
push
sub
in
or
jnp
push
pop
cmp
icebp
or
cltd
cmp
xchg
ljmp
mov
xor
hlt
loope
out
std
mov
lret
cmpsb
bound
xor
or
or
jmp
mov
push
fs
lds
aas
or
jg
out
jbe
lds
and
shlb
dec
lcall
xor
mov
pusha
jmp
adc
test
imul
jbe
inc
push
subb
mov
pop
les
add
cmp
clc
in
adc
push
in
sahf
pop
scas
jne
js,pt
push
scas
xchg
repnz
mov
dec
fbstp
loopne
xchg
loope
xchg
jns
icebp
mov
mov
lods
fildll
jno
jecxz
dec
imul
fmull
sbb
mov
in
in
mov
inc
ds
loop
or
sub
sarl
rcrb
mov
xor
fs
out
fistps
aaa
popa
xchg
jbe
cmc
push
shlb
add
test
xchg
pop
into
cmpsb
repz
mov
mov
shll
fisubl
xor
lea
outsb
idivl
cld
jmp
lods
js
mov
mov
lods
arpl
mov
cs
mov
add
fnsave
mov
mov
cmpsl
mov
inc
lds
inc
add
mov
jae
pop
data16
push
push
push
pop
lea
cs
vxorps
jp
mov
sahf
imul
xor
mov
out
arpl
mov
xchg
bound
mov
xor
inc
sahf
and
adc
movsl
pop
aam
jno
push
mov
push
test
mov
mov
add
dec
xor
sub
out
xor
dec
push
fdivs
pop
pop
mov
sbb
adc
enter
and
mov
jmp
jle
adc
inc
clc
mov
in
add
sti
cwtl
loop
pop
sub
arpl
xor
sti
out
sbb
dec
psrld
mov
in
movsb
shl
add
mov
sbb
dec
sbb
fwait
and
add
mov
mov
sbb
lcall
jae
fisubrs
scas
les
xor
mov
mov
out
leave
or
or
xchg
sarl
or
add
add
pop
repz
jb
sahf
hlt
mov
mov
jae
jno
scas
xchg
or
fildll
ss
pusha
test
sarl
in
arpl
call
cmp
inc
fisttpl
mov
scas
out
call
sub
and
pop
imulb
jmp
int
adc
xor
push
daa
pop
sub
sub
stc
xchg
mov
mov
inc
mov
dec
sub
cmp
or
pop
xor
and
pusha
sub
mov
rep
aam
inc
sarb
push
fdivrp
in
add
lock
fldenv
xor
adc
repnz
pop
fcoms
cmp
jmp
addr16
popf
lods
setb
insl
pop
mov
ret
cs
sub
mov
add
jno
push
sbb
pusha
add
add
lret
repz
lods
jo
rol
or
outsb
and
addr16
enter
daa
adc
popf
in
push
fimull
outsl
gs
cmp
jmp
push
mov
out
sub
cwtl
call
add
sub
xchg
sbb
adc
roll
mov
shll
cmp
jle
stos
lock
test
addr16
arpl
xchg
addr16
aad
lods
jae
stos
push
mov
sbb
mov
xor
mov
in
shlb
push
and
loop
mov
or
int3
pusha
or
jmp
sbb
sbb
loop
hlt
enter
lock
jne
adc
jae
repz
add
jp
push
pop
mov
sbbb
imul
xor
ret
lods
xchg
nop
js
lds
aas
gs
jae
mov
mov
movsb
cmpsb
sarb
jl
adc
cmp
sbb
pop
jge
sub
notb
sub
sahf
pop
push
push
jnp
aam
std
pop
cltd
lods
hlt
push
push
shlb
shl
divb
sub
mov
sahf
mov
push
push
loope
add
sbb
mov
inc
fdivrs
pop
jge
sbb
movb
mov
std
sbb
cmp
cmp
mov
imul
mov
xchg
out
sub
lea
dec
addb
aaa
xor
mov
leave
les
sub
lahf
lret
cmp
mov
jmp
lahf
mov
in
frstor
lret
out
add
pop
ret
xchg
jnp
push
cs
out
add
adc
dec
fstpt
mov
gs
cld
out
and
push
adc
adc
scas
adc
mov
sub
pop
xchg
cmp
and
outsb
and
sbb
loope
cmp
arpl
test
mov
push
inc
inc
xor
jge
add
enter
sbb
sbb
test
xor
fcomps
fimuls
add
mov
push
aad
inc
sub
fs
push
adcb
adc
out
movsl
cmp
xlat
add
jecxz
fimuls
or
popf
jbe
jbe
cmp
sbb
or
lods
test
pusha
pop
out
rorl
movsl
out
sahf
imul
mov
lahf
lcall
pop
shr
lock
mov
xchg
push
and
xchg
hlt
lock
rcll
sbb
out
and
mov
in
add
add
xor
jns
sub
bound
sbbl
xchg
pop
mov
push
sub
lods
sahf
pop
xchg
out
lods
sub
daa
or
scas
xor
dec
lods
dec
inc
push
mov
shrb
pushf
daa
ds
inc
enter
sub
push
fstpl
ja
imull
mov
and
xor
les
inc
add
mov
mov
dec
jns
out
push
sub
xchg
cmp
loopne
mov
xor
lahf
je
mov
push
xor
scas
mov
sti
or
sbb
les
mov
lods
gs
fistpl
cmpsb
pushf
es
cli
mov
pop
xchg
das
mull
push
sbb
jle
int3
sahf
xorl
xchg
jnp
jmp
leave
mov
enter
out
hlt
xlat
adc
lret
adc
jno
or
out
cmp
mov
lret
or
in
adc
repz
aas
push
popl
daa
fistpl
das
lcall
pop
stos
sub
sub
aam
inc
mov
push
arpl
testb
and
cwtl
mov
mov
xor
dec
sub
insb
test
sub
push
fsubrs
bound
ret
cmp
jns
test
sahf
ret
xor
push
dec
cmpsb
mov
adc
cmc
fisttps
and
leave
loope
xor
mov
and
inc
iret
xchg
lods
in
in
dec
fprem1
test
addr16
inc
lahf
jmp
jns
mov
aaa
icebp
dec
xchg
outsl
push
cmpsb
sbb
or
jnp
ret
push
jns
stc
xor
lds
gs
sub
jns
mov
rclb
xor
or
jge
mov
jmp
js
mov
mov
pop
sbb
pop
xchg
mov
mov
inc
mov
mov
adc
mov
xor
cmp
cmp
cmp
jae
negl
ja
out
mov
scas
sbb
jg
popf
mov
dec
xchg
fiadds
les
push
fldpi
outsl
pop
mov
sahf
je
testb
sahf
mov
std
inc
pop
cwtl
and
inc
add
push
push
sub
jns
outsb
sub
jmp
jg
push
pop
dec
xchg
push
or
test
addr16
adc
inc
in
add
or
mov
jae
inc
cmp
cmp
add
and
mov
add
rcr
jbe
scas
int3
mov
xor
sub
cmp
sbb
in
mov
ljmp
mov
int3
pop
cmc
ret
cmpsb
sti
pop
ja
inc
shlb
inc
sbb
push
pop
rorl
mov
pushf
push
mov
popa
xchg
shrd
push
mov
add
cmpsl
jl
pop
mov
lods
into
xor
rcrb
dec
das
lahf
arpl
push
jmp
sbb
or
add
movsl
xchg
repz
mov
daa
lret
adc
arpl
mov
jo
int
int
cli
scas
inc
cmp
adc
adc
jp
icebp
mov
and
adc
xchg
pop
mov
out
scas
push
in
rcrl
outsb
dec
mov
add
jmp
es
out
mov
add
test
loopne
nop
push
xor
and
test
mov
daa
xchg
and
adc
and
add
or
pop
push
test
stc
xor
out
call
in
jmp
enter
sti
test
aam
out
mov
mov
add
push
push
fcom
mov
js
int3
and
out
xchg
in
xor
les
jmp
mov
jnp
adc
pop
mov
sarl
mov
mov
push
or
mov
jbe
sub
ds
jle,pt
testb
or
mov
mov
adc
test
push
mov
and
ds
sbb
jl
dec
push
dec
pop
mov
mov
xor
aam
push
sub
js
push
jae
dec
cmp
mov
jns
inc
inc
loope,pt
inc
cld
xchg
add
sub
loop
rcl
jno
jge
lea
fstps
cmp
lods
dec
sbb
std
stos
cmc
fimuls
sub
push
fcmovnu
stos
rorl
sub
rclb
push
pop
push
mov
lock
xor
xor
push
into
jnp
fists
rorb
dec
adc
adc
sub
cmp
cmp
rcll
sahf
nop
in
or
mov
mov
imul
daa
rolb
ret
pop
repnz
jae
imul
mov
xor
movsl
mov
mov
mov
fisubs
shl
cmp
imul
pminsw
inc
sbb
je
call
dec
cld
jp
clc
or
sub
jb
dec
push
cmpsb
stos
cli
xor
ja
popf
scas
lock
je
and
push
mov
stos
testb
or
fistpl
push
loopne
pop
lea
add
sbbl
inc
cmp
adc
loop
mov
lahf
repnz
adc
sbb
xor
mov
add
leave
popf
arpl
popaw
push
and
dec
or
add
and
lret
loopne
rcrl
cmp
out
dec
jle
or
xchg
shrb
mov
pop
cs
mov
pop
cmova
jae
cmp
imul
mov
in
pushf
addb
dec
popl
repnz
out
leave
pushf
pop
dec
mov
cmp
mov
arpl
jne
xchg
xchg
xchg
xchg
icebp
jecxz
push
push
inc
dec
out
mov
mov
and
cmc
mov
dec
dec
je
pop
sarl
jle
mov
pop
push
jns
jg
xchg
cmpsl
add
out
xchg
repz
frstor
jecxz
pop
ss
dec
cmp
shll
mov
loop
mov
push
dec
pop
sbb
inc
lret
sbb
int
hlt
add
jae
xor
enter
jnp
push
stos
fcmovne
mov
dec
inc
jecxz
fbld
into
clc
sbb
stc
add
push
rcrb
push
sub
repnz
cmp
or
dec
inc
xor
repnz
subb
jle
test
sbb
rclb
pop
lea
push
insl
push
or
jmp
inc
or
xor
lock
xor
loope
mov
pop
cmp
push
jo
dec
add
ljmp
xchg
sbb
mov
jg
xchg
in
mov
mov
out
je
or
pop
push
test
mov
rcrl
insb
int
and
dec
js
push
mov
aam
pusha
push
push
and
ljmp
stos
pushf
loopne
out
xchg
out
mov
sub
lea
fidivl
xor
pop
loop
sbb
push
adc
cmpsb
insb
sub
or
clc
mov
sahf
cld
cltd
pop
mov
mov
iret
std
subl
adc
jge
pushf
fs
andb
gs
pop
movsl
scas
shr
cmpsl
cwtl
dec
add
pusha
xchg
cmp
mov
mov
mov
or
xchg
loop
scas
scas
into
xchg
xrelease
andl
test
push
dec
xor
sub
sub
inc
popf
stos
pop
mov
cmp
push
inc
mov
rcr
or
popa
cmp
xchg
mov
imull
jbe
push
dec
adc
out
out
cmpsb
fstpt
jo
mov
insb
mov
jno
lods
mov
test
mov
lds
push
mov
lock
lahf
cmp
inc
test
nop
sbb
pop
mov
mov
mov
arpl
push
xchg
and
imul
cmpsb
push
ss
fwait
mov
jg
enter
loopne
xchg
jge
sbb
int
push
test
lods
cli
xor
adcb
fs
push
mov
faddl
arpl
ja
ss
jl
xchg
jl
insl
psrlw
jae,pn
sub
aas
sub
leave
jl
xchg
adc
out
hlt
jge
les
sub
ljmp
shl
mov
jp
aad
fs
mov
aas
addr16
inc
call
jne
push
test
or
add
test
fnstenv
les
cwtl
scas
sbb
mov
sbb
pop
dec
xchg
sbb
dec
bound
sbb
out
fsubs
sbb
and
sbb
imul
test
push
std
inc
fnsave
jns
pushl
cmp
dec
inc
icebp
in
ja
mov
xor
jo
adc
ljmp
sbb
inc
cli
in
mov
jb
hlt
mov
mov
cmpsb
push
pushw
or
loope
or
stc
ret
fisubrl
ljmp
mov
xchg
mov
dec
test
enter
hlt
inc
jge
scas
jg
icebp
or
and
jecxz
push
add
add
fs
sub
xchg
iret
aas
or
fcom
fld
insb
xchg
lods
cwtl
jo
shrb
cmp
xchg
test
jno
cld
mov
push
xor
shrb
pop
dec
sbb
add
jle
sub
add
frstor
sbb
xchg
adc
sub
fcompl
stc
adc
sti
mov
and
dec
int3
ljmp
jb
inc
movsl
pop
sub
sub
divb
outsl
dec
cld
cmpsb
pop
shrl
push
pusha
aaa
divb
cs
mov
in
pop
jo
pop
mov
xchg
xchg
addb
jb
push
inc
push
mov
and
sahf
and
data16
mov
arpl
fistps
dec
sarl
test
mov
sub
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
mov
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
jmp
cmc
cld
mov
test
jb
cld
pop
jp
cld
pop
jp
add
inc
imul
cmp
xor
js
roll
gs
jecxz
add
pusha
mov
xchg
dec
addl
xchg
xchg
pop
out
mov
in
scas
jmp
pop
decb
jae
jne
jmp
sub
dec
ljmp
aas
mov
inc
inc
ds
add
fbstp
mov
pop
pop
cmp
or
xchg
mov
or
xchg
inc
push
lods
fadd
push
loope
loopne
es
enter
or
adc
pop
jecxz
sbb
stos
sar
leave
xchg
daa
inc
ds
cmp
adc
xchg
jo
aam
push
cwtl
int
push
je
sub
push
loopne
das
fs
xor
or
mov
sbb
fistpl
mov
stos
mov
aas
test
dec
mov
sub
jbe
cmp
loop
int
test
inc
lahf
call
mov
push
sbb
mov
mov
xchg
insb
pop
xchg
es
jmp
xor
pushf
push
jl
dec
xor
push
lods
movsb
sar
push
test
xchg
je
imul
add
jp
mov
mov
sbb
mov
dec
popa
ret
bound
pop
mov
shl
dec
mov
rorl
dec
add
loope
push
adc
clc
mov
bound
cmpb
or
sti
sbb
sbb
push
pop
pop
outsl
adc
mov
fmull
push
pusha
repz
js
popf
adc
aas
pushf
rorl
pop
xchg
orl
js
stc
pushf
sub
filds
nop
js
mov
insb
mov
mov
jmp
dec
fwait
cld
fists
jmp
icebp
rcrb
aaa
jecxz
xor
pop
fsts
rolb
ret
lea
pushf
fs
push
and
fadd
shlb
fs
xor
sub
pop
icebp
mov
xchg
push
mov
outsl
fnstenv
xor
mov
push
addr16
mov
out
dec
lea
or
mov
mov
jmp
loope
dec
jmp
pop
or
mov
adc
add
stos
lcall
mov
shlb
cwtl
subl
rcrb
cmp
je
std
movsb
sub
and
and
cmpsl
mov
int3
test
jb
mov
mov
adc
mov
push
dec
imul
cmpsl
push
xlat
icebp
jns
outsb
pop
jnp
dec
mov
mov
sbb
mov
inc
sbb
push
sbb
cmp
adc
push
cmp
outsb
pop
dec
lret
or
sbbl
aas
jg
insb
pop
cmp
mov
mov
pop
mov
inc
sbb
jl
sar
add
jp
pop
sbb
repz
and
xchg
popf
and
xor
rclb
jmp
xlat
lea
xor
cmp
repnz
clc
or
inc
xchg
gs
shll
xchg
rcll
arpl
pop
sbb
push
sbb
dec
rolb
mov
bound
aad
jmp
sbb
fstp
shld
mov
mov
out
jp
in
lea
and
bound
jmp
aad
add
aaa
daa
test
imul
jmp
adc
adc
or
jmp
and
mov
ficomps
pop
or
hlt
aas
lea
outsb
xor
sbb
jo
movsl
outsl
hlt
ds
in
lahf
mov
cmp
enter
mov
loopne
mov
dec
inc
mov
incb
repz
bnd
negb
loopne
cli
bound
mov
dec
cmp
sbb
sub
repz
adc
sbb
mov
inc
jecxz
jg
inc
fsubrs
add
insl
dec
push
repnz
pop
mov
lods
xchg
xrelease
dec
paddq
cmp
jle
and
out
dec
inc
pusha
dec
mov
movsl
jne
ljmp
ret
add
clc
sahf
lret
iret
mov
jmp
ja
mov
aaa
js
xchg
shrb
xlat
data16
and
jl
push
sbb
adc
push
pusha
pop
mov
loope
ja
jno
pushf
dec
add
fs
int3
xchg
mov
and
in
xor
pop
sbb
xchg
mov
xchg
iret
repnz
xchg
pop
adc
fstpt
mov
rclb
push
or
test
sbb
outsl
cmc
push
mov
mov
mov
stos
pop
cmp
adc
and
testb
mov
inc
stos
mov
pop
or
aam
mov
add
inc
add
shlb
or
popf
gs
movsb
scas
mov
in
enter
aas
into
or
xor
mov
int3
mov
push
add
pop
jmp
out
lods
dec
mov
dec
lcall
dec
addr16
push
test
xor
data16
es
add
jl
addr16
aas
push
add
subb
xchg
sub
push
jo
adc
std
inc
jge
pop
xlat
test
mov
ss
test
push
push
les
pop
sar
cmp
jle
or
adc
leave
lods
cli
mov
loope
jno
lea
ret
call
incb
mov
cmpsl
jmp
jb
popa
ret
dec
mov
push
sub
nop
mov
push
je
imul
fadds
mov
nop
repnz
popf
out
and
mov
cltd
xor
mov
cld
fsubr
mov
cmpsl
gs
add
xchg
scas
jmp
sbb
adc
fstl
xchg
in
pop
dec
stos
leave
imul
xor
notb
push
sti
mov
lods
and
and
mov
pop
out
in
fnstsw
pop
push
inc
mov
inc
scas
push
fnstsw
stos
call
negb
mov
mov
call
add
aas
pop
rcpps
cmp
rclb
add
negb
aaa
push
mov
call
xor
pop
xchg
shl
inc
sub
arpl
out
adc
dec
push
xchg
cltd
pop
or
iret
adc
mov
stc
sub
jecxz
xchg
int
or
mov
pop
xor
adc
or
sub
adc
jbe
sub
sbb
stos
pusha
stos
leave
add
icebp
jmp
movsl
in
daa
shlb
rolb
jge
mov
js
ret
lret
lea
push
sub
pop
dec
shll
int3
push
adc
mov
and
mov
js
fstl
clc
add
decl
cmpsl
sub
xchg
adc
imul
scas
adc
mov
sub
fdecstp
adcb
loop
clc
repz
clc
sbb
xlat
push
and
dec
cmpsl
cmpsl
int3
pop
mov
sti
jb
or
xchg
call
sbb
xchg
xchg
sarb
xor
mov
arpl
loope
scas
orb
mov
jne
imul
data16
std
in
jecxz
fiadds
popf
adc
xchg
nop
testb
ror
movsb
pushf
stc
out
sub
mov
sbb
ret
adc
xlat
iret
clc
ja
lret
scas
and
push
into
inc
xor
cmpsb
insb
ret
hlt
add
xchg
and
or
push
push
scas
fcompl
xchg
divl
iret
outsb
xchg
lock
out
push
xlat
push
xor
seto
or
sti
xor
mov
jmp
inc
in
imul
add
lea
mov
fsubrl
xor
sbb
adc
xchg
pop
mov
mov
in
mov
jbe
mov
add
sbbl
xchg
push
dec
cld
push
aaa
adc
enter
inc
jmp
xor
int3
sbb
push
mov
jmp
into
mov
pop
xchg
or
bound
mov
push
lods
cli
lahf
inc
xchg
divl
inc
mov
outsl
sub
xchg
jp
popf
loopne
cltd
sti
inc
pop
inc
push
push
jge
xchg
add
call
push
icebp
dec
std
jge
push
pop
xor
or
pop
fidivrs
pop
icebp
fisttps
scas
add
test
es
mov
jmp
pop
push
xor
xchg
xor
xchg
das
lods
xlat
sbb
cmp
fnstsw
loope
push
add
xor
lds
sbb
or
loop
xchg
xor
sarb
xchg
dec
cld
adc
ss
loopne
mov
pcmpeqd
sbb
out
cmp
in
fdivrs
push
out
enter
xchg
lret
rcrb
push
xchg
adc
or
inc
and
dec
les
mov
lcall
into
or
les
cmp
mov
pushf
add
sbb
outsl
movsb
mov
rcrl
pop
mov
out
aam
in
aam
mull
into
jmp
cltd
push
ret
add
jge
mov
push
mov
pop
jns
stos
mov
iret
mov
movsb
cmc
ret
push
in
mov
adc
and
out
cli
xchg
jnp
mov
mov
test
xor
cmc
add
stos
add
dec
idivb
int
inc
das
xor
in
scas
ss
mov
xor
jno
daa
sbb
or
lcall
pop
pop
hlt
pusha
sub
imulb
dec
xor
call
or
push
dec
mov
movsb
jmp
repz
jns
int
xchg
mov
dec
mov
mov
or
xchg
dec
mov
inc
jne
sbb
imulb
int3
divb
bound
popf
sub
dec
fiadds
pusha
dec
dec
shrb
mov
mov
scas
xchg
mov
arpl
add
mov
and
pop
push
imul
out
sahf
mov
stc
jg
cmpsb
xor
add
stos
xor
or
imul
icebp
and
jmp
pop
dec
adc
fwait
sbb
push
ficomps
push
xchg
mov
fistpl
data16
dec
notb
sub
jo
jmp
cltd
subb
ds
cmp
les
xchg
pop
xchg
loope
push
cmp
cmp
lcall
mov
xor
in
xchg
xor
in
dec
lcall
ret
jp
cwtl
and
cmp
push
and
insb
lods
int3
inc
push
pop
add
popf
cmp
dec
das
pop
sbb
hlt
jle
cmp
packuswb
sub
xchg
insb
dec
in
jno
fistpl
outsb
xchg
xchg
mov
aad
pop
xchg
adc
insl
sub
out
sbb
mov
inc
inc
and
sub
cmp
rcrb
inc
test
cmpsl
and
or
or
ss
lcall
rorb
mov
ja
mov
stos
hlt
andl
out
jp
movsb
mov
pop
pop
jns
sahf
testb
mull
cmpsl
popf
push
adc
xchg
ja
add
out
pop
movsb
inc
outsb
fwait
xor
jns
and
mov
xchg
pop
js
popf
adc
lcall
sbb
push
cwtl
mov
ficoml
and
lret
loope
dec
xlat
cmc
sub
adc
rcrl
pushl
sti
shll
mov
js
cmp
mov
and
or
in
sbb
sub
cli
das
mov
sahf
ds
loopne
js
aam
lock
mov
iret
mov
fstpl
ficompl
scas
push
in
stos
xor
sub
cmp
or
jmp
mov
shlb
jae
cmp
adc
ja
pop
jb
test
push
mov
dec
mov
mov
jne
and
cli
in
push
pushl
int3
push
mov
mov
ret
das
lcall
rorl
lret
xchg
shl
outsl
xchg
outsb
push
stc
mov
sub
sub
push
or
pop
mov
jae
xchg
or
insb
ret
xchg
insb
lock
mov
stos
jg
dec
jae
mov
mov
xor
les
jb
push
mov
mov
test
imul
xchg
aam
imul
sbb
cmp
xchg
sbb
adc
clc
fbld
sub
mov
inc
sbbl
test
daa
adc
cltd
fs
fcom
mov
mov
mov
fists
cli
mov
ss
aaa
leave
adc
jno
or
mov
mov
divb
call
push
lcall
pop
sub
es
pop
mov
sub
push
in
in
lahf
xlat
pop
in
aam
push
cmp
jns
fnsave
in
mov
push
sbb
cmp
xchg
cmpsl
mov
sub
leave
mov
mov
ret
aas
rolb
sti
sub
xor
lret
fcompl
lods
mov
push
sbb
jbe
std
inc
shrl
mov
es
xor
stc
inc
fsubrs
xchg
loope
test
sbbb
lds
sbb
add
cmp
pop
es
out
xor
adcb
sbb
ss
sub
sti
cmc
mov
add
fldl
sahf
push
sar
add
or
mov
cmp
rcl
in
add
repnz
dec
adc
mov
ret
inc
add
sub
adc
mov
icebp
push
add
jbe
sbb
inc
std
jb
andl
cmp
push
in
sbb
ss
mov
adc
lret
mov
jne
lret
dec
xchg
xchg
scas
outsl
inc
insl
not
jno
sbb
lods
xor
jno
lods
std
push
shl
sbb
push
ljmp
popf
test
add
or
mov
call
push
xlat
pop
loopne
lret
es
pop
fwait
inc
aam
stc
in
push
jp
outsb
outsl
es
cmp
adc
popf
pushf
xchg
add
mov
pop
dec
pop
mov
insl
imul
cmp
sahf
in
pop
push
xchg
lret
hlt
sbb
dec
aam
push
inc
insl
and
aam
lods
out
adc
dec
xchg
es
cmpl
in
loope
mov
push
mov
ret
jl
lea
add
and
and
xchg
rolb
adc
xchg
lahf
sti
push
fwait
xchg
fisubl
stos
pop
inc
pop
jmp
dec
xchg
lret
mov
ret
ds
mov
sub
sbb
test
ss
push
fwait
cs
and
repnz
inc
int
loopne
int3
inc
out
js
loope
std
cs
gs
jbe
inc
add
xor
les
call
mov
insl
gs
xor
add
xor
shll
loop
pop
or
rclb
shll
pusha
mov
xlat
lcall
mov
insb
insl
rolb
xor
insb
mov
pop
mov
fnstsw
jp
inc
cmpsb
daa
xor
sub
stc
repz
push
loope
cmpb
in
movsb
jne
ja
clc
mov
repz
mov
adc
sbb
xor
clc
mov
movsb
xchg
ljmp
scas
fucomp
mov
lret
in
scas
popa
adc
std
out
inc
dec
jle
sti
insb
fsubl
ds
push
xchg
shlb
mov
sbb
xor
loop
mov
dec
shr
xchg
sarl
pop
int3
xor
in
sub
popa
out
lods
imul
mov
mov
inc
scas
mov
adc
xor
fwait
adc
shrb
cmp
js
and
push
fsubr
dec
jle
pop
cmpsl
lock
gs
xchg
int
pop
lock
sbb
mov
call
jmp
sub
sub
cli
hlt
sbb
inc
lret
pop
outsl
cmp
cwtl
push
mov
mov
and
mov
xor
mov
jge
repnz
outsb
out
pop
inc
ljmp
add
sbb
inc
cmpsl
fidivrs
roll
push
adc
fcoml
cmp
jge
aaa
in
mov
ljmp
xchg
ret
call
mov
xor
mov
repz
mov
or
pop
in
and
data16
mov
fadd
mov
pop
ds
iret
pop
std
out
rorl
fs
fld
stos
out
cli
push
mov
push
pop
ljmp
insb
movsb
ss
repnz
stos
lea
iret
cmp
scas
push
lahf
cmp
jo
sub
cwtl
mov
rcl
data16
and
dec
mov
mov
movsl
dec
lods
test
aad
leave
jge
xor
lret
cmp
clc
cmpsl
sbb
sahf
dec
loop
cwtl
fsubs
pop
sub
push
dec
and
cmc
scas
call
add
aad
and
jmp
int3
out
lret
cmp
pop
xchg
sub
mov
sbb
js
or
and
jecxz
jne
pop
inc
loope
repz
mov
lods
cmpb
mov
xlat
mov
je
and
push
or
cmp
lcall
dec
repnz
fs
push
or
js
or
rclb
mov
or
add
insl
xchg
mov
imul
mov
rorb
mov
mov
hlt
ds
insb
mov
cli
push
adc
bound
mov
push
repz
ret
dec
iret
std
je
or
jmp
pop
or
jg
inc
mov
pop
push
and
xchg
add
push
and
aad
and
aad
xchg
adc
xor
adc
xchg
cmp
or
or
les
daa
adcl
orl
mov
stc
dec
push
es
repnz
xor
adc
hlt
cmp
bound
ljmp
imulb
add
mov
repnz
dec
push
cmpsb
jge
sarb
and
pop
in
test
dec
bswap
push
insb
stos
cmp
xor
andb
sbb
mov
leave
sbb
cwtl
fincstp
sub
loop
pop
cmp
push
in
jae
mov
lds
int
sahf
sub
int
cmp
andl
leave
repz
xchg
xor
arpl
sbb
jp
or
xchg
mov
out
pop
mov
or
inc
and
out
jmp
rclb
hlt
sahf
test
addl
mov
call
or
sbb
test
or
daa
clc
push
jmp
push
xor
int3
daa
std
in
aam
nop
mov
push
lea
sbb
adc
cmpsb
cld
daa
push
xchg
out
cld
or
pusha
sarl
test
xor
xchg
inc
jmp
sbb
sub
inc
jg
add
insl
testb
imul
mov
loopne
mov
sbb
cmp
dec
loope
or
insb
adc
cmp
fisubrl
dec
adc
ficomps
in
pop
cmp
fidivs
movsl
test
lods
jb
stos
jne
mov
jb
pop
xchg
cmp
jp
cmp
hlt
test
mov
jo
push
lea
testb
nop
test
sub
mov
jo
out
mov
xlat
cld
jecxz
mov
push
cmp
adc
lret
xor
or
or
mov
hlt
clc
dec
mov
pushf
push
int
scas
stos
push
iret
out
mov
cs
movsl
repz
push
push
rclb
das
push
call
in
js
xchg
pop
aaa
cmp
lret
and
xchg
adc
mov
mov
jmp
fildll
xor
repnz
push
repz
ret
sub
stos
mov
adc
push
and
jle
push
pop
push
or
test
fmul
xor
xchg
jg
push
inc
lcall
cli
outsb
cli
mov
sti
push
movsb
scas
mov
stc
fsts
nop
insb
pop
pop
roll
mov
push
push
adc
pop
cmpsl
push
out
add
shrb
popf
push
pop
into
push
mov
insb
rol
xor
push
in
lock
cwtl
sbb
jae
jns
out
outsb
out
mov
xchg
pop
popf
push
out
jno
rdtsc
sbb
enter
mov
xchg
mov
pop
or
pop
push
sub
xchg
or
fsubrl
int3
jl
out
xchg
xchg
add
jns
cmpsb
leave
lahf
jle
es
pop
data16
stos
mov
push
fimuls
cmp
fisubs
xor
jle
add
xor
cwtl
andl
call
das
dec
ffreep
sti
push
add
pop
das
ret
sbb
sbb
mov
dec
jno
aaa
sub
gs
push
lcall
or
and
mov
xor
pop
add
stos
aad
sub
xchg
sbb
mov
mov
push
imul
fs
ljmp
out
iret
xchg
scas
adc
aam
lods
scas
stos
jp
mov
lds
testl
dec
ret
enter
pop
in
or
in
or
push
cmp
dec
sbb
jle
xchg
sub
jns
jbe
push
pop
enter
add
pop
mov
inc
pop
pop
incb
je
test
pop
scas
repz
add
jle
lcall
out
cwtd
lret
mov
insl
fcmovnu
cmp
inc
jecxz
scas
test
xor
inc
sub
jns
fsubrs
shrb
xchg
and
or
imul
out
inc
imul
xor
inc
ror
dec
xchg
jnp
or
inc
jno
jo
repz
and
testb
js
pop
sahf
cmpl
dec
les
sub
ja
dec
pop
imul
je
iret
jns
ficomps
test
ret
cmp
mov
lahf
mov
xchg
mov
out
cld
xor
fstl
mov
push
mov
stc
pusha
cltd
jnp
popf
inc
mov
cmp
push
fidivrl
cltd
dec
pop
jb
arpl
jge
and
mov
sub
mov
ljmp
add
je
mov
mov
push
mov
bound
enter
ss
add
adc
jnp
outsl
daa
xchg
sti
xchg
fistl
movsl
fs
jbe
loop
pusha
push
sbb
dec
fwait
add
divb
dec
fsubr
sub
cmp
ret
jle
inc
add
mov
lcall
xchg
out
push
fdivl
es
mov
lret
pop
aam
insb
pushf
movsb
jae
push
pop
cmp
adc
fadds
xor
data16
add
shlb
mov
mov
ret
inc
arpl
cmc
hlt
mov
and
mov
push
inc
pop
adc
shll
push
xchg
mov
repnz
imul
push
fistpl
mov
pop
inc
dec
mov
mov
and
xchg
xchg
dec
cli
fucom
adc
jl
cmp
clc
out
clc
add
ss
cld
and
stos
dec
fucom
xor
je
lds
xadd
cmp
and
aad
pop
les
sub
jnp
inc
pop
mov
insb
pop
shr
pop
insl
cmpsb
sub
jno
push
push
push
inc
cwtl
mov
enter
nop
xchg
mov
mov
and
mov
rep
les
test
stos
in
mov
jne
sub
mov
cmp
mov
jno
fisttps
adc
std
lea
sti
mov
push
lret
add
adc
xchg
push
aaa
fmull
stos
jae
sbb
filds
js
mov
mov
test
int
mov
cmp
fs
bound
insl
adc
aad
mov
sahf
mov
lcall
or
sbb
pop
arpl
push
mov
cmp
cli
push
ret
popa
sub
push
sub
jo
pop
repnz
and
shll
out
cmp
add
lahf
in
test
dec
out
mov
mov
xchg
adc
in
pushf
sbb
addb
gs
lods
rcrb
out
xlat
leave
mov
gs
mov
sbb
pop
outsl
push
rcll
popf
sbb
in
xlat
and
in
cmp
sbb
div
pop
jns
out
test
jmp
data16
loope
cmc
adcl
mov
xchg
test
fcom
add
repnz
and
aas
leave
sub
movsl
push
mov
pop
mov
and
popa
bound
cmp
les
mov
shrb
pushf
sbb
inc
mov
mov
lret
and
loop
inc
ret
pop
cmp
push
lcall
mov
adc
and
std
mov
xchg
sarl
add
jge
sub
mov
pop
mov
xlat
mov
mov
xor
xchg
mov
xor
push
test
aas
stos
sarl
dec
cli
xchg
cmp
mov
ret
popa
aad
stc
pop
adcb
inc
xchg
cmp
gs
out
movsl
jne
ja
shrl
xor
sbb
out
add
push
out
movsb
pop
inc
or
mov
leave
and
fistpll
and
mov
sub
and
jl
and
cmpb
xor
movsl
popfw
mov
ret
mov
add
inc
mov
jecxz
push
push
rcr
lds
decb
call
std
fidivs
nop
and
bound
lcall
sub
and
inc
add
cmpsl
xchg
mov
pop
sub
pop
out
jl
cs
stos
adc
fnstsw
out
mov
pop
inc
cwtl
pop
mov
test
pop
mov
inc
sbb
lds
ss
lods
into
mov
xchg
push
shlb
addr16
fwait
repnz
pushf
cli
jge
xchg
mov
pushf
outsb
adc
addr16
add
add
mov
jl
clc
xor
mov
sbb
adc
sub
lcall
repz
lods
cmpsl
iret
pandn
ret
sbb
popf
push
sub
ret
mov
mov
xlat
in
xor
add
test
data16
xchg
xor
lret
imulb
into
mov
mov
pop
lret
mull
sub
ds
dec
loope
mov
out
xchg
or
add
ret
sbb
mov
adc
cltd
andl
pop
mov
cmp
sub
and
in
es
cmp
int
mov
jo
lods
leavew
int3
rcll
pusha
notl
inc
mov
cmp
mov
sub
inc
jbe
dec
jl
pop
push
sub
cmpsl
push
dec
fistl
inc
je
fsubs
call
icebp
cmp
add
ret
xchg
shll
xchg
or
test
xor
lods
cmp
jne
push
mov
add
push
push
dec
push
push
jbe
rcr
movsb
mov
lods
add
por
pop
das
and
push
repnz
cmp
dec
and
mov
rcrb
sbb
xor
aas
xchg
or
inc
bound
pop
popf
dec
and
repz
setl
sub
mov
xor
enter
ret
rolb
shlb
scas
sbb
cld
in
adc
or
xlat
jno
cmp
xchg
mov
cmpb
xor
out
testl
imul
sahf
pop
inc
cmp
sub
adc
call
aas
xchg
cld
cmp
out
es
sahf
mov
inc
adc
movhps
fmuls
dec
mov
pop
int
mov
or
test
pop
sbb
ja
arpl
xchg
lock
mov
in
cltd
cli
cmpsl
and
addr16
inc
iret
and
sub
jp
mov
cwtl
in
add
xchg
cmc
clc
psrlq
cmp
sarb
lds
lock
xchg
inc
scas
imul
mov
mov
shr
adc
popa
xchg
sbb
mov
mov
and
jbe
ds
pop
or
push
pop
arpl
ss
xchg
xor
clc
add
cli
adc
aaa
lret
clc
xlat
movsl
scas
loope
pop
lods
cmp
aaa
mov
hlt
jmp
mov
ficoml
or
push
dec
cmp
sahf
sub
adc
sub
push
jb
sub
xchg
cmp
mov
stos
or
es
lcall
addl
adc
jl
in
loope
add
dec
jo
ds
mov
mov
js
ret
popa
pop
in
jecxz
push
xlat
sub
cmpsl
std
jle
dec
fsubs
mov
xlat
or
jns
insb
pop
cmpsb
pop
pop
push
xor
jae
inc
xchg
adc
or
dec
and
or
out
xchg
xchg
mov
test
inc
adc
into
mov
insl
lret
cmc
imul
jbe
in
or
loopne
nop
jnp
adc
mov
mov
dec
test
ja
add
ret
test
mov
pop
cwtl
adc
mov
sub
test
andl
jmp
fistps
fxch
sbb
shrd
testl
push
and
clc
outsb
inc
ret
jne
aam
inc
xchg
scas
pop
fisttps
rcll
pop
and
ret
jmp
jne
adc
mov
mov
sub
dec
dec
in
inc
or
sarb
jo
dec
pop
sbb
orl
bound
xchg
scas
movsb
push
sbb
add
mov
sahf
xchg
cmp
es
pop
leave
jne
or
lret
sbb
push
lret
movsl
and
inc
pushf
add
jg
leave
cmp
in
push
ds
dec
test
pushf
in
inc
push
mov
pop
or
sbb
jmp
loope
test
or
xchg
mov
pushf
sbb
adc
dec
inc
ficomps
pushf
pop
mov
sub
jg
loopne
sbbb
pop
lds
fnstsw
notl
lea
push
pop
nop
xor
mov
xor
fsubs
adc
jg
sahf
stc
push
pop
push
push
fcompl
sbb
test
in
std
adcl
icebp
cld
dec
cmpsb
out
sub
mov
xchg
fildl
sub
and
lock
or
push
xchg
arpl
cs
cmc
cmp
imul
orb
mov
imul
mov
jl
jo
clc
push
icebp
shll
mov
out
dec
imull
push
dec
sahf
mov
jp
mov
jno
lea
sbb
repnz
and
mov
das
mov
fcomp
inc
lcall
arpl
in
lods
popf
rorl
and
sub
mov
rcll
ljmp
loop
pop
dec
adcl
dec
btr
inc
int3
or
add
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
jmp
pop
add
add
xor
shll
jp
pop
jp
std
jb
jae
jecxz
adc
mov
xchg
in
jle
fidivl
insb
push
ret
mov
loop
aaa
jecxz
cmp
jo
leave
insl
mov
icebp
stos
inc
cwtl
or
add
mov
dec
dec
push
mov
mov
fistpl
dec
cli
or
adc
sub
sub
jg,pn
mov
filds
incb
pop
cmpsl
mov
adc
add
adc
insb
mov
and
ret
xor
mov
sti
ret
mov
sub
lahf
enter
call
daa
xchg
xor
xchg
ficoms
cltd
lds
dec
cltd
xchg
inc
dec
lock
add
jns
adc
lret
push
pop
mov
int
sbb
into
mov
and
and
push
inc
xorb
push
ret
sbb
dec
shr
negl
aaa
bound
push
push
sub
sub
add
push
xchg
and
mov
sbb
imul
cltd
and
and
xchg
orb
jno
notl
mov
test
inc
xchg
or
cmp
sub
jp
repnz
punpckhbw
push
or
test
lahf
push
sti
sbb
loopne
ffree
mov
clc
into
mov
loopne
jmp
mov
lods
jae
adc
fnstsw
or
int
add
orb
add
sahf
dec
sub
out
cmp
js
sub
or
lods
out
push
mov
js
cmp
cmp
xchg
inc
outsb
lcall
je
loope
cmp
lods
dec
out
outsb
rcrl
cltd
mov
shl
jge,pt
aas
mov
ret
pushf
and
cmp
jecxz
pop
mov
fs
aad
gs
in
test
jne
aas
xor
out
rorb
subl
xorl
mov
and
loope
add
mov
sarl
mov
lock
cmp
decl
sub
lret
fwait
imul
and
push
das
repz
out
scas
cmc
lss
mov
jg
or
jno
idivb
scas
jmp
add
sbb
push
adc
pop
sbb
pop
icebp
lods
sub
push
sub
push
mov
xchg
shll
xchg
cmp
filds
enter
std
inc
jg
dec
movsl
inc
lret
adc
adc
cltd
adc
mov
out
mov
jb
out
mov
nop
add
test
int3
sarl
lods
pushf
push
sub
scas
jle
mov
adc
dec
ret
fsubrs
mov
mov
jbe
mov
mov
xchg
pop
lret
addl
xor
aas
push
mov
cs
and
cmpsb
adc
insl
cld
bound
call
sub
inc
add
out
rcrl
dec
js
call
pop
sbb
adc
cmp
xchg
fmulp
or
pop
hlt
movl
sub
pop
cmc
lahf
fdivl
xchg
xchg
nop
iret
sahf
inc
adc
jns
mov
pushf
add
add
subb
mov
cmp
pop
add
mov
or
arpl
mov
mov
jnp
sub
in
pop
movsb
sub
sbb
fbstp
push
sub
mov
sub
jne
add
adc
aam
dec
xchg
sbb
in
lods
shlb
xor
sbb
and
xor
lcall
inc
or
pop
xor
push
repz
nop
mov
adc
data16
lods
fwait
cld
inc
add
pop
rcr
pop
mov
stos
sti
clc
lret
repz
push
mov
add
fimuls
push
fs
cmp
mov
add
test
shr
push
pop
outsl
jl
mov
clc
fnsave
lahf
jp
add
mov
insl
push
jbe
pop
shl
insb
cmp
bound
mov
in
mov
push
mov
push
pushf
or
xchg
aad
rclb
inc
hlt
sbbl
jp
push
mov
orb
frstor
sbb
push
jne,pt
stos
pop
mov
xor
scas
xor
push
in
jns
mov
push
movsb
pop
in
jb
out
and
in
mov
jne
push
rclb
aam
cmpsb
gs
pop
pop
cmp
ja
iret
aaa
cmpsb
mov
das
adc
push
ds
lds
loop
test
pop
sbb
add
int3
lret
jbe
and
dec
and
xchg
jmp
in
int3
shll
mov
iret
and
dec
push
mov
loope
xchg
mov
jo
popf
dec
fsubrs
imul
mov
dec
out
leave
cmp
ljmp
leave
inc
jecxz
and
jns
jmp
or
dec
mov
xchg
lods
push
out
xchg
push
pop
xchg
repz
push
jle
fadds
repnz
push
and
fisttpll
aas
cmp
or
movsb
ja
es
and
jne
int3
mov
fbld
jg
push
cltd
std
push
sub
or
push
cmpsb
mov
mov
cmp
out
or
icebp
add
negb
mov
pop
push
cmp
xchg
lods
in
or
inc
popa
mov
pop
sbb
adc
xor
frstor
jae
dec
mov
and
dec
pop
push
sbb
dec
nop
dec
xlat
sbb
push
dec
icebp
xchg
xorb
jns
sahf
fs
mov
dec
test
dec
mov
inc
mov
push
dec
xor
aas
and
xor
and
cmp
rolb
in
cwtl
aam
xchg
test
cs
jle
mov
xlat
frstpm(287
ds
sub
out
dec
push
dec
scas
shl
jecxz
cld
push
pop
loopne
fldcw
sahf
mov
insb
ret
sbb
sbb
sbb
insl
adc
out
mov
cld
fstpl
lods
mov
xchg
das
jb
decb
ret
notl
fsubl
sub
push
stos
dec
sub
jae
lcall
sub
fnstcw
scas
mov
inc
sbb
mov
insl
xor
and
push
pop
out
jmp
mov
shrb
mov
cmp
cmp
int
aaa
xchg
or
lahf
mov
lahf
test
sub
out
pop
sub
into
test
popf
pop
dec
jl
push
and
movsb
jns
shll
xchg
jge
in
ror
fstp
mov
dec
inc
ss
fisubrl
rcrl
pop
jecxz
test
loope
inc
adc
dec
rclb
decb
push
pop
aas
xor
sarb
outsl
jmp
lret
xchg
stc
sub
add
mov
or
add
jne
adc
icebp
movsb
je
xor
inc
push
xchg
es
mov
fimull
cmp
push
jmp
fsubs
out
dec
xor
mov
jns
cmpb
adc
mov
mov
jg
popa
cmp
imul
push
xchg
push
insb
call
inc
js
xlat
lret
or
pop
loop
dec
popa
dec
out
add
clc
xor
push
add
mov
pusha
ljmp
repz
dec
sar
sbb
pop
insb
sarb
ss
xchg
test
lea
pop
sbb
xchg
dec
push
mov
mov
aam
addr16
mov
mov
nop
inc
cs
mov
lcall
jmp
jbe
popw
dec
ficompl
mov
xchg
pop
mov
rcl
jge
mov
mov
fsub
and
mov
mov
fnstsw
push
aad
mov
fisttpl
cmp
loopne
sub
xlat
fstpt
test
ja
xchg
je
pushf
int
xor
and
sahf
mov
arpl
js
inc
into
xor
lahf
push
cli
xchg
scas
out
or
imul
sbb
sbbl
xchg
insl
enter
stc
cmpsl
xchg
dec
insb
or
pop
es
fdivr
cltd
into
lcall
dec
mov
jo
enter
sub
adc
pop
js
pop
loope
push
sub
insl
mov
pop
decl
fimuls
rcrl
or
mov
movsl
mov
stc
addb
dec
sbb
adc
xor
adc
enter
cmp
or
mov
add
sbb
cmpsl
adc
mov
add
pop
adc
xchg
sub
adc
ret
or
mov
mov
je
xor
out
test
vaddss
sbb
loope
rorb
and
or
icebp
inc
push
and
idivb
pop
out
adc
arpl
lds
mov
cmp
scas
cmp
std
add
and
filds
lock
rcrb
push
push
push
xchg
rorl
mov
adc
cs
push
sub
lock
sbb
add
aaa
mov
jge
dec
mov
pop
pop
cs
daa
mov
dec
lcall
inc
cmpsl
push
cmpsb
mov
pop
ljmp
fimull
jo
lea
cld
pop
mov
xchg
cmp
cwtl
jg
outsl
ja
out
cli
aam
fst
fcmovnb
orb
push
xchg
clc
inc
cltd
bound
and
int
mov
enter
fstpl
jl
adc
addl
notl
push
xchg
mov
and
and
and
idiv
adc
jg
sub
movsl
mov
stos
lahf
out
jne
or
fnstcw
out
movsl
sarl
pop
gs
sub
push
push
shlb
add
push
rcrb
pop
push
mov
mov
iret
lods
jb
mov
xchg
data16
insb
sbb
cmc
ds
out
lds
inc
pushf
lods
test
fidivl
aad
jb
jg
cs
fcoms
insb
sub
in
jbe
lahf
movsb
xlat
in
testb
lcall
inc
push
test
in
jge
add
fidivrs
dec
in
pop
pop
mov
arpl
ucomiss
pop
lods
xor
fwait
add
cs
and
xor
cmp
call
sub
sub
rclb
or
lret
pop
rcll
jl
mov
in
ror
mov
fisttpll
dec
loope
push
push
inc
jle
sbb
mov
das
add
sahf
mov
fsubl
jmp
xor
std
ss
cmc
das
xchg
xor
dec
aad
lret
push
ds
stc
dec
or
shrl
add
and
jbe
cmp
fildll
out
sahf
rclb
cmp
fs
std
jae
xorb
insb
fisubs
lret
xor
and
test
ror
push
cli
cmovae
pop
into
or
mov
mov
dec
call
lds
jl
xchg
cld
xor
stos
cmp
mov
stc
xor
or
ljmp
roll
popa
std
mov
mov
or
adc
jno
mov
push
insl
in
mov
fnstenv
push
jns
sub
dec
in
mov
enter
add
dec
push
test
into
push
sahf
hlt
mov
xchg
test
cmpsl
int
pop
cwtl
or
test
ret
pop
jo
pushf
mov
adc
aad
jle
cld
cmp
bound
dec
shlb
jne
adc
inc
mov
xrelease
addb
movsb
loop
stc
into
loopne
cmp
mov
in
jmp
cld
out
ficoml
js
mov
xchg
mov
mov
imull
mov
ss
sub
adc
lcall
dec
andl
inc
lcall
xor
push
mov
imul
mov
cmp
mov
push
cmp
shrl
int3
lcall
sbb
and
dec
sub
xor
jae
test
xor
and
fwait
jb
push
cli
sbb
sub
pusha
jbe
loope
outsl
inc
dec
add
pop
cmpsl
mov
dec
out
out
dec
lods
ret
js
xorl
sbb
or
loope
imul
icebp
push
scas
cmpb
mov
sbb
jmp
jmp
cmp
xlat
mul
iret
mov
cmpsl
or
lods
inc
or
loope
test
mov
push
pop
cmp
dec
enter
in
sti
imul
dec
inc
ljmp
notl
popa
add
jl
xchg
rcl
adcb
xchg
and
leave
jns
pop
sahf
push
jg
imul
cli
stos
or
mov
mov
insl
inc
stos
loope
sub
std
test
jns
mov
iret
mov
int
pushf
insl
mov
cli
lea
cmpsl
xor
cmp
add
sub
shl
jecxz
sar
subb
sbb
leave
push
dec
ja
loopne
push
or
pop
sub
xor
shl
mov
movsl
sbb
jmp
cmp
dec
shl
xchg
mov
adc
cli
in
loop
dec
ret
jbe
daa
sub
sbb
gs
xchg
rorb
loopne
sub
sub
push
shll
in
cmpsb
shll
sub
and
cmp
in
sti
adc
test
test
sbb
sub
add
lahf
jge
mov
scas
sbb
jp
out
sub
xchg
adc
cmp
shll
and
test
inc
inc
cmp
inc
cmpsl
inc
xor
push
test
psubsw
lahf
or
inc
add
dec
cmpsb
and
inc
loop
sahf
or
test
hlt
mov
xchg
fbld
enter
es
inc
jns
xchg
fmull
add
and
add
mov
loop
jmp
movl
std
mov
pop
arpl
es
js
pushf
sahf
loope
xor
leave
xchg
add
inc
pop
mov
xchg
lahf
push
lahf
lock
cmp
ficomps
sbb
pop
mov
int
ljmp
imul
fwait
data16
and
cmp
cs
pop
rol
imul
xchg
mov
mov
les
inc
sub
add
lea
cmp
dec
push
int
push
js
int
lcall
mov
mov
repnz
xchg
jmp
xchg
jns
mov
xlat
shl
int
jo
pop
rep
shlb
int3
test
sbb
xor
mov
dec
lcall
xlat
popf
pusha
enter
int3
xchg
jmp
adc
ret
lcall
sub
push
aas
popf
mov
arpl
lcall
aaa
add
adc
push
sub
inc
xchg
dec
xchg
ds
out
icebp
lods
cmp
add
aas
sti
pop
repnz
sbb
mull
pop
add
pcmpeqd
add
jns
sub
aad
or
sti
push
cmp
mov
cltd
sti
mov
and
push
fdivrl
fbstp
dec
mov
insl
sbb
mov
mov
repnz
add
imul
jge
inc
insb
pusha
xlat
or
cmc
ds
jge
loope
dec
mov
enter
push
xor
push
loope
aas
mov
outsl
loope
jp
push
fimuls
xchg
into
sub
jno
popa
mov
adc
cmp
jbe
fstp
enter
subps
xchg
pop
mov
mov
xchg
inc
test
dec
cmp
cmp
push
cmp
lcall
inc
lcall
lea
je
pop
xchg
cmp
arpl
or
enter
xchg
pushf
lret
data16
sbb
cli
xchg
std
xor
jmp
mov
in
out
loop
push
daa
pop
push
or
jb
sub
cs
mov
rclb
cmpsb
inc
ret
xchg
push
lcall
mov
xlat
or
push
sbb
scas
les
push
pop
pop
xchg
xchg
pop
nop
push
pop
cwtl
loop
lds
inc
loopne
enter
lods
fs
ljmp
dec
and
xor
iret
sbb
cmpsb
and
bound
lds
xchg
push
push
add
cmc
and
jg
sahf
frstor
sub
or
add
imul
push
dec
inc
icebp
sub
mov
mov
push
pushl
mov
pop
sub
out
and
lret
clc
loop
js
lret
mov
jbe
mov
outsb
out
lods
in
and
mov
pop
jne
inc
rcrb
insb
fcoml
sbb
pop
jle
cmp
sub
push
mov
push
cmc
and
mov
jle
repz
adc
dec
fdivs
xor
jmp
nop
and
xchg
push
int
mov
sarb
inc
xchg
stos
insl
add
cmp
sbb
pop
test
movsb
cwtl
iret
fstps
pop
and
xchg
mov
add
cmpb
jl
push
dec
inc
mov
mov
adc
pop
pop
cli
mov
dec
cmp
mov
xor
jp
xchg
inc
jo
shrb
mov
xor
popa
push
inc
jo
fstps
pop
orl
add
dec
mov
test
test
les
jecxz
add
sub
adc
sahf
mov
adc
sub
daa
dec
adc
mov
sub
pop
pop
xchg
stos
or
fistpl
jge
in
lret
out
mov
call
jle
test
les
pop
jb
mov
outsb
dec
ja
pop
test
int
and
mov
int
lods
sub
iret
sub
cltd
data16
pop
cmp
mov
clc
xchg
dec
cmpsl
sbb
push
dec
xor
int
add
mov
ds
mov
xchg
sub
xor
xchg
and
push
inc
cs
sbb
mov
mov
ljmp
stos
subb
mov
pusha
mov
push
clc
lea
fistpl
or
mov
cmpsl
push
addr16
enter
insl
enter
sbb
pop
loop
dec
sti
mov
push
push
pop
subl
cmpsb
ss
add
mulps
repz
hlt
mov
xor
dec
sub
xchg
seta
xorb
fistpll
jmp
cmpsb
lret
in
xchg
lock
les
jecxz
lea
sub
mov
nop
pushf
add
xchg
fistl
fcom
dec
mov
rorb
xchg
cmpsb
adc
adc
clc
cltd
add
fisubl
push
fstl
or
leave
jecxz
ficoms
push
lods
jle
loopne
jo
add
jle
fbld
jg
jb
xchg
pop
add
pop
leave
mov
and
sbb
fwait
jo
out
insb
mov
lahf
mov
rclb
push
ss
inc
dec
mov
cmp
jae
adc
lods
mov
jne
dec
shl
scas
mull
aam
ljmp
mov
and
out
inc
pushf
pusha
mov
xchg
pop
pop
or
ljmp
loop
dec
in
js
movsb
push
mov
push
dec
cmpsb
mov
in
sub
insl
adc
insb
pushf
fnstenv
pusha
lock
imul
lahf
rcll
jge
jp
pinsrw
nop
or
inc
jge
sahf
mov
dec
dec
lret
lret
insl
inc
cmp
ss
in
dec
fcmovb
repnz
jp
lods
mov
xchg
fisubl
xor
mov
cmp
dec
inc
add
pop
xor
shr
jae
movsb
sahf
cmpsb
lret
or
push
dec
inc
mov
pop
sahf
jp
in
pop
daa
sub
sbb
jl
in
and
mull
mov
movsl
shrl
mov
cmp
mov
mov
inc
loopne
les
loope
or
ja
mov
leave
jno
gs
les
sub
out
jnp
das
stc
mov
pop
cmc
or
fidivrs
xchg
and
jp
out
inc
loop
aaa
cmp
inc
dec
arpl
outsl
jne
fsubr
mov
cmp
aaa
xchg
add
and
mull
iret
in
out
and
push
add
jmp
imul
mov
jecxz
cmc
out
push
ja
or
add
out
pop
sub
inc
and
cmp
mov
lods
scas
out
mov
popa
int3
shrl
push
enter
xchg
lret
jb
lods
les
pop
test
sbb
aaa
popf
cmpsb
pop
nop
sub
push
push
faddp
jo
xchg
pmaxsw
fst
hlt
mov
or
xchg
cmpsl
dec
aas
hlt
and
scas
ds
adc
addr16
xor
push
sbb
in
lret
outsl
out
es
add
shl
insl
ljmp
lods
repnz
insl
pop
jne
es
sbb
das
adcb
in
adc
jg
in
mov
mov
pop
movsb
cltd
cmp
fcoms
jge
pusha
andl
fcomps
pop
sub
xor
lods
hlt
inc
arpl
mov
dec
and
mov
int3
or
mov
inc
xchg
cmp
fistpl
ja
push
add
leave
int
cmpsb
aaa
xor
sub
in
cmp
inc
sub
mov
ficompl
xor
lcall
mov
mov
lcall
leave
pop
dec
stos
shll
jo
imul
or
push
call
sub
sahf
push
add
outsl
stos
movups
data16
in
pop
mov
stc
sar
repnz
ret
push
cmp
sbb
inc
push
sbb
mov
mov
add
sbb
movsl
pop
inc
adc
int3
mov
inc
dec
cld
mov
add
fstpl
push
mov
js
repz
xchg
sub
js
mov
add
pop
lock
jno
clc
xchg
cmp
add
mov
lock
int3
jmp
jo
adc
lcall
in
mov
movsb
cmpsb
daa
negb
sub
pop
add
xlat
ljmp
dec
mov
jmp
cmp
or
pop
push
std
xlat
push
jb
int
mov
imulb
jo
fs
insb
sahf
lods
jo
vmaxss
andb
outsb
jge
pushf
frstor
addr16
imul
add
mov
adc
call
mov
lods
das
dec
sub
dec
mov
xorb
xchg
mov
cmc
pop
scas
out
movl
popa
cltd
mov
out
mov
push
and
lahf
xlat
dec
cmp
xor
jmp
adcb
jecxz
and
mov
fwait
ror
jno
sti
jmp
js
fsubr
pop
mov
dec
and
push
bound
and
mov
pop
pop
clc
mov
cmp
fistps
cmp
shl
mov
clc
loop
stos
into
adcl
push
sub
mov
out
into
jnp
ja
xchg
cmc
aaa
cmpsl
add
or
mov
ret
push
mov
fnclex
xchg
sbbb
mov
cmpsl
push
jne
mov
and
mov
mov
pop
imul
jg
sub
and
movsl
dec
rclb
int
mov
and
cs
icebp
ljmp
jecxz
xor
mov
cltd
ljmp
jle
loopne
mov
sbb
mov
xor
push
cmp
pop
popa
sbb
pop
cmpsb
sub
push
jecxz
pop
aad
pushl
or
pushf
je
icebp
fildl
pushf
adc
sub
mov
adc
js
jp
jg
popa
jae
or
adc
std
add
js
ret
mov
loopne
sub
cmp
sti
push
es
jae
shlb
or
jl
sti
mov
xor
mov
in
adc
sub
leave
popa
bound
xchg
ret
mov
push
sub
inc
jb
fwait
dec
mov
je
xchg
inc
push
push
mov
or
arpl
andl
pop
or
mov
test
mov
xchg
xchg
pop
lods
test
cltd
xadd
nop
cmp
inc
push
fdiv
dec
call
xchg
mov
sub
xor
shl
in
repz
adc
cmp
inc
xchg
add
rcll
mov
dec
add
sub
cmp
xchg
stos
mov
ljmp
push
stos
mov
into
xchg
push
cmpsb
fcoms
dec
sbb
mov
jp
inc
jle
lods
inc
adc
sarl
pop
repz
iret
dec
les
sti
sahf
jnp
cmp
jecxz
out
pushf
mov
int3
push
fldl
jg
rclb
outsl
pop
insb
mov
sub
jle
push
je
je
sub
cmp
sub
mov
int3
push
sub
stos
fs
fisubs
outsl
mov
pop
mov
inc
pushf
pop
sbb
add
pop
mov
js
aas
in
cli
push
std
sub
inc
and
out
jmp
and
jecxz,pt
xor
addr16
pusha
push
subb
popf
dec
dec
push
fs
div
clc
je
xorb
inc
xor
push
dec
jno
mov
stos
mov
sahf
mov
xlat
adc
loope
sahf
xchg
pop
mov
mov
jae
jns
mov
inc
shll
cmc
adc
xor
jo
push
pop
push
ret
pop
fnclex
sahf
cmp
xor
dec
mov
cwtl
out
std
sub
jle
or
outsb
in
stos
push
mov
es
cmc
sbb
xchg
mov
rolb
sbb
jl
dec
xchg
pop
sbb
lods
push
add
dec
sar
mov
addr16
je
adc
shlb
in
rolb
pop
adc
ds
adc
daa
lret
sub
push
ja
in
sar
push
dec
jle
mov
cmp
adc
mov
stos
mov
mov
popa
loope
mov
adc
jmp
movsb
push
mov
cmp
mov
sbb
mov
lods
inc
mov
xchg
in
dec
mov
leave
dec
fidivs
xchg
push
sbb
mov
dec
cmpsl
fsubl
in
je
push
call
sti
mov
pop
or
lods
mov
call
push
adc
push
mov
test
nop
add
ret
mov
lods
sub
ret
testl
lahf
or
cmpsb
push
jmp
or
xchg
jp
lea
scas
cmpsb
lock
xor
je
mov
push
cmp
jb
push
sub
stos
test
negl
mov
lret
inc
add
jae
jmp
xchg
cmp
popl
sub
push
mov
push
pop
lcall
negl
and
mov
xchg
and
pop
pop
and
and
add
xchg
pandn
pushf
mov
mov
outsl
cli
lods
or
insl
add
push
bound
mov
addr16
lcall
lods
sub
lods
insl
enter
mov
movsl
and
inc
xchg
jae
push
mov
popf
addr16
fwait
pop
addr16
jle
pop
insl
mov
ror
inc
lock
cld
xlat
in
popf
jg
sub
outsl
cli
jmp
xlat
adc
jp
je
addr16
call
pinsrw
arpl
push
mov
adc
fistpll
inc
mov
scas
or
rorl
adc
push
jb
cmpsl
push
xchg
lock
fwait
mov
mov
iret
dec
out
or
jmp
inc
jl
popa
mov
orb
lods
xor
pop
inc
xchg
nop
push
loopne
ret
repz
fmul
jne
loopne
ja
sub
out
negb
xor
pop
dec
mov
mov
adcl
mull
xchg
orl
xor
cmpsl
lret
pop
testl
jbe
cmp
pop
aaa
sub
jmp
xchg
adc
pop
adc
aaa
xchg
fcoms
fstpl
mov
push
dec
unpcklps
mov
or
jmp
popf
fists
movsb
js
inc
sub
add
outsl
mov
out
dec
mov
xorb
aaa
pop
mov
push
pop
notl
js
mov
mov
inc
out
xchg
mov
out
sbb
rcll
test
pop
inc
pop
sarb
ret
push
jb
cmp
int
mov
push
loop
enter
hlt
movsl
inc
cmpsb
push
and
jne
mov
push
pop
dec
fs
arpl
fisubrl
xor
subl
insl
test
flds
lock
sbb
mov
int3
cmpsb
orl
mov
sbb
push
bnd
in
cmpsl
mov
es
dec
xchg
addr16
dec
push
fldcw
mov
xor
jl
repz
push
rorb
push
mov
sbb
mov
and
pop
inc
leave
out
es
fwait
ret
mov
or
xor
jno
insb
pop
and
scas
inc
push
inc
hlt
mov
cmp
xor
sahf
dec
mov
dec
ret
aam
mov
xchg
jo
test
cmp
test
pop
stos
lods
das
cmpsl
enter
gs
pop
outsb
pop
sub
les
dec
sub
inc
mov
mov
push
mov
pop
jns
pop
mov
add
or
insb
xor
jbe
pop
imul
rcll
int3
mov
cmpb
mov
test
fmulp
aas
mov
into
dec
dec
ljmp
sbb
arpl
xor
cmpsb
ret
test
xlat
in
mov
adc
cmp
mov
scas
divl
filds
lret
aad
mov
push
test
pop
mov
xchg
xchg
and
in
inc
xchg
inc
inc
test
lds
leave
or
outsb
in
mov
insb
push
gs
aam
mov
std
pop
loope
pop
or
popf
xor
push
jnp
dec
mov
mov
ud2
inc
push
inc
es
pop
mov
mov
lcall
xchg
or
cld
or
loope
xlat
repz
popa
scas
iret
dec
and
adc
pop
mov
movsb
out
jns
jp
int3
into
sbb
testl
rcrb
pushf
xchg
xchg
xchg
xchg
mov
movsl
test
push
test
fsub
xchg
cltd
push
pop
cs
adc
xchg
mov
mov
inc
mov
and
in
adc
mov
cmp
jnp
pop
mov
mov
mov
cli
mov
inc
mov
mov
xor
shrl
sub
addr16
int
inc
pop
xorl
push
add
imul
adc
sbb
add
pop
fstl
cmp
jp
pop
das
adcl
movb
push
imul
dec
popa
push
nop
mov
pop
cmc
cli
xchg
int3
mov
cmp
mov
testb
or
cmp
dec
cmpsl
sub
data16
ret
repz
std
mov
mov
mov
mov
jmp
and
notb
xchg
dec
in
push
jb
das
call
pop
jp
int3
inc
movsb
push
cmp
test
jl
push
or
lds
loope
xchg
mov
rorl
and
cmpsb
lcall
movsl
add
mov
inc
xor
insl
aam
push
or
dec
out
mov
inc
lcall
and
lods
mov
insb
ficompl
outsl
lods
ja
dec
pushl
je
dec
ljmp
mov
mov
inc
aaa
std
fs
test
push
scas
rcr
stos
in
cs
pop
fidivl
sub
ds
sar
bound
push
mov
sub
orb
mov
icebp
movsl
fcmovnu
nop
mov
hlt
clc
mov
sub
push
fiadds
test
jle
lret
leave
xlat
push
bound
popf
out
inc
sub
mov
mov
pushf
and
adc
in
sub
and
pop
stos
int3
loopne
shl
in
jmp
lret
cmpsb
add
cld
outsl
loope
add
in
mov
xchg
mov
aam
sub
mov
out
popa
pop
jo
push
and
movsb
icebp
inc
pop
mov
adc
pusha
pop
fldt
dec
mov
daa
jne
xchg
mov
jg
pop
mov
adc
or
jo
fwait
sbb
sbb
cmpsb
pop
lea
sub
js
adc
data16
jl
es
and
push
shl
jge
cmpsb
push
and
add
movsl
out
jno,pn
jmp
stos
push
cmp
jbe
mov
into
roll
mov
push
pusha
aas
jg
out
test
das
mov
dec
fwait
xor
stos
adc
inc
pop
mov
sahf
or
jecxz
xchg
adc
cmpsl
xlat
movsb
scas
fdivl
data16
les
fisubs
mov
fs
adc
jnp
add
call
insl
jg
jno
xchg
clc
into
shr
aad
jle
add
xor
enter
xchg
stc
jns
jle
sbb
out
pop
mov
sub
ss
lods
scas
cmpl
adc
mov
les
sbb
scas
push
je
mov
xlat
daa
ds
movsb
arpl
lds
mov
jae
cmp
fadd
jb
mov
ret
or
sbb
pop
xor
adc
jmp
sub
sub
jp
jg
push
mov
jmp
lods
imul
int
and
and
jecxz
test
sub
ljmp
xor
je
aad
fimull
sbb
mov
call
ljmp
test
insb
inc
lcall
dec
cmp
fildll
inc
mov
lds
jno
push
in
lds
jb
xchg
xor
jbe
loopne,pt
inc
ja
or
and
lods
test
and
cmpsl
lcall
stos
mov
out
sbb
xor
adc
fistpl
cli
add
das
jmp
lcall
cmc
popa
fwait
sub
cmp
outsb
insl
loope
or
mov
add
push
mov
mov
insb
xchg
imul
and
xor
nop
sbb
adc
les
xchg
pop
icebp
mov
mov
mov
xor
pop
add
int3
xchg
movsl
daa
out
sti
mov
lock
andb
add
cmp
bound
pop
hlt
nop
fisttps
jmp
xor
out
cli
pop
and
inc
sahf
push
stos
add
fdivl
mov
icebp
push
push
nop
jmp
lock
cmp
mov
sbb
jne
adc
xor
sub
movsb
sbb
sbb
call
mulb
fucompp
pop
in
and
test
jl
jno
pop
mov
dec
xchg
sbb
movsl
mov
cwtl
dec
daa
lret
in
pop
mov
addr16
int3
mov
shr
mov
scas
mov
mov
or
push
xor
ficoml
filds
push
mov
xchg
jg
test
jp
ljmp
mov
or
sub
ljmp
lds
inc
push
bound
jge
or
test
sub
xlat
or
cltd
adc
into
push
push
movl
xchg
sub
sub
xor
movsl
jg
subb
aad
mov
std
or
loop
fnsave
push
scas
inc
pop
cmp
or
ss
mov
push
xor
rcl
int3
loope
add
inc
fwait
sbb
cmp
lea
pop
rcrl
call
adc
out
outsb
ds
nop
inc
mov
inc
cmc
sahf
sti
icebp
adc
push
sub
iret
pushf
push
loop
cmp
fsts
jecxz
mov
xor
test
pop
push
sbb
or
mov
push
fdivrl
mov
test
push
jmp
inc
sub
cmpsb
bsr
push
dec
pop
sbb
repz
stc
mov
adc
sub
cmp
mov
stos
clc
subl
cwtl
mov
mov
into
test
nop
dec
loopne
test
or
and
int3
into
push
jae
popf
mov
arpl
addr16
xor
into
stc
push
pop
or
push
xchg
jno
test
lcall
les
pop
mov
cwtl
jne
bound
mov
sti
mov
ds
sti
push
mov
or
sti
pop
sbb
cltd
cmpsb
pushf
enter
daa
jne
push
jbe
pushf
push
sbbb
imul
lds
pop
cmp
push
nop
ds
mov
bound
mov
pop
fiaddl
push
and
ss
lea
push
repz
sti
shl
popaw
cltd
leave
pop
out
xchg
std
xchg
test
gs
not
sub
fstpt
out
mov
fimuls
pop
jge
fstl
out
inc
out
jnp
or
xor
push
mov
jbe
inc
aas
push
fbld
push
push
jae
mov
mov
repz
mov
sbb
mov
fnsave
xor
faddl
pop
xchg
inc
frstor
lret
bound
sub
popf
fsub
sub
adc
adc
sbb
in
hlt
push
rolb
cmp
dec
mov
sub
jg
ret
and
cld
test
scas
jbe
mov
mov
jmp
rclb
push
in
fidivs
cmp
dec
cmp
bnd
or
push
jecxz
into
loope
inc
jne
pop
pop
test
int
pop
fmull
fcmovnu
outsl
adc
jns
insl
lret
xchg
and
xchg
lods
sub
or
loop
xor
arpl
orl
fwait
or
inc
bound
mov
mov
mov
stc
jmp
pop
in
into
ljmp
jecxz
mov
sub
test
jo
iret
jns
rorb
adc
inc
dec
std
push
shl
nop
imul
sub
jmp
scas
out
mov
fisubrs
out
sub
imul
push
inc
jg
cmp
fistpll
jmp
sarb
or
popw
mov
push
imul
popf
fnstsw
xchg
and
jns
in
or
sbb
mov
xchg
test
adc
push
es
jg
mov
push
fcmovnu
sub
mov
mov
push
mov
mov
and
test
lea
dec
push
lret
xchg
jb
das
fucom
jbe
mov
cmpsb
lods
add
add
inc
sbb
inc
mov
lods
arpl
xor
ret
mov
rcll
pop
push
or
std
fxam
pusha
fs
jo
ret
out
inc
add
adc
daa
daa
inc
pop
push
js
mov
fwait
push
gs
jl
mov
negb
jge
popa
aam
gs
orb
xchg
mov
sbb
addr16
xor
enter
dec
jo
stos
jp
inc
inc
cmpsl
add
out
jnp
push
dec
and
out
fisubl
xor
movsl
std
test
xchg
xchg
loop
lods
push
js
lds
les
cmp
inc
lds
scas
xchg
and
push
mov
sbb
rolb
adc
pop
mov
dec
xchg
dec
xor
push
repnz
inc
jg
xchg
andb
aad
packsswb
mov
xor
lods
sbb
mov
sbb
add
icebp
cli
bound
mov
ja
cwtl
cmp
jecxz
dec
add
add
adc
pop
push
and
fidivrl
push
in
stos
mov
imul
adc
and
xorl
dec
les
xchg
and
xor
jns
cltd
divl
mov
jnp
enter
and
sub
adc
pop
push
fistl
addr16
lret
shlb
das
hlt
into
pop
addl
xchg
inc
insl
cmp
sbb
mov
inc
mov
mov
aam
xor
in
sahf
or
lea
out
cmpsb
int3
fdivp
outsl
sbb
add
sub
sbb
jg
sbb
jnp
dec
aas
inc
std
fldt
push
insl
testb
adc
jno
mov
mov
push
and
inc
mov
push
leave
jecxz
daa
adc
jne
mov
scas
jae
xchg
pop
ss
xchg
xchg
popf
sti
enter
xor
popa
les
stos
mov
and
shlb
aaa
loope
xor
mov
hlt
jno
pop
std
dec
cld
mov
lea
rolb
in
aaa
jne
mov
pop
mov
xchg
push
pop
into
xor
cmpsb
mov
sti
mov
inc
jecxz
ret
jmp
xchg
cmp
sbb
pop
sbb
push
inc
jo
roll
aad
xor
adc
in
leave
imul
fsubrs
mulb
pop
adc
cli
xor
test
aas
sbb
dec
repz
out
xchg
jge
je
inc
shll
lock
pop
int3
xlat
pop
daa
int
mov
pop
jb
js
loope
push
movsl
nop
idivb
ret
lea
xchg
and
xchg
addr16
popf
pop
test
cmp
push
cltd
popf
jg
out
pop
out
pop
mov
inc
and
test
dec
lock
mov
jge
int3
jge
cmp
add
dec
mov
into
pushf
cmc
mov
mov
xchg
sub
mov
jl
lret
into
and
add
inc
jl
inc
xor
mov
pop
inc
inc
pop
adc
pusha
cmp
mov
or
mov
cmp
add
orb
in
ret
sbb
sub
andb
mov
lcall
and
pop
mov
adc
jns
jg
pushf
jno
mov
sbb
xorb
jbe
movsl
dec
xchg
int
xor
add
mov
mov
push
add
arpl
lea
lret
jb
mov
mov
or
jae
jns
dec
movsb
adc
testl
jne
shlb
aam
ljmp
ss
pop
call
lds
or
hlt
clc
xchg
mov
icebp
cmp
shrb
pop
hlt
mov
aaa
and
pop
ret
mov
mov
cmpsb
adc
cmpsb
rorl
mov
fisubs
xchg
mov
les
cmp
dec
jae
sub
jp
aaa
or
dec
xchg
test
dec
pop
xor
loop
mov
rol
pop
sub
sti
inc
test
imul
cmpsl
movsl
jp
and
lods
jp
push
mov
adc
in
imul
mov
dec
sbb
aaa
aas
movsb
mov
xor
sbb
aaa
pushf
sbb
rorb
inc
mov
push
add
cwtl
jns
out
mov
cmp
rorb
sbb
movsl
test
imul
es
aas
pop
les
jns
cmc
pusha
jno
sahf
rcr
or
and
push
mov
sbb
lea
pop
jge
pop
add
push
stos
sub
pusha
adc
addr16
sbb
xor
shrl
nop
adc
mov
insb
sub
mov
sbbl
jo
add
dec
adc
xchg
loop
xchg
je
js
scas
adc
movsl
and
rol
sbb
sbb
cmpsl
pop
fcomps
enter
cmpsl
ljmp
mov
xor
loop
dec
fnstcw
das
pop
cmp
icebp
or
xorl
push
jle
inc
mov
cmc
jns
jle
mov
adc
lret
outsl
sub
rolb
popf
mov
xor
jbe
push
mov
sti
mov
sbb
scas
add
out
out
fstpl
inc
sbb
sbb
adc
or
jae
out
pop
sbb
lahf
push
add
std
js
mov
or
pushf
xchg
fsubs
sub
or
push
pop
and
imul
and
cmc
adc
sarb
jg
mov
pop
loope
dec
scas
test
sahf
inc
add
mov
int
cmp
insl
sahf
add
scas
ljmp
sub
xchg
aad
mov
icebp
mov
ss
test
sbbl
or
insb
cli
mov
fwait
lret
inc
pushf
mov
call
jo
enter
xchg
popa
sub
gs
hlt
ret
in
xchg
push
andb
sub
mov
cwtl
cwtl
mov
loop
adc
xchg
rcll
imul
es
dec
ljmp
push
dec
cmp
pop
mov
cmpsl
bound
mov
loope
mov
enter
cmpsb
mov
enter
mov
adc
ret
aas
leave
mov
mov
test
ja
pop
dec
inc
cltd
mov
push
push
aaa
lock
shl
scas
out
test
insl
lcall
xor
xor
jmp
mov
ds
cmp
aam
jmp
cwtl
xor
aam
mov
pop
dec
adc
cld
iret
xchg
imul
pusha
jmp
cmpsl
mov
js
icebp
sbb
mov
icebp
dec
daa
dec
cltd
bound
pop
mov
enter
inc
scas
adc
xor
shlb
mov
dec
pop
pop
sbb
pop
push
pop
int3
jb
fnsave
hlt
push
cmp
and
mov
push
sbbl
aad
jle
mov
cmpsb
clc
fnstcw
mov
mov
adc
in
mov
push
inc
imul
rcrl
rclb
xchg
es
xchg
xchg
sub
in
fdivr
rorb
cld
outsl
inc
ja
fcmovne
jbe
outsl
mov
cmpsl
jmp
pop
cmp
xchg
test
scas
ss
movsb
outsb
adc
mov
xlat
adc
rcrl
sub
leave
push
push
in
mov
xchg
in
fwait
sbb
xor
mov
je
xor
rcrl
sbb
adcl
sahf
inc
shll
mov
push
js
mov
mov
les
aas
pop
inc
pop
inc
sbb
pop
cld
enter
lea
sub
bound
mov
inc
scas
jle
in
mov
std
aas
jp
aad
xchg
xor
cmpsb
cmpl
inc
and
pushf
aas
or
mov
cmpsb
jle
and
pop
mulb
or
jne
mov
sbb
push
addr16
cmp
and
dec
fcomps
cmp
xchg
cltd
rolb
sub
faddl
dec
adc
sub
dec
and
ss
sub
or
insb
repz
inc
push
inc
add
jno
lret
adc
lret
ret
jae
loop
dec
jl
jmp
cmp
sarl
cmpsb
daa
pop
pop
mov
inc
jg
mov
push
mov
xchg
nop
sete
cld
and
lea
shrl
push
push
inc
jle
iret
imul
lea
lods
sarl
dec
andb
test
movsb
xchg
push
arpl
cli
clc
xor
or
mov
std
loop
addr16
xor
push
int3
dec
icebp
arpl
xor
mov
xor
xchg
mov
xchg
pop
leave
fs
dec
movsl
sub
jmp
fiadds
xchg
cmpsb
jns
popl
xchg
push
fidivrl
popf
icebp
into
aaa
test
scas
sub
adc
lret
mov
pop
ficoml
or
movsl
xchg
data16
daa
fnsave
imul
jmp
lahf
ror
test
add
push
lods
mov
shll
insb
push
movsl
push
scas
enter
cmc
aaa
and
or
fists
in
sbb
ficompl
adc
pushf
pop
dec
outsl
nop
jo
mov
sbb
imul
push
ja
aam
jns
or
movsl
adc
lock
adc
ficompl
jns
push
sbb
pop
push
jl
lods
xchg
scas
fucom
xchg
jmp
push
adc
fcmovne
jl
inc
fadd
mov
and
pop
jg
fistpl
sbb
mov
sarb
sub
pop
in
and
jae
dec
sub
pop
cmp
jbe
mov
sarb
xchg
add
inc
arpl
js
clc
mov
add
or
fistps
in
mov
mov
sbb
pop
push
inc
cmpsl
cmp
movl
sub
cli
inc
fnsave
push
jp
sbb
loopne
xlat
jo
and
pop
sub
sbb
and
mov
arpl
cli
jne
hlt
repnz
and
test
and
mov
cli
lahf
xchg
cwtl
push
or
movsb
ret
pusha
and
jge
sbb
mov
test
jae
push
push
loopne
push
jne
out
mov
inc
fcompl
add
stc
or
flds
xchg
adc
dec
dec
fidivrs
mov
insl
notb
xchg
test
das
idivl
mov
pop
dec
mov
fs
inc
rcl
xor
insl
pop
enter
mov
sbbl
inc
or
inc
jns
push
sarl
out
xchg
mov
inc
mov
stos
mov
stc
mov
lock
and
add
addr16
cmp
lret
or
lods
push
jp
add
int3
es
sub
fistpll
addr16
movsb
push
loope
arpl
pop
sub
and
mov
xor
aaa
dec
jns
xchg
push
sbb
fstps
add
les
stos
insb
iret
push
inc
jecxz
xchg
insb
mov
push
adc
sbb
jmp
push
cmp
dec
cmpsl
add
adc
sarb
jmp
stc
dec
add
fsincos
ret
loop
std
mov
dec
xchg
and
lock
push
rorb
mov
adc
insl
cmpl
push
inc
clc
push
dec
mov
stos
mov
sub
gs
mov
xlat
pop
sub
dec
jae
ror
sub
and
out
fwait
subl
and
add
add
pop
mov
jae
inc
xchg
loopew
or
dec
fcoml
repnz
xchg
out
les
pop
adc
and
pop
ja
xor
loop
push
push
inc
cli
aaa
sub
call
xchg
stc
leave
xor
fstl
repnz
xchg
add
mov
subb
mov
lock
mov
lea
movsl
lock
mov
fists
imul
adc
adcl
fisubrl
ljmp
mov
push
lret
sbb
push
clc
loop
xchg
pop
sbb
push
sarb
cmp
mov
lahf
arpl
scas
cs
aam
push
mov
push
ret
lods
and
fwait
sbb
leave
and
aaa
rcll
sub
pop
out
xor
xlat
push
ja
xor
mov
sbb
int3
sub
lcall
mov
shrb
movl
jb
mov
jp
insl
fidivl
in
aaa
into
mov
call
mov
xor
mov
cmpb
clc
iret
xchg
out
jns
mov
sbb
ljmp
lds
fdiv
mov
push
xlat
mov
out
ja
sbb
sbb
cmc
push
or
ja
inc
mov
fs
repz
mov
mov
pop
inc
test
push
and
jmp
jnp
pushf
sub
mov
notb
fucomi
sbb
sbb
sahf
xchg
ss
int3
add
out
cmp
xor
shlb
inc
xorb
mov
fstpt
scas
add
adc
lcall
adc
pop
jne
roll
data16
lock
rcl
or
jecxz
mov
mov
sub
push
repz
mov
dec
and
fdivs
mov
lds
ja
call
fcmovnb
stos
rclb
mov
jl
fdivrl
or
gs
sbb
rcrl
arpl
leave
idivl
insl
and
bound
cmpsb
mull
dec
lahf
daa
adc
dec
pop
jne
mov
xchg
jge
out
add
pop
push
sub
es
pop
lds
mov
loopne
loopne
or
sahf
sub
pop
push
or
stos
xor
repnz
inc
adc
ror
adc
fimull
jnp
inc
mov
daa
imul
jbe
adc
push
stos
add
and
or
jmp
push
jne
jmp
and
inc
sub
mov
imul
enter
fistl
aaa
push
fstps
mov
bnd
and
xchg
cmp
dec
js
fldenv
xchg
or
add
sub
cmp
jne
in
cmp
flds
pop
dec
add
cmp
dec
mov
jbe
insb
adc
push
sub
mov
mov
mov
fwait
or
cmp
and
pop
mov
mov
inc
or
cmp
dec
adc
inc
enter
mov
lahf
sub
fsubrs
sahf
sbb
scas
xor
add
or
jle
jle
out
xchg
xor
out
in
out
dec
imul
and
and
pop
dec
cmp
adc
sub
stos
push
xorb
pop
fidivrs
cs
xlat
call
xchg
push
cmp
outsl
xchg
cli
lea
mov
cmp
insb
icebp
ss
and
out
test
ret
shlb
stos
mov
cmp
mov
push
mov
sub
inc
lret
rol
add
fwait
mov
adc
out
cmp
add
push
pop
loopne
popf
jb
popa
es
test
push
nop
scas
cmp
add
sbb
fiaddl
lock
int3
mov
out
cmc
fwait
jmp
in
testb
outsl
in
fwait
test
andb
fdivr
scas
cmp
add
out
mov
inc
adc
cmc
sahf
fdivrl
in
inc
insl
lret
mov
in
data16
arpl
lods
popa
mov
xlat
jg
ja
xlat
out
inc
insl
pop
mov
imul
pop
fstp
jg
jmp
sbb
ljmp
arpl
push
stos
cmp
mov
pop
adc
filds
notl
lret
outsb
adc
scas
dec
sti
les
and
xchg
subl
lret
jecxz
into
ja
popa
mov
pop
push
xor
mov
mov
in
lock
es
sbb
fdiv
movsl
in
cmp
adc
mov
jno
jmp
xchg
ret
xor
out
iret
in
int3
cmp
inc
in
mov
sub
lods
inc
lds
scas
mov
enter
inc
ss
mov
es
daa
outsl
sbb
jge
adcl
aam
mov
les
inc
and
ljmp
lods
push
hlt
cltd
push
cs
add
pop
cmpsb
lret
adc
out
les
sub
mov
test
cmp
inc
dec
mov
jae
xlat
daa
imul
divl
push
mov
or
mov
cwtl
mov
and
push
repnz
and
mov
jg
fmul
mov
ja
ficoml
clc
rclb
push
roll
adc
cltd
jae
pop
sarb
inc
pop
enter
mov
pop
xorl
sbb
xorb
test
jns
and
mov
xor
aaa
enter
cltd
imul
adc
fildll
pop
mov
aas
arpl
or
stos
orb
leave
in
shlb
xor
push
adc
xor
cli
outsb
loop
push
sub
rcl
inc
push
fs
test
inc
pop
xchg
mov
sbbb
inc
movl
iret
jp
stos
aas
add
and
and
sti
xor
nop
xor
xchg
and
sbb
cmp
notb
fsubrl
or
dec
sbb
xor
nop
aad
xor
pop
xor
mov
lods
mov
iret
mov
mov
push
sub
pop
sub
rcll
dec
cmp
aaa
das
pop
cwtl
xor
aad
mov
shrl
cmp
rclb
push
call
test
jo
out
enter
mov
xchg
jne
arpl
test
and
loopne
jbe
ja
fisubl
inc
and
fs
push
cmp
adc
cmp
fnstsw
stos
clc
out
mov
sub
jo
push
xor
cwtl
xchg
add
cltd
das
out
add
lods
int
xchg
add
in
jb
mov
mov
cmpb
out
cmp
rorl
popf
dec
xchg
lea
push
ja
mov
push
movsb
out
ss
jp
addr16
cmp
fimuls
and
cmc
movsl
mov
mov
fwait
mov
sbb
scas
pop
cmp
notl
mov
popf
sahf
aas
fptan
sbb
jecxz
add
loopne
add
pop
cmp
pop
cmp
mov
shl
addr16
out
pop
int
cmp
lret
imul
sarl
fidivl
ds
sub
cmpsl
mov
jb
shll
test
leave
sbbb
insl
out
or
add
add
cld
movb
lock
pop
add
xor
decb
cmp
clc
ljmp
sbb
mov
xchg
movsb
mov
or
repz
ss
xchg
pop
mov
fsub
dec
out
mov
pusha
fcomi
fdivrl
add
cmp
bound
push
cltd
mov
dec
pop
pop
daa
pop
adc
jecxz
cmc
mov
push
out
cmp
cli
xchg
pop
sub
xchg
ror
out
inc
mov
mov
fwait
outsb
scas
sti
mov
adc
out
mov
enter
loope
jo
adc
and
clc
mov
push
stos
and
insb
and
push
scas
mov
aad
loopne
clc
ds
lret
pop
cltd
sub
inc
dec
scas
jge
inc
paddusb
mov
and
cmpsb
push
mov
aas
mov
sbb
jp
jg
cltd
insb
pop
outsb
jecxz
add
mov
dec
cld
jo
dec
leave
mov
or
jle
popa
dec
in
loopne
rolb
cmpsb
repnz
iret
ret
subl
std
fs
inc
stos
dec
in
sub
mov
leave
mov
add
add
addr16
inc
xor
pop
xchg
iret
or
and
mov
pop
int3
popa
loope
pop
outsb
fucomip
jo
sub
js
xor
jmp
push
sub
xchg
sbb
test
jb
ror
jae
inc
fcomi
jl
dec
push
loop,pn
xchg
xchg
push
and
pop
xor
mov
and
and
ja
sbb
dec
iret
mov
xchg
insl
adc
inc
adc
scas
inc
push
test
std
lret
inc
in
rorb
scas
jns
hlt
jne
fwait
inc
ja
xchg
mov
sti
int3
test
mov
hlt
loop
jg
xchg
das
out
add
push
dec
mov
adc
xchg
pop
sub
bound
and
or
dec
test
mov
outsb
mov
xchg
xchg
inc
lea
arpl
aas
fs
mov
xor
cwtl
mov
jnp
mov
mov
aam
movsl
out
push
out
cmpsl
popa
push
decl
push
aas
fildll
rorl
cmc
xchg
xchg
mov
xchg
add
dec
sub
or
sbb
or
push
mov
pop
sbb
insl
mov
repnz
xlat
outsl
imul
lea
xchg
cs
push
adc
dec
ret
mov
push
mov
sarb
test
mov
push
jecxz
dec
cld
or
jl
dec
mov
mov
cmp
and
push
pusha
fisubrl
movsl
pusha
imul
mov
mov
xor
out
adc
push
outsl
adc
rol
jg
push
xor
cld
lret
lret
js
popa
push
mov
sub
pop
lods
clc
fldl
xor
stos
decl
adc
jo
jno
ja
int
pop
and
or
icebp
xchg
popa
ds
pushl
gs
add
jnp
add
rclb
cltd
lcall
imul
js
sbbl
cmp
pop
xor
or
lcall
outsl
loope
aas
adc
bound
dec
or
pop
jg
enter
mov
pop
pop
bound
jmp
sub
xchg
xchg
aas
and
inc
sar
js
cld
xor
jg
repz
daa
xor
add
mov
xchg
xor
or
sub
out
filds
ja
cli
ds
add
std
in
or
popf
add
adc
test
jp
mov
push
lods
or
xchg
cld
push
in
mov
test
lds
movsb
adc
les
jmp
jbe
les
cmp
push
mov
int3
dec
test
test
insb
roll
out
shll
call
inc
add
and
jge
or
ss
ja
aas
sub
mov
mov
push
dec
sti
jno
test
xchg
push
fnstenv
out
dec
cs
outsl
or
lahf
rcr
jne
inc
cltd
dec
int
into
jl
xor
out
popa
movsl
lret
mov
mov
in
xchg
dec
jnp
mov
addr16
fwait
stc
mov
into
inc
adcl
jbe
inc
mov
lods
nop
and
or
dec
hlt
push
mov
dec
call
and
imul
mov
push
add
dec
lcall
pop
lcall
add
movb
inc
jle
xchg
mov
ss
mov
push
sbb
mov
xchg
cmp
xchg
aas
mov
mov
in
test
fs
fsubrl
pushf
sub
cltd
jl
int
mov
mov
sbb
outsl
and
jle
mov
inc
test
add
es
or
lret
out
and
or
mov
out
xor
icebp
jns
add
testl
mov
lret
xor
cli
out
rcr
test
sbb
dec
outsl
xorl
aad
stc
add
aad
ret
lahf
daa
push
dec
mov
jmp
xchg
xor
push
push
psubsw
xor
push
mov
xor
scas
aam
mov
mov
inc
xchg
xchg
sub
xor
in
sbb
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
xor
jmp
push
cmpb
mov
icebp
cltd
xchg
mov
xchg
fsubs
jp
fstpl
jp
lcall
mov
dec
data16
popf
sub
in
pop
outsb
imul
adc
stos
mov
jbe
popa
mov
ljmp
dec
mov
inc
jo
ljmp
ljmp
cltd
xchg
jmp
test
lods
fistl
pop
xchg
fiaddl
mov
cli
ss
dec
or
lret
xchg
sub
shll
repnz
jecxz
mov
push
add
enter
push
sbb
adc
and
in
pop
pop
into
dec
testl
daa
cmpb
popf
jl
add
pop
or
out
or
mov
cli
xchg
mov
mov
dec
mov
fists
cld
lods
rcll
sti
mov
int3
popa
jl
clc
cmp
cmpsl
adc
jl
pushf
in
push
pop
cmc
ret
lods
adc
gs
test
mov
xchg
lret
mov
cmp
and
scas
mov
inc
es
rcrl
ljmp
sbb
sub
rorb
add
rcr
outsb
and
imul
ds
adc
iret
out
out
faddl
fnstcw
ds
push
insl
das
cmp
add
stc
ret
int
ss
ja
inc
test
xchg
sbb
xor
insl
repz
pop
xor
fwait
dec
test
xchg
ss
cmp
cwtl
fstl
stos
adc
push
test
push
inc
shr
in
loop
cmp
ljmp
mov
nop
cs
ret
push
stc
pop
sbb
mov
loope
clc
lcall
jl
mov
aas
repnz
fisttps
pop
inc
lea
xchg
adc
cmpsb
nop
icebp
loopne
pushl
pop
cmpl
dec
mov
mov
sarb
push
jno
pop
sbb
push
xchg
sbb
mov
lret
js
in
inc
jno
icebp
push
iret
and
push
sbb
mov
mov
mov
inc
mov
addl
testl
icebp
cltd
pop
aad
sbbb
fdiv
scas
or
in
or
out
mov
cmp
push
fs
xchg
inc
sbb
push
pop
ret
insb
push
loope
repz
loop
jge
in
mov
outsb
mov
push
mov
add
fadd
adc
subb
add
and
add
sub
js
lret
scas
hlt
pop
xchg
pop
inc
les
loopne
out
hlt
cmp
test
int3
mov
pushf
xchg
or
ja
mov
sahf
push
movaps
out
jp
arpl
add
push
cmp
ret
push
push
and
cmp
mov
jnp
add
fbld
pop
dec
pop
pop
pop
xor
daa
mov
adc
pop
add
sbb
adc
decl
pop
call
daa
mov
jecxz
sub
in
clc
icebp
push
cmpsb
std
inc
mov
pop
jecxz
repnz
xor
daa
repz
ds
adc
pop
movsb
and
mov
pusha
mov
cmp
adc
pop
mov
sub
frstor
in
push
sub
mov
fildl
push
sbb
lahf
add
inc
js
jg
jecxz
xor
mov
imul
jmp
xchg
out
scas
sbb
aaa
mov
add
addr16
mov
mov
xchg
jl
ret
fucomp
mov
cmp
xor
jb
outsb
jae
rolb
test
sub
rorl
int3
mov
cmp
push
loop
shl
pop
loope
popf
xchg
xchg
adc
loop
dec
repz
fmull
push
sub
and
sbb
aam
dec
aam
pop
and
sbb
ficoms
rclb
inc
incb
hlt
mov
sbb
hlt
add
ret
ret
sarl
jp
js
mov
jno
repz
clc
pop
adc
sub
or
inc
push
lds
sbb
test
mov
movsb
pop
pop
ljmp
fadds
pop
orl
xor
loope
inc
mov
out
mov
or
and
pop
stc
ljmp
or
dec
rep
xchg
xchg
push
popf
es
shlb
jns
fstl
inc
ss
sbb
cmp
test
fsubrs
out
mov
fucomip
mov
ret
outsb
inc
insl
dec
dec
and
mov
push
adc
fwait
loop
and
push
lcall
rcrb
push
shrb
mov
adc
jo
dec
xchg
adc
mov
mov
mov
pop
out
out
dec
dec
dec
fucom
lea
xor
push
mov
inc
icebp
pop
lcall
in
test
pop
fdivl
fst
iret
sbb
dec
sahf
in
icebp
sub
xor
insl
add
jge
push
fildll
movsb
add
int
push
sarl
aad
in
jo
xchg
dec
and
or
lds
xchg
mov
inc
push
xor
mov
in
rcrl
iret
lret
mov
inc
and
fsubr
or
rcl
dec
push
mov
cwtl
adc
inc
in
dec
or
jne
scas
push
insb
jg
pop
push
inc
pop
lods
rolb
push
lret
inc
lret
xchg
mov
roll
sarb
adc
repnz
aam
gs
cmp
rorb
xor
cwtl
ret
xor
divb
ret
sub
jnp
clc
pop
in
xor
mov
and
fldt
outsl
sub
mov
lcall
adc
out
jecxz
out
nop
mov
pop
imul
es
or
stos
mov
int
aaa
pusha
inc
ret
jbe
inc
ret
lock
xor
nop
xor
mov
jbe
jae
push
mov
or
ljmp
dec
mov
sbb
ss
insl
dec
js
jge
cmc
inc
pop
pop
or
mov
sub
sub
jle
hlt
push
adc
in
cwtl
sub
cli
sub
mulw
test
xlat
mov
test
sub
push
loope
decb
fchs
or
adc
push
pop
jnp
int
sbb
ljmp
jno
aad
cwtl
movsl
and
or
loop
sbb
outsb
xchg
pop
jb
dec
arpl
jbe
xlat
andl
outsb
sar
in
out
push
push
jnp
ror
add
pop
mov
adc
dec
mov
and
jmp
movsl
lfs
outsb
jmp
sbb
out
imul
add
test
das
mov
sbb
xor
movsb
das
jecxz
mov
mov
inc
dec
andb
fisubrs
in
in
or
sbb
test
out
push
cmc
je
mov
lds
in
pop
and
insb
mov
jo
sub
jae
sbb
pop
pushf
scas
ljmp
sahf
jb
mov
rorl
jl
adc
mov
pop
adc
fadd
or
dec
aaa
daa
sub
jo
adcl
mov
cmc
jmp
pop
xchg
std
pop
jno
sub
fimuls
filds
repnz
sbb
dec
dec
and
jb
movsl
scas
fidivrs
cmp
dec
cld
std
aad
jmp
mov
dec
andb
add
rorl
lret
sub
xor
fidivrs
jo
pop
insb
mov
fneni(8087
sbb
jp
inc
and
mov
test
jp
dec
jns
adcl
into
loope
into
std
add
inc
cltd
add
popf
ljmp
cmpsl
sub
xlat
pushf
lods
inc
mov
jle
sub
sbb
jns
or
stos
lahf
in
notl
lret
in
lea
test
jp
fisubrl
insb
out
push
mov
inc
test
adc
enter
rorl
or
int
shlb
pop
hlt
push
dec
dec
clc
es
or
frstor
pop
imul
cmp
or
cmp
adcb
in
dec
cmp
sahf
ret
push
xchg
push
xchg
lock
push
lahf
jl
jecxz
filds
fmuls
xlat
pop
cmc
and
xor
cli
fidivl
incl
cmp
pusha
repz
mov
movsl
ret
aas
shll
das
push
daa
mov
mov
inc
and
adcb
add
loop
dec
mov
call
sub
outsl
loopne
fcoml
push
cmp
enter
scas
testl
sub
mov
inc
mov
ds
test
scas
ljmp
jl
and
leave
jp
sti
fisttps
mov
cmp
dec
and
fldcw
and
push
mov
pop
out
fisubrs
mov
pop
adc
inc
shll
les
cltd
or
scas
fimull
mov
xchg
add
pop
adc
push
imulb
cmp
mov
sub
mov
shll
sbb
xor
adc
xchg
jno
mov
inc
cmp
daa
jp
repnz
add
and
stos
fwait
or
sub
mov
iret
cmpsb
in
xchg
add
sbb
ja
xor
xchg
outsb
xchg
sbb
mov
cmpsb
scas
xlat
jo
mov
ret
push
insb
stos
xor
fisubl
ret
test
daa
or
int3
mov
cmc
inc
and
mov
inc
and
cli
cmp
xor
imul
and
enter
jp
fldcw
or
mov
leave
push
enter
out
dec
jno
dec
aam
sub
into
or
mov
repnz
jns
pop
jmp
pop
into
sbb
orl
sub
arpl
lcall
or
daa
ret
test
mov
mov
xchg
inc
jb
out
insl
pop
pop
shll
bound
rorl
rcll
and
sbb
push
jo
pop
push
call
stc
mov
inc
lret
nop
rcrl
or
pop
fcoms
mov
cmc
pop
sbb
jp
fucomi
sub
fsub
fldenv
mov
shll
fistpll
jle
push
sub
push
cmpsb
aaa
mov
jne
call
mov
cltd
pop
outsb
pushf
icebp
pop
jmp
cmp
into
pop
cltd
aaa
inc
fcompl
jnp
inc
pop
fistpl
ss
pop
sub
jne
imul
cmp
into
call
cmp
xchg
xchg
sbbl
jno
imul
shlb
movsb
cmc
or
lds
jno
inc
xchg
push
and
scas
xor
jge,pt
pop
pop
aas
notb
sbb
mov
lret
in
jmp
loopne
push
and
inc
iret
jmp
test
adc
inc
movsb
inc
psrld
sub
andb
fwait
pushf
xchg
lods
lret
pop
pop
dec
dec
popa
std
cmpl
dec
mov
inc
cmp
mov
cmpsl
or
shlb
cltd
mov
imul
jb
fsubs
mov
or
ds
push
inc
mov
dec
scas
sbb
xchg
repnz
adc
jmp
out
xor
scas
dec
nop
and
dec
sbb
fstps
add
lods
in
movl
movsb
jno
dec
lods
pushf
dec
mov
push
pop
cmp
dec
lret
fucomip
mov
adc
in
push
pop
cltd
dec
and
and
cmpsb
hlt
xchg
in
repz
push
dec
mov
int3
mov
pop
leave
gs
xor
jb
cmc
push
lahf
dec
inc
jae
push
mov
int
cltd
fidivs
xor
mov
aaa
cltd
fisttpll
sti
je
movsb
mov
add
fstps
movsb
movsl
and
cmc
lods
idivl
faddp
adc
xor
lcall
push
sbb
ss
xor
mov
ret
rcll
adc
sub
fsubrs
insb
repnz
ret
rcrl
mov
mov
in
inc
mov
ror
adc
ret
xor
inc
aam
lods
mov
adc
xchg
popa
xchg
adc
stos
mov
out
pop
inc
jmp
pop
jle
lret
popa
ret
decl
popa
and
push
out
clc
pop
dec
into
or
cmp
and
jmp
mov
jo
xchg
push
add
cmp
jle
lds
fs
sub
test
xor
mov
loop
repz
div
cmp
lods
push
sbb
sti
jmp
rol
adc
mov
xor
sbb
xchg
jge
ret
pop
xchg
cmpsb
pop
lods
mov
or
inc
pop
mov
dec
addr16
xor
aam
xchg
lea
and
add
pop
mov
push
jecxz
xor
cld
fcmovb
cld
cmp
pop
clc
cmp
adc
loopne
jnp
loope
fnstcw
jne
pusha
pop
sub
sbb
xor
movsl
aas
inc
ret
mov
or
ja
in
dec
push
nop
nop
outsb
dec
pop
xchg
push
clc
dec
sahf
test
xor
rcrl
dec
cmp
mov
or
fwait
jno
pushw
adc
lock
mov
mov
sti
into
pusha
add
xchg
dec
fidivl
fnstcw
sbb
jg
cli
fwait
cld
cmp
and
fcompl
sub
jge
cmp
es
xchg
adc
outsb
lahf
enter
aaa
in
inc
sti
sub
std
sti
pop
add
sub
add
fcmove
sbb
test
leave
sub
out
cltd
je
cmp
mov
test
cmpl
sub
jle
mull
mov
loop
dec
cmpsb
jb
in
cmp
add
jmp
aaa
les
push
mov
popa
hlt
pop
js
int
mov
dec
dec
jecxz
aas
les
jp
inc
mov
add
sub
cwtl
xchg
dec
rsqrtps
adc
rcl
mov
cmp
dec
test
iret
jae
jno
dec
lods
or
mov
repz
pop
movb
in
pop
stos
lret
lea
fnstenv
inc
movsl
or
jno
jns
sub
mov
and
pop
mov
fbstp
sbb
in
mov
jb
adc
add
inc
iret
call
mov
mov
jns
and
pushf
jb
inc
inc
and
cmc
in
fucomip
mov
mov
and
sub
fnstsw
and
pop
cmp
stos
lret
mov
add
mov
inc
sbb
dec
mov
ljmp
sub
and
inc
aad
push
lcall
sub
cmp
cltd
mov
jmp
xor
xor
in
les
sub
fadd
jp
sahf
imul
pusha
out
jle
mov
sbb
insl
jp
cmp
jne
jg
movb
cmp
mov
or
inc
jecxz
mov
bound
cmp
repz
shll
sbb
pop
ret
aam
das
mov
nop
sahf
cmc
jecxz
repnz
aas
sub
movsb
and
mov
in
ffreep
cli
cmp
push
fists
push
stc
add
xor
inc
dec
aaa
xor
push
inc
xchg
ret
xorl
sti
pop
mov
cmp
sub
cmp
repz
cmp
jb
cmp
mov
outsb
cmp
bswap
popa
jge
push
rolb
pop
cli
push
pop
push
xor
cmpsl
jne
lret
test
jae
jne
sbb
data16
lahf
inc
xor
movsl
mov
daa
lods
pop
int3
push
fmul
cmp
cmp
daa
jecxz
scas
push
lret
or
inc
xchg
addb
mov
or
in
dec
mov
movsb
cwtl
inc
add
ss
fidivl
popf
fs
sarl
dec
fisttpl
pop
push
test
out
push
inc
inc
lahf
int3
fmul
sub
sub
mov
push
sub
mov
ret
mov
popa
ja
push
sbb
push
test
fcomp
jge
jne
inc
call
inc
push
inc
icebp
movsl
cmp
aam
dec
lret
mov
cmpsb
fisttpll
mov
repnz
lret
aam
stos
cmpsb
push
rcrb
mov
sahf
sbb
pop
xchg
mov
stc
dec
pusha
or
loopne
flds
mov
add
mov
inc
jbe
mov
mov
mov
in
mov
add
mov
ret
adc
pop
dec
enter
std
repz
cmp
leave
shrb
stc
fdivr
adc
rcll
loop
cmc
idivb
or
xchg
lret
ljmp
jle
sub
add
sahf
cmp
pop
ds
sub
cltd
into
test
mov
xor
or
mov
fucomp
lcall
xchg
mov
cmp
mov
dec
jl
aas
push
mov
shll
add
invd
dec
mov
test
push
call
int3
xor
fisubrs
mov
adc
jb
push
in
mov
lds
fidivs
pop
ja
inc
mov
fwait
jns
push
xchg
xchg
xchg
push
scas
movsl
ret
outsl
lea
and
mov
or
roll
shll
outsl
jge
ss
jae
dec
cmp
sub
push
lret
xchg
add
and
xchg
adc
test
dec
inc
in
adc
mov
pop
xorb
insl
in
push
adc
hlt
lods
dec
loopne
arpl
mov
jecxz
lods
mov
and
je
sbb
rclb
mov
aaa
cmp
mov
sbb
jne
fcomps
xor
cmpsl
dec
mov
hlt
mov
or
dec
vmwrite
sbb
mov
adc
andb
add
jp
lock
imul
mov
ja
push
movsl
and
insb
mov
cld
jo
js
sbb
xchg
ss
xchg
and
ds
aas
push
jle
or
push
rcrb
popa
jmp
cltd
xlat
out
ret
cmp
imul
arpl
dec
mov
repnz
mov
push
adc
mov
stos
sub
jne
mov
in
inc
in
ror
aas
int
outsb
xor
xchg
xchg
ret
shr
lock
out
arpl
clc
rcrb
test
sub
fld
aad
idivl
scas
jp
js
mov
call
cmp
and
pop
and
or
xchg
add
mov
in
push
pop
cmc
aad
dec
mov
push
inc
loop
dec
mov
jle
bound
add
sub
sbb
sbb
mov
sbb
pop
xor
cli
or
xchg
jnp
fcmovnu
push
lds
int
pop
iret
loopne
xlat
pop
addr16
outsl
mov
or
jle,pt
mov
mulb
and
adc
add
addl
mov
mov
adc
pop
push
std
inc
jns
sbbb
scas
lret
adc
out
lods
adc
out
dec
daa
mov
and
fmul
sbb
roll
jge
jno
stc
pop
rolb
das
jecxz
loop
lds
loop
jb
mov
pop
push
mov
mov
pop
int
sbb
stc
out
mov
adc
dec
mov
jbe,pn
sub
in
pop
sahf
das
mov
test
enter
in
and
xor
and
dec
loop
mov
cltd
push
xor
lcall
adc
scas
xor
or
xchg
int3
pop
jno
cmc
je
push
cmp
lret
je
into
insl
addl
inc
andl
jae
pop
push
pop
je
jbe
int
sbb
das
jo
pop
jne
dec
mov
test
pop
in
int
push
pop
ss
cld
incl
pop
mov
and
cmp
and
stos
inc
add
jmp
jl
lcall
test
testl
lret
repz
out
sahf
sub
movb
add
mov
jne
cmpl
fwait
push
stc
dec
popf
pusha
pusha
clc
or
test
inc
out
adc
aas
pop
out
pop
xor
imul
test
xor
loope
adc
inc
sub
xor
dec
or
jae
mov
dec
inc
push
aam
sub
xchg
test
cmp
sub
mov
jecxz
cltd
rolb
int
sub
and
mov
out
add
lds
jo
mov
in
ds
subl
dec
insl
inc
mov
loop
int3
orl
and
xchg
jge
outsl
cmp
mov
int3
iret
or
hlt
and
jns
cmpsl
mov
fwait
inc
cmpsl
jmp
pop
dec
push
pushl
mov
in
sub
test
push
xchg
scas
push
imul
pop
lret
jbe
bound
fldenv
cli
ss
push
mov
shrl
mov
sub
and
push
idivl
lock
insl
sub
xor
inc
xor
das
data16
mov
sbb
sarl
paddd
sub
adc
out
mov
sub
mov
test
popa
pushf
mov
xlat
or
sarl
rep
push
or
std
mov
and
shll
and
lock
out
jecxz
out
mov
out
enter
out
ret
push
adc
add
stos
ret
outsb
pop
or
lea
popa
inc
dec
sbb
mov
sbb
xchg
lds
lods
fdivrs
dec
arpl
mov
aad
push
pop
mov
jne
inc
lds
leave
mov
imul
mov
popa
js
xor
mov
adc
out
sbb
add
pop
cli
push
mov
test
xchg
ss
pop
pop
stos
flds
adc
mov
in
imul
adc
jle
ret
es
fwait
inc
pop
jl
push
aad
push
inc
ja
mov
mov
add
in
inc
jns
cmp
lret
js
dec
ss
jge
dec
fnstcw
test
sub
loope
xchg
pop
negl
push
xchg
mov
mov
and
scas
insb
xchg
mov
cmc
jnp
sbb
mov
jns
ja
rcll
test
xor
test
aaa
push
rcl
stos
sub
dec
int3
and
add
je
fbstp
push
aas
xchg
push
add
jo
lods
scas
dec
mov
lret
push
sub
cmpsw
inc
mov
and
push
rcll
mov
dec
cld
cmpsb
jge
add
mov
sti
rorb
pop
xor
pop
jo
addr16
push
in
bound
jo
stos
jnp
sub
xlat
cld
xchg
or
movsb
jecxz
out
repnz
lea
mov
dec
faddl
scas
arpl
out
xor
test
and
fs
in
inc
leave
jbe
cmp
ds
jbe
pop
pop
xchg
pop
mov
mov
inc
mov
imul
mov
nop
ficoml
enter
ljmp
add
xchg
xor
imul
clc
jo
xchg
orb
add
mov
jmp
push
pushf
inc
pop
and
into
inc
test
mov
jno
mov
jo
movntq
xchg
popa
fdivrl
popa
test
cmp
jo
add
sub
cmc
lods
pop
loop
mov
in
add
xchg
fidivs
adc
in
repnz
scas
push
loopne
push
push
pushf
nop
xchg
clc
mov
sub
push
lock
inc
push
mov
aad
mov
ja
and
xlat
add
jbe
adc
push
xchg
mov
add
add
sbb
xchg
negb
xor
fimull
in
pop
xchg
jo
in
cmp
test
ffreep
or
xor
and
and
mov
in
repnz
imul
cmp
pop
insl
rcl
shrb
and
outsl
movsb
and
ds
test
or
in
imul
fdivl
sbb
mov
adc
and
push
mov
out
xchg
xchg
pop
pushf
mov
adc
daa
lcall
fs
idivl
dec
mov
imul
sbb
icebp
sub
leave
sbb
mov
in
fmuls
push
pop
dec
sub
fucomi
jno
hlt
insb
push
push
mov
xchg
pop
jmp
inc
cmp
ja
mov
xchg
mov
push
sbb
bound
das
mov
cmp
dec
inc
jb
xchg
jecxz
in
jecxz
sbb
in
inc
xchg
mov
mov
repz
inc
fldt
dec
push
or
movsl
stc
stos
jl
cmp
push
scas
inc
clc
dec
enter
or
pop
pop
or
xchg
bound
in
aaa
lods
test
dec
or
popa
outsb
cmp
loopne
aam
subb
mov
xor
mov
pop
test
add
fcmovne
xor
or
jae
cmp
push
sbb
loope
lods
mov
iret
add
js
out
mov
sarb
inc
mov
fsubrs
xor
push
mov
mov
ficompl
or
ret
pop
aaa
aaa
jle
inc
add
mov
push
push
int3
mov
mov
mov
jno
addr16
add
cs
or
test
jb
dec
popa
inc
xor
jge
sarl
lret
aas
mov
call
inc
repnz
popf
imul
nop
sarb
dec
or
sbb
inc
fiaddl
test
aam
inc
sbb
push
or
dec
scas
not
pop
sub
pop
and
xchg
orl
aas
arpl
sub
lcall
popa
or
int3
lea
das
mov
icebp
fisubrl
jge
push
jp
pop
and
adc
pop
stos
cmp
out
test
insl
or
xor
movnti
cld
sbb
sbb
xchg
bnd
push
cmp
aaa
test
data16
nop
pop
cwtl
in
cmp
cltd
mov
dec
mov
sbb
subb
mov
sbb
add
fnstcw
inc
pop
je
pop
lcall
and
sbb
int3
xchg
std
loop
cmp
xchg
mov
cli
or
mov
fiadds
push
pushf
lods
rorl
xor
das
daa
outsl
stos
jbe
int3
sbb
sarl
scas
or
jle
add
fs
add
rcll
xchg
adc
mov
mov
mov
xor
leave
stc
in
lock
in
fwait
call
ljmp
xchg
sbb
cmp
or
cwtl
ret
dec
xchg
adc
adc
pop
setb
mov
out
dec
iret
dec
outsb
movb
push
inc
sbb
cmc
inc
ret
xchg
or
adc
cmp
jecxz
cltd
dec
cmp
fs
ja
mov
dec
push
jnp
cmp
fstpl
push
mov
push
mov
and
lods
and
ss
outsl
int
push
pop
cmp
jmp
or
lock
call
out
sbb
fldl
cld
mov
add
js
pop
rcrb
sub
cmp
loope,pn
xchg
add
test
cmc
lods
or
mov
push
mov
pusha
arpl
ret
roll
stc
or
nop
out
dec
pushf
sti
mov
dec
jne
imul
xor
aad
pop
mov
dec
fs
cmc
imul
mov
jl
ret
pusha
in
cmp
jb
inc
mov
jecxz,pn
lock
or
ds
sub
and
push
push
adc
popa
mov
aas
mov
imul
stos
fnsave
sub
xchg
pop
sub
out
stos
fucomp
fisttpl
jne
adc
inc
push
lock
sti
jo
lret
test
loopne
sbb
jge
mov
cmp
scas
iret
in
sbb
into
pop
push
idivl
jl
mov
loop
repnz
pop
mov
sub
aas
or
pop
xor
jmp
dec
insb
fistps
pushaw
pop
fwait
in
nop
jp
push
outsb
dec
mov
into
dec
cli
scas
les
adc
sub
clc
call
inc
js
sbb
shrl
icebp
adc
gs
fbld
or
inc
call
mov
or
lock
sbb
sbb
aaa
insl
mov
cmc
lods
aaa
mov
enter
mov
lods
in
iret
and
push
pop
shrb
std
nop
fwait
jns
fimuls
pop
sub
insb
mov
sbb
cmp
insl
jne
imul
sbb
sbb
mov
jo
cld
pop
rcrl
out
mov
push
xchg
shrl
addr16
fsubrs
loope
cli
dec
jno
fsubrs
insl
adc
inc
mov
add
sbb
sbb
add
or
jecxz
nop
mov
gs
lock
mov
ds
cli
xor
xor
xchg
add
addr16
mov
fsts
push
hlt
sub
insb
es
and
in
cmp
cmp
xlat
push
int
or
es
jecxz
xchg
jbe
push
xlat
sub
cmpl
sub
xor
pop
into
push
scas
pop
subb
les
lcall
mov
enter
je
daa
in
pop
push
inc
and
lea
push
push
stc
jge
xor
scas
mov
jo
clc
jp
clc
test
add
and
push
ss
mov
jecxz
cs
aad
ljmp
push
dec
pop
xchg
and
ret
sub
cli
dec
sar
jmp
sub
dec
push
out
xor
xor
pop
cltd
mov
sbb
leave
and
mov
mov
lcall
push
mov
lds
lahf
sahf
in
fisttpl
pop
shlb
lcall
xor
cwtl
lods
and
mov
std
mov
pusha
push
and
dec
xor
push
push
mov
orl
repnz
std
pop
dec
out
inc
push
into
pop
mov
shr
rorb
cli
or
xlat
inc
sbb
jmp
int3
repz
cmp
jl
call
mov
lods
nop
jnp
hlt
cwtl
lock
mov
push
iret
mov
fnstcw
ror
pushf
fcmovne
pop
call
inc
shrl
xchg
aad
outsb
clc
dec
enter
ret
sub
or
mov
cmc
push
int3
mov
stc
loopne
push
andb
lods
ljmp
adc
mov
dec
jge
mov
dec
rclb
roll
sub
adc
xchg
push
push
rcrl
aas
sub
sub
idivl
adc
in
ficompl
push
lahf
aam
lahf
jp
mov
xchg
outsb
pushf
push
cltd
mov
jge
mov
aas
fidivrs
pop
xchg
adc
addb
arpl
pusha
jp
cmp
fisttpl
jns
mov
push
and
popa
mov
es
inc
ffree
into
popf
arpl
cmp
push
scas
inc
inc
sbb
sbb
loop
out
push
add
je
mov
jge
rcll
into
orl
mov
test
jp
pop
int3
xchg
and
out
mov
rol
div
xor
fs
sbb
push
and
push
loopne
dec
sub
aad
sbb
mov
ret
mov
pop
mov
or
mov
xchg
mov
rorb
shll
in
cmpsb
aaa
clc
jno
push
int
test
xchg
shr
out
lds
mov
jno
pop
dec
ja
pop
repz
xor
or
outsl
inc
mul
das
test
fmuls
xchg
test
cmpsb
cld
gs
test
dec
in
mov
push
shl
hlt
sbb
inc
jb
repnz
cld
mov
add
adc
add
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
andl
push
adcl
mov
andl
xor
push
neg
mov
subl
add
mov
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
sbb
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
mov
mov
sbbl
xor
mov
sbb
add
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
sub
lea
orl
xor
subl
xor
cmp
je
inc
mov
addl
xor
xorl
add
movl
cmp
jne
xorl
pushl
call
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
add
and
mov
mov
addl
mov
notl
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
ja
test
mov
testb
leave
jp
fstpl
jp
and
fucomip
std
and
repz
test
inc
test
mov
sub
aaa
push
jp
lret
ret
push
mov
xor
jmp
outsl
pop
xchg
outsb
pop
ret
sbb
inc
pop
and
aas
push
add
cmpl
mov
push
xchg
lds
mov
int3
push
jg
sahf
test
pop
int
lahf
loopne
nop
mov
sub
pop
shl
dec
ret
leave
mov
jo
jno
push
mov
cltd
pop
xlat
add
mov
sub
add
xchg
test
xchg
add
test
aaa
lock
jecxz
jmp
add
push
roll
aaa
jno
adc
pop
je
sbb
dec
addr16
cmp
mov
ljmp
fucomip
sbb
cmp
std
mov
cltd
ret
scas
xor
stos
std
push
shl
mov
pushf
mov
inc
push
pop
mov
jo
inc
loopne
xchg
pop
mov
mov
and
testb
jb
cmp
dec
add
dec
add
inc
sub
pop
dec
inc
lahf
mov
cwtl
dec
int
xor
adc
sti
pop
icebp
dec
mov
mov
lods
popf
cmp
jo,pt
int
or
sbb
shll
loopne
or
add
outsl
xchg
aam
loop
in
xchg
idivb
in
cltd
xor
rcrl
xorl
inc
pop
outsb
xchg
dec
cli
push
pop
andb
fidivrl
mov
outsl
xor
push
clc
jmp
pop
ret
jl
aas
mov
ljmp
icebp
xchg
pop
adc
lods
inc
out
xchg
inc
and
sub
sub
es
rcrb
loopne
sub
popf
cmp
adc
add
lods
jl
push
xchg
or
push
mov
out
inc
mov
scas
dec
fwait
and
xchg
add
inc
scas
gs
mov
rclb
cmpsl
adc
fs
push
in
inc
into
pop
lahf
imul
pop
pop
mov
push
mov
enter
ret
shll
adc
sub
daa
cmpsb
and
std
shll
and
xchg
stc
out
mov
sti
push
jp
sbb
cmpsl
lods
cli
inc
bound
cld
std
jo
sti
leave
jae
sbb
mov
jns
adc
or
xchg
or
or
fldl
fsubrs
cmp
popf
adc
pop
push
ljmp
int3
sbb
jns
bound
outsb
cwtl
jmp
ret
sbb
pop
pushf
das
push
xchg
in
daa
cwtl
nop
pop
loop
or
and
aaa
add
adc
adc
mov
mov
outsb
or
sbb
pop
loope
xlat
test
push
scas
sbb
adc
fidivrs
adc
push
mov
pop
addr16
jo
dec
cmpsb
rorb
scas
add
dec
jns
repz
test
pop
dec
cmp
mov
jne
fcmovnb
cmpsl
nop
fwait
inc
cmc
or
jle
sbb
inc
mov
xor
or
adc
mov
leave
mov
das
out
lods
sub
dec
inc
repnz
xchg
in
mov
mov
mov
mov
mov
jmp
and
imul
loop
dec
stos
add
sub
ja
lret
jb
push
push
cld
pop
adc
sub
mov
push
adc
dec
and
lret
adc
cmpsl
sar
ds
push
addr16
shlb
fwait
hlt
ficompl
xchg
lds
mov
sbb
mov
mov
in
xchg
and
mov
xor
jecxz
mov
jmp
cltd
mov
pop
dec
adc
jmp
inc
pop
in
in
scas
dec
loopne
andl
in
mov
sub
rcrl
xor
aaa
xchg
loop
lret
xor
fsubr
sbb
rolb
aaa
mov
sub
lods
movb
or
fsubrs
ret
and
mov
xor
lods
fnsetpm(287
and
mov
mov
icebp
mov
mov
mov
mov
divb
xchg
xchg
stc
xor
imul
pop
sbb
mov
dec
bound
shr
repnz
dec
hlt
outsb
xlat
insb
cmp
jl
ss
pop
dec
aam
jp
loope
jno
movsl
faddl
mov
mov
xchg
or
jo
pop
and
cld
rsm
jae
and
cmpsl
sub
lahf
inc
test
xchg
loopne
mov
jbe
xchg
ja
popa
test
sub
add
stos
in
push
in
jmp
je
test
ret
sub
shl
insl
pop
in
cmp
inc
lods
pop
and
clc
lcall
sti
dec
cwtl
add
ficomps
inc
cmpsl
and
jb
in
add
sub
jge
add
mov
add
xchg
add
gs
in
nop
repz
repz
nop
mov
and
into
jge
pop
xor
pop
test
cmpb
mov
xlat
aaa
xlat
pop
inc
stos
dec
mov
loope
ds
arpl
xchg
jnp
popf
and
cmp
cmp
loopne
sub
dec
loope
cmpl
shrb
testl
lock
mov
mov
sbb
jmp
pop
sbb
pop
sbb
xchg
popa
mov
pushf
mov
lock
jae
jnp
adc
jp
add
sub
jnp
dec
js
lods
cmpsl
test
mov
iret
data16
enter
jmp
enter
push
add
int
gs
pop
shlb
sbb
and
pop
fiadds
mov
xchg
or
pop
ficomps
inc
mov
mov
arpl
push
mov
je
repz
stos
mov
dec
in
outsb
pop
icebp
push
xchg
and
pop
and
mov
push
aaa
jo
add
roll
inc
mov
inc
mov
into
popf
out
mov
sbbb
cmpsl
in
js
add
fnstsw
jl
mov
pop
nop
imul
out
or
xchg
jbe
imul
mov
je
inc
jge
inc
adcl
dec
push
ret
cmp
inc
sahf
push
inc
sbb
xor
and
push
mov
sbb
push
lods
cmp
divl
clc
dec
push
jns
divl
stos
sbb
leave
xor
jp
flds
push
adc
push
xchg
xchg
ja
rcrl
test
incl
fiaddl
ret
push
xor
popa
mov
es
add
aad
xor
nop
push
xchg
jmp
jno
xchg
add
cmp
lea
enter
jae
sbb
in
imul
sbb
adc
jmp
test
jp
add
mov
arpl
sbb
mov
xchg
mov
and
pop
mov
adc
scas
xchg
dec
nop
mov
loope
loop
pop
ret
cld
arpl
mov
outsl
jp
mov
pop
insb
in
mov
xor
push
cmp
jae
mov
xchg
mov
sub
xor
inc
adc
push
movsl
cmc
mov
mov
imul
mov
sar
cwtl
loopne
sub
inc
cmp
gs
ss
loope
sbb
push
pop
pop
outsl
xor
fcompl
mov
add
stc
mov
xchg
sahf
fstps
outsl
out
out
xor
xchg
mov
test
les
adc
and
leave
inc
shll
sbb
std
mov
roll
cmp
shll
xorb
test
aam
loope
test
fisubrl
push
or
enter
cmp
ficoml
adc
jb
dec
pop
mull
dec
push
and
cmp
imul
aaa
jae
cli
xor
mov
xchg
decl
add
pop
mov
dec
ret
lods
or
cmpl
shlb
jmp
out
sar
sub
int3
out
bound
sbb
mov
push
repz
inc
adc
fs
lret
hlt
add
add
mov
dec
pusha
test
mov
fsts
cltd
mov
and
cmpsl
fiadds
sub
in
or
xchg
cmp
adcl
dec
mov
or
in
xchg
jmp
cmpsb
data16
mov
scas
fmuls
push
fldl
out
ds
jecxz
stos
fcoms
insb
leave
adc
iret
pop
adc
mov
in
and
add
jne
nop
scas
clc
stos
dec
hlt
sub
ja
ljmp
pop
scas
pop
xchg
inc
sbb
repnz
or
pop
test
adc
sbb
mov
loop
in
in
mov
popf
bound
push
stos
mov
add
cmpsb
push
iret
rol
daa
lods
add
sahf
push
outsb
jg
or
loop
test
insb
rcll
xor
mov
pop
in
es
scas
shrl
pop
out
data16
sarl
divb
scas
adc
jae
scas
mov
add
pop
cmc
out
int3
adc
cs
pop
clc
and
mov
xor
push
adc
xor
xor
pop
mov
rol
pop
rcrb
or
cwtl
cmp
xchg
mov
add
ror
or
enter
xor
outsl
or
xor
jo
cmp
sti
sbb
shrl
xchg
sub
push
push
mov
aas
aas
ss
xor
fnstenv
and
jae
je
add
sub
rol
out
int3
int
and
dec
mov
pop
push
jl
jecxz
cmp
out
dec
cmp
inc
lds
icebp
adc
add
xchg
cmp
jno
daa
sub
mov
inc
das
jg
push
adc
add
movsb
push
jne
sarl
xchg
ffree
cmp
das
loop
lahf
and
fwait
sbb
pop
adc
mov
test
ja
xor
push
enter
imulb
sub
mov
xchg
adc
lock
xchg
cmp
leave
subl
mov
pop
add
cmp
dec
test
fisttpl
inc
adc
xor
lods
dec
adc
fwait
idivb
cmpsl
adc
clc
dec
jne
ret
das
add
mov
enter
lea
sub
add
lahf
mov
lahf
lret
sbb
cwtl
sbb
repnz
popf
stc
jae
aaa
or
xor
in
xchg
pop
and
or
jp
insl
jbe
xchg
inc
inc
scas
hlt
xchg
in
inc
sbb
inc
mov
jl
mov
adc
popf
iret
mov
iret
or
sub
mov
addb
push
sbb
dec
iret
arpl
data16
sub
aad
mov
dec
iret
xchg
adc
dec
push
push
mov
sbb
adcl
mov
je
jo
xchg
pop
push
scas
cld
push
hlt
push
nop
scas
dec
in
hlt
pop
stc
jno
push
cld
faddl
push
xor
inc
pop
arpl
push
xor
ljmp
fbstp
and
aas
xor
xor
bound
rcl
fldpi
cmpsl
push
mov
ja
xchg
mov
repz
xchg
ror
enter
dec
imul
jnp
cmpsb
fmulp
lock
mov
les
mov
or
mov
or
popf
lock
insb
out
outsb
adc
pop
mov
stc
jge
test
cmp
sbb
lods
xor
push
ss
jns
lods
sbb
repz
pop
movsb
xchg
sub
subl
push
fstl
mov
xchg
or
sbb
and
cmp
rclb
sub
enter
out
mov
sub
mov
xor
incb
xchg
sub
sbb
jbe
aas
adcl
mul
dec
pop
mov
rorb
cmp
in
pop
leave
sti
imul
sbbl
imul
sbbb
mov
scas
pop
xchg
out
scas
push
jg
cmp
daa
bound
test
cli
xchg
push
gs
xor
mov
jns
pop
sbb
cs
rcrb
loope
or
outsb
sub
jo
add
mov
mov
sub
jecxz
test
pop
sbb
repz
scas
xchg
les
stos
jno
bound
mov
sti
or
ret
loope
xchg
push
push
inc
mov
test
out
int3
fcoms
sub
lret
and
jg
syscall
xchg
cmp
add
inc
mov
add
sub
jge
aas
sbb
add
out
addl
dec
jmp
das
aad
out
outsb
cmp
push
mov
scas
daa
mov
stos
test
push
jl
leave
in
pop
sbb
fisttpll
in
pop
xchg
shrb
cmpl
subl
add
fs
jb
xchg
and
jl
cmpsl
push
fisttpl
pusha
je
xchg
push
call
gs
cwtl
mov
push
and
mov
ja
inc
add
pop
es
rcrl
ficomps
xor
xor
inc
aad
mov
negb
mov
add
ret
push
dec
or
push
test
leave
fwait
mov
ljmp
xchg
xchg
add
adc
lret
js
push
lret
adc
int3
mov
lcall
sub
sub
int3
arpl
in
push
xor
int3
inc
sar
adc
inc
pop
inc
gs
xchg
push
addl
out
repz
je
arpl
pop
mov
add
js
shlb
push
hlt
pusha
mov
test
and
and
mov
mov
push
xchg
xor
std
push
push
mov
enter
je
push
push
pop
inc
insl
xchg
rcrb
push
es
shll
sbb
out
and
sahf
pop
out
mov
jnp
iret
in
pop
inc
in
lds
lret
or
pushf
push
cmp
xchg
cmpsl
popa
fyl2x
scas
lcall
mov
daa
or
xor
xor
xchg
xchg
or
mov
and
push
pop
loopne
outsb
and
jmp
xor
movsl
mov
mov
icebp
js
and
frstor
cmc
mov
dec
aas
push
adc
pop
ds
cmpsb
lcall
mov
outsb
fwait
inc
ror
ja,pt
xor
std
jmp
sarb
fcomi
je
leave
mov
mov
imul
inc
cmc
cmpsb
ret
les
xchg
jle
in
push
jge
insl
or
out
push
xorl
ret
test
int
cmp
and
pop
nop
adc
mov
mov
xorl
mov
xor
repz
stc
jecxz
mov
adc
sbb
push
mov
clc
imul
mov
and
xor
cmp
xor
aad
or
ss
mov
clc
mov
daa
out
mov
out
ret
or
inc
sub
cmp
pop
sub
rorb
xchg
subb
xor
sahf
addr16
jp
ficompl
add
bts
ficomps
inc
inc
scas
and
dec
ret
stc
pop
and
out
pushf
push
imul
shrd
add
jmp
ret
shl
push
add
sbb
neg
and
push
dec
pop
fdivrl
test
cmpsb
xor
push
cwtl
cmpsl
xchg
pop
bound
push
cmp
stos
gs
fwait
sub
bnd
jmp
mov
gs
mov
das
imul
incb
adc
mov
pop
cmp
sub
cmp
push
clc
mov
scas
shl
xchg
lahf
push
pop
inc
pop
mov
les
jae
dec
clc
movsl
or
and
imul
inc
out
stos
mov
xor
dec
aas
pcmpeqd
jecxz
test
stos
outsl
mov
push
shll
iret
adcb
push
and
xor
adc
mov
daa
test
inc
add
mov
cmp
cld
aaa
frstors
std
cltd
fmuls
stc
fimuls
jne
cmp
out
imul
stc
adc
jb
add
lret
xor
mov
out
jbe
out
mov
sub
sti
xchg
in
ja
pop
sbb
js
sbb
popa
notl
call
jp
adc
mov
mov
aam
adc
mov
add
or
cmpsb
mov
and
pusha
add
adc
insl
ret
loope
add
lret
xor
xchg
sub
nop
stos
icebp
ret
jae
xchg
inc
loopne
xchg
shll
jg
pop
shl
mov
mov
mov
fildll
xor
lahf
ficompl
push
inc
adc
jbe
fstpl
add
pop
mov
and
rol
mov
aaa
lods
bound
cltd
inc
pshufw
iret
jmp
fwait
insb
sub
test
js
gs
xor
mov
divb
xor
cmp
iret
nop
mov
and
mov
adc
ret
addr16
fadd
stos
in
fcoml
sahf
js
sar
jne
pop
jl
adc
repnz
cmp
addl
jl
add
rcrl
test
aaa
es
repz
inc
sub
add
pop
mov
pusha
jmp
pop
xor
sub
jg
push
std
mov
test
xchg
push
pushf
cmp
pusha
pop
pop
mov
lcall
imul
stos
aad
pop
sahf
mov
in
sub
mov
push
daa
pushf
cmp
clc
xchg
js
add
xchg
nop
fnstcw
mov
inc
mov
add
test
fwait
xchg
sbb
fcomp
cltd
movsl
inc
jg
pop
jp
in
sub
iret
lret
push
mov
mov
pop
loope
ljmp
jl
inc
fdivp
dec
idivl
dec
push
stos
adc
push
push
jae
loopne
loope
fsubrs
push
shrl
xor
sub
int3
add
rcll
dec
adc
pushf
sub
pop
shrb
mov
push
test
rcll
cwtl
movsb
mov
je
add
adc
jmp
push
pop
push
dec
cmp
ret
out
mov
cmpsb
lods
int3
repnz
dec
xchg
push
cmpsb
mov
or
testl
jecxz
pop
aas
pop
fmul
popa
push
fwait
inc
jg
sub
sub
mov
dec
or
mov
xor
in
jae
xchg
xlat
insb
push
push
icebp
cmp
mov
stos
ficomps
pop
pushl
aam
cmpsb
and
pop
cwtl
mov
cmp
cmpsl
mov
sbb
xchg
push
movsb
shlb
addr16
aas
inc
push
outsl
adc
hlt
lret
xchg
lret
sub
fwait
ljmp
aad
add
cmp
lcall
pop
cmpsb
inc
shrb
int3
mov
rolb
movsw
testb
and
insl
js
inc
fmull
push
push
or
xchg
incb
pop
les
cwtl
je
sub
sbb
daa
fsubrl
mov
jg
and
pusha
jmp
das
mov
push
roll
add
mov
dec
mov
out
sbb
sbb
test
push
clc
sbb
inc
xor
sub
add
repnz
sbb
mov
ds
scas
mov
xchg
sbb
xor
loope
in
imul
lods
mov
push
adc
sbb
adc
adc
imul
jb
push
call
mov
jmp
pushf
pop
push
jg
jo
pop
setl
jecxz
mov
push
inc
pop
arpl
jge
daa
out
cmc
cmp
enter
lret
add
dec
push
iret
out
xor
jb
dec
ret
mov
cmc
iret
into
lock
xor
fistpll
cmp
daa
or
inc
mov
insb
pop
dec
aas
add
stos
mov
or
mov
pop
rcrb
test
sub
jecxz
mov
inc
sub
push
jl
cmp
fldenv
adc
fsubr
jae
push
imul
or
cmp
inc
or
lret
popf
shrl
cli
scas
xor
shl
iret
xchg
mov
and
mov
and
add
dec
das
in
cmp
mov
fdivrs
xlat
repnz
sub
inc
adc
pop
lret
adc
ds
adc
movsl
push
cmp
jb
pop
roll
in
or
add
clc
repnz
jge
out
idivl
mov
jmp
nop
cmc
call
lods
les
xor
dec
ret
int3
and
frstor
cmp
or
jo
jle
and
nop
rcrl
jae
iret
and
shrb
or
pusha
mov
push
adc
cs
lock
jle
inc
test
cmp
mov
daa
add
sarl
adc
push
xchg
dec
xor
popa
sahf
scas
cmp
adc
pop
xor
insb
pop
mov
dec
cmp
sub
xchg
in
sub
xor
in
lea
aas
add
imul
mov
inc
adc
xor
orb
fcomps
sub
insl
sbb
mov
pushf
xchg
or
fs
or
inc
sbb
lods
pop
lahf
jecxz
mov
dec
xchg
lar
testb
dec
ja
popf
xor
dec
xor
lcall
int3
ss
mov
xor
or
aas
sub
fiaddl
and
and
inc
enter
popf
push
push
add
aaa
lds
popa
or
out
or
jge
pop
test
pop
or
loop
mov
fisubrs
inc
ret
xchg
repz
loope
enter
outsl
movd
movsb
pop
cmp
inc
inc
mov
mov
or
sbb
xchg
mov
ss
push
data16
mov
cmpsb
inc
sub
or
jb
lahf
std
lcall
aad
pusha
adc
insb
xchg
cwtl
data16
std
xor
ret
push
and
or
cvttps2pi
leave
push
inc
aad
and
bound
xchg
movsl
push
push
in
mov
pusha
mov
inc
mov
mov
push
sbbb
repnz
daa
ficoms
sub
xor
pop
pop
les
punpcklbw
push
dec
xlat
test
adc
sub
inc
fcmove
sub
repnz
out
sahf
clc
sub
in
fdivl
lds
ljmp
je
mov
xchg
cmp
inc
mov
rorl
push
out
gs
jle
stc
adc
sti
cs
aaa
out
fistpl
xchg
sahf
ljmp
cmpsb
andl
cmp
popf
xchg
pop
pop
nop
cli
out
and
lcall
mov
inc
xlat
int
xchg
stos
ljmp
pop
jecxz
or
popf
push
sbbl
inc
or
loop
pop
sub
aas
cmp
mov
mov
pop
call
cs
adcb
sub
sub
dec
and
shrb
ret
mov
jno
into
lret
shlb
pop
vpunpckhdq
xchg
xor
push
imul
push
arpl
int3
pop
leave
sti
in
ss
inc
sub
mov
clc
jmp
dec
fsts
add
vmread
call
je
aad
or
bound
aam
jle
sbb
mov
sti
jle
inc
in
movsb
insb
insl
aam
sub
sbb
lods
lds
jle
in
sbbb
insb
adc
int
popf
std
mov
ret
mov
scas
adc
pxor
mov
fnstsw
mov
adc
data16
pop
int
in
repz
outsl
imul
mov
rol
or
or
scas
insl
test
mov
push
subl
mov
mov
out
xor
sbb
jl
pop
pop
xchg
imul
inc
mov
clc
mov
push
out
hlt
out
in
or
inc
mov
xchg
inc
xchg
xor
cmp
dec
jecxz
adc
out
repz
stc
ds
inc
shlb
mov
push
aam
mov
mov
or
mov
mov
mov
push
sbb
popf
outsl
sub
pop
push
xchg
mov
rcrb
add
inc
push
rcl
adc
and
and
jecxz
cwtl
sub
xlat
ffreep
cwtl
mov
imul
fidivl
lret
shrl
test
cltd
pop
mov
add
mov
cmc
sub
add
mov
pop
aam
xchg
imull
adcb
dec
stc
xlat
xlat
inc
enter
pop
inc
inc
or
sub
in
fcomps
jb
mull
cltd
out
divl
fwait
jmp
push
pushf
data16
sti
jno
mov
inc
adc
xchg
cmp
add
xor
addl
jmp
lea
jnp
jne
adc
xchg
push
add
data16
pop
es
jno
rcrb
loop
fmull
fcos
xlat
mov
sbb
clc
mov
jnp
and
lods
push
add
xlat
inc
push
mov
aaa
frstor
xchg
xchg
fnstsw
arpl
fildl
mov
jo
jg
dec
mov
std
xor
sub
sub
inc
jbe
and
lock
mov
mov
xchg
dec
rolb
xchg
pop
dec
adc
loope
adc
int3
outsb
jns
mov
aas
sahf
mov
popa
ret
or
pop
push
fs
nop
cmpsl
cmpsb
pushf
mov
js
popf
pop
mov
nopl
pop
cmp
mov
cmp
jne
shl
mov
or
sbb
jmp
cmc
push
fnstsw
push
mov
xor
sbb
and
mov
movsl
mov
xlat
add
mov
int
imul
xchg
xchg
leave
add
cwtl
mov
adc
repnz
push
jnp
jns
mov
xchg
dec
xor
dec
jge
jne
into
mov
adc
mov
mov
adc
daa
xchg
dec
push
lahf
stos
inc
push
sbbl
and
test
pop
cmpsl
push
push
push
pop
shll
mov
lret
repnz
and
call
xchg
and
idivl
aas
ss
xchg
ljmp
test
aaa
fwait
aad
sub
insb
inc
pop
incb
pop
lret
shrb
cmp
hlt
jb
and
sub
shlb
pmaddwd
pop
or
shrl
mov
adc
sub
inc
mov
pop
dec
mov
push
call
repnz
ljmp
leave
xchg
cmp
cmpl
les
jns
cmp
dec
cmc
imul
adc
ds
aas
repnz
fildll
xchg
inc
je
cmp
in
jmp
divl
lret
push
push
ds
rclb
rcr
mov
lret
daa
fsubrp
ljmp
divb
push
out
ss
push
insb
stos
nop
sub
or
cmp
loopne
sbb
out
or
xchg
jns
ljmp
add
inc
dec
outsl
jo
out
sub
dec
pusha
dec
cwtl
mov
ret
and
rorb
ja
ja
or
pusha
lds
cmp
jb
sti
push
adc
push
lods
jns
cmp
sub
mov
pop
test
out
and
mov
rolb
mov
in
push
out
imul
movsl
xchg
pop
sub
push
push
jnp
shrd
mov
pop
and
jmp
iret
dec
repnz
pushf
mov
pop
lahf
sti
and
dec
int
mov
inc
faddl
sub
loopne
out
in
sbb
sbb
push
imul
add
pop
mov
stos
dec
aas
iret
push
fisttpl
je
std
cmc
sub
test
xchg
andb
xor
lahf
push
outsb
cmp
sahf
rcll
add
mov
inc
mov
repz
add
das
test
sbb
es
dec
pop
fldt
push
xor
lds
cli
mov
and
shll
xchg
sub
jae
xchg
ret
rclb
cmc
lret
pop
sub
das
sub
inc
frstor
imulb
mov
out
cmp
dec
add
push
lcall
daa
sbb
xchg
aaa
loop
adc
or
adc
pusha
jl
addl
shrb
xchg
loope
jne
lea
mov
sarl
out
jb
xchg
iret
scas
ja
mov
iret
ficomps
sub
dec
sub
jns
xchg
and
inc
aas
ljmp
push
push
in
pusha
pusha
daa
xor
in
jbe
mov
out
popf
or
adc
jno
cmpsb
rcl
push
sub
or
xor
jp
dec
cltd
inc
out
adc
xchg
push
repz
adc
mov
lods
outsl
imulb
pop
cmp
cld
xchg
je
fstps
data16
lods
add
popa
jb
mov
sub
hlt
shlb
imul
mov
call
add
mov
xchg
cmp
adcb
cmpsl
shl
and
leave
sbb
xor
fcomp
push
cmp
rcr
sub
stos
btc
adc
adc
repz
add
out
btrl
cli
cltd
inc
movsb
das
ret
mov
lret
jle
stos
xchg
lea
push
lret
rorl
and
fdivrs
addb
cmpsl
sarl
mov
jle
pushf
mov
push
out
add
rcrl
and
sarl
inc
dec
aad
int
xor
sbb
wrmsr
fistl
cmp
mov
lods
pop
jl
jle
or
gs
cltd
jne
xor
leave
loopne
add
sub
or
pop
inc
xor
push
mov
lds
jmp
jg
sbb
inc
push
rorl
nop
push
scas
jmp
sbb
hlt
sarl
jne,pt
cmp
gs
cmp
push
gs
shrb
pop
imul
mov
cmp
ljmp
and
mov
push
sub
enter
inc
xor
fs
sahf
je
jne
push
fwait
lahf
or
test
mov
jo
cmp
push
loope
stos
xor
dec
sub
xor
mov
daa
rorl
mov
cmp
out
mov
push
xor
sbb
testb
in
xchg
in
cmp
or
mov
mov
aam
insl
fisubrl
xlat
movsl
mov
movsl
stos
mov
push
movsl
lock
jae
cmp
lods
push
lds
test
fidivrl
imul
cmc
mov
loope
xchg
sarb
add
aam
imul
aaa
mov
mov
and
shll
call
leave
fnstcw
mov
movsb
data16
lret
pop
pop
loop
dec
pop
mov
dec
pop
pop
mov
imul
int3
push
cmpsl
lahf
rcl
out
orl
xchg
pop
xor
add
icebp
mov
repnz
js
add
cmp
orl
push
cmp
call
iret
xchg
cld
adc
int
cld
popa
aad
xchg
clc
shrb
outsl
int
out
push
and
xor
xchg
test
les
roll
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
sbbl
movl
andl
mov
mov
mov
addl
xor
xorl
add
andl
mov
and
mov
xor
push
mov
mov
adcl
add
mov
and
mov
sub
mov
mov
mov
movzwl
sbb
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
sbb
mov
or
movb
lea
movl
cmpl
je
cmpl
jle
jmp
push
pushl
call
mov
dec
mov
jmp
mov
adcl
mov
mov
xor
dec
addl
mov
and
movl
jmp
sub
call
ret
int3
pop
mov
inc
cmp
jp
pop
jp
das
pop
xor
js
and
sub
pop
in
pop
scas
fwait
daa
add
mov
fcompl
inc
popa
or
cmpsb
push
iret
mov
xlat
inc
test
fbstp
mov
mov
xor
out
cmc
sbb
lret
nop
inc
add
insb
popf
jb
pushf
xlat
js
pop
jp
adc
xchg
push
frstor
pop
aam
sbb
pushf
sbb
xor
lods
inc
dec
lods
lea
sbb
fistps
inc
loope
fisubrl
out
or
or
lahf
xchg
cmp
push
js
sbb
jo
jo
clc
movl
outsb
inc
out
movsb
int3
jle
arpl
mov
popa
stos
jg
stc
test
and
or
clc
mov
dec
jo
cmp
xchg
xchg
es
jp
pusha
adc
outsl
icebp
adc
xchg
lock
call
xchg
jg
faddp
push
lcall
js
popf
add
mov
inc
aas
cwtl
in
inc
cmc
push
fiaddl
cmpsl
jns
add
mov
gs
bound
cmpl
cwtl
fsubs
cmpsl
out
sbb
mov
sub
popa
ret
nop
dec
xchg
mov
xor
sub
mov
dec
pop
push
add
mov
adc
out
std
mov
mov
mov
in
stos
in
bound
jae
push
adc
mov
sbb
add
aaa
pop
push
mov
ss
sarl
dec
int3
mov
push
mov
pop
pop
imul
jle
xor
fisubrl
int3
stos
push
int
into
adc
cs
push
cmp
add
movsl
stc
mov
sbb
das
pop
idivl
in
xchg
push
and
fnstenv
sub
push
push
mov
fcomps
mov
cmp
push
push
popa
add
les
and
in
adc
mov
dec
adc
pop
addb
xor
add
cmp
repz
dec
cmc
sub
sub
rcr
sbb
dec
movsl
jge
insb
outsl
aam
mov
dec
test
flds
cmp
sub
das
ss
fwait
outsb
cmc
pop
aas
and
popa
ss
or
cltd
fwait
rol
pop
mov
ret
push
xor
dec
mov
leave
icebp
sbb
xchg
adc
push
sti
or
repnz
and
daa
mov
ja
enter
aam
ja
sub
xchg
int
in
loope
out
lock
arpl
inc
shlb
jns
fmuls
stos
pop
dec
ljmp
mov
loopne
nop
lods
shll
mov
push
sub
out
push
ss
mov
inc
loop
xlat
xor
or
mov
ret
sahf
sub
xor
popa
popf
dec
cmpsl
push
iret
mov
movsb
jmp
pusha
jg
jb
lock
sub
pop
cmc
cmp
and
rorb
mov
into
or
cmp
jp
mov
and
lret
icebp
inc
test
lea
adc
icebp
or
stos
jns
or
fwait
sub
scas
enter
jae
test
or
xchg
iret
dec
pop
dec
xchg
sbb
inc
in
pop
pop
sub
xlat
aas
push
inc
inc
mov
fdivl
cmpsb
xlat
mov
push
lods
lahf
xchg
ss
lods
ficoml
setnp
xor
aad
mov
jecxz
lods
jg
mov
scas
fisubrl
sub
pop
stos
enter
inc
pop
outsb
out
xchg
in
mov
mov
mov
mov
dec
sbb
add
mov
clc
sub
cmc
mov
sbb
push
push
mov
sarb
adc
inc
pop
ds
in
push
mov
insl
cmpsl
sub
jmp
lret
mov
fcmovne
fistps
push
loope
outsl
cwtl
std
push
pushf
mov
adc
lahf
gs
or
les
lea
outsl
in
jecxz
dec
outsl
xchg
dec
leave
test
imul
and
add
outsb
jae
push
mov
ret
cwtl
popf
lcall
mov
cmp
mov
push
xor
stc
stos
mov
jb
icebp
enter
in
lahf
push
jge
outsl
inc
std
or
jne
ficomps
xchg
sbb
sbb
pop
repnz
mov
pop
dec
add
adcb
cmc
mov
mov
xchg
sbb
lds
or
stos
cmp
pop
orl
popf
push
inc
mov
hlt
mov
roll
data16
fdivs
out
mov
stos
aaa
push
outsl
test
daa
add
pop
adcb
in
lret
or
loope
leave
stos
mov
cmp
push
ljmp
adc
mov
jecxz
pop
sbb
pop
xchg
pusha
xchg
gs
in
daa
push
mull
add
jmp
int
lahf
nop
push
pushl
movsl
adc
lods
mov
xchg
and
lcall
pop
jns
push
sub
mov
mov
lock
outsl
dec
movsb
sbb
sub
mov
pushf
rcrb
enter
outsb
dec
pop
xor
bound
lcall
testb
and
mov
cmpsl
add
cmp
inc
adc
push
lock
ja
int3
cli
jmp
mov
shrl
outsb
into
stos
push
subl
inc
inc
outsb
inc
xchg
scas
cmc
or
movsl
cmp
mov
xchg
pop
jae
jno
push
or
inc
es
xor
and
gs
aas
cmp
loop
mov
add
js
mov
std
stos
iret
out
call
shr
ret
data16
rcr
leave
mov
outsb
shll
xor
mov
mov
pop
dec
mov
nop
rcrl
sub
lods
pop
sbb
mov
dec
call
test
call
mov
sti
js
out
pusha
dec
ret
jge
push
jnp
daa
xor
push
inc
pop
pusha
jmp
adc
mov
jmp
xchg
repnz
fiadds
in
xor
add
call
dec
out
lods
fwait
mov
jb
cmp
and
out
repz
arpl
xlat
add
jmp
or
pusha
mov
loope
movsl
fildll
out
pop
lds
or
dec
pop
std
lock
jno
insl
je
dec
fwait
cs
cmp
sbb
cmp
adc
push
ret
lods
jne
push
popa
mov
cmp
bound
outsb
shll
outsl
pop
mov
sbb
call
pop
push
fld
loop
and
inc
popaw
xchg
mov
pop
ret
call
fdivrs
and
pushf
stos
mov
inc
pop
test
mov
fstps
mov
add
lret
mov
cmpsl
iret
mov
push
or
ds
lcall
data16
push
fnsave
push
movl
cmpsb
pop
jl
incl
fisubl
xor
sbb
das
add
ljmp
movsl
xor
rcrl
inc
xchg
adc
into
mov
dec
sahf
jne
jnp
jmp
notb
in
mov
pusha
xor
scas
inc
lods
add
or
in
cld
sbbb
cli
pop
cmpsl
mov
mov
xor
inc
push
mov
and
or
mov
insl
testl
push
and
ret
mov
dec
mov
int
lret
movsb
mov
mov
aad
mov
int
xchg
mov
enter
mov
add
mov
push
or
shrl
pop
or
inc
mov
xlat
mov
repnz
lahf
mov
in
mov
and
mov
mov
lock
add
add
fdiv
cmc
ljmp
sbb
cmc
insb
imul
insb
push
negb
and
xor
jno
inc
aas
mov
inc
cbtw
aad
loop
jge
xchg
cmpsl
fnstcw
iret
mov
dec
out
mov
add
in
cltd
lock
ret
cmp
sbb
ret
fs
mov
inc
mov
and
dec
jmp
popa
sub
clc
ss
or
or
xchg
mov
jmp
int
sbb
pop
inc
and
mov
icebp
ljmp
cmp
rorl
xchg
into
and
jb
test
in
sub
xchg
repz
cmp
sbb
dec
mov
adc
jae
add
das
push
mov
pop
xchg
push
xlat
and
xchg
cmp
adc
mov
mov
push
jb
inc
call
sbb
sub
fsubrl
stos
pushf
sub
aas
hlt
loopne
or
pop
jno
lret
jecxz
mov
decl
sub
lret
jecxz
cli
fldl
dec
push
enter
sti
mov
sbb
loope
fs
fsts
mov
and
add
test
mov
cs
adc
cs
addb
push
std
lcall
pop
es
hlt
arpl
jbe
dec
mov
outsb
xchg
xor
pop
es
dec
addr16
enter
in
je
int
pusha
sbb
mov
xchg
loope
jg,pn
in
inc
add
pop
dec
mov
mov
adc
sbb
dec
xchg
std
sbb
adc
jp
jb
outsb
inc
clc
out
xchg
push
addl
jns
insl
mov
fcompl
push
inc
sbb
pop
sar
ret
jp
sahf
stos
test
pushf
gs
inc
aam
lock
insb
cs
mov
shl
int
subl
push
les
mov
mov
loopne
xchg
aad
ds
jg
lret
into
mov
idiv
int3
adc
or
ljmp
das
inc
push
jae
mov
push
or
jno
or
push
lret
ror
or
je
out
gs
pop
fldenv
test
fcoml
xchg
fldenv
mov
dec
ficompl
jno
notb
movsb
enter
jge
add
adc
push
sub
mov
gs
cmpsl
jle
iret
inc
or
pop
xchg
dec
pop
sub
lea
jnp
pusha
negb
icebp
push
dec
or
pop
mov
mov
fidivl
je
or
lret
test
and
jge
std
cmp
jo
js
jg
fstpl
fstps
xor
push
dec
cmp
sbb
orb
test
push
cmp
stc
mov
add
sbb
and
cli
mov
inc
cmpl
sub
mov
sub
or
sub
or
fst
out
loopne
adc
divl
dec
ret
cmp
dec
cmc
loope
dec
inc
pusha
stc
xor
rorl
add
xchg
imul
jp
cmp
sbb
addl
jmp
icebp
jns
sbb
cwtl
adc
jle
mov
sbb
cmp
or
jge
sbb
and
sti
push
rolb
std
xor
out
out
cmpsb
xchg
mov
sub
and
mov
rcr
fisttpl
xchg
shrb
mov
or
stos
repnz
push
lret
jno
cmpb
and
jnp
sub
pop
dec
stc
ljmp
cli
push
insl
ficoms
mov
push
cmc
dec
imul
data16
push
dec
int
enter
xchg
jecxz
dec
ret
push
mov
into
xor
mov
imul
lock
add
push
cmp
mov
fs
int3
and
dec
adc
ljmp
daa
stos
ja
jne
outsl
sub
push
mov
add
fldl
inc
cli
xor
call
aas
mov
dec
ja
cmpb
fsubs
sti
dec
xlat
cltd
mov
cwtl
push
das
inc
dec
cmp
sbb
nop
mov
cmp
jmp
sbb
mov
test
ljmp
jecxz
inc
push
adc
sub
jecxz
mov
gs
cwtl
shlb
repnz
jo
push
or
xchg
mov
lcall
in
inc
jmp
push
xchg
xchg
dec
das
std
lods
ret
daa
lret
testl
ds
sbb
push
or
shlb
sbb
in
adc
sbb
jmp
sub
test
in
bound
imul
sub
sarl
aad
fisubs
jle
xchg
adc
lret
mov
mov
lea
ss
mov
fisubl
pop
stc
or
in
test
sub
inc
shlb
orl
movsb
iret
xchg
dec
cmp
call
stos
inc
bound
mov
jno
cld
adc
dec
ret
test
pop
pop
cli
pop
xchg
or
cmp
mov
xchg
lock
repz
call
sbb
xor
pop
jne
mov
rorb
addr16
inc
and
pop
pop
lcall
xor
and
movsb
jbe
insb
cmpsl
aam
subb
cmp
fmuls
cmp
outsb
mov
or
push
fcoms
imul
outsl
mov
adc
or
jae
xor
popf
ljmp
scas
testb
fwait
dec
dec
pop
sub
daa
mov
cmpb
adc
sbb
addr16
cwtl
iret
aaa
xchg
icebp
mov
mov
movsl
or
or
lods
mov
movsb
and
jmp
dec
cmpsb
pop
stos
ljmp
dec
pop
pop
inc
into
pushf
sub
leave
roll
cmp
xor
es
xchg
out
testl
enter
aad
arpl
roll
cmpsl
xchg
xchg
push
xchg
sbb
out
movsb
cmp
jge
movsb
gs
cwtl
cmp
repnz
push
cmpsl
test
shll
addb
es
orl
fs
and
in
pop
push
arpl
xorb
push
or
or
dec
dec
daa
sahf
inc
adc
xor
cmpsb
cmp
push
loope
cmp
in
xor
pusha
lcall
idivl
add
movsl
xchg
sbb
loop
mov
icebp
dec
scas
loop
xor
mov
insl
mov
ljmp
paddsb
mov
fnstenv
aam
int
nop
testl
and
pop
and
scas
mov
mov
imul
mov
clc
ljmp
jmp
fucomi
fwait
xchg
sub
ljmp
add
pop
orb
adc
out
test
and
js
xchg
jl
fdiv
mov
xchg
cmp
xchg
arpl
stos
adc
js
stos
jnp
jp
pop
data16
loope
fmul
pop
fwait
cmp
sbb
dec
sub
sbb
stc
mov
push
push
aad
and
cs
fmul
xchg
add
ja
into
test
scas
or
leave
ja
rol
lods
cmp
jmp
jg
mov
addr16
popf
sbb
into
je
mov
jp
nop
test
and
mov
filds
pop
cmpb
test
jo
pop
movsb
shr
mov
cltd
cli
mov
dec
inc
mov
mov
add
mov
pop
pusha
jg
cmp
sub
push
out
sbb
lock
je
mov
pop
shrb
push
dec
add
and
loop
sti
ljmp
push
in
sub
inc
imul
mov
aam
jl
fs
andl
aam
cmc
frstor
lods
sub
out
pop
ja
jnp
shlb
mov
lea
addb
outsl
xor
push
pop
insl
xlat
aam
pop
ja
jnp
iret
push
mov
das
mov
jb
mov
xor
cmp
cmp
ret
add
xchg
scas
sub
cld
flds
fmul
mull
negb
ret
popf
pop
jnp
cld
lock
insl
pop
cmp
sbb
xlat
jno
adc
and
loope
mov
out
sti
xlat
pop
jo
insb
sti
cld
lahf
jnp
orl
pop
cmp
pop
es
fwait
aas
xchg
lcall
jns
jl
dec
jl
xchg
xchg
push
jno
cmp
sub
fs
mov
cmp
ret
fsubl
ds
jmp
inc
shrl
int3
outsb
clc
mov
outsb
fstl
jne
lds
jle
loopne
pop
xchg
stos
inc
inc
sub
xchg
loopne,pn
mov
movsb
mov
push
xchg
fucom
ss
xor
pushf
add
add
xchg
mov
pushf
xchg
jg
lcall
imul
jecxz
sbb
add
adc
jle
cmp
gs
movsl
jle
out
ds
divb
dec
and
dec
incb
xor
in
jb
cmp
data16
stos
pusha
icebp
mov
pop
gs
add
jbe
push
mov
fmul
pop
sub
adc
push
adc
rolb
dec
sti
jbe
icebp
fimull
xor
daa
jnp
aas
ret
jae
jae
cmp
mov
add
sti
xor
xor
jg
jne
xor
or
mov
jl
push
inc
cmp
imul
jnp
sti
lea
mov
pop
mov
stos
push
enter
fisubl
rcrb
js
pop
stos
mov
or
popa
fmuls
sub
or
lds
lret
mov
sbb
outsb
fisubrl
imul
jnp
push
push
shrl
insb
cmp
inc
popf
mov
add
movsb
repz
push
pop
sub
mov
inc
inc
ljmp
les
jp
push
jmp
or
aaa
rolb
stc
enter
mov
test
pop
lock
adc
or
push
rcr
sti
and
pop
mov
popf
cs
add
push
shlb
lcall
dec
std
enter
insl
mov
ret
add
fnstsw
push
and
in
ret
mov
loope
fcomps
mov
jae
int3
bound
lock
sarb
lcall
pop
cli
push
jl
test
stos
push
lods
cmp
adc
pop
movsb
repnz
xchg
test
test
int3
mov
add
pop
cmc
jbe
mov
add
xchg
arpl
mov
mov
adc
xchg
in
lcall
movb
ljmp
mov
ja
dec
sub
pop
dec
dec
and
lock
adc
cmp
out
jb
sbb
push
dec
add
add
sub
pusha
mov
lea
fmull
sbb
dec
addl
pusha
pop
mov
div
insl
ss
repz
mov
movsl
mov
and
mov
dec
aaa
lret
sbb
sbb
loope
sbb
fcmovu
lods
ret
cmp
mov
mov
movsb
jge
ret
lret
add
jns
fisubl
lcall
jnp
xor
iret
sbb
adc
scas
cmpl
inc
add
mov
fistpll
cmp
out
lret
or
pop
rcrb
mov
lret
fs
pop
push
jb
bound
push
lret
dec
repnz
or
adc
data16
movsl
rclb
dec
mov
inc
aam
sbb
sub
icebp
inc
cli
fsubrl
out
mov
push
ss
xor
es
cwtl
out
mov
repz
jns
loope
aas
sub
out
cmp
rcrb
fs
xchg
push
fidivrl
loop
mov
pop
fs
cmc
mov
mov
xor
add
xchg
iret
mov
jo
pushf
rcrl
popa
or
mov
sub
aaa
xor
mov
mov
jne
inc
push
addr16
xor
fstl
in
cmp
frstor
adc
stc
fisubrs
push
adc
ljmp
cs
mov
out
xor
loope
jne
or
aas
into
push
int
lcall
mov
cmp
js
add
inc
int3
aam
xor
pop
icebp
mov
cltd
icebp
pop
xchg
gs
pusha
outsb
xchg
dec
call
in
ret
dec
pushf
push
clc
add
inc
xor
or
pop
mov
inc
insl
mov
pop
xor
imull
out
repz
ret
movsb
dec
inc
xchg
dec
std
mov
cmpsl
pop
push
std
xor
mov
jmp
fsubrs
xorb
mov
cmpsl
push
mov
stos
lahf
addb
out
jns
dec
and
jae
les
cld
orb
pop
outsl
incb
sub
repz
test
aas
je
gs
xchg
or
hlt
sbb
add
lock
cmp
popa
aam
hlt
adc
push
adc
xlat
lods
inc
loope
sbbl
adc
push
loopne
shrb
pop
or
fcomip
mov
cmp
xchg
inc
push
adc
sub
pusha
and
call
fnstenv
lods
push
mov
loope
mov
in
das
add
mov
ss
jne
mov
testl
pusha
mov
ss
les
bound
scas
mov
ret
lret
jecxz
mov
test
scas
sarb
sbb
sbb
loop
cmp
mov
call
adc
outsl
fsts
xchg
pop
fstl
lcall
repz
mov
mov
loopne
rcl
int3
pop
sahf
dec
dec
imul
sbb
xor
jg
push
jno
jno
mov
out
xor
fiadds
ficoms
mov
mov
adc
imul
adcl
jns
cmpsb
pop
cmp
pop
dec
mov
popf
pop
add
scas
ret
scas
jmp
cmp
push
ss
jno
jae
jns
dec
add
mov
mov
inc
sbb
pop
pop
int3
jge
loopne
xor
or
and
inc
pop
cmp
mov
out
sub
jno
aaa
and
xchg
enter
shr
fstp
rcrb
mov
stos
push
aaa
cli
dec
and
mulb
sbb
cltd
mov
cmp
mov
mov
pushf
pop
in
test
jns
add
push
mov
hlt
fwait
adc
mov
sub
in
inc
xchg
loopne
add
mov
and
mov
daa
ljmp
pop
inc
pop
sbb
aam
in
cmp
loop
jge
enter
mov
stos
ljmp
popa
jecxz
jmp
fmuls
popa
lea
shl
xlat
loop
xor
push
mov
xchg
push
in
cltd
mov
rclb
push
gs
mov
inc
lea
dec
mov
fsts
and
cmc
add
mov
loopne
shll
pop
pop
out
xor
je
pushfw
xchg
dec
popf
mov
scas
popa
cli
addr16
movsl
and
insl
fistl
pusha
repnz
les
add
cmpsb
push
test
xchg
js
insb
mov
sub
sbb
repnz
out
cmp
or
sub
jno
mov
inc
stc
fldl
lds
sets
jnp
push
adc
in
xchg
push
cld
mov
mov
adc
mov
mov
andl
repz
stos
sbb
lret
fstl
je
cltd
add
inc
inc
pop
leave
mov
lock
ljmp
repz
cmpl
and
pop
mov
xor
stos
mov
adc
lock
flds
in
push
sbb
int3
std
stos
cmpsb
jo
sub
sub
cld
and
sbb
lret
cld
popa
arpl
push
xor
enter
jns
xchg
sbb
or
icebp
lahf
in
inc
mov
pop
xor
sbb
iret
xchg
repz
sahf
sti
dec
dec
xor
inc
mov
mov
cmp
sub
jb
in
pop
add
repnz
dec
fisubs
andl
push
fistl
movsl
lret
cmp
insb
mov
outsb
jecxz
insb
and
ja
stos
pop
ljmp
popf
test
in
ret
loop
adc
fdivs
xorl
dec
xor
rolb
adc
loopne
xchg
jbe
mov
push
push
aas
int
or
xorl
adc
or
nopl
cltd
cmpb
lods
lret
jne
jae
pop
je
scas
inc
fwait
inc
jnp
or
scas
pop
lcall
in
out
jae
pop
into
push
lret
cs
shlb
pop
cmp
mov
outsb
xor
xchg
rcll
or
pushf
adc
shl
push
lock
pushf
sub
jmp
imul
lds
and
add
lods
dec
jl
jno
pop
adc
std
mov
insl
xchg
idivl
sub
arpl
cltd
mov
xchg
pop
lds
imul
stc
fs
out
int3
stc
xor
pusha
jle
aad
or
loope
repz
es
mov
sub
pop
pop
int3
sti
push
adc
movsb
dec
mov
xlat
ret
or
xchg
hlt
lods
arpl
mov
pop
and
xor
push
mov
cld
shlb
std
into
movsb
dec
int3
clc
scas
pop
or
popa
jae
outsb
shl
ret
daa
mov
fsts
ret
rorl
cmpb
sahf
sub
add
mov
dec
loop
cwtl
mov
cmc
mov
mov
xor
aam
ljmp
xchg
cwtl
mov
repz
xchg
mov
sbb
mov
push
cli
in
cmp
mov
pop
int
push
in
enter
mov
fcomp
punpcklbw
xor
add
shl
sarb
movsb
test
add
jl
cmp
inc
cmpsl
fprem1
sbb
pop
jl
lods
push
mov
inc
repz
lahf
mov
ret
sub
out
cmc
xchg
cmpsl
inc
jno
cmp
shll
stc
mov
jno
ds
fbld
addr16
mov
stos
or
out
sub
dec
inc
adc
int
or
xor
push
pop
mov
mov
jno
mov
mov
lds
dec
testb
cmpsb
xlat
cli
pop
pop
fisubrl
lret
xchg
stc
adc
xchg
or
xchg
and
lret
and
stos
cld
out
push
scas
add
imul
mov
add
ret
add
lret
iret
add
push
mov
mov
mov
add
cs
mov
lock
adcl
imul
mov
pop
inc
daa
test
cmp
jnp
add
stc
loopne
adc
adc
xchg
imul
push
or
ud0
data16
push
rcll
mov
movsb
xchg
jae
dec
xchg
test
jne
xor
cmp
je
cmp
in
ret
and
xchg
push
bound
push
add
jo
pop
pop
shr
dec
leave
mov
and
popa
addr16
scas
sub
cmpsl
push
popa
rol
jnp
adc
cltd
pop
xchg
stos
mov
stc
repnz
adcb
xchg
jmp
test
js
cmp
movsl
dec
and
xchg
adc
rcrl
test
loope
sbb
add
pop
ljmp
push
inc
sahf
add
add
cmc
mov
mov
cmp
mov
and
fmulp
jbe
pop
cmc
mov
fistl
cmpsl
add
pop
arpl
pop
cmp
jno
push
and
aaa
xchg
dec
jle
aam
mov
push
cli
scas
insl
pop
jge
push
mov
ljmp
jo
call
dec
jns
inc
xorb
das
xlat
lock
lahf
lods
xchg
jp
aaa
jae
movl
or
es
in
scas
add
xchg
push
or
loope
push
push
rcl
dec
stos
jne
cmp
mov
in
xchg
mov
loope
dec
push
jmp
and
or
lcall
dec
addr16
push
std
dec
jb
fstl
test
in
jb
sar
jge
mov
mov
sbbl
into
xchg
jle
ret
int
ret
sub
add
jecxz
adc
or
test
jmp
cmp
ljmp
adc
test
stos
xchg
mov
sbb
int
cmpsb
iret
sbb
cmp
stos
jno
mov
ret
lret
fs
in
pop
cmc
test
sar
mov
ficoml
inc
mov
sahf
adc
fists
stc
jno
pushf
ss
jb
inc
daa
and
imul
mov
lea
jae
clc
and
inc
pushf
insb
adc
mov
ja
ss
and
clc
inc
leave
in
mov
cmp
out
std
mov
test
cmpsb
push
add
jbe
lret
sbb
mov
imul
cmp
push
repz
pop
pop
adc
enter
sbb
and
pop
sbb
lock
adc
xor
cmp
adc
and
dec
out
sarl
les
stos
jne
int3
nop
xchg
jbe
mull
xor
xor
imul
jge
popf
lahf
add
std
cmpsb
cmp
int
xor
or
shrb
shl
and
mov
fiaddl
sbb
fisubl
gs
cmp
xor
das
cmp
or
add
dec
frstor
in
bound
pop
rcrb
mov
inc
repnz
pop
sub
cli
shrb
or
adc
gs
xchg
pusha
popa
cmp
push
mov
lods
movsb
jns
stos
inc
in
in
notl
or
popaw
add
xorb
out
mov
lret
hlt
cld
add
out
jne
mov
lods
mov
sbb
cmp
test
or
pop
mov
inc
xor
add
push
in
cli
rcrl
adc
pop
addr16
mov
xor
dec
pop
dec
sbb
in
imul
enter
int3
out
mov
idivb
test
fldt
lret
mov
cmp
mov
xorb
inc
ss
push
pop
add
cmp
push
es
pop
pop
jb
ljmp
iret
jmp
or
or
sub
adcb
pop
fcmovnbe
lahf
insl
mov
orl
mov
pop
in
popa
stos
inc
sub
xlat
fs
or
cmpsb
stos
add
sbb
dec
shlb
xor
lret
in
fidivrl
cmpsl
data16
mov
mov
lock
sti
xchg
mov
cmpsb
cmpsl
rcl
ret
hlt
mov
std
dec
arpl
mov
lcall
mov
cwtl
and
sub
add
test
sub
neg
jecxz
addr16
push
fisubrl
bound
push
stc
mov
cmpsl
stc
jbe
push
shll
sub
fwait
xor
push
pop
and
in
fsub
out
ss
xchg
insb
pop
dec
or
loope
adc
jl
push
or
sub
cli
cli
rcrb
push
xchg
mov
mov
add
movl
sub
jmp
adc
lea
cmp
fdivs
pop
jp
adc
sbb
push
mov
mov
jo
scas
add
mov
shrl
sub
xor
cltd
pushf
aaa
ds
sub
int3
into
ja
sbb
pop
pusha
push
mov
repnz
adc
sub
mov
or
jnp
out
iret
outsl
outsb
or
xor
jns
push
in
jmp
popa
pop
shrl
pop
add
das
rcll
imul
adc
das
fnsetpm(287
pop
das
fisttpl
jmp
std
mov
xchg
jae
loope
iret
mov
mov
ret
call
sbb
mov
jecxz
jmp
xor
decb
into
and
fldl
imul
aas
or
adc
and
push
cwtl
or
scas
int
out
shl
fists
cmp
xchg
and
dec
push
or
pop
stos
and
xor
xor
call
fstpl
mov
sub
dec
cltd
mov
call
mov
jno
jbe
addl
sub
and
cmpsl
and
or
stos
lods
jnp
in
insl
fcomps
les
test
push
lock
std
mov
jbe
add
mov
je
push
fdiv
jecxz
f2xm1
sahf
mov
jb
dec
xchg
repnz
fnstsw
mov
mov
or
int3
mov
lret
lea
jge
pop
push
ret
dec
bound
pop
outsl
cmp
in
xor
mov
in
pop
orb
cmp
push
adc
add
and
cmp
or
repz
push
push
or
cmc
jp
add
adc
cs
dec
push
mov
inc
or
mov
mov
dec
xor
and
lock
in
cwtl
adc
stc
adc
cmpsb
lock
mov
pusha
cwtl
mov
add
push
dec
jns
cld
mov
ja
add
pushf
cmpsb
push
xchg
push
jo
mov
mov
mov
dec
push
fwait
sbb
sti
pusha
lods
inc
lahf
and
mov
outsl
cs
aad
and
add
into
rcl
sbb
out
jle
icebp
testl
ret
scas
mov
pop
inc
movsb
pushf
in
adc
pop
jl
sbb
mov
imul
xchg
lret
lods
icebp
xchg
scas
mov
leave
inc
movsb
imul
jecxz
arpl
in
cmp
xchg
push
clc
mov
flds
or
add
xor
outsb
cmp
leave
fists
hlt
add
enter
in
or
and
lret
bound
jns
ljmp
add
mov
cmp
inc
arpl
jl
out
push
push
pop
sbb
sub
loope
jmp
or
inc
rcr
sub
mov
aaa
lahf
push
jmp
sbb
sbb
sub
xchg
fmull
aas
pop
dec
jns
pop
aaa
sahf
std
movsl
cmp
mov
xor
sbb
jle
push
cltd
add
xorb
scas
push
mov
por
ret
pusha
or
jns
pop
js
cmp
push
in
inc
dec
dec
and
jne
iret
push
shrb
ljmp
loope
push
adc
mul
dec
cmp
xchg
jae
pop
outsb
cltd
and
mov
jae
xlat
aaa
jmp
pop
jbe
mov
pop
pop
lea
mov
cmp
cmc
movsb
lret
mov
pop
ljmp
movsb
mov
cmpsb
leave
pop
fistps
or
mov
jne
sub
cmp
and
mov
mov
push
ficomps
cli
jo
pop
cld
fdivrs
outsl
mov
mov
jl
pop
ret
dec
popl
xchg
pop
push
jae
mov
jle
add
fldt
adc
adc
iret
jle
repz
or
or
out
jno
cmp
push
arpl
and
into
mov
push
pop
nop
rcr
into
test
insb
push
and
repz
sbb
aam
cmp
nop
cmp
mov
mov
xlat
pushf
out
aas
mov
nop
lods
adc
aas
cmp
jg
mov
popf
out
lret
add
inc
jl
lret
and
lret
mov
imul
dec
push
sbb
jmp
into
rcpps
ss
sbb
add
add
inc
fxtract
and
push
cmp
inc
mov
scas
test
xchg
or
scas
xor
mov
sbb
call
ja
mov
addl
and
pop
push
xor
orl
sub
out
addr16
movsl
cld
push
jbe
mov
test
jmp
mov
les
jl
sahf
inc
dec
cmp
mov
jl
icebp
test
pop
mov
lods
lods
cmp
repz
shll
fs
aam
cmp
sbb
aad
xchg
mov
ss
pop
pop
adc
loope
sub
and
sbb
push
movsb
popa
and
pop
mov
sbb
mov
sub
push
les
cltd
nop
xor
repz
cmp
sahf
jb
aam
nop
pop
addr16
pop
cwtl
jle
inc
mov
loopne
pop
stos
lods
dec
inc
mov
les
js
and
xlat
pop
cmp
fstl
stos
push
inc
popa
mov
imul
decb
pop
push
mov
jp
iret
call
mov
ds
dec
pextrw
push
out
sub
inc
xor
cmp
daa
push
hlt
insb
mov
or
scas
sahf
daa
and
adc
xor
jno
test
jg
setg
xchg
clc
jecxz
sbb
mov
leave
pop
lods
aad
xchg
rolb
inc
xchg
add
aam
pop
fstpl
aas
inc
in
mov
xchg
repz
dec
loope
xor
jns
lret
or
push
out
rolb
into
jnp
xchg
flds
jnp
sbb
mov
insb
xchg
cmp
cmp
pop
fists
mov
or
or
shrb
mov
bound
jecxz
fucomp
mov
aam
mov
inc
pop
roll
icebp
mov
mov
fisttps
xchg
vunpcklps
ret
sahf
inc
enter
xchg
add
lret
das
sbb
xchg
sub
mov
mov
and
and
mov
mov
cmpsb
add
pop
cwtl
sbbb
mov
adc
in
sbb
adc
xchg
jbe
movsb
sbbl
and
loope
lahf
addr16
into
fwait
mov
xor
sub
aas
sti
xchg
es
mov
add
jle
fistps
adc
divl
shlb
adc
aam
lcall
xor
pop
lods
out
test
mov
test
out
movsb
sub
dec
pop
in
aaa
cmpsl
lds
or
jge
mov
jbe
xchg
fnstcw
test
push
int3
int3
cmpsl
repnz
mov
dec
push
dec
lret
loope
js
jbe
stc
mov
adc
xor
push
cmc
jg
scas
push
jo
jmp
dec
int
jp
cmc
pop
aas
sbb
ljmp
vxorps
jecxz
ficoms
pop
scas
int
fadds
inc
mov
push
push
mov
or
jle
data16
inc
dec
add
mov
rcr
inc
fisttpl
rcl
push
ret
stos
mov
dec
sbb
mov
insb
js
pop
cmpsl
pop
arpl
movsl
into
fildll
push
into
shlb
mov
test
inc
ljmp
or
cld
sbb
sbb
and
cmc
mov
mov
mov
inc
aad
push
test
int
xor
fbstp
mov
stc
or
in
icebp
repnz
jb
inc
lahf
inc
ljmp
cs
fsubl
mov
xor
mov
jne
push
lret
xchg
loope
sub
mov
arpl
data16
gs
xor
push
loopne
test
jl
mov
ficoms
jge
pop
add
repnz
das
mov
popf
xor
jle
data16
int3
repnz
and
out
xor
adc
xor
fs
in
jl
adc
movsl
xchg
mov
mov
dec
inc
enter
into
outsl
std
push
in
test
add
inc
nop
insl
es
les
daa
aas
insl
fdivs
push
pop
into
jge
xchg
mov
je
pop
mov
lahf
jno
push
dec
test
mov
sbb
fidivl
ja
enter
xor
and
sbb
lret
sbb
pop
cs
repz
pop
xchg
pop
lods
cld
cltd
out
xchg
movl
bswap
sub
inc
std
dec
popf
or
inc
test
fwait
test
lahf
or
mov
push
inc
push
pop
daa
xor
std
xchg
shrl
stos
inc
ja
cmpsl
cli
dec
fcoms
rcrl
adc
je
and
mov
mov
xchg
xor
in
lret
dec
mov
sub
xchg
xchg
lcall
xor
enter
jnp
dec
xchg
stc
and
rcrl
cmp
mov
icebp
mov
xchg
les
dec
mov
hlt
and
dec
into
stos
pop
sbb
popa
mov
xchg
push
cs
aaa
adc
imul
mov
add
mov
cmpb
faddp
push
xchg
jb
xor
jp
ficoml
addl
iret
sub
and
jo
adc
cmc
jnp
shlb
les
xchg
and
mov
lods
dec
fnstsw
mov
adc
ret
mov
icebp
cmp
mov
cltd
outsl
dec
jl
cmp
mov
lahf
jne
add
inc
shl
pop
cmpsb
imul
andl
frstor
ja
xchg
std
sbb
and
push
pop
sub
xor
push
sub
mov
test
loop
jno
adc
rcrb
rolb
inc
je
mov
rol
add
jbe
xchg
stos
or
fistl
addr16
addb
int3
mov
jns
in
rclb
pop
fwait
push
lret
sar
mov
sti
loop
lds
jg
shll
ret
pop
jle
into
call
xchg
daa
push
pop
popf
in
in
xlat
push
dec
xchg
pushfw
xchg
mov
pop
add
out
lret
cmpsb
push
dec
out
out
xor
sbb
imul
add
loop
fwait
inc
ljmp
and
sbb
enter
cwtl
and
push
mov
out
push
cmpsb
mov
cld
mov
and
dec
cmp
enter
push
or
push
cmp
popa
movsl
pop
movsb
sbb
test
dec
jmp
inc
jae
add
popa
js
add
int
in
mov
pop
fwait
push
stc
lret
jae
cmp
hlt
add
mov
testb
xchg
pop
in
shl
gs
lds
sub
aaa
pusha
outsl
sar
dec
in
rorl
cltd
pop
mov
stc
xchg
xchg
dec
pop
cmp
mov
xor
jne
inc
fnstcw
push
pop
or
repz
jle
cmp
push
or
sbb
mov
movsl
sbb
sub
pusha
xor
xchg
mov
ret
dec
cmc
jmp
fcmovb
jns
hlt
pusha
loope
jmp
pop
adc
jle
fiadds
cmc
mov
mov
movsl
fcmovnu
ret
inc
inc
lret
push
jns
out
dec
shl
sarl
sbb
jl
adc
fidivl
xor
inc
xchg
inc
into
push
sub
loopne
push
cld
fildll
fs
inc
loope
add
stos
mov
cmp
xor
out
icebp
into
xor
mov
push
rorl
jae
outsb
and
mov
out
pop
dec
pop
sbb
lods
lods
test
cmpsb
pop
adc
aas
ret
cmpsb
pop
sub
insb
stos
cltd
dec
dec
loop
dec
pop
dec
hlt
pop
out
int3
dec
nop
out
mov
xor
sbb
out
push
dec
pop
outsl
fisubs
pop
push
insl
lahf
sub
xor
fstps
xchg
add
jle
fs
cmpsl
loop
gs
sub
fldenv
mov
cs
jae
sbb
stos
xorl
mov
std
mov
sti
push
push
pushw
out
mov
xchg
push
shlb
push
out
imul
sub
sub
mov
lret
adc
in
call
mov
sbb
out
inc
xchg
mov
das
nop
mov
mov
imul
outsb
lcall
cltd
inc
or
push
adc
sbb
in
enter
ds
out
dec
mov
sbb
adc
add
lret
outsl
xor
shlb
cmp
and
int
cs
mov
fsts
and
test
enter
pusha
mov
subl
enter
in
cltd
push
jmp
popl
adc
fsubs
rorb
lahf
jmp
push
mov
inc
jns
arpl
xor
subb
pop
mov
push
fnstcw
dec
bound
shrl
xchg
inc
insb
xor
orb
xchg
imul
cwtl
sti
clc
jno
mov
leave
icebp
inc
xor
jnp
add
jbe
in
xor
mulb
jle
fcmove
inc
mov
test
add
sbb
outsb
xor
adc
lahf
add
push
faddl
push
sbb
fisttps
in
dec
add
cli
cmp
aas
es
subb
inc
inc
or
pop
adc
jmp
ljmp
rcrb
sub
add
xor
movsl
mov
insb
ret
cld
les
mov
call
fwait
shlb
and
mov
jbe
cmpsl
pop
mov
mov
mov
rcr
bnd
xchg
lret
insl
ret
data16
test
je
cmc
loopne
inc
gs
lcall
mov
test
add
clc
and
mov
sarl
enter
sbbb
loop
stc
cmpb
jmp
jbe
cmovle
adc
xor
xor
addr16
mov
fcmovb
fdivl
and
mov
cmp
daa
cmp
cmp
inc
or
sbb
mov
stos
mov
xor
xorl
cmp
push
in
aas
inc
pop
and
cmp
push
mov
push
add
pushw
movb
xor
movsb
cmp
jecxz
int
aad
stc
ror
pop
les
or
adc
aad
xchg
push
push
cmp
fdivr
lds
mov
imul
xchg
push
mov
ficompl
mov
mov
xor
js
out
mov
push
je
and
and
push
cld
jnp
int
out
pop
jb
sub
jbe
cmp
in
lahf
add
mov
stc
into
push
xorl
stos
push
dec
cmp
inc
adc
push
pop
inc
cwtl
inc
xchg
xchg
xor
gs
sbb
mov
cmp
lret
sub
mov
mov
add
test
inc
popf
orl
jo
shrl
sbbl
cmpb
imul
test
xchg
inc
dec
cmpsb
sub
out
xor
sti
mov
xor
pop
negl
and
pop
sub
sbb
add
test
adcb
imul
dec
aaa
fwait
ss
sarl
cmpsl
jg
push
cli
ret
xor
add
sti
sbb
movsl
mov
jno
mov
adc
ds
cmp
xor
aaa
or
shr
arpl
insl
mov
cmp
out
inc
frstor
into
movl
shl
pop
cmpsb
movsb
and
sbb
inc
adc
cmp
cld
xor
cmp
lret
pop
or
dec
loopne
out
mov
inc
ret
mov
insl
mov
mov
sar
dec
or
loop
dec
mov
filds
push
jns
jge
cld
scas
test
and
pop
and
call
int
jae
ret
mov
out
out
pop
mov
ja
div
push
incb
or
xorb
mov
imul
pop
sbb
nop
or
std
push
dec
fiadds
movsl
add
sub
insb
into
test
xchg
pop
in
movsb
out
bound
sub
mov
xchg
popa
movl
subl
sahf
add
or
push
push
stc
add
xchg
clc
xchg
ret
lock
data16
mov
inc
sub
cs
clc
fnstenv
test
nop
icebp
or
dec
adc
inc
jmp
xor
in
cmpsl
sbb
mov
mov
in
push
xor
in
xor
mov
jge
or
mov
pushf
pop
int3
aad
test
jnp
or
push
insl
out
cmp
mov
pop
enter
push
xchg
insl
movsl
mov
lods
and
mov
mov
cmp
xor
fnstenv
add
cld
sbb
and
adc
lods
jne
popa
cmp
mov
insl
cmp
pushf
out
push
xchg
xchg
out
dec
loopne
pop
movsb
dec
cwtl
sub
and
sub
and
scas
dec
xchg
adc
gs
dec
daa
mov
mov
and
xor
sbb
adc
jns
add
popa
inc
xchg
mov
sbb
test
push
js
jnp
dec
ja
mov
sub
cmp
loope
mov
jo
mov
sbbl
dec
add
push
out
dec
icebp
fistpl
sub
je
push
cmp
fmull
cmp
inc
mov
jo
add
jns
push
call
and
jo
hlt
sbb
add
add
mov
fnop
add
fisttpl
int3
mov
in
ds
lods
loope
daa
int3
mov
sub
inc
pop
or
jg
pusha
mov
jg
stc
outsl
cmp
orb
jnp
add
sub
cmpsl
aad
push
push
fstenv
jge
jno
out
xor
cmc
mov
scas
cmp
rclb
int3
fnstsw
les
push
inc
dec
test
add
sub
xchg
frstor
js
push
aas
stos
hlt
fisubrs
mov
mov
shrb
imul
jbe
lock
add
push
adc
dec
idivb
inc
imull
aaa
pusha
jns
adc
popa
jecxz
cli
jl
jmp
cmpsb
cmp
lods
cmp
out
imul
arpl
cmp
fwait
loop
mov
push
push
ss
xor
in
ficomps
push
adc
movsb
call
gs
mov
mov
lods
push
push
in
xchg
xchg
test
inc
pop
aam
out
lcall
inc
add
xor
xor
push
xchg
mov
jl
int3
adc
xchg
ret
cli
jb
mov
outsl
loop
mov
pop
mov
es
jmp
push
xchg
mov
lahf
pop
int3
mov
rcrl
xchg
cmp
jmp
xchg
fisttpll
pushf
out
push
arpl
pushf
fldcw
sub
mov
aad
inc
sbb
not
std
xor
js
test
lods
inc
xorl
test
daa
and
push
mov
inc
sti
iret
or
push
andb
je
jae
imul
scas
outsl
mov
aam
dec
push
ficompl
xor
movl
mov
fidivs
shlb
cmpsl
pop
sarl
outsb
mov
es
push
adcl
xchg
scas
and
pop
fstpl
rcll
ficoml
adc
lods
xchg
xchg
add
mov
sti
push
sbb
ret
das
hlt
push
sarl
xchg
mov
mov
mov
ljmp
addr16
sub
push
adc
add
shr
xlat
xchg
pushf
xor
mov
xchg
push
lods
mov
xor
into
mov
addr16
pop
ss
xchg
mov
sub
dec
sub
mov
sbb
pop
int
insl
jne
or
aaa
fdivrl
loop
fldcw
scas
mov
ja
sbb
popf
xlat
adc
cmp
xchg
add
fadd
adc
dec
sub
scas
les
ss
shr
xlat
adc
mov
push
outsb
sub
sub
pop
fisubl
jecxz
lods
jae
cmp
inc
mov
xchg
loopne
nop
jle
mov
inc
jl
xchg
imul
mov
jmp
xor
imul
rorb
ss
inc
aam
lock
cld
xchg
sbb
mov
int
addr16
pushf
arpl
cltd
push
ja
push
out
shrb
les
mov
adc
call
xor
cmc
clc
in
pop
in
pop
gs
lods
enter
jne,pn
inc
push
push
push
mov
imul
mov
xlat
xchg
fimuls
lock
mov
xadd
movsl
push
pop
flds
sbb
gs
in
std
rorl
je
fldenv
int3
inc
imul
mov
adc
mov
jne
pop
loop
jge
inc
or
mov
setp
orb
or
xchg
jnp
jbe
or
jp
mov
adc
fcoms
mov
lods
xchg
pop
orb
dec
shrl
and
out
lds
test
into
stos
movsb
pop
fcmovnb
jae
mov
mov
jp
pushl
pop
adc
ljmp
in
dec
jg
pop
imulb
sub
or
lods
popf
js
fwait
adc
add
lds
jno
pusha
jmp
adc
add
negl
sahf
sub
sbb
pop
mov
jle
jns
lock
fidivrl
lods
mov
cmp
xor
jecxz
fabs
or
testb
arpl
sahf
aad
pushf
push
mov
mov
pop
inc
aaa
es
mov
mov
daa
pop
push
js
lds
loopne
xchg
and
scas
cmc
das
mov
pop
popa
addr16
mov
adc
pop
xchg
dec
fs
pushf
jecxz
xchg
pushf
sub
and
loopne
mov
jns
xchg
lock
adc
outsb
sub
testl
mov
push
inc
nop
xlat
loopne
dec
inc
test
push
fcoms
popa
sub
jne
outsl
add
xchg
ss
xchg
push
dec
dec
aam
mov
aad
push
repz
fsubrl
arpl
jns
es
lahf
adc
out
test
or
fwait
loop
ss
dec
jo
push
mov
jbe
mov
and
inc
jo
outsb
mov
push
sbb
lret
leave
gs
mov
dec
orb
inc
pop
test
dec
test
dec
inc
dec
rorb
xchg
xchg
and
sub
dec
xchg
xor
jmp
mov
cwtl
subb
rcll
sub
popf
stos
data16
jo
daa
test
aas
sub
cwtl
xlat
adc
mov
jl
call
gs
mov
jns
push
out
outsb
sarb
ss
lahf
inc
aad
dec
nop
dec
in
nop
push
notb
je
mov
les
insb
cmp
jmp
pusha
cmp
insl
pop
mov
inc
push
aaa
and
ds
mov
xchg
mov
ja
addr16
sbb
sbb
shll
es
mov
mov
mov
fpatan
inc
pop
mov
jp
cmp
andb
cwtd
inc
stos
xchg
pop
out
jl
xchg
cmp
imul
cmpsl
xchg
mov
in
or
inc
mov
cmp
and
or
data16
push
addr16
xchg
subb
imul
sub
inc
jno
jecxz
insb
repz
push
daa
rcll
mov
add
add
add
aam
movsl
push
dec
test
scas
ret
push
test
lods
cs
hlt
mov
jno
cltd
leave
jle
repnz
adc
aas
mov
das
pop
sub
out
repnz
aaa
inc
dec
adcb
inc
push
and
or
push
add
inc
mov
sub
mov
ja
int3
dec
jmp
mov
fwait
out
mov
add
adc
xchg
cmc
cwtl
or
mov
adc
daa
inc
dec
movsb
add
push
cld
cs
push
test
loope
loop
call
je
jo
pop
dec
lret
pop
mov
je
sub
into
adc
dec
xchg
or
cmpsl
ja
inc
std
out
jb
dec
inc
cmp
xchg
mov
lcall
jno
inc
icebp
insb
test
aas
cmpsb
sub
xor
sub
adc
pop
imul
add
mov
lods
imul
pop
and
fwait
mov
addr16
rol
xor
xchg
pop
movsb
sbb
xor
mov
mov
popa
add
std
stc
cmp
hlt
bswap
fnstsw
mov
mov
dec
mov
push
out
sub
outsb
outsl
mov
lods
push
sub
cmp
loope
mov
inc
lods
imul
cwtl
ljmp
sub
movsb
mov
jne
imul
sbb
push
adc
incl
xchg
cmpsb
pop
jmp
pop
mov
gs
fwait
imul
lock
pop
mov
dec
and
ret
mov
repz
mov
pop
loop
cld
and
mov
ja
sub
pmaxub
pop
sub
pop
hlt
sub
notb
lods
lock
fidivl
enter
clc
sahf
mov
rorb
xchg
imul
popa
lret
jge
outsb
mov
scas
sub
mov
and
jmp
inc
leave
jp
lcall
mov
insb
adcl
sti
sub
cmpsb
push
insb
insb
stc
iret
mov
jbe
dec
sub
psubsw
pop
push
scas
dec
sbb
repnz
xchg
incl
mov
add
pop
rcrl
dec
into
dec
cmp
rcrl
arpl
icebp
ljmp
shrl
jo
dec
jb
mov
outsb
mov
loop
lahf
or
data16
lret
call
nop
sbb
pop
mov
pop
lea
jbe
pop
mul
inc
icebp
int3
test
adc
jmp
add
sub
scas
fucomi
inc
sti
adc
push
push
hlt
aad
fdivl
mov
lods
hlt
push
mov
pop
jle
mov
jge
xor
push
fnstcw
mov
iret
xor
fldcw
and
lods
push
popf
sub
mov
cmpsb
dec
stos
add
inc
mov
add
popf
das
and
js
loop
or
and
cmpb
mov
jecxz
mov
int3
icebp
loopne
mov
paddsw
mov
jae
shll
incl
rcrl
cs
pop
inc
insl
and
test
stos
shlb
xchg
xchg
adc
cmc
mov
mov
sbb
jne
pusha
scas
xor
sub
mov
jno
das
dec
mov
sub
iret
das
or
jp
or
fwait
cmpsl
jbe
add
adc
mov
cmpsl
xor
popf
mov
call
inc
loopne
sbb
dec
jmp
lahf
inc
or
mov
in
das
push
add
fwait
test
lahf
rcrl
fistpl
or
cmpsb
aaa
daa
pop
jmp
jl
push
sbb
push
push
pop
mov
cli
cmpb
mov
sbb
call
sbb
cli
insb
fisubrl
jl
gs
pop
mov
int
fistpl
test
hlt
outsl
movsb
dec
and
push
scas
scas
mov
xor
pop
in
mov
mov
inc
dec
loopne
das
sbb
lahf
popf
cmp
push
push
fs
sub
add
dec
out
test
xchg
imul
lock
mov
icebp
cli
cmp
pop
mov
pop
lock
mov
sbb
mov
fbld
cmc
pop
sbb
mov
stos
jmp
mov
mov
or
mov
xor
daa
repz
sbb
push
out
or
jmp
sub
add
ret
imul
mov
push
cmpsl
std
cmpb
mov
push
cmpps
sbb
adc
push
dec
adc
lret
mov
sahf
ja
push
jecxz
push
and
push
ss
sahf
pop
nop
stc
push
add
push
movsl
sub
or
jo
stos
std
int
push
stos
sub
sbb
mov
mov
mov
fdivrs
cmp
lods
movsb
mov
dec
nop
xchg
int3
out
out
je
fiadds
sub
add
mov
or
aaa
lods
test
and
loopne
test
push
test
add
and
and
movl
cmp
or
jecxz
push
test
data16
fstps
aam
dec
nop
movsb
jmp
fidivrs
shrb
int
iret
push
jmp
ja
test
dec
sbb
andl
mov
sub
sbb
sarb
push
and
imul
push
les
nop
ljmp
ljmp
int3
mov
lock
mov
shlb
arpl
into
test
sarb
and
lret
jmp
movsl
sub
fdivrs
adc
inc
mov
inc
imul
aas
push
push
js
xor
jp
xchg
or
mov
and
push
out
test
push
stc
xchg
aas
dec
fldenv
inc
xchg
mov
xchg
aaa
lods
xor
push
pop
fnstcw
sub
mov
lock
mov
mov
cltd
aad
lods
mov
lcall
idiv
mov
ss
xor
daa
jo
cmpsb
mov
in
or
mov
shlb
or
xchg
push
inc
rcrl
nop
clc
imul
cld
aam
fnsave
neg
sbb
or
mov
pop
loope
das
or
xchg
iret
or
mov
xchg
push
lods
inc
movsl
xchg
int
lods
adc
dec
adc
subl
addr16
jmp
inc
pop
or
out
xor
frstor
out
dec
negl
mov
adc
mov
roll
and
pop
cvttps2pi
and
testl
clc
ret
sub
sbb
out
jmp
mov
and
sub
lret
mov
cmpsb
and
inc
dec
mov
jle
xchg
rol
dec
jno
push
stc
fnstsw
leave
cld
dec
inc
inc
jbe
adc
mov
mov
stc
shlb
out
test
push
xchg
xchg
sub
adc
lods
dec
fwait
out
mov
daa
jno
sahf
cmp
and
jp
push
lret
fistl
cmpsb
dec
insl
xor
in
cmp
int
gs
aas
lahf
sarl
mov
icebp
or
fistpll
cs
xchg
mov
add
adc
jmp
clc
sbbb
inc
dec
mov
mov
dec
call
inc
add
test
push
pop
sbbl
xor
and
mov
push
sbbl
add
movl
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
sbbl
xor
add
jmp
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jb
mov
mov
xor
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
mov
add
movzwl
mov
adc
mov
negl
movzwl
xor
add
mov
mov
mov
inc
mov
movl
cmp
jne
add
mov
mov
add
xor
add
sub
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
xor
andl
mov
inc
mov
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
add
mov
and
movl
sbbl
movl
movl
mov
mov
neg
mov
movzbl
sub
xor
add
mov
mov
mov
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
adcl
xor
xor
xorl
sub
sbbl
sub
xor
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
imul
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
or
mov
sbb
mov
add
mov
movl
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
add
adcl
and
mov
neg
mov
mov
lea
mov
mov
mov
and
mov
mov
movl
sub
add
mov
subl
mov
xor
add
movl
jne
movl
jmp
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
adc
xor
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
mov
subl
mov
xor
xor
orl
sub
sub
andl
xor
mov
mov
mov
mov
jmp
and
mov
mov
subl
xor
adcl
xor
addl
sub
notl
sub
xor
mov
sbb
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
push
and
mov
jnp
cmp
pop
pop
jp
push
jge
adc
mov
movsl
fidivrs
mov
push
sbb
inc
cltd
xchg
stc
cld
add
dec
out
pop
movsb
popa
cmp
inc
or
mov
inc
addr16
out
bound
pusha
pop
adc
incb
push
lret
cmp
jge
insb
xor
push
mov
outsl
scas
mov
pop
mov
mov
and
movsb
sub
ret
cwtl
call
add
test
popf
nop
adc
jp
pop
xor
jns,pt
mov
es
xchg
js
or
sub
add
jno
bound
in
ss
push
jo
ss
lds
xor
add
add
sbb
jns
pushf
negb
pop
cmp
pop
adc
mov
sbb
insb
cmpsl
pushf
pop
xor
xor
cmpsl
xchg
fsubl
lret
dec
nop
pop
sbb
mov
popa
scas
sbb
mov
test
inc
mov
cmc
mov
insl
fdiv
lret
cli
pop
dec
mov
outsl
fnstcw
test
xor
fisttpll
mov
shrb
gs
inc
mov
lret
testb
orl
jp
mov
imul
rolb
sahf
mov
lret
scas
and
xchg
cmp
adc
pop
jbe
mov
idivb
ja
mov
pop
push
lcall
fsubrl
test
pop
dec
push
mov
sbb
fsts
jle
rclb
xchg
fadds
cs
fstpl
andl
mov
pop
in
das
repz
into
popf
shl
and
ds
je
add
cld
mov
in
cli
in
fucompp
jns
std
jmp
lret
cmp
pop
pop
stc
and
movsl
shrl
pop
ja
ret
xchg
fs
jp
add
sbb
insb
jecxz
cltd
dec
push
hlt
push
mov
clc
int3
add
pop
mov
cltd
loop
int3
inc
pop
repz
mov
cwtl
lods
adc
xchg
inc
mov
mov
lods
xor
mov
scas
sbb
enter
and
dec
inc
aad
sub
xchg
sub
jne
loopne
test
mov
xorb
icebp
aaa
and
clc
jns
scas
mov
or
add
xchg
iret
xor
cwtl
xor
jge
mov
pop
inc
inc
xchg
sub
cmp
sahf
cmpb
xchg
inc
scas
repz
cmp
jo
jmp
ss
andl
inc
out
add
or
xor
xor
pop
jnp
mov
dec
shll
add
mov
ja
fisubs
fsubl
push
push
jae
adc
add
insl
iret
or
ljmp
lods
movsb
shl
les
cwtl
test
mov
call
cld
adc
push
aaa
cld
js
xchg
loop
push
rcrb
mov
xor
outsb
or
and
sbb
data16
add
pop
push
addr16
mov
aad
jp
gs
inc
dec
fs
incl
ja
ret
fsubs
cmpsl
or
neg
leave
imul
movsb
mov
jge
push
sub
pop
jo
inc
and
add
push
or
out
push
cltd
in
data16
movsb
std
cmp
adc
push
push
sti
out
ds
jmp
and
xchg
sbb
movsb
jns
mov
or
adc
clc
daa
mov
add
pushf
mov
fistpll
decb
mov
pop
notb
and
xor
mov
in
pop
outsl
push
leave
in
cmp
movsb
out
rcrl
rcrl
push
iret
push
fidivl
mov
and
pop
jb
jnp
xchg
shrl
sub
push
mov
xlat
cli
imul
iret
cmp
mov
lahf
addb
or
dec
pop
imul
and
jne
pop
jge
jo
mov
mov
imul
daa
or
arpl
mov
scas
mov
inc
xchg
addr16
dec
lea
jle
xor
cmpsb
repz
push
jmp
leave
js
push
sub
mov
out
sbb
sbb
rorl
ss
sub
adc
hlt
jmp
or
push
mov
idivb
xor
mov
pop
inc
xchg
xor
mov
lods
push
leave
scas
stos
jl
xchg
jge
jge
jle
add
clc
arpl
jns
xchg
pop
adc
pusha
dec
and
xchg
test
mov
and
aad
pop
dec
inc
lret
sbb
mov
mov
dec
loop
idivl
sti
rolb
jge
int
jns
mov
xor
xchg
inc
fimuls
arpl
fcmovnu
fdivrl
xchg
sbb
push
cmp
imul
daa
sbb
add
fs
push
lret
cmp
fimull
enter
pop
int3
dec
inc
orl
add
hlt
pop
sub
pop
jle
cld
jnp
aad
sbb
clc
or
ret
and
pop
out
cmp
mov
addr16
aam
aam
les
mov
pop
and
cs
loopne
dec
jno
pop
push
into
or
mov
stos
lods
cmpsl
mov
lock
outsl
iret
cmp
mov
int3
aas
sbb
test
pop
lahf
cmp
fdivp
sbb
fdivs
xor
xchg
jmp
das
lret
adc
pusha
inc
dec
push
pop
jbe
dec
mov
jno
dec
pop
dec
jecxz
test
jg
ds
jle
inc
aam
negb
lods
imul
fdiv
cmp
insl
or
xchg
call
aad
lret
push
and
push
inc
xchg
cmp
and
movsl
xor
push
lds
fsubl
in
inc
or
stos
mov
mov
inc
je
arpl
jno
push
mov
and
loop
sbb
xor
imul
enter
cmp
mov
mov
push
add
arpl
jno
inc
ljmp
es
xchg
cltd
lods
enter
and
fisttps
out
mov
lret
clc
je
arpl
push
inc
xor
xchg
inc
pusha
insb
scas
xchg
adc
rcrl
scas
shlb
scas
lret
push
push
loope
cmp
rcrb
cltd
iret
sub
inc
test
cmp
pop
or
push
xor
lret
push
icebp
jae
loopne
mov
sbb
or
int3
dec
in
adcl
out
lds
flds
sarb
push
jne
xchg
xchg
shrl
pop
fstpt
sbb
mov
test
leave
fcomp
xchg
test
dec
adc
dec
mov
jns
arpl
idivb
fiadds
repz
xor
js
fs
sbb
inc
xor
sti
movsb
inc
cmp
sbb
test
int
sbb
sbb
push
fsts
stos
sbb
sub
push
sub
shlb
adc
in
fistpll
add
push
rclb
jge
loop
add
imul
pop
dec
jmp
jo
aam
enter
in
xchg
gs
pop
fstp
mulps
add
cld
daa
mov
cmc
pop
loop
inc
les
dec
sub
cmp
mov
xchg
js
add
enter
rcll
sub
mov
dec
repz
std
sub
clc
and
out
les
jmp
inc
test
mov
xchg
add
testb
fsts
sub
into
adc
jg
data16
ss
mov
or
fistpl
xor
out
pop
cltd
cmp
jno
mov
and
jp
mov
cmp
pop
shlb
add
xchg
push
bound
push
and
cmp
popw
mov
dec
addl
sub
outsb
adc
call
shlb
mov
dec
lods
out
pop
jne
sub
arpl
xor
nop
jg
outsb
inc
outsb
aaa
lods
inc
xchg
mov
sarb
adc
lods
ficoml
fs
fwait
mov
inc
jno
xchg
xlat
ss
sahf
jmp
and
and
mov
and
gs
mov
push
int3
pop
ja
and
and
sub
cmp
push
mov
add
inc
jbe
push
jmp
lahf
in
mov
pop
sti
sbb
sbb
mov
xchg
test
mov
and
push
test
fimull
bound
icebp
jecxz
aas
les
fsubrs
daa
xor
lods
or
push
jne
pop
ss
pop
add
decl
adc
cmp
popa
scas
pop
cmp
ret
mov
push
lahf
mov
xchg
push
xchg
jecxz
mov
sbb
jg
jl
xchg
lods
cmp
mov
xchg
sub
xchg
sbb
jg
fsubr
movhps
jp
mov
xchg
in
mov
es
cld
and
push
xchg
inc
cmpsb
dec
mov
movsl
add
movsl
jmp
sarb
mov
push
aam
imul
dec
dec
nop
sar
and
ret
call
dec
cmp
xorl
loope
xchg
lret
inc
adc
adc
pop
cmp
pop
jae
lea
fstpt
xlat
pop
fdivrs
insl
inc
int
js
sbb
aaa
in
cld
and
cmp
movsb
dec
jp
pop
adc
sub
test
aam
bound
ret
jl
shlb
fistps
jmp
repnz
mov
pop
cmpsl
clc
xchg
in
in
movsbl
shlb
mov
int3
sbb
inc
xor
clc
sbb
repz
pop
and
push
out
inc
or
mov
cmpsl
cmpsb
int3
jo
sbb
cltd
pop
addr16
cld
icebp
sub
jns
mov
ret
hlt
gs
xchg
mov
mov
pop
sub
pushw
testl
ret
push
lds
icebp
pop
int3
fdivl
and
push
ljmp
dec
outsl
push
dec
lods
scas
insb
pop
xchg
add
mov
mov
pop
bound
push
sbb
jns
pop
cmp
xchg
xor
es
hlt
int
lea
and
out
sub
pop
cmp
dec
add
or
mov
cmp
xchg
inc
loope
jmp
bound
mov
in
xchg
fldl
cmpl
nop
jae
jnp
dec
cmp
shrb
fwait
cmp
add
fnstenv
pop
pop
mov
adc
push
inc
inc
imul
cmc
rolb
insl
popf
cwtl
loop
rcrl
lcall
jp
xchg
xor
cmp
loope
cmc
rsqrtps
popa
add
ficompl
stc
sub
outsl
mov
shrl
cmp
sbb
mov
mov
xchg
mov
imull
call
adc
andb
popa
push
fdivrl
js
push
or
pop
dec
mov
push
cs
fcmovnu
lods
cmp
jbe
push
inc
sbb
stc
inc
popf
mov
or
dec
or
ja
mov
sbb
ljmp
gs
mov
outsb
pop
mov
inc
pop
into
fs
lea
shl
lea
xorb
mov
and
in
mov
addr16
sub
mov
sbbb
shr
jmp
or
loop
ds
test
xor
in
xchg
lret
push
les
jbe
inc
push
mov
jo
xchg
and
mov
ds
lahf
cld
mov
ss
xorl
jmp
repnz
cltd
mulps
shrl
sub
sbb
cld
dec
lcall
test
xchg
icebp
cmpsl
pop
imul
clc
sub
push
mov
and
sti
in
mov
sub
test
sbb
adc
cmc
and
fistpl
inc
cmp
jnp
sbb
push
xchg
into
inc
sbb
incl
inc
out
les
int
dec
mov
fcmovnbe
cmpsb
xchg
mov
jge
repnz
add
popa
mov
jbe
arpl
dec
out
jl
cs
leave
sarb
dec
sbb
int
or
jecxz
andl
pop
sbb
push
jmp
and
push
test
lcall
cmp
hlt
out
dec
jge
xchg
addr16
imul
in
fcoms
mov
movsl
out
push
mov
fdivrs
or
lods
mov
sub
sar
push
push
insl
mov
jae
mov
addr16
fsubrs
adc
xchg
stos
jmp
in
ret
sbb
mov
xor
out
push
les
push
jge
popf
ret
dec
into
xchg
cmpsb
jl
lret
icebp
mov
std
mov
mov
pop
fdivrs
or
cmp
icebp
push
fwait
lds
test
xchg
rcr
dec
movsb
fidivrs
mov
dec
mov
or
adc
jmp
in
xchg
mov
lods
or
cli
hlt
mov
and
rcll
mov
adc
fcmovnu
jae
mov
out
fstpl
iret
scas
int3
dec
xor
push
or
aam
jmp
and
insl
xor
lods
mov
push
or
lds
cmpsl
sub
pop
call
sahf
inc
jb
and
fsubrl
lahf
pusha
push
arpl
xchg
jle
jnp
sub
shrb
cwtl
fisubrl
bound
sbb
popa
xchg
insb
push
dec
push
scas
cmp
push
subb
lcall
mov
push
call
push
call
lret
inc
cs
ljmp
imul
lock
mov
fldl
ss
arpl
in
xchg
arpl
jb
mov
xor
js
shlb
shlb
adc
jle
pusha
call
insl
or
mov
popf
sub
mov
sar
pop
mov
dec
insb
inc
gs
loope
cmp
popa
js
jge
jecxz
data16
mov
je
adc
mov
test
push
mov
popf
cs
imul
pop
jl
mov
add
dec
testb
or
adc
scas
loope
inc
dec
fs
loope
pop
push
mov
xchg
mov
jecxz
js
cmp
mov
dec
mov
faddl
sub
call
push
popf
mov
aad
add
sbb
cmp
jo
das
xchg
lret
mov
repz
fsubl
xchg
loopne
cmpxchg
jnp
jo
sbb
into
xor
pushf
pushf
lret
pushf
dec
jge
popa
xchg
cmp
lgdtl
into
xchg
adc
leave
xor
push
mov
xor
sub
xlat
push
cmc
aas
lret
insl
mov
sahf
dec
movsl
sbb
dec
in
mov
aaa
adc
jmp
insl
jmp
jle
lods
or
scas
int
dec
add
les
pop
add
and
push
loop
addr16
out
lcall
stos
mov
mov
sbb
adc
test
lds
call
imul
jp
xor
pop
dec
ja
insb
pop
cmpsl
mov
stos
jo
pop
lock
movsl
cmp
xor
sub
stos
sbb
in
xor
lret
push
shrb
test
push
mov
mov
add
mov
testb
leave
ljmp
pusha
loope
mov
ds
adc
imul
mov
push
lcall
cli
jne
xlat
xchg
dec
adc
mulb
inc
stc
jmp
xor
push
xchg
cli
pop
xorb
jg
test
xchg
sbb
lret
test
pushf
in
xchg
mov
insl
das
fnstenv
stos
in
pop
dec
shr
loope
loop
jp
hlt
xchg
out
idivb
aaa
repz
mov
xlat
xor
cmpsl
ret
pop
xchg
push
mov
shll
dec
fimull
jnp
or
cmp
sub
sti
pop
mov
sub
movsb
adc
test
adc
jle
inc
shrl
pop
fsubrl
insl
mov
lock
xchg
inc
dec
nop
or
cld
add
out
push
pop
push
dec
mov
pusha
push
add
or
sub
cmp
pop
mov
xlat
add
pop
jle
push
push
out
call
adc
test
aad
test
aas
inc
stos
mov
push
mov
and
shll
call
mov
jecxz
loope
ficoms
xor
test
mov
mov
loop
ss
fs
cmp
push
mov
mov
data16
out
cltd
sbb
repz
mov
xchg
and
jae
jno
add
mov
pop
stc
loop
fucom
and
ja
inc
pop
jg
repnz
inc
test
mov
push
test
rclb
pop
loopne
mov
daa
jne
pop
pop
dec
cmp
xlat
fsts
pop
mov
outsb
flds
stos
mov
jl
adc
in
movsb
out
mov
out
push
ja
adc
or
push
mov
pop
inc
test
cmp
test
sbb
mov
pop
add
cmp
movq
xchg
mov
in
outsl
sahf
mov
mov
xchg
imul
push
insl
pop
adc
rcrb
adc
ret
mov
push
sub
cmpsb
test
stos
jno
int
movsl
jg
cmp
leave
add
mov
pop
pop
cmp
inc
and
pop
nop
and
mov
mov
jbe
fcmovnu
dec
jge
xor
ja
push
fistpll
pushf
cmp
stc
rolb
out
xchg
mov
sbb
andb
add
int
jge
aas
xchg
adc
push
imul
adc
add
inc
in
sub
jae
mov
jb
cld
fcomip
out
and
and
jns
sti
xchg
fwait
ret
or
jbe
sbb
pextrw
push
inc
nop
ror
xor
out
rol
jmp
test
sub
dec
inc
jae
xchg
mov
pop
jno
fdivrp
cltd
xor
sarb
out
push
inc
pop
fists
pushf
add
fwait
sbb
fildl
push
sbb
sbb
sub
xlat
scas
mov
push
nop
lds
fisubl
push
inc
sbb
addl
inc
adc
orb
imul
sbbl
and
sti
pushf
inc
xorb
leave
in
mov
sub
fwait
rolb
ljmp
inc
mov
xor
out
dec
mov
sub
jl
scas
jnp
xor
cmp
mov
pop
jbe
xchg
fidivrl
inc
adcl
andl
mov
pop
add
loop
shlb
adc
mov
stos
lahf
arpl
cmp
ss
lods
lock
insb
mov
dec
xor
mov
mov
mov
dec
into
jmp
pop
cmc
outsl
fnstsw
push
aad
ss
outsb
cmpsl
xor
dec
push
stos
faddl
dec
aad
xchg
fdivrs
gs
push
pop
je
push
sub
pop
mov
lods
pop
lods
mov
stos
insb
add
data16
insl
es
scas
cmp
sub
push
cmpb
mov
xor
pop
mov
push
jbe
or
rcrb
pusha
lods
xor
out
xchg
lods
mov
in
xchg
push
mov
or
push
jp
pop
ss
add
idivb
pop
inc
jns
mov
bound
pop
push
mov
mov
add
ret
mov
daa
mov
ds
ja
xchg
movsb
inc
insb
popf
subps
leave
icebp
mov
loopne
or
ja
inc
jg
and
pop
sbb
inc
dec
daa
mov
cmc
sbb
cmpsl
mov
bound
out
and
push
pop
lds
pop
inc
pusha
andl
sbb
out
mov
sub
icebp
push
dec
push
inc
inc
mov
int3
pusha
sub
xor
adc
lret
dec
cld
cmc
call
sbb
cmp
ds
xchg
jle
addr16
leave
or
aaa
nop
data16
push
fidivs
je
mov
and
out
in
push
sbb
inc
movsb
pop
jnp
xchg
inc
cwtl
push
mov
adc
push
xchg
push
adc
xor
cs
sarl
cmp
cmpsl
mov
icebp
xchg
and
scas
pop
sub
inc
add
imulb
enter
call
push
mov
notl
fmull
inc
xchg
pop
mov
and
mov
xor
cmp
ror
or
dec
or
jle
xchg
gs
xor
ret
jg
int3
js
dec
adc
hlt
lret
aad
xchg
je
push
jl
cltd
jle
aad
dec
aam
jne
call
mov
fistpl
pushf
repnz
sti
leave
jbe
rcrb
into
outsb
imul
mov
mov
std
jge
jmp
inc
and
sub
jae
mov
scas
dec
rolb
jo
push
sbb
int3
pushf
cmp
movsl
or
loopne
out
scas
jle
filds
cltd
add
or
roll
mov
vpxor
mov
movsl
movsl
xlat
roll
mov
hlt
out
ds
sbb
sbb
fistpl
ja
scas
lods
aas
inc
stos
addb
or
mov
shll
add
push
mov
sbb
jl
adc
arpl
repz
mov
or
jp
and
adc
jge
stc
enter
fmull
cs
jae
in
loop
pop
xor
fistpll
test
out
adc
cs
pop
push
mov
popa
mov
xchg
addr16
push
lods
mov
sub
mov
adc
enter
cmp
sbb
cs
push
mov
divl
dec
pslld
mov
mov
cltd
jg
shlb
out
int
mov
dec
inc
pusha
cmp
imul
stos
out
outsl
hlt
dec
cmp
into
and
mov
mov
sbb
mov
mov
mov
in
mov
testb
imul
jl
xchg
test
pop
pop
out
ljmp
jbe
lods
testb
hlt
addr16
xchg
push
fsubrs
cs
es
fldenv
js
mov
or
inc
ror
dec
cld
rorb
inc
lods
adc
rolb
ret
outsb
arpl
push
cmpsb
mov
adc
addr16
add
sti
adcl
movsl
adc
xchg
sub
or
cmpsb
jb
and
ror
sbb
scas
dec
mov
mov
cmpsb
pop
or
or
sub
inc
cmp
shrb
in
mov
push
repz
in
outsl
xchg
or
aad
inc
inc
mov
push
inc
ret
and
add
pushf
cmp
jo
stc
mov
add
inc
mov
mov
mov
lds
pop
pop
sbb
xor
or
sbb
shll
adc
inc
aam
jnp
sti
fcmovnu
push
dec
mov
fstpl
mov
sbb
scas
mov
inc
adc
sub
jmp
sbb
push
iret
inc
mov
mov
fs
mov
addr16
movsl
xchg
rcrb
mov
test
mov
mov
mov
xlat
out
shlb
mov
xorb
rolb
mov
adc
xor
cli
jb
loop
mov
movsl
or
adc
jmp
or
rcl
andb
scas
xor
and
shlb
or
xlat
jno
int3
push
inc
push
aaa
add
pusha
adc
cwtl
mov
add
dec
outsl
inc
cmovbe
and
inc
out
in
mov
dec
popa
push
pop
inc
xchg
dec
cmp
jmp
shlb
jnp
fldt
out
jne
jg
in
or
gs
xor
lcall
mov
cmp
cmp
fmull
popa
xor
mov
mov
xchg
mov
mov
or
adcl
enter
pop
pop
mov
sbb
mov
cld
jae
test
xchg
pop
add
cwtl
out
xchg
mov
stos
add
lods
and
add
sub
fistps
fnstenv
fidivrl
fwait
scas
add
stc
fisubl
add
adc
vcvtsd2ss
notb
adc
dec
popf
mov
cld
and
inc
ss
les
or
lock
cli
or
mov
sub
fstl
dec
sbb
arpl
dec
movsbl
or
ret
cwtl
fdivl
out
mov
pop
mov
cwtl
mov
or
cmp
int
add
in
stc
inc
push
test
jb
lea
dec
rcrl
cmp
dec
dec
mov
jmp
mov
shll
sub
jl
cwtl
mov
adc
push
sbb
or
mov
loope
cwtl
fisubs
adc
or
mov
pop
sbb
outsb
adc
icebp
pop
cwtl
push
jg
mov
xor
mov
jmp
cmp
add
out
cmp
mov
lret
lods
mov
mov
cmp
dec
stc
ja
inc
notl
jae
imul
cmp
out
xchg
inc
jecxz
dec
mov
outsl
mov
sub
out
sahf
lcall
adc
push
mov
mov
pop
pop
call
sub
fidivs
mov
xchg
push
xor
mov
push
mov
testb
aaa
ret
mov
and
movsb
cs
add
ret
pop
mov
mov
jg
subl
add
jns
popf
push
xor
jecxz
push
daa
int
jo
or
flds
loop
sub
movsb
icebp
fsubl
dec
add
push
outsb
jecxz
shl
repnz
fnstcw
or
iret
out
add
add
cld
dec
stos
in
sub
add
jbe
sub
jns
push
dec
jmp
mov
jg
xchg
pop
mov
pop
je
push
stos
add
push
mov
mov
inc
sbb
add
mov
cmpsl
sbb
mov
loop
lds
mov
mull
push
hlt
in
adc
std
push
dec
shll
es
cmp
adc
xchg
sbbl
pop
shlb
dec
in
test
test
and
mov
lea
clc
sbb
in
mov
xlat
jne
xchg
out
mov
loope
iret
inc
bnd
and
aas
inc
cmp
mov
sbb
and
inc
call
adc
jbe
and
mov
notb
ficoms
popa
xchg
pop
cs
fnstenv
or
mov
data16
mov
sbb
push
xchg
leave
stc
out
fisttpl
jbe
lea
leave
cmpsl
dec
bound
mov
mov
mov
mov
jb
and
mov
xorb
fsubrl
jle
js
sub
test
cs
ja
dec
lock
mov
pop
or
in
pop
test
sbb
outsb
movsb
outsb
punpcklwd
mov
iret
addr16
push
aaa
lret
inc
iret
adc
push
mov
xchg
aad
pushf
mov
test
ss
pop
sbb
stos
cmp
xchg
popa
pop
cmp
roll
mov
adc
dec
sbb
orb
or
idivb
popa
pushf
or
es
sub
movsl
nop
inc
ror
add
mov
mov
orb
or
mov
jecxz
sti
cld
xchg
pop
xor
dec
adc
sti
xchg
cmp
repz
test
cmp
jmp
push
adc
xor
sbb
xchg
cmp
mov
int3
jne
aaa
add
sub
xchg
adc
mov
lcall
mov
cld
cmp
andl
sahf
roll
or
add
and
push
testl
jecxz
jns
aam
sarb
lret
int
push
lods
popa
rolb
dec
jbe
or
sbb
push
in
and
lds
jle
out
xor
fldenv
leave
mov
cmpsl
xchg
mov
xor
fcoms
mov
mov
lds
insl
inc
repz
or
sbbb
nop
cmp
aaa
out
scas
aad
sbb
scas
mov
lcall
mov
or
jne
jp
lds
adc
add
inc
push
imul
movsl
cld
mov
sahf
popf
cmp
push
addr16
and
xor
bound
aas
mov
clc
arpl
testl
adcb
fistpll
and
in
loopne
aam
ljmp
push
ds
sub
jp
je
and
sub
int
cmp
lods
inc
aas
mov
jg
add
mov
call
rol
cmp
cli
pushf
sbb
pusha
adc
or
add
mov
cli
cmp
push
inc
sti
mov
loope
in
adc
push
cwtl
push
lret
je
test
jnp
daa
push
cli
adc
adc
cwtl
push
mov
add
out
and
sbb
rclb
or
mov
es
lods
or
test
out
dec
loope
ds
jo
cmp
test
loope
dec
test
jno
adc
push
pushl
in
jbe
fwait
mov
xor
sbb
lock
adc
pop
inc
cmp
int3
loope
in
add
push
fs
cmpsb
cmpsb
xchg
ds
roll
test
gs
dec
call
into
mov
adc
add
jle
xchg
jmp
pop
mov
jb
sub
mov
stos
mov
xor
xchg
jns
or
inc
movsl
and
and
mov
nop
mov
nop
cltd
inc
xchg
js
sub
nop
adc
cmc
mov
lods
xor
sub
imul
popa
sub
mov
cmp
sub
mov
out
inc
cmp
sarb
fsubrs
enter
jg
cmp
and
fldl
xor
scas
ret
aam
jnp
inc
inc
aad
loope
ror
and
les
mov
es
jb
aam
std
xchg
inc
gs
loop
mov
std
dec
adcl
push
jge
inc
jno
jnp
fisttpll
xchg
popf
cmpsb
sahf
cld
int
cmp
adc
jo
ds
les
mov
pop
xor
aad
dec
fisubl
in
inc
insb
icebp
xor
add
sti
pop
outsb
pop
inc
rcll
add
mov
cmc
jmp
push
adc
xor
loop
insl
icebp
mov
adc
insl
repnz
xor
data16
sub
std
mov
mov
test
jns
push
inc
push
out
shlb
sub
jmp
jno
dec
sar
sub
mov
or
les
cmpsl
gs
mov
push
insl
sub
xchg
popa
adc
sbb
fs
fildl
dec
mov
scas
dec
fstpl
and
jge
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
jmp
aam
sbb
test
adc
cmc
fistpll
jns
pop
pop
jp
inc
add
es
xchg
inc
out
hlt
clc
push
xchg
ljmp
shl
adc
jnp
adc
stos
xchg
push
scas
ljmp
add
std
push
fsubrl
sub
out
adc
mov
iret
sub
enter
sub
jp
in
fcmovb
cmpsl
test
sbb
aaa
jnp
aas
add
sbb
leave
cmp
push
and
ret
xlat
int
mov
fstpl
cmp
pop
vmovupd
imul
outsl
add
lret
data16
rep
out
add
adc
push
aad
mov
or
insl
dec
mov
push
mov
xchg
xchg
into
int3
mov
stos
out
push
fmull
out
cltd
xchg
rclb
cmp
testb
cmp
out
rol
repz
push
mov
insl
call
and
shrl
sbbl
mov
out
and
xchg
es
and
shlb
xchg
xor
xor
mov
pop
or
mov
aaa
je
lret
pop
stos
dec
shll
mov
mov
call
sbb
xchg
js
mov
pop
mov
sub
sti
fisttpll
or
mov
pop
push
scas
out
cmp
inc
jp
sub
lahf
in
push
test
rclb
lea
push
push
mov
sbb
int3
cli
mov
cmp
mov
xchg
daa
mov
mov
push
inc
in
cmp
dec
inc
daa
add
sub
inc
xchg
add
sbb
jbe
test
movsl
adc
arpl
fisttpl
lods
arpl
data16
les
lods
lods
dec
sub
out
shl
jecxz
adc
nop
jns
cmpb
fwait
out
sbb
jp
cmp
stos
ret
and
jbe
lret
sub
cmpsb
insl
rcrl
push
insl
sti
push
jae
pop
inc
and
cmp
xchg
mov
push
dec
fstps
outsl
cmp
mov
and
sub
push
jecxz
cmc
mov
ds
inc
sti
push
sbb
ds
idivl
cld
rcll
cld
xchg
jae
mov
cwtd
popf
sbb
lods
movsb
into
jnp
jl
jo
and
jl
push
fs
outsb
push
cmp
dec
push
pop
push
and
imul
cmpl
cmpsb
inc
sbb
call
mov
outsl
jmp
push
out
xor
popa
mov
leave
mov
popf
outsl
ljmp
into
loopne
test
mov
push
dec
movsl
cmpl
sbb
dec
dec
dec
call
push
lcall
add
adc
aam
lock
movsb
cmp
ja
stos
lock
inc
jo
jno
dec
dec
pop
sbb
repz
jns
xchg
shlb
ret
mov
in
loopne
jns
cltd
mov
aad
xor
test
push
ss
push
and
jp
pop
mov
adc
pushf
es
cmp
les
cmp
mov
mov
and
and
xchg
dec
pop
xor
mov
jg
aaa
dec
aad
or
cmp
and
mov
inc
jmp
fstpl
mov
jne
clc
mov
ror
push
mov
mov
inc
hlt
mov
sbbl
cmp
mov
cmpsl
mov
adc
or
fcomps
cli
mov
js
xchg
mov
or
test
enter
xor
inc
sti
xor
fildl
mov
repnz
fwait
xchg
xor
jle
push
push
int3
push
pop
mov
and
or
and
roll
push
orb
in
pushf
push
testl
loopne
push
ffree
cmp
cld
andb
fnstenv
inc
outsl
push
in
mov
call
lods
and
movsb
dec
lods
out
pop
sub
jae
dec
mov
or
pusha
stc
xor
or
in
fsubrs
cmp
and
outsb
adc
lahf
incl
ljmp
jb
nop
insl
xor
xor
ja
jmp
adc
sti
adc
scas
mov
cwtl
addl
mov
push
popf
jae
sti
scas
mov
xchg
jmp
fsub
jb
pushf
lea
pop
sub
and
hlt
cld
lahf
insl
inc
loopne
call
push
inc
testl
test
frstor
aam
subl
out
pop
scas
out
sbb
data16
insb
pop
shlb
loopne
loop
mov
jne
stc
jecxz
jle
mov
inc
loop,pt
orl
das
pop
add
and
dec
pop
add
adc
jo
or
pop
dec
nop
adc
jnp
dec
test
sti
stos
aaa
or
pop
pushf
push
fs
je
and
mov
jbe
orb
add
or
pusha
sbb
or
push
cmc
dec
mov
lock
leave
fcoms
sbb
mov
xchg
sbb
or
inc
xor
pop
dec
lods
dec
mov
mov
cmp
gs
bound
sub
mov
jmp
xchg
dec
nop
int3
sub
inc
push
or
les
pusha
ss
test
daa
testb
pushf
xor
fs
shufps
mov
cs
popl
shrb
sub
je
imul
lods
pop
sbb
mov
and
cmp
jns
lods
pusha
repnz
sub
or
pushl
inc
xor
pop
push
mov
push
push
xchg
mov
addr16
cmp
fs
xorl
mov
inc
xchg
or
and
sbb
pop
mov
aad
outsl
clc
xchg
and
stc
lahf
ss
mov
shll
jecxz
cmp
inc
xchg
jnp
test
ss
jg
adc
xor
hlt
push
jne,pt
stos
data16
sub
pop
sahf
xchg
inc
and
cmp
scas
jmp
stc
add
out
int3
clc
pop
cmp
mov
gs
lds
mov
mov
nop
lods
and
pop
loope
dec
mov
jns
test
or
mov
mov
daa
mov
lds
or
iret
lock
push
daa
and
xor
push
cmp
repz
movsb
mov
add
jecxz
outsl
shll
stos
mov
std
stos
ret
add
dec
stos
push
push
jecxz
mov
fimull
mov
sub
sub
dec
test
or
inc
mov
jmp
arpl
pop
push
jns
mov
mov
push
cmpsb
mov
daa
and
jle
mov
push
shl
adc
out
push
ss
negl
jae
mov
add
out
or
stc
pop
imul
adc
stos
out
pop
jl
mov
push
adc
push
leave
test
adc
insb
jo
fs
push
and
push
sbb
sbb
into
sti
inc
mov
idivl
mov
xor
mov
adc
or
daa
fmul
scas
add
ja
lods
setne
aam
jle
cmpsb
pop
jno
lea
test
cmpsl
cmp
pop
or
addr16
rcrl
aad
js
out
ret
push
lods
lods
mov
lock
xor
pop
push
jl
mov
ja
sbb
inc
ja
mov
xor
pop
rolb
insl
arpl
ja
mov
inc
mov
push
xor
sbb
adc
mov
add
das
lock
push
mov
adc
lcall
or
push
sub
lcall
cltd
jno
pop
clc
adc
subl
mov
movsb
sbb
sahf
rcrb
clc
mov
add
imul
inc
inc
fcoml
je
inc
xchg
cli
cmp
std
adc
add
cmpsl
rcrl
ror
ficoms
mov
or
ret
dec
mov
loop
jns
cmp
mov
cwtl
in
sarb
cmp
jne
std
xchg
push
inc
xchg
aaa
fs
into
cmp
inc
dec
adc
inc
out
das
enter
movsb
xor
mov
jno
addr16
pusha
inc
addr16
pop
fisubrl
add
fcompl
pusha
jae
cmp
aad
icebp
out
aam
inc
cwtl
inc
rcrb
jbe
nop
mov
adcl
jge
dec
faddp
xor
fdivrs
or
dec
and
insl
loopne
xchg
push
out
movsl
out
ret
enter
cmp
sub
and
movsb
mov
fldt
jnp
mov
rolb
sbb
and
push
popf
mov
sti
orl
xchg
leave
psrlw
jp
jbe
movsl
pop
mull
pop
and
pand
push
out
pop
and
gs
icebp
sbb
repnz
lock
and
mov
xchg
imul
in
or
xor
jae
add
sarl
outsb
mov
fisubl
les
push
mov
test
stc
lock
pop
push
fucom
push
dec
or
push
imul
xor
mov
andb
mov
iret
pop
xchg
stc
mov
aaa
mov
xchg
loop
lods
es
lahf
mov
lds
inc
fadd
outsb
push
pop
hlt
pop
ret
popf
decb
sar
cmc
adc
ljmp
xchg
rcrb
dec
out
mov
inc
std
cmp
int3
dec
lcall
adc
sbb
loop
mov
dec
mov
sbb
push
int
dec
dec
sahf
mov
clc
push
mov
mov
stos
ret
pop
movsb
dec
rcrb
aas
movsl
ret
push
or
arpl
mov
ret
dec
push
shll
push
movsb
ret
xor
xor
adc
pop
jno
movsb
push
movl
jns
mov
in
imul
inc
in
inc
push
fucomip
addl
mov
popa
shll
xor
imul
stos
out
pop
push
das
sbb
stos
outsl
mov
test
insl
adc
fsubrs
out
in
push
test
xchg
imul
inc
jb
cmpsl
and
xor
pushf
movsb
and
mov
inc
jge
es
adc
mov
arpl
negb
add
mov
into
or
and
loopne
and
movsb
xchg
in
gs
scas
pushf
jl
into
sbb
dec
mov
pop
and
shlb
cmp
les
xchg
test
lea
mov
dec
bound
loopne
fbld
xor
add
je
loopne
mov
jmp
or
pop
inc
mov
leave
insb
mov
xor
xchg
data16
adc
mov
hlt
arpl
push
loop
mov
sti
aaa
push
enter
inc
cltd
mov
lahf
dec
mov
int3
sbb
mov
mov
jle
out
or
fsin
mov
daa
push
filds
xlat
test
jno
jns
dec
addr16
sbb
aaa
lahf
les
clc
leave
into
push
int3
pop
xchg
mov
aas
or
sub
les
imul
je
rep
cmpsb
mov
jae
daa
aam
mov
jns
xor
and
adc
jge
push
adc
mov
mov
insl
xchg
pop
pop
ds
daa
mov
into
add
dec
fiaddl
xchg
sbb
fimuls
jnp
xor
mov
cld
rcrl
test
cmp
jg
xlat
sub
or
dec
pushf
repnz
and
loope
xor
ljmp
mov
enter
mov
adc
mov
pop
addr16
ficompl
subb
fs
ret
std
lods
data16
cwtl
std
jbe
mov
xlat
xchg
or
pop
fcomps
inc
and
sub
sahf
in
sbb
mov
mov
leave
mov
out
pop
adc
inc
imul
cmpb
xchg
jnp
add
inc
xchg
je
push
push
cli
push
outsb
call
lds
sahf
orl
test
add
xor
cmp
push
negb
test
sub
sbb
daa
insb
pop
repnz
popf
icebp
stos
test
inc
fistps
gs
dec
mov
pop
popa
dec
stos
xchg
sbb
dec
pop
aas
push
mov
outsb
jge
andl
cmp
das
ss
xor
xchg
int
mov
sahf
fs
cmp
jl
fildll
fcmovnbe
or
or
sub
lods
jo
xchg
jnp
movsl
jl
aaa
xchg
jle
loop
jns
cld
std
jge
call
insl
mov
fsin
cmpsl
sbb
add
fisttpl
push
or
or
or
cmp
mov
outsb
push
ds
inc
lret
jge
stc
mov
inc
out
push
mov
call
cld
scas
pop
dec
dec
loop
std
fbstp
add
sub
int3
inc
xchg
aaa
xchg
pop
mov
dec
pushf
push
mov
xor
inc
adc
or
cwtl
push
dec
push
fldt
sub
out
int
cli
or
mov
xor
pusha
xor
inc
mov
dec
jp
mov
lock
pop
rolb
mov
jge
lret
mov
stos
fs
out
mov
cmp
mov
sub
adc
mov
pop
mov
or
push
jmp
dec
dec
add
test
pop
imul
arpl
xor
sub
sub
xor
imul
sbb
mov
push
jbe
cmpsb
insl
mov
and
xor
scas
loopne
push
push
popa
or
adc
out
lcall
mov
pop
jno
mov
inc
std
inc
mov
fstpt
push
sub
xor
jnp
aaa
outsl
pop
add
push
ret
push
mov
cwtl
fisttpll
add
pop
insl
mov
or
cmc
inc
xchg
stc
pop
add
sbb
jne
mov
lret
jle
mov
dec
mov
icebp
aas
insl
lock
out
sbb
ret
xchg
jno
sub
lret
mov
call
cmp
scas
insb
push
mov
lret
xchg
add
inc
jne
fcoms
sbb
mov
dec
rcrb
mov
repnz
and
xchg
addr16
adc
lea
adc
test
popa
inc
xor
popf
cli
cmp
ja
test
clc
cmp
dec
mov
dec
jb
mov
cld
inc
clc
fwait
shlb
leave
lret
mov
call
and
cmc
add
flds
test
das
aas
cmp
jmp
repz
lahf
dec
and
xor
ret
or
pop
mov
jne
xor
inc
jmp
nop
cwtl
dec
push
mov
popa
pop
jecxz
popa
inc
mov
add
mov
or
lods
mov
xchg
aaa
or
jne
adc
sub
clc
test
scas
adc
jnp
movsb
outsb
adcb
addr16
xor
ret
sub
loop
scas
fdivl
jae
inc
hlt
inc
aaa
aam
or
lret
out
cmpsb
push
xor
in
mov
mov
mov
das
int3
pop
xchg
jg
push
mov
out
fisttpl
xchg
sub
adc
decb
xchg
sahf
paddd
nop
and
cmp
ror
and
or
scas
movsb
sarb
mov
sbb
sbb
test
mov
cmp
mov
mov
into
xchg
movsb
jge
cmp
mov
push
mov
sbb
sbb
or
mov
mov
fs
outsb
push
xor
ret
mulb
sub
xchg
dec
dec
inc
adc
mov
mov
mov
leave
mov
inc
call
and
sub
insb
inc
in
andb
xchg
mov
pop
stc
mov
push
pop
clc
mov
jno
aam
dec
jmp
push
inc
shl
cmovnp
insl
pop
insb
add
pushf
xchg
mov
sbb
mov
mov
pop
leave
push
or
push
xorb
jl
mov
xchg
mov
mov
mov
repz
mov
insl
push
into
pop
adcl
add
aas
scas
sbb
hlt
mov
nop
lahf
popf
aas
shr
xchg
fisubs
and
push
pushf
mov
xchg
xlat
push
xor
les
faddp
fists
mov
in
daa
xchg
aaa
jnp
lds
or
rclb
mov
sahf
lock
add
sysret
mov
inc
cmp
pop
sub
inc
and
psubq
inc
xor
js
inc
shrl
cmp
inc
sub
and
sub
scas
fnstsw
mov
scas
xchg
nop
add
loope
mov
and
add
ror
cmpps
sub
hlt
or
dec
cmpsb
adc
dec
pop
loopne
lret
adc
xorb
je
stc
pop
mov
lea
nop
and
xchg
mov
ficompl
inc
imul
ficoml
scas
lcall
dec
mov
loop
movl
mov
lods
testb
inc
pop
ffree
mov
cmp
out
jge
subl
stc
orb
enter
pop
mov
jge
and
bound
out
mov
fs
inc
ljmp
ljmp
pop
in
leave
pop
es
std
push
push
mov
stc
hlt
fmulp
jecxz
inc
add
jbe
sub
pop
push
cmc
pop
mov
inc
adc
repz
dec
jp
popa
out
mov
in
mov
sti
mov
les
sub
fs
je
xor
test
inc
inc
outsl
insl
jecxz
xlat
cmpb
arpl
jno
mov
mov
lods
insl
xchg
fnsave
daa
lds
iret
mov
and
add
pop
ja
lahf
adc
xchg
sub
xchg
cmp
test
gs
lret
pop
mov
lret
loope
lcall
es
dec
push
iret
adc
insb
inc
pop
sbb
inc
cmp
mov
out
jno
push
repnz
mov
aad
jb
push
adc
test
andl
loope
mov
adc
adc
push
fisttpll
adc
pop
inc
std
mov
push
pop
hlt
mov
jo
popf
into
shl
arpl
sti
add
frstor
mov
lret
je
mov
subb
aam
xchg
icebp
pop
arpl
add
pop
psrlw
or
inc
jne
and
push
je
mov
cmp
popf
dec
mov
mov
jbe
fisttpl
push
sub
push
inc
test
std
negb
push
ret
xor
pop
addl
add
int3
adc
pop
enter
xor
sbb
clc
mov
scas
in
pop
mov
and
mov
mov
aaa
ret
lods
push
lds
mov
lds
lods
cmpsl
push
das
or
add
sub
fmulp
or
nop
mov
and
dec
jge
ljmp
in
cmp
aaa
sub
jmp
and
pop
and
mov
fldt
push
in
cld
jle
divb
ret
push
jbe
std
arpl
xor
ret
mov
pop
outsb
adc
inc
cmp
int3
sub
pusha
out
fsub
jge
or
mov
sub
pop
sub
sbb
les
dec
sbb
bound
loope
xchg
mov
jg
leave
and
cmp
jb
or
push
mov
pop
cmpsb
mov
rcl
incl
mov
fdiv
lahf
cltd
jo
and
movsl
pop
imul
fisubrs
inc
add
ret
js
dec
stc
cld
addr16
fstl
xor
cltd
rcll
mov
inc
scas
or
adc
sbb
cs
mov
adc
sub
push
ljmp
mov
je
push
dec
ret
lcall
push
fnstsw
pop
jb
das
pushf
xchg
sbb
jne
lret
out
imul
pusha
insl
loopne
sub
dec
rcll
out
mov
xchg
cmc
aaa
test
push
inc
ds
jne
mov
pusha
pop
pop
push
clc
fimull
push
pop
insl
lret
pop
push
shlb
ja
adc
adc
dec
xor
fs
push
dec
icebp
icebp
pop
push
adc
mov
xchg
lret
pushf
lods
and
leave
dec
pop
lret
test
lods
mov
dec
outsl
cmp
loope
cmc
mov
push
xchg
aam
push
test
int
dec
stos
cli
dec
dec
sub
pop
xchg
daa
insl
fistpll
out
mov
push
cld
push
cltd
dec
sbb
cltd
mov
sahf
push
and
stos
jno
stc
data16
pop
popa
shlb
mov
sbb
sbb
mov
and
or
stc
popf
in
and
js
and
out
lcall
movsl
leave
movsb
or
outsl
pusha
push
jl
aaa
pop
jbe
jnp
or
enter
int3
sarb
das
popf
mov
push
sbb
iret
out
dec
lods
sub
lods
stos
sbb
imul
cmp
push
cli
xor
or
inc
jnp
aas
inc
pop
mov
sbb
mov
decl
xor
sahf
jg
mov
add
jg
cld
xchg
mov
mov
xor
dec
in
aas
int
push
cmp
jmp
out
lret
les
jl
xchg
movsl
loopne
out
loope
lock
ret
mov
repnz
cli
lgs
rorl
aas
popf
hlt
jne
ljmp
lret
loopne
out
call
xor
daa
clc
cmp
cltd
push
lret
sbb
mov
mov
cmp
xchg
jnp
pop
push
fisubrl
and
scas
mov
pop
pop
push
cmpsb
adc
in
call
xor
imul
outsb
jmp
xor
sub
push
test
fisttps
adc
inc
ret
mov
das
outsl
lea
cs
jo
jle
fcomps
mov
add
jns
insb
call
stc
inc
pop
fsubrl
jne
sub
cmp
push
fcoml
mov
jecxz
into
repz
ds
ljmp
lds
leave
or
dec
mov
or
hlt
cs
jno
testl
inc
jge
mov
inc
xchg
cmp
cwtl
xchg
cmp
mov
inc
repz
pop
cli
in
leave
sub
inc
cmp
addr16
outsb
mov
rolb
cmpsl
cmp
stos
insl
xor
pushf
fnstcw
jmp
pop
xorb
sub
dec
xchg
in
xor
loop
dec
xor
add
in
sti
jle
adc
xor
pushf
mov
icebp
mov
insl
xchg
inc
iret
icebp
rcrb
cmp
sub
mov
cmp
bound
das
movsl
or
je
fdivs
or
and
rcrb
mov
scas
pop
or
cmpsl
xor
dec
fdivrs
mov
mov
loop
mov
push
clc
les
or
xchg
push
xor
shrb
fwait
call
nop
out
and
das
and
ja
aad
dec
ret
jns
loopne
mov
push
outsb
jno
dec
fcoms
inc
sub
sbb
adc
xor
int
push
pop
mov
adc
mov
xor
scas
mov
mov
sub
pop
mov
lds
mov
mov
and
sub
lea
mov
cmp
scas
mov
or
jb
in
je
sub
and
dec
pop
pop
mov
sbb
push
fs
mov
sbb
nop
jl
stc
inc
call
pop
pop
inc
jmp
and
inc
rclb
sbb
add
mov
jle
jae
mov
inc
outsb
xchg
test
loope
test
fs
andb
cmp
add
test
pop
fnsave
mov
jb
movsl
inc
es
imul
lods
mov
aaa
fldt
or
mov
mov
inc
and
adc
sti
outsb
inc
add
xchg
mov
rcrl
sar
mov
data16
sub
test
inc
aaa
cmpsl
arpl
and
decl
sbb
sahf
inc
imul
leave
mov
cmp
cmp
je
es
dec
popa
and
lahf
sub
pop
inc
sub
nop
mov
fcoml
cs
sbb
lds
rorb
in
fsubr
loop
push
rcrl
ret
and
enter
jo
cmpsb
insb
int
lods
jne
leave
cld
loopne
pop
lods
pop
jne
cmp
xor
push
dec
mov
int
cld
loopne
incb
push
sub
aaa
inc
cmp
dec
lahf
jle
or
push
add
outsb
mov
inc
xchg
dec
pop
out
int3
inc
xor
inc
mov
ljmp
adc
andps
out
sub
or
add
cli
outsb
nop
incl
out
adc
js
mov
enter
dec
mov
int
mov
hlt
out
sbb
cld
mov
or
dec
mov
push
arpl
xor
test
dec
mov
movsl
push
xchg
popa
xor
sub
cmp
push
jp
mov
scas
leave
loope
ds
xchg
sbb
push
ljmp
addr16
fidivl
lret
outsb
inc
fcomp
dec
sub
pop
sti
clc
loop
lahf
mov
test
sub
in
jne
stc
test
jp
sti
xchg
xor
lret
icebp
xchg
clc
popf
inc
sarl
xchg
xorb
scas
jne
and
cltd
negb
xor
lock
mov
and
mov
inc
and
lret
data16
or
mov
aas
scas
mov
and
or
imul
stos
mov
pop
insl
ret
cmpsb
ss
sub
pop
shlb
jnp
mov
mov
pop
inc
in
shlb
arpl
jnp
adc
out
and
test
adc
sarb
pushf
pop
sbb
and
test
jp
pop
insb
loopne
push
or
inc
add
pop
mov
lret
iret
lea
popa
jne
xchg
pushf
xchg
cs
push
outsl
lea
loopne
or
int
rcll
lock
cwtl
pop
incb
stc
mov
mov
jle
out
nop
mov
data16
imul
fistpll
dec
ficompl
add
push
push
sahf
out
mov
xor
arpl
enter
lea
sub
lea
jno
push
les
sub
sbb
test
lods
outsb
or
xlat
je
rclb
sahf
ret
mov
lods
sarb
cmp
xchg
lods
fildl
or
inc
es
mov
pop
cs
and
mov
mov
ja
xorb
sbb
jg
add
and
add
jb
outsb
in
pop
pop
add
mov
push
mov
lret
pop
add
in
inc
and
push
mov
and
mov
loop
jne
aaa
adc
dec
pusha
fnsave
push
xchg
mov
dec
clc
adc
cltd
pushf
push
flds
mov
sub
xor
mov
xchg
xchg
jo
outsb
mov
sti
mov
xlat
les
jnp
aad
sar
pop
mov
cwtl
pop
test
cmp
outsl
adc
sahf
sub
sbb
aam
pop
pusha
ret
in
fdivp
adc
ja
adc
pop
add
das
jne
push
jp
iret
mov
xchg
push
enter
lea
addb
fisubrl
stc
shrl
xor
add
fwait
cmp
jge
pop
pop
fs
addr16
in
and
mov
add
lods
mov
ljmp
shl
int3
or
fidivl
mov
jp
and
bound
sub
outsb
mov
bound
cmp
fistl
ljmp
push
sbb
or
cmp
ficoms
movsb
mov
xchg
and
inc
push
lret
loope
repz
and
dec
cs
fndisi(8087
jnp
mov
ret
inc
out
or
rcr
pop
push
jns
pop
clc
xor
pusha
push
add
out
pop
xchg
or
insb
imul
decl
and
pop
and
dec
jae
gs
sbb
clc
xchg
sbb
jmp
sbb
xchg
sub
dec
lock
adc
inc
imul
mov
call
incl
fwait
int3
jb
rorb
add
sbb
int
aam
adc
xor
into
shrl
push
xchg
pop
mov
test
daa
jnp
daa
gs
mov
sub
in
inc
int3
sub
daa
xor
push
dec
xchg
mov
mov
push
xchg
cmc
scas
setb
stc
sub
clc
xchg
ja
jp
inc
xchg
insl
add
and
rolb
mov
adc
cs
pop
mov
nop
in
mov
sub
cmpsl
jno
loop
jmp
mov
iret
fisttpll
pop
xchg
dec
mov
cmp
out
daa
dec
cmpsb
push
mov
mov
inc
idiv
jp
jb
addr16
daa
jnp
mov
cltd
dec
fsubrp
xchg
ret
out
inc
mov
lods
mov
cmp
negl
add
pop
cltd
and
ror
jge
outsl
add
jns
subb
lock
aaa
jecxz
xchg
dec
andb
mov
outsb
sbb
add
daa
ds
clc
int
sbb
or
jo
xor
fnstenv
call
lea
xchg
jb
mov
loop
cwtl
hlt
xor
mov
je
pop
sbb
movsl
and
ret
in
cmp
dec
inc
popf
lods
jle
loop
xchg
sbb
sbb
repnz
test
mov
or
icebp
test
std
pop
jb
inc
inc
adc
fmulp
pop
lahf
in
cld
pop
mov
adc
stos
lret
test
cltd
loope
ficoml
lds
lahf
or
or
or
loopne
je
ret
lcall
mov
test
push
xchg
nop
ret
cmpsb
mov
outsl
stc
outsl
aaa
xchg
scas
mov
out
sbb
sti
jns
jb
in
xchg
subl
sbb
inc
inc
jmp
add
out
xor
test
out
out
aas
lcall
dec
mov
shll
inc
pop
clc
int
ret
jle
mov
inc
mov
jmp
adc
jg
xor
inc
addr16
push
loope
sub
les
mov
pop
aad
mov
push
sti
push
stos
mov
add
sub
jno
adc
loop
mov
add
mov
cmpsb
fs
in
or
inc
inc
adc
and
and
call
push
fsubrl
lock
lds
pushf
push
xchg
loope
xor
sub
daa
gs
incl
ljmp
push
out
repnz
add
xor
leave
out
popf
fwait
adc
incl
movsb
adc
jne
scas
clc
addr16
cmpb
in
fs
out
xor
loop
pop
or
insl
jbe
dec
outsl
movsl
call
bound
inc
hlt
das
test
movsl
std
or
outsb
mull
scas
movsl
fcomps
lret
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
inc
push
xor
push
mov
mov
add
mov
decl
mov
mov
mov
xor
movl
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
movl
sub
mov
or
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xorl
add
mov
mov
sub
mov
orl
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
push
call
cmpl
jb
mov
addl
mov
adc
sub
or
mov
orl
subl
mov
mov
sbb
sub
adc
mov
add
orl
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
xor
add
dec
mov
jmp
mov
mov
sub
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
jmp
jge
pop
add
sti
jge
jne
pop
in
pop
je
jns
pop
pop
jp
add
mov
lds
mov
loop
scas
push
in
pop
cmp
rolb
push
mov
test
mov
jns
cltd
jge
jg
inc
sub
aaa
jge
and
rol
jns
sbb
pop
ja
int
sub
mov
rolb
sbb
pop
arpl
or
and
or
jp
dec
or
and
sub
insl
and
and
and
pop
scas
out
iret
jne
stos
adc
icebp
sti
mov
dec
dec
push
fistps
imul
clc
in
sbb
mov
xor
xor
inc
mov
xchg
stos
xor
insl
pushf
sub
dec
aas
mov
xlat
lcall
shlb
js
out
dec
out
stos
mov
addr16
cmpsb
push
mov
or
cli
lret
push
shl
into
cmpsb
cmp
dec
xor
push
and
add
pop
xchg
jne
fmulp
add
xchg
mov
cmp
dec
icebp
jns
sub
xchg
add
mov
aaa
in
pop
idivl
je
mov
outsb
sti
jge
and
cmp
mov
xor
cs
jle
cmp
outsb
dec
mov
push
aam
jl
cli
cmp
test
loop
pop
adc
cmp
in
test
push
pop
lods
xchg
shlb
lret
or
push
cltd
add
pop
stc
mov
pushf
adc
lahf
lcall
sub
mov
adc
dec
jo
mov
sbb
sub
adc
and
cld
jae
or
mov
cmp
mov
fidivl
cmpsb
fstpl
xchg
movsb
popa
mov
lods
and
mov
mov
cmp
xchg
mov
daa
jno
adc
jns
sub
ret
mov
fdivrl
dec
test
dec
adc
jns
lret
stc
je
mov
mov
and
clc
in
push
bound
nop
mov
mov
dec
adc
mov
flds
cmp
push
in
aas
out
test
inc
dec
repz
lgs
lea
sub
je
sub
sbb
xchg
dec
pushf
add
js
rcl
pop
dec
std
mov
iret
in
andb
push
mov
jns
fldcw
icebp
jmp
mov
int
movsb
sbb
ret
mov
xor
dec
mov
push
test
add
sub
lret
or
shrb
rolb
xor
push
xor
jo
ret
js
shrb
setne
dec
xlat
jle
push
push
sbb
cmpsb
out
pop
insb
fldcw
adc
pop
dec
xchg
lods
aad
test
pop
xlat
mov
xor
jg
jae
iret
xchg
inc
scas
add
mov
aad
push
mov
mov
inc
iret
cmc
push
xor
sti
xchg
iret
aam
iret
jge
push
xor
sub
or
ljmp
or
jmp
sbb
adc
push
test
mov
xchg
loop
cli
out
lcall
mov
test
jno
test
orb
in
lds
and
sub
pop
jno
rol
js
sahf
add
out
xor
add
jp
pop
jmp
hlt
push
wrmsr
popa
aam
cmp
imul
cmp
xchg
add
addr16
sbbl
cmp
orb
push
decl
push
fucomi
xchg
mov
test
mov
or
orb
lods
icebp
jge
and
cmp
jmp
fs
mov
sbb
mov
movsl
subb
inc
dec
inc
mov
sub
les
lea
add
xor
xchg
call
ljmp
pop
dec
out
push
nop
mov
cli
cmp
jg
mov
jno
inc
sub
or
jmp
insl
mov
cmp
cmp
pop
icebp
push
bound
dec
inc
decb
call
push
and
xchg
mov
push
sbb
mov
mov
sub
dec
and
cmp
jl
mov
cld
mov
sbb
push
les
insl
jbe
repnz
mov
inc
jmp
xchg
mov
shlb
or
shll
lret
lds
xor
xchg
outsb
cmpsb
ljmp
jo
mov
mov
mov
add
cwtl
add
subb
leave
adc
adcb
pop
mov
pop
mov
cmpsl
adc
jge
adcl
hlt
cmp
test
ljmp
lea
adc
sub
cmp
add
cmp
stos
fstpt
jns
ds
mov
dec
sbb
cs
sbb
lea
hlt
ficomps
lret
xor
xor
enter
sub
in
int3
mov
test
jle,pn
enter
lds
dec
es
aaa
mov
mov
ja
ljmp
xchg
mov
cmp
test
dec
gs
pop
mov
pop
add
arpl
and
jno
mov
mov
sbb
mov
mul
ret
sub
test
stos
hlt
in
xor
xchg
inc
sbb
adc
xchg
pushf
mov
pop
cld
xchg
mov
push
add
pop
loope
hlt
hlt
bnd
adc
hlt
in
push
sub
lea
inc
int
inc
into
sbb
nop
pop
faddl
adc
cmp
mov
clc
push
push
push
aas
xchg
ss
mov
dec
test
cmpsb
jns
call
loope
xor
mov
sub
mov
dec
ja
shlb
scas
mov
es
mov
dec
xorl
sub
aam
mov
xchg
xor
mov
xchg
xchg
repnz
outsl
pop
adc
jno
fisubrl
inc
jne
pusha
mov
shl
push
sbb
and
inc
mov
pop
test
xchg
shll
push
ret
or
addr16
inc
test
sti
cli
stc
cld
xor
and
xchg
jg
lods
mov
xchg
fidivrs
ljmp
les
push
rolb
jbe
adc
jae
xchg
stc
adc
inc
stos
inc
and
pusha
repnz
mov
add
mov
stc
adc
loope
sub
rorl
shll
jge
cli
ja
imul
or
push
cmp
das
sbbl
data16
sub
xor
loop
dec
mov
dec
jo
or
adc
pop
cld
xor
mov
lea
leave
adc
ficomps
leave
lret
push
lahf
push
push
test
xchg
add
adc
push
jge
mov
loope
lods
mov
sub
xor
leave
shrb
ja
cmp
cmp
notl
repz
add
mov
adc
mov
sbb
imul
jge
xor
jg
xchg
push
xchg
pop
fadds
mov
mov
mov
cvtpi2ps
jmp
sub
inc
mov
in
shll
sbb
inc
clc
or
and
das
out
mov
test
les
sub
xor
and
mov
scas
sub
repz
int3
shl
pop
jbe
mov
add
addb
inc
aaa
sarl
dec
xchg
and
fsts
xor
ja
pop
pop
sbb
lret
adc
add
daa
jmp
fisubrl
int
test
push
sub
pushf
xchg
jb
mov
lds
outsb
shll
icebp
lea
jnp
scas
fucomip
icebp
packuswb
xor
xor
or
xor
jl
jl
inc
xor
test
pop
stos
fwait
icebp
push
cmp
mov
mov
sbb
jle
push
xor
dec
int3
je
das
pop
xchg
dec
inc
inc
clc
jo
push
hlt
add
fnstenv
rorb
or
rclb
or
mov
push
js
mov
test
mov
mov
dec
add
lods
cltd
mov
and
or
cwtl
xorps
sub
mov
jnp
loopne
sub
aad
test
lods
adc
mov
cmp
push
int3
test
lret
push
cmc
ret
xor
xor
cmpb
add
push
rcl
jno
pop
add
add
int3
sub
cld
ljmp
shl
sub
cli
sub
test
mov
jae
push
add
les
push
push
mov
leave
mov
cltd
and
inc
sub
inc
outsl
fisubrs
scas
movsb
add
sub
cmp
cmpsb
mov
scas
push
adc
or
insb
mov
lods
mov
cmp
aaa
jns
inc
push
sbb
sub
hlt
or
mov
xor
lcall
lods
mov
pop
xlat
xor
mov
shr
adc
pusha
fistpl
lods
fidivrs
imul
adc
push
mov
add
xchg
cs
sti
xchg
outsb
and
xchg
call
adc
bnd
sub
in
lret
clc
cmp
or
ret
repz
add
adc
fsubs
shr
sbb
dec
and
add
cltd
inc
lcall
sbb
adc
adc
out
clc
cmc
sbb
out
push
push
cmc
daa
sub
or
jmp
jp
es
add
lret
cmp
pop
lahf
sub
jl
mov
cmp
addb
mov
and
sub
and
or
dec
not
dec
jno
inc
ret
sbb
pop
add
jge
imul
jl
mov
test
jp
cmp
jl
outsl
lds
adc
aad
push
pop
push
jle
xor
mov
cmp
xchg
aaa
pop
pop
or
test
out
mov
add
mov
push
push
ljmp
iret
adc
lods
dec
outsl
mov
xor
mov
mov
sti
test
outsl
les
cmp
dec
dec
push
mov
dec
cmpb
fcoms
loope
pop
loope
cli
divl
testb
xor
or
fsubs
mov
dec
and
fisttps
aad
lock
cli
popf
mov
inc
idivb
ljmp
loopne
sbbb
sbb
lods
fwait
mov
pusha
add
sarl
stos
add
jp
je
sub
xchg
mov
sarl
out
cld
mov
cmpsl
out
shrb
mov
mov
fisttpll
xor
dec
adc
das
fstpt
xchg
rcr
cs
jne
lock
sti
lcall
das
cmp
idiv
iret
fwait
xchg
jae
push
outsl
jmp
mov
scas
aas
push
sarl
scas
inc
adc
add
jle
inc
dec
dec
jb
sbb
in
inc
movzbl
in
fnstcw
cli
mov
mov
mov
mov
jno
or
sbb
sti
idiv
mov
out
lret
aad
jne
repnz
pop
pop
inc
mov
pop
add
adc
adc
arpl
mov
cwtd
mov
nop
xchg
mov
or
jge
sahf
jmp
jg
adc
add
push
mov
jno
mov
dec
andl
pop
out
mov
roll
scas
mov
mov
mov
push
xchg
shlb
stos
mov
adc
pop
adc
shl
cs
stc
xchg
or
sahf
aam
xor
test
push
mov
insb
les
or
aam
jecxz
and
aad
xchg
and
cmp
std
xor
fisttpl
jo
fdivs
xchg
jns
cld
iret
or
leave
sub
pop
std
jge
dec
lea
or
xchg
insb
xchg
das
or
sub
xchg
fs
adc
mov
aam
mov
icebp
insb
aaa
adc
pop
sar
push
xor
push
fldt
shr
int
pushl
in
repnz
xchg
inc
inc
jge
in
shll
pop
divl
cmp
mov
call
pop
and
mov
notl
sarb
inc
ss
imul
xchg
out
out
pusha
dec
pusha
test
adc
out
fiaddl
add
ret
lahf
hlt
xlat
scas
sbb
scas
mov
jne
xchg
in
mov
sub
mov
mov
cs
aad
mov
mov
cmp
xchg
mov
inc
cmp
js
or
mov
dec
mov
jns
decl
and
lock
add
jbe
fwait
into
xchg
ljmp
push
pop
and
leave
cmpsl
cmpsb
jbe
mov
lret
mov
lret
iret
mov
shrb
add
in
jecxz
push
mov
shll
shrl
push
mov
xchg
sbbl
dec
xchg
cmp
pop
movlps
in
lds
imul
sbb
mov
stos
xchg
lock
lea
pop
repnz
rol
repz
inc
jnp
pop
lret
pop
es
gs
movsb
bound
lock
cmp
sbb
pop
std
negb
adc
adc
inc
cmp
xchg
push
ja
movsl
jg
push
and
jne
cwtl
mov
pop
sbb
jmpw
cmpl
into
fsubrs
repz
cli
xor
das
xchg
push
lahf
in
loope
lret
sub
les
movsb
ss
sbb
fsubs
mov
into
cmpsb
pop
leave
aam
pop
mov
adc
lods
sbb
cwtl
pop
mov
and
cwtl
test
je
fwait
loop
cltd
aas
aas
xor
xor
jns
ffreep
cmpsl
fs
bound
lock
insb
lods
popf
jnp
sbb
push
push
mov
lahf
imul
stc
cmc
fisubrs
stc
mov
inc
pop
sbb
mov
adcb
sub
call
push
mov
pop
sub
push
add
out
pop
rolb
fidivrs
and
and
lret
sarb
popf
lcall
repz
lret
ficoms
ja
inc
dec
cmp
insb
xchg
fucom
sub
andl
mov
mov
lods
jmp
cmp
inc
inc
add
loope
jge
das
mov
push
adc
pop
mov
xor
pop
mov
testb
outsl
mov
ret
adc
loopne
fcoms
sbb
dec
sub
mov
dec
int3
inc
jne
loop
insl
xchg
filds
out
sahf
loopne
shll
xor
push
mov
sub
xor
dec
add
pop
dec
pop
cmc
incl
xlat
ss
mov
pop
mov
ljmp
push
sbb
insl
dec
or
push
xor
xor
adc
aam
out
cmp
pop
stos
sbb
js
jns
sbb
cli
and
xchg
mov
dec
push
sbb
adc
jno
in
mov
dec
lcall
inc
jae
mov
xchg
sub
sbb
mov
hlt
outsl
jp
cmc
iret
cmpsb
inc
lds
int
enter
insb
aaa
fs
dec
pusha
xlat
lret
stc
enter
xor
pop
lods
sbb
ljmp
dec
pop
cld
add
mov
bound
fucomp
daa
mov
xor
inc
mov
icebp
scas
jb
inc
in
sbb
je
rcrl
or
test
lods
xchg
jge
out
lock
mov
mov
jg
mov
mov
stc
inc
ret
cmp
pop
cld
sti
icebp
fsubrl
sub
adc
pop
push
mov
jbe
pop
repz
push
shl
repnz
mov
mov
push
or
sbb
test
inc
inc
adc
pushf
or
mov
pop
push
sub
call
fwait
sbb
push
cmp
mov
push
fmull
xchg
shlb
pop
das
sbb
xor
jo
dec
xor
fistl
inc
in
sbb
mov
std
insl
mov
sbb
rep
ds
call
lds
repnz
cmp
push
mov
fs
dec
mov
insb
dec
sub
mov
mov
or
ljmp
mov
pop
mov
inc
iret
movsb
dec
ds
jne
js
mov
popf
dec
xchg
mov
mov
scas
aas
cmpb
cld
mov
stos
daa
filds
insl
adc
sbb
sub
xchg
sbb
pushf
inc
scas
mov
bound
pop
push
mov
push
pop
addb
int
jns
sbb
hlt
jmp
cltd
dec
dec
sub
mov
mov
xor
mov
or
jno
pop
imul
jno
cmc
imul
jae
sbb
or
cmp
aaa
sub
mov
push
pop
addr16
je
fldl2t
fs
mov
mov
push
mov
lea
xchg
and
popf
cmpsl
xor
fwait
mov
inc
sbb
cmpsb
ret
adc
adc
shrd
sub
add
int
hlt
rclb
fisubl
clc
adc
xor
mov
push
lahf
inc
dec
mov
fildll
push
test
pop
jbe
xchg
fstpl
mov
imul
adc
or
inc
shll
cmpsl
imul
leave
push
aas
jo
rorl
decl
sarb
pop
mov
test
mov
push
mov
shll
inc
mov
dec
pop
cmp
outsl
add
shlb
cld
outsb
iret
xor
cmpl
push
mov
outsl
ret
mov
or
call
and
in
fld
lret
or
dec
sbb
mov
test
aas
test
xchg
dec
scas
cmp
lret
in
and
mov
rcrb
lds
loop
or
mov
or
cltd
cli
push
mov
jmp
inc
xchg
jnp
jns
xchg
push
sbb
decl
gs
xor
xchg
lods
int
cmpsl
imul
push
add
adc
movsb
sub
ljmp
fistpll
and
xor
add
or
adc
leave
jmp
flds
lcall
addr16
in
fs
or
rclb
sub
insl
and
outsl
les
daa
test
iret
cmp
xchg
je
cmp
mov
fidivrs
mov
pop
mov
or
push
xchg
mov
dec
pop
fnstsw
sbb
lea
fdivs
bound
repz
cltd
cmpsb
int3
mov
out
xchg
enter
les
leave
outsl
iret
dec
push
shrb
lcall
sbb
sub
xchg
mov
aam
outsl
mov
ror
bound
adc
mov
mov
daa
fwait
into
das
xor
pop
add
les
scas
mov
movsl
scas
mov
add
jge
inc
out
rorl
adc
lds
in
rol
in
jno
fs
repnz
or
cli
fs
push
mov
jb
inc
pop
std
testl
adc
xor
mov
inc
out
lods
stc
and
call
and
sbb
les
push
dec
inc
push
or
les
xor
popf
lahf
dec
psrad
dec
sub
scas
stos
nop
xchg
nop
xchg
inc
mov
mov
inc
icebp
cmpxchg
xchg
push
addb
inc
sub
cmovo
pop
cmpsl
sbb
push
jg
mov
scas
mov
mov
hlt
xor
and
lahf
cmpsl
or
pop
ret
sub
adc
or
fcoms
jmp
in
out
inc
aaa
shrb
dec
mov
mov
xchg
rcrb
mov
cmp
loopne
aad
sbb
mov
mov
dec
and
push
push
jmp
in
jbe
mov
adcb
add
cwtl
sbbl
pop
adc
dec
cltd
call
imul
popf
sub
mov
mov
mov
dec
enter
test
cltd
outsl
and
push
jbe
or
jp
aad
test
xor
add
pushf
and
xchg
fistl
jnp
shll
cmc
movsb
lahf
push
jmp
mov
scas
mov
jge
mov
push
in
dec
imul
pop
mov
testb
data16
xchg
xchg
into
mov
movsb
imul
mov
mov
popf
jne
jae
sub
ss
outsb
cmp
cmpsb
imul
clc
pop
dec
fildl
inc
push
sub
jmp
shlb
jbe
cltd
jae
cmpb
dec
xlat
push
push
or
pop
xchg
adc
leave
in
movsl
lahf
movsb
sub
stc
cmp
inc
xchg
cltd
lods
aas
inc
add
ret
mov
mov
call
sub
adc
jmp
sub
add
int
lods
dec
pop
or
adc
decb
push
shlb
add
test
xchg
adc
xchg
xchg
daa
cld
jmp
sub
push
sub
adc
mov
sbb
insb
movsl
dec
shl
fsubrs
popf
inc
das
sti
mov
mov
pop
or
xor
insb
imul
rorb
push
xor
test
add
add
sbb
hlt
lret
xor
sahf
add
xlat
mov
das
push
inc
xchg
xlat
mov
mov
cmc
adc
lret
add
pop
sub
inc
or
dec
lds
arpl
repnz
fidivs
push
std
push
mov
outsb
xchg
mov
adc
ret
lret
jae
ljmp
flds
or
or
and
scas
scas
rorb
or
and
cli
ljmp
testb
lods
xadd
int
inc
hlt
sbb
lret
cmp
fnstenv
adc
test
inc
adc
mov
fadd
adc
jg
lods
mov
pop
cmp
lret
xchg
lods
push
xchg
mov
jmp
rclb
ficomps
push
ret
cs
fldcw
fisubl
xchg
jae
into
jns
jle
not
dec
cmpsb
mov
sub
xchg
pusha
lea
fildll
sub
jl
mov
cmc
pop
mov
in
add
jmp
pop
lock
cmp
xorb
sti
cmp
test
out
cmp
rolb
xchg
aam
cmp
cmp
jp
dec
sbbb
xor
or
pusha
fmull
mov
sub
mov
fmull
bound
in
pop
out
lock
and
les
add
mov
mov
imul
mov
mov
sbb
xlat
xchg
in
xor
dec
xchg
pop
fstps
add
push
xchg
out
fwait
dec
mov
mov
jmp
sahf
sub
inc
es
xchg
push
dec
fwait
mov
sub
dec
hlt
or
nop
popf
pop
jnp
inc
test
and
adc
rcll
and
loope
rcrb
js
je
pop
aaa
popf
fwait
jp
in
mov
es
xor
cmp
adc
xchg
mov
stc
or
imul
xchg
rcll
mov
stos
stc
mov
mov
inc
jne
or
decb
push
xchg
dec
into
fistpll
pushl
pop
adc
test
js
rorl
fisttps
into
loopne
cmovnp
rcll
jb
lcall
mov
in
pop
push
outsb
xchg
ret
adc
mov
pop
pop
and
adc
test
iret
ss
dec
addb
loope
jno
mov
add
imul
stos
cmp
hlt
daa
out
mov
lock
les
or
add
mov
das
test
repnz
inc
lea
mov
lock
mov
insb
jge
add
cmp
fadd
ds
out
fnstsw
push
es
add
dec
rcr
roll
cmp
cmovs
pop
sbb
inc
call
int3
pop
mov
xlat
dec
scas
scas
scas
pop
cmp
je
nop
or
cltd
and
lods
and
minps
cmc
sarb
mov
lods
das
and
mov
repz
push
ss
loop
ffree
int3
xor
adc
push
inc
mov
shll
pusha
repnz
mov
imul
jg
shll
sbb
jbe
cmp
adc
sbb
das
test
mov
jne
cmp
xchg
dec
insl
test
shlb
das
ficompl
inc
xchg
ret
mov
push
ss
xor
sub
jbe
enter
jg
sti
push
pop
mov
cmp
nop
xchg
mov
mov
mov
stc
lock
jmp
jno
sbb
pop
push
add
pop
xor
mov
aaa
ja
xchg
xchg
jnp
sub
fildl
pop
cmpsb
mov
cmp
mov
xor
push
adc
jg
xchg
call
mov
subl
in
jge
mov
rolb
mov
cli
rcl
sti
aaa
dec
xchg
out
insl
lcall
mov
clc
jecxz
insl
inc
xchg
fisttpl
push
scas
fsubrl
loope
int
cmp
mov
cmpsb
aam
push
shlb
stos
rclb
jnp
int
nop
out
andb
ljmp
dec
mov
sbb
add
adc
mov
gs
outsl
mov
repz
inc
sub
jbe
bound
xchg
jns
lcall
dec
std
inc
sub
push
jp
xor
or
cmpsl
mov
xor
add
push
push
mov
inc
jo
sbb
or
stos
xchg
sbb
lea
xlat
cmp
dec
push
mov
xor
sub
sub
into
call
loop
gs
fadds
adc
out
xchg
mov
push
test
sub
mov
pop
add
pop
insl
sbb
das
leave
imul
scas
call
mov
outsw
ret
sub
mov
mov
inc
xchg
add
inc
inc
sbb
mov
mov
loope
das
test
pop
outsl
loope
dec
and
mov
stos
pop
xor
pop
nop
push
aam
in
fistpl
cs
arpl
jnp
mov
gs
jne
or
ss
pop
mov
mov
loop
shrb
mov
mov
sub
lods
aad
push
dec
push
xchg
mov
adc
dec
out
repnz
sbb
das
xor
fisubl
adc
pop
out
loop
mov
jnp
mov
dec
sti
add
push
and
lahf
jmp
and
ljmp
in
pop
std
pop
xor
push
repz
xchg
lret
adc
das
cltd
sub
roll
movsl
mov
lods
mov
jne
mov
add
fdiv
les
lret
aaa
shl
and
ss
adc
xchg
js
nop
lret
dec
xchg
pushf
iret
pop
popf
pop
jo
mov
mov
adc
popl
lahf
insb
lods
sub
or
mov
movsl
repnz
ja
add
stos
xchg
stos
fcomp
int3
lds
mov
loop
adc
pop
insb
xacquire
push
and
mov
and
push
int3
test
push
addr16
cltd
arpl
pop
das
roll
dec
in
and
loopne
jg
sahf
dec
push
adc
setns
popa
dec
mov
push
imul
loope
in
and
mov
lds
popf
xchg
test
push
fwait
call
mov
mov
dec
ja
cmc
xchg
mov
lea
pop
sub
mov
sbb
push
xor
xor
shl
imul
pop
mov
loope
jae
push
xchg
xor
lods
in
ljmp
mov
adc
shll
push
or
push
scas
fsts
add
iret
add
inc
xchg
ljmp
mov
pop
scas
adc
or
dec
fisubs
adc
cmpsl
sbb
xor
push
adc
cmp
xor
out
mov
cmp
fs
jb
cld
mov
mov
mov
jne
insb
cmovb
sub
fstpl
fwait
hlt
mov
lahf
std
mov
add
or
lret
aaa
ja
leave
out
out
and
dec
rolb
vpsubsw
cltd
lods
bound
dec
dec
enterw
hlt
inc
xor
aaa
aam
sbb
inc
loop
xchg
rcll
ljmp
outsl
or
jbe
push
jne
or
and
jmp
add
cmpsb
mov
dec
fcom
das
and
inc
aas
in
rorl
sti
xchg
test
fmuls
push
pop
cs
std
sbb
outsl
daa
sbb
add
dec
sbb
mov
or
incb
sub
and
cmp
mov
pop
sub
rcll
pushf
stos
push
jnp
mov
and
icebp
inc
xchg
int
and
pop
in
pop
addr16
push
and
dec
fs
das
push
fcmovu
fldl
jg
jl
inc
or
lock
inc
xor
mov
cld
int
std
xor
or
ljmp
inc
mov
fisubl
jle
jns
or
addl
fwait
pop
mov
mov
mov
add
sbb
hlt
cmp
mov
xlat
sub
stc
lea
push
lods
aas
xchg
xor
test
lret
mov
scas
mov
test
xchg
iret
ljmp
or
jp
inc
mov
add
insl
cmp
outsb
lea
jns
bound
lods
int3
ficompl
pop
call
fisttpll
lcall
gs
mov
call
cmp
out
mov
adc
stos
inc
sub
jae
loopne
das
shl
fnstcw
sub
or
jmp
int3
les
cli
bound
xor
lret
test
pop
lock
jo
dec
push
lock
xor
push
fistpll
or
fstpl
xchg
or
pop
or
das
sbb
sub
fbstp
mov
cmp
jmp
ret
pushf
pop
rorl
mov
mov
mov
mov
out
ljmp
and
and
je
add
rorb
dec
sub
out
mov
lcall
cmp
mov
imul
clc
xchg
mov
insl
push
test
jne
or
mov
incl
mov
jmp
jb
sbb
lret
mov
mov
cmp
cld
jns
pop
pop
jp
leave
fmuls
add
mov
pushf
scas
imul
jae
dec
jnp
xor
push
loope
stos
cmp
sub
jecxz
inc
neg
shlb
sub
imul
xor
leave
xchg
mov
xchg
jecxz
xchg
mov
xlat
mov
mov
mov
add
es
out
push
hlt
jmp
mov
push
fstps
mov
test
aam
addr16
shrd
cmpl
lret
rorl
insl
test
shrb
popa
idivb
cwtl
mov
lret
pop
cmc
cwtl
mov
cmp
lahf
es
pop
scas
pop
arpl
rcrb
mov
inc
aas
add
dec
pusha
xchg
jmp
icebp
mov
je
jae
hlt
mov
sbb
pop
jg
bound
insl
inc
xor
xchg
add
lods
cmc
out
push
sbbb
fbstp
loopne
mov
adc
loope
movsb
or
and
cwtl
das
xlat
stos
sbb
imul
int3
sbb
adc
pop
movsl
mov
jmp
and
sub
jae
cli
or
addr16
fisttps
outsb
dec
sbb
jne
jmp
es
in
gs
addr16
gs
cmp
cmp
mov
mov
mov
in
outsb
insb
sbb
outsl
adc
out
test
lea
cmpb
jg
and
mov
hlt
fistpll
xchg
xor
clc
add
xchg
stos
adc
cwtl
fcomi
xchg
js
jo
fsubrs
rol
pop
iret
push
lret
mov
cs
cli
add
jl
rclb
mov
pop
jns
in
push
mov
jmp
pop
xchg
inc
fisttps
pop
or
les
adcl
ss
adcb
pusha
cld
jmp
or
orl
mov
test
ret
sarb
and
dec
xchg
fnstcw
lods
sbb
mov
mov
das
sbb
jmp
push
outsl
into
imul
out
dec
xchg
popa
fbstp
mov
jb
icebp
xchg
out
sbb
mov
sbb
jle
js
jns
xchg
xor
das
pushf
popa
ja
pushf
aam
dec
je
iret
adc
nop
mov
inc
and
pop
lret
hlt
and
pop
pop
insb
sbb
fists
jg
and
jle
dec
faddl
mov
pushf
repnz
out
inc
or
orl
pop
out
xlat
jp
iret
rolb
pop
mov
push
in
cmp
sbb
iret
cli
fbstp
push
stc
loopne
sbb
push
out
cmpsl
fnsave
xchg
mov
syscall
dec
ret
jo
mov
stc
jecxz
pop
push
xlat
mov
sub
lret
imul
mov
clc
loop
pop
aaa
lock
jg
lret
mov
adc
xchg
enter
scas
jp
sbb
or
rolb
sbb
stos
lret
loope
jo
adc
xorb
xchg
andl
das
add
xor
repnz
mov
roll
mov
fdivrl
xchg
sbb
adc
jmp
jne
sub
push
push
stos
mov
mov
push
inc
out
inc
je
sub
loopne
sti
jne
dec
push
mov
mov
cmpsb
out
cld
les
xchg
or
ret
sbb
enter
call
sbb
jmp
out
loope
mov
sti
scas
add
cli
sbb
sbb
stc
cmp
icebp
data16
sbb
insb
jecxz,pn
dec
popa
and
push
mov
dec
cmpsl
fnstenv
cmpl
inc
mov
js
data16
push
sbb
outsb
push
daa
mov
mov
fadds
sub
pop
fisttpl
in
push
icebp
inc
pop
test
adc
cld
inc
pop
repz
cmp
add
js
or
jge
and
jno
inc
outsl
outsb
mov
bts
jae
xchg
adc
andb
imulb
push
add
sub
adc
xchg
into
pushf
test
sahf
ljmp
add
outsb
ret
add
ljmp
mov
mov
or
sbb
aad
pop
stos
popa
push
or
das
icebp
sub
aam
pusha
stc
cli
call
popf
push
adc
ljmp
fldcw
movsl
add
lret
movsl
mov
inc
adc
mov
push
xor
mov
inc
push
push
into
and
adc
sub
xchg
cld
pop
jnp
arpl
sub
loope
push
daa
xchg
mov
jns
xchg
dec
daa
and
xorb
add
aad
xor
dec
inc
mov
jo
inc
sub
loopne
mov
repnz
and
xor
add
test
lret
xchg
stos
sahf
jle
insb
dec
mov
aas
fnstenv
lock
sub
dec
xor
lahf
popf
pop
incl
mov
dec
fs
pop
xchg
lods
push
das
fstpl
lods
ds
stos
push
int3
mov
cmpsl
aas
aam
push
aaa
je
pop
insl
mov
repnz
mov
imul
push
gs
js
xor
push
outsb
pop
jnp
cmp
int3
pop
add
mov
push
dec
lahf
leave
or
push
fsub
pop
jo
lahf
push
dec
sub
ja
call
xchg
mov
rcrb
sbb
mov
add
pop
jno
xchg
mov
cmp
movb
stc
and
xor
fwait
test
mov
out
jnp
push
imul
fsubs
mov
shr
dec
or
jo
das
loopne
popl
inc
and
dec
mov
inc
mov
mov
jl
push
addr16
test
jne
sub
dec
int
cmp
xchg
inc
shll
in
sbb
push
xor
cmp
mov
jno
cmp
repz
cltd
xor
pop
sbb
or
shll
ss
dec
pop
sub
sbb
push
dec
int
mov
insb
pop
add
add
ficoml
nop
mov
mov
mov
repnz
imul
push
fdivl
xchg
inc
inc
adc
adc
mov
or
ss
xor
es
push
flds
jns
out
int3
test
js
mov
mov
ds
in
cmp
cwtl
cld
rorl
notb
test
int3
mov
icebp
cmp
xchg
or
adc
add
addb
aaa
je
xchg
fsubl
dec
cmpsb
jnp
sahf
roll
test
cli
push
shl
xchg
dec
adc
or
push
test
test
push
sti
push
push
adc
sahf
arpl
add
push
jns
clc
xchg
lods
cwtl
cmp
or
push
mov
hlt
test
sbb
xor
add
repnz
mov
pop
leave
xchg
push
addr16
cltd
inc
cs
mov
pop
sbb
xchg
loopne
mov
mov
xlat
mov
push
mov
mov
xorl
out
mov
xor
out
in
in
and
ret
arpl
xchg
cmp
cmp
cmp
daa
xchg
inc
xchg
loopne
fdiv
push
mov
imul
mov
adc
sub
out
xchg
fistpll
int
or
mov
addl
adc
imul
das
sbb
rcr
push
sbb
mov
bound
push
adcb
mov
jnp
insl
cwtl
mov
add
fists
in
fnstsw
je
cmp
pop
push
dec
aaa
cwtl
imul
out
mov
mov
pop
bound
stc
pop
ds
pop
insl
cmpsb
or
neg
in
sbb
or
jp
lds
cs
pop
das
stc
ds
pop
lods
cmp
mov
adc
sub
movsb
and
addr16
jp
int
adc
xchg
sbb
push
jno
lods
cmp
sub
out
pop
jbe
xchg
and
inc
sub
mov
xchg
jecxz
cmp
aam
mov
js
mov
add
mov
and
mov
lret
mov
push
sbb
jecxz
and
cmpsl
inc
ss
rcrb
outsb
ret
sbb
adc
push
and
repz
cmp
cmp
mov
pop
adc
cld
roll
jbe
cld
cmc
and
dec
lret
cmp
lret
imul
jb
xchg
cmpsl
mov
dec
fnstsw
sbb
inc
lret
shll
cmpl
push
call
push
divl
sub
push
cmp
divl
push
pop
push
mov
orl
mov
add
arpl
inc
sub
repz
add
push
xchg
push
pop
das
aas
stc
loopne
add
xor
aaa
jmp
out
pusha
or
xorb
sbb
popa
push
jae
inc
out
mov
out
jns
push
push
test
shll
dec
loop
int3
mov
repz
adc
js
push
gs
scas
dec
pop
adc
dec
jle
fnstcw
add
push
sbb
push
xor
xlat
rcll
inc
mov
aad
shrl
lret
fs
fiaddl
mov
addr16
out
or
push
pop
in
cmp
lahf
mov
daa
cmp
push
jg
inc
bound
pop
cwtl
jo
jbe
pop
xor
ss
and
mov
and
sahf
js
sub
jns
aaa
xor
add
cmp
sub
jecxz
iret
dec
lea
bound
ret
mov
into
enter
sub
jb
mov
mov
push
push
shrb
xchg
test
dec
lods
cmp
mov
mov
xchg
stos
adc
cld
fidivrl
fdivr
int
and
xchg
fnstenv
lods
push
and
mov
je
in
jge
mov
int
insb
sbb
adc
push
scas
mov
ret
push
loopne
jns
mov
push
mov
fdivs
cs
fildl
xor
add
jg
ret
neg
ds
xor
mov
rol
hlt
pop
adc
pop
mov
sbb
mov
sbb
outsl
pop
push
ljmp
test
int
jg
lods
shlb
fisubrs
adc
push
imul
lcall
wbinvd
scas
jne
sub
xchg
add
std
incl
aas
in
das
and
push
jnp
sub
jns
mov
mov
sarl
inc
stos
push
cmp
mov
je
aam
daa
test
arpl
push
std
inc
xor
shll
pop
addb
insl
enter
nop
popl
dec
fmul
dec
loope
mov
sbb
mov
daa
das
scas
mov
add
inc
xchg
imul
gs
test
int3
cmc
add
inc
js
outsb
and
lea
cmp
ljmp
jo
in
or
jecxz,pn
xor
xchg
rorb
test
xor
mov
or
cmovbe
cmp
cmpsb
fwait
cwtl
and
test
adcb
mov
mov
inc
sbbl
or
fdivl
xor
jo
mov
mov
dec
xchg
or
mov
scas
sub
xor
fxch
mov
dec
js
int3
shl
sbb
leave
mov
xchg
lret
or
cmp
sub
sahf
sub
js
and
loop
inc
mov
sti
iret
repnz
add
push
lcall
mov
inc
ss
scas
or
loopne
movb
push
jbe
shl
cli
repnz
sarl
dec
mov
or
insb
inc
mov
lock
rcrl
sbb
sbb
mov
fsubrp
mov
xor
in
adc
testb
loope
scas
mov
adc
scas
pop
mov
mov
sbb
outsb
es
mov
mov
sub
fxch
ss
imul
aaa
cmp
pop
or
cmc
in
sbb
mov
std
add
xchg
test
cwtl
aam
call
ds
adc
sbb
decl
outsl
hlt
popf
stc
mov
arpl
push
add
mov
out
inc
inc
ror
pop
mov
andl
lock
scas
cmp
aam
xchg
push
inc
cmc
mov
sbb
adc
xor
push
lods
cmp
ljmp
cmp
mov
add
jo
and
mov
daa
add
movaps
popf
dec
inc
pushf
adc
lret
stos
out
inc
scas
jb
add
lcall
or
and
jecxz
jmp
or
gs
push
mov
jmp
fs
aas
cmpsl
into
cmp
daa
into
jae
xrelease
and
push
mov
or
fdivl
jg
jecxz
rorb
lahf
pop
fs
pop
loope
lods
inc
and
enter
jmp
sbb
xchg
sub
mov
sub
ss
jbe
int
out
in
lret
fnstenv
sub
adc
cmpxchg
into
mov
mov
popf
or
sbbl
pop
out
fs
xchg
movsl
aam
aas
mov
mov
mov
cmp
push
cld
mov
cmp
loope
xlat
loop
jl
or
or
xchg
aam
adc
les
daa
shll
out
faddl
pop
leave
aam
xchg
outsb
mov
movsb
test
xor
adc
nop
mov
lods
push
popf
jmp
sbb
ds
xor
aad
mov
test
fisttps
shrb
stos
addb
add
hlt
incb
nop
stos
add
movsb
add
mov
push
xorps
cmp
sbb
inc
test
mov
xor
pop
add
js
sub
pop
lahf
xor
cmpb
sahf
repnz
add
leave
jne
mov
cmp
movsl
jae
fsubl
jnp
jmp
das
add
push
add
adc
mov
stos
leave
lods
sbb
dec
hlt
fcoms
sbb
and
inc
and
lcall
xor
sbb
in
mov
add
jmp
or
cmp
lcall
mov
cwtl
xchg
add
popl
add
mov
adc
cmp
mov
pusha
dec
mov
sti
xor
sbb
push
push
mov
lea
iret
mov
mov
je
and
arpl
sarl
cmp
mov
pop
aaa
rclb
imul
aad
cmp
mov
outsl
mov
cmp
mov
rclb
cmp
mov
sbb
adc
pop
push
ret
sub
dec
aam
pop
jb
jg
sti
in
adc
xor
cwtl
ret
push
sub
int3
xchg
cmp
rorb
les
adc
dec
sahf
xor
int
mov
mov
leave
mov
cli
insl
pop
rcl
sbb
nop
repz
adc
std
pop
xchg
clc
in
les
sar
outsl
pop
sbb
inc
and
lods
push
mov
sub
insb
xor
push
inc
lock
adc
in
push
jl
inc
adc
or
imul
push
inc
inc
push
pushf
adc
or
sbb
xchg
dec
mov
ret
test
mov
movl
pop
push
andb
addr16
or
mov
mov
jb
scas
dec
inc
cltd
call
sub
mov
mov
xchg
mov
sub
xchg
imul
xor
mov
cmpsb
ror
cltd
movsl
faddl
add
push
adc
push
jno
sbb
arpl
xor
push
or
jecxz
push
mov
popl
and
outsl
or
test
mov
sub
int3
lods
inc
push
ficompl
lds
into
cmc
dec
xchg
mov
idivl
jp
callw
mov
bswap
test
adc
hlt
jnp
sti
sub
fcom
std
xchg
cltd
jl
nop
add
add
ret
mov
dec
or
jmp
jbe
das
push
imul
test
mov
ja
ds
push
es
mov
jecxz
mov
jge
mov
aam
fists
jae
and
bound
fbstp
sbb
mov
out
dec
repz
dec
lcall
bound
or
stos
sub
scas
adc
push
test
jge
sahf
mov
pcmpeqw
push
or
jl
mov
ss
or
sahf
mov
mov
clc
adc
test
cmpsl
and
or
xlat
or
mov
sbb
inc
xor
les
loope
xchg
xchg
and
mov
xor
xor
sbbl
add
out
sbb
sbb
and
xchg
mov
jnp
jo
mov
popa
shl
mov
push
push
jno
test
and
movsb
cmp
rcll
mov
outsb
das
add
iret
cmp
push
scas
add
mov
repnz
repnz
push
or
fcoms
cltd
int
inc
popa
sbb
xchg
out
fldt
lds
paddd
jl
ret
imul
inc
cmp
push
xchg
out
loopne
aad
scas
dec
sub
xchg
jns
fnstcw
cld
pop
clc
adc
jo
pop
mov
loop
mov
movsb
mov
repz
pop
mov
and
pop
cli
enter
loop
xchg
negb
mov
xchg
cmpsl
inc
cli
aam
cmpsl
cmp
js
pop
mov
mov
mov
xchg
inc
rolb
cmp
jb
arpl
into
shll
sub
fnstcw
outsb
and
mov
outsl
adc
aam
insl
inc
mov
jno
adc
out
stos
mov
fsub
adc
and
or
mov
dec
cltd
dec
push
push
xchg
in
sti
jne
inc
mov
jae
pushf
sahf
jmp
stos
mov
fwait
ret
dec
push
push
pop
jmp
pop
sub
icebp
cmp
shll
sbbl
testl
push
jmp
push
rolb
repz
cmc
mov
repnz
sbb
mov
jp
and
dec
in
js
pop
mov
sbb
data16
outsb
movl
mov
frstor
roll
adc
pop
jmp
lods
lea
xchg
mov
inc
jmp
in
or
inc
ret
lahf
adc
ja
inc
xlat
loope
or
mov
mov
mov
sarb
xor
jo
movsl
lea
sub
enter
or
mov
mov
mov
neg
les
xchg
cld
mov
mov
jge
jbe
jge
or
pop
jmp
sti
fidivs
and
cltd
ret
and
push
addl
xor
popf
std
mov
sub
scas
xchg
shrl
inc
inc
test
dec
pop
pop
and
pop
push
ljmp
pop
push
cmpsb
lret
in
test
dec
lret
mov
sarl
jbe
into
daa
and
ljmp
add
fisubl
add
lret
arpl
mov
pop
jae
into
daa
cwtl
out
stos
cmc
jl
xchg
add
aaa
cwtl
jp
ss
addl
sahf
dec
cmpsb
adc
jne
out
pop
mov
repnz
inc
inc
in
daa
pop
pop
push
push
xchg
add
addr16
jmp
sub
jns
dec
fucomi
push
mov
pushf
fistps
outsl
cmpb
repnz
mov
cmpsb
outsb
nop
jl
jl
aas
jle
mov
push
jmp
pop
add
aaa
call
or
pop
mov
lahf
mov
repnz
push
int
into
jecxz
jle
pop
sub
or
push
mov
xor
rep
dec
js
mov
jo
sahf
mov
pop
lods
aaa
mov
push
lds
test
xchg
inc
loopne
insl
inc
in
mov
pop
mov
jp,pn
or
out
push
nop
pusha
pop
stos
daa
xchg
cli
lcall
pandn
daa
and
sub
loopne
movsb
popa
xchg
cmpsb
inc
mov
outsb
jge
in
lock
sub
mov
inc
int
mov
jl
and
jge
je
xchg
repnz
and
xchg
and
int3
je
and
xchg
iret
add
xchg
inc
cwtl
add
mov
mov
data16
mov
sub
xlat
inc
mov
ffreep
jno
into
mov
adc
fstl
rorb
mov
jbe
sub
mov
mov
push
popa
ja
push
mov
test
movsl
aaa
dec
mov
outsl
push
mov
mov
mov
cmp
push
and
aas
out
rorb
rcl
data16
pop
push
cmpb
mov
xchg
xchg
int3
fmuls
lcall
shll
stos
pop
out
xor
fdivr
xlat
decb
stos
jne
xchg
mov
jbe
xor
dec
mov
mov
mov
sub
mov
jnp
cmpsl
testl
pusha
push
pop
subb
cmp
adc
pop
stos
or
nop
int3
jecxz
movb
and
loop
hlt
int3
stc
popf
inc
or
push
pop
mov
popa
pop
loopne
rcr
or
insl
pop
imul
scas
sbb
dec
xor
adcb
push
push
add
inc
xlat
push
negb
dec
int
cmp
jo
xchg
mov
inc
in
mov
push
lret
push
mov
in
rcrb
sahf
push
imul
cwtl
sub
pusha
cltd
dec
jecxz
shl
xchg
cmpsl
jne
mov
cwtl
in
popa
loop
and
add
lods
clc
aaa
fldcw
daa
movaps
jecxz
fisttpl
pop
lods
in
inc
inc
out
or
adc
inc
popf
mov
and
lods
jle
rorb
addr16
aad
cmp
iret
push
leave
sub
xchg
pop
data16
mov
and
ja
and
rolb
movsl
mov
mov
stos
mov
aas
imul
pop
mov
sub
in
fsubrs
int
pop
or
rcr
sub
scas
or
mov
push
lcall
or
iret
pop
jge
pop
jnp
dec
cs
push
jns
out
ficompl
imul
aam
cmpsb
xor
sub
outsb
int3
inc
add
sbb
rcll
inc
mov
pushf
stc
icebp
sbb
or
cld
pop
xchg
popa
inc
pop
cltd
inc
aas
cmp
push
ja
or
jo
adc
push
pop
jecxz
push
ljmp
repz
push
xchg
jb
pop
jmp
sub
sub
xor
mov
ljmp
ss
sub
sub
push
mov
cmp
or
and
imul
out
add
leave
pushf
adc
xchg
cmpsb
popf
inc
ss
mov
shrl
jbe
mov
insb
push
or
ss
xchg
fstpl
mov
sub
fbstp
mov
imul
push
sbb
mov
inc
test
and
xchg
popf
push
cmp
and
stc
pop
adc
sbbb
cmpsl
pop
adc
jecxz
mov
in
jle
sahf
cmpsb
xchg
push
test
sub
and
bswap
fildl
sbb
in
push
adc
test
sub
sub
and
les
bound
jae
add
xchg
mov
int3
add
lods
popa
out
add
daa
in
mov
ds
and
sbb
std
or
add
loope
add
cli
push
sti
cmp
fmuls
and
or
mov
mov
stc
insb
mov
sti
inc
xchg
rolb
jb
add
lret
adc
dec
jge
dec
xchg
lcall
mov
mov
mov
add
sbb
pop
popa
pop
add
popl
in
pop
test
adc
fsts
inc
add
jae
mov
test
inc
cmp
test
js
inc
ja
inc
push
pop
pusha
je
fs
sub
mov
pop
subl
xchg
lahf
adc
push
xchg
pushf
les
jge
cmp
adc
rcr
xor
ficompl
in
fisubl
pushf
subb
or
rolb
cltd
mov
lahf
push
outsl
or
sub
and
add
daa
cmp
imul
sahf
aad
adc
fcmovb
in
pop
xor
out
fsubs
rclb
bswap
packuswb
pop
and
aam
cmc
xor
mov
jno
loop
ljmp
sarb
negl
cmc
lret
and
sub
push
xchg
fs
pop
inc
imul
popa
xorb
std
test
test
jp
and
push
inc
aas
movsl
cmpsb
sub
mov
repnz
jno
cmpsb
jnp
lods
push
dec
les
fidivrs
sbb
sahf
outsl
jmp
push
fsubrs
icebp
mov
jb
mov
stos
call
xchg
mov
sub
ss
mov
daa
fs
sub
loop
clc
sahf
push
mov
xlat
repz
fld
fadd
js
dec
cld
add
addr16
mov
in
nop
jo
or
or
fcompl
jmp
and
mov
lock
xchg
addr16
mov
push
pop
add
sub
xorb
mov
or
sahf
push
jno
lock
jae
cmp
stos
dec
sbb
xor
sub
lods
pop
push
mov
imul
rcrb
xchg
jge
xchg
cwtl
out
mov
pop
mov
out
mov
cmp
push
test
in
cmpsb
xchg
pop
inc
sub
cmp
inc
rcl
xchg
in
push
rcrb
xor
test
dec
aas
adc
fs
call
jb
in
mov
outsb
mov
add
cli
fdivs
dec
sti
repnz
aam
pop
adc
mov
cmp
inc
ret
xchg
mov
or
push
in
xor
xchg
mov
call
in
insb
popf
iret
inc
cmp
inc
jb
xor
stos
je
mov
flds
and
in
movsl
pop
movsl
xor
pop
mov
dec
iret
loope
pop
stc
addr16
and
adc
in
inc
mov
lea
xchg
dec
mov
pusha
lahf
xor
int3
fcmove
pusha
xor
xchg
jae
push
rcrl
push
xlat
aam
mov
adcl
push
and
imul
mov
xor
dec
add
pop
mov
pop
mov
subb
jnp
adc
push
aaa
ss
cmp
nop
mov
add
mov
sub
push
out
and
push
icebp
or
push
push
imul
faddp
into
sbb
aad
pcmpgtb
inc
fimuls
push
cmpl
int
imul
sbb
push
test
test
out
int
call
loopne
inc
cmpsb
xchg
imul
shrb
ljmp
cwtl
fwait
rolb
inc
jecxz
cli
nop
pop
dec
pop
xor
push
mov
xchg
jns
or
or
in
popf
cmpb
adc
outsl
lock
es
daa
in
sbb
xchg
loop
icebp
cmp
out
clc
ds
push
ret
mov
xchg
shlb
pop
and
and
pop
enter
cmp
pop
add
sub
jne
inc
icebp
dec
mov
in
jae
int3
sti
mov
test
dec
xlat
adc
inc
lods
int
xor
jp
mov
fistl
inc
ds
call
test
lahf
arpl
iret
sub
mov
adc
add
inc
and
xchg
jno
enter
mov
add
gs
xchg
lcall
icebp
xorl
ss
xchg
mov
dec
ret
imul
ss
divb
mov
xlat
inc
pop
lock
add
push
adc
sbb
lret
loopne
cmp
std
add
mov
loope
xchg
jne
inc
cltd
adc
out
inc
jge
les
fadd
subb
and
hlt
call
push
cmc
into
mov
jnp
fistps
sti
fisubrs
and
sarl
ja
mov
adc
xchg
sub
cs
dec
pushf
cmp
popf
and
dec
xor
sub
xchg
aas
sbb
stos
dec
add
in
push
orl
jb
ja
pop
in
ljmp
pop
sahf
push
jmp
xlat
xchg
cmp
pushf
dec
sub
mov
sbbb
orl
sbb
fstpl
push
xor
or
sbb
jl
clc
add
bound
stos
fsubrp
cmp
jno
aaa
cli
insb
adc
push
push
pushf
adc
pop
dec
pushf
lods
cmpsb
xlat
jno
pop
jns
dec
imul
ret
ljmp
add
push
test
js
add
addr16
dec
pushf
jo
in
sbb
movsb
pop
fwait
movsl
fwait
cmc
cli
mov
outsl
ja
and
das
and
sub
fwait
inc
inc
pop
dec
push
clc
testb
stos
ret
call
push
jb
repnz
xlat
frstor
xor
adc
in
insb
or
mov
mov
pop
jns
cmpb
cmpb
sub
and
adc
mov
fsubp
mov
mov
icebp
lret
xor
loop
sbb
rol
jmp
cmp
adc
lock
pop
push
outsb
pop
xor
xorb
dec
in
jle
or
lea
cmc
add
stc
mov
pop
jecxz
add
xchg
fcomps
into
or
xchg
cmp
into
jnp
xor
imull
sub
xchg
or
jge
rcr
sub
mov
mov
lahf
mov
pop
insb
adc
push
aaa
inc
mov
xchg
push
lahf
lods
jg
inc
adcb
cmpl
xor
mov
xchg
push
mov
sbb
jae
jnp
repnz
into
subl
xor
pop
push
jmp
inc
insl
fadds
in
xchg
loop
insl
testb
sbb
das
push
in
stos
xlat
add
add
xorb
psrlq
into
push
xchg
adc
pusha
sbb
jo
push
std
outsl
jge
fcmovbe
xor
jae
or
shll
mov
lods
dec
sbb
xor
or
dec
ds
sbb
sub
mov
pop
pop
pcmpeqb
or
dec
stc
or
jae
push
fisubrs
push
inc
sub
sbb
mov
or
jns
out
pop
add
mov
cld
pusha
mov
fimuls
test
sbb
sub
mov
shrl
sbb
dec
repnz
mov
or
cwtl
ret
mov
adc
inc
into
inc
popa
pop
iret
inc
adc
int3
pop
loope
aad
add
mov
popa
push
jbe
mov
out
pushf
and
mov
sub
jno
ds
pop
adc
xorl
add
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
lea
or
mov
xor
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
addl
mov
sbbl
xor
subl
add
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
sbb
push
adcl
mov
adc
mov
mov
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
pushl
call
cmpl
jb
xor
mov
andl
add
cmp
movl
je
mov
jmp
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
subl
xor
push
sbb
add
add
xor
mov
add
push
mov
adc
mov
xor
movl
xor
movl
cmp
jne
movl
cmp
jne
movl
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
xor
mov
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
sub
addl
push
push
xor
movl
push
call
mov
notl
push
mov
addl
lea
andl
push
push
subl
push
push
sbbl
call
movl
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
push
xorl
call
test
movl
jne
orl
push
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
push
call
test
movl
jne
movl
mov
mov
xor
addl
lea
orl
push
mov
sbbl
xor
lea
push
and
mov
sbbl
pushl
addl
call
adcl
mov
andl
mov
movzbl
sub
xor
lea
sub
mov
mov
incl
xor
addl
xor
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
call
cmpl
jb
mov
subl
xor
lea
movl
mov
push
cmp
movl
jbe
sub
mov
xor
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
movl
sub
orl
xor
andl
mov
adcl
lea
sbbl
mov
xorl
lea
orl
mov
subl
lea
andl
push
push
push
push
xorl
call
movl
shl
cmp
jne
notl
push
call
adcl
test
movl
jne
addl
push
call
test
jne
push
lea
xorl
push
push
adcl
push
push
call
shl
cmp
jne
push
call
test
movl
jne
sbbl
push
xorl
call
test
movl
jne
sbbl
push
lea
push
push
push
adcl
push
call
movl
shl
movl
cmp
movl
jne
push
subl
call
adcl
test
movl
jne
orl
push
call
adcl
test
jne
orl
push
lea
subl
push
notl
push
subl
push
xorl
push
call
shl
movl
cmp
movl
jne
push
call
subl
test
movl
jne
subl
push
call
test
jne
negl
push
lea
push
push
addl
push
notl
push
movl
call
shl
cmp
jne
push
addl
call
orl
test
jne
andl
push
xorl
call
orl
test
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
shl
cmp
movl
jne
xorl
push
call
orl
test
jne
push
subl
call
test
jne
orl
push
orl
lea
andl
push
addl
push
push
adcl
push
call
shl
movl
cmp
movl
jne
push
call
test
movl
jne
incl
push
sbbl
call
test
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
push
call
test
jne
xorl
push
lea
push
xorl
push
andl
push
push
decl
call
movl
shl
movl
cmp
movl
jne
sbbl
push
orl
call
test
jne
andl
push
call
xorl
test
movl
jne
push
incl
lea
push
xorl
push
xorl
push
adcl
push
call
movl
shl
movl
cmp
jne
push
call
test
jne
push
call
test
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
je
xor
jmp
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
or
mov
sub
mov
mov
adc
movl
sub
mov
and
jmp
and
push
sti
shlb
jg
jmp
jns
sbb
jp
add
pop
mov
adc
or
in
fisttps
push
cmp
outsl
pop
icebp
out
mov
cmp
inc
outsb
jmp
and
ficoml
xchg
ds
je
out
mov
mov
push
adc
xor
sub
mov
jmp
add
mov
test
and
rcl
mov
aad
mov
cmc
lcall
pusha
push
fsubrs
dec
push
and
dec
push
sbb
pop
faddl
and
sub
in
push
cmp
adcb
cli
sbb
dec
cltd
xchg
mov
rclb
fcomip
mov
xlat
cs
mov
xchg
pop
cmp
jbe
mov
les
inc
in
mov
adc
lret
and
es
add
xor
daa
sti
dec
inc
dec
fldt
stos
lods
push
and
mov
dec
xlat
gs
out
stos
push
push
lods
movsl
lea
cltd
fisubrl
adc
je
negb
or
sahf
xor
fldenv
bound
stc
lea
int
jle
sub
mov
les
jne
movsl
cmp
pop
add
dec
pushf
mov
mov
test
in
lret
mov
pop
mov
es
sub
fld
mov
rolb
clc
push
jno
pop
dec
jo
mov
out
push
mov
es
inc
hlt
xchg
jge
lods
pop
jecxz
jecxz
sub
pop
stos
leave
xor
mov
div
push
daa
sub
jae
rorl
sbb
cmpsl
stc
test
popl
sbb
into
add
dec
xor
aas
sub
lods
ret
xchg
loop
push
cmp
push
sbb
jo
jno
push
addr16
sbb
je
push
push
insl
clc
cltd
and
daa
fmul
add
sahf
fistps
mov
pop
cmp
data16
cli
adcb
mov
shrl
fcoml
add
fstpt
dec
jecxz
ds
cs
dec
out
ljmp
insl
lret
jecxz
out
add
push
les
iret
std
fcmovnu
lahf
dec
mov
movsl
jns
mov
cli
inc
and
jl
sbb
jecxz
cli
jecxz
mov
out
pop
dec
ret
xchg
push
outsl
mov
gs
cmp
es
shll
int
mov
divb
jp
sub
or
pop
enter
jmp
lods
std
das
add
imul
mov
jp
inc
dec
push
hlt
push
xchg
mov
negl
pop
cltd
and
or
sahf
mov
add
jmp
int
xorb
mov
stos
andl
mov
mov
iret
mov
mov
cmp
mov
jns
fisttps
scas
adc
add
push
add
dec
cmp
lea
pop
inc
ja
jg
hlt
sbb
ret
mov
std
jno
lds
jb
aas
int3
push
jle
rclb
nop
add
add
adc
xchg
xchg
mov
pop
mov
testb
mov
and
mov
dec
pop
or
push
mov
cmp
and
leave
sbbl
clc
mov
jns
push
push
cmp
pop
jl
lods
jns
pop
shl
and
sti
push
fneni(8087
push
nop
jmp
orb
xchg
hlt
loop
mov
xchg
call
and
mov
ja
push
movsb
xor
cmpsl
mov
popf
jb
js
jb
in
mov
push
test
clc
lock
hlt
fcmovne
jne
incl
iret
inc
aam
in
pop
inc
mov
mov
inc
jecxz
mov
jae,pt
push
rcr
mov
std
mov
mov
js
adc
mov
fs
jbe
outsb
xchg
das
orb
pusha
mov
adc
pop
pushf
push
sub
out
pop
lret
dec
xchg
int3
shll
shlb
pop
mov
js
xchg
cmp
mov
and
push
xchg
mov
or
push
add
xchg
lock
dec
movsb
mov
mov
sbb
daa
jmp
push
adc
push
mov
shlb
test
and
xlat
xor
inc
imul
mov
adc
push
xor
xlat
or
shlb
out
and
xchg
or
das
pop
out
fcomi
jae
dec
sub
sub
lcall
hlt
aas
xchg
add
loope
imul
xor
addr16
cmpl
push
adc
xchg
push
push
cwtl
xchg
leave
popa
pop
gs
dec
push
cmc
jg
xor
mov
and
icebp
ds
mov
mov
mov
mov
in
dec
fwait
sub
xchg
std
out
cwtl
ja
in
add
sub
lds
sbb
in
pop
mov
iret
mov
xor
and
or
inc
out
jns
and
mov
and
cltd
push
movsl
xchg
fwait
test
sbb
push
sub
push
adc
pop
inc
xchg
jmp
add
movsl
sbb
xchg
bound
jne
inc
pop
mov
pop
push
loop
mov
and
addr16
mov
sub
pop
das
pop
xor
sbb
pusha
cld
xchg
mov
and
in
lret
push
mov
aad
sbb
fxch
testb
cmc
sbb
stos
cltd
insl
fidivs
lret
insl
in
fsubrs
mov
pop
cmp
movsb
dec
mov
dec
xlat
int
jne
aaa
call
loop
xchg
loopne
lcall
insl
cmp
pop
push
xchg
push
xchg
cmp
adc
xchg
sub
xchg
cli
sbb
xor
roll
jmp
push
je
mov
mov
test
das
adc
repnz
aad
cmpsb
pushf
mov
jp
mov
lds
arpl
mov
cli
std
in
mov
shlb
setno
pop
mov
xchg
icebp
ficoml
sub
out
fwait
lds
addl
dec
movsb
scas
scas
and
imul
cmpsl
lock
ror
jmp
add
repnz
into
or
mov
xchg
iret
loop
sub
add
and
test
test
mov
insl
stos
pop
rcrb
cmpsl
mov
cltd
dec
and
add
jno
adc
xor
in
xor
scas
loop
stc
xor
jp
adc
mov
das
ret
repnz
cmpsb
push
lods
ljmp
mov
fistpl
mov
outsl
fsubrp
inc
mov
jb
test
jg
push
dec
mov
add
addr16
jmp
add
lock
or
mov
sub
mov
push
jnp
jg
ss
mov
call
shlb
push
stos
popf
jp
pop
sbb
js
in
outsl
cmp
mov
cmpsb
repz
inc
enter
and
adc
sahf
insl
push
mov
mov
pushf
sbb
cwtl
xlat
push
and
insb
iret
scas
mov
fstps
les
bound
dec
xchg
shrb
ret
lods
xor
xchg
pandn
and
loope
aaa
rcrb
nop
aaa
sbb
daa
xchg
gs
mov
lods
xchg
sbb
sub
jg
popa
cmpsl
inc
std
jns
xchg
cmp
dec
jle
sub
add
imul
out
leave
mulb
sub
imull
out
orb
mov
push
pop
int3
mov
xchg
in
outsl
or
or
daa
sbb
mov
mov
scas
xchg
lahf
pop
lret
ss
fidivrs
dec
add
add
jns
xlat
or
add
out
push
out
jle
sbb
in
mov
nop
xlat
sahf
clc
pop
bound
jle
pop
mov
or
stos
je
push
out
std
xlat
pushaw
daa
mov
adc
adc
pusha
nop
mov
lock
call
jge
sbbl
pusha
rol
and
pop
icebp
loope
je
sahf
lahf
loope
jbe
add
dec
imul
push
mov
cmp
pop
mov
sub
and
push
mov
add
or
xchg
dec
mov
fsubl
out
ficoml
iret
ljmp
stos
adc
sub
adc
add
sbb
mov
lock
or
or
mov
xchg
jnp
test
mov
push
sbb
clc
ss
sbb
cli
fwait
hlt
mov
int3
xor
add
loopne
je
rcrb
ror
and
mov
hlt
cmc
cmp
mulps
test
ds
or
cwtl
insb
addr16
adc
xlat
nop
xlat
dec
rcrb
dec
push
fldl
mov
call
jg
mov
ret
sbb
xchg
add
stc
pop
clc
cmp
xor
fdivrl
cmpsb
adc
jb
cmp
shrb
and
push
inc
outsl
pop
adc
shll
pop
sbb
push
pop
and
pop
aam
scas
xchg
mov
out
cmpsl
jns
mov
adc
mov
ret
inc
or
aaa
inc
out
ja
imul
add
lahf
xor
rolb
pop
push
hlt
xor
mov
jl
push
cwtl
jmp
outsb
in
nop
hlt
mov
mov
adc
dec
sub
inc
mov
jbe
lcall
inc
push
push
dec
popf
dec
es
mov
or
xor
shlb
adc
lock
xchg
xchg
jns
push
mov
pop
shlb
or
pop
pop
gs
mov
mov
mov
mov
xchg
pop
nop
xchg
jae
adc
push
inc
sub
adc
cmpsl
dec
inc
notb
sbb
out
sub
jp
mov
pop
push
cpuid
movsb
and
pop
inc
popf
loopew
mov
std
and
std
lret
movsl
cmp
div
pop
cmp
dec
cmc
pop
iret
enter
xlat
je
or
rorl
sbb
xor
mov
inc
inc
sbb
add
cmp
arpl
add
adc
popf
mov
sbb
cld
into
out
pop
stos
out
mov
pop
jb
pop
ljmp
mov
adc
push
and
fldenv
in
fisttpll
pop
aas
mov
and
lea
pop
ljmp
jg
adc
leave
cmp
movsl
pop
shlb
or
shlb
subb
out
and
cmp
ret
jmp
fists
or
mov
inc
push
add
sbb
test
and
pop
mov
aas
shr
push
mov
inc
sbb
and
xor
push
test
subl
sbb
push
subl
stos
xchg
mov
out
inc
adc
test
aas
insl
xchg
repnz
bound
jmp
push
in
movswl
lcall
scas
xor
push
dec
das
test
mov
cli
daa
xchg
sbb
jne
fwait
nop
cwtl
imul
ds
or
sub
push
ja
mov
lahf
cli
mov
lahf
gs
call
cmp
aam
popa
adc
dec
ds
fildll
loopne
cmp
add
pop
adc
or
scas
mov
inc
mov
jl
fbstp
adc
gs
popf
addr16
push
in
pop
or
adc
cmp
mov
ret
rorl
xchg
inc
iret
test
mov
fsubrs
xor
ja
adc
shl
lahf
push
inc
lret
add
pop
mov
fcoms
popa
push
and
inc
add
mov
mov
mov
test
lock
sbb
daa
xchg
stc
movsl
xor
imul
add
subb
push
push
sti
fdivs
pop
in
cwtl
in
rcrl
lret
jne
test
add
outsb
push
dec
sbb
in
pop
insb
shll
push
imul
sub
jno
mov
jns
inc
in
dec
fwait
and
into
mov
xor
jle
pusha
pusha
aad
int
pop
enter
mov
rcll
les
or
stc
ret
imul
sbb
mov
ss
orl
push
loopne
pop
push
data16
idiv
mov
dec
sbb
je
adc
inc
pop
insl
or
xor
pop
and
sbb
push
mov
es
xchg
push
imul
pop
mov
repz
leave
ja
pop
loopne
es
popf
adc
push
xchg
out
mov
dec
inc
xorl
mov
xor
and
add
std
xchg
sti
xchg
or
lea
lahf
les
es
popa
jae
push
out
xchg
add
xchg
jg
ss
jg
movsl
xchg
mov
aam
bnd
out
cmp
fistl
es
cmpsb
repnz
insl
shrl
lock
xorl
fsubr
mov
inc
into
ja
rol
cli
xor
mov
inc
xor
ret
insb
sub
shrb
sub
adcl
inc
aad
or
nop
gs
pop
ds
ljmp
pop
fsubs
mov
pop
adc
add
sub
les
adc
out
mov
mov
add
mov
dec
loop
jg
jo
mov
in
rorl
mov
pop
mov
xchg
or
rclb
shrb
out
fistpl
adc
in
mov
mov
loopne
xchg
pushf
jno
adc
adc
mov
jb
push
pushf
into
lcall
jb
lcall
pushf
insb
xchg
cmc
push
mov
sub
fmul
pop
mov
sub
pop
shrl
sub
daa
mov
mov
rclb
into
daa
aam
cltd
inc
insb
mov
mov
mov
lahf
jbe
sbb
jnp
adc
fs
dec
mov
pop
jg
jge
add
js
in
jmp
out
popa
fs
mov
add
mov
stos
ss
cmp
pop
in
out
jnp
dec
mov
sbb
xor
das
inc
das
loop
mov
sub
into
push
cmp
cmp
dec
xlat
inc
push
lods
mov
jge
adc
xor
pop
sub
rcr
test
mov
out
aad
repnz
lret
push
inc
repnz
push
bound
popf
push
mov
mov
aaa
cltd
jp
inc
popa
xor
jle
jp
icebp
iret
imul
adc
test
aas
cmp
inc
stos
inc
jno
and
es
mov
mov
lahf
sarl
int
mov
lcall
out
cmc
cmp
push
push
xchg
cld
je
out
add
mov
sbb
add
pop
das
jecxz
jnp
inc
add
pop
dec
test
and
std
outsb
xchg
repnz
add
leave
sbb
mov
in
xchg
dec
scas
ds
popa
push
cmpsb
sbb
pop
jns
in
imul
mov
and
add
jo
sbb
cmc
sbb
addr16
insl
sbb
xchg
sbb
and
enter
cltd
jae
ret
push
andb
orl
xor
pop
enter
and
out
adc
cld
stos
sub
leave
push
in
fnstenv
fstpt
filds
inc
loopne
xlat
sahf
fidivl
data16
out
xchg
xlat
arpl
insl
fmulp
lret
imul
cmp
jmp
test
or
pusha
test
dec
xor
mov
sub
mov
sbb
lods
pusha
lock
jmp
je
hlt
loopne
jl
jge
pop
repz
mov
jecxz
ss
imul
xchg
dec
pop
xchg
test
jb
push
loop
or
lahf
pop
sbb
mov
xchg
fcmove
sbb
inc
mov
mov
jb
adc
daa
sub
jb
std
lods
dec
scas
mov
mov
jb
or
xorb
sub
pop
jo
fstps
mov
xor
and
adc
push
xor
sar
movsb
cs
add
sbb
adc
lret
jnp
mov
inc
or
sbb
and
cmc
inc
pusha
cwtl
incb
push
sub
imul
aam
inc
sbb
fcompl
and
int3
outsb
xchg
int
inc
lahf
jg
inc
scas
test
xchg
mov
adc
js
dec
xchg
cmp
mov
fisubl
out
sbb
sbb
mov
pop
in
fwait
sbb
add
push
push
loopne
bound
insl
into
lcall
pusha
xor
mov
jae
std
xor
sub
sub
xchg
jl
in
lcall
inc
mov
call
jg
push
cmp
test
xchg
cmp
aaa
rclb
out
in
adc
call
pop
inc
xchg
addr16
enter
sub
push
jno
xchg
das
dec
mulb
pop
out
and
xchg
popa
jns
shll
jp
mulb
adc
insb
mov
mov
sub
jb
dec
adc
leave
xchg
and
fildl
mov
mov
jne
mov
xchg
and
inc
pop
sub
in
pop
mov
or
push
xchg
imull
push
or
dec
pop
dec
push
and
push
es
inc
cmp
ss
mov
sub
jnp
push
popa
add
into
and
movsl
inc
loop
stc
shlb
inc
shrl
and
inc
sub
fisttpll
add
stos
shll
lahf
xchg
fistps
add
stc
testl
call
movsb
mov
and
popa
xchg
pop
imul
fs
mov
sbb
rcr
xchg
mov
pop
lret
in
clc
pop
mov
ret
pop
mov
insl
mov
or
lea
popa
lds
mov
adc
popa
sbb
mov
dec
dec
notb
lret
adc
sbb
jae
je
or
daa
cmp
push
mov
inc
gs
sbb
cmp
sti
cmp
aaa
aad
std
es
adc
pop
mov
jb
lods
mov
sub
jmp
push
aas
stos
or
pop
jb
je
pop
jmp
cmp
fisttpll
pushf
fninit
and
daa
sti
ja,pn
jae
loop
stos
dec
xchg
cmp
repnz
or
inc
inc
cmpsb
sub
hlt
add
popf
filds
int3
mov
push
dec
std
dec
adc
dec
test
push
test
movsl
push
adc
xor
xor
mov
pop
sbb
adc
dec
adc
or
mov
clc
xchg
xchg
lcall
mov
cmp
or
icebp
mov
movsb
shlb
xchg
ja
subb
xchg
sub
sub
xchg
sub
shrb
ja
stc
mov
in
push
lret
stc
mov
scas
xor
jne
mov
mov
mov
cmc
or
imul
fadds
adc
icebp
ljmp
ret
add
inc
dec
jbe
mov
sbb
fnsave
rcrl
push
dec
jecxz
loope
inc
popl
push
jle
and
into
add
imull
mov
push
fcompl
mov
and
int3
xchg
mov
negb
or
dec
push
shl
aad
lret
addr16
xchg
dec
aam
outsl
jae
sti
inc
addb
sub
lcall
adc
rcrl
sbb
cmc
fstp
jo
push
jmp
pop
xor
mov
push
pop
cmp
imul
fidivrl
movsb
ljmp
xchg
push
insb
gs
jmp
xor
xor
sbb
adc
or
enter
das
pop
ret
rorb
sbb
add
push
icebp
xor
scas
leave
pop
dec
push
out
movsb
pop
xor
dec
mov
add
sbb
dec
lret
scas
dec
outsb
xchg
mov
jl
mov
lret
stc
testl
mov
xor
fwait
rclb
push
sub
add
out
enter
pop
cmp
pop
or
enter
pop
xor
cmpsb
xchg
jge
mov
xor
mov
jmp
int
jp
dec
sbb
jmp
mov
iret
sub
pop
fiadds
adc
test
fwait
lret
or
jecxz
loopne
movsl
imul
sub
xchg
and
cmp
inc
sbb
cltd
ds
dec
ja
fdivrs
aad
js
insl
pushf
jg
jbe
repz
in
cmp
or
lcall
push
popf
jo
xchg
or
gs
gs
pop
imul
sub
and
adcl
push
loop
loope
mov
test
je
mov
shl
and
lret
gs
test
nop
imul
arpl
adc
or
scas
xchg
out
mov
mov
test
mov
adc
mov
insb
sbb
jns
stos
ds
je
push
ret
sub
outsl
in
xchg
outsl
add
hlt
andl
in
stos
and
add
push
mov
dec
insb
andb
mov
lods
lds
lret
cmp
cmp
mov
stos
in
inc
sub
push
adc
ffree
inc
mov
add
push
mov
fisttpl
jg
in
sub
mov
ret
clc
hlt
sahf
in
popl
push
mov
sbb
jecxz
arpl
cmp
push
ret
jecxz
dec
and
icebp
cmp
repz
pop
inc
sub
add
jo
or
cwtl
fdivrl
or
pop
pop
push
pop
icebp
call
cmpsl
xor
int
insl
fidivl
mov
ljmp
pop
cmp
xchg
orl
sarb
sub
cmpsb
cmc
mov
inc
fs
hlt
cli
aaa
push
lods
push
xchg
lods
adc
jmp
shlb
and
or
in
pop
outsl
pop
dec
das
fwait
push
xchg
add
in
ret
fidivrs
and
imul
je
sub
in
mov
lcall
mov
lds
popf
cwtl
mov
dec
xchg
cmp
les
xchg
dec
pop
dec
outsb
cmp
push
mov
jb
adc
dec
cs
sbb
roll
dec
lods
insl
rol
pop
sub
mov
push
enter
fistps
sub
out
mov
int3
cli
cmp
ljmp
cmp
add
pop
mov
sub
pop
lahf
sub
lods
cmc
popa
jns
sarl
jbe
sahf
jg
lcall
or
and
punpckldq
aas
sbbb
std
sbb
mov
lds
aaa
lret
sbb
out
aaa
in
and
or
movsb
jb
push
bound
mov
mov
fstpl
add
enter
popf
jl
jae
das
mov
imul
shlb
enter
xorb
js
and
sub
xlat
lea
or
incl
push
enter
sahf
fstps
loop
or
sbb
lock
and
jle
cmp
cmp
push
push
mov
pushf
movsb
out
test
jecxz
jl
inc
adc
pushf
and
daa
movsl
mov
fnstsw
int
mov
sbb
lds
dec
xchg
push
xchg
cmpsl
outsl
mov
inc
cmp
mov
mov
cmp
mov
fidivl
xlat
add
xor
mov
out
sahf
inc
mov
cmp
push
scas
lock
cld
fadd
loope
jg
sbb
mov
data16
movsb
inc
aaa
adc
ret
sub
adcb
xchg
or
or
imul
movsl
filds
js
sbb
loop
dec
gs
and
sbb
jo
push
ds
mov
jnp
out
movsb
sub
ret
ja
adc
inc
enter
mov
xchg
loop
sti
bound
add
mov
lea
xor
cltd
cwtl
jae
daa
or
jo
and
outsl
js
imul
push
add
jl
mov
loopne,pt
xchg
outsb
inc
pop
inc
xchg
sbb
roll
loop
sub
outsl
cld
cmp
ret
rorb
clc
mov
push
pop
mov
add
cmp
je
out
mov
ss
mov
xchg
scas
in
add
inc
stos
jge
int3
repnz
push
shlb
jae
mov
out
ret
mov
push
lds
pop
inc
xchg
cmpb
push
jb
loope
or
scas
movsl
pusha
mov
ds
mov
call
pop
cltd
icebp
lea
inc
pop
push
cmp
xor
sarb
jno
ror
adc
xchg
pop
cs
pop
and
nop
shll
ljmp
out
jb
push
push
fldl
out
rorl
daa
jb
and
aaa
sahf
xchg
jae
out
mov
ljmp
mov
cmpl
mov
add
fnstsw
add
sbb
mov
stos
inc
mov
add
mov
jb
jbe
push
shlb
loopne
cmpsb
jbe
aaa
sub
push
adc
fwait
ljmp
xor
mov
mov
mov
xor
jns
xor
sbb
and
mov
enter
push
mov
insl
aad
mov
in
icebp
sbb
in
lcall
lret
mov
nop
or
insl
mov
xchg
lcall
mov
popa
xor
jmp
loop
das
xchg
pop
fnstsw
mov
stos
repnz
and
roll
clc
adc
pop
out
mov
and
xchg
sbb
fldcw
or
push
fistpl
ret
inc
stc
mov
pop
pushf
jnp
mov
sub
adc
fsubrp
fmuls
add
out
lret
int3
fistl
xchg
in
add
addb
aaa
fdivl
xor
hlt
fisttps
retw
popa
sub
xor
xor
aas
inc
shlb
pop
inc
mov
popa
je
loope
icebp
test
xlat
test
sbb
jnp
imul
push
sub
xchg
std
nop
cmc
int
adc
dec
lea
jne
es
xchg
test
dec
or
xor
xchg
inc
jle
push
xor
adc
pop
test
stos
out
xor
mov
cmp
mov
jl
aad
cmp
lock
popa
sahf
adc
cmp
imul
push
xor
mov
insb
jp
pop
rol
scas
in
cmc
addr16
sbb
data16
clc
lds
adc
out
cmp
sbb
lds
aam
lcall
les
jo
insl
imul
jl
jno
imul
js
xchg
push
mov
mov
mov
dec
ja
pop
or
add
aaa
inc
loope
add
cmc
fwait
or
and
mov
xchg
cwtl
add
xchg
adc
into
fstl
mov
cmpl
test
or
flds
mov
pop
cmp
xchg
arpl
ljmp
mov
pop
sub
mov
out
cmp
iret
das
dec
sub
je
int3
cmc
xchg
sbb
repnz
xchg
dec
and
add
mov
out
sbb
jmp
ja
dec
call
jae
popa
hlt
push
daa
in
fstpl
xor
loopne
js
push
push
cmpsl
loope
fldenv
mov
lods
jbe
and
aam
push
jae
es
pop
inc
jbe,pt
xchg
lea
mov
push
adc
das
push
push
cltd
insb
or
sub
repnz
in
arpl
cli
ret
mov
push
jmp
dec
push
adc
mov
ret
xorb
pusha
cltd
sub
mov
cmp
ljmp
fwait
sub
fdivl
leave
repz
xchg
push
or
fmull
cvttps2pi
fcompl
dec
cmp
lea
or
mov
sub
aam
and
fcomps
psubsb
insb
sub
pop
imul
outsb
lods
into
fmull
adc
cli
xlat
xchg
mov
lods
mov
lcall
repnz
out
cmp
in
enter
push
scas
adc
nop
sbb
and
iret
lods
out
lods
cmp
jb
jle
mov
inc
ljmp
repnz
repnz
jecxz
cwtl
hlt
mov
cmp
ud2
test
sbb
imul
fcompl
int
sub
mov
mov
pop
aam
pop
pop
inc
jmp
fwait
adc
sbb
imul
dec
dec
enter
xchg
repz
sbb
fisubrl
into
jne
fsts
pushf
or
subl
push
xor
mov
dec
adc
jecxz
xchg
mov
inc
sbb
jno
outsb
in
lret
mov
cld
push
push
loop
inc
jb
pop
sbb
stc
mov
jne
sbb
fcom
test
int3
jecxz
mov
aam
aad
dec
daa
sbb
pop
mov
lret
mov
das
hlt
push
xchg
fsubl
pop
mov
scas
cmpsb
sahf
mov
dec
lret
pop
cli
sbb
lods
and
movsb
dec
lcall
inc
push
mov
cwtl
insl
and
out
loop
inc
rcll
pop
xor
push
mov
push
xor
les
sbb
sub
sti
cmp
push
mov
or
das
inc
repnz
stos
fsubrl
cmp
adc
sbb
lds
xchg
cmp
pop
scas
out
adc
and
sbb
test
ds
lea
pop
xchg
roll
ljmp
jge
arpl
mov
add
sub
inc
xor
dec
xlat
add
addr16
cld
mov
mov
loop
and
jecxz
adc
cli
les
das
sbb
mov
fstl
ljmp
stos
cmpsl
push
cltd
ffree
jno
loop
xchg
mov
mov
cltd
fstps
icebp
inc
pop
xchg
jo
sbb
pop
push
aad
decl
sbb
xor
negb
xchg
lods
in
mov
mov
or
sahf
ljmp
mov
sub
adc
add
xor
shl
fcompl
xchg
iret
loope
inc
mov
xor
cwtl
pop
rcr
mov
arpl
xor
int3
add
xchg
repnz
sysexit
arpl
push
xor
aaa
inc
pop
icebp
stc
xchg
fcoml
sbb
push
hlt
xor
pushf
movb
and
xor
into
mov
inc
jge
or
loopne
cwtl
js
inc
xor
addr16
test
leave
sub
dec
cmp
mov
lcall
cmpsl
sti
cmp
test
add
xchg
adc
xor
mov
pop
mov
ret
mov
addr16
xchg
fldt
aam
aaa
push
add
jl
add
xor
fsts
inc
icebp
mov
lea
mov
cmc
je
je
xchg
and
push
xor
sbb
jno
mov
push
sti
sub
lods
jne
gs
dec
stos
push
mov
test
xor
mov
jbe
xor
mov
adc
xchg
sub
sbb
xchg
adc
mull
cld
das
add
repz
xor
xor
push
cmp
jae
sub
movsb
inc
add
add
add
sldt
add
rolb
adc
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
and
xor
xor
mov
subl
push
mov
add
cmp
je
adc
mov
mov
adc
mov
xor
xor
orl
add
adcl
add
movl
adc
adcl
xor
movl
mov
push
adc
xor
xor
add
mov
add
movl
adc
subl
xor
xor
cmp
movl
jne
cmp
jmp
xor
stos
sub
cmc
inc
jmp
clc
dec
mov
jp
pop
jp
cld
test
xchg
notb
fninit
bound
sub
addr16
jge
popa
or
cmp
faddl
dec
xchg
and
sarl
jbe
clc
dec
loop
jge
add
xchg
loope
lock
je
mov
stos
cmp
jp
shlb
jmp
mov
shll
xor
cmp
dec
into
jno
jecxz
ret
lds
and
data16
jae
imul
arpl
aam
mov
loop
dec
test
add
push
rclb
pop
push
push
arpl
sub
xchg
idivb
or
fldl
push
popa
dec
cmpsb
repz
inc
mov
out
es
mov
mov
mov
push
adc
ss
push
and
pop
cs
mov
mov
fldl
add
mov
jne
mov
adc
cmpsl
cmp
dec
cli
xor
fcompl
cmp
scas
and
sub
mov
xor
scas
cmp
outsl
jg
xlat
sbb
aaa
xchg
dec
dec
rorl
cmc
out
sbb
xchg
leave
cmp
aam
jno
pushf
lahf
sbb
aas
xor
dec
pop
imul
fisubl
jl
jo
xchg
xor
mov
repz
mov
hlt
inc
adc
cld
out
popa
inc
addr16
sub
xchg
mov
lret
repnz
jecxz
loop
jo
out
lea
sbb
nop
frstor
fadd
xchg
negl
out
repnz
fsts
adc
adcl
es
cmp
inc
adc
lahf
mov
xor
adc
jg
jle
mov
imul
mov
insb
adc
dec
xor
mov
push
adc
cmp
ret
and
push
lds
jmp
in
and
mov
sbb
movsb
aad
jp
lock
pop
stc
inc
mov
jp
dec
add
fwait
aam
sub
ss
test
xor
sbb
and
mov
cltd
add
pop
enter
ja
mov
out
shr
sbb
fwait
mov
mov
ret
fstps
loop
pop
push
lret
dec
dec
cmp
lods
insl
insl
cs
sbb
xor
mov
pop
rcl
adc
lret
mov
sti
mov
dec
push
in
pop
sti
jne
pop
fadd
sbb
std
stos
pusha
cwtl
dec
cs
enter
pop
call
cltd
cmpsl
and
pushf
pushw
nop
aaa
sub
jle
adc
mov
ret
xchg
cmp
cmp
pop
and
js
xor
cmc
adc
iret
mov
nop
sbb
cmpsb
pop
adc
sub
popf
frstor
les
mov
aaa
ret
cmp
stos
inc
adc
inc
add
sarl
jmp
mov
fsubr
jle
fists
inc
rorb
fwait
dec
cmp
jns
xor
jmp
flds
jbe
lea
mov
js
push
push
mov
notb
jns
mov
jnp
dec
jl
fbstp
jns
movsb
cmpsl
addb
dec
mov
lods
and
jbe
mov
jecxz
and
scas
ja
ja
dec
push
cmpsb
push
jnp
shl
insb
xchg
out
rcl
fcomps
sbb
push
pop
aam
xorl
clc
push
imul
arpl
pop
fwait
xchg
dec
sub
or
lret
cmp
int
adc
pop
cs
test
mov
bound
in
js
mov
push
cmpsb
imul
rol
ljmp
fisubl
stc
fcoml
idiv
sahf
pshufw
lret
push
dec
inc
pop
mov
xor
dec
or
dec
in
inc
adc
cmp
test
push
mov
inc
mov
jnp
add
xchg
insl
mov
out
int
jmp
ljmp
stos
int
sub
adc
adc
rol
push
aaa
test
xchg
mov
or
hlt
cwtl
stos
adc
sub
insb
jmp
enter
mov
std
mov
inc
std
sbb
sbb
lock
js
insl
push
and
or
or
sbb
nop
lcall
pop
sub
jns
sub
sub
adc
fcomi
idivb
or
push
sub
fwait
push
push
dec
pop
aam
adc
jno
test
sar
sbb
lock
cs
push
cmp
ror
bound
sbb
and
pop
inc
mov
mov
jae
lods
jnp
cltd
lds
fsubrl
gs
mov
adc
pop
push
inc
out
sub
les
dec
or
out
sbb
daa
pop
nop
loopne
lds
adc
int
loop
dec
jbe
ss
aad
mov
jmp
xor
stos
mov
jns
jg
inc
xor
mov
mov
pop
cmp
nop
fdivs
push
cmp
cld
add
cmp
push
out
xor
xchg
cmpsl
stos
cltd
dec
into
xor
scas
pusha
adc
add
pop
sbb
jae
jge
scas
add
shrb
and
adc
mov
cmp
stc
cltd
iret
sbb
and
inc
jae
mov
sbbl
pop
xchg
lods
xchg
xor
in
sahf
mov
es
cmp
int
dec
daa
mov
cmp
mov
add
mov
in
icebp
fidivrs
out
dec
push
jge
push
fucom
pop
imull
cwtl
sub
add
xor
loope
mov
push
and
popf
and
fstp
add
xor
scas
mov
mov
jecxz
repz
sbb
push
mov
xor
ud0
mov
sarb
out
fnstenv
add
sub
jbe
push
and
bound
mov
adc
pop
test
xchg
cmp
fistpll
inc
pop
inc
mov
fnstenv
inc
jp
adc
push
sub
into
mov
push
and
cld
sti
pop
jge
jge
mov
jno
and
jp
addr16
or
out
sbb
orl
jno
lret
cli
push
push
dec
outsb
mov
clc
test
dec
or
lahf
jge
xchg
push
adc
or
inc
in
xor
cmp
adc
and
push
fidivrs
dec
dec
adc
sbb
mov
arpl
mov
dec
test
inc
ja
mov
cwtl
or
shrb
mov
dec
mov
icebp
adc
stos
ror
lea
cmpl
aam
ret
xchg
movsl
lahf
pushl
enter
sahf
int
jecxz
sahf
xor
stos
test
cmpsl
outsl
mov
std
mov
imul
ficompl
jno
bound
or
shll
in
test
call
lcall
outsb
repz
test
xchg
cmp
mov
inc
jne
mov
ret
in
stos
push
jo
outsb
enter
mov
jge
adc
cmp
jno
dec
daa
push
movsb
pop
movsb
add
cmp
mov
xlat
fimuls
xor
cmc
roll
rcrl
or
push
pop
fcompl
push
hlt
or
or
mov
cmpsl
and
pusha
mov
adc
popf
mull
xor
add
add
enter
lcall
push
icebp
sub
adc
mov
jle
pop
fbld
xor
test
bound
pop
fwait
mov
and
cmp
jno
lret
cmp
sbb
lock
pop
or
rorb
sub
bound
lret
insb
mov
je
std
mul
cmp
je
in
lret
sub
cli
in
jo
jg
outsb
daa
xchg
jb
in
lea
cli
adc
xchg
cli
jecxz
lock
gs
pop
seta
dec
popa
dec
jmp
xor
sbb
mov
mov
insl
popa
mov
mov
in
cld
sahf
aaa
loop
sahf
dec
or
inc
pop
stc
pop
mov
or
in
stos
loop
loope
out
clc
add
inc
mov
push
test
ds
adc
inc
jle
arpl
inc
or
or
xor
jecxz
stc
xor
push
or
ficompl
rorb
mov
xor
test
push
xchg
or
fisubrl
invd
xor
push
rcrb
cmpsl
xor
mov
into
sub
neg
dec
add
popf
ss
sbb
lock
cmp
sub
sbb
push
mov
cmc
dec
popf
lcall
lods
clc
push
and
mov
mov
sub
or
rolb
push
cmp
les
jns
jns
push
dec
jge
cmp
mov
test
fistps
pop
push
mov
mov
pop
xchg
mov
mov
sub
inc
inc
popf
dec
mov
gs
sti
pop
pop
scas
jl
aaa
cmp
stos
sarb
pushaw
xor
out
sahf
shrb
scas
ljmp
arpl
jns
sub
add
mov
sub
cmp
fnsave
out
jno
jle
sub
mov
cmp
pop
stc
cmpb
dec
jo
push
inc
out
fcoms
lods
call
adc
ret
scas
outsb
mov
inc
sub
lods
dec
pop
dec
rcll
add
test
xor
mov
sub
stos
out
outsl
jb
pop
cmpsl
jbe
outsb
pusha
adc
add
leave
xlat
insl
or
mov
and
fisttpll
xchg
cmp
push
lret
xchg
cld
dec
arpl
pusha
adc
fsubrs
mov
pop
loopne
jp
rcll
xor
inc
loopne
out
inc
sub
insb
xchg
mov
int
popa
or
mov
adc
nop
mov
mov
or
inc
inc
repnz
pop
push
and
push
hlt
nop
or
and
xlat
in
icebp
add
scas
push
in
xor
sub
in
cmp
loopne
ret
loop
outsl
cltd
mov
fsubrl
mov
lret
jecxz
jbe
repz
in
leave
xchg
xor
lret
xchg
jmp
out
mov
pop
mov
int
xchg
cld
mov
inc
adc
push
scas
lock
cmc
inc
push
mov
jne
loope
pushf
pop
lods
add
dec
dec
jb
cmp
popf
push
xchg
xchg
and
ret
notb
dec
mov
lea
stos
sti
mov
fmull
xchg
mov
sbb
repnz
jo
mov
subl
je
push
xor
stos
aas
insl
cmc
and
cmp
sub
pop
mov
or
cltd
addr16
lea
aaa
fsubrp
mov
mov
shr
xchg
cmp
scas
loop
rep
jnp
cmp
pushf
jmp
in
in
xchg
cmc
cmp
test
jecxz
fs
arpl
arpl
cld
xlat
sahf
ud0
adc
adcl
xchg
cmp
popf
ja
movsb
imul
sub
repnz
cmp
shlb
pushf
leave
mov
xchg
addl
mov
insl
insb
stos
add
adc
adc
mov
push
xchg
mov
dec
or
and
aas
pop
push
loope
arpl
int3
and
dec
jle
movsb
mov
loope
mov
jnp
stos
or
adc
out
mov
lret
push
rorl
xor
enter
test
mov
cmp
or
pop
jae
daa
insl
loop
pushf
mov
aam
mov
lods
comiss
mov
js
ss
outsb
push
mov
rolb
or
or
cmp
push
stos
or
pop
data16
int
dec
inc
dec
test
insb
mov
leave
std
mov
mov
cmp
cmpsb
mov
cmp
add
ds
dec
out
add
jbe
jge
je
inc
repnz
mov
lods
push
or
mov
sub
popa
or
xchg
jg
mov
push
fdivl
mov
jmp
sub
or
in
inc
and
and
pop
cld
test
je
mov
call
cld
inc
ror
or
std
push
shl
lcall
mov
sbb
jle
std
xchg
cmpsb
inc
in
inc
shll
mov
mulb
xchg
in
sarl
mov
std
xchg
shll
imul
out
addr16
jmp
cltd
xchg
aas
and
xor
outsl
aas
lret
jno
jb
gs
xor
push
and
push
popf
adc
dec
cmp
lret
mov
sarl
lea
xchg
es
cld
cmp
leave
js
mov
add
cmp
inc
stc
mov
xor
popa
mov
outsb
xor
mov
and
pop
push
nop
push
add
jae
insl
dec
mov
ret
and
aas
sub
xorl
push
push
ds
scas
clc
test
cmp
pop
mov
lahf
hlt
ljmp
inc
or
idivl
fwait
inc
mov
insb
pop
outsb
loop
clc
adc
dec
xchg
xchg
lock
clc
sub
pop
cmp
repz
in
mov
mov
js
adc
push
pushf
lods
shl
jno
insl
rorl
fmuls
aam
sub
inc
out
cmp
ljmp
ja
stc
push
inc
test
aam
jmp
pop
ja
mov
adc
fdivrs
mov
adc
mov
inc
dec
mov
push
pop
adcl
push
ss
inc
aad
push
mov
out
xchg
xor
xor
mov
xchg
cmp
push
add
mov
test
rcrb
nop
pop
aas
xor
push
sub
pop
fadds
inc
and
or
out
dec
imul
push
sbb
mov
int3
paddusb
iret
pop
xor
out
dec
cli
and
sbbl
sub
mov
movsl
inc
jae
fs
xchg
cmp
mov
les
movsl
jae
dec
in
imull
popa
or
popf
jl
jge
mov
push
jl
xlat
andb
leave
sbb
push
and
rorl
push
pop
aad
pop
imulb
mov
ljmp
xor
test
fistpll
imul
sub
lods
arpl
cld
scas
sub
xchg
test
sub
dec
dec
aas
cmp
sub
jmp
les
or
pop
add
jne
ficomps
cld
push
push
adc
add
incb
shr
pop
iret
sti
int
outsb
mov
mov
into
lea
stos
inc
and
lret
xchg
loope
loopne
data16
fnstcw
jne
mov
ror
andl
pop
add
lock
jge
aas
jg
pop
loop
pop
test
mov
xchg
or
arpl
fisubs
sbb
xchg
pop
test
fbstp
dec
sub
xlat
pushl
pusha
aam
aaa
mov
mov
data16
outsl
mov
push
push
push
xchg
movsb
sbb
mov
pop
in
decl
push
js
jo
cmpsl
pop
push
or
mov
sbbb
adc
loope
and
mov
mov
jmp
dec
dec
cmc
loop
repz
or
out
arpl
mov
xchg
dec
icebp
dec
mov
addr16
adc
int3
scas
jb
sub
push
rcrb
imul
fsubl
cwtl
in
sarl
inc
imul
adc
in
cmp
jne
sahf
mov
cmp
test
mov
push
rol
cmpsb
jnp
jecxz
jns
and
mov
dec
xchg
push
outsb
or
push
cmpsb
mov
xchg
mov
mov
std
stos
cmc
push
inc
pop
add
lahf
movsl
xlat
subb
xchg
or
fcompl
les
mov
dec
mov
sbb
es
push
jb
and
sub
mov
mov
adc
xor
outsl
std
push
adc
outsb
inc
ds
int
faddl
or
ljmp
xor
leave
mov
mov
lods
adc
sbb
xor
add
adc
mov
loopne
in
dec
xor
in
orb
repz
pop
sbb
in
js
ds
inc
pop
imul
inc
pop
fwait
inc
or
lods
lock
shrb
mov
fildl
rcrb
xchg
jmp
in
mov
mov
pop
cmp
shlb
test
add
xlat
push
mov
cmpsl
test
repnz
rcl
mov
add
and
or
icebp
xchg
lea
mov
cmp
es
or
cmp
lahf
xor
mov
nop
cmp
ret
shrb
push
dec
ret
mov
mov
xlat
mov
daa
sbb
inc
shl
mov
jmp
adc
js
ret
cs
rcrb
mov
subb
add
ss
pop
lock
ret
mov
and
das
in
jo
test
mov
xor
adc
pop
cmpsl
ljmp
neg
cs
xor
mov
cmp
dec
cmc
and
push
cmpsb
addr16
mov
mov
jge
cmc
push
mov
out
lret
int3
adc
pop
dec
imul
mov
and
push
inc
inc
mov
mov
sbb
jmp
xor
adc
imul
xchg
push
sub
rorb
stos
push
adc
les
lahf
and
imul
mov
les
jecxz
js
fdivrs
bound
lret
push
jb
imul
pop
fs
push
add
scas
mov
mulb
pop
xor
sbb
add
xchg
loope
ret
adc
andl
fimull
sti
lret
inc
inc
and
out
imul
sub
cmp
mov
rcrl
cmpsl
aad
xor
cmp
clc
adc
or
gs
dec
add
cs
xor
ljmp
insb
add
jp
adc
dec
pop
dec
mov
int3
mov
lcall
mov
xor
push
or
lahf
cmpsl
mov
adc
sub
push
outsb
pop
les
dec
lea
cltd
lods
fldt
adc
cmpsl
pop
or
fsubl
lds
xor
cmpsb
or
stos
imulb
shlb
stc
mov
cmp
jl
insb
clc
adcb
cmp
and
lret
jge
jmp
pop
xchg
pop
lret
repnz
mov
xor
fisttpl
mov
movsb
pop
imull
arpl
jg
dec
jnp
inc
mov
mov
jbe
pusha
sub
or
rcrl
sahf
and
nopl
mov
arpl
cmp
cmpsl
jb
pop
ret
imul
pop
stos
jecxz
add
dec
add
stos
or
mov
sti
and
lock
enter
cmp
sbb
arpl
sbb
pop
push
ret
imull
dec
repnz
test
iret
scas
sbb
adc
lods
mov
jge
dec
repnz
push
jb
out
out
fmull
adc
jmp
inc
addr16
addr16
add
sub
sub
dec
mov
cli
mov
ret
pop
xchg
jg
dec
leave
notb
in
pop
out
aaa
mov
add
push
sub
mov
dec
jmp
mov
aad
or
lcall
aam
or
mov
lcall
mov
pushf
jae
or
bound
pop
mov
mov
aas
sbb
gs
mov
js
fs
int3
mov
xchg
mov
sbb
pop
xorl
dec
movsb
pusha
movsl
pop
int
dec
inc
inc
repnz
shlb
andl
dec
pop
or
stos
imul
mov
ret
dec
cmp
jl
xor
add
testb
leave
inc
lds
lcall
jmp
ret
mov
sbb
and
push
inc
sub
addb
scas
jmp
inc
movsl
clc
push
shlb
sub
int3
push
adc
fisubs
addr16
sti
dec
add
or
cltd
insb
mov
in
cs
fnsave
imulb
jp
cli
sbb
hlt
mov
jae
xor
iret
and
in
bound
mov
sahf
stos
cmp
stos
push
xlat
in
mov
inc
jb
push
lds
ret
xor
testb
push
xchg
das
lea
and
js
or
repnz
mov
addr16
fnstcw
and
adc
bound
sti
dec
lcall
add
or
mov
pushf
in
pop
stos
addr16
pop
push
gs
sub
stos
inc
adc
cmc
mov
dec
xor
mov
dec
add
aad
add
push
inc
scas
add
popf
push
mov
mov
test
pop
enter
rclb
out
push
repz
adc
add
imul
pusha
push
sbbb
sbb
ret
stos
cwtl
inc
xor
scas
mov
mov
push
cmpsl
loope
cmpsl
pop
daa
xlat
cmpsl
jg
inc
repz
push
lods
and
add
jae
adc
push
imul
sub
adc
xlat
pop
shrb
push
mov
push
and
and
mov
inc
inc
pop
hlt
outsb
stos
sbb
mov
pop
nop
outsb
xchg
stos
in
sub
add
mov
cmpsl
in
push
xor
add
add
repnz
or
ret
subl
sbb
rcll
fcom
and
xchg
int3
dec
fwait
xchg
jmp
cmp
inc
pop
and
push
cltd
lahf
aas
cmp
sbb
mov
add
scas
in
pop
mov
mov
shrb
add
fbld
pop
adc
pop
inc
out
out
jmp
xchg
aam
xchg
cmc
jmp
xchg
xchg
mov
sti
out
cld
jbe
xchg
lods
and
mov
out
dec
mov
xlat
push
sbb
adc
lods
xlat
sub
jecxz
outsl
pop
jl
movb
in
mov
out
xchg
or
xchg
imul
inc
add
xchg
dec
sbb
sub
into
lcall
imul
push
xchg
out
sub
test
mov
mov
pushf
add
dec
insl
adc
mov
adc
cmp
mov
mov
xchg
inc
bound
xchg
daa
jle
jg
int3
loopne
inc
mov
insb
cmp
pop
adc
and
xor
dec
in
cmp
ja
cmp
xchg
andl
scas
jno
int3
cmpsl
dec
shlb
hlt
addr16
xorl
xchg
xchg
pop
push
sti
cmp
test
out
push
sub
loopne
mov
sar
andb
je
bound
in
pop
and
lods
cmp
or
adc
cmp
mov
jecxz
jae
pop
xchg
dec
xchg
sub
push
mov
dec
sbb
aam
cltd
cmp
addb
ja
inc
outsl
jl
inc
imul
inc
sbb
and
fmul
cltd
jge
mov
int
std
and
sub
or
and
add
mov
sti
sbb
repnz
cmp
arpl
dec
and
push
in
movhps
test
xchg
xor
dec
stc
aas
jle
sbb
lds
xorb
je
andb
and
roll
pop
sub
pushf
movsl
ds
fcomip
adc
dec
loopne
mov
push
inc
test
pop
inc
jne
outsl
ja
rorl
gs
pop
gs
jp
sbb
xchg
iret
shl
loope
mov
push
lods
sub
div
bound
pop
stos
mov
and
lea
mov
adc
mulb
ret
jg
push
cs
out
jecxz
int
jl
imul
fimull
stos
pushf
mov
xchg
lock
aam
inc
int
lods
push
cmpsb
xlat
loopne
add
mov
movsb
cmp
jae
arpl
mov
in
das
cmc
lods
xchg
ja
cmc
xchg
gs
lret
cltd
arpl
es
ds
mov
inc
mov
sarl
cmpsl
jae
jns
or
sti
mov
mov
mov
cli
out
xor
sbb
xchg
test
push
add
ret
testl
rcr
or
jae
jno
dec
and
faddp
inc
cmp
frstor
sbb
push
pop
mov
stc
imull
aam
inc
mov
aam
push
jbe
xorb
sbb
xchg
adc
cmpsl
sbb
lret
jae
mov
and
mov
outsb
mov
lret
inc
push
movsb
mov
imul
cmp
cltd
orl
xor
inc
and
mov
pop
mov
push
ret
pop
enter
mov
sub
xor
mov
rorl
cs
orb
int3
push
insl
pop
test
ret
mov
push
or
lea
mov
jns
cmp
rcrl
pop
in
pop
out
imulb
mov
jbe
nop
xor
cmp
mov
hlt
sbb
xor
test
adc
xchg
xchg
cmpsb
mov
loope
add
fdivl
lds
ret
sub
inc
mov
mov
das
rcrb
adc
mov
js
pop
out
test
insl
pop
jno
das
xor
leave
dec
das
repz
mov
jecxz
pop
add
scas
in
dec
cmp
xor
fdivs
mov
sbb
movsb
xchg
pop
loopne
mov
rorl
mov
jge
mov
pop
adc
sbb
in
inc
push
sub
stos
or
add
aaa
xchg
inc
int3
dec
mov
mov
adc
insb
mov
pop
jno
lahf
xchg
add
hlt
mov
pop
push
dec
dec
jns
mov
mov
gs
movsb
int
stos
push
push
inc
les
cwtl
and
cld
xor
push
jmp
fdivs
jne
das
mov
inc
mov
add
sbb
or
test
inc
dec
push
adc
adc
pusha
daa
jmp
dec
test
dec
cs
and
sbb
dec
add
loopne
and
ljmp
sbb
scas
rclb
loop
and
jp
mov
outsb
add
lods
loop
jnp
xlat
or
and
lret
clc
mov
std
or
insb
hlt
inc
and
mov
fdivrl
pushf
leave
lcall
pop
rorb
scas
negl
mov
push
lock
sub
jne
imul
sub
mov
sarl
inc
sbb
int
je
jo
mov
add
lock
rclb
pop
es
insl
xchg
pushf
fwait
lods
arpl
add
aam
inc
aam
test
pop
jb
and
xchg
add
andl
outsb
jne
mov
and
sbb
adc
add
mov
outsb
push
fsubl
jge
adc
push
inc
cmc
push
addl
pop
test
les
adc
ret
lods
mov
les
int
insb
cmp
outsl
and
movups
and
filds
cs
fidivs
mov
fcompl
lods
lahf
inc
pop
das
cli
test
lcall
test
mov
sub
inc
movsb
mov
js
xchg
out
adc
pusha
cli
fidivl
in
mov
dec
test
mov
inc
cmc
pop
mov
fadd
std
js
adc
inc
inc
es
sub
fwait
push
in
adc
pop
iret
movsb
repnz
movsb
jb
shl
add
mov
and
movsl
xor
pusha
dec
rcl
dec
std
lahf
rorb
adc
jmp
sti
cmp
mov
into
ds
lds
test
ds
leave
jb
in
push
inc
test
jmp
addr16
sbb
je
sbb
aaa
mov
lods
aaa
ficoms
clc
jmp
pop
xchg
imul
imul
adc
ja
cli
pop
and
leave
in
jmp
pop
jno
xchg
mov
xchg
sbb
cmp
pop
dec
outsb
rep
lret
test
loop
and
out
pop
mov
lds
add
ljmp
push
cmp
xchg
pop
mov
pop
aaa
push
leave
testl
or
fwait
mov
shlb
mov
dec
jo
jo
add
adc
xchg
jns
cmpsl
adc
jns
mov
sahf
loop
mov
cmp
rcll
test
push
cld
notl
lods
mov
and
outsb
dec
xchg
iret
xlat
lea
movsb
push
bound
xor
xor
enter
sbbb
out
sti
dec
push
loopne
dec
xchg
dec
js
xchg
out
movsb
aad
inc
nop
mov
pop
in
and
jnp
push
jmp
pop
lods
leave
pop
mov
xchg
outsl
xor
mov
jae
push
xchg
ja
test
cmp
shlb
inc
scas
and
js
mov
ret
xor
mov
repz
nop
adc
pusha
sbbl
push
push
stos
push
pop
jb
loop
enter
icebp
mov
popa
outsl
in
movsb
sub
div
push
das
mov
lds
push
in
push
loop
jl
icebp
addl
fdivs
push
sbb
movsl
lods
pop
int3
stos
aaa
push
hlt
mov
iret
inc
jmp
test
ret
clc
sbb
mov
jmp
je
mov
or
mov
mov
cmp
push
hlt
jle
cwtl
and
add
sti
pop
ja
dec
pop
out
push
and
lcall
rorl
pop
sahf
xchg
pushf
fdiv
or
jne
mov
push
mov
hlt
and
ljmp
xor
push
fwait
scas
int3
repz
ficomps
cmp
ret
cli
adc
test
ficompl
jmp
les
stos
sbb
mov
movsb
aaa
rorl
imul
sbb
sub
int3
out
push
sub
dec
xlat
mov
mov
xchg
std
in
aam
sbb
stos
lock
in
jnp
pop
div
inc
mov
sub
xchg
pop
mov
ret
dec
add
pop
adc
loope
js
arpl
cld
xchg
call
sbb
xlat
mov
mov
xchg
cwtl
xlat
inc
dec
inc
sub
stos
inc
outsl
pusha
push
jns
sahf
dec
ret
lods
outsb
fcmovu
or
idivl
add
add
xchg
jbe
popf
movsb
js
push
mov
sbb
test
jmp
scas
xor
js
xchg
inc
cmpsb
dec
call
inc
paddq
cli
cmp
mov
sbb
inc
sub
pop
jecxz
jbe
int
add
mov
leave
xchg
sbb
pop
dec
fcompl
shll
mov
pop
jbe
imul
mov
xlat
jae
jmp
sti
push
adc
mov
xchg
int
jecxz
xor
lret
pop
mov
mov
xchg
cmc
push
aam
sahf
adc
or
dec
pop
pop
adc
add
ss
jmp
mov
add
or
add
loopne
push
mov
test
xchg
fs
xchg
add
mov
xor
mov
loope
ficoml
fcmovu
fisubs
mov
rorl
sub
xchg
mov
jae
jb
push
jns
jbe
dec
xor
les
sbbl
rorl
test
push
add
jmp
sub
mov
mov
mov
xor
jmp
sbb
stc
sti
xchg
xchg
les
xchg
out
mov
xor
jp
dec
fsubl
sub
bound
adc
pop
aaa
xchg
scas
cmp
outsl
mov
add
mov
jne
fisubrs
cltd
sbb
pmulhw
mov
fsubp
push
leave
jb
mov
push
and
jle
jp
mov
gs
aad
sbb
dec
jne
mov
sbb
cmp
sbb
add
and
test
add
fdivs
and
aad
sub
xchg
dec
jl
lea
inc
jmp
mov
stc
sub
jno
push
mov
push
imulb
inc
jo
dec
fcomps
sub
cmpsl
mov
mov
xlat
dec
add
jle
adc
cmp
or
pop
sub
jne
and
sahf
add
mov
flds
repnz
jl
daa
ljmp
lcall
dec
or
ficoml
das
jge
and
repz
pop
and
add
xchg
dec
adc
fildll
adc
stos
adc
shll
fldenv
cmp
aas
sub
xchg
cmp
shl
push
fistps
cs
pop
aad
sahf
mov
mov
pop
cs
int
data16
lock
movsl
out
jbe
push
mov
stc
sbb
scas
in
stos
adc
mov
jmp
or
in
push
mov
inc
testl
stc
cmp
xchg
sub
ficoms
sbb
jns
push
mov
cs
nop
test
aas
fnstenv
sarb
dec
push
mov
or
xchg
imul
inc
push
inc
push
mov
mov
test
jmp
dec
mov
daa
xor
push
and
push
inc
cmpsb
push
mov
repnz
and
sbb
cmp
xor
fdivrl
flds
push
inc
mov
mov
into
xchg
lcall
ljmp
mov
xlat
xchg
out
or
mov
lods
scas
and
push
sub
stos
ljmp
imul
xlat
loop
lods
pop
mov
mov
mov
lds
add
cmp
xor
mov
testl
je
and
subl
movb
xchg
mov
in
dec
jecxz
mov
push
pop
sti
mov
aas
xchg
das
add
lea
jmp
mov
lret
push
jle
xor
movsl
or
hlt
pop
std
dec
insl
in
jmp
fxch
repz
shr
out
inc
pop
scas
out
jo
and
bound
inc
xchg
lret
and
pop
mov
addr16
xor
pushf
dec
out
push
pusha
or
jle
adc
sbb
roll
scas
aam
fsubp
adc
sbb
loop
pop
pop
stos
cmp
add
mov
int3
cmpsl
lahf
imul
aad
bound
test
and
xor
cmp
inc
adc
sub
mov
hlt
popa
scas
dec
sbb
cmpb
in
jle
fldcw
mov
fs
icebp
pop
aas
mov
andb
in
push
xchg
mov
add
call
ljmp
adc
mov
loop
jl
cmp
sub
pop
outsl
lods
mov
les
dec
add
cmp
mov
iret
xchg
sub
xchg
pusha
repnz
clc
fsubl
js
in
mov
daa
push
sub
cmp
mov
imul
mov
iret
xor
push
call
fcomip
hlt
les
jno
sbb
scas
mov
lock
jmp
mov
scas
mov
popa
or
sbbl
jmp
pushf
xor
push
popa
gs
dec
xchg
iret
mov
cmp
inc
mov
popa
aaa
aad
gs
xor
fcmovne
stos
repz
jns
mov
daa
adc
xor
pop
mov
mov
out
data16
mov
push
dec
jae
sti
cmpsl
dec
push
jno
or
std
pop
out
mov
inc
fs
push
sbb
sbb
mov
cmp
cmp
int3
mov
fcomps
and
bound
cmp
adc
fistl
je
pop
das
das
adc
scas
jle
stos
xor
jl
ljmp
les
pop
arpl
sarb
addr16
cld
in
jp
push
jb
mov
jmp
loop
adc
out
mov
push
ret
and
or
add
adc
mov
aam
int
cmpsb
stos
jp
gs
test
pop
mov
and
and
lret
sbb
adc
insb
jbe
movsb
mov
outsb
pop
je
stc
xchg
cli
sbb
pusha
or
push
fldenv
dec
scas
out
imul
es
inc
fwait
lds
fcomp
sub
insl
cmp
cwtl
pushf
arpl
ret
fiaddl
jl
fiaddl
adc
xor
and
js
movsl
orl
or
xchg
xchg
lret
pushf
je
fstpl
sub
xchg
mov
xor
sbb
into
or
mov
mov
imul
imul
mov
cmc
inc
mov
sub
adc
scas
mov
mov
or
sub
pop
subb
dec
pop
fistpll
adc
aas
jb
sti
jb
bound
shlb
sub
mov
inc
mov
test
cwtl
loop
loope
xchg
cmpsl
fst
or
jo
loope
xor
xchg
or
pop
adc
adc
ljmp
in
jb
mov
inc
push
mov
cmp
mov
or
test
movsb
fdivrl
andnps
mov
es
push
stc
fisubl
mov
pop
xor
dec
and
jle
mov
lea
push
leave
loope
lret
and
push
jo
pop
das
int3
das
lods
negl
dec
in
aad
xor
in
stos
dec
mov
cmp
push
mov
xor
mov
arpl
imull
enter
push
mov
imul
or
call
arpl
ja
orb
hlt
pusha
mov
dec
popf
or
popf
xor
jbe
and
xchg
pop
or
jo
jp
mov
sub
push
push
jno
outsl
mov
cld
sbbb
imul
fwait
icebp
sbb
lcall
and
popa
fnstsw
cmp
cmpsb
dec
dec
sbb
idivl
hlt
mov
movsw
or
and
sub
fwait
out
xor
and
inc
xor
adc
mov
xor
jl
pushf
mov
mov
cmp
dec
data16
mov
push
ja
pop
sub
pop
xchg
add
loope
pusha
call
pop
lea
imul
mov
outsl
sbb
aas
insl
ficompl
mov
push
pop
shrl
inc
cwtl
pop
xlat
lahf
xor
iret
icebp
xor
addb
mov
jnp
or
fisubl
incb
test
clc
mov
dec
ret
mov
ds
or
enter
pop
cli
outsb
scas
pmulhw
pop
popf
in
mov
sbb
dec
lahf
punpckhbw
cltd
inc
mov
and
push
cmpsl
xor
pop
movsl
dec
pop
nop
jae
repnz
mov
cld
adc
cld
jmp
fs
or
xor
jmp
mulb
fsubs
push
xor
push
dec
lahf
jbe
mov
xchg
xchg
xchg
lock
lahf
xlat
pop
repz
mov
mov
cli
push
push
mov
and
inc
mov
add
shll
push
push
mov
cld
xor
adc
movsb
sub
sub
mov
cmc
mov
add
mov
sbb
pop
enter
mov
inc
pop
rorl
jecxz
mov
push
shll
adc
add
add
sub
scas
or
jae
mull
push
and
xor
xlat
shll
movsb
or
jle
push
push
pop
xor
das
cmpsl
mov
mov
jl
cmp
push
aad
cmpsb
out
xchg
jb
jecxz
adc
adc
mov
movb
lock
fcmovnbe
arpl
and
lret
sbb
je
mov
xchg
aas
subl
jno
inc
inc
inc
int
and
mov
jbe
push
sub
cmpsl
cmp
and
xchg
daa
insl
cmovnp
push
iret
adc
aaa
mov
jg
lock
ljmp
jl
add
xchg
lods
dec
fcoml
stc
insl
in
sbb
lcall
jge
push
ficoml
mov
shll
pop
and
lods
lahf
xor
jecxz
test
rcll
adc
nop
jp
and
lds
mov
jne
stc
fldt
ret
dec
cld
push
mov
int3
mov
inc
psrlq
mov
sbb
stos
js
jle
enter
fimull
loope
mov
jns
scas
jmp
pop
cwtl
push
adc
mov
stos
lea
lcall
xchg
lock
call
repz
xchg
mov
shr
cwtl
sub
hlt
js
imul
push
nop
xchg
mov
mov
xor
or
pop
insb
bound
xchg
aaa
cmpsl
aas
cmpsl
bnd
les
outsl
lds
sbb
dec
sub
loope
jns
cmpsb
daa
jmp
mov
mov
jle
cmp
cs
sbb
in
sub
in
dec
sbb
stc
dec
cmp
outsb
add
in
dec
sbb
fldcw
and
cmp
cmp
mov
xchg
inc
jne
clc
sub
cmp
fisttpll
shl
jbe
add
push
inc
filds
clc
xor
mov
ss
inc
int
loope
xchg
or
add
cwtl
jo
jo
iret
jb
jmp
cli
inc
inc
xchg
pop
xchg
inc
clc
pop
cmp
adc
lcall
xchg
aam
mov
cmpsb
or
add
int3
add
jbe
xor
das
mov
push
shl
mov
adc
mov
leave
mov
xchg
mov
pop
faddl
jne
or
add
jmp
jecxz
sarl
push
js
adc
xor
or
call
jbe
xchg
sbb
out
je
sbb
rol
mov
pusha
daa
and
loopne
aam
int3
and
setp
push
fcoms
dec
mov
sub
fdivl
fisttpll
push
mov
mov
repz
mov
dec
pop
lock
sbb
push
add
nop
and
mov
sti
insb
outsb
into
fincstp
subb
fists
mov
iret
in
js
mov
lods
mov
mov
add
nop
lret
sbb
cmp
dec
pop
inc
mov
jp
xchg
test
cmpsb
insb
arpl
fldl
or
jge
insb
xor
imul
pop
mov
push
in
popl
idivl
gs
jle
xchg
and
fisubrl
pop
and
inc
dec
mov
imul
incb
push
mov
out
clc
jnp
lcall
pop
sub
pushf
push
add
xor
and
mov
mov
ret
push
repnz
hlt
fdivr
dec
mul
js
jbe
cwtl
mov
xchg
inc
ret
mov
pop
sub
mov
bound
mov
fisubrl
mov
jnp
add
pushf
lock
cmp
or
sti
sbb
jb
push
addr16
mov
push
out
lock
xchg
xchg
jae
push
add
in
lret
in
or
ja
dec
pop
mov
lcall
xchg
dec
outsb
mov
or
popf
dec
push
arpl
sbb
aaa
into
das
fisttpl
mov
inc
aad
js
dec
out
cmp
dec
jo
pop
jo
es
in
aaa
int
sbb
orb
orb
pushf
iret
pop
adc
aad
push
dec
add
mov
push
or
sbb
inc
xor
ret
inc
mov
sti
dec
sbb
movsl
rcrl
decl
xchg
loop
in
rclb
dec
and
mov
frstor
sub
xor
in
add
xlat
mov
mov
shll
insb
inc
mov
add
inc
add
addr16
loop
mov
pop
inc
or
dec
or
out
push
push
adc
mov
add
mov
cs
call
mov
fnsave
push
dec
data16
dec
insl
js
decb
stc
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
movsbl
or
mov
mov
mov
sub
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
push
andl
mov
mov
movl
mov
or
push
mov
mov
mov
and
mov
or
xor
xor
and
mov
subl
add
sbbl
add
imul
movl
mov
movl
cmp
je
or
mov
mov
mov
xorl
xor
sbbl
lea
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
pushl
push
push
pushl
call
jmp
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
outsb
sti
ss
add
add
add
add
xor
add
adc
add
inc
add
add
add
push
push
inc
push
add
sbb
dec
lcall
bound
add
add
pop
push
popa
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
