push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
lea
push
repz
lods
add
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
mov
push
idiv
or
enter
xor
imul
shr
mov
and
shlb
pop
xor
dec
pop
les
mov
enter
test
sbb
ret
push
cmp
dec
cmpsb
aaa
lcall
fdivs
test
pop
cltd
daa
fwait
dec
inc
sub
pop
push
enter
xor
and
dec
mov
mov
inc
push
das
aad
mov
in
loopne
push
scas
das
xchg
sub
sbb
dec
jmp
pop
fildl
xchg
fs
mov
aaa
jl
data16
mov
cmp
daa
or
nop
sub
push
jbe
subb
jbe
push
adc
imul
inc
cmp
inc
mov
scas
xor
mov
mov
pop
sbb
aas
cli
popf
shrl
pop
mov
cwtl
js
les
sbb
shrl
sbb
pop
inc
mov
lods
mov
jecxz
rcrl
jb
mov
cmp
jae
pop
push
iret
xor
push
add
inc
cli
or
mov
xchg
cld
and
xchg
inc
lock
push
mov
lahf
mov
inc
test
push
xor
jo
mov
ds
mov
bound
hlt
mov
jge
jne
adc
lret
jnp
jns
mov
mov
les
xchg
mov
push
imul
inc
hlt
inc
popf
fistps
sbb
mov
sbb
push
aaa
fstps
aaa
sbb
push
aad
cmpsl
xor
add
lods
push
in
cs
add
dec
pushf
int
cld
inc
sbb
js
sub
stos
push
sub
mov
shr
xchg
xor
test
cld
fucom
clc
jno
mov
or
pop
push
stc
adc
jmp
push
pushf
sahf
sbb
arpl
shr
mov
add
cmp
mov
lahf
subb
jo
mov
mov
aam
add
insb
mov
lods
sbb
dec
mov
mov
push
fistpl
fistpll
sub
sahf
inc
shrb
inc
xchg
mov
jno,pt
jae
loop
arpl
ss
pop
jecxz
mov
push
cmpsb
adc
cwtl
fwait
arpl
movsl
subl
mov
jl
xlat
push
mov
adc
dec
jbe
or
add
loop
sub
jb
out
jge
iret
cs
aas
roll
lods
mov
ficoml
lret
arpl
movsb
nop
push
insb
mov
ljmp
xchg
dec
xor
add
test
push
pop
jmp
test
ret
fldt
ret
jge
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
out
ljmp
adc
adc
adc
adc
mov
jno
pusha
in
or
daa
add
dec
in
ss
jmp
adc
pop
fs
jg
cld
fs
push
sahf
outsb
das
pop
pop
fs
push
xchg
cmp
jg
ljmp
and
jns
inc
fnstsw
rcll
lahf
dec
sbb
in
pop
mov
xor
pop
jne
adc
push
add
add
jo
dec
mov
cmc
add
mov
std
add
sbbb
mov
xor
jne
pop
xchg
add
mov
mov
sbb
pusha
mov
scas
stos
popf
enter
seta
ljmp
fimuls
sbb
scas
insl
int3
cwtl
popa
imul
std
pop
dec
mov
adc
add
pop
or
xor
inc
iret
fiadds
inc
call
sti
call
imul
out
dec
mov
lcall
xchg
xchg
jnp
xchg
es
xchg
loope
ljmp
out
daa
push
iret
leave
or
fdivrl
jnp
je
int
jae
jmp
mov
cld
pop
inc
outsl
mov
jmp
mov
adc
out
scas
int3
adc
jne
rolb
inc
or
pop
cwtl
xlat
mov
imul
pop
push
jl
shr
mov
pop
mov
aam
lods
pop
imul
call
into
push
dec
gs
add
xchg
mov
jnp
icebp
sub
ror
jae
sub
or
adc
xchg
pushf
aaa
add
out
sub
cmp
lcall
ds
out
insb
hlt
scas
and
icebp
pop
or
cmp
mov
xchg
jge
fsubr
mov
cmc
notb
cmpxchg
ror
inc
add
inc
dec
sarb
push
xor
xchg
sbb
in
mov
jo
out
or
into
mov
rolb
mov
xor
rorb
push
jle
sub
fcoms
inc
mov
mov
mov
mov
fldt
inc
imul
adc
dec
mov
pop
fcompl
mov
inc
jno
mov
loopne
push
outsl
or
jno,pn
mov
xchg
mov
popa
mulb
jbe
out
add
push
xor
test
mov
or
inc
push
xchg
int3
sbbb
xchg
jp
mov
pop
mov
daa
pop
push
scas
cmp
addr16
adc
mov
add
sbb
dec
insl
sub
push
popa
call
jp
gs
in
out
cli
pop
fsts
mov
xchg
sbb
adc
mov
das
mov
push
xchg
dec
in
xor
nop
mov
push
int
push
mov
ljmp
inc
or
inc
std
xor
outsb
lret
mov
sbb
lock
jg
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
push
loopne
xor
test
cmc
jmp
inc
mov
ds
mov
scas
insb
call
inc
jmp
xchg
in
into
jnp
mulb
xchg
shl
dec
cmc
jecxz
outsb
loope
fwait
test
in
xchg
mov
cmp
xchg
lds
sbb
ds
cld
adc
out
push
daa
pushf
icebp
mov
jg
and
inc
test
push
vmovlps
clc
outsl
add
in
int3
jl
inc
loope
cmp
adc
xor
lcall
push
movsb
mov
lahf
jecxz
jge
pop
fisttps
add
add
mov
xchg
leave
addr16
mov
ror
fsubrl
push
aad
cs
andl
and
and
push
cli
or
imul
xor
addr16
cmp
pop
fiadds
ds
into
adc
inc
lods
lods
pop
push
inc
out
add
pop
ret
aas
cmp
test
add
lea
and
jecxz
mov
popf
lds
pop
data16
pusha
daa
xchg
dec
cltd
out
pop
jno
add
push
cmp
cli
fsubrs
cmp
test
sarb
jo
out
push
hlt
push
pop
jae
cmp
xor
adc
push
xchg
jp
aas
pop
into
dec
sub
adc
pop
push
xchg
lods
cwtl
fldenv
xchg
add
pushf
xchg
or
jo
xchg
xchg
ljmp
jmp
adc
adc
jbe
pop
test
ret
inc
cmp
mov
test
sahf
mov
jmp
xor
repz
es
pop
lock
aam
fidivs
decl
mov
inc
adc
xchg
inc
sbbb
fldenv
jno
test
mov
hlt
std
xabort
or
xchg
mov
dec
stos
jo
mov
sub
gs
jno
imul
outsb
pop
popf
mov
ss
jo
add
jae
xor
adc
xchg
gs
in
add
pop
rcll
adc
push
pop
mov
inc
pop
mov
xor
test
cmp
gs
mov
icebp
mov
sbb
lds
mov
mov
mov
test
arpl
push
and
cli
push
sbb
sbb
sub
jmp
mov
loopne
pop
dec
xchg
push
push
mov
clc
leave
cmp
cmpl
adc
sbb
into
rclb
aad
sahf
cmp
out
jle
dec
mov
adc
sbb
rorb
ret
jecxz
rcrl
xchg
push
lock
addr16
inc
mov
adc
aad
and
leave
int3
enter
scas
aam
xchg
jp
sbb
add
test
add
mov
shll
mov
int3
mov
adc
out
das
add
movl
dec
xor
frstor
adc
and
fdivp
scas
or
push
and
lahf
adc
aam
mov
adc
inc
or
jb
fbstp
sbb
dec
push
push
cld
rolb
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
mov
adc
adc
jns
loop
mov
ja
iret
ret
push
sbb
push
xor
jmp
xchg
movsl
ja
pop
js
pop
scas
pop
cwtl
ds
inc
jmp
test
and
in
xor
mov
jbe
gs
cmpl
lods
or
and
xlat
fcomi
testl
xchg
dec
jge
cmp
mov
jp
jg
in
cmc
cld
cltd
cli
jnp
push
adc
imul
mov
add
insb
fwait
or
adc
dec
jp
mov
cwtl
cmpsb
ret
call
testl
jbe
and
insl
stos
add
push
sbb
ja
pop
ss
andl
arpl
cmp
ljmp
dec
out
pop
ljmp
dec
cli
into
xchg
mov
push
lahf
push
mov
fisttpl
bound
aad
ret
lock
mov
mov
sahf
push
scas
fldl
mov
push
ret
imul
daa
cmp
cwtl
push
scas
jecxz
cmp
adc
cmp
fwait
sbb
mov
mov
jb
cmp
dec
mov
enter
call
movsl
loopne
and
in
mov
fdivrs
shll
enter
jmp
data16
out
daa
push
cmp
sbb
dec
push
adc
cltd
inc
rcl
add
rolb
ret
divb
push
mov
jne
aas
pop
fwait
jmp
dec
stos
dec
leave
xchg
sub
mov
std
int
test
mov
jl
nop
stos
mov
jbe
mov
test
jne
lcall
lods
pop
push
aam
pusha
push
xchg
lods
push
inc
push
inc
xor
jmp
sbb
sarl
adc
ret
xor
lock
jnp
lahf
scas
enter
cwtl
inc
or
movsb
mov
push
idivl
mov
in
fwait
dec
rcrl
mov
js
call
inc
pop
insb
sarl
das
inc
in
mov
inc
add
rcr
test
ret
mov
push
push
imul
mov
into
scas
cltd
std
pop
in
pop
in
mov
out
cltd
jo
outsl
lds
pop
and
js
add
jle
data16
test
je
adc
mov
pusha
dec
sbb
pusha
sub
popa
nop
pop
xchg
out
xor
sub
sarl
push
loope
or
mov
fbstp
movsl
add
inc
mov
push
dec
icebp
adc
fldl
shrl
rolb
mov
xchg
lcall
outsl
push
fwait
stos
and
add
mov
or
pop
xchg
and
mov
out
xchg
jne
push
jae
push
cmpsb
enter
rclb
sbb
testl
out
insl
into
mov
fisttpll
pop
repnz
cmp
mov
es
pop
call
movsl
jg
cmp
xchg
scas
in
fidivrs
js
sub
js
add
fstpl
insl
inc
pop
dec
out
sub
xor
jecxz
jmp
push
inc
and
int3
dec
mov
cvtps2pi
add
adc
add
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
jg
dec
mov
adc
adc
les
loope
sub
add
aas
les
mov
cmp
push
jp
ror
push
inc
jae
jmp
or
fnstenv
jmp
adc
lahf
out
fisubl
rcrl
rolb
and
dec
test
lret
imul
pusha
in
into
xor
shll
mov
je
and
adc
leave
mov
sti
push
aam
xor
adcl
xchg
sti
imul
test
popa
xor
sub
filds
mov
aad
call
push
addr16
cmp
lock
test
mov
loope
add
scas
mov
cs
xchg
loop
mov
repnz
mulb
pop
in
repnz
scas
and
xchg
add
push
lods
add
pop
sbb
into
push
mov
lds
sub
movsb
lahf
loop
aas
mov
push
add
stc
adc
jbe
icebp
sub
sub
sbb
mov
dec
lret
shll
repnz
cld
fcoms
sbb
ds
add
xchg
push
test
das
push
sbb
leave
adc
mov
cld
fld
outsl
inc
jp
leave
mov
mov
adc
and
std
lret
or
fwait
push
xor
pop
cmp
mov
xchg
int
pusha
cmc
push
add
cmp
scas
int3
aas
ss
shll
fistpl
jns
mov
jp
add
test
leave
adc
sbbl
popa
mov
sub
mov
es
cmp
stos
add
cmc
ljmp
add
mov
cmp
jle
xchg
lret
jns
push
mov
arpl
cmp
or
outsb
dec
ljmp
xor
je
push
jecxz
dec
jecxz
clc
out
mov
ret
push
cwtl
dec
mov
mov
arpl
lret
js
dec
movsl
jmp
cltd
rcl
jns
and
and
je
adc
out
xchg
test
sub
cwtl
mov
sub
and
push
aaa
xchg
push
cs
scas
mov
or
xor
push
and
sub
inc
iret
int3
and
pop
scas
xchg
jmp
icebp
insl
inc
jnp
xchg
pop
into
ret
loopne
inc
jbe
jl
and
movsl
lea
or
inc
sbb
sub
mov
rclb
adc
mov
inc
add
gs
shlb
subb
pop
js
in
push
out
out
jl
mov
nop
les
inc
xchg
fdivl
pop
leave
xor
add
jnp
out
imul
gs
inc
push
dec
imul
push
mov
mov
dec
imul
fidivrs
add
dec
pop
mov
cmpb
iret
je
xor
cs
push
daa
mulb
imul
adc
fwait
cld
fldl
push
mov
cli
out
pop
mov
push
mov
jae
inc
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
icebp
scas
insb
popf
repz
adc
adc
jbe
adc
xchg
repz
mov
loop
cs
je
xor
outsb
lcall
rol
daa
outsb
mov
fildll
mov
add
or
in
filds
xor
pop
outsl
inc
fs
arpl
lea
dec
call
dec
daa
outsb
arpl
add
push
js
xchg
pop
fisubrs
dec
adc
xor
or
inc
dec
aaa
lea
in
push
sbb
or
mov
jecxz
sbb
cmp
push
int3
sub
jae
fbld
jb
out
dec
push
jbe
aas
or
loopne
lcall
fwait
rclb
cld
add
jl
xor
sub
add
mov
jp
mov
or
loop
pop
sti
lret
cmp
rcll
sbb
bound
mov
roll
sarb
inc
test
add
pop
or
mov
cmpsb
sbb
mov
out
jae
xor
outsb
mov
and
outsl
lea
push
jl
mov
lock
xchg
pop
adc
pop
xchg
decl
mov
adc
push
mov
push
bnd
sbb
popa
push
mov
rcrl
int3
pop
mov
push
out
sahf
pop
rclb
and
or
inc
stos
push
dec
int3
fs
cmp
pop
or
ljmp
test
dec
add
adc
popf
add
cmp
dec
mov
mov
adc
ficomps
push
mov
int3
daa
addr16
insl
pushf
jge
lcall
dec
or
adc
sahf
jl
add
repz
xchg
sub
movsb
psrld
ret
bound
in
out
fadds
pop
repnz
dec
pop
mov
and
icebp
xor
insl
inc
xchg
addr16
inc
mov
cmp
or
movsb
int
cmpsb
sub
mov
andl
push
in
cltd
daa
fdiv
mov
mov
mov
movsl
mov
das
sti
mov
mov
je
mov
lods
ja
in
mov
add
hlt
or
sub
xchg
loopne
and
outsb
test
or
pop
shl
inc
test
in
lea
and
mov
mov
je
lock
aaa
adc
mov
pop
push
fldenv
dec
sbb
push
push
stos
stc
xchg
adcl
and
arpl
push
aas
in
push
xlat
add
testb
cld
cmpsb
cmp
pop
mov
sub
push
mov
call
mov
bound
adc
pop
sbb
add
lods
shll
sub
xchg
in
rclb
aas
int
movsl
loope
dec
xor
xchg
clc
jle
cmpb
into
repnz
sbb
repnz
inc
push
test
xchg
sub
lods
jns
rorb
lahf
pop
lods
cwtl
and
mov
shr
mov
sbb
cmpsb
xchg
sub
mov
push
add
jne
add
xchg
cltd
bound
and
push
jo
sub
insb
call
adc
adc
icebp
and
mov
test
mov
adc
xchg
mov
xrelease
jle,pt
jge
and
outsl
fucomp
mov
inc
stos
scas
xor
jne
xchg
rorl
jae
dec
add
imul
ljmp
add
adc
shr
lahf
mov
mov
into
cmp
fsts
mov
js
out
pop
shr
mov
fdivrs
cmp
enter
add
mov
and
mov
push
sbb
pusha
mov
inc
adc
sarb
push
xor
xor
ficompl
mov
mov
mov
loop
fs
mov
jae
imul
jne
dec
pusha
xor
or
adc
mov
adc
push
scas
mov
cs
test
mov
cmc
gs
ss
rclb
pop
jnp
insl
mov
mov
and
negb
outsl
shlb
cmp
xchg
mov
out
push
data16
out
pop
das
cmp
or
jb
jp
fmuls
xorl
arpl
insl
push
cmpsl
nop
in
stc
dec
fs
sub
mov
push
lds
fs
or
cli
int3
lret
repnz
cli
push
leave
aad
out
sbb
sub
cmp
repnz
das
push
pop
mov
xchg
shll
add
mov
dec
ja
mov
in
mov
ja
pop
xchg
in
pop
aaa
cmp
adc
add
shl
sub
cmpsl
push
test
jle
cmpl
mov
popa
or
dec
push
jecxz
rcrb
popa
fadds
fs
push
ss
mov
push
xchg
inc
in
fnstsw
dec
push
pop
jge
jmp
push
shll
mov
mov
push
mov
or
mov
mov
mov
xor
or
adc
outsl
rolb
or
rcrl
dec
subl
ljmp
test
dec
fistpl
pusha
jnp
insb
or
hlt
insl
imul
clc
icebp
add
iret
sarb
fiaddl
mov
push
or
sub
cmp
fidivrl
int3
loopne
pusha
imul
mov
sub
shl
je
test
das
xchg
loopne
jp
and
call
lods
push
in
cmc
dec
cmp
enter
and
jne
sti
jp
push
cltd
lcall
mov
xchg
dec
dec
lahf
aad
pop
int3
push
sti
outsl
lret
stos
and
enter
out
mov
mov
jmp
jo
adc
movsb
cmp
add
das
test
push
dec
xor
repz
push
dec
jle
je
xor
std
add
xor
jae
lret
stc
sti
xadd
add
xchg
aas
shll
push
adc
test
xchg
fisttpl
rclb
mov
shrd
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
jns
insb
cmp
adc
adc
adc
add
jnp
test
add
mov
cmp
adc
mov
sar
rolb
stos
pushf
sub
out
inc
mov
add
mov
jge
inc
xor
int
lret
xchg
jae
xor
int3
dec
sub
sbb
push
pushf
aas
sub
xchg
or
loop
movsl
cmp
push
and
mov
dec
cmp
cmc
pop
out
cwtl
fistl
push
pop
mov
scas
lods
jbe
or
mov
lahf
sub
pushf
fldenv
mov
add
cwtl
and
and
inc
pop
jbe
cwtl
xchg
rclb
mov
inc
jl
add
lret
jmp
jle
sbb
add
imul
add
jne
or
int
insb
push
mov
sti
out
jmp
movsl
pop
ja
into
xor
xor
aaa
adc
jns
mov
fcompl
lgs
mov
xor
pop
cmp
jmp
inc
mov
enter
push
outsl
lcall
mov
xor
shl
push
xor
dec
jb
in
push
std
xor
mov
jb
push
lds
fdivrl
lock
sub
dec
je
testb
ret
xor
xorl
inc
icebp
fs
sbb
mov
rol
mov
sti
cmp
jmp
test
cmc
dec
jo
pop
shll
adc
jmp
xchg
push
mov
add
hlt
rcrl
push
in
add
push
mov
lcall
sbb
clc
inc
push
fnstcw
outsl
xor
addr16
mov
mov
lods
int3
cmc
rcrl
and
or
scas
ss
xchg
ljmp
and
mov
dec
dec
movsl
out
dec
dec
shl
or
add
icebp
cld
into
test
rorb
jmp
mov
lods
inc
jnp
or
fldcw
es
lock
cmp
or
hlt
unpckhps
inc
inc
mov
mov
jge
mov
lea
cltd
rcl
or
mov
es
or
scas
rorl
xchg
jb
arpl
pop
lea
pop
shrl
nop
push
icebp
push
sbb
notb
cmp
mov
xchg
cwtl
mov
dec
in
loop
ljmp
mov
pop
xlat
lock
ror
push
sbb
sub
sbb
mov
shrb
jae
ss
lret
adc
dec
cmpsl
pushf
jg
xchg
or
lds
daa
mov
add
pop
adc
mov
int3
leave
mov
bound
ret
push
or
and
adc
inc
mov
jns
cmp
cld
xor
jmp
cs
add
orb
data16
jno
or
mov
mov
jg
cmpsl
hlt
mov
mov
and
cwtl
mov
shl
es
or
shll
leave
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
mov
and
adc
adc
mov
das
aaa
in
iret
push
sbb
mov
stos
xchg
fs
push
lods
inc
push
or
jp
outsl
sub
out
out
in
cmc
in
out
dec
stc
adcl
int
inc
push
push
push
or
in
scas
jl
icebp
mov
repz
lret
jecxz
jmp
mov
das
push
jnp
xor
or
lock
xchg
test
subb
rclb
sarb
push
in
enter
xor
fsubrl
jecxz
mov
in
les
xor
xlat
push
inc
icebp
cwtl
mov
cs
mov
fxtract
mov
add
iret
cmc
xchg
sub
lea
mov
shl
adc
push
call
scas
sub
in
add
pusha
mov
mov
rcll
lds
mov
inc
fildl
fs
mov
dec
pop
mov
adc
mov
cltd
mov
adc
mov
and
pop
pusha
fcomps
rcrb
dec
mov
and
ja
aaa
and
push
or
sub
mov
cmpsb
frstor
filds
mov
lret
lods
out
lock
lock
mull
out
sbb
pop
dec
and
movsb
sti
jns
xor
jge
js
sub
push
not
add
inc
scas
cmp
shrl
push
shll
mov
mov
out
and
adc
enter
push
js
popf
fisubs
mov
cmpsl
mov
hlt
jbe
incl
xlat
pop
pop
fstl
jnp
mov
push
fmull
jne
aas
popa
mov
push
inc
lds
rolb
jecxz
push
adc
mov
xchg
cmp
sbbl
enter
adcb
fdivs
arpl
xor
mov
cltd
loope
lock
xor
pop
push
stos
mov
movsl
in
mov
add
xchg
ds
xor
scas
xor
nop
cmp
jp
xchg
gs
aam
aad
add
out
cmp
inc
fcom
inc
aam
and
ret
mov
push
cmp
stc
imul
imul
out
rcr
cltd
xlat
dec
push
pop
add
sbb
xchg
adc
cmp
mov
int3
popa
fisubrs
scas
cmpsb
sub
cmpsl
fcoms
adc
fs
neg
js
push
or
movsb
jmp
inc
xor
mov
sti
sub
jns
sbb
hlt
dec
xchg
movsb
xor
sbb
loope
and
adc
jb
leave
and
lcall
clc
mov
loop
in
rdmsr
movsb
jo
adc
pushf
test
data16
add
dec
adc
mov
mov
jp
push
subl
repz
aad
adc
mov
lcall
xchg
jb
shrb
rorb
mov
fildl
cmp
aas
lret
dec
leave
movsb
js
mov
leave
test
xor
jmp
pop
and
or
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
movb
adc
adc
adc
fidivl
cmc
sbb
pop
lcall
sub
pop
xor
sub
rol
push
in
inc
imul
add
jmp
int3
inc
or
add
pushf
sahf
jbe
repz
push
fs
int
sahf
cmp
rcrb
cmc
lret
add
xchg
aam
icebp
mov
cmp
and
loop
fs
mov
adc
or
xor
pushf
push
sbb
dec
pop
fldt
enter
xor
mov
pop
test
mov
lods
mov
pop
jge
mov
pusha
push
in
rcrl
int3
mov
call
mov
xorl
push
sbb
popa
or
jmp
rorl
jmp
mov
push
fadd
mov
cmc
int
sub
stos
fwait
push
or
subb
mov
lcall
jae
into
arpl
mov
inc
jnp
in
and
mov
lods
jno
push
aaa
jb
jnp
arpl
imul
mov
and
in
add
jmp
push
jmp
fucomi
jp
dec
mov
jg
add
mov
dec
xor
add
out
mov
mov
jne
cmp
movb
jmp
mov
out
outsl
jb
movsl
jecxz
rclb
inc
mov
pcmpgtb
movsb
jle
add
mov
mov
add
out
cwtl
dec
loopne
adcl
sub
jo
dec
ret
enter
and
aaa
sti
jno
and
fildll
push
outsl
dec
inc
fimuls
dec
je
cli
push
sahf
aas
repz
xor
pop
into
loope
push
das
lds
inc
bound
mov
leave
mov
sub
test
ret
adc
clc
cmpsl
lock
test
add
lret
subb
add
cs
ret
inc
inc
xor
push
stc
pop
movsb
outsl
repnz
jg
enter
sub
popa
scas
pop
mov
mov
nop
lods
stos
fistpl
jb
mov
fmull
dec
mov
push
aaa
xchg
jg
pop
pop
xor
jl
inc
xchg
sub
mov
daa
and
add
add
inc
into
cwtl
or
adc
mov
in
jecxz
ss
into
rorl
jnp
insb
call
scas
mov
push
or
loopne
jge
aaa
inc
push
push
fbld
shll
cmpsb
sub
sahf
jle
insl
ret
push
mov
in
or
inc
lods
mov
and
sbb
repz
lcall
and
pop
push
popa
sbb
sbbl
rclb
push
pop
or
pushf
mov
mov
and
out
pop
mov
xor
xchg
dec
add
or
lock
into
or
out
stos
repz
xchg
out
or
mov
repz
and
add
lahf
and
inc
movaps
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
imul
and
adc
adc
adc
jge
jmp
cmpsb
xor
cltd
sbbb
xchg
lret
dec
jge
inc
fildll
inc
cmpsl
dec
into
out
lret
lods
add
lahf
enter
lods
push
push
out
add
jb
pop
rep
xchg
sbb
jge
cli
cs
ja
inc
test
adc
sbbl
je
arpl
jge
mov
mov
leave
xchg
pop
mov
jle
sbbl
out
imul
fs
loope
push
imul
bound
icebp
loop
mov
or
incb
xchg
xchg
test
adc
mov
pop
xchg
imul
iret
sahf
aas
mov
bound
lds
pop
pop
mov
pop
dec
aaa
sti
ret
push
roll
push
inc
cmp
leave
aad
cmpsl
cmpb
mov
xor
imul
xchg
sub
jb
rcl
and
xchg
adc
inc
cmpsb
cld
leave
cmp
fld
mov
inc
in
adc
flds
add
ds
adc
ret
jb
fs
shlb
in
mov
pop
enter
and
daa
das
and
push
mov
xor
cwtl
xchg
mov
inc
jl
stos
movsb
mov
xor
imul
popa
data16
mov
push
fs
inc
popa
sub
ja
shr
cli
in
pop
lret
xor
in
rcrb
les
lea
add
cwtl
les
and
xchg
push
dec
orb
shr
insb
je
and
nop
div
stos
xchg
sbb
xor
enter
xchg
ss
fcmovne
lods
jp
cmp
pop
sti
pop
std
ret
dec
es
xchg
dec
mov
repz
xchg
jae
sub
inc
cmp
xor
add
adc
das
add
and
cs
push
fbld
and
push
insl
mov
cs
mov
dec
rclb
and
push
or
mov
movsb
ret
dec
insl
and
movsl
out
push
mov
push
add
mov
pop
imul
dec
and
mov
not
fsubr
lcall
in
ljmp
cmp
fdiv
cmpsl
mov
mov
or
pop
sub
xor
movsb
add
fiadds
inc
xor
jp
or
dec
inc
and
mov
nop
jne
jle
mov
pop
hlt
clc
inc
out
int
ss
nop
pop
dec
or
sbb
mov
ss
call
cmp
aaa
outsb
inc
imul
dec
fxch
cmp
mov
mov
or
stos
andl
stos
aas
es
pop
or
jo
ja
jmp
inc
jnp
aam
ficompl
jecxz
sti
fisubrl
lcall
test
sarb
sub
adc
mov
in
jno
and
and
xchg
hlt
stos
movsl
lcall
arpl
dec
pop
in
adcb
jge
mov
jecxz
arpl
nop
push
dec
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
idivl
sbb
adc
adc
mov
sub
push
pop
out
xor
jmp
pop
cmp
fidivs
xor
mov
xchg
rol
xchg
sbb
xchg
cmc
bound
dec
pop
fs
ja
and
sub
dec
incb
sbb
lods
jbe
into
mov
xchg
sub
push
aad
iret
jnp
xor
jno
out
jne
inc
std
xchg
pop
dec
bound
jmp
jle
rcrb
inc
in
adc
push
mov
into
in
push
push
cmp
sub
shrw
sub
pop
mov
je
jmp
add
movsl
inc
xchg
sub
ret
int3
mov
fwait
mov
int3
xor
xchg
add
and
and
mov
sbbl
iret
and
fs
loope
inc
iret
movsl
aaa
xor
pop
shlb
sbb
inc
adc
cmp
in
bound
inc
push
addr16
fistps
sar
aas
mov
pop
lea
scas
mov
sub
lds
lods
sbb
out
imul
dec
mov
add
inc
je
dec
int3
sbb
xor
mov
push
rorl
lods
iret
xor
arpl
dec
mov
das
jg
pop
and
mov
xchg
sahf
scas
inc
xchg
mov
test
out
adc
sti
das
push
pushf
jno
mov
test
jecxz
mov
enter
frstpm(287
leave
dec
and
xlat
adc
dec
fstps
loop
push
cmp
push
scas
adc
lods
loopne
dec
sbb
mov
push
or
mov
movntps
fcmovb
xor
inc
cmpsl
pop
or
fdivrl
xchg
adc
in
dec
in
es
push
dec
mov
jnp
lahf
dec
mov
mov
cmp
sahf
xor
jnp
stos
cmp
inc
xor
add
push
loop
aam
ret
xchg
mov
jecxz
sub
fwait
nop
inc
decl
sarb
loope
mov
dec
or
pop
sti
jmp
and
jp
sub
mov
mov
jge
inc
cld
pop
jle
push
movsb
sbb
mov
subl
lock
sahf
xor
out
and
sbb
cmp
jne
push
xor
cmp
dec
inc
sub
and
ds
ja
bound
in
xor
mov
dec
ja
push
mov
dec
fiaddl
test
jno
pop
int3
outsl
jl
xor
fs
or
outsl
xor
sub
xchg
xchg
jge
hlt
int3
in
push
lret
cmp
mov
bound
pop
sbb
call
jnp
imul
div
and
daa
dec
dec
sub
test
aaa
mov
je
sti
stc
movsl
push
rcl
adc
dec
pushf
cmp
xlat
and
ja
sbb
fdivp
mov
es
in
dec
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
sub
mov
adc
adc
dec
xor
das
fsts
repz
popf
add
cmpsb
in
lcall
mov
iret
push
shrb
ret
mov
test
clc
jns
sbb
jne
popa
cmp
and
inc
xchg
shlb
cmpsb
or
insb
repz
aam
andl
enter
arpl
or
mov
inc
cld
stos
aad
arpl
into
out
shr
mov
aaa
ret
ljmp
push
cmc
xchg
sbb
fcompl
lea
arpl
pop
and
or
push
mov
xchg
dec
jmp
subb
jg
sbb
sub
jbe
pop
inc
icebp
cltd
sarb
pop
xchg
aaa
inc
pop
add
add
test
scas
lret
in
pop
popa
dec
les
mov
lock
push
push
mov
pop
repnz
xchg
in
mov
sarb
fdivrl
add
pop
xchg
sub
sbb
loopne
inc
xor
gs
jp
cmp
ja
incb
movsl
gs
fcoml
sub
mov
dec
mov
nop
sbb
mov
cmp
enter
pop
jbe
jns
out
cli
adcb
jg
adc
jge
jae
add
jle
js
cli
xor
fsubr
or
cmc
mov
out
loope
sub
loope
icebp
xor
loope
pop
jnp
scas
loop
adc
shrb
push
dec
mov
imul
jge
mov
or
scas
or
dec
inc
jp
jo
js
es
fistpl
daa
dec
sub
add
mov
push
aad
jae
dec
rcl
in
movq
push
jne
sahf
mov
or
sbb
mov
divb
cmp
cmpsl
stc
aam
repnz
cmc
mov
mov
popf
dec
dec
mov
mov
inc
push
es
test
sbb
pop
popf
sarb
popf
nop
fwait
adc
jnp
js
test
lcall
std
aas
pop
push
movsb
lods
inc
sbb
jae
imul
or
fwait
imul
mov
popa
cltd
mov
lret
push
sbb
shlb
gs
sbb
add
add
mov
xlat
xchg
jge
jl
sti
inc
or
loop
fisttpl
aad
rolb
lock
xor
and
repz
das
imul
stos
mov
push
mov
push
pop
lods
test
das
insb
pushf
xchg
jecxz
and
dec
pop
sar
test
xchg
sub
out
push
xlat
fiaddl
cvtpi2ps
test
xchg
gs
or
mov
or
cmpsb
cli
jno
stos
subl
inc
lcall
mov
jne
out
mov
rclb
xchg
cmpsb
jne
enter
jg
lret
or
notl
push
cli
data16
dec
jne
jns
jmp
push
pusha
adc
ret
sub
mov
inc
clc
mov
ret
mov
ja
dec
test
out
pop
into
das
adc
jae
scas
orb
pop
mov
adc
or
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
jp
out
mov
aad
aad
cmp
loope
xchg
icebp
xchg
dec
stos
shl
dec
int3
jmp
sub
or
int
icebp
stos
jb
int
pop
aaa
aas
xor
popa
push
divl
adc
sub
jbe
mov
jge
cmpsb
movsl
pop
outsb
mov
add
push
cmp
cmpsb
stc
in
jmp
sbb
fmuls
or
mov
lods
pop
cmp
pop
jecxz
or
pusha
hlt
lea
xor
mov
inc
mov
out
ret
jns
push
or
test
dec
sar
push
pop
mov
inc
in
test
and
sub
adc
je
inc
jmp
arpl
dec
xchg
pop
daa
cmc
cmp
inc
call
andl
out
out
sub
aam
mov
add
pushf
rcr
and
int
xchg
aaa
jnp
mov
rorb
clc
jg
or
mov
dec
ret
inc
adc
adc
sbb
leave
test
cmc
or
mov
pop
pop
imul
push
inc
popf
sub
cld
sbb
mov
aas
add
ljmp
sbb
sub
mov
test
mov
les
sbb
mov
jno
cli
mov
arpl
adc
repz
mov
jae
add
cmp
mov
call
and
push
adc
xor
add
or
and
lahf
stc
loop
movsl
add
in
inc
popa
insl
icebp
adc
rcrl
and
cmp
push
sbb
aad
test
pop
push
jae
add
arpl
jb
into
mov
popf
outsb
add
test
stos
stos
scas
mov
ds
aas
data16
add
rclb
and
push
das
mov
sbb
aad
jmp
cmp
mov
dec
push
xchg
mov
icebp
loopne
test
mov
mov
or
into
pop
loop
pusha
sarl
test
push
imul
addr16
out
inc
addl
cltd
adc
mov
xchg
repz
xchg
pop
rolb
out
jmp
cmp
sbb
mov
push
sbb
cmp
adc
fsincos
test
jne
add
testb
ss
jnp
and
insl
mov
mov
add
ljmp
stos
in
mov
lods
mov
out
mov
int
cmpsl
mov
out
rcrb
icebp
clc
pop
rclb
cli
pop
cwtl
lds
mov
inc
enter
popf
adc
xlat
add
cmp
inc
stc
test
mov
mov
movsb
mov
or
or
std
leave
push
push
push
lcall
test
shll
arpl
adc
xchg
adc
or
inc
sti
shll
out
daa
mov
sub
outsl
mov
movsb
jge
inc
mov
test
sbb
inc
jle
stos
mov
push
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
stos
push
mov
adc
clc
insb
imul
and
out
sub
xchg
fisttps
iret
bound
cmp
push
cs
fwait
dec
jl
sahf
inc
and
repnz
clc
and
rcr
cwtl
arpl
fistpll
daa
mov
and
mov
dec
fsubs
cmp
mov
dec
jp
dec
mov
pop
adc
icebp
outsl
imul
dec
int
mov
adc
push
flds
cs
push
or
cli
jp
pop
xchg
xorb
mov
ffreep
sbbl
fs
jg
sbb
cmp
lea
mov
xor
pop
sti
jp
mov
test
lcall
add
imul
xchg
in
pop
popa
cmpsl
add
jbe
jno
lds
adc
mov
fldenv
dec
adc
lock
mov
cmp
push
pushw
stc
jp
jb
mov
push
and
popf
lods
ret
jbe
cltd
add
addr16
xor
sbb
mov
jnp
inc
arpl
push
pop
pop
fiadds
data16
popf
rol
test
inc
add
sub
sbb
lods
out
jb
hlt
mov
adc
and
push
sbb
lds
sub
mov
out
adc
subl
push
jbe
lds
push
dec
sub
sub
dec
mov
pop
xor
es
xchg
in
inc
fcomps
dec
bound
pop
ljmp
fmulp
push
mov
mov
insb
test
imul
sub
and
or
sahf
bound
lock
inc
adc
shll
fbld
sub
outsb
repz
rcr
insb
jge
sahf
aaa
dec
mov
jmp
iret
mov
fsubl
mov
xchg
pop
cmp
ret
push
mov
pop
or
fildll
fistpll
aad
inc
xor
pop
shlb
sahf
loop
cli
int
rolb
adc
sti
movsb
icebp
mov
push
leave
cs
jp
and
jns
or
mov
fsubs
popf
fwait
lods
sbb
and
xlat
push
push
data16
dec
ficompl
leave
pop
dec
stos
pop
sar
fs
add
shl
sahf
push
mov
aaa
xchg
jp
bound
adc
lret
jg
pop
lock
sbb
cmp
sbb
cltd
repnz
xchg
xor
call
xchg
in
cbtw
icebp
movsl
pop
or
pop
repz
lret
iret
lds
push
sti
rcll
lret
icebp
and
rcll
jp
dec
rcrb
mov
out
pop
out
jmp
inc
cmp
enter
pop
in
dec
push
cmc
xchg
jne
dec
mov
into
dec
cmpb
jp
pop
cld
cmp
mov
mov
inc
jp
pop
add
mov
insl
lret
lcall
mov
lret
dec
dec
xchg
jl
cmp
sbb
and
jecxz
dec
data16
jbe
mov
test
add
jg
loop
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
inc
in
push
adc
adc
mov
fxch
ds
lret
stos
adc
popa
mov
xchg
in
out
dec
outsl
xor
sahf
mov
mov
jge
xchg
pop
shl
adc
jne
xchg
aaa
lea
sbb
mov
iret
movb
rolb
je
mov
sbb
xor
or
test
sub
mov
xchg
lea
int
inc
and
push
cld
mov
mov
sub
mov
imul
xchg
es
test
xchg
out
jb
jns
out
add
dec
jl
test
bound
iret
idivl
sbb
xor
xor
push
xor
cmc
xchg
movsb
roll
and
push
sub
dec
dec
mov
clc
mov
sahf
push
adc
and
cmc
fcoml
nop
arpl
aam
jb
in
rcll
mov
ret
sbb
aas
js
aas
insl
and
daa
data16
add
ljmp
movsl
outsl
loopne
test
jae
mov
mov
pop
frstor
pop
xchg
dec
sbb
cld
inc
or
mov
into
mov
sbb
mov
push
stos
jno
push
pop
stos
jg
xor
xor
sbb
add
ret
call
sbb
aam
out
pop
add
adc
inc
inc
jmp
xbegin
insb
mov
sarb
cmp
lds
cld
ds
push
xor
dec
repz
add
int3
xor
adc
inc
pop
mov
stos
pushf
xchg
pusha
mov
cld
data16
in
lods
cmpsb
loope
adc
and
ucomiss
sbb
ror
sub
jne
loop
sbb
push
idivl
mov
mov
scas
jnp
fdivrs
xchg
in
out
test
je
mov
sahf
insl
repz
rcr
daa
or
push
ds
jp
inc
push
mov
mov
inc
je
cs
jecxz
mov
std
or
push
adc
testb
lcall
xor
cld
mov
aaa
xor
fnstenv
leave
cltd
dec
rcll
aas
add
push
fdivrp
xlat
dec
cmp
insb
addr16
or
hlt
or
leave
sub
cwtl
scas
or
shl
es
imul
stos
jle
inc
lahf
push
pop
repnz
ret
xor
cli
mov
loope
add
push
lea
pop
lcall
stos
fstpt
mov
xchg
mov
cmp
jg
push
add
daa
fmull
pushl
lds
stc
nop
pop
add
jae
mov
or
into
mov
popa
cmp
xchg
gs
pop
pop
movsb
lds
jno
outsb
sbb
sbb
test
ja
cwtl
je
mov
movsb
xorb
cmp
cmp
jb
ss
scas
mov
call
aaa
dec
xor
sbb
xchg
sub
insl
sub
clc
mov
jle
scas
gs
push
sub
out
test
cld
mov
xchg
jnp
xchg
cmc
leave
sbbb
mov
adc
loopne
add
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
mov
scas
adc
adc
adc
je
cli
fnsave
cmp
push
jg
push
push
and
shlw
adc
adc
flds
test
aaa
movsb
sbb
mov
sahf
cmp
mov
lahf
or
inc
or
pusha
mov
sbb
pop
fwait
std
js
sbb
les
fs
mov
or
jl
rorl
andl
mov
mov
popf
loop
pop
jp
xchg
mov
sbbb
js
cmc
inc
xlat
gs
push
in
testb
imul
pop
repnz
cmpsb
loope
mov
shr
movsb
out
std
cmp
loopne
push
jle
xchg
jbe
shr
addr16
lods
lret
mov
cmpsb
push
pop
and
scas
fildl
add
fcmovnu
mov
pop
cmp
mov
xchg
call
outsb
push
xchg
das
ret
test
push
dec
xor
arpl
push
or
shll
adc
xor
dec
or
pop
xor
or
dec
mov
jbe
outsl
sar
mov
push
dec
push
popa
cwtl
fildl
add
leave
sti
lret
sbb
into
js
rorb
or
inc
push
cltd
sub
test
mov
fs
mov
pop
pop
insb
cmpsb
lcall
sbb
adc
scas
gs
xchg
sti
xchg
add
mov
sbbl
xor
mov
sub
mov
idivl
in
adc
jmp
adc
push
out
mov
lea
enter
jae
adc
cltd
jbe
cmp
loope
lods
pop
daa
ss
push
pop
addr16
rcl
mov
xlat
jo
fcomp
mov
js
es
bound
xchg
jecxz
jle
mov
jns
das
or
clc
push
scas
and
in
inc
cmp
mov
jle
pop
jo
mov
jmp
cs
out
fdivrl
test
mov
and
lret
cmpsl
movsb
xor
imul
sbb
lea
cmc
sahf
sub
dec
icebp
out
cmp
inc
cmp
sub
xchg
fs
push
rolb
cmp
aam
sub
scas
xchg
and
les
xchg
es
stos
xor
cmp
xchg
arpl
mov
fldt
xor
test
cmp
out
gs
sbb
negl
adc
mov
sbb
push
cwtl
nop
es
pop
ljmp
mov
pop
xor
push
xlat
add
ss
pop
aam
js
jnp
adc
movsb
test
mov
lret
cmp
inc
mov
jbe
jb
cmpsb
mov
stc
or
jle
mov
push
in
push
clc
jecxz
fwait
loop
jp
push
pop
jg
sbb
clc
or
xor
ss
repnz
push
mov
mov
jge
sbb
test
xor
into
sahf
lret
std
pop
mov
lfs
out
add
cli
shlb
aad
xor
pop
mov
pusha
lea
cmp
xchg
mov
ret
roll
call
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
std
jle
movsb
adc
adc
adc
cwtl
sub
pusha
inc
mov
call
adc
xor
loop
cmp
stc
push
push
xchg
test
inc
add
loop
test
test
jle
std
dec
xor
add
mov
or
sahf
mov
mov
sti
dec
popf
stos
js
lea
out
xchg
mov
es
test
dec
sbb
xchg
outsl
sbb
push
aam
popf
pop
inc
cld
fdivrs
cmpsb
add
repz
cltd
xor
cmp
fdivrl
nop
inc
pop
xor
dec
into
xchg
jbe
and
je
dec
mov
pushf
lahf
xchg
addr16
les
xor
jne
out
imul
call
inc
lret
xchg
jns
push
sub
cmp
cwtl
arpl
imul
lods
fstps
bsf
mov
pop
sbb
add
lret
pop
push
into
imul
mov
icebp
jo
adc
lahf
lcall
out
shrb
or
imul
popa
aad
sbb
pop
cmp
or
mov
push
imul
and
fadds
adc
aad
fmull
push
loope
add
pop
lds
ss
inc
loop
push
and
push
mov
lea
jae
sti
inc
loopne
fscale
lret
and
adc
insb
mov
push
sbb
nop
insl
sbb
hlt
pop
sahf
sbb
dec
xchg
cmpsl
mov
dec
mov
enter
or
das
or
mov
push
repz
xlat
push
ret
or
jmp
les
outsl
aad
adc
mov
jnp
pop
ret
dec
pop
and
xacquire
shlb
sbb
repnz
sbb
pushf
data16
adc
mov
ja
dec
pop
jge
in
xchg
mov
pop
leave
sbb
test
push
mov
or
pop
or
mov
mov
cmp
mov
in
movsb
mov
loope
mov
rep
xchg
jbe
aam
cli
dec
repz
add
loope
out
dec
sub
dec
les
adc
imul
and
pop
cli
or
adc
sub
out
popf
repnz
sti
rorb
jbe
inc
icebp
ja
mov
inc
xor
jno
push
lods
hlt
aaa
mov
xor
sub
stc
jo
xchg
jecxz
fcomps
popa
icebp
sti
bound
andb
xor
pop
ret
dec
pusha
sub
add
xor
lds
loop
xchg
ss
scas
hlt
fldpi
lods
jb
jle
sbb
insl
add
repnz
sbb
cmc
push
ret
fs
in
and
sub
xor
xchg
lahf
xchg
jge
fisttps
xor
jne
addr16
jne
jle
xor
in
outsl
mov
sbb
mov
mov
sahf
inc
jo
fwait
lcall
cmp
imul
inc
push
or
adc
adc
icebp
pop
mov
outsl
out
add
stos
nop
mov
add
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
xchg
int
jle
pushf
adc
adc
adc
add
mov
sub
add
pusha
push
mov
lcall
ljmp
push
call
subl
sbb
inc
jp
mov
mov
nop
push
mov
imul
mov
mov
shll
or
ljmp
pop
jno
aam
mov
pop
test
mov
popl
popf
xor
mov
in
add
call
and
in
out
pusha
inc
inc
and
xor
nop
repz
loope
ror
mov
xchg
xor
adc
adc
jns
mov
inc
test
outsb
gs
mov
movsl
cwtl
lcall
fwait
test
dec
jae
add
scas
lcall
rcll
aad
sahf
ja
xorb
inc
mov
imul
push
cmp
xchg
dec
add
cmp
or
pop
add
push
push
ret
push
push
movsb
bound
dec
jno
sub
dec
adc
xchg
stos
sub
push
icebp
mov
imulb
and
or
sbb
cmp
and
mov
mov
loopne
sub
ja
lods
sarl
or
sbb
nop
xor
add
std
add
gs
and
cs
sbbb
dec
and
cs
push
fisttps
std
cli
imul
push
push
jl
mov
xchg
scas
fwait
dec
jmp
sarl
ret
add
jae
mov
inc
out
fcomps
idiv
add
xor
das
xchg
lahf
jns
inc
and
lods
jge
xor
leave
sub
in
cld
dec
mov
jg
cmp
mov
aam
cmp
loop
ss
push
push
mov
repz
jmp
repnz
sarl
arpl
mov
mov
mov
movsb
movsl
dec
pop
adc
jle
sbb
or
pop
cld
add
xor
cmpsl
mov
pop
mov
push
adc
sysexit
cmpsl
jnp
pop
in
xchg
mov
or
ljmp
sbb
and
or
call
inc
xor
inc
mov
out
rcr
gs
fadds
int
adc
sub
pusha
or
dec
fcomps
bound
xlat
out
sub
stc
fdivrs
inc
ss
je
test
jg
push
mov
jns
shrl
popa
inc
mov
and
addb
dec
cmp
lcall
sbb
pop
jecxz
ret
dec
outsl
psubusb
dec
push
jge
add
pop
xchg
loope
xchg
aam
jno
pop
dec
mov
leave
or
xchg
in
xchg
pop
push
ljmp
fwait
or
push
rcll
push
inc
daa
dec
scas
mov
sub
fcomp
jnp
sahf
enter
test
stos
aaa
and
xchg
loopne
stos
in
lcall
bound
mov
scas
adc
and
mov
test
add
push
xor
mov
or
add
mov
jmp
xor
and
repnz
sahf
lods
loope
adc
adc
adc
adc
mov
inc
mov
pop
aam
or
and
das
lret
fwait
dec
dec
jnp
and
cld
xorl
imul
mov
inc
cmp
add
jle
xchg
lahf
cmp
mov
roll
fisubs
mov
jnp
js
jg
in
das
ja
jbe
mov
or
dec
ss
je
hlt
or
lock
xor
cmp
out
cmp
sub
daa
pop
add
in
sub
clc
jne
mov
jns
add
xchg
adc
fwait
push
inc
pusha
mov
movsl
outsl
andb
mov
fsub
adc
xchg
fdivrl
pusha
sbb
stc
inc
les
xor
adc
popf
fistl
fistps
in
lods
pop
shlb
push
inc
xchg
in
push
sbbb
les
arpl
call
mov
fdivr
jb
movsb
dec
or
lods
inc
popa
mov
pusha
rolb
push
divb
pop
sub
ds
mov
pushf
mov
cmp
aam
sbb
test
hlt
lds
sub
mov
xchg
push
add
sbb
stos
jle
push
push
mov
add
std
fs
pop
pop
sub
pop
pop
fwait
bsf
xor
jne
xchg
jb
cmp
jl
gs
push
stos
add
loopne
mov
xchg
pop
add
pop
push
loop
out
mov
insb
mov
cmp
jecxz
clc
xor
add
xor
loop
pop
sub
sub
push
cmp
jns
sbb
pop
test
or
je
mov
or
push
jae
enter
out
and
cwtl
iret
dec
sub
int3
mov
jmp
push
fsubrs
mov
sub
mov
xchg
fidivrs
aad
xchg
xor
xchg
add
or
dec
into
jae
repz
xorl
mov
cli
lret
pop
mov
push
mov
hlt
ja
or
mov
leave
dec
mov
sub
adcb
test
aaa
push
or
jb
idivl
lods
ffree
mov
cmp
repnz
js
adc
pop
fs
addr16
xor
mov
rcrl
clc
push
adc
loopne
lahf
lret
in
lcall
mov
cltd
fistpl
pop
mov
aad
into
xor
dec
out
test
stc
xor
scas
pop
inc
clc
jne
sub
dec
push
mov
pop
cld
dec
xchg
andl
pop
dec
cmpsb
inc
push
mov
mov
mov
sahf
ror
jp
inc
or
push
test
outsb
popa
inc
pop
mov
dec
jle
add
adc
push
mov
mov
cmp
pop
lret
pushf
jmp
or
mov
xchg
enter
lock
adc
js
ja
mov
mov
mov
mov
or
lods
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
movsb
adc
adc
adc
adc
fisttps
mov
or
push
stc
mov
adc
sub
fs
lods
mov
ficompl
test
xchg
jb
mov
aaa
in
and
dec
mov
dec
es
in
xchg
jmp
sub
out
call
and
mov
ljmp
lds
cmpsl
jmp
clc
stos
imul
fcoms
inc
push
aas
mov
fucom
inc
ljmp
sub
push
push
push
loope
test
or
xor
mov
fsubrl
sti
pop
lock
or
inc
mov
push
cltd
or
and
cld
fs
sbb
jbe
int3
mov
xor
movsl
adc
es
pop
mov
sahf
mov
mov
stc
push
mov
push
mov
pop
idivb
sbb
pop
mov
ds
loopne
or
pop
fwait
lea
ficompl
in
ret
xor
push
sbb
jge
mov
ret
mov
insb
push
addr16
xor
lods
sbb
push
in
outsb
mov
enter
cltd
and
push
imul
xchg
ss
pushf
xorb
and
leave
jns
pop
arpl
nop
pop
das
out
pop
mov
popa
int3
mov
arpl
or
fwait
cmp
stos
mov
cmc
jmp
pop
out
imul
xor
mov
pop
xchg
test
stos
aam
adc
insl
fildl
arpl
and
aas
pop
sub
push
or
jb
adc
push
adc
inc
int
inc
xchg
jns
xchg
leave
pop
mov
jns
roll
cmp
sarl
sbb
jmp
repnz
out
xor
outsl
repz
lret
add
sahf
cmc
push
lret
arpl
xchg
inc
aas
push
ret
inc
arpl
lds
fcoml
inc
mov
mov
out
jb
movl
mov
mov
fstpt
cmp
in
outsl
out
movsb
shll
ret
dec
ss
or
imull
fstps
jmp
adc
cmp
ffreep
dec
out
push
mov
mov
or
loop
jns
jno
pop
push
rolb
inc
lds
dec
js
pop
pop
outsl
mov
pop
gs
xchg
inc
loopne
jmp
cmp
ja
add
sub
test
bound
outsb
inc
inc
xchg
test
mov
das
sbbl
or
dec
cltd
cwtl
or
clc
incl
ror
sbb
add
push
loop
imul
jno
lret
jg
xchg
xchg
aaa
cmp
repnz
sarl
mov
mov
xchg
pop
and
sub
adc
sbb
rcr
aas
fdiv
mov
add
or
sub
cmp
popa
sub
xchg
stc
cmc
or
xchg
mov
data16
sbb
xchg
daa
push
addb
jbe
inc
test
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
pop
fadd
mov
adc
adc
dec
push
outsl
or
cmp
lock
cmp
push
jecxz
pop
mov
stos
icebp
test
loop
hlt
repz
dec
pushf
push
loop
sub
dec
mov
xchg
cmpl
cs
aaa
pop
in
jg
xchg
sub
mov
cmp
push
aam
pop
pushf
xor
pop
inc
dec
xor
out
sbb
cmc
andb
inc
mov
adc
inc
dec
scas
ja
push
inc
fdivs
js
push
int
push
adc
push
clc
divl
cmp
xchg
in
shrb
in
pop
aad
cwtl
mov
insl
pop
xchg
int3
sub
leave
cmp
add
jg
pop
inc
sbbl
dec
mov
clc
sub
in
cmp
movsb
mov
sbb
fs
nop
cmc
sub
aam
cltd
vunpckhps
imul
add
bound
and
pop
xchg
pop
bound
addb
mov
in
scas
les
mov
pop
and
fisttpll
out
push
icebp
imul
mov
gs
call
jmp
push
cmp
adc
or
or
cmp
fsubr
loopne
dec
sarl
push
repnz
in
add
xchg
lcall
and
mov
dec
pop
jecxz
cs
lret
call
xchg
and
in
dec
sub
sbbb
imul
cmpl
xchg
hlt
jne
fcmovu
fisttpll
fistpl
das
int
out
out
jle
push
fldl
push
xchg
je
adc
je
test
cmp
inc
mov
pop
add
xchg
xor
in
lret
jne
push
scas
lods
jne
loope
mov
out
and
addr16
mov
lea
cltd
mov
push
ret
das
push
repnz
rcl
outsl
movsb
bound
pop
fisttpl
jge
mov
cld
inc
sbb
aas
push
or
xchg
dec
roll
gs
mov
xor
fwait
pusha
fmull
fmul
daa
out
mov
fisttpll
call
insb
into
cmp
fistl
inc
cmp
aad
ja
aaa
and
gs
adc
jge
jns
jne
xchg
enter
cmpl
xor
or
sbb
loop
daa
mov
cmc
clc
sbb
or
xchg
icebp
cs
xchg
push
dec
popa
mov
mov
xchg
sub
hlt
cmp
pop
mov
andl
lock
sbb
addr16
jnp
inc
ret
pushf
mov
mov
cmp
lea
sub
cwtl
ds
jp
addr16
mov
loopne
imul
sbb
mull
pop
or
cmp
mov
pop
xor
fsubp
out
leave
or
mov
lcall
inc
jo
repz
aam
aas
test
dec
into
mov
fxch
fdivrs
mov
xor
xor
loop
push
mov
icebp
jmp
scas
lret
rcrl
or
cltd
cmp
push
pusha
mov
xor
and
cwtl
xchg
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
data16
xchg
push
or
je
lods
sahf
stos
in
jl
rclb
aaa
cltd
adc
popa
popa
or
out
test
cwtl
cld
push
ljmp
imul
sbb
fwait
and
and
dec
rorb
idivb
mov
in
cmp
push
xchg
mov
in
icebp
xor
inc
dec
and
sub
push
push
imul
or
inc
out
cmp
add
xchg
fsubs
or
sub
nop
sub
pop
jle
out
test
loopne
fnstcw
dec
shlb
dec
mov
imul
dec
clc
xchg
outsb
fcomip
jb
add
stos
cmp
int
xor
loop
and
jp
mov
mov
out
dec
popa
jb
jg
jl
xlat
mov
js
fcomi
arpl
movsl
ret
adc
stc
fisubl
or
ret
sti
inc
loope
fnstcw
lahf
pop
int
mov
pop
push
push
pop
dec
sub
pop
cmp
inc
add
loopne
aad
jo
and
inc
xchg
xor
sub
adc
push
cld
mov
movsl
aaa
das
xchg
fdivl
sub
add
insl
mov
addb
jo
add
pminsw
outsl
adc
xorl
mov
add
xchg
add
mov
enter
jae
shlb
into
mov
adcb
adc
ret
mov
fnstenv
mov
and
or
popa
cmpb
sub
dec
test
adc
pusha
cmpb
pop
inc
imull
mov
cmp
cmp
mov
xor
xchg
pop
lret
scas
ret
shrl
inc
pop
sti
orl
or
adc
movsl
xchg
aad
jbe
out
cmp
cmp
fwait
cwtl
xchg
outsb
lcall
mov
or
clc
dec
or
nop
mov
xchg
or
cmp
mov
xor
mov
insl
sub
adc
pushf
ja
mov
smsw
adc
punpckldq
mov
out
lods
sub
fisubrs
cmovp
inc
in
xor
shrl
sub
andb
outsb
std
rcrl
shrl
mov
lods
pop
push
mov
gs
inc
aam
lock
call
popa
sbb
push
out
inc
scas
jl
cmp
cmp
dec
xor
mov
lods
rcl
out
in
inc
pop
adc
clc
fldl
dec
add
lods
sbb
push
or
into
xchg
and
stos
pop
iret
js,pt
xchg
pop
jge
jge
std
icebp
push
in
lods
xor
shll
and
std
loope
add
push
test
pop
or
std
aad
stos
pop
jns
in
leave
clc
sub
in
sti
xor
inc
push
fucomi
pushf
imul
or
inc
shl
inc
cmpsb
data16
lahf
mov
sbb
adc
int3
out
adc
popf
pushf
loope
imul
cmp
jae
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
js
jl
adc
adc
dec
cli
fcmovnu
add
jns
gs
add
lods
pop
xchg
pusha
ljmp
sub
xchg
mov
dec
adc
out
sub
mov
adc
test
mov
xchg
hlt
or
mov
xor
mov
push
and
dec
mov
adc
cmp
cmp
imul
cmpsl
daa
push
sahf
jle
std
clc
arpl
insl
mov
std
cmpsl
stos
lahf
sub
gs
dec
sub
or
aaa
in
test
iret
iret
push
das
dec
imul
mov
es
mov
movsb
rcll
lea
or
je
and
cmp
hlt
push
inc
or
insl
mov
and
dec
clc
call
rcrl
enter
mov
mov
ja
imul
ja
mov
daa
fwait
addb
pop
pop
in
and
push
sbb
mov
xor
mov
fadd
cmp
push
push
mov
push
filds
mov
jo
xchg
popa
xchg
pop
cli
or
lret
sbb
push
jae
addl
cmp
adc
ror
test
adc
sysexit
out
andb
stos
out
pop
push
in
jo
jnp
add
and
mov
aaa
addr16
mov
loop
xor
sbb
ret
imul
shrb
add
jo
jmp
jno
test
dec
fldt
in
push
mov
fsub
scas
imul
addps
stc
pushf
push
popf
jno
mov
int3
pop
outsb
sub
cmpsb
repnz
out
outsl
out
xor
ret
jns
sarl
mov
xchg
into
sub
lret
in
cmp
iret
xchg
shll
inc
stos
sbb
data16
sar
fadd
sbb
test
stos
int3
sub
outsb
push
jno
or
add
bound
hlt
push
xor
xor
jno
test
stos
loopne
cmp
inc
mov
fsubs
mov
cs
lahf
lret
push
stos
dec
pop
jecxz
mov
aas
pop
mov
adc
adc
sub
xchg
loopne
push
sub
sbb
cmp
int
adc
leave
push
lret
dec
lcall
xor
and
jns
movsb
mov
mov
sbb
cmp
ret
and
push
nop
and
mov
sbb
aas
lcall
mov
sti
inc
rorl
es
add
pushf
inc
ss
loop
repnz
xor
dec
repnz
out
or
xor
jno
stos
mov
xor
insb
lret
xor
mov
push
jl
je
sti
scas
jecxz
insl
sti
mov
and
mov
inc
data16
sti
dec
loop
outsb
jmp
fmul
and
dec
jle
mov
negl
bound
test
stos
test
pop
and
into
scas
push
xchg
mov
lret
ret
popf
jmp
test
dec
sbb
jmp
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
scas
adcl
adc
xor
inc
sub
icebp
inc
out
in
sub
cli
insb
mov
inc
in
cs
lds
dec
push
push
in
fwait
sbb
push
or
push
or
mov
xchg
shll
cmp
popf
int3
je
inc
mov
mov
mov
pop
mov
aam
daa
xor
sub
lea
ficoms
out
inc
mov
lods
js
mov
repz
daa
push
aas
sub
xchg
mov
cmp
scas
subl
jae
scas
jge
push
je
arpl
subl
adc
scas
mov
adc
xchg
outsb
mov
lret
mov
and
addr16
ficompl
leave
into
cltd
rclb
mov
in
out
sub
mov
icebp
daa
in
mov
sbb
sbb
in
adc
push
or
ja
cltd
mov
pop
fadd
lock
xlat
pop
xor
stos
push
dec
rcrl
add
cmpb
pop
xchg
cmpsl
jp
jp
cmpb
jecxz
inc
in
and
push
imul
cmpsb
hlt
pop
enter
inc
xor
sbb
adc
es
mov
cmp
adc
dec
adc
gs
sti
dec
js
mov
dec
push
lds
fistl
sbb
lock
jbe
mov
es
xor
aas
cltd
out
sbb
cltd
arpl
mov
insl
clc
nop
jg
sbb
mov
sahf
fldl
cmpsb
mov
hlt
addb
fbstp
dec
leave
mov
fidivrs
cmp
ss
iret
cs
pop
sbb
sub
add
jp
lds
jo
cwtl
mov
pop
adc
ss
fcmovnbe
sbb
pusha
sbb
mov
aam
loop
pop
mov
sub
dec
push
mov
dec
mov
mov
push
cmp
add
mov
lahf
sbb
rsqrtps
inc
shll
cmp
and
enter
loopne
pop
cmp
adc
dec
leave
adcb
adc
cltd
mov
xchg
stos
cwtl
or
sbb
ret
dec
xchg
ss
add
mov
aas
sub
dec
push
rolb
inc
pop
cmp
jno
pop
mov
movsl
sbb
add
ljmp
ss
aad
or
enter
test
aad
ror
jge
in
fdivrl
cmovo
cmpsb
sbb
pop
lcall
test
test
fsubl
sbb
push
or
in
dec
loope
pop
leave
mov
mov
sub
pop
ds
dec
pop
lcall
jb
sub
lahf
js
cmp
mov
and
or
enter
leave
xchg
lods
aam
cmpsl
addr16
in
xchg
xor
mov
mov
loopne
fcomi
fidivrs
in
loop
pop
push
push
adc
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
dec
jno
lods
mov
adc
mov
jne
xor
imul
enter
sbb
push
loop
fcomp
cmp
lods
pop
or
test
test
xchg
jo
cmpsl
pop
push
sarb
fidivs
mov
or
outsl
std
mov
pushw
pop
inc
xchg
adc
dec
jne
push
pop
push
in
or
xor
xor
jecxz
jo
push
cmpsl
clc
mov
mov
or
mov
xchg
insb
and
out
fs
adc
aam
add
out
cmc
mov
cs
xor
cmp
aaa
lahf
orl
dec
add
scas
lea
icebp
int
and
lock
mov
jp
mov
jne
adc
stc
jbe
aad
sti
xchg
sarb
mov
sbb
jno
fidivrs
push
xchg
sti
sbb
icebp
pop
mov
sbb
mov
aam
push
push
jno
mov
dec
stos
push
cmp
push
push
add
xchg
xchg
out
xor
fcmovu
or
mov
cld
inc
mov
push
mov
and
mov
sbb
xchg
loopne
lret
in
loop
add
xchg
mov
aam
inc
out
lods
sti
test
insl
push
push
loop
fsubs
inc
rcll
mov
mov
ss
cmp
test
out
repnz
sbb
xchg
mov
inc
pop
aam
or
fistps
imul
sub
and
test
sbb
push
into
sub
lock
sub
pushf
cwtl
in
cmp
mov
push
xchg
mov
lret
push
je
sbb
jo
or
test
or
in
inc
dec
in
ljmp
out
jne
or
mov
jno
data16
ss
shrb
sub
jp
lods
std
js
ds
mov
mov
dec
es
ljmp
xchg
testl
jmp
out
ror
add
cmp
push
and
sbb
mov
sbb
popa
fs
mov
mov
mov
mov
loope
pop
mov
add
mov
pop
sub
stos
push
adc
cmp
sbbb
adc
daa
xor
cwtl
add
adc
pop
aaa
fcoms
gs
cmc
push
jae
sub
jle
ljmp
adc
dec
outsb
lods
decl
adc
loop
mov
icebp
mov
lret
or
mov
and
push
clc
add
mov
out
mov
in
sbb
pop
mov
push
pushf
imul
mov
in
ds
gs
xchg
outsb
sub
jne
mov
aam
inc
xchg
mov
aam
mov
push
add
fdivp
sahf
enter
adc
xchg
fiadds
and
sbb
xor
mov
sahf
hlt
mov
dec
repz
dec
loope
push
xchg
je
gs
push
cmp
xor
addl
mov
and
js
pop
lods
sbb
push
sbb
or
xor
lcall
fdivrs
stc
lds
mov
inc
aas
mov
mov
mov
inc
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
adc
mov
push
call
pop
xor
in
lcall
mov
dec
push
mov
push
jbe
gs
lahf
leave
mov
outsl
push
enter
mov
push
into
rclb
inc
fnstsw
outsb
pop
and
jl
mov
int3
bound
or
push
mov
popa
andl
inc
sbb
loopne
dec
icebp
inc
jg
jecxz
ret
call
shl
test
jno
loope
xlat
movsl
jl
and
popf
addr16
ds
xor
in
inc
in
je
loopne
test
rolb
leave
mov
jb
jg
pop
sub
mov
call
scas
mov
mov
or
jmp
xlat
xor
mov
mov
mov
test
jmp
scas
add
insl
loopne
hlt
jnp
jo
adc
cmp
sbb
xchg
sbb
in
sbb
or
jne
and
inc
xchg
mov
sbb
loopne
mov
ljmp
pop
fstl
mov
push
mov
push
dec
cmp
fimuls
jecxz
or
insb
push
mov
lods
fidivrl
es
mov
fstpl
scas
mov
mov
imul
xor
xlat
dec
add
cs
sbb
jecxz
xlat
and
into
stc
mov
mov
test
xchg
insl
jae
mov
xchg
mov
hlt
inc
sbb
cmc
xchg
cmp
add
in
add
in
xorb
out
adc
and
sub
push
repnz
aad
lock
jl
pop
dec
and
and
sbb
aaa
icebp
data16
sub
fdiv
inc
pop
mov
repz
gs
sub
shrb
sub
icebp
je
lahf
mov
mov
jle
mov
std
mov
stos
jno
cmpsl
ljmp
loope
adc
mov
jae
out
int3
xor
fldt
push
movsb
fstps
mov
jmp
pop
nop
pop
adc
fadds
dec
jl
or
outsl
push
loopne
push
shlb
cmp
jo
pop
or
inc
stc
mov
pop
insb
sahf
pop
in
inc
adc
dec
or
jge
mov
jg
mov
pusha
sahf
rcrb
dec
cmp
mov
adc
add
and
mov
cltd
mov
push
cmpsb
repnz
gs
sub
mov
sti
in
inc
fdivrs
insl
icebp
imul
push
push
or
mov
fcomps
rep
fcomps
mulb
sbb
out
lods
daa
out
push
lahf
test
fcompl
rclb
push
adc
lods
mov
je
les
pop
shrb
ljmp
and
dec
das
cmp
sbb
test
clc
notl
jb,pn
test
adc
fwait
loope
ljmp
adc
nop
jmp
insl
push
sub
xchg
adc
ja
lea
inc
mov
pop
xchg
lods
add
mov
mov
xchg
movsb
pop
xor
icebp
xchg
aas
fnsave
stos
dec
lds
fwait
mov
inc
mov
divb
lret
pusha
cmp
cltd
lret
cmp
outsb
add
mov
lret
adc
xor
movsl
sbb
add
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
add
adc
mov
mov
mov
loopne
push
mov
jbe
xchg
mov
pop
adc
jb
imul
cmp
lock
fxch
push
jb
sbb
adc
loopne
xor
daa
test
movsb
or
jg
sbb
in
cli
fcomps
mov
mov
fldenv
out
lcall
mov
or
mov
mov
fstl
insl
inc
out
push
loop
pop
xchg
ds
lods
in
out
sar
cmp
mulb
sub
aad
mov
test
pop
dec
xor
jnp
jae
inc
push
adc
mov
jno
sub
xlat
xlat
sub
push
and
fidivrs
sub
mov
lods
int
arpl
pop
rorb
fbld
mov
cltd
jne
jne
jg
int3
fcomi
cmp
gs
and
stos
aam
scas
pushf
roll
xor
imul
cmc
imulb
mov
pop
sub
movsb
or
push
mov
imul
imulb
pop
sbb
sub
fadds
mov
sbb
add
push
push
pushf
push
nop
cltd
repz
push
movsl
je
rcll
in
mov
aaa
sbb
mov
jl
lds
es
push
in
pop
add
cmp
cmp
cli
sub
mov
xor
es
dec
or
loope
gs
xchg
push
cld
pusha
xchg
nop
push
ja
mov
mull
cmp
dec
jg
mov
mov
mov
pop
sub
and
jp
push
xor
jne
or
jns
movsl
shlb
add
js
int3
cltd
pop
sbb
rcrl
xchg
loop
cltd
iret
lahf
push
std
ret
xchg
lret
cli
cld
out
arpl
or
mov
loope
enter
shlb
pushf
popf
mov
xlat
fnstcw
lcall
and
pop
adc
pop
adc
xchg
xor
lret
mov
arpl
iret
scas
mov
test
imul
arpl
aam
enter
int
lahf
jo
or
add
or
js
jb
movl
xchg
push
xchg
inc
xor
sti
adc
in
fnstenv
outsb
push
or
sbb
inc
movsl
cmp
sub
loop
jo
push
jmp
aad
xlat
inc
not
adc
lock
push
or
or
popa
idiv
push
repz
dec
aad
pusha
arpl
outsb
mov
sahf
mov
sar
test
outsl
scas
outsl
call
xor
mov
sbb
in
xchg
repnz
xor
mov
aaa
cwtl
rclb
fwait
mov
xor
mov
mov
mov
cmpsl
inc
aad
inc
lds
sbb
mov
shll
ret
mov
int3
mov
sub
lahf
outsl
add
mov
jge
adc
jns
hlt
les
inc
cmp
mov
insb
iret
xor
lret
dec
push
pop
movsl
fildl
nop
pusha
fldcw
mov
or
fwait
add
das
xchg
leave
xor
popf
cmp
mov
imul
pop
dec
pop
and
test
adc
cwtl
inc
pop
add
call
iret
test
inc
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
jle
pop
adc
mov
adc
iret
push
imul
mov
push
pop
add
adc
dec
mov
cmp
mov
mov
jg
jle
outsb
jmp
jge
fbld
in
jno
in
mov
mov
jle
lret
sbb
and
push
sbb
cli
inc
andl
shlb
rcr
pop
adc
and
cmc
or
ss
push
cs
mov
dec
cmp
jmp
push
push
std
and
mov
mov
hlt
add
push
subb
and
sub
jle
fnstenv
dec
gs
jne
rsm
xchg
mov
cmp
jnp
aaa
xor
repnz
sub
aam
lods
sub
or
lret
mov
push
mov
test
mov
mov
sub
imul
jo
mov
xchg
or
xchg
xor
sub
scas
jle
test
stos
cmpsl
mov
xchg
neg
aas
mov
sub
mov
in
in
repz
in
xor
lea
lret
cli
xlat
cmpsl
sub
push
fiadds
call
jecxz
dec
lods
cltd
add
adc
int3
out
cmp
stc
push
lds
xchg
ja
out
push
and
lret
pop
cmpsb
loop
scas
push
and
das
out
dec
inc
inc
sbb
add
out
jmp
cmp
std
pusha
addr16
sub
and
push
lret
stos
int
lods
jbe
sbb
lods
mov
pop
test
push
jecxz
xor
dec
scas
push
dec
jb
mov
add
and
jecxz
sar
jle
ja
jnp
addr16
pshufw
insl
dec
or
push
aas
sbb
das
push
pop
xchg
cltd
repz
shlb
mov
aas
int
xor
jl
adc
cmpsb
jnp
enter
fucomi
mov
movsl
sub
jns
outsl
fwait
arpl
je
xchg
cmp
jnp
or
std
lret
mov
sbb
mov
cli
xchg
adc
mov
lods
mov
cli
movsl
xchg
xchg
daa
sub
adc
push
dec
inc
lcall
cmpb
sbbb
and
add
mov
xchg
notl
popa
mulb
mov
pusha
xchg
cltd
cmp
cmp
ret
mov
mov
dec
addr16
push
out
sbb
les
in
mov
mov
pop
pop
and
jge
mov
mov
and
pop
gs
xor
pop
sub
in
jmp
xlat
mov
test
mov
jae
imul
popa
adc
cmpsl
push
pop
mov
and
pop
outsb
out
fidivrs
shrb
bound
lahf
jno
out
stc
mov
fimull
out
js
sub
xor
sbb
pop
leave
into
movsb
enter
aad
dec
sarb
pop
mov
inc
push
mov
andb
cmpsb
pop
push
pop
mov
stc
pop
cli
shlb
sbb
int3
mov
mov
jbe
and
es
cltd
lock
xchg
sub
cmc
pop
icebp
cmp
sbb
adc
push
pop
sub
fwait
xchg
cmc
jp
jle
cmpb
and
inc
inc
xchg
stos
rcrb
push
dec
push
rcr
popf
mov
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
pop
inc
stos
notb
adc
push
data16
mov
cs
mov
mov
movsb
push
mov
sahf
dec
int3
xor
lea
adcl
xchg
push
adc
sub
sbb
lds
enter
jbe
insl
pop
jle
out
fdivrl
movsl
lea
cmp
out
test
add
add
mov
inc
mov
xlat
icebp
pop
pop
add
jmp
dec
push
cs
and
enter
dec
repnz
fwait
addr16
addr16
mov
lret
clc
mov
xor
stos
cmpl
sbb
icebp
or
mov
xor
inc
movsb
cmp
push
xchg
mov
adc
push
xor
mov
stc
test
push
mov
xchg
test
sub
outsb
cmpsl
fdivrs
lret
cmp
pop
mov
scas
stos
jg
jecxz
dec
ror
mov
pop
sbb
repz
sbb
mov
push
dec
dec
mov
xchg
pop
aas
jp
or
xchg
xor
push
test
outsb
out
inc
pop
push
iret
mov
sbb
outsb
stos
mov
adc
test
lds
rcrl
mov
test
mov
jg
int3
or
dec
xchg
xchg
dec
or
pop
ds
cli
dec
mov
jp
stos
jno
and
outsl
popf
mov
push
and
jle
jecxz
fwait
add
jo
call
pop
loope
mov
stos
mov
jg
leave
jecxz
cmp
fists
sti
repnz
jge
or
arpl
adc
rcrl
inc
push
dec
sub
movsb
push
push
xchg
add
cld
pop
cmpsb
shrb
jbe
sahf
lret
jbe
sbbl
sub
test
mov
test
pop
cli
jne
pop
loop
shl
out
mov
xchg
repz
pop
sbb
pop
sbb
add
ret
dec
mov
mov
pop
rorl
sahf
and
fcompl
sahf
cmp
mov
mov
mov
add
pop
or
dec
push
push
je
int3
adc
push
inc
fldenv
cs
jo
popa
mov
fcoms
inc
hlt
incb
stos
mov
orb
xor
xchg
ljmp
jno
mov
out
ret
sub
ficompl
out
and
imul
cmpl
int3
adc
and
insl
jp
filds
dec
and
mov
dec
ljmp
sub
push
or
sub
cmc
pop
cmp
mov
add
mov
sbb
sub
daa
test
loope
data16
stos
pop
rorb
lods
fisttps
mov
mov
mov
mov
sbb
jl
jmp
jns
mov
mov
repz
clc
insb
outsl
or
ds
cwtl
xor
lods
out
xchg
sbb
lret
or
mov
sub
int
pop
xchg
mov
lcall
cltd
push
cmpsb
lock
cmp
or
daa
aad
hlt
outsb
mov
nop
cmpb
dec
xchg
adc
repz
mov
xor
inc
data16
sbb
push
roll
add
push
xchg
xor
dec
popf
mov
pop
fiaddl
inc
cmp
fwait
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
mov
mov
adc
mov
inc
call
rolb
mov
add
mov
xchg
fbstp
pop
lds
jne
fisubs
xor
push
repnz
lods
neg
inc
xchg
cmpsb
mov
mov
iret
mov
mov
ss
sbb
rep
in
leave
pop
dec
ret
inc
rclb
lret
add
out
fwait
movsl
mov
mov
adc
icebp
nop
push
mov
and
sbb
repz
cmp
push
fisubrl
add
fwait
add
test
pop
add
pop
out
add
dec
out
in
mov
inc
shl
inc
pop
cmc
stc
sbb
jno
sar
push
jae
add
sub
dec
sbb
mov
mov
cmp
add
fisubs
adc
dec
stc
das
dec
or
dec
jg
loop
push
xchg
pop
int3
push
ret
jnp
leave
sbbb
lds
jg
push
mov
push
dec
push
inc
hlt
in
xchg
dec
xlat
inc
pop
mov
fistps
or
fdivrl
and
jne
gs
cmc
xchg
mov
jnp
jne
stos
xchg
pop
call
js
cmpsl
xchg
bound
push
or
imul
xchg
mov
xchg
fwait
xchg
fs
mov
lock
inc
outsb
adc
ljmp
popl
ja
ror
dec
loopne
movb
popa
shlb
jle
clc
sbb
adc
lods
repz
inc
push
gs
out
push
and
and
dec
mov
push
movb
sbb
lock
cltd
fmul
add
and
int
scas
gs
push
xor
insl
jo
shr
jns
xchg
setp
mov
into
mov
dec
dec
mov
mov
fsubr
inc
or
mov
std
sbb
fsubr
lcall
fstl
mov
mov
and
mov
adc
repnz
loopne
test
xor
dec
fnstcw
dec
testl
cmp
jecxz
stc
jns
mov
cltd
and
jo
xor
scas
sub
sub
in
push
and
fiaddl
mov
cmpsl
sub
hlt
or
xchg
pop
scas
dec
icebp
js
aad
xlat
std
push
fstpt
rcrl
inc
inc
jg
adc
aaa
sarl
leave
gs
push
push
clc
ss
fs
out
or
mov
mulb
mov
mov
outsl
xchg
push
add
jle
ss
std
xchg
test
jo
xchg
adcl
adc
jmp
aas
inc
fbstp
arpl
cmpsl
jnp
repz
and
jecxz
push
xor
lcall
cmp
jbe
pop
pop
and
cmp
stos
fdivs
adc
pop
insb
fcomps
sub
cli
movsl
push
adc
dec
add
xlat
cltd
inc
lea
pusha
ss
stos
cld
orb
mov
adc
int
push
or
jle
sbb
jo
popa
xor
xor
lahf
cs
dec
xor
lods
jbe
cwtl
cmc
out
push
popf
js
mov
inc
sbb
das
in
adc
pop
inc
push
ret
dec
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
cmp
pushf
lods
xor
adc
adc
inc
jecxz
loope
aad
scas
sbb
clc
add
mov
lock
sahf
mov
outsl
outsb
or
xor
mov
test
out
cmpsl
mov
sarl
adc
int3
mov
sbb
out
popa
sbb
jecxz
enter
cwtl
push
hlt
mov
bound
jp
leave
push
add
call
cli
dec
xchg
push
sahf
pop
lcall
add
cmp
jl
sub
mov
stc
mov
xor
xchg
aas
mov
mov
aaa
sti
test
insb
pop
fs
rorl
lds
into
imul
and
push
cmpsl
lods
cmp
stc
scas
ds
push
mov
cmp
outsb
xchg
sbb
addr16
in
cmp
mov
mov
mov
ljmp
mov
jle
mov
sti
mov
or
fldt
or
rorl
jae
icebp
das
dec
cmp
je
aas
mov
cmp
add
cmpsl
popf
xor
lahf
mov
mov
ret
ss
scas
add
iret
subl
cmc
xchg
les
cmpsb
cmp
mov
lret
adc
out
and
add
mov
inc
xchg
lds
or
lds
push
pop
insl
dec
jns
and
add
xchg
aas
movsl
mov
add
fwait
or
imul
ret
and
sub
cs
mov
nop
sbb
inc
adc
adc
inc
mov
sub
xlat
sbb
lahf
test
mov
lret
pop
push
test
xchg
mov
lock
pop
mov
mov
push
lret
add
les
push
or
sahf
mov
movsb
sbb
shlb
cld
jecxz
popa
push
pop
xchg
cmpsl
lret
out
fiaddl
xchg
iret
pop
out
jmp
and
test
mov
fisubrl
and
arpl
scas
sub
ljmp
xor
ficomps
clc
out
enter
and
fistpll
aas
ja
sbb
pop
movsl
sbb
int3
xlat
sbb
jecxz
jne
out
icebp
test
in
mov
sahf
mov
dec
dec
mov
sub
loop
std
mov
int
mov
sub
or
or
in
cmc
fistl
ret
lods
jae
and
adcb
pushf
lcall
nop
push
mov
or
nop
jge
dec
das
sbb
jp
das
add
int
mov
fbstp
pop
inc
lret
dec
xor
pop
je
gs
movsb
xor
fwait
daa
or
mov
in
mov
das
or
data16
inc
invd
jno
pop
test
popa
adc
mov
lods
mov
mov
add
or
xor
xchg
mov
dec
aaa
int3
ret
sbb
cmp
vpsllq
insb
push
mull
out
scas
xchg
or
mov
lea
cmpl
dec
xchg
cli
mov
out
insl
movsb
mov
or
pop
std
cmp
push
cmpsb
fstl
insb
test
shrl
ror
cld
les
mov
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
push
adc
mov
adc
sbb
flds
outsl
out
push
in
push
out
jmp
add
es
mov
ljmp
jle
andl
addr16
cld
sub
cmp
loope
jmp
ret
cli
imul
push
je
or
popa
xchg
xchg
jb
cmc
int
pop
mov
cmp
fldenv
sub
test
pop
push
dec
out
das
adc
sbb
push
push
mov
outsb
popa
dec
fstl
xchg
mov
lock
cmpsb
cmp
mov
inc
cmp
fs
popa
sbb
xor
jmp
or
fmuls
or
dec
in
or
aam
or
push
fistps
cmpsl
mov
out
fnstsw
fnstsw
test
lods
imul
cwtl
xchg
jne
xlat
fistpll
test
add
mov
mul
jo
scas
negb
cmpsb
xor
cmc
sub
sbb
lahf
push
stc
mov
mov
jno
xchg
out
shlb
inc
xchg
bound
cmp
mov
push
ja
pop
loop
fistpll
dec
incl
push
out
sbb
in
jle
filds
outsl
mov
push
lods
jae
icebp
arpl
cld
aam
jge
fnsave
sbb
sbb
xor
rcll
les
jno
flds
out
push
add
xchg
scas
jno
pop
js
mov
lods
ljmp
insl
push
das
std
inc
les
arpl
out
je
cmc
mov
ret
stos
cmp
sub
add
loop
fwait
add
cmp
push
sbb
lcall
and
or
scas
dec
ret
dec
outsl
lods
dec
pop
push
xor
sbb
push
enter
rolb
add
cmp
xchg
and
mov
pop
push
cmp
fnstsw
push
cmpsb
dec
pusha
aaa
inc
hlt
xchg
vpcmpgtw
aaa
pusha
cmp
mov
std
stos
hlt
rcrb
adc
jp
dec
lock
lahf
mov
scas
rcl
inc
mov
rorb
pushf
add
lret
jb
mov
mov
pusha
cmp
adc
pushl
xor
ret
scas
pop
lods
mov
mov
pop
in
repnz
sti
add
jno
and
sbb
fldl
xor
cmp
sti
sub
push
das
pop
lcall
jge
mov
ret
sar
das
rcll
cwtl
call
sub
or
cmp
loopne
lret
cwtl
push
or
shl
dec
add
push
sbb
je
sub
mov
and
fsubl
cmpsl
jecxz
loope
adc
fisubrs
dec
stos
dec
shl
test
xchg
pop
add
negb
outsb
std
push
mov
jecxz
and
das
sub
or
int3
mov
sbb
push
call
fnsave
jge
mov
ljmp
mov
or
xchg
movsb
adcl
aad
adc
gs
shlb
xchg
popf
mov
daa
add
cmpsb
movsb
jo
lahf
lcall
jmp
out
dec
inc
bound
fiadds
mov
pusha
sub
mov
sub
ss
mov
insb
or
add
jne
sub
shl
push
ljmp
add
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
popa
push
inc
stos
jbe
adc
mov
adc
das
movsl
pop
sbb
xchg
push
mov
sbb
cli
je
push
out
cmp
and
movsl
mov
popf
pop
jnp
jg
outsb
shll
add
mov
xchg
dec
into
scas
or
loop
leave
loopne
push
cmc
call
mov
mov
mov
cld
out
and
and
pushf
push
jns
es
bound
mov
dec
lahf
in
fidivl
add
jbe
sbb
movsb
arpl
jae
data16
dec
jo
xchg
inc
mov
mov
loopne
out
call
cmp
mov
mov
dec
ljmp
adc
push
mov
xor
adc
push
dec
pop
inc
aad
insl
jb
add
clc
loop
push
pop
and
dec
push
or
test
push
in
mov
adc
xchg
std
mov
lahf
bound
test
stc
jo
adc
stc
mov
movsl
dec
cs
dec
pop
std
mov
pop
stos
flds
xchg
jne
cwtl
lock
mov
fwait
add
push
push
or
hlt
ljmp
sbb
sahf
ja
cmp
pop
add
add
xor
lods
fnstenv
les
data16
fcmovbe
pop
in
lods
int3
sub
outsl
int
bound
mov
movsb
xchg
iret
and
mov
cmp
push
pop
mov
inc
js
loope
mov
jmp
jmp
xor
and
push
popa
jne
lret
mov
cmp
movsl
lods
push
inc
je
mov
and
xorl
and
repnz
xor
insb
loope
sahf
add
subb
push
out
sub
lods
enter
xchg
mov
xchg
sbb
xlat
pusha
fs
push
cmpsl
clc
push
and
iret
xor
addr16
sub
or
les
and
and
sbb
std
sbb
mov
cltd
inc
jae
fnstenv
jne
mov
fsubrs
push
or
sub
in
dec
push
sub
into
or
repz
shl
call
mov
mov
lods
and
mov
xchg
dec
loope
mov
daa
or
pop
jle
shll
fsubrs
mov
push
adc
rorb
pusha
inc
jno
xor
movsl
inc
mov
popa
ret
sub
iret
push
out
push
jno
out
jb
loope
ficoms
shrb
xchg
adcl
dec
mov
mov
xor
outsl
in
test
negl
enter
loopne
imul
and
xchg
bound
cmp
out
xchg
push
dec
cld
push
lods
std
movsl
push
inc
jne
add
cmp
aam
jmp
fstps
or
jmp
test
sub
lret
nop
add
popf
loop
cltd
pop
or
dec
push
test
and
enter
scas
cmp
fmuls
fs
push
outsb
dec
in
aad
jb
sbb
notb
icebp
js
add
shll
into
add
sahf
test
sbb
stos
cmp
in
dec
mov
mov
xchg
pop
loop
jecxz
lock
cli
jno
adc
xchg
stos
or
insl
andb
add
roll
out
ds
movsl
push
add
xchg
mov
mov
adc
inc
loopne
fcmovnbe
inc
lock
cwtl
xlat
scas
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
insb
insb
or
adc
mov
adc
jb
leave
das
or
sbb
mov
aad
push
clc
lcall
mov
lods
add
mov
mov
adc
jae
pop
and
xchg
movsb
inc
or
les
aam
cmp
xor
pop
add
mov
aam
xor
fs
call
push
add
mov
cmp
inc
dec
out
mov
add
cwtl
arpl
bound
inc
pop
mov
mov
push
dec
les
dec
fisubrl
cmc
daa
mov
push
bound
xlat
push
cmc
jb,pt
je
fisubl
out
xchg
fcoml
sbb
xlat
imul
pop
xlat
movsl
push
add
or
push
adc
sbb
cwtl
mov
mov
arpl
int
repz
bound
inc
pop
out
add
rorb
rcrb
push
mov
and
sar
mov
mov
xor
idivl
decl
rcll
fisubrs
lods
stos
loop
mov
cmc
add
pop
ja
fbstp
cmp
in
andl
adcb
lock
fdivrs
repz
or
add
in
imul
nop
rol
and
push
pusha
adc
mov
and
jbe
aam
movsb
xor
ret
rcll
lcall
mov
or
rcr
pop
pushf
cld
sbb
adc
das
out
rolb
les
xchg
stos
jge
push
mov
addr16
push
cmp
sbb
fidivl
mov
cmp
call
and
test
dec
lret
sbb
dec
push
mov
mov
xchg
xchg
jle
ret
sbb
add
lahf
shrl
cltd
ljmp
and
xchg
xchg
aas
push
rcll
roll
aaa
mov
and
xor
pushf
add
push
addl
jg
or
mov
test
imul
push
idivl
cmp
jl
ret
inc
cmp
test
sbb
int
sub
stos
jg
push
xor
subl
or
or
jo
jge
or
sbb
lods
test
xor
mov
lds
test
xor
aaa
push
shrl
pusha
aaa
mov
rcl
xchg
mov
ja
pop
notb
pop
andb
and
je
mov
pop
push
sub
pop
data16
loop
dec
jb
outsl
lea
out
in
push
ss
fdivs
and
sti
mov
pop
jns
out
rcr
fists
pop
stc
pop
push
testl
dec
addb
sbb
xor
adc
sub
adc
jbe
scas
mov
inc
jle
mov
ret
cmp
push
pop
sahf
subb
aaa
faddp
add
xor
dec
mov
xor
ret
ja
lea
mov
inc
sbb
dec
mov
outsb
das
pop
aad
arpl
fcoml
fwait
test
loopne
cmpsb
sub
push
push
dec
rcrl
sub
push
inc
push
testl
mov
lods
sbb
loope
inc
mov
scas
lods
inc
es
fsub
in
mov
scas
push
stc
jl
mov
inc
bound
and
repz
and
stc
inc
jno
popa
dec
jp
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
xchg
lret
push
push
and
adc
sti
sub
lret
fistpl
cmp
fwait
cmpsl
icebp
xchg
add
lret
mov
daa
outsl
cmp
js
cld
loop
lcall
jno
mov
mov
shll
pop
sub
in
xchg
inc
js
ror
pop
jecxz
mov
arpl
lea
inc
dec
mov
sub
push
insl
das
mov
push
adc
adc
subl
ret
push
mov
sbbl
push
rol
sbb
sub
in
mov
add
icebp
mov
mov
fimull
push
xchg
dec
jg
ret
incl
lods
mov
pop
sahf
pop
int
cmp
inc
push
mov
sbb
add
cmp
and
jb
lods
adc
mov
cwtl
sbb
cld
or
xor
and
pop
inc
adc
mov
dec
push
xchg
pop
mov
fcomps
adc
ja
jp
std
fbld
cld
pop
testl
rcll
and
stos
mov
dec
mov
sbb
jo
mov
ds
add
dec
adc
fbld
lods
sbb
sbb
call
mov
daa
movsl
push
movd
stos
sub
ljmp
jle
push
std
scas
test
outsb
mov
sbb
push
jg
xlat
mov
dec
imul
es
imul
sbb
push
int3
xchg
pop
movsl
xlat
lcall
movb
jl
je
cld
mov
lds
pop
daa
out
out
scas
mov
data16
daa
ret
push
xchg
xor
push
pushl
repz
in
dec
xor
sti
loopne
repnz
xchg
inc
dec
and
add
mov
mov
in
and
jne
mov
lahf
sarb
jmp
xlat
push
mov
lock
enter
test
imul
fs
fnsave
les
adc
stos
push
pop
push
add
and
adc
gs
out
pop
repz
adc
sbb
mov
je
pushf
push
jne
mov
pop
jp
test
idivl
cwtl
int
xlat
jo
jbe
ja
push
insb
lods
mov
and
adc
jae
bound
and
pop
fildl
jl
icebp
cmpl
test
ret
pop
push
mov
and
repnz
sti
out
cmpsl
iret
mov
icebp
mov
fidivrl
push
push
push
sbb
mov
dec
mov
adc
push
add
jno
popa
faddl
xchg
mov
and
or
push
adc
movb
movsl
lock
dec
jp
jne
xchg
int3
cs
dec
daa
or
xchg
idiv
fdivrl
add
cmp
aas
push
jo
jecxz
mov
mov
pop
mov
ds
mov
cmp
repnz
adc
pop
fs
js
cmpsb
add
fwait
test
jle
dec
test
int3
mov
cmpl
lods
add
mov
popa
add
in
pop
cmpsb
mov
pop
pop
and
inc
mov
aad
repz
movsl
lds
fdivs
fstl
sub
jge
bound
test
sbb
das
xor
xchg
insl
inc
test
hlt
xor
add
clc
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
popf
or
adc
mov
adc
inc
add
jmp
mov
hlt
leave
jg
pop
jg
aaa
sbb
fistpll
les
push
popf
sub
push
cmp
push
sbb
sub
or
mov
mov
mov
sarb
xor
mov
fcom
fmul
cltd
push
inc
xor
pop
jge
leave
mov
xchg
fistps
out
aaa
sar
jno
xchg
pop
sub
cmp
xchg
in
add
roll
subl
mov
pop
mov
jne
inc
pop
cmpsl
or
mov
lods
jnp
lock
mov
sbb
inc
adc
jecxz
sbb
mov
adc
test
xorb
data16
dec
in
ficoml
cmc
inc
stos
popa
mov
and
and
stos
call
in
mov
clc
push
add
mov
fiadds
leave
gs
fldl
adc
sbbb
lret
push
lods
imul
fisttpll
and
aam
and
adc
lret
into
add
add
roll
xor
test
invd
cld
loope
inc
mov
jp
in
mov
dec
das
add
add
xor
jl
and
jecxz
xlat
das
dec
mov
mov
loopne
jle
nop
insl
bound
mov
dec
loop
std
pusha
mov
movsb
cmp
mov
mov
mov
pop
flds
push
icebp
pop
adc
inc
iret
test
out
mov
pop
add
xorl
loopne
daa
push
jno
inc
popa
lret
adc
or
repnz
aam
in
ror
inc
das
sub
xor
adc
enter
xchg
push
bnd
push
aad
cld
xor
dec
daa
ret
scas
jo
cli
dec
mov
call
fbld
out
xchg
pop
lods
xor
dec
inc
ret
or
cli
adc
loopne
inc
enter
iret
scas
cld
push
and
xorl
sti
dec
movsl
ss
mov
repz
xchg
mov
cmp
cmpl
cwtl
ret
mov
inc
jae
xor
jg
lds
inc
in
movl
add
inc
mov
sub
inc
and
cmpsb
xchg
jge
jmp
mov
stos
call
add
mov
subb
inc
add
mov
pop
mov
cmp
imul
xchg
pop
leave
les
and
movl
ljmp
push
je
fsts
push
clc
ja
xchg
enter
adc
sub
dec
mov
shlb
xchg
push
adc
test
in
lcall
jno
inc
pop
jmp
or
daa
push
nop
cmpsl
cmp
cmp
jp
cmp
sbb
sahf
push
ja
cmp
push
push
repz
xor
ffreep
jo
inc
xor
add
bound
aas
sub
in
dec
mov
xor
sub
jns
xchg
mov
xor
xchg
mov
ljmp
cmp
dec
jecxz
repnz
js
pop
fdivs
aad
js
jmp
gs
fnstsw
fcoms
push
enter
mov
stos
sbb
ret
orb
inc
rolb
sar
dec
lcall
fildll
in
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
adc
clc
mov
adc
push
test
and
jle
pop
test
inc
ret
jne
xchg
xchg
imul
cld
lea
mov
mov
pop
mov
mov
shr
inc
sub
out
roll
mov
mov
add
testb
int3
dec
mov
ret
into
aad
jae
mov
mov
out
and
add
jmp
fcomps
rolb
pop
in
cs
dec
es
rcrb
xlat
xlat
mov
adc
fisttps
in
ret
jae
push
rolb
test
pushf
shr
ret
leave
mov
imul
pop
fcompl
das
fwait
dec
push
ljmp
add
add
shrl
frstor
and
lret
sbb
shl
stc
add
loopne
adc
cmp
movsl
push
cmc
sarb
lock
mov
dec
int3
cmp
pop
shrl
dec
addb
xchg
jg
pop
sbb
into
sub
inc
mov
mov
or
lret
jbe
push
les
mov
mov
or
mov
cwtl
mov
pusha
insb
popa
add
sbb
mov
or
cmpsl
push
cmpsb
mov
sbb
rcl
mov
in
icebp
bound
iret
lods
jbe
dec
pop
push
dec
sbb
push
mov
in
out
mov
mov
mov
jb
jne
movsb
movlps
jmp
adc
mov
xor
push
fiaddl
or
pop
jmp
lds
cmp
popl
ret
mov
jnp
ret
xchg
out
add
sbb
cmp
pushf
pop
adc
push
test
mov
pushf
push
in
jns
pop
jnp
pop
push
xor
pop
adc
push
scas
fidivrl
sub
pop
add
rcrb
loopne
inc
add
and
and
add
mov
or
movsl
jecxz
mov
mov
cmp
xchg
test
cmp
pmaddwd
xchg
imul
test
add
loopne
mov
push
std
dec
inc
pop
xchg
sub
or
sbb
mov
js
mov
mov
add
jb
push
sbb
lods
push
mov
fs
mov
or
loopne
mov
notl
cld
ret
fs
sbb
or
in
cltd
shr
stc
das
loop
fisubrl
pop
cmp
dec
and
mov
orb
pusha
mov
lock
xchg
rclb
mov
cmp
inc
mov
xchg
enter
mov
xor
daa
jnp
inc
ffreep
aad
cwtl
lds
inc
xor
lcall
ret
adc
cmpsb
js
test
scas
pop
ss
scas
subl
pop
sbb
ss
leave
inc
adc
mov
aas
daa
pop
lahf
mov
aaa
dec
fwait
and
add
cltd
mov
jmp
jo
stc
sub
xchg
sbb
jl
inc
xchg
cld
mov
jle
movsb
cmpsl
or
mov
add
jle
sbb
inc
es
outsl
inc
arpl
outsl
test
sbb
mov
mov
jne
insb
ljmp
sbb
out
insb
adc
or
cmpsb
test
or
repnz
das
lcall
inc
inc
imul
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
mov
xchg
mov
adc
pusha
xchg
jno
bound
pushf
pusha
test
jno
xchg
sub
jle
jp
ds
movhps
and
xchg
jae
inc
xorb
incb
out
jo
sub
cwtl
pop
or
jno
inc
pusha
sbb
sub
popf
xor
ret
push
sub
call
jnp
enter
in
cs
lcall
sub
in
aaa
data16
cmp
pop
mov
jnp
pop
das
xchg
xchg
pop
sub
ret
xchg
ja
scas
push
jmp
push
stos
ja
std
add
jle
xchg
xchg
mov
shl
hlt
pop
call
add
jo
or
xchg
fs
fdivrs
inc
jns
scas
xor
outsb
das
xor
xchg
js
pop
mov
inc
shlb
arpl
or
cmp
mov
call
lret
mov
add
or
cmp
cmc
inc
xchg
inc
cltd
hlt
fiaddl
or
push
mov
movsb
je
mov
cmpsb
repz
loop
push
push
and
xor
addr16
dec
xchg
mov
lods
in
jp
les
mov
vmwrite
push
push
mov
add
mov
xlat
sti
rorb
dec
sub
addb
inc
cmpsl
dec
sti
add
pop
mov
mov
inc
mov
pusha
jle
adc
addr16
inc
dec
pop
xchg
or
and
das
dec
std
jle
pop
mov
repnz
mov
xchg
xor
fimuls
inc
push
enter
scas
in
mov
cmpsb
xchg
xchg
or
pop
jle
pop
mov
push
push
cmp
or
add
data16
pop
fadd
ret
push
addb
push
mov
adc
xor
test
inc
xchg
stc
fiaddl
cmp
mov
cmp
mov
sbb
pop
pop
gs
jl
lret
test
jecxz
adc
jmp
mov
xorb
dec
xchg
sahf
dec
jg
in
into
mov
cmpsb
pop
bound
dec
jmp
cmp
in
mov
loope
mov
inc
push
mov
pop
mov
mov
push
sbb
cmp
inc
int3
ficoms
jns
push
cwtl
out
or
pop
shrl
insl
rcrb
into
out
mov
in
testb
push
mov
adc
stc
sub
insb
sub
lods
and
jnp
jle
decb
mov
es
hlt
jne
mov
mov
decb
in
outsb
sbb
fiadds
stos
shrb
xchg
push
dec
call
xor
fs
getsec
aad
imul
enter
add
adc
sbb
test
lea
mov
push
sub
sub
pop
dec
and
lret
jmp
sub
in
adc
xchg
imul
in
inc
shrb
cmp
aas
sbb
lds
push
xchg
mov
sbb
inc
pushf
push
ss
popf
jo
fsts
xchg
or
repnz
cmp
jno
sahf
mov
mov
outsb
pop
pop
lcall
mov
lods
data16
xchg
into
popf
bound
mov
dec
pop
fstps
jg
cli
cmp
mov
sub
sahf
jecxz
xlat
mov
daa
push
add
cmc
in
pop
dec
ds
loop
mov
xor
pop
lds
movsb
pop
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
out
jle,pn
or
adc
adc
adc
cmp
inc
add
pop
sub
loopne
lock
or
stc
jg
stc
cmpsl
jg
push
aad
sti
xchg
mov
inc
out
sub
and
push
sbb
xchg
nop
push
cmc
pop
jns
je
loop
pop
xor
mov
shrl
out
cltd
mov
pop
pop
call
xor
das
jl
fcompl
push
sahf
in
pop
shr
xchg
lods
mov
mov
test
jo
jb
jg
loop
sub
push
int
or
jmp
mov
xor
mov
mov
mov
jns
push
pop
shlb
adc
jo
sbb
push
lahf
fwait
cmp
repnz
and
enter
mov
push
popf
xchg
rcrl
sub
and
lds
inc
sub
repnz
and
filds
test
jbe
fld
out
gs
sub
aaa
testb
arpl
dec
sar
test
jbe
jae
cli
test
xor
das
adc
js
lret
sub
imul
adc
shrb
jne
jb
insb
ror
mov
add
mov
je
push
adc
loopne
sarb
mov
jbe
pop
add
push
add
jno
das
movsl
popa
push
jno
inc
pop
out
cs
repnz
das
mov
insb
adc
pop
das
and
xor
int3
pop
pop
sarl
std
gs
mov
cs
inc
and
sbb
mov
dec
iret
ljmp
push
mov
mov
call
test
inc
fsubrl
rclb
push
adc
jbe
cwtl
jle
call
out
jmp
sub
lcall
sbb
sbb
cmp
in
sub
ss
jno
or
ljmp
repnz
outsb
push
out
xor
cwtl
xor
aad
mov
sub
lods
lods
jg
stos
pop
xchg
sarl
leave
popa
lds
std
out
mov
iret
xlat
call
loope
jge
dec
push
pop
fldenv
inc
jle
push
mov
inc
xchg
jbe
inc
cwtl
fcom
sub
sub
mov
push
jnp
imul
dec
inc
lea
fcomp
lret
test
fcmovu
xchg
cmc
mov
int
das
mov
imul
inc
dec
in
repnz
in
mov
add
daa
pop
imulb
inc
subb
xchg
pop
xchg
mov
out
test
add
dec
jmp
loop
outsb
sub
sahf
std
add
sbb
add
inc
es
nop
fs
jo
mov
mov
xchg
enter
lds
or
dec
mov
aad
pop
movsl
jnp
mov
in
in
bound
mov
out
mov
and
inc
jae
dec
fs
or
mov
and
sub
pop
fucomi
gs
cmp
mov
test
push
sbb
cmpsb
adc
dec
push
pop
push
cmp
adc
xor
xor
sub
and
dec
into
sbb
jge
inc
xchg
mov
and
adc
sbb
push
sti
xor
mov
jno
movb
mov
adc
add
mov
xor
jmp
cmp
ja
pop
aaa
and
or
push
add
adc
insl
and
xchg
int3
push
and
scas
fiaddl
cmp
adc
clc
insl
mov
aad
pop
cmpsb
out
call
pop
mov
mov
or
inc
inc
js
shrb
jge
pop
mov
and
aas
push
xor
xor
cmp
faddl
xchg
push
dec
push
fimuls
mov
xor
xlat
jmp
mov
push
sbb
xchg
or
int
push
dec
xor
add
push
scas
idiv
fsts
movsl
jecxz
adc
inc
lahf
push
add
out
adc
xor
pop
lods
test
inc
insl
sbb
imul
cmp
adc
enter
andl
imul
xchg
into
shrb
jle
fistps
or
insb
jmp
jae
xlat
inc
and
in
push
sahf
rcrb
fisubl
mov
ret
scas
or
stc
push
ror
pop
insl
setp
in
inc
dec
in
sub
inc
jecxz
xchg
ret
mov
mov
or
push
and
subb
cmpsb
nop
jno
imul
push
adc
fdivrl
sahf
rcl
push
sti
sbb
scas
scas
push
movsl
dec
fidivl
xor
add
lret
loopne
mov
mov
stos
adc
je
xchg
iret
and
mov
add
pop
popa
addr16
adc
sub
xor
mov
jne
jmp
xchg
scas
adc
push
mov
push
jb
pushf
xor
ret
mulb
fwait
sahf
sbb
pop
sub
jmp
cs
inc
inc
pop
or
pusha
or
dec
pop
js
movsb
pop
clc
fcmovbe
fldl
pop
or
jne
ljmp
in
mov
ds
scas
pusha
dec
cmp
and
sahf
inc
loope
lcall
sub
rcrb
inc
pushf
pop
nop
stc
out
jmp
bnd
xchg
mov
dec
lret
jmp
sbb
adc
mov
dec
lods
nop
mov
ljmp
jbe
pop
into
pop
ljmp
lock
and
inc
shlb
pop
jnp
inc
push
aas
leave
sahf
lock
das
ljmp
fidivrl
faddl
xchg
sbb
xor
inc
mov
lods
sub
pop
and
fnstsw
add
std
je
jge
push
and
movsb
push
mov
lcall
push
jecxz
jecxz
cmpsl
push
filds
hlt
sbb
shlb
cmp
ficomps
push
rorl
enter
loope
or
fwait
leave
inc
jp
sub
inc
loope
sub
movsl
pusha
mov
and
sbb
rcl
pop
inc
aaa
shl
xor
mov
lods
das
lahf
pop
decb
sbb
jae
inc
arpl
pop
xchg
and
enter
cltd
frstor
cmp
cmp
es
insl
adc
subb
pop
mov
mov
lods
pop
lcall
out
pop
insl
test
leave
dec
xorl
jo
iret
int
insl
scas
mov
into
cltd
daa
psubb
scas
push
xor
mov
test
cwtl
sbb
xchg
popf
push
test
inc
jecxz
idivl
sbb
jmp
rorb
out
xor
jmp
dec
pusha
lret
add
push
lods
mov
in
inc
or
jnp
jae
movsb
popa
push
lea
in
or
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
mov
xchg
jg
adc
sbb
mov
cmp
sbb
dec
or
xorl
outsb
inc
pop
aam
pop
sub
pop
push
pop
adc
test
sbb
ljmp
and
pop
insb
push
aam
xor
adc
fldt
aaa
ret
jecxz
enter
lret
rcll
push
push
or
popa
sbb
add
cmp
mov
add
cmp
adcl
push
cltd
jno
das
lret
int
stos
aam
fisubl
daa
cmc
lret
mov
pop
stos
in
adc
int
cmp
outsb
dec
pop
ss
fldenv
sahf
dec
mov
mov
push
add
push
jl
and
push
sbb
imul
dec
sub
cmp
jae
in
jecxz
stos
das
pop
lret
adc
cs
jae
ja
sub
fidivrl
das
outsb
fadd
add
jnp
xor
push
inc
push
sub
popf
hlt
mov
adc
inc
psrlw
push
lcall
daa
das
and
ficoms
jbe
mov
or
add
sub
cltd
cmp
add
xchg
mov
in
xorb
and
sub
cwtl
pop
mov
mov
scas
xor
scas
movsb
mov
ljmp
ret
ret
pop
mov
pop
mov
push
int3
loope
lcall
ffreep
push
push
pop
outsl
scas
fidivrs
inc
xchg
mov
push
outsb
fbld
pop
popa
sldt
inc
leave
jg
lret
aad
ds
adcl
mov
jp
jne
sbb
inc
xchg
and
push
pop
fwait
loope
imul
or
jbe
in
push
out
pop
dec
sub
popf
rcrb
dec
sarl
cs
js
cmp
adc
dec
xchg
pop
popa
cmp
call
or
add
add
mov
repz
xchg
mov
lret
sbb
cmovne
dec
mov
push
inc
cmp
inc
push
test
adc
test
out
pop
mov
cmc
xor
into
frstor
shr
or
sbbb
ja
hlt
aam
aad
jmp
iret
jecxz
mov
test
or
mov
scas
cld
nop
fidivl
inc
in
xchg
and
iret
loope
out
dec
cltd
stos
cmp
jecxz
adc
daa
stos
fdivs
fbstp
in
lret
nop
pop
and
push
hlt
popa
scas
push
aam
inc
mov
shrl
xchg
repz
ljmp
adc
cmp
or
or
sbb
add
and
sbb
push
call
les
mov
sub
sbb
mov
mov
xor
dec
mov
cld
out
xor
outsb
loope
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
mov
xchg
js
lock
adc
adc
and
pop
stos
mov
dec
mov
or
int
ret
imul
out
mov
dec
dec
in
sbb
clc
lds
test
outsl
scas
repnz
cwtl
xlat
out
jmp
push
and
call
insb
xchg
inc
pop
loop
cmpsl
xchg
jns
mov
or
sub
loope
aam
daa
inc
aad
fisubrs
mov
adc
adc
outsl
repnz
mov
clc
xchg
jae
push
nop
cmp
mov
stos
inc
test
repnz
adc
inc
repz
clc
stos
and
fmull
movsl
adc
bound
adc
lods
fstpt
adc
mov
dec
mov
sbb
rcrb
gs
shrl
mov
outsl
sub
sahf
or
cmp
repnz
sbb
andl
pop
sub
outsl
pop
call
fs
or
idiv
sbb
out
xchg
pop
pop
mov
mov
add
aas
and
ret
repz
scas
es
push
pop
add
outsb
ljmp
xor
gs
repnz
jmp
daa
lds
dec
xchg
fistpll
addl
lahf
mov
outsb
sbb
xchg
lret
sub
jo
mov
push
in
xchg
inc
mov
jge
mov
inc
cwtl
jmp
jnp
dec
jmp
mov
inc
mov
movsb
pop
cs
aad
mov
shl
pop
addl
clc
fstps
pop
pop
jg
mov
or
inc
jg
jno
mov
sbb
dec
divb
add
loop
dec
and
into
fadd
shll
ja
popa
jne
arpl
add
clc
adc
fsub
cli
xor
jae
inc
js
arpl
mov
push
jnp
or
pusha
and
mov
std
inc
sti
push
xchg
int
ret
mov
and
fwait
and
and
pop
adc
ss
dec
into
sbb
ljmp
aaa
mov
mov
sub
lret
mov
lret
imulb
or
add
xor
push
cmc
fsub
data16
jno
push
fstpl
mov
mov
mov
cmpsl
jmp
mov
int
nop
shl
lahf
scas
or
mov
dec
bound
and
lods
dec
je
stos
jb
or
sub
inc
add
mov
rolb
icebp
call
push
push
cmp
sti
sub
into
push
popf
mov
pop
into
lock
stos
lds
out
or
cltd
into
shr
lods
xchg
bound
adc
repnz
or
jmp
xchg
xor
push
inc
xor
loopne
loopne
out
movsl
xchg
cwtl
add
jns
fdivrl
xchg
inc
subb
je
mov
testl
jecxz
inc
nop
pop
pusha
pcmpgtd
adcb
mov
fwait
jo
daa
test
ljmp
hlt
lret
enter
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
and
jle
out
adc
adc
adc
mov
xchg
addb
out
jge
sbb
ror
sahf
fistpl
fnstcw
repz
add
outsl
sti
imul
adc
int
cmova
pop
jne
pop
hlt
pop
add
stc
or
dec
out
push
imull
ljmp
add
xor
jge
movsl
mov
dec
fstpt
cmp
mov
fsubr
ret
cmp
mov
add
lret
push
mov
adc
test
inc
cmc
fdivr
dec
add
outsl
jl
pop
jg
dec
test
ja
test
jmp
pop
mov
imul
fnsave
cld
pop
fwait
or
imul
cmp
lea
repz
pop
stos
clc
mov
pop
cmp
push
and
push
jle
cli
inc
adc
ljmp
ret
loopne
dec
or
sbb
jo
pop
maskmovq
mov
sahf
mov
sti
sbbb
mov
ret
nop
mov
repz
rcr
stos
pop
xchg
ja
out
add
push
xor
hlt
sbb
mov
out
int
lret
fstpt
add
sbb
shll
mov
lcall
push
push
cmp
jg
mov
xchg
push
jno
ja
and
adc
mov
movsl
dec
outsl
xchg
and
inc
pop
xchg
mov
test
jmp
popf
scas
push
ljmp
push
data16
nop
sarb
mov
xchg
bound
ret
imull
ficoms
imul
dec
call
mov
clc
arpl
add
push
cld
push
test
sbb
sub
hlt
out
mov
push
popf
fnsave
and
out
xor
mov
jb
dec
fcompl
fs
xchg
cmp
mov
lret
daa
sahf
dec
lds
and
repnz
mov
mov
adc
loope
cltd
xchg
and
mov
in
add
fucompp
mov
jge
dec
lods
insb
das
sbb
pop
cmpsb
fsubrp
mov
dec
das
lock
test
addl
aam
scas
and
sub
cwtl
shrl
out
mov
mov
dec
xor
xlat
sti
mov
iret
or
clc
jp
inc
jle
fsincos
hlt
fcmovu
xchg
scas
or
dec
call
sbb
jl
sbb
add
push
stc
mov
xor
js
cmp
nop
loop
sbb
mov
clc
ljmp
sub
arpl
fnsave
adc
and
dec
or
mov
and
fcmovb
pop
and
cmp
mov
in
cwtl
out
inc
lret
les
pop
stc
sbb
test
push
mov
xchg
js
int3
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
enter
jecxz
adc
adc
adc
pop
mov
imul
movsl
sub
pop
icebp
and
nop
pop
mov
ret
add
scas
dec
mov
mov
enter
and
bound
pop
inc
test
pop
jecxz
sbb
xor
inc
outsb
cld
adc
mov
scas
jp
pusha
test
mov
mov
test
mov
fs
cmp
or
mov
loope
lea
and
inc
cltd
outsl
xchg
inc
iret
mov
pop
movsb
xchg
outsb
pop
xor
inc
sbb
inc
stc
push
sbb
enter
test
icebp
mov
aaa
pusha
cmp
rcll
pop
shll
sub
out
add
mov
push
jbe
push
xchg
ficoml
lahf
in
mov
pop
pop
stc
sbb
fbld
lods
lock
mov
ret
adc
aad
and
sub
jae
fisubl
jg
sub
stos
fwait
les
xchg
add
popa
pop
mov
popf
mov
xor
jge
test
dec
xor
mov
cmp
in
ljmp
pop
aaa
lret
pushf
xor
int3
fnstsw
pop
mov
mov
inc
gs
add
sti
enter
push
sub
hlt
mov
les
xchg
mov
hlt
outsb
mov
add
dec
adc
xchg
mov
lods
mov
and
ret
xchg
push
and
inc
mov
lahf
sbb
add
enter
xor
lea
cld
mov
cmp
mov
sub
jp
into
cmp
jbe
sbb
pop
sti
setns
mov
jmp
pop
jno
push
lret
nop
dec
enter
pushf
jle
sub
add
mov
test
repnz
xchg
pop
cmpsb
and
adc
sbb
and
jno,pt
rcr
sbbl
stos
lret
mov
shr
das
and
loop
sahf
pusha
or
ds
cmpsb
ret
movsb
sub
mov
sbb
lret
cmp
fs
mov
in
and
pushf
or
sub
sbb
mov
push
das
scas
push
les
sub
inc
stos
sub
mov
jno
test
or
cmpsb
mov
mov
dec
shrl
adc
addr16
gs
call
fcomps
popa
fldenv
cmp
add
and
mov
cwtl
inc
es
decl
pop
or
roll
sbb
jb
popf
sti
jo
mov
dec
ret
popf
aad
mov
repz
xor
jnp
pop
and
jo
aas
sbb
push
mov
clc
xlat
cli
je
adc
mov
cltd
fisubrs
or
xor
inc
and
fnsave
ret
or
sbb
xor
into
or
sbb
push
rorb
adc
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
subl
adc
scas
xchg
out
cld
mov
mov
pop
int
jns
xor
daa
inc
lret
adc
pop
hlt
xchg
in
xor
sub
ret
in
mov
cli
sahf
sbb
lret
in
adc
ss
adcb
add
push
jnp
mov
cmp
mov
out
sub
out
addb
jo
mov
test
inc
xor
pusha
cmp
pop
sbb
into
cmp
push
andl
sub
push
dec
and
xor
pusha
es
adc
mov
rolb
lret
xchg
inc
push
mov
addr16
pop
inc
test
sbb
ss
in
cmpsb
push
aam
mov
xchg
adc
inc
or
add
scas
sub
pop
pop
xchg
ds
je
cmpsb
or
sarl
add
xchg
shlb
mov
loopne
or
cmpsl
push
or
jo
cmp
sub
sbb
jno
add
insb
dec
scas
scas
jne
push
and
daa
pusha
mov
adc
repnz
leave
xchg
cmp
dec
cmp
and
xchg
lds
xor
pop
cvtdq2ps
inc
sub
popf
jl
inc
ljmp
ret
or
pmulhuw
lds
sbb
fadds
in
sbb
nop
outsl
aas
jnp
jg
int3
push
mov
lcall
mov
pop
adc
jg
or
or
cmp
fimull
mov
lds
clc
jp
sbb
movsb
mov
repz
lds
adc
inc
mov
pop
or
ja
pop
fisttpll
adc
jg
pop
pop
mov
mov
mov
js
push
mov
ret
xor
fldcw
sub
cmp
jmp
fcomi
call
dec
xchg
jg
push
mov
ds
jo
int3
sub
xor
adc
sub
jle
mov
in
push
or
mov
dec
pop
daa
xchg
outsb
xchg
ret
orl
push
aam
push
stos
pop
add
push
sbb
fdivs
add
jnp
mull
mov
int
dec
and
setp
sub
out
sbb
add
mov
push
sub
cltd
sbb
adcb
cmp
in
enter
cwtl
mov
and
add
lret
pop
dec
jle
in
outsl
sub
mov
cld
jmp
cmp
gs
jp
inc
jno
orl
jp
sub
mov
dec
lods
cmpsb
and
ss
sub
sbb
insl
push
cli
push
push
std
pop
cmp
das
or
adc
icebp
mov
mov
mov
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
xchg
aam
int3
cmpsl
pop
push
out
subb
arpl
arpl
push
call
lods
xchg
or
arpl
arpl
xor
stc
adc
aaa
jp
fwait
xchg
xchg
mov
repnz
dec
jl
aaa
fisttpl
mov
testl
sbb
cmpsb
idivl
imul
call
ret
adc
repz
shl
cmp
mov
ljmp
dec
dec
push
call
les
dec
sti
ret
cmpsl
jecxz
call
lods
cltd
push
js
adc
pop
add
mov
or
push
ret
into
or
loopne
fs
leave
and
inc
stc
xor
mov
shrl
bound
mov
out
sti
shlb
ret
cmpsb
loop
and
call
pop
mov
into
or
mov
sahf
cmp
dec
movsl
rorl
movsl
sbbl
add
mov
xchg
movsbl
rcll
mov
lods
add
inc
lea
pop
mov
int3
out
mov
out
shll
pusha
push
in
shl
jl
movsb
dec
push
xchg
jae
adc
push
aam
js
dec
add
jl
push
idivl
xchg
fidivrs
or
fsubrs
jge
xor
jo
mov
inc
jge
mov
out
fsts
sbb
cltd
dec
loop
sbb
repnz
mov
clc
cltd
cld
mov
aaa
sbb
scas
mov
mov
sbb
dec
es
pop
push
xlat
jb
inc
dec
stos
pop
adc
and
rclb
sbb
xor
push
gs
xor
jae
mov
fsubrs
loope
or
sbbl
xor
mov
add
idivb
xchg
lahf
dec
pushl
mov
push
aas
sbb
call
ret
ret
pushf
push
xor
mov
mov
pusha
scas
insl
leave
rcll
hlt
imul
jns
cmp
dec
ja
or
xchg
mov
push
shrl
mov
and
jo
aas
in
or
jp
stc
mov
pusha
icebp
lret
fdivrl
rcrl
xchg
and
mov
push
outsb
ss
rorl
jns
inc
jb
sahf
cmp
in
push
idivb
out
scas
js
xchg
mov
imul
push
cmp
sbb
ret
cli
mov
mov
xchg
sahf
adc
stos
pop
adc
jnp
inc
enter
adc
dec
push
jge
mul
push
dec
dec
clc
jp
xchg
enter
pop
pop
fisubs
andb
and
jl
popf
sub
add
jl
fs
call
push
adc
popl
push
aaa
std
sbb
add
jo
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
pminub
adc
adc
jmp
aam
sbb
and
push
push
ja
popf
out
insb
lret
fs
stos
lahf
and
shlb
add
add
cmp
sarb
adc
sub
out
push
popf
inc
out
dec
mov
insl
push
les
mov
xor
inc
adc
adc
mov
pop
cmp
addr16
sub
cmp
test
test
or
sarl
push
and
add
inc
pop
rol
fsts
push
mov
aad
lea
imul
sbb
nop
roll
or
cmp
loopne
lahf
xchg
in
push
call
popf
mov
adc
dec
xor
call
mov
dec
rcl
fimuls
mov
xchg
jl
mov
inc
xchg
mov
mov
loopne
sar
mov
push
and
push
inc
cmp
xchg
add
xchg
loopne
sbb
sti
lahf
call
ret
dec
test
aad
std
cs
cmp
mov
mov
adc
mov
mov
jge
or
call
jo
call
test
inc
idivb
int
and
mov
adc
int3
sti
cmp
nop
fldl
mov
mov
sbb
push
test
popf
xor
sub
inc
jns
jb
in
into
nop
mov
adc
insb
test
ror
dec
jns
xchg
adc
jg
or
daa
insl
pushf
mov
xchg
adc
dec
fisubl
arpl
out
sub
iret
daa
jbe
cmp
ds
push
mov
mov
inc
daa
mov
sub
insl
popw
ret
aaa
cwtl
pop
sti
test
sub
mov
adc
and
xchg
popa
pop
insl
insl
das
mov
out
popf
mov
nop
jge
jo
cmp
jns
jle
or
scas
xchg
fcompl
adc
fistpll
lock
sbb
je
insl
ds
jno
sub
and
and
jne
fdivl
xchg
sahf
jmp
arpl
jne
ljmp
jecxz
jnp
mov
pop
push
je
clc
lret
mov
cwtl
pushf
les
iret
js
push
clc
cmp
movsl
into
js
arpl
aaa
sbb
subb
data16
mov
out
lea
and
and
gs
js
imul
add
orl
jbe
insl
notl
sarl
stc
ds
mov
sbbb
xchg
cmp
rep
mov
fst
mov
invd
mov
cmpsb
rorb
out
push
fadds
jns
fsubrs
adc
inc
xchg
nop
lods
lods
loop
aas
fstl
cli
loope
add
xchg
out
cmp
jbe
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
cli
test
add
adc
xchg
movlps
jb
mov
mov
rol
push
xor
inc
ja
and
xor
push
sbb
and
fcoms
popf
ljmp
push
ret
push
stc
stos
leave
lret
mov
fwait
xchg
jo
bound
sti
sub
jmp
push
jb
cmc
pop
insl
mov
jl
clc
test
cwtl
cwtl
fwait
xchg
push
push
rorl
pop
fsubs
movsl
je
mov
xorb
int3
test
stos
add
sbb
inc
jg
sub
xchg
mov
sbb
or
xor
in
jl
dec
and
bound
mov
cltd
mov
sbb
push
and
popf
push
pusha
cltd
xchg
push
cmp
call
jp
xchg
aad
push
lods
rcrl
sbb
fists
sub
stos
xchg
scas
add
cmpsl
pop
mov
inc
xor
inc
adc
aas
in
prefetcht0
int
mov
test
or
sub
rcll
sub
imul
mull
mov
xor
add
fs
decl
mulb
sub
mov
test
xor
dec
adc
cmp
push
mov
add
jns
outsl
lds
int3
fistpll
scas
jmp
mov
fistps
imulb
subl
add
pop
sbb
mov
ret
stos
fildl
pushl
cmpb
sti
loop
pop
int
mov
mov
xchg
std
movsb
fsub
and
rcrl
adc
mov
mov
xchg
loopne
pop
iret
aaa
xchg
push
inc
pop
add
mov
ret
aas
mov
inc
arpl
push
push
xchg
inc
addr16
cmc
mov
pop
mov
popf
stos
sub
xchg
mov
fucomp
mov
or
mov
inc
shll
sbb
aad
out
mov
cmp
call
cwtl
push
inc
cld
dec
fmul
scas
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
inc
stos
test
adc
xchg
movlps
ja
bound
arpl
movsl
add
and
ljmp
fs
icebp
subl
fadd
mov
jb
adc
cmp
jl
popf
xor
or
pop
adc
int
pusha
cs
mov
out
rcr
pop
fdivrl
and
lds
xchg
adc
jp
dec
jae
mov
popa
mov
ss
pop
inc
mov
mov
mov
out
sahf
test
mov
stos
leave
xor
lcall
ret
shll
sub
scas
repz
add
shl
cltd
sbb
inc
pop
dec
cmpsl
xchg
push
rolb
daa
in
std
rcrl
icebp
out
cmp
xchg
sbb
jbe
mov
lods
xchg
jb
pusha
aad
xor
cmp
push
aam
in
les
int
pusha
or
pop
shlb
aaa
lea
sbb
ljmp
mov
in
add
scas
push
out
mov
stc
sbb
adc
dec
std
xchg
push
sti
and
inc
and
jg
rcl
jno
jbe
and
sub
pop
mov
pop
dec
xor
out
cs
ds
push
std
gs
xchg
sbb
push
sbb
repz
xlat
and
call
lahf
das
repz
jmp
test
lahf
pusha
xchg
incb
push
test
or
cmp
or
push
stc
mov
sarb
pushf
std
ret
push
leave
sbb
inc
aam
xor
push
or
fs
mov
lods
or
or
mov
push
push
int
xchg
rcr
xor
sbb
pop
adcb
mov
stc
xchg
jae
jno
lret
subb
sahf
inc
repz
in
sahf
movsb
push
jne
stos
mov
fldt
inc
fadd
in
sbb
mov
push
mov
dec
mov
xor
xor
push
fsts
and
jl
lret
dec
dec
mov
fdivrs
sbb
jmp
sbbl
cmp
aam
pop
lods
test
mov
xchg
movlps
xchg
rcrl
sbb
test
mov
push
bound
pop
cmc
sbb
jbe
add
fsubl
lods
insl
xor
icebp
mov
or
ds
int
mov
or
mov
lret
lock
stc
or
push
repnz
sarl
push
test
rcrl
jg
fdivl
call
jge
dec
loope
lods
add
and
inc
jns
jo
jmp
pop
xchg
push
in
dec
call
das
mov
out
sbb
and
addr16
lea
jnp
nop
ljmp
cmp
rcrb
cli
pop
push
jns
pop
mov
add
mov
clc
fadd
jo
repz
fs
inc
stc
sbb
sub
cmp
sarl
sbb
loope
add
in
loop
jae
mov
lahf
add
into
inc
daa
push
adc
lcall
outsl
int3
pop
sahf
inc
xor
mov
mov
in
addr16
mov
sub
mov
fmuls
jne
mov
push
sub
inc
mov
les
stc
inc
push
movzbl
jne
fwait
push
movsl
jb
push
arpl
inc
cmpsl
popf
es
dec
add
mov
jae
ja
mov
jb
dec
loop
aad
pushf
jb
out
push
adc
add
or
call
je
scas
mov
mov
sub
dec
repz
and
inc
pop
fisubrs
mov
lds
mov
pop
jle
stc
pop
dec
test
leave
pop
iret
jb
fbld
cmpsl
stos
int
jnp
shrl
lea
shrb
loopne
cmp
mov
jmp
aaa
call
sub
movsb
xchg
mov
out
call
pop
scas
fistpl
mov
test
ljmp
fldt
or
mov
or
xchg
lds
xor
lret
pop
and
jg
insl
fistpl
inc
lock
xchg
out
cld
bound
fsubrl
rorb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
mov
add
xchg
movlps
clc
imul
in
rolb
xor
add
lcall
cs
ret
and
sbb
loopne
dec
in
xchg
nop
js
cli
repz
or
cmp
or
sti
pop
pushf
and
in
addr16
in
popf
aas
mov
adc
xchg
popa
add
sub
mov
add
push
xor
pop
btc
xor
rcll
mov
jae
test
mov
mov
inc
and
outsb
jg
inc
divl
das
leave
je
lahf
loope
jb
test
pushf
jge
and
fildll
sti
cmp
popf
lret
sbb
mov
jns
cmpb
aaa
pop
xchg
das
mov
test
pop
inc
jecxz
or
xlat
mov
xchg
jns
rolb
mov
inc
int
into
push
mov
movsl
adc
icebp
cmp
jl
in
sar
pop
cwtl
addr16
or
rcr
or
icebp
add
jmp
enter
inc
mov
mov
in
mov
cmpsl
add
mov
iret
outsb
mov
in
addr16
add
cmp
in
and
lcall
out
imul
fs
sbb
in
xor
mov
or
lahf
push
lods
ss
call
cmp
inc
test
cmp
cltd
fcoms
push
les
push
outsb
mov
dec
dec
shrl
hlt
add
jl
push
xchg
mov
subb
ror
ret
fbstp
fs
dec
aam
sahf
les
pop
sub
xor
push
incb
in
sub
stc
sub
add
xchg
fcoms
mov
lcall
lock
and
stc
pop
pusha
push
cmc
inc
cwtl
test
and
ja
sbb
adc
xor
jno
xchg
cs
iret
sbb
mov
imul
mov
cmp
out
cmp
and
push
mov
xlat
outsb
pop
dec
lret
daa
fidivl
shll
xbegin
aam
dec
or
xor
lret
add
add
je
repnz
add
add
adc
dec
mov
call
lahf
and
dec
dec
cmp
xchg
fiaddl
fcompl
push
mov
int3
mov
out
or
cwtl
push
xchg
pop
lock
aam
mov
mov
add
dec
or
fnsave
clc
test
pop
sub
sbb
add
mov
mov
cmp
or
subb
dec
cmpb
leave
sub
rcrl
inc
inc
mov
popf
pop
inc
dec
push
jno
std
pop
fsubs
je
daa
pop
nop
bnd
arpl
icebp
jp
loop
jmp
mov
adc
adc
out
js
push
hlt
mov
cltd
cli
mov
addr16
adc
push
fs
pop
fisttpl
rorb
mov
or
and
popa
addl
sub
add
adc
leave
xor
dec
scas
loopne
mov
cwtl
scas
fistpll
pop
add
pusha
movsb
xor
push
cmc
aam
lret
push
mov
icebp
jno
out
lea
addr16
xor
add
lahf
lds
scas
int3
jge
sahf
dec
fadd
sub
xchg
jp
loop
aad
jl
pushf
dec
jns
lock
out
shrl
jne
mov
loope
icebp
jl
xchg
or
hlt
mov
clc
pop
push
cs
jns
pop
push
adc
mov
push
sub
imul
outsl
jne
or
iret
enter
xor
xor
testb
xchg
imul
and
bound
daa
xchg
test
pushf
jg
mov
adc
push
mov
test
cmp
call
mov
push
ljmp
in
in
inc
ss
xchg
dec
adc
jbe
scas
push
xor
in
jb
mov
cld
popf
mov
ret
push
jmp
cmp
notb
fsubrp
dec
mov
adc
xor
or
inc
cld
stos
into
arpl
es
push
mov
shrb
es
push
repnz
cmp
add
leave
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
cmpsb
cmc
stos
test
adc
and
sbb
test
add
mov
xchg
int
mov
subb
add
popf
repz
repz
sub
dec
pushf
lea
sbb
dec
push
jno
xchg
pop
out
push
nop
jne
cmp
cmp
mov
push
divl
pop
jg
loop
shlb
pop
leave
pop
pop
ss
sarl
mov
xchg
divl
and
mov
dec
mov
inc
shl
adc
in
outsl
push
stos
mov
inc
xor
mov
sub
or
scas
in
pushf
jne
test
add
inc
test
mov
insl
or
cltd
mov
or
push
mov
aam
jb
cmp
fdivrs
add
aad
int3
mov
xchg
and
fneni(8087
fs
mov
cmp
lret
fnsave
inc
repz
rcll
es
pushf
icebp
dec
jg
sub
jnp
push
and
mov
pop
push
push
xchg
and
ja
pop
xor
clc
in
jae
add
fsubr
out
mov
inc
fisttpll
pusha
mov
fcmovnbe
ret
dec
mov
jmp
rclb
insl
sub
push
outsl
sub
push
insb
sahf
outsb
sub
add
stos
test
push
in
add
lock
movl
jbe
out
testb
cmpsb
mov
or
stos
push
mov
fisttpl
addl
and
mov
gs
andl
in
push
mov
cmp
xor
xchg
je
fmull
addr16
inc
clc
notl
imul
les
rclb
jmp
jo
ds
mov
push
xchg
inc
div
leave
repz
inc
mov
pop
jp
push
jnp
mov
jmp
out
sti
inc
sub
sti
pushf
outsl
adc
push
pop
stos
cmpsl
push
loope
ret
pop
insl
fsts
ljmp
jp
inc
jge
cmp
lahf
mov
jmp
adc
push
pop
jmp
dec
xchg
cmp
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
fdivrs
add
adc
aas
jle
ljmp
fcomi
cmpsb
aaa
lcall
xor
pop
lods
shl
xchg
pop
adc
or
fnstcw
push
outsl
mov
dec
ja
or
loopne
adc
cwtl
xor
subl
test
out
ljmp
ds
cmp
cli
lret
cmp
inc
fstpt
sbb
jnp
and
out
pop
inc
aam
mov
add
shl
inc
cmp
popa
pop
mov
in
out
push
int
sbb
add
imul
dec
xchg
es
insb
fcmovbe
mov
add
cs
bound
sbb
push
add
jno
xchg
aad
pop
push
add
xlat
frstor
sbb
pushf
loopne
mov
dec
push
pop
adc
mov
rcrb
jnp
lea
and
stos
popf
dec
out
add
add
enter
leave
pop
xor
stos
xor
mov
push
in
pop
sbb
aaa
xor
cmp
push
jge
fisttpl
lock
and
sbb
sbb
mov
test
popf
bound
shll
aam
mov
inc
fists
and
cs
cmp
push
ja
add
addr16
mov
jge
or
mov
test
pminub
mov
xorb
dec
mov
cmp
sahf
ljmp
jae
rcl
insb
into
xchg
sub
cmp
push
repz
mov
and
jg
jno
jmp
inc
repnz
pop
nop
mov
lcall
mov
pop
daa
adc
fadds
mov
cmp
cmp
lcall
shll
jmp
mov
call
popa
cld
and
pop
xchg
xor
inc
xchg
push
cmc
mov
lcall
in
rclb
lahf
stc
daa
sub
adc
xor
int3
xchg
and
pop
outsl
notb
push
jae
out
xchg
dec
iret
xor
test
ds
imul
inc
jb
rorb
call
mov
aam
std
pushf
mov
jmp
ds
pop
rcrl
push
jnp
mov
dec
and
test
cmp
mov
dec
jno
cmpsl
push
scas
mov
push
or
maxps
dec
push
push
std
fisubrs
cmp
imul
in
pop
sub
adc
jmp
rolb
shlb
mov
popa
lahf
cli
cmpsb
fisttpll
arpl
sub
test
sub
mov
inc
insl
pop
enter
xor
std
lahf
pop
lds
lods
push
dec
into
xchg
shl
scas
pop
or
or
std
dec
pusha
loope
inc
stos
jmp
dec
cmp
gs
mov
sbb
mov
push
test
lret
push
adc
and
push
rcrl
inc
nop
ss
jge
jnp
shrl
mov
add
jb
das
sbb
enter
enter
dec
out
fwait
xchg
dec
out
pause
mov
xor
mov
ja
int3
mov
jns
push
lea
jns
or
mov
cwtl
push
mov
ss
xlat
xrelease
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
xchg
mov
out
cmpsl
adc
add
adc
cmp
lcall
dec
fldenv
adc
insl
xchg
bound
dec
lock
xchg
cmp
enter
dec
and
fsubrl
fmul
mov
adc
or
je
es
push
test
cmp
add
shll
fisttpll
or
shlb
lret
jge
clc
cmpsb
hlt
push
dec
push
lods
repnz
fdivrs
xorl
dec
cmp
test
lcall
dec
or
mov
mov
std
push
or
xchg
pop
clc
test
jg
fwait
pop
and
mov
int3
out
adc
mov
std
push
add
xor
or
push
out
ficomps
sti
lahf
test
push
push
inc
inc
enter
imul
jg
xor
sub
push
sbb
imulb
mov
and
stc
mov
push
jmp
ds
ss
out
mov
jmp
mov
dec
in
jmp
xchg
jo
dec
mov
out
lret
add
je
xor
sbb
addb
sbb
lods
and
adc
lahf
imul
mov
jmp
or
push
loop
jno
ficoml
test
shrl
mov
cmpb
loopne
xchg
jnp
push
loopne
sbb
jl
ret
sarl
inc
call
aam
dec
mov
mov
imul
lods
or
nop
sbb
or
test
lcall
or
xlat
enter
dec
mov
add
cld
or
leave
sbbl
pop
test
pusha
sti
sahf
mov
je
fadd
push
push
cmp
sub
adc
cwtl
mov
lods
pop
outsl
sub
fdivrs
je
mov
pop
loop
mov
ret
push
cmp
lods
fcompl
imul
orb
cmpsl
or
xor
mov
aaa
aam
cmp
pop
sub
outsb
jae
gs
mov
cmp
xchg
cld
jae
xchg
mov
xchg
push
xor
cwtl
ljmp
add
dec
dec
dec
sbb
mov
insb
xchg
cmpsl
pop
xchg
cmp
call
out
adc
or
push
inc
clc
repnz
das
lea
idivb
adc
push
jmp
or
push
jmp
cltd
fistps
leave
push
xor
and
xor
inc
imul
jo
in
inc
push
or
sahf
cmp
inc
push
shrl
dec
dec
mov
inc
and
jne
fistps
ds
int
in
cld
mov
mov
mov
clc
xor
sub
hlt
orb
mov
pop
lods
pusha
push
je
insl
stos
pop
pop
xchg
inc
shll
jo
out
add
jno
push
int3
cmpsl
sub
jbe
xor
fdivp
pop
mov
or
ret
hlt
sbb
mov
pop
add
add
les
gs
mov
in
outsb
cmp
frstor
nop
ljmp
xor
add
in
xor
jbe
stc
jbe
test
imul
and
dec
stos
rolb
dec
mov
jle
shll
add
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
nop
sarb
movsl
adc
add
adc
sub
add
roll
call
dec
mov
xor
sub
psrlq
insl
insb
mov
push
sbb
and
mov
dec
stos
jns
and
leave
cmp
mov
push
cwtl
mov
icebp
cld
clc
js
mov
cmp
xchg
fstps
das
fdivs
int3
lret
add
dec
nop
mov
and
test
jl
aam
lret
daa
mov
idivb
arpl
push
adc
mov
out
roll
popa
mov
cmp
mov
outsb
out
stos
bound
lcall
test
and
jle
cli
sbb
arpl
xchg
popl
add
add
out
scas
das
xchg
ljmp
lret
mov
inc
cmp
jmp
xor
or
cmp
fsubr
imul
adc
mov
orb
std
insl
fisubs
mov
imulb
movsl
ret
loope
nop
loope
lock
xchg
and
aam
xchg
mov
jge
fldl
arpl
lds
mov
cmpsl
enter
cmc
filds
les
in
sahf
xchg
xchg
mov
ret
lods
lret
pop
stos
add
mov
outsb
ret
mov
jl
in
shrl
test
insb
fimuls
jl
mov
sub
pop
mov
sub
mov
adcb
pop
mov
test
repz
arpl
mov
leave
mov
adc
out
and
or
hlt
add
aad
pop
pop
int
pushf
insb
jno
insl
dec
cld
mov
out
mov
notb
jcxz
in
xor
imul
sbb
mov
fsubrl
xor
xchg
fsubrs
mov
aam
add
sub
jns
or
test
pop
sub
jbe
cmpsb
cmp
sbb
das
cwtl
xchg
sub
sub
mov
mov
loopne
or
in
mov
ljmp
pop
out
in
dec
inc
adc
mov
pop
cwtl
insb
inc
xlat
insb
or
movb
or
nop
adc
or
add
push
fldt
or
fnstcw
mov
fiaddl
test
jg
mov
cmc
sarb
stos
ds
mov
inc
gs
mov
cmp
xchg
lea
aaa
call
push
mov
cld
jmp
pmaxub
mov
xor
or
pop
test
in
cmpb
imul
or
dec
fmull
fadd
or
sbb
ljmp
das
xor
lds
add
inc
nop
sub
int3
jp
rorl
out
inc
and
sub
dec
test
mov
jecxz
out
pusha
push
mov
xor
outsb
jns
mov
sbb
lret
icebp
aaa
pop
jb
dec
sbb
mov
pop
ret
and
pushl
add
cmp
dec
cltd
mov
mov
push
mov
mov
mov
adc
pop
add
roll
inc
or
inc
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
out
loop
enter
jne
adc
mov
mov
jle
adc
dec
and
inc
sahf
loope
ret
iret
shl
into
xor
fsubr
jnp
xor
in
or
inc
xorl
cli
add
jle
shl
pop
in
sub
sbb
sti
pop
jecxz
fwait
mov
out
cmc
int
mov
mov
adc
dec
in
jne
or
adc
mov
out
cmp
into
pusha
push
mov
xchg
sub
repz
scas
push
inc
icebp
push
aaa
repnz
xchg
and
mov
pop
mov
mov
cmp
icebp
inc
repz
sub
cmp
inc
iret
xor
stc
cmp
das
push
ds
xchg
push
out
outsl
jo
outsl
adc
testl
or
xor
stos
lea
cmp
jb
je
inc
cmp
pop
jno
gs
adc
popf
cld
insl
sbb
repnz
jp
inc
ja
pop
mov
pop
jnp
pusha
shll
testb
aad
sahf
jge
cmp
das
xchg
xchg
mov
std
sbb
lock
jmp
sbb
or
push
mov
cmp
stc
xchg
movl
mov
mov
into
add
sub
in
sub
mov
leave
xchg
and
int3
scas
fwait
jae
jg
adc
iret
mov
xor
push
sahf
outsb
leave
mov
das
clc
mov
cmp
lock
mov
jae
not
ljmp
rcl
movsb
pop
push
push
dec
cmpsl
sbb
jle
sub
pop
sbb
inc
cs
cwtl
and
sbb
outsb
xlat
xor
ja
pop
fnstcw
gs
dec
dec
fists
mov
test
iret
xor
ret
cmp
enter
enter
aam
push
leave
dec
inc
decl
movsb
lret
test
incb
xor
cltd
pop
sub
stos
iret
andb
mov
aas
dec
sbb
mov
dec
mov
lret
data16
nop
pop
inc
hlt
jmp
pop
and
pop
arpl
shr
leave
ucomisd
lahf
fsubr
loopne
mov
and
ret
pop
mov
insl
out
pop
inc
sbb
or
in
loopne
icebp
loopne
data16
xorl
mov
push
dec
nop
popf
mov
add
mov
dec
xchg
adc
fsubs
adc
cmp
mov
cltd
test
dec
adc
sbbl
sahf
div
xchg
das
jle
push
daa
jp
int
push
loope
jnp
test
mov
popa
pop
and
std
jne
push
scas
xchg
mov
xchg
mov
loop
stos
inc
adc
cs
lea
adc
repnz
lcall
shlb
lods
ljmp
sub
pop
xor
outsb
sub
sub
xor
loop
cmp
push
stos
scas
add
mov
enter
mov
or
fnstsw
cmpsb
lods
jnp
rorb
imul
inc
lcall
dec
aam
adc
popa
popa
orb
sub
leave
stc
push
or
stos
pop
mov
sub
or
inc
jg
xor
add
shl
pusha
push
addl
push
pop
inc
push
xlat
cmc
pop
and
bound
into
test
xchg
and
jecxz
lret
pop
jg
test
ja
cmpb
int
adcl
inc
and
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
ljmp
adc
adc
xchg
mov
fildl
aam
jo
jl
jmp
add
je
jbe
fbstp
jmp
popf
int3
sub
std
js
jg
jmp
cld
aam
and
mov
insb
test
jp
in
xlat
inc
dec
jecxz
bound
adc
cmp
lret
inc
pop
into
cmpsl
std
inc
movsb
xchg
mov
sub
jnp
fneni(8087
dec
jo
sbb
mov
jmp
shl
cld
push
mov
lret
inc
call
mov
shrb
data16
testl
xchg
int3
inc
stos
mov
cltd
sbb
add
xor
jne
lods
imul
pop
pop
fiaddl
pusha
movsl
pop
mov
xor
popf
ss
cld
mov
xor
mov
ret
add
push
mov
cmp
or
mov
aad
fsubrl
leave
xchg
jae
mov
jg
cmpsl
sbb
xlat
xchg
cmp
cmc
dec
data16
mov
add
leave
in
or
ret
loope
jge
pop
cmp
dec
loop
rorl
movsl
inc
cmp
dec
test
xchg
and
bound
cmovp
outsb
inc
xlat
mov
into
cmp
fcmovnbe
dec
test
int3
sub
mov
push
mov
lcall
push
subb
xor
std
sub
lock
lea
xor
or
test
dec
cmpsl
ret
xlat
icebp
inc
cmpsb
popf
insb
adc
pop
push
push
mov
xor
push
or
adc
int
xchg
bound
cltd
sbb
mov
or
xor
or
push
cld
xor
orl
mov
mov
clc
andb
out
pop
jge
mov
adc
outsl
bt
pop
loope
mov
inc
jnp
add
adc
cli
loopne
xchg
ret
aad
jmp
dec
inc
dec
addr16
sahf
aas
loopne
pop
mov
or
loop
imul
adc
dec
sub
test
loopne
lock
xchg
sahf
fwait
stos
sbbb
out
nop
jae
inc
sub
jmp
clc
sub
pop
iret
jno
pop
cmp
mov
mov
cmp
fsub
and
adc
test
add
shll
dec
mov
adc
fcmovu
scas
xchg
inc
pop
xchg
lods
loopne
push
mov
cmp
and
mov
lcall
js
je
xchg
mov
add
jae,pt
push
cwtl
sahf
and
int3
call
mov
sub
inc
lock
cli
sbb
xlat
mov
mov
inc
in
jmp
lahf
jge
icebp
cmpsb
cli
enter
pop
insb
shll
xor
sub
arpl
jnp
jo
dec
mov
jl
dec
mov
call
or
push
mov
ret
fmuls
loope,pt
arpl
stc
ja
jno
mov
cld
and
mov
outsl
nop
outsl
bound
rcll
inc
dec
push
adc
or
lret
test
cmc
mov
push
out
dec
loopne
pop
mov
fs
jge
dec
sti
jb
push
mov
lret
sub
sbb
cwtl
pop
in
mov
sub
enter
mov
test
cmc
leave
adc
in
sarl
adc
cwtl
ljmp
mov
lret
les
or
mov
arpl
pushf
cmp
sub
adc
add
cmpsb
sub
xor
insb
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
sbb
stos
orl
adc
cmp
cmpsb
fcomps
dec
aas
pop
pop
sbb
sub
lea
lcall
mov
cmp
sub
pop
push
push
ret
test
inc
and
stos
adcb
push
xchg
add
fwait
and
jae
stc
jmp
cmp
add
loopne
mov
pusha
xchg
ds
das
cmp
xlat
jns
out
inc
cltd
xchg
cmp
clc
or
xchg
xchg
pushf
xchg
cmp
cmp
jg
out
arpl
je
fs
lahf
dec
data16
mov
xor
lods
push
pop
and
cld
mov
movsl
loope
pusha
fildl
les
imul
cs
adc
shrb
je
jl
pop
and
sahf
jae
gs
popa
orl
push
mov
lret
imul
mov
lods
out
xchg
pop
nop
mov
sub
cmp
mov
mov
push
mov
lahf
or
scas
mov
shl
mov
add
adc
xor
jge
sbbl
xchg
inc
push
adc
sub
sub
cli
mov
sub
sbb
or
stos
cmc
cmpl
test
sbb
fdivr
pop
loop
lcall
fwait
enter
adc
cmp
xor
sbb
inc
xor
in
mov
push
popf
push
lea
pop
dec
sbb
mov
jmp
pushf
mov
out
ljmp
mov
pop
jo
pop
mov
jle
int
lahf
iret
mov
push
rorl
inc
jp
jne
xchg
scas
imul
jb
dec
adc
outsl
ljmp
ja
mov
jns
pop
inc
or
pusha
aaa
mov
scas
mov
popf
pushf
faddl
adc
ds
inc
scas
in
xchg
sub
lods
shlb
imul
inc
int3
pop
jnp
fistps
fidivs
popf
std
into
cmp
cmp
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
je
lods
dec
xchg
adc
movlps
inc
push
or
fbld
mov
cmpsb
mov
mov
xor
hlt
in
dec
push
mov
push
fwait
mov
mov
and
sbb
push
test
xchg
insb
jge
xor
lock
pop
jae
mov
mov
iret
out
movb
jae
movsl
je
xor
lds
testl
adc
loope
inc
imul
or
jo
and
int3
xlat
and
leave
jmp
bound
ficomps
out
pushf
cmp
stc
mov
in
sbb
push
push
xchg
push
insb
or
jns
fldl
loopne
nop
ljmp
cmp
push
and
enter
insb
push
jge
sbb
scas
clc
inc
lock
lds
push
leave
mov
push
xor
and
movsb
int3
clc
mov
or
mov
mov
andb
int3
push
sbb
into
jmp
aad
lods
movsb
movsb
xchg
test
insl
cmp
sbb
imul
jmp
adc
fcomps
rclb
aaa
shll
cli
inc
xchg
mov
add
dec
sub
shll
xchg
dec
push
mov
int
test
sbb
jg
ret
add
mov
sbb
shll
imul
call
xchg
aas
sbb
sbb
rolb
loopne
sbb
ret
cmp
dec
popl
or
dec
pop
jnp
arpl
cwtl
cmp
adc
cmp
lock
pop
shll
mov
sbb
imull
push
mov
add
or
inc
xor
cmc
in
repz
sarb
dec
js
mov
out
insb
and
ss
push
std
lea
subl
inc
pop
out
mov
leave
mov
xor
fucom
push
ja
adc
in
movsb
mov
mov
xorb
xchg
mov
inc
popa
or
push
dec
cmpsb
addr16
pop
or
decb
stc
mov
or
ret
fmuls
ja
and
test
fs
das
push
out
mov
ss
push
in
xor
jnp
push
lret
sbb
popf
mov
pop
in
popf
aad
jnp
imul
mov
in
pop
inc
mov
test
into
xchg
loopne
iret
mov
fdivs
rcll
sub
arpl
mov
add
mov
add
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
and
stos
sub
adc
decb
adc
pushl
pop
sbb
push
adc
test
nop
xchg
mov
imul
mov
test
sbb
enter
pop
sar
inc
loopne
inc
shll
jbe
dec
inc
loopne
xor
popf
push
out
pop
ljmp
mov
xor
bnd
out
mov
ror
lods
push
add
testb
cmp
push
in
test
add
mov
test
xchg
enter
sbb
jne
mov
cs
loope
xchg
and
popf
stos
aas
xchg
cmp
mov
mov
mov
es
xchg
ret
movsb
stc
scas
sub
mov
call
stc
sar
cmp
sti
shlb
cmp
outsl
mov
sub
xchg
fwait
push
pop
sbb
push
jbe
push
xor
icebp
dec
lock
in
mov
es
das
into
inc
je
and
xchg
cld
mov
addb
ficompl
xchg
and
pop
mov
lahf
and
mov
hlt
mov
stos
int
jno
add
into
mov
cmp
dec
jae
pop
push
leave
mul
insb
jl
inc
into
mov
lods
arpl
push
pop
insl
cmp
fsts
fsts
sbbl
xor
sub
or
sti
adcb
jl
shll
jl
xlat
fdiv
sbb
rorl
xchg
sbb
mov
fnstcw
cwtl
jg
push
repnz
dec
mov
js
push
jne
fsubl
jnp
outsl
jle
push
clc
scas
fdivs
add
data16
in
ljmp
stc
sbb
dec
scas
hlt
movsb
filds
jle
or
pop
or
into
or
cld
loop
hlt
loopne
xchg
addr16
cmp
out
push
scas
xchg
push
push
cmpsl
pushf
out
dec
mov
arpl
out
cmp
inc
and
push
lock
lods
nop
pusha
in
fcmove
pop
divl
sbb
jecxz
add
mov
movsb
cmp
xchg
pop
xor
scas
add
mov
jecxz
aam
lock
mov
idiv
and
test
or
sub
in
jae
push
sub
imul
cmp
sbb
mov
xorb
out
fwait
xchg
add
ljmp
loope
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
mov
movlps
mov
dec
gs
lret
lahf
jns
leave
sub
stc
or
sub
xchg
out
jb
sbb
adc
inc
ljmp
cmc
int3
jl
daa
mov
xchg
in
cmp
jbe
cmp
pop
pop
mov
cmp
bound
push
mov
test
iret
imul
xor
xchg
lea
mov
das
rcrl
std
dec
mov
mov
xchg
or
cld
insb
inc
adcb
gs
loop
pop
fnsave
je
xchg
pop
repz
mov
out
push
dec
subl
add
sbb
sbb
inc
call
jae
mov
lods
popf
mov
push
jbe
inc
mov
divl
xchg
aaa
insl
adc
adc
mov
jb
shlb
ror
dec
cwtl
test
mov
imul
cmp
fmul
stos
mov
sub
xor
xor
loopne
stc
into
sbb
xor
dec
mov
sub
lds
scas
sub
imul
mov
mov
in
or
push
rcl
inc
into
and
pop
mov
add
inc
cmp
testb
cltd
xchg
jns
cmp
jbe
int
cmpl
cmp
jl
push
cld
loopne
lcall
xorb
sub
adc
jo
cmp
inc
jbe
enter
fwait
jnp
gs
push
ja
push
xor
lods
sbb
or
loop
mov
cmc
out
or
push
cltd
int
lret
jmp
add
mov
jle
adc
jle
in
mov
mov
lea
mov
pop
or
in
add
test
jae
shrb
lea
lods
add
stos
and
nop
imul
mov
jae
xchg
jno
out
pop
xchg
insb
jno
std
mov
gs
mov
mov
sahf
and
out
mov
fcompl
test
mov
pop
mov
call
xor
fsubrl
pop
leave
mov
mov
and
mov
inc
arpl
fidivs
mov
in
fisttps
inc
mov
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
mov
adc
decb
adc
mov
inc
dec
adc
shll
outsl
or
arpl
jmp
push
insl
mov
and
jle
rcl
mov
enter
and
dec
sti
arpl
cltd
pop
cs
mov
sub
add
lods
mov
sbb
pop
mov
lcall
mov
loop
incb
adc
clc
fistpll
std
push
jno
push
outsb
mov
test
or
cmp
xchg
lock
mov
pop
rcrl
pop
cmpsl
fwait
and
pop
cmc
rorl
jl
push
cmp
cmp
mov
sub
test
insb
addr16
in
cmpsl
int
lock
mov
sbb
or
adc
mov
push
push
inc
add
push
jno
xor
push
leave
ficompl
and
roll
cltd
mov
jb
and
enter
mov
leave
out
jge
icebp
insl
and
xchg
jle
xor
pop
mov
add
push
inc
mov
ret
mov
jp
pushl
std
je
sti
cmc
imul
xor
in
fcmovbe
insl
and
mov
movsb
in
aam
adc
add
ljmp
js
sbb
or
jno
lcall
push
out
jl
call
and
jecxz
sbb
call
pop
aad
aad
mov
cmpsl
rcrb
jb
xchg
test
das
push
jne
outsb
and
add
rol
popa
jb
lahf
sub
xchg
cld
xlat
jno
aaa
fs
in
stos
in
add
dec
pop
and
ja
roll
push
sub
lret
mov
out
mov
mov
arpl
or
popf
pop
dec
and
push
push
push
sub
sbb
test
sub
stc
iret
mov
outsb
xor
sti
mov
out
mov
outsb
cmp
data16
jg
push
arpl
sahf
adcl
inc
dec
jne
add
les
fwait
jge
adc
mov
lahf
addr16
dec
dec
mov
adc
out
cltd
jnp
or
pop
popl
pop
les
xchg
lods
and
int3
xchg
xor
pushf
sub
lods
add
mov
xor
push
cld
adc
loope
call
mov
jmp
js
cmc
repz
sub
lret
push
ret
jne
adc
movlps
imul
packssdw
jl
cmp
adc
jbe
lea
push
pop
dec
cs
sbb
jecxz
insl
out
push
insb
loop
or
pop
add
sahf
and
add
push
xor
adcl
in
xchg
cmpsl
or
ss
test
into
push
sahf
xor
xchg
cmp
lcall
pop
movsb
ja
pop
hlt
mov
pop
inc
test
popa
imul
jecxz
iret
orb
lcall
hlt
push
cmp
xor
sub
testb
add
or
pusha
cmpsl
mov
jo
les
in
lea
insb
push
idivl
pause
sub
adc
cmp
adc
test
lcall
cmp
movsl
jg
rol
mov
sub
or
jb
outsb
push
pop
jmp
push
sbb
dec
arpl
movsl
mov
lret
fbstp
jge
push
aaa
dec
leave
add
bound
rclb
mov
sub
sbb
out
cld
xchg
lret
dec
ljmp
dec
icebp
es
jno
add
mov
xor
hlt
lcall
int3
lahf
fisubrl
lods
cmp
cmp
xor
jnp
fimull
in
decb
mov
leave
popa
ret
dec
lahf
vpunpcklqdq
pop
lret
jns
into
call
out
mov
adc
push
jecxz
dec
pop
dec
mov
in
js
ret
jecxz
cld
mov
add
das
push
arpl
cmp
sub
mov
clc
pop
stos
mov
xorl
icebp
adc
shl
adc
pop
add
movsl
or
pop
pop
clc
jl
xor
shl
leave
fcomi
mul
lret
dec
xor
mov
or
aad
mov
leave
xchg
nop
stos
mov
out
movsl
mov
cmc
shlb
das
addr16
ds
or
and
gs
cwtl
leave
js
push
lret
dec
mov
or
inc
mov
add
aam
sbb
cli
aad
imul
jmp
arpl
xor
jecxz
jbe
ds
fsubrl
lret
add
pop
xor
lods
xor
in
pop
loope
push
adc
pop
xchg
adc
mov
or
lahf
mov
test
mov
sub
test
dec
xchg
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
jle
jno
adc
movlps
lcall
push
cs
mov
sbb
shrl
repnz
jg
push
test
gs
adc
std
in
inc
xchg
sbb
jb
mov
movsb
xor
xchg
cltd
fs
scas
xchg
pop
mov
jmp
sti
sub
push
sub
jo
mov
adc
mov
push
mov
orb
aam
lret
repz
aad
das
or
mov
movsb
std
fwait
divl
fildll
pushf
int3
add
dec
js
arpl
rcr
jo
test
paddb
cld
faddp
dec
jae
xchg
jo
pop
inc
and
dec
xor
adc
test
imul
or
xor
inc
outsl
mov
sub
gs
sbb
lods
or
xchg
mov
inc
jge
stos
out
dec
mov
inc
mov
and
push
sbb
pop
xor
js
stc
or
sbb
cmp
out
xor
and
adc
push
pop
fidivs
sahf
or
and
das
testb
test
and
add
insl
lods
shl
lret
fidivl
mov
movsl
mov
mov
ds
xor
je
sbb
sbb
or
push
sub
cwtl
xor
add
jecxz
mov
and
pushl
stos
loop
pop
test
or
out
imul
lds
cltd
sbb
cli
shl
in
shr
add
pop
ss
notb
addl
loop
das
cmp
jno
roll
lds
lock
xchg
adc
xor
inc
movsb
cmp
xor
pop
inc
scas
leave
pop
adc
mov
ja
sbb
shrl
sbb
xor
dec
and
sbb
add
test
mov
out
into
xlat
aam
mov
sbb
stos
int
and
fs
adc
or
and
push
jmp
pop
ficomps
std
and
adc
insb
aaa
xor
cmp
cmp
insb
xchg
jp
mov
sbb
insb
jmp
imull
mov
jb
adc
cli
fcmove
pop
push
cwtl
or
cli
jecxz
add
add
loope
sub
ljmp
out
ficomps
mov
cmp
lret
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
jbe
aam
scas
adc
decb
adc
popa
jb
loope
adc
mov
scas
mov
data16
push
fnstcw
inc
rcll
or
inc
repz
gs
sub
pop
in
pop
mov
out
and
push
divb
push
test
ffreep
push
rcrb
sbb
fs
cmp
push
adc
dec
ret
icebp
enter
movntq
push
or
cmpsb
mov
lock
push
mov
xchg
lret
inc
add
xchg
das
into
lcall
cmpsl
loope
lahf
enter
add
add
inc
dec
mov
arpl
jb
add
jmp
sub
lcall
add
cmp
push
shlb
mov
inc
divl
repnz
movb
sarb
out
cld
add
or
mov
jecxz
cs
aam
ret
sbb
addl
inc
movsb
or
lcall
pop
lods
push
sbb
mov
mov
adc
js
in
xor
inc
jl
jmp
aad
push
mov
xor
sub
lock
mov
ret
adc
sub
or
mov
push
adc
fstpl
dec
push
rcll
pop
leave
lcall
xchg
fiaddl
xor
pop
mov
pop
jmp
div
mov
test
ss
repz
jns
sbb
mov
dec
jle
xchg
loopne
mov
mov
push
push
push
leave
add
ja
dec
sub
cld
push
push
divb
aas
sub
sub
jg,pn
cwtl
xor
cmp
mov
aas
jns
ss
out
or
or
stc
decb
jp
and
sti
and
cltd
or
pop
jne
adcl
sbb
xchg
pop
sbb
mov
push
shrb
cmpsl
inc
adc
cli
daa
cmp
repnz
cmp
dec
xchg
out
js
lods
test
aam
sbb
sub
das
mov
inc
jle
fs
outsl
and
or
ss
js
sbb
je
mov
inc
rol
roll
pop
mov
insb
scas
and
into
dec
cmp
cmpsl
shll
push
ror
pop
push
and
fwait
jnp
loope
mov
das
inc
jae
push
and
cltd
cmp
into
inc
fadd
lock
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
aam
rep
arpl
adc
movlps
fmuls
test
mov
mov
or
les
mov
xchg
test
fisubs
sti
or
jl
jl
fnstenv
jp
mov
repnz
inc
push
jne
loop
xchg
and
sbb
fdivrl
mov
pop
jecxz
or
pop
and
push
add
je
sbb
test
cmp
das
sbb
fnstenv
es
addr16
pop
push
lods
loop
mov
iret
jl
or
mov
shrl
push
cmp
mov
sarb
jmp
les
js
dec
divb
scas
mov
mov
sub
jecxz
or
int3
daa
and
inc
daa
nop
jbe
and
ret
push
xor
dec
fadds
xchg
scas
icebp
and
mov
mov
adc
aaa
inc
xchg
mov
fstpl
aad
arpl
pop
lods
nop
push
jno
call
negb
sub
jnp
in
repz
mov
or
jnp
in
xchg
inc
cmp
cs
repnz
shll
and
sbb
das
mov
mov
xchg
pop
cli
push
jmp
gs
mov
mov
push
dec
lds
jb
sbb
cwtl
dec
push
push
dec
mov
inc
dec
adc
loopne
cld
and
fmull
jns
fsts
push
push
push
nop
call
jne
add
adc
mov
add
inc
jbe
shll
and
xchg
lea
sbb
sbb
mov
dec
rcrb
sub
lret
pop
pop
inc
mov
dec
outsb
lcall
jecxz
cli
fs
push
loopne
inc
nop
cmpsb
adc
adc
jl
and
dec
push
aaa
repz
xchg
push
lahf
jge
fcomp
push
pop
xchg
shrl
out
cwtl
sub
add
mov
jg
repnz
imul
lods
repz
cmp
je
cmp
fucomp
mov
loope
add
imul
ljmp
icebp
jg
and
mov
pop
sbb
daa
in
mov
or
cmpsl
and
add
shrl
lea
sbb
sub
or
repz
adc
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
fnstcw
jle
popa
adc
decb
adc
mov
pop
mov
call
aaa
outsb
pop
popf
mov
or
enter
test
inc
sbb
jnp
sbb
stc
adc
mov
pop
cmp
cmpsb
lock
sub
nop
ds
scas
push
dec
lret
dec
rcll
fcmovu
bound
ss
test
in
std
or
xor
jae
mov
pop
sbbb
adc
icebp
push
loope
test
jbe
cmp
mov
mov
jae
push
mov
test
scas
lock
inc
sar
or
js
scas
mov
adc
inc
or
lods
mov
dec
mov
sbb
or
in
dec
xchg
mov
les
loopne
cmp
loope
out
pop
mov
out
das
into
adc
pop
xor
daa
jo
mov
sbb
inc
jmp
jb
xchg
and
mov
call
pop
decl
push
ret
rcrl
subl
xor
movsl
fdivrl
push
out
mov
cli
mov
sub
push
in
movsl
shl
push
cmp
movsb
jp
push
aam
insl
jecxz
ret
cmp
push
xchg
adc
orb
insl
push
cmp
scas
leave
adc
push
jge
cltd
in
and
es
daa
sub
call
pop
jne
cwtl
sbb
pop
lret
xchg
pusha
cwtl
cmp
pop
pop
movsb
sahf
inc
and
hlt
sti
inc
pop
sbb
push
icebp
mov
add
xlat
sub
fistl
ss
dec
sarl
inc
test
xchg
xchg
lods
into
mov
aas
and
fs
pop
inc
arpl
add
movsb
mov
jle
xchg
imul
fwait
movsb
in
lods
insl
iret
xchg
pop
mov
jbe
xor
sub
inc
pop
mov
test
std
loope
fstpt
leave
jecxz
push
dec
outsl
inc
sbb
repnz
fcoms
clc
rorb
jg
mov
xchg
push
cmp
jb
pop
dec
cmp
inc
xchg
jecxz
pop
cmpsl
and
mov
cs
cld
inc
or
ds
lcall
mov
imul
cwtl
js
repnz
arpl
leave
xchg
dec
sbb
sub
or
movsb
stos
mov
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
js
pop
adc
decb
adc
ljmp
inc
std
lds
dec
adc
mov
lea
or
and
mov
xor
add
sahf
jecxz
sbb
inc
jno,pn
cmp
out
mov
lea
aas
out
mov
mov
aam
out
mov
shll
and
rcll
adc
mov
test
xor
dec
sub
mov
mov
jns
mov
in
ret
add
push
xor
cltd
mov
jae
jecxz
and
push
push
rcpps
sti
push
xchg
nop
xchg
inc
push
add
outsl
xchg
mov
mov
sbb
pop
mov
imul
mov
dec
cmpl
pop
and
xor
add
mov
cmovl
push
push
outsl
lods
std
dec
sahf
enter
adc
out
dec
into
jp
push
sbb
jmp
int
ret
cmp
mov
jl
and
inc
int3
in
gs
frstor
add
shrl
jmp
xor
adc
inc
pop
test
repnz
xchg
and
mov
out
int
cld
inc
jb
pop
mov
fwait
adc
mov
or
repnz
jmp
jp
mov
lods
mov
sub
jnp
cmp
and
dec
out
enter
cs
and
cmp
ret
cmp
xor
cmpsb
jge
popf
push
dec
outsb
cli
out
bnd
push
pandn
es
mov
cltd
repnz
rorl
mov
stos
mov
cmp
wbinvd
add
mov
and
in
or
repnz
push
pop
push
pop
scas
sbb
xor
aaa
or
sbb
lret
sub
movsb
cld
jbe
fs
dec
lcall
stc
aad
pop
repz
imul
pop
inc
adc
jge
push
insl
adc
outsl
xor
lcall
jle
or
and
jp
cmp
movsb
mov
adc
stc
cltd
aaa
adc
lahf
mov
dec
leave
pop
mov
mov
adc
or
ret
cmp
sbb
loop
daa
jmp
jae
xlat
cld
outsl
sbb
dec
xor
ss
in
mov
dec
decl
cmp
shr
add
add
bt
cmp
dec
in
or
adc
movlps
idivl
ljmp
lahf
jg
lret
test
dec
pop
lret
nop
jo
fwait
mov
lcall
or
lcall
jnp
lret
lea
push
mov
jle
sub
lret
les
cmp
in
mov
adc
mov
lret
sub
add
push
sub
lock
es
ss
cmp
arpl
jecxz
iret
lods
or
out
mov
cmp
mov
mov
xorl
hlt
xor
jo
mov
psubsb
xor
mov
leave
lds
sarb
add
lret
lcall
sahf
dec
enter
bound
mov
js
int
cmp
sub
loope
aad
rcrl
and
js
mov
jne
mov
aas
xor
dec
mov
lods
inc
xchg
pop
sub
sub
aam
cwtl
lods
pop
inc
fsubr
jb
cld
sbb
mov
push
rorb
iret
fmull
scas
cmp
sahf
loop
mov
sbb
pop
stos
test
rcrl
ret
imul
xchg
lods
adc
enter
cmp
sub
mov
push
mov
cmp
jl
repz
je
and
lahf
xchg
adc
movsl
jl
in
ja
sub
push
jno
xchg
adc
sbb
stos
repz
das
orb
fwait
pusha
or
test
testb
aas
inc
mov
inc
nop
sti
fildll
mov
push
push
mov
dec
cmp
stos
cltd
int3
pop
popa
cmp
sbb
stos
aam
repnz
fdivrl
push
test
or
xchg
ljmp
dec
das
jnp
popa
or
push
loop
ds
insl
imul
cs
outsb
insl
adc
test
call
lods
and
or
jo
out
mov
dec
mov
mov
mov
call
jae
inc
mov
pusha
cmp
pushf
popa
sub
inc
cltd
bound
rol
and
xchg
mov
inc
mov
xchg
add
jge
push
jp
jle
int3
dec
add
fs
fs
mov
incl
je
mov
js
sbb
sbb
scas
daa
fldenv
push
and
fcomps
and
movsb
mov
pop
insb
adc
pop
test
jg
decl
test
inc
or
enter
add
or
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
xor
adc
decb
adc
lret
sbb
ret
fisttps
xchg
jmp
or
outsl
sub
cmpsl
xor
stc
add
push
es
cmp
or
pop
int3
mov
daa
andl
outsb
fucomp
xor
pop
dec
sbb
pushfw
add
sub
cmc
int3
inc
dec
jmp
stc
and
call
xchg
xchg
arpl
fsubl
icebp
sbb
pusha
mov
clc
movsl
or
cmp
pusha
pop
push
push
enter
sarl
push
les
fcomp
je
sbb
int
xchg
jecxz
inc
test
ret
inc
and
mov
jno
push
mov
cmpsl
pop
mov
stos
dec
push
xchg
fxch
mov
rcrl
ds
repnz
fldt
outsb
xorb
shlb
mov
cmp
xor
mov
mov
clc
mov
xchg
mov
pop
clc
shll
ja
out
xor
add
lahf
daa
sbb
bound
mov
sub
sub
iret
jl
mov
icebp
sub
pop
xchg
addr16
in
xor
test
push
fildl
std
cld
je
mov
or
pop
or
xchg
cli
pop
mov
daa
negb
cs
inc
xor
testb
icebp
xchg
std
bswap
jns
or
inc
mov
repnz
imul
dec
cwtl
jle
mov
pop
adc
int3
xor
mov
sub
leave
icebp
cmp
mov
inc
sarl
or
nopl
dec
mov
mov
adc
adc
or
outsl
mov
fimuls
xchg
arpl
dec
leave
sub
in
ret
pop
in
xlat
add
jbe
mov
outsl
dec
aas
aad
inc
sub
pop
xor
outsl
aam
in
sbb
jmp
scas
test
mov
pop
mov
push
ret
mov
lcall
lds
mov
int
xchg
in
rcrl
mov
or
sbb
mov
cltd
popf
cmc
cvtps2pi
sub
jle
adc
push
test
xlat
rcll
cwtl
lcall
out
dec
adc
or
orb
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
or
adc
decb
adc
pop
add
sbb
out
aas
xor
xchg
xor
adc
arpl
cmpsb
stos
and
loop
in
pop
mov
xchg
insb
mov
mov
push
add
and
fildl
loope
sbb
adc
negl
scas
es
adcb
add
fildl
leave
inc
fst
add
and
sub
mov
sub
ss
pop
cltd
lahf
lar
fistps
ss
or
nop
xchg
jns
cmp
mov
idivb
mov
xchg
mov
scas
jmp
fists
jb
call
push
mov
ret
imul
jecxz
jb
movsb
sub
imul
enter
fwait
jl
pop
in
mov
and
pop
lcall
pusha
cmc
pop
mov
and
roll
fmuls
xor
add
in
sub
adc
xchg
sti
mov
icebp
push
loope
in
inc
inc
xchg
aad
xlat
clc
pop
out
ja
jb
in
shld
pop
pop
adc
aas
lahf
test
or
lcall
sbb
mov
jae
jg
xor
sbb
jne
popf
xchg
push
aas
inc
mov
adc
sbbb
xor
bound
ja
lcall
test
or
fnstenv
jo
inc
lret
jne
push
andb
daa
popf
mov
fwait
xchg
jae
lret
add
cld
inc
sbb
pop
out
loopne
and
push
movsb
shlb
add
iret
loop
imulb
pop
movsl
aas
addr16
mov
mov
mov
fdivl
or
fwait
pop
dec
nop
idiv
popw
ss
int
jbe
push
xchg
xchg
inc
xchg
inc
fcoms
jg
loop
and
inc
or
pop
addr16
or
cs
mov
mov
cmp
leave
stos
jne
sbb
out
movsb
inc
neg
and
mov
cmp
cmp
dec
xchg
sbb
jl
or
cmp
xchg
add
mov
dec
vfrczpd
inc
pop
xchg
sbb
ljmp
stos
in
mov
push
call
pop
bound
es
mov
outsb
sub
js
push
icebp
mov
jmp
cmp
sbb
stos
mov
add
xor
rorb
ret
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
aaa
lods
pop
xor
mov
adc
sti
cmpsl
add
std
xor
insl
fs
decb
test
sbb
leave
inc
mov
pop
cmp
pop
pop
aaa
int3
pop
jne
xchg
jo
inc
dec
jbe
mov
jg
xchg
xchg
std
push
cmp
push
std
push
gs
es
cs
fisubs
cmpl
pop
ljmp
cmpsb
pop
orb
popa
daa
sub
mov
dec
push
jae
leave
jae
add
pop
stos
pusha
xor
insl
mov
xlat
mov
in
stc
pop
inc
call
mov
std
push
test
incl
ja
out
sbb
aad
icebp
pop
push
hlt
dec
lahf
and
cmp
xlat
mov
cmp
and
in
jns
idivb
pop
inc
mov
jae
ja
pop
inc
cmpsb
fs
adcb
xor
scas
and
stos
push
xlat
popf
aad
ja
jnp
push
pop
loop
push
mov
pop
pop
popf
shl
xchg
iret
roll
push
push
inc
dec
lret
inc
pop
ret
ss
fcmovnu
lods
loope
addr16
mov
cld
sub
test
cmp
cmp
cmp
mov
icebp
shrb
pop
in
inc
lcall
sub
jbe
mov
mov
mov
cmp
lock
mov
aad
leave
cltd
pop
fisubs
xor
sbb
adc
xchg
fstl
jg
scas
popw
addr16
push
mov
out
add
cltd
mov
stos
nop
jne
aam
mov
in
push
xor
adc
daa
mov
mov
add
or
jb
adc
adc
mov
rcrl
or
mov
lret
ja
scas
hlt
add
push
nop
and
pop
scas
jo
add
cmc
sbb
mov
ret
sahf
rcrb
mov
lret
enter
lock
xchg
in
inc
popa
mov
push
dec
outsb
cmc
sbb
inc
or
shrb
push
push
push
push
outsb
popf
in
enter
ds
dec
push
test
inc
inc
lret
aas
arpl
xchg
stos
into
rcr
mov
mov
ret
testb
mov
fsubs
add
pop
mov
sub
cmpsl
xor
mov
sti
jne
add
inc
adc
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
fcmovb
and
das
mov
popa
jge
jns
mov
ret
pop
dec
push
mov
cmp
xchg
in
int
hlt
pushl
mov
xchg
sbb
mov
sub
data16
pushf
jge
jg
push
out
mov
xor
imul
add
mov
or
iret
pop
dec
lds
push
mov
in
cmp
push
inc
bound
pop
push
popa
adc
cmp
push
cmp
sti
test
xchg
pop
dec
movsl
outsb
pop
cmpl
lcall
enter
int
aas
cmp
mov
call
dec
pop
inc
xor
sti
and
mov
mov
stos
jnp
cwtl
dec
push
mov
lock
add
das
icebp
int
mov
sbb
shlb
xor
sub
mov
stos
subb
cltd
fxch
mov
stos
cli
push
inc
pop
jae
lock
mov
loope
jmp
dec
cltd
ret
pop
push
mov
cli
sub
mov
mov
and
add
dec
push
fldl2e
cmp
sub
mov
loop
sub
ljmp
sahf
push
mov
mov
out
mov
rolb
aas
add
lret
call
rcrw
cld
cmp
scas
shrb
mov
iret
jbe
jbe
mov
xchg
push
mov
cmc
xchg
stc
jo
add
jb
lahf
or
push
lea
loopne,pn
xchg
cmpsl
add
sahf
mov
pop
cltd
movsb
mov
inc
cmpsb
push
xlat
das
stos
scas
mov
push
jb
dec
mov
cmp
fs
jge
mov
mov
mov
repnz
push
add
aam
cmp
jno
inc
fistpll
leave
mov
es
mov
mov
add
imul
sbb
jno
sub
jmp
in
mov
pop
mov
push
ja
ss
sbb
mov
xchg
pop
cmp
lcall
loope
inc
lods
or
hlt
jp
pop
xorps
push
sbb
xchg
test
adc
push
xchg
insl
outsl
jmp
pop
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
testb
sarb
adc
test
jmp
lret
push
outsl
mov
sahf
je
fisttpl
cmpsl
cltd
mov
xadd
push
arpl
pop
add
push
mov
rorl
into
mov
push
arpl
shr
roll
cmpsb
or
pop
mov
and
outsl
dec
adc
inc
mov
sbb
sub
pop
and
jns
mov
bound
xchg
xor
sbb
icebp
push
lcall
mov
je
aaa
jp
adc
shll
push
mov
push
inc
inc
pop
lea
xchg
rol
sbb
leave
pop
js
mov
pop
mulb
or
jnp
adc
rorl
mov
in
sbb
jns
pop
out
push
xor
cmp
mov
add
xchg
xchg
insl
jmp
jge
fcomi
xor
adc
bound
inc
int
outsb
out
decl
rorl
sahf
jle
sahf
nop
sbb
out
insb
mov
test
out
pop
inc
add
xchg
incb
pop
dec
call
or
test
shr
lret
lahf
sti
dec
pop
sahf
cld
cmp
dec
aad
adc
and
ds
sahf
lret
pusha
cmp
daa
push
mov
outsb
inc
rolb
xchg
jb
mov
adc
fneni(8087
imul
fs
clc
icebp
mov
int3
mov
hlt
ds
jbe
pusha
adc
cmp
loope
xchg
xor
ja
mov
inc
stos
les
test
in
hlt
lock
push
pusha
adc
fs
mov
adc
xor
or
pop
pop
in
jecxz
mov
or
decb
mov
jg
repnz
test
jecxz
rolb
jmp
push
pop
mov
outsl
nop
bound
pop
fld
das
jb
test
test
add
fimuls
mov
push
cs
lds
cmp
rcrl
int3
jg
fdivl
sbb
es
mov
lea
pop
mov
push
jnp
dec
ja
mov
int
mov
cltd
mov
dec
mov
dec
int3
push
dec
aad
sbb
clc
into
test
lock
inc
xchg
pusha
iret
rol
imulb
pop
outsb
imul
jae
add
rcl
jno
lahf
sbb
inc
aam
in
pop
fabs
std
dec
jp
in
cmp
push
xor
aaa
popa
mov
hlt
sbb
adc
push
outsl
sbb
mov
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
les
dec
cmp
adc
lcall
movsb
jnp
and
mov
rcll
adc
in
psubsb
hlt
cli
js
shrb
xor
add
inc
xchg
lea
out
mov
mov
outsl
jl
movsb
scas
or
pop
sbb
xlat
and
es
push
cs
mov
mov
push
sub
dec
pop
pushf
cmp
int3
add
ss
mov
pop
lds
mov
cwtl
push
jbe
adcb
loopne
or
dec
cmp
jne
div
mov
and
sbb
fcomps
into
jle
sbb
sbb
or
pop
push
leave
cli
jae
jge
push
xor
push
pop
push
adcb
pop
lds
cmpsb
sub
gs
je
pop
mov
sbb
or
daa
or
rorb
test
mov
addl
int3
adc
sbb
ud2
adc
cmpsl
xlat
cmp
outsl
jb
ds
aas
sbb
into
and
inc
mov
outsl
xor
cmc
hlt
jb
rcll
cld
push
push
insl
xor
popa
in
mov
sbb
push
jge
dec
daa
mov
mov
int3
xor
stos
insl
dec
push
jae
fdivs
cmp
leave
jmp
test
dec
jecxz
loopne
dec
mov
inc
xchg
xor
dec
jo
loop
inc
xchg
pop
push
fwait
sub
sbb
repz
xchg
in
popf
popf
add
orb
fisttpll
sub
pop
pop
aad
sbb
dec
mov
adc
pop
dec
or
loope
pop
loop
cmpsb
pop
faddl
lahf
mul
xchg
pop
into
jmp
and
nop
jns
or
pop
int3
nop
fstps
pop
outsb
test
xchg
add
ja
popf
int
jne
sar
add
pop
pop
pusha
fs
sarb
fnstcw
call
outsl
ljmp
aas
jb
jne
outsl
xchg
rcrl
fsubl
sbb
mov
and
add
mov
xchg
xor
jp
or
imul
mov
out
inc
pusha
xor
xchg
leave
and
inc
mov
out
test
xor
jae
inc
add
leave
es
iret
jecxz
jne
xchg
jnp
sbb
pop
mov
and
push
mov
mov
mov
dec
mov
push
enter
adcb
push
test
cmc
or
clc
push
jae
mov
dec
out
and
xor
sub
sbb
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
enter
lret
das
adc
popf
movlps
or
out
jmp
push
inc
data16
sarl
out
in
or
jmp
bound
pusha
xorb
aas
jb,pt
cmovb
fs
mov
ret
or
cmp
out
jo
pop
push
adcb
popa
xchg
imul
or
pop
pop
fidivl
std
pop
loopne
aad
jecxz
ret
aaa
xchg
js
sahf
and
fwait
rorb
out
sub
jnp
push
mov
fwait
pop
dec
push
add
dec
sbb
pop
adc
mov
push
dec
or
or
and
mov
or
and
push
ficomps
mov
sbb
sub
in
lret
dec
xor
and
jl
outsl
sbb
xor
stc
mov
dec
sub
cwtl
pusha
or
lds
loopne
or
mov
pop
xchg
out
cmpsl
xlat
stos
jge
adcl
fldl
add
xor
mov
mov
mov
push
stos
sbb
mov
and
inc
jae
shr
jge
jp
inc
lahf
test
or
xchg
insb
dec
cmc
mov
pusha
adc
pusha
cli
and
daa
adc
lcall
dec
imul
or
mov
xor
push
idivl
scas
fs
int3
inc
aam
pusha
mov
mov
add
ja
call
push
andb
iret
ret
bound
in
iret
xchg
sarl
nop
test
push
movsl
mov
inc
and
call
jmp
pop
fstl
cmpsb
mov
in
push
or
mov
movsl
push
outsl
jmp
cmc
xchg
jmp
cmpsb
les
imul
adc
push
adc
pop
outsb
inc
fwait
das
lret
mov
rorb
pop
icebp
arpl
pushl
ret
xchg
jne
add
mov
rcrb
push
cltd
mov
push
in
cmp
inc
outsl
sub
mov
mov
pop
jne
push
mov
inc
adc
adcb
sbb
addr16
sub
fwait
inc
inc
rcl
mov
sbb
dec
xor
rorl
mov
dec
push
in
pushf
jg
in
xlat
cmp
aad
pop
popa
fwait
jecxz
xchg
fs
sbb
jecxz
xchg
jl
sbb
ret
arpl
mov
add
fmul
adc
dec
je
sub
fs
repnz
stc
dec
dec
rorl
lods
mov
mov
mov
in
bound
ret
mov
popa
add
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
aaa
bound
imul
sbb
pop
cltd
aad
cmp
xchg
leave
fmuls
xor
inc
outsl
adc
and
or
adc
scas
mov
pop
pushf
aas
xor
mov
sub
iret
pop
ds
or
dec
dec
inc
mov
es
test
xor
inc
xor
jbe
lcall
fidivrs
jnp
cmp
fcoml
mov
cmc
mov
push
cltd
outsl
int3
enter
sbb
adc
ljmp
fldt
push
adc
std
aam
push
and
ficoml
adc
sub
and
pop
ud2
int3
leave
xchg
jecxz
and
jecxz
mov
scas
xchg
add
insb
outsb
cs
mov
mov
in
in
pop
mov
jl
and
test
xchg
hlt
add
repnz
xchg
sbb
cli
dec
add
outsb
jg
cli
inc
aaa
and
mov
movsb
in
xor
aam
sub
mov
push
icebp
mov
stos
sub
cmp
std
mov
xor
jge
mov
lcall
insl
inc
jecxz
cwtl
xchg
pusha
dec
and
mov
fcomi
test
testl
shlb
push
xor
inc
add
mov
mov
pop
test
pop
or
mov
jbe,pt
orb
ficompl
add
xor
jb
push
dec
es
mov
aad
rol
loope
mov
pop
jp
mov
push
call
jno
adc
bound
enter
insl
or
mov
or
neg
arpl
dec
adc
stc
or
in
js
jae
mov
inc
and
adc
dec
jae
aad
fcoms
out
or
in
jmp
leave
divb
sti
out
adc
jge
hlt
jl
add
out
and
test
xchg
cmp
jo
push
xchg
idivl
lock
jns
imul
sbb
pusha
std
xor
mov
imul
mov
add
call
mov
or
and
jnp
push
sub
mull
aaa
test
ret
pop
push
iret
int3
std
adc
mov
js
or
mov
iret
cmp
mov
or
shrb
cmp
inc
mov
gs
pop
out
adc
ja
icebp
inc
mov
fstl
sbb
mov
movsb
sbb
adc
dec
scas
xor
xor
add
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
push
pusha
sbb
mov
faddl
lahf
mov
ret
in
cmc
and
mov
rcr
xchg
lods
lea
jns
pop
aaa
ljmp
xchg
mov
mov
fdivrs
inc
in
push
pop
aaa
xor
imul
ljmp
sub
rcr
loop
and
inc
xor
fwait
cld
xchg
das
xor
repz
mov
sahf
inc
cmc
fmull
repnz
or
push
jb
sub
xor
xor
push
test
adc
daa
mov
adc
cmp
repz
cmp
mov
pop
xchg
mov
xchg
push
sbb
in
outsl
cltd
mov
out
pop
xchg
mov
in
xchg
int3
dec
jle
lret
and
dec
mov
aam
in
push
pop
aaa
adc
in
lret
cmpsl
sub
jne
lock
faddl
xchg
push
pop
mulb
push
dec
inc
xor
cmp
jne
dec
pop
inc
xor
sub
sbb
aad
push
add
inc
lock
jno
sahf
xor
or
jb
sub
xor
dec
sub
movsb
or
cmp
cmc
out
call
neg
sbb
in
and
hlt
mov
hlt
xchg
icebp
push
lods
jge
shll
stc
sub
xor
push
cmp
arpl
ret
push
cmp
data16
inc
mov
outsb
xchg
fbstp
out
xlat
sub
rcl
sti
ftst
inc
imul
aaa
cmc
sbbl
ss
aaa
shrb
imul
ds
jle
or
sbb
mov
jnp
imul
aad
pop
das
pop
pop
leave
cmp
fcomi
popa
dec
cmpsb
out
sub
adc
les
inc
clc
fdivs
daa
cmpsb
xchg
daa
xor
movsl
cmp
imulb
movq
in
ret
adc
int3
roll
test
push
push
dec
pop
into
cmp
cli
stos
mov
xorl
add
hlt
sub
jne
jne
adc
xor
mov
std
sahf
mov
leave
repnz
fmul
cmp
dec
cmp
data16
loopne
inc
pop
xchg
clc
mov
add
cli
data16
or
jl
jb
fldcw
fcmovu
fimuls
mov
xor
fs
push
mov
ffree
sbb
mov
in
push
shll
cwtl
outsb
xchg
mov
lock
ss
xor
in
or
push
push
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
cmpb
movlps
sbb
ret
mov
lcall
in
ds
pop
int3
and
sahf
sbb
adc
js
nop
mov
jl
xchg
jg
push
sahf
sbb
cmp
cmc
mov
sbb
xchg
pop
lret
test
or
and
sub
sbb
hlt
fmul
adc
adc
repz
add
and
dec
ret
and
out
sbb
mov
pop
in
xor
mov
out
jecxz
sub
leave
test
push
xchg
adc
pop
lret
pop
inc
mov
push
or
popa
inc
in
sbb
aam
cwtl
and
rcr
pop
push
sti
push
imul
shrb
mov
lret
cwtl
ficoml
mov
xchg
push
popa
jno
inc
pop
inc
push
pushf
jae
movsl
shrb
cmp
cmp
mov
imul
pop
inc
xor
pop
push
mov
in
jl
sarb
ror
dec
mov
jp
lods
lods
jp
stos
outsl
and
aad
xor
gs
cmp
adc
sub
jmp
mov
cwtl
sub
repnz
sbb
push
dec
adc
mov
add
sub
test
push
sbb
jbe
mov
and
pop
bnd
jae
pop
fucomip
sbb
push
sbb
ret
enter
adc
xlat
xor
aad
push
pop
lahf
and
imul
mov
pop
ss
bound
mov
lds
sarl
insl
cs
js
mov
push
ja
ljmp
mov
xchg
inc
icebp
test
jb
or
aas
lcall
data16
lods
sub
bt
add
push
push
cmp
add
lods
loopne
pop
jge
xchg
loope
les
mov
rcrb
inc
pop
faddl
pop
dec
push
cmp
enter
mov
jb
cmp
shrl
jle
out
dec
in
add
dec
and
cltd
gs
repnz
inc
orb
fsubrs
mov
imul
mov
sub
sbb
pop
imul
dec
pop
xchg
orb
mov
push
cmp
and
or
pushf
movsl
shr
inc
mov
ret
decb
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
inc
js
push
sbb
adc
xorl
es
js
cld
aas
ficomps
mov
sub
xchg
test
fiaddl
adc
dec
cld
adc
or
test
jecxz
push
inc
jo
movsl
pop
inc
loope
imul
ja
jae
dec
lcall
inc
xchg
or
fildll
cs
lds
icebp
sub
leave
mov
in
test
ret
pusha
pop
rcrl
mov
ud2
shr
jne
mov
dec
mov
mov
ret
mov
jmp
xlat
and
mov
jg
sub
jg
mov
out
mov
je
lret
mov
push
mov
das
inc
aas
push
sub
add
cmp
sub
test
icebp
call
mov
inc
in
ret
mov
inc
mov
jo
adc
adc
clc
jle
pop
in
ljmp
push
lret
push
ss
jg
hlt
dec
loope
mov
ds
lock
adc
mov
adc
pop
pop
inc
push
adc
inc
jns
mov
popa
das
fisttpl
push
aaa
or
dec
inc
enter
mov
insl
jno
mov
add
push
mov
icebp
xchg
xchg
xchg
insl
repz
adc
sub
pop
jge
movsb
sti
stos
and
loopne
clc
lea
pop
and
xchg
xor
aad
mov
mov
bound
adc
xchg
mov
enter
fisttpl
and
jp
fnstsw
test
dec
cmp
inc
int
and
hlt
jmp
adc
imul
loop
inc
xchg
mov
push
cltd
push
mov
and
andb
loopne
negl
sbb
rolb
sbb
lret
std
sbb
xchg
mov
pop
xor
push
push
and
cmpsl
mov
jmp
ret
inc
mov
mov
mov
stos
roll
fst
lahf
inc
jae
call
shlb
sub
rolb
add
test
out
mov
sub
outsb
and
or
shr
sbb
jecxz
mov
addl
jbe
and
push
out
stos
xor
jbe
jns
and
out
mov
pop
aaa
fimuls
add
ds
addr16
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
cli
loopne
push
adc
adc
sub
sbb
add
add
sub
jle
sub
push
mov
gs
leave
mov
mov
pop
xor
mov
imul
adc
inc
iret
mov
cmp
jns
cmp
or
pop
sbb
and
bound
push
mov
das
add
js
adc
stos
jl
mov
leave
cwtl
jecxz
and
xchg
jns
out
int
jmp
incb
inc
jmp
ret
pop
sbb
lods
loopne
inc
push
inc
loop
sbbb
mov
aam
pop
shll
gs
mov
pusha
test
cmpsb
xchg
sub
push
cmp
addl
dec
lock
xor
cld
or
aam
test
jle
out
adc
iret
inc
scas
pushf
ud2
scas
pop
jecxz
fucomi
test
in
test
jecxz
push
lret
mov
hlt
mov
mov
mov
sbb
shrl
dec
sbb
inc
mov
test
xor
pop
idivl
inc
popf
icebp
hlt
aas
fidivs
jecxz
and
into
push
or
cmp
cltd
xchg
adc
aaa
inc
andps
movsl
and
faddl
dec
sbb
enter
inc
pop
pop
xchg
repz
add
add
ret
mov
cmp
push
enter
xor
ja
das
push
lahf
and
mov
adc
mov
adc
das
mov
dec
jge
dec
fs
nop
jb
mov
mov
inc
dec
sub
into
jo
jne
imul
push
sbb
popf
dec
xchg
rcr
inc
test
mov
mov
ljmp
fildll
xchg
sbb
loop
test
xor
add
dec
fdivr
inc
ja
addr16
push
scas
aam
inc
pop
sub
icebp
enter
and
mov
mov
mov
ljmp
fcompl
jno
mov
std
fadds
cmc
popf
es
call
cwtl
dec
jno
sti
inc
or
fstl
mov
jecxz
xor
adc
push
mov
dec
pop
inc
jno
and
mov
jle
outsb
bound
dec
mov
push
mov
lret
in
cmpsl
lock
out
ds
mov
sahf
add
cmpb
addl
lods
mov
popa
movsl
repz
mov
inc
pop
inc
and
imul
adc
push
and
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
push
ret
unpckhps
iret
movlps
push
loopne
imulb
xlat
xor
cs
jb
dec
dec
cmp
aad
ret
data16
mov
incb
cmp
xchg
movsb
cmp
movsl
lcall
ja
leave
mov
into
mov
jb
das
test
js
cmp
push
in
jge
mov
xor
cwtl
sub
ret
fidivs
and
dec
lahf
push
push
mov
and
lret
lds
cmpsl
mov
stos
stos
adc
and
lahf
adc
jns
bound
bound
or
jg
cltd
sbb
and
mov
enter
jg
xor
movsl
xchg
dec
std
pop
outsb
jb
and
shrl
out
mov
inc
or
inc
xlat
jecxz
cwtl
mov
mov
adc
imul
jns
xchg
mov
dec
or
mov
xor
aas
and
mull
jb
fwait
mov
cmp
inc
adc
push
les
bound
sbbl
adc
mov
pusha
gs
pusha
pop
push
lret
jmp
rolb
dec
adc
bound
add
push
or
nop
jae
push
nop
les
pusha
aas
dec
icebp
arpl
push
rcrb
mov
stos
lods
jp
sub
inc
out
int
fmull
loop
popa
out
xorl
hlt
sbb
popf
call
rorl
xchg
mov
in
jne
add
leave
stos
lock
aad
ror
adc
sbb
add
lret
shlb
xor
cmp
or
pop
pop
test
leave
stos
mov
mov
cwtl
dec
cmpl
mov
test
fistl
mov
das
out
cli
inc
cmc
adcl
lods
and
test
aam
mov
mov
addr16
pop
push
mov
mov
push
sbb
adc
data16
mov
je
mov
mov
cmp
xbegin
pop
xchg
and
arpl
pop
sti
sar
adc
adc
icebp
mov
jle
sub
dec
das
xchg
push
sbb
loope
mov
in
push
xor
rorl
mov
in
sub
xor
dec
push
sbb
call
or
or
jmp
dec
pop
imul
enter
pushf
lods
test
adc
divl
and
jnp
mov
das
fistps
push
out
stos
lcall
rcrb
push
lods
testl
sub
out
jl
fdivs
pop
adc
jb
subl
mov
out
mov
jae
lea
jmp
pusha
mull
inc
sbb
shlb
add
dec
out
jno
mov
popa
pop
cld
jge
mov
push
mov
xchg
inc
stos
ljmp
call
cltd
sbb
inc
outsb
xorb
jne
push
rcrb
pop
sahf
mov
bound
xchg
inc
xchg
imul
aas
xor
ss
hlt
ret
loop
xchg
andb
jo
stos
xchg
out
push
pop
adc
hlt
mov
mov
pushl
mov
test
sub
mov
inc
xchg
add
cs
cmpsb
test
or
push
pop
xor
xor
sti
mov
fisttps
add
in
add
mov
sbb
jo
push
inc
ja
push
iret
dec
xchg
imul
icebp
jle
ljmp
je
mov
cmp
clc
arpl
into
test
mov
js
cmp
cmpsl
pop
push
pushf
push
mov
test
adc
xchg
cmp
mov
add
clc
or
and
aad
inc
xchg
jecxz
leave
xor
or
cld
jne
hlt
mov
push
mov
stc
loop
fmull
push
add
outsl
fs
mov
pop
jl
xor
mov
stc
mov
nop
in
fnstcw
push
ja
rorl
gs
lahf
outsl
test
imulb
fnstenv
or
mov
stos
je
mov
xchg
aas
ret
push
inc
fists
sbb
mov
idivb
sub
fldl
outsl
gs
push
adcl
ror
pop
push
and
out
mov
sbb
jmp
mov
dec
lret
repnz
sbb
int3
jnp
lret
and
lea
jns
jl
and
cmp
sbb
bound
jnp
mov
pushf
push
cli
mov
iret
pop
in
fcoml
movsb
int
inc
xchg
loope
xchg
sahf
std
lea
push
xor
imul
insl
mov
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
dec
iret
aam
sub
xor
jle
dec
pop
insl
ret
lret
pop
int3
pushf
icebp
mov
lds
out
push
sub
imul
adc
pop
cmp
jecxz
dec
ud0
mov
adc
clc
jb
cmp
or
dec
gs
or
sbb
mov
mov
sti
loop
jecxz
cmp
xlat
pop
mov
bound
xorl
lds
bound
out
pushf
sar
jbe
scas
or
xor
xor
enter
ret
aaa
out
daa
test
pop
push
or
loope
jns
clc
pop
arpl
jmp
cltd
fwait
mov
scas
inc
jbe
leave
sub
pop
push
bound
push
pop
sbb
and
mov
xor
or
mov
push
fmuls
inc
out
pusha
mov
add
mov
add
bsr
jle
pusha
call
add
mov
inc
dec
or
adc
fld
sub
cmp
sbb
imulb
xchg
fsubl
push
aad
mov
ror
cs
cli
in
sbb
push
xor
rcrb
inc
jns
fucom
in
iret
loop
push
outsl
xchg
test
push
pop
test
xchg
jmp
mov
jnp
stos
movsb
repz
sub
int3
adc
jle
fsubs
adc
pushf
and
push
movsb
lods
push
loop
repz
jg
mov
adcb
int3
loope
pop
pusha
cli
or
fldcw
test
ficoml
sub
mov
sbbb
mov
jl
mov
orl
ficoml
out
push
movsb
mov
xchg
xchg
loopne
xor
fs
test
xlat
scas
sar
dec
in
sbb
jne
les
movsl
xlat
and
xor
int3
pop
jns
xor
cmc
clc
sub
or
mov
stos
test
loop
sbbl
mov
push
push
test
out
arpl
sbb
push
dec
popa
inc
jb
std
loop
out
mov
sbb
outsb
and
sub
push
adc
xacquire
mov
sbb
cmpsl
cmc
add
adc
fcompl
in
add
jae
xchg
push
pusha
pushf
xchg
mov
es
and
sar
pop
lcall
mov
xchg
ret
jnp
sbb
divl
adc
and
movsl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
xchg
pop
lods
cld
call
adc
xor
lods
arpl
in
fnstenv
adc
xchg
add
add
adc
mov
xchg
pusha
lods
faddl
into
xchg
in
sbb
mov
mov
inc
jne
add
dec
fsubrs
insl
test
add
flds
cltd
data16
sti
fmull
jo
xor
and
bound
shrb
pop
inc
mov
jb
popa
shll
and
imulb
mov
dec
dec
cwtl
add
sub
xchg
leave
inc
shll
dec
adc
jecxz
and
add
and
lahf
dec
or
fisubrl
jbe
mov
or
fiaddl
ja
pmulhuw
data16
repnz
mov
cltd
push
inc
push
xlat
orb
cmp
inc
add
popa
mov
adc
dec
push
xchg
out
add
sbb
hlt
push
add
mov
shll
dec
js
cmpsb
dec
loope
add
add
pop
shrl
xor
or
pop
pop
aaa
iret
jl
pop
cwtl
paddb
popa
je
sbb
orl
fs
shlb
mov
xchg
shll
push
xor
negl
jno
out
cmp
mov
mov
pop
loope
jb
lcall
push
aas
in
mov
sti
subb
xor
scas
mov
push
ss
cmpl
inc
mov
jmp
xchg
jecxz
xor
xor
jge
jl
push
pop
jecxz
popa
movsb
mov
int3
or
or
and
inc
jl
dec
xchg
add
cmp
or
scas
movsl
add
testb
rclb
or
mov
xchg
or
add
push
leave
xchg
testb
inc
mov
movb
jg
adc
cmp
aad
int3
push
outsb
push
dec
loop
movsl
dec
push
mov
nop
adc
push
loop
leave
sbb
outsb
imull
lea
pop
cs
mov
fs
outsl
mov
les
leave
out
pop
icebp
adc
mov
and
rcll
leave
test
and
dec
and
xor
or
add
dec
xchg
pusha
mov
popa
cmp
imull
flds
sub
lds
out
jns
jbe
std
scas
addb
imul
das
or
sub
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
out
stc
push
call
xor
jmp
mov
add
outsb
and
mov
inc
dec
mov
mov
mov
inc
popf
mov
pusha
pop
fwait
jl
cmp
repnz
or
dec
push
sti
fbstp
and
mov
jmp
addb
ret
mov
rcr
insb
sbb
leave
pop
sub
iret
dec
jle
adc
int
adc
mov
shll
fdiv
fimull
add
jne
or
movb
fs
push
sahf
mov
lods
mov
inc
mov
mov
fcmovbe
ljmp
xchg
int3
clc
inc
stc
jl
leave
mov
xor
xor
mov
mov
push
dec
movsl
lds
call
xor
in
loopne
movsl
fwait
mov
xor
int3
call
out
pop
repz
movsl
addl
push
add
xlat
jp
or
cmc
mov
inc
stos
adc
movsl
mov
mov
mulb
adcb
sbb
xor
or
push
icebp
ret
ret
xchg
fisttpl
aam
bound
add
xorl
sub
icebp
enter
daa
jp
ljmp
adc
or
stos
test
jno
ljmp
push
jo
push
xor
enter
push
or
dec
mov
xchg
cmpb
imul
sti
test
push
xlat
inc
mov
fiaddl
inc
mov
pop
lcall
jns
mov
or
int
rcll
aaa
decl
lea
mov
lcall
pop
cld
lods
dec
inc
mov
pop
jns
or
mov
int3
xchg
cltd
sub
popf
sub
sbb
inc
mov
mov
lods
and
aam
fisttpl
lds
push
mov
stos
cld
pop
ja
rcll
orb
imul
push
test
inc
cmc
scas
inc
out
and
mov
test
rclb
inc
pop
mov
stos
and
leave
lcall
mov
push
fwait
lods
stos
dec
dec
inc
cmp
adc
mov
or
rcrb
xlat
fwait
or
push
pusha
dec
clc
fdivp
ds
add
sbb
cmp
adc
inc
ljmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
scas
subl
adc
movlps
subb
sbb
fsubrs
pop
fidivrs
repz
pop
addr16
mov
sahf
stos
sbb
add
push
nop
out
jg
out
pop
and
mov
xor
pop
int3
les
xchg
repz
fs
arpl
int3
popl
popa
cmp
ficompl
xor
scas
mov
movsb
jge
inc
dec
adc
mov
push
add
and
add
clc
inc
insb
loop
repnz
and
mov
cmpsb
sbb
xor
xchg
inc
adc
mov
in
movsb
lea
outsl
mov
xlat
fsub
inc
loop
dec
mov
mov
ret
in
push
call
sub
shr
pop
jg
sahf
add
loope
int
mov
jae
mov
les
push
mull
sbb
jle
clc
jg
dec
and
cmp
sbb
or
in
movsl
add
pop
and
ljmp
addr16
mov
scas
jp
sub
inc
and
push
mov
out
add
int3
mov
dec
loop
out
enter
cmp
jno
mov
add
nop
fs
cld
or
sub
movsb
sub
mov
xor
sub
sti
jno
pop
mov
adc
sub
pushf
and
pop
loopne
fisttpll
mov
jge
daa
lahf
mul
adc
into
mov
mov
mov
mov
sub
rclb
inc
lcall
xor
cli
push
and
movsl
shl
pop
cltd
les
mov
negb
lret
cmpsb
pop
dec
je
sub
pop
mov
adc
pop
mov
cmc
repz
imul
mov
inc
les
push
push
pushf
lret
es
shl
push
pop
adc
jnp
stos
mov
pop
shl
inc
shrl
aam
jp
mov
sbb
mov
stos
popl
repz
cmp
or
fwait
out
loopne
popa
xchg
cmp
nop
dec
xchg
and
jg
sub
insl
pop
xchg
adc
jno
stos
adc
ret
dec
mov
icebp
sub
fbstp
sti
adc
stc
pop
cmp
test
xchg
and
mov
and
test
pop
sub
xchg
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
push
or
iret
movlps
lahf
test
push
fs
mov
jge
mov
lret
repnz
ficomps
mov
push
or
cmp
add
dec
sahf
add
adc
mov
sarb
cld
xor
in
aas
imul
jbe
mov
adc
cmc
adc
mov
scas
dec
imul
popf
cld
xchg
insb
call
mov
xchg
add
sbb
je
dec
jl
fimull
cmp
sbb
dec
xchg
mov
mov
dec
divb
adc
popf
pop
pushf
ffree
jae
pusha
ret
in
imull
jle
fcoms
in
and
fstp
adcb
subb
mov
imul
ds
in
jge
cli
inc
arpl
bound
pop
imul
jbe
mov
adc
add
ds
stos
sbb
aad
js
xchg
xchg
push
dec
adc
jbe
jge
fisttps
mov
pop
or
mov
mov
mov
leave
mov
push
lods
out
or
data16
and
push
inc
mov
sbb
fisttpll
lods
je
out
in
jo
inc
push
mov
mov
add
mov
jg
movsb
dec
js
out
or
mov
fwait
bound
pop
adc
les
push
fs
roll
aam
xchg
sub
cmc
out
dec
ja
and
cmpsb
cmpb
js
and
jns
out
fchs
jo
in
pop
adc
sub
ds
ret
jno
push
test
mul
push
mov
pushf
pop
push
lods
call
mov
movsb
loop
repz
push
mov
scas
test
rclb
or
cmp
aas
push
or
call
cli
xlat
adc
and
sbb
hlt
addb
xor
test
sub
aaa
mov
rol
push
imul
xor
adc
rcll
les
pop
push
imul
imul
mov
leave
xchg
xchg
aaa
arpl
cmpsl
fiadds
int
sub
mov
mov
xchg
pop
out
ds
jg
mov
dec
mov
shl
sub
scas
dec
jp
push
daa
dec
inc
jno
lahf
pushf
repnz
cmpsb
pop
mov
frstor
loopne
jb
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
push
and
in
adc
adc
fcmovu
pop
add
in
dec
push
xchg
cmp
das
add
and
xor
inc
arpl
jae
xor
xor
pop
mov
cmp
sysret
lret
pop
fistpll
cmp
jnp
push
stos
add
ss
outsl
mov
xchg
mov
pop
xchg
cmp
push
jmp
or
dec
jecxz
and
sbb
adc
jg
scas
jle
call
mov
mov
ret
push
lods
pop
inc
icebp
ret
and
sbb
pop
popf
fadds
push
lock
pop
loope
xlat
fmull
inc
ret
push
fsubrl
lea
mov
or
push
add
inc
push
or
add
adc
movb
pop
xchg
mov
xor
addr16
or
sub
sbb
or
ret
pop
mov
mov
push
and
insl
pop
jb
rorb
sbbl
subb
das
xchg
push
loopne
jp
xor
mov
mov
cmp
mov
arpl
lea
add
adc
inc
mov
popa
xchg
pop
or
xor
call
faddp
xor
aas
lahf
jne
mov
sub
sub
rsm
pop
jne
sub
dec
xchg
jge
jg
mov
lds
stc
pop
inc
sti
in
cmc
xchg
imul
dec
sti
cmpsl
jns
shl
add
das
in
es
xor
leave
jne
enter
pop
add
lds
push
fisubrs
or
xchg
cmp
and
sbb
push
push
cmpsl
and
stos
cmp
adc
repnz
adc
insl
sbb
mov
scas
jp
out
inc
loopne
iret
cld
pop
loope
fdivrp
addl
out
gs
int3
mov
and
vpmullw
leave
rcr
scas
jb
and
jne
ret
insl
jg
pop
pop
mov
sub
sub
sbb
fildll
js
cmp
inc
fnsave
insb
inc
clc
jl
popa
fsubrs
mov
cmpb
notl
push
xor
push
or
ret
xlat
xchg
push
push
out
xor
clc
jne
pop
xchg
cs
adc
cmpb
push
shrl
fwait
jmp
push
sar
jg
imul
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
add
movb
test
imul
xor
push
add
xchg
into
fcmovnb
jecxz
sbb
push
loopne
add
xchg
and
mov
insl
test
add
mov
lods
movsl
mov
sti
or
jns
and
cmp
out
pop
dec
xchg
push
adc
sbb
add
mov
sub
enter
shll
inc
sub
outsb
push
in
into
in
cmp
dec
mov
pop
mov
lea
loop
divl
cld
cltd
mov
test
fnstsw
mov
mov
addl
push
test
cmp
out
sahf
push
or
ret
xor
in
sbb
std
mov
or
add
push
imul
adc
push
jb
mov
dec
xchg
jl
ss
nop
lock
cwtl
push
pop
mov
xor
addb
sbb
enter
pop
sub
in
jge
bound
loopnew
push
lahf
mov
ljmp
push
cmp
mov
shll
jno
fidivl
inc
and
into
mov
int
inc
int3
gs
call
ret
mov
or
leave
xlat
icebp
outsb
lcall
jo
into
cmc
sub
push
loopne
loopne
lods
sarb
dec
stos
lcall
sti
lods
xchg
data16
js
dec
movsl
sbb
push
push
adc
sti
mov
push
ja
mov
jle
jl
xchg
rorb
add
mov
adc
popf
and
insl
push
jbe
jp
std
sbb
xlat
cs
aaa
xlat
out
ret
xchg
push
lret
mov
in
mov
adc
push
data16
mov
cltd
pop
inc
dec
ds
cli
pop
xchg
mov
das
pushf
adc
jle
rclb
add
test
pop
dec
jbe
int
cmc
test
iret
adc
add
testl
les
dec
and
xor
arpl
jno
and
or
push
push
sub
cmp
ljmp
cmpsb
adc
jg
fdivrs
mov
ja
and
fstps
xchg
jmp
jp
loope
push
jbe
dec
mov
xchg
outsb
popf
insl
pushf
mov
cmp
mov
mov
iret
outsb
mov
mov
xchg
sub
pop
lret
jne
les
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
jl
fs
adc
movlps
mov
das
mov
jle
popf
jne
mov
mov
fsts
movsb
rcll
mov
adc
sbb
mov
adc
fwait
xor
ret
lcall
insb
push
mov
movsb
jo
pop
pushf
clc
xchg
sbb
call
mov
imull
dec
inc
mov
xchg
cld
cmp
mov
loop
lret
mov
xor
fs
imull
fidivrs
std
call
insl
mov
adc
push
outsl
fimuls
adc
mov
add
pause
sti
ds
js
dec
xchg
fnstcw
ja
mov
imul
scas
dec
inc
xor
test
cltd
enter
xor
repz
sbb
jg
popf
outsl
dec
push
xor
das
push
mov
pusha
popa
xchg
jp
jno
push
arpl
cmovne
fisubrs
sbb
hlt
jne
addl
idiv
ss
push
fists
inc
or
inc
popa
rcrb
adc
pop
cmp
sahf
dec
inc
mov
div
sahf
subl
test
xor
add
popa
push
nop
sti
xchg
mov
lea
dec
pop
and
js
push
mov
jns
mov
outsb
mov
sub
mov
lea
xchg
xor
fisubl
insl
adc
jno
or
mov
add
loope
decl
push
sub
fcmove
data16
rcll
xchg
lcall
cmp
sub
sub
cwtl
inc
inc
dec
add
push
mov
ljmp
in
jo
pop
fidivs
rolb
add
in
lret
inc
icebp
push
stos
mov
scas
xchg
notl
pop
cmpsl
xor
stos
icebp
pusha
call
xor
scas
lret
lret
add
call
insl
stos
or
repz
inc
jnp
pop
dec
in
imul
push
int3
out
xchg
xor
cmp
sarb
hlt
daa
and
adc
stos
divl
sub
lcallw
push
aas
dec
ret
pusha
sahf
test
fstpl
mov
test
jae
add
jb
icebp
push
inc
mov
add
js
cmc
je
xchg
std
movsb
xor
dec
imul
sub
inc
sub
int
incb
scas
mov
xchg
addb
jo
cmp
push
outsb
out
sub
push
fisubrl
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
scas
sub
fcoml
adc
fsubrl
xchg
repnz
lods
mov
xchg
xor
add
xchg
sub
cmc
mov
orb
daa
sbb
sub
sbb
sahf
adc
push
es
dec
xchg
sbb
sarb
leave
outsb
jne
repnz
add
xchg
fwait
rorb
test
pop
popf
nop
mov
stos
mov
arpl
push
aaa
lods
mov
test
xor
mov
mov
outsb
les
faddl
add
pusha
orl
aas
push
movsb
push
xchg
fwait
and
outsb
adc
jmp
repz
arpl
or
out
aaa
inc
sub
and
xchg
bswap
xor
mov
loope
or
adc
test
in
into
or
mov
aas
sbb
jmp
pushf
sub
cmp
xchg
pop
adc
and
loopne
push
xlat
sbb
sbb
divb
inc
imul
out
lahf
inc
mov
negl
or
lret
jbe
lea
push
imul
jl
mov
jnp
pop
ljmp
dec
mov
ljmp
loope
test
or
pop
icebp
mov
mov
daa
fcmovbe
outsl
cmp
fsub
or
adc
cld
pusha
mov
out
loopne
inc
cwtl
cmp
iret
adc
arpl
mov
sub
mov
ja
mov
lds
arpl
or
mov
inc
push
fmul
mov
ja
aas
mov
mov
das
inc
movsl
fistps
pop
mov
and
arpl
adc
or
push
push
data16
fs
cmp
jnp
data16
pop
jbe
or
in
add
pop
fnstsw
sahf
xor
mov
mov
sbb
xor
scas
cli
cltd
lret
test
popa
repnz
xchg
rclb
mov
iret
push
clc
mov
js
cmp
push
add
rcll
imul
gs
test
fwait
add
inc
fnstsw
push
pop
dec
loope
adc
add
je
mov
sarb
test
sub
dec
lea
sahf
subb
push
inc
outsl
int
loope
dec
pop
cmc
jb
inc
int
notb
mov
inc
push
mov
mov
xchg
test
test
xor
rolb
xchg
push
pop
gs
push
jp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
into
sbb
iret
movlps
mov
imul
das
movsl
xchg
jb
push
fs
repnz
out
mov
faddl
clc
jnp
mov
xor
inc
scas
xor
sbb
mov
cmpsl
aas
aad
add
pop
cmpsb
int
sti
inc
sub
mov
lret
lods
stos
sbb
or
divb
icebp
pop
mov
ret
lret
shl
imul
popa
sbb
ret
adc
xor
dec
and
cld
jb
out
mov
or
push
scas
jecxz
push
dec
mov
mov
lret
lret
adc
movsb
stos
iret
push
lret
les
adc
bound
add
push
ret
test
out
sub
push
mov
lret
ss
dec
inc
nop
jae
insb
int3
push
push
lret
jmp
jmp
adc
aad
and
orb
pop
jmp
pop
rcll
filds
xchg
ret
xor
dec
int
in
or
test
cmp
mov
pop
cld
int3
jmp
ljmp
sbb
stos
or
mov
mov
stc
xchg
or
mov
das
xchg
pop
dec
add
cmp
jmp
sbb
sub
mov
ss
ja
sub
cmpsb
sti
imul
push
mov
lahf
ljmp
add
fbstp
not
pop
push
mov
lret
mov
mov
cmpb
sub
ss
jo
push
push
xchg
push
mov
call
push
pusha
jle
cmpsl
test
pop
jmp
dec
mov
push
ret
js
mov
cmp
inc
dec
push
test
cwtl
aad
inc
fcoms
ds
rcl
fidivl
adc
shrb
out
movsl
dec
imul
ret
sbb
leave
sbb
sbb
scas
out
jns
pop
and
cmp
lea
ficomps
es
xchg
shrl
xchg
and
xchg
pop
jnp
test
ret
cs
daa
fmuls
and
jle
mov
xor
int3
jbe
push
pop
jo
es
std
lea
push
nop
mov
repz
mov
pop
jo
in
dec
idivb
rorb
sti
iret
popf
or
mov
xor
call
inc
out
mov
pushf
cltd
cmp
sbb
add
jmp
ret
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
insb
cwtl
rclb
adc
test
push
mov
js
jbe
push
pop
jmp
test
lds
cmp
jns
sahf
mov
frstor
inc
or
ljmp
outsb
mov
mov
scas
mov
jecxz
mov
sub
flds
xor
pop
cmp
cmp
ret
xchg
jle
add
adc
push
jge
cmpsl
and
inc
pop
add
inc
pop
add
and
inc
mov
out
lcall
sub
mov
stos
je
leave
inc
aaa
adc
fucomi
test
and
push
jbe
and
aas
sbb
push
andb
jg
mov
or
xchg
push
xchg
pop
adc
mov
ja
push
push
pop
cmpsl
imul
scas
cmp
pop
or
xchg
cltd
lret
or
shr
das
xchg
lods
movsl
jo
in
adc
sub
jmp
push
sub
adc
lea
mov
into
cmp
sbb
iret
cltd
dec
push
add
scas
add
out
pop
xlat
inc
jae
jae
push
mov
push
pop
leave
jg
idivl
aam
sbb
popf
es
mov
and
pushf
jle
or
dec
cwtl
dec
sti
iret
inc
addr16
adc
das
jp
pop
lea
je
lret
mov
or
imul
arpl
das
fmuls
add
cmpsl
out
test
movsb
icebp
cmpsb
push
xor
push
incl
dec
xchg
xorl
push
ficoms
shlb
mov
sahf
push
cmpsb
xchg
icebp
jns
add
jl
scas
inc
pop
pusha
sub
andl
mov
das
xor
dec
and
mov
mov
xchg
mov
dec
cmp
jecxz
lods
mov
jo
cmp
adc
cmpsl
repnz
ja
aaa
movsb
int3
pop
js
sub
jo
scas
push
stos
cmp
ljmp
or
scas
mov
in
xchg
sub
ret
stc
dec
das
cmp
mov
adc
out
scas
stos
in
hlt
pop
sti
pop
xchg
cmp
and
test
addl
cld
xor
int3
fisttpll
daa
cwtl
jns
mov
fs
mov
mov
dec
lock
fwait
push
mov
cmp
xor
out
push
push
pop
mov
pop
xchg
mov
dec
jl
aam
scas
mov
sbb
push
mov
ror
movsb
mov
out
and
in
dec
xor
pushf
jl
orl
outsb
xchg
outsl
sbb
sahf
jnp
jbe
out
frstor
pop
inc
jb
and
loopne
bound
iret
adc
mov
jae
shlb
test
add
cmp
gs
fsubrl
bound
mov
hlt
cmp
adc
pop
out
pop
jo
int
pop
add
scas
mov
int
xor
mov
xchg
es
lods
shl
pop
sub
inc
adc
cmp
jne
ljmp
jle
mov
or
dec
fisubs
ds
out
push
mov
jge
aas
and
popf
xor
mov
mov
int
and
mov
imul
jg
mov
movsb
dec
jns
mov
maskmovq
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
sbb
das
into
adc
adc
mov
loope
push
arpl
stc
push
out
xchg
xchg
mov
test
pop
sub
mov
fistps
mov
scas
mov
sbb
aaa
jmp
push
loope
ficomps
int3
xchg
and
push
aas
dec
cmc
or
push
pop
fwait
inc
xor
adc
ficomps
mov
test
subl
mov
push
push
rcrb
inc
js
adc
sbb
loopne
ret
adc
lods
and
enter
and
pop
das
ljmp
idiv
in
call
inc
arpl
movsb
push
scas
mov
out
add
cmp
clc
mov
aam
add
stc
mov
imul
mov
push
daa
or
adc
push
mov
dec
js
pushf
lods
xchg
mov
xchg
cmp
cmp
jne
test
jp
in
clc
or
cs
pop
icebp
das
call
jae
dec
inc
nop
dec
xchg
xor
cmc
test
notb
pop
pop
aam
xor
sub
repnz
push
out
dec
xor
mov
or
arpl
adc
lahf
mov
mov
add
push
sub
push
int3
pusha
sub
jnp
testl
stc
dec
push
incl
pop
lock
push
aaa
stc
sbb
out
mov
pop
and
xchg
pop
data16
lret
add
cmp
in
cwtl
ds
and
pop
xchg
out
fstl
lahf
jl
push
and
lock
sbb
cs
repnz
mov
loope
and
lea
mov
in
pushf
push
mov
lret
arpl
imul
xchg
pushl
call
and
jns
ficompl
jmp
int
adc
and
sbb
je
xor
mov
lock
fisubrl
push
mov
mov
outsb
dec
movsl
les
mov
mov
dec
insb
js
out
add
movsb
imul
outsl
into
test
je
mulb
sti
inc
mov
mov
and
mov
lods
pop
pop
inc
outsb
fdivr
fdivrl
cld
pop
enter
adc
cmpsb
sbb
hlt
pop
addr16
cmp
fstpl
popa
mov
xchg
in
mov
push
push
aaa
sub
pushf
mov
frstor
xor
lahf
scas
or
pop
int
lds
xchg
dec
xor
arpl
scas
int3
imul
xchg
jecxz
mov
lret
push
les
loopne
xchg
or
ret
mov
adc
and
xchg
fnsave
mov
ret
aad
sbb
out
sub
cltd
aaa
sbb
cs
cmp
mov
sub
icebp
insl
mov
sub
call
imul
decl
ja
lods
inc
popl
popf
popf
cmp
pop
pop
loop
add
add
and
pop
icebp
rclb
fnsave
mov
xchg
push
adc
lcall
and
or
pop
push
push
jp
mull
inc
xchg
fisubrs
jl
fildl
mov
xor
lret
cmp
jg
sbb
pop
aad
dec
jno
sbb
int
jns
clc
push
push
mov
mov
sbb
push
sub
inc
outsb
stos
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
and
sbb
mov
cmp
mov
mov
jg
xlat
loope
fwait
cld
push
push
mov
xchg
jge
outsl
stc
outsl
arpl
fcomps
mov
mov
jae
xchg
hlt
and
out
leave
cwtl
leave
jo
out
hlt
xor
out
mov
add
push
pop
jbe
dec
cmp
jne
icebp
cmp
dec
scas
push
scas
cmp
jns
adcl
loope
shll
add
xchg
movsb
mov
aam
negl
jno
add
stos
or
dec
jae
movsl
add
or
or
jecxz
ret
sbbb
inc
mov
bound
and
sbb
decl
cmc
lods
pop
add
pop
jecxz
in
das
aas
fcomip
lock
cmp
and
js
mov
leave
mov
push
push
xchg
push
dec
movsl
scas
pop
in
mov
pushf
dec
dec
inc
jbe
xchg
push
movsb
push
ds
ljmp
adc
jnp
aad
inc
das
xchg
hlt
push
pusha
push
mov
js
in
jb
xchg
lcall
pop
out
sbbb
movd
icebp
push
aam
mov
or
fs
add
test
neg
ret
cmp
xchg
xor
jnp
dec
xor
imul
mov
jp
xor
push
sub
mov
mov
inc
xor
aam
mov
jecxz
inc
fstpt
dec
adc
insb
int3
out
sbb
push
add
cwtl
push
jo
scas
stos
aam
mov
popf
lods
pop
fnstcw
cmpsb
cs
inc
inc
cwtl
sub
mov
scas
das
lret
leave
push
xor
sbb
sbb
cli
inc
enter
test
mov
mov
sub
in
pushf
xchg
and
mov
cmp
insb
fsubs
mov
adc
pushf
repnz
pop
sub
enter
out
dec
arpl
sbb
or
nop
outsl
mov
int
push
pop
mov
adc
mov
pop
popf
xor
sub
push
mov
mov
xor
jbe
adc
ret
push
jle
icebp
movsl
cmp
cli
bound
lea
dec
inc
mov
mov
dec
outsb
enter
xchg
aam
mov
lret
lock
dec
inc
ja
loopne
cmp
out
push
mov
pop
jae
in
adcb
jae
imulb
andb
inc
jmp
js
dec
push
jbe
gs
add
jno
add
scas
and
andb
cmp
aaa
movsl
adc
cmp
icebp
jae
lret
and
jp
or
sub
in
cmpb
out
cmp
sub
sti
out
int3
int3
mov
dec
inc
aad
lret
pmulhw
cld
pop
mov
das
jle
sbb
std
data16
mov
jecxz
jo
xlat
or
jno
adc
cmp
push
sub
and
and
addb
shl
sbb
fcmovnbe
mov
dec
in
xchg
sti
adcl
repnz
in
insl
lcall
jnp
push
icebp
mov
sbb
lret
insb
sub
int3
arpl
xchg
clc
lds
push
leave
jno
sbb
adc
lods
lahf
or
mov
add
icebp
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
into
test
stos
adc
adc
add
pop
ss
mov
clc
ret
pop
xor
jne
pushf
sub
adc
mov
data16
and
push
add
movsb
mov
or
insb
mov
js
mov
push
or
xor
cmp
out
inc
mov
dec
adc
add
xchg
dec
cmp
subb
fstp
xchg
cmp
pop
jg
dec
add
pop
hlt
pop
or
movsl
sub
movsl
jne
push
sti
sub
dec
xor
cmp
in
pop
sub
inc
hlt
je
adc
inc
pusha
adc
inc
les
dec
fxch
out
jnp
xchg
ficoms
mov
call
aad
lods
popf
or
mov
cltd
subb
fs
shl
imul
nop
mov
inc
negb
pop
pop
and
pop
imul
jp
and
cmp
ret
mov
mov
dec
imul
mov
popa
xchg
xchg
mov
stos
addl
jmp
dec
in
mov
div
movsb
push
ljmp
jl
cmpsb
jne
adc
xor
andb
mov
sti
js
imul
movsb
ljmp
nop
test
add
jbe
fstpt
add
push
pop
push
xor
xor
lcall
leave
mov
ja
jne
push
push
jmp
add
popa
push
int3
lret
ss
cmp
cmp
sub
lret
push
dec
pop
jle
jecxz
or
out
inc
sub
or
iret
add
sub
jge,pt
clc
mov
inc
iret
sub
ljmp
mov
stc
adc
inc
mov
xchg
pop
call
lahf
mov
test
lcall
jbe
sub
adc
mov
into
inc
orb
int3
sbb
xchg
icebp
je
dec
jmp
in
repnz
sti
out
out
sbb
jo
push
push
pop
das
jecxz
xor
push
mov
sbb
adc
nop
rorb
mov
aas
sub
aas
sbb
nop
rcrl
mov
and
pop
inc
les
fdivs
test
inc
cmp
std
jl
mov
shr
push
testb
das
pushf
aad
jbe
sti
xchg
xchg
push
fldl
adc
outsl
cmpsb
iret
xor
cld
or
bound
loop
fcmovnb
lock
adc
and
es
lds
dec
lahf
add
shl
adc
dec
loop
or
sbb
add
add
rolb
std
mov
lahf
in
xchg
xchg
push
push
inc
stc
xor
fs
shr
xor
mov
xlat
mov
or
sbb
mov
leave
dec
or
pop
ficoml
push
adc
cltd
out
or
mov
xchg
in
stos
rcll
mov
cli
cmp
xchg
mov
out
inc
jp
add
into
data16
jno
fcmovnu
mov
xor
xor
cmp
xor
test
pop
jo
fidivrs
fildll
test
aas
add
jp
mov
movsb
repz
sbb
enter
enter
mov
icebp
ret
std
inc
jmp
xor
mov
inc
push
icebp
lahf
cmp
testl
fildl
outsb
cmp
or
xchg
xchg
and
jle
popa
mov
decb
and
inc
or
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
pop
add
or
js
or
test
into
mov
mov
dec
dec
and
mov
sub
or
adc
stc
cmc
scas
pop
imul
adc
or
dec
push
jbe
pop
fistpll
sub
mov
pop
popa
ja
cmp
sub
bound
and
adc
pop
shll
aam
js
push
xchg
aad
out
and
xchg
test
pop
jmp
pop
dec
xor
in
push
cmc
loopne
loop
inc
xor
repnz
stc
sar
mov
jbe
in
jne
sti
sbb
jnp
out
or
jmp
jmp
mov
inc
ret
adc
cmc
out
mov
pushw
imul
and
push
sbb
dec
cltd
mov
stc
mov
pop
inc
or
stos
mov
adc
mov
dec
clc
push
pop
jo
add
test
dec
and
out
cmp
fdivl
ja
or
inc
xchg
mov
mov
inc
jb
fucomi
pop
pop
cmp
sub
or
sti
notl
add
mov
cmp
daa
in
pop
stc
xchg
pop
mov
clc
scas
test
std
in
enter
fsubrl
or
addl
insl
fmul
adc
cmp
dec
mov
loope
outsb
rorl
out
and
mov
xchg
dec
jp
test
push
mov
out
fdivrl
dec
sub
jle
and
lret
fstpt
xor
test
cmp
mov
sub
hlt
and
ud0
out
imul
in
pusha
cmpsb
aas
imul
mov
sbb
fucomp
fwait
or
gs
mov
je
popf
fadd
test
add
pop
sub
and
sbb
dec
xchg
xchg
sbb
movsb
jle
sahf
idivb
inc
rorb
or
in
loopne
shlb
rorb
imul
rcrb
lret
push
out
mov
mov
add
out
notb
adc
jl
vunpckhps
fldcw
xchg
mov
jo
aam
fiaddl
outsl
or
inc
filds
rcrb
js
cmpsl
adc
xor
cld
fs
nop
insb
jb
ret
shlb
loop
and
jno
lods
out
mov
mov
in
stc
cs
ss
je
xor
lret
add
push
mov
pop
bound
xchg
xor
inc
xor
lods
loop
faddl
imul
aad
test
lcall
lea
mov
arpl
lock
std
jmp
xchg
orb
out
dec
std
out
cs
and
jns
cltd
stos
inc
aad
filds
push
pop
pop
lea
jne
repnz
and
test
icebp
inc
jecxz
push
mov
daa
mov
jp
ret
dec
jnp
jmp
mov
jecxz
insl
shlb
ret
push
adc
xlat
dec
ret
jae
jmp
icebp
lcall
mov
mov
sahf
ret
xor
nop
lods
idivl
fwait
subb
sub
xchg
ret
xchg
cs
jecxz
or
out
mov
lret
mov
test
mov
int
roll
subb
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
inc
lock
stos
adc
adc
mov
je,pt
push
inc
out
aas
inc
rcr
add
adc
dec
outsl
lock
push
sar
shrl
xor
mov
repz
add
pop
jl
dec
pop
xor
jne
dec
jns
inc
and
lret
pop
repnz
incb
enter
lcall
sbb
rcrl
push
adc
and
out
sbb
push
push
cmp
push
dec
lret
sbb
and
push
xor
test
lret
cmp
test
dec
push
or
cld
adc
leave
cmp
sub
mov
sahf
dec
pop
or
cli
or
addb
and
inc
pop
pushf
jmp
popa
push
jno
ret
jno
pop
fprem
xor
in
jle
iret
add
into
fldenv
push
popa
inc
push
sub
in
in
stos
mov
inc
xchg
sbb
jmp
data16
jne
mov
mov
dec
jns
inc
and
nop
inc
push
push
mov
inc
stos
cs
fwait
mov
hlt
test
inc
lock
pop
mov
and
or
jae
call
sahf
inc
pop
ret
rclb
or
adc
dec
xor
mov
jmp
insl
mov
mov
dec
aaa
ss
jl
xchg
outsl
mov
repnz
cli
scas
add
andb
movsb
mov
dec
mov
xor
cs
out
ret
mov
cmpsl
jb
push
aas
ror
push
movsb
cmovle
cmp
mov
add
cld
rorb
fucomip
mov
mov
inc
dec
data16
ds
popa
push
out
adc
pop
jg
mov
je
inc
out
iret
or
fld
jae
sbb
and
movsl
iret
iret
lret
mov
mov
pushf
test
push
out
mov
in
pop
add
fsts
xchg
and
mov
pop
repnz
cmp
aas
pop
mov
inc
aaa
push
or
cmc
push
scas
jae
dec
stc
xchg
out
add
inc
lods
enter
pop
not
add
mov
cmc
mov
sti
mov
cmpb
sbb
cs
push
cltd
mov
adc
sti
into
xor
sub
das
aaa
stos
adc
fnstenv
dec
push
and
sbb
jnp
push
insl
cmpsb
push
mov
fs
into
push
mov
mov
jne
add
dec
dec
add
inc
enter
push
sbb
out
js
mov
xor
test
imul
dec
loope
in
mov
mulb
das
xchg
enter
test
or
inc
push
mov
jecxz
xchg
ss
cmp
dec
repz
push
cmp
mov
call
mov
push
mov
arpl
mov
adc
jno
movsl
lods
push
int3
xlat
aam
mulb
jae
loope
xor
fcmove
cli
xchg
cmp
sbb
movsl
in
mov
test
in
gs
xor
mov
jge
rorl
aas
lds
dec
fldcw
jp
adc
mov
inc
js
sti
xchg
sub
xor
rcl
ret
addl
rorb
test
sti
test
sub
mov
enter
pop
mov
and
movsb
decl
pushl
xor
jmp
or
mov
mov
mov
xchg
or
adc
mov
and
inc
scas
add
xchg
notb
sahf
cwtl
dec
je
test
jge
sar
push
add
adc
stc
int3
mov
js
inc
xchg
mov
stc
cli
in
data16
cwtl
fwait
and
inc
and
ljmp
orl
ss
dec
ljmp
or
mov
sub
and
bnd
inc
pushf
inc
dec
or
mov
jae
test
cmovp
imul
inc
push
sub
sbb
mov
sub
stos
pop
test
sub
jecxz
call
arpl
jp
movsb
les
push
inc
gs
mov
test
enter
enter
dec
push
adcl
pop
popa
add
incl
dec
mov
cmp
into
xchg
or
jne
or
pop
sub
xchg
lock
xchg
adcl
fwait
pop
cmpsl
into
test
pop
xchg
xor
out
jne
push
and
cld
pop
ret
jnp
sub
xchg
out
mov
inc
data16
sub
xor
imul
stc
ljmp
in
addr16
mov
mov
dec
call
mov
push
lods
iret
mov
enter
mov
call
sub
mov
dec
cs
shlb
dec
cmpsb
xchg
sbb
or
leave
es
fldenv
dec
mov
cltd
int
and
mov
add
je
mul
cmp
out
dec
sahf
or
imul
fwait
mov
sarl
mov
or
pop
mov
jle
xor
pop
inc
dec
jle
adc
mov
mov
aad
lcall
dec
mov
push
fdivp
stos
xor
test
test
repz
mov
dec
inc
in
xlat
cmp
inc
insl
insb
adc
pop
test
pop
pop
iret
cmpsb
push
dec
add
idivb
fneni(8087
cmp
xor
mov
dec
push
add
mov
in
stos
xchg
xor
jl
push
in
cmc
push
setl
sub
mov
or
xor
fwait
or
mov
xor
add
pop
repnz
mov
jnp
pop
lock
loopew
lods
das
das
dec
cwtl
repnz
jmp
subl
jb
mov
repz
push
xchg
into
and
std
or
iret
mov
fsubs
or
adc
test
dec
add
ret
into
in
int
mov
or
in
imul
ret
ja
adc
inc
scas
jecxz
push
pop
pop
mov
psubsw
dec
leave
xchg
cwtl
shl
push
pop
lock
sbb
testb
cmp
sub
push
shll
sub
xchg
clc
int
hlt
adc
packsswb
or
sub
cmc
nop
mov
pushf
cmp
dec
mov
scas
into
cwtl
sbb
hlt
rorb
jo
xchg
rclb
rcll
dec
cltd
mov
xor
ret
inc
xlat
pop
ds
test
or
test
cld
pop
xor
jge
lods
movsl
pop
jle
inc
icebp
sub
mov
ja
or
mov
mulb
cs
call
mov
mov
mov
mov
xor
jmp
movl
ds
mov
mov
stos
adc
adc
inc
ljmp
das
mov
in
lahf
pop
adc
push
mov
insl
mov
ret
and
andl
pusha
sub
or
and
test
jle
and
adc
call
and
fcoms
xor
inc
xor
push
sbb
add
jne
dec
push
clc
or
inc
test
and
ss
push
pop
xchg
je
ret
xlat
xchg
shll
out
jp
pusha
cmp
das
fsubl
mov
ret
mov
xchg
and
stos
xchg
cs
mov
adc
pop
mov
sub
inc
jbe
push
lds
push
repz
xor
sub
imul
jmp
sub
xchg
pop
push
pop
mov
scas
adc
aam
dec
mov
mov
or
imul
sbb
jns
push
mov
outsb
xchg
das
adc
loopne
out
dec
cs
add
cwtl
push
jecxz
ret
cmpsb
xchg
pop
add
jnp
dec
mov
jno
int3
fldcw
pop
std
lret
xchg
cmp
mov
lret
lods
gs
xor
jnp
jge
fiadds
adc
jae
push
pop
or
mov
test
test
icebp
iret
insl
inc
mov
mov
lds
push
xchg
xor
gs
sub
enter
in
jmp
mov
xor
fiaddl
lahf
or
repnz
stos
popf
pop
inc
popf
inc
xchg
push
rorl
inc
fsts
ds
ss
flds
inc
jbe
movb
orl
out
xchg
mov
jg
ds
xchg
cmp
repnz
addl
cld
cmp
add
cmp
scas
popf
and
fsubl
sbb
leave
and
dec
fbld
inc
xor
adc
dec
cli
data16
cmp
xchg
aad
lods
fldl
outsb
jnp
xor
orl
jne
hlt
push
mov
mov
inc
or
int3
addb
push
jp
add
roll
lock
mov
dec
adc
mov
subl
xchg
mov
shll
negb
ror
add
dec
lcall
jle
fistl
or
mov
xor
scas
ja
in
ret
mov
jb
xchg
pushf
mov
mov
into
cmp
fiaddl
addb
xlat
xchg
push
popf
xor
ret
and
leave
pop
ficoml
int
mov
and
add
cmp
nop
sbb
xchg
add
adc
lods
lret
jnp
xor
push
scas
push
imul
fsubrs
repz
out
or
cmp
inc
in
pop
and
mov
dec
scas
repnz
ret
cs
sbb
aad
fmul
pop
in
xor
insb
sbb
out
jmp
data16
into
push
lods
push
xor
xchg
and
movsb
fbld
stos
out
sbb
xor
pop
movsb
lods
bound
and
mov
sbb
or
inc
scas
and
scas
pop
insl
or
fldl
fistpl
icebp
inc
adc
jl
push
jbe
cmc
xchg
std
outsb
dec
add
neg
mov
pushf
jmp
jge
jmp
cmp
mov
js
cmpsb
push
push
lcall
stc
and
nop
icebp
mov
mov
hlt
sbb
mov
xchg
lods
mov
adc
fists
iret
add
sbb
mov
call
add
ss
xor
mov
push
mov
xchg
mov
mov
out
jns
inc
es
insb
jmp
mov
mov
jnp
aaa
sbb
push
int3
inc
pop
dec
test
xchg
add
call
xchg
inc
mov
lret
pop
iret
into
cmpsb
sbbl
mov
scas
daa
fsub
test
mov
fidivl
rclb
mov
mov
mov
push
call
mov
push
outsl
mov
cmp
jle
pop
and
mov
pop
mov
sarl
sub
movsb
ret
jb
lds
aad
xor
sahf
in
lock
and
jns
ljmp
je
xchg
enter
mov
mov
imul
addr16
loop
pushf
and
sub
out
cmp
fistpll
jns
lcall
cld
xor
aad
fsubs
scas
dec
dec
bound
push
add
pop
inc
in
jae
jle
xchg
mov
icebp
iret
pop
nop
in
xchg
es
add
push
mov
leave
pop
pushf
outsb
push
jmp
outsl
add
fs
ret
add
adc
push
leave
lret
inc
out
fildl
loopne
xor
mov
lcall
pushf
jns
xchg
lret
sub
dec
iret
lcall
or
aas
aam
addr16
pop
mov
cmc
xchg
scas
mov
push
rcll
enter
aaa
mov
cmp
jl
jmp
xor
mov
push
push
pop
jne
mov
fwait
inc
aam
popa
insl
std
dec
sbb
ds
dec
fs
divb
inc
imul
testb
das
js
pop
add
test
add
insb
jmp
mov
push
fidivs
cltd
pop
clc
or
mov
mov
jbe
dec
popf
cmp
lcall
pop
mov
mov
faddl
pop
lea
xchg
addr16
mov
outsl
push
pop
sub
aaa
repnz
shll
ficomps
insl
jb
or
cmp
mov
movsl
inc
fildll
aam
xor
jo
iret
popf
mov
in
and
cmp
cmp
movsb
sahf
insl
mov
dec
hlt
fstpl
mov
shlb
icebp
fsubl
xchg
mov
insb
dec
loopne
push
pop
fimuls
cmpsl
cmova
aam
lock
lret
or
into
mov
push
xorl
mov
in
lcall
lds
or
sbb
and
and
jl
mov
jg
sub
sbb
xchg
push
lock
loope
daa
xlat
xchg
lods
sahf
inc
pop
adc
adc
iret
xor
sti
pop
add
lcall
cli
adc
dec
mov
cmp
mov
stos
test
js
outsl
sbb
pusha
movsl
bsf
push
clc
pop
out
mov
in
adc
xchg
cs
pusha
shlb
fwait
movsb
enter
fisubl
pusha
icebp
xor
ss
xor
push
mov
adc
aam
xchg
xor
and
mov
cmp
loope
and
stos
fcompl
test
and
scas
pop
fiadds
adc
aas
cmpsb
dec
sbb
fcoml
shl
mov
xor
xor
decl
loopne
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
in
jle
xchg
adc
adc
fs
lcall
push
pop
adc
inc
dec
leave
xchg
fwait
in
mov
pop
jp
bound
cmp
sub
lods
sub
xchg
pop
or
or
xor
cmp
cmp
loop,pt
dec
mov
lret
mov
xor
pop
sub
pop
popa
jns
test
ds
xor
xor
jecxz
out
jne
push
mov
push
insl
push
movb
jl
mov
add
test
mov
push
inc
or
mov
cmc
mov
loop
push
dec
test
sub
fdivrs
xor
mov
dec
inc
sub
fisttpl
sbb
cli
jno
push
sub
pushf
repz
aam
aad
cmovne
jg
push
push
rorb
mov
pop
sub
addr16
mov
cmpsl
call
xchg
inc
insl
xchg
lcall
inc
outsb
enter
aaa
and
push
jbe
add
add
gs
mov
jmp
lock
leave
and
lods
cmp
test
cs
pop
pop
repz
pop
inc
add
add
cmp
dec
dec
xchg
in
jl
and
ret
xor
outsl
inc
aaa
mov
loopne
mov
push
jle
sahf
daa
stos
rclb
mov
add
cmp
xchg
lret
or
mov
mov
push
jbe
ljmp
adc
mov
push
fadds
out
add
or
sub
jo
xlat
fnsave
fldl
push
pushw
pop
test
std
imul
pop
inc
popl
pop
jne
loope
mov
cmc
push
adc
xchg
popa
push
adc
mov
fldl
or
imul
push
movsl
fisubs
inc
adc
test
xchg
mov
stos
sub
imul
mov
es
sbb
xor
xchg
and
mov
pop
push
out
dec
aaa
pop
divl
pop
adc
mov
pop
cld
clc
xchg
push
sarl
cmp
notl
xchg
push
dec
nop
mov
in
cld
adcb
jae
jle
push
mov
dec
leave
int3
jmp
shr
test
push
dec
not
das
push
into
clc
or
inc
or
out
jp
mov
pop
sahf
bound
pop
push
push
mull
adc
push
push
in
lcall
shlb
cwtl
xchg
cli
and
cmp
ljmp
iret
add
sbb
outsb
hlt
lret
sbb
add
or
push
and
inc
cli
in
adc
add
adc
fimuls
add
or
jg
stc
test
outsl
jl
movsl
fistl
xor
mov
mov
lcall
cmp
sub
xchg
test
clc
cli
cmp
fs
push
cmpb
push
sub
and
add
push
pop
add
andl
and
mov
fwait
mov
dec
mov
and
lret
cmc
leave
dec
movsb
inc
lods
stos
cwtl
jno
mov
and
jns
xlat
jp
mov
ret
add
xchg
aam
jbe
inc
loopne
inc
cmp
repz
mov
pushf
mov
jmp
sahf
pop
pop
adc
lahf
sbb
js
mov
adc
or
loope
movsl
insb
mov
inc
push
stos
and
xor
adc
sbb
or
test
jae
lahf
fistps
or
nop
lock
loopne
pop
lahf
sub
addr16
fldl
mov
ret
add
or
fnstcw
and
movsl
inc
adc
xchg
aaa
mov
jecxz
sub
jle
push
lret
jbe
lcall
dec
jmp
stc
xor
mov
in
mov
push
in
push
cmp
lret
xchg
mov
sbb
or
icebp
mov
sbb
dec
fcomi
fmull
mov
jecxz
cwtl
pushf
adc
xchg
subl
fstps
arpl
fdivs
cmp
popa
sbb
roll
dec
jnp
das
jmp
jnp
stos
add
dec
jg
nop
cmp
outsl
dec
pushf
sahf
ss
out
or
imul
mov
jp
xor
out
test
std
inc
push
xchg
test
or
test
jge
outsb
or
or
shll
icebp
cltd
int3
leave
dec
pop
cli
adc
mov
and
rclb
dec
add
push
jns
sbb
mov
adc
jle
pop
xchg
fisubrs
pop
adc
xchg
cmp
fwait
mov
sbb
xchg
lock
pop
push
jecxz
out
adc
xor
rclb
push
pop
addl
cli
and
je
ja
xchg
adc
sahf
popf
sbb
xor
jnp
fistps
lret
es
orl
daa
pop
and
sub
xchg
dec
ljmp
jo
imul
in
cld
insb
es
inc
sbb
push
fs
je
add
repnz
cmp
test
adc
adc
das
mov
sbb
xchg
cli
xlat
incl
loopne
pusha
mov
fisubl
xchg
adcl
stos
sub
fsubr
lods
xchg
xchg
cmp
and
das
and
sub
out
scas
ss
lret
nop
cli
xlat
push
sub
adc
aaa
mov
push
cs
imul
push
ds
iret
pop
loope
jl
cmp
jno
xchg
add
xor
test
cmp
out
pop
movsl
in
add
inc
lahf
les
add
call
mov
jg
add
mov
iret
jg
out
es
or
pop
and
and
fcoml
lcall
and
pop
out
mov
out
sub
lret
lods
inc
movsb
into
loop
leave
mov
pop
clc
and
test
push
shlb
add
mov
loopne
pop
cwtl
in
dec
cmp
adc
shl
sbb
ret
js
lret
cltd
push
repz
xchg
mov
xlat
cmpsl
add
loopne
xchg
imull
and
sbb
lret
xchg
jge
and
popa
add
mov
mov
pop
xor
icebp
or
sub
adc
inc
loopne
mov
fldcw
outsl
mov
xchg
ret
lcall
add
inc
lcall
loopne
or
and
mov
adc
bound
or
sbb
loop,pt
adc
movsl
arpl
jno
push
sub
dec
cmpb
adc
sbb
push
dec
das
daa
xchg
test
jns
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
adc
adcb
loop
sub
sub
cld
popf
cmp
ljmp
add
pop
popf
les
hlt
cmp
addr16
or
repz
or
fadds
xor
mov
jg
popa
add
sub
push
inc
popa
push
pop
bound
dec
test
movsl
dec
inc
mov
jne
mov
bound
mov
cmc
sbb
xor
xchg
inc
hlt
xor
push
cld
pushf
adc
push
push
jmp
xchg
mov
lahf
pop
in
std
test
lods
pusha
xchg
adc
fisttpl
and
fcomps
or
fbstp
insl
mov
pop
pop
ror
je
cmp
mov
fbstp
fwait
scas
nop
loope
aaa
sbb
lods
sub
mov
mov
popf
loopne
ja
push
add
pop
pop
ljmp
pop
inc
in
test
lea
add
jb
sti
push
cmp
cmp
mov
int3
pop
jne
jge
insb
ljmp
lret
pushf
jns
test
repz
xchg
xlat
lock
aad
sub
pop
cmp
gs
mov
test
out
or
rcl
gs
std
push
cmp
or
sbb
orb
ja
outsl
mov
outsl
cld
push
stos
inc
mov
xchg
negl
xchg
xchg
lods
dec
mov
jnp
stos
mov
mov
inc
lods
fisttpl
fsubs
xchg
mov
pop
icebp
xchg
lods
lcall
xlat
lds
cltd
les
fcoml
test
xchg
pop
popa
lahf
inc
imul
pop
xchg
jge
mov
pop
dec
add
mov
in
rcl
sbb
imul
push
pop
pop
mov
out
lods
cwtl
inc
xor
mov
sub
movsb
sub
rorb
cmpb
addl
add
cmpsb
lods
mov
jb
scas
inc
inc
xchg
lret
or
cmp
and
outsl
jp
add
dec
dec
xchg
add
push
pop
cmp
call
xlat
pop
adc
inc
mov
add
daa
dec
sub
xchg
pop
andb
jae
aad
xor
dec
lahf
mov
loopne
lds
ss
push
fistps
sbb
in
jae
dec
lret
cs
test
mov
sbb
mov
sbb
xchg
shrb
cmp
pop
int3
pushf
ficoml
jl
stos
mov
push
mov
jl
shrl
xorb
movsl
adc
outsb
push
testb
pop
add
cmp
or
int3
cmpxchg
mov
ret
fidivrs
sbb
add
ficompl
je
adc
fisubrs
outsl
aaa
inc
icebp
das
jbe
jmp
dec
aam
aam
pushf
xor
cmp
arpl
jle
stc
outsl
or
cli
bound
movsl
pop
movsb
sub
mov
lods
pop
jp
jmp
insl
sub
pop
mov
div
and
sub
and
out
pop
fucom
inc
ss
pop
cli
imul
sbb
jne
mov
jns
loop
push
sbb
mov
mov
dec
sahf
rcrl
mov
lods
test
jle
inc
je
and
cmp
push
jns
fxtract
enter
jne
pop
jmp
mov
arpl
stos
shlb
xchg
clc
mov
pop
push
cwtl
ja
lea
or
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
mov
mov
stos
adc
adc
pop
outsl
loopne
fstpt
sub
add
es
lds
mov
and
ficoml
cli
dec
std
mov
insb
adc
or
aaa
mov
or
mov
das
lret
mov
sbbb
adc
sti
and
sub
mov
fnstcw
inc
loop
ja
rcl
addl
jno
lods
mov
cmpsb
addr16
scas
inc
mov
sbb
fists
lock
adc
js
pop
mov
or
mov
call
movsb
ljmp
push
das
mov
mov
out
xchg
loop
lods
jmp
ljmp
push
push
in
int3
dec
bound
jle
imul
pushf
ror
shlb
cmpsb
and
mov
outsb
mov
cwtl
fstps
inc
jae,pt
mov
push
mov
sub
ja
les
leave
retw
sub
push
and
pop
inc
mov
push
cmp
and
je
stos
cmp
jp
fnstenv
push
das
cmc
sbb
cmp
lock
aas
mov
push
imul
lods
test
je
push
cmp
cwtl
push
in
lds
or
mov
subl
out
hlt
sahf
dec
push
jb
pop
mov
dec
add
xor
adc
int3
nop
aad
faddl
mov
sbb
nop
les
jne
dec
mov
aaa
leave
ljmp
pop
or
test
dec
lahf
sbb
pop
je
leave
fucomip
xchg
jns
or
in
push
sbb
dec
jb
push
cli
roll
js
sub
adc
test
fidivrs
mov
stos
in
testb
push
pop
sbb
test
imul
or
js
fsubp
and
inc
call
pop
dec
js
cmpsl
jb
jecxz
dec
scas
mov
jge
inc
cmc
scas
fsubl
out
cmpsb
pop
loope
pusha
and
mov
les
cmp
repnz
inc
stc
xchg
rolb
pop
test
sub
mov
call
mov
sti
ret
inc
out
insl
cmp
ret
mov
icebp
mov
or
into
stos
test
lock
loopne
jle
adc
add
adc
cmp
daa
fistps
xor
add
and
push
cmp
pop
js
dec
and
ret
jmp
xchg
aas
lods
movsl
dec
fists
test
xor
popa
sub
sub
push
aam
and
adc
lods
and
sahf
push
dec
inc
rorb
loope
add
decl
cltd
stos
mov
push
mov
iret
lds
sbb
jg
shll
fnstcw
sub
aaa
ja
movsb
ret
add
test
cltd
addb
mov
insl
dec
push
push
push
xchg
push
push
addr16
jns
mov
jmp
xor
pop
xor
shlb
mov
lea
xor
mov
sbb
pop
cmp
in
jnp
addr16
or
fadds
xchg
lock
into
fcompp
repnz
and
js
ret
adcb
jbe
mov
loop
xor
cs
sbb
jbe
jg
jns
addb
inc
aam
nop
cmp
sub
dec
cs
out
jnp
cmp
data16
mov
test
add
add
sub
jle
jecxz
js
jo
adc
sbb
loope
sti
test
pop
test
inc
nop
jmp
outsl
cmp
sbb
pop
cs
test
xchg
mov
sub
and
in
rcrl
or
mov
repz
arpl
insb
pop
mov
pop
adc
cmp
add
sbb
pop
jmp
jge
xchg
xchg
lret
add
cmpsl
lcall
cwtl
pop
mov
push
jge
push
bound
cltd
fdivrs
rcrl
inc
pop
test
mov
rcrb
push
dec
pop
xchg
mov
add
jbe
es
push
xor
mov
jmp
addr16
frstor
dec
js,pn
shrl
subl
jg
test
iret
iret
dec
mov
xor
mov
call
fsubrp
inc
lret
hlt
pusha
cmp
loop
ret
sti
stc
jns
jmp
adc
imul
sahf
rorl
inc
mov
test
icebp
imul
mov
xlat
jno
pop
test
stos
lods
adc
imulb
shlb
add
iret
pop
xor
fsub
addr16
imul
cs
inc
xor
ret
int3
xorb
jno
pop
pop
xchg
lock
xor
mov
call
cwtl
mov
out
outsl
lret
sub
push
lret
cli
push
movsl
inc
movsb
mov
push
pop
dec
test
ret
dec
enter
jo
test
dec
xor
call
mov
stos
sbb
pop
lock
loope
add
jecxz
pop
mov
sub
enter
xor
jnp
inc
pusha
repz
push
bound
call
cltd
mov
inc
insb
and
dec
push
or
sub
sub
pop
enter
and
into
cld
xchg
push
enter
mov
pop
test
orl
dec
in
and
mov
pop
cmpsl
fidivrl
ss
jae
sub
lret
imul
sbb
adc
dec
or
dec
adc
addr16
and
sub
sbb
or
push
lods
xchg
inc
push
mov
cwtl
cs
scas
sahf
mov
dec
push
push
mov
jge
lods
ret
xor
push
cld
add
stos
add
adc
xor
adc
imul
ss
cmp
ss
imul
shll
xor
in
xchg
lock
ret
mov
xor
mov
pop
fistpl
daa
lea
pop
lcall
insb
inc
cmpsb
xlat
pop
cld
add
sub
test
mov
jnp
ja
mov
or
dec
loopne
inc
cmpsl
out
add
popa
lods
xor
ljmp
aas
xor
pop
xchg
and
adc
fstl
stos
mov
fsts
in
or
out
fmuls
xor
xorl
or
push
es
sahf
xor
inc
out
out
hlt
add
mov
pop
and
inc
cli
icebp
cmp
fbstp
xor
sub
push
inc
ret
adcl
repnz
insl
lea
mov
jns
les
fstpl
movsl
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
jg
jle
call
adc
adc
in
jb
pushf
fdivl
dec
dec
call
xchg
mov
mov
jnp
add
dec
js
pop
shl
pusha
out
pop
iret
jnp
jmp
mov
repnz
inc
push
and
repz
dec
jle
inc
in
popl
xchg
add
fsubrp
fadds
jnp
dec
add
jecxz
add
call
cmp
call
rcr
adc
iret
sub
jns
xlat
orl
mov
jg
sub
pop
orl
aam
inc
add
cltd
xor
test
mov
pop
mov
addl
mov
fisubrl
mov
xor
dec
mov
mov
cmpsl
add
pop
sbb
xchg
fcomps
push
fildll
push
imul
cmp
xchg
pop
out
inc
inc
icebp
xor
add
jg
fisubrs
gs
jmp
add
push
adc
xchg
cmpsl
fimull
cmp
inc
and
pop
getsec
xchg
lret
mov
cmpsb
xor
push
repnz
dec
shl
sbb
dec
popf
lcall
jle
fnstsw
rolb
jns
cmpb
repz
insl
into
mov
sbb
int
aam
hlt
scas
xor
push
push
out
pop
insb
call
hlt
testl
sub
call
xchg
pand
fistps
lret
xchg
imull
sub
rcrl
ror
xchg
mov
or
sbbb
and
mov
rcr
imull
out
cwtl
jns
inc
adc
pop
jns
sub
das
mov
sti
mov
mov
roll
outsl
insb
or
sub
and
pop
sub
nop
loope
pop
push
xchg
and
hlt
or
ljmp
or
mov
mov
mov
mov
jg
xchg
and
int3
mov
adcl
cmc
pop
inc
jge
es
add
add
pop
insb
aas
stc
fnstsw
or
das
fwait
fwait
aaa
pop
icebp
xor
dec
mov
inc
xorl
pop
jbe
cmc
sahf
fsubl
mov
lock
xlat
pop
cwtl
orb
scas
or
ljmp
inc
adc
mov
movsl
test
xlat
cli
loop
adc
aaa
rorb
jge
int3
cmp
iret
addl
lahf
fstpt
shrl
test
out
xchg
sub
push
jle
mov
lret
adc
jne
iret
loop
mov
or
into
leave
push
loopne
fyl2x
and
adc
in
mov
inc
push
fadds
test
jbe
pop
popf
mov
jp
outsl
mov
idivl
xchg
xor
sbb
cwtl
xor
mov
mov
pop
mov
fbstp
jo
inc
pop
jmp
jge
call
and
push
test
mov
mov
mov
adc
or
pop
jne
jle
les
test
lods
push
mov
data16
imul
testl
ds
setg
jne
cmpb
lcall
mov
js
lret
pop
and
and
inc
lods
or
xchg
inc
sbb
jle
dec
std
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
mov
cmp
push
xor
data16
jp
mov
sub
imul
inc
push
jne
js
fldt
jo
or
inc
push
cmpsb
and
addr16
push
ds
stos
xchg
icebp
or
xchg
push
sub
inc
sahf
cmpsl
dec
dec
sahf
mov
cwtl
or
jge
push
jmp
mov
js
mov
shll
xchg
stos
and
mov
mov
mov
fld
add
mov
jmp
outsb
xor
outsb
mov
jp
repnz
push
imul
dec
das
in
lahf
pop
je
rcrl
push
movsl
enter
mov
scas
dec
inc
push
dec
lcall
dec
pop
test
ret
clc
xchg
jp
dec
aaa
push
inc
add
lcall
jmp
or
mov
aaa
or
shll
cmp
mov
adc
push
ljmp
fwait
dec
adc
mov
rcrb
lock
addb
xchg
insl
repnz
jmp
aam
mov
sbb
adc
push
mov
stc
adc
repz
out
adc
and
fildl
xchg
mov
sub
popa
rcll
sarb
cltd
cmc
jmp
cs
jg
aas
repnz
nop
lds
es
leave
aaa
mov
cmp
pop
mov
jmp
lahf
mov
xor
jae
gs
insb
in
cmp
sub
mov
jnp
insb
mov
data16
sub
les
int3
jb
rcrl
pop
std
mov
xor
inc
movsb
fsub
or
fwait
inc
fldenv
pop
lds
pop
scas
outsl
xchg
in
cwtl
push
in
int3
add
or
jno
ret
jecxz
test
xor
xor
arpl
push
movsl
sbb
jno
cli
xchg
dec
shrl
loopne
mov
pop
push
in
push
int3
xchg
xchg
push
lret
cmp
pop
cmp
mov
pop
mov
in
sahf
mov
sub
fcomps
xchg
gs
pop
pop
jae
add
push
push
xchg
mov
ja
inc
push
or
in
int
sub
dec
lret
jns,pn
imul
sub
scas
in
jmp
cmpsb
pop
jecxz
dec
inc
add
lea
out
xchg
into
lahf
loope
push
fstpt
dec
xchg
repz
cld
fdivr
sub
jne
faddp
cmp
sub
jg
sarl
mov
jne
leave
sub
test
xor
movsl
mov
cmpsl
cmp
fisubrs
sbb
faddl
xor
xchg
movsl
inc
and
sub
into
jnp
sbb
or
sub
lret
hlt
les
mov
hlt
addr16
lods
and
mov
cltd
add
xor
imul
pop
shrb
and
sbb
cmpsb
fidivl
pushw
ret
cmp
rcl
stos
popa
lret
inc
mov
test
lret
out
jmp
bound
cmp
fimuls
das
dec
mov
xchg
lea
repz
test
repnz
xchg
pop
inc
add
addl
xorl
and
ja
scas
sbb
sbb
sbbl
sti
push
xchg
push
cmp
sub
pop
adc
pushf
push
push
pop
sub
or
bound
sahf
dec
adc
test
mov
xchg
test
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
pusha
int
mov
stos
adc
adc
add
inc
add
jecxz
cs
stos
mov
xchg
ret
arpl
int
lods
lods
movl
xchg
ljmp
pop
std
andl
add
ret
pop
pop
jl
mov
ja
repnz
testb
inc
shll
cmpsb
movsb
addr16
inc
lock
push
and
push
aas
and
cmpsl
pop
data16
dec
pop
sbb
fstps
cmp
call
negl
clc
cltd
sbb
xchg
pop
stos
adc
add
pop
ljmp
mov
jmp
mov
or
dec
ss
and
push
packssdw
sbb
inc
nop
mov
cmc
aas
mov
aaa
mov
jae
outsb
subb
jb
xchg
fisubrl
pusha
cld
cmp
outsb
dec
lret
fistps
cmpsl
stos
test
mov
and
cmpsl
inc
pop
loop
dec
leave
std
pusha
mov
aad
jae
cltd
loopne
jbe
pushf
cwtl
adc
mov
or
ret
cwtl
cs
push
dec
jns
insl
orb
push
xor
stc
aaa
test
xchg
push
pop
fldcw
int3
outsb
push
test
sarb
cmp
jp
or
outsb
loope
test
mov
out
mov
pop
push
ret
imul
scas
jno
push
roll
int
hlt
pop
push
xlat
dec
add
call
insl
or
inc
add
dec
rolb
cmpsl
dec
cmp
int3
rolb
rorl
mov
jge
mov
sbbl
pop
faddp
sub
ds
add
imul
sbb
inc
imul
ja
sub
or
mov
lret
lsl
sbb
orb
push
push
jmp
hlt
sti
mov
jg
fldt
fidivs
jb
dec
mov
sbb
loope
dec
mov
mov
push
push
xor
jge
imul
sbb
ja
cmp
dec
jb
jb
inc
fcmovnu
cmpsb
aas
sub
and
inc
mov
jge
xor
bound
aaa
pop
ret
dec
insl
sbb
mov
lock
xchg
mov
repz
and
lcall
cmp
test
popf
pushl
push
cmc
xchg
sbb
adcl
repz
lret
imul
hlt
pop
decb
bound
sub
mov
insl
adc
rcr
pop
ficomps
or
in
sti
and
arpl
xorl
out
jns
xor
idivl
mov
mov
xchg
cmp
fisubrl
dec
pop
inc
or
and
push
arpl
or
sub
adc
shrl
test
fdivrl
mov
xchg
frstor
mov
dec
xchg
sub
sub
scas
orl
sarl
mov
add
mov
rorl
cld
jnp
cmp
insl
xlat
fistpll
sub
icebp
lcall
into
mov
pop
mov
int
stos
js
mov
mov
or
pop
fdivs
dec
imul
les
stos
hlt
sbb
mov
jns
xor
push
push
cmp
sub
clc
adc
or
bound
and
inc
adc
or
push
ljmp
pop
sbb
lock
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
pop
jnp
push
sbb
mov
xor
js
js
fldcw
push
hlt
jmp
shrb
add
das
jl
jl
lret
sub
sarl
cmp
dec
loop
xchg
pusha
int3
push
hlt
pop
shl
xor
aad
std
jne
xor
push
sbb
inc
addl
cmp
insb
stos
lea
js
lea
je
dec
jns
add
sbb
cmpsl
pop
rol
xchg
or
xchg
dec
repnz
test
cmp
lret
fidivrs
repnz
cmp
xchg
push
arpl
sbb
jbe
mov
fs
dec
add
fwait
push
inc
dec
das
into
pop
push
sbbb
mov
rorl
jb
push
popf
mov
inc
rcrb
cld
push
jb
xchg
inc
xor
ffree
mov
iret
jg
lock
mov
cmc
inc
xor
popf
jo
sub
movsb
sahf
repnz
notl
cmpsl
add
pop
in
or
cmp
das
jno
ja
jbe
ret
sbb
shll
push
cmc
sbb
sbb
cmp
cmp
cltd
xchg
data16
test
mov
cwtl
movsb
int3
aam
lahf
mov
cmpsl
hlt
dec
cmp
sub
xchg
das
sbb
mov
call
pop
jge
nop
mov
inc
out
aaa
sbb
jo
negb
push
mov
rcll
or
out
fdivrl
adc
sbb
push
pushf
lahf
mov
inc
js
orb
popf
xor
xor
xchg
mov
or
xchg
adcl
fildll
outsb
cmp
xchg
arpl
scas
xorb
addb
pop
hlt
add
pop
lcall
push
insl
out
fiaddl
pop
and
cmp
imul
mov
mov
push
in
sub
mov
in
sub
add
push
mov
loope
and
in
jmp
lock
int
sbb
mov
lea
repz
out
lcall
pop
add
adc
xchg
shll
jmp
lods
jo
dec
mov
push
xlat
stos
fcomps
push
out
inc
cmp
iret
push
mov
push
push
xor
das
mov
addl
lahf
fidivl
iret
je
pop
mov
xchg
in
xor
mov
add
fisttpll
fldt
mov
mov
loope
ret
fists
pop
inc
dec
pop
ret
cmp
test
cmp
loopne
jge
xor
sahf
fsts
cwtl
inc
cmp
add
ljmp
in
pushf
nop
xor
stos
movsb
mov
mov
js
jae
gs
aaa
loope
inc
enter
leave
sub
enter
rclb
sub
shll
pop
pop
mov
call
jne
fisttps
xchg
pop
je
imul
pop
sub
in
or
imulb
arpl
test
inc
sbbl
inc
lods
data16
clc
scas
in
push
mov
inc
push
mov
mov
dec
pop
sbb
lea
fwait
iret
stos
out
clc
pusha
lods
stos
sbb
and
push
xchg
shrl
sar
pop
cs
sti
sbbb
add
push
push
mov
add
ss
mov
jno
sbbl
lea
lahf
movsl
adc
mov
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
hlt
nop
js
dec
adc
adc
enter
push
mov
or
mov
xor
mov
test
loope,pt
cmp
push
mov
data16
test
mov
sbb
movsb
mov
and
mov
aas
mov
enter
inc
out
ljmp
dec
mov
setl
in
jmp
movsb
jge
aad
sti
xor
and
and
mov
mov
xor
and
xor
mov
mov
push
xchg
fld1
jb
adc
cmp
pop
lcall
mov
inc
sub
pushf
pop
mov
idivl
ret
mov
pop
addr16
fwait
xchg
cli
in
add
out
dec
ljmp
push
dec
lea
icebp
lahf
jecxz
js
mov
stos
and
sub
jo
jbe
ljmp
push
and
add
cmp
dec
sub
mov
dec
fldt
idivb
jo
adc
jp
xchg
cmp
rcr
in
and
aad
fldt
std
in
arpl
push
mov
adcl
inc
or
outsl
ss
sti
mov
nop
in
xchg
pop
mov
pusha
adc
and
xchg
adc
adc
sub
cmp
test
dec
insl
xor
ljmp
pop
lock
sub
stos
sbb
and
iret
inc
pop
fildl
pop
sbb
test
mov
push
mov
subl
lods
inc
cwtl
add
mov
and
out
cmp
sbb
aas
mov
repnz
call
les
inc
rorb
aad
test
cmp
cli
pop
or
mov
sub
adc
pusha
mov
jge
push
or
pop
ss
imul
in
jp
fwait
push
in
mov
push
aas
xor
xor
sub
xchg
popa
add
int
popa
ljmp
mov
push
loopne
out
sbb
push
out
out
and
inc
mov
lret
push
cmova
inc
pop
xchg
imull
cmp
push
test
inc
fs
std
gs
roll
inc
add
sub
sbb
dec
ja
mov
and
nop
stos
and
xchg
sbb
xchg
xchg
pop
adc
aad
pop
or
pop
xor
push
mov
dec
lock
rolb
and
and
cmp
sbb
cmc
stc
dec
mov
in
and
fwait
mov
les
and
and
pop
icebp
or
cs
addr16
inc
loope
cmp
shlb
inc
xchg
jl
mov
imul
jno
or
ss
insb
adc
adc
mov
movaps
pop
std
pop
nop
imul
fcompl
ja
enter
lods
mov
mov
xchg
or
dec
insl
add
cmc
inc
or
clc
nop
dec
lret
jae
jmp
lods
pop
mov
rorl
pop
mov
add
sbbb
aaa
arpl
adc
add
xor
and
inc
movsl
inc
mov
xchg
push
and
ja
jb
ficompl
fs
daa
pop
and
and
enter
int
cmp
sbb
out
mov
mov
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
xor
shl
sti
or
mov
xchg
adc
xor
sbb
lcall
pop
push
dec
dec
cli
xchg
cmp
inc
sbb
stos
fwait
stos
nop
xor
xor
loopne
adc
call
jmp
dec
call
cmp
add
jns
inc
fldpi
mov
mov
imul
sub
into
jns
inc
sub
mov
jge,pn
cli
jle
dec
movsl
add
outsb
mov
and
adc
jl
sbb
lods
jae
push
jle
jo
popa
dec
and
arpl
push
repnz
jnp
aam
xor
cs
cwtl
shrb
mov
xchg
mov
lock
pop
or
lcall
jmp
sub
std
add
adc
pop
inc
mov
push
in
sahf
test
cwtl
lret
mov
fwait
sbb
in
or
xor
xor
pop
fcomip
dec
cmp
or
push
push
cmpsl
pop
sub
jae
lods
xor
das
in
push
dec
out
pop
pop
mov
ja
ss
into
stos
add
nop
loope
and
es
fdivrl
pop
sbb
test
and
es
loopne
lahf
imul
idivl
aad
mov
push
pop
dec
xchg
jno
std
mov
add
mov
add
cmp
fwait
cwtl
cmpb
sti
sbb
lahf
jp
lcall
add
hlt
sub
aam
push
notl
js
test
jo
and
cld
push
in
inc
out
sarb
pop
lea
add
test
cmc
cli
mov
mov
enter
js
popf
out
js
mull
dec
addb
mov
pop
popa
repz
loop
sbb
rcr
mov
xlat
cmp
cmp
cmovge
lock
data16
sbb
fs
loop
adc
fildl
xor
cltd
mov
repz
mov
push
mov
jb
or
lret
decl
out
rolb
xchg
jp
and
xchg
in
fwait
sbb
and
mov
imulb
fs
pop
rcll
adc
std
lods
mov
mul
jl
fiadds
pushf
fsts
scas
jg
mov
js
mov
mov
test
mov
cmc
ljmp
decl
insl
divb
or
clc
inc
mov
in
outsb
cmp
xorl
insb
arpl
push
sub
mov
mov
clc
inc
xor
pop
and
js
scas
mov
aad
test
push
aam
testb
mov
push
xchg
mov
fwait
dec
xor
lahf
sbb
jge
sbb
xchg
int3
icebp
xchg
dec
nop
fnsave
push
jns
jb
in
dec
xchg
or
dec
fsub
outsb
add
js
ret
rcrb
into
jp
fisubrl
int3
sub
mov
and
jge
fidivs
mov
cs
add
push
dec
xchg
ss
pop
bound
xchg
inc
mov
and
inc
xchg
call
mov
push
xor
and
mov
popa
movsl
aad
dec
xor
repz
cs
jo
adcb
or
adc
adc
fistps
lahf
in
scas
fmuls
clc
inc
add
cli
sub
and
popf
imull
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
mov
js
adc
adc
xlat
lods
loop
lds
out
xchg
mov
mov
stc
mov
imul
ret
and
fs
mov
pop
cmp
mov
shlb
fisubs
cmp
add
push
ficoms
call
jg
fwait
mull
pop
add
rcr
dec
das
and
mov
sbb
out
cmp
pop
arpl
sahf
imul
cmp
mov
jl
pop
jl
cmp
jno
jg
es
loop
mov
mov
dec
cmp
inc
int
xor
in
leave
push
ret
stos
js
jne
and
sub
adc
popa
sub
shr
pop
mov
lcall
sbbb
mov
imul
push
sub
add
pop
mov
cmpsl
jnp
enter
aaa
xlat
sarl
jns
cmpl
hlt
inc
clc
adc
mov
xchg
call
loope
loopne
push
mov
pushf
scas
fistl
jne
test
std
xchg
out
jp
sbb
pop
xchg
inc
sti
repz
add
jmp
and
xor
inc
fidivs
jecxz
adc
mov
in
mov
or
les
orb
mov
lods
sub
aas
xchg
jb
xor
jo
xchg
ja
sub
cmpl
sbb
lret
add
movb
nop
pop
sbb
in
mov
pop
popf
incb
mov
jp
pop
mov
inc
mov
mov
int3
in
pop
add
sub
cmp
cmp
cmp
inc
sub
cmp
jge
mov
dec
and
jp
js
out
jge
push
cmp
pop
fwait
mov
cmc
aam
lcall
lret
stos
sbb
add
lods
aad
push
mov
or
pop
jl
jae
insl
push
insb
js
xor
sub
int
fwait
push
lock
in
pop
sub
inc
lret
test
insl
andb
in
push
and
das
sub
sub
test
jo
jae
push
enter
cmp
sbb
mov
adc
pop
push
dec
cli
leave
rol
insb
popa
sub
adcb
mov
sbb
pop
sahf
rorl
inc
xor
and
adc
mov
push
push
add
or
imul
or
das
into
inc
and
jecxz
sub
ja
push
inc
jbe
mov
mov
inc
or
scas
sub
sar
popa
xor
pusha
cmp
rcll
ljmp
dec
jno
inc
inc
push
les
xchg
adc
jbe
cmp
orl
cmpsl
inc
pop
enter
add
addb
in
mov
mov
pop
lods
jp
movsl
cmp
packssdw
dec
outsb
inc
lret
dec
lahf
push
and
cld
dec
out
test
aas
fsubr
enter
cmpsb
insb
shl
adc
ss
cmp
inc
std
aaa
jns
test
push
xchg
pop
sub
data16
inc
pop
out
jmp
insl
int
adc
xor
sarb
popa
ds
push
add
jl
sbb
lret
in
inc
dec
fcomps
inc
subl
pop
mov
jne
out
or
scas
xchg
sarl
aam
or
stos
inc
dec
adc
jge
xor
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
lcall
adc
mov
scas
sub
add
mov
ds
loope
arpl
cmpsl
scas
repnz
xchg
loop
xchg
inc
and
clc
gs
cltd
dec
jae
sub
jne
sub
fdivrl
add
das
jp
sbb
lret
rcl
mov
andl
adc
gs
pop
into
jle
je
mov
imul
ja
mov
sub
aad
xor
loope
sti
inc
pop
ja
push
mov
bound
pop
into
jns
adc
mov
mov
cmp
cmp
jb
mov
repz
mov
lods
cmpsl
in
adc
push
inc
das
loopne
inc
inc
inc
mov
outsl
jbe
inc
xchg
mov
fadds
iret
out
mov
push
outsb
pop
adc
or
pop
pop
outsl
mov
je
dec
push
out
aam
cltd
lods
add
mov
mov
sub
ds
repnz
pop
jbe
mov
popf
jns
lret
lcall
outsl
xchg
mov
inc
andl
stos
aaa
gs
pop
cmpsb
daa
sti
xor
jae
nop
push
xchg
je
add
cmc
mull
loopne
imul
popa
pop
sbb
pop
int3
adc
sahf
fs
mov
aaa
mov
int3
mov
push
add
cwtl
jl
jno
sub
sub
jge
add
hlt
mov
mov
addb
sub
jp
adcl
cmp
cmp
push
mov
lea
push
add
cmp
ja
test
ja
sbb
xor
movsl
and
test
mov
sbb
or
jno
imul
js
rcrl
jle
jmp
loope
pop
add
popf
int
repz
push
shrl
out
test
mov
sub
addr16
repz
push
pushl
push
and
xor
or
out
fdivrs
in
adc
mov
cld
jbe
and
pop
mov
shrd
push
xor
cld
pop
jecxz
pop
xchg
jecxz
push
and
and
mov
push
mov
pop
and
push
sub
jmp
mov
pushf
lock
fistps
std
and
std
aas
in
adc
mov
cmp
xor
xchg
or
cld
popf
aaa
mov
sub
cmc
sti
dec
add
fistpl
adc
ret
out
movsl
in
jecxz
mov
stos
xor
int
xchg
pop
fsubrl
cmp
daa
sub
jne
push
mov
sbb
jns
arpl
or
mov
sub
inc
inc
push
fildl
je
add
mov
mov
dec
mov
shll
popf
lcall
bound
mov
and
pop
test
cmp
ss
cwtl
mov
fwait
cltd
hlt
data16
pop
outsb
pop
sarl
das
xchg
jp
add
xchg
sbbb
mov
jge
inc
pop
push
dec
sbb
mov
test
cmp
ss
xchg
jns
ja
xchg
popf
sub
mov
sahf
xorl
cmp
call
mulb
add
lods
lds
mov
xchg
into
inc
aaa
push
imul
pop
pop
fistpl
mov
rclb
and
enter
or
decl
test
add
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
or
adc
or
cli
pushf
or
push
fdivrs
cmp
pop
mov
lea
sbb
inc
arpl
xchg
sarl
fldcw
push
enter
mov
xchg
insl
mov
aas
mov
cmp
and
test
jae
lcall
ror
xor
addr16
lahf
push
loop
clc
sub
mov
pusha
add
lock
mov
adc
leave
loop
xchg
dec
lret
inc
divl
jp
dec
icebp
push
jp
xlat
add
xor
mov
inc
xlat
pop
add
cmp
mov
pop
cli
fistps
out
xchg
mov
je
push
sarl
ss
jecxz
out
xchg
dec
jl
jnp
out
addb
imul
cwtl
faddl
out
or
clc
pop
addr16
or
mov
js
push
push
pop
mov
popf
int
jo
js
std
mov
or
mov
push
cmpsb
rcrl
aam
incl
sbb
xchg
lods
divl
cmp
mov
inc
in
gs
cwtl
mov
inc
je
jg
push
je
lods
imul
insl
sbb
cs
xchg
pushf
int
mov
sub
imul
jo
sbb
or
pop
cltd
mov
roll
in
iret
insl
adc
mov
xor
mov
cmp
adcb
mov
adc
mov
sub
scas
add
in
out
pop
lcall
jle
fwait
mov
dec
fdivrl
lods
fldt
outsl
mov
cmpsb
pop
mov
fcomi
and
clc
and
inc
pop
xor
mov
push
adc
nop
rcll
pop
or
or
pop
pop
cwtl
jnp
repz
mov
push
jle
jne
inc
xchg
cmp
mov
xchg
add
cmp
movsl
or
jge
call
lahf
daa
jmp
and
sub
out
mov
je
pop
xchg
arpl
lret
mov
push
loop
lret
loopne
fidivl
xchg
stos
icebp
sarb
insl
adc
or
cmc
imul
inc
mov
pop
into
lcall
ss
testb
lea
sbb
pusha
mov
add
mov
push
out
call
mov
mov
xor
ja
jg
cmp
lods
in
std
push
shrl
ficompl
inc
and
jae
jnp
stos
adc
daa
fimuls
lea
int
inc
pop
ficomps
cmp
xor
cmc
push
pop
add
pop
scas
rorb
xchg
mov
mov
popf
push
jns
neg
add
repnz
es
dec
jmp
pop
adcl
out
nop
lret
fldl
add
add
add
xor
aas
mov
push
stos
int
shlb
mov
iret
repz
filds
lret
mov
icebp
mov
and
mov
repnz
dec
cmc
and
inc
dec
movsb
jae
aad
adc
xchg
inc
pop
repnz
inc
gs
insb
push
push
jmp
pop
das
outsl
pop
outsl
jns
mov
mov
stos
bound
aaa
push
cmc
mov
sub
pop
jno
daa
stos
jg
into
arpl
cld
enter
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
into
addr16
inc
sub
adc
xchg
addb
push
dec
lret
lret
jae
ror
inc
mov
mov
xor
mov
int
and
clc
pop
sbb
dec
into
mov
jg
sub
cmp
adc
adc
cmpsl
cwtl
push
jl
or
call
cmp
and
or
mov
call
pop
idiv
stc
lret
fmuls
cmp
push
pop
xchg
nop
faddp
ss
scas
push
addl
lea
out
imul
arpl
cld
js
jnp
mov
cmp
lods
neg
jmp
arpl
popf
cwtl
jo
ljmp
xor
jns
jecxz
imul
push
inc
push
dec
mov
push
inc
mulb
leave
cmpsb
jae
xlat
push
popa
mov
jo
icebp
mov
int
imul
xor
lahf
add
push
add
shll
popf
jecxz
lods
inc
xchg
push
cmpsb
fiaddl
out
adc
cmp
lock
xor
pop
fisttps
push
cmp
shlb
stos
xlat
add
adc
or
xor
xchg
sub
xchg
and
repnz
xorl
rcr
push
popf
test
add
or
push
push
mov
cs
shr
jne
test
mov
sti
les
clc
mov
repz
sbb
cmp
adc
add
mov
or
sub
mov
sub
xchg
mov
out
cwtl
fnsave
pop
cmp
mov
sbb
cmp
daa
es
sub
imul
inc
inc
clc
push
push
ljmp
jb
loopne
test
das
clc
and
aas
push
pop
sub
enter
mov
js
jae
out
mov
rcrl
cmc
sub
sahf
sarl
dec
aam
enter
imul
jecxz
sub
inc
inc
sbb
xor
je
loop
mov
and
adc
xor
xchg
ljmp
xor
mov
push
rcrl
pop
jns
jp
inc
jbe
jb
mov
pop
lods
jnp
fdivl
std
or
leave
fwait
lods
inc
xor
loopne
shl
sbb
pop
dec
enter
addl
in
and
fidivl
insl
mov
icebp
imull
data16
mov
adc
aam
cmp
std
insb
std
push
and
mov
and
cwtl
out
cmp
sti
outsl
dec
ret
push
or
and
mov
das
clc
push
sub
jg
sbb
sbb
and
mov
or
sub
clc
xor
je
fnsave
lahf
dec
dec
and
insb
mov
hlt
into
outsb
push
loope
push
clc
and
out
cmp
jmp
mov
and
in
push
or
cmp
daa
cmp
sbbb
xchg
inc
cmpsb
xchg
push
xchg
jmp
inc
jbe
cltd
insb
adc
and
push
into
or
in
test
pop
scas
lock
jae
bound
add
inc
imul
xor
dec
mov
mov
cmp
insl
adc
xor
cmp
test
push
dec
data16
inc
lds
cli
lods
adc
pop
subb
int3
mov
in
pop
movsl
scas
and
xchg
lods
jp
stos
movsl
and
xchg
pop
adc
mov
hlt
pop
push
mov
pop
rcr
pop
scas
cmp
cld
out
jne
ds
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
loopne
cmp
cwtl
pushf
inc
mov
adc
ret
push
or
call
xchg
cmp
sub
sbb
adc
xchg
mov
gs
stos
ja
aas
lods
mov
rcrl
adc
popa
fcoml
add
movsl
into
sbb
repnz
push
sbb
rclb
pop
push
jge
push
fcmovbe
pop
or
pop
lods
cli
cmp
jp
pop
mov
loopew
test
adc
outsl
mov
inc
or
push
push
fbstp
sbb
aas
mov
mov
sbb
push
push
out
sbb
add
cltd
mov
ds
sbb
ret
push
and
mov
adc
imul
adc
clc
xchg
xchg
fcmovnu
sbb
mov
icebp
push
xor
lock
mov
jl
out
mov
and
or
imul
pusha
arpl
bnd
xor
cmp
stc
and
rclb
cmpsb
mov
jno
add
dec
jno
mov
adc
push
nop
lcall
and
pop
lret
xor
pop
xchg
jecxz
mov
sbb
fsub
icebp
out
fs
fs
shr
clc
mov
pusha
sbbb
setg
outsl
fs
add
std
xchg
or
pushf
lods
mov
das
xor
lock
or
out
sub
push
adc
xchg
movsb
inc
test
push
xlat
scas
sbbl
pop
adc
sub
dec
xchg
ljmp
push
subl
mov
xchg
das
aam
pop
jecxz
adc
mov
lea
imul
loope
xor
stc
fwait
inc
dec
jo
xor
cli
add
clts
mov
cli
sbb
inc
js
test
cmp
arpl
push
inc
xchg
pop
ss
fstpt
add
enter
lods
jecxz
and
arpl
dec
inc
fisttps
pusha
inc
inc
cmp
xlat
in
imul
pop
leave
pushf
dec
dec
adc
outsb
push
movsb
loopne
sub
daa
sbb
add
ret
xorl
leave
dec
adc
dec
movsb
sarl
cmp
xchg
adc
aaa
andl
iret
les
push
push
lret
sub
mov
adc
push
sbb
mov
int
das
imul
sbb
sub
lret
dec
push
pop
jle
push
cmpsl
iret
sbb
mov
fdivs
pushl
dec
mov
ss
fisttpll
sbb
xor
mov
mov
jmp
in
insb
pushf
jnp
and
inc
or
dec
cvtps2pi
pushf
pop
adcl
es
jmp
adc
test
in
push
cli
test
shlb
ret
mov
aas
loopne
push
mov
adc
jb
pop
adc
aad
mov
idivb
std
xor
lahf
push
cmp
out
gs
in
jae
cwtl
mov
xchg
mov
insl
scas
fstl
mov
mov
orl
movsb
test
sbb
testl
push
ror
lock
mov
xor
and
roll
cmp
fadds
push
movsb
inc
test
jnp
movsl
sbb
cmpsl
ja
mov
mov
stc
adc
sbb
cmp
in
aaa
xchg
dec
mov
imul
xor
mov
call
mov
mov
mov
jmp
or
mov
adc
bound
adc
xor
loope
jge
xchg
xor
sub
or
mov
in
bound
pop
outsb
cld
sub
addl
mov
mov
out
scas
mov
lods
fldcw
jmp
cmp
sbb
fidivl
data16
inc
mov
mov
push
adc
cmp
sbb
add
divl
pop
loop
stos
pop
add
cmp
xchg
or
sbb
inc
add
mov
inc
test
jp
push
cmpsl
xchg
and
popa
lds
sbb
enter
stos
ret
and
sti
add
mov
dec
rcrb
fnstenv
out
sub
pop
push
das
sbbb
mov
push
repz
xor
push
jle
inc
pop
arpl
dec
lods
mov
int3
pop
sub
mov
mov
push
mov
scas
jne
data16
and
sbb
jne
mov
cwtl
add
jle
xchg
push
and
sub
adc
lcall
cmpsl
mov
inc
stc
push
jecxz
fwait
jno
mov
movsb
popf
les
int
fistpll
adc
and
add
sbb
das
jmp
scas
cmp
es
fidivrs
cmp
mov
add
mov
xchg
push
mov
add
das
fisubrs
cmp
cmp
loop
lea
repz
stos
iret
jle
pop
roll
out
xchg
xchg
ret
pop
arpl
xchg
mov
mov
or
jno
arpl
add
addr16
xlat
test
push
dec
push
das
jecxz
loope
mov
sub
mov
aad
xor
inc
jnp
adc
arpl
test
mov
xchg
cmpsl
int
test
push
or
in
sbb
pop
lods
das
je
pop
hlt
pop
or
callw
push
adc
sub
jmp
dec
sbb
imul
push
fdivr
jae
loopne
dec
mov
sub
stc
loopne
lea
mov
mov
mov
and
in
insl
fs
ud2
mov
aam
inc
cmp
aaa
or
jp
mov
aaa
cmc
jo
xor
dec
cmp
movsl
outsl
fildl
xlat
jne
data16
mov
xor
ja
out
cmp
xchg
mov
cmp
and
xor
data16
push
xor
push
push
or
pop
adc
jae
sbb
loopne
orb
ss
test
jns
shlb
sbb
sub
xor
aad
cmpsl
push
loopne
mulb
stos
movl
in
jae
imul
repz
and
addr16
cli
outsb
stos
loop
mov
xorb
or
cmp
jne
or
roll
mov
addl
mov
xchg
mov
stos
jp,pn
enter
adc
ret
cmp
into
stos
test
add
cmc
adc
push
adc
arpl
mov
in
cmpb
test
cmpsl
xor
fists
inc
shll
cli
nop
mov
sbb
outsb
inc
dec
iret
sbb
mov
int
xor
inc
loope
mov
jne
mov
outsb
inc
cmp
lea
xchg
sub
mov
shl
dec
std
mov
lahf
sub
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
mov
adc
adc
mov
mov
dec
pop
jl
pop
test
jo
jmp
shlb
xchg
rclb
lea
cltd
ljmp
mov
cmp
mov
and
push
das
cmovg
cmpb
mov
push
adc
call
repz
push
xchg
jmp
imul
push
inc
fistps
outsb
mov
and
in
xchg
lods
push
lea
sahf
inc
les
clc
out
cmp
unpckhps
xor
outsb
xor
cmpsl
out
mov
or
inc
cmp
cmp
imul
dec
xchg
jne
ficoml
cli
sbb
fs
std
notl
and
push
aad
jo
fcomps
mov
aad
sbb
outsb
pop
pop
cmp
lcall
mov
subl
insl
xor
cmp
dec
pop
sub
lods
ds
pop
imul
mov
in
mov
mov
adc
scas
cs
adc
inc
sub
stos
lods
mov
push
leave
push
jge
add
jae
add
jecxz
enterw
xor
push
inc
xor
loope
xor
pop
fs
mov
addr16
fisttpll
pop
fistl
psllw
mov
ds
mov
out
lock
stos
jle
jo
mov
adcl
dec
mov
in
mov
outsb
pop
daa
jo
pop
pop
cmp
inc
xchg
gs
xchg
repnz
mov
shrl
push
sar
mov
cmp
outsb
fildl
or
add
in
mov
nop
pop
stos
xor
jb
arpl
outsb
sbbl
xor
adc
sub
pushf
stos
das
xchg
clc
fwait
shr
sbb
shlb
insb
cmpsb
shrb
iret
sahf
pop
pop
push
mov
jg
sub
xchg
push
pop
jns
sbb
push
aam
fwait
sub
adc
insl
lea
in
repz
inc
out
aaa
in
pop
std
sub
ror
cld
imul
cld
shlb
dec
xchg
pop
and
pusha
ljmp
dec
inc
rcl
jo
xchg
add
cs
rolb
bound
and
aad
sbb
cmp
je
sbb
push
aam
roll
ljmp
cmp
inc
iret
xchg
sti
mov
jl
mov
pop
lret
mov
mov
push
or
test
mov
loopne
xor
jns
push
inc
or
inc
stos
lahf
ja
mov
mov
jae
aaa
hlt
mov
sbb
pop
push
movsb
loope
xchg
call
adc
sbb
pop
mov
xorl
test
lret
in
movsb
mov
lods
pop
fwait
jmp
insl
je
mov
mov
shl
decb
mov
mov
popf
jl
into
xorl
xchg
testb
xor
lds
pushf
scas
stos
test
mov
mov
mov
stos
or
jno
add
add
add
std
lret
aad
scas
add
scas
cmp
jbe
xlat
ret
shl
cmp
inc
and
sarb
lds
jmp
scas
cmp
add
add
int
add
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
adc
shlb
loop
push
sbb
sub
adc
jae
mov
lods
jg
cmp
scas
out
enter
icebp
stos
add
sti
repz
rcrl
subl
and
aam
jle
mov
jno
outsb
adc
subl
addr16
inc
pop
insl
jle
rclb
pushf
xor
test
fidivl
inc
mov
pop
into
stos
in
jecxz
jns
ftst
inc
insb
icebp
jmp
cmp
xorl
fstpt
push
or
mov
out
cmpsb
inc
pop
xchg
int
shl
fcom
and
repnz
cltd
push
pop
xchg
aam
xchg
repz
outsb
mov
cmp
cmc
and
xor
lret
mov
pop
add
nop
les
in
faddl
add
addr16
cld
enter
xor
mov
in
inc
jnp
add
ja
daa
fwait
inc
sub
inc
outsl
pop
das
push
lock
pop
adc
mov
in
push
popa
je
push
shll
fstl
pop
inc
std
cwtl
dec
scas
sub
jnp
and
inc
lock
sub
fs
xchg
hlt
out
mov
add
jge
cmp
mov
xchg
add
add
fmuls
cli
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
