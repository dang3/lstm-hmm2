push
mov
sub
mov
jmp
incl
shlb
fs
ret
jle
jle
cwtl
jg
jle
xlat
cmp
ror
pop
add
movq
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
and
dec
add
xor
jnp
xchg
out
jg
inc
test
roll
mov
mov
pop
in
fwait
int3
mov
lret
fldcw
in
sbb
push
push
mov
xchg
inc
popf
xlat
pop
cmc
dec
mov
pop
jle
xchg
xor
or
or
sbb
cmp
popf
inc
sub
inc
fxch
sub
fisubs
popa
or
loopne
popa
enter
add
ss
sar
ret
cli
or
bound
push
ret
adc
loopne
push
xchg
stos
ljmp
mov
pop
sub
adc
dec
sub
outsl
push
notl
pop
ds
lret
jbe
movsl
inc
ret
loopne
ja
hlt
dec
sub
mov
lret
movb
icebp
pop
mov
imul
jp
sahf
dec
adc
mov
pop
sub
imul
adc
in
adc
mov
mov
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
mov
mov
jae
sti
xchg
xor
dec
jecxz
aas
and
scas
call
xor
push
cmp
pop
mov
adc
jbe
mov
pop
loope
fs
negb
les
pop
movsb
and
bound
scas
xchg
loope
push
fimuls
test
mov
mov
loopne
out
cmp
mov
daa
sub
fnsave
rorb
sub
call
jns
jle
je
dec
cli
xchg
jg
adc
add
sub
push
mov
hlt
rorb
scas
and
int
lret
jns
cltd
scas
test
jp
imul
sbb
andb
dec
aam
cmp
xor
mov
or
lahf
call
loop
aas
insb
jnp
rcr
orb
jle
stos
add
test
jbe
or
add
xor
mov
add
or
mov
push
inc
mov
aam
mov
sbb
or
mov
and
sub
mov
ljmp
mov
fimull
jg
mov
adc
outsl
repnz
lea
outsl
pop
mov
pop
inc
mov
test
cmp
mov
jae
sbb
xchg
jno
push
pop
jne
add
cs
jp
roll
dec
fisubl
lahf
xchg
popa
out
stc
cmpsl
mov
cmp
dec
cld
movsl
sub
insl
push
mov
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
repnz
jge
jle
jg
jle
push
in
lcall
test
insl
or
xor
xchg
std
mov
fcmovb
loope
shll
dec
in
mov
push
cmp
aad
inc
xchg
sbbb
testl
pop
pop
lret
shlb
mov
dec
pop
mov
jle
pop
jg
cmpsl
in
pop
negl
inc
movsl
stc
pop
xchg
inc
ss
or
pop
clc
xor
rcll
sub
mov
sub
jge
cmp
int3
ss
dec
cmpsl
lea
aad
loop
push
insb
and
shl
pop
xlat
hlt
gs
es
lock
dec
dec
and
fmulp
mov
pop
ret
mov
inc
repnz
int
std
ja
frstor
call
pop
lcall
sbb
mov
and
flds
sbb
pop
movsb
mov
into
xchg
xchg
gs
scas
sub
orb
mov
pop
mov
iret
loope
out
fs
int3
add
sbb
js
jg
sub
fucomp
fstpt
dec
jl
xor
or
or
pop
or
sub
ja
mov
cs
lds
inc
xchg
jae
popf
sub
adc
mov
xor
adc
mov
xor
popa
dec
sbb
ja
and
cmp
lock
clc
shll
addr16
cltd
shl
or
or
movsb
sbb
outsb
xor
and
xor
cltd
dec
jp
aaa
sti
sahf
repz
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
loopne
jecxz
jp
jle
jg
jle
and
mov
daa
movsb
lret
invd
lock
pop
fidivl
xchg
cmp
push
mov
push
cmp
repnz
sbb
aas
test
cmpsb
lds
imul
outsb
jmp
iret
cmp
aad
iret
outsl
test
loopne
bound
add
fiadds
gs
repz
pop
dec
dec
fwait
pop
movsb
mov
inc
cmp
addr16
jmp
mov
test
inc
loop
jb
xor
cwtl
jge
mov
scas
push
fistpll
mov
inc
add
xchg
xchg
inc
xlat
pop
mov
rcll
cwtl
cmpl
andb
sub
out
mov
out
xor
jnp
xor
dec
mov
and
adc
adc
jp
pop
lret
xor
sbb
vmread
fidivl
mov
pop
push
cmpsl
cmp
in
mov
mov
dec
hlt
add
mov
xchg
shrb
js
testl
sbbb
rorl
popf
dec
xchg
cmp
pusha
sbb
imul
outsl
in
add
test
lds
out
jb
cmp
dec
ljmp
xchg
cmpsl
clc
push
jno
jle
ljmp
sbb
cmp
mov
lcall
lods
fwait
push
test
xchg
lret
cmpsl
sbb
inc
pop
idivb
dec
jne
repz
je
mov
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
jnp
adc
or
js
rcll
xlat
lea
add
dec
sti
adc
aaa
xor
sub
repz
iret
fstpt
cmp
decl
fists
aaa
push
sbb
test
ret
daa
sbb
push
dec
mov
mov
adc
into
in
inc
jns
mov
in
into
ja
fs
dec
pop
in
adc
xchg
push
loop
mov
fsubrs
repnz
lds
cmp
xor
je
fwait
jl
fistl
sub
sbb
inc
into
mov
mov
shll
jmp
lea
mov
jle
ret
mov
lahf
mov
inc
push
cmp
xor
dec
sbb
xor
xchg
lret
sti
add
dec
test
inc
insb
test
pop
fdivs
test
imull
add
outsl
sbb
sbb
das
sbb
ljmp
dec
arpl
cli
rol
outsb
or
sahf
imul
jl
jb
xor
xchg
cmp
or
insb
in
cltd
adc
sbb
adc
stc
fisttps
push
rep
fisubrl
adc
dec
out
jecxz
addb
xor
pop
dec
add
dec
xchg
sbbb
mov
mov
adc
cmp
inc
jl
mov
imul
pop
jg
imul
inc
shrb
ret
arpl
adc
pop
aas
int3
adc
inc
lock
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
and
xor
jle
cwtl
jg
jle
dec
cmp
mov
rcl
mov
mov
mov
mov
gs
lahf
repz
mov
xor
out
push
cld
sbb
inc
add
pop
jns
mov
dec
in
cs
aaa
out
orb
pop
mov
movsl
repz
daa
adc
mov
loop
mov
cmp
js
nop
inc
es
cs
int3
push
xchg
sub
shrb
fs
xor
sbb
sbb
xchg
lock
mul
idivb
mov
inc
cli
ficoml
lret
negl
test
sti
push
mov
stos
stos
mov
imul
inc
mov
pop
and
xor
cwtl
xor
lcall
mov
lods
xlat
xchg
add
rcrl
mov
mov
clc
cltd
dec
ljmp
insb
mov
dec
cmc
adc
xor
xor
repnz
add
cli
repnz
mov
xchg
jbe
push
movsb
mov
shlb
in
adc
fld
mov
lea
jl
sub
imul
xchg
mov
jo
movsb
cmpb
adc
mov
sbb
cmp
or
mov
adc
pop
js
jge
movsb
je,pt
xor
fisttps
or
pop
sub
xchg
shll
test
out
scas
push
cmp
fnstsw
add
jecxz
mov
sub
clc
dec
xchg
dec
ljmp
mov
push
jmp
push
es
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
and
mov
pop
pop
jle
cwtl
jg
jle
and
dec
inc
xchg
test
mov
stos
jmp
mov
sub
fimuls
push
in
daa
mov
jl
inc
adc
and
sub
test
lods
cs
insb
pop
adc
jns
gs
inc
in
mov
xchg
jns
test
pusha
sbb
js
sub
xor
sbb
jg
dec
mov
call
dec
scas
push
pop
cli
mov
jns
adc
push
add
cwtl
adc
push
mov
pop
testb
push
cmpsl
pushf
or
jecxz
xor
xchg
mov
cmp
cld
cmpsl
cmp
shll
xor
jl
mov
and
xchg
cmpsl
imul
or
and
insb
pop
ja
in
lea
lcall
mov
clc
sti
shl
inc
fdivp
aaa
add
ja
dec
pop
lcall
jp
inc
ret
xchg
mov
pop
cmc
idiv
outsl
jnp
xor
mov
pop
mov
test
xlat
adc
in
rcl
fisubl
mov
sub
add
mov
cmpb
pusha
adc
stc
mov
push
xor
aaa
popf
jns
test
push
mov
mov
mov
mov
out
jo
iret
xor
dec
add
adc
test
or
cwtl
sub
shlb
inc
sbb
jg
push
mov
xor
add
leave
lods
xor
lods
fidivl
cmp
rol
adc
int
and
shll
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
xor
jle
push
jg
jle
cwtl
insb
push
bound
ret
sub
fstpl
xchg
lea
popf
imul
push
dec
jmp
jle
stos
shll
xchg
jnp
xchg
mov
inc
scas
pop
pop
jae
sub
mov
stc
add
push
jne
das
sbb
pop
adc
pusha
dec
inc
mov
push
adc
test
pop
shll
cmp
adc
fsubrl
mov
sti
addr16
push
pop
imul
push
push
out
in
es
jo
data16
mov
pop
jb
rcll
mov
inc
and
decb
jno
aaa
inc
sub
lret
popa
lcall
sub
rol
testb
and
sub
cmp
and
bound
mov
mov
add
jmp
add
pop
fisubs
sub
and
aaa
pop
lods
push
xchg
or
mov
and
push
and
lods
inc
pop
frstor
adc
bound
inc
and
jge
sub
test
iret
pop
xchg
outsb
lods
pop
cmp
adc
mov
lcall
pop
mov
sbb
iretw
test
or
ficomps
sbb
rorl
mov
cs
shrb
push
jae
fwait
lcall
test
out
orb
out
stc
addl
add
inc
mov
data16
mov
inc
jp
outsb
cld
jbe
mov
sarl
mov
mov
jmp
aad
push
pop
repnz
cli
push
push
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
push
fs
leave
fildl
jle
push
jg
jle
mov
shll
les
shll
addr16
cmp
sti
or
outsb
xchg
mov
cmpsb
lcall
pop
pusha
mov
and
sub
adc
shrb
mov
cli
cmpsb
xacquire
rcr
pop
mov
dec
in
shlb
jmp
sbb
mov
xor
add
fsub
scas
out
lds
sbbl
int
jbe
rcll
add
or
pushf
into
cmp
out
inc
inc
outsb
and
cs
dec
and
mov
sub
pop
jp
or
cmp
in
xchg
scas
or
nop
sbb
test
cmc
andb
sub
je
pusha
jmp
xor
inc
xchg
popa
and
add
shll
pushf
aad
cmp
jb
loopne
imul
pop
sbb
stos
loope
mov
sbb
cmp
adc
bound
dec
cmc
in
add
ret
jno
movsb
cwtl
or
iret
addr16
cltd
gs
xchg
imul
repz
push
out
daa
cmc
sbb
enter
push
or
test
or
ja
mov
clc
fnstcw
sub
xor
mov
or
push
push
xor
pop
jno
push
clc
addb
mov
mov
mov
ficompl
loope
mov
jno
mov
adc
data16
sub
pusha
xchg
sub
jmp
fldt
lret
add
sbb
xor
rcrb
mov
les
sub
xchg
movsl
loop
ja
ja
inc
adc
push
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
dec
and
add
push
jg
jle
mov
lret
adcb
mov
mov
shl
cmp
mov
pop
aaa
sub
cwtl
sarl
pop
ljmp
jae
xchg
imul
mov
dec
lret
insl
fcoms
sub
outsl
imul
insl
pop
cwtl
pop
loop
clc
sbb
fucomp
es
ret
cmp
and
int
mov
lock
adc
arpl
aas
pop
lods
xor
mov
insl
or
rorl
cwtl
nop
rclb
push
cmp
mov
or
dec
xchg
mov
jno
rcl
sbb
xchg
jmp
jno
dec
loop
add
push
pop
xorl
pusha
xlat
and
sub
ja
inc
mov
pop
test
pop
adc
xor
gs
rol
call
sbbl
not
cmp
xchg
imul
mov
mov
push
sbb
dec
mov
lea
sbbl
pushf
cld
jne
add
and
push
jns
xchg
pop
or
add
ljmp
xchg
sbb
out
pop
xor
test
jmp
daa
dec
and
aas
lds
add
mov
lods
add
outsl
je
nop
addr16
jns
xor
push
or
insb
sub
es
movsl
repz
xchg
inc
out
add
loop
dec
mov
das
push
bound
and
jns
add
in
mov
xchg
add
mov
fistpl
or
add
fbstp
push
mov
mov
xchg
xchg
std
and
dec
push
cmc
mov
xchg
xor
jge
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
movd
jg
jle
pop
fiaddl
mov
push
popf
mov
mov
mov
insl
ss
je
scas
test
leave
clc
dec
mov
or
mov
push
sub
jecxz
dec
cli
pusha
es
ret
ss
ror
cmc
int
inc
pop
jecxz
mov
mov
push
dec
cwtl
femms
leave
add
sub
add
popf
jg
jo
inc
inc
pop
insl
or
out
dec
cmpsl
jl
mov
mov
sbb
adc
pop
cld
mov
and
loop
loop
sbb
lcall
std
jne
ljmp
cltd
sbb
imul
dec
mov
mov
xchg
or
and
sub
stos
iret
push
stc
movsl
jne,pt
lret
das
imul
popa
jp
mov
or
js
and
ret
pusha
jb
loop
shl
inc
mov
add
fwait
jns
push
or
inc
into
or
xchg
xchg
adc
add
inc
clc
call
out
mov
mov
or
sub
divb
mov
lea
insl
addr16
cmpsl
push
test
xchg
mov
adc
das
movsl
shl
push
mov
cld
xor
in
push
loopne
out
in
or
scas
pusha
fcomps
cld
inc
sbb
out
fcmovnbe
lock
ret
icebp
add
dec
icebp
test
daa
int3
adc
shrb
jge
mov
sbb
jnp
fildll
lahf
data16
test
ds
aaa
cmpsl
out
ds
js
inc
out
or
or
mov
jl
cmp
aad
mov
push
divb
add
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
cmpsl
push
jg
jle
lock
cmp
pusha
inc
jns
outsb
cmp
ljmp
add
xor
scas
xchg
xor
popf
fistpl
insl
jns
mov
addl
mov
push
in
mov
mov
pop
mov
fisttpl
call
lods
dec
ljmp
imul
add
sbb
push
pop
mov
aam
mov
test
clc
jecxz
hlt
mov
pusha
inc
outsb
cmp
sub
popf
repz
mov
mov
push
int
mov
imul
lods
cli
jae
ds
mov
inc
or
pushf
scas
adc
jl
and
dec
lret
jle
mov
mov
mov
or
cmp
cmp
add
fadd
arpl
shrb
push
xchg
ret
and
mov
or
inc
dec
cmp
mov
dec
or
inc
add
xchg
ror
adc
xchg
out
inc
stos
jmp
inc
daa
iret
mov
mov
mov
push
adc
lods
sahf
pushf
addb
int
das
mov
add
jbe
aad
or
jl
pop
xchg
sub
shll
add
hlt
adc
shlb
xchg
xchg
arpl
imul
lock
aad
addl
lods
cmc
jg
mov
push
xor
fisttps
cmpsl
cli
and
jmp
jno
mov
add
xor
lock
push
jb
shll
nop
scas
dec
hlt
mov
rclb
icebp
sarb
test
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
mov
add
jle
push
jg
jle
pop
dec
add
shrl
out
push
test
outsb
add
xchg
push
mov
int
leave
mov
dec
dec
aad
scas
add
loope
xchg
rcrl
leave
imull
or
mov
js
push
xchg
mov
sub
jb
outsb
xlat
push
jne
adc
into
fs
xlat
jbe
mov
and
fisubs
jnp
aaa
and
jecxz
mov
jns
insl
shr
jbe
shl
pop
push
push
cwtl
jns
xchg
pusha
jb
aaa
data16
mov
mov
pushf
or
or
adcb
out
in
stc
fcmovbe
enter
sahf
sbb
es
push
std
sarl
push
dec
dec
jmp
fiaddl
pushf
ja
aas
dec
addr16
inc
lock
rclb
ret
fisttps
les
pop
test
aad
adcb
rclb
loop
shll
mov
lds
xchg
ja
loope
jle
xchg
push
pop
mov
ja
sub
leave
pop
clc
dec
dec
push
es
pop
subl
lock
mov
int
sub
sbb
lock
jg
or
fldcw
lcall
cwtl
push
cmpsb
mov
ja
xchg
xchg
inc
dec
sahf
shr
leave
lret
and
fucom
in
xchg
mov
sbb
fcmovu
add
fisubs
icebp
mov
sti
xchg
lea
sub
inc
fwait
ret
out
pusha
insb
and
lret
lock
in
mov
xor
aaa
es
call
insb
fildl
mov
sub
test
lret
test
sub
enter
mov
pop
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
mov
or
scas
jg
jle
xchg
mov
repnz
and
push
dec
jmp
inc
or
lods
or
loopne
push
inc
push
mov
sbb
dec
gs
int
decb
mov
rcrl
dec
adc
mov
sub
rcll
cmp
mov
push
push
xchg
mov
xor
nop
iret
dec
lock
sub
sub
inc
xor
jmp
jg
xchg
jne
lods
int
fcoml
std
mov
fidivl
lret
or
add
push
mov
clc
dec
sub
cmc
push
push
mov
sbb
inc
lret
sub
cltd
inc
inc
cmp
lcall
stos
or
jns
inc
mov
cmp
xchg
leave
nop
je
or
and
mov
jbe
fs
mov
enter
jl
sub
xor
lcall
lret
ficoml
xchg
pop
mov
scas
mov
mov
push
enter
fstp
lret
shlb
cmc
ret
dec
sbb
ss
scas
ficoml
jl
in
out
xchg
inc
mov
sub
jnp
addb
loope
int
lahf
clc
ljmp
in
mov
stc
add
jo
push
stos
adc
aam
andl
test
xchg
insl
mov
mov
lea
sub
jbe
loopne
jl
or
sarl
out
xor
inc
xchg
sti
add
fstps
pop
add
stc
and
je
add
inc
clc
xor
lock
outsl
in
inc
add
or
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
sbb
adc
rclb
jle
scas
jg
jle
mov
stc
xchg
shr
push
xor
popa
mov
xor
xchg
mov
mov
mov
nop
adc
bound
int
or
cmp
pushf
xor
fdivrs
iret
sbbb
xor
dec
lods
enter
stc
xor
mov
std
sub
or
inc
push
sub
sub
lock
movsb
mov
testb
aam
into
push
xor
mov
outsl
adc
das
add
push
inc
negb
fs
add
ss
cmp
dec
push
push
xchg
adc
cmc
mov
inc
xchg
mov
inc
sbb
dec
aaa
push
in
test
shlb
into
xor
xchg
push
pop
add
lcall
and
scas
addr16
imul
fmulp
mov
insb
test
push
fld
push
mov
mov
loopne
push
jne
sub
into
in
xor
stos
xchg
xor
add
cmpsb
jnp
mov
xor
push
cs
sti
inc
jg
mull
and
sbb
fwait
in
mov
or
sbbb
add
aas
xchg
call
push
test
fld
cs
out
imul
loop
into
jo
dec
jae
arpl
cmpsb
cmp
test
lock
sbb
cmc
xchg
push
in
inc
lret
inc
jmp
data16
inc
movsb
cmpsb
sbb
cwtl
fs
in
or
add
cmp
leave
pop
and
sub
adc
mov
xor
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
lock
fiaddl
adc
jle
jg
jle
sub
aas
jecxz
push
jle
fcoms
push
xor
repnz
push
mov
test
jmp
ret
ret
inc
popf
popf
inc
stos
rep
xchg
lea
gs
dec
mov
and
jmp
sub
rcll
aad
sbb
aaa
mov
fs
out
push
mov
inc
sahf
lret
sub
jae
mov
je
push
cltd
movaps
mov
out
ss
cwtl
sahf
shll
test
cmpb
ret
pop
cs
inc
adc
aad
pusha
add
cltd
repnz
cmp
cltd
insb
sub
outsb
mov
mov
lock
jp
xchg
les
dec
jle
pop
add
cli
xchg
sub
out
andl
push
xor
ds
and
testl
cmp
std
mov
daa
mov
mov
addl
xchg
pminub
testl
fmul
cmp
subb
lods
in
mov
icebp
jge
les
aad
xor
scas
sbb
push
mov
fdivrp
fcomip
push
push
xchg
or
dec
cmp
mov
test
test
jae
pop
and
jle
or
test
jle
stos
xchg
xor
jb
and
jl
xchg
mov
int3
sti
mov
lahf
mov
fbstp
add
aad
xchg
rcl
push
pop
or
fsubl
jne
jmp
pop
lods
pop
push
mov
xor
sbb
xlat
lret
in
cmp
xor
aas
sbb
lods
sub
movsb
movsb
outsb
cld
xchg
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
and
jle
scas
jg
jle
push
mov
les
aaa
fdivrp
mov
sti
xchg
in
mov
aaa
cli
jecxz
ffree
xchg
int3
push
cmpb
push
cwtl
add
and
sub
sub
inc
pop
pop
mov
jae
push
ljmp
sbb
fildll
and
fsts
jmp
stos
dec
out
and
sbb
mov
mov
push
sbbb
push
outsl
push
push
xchg
cmpsb
push
push
adc
sarl
jo
adc
sub
aas
or
inc
pop
adc
mov
mov
daa
lahf
imul
cmpsb
cmp
mov
xor
pop
mov
add
pop
sub
test
inc
push
jne
xchg
imul
jns
mov
imul
iret
inc
stos
data16
xlat
mov
bound
clc
mov
cmpb
mov
and
ljmp
mov
sarb
jg
pusha
lea
outsl
add
mov
loop
and
cli
xlat
add
test
mov
out
cli
inc
mov
push
sahf
pop
sbb
hlt
stc
sbb
xor
repnz
or
dec
xchg
or
mov
inc
daa
jbe
push
or
js
out
mov
out
dec
pop
les
rcrb
lock
sbb
and
and
add
pop
cmp
jg
cmp
sahf
sub
test
and
cmp
dec
mov
xor
add
jmp
jl
mov
mov
jge
fldl
call
xor
adc
scas
jg
jle
xchg
int3
lahf
mov
stos
or
adc
sub
adc
pop
fwait
cmp
pop
int3
mov
aam
add
jl
inc
jo
call
movsb
movsb
xor
mov
or
and
loop
or
fisubl
rorb
dec
jo
sbb
xchg
dec
jne
push
push
mov
and
in
and
lea
mov
ret
sbb
cmp
inc
pop
mov
xchg
shll
push
mov
jge
inc
js
stos
out
push
push
clc
sbb
popa
cmp
xchg
xchg
jns
sbb
ljmp
mov
cmp
sub
xchg
lret
sbb
stos
pop
cmpsb
mov
outsb
xchg
add
mov
push
fwait
pushl
jle
dec
inc
push
jo
pop
mov
sbb
into
stc
or
mov
clc
mov
mov
fucomip
sbb
push
in
mov
in
xchg
inc
cli
mov
aam
xchg
lret
mov
mov
lds
add
xchg
lea
and
into
or
cld
inc
inc
mov
sub
mov
push
dec
dec
xor
jmp
enter
decb
push
sbb
push
jno
xor
dec
movsb
mov
lret
xor
push
pop
dec
stc
cmp
pop
sbb
push
ficomps
fildl
cmpsl
sbb
adc
cmp
aaa
push
lahf
int
mov
add
fs
repz
shll
mov
adc
lds
arpl
in
adc
addr16
stos
test
inc
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
popf
mov
shll
mov
movsl
cmpsb
js
pop
xor
xor
xchg
cmp
xchg
fisttps
xchg
fimuls
sub
push
sbb
data16
hlt
push
fldenv
sub
movsw
push
mov
or
sub
daa
rcrl
mov
push
sbb
push
shl
inc
aam
ljmp
ret
pop
jnp
xchg
and
xchg
xchg
addl
out
inc
testl
ss
lret
or
in
dec
rcll
sbb
and
push
insl
xchg
icebp
cld
out
aaa
stos
jb
fstpl
rclb
cmp
aas
cmp
mov
fldcw
mov
mov
mov
inc
mov
sbb
ret
cmp
movsb
mov
mov
dec
sbb
rolb
fistpll
and
int3
std
or
jle
les
aas
int
rolb
lcall
xchg
lahf
push
jmp
pop
arpl
mov
sub
daa
fcom
mov
mov
pop
push
or
sbb
jns
jo
aaa
shlb
mov
xchg
into
fs
int3
sbb
xor
arpl
dec
cmp
jb
push
lcall
xchg
sub
push
mov
cmpsb
ror
ds
aaa
pop
lcall
stos
ficomps
pop
sbb
or
push
mov
sub
mov
out
dec
sbb
cli
xchg
sbb
xor
incl
jo
ror
jae
xor
mov
or
inc
je
movl
jmp
scas
or
xor
mov
pop
xchg
add
jle
scas
jg
jle
fadds
adc
sbb
test
xor
xchg
insb
jge
repz
andb
pop
imul
in
nop
pop
add
loope
cld
sub
jno
and
stc
jecxz
outsl
adc
pop
cmpsl
lods
ret
inc
loopne
xchg
sahf
aam
int
imul
repnz
sbb
lret
jbe
incl
add
das
je
dec
inc
test
and
adc
sbb
push
sub
sbb
sub
lods
mov
push
push
insb
dec
in
and
jb
add
stc
mov
sti
sbb
test
inc
imul
out
ss
popa
jbe
addr16
mov
outsl
mov
test
int3
insb
mov
cmp
cmpsl
cmp
or
cmp
in
mov
mov
imul
push
lods
aad
fmuls
jp
cmpsb
mov
dec
jnp
fists
pop
lcall
or
pop
dec
jg
mov
and
pop
sub
and
pusha
repz
push
fcompl
add
inc
sub
ret
cmp
add
test
pushf
lods
cmp
sub
fcmovne
sbb
xchg
mov
mov
mov
mov
dec
sub
mov
push
sbb
repnz
push
out
imul
ret
mov
rorb
sub
bound
lock
xor
movsl
add
jae,pn
push
iret
inc
mov
das
sbb
xchg
iret
inc
call
call
inc
in
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
out
sub
fcoms
sarb
iret
xchg
lods
and
pop
aas
nop
push
ljmp
adc
leave
bound
sbbb
movb
sbb
and
test
aad
push
dec
ljmp
sbb
jg
data16
mov
insl
pop
dec
xor
lds
mov
enter
add
adc
jge
push
push
mov
lea
sarl
sub
outsl
enter
add
mov
out
lds
stos
mov
push
movsb
xchg
stc
mov
test
loope
sbb
bound
dec
mov
daa
fmuls
nop
mov
push
cltd
adc
mov
es
inc
out
hlt
scas
out
adc
arpl
mov
lret
in
popf
dec
das
mov
mov
iret
test
xchg
ret
xchg
add
add
adcb
pop
jmp
in
pop
loope
test
push
mov
inc
add
das
mov
pop
test
jb
sbbb
cmpsl
jne
jno
dec
mov
out
inc
sahf
sbb
movsb
test
adc
or
push
out
mov
scas
lret
mov
and
xchg
imul
cmpsl
pop
dec
std
notb
inc
fistl
rclb
gs
push
std
add
xor
sbb
mov
jno
call
and
sub
cmp
push
rcl
ja
fwait
xchg
dec
dec
sar
add
lcall
adc
and
push
or
shr
add
add
lahf
dec
insl
dec
imul
and
jae
jmp
jle
jg
jle
shll
mov
daa
lods
popf
cld
into
ljmp
push
adc
repz
xchg
lock
xchg
std
por
mov
shrb
mov
jmp
cmp
subl
or
push
dec
jmp
sbb
xchg
sbb
sbb
imul
sarb
jne
jno
adcb
adc
cmp
fdivr
sbb
sub
cwtl
nop
sti
cmp
cwtl
pop
add
mov
fisttpll
sub
clc
push
nop
sti
inc
inc
sbb
push
and
jmp
jbe
or
popa
sub
and
jbe
popf
loopne
mov
sbb
aaa
sbbb
mov
jnp
ret
popf
inc
cmpsb
mov
fidivrl
dec
imul
push
pop
sti
cwtl
jbe
mov
rcr
add
gs
dec
rcrl
mov
dec
jmp
pop
and
ror
mov
dec
mov
inc
ror
cltd
loope
arpl
or
adc
lcall
ret
adc
lahf
jmp
or
and
andl
push
mov
pop
jmp
das
dec
loopne
lea
cli
push
sbb
push
aas
icebp
push
int
xchg
sbb
push
movsl
fdivrl
pop
mul
cwtl
inc
pop
xchg
stc
hlt
in
ds
in
ret
mov
xchg
aad
fcmove
lret
push
add
fyl2xp1
mov
sbb
xchg
cmc
jno
mov
fucom
fadds
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
xlat
fstpl
push
sbb
cltd
jg
jle
out
outsb
inc
pop
sub
aad
jmp
shlb
js
and
cmp
mov
hlt
adc
repz
lock
les
scas
sbb
mov
pop
push
scas
dec
lea
mov
adc
fsts
hlt
pop
pop
lahf
movsb
jae
push
ss
jl
xor
adc
mov
adc
lahf
pop
roll
mov
icebp
je
cltd
mov
sbb
xchg
icebp
sub
clc
dec
sarl
pop
icebp
out
mov
push
pop
bound
and
cld
lods
lods
jl
sbb
or
nop
jnp
jp
cmp
fisttpl
dec
and
outsb
fnstenv
popa
lcall
hlt
das
and
and
adcb
xchg
sbb
and
sbb
shll
mov
push
std
cmc
loope
scas
mov
dec
rcrb
add
dec
sahf
rcll
mov
cmp
cmp
adc
fs
lret
loop
pop
mov
data16
sbbl
jbe
xchg
scas
xchg
ret
push
ret
out
in
ds
adc
out
test
lret
imul
div
jle
push
fwait
incb
insb
pop
out
mov
sbbb
mov
fidivl
out
cld
jmp
sub
sbb
sti
jae
push
or
out
loope
fistl
lock
jo
pop
jmp
xor
insb
jns
jg
ja
das
pop
mov
int3
daa
jne
xor
cwtl
dec
outsb
movsb
push
test
imul
inc
cld
xor
cld
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
data16
sbb
cltd
jg
jle
cmpsb
xchg
push
and
cmpsl
shlb
dec
cmp
mov
xlat
scas
leave
xchg
jle
test
scas
cmp
and
xchg
and
ret
stos
add
cli
std
push
or
aaa
repnz
nop
lds
inc
dec
lahf
push
fnstsw
int
testb
inc
popa
jmp
mov
jge
lds
push
es
pop
add
mov
mov
or
insb
xor
jo
cmp
sub
xor
mov
cmp
in
or
add
sub
adc
fimuls
cmp
pop
fimuls
push
mov
fwait
add
loopne
repnz
jne
nop
mov
xchg
iret
daa
xor
stos
push
jg
jno
jmp
lds
test
shll
sbb
inc
mov
insl
std
xlat
and
xchg
dec
fmuls
divl
cmp
fisubl
cmp
andnps
jnp
pop
ds
fistps
jnp
sbb
sbb
inc
and
dec
sub
mov
das
adc
dec
xchg
adc
hlt
ret
mov
jo
shlb
push
popf
jle
in
in
mov
sbbl
pushf
lret
pop
cli
or
out
out
cmp
or
inc
mov
lcall
cwtl
inc
jo
dec
and
je
dec
or
aaa
aaa
leave
or
pxor
out
pop
pop
js
xchg
jmp
clc
aad
jns
push
mov
mov
push
fcomps
hlt
add
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
es
and
jle
xchg
jl
jle
outsl
push
mov
in
lods
jne
mov
push
push
sub
cld
xor
ja
xchg
jmp
dec
insb
push
dec
dec
add
lahf
dec
add
mov
rclb
xchg
cmp
lahf
clc
lods
popf
jno
sub
jmp
push
pop
js
in
cmp
push
cmp
xor
mov
inc
sbb
icebp
or
lods
stos
jmp
inc
mov
mov
xchg
mov
add
push
pop
cmp
sub
dec
rclb
sub
mov
popa
aad
mov
ror
bound
jle
ja
dec
test
rolb
jge
inc
sub
mov
shll
sbb
and
jecxz
cmp
mov
cmp
jg
push
push
fdivs
dec
dec
maskmovq
mull
mov
fidivs
add
pusha
lods
and
fimuls
loope
inc
adc
cld
jge
sti
imul
out
mov
lahf
out
test
or
jno
xchg
ljmp
mov
mov
and
inc
cmpsl
fisubrl
mov
lcall
sbbl
add
cmp
adc
and
sbb
inc
jl
ds
and
cmp
add
xchg
sub
mov
orl
xchg
in
testl
jl
out
push
pop
sbb
jo
xor
mov
xor
enter
cmp
or
sub
inc
adc
popf
jle
clc
push
in
add
cli
int3
xor
jo
outsl
ljmp
mov
aad
sub
add
stos
sbb
dec
sti
inc
es
test
cmp
xor
dec
mov
or
lret
mov
popa
push
repnz
pinsrw
jns
lea
fistl
sub
lods
mov
inc
push
pop
cmc
dec
mov
inc
negb
inc
xchg
dec
adc
jl
xchg
inc
adcl
lds
cmc
mov
cmp
jo
push
les
lods
addl
dec
cmc
push
lods
addr16
adc
iret
nop
icebp
repz
fdivrp
pop
lret
push
push
push
sbb
add
scas
lahf
adc
ret
mov
std
and
mov
push
pop
xlat
rcrl
jl
clc
adc
jmp
sub
imul
jl
fisubrs
mov
test
add
cmp
and
add
add
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
aad
fdivp
inc
and
jle
test
pop
push
scas
lcall
cli
xchg
aad
and
out
arpl
inc
add
mov
jb
xchg
xor
sub
rcrl
dec
mov
mov
pop
dec
andb
push
adc
movb
leave
or
and
test
mov
fdivrs
in
xchg
push
add
mov
xchg
cltd
lcall
jno
mov
cmp
fbstp
aaa
enter
pop
into
ror
rorl
and
adc
imul
lret
add
in
add
cmp
pop
scas
mov
xchg
push
lods
movsl
cmpsb
or
adc
cmc
mov
xlat
and
cmp
repnz
add
pushf
mov
dec
ret
xlat
in
mov
icebp
push
pop
ss
mov
xchg
call
add
xchg
mov
popf
outsb
dec
icebp
ret
repnz
loope
cmpsb
insl
pop
and
repz
aaa
pop
pop
mov
mov
or
inc
mov
jl
jae
push
adc
cli
stc
js
test
iret
arpl
sub
fidivrs
mov
mov
aas
mov
sbb
add
out
ja
sub
sbb
popa
neg
rcr
movsl
std
inc
mov
cltd
loop
movsl
pop
adc
push
sub
shlb
mov
popl
mov
mov
pop
loop
addr16
aaa
cmpsb
adc
jnp
and
out
fsts
sbb
pop
jae
loop
push
adc
arpl
mov
mov
outsb
jmp
add
sbb
shll
xchg
stos
bound
jnp
pop
dec
lods
dec
movsb
repnz
sbb
push
xchg
add
in
sub
mov
and
pushf
jo
sbb
jp
sahf
adc
test
cli
sbb
jb
fucomip
add
dec
rcl
or
decl
xlat
push
xor
dec
loopne
gs
mov
lret
jmp
insb
push
jmp
fmull
out
cmc
push
insb
push
jg
inc
mov
cmp
leave
push
inc
mov
fsts
add
xor
jnp
imul
lret
pop
fsts
vsubsd
push
test
adc
idiv
lret
push
xchg
and
icebp
mov
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
add
shlb
lcall
mov
dec
in
imul
movsb
das
adc
push
add
imull
sub
insb
cltd
mov
inc
lock
js
cmpsb
mov
jno
mov
and
negl
mov
xor
inc
or
cmpsl
daa
push
lret
lods
jmp
dec
pop
lock
imul
movsb
cli
ds
mov
test
fnstcw
roll
cwtl
mov
rcrb
in
loope
aaa
ss
or
imul
mov
dec
je
bound
and
and
and
stos
sbb
js
popf
and
outsb
lock
jo
dec
dec
xchg
or
cmp
xor
je
xchg
mov
jae
push
mov
pushl
mov
mov
filds
aad
sti
mov
ds
xor
aaa
and
push
or
es
fdivr
cmp
popf
aaa
std
sar
enter
add
xorl
ret
or
out
xchg
xor
mov
xchg
push
ret
dec
mov
subl
mov
hlt
jl
test
in
stos
movsb
cmp
mov
push
inc
loopne
les
xchg
jecxz
mov
test
and
xor
mov
fnstenv
test
insl
jecxz
leave
mov
cmpsl
inc
add
xor
or
push
push
inc
pop
leave
xor
imul
in
or
jl
outsl
pop
test
in
inc
stc
fbld
cwtl
mov
nop
and
imul
sbb
or
mov
mov
into
je
fbstp
sbb
lock
or
xchg
stos
add
mov
sahf
lret
sti
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
fdivrs
jle,pn
outsb
jg
jle
out
les
cld
dec
or
sub
lcall
leave
ljmp
push
push
pop
cmc
pop
mov
cmp
mov
jp
pop
popa
mov
add
in
mov
shll
fsubs
sarl
and
xchg
mov
dec
cmpsl
xchg
mov
mov
scas
sub
aam
test
xchg
jmp
and
mov
pop
pop
pop
sbb
push
xor
jbe
cs
and
lret
jne
aas
mov
inc
loop
lds
pop
daa
or
xor
fistpll
nop
mov
lahf
sarl
popf
lret
pushf
test
das
daa
aaa
dec
shlb
aad
push
jecxz
sub
lcall
aad
xchg
in
jnp
pop
es
mov
das
and
add
js
jg
sbb
push
fidivl
xor
push
push
xor
or
mov
stos
mov
ficoms
cmp
rol
outsl
popa
mov
fsubl
mov
int3
jle
pop
inc
arpl
rolb
and
lods
nop
adc
adc
in
cmp
mov
popl
ret
jl
cmp
out
or
cmp
je
stc
add
rcll
ds
das
fimuls
push
ret
js
in
scas
pop
push
lahf
mov
mov
push
adc
mov
mov
nop
lods
xlat
pushf
inc
loopne
jno
jae
orl
xchg
insl
cmp
fdiv
stos
cmpsl
ficomps
add
insl
mov
scas
pop
fsubr
aam
cmpb
leave
loopne
mov
xchg
mov
and
mov
jo
aad
test
pop
dec
popa
daa
ficoms
push
or
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
loop
dec
dec
sub
jle
jg
jle
rcll
jae
lcall
cltd
and
mov
or
jle
mov
pushf
pop
in
daa
push
mov
repnz
lods
fldl
shll
push
xchg
add
cmpsb
pop
sub
insl
ret
pop
adc
pop
pop
dec
inc
pop
cmp
hlt
bound
cltd
arpl
xchg
or
pop
repz
pushf
xchg
dec
sbb
jb
or
and
mov
pop
shl
sub
jecxz
stos
test
mov
pusha
jg
shrl
test
hlt
out
add
cmpsb
xchg
lock
xlat
in
sbb
scas
xchg
mov
mov
cmc
ss
add
test
push
mov
addr16
movsl
mov
xor
add
and
test
xchg
xor
mov
fstl
outsb
pushf
sbb
out
ret
cmp
cwtl
add
jp
iret
push
imul
dec
dec
xchg
mov
into
dec
cmpsb
cmp
je
mov
jmp
shlb
push
jo
ljmp
push
cwtl
movsb
pop
fincstp
mov
jae
or
sbb
xchg
cwtl
mov
sub
leave
jbe
push
pop
mov
scas
lea
push
push
add
mov
mov
push
aam
mov
push
loop
pop
insl
jmp
call
scas
adc
lret
add
or
inc
stos
pusha
or
and
ja
repz
lods
sbb
jg
xor
lods
or
cmp
je
icebp
je
fidivs
loope
inc
mov
push
jmp
adc
jecxz
ds
lock
aas
or
icebp
in
shl
xchg
push
mov
fidivrs
push
jg
pop
push
pop
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
mov
ss
push
jg
jle
mov
pusha
mov
imul
lea
mov
loope
outsl
in
popa
jmp
xchg
iret
push
rcrb
sub
ljmp
mov
xor
ret
adc
xor
scas
push
js
add
mov
push
mov
mov
push
fistps
test
jnp
les
or
aad
lcall
cld
vmwrite
test
inc
rorb
les
and
aaa
xlat
sbb
sbb
fimuls
cmp
aaa
cmpl
add
mov
pop
mov
push
or
fisubs
jmp
dec
dec
jnp
push
fsubr
pop
sub
mov
clc
or
hlt
cmp
xchg
jg
ret
mov
shr
inc
xchg
add
ja
loop
jp
stc
adc
int3
test
jmp
mov
fildl
sbb
icebp
rcrb
xchg
lds
clc
push
pop
test
popf
push
sahf
sbb
fs
in
fisttpl
ljmp
jnp
pop
dec
xchg
xchg
lea
lcall
mov
adc
rcrb
pop
mov
xchg
mov
fsubrl
imul
inc
push
mov
jecxz
mov
fcomps
inc
and
adc
pop
inc
xchg
pop
mov
sub
mov
rolb
push
and
ret
in
pusha
out
lods
adc
gs
movsl
pop
pop
stos
sahf
xchg
or
stos
ds
aam
xchg
push
inc
xor
lods
push
mov
aad
xchg
fsubrl
daa
and
sti
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
lods
push
xor
jle
jg
jle
stos
movsl
push
inc
addr16
in
push
or
sarl
cmp
cmp
cmp
aam
lcall
popf
push
xor
mov
hlt
ret
out
nop
pop
sbb
je
ficomps
jp
lods
sub
jbe
adc
xor
pop
scas
aam
rcr
arpl
dec
push
je
jbe
ja
mov
movsl
pop
xchg
scas
int3
sbb
inc
dec
in
jo
or
pop
push
adc
sub
push
xchg
mov
mov
add
ds
push
scas
push
shlb
mov
verw
fisubl
sbb
fld
data16
inc
mov
mov
dec
inc
mov
in
das
push
pop
cmp
mov
xchg
dec
sbb
or
sbbb
push
cs
mov
ffree
shrb
test
push
and
adc
xor
std
lahf
jne
cmp
insl
insb
adc
js
sub
cwtl
xor
or
in
aam
jg
and
sbb
ffree
and
mov
jb
in
aam
mov
xchg
pop
mov
xor
test
std
bound
mov
cmpsl
popf
shlb
or
dec
cmp
aas
fcmovnu
outsl
mov
arpl
test
popf
test
je
pop
dec
mov
fwait
pop
ja
xchg
inc
ja
push
adc
push
xchg
in
mov
pop
adc
or
push
jecxz
repz
xchg
mov
fdiv
or
dec
mov
loop
pop
inc
ja
sub
dec
mov
cmp
xchg
or
and
mov
and
les
adcl
mov
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
aam
frstor
sub
push
jg
jle
imul
mov
int3
push
jne
add
sbb
mov
xchg
aaa
inc
push
std
jmp
lea
sub
jp
imul
fisttpl
cld
xor
clc
rcl
xchg
push
mov
xor
idiv
and
scas
mov
xor
adc
pop
andl
imul
insl
test
mulb
lahf
pop
sbb
push
cwtl
lock
cld
cmpl
push
hlt
sahf
xchg
mov
lret
jno
pusha
lret
mov
push
les
mov
movsb
mov
test
mov
pop
pop
jno
repz
mov
pusha
cmp
rcrl
dec
loopne
push
cmpsl
adc
jae
xchg
in
es
and
dec
cld
inc
outsb
mov
daa
loopne
push
stos
hlt
ljmp
adc
inc
dec
into
loop
lock
mov
mov
cmp
cmp
fidivrl
in
mov
iret
rcrl
loop
idiv
int
stos
mov
data16
in
loope
adc
inc
lods
jg
in
mov
adc
js
sub
push
cmp
int3
pop
xchg
mov
add
fstpt
hlt
xor
aam
add
push
shlb
mov
add
inc
mov
push
mov
mov
rolb
js
sub
fcompl
stos
mov
daa
dec
call
push
aas
sub
xor
mov
out
mov
pop
sti
or
jge
xchg
das
imul
lods
dec
fnstsw
dec
xchg
push
out
mov
dec
sub
mov
hlt
adc
mov
repnz
xchg
idivl
mov
push
ret
and
fxch
cmp
inc
lock
pushl
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
mov
aas
inc
aaa
jle
push
jg
jle
and
and
jecxz
outsl
xchg
loope
xor
mov
sar
and
xor
xchg
sbb
and
lods
cmp
lock
stos
icebp
pop
subl
fisttpl
and
outsb
jnp
sti
movsb
xor
mov
sti
popf
xchg
ds
fisubl
mov
xchg
adc
in
or
mov
pop
stos
sbb
mov
or
cmc
sarl
mov
sbb
int
lods
xor
scas
xchg
mov
jge
adc
les
mov
imul
push
xchg
aad
pusha
cmp
jmp
inc
push
xchg
jle
cmp
loopne
pop
lods
add
inc
xchg
jle
mov
rcl
xchg
mov
arpl
aam
mov
cld
dec
fistps
sub
xor
jg
adc
mov
sbb
stos
pop
scas
hlt
ljmp
jne
aam
into
hlt
or
ss
and
cld
fbld
push
leave
pop
pop
pop
mov
das
jmp
pop
adc
push
cmc
fisubl
push
pop
push
jmp
mov
in
fs
push
lret
sbb
aas
sahf
adc
sbb
mov
dec
in
or
jp
mov
dec
clc
xor
xor
lcall
pop
add
and
inc
addr16
adc
sahf
imul
out
add
jbe
dec
inc
sbb
cmp
cmp
scas
push
ljmp
call
bound
or
mov
adc
lock
je
xor
mov
das
cs
inc
imul
gs
mov
je
jmp
jmp
pushf
dec
mov
inc
and
call
jle
push
jg
jle
test
cld
in
add
icebp
stos
ss
adc
std
pop
in
mov
pop
out
rclb
mov
push
cmpsb
ja
cltd
sbb
sub
lea
or
sti
inc
insl
inc
pop
pushf
jg
sub
lret
jecxz
lret
int3
mov
push
jp
mov
mov
mov
dec
fsubp
fcompl
out
roll
adc
inc
sub
jne
es
es
mov
lea
icebp
push
sbb
jns
jne
mov
ds
inc
dec
stos
xor
push
test
xor
jns
and
xchg
ret
sbb
or
xor
xchg
xchg
sbb
xlat
std
xor
sbb
add
data16
scas
fldl
sbb
lahf
add
mov
in
mov
das
stos
cmp
sbb
pop
cltd
data16
xor
aaa
xor
or
add
insb
xchg
or
xlat
mov
insb
pop
pop
sbb
push
fs
push
push
ss
adc
ds
mov
adc
pop
push
lods
lahf
test
divps
lret
pop
jg
inc
xlat
fimuls
and
gs
and
or
rolb
insl
pop
adc
sub
xor
mov
adc
push
xor
xchg
push
dec
cmp
push
dec
and
fs
mov
movl
lahf
dec
fsub
test
pop
and
fchs
mov
imul
repnz
jmp
jnp
mov
fdiv
or
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
jmp
je
icebp
xor
push
jg
jle
gs
inc
sarl
or
into
push
xor
fwait
incb
adc
insb
cmp
pop
add
int3
mov
inc
aaa
sub
cmpsl
mull
xor
fidivl
mov
arpl
mov
dec
pop
std
lahf
leave
jnp
cltd
mov
call
xchg
nop
jbe
push
add
jns
dec
add
ficoms
jl
rcll
dec
jnp
dec
pop
xchg
pop
fwait
movsb
sbb
mov
xor
adc
sub
pop
orb
and
xchg
lods
xor
rcrl
mov
adc
adc
mov
leave
movups
mov
cmp
test
js
cmp
fsubs
mov
xchg
enter
cltd
adc
loopne
push
fwait
jmp
lods
adc
enter
adc
xor
lods
int
add
mov
loop
xchg
push
push
repnz
les
test
jno
int
movsl
hlt
icebp
cltd
rol
xor
pop
push
aad
insb
inc
les
out
xchg
sti
cmp
hlt
mov
addr16
mov
pop
insl
and
sub
popa
ss
adc
les
je
test
negl
jbe
add
mov
cmp
int
cmpsb
nop
mov
insl
and
add
jbe
jecxz
fdivrl
dec
cmpsb
jae
aaa
jecxz
cmp
jmp
sbb
nop
js
int3
mov
dec
icebp
fbld
in
adc
or
dec
mov
testb
or
push
mov
aad
dec
jae
jmp
stc
mov
test
aaa
loop
int3
pushf
inc
aad
scas
out
pop
or
scas
cwtl
adc
ficomps
push
push
jne
jmp
push
mov
dec
sub
enter
push
dec
aam
jle
push
jg
jle
mov
mov
sti
and
movsl
mov
or
arpl
or
and
mov
add
lret
inc
call
fdivrl
icebp
dec
dec
adc
jne
mov
jp
fs
xor
adc
mov
jmp
jo
lcall
dec
ds
test
ficoml
cld
inc
subb
mov
ljmp
mov
or
psraw
xor
ret
or
mov
xchg
cmp
fidivs
arpl
pop
mov
loop
or
int3
add
add
outsl
addr16
cld
sbb
in
push
mov
mov
jnp
xor
cmp
jno
cmpsl
outsb
mov
fstp
rcll
movsb
pop
and
out
int
ret
xchg
sbb
daa
xchg
daa
cltd
cwtl
out
push
repz
loope
aad
push
sub
jmp
lds
insl
popa
push
sub
push
jge
fisubl
sbb
mov
adc
lea
dec
jmp
or
jle
fldenv
xchg
inc
push
scas
mov
or
roll
ret
or
scas
dec
cmpsl
push
push
andb
leave
ljmp
outsl
and
ficomps
insb
ret
push
xchg
fsubr
sub
pop
leave
imul
xor
mov
cwtl
mov
test
aaa
jb
daa
mov
or
call
mov
mov
xor
pop
push
sbb
imul
outsl
dec
cmp
lcall
test
pop
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
out
movsl
in
jo
arpl
pop
add
dec
sbb
or
dec
adc
mov
int
in
mov
jae
stos
rcrl
adc
out
jl
push
push
mov
lret
adc
cmp
jo
adc
xchg
mov
stos
out
dec
xor
cmp
ss
xor
js
cli
nop
lcall
xchg
setae
jns
popf
mov
or
and
xlat
bound
cmp
inc
test
sahf
loope
and
filds
cs
fstl
lods
out
in
dec
sub
lret
aad
pop
inc
into
xchg
add
arpl
xor
mov
cmpsl
fdivrs
pop
sbb
pop
bnd
std
in
adc
or
stos
dec
dec
adc
pusha
dec
pop
into
fisubrl
sbb
repz
push
push
jle
inc
pop
call
jno
inc
dec
ss
mov
sub
pop
xor
cmp
aad
out
in
push
or
add
inc
idivl
cmp
ljmp
mov
insb
shrb
mov
je
test
inc
sub
cli
lea
pop
scas
jns
cld
ja
inc
adc
xchg
adc
movsb
or
ret
jl
sub
or
mov
outsl
add
ljmp
sbb
stos
sbb
jbe
mov
jno
setne
sahf
push
stos
jp
cmp
xchg
mov
and
cli
sub
or
dec
inc
fcom
push
jb
bound
pop
add
in
inc
stos
mov
sahf
into
pusha
mov
mov
int
aad
or
dec
imul
xlat
mov
pop
adc
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
in
inc
std
sub
daa
sbb
inc
jns
mov
ja
or
outsl
scas
cmp
mov
sbbl
loope
and
scas
mov
ja
adc
jecxz
ja
mov
cmp
push
movsb
jb
mov
xor
pop
and
aam
bound
aam
and
mov
xlat
mov
adc
lret
mov
push
enter
or
cwtl
in
cmc
and
jnp
xor
call
add
nop
push
adc
sub
and
out
inc
nop
mov
jb
xor
ret
xchg
popa
ljmp
cmpb
out
sbbb
mov
nop
arpl
ljmp
pop
std
int
subb
xor
imul
lahf
leave
hlt
xor
inc
int3
mov
loop
gs
out
ss
jle
adc
xchg
and
imul
mov
mov
icebp
cmpsb
lahf
loope
dec
or
mov
adc
out
adc
stc
xchg
lock
jb
scas
cmp
jno
dec
add
or
cmp
add
pop
cmp
repnz
shlb
mov
sub
pop
insl
fdivr
je
cmp
jmp
mov
pop
pop
mov
fwait
xor
addl
mov
jae
aaa
xorb
gs
bound
mov
repnz
pop
call
stos
push
insb
scas
pushf
cmp
pop
dec
dec
sub
stos
adc
mov
lret
pusha
adc
or
test
lea
rolb
jg
ret
mov
insb
jne
cmp
dec
test
push
ja
pop
lahf
inc
mov
aad
xlat
mov
ljmp
mov
outsb
int
cmpsb
dec
mov
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
es
cmp
mov
jle
and
fs
pushf
mov
rcll
adc
dec
mov
les
sbb
add
add
and
inc
hlt
push
pop
pusha
push
lock
fwait
sub
sub
loope
jmp
inc
sbb
sub
jno
pop
mov
sbb
lahf
mov
cmp
testl
jns
mov
sbb
rcrb
shl
pop
sub
mov
fs
jl
jo
repnz
inc
cli
jb
lret
push
xchg
xor
orb
jne
jnp
jne
push
popa
fwait
or
pop
iret
cmpsb
cwtl
push
dec
bnd
std
ja
fnstenv
cmp
sub
xchg
sub
adcl
jb
push
cmp
mov
xor
repz
xor
and
or
push
gs
jnp
cmpsb
mov
mov
cmp
insb
inc
pop
je
hlt
movaps
loop
sub
jmp
pop
sub
into
lds
je
mov
pop
fsubrl
jne
repz
hlt
sti
nop
test
das
ds
jne
aam
movsb
sub
lret
movsl
aam
cmp
aaa
mov
movlps
mov
or
or
mov
nop
idivl
pushf
sbb
mov
test
jo
xlat
in
es
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
mov
jle
mov
jle
sbb
imul
mov
push
aas
jle
push
mov
popa
mov
sbb
adc
loope
mov
push
fmul
jge
mov
or
mov
faddl
adc
rolb
add
call
andb
pop
jle
popf
xlat
hlt
sbb
imul
dec
pop
xchg
jmp
js
imull
push
mov
sbb
popf
xchg
outsb
dec
addl
test
cmc
dec
pushf
dec
pop
lea
lret
xor
iret
stos
cmp
dec
aam
push
shlb
imul
fcmovnb
sbb
in
mov
mov
mov
sbb
lock
ficomps
cmp
add
mov
xlat
pop
mov
test
cmp
icebp
popf
sbb
sti
andl
mov
jno
fsubr
imull
xchg
dec
xchg
pop
sub
adc
cs
aam
daa
jns
aam
mov
and
test
cwtl
jnp
inc
aas
ja
adc
aaa
fwait
das
mov
insl
xchg
push
ret
xchg
lret
mov
mov
jb
sti
push
mov
sbb
adc
or
sbb
stos
in
imul
imul
or
and
xchg
insl
cmc
mov
in
xchg
test
nop
adc
xchg
jb
cmp
xchg
aas
xor
repz
jo
stos
cld
xchg
sub
mov
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
push
jle
jg
jle
mov
repnz
enter
out
cmp
leave
aam
pop
sahf
jo
mov
push
lods
addr16
mov
std
stc
out
aad
gs
jle
jle
or
xor
push
mov
pop
dec
lds
pop
pop
lret
fstpt
push
stos
add
adc
mov
stos
pop
inc
jmp
das
in
mov
aas
mov
push
cltd
dec
clc
jl
arpl
imulb
jno
out
stos
push
adc
dec
outsl
xchg
add
aas
mov
cltd
outsb
sbb
mov
push
sub
vprotb
inc
call
mov
stc
in
out
outsb
inc
sub
dec
lods
xchg
pop
or
dec
mov
cmp
sbb
nop
bswap
adc
xor
jb
out
fiaddl
mov
or
sahf
sub
iret
cmpsl
jp
push
mov
mov
lahf
cmc
cli
mov
popf
js
scas
fmul
rcll
aad
outsb
dec
fmull
leave
and
out
push
cltd
popa
lea
xchg
test
inc
pop
sbb
add
mov
shrb
cmp
mov
add
fdivl
mov
test
int3
push
testl
lret
inc
out
in
aaa
push
jae
xor
inc
fadds
scas
rorl
mov
and
lods
psubusw
pop
xchg
ds
rdpmc
mov
xchg
iret
adc
int
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
inc
lcall
jle
or
jo
in
mov
jle
add
or
dec
and
in
xchg
je
adc
nop
mov
or
stc
mov
dec
or
jns
test
cmp
ja
hlt
test
lret
jge
fsubrs
and
sub
shrl
insl
pusha
mov
push
xor
aaa
sbb
cmp
sub
test
push
ss
jl
push
andb
sbb
push
cs
and
popf
rclb
mov
xchg
mov
mov
inc
bound
in
cmpsl
rclb
dec
test
dec
xchg
mov
adc
sti
bound
push
mov
sbb
dec
sub
dec
inc
dec
lds
adc
pop
repnz
lds
nop
cltd
inc
mov
mov
jge
cmp
lock
insl
mov
push
pop
lahf
mov
adc
add
pop
stos
fs
lods
ret
and
add
fwait
mov
sub
lock
inc
xchg
imul
jb
pop
pusha
sbb
gs
or
loop
inc
push
loopne
sbb
fsub
sub
iret
lret
mov
sbbb
sub
pop
clc
lods
aas
imull
adc
mov
add
mov
cmpsl
cmpsl
enter
pop
xor
cmp
sub
or
shrl
sbb
pop
bound
in
aaa
push
aaa
cld
xor
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
pop
dec
xor
jg
jle
push
mov
cmpsl
or
cmp
push
iret
imul
hlt
aad
dec
dec
and
mov
xchg
aaa
add
dec
pop
and
movsb
lret
mov
imul
mov
adc
pop
mov
sub
fists
stc
pop
cmpsl
and
lock
inc
jb
in
add
jbe
shrb
fs
push
push
insl
inc
mov
int
xchg
outsl
icebp
and
or
dec
scas
shl
dec
push
jmp
adc
sarb
gs
scas
xchg
jne
ljmp
xor
dec
ret
repz
jmp
cmp
fs
clc
mov
lea
into
lea
mov
cld
hlt
sbb
mov
scas
sub
call
or
xchg
nop
mov
out
data16
cmc
xchg
nop
aaa
xor
jmp
cmpsb
jecxz
xlat
xor
aaa
mov
fcmovnbe
repz
out
and
sub
int3
mov
pop
inc
test
xor
jmp
xchg
fstpt
call
jmp
pop
in
mov
jb
popf
jg
into
nop
jae
inc
push
lods
aam
mov
pusha
inc
lret
cmp
fcomps
mov
pop
pop
jnp
and
jge
inc
cmp
shrb
xchg
jl
sbb
push
mov
push
jmp
push
in
adc
sub
fmull
test
sbb
add
pop
pop
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
test
cmpsl
inc
ret
mov
jle
and
cwtl
sbb
jmp
lods
enter
add
jnp
ficompl
fwait
ljmp
ret
divb
sub
mov
popf
cmp
add
and
adc
out
pop
cltd
pop
sbb
or
dec
leave
inc
iret
pop
adc
lret
xor
lods
shrl
aaa
cmpsb
mov
mov
int
pop
or
outsl
push
aas
mov
in
dec
cs
shlb
das
inc
fbld
push
js
fwait
movsl
div
lods
inc
mov
cmpsb
mov
sahf
push
pop
outsl
dec
sbb
inc
jmp
cld
in
xchg
pop
push
fadd
sub
dec
rcrl
mov
or
inc
movsb
add
push
arpl
cltd
scas
mov
daa
lret
xor
xchg
das
fadd
std
jbe
and
aad
sub
repz
adc
loopne
sar
lcall
add
sub
lds
jno
in
repz
pop
test
push
ret
jae
insl
jo,pn
mov
mov
inc
dec
rcrb
xchg
nop
mov
enter
divl
fchs
mov
xor
int3
repz
xchg
inc
push
dec
arpl
mov
inc
mov
jge
xchg
cmp
aas
add
jmp
xchg
clc
add
push
in
mov
xchg
out
fcmovne
add
push
xchg
mov
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
inc
popa
mov
ffree
jle
mov
jle
int3
clc
fidivrl
outsl
adc
ljmp
dec
xchg
repz
scas
stos
jge
hlt
inc
sbb
or
or
lock
and
push
fsts
mov
sub
in
fdivrs
and
inc
mov
jg
and
adc
addr16
mov
lret
stos
pop
je
adcl
push
out
or
pop
and
leave
xor
cmp
push
out
lret
rcll
leave
int3
imul
movsb
fidivs
jno
jno
pop
cltd
mov
bnd
push
iret
ja
push
mov
xchg
cmc
cltd
in
scas
jae
addr16
sbb
jmp
mov
fwait
xor
xchg
pop
sbb
mov
and
and
jp
pop
out
mov
jns
mov
adc
lods
je
dec
fwait
pop
inc
icebp
sbb
add
xchg
sub
dec
scas
repnz
test
shrl
sbb
out
pop
and
and
cmc
inc
iret
xchg
fnsave
cli
or
out
xchg
mov
or
push
push
pop
push
mov
cmp
push
mov
and
sbb
lcall
inc
dec
sti
mov
sahf
pop
sbb
outsb
fdivrl
jp
pop
mov
dec
or
into
or
lock
pop
aaa
movsl
jle
mov
jp
lods
dec
mov
int3
lods
scas
aaa
jmp
add
sbb
std
jo
pop
add
push
fcmovbe
out
fwait
push
cmp
cmp
lock
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
push
imul
jle
inc
incb
cmp
iret
cwtl
xchg
insb
andl
testb
hlt
xchg
std
dec
inc
xor
cmp
jmp
jl
jmp
lea
dec
pop
fcmove
fdivs
pop
sbb
jb
rclb
sub
cwtl
int3
jae
cld
mov
cs
pop
sub
cmpsl
insl
pusha
mov
pop
xchg
sbb
int
xchg
aas
jecxz
xchg
adc
cmp
and
jne
cmp
out
out
dec
jmp
pop
mov
in
pop
ja
mov
in
adc
mov
movsb
adc
adc
test
pop
repz
scas
or
rcrl
jp
inc
push
test
loope
shll
ficomps
je
fs
dec
repnz
aaa
sbb
ds
and
or
cmp
xchg
jb
fsubs
mov
icebp
fidivs
in
fisubrs
pop
or
mov
imul
fisttpll
xchg
push
inc
or
sub
push
inc
dec
xchg
jmp
imul
push
jno
mov
scas
cli
jbe
test
push
pop
in
stc
cmpsl
aad
scas
mov
lock
lock
sub
dec
sahf
scas
shlb
adc
or
cwtl
push
pop
xor
clc
push
les
es
cmpl
or
jns
sbb
ja
pop
cmp
mov
pop
or
mov
mov
in
inc
mov
mov
rolb
sub
pop
movsl
jge
shlb
clc
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
cmc
jl
orl
int3
icebp
mov
pushf
loope
psubd
iret
int
stos
repnz
hlt
fs
imul
pop
jns
fs
or
sub
scas
mov
pusha
stc
and
lahf
test
xchg
frstor
cmp
test
mov
mov
sub
ja
pop
push
fidivl
jno
mov
cwtl
adc
inc
popa
mov
sbb
cmp
subb
icebp
lret
les
sarl
notb
testl
cmp
mov
jecxz
cmpsb
scas
adc
sbb
add
rcrl
lahf
out
jns
or
js,pt
cli
je
stos
xor
call
test
mov
out
incl
gs
jmp
gs
das
arpl
xor
shrb
xchg
xchg
inc
js
sub
das
or
adc
lcall
mov
enter
add
fndisi(8087
sbbl
in
push
xchg
cs
inc
pop
inc
arpl
inc
xlat
push
clc
mov
aad
cmpl
adc
pop
pop
lahf
fistpl
sub
fbstp
dec
sbb
test
rolb
mov
lcall
sti
ss
mov
jge
and
lock
fwait
pop
inc
stos
and
jne
fistpll
nop
add
data16
xchg
add
add
or
add
cld
xor
xor
jmp
in
test
call
jbe
mov
jle
jg
jle
jmp
dec
aad
ljmp
sbb
repnz
sti
ljmp
xor
mov
sub
into
mov
xor
push
out
jmp
inc
popf
test
outsb
rcr
lcall
aad
fisubrl
lret
dec
mov
incl
stos
cmpb
test
ljmp
or
aam
ret
sbb
jge
lock
add
mov
shl
sub
mov
push
pop
cwtl
lods
pop
fidivs
loop
lock
imul
inc
add
mov
push
sub
rcr
cmp
sub
mov
lahf
jg
aam
sub
pop
sbb
lcall
idivl
jo
inc
push
jnp
lea
jb
inc
test
in
scas
das
add
ret
lret
setp
xchg
adcl
pop
pop
adc
roll
sub
out
jo
xor
daa
dec
out
or
sbb
add
loope
pop
sbb
push
jo
or
lds
aam
jb
flds
mov
inc
sbb
sti
jno
sahf
push
out
add
insl
push
pop
xchg
dec
rclb
push
xchg
pop
add
std
loopne
pop
mov
pop
mov
je
cmp
cwtl
xchg
shll
leave
bound
into
int
ja
incl
pop
testb
das
dec
xchg
sbbl
daa
insb
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
out
jmp
aas
lods
lret
mov
jle
std
scas
sbb
out
lea
shlb
pop
popf
pop
mov
inc
imul
and
cmc
pop
mov
repz
jns
in
xchg
dec
pop
sahf
loopne
xor
xchg
std
or
xor
add
in
pushf
mov
in
les
jp
hlt
repnz
dec
lods
push
jl
mov
inc
popf
rcl
mov
repz
fdivrs
mov
insl
fisubl
dec
cli
sarl
mov
mov
jo
pop
inc
sbb
jl
and
aas
add
hlt
repz
xchg
stc
cli
mov
clc
test
sbb
rcr
loop
lds
scas
or
xor
into
neg
aam
mov
pop
inc
sbb
adc
dec
xchg
cmp
gs
xchg
push
outsl
gs
imul
sti
add
jp
xor
addl
mov
lahf
or
insb
jae
sbb
push
inc
mov
test
fistpl
jns
lret
lock
jl
jmp
sbb
pop
mov
xchg
push
outsb
jp
scas
mov
push
mov
mov
mov
jbe
sti
inc
sete
adc
test
in
jp
andl
imul
test
sub
add
jmp
ljmp
imul
pop
std
test
sub
data16
push
int3
lret
xchg
cmp
xor
jbe
in
jp
add
jmp
dec
adc
add
push
push
jl
ljmp
enter
jg
jle
and
mov
fwait
adcb
test
inc
cmp
setnp
jmp
add
in
addr16
icebp
push
and
xchg
cs
inc
cld
mov
test
imul
pop
sbb
xchg
xchg
insb
ret
in
xor
enter
xor
into
jns
mov
repz
inc
inc
les
pop
push
hlt
test
dec
mov
jecxz
pop
dec
pop
stos
xchg
jecxz
mov
mov
data16
lcall
pop
push
push
dec
lea
inc
xchg
mov
fdivrs
aaa
call
xchg
jno
je
jnp
loope
push
test
repz
aam
xchg
adc
push
or
adc
mov
jne
xor
dec
dec
popf
ret
cltd
sub
outsb
insl
mov
arpl
in
dec
cmp
cmp
cmp
js
or
push
outsl
test
lds
xchg
rcr
cltd
dec
insl
mov
fwait
jno
fadd
mov
and
loopne
inc
or
fidivs
sbb
pop
mov
out
mov
xor
stc
mov
sti
fwait
sub
clc
in
pop
movsl
cwtl
or
mov
pop
mov
sub
cmp
sahf
ret
and
cmpsb
adc
rorb
sub
lret
clc
stos
out
inc
mov
out
mov
rcr
mov
sbb
push
jbe
push
or
insb
add
mov
mov
sub
jmp
and
xor
pop
xor
jle
jg
jle
insb
leave
cmp
add
sbb
fwait
dec
xor
push
scas
push
and
cmp
inc
cmc
adc
insl
imul
mov
ret
cmpsb
push
push
ljmp
xlat
fisttpll
aad
or
lret
clc
fs
gs
adc
mov
pop
out
xchg
or
pop
add
icebp
mov
ret
clc
adc
cmpb
imulb
mov
subb
loope
notl
sbb
add
or
jno
xor
scas
test
in
sub
xor
pop
xor
lahf
adc
arpl
push
xchg
cmpsl
insb
push
mov
adc
ret
nop
cmp
popf
or
sbb
gs
es
mov
fldt
dec
test
in
jmp
sbb
dec
mov
or
xlat
hlt
stc
dec
repnz
js
popa
mov
imulb
mov
mov
dec
arpl
xor
inc
inc
push
mov
pop
sti
dec
jmp
push
loopne
dec
xor
adc
cmp
or
push
pop
mov
lock
fwait
test
xchg
adc
push
mov
mov
jnp
jae
loop
shrb
cmc
sbb
dec
fidivrs
mov
je
pop
inc
lock
int
loop
pop
mov
hlt
xchg
dec
outsb
sbb
movsl
iret
ss
and
push
sbb
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
xor
loope
jle
mov
jle
pop
lods
inc
xlat
cwtl
into
or
pop
sub
mov
mov
cli
addl
mov
jmp
pop
outsl
push
inc
jmp
or
pop
xor
lret
jmp
xor
popa
data16
pusha
jno
repnz
fwait
lods
or
xor
mov
xorb
xor
pop
inc
test
aas
xor
xor
sarb
rol
cmp
lar
imul
fs
ss
rcll
push
popf
mulb
inc
getsec
push
inc
inc
or
mov
xor
sarl
jge
cmp
xor
jmp
repz
test
xor
xor
add
dec
in
cwtl
inc
repnz
ror
push
sbb
xchg
cli
and
lods
inc
lock
or
fsub
js
pop
outsb
mov
mov
loopne
pop
jo
sahf
mov
jbe
movsl
add
mov
sub
aad
test
das
adc
je
aaa
popf
out
jns
arpl
jnp
xchg
pop
scas
mov
adcl
and
in
or
xchg
xchg
insb
xchg
or
ds
dec
push
lcall
sbb
inc
dec
jle
jl
jno
jg
je
ljmp
insl
cmp
dec
mov
call
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
mov
mov
jle
jg
jle
pushf
push
pop
add
mov
jmp
cli
and
insb
pop
leave
fs
jb
pusha
sub
xchg
ljmp
idivb
stos
popa
xor
or
popf
xchg
sbb
rclb
clc
cltd
mov
xor
out
js
mov
mov
scas
jp
imull
out
mov
mov
cmp
jp
inc
out
mov
add
jg
pavgw
repnz
divb
jae
cs
jne
cmc
pop
mov
test
orb
dec
fiadds
mov
xchg
arpl
mov
pushf
in
xchg
out
mov
loope
cmp
mov
scas
push
push
lods
mov
lret
inc
mov
outsl
imul
lea
jo
sti
push
push
mov
jno
bound
out
leave
xor
or
popf
mov
push
inc
lret
enter
add
movsl
idivb
pop
mov
sbbb
scas
movsb
cli
popf
inc
sub
and
nop
scas
test
pop
add
jle
dec
mov
push
mov
sbb
adc
test
push
sahf
aam
add
pusha
pop
and
popf
xor
add
cli
std
outsl
mov
int3
daa
mov
inc
dec
in
push
xchg
js
sbb
popf
lds
or
mov
sub
dec
in
lea
push
cwtl
and
clc
sahf
pusha
pop
adc
mov
call
je
inc
adc
fwait
push
popa
popf
or
sbb
xor
add
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
movsl
or
jle
jg
jle
push
mov
add
mov
decl
ja
sub
mov
cli
mov
xchg
mov
add
cmp
xchg
jmp
fistpl
aam
xchg
pop
fsubs
add
and
dec
sahf
movsl
adc
insl
pop
data16
aaa
mov
add
ss
jno
sub
jge
dec
ds
mov
dec
or
xor
sbb
shlb
cmp
test
bound
sbb
mov
popf
cmp
imul
sbb
jbe
cld
or
dec
into
push
inc
inc
mov
add
lods
inc
inc
adc
mov
popa
into
insb
sbb
neg
push
push
and
and
mov
das
stos
fldt
lock
xchg
repz
fbld
mov
jmp
add
jno
or
adc
add
xlat
inc
in
pop
fnsave
insl
fucomip
sahf
fdivl
mov
jo
insb
dec
push
insb
mov
out
aad
add
jns
mov
cmpb
sbbb
sbb
aad
movsl
mov
inc
jbe
cld
cltd
sbb
mov
xchg
pusha
lds
or
stc
push
sbb
pop
ret
xchg
mov
sbb
test
pop
test
pop
hlt
into
mov
or
jbe
out
ds
pop
call
push
cltd
xor
hlt
movsb
ljmp
ficomps
jo
push
and
inc
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
xor
jne
and
jg
jle
and
mov
mov
dec
jns
js,pn
mov
lcall
push
mov
imul
or
fbstp
mov
fs
int
push
jge
jae
shlb
sub
daa
xchg
adc
jmp
es
bound
sahf
jne
pushf
push
in
scas
stos
inc
sarb
and
add
addr16
sbbl
mov
movsb
add
xor
jne
pop
imul
pop
pop
push
inc
push
or
sbb
pushf
das
push
into
jl
popf
xor
jae
xor
cs
dec
push
sarb
dec
jecxz
xchg
les
or
mov
mov
push
rcl
ljmp
push
jnp
mov
jns
data16
setge
adc
dec
dec
cmp
test
mov
icebp
cmc
rclb
ficomps
ficoml
pop
lret
test
mov
push
ljmp
das
hlt
outsb
xor
and
xor
cmp
psubusb
jne
je
add
sbb
pop
push
mov
jmp
aam
ret
in
pop
cld
mov
adc
enter
iret
jle
push
pop
dec
lds
fisttpl
mov
ret
adc
cmp
enter
sahf
js
push
in
popf
ret
jge
dec
ljmp
pusha
roll
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
pop
popl
add
jg
jle
sbb
fdivrl
add
dec
test
in
lea
xabort
pop
sbb
push
push
cmp
jb
jo
jecxz
pop
ss
bound
aas
cmp
ljmp
rcl
dec
jle
sbb
ret
ficoml
cmc
dec
mov
jne
lret
sub
inc
mov
repnz
mov
jns
ds
lods
lcall
mov
jl
negb
push
and
dec
popf
imul
xchg
insb
sub
pop
inc
cmp
mov
add
or
and
test
shlb
xchg
stos
dec
jge
xor
out
cmp
cs
pop
incl
out
push
mov
je
cmp
leave
test
pop
mov
mov
dec
inc
pop
push
cmp
pop
pop
xor
pop
adc
xchg
cs
or
inc
jmp
xor
movb
or
out
lret
imul
adc
lahf
aam
inc
loop
es
shrl
cmp
push
adc
push
and
fadds
cmp
pop
jnp
xchg
jmp
fwait
aad
insl
mov
pushf
pop
mov
mov
sub
xorb
dec
xchg
ja
es
xchg
js
pop
push
and
or
ljmp
out
mov
xor
daa
sahf
pop
xchg
dec
lret
pusha
into
hlt
mov
push
in
inc
imul
push
lods
jl
mov
xor
jmp
or
addr16
jne
mov
mov
iret
cltd
gs
fistpll
mov
jle
inc
or
ret
lock
aam
incl
arpl
jle
das
adc
mov
and
int
adc
shll
int3
mov
cmpsl
mov
lods
into
mov
pop
add
aad
lahf
inc
ljmp
pop
mov
mov
fdiv
ljmp
mov
cs
icebp
or
mov
ret
adc
nop
inc
pop
mov
adc
cld
in
xchg
adc
loop
shrl
fstpt
stc
into
orl
clc
or
xor
mov
xchg
leave
inc
sbb
adc
push
sbb
mov
rorl
out
jns
or
and
push
sbb
xor
adc
lret
hlt
jp
movsb
add
test
push
mov
dec
push
jle
idivl
or
jo
push
mov
ja
dec
lcall
add
xchg
xor
inc
popf
add
js
and
dec
cli
mov
dec
inc
mov
repz
push
jp
negb
pushf
psubsb
cmc
push
xchg
push
repnz
xorl
scas
mov
jnp
pop
arpl
xchg
sarb
fimull
pop
cltd
xor
xor
xor
mov
shlb
jno
pop
inc
aam
imul
sti
xor
lds
out
dec
out
dec
and
imul
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
les
inc
pusha
pop
fdivrl
jge,pn
jle
sbb
and
cmp
test
stos
int
loopne
add
sbb
fldenv
push
xchg
popa
dec
pop
or
fcomps
rcr
xchg
jmp
jns
inc
enter
push
testb
and
xchg
cmpsb
fcomp
jb
jecxz
dec
push
mov
sub
addb
bnd
clc
out
shl
sub
dec
sahf
mov
lods
lcall
and
or
test
fnsave
sbb
adc
leave
jne
lahf
xlat
nop
bound
xchg
ja
inc
mov
push
lret
xchg
jp
jmp
mov
sbb
xchg
mov
jecxz
and
jne
aad
lahf
push
push
inc
inc
cld
cltd
lods
pushf
fstps
add
pop
add
aaa
pop
mov
lods
cmp
test
push
repz
ret
add
cmp
sub
push
jb
push
cltd
rolb
stc
sub
push
int3
xchg
jo
or
nop
and
xchg
sbb
mov
out
ss
xchg
lret
jns
sbb
jl
inc
cmp
mov
sub
fildll
xlat
cmp
jp
test
cmp
adc
push
movsl
jbe
jp
sub
mov
ljmp
mov
ds
inc
ljmp
js
pop
xlat
mov
pop
xchg
push
sbb
ss
mov
mov
xor
cmp
jmp
push
popa
daa
push
jl
sub
stos
and
ljmp
ret
push
xchg
adc
cmp
xchg
mov
sub
aad
pop
jp
imul
rcrl
inc
dec
dec
scas
jbe
clc
idivl
sub
imul
std
xor
mov
sti
fildl
or
add
fiadds
pop
js
pushf
cltd
cltd
je
lcall
std
and
xor
scas
aas
jmp
pop
xor
ds
test
mov
pop
call
ljmp
mov
adc
jge
xchg
or
cmp
sbb
cld
pop
jno
js
enter
popa
sbb
or
popa
mov
cmc
nop
sarb
mov
mov
and
mov
push
sbbl
add
lea
pop
push
inc
test
cmp
push
clc
nop
mov
in
pop
dec
inc
mov
cwtl
push
push
movsb
enter
mov
test
pop
pop
bound
ds
mov
icebp
and
pop
mov
fnstenv
dec
inc
xchg
bound
sbb
shlb
sbb
mov
in
cmc
xor
sahf
or
jae
xor
mov
int
cmp
jbe
cmc
lock
arpl
pop
imul
cmpsb
mov
je
imull
sbb
push
lods
cmp
cmp
mov
add
xor
adc
pop
out
add
sbb
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
filds
or
jle
jge,pn
jle
adc
pop
sub
push
adc
test
js
mov
sbbb
and
mov
push
xchg
push
vsqrtpd
push
cmpsb
sarl
rolb
data16
aad
xchg
and
mov
mov
fidivrl
jae
sub
lds
jae
push
inc
sbb
int
scas
pushf
push
pop
mov
fs
cmpsl
dec
inc
mov
push
outsb
pop
and
or
int
dec
cltd
outsl
bound
lea
mov
pop
push
data16
and
sarb
lret
or
mov
test
divb
jmp
sbb
stos
add
repnz
jno
or
xchg
sbb
mov
aas
jno
mov
addb
fcmovu
rorb
push
cmp
arpl
js
loope
lods
push
ds
bound
lcall
adcl
outsl
adc
inc
jb
jle
or
inc
stos
movb
pop
outsl
pop
xchg
add
fiaddl
sub
add
shlb
int
aas
inc
push
andb
dec
popa
and
sub
test
in
shll
add
addr16
icebp
cmp
push
dec
aam
inc
negl
adc
mov
mov
mov
sub
jo
xor
pop
jmp
jo
mov
sub
jno
xchg
mov
addr16
mov
callw
frstor
movsb
outsl
adc
add
jo
pop
cld
cmp
or
outsb
mov
or
cmp
ret
test
ljmp
popf
jmp
mov
sbb
xchg
outsb
xor
enter
and
sub
cmp
sbb
cs
dec
insb
xchg
dec
mov
mov
add
aaa
das
mov
mov
pop
aaa
sbb
xchg
filds
cmpsl
repz
dec
jle
mov
jns
jne
pop
shll
shlb
adc
cmpsl
stc
hlt
mov
rcl
and
cmp
add
mov
fcoms
jle
movsl
outsb
add
mov
es
stos
frstor
push
arpl
add
dec
xchg
out
xchg
cmp
dec
xlat
sub
cmpsb
imul
or
int3
out
sti
mov
push
fisttps
idivl
push
xchg
add
jp
jo
add
dec
jp
mov
xchg
add
mov
push
insl
xchg
shl
mov
inc
inc
cmp
and
test
mov
sub
aas
bound
mov
mov
repz
push
pop
aam
mov
shrl
pop
fsubrs
jb
mov
inc
cld
cmc
mov
fwait
mov
mov
mov
or
movsb
imul
scas
mov
push
dec
repz
lret
aas
stos
dec
fadds
int3
mov
dec
add
add
loopne
popa
hlt
jno
jae
and
cmc
cmp
mov
out
jle
jge
jle
jmp
adc
mov
xor
in
test
out
gs
push
sbb
pop
sub
decb
or
leave
xchg
inc
mov
out
fwait
addr16
fdivrl
and
rclb
shrl
aam
das
xchg
xchg
sbb
jns
mov
in
insl
mov
or
sub
jmp
dec
push
mov
loopne
loope
xchg
and
int
lods
clc
pop
insb
addr16
mov
repnz
gs
hlt
cmc
mov
out
test
add
ljmp
xchg
cmovo
mov
jne
xor
std
loope
mov
js
add
inc
lret
hlt
mov
test
mov
jge
ja
movsb
inc
out
cs
movsl
shll
xlat
imul
xchg
pushf
test
adc
fcoml
xchg
dec
mov
sbb
pop
clc
lret
cmpsb
pop
test
in
scas
jle
leave
fsubl
enter
ss
sub
lods
fcompl
mov
js
cmc
dec
jl
xor
stos
shrl
mov
inc
addr16
xlat
dec
test
rolb
int
rcll
xor
test
popf
pop
repz
mov
dec
mov
and
cli
cmpsb
stos
ljmp
jmp
orb
arpl
setno
add
sub
fsubrl
roll
dec
rcr
cld
jp
or
push
insb
sbb
das
mov
fidivrs
test
lock
inc
dec
jp
jnp
rol
dec
cwtl
ja
fidivs
stos
loop
outsl
and
roll
test
fnsave
mov
push
mov
mov
ja
jmp
mov
dec
movsb
pop
push
pop
push
int
in
jle
inc
icebp
imul
cmc
or
test
mov
ss
jg
mov
cs
out
mov
gs
loope
outsl
push
rolb
jmp
sbb
mov
mov
pop
hlt
sub
out
pop
adc
inc
leave
mov
imul
lods
les
pop
iret
pop
dec
pop
insl
jmp
mov
dec
call
pop
pop
mov
fnsave
dec
jmp
xchg
adc
push
fdivl
test
faddp
movsb
cmp
cmp
into
stos
jmp
dec
lcall
or
je
or
adc
and
aaa
ja
jb
xor
inc
or
repz
xchg
bnd
pop
int
lock
ficoml
pusha
jmp
mov
fsubrs
sub
jb
pop
sbb
dec
and
fwait
shlb
and
leave
fidivrl
movl
push
js
jno
sub
jp
jle
sub
add
adc
outsl
aad
jae
sti
std
int
sti
mov
pop
imul
pop
movsb
cmc
jbe
out
add
dec
das
sub
or
and
ja
aad
ficoml
aaa
test
movl
add
fisttpl
sbb
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
mov
push
loop
jle
jge
jle
movsb
dec
movsl
pop
sub
test
ljmp
insb
rcll
andb
psubb
xlat
inc
sub
mov
mov
push
ds
adc
loope
rcrl
xchg
sub
out
mov
test
push
jle
add
scas
sahf
fistl
cltd
adc
and
push
cmp
or
dec
cmpb
mov
mov
xchg
xor
icebp
mov
adc
test
mov
sub
leave
imul
mov
lret
imul
icebp
mov
std
call
jmp
and
fists
rorb
sahf
inc
sti
jg
ja
int
lret
mov
aaa
add
cld
ret
lock
cwtl
mov
in
icebp
mov
cli
fmull
stos
pop
ret
aam
movl
addb
cld
fwait
lret
push
in
outsb
cmpsl
jg
xchg
push
ret
mov
pop
xchg
pusha
aad
ss
sbb
jb
mov
imul
xchg
sbb
loop
inc
pop
or
or
inc
push
lahf
jecxz
je
dec
sub
js
mov
add
ret
inc
jg
cmp
pop
xchg
add
jge
mov
push
stos
icebp
mov
fildl
xlat
xchg
repnz
pop
das
or
xchg
ljmp
lret
std
push
dec
cmp
cmp
outsb
push
mov
int
pop
sub
ss
sarb
mov
dec
or
add
stc
dec
cwtl
push
sti
stos
cmpsb
cmp
fdivp
daa
sahf
rclb
incl
cmpsl
call
and
add
sbb
loop
out
mov
and
jmp
pop
mov
rcr
inc
push
sbb
jmp
or
or
mov
sub
aad
data16
adc
addb
es
xor
fsubl
jg
enter
aad
mov
loope
xor
stos
sahf
rcr
insb
sub
adc
dec
push
xor
push
mov
or
xchg
dec
sbb
js
frstor
push
cwtl
xorb
push
mov
or
pop
pushf
pop
jl
sub
loopne
testb
aaa
pop
lret
inc
pcmpgtw
cmp
mov
or
add
movsl
mov
iret
mov
ret
pop
in
and
or
daa
add
addl
inc
fidivrl
test
mov
scas
push
mov
sub
mov
adcl
insl
out
xor
xchg
xchg
cmp
int3
push
push
adc
fwait
stc
mov
jo
adc
insb
fdivp
or
dec
push
ds
pop
jecxz
inc
sbb
sbbl
aad
xor
stos
xchg
repz
nop
adc
push
aad
xor
stc
fwait
push
pop
inc
and
aad
aad
mov
out
jmp
clc
inc
cmp
pop
loop
jge
adc
mov
fldenv
call
xor
adc
add
jmp
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
pop
cltd
loope
jle
jge
jle
mov
xor
rcr
jae
cmpsb
out
lret
mov
std
xchg
mov
sub
test
imul
cmp
insb
jbe
add
sub
push
mov
andl
pushf
ja
xchg
mov
cmpsb
cmc
cli
inc
gs
sub
loop
aad
lcall
push
lods
dec
rclb
pop
jo
jns
pop
dec
arpl
sub
std
adc
jg,pt
sub
mov
add
fdivs
pop
loope
pop
inc
ja
xchg
dec
or
inc
jb
xor
dec
loopne
and
xlat
jecxz,pn
pushf
mov
lds
aaa
pop
imul
filds
ficoms
mov
mov
sbb
cmc
pop
lods
pop
bound
xchg
xchg
int
and
andl
shl
aas
xor
subl
mov
xor
je
sub
xor
es
push
scas
pop
sahf
mov
mov
push
stos
rorb
or
dec
mov
insl
mov
insb
mov
ss
pushf
xor
inc
nop
rol
int3
lahf
cmc
movsl
mov
xor
and
loop
imul
sub
outsl
mov
pop
pop
test
xor
aam
idivb
ja
mov
stc
sbb
or
adc
lret
or
fistpll
mov
pusha
arpl
aaa
cltd
cld
pop
aaa
adc
adc
fwait
mov
popa
mov
xlat
xchg
cwtl
pop
loopne
inc
int3
sbbl
mov
sub
mov
dec
pop
je
fisttpl
fucomp
sub
push
xor
out
int
sbb
push
daa
setnp
insb
pop
cmp
ss
cwtl
sub
or
and
stos
adc
arpl
movb
repz
sub
fs
add
lods
psllq
xor
rcll
and
lret
mov
add
cmp
out
xor
ljmp
insb
and
sbb
mov
xchg
cwtl
js
dec
xchg
adc
fwait
push
aas
ja
sahf
adc
push
clc
in
sarl
dec
jns
dec
loopne
pushl
xor
rclb
xchg
mov
mov
xor
jns
lret
xor
and
push
xchg
dec
jl
push
xchg
ret
stos
and
cmpsb
hlt
js
xchg
and
gs
jge
test
insl
jae
imul
enter
lahf
cmp
mov
mov
icebp
sbb
mov
xchg
js
pop
inc
lcall
dec
pop
mov
sub
push
into
in
push
mov
cmp
add
cmc
imul
fists
lea
cmp
cmpsl
push
sub
test
adc
sbb
mov
jmp
leave
inc
mov
inc
xor
icebp
pushf
sub
icebp
and
jge,pn
jle
inc
add
inc
shlb
sub
loope
sbb
fdivrs
add
push
psrlw
gs
lods
pop
insl
test
mov
stos
pop
push
test
leave
inc
test
jg
push
push
push
sti
insl
je
inc
jl
mov
fwait
push
or
pop
jp
push
imul
mov
mov
ss
arpl
ljmp
repnz
or
xor
addr16
dec
sub
push
cmp
dec
je
xchg
out
and
push
pop
scas
std
or
data16
jbe
loopne
jle
dec
cmp
push
test
cmp
jns
test
cwtl
xor
in
cs
push
xlat
imul
dec
push
js
aas
ja
lea
stos
adc
xchg
adc
sbb
pop
xor
jmp
leave
shlb
nop
call
xor
mov
jbe
xchg
mov
inc
test
push
iret
shr
dec
clc
aam
cmpsl
jo
add
out
movsl
hlt
push
insb
pop
ss
iret
jae
add
add
sahf
out
mov
arpl
cs
dec
pushf
addr16
aaa
mov
sub
clc
sub
push
and
in
jmp
sub
leave
push
movsl
jp
xor
mov
into
lahf
xor
mov
push
sbb
xchg
addl
shl
rcl
enter
mov
aas
dec
nop
cmp
pusha
cmp
js
inc
bound
ljmp
out
adc
es
sub
jge
pusha
dec
es
and
ja
push
dec
int3
je
aam
and
out
mov
int3
hlt
pop
sti
ljmp
iret
test
pop
jb
sub
les
dec
mov
inc
imul
jnp
faddp
mov
xor
pop
dec
dec
and
fwait
sub
push
mov
xchg
jp
stos
les
movzbl
daa
xchg
dec
iret
mov
scas
call
xchg
leave
movsl
rsm
scas
sbb
and
sub
fs
push
xor
ja
add
dec
mov
mov
or
adc
into
dec
in
aaa
mov
imul
and
into
shll
and
xchg
sub
mov
mov
pop
repz
xor
adc
loopne
inc
lods
aaa
cmp
or
clc
sahf
lahf
push
ret
mov
fs
out
mov
xchg
out
lods
ljmp
or
sub
mov
xor
xchg
and
mov
pop
inc
std
jl
push
push
pop
jo
cmp
rclb
and
adc
sub
dec
sub
add
test
add
gs
jns
sbb
cmpsb
repnz
add
fistps
cmp
std
sar
xchg
pop
std
mov
scas
sub
inc
aas
nop
jg
shrb
out
pop
cwtl
mov
push
cmp
push
mov
add
dec
cld
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
call
jle
jp
mov
daa
mov
pop
dec
jae
lds
xor
mov
aad
xor
xchg
icebp
sub
push
ret
into
cmpl
inc
popa
pop
inc
sbb
dec
out
add
xor
push
pop
or
out
cmp
aas
mov
push
mov
popf
clc
shrb
xor
mov
add
fldenv
dec
out
negb
cli
add
dec
jmp
test
mov
and
mov
add
shll
icebp
and
das
movsb
sbb
addb
push
sbb
addr16
pop
mov
pop
adc
cs
sti
ret
inc
fsubp
mov
cmp
push
lods
outsl
and
shrb
or
or
push
xor
cltd
fimull
cmc
sub
into
int
add
ret
dec
xchg
jbe
dec
dec
outsb
mov
fwait
adc
fisubl
jg
inc
xorb
subb
js
mov
ds
js
mov
mov
xchg
or
dec
and
jbe
test
sub
sbbb
sti
mov
xchg
xchg
loope
fndisi(8087
inc
and
paddsb
inc
sarb
popa
pop
aas
sbb
mov
and
arpl
enter
sbb
subb
and
mov
adc
cld
call
test
out
movsl
or
aad
lahf
out
fldcw
scas
ret
popf
xchg
and
ss
or
xlat
inc
and
push
xchg
cli
ja
shrd
jne
xor
or
sti
push
pusha
push
push
xor
leave
scas
bound
xor
data16
xor
jl
mov
fs
xchg
mov
jp
leave
divl
pop
mov
mov
insl
mov
mov
fistpll
push
fdivr
cmp
mov
inc
sbb
subb
aas
int3
je,pn
loope
std
inc
mov
popf
jb
push
pop
mov
push
iret
lcall
iret
push
leave
je
pusha
ficoml
mov
cld
inc
push
je
es
mov
pop
jp
jb
movups
adc
shr
mov
andl
enter
dec
rclb
aad
jns
adc
mov
rcrl
fldcw
adc
pop
push
scas
insl
mov
xchg
dec
icebp
popf
cli
das
jle
loope
pusha
mov
ljmp
and
repz
test
cld
lcall
fsubs
cmp
jg
fs
mov
stos
add
and
lcall
xchg
bound
add
lret
popf
adc
sub
ljmp
xor
cmpsl
mov
sbb
adc
or
cwtl
jno
push
xchg
popf
loop
mov
rclb
imul
mov
inc
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
add
out
sub
jle
jge,pn
jle
add
add
mov
jbe
or
int
cmpsb
mov
fnstcw
push
or
add
in
and
scas
jns
inc
pusha
in
cs
lods
xor
inc
add
icebp
cmpsl
pop
call
outsb
sub
mov
fistl
testl
mov
dec
mov
xor
cltd
xchg
jge
cmp
jb
or
push
out
sbb
cmp
mov
jae
mov
xchg
lea
mov
fdivrp
add
and
pushf
adc
pusha
jnp
test
inc
insl
mov
ret
cmp
adcl
jb
inc
pop
ds
mov
xor
push
ss
ja
jp
leave
and
jle
aaa
add
pop
hlt
mov
shrb
xor
and
mov
inc
mov
mov
xchg
repnz
stos
scas
fdivl
push
mov
push
inc
inc
mov
pop
pop
xchg
ret
rorb
jg
test
cs
xor
into
ret
movsl
and
inc
cmpsb
mov
std
fs
lahf
add
xlat
cmpsl
insb
jbe
mov
das
or
aam
hlt
sbb
dec
jns
ficoms
orl
daa
cli
sbb
es
cmp
les
mov
fdivl
addb
jne
stc
push
cltd
psubusw
hlt
pop
mov
jbe
fstl
fmuls
stos
jae
adc
fldt
add
enter
and
push
xchg
scas
pop
or
inc
das
insl
push
mov
lock
dec
lahf
xchg
cwtl
mov
das
mov
mov
cwtl
push
mov
sub
mov
out
ljmp
mov
mov
test
adc
int
dec
divb
mov
add
fimull
jecxz
lret
pop
fnsave
push
ds
cld
outsb
sbb
gs
imul
bound
repz
push
lods
inc
mov
mov
pusha
mov
push
mov
cmp
jae
mov
adc
pusha
mov
sub
jge
repz
sub
dec
cmp
jl
mov
mov
and
bound
pop
addl
add
pop
scas
jo
daa
std
mov
sub
push
xchg
inc
iret
js
adc
inc
pop
or
cmp
les
and
shl
mov
sub
js
shll
aad
test
xor
mov
sbb
js
xor
daa
mov
loop
cltd
das
sbbl
mov
push
mov
jp
adc
adc
sub
or
scas
jae
in
popa
push
mov
inc
add
or
xchg
out
stos
sahf
std
rorb
dec
push
outsb
pop
xor
xor
jae
test
popf
clc
jge
std
mov
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
jmp
mov
bnd
jge,pn
jle
xor
in
pop
enter
stos
leave
mov
leave
push
jmp
fs
je
stos
movsb
cmp
cmp
cmp
cmc
shrl
in
adc
jmp
mov
sub
jne
mov
mov
stos
cltd
pop
ficoms
lret
jmp
lods
dec
loopne
bound
xor
cli
rcll
sbb
test
rcl
movsb
push
push
movsb
sahf
mov
jnp
cmp
mov
push
pop
add
push
sahf
stc
and
rcrl
cmc
xchg
in
sbb
js
dec
sub
sub
push
adc
cmpsl
sub
into
aad
sti
push
mov
dec
jbe
xchg
orb
pop
sahf
jns
shrb
in
stos
add
mov
inc
daa
sbb
jp
mov
pushf
inc
in
cltd
loop
cld
inc
inc
ljmp
sub
or
push
repz
dec
push
xor
add
dec
mov
sub
sbb
fs
mov
leave
sbb
js
repnz
aaa
rcrl
enter
ds
push
dec
data16
jecxz
lahf
cmp
in
sub
std
jl
into
sub
test
mov
pushf
cmp
je
negb
mov
loopne
and
orb
rcl
roll
not
dec
mov
filds
and
inc
xor
shlb
or
inc
sub
fdiv
pusha
mov
or
in
jno
ds
mov
add
jmp
bound
xor
stos
or
ret
jnp
loopne
mov
cmp
insl
enter
jne
cltd
pop
bound
jne
dec
add
popa
mov
jecxz
jno
insb
or
test
dec
mov
cld
adc
enter
xchg
push
inc
insw
cmp
push
jne
addr16
mov
adc
in
nop
cmpsb
lods
mov
scas
pop
outsl
add
inc
into
pop
xchg
in
push
movsl
mov
add
mov
adc
jnp
movsl
pop
ret
lahf
ficoml
cli
push
xlat
es
enter
cmp
cmc
mov
iret
inc
shl
fdivrs
jg
fistl
pushf
sub
rcrb
pop
jns
jle
sahf
int
and
das
loopne
jmp
pop
test
adc
jp
das
cmpsl
in
jnp
lods
aad
cli
in
cs
into
aam
jmpw
test
jo
es
mov
fmuls
addl
sub
in
lret
ds
xchg
dec
std
cmp
dec
dec
lret
out
push
mov
pop
dec
in
dec
jmp
and
xor
inc
add
lcall
jp
cltd
or
leave
in
mov
add
add
or
jae
pusha
push
cltd
inc
icebp
pop
pop
test
int
sbb
mov
push
push
shlb
mov
ja
jmp
mov
adc
cmpsl
cwtl
pop
xor
xchg
pop
or
sti
mov
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
std
jo
mov
jle
jge,pn
jle
push
inc
pushw
mov
mov
shrl
or
mov
mov
cmpsb
mov
insb
mov
jae
gs
stc
cwtl
addr16
xchg
pop
mov
add
fstl
inc
test
pop
pop
cmpsl
imul
dec
mov
imul
loopne
and
mov
xchg
mov
popf
gs
and
imul
and
adc
dec
lods
insl
sbb
les
fs
cmp
pop
and
cltd
mov
shl
mov
xor
sbb
push
mov
and
mov
add
inc
jge
cmp
lret
fst
clc
pop
test
mov
mov
getsec
and
sub
sub
add
xor
cmp
cmp
insl
dec
fidivrl
cmpsl
and
les
dec
loopne
or
mov
ds
pop
int3
imul
adc
xor
push
sub
or
fldt
fstl
push
lret
jnp
data16
inc
arpl
push
sbb
aas
dec
sbb
addl
push
in
xor
popa
cmp
xor
aad
mov
xor
aam
jg
cld
xor
mov
cltd
jmp
loopne
mov
and
out
adc
lods
es
mov
int
inc
xchg
lods
scas
and
jbe
movsb
mov
aas
pop
mov
xchg
inc
inc
xor
sub
sub
in
ficomps
mov
jp
popf
push
inc
xchg
push
mov
iret
loopne
bound
sub
test
movsb
jge
xchg
xchg
inc
xor
fwait
jo
fldl
sub
mov
mov
inc
fmull
bound
push
pop
lock
inc
cld
xchg
xchg
in
xor
dec
add
loop
pop
repnz
andl
test
int3
pop
jnp
insb
and
mov
and
jg
enter
imul
xlat
push
jg
mov
nop
cmp
sbbl
roll
push
scas
fcmovb
fimuls
fstps
and
add
leave
push
ljmp
mov
jns
add
push
inc
lea
pushf
mov
sahf
movsl
mov
mov
sahf
and
incl
xchg
xor
dec
fmuls
insl
jmp
popa
mov
sbb
lods
jne
in
adc
gs
clc
aas
xchg
sbb
lret
mov
xchg
loope
mov
mov
clc
or
jmp
mov
jnp
jecxz
nop
leave
in
es
idivl
shlb
mov
mov
xchg
hlt
fsubs
scas
pop
mov
push
cmp
scas
xor
repz
sub
sub
xchg
sub
ror
sub
std
cmpsb
push
xchg
pop
jmp
xor
mov
imul
lods
pop
xor
xorl
arpl
sti
push
fadds
cs
ljmp
mov
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
jne
cld
jle
jge,pn
jle
stos
dec
pop
gs
call
out
sbb
movsb
inc
pusha
iret
mov
aas
scas
int3
jne
push
mov
pop
jg
loope
xchg
cmpsl
pop
fwait
cmp
arpl
lcall
into
mov
jg
arpl
xor
jbe
and
mov
loop
pushf
mov
or
and
sbbl
testl
std
xchg
mov
adc
pop
test
and
out
movsb
or
outsl
movsl
mov
dec
or
mov
mov
cmpl
cmc
stos
push
and
inc
sub
rcrb
pushf
jae
bt
add
adc
mov
jmp
xchg
mov
call
out
ret
sub
call
push
andl
push
cmp
lret
das
leave
push
repz
adc
test
sbb
xor
sbb
sub
cmp
into
insl
sldt
push
insb
pxor
jl
xor
and
mov
dec
loop
aas
push
jns
movsl
leave
cmp
add
das
add
sub
and
ljmp
jb
mov
add
rclb
inc
adc
fwait
mov
nop
mov
cmp
add
jp
movsl
aam
jno
or
adc
insb
or
add
xor
dec
enter
xchg
push
scas
xchg
pushf
mov
fdivrs
adc
push
xor
inc
push
je
int
xchg
int3
mov
xchg
divb
shll
xorl
popa
fmuls
lds
sbb
jmp
loop
out
and
jo
pop
lods
in
stc
pop
cmp
cmp
mov
add
leave
int
sub
mov
ljmp
inc
cmp
cli
xchg
mov
hlt
pop
loop
jne
fsubrp
repnz
movsl
lea
jg
mov
addr16
dec
dec
rcrl
dec
ss
xchg
je
stos
push
out
adc
mov
jb
ret
js
shl
sahf
rorl
insb
push
popf
sub
pusha
or
jo
loope
adc
loope
pop
fnstsw
sbb
xchg
adc
sub
clc
cmp
jecxz
sub
insb
add
into
xor
sbb
push
pop
loopne
push
rcll
sub
pop
dec
jle
stos
adc
mov
xchg
mov
or
je
jmp
lret
in
fbld
cmp
add
std
in
and
fdivr
loopne
mov
es
movsb
std
mov
mov
in
call
pop
sahf
je
lds
sub
mov
enter
shll
push
mov
sti
jb
lahf
push
lock
lahf
push
jle
lret
call
popa
add
push
jmp
pop
add
stos
dec
push
pusha
lcall
add
ljmp
aaa
push
pop
sub
lahf
dec
subl
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
je
cld
lds
jle
jge,pn
jle
inc
sub
arpl
dec
insl
insb
xor
xchg
sbb
ficoml
cmp
dec
push
dec
test
idiv
lret
push
lods
or
rcll
int
test
sub
push
pop
mov
outsb
clts
dec
wbinvd
sub
insb
add
jno
jns
pop
ffree
xchg
xchg
pop
mov
loope
or
bound
rcll
mov
ret
aad
inc
inc
mov
jne
loopne
ret
lods
int
fwait
pop
or
sbbb
test
bnd
ja
dec
mov
cmp
push
loop
xchg
xor
test
cmp
xor
and
pusha
mov
lock
push
push
sti
and
adc
loopne
out
xor
sarb
in
xlat
push
repz
mov
xchg
adc
xor
jmp
mov
fldt
fbstp
out
inc
push
ficomps
fiaddl
inc
fildll
shll
call
mov
inc
adcb
inc
iret
adc
add
xchg
jmp
adc
or
call
jo
sti
jecxz
and
mov
dec
cmpsl
notb
push
shlb
arpl
or
scas
dec
int
mov
fistps
xchg
jecxz
in
stc
fisubs
dec
inc
rorb
sub
adc
xor
push
cs
push
push
jecxz
dec
in
mov
pop
pop
lahf
add
lret
or
rorl
push
mov
in
pop
cs
roll
repnz
in
xchg
in
test
add
sbb
push
cmpl
mov
les
xchg
loope
ss
das
mov
call
mov
sarb
popa
fstpl
jnp
das
push
mov
or
sahf
mov
mov
movsl
jbe
ret
xlat
adc
xor
bound
rsm
imull
or
pop
pop
inc
mov
roll
cmp
call
jecxz
cld
and
xchg
test
cmp
daa
dec
sub
movsb
jp
mov
mov
sub
mov
xlat
and
leave
jne
inc
jp
adc
jo
lcall
pushf
out
notb
mov
pop
cld
add
dec
lds
jns
or
push
aaa
out
sbb
and
adc
in
and
adc
aaa
mov
add
lcall
dec
jl
and
aaa
into
insl
insb
add
mov
mov
lcall
ja
mov
sbb
adcb
inc
hlt
shll
jge
neg
sbb
sub
repnz
ja
in
push
mov
shll
std
scas
int
adc
dec
ret
lcall
cmpsb
aaa
lcall
adc
push
dec
repz
cmpsb
popa
sbb
xchg
test
ja
outsb
jle
insb
push
dec
mov
jb
add
inc
cld
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
mov
jle
jge,pn
jle
ds
pop
popa
stos
movsb
jge
push
or
inc
mov
cmp
dec
shll
cmc
push
sub
inc
mov
add
mov
mov
imulb
aad
sbb
cs
fwait
movl
push
and
mov
pop
fdiv
dec
lds
int3
aad
xlat
jno
jge
pop
sub
mov
or
xchg
stos
jmp
sbb
inc
pop
fucomp
leave
int
fistps
xchg
jp
lahf
or
push
aad
imul
adc
push
fnsave
nop
jecxz
cmc
cmpsl
or
jg
xchg
hlt
in
js
jp
ljmp
jg
cs
cmovp
movsb
and
int
fucom
fs
leave
xor
and
jl
sti
adc
xor
enter
fwait
mov
popf
cmp
in
ret
arpl
mov
mov
shlb
insl
or
inc
xchg
test
shlb
xor
addr16
ss
hlt
lcall
pop
mov
in
adc
push
ja
pop
lahf
sahf
pushf
jne
pop
jg
sbb
aad
lea
inc
push
adc
pop
test
outsl
xchg
push
xor
jp
add
mov
das
sub
xchg
sub
adc
dec
cwtl
jno
out
sub
test
adc
mov
cmpsb
sub
addr16
adc
xlat
pop
push
es
int
pop
adc
pop
mov
mov
xchg
aaa
pop
push
stc
mov
mov
mov
mov
sub
je
push
out
dec
dec
outsb
sahf
xor
jecxz
mov
test
and
push
ds
and
ret
inc
lret
gs
mov
xor
bound
sbb
mov
and
inc
mov
fnstenv
and
mov
pop
in
stc
test
incb
and
pop
das
adc
xor
test
sbb
inc
into
inc
scas
cwtl
iret
sbb
jo
xor
pushf
loop
add
fsubl
jo
clc
cltd
popa
aad
dec
inc
jl
sbb
fldenv
pop
mov
outsb
out
pop
int3
jne
mov
inc
push
xchg
add
sub
jl
das
testl
xor
scas
imul
ljmp
sahf
rcrb
shl
pop
mov
ret
setae
iret
fcmovne
sub
mov
mov
cmp
jo
je
fmull
add
jp
push
dec
lods
in
and
notb
add
jmp
jmp
mov
insb
lods
shll
int3
xchg
xor
sbb
xchg
push
movsl
decb
sti
out
cwtl
fcmovbe
push
daa
add
push
push
repnz
adc
adc
mov
sbb
jp
in
jp
or
test
add
jp
fisubl
push
adc
jmp
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
jns
jne
leave
cmpb
jge
jle
xchg
pop
stos
xchg
dec
leave
jp
sub
mov
xchg
and
lods
or
push
aam
dec
lret
movsl
clc
test
adc
clc
pop
xor
mov
repz
daa
cmc
or
in
jae
cmp
jge
pop
mov
shr
mov
xor
outsl
dec
sbbb
cmp
iret
lea
sub
pop
das
xor
gs
loop
xchg
inc
xor
add
jnp
idivb
out
push
insb
movl
in
adc
loopne
pop
mov
hlt
mov
add
mov
ja
rcrl
push
or
repnz
add
and
mov
dec
decb
shlb
push
mov
pop
pop
out
mov
xchg
xor
inc
dec
pop
ds
and
idiv
pop
dec
insb
fucomip
jg
lcall
mov
push
pop
push
inc
aam
mov
lcall
push
sbb
dec
inc
pop
jmp
ret
mov
jb
jns
shlb
dec
rcrl
jo
sub
cmp
mov
fstl
pusha
or
fcomps
in
xor
loop
addl
pop
xor
xor
jo
cld
shlb
aas
les
jle
inc
push
lds
shll
sub
ficoms
push
xchg
les
dec
in
sub
mov
pop
outsb
mov
cwtl
lods
stos
into
lret
mov
dec
fcmovb
and
inc
xchg
mov
inc
sub
dec
xor
dec
cld
das
ja
icebp
push
mov
lret
es
fdivs
mov
cmp
test
xchg
mov
dec
jle
jae
test
in
sub
repz
js
pop
loopne
sar
ss
or
cmpsb
icebp
xor
ja
fnstsw
ret
call
mov
test
and
mov
and
in
xchg
ret
iret
adc
loop
sub
pop
jns
icebp
test
fstp
cli
mov
pop
sub
mov
add
mov
push
pop
push
xchg
sub
mov
lds
mov
fwait
jecxz
mov
adc
xchg
int
add
xchg
mov
pop
mov
mov
rorl
lods
test
dec
mov
mov
mov
dec
xchg
lea
insb
xor
inc
mov
jae
dec
fisttpl
stos
jne
xor
out
add
test
push
cmp
pop
and
lock
jo
cmp
add
and
adc
repz
jno
and
es
insb
js
sbb
cld
dec
movsl
movsb
jge
ret
cmp
arpl
clc
imul
jne
pop
xchg
cmp
mov
push
or
pop
iret
jb
or
popf
xchg
pop
xor
lods
movsb
and
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
cmpl
jecxz
push
lcall
stos
jl
es
add
loopne
mov
cmpsl
ss
push
xor
call
pop
cmp
push
mov
push
movsl
adc
mov
mov
pop
pop
pop
pushf
imul
lock
testb
or
std
cmp
xor
aas
lock
mov
adc
cwtl
imul
scas
lock
mov
xchg
sub
mov
cmpl
push
jo
cli
cmp
cmp
lock
or
jno
inc
and
push
xor
inc
and
test
cmp
sarl
repnz
js
dec
or
or
aam
out
adcb
mov
pop
mov
nop
mov
push
icebp
mov
cmp
jp
mov
sbb
sti
xchg
or
in
mov
enter
jo
adc
out
outsb
xor
int
imul
pop
sub
popa
cmp
sub
inc
or
cmp
sbb
add
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
mov
jle
and
jle
fdivr
inc
repnz
test
ja
ljmp
call
int
int3
out
sub
lods
jnp
je
sub
and
test
mov
mov
out
addr16
mov
push
pop
loop
and
cmp
sti
inc
mov
lcall
adc
adcl
rorl
push
shrl
dec
imul
push
cmp
mov
mov
xor
shrb
xchg
push
dec
cmc
adc
mov
aam
push
es
jb
lret
out
or
out
std
sbb
pop
inc
scas
out
repnz
jbe
std
in
aaa
test
cmp
mov
mov
popa
adcb
cwtl
adc
dec
push
popf
out
push
pop
in
xchg
push
dec
jge
xor
dec
aaa
or
sub
sub
in
dec
and
add
adc
imul
jb
jmp
int
fstpt
dec
movsb
push
xor
pop
clc
loopne
or
fdivrs
dec
outsb
push
loope
aas
cmpsb
std
ja
sahf
out
cmp
pop
iret
fs
scas
jbe
cwtl
xlat
addr16
leave
fdivr
jne
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
push
cs
push
jle
and
jle
jg
push
imul
cltd
cmp
pop
sti
clc
lock
dec
adc
dec
mov
andb
fbstp
pop
jno
mov
dec
fwait
cli
jge
mov
pushf
push
or
scas
lock
add
rcll
cltd
out
das
xlat
jbe
aaa
stos
mov
mov
inc
test
dec
movsb
and
push
shufps
inc
inc
jnp
jae
imul
cmp
inc
or
stos
ds
insl
lock
sbb
sbb
adc
repz
dec
shr
in
insl
mov
push
ret
stc
xchg
and
mov
ds
ret
pop
sub
pop
cwtl
mov
bound
sbb
mov
pop
jg
dec
lahf
leave
cmpsl
cmp
push
loopne
xchg
cmp
flds
out
aaa
fldcw
shrb
pop
cwtl
jl
xor
dec
lods
push
xchg
add
or
or
xchg
repz
adc
xchg
mov
loopne
fisubrs
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
pop
ret
add
jg
jle
xchg
xlat
cs
out
sub
push
mov
pop
cmp
cmp
shrb
sub
test
cmp
js
fistl
cmovnp
or
in
mov
repz
movsl
inc
cmp
or
clc
int3
push
jae
mov
clc
lea
adc
pop
adc
cmpsl
in
and
cmp
push
mov
sbbb
cmp
insl
jmp
xor
jmp
jmp
test
pop
or
loope
in
lods
push
insl
cmp
jo
mov
mov
nop
out
ss
js
push
ret
fxtract
subl
or
dec
imul
inc
in
out
je
fimull
adc
decb
jle
cmc
jo
in
xor
into
jp
test
jnp
adc
dec
or
lods
test
cmc
xor
test
lret
fisubs
and
dec
jb
adc
push
sub
das
stc
jmp
pop
add
rcrb
push
ljmp
dec
sbb
ds
xchg
lea
test
inc
pop
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
movsl
cmpsb
xchg
jbe
mov
and
jle
movsl
sub
sbb
out
xchg
dec
mov
int3
movsb
cmc
jo
addr16
cmpsl
movsb
aad
xor
xor
adc
cmpsl
inc
xor
jmp
lret
pop
mov
adc
and
adc
mulb
insb
repnz
xor
mov
or
stc
add
mov
inc
leave
mov
jle
xchg
lea
or
jbe
sbb
mov
mov
add
cvtps2pd
or
ret
pop
cmpsl
ficoms
fldt
add
push
xor
outsb
aas
cmp
mov
jb
inc
cmp
insb
std
add
inc
mov
sbb
pop
or
outsb
mov
inc
test
test
inc
sbb
lahf
mov
mov
sarb
fsubs
jmp
cmp
xchg
inc
rolb
add
jno
mov
and
mov
cmc
cmp
aad
xorb
arpl
imul
xchg
adc
movsb
mov
dec
jns
or
test
xchg
jmp
mov
jo
mov
scas
sbb
fisttpll
jle
test
pop
imul
pushf
lcall
or
sub
int
jp
pop
add
or
ljmp
movsb
vandnps
fcmove
pop
mov
out
mov
sbb
cmp
xor
imul
lods
mov
test
adc
push
jmp
dec
std
cmpsl
rcrb
in
call
daa
in
imul
sub
cmc
movsl
movsbl
sbb
xchg
popf
jo
sub
ljmp
xchg
cmpsb
lock
and
add
xchg
js
jp
test
dec
pop
xchg
lret
xchg
das
cltd
rolb
add
loopne
cwtl
cltd
xchg
pusha
add
lcall
daa
cmc
test
pop
in
cwtl
in
dec
add
cmp
scas
mov
std
out
idiv
insb
mov
mov
lods
clc
jl
cmpsl
xlat
sbb
jne
cmp
push
mov
xor
sbb
lock
mov
push
inc
xor
jg
xor
mov
ljmp
daa
jb
push
mov
ret
mov
push
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
mov
pop
orl
push
cmp
mov
cmp
push
lret
arpl
mov
mov
push
mov
imul
ljmp
pop
xchg
jge
cli
dec
mov
and
jmp
sub
pop
mov
sub
push
arpl
inc
xor
push
sub
je
adc
cmp
es
push
ss
or
mov
lock
stos
xor
xchg
push
jae
cmp
in
cmc
jg
jb
dec
inc
loop
jb
out
sub
adc
js
jge
pop
cmp
dec
push
jp
push
xchg
pop
lea
lret
orb
add
sub
xchg
cmp
push
pop
xor
or
out
movsl
xchg
pop
incl
stos
std
xlat
add
mov
pop
mov
xlat
pop
out
xor
jne
xchg
lock
loop
xlat
std
mov
cs
movsl
repz
push
loopne
xchg
fidivs
inc
jge
mov
or
jns
jge
inc
movsb
popf
dec
js
pop
pop
xchg
xor
cld
lret
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
jp
das
test
jg
jle
xor
fisubrl
ja
add
push
cmc
inc
ret
xadd
adc
in
mov
cmp
aas
mov
out
out
clc
cmp
je
inc
cmc
lea
aas
mov
jp
dec
shrb
negb
cmp
les
mov
mov
xchg
cmc
cmpsl
mov
loope
cli
push
mov
fistl
push
les
pop
lods
daa
lcall
test
sub
enter
cmp
lods
jg
stos
in
movsl
lods
fisttpl
mov
xchg
push
lds
sbb
pushf
das
push
pop
addr16
sub
fidivrs
jnp
xchg
xchg
add
xor
int3
dec
mov
imul
jae
shlb
sti
jge
sbb
data16
xchg
and
cmpsb
stos
add
je
mov
js
sub
js
mov
jp
loope
pop
push
mov
xchg
push
adc
dec
jbe
sub
inc
ljmp
pop
subl
pop
jae
jno
add
enter
ja
addr16
mov
outsb
or
xor
inc
mov
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
andl
pop
sbb
mov
cmp
das
push
icebp
fs
je
repnz
mov
into
ljmp
jmp
add
push
mov
aam
pop
enter
push
sbb
sub
mov
dec
pop
push
mov
rolw
mov
xchg
dec
mull
js
out
outsl
xchg
inc
mov
stc
and
icebp
mov
inc
jo
push
call
into
out
xchg
add
xchg
adc
inc
cld
and
add
jg
xchg
movsl
clc
lahf
cwtl
xor
pop
mov
es
mov
addr16
adc
into
testl
fdivl
rolb
mov
ds
aam
lret
lds
es
std
push
imul
into
cmp
sub
jno
dec
add
sti
mov
mov
and
lea
cmpsb
lds
faddl
repnz
mov
push
add
arpl
pop
push
out
shlb
jb
out
sbb
dec
dec
sbbb
aas
cmp
jecxz
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
