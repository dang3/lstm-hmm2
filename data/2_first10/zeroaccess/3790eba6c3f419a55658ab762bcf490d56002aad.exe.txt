push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
pop
sub
repz
subl
es
cmp
js,pn
je
mov
jo
jo
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
sbb
inc
lcall
or
fs
and
sbb
mov
rclb
shrb
xchg
mov
jnp
lcall
fisttps
cmp
mov
jmp
ja
sub
leave
scas
out
cmp
test
xor
dec
out
mov
cmp
inc
iret
add
mov
cmp
sub
leave
dec
or
xchg
stos
adc
sbb
pushf
test
in
and
jmp
cmp
add
jb
sbbw
or
mov
in
jns
push
jmp
inc
mov
add
imul
outsb
push
xlat
dec
cld
int3
fwait
cmp
dec
add
fildl
addr16
add
mov
inc
fidivrl
aas
pop
daa
divb
mov
jb
mov
and
int
inc
adc
cmpsl
fnstenv
cmp
dec
rcl
inc
mov
cmp
push
mov
xchg
sub
xlat
or
idivl
mov
adc
scas
mov
scas
lods
xor
inc
js
repz
shlb
push
xor
sti
orl
jle
mov
add
mov
push
xor
int3
repz
cs
movsb
scas
out
ret
hlt
mov
js
jns
lcall
lcall
sti
mov
sub
imul
mov
adc
sbb
xchg
cmp
outsl
jmp
adc
std
imul
mov
pusha
sbb
push
mov
pop
jns
in
aad
mov
dec
jge
pop
sub
scas
gs
add
cmp
pop
and
nop
test
mov
enter
decl
or
pusha
add
dec
push
imul
clc
add
addr16
pop
xor
std
sti
xor
pushf
mov
mov
scas
lahf
pop
fisttpll
xchg
mov
mov
enter
cmpsl
dec
push
fistps
cmovo
imul
iret
insl
dec
add
mov
pop
xchg
or
mov
pop
inc
in
mov
adc
and
jb
mov
cmpsb
sbb
lret
and
add
sbb
push
sub
jle
mov
out
dec
xchg
xor
fisubs
or
cmp
push
cmpsb
jl
add
xor
jns
cmp
adc
cmp
pop
adc
rcl
cmc
mov
loop
mov
mov
clc
insb
pop
push
call
and
dec
mov
clc
xor
pusha
mov
mov
cmp
pop
mov
jne
mov
add
jecxz
icebp
mov
lret
movsb
dec
out
stc
xchg
push
mov
fisubrs
cmp
sti
daa
jno
xor
scas
stc
shrl
adc
rclb
jge
xchg
cltd
ret
lcall
mov
sub
pop
xor
dec
fld
and
flds
sti
lds
pop
pop
in
scas
cmp
loop
mov
or
dec
into
js
notl
int
sbb
sub
adc
ja
fidivl
pop
ror
sahf
jle
aam
out
mov
jne
pushf
sub
cmp
cmc
inc
xor
push
xchg
inc
mov
insb
push
sub
fidivrl
int3
std
cmp
push
fwait
push
mov
ss
jl
or
jnp
insl
int
inc
and
dec
push
dec
pop
or
push
inc
stc
daa
gs
mov
ljmp
jns
cmp
stc
mov
les
xorb
lret
icebp
jmp
mov
push
adc
shl
push
in
sbb
ss
in
mov
mov
push
dec
arpl
inc
adc
mov
add
es
hlt
cmp
mov
repz
loope
rolb
cltd
xor
xchg
mov
cltd
mov
daa
lcall
into
sub
mov
inc
push
pop
push
or
inc
adc
jecxz
std
inc
imul
adcb
sub
fimuls
jo
in
pop
mov
fs
cltd
jp
cltd
mov
or
jecxz
lock
mov
xchg
call
jg,pt
repnz
and
cmp
pop
jecxz
into
or
and
aad
sbb
mov
mov
pop
jmp
mov
fs
jle
jmp
movb
jp
pusha
pop
out
daa
inc
cld
data16
or
jl
js
lcall
test
cmpsl
jnp
scas
add
cmp
leave
jae
mov
mov
push
add
aas
icebp
mov
dec
rorl
add
rclb
insb
adc
inc
out
in
adc
das
scas
inc
scas
insb
out
xchg
jg
or
ds
rorl
cmpsb
out
push
push
jbe
lock
pop
or
test
fnstsw
movsl
imul
and
lret
mov
rep
pop
aam
fwait
aas
sub
test
daa
push
mov
xchg
inc
idivl
call
mov
xchg
and
mov
xlat
bound
fs
ret
mov
rcl
adc
xchg
sbb
andb
xchg
roll
leave
imul
test
sbbl
lret
mov
into
sbb
xlat
dec
jmp
mov
lahf
loopne
add
mov
mov
insb
jmp
xchg
mov
mov
jmp
or
sti
inc
pop
in
fmull
jae
cld
stos
inc
mov
cwtl
hlt
jle
cltd
mov
mov
pop
and
scas
pop
adc
popa
and
out
mov
jo
fistps
inc
xchg
daa
lea
inc
cmp
xlat
add
push
mov
insb
in
dec
int
pop
mov
test
clc
sub
xlat
lahf
jb
mov
pop
out
sub
mov
xchg
adc
inc
jp
and
leave
inc
cmp
push
and
cmp
xchg
sub
mov
fmuls
imull
cmp
ret
ret
pushf
jb
addr16
xchg
or
mov
jbe
and
dec
movsb
out
mov
inc
xchg
mov
adc
daa
and
push
adc
imul
cld
imul
fnsave
pop
les
test
mov
movsb
mov
xchg
mov
or
jnp
push
jnp
hlt
add
ja
jp
sbb
push
popa
pop
dec
js
call
inc
das
pop
movsl
dec
adc
das
jno
sbb
cmp
mov
lock
add
xor
xor
xchg
mull
icebp
cmp
push
cmp
xor
pop
or
add
xor
sbb
mov
gs
push
imul
mov
mov
lahf
mov
inc
ret
fdivrl
pop
ss
pop
shll
aas
mov
cmpsb
loop
fwait
pop
or
sbb
pop
push
rolb
jle
test
and
jne
jle
inc
push
push
adc
dec
out
or
mov
ss
loopne
dec
inc
add
sub
in
popf
jnp
cld
scas
jecxz
cmp
movsl
mov
cmp
jbe
testl
les
loopne
shll
add
push
jnp
pop
mov
or
addr16
lock
imul
jae
mov
aaa
sub
mov
outsb
jno
sbb
or
addr16
sub
jae
mov
arpl
hlt
jle
out
pop
jmp
enter
loop
or
imul
jmp
xchg
add
mov
jnp
data16
add
pop
cld
xor
stos
dec
add
shrb
arpl
cltd
xlat
into
mov
movb
pop
adc
lahf
xchg
bound
jl
mov
jne
mov
push
xchg
rcll
iret
mov
scas
xor
sbb
in
push
fisttpl
sub
push
stc
xor
jge
cmp
aaa
lahf
sbb
loope
cs
push
adc
rclb
xchg
outsb
cld
addr16
je
or
push
les
std
sub
adc
mov
mov
loope
insl
xor
call
aad
lea
mov
push
and
in
lea
mov
nop
andl
pop
hlt
test
lock
pushf
jecxz
es
nop
or
insb
out
inc
repnz
add
scas
lret
stos
addr16
aas
sahf
add
mov
inc
pop
mov
or
push
jo
xor
jl
xor
negl
jge,pt
cmp
inc
or
inc
push
sarb
fisubrl
jo,pn
mov
imul
adc
je
sti
push
pop
mov
mov
cmpsb
fwait
dec
andl
pop
mov
dec
xchg
inc
in
std
jmp
xor
lahf
lods
dec
scas
xor
sbb
outsl
sbb
pusha
cmp
and
xchg
je
cwtl
cli
inc
jb
adc
inc
sti
jbe
hlt
or
ficomps
cwtl
add
jo
inc
or
mov
xchg
das
jae
cmp
xchg
gs
ja
xchg
scas
stc
nop
mov
inc
cmp
adc
and
ds
imul
add
push
lea
out
mov
pop
jbe
jns
inc
loope
icebp
loope
inc
xor
push
lock
stc
and
shr
inc
jg
js
cmp
pop
dec
addr16
add
in
stos
test
and
in
psubusw
ret
ret
mov
arpl
mov
jg
xchg
cmpsb
sarl
push
and
xor
mov
mov
pop
jp
xlat
adc
clc
xchg
imul
xlat
imul
sbb
pop
xchg
pop
insb
call
clc
mov
or
pop
insl
imul
dec
xor
pop
hlt
xchg
inc
cmp
fimull
lahf
push
cmp
sub
push
imul
push
movsl
push
sub
aaa
cwtl
cmovle
add
xchg
rorl
inc
fistl
or
mov
or
sub
jns
loope
icebp
cmpsl
jae
jle
out
xchg
jl
sub
mov
popf
cmp
in
in
jnp
inc
icebp
sbb
mov
loope
outsb
sbb
ret
or
imul
into
sub
popa
cmpsb
dec
jne
rclb
jmp
or
fcmovnu
int
mov
cli
mov
xchg
add
or
insb
imul
lcall
std
sub
in
ja
mov
or
sbb
cwtl
fwait
dec
cltd
pop
cmp
sub
mov
mov
rolb
jnp
sbb
outsl
inc
xchg
sub
fwait
jecxz
repz
aas
adc
insb
sub
popa
sbb
es
jae
pop
jb
xor
ljmp
std
cld
xchg
mov
repnz
test
cmp
dec
pop
push
dec
jae
sbbl
mov
sub
jbe
dec
addb
and
pop
shll
jb
jle
cmc
push
mov
push
ds
loop
add
or
or
rclb
inc
fimull
mov
xchg
inc
sahf
mov
out
inc
xadd
push
lahf
dec
mov
jno
test
enter
shl
push
imul
and
in
adc
push
mov
mov
add
mov
std
add
aad
adc
adc
dec
lods
test
cmp
call
out
outsb
jmp
add
into
loope
adc
fcoms
dec
xchg
inc
in
jmpw
xchg
pop
mov
add
jb
xorb
lcall
and
daa
pop
sbb
jge
sub
in
inc
les
sti
jno
lock
or
js
and
sbb
nop
notl
push
mov
cwtl
xchg
push
push
jle
mov
mov
inc
test
push
shl
into
ja
cmp
lods
and
push
mov
mov
loopne
xor
cmovbe
sub
jmp
add
cli
mov
and
and
push
push
mov
cwtl
xor
xchg
ret
lcall
fs
jnp
mov
addr16
inc
clc
pop
inc
adc
rclb
mov
pop
mov
cmp
fcmovnb
ret
push
cli
mov
ds
xor
jns
scas
xchg
aad
frstor
js
jmp
pop
push
pop
add
je
int
ss
mov
aaa
jecxz
and
pop
or
mov
dec
aas
cli
add
sahf
inc
inc
addr16
jae
lods
stc
shl
mov
mov
into
jecxz
aas
mov
or
xchg
in
and
mov
bound
ret
sbbl
gs
sbb
aam
pop
adc
sti
push
mov
movsb
bound
cmpsb
sbb
mov
data16
or
and
loope
ficoml
fistpll
leave
sub
sub
dec
lea
lret
cmp
xor
or
adc
inc
push
rclb
data16
js
dec
fwait
test
loope
fstpl
sbb
mov
xchg
sub
cltd
lods
movsb
xchg
scas
fs
sub
icebp
xchg
hlt
cwtl
mov
mov
js
mov
aaa
test
aas
xchg
sub
mov
xlat
jmp
or
rcrb
scas
lret
inc
mov
xchg
lea
push
icebp
cmp
push
insl
shll
xchg
xchg
mov
xlat
mov
jmp
pop
xchg
jns
aaa
sbb
andl
aad
hlt
and
mov
ja
dec
sahf
cwtl
sbb
adc
enter
lret
mov
mov
and
scas
jmp
bound
out
mov
xchg
outsb
jno
out
inc
std
imull
cmp
sbb
jl
movaps
cmp
les
sar
enter
sbb
mov
pop
fsubrp
stos
push
xchg
adc
mov
int3
loopne
rclb
adc
addb
inc
push
push
adc
cmpsl
jno
push
icebp
ja
push
mov
jb
clc
pop
arpl
inc
repnz
sub
jl
mov
mov
mov
adc
rcrl
addb
test
ret
sub
and
rolb
xchg
add
sbbl
jl
push
fwait
jl
mov
shll
dec
addl
cli
ss
movsl
mov
jmp
dec
xor
ljmp
jmp
inc
xor
jb
icebp
cmpsb
jl
mov
xchg
inc
mov
movsl
adc
out
pushf
in
cli
pushf
mov
pop
mov
mov
icebp
aaa
pop
pop
repnz
jbe
mov
movsl
fnstcw
lret
fdivrs
pushf
add
mov
and
sahf
mov
fisttpll
xchg
lahf
fs
call
or
mov
push
jb
imulb
enter
push
mov
dec
fidivl
scas
push
or
imul
cmp
push
orl
jle
and
jno
nop
loopne
jge,pn
out
or
pop
inc
lods
mov
xchg
bndldx
arpl
addr16
sti
mov
sbb
and
clc
sbb
pushf
jmp
test
adc
push
mov
dec
mov
push
push
jl
jbe
pop
out
sahf
add
xchg
inc
fdiv
loop
outsl
inc
push
mov
jle
mov
push
and
cmc
xchg
xor
sahf
bnd
pop
mov
jbe
add
cmp
outsl
mov
rcrl
idivb
push
sub
sbb
loop
push
loop
dec
cmp
push
pop
pop
sub
sub
sbb
push
pop
xor
add
xor
xor
jl
and
mov
cwtl
push
mov
xchg
mov
add
xor
cmp
sbbl
call
mov
xchg
lock
jnp
mov
jecxz
adc
xlat
out
lret
fistpll
adc
mov
lahf
xlat
mov
mov
adc
dec
sub
xchg
xchg
jmp
icebp
xorb
push
or
or
je
cs
sbbb
mov
inc
mov
mov
sub
fsubrl
jae
test
bound
xchg
dec
incb
cmc
jb
mov
pusha
lock
sub
add
cmp
mov
out
inc
jmp
and
outsl
mov
data16
add
push
dec
sbb
jb
lods
enter
cmp
pop
push
xchg
aam
aam
adcb
lods
or
ds
and
mov
sbb
cli
mov
mov
pusha
arpl
mulb
and
xor
arpl
dec
and
mov
add
push
mov
and
mov
ficoms
jns
lret
adc
outsb
push
or
jbe
cmp
sub
insb
mov
aad
xchg
mov
jle
fwait
cmp
and
xor
rclb
pop
fnstenv
mov
push
jns
sub
xchg
setae
pop
mov
call
scas
cmp
lcall
stos
pushf
xchg
hlt
add
popa
fwait
subb
or
lea
cmpsb
test
outsl
pop
imul
or
push
inc
cmp
push
daa
push
shll
mov
es
pop
fdivrl
cmp
sti
adc
jl
scas
sub
repz
xchg
jae
adc
insb
xlat
loopne
cmp
push
jno
xlat
aam
push
daa
jp
jl
jbe
cmp
ds
scas
cmp
fcmovu
sub
inc
fcomp
dec
leave
pop
dec
push
mov
nop
push
dec
cld
orl
js
out
psrld
sbb
sti
push
repnz
cmpsb
dec
mov
repnz
movsl
leave
ds
ja
sub
iret
push
adc
dec
dec
mov
jne
push
adc
cs
les
xor
add
test
mov
lret
mov
cmp
loop
incl
fstpt
jp
dec
aas
pop
popl
dec
gs
shll
xchg
insl
out
mov
push
test
inc
loop
ret
fwait
bound
jl
arpl
mov
mov
or
jge
pop
repz
xor
dec
jne,pt
mov
dec
fiadds
pop
mov
in
sbb
shll
pushf
sbb
das
decb
ljmp
aam
xchg
or
scas
imul
sbb
popl
mov
pop
mov
cmp
push
sub
dec
in
cs
in
sbb
test
mov
dec
out
pop
dec
leave
mov
test
dec
or
mov
les
arpl
nop
scas
ficoms
or
ds
xor
xor
lods
hlt
lahf
mov
push
adc
mov
ret
push
mov
sbb
xchg
push
dec
and
lea
stc
xchg
cmp
iret
jno
mov
popf
in
push
add
mov
lock
shl
pop
cmp
lahf
mov
jae
or
add
pop
lret
mov
call
mov
cmp
push
jp
mov
add
test
add
sbb
mov
lods
xchg
pop
in
js
push
lcall
and
sbb
std
mov
push
sub
js
cmp
sbb
cwtl
xchg
das
sbb
scas
cld
cmp
add
xchg
in
je
jl
xchg
inc
leave
mov
int3
add
ja
cli
enter
push
cwtl
xor
mov
push
push
and
jb
sub
xchg
jmp
shlb
mulb
shlb
adc
fidivrs
add
xchg
js
outsb
shll
push
cmp
stos
mov
cmc
inc
mov
jne
inc
inc
inc
sbb
leave
sub
pop
and
int
mov
sub
imul
cld
mov
pop
loop,pt
es
in
inc
rcll
leave
xchg
out
mov
out
push
xchg
ret
cmp
pop
add
adc
ja
fdivr
pop
loope
pop
push
aas
inc
rcr
inc
mov
pop
daa
pop
mov
and
stos
mov
xor
sbb
xchg
sbb
sub
shrb
jle
xor
push
sub
inc
jecxz
dec
mov
jmp
xchg
cltd
or
sbb
jne
js
lret
mov
sbb
aad
jp
bound
mov
jnp
and
xchg
xchg
xchg
cmc
push
arpl
dec
test
add
scas
outsl
pop
fldt
dec
test
xor
popl
je
adc
fwait
xchg
mov
mov
sbb
push
in
dec
adc
adc
sub
jnp
gs
sahf
xorl
adc
filds
jb
lret
jp
inc
nop
clc
lea
add
and
dec
inc
jb
bound
push
lahf
mov
jl
enter
add
jb
lods
outsb
rcr
sub
jp
sub
loope
cmp
mov
mov
scas
and
push
or
fisubrl
dec
cwtl
jmp
mov
mov
xor
in
stos
outsb
jge
into
mov
mov
loop
hlt
out
ret
mov
popa
inc
xlat
and
push
loopne
fsubr
lahf
loope
nop
inc
sub
aad
pop
fnstsw
mov
cmpsl
aam
loopne
aas
cmc
mov
pushf
daa
cmp
mov
xor
popf
mov
dec
xchg
sub
in
ljmp
mov
sbb
pusha
clc
fstl
addl
sahf
dec
sub
dec
rol
pop
cmp
cmp
xchg
ret
movhlps
push
stc
dec
xchg
outsb
pop
mov
adc
dec
std
dec
aaa
inc
dec
loopne
xor
inc
mov
ja
repnz
pop
inc
roll
pushf
pop
dec
and
stc
pusha
test
add
ret
sahf
lds
sbb
pop
inc
push
xchg
adc
inc
sahf
frstor
shrb
ljmp
xchg
xlat
fldt
jno
xor
outsl
mov
sarl
outsl
aad
jge
out
out
popa
sti
fldenv
jo
mov
leave
stos
ja
lock
xchg
daa
push
mov
sub
aad
jo
hlt
outsb
inc
cmp
and
push
insb
popf
cmp
fistpl
sti
pop
out
xor
mov
lods
inc
ja
add
out
mov
aad
push
mov
xchg
ss
jg
sub
in
jo
add
bndldx
xchg
dec
sub
sub
pop
xor
add
or
pop
cmp
jmp
mov
scas
xchg
xor
adc
addr16
frstor
or
and
dec
push
daa
and
jbe
dec
sbbw
lods
mov
pop
insl
add
xchg
push
loope
mov
mov
lea
jmp
cmp
out
and
pop
xchg
mov
pushl
mov
popa
es
and
addr16
pop
jp
int3
pop
mov
scas
mov
ret
aam
and
inc
jmp
hlt
in
lods
jg
sub
sub
clc
push
adc
stc
push
jg
sub
push
pop
mull
adc
push
insl
cmpl
add
lahf
fisttpl
ret
mov
xchg
adc
sbb
xchg
pop
fsubrp
dec
dec
sub
cs
push
push
rolb
mov
xchg
push
mov
sub
mov
cmpb
cmp
xor
stc
mov
mov
cltd
add
cmc
jne
lea
mov
pop
out
and
jle
lods
popa
cmp
jo
cmp
xlat
inc
sarb
in
nop
dec
imul
mov
data16
cmp
adc
sarb
jmp
mov
push
imul
test
cmpsb
movsb
rcrl
push
mov
bound
xchg
push
aaa
jmp
in
int3
addr16
mov
or
shlb
test
lods
mov
fmul
loop
adc
mov
adc
cmp
popa
xor
xchg
sbb
ror
mov
outsb
pop
mov
lcall
jo
ja
inc
gs
repz
xchg
add
out
push
pop
push
push
dec
lock
and
popa
sahf
fimull
fidivrl
popa
sub
dec
insb
xchg
sub
xor
mov
dec
mov
push
enter
pop
test
cmp
adc
sub
jbe
cmc
pop
shlb
pop
lret
cmp
and
adc
scas
idivl
mov
inc
cmc
push
mov
mov
cmp
jne
mov
cmp
lret
dec
repnz
aam
inc
repnz
ljmp
push
mov
or
mov
addr16
stos
mov
cmp
sbb
lahf
test
imul
mov
repnz
loope
or
test
sbb
aad
loopne
add
pop
test
in
mov
nop
mov
lea
enter
test
cs
adc
add
and
mov
nop
repnz
cli
aas
push
mov
adc
adc
mov
adc
xor
fcos
hlt
adc
pop
loope
add
pop
test
cli
mov
hlt
fwait
leave
out
push
dec
inc
pushf
xchg
push
cld
mov
cmp
stos
lods
rcll
mov
xor
call
dec
pop
pop
rorb
mov
mov
mov
dec
lds
push
dec
dec
mov
shl
das
mov
mov
idivb
stc
aas
dec
mov
aas
push
sub
jle
pop
mov
dec
inc
test
sahf
push
lret
ds
test
imul
popa
dec
int3
pushf
in
shrl
sbb
in
add
imul
jg
jp
shlb
add
lods
mov
arpl
gs
sub
jbe
xchg
cmpsl
roll
xchg
pop
jnp
push
into
xchg
sbb
stos
or
shlb
std
sbb
add
out
mov
lock
pop
stos
imul
jle
in
xchg
pop
sbb
in
lods
xchg
sbb
test
mov
loopne
daa
sarb
sbb
jnp
idivl
gs
jne
cli
ret
sub
ljmp
push
lock
push
ds
jg
mov
pop
das
inc
insb
sub
mov
lcall
insl
into
push
cmc
or
push
orb
cmpsb
inc
into
es
repz
jns
dec
jle
dec
movsl
js
sbb
or
fsubrs
cltd
pop
or
mov
cmp
mov
pop
xor
sahf
and
lods
push
push
je
sub
fcomi
cmp
jne
arpl
jae
and
bound
cmp
lea
mov
test
ja
jle
and
and
sbb
mov
imul
sbb
movsb
sbb
aam
xchg
fs
mov
push
or
sarb
cmpl
push
xchg
adc
xchg
and
push
mov
rorl
adc
std
mov
test
lock
sti
daa
fldl
test
rorb
fidivl
mov
xchg
pop
fisubs
repz
xchg
push
mov
sub
stc
sbb
sbb
sarb
jg
inc
ja
ficompl
sti
mov
mov
fistps
imul
lock
inc
dec
iret
out
pcmpeqd
cmp
push
jne
imulb
jb
or
or
sub
cmp
sarl
aam
sub
lods
or
mov
into
les
call
stos
add
pop
mov
xchg
sbb
popf
push
test
and
out
mov
push
nop
sub
repz
cltd
adc
movsl
repz
pop
jmp
jo
sahf
sbb
mov
lret
xchg
lds
insl
pop
jbe
mov
rclb
cmp
iret
push
add
stc
mov
jg
ret
xchg
inc
enter
enter
add
push
inc
and
xchg
pop
mov
push
xor
jmp
mov
popf
pop
push
and
into
pop
or
paddq
fildl
mov
mov
gs
hlt
test
push
xchg
mov
jle
fmuls
cli
mov
cwtl
mov
and
iret
call
bound
jnp
int3
stc
push
rdtsc
int3
xchg
in
clc
popa
test
imulb
jmp
lret
cmp
les
adc
lahf
in
xor
mov
xor
lcall
xor
ret
jge
mov
xor
enter
xchg
dec
cwtl
hlt
lock
push
pusha
pop
sub
sbbl
pop
ja
ret
fmul
scas
loopne
out
cmp
jg
daa
dec
jecxz
lock
in
push
lret
daa
cli
andb
push
inc
inc
mov
xor
orl
fstp
lods
adc
and
inc
jp
stc
daa
push
inc
sub
fsubrs
dec
data16
jnp
nop
or
push
jns
add
add
add
clc
xchg
leave
fmull
ja
data16
mov
jnp
roll
je,pt
adc
pusha
push
jbe
ja
arpl
adc
ljmp
pop
daa
jg
mov
lcall
pop
fdivs
movsl
dec
mov
push
xor
pop
out
sbb
mov
int3
and
pushf
aam
repnz
mov
cs
sbb
imul
outsb
xor
sahf
test
push
mov
gs
shll
xchg
jp
sarb
mov
in
idiv
jecxz
arpl
cli
xchg
push
mov
lds
ss
mov
stos
cmp
out
cmp
sbb
mov
push
decb
sahf
push
stos
xchg
sbbb
ret
cld
adc
cmpsb
cltd
sti
or
dec
lock
repz
xchg
mov
dec
daa
imul
mov
add
fiaddl
adc
leave
or
xchg
vprotw
xor
call
mov
dec
aam
imul
je
sti
push
add
or
aaa
cmp
pop
into
fistpl
push
cltd
and
jo
shlb
mov
ret
out
sub
xor
jns
sbb
ret
daa
inc
push
popf
add
sbb
shrl
movsb
cltd
cmp
lret
stos
je
aad
and
mov
dec
mov
cltd
sbb
pop
fs
int3
in
xchg
dec
clc
mov
mov
sahf
jmp
push
insb
xchg
in
out
aaa
jp
lret
idivb
lds
or
xchg
xchg
icebp
clc
iret
xor
add
fdivs
mov
mov
or
mov
cmp
mov
aas
popa
fdivr
pop
push
movsl
mov
add
mov
xchg
xchg
cmpsb
and
mov
roll
sbb
add
popf
cwtl
push
push
call
xor
lea
mov
inc
enter
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
lcall
dec
pop
addl
dec
mov
push
mov
lret
push
movsl
loope
mov
mov
mov
ret
mov
out
xchg
push
or
or
popa
xchg
dec
roll
mov
nop
sub
ss
ror
add
in
enter
ret
repz
cs
js
fcoms
sub
adc
adc
scas
sahf
je
leave
lock
in
cmp
sbbl
bound
jns
inc
stos
pop
ret
in
movsb
push
add
xor
sahf
jl
xor
mov
mov
xor
frstor
and
xchg
mov
sar
popf
inc
dec
jl
pop
add
test
mov
out
mov
sbb
sbb
push
mov
xchg
jg
in
repnz
ss
out
inc
pop
fwait
iret
jno
or
cmp
fisubrl
testl
mov
es
icebp
mov
mov
shrb
push
xchg
rcll
push
mov
imul
and
cmp
jle
cmp
pop
les
pop
sub
mov
jl
aad
fdivl
mov
mov
dec
pop
sbb
pop
pop
dec
or
xchg
cmp
jl
lods
repz
push
lods
movl
bound
pushf
scas
xchg
push
push
dec
addr16
inc
mov
popa
int3
push
divb
sbb
xchg
adc
add
mov
aaa
xorl
ficompl
stc
or
loopne
sbb
loopne
cmpb
mov
out
cmpb
das
or
jne
mov
xor
mov
mov
mov
or
lods
lods
or
cmp
push
mov
call
adc
lds
ss
mov
adcb
mov
or
jbe
out
out
mov
xchg
xchg
sarb
pop
data16
jg
sub
cmp
rorb
scas
ds
fdivr
mov
imul
mov
xchg
out
movsl
xchg
pusha
mov
repnz
cmpsl
call
dec
sub
mov
cmpb
adc
nop
mov
sub
and
out
xlat
xor
lods
pop
shl
pop
dec
loop
jp
repnz
pop
and
inc
push
push
mov
mov
xor
sbbl
rclb
sub
adc
mov
and
jl
mov
sub
cmp
shll
sbb
xor
cmp
fucomi
insb
mov
lret
shrb
rorl
shrl
into
push
xchg
mov
mov
push
adc
imul
lret
hlt
iret
lock
cmp
mov
jbe
dec
addl
xchg
cmpsb
cmp
lds
jl
popf
call
xchg
jbe
mov
push
jp
add
cmp
xchg
test
sar
fcmovnu
mov
int3
jmp
shlb
jno
sarb
add
cld
pushf
das
jb
insl
push
ror
stos
sbb
mov
cmp
push
lock
sbb
std
dec
clc
pop
sub
data16
dec
mov
mov
rcr
bound
jecxz
repnz
dec
adc
fildll
push
movsl
mov
mov
xor
int
mov
xchg
imul
pop
jg
addr16
xchg
data16
sub
mov
inc
sub
in
dec
mov
jge
dec
mov
xor
lods
aad
mov
mov
in
or
in
es
aas
xor
push
movsl
repnz
add
pop
andl
lods
jmp
repz
xchg
and
mov
out
mov
loope
xor
outsb
out
mov
inc
xor
mov
les
mov
repnz
addr16
in
xor
call
jmp
xchg
mov
pop
adc
rcrb
sbb
push
push
aaa
sbb
push
leave
and
repz
sbbb
imul
xchg
movsb
data16
push
out
jnp
daa
in
iret
test
movb
push
ja
jbe
mov
test
lods
int3
daa
jl
bound
inc
rol
sub
adc
imul
jle
ja
xchg
call
and
xchg
or
inc
pop
cwtl
stos
dec
pop
xchg
inc
jle
data16
outsl
inc
xlat
adc
push
pop
repnz
aad
rcr
inc
adc
js
push
lahf
daa
or
ret
stos
sahf
js
inc
loope
cmp
inc
mov
push
call
adc
imul
xlat
outsb
arpl
bound
cmp
loope
xor
or
adc
mov
inc
jno
mov
lahf
out
cmp
or
not
inc
dec
sbb
jno
adc
adc
and
lock
pop
add
dec
dec
mov
mov
repnz
dec
add
mov
dec
test
loope
insl
add
dec
or
xchg
popa
and
add
lods
icebp
cmc
cli
mov
pop
sbb
xlat
fstps
loope
lret
lods
jl
push
js
xchg
cmpsl
xor
out
fs
aad
xchg
and
leave
shl
shlb
insb
mov
loope
ds
cmp
sti
jnp
stos
push
inc
inc
add
scas
js
test
pop
mov
mov
iret
sbb
and
mov
scas
jp
push
ja
movsl
jl
or
stos
dec
and
adc
call
test
adc
xchg
call
lcall
cmp
mov
pop
popa
into
dec
aas
add
xor
push
mov
jns
mov
sahf
add
sti
leave
or
sti
cltd
enter
mulb
xor
fstpl
or
scas
sub
rolb
jle
clc
popf
jecxz
pushw
iret
xor
repz
adc
xor
in
jecxz
loope
int
xor
xchg
test
nop
add
in
mov
push
insb
inc
test
shrl
push
pop
inc
clc
aam
or
pop
mov
dec
hlt
cmc
bswap
sbb
in
cmc
lret
repnz
int
dec
mov
in
xchg
lcall
js
pop
push
or
or
ret
shll
cmpl
xchg
inc
cs
push
xorl
pop
fidivl
jbe
cmp
testl
push
pop
adc
jl
inc
jp
outsb
cltd
xchg
das
cltd
fnstenv
out
shlb
inc
repz
test
or
adc
lds
ret
xor
cmp
adc
or
adc
and
xchg
iret
or
mov
ds
lcall
sub
add
popf
mov
call
incl
jmp
in
fistpll
shlb
or
pop
in
movsb
nop
mov
pop
xchg
aam
or
stos
pop
pop
subb
mov
cmp
ss
inc
lret
xchg
imul
in
xchg
mov
pop
js
mov
jno
cmp
in
sub
loope
push
cld
cmp
aas
xchg
pop
ljmp
adc
lcall
mov
repz
jmp
mov
dec
mov
aad
inc
jne
shll
fxch
loop
ret
add
cltd
arpl
rcll
xchg
dec
xchg
mov
cli
fistpll
xchg
mov
xchg
icebp
jecxz
inc
add
imul
adc
fmull
lods
pop
pop
je
mov
fnstcw
jl
inc
xchg
sbb
iret
mov
cmp
sub
sbb
hlt
repnz
movsb
xor
mov
fidivrl
rcll
fsts
imul
movsl
test
jl
fsts
sub
add
xchg
or
lret
push
cwtl
int
jle
and
jg
in
cmp
mov
nop
ss
jb
int
mov
mov
out
inc
xchg
ljmp
mov
in
adc
and
mov
movsb
leave
fistpll
lods
xchg
or
xor
push
es
rorl
das
pop
inc
adc
push
dec
mull
push
inc
es
push
das
or
call
xor
xorb
mov
adc
jno
das
push
mov
jb
out
sarb
aaa
push
pop
mov
aaa
mov
aam
xchg
xor
inc
fistpll
cmpsb
scas
mov
cli
daa
jle
clc
dec
push
push
jne
and
cmp
adc
xor
xor
mov
shrl
rcl
testl
out
and
mov
xchg
adc
and
lock
xchg
push
sbb
cmp
dec
outsb
sbb
ja
sarb
lcall
arpl
and
xor
cmp
add
lret
and
mov
aam
outsl
repz
aad
push
cmp
add
xchg
xor
or
sbb
icebp
xor
mov
or
mov
int
jbe
aad
or
bound
pop
mov
movsb
movsb
mov
cmc
lock
cmpsb
xor
jp
xchg
sub
xor
mov
aaa
xchg
sbb
add
mov
mov
pop
push
cli
int3
out
scas
or
dec
inc
adc
xchg
popl
inc
sub
loopne
push
loopne
out
icebp
movl
and
stos
je
sbb
mov
jge
inc
inc
jge
sub
inc
js
push
aam
aaa
sbb
xor
and
aaa
out
int
arpl
movsl
sub
adc
int3
mov
neg
fnstcw
sub
or
xor
dec
push
push
les
pusha
mov
dec
scas
imul
xor
and
dec
rcll
sub
add
xor
pop
out
mov
add
cmp
out
mov
or
mov
jb
bound
jbe
push
xchg
or
les
es
cmpsl
mov
inc
mov
lcall
cmc
xor
aam
push
enter
and
pop
fmuls
ret
lock
fdivr
inc
xchg
sub
adc
rolb
mov
lock
clc
pop
push
inc
jmp
clc
mov
insb
out
rcr
mov
adc
or
jp
fdivp
stc
ret
xor
outsl
das
fsts
mov
inc
inc
dec
divb
dec
pop
sbb
pop
and
mov
mov
inc
out
sub
add
and
arpl
cld
and
xchg
pop
out
jnp
icebp
sub
jge
mov
cmp
add
js
jns
push
cmp
mov
dec
cmp
into
cmp
xor
push
hlt
mov
pop
inc
mov
xchg
xchg
mov
mov
test
jg
out
popa
ret
fsubrs
inc
cltd
mov
dec
cwtl
dec
les
les
xor
xlat
adc
test
ror
popf
xor
inc
ja
iret
cmc
xor
nop
pushf
out
shll
cmpsb
push
iret
jp
movsb
les
aaa
sbb
fwait
jo
or
cmpsb
and
leave
inc
ja
mov
inc
loopne
dec
add
mov
jge
out
sub
addr16
push
ds
stc
ficompl
repnz
or
ret
lock
xchg
adc
jo
into
xchg
addr16
stc
cmp
rcrl
add
sbb
divb
lods
scas
fnsave
pop
cld
cmpps
or
cltd
mov
sub
mov
ja
push
add
lret
mov
loope
test
push
int
jnp
pushf
xchg
xchg
pop
outsl
scas
xchg
popf
imul
test
or
rolb
cmp
cmp
ja
fwait
mov
aam
jecxz
ret
add
dec
in
mov
inc
mov
mov
ffree
call
mov
sub
hlt
mov
test
and
lret
ljmp
movsl
or
xor
bound
mov
ds
flds
sbbl
xor
cmp
pusha
cmp
inc
cs
sub
xor
bound
loope
jge
ljmp
pop
shr
add
cs
pusha
xchg
psubd
lcall
push
sbb
push
testb
insl
fmull
das
add
rorl
inc
mov
xchg
ljmp
pop
arpl
add
mov
out
adc
mov
sbb
scas
dec
das
arpl
xchg
std
loope
in
cli
dec
ja
loope
jno
mov
mov
sub
and
iret
mov
int3
shrl
jecxz
xchg
xchg
scas
adc
lret
and
xchg
inc
and
and
arpl
fcomps
roll
lock
mov
std
jae
mov
xor
xchg
jae
xchg
bound
xlat
sbb
mov
pop
jns
or
enter
mov
mov
jecxz
lcall
in
lahf
lcall
movsb
jb
push
pusha
sbb
in
fs
in
push
adc
mov
fmuls
adc
lret
test
ss
enter
push
mov
mov
and
mov
fisttpl
adc
jne
push
daa
or
xchg
jle
sbb
jae
repz
add
movsb
xchg
outsb
ljmp
pop
xchg
arpl
out
aad
aaa
sar
mov
push
test
jl
pop
mov
in
inc
xchg
test
insl
xor
std
cmpb
dec
push
cwtl
xor
inc
mov
cmc
fldl
mov
enter
out
std
iret
je
mov
push
dec
pop
ds
cli
outsb
xorl
xor
cmp
or
test
ds
push
gs
sarl
mov
mov
mov
jmp
adc
sbb
inc
jae
xchg
loop
in
cltd
cmp
in
inc
cmp
sub
fmull
and
pop
xchg
repnz
hlt
movsb
stos
lea
mov
stos
mov
fstl
push
sbb
inc
xor
ds
subb
push
jb
repnz
movsl
jae
jle
cmp
fistl
mov
pop
mov
jp
pop
cmp
dec
sbb
insl
mov
or
jne
jns
sub
in
sbb
gs
lret
add
pop
sbb
cld
xchg
fs
mov
add
xchg
xlat
sbb
test
out
into
lret
sub
pop
roll
jmp
mov
push
and
enter
cmc
mov
sahf
cmp
testb
in
dec
adc
std
int3
out
add
das
insl
inc
jb
insl
push
inc
push
stc
or
enter
aam
lods
add
lods
adc
add
gs
mov
aam
test
int
xchg
jbe
adc
sbb
mov
aad
cmp
adc
imul
rcll
aad
aam
jb
fstl
pop
pop
fdivs
adc
and
out
mov
mov
aaa
xor
ljmp
test
loope
cmp
out
jp
popa
lret
xchg
or
pop
icebp
dec
or
cmp
push
fisubrl
in
mov
pop
and
sbb
cmp
add
jne
aaa
ffree
ljmp
or
ret
or
xchg
inc
and
popf
int
dec
and
or
aaa
mov
inc
dec
jg
mov
lret
push
mov
es
pop
fwait
outsb
daa
dec
add
or
push
ftst
push
shrb
xchg
push
test
sbb
into
pop
icebp
fcmovne
inc
xchg
jle
int3
add
sbb
pop
jle
mov
int3
stc
aad
jnp
shlb
jle
pop
add
cmp
dec
int3
mov
jae
dec
sub
mov
out
js
subl
test
orl
lret
pop
or
ljmp
adc
add
loopne
and
ljmp
add
das
or
data16
mov
fmull
sbb
cmc
lods
pop
cmp
popa
sahf
sbb
out
inc
mov
mov
cli
inc
and
stos
and
adc
jg
cli
add
jo
jg
xchg
xchg
mov
aad
or
xor
fistpll
push
add
adc
mov
cmp
xchg
leave
aad
push
pop
out
sbb
js
xchg
mov
xor
sbb
int3
adc
cmp
lcall
mov
mov
sub
out
pop
sbb
scas
add
inc
or
mov
mov
xchg
fmulp
push
pushf
mov
lods
movsl
mov
cmpsl
fldenv
cmc
xor
in
mov
hlt
test
cmpsl
repz
mov
jb
pop
imul
sti
fisubl
sti
jmp
and
inc
xor
mov
jno
std
repz
stos
mov
cmpsb
in
cmp
mov
cmc
dec
sti
push
or
mov
pop
mov
dec
jno
stos
lret
mov
movsb
mov
dec
mov
insb
and
enter
repnz
sub
mov
and
mov
or
test
sbbb
movsl
cmpsl
insb
inc
lods
pop
push
adc
or
jge
lahf
fcmovb
fildl
das
xchg
imul
inc
jnp
mov
dec
jge
inc
outsb
fisttps
jg
ss
in
outsb
clc
inc
sub
sub
sbb
sarb
data16
jno
insl
push
fdivrp
clc
loopne
testb
test
mov
subb
test
or
adc
push
add
sub
add
mov
les
pop
pop
adc
fs
pop
xchg
pop
push
mov
push
xchg
cld
mov
test
fcmovnb
or
lahf
jp
iret
lret
stos
rcrb
lcall
lods
and
or
inc
call
mov
rcl
stos
pop
sbb
pop
and
adcl
xchg
push
fdivp
add
mov
jmp
test
sub
popa
rclb
in
fyl2xp1
ljmp
mov
test
mov
je
jl
das
push
pop
jecxz
push
movsb
inc
or
adc
mov
cld
mov
addb
push
loop
icebp
dec
data16
add
adc
add
mov
clc
jp
ret
and
adc
ja
dec
sub
shlb
or
sub
hlt
add
mov
push
aad
cwtl
add
lret
jb
movsl
lret
mov
mov
notl
icebp
xchg
data16
imul
inc
and
lahf
xchg
pop
in
insl
pop
sub
jb
inc
pusha
jne
sarl
jp
and
loopne
fsts
xor
and
push
int
fisubrl
mov
ss
arpl
or
cmpsb
cmp
out
lea
sbb
mov
xlat
xlat
jecxz
push
and
insl
adc
jb
sub
cmpsl
or
scas
in
adc
xchg
lea
iret
sti
dec
sub
or
inc
pop
sbb
int
scas
or
jl
xchg
mov
mov
fidivrs
pop
inc
sar
xlat
mov
aaa
popf
pop
add
sbb
cmp
sub
lret
or
mov
test
pop
pusha
mov
jb
ficoml
mov
es
dec
insl
inc
loopne
testb
or
decb
std
xor
cmp
ds
dec
mov
mov
and
mov
or
xor
and
jb
ljmp
push
lret
int3
pop
dec
shl
js
jbe
inc
jbe
pop
and
jp
mov
pop
xchg
push
push
xchg
jmp
stos
xchg
enter
rcr
lock
in
or
dec
jns
popf
out
fwait
scas
iret
jo
and
cmpb
vmovss
cs
pop
stos
push
out
jnp
mov
cs
push
fisttpll
lcall
lock
scas
inc
ja
xor
dec
in
or
andl
push
push
and
ss
fcoml
out
jmp
ss
pop
push
xor
adc
mov
imul
cld
xor
xchg
loopne
jns
leave
add
leave
sbbl
dec
sbb
cmpsl
bound
mov
jmp
loopne
sbb
cli
pop
addr16
sti
bound
mov
jge
stos
ret
ret
xchg
push
std
imul
jbe
in
adc
stos
mov
test
xchg
inc
mov
push
out
divb
add
outsb
xor
cmp
pop
dec
sbb
pop
jle
add
ret
fsubrs
lds
sahf
dec
ret
das
repnz
inc
fcmovnb
je
lret
leave
push
push
dec
shr
sbbb
call
cmc
aas
test
enter
aad
out
mov
inc
pop
xchg
loopne
jecxz
jle
jbe
or
inc
popf
enter
cmp
iret
fmull
scas
jge
inc
dec
lret
mov
hlt
test
movsb
xchg
dec
push
movsb
call
scas
in
std
andl
or
loopne
pop
and
mov
sub
rorl
mov
outsb
dec
adc
addr16
fwait
addl
sarl
aam
sbb
push
inc
or
add
cmp
sub
lock
jp
and
sbb
mov
jecxz
add
fwait
add
cmp
std
insl
pop
or
test
fmuls
adc
lret
sarl
xlat
ja
push
popf
stos
push
dec
lock
cmp
pop
sarb
xchg
push
sbb
fs
and
rcrb
fadd
test
inc
mov
test
push
sub
scas
aam
jnp
hlt
lret
or
ss
loop
sbb
push
into
aad
mov
pusha
pop
fdivl
mov
mov
jmp
push
sub
movsb
pop
stos
mov
and
mov
lods
jl
mov
push
fisttpl
cld
test
or
xlat
scas
mov
addb
push
pushl
or
mov
ret
or
enter
and
cmpsb
xchg
insb
mov
push
and
adc
mov
mov
push
sub
add
fs
test
insl
dec
fldl
add
outsb
repnz
aaa
xchg
stc
jbe
pop
mov
hlt
daa
in
pop
cmp
aaa
fs
pop
mov
adc
test
ds
xchg
call
jle
xor
les
xor
jbe
cmc
and
out
repnz
xchg
inc
xor
into
imul
inc
sbb
cmpsb
pop
rol
arpl
and
jnp
jg
inc
mov
mov
dec
sub
out
push
dec
test
ret
xor
xorl
imul
or
inc
pop
js
enter
cmp
lret
out
add
sti
sbb
out
xor
shll
pop
mov
xor
xlat
daa
fcomps
cmp
loope
cli
out
mov
mov
inc
enter
inc
cmpsb
xor
orb
push
xor
xor
mov
push
orl
mov
fisubrs
jmp
icebp
clc
movsl
lret
aaa
push
dec
xor
inc
dec
sti
push
movhps
pop
adc
je
jno
das
aas
push
and
push
inc
sbbl
xor
adc
stos
lods
lret
repz
mov
xor
imul
mov
cmp
das
mov
inc
cli
push
cld
sar
test
dec
stos
sbb
or
jg
inc
shlb
notl
add
fwait
push
and
pop
test
jno
loopne
das
mov
daa
xchg
mov
or
nop
xor
sbb
mov
or
xchg
mov
lea
out
call
mov
in
cmpsb
and
push
sub
negb
aad
xor
mov
sti
pusha
cs
loop
jp
sbb
jno
xor
cmp
inc
jbe
mov
mov
adc
pop
out
mov
push
shll
repnz
sub
mov
inc
xchg
dec
cwtl
push
cwtl
cmp
loope
call
jmp
inc
ja
and
in
or
mov
sar
ljmp
mov
adc
mov
insb
popa
push
jle
mov
repnz
cmpsl
icebp
ss
mov
shl
sub
dec
jle
mov
pop
xchg
dec
loopne
jecxz
ljmp
out
nop
test
sahf
mov
pop
addr16
in
icebp
rolb
pop
out
aam
dec
sarb
jle
pop
jmp
add
mov
mov
fs
test
iret
push
shll
or
out
xchg
mov
inc
xchg
mov
cmp
loopne
xor
dec
cmp
sbb
js
xchg
cmp
adc
rorb
push
ss
mov
push
mov
jae
jmp
dec
adc
daa
cmp
push
stmxcsr
div
sarb
xchg
sub
dec
jo
xor
aaa
arpl
pusha
loope
nop
pop
inc
push
insb
xor
stc
lret
rep
inc
jg
jbe
cld
xchg
xor
mov
adc
mov
xchg
cmp
push
notl
mov
push
or
ja
mov
sub
out
data16
aaa
mov
bound
in
dec
cmp
aad
inc
jno
cmp
stc
xor
fildl
ja
push
mov
hlt
enter
push
cmp
decb
xchg
out
sar
sub
pop
test
enter
loopne
jmp
mov
idiv
pop
into
in
push
shrl
shr
mov
sbb
sbb
xor
lahf
xorl
adc
fsts
insl
dec
jnp
shlb
jp
negb
fsubrl
mov
and
pop
out
adc
jno
and
jnp
je
inc
outsb
inc
std
xchg
push
addr16
stos
inc
dec
in
sbb
mov
dec
out
add
loope
je
cmpsl
push
test
jg
dec
movd
cld
jl
mov
and
je
push
jp,pn
popf
xchg
mov
mov
or
ret
add
notl
mov
fcomps
btr
add
aam
sub
push
shr
cmp
xor
push
dec
fildll
mov
sub
cli
xchg
das
sbb
pop
test
sbb
cld
loop
mov
ret
add
pusha
or
sbb
xlat
jp
stc
inc
mov
sub
push
movsb
or
adc
in
popa
xchg
adc
and
ljmp
imul
bound
mov
stc
mov
dec
push
or
pop
sub
sub
js
jno
fildll
cmp
and
repnz
xor
inc
push
xchg
push
pushf
andb
testb
or
pop
add
pop
dec
xor
bound
shll
jns
jmp
es
pop
jp
inc
inc
jae
jbe
testb
mov
xchg
mov
xlat
and
adc
pop
in
mov
or
mov
cmp
or
lret
loope
orl
lea
imul
mov
subl
fidivs
sbbl
dec
and
mov
push
mov
cmp
mov
sub
and
fs
push
es
xorl
mov
push
in
cltd
mov
mov
mov
lock
and
fadds
das
cld
call
add
mov
dec
cmp
and
xor
test
inc
lcall
subb
xchg
cmp
repnz
pop
je
inc
inc
out
xchg
jp
dec
push
iret
mov
enter
test
and
cmpsl
rcll
shrl
lods
test
mov
outsl
aaa
inc
bound
loopne
cmpsb
popf
jp
mov
mov
sahf
bound
daa
xor
dec
imul
or
dec
cltd
cmpsl
add
scas
xchg
sub
mov
mov
scas
adc
add
rclb
add
jb
mov
and
sub
or
jb
jmp
pop
icebp
mov
aas
xor
push
cmpsl
insl
int
lock
xchg
clc
loopne
dec
cmpsl
cmpsl
les
call
sub
test
cmp
pop
mov
rol
pop
stos
pusha
push
lock
addr16
adc
cmp
mov
sbb
popl
stos
enter
cmpsl
sub
cs
cmp
cmp
xchg
pop
dec
cli
fs
call
cmp
cwtl
jb
cmpb
mov
jecxz
std
cmp
jb
xor
fisubl
or
stos
sbb
mov
pushf
jecxz
lret
adc
in
dec
mov
shrl
xchg
ficomps
xchg
aam
cmpb
dec
insb
movsb
push
or
cmp
jle
les
cmp
movsb
int3
jmp
ja
xchg
fisubl
xor
push
ret
into
or
push
dec
rorl
jecxz
or
and
mov
inc
mov
push
mov
mov
push
push
pop
pop
inc
mov
sub
mov
mov
adc
pop
dec
and
cmpsb
sbbl
dec
test
xchg
leave
inc
movsb
clc
and
fisttps
shrl
imul
les
jle
fsubl
test
xor
sbb
dec
into
mov
and
jb
jl
adc
es
lahf
pusha
mov
aam
mov
addb
ja
repz
pop
add
adc
enter
lahf
jne
dec
scas
jae
inc
adc
add
cmp
ret
lea
push
fcmovnu
scas
enter
push
pop
fwait
mov
dec
andl
inc
sbb
shrb
test
and
inc
jl
aad
jo
notl
fldpi
jp
int3
outsb
in
bound
add
push
inc
and
push
xchg
push
mov
data16
push
fnstenv
mov
lods
pop
adc
cmpsl
scas
pop
inc
adc
data16
mov
and
mov
cmp
jp
shr
jne
lret
jb
fnstcw
rorl
inc
xor
shrl
cmp
sbb
adc
fcomi
add
mov
lea
int
push
imul
dec
sarl
and
fbld
ret
jo
jmp
ficompl
scas
andl
sub
fwait
mov
and
sub
int3
hlt
cli
mov
outsb
jno
mov
jb
loop
sub
and
xor
push
dec
enter
xchg
ret
cmc
xchg
imul
mov
shl
hlt
mov
ret
mov
lods
sbb
jge
push
adc
xor
add
push
pop
out
mov
shlb
xor
fisubrs
mov
cwtl
push
cmc
add
fmul
mov
outsl
pop
mov
mov
add
std
inc
fnsave
jmp
xchg
jle
dec
push
pop
ss
je
out
xchg
cmpb
insl
jl
mov
pop
fildl
pop
cli
dec
adc
mov
jbe
inc
or
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
mov
push
dec
adc
addl
adc
mov
testl
add
addr16
ds
aam
addb
add
sbb
xlat
clc
push
and
push
outsl
mov
sub
out
pop
cwtl
xchg
dec
lods
jae
mov
xchg
sbb
fsubl
mov
inc
inc
sub
cmpb
jp
out
cs
je
and
or
cmpl
inc
pop
les
adc
dec
cmp
push
xchg
sbb
lret
xor
add
mov
out
icebp
inc
jo
jnp
lcall
std
and
sub
js
das
clc
sub
insb
dec
int3
stos
int
mov
iret
xor
lcall
or
orb
xchg
inc
lods
mov
lret
push
repnz
or
ljmp
push
out
into
pop
or
sub
icebp
cmp
loop
cmp
sub
cmp
push
or
movsb
cmp
xor
into
mov
test
sahf
loope
xor
inc
inc
mov
xchg
iret
stos
subl
jns
or
les
aaa
insb
add
sub
sti
sahf
sbb
aas
andb
xlat
cwtl
or
mov
pop
sub
add
xchg
les
mov
fdivp
inc
shll
cmp
inc
loope
cli
xor
and
sub
xchg
leave
xchg
xchg
mov
shrb
pushf
lods
sub
inc
mov
fidivl
fildll
fildl
adc
in
xchg
xor
data16
out
or
sarb
push
lret
and
jnp
inc
rcrl
inc
or
ljmp
mov
cltd
enter
lods
cmp
sub
jmp
add
shrb
loopne
lods
aad
lcall
shr
rcr
mov
mov
mov
mov
lock
and
stos
enter
jne
jnp
aas
out
sbb
cmpsl
mov
outsl
dec
lods
roll
scas
pop
sub
cli
int3
cmpb
cmp
gs
clc
mov
mov
shlb
mov
mov
push
xchg
out
mov
in
cmp
hlt
bound
add
clc
sbb
xorl
xchg
pop
jae
cmp
pop
push
out
js
inc
in
or
out
dec
jmp
add
repnz
into
xchg
les
mov
xchg
pop
iret
cmpl
mov
ja
pusha
shl
or
adc
inc
jl
pop
je
push
mov
fidivrl
call
cmpsl
pop
push
add
adcl
leave
mov
inc
rorb
pop
cli
fldenv
pop
pop
xchg
stos
icebp
loop
mov
fwait
ss
aad
xorb
cmpsl
inc
cli
leave
jl
lds
icebp
je
insl
lock
cli
push
inc
and
mov
pushl
push
or
aaa
icebp
rcl
hlt
aad
imul
aaa
dec
hlt
mov
mov
ljmp
cmp
pop
cmp
test
adc
push
cmp
mov
lods
test
mov
mov
nop
dec
or
inc
test
aas
iret
mov
or
cwtl
outsl
and
cmp
or
push
push
mov
test
ljmp
mov
mov
rcl
lods
rcrl
inc
cmp
jne
mov
mov
mov
stc
ljmp
lea
fs
flds
push
and
pop
sbb
shl
jg
jmp
ss
faddl
ret
js
push
test
gs
aas
cmp
dec
mov
xor
xor
sti
push
mov
and
fsubrl
shlb
test
pop
jl
lea
popf
neg
mov
xchg
dec
push
or
je
ss
lods
test
add
fidivrs
mov
cs
sbb
popf
push
add
cmc
mov
lret
fwait
dec
add
mov
push
xlat
jno
sub
mov
dec
insb
call
repnz
js
xchg
push
addr16
and
xchg
dec
fisttpl
mov
nop
adcb
cli
shlb
pop
inc
mov
push
inc
aad
jg
mov
jno
imul
xchg
mov
ds
push
cmp
fsub
push
out
aad
mov
out
dec
push
cmp
aad
sub
out
xor
ljmp
cmpsb
mov
mov
fldcw
or
stos
ja
mov
xchg
sub
leave
ja
mov
inc
arpl
xchg
rcll
lea
push
adc
leave
xor
lret
add
lods
jbe
lods
mov
cmp
fldenv
push
xor
js
imul
in
insb
push
sahf
lret
sti
mov
clc
nop
mov
sbb
ljmp
inc
shll
roll
jmp
push
mov
pop
sub
gs
out
mov
xchg
lret
dec
fiaddl
movb
push
scas
stos
hlt
jnp
cld
jno
and
inc
cmp
scas
mov
dec
out
push
push
jecxz
enter
cmp
xor
addr16
sub
lret
mov
mov
and
orb
loope
aaa
cmp
inc
cmp
aad
ficompl
jb
mov
bound
stc
andb
movsb
les
sub
test
jmp
mov
repnz
lock
aaa
xor
jnp
adc
in
outsl
sbbl
jmp
pop
cmpb
scas
xchg
mov
pop
jno
loop
inc
mov
adc
xor
stos
push
fsubs
fwait
xor
jae
add
leave
jp
fists
and
jmp
lods
mov
xchg
xor
inc
adc
xchg
mov
lahf
inc
push
aam
sbb
fmulp
sbb
and
pop
sbb
test
push
mov
out
pop
xchg
mov
ret
rclb
sahf
divb
ret
sahf
sub
icebp
rclb
lcall
push
mov
xchg
cmp
std
aaa
idivl
mov
mov
push
gs
jl
je
adc
xor
and
jl
sub
test
inc
movsb
orl
and
repz
clc
enter
sbbl
ja
sti
pop
idiv
mov
lods
int
cmp
icebp
push
xchg
in
sbb
add
jp
mov
pusha
mov
inc
sub
rcr
pop
out
lret
fs
cmpsb
cltd
test
or
andb
lahf
jnp
iret
fs
push
int
mov
cmp
loope
sbb
movaps
and
mov
movsl
pop
mov
test
cmp
mov
lret
das
fsubrp
addr16
pop
dec
leave
out
stc
xor
jno
mov
xchg
jp
out
sub
add
mov
mov
lret
in
mov
mov
rclb
mov
in
add
sub
cs
sbbl
add
push
mov
repz
pop
jb
dec
in
jp
cwtl
iret
sbb
lea
call
mov
jg
pop
imul
sbb
mov
repnz
int
aas
add
int
jg
jp
mov
or
sub
mov
adc
popa
sbb
loope
iret
inc
dec
nop
inc
out
or
sub
dec
pop
mov
sub
popf
stos
add
jmp
call
push
pop
fildl
repz
in
sbbb
fcmovnu
icebp
jecxz
xchg
scas
bound
jp
pusha
out
lods
imul
ljmp
lods
das
pop
ds
pop
jle
mov
xchg
loopne
sbb
jnp
push
mov
clc
push
pushf
sbb
add
imul
stos
outsb
mov
mov
mov
insl
imul
cmc
sbb
add
test
roll
movsb
add
lods
fcompl
stos
dec
mov
xchg
xor
xor
push
or
inc
inc
pop
push
xor
dec
ja
fstpl
cmp
inc
xchg
aas
mov
test
or
ret
cld
xchg
xchg
mov
mov
mov
cwtl
push
ljmp
push
xchg
lea
mov
inc
mul
das
push
jecxz
ljmp
mov
into
test
fmul
jecxz
nop
ret
icebp
out
fisttps
int3
mov
mov
pop
fs
push
pushl
outsb
xchg
mov
xchg
jno
adc
dec
cltd
sbb
std
push
pushf
pop
iret
push
or
jecxz
fmul
repz
je
addr16
add
add
inc
mov
xchg
jo
or
xor
push
aad
push
int3
in
ret
push
cli
out
lea
rcrb
into
push
subl
pushf
or
push
and
mov
xchg
test
mov
add
je
dec
out
sahf
mov
mov
cmp
cmp
add
xor
lods
jne
xor
scas
mov
cmp
test
fwait
jle
lcall
pop
sarl
mov
pop
xchg
sbb
mov
iret
call
lret
inc
sub
ja
rorl
mov
fmull
lea
out
push
dec
pop
scas
dec
mov
xchg
jnp
fidivrl
push
cmp
pop
sub
or
or
xor
pop
push
sub
jmp
mov
jmp
pop
jae
xchg
jmp
popf
andl
fisttpl
stc
loope
clc
adc
mov
cmc
popf
cmp
or
inc
adc
dec
add
adc
pushf
xorb
popf
mov
jo
cs
cmp
rolb
jecxz
in
popf
jge
cmc
add
and
fwait
and
into
push
mov
adc
idivb
enter
mov
mov
pop
sbb
push
test
ficoml
cmp
fisubs
fstl
out
push
jbe
cli
lea
xlat
shll
out
cmc
mov
push
cwtl
xchg
movsb
lret
stos
testb
and
inc
pusha
mov
rcl
inc
icebp
lea
push
ficoml
xlat
mov
repz
sti
mov
xorps
movsb
pop
sahf
adc
addr16
cmp
cmp
out
mov
bound
mov
pop
popf
cmp
cltd
cltd
dec
sub
ret
nop
pop
add
dec
sbb
push
sub
and
and
cmp
inc
das
lcall
cs
pop
dec
add
fbstp
dec
ljmp
fs
loope
sub
fldl
aas
xchg
aad
aas
xchg
mov
lds
xchg
cmpsl
mov
sti
out
inc
cmp
mov
call
ds
mov
call
mov
inc
xlat
mov
xor
loop
cmp
lcall
stos
sbb
jl
pop
mov
fstpt
out
dec
adc
cmp
adc
lods
imul
mov
ret
outsb
pop
cli
lock
xchg
jg
and
jecxz
ret
imul
pop
inc
mov
popf
ss
cmp
jp
xor
mov
cltd
mov
mov
cmc
popa
cwtl
or
sub
ljmp
mov
add
rorb
aad
mov
test
push
stc
sub
xor
test
iret
mov
mov
or
jle
in
les
push
sarl
push
js
std
jnp
lock
mov
fcmove
mov
adc
pusha
stos
jle
fwait
bound
add
stos
mov
int
lock
cmp
inc
test
ret
in
lea
mov
int
xchg
or
in
subb
dec
jge
mov
pusha
pop
or
lds
data16
out
movsb
push
add
in
inc
scas
aaa
lahf
mov
je
in
popf
mov
pusha
enter
mov
out
pop
mov
loopne
sbb
mov
adc
xchg
xor
mov
mov
cmpsl
xchg
loopne
and
or
pop
adc
out
mov
popa
mov
decb
imul
xchg
icebp
inc
dec
outsl
sub
mov
cli
int3
push
sub
cmp
fdivs
add
enter
mov
jne
pop
loop
es
negb
cwtl
imul
cmp
jnp
inc
les
dec
je
mov
pop
push
pop
dec
jl
jns
cmpsl
jle
aad
stos
pop
lret
pop
in
push
in
pop
ret
jne
popa
ds
pop
cmp
enter
icebp
or
faddp
imul
mov
ret
out
popf
movsb
mov
fmull
ja
push
push
shrb
sarb
push
das
mov
dec
or
popf
jo
cmp
dec
loopne
leave
data16
cli
fistps
inc
and
pop
idiv
imull
sti
movsb
or
or
pop
jle
sub
sti
add
outsl
jbe
lock
fisubrs
pop
jb
or
rorl
add
add
fs
xchg
lcall
mov
pop
mov
cmp
xchg
aaa
jo
mov
in
mov
mov
leave
add
sub
and
les
xor
add
les
inc
xor
imul
xor
out
cmpsb
jge
das
popa
imul
data16
aaa
shlb
and
dec
outsl
addr16
mov
mov
ret
pop
xchg
mov
dec
jg
and
gs
aad
jg
push
push
adc
add
push
mov
push
adc
mov
mov
mov
imul
lods
cmpl
xchg
and
rorl
into
testb
sar
sbb
cmp
xlat
cmp
sub
push
xchg
flds
movsl
adc
pop
cmc
xchg
mov
mov
inc
rol
iret
mov
ret
inc
cmpsb
adc
xchg
pop
mov
ja
sbb
jne
xchg
inc
notl
lcall
push
into
sbb
or
popa
mov
and
mov
js
cmp
movsl
mov
jb
jne
das
out
imul
loop
call
mov
pop
dec
lock
mov
jns
push
std
xchg
push
addr16
ss
sti
repnz
stos
cmp
adc
cmp
or
mov
xchg
mov
std
add
sbb
sub
xrelease
js
lods
or
jge
test
subb
nopl
in
rol
jp
je
std
add
hlt
xchg
xchg
test
icebp
repz
mov
mov
jb
cmp
loope
xlat
ret
outsb
xor
fmuls
outsl
gs
mov
pushf
jno
add
cmp
into
adc
mov
bound
sti
fs
xchg
ficoml
cwtl
or
rcr
rorb
mov
pop
push
jle
divb
sub
stos
jg
cmpl
in
jno
and
sbb
sarl
xchg
in
shrl
mov
inc
aad
rclb
jge
popf
adc
out
and
mov
push
mov
ret
repnz
mov
pop
cmp
jp
loope
daa
or
adc
pop
pop
popf
mov
xor
cltd
jne
inc
adc
out
int
mov
fildl
dec
xor
push
or
push
aad
scas
pop
adc
inc
mov
cmp
sbb
cmp
mov
xorl
out
mov
clc
adc
pop
clc
push
or
push
mov
shl
dec
jmp
jae
push
add
inc
es
sub
cmp
jl
push
repnz
lcall
fcomp
add
dec
cwtl
mov
ljmpw
test
push
mov
cmp
jge
test
or
jae
rolb
lret
cs
hlt
mov
notb
mov
shl
mov
xchg
clc
jb
push
rorl
jae
xchg
dec
xor
sbb
lahf
popf
jmp
push
jnp
lods
es
rcr
mov
ficompl
scas
pop
adcl
and
dec
popf
or
pusha
mov
repnz
dec
cs
push
dec
sbb
mov
xchg
sbb
and
cs
and
pop
push
xor
cmp
pop
das
pop
movsl
ja
enter
mov
hlt
xor
aad
pop
stos
dec
incb
jo
lods
lock
jg
inc
div
loope
cmc
lea
icebp
clc
in
ret
mov
cli
push
jbe
inc
and
outsl
mov
sub
xchg
cwtl
sbb
rorb
fadds
dec
pop
push
mov
pop
fs
int
data16
lret
xor
push
fcoms
xor
dec
adc
dec
push
push
xlat
push
add
mov
sub
xchg
mov
mov
aaa
fadds
in
cs
lret
push
add
dec
cmc
dec
or
mov
aam
pop
iret
cmpl
lods
loope
inc
mov
mov
or
pusha
test
scas
pop
shrb
scas
sbb
dec
into
lods
es
and
jmp
adc
cld
and
dec
sbb
push
ljmp
sbb
bts
sahf
daa
out
xlat
out
sbb
out
pusha
sub
gs
dec
int
xchg
cmpsl
dec
bound
jne
orl
jae
or
and
and
jmp
mov
repnz
lock
pop
mov
pop
add
mov
dec
mov
aaa
xchg
add
pop
xor
movsl
xor
fmulp
xchg
aas
ficompl
stc
pop
js
pop
mov
jle
cmp
xor
mov
add
loope
test
adc
xchg
clc
jnp
jnp
scas
es
sbb
xor
sahf
enter
mov
cltd
test
jmp
or
pop
je
notb
mov
sahf
je
pop
xor
int3
pop
daa
movsb
mov
cwtl
sub
imul
add
iret
sbb
cmp
cmp
lea
adc
bound
fdivrl
sub
mov
loopne
mov
mov
lock
ret
dec
pop
aas
ret
cmp
and
mov
xor
aad
xchg
lock
inc
pavgb
xlat
stos
mov
fsubl
js
nop
js
mov
das
lock
out
cmc
rolb
fldl
pop
dec
subl
pop
inc
or
test
pop
in
int
cwtl
stc
jl
negl
sub
loop
xor
inc
inc
xor
fyl2xp1
push
gs
ljmp
in
js
daa
sbb
mov
mov
jle
popa
or
jo
loope
out
lock
fsubrl
mov
mov
pop
mov
fidivl
addb
pop
xlat
pop
mov
mov
movsb
xchg
sbb
mov
xchg
adc
int
call
pop
inc
dec
mov
out
call
mov
stos
push
cmpb
pop
jp
or
cmpsl
int
or
jno
ret
and
mov
scas
ret
lea
lods
fildll
imul
and
loop
sbb
fs
orl
push
movb
jl
aad
dec
int
sub
imul
mov
nop
lods
mov
inc
dec
cmp
nop
mov
test
jne
cmp
stos
jno
cmp
inc
out
arpl
mov
popf
test
cli
mov
sub
dec
or
loop
push
and
mov
in
add
cmp
and
sbb
rclb
dec
lret
bound
lock
push
jno
lea
dec
mov
cmpl
std
scas
outsb
inc
sbb
testl
mov
and
into
hlt
push
and
out
mov
adc
sbb
pop
add
popf
cmc
rcll
pusha
adc
inc
fwait
int
stos
imul
popa
daa
int
insl
es
fwait
mov
sbb
pop
and
ljmp
xchg
mov
out
ret
add
sarl
iret
sub
lret
ret
inc
pop
outsl
adc
lret
icebp
mov
std
xor
push
lret
jb
adc
stos
xor
outsl
pop
sbb
adc
add
jae
leave
xchg
in
repnz
dec
iret
sub
ss
push
ret
mov
mov
insl
sbb
or
push
js
fnstsw
xor
cwtl
cmp
hlt
mov
jecxz
xchg
fwait
arpl
xchg
push
xchg
inc
push
outsb
sub
mov
in
dec
pop
stos
pushf
dec
call
xchg
inc
add
fsubrl
test
push
sub
push
cmpsb
rol
aas
mov
scas
or
hlt
sar
insl
xchg
xor
mov
into
arpl
addr16
es
aam
outsb
xchg
add
mov
ja
rorb
insb
inc
icebp
push
aad
fldenv
addr16
in
cmp
xorl
ds
andl
gs
popf
out
stos
mov
js
sti
stos
cld
mov
lret
sbb
loop
mov
lret
iret
in
push
and
mov
movsb
inc
pop
push
fiaddl
scas
mov
sti
dec
mov
dec
xor
add
ret
inc
mov
jo
scas
js
scas
mov
xor
fcoml
shrl
out
imul
int
insb
mov
jmp
pop
daa
aaa
pop
sub
jge
push
aam
dec
shl
daa
testl
and
adcb
mov
cli
in
push
cltd
sbb
ret
lret
adc
fcomi
mov
aas
cmpsl
cmpsb
hlt
xor
pushf
sub
add
and
ret
inc
sahf
andl
push
xor
lods
test
hlt
stc
or
push
adc
daa
stos
aas
pop
std
mov
inc
daa
mov
push
inc
sbb
dec
in
mov
popa
sub
fs
cmp
pop
imul
in
cmpsl
jb
cli
cmpsl
jmp
sub
scas
xor
xlat
out
test
lcall
repnz
pop
aam
pop
cltd
iret
xchg
jp
les
jecxz
loope
push
ror
sub
pop
adc
fwait
or
rorl
mov
out
dec
cmpsl
sub
inc
xlat
outsb
pop
pop
lods
push
adc
pushf
push
mov
scas
jecxz
push
push
mov
lods
nop
leave
lea
sub
pushf
inc
test
iret
jmp
pop
test
stos
in
inc
dec
dec
lds
adc
ljmp
mov
xchg
call
mov
mov
and
cwtl
dec
into
loopne
ret
neg
pop
imul
in
sbb
and
add
popf
les
xchg
jl
mov
inc
sub
sub
mov
cmp
mov
js
in
int3
stos
sub
mov
scas
sbb
aas
xchg
frstor
lea
jbe
pop
shlb
popf
jo
arpl
pusha
fsub
mov
xor
and
dec
out
jno
aad
aad
stos
sahf
inc
push
aaa
scas
ret
or
les
mov
popa
lret
cmc
fadd
bound
scas
cmp
icebp
inc
dec
adc
fmuls
clc
jmp
lock
cmp
sub
sahf
in
jns
std
jmp
sbbb
test
bound
je
insb
xor
and
leave
orb
cld
add
xlat
fiadds
and
cmp
lret
add
push
push
lret
stos
push
shll
inc
test
sub
pop
and
lahf
jg
dec
fildll
sub
aad
mov
in
dec
cli
push
mov
and
sub
out
add
mov
das
sub
dec
test
xchg
ss
repnz
inc
pop
mov
add
or
stos
dec
add
mov
mov
push
in
push
mov
leave
adc
rcrb
xchg
add
gs
fistps
in
stc
pop
jne
mov
div
repnz
fstpt
int
xor
or
pop
lret
std
or
ficomps
shll
xchg
push
mov
pop
xchg
dec
pop
pop
add
pop
push
fistps
mov
fsts
dec
icebp
push
ljmp
xor
inc
xchg
lds
xlat
leave
daa
movb
xchg
pop
mov
xor
push
dec
inc
fdivrl
fistps
inc
lret
aaa
adc
pop
mov
dec
xchg
and
inc
jl
xor
push
xchg
dec
mov
and
adc
negb
stos
mov
int
lods
int3
pop
out
xchg
mov
fisubrl
push
loop
jb
push
add
in
xor
pop
jl
cmpsb
lods
add
in
add
fbld
push
and
cld
xchg
aad
or
fs
mov
fadds
int
add
popf
xor
jl
push
test
cmc
int3
movl
sub
in
roll
push
hlt
stos
dec
mov
cltd
mov
cmp
int3
inc
xlat
fsubrl
mov
test
stc
mov
icebp
in
push
lock
mov
ds
pop
or
sub
call
cmp
jo
sub
sub
aad
out
adc
jg
push
xchg
xchg
subl
push
mov
mov
hlt
loopne
pop
clc
mov
xor
ss
or
fwait
imul
aas
repnz
outsb
xchg
and
pop
shll
repnz
adc
inc
gs
fildll
and
cmp
fildll
sub
into
jo
pop
fistl
scas
push
ss
sbb
add
stos
aas
addr16
test
shlb
aaa
rcrl
in
xor
xchg
outsb
lret
icebp
aad
cmp
mov
int
mov
mov
int3
mov
sub
ljmp
xchg
inc
mov
insb
gs
cli
push
lods
stos
fwait
mov
js
cld
sub
sub
jmp
pop
fstpl
dec
jmp
mov
push
ficompl
test
nop
shr
cmp
xor
je
std
xor
xchg
dec
pop
fnstsw
push
aaa
clc
pusha
lret
aam
adc
insl
ret
mov
bnd
push
or
adc
cli
inc
das
pop
pop
test
add
push
sbb
dec
cmp
movsb
loop
scas
test
ret
sub
js
out
shll
adc
xchg
mov
xchg
cld
sub
in
out
add
cmpsb
into
leave
cmp
int3
imul
les
mov
stc
xchg
addl
xor
aam
popf
xchg
push
xchg
jno
das
in
notb
or
shrl
pop
cs
push
xchg
pop
sbb
insb
or
mov
out
fptan
test
imulb
jae
fstl
hlt
or
call
cmc
test
dec
je
sub
adc
aam
cmp
fbld
dec
mov
daa
icebp
mov
imul
and
into
subl
add
sbb
mov
insb
lea
cmp
add
mov
inc
pcmpgtd
ja
sbb
dec
aaa
cmp
jb
pusha
inc
pop
leave
out
pop
jmp
add
and
sbb
ds
add
jl
mov
iret
js
mov
sub
xchg
movsl
dec
sbb
mov
inc
pop
or
cmp
pop
inc
adc
xchg
cmp
enter
cmp
fcompl
das
mov
dec
push
sub
out
dec
inc
jb
add
pop
lret
add
pop
imul
dec
sub
out
dec
xor
negb
or
enter
lds
daa
sbb
dec
pop
adc
test
push
test
and
adc
jne
loop
sbb
xor
dec
sub
xchg
jo
aaa
into
mov
cmpsl
cmp
stos
cld
fimuls
imul
es
pop
ret
or
push
mov
sbb
mov
push
popa
dec
das
mov
xchg
and
add
mov
in
pop
pop
std
and
sbb
lret
jge
jmp
and
mov
out
sub
mov
jg
ror
dec
and
pop
add
xchg
dec
jle
and
pop
leave
push
lahf
inc
addr16
daa
flds
clc
daa
and
mov
cli
and
shrb
jl
xchg
inc
xor
sbb
fstpt
xor
mov
fldpi
lock
sub
jmp
and
pop
mov
push
sbb
push
xchg
jp
aas
sarb
inc
je
xlat
lods
sbb
outsl
xor
xor
ret
sub
inc
loope
das
add
xlat
cld
inc
xor
cmc
or
sub
cld
aam
fisubrs
cmp
out
lods
repz
dec
fidivrl
sbb
fiadds
mov
pcmpeqb
shlb
pop
pop
lds
jb
js
mov
dec
rcrl
pop
out
push
jg
loop
fwait
xor
jbe
mov
push
and
mov
or
inc
insl
sbb
test
or
jecxz
ret
and
inc
psraw
dec
adc
es
stos
adc
popf
inc
xchg
lock
mov
cmpsb
loop
in
in
mov
push
push
not
arpl
adc
adc
shl
hlt
stc
sub
xor
inc
jns
in
push
fdivl
loope
mov
push
or
jnp
imul
push
jo
loope
sti
cld
pop
add
xor
sbb
adc
xchg
loop
sbb
inc
jle
add
cltd
jmp
call
dec
faddl
testb
inc
mov
fldt
jmp
or
rcl
outsl
sub
in
cmpl
xor
mov
pop
test
jp
aaa
sub
mov
mov
dec
addr16
shlb
outsb
dec
ljmp
jnp,pn
xor
mov
mov
add
push
xchg
shll
addr16
pop
or
jp
xchg
addr16
idiv
sub
rcrb
lock
pop
and
std
push
jge
cmpl
mov
mov
pop
ds
adc
sbb
adc
and
sbb
adc
dec
ret
fs
int
in
enter
pop
jb
leave
dec
shl
and
scas
clc
outsb
es
inc
ljmp
xchg
dec
jno
fimull
addl
bound
dec
mov
and
pop
jg
adc
mov
loopne
aad
jmp
testl
sub
mov
hlt
mov
xor
sti
lahf
jl
pop
add
loopne
imul
lods
inc
push
stos
adc
movsl
repz
insl
mov
rcrl
into
call
mov
jg
fcomps
sub
insb
aad
adc
movl
scas
popa
pop
inc
mov
stc
scas
push
adc
push
mov
jg
lods
out
jo
out
repz
filds
mov
gs
fisubl
loope
mov
pop
add
sbb
cmp
out
das
loop
inc
cmp
fcomps
mov
scas
jecxz
or
test
jo
or
sub
xchg
sub
and
mov
mov
dec
hlt
sub
jae
xchg
mov
sbb
rol
leave
add
adc
pop
and
push
mov
pop
adc
mov
add
faddl
shlb
xlat
push
out
incl
in
jmp
movb
jns
pop
in
and
lea
outsb
inc
push
andl
mov
or
jno
hlt
jecxz
movsb
mov
in
shl
add
sbb
mov
out
add
orb
xchg
outsb
ja
lret
adc
mov
insb
pop
jae
sbb
and
pop
gs
add
lret
sub
push
push
mov
add
mov
leave
cmp
inc
fsubl
pop
inc
add
push
sbb
mov
inc
iret
arpl
mov
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
push
or
addl
jns
shl
xor
pop
or
mov
sbb
daa
inc
pop
push
andb
inc
inc
dec
xchg
cmpsl
fwait
mov
inc
icebp
dec
pop
xor
xlat
repnz
sub
in
mov
jo
pop
adc
dec
mov
mov
adc
jecxz
insb
stos
in
daa
ja
in
pop
dec
mov
outsb
es
add
pop
cmpsb
out
jp
push
mov
mov
push
xlat
dec
lods
int
jge
lret
bsr
enter
or
test
lret
stc
js
rorb
pop
xchg
xor
push
popa
mov
push
std
sub
dec
sub
in
or
jle
pusha
aas
lcall
testb
test
cmpsl
jmp
adc
push
cwtl
pusha
les
jnp
mov
fcmovbe
dec
iret
shrl
inc
or
sbb
int3
aas
loopne
sbb
jae
mov
and
sub
add
into
mov
and
fwait
adc
cltd
dec
adc
mov
xor
jle
lods
pop
aam
add
jmp
data16
xlat
mov
test
add
mov
add
mov
xor
fiaddl
in
xchg
cltd
ss
or
cltd
rcrb
and
lods
das
dec
mov
data16
lcall
fcmovne
xor
mov
idivl
inc
mov
lcall
and
lar
xor
gs
sub
and
sbb
into
mov
push
shll
cltd
mov
sub
pop
push
loope
sbb
dec
insb
negb
mov
ret
outsb
movb
pop
xor
mov
shlb
sahf
adc
addr16
aas
cmpsl
daa
lcall
jmp
mov
sub
sbb
jmp
jne
or
jnp
push
xchg
push
xorl
push
mov
loope
xor
popf
pop
sbb
popf
jae
pushf
jle
scas
push
lret
lock
push
aad
pop
es
adc
sub
fs
loope
es
insb
shlb
mov
xchg
jle
pusha
xor
xlat
mov
lods
xchg
pop
stos
cmpsl
jg
push
mov
sub
xchg
aad
add
scas
and
sbb
jns
rcll
and
sbb
mov
mov
aas
ja
mov
adc
dec
lods
in
or
xor
lahf
pop
ficoml
jle
inc
into
rcrl
jge
sub
nop
daa
scas
jo
aam
or
mulb
dec
jbe
sbb
mov
repnz
leave
out
mov
lods
adc
out
cs
mov
jnp
xor
sarb
pusha
and
fcmovnb
xor
jmp
shll
push
adc
mov
dec
jno
push
or
scas
pop
cmp
sahf
jbe
call
xor
pusha
in
icebp
daa
addr16
pop
aam
mov
cmpsl
mov
sahf
icebp
jmp
mov
into
push
cmpl
testb
loope
js
popa
out
and
in
pop
ss
popa
inc
sub
ror
loopnew
imul
loopne
cmpsl
pop
add
push
aas
mov
sbb
dec
aas
sbb
pop
insb
mov
dec
aas
js
hlt
mov
cmp
and
jl
push
fnstsw
pop
push
fisttps
jge
test
ret
aas
jecxz
mov
sbb
in
mov
mov
loop
xchg
mov
enter
cli
push
cmp
lret
or
mov
or
sub
ljmp
xor
add
or
push
addr16
fnstenv
inc
leave
testb
loop
push
add
cwtl
xor
dec
pop
std
cmp
loopne
dec
dec
push
je
stos
stos
lea
sub
sub
aas
xor
leave
xor
add
add
xchg
jns
mov
pop
pop
jl
xlat
out
pushf
mov
stos
inc
add
jmp
rol
cli
ja
call
jp
xchg
inc
mov
xchg
mov
sbb
push
js
mov
and
pop
test
lea
inc
add
adc
nop
es
fsubl
add
test
dec
pushl
imul
fwait
pusha
cmpsb
dec
test
pop
mov
out
adc
je
xchg
xchg
sub
adc
pop
sub
xchg
fadds
dec
int3
sub
scas
jmp
mov
mov
pop
jle
mov
and
mov
dec
mov
jge
fidivrs
data16
cmp
ficomps
cmp
popa
cmp
mov
jns
adc
pusha
icebp
mov
mov
sbb
mov
xchg
xchg
or
xchg
sbb
sub
push
xchg
add
das
dec
sub
ja
lcall
inc
fildll
scas
xor
dec
mov
dec
xor
cmp
pop
movsl
adc
fnstenv
and
setp
fisttpl
adc
das
inc
pop
cli
cmc
lods
dec
xchg
xchg
fsubs
sbb
cltd
shl
add
out
or
or
stc
out
scas
jmp
pop
sahf
enter
and
les
mov
mov
call
jle
out
jbe
adc
movsb
scas
int3
into
xor
push
rcrb
iret
int3
xchg
and
and
and
cs
add
outsb
mov
ljmp
sub
inc
pusha
and
push
test
jne
mov
loopne
mov
xor
xlat
pop
mov
jmp
fmul
sbb
xor
xlat
pop
out
pop
pop
sub
sbb
popf
cmpsb
jle
mov
or
repz
pop
xor
sbb
jb
dec
jns
dec
test
testl
adc
add
xor
mov
push
dec
xchg
js
dec
cmp
outsl
into
nop
outsb
push
inc
test
push
mov
int
movsb
repz
orl
testb
sbb
jp
lock
sub
imulb
lock
pushf
out
pop
xchg
add
pop
fiaddl
outsb
xlat
xchg
jae
int
push
mov
pop
out
xor
mov
pop
xlat
popa
adc
adc
jmp
xor
test
inc
sbb
and
jl
dec
sub
mov
scas
insl
mov
xchg
scas
movsb
mov
jmp
mov
idivl
cmp
mov
sub
jns
loop
sub
repz
xlat
cmp
xor
jae
dec
cmp
pop
out
mov
aaa
dec
inc
push
mov
mov
cmp
dec
enter
sub
clc
mov
int3
dec
lods
cltd
sarb
ljmp
pop
call
xchg
scas
nop
jne
cmp
cwtl
lcall
mull
addr16
sarl
sbb
add
mov
outsl
lcall
xchg
pusha
add
subb
and
enter
and
sub
jge
sarb
xchg
jmp
imul
in
add
sahf
jge
int
sbb
and
mov
xchg
jl
popl
sub
punpcklbw
cmp
repz
add
call
dec
negl
in
and
adc
mov
sub
sbb
dec
ror
pop
mov
sub
in
shll
mov
int3
jge,pt
jmp
mov
mov
xchg
mov
jbe
sub
pop
mov
ror
xchg
in
mov
dec
pushf
jecxz
aam
cmp
out
mov
jle
mov
and
cmpsb
int3
stos
mov
sti
mov
pop
jne
mov
and
std
cmpsl
push
leave
jns
jbe
mov
and
jae
scas
in
lret
mov
es
pop
popf
dec
daa
mov
stc
add
jp
int3
lahf
repz
adc
mov
inc
push
pop
rorb
mov
cmp
cmp
mov
or
push
and
xor
jns
dec
or
or
mov
adcb
enter
test
mov
inc
repz
ljmp
ss
sarb
clc
jl
test
adc
jmp
dec
xor
mov
xchg
jb
xor
adcb
push
subb
pop
adc
testb
dec
xlat
xchg
add
into
xor
hlt
jmp
mov
mov
lret
ror
adc
shr
sub
xchg
jle
and
mov
inc
stc
lret
mov
jle
clc
ret
xchg
scas
cmp
lret
pop
inc
cmpsl
sub
dec
shrl
inc
pop
mov
arpl
leave
mov
sub
popf
loop
mov
mov
jg
adc
fwait
pop
dec
xchg
add
lahf
sbb
cld
fsubrs
rol
jge
repnz
xor
lret
jae
add
xchg
cltd
mov
movsb
cmp
into
pop
xchg
es
test
mov
add
or
data16
xor
popf
bound
xor
fnstenv
jp
sbb
sbb
dec
xor
daa
fisttps
int
cmpsb
mov
lret
adc
mov
push
cltd
and
ljmp
add
mov
es
jecxz
mov
xor
test
pop
add
cmpl
out
mov
cli
cmp
arpl
mov
and
lods
mov
add
testb
stos
loop
sbb
fwait
popf
and
gs
mov
fstpt
pop
jmp
mov
ret
adc
cld
adc
adc
jb
int3
xor
jg
lcall
dec
inc
mov
pop
add
rcr
fwait
mov
fsts
pop
aad
cmpsl
xlat
or
loop
inc
add
add
movsl
in
aaa
fs
jbe
in
cmp
mov
iret
mov
testl
and
loopne
in
popf
fstpt
ss
push
in
mov
repnz
sbb
roll
shrl
sub
or
popf
cmp
and
imul
test
mov
lret
cmp
hlt
aaa
cwtl
aas
imul
push
lods
imul
adc
sbb
addr16
aas
mov
iret
inc
jg
pushf
push
and
add
imull
inc
rolb
inc
push
insl
xchg
jecxz
adc
inc
loope
lcall
sub
shl
add
jp
jl
pop
fucomi
cmpsl
adc
shl
mov
aaa
scas
popf
lods
pusha
repnz
mov
negb
pop
aas
pop
lds
push
mov
cmpsl
lods
out
mov
fsubrp
mov
cmpsb
jge
dec
push
pop
jg
scas
fwait
sub
sbb
in
arpl
ja
sarb
aaa
lret
jbe
push
mov
stc
test
and
fimuls
jne
jbe
inc
ret
jecxz
popa
arpl
push
adc
pop
push
fsubrs
lcall
stos
xchg
test
sub
test
jmp
or
mov
sbb
mov
and
cmp
adc
out
loop
xchg
pop
push
addr16
jb
push
lea
sbb
nop
sbbl
nop
cmpsb
sub
outsb
push
pop
rolb
scas
pop
mov
xor
ja
scas
mov
es
pushf
jl
or
push
jmp
add
clc
fstps
ss
add
jnp
lea
imul
test
int
push
mov
stos
mov
push
xorb
or
lds
sub
add
fdivr
fbstp
sbb
out
and
test
jnp
pop
hlt
or
cli
mov
les
sbb
inc
or
adc
and
hlt
inc
mov
sub
and
repnz
pop
imul
popa
scas
mov
in
xor
pop
ret
sahf
mov
enter
add
ja
adcb
pop
xor
push
mov
in
ffree
sbb
mov
mov
inc
mov
pop
jo
insb
lea
push
imulb
sbb
push
mov
push
pusha
cld
add
mov
mov
cld
add
jge
ljmp
xor
cmp
jg
fwait
mov
rclb
fbld
mov
add
mov
scas
cmp
inc
fsubs
ss
shlb
les
sbb
iret
out
and
lea
lcall
xchg
pop
insb
cmp
nop
popa
pushf
es
hlt
arpl
mov
adc
and
in
mov
das
adc
jp
int
cmpsl
jne
mov
xor
lock
pop
mov
push
orl
fnstcw
jp
mov
add
add
mov
outsb
lcall
jns
push
test
lcall
ret
aad
jl
and
and
lock
inc
in
push
cmp
dec
sub
and
or
mov
fdivrs
xor
fwait
xor
pop
roll
inc
shl
lods
scas
mov
ret
dec
mov
cmp
mov
mov
repz
pop
icebp
shll
insl
sbb
sbb
push
inc
jnp
clc
je
lods
sub
stos
ret
adc
pushf
inc
pop
lahf
sbb
inc
scas
mov
mov
lcall
outsb
test
outsl
cmp
dec
orl
pop
imul
in
out
cmp
adc
mov
cwtl
add
cmc
mov
stos
mov
lock
push
add
adc
cwtl
add
mov
lea
gs
xchg
sub
gs
sahf
fwait
test
xor
sub
repnz
mov
mov
xor
jb
cmp
xlat
sub
mov
xchg
cwtl
mov
imul
dec
test
notl
clc
and
aam
inc
or
sbb
inc
and
adc
add
shrl
and
mov
sub
jmp
pop
jle
push
repz
mov
push
adcb
mov
js
add
outsb
xor
sahf
movsl
imul
add
sbb
jno
sbb
pusha
jecxz
out
sbb
push
cli
movl
adc
mov
loopne
push
mov
pop
test
cld
mov
xor
cmpsb
pushf
mov
sbb
cli
scas
cwtl
fwait
jno
adc
pop
shr
push
fsubl
sbb
testb
pop
sbb
hlt
inc
sbb
into
icebp
stos
push
inc
and
mov
xchg
mov
std
mov
loope
mov
aad
sub
dec
mov
lcall
pop
add
jp
xchg
out
mov
mov
cmpsl
enter
pop
and
mov
mov
lock
pop
gs
inc
test
frstor
mov
xchg
mov
push
add
or
mov
xchg
cli
ss
add
mov
dec
sbb
ja
and
hlt
jp
scas
clc
pop
add
mov
addl
mov
jmp
outsl
cmp
mov
sbb
sub
mov
or
jge
fwait
outsl
ss
mov
mov
sub
lahf
or
repnz
add
shlb
fsubp
clc
arpl
adc
mov
add
mov
mov
or
ja
xlat
dec
gs
jp
int3
ficompl
aas
push
fstpt
push
sub
cmpsb
cwtl
enter
dec
jp
xchg
pop
push
xor
push
test
dec
xchg
sbb
movsl
cwtl
xor
dec
cmp
push
fimull
lret
das
inc
sarl
fmuls
bound
rcrb
ss
cmp
mov
or
push
int
push
sub
insl
inc
test
pop
gs
lds
xlat
mov
and
sahf
out
lock
cmp
mov
out
xchg
lcall
movzwl
jge
movsb
jl
mov
jmp
mov
push
jg
xor
sub
mov
lahf
aam
popa
arpl
push
or
pop
lahf
or
inc
xchg
nop
icebp
sub
inc
popf
in
ror
mov
in
cwtl
push
xchg
stos
mov
mov
addr16
mov
iret
add
jecxz
dec
daa
stos
lods
movsb
xchg
bound
inc
adc
mov
mov
xor
fisttpll
mov
gs
mov
pop
mov
repnz
lods
inc
out
jg
sbb
mov
push
xor
popa
push
push
push
jnp
inc
pop
cmp
pusha
test
xchg
push
cmp
push
mov
in
cmp
and
ds
gs
call
xor
mov
in
inc
cmpsl
sub
dec
lcall
push
push
popa
and
mov
pusha
cltd
adc
mov
data16
in
xor
inc
jno
cmp
pop
out
ss
roll
add
aam
into
test
mov
dec
dec
ljmp
scas
ljmp
ficomps
ror
test
lods
or
stos
lret
sbb
loop
sub
sti
fs
add
icebp
adc
inc
xchg
fiaddl
adc
fsubrs
test
lahf
cmp
test
xchg
sub
add
stos
ret
ret
out
jno
mov
es
loope
mov
ljmp
xor
adc
loop
cmpsb
sti
test
adc
ja
nop
loopne
lods
jb
or
aam
inc
lock
jo
lds
std
inc
mov
jge
fidivs
add
xor
sub
lods
movsl
xor
lret
cmp
and
mov
push
subl
scas
jl
sbb
jb
push
iret
inc
push
add
fdivp
mov
leave
scas
jno
outsb
inc
sbb
push
daa
xor
cmp
push
ret
das
fcmovnu
cmc
cmp
test
adc
ja
cs
and
and
ljmp
or
or
sbb
loop
divb
dec
pop
xor
push
incl
add
sub
sbb
mov
xchg
mov
sarb
test
test
hlt
cmp
jb
pop
frstor
cld
mov
hlt
aam
add
ljmp
adc
movl
jmp
mov
test
mov
pop
dec
mov
mov
pop
loope
cmpsb
fwait
push
arpl
movsl
add
stc
leave
mov
cwtl
xchg
xchg
jb
xor
mov
or
popa
cmpsb
call
xlat
xlat
cli
sahf
or
jae
mov
adc
adc
mov
repz
jl
shll
add
lock
mov
dec
jmp
insb
pop
push
sbb
jecxz
cli
mov
jb
popf
pusha
pop
push
cmc
icebp
mov
jp
fwait
adc
mov
push
jg
mov
outsl
push
lret
sub
cwtl
jae
and
mov
call
push
dec
faddp
rcl
push
repnz
adc
loope
leave
int
inc
loopne
dec
mov
or
mov
cmpsl
pop
cs
in
xchg
adc
stc
pop
mov
bound
or
jns
lods
fs
jmp
adc
cld
xchg
sbb
mov
sbb
inc
lods
stos
adc
and
push
adc
inc
aad
dec
lods
xchg
sub
sarl
fbstp
mov
push
stc
cmp
rcll
fsub
mov
dec
or
xor
lock
sub
jbe
jle
pusha
cwtl
jge
push
dec
gs
jb
and
mov
icebp
out
sbb
test
push
repz
cltd
xor
leave
xorl
jge
or
inc
adc
das
movsb
adc
inc
mov
scas
mov
jp
inc
push
push
pop
sub
xor
arpl
lods
shll
cmp
mov
jne
inc
push
in
pop
push
scas
mov
inc
mov
nop
pop
and
bound
imul
test
in
das
push
adc
xchg
xchg
mov
mov
je
sub
ss
mov
mov
push
xchg
enter
testb
xchg
popf
pop
aad
fs
nop
ret
cld
mov
sbb
xchg
dec
insl
jl
sub
dec
and
mov
push
repnz
pushf
pop
fimuls
jb
inc
pushf
aam
mov
bound
mov
mov
xchg
test
xchg
imul
sar
lock
sbb
mov
xlat
inc
lret
sar
imull
dec
mov
fstpt
sub
sub
fs
push
mov
movsb
xor
aad
mov
sub
mov
in
std
shlb
incb
lods
xchg
xor
ljmp
loop
fcoml
add
xchg
std
jne
mov
or
mov
dec
xor
mov
ljmp
add
push
mov
sub
or
mov
and
jge
pop
adc
cmp
stos
jmp
jae
nop
lahf
xor
inc
insl
lret
stc
pushf
mov
mov
cmp
sub
cmp
cli
mov
lret
lcall
sti
jmp
mov
test
in
aad
sbb
mov
push
jae
into
in
xor
sbb
adc
xchg
jmp
in
mov
pop
adc
jmp
outsl
adc
xor
mov
pop
arpl
cmp
mov
cld
sti
mov
push
lahf
push
or
das
adc
adc
push
jmp
cmp
sub
mov
ja
mov
mov
adc
mov
in
sub
test
mov
pop
and
cmc
cld
xchg
lea
imul
in
rcll
push
in
lret
pop
loope
fsubr
in
and
ja
aas
lds
ret
loopne
stc
or
and
daa
aad
hlt
movsb
cs
jmp
jne
cmp
popf
pop
scas
fsubs
stos
add
and
mov
mov
xlat
push
nop
or
cmpsb
jle
adc
iret
jns
in
ljmp
or
pop
cmp
adc
xchg
lea
shl
pop
js
int
xchg
push
and
cmp
sub
mov
xor
scas
inc
test
cmpsb
dec
cmp
ljmp
lcall
xlat
mov
jmp
rclb
shlb
cli
and
mov
gs
xchg
add
sub
fidivs
xor
fs
ja
push
jne
lea
add
insb
inc
rcll
dec
insl
add
aad
jp
stos
and
push
pop
sbb
es
dec
fwait
sbb
jo
adc
ja
add
jecxz
ds
pop
lcall
jmp
in
inc
call
or
ror
push
mov
push
addr16
ret
in
cmp
cli
mov
sbb
repz
mov
jge
repnz
cmp
pop
jns
xor
cwtl
negb
faddl
ja
push
pop
cmp
popa
xchg
push
cmp
fisubrl
cwtl
in
fwait
pushf
cmpsb
mov
fstl
dec
jnp
mov
mov
pop
subb
mov
sub
loopne
xchg
jg
xchg
test
or
pop
jb
rclb
ja
dec
jae
adc
test
loop
mov
ficomps
fiadds
mov
push
push
dec
stos
inc
jo
add
xchg
mov
sub
add
mov
adc
scas
das
mov
mov
xor
test
adc
in
int
rcl
je
xor
add
push
push
and
shll
or
shl
cmp
outsb
test
arpl
sti
lds
jmp
adc
and
xor
rcr
insb
or
fnstenv
imul
jle
fdivp
pop
adc
sbb
pop
inc
jecxz
lret
in
in
cmpsl
aaa
push
mov
and
fwait
enter
jmp
sub
fsubrs
xchg
shl
lcall
sahf
ret
lcall
cli
and
add
push
mov
je
xor
cmp
push
clc
inc
jmp
addr16
cmpl
dec
inc
arpl
push
or
ss
test
mov
ja
shr
in
jg
ja
lret
out
es
lods
jbe
stos
add
sbb
xor
mov
pop
push
jmp
xor
in
jnp
push
mov
push
pop
push
out
imul
push
loop
push
pop
lret
fs
jl
mov
or
jl
gs
push
sub
gs
and
fisttpl
push
xor
cs
fwait
jns
push
jle
inc
push
enter
sbb
mov
push
mov
mov
add
in
test
shrb
mov
xlat
or
enter
hlt
mov
out
add
pop
enter
fs
adc
cmc
xchg
pop
fldt
fsubrp
and
sahf
mov
mov
test
lahf
fisubrs
xchg
lret
loop
mov
jns
mov
or
mov
add
in
sbb
mov
mov
dec
adc
or
adc
pop
mov
ja
lea
push
sbb
mov
and
inc
or
push
lds
jg
pop
div
xchg
ret
mov
push
inc
je
sub
aas
test
out
xor
mov
outsl
add
les
lahf
imul
dec
add
mov
mov
jg
push
cli
mov
sbb
lret
push
jecxz
scas
jle
leave
lea
imul
pop
jecxz
sub
and
sbb
inc
dec
outsb
mov
test
movsl
mov
imul
jmp
add
inc
inc
push
xor
scas
push
dec
cld
pop
insl
mov
add
mov
sar
lock
mov
mov
mov
cmp
push
inc
loope
ja
dec
stos
into
repz
and
or
push
repnz
or
dec
cmpsb
sbb
in
xor
add
cmp
sub
int
mov
out
ror
mov
js
sbb
mov
es
cmc
insb
and
dec
loopne
adc
mov
jmp
mov
or
and
addb
push
dec
and
inc
data16
rorl
sbb
ljmp
pusha
std
xor
inc
stos
jns
loope
add
cmpb
fwait
cmp
and
rcll
clc
lret
xchg
pushf
mov
push
jo
cmp
adc
pop
cmp
push
fidivl
jo
aam
arpl
frstor
pop
icebp
cmp
lods
out
inc
cmp
popa
inc
sub
es
in
fs
inc
sbb
xor
loop
push
js
sub
ja
push
sub
imul
and
sbb
jno
in
sub
popf
xchg
fabs
mov
mov
movsl
cmpsb
shrl
sub
jp
lahf
lods
cwtl
jae
xor
mov
sarb
mov
shrl
rorl
mov
xor
outsl
and
jg
enter
xor
xchg
dec
dec
in
and
inc
jne
pusha
js
jne
inc
loope
push
lahf
xor
mov
movsl
repz
mov
loope,pt
pop
idivl
mov
mov
sbb
aad
mov
and
frstor
into
jge
add
es
xorl
mov
movsl
outsl
int
repnz
outsb
jmp
aas
push
je
shr
and
mov
or
cmp
fsubr
mov
sbb
test
jg
out
scas
sbb
outsl
outsl
dec
xor
pop
sbb
jecxz
mov
adc
rcll
pusha
movl
mov
lods
cmc
dec
sub
ret
add
pop
sub
adc
push
pop
jno
dec
push
inc
lds
shll
jle
out
mov
lock
push
and
mov
mov
in
jne
xor
mov
push
inc
fsubrs
fstps
mov
inc
mov
and
aaa
push
inc
mov
and
dec
cmp
jg
dec
cmp
imul
adc
test
test
xor
in
cltd
shl
sub
inc
popf
pop
fstpl
sbb
ja
jae
ljmp
call
insb
jp
pop
xor
in
and
xlat
jb
dec
cltd
rcr
push
stos
popf
xor
inc
insb
int
mov
mov
jnp
xlat
mov
daa
jmp
sti
dec
add
mov
cmpsl
outsb
loop
push
std
insb
pop
mov
ret
es
scas
mov
sbb
xor
mov
jns
cmp
stc
je
mov
sbb
icebp
dec
and
testb
mov
mov
ljmp
adc
addr16
subl
fdivp
inc
rcrl
and
or
mov
pushl
inc
mov
neg
add
xorl
adc
xchg
cmp
inc
or
fcoms
adcl
and
fnstcw
daa
and
repnz
sub
cmpsb
orb
or
loope
mov
imul
ss
and
sarl
adc
mov
fildl
pop
xchg
jne
int3
lds
cli
les
cmp
pop
lahf
inc
sbb
xor
enter
sub
mov
rcr
fs
mov
sub
test
pop
cmp
jb
aad
test
stc
call
pop
adc
cwtl
insl
cmc
add
cmc
inc
pop
sub
adcl
push
mov
lods
push
sub
inc
out
xchg
cltd
rolb
fcomip
mov
dec
push
jl
stos
adcl
cmp
out
mov
les
xchg
xchg
lods
xor
decl
sub
mov
sti
lret
call
mov
xlat
lcall
nop
xchg
out
or
out
cli
push
das
mov
lahf
out
mov
pop
xchg
fnsave
push
sbb
mov
cmp
sbb
xchg
mov
clc
out
jle
and
xor
ret
outsb
and
sbb
lock
call
lock
inc
inc
out
and
mov
out
pop
mov
addl
lods
cmp
arpl
roll
gs
imul
mov
add
or
fsubr
pop
test
stos
push
rcll
xor
dec
int3
sbb
push
adc
pop
loopne
lret
add
fiaddl
ds
test
push
popf
jmp
stos
mov
jns
cmp
inc
pop
mov
repnz
call
inc
test
out
dec
jbe
pop
ds
dec
gs
leave
or
loopne
inc
mov
pop
in
scas
dec
xchg
arpl
lcall
inc
cld
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
dec
movsb
sub
addl
jge
push
dec
cmc
cmp
adc
in
jae
les
jno
and
jo
es
outsb
xor
adc
jge
and
sbb
sub
and
sti
jo
je
lds
scas
loopne
fidivl
lahf
xor
sbb
sbb
icebp
xchg
fcompl
mov
inc
rol
xor
sub
xchg
pop
movsb
add
mov
dec
ss
loop
ficompl
mov
pop
add
fwait
nop
inc
lahf
shll
mov
mov
shlb
scas
add
lods
cmp
imul
test
in
mov
mov
inc
add
divl
outsb
adc
fildll
xor
sbb
repz
jge
test
shrl
adc
push
push
adc
pop
mov
aad
xchg
in
aad
imull
fsubrl
aad
add
dec
jne
or
push
mov
push
aam
pop
xchg
movsb
xorl
mov
inc
adc
std
loopne
or
push
xor
push
adcb
mov
mov
xor
enter
add
cmp
add
fsubl
dec
sar
outsl
xor
into
pop
les
jnp
mov
dec
std
mov
or
test
push
ja
ljmp
adc
pop
es
outsl
add
stos
add
fimull
pop
imul
pushf
mov
movl
jbe
insl
xchg
push
pop
mov
sbb
ds
je
lods
pop
cmc
jmp
jle
jmp
pop
push
and
xchg
dec
repz
lret
icebp
movl
jl
cmpsl
ljmp
inc
pop
loop
dec
sub
add
adc
xchg
pop
mov
jns
sub
lea
mov
loope
add
mov
rcrb
gs
lahf
outsl
negl
jno
and
dec
sub
fisttpl
pushf
data16
jne
scas
mov
int
ret
ljmp
inc
popa
out
ret
mov
xchg
inc
int
pop
iret
xchg
bound
aad
lahf
sbb
fistl
push
or
test
neg
pusha
jg
push
mov
insb
pop
loop
push
xor
xchg
xchg
jge
mov
dec
movsb
inc
icebp
jae
jecxz
sub
sbb
into
or
fdivs
sbb
popa
out
and
push
pop
in
pop
leave
jp
test
xor
es
dec
and
test
fcomp
xor
std
xlat
js
fistpll
pop
mov
pop
cltd
stos
pushf
push
leave
pop
mov
shlb
add
push
or
mov
xchg
push
inc
jmp
imul
dec
stos
sbbl
jmp
xor
insl
add
xchg
pop
repz
dec
dec
mov
jno
push
mov
xchg
sub
dec
push
repnz
outsl
shl
popf
adc
stos
in
in
aas
cmp
add
mov
dec
jmp
mov
or
inc
mov
cld
xor
iret
pop
xchg
xchg
or
mov
cwtl
xor
data16
popf
dec
mov
fisubs
pop
in
push
movsb
cltd
test
xor
jnp
inc
mov
add
cmpsl
add
loopne
adc
cmp
mov
out
inc
pushf
mov
mov
lods
inc
sub
sub
jno
or
rolb
push
push
sub
std
test
ja
xchg
add
lret
jo
push
mov
ret
lods
cld
jp
add
and
add
adc
add
dec
fldenv
test
add
mov
loop
jmp
jge
test
xlat
cs
push
lods
lock
xchg
cs
icebp
xchg
nop
lock
jns
ljmp
add
adc
in
jecxz
and
loopne
jo
cmp
sub
push
xchg
cmp
enter
sbb
pop
shll
jae
sbb
cmp
or
jae
cmp
and
repz
fs
icebp
fs
pushf
jb
jmp
pop
fidivs
xchg
push
fcmovnu
jne
inc
jecxz
xchg
pop
jmp
lret
addr16
jge
addr16
adcb
nop
mov
in
add
rcr
je
jp
mov
out
jae
push
xchg
jbe
fs
test
mov
pop
outsl
fistps
add
addr16
imul
jle
mov
mov
mov
aas
sbb
fwait
shlb
mov
scas
fwait
lea
rcl
inc
jl
aam
shlb
sahf
lahf
mov
aaa
adc
xlat
pop
xor
cs
dec
xor
push
inc
sbb
movl
or
sub
mov
lds
std
cltd
xchg
dec
jo
rorl
int3
push
mov
neg
xchg
adc
push
inc
inc
push
out
xchg
lcall
add
push
shlb
add
ja
in
mov
push
incl
jnp
mov
rcrl
notb
add
push
mov
int
movsl
leave
inc
in
jnp
jno
out
lcall
repz
imul
inc
xor
adc
scas
mov
and
mov
sbb
iret
fbld
loop
sub
cltd
jnp
imul
in
mov
mov
shlb
jp
xchg
adc
push
mov
out
sbb
lock
pop
sbb
insb
sub
sbb
outsb
lods
pop
lds
inc
lds
push
cwtl
test
sbb
test
xchg
cmp
push
dec
mov
stc
jns
insb
ljmp
sahf
sub
cmp
mov
das
repnz
adc
iret
call
int
xchg
add
inc
shrl
int
mov
sbb
and
push
dec
sub
and
sub
test
insl
or
adc
add
jecxz
in
mov
push
in
dec
fcoms
or
jbe
cmp
lods
push
filds
jmp
stos
cwtl
popa
adc
jbe
push
dec
rol
sti
repz
mov
cmp
aas
sbb
inc
out
cmp
cmp
sub
xlat
sbb
fcmovb
jmp
xchg
movups
aam
cmp
add
std
mov
imulb
shlb
mov
sub
int
fs
jb
rorl
popf
mov
push
jne
sbb
ret
and
push
adc
pop
inc
lahf
cwtl
jl
cld
jl
sub
inc
add
mov
pushf
popf
mov
add
cmpb
add
aad
jmp
inc
sbb
bound
enter
imul
or
xlat
imul
test
aas
jmp
andl
lret
popa
or
les
divps
xchg
xchg
push
mov
scas
pop
push
inc
into
sub
add
lds
cli
mov
bound
popf
mov
hlt
dec
call
add
nop
xor
lahf
add
sub
test
jbe
inc
call
xor
call
hlt
sbb
add
jle
sub
mov
ret
adc
cmpl
lcall
in
sub
or
pop
mov
js
or
or
pop
leave
out
arpl
dec
push
sbb
jae
dec
jmp
adc
cmp
mov
incb
pushf
enter
rdpmc
or
cld
sbb
stos
xchg
xchg
jnp
mov
cs
mov
pop
sarb
gs
dec
and
loop
mov
sub
and
adcb
inc
mov
test
orl
or
data16
jp
mov
add
into
cmpsb
xor
dec
pop
cli
pusha
add
xchg
fstl
pop
inc
cmp
mov
mov
cmc
aaa
addr16
fcoml
js
adc
lret
push
cwtl
popa
sbb
shr
jno
push
lods
mov
xchg
push
jnp
dec
cltd
iret
popa
push
cmp
rcrb
dec
pop
iret
das
pop
jnp
mov
or
mov
jno
pop
inc
in
ja
nop
cmp
fstps
and
ret
add
inc
jae
jg
movsb
cmp
push
pop
cs
test
pop
mov
pop
and
negl
adc
adc
xchg
cli
inc
mov
jge
xor
jecxz
arpl
xor
lret
pop
mov
ret
test
lods
rol
fcoml
add
mov
cmp
stos
add
add
sbb
popf
fdiv
ret
loop
outsl
imul
push
rcrb
jo
or
xchg
mov
push
pusha
dec
mov
in
icebp
mov
mov
xorl
aad
mov
cmp
xor
std
outsb
sti
adc
popa
mov
pop
das
hlt
or
dec
aas
cltd
xor
mov
xor
xchg
pop
jbe
jo
dec
xor
sbb
ds
aas
sahf
roll
sub
clc
in
mov
xchg
cmc
in
sbb
scas
repz
sarl
push
dec
dec
sub
sub
cli
mov
sbb
mov
enter
jns
add
dec
mov
movsl
pop
ficompl
daa
mov
cmp
push
lods
cwtl
cld
test
aam
leave
ss
and
mov
shr
adc
daa
loopne
mov
fsts
mov
gs
jecxz
xor
mov
xchg
cmpsb
sub
std
je
dec
jno
mov
and
call
pusha
cmp
push
mov
addr16
inc
cmp
sub
xchg
std
add
insb
insl
push
cltd
loop
cli
ret
ss
or
sarb
pop
inc
cmp
dec
jp
daa
and
ss
scas
xlat
inc
cwtl
das
add
lahf
enter
pop
lods
fstps
push
lds
adc
fdivl
out
mov
mov
stos
and
pop
mov
add
ds
fdivp
sub
lcall
fs
icebp
ds
mov
call
sub
cmp
addr16
into
jo
pusha
add
pop
or
jno
xchg
mov
xchg
loope
xchg
ds
adc
mov
pop
inc
mov
xor
inc
inc
fwait
dec
pusha
in
sub
pop
loop
or
pop
jae
mov
call
xchg
cs
jno
pop
mov
mov
stos
scas
pop
jae
test
or
jns
leave
mov
scas
or
outsb
call
lret
in
cld
or
cli
int3
xchg
pop
add
cld
adc
xchg
adc
add
sub
add
cmc
or
fstl
push
jle
fs
mov
lret
sahf
xor
push
scas
iret
sbb
jg
jo
sbb
xchg
scas
or
sub
lret
add
movsb
stos
ret
push
push
cmp
shll
hlt
xchg
or
cli
adcl
or
pop
cltd
dec
xchg
insl
pop
dec
push
pusha
dec
and
popf
cmp
jmp
and
cmp
fldl
repnz
inc
addr16
sbb
mov
inc
or
test
mov
dec
mov
call
cmp
imul
push
jo
sub
jmp
insb
mov
push
pop
enter
mov
ljmp
dec
jp
enter
pushf
fs
xor
insl
xor
inc
inc
and
inc
push
mov
or
nop
inc
fisubrs
loopne
dec
or
jle
xchg
ja
and
jo
loop
pop
int3
pop
cli
inc
sbb
sbb
mov
negb
pop
xor
fwait
jb
adc
out
fsubs
ds
sbb
push
lds
mov
jae
xor
adc
fbld
cmpsl
mov
jno
mov
inc
rcll
repnz
cmpb
enter
xlat
xchg
insb
arpl
inc
insl
repz
adc
ja
jg
or
xchg
je
dec
or
adc
cmp
jno
push
push
pop
and
pop
aas
sub
fdivrl
xchg
sbb
lcall
rcll
into
mov
pushf
outsb
push
jo
pop
mov
enter
shr
addb
adc
mov
push
xchg
int3
sbb
xor
clc
clc
push
fisttpll
mov
rclb
aas
lea
jg
popa
pop
scas
and
lods
repz
mov
outsl
push
mov
aas
add
adc
sub
xor
cmp
lods
mov
sbb
gs
mov
xchg
jg
jnp
adc
cmp
push
xchg
mov
or
push
shl
lods
jno
push
cwtl
mov
jns
adc
arpl
push
insl
jo,pn
mov
adcb
mov
push
dec
jne
js
adc
push
sub
fsubrl
add
lret
leave
dec
addr16
test
xchg
mov
and
arpl
aam
dec
scas
push
pop
and
fldt
push
out
or
pushf
movl
mov
sbb
in
shrb
sbbl
cmpsb
xor
or
pop
cmp
lret
movsb
mov
dec
call
cs
addb
pop
cmc
xchg
ret
or
popa
test
and
sarl
push
lods
mov
xchg
inc
dec
popf
mov
loope
out
popa
lcall
push
push
loopne
adc
insl
xor
cld
mov
sub
cmp
jl
mov
flds
pop
aas
push
pop
mov
push
mov
inc
xchg
lea
mov
outsl
gs
orl
and
xor
stc
add
add
and
in
push
xor
mov
jno
pop
out
sti
inc
repnz
arpl
lret
xchg
or
adc
xchg
and
int
roll
mov
adc
mov
inc
adc
ds
es
jnp
mov
pop
cmp
leave
in
mov
in
jb
mov
cli
or
jmp
stc
jne
push
push
lods
fisttpll
in
in
outsb
inc
les
fldl
imul
mov
sbb
and
mov
roll
aas
adc
fdivl
fldt
mov
cmp
insb
pop
xchg
pop
arpl
inc
out
push
inc
mov
cmp
cmc
ds
sub
testl
jmp
push
ret
loope
xchg
lret
shrb
sub
xchg
iret
fimuls
pop
in
push
or
jmp
xlat
inc
sub
adc
out
test
test
add
loope
sahf
bnd
cmpsl
lock
lret
mov
das
fistpl
mov
sarb
sub
push
xchg
or
repnz
popa
mov
mov
push
or
jne
dec
inc
cmpsb
cmp
pop
loop
addr16
int
mov
js
xchg
and
xchg
mov
mov
jne
jmp
fisubs
adcb
notl
jb
xchg
pop
insl
outsl
sbb
add
pop
lods
das
mov
mov
xor
fs
clc
adc
pop
jge
jg
push
add
or
aam
in
lret
fldt
dec
rolb
aaa
mov
mov
dec
xor
jp
jne
pop
in
cmp
xchg
sbb
outsl
sub
xchg
sub
in
shlb
jp
push
push
xchg
jnp
icebp
pop
leave
in
mov
dec
popf
js
pop
xchg
cld
sub
xchg
add
sbb
sbb
xchg
mov
addl
sub
stos
mov
popa
inc
mov
imul
push
lds
popa
test
push
movsb
jo
jne
dec
xor
sub
loop
xlat
cmp
insl
cld
inc
dec
and
pop
push
push
sub
mov
or
sub
xchg
inc
popf
nop
ret
stc
std
aas
adc
push
das
shll
inc
out
js
lea
jb
shrl
xchg
cmp
out
jg
xor
jp
ljmp
loop
lods
push
arpl
inc
leave
andb
repz
outsb
xchg
lds
es
push
inc
pop
lds
test
push
mov
and
cmp
data16
add
data16
sahf
leave
xchg
push
mov
jmp
imul
test
nop
mov
pop
loop
and
jae
es
push
sahf
xlat
bound
push
cmpsl
mov
xor
repz
inc
push
mov
dec
ljmp
or
bound
js
pop
inc
mov
popf
mov
lods
mov
roll
dec
shl
std
push
pushl
xor
das
mov
loopne
push
bound
sub
dec
rcr
fstl
loop
mov
sar
je
jecxz
rclb
push
insb
cwtl
adc
lret
jne
mov
addr16
xor
pop
pop
lds
pop
js
dec
ror
cs
mov
xchg
push
ret
sbb
inc
jbe
push
repnz
dec
orl
cmp
stc
push
f2xm1
mov
xchg
fistl
jecxz
in
add
movsl
or
pop
movsl
fs
shr
push
lock
sub
mov
mov
cli
mov
ja
push
mov
push
call
push
mov
out
add
mov
xor
bound
ret
pop
add
shlb
push
std
inc
loop
cmpb
jl
ljmp
push
test
fdivl
aad
ret
es
insb
cmp
xchg
lcall
push
aaa
fsubrl
outsl
mov
test
push
pop
cmp
out
in
or
sbb
out
testl
loop
fsubp
aad
loop
mov
dec
leave
push
clc
cmp
pop
enter
dec
int3
dec
mov
enter
adc
rcrl
adc
mov
adc
in
mov
mov
dec
or
push
add
imul
fcoms
push
repz
stos
rorl
jb
inc
dec
xlat
cli
gs
mov
les
enter
pop
add
and
bound
mov
or
insl
or
and
sub
out
les
js
in
aam
lcall
add
je
add
dec
std
mov
shr
mov
in
jmp
sbb
jno
dec
inc
push
rol
lods
xchg
xor
stc
push
mul
pop
and
or
mov
lret
cmp
ljmp
test
sub
pop
xchg
addr16
or
adc
out
sahf
mov
dec
or
push
jmp
mov
out
lcall
xchg
dec
fiaddl
fisubrs
dec
adc
testb
fisttpl
jle
enter
js
rol
and
push
sahf
cmpsl
push
jb
hlt
inc
mov
daa
iret
popf
scas
test
fwait
stos
sahf
or
les
add
decl
or
add
dec
scas
xchg
inc
push
incb
dec
lret
inc
gs
cmp
jbe
stos
scas
jmp
aam
mov
jmp
add
adc
add
mov
cmp
or
add
mov
mov
jg
inc
ljmp
into
lea
jno
jecxz
inc
sbb
mov
lock
xor
shll
dec
lds
mov
notb
gs
and
push
inc
jle
call
in
imul
addr16
scas
mov
push
cltd
mov
mov
or
repz
mov
xchg
mov
lods
sahf
in
mov
push
mov
insl
andl
ljmp
and
imul
push
mov
fadds
add
addr16
mul
pop
loopne
cmpsb
fdiv
scas
inc
es
cmp
icebp
xchg
out
sti
mov
sbb
addl
lret
movb
addl
or
xchg
fs
mov
rol
repz
aaa
stos
jb
adc
ljmp
insl
idivl
out
inc
jne
xchg
sub
mov
gs
or
pop
mov
es
aas
xor
sahf
sbb
addr16
ss
jno
mov
cmp
test
fimull
repz
and
ljmp
stos
aaa
or
lea
aad
inc
andl
adc
repz
cmc
out
and
xchg
mov
leave
or
int3
pop
dec
sub
fbstp
mov
invd
movsb
add
lock
mov
hlt
stos
stos
push
movsb
jecxz
icebp
jmp
dec
mov
jae
pop
pusha
stc
add
mov
sbb
shrl
or
fistpll
push
or
jl
add
enter
imul
mov
int
inc
add
mov
loop
ljmp
in
stc
xchg
out
push
cmp
shlb
pushf
cmp
pop
repnz
jbe
inc
mull
in
negl
addr16
fdiv
into
mov
mov
out
bnd
inc
cltd
and
pop
ljmp
or
cwtl
push
cwtl
pop
add
subl
jg
lahf
sarb
subb
adc
test
mov
in
es
inc
scas
inc
fsubs
jecxz
cmc
pop
scas
lahf
xchg
lods
and
inc
add
enter
cmp
or
movsb
lds
inc
mov
adc
outsb
scas
inc
push
stos
pop
add
sti
pop
cs
mov
pushf
gs
loopne
and
jnp
dec
in
push
pop
jns
sub
push
mov
lahf
xor
sbb
pop
adc
insb
das
sub
cmpsb
mov
jl
xor
fidivs
sbb
mov
call
mov
insb
cmpsb
xor
outsl
mov
sub
lock
jb
cmp
scas
test
push
cmc
clc
xchg
push
lods
push
fsubrl
imul
js
jb
cmp
sar
pop
lret
mov
inc
insl
xor
out
cmp
shl
nop
mov
mov
sbb
pop
mov
lock
mul
mov
xchg
clts
js
in
xlat
imul
andl
xchg
lcall
cmp
push
insb
insb
mov
dec
jp
sahf
out
push
imul
inc
sbb
sbb
pop
mov
cli
in
insb
and
xorl
push
mov
push
shlb
xor
stos
xor
inc
fnstenv
stc
inc
pop
in
cli
cmpsb
lret
mov
mov
jp
ljmp
stos
inc
aam
add
adc
sub
imul
inc
cld
push
movsl
popl
fimull
rolb
icebp
cmpsb
ficompl
mov
es
aam
push
push
pop
test
or
xor
inc
cli
insb
cld
dec
sbb
jbe
pop
cli
pop
and
gs
mov
subl
out
andl
call
push
xchg
xor
repz
aam
dec
or
xor
jnp
imul
out
or
jbe
sbb
dec
pushf
pop
push
mov
jmp
sbb
push
sbb
les
arpl
pop
cmp
mov
pop
sarb
out
pushf
movsl
jnp
es
jb
pusha
addr16
mov
mov
aaa
push
movsl
je
in
nop
out
push
sbb
lock
pop
insl
es
cld
rclb
sub
push
adc
push
adc
xchg
data16
fwait
jle
xchg
xchg
aas
pusha
adc
cmpsb
dec
shrl
std
imulb
shll
jmp
dec
aad
pop
daa
test
test
bound
inc
cmp
pop
cmpsb
push
sbb
pop
std
inc
lods
ret
in
pop
cmp
push
daa
push
movsl
repz
sub
aas
adc
pop
jmp
push
jmp
cmpsl
mov
sub
xchg
sahf
mov
mov
cmc
xor
movsb
adc
outsb
push
imul
ds
push
cmpsb
sbbl
xor
or
add
dec
and
mov
sub
mov
stos
rol
or
test
shlb
mov
pop
inc
mov
or
cmpsb
test
jb
pop
jns
or
add
or
xchg
push
fwait
insl
mov
das
sbb
imul
cmp
fldt
popa
jg
icebp
sbb
jle
xor
mov
adc
xchg
xchg
jne
popf
jne
and
das
inc
jo
addr16
pop
into
test
sarl
mov
adc
data16
rcll
addr16
scas
and
xchg
scas
out
fwait
push
rorb
je
lds
orb
repz
iret
jle
sbb
shlb
dec
and
imul
clc
xchg
mov
lret
add
lock
xchg
faddl
mov
popa
xchg
ja
mov
roll
sti
enter
in
ljmp
cli
push
cld
inc
decb
rcrb
mov
stos
sub
mov
dec
xchg
inc
arpl
int3
shlb
enter
iret
or
mov
inc
ljmp
je
adc
leave
cs
fstpt
and
stos
cld
mov
add
in
push
fsubrs
xor
daa
call
test
pop
psrlw
push
jecxz
mov
or
xor
jg
int
out
popa
cld
stos
out
mov
sub
mov
xchg
data16
mov
lods
imul
pushf
into
outsb
push
insl
jg
not
jle
pop
icebp
packssdw
xchg
cltd
jl
jecxz
aaa
add
cwtl
dec
fwait
push
lods
div
xchg
dec
mov
xor
xchg
inc
sahf
ret
js
sub
pop
repnz
icebp
or
xorb
pop
add
aaa
into
xor
popf
or
jmp
rclb
jge
hlt
jmp
inc
sbb
mov
or
push
mov
sub
dec
or
in
push
cld
push
cwtl
cwtl
dec
rcrb
fdivl
push
mov
cmc
xchg
push
fbstp
mov
lods
xchg
push
push
mov
adc
xor
mov
scas
mov
aad
imul
adc
mov
ret
dec
jg
div
add
mov
das
sub
xchg
sbb
insl
mov
repz
imul
xchg
ret
inc
rorl
cmp
icebp
stos
inc
sub
mov
lret
cmp
scas
fcmovnbe
out
js
jmp
in
mov
mov
mov
mov
lcall
pop
xchg
out
insl
cltd
adc
add
mov
push
cmpsl
clc
xchg
inc
jbe
xor
sbb
xchg
adc
jge
cmpsb
mov
dec
pop
fisttpl
fs
andl
adc
out
or
roll
lds
add
dec
mov
lds
mov
test
mov
and
jmp
inc
dec
fistps
mov
subl
scas
push
popf
rcrb
push
jge
push
ds
leave
push
cli
inc
shll
aad
pop
push
test
sub
cs
call
xlat
fistpl
call
adc
sub
push
push
push
dec
sub
jae
xor
out
loop
xor
cltd
imul
std
sbb
xor
movsl
aaa
xlat
dec
jns
stos
pop
jg
jbe
in
inc
test
xchg
jae
imul
or
or
imul
cmpl
into
in
push
sti
xor
sub
pop
jno
jns
mov
imul
mov
addr16
fwait
pop
mov
xor
insb
dec
xchg
mov
jae
mov
adc
jmp
call
loop
in
stos
cmpsb
add
inc
inc
xor
xchg
adc
repnz
loopne
mov
mov
fidivl
inc
and
loopne
xor
mov
push
fisttpll
pusha
sub
mull
sub
test
mov
and
ja
insl
or
pop
jecxz
mov
jl
cmpsl
mov
pusha
xchg
cli
lahf
sbb
fnsave
ljmp
das
pushf
mov
adc
xor
in
xor
jns
adc
out
and
insb
mov
ret
sbbb
inc
add
pop
ljmp
xor
dec
dec
in
popf
mov
lahf
int
adc
pop
push
ss
out
movsb
xchg
rcr
repz
loopne
and
fsts
and
mov
repz
jecxz
dec
out
sarb
lcall
je
loopne
test
cmp
xchg
jbe
iret
inc
push
in
repnz
cmp
xor
xchg
dec
pop
movsl
aam
out
mov
sbb
push
push
aam
jl
mov
inc
insl
aad
mull
insl
xchg
jb
jae
or
add
adcl
es
cmpsb
push
lock
testb
adc
push
mov
sbb
outsb
movsb
test
enter
aas
mov
dec
inc
pushf
mov
jmp
adc
mov
jo
and
and
insb
cmp
repz
inc
adc
adc
out
sub
fwait
cli
xor
sub
int
jae
into
test
add
sbbb
mov
jmp
pop
xchg
fwait
jmp
movsl
test
lahf
iret
jmp
or
lock
int3
icebp
mov
call
rcrl
jae
xor
ss
pop
repnz
loopne
or
or
lds
ror
dec
xor
test
loope
push
pushf
stos
and
jbe
adc
sbbl
mov
xor
jnp
aad
mov
cltd
sub
dec
sub
jecxz
ror
cmpsl
lahf
inc
cli
sbb
and
push
pop
sub
sbb
xchg
stos
cmp
push
loopne
imul
ffreep
sub
add
push
cmp
in
inc
call
cmpsb
jmp
lods
and
dec
xlat
cmp
lods
cmp
scas
or
push
outsb
xor
test
push
or
stos
ss
lock
and
lret
inc
fisubs
fcomp
lcall
adc
lret
sbb
aad
mov
cmc
pop
push
jmp
jnp
jne
out
leave
mov
xchg
dec
sbb
and
call
cmpsb
das
lret
inc
mov
mov
jmp
jge
xlat
or
add
outsl
bound
xchg
pushf
movsb
loopne
cmp
cmp
inc
mov
mov
fildll
mov
xchg
iret
xchg
inc
pop
dec
jae
mov
je
fdivrp
jp
mov
cmpsl
stc
jae
enter
cltd
jmp
and
or
inc
insl
add
push
xor
aam
pop
dec
and
hlt
or
repz
lcall
push
pop
icebp
test
ficomps
mov
lock
cld
mov
jp
adc
rolb
jo
push
movsb
lret
and
pop
fs
inc
inc
or
xor
lcall
inc
fcomp
xchg
sbb
cld
ret
testb
andb
pusha
mov
and
pop
cmp
mov
loope
pushf
xor
rcll
into
fwait
jae
cmp
pop
out
pop
adc
stos
js
lods
les
repz
jecxz
das
adcl
dec
lods
repz
icebp
pop
ss
mov
push
mov
or
mov
aaa
scas
aam
mov
pushf
subb
ret
add
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
or
roll
andl
xchg
std
into
push
push
pop
mov
or
mov
lret
insb
jnp
shlb
push
mov
inc
jmp
insb
outsb
pop
sub
cltd
push
jns
sbb
xor
mov
inc
test
frstor
mov
pop
movsb
inc
out
adc
aam
push
mov
xor
pop
fdivs
test
sbb
and
movsb
lcall
jo
jmp
dec
pop
mov
push
adc
fiaddl
dec
jne
jecxz
pop
ret
xchg
imul
mov
stos
shrb
mov
sbb
out
sbb
fcomps
cmp
movsb
mov
xchg
cmp
outsl
cmp
mov
ret
daa
enter
fsubl
and
in
daa
sbb
jb
jns
int3
sub
xor
add
roll
cld
ret
testl
cmp
pop
mov
js
insl
xor
push
lret
aas
shll
clc
or
push
shll
icebp
jnp
sar
push
leave
xchg
in
cmp
adc
dec
sbb
in
fs
pop
xchg
mov
dec
loope
pop
neg
repnz
jns
lcall
fadd
pop
jmp
or
lods
insb
nop
pushl
test
notb
inc
cwtl
mov
dec
mov
sbb
rcrb
cwtl
aas
mov
push
xchg
sar
cmc
int3
mov
jns
call
pop
pushf
jg
out
dec
call
ss
loopne
add
pop
fldl
sbb
mov
sbb
mov
xor
adc
inc
jno
push
repz
test
inc
rorl
movsl
test
idiv
test
jecxz
pop
fwait
sbb
loope
jne
adc
stos
into
add
jmp
cld
or
stos
pop
cmc
or
mov
fstps
out
jg,pt
jb
imul
lods
and
into
je
mov
cmp
ljmp
cmp
jno
mov
xor
add
mov
int
push
das
and
ja
ds
imul
sbb
lret
mov
inc
sbb
adc
push
push
xorl
jmp
mov
mov
pop
nop
mov
dec
and
nop
mov
scas
and
pop
or
xchg
outsb
repnz
push
or
add
sbbl
pop
adc
xor
inc
xchg
inc
mov
push
aas
stos
pop
gs
into
pop
ror
nop
fcoml
jle
lods
push
pop
pop
lcall
sub
jp
jmp
dec
or
jo
add
paddb
sub
into
pop
jns
pop
rclb
pop
imul
jo
lret
aad
dec
movsb
xor
push
test
lret
xchg
stos
or
rclb
cmp
add
stos
cli
adcb
fs
lret
cld
loopne
fwait
sub
dec
out
leave
addl
ljmp
gs
fsubrl
mov
inc
aas
test
pop
pop
mov
mov
rcr
mov
inc
sbb
mov
insl
inc
adc
cwtl
mov
lcall
jl
xor
pop
lahf
xchg
xlat
hlt
into
sbbb
or
movsl
sub
mov
inc
rcr
stc
fidivs
push
int
std
out
lock
mov
mov
out
fisubs
mov
in
or
push
ljmp
sub
enter
adc
mov
dec
in
xor
test
out
push
shrb
adc
cmpb
out
in
xchg
test
insl
movsl
hlt
icebp
adc
in
xchg
daa
jmp
movl
mov
insb
or
jmp
jecxz
adc
ljmp
dec
gs
sbb
sub
aad
rcl
and
xorl
inc
jne
lea
jnp,pt
in
test
dec
cmp
and
dec
cmp
sbb
mov
inc
cmp
pop
femms
inc
sahf
inc
mov
cltd
clc
jno
aas
aad
cmp
fsubrl
iret
pop
or
fwait
out
sbb
rclb
sbb
lods
jae
pop
xchg
push
pop
daa
hlt
shlb
movsb
cmp
mov
inc
mov
pop
aas
jne
xchg
adc
dec
popa
push
adc
mov
call
mov
inc
pop
mov
lods
lock
pop
add
lock
cmp
dec
or
sub
dec
mov
mov
ss
jp
pop
test
lahf
sub
in
sbb
and
out
dec
shl
adc
mov
daa
test
shr
adc
cmp
sub
lock
insl
jo
cmc
out
add
adc
scas
cli
inc
lahf
scas
sti
pop
lret
stos
lahf
cmpsb
std
and
shrb
mov
gs
dec
pop
es
in
sub
mov
imul
xor
cmp
out
mov
shll
push
push
push
add
jecxz
pop
imul
out
sar
sub
jl
mov
xorl
dec
mov
repnz
sti
jb
sti
cmp
sbb
push
stos
push
cmp
xorl
or
xchg
push
inc
cmp
sub
xchg
cmp
out
mov
pop
mov
push
cmp
inc
lock
lret
test
mov
xchg
inc
lea
xor
and
or
in
cmp
cmpb
scas
push
insl
mov
xlat
mov
imul
aam
mov
xchg
ret
adc
inc
sub
lods
add
mov
rol
int3
push
ficomps
insb
cmp
out
test
sub
mov
je
cmp
les
pop
notb
orb
jne
je
jmp
rcrb
enter
adc
repz
jb
insb
fimuls
cmp
data16
cld
stc
sub
sub
movsb
jl
ficoml
dec
int3
dec
xchg
popa
mov
inc
sti
lcall
enter
add
or
mov
ljmp
fidivs
inc
cmpsb
adc
sbb
sub
cmp
dec
ds
push
lahf
jnp
adc
mov
xchg
data16
movsl
add
jb
add
jge
inc
stos
cmp
push
movsl
push
int
mov
xchg
mov
dec
push
xchg
and
pop
dec
and
sub
dec
scas
rcrb
sbb
nop
xor
push
scas
mov
add
or
out
sbbb
sub
mov
mov
and
xlat
jnp
aam
fldl
sahf
mov
scas
xor
loop
mov
idivb
dec
add
sub
sbb
bnd
insl
mov
aas
adc
insb
hlt
mov
repnz
fsubrp
leave
ret
and
fistps
push
xor
stos
pop
add
pop
adc
pop
mov
out
into
xchg
dec
loope
jmp
loope
cmp
xchg
jnp
adc
popf
popa
movsl
iret
lret
fnstenv
test
jle
mov
xchg
xor
shlb
std
jne
pop
cmp
ret
push
cmp
movsl
sar
insl
aas
mov
mov
hlt
fxch
aam
add
repz
outsb
cmp
cli
ja
mov
sbbb
mov
aas
ret
les
push
push
shl
push
ret
ret
shlb
popf
push
dec
hlt
outsl
mov
out
je
das
push
fldz
ret
push
test
popa
mov
xor
adc
pop
sbb
in
enter
cli
rcrb
in
out
xchg
arpl
pushf
scas
bound
or
sub
jge
xchg
pop
dec
adc
xorb
sbb
jb
xchg
mov
pop
xchg
sbb
push
call
jae
xor
mov
sub
inc
add
xor
lods
inc
jne
push
mov
dec
dec
pushf
aaa
hlt
xor
jle
movsl
push
sbb
push
mov
lock
ljmp
dec
in
jo
pop
hlt
insl
ret
loopne
or
fucomp
lock
mov
add
push
lret
repnz
push
mov
add
dec
mov
xlat
fdivr
repnz
sbb
scas
stc
leave
adc
jl
fs
pop
and
pop
addb
je
fsubs
jnp
in
and
sub
es
cli
mull
or
pushf
push
pop
mov
iret
push
mov
push
pop
adc
roll
and
and
and
xor
and
pop
inc
nop
aam
rclb
add
cli
ret
loop
hlt
cmpsb
dec
popa
test
into
mov
jns
mov
test
enter
clc
test
imulb
ret
mov
imul
mov
call
inc
add
push
and
js
repz
std
mov
and
jg
frstor
or
dec
jle
pop
addb
sbb
pop
pop
popa
jge
pop
dec
cmp
lcall
xor
pop
xor
jmp
mov
sarb
mov
sub
data16
push
push
cmp
xchg
dec
out
sbb
or
imul
mov
stos
push
jbe
mov
xchg
push
fmull
subl
push
xor
dec
in
mov
into
mov
cmp
mov
lahf
add
xor
jnp
jmp
cld
dec
popa
les
jmp
roll
jl
inc
mov
and
mov
ret
call
add
and
fs
or
stc
fucomip
pop
dec
dec
in
pop
jle
leave
lret
jo
jns
cmp
lret
cwtl
popfw
xchg
jecxz
dec
xor
pop
cs
inc
hlt
mov
mov
cli
and
or
gs
rolb
push
dec
cmp
mov
loop
push
xor
imul
iret
call
pop
arpl
push
aas
hlt
div
cmp
mov
lret
fistpl
xor
pop
fisttpl
jbe
cmp
out
push
pusha
jl
jmp
sahf
xchg
adc
push
pop
mov
sub
push
or
stc
rcrw
mov
xchg
push
es
mov
in
adc
in
or
loope
xchg
icebp
mov
dec
sub
sar
mov
ds
int
jb
cmp
jns
cs
in
es
mov
sub
test
add
mov
ja
push
pop
push
pop
ds
and
push
push
lods
movb
fildl
fadds
cmc
mov
roll
add
mov
dec
rcll
jo
fistpll
cld
or
dec
add
mov
lock
mov
aas
sbb
mov
mov
sub
pop
stos
and
cmpsl
dec
jmp
inc
xlat
or
ljmp
addr16
das
in
add
or
and
xchg
mov
cmpsl
sub
xchg
nop
add
cmp
lea
mov
adcb
mov
add
sub
imul
mov
dec
ficoml
adc
mov
pop
mov
in
lahf
stc
xlat
dec
cmp
iret
mov
jo
idiv
insb
sub
shlb
shrl
cltd
insb
cmp
jnp
in
or
inc
nop
push
jne
sbb
popa
jmp
jmp
out
sub
xchg
push
shrl
add
lds
dec
outsb
sub
mov
call
jmp
movsl
icebp
stos
sub
xor
daa
cmp
pushf
xor
push
bound
out
movsbl
mov
int
inc
mov
rorb
push
jmp
xchg
sbb
loopne
adcb
mov
dec
xchg
lret
les
in
pop
sub
mov
pusha
inc
xorl
jle
pop
mov
fadd
fldcw
mov
or
mov
lret
dec
dec
pusha
shrb
pop
rclb
adc
xor
jmp
mov
mov
sub
testl
sub
mov
ret
cwtl
out
sub
jmp
dec
jmp
in
pushf
adc
adc
add
cmp
in
imul
add
hlt
fidivrl
lock
xchg
dec
xchg
dec
add
fildl
xor
jns
pop
test
call
jo
mov
leave
ss
imul
cmc
lock
mov
pop
inc
mov
push
adc
fisttpl
push
loopne
jecxz
inc
jp
hlt
and
rcrb
xchg
fwait
sti
and
pop
inc
mov
out
pop
decl
pop
roll
outsl
and
cmp
fisubs
pop
je
inc
fidivrl
insb
add
pushf
xor
lods
ret
mov
xorl
fisttpll
jns
mov
push
int
sbb
cmp
movsb
cs
in
sbb
pop
dec
scas
stos
dec
dec
xor
pop
ret
dec
popa
mov
mov
dec
inc
test
sbb
push
jle
xor
hlt
lcall
inc
ljmp
xchg
xlat
inc
decb
test
mov
jno
lret
insl
mov
es
and
jge
rorl
mov
xor
push
lds
fnstcw
or
int3
sarb
fisubrs
jge
push
repnz
sub
mov
fimuls
jp
sbb
pop
pop
pop
repz
or
lds
gs
push
or
adc
sub
cmp
inc
cmp
push
dec
sub
icebp
cltd
xlat
sbb
xchg
push
fildl
jl
movsb
js
adc
or
push
cmp
push
arpl
or
adc
or
pop
jae
imul
mov
gs
jl
jno
out
xor
jge,pn
lret
ss
xchg
imul
ficomps
push
mov
sbb
clc
faddl
jns
mov
loope
icebp
sub
sub
cld
xchg
cmpl
push
xchg
hlt
shrl
add
lret
adc
les
mov
xor
sbb
cmc
pop
add
push
ret
js
nop
repnz
jae
and
sub
repz
sti
mov
lahf
out
sbbb
daa
idivb
and
push
bound
push
scas
pusha
xchg
aaa
sbb
add
movl
testl
iret
mov
cmc
mov
adc
dec
pop
cmpsl
iret
mov
aam
int3
imul
mov
iret
fcomip
sub
dec
jp
push
jnp
adc
jle
add
jl
jl
push
sub
and
and
cltd
mov
fldt
lea
scas
pushf
in
das
mov
cmp
fs
pop
mov
adc
scas
test
add
mov
lds
popf
jecxz
dec
or
lret
push
cmp
and
push
call
push
pop
dec
and
lods
xchg
push
out
test
js
sbb
sub
test
push
mov
mov
add
popf
aaa
sbb
icebp
outsl
popl
xchg
jmp
out
push
xor
xchg
movzbl
int
subl
sub
sbb
push
sbb
dec
lret
sub
add
mov
std
jne
cmpsb
cmp
lods
pop
lea
mov
pusha
adc
das
and
sub
cmp
pop
lcall
mov
inc
push
sub
mov
mov
jle
out
sub
fsubs
xor
negl
sbb
test
pop
cli
scas
rcrb
mov
es
lods
data16
repnz
xor
lret
adc
mov
mov
xchg
adc
push
test
cld
roll
sbb
pop
or
push
cmpsb
aad
sti
lds
jecxz
mov
sbb
insb
stc
jo
add
and
mov
cmp
sub
pop
pusha
pop
adc
into
nop
pop
fcompl
mov
loopne,pt
lods
adc
or
fistl
sub
call
sbb
pushf
pop
aas
jle
sahf
aam
push
jge
mov
mov
andl
iret
xchg
in
adc
mov
xchg
jp
movsl
add
mov
add
shl
mov
lock
cwtl
cmc
mov
mov
mov
push
test
mov
mov
out
jb
cmp
or
mov
test
mov
les
movsb
lahf
test
ds
xchg
out
les
scas
xchg
ljmp
popf
pop
sbb
xlat
lock
adc
ljmp
mov
xor
or
dec
and
cmp
stc
imul
sub
cmc
jge
iret
es
add
push
cmp
push
shrb
mov
xchg
jg
push
sbb
sub
loope
or
xor
xchg
les
xchg
dec
ds
adc
pop
push
inc
cmp
daa
fidivrl
imul
data16
lock
and
dec
fcmovbe
imul
sbb
xchg
pop
push
cmpsl
pop
in
sub
inc
mov
lods
nop
dec
mov
cltd
jle
cltd
dec
jbe
aad
ret
fdivl
cld
xchg
cmp
inc
ret
aaa
push
aam
cltd
sbb
sbb
jmp
dec
dec
cwtl
push
sub
push
cwtl
add
ljmp
ficoml
data16
push
push
sub
lret
jle
mov
xchg
cmpsl
mov
xchg
nop
push
repnz
mov
mov
popa
push
dec
lret
mov
lea
adcl
inc
insl
roll
jns
shlb
je
jecxz
mov
mov
xor
xchg
dec
pop
repz
es
cltd
push
sbb
out
sbb
testb
adc
sahf
and
or
fistpll
or
jbe
cmc
out
pusha
mov
cmp
adcl
sub
testl
sahf
lret
jns
or
movb
sbb
es
push
jnp
mov
or
or
inc
pop
mov
xchg
adc
mov
push
lret
lods
push
jne
add
jecxz
and
cmpsb
mov
adc
sbb
push
push
lret
ljmp
std
push
jle
scas
daa
jbe
lea
jae
das
nop
in
out
inc
sbb
pushl
sub
pop
push
or
pop
add
cs
adc
inc
bound
and
cwtl
and
xor
push
push
dec
cmp
dec
stos
fs
and
jnp
rol
adc
mov
dec
data16
clc
sarb
pop
js
ficompl
std
dec
lret
sbb
pop
lods
cltd
mov
fstp
lcall
inc
les
iret
and
inc
xor
mov
pop
and
sbb
ffreep
cmp
pop
int3
dec
dec
aam
add
movsl
jnp
ret
ss
jg
popf
xchg
dec
repnz
stos
repnz
fnclex
push
push
mov
xchg
lret
in
inc
add
add
xorb
jge
movsb
mov
mov
push
repnz
mov
insb
xor
movsb
sub
cmp
mov
push
mov
sbb
pushf
cli
repz
mov
pusha
adc
xchg
icebp
xchg
scas
jl
fadd
mov
icebp
lret
inc
adc
test
inc
sarb
sbb
jne
repz
inc
icebp
jne
jge
jne
loopne
add
in
leave
mov
jg
or
in
inc
pop
dec
pop
shlb
outsb
push
rep
negb
xchg
or
cli
adc
sbb
push
subl
bound
pop
data16
in
pop
push
sub
jl
mov
outsl
inc
sub
test
cmp
sub
cmp
pop
xchg
call
xchg
rorb
jo
ret
in
jecxz
xchg
popf
popa
les
mov
pop
cmpsl
decl
jg
or
cmpsb
xchg
sub
stos
dec
xor
insl
xchg
jmp
sbb
je
cwtl
movsl
cmp
mov
aaa
fs
in
mov
mov
andb
mov
lea
sbb
mov
add
xchg
cwtl
ja
cmp
loopne
push
xor
add
unpcklps
fwait
pop
cmp
sbb
sbbb
ja
add
and
dec
sbbb
repz
inc
push
sbb
xor
repnz
mov
inc
iret
pop
dec
push
lds
scas
ja
repnz
jmp
insl
jmp
mov
jge
in
bound
dec
das
jecxz
stos
add
aam
mov
lahf
faddl
sbb
lds
pop
call
sbb
in
jmp
jl
mov
inc
insl
jge
jae
sbb
and
add
fcmovu
jae
pop
sub
testl
jb
cmp
pusha
xor
push
mov
enter
push
inc
fldenv
push
mov
insl
stos
js
dec
mov
add
into
push
or
jns
fstpl
lcall
xchg
pop
shll
push
xor
shrb
insl
mov
loopne
aas
cwtl
stos
inc
in
mov
out
dec
addr16
mov
mov
xor
or
scas
push
xchg
dec
pop
addr16
jmp
jno
aad
and
pop
inc
insl
outsb
inc
adc
out
repz
jae
dec
xor
add
pop
repz
mov
push
icebp
push
mov
outsl
loope
pop
pop
pop
pop
xor
stos
into
and
jge
push
fxch
jg
out
lds
out
stos
cmpsl
mov
xor
sbb
cmc
xchg
ds
xchg
stc
pop
jp
add
ret
jmp
rcrl
xor
fisttps
cmp
cs
fisubrl
jp
ds
xor
rcrb
jbe
das
scas
enter
adc
in
and
sbb
je
add
lock
add
xchg
lcall
int
sub
arpl
cmpsl
aaa
clc
mov
rcrl
fs
pop
jb
inc
outsl
dec
xchg
sub
add
xchg
stc
clc
push
xor
adc
cmp
or
addr16
into
cmp
inc
add
dec
inc
inc
cmpsb
xor
sbb
in
adc
std
mov
ss
psubsb
sbb
in
std
jbe
mov
pop
je
inc
popa
xor
jle
scas
aam
scas
pop
scas
adc
sub
pop
mov
loop
lds
and
xor
mov
xchg
xchg
insl
dec
mov
mov
jbe
push
jecxz
mov
insl
mov
nopl
mov
lahf
ljmp
aam
and
dec
xchg
adc
idivb
mov
mov
and
inc
mov
push
inc
or
mov
or
or
imul
std
jp
cmc
sbb
insb
fildll
adc
mov
into
cmpsl
sbb
loop
jp
stc
sub
in
roll
rorb
aam
cmp
cld
out
mov
scas
mov
iret
and
arpl
add
mov
xchg
mov
sti
mov
mov
mov
sub
mov
cmp
fcmove
or
pop
popf
popf
lods
cli
add
fs
mov
pop
mov
lret
mov
push
into
movsl
cmp
sahf
and
test
push
mov
rorl
and
inc
inc
fbld
cwtl
xor
mov
sub
outsl
cmpsb
mov
mov
pop
pop
daa
dec
adc
mov
inc
dec
imul
jb
jbe
repz
and
jl
xchg
jno
jmp
xchg
leave
jl
cmovbe
push
or
or
pop
dec
addr16
fistpl
movsl
mov
jl
cmp
pop
popa
mov
pop
push
scas
push
insl
addb
gs
cmp
pop
push
cmpsb
xchg
dec
fneni(8087
jnp
pop
xor
xor
inc
lcall
mov
pop
pmaxub
mov
dec
jb
or
enter
movsl
loope
imul
je
mov
mov
add
mov
xchg
xchg
xchg
lret
pop
test
xor
mov
jns
cmp
mov
mov
ljmp
loope
push
cmp
mov
jo
shr
les
in
or
outsb
inc
xor
xchg
jl
aas
stos
mov
xor
add
xchg
mov
jg
and
out
lret
sbb
dec
mov
notl
stc
shlb
ficoml
xchg
ret
insl
shll
outsl
jp
scas
push
jecxz
rorb
and
dec
imul
ja
adc
aam
jae
adc
test
sahf
lds
mov
enter
out
mov
lret
sub
fadds
lods
and
or
push
or
das
call
push
push
dec
mov
pushf
sub
icebp
bound
add
mov
cmp
mov
sub
shll
inc
jne
iret
pop
push
lahf
inc
inc
push
js
xor
in
sbb
aaa
int3
pop
out
outsb
lret
dec
jbe
sub
ds
mov
call
imul
mov
or
cmc
lcall
lret
xchg
mov
mov
je
call
sbb
pop
in
lret
pop
into
sub
adcl
jp
cmp
sbb
cli
adc
or
xchg
lods
rorl
mov
movswl
popa
pop
enter
cmp
cmp
push
inc
out
test
ja
inc
xchg
sub
lret
aaa
jno
repz
add
mov
push
add
adc
lea
dec
sub
pop
xchg
xchg
push
mov
add
inc
jne
popf
mov
and
test
pushf
jo
imul
shrl
mov
add
push
mov
stos
fisttpl
inc
xor
inc
ljmp
add
pop
cmp
nop
lds
icebp
or
imul
mov
test
xchg
insw
push
mov
iret
lret
scas
push
aas
test
outsl
pop
sub
ss
fisubl
dec
pop
cltd
and
xor
dec
push
mov
data16
jns
pushf
fldl2e
inc
loop
lods
cltd
add
xor
mov
movsb
inc
addr16
fsubrs
rorl
cmp
es
out
test
int3
fbld
pop
mov
or
cwtl
xor
cmp
lock
lea
pop
pop
in
gs
loop
lods
mov
push
repz
mov
xlat
sar
jb
into
push
into
fwait
ja
out
mull
call
pop
repnz
mov
cli
sbb
push
mov
pushf
ret
adcl
mov
mov
cmp
int
dec
out
push
outsl
and
aad
loope
imul
fwait
insl
xlat
xor
inc
inc
ds
cmovb
mov
shrl
sbb
push
lods
jns
ss
addl
mov
addr16
push
add
mov
sahf
dec
jg
ljmp
in
mov
sbb
scas
arpl
in
xchg
add
loopne
sub
arpl
pop
shll
push
jle
adc
and
and
std
shlb
dec
jmp
ret
js
mov
popa
fisttps
clc
cmpsw
dec
inc
subb
adc
sub
mov
cmc
inc
xchg
push
lods
les
popf
cmp
loopne
xchg
fsubrl
rorb
and
inc
lds
imul
xchg
shr
je
out
mov
push
ss
inc
add
popa
lock
mov
jnp
stos
xchg
pop
and
std
xchg
lret
push
adc
mov
and
xchg
xchg
add
repz
sbb
fs
cmp
cs
aas
mov
ret
cltd
mov
xchg
lretw
outsl
stc
mov
imul
pop
test
sub
fwait
mov
out
sahf
stos
out
and
ds
imul
jmp
xchg
bound
xchg
fidivl
rorb
push
addr16
push
xorl
pop
cmp
jb
test
nop
les
les
adc
xchg
mov
cmp
push
sub
jg
bound
jle
xor
mov
add
cs
xchg
cmp
push
xor
jae
lods
jl
jecxz
fisubl
xor
xchg
xchg
leave
pushf
cli
xchg
sbb
subb
out
and
adc
lret
jnp
mov
fxch
jbe
mov
fisttps
test
pop
add
xchg
mov
jno
add
pusha
jbe
popa
inc
ss
outsb
jge
and
xlat
cmp
cmp
push
stos
push
jl
std
ljmp
cwtl
xor
hlt
bound
mov
cmpsw
jmp
pop
push
imul
lock
sbb
add
jge
stos
hlt
xchg
test
mov
sbbl
xchg
addl
addb
inc
push
shlb
push
aam
mov
ja
lea
decb
lods
xchg
hlt
mov
mov
xorb
pop
jmp
jne
sahf
pop
sub
pop
adc
leave
add
dec
fldenv
cmp
scas
or
inc
jns
ljmp
xor
ss
call
pusha
out
jbe
ss
inc
or
xorl
sbb
dec
jne
bound
push
sahf
push
sub
push
pop
sbb
xor
push
mov
insl
clc
test
cmpsb
sbb
push
jp
pop
jl
xor
cmp
test
jg
cs
or
movsb
adc
popa
cli
adc
loopne
inc
outsl
pop
ret
sbbb
xchg
pop
adc
pop
aam
inc
sub
stos
mov
push
mov
pop
in
sub
std
bound
add
leave
mov
iret
mov
in
jnp
jp
stc
push
lcall
sbb
xor
inc
cmp
mov
repz
das
cmp
sbb
fildl
mov
mov
xlat
arpl
hlt
fsts
lods
addl
xorl
jo
push
in
pushf
cld
repz
xchg
pop
or
cmp
pop
adc
add
or
in
push
ror
clc
mov
clc
rolb
add
and
outsl
xchg
imul
or
shlb
stos
call
les
loop
jp
adc
or
xor
xor
mov
cmp
push
mov
xchg
test
test
fisubs
in
mov
sti
idivl
enter
mov
call
or
lods
andl
icebp
or
ret
fldt
fimuls
cmc
xor
jmp
xchg
stc
cmpsb
fsubp
adc
inc
add
dec
popf
pop
add
push
mov
fldl
repz
mov
test
xchg
jbe
sbb
lret
push
xchg
sbb
push
mov
cs
dec
loopne
mov
cmp
loop
pushf
inc
adc
mov
out
shlb
lea
in
dec
aam
inc
cld
jb
scas
sbb
mov
dec
cmp
aam
divb
sbb
or
loope
sub
leave
orl
dec
enter
and
out
ljmp
sbb
lock
mov
pop
jp
add
dec
mov
pop
push
fiadds
pop
test
testl
cmpsl
jge
jg
daa
push
shrl
mov
dec
or
lock
lcall
fstl
pop
lods
stos
xchg
dec
cmpsb
pop
push
icebp
pusha
or
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
mov
aas
scas
addl
movsl
xchg
inc
mov
xor
aam
mov
sar
hlt
mov
jo
ret
sahf
in
stos
hlt
push
inc
pop
mov
psrlw
sub
jo
or
inc
stos
popa
imul
xor
ss
adc
push
imul
cli
dec
sub
sub
fadds
sub
outsl
loope
dec
and
pop
jl
mov
mov
inc
or
roll
add
sbb
or
pushf
aaa
sbb
push
mov
addb
and
or
lret
fstp
add
jmp
mov
dec
das
es
adc
sti
inc
popa
pop
pushf
repz
xor
or
mov
mov
mov
dec
lret
sbb
mov
loope
lods
adc
push
push
pop
jns
lods
mov
xor
scas
std
aad
jle
test
shl
loop
cmpsb
add
cmpsb
adc
int3
jg
add
sbb
lods
mov
pop
push
jg
lods
pop
bound
std
js
mov
sbb
lret
pop
movsl
jl
in
in
xchg
jns
or
gs
pop
add
js
mov
cmp
shr
cmpsl
cmpsl
mov
fbld
cmpsl
or
mov
cmp
in
jl
ljmp
push
sete
push
dec
cs
pop
mov
fidivs
div
mov
cmp
mov
or
add
or
push
inc
push
cmp
jl
aad
cmp
loop
pop
lret
sbb
test
aam
lds
push
cmp
inc
enter
stc
lahf
call
xor
ficompl
mov
jmp
adc
cmp
xor
sbb
in
in
or
test
inc
mov
xor
jmp
pop
adc
adc
jnp
shrd
mov
dec
sbb
sub
loope
icebp
js
xchg
add
mov
jo
sub
lahf
ss
xchg
and
aas
inc
test
lods
mov
mov
mov
out
shll
aam
mov
testb
jns
mov
cwtl
dec
mov
les
xchg
cli
jl
mov
xchg
mov
int3
or
mov
lcall
cmp
aaa
fs
scas
adc
mov
jae
mov
cmp
dec
mov
xlat
sahf
sbb
into
jge
fldenv
pinsrw
shrb
mov
xor
jmp
lret
mov
lods
aas
lods
inc
daa
adc
sahf
cmp
loopne
scas
test
xor
mov
andb
sbb
leave
mov
mov
lods
inc
or
sub
ret
mov
mov
pop
mov
jp
sbb
in
lea
add
inc
inc
je
mov
xor
jecxz
jns
jl
fbstp
push
push
insb
orb
sub
mov
dec
fldenv
imul
fldt
out
and
push
lret
test
out
or
cmc
insb
add
dec
loope
mov
jae
cmc
sarb
xchg
mov
jae
pop
repz
fucomip
loope
fadd
dec
sbb
add
dec
jb
xchg
daa
cmp
cmp
idiv
lods
into
daa
adc
leave
sub
jmp
fs
jbe
arpl
xchg
inc
mov
test
dec
fdivrs
rolb
mov
fdivl
push
ja
movsl
xor
jnp
test
and
add
smsw
xchg
dec
out
js
adc
leave
pop
or
and
cmp
mov
sbb
pop
jns
or
adc
sub
sbb
or
ret
rcrl
mov
insb
xchg
mov
mov
pop
pop
out
push
xor
lock
arpl
cmp
xchg
mov
cwtl
gs
mov
pop
jl
pushf
jmp
je
pusha
mov
sbb
pop
mov
ret
mov
lock
inc
xor
and
mov
or
pop
inc
dec
jl
xor
js
mov
and
shrl
and
fs
sbb
lret
inc
sti
leave
pop
push
inc
shlb
les
jne
shrl
addr16
inc
push
into
shl
jo
rorl
mov
push
and
enter
mov
ds
mov
push
rcrb
out
in
repz
negl
pop
jne
push
les
xlat
inc
xchg
stos
leave
cmp
int
push
test
xchg
out
xor
xchg
xor
shlb
cmp
mov
out
mov
xchg
fwait
mov
pop
ret
or
dec
lahf
jae
and
rolb
push
int
fnstcw
lods
jbe
fwait
inc
mov
or
push
and
orl
es
add
repnz
test
sub
jno
popa
in
pop
jmp
cltd
subb
rorl
cmpsl
jl
lcall
dec
and
movsl
repz
lret
out
mov
incl
xor
add
push
sbb
mov
xor
pop
test
push
and
adc
mov
insb
loop
mov
pusha
test
xchg
test
jle
fs
push
dec
and
xor
fucompp
enter
arpl
rcrb
adc
sbb
call
pop
imul
in
popa
mov
push
jmp
push
adcb
outsl
inc
insb
inc
push
push
stos
push
mov
insb
movsl
imul
fs
popa
bound
popf
call
testb
jno
push
mov
or
mov
mov
push
call
inc
or
inc
imul
enter
xchg
outsb
aad
push
mov
or
jns
mov
jmp
negl
xchg
loop
call
pop
inc
xchg
add
rorl
cmp
sar
jecxz
data16
es
jg
cmp
stc
jmp
add
add
push
call
adc
test
mov
mov
jne
mov
sbb
test
xor
jnp
add
aaa
loopne
pusha
jne
and
inc
stos
pop
sub
lret
xchg
sbb
sbb
jmp
pop
push
mov
out
data16
cltd
ss
cmpsl
jmp
dec
adc
sahf
lods
pop
sub
pusha
scas
testb
dec
xor
rol
iret
dec
sub
xchg
je
add
fcmovne
mov
push
or
lcall
test
cmp
or
or
xor
mov
test
mov
dec
shll
inc
jne
aaa
inc
xchg
mov
mov
ror
xor
mov
or
sbb
shll
jmp
push
sarb
mov
push
add
inc
mov
test
shr
push
es
sub
lock
xlat
clc
in
xor
xchg
and
pop
push
fstpt
sbb
test
fwait
stos
enter
xor
inc
mov
xchg
jb
or
jno
and
cld
and
leave
xor
popf
and
cmpl
jnp
xlat
aaa
cmp
lret
mov
sub
or
lahf
xchg
mov
cmp
or
int3
inc
pop
mov
test
xlat
dec
mov
sub
jb
mov
dec
fidivrl
popa
push
ljmp
xor
out
cmpsb
fimull
adc
pop
sbb
mov
sarl
xor
shl
mov
push
xchg
sahf
sub
push
cld
filds
test
test
or
jae
in
test
adc
fdivs
filds
enter
pop
int
sub
inc
mov
out
xor
dec
sub
mov
add
fwait
mov
out
test
mov
insl
jmp
enter
filds
jbe
xchg
mov
fcmovb
or
lret
mov
ljmp
repz
shrl
insb
icebp
or
pop
mov
loopne
int
push
ficompl
xor
mov
ljmp
leave
sarl
mov
and
fwait
mov
cwtl
dec
mov
mov
sub
movsb
movsl
push
jge
imul
xchg
bound
outsl
and
jecxz
popa
sub
cli
dec
pusha
adc
xor
imul
in
jnp
add
and
jmp
xchg
mov
xor
test
sub
mov
mov
sbb
push
cli
push
push
popf
stos
das
int3
jmp
pop
jg
and
test
in
fistpll
mov
mov
fs
jo
xor
clc
mov
jae
pushf
cmp
lret
sub
sbb
add
outsb
xchg
movsl
mov
pop
jmp
aas
lock
xchg
add
pop
bound
stos
mov
arpl
in
das
push
pop
cmp
scas
jle
cmp
outsl
loope
scas
xor
scas
mov
cmpb
loopne
dec
jae
jge
arpl
test
push
inc
xchg
push
mov
pop
and
or
mov
lods
enter
lea
or
add
inc
xor
xor
cmp
fsubs
stos
inc
mov
sbb
in
lea
ja
mov
les
ds
out
rorb
je
insb
fidivrl
popf
int3
inc
lcall
cmpsb
pushf
idivl
test
inc
inc
lods
out
lea
push
leave
jbe
pop
xchg
pop
pop
mov
scas
jnp
push
pop
or
enter
pop
pop
lret
icebp
in
add
dec
repnz
jecxz
xchg
testl
enter
incl
stos
pop
dec
in
mov
lret
sarb
adc
gs
fdivrp
loop
inc
inc
cmp
mov
xchg
mov
scas
sti
xchg
or
add
sbb
rcl
ljmp
mov
pop
loopne
add
lahf
hlt
sbb
iret
in
inc
inc
mov
cmc
and
adc
fwait
sub
addr16
stos
int
cmp
inc
lret
xor
sub
fidivrl
mov
mov
mull
jne
movsl
pushf
mov
add
mov
sbb
sti
lcall
dec
sahf
add
data16
repz
fldenv
movsb
sub
mov
sbb
pop
jns
add
mov
repnz
or
cmpsl
sbb
fucom
sub
lds
jl
sahf
sahf
adc
shrb
andl
sub
xchg
sub
adc
cmp
outsb
jae
cld
jns
fwait
mov
sub
cmp
stc
dec
mov
and
mov
fidivs
hlt
add
and
and
mov
or
fwait
aas
outsl
dec
iret
xlat
mov
gs
mov
adc
mov
dec
call
sub
inc
in
cmp
lret
scas
xchg
cmp
jne
mov
stc
mov
in
dec
pop
call
int3
jecxz
xchg
pusha
lret
push
or
pusha
iret
push
jl
mov
pop
ds
mov
decb
icebp
popa
fsts
clc
int
ror
out
lds
fcmove
or
aaa
xchg
fsubr
or
jo
jmp
xor
cmpsb
popf
add
in
xchg
out
sbb
stos
in
int3
dec
add
scas
or
data16
aas
outsl
shr
jae
and
fildl
sti
mov
fldcw
push
cmpsl
lods
mov
pop
jle
sbb
inc
pusha
enter
rcl
xor
and
jge
dec
pop
out
sti
pop
adc
and
add
pop
cmc
add
jne
arpl
in
xchg
sbb
idivb
mov
pop
inc
iret
sub
pop
imul
mov
in
sbb
cmp
div
in
scas
out
test
or
lret
cmp
rcrl
in
mov
clc
dec
mov
adc
mov
dec
fmull
add
mov
ljmp
mov
adc
test
andb
xor
inc
ret
or
out
gs
call
inc
loope
inc
decb
orb
jbe
xchg
mov
sub
jno
divb
xchg
stos
lret
aaa
mov
imul
andl
sub
addr16
mov
or
cmp
and
jbe
imul
popf
jg
imul
pop
push
pop
and
shrb
jmp
mov
jge
bound
xor
adc
xchg
push
orl
or
outsb
outsb
push
pusha
dec
pop
jnp
ror
enter
pop
and
sbb
cs
fldcw
test
cmp
jne
les
add
insb
es
xchg
pop
adc
adc
push
imul
fnstsw
adc
push
and
rol
sbb
dec
pop
or
mov
sarl
jge
shlb
add
mov
and
sub
sub
shll
rep
jae
jne
or
xor
in
lock
dec
pop
sub
mov
mov
mov
in
in
jecxz
out
add
stc
rcrb
jae
xor
push
fadd
shlb
popf
or
repnz
adc
pop
lea
xlat
inc
mov
inc
push
xchg
stc
mov
cwtl
insl
pusha
pop
cmp
sbb
mov
inc
push
jecxz
lods
rorb
lahf
movsb
adc
mov
js
jne
ret
jecxz
pop
cli
es
fmuls
or
ds
xor
inc
mov
inc
mov
adc
sbb
cmp
lods
bound
mov
cmp
jle
pop
cmpl
push
and
insl
cmpsl
inc
and
push
cmc
test
aaa
lea
imul
roll
mov
push
pop
cli
ret
test
adc
call
and
pop
cmpsb
out
stc
in
mov
pop
add
xor
pop
pop
jg
inc
loope
xchg
cmp
push
les
test
scas
lret
adc
xor
adc
jae
mov
orl
and
fsubrl
out
xchg
daa
mov
adc
xchg
and
sbb
push
push
aam
add
cmp
loopne
inc
aam
data16
in
incl
jecxz
loopne
ficomps
dec
scas
test
bound
lods
pop
jl
dec
or
imul
imul
addb
and
mov
bound
les
mov
adc
leave
outsl
or
xchg
daa
aad
loop
jge
jno
ror
int
gs
pop
or
pushl
add
popf
loop
ret
stos
sbb
ljmp
adc
aas
shll
jge
icebp
cmc
push
movsl
sub
cli
lahf
call
jl
or
and
or
push
aam
xor
cmp
mov
in
or
ljmp
ds
push
orl
jne
jg
xlat
xchg
jp
loopne
rcrb
cmp
mov
mov
mov
das
xchg
aas
mov
jle
xlat
leave
inc
pushf
movsl
je
sbb
push
jle
inc
imul
inc
insb
pop
repz
addl
adc
add
call
iret
mov
dec
adc
lods
jecxz
mov
out
push
lcall
outsl
fiaddl
mov
jg
repnz
and
mov
test
dec
xchg
and
out
fwait
hlt
and
sbb
repz
cmp
test
fdivr
fs
icebp
pop
stos
lods
sarb
jno
mov
mov
fs
shrl
pop
or
or
cmc
imul
pushf
lock
jnp
mov
push
push
lret
xchg
xor
xor
or
movsb
stos
add
aam
lds
clc
movsb
in
inc
sbb
dec
mov
pushf
mov
sbb
jmp
fidivl
inc
push
mov
test
sub
adc
add
sub
dec
pushf
xor
hlt
daa
xorb
mov
jnp
xor
jns
pop
adc
iret
lahf
mov
clc
call
sub
dec
jp
ret
push
cltd
mov
push
pop
xchg
xchg
xchg
ror
arpl
mov
add
daa
ds
loope
int
sbb
shl
push
xor
push
insl
push
jl
jle
jns
mov
xchg
pop
sbbl
stos
push
ret
popf
fadd
das
ljmp
je
test
cli
test
movsb
addl
loope
hlt
push
ret
test
insl
shlb
cmpsl
adc
popf
imul
sub
sub
aaa
icebp
fsubp
insl
icebp
adc
mov
mov
mov
loopne
cltd
adc
leave
popf
or
inc
inc
das
ret
jo
cwtl
mov
pop
cli
ror
cmpsb
jmp
dec
xchg
sbb
ljmp
outsl
push
movsb
sti
fimull
gs
mov
or
loope
xor
xlat
iret
push
pusha
push
or
and
hlt
push
and
orl
shlb
adc
mov
icebp
xchg
xlat
popa
lock
ja
xor
push
adc
adc
xlat
loop
out
and
es
repz
pop
mov
push
or
rcrl
pop
jne
push
jbe
jbe
mov
jo
mov
int
movsb
cmp
add
push
ret
out
stc
mov
push
insl
push
jnp
sbb
or
incl
lods
jge
aam
and
sub
xchg
fldenv
jp
sub
cmp
mov
push
subb
test
mov
add
lods
mov
stos
jl
sbb
mov
mov
dec
sbb
fisttpll
mov
shrb
lcall
or
adc
jbe
call
sbb
and
imul
ljmp
fsincos
xlat
imul
push
mov
in
pop
pop
inc
fisubrl
inc
test
push
push
push
jnp
sub
imul
and
cli
ljmp
jle
inc
lds
in
mov
ja
pop
and
out
mov
jns
clc
and
insl
scas
data16
clc
mov
mov
mov
arpl
adc
iret
mov
pop
pop
or
pop
loope
or
repz
mov
inc
movsl
test
mov
es
pop
filds
push
sbb
add
out
lods
cs
nop
ficoms
es
mov
jo
mov
int3
test
or
add
mov
inc
xor
rcll
jecxz
test
pusha
testl
ficomps
and
dec
xor
rcl
and
sub
add
mov
mov
lods
scas
sbb
adc
xchg
and
jae
push
stos
ror
test
fsubrl
idivl
cld
sub
hlt
push
dec
shr
push
mov
out
das
mov
pop
cmp
cmp
jbe
iret
insl
pop
jbe
adc
xor
scas
dec
sbb
and
jbe
push
adc
rorl
mov
mov
dec
adc
pop
rcr
inc
cmp
je
xchg
jo
push
rclb
aad
push
and
push
fisubs
sub
mov
dec
ror
cld
dec
stos
mov
adc
int3
gs
lds
cmpsl
gs
ret
xchg
das
sbb
mov
rcl
lret
mov
bound
repz
and
mov
fcompl
lock
mov
cmpsb
jg
aam
or
inc
or
js
scas
mov
mov
cli
hlt
hlt
cmp
fisubl
lret
shrb
pop
xchg
mov
scas
inc
adc
imul
pop
adc
lods
pop
xor
add
js
stos
and
push
adcb
fnclex
aaa
cmp
and
lock
aaa
adcb
xlat
outsb
sbb
andb
leave
adc
or
loop
sbb
sub
sub
jnp
sarl
xchg
sbb
arpl
xchg
mov
jns
pop
xor
rorb
add
mov
xchg
mov
ss
aad
pop
outsl
scas
lret
imul
mov
fnstcw
mov
clc
jae
pop
jl
addr16
cmp
pop
pop
lods
dec
pop
pop
scas
hlt
cmpsb
mov
xchg
jae
rcrb
lea
inc
cmp
xor
cmp
jge
jbe
or
adc
stos
inc
cmp
xchg
cli
mov
test
cmp
nop
cmc
int
mov
stos
cmpsb
lock
negl
lock
cmpsb
data16
jbe
adcl
imul
loopne
arpl
pop
adc
fcmovnb
outsl
mov
adc
xor
jnp
jnp
cmp
pop
pop
ret
out
ss
inc
push
jbe
ret
mov
in
xor
pop
repz
xor
mov
or
or
or
mov
xchg
xchg
jmp
popf
divl
and
push
and
aas
loopne
leave
mov
aam
sub
shll
iret
es
pop
arpl
inc
jo
mov
loopne
xchg
fdivl
aas
cmc
push
push
lahf
push
cltd
fdivp
push
push
call
push
jnp
mov
add
jne
mov
adc
fld
xchg
rclb
sbb
mov
jnp
mov
cmp
iret
jb
pop
clc
fstpt
fcoms
mov
inc
out
call
mov
dec
dec
dec
jge
imul
test
adc
mov
scas
aas
sbb
fnstcw
cwtl
leave
and
cmp
outsw
enter
mov
jl
push
aas
push
jl
ljmp
push
shl
pop
pusha
pushl
sbbb
mov
js
gs
mov
lret
xor
mov
cmpl
fsubrs
and
imul
mov
add
lods
rclb
mov
fcmove
xchg
lcall
cmp
push
push
je
les
cwtl
cwtl
sub
mov
call
loope
fisubrs
adc
push
movsb
push
and
jb
insb
cltd
popa
repnz
popf
add
jne
outsb
pop
mov
out
ss
clc
divb
popa
movsb
into
xor
sub
add
and
dec
aad
mull
xchg
ds
xchg
lahf
insl
mov
pop
push
or
andb
mov
ret
fldl
push
jne
lds
pop
outsb
pusha
jns
in
fsubrl
inc
mov
aam
mov
loope
mov
data16
insb
mov
add
mov
jmp
testl
scas
outsl
fstpl
mov
cltd
sti
dec
cmpsl
adc
push
aas
mov
or
bound
das
rcrb
scas
movl
jnp
pcmpeqd
lods
insl
xchg
lock
fidivl
adc
dec
mov
pushf
enter
movl
push
adc
fistl
cs
dec
mov
sbb
movl
push
jle
mov
cmp
outsl
pop
mov
cmp
pop
mov
lea
ja
insb
inc
std
roll
adc
mov
mov
pop
lret
fstp
mov
pushf
enter
mov
jbe
mov
cmc
repz
in
orb
pop
pusha
lds
pop
fxch
sbb
adc
stc
js
sub
inc
mov
leave
lret
xor
push
in
shll
jne
push
mov
and
bound
lahf
loope
inc
adc
xor
loopne
out
mov
mov
dec
sub
arpl
push
mov
js
jl
or
xchg
xchg
cltd
repnz
stos
aam
mov
cmp
out
sbb
mov
cmp
fsts
add
repnz
add
jne
xor
pop
js
cmp
ds
mov
testb
loopne
lret
icebp
sbb
popf
lret
insl
inc
imull
xchg
idivb
sub
inc
loope
xchg
add
js
clc
xchg
fists
pop
pop
mov
mov
stc
addr16
and
pop
cmp
movsl
or
cltd
and
jmp
dec
add
dec
pop
sti
les
adc
adc
adc
add
pusha
cli
mov
and
xchg
xor
mov
shrl
mov
xor
sti
aam
adcl
lahf
sbb
dec
xchg
repnz
cmpsb
mov
pop
cmp
ljmp
add
jle
repnz
repnz
or
pop
repz
push
dec
xor
xchg
cwtl
ret
xor
sub
pop
push
dec
xchg
int3
sbb
ja
daa
in
jnp
mov
jbe,pn
scas
test
das
cmc
rcll
scas
sub
sub
into
xchg
cmc
xor
sub
sbbl
out
jns
dec
push
int
test
dec
xchg
imul
bound
out
jnp
into
xor
ds
cmp
aad
fstl
mov
stc
inc
mul
pop
test
sub
dec
dec
nop
outsl
mov
mov
fwait
mov
xor
ljmp
inc
mov
jns
inc
xor
pusha
sub
clc
lds
jne
push
dec
adc
inc
shlb
dec
jne,pn
or
les
mov
fsubl
xchg
mov
inc
int
fld
mov
das
pusha
rorb
outsl
add
movsl
mov
inc
and
and
cltd
and
mov
movd
clc
sarl
popa
rcll
lret
cmp
sbb
push
mov
inc
fs
xorl
xor
mov
insb
mov
pop
fldcw
pop
push
xor
mov
fimuls
dec
push
cmp
les
sbb
sti
inc
pop
xor
dec
pushf
pop
inc
xchg
mov
ss
mov
nop
mov
in
jnp
inc
pop
loopne
or
push
stos
mov
and
and
test
mov
push
add
out
add
in
fsts
mov
push
outsb
mov
add
pop
jo
mov
lret
sub
aad
movsl
jle
cwtl
adc
push
mov
sbb
aad
inc
sub
or
in
jae
xor
xchg
adc
mov
fs
xchg
fisubrs
aad
in
push
cli
adc
xchg
mov
adc
jno
fldt
pop
nop
mull
pop
pop
jno
and
cld
inc
ds
xor
lret
das
add
aas
pop
bound
popl
and
xor
jbe
mov
xor
jb
cmp
adc
mov
es
out
mov
outsl
mov
mov
bnd
ds
push
into
and
xor
out
mov
bound
out
jp
inc
mov
xor
je
or
sbb
or
int
mov
arpl
mov
cld
push
cmpsl
jl
loopne
stc
stc
sub
inc
sub
imul
loopne
jle
lret
fs
inc
sub
fisubs
jg
movsl
in
outsb
subb
and
mov
fldl
or
mov
mov
cmc
arpl
fwait
out
sahf
pop
pushl
shrl
iret
jp
mov
loopne
inc
push
sbb
int3
jne
sub
pop
je
sarb
jb
jne
xorl
cmp
imul
pop
inc
les
cli
orl
imul
sbb
rcrl
popfw
sbb
mov
pop
mov
imul
or
ja
rcll
push
orps
bound
shl
fimull
mov
out
out
imul
roll
addr16
clc
mov
mov
sub
and
test
ljmp
sbb
xor
mov
cmp
inc
cmp
or
cmp
jge
loop
stc
les
std
lods
xchg
sti
adc
aas
in
aad
pop
notb
shll
ficoml
popl
pop
xchg
jle
cs
xchg
in
or
scas
cwtl
loopne
mov
xor
cmpsb
sbb
push
lods
int3
mov
lods
std
out
push
jge
repnz
scas
pop
cltd
adc
sbb
inc
mov
scas
aas
movsl
jo
loopne
sub
insb
dec
mov
push
xlat
xor
loopne
cmp
inc
push
movsb
loope
pop
xchg
pop
fnsave
roll
pshufw
mov
jo
mov
dec
fdivr
and
fsts
repz
mov
ret
jae
xor
ss
out
mov
or
push
jo
and
sub
jmp
jb
ds
daa
popf
insb
inc
pop
jbe
rcrb
pop
cs
imul
fnstenv
ret
mov
enter
add
insb
mov
push
mov
xchg
rep
inc
andb
add
scas
xor
adc
les
insl
sub
jmp
aas
add
xor
inc
movsl
mov
mov
add
xchg
jns
dec
cmp
lock
pop
or
mov
loope
bound
pop
pop
xchg
out
mov
mov
rcl
inc
dec
dec
dec
jmp
insl
mov
push
lods
loope
out
in
or
test
les
ret
xchg
xor
pushf
push
outsb
mov
repz
and
or
enter
jnp
lock
cmp
push
sbb
pop
mov
push
arpl
insl
dec
das
out
inc
sub
icebp
lock
and
sub
xor
sub
dec
push
cmpsl
sub
add
int
xchg
cmp
movsl
sbb
push
repz
or
dec
xor
jl
out
mov
fwait
popf
fstps
je
jae
mov
push
adcb
xor
pop
imul
adc
sbb
test
cltd
push
mov
xor
sub
jp
sbb
mov
fiaddl
jmp
xor
add
push
or
mov
pop
lahf
fwait
jle
ja
jl
sbb
lods
ret
adc
iret
out
mov
pop
or
push
and
test
or
mov
dec
stos
rol
adc
dec
lock
sbb
add
ror
stc
sahf
emms
or
jnp
popa
mov
cmp
xor
jecxz
cwtl
inc
cwtl
les
cmp
movsb
mov
imul
lahf
js
sbb
pop
jmp
arpl
imul
cmp
js
mov
add
mov
dec
mov
cli
lds
jnp
jo
shlb
or
test
int
mov
pop
div
call
xor
cmp
je
mov
lret
fsubrl
jae
dec
pop
xchg
lcall
stos
jnp
sbb
xchg
popa
psubsw
cmp
aam
add
ds
out
mov
xchg
inc
add
int
xor
cld
fistpl
test
push
shlb
imul
mov
inc
adc
xor
cli
jae
das
lret
jae
mov
xor
addr16
stc
je
fsubs
int
js
test
js
fiaddl
push
dec
or
or
mov
add
out
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
divb
mov
ds
addl
add
or
outsb
lea
add
mov
mov
repnz
loopne
xor
rcrl
cmp
xor
mov
jecxz
cs
lret
push
fcmovnb
movsb
fdivr
icebp
bound
jno
ds
xchg
mov
movsb
arpl
test
shlb
lds
sar
in
add
fdivr
push
rclb
shr
mov
or
pop
sub
fimuls
jns
mov
jg
sub
xchg
mov
sub
adc
ret
inc
rclb
bound
lahf
stc
out
not
cmp
fsubr
insl
push
jb
jne
mov
sub
es
lahf
sbb
aad
jmp
test
stos
inc
clc
fstps
pop
push
jmp
push
ret
inc
enter
and
fldt
xchg
jl
nop
roll
mov
mov
fstl
cmp
pop
cltd
lahf
int
lock
in
sbb
fmul
test
pop
mov
lret
imulb
cwtl
fs
or
jnp
cmp
pop
je
in
xchg
xchg
iret
xchg
sti
stos
sub
stos
inc
cld
aaa
dec
loop
cmp
jle
sti
insb
lods
sub
push
movsb
and
inc
test
out
rorl
cmc
add
ds
enter
out
or
rcrb
mov
aam
jmp
fucomip
cmp
mov
xchg
scas
pop
aam
xchg
jge
and
ret
popf
into
push
ror
popa
in
dec
add
pop
jae
cli
fsubr
or
rorb
sub
ret
addr16
into
push
sub
scas
sarb
ljmp
xor
sub
xchg
loopne
iret
mov
ss
add
scas
jle
mov
sbb
push
pop
jg
mov
mov
xchg
and
xchg
inc
and
inc
scas
push
je
mov
lahf
das
fadds
in
movsb
ffree
cmp
sbb
movb
add
ret
hlt
loop
add
pop
int3
or
cmp
mov
lock
mov
iret
xchg
push
adc
jnp
xor
data16
push
or
pop
decl
loopne
adc
gs
cs
mov
cmp
insl
add
dec
ss
sub
dec
out
fcmovnb
add
cmpsb
popf
out
add
mov
jae
xchg
je
mov
in
and
pop
in
lret
jnp
out
jnp
dec
and
loop
xor
pusha
xorb
mov
dec
and
in
ds
shr
pop
or
std
jae
dec
out
mov
aaa
mov
pop
mov
or
dec
inc
xor
mov
sbb
loop
lock
insl
sbb
xchg
imul
dec
data16
stos
mov
nop
aad
or
out
sub
sbb
fisttpl
pop
je
push
xor
addr16
dec
lods
sahf
inc
cmp
push
gs
cmpsb
sbb
cli
pop
push
sbb
pop
xchg
cld
pop
sbb
and
push
xchg
int3
mov
push
call
push
inc
dec
fldl
mov
cmp
outsl
jns
mov
icebp
xchg
inc
mov
add
faddl
rcll
lds
aaa
dec
push
shlb
fbld
ret
popa
arpl
mov
inc
loope
and
outsb
cltd
push
push
or
inc
cmp
sub
push
out
inc
add
popa
inc
inc
sub
xchg
in
jbe
rorb
mov
push
or
adc
cmp
lret
xor
addr16
rcl
xchg
cmpl
jecxz
mov
aad
mov
adc
pop
push
xchg
lods
aaa
xchg
mov
pop
lock
pop
jmp
call
loopne
sarb
mov
xchg
jg
repz
mov
daa
fisubs
and
cli
push
ror
mov
push
data16
push
sbb
test
cmp
mov
sbb
divl
insb
loopne
mov
fildll
xchg
pop
and
cmp
xlat
int
bound
cmpsb
pop
ds
and
mov
rcll
pusha
scas
xor
sti
mov
movsl
sub
pop
push
push
push
adc
mov
jne
mov
inc
jl
and
dec
jg
test
out
mov
daa
lods
arpl
mov
ficompl
add
stos
cmp
fwait
sub
mov
enter
cld
leave
hlt
rcr
sbb
mov
xchg
cwtl
sbbb
xchg
xor
xlat
mov
jno
or
call
call
cli
pop
loope
lea
ficompl
test
idivl
ss
sbb
push
add
cmpsb
les
fisttpll
lea
jle
imul
divb
xor
jbe
je
adcl
cmpsb
and
jnp
add
or
pop
lock
daa
mov
xor
pop
out
enter
mov
movsb
inc
add
test
inc
sub
ret
cld
add
cmp
cmp
xchg
insb
in
mov
xadd
sbb
dec
mov
sarb
inc
js
shlb
int
loopne
fisubl
jb
mov
push
push
sahf
dec
sub
inc
or
imul
pop
add
int
jae
sahf
push
inc
nop
mov
cmp
push
fldl
dec
jmp
jg
xchg
js
or
push
insb
sub
popa
imul
xchg
inc
inc
cli
cld
lods
mov
inc
inc
imul
adc
mov
mov
xchg
les
ficompl
pop
inc
ds
test
lret
push
cmpsb
sbb
iret
push
cmpsl
jmp
push
sahf
stos
pop
cmp
gs
out
or
lock
jecxz
scas
cmpsb
jge
insb
adc
push
push
sbb
sbb
lods
addr16
lret
dec
and
out
dec
enter
or
stc
xchg
inc
sbb
mov
ret
sub
adcb
mov
cmp
push
push
les
cmp
jb
sub
imul
test
jg
jbe
int
leave
mov
push
das
insl
dec
fs
add
cmpsl
inc
testl
push
cmpsl
xchg
and
nop
aaa
jp
sub
dec
sub
mov
roll
fstl
xor
xor
test
outsb
sbb
cmp
mov
add
test
movsl
dec
xorl
mov
dec
xchg
xchg
inc
rcll
mov
stos
push
push
gs
fnsave
and
rclb
bound
sahf
test
cli
insl
bound
test
jns
jae
xchg
leave
and
mov
lods
lcall
xor
mov
nop
ss
adc
cmp
jl
pop
push
cmp
aaa
aad
push
xchg
adc
xor
push
cltd
jle
jo
pop
sti
sbb
jno
enter
pushl
popf
out
mov
lds
ds
dec
add
add
push
sbb
xchg
sub
jl
fisttpll
push
das
adc
lahf
idivb
inc
js
test
insl
cltd
fstpl
movsl
cmpsl
add
lods
push
pusha
pop
movb
pop
pusha
es
push
test
inc
fidivrl
subl
dec
pop
shr
cwtl
pop
aas
lods
mov
popa
pop
jg
cmp
mov
add
repz
add
rorb
call
out
sbb
dec
sbb
pusha
and
cmp
xor
fisttpl
sarb
push
dec
fs
in
jbe
mulb
push
push
les
cmp
jno
dec
mov
add
mov
pop
jmp
sar
mov
lods
mov
mov
push
mov
in
cmp
mov
xchg
and
ret
stos
lds
push
inc
in
pop
pop
xor
mov
lret
int
rcrb
push
mov
push
sub
mov
mov
cmpsl
jnp
popa
xor
stos
adc
inc
and
sbb
cli
mov
insl
cmpsl
mov
mov
xchg
sub
cmpl
or
lret
push
adc
lods
cmp
xor
aam
mov
push
mov
jl
scas
mov
add
pop
cmp
out
arpl
fnstenv
test
sbb
add
test
pop
sub
aad
and
cmp
cmpsl
mov
mov
mov
mov
mov
outsl
fnstsw
mov
imul
dec
data16
or
adc
orl
shll
jno
popa
fmull
mov
fldenv
adcb
mov
movsl
inc
add
pop
out
xlat
cltd
insb
repnz
adc
mov
jg
subl
adc
jle
add
out
adc
dec
mov
mov
sub
xlat
test
aam
clc
pop
ffree
pop
gs
cmp
out
arpl
lea
andl
lock
xchg
scas
sbb
dec
call
push
and
xchg
and
add
shrb
scas
fdivs
mov
add
cmp
shll
popf
or
arpl
or
sbb
in
inc
mov
push
out
mov
insb
neg
xchg
aaa
jnp
test
mov
into
dec
mov
pop
test
shl
dec
mov
jno
jne
int3
sub
popa
sub
pop
rcr
rcl
imul
mov
push
enter
adc
jg
pushf
movsb
roll
xchg
sub
jg
ja
out
xchg
mov
out
jg
ret
out
pushf
sahf
xchg
lcall
push
test
sub
sbb
or
jecxz
popa
lock
xor
cmp
cld
insl
mov
lcall
lea
scas
fbstp
push
xchg
add
mov
rorl
in
adc
out
arpl
sub
out
bound
xchg
push
inc
or
data16
inc
cwtl
dec
and
lea
cs
sub
fdivp
sbb
out
addr16
sub
adc
inc
loop
hlt
adc
push
jnp
sub
add
xchg
mov
and
lods
mov
add
scas
push
loopne
push
mov
lea
ljmp
pusha
mull
ss
jmp
sbb
jmp
sub
sub
push
lcall
fldcw
sub
pop
fs
sub
xor
out
adc
aaa
pushf
xchg
bound
push
lods
repz
lea
pop
test
lock
jl
ret
or
aad
icebp
cmp
inc
dec
push
mov
lods
data16
int3
fstps
mov
adc
enter
adc
adc
add
or
xchg
pop
out
cmc
and
shrl
dec
push
sti
jne
mov
mov
cmp
pop
and
test
mul
cmp
fcmovu
lcall
dec
fisubl
std
leave
arpl
out
jmp
cwtl
dec
mov
pop
outsl
pop
sbb
mov
push
xor
shll
hlt
mov
add
gs
scas
orb
xor
pop
inc
xor
or
movb
dec
dec
daa
jecxz
repz
ja
pop
sub
pop
insb
or
arpl
sub
imul
hlt
sahf
jmp
fs
dec
inc
jecxz
push
jle
movsb
das
shr
jnp
mov
loopne
inc
dec
inc
mov
aad
sbb
xor
in
push
pushf
repnz
xchg
shlb
push
jmp
icebp
mov
sti
aas
dec
shlb
cmp
jae
clc
pop
push
insl
aam
je
in
jo
push
and
fucomi
test
and
lods
aam
jl
sub
add
es
mov
xor
mov
int3
stos
sub
mov
jb
push
jle
or
out
fidivs
outsl
imul
out
popf
xor
shl
mov
jl
cmp
or
push
dec
scas
xchg
rcrb
inc
adc
sbbb
cwtl
and
jp
es
cmc
mov
jle
push
mov
iret
add
mov
adc
lcall
jl
pushf
cmpsl
xlat
or
fidivrl
mov
mov
xor
jge
outsl
mov
dec
xor
in
jno
jecxz
adc
shl
dec
fidivrl
sbb
pop
inc
std
nop
pop
sarl
imul
jae
mov
fisttps
inc
movsb
mov
int
and
pop
mov
mov
cli
push
dec
cld
push
js
xlat
fisttps
jno
mov
jae
mov
mov
mov
or
pop
jg
ds
hlt
insb
orl
add
jge
mov
data16
mov
fidivl
xchg
cmpsl
clc
fsubs
mov
sub
push
popa
lods
jno
shlb
sbb
fcompl
std
rorl
fdivrs
lods
js
out
push
sti
je
adc
clc
dec
pop
push
dec
stos
pop
dec
xchg
jnp
int3
or
push
mov
sub
daa
mov
test
ret
jno
notb
std
jb
int
enter
cmp
jge
gs
popa
jno
pop
jne
mov
pop
dec
jmp
sub
sbb
fidivrl
add
jne
mov
enter
fadds
in
dec
mov
test
sti
xor
add
and
orb
cmp
lret
insl
push
rcl
fstps
aam
fwait
pop
cmp
push
and
iret
imul
adc
sbb
sarl
std
mov
push
push
pushf
cli
xlat
push
adcb
cmp
insl
popa
test
lods
adc
push
out
fdivp
dec
mulb
mov
adc
mov
push
xchg
sub
adc
push
movsl
adc
ret
jg
jae
repz
mov
lds
push
fiaddl
js
lcall
dec
and
jne
jae
rcll
jge
clc
gs
or
je
test
shl
jge
inc
inc
sahf
mov
add
push
lods
loope
mov
and
cli
add
sub
sbb
test
ds
dec
mov
jle
mov
inc
xor
jns
popa
cli
xchg
jb
mov
cs
addr16
adc
addb
cmpsl
push
lcall
jmp
lret
stos
xchg
or
iret
or
fldt
jl
lea
sub
push
in
out
test
xchg
pop
pop
sbb
es
sti
les
dec
or
inc
sub
pop
rcll
leave
add
xor
hlt
inc
and
push
test
cwtl
hlt
add
popa
lock
push
jae
or
outsb
sbb
pop
mov
bound
xchg
mov
bound
or
fdivrs
lea
sbb
push
popf
stos
push
daa
xchg
push
fldenv
and
jnp
pop
inc
or
ds
cltd
div
cmp
das
add
ficompl
mov
mov
mulb
mov
dec
mov
mov
sub
lea
jecxz
lock
ljmp
cmp
mov
ret
push
jge
notl
fcoms
pop
out
mov
into
test
fcmovu
rcrl
add
dec
sub
xor
push
rolb
mov
mov
out
jbe
psubd
add
mov
mov
mov
or
pop
push
aaa
mov
adc
add
pop
ret
fadds
xor
lret
outsb
jmp
adc
pop
cltd
xor
repnz
test
push
pop
adc
inc
mov
repnz
pop
mov
xor
inc
gs
ds
das
rclb
mov
adc
mov
dec
lds
mov
enter
aad
mov
inc
cmpsl
inc
xchg
sbb
and
pop
popa
in
mov
inc
aad
test
xor
xor
pop
movsb
adc
sub
dec
or
jge
push
testb
push
hlt
aas
ficoml
pusha
cld
sbb
call
cmpsb
test
insb
scas
aaa
fldl
fcmovu
sub
ds
cmp
les
xor
mov
shrb
mov
test
icebp
xor
loopne
in
movntps
cmp
inc
mov
ret
xor
inc
insl
stos
rolb
lret
int
pop
lds
stos
fucomp
push
xchg
shrb
xchg
dec
lahf
fs
jne
push
insl
aad
cmp
ja
dec
cmp
pop
mov
call
and
xchg
push
shlb
sub
loope
lods
out
lcall
and
xor
pop
fnstcw
insb
mov
sahf
dec
mov
mov
repz
push
or
loop
add
mov
popa
sbb
lret
and
and
xor
out
rorl
sbb
insl
push
mov
cmpsb
mov
sub
loop
fisubrs
sub
and
cli
mov
testb
add
loope
dec
insb
ret
and
push
sbb
dec
xor
mov
lret
mov
pop
dec
cmc
xlat
cwtl
fisubs
adc
ljmp
in
rolb
or
adc
dec
cmp
dec
insb
out
xchg
das
pop
pop
or
jle
xchg
inc
inc
cld
imul
fnstenv
ds
push
push
push
mov
cmp
dec
dec
or
mov
push
out
lret
jg
or
pop
lahf
fwait
jg
mov
and
jno
lahf
mov
jmp
lahf
jnp
pop
mov
jg
sub
mov
xchg
sarb
lcall
inc
xor
inc
shr
xchg
inc
and
loopne
pop
pushf
into
inc
xor
loop
add
test
push
fldt
fbstp
jb
jo
mov
fisttpl
pushf
loope
lods
add
sub
sbb
cld
sbb
cmp
and
imulb
jmp
dec
add
notb
cltd
and
pop
mov
sub
fcmovb
sbb
fnstsw
and
insl
outsb
shrl
sbb
jge
imul
sbb
loope
lods
aad
pop
or
inc
xchg
repnz
jp
fstpt
jae
ss
imul
cmc
repnz
jae
push
cmc
xlat
icebp
cmp
jno
shrb
lret
jge
mov
mov
in
jge
jbe
pop
cmp
mov
fmull
cli
mov
vmwrite
test
pop
inc
cltd
shlb
pop
sub
repnz
inc
call
cld
aam
add
inc
pop
or
xor
cmpb
mov
or
mov
iret
sahf
adc
cmp
inc
cmp
adc
mov
cmp
push
mov
out
pop
mov
rorb
jno
lods
jno
push
sub
iret
xchg
les
sbb
ljmp
cmp
inc
jg
add
and
mov
jae
test
movsl
out
popf
in
mov
xchg
fmuls
sub
fstpt
xchg
jmp
adc
sub
loopne
fsubl
jg
add
sub
jne
fldcw
inc
outsl
lcall
xchg
mov
mov
dec
add
fnstsw
rclb
out
or
mov
aad
lods
fucomi
leave
jle
xchg
add
pop
pop
sub
jo
xchg
icebp
mov
cld
xor
in
insb
outsb
es
movsb
sbb
cmp
xchg
jnp
dec
cltd
int3
jnp
jo
jp
pop
inc
jbe
jp
xchg
or
loopew
ffree
shl
jnp
pop
cmpl
mov
inc
inc
ret
pushf
pop
mov
insb
sub
inc
mov
mov
loopne
cli
or
shll
mov
cmp
loopne
dec
aam
or
dec
lock
daa
push
add
lds
pop
push
ret
les
jg
push
das
inc
mov
pcmpgtb
mov
jo
loope
or
jp
loopne
scas
push
mov
mov
xchg
mov
push
nop
cmp
stos
sub
and
mov
mov
sarl
sub
les
rorl
mov
imul
lcall
jmp
bndldx
sbb
mov
cmp
les
inc
pop
fdivr
clc
out
test
subl
jecxz
adc
cld
jecxz
inc
cld
mov
mov
rclb
std
push
rorl
mov
lock
leave
gs
movsb
rclb
dec
stos
sbb
pop
xor
sbb
inc
jl
adc
aaa
pop
negb
push
out
aaa
int3
ja
inc
stos
je
mov
mov
in
xchg
or
test
dec
xchg
sub
mov
cli
jmp
xchg
outsl
mov
or
mov
add
in
mov
or
cltd
adc
and
addr16
fmull
das
inc
dec
rcl
or
pop
push
ss
cmc
pop
jb
sub
sbb
test
mov
inc
fnstsw
sub
mov
push
mov
mov
add
xchg
outsl
lret
repz
inc
movsb
test
pushf
sub
pop
add
or
xor
popf
mov
push
es
fdivp
sti
xchg
sub
sbb
stos
push
xchg
xchg
cmp
lods
push
loope
sbbb
popa
mov
or
stos
xchg
and
add
dec
lcall
cltd
jle
leave
dec
jge
inc
mov
sbb
mov
mov
test
jmp
mov
sub
mov
adc
das
mov
pop
sbb
push
mov
cmp
cmp
sub
dec
sbb
in
pop
mov
push
in
idiv
loopne
sahf
add
lea
repnz
jae
lods
jp
pop
push
jecxz
jb
fs
bound
push
lods
jno
cmpsb
lcall
fimull
push
adc
sti
jg
idivl
enter
jmp
push
test
mov
nop
dec
jae
xchg
movsl
or
sub
sub
pop
hlt
mov
jecxz
dec
cwtl
and
mov
lcall
lahf
sub
inc
jmp
pop
adc
sbb
inc
lods
adc
or
xor
repnz
mov
loopne
mov
xchg
cmp
lcall
dec
and
pop
leave
lret
sti
fwait
jns
das
out
push
repz
push
inc
push
jo
jbe
das
in
xchg
fsubrp
addb
fadd
scas
sub
out
lock
rcrb
sarb
push
xor
fwait
adc
xchg
pop
push
pop
sbb
cmp
xchg
sbb
nop
and
fs
aad
pop
push
fnstenv
add
leave
jnp
sbb
mov
outsb
and
imul
or
pusha
js
ljmp
pop
fwait
jecxz
push
ret
jo
dec
or
pop
xchg
fistpll
adc
adc
fsubrp
push
pop
add
dec
mov
leave
sub
or
jmp
or
adc
addr16
xchg
sbb
adc
push
in
inc
gs
gs
push
int
popa
xor
stos
mov
adc
lret
in
ss
sub
cmpsl
mov
or
ss
pop
xchg
pushf
mov
pusha
icebp
cmp
sbb
or
out
repnz
inc
fldt
int3
iret
add
popa
xchg
push
inc
mov
insl
add
scas
jl
ja
in
mov
mov
jo
ss
aam
mov
push
out
push
mov
imull
cmp
jmp
out
dec
fidivrs
inc
inc
xor
insl
mov
cmovb
push
jae
scas
jne
xor
out
std
enter
sub
adc
or
mov
fisubs
inc
lock
pusha
dec
sub
sub
sub
push
fisubs
push
shl
testb
sti
cmpsb
pusha
movsb
adcl
push
rcrl
and
out
fdivs
fsubp
xchg
lock
stc
sbb
pop
dec
popa
push
inc
pushf
adc
add
cmpsb
fsubrp
les
jno
adc
clc
out
cli
jmp
mov
inc
sbb
mov
js
add
adc
fisubs
cmpsb
int
push
insl
push
cmc
sbb
movsl
cmp
push
sub
xor
mov
sub
inc
adcl
sbb
lahf
shlb
jg
sub
sarb
in
cmp
xchg
je
dec
cmp
daa
lods
lds
inc
jecxz
jb
mov
xchg
sub
jecxz,pn
daa
cmp
adc
xor
or
cmp
xchg
adc
and
cmp
loopne
push
inc
or
mov
in
out
add
mov
loopne
sbb
stos
orb
bound
icebp
or
xchg
std
hlt
xor
inc
mov
xorb
jp
add
xchg
fimull
pop
push
out
mov
sti
aam
jb
movsl
pop
shrb
dec
push
push
jmp
adc
ret
dec
js
dec
adc
jb
inc
ljmp
int
filds
fs
int3
out
outsb
or
xor
leave
es
call
loop
gs
push
std
sbb
popf
lods
es
es
ret
hlt
jle
inc
jne
insb
fsubrs
add
add
rcl
lret
xlat
cmp
fstl
test
inc
and
sub
dec
dec
imulb
mov
ret
loope
mov
add
xor
stos
inc
outsl
sub
clc
xchg
nop
pop
gs
pop
jno
outsb
bound
andb
xchg
sub
dec
nop
mov
adc
mov
sub
iret
add
inc
sub
test
sub
js
lret
and
movsb
push
popf
es
mov
in
add
shll
addr16
imul
or
add
rcr
insb
jg
mov
inc
xlat
fs
inc
loope
fwait
pop
test
xchg
je
je
or
mov
lds
cmp
xchg
iret
mov
fdivl
movsl
xor
int
jmp
xor
inc
sub
enter
adcb
or
add
mov
movsb
test
xchg
cmc
repnz
in
mov
mov
fnstcw
arpl
mov
mov
ds
dec
test
push
lods
cmp
mov
nop
mov
das
jne
cmpsl
mov
cmp
cmpsl
cmp
and
loop
shrb
xchg
repz
test
lret
mov
xor
pop
or
sbb
pop
movb
in
and
rorb
mov
subl
pop
sub
inc
xor
in
test
and
adc
int3
idivl
sbb
dec
jl
outsb
fmulp
test
sarb
and
lcall
fidivrl
xchg
cmp
in
cmpsb
jns
test
lea
cwtl
mov
sbb
cltd
and
outsl
jp
push
or
call
dec
sbb
bound
add
lds
xchg
ds
inc
push
leave
rcrb
lahf
mov
xchg
push
sbb
mov
jge
icebp
psrlq
andb
fwait
jecxz
mov
mov
roll
push
mov
xlat
cmpsb
mov
or
add
negl
fs
icebp
sar
pop
punpckhbw
mov
adc
cli
imul
xchg
and
insl
cmp
call
lret
cwtl
fstpl
rclb
out
mov
repz
jns
js
fidivrs
jge
push
aad
push
push
das
test
mov
cli
aaa
fwait
movsl
orl
in
push
or
jae
movl
scas
mov
dec
mov
add
mov
pop
push
stos
in
jo
cmpsb
pop
push
arpl
loope
push
mov
jbe
ret
mov
xor
xlat
jne
lock
out
or
js
push
mov
not
mov
jne
std
in
stos
push
fldenv
fwait
push
fldl
mov
add
adc
mov
leave
fwait
or
dec
mov
lock
icebp
inc
sub
sub
or
inc
or
jo
bound
xor
xlat
incl
jg
dec
jmp
xor
test
jp
inc
jb
pop
lahf
mov
adc
xchg
push
push
movsb
push
fmull
xchg
adc
arpl
loop
cmp
add
pop
jg
ret
test
rcll
jp
mov
shll
sti
inc
leave
add
inc
sub
fldenv
lods
push
dec
mov
xchg
xchg
push
push
xchg
mov
aad
xchg
mov
xor
iret
or
sub
je
add
fstps
notb
in
mov
jge
mov
in
aas
in
cli
leave
xchg
enter
sbb
out
sub
insl
andb
mov
or
jnp
jmp
sahf
int3
jno
mov
inc
inc
loope
lods
mov
jg
mov
xor
push
loope
jp
and
inc
sbb
sbb
mov
hlt
xor
mov
ss
jb
sub
or
rcl
daa
inc
cli
dec
call
test
ja
push
test
adc
movsb
cmp
pop
sbb
dec
add
into
push
lea
mov
lods
sbbl
sub
pop
cmc
in
cmp
popf
dec
xchg
and
pop
scas
roll
mov
ret
mov
mov
frstor
push
outsb
je
rcrb
push
xchg
dec
insl
int3
popf
sub
xor
add
sbb
leave
test
jecxz
loop
ret
repnz
popf
gs
cmp
lock
imul
sub
test
inc
mov
inc
scas
jo
lods
aad
sub
or
cmpsb
out
xchg
out
push
fcmovbe
pop
add
push
or
jecxz
clc
xchg
lods
leave
cmp
repnz
jo
cmp
mov
cmp
fimull
jmp
arpl
and
mov
rolb
mov
mov
gs
insl
inc
mov
xorl
inc
sti
sub
movsb
jne
jmp
lcall
fildll
xchg
push
inc
std
sahf
out
lods
cmc
int3
aas
arpl
orl
or
int
xchg
cmp
les
pop
dec
das
and
push
gs
push
push
lret
add
repnz
outsl
cmpsb
mov
push
fdivrs
loop
shr
in
jnp
cmp
inc
xchg
inc
icebp
push
orl
call
int
inc
sahf
jbe
sarl
cmpsb
jnp
sub
push
js
lds
ss
and
jmp
int3
lcall
push
adc
clc
neg
push
and
mov
into
xchg
inc
int3
outsb
sub
lahf
rolb
lahf
mov
inc
push
addr16
rorl
dec
mov
hlt
add
mov
fstpl
pushf
nop
xchg
push
cmp
xchg
push
int3
das
push
stos
xchg
scas
lds
inc
or
add
sbb
mov
and
iret
cmpsb
subl
inc
xor
sub
leave
fldcw
pushf
dec
and
pop
in
mov
loopne
popa
jl
fsubs
pop
xor
ljmp
test
pushf
inc
inc
fstpt
fimuls
cmp
sbbl
jle
ds
dec
movsb
mov
mov
out
ds
push
cli
lods
aaa
outsl
inc
mov
xchg
negb
js
and
mov
enter
cmpsl
xor
inc
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
and
jne
pop
mov
popf
mov
xchg
fcoml
xchg
ja
jno
adc
test
lahf
ja
shll
outsb
pop
add
xor
int3
aad
sbb
repz
mov
sub
jmp
mov
dec
je
sahf
push
popa
mov
frstor
addr16
sub
in
push
das
xchg
neg
ljmp
mov
stc
dec
pusha
or
jno
in
xchg
add
in
arpl
and
add
fsubrl
add
cwtl
test
inc
push
out
mov
or
pop
lods
enter
lea
adc
inc
cmp
push
xor
cmpsl
or
sti
or
pop
sbb
mov
popl
daa
dec
mov
xor
incl
fistl
aam
loopne
mov
repz
xor
push
fmuls
nop
xlat
add
sti
scas
and
add
rolb
inc
pop
das
push
aad
popa
jle
lcall
hlt
jmp
cli
dec
mov
aaa
mov
sysexit
add
pop
incb
lret
or
test
lea
lods
jns
inc
jl
sbb
sbb
fisttps
insb
xchg
mov
pop
mov
pusha
jno
xor
cwtl
cmp
xor
mov
es
sbb
das
mov
pusha
mov
xor
fstpt
les
fidivl
mov
mov
daa
test
mov
cmp
int3
jg
xor
test
xor
or
xchg
mov
outsl
mov
xlat
jbe
int
mov
pop
mov
sub
rclb
dec
jg
fwait
jae
sar
dec
ret
insl
mov
frstor
jns
sbb
mov
inc
push
mov
daa
testl
adc
cmpsb
sahf
ja
jnp
dec
xor
gs
add
ss
jl
push
cmp
in
leave
add
stc
dec
pop
dec
divl
pushf
xchg
cmpsl
and
push
or
test
inc
inc
mov
fbstp
sub
fimull
loop
push
fs
addb
jge
outsl
inc
ret
jbe
mov
jne
jmp
sub
movsl
sbb
int3
jecxz
into
pop
mov
fwait
cmp
adc
dec
loop
dec
cli
cmp
pop
je
shl
fstpt
pop
push
arpl
adc
rorb
xchg
sbb
sub
mov
fstps
insl
loope
repnz
sub
int
and
inc
jle
sti
add
flds
lea
fs
aaa
cmp
js
das
and
mov
icebp
add
movsb
sbb
jbe
imul
adc
lret
xchg
mov
subl
push
xchg
inc
jae
scas
int
mov
dec
leave
popf
xchg
adc
xor
sub
xor
repz
fldcw
jno
outsb
iret
bound
in
push
inc
iret
out
sub
popl
xchg
or
gs
roll
sub
cmpsb
inc
and
pop
add
mov
jno
aam
icebp
xor
aaa
and
test
mov
aad
outsl
shll
pop
stos
call
movsl
in
cmpsl
dec
pop
lret
dec
xor
adc
idivb
orb
lods
subl
loope
mov
sub
addr16
mov
mov
das
into
outsl
xchg
subb
scas
xor
stos
push
lahf
cmp
movsl
bound
push
in
in
mov
mov
aad
leave
hlt
cmpsb
imul
adc
testl
xchg
clc
adc
aaa
sbb
movsb
js
pop
dec
inc
mov
mov
fwait
imul
leave
popf
pop
cmpsl
stc
fidivrl
aam
xchg
pop
pop
sub
rorb
and
jbe
and
mov
or
or
jbe
jmp
sti
addr16
dec
mov
popf
jbe
pop
jp
sub
fstpt
es
xchg
popa
ss
mov
nop
push
add
movd
jbe
test
dec
cli
mov
js
xchg
mov
push
adc
ljmp
mov
cwtl
inc
movsb
mov
les
lret
jle
xchg
fwait
rcr
adc
stc
test
sub
pop
loop
mov
sub
pop
adcb
pushl
add
adc
xor
mov
insl
pusha
cs
andl
sub
cmp
rol
inc
mov
push
rcrl
fisubrl
mov
dec
mov
aaa
mov
enter
mov
xchg
pop
add
inc
jecxz
insl
pop
negl
cmp
enter
jmp
mov
push
test
mov
push
out
dec
repz
mov
push
dec
das
xorl
pop
fisubrl
inc
les
fstl
and
aaa
dec
stos
xor
bound
mulb
mov
mov
sub
mov
icebp
push
loopne
lret
sub
pop
inc
lahf
push
scas
cmpsl
mov
mov
fs
out
xchg
or
aam
sbb
nop
popf
repnz
lods
jmp
int
mov
stos
and
and
pop
jns
pop
data16
int3
notl
push
addr16
fistps
into
sbb
fcoml
repnz
sub
aad
sbb
in
dec
ret
cmp
ja
in
ret
pop
cltd
mov
sub
push
dec
or
xchg
mov
cmp
addr16
popa
ret
xor
imul
into
xchg
mov
and
popf
sub
inc
fsubl
lods
mov
xchg
stos
addl
out
dec
incb
outsb
hlt
mov
in
hlt
test
push
movsl
loop
ficompl
inc
ds
call
das
or
dec
call
cs
punpckhwd
lods
jbe
les
out
add
xor
fstpl
stc
jg
mov
jb
inc
cmp
and
cmp
cwtl
add
ja
mov
imull
sbb
mov
push
xor
push
ljmp
ret
lds
enter
add
add
jne
gs
stos
jne
fisubl
mov
pop
rcl
clts
mov
stos
out
inc
push
pop
in
jnp
mov
lret
jnp
push
icebp
fcoml
lock
loope
mov
mov
dec
movsl
ret
mov
gs
xor
adc
cmpsl
add
cs
dec
lret
leave
or
out
aad
mov
ljmp
faddl
les
repz
cltd
call
mov
inc
inc
stos
rclb
pop
pop
ret
cmpsb
inc
dec
mov
lahf
dec
addr16
test
xchg
pop
cmp
cmp
test
addr16
das
insb
mov
mov
mov
negl
popf
xor
les
aam
push
pop
mov
add
pushf
repz
popl
pop
sbb
mov
xchg
adc
fsubrp
xchg
jecxz
out
pushf
sub
sbb
mov
cmp
push
mov
in
and
fnstcw
dec
sbb
int
inc
shlb
outsb
or
add
jnp
or
sti
sub
loope
scas
ds
ficoml
sbb
jnp
daa
or
mov
xor
dec
test
fisubl
push
out
jne
pop
dec
inc
ss
add
pop
daa
jns
dec
jns
ljmp
daa
ja
and
mov
hlt
xchg
jp
data16
push
mov
mov
xchg
xor
iret
ljmp
ljmp
jae
mov
daa
stos
or
aad
lock
sarl
or
lret
dec
mov
cmp
jecxz
mov
mov
clc
ss
jno
add
sub
mov
and
adc
enter
sbb
mov
ss
mov
mov
je
in
sti
sbb
push
xchg
jb
ret
dec
test
incb
mov
mov
and
cmc
sarl
mov
or
push
in
or
mov
outsb
jecxz
dec
xorb
sub
dec
es
sbb
pop
lahf
sbb
sub
outsl
ljmp
sarl
push
in
adc
mulb
bound
sbbl
mov
icebp
call
sbb
sbb
cmp
imul
push
or
lods
adc
dec
lahf
inc
sbb
outsb
fsts
cli
push
into
leave
stc
repnz
adc
fs
lret
outsl
std
push
ja
push
inc
aad
and
cmp
mov
mov
cmc
fdiv
cld
js
cmp
in
pop
adc
dec
test
or
sbbb
ljmp
scas
ljmp
xor
jmp
dec
lretw
mov
leave
mov
es
xchg
pop
xchg
xor
rcrl
add
addl
or
mov
lock
xor
in
add
mov
adc
test
rol
in
xor
or
out
push
sti
testb
out
sbb
adc
sbb
cmc
adc
sbb
mov
stos
push
jae
cld
jmp
test
call
leave
jmp
mov
lock
ret
inc
dec
daa
inc
shll
mov
shlb
insb
test
mov
mov
shrb
dec
push
mov
call
mov
push
sub
jge
daa
shr
and
inc
jmp
jmp
mov
pop
les
imul
and
scas
sbb
dec
adc
test
fistl
adc
sbb
out
add
or
gs
jbe
jb
xchg
jb
mov
dec
and
cli
fs
mov
mov
mov
bound
sub
inc
mov
mov
iret
notb
imul
nop
insl
cs
popa
inc
test
ja
pop
mov
aas
scas
sub
cmp
cmpsb
sub
dec
inc
fdiv
lret
les
scas
or
xchg
sub
jo
rorl
sbb
jne
lea
fnstenv
iret
push
loopne
add
adc
loopne
xchg
pop
inc
repz
inc
jno
lods
into
dec
orb
xchg
mov
loop
sbb
pop
or
lods
pop
push
fs
jecxz
ret
mov
das
jg
imul
outsl
pop
xchg
or
mov
mov
sti
loop
jge
xor
xchg
dec
and
scas
jle
sub
cmpsb
orb
in
aas
imul
and
ljmp
jmp
sarl
popw
hlt
or
psrld
cmpsl
in
neg
sbb
mov
mov
fldcw
les
roll
mov
mov
xchg
arpl
mov
in
xchg
test
pop
xchg
cmc
lahf
or
push
cltd
aad
lock
fstps
fsubrp
fcoms
dec
jno
shrl
or
mov
mov
push
cmpsb
add
adc
sub
sub
adc
stc
or
xor
movsl
jae
aas
movsl
loope
push
xchg
into
mov
add
jmp
lds
stos
xchg
test
test
leave
push
arpl
xor
sub
scas
jmp
jp
test
dec
jb
mov
cwtl
outsb
lcall
inc
xchg
mov
add
adc
or
testb
les
sbb
mov
jg
xor
cs
aaa
mov
scas
sub
inc
jecxz
iret
xchg
jge
mov
in
loopne
mov
push
shlb
inc
test
movd
or
xchg
stos
or
sub
mov
mov
or
mov
mov
inc
jb
sub
fistl
frstor
loop
test
pop
popa
dec
push
mov
ffreep
pop
into
adc
mov
pop
roll
or
repz
and
mov
xchg
xchg
fiaddl
push
pop
fnsave
cmpsl
or
sahf
imul
lods
cltd
test
adc
out
jle
adc
mov
cmp
cmpsl
push
sti
rcl
idivl
mov
pushf
mov
mov
mov
fisubrs
jno
jecxz
ljmp
mov
dec
lods
shlb
mov
test
mov
inc
cmp
mov
sbb
xor
mov
sub
in
dec
cmpsb
cli
fsts
push
aam
pop
sub
scas
lcall
jmp
sahf
cmp
movzbl
or
pusha
xchg
mov
pop
cmpsl
subl
dec
add
jl
push
cmp
out
mov
lds
lods
sbb
movsb
cmp
imul
or
or
xlat
push
jle
push
bnd
fcomp
cmp
sbb
jge
fcoms
mov
outsl
pop
les
adc
out
dec
int3
mov
bound
popa
rcll
push
je
dec
fcompl
sub
pop
shl
xor
dec
mov
rcll
or
cmp
cld
inc
jnp
ror
ja
mov
mov
daa
pop
jnp
cwtl
scas
jbe
enter
dec
adc
xor
mov
xchg
push
ret
js
jo
fld
ljmp
push
repz
out
ss
xor
pop
xor
sub
fcmovb
popa
sub
jmp
fadds
insl
push
sbb
mov
and
push
and
loope
sub
dec
push
mov
adc
frstor
mov
pop
jge
cmp
insl
sbb
sub
add
divb
cmp
popa
outsl
push
lret
adc
mov
mov
add
mov
pop
or
dec
pop
sub
scas
stos
insb
ljmp
mov
fsubs
rorl
lret
jo
mov
push
inc
out
std
sub
rcr
cli
orb
lcall
dec
mov
stos
gs
movsl
or
xchg
add
mov
clc
loop
sub
add
pop
push
movsw
lcall
push
mov
push
lock
lea
clc
jb
mov
insb
xorl
jmp
mov
xchg
or
fwait
roll
mulb
scas
push
inc
out
jp
stos
dec
jnp
jge
jnp
sub
roll
mov
fmuls
aaa
ret
cli
add
pop
cmp
daa
shlb
dec
xor
loop
xor
push
fsts
icebp
mov
cli
jl
adc
dec
inc
add
inc
test
pinsrw
cmc
mov
insb
mov
out
add
movb
mov
hlt
mov
or
pop
adc
xchg
ret
aaa
cld
add
das
daa
nop
in
aad
clc
pop
int
outsl
and
addr16
inc
inc
repz
jne
cld
xor
push
jno
inc
call
cvtps2pi
cmp
add
orps
xchg
jge
inc
insb
xor
in
sbb
pop
and
jle
push
cmc
into
sahf
cmpsb
sub
das
inc
repnz
inc
sti
clc
cmpl
mov
out
out
cmpsl
xor
push
pop
andl
enter
cwtl
mov
decl
and
cmp
add
dec
cwtl
je
ds
push
adc
lds
outsb
gs
mov
pop
xchg
mov
cmp
fisttpll
movl
fucomi
and
in
inc
popa
or
ret
lods
xchg
imul
add
ret
xchg
cmp
ja
subl
sub
mov
mov
and
add
data16
lds
mov
xor
stos
push
xchg
dec
add
aad
dec
cld
or
rorl
iret
mov
stc
shrb
dec
jnp
in
push
cmpsl
shr
rclb
in
add
shlb
xchg
or
scas
push
aaa
and
fidivrs
movsl
fcompl
iret
ljmp
adc
adc
pop
or
mov
in
mov
out
dec
xor
fwait
mov
sub
mov
leave
rcrl
fcmovbe
cltd
mov
jae
add
jne
inc
outsb
sbb
cmovbe
aad
sbb
ret
test
or
enter
repnz
pop
inc
fidivrl
dec
enter
dec
enter
push
dec
and
dec
lds
shr
pop
cltd
jmp
add
mov
push
push
frstor
push
push
movsl
cmc
xchg
aaa
xor
add
lret
or
scas
pop
mov
mov
lods
aad
loopne
das
lods
dec
ljmp
push
arpl
or
mov
sbb
push
dec
mov
inc
std
divb
xchg
jne
sub
fwait
sbb
jecxz
and
push
mov
sbb
test
cltd
pusha
jnp
into
imul
icebp
in
xchg
in
pop
sub
addr16
jnp
and
mov
bound
idivl
rcrb
xorl
repnz
push
mov
push
sub
in
xchg
and
inc
pop
mov
out
lds
repnz
mov
mov
or
pop
push
adc
jle
push
sub
push
stos
or
mov
xchg
inc
loopne
sahf
call
shll
cwtl
inc
repz
add
outsl
xchg
subl
enter
sub
adc
mov
mov
mov
in
inc
xor
int
push
in
jns
inc
mov
fldcw
cld
push
inc
sub
push
movsl
andb
fwait
jmp
movsl
inc
sbb
shrb
fsubl
insb
mov
and
and
adc
push
popl
out
je
or
pop
aam
xchg
lea
sbb
push
cmpsb
jg
icebp
rorl
into
jecxz
add
nop
andl
push
dec
arpl
out
mov
in
hlt
push
pusha
leave
xchg
lcall
mov
cltd
es
repz
pop
xlat
push
sbb
lret
pusha
lods
jno
sbb
icebp
pusha
sub
dec
pusha
cmp
push
je
dec
and
nop
pop
std
jmp
popa
sub
xchg
in
stos
test
subb
outsl
es
pop
push
rol
pop
mov
mov
and
xchg
and
in
mov
cmp
xor
adc
mov
mov
dec
pop
add
movsb
dec
adc
arpl
addl
mov
pop
addr16
aas
jno
pop
pusha
xor
cs
les
imul
and
xor
pop
out
or
and
lcall
xorl
push
aas
or
jmp
mov
sub
xor
ds
inc
aam
pop
lea
or
or
ljmp
jbe
movups
cltd
pop
aaa
and
push
scas
cmp
inc
aam
fnstsw
adc
push
inc
or
mov
jno
cltd
test
jo
divl
hlt
dec
fisttpl
scas
out
adc
inc
jg
add
cltd
mov
popa
mov
loop
pop
ffree
inc
xchg
adc
movsb
stc
aam
xchg
lcall
push
mov
clc
xor
fbstp
addl
dec
jge
add
lea
dec
jns
lret
mov
sahf
add
insb
int
adc
push
lods
sub
jo
xchg
jne
pop
aad
lret
cltd
cwtl
and
outsl
lods
jecxz
daa
inc
and
add
push
pushl
inc
int3
imul
sub
lahf
imul
add
mov
inc
xor
lret
test
push
insl
ret
shr
adc
pop
in
sub
mov
lret
lods
movsb
ficoms
xchg
repz
daa
jne
mov
and
xchg
repz
daa
push
lods
cs
jl
test
cmp
stos
testl
mov
fidivrs
dec
stos
sbb
call
enter
push
cmpsb
push
or
aas
sbb
insl
or
shll
pop
jmp
or
aas
pop
imul
les
jne
mov
aas
jns
push
out
inc
divl
cwtl
bound
cltd
adc
cltd
jle
aaa
imul
and
lcall
leave
loope
std
icebp
mov
leave
add
shll
pop
adc
je
lcall
push
hlt
mov
aad
cmp
adc
lret
cmp
pop
and
sub
dec
jg
in
dec
dec
fcoml
lret
mov
adc
rclb
mov
pop
add
movsl
mov
leave
sub
sbb
sahf
mov
xchg
adc
dec
xchg
jecxz
lcall
fldt
ret
arpl
xlat
mov
push
fwait
and
push
jne
xchg
shrl
jp
fsts
cwtl
cmpsb
or
mov
in
sbb
push
enter
mov
jl
jge
shl
sti
push
sub
repnz
clc
dec
scas
lret
mov
lea
inc
movsl
and
ljmp
push
cmp
pushf
dec
stc
cmp
add
rorb
sub
adc
xor
mov
lock
lret
push
jecxz
lret
inc
pop
xlat
into
fsts
ret
adc
or
mov
dec
in
mov
ret
mov
mov
dec
repnz
or
lret
dec
sub
mov
push
outsb
xlat
mov
push
ljmp
gs
movsb
or
mov
mov
pusha
repz
push
push
lcall
ds
call
ja
xor
insl
and
xchg
popf
push
loope
add
push
stos
add
mov
ss
dec
adc
adc
pop
test
xor
xor
loop
push
dec
jg
push
sti
mov
push
fidivrl
pop
sahf
les
daa
loop
das
sub
mov
sti
jp
movsl
and
add
cmp
add
xor
cltd
add
fcoml
rcl
and
mov
sbb
daa
aas
mov
sar
jmp
imul
ficoms
or
mov
fistl
lcall
mov
add
sub
mov
mov
or
movsb
mov
dec
in
jbe
xchg
pop
inc
aaa
mov
cmpxchg
adc
jle
adc
stos
jge
xor
mov
fstp
loop
js
and
subb
sub
mov
jo
add
pop
or
stc
sbbb
mov
mov
mov
iret
fimull
sub
jae
sbb
cmp
sbbb
sbb
push
add
lcall
fdivs
sub
fisttpll
lods
inc
mov
lock
sub
lahf
pop
sub
xchg
adc
or
dec
adc
scas
arpl
sub
sbb
pop
mov
jmp
js
dec
pushf
lret
xchg
icebp
mov
sub
test
add
imull
in
push
mov
sahf
cmp
scas
fimull
das
xchg
scas
mov
shll
sarb
mov
push
iret
inc
shrb
mov
jne
cmpsl
cmp
cmpsb
ljmpw
scas
fisubl
scas
jns
mov
add
inc
inc
inc
adc
cmp
pop
pop
daa
adc
fsubp
pushf
rep
and
sub
scas
pusha
mov
scas
in
jp
ds
cwtl
cmpb
stc
fwait
cmp
mov
rcrb
xor
mov
adc
fdiv
pushf
rcll
xor
or
ljmp
pop
aad
ret
imul
int
cmp
cmp
xor
iret
push
imulb
sub
aaa
mov
push
in
fsubp
xor
or
cld
aam
inc
mov
fidivs
add
mov
pusha
add
xor
fwait
or
scas
incl
add
sub
lods
mov
in
daa
mov
sbb
cmc
jg
or
sbb
inc
cmp
lods
jne
xor
out
xorb
xchg
jbe
and
ret
inc
xchg
lcall
xchg
pushl
jnp
push
aad
call
mov
sbb
xor
pop
cwtl
pop
sbb
cmp
add
je
loop
ficompl
dec
fsubs
adc
mov
pop
add
add
dec
call
push
hlt
mov
leave
cltd
mov
outsl
mov
lea
inc
lds
or
es
add
mov
or
xchg
cmp
sbb
cld
cmpsb
insl
fsubrl
fsubrs
pop
add
jbe
push
inc
or
mov
jnp
xor
roll
mov
pop
je
repz
jo
push
fwait
dec
lret
loope
sahf
pop
sbb
and
mov
xor
pop
fdivrp
inc
add
or
pop
mov
sbb
ja
mov
sbb
mov
clc
lret
in
mov
xor
into
add
sarb
or
xchg
shll
js
mov
fwait
or
or
nop
pavgw
das
popa
add
cmpsb
cmp
fs
dec
pop
ds
or
ret
leave
adc
mov
add
mov
dec
add
xor
push
lahf
sbb
out
cwtl
aam
jnp
rcrb
hlt
push
test
mov
fdivp
jne
or
sbb
inc
sub
cs
sub
in
ret
cwtl
cld
inc
lcall
mov
cmp
xchg
inc
iret
pushf
add
into
test
ret
inc
lcall
dec
inc
jl
dec
jecxz
mov
dec
ljmp
stos
push
jno
mov
je
dec
jbe
and
jl
fsubl
xchg
data16
mov
shrl
push
jae
xor
ja
lret
ret
outsb
adc
in
ret
jle
cld
divl
les
push
in
xor
stos
aaa
push
jo
jle
sub
sub
sbb
dec
das
out
fdivr
clc
aaa
mov
nop
jl
arpl
sbb
das
mov
xchg
cwtl
ds
inc
xlat
xor
xchg
pop
sub
xlat
and
dec
js
int3
call
fstpt
mov
lahf
int3
pop
into
iret
mov
clc
out
test
pop
lret
and
mov
mov
insb
or
pop
pop
stos
add
cmp
pop
rep
stos
jge
ljmp
aaa
adc
pop
out
test
dec
bound
lods
out
push
shrl
lcall
dec
fiaddl
insb
das
mov
xchg
jecxz
mov
test
into
xor
outsl
push
jmp
aam
xor
out
stc
mov
inc
mov
sbb
mov
jno
fmull
mov
cltd
pusha
and
adc
pop
add
das
add
sbb
and
pop
iret
xor
jnp
mov
aam
lahf
shrl
in
cs
pop
cmp
outsb
add
sub
adc
pop
jno
jg
add
in
xor
lods
sahf
call
clc
sbb
data16
lea
xor
mov
cld
movsl
push
mov
add
movsl
adc
out
cmp
jecxz
mov
pop
or
cmpsl
cmpsl
or
das
stos
xchg
imul
cmp
sbb
xor
xchg
mov
xor
nop
lods
push
dec
xchg
fcomp
inc
mov
std
movsl
repnz
test
fstpt
int3
cmp
lock
in
movsl
adc
xor
push
call
sbb
mov
push
jmp
cmp
mov
shll
cmpsl
rcr
ret
sub
mov
or
movsl
cmp
fisttps
dec
pop
cmc
sti
iret
cmp
das
mov
stos
push
jo
daa
jp
aaa
sub
cmp
mov
sbb
mov
out
out
hlt
in
daa
push
std
push
addr16
sbb
sub
loopne
sbb
pop
out
push
adc
pushf
sarl
or
loopne
and
out
xchg
xor
ja
cld
fs
mov
sbb
jnp
cmp
cmc
cmpl
in
int
inc
cmc
adcl
mov
add
sub
mov
lock
adc
jmp
inc
enter
or
jmp
mov
add
out
enter
lret
out
clc
lret
add
loop
sbb
cmpsl
dec
xor
sbb
out
pop
shrb
sbb
jmp
subb
dec
sahf
in
stc
sbb
or
les
lcall
ljmp
mov
rcr
repnz
push
inc
lock
iret
mov
ficomps
xor
lods
sub
mov
bound
ja
insb
inc
or
inc
loopne
mov
push
scas
pusha
dec
ss
jae
mov
mov
ja
sub
mov
sahf
je
inc
out
adc
jo
fldenv
mov
mov
add
iret
mov
adcb
decb
add
ds
xchg
mov
sub
imull
jge
mov
sbb
adc
xchg
xorl
inc
mov
fisubrs
orl
fisubrs
rcl
and
xor
and
mov
imul
lcall
pop
sbb
psrad
and
pop
jns
add
mov
or
dec
sahf
dec
in
inc
mov
sbb
cmp
mov
inc
sub
cs
sbb
and
div
cmpsl
and
xchg
mov
xchg
mov
push
lret
es
sti
jmp
cld
test
sbb
fisttps
xchg
add
xor
push
arpl
int3
sub
cld
mov
and
xchg
mov
xor
lock
loope
out
xor
sti
mov
divb
addl
adc
or
xchg
or
mov
hlt
jo
hlt
push
sbb
or
push
out
mov
xchg
pop
int
jecxz
fwait
stos
and
leave
sarb
lcall
mov
pop
dec
daa
in
cmp
in
xchg
jo
cwtl
in
aaa
xlat
sbb
or
cld
xlat
or
icebp
mov
or
call
je
add
int3
sub
mov
xchg
mov
fs
push
imul
xchg
sbb
xchg
adc
shll
or
and
sahf
pop
push
xchg
add
or
sbb
in
add
stos
test
daa
inc
push
out
mov
inc
or
mov
mov
test
xchg
pop
add
lods
outsl
mov
jge
movl
push
xchg
in
jbe
les
cltd
das
aad
jmp
pushf
fwait
stc
push
cmc
push
add
mov
and
ja
mov
lods
adcl
pop
movsl
jns
xchg
add
and
xchg
scas
mulb
out
aas
mov
neg
mov
dec
cmp
call
xlat
or
cltd
popf
int
imull
les
out
mull
xor
push
js
mov
jge
dec
sub
pop
mov
iret
mov
movsl
sti
lret
xor
cmp
and
repnz
lods
mov
das
int
jecxz
push
and
mov
cmp
pop
outsl
test
cmp
adc
push
cmp
mov
pop
and
inc
cmc
pusha
rorl
test
jns
std
xchg
push
jecxz
ficomps
mov
lods
inc
aam
fwait
cld
outsl
std
cltd
movsl
mov
and
psadbw
sbbb
jecxz
data16
lds
jae
repnz
push
xchg
hlt
xor
inc
sahf
xchg
xor
in
stos
cmp
xchg
cmp
lea
cmp
popf
adc
jb
in
sub
andb
push
dec
sub
sub
shlb
fsubrs
shrl
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
mov
addb
lcall
push
pop
rorb
or
pusha
adc
mov
push
mov
test
sahf
xchg
adc
outsl
pushf
insl
arpl
mov
inc
push
xchg
lock
xchg
lods
and
aad
mov
jecxz
cld
leave
arpl
inc
adc
lock
cltd
xchg
sbb
lret
nop
shlb
mov
fsubl
shr
lcall
fsubr
inc
xchg
test
rcrl
push
mov
and
mov
jp
pop
int
outsl
in
arpl
lea
inc
cmp
push
enter
xchg
icebp
pop
movsl
cmp
insl
cwtl
pop
mov
adc
popf
lret
adc
pop
stos
jo
mov
call
sub
pop
mov
mov
nop
ret
arpl
stc
jb
aad
arpl
pusha
das
iret
inc
pop
xor
and
ror
js
icebp
bound
mov
std
in
pushf
or
jmp
jb
das
xchg
pavgb
push
push
movsl
or
aad
xchg
rcl
inc
mov
sub
sbbl
stos
jmp
mov
notb
mov
sbb
or
stos
mov
loop
or
enter
fstps
mov
cs
inc
std
cmp
adcb
cmpl
cmp
sub
xor
popa
push
mov
out
fidivrl
xor
les
xor
int3
test
xor
push
cltd
mov
dec
sbb
mov
add
pop
arpl
fcompl
imul
lods
ret
mov
call
and
lods
xchg
insb
repnz
cwtl
mov
push
test
mov
nop
add
gs
mov
cmp
xor
in
jg
add
dec
dec
jo
mov
stos
ror
cmp
sar
inc
clc
mov
jnp
pop
dec
adc
clc
mov
test
and
shrl
lret
cmp
mov
pop
jnp
jp
aam
adc
es
ja
mov
orl
pusha
je
dec
mov
mov
push
mov
xor
movsl
ret
mov
addr16
bound
data16
inc
lds
jns
filds
cmpl
jb
ds
jne
test
and
and
addr16
sbb
js
repz
inc
push
data16
inc
fs
mov
xorl
jl
mov
call
jle
jbe
sub
fsubrs
adc
pop
inc
xlat
daa
roll
fdivl
fldt
sub
push
mov
sub
add
popw
cwtl
push
add
lret
lea
in
pop
xchg
je
jecxz
leave
mov
pop
jne
lea
dec
lods
pop
inc
sbb
test
mov
leave
arpl
insb
pop
mov
pcmpgtd
cs
sub
jb
in
imul
jge
adc
sub
leave
jnp,pn
inc
pop
mov
add
adc
dec
stos
jnp
popf
stc
or
movsb
dec
xor
mov
mov
mov
cmp
xchg
cmp
dec
iret
sbb
jl
data16
cmp
or
scas
dec
cwtl
fnstsw
jecxz
repnz
sub
addr16
test
adc
fdivp
pushf
imul
out
adc
push
jb
repnz
pop
cwtl
test
jo
jmp
clc
test
dec
xchg
xchg
sub
andl
xchg
push
jge
xchg
sub
cmp
in
loope
rol
dec
lods
jg
mov
mov
and
or
out
movsb
sbb
push
jnp
in
add
push
xchg
mov
ds
mov
fcoml
popa
push
sub
fcompl
dec
notl
filds
xchg
push
mov
cmpb
or
push
movsb
inc
inc
popf
dec
or
and
inc
mov
cmpb
xchg
popa
in
sub
jb
pop
jle
repz
jmp
jno
push
decb
call
dec
xor
ja
mov
lock
inc
stos
cmp
or
insl
xlat
sbb
and
pop
cmpl
out
aaa
jb
cmc
xor
xchg
sub
sbb
fldenv
pop
ficoml
mov
cmpsl
push
icebp
push
mov
fmul
dec
fdivrs
push
cld
movsb
cmpsl
push
mov
fiadds
cmp
mov
pop
jno
jnp
adc
jb
outsl
icebp
ret
bound
mov
dec
popa
repz
xor
int3
adc
fwait
xor
dec
or
inc
cs
sahf
adcb
orl
xchg
sub
aas
fadds
xchg
pop
mov
and
adc
cmpsb
push
int
mov
mov
pop
sbb
push
mov
mov
and
test
push
xchg
rcrb
cld
popa
xchg
push
je
cld
aaa
out
cmp
xor
pop
fistpl
inc
test
mov
std
jae
mov
andl
pop
jb
loop
sub
inc
repnz
pop
call
sbb
sbb
mov
cmp
or
mov
js
adc
mov
or
push
jge
dec
and
pusha
push
pop
lods
push
rcrl
or
inc
mov
outsl
clc
stos
xchg
pop
sub
jle
mov
xor
lods
aas
imul
das
lret
movsb
shlb
inc
add
pop
sub
cmp
outsl
cmp
stos
jle
scas
sbb
call
lods
sti
pusha
adc
sbb
jp
xor
call
adc
out
bound
push
or
ja
push
aas
sbb
mov
dec
cmp
cltd
inc
pop
add
sbb
mov
inc
inc
pop
fmuls
in
sbb
push
aam
mov
jecxz
cmp
mov
incb
mov
lcall
loop
mov
jnp
push
pmuludq
mov
addr16
mov
arpl
imul
xorl
push
fdivl
pop
sub
scas
push
repnz
sub
movsl
cwtl
aas
aaa
dec
or
jnp
mov
dec
mov
xor
fstl
nop
and
and
gs
cmp
cmp
xchg
add
xchg
stc
cld
jge
xor
and
sahf
out
in
js
int
xor
scas
cltd
push
push
adc
mov
pop
push
fcmovne
fstpl
test
rcrl
cmp
jge
fwait
jne
mov
mov
inc
pop
push
inc
push
push
dec
xor
test
mov
xchg
xlat
sub
pushf
daa
jmp
mov
out
lds
and
lret
mov
mov
lret
mov
sbb
push
scas
ljmp
xor
mov
jle
loopne
xchg
xchg
in
fmul
mov
lods
imul
sbb
and
push
sbb
aad
and
gs
daa
gs
lcall
push
mov
xlat
jecxz
aas
lret
jo
sub
xor
push
xchg
push
out
imul
lret
xor
mov
push
jo
ja
fwait
push
inc
in
fidivl
dec
bound
mov
lods
xor
lock
jb
xor
jl
mov
xchg
pop
sbb
aas
mov
lcall
and
je
mov
xlat
cmp
aam
xor
outsl
push
adc
into
fistpll
inc
push
insl
push
sbb
jg
push
les
mov
out
add
fmuls
cmp
mov
or
mov
imul
add
ret
jmp
mov
or
bound
push
aam
ss
js
sahf
xor
jle
sti
js
xchg
lret
shr
dec
out
or
cld
scas
iret
push
or
mov
fwait
mov
scas
adc
adc
mov
aaa
xor
incl
xor
cmp
push
insb
sbb
lcall
js
jne
mov
inc
mov
orl
mov
add
add
out
add
inc
push
popa
dec
cmp
jmp
inc
and
test
incb
mov
xchg
xchg
ja
mov
xchg
roll
xchg
dec
mov
mov
int
cmp
pop
sbb
hlt
pop
mov
pop
fadds
and
xchg
scas
ja
fs
push
pushl
mov
or
jle
ds
adc
cmp
sbb
rcll
push
sbb
mov
popa
inc
bnd
inc
insl
jmp
inc
jmp
outsl
sbb
leave
movl
in
sbb
in
mov
push
in
int3
xchg
enter
xor
push
add
sub
cmc
les
push
sub
cmp
adc
scas
arpl
scas
idivl
cltd
dec
mov
insb
clc
cltd
scas
inc
addr16
pop
into
jmp
shl
add
gs
jg
dec
jecxz
adc
sub
jo
adc
or
repnz
lret
lret
adc
ret
or
push
xchg
sbbl
aad
inc
nop
push
push
ljmp
mov
add
pop
xchg
mov
pop
hlt
cltd
push
popa
mov
inc
sti
leave
mov
cmp
jne
or
iret
mov
in
shll
mov
or
mov
dec
dec
je
aad
adc
xor
pop
addb
xor
imul
jnp
xchg
addl
lea
bound
pop
pop
adc
adc
jecxz
sbb
lcall
xor
mov
xor
mov
stc
ret
dec
mov
xchg
jbe
movsb
mov
jae
bound
sub
cld
bound
scas
add
jp
popa
sub
xchg
xor
js
xchg
jae
add
mov
ljmp
add
adc
fistpll
mov
loop
in
pop
xor
test
xchg
pop
push
int3
xor
popa
push
sub
mov
lods
jmp
push
pusha
mov
fsubrl
dec
add
in
jb
xchg
inc
das
ja
adc
push
mulb
or
insb
shr
cmp
mov
sub
jbe
xchg
shrb
mov
out
add
dec
outsb
imul
jmp
cmp
insl
mov
enter
gs
or
enter
mov
mov
mov
lock
inc
adc
add
and
popa
mov
jnp
xchg
mov
cli
dec
push
in
cmp
mov
add
add
push
es
jns
pusha
push
push
lret
stos
and
or
jne
shlb
mov
dec
mov
stos
xor
jno
je
sbb
jp
in
dec
or
inc
xchg
loop
rolb
lret
out
aaa
push
ja
xchg
sbb
js
subb
fstps
loopne
push
cmpsl
gs
out
divb
inc
add
movsl
cltd
xor
das
test
ja
jle
pop
xor
xchg
push
jbe
jnp
mov
lahf
jne
and
push
xchg
xchg
dec
cld
pop
sbb
and
jb
mov
push
xchg
hlt
dec
mov
cwtl
lock
push
gs
cli
mov
out
xorb
outsb
sbb
out
int
jb
ss
cltd
pop
jo
or
lock
xchg
jmp
xlat
in
and
mov
xchg
jge
lock
xchg
or
xor
jae
je
clc
push
cli
js
es
lret
dec
push
push
sti
sbb
scas
xchg
sub
add
data16
push
popf
icebp
or
aas
jmp
mov
jb
call
fwait
mov
jmp
jns
inc
sti
rol
loopne
fistps
dec
mov
icebp
or
sbb
lahf
xor
shrl
inc
add
aas
dec
loope
jp
mov
test
prefetch
and
sub
or
mov
in
sbb
and
xor
pop
mov
jbe
fnsave
dec
mov
into
insl
inc
outsl
test
idivl
int3
adc
fs
adc
stos
jmp
stos
test
adc
cmpsl
sbb
js
popa
xchg
jno
lods
clc
pop
sbb
xchg
je
or
ret
xchg
xchg
xchg
popf
pop
in
lods
or
and
pop
add
inc
push
insl
sbb
pop
jle
shl
cmp
lea
ror
mov
ret
or
mov
loopne
in
jg
or
aas
aad
stos
add
iret
test
imul
or
xlat
ds
cld
pop
add
xchg
inc
and
mov
mov
mulb
sbbl
test
pop
mov
cmp
shrb
cld
push
nop
mov
lret
or
sub
insb
test
cmp
loopne
adc
mov
aas
scas
movsl
push
ret
xchg
inc
mov
sub
lods
push
ds
arpl
loopne
mov
add
sbb
inc
push
mov
mov
xor
adc
push
mov
shlb
cld
int
cwtl
lahf
sarb
xchg
pop
add
push
loopne
frstor
pop
add
jo
cwtl
jo
je
fcomps
int
mov
out
dec
dec
lods
xor
andl
mov
mov
addb
jle
addl
xor
jae
sub
pop
shlb
jecxz
xlat
sti
mov
mov
jge
mov
movsb
add
aad
decl
or
cmp
jnp
and
pop
stos
xor
dec
fnstcw
adc
sahf
jge
inc
insb
xor
test
clc
dec
xchg
sahf
cmp
pop
popf
add
push
shlb
arpl
lock
mov
scas
pusha
rcrl
int3
pop
jo
movsl
mov
sbb
fimull
insb
dec
lret
dec
bound
push
arpl
je
ret
cmc
std
rcr
dec
inc
and
int
fsub
sub
fisubrs
mov
ss
xor
call
dec
push
into
js
mov
sbbl
cs
xchg
push
cli
jae
fcomi
mov
outsb
xchg
sti
inc
pop
cmp
push
or
xor
sbb
sbb
cmc
mov
push
movsl
repnz
xchg
shlb
je
cmpsb
add
mov
inc
sub
aam
pusha
mov
sar
add
xchg
sub
cmp
sub
xchg
loop
pop
cmp
shrl
adc
loopne
mov
fcomi
cltd
in
pop
push
or
pop
add
movsb
xor
pop
cmpsl
and
or
xchg
or
cmp
and
mov
test
mov
sbb
ss
pop
cld
sahf
lcall
mov
data16
sub
pop
int
sub
pop
arpl
or
inc
out
es
cmp
into
jbe
into
rclb
sbb
adc
xchg
mov
inc
or
adcl
icebp
sbb
jnp
ror
pop
mov
scas
cli
nop
cmpsl
clc
xchg
leave
mov
fsubs
sub
test
mov
pop
mov
push
xchg
mov
das
sub
gs
popa
nop
cmp
push
icebp
gs
pop
and
fistpll
xor
loop
outsb
pop
cmp
sbb
push
sbb
pop
xor
push
iret
aad
sub
in
sbb
mov
lea
cltd
dec
inc
xor
divb
jmp
pop
js
stos
sbb
push
jne
dec
xorb
mov
out
cs
xor
push
adc
mov
movsb
pop
xchg
insb
mov
and
jns
sbb
xor
sub
and
lcall
sbb
cmp
xchg
mov
out
mov
mov
sub
xlat
mov
in
js
mov
test
jae
and
movsb
aas
cld
jmp
lret
loope
shrl
sub
push
xchg
push
decb
cmc
fimull
cmp
cltd
jp
lcall
pop
pop
fsts
sbb
mov
mov
fwait
ret
fiaddl
mov
clc
scas
lcall
loope
stos
addb
adcl
mov
fcomps
pop
inc
repz
cmp
mov
push
out
out
lret
jle
adcl
adc
ljmp
jno,pn
fbld
jbe
pop
mov
mov
dec
aas
jns
push
add
push
mov
fistpll
negl
inc
xchg
imul
jp
bnd
aas
push
or
mov
jmp
hlt
fcoms
ret
test
jne
and
rcrb
dec
sub
or
dec
rorl
decl
sub
pop
ret
lods
sti
data16
mov
mov
inc
xor
out
dec
scas
scas
cmpsb
mov
scas
pop
pop
loop
mov
mov
enter
das
cld
add
fmuls
int
inc
pop
pushl
sub
in
sbb
mov
and
cs
mov
cmc
cmpsl
mov
fistpll
idiv
inc
and
add
push
xchg
jmp
or
jnp
arpl
xchg
dec
rcr
test
and
mov
push
out
adc
dec
sub
add
mov
dec
aaa
push
sub
nop
sbb
pop
jo
nop
pop
mov
pop
mov
fmull
pop
pop
popf
dec
lahf
in
sub
sub
mov
and
std
imul
mov
xor
ret
dec
sub
inc
pushl
stos
push
dec
sub
mov
aam
icebp
fiaddl
cmpsb
and
aam
push
mov
fimuls
dec
adc
leave
push
xchg
test
mov
fs
loope
cmp
decb
js
gs
pop
push
sbbb
pop
in
jp
int3
js
jbe
lods
fcmove
and
jge
xchg
xor
lret
and
bswap
jp
jae
in
add
rcl
test
in
cmp
mov
in
push
lret
add
sbb
daa
push
repz
xlat
xchg
lea
aas
popa
fdivp
jno
push
stos
lea
jnp
aam
jl
push
xor
xor
pop
aad
test
jo
outsl
shlb
xchg
mov
jecxz
arpl
cmp
test
sahf
cltd
dec
movsl
je
xlat
test
mov
cli
jle
or
pop
sub
repz
mov
mov
fsubp
adc
aam
iret
inc
mov
das
test
pop
dec
inc
push
repz
scas
jmp
lret
das
mov
sbb
mov
fucomi
js
jmp
out
or
sti
pop
xchg
lock
pusha
addr16
cmpb
sbb
mov
nop
cs
test
enter
pop
lds
aas
inc
cwtl
movsl
shrb
gs
pop
dec
mov
lret
or
dec
adc
aaa
or
imul
scas
mov
gs
call
push
adc
loope
cmpsl
xchg
push
and
fsubrl
push
sbb
adcl
xchg
mov
das
pop
inc
out
test
sbb
stos
xor
iret
leave
dec
fstl
cmp
sub
sti
and
cmpsl
dec
cmp
popa
out
sub
push
dec
movsb
sbb
fistl
outsb
mov
or
dec
jb
jb
xchg
adc
push
mov
pusha
jle
sbb
cltd
pop
leave
lods
cwtl
cmp
xor
fwait
and
or
test
adc
xor
fwait
stos
xchg
imul
pushf
push
dec
dec
sbb
mov
stos
mov
fcom
test
repz
jg
call
fwait
pusha
xchg
inc
adc
aam
into
adcl
ss
or
or
jbe
dec
imull
dec
mov
xorl
fidivrl
cmpsb
gs
scas
ror
or
push
add
sarl
mov
push
inc
inc
pop
xchg
addl
lods
into
push
xchg
imul
push
ret
mov
out
add
daa
mov
xchg
push
lret
cli
xchg
adc
push
mov
mov
sub
mov
test
stc
iret
mov
repz
dec
pop
xchg
mov
inc
adc
sbb
test
dec
push
orl
mov
pop
push
inc
outsl
jne
lret
and
add
jne
xor
loope
addl
in
bound
imul
insb
les
mov
and
ja
cmp
jge
jmp
jecxz
in
xor
xchg
xor
popf
push
inc
mov
sbb
sbb
sub
rorl
xchg
pop
mov
jae
bound
loope
or
ljmp
insb
call
and
jae
mov
insl
pop
dec
jne
lret
fnstsw
repz
ret
adc
mov
xorl
jmp
cli
call
dec
loopne
out
pop
cmp
ret
dec
fcom
stos
divl
fistps
pop
mov
mov
rorl
sbb
jo
sbb
adc
cmc
mov
xchg
in
pop
comiss
or
inc
inc
daa
sub
or
sbb
mov
push
scas
inc
mov
jg
shll
mov
push
dec
xor
and
inc
mov
lods
and
movsb
xlat
dec
dec
adc
enter
ret
popa
sub
cli
cmp
adc
test
aam
call
cmp
inc
popa
or
cmpsl
cli
jnp
sbb
cmp
mov
cmp
stos
jg
aaa
popf
arpl
xlat
adcb
mov
sub
inc
inc
sub
add
push
add
inc
inc
mov
sahf
inc
sub
mov
fmuls
popa
xor
cmp
xor
mov
pop
inc
sbb
pop
dec
outsl
inc
sbb
pushf
push
in
aam
push
adc
lods
iret
shll
mov
inc
adc
mov
mov
popa
es
nop
push
pop
mov
cmc
shll
cmp
rol
pop
mov
inc
leave
jns
rcrl
cmpsb
mov
fildl
jl
into
mov
mov
jl
aam
xchg
jns
adc
repz
sbb
adc
das
test
and
mov
shlb
jge
pop
push
scas
mov
cmc
outsb
mov
mov
or
movsl
ffree
mov
fwait
lods
cltd
adc
mov
sub
mov
fmull
outsl
sub
sti
call
stos
inc
push
and
clc
xor
pop
cli
mov
inc
jno
leave
xchg
inc
ss
leave
aad
xor
dec
stos
pop
fs
add
lret
addb
jbe
adc
xlat
jbe
mov
loope
jge
push
mov
cmpsb
movsb
imul
xchg
push
or
lret
sbb
dec
int3
dec
mov
mov
xchg
clc
lea
clc
inc
stos
aaa
fstl
js
ljmp
inc
or
in
adc
mov
loopne
mov
cmpsb
mov
lods
cmp
sub
mov
sti
bound
bound
rolb
pop
scas
mov
std
mov
pop
repnz
or
fnstsw
jp
stos
fcoms
pop
mov
sub
fstp
psrlq
aaa
imul
sahf
mov
ss
fisubl
dec
fwait
lock
repz
repnz
test
insb
jno
fistpll
bound
lods
lea
mov
xor
push
sbb
dec
mov
flds
loopne
unpcklps
push
lds
scas
mov
aad
jnp
mov
mov
stc
mov
insl
mov
inc
push
lds
jae
std
fldcw
jnp
lods
fs
aam
subb
les
jnp
inc
icebp
or
mov
and
push
sbb
movsb
mov
mov
sbb
fwait
or
inc
add
push
sahf
ficompl
or
stos
les
mov
xchg
ljmp
popa
inc
ret
pop
outsl
xchg
fiaddl
stc
mov
inc
mov
mov
je
lds
push
sbb
add
xor
fisttpl
and
mov
push
sbb
into
pop
bound
mov
stos
push
inc
fisttpll
pop
js
test
dec
clc
scas
std
jmp
push
or
or
leave
fcmove
inc
lret
bound
fs
in
cwtl
xchg
pop
scas
and
push
in
pushf
xor
pop
dec
adc
add
mov
lea
xor
and
or
repz
out
mov
inc
sub
mov
sarl
cmp
imul
popf
adc
data16
insb
push
mov
aad
mov
pop
jns
xchg
iret
jg
fists
std
addr16
enter
rclb
mov
int3
mov
or
pop
inc
decl
jmp
or
mov
lods
jge
xor
sub
lods
mov
mov
sub
int
cmp
mov
stos
rol
loopne
hlt
jne
orb
mov
imul
jno
mov
addb
fwait
movsl
and
mov
push
pop
or
data16
inc
pop
or
popa
lahf
inc
inc
insl
lret
and
retw
ret
imul
call
cwtl
jge
pop
mov
lea
outsb
adc
adc
int3
adc
leave
test
xchg
xchg
popf
inc
sbb
lods
mov
gs
ret
leave
in
push
loopne
and
xchg
jge
popf
ljmp
add
push
push
daa
mov
jg
inc
pop
dec
dec
or
xchg
cwtl
push
adc
imul
cmp
in
pop
cmp
mov
scas
inc
scas
ficomps
imul
jp
mov
in
sub
movsb
mov
fs
lods
pop
add
xlat
in
ljmp
imul
subl
addr16
jl
and
lahf
pop
or
js
je
pop
dec
adc
adc
cmpsb
mov
mov
loop
fdivs
pop
sbb
adcb
stc
movsb
lea
sti
pushf
lock
dec
shr
ret
jg
dec
jmp
sub
loop
ljmp
repz
sbb
sub
ret
jecxz
out
jl
nop
push
cld
push
hlt
and
aas
add
cli
insl
xchg
sarl
pop
cld
push
mov
and
jl
stc
fistpl
adc
or
jnp
mov
add
jge
xchg
test
sbb
call
fdivrl
and
jle
add
add
hlt
or
dec
jno
pop
arpl
fisttpl
mov
cmp
fstl
arpl
pop
inc
lret
jo
and
cmp
and
xchg
in
inc
popa
decl
mov
push
pop
dec
cmp
inc
imul
dec
ds
int3
pusha
pusha
iret
ja
call
jmp
mov
cmp
mov
fwait
mov
call
mov
dec
add
jne
imul
mov
out
shll
mov
xor
js
mov
sub
test
ss
iret
mov
pop
in
mov
cmpsb
cmp
in
inc
sbb
outsl
mov
loope
dec
cltd
mov
inc
inc
popf
or
add
dec
cwtl
cwtl
incl
js
push
mov
fsubl
jmp
xchg
mov
lret
pop
mov
sbbl
pop
xchg
jmp
sahf
cmpsl
nop
add
lods
movsl
in
or
jp
pop
adc
mov
dec
call
in
and
fldcw
stos
aas
mov
pushf
test
or
mov
pop
sbb
or
inc
ffreep
sub
cli
jb
fs
xchg
and
adc
inc
add
test
jl
lock
jb
pop
jmp
and
sbb
mov
int3
in
aad
or
popf
xor
pop
push
pop
dec
je
sbb
pop
movsb
mov
pop
jb
pop
cld
mov
scas
addr16
inc
push
mov
fcmovnbe
mov
cltd
pop
aam
adcb
xlat
gs
jae
lock
push
sahf
or
jbe
gs
int
adc
mov
fwait
rep
cmc
divb
repz
xchg
mov
pushf
orl
les
in
xchg
ret
push
cmpsb
pop
sub
test
out
int
xlat
fbld
insb
xchg
mov
and
inc
jne
mov
ret
jbe
fidivrl
loope
insb
addr16
cmc
add
repz
nop
mov
sti
mov
cmp
or
cmp
dec
jno
cmp
test
iret
cmpsl
push
or
stos
add
dec
pop
cld
xor
pop
outsb
jno
mov
orl
jo
addr16
popa
jns
pop
rcll
dec
fstpt
inc
or
jo
mov
or
dec
scas
push
xchg
xor
sbb
insl
mov
call
out
cmpsb
repnz
or
jg
cmp
fbstp
es
jg
loop
js
inc
push
push
ret
dec
dec
bound
and
push
xchg
or
shl
aaa
fimull
push
jle
add
adc
in
inc
xchg
inc
sub
pushf
xor
add
mov
add
cltd
sbb
paddd
fwait
jns
call
in
jl
xchg
adc
ret
dec
adc
imul
fdivrs
sbb
loopne
insl
adc
and
xlat
loopne
sarb
pop
add
and
stc
mov
out
rorb
sub
sbb
and
ja
jge
iret
ret
push
push
and
cwtl
mov
cmp
mov
movsl
mov
negl
dec
adcl
jbe
dec
or
movb
adc
aam
fmull
inc
call
mov
pop
or
ds
stos
notl
femms
nop
popf
orb
ss
mov
inc
call
cs
std
cmpsl
faddp
and
movsl
xor
push
into
pop
insl
cmp
cli
jmp
pop
lcall
ret
scas
jmp
sti
es
stc
in
int3
imul
loope
cmpsl
stos
icebp
xor
push
imul
and
mov
fisttpl
mov
pop
subl
lods
fs
test
add
ljmp
in
cmpsl
outsb
fistpll
fsubrs
les
repz
and
jno
cmp
daa
sub
out
div
adc
mov
cmp
sub
cmp
add
push
jecxz
das
js
ja
xor
arpl
and
stos
mov
pop
es
in
stos
sbb
mov
xor
insl
inc
frstor
jo
mov
mov
je
iret
loop
insb
dec
inc
scas
mov
popa
dec
ds
inc
fsts
popf
mov
push
out
or
notb
push
stos
push
aaa
push
les
dec
popa
std
sti
bound
sbb
mov
xor
or
rcll
in
jmp
cmp
movsb
lcall
notb
fildl
and
fbld
js
rorb
xchg
rorb
mov
dec
dec
add
arpl
xchg
iret
inc
jg
add
scas
lret
xlat
push
push
pushf
shll
test
pop
add
clc
mov
push
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
lret
aas
inc
xor
addb
push
hlt
adc
cmp
fldt
outsb
or
mov
push
push
push
pusha
ror
dec
fcmovne
push
cmp
iret
xchg
mov
xchg
push
xchg
enter
pop
pop
outsl
ljmp
xor
adc
mov
sbb
cli
bound
decb
adc
inc
sub
jmp
scas
adc
cmp
fucomp
fildll
arpl
sbb
push
jo
xchg
xchg
gs
orl
jmp
inc
cmc
and
stos
fwait
cmpsl
arpl
mov
lods
subl
push
adc
scas
mov
push
das
icebp
xlat
xchg
insb
subl
sbb
jb
ds
arpl
sbb
cmpsb
jecxz
or
dec
addl
push
mov
insb
adc
shll
jns
pop
lods
mov
push
sar
mov
mov
or
mov
and
rep
add
pop
mov
cmp
faddp
mov
pop
inc
push
mov
mov
or
inc
cmpl
push
loope
int
mov
fadd
fld1
rorl
arpl
mov
out
mov
jmp
jl
or
rcrl
faddp
inc
push
push
aas
in
sub
jg
add
imull
xchg
popf
stos
mov
inc
pop
push
repz
je
and
lods
or
push
pop
lds
repnz
test
mov
xchg
xchg
mov
mov
bound
add
cld
pop
adc
ja
shlb
mov
pushf
iret
fisttpll
inc
loop
or
cmpsl
repz
and
dec
push
push
pop
andl
push
mov
daa
lret
push
push
repz
or
cmpsl
mov
sbb
pop
fldt
and
sub
fucompp
jecxz
inc
sbb
data16
adc
data16
pushf
shrl
out
loopne
ror
pop
js
sub
scas
mov
xchg
cmc
push
mov
inc
test
popa
xor
push
adc
mov
iret
movsl
ljmp
mov
fwait
mov
jmp
cltd
cltd
dec
push
pop
mov
mov
add
int3
sbb
xchg
push
test
mov
pop
nop
jp
xchg
cld
or
adc
inc
dec
ljmp
mov
xchg
cmp
pop
xchg
sub
in
jbe
imul
xor
pop
mov
lret
pop
mov
sbbb
bound
ret
fidivrl
imul
cwtl
or
cld
cmp
or
je
mov
in
out
xor
repnz
xlat
cmp
push
and
fmul
xor
sub
inc
mov
sbb
scas
enter
push
adcl
stc
into
popa
shrl
pop
pop
pop
inc
dec
or
push
push
xchg
jns
and
jnp
cli
pushf
mov
sub
and
mov
dec
xchg
clc
mov
stc
push
shll
aas
xor
mov
jmp
orl
push
bound
lahf
fnstsw
mov
pop
pop
xchg
adc
test
cmp
mov
mov
add
gs
xor
sarl
mov
pusha
arpl
sub
lods
pop
push
pop
adc
je
pusha
outsl
add
repz
les
jge
mov
mov
mov
adc
clc
loopne
stos
insb
mov
stc
or
outsb
sbb
test
xchg
shl
std
out
aaa
cmpsb
popa
dec
dec
sti
cmp
ds
ja
mov
int
cwtl
cmpsb
sbb
jo
and
sub
inc
cmp
xor
sub
pop
rorl
and
imul
mov
dec
pop
pop
adc
dec
inc
cld
addr16
sbb
jb
lea
bound
xchg
scas
pushf
pop
mov
mov
fbld
and
jne
or
jle
aam
xor
pop
bnd
push
push
lret
fs
jnp,pt
scas
jne
and
lock
lret
in
dec
xchg
jnp
int3
ror
xchg
sub
aaa
jl
out
ficoml
cs
into
call
fidivrl
stc
jmp
xlat
adc
outsl
popf
and
fiadds
mov
mov
int
js
xchg
lahf
pop
or
jge
in
iret
lret
into
pushf
push
jg
iret
jl
test
vpaddb
dec
aas
insb
and
cld
fcmovnb
aam
ss
push
dec
cs
hlt
les
subb
fistpll
mov
and
ror
lea
xchg
pop
sub
nop
in
mov
jns
sub
mov
inc
roll
inc
daa
and
ret
push
scas
pusha
lods
ja
sarb
mov
sub
pop
xor
shlb
rcll
adc
pop
push
loope
sub
fisubrl
into
mov
sub
cmp
movsb
dec
sbb
lret
sbb
mov
add
pop
or
cmp
lea
xchg
lock
xchg
inc
mov
xchg
sbb
movsl
cltd
mov
lods
dec
loopne
lods
pop
and
pop
stos
dec
jl
negl
or
sbb
scas
push
repz
jecxz
pushf
mov
rcrl
push
dec
addr16
sbb
imul
or
mov
data16
daa
mov
nop
jno
mov
adc
out
adc
shr
test
push
shll
jae
stos
popf
mov
lret
adc
adcb
rcr
aad
adc
jecxz
bound
dec
shr
pusha
push
jge
jo
add
push
dec
or
adc
add
insl
pusha
cmp
fsubs
adc
inc
inc
sub
jno
jecxz
stos
adc
mov
mov
sbb
inc
inc
cwtl
mov
test
lahf
sahf
and
stos
lds
cmp
dec
dec
repnz
adc
add
loopne
fisttpll
xchg
mov
mov
ret
push
test
adc
push
rol
test
int
fwait
out
push
sbb
test
jne
in
push
push
mov
lods
mov
jo
push
mov
sahf
out
test
jnp
imul
pop
or
filds
jbe
scas
cmpsl
pushf
cmc
mov
ss
loopne
testb
sbb
add
pop
pop
sbb
jnp
lock
dec
pusha
jb
jmp
sbb
jns
sub
insl
cmp
dec
push
out
clc
fwait
sub
loopne
adc
pusha
push
add
xchg
mov
in
aad
imul
sbb
ror
mov
popa
mov
andl
push
fsub
lods
jmp
pop
xchg
or
call
xor
inc
ds
or
std
fbld
inc
lret
xorl
mov
enter
mov
jmp
cwtl
shrl
cmp
ds
ja
pop
cmp
bound
in
and
lcall
pop
dec
push
and
and
push
mov
lcall
push
adc
outsb
dec
sbb
add
loop
test
xchg
imul
push
pop
cli
push
es
aaa
fs
cmpsb
std
xchg
adc
sti
adc
pop
icebp
mov
out
fldl
cmp
jbe
les
es
push
cltd
push
lcall
jns
fdivr
jmp
pop
repnz
inc
test
add
mov
xlat
mov
pop
or
lcall
enter
pop
jp
inc
lods
ret
aas
lahf
rcrl
popa
cmp
jo
nop
lock
adc
mov
cwtl
movsl
cmp
sbb
das
cmpb
ja
and
out
mov
xor
repnz
and
hlt
push
mov
pop
dec
cmp
push
inc
push
rcrb
scas
pusha
lret
mov
daa
loop
ss
not
and
bound
inc
lahf
in
fidivl
mulb
jle
dec
sbb
push
cmc
movsl
jmp
push
mov
data16
jle
mov
sub
pop
or
cmp
jecxz,pt
xchg
and
cmpsl
adc
test
pop
push
cmpsb
out
test
cld
aad
sahf
lods
pop
inc
xor
test
dec
mov
sarl
add
rclb
test
das
xor
repz
xor
inc
dec
adc
loop
sahf
sbb
pop
repnz
flds
es
mov
fmull
je
outsl
jecxz
stos
add
fs
add
push
out
insb
pusha
aad
xchg
in
push
mov
and
mov
lret
imul
jmp
add
mov
jo
and
mov
cmp
push
sbb
clc
pop
ret
mov
test
push
jae
fidivrs
sbb
jo
out
sub
gs
fbstp
fildll
cmp
push
xchg
inc
dec
pop
pushf
aad
pop
leave
sbb
adc
sub
pop
stos
call
xchg
push
fidivrs
jnp
cs
push
dec
and
test
jb
sub
add
shl
sub
sub
cltd
cmp
jmp
sub
lods
xchg
subb
mov
add
adc
aas
jmp
mov
mov
fwait
call
lret
push
xor
push
and
outsb
push
dec
je
lods
sbb
jne
xchg
mov
out
dec
pop
pop
fwait
sbb
add
lret
vminss
mov
rcrb
fdivrl
or
jns
jp
xchg
divb
loope
les
icebp
into
or
push
pop
dec
or
and
cld
mov
and
loopne
push
jnp
jecxz
insb
inc
jb
pusha
subb
mov
adc
lahf
sub
fnstcw
mov
lods
inc
push
je
enter
jns
jne
icebp
divb
push
push
dec
mov
xchg
pop
mov
mov
xchg
insb
push
or
sub
sub
dec
dec
inc
inc
xor
mov
add
inc
dec
test
repz
jmp
repz
xor
adc
out
jmp
dec
nop
cmp
add
gs
scas
xchg
adc
sbb
sahf
test
flds
insb
loop
or
cltd
int3
mov
fstp
cmpl
lcall
shl
push
and
stc
stc
push
cmc
inc
fcmove
les
out
jno
or
cmp
shr
lea
fucom
jae
call
fbstp
addr16
cwtl
sub
bound
and
fs
clc
or
cwtl
dec
sbb
js
xchg
xor
in
mov
js
insb
rcl
aad
jmp
sub
movsb
sub
jne
fadd
cli
scas
mov
repnz
pusha
push
dec
xor
mov
push
adc
xor
xor
inc
movsl
int3
dec
or
adc
mov
addr16
test
sub
and
jno
xchg
rorl
aas
int
lea
call
inc
loopne
mov
inc
cmpsb
dec
jmp
cld
mov
rcrl
rcrb
adc
insb
ret
mov
stc
mov
jb
leave
movsl
ret
or
or
cmpsb
push
or
sahf
sysret
int
mov
dec
add
push
mov
repnz
out
pop
test
sbb
mov
negw
arpl
push
out
addr16
loop
pop
xchg
inc
or
xchg
negb
sub
cld
push
and
daa
push
cmpsb
inc
fisubrs
out
push
sub
clc
and
es
fcmovb
scas
movsb
arpl
or
movsl
add
movsb
insl
dec
xor
pushf
aad
lcall
sahf
testb
int3
fstpt
sbb
and
mov
loopne
imul
in
push
das
pop
jno
rclb
push
sbb
popa
mov
jmp
adc
in
orb
or
das
dec
inc
and
jne
outsl
add
mov
imul
incb
push
xor
pop
daa
fidivrl
jb
jno
lds
dec
pop
fcmovne
popa
jmp
gs
sub
test
fsubl
xchg
mov
mov
sbb
and
xor
mov
sub
xchg
inc
mov
fcoms
addr16
push
popf
inc
pop
fwait
test
mov
adcb
scas
mov
aas
clc
enter
or
add
cmp
daa
mov
int
push
lea
rcrb
dec
jg
and
dec
sub
inc
repz
cmp
enter
jp
scas
shlb
mov
mov
add
out
arpl
lret
leave
fmul
push
leave
mov
fstpt
mov
xchg
jle
xor
mov
sbb
in
mov
jo
jne
iret
loopne
ret
add
dec
in
imul
dec
jg
xor
test
push
mov
ficoms
pusha
xor
xchg
mov
and
data16
pop
fsubs
sub
test
loop
add
jl
cld
push
das
ret
ds
sbb
fldt
mov
mov
dec
das
stos
xchg
pop
fisubs
pop
pop
xor
mov
inc
mov
jns
pusha
and
rcll
push
xchg
fs
ret
out
loope
std
pusha
arpl
and
mov
or
int
jae
sbb
mov
cmp
cmp
jns
ss
popa
inc
fcompl
out
js
and
rcpps
idiv
xchg
mov
iret
std
mov
add
jbe
push
cwtl
out
insb
mov
mov
bound
dec
jnp
add
adc
xor
lods
sbb
pop
insb
sbb
add
loope
inc
cmp
aaa
pop
lds
stc
xor
repnz
pusha
fisubl
mov
mov
dec
pop
mov
add
decb
mov
jl
pop
mov
loopne
mov
push
add
xchg
sbb
add
mov
xchg
ss
inc
les
sub
fstps
cli
jp
shlb
jo
cmp
mov
or
fisttpl
xchg
inc
sbb
push
mov
cmpsl
sti
in
push
clc
andb
ljmp
cli
pop
jnp
push
repnz
nop
scas
sbb
lods
popa
cmc
addl
gs
add
jecxz
mov
add
cli
sub
sub
push
mov
xchg
mov
in
jo
movsl
xchg
std
add
add
push
mov
divl
jmp
mov
ljmp
cwtl
push
sub
jmp
xorb
in
jae
lea
mov
call
push
fistpl
adc
imul
add
jb
jp
loop
inc
jbe
shlb
pop
fimuls
jns
popa
js
mov
jnp
in
push
data16
popa
sbb
push
pop
js
mov
lret
cmp
lods
push
gs
std
sub
mov
adc
jno
mov
jne
jno
mov
leave
sbb
insb
jbe
stos
in
cmp
lret
ficomps
jo
add
mov
inc
sbb
xor
js
sbb
cwtl
mov
pop
lock
push
rcrb
push
fwait
push
dec
xchg
sub
inc
dec
sbb
cmp
jl
adc
jl
and
and
add
xor
ja
movsl
sarb
dec
insl
push
imul
cmc
push
mov
push
push
repnz
mov
fidivs
loopne
sub
mov
push
iret
and
add
test
sarb
das
jns
mov
inc
out
fiaddl
sub
mov
in
xchg
pusha
lds
inc
incb
shlb
rclb
sub
mov
pop
cmpl
fistpl
xor
mov
inc
dec
sub
test
out
pop
mov
jge
mov
jb
outsb
xchg
popf
jo
cmp
or
or
faddl
fs
sbb
cmp
loope
inc
jle
mov
add
iret
xorb
loope
dec
adc
cmpsb
xchg
js
sbb
jle
cmc
jb
mov
and
gs
mov
rcrb
scas
in
cld
adc
bound
adc
mov
outsl
xchg
adc
adc
lret
xchg
jne
xor
inc
lock
test
imul
push
jmp
inc
mov
push
add
mov
add
test
lcall
jecxz
flds
fsts
cmp
icebp
mov
push
adc
mov
popf
ret
add
xlat
js
cmpb
icebp
cltd
push
sbb
cmc
fisttps
add
lods
cld
imul
sbb
sub
out
mov
xchg
xchg
mov
mov
sarl
and
xor
repz
sbb
test
mov
and
mov
xchg
dec
xor
fcmovb
sub
or
ja
cmp
mov
lea
outsb
pushf
jg
push
cltd
and
inc
lds
aam
incb
jno
testb
jns
mov
mov
mov
xchg
xor
aaa
fsubl
push
daa
sub
jo
mov
stos
mov
dec
sahf
stos
nop
test
jo
add
add
mov
lock
dec
fs
sbb
mov
dec
sub
jae
fisubrl
scas
in
or
mov
bound
xor
sti
inc
xor
lcall
mov
mov
mov
mov
push
push
js
stos
mov
out
addb
out
push
sarb
and
xor
sbb
cmp
jecxz
in
sbb
dec
mov
mov
jle
adc
aad
notl
xchg
mov
hlt
out
mov
test
sbb
inc
inc
aaa
loop
mull
test
lods
addr16
lret
jno
fs
or
jl
dec
sub
pop
leave
xor
and
int3
insb
mov
mov
push
xchg
popa
and
lock
push
shrb
inc
xchg
mov
rorb
in
sahf
mov
in
aaa
add
subl
push
loopne
jno
xchg
fiadds
sub
sahf
rcrl
lret
filds
fsubr
push
mov
mov
nop
lret
decl
and
push
and
cmp
jg
push
testl
shll
lock
enter
pop
out
or
pop
in
cmp
mov
notb
mov
mov
ss
aas
adc
and
xchg
repz
inc
lret
mov
adc
lret
jl
dec
dec
mov
pop
stos
sub
sbb
scas
dec
outsl
xchg
sub
xchg
add
out
inc
int3
scas
or
dec
mov
fildll
mov
xchg
stc
in
mov
xor
test
lods
jecxz
inc
inc
lcall
pushf
jl
pop
inc
mov
push
mov
loope
das
in
mov
movsb
fs
mov
adc
push
mov
in
pusha
sbb
jns
arpl
xchg
mov
std
pop
clc
mov
movsb
adc
loopne
sub
add
push
or
arpl
inc
add
or
cmpb
mov
mov
scas
cltd
or
dec
xchg
cwtl
int3
mov
push
es
xor
sbb
jmp
sbb
shr
pop
jmp
in
mov
test
addb
push
lock
popa
sbb
or
nop
push
push
hlt
mov
mov
cmp
or
sbb
xchg
popa
push
dec
dec
cld
lcall
aad
inc
sub
mov
into
xor
stc
lock
cmp
icebp
dec
inc
inc
xor
lods
xchg
xchg
sbbb
add
sbb
cmp
push
adc
mov
push
pop
adc
rol
movsb
jo
sub
mov
mov
or
sub
adc
push
cmp
movsl
jbe
stos
ret
sub
out
mov
andl
or
and
and
xchg
jge
testl
repz
decb
ja
jns
xor
loopne
in
cwtl
and
loope
sbb
cmpsl
out
les
stc
loopne
jp
xor
gs
fisttpll
mov
inc
mov
cltd
mov
arpl
adc
lret
mov
xor
lds
xchg
mov
outsl
inc
les
xchg
mov
inc
mov
lret
mov
mov
push
inc
xchg
scas
mov
sbb
jg
cli
nop
add
mov
jmp
outsl
or
nop
dec
fwait
int3
icebp
cmp
fcoms
pop
stc
mov
adc
pop
pop
fs
flds
xor
shl
cmpl
fbld
mov
inc
mov
mov
lds
in
inc
cmp
or
js
fidivrs
iret
lahf
fwait
jbe
push
jl
xor
mov
sub
nop
and
sub
cli
or
hlt
mov
out
add
test
ljmp
fldenv
aaa
jo
sbb
gs
sahf
lahf
cltd
outsb
add
cmp
mov
xchg
adc
dec
push
and
xor
pop
lcall
jp
aaa
jmp
ret
gs
scas
ret
mov
add
sbb
xor
xchg
adc
mov
arpl
mov
pop
xchg
cmpb
hlt
xchg
xchg
adc
test
popf
leave
ljmp
adc
ds
pop
in
mov
sub
lods
ja
push
scas
sbb
lock
xor
incl
test
dec
pop
int3
aam
stos
xlat
mov
iret
fcompl
shl
shll
shl
dec
jnp
adc
xor
fimuls
sar
ret
mov
fisttps
out
mov
jmp
push
sbb
lds
stos
cmp
es
xchg
pushf
sub
push
adc
lcall
mov
mov
cmp
or
mov
pop
fucomip
mov
fwait
mov
cmp
dec
rol
das
sub
into
ret
sbb
insl
int3
pop
mov
mov
int3
push
sub
push
and
push
xchg
or
inc
jl
pop
sarl
add
sub
lods
xchg
leave
mov
fcomps
mov
jno
add
idivl
movsl
sbb
push
std
and
loopne
out
sub
sbb
jne
jne
insb
mov
xchg
cmpsb
and
cli
or
add
xor
in
hlt
test
out
mov
and
inc
hlt
jg
and
dec
dec
jno
daa
adc
inc
pop
in
jmp
adc
jp
icebp
jb
cmpsb
subb
hlt
lcall
repnz
ret
sbb
mov
mov
loop
pop
int
test
cmp
mov
cmp
mov
push
pop
or
test
and
pop
sub
test
mov
aad
and
lock
orl
outsb
mov
mov
mov
shrb
test
add
mov
sbb
fidivrs
mov
xchg
std
rorl
push
ret
ffreep
pinsrw
imul
cmp
add
lret
xchg
in
js
pop
das
out
arpl
adc
aad
repnz
pop
xor
xchg
cmp
jmp
pop
adc
push
xchg
mov
push
or
lcall
push
push
xchg
and
lahf
fwait
out
add
mov
fwait
pop
call
rclb
aas
push
mov
outsl
pop
iret
lock
push
ret
pop
mov
les
fwait
pop
cmp
pop
mov
nop
and
push
inc
xor
jns
xorb
ret
inc
push
pop
sub
ja
sbb
lcall
mov
xor
mov
jne
sub
incb
push
mov
and
fdivrl
lret
jle
or
out
es
bound
mov
sub
out
sbb
dec
outsl
pop
int3
adc
adc
sub
jae
mov
cwtl
jmp
repz
lcall
or
js
adc
scas
mov
insb
sbb
pop
aaa
inc
jno
dec
in
fiadds
push
jecxz
ja
xchg
xchg
sbb
cmp
push
inc
lcall
add
arpl
cld
mov
cmp
add
pop
mov
int3
repnz
mov
sub
lret
bound
aam
xchg
cmp
shlb
inc
adc
and
cmp
inc
or
out
mov
movsl
les
mov
outsl
movsl
insb
in
ja
cmovl
pop
or
jecxz
pop
adc
loop
push
or
call
dec
fnstsw
pushf
ficomps
call
or
mov
adc
xor
pop
ljmp
cmp
add
xchg
xabort
sti
adc
inc
sub
je
data16
push
mov
dec
test
jbe
nop
push
xchg
mov
sub
adc
cmp
inc
and
pushf
fiadds
adc
cmp
sbb
cmp
leave
gs
jmp
cs
lds
lret
rcl
mov
insl
out
orl
lods
cs
ds
cli
sub
mov
aam
or
xchg
push
push
pop
xchg
jae,pn
outsl
mov
cmp
add
inc
aas
cwtl
ss
cmp
ret
cmp
adc
jp
mov
into
rorb
cmp
add
stos
lods
out
mov
lds
mov
jmp
xchg
fisubrl
mov
es
push
ss
sarb
jg
xor
xchg
jbe
xor
je
push
xchg
out
jl
lock
insl
sarl
dec
dec
jno
or
add
aas
imul
adc
stos
and
mov
pop
cmp
je
addr16
mov
pushf
pop
fs
pop
loope
ret
add
and
faddl
jno
cmovne
movsb
sub
out
and
pop
pop
jae
inc
pop
leave
jle
loop
es
lock
lea
mov
inc
cmp
pop
jg
cmc
jne
cmp
lds
xchg
ja
sub
into
sub
mov
mov
scas
lods
lcall
ret
dec
outsl
sub
dec
es
stos
pop
or
or
lods
outsl
xchg
or
jge
cmp
sub
inc
adc
fmulp
call
mov
lcall
mov
iret
icebp
pop
inc
sub
jns
xor
xchg
pusha
xchg
adc
cld
std
sub
adc
lds
pop
or
jp
inc
shlb
nop
mov
addr16
sbb
mov
add
cli
xor
jl
inc
jns
lret
fcompl
test
xchg
or
loop
mov
aas
and
mov
sbb
jae
dec
and
jo
mov
xchg
rcr
mov
js
mov
mov
lret
stc
subl
xchg
sti
arpl
test
in
adcl
sub
dec
pop
call
or
mov
mov
rolb
mov
jg
shlb
int
imul
repz
push
dec
fldenv
and
in
dec
or
cwtl
cmpb
jge
roll
mov
cmp
pop
ss
xchg
jo
mov
ds
mov
cwtl
shll
mov
jno
adc
add
sub
mov
shl
inc
fisttpll
test
inc
in
push
jmp
push
push
xlat
jl
dec
mov
jnp
mov
dec
push
cmpsb
mov
inc
add
lret
rolb
movsb
mov
inc
js
dec
dec
jg
std
movsb
fldt
add
mov
push
mov
mov
outsl
inc
notb
std
insb
inc
pop
ds
ss
fs
cmp
mov
adc
inc
xchg
push
or
push
sbb
fwait
adc
mov
insl
pop
jle
sbb
pop
int
addr16
ret
lods
in
sti
das
fnstsw
ja
mov
es
xor
mov
jns
inc
ret
jo
adc
xor
mov
sub
dec
and
push
lahf
es
jae
divl
scas
xor
lea
bound
push
jg
or
xor
mov
push
scas
fildll
stos
adc
repnz
xor
mov
cli
pop
and
add
aam
push
mov
fisttpl
lods
imul
add
push
jle
mul
push
out
in
jae
inc
clc
cmpsl
adc
cmpsl
or
lahf
sub
push
pop
cmpsb
and
scas
cmp
jns
aad
jo
xchg
adc
xor
dec
xchg
dec
push
lods
andb
push
aaa
addr16
pop
aaa
jp
adc
add
iret
add
dec
ljmp
rcrl
mov
adc
mov
xor
clc
iret
js
mov
outsl
lods
dec
stc
add
mov
add
bound
into
add
xor
lahf
stc
sub
rorl
lret
mov
push
js
lock
inc
xchg
cld
jns
jb
data16
mov
sub
inc
jmp
add
rorl
mov
inc
mov
mov
cmc
pop
fnstsw
dec
fdiv
stos
pop
push
jne
repnz
cs
sahf
xor
leave
pusha
lods
xchg
test
int
out
lahf
xchg
lods
mov
inc
or
lahf
adc
mov
stc
cmpsb
jnp
repz
mov
movsb
push
add
and
daa
pop
and
sub
int3
mov
cmp
xchg
add
mov
mov
sbb
inc
sub
dec
push
loope
jg
pop
movsl
sarl
sub
cltd
add
sub
mov
das
cmpsb
mov
push
and
ljmp
fisttpll
xchg
xchg
jo
ret
addl
or
add
mov
fbld
cmp
notl
ja
mov
imul
inc
in
cmpsb
je
arpl
add
mov
jecxz
dec
jl
jnp
in
adc
idiv
popa
mov
les
jb
rcrb
leave
js
les
rcrl
cmpsb
cmp
or
mov
pop
inc
jne
jo
test
repnz
xchg
out
shlb
jo
push
and
fsts
stos
out
insb
in
sti
addr16
push
aaa
test
or
cli
aas
loop
add
es
xor
lret
cmp
cs
int3
mov
repnz
sbb
pop
adc
dec
cld
outsl
or
fnsaves
cli
pusha
fdivs
jecxz
and
push
lds
nop
dec
pop
mov
xchg
cmc
out
iret
mov
and
int
js
xchg
sarb
daa
inc
push
loop
push
inc
daa
js
test
or
mov
mov
bound
sbb
setle
jecxz
stos
ljmp
cmpsl
sti
cmp
out
pusha
lret
aam
test
jnp
rcrl
and
sub
les
fistpll
mov
sbb
sbb
xchg
mov
mov
adc
fnstsw
jecxz
test
push
jg
mov
cmp
jg
iret
inc
enter
add
cmp
fnstenv
inc
ljmp
push
pop
cmp
ja
xor
iret
pop
cltd
lea
jmp
xchg
push
cmp
test
xor
sub
pop
testb
leave
shll
cmp
cmp
stc
and
je
or
sub
adcl
push
mov
pop
neg
ret
sub
sbbl
jl
repz
fwait
addb
jle
add
xor
cli
enter
pop
cld
aad
pushf
pop
mull
adc
arpl
push
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
jg
cmp
out
incl
andl
lret
pop
mov
loope
or
enter
xchg
data16
test
sbb
sbb
jecxz
fldl
loopne
pusha
pop
call
daa
xchg
mov
in
mov
cmp
ljmp
es
div
pop
repz
sub
or
jb
or
mov
jle
jmp
pusha
add
push
dec
add
shlb
test
ret
and
nop
ret
pop
jge
test
jne
sub
or
add
xchg
dec
pop
repnz
in
dec
insb
push
leave
mov
ja
and
ret
mov
dec
sub
ds
pop
and
fwait
jle
lock
xchg
and
sub
inc
les
pop
shll
lret
inc
sbb
and
jns
xor
aad
sti
mov
loop
mov
lods
inc
mov
and
and
cmc
mov
push
lods
mov
fcomi
iret
jmp
xor
xchg
lock
rcr
dec
int3
jge
stos
aas
mov
dec
lret
sub
dec
scas
insb
int3
xor
cmpsl
cmpsb
mov
mov
loopne
loope
mov
imull
mov
cld
cwtl
dec
dec
xor
adc
cmc
stc
push
mov
cmp
sub
adc
jmp
pop
adc
cmp
pop
mov
cmp
xor
pop
int
and
mov
or
loope
out
ja
mov
xor
iret
cmp
add
jecxz
lret
iret
clc
cmp
icebp
push
jge
call
dec
ja
push
out
jnp
mov
cli
je
fldl
ret
andb
mov
mov
pop
enter
xor
push
mov
and
call
cmp
rorl
stc
test
pushf
cmp
jo
fisubrl
sbb
adc
add
sub
cmp
cmpsb
jns
dec
jae
fstpl
in
sahf
rcll
aas
mov
dec
push
aad
add
mov
inc
and
lahf
into
aaa
mov
aas
out
addr16
iret
xor
pop
rcll
pusha
or
sub
add
pop
jo
inc
or
mov
bound
dec
push
addr16
xchg
das
sub
jecxz
mov
lret
cmp
pop
mov
imul
sbb
fildll
ret
jp
mov
and
dec
jp
inc
cs
jecxz
imul
aaa
dec
insl
outsl
push
sarl
in
cmp
mov
sbb
scas
sbb
outsb
aam
cmp
lea
inc
inc
cmp
jmp
mov
inc
fs
fimuls
gs
mov
push
fs
nop
subb
popf
test
test
mov
pop
jmp
adc
jae
push
test
push
lods
js
mov
mov
jbe
lods
in
inc
lea
je
rorl
in
mov
push
dec
cmpsl
mov
cmp
pushf
or
mov
aad
rol
test
mov
adc
sbb
jmp
pusha
mov
xchg
rclb
loope
pop
and
scas
jl
aas
mov
pop
loop
pop
rcll
xchg
add
cmp
lret
ret
or
cmpb
test
mov
mov
dec
test
scas
cmp
cltd
rorb
pushf
xchg
fdivrl
adc
loope
nop
aaa
inc
js
pop
test
dec
in
jne
out
adc
or
or
dec
int
add
loopne
pop
ss
or
push
stos
addr16
jecxz
push
out
push
inc
enter
loopne
mov
pop
or
jmp
popf
ds
and
dec
aaa
sub
fists
mov
pop
stc
das
cmpsl
cli
notl
outsb
or
out
cmp
repnz
hlt
sahf
mov
insl
mov
je
cli
jmp
stos
add
push
pop
push
mov
cmc
cmc
pop
or
xchg
mov
mov
cmp
mov
xchg
dec
lret
sti
mov
and
xchg
xchg
mov
pop
dec
cs
xor
int3
mov
mov
andb
cld
ja
insl
test
test
or
stos
push
mov
sahf
rcll
pop
sub
jbe
push
pop
inc
pusha
outsb
xchg
add
inc
or
icebp
xor
pop
sub
in
ljmp
xchg
js
pop
mov
pop
les
or
mov
gs
xchg
jo
xlat
cmp
adc
cmc
mov
cmpb
aad
or
xchg
icebp
daa
sarl
sbb
cli
sbb
jge
mov
ljmp
mov
xchg
fdivl
xchg
dec
mov
mov
in
adc
xchg
jb
xor
mov
push
mov
sti
dec
mov
daa
push
xchg
adc
mov
jae
pop
mov
xchg
xor
or
in
xorl
or
mov
sub
lods
divb
je
and
inc
sub
popf
and
orl
jp
lret
out
int
or
and
fdivl
mov
mov
inc
adc
cmp
sbb
in
testl
pusha
fwait
inc
dec
pop
negb
jp
mov
icebp
leave
push
into
into
pusha
sub
sbbb
inc
icebp
sub
das
scas
sub
roll
sub
lret
cltd
cmpsb
pop
scas
sbb
ror
lock
mulb
mov
adc
xchg
sub
loope
push
dec
push
fildll
and
dec
adcl
das
sti
add
cs
sahf
iret
mov
and
bound
in
xlat
inc
sub
push
add
das
xchg
out
call
dec
stos
lds
pushf
adc
lock
movsb
add
inc
mov
mov
pop
or
pusha
movsb
loop
lea
inc
fcomps
and
fnsave
pop
xchg
addl
bound
fidivrl
jg
inc
ret
addb
jle
xor
mov
hlt
lock
mov
loop
loope
lret
test
jnp
jl
dec
xor
push
xchg
sbb
pop
and
iret
push
push
pop
stos
sbb
mov
leave
pop
pop
int
push
rcrl
rol
cwtl
adc
sub
lcall
repnz
xchg
shlb
mulb
repnz
xchg
mov
lea
ja
push
fdivl
ret
je
mov
xorb
jl
lods
jns
jl
and
aaa
lahf
and
jnp
mov
repnz
cmp
jl
add
stos
aad
mov
add
lock
cmpb
xchg
cltd
fs
mov
daa
ss
jecxz
push
scas
cmp
cmp
lret
pop
or
xchg
cltd
movsl
jmp
clc
jge
enter
insb
cmpsl
mov
les
sbb
das
arpl
jo
scas
dec
mov
inc
add
stos
ja
cmc
xchg
fs
cmc
jg
inc
jno
loop
loopne
mov
out
testl
mov
adc
repnz
cmp
loopne
sahf
int
ror
scas
iret
mov
inc
ret
mov
outsl
xor
mov
pop
and
fxtract
pop
cmp
push
xor
mov
inc
push
inc
push
popa
das
xchg
shl
cwtl
popa
adc
add
xor
sub
es
lahf
or
or
mov
mov
mov
mov
sarb
add
lret
cmpb
push
mov
out
and
das
fcompl
out
stos
pushf
push
and
sahf
add
adc
ds
xchg
and
call
jo
mov
adc
mov
jp
clc
ds
and
jl
icebp
add
xor
mov
and
scas
in
push
or
gs
pop
enter
fwait
lds
mov
std
push
dec
pop
mov
inc
or
arpl
shrb
in
int3
xor
jmp
in
and
pop
mov
pop
lods
mov
pop
cmp
pop
dec
inc
xor
test
and
mov
pop
add
add
sarl
mov
jmp
jne
shll
push
inc
lahf
jle
fldenv
adc
cmpb
out
stos
addr16
xchg
testb
mov
xor
jb
imul
pop
or
pop
lods
cmpb
mov
push
out
pop
xor
dec
sbb
push
add
rcrl
inc
and
mov
mov
jp
cmp
cmp
shr
jg
lock
jbe
jne
adc
mov
xchg
xchg
adc
aad
xor
cmp
lods
sub
mov
dec
xor
cli
pop
cmp
sbb
dec
shl
loope
mov
lret
shl
sti
popa
aam
jno
insb
lahf
insb
dec
lods
pop
pop
pop
fistps
inc
sahf
xor
push
test
mov
adc
pop
int3
pop
inc
jle
aad
inc
stc
xor
add
adcb
bound
test
sub
jae
cli
mov
pop
adcb
dec
cmp
int
outsl
pop
cmovne
lods
es
insl
and
pop
popa
das
sbb
loope,pn
add
aam
fsts
mov
inc
xchg
test
pushf
fnstsw
dec
and
xchg
out
sti
test
mov
jp
aas
sbb
inc
test
fwait
xor
push
aad
movsb
pop
pushf
data16
adc
xor
push
rol
js,pt
mov
jae
adc
mov
jmp
int3
dec
insl
fbld
pop
int
and
jl
push
jmp
adc
sub
stc
push
ret
adc
mov
xor
and
mov
sub
xlat
xchg
jno
sbb
fstps
insb
push
ret
dec
or
xchg
aas
or
jp
jo
add
sub
xchg
adc
xchg
and
cli
aas
cmp
pop
fidivrl
jb
test
push
and
or
pop
xor
pop
mov
inc
and
mov
and
cli
jecxz
xor
int
inc
and
dec
popf
test
mov
adc
std
fbstp
cld
lcall
pop
shlb
adc
ljmp
cld
fwait
lahf
negb
loop
mov
outsb
adc
repnz
mov
dec
or
cltd
popf
mov
jbe
xor
pop
andb
jmp
insl
je
xchg
lahf
mov
or
add
xor
sarb
out
bound
stos
mov
inc
insl
push
lcall
pushf
sti
push
dec
inc
push
lret
push
jno
iret
inc
out
stos
stos
xchg
out
pop
sbb
lret
iret
sbb
add
xor
pop
enter
add
and
fs
loope
rol
mov
pop
rcr
inc
mov
ljmp
repnz
lret
xchg
sub
mov
sti
mov
out
pop
pop
mov
push
cmpsb
dec
ret
mov
push
movsl
lds
in
fnstsw
sub
inc
add
fisubs
imul
daa
sub
je
xchg
addl
sub
fistps
cmpsb
pusha
mov
int
sub
sbb
jge
inc
insw
insb
pop
xchg
aad
mov
std
cmp
sarb
movsb
test
or
int
mov
cmp
js
xor
push
xchg
inc
push
xchg
int3
add
cmpsb
in
lods
out
and
jecxz
xor
inc
imul
loope
imul
addr16
push
daa
mov
pop
push
mov
out
jp
push
sub
pop
add
idivl
adc
cmp
and
mov
inc
enter
icebp
movsl
push
test
enter
mov
fildl
push
sar
cmc
mov
ret
aam
lret
mov
sub
test
cmp
xchg
jecxz
or
push
arpl
mov
push
loope
xchg
mov
sahf
cwtl
dec
popa
cld
mov
out
test
mov
lock
in
push
xor
mov
push
shll
sbb
or
xchg
dec
xchg
lods
jle
pusha
jp
and
lret
in
pop
stc
inc
jecxz
rcll
push
iret
js
movsb
mov
pushf
aam
cwtl
mov
bound
ficoml
jne
fs
scas
mov
mov
cltd
mov
jne
ljmp
mov
pusha
hlt
fdivp
sub
dec
sub
nop
mov
fcomps
inc
addr16
inc
subl
dec
ss
lret
insb
jle
icebp
int
push
mov
test
lods
sub
incb
xor
push
mov
outsb
ljmp
int3
dec
lcall
daa
hlt
jno
and
stos
insb
jo
dec
or
test
mov
xorps
ss
nop
push
mov
and
arpl
pusha
js
pop
or
xchg
push
pushl
sbb
push
cmp
adc
mov
push
dec
push
push
in
cmp
jg
pop
mov
push
in
int3
lret
in
inc
sub
add
mov
fcomps
shlb
sub
mov
nop
adc
mov
movsb
xchg
dec
sti
sbb
test
and
cmp
push
jo
scas
sbb
adcb
jbe
cmp
cmp
push
fwait
jecxz
icebp
xlat
xor
jnp
sub
sub
and
femms
bound
in
xchg
add
sub
fnclex
ljmp
cld
jmp
insb
cmc
mov
test
mov
sub
or
in
xchg
je
loopne
in
bound
out
outsl
incb
or
mov
mov
test
lcall
or
or
std
sub
lods
cs
je
int3
jae
dec
shl
add
scas
outsl
test
movsl
jb
cmp
push
cmp
sub
cwtl
inc
push
xchg
nop
xchg
arpl
es
mov
cld
sub
xor
rclb
sub
cmpsl
cmp
dec
mov
mov
add
rcr
push
xchg
test
mov
push
and
aam
aaa
ja
aas
mov
repz
sub
fdivrl
jl
mov
lock
cmp
xchg
sub
jno
jnp
and
xor
mov
das
mov
sub
arpl
ss
cwtl
dec
test
stos
push
sbb
lods
xor
push
das
mov
ljmp
sbb
xchg
jl
xor
ljmp
pop
jno
cwtl
je
stc
push
movsl
rorb
and
jb
inc
xchg
loop
mov
movsb
xchg
dec
aad
xchg
inc
jb
or
jb
sarb
pop
fwait
gs
push
pushf
repnz
add
mov
pop
mov
add
jb
imul
aam
pop
and
pop
inc
lods
jae
das
sbb
stos
pop
push
cmp
push
faddl
aam
mov
jl
icebp
mov
pushf
cmp
push
sub
sbb
fsubs
adc
stos
add
sub
push
mov
fisttpl
fwait
add
leave
xchg
lods
sub
int
xor
jno
xchg
jp
xchg
jge
test
pop
dec
dec
dec
xor
xchg
aas
mov
les
popa
pop
or
mov
fimuls
inc
repnz
inc
mov
cmp
push
push
sahf
bound
xchg
leave
mov
pop
add
xchg
push
daa
mov
cmp
gs
or
testb
or
mov
fadds
adc
sub
ja,pn
lcall
jge
arpl
cs
inc
mov
ds
adc
aaa
outsl
je
mov
icebp
loop
inc
xor
sbb
mov
loope
je
jecxz
imul
xchg
xchg
fbstp
js
iret
xor
mov
leave
and
adc
aaa
clc
int3
jg
pop
jecxz
sti
clc
and
out
jb
hlt
xchg
int
push
shl
push
std
dec
out
and
sarl
nop
sub
sub
jb
push
sahf
int3
sbb
enter
les
sbb
out
mov
shrl
or
bound
in
xchg
mov
sub
pop
pop
cmp
jb
ds
and
fstl
mov
sub
xor
bound
fidivs
cmpl
xchg
or
sbb
movsb
insb
sbb
pop
fnsave
aaa
add
cmp
pusha
jae
aaa
cmp
mov
cmp
jp
cmp
and
adc
sub
mov
xchg
jae
fwait
int3
arpl
jnp
jno
jno
or
pop
pop
sub
fucom
mov
repnz
jbe
add
add
fimuls
lods
sbb
mov
add
lods
mov
mov
cs
mov
clc
sahf
jle
es
inc
fldl
popa
hlt
xchg
js
aam
int
out
xchg
sbb
mov
or
scas
dec
mov
inc
test
sbb
add
test
xor
pop
jnp
fstpl
notl
adc
inc
outsb
imull
mov
or
push
sarb
inc
ja
das
or
ljmp
fstl
popa
cmp
mov
js
sbb
insl
cld
jmp
xchg
daa
aad
cmp
lahf
movsb
dec
test
mov
nop
and
dec
dec
and
mov
into
in
aaa
mov
loope
mov
out
jne
fistpl
push
movsb
lahf
jae
mov
lea
push
lcall
sti
mov
pop
sbb
dec
xchg
sub
dec
lahf
jp
dec
adc
inc
cli
mov
stc
movsb
icebp
mov
shrb
and
or
cmp
cmp
movsl
rorb
dec
aas
out
push
fiadds
cld
jnp
frstor
sbb
movsb
or
popa
dec
ror
hlt
rolb
pop
andb
jp
and
dec
push
rcrb
jecxz
gs
add
sbb
in
mov
jns
push
sbb
icebp
dec
jge
and
sbb
call
sbb
ret
mov
bound
jg
notb
hlt
or
jo
outsb
adc
aad
jo
and
rclb
sub
jl
pop
idivb
push
mov
lret
xchg
pop
adc
call
movb
jp
push
sub
cld
xor
sub
insl
adc
ss
jg
dec
or
sbb
imul
insl
cmpsl
decl
xor
push
mov
push
je
imul
aam
push
jb
xor
sub
lcall
fildll
and
loopne
mov
sub
cmp
jae
cltd
inc
es
mov
and
jb
jae
scas
mov
pop
loopne
add
mov
mov
stos
or
popa
adc
xlat
jne
nop
in
shrl
ret
movsl
mov
sub
add
or
push
mov
cld
clc
test
inc
mov
repnz
insl
jo
scas
in
das
add
add
push
mov
jge
lret
idivl
mov
push
mov
add
idivb
cmp
out
dec
sbb
lock
stos
or
push
ret
mov
ret
mov
jge
dec
and
add
fwait
add
pop
cmp
sub
mov
jge
pop
popa
sub
cmp
add
pop
inc
dec
into
ss
cs
and
mov
not
fistpl
into
xchg
push
xchg
mov
cltd
jo
adc
push
mov
fisubs
cmp
ffreep
iret
popf
fmull
cmp
push
push
pusha
jecxz
xor
repnz
sahf
iret
xchg
sub
dec
ffreep
iret
push
scas
in
adc
fldcw
les
mov
mov
popf
xchg
cmpsb
call
shl
stc
sub
daa
fldl
xorl
popf
loop
repnz
xchg
fcoms
inc
mov
mov
pop
lcall
cmp
outsb
stos
pop
mov
cmp
fwait
mov
les
jne
mov
hlt
jg
mov
adc
jnp
jmp
cld
mov
popf
je
jnp
dec
xor
int
fnsave
popa
jae
mov
inc
out
outsl
mov
loopne
and
repz
cmp
mov
aam
outsb
inc
scas
aad
push
clc
leave
xorl
ljmp
add
test
movsb
lahf
sbb
pop
loope
cmp
ds
stc
insl
repz
lods
xor
inc
lret
insl
jo
jg
xor
pop
dec
cmpsl
iret
jge
add
out
inc
mov
inc
mov
xchg
jle
mov
hlt
xchg
adc
out
sub
jg
inc
mov
pop
addr16
mov
xchg
add
jmp
pop
in
out
in
sbb
rolb
push
hlt
adc
sti
jle
mov
xor
testb
test
cmp
call
mov
fsubs
pop
mov
ret
and
and
loop
insl
pusha
xchg
ficompl
js
adc
into
data16
in
mov
out
hlt
iret
push
dec
sub
xor
adc
xlat
stos
fisttpll
les
movb
sarl
lods
bound
mulb
cmp
adc
call
call
dec
and
rcl
cmp
lret
sbb
xlat
mov
push
fcmove
jnp
stc
in
repnz
sbb
repnz
shl
testl
jbe
icebp
push
or
scas
add
pop
cld
add
xor
mov
cs
dec
out
mov
fsts
jns
out
xor
xor
lret
pop
xchg
push
clc
sbb
loop
add
into
loopne
dec
jle
jecxz
xor
jne
fsubrl
mov
hlt
cld
in
pop
or
pop
test
dec
bound
repz
jns
jp
adcb
sub
pushl
jmp
mov
insb
lea
lods
std
pusha
jge
cmp
call
dec
lahf
mov
test
mov
int3
int3
sub
xchg
push
dec
mov
sub
add
in
sub
and
xchg
sub
rolb
sbb
sub
fisttpll
mov
in
ljmp
cwtl
aad
mov
jg
movsb
flds
das
jle
loop
jns
xor
push
repz
test
jge
in
mov
fmull
int3
aad
xor
lret
gs
fwait
or
cmp
jp
or
mov
in
xchg
mov
das
out
cmp
push
adc
sbb
sbb
and
movsb
push
or
mov
mov
sub
jmp
mov
lds
jns
mov
cmp
inc
pop
sub
in
jnp
xlat
xchg
push
xor
js
aam
xchg
scas
pop
mov
xor
in
test
mov
dec
cmpsl
repnz
fcomp
andb
mov
mov
cmpb
into
cld
push
xor
or
pop
mov
sahf
and
outsb
xchg
push
jne
bound
mov
repz
jno
mov
lahf
scas
inc
enter
pop
lock
notb
repz
gs
ss
es
push
jecxz
adc
fs
cs
push
dec
mov
outsl
cmpb
push
or
jmp
and
int3
gs
pop
sahf
add
ja
lock
and
cmp
lcall
imul
dec
jmp
dec
cmc
imul
xor
push
fucom
mull
pop
insb
adcl
movsb
adc
xchg
pop
nop
and
pop
sti
lea
jg
cmp
mov
lret
cltd
and
shr
fwait
ret
scas
sub
mov
and
push
ds
dec
xchg
pop
dec
inc
fucomip
mov
mov
jne
xor
pop
push
xor
loop
push
add
inc
movsb
push
leave
in
int3
mov
mov
stc
cli
mov
int
icebp
enter
lret
in
fbld
xchg
or
das
stos
cmp
insb
sti
or
sub
mov
lock
pop
sub
cmp
and
aam
mov
mov
out
and
stc
aad
and
shr
lret
add
lahf
or
pop
sub
and
rolb
stc
mov
jle
inc
lods
jp
xorb
cmpsl
rcll
pop
inc
cmp
pusha
imul
nop
or
sub
negb
addl
xchg
xchg
cmpsb
xor
mov
ja
outsl
mov
dec
mov
xor
push
jp
pop
pop
js
xor
fwait
subl
add
xor
jle
xor
add
mov
xchg
mov
mov
inc
lock
dec
mov
xchg
rcrb
mov
sub
int3
mov
push
adc
mov
mov
icebp
stos
mov
push
inc
popf
ja
xchg
nop
in
or
pop
daa
dec
pop
repnz
jbe
int
jo
inc
mov
dec
ja
push
iret
jae
adc
or
notl
sbb
sub
mov
and
enter
sub
outsl
xlat
xchg
cmpb
call
inc
scas
mov
inc
fstl
aad
dec
fmul
insl
and
addb
add
push
dec
stc
mov
jbe
adc
sub
popa
mov
cmp
pusha
addl
mov
fsubl
insb
popf
xor
mov
inc
adc
js
inc
mov
sbb
popf
cld
outsl
daa
dec
rcll
sbbl
cmp
imul
xlat
es
fsubl
jp
outsl
int
or
sbb
test
ud2
test
pop
pop
inc
pop
data16
divb
jecxz
std
stc
push
mov
bound
push
pop
mov
out
push
jecxz
dec
mov
jg
negb
xor
movsb
bound
sub
jg
dec
jno
mov
cli
aad
and
aad
push
lods
add
cmp
mov
int
push
xor
xorb
lahf
dec
popf
jo
in
je
xchg
push
sbbb
cli
outsl
pop
jp
movsb
loop
cmp
in
scas
dec
je
sbb
sbb
imul
negb
ja
push
inc
jge
sahf
sbb
cmp
xchg
or
in
mov
pop
push
negl
jae
cmpsb
insl
xor
or
pop
add
dec
stc
cld
aad
out
or
outsb
fwait
negl
dec
cmp
leave
decl
xchg
std
pop
data16
out
mov
loop
std
outsl
xchg
cwtl
jge
cmp
cld
xchg
cwtl
mov
mov
and
cmp
cltd
je
mov
aaa
or
cmp
std
jne
mov
negb
imul
jb
repnz
clc
add
add
les
jae
xchg
pusha
push
out
xchg
test
mov
insb
xchg
outsl
add
sarb
jns
cmp
jmp
jl
sbb
int
cmp
repz
jo
jo
mov
es
inc
cli
and
cs
dec
jo
iret
push
sahf
mov
pop
mov
ret
nop
dec
and
cli
xchg
mov
cmpsl
cmpsb
fnstsw
into
mov
fsubrs
jno
jno
outsl
dec
and
mov
jecxz
sub
jge
nop
fadds
insl
push
push
faddl
jge
out
jno
fnstenv
or
arpl
movsl
mov
adc
pop
mov
push
pop
mov
inc
fnstsw
push
orl
sbb
push
pop
nop
sarb
addr16
lea
pop
incb
jmp
mov
xor
and
adc
sub
adc
jbe
fistpll
scas
not
loope
sbbl
cmpsl
xchg
je
push
pushl
ret
repz
xchg
lret
leave
test
es
mov
or
xlat
outsb
mov
fwait
xchg
ret
sbb
outsl
ja
es
andl
adc
ljmp
cmp
inc
mov
and
scas
test
test
sbb
xor
lods
call
jge
or
lods
fst
add
aad
sub
push
lret
push
push
lods
sbb
add
test
aaa
dec
arpl
hlt
adc
and
mov
jle
add
xchg
push
rol
ret
dec
mov
es
fwait
jae
je
aas
or
jg
push
jmp
add
xchg
je
sub
scas
mov
les
imul
scas
pop
mov
cmpl
popa
mov
shlb
jo
cld
xchg
clc
jnp
sbb
add
push
mov
in
or
comiss
insb
and
dec
ss
xchg
je
inc
fs
pop
pop
push
pushf
lcall
adc
jb
add
jns
adc
in
in
push
das
pusha
int3
lcall
aas
pop
outsl
mov
push
jge
sbb
mov
cmpsl
sub
lds
lret
ret
ss
mov
push
repnz
fstps
daa
test
xchg
dec
cmp
add
nop
popa
jge
jl
inc
push
ret
push
pop
sub
mov
fs
push
cs
je
out
stos
out
jg
mov
sahf
mov
cltd
pop
mov
mov
loopne
shrl
mov
lea
push
jbe
sahf
mov
pusha
mov
jbe
js
push
rcr
add
xchg
xor
cmc
call
pushf
stc
fcoms
fiadds
cmp
add
inc
xchg
cld
flds
in
mov
icebp
cli
popf
scas
inc
stc
xchg
call
lods
add
in
sahf
loopne
dec
mov
push
nop
xor
sbbb
vpackssdw
cmpsl
add
pop
in
loopne
es
pop
inc
dec
roll
sub
or
xchg
adc
sbb
repnz
dec
inc
push
subl
dec
dec
mov
mov
jmp
in
mov
xchg
cmpsb
arpl
xor
jb
fs
in
popa
loopne
ficompl
rolb
or
out
je
and
adc
mov
xchg
push
add
xor
xor
lock
call
testl
repz
es
jno
loope
insb
loope
outsb
xchg
mov
mov
pushf
cmpsl
cmpsl
mov
inc
xchg
ds
xchg
sub
mov
test
rol
inc
fistpll
ffreep
in
outsb
add
mov
xor
int
mov
push
hlt
sub
adc
mov
rorl
inc
add
stc
mov
insb
inc
xor
stc
daa
inc
hlt
ret
and
mov
shrd
jecxz
xchg
nop
dec
add
mov
pop
test
sub
xlat
sub
jmp
mov
enter
fdivl
add
and
jle
test
inc
repz
add
push
jae
mov
and
dec
jp
mov
mov
or
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
mov
fildl
andl
adc
imul
add
rcrb
bound
inc
inc
mov
bound
pop
inc
stos
inc
jns
cs
pop
andl
mov
mov
jg
pop
dec
xor
or
sub
in
cmpsl
push
dec
add
out
notb
cltd
pop
sbb
ds
and
imul
mov
inc
xchg
sbb
sub
ret
enter
jle
cmc
outsb
hlt
cmp
pop
inc
mov
mov
push
jl
xchg
repnz
mov
cmp
and
xchg
test
xchg
lcall
jns
or
cmc
outsl
lcall
jmp
jle
or
leave
int3
insl
outsb
enter
sbbl
jge
insb
int
mov
push
mov
mov
scas
xchg
popl
xchg
push
push
test
cmp
popf
pop
sti
dec
lds
arpl
nop
cmpsl
inc
pop
mov
rorb
jne
mov
mov
or
cmp
dec
lahf
adc
mov
mov
sub
jbe
dec
les
pop
mov
out
sbb
add
xor
outsb
pop
add
aad
mov
lret
mov
lahf
arpl
jmp
lods
pop
aas
fst
scas
testb
ficoml
mov
adc
insb
inc
out
sbb
insb
flds
inc
push
and
xchg
sub
call
cmp
aaa
decb
test
fwait
sti
pusha
or
lods
mov
in
fldenv
adc
lds
test
outsb
and
and
or
jle
cmp
cmp
push
fldl
aaa
sbb
fwait
or
mov
mov
js
rclb
insb
cmpsb
fnstsw
and
inc
test
add
adc
jb
fwait
adc
and
ficoms
sbb
jmp
fxam
call
mov
movsl
adc
cmp
je
jmp
insl
cmpsb
lods
jae
cmp
stc
insb
push
repz
stos
mov
lods
in
push
and
mov
iret
cltd
movsb
jp
fimuls
jmp
adc
xorb
ret
lea
jnp
mov
push
incb
aaa
or
jno
jno
data16
mov
in
in
push
lahf
sar
push
insl
adc
int3
dec
lea
mov
pop
das
xchg
clc
pop
rorb
add
cmp
mov
cmc
mov
push
jnp
test
mov
and
sub
sub
loopne
int
ja
cmc
ss
rcl
loopne
jl
xor
jg
jno
lds
test
insb
inc
inc
mov
aam
sahf
in
mov
xor
mov
in
sub
pop
push
jp
add
add
mov
dec
ficoml
mov
xchg
pop
imul
test
out
mov
inc
xor
inc
mov
or
dec
cmp
or
inc
or
rcll
nop
in
xlat
xchg
mov
jecxz
je
test
test
sbb
xchg
rcrl
sbb
ds
mov
jae
mov
xchg
xchg
repnz
outsl
test
sbb
fisubrl
mov
push
xor
fcomip
adc
pusha
push
sub
decb
push
cmp
es
mov
dec
lret
out
pop
js
xchg
and
repz
stc
push
adc
pop
jne
popf
loop
push
or
xor
mov
movsl
mov
int
push
int
mov
push
jb
xchg
enter
mov
and
dec
xchg
mov
bound
mov
pop
xchg
fwait
ret
addps
or
sbb
hlt
cwtl
stc
push
add
xor
out
in
daa
test
sub
jge
ss
out
mov
jmp
jne
clc
mov
jo
lock
iret
jo
xchg
inc
push
movsb
mov
dec
out
jge
inc
xchg
mov
mov
rol
dec
test
pop
and
cmp
jbe
lret
push
jne
sub
pop
mov
pusha
popf
dec
and
or
cwtl
cmc
std
jns
push
xor
subl
push
mov
and
pusha
test
das
mov
dec
jg
push
mov
jge
sub
rcll
add
xchg
jb
or
xor
ss
fs
lds
fnstcw
fs
adc
orl
shll
pop
push
inc
andl
arpl
test
xchg
add
add
cs
mov
and
cmp
pop
dec
and
mov
mov
mov
push
or
mov
sbb
push
out
dec
aaa
lret
jns
jb
mov
popf
adc
and
sti
or
test
mov
int3
add
aad
repz
jg
cmpsl
lret
jo
adc
lcall
in
fucomp
in
insb
lock
sbb
lock
sub
jne
inc
or
xchg
data16
fnstenv
push
mov
inc
push
lock
insl
mov
or
int
into
inc
aad
mov
and
mov
stos
xor
add
add
jmp
add
faddl
mov
and
jnp
sub
rol
fnstenv
movsb
and
fstps
pop
inc
ja
cld
or
and
outsl
fwait
clc
add
jne
push
roll
rcrl
inc
sub
mov
jae
test
cmp
gs
daa
push
mov
lret
insl
cmc
movsl
sbb
xchg
adc
imul
lahf
roll
js
lea
call
jae
popf
cs
mov
sub
iret
xchg
sti
ja
and
sarl
jmp
jae
cmp
pop
mov
push
or
push
out
push
add
in
xchg
das
test
enter
je
sub
jp
push
rclb
sahf
aam
ret
jle
push
add
icebp
xor
lds
fcoms
movsb
push
jge
lea
xor
int3
fisttpl
shrl
gs
inc
hlt
push
imul
jb
out
mov
bswap
in
movsl
out
cmpsl
ss
sub
pop
xchg
and
insl
movsl
and
adc
decl
aam
int3
rclb
mov
adc
aad
mov
sub
push
insl
test
shlb
jmp
push
ljmp
insl
jecxz
cmp
push
es
sbb
out
aad
ficoml
add
mov
inc
cwtl
test
lds
mov
std
aam
dec
fstpt
dec
sti
inc
sbb
sbb
subl
mov
sub
lods
xor
movsl
and
imul
cmp
movsb
fsubrs
adc
adc
inc
or
push
mov
or
popa
or
cmpsb
push
add
mov
jg
adc
addr16
fs
xchg
mov
rclb
mov
sbb
and
cmpsl
adc
dec
cs
fstps
in
or
cltd
into
in
stos
into
ret
test
add
daa
hlt
into
add
and
outsb
pop
push
ds
and
and
in
inc
js
sbb
mov
or
imul
gs
pop
push
inc
or
sub
sbb
and
nop
lea
aaa
rcl
sbb
pop
test
and
mov
sbb
xchg
fmuls
lods
testl
jae
stc
jo
dec
cmp
pop
stos
lock
lds
fstps
pop
sar
mov
test
xchg
cwtl
push
mov
outsl
dec
or
mov
ljmp
sar
sbb
push
jmp
inc
adc
mov
ret
xchg
pop
ret
mov
xchg
iret
jo
and
inc
fs
daa
push
push
insl
imul
push
jp
push
notb
hlt
in
out
pop
xor
lods
jecxz
dec
lods
insb
fs
lods
jge
outsl
xor
mov
nop
enter
xchg
mov
dec
pop
dec
testb
imul
or
mov
fidivrs
std
pop
lock
loope
je
jl
push
fdiv
mov
xchg
adc
mov
mov
and
and
sbb
jb
mov
mov
rcrl
cmp
sbb
lret
sbb
push
fwait
mov
mov
and
imul
sub
push
test
mov
sub
outsb
jo
bound
jg
adc
and
movsb
sub
sbb
jmp
ret
cmp
push
fwait
mov
leave
das
es
dec
movsb
dec
mov
out
jae
mov
mov
xchg
test
mov
adc
inc
mov
cmp
ret
push
xlat
jb
add
mov
inc
push
mov
cmp
dec
lcall
jmp
add
mov
xchg
clc
sbb
pop
bound
dec
adc
pop
lcall
jb
sbb
fsub
leave
dec
loopne
movsb
ret
pop
insb
les
rcr
push
ljmp
icebp
in
in
pop
cmp
stos
nop
cmpsl
aad
or
adc
int3
sub
sub
push
fimull
out
push
mov
cmp
je
or
push
rolb
out
test
mov
push
data16
or
or
jmp
pusha
jle
iret
xchg
fwait
rolb
cmp
arpl
pop
ds
push
popa
pop
js
test
or
adc
iret
popf
pop
xor
jne
jl
or
jmp
jno
icebp
xlat
stos
xchg
jmp
pop
jbe
sub
scas
inc
xchg
lahf
daa
decb
and
fists
pop
aaa
or
int
sbb
adc
sahf
and
imul
xchg
in
sti
adc
and
inc
notb
xchg
pop
jmp
sub
jecxz
in
scas
mov
dec
lea
dec
lret
ss
or
push
hlt
mov
je
popf
aas
lret
test
sbb
pusha
xorb
jge
arpl
xchg
add
ds
or
xor
sub
or
mov
loopne
inc
dec
iret
sar
dec
push
stos
outsl
push
mov
xor
cs
cld
and
in
arpl
rorl
dec
inc
xor
pop
jbe
rcr
xchg
in
loopne
in
xchg
mov
xchg
xor
jmp
and
sbbl
xlat
in
add
or
stos
inc
push
ds
test
imul
and
jns
mov
jp
fadds
push
sbb
xchg
icebp
xor
fiadds
xchg
aad
roll
div
pop
in
stos
and
mov
push
jge
xor
hlt
roll
pop
int3
mov
xchg
test
inc
dec
loope
pop
sbb
xchg
xorl
mov
aaa
and
mov
cld
xchg
insb
insl
bound
sbb
popa
or
push
xchg
dec
jmp
dec
arpl
inc
ds
lcall
and
jb
push
adc
mov
xchg
mov
gs
packssdw
dec
mov
sbb
insl
in
mov
dec
fsubl
jbe
xchg
mov
cmpsb
pusha
insl
and
push
xchg
lods
mov
mov
add
mov
clc
xor
sbb
shl
mov
xchg
movl
mov
sahf
pushf
add
inc
addr16
cmp
mov
xchg
sti
ljmp
add
lret
push
dec
lahf
sahf
sbb
into
jg
pop
push
flds
pop
pop
mov
aam
cmp
jo
push
loope
add
mov
pop
cmp
mov
inc
mov
movb
lret
clc
cmp
jp
lret
lods
xchg
mov
rol
into
jle
jl
add
imul
push
dec
ret
jbe
aas
repz
fcomps
adc
mov
aad
and
push
sub
jp
xor
mov
xor
mov
mov
xor
or
aaa
shlb
in
cmc
sbb
icebp
push
repz
or
fidivrl
dec
mov
mov
mov
dec
cmp
adc
std
or
add
fisttpl
icebp
dec
cmp
out
cs
outsb
jp
dec
push
dec
push
ficomps
xorb
cli
in
pop
es
pushf
imul
push
jne
sub
or
dec
addb
movsb
or
mov
mov
inc
pop
and
add
call
xchg
setno
adc
push
inc
repz
pop
daa
inc
xor
sbb
test
fcompl
sysexit
jl
push
xchg
add
ljmp
adc
xor
ds
push
sub
ljmp
jnp
xchg
adcl
mov
jnp
push
fldl
mov
aaa
xor
and
into
enter
or
adc
xchg
repnz
or
fmul
mov
mov
jecxz
jge
test
ficoml
cmp
mov
cmp
mov
aam
inc
stos
idivl
notb
lods
sahf
mov
cld
mov
inc
cmc
gs
mov
insl
xor
fbstp
aas
push
movsb
push
rolb
sub
rorl
mov
jnp
mov
addr16
adc
jle
adcl
arpl
imulb
ret
sub
adc
sub
jb
ds
inc
punpckhdq
xchg
jg
and
fmul
mov
fwait
and
jmp
jmp
adc
ds
leave
jecxz
jno
mov
ds
jmp
daa
mov
push
out
into
push
mov
bound
fmul
arpl
aad
inc
adc
mov
and
fistl
inc
stos
cli
es
adc
mov
mov
fldenv
mov
movsb
xor
dec
pop
cs
out
adc
sub
fsubrs
pop
adcl
push
fdivp
and
in
mov
dec
movsb
loope
int3
xchg
push
mov
jnp
lret
dec
push
adc
cmp
and
cmp
outsb
popa
mov
push
mov
push
xor
fsubp
iret
xchg
cmp
hlt
dec
mov
jbe
mov
sub
andb
pop
cmpsl
xor
xchg
pop
ss
dec
jne
insb
daa
ds
push
les
popa
hlt
or
mov
add
test
and
jne
pop
movsl
test
pushl
sbb
push
inc
repnz
nop
mov
pop
or
daa
pop
or
not
out
adc
fldcw
rcll
sbb
mov
mov
in
cmp
inc
rcrb
and
fwait
into
sbb
jecxz
cs
and
lcall
ljmp
sbb
push
cwtl
cmp
add
bound
lods
or
mov
inc
dec
mov
push
xchg
add
stos
mov
fwait
lea
mov
sub
add
or
cmpsl
fwait
pop
or
adc
push
insl
xor
out
cwtl
xchg
mov
sahf
pushf
cmpsl
hlt
je
pusha
jno
mov
sti
pop
rcrb
mov
outsb
xchg
pop
and
sbb
aam
dec
push
cwtl
and
cmp
out
push
push
pop
leave
and
add
xchg
sub
xchg
cmp
cli
mov
cld
and
adc
adc
inc
mov
jno
mov
pop
idivl
mov
push
sub
scas
inc
fwait
pop
fdecstp
jg
mov
call
loopne
dec
arpl
les
mov
rolb
out
pop
lcall
fsubrp
adc
inc
loop
sbbl
pop
mov
push
adc
sub
fsubr
fs
lret
mov
sub
push
pushf
push
and
mov
xor
jo
jmp
dec
in
mov
repnz
loop
stos
in
mov
lods
mov
pop
or
nop
pop
or
mov
ss
mov
sbb
xor
lods
lods
adc
lea
leave
in
icebp
jmp
fstps
inc
loopne
add
cmp
mov
sbb
out
enter
in
xchg
das
cmp
pop
jb
add
pusha
dec
mov
enter
mov
rcr
add
cmpsb
xor
mov
addr16
and
jge
cmp
das
push
ljmp
sub
repnz
fcomps
popa
xor
cltd
jo
mov
fidivs
inc
mov
pop
jno
lods
pop
mov
add
push
mov
mov
pop
mov
push
jbe
insl
mov
bound
loop
daa
lock
lahf
mov
sar
je
mov
rcr
aaa
sarb
dec
leave
jno
int3
jmp
fstl
push
xchg
push
add
dec
mov
xor
imul
sbb
loopne
ss
pop
mov
lahf
repz
add
mov
int3
add
sbb
xor
arpl
jl
adc
sarl
int3
and
push
cwtl
pop
out
xor
pusha
cmpsb
mov
ljmp
sub
pop
out
aad
fisttpll
mull
lret
nop
push
cs
adc
lea
pop
in
in
mov
lahf
lock
dec
lahf
adc
jp
idivl
fildl
or
mov
sub
add
loop
ret
les
and
or
les
sarl
and
out
imul
lret
addl
mov
test
pushf
add
cli
sub
and
clc
cmc
jg
jne
lds
loope
push
adc
xchg
pop
sbb
mov
xchg
mov
inc
add
rcrb
inc
jns
lahf
aam
jl
jmp
xlat
xchg
shlb
push
mov
xor
pop
ret
push
popf
lods
cmp
int
fldt
mov
xchg
popf
pop
xchg
or
addr16
or
loope
inc
xchg
dec
outsb
fs
mov
xor
add
fwait
push
fdivs
pop
lods
or
ljmp
pusha
or
mov
shrl
in
dec
xor
out
movntq
fadd
cmpsl
sbb
fistps
mov
in
add
pop
notb
imul
outsb
jecxz
outsl
into
push
mov
mov
or
fists
pushf
mov
pop
ds
xchg
es
outsb
push
test
iret
aas
fisttpll
mov
mov
jnp
xorb
es
loopew
push
mov
dec
ret
mov
cwtl
fs
sbb
sbb
fidivrs
dec
das
push
mov
push
popa
xlat
inc
cld
in
in
int3
insb
add
stos
ret
js
push
jae
ss
fstpl
shll
mov
cmp
shll
fiadds
and
out
sti
cli
or
inc
imul
jle
mov
gs
push
push
arpl
leave
out
lods
fwait
add
pop
cmc
std
mov
jb
jge
xchg
mov
and
add
pop
mov
xchg
mov
dec
cmp
mov
mov
fsts
dec
add
sub
pop
push
in
das
inc
les
aaa
rcl
rolb
divb
repnz
adc
mov
pop
cmp
inc
jo
push
popf
pop
mov
pop
push
sub
mov
xor
jl
jl
int3
int3
xchg
or
cmp
hlt
pop
jecxz
push
cltd
cmp
loopne
sub
aaa
stc
arpl
mov
ja
in
xlat
inc
into
test
mov
sub
and
cmpsl
cmp
cmc
popa
loope
dec
push
lret
rorl
les
or
cmpsl
icebp
push
xor
outsl
aaa
test
mov
xchg
sti
push
das
sbb
rcll
fbld
xchg
push
mov
ror
xchg
cmpsl
das
lcall
inc
cmp
les
sub
or
cmpb
jo
ss
inc
push
popa
adc
sbb
movsl
lods
mov
aas
repz
mov
push
mov
repnz
sub
sti
push
psrld
and
arpl
mov
xchg
icebp
mov
and
movsl
mov
inc
add
xchg
mov
clc
mov
sub
in
cmp
push
lea
nop
adc
push
add
cmp
or
mov
pop
cmp
cs
xor
sahf
shlb
jbe
cli
loope
iret
add
ret
insb
sbb
dec
jb
mov
dec
adc
stc
dec
inc
sti
xor
jecxz
mov
mov
test
hlt
pop
push
aam
dec
mov
enter
popf
jb
dec
jmp
mov
shll
add
sbb
popf
in
mov
iret
fisubrl
and
and
fisttpll
cmp
imul
sbb
dec
scas
pop
lcall
idivb
mov
adc
pusha
stc
push
adc
pushl
push
daa
imul
in
push
sbbb
xor
fwait
nop
lret
mov
inc
mov
xor
enter
adc
inc
test
sbb
cs
in
sub
dec
cmp
test
xchg
adc
movsl
rol
push
xchg
repnz
add
mov
sbb
hlt
addr16
divl
push
add
outsb
fwait
lods
out
pop
pushf
xor
es
in
int3
outsl
jmp
cmp
filds
inc
bnd
mov
mull
ljmp
loopne
cmp
int3
mov
sti
fdivrs
xor
inc
fildl
popf
sbb
fs
mov
lret
inc
iret
test
ret
aas
fdivrs
jmp
mov
out
xchg
insl
dec
mov
cmovne
std
dec
jecxz
loop
testl
adc
cmpl
dec
or
inc
jbe
adc
sbb
pushf
addl
sahf
pop
xor
ret
mov
mov
mov
cli
sahf
sub
jbe
sbb
sbb
sbb
lcall
dec
hlt
stc
je
xchg
sbb
jae
jb
adc
stos
push
sbb
inc
or
movl
fnsave
and
ret
outsl
mov
mov
cli
loopne
ss
xchg
icebp
jne
js
outsl
in
and
mov
push
mov
orb
lret
cmp
mov
scas
sub
or
mov
xor
dec
xor
cmp
jbe
or
xor
sarl
xor
cmp
hlt
aam
or
sahf
test
pop
push
mull
sbb
lret
and
imulb
rdpmc
or
imul
jne
iret
cmpsl
inc
xchg
icebp
lret
sub
sbb
loop
gs
ficoml
lret
cmpsl
or
gs
mulb
incb
ja
scas
pusha
adc
dec
jo
out
mov
or
mov
lret
rolb
and
mov
mov
movsl
push
xchg
fisttpl
pop
shrl
cwtl
adc
push
push
mov
xor
mov
std
pushf
insb
mov
push
std
push
mov
xor
cmp
mulb
add
mov
push
ror
jle
xor
or
adc
mov
sarl
cs
fdiv
adc
loopne
cmp
xchg
jmp
cltd
or
xor
test
testb
pop
pop
xchg
dec
push
pop
mov
xor
mov
filds
sarl
adc
cmpsb
daa
pop
push
xchg
mov
push
stos
js
mov
lret
jg
push
fs
js
add
jge
dec
push
inc
aas
sub
sbb
or
cmp
sub
push
out
lret
xchg
lret
pop
or
lock
adc
xor
jle
dec
iret
jle
push
and
or
pusha
inc
mov
jbe
ret
xor
imull
loopne
add
mov
loopne
mov
fsubl
xchg
cmp
jl
mov
xchg
push
inc
lret
xor
sti
cmovl
cmp
cmpsb
mov
push
jmp
nop
pop
mov
aaa
int
idiv
jecxz
and
cld
xor
movsb
xor
mov
cli
dec
lods
and
sbb
add
add
enter
mov
mov
int3
pop
jae
pop
xor
mov
or
and
sub
xchg
outsl
xchg
into
jb
xchg
push
lahf
pop
jp
ret
clc
pushf
sarl
or
cli
xchg
bnd
clc
cs
ret
bound
fsubs
adc
pop
mov
shl
jbe
inc
nop
xchg
pop
xlat
adc
mov
inc
push
lret
xor
arpl
out
inc
pop
or
shll
or
dec
ret
loopne
fisttpl
aaa
dec
sahf
das
imul
push
push
xor
push
xor
mov
xchg
lret
iret
inc
cmp
jb
ficomps
jnp
mov
mov
inc
xchg
icebp
loopne
lock
push
pop
xchg
jle
xlat
sbb
or
adc
push
dec
jle
dec
js
out
iret
shrb
or
cmpsb
scas
imul
pop
xchg
push
xchg
roll
out
test
jge
and
daa
cmpsl
adcb
ds
jp
dec
in
jnp
xor
cmp
xchg
popa
pop
sub
pop
xchg
xchg
dec
mov
sbb
enter
sbb
mov
es
adc
push
mov
jnp
sahf
cmp
pop
cmp
ljmp
sahf
orb
push
jmp
mov
mov
leave
adcl
cld
fsubs
mov
xor
mov
in
adc
mov
add
cmp
fidivrl
loopne
jp
in
pusha
lret
dec
cmp
insb
mov
cmp
in
incb
or
cmp
repz
adc
arpl
adc
cmpsb
and
add
fwait
lea
stc
inc
popa
pop
cmpsl
rcl
xchg
xor
mov
mov
xor
into
dec
lods
or
xchg
ljmp
sbb
ljmp
stos
sbb
bound
stos
mov
insl
jb
sbb
icebp
jp
sbb
add
jo
push
adc
out
mov
pop
mov
adc
xchg
pop
xorl
pop
ljmp
mov
xlat
cmp
cmp
inc
cmp
cli
and
sub
vxorps
adc
xor
stos
ret
cmp
sub
or
adc
jmp
push
not
mov
lahf
lock
call
sub
in
daa
sarl
adc
pop
sbb
and
jbe
jo
es
aaa
cli
ret
mov
adc
sbb
imul
leave
jno
les
loope
or
sub
push
xor
ds
cmp
or
mov
xor
stc
cld
outsl
push
test
dec
imul
rolb
push
arpl
push
add
push
xor
or
dec
imul
push
ret
cmp
mov
js
and
repz
idivl
mov
shlb
into
inc
sbbl
xchg
pop
xchg
mov
fwait
int
jp
icebp
pop
mov
jns
insb
xchg
cld
pop
outsb
imul
jl
and
test
inc
dec
cmpsb
stc
sbb
rorb
mov
push
mov
adc
jecxz
inc
out
loope
ljmp
inc
mov
mov
ret
jle
mov
enter
lock
cmpsl
jo
enter
les
div
cmp
push
and
mov
sbb
fldt
cmp
or
add
rorb
pop
out
add
adc
push
xchg
adc
pusha
enter
inc
cmp
jbe
xchg
pusha
adc
push
repnz
pushf
sbb
cltd
push
mov
adc
jp
xor
data16
icebp
shlb
fnstenv
imul
scas
pop
fdivl
mov
aas
jnp
mov
dec
mov
pop
mov
out
mov
aad
sarl
and
or
scas
sub
loopne
std
inc
lock
push
std
and
pop
push
imul
jle
dec
mov
sbb
sbb
enter
daa
push
and
xchg
pop
fs
and
push
out
pop
mov
cltd
adc
adc
jae
dec
test
mov
addl
jmp
rcl
fs
add
ljmp
sub
add
xorl
stc
out
cmp
dec
mov
cltd
loope
das
mov
adc
sub
ljmp
pop
jbe
xchg
cmp
adc
or
iret
nopl
add
jno
and
mov
ds
xor
cmp
insb
jecxz
out
cmp
fstp
loopne
mov
nop
mov
mov
dec
mov
and
fadds
sub
out
lret
lds
lcall
fsubs
test
add
or
in
pop
adc
mov
fs
out
fimull
xchg
inc
aaa
aas
mov
xchg
mov
repnz
inc
hlt
xor
sub
dec
push
cmp
imul
and
jns
push
fiadds
fnsave
dec
loop
sub
sbbb
pop
imul
scas
push
bound
inc
cmp
test
mov
push
outsl
mov
loop
xchg
lret
out
push
mov
mov
adc
mov
lea
into
jge
jno
sub
fldenv
addr16
std
mov
addb
je
add
jecxz
sbb
and
fcmovne
ret
xchg
adc
jno
fwait
lds
push
dec
iret
stos
xor
das
push
andnps
sub
pop
push
out
jnp
jp
cmp
push
and
push
ss
xor
or
mov
aaa
call
sbb
mov
push
cmc
out
mov
xchg
cmp
mov
push
fistps
push
loop
mov
lahf
inc
js
mov
push
mov
mov
cmp
das
lret
mov
cmp
cmp
sub
clc
ret
jmp
rorl
icebp
or
push
mov
mov
test
xor
mov
mov
leave
dec
sbb
or
jbe
adc
and
gs
ja
xchg
nop
cmp
loopne
jg
push
push
pop
xchg
dec
and
or
adc
repnz
or
movsl
leave
call
inc
inc
xor
mov
xor
out
je
fwait
push
or
jo
iret
cmc
or
ds
hlt
jge
inc
mov
dec
ljmp
xchg
sti
outsb
movsb
push
out
cmpsb
push
mov
out
pop
add
push
jmp
jno
fldcw
mov
sub
mov
jge
ret
enter
jbe
inc
push
cmp
xor
pop
pop
imul
shl
les
xchg
pusha
pop
test
push
test
bnd
xchg
std
hlt
push
out
andl
jno
push
cmp
enter
in
jno
stc
imul
inc
repz
push
sub
inc
sub
data16
mov
xchg
adc
movsl
jg
test
mov
outsb
aad
movsl
sub
mov
out
out
jb
out
nop
adc
mov
std
aam
aaa
pop
arpl
dec
push
sbb
arpl
popf
out
xchg
enter
push
pop
jg
ds
popa
cmp
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
mov
mov
orl
addl
dec
imul
push
mov
int3
decl
jl
data16
pushf
pop
icebp
lock
xor
dec
push
std
std
and
cs
add
cmc
cmp
lds
pop
mov
pop
dec
mov
repz
adc
push
add
mov
dec
into
loopne
mov
mov
rcrb
add
add
ret
inc
pusha
jne
push
sub
test
nop
mov
adc
data16
sbbl
out
test
fs
jg
mov
jns
icebp
scas
decb
mov
es
lods
ss
xchg
fwait
push
jno
and
adc
mov
cmpsl
push
jg
push
sub
mov
clc
or
aad
inc
std
push
scas
xchg
sbb
push
fistpll
mov
inc
mov
lahf
pop
dec
push
lea
out
cmp
aaa
pop
stos
int
ljmp
outsl
jmp
icebp
jae
mov
xchg
icebp
es
adc
loopne
shll
pushf
in
fidivs
mov
mov
inc
gs
iret
push
sbb
fimuls
push
repnz
pop
pop
mov
test
test
ficoms
cld
dec
xor
pop
jnp
mov
shr
dec
pop
pop
rolb
loope
xchg
push
fcoms
xor
push
ror
sti
mov
fdivl
mov
xchg
mov
inc
adc
mov
insl
adcb
mov
aam
aaa
jbe
push
mov
or
xorl
push
jo
push
pop
je
mov
arpl
sbb
js
mov
js
dec
push
dec
dec
dec
add
push
pop
dec
std
testb
adc
mov
or
or
push
es
mov
bound
stc
or
jmp
leave
pop
in
inc
std
adc
ljmp
notb
fists
clc
out
cltd
data16
push
mov
call
fdivr
bound
xlat
cld
sub
sub
ficompl
sub
shr
cmpsl
test
shrl
cmp
fidivs
sub
or
ja
into
out
loopne
inc
std
add
iret
cmpl
mov
xchg
lahf
jl
nop
fst
adc
jp
jne
test
in
sub
push
aad
lods
jne
test
adc
jne
cmp
stos
or
or
testb
sub
xlat
inc
add
dec
call
fdivrl
mov
rorl
in
aam
das
sahf
std
jl
jmp
lret
insb
sub
lret
inc
insb
in
pusha
jmp
sbb
mov
mov
fwait
dec
rorl
rcll
and
push
push
je
jmp
js
sbb
leave
dec
dec
mov
inc
push
movsb
xor
mov
mov
push
icebp
daa
add
push
inc
loop
adc
outsb
js
adc
jge
aad
ficompl
sbb
jmp
adc
scas
inc
or
jo
mov
xchg
dec
mov
or
imul
cmpsb
roll
icebp
add
loope
bound
sarl
lods
nop
pop
inc
ret
loopne
pusha
mov
fcoml
adc
int
mov
inc
push
xchg
mov
data16
clc
xchg
fsubrp
cmp
scas
pop
das
or
inc
pop
loopne
push
jno
jbe
ja
loop
fisttpll
pushf
add
cs
push
inc
gs
test
lcall
rep
lret
adc
cmp
dec
rcrb
in
jae
mov
mov
xlat
jno
js
mov
stos
add
sub
stos
pop
rcll
mov
sub
sub
rolb
sbb
pop
fidivl
cmpsb
int
dec
mov
adc
inc
and
notl
popa
in
add
push
cmc
lahf
jo
add
imul
mov
dec
dec
orl
loop
inc
jle
dec
imul
mov
jb
or
xchg
pop
sbb
leave
les
xor
loop
mov
scas
push
ret
xchg
jnp
push
xorb
popa
pop
popa
inc
pop
loop
pushf
mov
lcall
cmpl
sub
push
jg
rol
sti
cli
loopne
xorb
testb
outsb
push
xchg
lret
aam
jle
je
mov
dec
fwait
push
out
repz
pop
rolb
cmc
nop
push
lock
jae
inc
inc
jg
fsubp
push
or
mov
dec
ljmp
push
cld
mov
xchg
movsl
and
sbb
in
cs
fbld
aad
mov
loop
lock
lods
add
jno
ds
mov
and
push
mov
insl
jnp
in
dec
sahf
pop
sbb
stos
mov
or
mov
les
inc
jecxz,pn
sub
int
iret
xor
mov
jge
inc
mov
pmulhw
je
lret
pop
mov
mov
fwait
sbb
fisttpll
pop
js
mov
data16
adc
ja
add
inc
ret
out
fdiv
ret
bound
scas
add
cmp
pop
lret
lret
inc
aad
inc
mov
fisubs
sbb
mov
mov
adc
lods
cmp
push
lods
stos
fstpl
jge
xchg
scas
add
cmpsb
enter
negl
arpl
fsubl
mov
dec
adc
sub
call
loop
out
jns
inc
stc
test
push
das
push
int
lret
and
dec
xchg
gs
out
mov
inc
ja
mov
and
inc
daa
xchg
push
xor
cli
out
inc
aam
negl
movsb
outsl
push
xchg
cltd
pushf
cmp
in
movsl
insl
sahf
aaa
push
mov
cld
test
je
pop
in
fdivr
test
xchg
out
test
dec
cwtl
dec
cltd
xchg
mov
jg
mov
push
xchg
mov
test
xchg
repz
sub
call
lods
call
pop
stc
aas
pop
cmp
push
mov
mov
lock
das
push
incb
in
nop
xchg
jle
inc
dec
dec
rol
sub
test
inc
fbld
insb
adc
mov
aas
ds
in
das
lock
insl
adc
jle
lods
repnz
add
mov
push
pop
mov
lds
pop
sarl
imul
aam
jg
mov
push
and
inc
jecxz
fdivl
lahf
add
loopne
lcall
or
insb
cmpsl
mov
std
stc
popf
enter
movsb
sub
pop
stos
pop
dec
sub
dec
out
mov
loopne
filds
xchg
out
daa
add
test
out
stc
cmc
add
test
mov
aas
pop
xchg
sub
push
leave
dec
scas
or
xor
mov
dec
xchg
adc
out
fistl
adc
mov
shrl
mov
pop
mov
pop
stos
sbb
dec
mov
adc
mov
in
adc
inc
cld
xchg
pop
adc
stos
inc
jge
sarb
push
jp
sbb
xor
lcall
mov
push
mov
in
insb
adc
mov
jae
test
imul
cli
rcl
lods
or
or
xchg
sbb
and
jecxz
and
push
call
cmp
mov
sbb
mov
fildll
cld
xor
je
insl
shll
int3
stos
loope
pop
xchg
test
inc
inc
hlt
in
mov
inc
dec
cmc
scas
jb
cmc
lea
mov
aas
mov
mov
cltd
push
call
test
pop
jmp
sub
pop
scas
or
push
cmp
cmc
xor
adc
and
test
cmpsl
lea
sub
xchg
mov
addb
xor
and
sahf
test
mov
dec
xchg
fcomps
sti
lods
xorb
mov
enterw
daa
sbb
test
mov
mov
xchg
xchg
mov
ss
rcrl
dec
cmp
rcrb
jne
and
jmp
inc
in
lret
sbb
pop
pop
pop
inc
rcrl
cwtl
ret
out
lcall
mov
cmp
in
sbb
rclb
mov
lds
jg
push
xor
pop
push
in
mov
into
pop
or
jge
outsb
xchg
dec
jmp
add
pop
clc
out
into
popf
roll
or
add
fcomi
fs
inc
ficomps
sbbl
movb
push
cwtl
pop
xchg
push
mov
in
push
flds
sub
cmpsl
call
int
mov
js
xor
mov
sti
data16
shll
jns
add
test
push
in
aam
sbb
sarb
xor
cmp
adcl
xor
cmpsb
cmc
pushf
xchg
mov
lret
push
and
ds
insl
je
lds
iret
and
adc
and
or
dec
cmc
shll
xchg
xchg
sbbb
jle
les
xor
divl
loope
daa
sub
adc
rorl
dec
pop
ret
bound
rcrl
sbb
insl
daa
addb
fwait
int3
mov
add
cmp
lods
loopne
popl
fs
xchg
scas
sub
push
das
jae
or
push
xchg
ds
std
subl
jg
adc
cmpsl
push
mov
jle
pop
setl
rolb
pop
les
scas
pusha
xchg
je
nop
cmp
into
mov
pop
je
lret
sub
push
insl
mov
inc
mov
inc
cmp
aaa
mov
shll
iret
movq
test
mov
push
adc
push
add
pusha
jecxz
jmp
mov
fmul
mov
mov
daa
fsub
or
shrl
jns
fistpl
lcall
scas
or
mov
jmp
xchg
enter
and
mov
sahf
icebp
inc
inc
mov
inc
cmp
and
test
and
jns
jmp
lds
popf
data16
pop
push
sub
mov
movsl
test
dec
dec
adc
pop
andl
sub
fs
in
sub
adcl
jo
repz
js
scas
cwtl
mov
out
add
aas
sub
jp
mov
adc
enter
dec
inc
arpl
sbb
mov
mov
push
dec
mov
jle
jbe
fidivs
ficoml
sbb
icebp
pop
mov
jo
pop
sar
jb
into
sub
adc
scas
jo
pop
mov
aad
out
jno
push
in
mov
scas
sub
and
jle
fsts
fistl
outsb
test
adc
and
punpckhdq
testb
xchg
popf
xor
jmp
sti
sub
in
jb
sbb
mov
dec
mov
push
arpl
cmpsb
lret
mov
test
or
xlat
pop
fdiv
lods
mov
mov
nop
cltd
lds
adc
icebp
icebp
mov
sbb
push
arpl
jae
cmp
popa
popa
dec
add
bound
rorl
xchg
loopne
and
aas
dec
inc
dec
cmp
out
inc
in
pop
push
movsl
push
hlt
cmpsb
popa
insl
dec
leave
mov
mov
inc
insl
mov
mov
mov
lcall
xchg
inc
cld
bound
dec
add
pop
jle
orb
out
aas
or
xchg
lods
push
add
jg
adc
mov
lcall
pusha
add
pop
frstor
add
mov
inc
and
mov
xchg
lea
inc
inc
inc
jg
dec
mov
test
dec
or
jmp
lods
push
inc
mov
push
imul
adc
cmpl
mov
lcall
lods
ficomps
in
dec
inc
ja
jo
jns
outsl
fidivrs
js
mov
insl
push
mov
cmc
arpl
js
fildll
mov
xchg
mov
sti
adc
adc
sbb
iret
xor
sbb
std
ficomps
sub
sbbb
inc
pushf
jmp
xchg
push
imul
push
mov
mov
jne
das
pop
lahf
jo
push
loopne
jo
fdivrp
sbb
pop
aam
andl
fs
or
adc
jo
xor
lret
cmpsl
xchg
je
movsb
hlt
in
stos
cmp
inc
inc
shrb
insb
inc
fadds
test
insl
jmp
cmp
into
hlt
enter
add
jns
dec
adc
xor
inc
dec
and
and
jb
and
movsl
cmp
imul
pop
dec
out
testl
outsl
lods
and
adc
xchg
jo
test
fldlg2
push
repz
xchg
loopne
pop
cwtl
xor
inc
jbe
push
adc
pop
sahf
movsb
sahf
dec
mov
xor
push
mov
inc
fstl
stc
mov
inc
popf
mov
stc
lret
jbe
add
das
imul
imul
inc
dec
jge
lahf
das
ljmp
xor
mov
dec
imul
out
push
cmc
xchg
hlt
and
es
js
jae
leave
scas
mov
jl
jl
jl
fisttpl
test
push
jge
dec
push
mov
scas
xchg
xor
xor
pusha
gs
add
dec
jne
cld
test
dec
xchg
mov
out
neg
mov
inc
test
mov
mov
jnp
push
mov
stos
in
arpl
ret
or
movsb
lcall
cmc
dec
dec
jle
xor
dec
fistps
outsb
cmp
imul
pop
pop
jbe
das
push
inc
mov
push
lds
jp
mov
sahf
inc
data16
shrl
stos
jmp
mov
inc
mov
add
sub
mov
fcom
dec
mov
push
mov
arpl
std
xorb
out
pop
cld
xlat
xor
push
jnp
stos
mov
decb
popa
jb
mov
aas
ret
sub
test
iret
sbb
out
lods
ret
adc
adcl
fs
cmp
sbb
in
push
data16
push
stos
sub
sbb
je
mov
push
sub
add
sbb
push
ficoml
lret
add
inc
loope
jae
in
test
xchg
jo
push
mov
out
xchg
xor
fildll
xchg
sbb
shl
ret
jns
ds
bound
out
dec
shr
mov
fcoms
mov
xor
xchg
adc
popf
ds
sar
test
imul
adc
mov
jnp
xor
test
and
pop
dec
mov
pop
hlt
adc
sub
ficoms
leave
push
cmp
fcoml
xchg
xchg
mov
lcall
imul
test
xor
cmpsb
push
scas
push
cli
push
scas
jg
xchg
cmpsl
fsts
ss
fdiv
mov
mov
or
lea
and
std
out
pop
jg
and
and
lret
popf
jl
sbb
mov
test
stos
or
push
imul
sub
fadds
mov
and
xlat
addl
test
fs
inc
mov
or
jnp,pt
cmc
int
push
adc
rorb
xor
nop
add
jle
in
lahf
repz
xchg
aad
cmp
and
ret
mov
mull
push
xlat
outsl
pushf
adcl
jae
cmp
outsb
sarb
aas
dec
ficoml
int
cwtl
sbb
nop
mov
xchg
addb
into
inc
push
pop
out
out
fdivrl
fnstcw
xchg
adc
cmp
sub
pop
imul
hlt
pop
aas
mov
sub
sarb
stos
push
push
dec
xchg
nop
iret
pop
cmp
movsb
shlb
xchg
int3
add
mov
cli
sub
inc
movsb
xor
fs
out
adcl
dec
test
jecxz
shlb
cmp
xchg
cmp
add
daa
ljmp
aas
loopne
clc
fwait
xchg
or
jg
cwtl
mov
popa
loopne
fidivrs
push
pop
xchg
ja
in
mov
aad
pop
add
lret
add
cmpl
sbb
mov
sub
andl
cmp
dec
arpl
adc
fbstp
popa
mov
fcomps
std
add
sbb
jb
mov
cld
xor
and
js
sub
pop
and
cmc
fiaddl
push
aam
adc
out
ljmp
pop
lods
ss
cld
sar
cmpsl
xor
adc
cltd
insl
mov
aaa
mov
sbb
jle
fsts
push
jle
xchg
les
movsb
mov
outsb
lret
inc
cmp
mov
mov
fmull
fwait
mov
push
lret
rol
cmp
xchg
or
sub
push
adc
movzwl
mov
inc
jge
popf
dec
inc
movb
cmpsl
lods
es
push
mov
xchg
dec
and
pop
mov
test
adc
cmp
in
out
orb
ljmp
cs
icebp
push
fld
xorb
or
dec
or
mov
inc
ljmp
lret
fs
out
cmp
inc
push
pop
int3
xor
ljmp
roll
mov
data16
xlat
mov
or
rolb
jno
xorl
jno
xchg
popf
dec
repz
testl
adc
roll
jb
sub
dec
pop
lock
fcoms
je
imul
jnp
inc
cmp
mov
dec
daa
sahf
mov
es
cmpsl
out
cmp
jmp
jnp
adc
sbb
sbb
ja
rclb
mov
dec
daa
push
jle
js
dec
mov
jge
xor
into
xchg
iret
xchg
lcall
mov
aas
scas
jle
lret
ljmp
mov
hlt
or
mov
lahf
sahf
xchg
out
sub
daa
add
shlb
mov
jne
mov
ja
xchg
jbe
test
aad
outsb
das
mov
cmp
mov
sub
jne
aam
jmp
xchg
mov
or
movsl
push
aad
lea
dec
sub
pop
fisttpll
cmp
leave
adc
xchg
scas
hlt
xor
and
mov
mov
lret
les
add
sbbb
push
int
mov
sub
sbb
dec
ret
xchg
testl
sub
ret
aas
dec
push
das
sbb
es
push
mov
je
scas
fnsave
push
stc
add
add
dec
aas
fiadds
test
repz
mov
mov
icebp
fisubl
mov
sbb
mov
jne
xchg
in
int3
inc
mov
inc
enter
push
cmp
mov
sub
out
aam
jl
inc
push
imulb
daa
pop
rorb
bound
sbb
and
loopne
push
pop
pop
xchg
sbb
pop
sbb
cmc
mov
ljmp
in
test
and
es
cld
jbe
mov
sbb
mull
js
notl
les
mov
mov
dec
fistpl
test
xor
adcb
and
inc
mov
or
shlb
cmp
imul
xor
pop
sub
mov
push
shrb
subb
or
xor
jo
lock
stos
add
fst
mov
and
insb
subb
popa
out
cmpsl
adc
lds
or
insl
xchg
ret
insb
cmp
pop
add
xchg
sub
daa
mov
es
outsb
add
int3
add
mov
lret
inc
xchg
push
inc
movsb
insb
stc
mov
push
bound
fidivl
out
orl
mov
nop
nop
jno
sarl
pushf
add
push
inc
mov
sbb
mov
les
imulb
pop
je
scas
test
outsl
pop
fwait
or
sub
mov
mov
test
nop
roll
sub
scas
jle
jb
adc
rcrl
and
or
push
int
fs
mov
push
bound
cmp
loopne
arpl
adc
inc
dec
je
mov
bound
pop
popa
fwait
jb
push
idivl
jmp
int3
jb
cmpl
dec
sahf
testb
xlat
dec
push
cmp
push
xor
loopne
pop
push
loopne
dec
cltd
mov
add
mov
pop
out
adc
mov
adc
mov
cld
dec
jl
repz
aas
cmp
loopne
xchg
xchg
mov
cmp
xchg
aad
push
cmp
pop
add
jno
pop
push
in
inc
dec
call
cmp
xchg
and
add
add
or
lret
mov
inc
into
pop
sti
ss
enter
dec
stos
cmc
test
xor
loopne
mov
lock
sbb
nop
pop
cmc
cmp
mov
jle
mov
shrb
insl
popf
push
mov
ror
bound
or
jb
aam
scas
repz
mov
test
test
sbb
cmp
adc
xchg
pop
sbb
xlat
and
pop
xor
mov
outsl
mov
push
fs
and
push
ja
pushf
movsb
dec
mov
aas
into
mov
loop
xchg
int
jb
sub
mov
mov
leave
test
mov
icebp
sbb
stc
lret
mov
mov
loop
mov
leave
in
lea
movsb
rcr
test
fcomps
add
cmp
mov
jg
mov
popa
pop
lahf
daa
inc
fdiv
push
push
jmp
cwtl
sbb
pop
mov
jo
dec
stos
inc
dec
lds
lea
mov
push
mov
cmp
jae
jns
cmpsl
xor
sbb
pushf
fadds
xor
push
fisttpl
mov
sbb
mov
data16
and
inc
add
cmp
lret
lods
or
xor
jle
jne
test
and
addb
fdivp
fwait
sbb
dec
xchg
xchg
sbb
push
jb
mov
or
inc
popa
xchg
push
insb
mov
push
sub
daa
repz
and
sbb
repz
lcall
xchg
xchg
lret
mulb
imul
cs
cmp
ds
aaa
into
scas
mov
mov
xlat
xor
cmp
xchg
or
lock
or
ds
insl
jnp
fdivp
gs
sub
or
cmc
and
insb
ss
fwait
jmp
mov
xchg
adc
mov
cs
int
inc
xor
or
mov
movsb
xchg
subb
sarl
xchg
jno
cld
pop
add
inc
scas
fmuls
jg
adc
mov
and
js
dec
pop
adc
cmpsb
push
cltd
ja
push
imul
negl
push
fidivrs
ja
js
arpl
sbb
popa
push
or
hlt
jb
and
sbb
pop
dec
out
or
fmull
repnz
jne
adc
add
int3
addr16
mov
cmp
clc
arpl
ret
fdivrl
insb
mov
cmp
iret
mov
es
jl
lret
push
adc
mov
out
mov
mov
je
dec
orb
cmp
xchg
js
pusha
in
pusha
adc
roll
fstps
push
loopne
test
repz
jle
cmp
mov
ret
shll
cmp
nop
adc
jbe
sub
xchg
popa
ljmp
test
repnz
and
push
shl
and
adc
divb
push
push
jnp
pop
push
mov
cmp
or
inc
or
sahf
push
add
sbb
ljmp
iret
imul
inc
mov
inc
std
cld
inc
mov
adc
inc
or
shll
out
call
flds
sarb
ljmp
std
xor
test
fcoml
fildll
cmpb
add
or
xor
outsl
mov
outsb
inc
fcoms
imul
adc
adc
xchg
pop
pop
cld
pop
cmp
fnstcw
das
dec
popf
xchg
aam
mov
push
movsb
inc
loope
in
cmp
daa
mov
scas
cmp
push
ret
fisttpl
dec
jnp
sbb
movl
inc
outsl
int
popl
xor
and
or
shr
and
movsl
mov
pop
dec
inc
fstpl
adc
cld
lods
mov
pop
out
push
fbstp
xchg
mov
mov
dec
test
pop
dec
push
mov
je
bound
push
jl
dec
mov
adcl
loop
fsubl
xchg
jg
pop
jne
popa
push
loopne
adc
nop
xor
sbb
repz
out
mov
out
jne
pushf
jg
sarl
popa
xor
jmp
jle
dec
int
sti
dec
pop
and
adc
dec
jae
out
xchg
mov
adc
xchg
xchg
xchg
lods
dec
movsl
stc
fs
fisttpl
repnz
inc
or
adc
mov
jae
test
in
std
xchg
out
sbb
mov
loop
jecxz
xlat
cmp
repnz
incb
lret
pop
cmp
arpl
jnp
aam
xchg
xchg
mov
dec
cmp
inc
ror
andl
push
insb
call
mov
mov
aas
imul
jb
shll
jmp
adcl
pop
cmc
sub
lcall
lds
jp
pop
das
xchg
cwtl
sbb
ss
pop
std
or
cs
or
dec
cmp
mov
loopne
mov
xchg
xorl
stc
aaa
in
cmp
xor
rclb
pop
sbb
call
xlat
testb
aaa
cli
mov
aaa
mov
mov
imulb
sbb
out
jbe
test
rolb
mov
test
mov
aam
int
fnstcw
jmp
lahf
cld
popf
mov
jmp
dec
or
lret
mov
adc
imul
jg
xlat
cwtl
sbb
and
xchg
out
repz
jns
in
fs
xchg
ss
idivb
mov
ljmp
fdivrs
cmc
or
lret
cwtl
je
mov
lock
cmp
das
and
and
add
in
gs
loope
dec
out
ds
pop
xchg
rcrl
out
lret
adc
or
div
std
mov
inc
dec
lahf
or
insl
das
mov
sub
cmp
pop
and
or
cmp
outsl
mov
je
xor
mov
or
add
ret
es
push
push
cmp
clc
push
loop
add
xlat
into
cmp
pop
adc
out
insl
mov
stos
nop
lods
arpl
dec
aas
hlt
push
movsb
mov
jo
pushf
xchg
pop
aam
loopne
push
outsb
lret
rcrl
testl
or
out
bound
sbb
cmp
pop
mov
xor
xlat
jge
int
sub
pop
sbb
stos
fiadds
and
mov
push
cmc
in
in
lds
push
pushf
mov
mov
repnz
mov
dec
mov
inc
pusha
sbb
les
int
jbe
pusha
jo
pop
jb
rol
jmp
jne
jp
test
cli
push
xor
inc
xchg
sbb
sahf
inc
jge
ja
jno
mov
rorb
sar
push
mov
and
std
shlb
cwtl
out
bound
add
test
inc
data16
or
add
call
test
jb
adc
push
mov
sahf
mov
imul
xchg
push
sbb
mov
scas
popa
lret
mov
xchg
xchg
push
addr16
mov
push
insb
inc
in
ljmp
push
sub
pop
jecxz
push
pusha
ljmp
mul
adc
jmp
sti
sub
lods
fstpt
fnstsw
adc
pop
int3
popa
js
vmovups
fildl
xchg
mov
and
push
ds
clc
sbb
iret
dec
dec
addb
push
cltd
and
xor
jg
in
cmpsl
inc
fiaddl
xchg
cmp
in
loope
cs
add
sub
daa
cmpsb
pop
pop
mov
xchg
xor
aam
push
imul
mov
repnz
xor
mov
or
cmp
and
push
or
int3
push
jmp
adc
push
stos
aam
mov
out
rcll
jo
sub
push
push
insb
jp
cmp
push
sub
mov
xor
enter
jbe
test
pop
jmp
pop
jg
add
dec
xor
dec
call
test
adcl
dec
lcall
pop
jbe
popa
lea
jecxz
mov
sub
dec
mov
roll
jne
cmc
inc
push
fdivl
add
jle
test
pop
mov
pop
lret
fistl
dec
out
mov
inc
lahf
icebp
xchg
les
das
call
rorb
test
xor
sahf
lods
je
xchg
sub
loope
icebp
out
xlat
cmp
divl
jp
fdivr
inc
ds
push
fwait
mov
mov
push
data16
das
dec
divb
jecxz
stc
cltd
xchg
xchg
jne
les
call
cmp
and
sbb
enter
xchg
xchg
lock
ljmp
lods
push
cmp
or
int
add
out
andb
lea
in
in
adc
sbb
jnp
stos
add
dec
loope
imul
inc
outsl
jns
mov
sbb
int
pop
outsb
sbb
mov
pusha
jns
lea
mov
jmp
ljmp
or
jno
js
insb
push
sbb
or
scas
sti
ja
iret
rcll
inc
es
xorl
jbe
cmp
and
pushf
xor
mov
dec
jae
xlat
pmullw
shl
fidivrl
mov
push
xchg
pop
mov
stc
js
add
arpl
icebp
adc
mov
std
lds
and
jecxz
outsb
adc
adc
pop
push
lds
dec
scas
cmp
int
xor
sub
xor
test
filds
inc
in
cmp
push
jge
fs
mov
push
and
int3
ffree
dec
hlt
das
test
mov
xlat
ficomps
cmp
cmp
imul
xchg
mov
sbb
push
push
sbb
insb
sbb
push
clc
scas
daa
xchg
in
add
iret
insb
shrb
dec
cld
jmp
xchg
jnp
lea
testb
out
addr16
mov
xor
pop
xor
xchg
pop
push
dec
rolb
add
gs
jbe
sub
orl
xor
inc
stc
dec
mov
mov
inc
inc
jge
std
aam
mov
and
popa
fs
push
push
out
jnp
popa
ljmp
popf
sbb
popw
lods
lahf
in
rcr
cmpl
adc
cmp
jnp
sub
inc
or
test
jne
jecxz
mov
lock
arpl
stos
cmp
push
adc
mov
in
les
inc
in
adc
popf
divb
xor
push
inc
cmp
cmp
bound
adc
cli
pand
add
and
lcall
and
sbb
ficomps
mov
mov
and
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
loope
push
xchg
xchg
addb
sbb
jle
in
or
cld
mov
popa
mov
insl
push
ja
fiadds
in
gs
xor
mov
or
or
add
sub
push
jo
sub
lahf
ja
mov
int3
filds
cld
jle
subl
ja
or
add
notb
mov
fwait
imul
adc
adcl
pop
inc
and
mov
insb
xchg
or
adc
jbe
outsb
leave
lea
pushf
push
test
xchg
sbb
or
push
and
push
pop
cmpsb
in
mov
pop
mov
loopne
push
je
sub
imul
xor
shrl
xorl
inc
mov
inc
mov
mov
sahf
insl
jne
xlat
shlb
stos
stos
aad
cmp
fbstp
or
in
cld
mov
dec
sub
enter
push
jnp
notl
mov
repz
call
dec
mov
sub
or
push
dec
jp
bound
mov
adcb
movsb
cmp
daa
test
mov
call
pop
imul
sahf
inc
jo
jge
dec
and
dec
xchg
ret
sti
jp
sbb
cmc
outsb
cltd
sub
inc
fwait
mov
pop
xchg
xchg
ljmpw
adc
repnz
ja
add
repz
popa
pushf
jg
sub
and
in
and
jecxz
adc
push
sbb
jle
icebp
push
out
adc
outsl
dec
mov
adc
inc
aam
in
leave
das
add
call
sub
out
fdivr
rclb
add
xchg
fwait
and
and
sbb
adc
shl
ds
mov
das
dec
incl
mov
aas
test
call
cmpsb
mov
lock
add
mov
inc
xchg
lods
push
shll
out
jo
jl
xchg
sub
aad
or
and
cmp
int3
mov
mov
pop
bound
pop
lock
xchg
in
fmul
dec
adc
andb
movsl
int3
mov
pusha
loop
adc
push
out
dec
jle
divb
add
shlb
adc
mov
jg
mov
mov
das
stos
or
jge
sbb
dec
sub
jecxz
test
aam
mov
in
jns
test
in
cmp
gs
sub
lods
leave
int
mov
sub
das
xor
addb
cmp
ret
adc
mov
xor
cli
or
ljmp
push
adc
movsl
adc
jp
icebp
inc
cli
jns
ja
cmp
dec
push
sbb
xor
mov
fwait
dec
dec
ds
push
shr
sub
mov
or
dec
or
mov
hlt
icebp
outsl
fiadds
sbb
xor
dec
std
pop
movsb
xor
bound
scas
or
fmull
adc
sbbl
and
lahf
sub
fnstcw
repnz
push
jp
mov
push
imul
movsl
xor
mov
dec
cmp
mov
daa
jnp
cmpl
add
cwtl
adc
inc
add
pop
stos
xlat
jmp
lret
cmp
sub
cmp
xchg
inc
int3
mov
incb
pop
lods
les
in
xchg
push
pop
frstor
mov
pop
aaa
pusha
pop
inc
gs
aas
push
shll
mov
cmp
imul
and
pop
mov
in
and
xchg
insl
pop
enter
xchg
xchg
or
aas
stos
test
pop
fs
or
cld
in
or
jecxz
pop
std
int3
nop
inc
and
pop
add
cmpxchg
dec
cmc
sbb
shl
pop
adc
inc
ss
pop
clc
cmp
nop
or
mov
rcr
stc
pop
lock
popa
adc
cmp
in
loopne
or
loope
dec
test
add
pop
and
nop
test
pushl
or
nop
pop
data16
xchg
jle
scas
push
arpl
adc
add
dec
cmp
enter
ja
cmp
jb
aam
cli
sbb
in
fsubs
sti
push
adc
cmp
scas
jecxz
fwait
das
xchg
shlb
push
lods
loopne
jnp
lods
loop
ret
xlat
fstl
test
push
pop
sbb
sbb
sub
iret
mov
mov
sysexit
sub
outsb
das
rcl
imul
std
jmp
and
stos
scas
call
insb
cmp
sahf
mov
mov
mov
sarb
fildll
xor
mov
sbb
imul
outsl
cmpsb
mov
jp
in
mov
and
xchg
outsb
pop
cmpsl
pusha
call
xchg
fdivrp
aad
in
scas
das
in
xchg
or
adc
scas
ret
and
jl
push
movsb
adc
ret
stc
fimuls
sahf
mov
and
or
mov
adc
mov
mov
mov
cmp
sbb
negb
jl
mov
sbb
mov
mov
jmp
sarb
pop
jnp
negl
jl
int
sbbl
pushf
stos
test
dec
dec
mov
comiss
jmp
call
adc
jp
iret
jb
dec
lret
pop
cld
adc
mov
mov
ljmp
in
add
or
jg
shlb
imul
mov
or
adc
fldl
xchg
fstpt
fisttpll
sub
cwtl
mov
fisttpll
dec
stc
cli
dec
popf
sub
insl
inc
clc
or
movsb
dec
cmp
dec
sbb
inc
daa
fidivrs
xlat
test
mov
ficoml
incb
leave
jno
xchg
lea
repnz
loop
push
jl
aas
fwait
cmc
xchg
pop
negl
adc
adc
outsb
scas
dec
into
xchg
pop
mov
push
in
mov
sbb
fimuls
add
cmp
imul
bound
int3
and
xor
icebp
jl
das
es
insb
push
mov
push
jb
jns
mov
sbb
adc
pop
orl
mov
push
sbb
add
outsb
icebp
fnsave
pop
push
sbbb
and
popf
adc
push
push
sbb
call
lcall
jbe
mov
movsb
push
test
pop
in
rclb
jae
loop
sahf
popa
pop
dec
inc
ret
rcrb
das
scas
inc
in
fnstenv
lds
aam
movsl
jp
pop
out
mov
mov
call
and
dec
push
inc
test
loopne
out
inc
lahf
call
stos
mov
gs
push
out
hlt
add
outsl
mov
je
loop
fcompl
push
cmp
sub
scas
int3
sbb
fisubl
shll
or
xor
jb
aad
push
push
test
enter
ja
adc
inc
je
pusha
inc
mov
xor
and
in
lahf
xchg
mov
lret
andl
jae
xchg
imulb
idivl
inc
pushf
imul
addr16
repnz
adc
dec
xchg
ds
ljmp
popf
cmp
fisubrs
mov
sub
addr16
add
inc
or
sbb
push
repz
cld
leave
nop
xchg
in
adc
insl
das
adc
cmp
daa
sub
int3
jae
mov
adc
jmp
jbe
push
sbb
cwtd
jno
and
mov
jge
dec
sbbl
inc
jge
inc
xchg
fdivrl
pusha
push
ret
fdivp
rcrl
xor
ss
sbb
add
xor
lea
int3
stos
mov
mov
xor
adc
daa
inc
jnp
push
mov
dec
pop
xlat
orl
mov
pop
loope
jl
adc
hlt
out
cmp
jge
loop
cli
lahf
lods
sbb
push
cmp
arpl
adc
ja
push
and
in
dec
xor
sarb
dec
fsubp
pop
add
pop
cmp
mov
pusha
mov
out
fists
das
gs
sahf
inc
add
fldt
add
test
mov
es
jae
adc
fisttps
and
jge
dec
fs
push
mov
dec
cltd
add
inc
rcll
add
test
mov
jae
loop
mov
cltd
xchg
adcl
mov
dec
out
loop,pn
in
cmpsl
pop
push
lcall
ret
aad
mov
xor
outsb
sahf
movsb
jbe
mul
out
add
pop
test
xor
sub
mov
add
loopne
mov
sarl
arpl
inc
cmp
lods
fstps
stos
mov
fld
xchg
lds
push
das
stos
mov
dec
inc
jno
mov
cli
scas
pop
push
mov
ljmp
adc
lcall
sbb
das
ljmp
sub
in
cmpsb
or
std
fdivs
jl
dec
add
inc
adc
fisubrl
int3
xchg
pop
fdivp
lods
add
add
sbb
scas
sub
movsl
dec
mov
call
cmp
addr16
imulb
scas
out
add
inc
stc
ficoms
shlb
mov
cld
cli
arpl
iret
or
push
jo
mov
lret
adc
mov
decl
mov
xchg
fwait
xchg
jl
jmp
scas
inc
les
in
jns
xchg
andl
sbb
xor
inc
mov
and
ret
or
mov
add
cmp
mov
sub
xor
mov
sub
into
jmp
or
push
test
dec
in
push
push
addl
data16
pop
push
in
dec
cmpsb
test
mov
fidivrl
shrl
jo
rorl
pop
lcall
lahf
add
in
sahf
and
xchg
aam
mov
pop
ficoms
mov
pop
jge
in
ljmp
adc
hlt
jge
fdivrl
popa
loopne
in
cmp
subb
xchg
negl
orl
fisttps
inc
inc
fsts
push
mov
js
xchg
jle
xchg
sbb
push
scas
dec
sbb
decb
rorl
dec
add
dec
nop
mov
andl
push
test
das
mov
test
out
mov
xchg
imul
fisttps
rorb
shlb
into
push
jbe
jl
and
push
dec
or
add
cmpsl
int3
push
test
push
sub
mov
fildll
pop
inc
ret
int
out
sbb
and
loop
out
int
push
test
mov
frstor
dec
xchg
sub
inc
pop
sahf
sti
mov
jle
iret
xchg
mov
stc
in
mov
cmc
xor
add
jp
or
xchg
lahf
xor
pop
imul
sbbb
mov
xchg
in
inc
push
or
ja
mov
mov
insb
aas
in
shrb
add
test
in
inc
ja
lcall
add
push
sub
xchg
push
cmp
aam
mov
jb
mov
push
push
dec
push
rorb
xor
loop
fmulp
cmp
cltd
lret
idivl
bound
jns
pop
mov
subl
inc
mov
in
outsl
pop
aad
insl
outsb
fwait
aam
push
sub
sub
sub
mov
into
imul
adc
pop
inc
xchg
insb
pushf
sub
add
pop
adc
jge
sub
pusha
mov
jo
sbb
cs
dec
xor
out
mov
cli
lods
pop
mov
ja
add
je
test
fstps
flds
dec
inc
mov
inc
jne
ret
loopne
sarb
mov
xor
cmp
adc
push
scas
inc
test
sbb
mov
dec
push
jb
repnz
into
jle
stos
je
xor
mov
push
jnp
lahf
in
mov
sti
adc
xor
mov
popf
mov
lret
cwtl
mov
push
in
or
jne
imul
jbe
push
mov
xrstor
cmc
pop
push
in
inc
xchg
adc
adc
pop
or
mov
mov
sub
cmp
add
dec
jg
add
fisubrl
inc
xchg
mov
fistps
dec
dec
cld
xchg
lods
cmc
xchg
outsb
adc
jbe
jecxz
jnp
dec
in
dec
mov
lahf
or
mov
dec
pop
cmp
mov
shrb
icebp
leave
mov
mov
dec
jge
inc
dec
adc
inc
aad
sbb
sub
data16
scas
iret
addr16
popf
stc
pop
addr16
cmpsl
jbe
mov
or
push
dec
loopne
mov
pop
js
popa
xor
sti
pop
gs
jno
call
xchg
mov
stc
gs
movsb
mul
ret
add
int
xor
inc
sarb
pop
insb
pop
push
mov
cld
jecxz
sbb
sbb
shl
lret
subps
pop
in
test
sbb
dec
push
int
scas
or
cmpsl
mov
mov
push
mov
pop
xlat
sarb
in
mov
cmc
adc
mov
fwait
in
sarl
outsl
xor
test
insb
cmp
jmp
pushl
mov
nop
ss
push
mov
pop
push
jle
push
lea
imul
push
js
idivl
aam
call
mov
dec
cmpsl
fdivl
ds
adc
pusha
sbb
repnz
push
xor
add
xchg
enter
ljmp
negb
and
sub
inc
xchg
lock
int3
fildl
add
arpl
into
add
movsb
pushf
test
jns
fistpll
pop
push
stos
cmp
lock
imul
inc
or
inc
jo
mov
out
mov
ds
fimull
inc
or
cld
lret
rcll
cld
iret
xchg
rcrl
push
xor
jbe
xchg
int3
mov
pop
orb
in
std
popf
pop
fcmovb
in
push
fidivrl
push
pop
add
mov
cld
cmpsl
adc
push
je
addr16
call
push
mov
int
scas
jmp
popf
mov
jno
sub
xchg
cwtl
sarb
or
mov
enter
out
and
xchg
inc
add
test
fnstenv
adc
loop
xor
fists
jo
mov
dec
fwait
adc
push
push
and
jns
je
push
push
hlt
push
shl
test
pop
push
jmp
add
movb
js
lea
test
jg
jecxz
popa
pop
dec
das
addr16
ror
jo
mov
jmp
inc
pushf
jns
push
jns
arpl
or
mov
adc
jg
mov
lret
or
sub
loopne
cwtl
pop
cmpsl
sbb
leave
jmp
mov
lods
bound
mov
cmc
movsl
outsb
pop
in
and
mov
cs
scas
dec
sub
push
shl
inc
push
push
adc
mov
inc
pop
cmpl
shll
mov
ret
idivl
mov
xor
fbld
int3
mov
jae
sub
scas
jg
xchg
push
dec
pop
xchg
and
xor
sub
imull
stos
leave
mov
cmp
repnz
repnz
mov
jns
loop
dec
and
imull
jns
xchg
jp
icebp
add
in
aam
stos
aas
or
mov
push
inc
movsl
xor
call
das
mov
es
xor
js
jg
dec
js
sbb
mov
add
sti
jmp
push
icebp
sub
lret
js
sbb
popa
jno
scas
sarb
js
dec
mul
data16
push
sbb
push
int
jmp
in
adcl
sub
lahf
xchg
adc
stos
les
push
enter
pop
mov
push
pop
out
popf
add
fsubl
ja
popf
test
lcall
shll
daa
lahf
stos
mov
or
lea
arpl
loop
pusha
lods
cmc
fmulp
add
scas
cmc
cmp
xchg
jno
jle
shrl
mov
lods
hlt
pop
jne
mov
cmp
out
add
adc
inc
sbb
cmp
xor
jle
das
lods
mov
loop
push
jo
test
rorb
imul
pusha
ds
adc
insl
adc
call
and
jle
xchg
inc
dec
fcoms
fwait
mov
pop
rcrl
sub
dec
scas
fists
or
test
mov
jge
mov
pop
xor
lods
test
push
cli
stos
xor
fdivs
push
cmp
cmp
test
xchg
jl
add
pop
mov
jp
lods
aas
or
cmpsb
jns
aad
pop
adc
add
push
loope
insb
testb
mov
int
ret
mov
andl
mov
sarl
gs
mov
cltd
and
sbb
push
lea
inc
js
ja
sub
ret
iret
pop
out
nop
mov
cmp
pop
outsl
xchg
xchg
push
mov
jecxz
xchg
shll
in
negb
lea
mov
movsl
push
fsubrs
or
xchg
xlat
add
sahf
xor
pop
add
iret
andb
nop
mov
or
sub
loope
into
jle
jnp
cmp
hlt
xchg
or
jno
stos
jns
push
test
xchg
out
push
fucomp
add
in
fwait
sahf
xchg
pop
rclb
insb
out
pop
loop
loopne
imul
pop
aaa
jo
dec
outsb
jnp
pop
sub
cmpsl
inc
pop
das
xor
mov
or
aad
cmpsb
rcrb
mov
shlb
xchg
test
sahf
fcmovbe
ja
mov
jo
or
cmp
fcmovb
ss
sub
in
cltd
scas
xor
jle
jae
jp
aad
ret
push
xor
ss
and
adc
mov
bound
or
imul
call
clc
fdivp
insl
inc
test
cmc
sbb
ss
hlt
sbb
test
sbb
andb
sbb
stc
dec
xor
adc
test
lret
cwtl
jg
scas
out
cmp
test
fs
pop
imull
pop
rorb
sbb
jge
mov
jno
xchg
pop
mov
imul
and
addr16
inc
jnp
inc
xor
dec
xor
hlt
hlt
xchg
notb
add
push
mov
or
fnstsw
dec
into
lret
sub
shrl
jnp
xchg
push
lret
lods
pop
mov
nop
push
xchg
xchg
push
add
add
jp
cwtl
pop
enter
add
mov
mov
and
sub
push
call
mov
ficoml
xlat
fsts
imul
adc
orb
adc
jbe
jmp
mov
adc
sti
rorb
mov
push
dec
xor
pop
inc
push
dec
xor
scas
imul
imul
sbb
xchg
jmp
mov
mov
dec
sahf
inc
out
fidivl
test
leave
dec
fs
mov
pop
xlat
jle
es
aad
aad
aaa
and
cmpsb
mov
fwait
rclb
inc
inc
stos
mov
lea
js
lock
adc
hlt
aam
clc
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
int3
cmp
dec
add
add
add
add
add
add
add
push
dec
add
add
add
push
push
inc
push
enter
arpl
inc
mov
sub
repz
add
add
pop
push
jns
and
and
outsb
pop
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
