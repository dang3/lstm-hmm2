push
mov
sub
mov
mov
and
push
movzbl
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
push
call
jmp
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
inc
xor
mov
add
mov
and
mov
xor
mov
sub
mov
adc
mov
xor
mov
neg
mov
sbb
movl
and
mov
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
add
mov
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
xor
or
sub
pop
orl
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
add
sub
movl
mov
movl
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
mov
sbbl
xor
add
mov
lea
mov
mov
jmp
mov
xchg
pop
mov
in
jp
jp
fstpl
jp
sub
xor
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
fidivs
xchg
and
shll
and
push
push
xchg
ja
sahf
jge
in
mov
and
cmp
arpl
cmp
pop
pop
iret
mov
lcall
outsl
js
push
pop
int
cmp
lds
jmp
push
aaa
enter
cltd
lods
test
das
and
sbb
bound
out
mov
rorl
fdivrs
pop
fsubl
mov
shrl
mov
in
hlt
pop
iret
xor
or
mov
pop
outsb
adc
inc
pop
iret
cmpsl
sbb
aam
xor
fdivs
dec
adc
adc
fidivl
jl
mov
fwait
imul
add
mov
dec
fidivs
push
cmc
pop
lea
jl
and
sub
fdivrp
fdiv
cmp
std
hlt
mov
pop
sub
push
sub
test
or
sti
inc
in
out
xor
mov
bound
repz
jmp
adc
and
pop
rorb
clc
cmc
dec
pop
dec
mov
mov
jno
pop
jecxz
cld
fistpl
mov
adc
andl
push
cmp
or
jecxz
hlt
inc
mov
push
mov
sbb
mov
jecxz
inc
sub
cmp
outsb
decl
sub
jb
fstps
pop
int3
cmp
or
mov
fnstenv
mov
mov
and
je
lea
inc
jge
mov
mov
daa
stc
cli
dec
mov
ja
leave
ljmp
add
adc
sub
pop
aas
push
ljmp
shll
sbb
jb
jp
or
rorb
outsl
mulb
xchg
sahf
push
fcmove
jg
icebp
outsb
in
mov
and
fdiv
ja
stc
jp
jb
ds
rcrb
mov
js
repnz
inc
testb
jl
rclb
fbld
xchg
movsl
mov
je
loopne
imul
std
mov
out
inc
push
xor
pusha
dec
outsl
iret
or
scas
sub
cmp
mov
enter
dec
sbb
call
jo
push
shl
pop
and
inc
pop
test
shlb
ljmp
in
jno
jb
xchg
add
lret
mov
pop
push
mov
mov
mov
int
loop
and
ret
arpl
jnp
in
fidivl
xor
sub
fwait
cmpsb
cmp
js
add
and
dec
cs
xchg
daa
adc
addl
jo
repnz
dec
call
sbbb
push
push
inc
cmp
sbb
out
in
xor
movsb
mov
test
cmpsl
loop
dec
ret
xor
sbb
lcall
scas
jle
test
shrl
pop
rcrl
or
loop
jne
add
mov
daa
loopne
push
jl
and
pop
and
mov
adc
lret
mov
inc
daa
push
cld
push
repnz
jl
insb
lds
mov
mov
scas
lock
outsb
shrb
ss
push
out
pop
in
dec
xor
sbbl
push
jb
pop
push
xor
cmc
outsb
das
xchg
pop
mov
mov
xor
cld
cmpl
inc
push
nop
adc
ds
lods
mov
das
and
shr
and
fists
mov
inc
test
js
dec
shll
add
and
sub
scas
mov
mov
std
into
push
scas
mov
add
inc
push
mov
arpl
stos
je
inc
ret
adc
out
add
jno
es
xchg
mov
int3
add
loopne
cld
add
dec
add
icebp
xor
xchg
aas
xor
loopne
inc
mov
aam
ret
xor
rcrb
push
in
add
cli
cmc
xchg
leave
sahf
test
clc
shlb
ret
push
lds
lods
inc
test
mov
iret
dec
nop
call
mov
or
pop
scas
jno
jbe
cmpb
loop
movsb
decb
dec
pop
or
adc
mov
cltd
jmp
lahf
dec
mov
dec
cmc
hlt
fdiv
mov
fsubrl
ljmp
outsl
jno
mov
rorl
mov
pop
roll
das
out
outsb
inc
xchg
pushf
out
cmpsl
out
jp
mov
inc
or
add
scas
jo
nop
fcoml
mov
jle
cmc
pop
scas
pop
jns
xchg
sub
push
or
mov
fld
repnz
sub
push
stc
int
adc
mov
inc
popa
sarb
mull
insb
xor
test
pop
sub
in
into
icebp
ja
loop
lods
inc
lcall
jns
push
sbb
cmc
data16
jmp
mov
sahf
mov
cwtl
inc
pop
lahf
shrl
push
aaa
loopne
xchg
xor
push
std
inc
mov
inc
sub
mov
pushf
insl
pop
and
jge
ficomps
js
out
pextrw
mov
fimull
mov
mov
fisubrl
jae
and
in
fsubrl
insl
call
iret
pushf
lret
popf
test
fsubs
and
adc
sahf
jnp
pop
and
rcrl
mov
jo
insb
jge
jno
push
mov
xor
hlt
sub
dec
push
cmp
dec
pop
and
aaa
adc
ret
hlt
dec
or
jnp
faddl
dec
imulb
lods
inc
cmp
push
xor
jmp
dec
xchg
adc
jnp
cmp
lahf
adcl
xchg
or
fistpl
daa
mov
insl
pop
shld
xlat
pop
dec
or
push
mov
stos
lea
sbb
lods
mov
cmpsl
test
das
xor
es
ss
ds
adc
fsubl
mov
inc
mov
cmpsl
popa
cmc
stos
fcmove
rcll
pop
fisubl
inc
out
mov
cs
cs
xor
or
andb
lea
xchg
call
adc
add
sbb
sbb
pop
daa
inc
adc
pop
inc
jge
call
mov
pop
xor
lret
aas
ret
xorl
orl
popl
shl
in
sti
and
mulb
insl
stos
pop
les
mov
xchg
mov
push
pushl
add
mov
ds
xchg
mov
shl
cmp
cld
push
pop
mov
push
adc
mov
aas
push
inc
ret
nop
mov
inc
mov
out
dec
outsl
idivb
xchg
mov
movb
std
mov
mov
repnz
call
rcr
das
mov
or
out
loop
mov
push
js
jns
aas
fwait
push
lahf
push
xchg
or
imulb
inc
cltd
dec
and
cmpsb
adc
sbb
inc
jne
roll
lcall
je
xchg
in
scas
int3
sub
or
adcb
jl
push
into
ret
jno
or
adc
test
mov
mov
pusha
in
mov
inc
lret
jb
jle
bound
ljmp
mov
mov
cmpsb
mov
int
jle
pop
jg
icebp
fdivs
cli
pop
push
cmp
xorb
push
icebp
mov
lret
add
dec
loope
mov
sub
cmpsb
xchg
out
pop
inc
mov
sub
clc
xchg
mov
add
xchg
sub
sub
or
sbb
xor
push
iret
mov
mov
ss
or
push
aam
jecxz
inc
mov
lcall
add
mov
hlt
jb
scas
push
insb
pop
pop
test
rorb
testb
jb
jmp
jge
js
inc
and
stos
mov
dec
or
push
dec
jmp
add
pop
add
pop
rcll
ss
push
fnstcw
jne
xchg
add
mov
adc
xlat
arpl
sarb
mov
ficompl
mov
test
lods
xchg
push
stos
push
rol
mov
inc
lods
sub
outsl
push
inc
add
push
mov
xchg
mov
jmp
nop
fistpl
pop
dec
test
cmp
in
fnstenv
adc
pop
pop
push
jle
cmp
or
ficompl
sub
jo
push
mov
mov
jnp
enter
adc
mov
push
pop
mov
out
stos
sbb
and
jg
addr16
outsb
loopne
push
dec
cmp
dec
lods
add
aad
push
jbe
fucomp
cli
add
sbb
add
inc
pop
pop
aad
push
into
sub
or
pop
in
fcmovb
and
ds
test
je
and
mov
div
mov
mov
lods
pop
mov
ljmp
std
jg
insb
inc
pop
test
add
xchg
daa
mov
mov
idivb
pusha
xor
lods
lock
loop
jmp
jnp
sub
xor
pop
mov
push
icebp
jmp
dec
dec
andb
scas
fimull
outsl
dec
fs
scas
fadds
rcrl
sbb
loope
sahf
cmpsb
pop
inc
mulb
xchg
daa
xor
mov
sar
add
add
mov
movsl
sbb
jge
pop
in
es
jmp
nop
addl
inc
mov
gs
push
icebp
fimuls
fstp
pop
mov
je
push
mov
loopne
cmpl
mov
pop
xchg
sub
stos
pushf
clc
fs
je
mov
mov
and
mov
mov
xchg
inc
imul
aad
sub
pop
inc
jp
hlt
shrl
cwtl
cmp
xchg
in
xor
dec
addl
dec
jge
popw
pop
xlat
xor
pop
iret
notb
pop
jae
rcll
mov
xchg
daa
orb
mov
push
mov
or
int
popa
shlb
test
inc
and
push
sub
pop
in
lahf
aam
int
popa
aaa
dec
incb
imul
in
test
cltd
or
or
add
sub
sbb
mov
les
stc
add
xor
cld
fildll
mov
pop
mov
jl
mov
dec
adc
fst
xchg
xchg
xchg
in
pop
dec
and
sub
sub
adc
cwtl
call
push
inc
sbbl
jl
mov
push
cwtl
pop
and
lods
fidivrl
add
mov
movsl
jb
hlt
jecxz
scas
mov
mov
mov
es
cs
or
and
stc
test
or
mov
xchg
enter
and
xlat
in
pusha
pop
loope
dec
push
cmpl
rorl
pushf
js
ror
sbb
inc
xor
sub
push
fdivrl
pavgw
int3
pushf
push
and
and
inc
test
rorl
mov
add
in
jmp
mov
mov
pop
bound
and
aas
mov
out
daa
dec
je
inc
push
jecxz
lods
pop
cmovno
loopne
push
pop
mov
push
adc
lods
leave
inc
push
es
or
insl
jg
out
pop
sahf
arpl
daa
sub
sub
mov
add
mov
pop
mov
xorl
pushf
push
inc
orl
popa
ret
sub
sbb
aaa
and
sub
outsb
je
test
sbb
fisttps
mov
rclb
ja
int
push
jo
cmpsl
aaa
decb
push
cvtdq2ps
lock
mov
cmpsl
ljmp
fdivl
sarl
mov
cmpsl
outsl
jnp
outsb
and
in
sub
mov
sub
pop
xchg
jo
add
and
pop
mov
xor
inc
mov
jp
movsb
or
cld
push
pop
xchg
sub
jae
push
push
repnz
inc
out
cmp
fcmovbe
adc
je
sub
jbe
xor
sahf
test
out
jmp
sub
push
cmpsb
add
cmp
pop
fists
sti
push
fdivrl
cwtl
mov
mov
insb
push
js
mov
fldt
pop
inc
push
pushf
les
or
adcl
xor
sarb
pop
hlt
test
xlat
xchg
nop
movsl
adc
xorl
sbb
push
ret
stc
mov
cmpsl
jns
adc
cmpsb
adc
sti
sbb
jns
cs
or
fdivp
mov
jne
push
xchg
jne
mov
pop
mov
xor
mov
out
adc
xor
nop
mov
sti
sti
xlat
mov
mov
add
int
inc
adcb
or
xor
push
push
pop
popa
sbb
loop
cmp
push
cmp
or
lock
adc
andl
xchg
scas
cmp
sbb
jge
mov
dec
add
xchg
sbb
jmp
enter
xchg
sub
out
lods
loop
pushf
inc
xorb
iret
and
fistpl
in
mov
mov
dec
lods
stos
fiaddl
mov
xchg
pop
lss
or
sbb
clc
decl
lea
insl
clc
add
cmpsb
insl
cli
push
mov
adc
mov
out
add
mov
orb
movb
pop
mov
es
jno
lret
xor
add
jb
adc
sub
or
mov
push
dec
pop
dec
rorl
sub
stc
testb
enter
push
sub
sub
fwait
sub
cmp
jle
ds
inc
mov
xor
mov
xor
and
push
data16
jb
stos
iret
mov
pop
roll
jnp
and
test
jbe
dec
cli
into
popa
mov
mov
xchg
jl
movsb
mov
push
jo
aad
divl
shll
gs
ljmp
xchg
dec
xchg
inc
cmp
mov
cltd
clc
dec
dec
mov
xchg
jnp
mov
enter
cmp
mov
add
xchg
and
hlt
movsb
mov
dec
lcall
mov
sbb
xchg
js
mov
fisttpll
push
clc
icebp
pop
mov
fnsave
les
add
popl
std
dec
insb
mov
je
pusha
mov
imul
lcall
push
mov
das
jecxz
jecxz
xorps
scas
sti
push
push
mov
adc
mov
inc
jb
scas
sbb
xchg
loop
dec
and
int
repnz
les
or
push
mov
enter
dec
mov
cmpsb
push
in
adc
adc
frstor
adc
jle
andl
sbb
mov
or
test
sub
jge
int
cmp
push
rcrl
rcrl
add
or
es
fidivrl
sarl
idivl
in
cmp
xchg
imul
out
cmp
fsts
mov
mov
and
popa
into
pusha
and
push
push
mov
dec
addl
scas
pop
xor
sbb
out
and
cmp
test
dec
sub
lods
cmpsb
push
dec
lret
das
dec
sub
roll
or
xchg
subl
inc
aas
mov
add
push
daa
frstor
pop
scas
icebp
jae
cs
js
add
stc
dec
lahf
add
jbe
push
mov
xchg
dec
jne
fstpl
add
gs
or
popa
in
adc
adcb
add
rcl
inc
aam
popa
stc
sbb
shufps
and
clc
cltd
dec
fwait
mov
mov
dec
xor
dec
lods
xor
push
cmp
and
jnp
sub
mov
mov
xchg
mov
xor
sbb
add
jp
push
insb
out
add
jge
dec
cld
fmul
xchg
in
inc
jno
adc
inc
subl
ss
je
and
psubsb
sub
ret
stos
stos
pop
cmp
push
cmp
jae
and
fwait
lods
xchg
mov
lds
ret
inc
jge
sub
iret
int
mov
add
push
xchg
mov
xchg
rcl
out
lret
mov
mov
adc
cli
ds
in
loopne
sub
sbb
les
mov
push
add
xor
mov
lcall
jecxz
rorb
gs
loopne
inc
imul
out
sbb
or
mov
dec
mov
rorb
fnsave
shlb
pop
aam
sbb
cmpsl
add
pushf
pop
or
divl
bound
inc
and
int3
push
jge
xchg
imulb
nop
insb
sbb
lcall
inc
in
lea
mov
popf
jg
lahf
sti
shr
push
test
sti
adc
pop
dec
aaa
mov
push
dec
jle
pop
add
mov
or
imul
hlt
sub
pop
jl
in
pop
clc
adcl
cmp
movsl
adc
cs
daa
sub
ds
pushf
push
lahf
loop
enter
in
lock
sub
push
jg
mov
fwait
test
push
daa
in
movsb
jmp
test
pusha
inc
and
xchg
mov
in
dec
pushf
cli
popa
or
out
incl
ljmp
sub
out
mov
push
push
add
mov
xchg
mov
dec
and
or
mov
sar
sti
outsb
lds
inc
and
dec
fs
pop
repz
push
sub
pop
mov
out
xchg
sbbl
add
inc
out
outsl
pop
pop
mov
icebp
xchg
shll
jmp
mov
dec
and
xchg
or
lds
sbb
mov
popf
adc
fildl
sub
adc
testl
or
or
dec
orb
mov
push
xchg
sub
dec
sub
add
fidivl
xchg
xchg
cmp
arpl
cld
cmp
push
jecxz
test
mov
insb
cmp
add
lock
outsb
mov
fbld
fdivrs
test
xchg
push
sbb
add
lcall
push
mov
xchg
leave
addr16
dec
xchg
cmpsl
lahf
push
repz
jae
pop
jns
shll
rcrb
in
and
lahf
std
inc
or
adcl
mov
jb
xchg
cmc
inc
add
cli
shlb
sarb
jecxz
mov
inc
xchg
out
stos
xor
ss
cltd
dec
add
arpl
lcall
test
std
lcall
or
lcall
rcl
adc
in
test
sbb
cmc
pop
cmp
push
inc
movsl
in
cmp
and
add
push
and
push
push
daa
fisubs
cmpsb
add
jle
data16
add
pop
jle
mov
enter
sar
jl
pop
movsb
cmpsb
mov
and
cwtl
lcall
fcompl
lods
sub
dec
pop
loop
xor
cmp
mov
mov
fnstcw
imulb
push
into
inc
fnstsw
mov
test
xchg
inc
lods
test
out
movsb
leave
fistpll
pop
inc
inc
sub
ficoms
lods
stc
adc
fwait
je
cmp
dec
popf
mov
dec
or
cmp
aad
push
mov
xchg
loopne
movsb
roll
xor
cli
sbb
xlat
mov
mov
dec
mov
dec
repnz
aas
data16
sub
roll
xor
js
and
imul
movsl
leave
cmc
lret
xchg
das
insb
ja
data16
enter
mov
fiaddl
shr
pop
add
dec
mov
push
gs
stc
xchg
iret
push
mov
in
es
mov
addb
mov
pop
leave
sbb
jp
dec
jp
mov
push
lods
pop
or
adc
popl
stos
cmp
push
fcom
inc
mov
push
rcrb
sbb
jmp
btr
and
or
jg
repz
insb
ret
xor
rcll
add
addps
fadd
jnp
in
ljmp
mov
xchg
gs
or
mov
mulb
ret
outsl
popf
andb
shlb
out
inc
pop
mov
sbb
push
sbb
dec
movsb
mov
insb
rolb
je
mov
dec
and
and
cmp
add
adc
mov
ret
xchg
or
js
add
pop
mov
in
xor
insb
insl
fmuls
subb
add
pop
sub
into
adc
inc
lcall
aas
rcr
cmp
outsl
mov
jne
in
add
mov
in
call
push
ljmp
cmp
sub
and
rcrb
dec
sahf
popa
movsb
push
ljmp
inc
fcoml
and
jl
sub
cltd
add
and
pop
cwtl
icebp
loope,pn
daa
in
icebp
sbb
cmp
lret
cmc
sbb
scas
dec
xor
sarb
push
push
insl
cmp
mov
andb
stos
loop
add
jae
sbb
jno
pop
cmc
push
ror
iret
loope
push
gs
test
popf
mov
mov
push
in
pop
xchg
xor
int
inc
dec
push
lahf
sub
cmp
pop
cmp
shll
dec
and
cmpsl
mov
jmp
mov
jno
mov
pusha
jns
test
mov
cltd
mov
mov
jne
div
ss
push
iret
js
in
and
sub
inc
sbb
mov
cmc
icebp
rcrl
mov
int
std
mov
mov
test
rcrl
fdivr
lods
xchg
int3
inc
outsl
inc
sbb
mov
out
mov
xchg
daa
xchg
dec
insb
dec
cmp
cmpsb
sub
and
mov
loopne
pop
std
mov
aas
hlt
test
fs
shl
dec
test
out
pop
or
pop
mov
mov
pusha
aaa
mov
ret
sbb
xor
lret
cmp
fwait
xor
je
push
scas
pop
inc
pop
iret
add
push
inc
add
sbb
push
mov
fs
jl
lods
or
lock
mov
xor
cld
clc
dec
push
push
mov
jp
outsb
mov
cmp
cmp
mov
call
or
xchg
inc
addb
in
xchg
mov
dec
inc
inc
xchg
mov
jg
push
mov
lds
orl
and
push
push
mov
into
pop
sbb
add
jns
enter
cmp
xchg
rcrl
enter
cmpsl
rcll
hlt
cltd
pop
xor
shlb
xor
xor
aam
nop
lds
addr16
sbb
sub
rorl
cmp
mov
rorl
in
inc
jns
ret
ffreep
or
insb
pop
dec
mov
xor
mov
mov
int3
mov
xchg
cli
mov
inc
pop
jnp
std
call
sub
aas
cltd
mov
and
test
fadds
xlat
gs
xor
and
fwait
mov
fsts
call
xchg
jmp
les
and
nop
adc
jle
add
loope
cmpsl
testb
fnstcw
les
jae
jne
xchg
or
ficoms
mov
outsl
faddl
adc
lret
call
fisttps
js
mov
inc
fsub
or
sarl
lods
mov
pop
fists
call
inc
pop
leave
je
push
cltd
xor
cmp
and
in
add
sub
test
jp
xchg
les
insl
dec
cmp
rolb
jbe
lahf
aas
sbb
xchg
add
jno
jbe
push
bound
push
enter
pop
iret
pop
je
add
jmp
lock
imul
test
in
insl
test
shrl
push
les
popf
scas
adc
and
add
ret
scas
adc
jmp
out
je
lods
inc
xor
repnz
popf
and
ret
jns
lea
icebp
out
test
or
aam
lods
dec
mov
xor
or
out
aaa
mov
mov
jmp
mov
outsl
mov
pushf
div
js
adcl
lret
push
in
pop
jmp
rcr
stos
ljmp
sub
and
ljmp
adc
aad
pop
aas
cwtl
pop
in
jle
push
jge
test
adc
out
adc
lret
popf
pop
sub
loope
and
xchg
test
xabort
aad
call
shrb
xchg
or
pushf
jg
orl
ret
nop
repnz
or
add
xor
inc
or
jecxz
xor
aaa
pop
cmp
pop
inc
lock
pop
lods
in
adc
imul
xchg
and
loope
fwait
addl
cmp
fs
ss
xor
xchg
xchg
lret
inc
mov
mov
cmpsl
fstl
push
stc
inc
xchg
inc
inc
cmp
cmp
scas
imul
lods
xlat
sti
lahf
xor
cmp
inc
mov
xor
sbb
add
xor
inc
mov
mov
loop
or
or
dec
icebp
in
sarl
dec
roll
mov
shlb
or
jle
mov
jmp
iret
and
inc
sub
repz
ss
data16
and
mov
in
push
aas
iret
xor
fucomip
jns
mov
xor
rorb
inc
inc
adc
mov
push
inc
lds
stc
cltd
les
push
mov
loope
das
sub
in
test
inc
das
popa
js
xchg
cmp
bound
js
lds
xchg
clc
lret
sub
sarl
mov
movsl
xchg
repz
xor
inc
dec
sub
cs
or
shrb
add
adc
jle
aad
iret
pop
sub
ret
jl
cld
or
sbb
mov
fisubrs
sahf
lock
stos
and
dec
stc
push
pop
divl
imul
pop
mul
js
xchg
outsl
test
js
fstpl
jl
or
pop
mov
clc
or
test
push
push
imul
iret
cmpsb
push
xchg
dec
xor
dec
call
fidivs
cmp
data16
lds
inc
sbb
jo
scas
in
inc
push
and
mov
jb
mov
push
cwtl
scas
pop
imul
ljmp
out
dec
es
mov
iret
andl
mov
dec
cmp
lods
shlb
push
fisubl
add
sub
sbb
xchg
fsts
inc
aam
cmp
scas
orb
push
xor
mov
push
fmull
in
sahf
lret
mov
sahf
imul
pop
inc
out
fcompl
out
lret
pusha
push
scas
lahf
inc
dec
mov
test
xchg
xor
stos
sub
mov
lcall
stc
jmp
imul
test
push
jecxz
outsl
sti
mov
cld
dec
repnz
sub
sub
sbb
stos
movsb
xchg
mov
or
pop
and
cltd
xor
xchg
enter
dec
xchg
jmp
push
sub
out
clc
ret
xchg
rcrl
mulb
imul
mov
push
mov
push
pop
push
push
mov
gs
xchg
pop
call
je
lret
and
and
push
xchg
cmpsb
lahf
pop
test
scas
inc
pop
mov
in
les
xchg
xor
mov
push
push
mov
aam
rcrl
hlt
xor
adc
inc
pop
cwtl
push
nop
fs
mov
addr16
dec
cmp
cmc
xor
dec
fwait
ret
adc
popf
add
cmpb
test
ficompl
xchg
imul
fcmovnbe
push
push
mov
loope
hlt
insb
stos
das
mov
jmp
mov
xchg
xor
lret
sub
pop
push
dec
jno
in
stos
cmpsl
fimull
pop
jge
int3
xor
push
xchg
insl
shlb
mov
push
lret
je
mov
mov
aaa
pop
pop
push
push
jb
pop
js
std
sub
add
jl
sub
lcall
sahf
cmp
dec
imul
sbb
or
push
test
incl
mov
adcb
enter
fdivl
sbbl
cmp
addr16
popf
inc
mov
cmpsl
push
inc
push
stos
adc
jle
mov
pop
dec
out
fnstcw
adc
mov
ljmp
add
jl
jmp
enter
mov
mov
jg
push
cwtl
int3
js
mov
fisttps
shrl
push
push
imul
add
and
and
enter
jmp
jg
aas
test
pop
xor
mov
adc
dec
add
stos
cmp
mov
aad
cmp
jns
call
mov
push
push
roll
and
div
mov
movb
or
loope
movl
xor
pop
pop
ret
rorl
lods
or
pop
pop
mov
sbb
movsb
je
xor
sbb
cltd
icebp
xchg
cmp
mov
movsb
scas
xor
fsubs
mov
jecxz
movsb
pop
test
inc
fldt
pop
jl
insl
fdiv
dec
adc
adc
xchg
int3
imul
leave
sbb
cld
xchg
insb
aas
shl
pop
movl
or
cmp
lret
idiv
movsl
adc
cmp
push
aas
adc
sub
fidivs
and
out
push
out
in
sub
insl
repz
xchg
lea
xchg
in
loopne
cmp
lret
pop
jno
neg
cld
jae
add
xchg
sbb
cld
mov
xor
stc
jns
inc
movsb
mov
lods
negl
or
stc
sub
aad
sbb
outsl
fadds
sbb
dec
cmpsl
mov
mov
adc
in
mov
jns
es
sub
jbe
mov
pop
mov
mov
daa
xor
jmp
mov
addr16
stos
jp
cmp
dec
sarb
and
loope
sbb
mov
mov
and
into
mov
jnp
ret
xchg
lea
xchg
mov
push
sbb
pop
std
gs
lcall
and
ror
inc
dec
pusha
scas
lcall
sbb
push
ss
xchg
in
inc
sub
push
mov
pusha
pop
dec
insl
sbb
jno
or
push
cwtl
lea
and
jno
aad
push
jmp
sarl
cmp
xchg
lret
dec
xchg
push
lods
popl
mov
in
pop
es
mov
test
popa
mov
adc
or
ficoml
jmp
inc
test
jns
fcmove
loop
out
or
hlt
or
xchg
mov
fiaddl
es
inc
loop
mov
jg
adc
jle
pop
and
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
movl
mov
mov
lea
mov
mov
movl
mov
xor
mov
sub
mov
movl
mov
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
jmp
mov
test
lcall
jp
fstpl
jp
mov
or
mov
repz
mov
or
cmpsl
mov
icebp
in
cs
push
shlb
stos
or
inc
jae
and
rcl
mov
jle
adc
adc
and
pop
adc
inc
aam
sahf
xchg
sbb
divl
push
xchg
out
mov
repz
xchg
ret
movb
sarl
test
loope
lahf
and
test
shll
mov
into
mov
add
fwait
mov
or
out
das
fldt
cmpsl
dec
int
and
jle
outsl
lea
cmc
cs
enter
cmc
push
sub
stc
outsl
mov
in
inc
inc
sub
insb
fiadds
xchg
sarb
sub
xchg
cmc
into
xchg
ror
mov
adc
cli
gs
lock
push
out
arpl
clc
aam
jnp
sarb
xchg
imul
lret
mov
cmp
lahf
and
jno
jle
shlb
jne
mov
push
jae
push
into
adc
daa
jb
mov
into
ret
xchg
pop
nop
fstpt
sbb
out
add
nop
cmp
sub
pop
lock
cmp
push
and
xchg
fisttps
inc
stc
sub
iret
mov
shrl
sbb
sub
or
add
add
sbb
mov
xor
and
das
mov
push
and
stos
dec
jae
iret
daa
fldl2e
fs
pop
nop
pop
xor
xor
adc
push
dec
inc
jo
xlat
aaa
cmp
jnp
mov
arpl
xchg
notl
gs
xor
xor
jge
int3
lahf
imulb
sbb
out
fs
cmc
leavew
inc
sar
jp
cmp
stc
sub
cs
cli
cli
rcl
sarl
popa
lret
or
sarl
test
stos
mov
push
outsl
push
xchg
fnstenv
cltd
in
in
mov
push
movsl
call
inc
iret
outsb
enter
lea
inc
mov
dec
adc
xlat
clc
xor
aas
mov
adc
lods
push
cs
adc
cli
or
adc
add
push
stos
in
mov
inc
mov
mov
mov
cmpsl
int3
loop
icebp
adc
jecxz
jo
mov
cmp
xchg
inc
call
loop
mov
sub
mov
das
test
and
jmp
popa
sbb
mov
subb
jae
sti
test
mov
mov
adc
cmpsl
mov
xchg
ljmp
sbb
push
out
cmp
mov
sbb
sbb
inc
add
mov
test
insb
leave
dec
or
cli
daa
fdivrl
arpl
adc
cmp
and
or
cmp
xchg
lock
ficoms
inc
cmp
sbb
loop
xchg
jns
lahf
jmp
mov
daa
xrelease
adc
mov
jp
and
pop
xchg
ljmp
push
outsb
push
mov
inc
mov
rorl
in
aas
sbb
int
push
inc
add
pop
xchg
imul
xlat
jo
in
sahf
fmull
push
xchg
dec
pop
push
push
and
repnz
push
dec
shl
mov
pushf
aaa
mov
lock
push
data16
outsb
mov
adc
out
dec
sub
stc
mov
loop
stos
fcomps
pcmpgtd
xchg
pop
mov
testb
inc
dec
push
dec
cwtl
xchg
dec
test
cltd
jnp
insl
lret
sbb
push
repnz
cltd
out
aam
outsb
fsubs
mov
scas
add
mov
xchg
pop
push
mov
shrb
repnz
mov
dec
in
movsl
aas
lret
dec
mov
dec
mov
out
sbb
xchg
dec
stos
mov
mov
aas
sbb
cmpsl
adc
shll
lods
ss
stc
jno
push
mov
sbb
or
in
or
mov
xor
mov
and
mov
xchg
pusha
adc
in
pop
adc
jg
pop
inc
dec
stos
adc
loopne
mov
fbld
push
imul
add
or
dec
call
mov
pop
xchg
dec
sti
push
fwait
mov
scas
subl
test
inc
inc
add
rcrb
push
in
pop
xchg
jge
mov
scas
adc
mov
scas
arpl
pusha
es
sub
cltd
jb
and
sti
pop
mov
pop
sti
mov
shr
std
or
idivl
add
mov
dec
push
out
aam
push
inc
and
out
push
pop
mov
shrb
push
adc
shl
sbb
mov
mov
into
loop
std
cmc
ja
arpl
jo
sti
sarl
repz
bnd
ljmp
lods
and
insl
int
and
xchg
sbb
sbb
adc
xor
mov
mov
setle
push
pop
sbb
test
jbe
bound
lahf
divb
lds
cld
adc
fnsave
imul
and
outsl
cmpxchg
xchg
stc
push
xchg
out
dec
xchg
shl
add
xchg
ja
lret
mov
cmp
stc
pop
dec
repz
lods
cwtl
add
jmp
push
or
ja
push
int
mov
adc
mov
cmp
movsl
sub
fxch
adc
shl
int
xor
lret
loope
sbb
inc
cmp
add
push
ficompl
mov
push
insl
addl
cmp
rclb
mov
imul
pushf
popf
rclb
or
repnz
jecxz
lret
lcall
or
xlat
jns
mov
push
sbb
or
fwait
push
add
mov
cmp
dec
fmulp
sbb
fmuls
xchg
jecxz
push
lock
out
test
pop
and
outsl
jecxz
xchg
mov
sbb
sub
ss
xor
iret
add
enter
movsl
mov
nop
adc
lds
jp
cltd
dec
lea
jae
pop
or
mov
imul
mov
or
imul
xor
pop
gs
daa
xor
lods
mov
mov
add
in
int3
cmc
outsb
adc
imul
aas
sub
xchg
push
out
add
xchg
sbb
mov
lock
mov
xlat
xor
out
push
push
in
sub
iret
cmc
xchg
fwait
insb
add
xchg
scas
iret
mov
cmpsb
push
pop
cmc
sbbl
xchg
stc
jo
sbb
out
pusha
bound
xor
mov
int3
push
push
jbe
ja
gs
xor
cmpsl
int3
xchg
add
ret
jns
std
mov
mov
inc
stc
push
fidivl
scas
fmull
jl
inc
test
ds
jmp
or
aad
xchg
ret
adc
addr16
dec
cmpsl
jl
iret
pop
iret
xor
push
xchg
lods
lds
cs
or
adc
mov
or
pop
jg
mov
sar
test
out
xor
mov
sub
fwait
push
sub
shll
xchg
shlb
test
xchg
aas
test
clc
ja
ds
lcall
cltd
loop
xor
cmpsb
adc
or
dec
adc
push
or
shl
jmp
inc
mov
sbb
cs
cwtl
mov
imull
std
add
sti
mov
dec
sbb
dec
fs
es
stc
icebp
pop
mov
movsb
or
and
sbb
adc
cli
mov
sti
or
ja
xor
cmpsb
in
dec
cmp
jb
ds
js
out
data16
adcb
sahf
pop
call
cmp
add
push
push
dec
lds
xchg
aaa
fsubs
sbb
rcrl
insb
out
sub
das
xchg
jl
pusha
mov
or
lea
out
inc
cmp
pusha
xchg
cmp
mov
imul
shrb
inc
mov
out
cmp
mov
inc
push
int
mov
loopne
cmp
out
cmpsb
and
cmp
cmp
testl
adc
es
jge
fbstp
outsl
fdivs
cmp
xchg
xor
dec
shrd
arpl
add
mov
add
rclb
mov
loop
lods
mov
int
mov
sbb
mov
out
xor
jnp
popa
add
cld
pop
fcmovnbe
scas
loop
dec
adc
or
jecxz
jb
or
xor
or
jg
ret
icebp
sbb
mov
sub
dec
jne
ja
pop
xor
push
cwtl
sbb
sti
sbb
outsb
cmp
pushf
or
gs
in
dec
aad
rol
test
xor
test
jmp
arpl
jmp
mov
adc
pop
and
cld
iret
mov
or
ljmp
jl
mov
pop
ret
in
jmp
fsubr
nop
cmpsb
pop
cmp
pop
fwait
es
lahf
push
lret
movb
cmp
dec
push
cmpsb
mov
dec
push
lds
mov
push
loope
sub
jnp
shr
push
mov
out
int3
arpl
sbb
dec
jb,pn
add
jmp
dec
push
sub
repnz
mov
push
cmp
cmp
test
dec
cmp
sub
sub
es
aas
sbb
add
incb
inc
xor
jp
adc
xor
inc
cli
or
sti
mov
jne
sub
xchg
push
mov
add
mov
cmp
jae
jl
mov
rorb
xlat
stos
pop
fldt
jno
mov
stos
push
cltd
cld
cmp
icebp
mov
stc
mov
ljmp
inc
das
stos
lret
push
push
add
in
sbb
xor
leave
cmpsb
pop
pushf
sub
jge
sbb
pop
in
and
xchg
xor
lea
lea
pushf
enter
scas
xor
stc
xorl
pop
jl
sbb
icebp
jecxz
ret
call
cmp
sbb
not
mov
xor
mov
call
sbb
mov
mov
and
or
cmp
lods
push
ja
mov
and
cli
cli
insl
push
in
jns
clc
cmc
scas
imul
jle
jo
in
sti
je
sub
mov
repz
xchg
pop
leave
mov
shrl
jmp
rolb
xchg
loop
ret
sti
xor
lds
clc
outsb
rcr
push
push
daa
push
cmp
das
cmc
lahf
aad
test
adc
and
pushf
xor
and
loope
cmpsb
lret
add
leave
rcl
xchg
push
adc
and
loope
sbb
pop
xchg
and
sbb
lods
clc
aam
mov
pop
inc
xchg
movsl
inc
jp
mov
jbe
outsl
sbb
fs
test
inc
test
mov
rcrl
aas
lea
xorb
sti
mov
dec
cmp
push
inc
ds
jp
xchg
mov
fistl
and
push
pop
test
sahf
jge
mov
daa
clc
fidivs
sub
test
push
mov
mov
aaa
or
js
filds
dec
es
push
decl
cmp
cmpsb
ret
fisttpll
pop
test
out
pop
movsb
xlat
sahf
in
fs
inc
scas
lea
into
mov
cmp
call
addl
sbb
adc
arpl
push
cmp
decb
pop
adc
inc
xor
sbb
nop
aas
andl
or
in
xchg
jno
fistl
push
insb
inc
les
out
pop
ja
xor
cld
xchg
pop
inc
inc
jnp
cmp
sbb
loope
popf
nop
popf
push
adcb
in
dec
add
cli
clc
push
out
xor
and
ficomps
jns
cmpsl
jo
outsb
js
cmp
sbbl
jp
sbb
ret
or
out
inc
in
xchg
adc
pop
stc
jle
mov
jne
lahf
cs
arpl
fsub
push
jne
les
cltd
aam
cli
js
sub
pop
jp
sub
add
into
jnp
push
push
adc
test
inc
in
adc
add
sbb
fs
rclb
jns
mov
in
pop
jnp
adcb
cmp
inc
outsl
push
leave
sti
lret
inc
lods
dec
and
jg
push
cld
pop
data16
outsl
mov
mov
inc
push
push
lahf
cli
mov
dec
sbbb
add
pop
dec
incb
idivl
faddl
imul
pop
outsl
or
cmpsl
jns
inc
sahf
in
xor
adc
je
or
loopne
jne
fstpt
in
fs
mov
aas
js
repnz
cmp
mov
xor
add
add
dec
dec
lds
mov
hlt
hlt
dec
xchg
enter
mov
inc
stc
mov
push
fiadds
popl
cmpsb
scas
and
xor
aas
jle
adc
lcall
out
imul
scas
out
push
leave
loop
pop
ficoml
ret
xchg
jp
mov
icebp
adc
daa
sbbb
aam
push
adc
pop
dec
mov
fiaddl
pop
pop
push
and
inc
fs
add
push
outsb
pop
imul
in
mov
mov
stos
push
ja
sbb
fidivrl
dec
insl
and
push
incb
jp
jnp
cmpb
popa
imul
loop,pt
es
sbb
sub
test
push
or
mov
push
stc
xchg
sbb
xor
push
adc
fldl
into
icebp
in
xlat
xchg
pop
cmpsb
push
pop
clc
push
in
mov
imul
or
inc
sbb
js
and
fucom
add
adc
leave
test
lods
cs
cwtl
add
push
outsl
stos
sbb
lcall
dec
mov
pusha
aas
mov
and
jg
xchg
out
push
or
out
xlat
sbb
pop
gs
mov
sub
aas
out
loopne
imul
push
mov
les
and
test
inc
fwait
sub
test
sbb
sbb
or
cmpsl
repz
xor
mov
pop
cmp
in
mov
in
adc
arpl
leave
out
sub
or
pop
popa
lahf
add
aad
nop
clc
push
mov
sbb
loop
subl
insl
js
sub
or
cmp
mov
xor
xor
outsl
data16
push
jg
ficoms
dec
lret
lar
dec
jle
push
mov
jbe
or
nop
pop
ret
fildl
sbbl
inc
and
pop
test
hlt
mov
es
dec
add
mov
xor
fsub
and
mov
int3
mov
inc
in
test
or
cs
xchg
in
or
push
idivl
insl
sarb
xor
pop
adc
repnz
mov
mov
scas
pop
mov
mov
cmc
js
cs
data16
fs
push
add
push
sbb
xchg
fs
out
push
push
xchg
aas
xchg
jno
and
jne
sub
mov
push
repz
sub
int3
push
dec
shl
fstpl
outsl
pop
shlb
dec
mov
inc
xchg
cmp
je
jns
sub
out
sahf
inc
mov
gs
in
fs
xlat
ficompl
fimull
inc
and
pop
dec
jb,pt
adc
sahf
dec
or
shrl
mov
push
das
sub
leave
push
xchg
adc
jae
mov
add
xchg
jmp
daa
and
ja
pop
and
add
add
mov
sbb
stos
pop
test
test
push
pop
mov
leave
push
jns
xor
mov
sbb
dec
push
cmp
xchg
jne
shl
jb
nop
jb
mov
cmp
scas
dec
fldenv
roll
mov
xchg
push
mov
mov
sar
xchg
adcl
addr16
xchg
sub
xchg
mov
or
sub
fs
sub
jne
fs
je
sub
mov
out
adc
push
or
jmp
pop
out
xor
gs
fcoms
mov
testb
cmp
dec
call
push
sub
xor
leave
dec
in
int3
pushf
sub
fidivrl
jle
or
jg
cmp
mov
shl
insl
dec
mov
jle
ds
jbe
inc
lods
mov
in
dec
aaa
push
into
nop
dec
pop
mov
sub
imul
fmuls
sub
adc
mov
ss
fistpl
jle
push
xor
ljmp
mov
xchg
mov
mov
cld
jne
pop
xchg
jmp
add
adc
sub
dec
loope
inc
xor
mov
sub
xor
aas
pop
sti
out
hlt
mov
xchg
mov
mov
popaw
jnp,pn
xchg
lret
push
or
clc
xchg
cmp
mov
push
and
or
rorl
fwait
aam
inc
lds
sub
out
insl
int3
cmc
scas
push
dec
cld
mov
std
or
dec
mov
sahf
xchg
outsb
fwait
es
mov
pop
movsb
sbb
adc
jg
ficompl
fs
add
jp
sbb
lock
xchg
aaa
cmpsb
push
fbstp
rcrb
fimuls
xor
pusha
mov
stos
pushf
mov
or
dec
jno
test
or
testb
cmp
out
sbb
fwait
pop
test
test
mov
js
in
stos
pop
mov
mov
inc
cmp
pop
or
sarb
mov
arpl
pop
aam
pop
mov
std
insl
fsubs
ja
int3
cs
mov
fwait
movsl
es
enter
sub
and
out
sub
imul
xchg
push
fisubs
mov
mov
sub
add
or
and
mov
test
stc
sbb
daa
data16
mov
je
sbb
dec
lds
lds
imul
sbb
jl
loopne
out
push
inc
or
fadd
mov
repnz
pop
hlt
mov
dec
and
add
stc
bound
scas
sbb
sub
adc
js
jmp
lcall
inc
and
aad
out
shll
negl
icebp
ds
push
jmp
pop
xchg
repz
adc
clc
xchg
push
push
out
ret
clc
push
outsb
mov
inc
shrb
push
aam
pop
and
adc
aas
pop
and
xchg
mov
mov
icebp
mov
popf
xchg
mov
xchg
jno
cmp
insb
jecxz
popa
movsl
xchg
inc
data16
cmp
divl
cmpsb
out
sbbb
test
mov
sbb
and
rorb
ss
and
mov
xchg
pop
cmp
fisttps
cs
push
sub
pop
fwait
jo
lret
aad
ljmp
outsb
dec
inc
popa
daa
jmp
mov
je
mov
mov
fwait
and
push
leave
adc
cmp
push
dec
push
sbb
sbb
popf
sbb
lret
and
filds
stos
lods
in
std
in
cmp
pop
mov
test
pop
scas
cmc
or
out
fwait
or
dec
adc
dec
push
jl
mov
lods
insb
bound
cmc
fwait
pmulhuw
popa
mov
lock
ret
xlat
mov
stc
stc
pushf
sahf
rcrl
xchg
pop
inc
inc
adc
push
sti
sub
sti
jp
cmpl
lods
xchg
xor
mov
fs
cmp
cwtl
test
sbb
or
xor
mov
lods
mov
scas
add
movb
lods
repnz
lret
mov
sbb
jmp
inc
or
fisubrs
dec
inc
dec
in
cmp
xor
xchg
xlat
movsb
mov
pop
cmp
iret
mov
std
inc
and
jb
shrb
sbb
jge
sub
mov
add
shlb
pop
add
fisubl
push
out
pop
push
cmp
add
sbbl
xchg
xor
sub
leave
flds
push
es
call
mov
push
jnp
std
arpl
push
lods
add
movsl
xchg
test
data16
lods
mov
pop
std
test
dec
xchg
orb
inc
clc
arpl
xchg
inc
push
push
mov
add
or
out
mov
ficoml
cli
das
push
add
jns
mov
shr
pavgb
stos
in
adc
lods
push
fistl
or
jae
or
cli
outsl
jne
out
dec
negb
push
and
fdivl
sti
jle
loope
imul
mulb
adc
add
dec
in
dec
sub
push
cmpsl
or
ret
out
out
sbb
popl
xchg
cmp
jl
jmp
scas
mov
mov
mov
nop
inc
jmp
aad
test
daa
add
outsl
add
in
in
test
push
sbb
xchg
cmp
sbb
mov
and
mov
push
pop
adc
sub
pop
pop
ret
add
shll
in
mov
fwait
dec
push
sti
inc
fbld
sets
cmp
or
lret
mov
leave
and
sbb
notb
addb
jle
xchg
cli
aaa
ror
adc
lea
adc
and
mov
push
test
arpl
test
mov
xchg
repz
sub
jno
jl
pop
std
and
adc
mov
pop
dec
xchg
mov
pop
push
icebp
or
push
movsl
test
into
ja
aaa
add
dec
dec
es
arpl
pop
lea
jmp
jo
mov
inc
inc
ds
in
ss
sub
or
mov
jecxz
or
jb
jl
clc
pop
push
insb
mov
aam
xor
inc
cmpl
mov
outsb
pop
ret
inc
in
iret
adc
xor
faddl
movsl
sbb
nop
inc
push
clc
jns
pusha
mov
mov
sub
std
out
xchg
dec
movsl
data16
sbb
iret
push
adc
out
mov
ds
out
lds
pop
into
outsl
and
dec
lods
sahf
imul
mov
xorl
or
ljmp
int
or
jl
xchg
pop
insb
and
cmp
dec
mov
dec
push
cld
or
fidivs
arpl
popa
cltd
xor
loopne
jle
dec
or
pop
dec
nop
add
jmp
cltd
test
addr16
stos
jl
popf
dec
mov
in
aas
loopne
out
and
xchg
jnp
stc
inc
in
sbb
mov
xchg
inc
inc
dec
push
push
rcll
xchg
je
dec
in
xchg
ljmp
shl
ljmp
cmpl
xchg
std
mov
xchg
out
jb
xchg
pop
push
lcall
mov
mov
pop
hlt
inc
sarb
shll
repnz
inc
pushf
adcb
push
mov
and
push
std
addl
fcomi
repnz
dec
in
shrb
enter
cltd
in
ds
push
stos
sbb
aad
fs
jl
pop
or
test
ljmp
dec
pop
push
dec
mov
into
mov
inc
test
mov
xlat
jns
into
pop
push
int3
aas
inc
inc
arpl
xchg
aam
sub
add
cvtps2pi
mov
add
ficoms
xor
pop
adc
jb
loope
lock
sbbl
in
insb
xchg
cmc
sbb
loope
push
pop
xchg
imulb
movsl
in
fwait
cmp
bound
cwtl
loopne
ret
lods
and
jo
test
pop
push
pop
add
ret
aas
cmp
daa
mov
stos
jmp
movsb
pop
aad
pop
mov
loope
cmp
mov
xor
and
fnstcw
les
jmp
push
imul
adc
leave
inc
pusha
repz
test
or
incb
lock
mov
into
cmpb
add
dec
xchg
jmp
test
xchg
mov
shll
push
jbe
ljmp
pop
imul
inc
fistpll
xor
and
rolb
adc
lods
adc
adc
movsl
adc
fiadds
aaa
fidivs
push
test
in
mov
and
and
or
sub
mov
movsl
hlt
lret
jo
jb
or
or
lcall
scas
sub
mov
xchg
inc
jl
aas
pop
imul
mov
mov
mov
dec
int
sbb
decb
out
psrlq
loop
mov
fcoms
dec
out
sub
cld
push
add
xchg
sub
adc
icebp
or
dec
stos
push
xchg
jnp
lock
out
dec
add
movsb
loopne
sbb
andl
mov
jnp
subb
xchg
lret
aas
fistps
movsb
scas
push
clc
or
dec
xchg
mov
xchg
into
mov
cmpsb
sub
mov
push
add
push
inc
push
add
mov
and
inc
call
scas
fimull
lret
mov
iret
sub
fwait
jg
es
add
and
xor
sbb
loop
mov
adc
es
cld
add
or
je
test
cmp
mov
sbb
push
addb
dec
cltd
leave
jp
leave
push
movsb
mov
ret
stos
popf
adc
mov
sub
xor
test
sbb
std
mov
sub
rol
out
pop
aaa
mull
loopne
sbb
daa
xchg
pop
aas
mov
xor
mov
or
subb
imul
pushf
push
push
dec
jnp
jae
movsb
push
rorl
mov
out
mov
mov
cmp
xor
stos
or
xchg
lcall
dec
jecxz
xor
xor
clc
mov
xchg
cmp
sahf
cmp
mov
xchg
in
lret
cltd
divl
pop
pop
pop
sbb
add
and
add
mov
push
sbb
scas
sahf
mov
cli
jg
or
push
add
cltd
and
push
ja
test
xchg
scas
sbb
xchg
add
int3
and
arpl
imul
adc
pop
insl
dec
cmp
inc
add
or
ret
dec
je
aas
dec
stc
and
popf
ret
inc
mov
mov
or
call
pop
fwait
mov
mov
pusha
test
xchg
adc
xchg
aas
mov
loopne
es
dec
pop
mov
lcall
les
js
dec
mov
lods
jno
enter
mov
imul
je
jb
sbb
mov
mov
sub
cmpsl
icebp
movsb
xor
inc
cmp
test
adc
adc
call
aaa
shr
ja
popl
pop
xchg
into
jno
data16
icebp
out
cmp
inc
andl
bound
into
ret
inc
mov
lods
xor
arpl
in
shl
out
push
in
pop
and
aaa
rcrb
push
test
jno
and
dec
lock
les
mov
jl
movsb
ret
and
ljmp
test
push
mov
mov
bound
dec
divl
fnsave
lcall
push
movsl
mov
sbb
rolb
add
subb
ret
lock
adc
push
adc
nop
xchg
mov
cmp
aam
addr16
cmp
cmp
mov
jp
xchg
xchg
dec
pushf
jb
aam
mov
ja
movsb
sbb
mov
std
cmpsb
mov
scas
std
inc
jp
loope
rcrl
pop
sub
cmp
stos
sub
sahf
mov
imul
cmp
nop
out
lcall
xor
pop
mov
sete
push
xchg
pop
cmc
repnz
mov
jno
or
pop
push
jmp
sbb
ss
mov
dec
mov
mov
jmp
das
ficompl
pushf
xlat
test
cmp
or
rclw
shl
into
or
inc
push
mov
test
xor
adc
stos
dec
sarb
out
xchg
ja
hlt
xor
in
jb
pop
lahf
mov
jno
push
int
sub
pushf
cmp
fdivs
inc
fdivrl
test
lock
je
mov
mov
add
mov
popa
in
dec
ja
popa
shl
xchg
ret
cs
mov
or
dec
shll
jle
das
add
xchg
cmp
ja
jmp
jno
int3
mov
nop
psadbw
adc
mov
sbb
and
addr16
popa
ret
or
sub
xchg
stos
repz
lcall
mov
and
push
cli
xchg
sbb
out
xor
push
ss
or
jp
lret
test
push
ja
arpl
cmp
jecxz
imul
push
aas
push
xor
cli
aam
push
dec
out
fcmovnb
push
ja
call
stos
movsl
mov
cmp
imul
jg
jle
in
insl
int
sub
inc
mov
iret
xchg
roll
movsb
cld
xchg
popa
cmpsl
ss
mov
inc
popf
jle
imul
std
pop
mov
mov
adc
iret
sbb
popf
in
ret
aam
in
push
je
inc
pop
add
or
stos
xchg
adc
or
mov
push
popf
adc
mov
sub
lock
lds
push
jae
rclb
xor
fmull
or
xchg
xor
movsl
mov
and
mov
dec
mov
sub
call
pop
jecxz
dec
or
sbb
jg
outsl
sbb
mov
sub
mov
or
pop
adc
add
das
out
clc
mov
insb
mov
ror
loop
sbb
jne
cmpsl
int
lahf
jno
jnp
int3
stos
cmp
and
xorl
push
lea
cmp
mov
pusha
popf
es
pop
cmp
dec
mov
mov
or
push
sub
rclb
jno
push
cmp
inc
shrl
push
mov
xor
insb
cmp
ret
or
adc
aam
pop
mov
cmc
pop
cmc
sbb
outsb
xchg
mov
popf
cmc
push
sbb
cmp
shll
movsl
mov
add
pop
xor
jb
les
cmpsl
jle
mov
add
sbb
mov
or
ret
divb
mov
out
outsl
add
sub
cltd
mov
dec
xchg
into
arpl
in
push
rcl
lahf
ret
pop
test
or
sbb
lods
mov
paddusw
int3
outsl
call
leave
jge
jnp
das
xchg
or
sbb
push
sub
fs
fwait
dec
xlat
jge
mov
dec
in
jno
or
mov
cmp
push
pushf
or
and
dec
add
scas
loopne
lret
push
push
es
mov
sahf
push
movsb
imul
jl
mov
mov
pusha
icebp
lcall
adc
xchg
je
mov
inc
repnz
sub
into
sahf
pusha
andl
mov
mov
mov
cmp
jne
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
xor
sub
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
jmp
mov
dec
mov
fisubrs
xor
fstpl
jp
or
aaa
mov
out
sbb
sar
push
test
fcmovb
push
mov
fwait
stos
jnp
aaa
or
cmp
mov
outsl
jne
pop
xor
nop
negb
cmp
xor
stos
xchg
mov
and
in
and
stos
mov
push
std
pop
repnz
ss
out
or
or
push
nop
push
cwtl
scas
js
push
mov
add
xchg
dec
adc
fldt
outsl
mov
aad
push
repnz
and
hlt
push
push
dec
repnz
jbe
icebp
das
mov
and
cmp
lret
jge
xchg
roll
dec
sub
and
outsb
cmc
sub
movswl
inc
push
dec
and
imul
cmp
fwait
cmp
dec
pop
push
push
jo
inc
cmpsl
cld
sub
fcmovnb
mov
or
orb
aas
jbe
sub
or
daa
cmp
out
xchg
adc
jbe
jno
call
int
cli
es
xlat
jl
push
dec
pop
cld
pop
fdivs
daa
ret
in
in
lock
fwait
in
aas
sub
cmpsb
iret
pop
mov
mov
or
mov
dec
test
std
inc
cmpsl
inc
fistps
push
int
sub
or
mov
pop
push
sub
push
sub
mov
mov
jno
push
icebp
mov
mov
cmp
push
mov
nop
xor
sbb
int3
pop
dec
lods
leave
cmp
adc
fists
mov
or
imulb
dec
inc
jmp
mov
hlt
xchg
loope
bound
shll
adc
jno
dec
or
adc
push
idivl
cli
inc
jle
jg
loopne
in
cs
or
jb
arpl
push
push
and
stos
int
push
out
mov
inc
xor
mov
dec
xor
inc
adc
push
mov
push
jns
sub
sbb
daa
test
popf
subb
dec
int3
pop
test
pop
adc
sti
test
xor
dec
sbb
movsl
movsb
inc
dec
xchg
std
jae
iret
sub
inc
aaa
ret
out
out
xor
pusha
xchg
pop
pop
sarl
mov
inc
pop
mov
int3
aaa
cmp
mov
test
test
xchg
dec
inc
pop
mov
insl
jmp
ja
testb
xor
cmp
les
inc
dec
inc
dec
jmp
shrl
mov
in
pop
in
pop
adc
adc
movsb
xlat
leave
add
pop
jne
loopne
data16
add
lretw
imul
rcl
adc
xor
add
std
arpl
and
mov
sbb
mov
cwtl
or
pushf
add
sub
push
dec
xor
adc
xor
dec
cmpsl
push
addb
push
adc
roll
mov
imul
scas
addr16
push
jns
rcrl
adc
andl
xorb
clc
imul
inc
and
sub
push
inc
cmp
adc
jnp
dec
in
lret
outsl
mov
push
jmp
mov
mov
mov
mov
fsts
push
mov
jnp
loope
repnz
call
in
xor
and
inc
cwtl
pusha
mov
sub
out
cld
cmp
out
scas
test
dec
jg
pop
push
dec
mov
sub
cmpsb
xchg
xchg
repnz
and
stc
cmp
mov
add
and
js
test
cmc
mov
add
sub
push
jb
sarl
rorb
out
daa
fadds
in
push
std
sahf
test
fistpll
es
xchg
ficomps
faddl
call
jecxz
push
fs
iret
inc
loope
lds
cmp
mov
fs
insl
lea
jae
dec
inc
push
add
xor
cmpsl
push
adc
mov
xchg
call
mov
ja
inc
movsb
pop
mov
lret
or
or
push
popf
test
mov
in
gs
add
inc
bound
das
sub
les
sub
mov
add
jmp
nop
mov
mov
xchg
fwait
rorl
inc
out
inc
inc
pop
pop
jne
or
xor
adc
test
pop
cwtl
shrb
push
pop
lcall
iret
inc
mov
mov
sub
pop
inc
xchg
sub
mov
fucomi
dec
fwait
adc
sub
jne
mov
pop
mov
pop
loope
add
pop
and
push
push
fcomps
mov
in
jmp
inc
es
and
pop
sahf
cli
testl
insb
cmpsb
pusha
and
mov
mov
mov
loopne
int3
sti
mov
push
imul
dec
insb
xor
cmp
mov
jae
push
lods
sub
loope
pop
mov
xchg
int3
xor
jno
jae
in
mov
stc
int
pop
jge
inc
incb
sub
outsl
jo
mov
mov
sahf
lea
mov
inc
jbe
mov
fidivs
in
push
cmp
or
mov
jbe
xchg
sti
dec
or
into
out
enter
adc
or
int3
sub
in
push
jge
pop
mov
aas
mov
sbb
or
cltd
addl
mov
mov
jbe
jle
fxch
jg
cmp
xchg
out
outsl
xchg
popa
stos
jno
je
ds
shll
inc
cmpsb
adc
sbb
rol
les
stos
rorb
pop
xor
jecxz
orb
sbb
test
dec
dec
mov
repz
testl
cld
inc
fnstcw
aaa
xchg
ficoms
xor
jl
aaa
test
mov
ja
dec
fcmove
xchg
lahf
push
sti
or
fidivs
sbb
sbb
arpl
iret
sbb
into
inc
xor
dec
popf
inc
jbe
ds
sub
xor
push
ret
sahf
mov
jg
xchg
inc
fcom
mov
bound
mov
mov
xchg
shl
lret
dec
mov
test
sbb
out
or
xor
inc
rcrl
or
notb
push
sub
sub
jmp
push
in
lcall
popa
sti
push
fisttps
ret
aaa
cs
ror
fadd
ret
out
hlt
mov
je
dec
aam
shrb
jb
inc
ljmp
inc
fistpll
pop
js
lds
and
and
push
mov
cmc
sbb
jb
pop
popf
lods
movsb
jne
or
jp
xchg
pop
inc
shlb
daa
cltd
mov
out
repnz
inc
push
cmpsl
push
push
jnp
xor
mov
mov
rorb
adc
mov
mov
mov
stos
ja
add
decb
mov
loopne
mov
sbb
sbb
test
rcr
fstp
lahf
inc
test
pop
jns
loop
sqrtps
cwtl
pop
mov
sti
les
lods
add
fadds
mov
xchg
call
lock
xlat
xor
pop
orl
mov
in
push
lods
jo
inc
sbb
ss
out
mov
and
jl
mov
fwait
sub
outsb
in
repnz
adc
mov
fwait
test
xchg
je
adc
sbb
enter
mov
icebp
dec
fisubs
cmp
and
or
dec
cmp
movsb
aam
incb
scas
jmp
mov
lcall
jecxz
xchg
adc
or
push
inc
add
imul
mov
inc
inc
dec
inc
hlt
fisttpll
mov
cmpsb
cltd
loopne
scas
mov
icebp
rorb
out
adc
insl
ljmp
or
mov
sub
out
sub
ds
xor
in
shl
scas
lret
push
xor
vprotw
subl
sar
inc
shrb
mov
clc
xlat
out
inc
fisttpl
pop
xchg
cmpsb
lea
lds
xchg
cmp
mov
ljmp
jmp
xor
push
std
mul
fnstsw
sub
jns
mov
mov
mov
sub
push
cmp
mov
add
adc
call
aad
pop
fwait
mov
rorb
push
sub
aad
or
mov
gs
push
fwait
jp
cmpb
adc
add
xchg
icebp
rcl
dec
roll
lcall
test
cwtl
jle
cmp
lock
jle
repz
call
lahf
imul
es
mov
cmc
es
insl
mov
cmp
xchg
stos
pop
cli
adc
cltd
int3
jo
sbb
dec
adc
movsb
fildll
stos
jmp
pop
or
icebp
dec
cmp
sbb
popf
xor
push
les
leave
mov
shll
sar
or
popf
cwtl
adc
ljmp
ljmp
mov
ficompl
daa
pop
test
call
std
call
in
push
cmp
testb
js
xor
ds
ljmp
lcall
sbb
xchg
imul
ds
ss
icebp
and
mov
adc
jg
icebp
push
or
out
ret
outsb
mov
test
pushf
mov
pusha
fildll
hlt
cmp
push
mov
pop
frstor
pop
fucomip
mov
ljmp
addr16
ss
xchg
xchg
mov
pop
inc
test
loop
mov
cmp
xor
pop
in
inc
in
in
xchg
adc
jle
mov
js
ljmp
cmpsl
pop
push
arpl
insb
push
mov
add
cmp
cmp
inc
int3
jns
clc
addr16
xor
outsb
mov
sbb
mov
mov
mov
in
out
cli
inc
fisubrs
adc
fwait
cmpl
inc
lahf
int
inc
lods
bswap
bound
cmpsb
nop
in
adc
shl
into
in
ja
xchg
mov
repnz
test
mov
sbb
out
in
push
sbb
fsubrl
fisubs
es
and
lcall
not
sbb
insl
and
xchg
inc
adc
push
jo
addr16
into
sub
into
inc
std
fdivl
nop
push
or
jbe
and
mov
cmp
sahf
fs
xchg
inc
xchg
pop
sub
add
ds
popa
mov
gs
idiv
cmp
shll
cld
mov
sub
mov
or
pop
add
enter
in
jmp
adc
xchg
adc
sub
das
adcl
xchg
scas
dec
shlb
pop
fcmove
mov
push
sub
jecxz
pop
mov
jl
mov
dec
je
mov
test
stos
mov
jnp
pushf
popa
sbb
xchg
cmpsl
mov
out
push
inc
jecxz
mov
adc
jecxz
dec
and
loope
out
jne
in
mov
sub
imull
cmp
in
lret
std
repz
dec
cmp
jmp
xor
sbb
inc
fcomip
ljmpw
xchg
je
add
pop
pop
push
xor
cmp
xor
cmp
mov
cmp
xchg
cld
pusha
js
jp
les
sub
jl
aaa
push
int
xor
imulb
dec
dec
dec
out
dec
es
jne
test
or
jp
lock
dec
ja
outsb
mov
xor
sti
outsl
loop
test
pop
into
or
add
repz
leave
and
mov
in
test
inc
stc
inc
dec
jno
aas
scas
mov
jo
ljmp
mov
insl
and
imulb
push
xor
ret
call
hlt
in
mulb
test
fistpll
insb
and
aad
xlat
int3
shrl
mov
and
adc
dec
fwait
cmp
std
outsb
inc
pop
dec
xchg
outsb
sub
rcrl
je
iret
in
cmpsb
cli
popf
mov
es
ss
mov
mov
add
push
jl
pop
pop
adc
mov
dec
inc
fsub
std
inc
aas
je
jo
pop
jp
xchg
ficoms
lods
cltd
sub
es
in
sub
mov
fld
fldcw
ffreep
mov
mov
inc
mov
bound
loopne
scas
jne
mov
xlat
xor
mov
inc
enter
pop
clc
dec
adc
push
jae
mov
add
rclb
sahf
jae
in
pop
dec
push
mov
xchg
fbstp
and
sub
push
push
inc
orb
mov
aam
pop
push
xor
mov
push
cwtl
int3
jne
rep
dec
les
add
rcrb
push
inc
sbb
insl
add
dec
mov
sbb
cmp
jge
push
inc
lret
xchg
xchg
add
cld
or
cmp
xor
sti
mov
or
pop
mov
xchg
push
push
adc
cwtl
xchg
jns
jp
push
ret
xor
adc
js
mov
mov
mov
inc
and
pop
xchg
cmc
or
bound
xor
imul
jle
inc
icebp
dec
inc
sbb
xchg
pop
xchg
jg
leave
xchg
mov
not
imul
gs
sub
xchg
mov
fdivs
xchg
mov
mov
aad
sub
or
arpl
mov
mov
loopne
and
fwait
xor
ja
sub
je
orl
dec
loopne
test
mov
cwtl
or
enter
rolb
call
pusha
xchg
xor
sbb
stos
sti
fs
pop
fdivr
bound
sbb
push
sub
inc
xchg
add
fistpll
addr16
ljmp
xchg
sbb
mov
aad
fdivrl
cs
inc
or
cmp
xorb
test
push
int3
fimull
je
ljmp
jl
mov
and
mov
imul
movsl
sub
and
iret
ret
inc
mov
mov
int3
push
lahf
stos
adc
mov
xchg
pop
inc
jmp
or
push
sub
adc
imull
sbb
adc
in
adc
push
cmpsl
cmc
loope
sub
loop
fcoms
mov
mov
cmp
test
outsb
push
sub
sbb
cmp
and
gs
xor
call
das
and
push
pop
push
xchg
push
stos
xor
in
mov
scas
push
es
mov
nop
sub
int3
repnz
xchg
out
mov
enter
pop
pop
mov
push
shlb
dec
lea
iret
dec
add
push
push
cmpsb
fisttps
sbb
xchg
xchg
mov
sbb
fs
repnz
ja
clc
rcll
pop
cwtl
scas
jo
test
test
rcll
out
inc
filds
fwait
push
lahf
leave
add
fwait
push
push
xor
pop
pop
jmp
mov
lcall
jmp
rcrl
cmp
jae
in
jle
dec
adc
fadd
jge
sub
mov
ja
lods
js
pop
jmpw
push
out
lds
ret
js
jle
push
jnp
in
jns
lahf
out
nop
push
or
and
inc
cs
adc
xchg
por
xchg
jmp
fwait
mov
lods
in
lahf
cmp
push
jo
cmp
cwtl
imul
add
int
or
int
add
push
push
in
addb
pop
xchg
adc
lahf
out
mov
out
out
in
jecxz
xor
dec
pop
test
xchg
fisubs
mov
ljmp
add
cmpsl
inc
dec
or
jge
adc
pop
mov
orl
xchg
jge
into
pop
loopne
xor
cmp
xor
dec
push
mov
cmp
icebp
std
and
stc
or
jo
pop
in
sub
loopne
lock
jg
sbb
ja
xchg
and
mov
jp
push
add
xor
repz
and
in
jg
lods
mov
lock
fnstcw
mov
inc
je
cmpsl
mulb
fistps
mov
dec
js
mov
push
or
test
out
dec
rcll
add
add
lds
xor
outsb
imul
jl
daa
and
icebp
push
sub
mov
decl
mov
jl
sbb
jae
das
adc
sarb
xchg
xlat
mov
jne
and
xchg
pop
mov
call
cmp
xor
lret
outsb
mov
mov
mov
mov
cs
int
dec
fidivrs
pop
pop
repz
xchg
jb
cltd
mov
xor
jecxz
xor
cs
shrl
ljmp
test
mov
pop
pop
or
fsubr
aaa
pop
pop
inc
and
mov
dec
addr16
cmp
faddp
push
mov
popa
mov
mov
push
cmp
xchg
into
andb
jae
jae
jnp
in
cmp
inc
js
or
and
cwtl
fldl
cmpsl
cmpsl
xor
roll
dec
sahf
cs
mov
lahf
sbb
dec
mov
mov
pop
xchg
pmullw
push
cmc
push
and
push
lock
jo
movsb
pop
xchg
std
or
pop
add
orl
sti
xor
lahf
je
bound
in
jns
jne
fwait
pop
push
out
cltd
and
or
nop
rorl
test
xor
shlb
cmp
add
imul
or
inc
dec
fwait
aaa
adcl
sub
cmpsl
xchg
aam
popf
push
arpl
rorb
sbb
jge
sub
mov
lds
jae
add
data16
out
lahf
aam
xchg
icebp
sbb
in
fucomp
scas
sbb
pop
movsb
xor
xchg
xor
stos
jecxz
jno
imul
adc
inc
pop
sub
jb
mov
rcll
mov
xlat
and
mov
dec
movsl
mov
push
and
ljmp
inc
orps
inc
cmp
iret
mov
jno
sbb
pop
adc
cs
shl
jl
push
sbb
adc
mov
out
sahf
das
cmp
in
scas
mov
call
stc
cmp
mov
mov
lea
dec
dec
cmp
jmp
xchg
pop
mov
push
mov
xor
lret
fisttps
inc
sti
mov
mov
sbb
mov
pop
popa
pop
push
ds
add
lods
xchg
lea
adc
int
enter
inc
dec
pop
mov
xor
push
lods
dec
add
or
xor
shr
or
sarb
shll
mov
ret
fsub
cmp
dec
sbb
gs
xor
mov
aad
cld
aam
loope
mov
cmp
add
mov
mov
aam
scas
dec
or
mov
call
sbb
cmp
int3
jg
aas
jl
jb
repz
fsubl
stos
mov
jmp
ss
sub
mov
adc
inc
inc
fistl
mov
mov
in
xchg
cmp
mov
test
add
mov
cli
mov
mov
iret
not
in
ret
cmp
scas
iret
sbbb
jo
pop
and
orl
sti
or
mov
in
test
push
dec
mov
cmc
inc
xchg
adc
and
jl
pop
or
pop
mov
xchg
cmc
arpl
xchg
sub
push
adc
mov
daa
out
je
lea
icebp
es
movsl
push
repz
add
cmp
jnp
cmp
mov
fs
jg
mov
add
fnstenv
jnp
push
cmpl
mov
in
mov
aaa
push
mov
or
push
pusha
movsb
sbb
icebp
push
lods
or
lcall
xchg
hlt
add
fistpll
mov
jns
mov
movsb
pop
jbe
lods
sbb
iret
or
lods
mov
stc
xchg
cmp
je
outsb
pop
push
gs
or
loop
lea
rcll
into
mov
rcr
gs
bound
mov
pop
sub
xchg
ror
gs
or
fwait
pop
mov
jo
test
inc
mov
jge
stos
cmpsl
fidivrs
lock
sub
test
movsb
inc
pop
outsl
xchg
rcl
mov
xchg
adc
cmpsb
sti
mov
add
pushf
daa
stos
fldt
xor
in
cmp
adcl
aad
loopne
or
adc
inc
cmp
sbb
adc
mov
cmpsl
mov
cwtl
ficoml
fwait
loopne
aas
xchg
and
mov
dec
vmovaps
dec
pop
and
cmp
test
mov
adc
cli
xor
mov
fbstp
int3
cli
stos
add
outsb
ret
movsl
es
pusha
aad
mov
jl
jle
adc
lds
push
test
es
xchg
sarl
sub
push
mov
and
int
adc
stos
mov
mov
popf
in
add
xchg
add
mov
mov
push
mov
sub
out
repz
mov
lret
in
out
pop
lcall
addl
adc
xchg
sub
mov
shll
int
mov
push
mov
xor
repz
pusha
ret
out
sub
mov
jae
mov
xchg
push
lcall
adc
and
push
and
test
xchg
cwtl
pop
dec
aaa
stos
lcall
mov
insb
cmp
cltd
dec
out
mov
dec
es
mov
jbe
js
enter
repnz
sub
popa
jmp
stos
in
xor
ret
fadds
and
imul
xchg
push
sub
push
cmp
repnz
mov
aad
mov
push
int3
ffree
stos
cmpsl
mov
inc
ds
push
test
hlt
sub
imul
cmp
xor
and
leave
or
cmp
mov
stc
fwait
push
jno
sbb
pop
int3
lcall
xor
mov
xchg
pop
in
mov
inc
pop
dec
add
das
mov
in
pop
hlt
test
icebp
int
das
xchg
es
xchg
insl
fwait
adc
shll
and
push
inc
scas
rcrb
movsl
sbb
and
xchg
dec
imul
dec
push
fcoml
adc
sahf
js
dec
xchg
inc
test
mov
ljmp
jae
cmp
sbb
cmp
mov
pop
xchg
mov
jmp
add
jbe
lds
movsb
xchg
jbe
sti
in
xlat
pop
jns
add
stc
sub
or
mov
pop
pop
adc
jg
cltd
repz
ret
xchg
mov
mov
cmp
icebp
cmc
imul
call
or
bound
pop
xlat
xlat
add
fmul
and
fs
pop
xor
pusha
jecxz
ja
adc
jae
cli
icebp
aas
add
in
and
push
inc
sbbb
adc
dec
mov
jmp
dec
sbb
pop
adc
jbe
test
push
mov
sarb
inc
aas
inc
dec
jo
sub
push
push
mov
inc
imul
mov
cmc
outsl
cwtl
sti
ja
out
sbb
into
lahf
sub
sub
insl
and
mov
or
sbb
mov
push
xorl
sbb
xlat
add
pop
cli
jle
and
jp
imul
je
adc
cmpsb
addr16
pushf
mov
or
pop
mov
push
inc
jge
xchg
ror
lcall
popa
in
mov
stc
adc
sbb
jl
xchg
jecxz
dec
fs
test
pop
lret
cmp
add
es
insb
and
addr16
dec
pop
popa
inc
xor
mov
inc
xchg
jne
test
jo
stos
outsl
in
adc
sti
add
in
nop
pop
jp
xchg
push
movsb
mov
lea
ret
add
shrl
stc
int3
xlat
enter
shrl
int
adc
sbb
imul
test
adcl
and
out
cmp
addr16
fwait
cmpsl
adc
push
and
iret
jo
imul
push
pop
hlt
mov
push
in
pusha
cmc
fs
sub
cmp
movsb
lds
add
dec
xchg
daa
jmp
int
lds
lods
cmp
fcoms
dec
rcll
cs
scas
fistpl
adc
mov
adc
push
ljmp
js
push
or
sbb
in
mov
mov
pop
xchg
and
repz
cltd
scas
sbb
xor
rorl
push
pop
fsubrs
into
pop
outsl
sub
mov
int3
imul
cmp
xchg
dec
mov
adc
in
fnsave
mov
jecxz
push
mov
jmp
sub
repnz
dec
hlt
dec
and
subb
pop
jmp
dec
aam
jno
outsb
pop
pop
mov
movsb
dec
mov
js
cmp
in
mov
inc
shlb
mov
repz
and
ja
insl
pop
sub
xchg
inc
fistl
sub
outsl
pop
jmp
dec
cli
sub
dec
and
ljmp
in
icebp
sbb
mov
shll
sbb
adc
inc
das
push
daa
and
adc
xchg
or
mov
dec
bound
pop
aaa
cmpsl
scas
adc
fimuls
cmpsl
popa
in
cmp
fdiv
shl
js
cli
pop
je
out
sub
ficoms
dec
cmpsb
test
push
loope
mov
outsl
push
clc
int3
fst
xorb
icebp
inc
mov
xchg
cli
push
mov
fnsave
xchg
xchg
push
sub
mov
lods
lock
ffreep
lods
mov
imul
sub
jb
jno
adc
inc
fnsave
in
pop
je
addr16
sbb
jecxz
imul
sahf
stos
xchg
lret
mov
lock
inc
test
mov
stc
adc
ja
adc
aam
cmp
mov
into
cmp
sub
fistl
lock
lcall
mov
pop
dec
mov
and
into
push
push
sub
idivl
insl
jle
mov
sbbb
mov
jbe
inc
repnz
inc
xchg
std
cli
adc
xlat
lock
cmp
jp
inc
fs
or
das
pop
pop
and
inc
pop
and
popa
sub
dec
or
jl
lods
test
lea
clc
pop
mov
fnstsw
jle
add
inc
stos
sbb
into
mov
movsb
jnp
repnz
xor
mov
cmp
inc
out
inc
test
push
cli
pushf
and
or
xor
mov
pop
inc
xlat
repnz
dec
jmp
sbb
push
xor
inc
xchg
adcl
xor
pop
adc
cli
mov
outsb
test
cmpsl
notl
mov
loop
inc
mov
cmp
rorl
push
jl
in
jl
xor
loop
xor
inc
ficoms
test
and
hlt
cmp
jecxz
or
mov
je
aaa
int3
pop
insl
clc
xchg
jno
inc
mov
icebp
xchg
jp
pop
stos
imul
mov
out
fsubp
imul
adc
stos
mov
and
lock
sti
ret
jp
sahf
ret
ficomps
cld
xchg
or
mov
cmpsb
adc
pop
cwtl
xchg
push
in
xor
sbbl
cwtl
clc
cmp
fisubrl
stos
xor
pop
jns
repz
push
lods
cmc
lret
aaa
sbb
add
sbb
fucomip
fstpl
mov
negl
xor
sub
mov
test
lahf
adc
pop
out
hlt
insl
mov
cmp
lret
sti
arpl
adc
or
jae
test
push
pop
add
or
aam
mov
mov
cmpsb
scas
ret
xchg
repnz
xchg
jb
test
gs
popa
jo
mov
mov
sbb
mov
sbb
ret
and
ret
std
call
rcll
mov
aam
sub
les
jb
out
mov
dec
shrl
push
int
cld
jmp
adc
cld
mov
pop
pop
enter
pop
adc
out
fcompl
push
or
dec
sbb
out
mov
shrl
jb
out
cmc
jnp
stos
call
nop
cmp
xor
notb
mov
lahf
loop
mov
cli
push
inc
sbb
dec
pop
jmp
in
movsb
mov
push
sarl
push
in
inc
inc
ja
cmp
ljmp
pop
xor
in
aaa
pop
xor
lret
je
nop
loop
inc
test
adc
xchg
xchg
pop
mov
stc
out
push
xchg
cmp
inc
and
ret
and
cli
icebp
cld
daa
inc
dec
lahf
ret
pop
pop
int
arpl
clc
aad
inc
or
and
insb
jg
mov
fisubl
jp
sbb
lret
mov
sti
test
dec
ret
push
stos
sbb
xchg
popa
pushf
jle
call
addb
ret
pop
arpl
roll
mov
mov
adc
aam
mov
out
sahf
aas
addl
clc
push
aam
dec
cmpsl
adc
into
shrb
fsubl
cmpsl
fnstenv
lods
and
sbb
inc
mov
cwtl
cld
stos
mov
mov
loope
push
out
nop
xchg
mov
out
mov
dec
in
xchg
xor
cmpsl
mov
inc
into
fs
testl
dec
mov
mov
sub
lea
sahf
jecxz
inc
mov
insb
das
or
inc
add
scas
flds
in
jmp
shrl
scas
lea
ja
xor
pusha
mov
mov
loopne
out
add
out
mov
pop
inc
jg
jecxz
or
je
xchg
aad
fisubrl
sbbl
cwtl
jnp
sbb
ficompl
xor
ror
fidivrl
lret
out
mov
add
jl
daa
bound
sub
cmp
aaa
inc
mov
and
jge
xor
add
idiv
pop
int
out
cs
int3
pop
js
jmp
js
fcmovne
idivl
sbb
xchg
repnz
jg
push
mull
jle
sub
pop
inc
sarb
std
iret
mov
rorl
sbb
mov
jno
jp
loop
mov
adc
add
cmpsb
jae
outsb
pop
add
movsb
and
or
das
sbb
sti
mov
mov
leave
enter
fwait
cmp
xchg
or
mov
mov
fisttpll
xchg
ljmp
mov
or
les
test
inc
jno
sbb
pop
push
adc
mov
or
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
lea
xor
cmp
je
lea
mov
mov
sub
mov
pushl
pushl
call
mov
mov
xor
lea
jmp
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
add
mov
mov
movl
mov
movl
movl
mov
sub
push
xorl
push
movzwl
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sbb
mov
mov
xor
mov
or
xor
mov
adc
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
add
mov
movl
xor
movl
mov
mov
sub
xor
mov
mov
xor
sbbl
add
movl
cmp
je
movl
push
jmp
mov
add
mov
dec
mov
andl
mov
sub
xor
adcl
xor
add
subl
div
xor
jmp
sbb
fwait
and
cwtl
or
adc
jp
pop
jp
pop
mov
sbb
xchg
mov
scas
push
inc
adc
fdiv
es
stc
jp
xchg
notl
fwait
pop
mov
fcomps
jno
xchg
mov
xchg
int
inc
and
leave
ljmp
mov
hlt
add
jo
jbe
mov
enter
xchg
pop
or
and
mov
add
xor
pop
sahf
jbe
es
mov
push
and
mov
mov
mov
or
pop
push
ss
aaa
aam
sbb
outsl
sub
or
sub
in
stos
jecxz
arpl
jle
jb
arpl
jne
enter
add
imul
into
shll
mov
push
lret
das
push
xchg
inc
lcall
cli
jne
lea
lret
mov
xor
lahf
pusha
pop
sub
jns
stc
cwtl
mov
cmp
cmp
sub
jbe
or
movsl
cmp
lods
jo
mov
push
push
mov
lock
xchg
push
movsl
sub
shlb
mov
jns
ret
rcl
jns
loopne
xchg
call
mov
xchg
sub
cmp
push
fistpll
lret
jns,pt
dec
adc
outsb
sbb
daa
xor
push
cmp
mov
jne
inc
mov
inc
data16
push
test
mov
mov
sbb
push
cmp
or
cltd
fcmovu
dec
lret
push
adc
in
sub
ja
rcrl
lock
mov
ljmp
sbb
or
movsl
cmc
pop
push
movsb
movsl
orl
subb
ss
xchg
mov
fsubs
mov
cmp
cld
imul
dec
clc
and
gs
xchg
cld
sbb
xchg
inc
jecxz
adc
xchg
dec
into
xchg
jo
movsl
and
scas
inc
je
cmpsb
ds
insb
mov
and
repz
aaa
scas
movsl
inc
sub
cmpb
repnz
inc
imul
push
lods
cmp
pop
lret
pop
cmp
pop
pop
adc
pop
js
mov
test
xor
cmp
adc
xchg
scas
dec
scas
inc
loope
shrl
data16
mov
cmp
jno
in
pop
mov
xchg
call
jl
add
sub
fcmovb
lods
sub
push
fs
add
sbb
in
cmp
out
out
cltd
sbb
ret
mov
jmp
hlt
scas
or
xchg
insb
loopne
sub
outsb
jg
cli
push
push
scas
rorl
icebp
or
sbb
mov
movsb
jg
xchg
into
cltd
js
pop
int3
ja
cs
pop
into
xchg
in
dec
or
pop
popa
andb
lret
ret
and
call
pop
test
cmp
cmp
dec
leave
sbb
jns
jnp
fiadds
xor
sbb
adc
lahf
in
adc
ss
outsl
jg
jge
pop
sub
xchg
fnstsw
or
insb
leave
das
mov
inc
lcall
test
pop
outsb
xchg
bound
shl
movsl
mov
sbb
aaa
xor
push
jae
movsb
inc
or
iret
xor
inc
dec
and
add
jns
xchg
lock
insl
popa
pop
repz
cmp
stos
not
or
arpl
cld
xor
dec
pop
lcall
cli
scas
ficoml
xchg
dec
add
mov
repnz
mov
icebp
sarl
pop
or
pop
mov
aam
pushf
sti
insl
adc
dec
push
cli
into
sbb
imul
add
inc
fwait
mov
into
xor
movsb
xor
xor
jnp
mov
fbld
mov
nop
cmp
jle
mov
inc
or
pop
jns
ret
xor
ret
sti
push
jns
lret
adc
inc
test
imul
mov
mull
and
mov
roll
ljmp
shlb
xlat
test
movsb
xchg
xchg
mov
fadds
pushf
sti
out
push
cmp
stc
in
test
sbb
out
jnp
cs
xor
push
mov
adc
jo
push
mov
jns
jg
push
inc
mov
jb
mov
ljmp
xchg
jae
test
jecxz
cmpsb
inc
xchg
mov
xor
popf
inc
xchg
xchg
test
xchg
mov
stos
and
push
popf
sbb
cmc
mov
sub
mov
loop
and
push
lret
jno
mov
mov
imul
fwait
cmc
lret
sub
pop
cs
fidivs
rcrl
jo
adc
sub
mov
sub
jo
mov
pop
into
lret
test
lahf
add
int
insb
or
stc
lods
je
pop
lea
rol
ja
mov
fsub
repnz
push
jns
xchg
mov
dec
push
gs
add
mov
outsl
into
inc
jnp
dec
rcll
addr16
and
ja
xchg
dec
fdivs
mov
pop
jns
into
fldt
lods
data16
hlt
int3
loop
jne
out
cmc
or
paddq
sub
sub
xlat
in
or
test
xlat
add
shll
xchg
inc
jns
iret
mov
sub
mov
sbb
add
in
aam
sahf
push
stos
sbb
mov
sahf
movb
add
fistl
insb
sub
test
or
xchg
lods
insb
cli
iret
mov
popa
cwtl
push
daa
mov
mov
or
ficoml
add
inc
jo
pop
mov
loopne,pn
iret
cmp
or
and
push
arpl
stos
mov
jae
out
adc
js
push
adc
sub
sbb
and
cmp
sbb
into
in
dec
into
outsl
inc
inc
mov
mov
jl
test
dec
jp
ret
dec
stc
mov
gs
adc
insb
dec
mov
sbb
sub
negb
stos
clc
pop
in
pop
daa
lds
push
or
add
js
cmpl
push
mov
jb
out
call
fs
and
mov
fcomps
mov
cmpb
es
add
insb
insb
fidivl
int
jl
lods
in
lret
push
bound
pop
mov
fiaddl
cmp
mov
movsb
and
sub
cmpsl
leave
or
dec
imul
outsb
sub
loop
jb
mov
push
outsl
outsb
orb
in
jg
movsb
push
and
and
mov
cmp
fsub
mov
inc
shrb
pusha
or
jecxz
push
pusha
pop
or
daa
aas
sub
pop
sub
test
ljmp
or
hlt
cmc
adc
ds
sub
xchg
lods
or
pop
xor
push
pop
pop
fiaddl
jp
mov
or
fxch
pop
lret
mov
clc
les
pop
sbb
dec
ret
fwait
in
cmp
push
pop
cs
or
xchg
int3
sub
inc
loop
iret
mov
cwtl
dec
cmpsl
fisubrl
jmp
incl
es
xor
sub
shrb
ret
imul
out
or
jge
sar
pop
into
inc
mov
call
sbb
push
jg
xor
repz
jnp
mov
inc
aam
cmp
je
stos
movsb
aam
and
mov
imul
movsl
das
lcall
insl
xchg
mov
dec
ljmp
mov
xchg
cld
mov
mov
xchg
xchg
decb
xor
call
jns
inc
and
sti
arpl
xchg
daa
repz
jae
inc
dec
filds
xchg
sbb
dec
dec
xchg
lahf
mov
dec
aaa
popf
repz
mov
scas
jge
sbb
and
out
orl
mov
or
mov
movsl
push
shr
mov
in
mov
out
lcall
jp
sub
shll
xlat
push
push
loopne
fcmovbe
leave
lods
ss
jb
in
std
pop
fisttpl
mov
add
mov
mov
enter
pop
sbb
test
add
and
mov
lods
mov
fists
fbstp
or
cmp
cmp
sub
lcall
imul
mov
sbb
mov
loopne
insl
pop
inc
adc
movsl
xor
push
leave
lahf
movsb
sub
mov
stos
mov
orb
or
add
xor
mov
in
mov
cmp
and
test
xchg
jo
jp
jno
xorl
sbb
mov
dec
mov
stos
dec
pop
outsb
jno
jb
imul
lock
or
subl
insl
fistl
mov
pushf
shl
stos
cwtl
ljmp
gs
adc
inc
or
and
int3
enter
gs
lret
scas
sbb
or
aaa
xchg
push
adc
test
loopne
sar
and
rcrb
in
jmp
out
ss
cmpsb
je
mov
cmpsb
cmpsb
mov
lods
cmp
outsl
es
insb
push
jae
jl
sub
movsb
sbb
adc
xor
iret
pop
dec
testl
cmp
add
push
adc
movsl
outsb
outsl
jne
cmp
rcll
rorl
pushf
pop
pop
incb
dec
mov
sti
pop
lahf
sbbl
mov
and
xor
sahf
adc
cmpsb
fisubrs
icebp
loop
pop
shlb
push
or
xor
fs
inc
dec
mov
je
adcb
lods
jp
ja
push
cmp
pop
in
push
inc
push
sarb
pop
icebp
sub
lret
lock
jo
lret
aad
mov
icebp
mov
out
jae
test
mov
xchg
inc
in
loopne
cmp
xchg
clc
push
sbb
jl
and
and
cltd
jb
cmp
xchg
sub
push
xchg
fdivs
test
push
mov
sbb
add
sub
lcall
lods
jge
vmread
loopne
push
mov
call
mov
data16
push
arpl
push
mov
cmpsl
test
dec
add
mov
lret
ljmp
call
movsl
mov
insl
dec
xchg
add
stos
out
loopne
gs
push
test
int3
cmpsb
cli
inc
in
scas
jmp
inc
mov
jbe
stos
insb
push
push
xabort
and
add
negl
sbb
jne
js
in
sub
fbstp
dec
movsb
jns
mov
insb
test
js
and
fisttpll
test
xor
push
add
aam
aam
jmp
xorb
jae
sub
jmp
call
in
aad
jnp
insb
stos
ret
add
adc
jb
pop
mov
jne
pop
mov
cmp
cmp
pop
jl
or
scas
mov
dec
push
andb
iret
into
das
cld
mov
add
dec
adc
int3
mov
into
icebp
xchg
pushf
cmp
into
jmp
add
dec
xchg
shl
in
xor
add
or
cmp
mov
mov
orb
sbb
in
bound
xchg
sbb
shrb
mov
xchg
jl
jno
pop
cmp
mov
lea
imul
shl
lock
faddl
mulb
fidivrs
iret
cmp
sbb
xchg
fmul
bound
rol
in
or
icebp
iret
scas
add
pop
fmulp
fisubrl
fadd
adc
inc
pop
jge
sbb
mov
mov
mov
xchg
pop
add
dec
add
jb
dec
stos
cmpsl
pop
cmp
xchg
mov
vphsubbw
and
lods
sbb
add
test
cmp
sahf
mov
inc
jae
push
fidivs
int3
push
add
movsl
mov
adc
and
xchg
adc
xor
addr16
rcrb
xchg
push
or
pop
lret
inc
sub
lock
mov
xchg
pop
sub
mov
in
loope
push
mov
cmp
loope
aaa
mov
or
adc
pusha
xor
add
insb
add
push
jecxz
add
enter
lahf
fsubrl
xor
fidivs
push
in
subb
mov
insl
cmp
mov
jno
repz
dec
xor
std
sub
ss
pusha
dec
jns
mov
adc
outsl
and
in
xchg
stos
loopne
lds
sbb
xchg
add
sbb
push
dec
imul
fisttpl
push
insl
lods
test
lret
xlat
leave
xchg
incb
stos
cs
mov
sahf
data16
je
mov
mov
cs
outsl
push
fadds
lds
arpl
mov
jge
scas
and
xor
jge
pop
add
movl
mov
xor
mull
sub
stc
aam
jne
arpl
or
cmp
mov
bound
inc
aad
pop
aas
data16
push
les
jmp
mov
and
inc
inc
fwait
xorb
xlat
adc
xchg
mov
adc
xchg
and
mov
cmp
nop
push
jle
nop
outsl
loop
ret
jno
fs
and
pushf
sub
sarl
addl
psubusb
cmp
lods
ret
ds
cmpsb
pop
jo
cli
test
out
stos
jle
adc
and
imul
push
jp
stc
mov
add
ficomps
pop
inc
cld
pop
xor
inc
dec
pop
mov
mov
sbb
fimull
push
xor
sub
pop
mov
mov
sub
icebp
add
lods
fdiv
mov
test
adc
scas
lret
xlat
pop
jmp
dec
mov
movsl
sbbb
rcll
inc
inc
or
cmp
in
out
dec
jae
int3
jmp
nop
call
mov
clc
ja
xchg
jnp,pt
faddl
lret
stc
hlt
push
and
nop
jae
insl
jns
je
mov
jl
push
loopne
mov
and
or
cwtl
and
aam
adc
aam
or
stc
stos
jbe
ret
scas
imul
repz
mov
cmp
lods
mov
clc
mov
daa
call
push
and
adc
aaa
push
inc
cmp
loopne
jge
dec
adc
pop
jg
int3
xor
pop
out
adc
mov
mov
push
addr16
in
or
cmp
mov
sub
or
sub
int
subl
cmp
inc
jecxz
jecxz
adc
mov
mov
fldenv
sbb
ljmp
stos
sub
cmp
inc
je
stos
pushf
sub
mov
or
rol
sahf
test
out
int
mov
push
popf
adc
mov
mov
mov
adc
mov
inc
mov
inc
pop
addr16
out
adc
stos
adc
lock
xchg
daa
mov
shr
inc
add
cmp
std
mov
imul
lods
test
push
pop
js
loop
aaa
pop
xor
mov
test
xor
pop
ja
cmc
xchg
movsb
cmp
aas
mov
jb
or
rcrb
xchg
mov
mov
cmc
xchg
sub
mov
aam
mov
pop
mov
aas
filds
shrl
aad
test
xor
bnd
leave
mov
ljmp
mov
fists
mov
xor
int
mov
or
into
and
pop
pushl
push
xchg
inc
movsb
jl
inc
daa
push
sbb
pop
inc
call
negl
in
or
popf
cmpsl
jl
movsb
out
in
aaa
aad
cmpsl
dec
sub
hlt
into
je
jmp
push
push
and
ss
push
push
add
sbb
cli
data16
xor
add
leave
jecxz
mov
jmp
jecxz
mov
ds
sub
mov
cmp
fs
xchg
pop
pop
addr16
test
xchg
cmp
xor
pop
sahf
mov
adc
cmpsb
inc
mov
call
xchg
jne
inc
mov
push
rcr
repnz
mov
shll
imul
jmp
adc
insb
cwtl
ljmp
cmp
sbb
inc
repz
outsb
sbb
inc
lahf
dec
sbb
cmpsl
test
shrb
dec
idiv
mov
xchg
gs
add
push
push
in
xcrypt-ecb
cmpsl
mov
pop
mov
ss
mov
xor
les
cmp
jbe
dec
ficomps
lods
call
sbb
xchg
xchg
cmp
fwait
jl
xor
test
mov
dec
or
cmpsb
pop
rcr
sti
fidivrl
arpl
or
xchg
pop
add
rolb
jg
push
xor
jns
mov
xchg
mov
scas
jnp
cmp
push
nop
jns
jecxz
std
je
and
adc
push
inc
sub
jecxz
jo
pop
popf
divb
cmpsb
add
xchg
xchg
pushf
jle
sub
push
pushf
frstor
mov
jne
pop
sub
xchg
in
mov
inc
dec
xchg
add
les
add
dec
lea
and
dec
or
dec
fs
call
lea
mov
dec
out
ljmp
loop
sub
test
das
into
jmp
push
or
and
out
stc
xor
and
es
imul
ret
lcall
out
jno
cmp
and
or
mulb
out
push
push
insl
rcrb
mov
daa
daa
js
stos
movsb
jae
in
cmc
dec
push
imul
addr16
jl
inc
sbb
pop
dec
push
dec
pop
and
mov
cmc
lods
push
dec
cld
sbb
and
ss
mov
sub
lcall
dec
fiadds
inc
jno
mov
inc
imul
dec
shrl
in
insb
in
pop
ja
push
pushf
mov
sub
inc
int
jle
out
loop
jmp
andl
out
lret
push
lods
cmpsb
lret
mov
mov
lods
push
movsl
inc
aas
sbbl
mov
daa
xor
push
lods
push
cli
out
int3
cmpsl
adc
lds
sub
arpl
add
scas
dec
std
pop
jge
jb
ret
push
mov
aas
lret
jno
punpcklbw
push
lea
scas
loop
ret
mov
imul
xor
movsb
mov
sbb
stos
arpl
hlt
mov
bound
add
pop
inc
testb
add
ret
mov
adc
shrl
test
cmp
nop
mov
and
stos
faddl
xor
and
mov
pop
in
pusha
sbb
cwtl
daa
mov
in
int
lret
js
mov
nop
imul
aaa
mov
scas
cmpsl
jnp
fwait
xchg
xchg
ficomps
cmc
pop
mov
je
xor
stos
mov
push
aas
pop
flds
dec
test
mov
and
or
pop
pop
mov
rcl
cltd
adc
lea
es
in
xchg
dec
pop
xchg
jbe
rcr
xor
addr16
sub
adc
mov
and
lock
nop
mov
in
rcr
sub
gs
mov
inc
xchg
pop
mov
inc
std
inc
and
int3
les
repz
and
mov
mov
push
js
data16
add
pusha
out
je
pop
push
bound
mov
loopne
out
out
clc
inc
cmp
dec
popa
adc
and
xlat
dec
xchg
jae
sbb
jbe
cwtl
mov
xchg
fsubrs
ucomiss
cmc
stc
imul
mov
push
dec
dec
mov
adc
lods
or
pop
sar
loope
enter
jo
inc
dec
call
mov
adc
jnp
jp
stc
repnz
jge
fbld
decl
push
cmp
enter
aam
adc
outsb
jmp
fs
push
in
mov
sub
add
pop
mov
call
adc
push
into
popa
out
negl
in
xlat
xchg
xor
and
aam
lods
adc
xor
xchg
push
pushf
cmp
imul
ret
xchg
stc
into
es
mov
test
mov
enter
out
dec
loop
pushf
jp
push
addr16
out
lret
dec
xchg
addr16
sub
clc
orl
test
sub
pop
jns
jg
fbld
aam
jecxz
loop
jg
jmp
decb
mov
cltd
lahf
negl
ret
inc
mov
notl
add
or
sbb
fwait
enter
pop
jp
mov
and
out
cld
je
sub
dec
lds
sbb
mov
out
ss
xlat
insb
adc
dec
xchg
dec
inc
stos
ret
int3
lock
push
into
outsb
call
jmp
ret
data16
push
mov
loope
mov
add
inc
or
add
xchg
dec
adc
xor
imul
loope
push
sbb
lahf
lea
rolb
add
mov
add
sub
sub
pop
sub
sub
scas
mov
sbb
mov
jno
rcrl
mov
adc
les
jno
push
and
test
jne
imul
cltd
shl
aas
aaa
pop
add
push
fildll
lods
xorb
loopne
or
imul
popf
push
in
js
mov
sub
mov
scas
sti
mov
push
and
lret
lcall
les
mov
mov
js
cli
jns
push
cltd
dec
push
sbb
jecxz
jg
insl
jp
stos
inc
cmpsl
dec
in
mov
jl
sahf
mov
cld
add
mull
imul
popa
jmp
dec
fisubrs
xchg
orb
xchg
inc
cltd
inc
push
popa
xor
addr16
and
bound
jne
bound
je
popf
ret
mov
ret
mov
pop
mov
subl
fdivrs
sti
test
xor
xorl
xchg
xchg
loop
xchg
sbb
cmc
jg
mov
ror
pop
bound
sbbb
lea
xor
dec
mov
negl
jg
xor
jb
stos
cmp
mov
push
push
add
cmp
mov
andl
int3
lock
out
fs
mov
xor
mov
fimull
mov
aam
inc
push
popf
pop
neg
mov
push
sub
mov
shrb
lods
or
repz
rclb
ficoml
dec
int
add
jg
and
ja
fsubs
stos
mov
popl
cwtl
jno
push
icebp
scas
xor
push
jmp
rcll
daa
in
mov
lods
and
xchg
cmc
push
dec
pushl
dec
pop
call
mov
js
cmpsb
outsb
sahf
fisubs
cmpsb
jecxz
xchg
mov
nop
dec
fistpl
xchg
and
xchg
xchg
sub
jb
mov
js
mov
popa
test
adc
dec
das
lcall
nop
mov
rclb
int
das
sub
sbb
mov
sbb
and
scas
int3
outsl
and
test
nop
addb
ljmp
sbb
add
mov
adc
xchg
cmp
and
pop
add
mov
dec
jge
sub
mov
adc
xchg
cltd
std
cmc
add
pop
sbb
sub
into
push
gs
icebp
popf
aaa
jg
imul
mov
push
jle
rclb
mov
stos
fwait
es
xchg
mov
das
mov
mov
imul
repnz
icebp
push
dec
mov
ja
insl
aas
bound
xchg
rorl
dec
push
and
xchg
sub
in
sbb
mov
aad
xor
dec
mov
cld
dec
dec
mov
pcmpgtb
pop
lret
call
xchg
cmp
and
push
test
push
out
mov
imulb
outsl
test
dec
sbb
push
dec
and
mov
icebp
mov
pop
iret
xchg
icebp
ficomps
mov
fimull
and
sub
sub
fnstenv
call
sub
dec
pop
loope
inc
imul
scas
push
test
push
orl
pop
mov
aaa
adc
cmp
dec
repz
adcl
imul
inc
mov
shll
les
call
arpl
xor
into
dec
jbe
cmpsl
cwtl
rclb
and
xor
out
xchg
xchg
mov
ds
xchg
lock
bnd
inc
jnp
pop
not
mov
or
stos
sbb
out
xor
xor
sbb
xor
in
jno
pushf
lods
add
xlat
xchg
shr
mov
adc
lea
mov
add
ss
sub
sbb
outsl
mov
mov
mov
fcmovnb
pusha
xor
jge
cltd
sub
cmp
add
stos
sub
in
push
sub
outsl
int3
or
adc
inc
push
shr
mov
negb
ret
sbb
jecxz
jne
je
mov
push
sbb
push
leave
mov
daa
fiadds
stos
jne
mov
cmp
adc
cld
stc
pop
sub
mov
sti
pop
fs
pop
scas
sahf
mov
mulb
inc
add
cmp
dec
jnp
sbb
pop
mov
into
push
aaa
jl
addl
outsb
jbe
mov
and
push
inc
jp
add
push
nop
xchg
clc
repz
test
inc
jns
aam
aad
mov
test
out
jmp
sub
dec
and
test
outsl
clc
dec
or
and
cltd
cmc
pop
xor
ja
adc
loop
mov
push
bound
dec
sti
xchg
out
mov
dec
mov
or
mov
pushf
sbb
fwait
lock
js
fsts
es
mov
scas
cmp
mov
mov
add
cld
xchg
push
add
cs
lods
mov
and
mov
testl
push
test
or
jmp
jg
loope
in
sub
inc
ret
pop
iret
jp
bound
pop
ret
insb
jbe
repz
fsubrp
jmp
mov
in
out
adc
push
iret
les
shrb
out
aas
loope
adc
rep
mov
inc
push
les
push
sahf
fnsave
jmp
sahf
out
mov
pop
mov
xor
sbb
fcomps
sub
mov
and
sbb
or
push
scas
jg
jo
fmulp
rcr
xchg
inc
movsb
or
push
shl
jle
test
add
jl
inc
mov
mov
sbb
mov
add
cmp
mov
aaa
neg
push
pop
push
dec
outsl
sub
ljmp
cltd
xchg
push
hlt
sbb
cmp
push
aaa
lods
push
sub
cmc
mov
inc
pop
ja
push
sbb
pop
das
sbb
out
inc
sbb
inc
pop
popf
cmp
shrl
sbbb
push
cmp
inc
clc
icebp
push
roll
push
aaa
lea
xchg
scas
jbe
int
ret
testl
lahf
inc
pop
cld
jae
scas
loop
cmpsl
fcomip
pop
aam
and
gs
inc
shl
dec
mov
mov
in
outsl
test
ljmp
cmp
in
lea
adcl
xchg
int
inc
mov
jbe
mov
sar
dec
mov
adc
adc
push
mov
or
xor
dec
leave
xchg
add
push
sub
in
orl
mov
jae
sahf
mov
sbb
push
clc
mov
xchg
lock
pop
adcb
ret
ja
icebp
jg
sub
xor
ljmp
xchg
add
add
mov
cmp
sti
fs
insb
out
mov
stc
popa
jb
dec
loop
adc
push
mov
push
into
fstps
ljmp
cmp
test
mov
inc
ret
test
push
push
hlt
or
add
push
cmc
repz
sub
lahf
pop
cmp
test
test
jecxz
mov
ja
jnp
sti
pusha
push
dec
ret
hlt
shll
addb
push
and
pop
mov
aaa
jle
jae
cmpsb
jb
rorb
cmpsl
lahf
sub
in
enter
hlt
push
mov
xchg
pop
lea
jmp
bound
inc
mov
jmp
inc
or
ss
xchg
cli
int
stos
push
fldl
imul
enter
adc
inc
and
divl
ja
lea
push
cmp
aam
out
adc
andl
inc
mov
inc
mulb
ja
jbe
pop
int3
push
call
dec
add
sub
enter
insl
in
or
add
testl
clc
insl
leave
push
add
bound
jg
pusha
mov
loop
loop
xor
push
in
ret
push
es
mov
inc
dec
sahf
pushf
inc
jge
push
lock
repnz
mov
and
arpl
or
jne
mov
ss
push
shl
mov
cmp
arpl
lret
out
hlt
mov
push
in
decb
js
inc
lcall
aaa
nop
mov
and
std
andl
mov
mov
and
int
shrb
mov
ret
dec
push
jmp
push
mov
sub
out
das
pop
push
js
or
test
mov
add
js
mov
ret
jp
jo
and
dec
loopne
lret
sti
push
aas
jno
cld
stc
mov
sub
ret
inc
jp
ficoml
addb
mov
sub
inc
aas
xor
enter
pop
std
mov
cmp
xchg
test
mov
outsl
and
pop
jmp
std
lods
add
inc
push
xchg
pusha
jne
adc
mov
xlat
push
test
or
cmp
xchg
cmpsl
or
stc
ret
cld
in
cmpsl
idiv
pop
push
push
cltd
jl
inc
cmp
pop
ja
mov
xor
lods
rcl
inc
cmp
adc
jae
pop
xchg
sub
out
dec
push
mov
pushf
clc
cmpl
and
mov
inc
pop
xor
pop
and
inc
iret
loope
sarl
cmp
pop
shll
leave
mov
add
push
jne
add
mov
inc
push
fildl
imul
push
sub
dec
imul
mov
xchg
dec
jl
adc
xor
lock
shrb
movsl
or
pop
push
fnstcw
imulb
and
push
inc
test
xor
or
lret
insb
lds
decb
xor
out
scas
mov
ja
imul
xor
cmp
pop
sub
stos
lds
es
jmp
imul
adc
mov
pop
mov
test
xchg
dec
add
fldl
jle
stos
cmc
idivb
lods
mov
push
push
jmp
mov
or
scas
insb
pushf
cmp
ljmp
movsl
add
addl
xor
fldz
outsl
mov
lods
ret
icebp
add
jno
insb
lods
or
sub
push
into
jno
sbb
into
add
pop
loop
enter
pop
rorb
pop
xchg
sbb
add
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
cmp
movl
jbe
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
adc
mov
sub
mov
mov
xor
movl
add
subl
imul
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
mov
sbb
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
sub
add
mov
mov
movl
mov
xor
or
sub
xor
mov
or
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
jmp
jo
aam
movl
xor
pusha
sti
outsb
cli
adc
jp
adc
jp
fisubl
push
and
jnp
sahf
in
paddb
es
sbbl
aad
add
popa
cmp
push
cmc
repnz
dec
test
and
xor
lds
mov
dec
inc
adc
test
jmp
xor
dec
aas
inc
fstpt
push
or
das
xlat
lahf
pop
cmpsb
imulb
xchg
xchg
push
in
iret
lcall
inc
mov
inc
insb
repnz
shrl
xchg
cmpsb
push
mov
mov
add
stos
addr16
pop
stos
jmp
repz
std
inc
mov
lock
push
dec
je
jmp
inc
cmpsl
push
movsl
cmp
cli
jl
iret
filds
mov
rcl
pop
cs
add
js
push
rcrb
sbb
dec
ficompl
cmp
les
in
scas
out
lods
pop
adcl
pop
mov
testl
or
or
jle
xchg
cmp
mov
sbb
mov
imul
and
inc
cmp
mov
push
insl
popa
mov
sbb
push
add
sbb
lea
xchg
ficomps
xchg
inc
inc
testl
jno
push
pop
lods
pop
mov
jno
incb
and
fldt
addr16
lcall
or
add
in
pop
xor
lcall
aam
mov
push
dec
dec
dec
inc
js
std
loop
mov
test
movsl
cltd
ljmp
ds
jl
or
lret
adc
stos
clc
sub
push
push
cmc
push
pop
lcall
loop
mov
add
pop
inc
incl
cmp
xor
pcmpgtb
test
sub
sub
call
ljmp
pushf
mov
cld
addr16
mov
leave
push
dec
mov
inc
mov
xor
or
xor
jle
mov
fimull
outsb
xchg
cmpsb
out
and
dec
out
cmpsb
outsb
lea
sahf
das
addr16
cmp
mov
stos
icebp
stc
or
xor
les
or
xor
in
pop
mov
xchg
cmp
pop
sbb
mov
jno
imul
es
enter
adc
xor
fadd
rcrb
jno
lcall
mov
xor
imul
push
mov
shlb
out
mov
cmpsb
push
jnp
aaa
add
mov
out
aad
fsubrl
sbb
fdivrs
cmpsl
out
movsl
lret
add
jl
add
dec
fs
inc
mov
cmpl
ret
aas
cli
std
xchg
or
cmp
repz
fistl
rcll
cmpsl
sbb
movl
mov
mov
xchg
jns
sbb
jb
jno
movsb
or
or
in
adc
mov
leave
pop
adcb
mov
xor
inc
inc
jmp
sub
data16
jp
and
sbb
or
out
cmpsl
or
jo
xchg
mov
rcl
push
pop
xor
rcll
icebp
mov
xchg
push
pop
int3
mov
adc
aaa
fnstcw
sub
pop
pop
cmpsb
pop
outsl
push
test
mov
xchg
xor
in
arpl
decb
lea
xor
clc
mov
ret
or
cmpsb
test
insb
jg
adc
mov
sub
mov
orl
jb
pop
ljmp
adc
out
repnz
test
or
aaa
lods
pop
test
enter
xchg
lods
dec
xor
les
pusha
shlb
imull
xchg
push
out
por
and
mov
fisttpl
add
jg
or
jmp
aas
xchg
pushf
fisttpl
repnz
add
data16
lods
cmp
mov
clc
js
xor
imull
scas
test
dec
loopne
xchg
add
adc
es
je
addps
sarb
lea
sbb
cld
push
add
xorl
shl
push
fdivl
repnz
arpl
aad
push
ds
dec
adc
iret
int3
push
scas
inc
pop
sub
sbb
jl
and
mov
xchg
adc
pop
and
imul
push
adc
xor
and
int3
push
push
mov
and
frstor
dec
push
shrb
insl
adc
rorb
sti
into
add
pop
jmp
sbb
xchg
repnz
dec
in
pop
shlb
bound
inc
push
addb
lahf
mov
jmp
lock
mov
dec
pop
lods
fbld
xchg
shlb
std
xor
insb
jae
pop
lret
aas
out
cld
cmp
pop
cli
inc
inc
loope
sahf
cmp
xor
ja
push
or
ret
fldl
pop
pop
mov
lret
pop
out
shrb
test
sbb
punpckhbw
cwtl
inc
dec
add
add
sbb
int
fs
dec
mov
push
inc
je
aam
in
xchg
push
adc
ja
loop
push
mov
adc
inc
fdivp
iret
fistpl
pop
pop
aad
mov
decb
leave
mov
sbb
popa
push
lcall
jl
inc
aas
aaa
lea
les
je
cmp
fwait
nop
ljmp
into
int
stc
inc
push
push
jge
and
aad
hlt
shll
inc
stos
and
bswap
or
scas
adc
jno
ljmp
fnstcw
mov
cmc
mov
test
and
or
sti
mov
mov
into
cwtl
aas
sub
cwtl
or
jp
fbld
aam
or
aaa
mov
test
les
pop
and
data16
adcl
std
lret
in
fistps
sub
in
repnz
adc
push
pop
in
xchg
and
pushf
lret
fs
stos
rcrl
xchg
sbb
jno
dec
sbb
test
movb
jns
mov
inc
xor
xorb
jp
inc
push
ja
and
and
add
loop
and
push
icebp
xchg
pop
dec
pop
int
push
cmc
jle
out
cmc
jp
pushf
push
aaa
mov
outsb
jle
jb
lret
fldcw
push
sbb
insb
cmp
rcll
data16
bound
and
rcrl
scas
mov
push
insl
xor
ljmp
xchg
jle
inc
inc
mov
adc
jecxz
mov
dec
sahf
outsb
vcvttsd2si
call
mov
sbb
jg
les
js
in
shl
cld
pop
pop
lods
add
shll
int
sub
scas
or
es
dec
xchg
and
and
addl
es
add
leave
pop
push
adc
outsl
lret
pushf
stc
cld
xlat
andl
pop
adc
std
sub
mov
nop
rorb
lcall
and
fwait
xchg
mov
test
xchg
add
adc
das
fwait
imul
jae
xchg
ja
jae
xchg
push
aas
inc
adc
ret
adc
mov
scas
mov
cs
pop
xlat
insl
mov
addr16
popa
mov
cltd
rcll
jg
pop
jo
inc
insb
mov
mov
add
mov
mov
jbe
or
push
fcmovu
daa
icebp
jecxz
sub
xor
sub
movsl
push
pop
in
pop
nop
sub
pop
jle
stos
in
ret
or
js
cmp
mov
aas
and
in
aas
lret
daa
cld
and
push
jecxz
add
ret
je
cld
adc
adc
xor
mov
mul
mov
pop
inc
xchg
adc
sub
sub
add
adc
icebp
mov
test
test
or
dec
sbb
lock
popl
inc
push
call
test
lea
sti
inc
test
sbb
or
out
push
ret
cli
pop
mov
or
loope
jno
icebp
in
or
cmp
mov
mov
in
inc
das
adc
cltd
outsb
mov
pop
xchg
int3
pop
adc
cltd
sub
jg
je
sub
xchg
jecxz
mov
pop
js
mov
xchg
mov
cmp
adcb
cmpsb
notb
inc
mov
mov
shrb
cli
xchg
pop
ljmp
nop
xchg
insw
inc
jle
out
cmpsl
and
mov
mov
es
fsubl
jp
popf
cmpsl
sbb
pop
nop
pop
rorl
cwtl
pushf
cltd
std
repnz
aas
call
jle
jmp
sar
mov
inc
shll
fimull
enter
pusha
lds
push
lret
cs
mov
xor
push
je
ret
xchg
and
insb
rcll
jne
out
lock
inc
push
fisttpll
mov
lret
sbbb
aam
dec
fs
and
scas
pop
outsb
testb
mov
loope
ficoms
loopne
dec
mov
mov
pop
lods
mov
adc
in
cltd
mov
cltd
sub
add
or
mov
pop
mov
icebp
pusha
outsl
dec
xor
loop
dec
orb
xchg
add
ljmp
or
add
jge
lret
cmp
je
mov
or
sub
mov
ja
lcall
push
jle
clc
shll
pop
ds
orb
lret
sub
push
jmp
xor
negb
fwait
jle
pop
int
das
mov
daa
sbb
arpl
inc
mov
enter
add
mov
pop
mov
shll
insb
jae
ds
pop
inc
push
adc
push
and
add
dec
repnz
cmpsb
inc
xor
std
jne
dec
fstps
aaa
divb
in
bt
popf
mov
leave
in
add
jbe
xchg
clc
je
or
push
push
sub
push
push
push
clc
call
gs
aad
into
mov
and
pop
popa
dec
sti
sbbl
lods
jno
ja
jne
mov
bound
sub
lock
inc
mov
mov
cmp
aas
mov
addb
jmp
push
lds
add
movsl
push
mov
xor
mov
inc
inc
lahf
clc
push
mov
xchg
push
fistps
testl
testb
push
lods
or
test
dec
jb
movsl
cmp
xor
cs
enter
shlb
inc
push
adcl
xchg
push
mov
arpl
mov
or
psrad
mov
pop
inc
push
sbb
sub
frstor
xor
pop
clc
stos
ds
pop
imul
pop
decb
adc
mov
shrl
mov
lock
popa
push
mov
aas
adc
out
mov
lret
mov
xchg
scas
push
xor
sbb
hlt
inc
mov
inc
ror
sub
stos
ja
mov
jmp
dec
loop
push
int3
push
dec
add
movsb
int
leave
movl
cmp
jne
lea
sub
jne
scas
push
mov
sub
test
daa
out
addr16
cmp
mov
fdivl
cld
push
xchg
mov
mov
xchg
inc
in
xchg
call
lock
dec
jne
scas
mov
mulb
xchg
sub
mov
cmpsb
mov
fidivrl
imul
fwait
inc
sbb
data16
sub
sti
cld
lahf
and
jne
shll
fwait
push
loopne
push
daa
sbb
lock
inc
insb
cmp
call
mov
dec
jl
push
mov
cltd
cwtl
or
imul
pushf
repz
and
inc
in
mov
pusha
sbb
rcll
sahf
inc
cmpsb
ds
inc
addl
mov
sub
mov
pop
hlt
mov
aam
xchg
and
cli
jne
jno
jb
jge
cmpl
pop
insl
and
daa
push
jae
sbb
ret
insb
lods
ja
cltd
inc
jl
cmp
int3
push
cmp
xor
cmp
jecxz
pop
inc
das
repz
jmp
stos
jp
sub
adc
rcrl
call
fadd
scas
ret
dec
xor
cltd
test
jo
cmp
mov
notl
icebp
das
pusha
pop
sbbb
mov
ja
mov
hlt
popa
pop
test
cli
das
and
jmp
jae
fsubrl
pop
aaa
stos
daa
xchg
jo
out
aam
test
lock
pop
in
pusha
mov
adc
pop
movsl
cmpsl
cmc
pop
pop
fldcw
sub
xchg
ret
sbb
arpl
pushf
int3
inc
push
or
adc
or
xchg
pop
adc
mov
jmp
xchg
dec
adc
jge
xor
test
adc
pushf
enter
sbb
outsb
or
hlt
in
ret
push
mov
sub
popa
pop
repnz
jno
cs
adcl
div
push
pop
and
add
aas
in
sub
popa
mov
pop
fs
fadds
adcl
aad
dec
push
and
stc
xor
shlb
ds
sbb
adc
std
xchg
inc
call
lock
icebp
in
not
sti
push
mov
inc
adc
cltd
stc
aam
rcrl
mov
xor
sub
or
dec
aas
scas
push
popf
and
popf
xor
xchg
xchg
and
repnz
xor
xchg
cmc
adc
or
mov
imull
movl
push
out
in
push
test
xchg
push
mov
notb
fbld
rcr
jns
mov
sbb
into
cli
sbb
fwait
sti
repnz
xlat
cld
fidivrs
in
sbb
test
dec
ficomps
push
cmpsl
out
ss
adc
or
or
xor
cltd
pusha
rolb
adc
call
mov
sub
mov
push
pop
iret
inc
xchg
test
or
cli
add
dec
pop
xchg
lock
out
mov
pop
mov
dec
aad
push
adc
fbstp
rcrl
es
cmc
imul
add
jnp
or
dec
xor
aam
addr16
xor
test
push
int
fs
fadd
cmp
mov
xor
push
or
nop
sbbb
mov
mov
stos
in
sub
fnsave
lret
sbb
xchg
adc
mov
lods
and
add
imul
cmp
push
dec
loope
cltd
dec
sbb
repnz
sub
xchg
ja
dec
push
clc
push
cmp
leave
jmp
shll
lods
push
js
or
or
mov
stos
dec
dec
or
jmp
push
lcall
shrb
jo
dec
dec
xor
out
cmp
jns
out
incb
jo
and
test
aaa
andl
dec
xor
inc
inc
and
loopne
push
je
mov
inc
pop
xor
pop
pop
dec
inc
aam
mov
cmovge
cmp
xor
test
daa
divb
movsl
add
adcb
loope
mov
dec
je
pop
mov
or
dec
cvtpi2ps
sti
les
incl
aam
dec
xor
rorb
dec
lock
xor
jbe
adc
ret
push
cmpsl
je
jecxz
inc
cmpsl
xor
jl
xchg
out
rcpps
mov
movsb
dec
test
sub
dec
fnstenv
mov
jns
mov
sbb
popa
adc
shlb
inc
push
movsb
fsubrl
lcall
fnstenv
mov
xchg
repnz
lods
dec
out
jo
stos
stc
cld
or
prefetch
clc
test
shl
add
adc
fbld
iret
outsl
or
scas
movsl
mov
gs
test
jb
test
xorb
cwtl
mov
inc
cmp
xchg
xor
push
test
lock
mov
lods
and
sbb
xor
popa
xchg
dec
pushf
xor
std
add
sbb
add
sbb
mov
pushf
pop
shll
jbe
cs
push
aaa
cmc
pushf
add
push
pushf
inc
aaa
pop
les
jo
sbb
pmulhuw
aad
pusha
lcall
mov
fsub
or
add
pop
mov
cmpsb
push
lods
or
mov
adc
ds
pop
and
xchg
jb
push
cwtl
or
out
cmp
mov
fwait
loop
cwtl
cld
jle
mov
push
pushf
stc
popf
inc
jmp
jns
mov
and
inc
hlt
mov
sbb
repnz
xor
shlb
dec
adc
pop
xchg
add
ljmp
push
pop
ret
mov
cmp
push
aam
aam
outsb
int
imulb
mov
ret
pop
xor
push
loope
outsb
push
icebp
or
lods
jo
or
push
xchg
mov
ss
jle
mov
testl
xchg
test
or
fnstcw
into
xchg
jmp
roll
mov
mov
nop
xor
aaa
xchg
or
and
dec
bound
xchg
xchg
shll
lock
cmp
xor
shr
aaa
test
fs
xchg
sub
push
sub
lds
xor
clc
repnz
bound
sub
pop
adc
push
stc
xlat
and
ds
cmc
js
jg
or
push
xchg
dec
int
pushf
js
sahf
orb
or
or
imul
xchg
test
xchg
jp
inc
aad
repnz
shrb
or
adc
sub
shrl
xor
out
cs
shrb
stc
jno
aad
xchg
lahf
dec
xor
pop
pop
in
test
push
mov
insb
mov
cs
sbb
repz
jns
jp
inc
insb
sub
fcoml
popa
jb
nop
and
inc
xchg
ss
xor
push
adc
scas
jne
pop
mov
clc
lock
gs
xlat
sub
xor
dec
test
cwtl
and
xchg
rcr
mov
cmpsb
pop
xor
adc
jecxz
push
xor
popa
push
clc
adc
cld
mov
loopne
pusha
lods
push
ss
add
inc
sti
xchg
jp
lret
roll
xchg
lcall
aas
ja
lods
orl
and
ret
lods
bound
cli
sub
mov
pusha
pop
pop
dec
adc
or
pop
and
outsb
adc
sbb
and
jne
jmp
jmp
sahf
adc
sbb
jp
dec
ja
aas
mov
pop
push
pop
add
sub
xor
sbb
aad
lcall
jbe
shlb
cmp
jmp
add
push
addr16
pop
mov
jne
xor
cmp
jae
in
jecxz
loop
out
lock
mov
mov
mov
incb
sbb
jmp
clc
add
imul
jg
imul
mov
out
push
lret
sahf
add
push
or
lcall
pop
pop
ds
jmp
shr
ret
lds
loope
add
fdiv
or
add
xchg
jg
sbb
cmc
cmp
mov
and
dec
sbb
pop
inc
inc
sub
lcall
xlat
mov
lret
add
test
ds
or
outsb
ret
xchg
repz
lret
or
cmp
adc
nop
outsl
xchg
push
test
popa
negb
shlb
inc
shlb
push
repnz
sub
negb
cmpsb
cmp
aaa
cs
mov
dec
test
stc
jns
xor
enter
sub
cmp
fsubr
mov
cmp
in
lods
inc
lret
and
pop
dec
pop
push
repnz
shrb
stos
mov
push
out
fildl
fadds
lds
mov
shl
pushw
or
sbb
mov
int3
add
sbb
mov
or
or
pop
jecxz
es
repz
pop
pushf
arpl
mov
inc
lahf
adc
or
cltd
add
data16
jle
fwait
pushf
bound
dec
out
push
jb
push
lea
iret
sub
push
push
pop
clc
mov
inc
in
adc
mov
dec
lcall
leave
lret
repnz
cmp
fidivrl
sbb
ds
out
xor
jp
push
xchg
cmp
jle
test
inc
lret
inc
sbb
test
sub
inc
cmp
and
hlt
pop
rcl
mov
pop
mov
xor
insb
sbb
or
in
or
out
test
dec
push
dec
test
jge
or
cmc
sub
pop
nop
cmp
jb
es
pusha
mov
xlat
jmp
add
cmp
repnz
cmp
notl
fyl2xp1
mov
jno
insl
je
add
jns
stos
int3
test
out
and
dec
xchg
mov
into
hlt
dec
in
shrl
pop
in
repz
pop
jae
dec
into
neg
movsb
dec
imul
fcoms
fs
shlb
mov
out
mov
or
in
sahf
cmp
inc
mov
mov
mov
adc
outsl
fxch
mov
test
nop
mull
mov
jae
xor
cmp
lahf
xorl
std
and
clc
insb
call
jno
mov
sti
pop
sub
pop
adc
push
push
jg
cmp
push
cli
adc
sub
xchg
lret
inc
imul
inc
ljmp
test
test
push
jmp
xor
jmp
test
insl
leave
push
or
pusha
cmpsb
cmp
popf
mov
push
les
xchg
sub
std
xchg
lahf
sti
push
adc
fisubl
add
js
divb
mov
cmp
dec
xchg
push
fsts
popa
sub
dec
movsl
cmc
mov
pop
aad
ret
sub
dec
shrb
packssdw
in
pop
es
outsl
dec
jb
or
and
pop
push
dec
add
sahf
dec
pop
push
jg
push
cli
rolb
add
jno
mov
mov
inc
subl
sbb
fistps
mov
scas
sarb
xchg
daa
lcall
mov
push
iret
lods
repnz
mov
in
out
mov
iret
push
cmp
xchg
or
iret
call
test
sbb
pop
lahf
and
push
xchg
dec
ds
arpl
cmc
mov
sbb
pop
daa
inc
data16
inc
inc
adc
sahf
or
lds
imul
sub
or
mov
cmp
lret
test
mov
xor
mov
xor
push
movl
stos
test
mov
std
sbb
ja
adc
jle
xchg
xchg
lods
xchg
xor
xor
aas
add
xor
sub
sbb
daa
lds
adc
dec
popf
dec
mov
xor
pop
sbb
pop
test
dec
aaa
jle
cmpb
inc
fcmovnb
test
mov
mov
cli
rorb
out
in
arpl
cwtl
xchg
xchg
pop
mov
dec
int
lahf
push
arpl
or
or
sbbl
xchg
cmp
in
into
mov
dec
lock
mov
or
aam
add
jbe
cmp
cmp
les
push
movsl
pop
repnz
dec
mov
push
xchg
notl
cs
xor
subl
inc
hlt
clc
out
rorb
addl
pop
mov
jle
mov
xlat
loopne
pop
pop
xor
loop
ja
scas
jae
aaa
add
xchg
xchg
mov
sbb
in
repnz
push
test
iret
xchg
adc
add
lds
mov
lock
popa
cmpsl
dec
xorl
rcrl
je
clc
inc
inc
aad
cmp
add
repnz
push
jp
xlat
cltd
dec
stos
dec
jmp
jo
mov
mov
cmp
pop
hlt
mov
inc
cld
outsl
add
fidivrl
fcomps
gs
adc
sbb
out
cmpsl
mov
push
sub
pusha
aaa
aam
imul
pop
and
jmp
inc
push
fwait
outsb
popa
and
in
dec
iret
lods
inc
aaa
ljmp
rcl
shrb
add
cld
pop
adc
sbb
stos
mov
hlt
hlt
out
and
xchg
jnp
push
ss
and
dec
insl
test
das
dec
push
jmp
mov
sub
aad
add
sbb
xchg
ljmp
iret
lcall
pushf
cmp
out
out
sti
mov
int
scas
fldenv
lea
jge
cmp
loopne
mov
sub
shlb
cmpsl
fisubs
pop
mov
xchg
inc
stos
xorl
ss
rol
adc
scas
scas
popf
fwait
popa
cmp
push
cs
out
dec
dec
sub
mov
add
and
push
lahf
pushf
fstl
pop
push
or
pop
pop
pop
mov
push
jl
add
stc
mov
push
jecxz
aad
and
andb
mov
sbb
test
sbb
cmp
push
cmp
jmp
scas
jp
shrb
jg
sbb
sub
inc
jle
xchg
or
out
push
jle
fiadds
into
scas
add
movsl
cld
stos
repnz
push
push
stos
and
dec
mov
xchg
push
pop
sub
jae
rcrb
out
ss
outsl
inc
inc
push
bound
movsb
aam
mov
mov
aam
mov
or
mov
dec
jno
jns
mov
lods
imull
mov
aas
mov
ja
insb
sub
jge
shlb
enter
pop
leave
stc
int3
sbb
aad
mov
stos
outsl
or
cmp
pop
cmpsb
or
adc
pop
push
inc
jmp
jno
push
xorb
mov
std
jl
lahf
jne
shrb
fcmovnb
dec
movsb
call
rolb
cmp
sbb
adc
cmpl
enter
lods
fs
push
jecxz
or
jmp
xchg
ror
mov
cmp
popa
xor
shrl
sub
mov
pusha
jmp
jecxz,pn
ja
rcrb
adc
xchg
aaa
dec
pushf
inc
movb
mov
fs
mov
and
pop
xchg
adc
popf
cmp
xchg
xchg
cmp
imul
ss
scas
std
rcl
pop
mov
testl
or
movsb
ja
add
and
es
daa
cmp
imul
das
fisttps
pop
orb
jno
adc
push
cmpl
and
push
sub
iret
loopne
mov
pop
lock
mov
mov
and
lea
lock
cmp
fs
xor
fldcw
jnp
repz
jb
push
inc
or
jmp
mov
sbb
add
pop
adc
add
int3
jge
push
mov
daa
popf
divb
inc
adc
fcompl
rorb
cmp
push
fidivs
aas
and
insb
and
in
push
push
sbb
mov
mov
sub
jmp
daa
pop
dec
pusha
psllq
jns
movl
dec
jb
cmp
cmp
je
mov
int
cmp
scas
mov
je
popl
lahf
stos
push
mov
pop
dec
mov
outsb
add
push
inc
ret
cli
xchg
les
xor
jmp
mov
xlat
xchg
sti
or
cmpsb
shll
mov
mov
xlat
mov
mov
addb
loopne
cmpb
inc
fsubs
test
adc
testb
xchg
pop
sarb
out
outsl
and
repz
adc
test
in
mov
pop
dec
xchg
jge
pusha
rcr
ret
movsb
mov
jmp
cltd
enter
lret
out
lret
shrl
jl
mov
clc
lea
mov
std
filds
in
xchg
sbb
mov
xchg
add
inc
sbb
scas
dec
add
lock
xchg
cs
test
movsl
jb
sub
inc
dec
xchg
mov
push
inc
add
sub
fdiv
jns
xchg
xchg
call
mov
orb
lds
pop
mov
nop
rclb
addr16
xchg
adc
iret
jb
in
mov
xor
mov
pop
and
push
fists
fsub
jno
std
jno
nop
sbb
adc
addr16
mov
sub
scas
jnp
loope
xchg
aam
and
xor
adc
in
fs
mov
and
and
aam
arpl
xor
pop
jne
mov
loop
out
mov
into
xchg
push
into
inc
xchg
mov
inc
pop
xor
jbe
sahf
shrb
sahf
add
loope
adc
stos
adc
aaa
outsl
cmp
scas
clc
pop
mov
fsub
sbb
mov
lock
push
ja
pop
and
fstps
cli
xchg
aad
and
adc
fdivrs
push
xchg
push
rcrl
loop
aam
push
mov
aas
jae
push
neg
mov
flds
das
push
jecxz
sub
xchg
add
adc
stos
xchg
ss
fsts
add
bound
mov
lods
cmp
fmul
or
pushf
push
shrl
push
ljmp
call
fsub
shll
insl
pop
xor
mov
clc
in
icebp
mov
cmpsb
xchg
sub
jae
xchg
jge
dec
pop
dec
sbb
imul
pop
xchg
mov
lds
mov
xchg
js
cltd
cmp
mov
or
xchg
out
mov
pop
fsubrl
mov
add
dec
loope,pn
cwtl
mov
push
inc
xchg
fnstcw
jne
pop
pop
js
inc
sbb
jg
xor
and
imul
pop
jae
pop
ficoml
sub
loope
lret
lds
pop
jo
ret
add
in
jae
repz
add
lock
adc
mov
lret
mov
add
ja
fdivl
fstps
xchg
jg
shrb
lods
shlb
fcmovb
loop
xchg
fiaddl
jecxz
mov
add
test
outsb
loop
sahf
pop
push
ficompl
or
adc
popa
into
push
jl
sbb
push
add
push
clc
insb
or
andb
addr16
or
repz
add
imul
stos
out
mov
inc
cmp
or
dec
xor
pop
mov
pop
cmp
xchg
aaa
mov
jmp
in
or
add
jnp
adc
mov
xchg
lret
lahf
jg
push
mov
xor
mov
andb
xchg
mov
add
ret
stc
loop
dec
and
insl
cmpl
or
shrl
ds
jns
loop
mov
mov
mov
dec
in
aam
lret
push
xlat
mov
adc
jne
cld
out
pop
ret
dec
dec
cmc
out
lock
movl
sbb
mov
jmp
cmovs
in
lods
xchg
xor
add
and
xchg
sub
fisubrl
in
xor
pop
cmp
mov
jmp
mov
add
aad
jno
lods
int
jp
pop
jp
inc
ficompl
clc
xchg
fistpl
aam
jno
inc
loopne,pn
leave
mov
ss
js
push
in
sub
sbb
jle
dec
je
daa
rorb
push
imul
xchg
pusha
daa
add
push
pusha
popf
movsb
mov
inc
cli
dec
out
push
test
dec
xor
icebp
imull
repz
push
push
dec
push
xchg
xlat
repz
scas
cmp
inc
aad
loope
or
mov
je
dec
or
cli
mov
pop
stos
test
sub
push
mov
movsl
sub
clc
add
dec
pushf
jae
lcall
lock
int3
pushl
dec
push
insl
sub
ss
jecxz
mov
decb
shll
inc
jne
ror
das
enter
in
jb
jg
xor
pop
pop
xchg
fnsave
jmp
fdivl
out
adc
sub
inc
cmp
fadds
jecxz
dec
add
pop
push
and
inc
loope
xchg
pop
push
add
mov
cmp
lds
lods
inc
add
xchg
jne
jp
jmp
notl
cli
push
add
shlb
movl
sahf
sbb
cmp
sub
lret
iret
ss
pop
add
pop
mov
fsubs
pop
lcall
xchg
push
nop
inc
add
adc
frstor
sahf
dec
outsl
adcb
pusha
adc
scas
mov
rclb
mov
xchg
insb
xor
push
leave
adc
xor
pop
out
das
les
imul
mov
or
xor
lds
mov
aaa
popa
jns
imul
test
out
imul
ja
push
addr16
aaa
and
mov
adc
jbe
mov
sub
les
mov
dec
iret
mov
mov
imul
jbe
clc
dec
sbb
inc
outsl
pop
pusha
dec
cmp
lea
xchg
fwait
push
sub
jb
push
push
test
sbb
mov
leave
sub
aas
cld
jae
add
outsb
fldz
addr16
aaa
inc
fsubrs
sarb
out
sub
mov
jno
xchg
test
testb
icebp
lods
shr
jns
out
stc
std
clc
push
sbb
sub
mov
sti
jl
mov
cmp
leave
enter
test
jo
sbb
xchg
push
dec
jmp
clc
xchg
jo
mov
rcr
test
test
test
imul
sub
xchg
push
lock
mov
addb
push
imul
push
pop
sub
rorl
enter
pushf
cmpsb
cmp
mov
test
lahf
cs
sub
repnz
or
jp
push
xchg
jbe
and
std
jnp
loopne
push
jl,pn
inc
popa
outsl
hlt
fstpt
int3
mov
insb
aad
popa
cwtl
iret
mov
cmp
inc
out
mov
dec
jo
jecxz
or
aas
mov
jle
jbe
aas
lods
dec
mov
negb
fildll
hlt
xchg
xchg
call
shrb
out
popa
test
sbb
mov
sti
hlt
and
jl
mov
add
scas
scas
shll
pop
inc
xchg
cmp
mov
test
idiv
cmpsl
adc
in
clc
popa
outsl
ss
mov
cmp
mov
add
xor
pop
loop
repz
ss
jle
and
ja
int3
test
dec
pop
push
adc
addr16
fcoms
popf
jp
lods
ds
scas
bound
push
leave
sub
push
inc
pop
cmp
scas
xchg
cs
aas
inc
pop
insl
cmp
mov
pop
lods
xor
add
dec
loopne
jmp
xor
out
adc
mov
adc
loope
repz
iret
or
std
xlat
fs
les
out
jle
popf
mov
dec
inc
adc
rorl
in
push
out
xchg
inc
lea
sbb
push
adc
sbb
and
or
shll
inc
repz
lret
and
addr16
cli
sub
out
mov
aad
push
jg
lods
mov
mov
test
inc
shl
mov
cmp
loopne
cld
dec
cmp
fcmovbe
stc
cmpsl
jecxz
dec
pop
in
sarb
xchg
xorl
add
andl
sarl
pop
arpl
sbb
bound
aam
or
and
rcll
xor
ret
dec
jp
adc
sbb
dec
repnz
mov
push
lret
jl
inc
push
dec
inc
mov
imul
mov
repz
test
push
pushf
dec
fisubrs
pusha
mov
hlt
dec
jno
dec
lahf
imul
ljmp
adc
lods
nop
fwait
leave
sub
xchg
sahf
sbb
sbb
pop
add
mov
or
out
add
sbb
mov
add
add
xchg
rolb
mov
gs
inc
pop
imul
imul
xchg
loop
ja
inc
sub
mov
flds
or
test
mov
jno
dec
adc
jge
or
lretw
jmp
fmul
in
out
daa
orb
les
das
ficompl
sub
fwait
inc
popa
ss
fcomps
push
in
sahf
add
push
mov
dec
sub
jb
mov
pop
aaa
jge
aam
add
jbe
add
int3
sub
lcall
mov
mov
jns
out
dec
aaa
ret
inc
ret
push
mov
jnp
cmp
jecxz
mov
or
xor
fidivrl
add
xor
cmp
lea
sub
lahf
sub
pop
popf
outsb
aaa
jge
stos
cmpsb
push
pop
aad
out
das
jg
or
xchg
enter
lds
pop
push
sbb
mov
iret
andb
cld
enter
fwait
xchg
add
cmp
into
jno
je
rolb
hlt
cmp
sarb
or
daa
mov
aam
fnstsw
mov
pop
adc
dec
loope
sbb
std
or
add
es
lret
xor
push
insl
in
fimull
pop
lret
and
cmpsl
mov
adcb
ficoml
in
lds
mov
add
nop
add
ds
lods
xor
adc
push
stc
mov
jnp
add
lcall
mov
incl
and
nop
cmpl
pop
ja
in
fs
sub
test
jle
and
jle
or
scas
mov
jmp
push
dec
or
loop
fdiv
adc
cld
jne
lret
cltd
stc
cmp
push
out
pop
rolb
enter
movsl
daa
mov
mov
cli
cmp
jmp
dec
push
cmp
inc
in
lods
in
pop
dec
out
ret
mov
data16
push
stos
pop
out
outsb
xchg
sub
ret
dec
or
push
push
shlb
add
push
popf
daa
outsb
pop
or
xor
or
mov
jns
unpckhps
xor
pusha
jns
dec
fstl
ret
call
mov
sarl
jbe
jno
leave
shrb
and
pop
repz
cmpsb
and
jecxz
adc
adc
mov
fwait
leave
push
mov
push
mov
out
subl
lods
jl
push
out
out
fstpt
call
or
hlt
inc
lahf
pop
repnz
js
or
mov
or
lds
jp
cs
mov
jnp
pop
inc
adc
lret
cmp
inc
cmp
ficoms
adcl
jmp
sbb
cmp
and
sti
sub
shlb
into
insb
std
jle
cli
int
lods
repz
into
mov
sub
inc
cwtl
call
loop
out
arpl
ja
mov
xor
mov
sbb
std
dec
or
cltd
jecxz
out
mov
jge
dec
xchg
mov
lods
addl
movsl
adc
rclb
test
dec
test
sti
xchg
xchg
les
movsb
roll
sti
daa
fistpll
cmp
xchg
in
xor
cwtl
addr16
ds
repnz
push
xor
mov
dec
add
lret
cwtl
testl
inc
call
xor
stos
cmp
adc
dec
icebp
cwtl
inc
sbb
dec
sub
sub
adc
je
sbb
cmpsl
cmpl
inc
sbb
insl
fldt
sub
test
pop
sbb
mov
inc
jge
sbbl
xor
xchg
and
cmpsb
bound
sbb
or
out
push
test
lcall
movsb
mov
loopne
movsb
push
push
xorl
fdivl
sbb
mov
out
mov
xor
les
call
fdivp
aam
lods
repz
and
cmc
sbb
sub
or
inc
add
cmpl
xor
jbe
lret
cmp
ljmp
das
add
jno
xchg
mov
push
sbb
rcl
scas
jecxz
gs
lods
dec
lods
sbb
movsl
testl
sbb
dec
in
in
pop
xchg
xor
jge
mov
insb
or
or
cmpsl
xchg
cmc
push
sarl
push
push
jae
pop
mov
out
xchg
out
xor
test
std
icebp
ss
rclb
repz
out
sub
cltd
cmpsb
rclb
xor
jmp
sub
add
sbb
aas
lds
xchg
in
inc
insl
sub
push
sbb
xchg
push
add
jae
scas
adc
jb
push
dec
xchg
stc
adc
sbb
scas
hlt
call
inc
add
sub
aas
imul
cmpl
push
fisttpll
imulb
outsl
testl
mov
sti
lea
insb
xchg
loope
pop
add
push
adc
lcall
aaa
in
test
rorl
jae
mov
or
pop
lea
lcall
mov
xor
jmp
dec
sbb
dec
loopne
gs
mov
ficomps
push
mov
mov
pop
xchg
adc
int3
test
out
pop
leave
scas
into
icebp
sub
adc
stos
sbb
mov
aam
scas
xchg
fs
mov
and
pop
movsl
cmc
and
jmp
mov
push
scas
cmp
lea
popa
adc
cmp
movsl
scas
imul
std
mov
pop
mov
and
add
pop
fisttps
jae
push
stc
push
iret
repnz
inc
inc
bound
rclb
repz
sub
lea
mov
inc
pop
jmp
cmp
and
cmp
cwtl
cmp
mov
stc
sub
shll
push
mov
mov
mov
out
rcrl
imulb
enter
cmc
jae
mov
mov
fcomps
sbb
icebp
ljmp
pop
cmpsl
pop
loope
xor
rorb
or
clc
cmpsb
out
jns
imul
pushf
dec
aam
xor
outsl
fildll
les
lock
inc
rorb
jmp
scas
shl
test
es
adc
std
push
xchg
ja
inc
push
dec
jnp
add
mov
xchg
cmpsb
xor
and
cwtl
inc
enter
movsl
dec
test
mov
test
add
mov
add
imul
loop
jns
popa
cld
fwait
in
dec
clc
inc
loop
pop
adc
enter
imul
and
out
dec
jo
jne
les
mov
xlat
push
xchg
fs
ficoml
jns
mov
mov
psllw
pusha
adc
das
mov
repz
cmp
lahf
test
push
mov
jbe
cmp
cmp
sbb
and
jle
cmp
lret
sti
adc
push
fmuls
inc
adc
mov
xchg
xor
xchg
mov
cltd
outsl
ljmp
mov
fimuls
in
push
sub
fistpl
ds
and
ficoml
mov
outsb
inc
scas
mov
aaa
into
xchg
addb
xor
push
xchg
pusha
jnp
loope
cltd
cltd
fadds
data16
adc
jns
mov
sbb
sahf
push
subb
sub
pop
imul
push
divl
mov
dec
loop
add
and
stc
sbb
fmul
jl
jg
xchg
icebp
movsl
add
cmpsb
cmp
cmp
fs
adc
adc
pop
or
or
loope
cmp
add
imul
shll
sti
mov
sbb
daa
fiaddl
ja
mov
mov
out
repz
jns
aad
inc
sub
xor
mov
mov
jl
cmp
jbe
mov
fiaddl
mov
mov
adc
loope
repz
jl
add
or
in
and
fsave
sub
enter
pop
pop
pusha
into
fwait
jb
ret
jmp
pop
jmp
sahf
xchg
scas
pop
xchg
leave
jge
stc
cmp
inc
lds
inc
mov
push
jmp
pop
dec
or
jno
fstpt
out
aam
bound
mov
dec
jg
sti
hlt
jne
cmp
xor
dec
cmp
mov
arpl
mov
xchg
xor
pusha
popa
insb
sahf
mov
push
add
lret
idivb
out
and
inc
dec
jmp
xor
xchg
std
pop
xchg
cld
pop
mov
cmp
into
sbb
cmp
dec
inc
pusha
cmc
mov
adcl
popa
adc
fs
adc
popf
int
fisttpll
mov
insl
and
mov
fs
add
out
or
mov
and
mov
sub
sbb
sbb
shrl
repnz
pop
js
popa
gs
les
insl
gs
jle
insb
add
ret
mov
loop
jle
stos
mov
out
jmp
jp
sbb
in
or
xor
insb
daa
pop
mov
test
iret
sub
sbb
les
pop
ret
lods
test
scas
cmpb
aaa
fnstsw
sub
add
popa
add
mov
and
pop
imul
das
adc
test
mov
lcall
add
xchg
pop
push
enter
mov
xchg
pop
xlat
mov
fwait
push
cwtl
jmp
push
icebp
aaa
push
repz
mov
sbb
sti
xlat
push
outsl
ss
cltd
cmp
sub
xchg
pop
mov
mov
shll
rep
mov
sti
jecxz
int3
mul
mov
cs
push
sti
pop
lods
inc
pop
js
add
pop
sarl
xchg
pushf
xchg
test
jno
mov
pop
add
push
mov
in
leave
pop
add
cs
jge
incl
inc
mov
pop
or
or
std
cmpsb
add
cmp
mov
leave
int3
fdivl
insb
pop
push
lahf
lret
in
std
ret
movsb
push
stos
mov
movb
mov
leave
push
aaa
es
rol
mov
sbb
or
les
loopne
xchg
mov
ss
mov
imulb
xor
push
and
sbb
cmp
mov
or
pop
or
xor
sahf
mov
adc
xor
loopne
add
rclb
push
mov
loope
outsb
inc
ds
test
cmpsb
addr16
xchg
mov
mov
aaa
rclb
imul
xchg
stc
pop
ja
and
lods
mov
sahf
or
xor
lea
cmp
test
repz
xchg
dec
icebp
icebp
out
push
insl
adc
cs
stos
sub
inc
lock
or
xor
sub
mov
mov
push
push
ss
and
xor
fucom
jae
scas
arpl
cmp
movups
imul
aaa
cmc
pop
jmp
inc
jae
push
cmp
daa
subl
in
push
dec
dec
sbb
shlb
xchg
push
test
or
and
push
push
mov
sbb
add
xor
fnstenv
xchg
or
adc
push
sub
mov
xchg
jle
sti
xor
xor
pop
jns
jl
jmp
push
mov
or
addl
jle
mov
sbbb
mov
xchg
xchg
dec
test
xchg
mov
push
add
fwait
mov
xchg
out
loopne
iret
cltd
add
pop
das
addb
fadds
outsb
stos
cli
xchg
xchg
hlt
adc
cwtl
outsb
sub
in
mov
mov
fdiv
dec
lahf
in
xchg
inc
fst
mov
scas
loope
pop
and
pushf
in
notb
repnz
or
jl
sahf
jae
mov
popf
fs
dec
adc
or
or
xlat
mov
popf
jno
pop
dec
mov
sbb
ret
cmpsl
std
iret
cltd
addr16
push
in
push
cwtl
or
sbb
cmp
mov
adc
fs
cltd
out
aas
mov
mov
stos
pop
incb
pop
xor
inc
xor
arpl
or
xchg
mov
ret
sbb
rorl
mov
test
mov
xchg
inc
xorb
popf
mov
inc
pop
mov
cmp
xchg
outsb
or
loope
popf
pop
ds
xor
mulb
loopne
push
fwait
mov
mov
push
jno
es
jbe
stos
dec
push
sarl
sahf
jp
test
mov
int
ds
push
ficoml
ds
cmpsl
adc
jne
jns
int
movsl
push
mov
loope
jp
popl
imul
gs
out
ficoms
mov
shr
add
xchg
adc
lock
pop
mov
fldenv
mov
and
out
push
push
hlt
fsubrs
gs
xchg
xchg
jae
in
out
mov
sub
sub
jle
popf
sbb
jbe
mov
ss
sahf
gs
outsl
fs
imul
bnd
mov
cs
jnp
cmc
jge
push
in
fidivl
mov
rolb
nop
xor
cmpsb
sub
inc
adc
pop
and
jecxz
xchg
pop
lods
xor
xor
or
sub
push
sbb
xchg
jnp
cwtl
pop
test
xchg
mov
adc
insl
repnz
push
mov
mov
add
inc
sub
jbe
jo
clc
and
inc
aaa
rcrb
jmp
jmp
sub
jnp
cmpsl
push
push
sub
and
mov
iret
push
icebp
hlt
fisttps
push
dec
out
loopne
xchg
mov
mov
xchg
jl
popa
cwtl
movsl
js
jns
sbb
mov
rorb
insb
push
outsl
jecxz
outsl
lods
iret
push
jecxz
cwtl
inc
iret
cmp
pop
movsl
popa
fmul
jae
mov
lcall
inc
mov
arpl
cltd
xor
xor
inc
jmp
push
repz
cld
add
mov
stc
and
hlt
cmp
sahf
pusha
iret
inc
inc
mov
clc
push
iret
xchg
inc
pop
dec
mov
sbb
loope
inc
jl
push
add
push
scas
add
icebp
push
jge
push
mov
sbb
mov
mov
cmp
js
iret
xchg
inc
gs
inc
adc
fistl
leave
mov
cli
loopne
insl
add
outsb
lods
notb
cs
fdivrp
pop
in
leave
ljmp
mov
mov
mov
pushf
xor
add
push
stos
in
repz
adc
xchg
sub
aad
and
push
adc
insl
pop
movsl
cli
das
sub
shrl
stos
scas
pop
and
test
sub
les
bound
lds
pop
jae
xchg
paddusw
add
mov
in
mov
bound
cmp
fcoms
add
int
out
mov
cltd
fsubrs
insl
bnd
sbb
call
hlt
in
lea
mov
popa
out
mov
leave
lcall
ss
and
and
outsb
enter
xchg
enter
sbb
or
pop
pushl
test
ror
push
cli
push
mov
jb
pushl
adc
dec
insb
add
adc
pushf
mov
jmpw
fdivrs
push
push
adcb
in
ret
fmull
inc
lahf
inc
adc
mov
mov
xor
jae
mov
push
int
jns
cmc
in
xor
mov
shl
lret
insl
push
rol
sub
imul
rol
xor
xchg
popa
push
sub
addl
fwait
xor
outsb
sub
inc
and
iret
sbb
push
imul
xchg
push
add
xchg
pushf
fidivrl
jp
jnp
lcall
cs
push
outsb
push
into
push
mov
cmp
push
mov
sahf
mov
ljmp
jbe
and
and
dec
or
mov
pop
stos
pop
pop
mov
and
rcr
sub
push
loopne
jl
cs
dec
xchg
fisttpl
jo
fwait
rcl
dec
cmpsl
and
mov
or
mov
sarl
inc
push
xchg
cs
add
aad
addb
mov
and
lods
mov
arpl
push
cmp
and
ss
icebp
jb
pushf
pop
add
xor
mov
pushf
sub
xlat
stos
sub
jnp
jge
mov
xor
lods
mov
or
pop
pusha
das
xchg
adc
jno
enter
cmp
hlt
sub
jo
mov
jb
data16
setle
lds
jl
mov
fiadds
inc
cmp
andl
pop
mov
mov
jo
jne
imul
into
xchg
xchg
test
dec
adc
arpl
scas
cmpsb
pop
sub
fs
enter
mov
in
loopne
dec
add
ret
mov
push
outsb
mov
shrl
xor
rol
nop
andb
andl
leave
xchg
mov
roll
mov
ret
sbb
ja
cmp
icebp
xchg
std
sub
cli
jnp
loopne
push
or
push
and
adc
or
fidivrs
shll
and
xchg
mov
sbb
xor
imul
aas
mov
shlb
in
xchg
gs
das
and
mov
mov
and
rcrl
aas
rorb
insl
scas
pop
add
arpl
sub
push
mov
and
ret
inc
fcmove
clc
cmc
add
or
mov
cmp
stc
imul
adc
pop
cmp
fisubs
adc
movsb
or
pop
enter
mov
push
gs
inc
and
movsl
push
ja
pop
testb
inc
mov
stc
lret
push
and
xchg
adc
jl
adc
mov
cmpsl
les
xchg
pusha
push
and
mov
loop
mov
icebp
mov
cmc
jbe
adc
icebp
mov
pop
in
fildl
mov
mov
shrb
xchg
xchg
sub
out
adc
hlt
mov
mov
scas
test
jg
adcb
shl
lods
or
sbb
insl
mov
sub
pushf
call
es
dec
jg
dec
adc
pop
inc
mov
dec
arpl
ljmp
icebp
push
mov
int3
andb
ficomps
clc
pop
cld
inc
cwtl
xchg
imul
stos
add
jmp
sub
aas
dec
jns
cmpsl
jb
mov
inc
adc
or
jno
jae
outsb
ret
dec
daa
imul
lret
js
andb
arpl
push
sbb
mov
imul
aaa
jbe
xchg
subl
pop
stos
mov
inc
mov
aaa
jle
lods
push
out
js
inc
inc
add
in
inc
jnp
jno
lods
fimull
mov
jle
pop
ds
je
cld
pusha
adc
inc
or
and
pop
cmp
xor
fwait
mov
negl
sbb
cmp
push
jg
xchg
cs
sbb
pop
into
nop
mov
pop
test
dec
out
or
stos
gs
add
mov
lret
ljmp
adc
mov
sub
cmpsl
inc
mov
rorl
mov
int
mov
and
je
inc
xor
xorb
xchg
lea
inc
sbb
adc
and
js
add
sti
jnp
inc
dec
repz
arpl
lods
pop
or
pusha
mov
push
jo
add
xchg
inc
mov
or
es
dec
xchg
inc
xchg
sub
jae
imul
aad
jb
ret
sbb
stos
leave
add
xchg
jmp
xchg
add
es
movsb
test
jmp
lret
call
rol
pusha
dec
cvtdq2ps
add
mov
xor
dec
xor
adcb
loopne
hlt
lahf
sbb
mov
popa
sbb
and
jge
leave
xchg
jne
int3
xlat
pushf
xor
push
rcll
sbb
mov
push
inc
filds
pop
push
adc
inc
movsl
mov
xor
cmp
or
ss
mov
add
jp
loopne
ss
pop
xchg
xor
xorl
daa
sub
sbb
sbb
aaa
std
scas
les
or
cmp
roll
out
sbb
sahf
test
stos
scas
mov
push
jnp
and
rcll
mov
imul
add
push
push
dec
adc
jnp
lahf
addr16
adc
in
aaa
out
aas
xchg
sti
ljmpw
push
lods
loop
aas
inc
inc
dec
addl
push
push
aam
mov
sbb
push
test
aaa
mov
mov
ret
mov
in
outsb
cltd
out
cmc
les
jae
mov
popa
lcall
add
xchg
jecxz
outsb
leave
sbb
lds
jle
push
insl
fidivrs
inc
rclb
aaa
and
xor
push
rcrl
xchg
or
das
inc
and
gs
mov
mov
adc
xchg
je
std
pop
xchg
xchg
lahf
sub
cmpsb
push
fwait
xlat
addr16
mov
mov
psrad
xchg
lcall
das
cmp
and
mov
push
jne
mov
stc
mov
xchg
dec
outsl
sbb
fstpt
mov
lret
mov
xor
ss
mov
rcrl
cltd
iret
clc
scas
stc
orb
test
dec
mov
outsl
xchg
fadd
insl
jb
and
xor
xchg
scas
aad
negl
sub
lods
cmp
mov
xor
adc
jno
sbb
dec
fcomps
xchg
les
neg
imul
jge
cmp
cmpsb
or
data16
push
xchg
test
lock
jno
sarl
fimull
xchg
rcrb
cmc
xchg
inc
dec
mov
mov
enter
cmp
mov
mov
cmp
cmp
mov
aad
sub
inc
int
pop
lock
mov
lods
pop
leave
andb
jmp
sar
sahf
test
and
in
push
mov
lret
or
dec
jb
xchg
insb
sub
sbb
fistl
or
cmpsl
hlt
clc
mov
cmp
fstps
arpl
mov
push
adc
add
cli
and
and
loop
dec
cld
std
xor
daa
mov
inc
out
test
mov
ficoms
dec
push
subb
jo
jl
xchg
fisubrs
loope
shrl
pop
or
mov
mov
sbb
mov
sbb
and
and
std
in
mov
stos
adc
outsb
jle
xchg
push
fisttpl
jne
out
addr16
sbb
sbb
push
hlt
mov
push
jb
test
cmp
test
mov
aad
aas
lods
inc
mov
mov
xchg
mov
ret
xchg
xchg
xchg
mov
popa
push
xchg
out
call
fsubr
adc
repz
pop
je
inc
cmc
mull
scas
sbb
loop
jo
mov
stc
push
inc
sbb
sub
ljmp
pop
jno
repnz
test
mov
pop
stos
push
push
aas
push
dec
pop
jno
cmp
mov
out
call
mov
xchg
xlat
outsb
mov
hlt
inc
add
loope
pushf
jecxz
aam
gs
test
jns
sbb
mov
je
jne
shr
insb
cld
cmp
cmp
std
inc
add
fwait
mov
add
inc
in
icebp
xchg
mov
cmp
xor
mov
data16
test
std
inc
sub
push
lock
mov
jo
jae
cmp
pop
cmp
data16
mov
adc
and
pop
cmp
mov
data16
sti
adcb
mov
mov
xor
sub
gs
jnp
jns
adcb
inc
xor
inc
sbb
push
outsb
pushf
lods
cld
and
sbb
push
inc
jmp
xchg
daa
pop
test
pusha
loopne
fwait
in
pop
or
xor
or
repnz
xor
in
mov
push
mov
jns
and
gs
adc
and
lods
stc
xchg
mov
lods
add
sub
xor
or
push
stos
daa
mov
mov
orl
scas
xchg
std
cmp
sbb
push
xor
mov
ljmp
xchg
sbb
pop
fisubrl
or
fisubl
fstps
jo
mull
adc
test
fs
push
test
das
adc
push
fs
and
call
mov
mov
cmp
add
and
jbe
subb
iret
mov
pop
push
jb
scas
or
jb
movsb
popa
inc
dec
xor
inc
pop
cmp
pop
les
xchg
notb
cmpsl
jns
sbb
sti
pusha
mov
push
and
xor
adcb
jne
adc
roll
jl
testb
and
add
sbb
hlt
jl
xchg
out
dec
ret
sub
pop
sub
js
icebp
lock
mov
xchg
mov
sbb
in
cmpsl
jecxz
mov
int3
mov
int3
dec
cmpsl
outsb
or
dec
andb
cmp
pop
or
mov
dec
xor
loop
xchg
cmp
mov
sbb
push
xor
jle
pop
stos
jns
add
rolb
int3
xchg
mov
mov
sti
int3
xchg
mov
xchg
test
mov
mov
pop
adc
fucomi
dec
into
ret
adc
push
mov
out
test
hlt
jmp
adc
push
dec
sahf
add
add
xor
mov
xchg
add
inc
icebp
jne
cmc
pop
dec
lcall
sbb
cmp
orl
popf
jns
inc
pop
cmpsb
or
arpl
test
aaa
cmp
mov
nop
cmpb
xchg
cmovge
adc
dec
lock
jle
dec
test
in
lds
enter
stos
test
int
jmp
orb
or
loopne
mov
shr
jmp
adc
sbb
scas
pop
test
dec
and
inc
repz
add
hlt
aad
outsl
paddq
mov
sub
push
adc
push
sub
mov
fisttpl
and
pop
inc
sbbb
stos
push
xchg
in
js
adcl
mov
add
movl
cmp
movl
je
xor
mov
not
mov
subl
xor
adcl
xor
xorl
add
xorl
add
notl
adc
xor
andl
mov
orl
push
add
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xorl
movl
dec
mov
orl
mov
mov
adcl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
dec
mov
mov
sbbl
xor
mov
sub
mov
mov
add
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
jmp
lea
xorl
mov
inc
mov
mov
xor
sub
mov
movl
mov
mov
sub
add
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
sbb
mov
push
mov
xor
or
mov
or
xor
xor
mov
push
orl
add
movl
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
adc
mov
xor
subl
add
jmp
mov
jmp
sub
xor
test
mov
mov
sub
jp
pop
jp
movsb
and
mov
ljmp
dec
xchg
loop
mov
and
daa
mov
mov
sarb
fimuls
and
pushf
adc
jno
xor
cmpsb
push
int
inc
aas
daa
xor
dec
fmuls
pushf
sub
and
aam
out
das
mov
pop
popf
add
cmp
int
pop
pusha
inc
shrb
xchg
push
or
fsubs
dec
jb
icebp
test
push
add
mov
aaa
pop
xlat
cmp
addr16
push
ret
in
test
mov
sbb
cmp
out
pop
imul
inc
xlat
xchg
pusha
mov
push
pop
in
xor
icebp
sub
xlat
jg
push
lock
xchg
loopne
or
enter
mov
js
scas
push
mov
mov
xor
cmp
nop
int3
sub
sub
cmp
cwtl
fcoms
push
inc
jg
imul
out
push
cmp
push
xchg
mov
in
repnz
push
fwait
les
les
mov
cmpsl
icebp
lds
sub
in
hlt
mov
sub
imul
gs
pop
jle
ror
xor
dec
mov
xchg
xor
xacquire
add
pusha
test
movsb
inc
push
orl
mov
es
sub
adc
in
dec
int3
mov
sub
adc
inc
inc
dec
mov
movsb
sub
jecxz
gs
sub
std
mov
imulb
in
dec
dec
mov
and
cmp
cmp
test
jg
xchg
mov
test
outsb
jl
sbb
push
pop
rorb
fidivs
mov
or
hlt
insb
dec
push
cmc
outsl
mov
pop
aaa
mov
add
jbe
bound
and
repz
iret
pop
stc
adc
ds
fs
dec
call
repz
mov
dec
ljmp
sbb
or
mov
jmp
sbb
pop
insl
cmp
adc
test
lret
pop
dec
add
int
push
adc
mov
sub
in
mov
cld
inc
lret
mov
inc
jns
mov
je
or
out
dec
prefetch
shlb
fldl
cmp
outsl
fsts
into
mov
xor
lds
insb
cmp
loope
test
negb
adc
and
and
mov
xchg
int3
das
clc
adc
insl
enter
add
aaa
and
or
xchg
or
add
dec
xor
mov
adc
and
insb
popf
xchg
in
fwait
mov
jbe
pop
push
or
push
fbld
sbb
mov
test
xchg
xchg
pop
mov
add
insb
adc
stc
cmpsl
jl
adc
fnstcw
rcll
mov
test
and
pop
pushf
push
or
sbb
add
xchg
lock
lock
mov
sbb
adc
xor
mov
sbb
jge
pop
xor
jno
insl
xchg
in
pop
inc
pop
xor
cmp
ret
xlat
pop
jnp
xchg
imul
sahf
int3
fnsave
and
push
cmpb
imul
int3
mov
pop
pushf
jmp
gs
cmp
cld
outsl
mov
adc
and
push
sti
daa
test
xor
test
jne
or
dec
stos
loopne
jl
decl
pop
fcoml
mov
flds
push
pop
add
call
int
test
ja
ljmp
aam
jle
test
cmp
testl
out
inc
sub
es
mov
push
pop
add
xchg
sub
cmpsb
xor
mov
cmp
imul
fld
push
test
adc
les
dec
aaa
sbb
mov
and
loop
inc
out
jmp
lret
sbb
mov
pop
das
inc
daa
test
arpl
jmp
xchg
mov
mov
adc
cltd
add
movsl
lret
cmp
xchg
mov
pop
fs
outsb
in
andl
out
in
lods
fisubs
add
jge
mov
xchg
mov
xor
adc
mov
subb
loope
dec
ss
and
jo
gs
xchg
test
mov
mov
pop
pop
adc
ret
roll
fsubl
lock
push
and
push
addl
loopne
pusha
xchg
cmp
out
lret
mov
subl
add
sub
imul
mov
test
add
mov
inc
hlt
jnp
aad
sbb
nop
push
lahf
cmp
jo
xchg
xlat
les
shl
jge
fldenv
push
inc
mov
adc
dec
out
xchg
mov
inc
sbb
jmp
cmp
out
imul
sbb
push
sub
cltd
ffree
push
js
inc
in
les
pop
clc
jl
push
pusha
movsb
adc
xor
in
inc
cmp
sub
mov
inc
mov
lds
loope
pushf
rcl
and
lods
mov
lea
outsl
adc
inc
jl
or
sub
sbb
push
test
push
add
leave
xchg
icebp
jp
and
cs
rcrb
cwtl
scas
dec
out
shrb
push
xchg
adc
gs
dec
sub
rolb
xor
cwtl
popf
jo
aad
mov
xor
lcall
shll
lock
cs
mov
xor
push
jmp
mov
jp
in
addr16
cmp
inc
cli
and
inc
pop
clc
fnsave
add
jne
iret
push
je
pop
mov
mov
and
out
add
adc
push
sub
mov
mov
jb
push
pop
addr16
iret
js
mov
lds
inc
icebp
int3
mov
pop
adc
lods
cmc
outsl
je
dec
or
cmp
mov
pop
adc
and
inc
imulb
int
repz
fisttpll
add
sbb
xchg
call
fstpt
mov
in
dec
mov
mov
ja
orb
and
dec
pop
mov
and
sub
sbb
repz
int3
int
adc
push
inc
fldcw
sar
add
push
popf
adc
mov
cld
push
add
clc
orl
mov
pop
cltd
gs
daa
pop
fmuls
dec
das
fsubr
les
lret
clc
sub
sbb
nop
fs
and
pop
jmp
in
test
mov
leave
xchg
cld
xor
and
mov
xchg
pop
rcr
mov
mov
arpl
push
rcrb
push
cld
sbb
nop
sbb
repnz
inc
insb
ljmp
xchg
mov
dec
lods
pop
and
cs
in
rcrl
or
arpl
cltd
add
mov
scas
mov
pop
ret
movsl
mov
pop
out
fiaddl
iret
out
test
lahf
or
adc
inc
jg
ja
int3
push
faddl
dec
test
jnp
fcoms
movsb
fcomi
ds
push
jb
sbb
mov
movsb
cmp
std
jne
into
in
add
test
out
lods
mov
movsl
movsb
test
aad
cmp
push
addl
push
xor
lds
or
push
mov
pop
stc
cmpsl
lcall
int3
mov
gs
jl
outsl
imul
ret
jl
decl
lahf
push
pop
and
sbb
ret
xchg
test
data16
repnz
scas
aas
repnz
jbe
insb
adc
jg
addb
rcrl
lret
cwtl
adc
xchg
fldcw
or
jo
loope
imul
mov
xchg
testb
ljmp
mov
test
repnz
enter
cmp
dec
mov
repz
jge
or
test
lods
and
subb
and
push
scas
pop
nop
and
sub
loope
push
lea
ja
inc
adc
xor
out
jbe
or
xor
insl
cld
adc
jle
ljmp
push
push
push
fwait
ret
dec
mov
mov
stos
mov
shlb
fsubr
fwait
inc
cli
leave
add
insb
out
outsl
jecxz
xor
clc
imul
cmp
pop
test
inc
fstl
je
xor
adc
das
add
fimull
and
ja
pop
cmc
sahf
inc
adc
xchg
jmp
sub
jae
sbb
popf
push
jle
fbld
dec
sub
or
add
cli
mov
pop
xchg
fcomip
leave
add
push
mov
rcr
jle
imul
sub
add
das
mov
add
jge
pop
mov
into
sub
adc
daa
dec
jae
inc
xor
popa
inc
cmp
inc
inc
pop
out
pop
push
sub
sbb
xchg
bnd
movsl
sahf
arpl
pop
dec
sub
ja
shlb
or
and
fmull
adc
out
cmp
sub
in
fcmove
or
sbb
adc
dec
adc
repz
xor
push
bound
push
jae
ret
stc
es
or
pop
gs
xchg
jo
pop
mov
mov
cli
adc
shll
test
jbe
sbb
outsl
int3
or
popa
add
mov
inc
mov
std
cltd
aad
aad
arpl
iret
or
out
rol
mov
xchg
fcompl
es
add
cmpsl
scas
rorl
mov
mov
jbe
iret
add
lret
loop
jmp
xchg
sbb
insb
mov
lock
in
ss
aas
cli
mov
cmc
pop
sbb
pop
fldcw
insl
adc
or
stc
mov
pop
push
imul
xor
cmp
data16
rcr
sbb
icebp
fstpt
stos
mov
sub
push
xchg
test
nop
jmp
mov
daa
sub
adc
mov
imul
push
dec
push
xchg
cmp
imul
cmp
lds
stc
std
ficomps
jnp
imul
pushf
cmpb
xor
pop
clc
cmc
fs
adc
ret
lea
in
pop
mov
in
fists
mov
in
clc
ret
stc
out
jmp
cmp
ja
insb
test
fsubl
xchg
pop
ljmp
in
ficoml
into
shr
pop
and
mov
cltd
bound
push
lcall
push
xchg
adc
scas
out
daa
jg
subl
andb
test
iret
and
mov
or
rcrb
jge
aaa
push
cmpsb
js
loop
aam
movb
jns
adc
ret
ljmp
popf
fildll
dec
loope
imull
rorb
dec
repnz
add
sbb
insb
lahf
fisubs
ljmp
sub
out
xor
in
add
jg
lock
push
es
cmp
testb
sbb
clc
and
dec
shl
inc
jns
cmpsl
mov
dec
ret
scas
mov
and
sti
sub
add
iret
cmp
push
push
test
dec
jmp
xor
lea
pop
flds
mov
jns
jge
mov
mov
mov
add
pop
stos
cwtl
jo
adc
mov
mov
aas
push
push
mov
adc
mov
data16
pop
add
movsl
pop
jmp
push
addl
push
xchg
xchg
mov
test
outsl
mov
lret
repz
rcr
div
sbb
dec
sbb
mov
ss
xchg
imul
jge
mov
in
jecxz
mov
leave
leave
imull
addr16
cmpsb
out
xor
mov
xor
add
repnz
lahf
lods
imul
in
call
mov
fidivrl
sar
jmp
cmp
clc
mov
movsb
in
mov
lahf
mov
add
mov
mov
rolb
lret
test
xchg
mov
mov
jl
int3
pop
sub
shlb
and
stc
push
dec
jp
rolb
sub
inc
sub
xchg
lahf
cs
fcomp
outsb
or
push
cmp
dec
push
jp
nop
mov
outsl
ja
sbb
jge
dec
scas
inc
cmc
push
dec
pop
frstor
sbb
push
ljmp
jns
add
daa
scas
in
and
out
test
outsb
push
dec
fs
movsb
sbb
outsl
or
test
in
les
mov
es
pop
sbb
mov
inc
jo
pop
inc
mov
jne
sbb
push
pop
cli
inc
std
xor
lock
icebp
push
in
jp
mov
outsb
cli
fucom
add
inc
mov
dec
jge
cmp
addr16
sbb
fwait
sbb
pop
int
in
cmc
es
aam
enter
sarb
push
sbb
sar
std
mov
xchg
sar
xchg
pop
rcr
aam
and
xchg
enter
and
aas
dec
movsl
pop
outsl
test
pop
dec
pop
test
jnp
or
fwait
ljmp
mov
mov
dec
sbb
pushf
ja
jp
push
adc
mov
std
leave
scas
adc
fsubl
sbb
xor
leave
xor
dec
jecxz
cmp
je
insl
enter
xor
lcall
out
js
in
mov
jmp
or
mov
jnp
dec
subb
push
fwait
jp
std
out
orb
mov
lret
xor
faddp
scas
stos
lea
adc
mov
inc
jae
adc
das
jmp
adc
or
lock
xchg
repz
popa
jb
push
and
add
mov
in
stos
stos
mov
inc
push
mov
test
add
jmp
int
js
jb
fidivl
popl
push
rclb
outsl
test
std
sub
movb
mov
pop
jo
cmp
inc
xchg
aam
sub
lret
cmp
dec
subl
ljmp
inc
mov
inc
fistpll
mov
loopne
push
push
mov
testb
pop
lea
testb
dec
sbb
mov
scas
roll
scas
sbb
pushf
adc
in
xchg
jecxz
shl
mov
push
mov
pop
imul
es
mov
sahf
jp
or
ja
movsl
mov
cmp
add
cmc
shrl
jmp
cwtl
std
add
fucomi
pop
pop
inc
int3
addr16
and
loopne
xor
jg
push
inc
pop
mov
cli
add
and
psraw
inc
in
jnp
fldl
and
mov
xchg
add
mov
mov
sbb
pop
cwtl
enter
xor
jbe
add
xor
inc
dec
sbb
dec
mov
lret
imul
lds
jno
jmp
jne
enter
dec
sub
aas
out
sub
dec
sbb
push
test
fistpl
sbb
int
shll
and
xchg
out
cwtl
lods
daa
jmp
and
das
jbe
xor
add
sti
push
mov
push
nop
inc
popa
addps
bound
mov
pusha
pop
loope
cld
cmp
and
fisubl
mov
repnz
add
add
test
cli
leave
movsb
add
inc
inc
imul
std
xor
mov
xchg
xor
xchg
adc
adc
push
add
loopne
pop
leave
in
mov
and
data16
insb
cmpsl
fsubrl
inc
rorl
insl
les
cmc
out
mov
push
xlat
inc
or
push
in
sbb
test
pop
or
inc
and
fadds
adc
divl
ss
pusha
pushf
xorl
push
mov
loopne
mov
insl
inc
pop
jmp
xlat
int
xchg
and
cltd
or
pusha
mov
imul
sbb
push
mov
repz
sub
mov
dec
xchg
lahf
std
les
mov
sbb
adcb
or
popa
sub
adc
bound
jae
hlt
popf
jno
and
sbbb
dec
mov
cmp
mov
mov
lret
in
dec
push
jmp
in
mov
es
jmp
mov
pushf
mov
dec
add
aas
xchg
flds
sub
sahf
mov
push
ljmp
out
cmp
sub
aas
pusha
clc
dec
add
test
push
arpl
scas
outsb
sti
xchg
dec
jmp
in
imul
insl
hlt
pushf
loopne
enter
gs
jns
pop
pop
es
sbb
mov
xchg
je
in
mov
xor
xor
xor
mov
iret
out
aam
and
nop
imul
xor
fwait
fs
adc
imul
mov
pop
sub
or
nop
leave
or
lret
fwait
lock
dec
adc
ja
data16
lds
or
xor
mov
pusha
and
jae
mov
call
leave
sahf
adc
imul
aaa
dec
fucom
lahf
lcall
outsb
lock
xor
mov
inc
pop
fs
out
cmpsb
loop
mov
lock
aaa
fsubrs
cltd
xchg
enter
mov
pop
lea
cmp
pop
repnz
pop
jg
test
in
xchg
test
icebp
icebp
lcall
popa
cwtl
adc
jge
cmpsb
ljmp
mov
jnp
int
cmp
insl
fiaddl
and
in
nop
outsl
sub
adc
xchg
sub
sbb
cs
sbb
mov
pop
dec
test
shlb
dec
fcmove
fldcw
inc
inc
pop
mov
ds
sub
jnp
pop
cld
xchg
fiaddl
or
fbld
ret
adc
mov
dec
lock
adc
js
xchg
sub
outsl
cmp
fstl
enter
jne
das
jo
push
dec
jb
arpl
testb
lret
pop
out
sbb
or
jb
xchg
divl
jmp
lds
das
rcll
lods
loope
push
out
clc
cmp
jg
mov
cmpsl
stos
and
popf
add
sbb
and
test
mov
or
mov
call
cmp
xchg
aaa
ret
negb
inc
in
sub
in
btr
dec
and
sub
jno
mov
xchg
adc
arpl
rcrl
ja
cmp
sbb
dec
xchg
xor
dec
push
cmp
mov
mov
mov
mov
push
es
xorb
pop
repz
jne
lea
int3
push
int3
jl
cmp
adc
xor
mov
mov
inc
int3
lcall
cmp
mov
jle
fst
pop
mov
push
cmc
sbb
adc
cmp
pop
test
mov
jo
pop
jg
ret
pop
pop
mov
pop
out
xor
js
loope
int3
xor
and
bound
test
push
sbb
fcomp
arpl
inc
mov
mov
pop
stos
sub
push
mov
in
xor
repnz
cmpsb
or
pop
pop
scas
jecxz
mov
stc
mov
andl
push
clc
hlt
mov
and
mov
andb
inc
and
popa
xchg
adc
add
push
mov
fstpt
in
testl
cld
mov
int3
loope
mov
lret
fisubrs
fidivrl
mov
test
int
pop
divb
add
popf
mov
sbb
inc
push
mov
out
cld
int
ss
lock
xor
loop
pop
mov
mov
xlat
jecxz
jns
mov
or
mov
mov
add
add
push
push
and
mov
pusha
arpl
jg
fwait
pop
hlt
xchg
sbb
fiaddl
into
test
mov
fadds
mov
imul
jns
enter
dec
cltd
xor
inc
pop
out
out
insb
out
sub
les
add
imul
add
jnp
cmp
jge
xchg
cmp
adc
mov
mov
not
out
push
inc
or
out
arpl
pop
bound
xchg
lcall
cmp
rcrl
push
and
nop
fadd
mov
fcmovbe
ljmp
push
sbb
sbb
insb
das
scas
movsl
popa
xchg
inc
cwtl
dec
popl
push
cld
mov
xlat
aad
mov
out
add
cltd
adc
loope
push
mov
fadds
cmp
repz
adcb
xchg
pop
or
push
sub
das
shlb
lods
dec
pop
cld
add
frstor
gs
push
pop
pushl
push
dec
mov
push
aaa
sahf
pop
fldenv
pop
push
dec
das
test
lods
push
mov
lahf
outsl
test
add
bound
mov
or
cwtl
mov
or
mov
inc
and
lahf
lds
pop
lea
repnz
ret
imul
and
cmc
out
inc
loope
orl
sub
mov
outsb
dec
test
xor
cli
dec
xor
mov
push
out
push
leave
mov
or
lods
inc
mov
mov
sbb
inc
lret
dec
fwait
fwait
sti
insl
ss
inc
orl
pop
and
mov
outsb
je
sbb
push
into
lret
push
pop
pop
jae
dec
lods
fistps
cmp
ficompl
sbb
fsts
dec
mov
pusha
stc
js
repz
sub
push
rcrl
lds
push
insb
mov
cmpsb
in
out
gs
add
push
iret
xchg
out
movsl
lea
sarl
int
es
mov
out
lahf
mov
insb
or
xchg
sbbl
sbb
cmc
inc
leave
mov
shlb
push
pop
sub
lods
mov
ret
into
and
push
xor
jp
pop
push
stc
cltd
jle
mov
shl
jo
dec
xor
jmp
xchg
and
int
xchg
testl
xor
pop
ret
aad
add
mov
loopne
outsl
shrb
sub
hlt
push
push
add
dec
jp
stos
mov
mov
sbb
stos
add
arpl
scas
adc
add
das
decb
jmp
push
imul
or
idivl
iret
insb
lret
or
aam
fstpt
out
ljmp
xchg
sub
fsub
ja
data16
mov
dec
pop
and
ja
ret
and
mov
lods
insb
pop
sbb
pop
lock
arpl
gs
sub
daa
aad
push
cmp
inc
push
leave
jge
dec
xchg
xchg
rclb
stos
xor
into
mov
shrb
inc
adc
sub
push
or
mov
xchg
cmp
mov
movsl
pop
or
stos
aas
cwtl
stos
push
insl
sub
adc
ss
movsw
dec
je
hlt
in
dec
out
push
push
xchg
add
cs
cmp
out
and
mov
cmpsl
cmpsb
mov
nop
xor
cli
adc
test
negl
imul
dec
int3
push
outsb
dec
ja
in
pop
je
addb
mov
test
mov
mov
cli
sub
adc
mov
mov
ficomps
sub
mov
scas
pop
adc
cmp
push
mov
js
ljmp
cmc
fs
sbb
lods
cmp
cld
data16
dec
jmp
icebp
or
dec
movsb
sub
cmp
fmulp
ljmp
mov
mov
shlb
mov
outsl
sbb
ss
imul
jl
lds
cmpsb
mov
xchg
fldl
jecxz
pop
lds
test
lcall
fwait
cmc
xchg
sub
inc
xchg
xor
mov
arpl
mov
in
subl
xor
dec
cmp
aas
jl
cli
adc
dec
imul
or
test
ja
dec
mov
fstpl
gs
jmp
push
sahf
cmpsl
cwtl
mov
pushf
int3
mov
addr16
out
push
cmp
jns
push
and
das
jb
lock
fwait
xor
push
dec
push
shll
or
jbe
push
data16
neg
push
dec
inc
into
fstp
sbb
fildl
push
xor
pushf
cli
cld
pop
and
adc
push
push
jnp
push
outsl
xor
push
mov
in
mov
cmp
pop
jb
mov
sbb
mov
jae
lods
test
iret
mov
ret
mov
fildl
push
call
sbb
fbstp
mov
jae
aad
or
popf
fdivs
lahf
mov
sub
fcompp
ss
test
out
fidivl
mov
icebp
mov
bnd
fs
cld
fsubrs
xor
jne
into
or
lock
mov
pop
pop
out
repnz
jl
ja
dec
xchg
outsb
notl
sahf
int3
repnz
dec
sub
test
pop
push
jle
in
inc
addl
movsl
mov
jns
jbe
pop
sbb
xchg
mov
and
mov
push
cmpsl
js
add
aad
cmp
imul
outsb
push
push
jmp
jbe
mov
jne
imul
and
es
cmpsl
sub
mov
mov
mov
out
cltd
cmp
xor
dec
ljmp
clc
test
adc
adc
sti
adc
inc
insb
cwtl
inc
inc
test
jp
dec
jb
into
ja
pop
pusha
popf
and
mov
hlt
jae
loope
xchg
in
fidivs
inc
sbb
jmp
pop
cs
xchg
mov
sahf
jnp
and
mov
call
inc
mov
push
push
mov
mov
xchg
pop
add
out
pop
xchg
adc
push
dec
or
jns
push
cwtl
adc
jbe
jne
and
adcb
sbb
jmp
sbb
movsb
push
push
pushf
in
fnstcw
cmp
rclb
dec
pop
in
sub
adc
lret
sbb
and
jae
mov
push
frstor
repnz
cld
js
xchg
pop
test
daa
stos
adc
and
cmp
fwait
adc
sbb
mov
rcrb
fwait
inc
jo
push
and
outsb
push
sbb
adc
fisubrs
inc
fstpt
leave
adc
movsb
mov
addb
dec
pop
cli
push
add
fidivrs
mov
or
mov
in
mov
xlat
inc
aas
adc
sbb
mov
mov
shl
push
aad
dec
mov
stc
sub
rorl
test
icebp
add
gs
lahf
fsubr
sub
idiv
lods
sub
xchg
in
and
mov
sub
mov
daa
cmp
sub
cld
scas
in
mov
loop
enter
cmp
mov
scas
cld
repnz
loop
cmp
pop
ret
jmp
outsb
lock
cmp
cmpb
push
pushf
ret
sub
loopne
inc
jb
mov
or
jecxz
pop
or
mov
cwtl
cmp
test
adc
addr16
pop
lahf
xchg
xchg
je
cmp
pop
sub
xor
lret
ljmp
fbld
inc
sub
mov
mov
insl
pop
cmc
or
pcmpeqb
lahf
mov
jmp
enter
fidivl
fisttpl
loop
or
dec
imul
adc
push
scas
sub
sub
bnd
cmp
or
sbb
jae
pop
outsb
adc
lock
lock
out
fimull
mov
nop
int3
cmp
jae
dec
das
insl
negl
mov
jp
sub
fucomip
inc
and
or
int3
cmp
push
loope
jno
fdivs
and
jnp
inc
push
mov
ja
xchg
fiaddl
cltd
decl
xchg
insb
sbb
mov
adc
push
sub
std
xor
inc
xchg
sbb
sub
pop
test
cmp
xor
lret
repz
aad
fmulp
fidivrl
fisttps
pop
lods
jnp
dec
lret
xchg
out
push
inc
ss
stos
cltd
pop
loopne
inc
pusha
call
sub
push
jp
std
ja
aam
cltd
outsb
js
and
dec
mov
push
adc
movsl
sub
repz
jne
add
addb
clc
lods
cmp
cmp
cmp
add
xchg
mov
gs
lods
aad
mov
mov
jae
push
cmpsb
jae
loop
lret
mov
movsb
arpl
repz
gs
xor
push
pushf
loop
lahf
mov
sub
dec
dec
xor
in
xchg
adc
into
pop
fsub
add
test
sub
cmc
nop
dec
mov
cltd
xchg
movsl
mov
int
loope
scas
cmp
and
sbb
scas
imul
jmp
mov
aas
lods
and
push
inc
shl
cs
push
mov
in
negb
dec
or
dec
jae
call
ret
xchg
and
fbstp
inc
jbe
adc
dec
mov
subl
sar
jmp
mov
mov
int3
sbb
mov
test
mov
adcb
mov
mov
stos
clc
sbb
cmc
out
dec
xor
or
mov
test
lahf
lret
incl
scas
sahf
mov
pop
js
daa
les
or
into
jg
xchg
shll
cs
mov
stc
clc
scas
shrb
cmp
fildl
das
xchg
jg
or
and
pop
insb
pusha
cmp
pop
addr16
mov
jle
pop
repz
inc
stos
es
rcrl
push
cwtl
and
adc
aam
sahf
in
sbb
and
ss
mov
inc
pop
push
pop
sbb
dec
test
lds
mov
xchg
repz
add
mov
ljmp
or
rcrl
sahf
ja
popf
lock
push
fimull
test
push
lret
int3
outsb
jge
mov
movsb
mov
scas
fmull
mov
test
mov
jle
pop
arpl
xchg
adc
xor
mov
push
add
or
inc
cmp
mov
xchg
push
pop
cmp
aaa
xor
pop
mov
xchg
cmp
xorl
leave
insl
inc
mov
rol
movsb
xor
faddl
mov
jl
iret
push
pop
scas
adc
sbbl
ret
pop
lea
jg
push
or
jbe
xchg
int3
stc
andb
lods
js
xor
pop
enter
or
movsb
add
xor
cmpsb
test
add
dec
inc
cmpsl
lahf
xchg
in
cld
inc
xchg
and
lea
push
sti
adc
scas
imul
add
pop
rcrb
fcomps
push
dec
xchg
inc
inc
test
or
push
aam
mov
jns
mov
mov
cmp
daa
roll
and
mov
xlat
push
adc
adc
and
cwtl
test
pop
pop
mov
jns
iret
popf
outsl
push
data16
and
pop
cmp
jle
add
adcb
dec
sarl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adcl
add
subl
movzwl
xorl
mov
or
mov
movzwl
addl
xor
subl
add
mov
mov
inc
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
xor
mov
adc
xor
add
mov
mov
xor
add
adc
mov
movl
adc
movl
or
movl
sub
mov
and
mov
mov
mov
adc
xor
add
mov
movl
mov
movl
je
mov
mov
sub
imul
mov
movzbl
sub
mov
adcl
xor
subl
xor
sub
and
sub
xor
adc
mov
mov
mov
sub
imul
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
notl
add
sbbl
imul
mov
mov
movzwl
xor
mov
add
or
dec
mov
mov
xor
mov
adcl
add
xor
incl
mov
sbbl
mov
addl
mov
add
incl
and
and
mov
xorl
mov
mov
lea
mov
and
mov
or
mov
mov
orl
sub
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
orl
add
movl
jne
jmp
and
mov
sub
add
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xorl
xor
sub
adcl
sub
andl
xor
movl
mov
movzwl
mov
mov
jmp
adcl
mov
addl
mov
xor
xor
jmp
push
xor
pop
inc
or
into
addr16
and
jl
cmpb
pop
jp
mov
repnz
push
and
inc
sub
dec
xchg
xchg
scas
inc
imul
leave
cmp
xchg
mov
sarl
pop
fsubrs
fnstcw
pop
or
dec
push
fldenv
jbe
in
fisubrs
out
leave
pop
or
out
add
nop
daa
xor
mov
cmp
jae
es
lcall
adc
lret
aas
sbb
cmc
addr16
enter
cmp
mov
xchg
mov
lcall
jl
jb
xor
cmpsl
push
insl
stos
push
sahf
shr
mov
add
inc
fldt
pop
daa
leave
aam
mov
lcall
test
cmp
add
int3
ljmp
insl
out
fnstcw
jg
dec
cmp
mov
std
mov
jg
mov
or
cltd
lcall
add
mov
pop
loopne
outsl
cld
pop
inc
xor
out
fmul
bound
cmp
js
mov
adc
rolb
jne
les
pop
lcall
js
notb
lret
in
ja
xlat
push
cmp
fcoml
hlt
roll
mov
adc
popf
dec
add
lods
test
dec
test
add
aad
stos
orl
push
lods
cmp
data16
pop
test
adc
dec
mov
xor
cs
mov
cmp
jmp
mov
mov
sbb
xor
aas
xchg
lahf
jecxz
out
xchg
icebp
stc
mov
sub
sahf
js
add
jbe
push
push
xor
push
dec
add
cmp
cwtl
jne
push
cli
inc
pop
pop
in
xchg
push
js
and
loopne
push
movd
pop
lret
in
mov
mov
adc
and
mov
enter
in
pop
sub
push
xor
push
pushf
or
jne
imull
dec
aas
mov
push
mov
cmp
pusha
mov
scas
mov
cmp
insl
and
dec
or
dec
test
dec
xchg
daa
mov
ljmp
ret
jnp
es
das
fildll
jp
repz
mov
test
xlat
fsts
in
call
adc
sbb
mov
dec
xchg
imul
push
mov
pop
subl
jne
sub
ds
ds
cld
or
arpl
xchg
movb
xchg
shr
popf
insl
xchg
sub
dec
lods
pop
push
pop
ret
mov
mov
les
insl
xor
scas
cs
push
aaa
mov
and
and
and
inc
cmp
pop
mov
shl
outsb
xchg
add
sbb
sub
std
inc
push
popf
pop
repz
lahf
pop
punpckhwd
jp
pop
xor
push
fistps
push
sub
or
mov
adc
mov
ret
nop
cmp
push
loop
scas
pushf
test
dec
mov
cld
pop
push
mov
mov
negb
adc
xchg
sub
jge
ja
pushf
icebp
lcall
pop
or
mov
mov
rcr
mov
add
pushf
subb
loop
xchg
cmp
pop
ss
in
push
lods
cmp
les
cmpsb
push
icebp
inc
or
pop
and
ss
dec
test
clc
or
rolb
hlt
cmpb
in
jo
xchg
out
push
sbb
mov
loope
sbb
xor
mov
push
and
fwait
push
adc
fcompl
push
daa
pop
fdivrs
mov
aas
dec
ds
test
jge
inc
std
jecxz
jg
imul
xchg
mov
xor
lret
daa
orl
andnps
popf
xor
test
fisubrs
mov
lea
mov
push
mov
xor
in
ret
iret
jno
and
iret
test
or
fldenv
push
jp
aaa
inc
lock
ss
mov
mov
sbb
mov
and
aas
cmp
in
pop
addr16
dec
sbbb
ret
jp
mov
cld
sub
int3
or
mov
mov
data16
adc
push
sub
and
and
cltd
cwtl
mov
fstpl
xchg
xlat
test
mov
jl
cmp
ret
dec
pop
dec
adc
popl
mov
dec
sub
mov
out
mov
insb
das
ss
outsl
sbb
jne
js
nop
pop
add
jae
sub
inc
bound
les
in
test
sahf
fisttps
loopne
or
push
outsl
inc
outsb
jl
fcomps
ljmp
push
mov
sbb
aam
data16
sbb
mov
iret
jb
pop
lock
or
mov
push
adc
xchg
fiadds
mov
mov
hlt
out
fimuls
mov
movsl
and
pop
adc
pop
jae
jge
dec
testl
repz
mov
mov
mov
test
stos
dec
dec
insb
imul
jae
xchg
push
mov
into
ret
xor
lea
xor
sbb
cmp
push
outsb
pusha
dec
in
scas
pop
fldl
stos
xor
cltd
xor
lods
fldt
jp
mov
xchg
pusha
sbb
jge
pop
fisubl
mov
negl
jns
dec
push
pop
fcoms
and
push
add
sub
push
test
int3
stos
clc
roll
jg
or
int3
jbe
add
xchg
and
sub
or
test
std
ljmp
add
outsl
push
decl
mov
cli
cmc
aam
dec
in
push
jp
sub
outsb
lcall
adc
or
cmpsb
stc
sub
stos
imul
jge
insl
fdivl
pop
lock
xchg
inc
fsub
in
add
movb
add
inc
popf
dec
add
bound
dec
pop
mov
stc
repnz
imul
push
jns
cli
subl
mov
sub
test
inc
lcall
mov
xor
push
xchg
rclb
mov
inc
add
test
pushf
xchg
jo
scas
test
pop
xchg
push
sbb
fisubrs
es
cmp
bound
jbe
or
mov
push
shrb
mov
lock
and
mov
iret
adc
subb
push
cmp
xchg
push
xchg
lret
nop
pop
stos
mov
dec
dec
pop
imul
insb
mov
lret
fwait
push
sub
pop
in
jmp
fimuls
mov
ret
data16
insl
inc
bound
adc
jmp
test
push
loop
pop
ficompl
in
outsb
shl
xchg
pop
popf
add
lret
mov
pop
add
jno
hlt
inc
push
call
in
push
lock
jmp
dec
cld
mov
sub
xchg
adc
imul
and
adc
or
pop
mov
xchg
sbb
mov
inc
inc
cmc
cmp
jnp
ljmp
add
add
jmp
in
pop
icebp
xor
mov
aaa
mov
mov
mov
pusha
test
inc
dec
mov
in
mov
xor
and
or
jmp
insl
sti
mov
negl
xor
inc
inc
mov
ret
dec
sbb
and
push
stos
call
fstps
test
sar
inc
or
fcoms
repnz
xorl
leave
mov
sqrtps
lods
inc
test
insb
inc
and
rep
lods
cmp
dec
inc
daa
out
add
lods
lret
cli
add
shr
leave
push
fldcw
inc
push
lds
xchg
bound
dec
add
jmp
adc
xor
out
scas
call
es
cmp
dec
add
int3
jno
lock
jge
fdivr
scas
mov
sub
shrl
jno
dec
out
out
push
fsubrl
mov
es
sti
adc
lret
push
and
ret
fists
xchg
xor
out
pop
stc
sti
adc
xchg
mov
ljmp
inc
mov
lret
ret
rorl
les
mov
test
push
cmp
mov
movsl
jb
mov
movsl
lret
mov
inc
mov
bound
scas
mov
pop
or
xchg
xor
cmc
ret
orl
pushf
jae
push
push
mov
mov
fcmovnu
or
ljmp
lock
lretw
jle
push
adc
adc
or
ss
adc
and
fcmovnbe
pushf
test
fisttpll
adc
xor
lea
insl
lsl
lods
push
mov
ds
test
inc
pop
mov
aas
dec
in
cli
adc
mov
mov
or
in
sbb
mov
jecxz
xor
int3
xor
mov
lahf
pop
shll
mov
jmp
pushf
and
lahf
loope
mov
cli
lret
mov
mov
mov
popa
pop
fldenv
fidivl
mov
push
ret
jle
sub
xchg
mov
xchg
jb
cmp
sub
outsl
lret
out
addl
clc
scas
cs
pushf
ret
imul
adc
ja
mov
inc
pop
mov
push
jl
ret
and
mov
out
xchg
cs
sbbb
test
sbb
mov
stos
push
xchg
push
pop
mov
sub
nop
out
fwait
nop
lret
cmpsb
and
pop
js
pop
xor
lahf
insb
pop
fwait
clc
xor
adc
lahf
cmp
mov
test
rorb
push
stc
loope
movsl
cld
js
xchg
sbb
mov
pop
jmp
daa
in
push
and
push
cmp
pop
cmc
out
cmp
stos
adc
ja
push
sbb
fstpl
lods
lahf
push
test
ftst
hlt
pop
aas
pop
or
xor
jle
dec
fiadds
jbe
mov
popa
rcr
jge
sahf
int3
adc
add
inc
sahf
lods
stos
mov
dec
sti
ja
mov
stos
int
test
and
lret
xchg
mov
add
into
mov
stos
cvtps2pi
adc
jne
sub
fdiv
mov
lods
xor
sarb
xor
and
mov
cmp
ret
xchg
in
and
sbb
push
pop
lds
ret
test
mov
pop
iret
or
cmp
push
pop
push
leave
xchg
mov
add
jl
push
je
mov
mov
jbe
xchg
adc
mov
mov
sbb
mov
or
leave
out
nop
into
sbb
sbb
pop
dec
mov
insb
and
mov
test
adc
and
xchg
xchg
add
push
sahf
jmp
mov
imulb
dec
cmp
movb
cmpsb
aad
xchg
test
popa
aam
mov
arpl
push
and
rorl
pop
idivl
inc
inc
mov
aas
mov
cmp
jmp
dec
in
or
insl
out
test
aaa
mov
roll
xlat
enter
xchg
jle
clc
arpl
test
aas
ljmp
sbb
shll
xor
pusha
rorl
shl
xor
cmp
divb
adc
mov
mov
mov
mov
daa
and
or
pop
fucomip
xor
jle
dec
push
sti
xchg
test
stc
leave
jbe
cmp
cmp
movsl
cmp
push
sbb
imul
in
ljmp
cld
fbld
xchg
xchg
lods
cmp
and
insl
push
test
mov
adc
testl
sti
mov
xchg
mov
pop
bound
pop
ja
pop
jno
inc
fisttps
mov
push
cmpsb
je
jl
push
mov
jno
pop
mov
cli
rcr
inc
jmp
lret
mov
jmp
mov
daa
cwtl
lret
cld
or
das
xchg
pop
aas
adc
out
push
lods
pusha
push
jne
in
es
les
xchg
and
xor
filds
dec
mov
jmp
fsubrl
cmp
pop
scas
shr
push
push
pop
lcall
loopne
mov
cmpsb
in
mov
jecxz
ja
mov
fnstenv
or
imulb
or
jmp
sbb
adcl
mov
sub
mov
fwait
outsl
push
outsb
adc
xchg
pop
adc
std
sahf
xor
add
ljmp
and
mov
jle
insl
pop
nop
lds
inc
daa
cmp
and
xor
dec
fs
fs
xor
fbstp
sub
jno
adc
pop
ja
jle
sbb
and
sbb
shrb
mov
loope
mov
lods
xor
aam
out
pop
ror
lret
xchg
arpl
inc
into
jne
lea
jecxz
ret
icebp
fcmove
lret
jno
jl
testl
pop
inc
sub
mov
jae
inc
push
mov
jp
iret
and
cmc
push
and
ss
inc
push
pop
rcll
loopne
orb
mov
bound
jno
rcrb
jae
pop
shr
insl
pushl
mov
outsb
sahf
xchg
lret
xor
xor
cmp
call
xchg
sub
push
cmpsb
add
ljmp
jge
loop
mov
mov
lahf
jp
stc
test
out
scas
xchg
cmpsb
lods
inc
shll
arpl
popf
fs
fidivl
test
loope
scas
mov
cmpl
lret
imul
mov
cmp
mov
and
inc
and
push
int3
fnstenv
pop
push
js
jb
and
sub
mov
aad
xchg
dec
add
xchg
cs
inc
aam
mov
fwait
push
aam
pusha
lret
call
add
lahf
out
in
scas
into
inc
testb
sub
sub
popa
testl
cmpl
das
fists
mov
lret
ds
xchg
lcall
cs
sbb
dec
inc
xor
xchg
push
out
outsl
or
push
push
xchg
dec
xchg
mov
js
push
jmp
xor
mov
mov
leave
xchg
popf
shld
fsub
inc
inc
add
mov
in
rcrl
mov
nop
and
mov
cmpsb
push
jl
and
mov
pop
mov
mov
rcll
iret
sti
cmp
jecxz
add
test
pop
jmp
aam
sbb
fists
xchg
ljmp
xchg
daa
jo
push
and
lret
jno
push
mov
and
decl
pushf
aam
mov
or
aad
inc
jmp
xchg
fdiv
mov
dec
adc
sbb
jmp
push
or
out
mov
inc
pop
pop
popf
repnz
push
je
call
insl
cmp
icebp
push
or
and
call
add
enter
and
pop
dec
out
insb
test
fucomip
and
push
push
and
scas
sub
enter
inc
js
mov
mov
adc
out
cmp
push
fwait
call
mov
pop
sahf
cld
or
lcall
fcomps
fldcw
push
rolb
cwtl
or
and
ljmp
push
std
nop
mov
int3
fiadds
adc
xchg
lret
pop
lcall
push
inc
dec
push
loope
aaa
pop
cli
rol
fwait
xor
pop
mov
cwtl
pusha
pop
aas
jbe
mov
loopne
or
inc
sahf
fisubs
shlb
jmp
cltd
xchg
sti
cmp
xor
mov
sub
cltd
fwait
outsb
lahf
mov
bound
inc
push
int
add
dec
cmp
jl
dec
data16
ret
push
dec
or
mov
pop
fucomi
push
xchg
out
in
aad
or
stc
xor
push
cmp
fwait
push
aad
fld1
call
mov
bound
icebp
jnp
subb
int3
xor
mov
out
leave
shl
div
aaa
sub
fmulp
rolb
mov
push
out
in
into
out
clc
cmp
push
cmpb
sbb
outsb
rcrl
mov
and
dec
out
mov
lahf
cmp
jecxz
jo
add
jo
stc
push
push
es
out
outsb
push
pusha
cmp
out
fdivrs
arpl
das
jp
std
xchg
sbb
and
inc
clc
stos
sub
mov
mov
inc
shlb
adc
ss
cmpb
push
and
xchg
out
pop
stc
push
ret
sahf
cmp
inc
adc
test
in
scas
add
and
lret
lret
jl
movsl
jns
cmp
test
xchg
in
pop
imul
mov
in
cwtl
mov
add
lret
inc
push
lret
push
popa
cs
pop
lret
dec
inc
mov
pop
inc
push
cmp
repnz
cwtl
sarl
push
mov
add
push
lret
popf
scas
scas
aad
data16
ljmp
ficomps
lods
adc
add
inc
lcall
sahf
or
cwtl
aaa
icebp
dec
gs
subb
xchg
push
mov
mov
bound
cmp
mov
sub
jecxz
hlt
cli
cld
mov
adc
fs
imul
mov
xlat
inc
imul
add
mov
xor
icebp
out
ret
mov
scas
cltd
mov
aam
fistl
or
iret
mov
test
les
cs
loop
cli
fcmovbe
sarb
inc
mov
sbb
dec
nop
inc
xor
mov
fmull
loope,pt
mov
out
daa
dec
pop
pop
out
fwait
push
push
andl
and
movsb
fisubl
xlat
int
std
insb
stc
mov
out
inc
lods
scas
jne
xor
sub
mov
xorl
scas
push
ret
jp
dec
cmp
in
adc
and
and
cmp
pop
cmp
and
or
xchg
out
outsl
mov
ret
shlb
lods
fsubrl
outsb
pop
movsl
or
aas
testl
or
xor
cltd
cltd
cwtl
cwtl
mov
add
sbb
mov
lret
out
sub
mov
icebp
adc
dec
mov
ret
cld
pushf
and
repnz
push
pushf
test
das
push
mov
pop
shrl
test
jnp
clc
enter
iret
cmp
dec
jl
inc
fiaddl
mov
test
popf
push
scas
mov
mov
enter
adc
xchg
or
fs
aaa
in
icebp
adc
flds
in
mov
ds
lahf
fbstp
pop
mov
push
sbb
jecxz
push
in
bswap
xchg
fs
fldenv
popa
flds
add
out
in
flds
add
or
push
add
repz
imul
test
push
das
mov
dec
lahf
scas
outsl
add
fwait
mov
push
mov
in
adc
addr16
aaa
out
cmp
xchg
inc
in
sub
adc
adc
rcll
push
xchg
mov
loope
xor
add
insb
xchg
nop
dec
imul
inc
or
and
imul
cmpsb
cmp
outsb
cld
in
pop
mov
pop
in
mov
cmpsl
aam
dec
pushf
sub
jmp
adc
add
or
jo
in
nop
lcall
fistpll
inc
fcmovb
inc
rcrl
xchg
cmp
cld
mov
fdivp
xor
addb
jle
mov
cs
out
fildl
popa
arpl
jecxz
pop
out
andl
inc
idivl
push
push
repz
mov
das
push
add
fwait
jne
or
adc
sbb
lods
repz
cmpl
sub
iret
dec
jo
mov
andl
insl
dec
loope
int3
ret
fwait
sub
std
in
arpl
cmp
adcb
add
pop
fcmovu
push
aad
iret
subb
cld
daa
scas
fidivrl
jmp
testb
xor
add
mov
sahf
mov
push
or
icebp
call
arpl
push
int
movsl
jae
ret
pop
dec
in
or
clc
push
andb
lds
cli
lds
outsb
xor
ret
xchg
mov
cmpsb
data16
sahf
xor
mov
sub
movsl
stos
inc
jp
scas
fiaddl
ficoml
mov
in
xchg
test
mov
xlat
adc
inc
mov
outsb
fs
rclb
sbb
push
movsb
xlat
and
loop
xchg
int
notl
mov
call
jb
enter
xchg
pop
pop
sub
imul
loope
lcall
or
cmp
and
jbe
and
std
jg
add
test
mov
dec
xchg
and
mov
push
outsb
mov
mov
lods
mov
notb
arpl
les
pop
pop
arpl
xchg
add
in
cmpl
cmp
sub
push
pop
mov
push
sbb
or
or
addr16
mov
jae
stc
pop
jge
push
movb
mov
inc
jbe
push
inc
or
jb
nop
bound
fcomi
movsb
fistpll
loope
daa
loopne
cmp
jb
lret
pop
push
mov
aas
or
rclb
in
xor
mov
dec
mov
pop
sbb
add
orl
lret
pop
bound
into
cwtl
hlt
push
clts
jecxz
stos
js
pop
inc
sbbb
daa
jne
test
popa
std
push
jle
push
push
mov
rcl
pushf
inc
andb
lcall
movsb
and
stc
push
addr16
jmp
and
in
lea
iret
mov
nop
subb
lret
jno
jno
xchg
dec
fidivl
repz
inc
or
add
push
out
inc
xor
nop
hlt
mov
xchg
jmp
cltd
clc
mov
pop
popa
pop
mov
jno
adc
mul
cltd
dec
mov
mov
popa
inc
sbb
cmp
cltd
outsl
adcl
in
roll
lock
out
jne
push
loopne
ret
shrl
cmp
sahf
ja
sar
mov
ljmp
or
mov
sbb
push
pop
cwtl
inc
xor
nop
mov
roll
imul
jl
mov
loopne
loope
mov
insb
sbb
add
push
rorb
lock
dec
mov
mov
cld
nop
xchg
and
ret
dec
bound
push
int3
testl
push
mov
dec
out
push
push
sub
sbb
mov
mov
gs
out
xor
add
popf
or
shrl
and
loopne
shrb
sub
daa
sbb
or
ret
xor
dec
mov
mov
cmp
orb
push
dec
dec
add
mov
xorl
sub
aaa
movsl
sub
mov
mov
add
rcll
cmpsl
aaa
cmp
add
sbb
int
sub
cwtl
lods
inc
xchg
int
out
jne
dec
pop
push
cmp
std
ljmp
mov
push
cmp
cld
lods
xchg
negl
punpckhdq
sub
mov
dec
js
fwait
mov
mov
push
gs
xchg
adcl
cltd
mov
stos
or
xchg
in
mov
es
push
jl
fwait
xor
fidivl
insb
xor
jmp
sbb
hlt
sub
stos
sahf
or
rcrb
ja
rcrl
add
in
inc
sub
adc
out
push
mov
sub
sbb
mov
push
dec
mov
stos
ja
aaa
adc
adc
xor
sbb
rcl
testb
andb
mov
and
inc
jnp
xchg
into
cmpsl
scas
fisttpl
pop
cwtl
popf
dec
add
xor
inc
lea
in
cmp
insl
add
rclb
sub
les
pushf
sbb
popf
sbb
mulb
cmp
dec
xor
mov
mov
cmp
rol
inc
rcl
mov
roll
int
or
xchg
push
mov
adc
pop
in
jno
mov
sub
enter
pop
arpl
xchg
bound
fdivrs
and
inc
dec
push
notb
mov
or
push
mov
les
shll
cmpsb
lock
dec
rep
popa
sub
and
cmpsb
test
and
sub
hlt
jae
lods
jo
filds
xor
daa
add
sbb
dec
ret
cmp
mov
idivb
lds
mov
sti
mov
add
xor
and
stos
mov
and
fwait
mov
jle
mov
add
cmp
xchg
ret
cwtl
mov
fildl
mov
adc
push
and
push
push
sub
or
pushf
ss
aaa
add
cmp
pop
xor
push
add
fisubl
dec
jno
cmpsl
aas
lds
sbb
adc
pop
lcall
in
jg
mov
push
mov
cmp
xlat
dec
push
jg
lret
fildl
cmpsl
add
std
hlt
mov
push
push
outsl
xchg
test
sub
testl
inc
push
cmp
jne
in
xchg
movsb
aaa
xchg
sbb
add
popa
test
insl
cmp
lds
dec
and
incb
inc
loope
jmp
lea
cltd
sbb
cmc
roll
inc
fs
mov
mov
int
loopne
xor
fs
rcrb
adc
mov
into
pushf
rolb
scas
aaa
cmpsb
aam
xchg
je
xchg
sbb
lods
jnp
insb
lret
mov
mov
mov
sbb
push
ret
and
cmp
inc
mov
mov
jb
push
outsl
jmp
dec
cmpsl
in
xchg
adc
outsb
xchg
inc
nop
mov
mov
mov
lcall
shl
cli
xchg
pusha
daa
adc
push
mov
jne
roll
js
add
xlat
sub
movsb
xchg
scas
or
lods
sub
push
insb
or
xchg
pop
and
sti
je
enter
push
and
in
pop
push
fcmovbe
and
push
outsb
push
cmpsb
jle
cmc
jne
in
rclb
lods
mov
add
adc
xor
pop
clc
dec
dec
stos
dec
adc
mov
repz
sahf
idivb
pop
cld
rorb
repz
push
fsubr
lods
add
lcall
push
into
cs
push
xchg
mov
push
or
into
mov
mov
ret
push
gs
aaa
or
dec
mov
enter
dec
popl
test
rolb
aas
int
push
push
xchg
imulb
adc
jns
sar
stos
jle
jbe
push
in
or
xchg
out
das
das
dec
sbb
ficoml
enter
inc
out
or
ja
xor
dec
xchg
mov
add
pop
es
out
xchg
cwtl
xchg
pushf
fldpi
fwait
scas
or
rorl
call
icebp
loope
pop
xor
mov
push
decb
scas
stos
rcrl
or
xchg
pop
cs
and
or
xor
outsb
pop
pop
jb
pop
push
gs
and
mov
sub
xchg
idivl
mov
or
xchg
mov
cmpsl
add
adc
pushf
in
xchg
std
popa
idivb
cmp
push
icebp
arpl
and
decl
out
pop
pusha
lods
sbb
into
cmp
stos
xchg
or
or
loopne
sbb
pop
or
adc
out
inc
xchg
je
mov
lret
inc
fwait
dec
in
mov
adc
cld
xchg
dec
ret
mov
mov
aam
lcall
and
out
sbb
leave
inc
xor
pop
push
adc
inc
pushf
testl
les
xchg
sub
call
in
cwtl
hlt
and
fsubrs
adc
cmp
nop
stos
test
mov
or
cmp
lds
inc
xor
sub
jle
cmc
cmp
and
test
je
aas
fldcw
xor
cltd
sub
insb
xchg
imul
xchg
or
sub
fists
dec
imulb
xchg
sarl
call
and
scas
leave
icebp
xchg
hlt
xor
aaa
shlb
add
or
sub
test
xor
out
jns
cld
mov
adc
mov
dec
rorl
repz
xchg
stos
mov
sub
inc
ja
clc
pop
outsl
add
push
rolb
js
movsl
or
adc
enter
fucomi
insb
cmp
aaa
subb
les
pop
xor
cmp
push
inc
cmc
scas
out
iret
mov
jle
add
packsswb
pushf
test
cmp
push
lods
cmpsl
scas
rorl
mov
jne
lcall
data16
inc
sub
fwait
arpl
lods
fwait
test
and
aas
cmc
xchg
idivl
sub
nop
dec
mov
mov
cmpsl
mov
int3
clc
ret
sbb
shl
lret
pop
adc
movl
outsl
insb
xor
inc
pop
sbb
add
mov
cmpsl
push
fbstp
loope
mov
sbb
std
sbb
and
cmp
rol
inc
cli
int3
imul
mov
xlat
nop
sbbl
sub
outsb
cwtl
mov
xor
xchg
loop
mov
jmp
sub
jle
xlat
enter
jnp
idivb
es
mov
rorl
lods
cmp
pop
shl
imul
lock
or
cld
aad
rcll
add
pop
movsl
outsb
imul
jg
sbb
mov
pushf
ss
mov
mov
xchg
dec
addr16
aam
ja
mov
cmp
mov
dec
fs
jnp
lods
add
dec
adc
mov
sub
xchg
and
push
jbe
add
sti
or
mov
and
movl
fidivrl
xchg
or
sahf
sub
push
jl
cs
roll
out
mov
idivb
insb
stos
je
movsb
push
sbb
xor
pop
inc
adc
mov
xor
adc
mov
cld
mov
ret
leave
int3
xor
cs
sub
stos
pop
mov
jmp
sbb
stos
cmpsw
sbb
pmaxub
push
xchg
rcrl
add
cltd
push
lahf
in
pop
mov
subb
dec
xor
call
je
or
push
jmp
cmc
inc
inc
fcomps
dec
fnstenv
pusha
jecxz
add
stos
mov
ret
push
xor
dec
jns
mov
clc
lahf
mov
or
pop
es
insb
jecxz
sahf
aas
cmp
dec
pop
shll
mov
lret
or
sbb
stc
or
daa
lods
mulb
jl
add
repz
das
negb
jnp
mov
out
movsl
addr16
repz
jecxz
add
xor
adc
stos
ret
ret
mov
mov
aad
ja
rcll
push
cld
jo
mov
mov
push
int3
out
int3
cmpsl
mov
jl
rcrl
cmp
sub
add
xor
mov
add
mov
mov
inc
mov
subl
add
andl
imul
xor
or
adc
mov
mov
mov
add
sbbl
or
mov
or
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
add
xor
sbb
mov
mov
mov
add
addl
and
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
dec
popl
lea
push
dec
mov
cmp
jp
pop
jp
cld
notl
jns
adc
addr16
xchg
repnz
jno
xor
adc
stc
cmp
add
xor
movl
cmp
iret
jmp
mov
inc
in
arpl
iret
mov
add
sub
xchg
jnp
imulb
and
or
into
jg
xor
mov
out
stos
mov
scas
inc
loopne
or
into
pop
dec
fstpl
or
mulb
aaa
ret
stos
movsl
and
dec
mov
into
sub
sub
push
jb
adc
add
push
inc
scas
fxch
xor
push
jp
aam
mov
insl
inc
mov
lods
xchg
imull
shll
aas
mov
in
loopne
imul
test
mov
jae
loop
cmpsl
inc
xchg
leave
sarl
mov
lock
insb
fstl
and
test
push
in
adc
aas
dec
push
jne
daa
adc
jmp
jp
cmp
jp
mov
inc
adc
and
popa
cmpsl
rolb
dec
out
xchg
cs
xchg
inc
stc
idivl
mov
out
popl
aaa
adc
mov
push
xchg
test
xor
mov
sbbb
push
bound
lds
jns
or
test
inc
ss
repz
push
xchg
shrl
ja
add
sub
imul
sub
arpl
mov
or
aam
inc
jo
pop
jae
jecxz
mov
mov
lods
dec
xchg
cmpsb
scas
rol
shrb
and
ret
adc
or
rcrl
gs
dec
popa
sti
fstps
xor
mov
push
mov
mov
addr16
inc
dec
dec
xor
push
pop
fcomps
xor
lods
xlat
lods
adc
inc
movsl
pop
jle
lcall
add
shll
test
shl
add
icebp
push
xlat
push
das
lret
xchg
stos
mov
inc
add
cmp
imul
xchg
iret
arpl
push
fwait
mov
adc
ljmp
sbb
xchg
jl
dec
xor
or
ret
sbb
mov
mov
data16
iret
fisubs
xor
sbb
push
mov
xor
lock
pop
sub
fnsave
push
outsb
jbe
sbb
inc
shrl
shrd
rcl
inc
fwait
stc
dec
cmpsb
mov
push
ret
and
hlt
pop
outsl
xor
insb
fimull
xchg
mov
inc
adc
mov
adc
adc
das
aaa
fmull
jmp
cmp
iret
push
push
sbb
shlb
cmpl
aad
fiaddl
mov
jbe
push
inc
dec
pop
ljmp
dec
stos
aam
dec
xchg
add
ja
pop
pop
sub
pusha
ret
adc
cmp
inc
cmp
imul
popa
xchg
cmpsl
and
sbb
outsl
faddl
in
inc
adc
sbb
xor
in
es
movsl
jp
dec
sbb
mov
dec
imul
call
push
inc
scas
inc
push
leave
or
xchg
aad
lret
pop
gs
mov
imull
bound
adc
mov
sbb
hlt
add
addr16
inc
movsl
stos
jo
add
fs
cmp
dec
fstpt
bound
fst
icebp
out
outsl
sti
xor
cmpb
xor
sbb
push
mov
lret
movsb
dec
add
jge
pop
popf
push
sub
leave
sahf
int3
sub
jae
mov
pop
fmull
and
fcomps
out
push
shlb
sub
sbb
add
pop
lock
aad
leave
and
arpl
bound
sti
mov
jmp
shrl
cwtl
fbstp
rorl
insl
inc
pop
mov
enter
cs
mov
arpl
frstor
sahf
and
push
dec
mov
lret
dec
imul
jo
and
popf
add
jbe
push
adc
pop
xchg
int
pop
arpl
fdivl
test
es
icebp
xchg
aam
les
xchg
sbb
sub
out
sar
int3
stos
int3
xchg
and
inc
subb
adcb
js
jmp
fsubr
repz
pop
test
jmp
cmp
sbb
test
and
jp
mov
shlb
add
in
push
iret
cmc
and
int
push
lock
sbb
push
loop
mov
aad
xchg
jae
adc
mov
hlt
sahf
lods
loopne
mov
jbe
stc
mov
lcall
dec
test
dec
jge
pusha
pop
in
push
adc
fcompl
adc
adc
jo
mov
aad
loopne
sub
push
fxch
sbb
mov
into
popf
mov
ret
clc
mov
mov
cmc
lahf
xor
mov
mov
or
mov
ror
sbb
call
addr16
shrl
arpl
push
sub
dec
in
in
sahf
pop
sub
lea
test
clc
mov
mov
sarl
mov
inc
pop
arpl
insb
inc
xchg
mov
icebp
or
scas
xor
mov
jbe
cwtl
movb
cmpsb
jae
aam
roll
movsb
idivl
pusha
inc
aaa
adc
sub
mov
rclb
sahf
cmpsb
test
jge
ficoml
sub
repz
mov
and
mov
loop
xor
pop
mov
movsb
leave
dec
dec
cmpsb
das
dec
pushaw
mov
mov
iret
mov
mov
imul
fsin
imul
sub
or
push
lret
test
or
sahf
xchg
xchg
inc
out
cmpsl
pop
daa
popa
or
test
ret
test
adc
and
mov
loop
jns
pop
lcall
mov
mov
sub
test
pop
out
mov
leave
adc
bound
sub
ja
mov
xrelease
loopne
cmp
jb
decb
out
and
and
lahf
pop
cmc
inc
fwait
mov
cmpsl
jl
sub
xor
daa
xchg
popf
in
sbb
push
xchg
cwtl
aad
mov
dec
out
insl
pop
fs
mov
test
pop
je
lret
out
cld
add
adcb
inc
or
fcoms
mov
inc
push
mov
jnp
mov
ljmp
adc
adc
sub
mov
dec
xchg
mov
popa
cmc
cs
and
pop
push
js
pushf
adc
add
add
mov
lods
cltd
xchg
gs
lret
mov
inc
jecxz
orl
jle
mov
movsb
in
xlat
jmp
lds
sbb
in
inc
lahf
jmp
mov
jmp
cmp
inc
xor
mov
inc
inc
jne
pop
test
bound
sbb
lods
movsb
adc
sbb
jne
call
push
pop
fwait
sbb
sbb
mov
loopne
jle
push
push
lcall
mov
inc
ljmp
dec
scas
scas
ds
ljmp
insl
xlat
not
xor
mov
push
push
fisubrl
push
lret
mov
cwtl
lea
mov
icebp
pop
dec
sub
xor
mov
outsl
lea
in
das
jbe
mov
lods
mov
xor
xor
arpl
mov
xchg
arpl
hlt
lcall
adc
mov
cmp
jmp
xchg
xlat
xor
xchg
hlt
xchg
adc
mov
dec
xchg
out
loop
pop
jno
add
xchg
inc
stos
sub
mov
inc
mov
fs
inc
mov
popf
xchg
fwait
lret
cli
stos
sub
or
and
inc
xlat
mov
test
testb
lret
sub
sub
jge
fsub
dec
into
out
push
sbb
cli
fwait
mov
fidivrs
lahf
stos
out
in
mov
clc
loop
and
icebp
pop
sub
jb
daa
push
pop
xchg
cmpb
jnp
cmp
fsub
adc
xchg
das
and
fs
mov
movsb
lods
stc
lock
push
hlt
testl
test
rorb
lock
xor
or
dec
xor
push
mov
push
sbb
xor
xchg
inc
xchg
cmp
test
sub
dec
mov
mov
adc
loop
mov
dec
imul
dec
imul
fisubl
std
gs
lds
mov
and
mov
jge
addr16
sbbl
js
ja
lahf
sbb
dec
mov
inc
subl
push
pop
fcompl
imul
rolb
mov
jb
and
xor
scas
js
aaa
inc
int3
pusha
int3
unpckhps
mov
pop
std
adc
dec
sub
dec
sub
shl
dec
dec
imul
hlt
mov
sbb
aam
fs
inc
mov
scas
in
fs
leave
mov
insl
pusha
mov
pop
jb
clc
cmp
leave
sub
dec
aam
pusha
add
jns
inc
insl
push
fld
lds
xchg
jle
adc
test
cmc
in
decb
aam
sub
jne
stos
cmp
xor
ss
dec
add
push
shl
cmp
imul
push
loop
popf
fsubs
or
hlt
test
sti
mov
adc
mov
movsb
xchg
call
add
sbbl
sub
rcll
lods
lods
sub
mov
sub
cmp
nop
sbb
jae
sarl
xchg
inc
xchg
sbb
xor
cltd
xchg
jmp
xor
gs
leave
adc
push
ljmp
pop
xor
pop
test
mov
mov
jl
jecxz
push
insb
xchg
leave
add
sarl
push
mov
bound
dec
imul
cvtpi2ps
jo
sbbb
hlt
inc
scas
adc
nop
out
or
bound
ds
jo
imul
ret
mov
icebp
imul
mov
cmp
int
xchg
dec
insb
adc
addb
and
pop
mov
dec
outsb
and
push
out
push
adc
or
hlt
xchg
lds
add
or
push
jne
push
enter
fsubl
jmp
adc
stc
inc
in
sub
xchg
dec
jge
fistpl
in
dec
inc
popa
add
jg
fisubrs
xchg
hlt
push
test
xlat
stos
int
scas
inc
mov
rolb
push
mov
in
mov
hlt
or
jge
js
out
popf
rolb
adc
jb
jne
adc
and
ja
sub
dec
cli
sbbb
out
sbb
out
mov
or
add
jbe
xor
add
orb
mov
sub
rcrl
int
jne
sbb
mov
pushf
mov
cmp
lods
inc
lods
inc
cld
mov
inc
pop
push
xor
movsl
rcrl
push
fcomi
mulb
xchg
sbb
sti
inc
xlat
mov
loopne,pn
sbb
fsubs
jno
or
fcmove
sar
lods
pop
std
pusha
xchg
or
aad
std
mov
in
xchg
mov
mov
xor
lods
sbb
or
and
je
mov
jge
insl
jbe
dec
pop
pop
or
cmpl
decl
xor
jo
cmpsb
aad
fcomps
cmp
jmp
push
mov
ret
lock
aas
std
and
mov
and
inc
jg
mov
pop
sahf
inc
clc
jg
lods
adc
lcall
jge
addb
jae
shlb
dec
std
cmp
lahf
ljmp
adc
jg
or
pop
mov
xor
adc
mov
orl
sbb
inc
add
cmp
mov
insb
push
sub
cmpl
cmp
mov
daa
add
pop
sub
pop
add
or
or
cwtl
mov
sub
stos
fisttpl
xchg
es
into
fistl
ret
jmp
xchg
sub
dec
les
xor
lret
sub
es
lret
fistpl
fs
rcrl
and
call
mov
test
cmpsb
mov
inc
jmp
push
enter
setle
pop
inc
insl
lret
fwait
sub
cmp
pop
scas
mov
adc
fcompl
mov
mov
lea
push
in
sahf
or
pop
xor
mov
fistps
xor
push
popf
mov
or
scas
lret
aas
xchg
nop
into
das
repz
ret
mulb
enter
adc
cld
xchg
inc
in
jne
lods
leave
inc
int
icebp
test
and
mov
call
test
repnz
iret
pop
jg
push
adc
addb
or
push
daa
fs
cld
jnp
sbb
ds
inc
pop
mov
repnz
shlb
mov
mov
push
pop
sub
bound
push
sbb
ror
push
ljmp
jnp
stc
push
test
rclb
pop
int
xchg
mov
xor
jl
andl
mov
pop
add
cwtl
cmp
test
mov
and
hlt
bound
dec
notb
lcall
loopne
das
in
sarb
scas
jl
in
test
or
lock
lea
push
mov
sub
mov
rcrl
xor
or
xchg
jne
add
xchg
sbbl
in
xchg
mov
dec
in
mov
in
add
daa
jmp
loop
filds
insl
das
int
xor
lret
out
out
push
jp
push
add
std
fsubrs
cmpsl
fwait
jge
or
lahf
inc
sub
lret
mov
mov
mov
orb
cmp
hlt
inc
aam
test
mov
std
pop
shr
pop
icebp
mov
insl
arpl
insb
faddl
pop
mov
inc
add
mov
mov
cli
lock
sub
add
sub
inc
xchg
cmp
pop
insb
int
int
ret
push
sub
addr16
xor
jnp
pop
gs
push
rcll
jg
popa
mov
and
jne
cmp
movsb
sbb
jle
rcll
and
lock
sbb
mov
shl
insb
scas
xchg
ds
cmp
jge
scas
mov
fisubs
ja
cli
xor
cmpb
adc
rcll
mov
inc
testb
push
mov
dec
or
jp
xchg
test
push
shlb
push
push
out
cwtl
sbb
test
mov
xchg
mov
ljmp
mov
jmp
nop
inc
gs
mov
icebp
dec
lret
push
out
sub
mov
ret
dec
lods
mov
movsl
cmp
jnp
rcl
out
and
add
sbb
stos
test
mov
dec
cli
test
loopne
mov
jno
mov
adc
mov
xchg
jo
mov
and
sub
sbb
xor
cmpl
push
jnp
insl
jns
xchg
ja
dec
mov
aad
stos
hlt
or
out
sahf
stc
xor
inc
xchg
rorb
daa
push
push
pop
and
fadds
xor
lret
jb
inc
inc
inc
inc
sbb
pushf
mov
sbbl
adc
xchg
pushf
pop
scas
leave
jb
add
mov
arpl
xchg
repz
pop
sti
mov
mov
nop
test
inc
sbb
bound
inc
fistpl
xor
out
xor
push
jp
fldcw
sbb
in
jecxz
xor
inc
xchg
int
pop
push
push
push
cwtl
testl
mov
aas
aam
bound
and
in
test
sub
pop
test
push
scas
mov
dec
dec
or
adc
adc
rcl
push
iret
mov
cltd
lods
dec
xchg
dec
inc
mov
mov
dec
cmp
loop
addb
popa
pushf
imulb
lods
pop
orb
test
or
push
cmp
xchg
test
jp
inc
sub
dec
adc
cmp
jmp
dec
mov
ljmp
iret
cmp
dec
popf
pop
inc
mov
mov
data16
frstor
outsb
jmp
loop
mov
andl
jnp
aad
test
out
jecxz
inc
repz
xorl
mov
sar
mov
add
bound
or
cmpsl
mov
adc
gs
aaa
xchg
inc
cmc
pop
sbbb
std
or
or
push
lret
inc
clc
fistpl
in
sbb
insb
xor
xor
cs
punpckhdq
bound
push
in
pop
cmp
in
iret
sub
cmp
das
outsb
and
dec
leave
ss
cmpsb
push
and
mov
pop
aaa
adc
in
xchg
repnz
adc
inc
cmc
les
std
cmp
push
xchg
inc
mov
nop
popa
adc
pop
aad
cmp
cmp
iret
shlb
and
repz
out
jmp
ficoml
lods
mov
ja
lds
ja
repnz
bnd
sub
dec
ret
mull
jne
nop
and
dec
hlt
pop
popa
dec
sahf
aad
cmp
pop
or
jmp
lahf
pop
mov
push
call
iret
bound
aam
sti
cmpsb
andb
mov
mov
mov
push
lods
dec
cmp
pop
jo
adc
movsl
imul
in
loopne
mov
daa
inc
ja
dec
shrb
or
or
xor
and
dec
xor
cmp
jg
cltd
inc
jg
sbb
dec
scas
dec
pushf
pusha
or
cld
inc
inc
aas
pop
icebp
lahf
xchg
movsl
out
fs
pop
jg
mov
inc
mov
rorb
mov
sbbl
jge
mov
in
pop
sbb
dec
lods
lret
push
sahf
enter
pushf
add
sahf
inc
fstpt
rcll
adc
inc
push
lret
je
xchg
mov
int
loopne
adc
ret
inc
pop
fldcw
lcall
out
pop
xchg
jp
mov
in
movsb
dec
pop
jl
mov
cmpsb
adc
xor
push
subb
icebp
sub
mov
enter
sub
cld
insb
je
mov
aaa
js
loop
test
sbb
sub
scas
negb
sub
je
inc
in
pop
fcmove
cmp
ret
pop
push
jnp
push
inc
mov
popa
push
mov
pusha
push
fadds
daa
lds
pop
movsl
fmuls
inc
ret
mov
push
and
push
sti
dec
aad
ror
cli
fsts
hlt
mov
mov
xor
pop
lods
shll
jle
cmc
and
hlt
mov
test
push
andl
jne
xchg
aas
outsb
andb
pop
cmp
aam
xor
aaa
sbb
cmpsl
dec
and
xchg
xor
ret
and
xor
sbb
dec
and
out
dec
leave
aam
xchg
in
xor
dec
or
jb
sub
mov
sub
and
enter
xchg
loop
pop
cmpsb
xchg
fldt
repnz
repz
dec
ja
cmp
mov
cs
add
or
mov
nop
sub
dec
out
mov
daa
and
adc
clc
ds
cmpsb
lods
sub
push
xchg
jle
add
es
push
inc
pusha
or
in
pop
lock
push
sub
pusha
aas
fdivrl
setb
scas
adc
xrelease
push
fsubr
pushf
sbb
outsl
pusha
and
clc
push
pop
jbe
sub
js
lcall
push
testl
xchg
fwait
xor
push
fwait
cltd
aad
pop
lret
sbb
xchg
push
mov
arpl
jnp
pushf
cmpsb
inc
call
mov
ret
mov
notb
shrb
sub
aas
nop
jbe
add
das
sbb
out
int
xchg
lahf
adc
push
lcall
mov
dec
es
fbstp
pop
jno
xorl
clc
andb
sub
xor
out
aas
or
pop
lcall
xchg
xorb
aas
cmc
and
xlat
imul
testb
mov
cmp
push
pop
inc
cmpsl
rorb
mov
cmp
scas
mov
xchg
xchg
jle
add
jl
dec
inc
jo
push
andl
stc
pop
lahf
and
mov
cmp
xor
lds
int
jnp
pmaxsw
popa
mov
pop
pop
xor
jle
lea
sub
jecxz
bound
out
insb
data16
dec
add
loopne
ds
mov
into
jb
mov
xor
push
push
sbb
mov
xchg
lret
data16
out
cmp
adc
push
push
imul
outsl
gs
mov
dec
imul
cmpb
test
xchg
fcmovb
jg
ror
push
aaa
jmp
dec
and
sub
enter
iret
mov
add
sub
add
dec
je
jl
bound
hlt
sbb
add
mov
test
pop
sarl
pop
xchg
and
cs
sbb
adc
sbb
shlb
stos
les
cmpsb
mov
lea
mov
jbe
pop
in
data16
mov
xor
out
or
test
lea
ljmp
cmp
aad
test
js
jns
jno
popf
mov
int
call
mov
jne
call
cwtl
sbb
outsl
nop
pop
aad
or
dec
jle
xor
cwtl
adc
ja
sarb
xor
fwait
adc
lret
adc
jl
je
aaa
xlat
cwtl
icebp
scas
cmp
ficomps
push
sbb
dec
shlb
cmpsb
cmpb
ret
addb
daa
out
xchg
in
testl
sbb
sub
into
std
and
or
lret
std
jae
inc
xchg
cmp
inc
test
dec
ret
aam
iret
ficomps
push
shl
adc
aaa
sbb
mov
push
aaa
sbb
negl
leave
cli
sar
adc
mov
mov
notl
and
dec
or
scas
ret
push
out
or
sub
sahf
mov
sbbb
or
pop
dec
ret
dec
dec
aad
call
stos
mov
pop
lret
jecxz
stos
test
xchg
jo
scas
sbb
adc
xor
int3
fistpll
dec
cmp
mov
push
push
pop
mov
movsb
aas
adc
or
mov
neg
sbb
shll
xor
mov
daa
cmp
xor
sub
cli
xor
sub
fidivs
pop
dec
jg
push
lcall
push
scas
add
push
movl
stos
jb
mov
jl
movsl
jno
mov
icebp
or
add
subb
jge
push
es
jbe
outsb
fldenv
push
jno
or
add
pop
scas
leave
sbb
and
sti
cs
out
out
pop
cmc
jl
pusha
cs
push
cs
push
cmc
aaa
cmp
arpl
int
adc
shl
sahf
or
fisttpll
out
cmpsl
adc
cmp
in
dec
mov
jg
fsubr
xor
ss
xlat
xorl
sub
pop
push
adc
lea
arpl
fisttps
inc
xchg
jbe
xchg
inc
adc
jge
sbb
lahf
xchg
test
mov
in
rcll
pop
daa
leave
and
push
in
mov
loop
out
and
cmp
mov
add
mov
jbe,pn
lahf
xor
test
inc
add
mov
xchg
sub
mov
fs
mov
lea
rol
mov
pop
andb
rcrb
pop
xor
out
cmpsb
jae
and
xor
dec
fists
outsb
xor
fnclex
insb
sarb
sub
xchg
rcrb
ja
or
pop
roll
daa
sub
mov
mov
inc
and
mov
jnp
ja
test
mov
fld
dec
pop
push
push
sbb
jnp
int
stc
lods
test
cmc
xor
insb
mov
flds
mov
sbb
data16
scas
push
cmpsb
cs
mov
adc
xor
mov
insl
push
sbb
push
test
into
inc
mov
sbb
mov
int3
or
ret
dec
cmp
fldenv
sub
pop
mov
inc
xchg
mov
jp
lea
sub
cwtl
push
jl
mov
icebp
sbb
xchg
hlt
push
shll
in
cmp
pop
and
sub
push
int
sub
dec
mov
outsb
lds
test
jnp
push
push
mov
outsl
inc
mov
adc
push
dec
js
xchg
or
adc
ret
push
outsl
imul
loop
mov
add
imul
sub
call
jg
mov
aam
loope
or
inc
mov
insl
and
xor
loopne
pop
ror
inc
pop
icebp
xor
jge
movl
push
clc
cli
scas
das
cmpsl
loopne
add
aad
jl
repnz
mov
mov
pushw
add
stos
cmp
addb
sbb
outsl
mov
ja
dec
pusha
ret
fwait
mov
fnstsw
dec
pop
jbe
lahf
out
and
rorl
jl
jmp
sbb
jecxz
aas
test
sbb
mov
hlt
or
mov
cmpsb
jp
rolb
jp
or
jb
push
fbstp
mov
sub
mov
fadds
arpl
jecxz
mov
mov
mov
lcall
sti
xchg
pop
mov
mov
mov
loopne
clc
test
cwtl
sbb
push
inc
mov
icebp
aaa
psubusb
lods
xchg
push
test
fwait
push
add
mov
cmc
add
mov
dec
enter
add
xor
inc
addr16
cli
pop
ret
test
insl
add
sub
mov
sub
push
sub
ffree
mov
pop
dec
mov
shll
sti
inc
inc
fwait
jb
xor
xchg
jg
jo
int
gs
cmp
jb
inc
sub
dec
pop
inc
dec
jl
cld
es
cmp
in
loope
je
stc
jo
shlb
push
jp
ds
mov
cs
sub
jp
mov
and
adc
pop
sti
scas
jns
cli
test
mov
std
cmpsl
int
imul
rclb
inc
or
outsl
fdivl
push
cld
push
icebp
pop
push
jno
xchg
mov
hlt
cltd
pop
mov
into
pop
mov
jecxz
xchg
add
sbb
inc
addr16
imul
jae
sub
test
push
mov
ss
add
jno
push
out
xchg
lret
es
scas
call
dec
and
jno
sub
shll
jnp
dec
mov
addl
adc
cmc
jmp
dec
stos
add
or
lahf
pop
pop
xchg
xchg
push
imulb
fisubrs
xchg
xor
push
popl
fdivl
stos
bound
cmpsl
mov
fistpll
xor
aas
adc
inc
mov
daa
push
rolb
dec
sti
and
aam
or
out
fcomp
mov
mov
hlt
loope
pop
xor
jle
pop
mov
aaa
dec
push
aam
gs
push
mov
loope
imul
xor
fs
mov
sub
cmp
xor
es
cmp
in
je
ljmp
outsb
and
stos
xchg
xchg
arpl
cmp
insl
ret
lods
adc
adcl
out
sub
out
add
mov
jno
ficompl
cltd
enter
imul
mov
inc
incb
shlb
jbe
xor
ja
dec
imul
push
jmp
mov
cmpsl
ret
add
xchg
leave
dec
test
movsb
and
mov
mov
insl
add
push
sub
rorl
push
ret
nop
rclb
sub
sub
out
loopne
aaa
mov
jecxz
pushf
ret
int
loop
sub
pop
aad
sub
pushf
jg
outsl
xchg
dec
lods
jae
call
fdiv
push
jp
adc
dec
push
mov
jns
inc
stos
lret
cli
jo
repnz
cmp
xor
mov
orl
bound
gs
clc
rclb
sbb
add
mov
inc
iret
shr
adc
xor
and
push
outsb
jecxz
cmp
and
btc
jbe
addr16
imul
jbe,pt
sarb
ja
push
push
and
out
inc
jge
std
incb
xchg
add
rcrb
xchg
adc
testb
mov
and
jle
sbb
sbb
repz
push
mov
push
jge
jne
loopne
or
cmp
add
pusha
xchg
mov
jmp
loop
xchg
push
aad
into
jnp
add
mov
outsb
pop
daa
xor
scas
mov
push
outsl
inc
push
mov
mov
and
test
test
ja
pop
lret
loopne
dec
add
push
pusha
outsl
pusha
shr
js
shr
xchg
xor
jns
ljmp
mov
jp
mov
sti
xor
adc
lods
push
push
xor
lock
add
es
lock
int3
jbe
push
out
jge
movsl
lods
mov
or
sub
xchg
xchg
in
roll
and
scas
xor
cmp
lret
jae
jecxz
xor
push
in
jb
out
jg
dec
mov
pop
andb
into
and
lcall
fs
popa
aam
aam
and
es
mov
in
sub
mov
ficoml
and
inc
or
pop
push
push
pop
pop
std
xor
incb
cmp
xchg
or
mov
sbb
je
insl
ljmp
jle
jae
cmp
mov
sub
in
jmp
int3
out
push
xchg
setnp
mov
pushf
adc
inc
pop
test
mov
mov
gs
imul
xorl
xchg
imul
mov
dec
and
shr
test
pop
inc
mov
sarb
out
les
add
inc
fisubl
sub
mov
jge
clc
inc
in
out
jmp
jo
xchg
jg
xchg
addr16
xor
xchg
inc
decb
int
roll
dec
inc
movsl
sub
or
fsts
sub
mov
inc
sbb
shll
psubq
fstpl
orb
imul
test
lods
mov
sbb
lock
sbb
cli
push
out
pop
pop
xchg
jb
add
adc
cmp
cmp
mov
mov
ret
into
inc
rolb
cmp
outsl
push
sbb
or
mov
and
fnstenv
or
and
adc
cmp
xchg
std
bound
fwait
or
sar
mov
mov
mov
add
or
mov
mov
jmp
push
gs
cwtl
jnp
inc
jns
in
fistpl
nop
and
jp
pop
jp
xor
mov
nop
sbb
inc
lds
inc
push
fwait
fs
lret
mov
dec
push
push
xor
and
repnz
es
pop
cld
std
fistps
int3
int
cs
push
dec
sbb
insb
adc
cli
daa
jb
cld
cmc
mov
push
pop
and
add
mov
outsl
jns
cmp
mov
add
mov
lock
rorl
fldt
dec
in
inc
and
jecxz
lret
pushf
inc
lahf
inc
jge
mov
loopne
sbb
xchg
pop
jns
stc
or
xchg
sbb
out
add
xchg
or
repz
push
add
sub
sbb
sbb
inc
inc
andl
pop
je
jo
xchg
jns
sbbl
mov
push
push
movsl
clc
lcall
and
shlb
test
sbb
inc
cmp
addb
sub
repz
mov
xchg
incb
out
jns
fdivrs
jg
mov
jns
push
lret
pop
jne
fistpl
adc
add
rcr
and
adc
mov
aam
sub
enter
sahf
imul
jb
pop
xchg
fdivrs
mov
or
dec
sub
xor
and
pop
xchg
rclb
sbb
movsl
repz
daa
movsl
jg
cmpsl
shrb
and
test
stos
in
xchg
in
sub
dec
mov
mov
mov
mov
sub
lret
sub
fistps
shlb
jmp
das
sbb
es
nop
cmp
mov
push
or
push
adc
mov
jbe
shrl
fisubs
jp
xor
lret
adc
mov
xchg
sbb
int
mov
lods
stos
popa
loope
push
div
jbe
adc
cli
xchg
pop
movsl
ja
cmpsb
aam
outsl
xor
lods
sbb
jnp
pop
test
or
popf
push
fdivrl
pop
push
sbb
lods
adc
out
idivl
add
imul
movsl
pop
jmp
cmpsl
jge
mov
clc
pushf
shrl
mov
rclb
scas
popa
out
shll
sub
push
push
sbb
stos
cmp
mov
daa
jl
roll
rcll
lods
mov
dec
lret
clc
fnstcw
es
cmpsb
std
into
out
jecxz
ret
test
test
pushl
cmpsl
adc
inc
inc
sbb
sub
arpl
mov
add
test
or
or
ljmp
or
inc
dec
int
mov
inc
clc
fidivrs
mov
rorb
inc
into
xor
sbb
xchg
pop
fistps
adc
xchg
and
and
cmp
movsl
xchg
ret
cltd
pusha
out
scas
mov
adc
in
jns
mov
or
mov
jmp
mov
mov
xchg
xor
pushf
ljmp
loopne
pushl
daa
mov
sbb
jle
testb
out
lea
xor
dec
hlt
push
dec
inc
repnz
lret
imul
in
dec
daa
fisttpll
inc
xor
push
xchg
shlb
push
cltd
jp
jp
lret
ret
sahf
mov
lcall
push
dec
xchg
insl
dec
cmc
ljmp
ja
js
int3
lret
divl
clc
loop
pop
cmp
sbb
inc
outsb
leave
mov
mov
cli
ret
xchg
gs
jge
xorl
shlb
adc
sahf
dec
mov
push
mov
mov
mov
add
jno
shll
std
pop
in
rcl
test
leave
xchg
inc
push
test
dec
lods
mov
outsl
jno
and
inc
jle
mov
push
jo
mov
jge
push
lods
sub
push
xor
ret
mov
out
mov
out
and
repnz
pop
out
pushf
mov
fidivrl
sbb
add
mov
stos
push
mov
xor
jmp
js
inc
shlb
xor
cmp
inc
fldcw
es
inc
stos
es
jns
repnz
fbstp
pop
fwait
mull
pop
test
call
inc
insb
cmpsb
xor
push
mov
inc
andb
xchg
es
inc
jbe
jmp
sbb
cmpsl
shl
jns
add
jg
test
in
cmp
pop
in
in
sarb
mov
sbb
mov
fs
leave
out
xchg
mov
shlb
add
mov
xor
fdiv
jae
or
ficoms
jb
dec
push
jbe
cwtl
lahf
add
adc
jnp
pop
lret
dec
faddl
das
lds
mov
pop
or
mov
jmp
xchg
pop
outsb
jo
add
inc
jge
dec
add
sub
iret
xchg
jecxz
jo
mov
dec
and
shrl
or
jg
push
in
scas
nop
pop
and
out
pop
adc
sub
addr16
push
test
inc
outsl
jge
and
mov
mov
stos
jge
stc
inc
icebp
push
jmp
push
add
subl
mov
push
jno
add
sbbl
in
cs
and
mov
mov
test
inc
out
cltd
add
cmpsl
cli
push
jl
adc
push
call
sub
addr16
test
mov
add
push
dec
mov
lds
pop
add
scas
int3
stc
dec
push
jno
in
lcall
xchg
imull
cmp
adc
adc
fstl
pop
push
popf
sbb
xor
mov
bound
fidivrl
xchg
jnp
int3
pop
test
inc
sbb
test
xchg
or
sti
loopne
or
inc
push
ret
xor
mov
xor
inc
bound
fwait
cmp
jg
push
fsubrl
scas
stos
imul
test
sbb
mov
icebp
xchg
in
addr16
jl
push
out
xlat
negl
and
dec
jp
pop
add
xchg
testb
jl
inc
dec
lahf
repz
xchg
nop
cltd
lods
cmp
push
fwait
xchg
and
and
int3
int3
imul
out
lods
push
cmp
push
out
xor
lods
negb
push
nop
dec
arpl
jo
cmp
cmp
test
scas
xchg
sti
push
sahf
cmp
repz
fisttpll
adc
in
push
and
repz
push
out
pop
adc
test
loope
mov
aam
push
out
push
xor
sti
xchg
xchg
jp
xor
lret
inc
xor
test
int3
push
shll
xor
lds
sub
pop
icebp
jno
dec
in
out
jp
mov
test
stc
pushf
call
lods
lret
sbb
mov
fmuls
push
add
push
in
pop
pushf
xchg
inc
fdiv
push
ds
imul
enter
pop
inc
jg
std
mov
xor
add
inc
mov
sbb
pop
cltd
lock
xchg
jns
not
push
jmp
jno
je
imul
xchg
xchg
addr16
mov
mov
sbb
mov
add
andl
sub
in
xchg
loope
js
lock
inc
mov
jecxz
vmovd
and
je
cmp
fwait
es
xor
in
or
insb
and
dec
sbb
inc
loop
jne
nop
jecxz
fimuls
jl
inc
test
inc
inc
pop
inc
inc
xchg
push
dec
into
and
insl
ja
mov
jae
mov
imul
cmp
or
outsl
pop
pop
fstpt
xlat
lahf
jg
xchg
push
popa
jle
adc
or
xchg
flds
sub
mov
test
add
cmp
mov
mov
js
mov
mov
aad
loop
xchg
cmc
cwtl
in
shll
and
mov
ljmp
rorl
clc
fistl
fists
add
testb
cwtl
sbb
dec
xchg
ret
mov
popf
mov
movsb
push
and
ss
divl
std
push
stc
dec
repz
shrb
mov
lcall
and
xor
pop
mov
inc
ss
inc
fwait
pop
pop
repz
push
sub
divl
pusha
ljmp
test
call
fwait
cmc
xor
shlb
arpl
movl
mov
mov
push
xlat
sub
push
push
and
pop
add
lret
add
repnz
test
add
xor
out
fnstcw
loope
rolb
leave
ljmp
ds
cmp
mov
xchg
push
xchg
stc
inc
mov
add
jecxz
sar
mov
push
andl
pop
rorl
mov
mov
ret
or
js
mov
xor
fwait
repnz
adc
cmp
popa
test
jno
test
ds
cld
jbe
push
inc
xchg
push
movsl
mov
ret
mov
dec
xor
loop
loope
in
stos
nop
es
aam
mov
mov
negl
outsb
aad
or
or
adc
scas
movsb
lret
pusha
jns
mov
add
push
int3
sub
ja
cmp
sbb
xchg
fmul
mov
fcoms
mov
test
outsl
lret
movsl
xor
imul
js
add
ret
insl
test
push
pop
adc
dec
mov
dec
and
mov
hlt
xchg
imul
into
call
loope
jo
dec
mov
push
xor
xchg
movsl
mov
mov
push
xor
imul
pop
and
or
out
rcl
in
add
ficomps
cmp
les
cmp
repz
repnz
stos
add
jbe
mov
inc
test
js
je
data16
cli
xor
dec
sub
inc
scas
out
popa
jp
and
cltd
xchg
mov
adc
or
xchg
mov
pushf
xlat
or
dec
cld
mov
inc
jo
cmp
mov
sahf
sbb
movsb
movsl
jp
lock
mov
fmull
mov
out
cs
adc
push
test
pop
int
push
iret
sti
or
inc
insl
cmc
xor
mov
pop
movsb
jne
pop
imul
sub
push
ret
out
inc
jo
mov
mov
or
xor
imul
aad
pop
mov
test
pushf
idivl
sbbb
test
xchg
sub
xchg
mov
mov
test
dec
scas
pop
jbe
or
in
fbld
add
inc
ja
es
xchg
fcompl
iret
push
and
or
push
scas
jg
xor
xchg
mov
add
sbb
stc
mov
sahf
cmp
inc
clc
xchg
xor
test
scas
dec
fsubrl
and
push
cmp
mov
shll
adc
leave
lcall
pop
dec
push
jo
rclb
mov
sbb
fs
addr16
push
js
cs
or
adc
push
out
xchg
insl
jge
les
mov
mov
sbb
jno
sbb
imul
add
sbb
pop
lahf
fnstcw
push
mov
loope
push
adc
mov
loopne
push
jg
mov
xchg
push
mov
sub
decl
fimull
adc
icebp
test
xchg
mov
adc
push
add
inc
jmp
xchg
push
cltd
jmp
cmp
pop
jl
enter
jmp
outsl
stc
pop
mov
dec
xchg
jg
jnp
and
inc
sahf
cltd
cmp
daa
cli
sub
jns
sbb
and
pop
fbstp
add
adc
out
jnp
shl
das
fwait
cmp
mov
mov
mov
fstpt
fimuls
mov
adc
scas
aad
sub
iret
cmp
call
test
add
mov
xor
fadds
mov
roll
sub
test
pop
pop
out
dec
lds
jmp
loope
and
mov
test
mov
dec
inc
xchg
xchg
ss
add
sub
pushf
pop
aam
popf
jnp
loopne,pt
and
nop
pop
jne
and
inc
cwtl
inc
xor
cvtdq2ps
dec
jo
mov
cmpsb
push
lods
mov
nop
loop
sbb
mov
dec
clc
in
sub
sti
cld
or
call
addb
scas
mov
xchg
mov
loope
adc
inc
adc
mov
mov
fs
inc
inc
test
or
mov
mov
sbb
outsl
lea
stos
sbb
inc
out
test
xchg
jne
in
xchg
jmp
xchg
outsl
xchg
jo
inc
mulb
mov
add
clc
popa
or
rorl
sub
xchg
mov
and
push
cmp
inc
pop
cmc
flds
aas
lret
ret
jnp
insl
inc
sbb
out
adc
pop
cmp
xor
mov
hlt
mov
push
and
pusha
dec
andb
push
or
xchg
and
or
pop
les
orl
jle
mov
jbe
xlat
xor
data16
mov
ja
push
mov
inc
ja
pop
inc
cmp
adcb
notb
ret
fwait
inc
and
aam
ret
sahf
into
sbb
xchg
and
or
sub
mov
pushf
leave
data16
add
push
mov
fdivs
iret
mov
pushf
pop
jne
and
jle
xchg
push
inc
cli
sub
xchg
pop
or
pop
jge
mov
xchg
jbe
add
in
aas
or
pop
adc
fxch
outsb
inc
mov
or
icebp
inc
inc
adc
loopne
fwait
mov
sub
sub
popf
pop
add
ja
push
mov
aaa
mov
lds
fwait
pop
push
out
jle
inc
ret
imul
shr
outsb
mov
mov
ret
jge
stos
adc
pop
sbb
pop
gs
ret
mov
or
jno
add
movsl
aad
ss
or
mov
out
in
lods
push
push
int
icebp
adc
in
mov
inc
fmull
loop
bound
insl
and
sbb
push
lds
stos
dec
mov
jne
mov
xchg
jnp
addl
cs
cs
sub
adc
xchg
lahf
nop
lods
inc
fisttpll
mov
test
jae
dec
aaa
fucomp
dec
inc
or
or
or
cld
addr16
adc
jp
sbb
adc
pushf
jecxz
sub
or
nop
pushf
xchg
cli
clc
aam
adc
test
push
rcl
inc
pop
lds
repnz
jnp
pop
out
pop
out
pop
sub
sahf
push
decl
push
stos
mov
stos
push
icebp
mov
icebp
hlt
or
imul
data16
cmpsl
jecxz
shll
bound
pop
in
xor
andl
insl
subb
stc
add
cmp
enter
cwtl
jne
stos
int
push
popa
js
loopne
mov
leave
je
pop
jae
adc
rcrl
dec
or
ja
ds
mov
or
dec
lahf
outsl
inc
out
cmp
add
mov
xor
mov
add
bnd
and
repnz
jecxz
repnz
fcmovne
cmpsb
das
cmpsb
in
call
xchg
lcall
pop
jg
jne
cli
cltd
inc
adc
outsb
jge
inc
daa
xchg
shlb
shrl
in
test
xchg
shlb
xor
cwtl
aad
sbb
ret
cmpsb
mov
cwtl
xor
sahf
dec
ds
div
xchg
push
cs
adc
cmp
xor
and
stos
ret
cmp
cmpsl
rclb
leave
push
cmp
xchg
int
dec
fcmovu
sbb
inc
jg
xlat
sbb
push
outsl
pushf
sub
pop
pop
mov
rcr
mov
es
loopne
rorb
fists
gs
adcb
and
jge
mov
pop
lcall
mov
mov
sub
fdivp
jp
les
adc
in
in
pusha
pop
inc
lods
imul
cmpl
inc
sub
roll
xor
lret
and
es
imul
xchg
ljmp
cli
mov
jmp
out
pop
addr16
push
mov
es
push
daa
mov
mov
cmp
jb
je
icebp
xchg
movsl
clc
aas
push
sbbl
add
push
je
pop
push
or
and
jge
icebp
lds
mov
sub
and
mov
es
int
xor
test
cmpsb
xor
adc
add
out
call
mov
pop
fimuls
and
lock
test
jbe
adc
push
cli
in
rcrb
ficoml
push
adc
das
mov
xor
insl
sub
cmpsb
mov
ficompl
jmp
mov
addr16
je
shll
inc
mov
xor
sarb
sub
inc
dec
cmp
jnp
stos
sahf
test
xchg
push
rcr
sbb
aam
inc
ret
sub
pop
gs
mov
hlt
push
add
outsl
push
aam
mov
push
or
in
xor
jae
lds
add
push
dec
insb
imull
es
pop
insl
enter
ret
mov
sti
aad
push
jae
test
cmp
outsb
les
lea
or
icebp
push
lods
pop
iret
cmp
push
jae
insl
fcomps
cwtl
jl
jne
mov
mov
inc
dec
test
mov
push
cmp
xchg
leave
xchg
bound
data16
jno
popf
push
aad
adc
icebp
mov
pusha
insb
or
sbb
push
repnz
test
adc
into
jecxz
ja
mov
push
inc
add
in
mov
mov
mov
push
lcall
mov
daa
shr
mov
pop
mov
roll
and
movsb
mov
and
icebp
cmp
adc
outsl
xor
mov
cmp
mov
mov
fs
aad
lods
mov
mov
jno
aad
test
jmp
out
jle
push
xchg
pop
leave
inc
lods
push
and
inc
jb
mov
mov
add
inc
pop
ss
rol
rcl
pusha
and
lods
into
dec
jns
addr16
push
fistps
sub
or
mov
mov
imul
mov
mov
nop
sub
add
or
mov
cmp
add
notl
pop
lods
shrl
cmp
ret
sbb
vxorps
ss
lods
es
inc
inc
lea
test
cmp
mov
jecxz
adcb
aaa
dec
ret
repnz
or
test
inc
insb
dec
test
pop
aad
mov
cld
in
xor
insb
mov
andl
sbb
xchg
out
fwait
inc
stos
inc
fcomps
flds
sahf
ljmp
filds
iret
sub
push
icebp
jg
and
push
out
leave
cmp
pusha
cmp
mov
movsb
adc
dec
sbb
fistps
push
xlat
and
mov
inc
fistl
iret
fwait
mov
inc
ja
cmpsl
insl
movsl
push
pop
out
lods
mov
mov
xchg
push
xor
clc
xor
inc
mov
jmp
push
push
dec
adc
fadd
or
cmc
sti
inc
popf
hlt
rcrb
dec
adc
add
cmp
inc
adc
cmpsl
cli
rorl
fidivrl
enter
or
or
mov
repz
pop
test
gs
push
outsl
cld
dec
lahf
ja
sub
add
dec
cs
mov
push
cmpsb
mov
push
ljmp
in
enter
xchg
shlb
cmp
or
aaa
ja
xchg
ret
pop
stos
inc
or
jl
cmpsb
xor
cltd
sahf
cwtl
xor
das
movsl
cmp
cmc
xchg
push
stc
xlat
jmp
jg
push
cmpsb
cmp
jns
ljmp
pop
dec
movsl
mov
jae
add
dec
push
hlt
call
mov
add
pusha
dec
inc
adc
pop
ss
rcrl
jno
or
adc
and
pop
jo
mov
movsl
in
inc
mov
xchg
dec
leave
out
pop
adc
pusha
push
pop
pop
dec
xor
mov
xor
adc
arpl
xchg
xor
xor
jne
aas
aas
jmp
xchg
loope
xlat
jecxz
mov
push
daa
adc
shl
pop
inc
fcomps
push
pop
or
mov
push
inc
pop
ds
ljmp
adcl
not
out
sbb
cld
aam
xor
jle
imul
pop
sbb
or
jl
in
rol
test
push
cli
dec
and
scas
inc
adc
or
iret
call
sub
inc
lods
mul
roll
inc
call
ficompl
lcall
sbb
sbb
aas
je
testb
mov
or
bound
or
jmp
push
push
cmpl
lods
mov
mov
std
mov
fbstp
xor
jns
push
roll
cs
push
arpl
lock
je
jae
push
pop
push
and
sbbb
mov
les
loop
outsl
cli
adc
lock
in
arpl
out
and
out
mov
push
push
cmp
xor
stc
loop
aas
loopne
ret
sub
mov
data16
daa
push
inc
les
imul
mov
and
ja
sub
sbb
int
es
js
dec
inc
stos
fdivs
dec
lock
push
out
addr16
data16
insb
adc
cli
push
aam
or
aad
inc
mov
in
leave
push
xor
xor
js
rcrb
mov
cmpsl
int3
cmc
pop
loope
stos
and
jl
jb
cmpsb
sbb
fs
xchg
nop
xchg
adcb
outsl
testl
ret
ljmp
mov
jb
xor
dec
cltd
cmpsb
ja
inc
ds
sbb
xlat
mov
test
cmp
or
scas
mov
push
std
jne
or
mov
ret
aam
jl
loopne
lods
xchg
xchg
sbb
fwait
movsl
xchg
sbb
and
sahf
subl
add
jge
std
aam
cmp
dec
in
mov
push
rcrl
inc
mov
mov
xor
addr16
fidivrl
loopne
fcomps
aad
adc
jecxz
xlat
imul
pop
je
jp
leave
lea
add
lea
rclb
sub
pop
rolb
enter
push
sbb
xorl
movsl
inc
jbe
insb
outsl
loopne
bound
sbb
adcl
clc
and
iret
mov
shr
lods
or
mov
adc
imul
fstpl
sub
popa
fisttpll
mov
sub
dec
dec
mov
shl
mov
sub
sbb
clc
loope
push
mov
andb
popf
movsb
cwtl
mov
mov
sbb
daa
jns
mov
pop
adc
mov
das
shll
jecxz
cld
and
call
adc
xchg
pop
mov
or
lds
pop
movb
jmp
jb
adc
sbb
inc
inc
pushf
in
mov
loop
out
jns
xlat
pop
test
adc
test
pop
lods
frstor
add
lods
test
add
shrl
cvtdq2ps
mov
call
sahf
mov
cmp
inc
jo
pop
loopne
xchg
aas
mov
shrb
mov
lock
rcl
in
xlat
addr16
mov
push
jmp
xchg
rorl
mov
fmull
pop
loope
dec
mov
fmull
push
into
pop
adc
dec
pop
jl
js
xchg
pop
jne
adc
js
add
mov
and
cltd
rolb
inc
jb
and
mov
xorl
leave
lret
mov
mov
add
xlat
imul
addr16
aas
cld
cli
mov
hlt
enter
rcrl
xor
int
pop
rorb
repnz
mov
lea
and
out
sarl
test
adc
add
nop
pop
pop
sub
cli
mov
inc
or
dec
aas
stos
or
jae
or
leave
data16
js
sub
add
enter
add
in
adc
inc
push
in
mov
fwait
mov
dec
jbe
adc
mov
inc
scas
mov
jl
pop
jge
aas
and
pop
pop
lret
mov
xchg
addl
aad
das
cli
clts
sbb
xchg
and
popa
cmp
push
in
push
adc
jmp
cmp
jl
xchg
jecxz
jo
mov
jne
push
dec
push
pop
and
fsubl
jb
and
gs
mov
adc
imul
lods
fldl
jb
cmc
mov
cwtl
cltd
in
inc
scas
push
pop
pop
test
jae
push
lcall
cmp
ljmpw
leave
and
pushf
mov
xchg
test
xor
xlat
jle
jp
rcr
insl
sti
leave
ljmp
mov
decb
shrb
push
add
imul
shl
sbb
fists
dec
je
fdivr
lock
call
fsub
into
jp
mov
dec
jmp
adc
aam
insb
sbb
jl
out
pop
lods
popa
rcrl
lds
fs
pop
sbb
cmp
xchg
call
mov
mov
aaa
int
pop
push
test
mov
and
imul
push
and
cmp
lods
pop
pop
in
mov
jne
aaa
les
cmp
sahf
jl
loopne
lds
xchg
mov
loop
add
cmp
cmp
cmpl
cmp
add
bound
leave
xor
xor
xchg
mov
cli
sub
lds
pusha
shrl
or
in
adc
xlat
push
rcrl
sub
loope
sub
outsb
cmpsb
sbb
insl
negl
inc
outsl
in
or
gs
sahf
or
hlt
aas
xchg
mov
mov
push
sub
jnp
xchg
or
mov
roll
dec
sbb
insb
in
pop
xlat
aas
adc
imull
push
loop
and
jb
lcall
jb
push
xchg
push
or
cmpsl
sub
xchg
or
imul
out
jae
mov
dec
cli
es
jbe
xor
mov
int3
jae
adc
sub
inc
sbbl
push
or
loope
fsts
xchg
xor
test
insb
mov
and
out
sbb
lods
lret
aaa
aad
daa
clc
xor
stos
das
push
adc
loop
push
mov
jo
mov
pop
fistps
rcrb
dec
outsl
adc
out
dec
test
or
sbb
push
stos
cmpsb
push
or
cmc
subb
std
daa
inc
imulb
dec
mov
sbb
imul
jle
add
sbb
sub
insl
cltd
popl
xchg
out
fsubr
pushf
push
inc
lock
stos
leave
or
aad
lret
lret
mov
fimull
jl
orl
xchg
cmpl
adc
in
loopne
xchg
xlat
aas
loopne
pop
jbe
mov
imulb
or
xor
cwtl
dec
adc
and
fdivrs
insb
or
loop
cli
push
or
or
gs
sti
pushf
cmc
int3
lods
sti
mov
jmp
ss
inc
cmp
ret
sub
or
dec
std
mov
xor
loop
sub
cltd
adc
pop
hlt
lret
adc
mov
or
add
outsl
xchg
mov
fiaddl
into
and
adc
pop
xor
aas
mov
test
pusha
pop
nop
jne
jge
sbb
mov
les
je
loopne
pusha
mov
xor
lock
mov
add
test
xchg
sbb
xchg
add
sbb
cmp
xor
rcrb
xor
in
lret
ret
in
fnsave
mov
xchg
cmp
icebp
mov
andl
push
imul
jge
inc
insb
lcall
mov
loope
mov
nop
pop
push
xchg
dec
push
sub
inc
and
jns
push
int3
popa
sbb
enter
je
and
test
std
cmpsl
ficomps
cmp
jno
inc
in
fld
xor
aas
ljmp
sti
and
mov
mov
loopne
cmp
loop
pop
fwait
xlat
in
mov
rcrb
jmp
fisttpll
mov
pop
popf
mov
lret
js
daa
adc
jb,pn
ljmp
xor
cltd
lret
std
addb
pusha
sbb
xor
sub
addr16
adc
loopne
fisttps
push
sahf
cmp
fucomi
fcoms
and
inc
sub
les
fcmovnu
xchg
daa
fs
jg
insl
jo
sbb
sub
xchg
fcomps
xchg
push
in
fs
fstps
std
push
add
cmp
mov
dec
lret
mov
in
dec
out
mov
adc
adc
adc
aad
mov
xchg
fmul
and
mov
and
pop
jp
in
jecxz
sti
andl
mov
cltd
adc
mov
ljmp
dec
leave
cmp
push
es
jg
sbb
aad
sub
jle
insb
mov
insb
loopne
pop
sub
inc
adc
cmp
and
jle
pusha
pop
push
jecxz
cmp
inc
fbstp
lret
cmpsb
lods
out
dec
or
jg
shll
cmc
daa
jo
cmpsb
adc
daa
fcmovnbe
adc
xchg
adc
jbe
icebp
xchg
enter
pop
cmp
movsl
mov
daa
test
mov
adc
and
int
clc
sti
test
rorl
jecxz
push
pop
arpl
aas
into
mov
clc
add
fldcw
xor
fldl
rolb
sbb
sub
arpl
push
aas
or
pop
cmp
popf
jne
jle
mov
loopne
mov
push
ljmp
mov
xor
cmp
in
test
cmp
cmp
push
xor
push
mov
pushf
es
out
dec
xchg
add
push
dec
cmpsl
mov
inc
jnp
inc
clc
lock
or
call
addr16
movsb
lret
mov
pop
repnz
sbb
mov
popa
mov
add
push
adc
cmp
mov
sub
popa
mov
mov
repnz
shl
movsb
pop
jl
ljmp
adc
sub
add
addr16
test
inc
xchg
subl
mov
cmp
pop
in
rcrl
dec
pushf
int3
mov
out
enter
xrelease
push
xchg
ja
scas
in
ja
pusha
push
mov
lea
xor
push
inc
push
cmp
push
sar
adc
hlt
ret
popa
rcrl
loope
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
insb
loopne
jmp
mov
mov
jge
pop
jp
sbb
lahf
scas
xor
pop
xchg
scas
ret
into
mov
ljmp
dec
dec
ror
mov
cmc
lock
fldenv
sub
cmp
dec
adc
inc
repz
lock
cltd
xchg
inc
sbb
xor
add
inc
jl
repnz
dec
mov
loop
mov
cmp
decb
out
jbe
xorb
xchg
das
ret
je
in
push
and
mov
in
xchg
lods
movsb
push
in
ret
lods
or
cmp
dec
add
dec
jl
cmp
js
adc
pop
bound
jle
cmpsb
adc
sarl
mov
sbb
outsl
cld
add
or
scas
push
xchg
xorb
out
mov
sbb
ret
fstpl
ret
mov
inc
cmp
ja
mov
sahf
stc
dec
pop
fwait
movsl
xchg
rolb
mov
hlt
mov
popa
inc
xor
mov
test
xlat
popf
jmp
sbb
mov
in
repnz
inc
add
jbe
in
add
pop
mov
mov
dec
pusha
lods
inc
inc
out
js
push
je
outsl
mov
in
push
adc
add
adc
jns
lock
mov
enter
pop
imul
aaa
fdivr
inc
and
bound
lock
dec
rolb
lcall
dec
xor
mov
int
test
jb
testl
clc
mov
push
pop
adc
inc
inc
sub
popa
or
push
pop
rolb
jmp
push
pop
adc
or
or
ds
push
dec
mov
sub
movsl
pop
icebp
std
mov
nop
scas
jmp
push
aad
shr
pop
pop
js
rol
outsw
mov
lahf
adc
lahf
data16
in
sub
jle
movsb
sbb
lods
pop
jne
ficoms
inc
sub
jg
fidivrl
sbb
dec
lret
jg
sub
sub
icebp
inc
cltd
clc
lea
mov
lods
stos
inc
andl
xor
sti
push
jbe
push
jb
sbb
xchg
inc
cwtl
xchg
jae
pushf
stos
sbb
mov
mov
fs
outsb
sbb
jmp
and
stos
lret
xor
fiaddl
std
push
xchg
loope
movsb
idivl
add
dec
or
push
rorl
xchg
and
loop
jae
gs
pop
flds
ds
mov
jne
out
lock
sti
lcall
rcl
ret
cmp
dec
stc
jnp
adc
imul
mov
add
fisubl
lods
iret
xchg
movsb
sbb
into
inc
xlat
cwtl
dec
cmp
xchg
sub
xchg
pusha
mov
jb
mov
mov
enter
sub
or
divl
call
std
lahf
adc
nop
leave
push
push
cmpsb
rcrb
pop
cmc
popa
xor
ret
lods
popf
iret
xor
inc
inc
xchg
pop
push
pop
cmp
push
mov
push
outsl
jne
imul
leave
sbb
push
repz
mov
sti
leave
jle
int
sub
cmp
sarb
cmp
push
mov
ljmp
out
aad
xchg
repnz
add
loop
mov
mov
outsb
sbbl
mov
test
out
adc
push
mov
sub
es
jnp
das
test
lods
mov
test
lret
loopne
and
lret
mov
sahf
xchg
lcall
sahf
ror
mov
add
test
mov
aas
fs
dec
xchg
dec
mov
sub
mov
shlb
movsl
mov
lret
inc
test
or
in
test
pusha
mov
in
repz
loop
sarb
pop
ljmp
pushl
mov
int
adc
std
mov
mov
std
js
push
rclb
das
loop
lea
fcomps
dec
dec
push
test
jne
loop
fcmovbe
xor
sbb
mov
mov
sti
jb
clc
push
xchg
mov
mov
push
adc
dec
mov
sub
mov
mov
and
dec
pop
lahf
fisttpl
pop
rorl
mov
lods
repz
lret
daa
cmp
scas
or
dec
prefetchwt1
or
ret
test
sbb
fisubl
pop
xor
jmp
addr16
mov
push
mull
push
aam
sub
inc
fstpl
pop
xchg
lods
stc
xor
fildl
adc
push
mov
std
ljmp
cmpsl
std
enter
xchg
dec
into
fwait
repz
push
cmp
test
cmpsl
sub
out
xor
cmp
mov
dec
sub
inc
xor
rolb
inc
movsb
xchg
cwtl
pop
je
mov
lret
add
mov
jle
inc
movsl
mov
push
push
cmp
sub
xchg
les
mov
xchg
xchg
sbb
fidivrs
or
jnp
pop
int3
movsb
icebp
das
sbb
mov
aad
mov
mov
xchg
or
sahf
mov
sbb
add
xchg
cld
test
in
pop
rep
mov
cmp
int3
pop
rcrb
or
mov
xchg
out
jno
cmpsb
pop
dec
add
lgdtl
add
cmpsb
adc
jb
push
leave
mov
mov
jns
test
fcomps
mov
ss
jnp
inc
mov
and
outsl
sti
insl
leave
in
cltd
mulb
jl
jae
int
add
mov
push
clc
inc
insl
adc
sti
in
repz
xchg
insb
int
dec
and
or
inc
fs
addl
push
fadd
subb
jno
ret
loopne
adc
loop
js
les
mov
xchg
mov
aaa
cwtl
sub
push
push
mov
js
sub
sarb
sub
das
mov
mov
sti
mov
and
and
cli
sub
adc
scas
test
test
movsl
test
dec
mov
pop
in
std
test
clc
fldl
mov
outsb
and
insb
sbb
sarl
dec
pop
sub
outsl
inc
cmp
cmp
ftst
popf
add
mov
bound
test
arpl
arpl
push
jl
sbb
adcl
movsb
fcmovnbe
out
pop
push
pop
sbb
loopne
je
ds
insl
in
scas
and
ret
pop
push
jns
add
and
ss
js
jg
add
arpl
dec
out
and
cmp
jne
dec
rorl
out
push
dec
adc
outsl
push
jo
enter
bound
adc
icebp
inc
jae
cmc
enter
mov
push
xchg
scas
lods
add
sbb
fadd
int3
push
rorl
dec
mov
lds
shlb
bswap
pop
adc
and
push
data16
leave
int
aaa
lret
cld
movsl
xor
jl
pop
sub
xchg
es
adc
mov
jb
dec
sbb
mov
jg
rcll
or
inc
mov
testl
or
pop
push
nop
inc
stc
xchg
mov
mov
cmc
push
cmp
sarb
and
and
mov
aaa
fisttpl
je
jmp
or
lea
iret
xor
lahf
test
lret
xchg
fistl
mov
jl
add
jmp
pusha
rorb
add
inc
xchg
jge
mov
pop
outsl
inc
jmp
js
dec
popl
dec
in
gs
outsl
movsl
cs
leave
fsts
aam
dec
scas
enter
subb
fiadds
adc
adc
andl
test
jns
dec
stos
xchg
lods
adc
sbb
notb
hlt
lret
mov
xchg
orl
sbb
lock
or
add
sbb
xor
dec
add
popa
outsl
jno
gs
cmpsl
dec
les
xchg
inc
jb
stos
addl
ja
xchg
rcrl
aam
mov
push
das
jo
dec
mov
push
loope
add
cmpsb
mov
cmpb
cmp
jns
scas
dec
lds
push
mov
scas
cmp
pusha
inc
je
mov
loop
adc
aaa
ds
mov
fildll
dec
fadds
add
insb
push
rcr
add
lods
or
insb
dec
cwtd
cwtl
daa
adc
or
int3
sbb
lahf
jp
jne
sub
jmp
mov
and
push
dec
js
sahf
cltd
inc
push
cmp
in
jge
cmc
stos
fildl
bound
rcll
jnp
cmp
push
pop
adc
push
mov
inc
cmp
dec
dec
sub
sub
das
lret
lret
mov
fwait
gs
in
aaa
ror
rolb
js
sub
insl
rorl
jno
lret
fwait
mov
xchg
test
ret
mov
or
inc
mov
into
cmp
push
or
mov
in
lret
inc
clc
scas
mov
movsb
sbb
push
push
outsl
sub
in
mov
jo
callw
xchg
sbb
add
jbe
sbb
xor
xchg
jle
or
ds
lret
test
push
shll
adc
aam
jnp
pop
lahf
mov
ds
pop
cmp
push
daa
push
fsubrl
add
mov
jl,pn
bound
lds
jmp
adc
sbb
pop
int3
jg
repnz
push
icebp
js
mov
pop
and
out
repz
cmp
test
mov
mov
pop
inc
ret
xor
push
jb
nop
das
shll
addr16
mov
pop
add
mov
mov
popa
push
mov
xor
test
mov
adc
sti
lcall
push
jae
add
or
scas
add
jmp
adc
orb
mov
rclb
test
js
mov
js
es
sbb
pop
jecxz
int
stos
inc
sub
jmp
jmp
repnz
aam
xor
or
addr16
xchg
in
cmp
dec
jae
stos
jecxz
sub
popa
ja
mov
xor
jle
cmp
out
push
dec
int
push
pop
inc
mov
mov
sbb
pop
aad
jne
inc
movsb
jo
and
bound
fisubrl
pop
sbbb
rolb
jmp
std
jg
cmp
hlt
dec
rclb
jne
xchg
push
and
int3
loop
adc
or
xchg
mov
jg
bound
dec
xchg
test
fs
loop
std
pop
es
pushf
stos
idivl
cmp
or
mov
sbb
mov
jae
or
sub
mov
sub
mov
jp
pop
jns
and
loope
rorb
xor
inc
gs
push
jp
lods
or
int
imul
sub
adc
test
sub
fcoml
out
and
jnp
inc
xor
push
stos
jecxz
dec
loope
xor
push
mov
arpl
imul
and
inc
push
mov
stos
stos
fs
mov
dec
lea
push
inc
iret
jne
or
inc
adc
ja
scas
fs
adc
sub
push
popf
sub
daa
dec
sti
push
stos
rcl
cmp
mov
daa
leave
pop
shlb
mov
out
outsl
sbb
negb
dec
mov
adc
pusha
xchg
mov
jno
fwait
leave
sahf
xorl
mov
inc
pop
add
test
mov
ss
test
add
dec
add
pop
arpl
sub
xor
cmp
stos
mov
aas
add
ret
ljmp
out
sbb
push
add
scas
roll
jp
pop
sahf
in
arpl
sub
xor
inc
dec
or
scas
mov
pop
and
cmpsl
mov
test
stc
mov
jae
testl
cmpsl
pop
into
jmp
cmp
cmp
xchg
addr16
add
repnz
mov
inc
or
mov
jl
mov
pushf
push
add
lods
mov
jle
in
and
sub
jae
hlt
dec
ret
mov
and
sbbl
test
lcall
and
push
mov
addl
cmpsl
mov
in
ljmp
cmpsb
pushf
sbb
adc
in
inc
stc
lods
xchg
sbb
mov
mov
cmp
fs
xor
stc
push
xor
jb
xchg
lods
arpl
nop
dec
mov
pop
jae
iret
testb
inc
imul
cmp
out
fsubrs
ret
testb
sti
sbb
add
ds
push
ret
inc
and
pop
insb
call
jge
xchg
ret
fwait
cltd
adc
adc
sbb
subb
sarl
xchg
nop
in
outsb
xorl
dec
or
test
icebp
push
pop
add
movb
and
add
inc
and
mov
insb
stc
fstpt
cmp
stc
xor
push
sub
or
jns
out
lret
andl
lahf
aas
sbb
test
or
pop
out
out
cmp
lret
xor
es
adc
fcomps
je
das
rcll
push
add
sub
xor
push
inc
gs
xchg
popa
pusha
shlb
inc
test
adc
fcompp
lods
fldt
pcmpgtb
mov
jne
mov
ja
push
cmp
aam
fnstsw
fs
push
or
jg
push
icebp
sarb
lea
sti
or
adc
push
sbb
add
push
adc
xor
push
out
out
shrb
cmp
les
inc
sub
andl
pop
aaa
movsl
insl
jmp
inc
push
out
ret
and
fstl
enter
popa
push
cltd
sbb
mov
div
cmp
xlat
mov
rcll
sbb
mov
push
xchg
daa
mov
xchg
aad
sub
xor
or
jne
xor
sbb
test
fidivl
or
aaa
pop
aam
mov
jp
jg
cmpsb
inc
mov
out
filds
pop
ret
fwait
iret
test
sbb
sbb
cmp
dec
sbb
adc
xlat
sti
fstl
je
pop
push
cwtl
sub
in
bound
xor
shll
add
aad
lcall
push
call
aas
pop
mov
inc
sub
inc
into
inc
stos
addl
push
xchg
lods
sbbb
cmpsb
pop
xchg
pop
mov
and
insb
and
add
testb
cmc
jecxz
push
stos
mov
out
ficoms
dec
xchg
je
mov
aaa
mov
adc
sub
popa
fmull
add
or
xchg
out
dec
push
or
push
and
lahf
sub
cmc
lahf
xlat
fisubs
xchg
mov
xor
jns
pop
into
enter
push
es
xchg
and
xor
pop
pop
push
pop
es
add
imul
orb
add
push
sub
push
ss
ss
enter
loop
pusha
js
jae
fcmove
pop
pop
mov
mov
repz
bound
mov
mov
in
pop
dec
and
and
lea
or
cmp
add
dec
adc
jmp
push
fistl
jmp
ret
sbb
imul
stc
xlat
jmp
push
les
push
mov
cld
es
xchg
inc
xlat
mov
xor
jo
mov
addr16
out
dec
rolb
or
std
adc
rcr
sub
dec
shlb
jg
in
cmp
mov
xchg
std
push
mov
xor
mov
and
sub
aaa
add
dec
inc
jnp
jg
adc
mov
mov
ret
inc
ss
insl
mov
test
mov
mov
incb
sbb
cmp
xchg
dec
jl
out
mov
adc
out
popa
mulb
push
cwtl
insl
cmp
cwtl
mov
inc
popf
and
add
lret
insl
inc
fbstp
xchg
fnstcw
fs
rcll
jno
shlb
mov
ficompl
push
ljmp
pop
and
dec
inc
lods
xchg
ret
lock
stos
scas
punpcklwd
js
add
xor
aaa
aad
jns
outsl
push
sbb
test
rolb
idiv
push
pop
lods
mov
ret
test
lret
js
shrl
aas
repnz
scas
in
in
mov
push
or
inc
int3
sbb
or
adc
sub
cmp
bound
xchg
and
and
push
cmpsl
les
nop
push
lock
sahf
clc
pop
pushf
cs
mov
mov
popa
jb
fwait
push
nop
dec
push
xchg
dec
or
pop
cld
js
aas
and
mov
xchg
and
sarl
stc
mov
sub
dec
pop
mov
repnz
mov
lock
pop
out
iret
fistpl
rcl
xchg
dec
push
or
dec
loop
gs
and
loopne
in
fdivrs
mov
scas
cmp
je
mov
pop
loopne
out
add
pop
cltd
insl
lea
mov
ret
sub
cmpsl
xchg
sahf
ss
mov
cli
shrb
sbb
and
adc
pop
sti
fildl
dec
jg
dec
ret
shrl
rorb
jno
cmp
aam
hlt
pop
lret
clc
sub
pop
imul
pop
rcr
movsl
popa
push
jae
push
mov
mov
out
add
sub
adc
pushf
mov
std
iret
sbb
add
icebp
lahf
or
inc
inc
sbb
dec
cmp
push
pop
or
or
not
push
xchg
sbb
stos
mov
das
sbb
push
cld
pop
sub
rclb
pop
sub
xchg
cmp
repz
xchg
aam
adc
jo
aam
and
adc
je
sub
add
popa
push
shl
das
xchg
xchg
xor
out
cltd
sbb
mov
cmp
sub
cmp
mov
cmpsb
adc
in
rcll
jl
cs
xchg
jno
lahf
mov
xchg
popf
je
imul
mov
dec
in
adc
pop
mov
into
testb
int
xor
jnp
adc
push
ja
and
push
and
ss
ds
sbb
hlt
add
aaa
in
dec
dec
lahf
repz
lods
test
and
nop
jne
push
cmp
mov
out
add
out
shll
in
andb
pop
or
xchg
or
js
jmp
aaa
inc
cmpsb
push
fisubrl
sbb
xchg
not
pusha
dec
xor
dec
pop
divb
push
pop
pop
jle
out
jae
rorb
sub
sbb
sbb
mov
repnz
roll
inc
insl
adc
aad
sahf
lods
stos
add
and
iret
andb
das
into
mov
testb
outsb
jo
repz
in
jge
or
adc
push
fstpt
divl
lcall
pop
or
cld
push
sbb
loop
jne
sbb
lahf
pop
mov
sarb
out
jg
inc
xor
lcall
movsb
dec
mov
fisttpll
xor
and
mov
int3
loop
xchg
popf
ljmp
pop
mov
mov
and
sub
ljmp
ror
inc
pop
ljmp
mov
xchg
rorl
fimuls
sub
dec
bswap
ljmp
jb
sahf
add
out
inc
push
addr16
enter
push
addr16
sub
mov
movsl
repnz
data16
xchg
pop
lods
je
aas
add
sbbl
and
jge
insb
in
fwait
and
into
mov
pushf
inc
fsubs
orb
enter
sahf
int
jbe
cmp
test
mov
cmpsl
xchg
xchg
mov
popf
jae
or
jno
in
jo
rdpmc
mov
sbb
mov
jecxz
jl
cmp
ds
xor
in
dec
xlat
jecxz
mov
jns
jle
sbb
fistpll
shll
jnp
xchg
aaa
in
inc
or
sbbb
pushf
imul
arpl
pusha
dec
mov
pusha
sub
mov
push
dec
outsl
sub
dec
push
mov
push
dec
insb
into
and
fistl
pop
insl
pop
sub
in
xchg
mov
push
ss
sub
pushf
jmp
insb
mov
mov
shll
arpl
mov
adc
xor
clc
ret
add
lock
loopne
sti
das
adc
cmpl
rcll
or
sbb
jnp
daa
dec
pushf
adc
cltd
lcall
es
jnp
inc
inc
aas
xor
lcall
jmp
mov
in
cmp
mov
dec
cli
cmp
decb
add
imul
jecxz
pop
jnp
lret
popf
jmp
mov
mov
lock
stc
add
cmp
pop
aaa
or
cmpb
jmp
jecxz
mov
shll
sarb
jae
jae
aad
sub
xor
lds
in
jbe
cwtl
icebp
add
push
jbe
push
mov
imul
mov
test
sbb
push
dec
adc
rorl
xor
insb
mov
and
and
das
sbb
sarl
sbb
fisubs
cmp
ret
pop
mov
push
pushf
adc
jmp
int3
test
dec
mov
insb
jbe
add
ss
jge,pn
pushf
xor
out
adc
cmp
xor
pop
jecxz
subl
cmpsl
pop
ficomps
sbb
and
mov
lret
clc
movsb
test
imul
mov
mov
inc
loop
mov
and
int3
fninit
and
sub
pop
or
push
out
push
cwtl
out
ljmp
xchg
sub
xor
loop
add
mov
addr16
xchg
or
in
mov
cmc
xchg
push
push
pusha
sub
sbb
pop
mov
cmp
ret
cwtl
lock
mov
loopne
mov
sbb
and
mov
stos
add
cld
in
fcomp
in
outsl
cmpsb
aad
jmp
in
or
dec
mov
mov
push
das
aas
rolb
mov
sbb
jae
and
sbb
xchg
mov
push
jg
adc
lods
sahf
jmp
jge
hlt
sti
pop
mov
mov
addr16
or
or
jecxz
and
js
mov
dec
lahf
fisubrs
insl
cmp
xor
jmp
jo
nop
movsb
ja
xor
jnp
fsubrl
cld
push
cmp
xchg
pop
pop
push
mov
xor
mov
adc
dec
addb
roll
ds
stos
cmc
fmull
pusha
pop
jae
fcomps
xchg
gs
sahf
out
adc
gs
ret
cs
in
push
sbb
or
dec
popf
gs
iret
push
dec
aas
and
push
test
mov
stos
mov
push
ret
loop
cmp
pop
fsts
sbb
mov
mov
xchg
aam
fidivs
scas
push
test
lcall
insb
fstl
sub
icebp
imul
jecxz
aam
enter
or
flds
xchg
lds
ret
mov
add
sahf
jne
mov
or
das
xchg
push
dec
dec
push
jge
call
or
dec
add
icebp
jnp
das
fcomip
and
fcompl
je
sub
in
addr16
xor
cmp
cmp
ret
sbb
jo
cs
daa
lea
mov
cmp
mov
fsubrl
loopne
xor
inc
and
mov
std
mov
leave
inc
call
icebp
add
or
ret
jmp
sbb
cmp
call
add
inc
cmpsl
hlt
mov
rcrl
sbb
xchg
and
pusha
call
push
lret
leave
mov
xor
lcall
xchg
lods
inc
jecxz
mov
mov
pusha
cltd
ljmp
or
test
out
insl
pushf
pop
incl
push
mov
fidivrl
adc
movsl
fcomps
repz
cmp
inc
xchg
insl
jne
rcr
loopne
jno
mov
lea
int3
fdivrs
cli
call
fists
enter
fadds
add
jle
std
and
mov
loop
out
cmpb
in
dec
fidivl
std
cmp
je
int
lods
xchg
mov
adc
or
mov
mov
and
sahf
dec
jns
scas
dec
test
icebp
call
cmpsl
cmp
popf
fisubl
jne
push
cmc
mov
mov
mov
lea
mov
data16
mov
cmp
les
sbb
dec
adc
lahf
mov
fisubs
xchg
inc
stos
cmp
sub
outsb
pop
cmp
and
imul
test
and
lret
aaa
fmuls
dec
mov
add
pop
inc
nop
loope
fnstsw
je
addr16
mov
mov
mov
pushf
fildl
mov
mov
test
lea
outsl
sahf
jge
loopne
dec
add
pushf
mov
adc
outsb
mov
dec
or
arpl
mov
lret
ret
cmp
fstpl
int3
lahf
mov
out
cmpsl
adc
pop
ret
mov
mov
mov
add
in
aam
aas
in
mov
dec
shrb
lret
movsl
pop
push
andl
cmp
cld
aas
lcall
shll
popa
jae
addr16
mov
sbb
ss
xchg
xor
pushf
test
xchg
jmp
or
inc
jb
gs
sar
fists
sbb
rclb
xchg
or
push
adc
fnsave
sub
sub
je
lret
fs
inc
sub
or
sbb
notb
cwtl
jp
jecxz
lret
lret
sub
arpl
cli
dec
or
push
das
sbb
int
adc
mov
add
stos
mov
lret
dec
adc
mov
add
xchg
rorb
ret
out
jle
dec
incb
decl
dec
jge
push
ret
dec
push
dec
mov
mov
div
shrb
and
iret
mov
fidivs
imul
dec
mov
mov
pushf
test
xor
cltd
outsl
pop
jge
in
mov
cmpb
sbb
jno
outsb
fwait
decl
mov
stos
aaa
cmpsb
adc
dec
ljmp
cli
scas
cmovb
imul
cli
lcall
lahf
popa
jo
lret
clc
daa
out
cmpsb
outsl
mov
fs
xchg
jo
aam
and
daa
jo
inc
aam
adcb
adc
daa
stos
lea
scas
inc
adc
and
lcall
push
xorb
cmp
pop
mov
cwtl
inc
add
test
mov
fwait
dec
jp
add
push
jp
cmp
les
ret
xchg
or
insb
dec
or
push
ret
push
mov
cmc
movsb
pushf
jb
sbb
sbb
jg
icebp
dec
lea
xchg
inc
or
popa
cmp
insb
je
std
aas
in
push
loope
popf
sbb
stos
test
mov
or
repz
cmpsl
stos
xor
mov
pop
or
mov
and
inc
std
sbb
mov
rorl
push
dec
xchg
movsb
in
add
ret
cmp
jo
sub
iret
sbb
jg
mov
in
das
pop
push
aas
imul
jnp
iret
icebp
cmp
adc
mov
pop
jp
or
rcrb
xchg
inc
jo
sub
aas
inc
scas
jl
popf
push
or
xchg
cmp
lcall
fistps
push
sub
out
cli
hlt
mov
or
scas
in
add
imul
out
mov
xchg
jmp
xor
dec
sub
push
xchg
imul
cmp
adc
push
pop
mov
cld
xchg
dec
inc
cmp
cmp
cmp
mov
add
lahf
sbb
mov
jbe
in
mov
jl
lcall
fsubrl
jnp
stos
cs
out
xchg
sbb
mov
cwtl
push
pop
mov
js
cmp
adc
les
inc
sub
clc
cmpsl
sbb
mov
xchg
incb
and
mov
rcr
adc
out
les
cmpsb
push
push
push
mov
ds
sbb
mov
pop
jmp
movsl
inc
lahf
fiaddl
cmpsl
sahf
maskmovq
idivl
fcomip
cmpsb
shrb
jp,pt
aam
inc
lods
stos
js
ss
inc
mov
ljmp
pop
inc
pop
push
ds
dec
mov
test
xor
aam
pop
and
in
or
sbb
add
xchg
xchg
jns
mov
pop
adcb
mov
and
sbb
sahf
or
dec
xchg
xlat
in
loopne
mov
adc
fbld
cmp
inc
pop
or
push
xchg
jae
xchg
add
mov
jmp
pop
sahf
xor
jl
pop
pop
pop
pop
sbb
sti
iret
xchg
dec
loop
mov
je
jbe
cmpsl
popf
sbb
mov
jns
inc
ja
jo
fisubrs
add
dec
push
fldt
sbb
jp
ret
cmpsb
shlb
inc
call
leave
mov
adc
mov
jmp
fistl
xchg
or
nop
pop
cld
xor
mov
and
ds
sub
fstps
pusha
gs
sahf
mov
pop
cmp
bound
jg
mov
shll
enter
cmpsb
pop
and
icebp
mov
fnsave
sbb
dec
mov
fdivrs
and
cmp
gs
push
dec
arpl
jae
gs
out
pop
cmpsl
and
adc
add
adc
popa
das
mov
jp
lds
xchg
rorl
fwait
movsb
jge
popa
adc
int3
sbb
scas
ja
lods
mov
xor
fnsave
mov
mov
icebp
shlb
sahf
sbb
fwait
fwait
ss
cmpsl
mov
jge
lds
pop
xchg
sub
and
repz
fnclex
int3
out
ja
cmp
ds
jne
xor
fcmovb
in
dec
das
adc
int3
test
xchg
xchg
dec
dec
inc
arpl
cmp
dec
int3
pop
inc
outsl
cli
add
xor
fisttpll
pop
and
cs
or
fdivs
imul
call
ret
mov
shlb
add
out
daa
and
cmp
push
lds
int3
rcrl
xchg
xor
dec
scas
mov
pop
mov
and
mov
mov
jne
dec
jns
push
imul
fcomip
fcmove
outsb
jns
mov
or
mov
inc
movsb
or
and
push
jno
xor
ds
xor
loopne
je
jbe
sbb
cmpsb
sbb
out
push
cmp
push
mov
jge
push
push
clc
sarl
fisttpl
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
jmp
enter
sarb
add
sbbl
mov
jge
pop
jp
int3
sub
mov
cmc
sub
xchg
mov
xchg
in
sub
xchg
pop
add
rcrb
mov
jecxz
aam
and
and
stos
mov
inc
mov
add
insb
in
imul
lret
outsl
xchg
and
ds
pop
jo
loopne
popf
push
mov
loope
test
movsb
push
lret
adc
pop
ror
or
loope
or
cmp
mov
test
test
test
mov
push
xor
out
adc
jl
cli
cmp
hlt
xor
mov
test
stos
stos
sbb
test
xchg
inc
out
rcrb
scas
shll
in
xor
sbb
movsl
addr16
xlat
adc
arpl
jmp
es
sbb
scas
addr16
pop
mov
js
xchg
sti
jmp
vpunpckldq
es
cmp
push
xor
adc
push
shll
cmp
repnz
scas
mov
imul
mov
movsl
hlt
pop
stos
or
stc
jmp
sti
pop
sbb
dec
jmp
cli
adc
cmc
sub
pop
mov
cmpl
jns
imulb
mov
pop
xor
mov
sub
push
out
insb
xlat
mov
add
mov
lea
adc
sbb
dec
mov
insl
pop
mov
es
int
ss
ja
pushf
push
les
push
sbb
repz
mov
add
xchg
insb
jl
int3
scas
pusha
mov
sarl
add
ljmp
add
mov
mov
push
roll
andb
and
out
jp
push
ljmp
fcomps
cmpsb
jg
or
pop
fiaddl
mov
xchg
or
xor
and
imul
or
sar
push
das
inc
xor
popa
pop
adc
pop
lahf
jl
push
mov
imul
adc
sub
xchg
daa
cwtl
push
mov
std
rorl
out
fbld
jns
clc
hlt
cmp
push
and
add
fs
out
repnz
stos
pop
arpl
mov
pop
pop
sbb
loop
or
insl
mov
mov
je
sub
jnp
jp
sbb
pop
pop
push
push
mov
xchg
or
jl
iret
movsl
cmpsb
push
push
lods
cmp
add
scas
adc
fs
inc
jno
sub
push
adc
call
addr16
lock
int
leave
and
orl
lret
shrl
mov
sbbb
pusha
mov
mov
xchg
nop
popf
jmp
xchg
popa
and
or
stc
outsl
jno
icebp
imul
pop
cld
push
or
loope
jg
lret
xchg
and
lret
xor
pusha
bound
jno
mov
mov
push
and
les
jle
jmp
arpl
scas
pop
jns
iret
testb
lea
cld
xor
outsl
mov
xchg
negb
in
xchg
stos
jl
arpl
mov
mov
xchg
jbe
ljmp
push
call
popa
sbb
xchg
lods
push
mov
xchg
pop
push
mov
hlt
add
sub
and
fsubrs
lcall
dec
jecxz
lods
dec
notb
stos
jmp
sub
loopne
fiadds
xchg
push
or
imul
jle
jecxz
push
adc
xor
jo
inc
test
and
adc
outsb
push
outsl
jb
adc
xlat
hlt
bound
aam
lret
iret
mov
xchg
iret
pop
mov
sub
insb
inc
sbb
push
aaa
rcl
pop
lds
pop
mov
jp
iret
push
in
xor
cmpsl
in
mov
push
jg
sub
mov
xchg
lahf
mov
push
fs
mov
mov
lcall
sahf
add
sub
and
add
xor
sti
das
dec
lret
in
loope
std
inc
and
jge
and
fcoms
addr16
imul
dec
ljmp
roll
movl
mov
out
xchg
inc
cmpsb
enter
sub
jge
sbb
mov
add
pop
and
push
sti
test
pop
outsb
inc
fisubrs
sbbl
mov
dec
lock
stos
or
cli
mov
aam
call
ja
loopne
cwtl
ret
push
inc
mov
dec
mov
mov
sbb
adc
call
sbb
jnp
pop
mov
frstor
addr16
je
inc
or
cmova
loope
bound
mov
test
fnstenv
stos
bound
fnstenv
gs
ss
lods
mov
push
sub
push
push
adc
inc
inc
bound
sub
add
test
inc
pop
js
inc
mov
cmpl
aaa
push
add
jp
call
shr
mov
insb
cli
in
jb
mov
pop
out
push
jbe
into
jge
pop
mov
das
movsl
jp
outsl
orl
shrb
cltd
push
int3
cmp
pop
das
adc
mov
lahf
mov
jge
push
lea
insb
ja
mov
push
pop
and
push
adc
out
add
ljmp
aam
jle
mov
leave
aas
out
fmulp
mov
add
clc
in
test
daa
aad
divb
pop
test
cmpsl
fcom
lahf
mov
cmp
mov
ljmp
adc
lret
adc
or
lcall
dec
cmpsb
mov
jmp
mov
shlb
pop
mov
cmc
fdivrl
sub
xor
filds
iret
add
mov
xchg
push
xor
jle
fsts
in
int
js
push
push
push
fs
and
ftst
add
repz
call
pop
fcoms
movsb
das
lahf
and
stc
add
outsb
sahf
outsl
pop
jne
mov
jb
scas
adc
icebp
loopne
mov
js
sahf
xchg
dec
xor
pop
xchg
shll
xchg
jecxz
bound
adc
mov
mov
mov
in
sub
jae
shrb
pop
sahf
inc
cmp
mov
push
xor
pop
testb
mov
inc
jmp
shl
jo
and
jno
mov
inc
mov
dec
add
mov
aaa
lock
jl
push
jecxz
sahf
call
imul
popa
add
dec
pop
lods
dec
pop
call
lahf
repz
enter
push
cmc
jae
test
or
jl
mov
aas
xor
sbb
adc
sbb
add
add
lret
sbb
rcrl
ja
or
adc
outsb
mov
fisubs
or
mov
jbe
fstpt
mov
adc
mov
jp
out
out
in
mov
loope
dec
das
fsubrl
sbb
loopne
xor
in
mov
cld
ja
test
dec
push
inc
imul
xchg
jno
out
or
push
cmpsb
pop
in
fimull
jecxz
mov
dec
xchg
xchg
mov
popf
mov
mov
aaa
int3
cmpxchg
inc
hlt
pop
and
popf
insb
xchg
add
ret
into
inc
jb
imull
cmpsb
into
aas
arpl
xor
cwtl
sahf
lahf
addb
shl
shrb
scas
sahf
lret
push
or
imul
cltd
stc
mov
mov
dec
in
loope
imul
mov
xor
add
cmp
pop
cmp
add
mov
int3
jmp
ret
and
stos
mov
jbe
addb
addr16
sahf
cmp
std
inc
mov
insl
jl
mov
sahf
into
jno
je
inc
cwtl
xchg
push
xor
mov
pop
outsb
xor
cmp
cmpsl
mov
push
addr16
test
and
sub
jbe
aas
sub
add
jp
fistl
pop
sub
inc
or
jae
cmpsb
imul
les
cmpsb
in
dec
pop
rorb
or
sub
ja
lret
mov
imul
mov
or
movsl
pop
gs
mov
fnsave
push
orb
fsubr
fisubrl
and
mov
cmpsl
sbb
ljmp
insb
int
roll
mov
sub
ljmp
fcoml
mov
jbe
mov
outsl
repz
imul
push
xor
outsl
subl
pop
stos
pop
outsl
jg
xor
push
xor
jecxz
sub
cmp
movsl
add
jns
xchg
sbb
pop
cld
outsl
lahf
shr
sarb
xchg
rorb
rorl
call
push
jl
mov
arpl
pop
and
cmp
mov
push
xchg
mov
hlt
add
mov
adc
js
fidivrs
fwait
xlat
sbb
push
add
icebp
inc
pop
mov
mov
int
cld
or
xor
jmp
aad
adc
movsl
ss
fildll
notb
insb
mov
outsl
ret
adc
xchg
imul
lods
mov
and
jg
imul
add
mov
leave
pop
repnz
add
cmp
ret
push
sbb
cwtl
dec
adc
jl
filds
shrl
imul
stc
push
stos
xchg
testl
arpl
mov
cmp
popa
les
dec
inc
hlt
xchg
cltd
scas
addb
mov
and
xor
add
push
rcr
das
outsb
sarl
shl
jo
imul
lahf
inc
dec
pop
mov
xor
xor
jg
dec
clc
das
in
or
inc
out
mov
push
or
cmp
ss
mov
mov
jns
and
push
rcrl
jge
fs
rcrb
pusha
clc
fwait
sbb
les
loop
shl
or
xchg
mov
out
xchg
movsl
or
adc
inc
out
dec
adc
cs
sub
je
sub
and
and
cld
cmp
inc
fnstenv
loopne
jl
fistps
adc
icebp
es
jne
mov
outsl
cmp
inc
add
imul
dec
mov
adc
inc
je
call
mov
imul
jb
iret
add
cmp
test
and
lcall
leave
imul
xor
nop
int3
mov
lds
xchg
adc
repnz
js
adc
int
mov
fs
xchg
clc
xor
mov
mov
cs
jg
cmpsb
out
xchg
push
decb
jne
enter
sbb
sbb
adc
xchg
lods
cmp
leave
xchg
push
mov
mov
aad
mov
jp
add
icebp
test
bound
test
inc
ret
or
cmp
mov
jbe
ret
scas
idivb
push
stc
test
lods
push
mov
ss
mov
hlt
out
add
addr16
call
dec
in
jb
sbb
push
mov
sub
sub
mov
sub
add
fiaddl
inc
jb
in
mov
mov
shl
fnstenv
loopne
add
sub
daa
jle
gs
fisttps
je
pop
and
or
xlat
cmc
ss
fwait
mov
cmp
sbb
dec
sub
push
push
test
aad
fstpl
test
sbbl
pop
pop
fstps
xor
mov
push
mov
or
xor
cmp
cmc
int
sbb
xor
add
jbe
scas
xor
pop
mov
hlt
mov
sbb
fiadds
outsl
imul
sbb
xor
mov
sub
nop
sbb
sbb
ja
popf
ljmp
xchg
dec
insl
push
mov
pushf
or
xchg
mov
mov
mov
out
movsl
pusha
cltd
outsl
sub
jb
push
mov
test
in
insb
jae
ja
cwtl
in
imul
xor
mov
les
mov
xchg
das
fldcw
mov
repnz
fdivrs
lock
sahf
adc
das
outsl
pop
in
jno
lahf
adc
xor
pop
fldcw
jne
leave
push
push
pop
pop
ret
test
and
mov
lods
xor
sbb
dec
xchg
cwtl
push
ret
xor
adc
mov
mov
sub
xor
mov
jo
xchg
enter
ljmp
push
add
leave
movsb
repnz
pusha
scas
push
int
jno
repnz
fldenv
orl
mov
dec
out
jae
mov
lret
test
ds
mov
sti
mov
sbb
fistl
sub
cmp
jae
js
pushf
jmp
nop
negl
add
mov
xchg
leave
out
outsb
popw
jae
mov
xor
pop
mov
aam
mov
mov
dec
test
or
cli
add
repnz
mov
out
adc
mov
mov
mov
lret
cltd
dec
das
or
mov
and
add
or
scas
lahf
shl
sbb
movsl
stos
mov
push
dec
sbb
or
mov
jo
repnz
xchg
pop
inc
jmp
test
lds
xchg
lcall
jg
je
jmp
inc
inc
sahf
xchg
aad
mov
insl
sbb
int
jmp
inc
cmpsl
lock
lcall
or
gs
pop
int
test
cmp
stc
xor
lock
sbb
mov
loopne
push
fs
pop
mov
add
jnp
out
lcall
or
mov
sub
icebp
add
shrb
pop
test
dec
jne
jg
outsb
xor
add
mov
stos
jnp
jne
mov
lcall
js
jne
std
sbb
mov
adc
cwtl
insl
xor
ret
out
sub
into
cltd
cmp
outsl
in
loop
btr
jle
sbbl
cmc
pop
push
mov
test
shl
sbb
push
xchg
sbb
inc
mov
mov
mov
fcoml
xchg
stc
pop
jmp
loop
push
pusha
push
fsubrp
mulb
push
mov
stos
dec
mov
popf
cmp
out
or
mov
ja
and
xchg
inc
ret
movsb
pop
push
push
xor
xor
test
shr
mov
mov
icebp
test
and
dec
pop
rol
xchg
loop
sbb
cwtl
mov
lock
movsl
adc
add
dec
je
mov
rcll
xor
imul
dec
popa
out
roll
sbb
push
std
mov
add
mov
rcrb
pop
outsl
or
cmpsl
inc
shlb
add
sbb
lcall
bound
fcompl
jno
mov
push
dec
fwait
ljmp
add
ja
xchg
repz
repz
stos
pusha
dec
sbb
or
sub
lea
ficoml
aaa
and
popf
cmp
leave
outsb
adc
xor
mov
xor
rclb
jl
cmp
test
dec
aad
pop
mov
popa
arpl
aaa
test
inc
in
cwtl
and
and
ss
in
sbb
inc
mov
jg
cmpsb
xchg
inc
insb
mov
inc
notb
jbe
jo
cmp
and
pop
xchg
fcoms
dec
testb
pop
stos
cltd
cli
and
subw
cmp
inc
dec
mov
ror
sarb
in
repnz
in
or
mov
adc
out
ror
or
mov
aad
fisubl
adc
push
inc
xor
jl
fnstsw
or
dec
xchg
xor
or
nop
xor
idivb
pop
mov
sahf
ds
sub
aam
inc
dec
mov
and
xchg
out
mov
push
dec
and
xrelease
in
xor
ficoml
outsb
mov
push
lcall
lret
mov
sahf
comiss
push
lods
aam
or
sbb
out
lea
lods
int
mov
mov
jns
mov
or
ret
cmpsl
es
popf
js
jecxz
add
ja
sbb
adc
lret
in
lock
pop
mov
pop
mov
out
sbb
sbb
int
sbb
rcll
rcr
inc
or
xor
mov
popa
in
dec
daa
popf
ret
shlb
or
insb
jge
aam
mov
push
mov
push
adcb
shlb
shll
jb
xchg
mov
pushf
add
inc
jge
out
and
mov
in
popa
in
adc
push
lcall
jl
mov
lret
dec
xor
pop
daa
jb
add
mov
push
mov
addb
or
pop
push
les
cmpsb
push
mov
jae
xchg
pop
jnp
push
out
jne
adc
jne
pop
pop
test
mov
les
insl
xor
sub
dec
push
outsb
movsb
mov
inc
push
sti
out
idivb
and
in
mov
jo
xchg
jl
jbe
inc
lret
outsl
sub
pushf
sbb
jecxz
push
mov
ss
movsl
inc
clc
pop
sub
mov
imul
mov
into
xorb
adc
nop
or
outsl
popa
rcrl
ss
or
pop
sbb
inc
xor
mov
cltd
sahf
imul
add
es
jb
icebp
call
add
xchg
xchg
mov
sub
push
xchg
pop
cltd
sti
into
add
lea
aas
mov
sbbl
xchg
push
pop
fcomps
test
ljmp
out
or
ret
xor
jbe
inc
mov
sarl
adc
cmpsb
cmp
pop
pop
shrb
cs
jae
lds
push
xor
aam
dec
mov
cmpsl
jne
aad
dec
pusha
stos
pop
nop
push
shll
inc
push
add
sbb
jl
push
push
xchg
jge
lock
jmp
clc
jnp
cmp
or
leave
popf
dec
sahf
inc
stc
lret
cmpsl
add
push
adcb
add
jnp
scas
pop
mov
out
ss
cmp
enter
aas
in
lea
lcall
repz
cmc
test
xor
mov
rcrb
mov
or
sbb
stos
js
mov
xchg
mov
and
aas
test
push
fmul
addl
cmc
and
mov
test
jbe
fisttpll
in
in
push
mov
sbb
test
dec
or
xchg
xor
repnz
into
cmp
or
in
dec
dec
repz
inc
lret
pop
or
sub
popf
pop
enter
or
xchg
inc
in
in
loope
xchg
cs
aaa
repz
pop
inc
cmp
and
es
mov
pop
xlat
outsl
pop
loopne
scas
lret
test
fstps
add
lret
xor
xchg
shr
inc
lods
into
cmpsl
pop
rcll
into
mov
add
arpl
xchg
add
fdivs
scas
xchg
sbb
sbb
cs
cmp
adc
add
push
outsl
inc
decb
mov
xor
stos
jge
sub
cmp
scas
push
ret
insb
lods
or
jo
hlt
add
adc
mov
dec
pop
out
nop
outsb
push
arpl
add
cmp
cmp
lds
push
ret
xor
cmpsl
jmp
jle
sub
jbe
sbb
clc
push
xchg
in
or
xor
mov
int
arpl
cmp
repz
stc
jnp
mov
mov
pop
jg
add
and
adc
iret
mulb
es
jne
push
icebp
add
ja
mov
mov
dec
cs
arpl
addr16
dec
pop
pop
mov
dec
sti
pop
popl
lods
outsl
add
repz
mov
hlt
jg
and
or
cmp
push
jno
or
inc
outsb
and
jb
ljmp
pop
pop
and
adc
repnz
lret
loopne
aaa
adc
add
enter
pop
inc
lods
lods
mov
mov
sub
lcallw
or
cmp
jp
pop
mov
cwtl
imul
jl
push
lea
dec
mov
cld
and
jo
jo
cltd
mov
daa
cmpsl
jnp
xchg
and
jecxz
stc
ja
movsb
repnz
ret
divl
cmpsb
jmp
js
fwait
ja
or
arpl
sbb
mov
pop
jmp
jo
aam
pop
int3
mov
push
add
movsl
test
xchg
mov
fcoms
lret
test
imull
pop
shrb
stos
es
lret
sbb
mov
into
mov
js
pusha
sbb
test
and
movsl
pop
out
ffree
push
js
arpl
pop
xchg
std
in
aad
add
test
lcall
popa
sub
clc
aaa
mov
cld
cmpsb
sub
pushf
test
mov
in
mov
aam
gs
xlat
mov
lcall
mov
mov
mov
adc
inc
enter
pop
dec
data16
dec
adc
ficompl
test
sbb
fists
add
into
xchg
jnp
nop
sbbl
cmp
pop
sbb
push
pop
in
dec
mov
dec
test
cmp
imul
dec
movsl
lods
pop
pop
and
dec
popa
test
icebp
mov
sub
add
adc
insb
or
icebp
int
xchg
jne
mov
sar
sbb
pop
lcall
std
test
stos
pop
lahf
int
cmovae
push
xor
aad
add
pop
das
xor
fldl
insl
push
cmpsb
gs
jns
xchg
pop
sub
xor
jns
mov
pusha
sub
scas
fisttps
mov
movsb
in
cmp
pushf
xchg
xchg
jb
pop
cmp
adc
jne
arpl
inc
push
in
mov
ds
es
iret
cmpsb
aaa
scas
scas
mov
shrl
pushl
pop
sub
and
push
stos
cltd
loope
cli
sub
jne
icebp
sbb
jg
enter
mov
xchg
push
cwtl
insl
xor
add
ret
mov
das
jnp
push
mov
cmp
test
jmp
xchg
sahf
sub
dec
xchg
arpl
xchg
lods
mov
adc
mov
popf
pop
mov
xchg
leave
xchg
pop
loopne
bndstx
aaa
rol
enter
mov
xchg
hlt
sbb
enter
test
mov
xor
or
mov
fsts
test
cli
mov
movsb
leave
push
mov
mov
mov
ret
pop
jne
out
int3
pushl
and
daa
xchg
mov
xor
shrb
popl
stc
stos
mov
fwait
insb
push
call
cmc
mov
insl
ret
sti
xorl
imul
cmpsl
js
push
inc
or
fbld
adc
jne,pn
cltd
ret
mov
mov
xorl
and
sub
mov
ds
pop
aam
xor
pop
push
push
iret
mov
push
mov
jbe
xchg
lret
cmpb
inc
cmp
mov
pop
ret
mov
inc
popa
out
pop
pushf
cmp
pushf
fsubrs
mov
addb
inc
out
cmp
and
mov
popl
or
pop
mov
imul
sysexit
aas
mov
cmp
andb
lods
addl
cmp
mulb
cltd
mov
repz
mov
leave
xchg
mov
sub
stc
inc
xor
cmpsb
inc
sbb
jmp
or
inc
fbld
push
std
ljmp
lea
add
mov
cltd
jp
cmp
cmp
pushf
sub
sti
fsubrl
mov
es
mov
divb
cmp
push
sahf
loope
pop
imul
add
and
test
leave
out
cmpsb
pop
xchg
ss
mov
sbb
stc
cli
es
push
xchg
cmpl
dec
cmp
mov
shr
shl
adc
lods
and
jge
push
or
mov
jo
add
xchg
adc
popa
jle
xorl
repz
in
cmp
call
addr16
mov
pop
xor
jl
test
inc
or
sti
sub
push
jge
cwtl
ljmp
sbb
imul
or
int
push
jge
and
and
cmpsb
lods
aas
arpl
popf
sbb
jp
nop
cmp
push
sub
sub
fdiv
and
inc
fcmovbe
sahf
sahf
lock
mov
jo
cmpsb
jae
push
fs
fsubs
pushf
fs
inc
cmp
arpl
cmp
pop
loop
xchg
sub
sbb
out
push
dec
insb
push
mulb
and
sbb
fildll
fcom
sti
cli
in
hlt
push
mov
jle
aam
ror
mov
ljmp
mov
es
jo
jae
loop
and
pop
pop
mov
dec
rcll
lods
les
inc
pop
cmpsl
inc
mov
adc
int
and
fists
mov
dec
mov
arpl
jge
sub
mov
xor
or
and
les
dec
stc
pop
pushf
mov
divl
in
push
xor
mov
push
sub
cmpsb
fs
push
lods
adc
mov
shr
xchg
filds
clc
cmc
das
imul
cli
fbld
sub
jge
decl
sti
sarl
insb
minps
adc
aad
and
cmp
ret
push
gs
stc
pop
stos
sahf
inc
pusha
add
js
daa
xchg
cmp
inc
push
jl
sub
outsl
lcall
sbb
xor
dec
sub
sub
sbbl
stos
les
fs
aas
push
adc
stos
icebp
adc
adc
add
inc
jnp
clc
scas
int
lods
and
hlt
push
pop
and
push
fiadds
test
or
iret
push
and
jnp
xchg
mov
and
jo
jbe
or
jg
add
jns
cmp
xor
loop
xchg
pop
cmpsl
jecxz
lock
imul
imul
pop
into
fwait
push
out
icebp
push
out
cli
push
xor
mov
mov
cmp
out
push
mov
adc
pop
fwait
xchg
mov
push
loope
sbbl
push
je
call
sti
lea
or
adc
loopne
out
cmpsl
outsl
mov
dec
xchg
xor
adc
gs
in
insl
iret
adc
add
add
out
and
mov
xor
xor
mov
pop
and
insb
stos
cmp
xchg
pop
aaa
pusha
mov
rorl
add
fbld
inc
and
popf
sti
mov
mov
scas
inc
mov
gs
imul
pop
push
mov
adc
fwait
add
xlat
cmpl
xorl
cmp
mov
and
scas
repz
jp
out
mov
pop
loopne
inc
int
test
out
cli
data16
lcall
inc
cmp
lcall
push
fimuls
fwait
lret
cmp
iret
mov
dec
mov
inc
leave
mov
pop
cmp
add
cli
insb
pop
shll
add
sbb
xor
int
lcall
enter
mov
ror
mov
lods
mov
repz
pop
pop
jmp
sub
adc
sub
in
cmpsb
jg
pop
mov
mov
cmp
shlb
push
loopne
aaa
popf
or
mov
adc
xchg
cmp
imul
xor
loope
xchg
pop
shlb
adc
mov
loopne
jne
and
add
call
mov
stos
enter
vprotw
xor
ljmp
jle
out
ss
mov
dec
cli
mov
bound
mov
mov
and
or
mov
notl
or
stc
mov
stos
adc
out
ja
loope
sub
mov
push
dec
jns
xchg
push
in
push
les
sbb
mov
rol
in
push
fcoms
ret
lock
in
prefetcht1
ds
dec
mov
lods
cltd
or
sti
mov
mov
and
addr16
sub
jbe
xchg
jg
xor
cmpl
fcmovnbe
xchg
cwtl
dec
and
int
out
not
push
mov
adc
mov
repnz
lret
sahf
mov
pushf
aad
repnz
inc
sbb
std
imul
xchg
imul
mov
add
sub
in
mov
and
push
icebp
inc
mov
pop
cltd
mov
scas
imulb
into
icebp
test
mov
adc
loop
jecxz
shlb
in
add
pusha
cli
enter
add
or
outsl
loope
xchg
pop
and
push
lock
mov
fdivl
sti
ficoms
pop
xor
ret
rclb
mov
aad
mov
shlb
popa
adc
ror
vmovaps
sbb
jmp
and
mov
dec
out
fwait
idivb
jmp
inc
ja
and
addr16
mov
jp
mov
out
loopne
push
pop
sbbl
jns
lret
jge
cmpsb
cltd
push
sub
icebp
cmp
int3
push
aas
inc
mov
std
adc
or
ss
push
jae
neg
fdivrl
dec
cmc
jp
mov
in
loope
bound
pop
jp
or
xor
sub
push
push
in
and
lea
je
or
leave
cmc
pusha
fsubrs
repz
cmp
sti
mov
xchg
push
es
mov
inc
and
lea
mov
enter
enter
or
adc
es
sub
faddl
xchg
dec
ffreep
ret
xor
loope
fwait
xlat
inc
or
push
adc
dec
lods
cs
icebp
sub
adc
ret
roll
mov
or
nop
push
lret
lea
pop
pop
pop
add
sbb
outsl
shlb
mov
add
sbb
xchg
stos
adc
adc
stos
or
incl
jge
push
imul
dec
loop
push
mov
in
adc
in
das
and
sub
cmp
out
push
pop
fimuls
xor
cmp
ljmp
mov
iret
je
adc
pop
push
sub
and
cmp
test
adc
inc
mov
cmp
pop
adc
enter
cmp
sbb
cmp
cld
ss
mov
scas
aam
push
xor
cmp
enter
pop
negl
xchg
jl
out
arpl
sti
nop
popf
movsl
ljmp
aas
scas
pop
mov
cltd
inc
out
fdiv
rcll
mov
lcall
inc
idivb
in
cs
int
push
rol
cmpsb
adc
popa
rcrl
push
arpl
push
in
or
outsl
shr
jmp
fst
sbb
aad
inc
pop
xchg
fcomip
inc
xchg
movsl
pop
dec
int
cmp
or
fs
inc
imul
sbb
jmp
js
mov
es
jne
jae
shlb
mov
fstpl
mov
pushf
add
sti
or
mov
push
iret
sub
lret
sbb
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
push
mov
movl
cmpl
je
cmpl
jl
jmp
call
mov
dec
mov
jmp
mov
xor
add
mov
sub
xor
mov
notl
mov
andl
sub
movl
movl
xor
mov
mov
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
sub
add
mov
sub
xorl
mov
adc
mov
mov
inc
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jb
sub
movl
mov
orl
sbb
mov
xor
or
mov
sub
or
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
jmp
fs
dec
mov
movsb
jnp
rol
aaa
fcmovnu
adc
jp
pop
jp
inc
cld
xchg
jecxz
and
cmpsb
dec
in
mov
jle
ret
imul
in
shrl
divl
fistps
xchg
pushf
and
inc
or
lods
cltd
xchg
push
shr
dec
out
clc
xlat
ljmp
pop
fsubl
mov
cli
lds
in
sbb
call
shll
jns
das
adc
jb
lret
and
adc
cmp
fs
cs
mov
or
dec
dec
mov
lds
jl
jmp
cmp
xor
repnz
fsubrs
mov
clc
jecxz
dec
or
adc
mov
inc
pop
jns
xchg
jle,pt
mov
inc
adc
dec
in
int
or
pop
ds
push
pop
fs
mov
pusha
enter
loope
fs
add
loop
fwait
mov
sub
xor
sarl
lcall
inc
test
movsl
shrl
mov
sub
scas
inc
sbb
mov
mov
xor
pop
in
leave
cmp
dec
add
out
lods
jle
xchg
mov
test
mov
stos
sbb
and
popf
fnstcw
es
std
stos
lock
sbb
pop
arpl
out
out
sahf
dec
call
dec
aad
push
mov
int3
aas
xchg
push
lret
rcll
arpl
test
adc
stos
out
jbe
test
inc
xlat
dec
sub
jmp
xchg
pusha
es
js
lock
mov
insb
xchg
aaa
fs
mov
stos
dec
in
add
fidivs
leave
aad
dec
mov
inc
repz
xor
call
shrb
addl
fwait
fs
and
cmp
jmp
sub
mov
pop
mov
mov
into
mov
add
rcr
pop
call
xchg
inc
stos
insl
fcoms
mov
iret
fwait
out
mov
lcall
imull
data16
lcall
pop
ret
icebp
adc
ret
jbe
cmp
sbb
cmc
mov
cli
pop
shrb
insl
fidivrl
lea
pop
adc
es
outsb
lahf
int3
insl
mov
iret
pop
cmpsb
leave
cmc
jmp
jb
lock
and
std
rcll
cmp
cld
mov
adc
cli
les
sbb
jno
fsubrp
dec
mov
lods
xor
and
inc
jecxz
mov
iret
jecxz
sub
das
cltd
fnsave
inc
loop
and
fbld
adc
jg
pop
pop
sbb
add
ljmp
daa
test
bound
in
dec
and
pop
inc
jo
pop
mov
sub
sbb
xchg
inc
bound
rorl
aas
fisubl
add
sub
and
out
dec
xchg
imulb
cmpsl
ret
or
dec
inc
cmp
pop
pop
fildl
jl
push
nop
mov
mov
idivl
push
xor
rcrb
mov
mov
push
sbbb
int
jmp
sub
insl
pcmpgtw
dec
push
notl
jne
jne
or
pop
adc
xchg
pop
xor
out
mov
sbb
cmpsb
mov
lods
cmp
popf
xor
outsl
sub
sub
ja
or
dec
push
jle
dec
push
aaa
add
in
test
mov
lret
fidivs
sub
jge
stos
jl
and
sbb
push
ds
xchg
adc
mov
repz
std
pop
idivl
pusha
outsb
sbb
inc
mov
pop
sub
xor
cmp
lds
cmp
lods
popa
fwait
add
bsf
mov
mov
inc
repnz
cmpsl
cmp
or
sysret
loop
cli
pop
ljmp
lret
pop
mov
imul
fstpl
sub
add
xchg
lods
je
adc
push
jno
pop
repnz
out
aad
sub
inc
lods
js
ds
mov
fisubs
adc
xchg
arpl
and
hlt
and
lret
cld
test
ret
pop
cmp
orb
lcall
push
dec
lea
push
adc
ja
push
loop
mov
lahf
jmp
shrb
mov
shlb
pop
mov
mov
lock
lret
jne
sbb
xchg
xlat
cmp
sahf
push
mov
mov
movsl
popf
push
stos
xor
fcoms
outsb
int3
add
sbb
push
add
in
sub
aaa
dec
aaa
movsb
sbb
dec
add
repnz
or
push
sbb
loope
jne
inc
jmp
push
sub
je
loopne
fsubrl
lods
scas
and
mov
cmp
or
lret
jo
mov
mov
mov
in
js
jg
fwait
cltd
mov
fs
adc
xor
xchg
xor
sbb
fstp
cmp
cwtl
repnz
xor
pop
shrb
xchg
sar
and
mov
cmpb
mov
mov
icebp
pop
out
adc
cmp
mov
jecxz
clc
xchg
xchg
hlt
je
js
add
das
scas
pop
rolb
add
mov
fidivs
dec
and
cmpsb
dec
ds
mov
cld
popf
sbb
ficoms
pop
jbe
sub
xchg
es
psubd
and
or
das
addr16
add
cmp
scas
adc
jbe
fcomps
jae
add
das
rcl
jg
fistpl
pop
pusha
cmc
push
xor
cmc
out
xor
dec
dec
adc
pop
int3
lahf
dec
jb
mov
add
inc
mov
xorb
es
push
mov
cld
xchg
sbb
sbb
frstor
dec
lcall
in
mov
mov
add
inc
bound
lods
insl
jg
pop
test
sahf
inc
pop
cs
cmp
mov
cmp
testb
jmp
popa
cs
jo
push
mov
adc
jmp
cmp
dec
mov
adc
adc
dec
test
or
mov
push
jge
pop
hlt
xchg
jp
mov
testb
out
nop
push
int3
add
xchg
xchg
shrl
inc
add
xchg
pushf
push
arpl
mov
jbe
call
or
xchg
inc
pop
hlt
imul
loop
lea
dec
fdivs
xor
jl
jne
dec
push
add
inc
xor
adcb
cmp
data16
outsl
ja
pop
out
cmp
lahf
adc
dec
pushf
cld
scas
cmc
enter
inc
adc
test
imul
insb
lahf
pop
outsb
push
hlt
scas
lahf
mov
cld
inc
mov
xor
sbb
jle
lods
jae
js
and
test
sbb
pop
pop
xor
xlat
inc
cmp
ret
int
xor
mov
test
and
push
stos
data16
dec
stos
loopne
dec
sub
push
shll
test
loopne
xor
mov
cmpsl
ja
ja
aam
cmp
adc
dec
outsl
aaa
mov
sub
std
insb
pop
cmpl
daa
pop
push
fwait
mov
xchg
or
xorl
repnz
lret
js
jg
push
push
lods
xchg
dec
mov
pop
imul
sub
lock
cmp
mov
shrb
mov
sti
call
imul
in
sbb
pop
pop
out
xchg
adc
mov
hlt
rcll
andl
cmpsl
roll
nop
mov
xchg
fiadds
and
mov
outsb
mov
cmpsb
pop
scas
jns
mov
adc
pop
pop
mov
mov
fmul
stc
cmp
je
dec
loopne
fdiv
mov
xor
mov
xor
cmpb
shll
mov
out
xor
call
mov
cmp
out
adc
adc
pushl
out
dec
rorb
or
mov
iret
dec
adc
stos
test
cmpsl
cmpl
arpl
xor
int
fsub
add
inc
mov
jp
jl
popf
popa
push
and
sbb
mov
push
pop
popa
or
fcmovne
mov
shll
icebp
jnp
jle
mov
push
add
mov
shr
bound
not
test
stc
mov
dec
jae
mov
loopnew
stos
inc
push
cli
xor
lcall
push
cld
pop
cli
ja
or
or
push
jnp
cmp
inc
cmp
mov
or
ja
inc
subl
add
mov
xor
inc
enter
cltd
jl
dec
shlb
popa
push
pop
lcall
subb
pop
jmp
push
mov
adc
or
xor
ljmp
dec
in
in
mov
shrb
sbbl
loop
mov
push
shl
jle
sbb
rclb
sub
out
rcrb
pop
sbb
and
ror
add
call
lcall
or
out
icebp
jge
push
loopne
pop
test
mov
sub
mov
pop
loop
jp
mov
xchg
fwait
mov
push
adc
loop
adc
ss
jge
mov
add
mov
mov
fbld
inc
shlb
dec
lahf
pop
cld
xchg
and
movl
fistpll
ret
dec
gs
or
aaa
das
push
dec
pop
mov
sbb
inc
ja
sti
pop
dec
cmp
fcoml
mov
test
dec
xorl
add
mov
out
shlb
sbb
dec
bound
imul
sbb
add
out
jmp
xor
jl
in
cmp
js
sub
sbb
std
sbbb
les
dec
pop
cwtl
cmp
add
scas
sarb
jnp
daa
add
insl
dec
cli
inc
add
arpl
fisttpl
dec
out
jg
add
pop
mov
outsb
cmpsl
push
sub
vpand
or
mov
jno
mov
sub
in
out
push
jns
nop
jge
lcall
incb
stos
mov
test
rclb
xchg
xchg
loop
pop
push
out
add
inc
push
dec
ret
jbe
pushf
xor
xchg
cmc
and
push
lret
pop
je
mov
imul
movsl
ret
out
jge
pusha
jmp
stos
lret
push
or
xchg
inc
ds
mov
xchg
pop
adc
iret
adc
bound
repz
mov
mov
push
aam
mov
dec
inc
sarb
xchg
mov
rorl
testb
outsb
add
push
jmp
mov
pop
add
jbe
in
enter
add
jns
sbb
inc
pop
xlat
xchg
sbb
sar
ljmp
jno
lock
imull
xchg
cwtl
int3
icebp
out
std
jb
jg
dec
lds
sbb
and
push
iret
test
in
push
push
sti
jge
push
out
xchg
mov
sbb
inc
iret
test
movsb
add
or
xor
xor
fs
test
mov
or
push
and
les
movsl
pop
mov
jns
push
mov
pop
jb
and
ja
iret
arpl
xchg
mov
adc
add
enter
pextrw
or
mov
jl
push
xor
mov
inc
xor
lahf
lret
jno
je
dec
lret
fisubl
mov
dec
clc
sti
push
adc
idivb
fcmovu
pop
xor
shlb
dec
pop
push
andb
sbb
xor
sbb
and
in
inc
in
xchg
and
es
cmp
or
xchg
sbbl
xchg
dec
sbb
xor
mov
push
outsl
mov
push
ficoms
add
pop
imul
sub
xor
rorl
mov
jg
xchg
dec
push
sub
xchg
push
call
ret
inc
sub
mov
fiadds
add
mov
fiaddl
fld
pop
inc
push
push
fdivrs
inc
mov
lahf
fwait
test
cli
inc
loope
test
sti
popa
loope
xlat
testl
mov
fmull
jnp
sub
sti
test
dec
gs
flds
xor
int3
imul
dec
push
mov
and
adc
sub
inc
xchg
or
mov
psrlq
mov
xor
leave
enter
inc
sub
notl
ret
int
cmp
push
es
xchg
rolb
cmp
xchg
inc
mov
inc
arpl
jl
or
adc
mov
cld
xor
shll
inc
mov
das
jl
adc
mov
cmp
or
es
xor
cmpl
mov
xchg
pusha
xchg
lock
leave
pop
pop
mov
in
ret
fst
out
mov
push
cwtl
add
pop
sub
inc
pop
popf
jmp
mov
xchg
pop
or
imul
lods
and
ljmp
scas
sbb
dec
ret
std
out
lods
js
cs
loopne
pop
cli
mov
mov
popf
add
sti
je
cli
push
xchg
popa
mov
std
mov
and
scas
sub
inc
dec
cmpsl
hlt
mov
lods
subb
lock
insb
push
mov
or
stos
push
sub
add
cli
enter
sbb
lds
mov
mov
mov
out
jnp
push
inc
sub
ds
inc
sbb
xchg
test
push
jp
sub
pop
jle
cwtl
shlb
stc
mov
pop
mov
test
mov
xor
or
movsl
cltd
xor
aad
sub
xchg
sub
loope
jns
pop
pop
pop
lcall
sub
or
adc
push
xchg
and
inc
fs
push
pop
loopne
adc
lcall
mov
inc
cmpsb
scas
cmp
push
xchg
pop
loop
mov
cli
lret
scas
pop
jg
mov
sbb
sbbl
add
mov
jl
inc
inc
lahf
inc
and
add
ja
fistl
mov
jle
imul
jmp
fxch
dec
adc
bound
outsl
mov
loopne
and
xor
sub
enter
sbb
scas
out
pop
addr16
aad
jmp
inc
iret
mov
ss
movsl
mov
sbbl
fstpt
mov
ja
or
rcl
mov
sub
and
xor
fs
loop,pt
sbb
lret
sbb
sbb
mov
ss
insl
into
mov
inc
xor
jg
or
xchg
jle
dec
mov
call
mov
subb
push
dec
push
mov
adcl
loop
sbb
psubw
daa
push
mov
pop
lods
imul
in
test
loope
sbb
xchg
xor
fidivs
cwtl
cld
and
mov
cmpsb
in
cld
mov
push
inc
xchg
jns
in
scas
ret
in
mov
mov
cli
cmp
sub
jmp
or
or
or
cli
dec
adc
loop
adcb
sub
inc
push
mov
pop
mov
sbb
sbb
add
xor
orl
sbbl
push
and
out
jmp
lock
adc
pop
jg
and
addr16
outsb
stos
loopne
into
mov
mov
xlat
add
inc
push
aas
mov
xor
iret
push
sbb
int
push
jp
bound
popl
jge
adcl
fiadds
mull
loope
movb
sub
mov
fucomp
mov
lret
out
inc
ja
dec
bound
adc
aad
jo
leave
lods
testl
inc
dec
inc
out
pushf
cmpsl
sub
mov
shlb
push
xchg
popl
add
scas
sub
mov
jge
sub
and
ljmp
aad
in
xlat
cmp
dec
js
nop
mov
mov
sbbl
stc
add
adc
pop
fimuls
sbb
stos
sbb
push
ficompl
ja
push
sbb
pop
cmc
mov
ss
sahf
xchg
jns
or
pop
leave
xchg
sbb
add
push
std
and
pushf
movsb
data16
inc
jmp
fistpl
sub
lds
xor
push
sahf
mov
hlt
mov
insl
ret
adc
insl
mov
subb
mov
sbb
jle
and
xchg
cmp
ret
dec
cmp
or
in
add
jae
arpl
adc
mov
fsts
in
pop
notb
stos
xor
scas
dec
adc
mov
dec
pop
inc
stos
cmp
mov
pop
jno
outsb
cmp
or
xchg
insb
aam
lock
cmpsb
mov
int3
jle
repz
idivb
cmpl
cltd
test
fnsave
leave
push
mov
mov
lods
lods
outsb
and
adc
adc
iret
push
dec
push
rorb
in
test
pop
lock
movsb
cmpsl
test
rolb
or
xchg
push
testb
push
cmp
fcomi
lahf
jmp
pop
movsl
int
stos
cmp
mov
sub
scas
call
cmp
xchg
inc
mov
std
xor
sub
jl
in
mov
or
jmp
ds
nop
shrl
popa
sbb
lret
mov
push
fisubrs
dec
test
pop
mov
cli
cmp
shll
aas
rolb
ljmp
jle
sbb
jecxz
mov
xor
js
mov
loop
sti
je
lods
mov
nop
ja
stos
sub
pop
sub
popf
imul
dec
dec
adc
sbb
sub
dec
add
push
inc
xchg
mov
sub
add
jae
adcb
xor
cs
ficoms
pop
jae
pop
dec
add
lret
dec
jp
loop
xchg
xchg
dec
cmp
sarb
int3
or
inc
sbb
jnp
negb
and
jp
sysexit
xor
loope
ljmp
aaa
ss
xchg
add
lahf
loope
jne
icebp
push
push
repz
stos
out
dec
pushf
or
sbb
lahf
in
pop
adc
std
sbb
dec
outsl
push
test
push
sub
ljmp
repnz
adc
cmpl
sbb
rcrb
mov
push
aad
stos
das
sub
int3
pusha
cs
jb
xchg
in
sbb
xorl
arpl
notb
loopne
insb
or
push
mov
outsl
repnz
push
push
aad
or
in
xor
sbb
mov
sub
fstp
sbbl
xor
push
dec
cmp
mov
mov
sub
inc
mov
or
mov
scas
xchg
or
imul
das
jae
pushf
testl
lods
xor
stc
or
dec
je
or
dec
pop
mov
xor
std
cmp
adc
push
add
ja
or
arpl
idiv
sarl
adc
pop
pop
or
cmp
xchg
push
mov
mov
dec
push
mov
in
mov
inc
mov
rclb
icebp
ret
dec
cld
out
xlat
cs
or
imul
ljmp
fnstsw
and
mov
jle
or
mov
push
test
cmp
mov
pop
mov
push
push
ja
in
outsb
mov
push
lock
or
das
arpl
xlat
push
sub
les
sub
cmpsl
inc
stc
outsl
mov
jb
push
lahf
ljmp
movb
lea
out
pusha
testb
shll
stos
add
clc
mov
int3
pop
cmc
adc
cmp
mov
cs
push
das
loopne
aas
mov
rol
mov
mov
sub
out
jne
and
fnstenv
mov
sub
popa
xor
loopne
or
movsl
or
inc
xchg
adc
push
cltd
ds
add
or
std
push
cltd
xor
cmc
adc
sbb
loop
dec
xor
adc
movsl
rcrl
test
nop
jge
popfw
fs
mov
mov
adc
pop
adc
xchg
or
ret
cmpsb
sbb
adc
pop
xchg
jnp
imul
jle
flds
dec
cmc
js
sbb
add
dec
add
sbb
lods
jae
jbe
xor
sub
mov
xchg
roll
rcr
jae
aaa
push
mov
and
inc
out
call
or
sti
add
inc
sub
sti
adc
jmp
xor
push
mov
outsl
into
xchg
sub
call
and
fisubrs
dec
gs
jne
pop
fisubl
fcompl
cld
sub
daa
test
push
ficomps
pop
sub
mov
cmc
xor
fdivrl
mov
leave
add
add
icebp
leave
insb
roll
jg
aaa
pop
sbb
mov
int3
into
xchg
xchg
and
adc
adc
outsl
mov
mov
retw
xchg
xor
or
push
mov
pop
out
andb
push
dec
adc
mov
pop
cwtl
jo
xchg
inc
or
dec
fnstenv
and
push
std
inc
pop
mov
mulb
mov
fsubr
insb
xchg
jl
cmpsb
pushf
cmp
push
bound
in
sub
test
sahf
mov
add
icebp
jl
fstps
and
xchg
push
mov
in
std
sub
lret
shll
pop
push
loope
push
std
sbb
sub
nop
enter
and
sbbb
leave
and
add
xchg
push
das
jp
pop
sbb
fsubl
shr
mov
xor
std
sahf
mov
popa
sub
sbb
and
push
jno
inc
or
stc
pop
adc
test
idiv
xlat
sub
rcl
add
mov
arpl
mov
xor
pop
and
leave
js
cmp
mov
mov
pop
cmc
add
pop
push
aam
movl
xchg
in
mov
adc
inc
jl
add
pop
aam
ret
jecxz
cmp
ds
mov
pop
sbb
pop
call
xchg
movsb
lahf
jl
addr16
and
xchg
out
lahf
cmpsl
xor
movsl
xor
sbb
in
ja
outsb
dec
xor
stc
test
loop
and
out
rolb
dec
imul
movsl
pop
mov
cmp
xchg
dec
testb
mov
sbb
pop
call
or
mov
cmc
and
dec
dec
jge
sti
imul
repnz
hlt
mov
lock
mov
pop
out
fwait
rcrb
mov
jg
in
insl
mov
sti
sbb
cld
pop
loop
jb
shll
pop
xlat
adc
sbb
cmp
cld
add
sbb
out
pop
add
cld
bound
jnp
out
xchg
jns
cmp
cmp
cli
in
sub
aad
or
sahf
lcall
xchg
lds
hlt
lret
jns
dec
leave
xchg
xor
inc
push
lcall
addr16
dec
lds
arpl
xor
gs
jo
mov
or
aas
adc
pop
and
xor
xchg
add
aaa
fs
pusha
sbb
sbb
adc
jne
rcrb
repnz
mov
cmc
es
pop
ret
idivb
dec
push
dec
mov
call
fsubs
popa
fsubrs
into
sub
dec
jo
pop
leave
push
cmpsl
int
loope
jb
mov
gs
bound
inc
out
jns
ss
xor
push
pop
xchg
jae
and
or
or
movsb
icebp
or
aas
mov
pop
fs
dec
xlat
call
inc
jo
sbb
jae
cmc
dec
mov
lret
and
inc
inc
out
imul
pop
push
mov
mov
pop
mov
or
mov
dec
cs
scas
enter
dec
mov
mov
add
shrl
scas
sbb
sub
daa
insl
cwtl
mov
jne
test
mov
mul
lcall
lahf
out
push
push
xchg
sarl
adc
jp
inc
jo
aam
push
imul
inc
add
insl
push
jle
into
test
adc
fstps
inc
outsb
cmp
sbb
or
mov
cmp
push
mov
sbb
ljmp
add
adc
and
inc
mov
or
ds
cli
jne
scas
sub
imulb
cmp
movsb
cwtl
cmc
mov
mov
sub
mov
pusha
mov
outsl
aas
jns
xor
mov
aaa
jno
aam
pushf
adc
or
lret
aam
lcall
mov
add
insb
jmp
dec
lcall
fmull
xchg
int
ret
shr
filds
or
xchg
adc
dec
test
jae
xchg
push
mov
dec
pop
testl
push
inc
arpl
or
mov
aas
negb
ss
fnsave
into
cmp
mov
data16
inc
mov
push
sub
push
sahf
scas
inc
jbe
adc
pop
or
pushf
sub
fcom
xchg
sub
mov
aam
pop
in
call
mov
mov
jbe
repnz
mov
and
jmp
cmp
test
mov
mov
insb
mov
mov
jb
adcb
add
inc
andb
dec
jecxz
fistl
loope
inc
scas
jmp
jl
push
pop
jmp
or
jnp
fimull
cmp
add
rcl
aam
cmp
in
lds
rcrb
push
fcmovb
mov
jp
mov
adc
std
psubsb
push
sub
lods
jmp
in
jl
pop
add
pop
enter
xchg
pop
cmp
les
imul
pop
push
jecxz
xchg
xor
xchg
insb
xor
sbb
add
xor
xchg
xchg
dec
fcoms
icebp
mov
pop
mov
push
scas
cmp
sub
out
push
xor
inc
sbb
je
push
stos
jbe
pop
out
enter
cmc
test
push
sbb
jo
movl
std
insb
jnp
lahf
push
jg
testb
shrb
lds
jmpw
or
daa
cwtl
jl
dec
sub
pop
sub
mov
rcrl
or
mov
repnz
fsubrl
out
cmp
sbbb
push
jg
jl
lods
cmp
or
xlat
int3
push
cli
adc
repnz
incb
jb
pop
dec
test
sahf
mov
repz
add
mov
mov
popa
mov
mov
sbb
xchg
scas
ret
pop
lods
push
mov
scas
lret
aas
mov
cmpsb
sbb
adc
in
push
mov
jge
andb
inc
inc
orb
inc
xor
xchg
mov
in
jae
pop
lcall
lds
add
in
dec
idivl
xlat
xchg
mov
sbb
in
cli
mov
push
bnd
xchg
shll
cmp
fistps
f2xm1
add
push
imul
clc
add
std
push
test
dec
jne
add
xlat
and
mov
jmp
sbb
lods
stos
test
cmp
xchg
adc
add
loope
mov
ss
shlb
rcl
inc
sbb
int
or
and
xor
mov
cmp
push
adc
aas
add
push
and
daa
adc
js
in
fildl
test
sub
popa
sbb
test
loop
les
enter
loopne
jb
movl
arpl
fnsave
stos
adc
push
inc
shll
mov
fisttps
jb
sbb
xor
hlt
push
dec
mov
mov
sbb
ljmp
push
imul
stos
cltd
lock
mov
pushf
push
pop
push
mov
js
mov
mov
mov
std
add
imul
int3
lcall
std
mov
inc
push
cs
inc
mov
cmp
cltd
mov
sti
pop
call
jge
aam
shlb
aaa
inc
pop
cmp
jno
gs
ret
xorb
pop
leave
insl
scas
lods
and
sbb
fsts
lods
daa
fst
mov
xchg
cltd
pusha
mov
bound
jle
enter
mov
test
out
arpl
test
out
fdivs
sub
mov
out
daa
sbb
icebp
cmp
decb
mov
lods
add
out
pop
in
xlat
test
adc
outsb
xor
cmpsb
xchg
packsswb
sbb
out
popf
cmp
cli
cwtl
aam
mov
stc
mov
pushf
jmp
lcall
lret
incb
cmpsb
sbb
rcrb
cmpsb
or
loop
or
add
dec
push
mov
jecxz
mov
into
sahf
jge
dec
repz
pop
sbb
or
inc
adc
mov
sar
cld
out
add
sbb
xchg
lock
cmc
jo
xchg
fwait
sarb
je
repnz
inc
ret
mov
xor
push
jne
dec
and
scas
movsl
or
dec
out
mov
sbb
xor
popa
ja
inc
mov
adc
repz
push
subl
xor
loop
cmp
mov
rcrb
orl
lds
and
fdivl
mov
fmuls
and
mov
cmp
and
imul
push
mov
loop
push
jae
xchg
mov
xchg
fldcw
xor
movsb
xchg
add
ljmp
movl
mov
mov
push
mov
mov
pop
mov
xor
insl
xor
imul
lahf
ficoms
push
mov
lea
ja
push
cmp
pop
rcrb
cmp
test
adc
mov
notl
movsl
in
shll
cld
inc
sub
adc
rorl
addr16
icebp
xchg
cmp
push
dec
iret
pop
insl
ret
mov
repz
xchg
cmp
xor
or
jecxz
lds
repnz
imul
sbb
js
xchg
rcrl
out
les
mov
pop
mov
jg
dec
or
clc
mov
jp
sub
repz
fcoml
outsb
aas
out
lds
mov
adc
inc
repnz
mulps
and
sub
hlt
fistpll
out
shrl
icebp
xor
pop
mov
push
mov
inc
mov
cmp
sub
out
cmp
mov
iret
repz
mov
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
inc
cmp
mov
jnp
sub
jmp
scas
push
out
test
jp
mov
add
loope
fwait
dec
cli
fwait
iret
and
in
movsl
fs
jge
std
adc
adc
jo
loopne
jb
shll
aas
add
loopne
add
int3
or
fiadds
inc
inc
dec
and
and
clc
xor
into
jge
aad
out
enter
data16
mov
repz
xchg
pop
cli
mov
fisubrl
pop
inc
add
ret
sbb
lods
pop
add
filds
es
cmc
jmp
jge
sbb
dec
pop
outsl
aaa
xchg
cmp
in
cmp
js
inc
push
cmp
andb
arpl
ret
mov
push
out
int3
in
dec
adc
int3
sub
cmc
mov
lea
sbb
add
dec
or
mov
sbb
jge
lods
jp
inc
xchg
push
sbb
sbb
push
lea
inc
mov
push
movsl
mov
fs
mov
push
sub
or
or
push
add
ss
pop
daa
icebp
daa
fcomps
iret
or
int3
imul
xor
rcrl
leave
ss
jb
lock
push
insl
leave
mov
cmp
mov
dec
lret
movl
js
inc
xorb
sbb
mov
sbb
cmp
dec
popf
cmp
xchg
daa
lahf
enter
scas
dec
mov
xor
scas
jne,pt
mov
xor
fdivs
jge
xlat
dec
push
iret
pushf
adc
fwait
xor
or
gs
or
mov
sbb
or
out
inc
dec
jo
mov
fcmovu
es
adcb
bsr
mov
mov
aad
fwait
repnz
mov
bound
xchg
scas
ja
mov
xchg
push
adc
mov
xor
in
stos
or
push
sahf
ljmp
outsb
cmc
cltd
pop
ja
dec
test
mov
lcall
xchg
hlt
xchg
lock
dec
pop
aad
mov
and
ljmp
pop
fdiv
jo
jmp
xchg
push
push
or
arpl
cmp
fmull
adc
sub
test
hlt
ret
pop
and
xor
mov
mov
gs
cmpsl
mov
mov
std
mov
sbb
roll
frstor
xchg
sub
mov
mov
fsubl
inc
in
loopne
mov
pop
movsb
push
repz
add
cli
and
pusha
cwtl
add
dec
mov
inc
hlt
and
mov
push
iret
and
imul
outsl
inc
cmp
or
adcl
pushf
push
insl
movsb
mov
sub
inc
add
ss
lds
mov
dec
shll
inc
inc
mov
inc
les
dec
mov
mov
movsl
inc
jmp
test
cld
or
push
add
lahf
and
xchg
cmpsl
outsb
fldenv
pop
mov
adc
pop
cwtl
mov
imul
mov
sbb
xchg
push
scas
lret
rcr
pushf
sub
cld
adc
stos
push
repnz
out
pop
push
jmp
neg
push
mov
push
dec
cmp
bts
adc
out
push
out
sbbb
leave
mov
mov
mov
mov
loope
out
fdivl
jo
sbb
xor
aaa
dec
adc
pushf
push
cltd
adc
fadds
or
sbb
popa
cld
sbb
nop
icebp
std
pop
call
subl
xlat
cmp
sub
push
jns
jmp
xor
jno
mov
insl
adc
test
andb
sarb
jl
push
add
popa
call
daa
jnp
psubb
lcall
mov
pop
pop
fstl
pop
sbb
dec
mov
shlb
ret
mov
sbb
decb
xor
iret
jno
or
aas
fst
test
pop
mov
sub
mov
cmp
push
jbe
pop
mov
inc
mov
xchg
xchg
jge
xor
adc
mov
inc
xchg
xchg
adc
or
andb
xchg
movsl
jae
inc
insl
inc
ss
jne
les
shll
cmp
sarb
and
idivl
aam
push
cltd
lret
int3
inc
pushf
inc
lock
jbe
inc
hlt
into
out
sbb
scas
outsl
lds
sub
xor
out
pop
mov
mov
xchg
push
adc
bound
mov
pop
push
sarb
dec
inc
cmc
xchg
loopne
jne
pop
push
daa
cli
xor
xorps
sub
push
mov
bnd
cmp
sbb
mov
mov
insb
aam
or
dec
mov
gs
fadds
and
push
mov
cmp
movups
ret
dec
inc
incb
cmp
aad
xor
adc
dec
loop
in
dec
enter
stos
addr16
push
sar
test
xor
inc
outsb
testl
arpl
js
jg
mov
jl
lea
fwait
jle
dec
cmpb
inc
test
inc
jno
aaa
stos
mov
rorl
mov
scas
stos
pop
mov
jno
push
or
lcall
into
xchg
push
cmpsb
cmp
testb
mov
rcrl
test
enter
cmp
jp
mov
xchg
rcrb
pusha
daa
out
int
and
or
out
adc
out
imul
and
dec
jle
lds
mov
rcl
and
orb
pushf
mov
test
jno
pop
orl
dec
add
fndisi(8087
ret
cmp
sub
push
repz
push
mov
popf
push
mov
test
mov
in
mov
xor
nop
decl
inc
gs
scas
jne
icebp
inc
stos
push
pop
enter
ficoms
out
mov
aad
aam
je
int
dec
or
jae
inc
pop
push
popa
repnz
dec
dec
fmull
aas
daa
and
jbe
jae
jmp
inc
push
jmp
imul
fsincos
adc
dec
bound
jle
das
dec
test
fdivrl
dec
in
adc
lret
jl
cltd
push
dec
cmpl
or
inc
in
mov
icebp
ror
mov
jmp
cli
nop
mov
shll
push
into
sbb
fs
cmpsl
lds
nop
or
out
push
test
mov
sub
aaa
clc
aas
mov
xor
mov
adc
or
adc
cmp
mov
repnz
mov
aas
add
push
leave
mov
roll
hlt
ffree
pop
dec
loope
mov
outsb
push
mov
push
aas
or
or
and
int3
sahf
out
sub
adc
mov
cmp
sti
popa
or
push
stos
mov
pop
dec
out
insl
or
jb
je
lcall
addl
in
dec
or
rcrb
sbb
mov
pop
adc
xchg
lcall
rcrl
sbb
or
or
arpl
mov
jle
pop
jne
push
jne
xchg
lret
int
ds
jp
sub
and
adcl
jno
inc
mov
adc
pushf
test
lock
pop
lret
xchg
add
out
dec
bound
rcll
add
and
dec
pop
jns
jb
flds
mov
lods
inc
cmpsb
sbb
and
mov
stc
jmp
cmpsl
mov
out
lahf
mov
gs
jp
mov
xlat
ja
jecxz
jo
movsb
stos
repnz
gs
sub
popf
mov
inc
sub
mov
jle
push
inc
cltd
cmp
mov
adc
lods
xchg
push
imul
pop
popa
insl
add
push
dec
dec
bound
push
notl
iret
xor
mov
mov
cmp
js
cmpsb
mov
or
sub
mov
lods
cmp
pushl
or
jg
pop
sub
mov
mov
cli
sbb
push
loopew
lahf
pop
push
dec
and
sub
cmp
add
inc
fwait
cld
jnp
push
rcrb
insb
mov
push
or
dec
pop
scas
ss
out
xor
sbb
xor
lahf
aad
xor
jno
cli
stc
or
and
mov
mov
sbb
add
sbb
or
ljmp
push
arpl
pop
int3
fldt
sbb
in
fisttps
adc
shrb
pavgb
movsb
add
push
xchg
cwtl
dec
lock
in
js
xchg
dec
cmp
mov
cmp
dec
or
jae
xchg
xor
jmp
xor
jb
sbb
mov
add
popa
jns
push
cmp
mov
bound
insl
xchg
sbb
nop
movl
and
negb
adc
lock
clc
mov
or
int
and
and
testb
movlps
repnz
inc
popf
mov
mov
insb
daa
or
test
stc
mov
jge
int3
repz
jmp
sub
call
mov
fisttpl
adc
add
cmp
imul
lods
je
test
fstps
dec
xchg
push
adc
mov
or
mov
insl
jnp
mov
xchg
mov
popa
dec
shr
cmovb
mov
xor
push
les
inc
jb
jnp
jg
insb
scas
add
cli
sbb
sub
insb
mov
mov
pop
hlt
adc
or
jmp
mov
fstp
fildll
mov
mov
inc
sbb
cs
fnsave
scas
mov
lds
jle
sbb
add
jne
push
cmp
icebp
sti
stos
test
subb
arpl
pop
xor
adc
push
test
rorb
jle
outsb
je
sub
sbb
push
mov
jne
add
ljmp
movsb
shll
pop
xchg
or
mov
or
sub
in
and
add
aad
repz
cmpb
sub
in
mov
mov
ljmp
or
clc
or
cmpsb
sahf
jbe
ss
jbe
stc
fmuls
ss
jmp
xchg
bound
in
icebp
insl
outsl
ljmp
add
int3
jnp
push
dec
nop
insl
leave
sub
xor
mov
pop
scas
shrb
dec
xor
outsl
sub
rcl
push
les
std
xor
cmc
and
adc
cld
sub
xlat
icebp
in
jmp
hlt
iret
or
out
pop
rcrl
cmpsb
ss
and
cwtl
lret
fwait
and
inc
call
mov
aaa
scas
xchg
loopne
sbb
sbbl
test
lods
mov
sub
dec
add
jns
mov
jns
lods
inc
lods
popa
xchg
setg
push
femms
and
jge
or
push
in
popa
adc
xchg
clc
cmp
add
out
test
out
push
xchg
jg
push
cmpb
cld
push
ss
mov
inc
dec
mov
daa
dec
sub
mov
mov
int
mov
push
bound
push
push
addl
mov
or
mov
loopne
sbb
lret
sub
fmull
inc
nop
clc
mov
xor
icebp
out
mov
add
insb
dec
jg
scas
jg
std
fsubl
mov
push
sub
out
aaa
adc
adc
or
imull
add
mov
int
movl
jb
nop
ljmp
mov
jnp
mov
jl
stos
xor
fldcw
jp
in
push
dec
ds
sub
xchg
push
daa
outsl
xchg
push
test
cmpsb
adc
xchg
push
in
pop
jl
bswap
cltd
jno
roll
loop
push
les
imul
dec
insb
lret
xor
sbb
mov
cli
aad
sbb
dec
mov
aam
cmpsl
mov
test
push
inc
sub
sahf
push
xlat
push
aam
scas
imul
adc
fdiv
aas
cmc
and
inc
inc
adc
push
sahf
xlat
dec
scas
in
sahf
das
movd
xlat
jno
cmpsl
add
or
call
out
jmp
aas
push
jle
cmpsl
inc
push
das
mov
in
jo
xor
cmp
or
inc
jnp
insb
scas
sub
shlb
dec
sbb
aas
fs
sbb
or
pop
andl
sbb
js
into
push
inc
jecxz
js
push
inc
mov
std
mov
jb
mov
leave
das
inc
fimuls
shlb
cli
xacquire
jmp
insb
dec
fsubrs
arpl
pop
xchg
or
sub
aas
and
scas
outsl
pop
xorl
sbb
sbb
fdiv
xor
daa
aas
scas
popf
sbb
ja
mov
int3
aad
inc
fcoml
fwait
loope
fildl
ficomps
nop
shlb
test
push
out
aaa
push
xchg
mov
in
std
hlt
ljmp
dec
cmpsb
shlb
les
sub
mov
push
div
leave
pop
nop
les
jne
daa
hlt
sbb
inc
sti
mov
pop
inc
repnz
pop
mov
push
divb
push
fisubs
inc
lret
cmp
jge
dec
cmovne
and
loopw
dec
and
mov
add
es
jnp
loopne
sub
leave
pop
mov
sbb
data16
pop
fcoml
xchg
orl
jg
shll
jecxz
aad
jmp
pop
neg
ret
pop
mov
add
popa
jbe
inc
jge
shlb
xchg
xchg
arpl
add
cmp
sarb
push
sbb
and
pop
sub
addb
jge
jno
fiaddl
shr
nop
sub
mov
add
xor
cmpb
jne
adc
imul
dec
push
nop
ret
sub
cmpsb
jge
and
adc
xchg
push
or
mov
cmp
fldpi
mov
inc
xchg
aaa
test
repnz
pop
jmp
dec
mov
xchg
jo
and
shr
cmp
js
ds
mov
pop
mov
int3
and
fbld
int3
imulb
aas
fcompl
daa
add
push
outsl
xchg
mov
outsb
mov
faddl
dec
xchg
sbb
adc
inc
popa
mov
cltd
push
mov
dec
mov
cld
fildll
inc
dec
xchg
add
ljmp
xlat
inc
xor
icebp
ret
daa
add
or
push
xor
push
stos
inc
aam
loopne
sub
lea
inc
adc
dec
jmp
dec
sub
pop
sub
inc
cli
or
xchg
ja
sbb
jns
cs
jl
mov
mov
push
add
mov
dec
outsl
shlb
outsl
ds
jb
lods
push
adc
adc
jg
and
sbb
push
pop
pop
es
cmp
jbe
and
out
inc
dec
inc
jns
aad
xchg
dec
imul
js
or
push
pop
mov
mov
push
mov
cld
mov
addl
xor
sti
rorb
push
cs
in
fsubrs
sbb
repz
xchg
cmp
lret
push
int
push
pop
or
pop
mov
call
ret
pop
cmpsb
ja
faddl
inc
fisubrl
out
add
dec
mov
dec
inc
std
dec
mov
mov
subb
fbstp
in
sti
dec
push
adc
dec
xor
xor
pop
and
and
xchg
push
inc
pop
test
stos
nop
pop
into
outsb
ficompl
fstl
dec
pop
mov
rclb
mov
mov
ja
call
jl
popa
or
or
ret
fimull
data16
jns
imulb
lea
xchg
sbb
test
lahf
push
leave
add
cld
jp
fwait
mov
inc
int3
mov
sub
pop
sbb
sbb
in
ljmp
ja
sub
je
iret
mov
dec
mov
ds
or
sbb
mov
xchg
jno
test
mov
mov
inc
stc
es
xor
and
push
xlat
mov
lcall
pop
data16
adc
cli
dec
fbld
mov
fsts
fstps
xchg
aam
add
pop
loop
popa
pusha
aaa
push
shr
add
repz
out
mov
cli
stos
leave
out
push
sub
sbb
dec
mov
gs
jecxz
popf
incb
mov
pop
push
jo
jb
mov
mov
and
sahf
lahf
aam
mov
movsl
mov
jne
push
orl
pop
scas
inc
inc
sub
daa
scas
cld
jae
bound
push
dec
int
icebp
cmpsl
mov
lods
xor
mov
mov
sub
arpl
or
stos
test
lock
xor
sarl
add
lcall
lahf
fidivs
iret
or
jne
jecxz
scas
std
push
lcall
sahf
mov
push
sti
in
adc
xchg
mov
dec
lods
jae
popf
pop
stos
ss
add
test
out
mov
rolb
aam
sbb
adc
inc
adc
insl
xor
aam
int3
aaa
cwtl
push
testb
xchg
int
repz
jns
mov
xchg
aam
jns
xor
ficoms
les
fdivp
mov
jg
xlat
dec
xchg
hlt
or
mov
cmc
add
scas
cmp
mov
inc
cli
adc
js
inc
rcl
lret
dec
test
aam
andl
popf
mov
stos
sub
mov
cmp
mov
pop
mov
sbb
sti
nop
movsb
imul
sub
sbb
cli
xor
bound
aaa
adc
sbb
jne
jl
leave
shl
pop
fs
push
pop
dec
inc
add
push
jb
jge
add
cld
pop
es
xchg
orl
push
dec
push
xchg
mov
stos
cli
ret
mov
pop
js
mov
xor
push
push
enter
hlt
dec
jmp
pop
mov
ret
mov
pusha
jbe
adc
adc
xlat
pop
add
call
sbb
addr16
mov
js
pop
dec
xor
fldl
mov
pop
jbe
xchg
add
inc
pop
imul
add
pop
adc
and
xchg
fmuls
mov
sub
push
and
sarb
hlt
scas
xchg
push
test
push
adc
add
ficoml
pop
arpl
std
stos
push
leave
pop
pop
jg
sbb
sub
ret
cli
scas
or
scas
mov
sub
cltd
lock
std
cmp
jae
add
adc
cmp
test
dec
decl
movsb
or
adc
push
and
xor
mov
popa
and
mov
stos
pop
loop
sbb
inc
jg
fidivs
mov
mov
cmpb
scas
popa
jne
sub
or
inc
jge
xchg
push
rorl
xor
jne
mov
inc
cli
shl
fistpl
bound
xor
push
dec
mov
cmpsb
xchg
testl
shll
imul
test
or
int
repz
addr16
pop
frstor
es
pop
in
popf
dec
cmp
gs
icebp
mov
xchg
movsl
cli
leave
mov
jl
ljmp
adc
sub
fcmovbe
popf
cmc
mov
rcr
enter
inc
sbb
dec
jmp
xor
xchg
mov
ret
sub
scas
es
sub
mulb
les
xlat
lret
mov
xchg
pop
push
lret
adc
sbb
fidivl
sti
lret
lret
add
xlat
push
subb
repnz
maskmovq
divl
pop
iret
pop
stos
test
in
pop
bnd
pusha
and
sub
imul
inc
int
inc
in
jg
in
xlat
nop/reserved
sbb
mov
iret
lea
jne
std
in
add
mov
into
clc
mov
prefetcht1
out
adc
push
xor
cli
cmp
jne
xchg
mov
xchg
addb
cwtl
jnp
mov
enter
cwtl
mov
and
mov
or
sub
iret
mov
repz
cmp
xchg
sahf
movsb
pop
cmp
xchg
xor
mov
push
rclb
js
out
ljmp
outsb
jg
jns
shll
mov
cmp
movsb
rorl
push
pushaw
jae
push
imul
lds
fcomps
mov
and
fildl
test
out
test
clc
cmpsl
jle
adc
cwtl
mov
sbb
in
cmp
push
xchg
xorb
cmp
or
pop
jp
clc
pop
insb
jg
push
sbb
in
ficoms
je
push
popf
inc
sub
mull
adc
out
popa
push
loope
and
imul
pop
mov
out
notl
cmp
mov
xchg
mov
es
insb
cs
pop
xchg
lods
xchg
or
jae
mov
dec
xlat
and
cmp
cmp
movsb
mov
dec
add
push
jg
inc
sbb
cmpsb
sbb
pop
and
and
adc
mov
sub
mov
stos
or
push
lcall
ja
pop
and
iret
mov
je
xchg
es
repz
subl
mov
push
loopne
jb
inc
sub
orb
xchg
push
mov
loopne
aam
xor
sub
out
pushf
lcall
lea
mov
xor
lock
mov
push
roll
loop
ljmp
adc
orb
jnp
xchg
dec
in
aam
dec
push
mov
jb
cld
andb
cwtl
jecxz
outsl
sarb
in
mov
stos
xor
sub
or
fistps
jne
test
es
popa
cmc
movsl
popa
dec
dec
aam
aaa
scas
nop
adc
popa
inc
int3
jmp
aas
or
adc
xchg
jg
mov
jb
repnz
je
inc
scas
sahf
xchg
in
cmpsb
mov
push
adc
lds
in
pop
sbb
jb
inc
cmp
aaa
js
xchg
inc
adc
bound
shll
jb
push
fwait
xchg
pop
sbb
push
sahf
dec
fimuls
popf
lods
push
stos
addps
mov
shrb
sti
xchg
into
mov
negl
popa
int
mov
adc
mov
fimull
mov
jns
mov
pop
fisubl
lea
mov
ja
out
sub
fxch
jmp
sbb
xchg
aad
mov
push
sti
bound
test
lods
jb,pn
ss
mov
andnps
or
test
push
insb
adc
out
mov
roll
shlb
cltd
sub
in
rep
movsl
and
aad
or
outsl
shl
dec
mov
xor
pop
icebp
fs
imul
sub
std
pop
adc
jne
adc
lods
test
push
dec
nop
mov
std
leave
or
cmp
les
ret
adc
mov
mov
jl
mov
in
adc
or
xor
negl
sbb
mov
fwait
mov
push
xlat
cmp
push
pushf
dec
mov
cs
add
fbld
inc
shl
imul
push
sbb
add
in
ja
scas
xor
test
xchg
fs
xchg
jl
xlat
xchg
testb
ss
xor
bound
xlat
out
mov
mov
aad
push
cmp
sbb
mov
xchg
xchg
push
mov
push
gs
jl
adc
and
pop
dec
jnp
rolb
sbb
into
ffreep
popa
cmp
jnp
sbb
ja
js
mov
pop
stos
lret
loopne
daa
in
fnstsw
mov
push
int
mov
fadd
notl
pop
call
imul
push
jl
scas
test
add
push
lret
mov
loop
jge
pushf
orl
mov
sti
jns
imul
mov
pop
fwait
pop
inc
ljmp
inc
mov
scas
in
sub
data16
mulb
mov
push
popa
sbb
in
jmp
add
xor
fstl
push
shrl
ret
mov
mov
xor
jnp
ja
xchg
mov
push
aam
scas
mov
shll
adc
or
sti
sti
jns
adcb
lcall
jb
lods
push
mov
add
adc
stos
mov
push
bound
es
call
roll
hlt
shll
insl
sub
aad
scas
mov
mov
fdivl
in
shl
jo
pop
sub
inc
and
push
dec
xchg
jns
std
sub
imul
ja
popf
sbb
sbb
cmpsb
or
and
loop
dec
out
push
sub
mov
mov
dec
mov
push
scas
dec
adc
sub
cs
mov
mov
pop
mov
cmp
scas
xchg
addr16
rolb
and
push
cmpsl
push
dec
lock
inc
scas
cli
dec
je
jns
pop
adc
stc
sbb
stos
push
mov
dec
imul
filds
mov
mov
das
bswap
push
fsubrs
cmp
aas
ret
cmc
inc
nop
jbe
dec
adc
xchg
cltd
jle
mov
sub
jne
add
insl
cmp
bound
adc
inc
aas
lcall
sub
pop
or
xchg
jno
repz
push
mov
push
pop
ja
jbe
mov
mov
in
xchg
inc
in
pushl
cmp
dec
pushf
sub
push
out
push
popa
stc
dec
addr16
enter
lret
subb
inc
sti
orps
paddd
testb
loope
fisttpll
fldl
push
testl
fdivs
inc
pushf
add
fsubs
mov
xchg
xchg
in
cmp
mov
cmc
lods
add
jb
xchg
push
iret
mov
imul
or
cli
addr16
mov
or
in
mov
jmp
pop
div
sbb
cwtl
jp
mov
out
test
add
push
mov
ljmp
jle
or
jmp
pop
inc
outsb
loop
xor
jnp
jo
rclb
xor
std
js
sbb
addr16
shrb
xchg
adc
jb
xor
add
popf
stos
sub
sbb
in
lock
sub
fcompl
idiv
insb
int
data16
sbb
mov
mov
pop
cwtl
addr16
icebp
shrb
mov
repz
mov
xchg
push
jns
adc
ljmp
aaa
mov
mov
xchg
sub
lcall
adc
leave
dec
enter
cld
jno
pop
mov
jns
push
inc
pop
xchg
adcb
cmpsb
sub
std
imul
in
cmc
dec
add
imul
dec
popa
ljmp
sub
addr16
out
dec
adc
adc
das
and
ja
subl
mov
sbb
push
inc
jne
sub
pop
xchg
pusha
test
sbb
cld
sbb
mull
sub
psrlq
sub
adc
jbe
mov
cmpsb
sti
popa
inc
shrb
das
xchg
add
ret
mov
pop
sti
jecxz
mov
ss
ror
sbb
testb
ljmp
repz
mov
fstps
mov
adc
xor
cmc
push
cmp
mov
jb
shlb
mov
add
sub
aaa
ljmp
enter
dec
jnp
gs
lock
xor
mov
xchg
rcrl
arpl
jo
push
mov
pop
and
or
aaa
push
bound
imulb
int
andl
rclb
mov
mov
sbb
dec
xlat
dec
cld
adc
dec
mov
int3
sbb
mov
mov
push
adc
aas
fcomp
push
push
fldpi
adc
stc
loop
and
iret
or
cltd
mov
rorb
inc
ljmp
icebp
jmp
lea
imul
je
addr16
mov
loope
cmpsb
bound
notb
or
icebp
push
mov
xchg
mov
rcrb
mov
jne
pop
fimull
mov
inc
outsl
fnstsw
mov
cltd
notl
movsb
les
inc
add
mov
into
sub
mov
inc
imull
out
xchg
pop
push
dec
or
dec
cmp
scas
inc
lret
sahf
movsl
sbb
dec
or
dec
sbb
stc
int3
cltd
popa
shlb
bound
arpl
pop
into
or
push
sub
repnz
negl
add
xchg
mov
imul
iret
cmpsl
push
sbb
mov
xor
xor
jnp
rclb
imul
sbb
lods
cmc
push
lcall
push
dec
and
mov
and
subb
cmc
inc
xor
inc
mov
int3
adc
test
pop
lock
mov
orb
les
out
fneni(8087
push
jae
clc
sub
scas
fmulp
sub
and
adc
out
or
xchg
stos
movsb
push
jo
stc
pop
xchg
not
inc
xchg
orb
mov
mov
out
fsubs
cli
xor
repz
outsl
rcrb
mov
imul
pusha
scas
jb
mov
out
ss
xchg
popf
or
sub
mov
lahf
jae
mov
xchg
bound
fiaddl
or
lea
pop
push
icebp
mov
in
cmp
dec
cmp
jmp
xchg
pop
in
xchg
arpl
or
dec
and
lods
xchg
lds
addr16
pop
std
jno
pop
and
ret
pop
adc
testb
sub
fs
xor
les
xor
ljmp
out
out
mov
pop
jae
loop
test
sbb
jo
roll
movsb
shrb
inc
inc
nop
sbb
push
xorl
add
pop
nop
gs
imul
mov
lcall
call
add
neg
xor
lds
or
sbb
dec
cmp
or
enter
push
adc
fs
lods
hlt
xor
jle
loopne
or
call
in
xchg
sbb
in
les
or
inc
xlat
add
jne
loop
out
dec
or
in
pop
imul
dec
fistpl
or
sub
leave
shrb
ja
sub
dec
or
stc
mov
scas
mov
addl
xor
pushl
pushl
mov
call
mov
jmp
xchg
roll
push
mov
negb
je
mov
jle
jp
mov
out
sub
push
and
push
mov
adc
mov
jle
xor
adc
pop
into
divl
cmp
pop
push
scas
xlat
flds
xchg
rolb
stc
lret
cld
inc
scas
lds
inc
insl
cmovle
dec
xchg
aas
adc
jnp
mov
mov
sbbl
inc
mov
ljmp
xor
pop
inc
movsb
sti
dec
and
xor
mov
enter
test
xchg
mov
insl
inc
daa
repz
xor
lock
mov
pop
insb
jb
xchg
stc
sub
icebp
inc
leave
mov
add
sbb
into
cwtl
mov
mov
scas
and
lea
cli
jp
xor
popa
inc
and
adc
adc
jg
jb
gs
sub
ds
mov
pop
sub
jbe
ljmp
mov
dec
int
jle
xor
jb
les
stos
mov
pop
dec
pop
mov
loop
shll
push
dec
aas
ds
mov
xchg
sahf
push
sub
xorb
fsts
ja
addr16
std
xchg
dec
add
fimull
dec
jge
into
jmp
and
lcall
scas
sahf
sarl
ret
rcll
mov
dec
aam
cmp
loopne
pop
xor
insb
mov
scas
int
mov
js
in
push
data16
mov
pushf
adc
xchg
into
jnp
add
mov
jl
in
cmp
xchg
adc
addr16
fbld
push
stos
push
daa
data16
and
cmp
clc
out
mov
loopne
jp
es
fsts
mov
or
imul
mov
inc
lret
mov
add
dec
jnp
inc
int
sbbb
sub
inc
pushf
into
outsl
xlat
out
movsb
pop
lds
test
in
mull
dec
cmp
rcll
or
pop
test
sti
in
in
or
hlt
push
movsb
adc
jns
testb
add
jae
js
xchg
dec
std
dec
sbb
fwait
jmp
fwait
jbe
jle
dec
cmp
cmp
out
imul
sti
movsl
gs
mov
sub
push
push
adc
mov
testb
jge
push
test
gs
sub
xor
or
iret
cld
pop
add
xchg
jns
aas
repz
push
rol
sub
push
sub
adc
mov
pusha
sti
aas
xchg
scas
mov
movsl
mov
loope
mov
notb
and
in
xchg
loopne
xor
jmp
pop
and
xor
mov
repnz
ror
add
push
iret
mov
mov
inc
xchg
sarl
jnp
call
jmp
pop
in
int
lret
or
jb
lret
sub
cmp
xchg
mov
cltd
mov
rclb
cmpsb
push
shlb
mov
adc
or
fnstcw
dec
lea
dec
sbbl
decb
mov
mov
mov
and
stos
push
lods
add
jbe
mov
mov
aad
inc
mov
daa
mov
cmp
push
ss
movsb
mov
xchg
mov
icebp
in
stos
mov
xor
sub
push
pop
rol
or
lods
imul
inc
push
gs
dec
push
jno
inc
mov
inc
stos
ss
in
ja
mov
int3
test
test
jns
lds
mov
stos
and
nop
or
data16
iret
outsl
scas
test
pop
mov
jmp
and
pop
dec
cmp
sbb
push
test
pop
xchg
repz
xchg
stc
mov
aam
fidivrs
push
call
mov
aaa
jl
mov
lcall
pop
lcall
pop
jle
imul
or
pushf
int
push
inc
mov
mov
jnp
das
sbb
pop
fwait
cs
lods
inc
adc
inc
inc
mov
and
adc
mov
iret
jecxz
out
add
sub
push
mov
popa
mull
int
xorb
jg
push
add
int
popa
xor
xor
and
push
inc
mov
mov
fstps
add
push
xlat
les
jo
xchg
lret
les
or
add
pop
pop
leave
ret
push
mov
sub
movl
movzwl
and
mov
lea
adcl
mov
mov
adc
push
add
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
mov
mov
orl
mov
mov
addl
xor
add
subl
mov
movzwl
sbb
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
neg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
jne
mov
adcl
xor
mov
sub
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
addl
push
call
sbbl
test
je
xor
movl
jmp
movl
xor
mov
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
lea
xor
mov
movzbl
add
lea
mov
movzwl
add
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
push
push
push
xorl
mov
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
pushl
push
push
pushl
call
cmpl
jb
xor
mov
sbbl
add
mov
mov
cmp
jne
sbbl
mov
mov
or
mov
mov
xorl
mov
xor
xor
add
mov
sub
mov
mov
add
xor
andl
xor
or
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sub
mov
mov
and
mov
mov
xor
mov
sbb
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
push
pushl
call
cmpl
jb
mov
movl
mov
xor
or
sub
mov
mov
and
movl
sub
mov
mov
mov
mov
xor
mov
xor
xor
addl
add
sbb
mov
xor
xor
adcl
add
movl
lea
movl
cmp
movl
ja
xorl
mov
sbbl
xor
andl
lea
push
mov
xorl
xor
sbbl
lea
push
xor
add
or
mov
pushl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
mov
or
xor
lea
not
mov
movl
mov
xor
sbbl
xor
sbbl
add
mov
xor
movl
lea
cmp
movl
jbe
mov
mov
mov
or
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
mov
andl
sub
sbbl
xor
movl
mov
mov
mov
mov
cmp
movl
jne
lea
mov
andl
lea
xorl
mov
mov
test
je
movzwl
sub
mov
and
mov
sbb
mov
mov
xor
add
sub
imul
mov
xor
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
push
movl
dec
mov
sbbl
movsbl
xor
xor
or
mov
mov
mov
adc
sub
movzwl
sbb
mov
orl
xor
cmp
movl
jne
adc
mov
push
sub
mov
andl
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
xor
mov
xor
mov
sub
movl
add
push
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbb
xor
mov
add
movl
add
movl
imul
mov
mov
movl
cmp
je
not
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
sub
movl
sub
push
adcl
movl
mov
push
movzwl
or
mov
mov
xor
push
movzwl
add
mov
mov
add
andl
mov
mov
sbb
mov
test
movl
je
xor
mov
mov
mov
and
mov
xor
adc
add
and
mov
xor
mov
subl
xor
orl
add
sub
mov
mov
and
mov
xor
add
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
add
adc
mov
sub
lea
addl
xor
adcl
xor
cmp
je
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
addl
xor
add
movl
cmp
movl
jne
sbbl
pushl
subl
call
mov
mov
xorl
mov
sbbl
xor
adcl
add
movl
cmp
je
sbbl
pushl
orl
pushl
andl
call
mov
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
add
movl
cmp
movl
je
mov
or
mov
sub
mov
and
mov
adc
mov
add
movzwl
sbb
mov
andl
mov
mov
andl
add
adcl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
add
mov
movl
jmp
sbbl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jb
mov
addl
add
movzbl
or
mov
mov
mov
xorl
mov
movl
xor
addl
add
movl
cmp
je
jmp
mov
movl
mov
orl
xor
adcl
add
movl
cmp
mov
je
mov
xor
movl
add
movl
cmp
je
adcl
lea
subl
push
sbbl
pushl
subl
pushl
adcl
call
subl
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
add
add
add
add
add
add
jo
add
jo
add
add
add
push
push
inc
push
mov
bound
cmc
je
lret
pop
add
add
inc
cmp
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
sbb
sarb
xchg
jg
xchg
jo
sarb
mov
push
xor
mov
std
xchg
jp
pcmpgtd
ss
inc
mov
inc
ss
es
hlt
insl
jnp
pop
inc
mov
pop
pop
divl
mov
mov
ss
pop
packsswb
movsl
lds
jp
push
mov
xchg
jno
jge
jp
mov
mov
ss
pop
push
movsl
adc
jp
mov
push
pop
cmp
xchg
push
jge
jp
and
mov
mov
icebp
out
mov
xchg
int
out
divl
jb
xor
sub
jae
mov
xchg
or
jp
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
jmp
mov
lret
fildl
shl
mov
icebp
out
adc
and
sub
sub
xor
mov
mov
jp
jp
sub
cmc
sub
mov
mov
sub
jl
jp
xor
mov
xchg
add
jp
jmp
jnp
shrl
jbe
jp
sub
lcall
lods
mov
mov
divl
mov
mov
jg
cmc
xor
rcll
jnp
jnp
dec
mov
mov
frstor
jp
cmc
icebp
push
jnp
jnp
cmp
icebp
dec
jnp
jnp
cmp
icebp
cmp
jnp
xor
jmp
cmc
repnz
jp
xor
jmp
cmc
repnz
jp
xor
add
jmp
cmc
repnz
jp
test
jp
sub
inc
mov
stc
jg
jp
xor
cli
out
jge
jp
jb
xor
cli
out
jge
jp
jp
cmp
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
