push
mov
sub
addl
push
subl
push
xorl
lea
incl
push
push
movl
call
adc
mov
andl
push
xorl
xor
adcl
inc
andl
push
adcl
push
xorl
call
xorl
test
movl
je
push
push
push
andl
call
test
movl
je
adcl
xor
jmp
orl
push
andl
push
addl
call
test
movl
je
lea
push
call
jmp
addl
push
push
addl
push
andl
call
addl
test
movl
jne
push
addl
push
call
jmp
push
push
addl
call
andl
test
jne
andl
push
push
subl
push
sbbl
call
addl
test
movl
jne
andl
push
push
call
adcl
test
movl
jne
mov
mov
and
movl
and
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
sub
movl
xor
add
xor
lea
mov
movzbl
or
mov
lea
mov
mov
addl
mov
xor
mov
add
mov
or
mov
movzbl
sub
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
addl
xor
orl
add
andl
mov
movzwl
or
mov
adcl
xor
orl
add
movl
mov
mov
mov
subl
mov
orl
mov
negl
mov
mov
adcl
mov
orl
mov
movl
push
mov
mov
xor
movl
xorl
mov
xor
add
movl
jmp
notl
mov
xor
lea
adcl
push
xorl
mov
xor
orl
lea
sbbl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
mov
sbbl
pushl
negl
call
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xorl
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
push
pushl
pushl
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
xor
andl
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
xor
movl
lea
movl
cmp
jbe
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
mov
sub
or
mov
mov
movl
sub
andl
xor
mov
mov
mov
cmp
movl
jne
push
xorl
xor
inc
andl
push
subl
push
call
test
movl
jne
sbbl
push
subl
push
call
orl
test
movl
jne
addl
push
adcl
push
adcl
push
call
sbbl
test
jne
sbbl
push
push
andl
call
xorl
test
jne
andl
lea
sbbl
mov
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
xor
add
dec
mov
jmp
mov
test
je
xor
mov
mov
add
mov
mov
add
mov
incl
mov
sbb
mov
inc
mov
movzwl
adc
mov
mov
movl
cltd
mov
andl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
inc
adc
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
movl
mov
adcl
subl
xor
adcl
mov
or
mov
sbbl
xor
movl
mov
cmp
jne
mov
cmp
je
adc
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
push
push
pushl
pushl
call
jmp
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
push
call
cmpl
jb
mov
mov
add
mov
mov
movl
jmp
movl
mov
movl
cmp
je
xor
xor
mov
sub
and
mov
mov
xor
orl
add
movl
cmp
movl
je
andl
push
xor
adcl
inc
push
push
call
adcl
test
jne
adcl
push
push
subl
call
andl
test
movl
jne
push
orl
push
push
addl
call
orl
test
movl
jne
addl
push
push
negl
call
adcl
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
xorl
mov
mov
pushl
mov
pushl
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
pushl
call
mov
mov
mov
jmp
push
xor
inc
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
orl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
movl
mov
or
push
or
mov
notl
xor
mov
push
addl
mov
adcl
add
cmp
je
movl
cmpl
je
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
orl
xor
subl
add
add
jmp
lahf
es
mov
fwait
icebp
sub
adc
dec
jb
jb
pop
pop
jb
adc
and
popa
lretw
js
bound
push
test
insl
push
iret
pop
inc
cmp
jg
mov
sub
data16
imul
xor
mov
xchg
fiadds
add
insl
fldl
push
repnz
arpl
scas
sub
cmpsb
jmp
inc
and
push
icebp
adc
jo
jnp
nop
pop
cmpl
sahf
cmp
mov
shrb
push
sti
iret
andb
enter
imul
or
sbb
fadds
std
push
movsl
icebp
pusha
mov
aas
dec
jns
insb
sbb
lcall
into
jmp
xor
adc
mov
pusha
or
sbbl
cld
mov
pop
arpl
loopne
lods
jb
shlb
add
and
xchg
jle
fnstsw
xchg
sub
les
push
por
add
stos
pop
cmpsl
push
lahf
aaa
fsubl
mov
adc
cltd
arpl
push
sahf
push
iret
push
xor
sbb
fisubrs
inc
fnstcw
mov
mov
fs
idiv
mov
test
push
or
movsl
sbb
ret
fdivrl
jp
ja
shrb
inc
ja
add
mov
pop
mov
iret
int3
ret
insb
cmpsl
in
cmp
lret
les
hlt
lret
xor
mov
push
xor
pop
jecxz
movsb
out
aas
fiadds
push
dec
jno
daa
cmp
adc
std
jno
lock
aaa
mov
nop
lods
push
call
rolb
jo
adc
into
and
add
insb
fs
mov
xchg
mov
xor
cwtl
dec
push
adc
jmp
jl
pop
mov
pop
pushf
aas
aad
ja
add
repz
test
dec
in
jmp
jl
or
std
jbe
lock
push
mul
and
leave
repz
dec
pushfw
in
inc
sub
push
sti
repnz
ja
jns
mov
push
sub
insl
or
cmpl
in
push
sub
out
das
mov
frstor
jp
dec
int3
dec
cmpsl
xchg
lods
pop
iret
jmp
int3
jge
lret
push
mov
xor
push
stos
add
stos
test
addr16
push
pop
cmc
popf
ja
pop
or
and
sbb
mov
cmp
rcrl
clc
hlt
xchg
dec
lcall
adc
xor
cmp
jno
mov
sbb
dec
mov
pushf
loop
mov
xor
out
pop
and
inc
pop
adc
mov
loop
fs
and
mov
mov
push
mov
and
fldl
pop
mov
sbb
or
jp
je
mov
inc
xor
push
inc
nop
lods
mov
shl
mov
dec
rolb
stc
xchg
out
out
pop
mov
fildl
sbb
insb
xchg
dec
aaa
cs
pop
and
adc
call
cmp
mov
sti
arpl
sub
pop
jecxz
xchg
loopne
add
scas
mov
lods
into
std
add
inc
int
xchg
mov
jnp
or
inc
xor
and
or
dec
xlat
mov
xchg
push
fdivrl
lahf
not
mov
and
sahf
in
adc
test
cmpb
js
and
aam
fisubs
js
jl
stos
and
dec
pop
or
xchg
push
fisubrl
fcomps
pop
lret
js
add
out
jle
sub
jb
loop
pop
out
bound
and
ret
fbstp
and
mov
cmp
dec
into
call
or
cmp
add
icebp
cld
movsl
insl
add
imul
jne
scas
xor
xlat
clc
hlt
lahf
nop
push
add
jb
or
lea
fmuls
add
outsl
and
mov
pushw
cmp
aad
or
loop
pop
and
sbb
cld
shlb
adc
mov
lods
jnp
pop
or
rclb
pop
mov
mov
add
push
cmpsl
cmc
test
lcall
out
push
adc
ljmp
daa
idivb
inc
scas
sub
sub
push
dec
imul
sub
xchg
fldenv
pop
push
in
mov
xor
push
sbb
sbb
xor
lcall
mov
inc
xchg
rcrl
gs
stc
mov
arpl
sub
daa
pop
pop
xchg
aad
sbb
pop
loop
idiv
das
sbb
jnp
mov
inc
addl
add
adc
jle
arpl
xor
mov
xchg
lods
cmpb
xchg
sub
push
push
test
rorl
sub
lods
inc
fs
jp
shl
stc
mov
mov
push
mov
push
pop
cmp
out
pop
xor
daa
mov
cmc
faddl
mov
lcall
jecxz
push
adc
add
inc
lahf
call
push
and
mov
out
mov
mov
test
cltd
or
mov
xchg
fsubrs
and
pop
mov
fdivr
rolb
insb
inc
data16
fsts
jne
push
andl
push
xchg
shr
push
push
out
xor
lret
cmp
xor
cli
lea
add
inc
jae
outsb
adc
mov
faddl
in
sub
std
imul
mov
dec
movsb
inc
cltd
fbstp
mov
and
inc
jno
and
xlat
sub
jno
enter
adcl
dec
imul
test
sbb
rcrb
mov
mov
lret
sti
mov
es
fcompl
adc
xchg
lods
out
in
mov
mov
mov
out
xchg
sub
push
adc
bound
sub
pop
xor
je
sub
push
cmpsb
out
leave
adc
adc
mov
cltd
rcrl
sahf
or
testl
lret
ss
ficomps
or
sbb
push
mov
nop
aas
xchg
sub
clc
testl
sub
dec
fistpl
bound
mov
lds
inc
mov
sub
cld
rcll
stc
jg
mov
and
cld
jl
jmp
sub
push
mov
sbb
cltd
mov
sub
or
add
push
dec
aam
in
mov
inc
adcl
fcomps
es
ljmp
fisubs
push
sub
or
push
push
xchg
or
dec
into
imulb
cs
cmpsl
leave
frstor
jle
shrb
sub
pop
iret
lods
xlat
cmp
or
lods
insb
cmp
in
xor
fs
or
addr16
inc
shl
cld
pop
sub
push
push
mov
push
call
mov
sbb
jl
pop
mov
sbb
mov
js
jnp
xor
leave
movsb
push
or
jo
jno
jge
sar
and
insb
insb
fistpl
mov
popa
ret
xchg
lock
fwait
jg
in
lock
cli
adc
in
xchg
mov
cs
xor
push
aaa
aam
inc
mov
xchg
and
xchg
sbbl
add
ja
fnsave
xorb
adc
das
inc
mov
push
xor
cmpsl
pop
push
fwait
cwtl
cmp
sub
test
sbb
lret
add
out
mov
cmp
movsb
push
dec
mov
xchg
bound
cmc
insb
xor
xchg
lea
cmp
push
in
xor
imul
inc
scas
mov
jmp
cmp
push
ja
mov
xor
orl
cmpsb
mov
ljmp
xor
mov
jg
roll
aaa
mov
adc
cwtl
dec
dec
xor
mov
xchg
out
pop
jl
mov
push
mov
push
xor
imul
mov
and
and
dec
push
pop
push
lods
cmpsb
push
lock
mov
fnstenv
out
mov
out
fcompl
mov
lds
sbb
and
cmp
stc
inc
push
xchg
adc
mov
test
sub
ljmp
das
xchg
sbb
jbe
jge
push
pop
xor
add
xchg
sbb
or
out
ret
jae
rcrl
mov
cltd
add
sub
clc
add
aam
pop
in
mov
jmp
mov
push
fsub
adc
sub
addl
mov
sbb
fs
push
sub
adc
outsl
sub
out
and
fisttpl
imul
es
sub
push
adc
xchg
jmp
hlt
xor
or
jb
fisubl
daa
arpl
cli
ds
push
pop
mov
mov
mov
or
mov
mov
sub
jne
or
pop
and
ficoms
int
ret
loope
cmp
repz
iret
and
stos
jmp
call
in
adc
ljmp
sbb
nop
scas
into
call
sbb
test
pop
jl
rcrb
imul
in
mov
adc
cltd
mov
jle
cmp
xchg
xchg
out
inc
jbe
mov
pop
aam
or
push
shlb
lock
testb
fnstsw
inc
test
fsts
rcrb
jecxz
mov
and
loop
inc
outsb
jo
lahf
jae
pop
mov
dec
add
das
xchg
aaa
mov
shrb
das
mov
aad
sarl
loop
in
cmp
sbb
loop
mov
and
cmpsl
add
ret
fcoms
repz
sbb
and
dec
stc
jne
add
jns
out
adc
enter
pop
xor
pusha
or
imul
mov
mov
stos
mov
or
jge
js
int
pop
repz
push
pop
cmp
popa
lcall
cld
je
sbb
clc
cmp
dec
dec
imul
sbb
sub
sbb
and
fwait
mov
sbb
int3
fstp
fdivr
mov
xor
xchg
lds
popf
or
je
fwait
sub
lea
jl
jbe
or
out
mov
and
xchg
jns
sub
scas
cmp
jbe
call
sbb
cltd
push
je
test
movsb
sub
pop
pop
sbb
add
jnp
sarb
sbb
push
les
outsb
decl
fcoms
dec
or
push
shll
lcall
aad
pmullw
mov
loop
je
adc
enter
jle
adc
adc
cmpsb
push
std
mov
mov
into
push
sub
sbb
addr16
lcall
je
imul
scas
pop
pop
cmp
xchg
inc
pop
pop
fistps
fwait
stos
pop
inc
fsts
cltd
sbb
nop
stos
mov
ret
cmc
pop
push
fcmovnu
xchg
cli
push
xor
mov
dec
in
push
mov
or
in
outsl
push
mov
jb
dec
inc
shll
mov
and
jo
imul
dec
outsb
and
mov
cld
mov
scas
in
and
sub
out
testl
or
mov
jg
pop
push
dec
in
cmp
lret
push
push
sub
lds
xor
mov
cmp
dec
pusha
ja
push
xchg
dec
mov
repnz
inc
xor
mov
sbb
das
enter
add
pop
sub
call
std
fcompl
cmp
adc
das
out
sub
adc
dec
adc
clc
mov
xchg
mov
jmp
jmp
jb
enter
sbb
mov
pusha
inc
into
mov
cwtl
lock
dec
ss
pop
jne
js
pop
dec
out
xor
and
out
dec
lods
scas
and
cmc
ljmp
icebp
sub
mov
xor
fstl
or
jge
aaa
adc
lods
pusha
in
dec
mov
imulb
repnz
cmp
test
xchg
sbb
mov
push
xor
lret
dec
addr16
fiadds
clc
inc
in
in
cmpsb
add
push
pop
and
lret
inc
shlb
mov
fst
cmp
and
jecxz
mov
loopne
aas
fistpll
test
dec
mov
push
xchg
sub
sub
add
cwtl
pop
jnp
mov
fidivrl
fistps
cmpl
ds
int
movsb
pop
and
sbb
into
xchg
imul
cmp
cld
out
popa
mov
jmp
cmc
js
js
lret
test
mov
jmp
mov
mov
xchg
sbb
and
mov
arpl
roll
imul
sbb
push
jecxz
adc
and
vpaddd
lret
mov
cmp
cli
xor
leave
jle
jne
je
mov
cmc
xchg
int3
pop
in
and
dec
mov
push
sub
mov
out
mov
inc
inc
inc
mov
jg
inc
das
fadds
jnp
cwtl
push
mov
cli
stos
pop
adc
sbb
inc
xchg
xchg
adc
xchg
daa
hlt
ja
and
out
lock
leave
or
and
test
scas
adc
cmp
dec
mov
pusha
decb
movsb
mov
ds
mov
fs
mov
ljmp
xchg
negb
lods
and
cmp
sbb
vpgatherqq
pop
ljmp
and
pop
cli
daa
cmc
test
sub
jne
pop
sbb
stc
ja
ret
mov
and
sub
pop
push
sub
push
xchg
adc
ror
pop
adc
cmp
jmp
int3
fsubl
mul
mov
fs
into
mov
xchg
dec
adc
cmp
comiss
call
jbe
xor
clc
in
in
fsubs
dec
cmp
jmp
pop
out
hlt
inc
push
cmpsl
pop
dec
cwtl
fstl
push
std
add
fneni(8087
stos
xlat
xchg
dec
fisubrs
es
sahf
adc
or
mov
xchg
add
mov
or
data16
cmp
cmc
jbe
xchg
mov
jae
cmp
mov
bound
imul
jno
ss
out
incb
sti
push
es
xor
filds
shrb
xchg
std
stos
fisttpll
std
outsb
dec
or
jo
stos
cmpb
xchg
xor
cmp
mov
adc
clc
aas
int3
cwtl
or
pop
jmp
adc
pop
mov
fmuls
loope
jp
in
inc
popa
in
push
cmp
repnz
jo
xchg
pushf
mov
cmpsl
mov
xor
js
int3
sbb
inc
inc
push
bound
add
and
les
sbb
out
and
jae
shlb
pushf
in
pop
mov
ret
sbb
adc
or
xor
pop
lds
jae
lods
adc
fadds
ds
sar
test
icebp
push
jle
cmpsl
inc
daa
sub
or
cmc
xchg
add
shrb
jp
cwtl
mov
mov
cmp
cmp
sbb
or
xchg
icebp
push
out
outsb
and
mov
pop
shlb
mov
xor
sahf
aas
fwait
or
in
jecxz
and
les
aas
pop
pop
adc
dec
or
fimuls
add
icebp
jg
sbb
adc
jl
xor
xchg
inc
add
sti
stos
fildl
loop
test
test
xchg
push
mov
pop
in
cld
push
inc
dec
inc
mov
sbb
repnz
ss
mov
cwtl
dec
ss
negl
inc
xorb
xchg
notb
pop
imul
lea
mov
stos
push
clc
repnz
xor
cmp
lods
fadds
jo
jns
jge
xchg
mov
and
mov
sbb
into
inc
por
lret
dec
and
mov
jae
dec
in
mov
lea
pop
popf
or
int3
mov
popf
and
subl
in
sbb
add
adc
cmp
or
mov
push
mov
xlat
add
bound
rolb
test
mov
and
ja
push
xor
fcmovnu
fucomp
lock
mov
mov
sti
dec
daa
lea
sbb
xor
dec
jle
divb
adc
popf
jo
scas
sbb
fwait
inc
fldl
push
push
fisubs
fwait
xchg
xchg
cli
mov
inc
dec
mov
daa
mov
mov
punpckhbw
or
xchg
xchg
imul
sub
sub
fwait
popf
inc
pop
shl
into
scas
adc
into
mov
leave
pop
leave
icebp
sub
mov
imul
int
repnz
add
xor
nop
in
push
out
pop
or
adc
adc
pop
push
sub
sbb
in
ds
push
js
dec
inc
test
stos
test
pop
jae
push
sarl
lock
insb
or
pusha
les
and
pushw
mov
loopne
jbe
sbb
mov
in
fistps
xchg
mov
pop
mov
cli
call
cmpsb
mov
add
inc
gs
cmp
aam
out
dec
pop
scas
cmp
mov
jns
mov
repnz
faddp
cld
push
pusha
or
mov
xor
bswap
xor
mov
sahf
and
sub
les
add
in
outsl
daa
push
lods
jne
pop
das
xor
jae
in
movsb
mov
ss
lock
adc
pop
or
jbe
push
xor
adc
mov
dec
mov
push
test
pop
pop
addr16
pushl
pop
lods
popl
test
push
enter
pop
aaa
jg
inc
pop
pop
popf
lods
xchg
sub
mov
add
and
popf
sarl
mov
sbb
add
arpl
mov
imul
adc
inc
in
or
adc
fmul
stc
mov
dec
lea
ja
and
outsl
mov
lcall
dec
testl
sub
xor
fsub
in
cmp
inc
mov
cmp
js
mov
sbb
mov
shrb
cmpsl
out
cmpsl
outsl
xor
repnz
fstpt
xor
rcrl
fwait
je
iret
mov
cwtl
fwait
stc
ret
sti
clc
mov
insb
js
out
mov
and
add
and
out
jp
or
cmpsl
ljmp
xlat
mov
jle
xor
mov
js
outsl
stos
int3
xchg
pop
ljmp
and
pusha
and
fnstenv
aam
xor
pop
dec
dec
fwait
outsl
lods
jo
outsb
push
sbb
xor
mov
sbb
and
out
movsl
lcall
pusha
cmc
dec
jmpw
xchg
loopne
ss
mov
fidivrl
popa
mov
mov
xor
movsl
loop
shll
jge
jb
jge
sbb
fimull
xchg
xor
mov
lea
shr
and
sub
insl
sbb
dec
aaa
sbb
aam
adc
pop
push
andl
jae
sarl
mov
xor
je
das
push
adc
inc
mov
repz
cli
addr16
xor
xlat
cmp
jge
or
sub
es
call
push
dec
inc
mov
add
add
test
and
ljmp
out
mov
xchg
jge
clc
inc
lock
jns
enter
out
pop
ss
mov
popf
testb
push
loope
push
dec
sahf
insl
loope
lret
dec
scas
mov
in
test
add
cmp
js
or
aam
jbe
push
daa
jno
hlt
jb
or
mov
pop
xchg
cmp
pop
jmp
sbb
sub
stc
sti
cmc
mov
ds
jmp
push
pop
lods
pop
mov
add
dec
sbb
leave
pop
fidivl
add
stos
sub
jp
add
cld
jns
mov
fildl
dec
mov
fiaddl
enter
xor
xchg
pop
sub
dec
rclb
jl
dec
xchg
sbb
ljmp
xchg
add
fsubrl
shl
add
mov
xlat
mov
in
outsb
jecxz
lods
pusha
add
cmpsb
add
sub
jmp
sbb
pop
out
jmp
push
daa
inc
xchg
insl
test
xor
mov
aas
xor
test
mov
jns
fldt
adc
jns
xor
shll
rorl
sub
shlb
ret
lods
xchg
mov
lretw
cld
xchg
push
aaa
icebp
inc
xchg
fldcw
sbb
jmp
lret
call
aam
mov
cmp
popf
sbbb
fs
cmp
arpl
mov
mov
shr
sub
out
cmp
addr16
push
jmp
xchg
push
mov
and
pop
mov
pop
lahf
or
jno
stos
adc
mov
lret
cwtl
mov
stos
push
inc
lods
xor
aad
xlat
icebp
cmp
xor
andb
mov
shrb
jne
sbb
stc
or
mov
cs
insb
stc
mov
nop
cltd
mov
into
sub
pop
push
jns
push
daa
mov
jbe
mov
xchg
pop
and
lret
ret
xchg
xchg
outsb
pop
and
mov
dec
shrb
enter
ret
daa
sub
or
stos
out
dec
jmp
sbb
outsl
adc
ljmp
mov
icebp
sub
aam
fwait
or
cmc
aam
or
test
sub
sbb
lods
aad
xchg
pop
jl
add
sub
idivl
sub
sbb
daa
movsl
mov
mov
dec
add
leave
cmc
dec
mov
into
add
jns
xchg
gs
mov
in
xchg
cmpsl
add
insb
and
int3
and
mov
sub
and
push
and
jle
ds
into
ljmp
push
xchg
mov
jmp
or
mov
add
outsb
imul
lcall
ds
stc
pop
mulb
insb
sub
or
push
cmp
xchg
mov
es
dec
ss
loop
jle
aaa
js
shr
xchg
adc
cmc
sub
icebp
ja
xchg
inc
adc
adc
xor
rcrb
xor
out
inc
mov
loopne
or
dec
adcb
jmp
fistpll
sbb
push
jp
inc
scas
dec
sub
leave
sbb
lock
les
push
xchg
pop
nop
cmp
nop
aam
xchg
or
outsb
pop
je
mov
mov
bound
jnp
pop
dec
fisubrl
add
jnp
fs
aad
pop
loopne
pop
shrb
jp
flds
xor
pop
movsb
sub
sub
call
cmc
jne
or
inc
lea
sub
je
iret
xlat
and
scas
cmc
jle
pop
and
xchg
ljmp
adc
clc
push
in
das
out
into
and
in
inc
pop
fiadds
jmp
xor
cs
adc
mov
and
jmp
sub
xor
out
fmull
push
add
jnp
and
std
ds
idivb
fdivrl
stc
sbbb
movl
in
syscall
inc
cs
dec
cmp
jno
jne
fwait
cli
imul
mov
sub
test
dec
push
es
jno
mov
and
and
stos
jo
cmpl
pushf
aad
adc
adc
or
inc
cmp
sub
lods
mov
in
xchg
popa
inc
in
pop
jge
popf
data16
into
mov
fcoml
repnz
outsl
inc
in
mov
adc
sub
dec
jbe
pop
lret
subl
pop
sub
sbb
call
fcomip
adc
xchg
push
mov
inc
ds
addb
pop
jp
decb
push
cmpsl
xor
jle
xorl
pop
mov
loop
xchg
loope
dec
stc
add
lahf
push
hlt
mov
pop
dec
and
add
pop
rolb
sbb
lock
jo
cli
ds
stos
gs
xchg
jne
mov
mov
fstl
dec
mov
jo
pusha
push
jns
imul
cmc
pop
das
mov
sub
sub
movsl
mov
mov
lods
bound
pop
fildll
jge
fadds
xchg
outsb
out
xlat
dec
add
into
mov
push
pop
sbb
enter
jp
and
dec
out
cli
inc
jns
ret
cmp
jl
push
leave
div
inc
mov
adc
mov
js
xor
adc
lcall
inc
pop
stc
pusha
push
add
das
testl
loopne
aad
andb
sbb
sub
jnp
xchg
pushf
jo
jnp
xchg
pushf
in
cltd
insl
push
std
xorb
shl
xor
fisttps
rep
sbb
stos
xor
arpl
dec
jg
or
lahf
std
popw
push
pop
mov
inc
inc
out
add
adc
scas
lock
ret
pusha
jp
pop
dec
ljmp
pop
mov
outsb
inc
jno
cmpsb
adcl
and
mov
std
and
lldt
cld
dec
jb
or
js
es
push
lods
mov
cwtl
inc
fnstsw
ficoml
sub
inc
fidivrs
inc
test
xchg
lret
pop
sbb
sbb
inc
outsl
mov
dec
jmp
fdivl
sub
int
jbe
aad
mov
in
pop
or
jae
sub
lds
ljmp
pop
int3
cltd
test
les
inc
nop
lret
pop
push
ror
repnz
xor
nop
movsb
ljmp
pop
call
stc
in
adc
xchg
cmp
inc
mov
sbb
push
aas
cmp
jae
inc
push
test
call
mov
mov
outsb
repnz
cmp
testl
jl
mov
add
xor
cmpsl
icebp
mov
jb
bound
xor
fstpl
cmp
mul
jl
rcr
dec
into
jecxz
je
mov
inc
aas
dec
adc
dec
shrl
xchg
or
jecxz
sbbl
adc
mov
inc
cmp
jl
mov
mov
out
inc
popf
inc
jmp
sbb
imul
fs
adc
in
mov
jno
hlt
roll
cwtl
pop
rorl
mov
mov
mov
push
mov
int
push
cmp
xchg
add
int3
repz
popa
mov
sbb
ds
xchg
pop
scas
scas
mov
pop
xchg
aaa
or
popa
push
lods
outsl
jge
jns
imul
in
pop
adc
mov
push
sbb
es
inc
data16
test
xchg
add
lcall
sbb
aam
sbb
movsl
xor
and
sbb
rcr
lcall
out
les
push
add
sub
dec
or
rclb
gs
mov
add
push
and
shll
mov
xchg
decl
xor
xchg
sahf
and
push
fs
psllq
add
jae
lods
stc
push
dec
cmpl
or
inc
dec
xchg
mov
mov
je
outsl
lcall
cmp
je
dec
je
jl
repnz
sbb
fists
insb
sub
aas
jmp
sub
fnstenv
lret
jnp
ret
xchg
dec
xor
insl
int
loopne
aam
jge
adc
data16
loopne
mov
sbb
jns
imul
pop
sub
dec
pusha
push
sub
cmp
sub
sbb
adc
mov
jge
mov
dec
xchg
das
fnstcw
and
sbb
dec
das
xor
fldl
notb
outsb
add
adc
xor
lea
sub
xchg
cmpsl
into
repz
lahf
cmp
hlt
mov
and
insb
pop
faddl
aad
dec
aas
lds
pop
push
popa
pushf
mov
mov
in
shl
xchg
cmp
cmp
push
les
jns
sub
setne
dec
sbb
pusha
jae
outsb
add
xchg
mov
cmp
xchg
xlat
jle
mov
les
adc
xor
in
mov
add
jne
shrb
xor
mov
andl
lea
out
test
fdiv
mov
ja
cmp
cmc
out
push
mov
inc
cmpsb
dec
enter
jle
jnp
movsb
fcoms
repnz
or
test
push
pop
outsb
addr16
rcrl
std
mov
inc
lea
lock
cmp
dec
or
and
xchg
pop
lods
push
movsb
xor
lods
mov
and
fstpt
inc
sub
or
cmp
loopne
pop
insb
xchg
or
sub
mov
xor
out
clc
lods
and
mov
adc
out
decl
jae
imul
enter
push
out
in
push
out
shr
imul
imul
pop
jnp
mov
js
pop
xor
jo
ret
jge
or
insl
xchg
outsb
mov
jae
cmpsb
nop
into
jg
push
arpl
dec
pop
cmpsb
rclb
mov
push
jg
and
dec
push
inc
jbe
mov
mov
xlat
sub
adcl
lea
movsl
mov
xor
sbb
jo
xor
lret
or
push
sbb
es
fdivrl
cmp
push
out
jp
cli
adc
xchg
inc
dec
dec
fdiv
push
adc
scas
lods
push
arpl
mov
repz
mov
out
mov
or
pop
std
in
push
ja
adc
aam
rol
add
icebp
push
pop
notb
loopne
pop
jnp
into
test
repz
bound
mov
movsb
mov
into
inc
and
inc
aad
cwtl
jg
enter
sub
ss
or
fnstsw
lods
xchg
div
sub
xchg
cmp
mov
add
mov
push
orb
sub
mov
mov
push
aam
fs
adc
mov
popa
fists
sub
inc
pop
xor
out
cld
test
jp
mov
repnz
cmp
sbb
mov
leave
fmul
sub
cmp
and
xlat
lret
adc
arpl
scas
sbb
rcll
out
popa
fsubrl
ljmp
jns
and
or
adcb
xor
push
nop
ret
shll
cmpsb
jns
cwtl
cmp
xor
sarb
lret
jb
push
popa
stos
cmp
push
ret
mov
jne
bound
into
loope
jl
sti
add
push
repz
cmp
mov
mov
xor
mov
cmp
push
mov
lea
jmp
and
sub
mov
sub
stos
std
inc
repz
cwtl
inc
cwtl
fstpl
inc
sbb
dec
mov
sub
lock
push
mov
fs
call
cltd
xor
fldenv
rolb
in
jl
scas
in
xor
int
repz
imul
in
daa
xor
fbstp
lock
add
add
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jb
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
jmp
das
cmp
test
subl
addb
jb
pop
pop
jb
out
push
xchg
push
mov
push
xor
test
test
jne
or
ret
sti
mov
bound
push
xchg
incl
lret
and
scas
jnp
dec
scas
xchg
ja
shl
mov
xchg
xor
mov
sbb
jg
pop
add
aam
adc
dec
inc
cmp
xor
inc
ret
cmp
push
inc
in
sub
mov
push
or
cld
inc
jp
xchg
xor
scas
sbb
push
psrld
leave
sbb
incl
add
orl
sbb
xchg
test
and
push
movsb
fwait
popa
ror
sub
push
add
outsb
jns
cwtl
fimuls
cmp
lods
xor
inc
inc
pop
or
xchg
stos
xchg
sub
dec
ja
push
push
push
cmp
sub
out
arpl
push
insl
xchg
ret
stos
scas
push
xchg
mov
sub
mov
dec
and
and
sub
xor
inc
std
fadds
icebp
adcb
popf
xor
pop
dec
jne
adc
sub
inc
clc
jnp
inc
lahf
dec
xchg
dec
inc
sbb
fwait
inc
cltd
cmc
stos
xchg
insb
aaa
out
jl
dec
adc
fstpt
add
jnp
pop
je
test
dec
push
sub
arpl
stos
pop
sbbb
scas
repz
inc
pushf
inc
mov
jae
mov
cmp
mov
pop
and
lods
bound
push
lock
lds
mov
mov
cltd
push
push
aas
es
test
cmc
sub
mov
adc
adc
and
and
xor
inc
lods
fidivs
push
jo
sbb
test
jno
jo
scas
pop
xor
loop
popa
jo
loop
nop
dec
sbb
sahf
cmp
sbb
dec
ds
into
xchg
roll
pop
jp
dec
fsubs
sbb
cmp
lods
push
xlat
push
rorb
fstps
lods
les
push
std
xor
sub
jp
pop
lahf
sbb
aaa
sbb
mov
pop
push
fisubrs
cmp
dec
fdivl
xlat
flds
add
inc
dec
mov
je
mov
std
push
cwtl
aam
xchg
mov
insl
aad
iret
test
cs
pushf
lea
outsl
cmp
xchg
add
xchg
loope
jns
inc
mov
in
roll
dec
push
push
or
outsl
mov
cmp
jg
notl
jge
pop
xor
out
dec
shll
int3
mov
iret
or
xor
jns
sti
rcr
das
push
flds
lods
pop
fs
add
in
in
lods
dec
xchg
and
and
imul
pusha
mov
test
stos
adc
mov
roll
xchg
pusha
pop
sarl
mov
xchg
pusha
pop
jbe
add
jns
pop
out
mov
pop
ds
daa
jno
adc
mov
jnp
scas
dec
loopne
xchg
lock
mov
addr16
imul
aaa
jbe
pop
addr16
push
insb
pop
in
push
inc
xchg
mov
pop
mov
fildll
dec
sbb
popf
repz
dec
fstl
and
push
aaa
loop
movsb
stos
add
inc
movsb
xor
xor
psrlw
mov
loope
add
mov
push
xorl
xchg
out
mov
push
mov
sbbl
lods
arpl
xchg
xor
mov
andb
mov
pop
add
cs
add
jle
mov
mov
xchg
or
mov
xchg
ss
fsubrs
add
xor
push
dec
movl
sub
inc
cmp
mov
add
add
mov
add
shll
lahf
shl
xchg
and
dec
stc
imul
inc
popa
jo
popf
sub
jle
sbb
movsb
lcall
mov
test
pop
loop
mov
sbb
fsubrl
lds
int
fwait
push
negb
or
jno
mov
fs
push
es
movsl
ljmp
cmp
inc
lods
mov
jecxz
sbb
fstpl
jbe
in
jnp
mov
inc
cmp
popf
jg
xor
dec
pop
leave
pop
jae
imul
imul
mov
push
lcall
add
inc
mov
jb
or
cmp
hlt
mov
pop
or
test
dec
pop
or
mov
das
or
out
adc
leave
pop
sbb
and
dec
push
xor
ja
mov
add
cs
push
enter
int
movsb
adc
push
mov
cmp
xchg
es
outsb
cmp
lea
flds
mov
je
mov
lods
and
js
cmc
notb
movq
scas
push
sub
sbb
push
push
imul
add
push
add
iret
std
jl
cld
mov
subb
mov
cwtl
jno
xor
adc
mov
test
lret
rcrl
aad
xor
scas
push
jmp
into
cmpb
jle
aas
popa
adc
dec
int3
push
clc
scas
clc
mov
pop
clc
jecxz
mov
push
insb
or
imull
adc
sbb
add
dec
fxam
mov
scas
and
ja
xor
pop
add
push
arpl
je
fimuls
cmp
insb
sub
pusha
lea
inc
fdiv
scas
pusha
dec
pop
in
mov
dec
mov
mov
int
jge
cmp
sub
add
sub
dec
pop
mov
out
lahf
pop
cmp
inc
aad
push
cmp
int
xchg
mov
int
inc
xchg
push
das
aaa
push
mov
ljmp
push
and
test
arpl
inc
cli
and
jns
mov
adc
and
inc
jmp
rcr
inc
add
cmc
xlat
lock
mov
jle
mov
push
cmpsb
clc
pop
rcl
scas
add
adc
pop
dec
ret
mov
out
sahf
add
jb
push
pop
jp
int3
fcom
gs
pop
mov
das
or
and
ss
gs
fidivs
pop
sbbl
daa
adc
cltd
lret
sarb
push
lret
stos
cli
dec
gs
sub
rol
cmc
sub
push
cltd
xchg
jmp
in
jecxz
sti
mov
push
fimuls
mov
andl
inc
sti
push
cmp
add
mov
imul
lods
xchg
xor
fisubs
sbb
dec
or
sbb
sub
or
int3
sub
mov
mov
inc
test
cltd
sbb
popf
aam
fwait
mov
lahf
imul
rclb
mov
outsl
daa
mov
lcall
or
mov
addl
and
shlb
mov
dec
ret
popa
cmp
ss
xor
and
lret
insl
cmp
orl
cmp
add
cmp
cmc
xchg
cli
xor
cmp
in
test
mov
stos
sub
ret
cld
jno
fdivl
out
add
stc
shrl
pop
dec
std
divl
jge
out
outsb
sub
dec
adc
inc
sbb
sar
jbe
cmp
pop
lods
adc
add
or
repz
rcrl
shrb
add
sbb
and
mov
addr16
in
lret
test
and
clc
jp
and
ds
and
arpl
es
cmp
and
dec
shrl
mov
xor
jno
shlb
pop
ret
rcl
bound
pop
cs
xor
mov
mov
sbb
cmp
lock
sbb
lret
dec
push
mov
and
add
sub
out
scas
xchg
adc
test
scas
in
dec
imulb
and
add
test
sub
outsb
xchg
divl
push
dec
sub
xchg
jb
shl
pop
les
stos
mov
push
aas
popa
js
fists
lcall
xchg
cwtl
mov
and
push
jge
jne
mov
inc
out
jg
jg
push
jb
push
repnz
cmp
cld
stc
push
mov
cmp
mov
outsb
push
int3
int
jp
popf
adc
add
repz
arpl
xor
cmp
sub
rolb
mov
or
mov
out
lahf
push
jnp,pn
push
mov
mov
call
inc
inc
jg
jmp
or
and
enter
rorl
sbb
fistl
pop
aam
inc
push
pusha
and
pop
sbb
cltd
loope
imul
push
sbb
mov
outsl
dec
or
sub
leave
pop
test
dec
lock
and
sbb
cmp
lds
add
xchg
xchg
dec
cmpsb
outsl
in
outsb
sub
or
xor
orl
aas
adc
into
jg
nop
adc
jo
fists
out
jo
in
mov
push
inc
test
jmp
adcl
mov
mov
dec
xchg
mov
andl
cmpsl
das
pop
aas
pop
pop
cmp
mov
adc
cmp
sub
jnp
xlat
mov
les
pusha
dec
lcall
cmc
or
mov
into
jp
add
jno
jno
xor
xchg
and
push
aas
stos
or
mov
lods
xor
int3
jne
jb
pop
jl
jo
js
jnp
pop
sbb
xchg
aaa
sbb
mov
jnp
jno
cmp
jo
rorl
out
aaa
repnz
push
enter
mov
jne
lahf
std
xchg
dec
mov
cld
sub
or
mov
sbb
inc
cmc
jo
cmpb
fcmove
mov
xchg
mov
lods
and
fisubs
addr16
popf
pusha
ret
sbb
push
cld
sbb
xor
shlb
adc
jmp
sbb
in
cs
mov
dec
std
and
daa
mov
pop
ljmp
cld
fbstp
test
push
aaa
call
mov
cmpsb
adc
jb
adc
adc
pop
mull
pop
or
jle
jbe
mov
lea
insb
aas
mov
and
jnp
out
int
xchg
xchg
pop
pop
hlt
jp
sbb
fwait
mov
roll
mov
idivl
ret
dec
sub
sub
mov
xchg
test
cmp
inc
add
and
cmpsl
js
fdiv
into
clc
push
xor
sbb
push
stc
push
xchg
mov
pop
jg
or
push
or
bnd
xchg
scas
pop
clc
sub
push
fs
pusha
je
xchg
add
mov
inc
addb
pop
loop
add
std
ror
iret
sub
cmpsb
test
pusha
lea
inc
cmp
xor
fs
mov
in
movsl
jle
sbb
cmp
lods
addb
jl
add
mov
pop
inc
sarb
push
jb
sbb
xlat
adc
pop
rcrb
in
subl
xor
xor
xor
imul
icebp
testb
xchg
mov
mov
jg
rolb
jge
mov
mov
xor
leave
subb
xor
xor
mov
icebp
sub
sbb
cmp
cmp
push
and
out
gs
out
sub
fldcw
pop
jbe
and
inc
mov
jne
bound
mov
jp
adc
enter
test
rclb
dec
repnz
mov
xorb
lahf
arpl
icebp
or
push
shrb
add
out
jno
dec
push
jge
mov
int3
mov
and
shll
in
sahf
jae
hlt
imul
repz
test
sub
dec
cs
inc
xchg
push
inc
push
cmp
iret
sub
mov
lcall
inc
pop
and
sbb
repz
lret
pop
xchg
mov
jg
cmp
fwait
nop
jno
sahf
pusha
and
mov
enter
push
dec
xor
mov
cmpsl
popf
jns
or
es
mov
pop
div
iret
stc
add
pop
leave
imul
popa
ljmp
pop
sub
dec
jb
push
rorb
leave
in
mov
sbb
adc
out
imul
or
push
imul
jae
scas
adc
mov
xchg
int3
je
arpl
xor
sbb
push
add
fs
dec
sahf
and
xchg
fs
mulb
mulb
mov
dec
push
sbb
es
mov
mov
inc
add
stc
cmp
sub
insb
pop
xchg
adc
cmp
aad
xor
pop
adc
and
cwtl
test
jp
add
jmp
idivl
mov
fiadds
outsl
mov
in
add
push
mov
cmp
inc
ror
xor
mul
lea
mov
adc
push
inc
pop
arpl
ss
imul
lahf
jo
test
ja
fstps
pop
lret
stos
push
cmp
mov
cmp
adc
scas
mov
dec
sti
mov
xchg
push
add
pop
and
adc
mov
ret
cmp
test
scas
int3
add
mov
mov
jl
movsl
aaa
push
sub
adc
fistl
jo
mov
inc
adc
mov
jo
out
mov
jge
mov
mov
sbb
mov
xor
cld
js
push
pop
cmp
mov
or
xchg
push
adc
push
sub
je
in
adc
clc
inc
aam
divb
lock
out
adc
add
data16
repz
out
xlat
fcmovb
imul
mov
roll
imul
in
and
lds
inc
scas
add
ret
lock
ret
or
fisubrs
mov
add
xchg
enter
ljmp
push
stc
inc
xor
xchg
clc
and
stc
mov
aas
rcrb
sbb
mov
ror
pop
xchg
fmuls
in
popf
test
je
andb
fidivrl
mov
clc
mov
mov
jge
out
push
jne
dec
cmpsb
jns
jb
sar
rorb
push
fdivs
aad
test
inc
loop
mov
shlb
popa
and
adc
add
xor
hlt
xchg
inc
jno
pop
rorl
push
out
cmp
inc
popa
hlt
test
push
push
pop
out
cld
pop
inc
dec
add
xchg
xchg
jb
push
dec
daa
add
fiadds
rorl
test
dec
cli
daa
dec
pop
repz
adc
fwait
add
mov
mov
aaa
jo
add
sbb
jmp
popf
rolb
jmp
dec
in
shl
add
popa
adc
pop
ja
mov
dec
adc
ficoms
arpl
pop
hlt
mov
lds
mov
jle
dec
test
xchg
dec
jbe
jno
inc
flds
add
test
and
mov
popf
push
sub
addb
ja
sbbl
mov
inc
subb
les
loop
mov
dec
inc
js
or
sbb
cld
pop
inc
hlt
je
xchg
push
pop
inc
sbb
scas
add
push
and
mov
into
out
xor
dec
in
inc
cmpsl
imul
je
jmp
ret
push
mov
cmovae
and
bound
xchg
add
mov
adc
dec
xchg
or
mov
ljmp
call
xor
es
stc
cmc
pop
mov
and
in
mov
ljmp
mov
push
sub
jg
add
add
outsl
subb
cmp
sbb
xchg
xchg
aam
sub
cmp
inc
xlat
push
test
lahf
andb
ja
add
or
xchg
cltd
insb
pop
adc
ss
dec
insl
sahf
mov
jbe
mov
mov
decb
and
mov
jbe
repnz
call
push
hlt
test
test
push
xchg
push
mov
test
ret
nop
ss
mov
xorb
push
rcrl
cmp
in
in
sub
insb
imulb
adc
call
mov
notl
jg
push
mov
in
popf
test
aaa
inc
scas
push
movsl
subl
mov
in
imul
fs
mov
repnz
mov
fwait
cmp
pop
test
packssdw
subl
decb
sub
jmp
lahf
ret
inc
pushf
mov
dec
lahf
and
mov
mov
lods
movsl
mov
inc
jno
mov
push
jns
lahf
in
leave
fcomip
dec
movsb
xlat
fucomi
test
aad
fcoms
mov
pop
out
loope
insb
loopne
rolb
jg
jns
or
fistps
adc
outsb
aas
int3
fldl
es
ljmp
gs
dec
out
das
sbb
add
out
fucom
mov
mov
cmpsb
dec
repz
mov
push
adc
daa
ret
dec
or
in
cmp
or
fldt
mov
ret
mov
sahf
lret
rcll
dec
sbb
mov
repnz
or
test
ja
fistps
bound
nop
push
sub
sbb
mov
ljmp
les
movsb
push
sub
dec
jp
jp
jmp
lahf
adc
add
pop
dec
out
jl
pop
es
int
in
loope
popa
rol
mov
mov
repz
jo
mov
sub
inc
or
mov
je
mov
adc
xor
ficomps
imul
sbb
mov
rcll
idivl
arpl
in
push
fwait
loop
js
in
int3
mov
push
mov
lret
jmp
pop
add
inc
and
imul
fwait
out
mov
call
pop
rorb
inc
test
sbb
icebp
mov
xor
push
out
lea
and
js
add
dec
sbb
int3
test
lcall
cmp
pop
fcmovnbe
dec
cmpsb
jns
jo
cmpsb
adc
jns
mov
int3
shlb
and
push
sarb
add
sub
frstor
push
sbb
movsb
dec
popa
movsb
sbb
loopne
add
inc
subb
xor
push
push
movsl
fsubs
sbb
fwait
adc
or
addl
ret
and
jmp
cmp
fiaddl
jge
mov
cltd
jne
testb
pop
and
cmp
add
pop
cwtl
lahf
scas
fcoms
adc
cmpsl
and
cmpb
shrb
xchg
aam
out
xchg
notl
out
push
push
or
or
insb
adc
sub
sub
ljmp
lcall
pop
pop
lock
sahf
cmp
hlt
das
jno
push
gs
test
popf
cmp
fisubrs
cmpsl
adc
fldl
adc
rcrb
ficomps
cmp
lods
ds
push
add
adc
decl
add
mov
cmc
pop
fildl
mov
idivb
dec
gs
inc
mov
or
jmp
test
out
xor
inc
jae
dec
jp
in
mov
cs
add
xor
stos
or
insb
mov
lea
insl
cmpsl
push
flds
push
ficompl
push
inc
insl
pop
out
sbb
pop
fisubl
cmp
mov
pop
movsb
in
mov
xchg
or
pop
jno
add
data16
loope
push
push
fildll
hlt
in
inc
pop
ss
into
int
aam
jo
push
fistps
push
movsl
cs
mov
scas
movsl
inc
jo
xchg
add
std
outsl
lahf
jg
mov
jnp
mov
data16
lods
movsb
push
in
mov
inc
dec
cmpsl
add
scas
jecxz
rcrb
or
inc
mov
inc
and
jecxz
cltd
icebp
mov
lahf
or
div
aas
stos
sub
mov
jns
xchg
mov
push
in
cmp
inc
stos
add
clc
test
mov
adc
adc
arpl
mov
sub
sbb
pop
loopne
adc
imul
or
insl
mov
sbb
hlt
inc
js
xor
mov
das
bound
jecxz
imul
push
mov
cltd
mov
loop
insl
pop
add
xchg
mov
or
mov
insb
jae
scas
lahf
mov
ja
call
and
cmc
out
xchg
ss
dec
mov
push
jmp
mov
cmp
adc
xor
out
test
jmp
pop
dec
and
xchg
je
popf
mov
sub
adc
mov
xor
sub
mov
mov
sub
xor
popl
add
cltd
mov
pop
lea
xstore-rng
cmpsl
add
cmp
mov
xor
cmp
lock
jo
inc
arpl
mov
das
jle
sbbl
addl
jo
push
sbb
mov
cmp
cmp
dec
xor
pop
or
adc
add
ficoms
cmp
jge
push
data16
xor
call
roll
dec
icebp
jno
mov
sbbl
daa
mov
imul
and
int3
loope
out
mov
xchg
insb
mov
mov
dec
mov
lods
add
rolb
xchg
xchg
mov
div
push
sub
nop
mov
fsubs
dec
jns
in
repnz
in
outsb
xor
jl
pop
inc
icebp
lods
dec
mov
push
cmp
lock
mov
pop
shl
mov
mov
sbb
std
sbb
nop
or
xchg
bound
jne
push
mov
xor
ljmp
jnp
mov
test
adc
out
lods
int
and
lods
or
outsb
mov
stc
sbb
mov
lret
fsubrp
ss
dec
adc
xchg
sub
mov
subl
xchg
dec
mov
pop
mov
and
jo
hlt
repz
mov
imul
xchg
loop
pop
scas
mov
jo
jnp
cmp
mov
in
xor
rorb
in
les
jmp
std
jge
pusha
jge
divb
shll
mov
mov
inc
push
clc
in
mov
orl
rclb
lea
xchg
pushf
mov
dec
rcl
mov
daa
aas
add
mov
out
pop
mov
lret
or
gs
cld
sbb
or
inc
pop
sar
xor
adc
fcoms
mov
int3
aaa
subb
insb
push
adc
mov
fisubrs
pop
push
dec
dec
rep
in
jae
xor
or
and
mov
es
flds
dec
aas
cmp
cli
sbb
lods
cltd
push
mov
mov
lcall
dec
insb
mov
sub
jbe
and
andl
adc
adc
dec
mov
or
xor
cmp
jl
adc
mov
push
push
pop
cltd
and
pushl
test
push
scas
jl
out
movsl
call
dec
mov
fildl
imul
add
das
xchg
in
sub
stc
push
xchg
icebp
ss
xchg
xchg
test
ret
leave
clc
in
lods
sbb
inc
xor
fmull
mov
cmp
loop
mov
xchg
sbb
bnd
test
cwtl
adc
xorb
mov
and
push
mov
imul
scas
inc
mov
and
push
jb
jmp
add
mov
adc
mov
push
adcb
rcrb
jbe
push
mov
push
push
cmp
stos
xorl
arpl
sbb
shrb
sbbl
jb
ja
pop
mov
push
xchg
mov
add
ret
aad
mov
jno
jl
fisubs
loope
push
popa
fdivrl
cmp
lahf
pop
and
idivb
add
cs
or
add
pop
jne
jmp
iret
or
add
lds
insb
and
lret
aaa
call
test
je
frstor
and
mov
xchg
test
push
add
out
dec
sub
sub
xchg
and
into
fwait
mov
or
pop
sub
mov
clc
mov
mov
pop
inc
pop
insb
fwait
or
dec
in
xor
add
lret
jbe
sbb
adc
jno
shll
enter
mov
sbb
rolb
clc
bound
sub
xor
mov
lods
mov
imul
mov
std
jae
sub
stc
add
out
std
mov
push
dec
add
sbb
pop
dec
mov
mov
and
sbb
fstps
push
cmp
lret
push
sti
add
outsb
or
mov
add
mov
jecxz
push
popa
xchg
jnp
popl
pop
or
jmp
aaa
lcall
mov
out
das
mov
js
pusha
mov
aam
jne
pop
or
cmc
mov
stc
pusha
popa
xchg
xchg
inc
cmp
inc
jae
aas
dec
mov
pop
jns
pop
test
add
pop
andl
cmp
test
loope
orb
push
insl
movsl
jp
or
hlt
xor
add
push
add
push
mov
test
stos
adc
lock
xchg
scas
push
mov
icebp
ja
xchg
fistps
int3
ror
dec
sbb
mov
mov
jae
pop
scas
fistpl
arpl
push
add
imul
or
into
push
mov
and
in
sbb
aaa
sbb
mov
cltd
stos
js
lods
add
rol
cmp
adc
cmc
fstl
cmp
mov
mov
xor
xor
decl
add
out
inc
pop
aaa
xlat
mov
sub
int
out
loop
add
mov
inc
mov
andl
xchg
sub
int3
pop
pop
jmp
mov
mov
xchg
mov
xchg
inc
clc
adc
subl
jecxz
sub
xor
mov
ret
stos
push
adc
rclb
test
mov
aas
bound
sub
inc
mov
or
inc
sbb
sub
dec
pushf
icebp
pop
aad
xchg
aas
mov
stos
sub
out
mov
mov
leave
pop
mov
adc
jns
jne
aaa
ret
sub
sarb
sbbl
out
leave
test
enter
adc
inc
incl
aad
mov
push
scas
dec
ret
mov
jg
loopne
pop
xlat
pushl
or
inc
pop
mov
pop
pop
inc
mov
mov
stc
mov
mov
sti
imul
jge
jmp
xchg
mov
push
mov
cli
lahf
lock
je
dec
mov
pusha
mov
cmp
pop
lret
je
xor
jne
mov
fdivl
jnp
mov
lea
pop
dec
loop
pop
cmpsb
push
sbb
loopne
repnz
lret
out
inc
xchg
jmp
sub
xchg
lcall
das
inc
rorl
dec
aad
adc
xchg
push
xchg
adcl
das
fs
movsl
push
jns
bound
inc
cmpsb
pop
fscale
shld
pop
fadds
sbbl
inc
jnp
mov
mov
add
xor
push
mov
mov
mov
lret
or
out
xchg
gs
inc
dec
pop
mov
repz
sar
leave
and
pop
xor
shrl
add
dec
pop
dec
loopne
fcoml
xchg
pusha
rcrb
pop
aad
push
ljmp
jns
add
std
mov
bound
daa
int3
add
sbb
pushf
je
ror
push
subb
adc
mov
test
xchg
daa
imul
lcall
mov
popa
adc
push
jne
ror
push
mov
add
adc
addr16
ret
pop
push
popf
dec
inc
dec
sbb
clc
xor
mov
inc
pushf
adc
pop
fldt
lock
push
push
arpl
shlb
dec
jo
daa
ficompl
pop
leave
push
pop
push
ja
or
sub
js
mov
mov
add
push
ljmp
fldenv
sti
push
and
mov
aas
sbb
lea
xchg
jno
loop
popf
fcoms
pushf
adc
adc
push
xchg
icebp
loope
imul
push
push
add
mov
test
ss
xchg
arpl
imulb
iret
cli
scas
clc
pop
or
dec
int
xchg
mov
das
dec
and
inc
cmp
push
fdivrl
jne
jg
mov
push
pop
mov
inc
call
cld
das
inc
pop
or
xchg
xor
mov
jl
pop
sbb
xor
andl
push
xchg
cmpsl
out
xchg
and
mov
movsl
sahf
inc
sub
mov
pop
push
fs
xchg
or
dec
adc
fld
and
xchg
add
or
sbb
rolb
cmp
ja
call
or
sub
adc
arpl
pop
insl
lcall
inc
push
mov
jg
test
scas
adc
lahf
outsl
insl
insl
jb
or
push
ljmp
fisttps
cs
cmp
mov
mov
pushf
mov
jl
loopne
inc
dec
sbbl
jo
and
das
in
adc
adc
push
mov
mov
pop
xchg
mov
inc
mov
dec
jns
movsl
push
jge,pn
fsubs
pop
pop
xchg
push
int3
push
push
pop
ja
lods
sub
mov
mov
jb
imul
xorl
mov
inc
dec
or
or
jns
xchg
imul
sub
rcl
xor
lea
add
outsb
fwait
out
mov
jle
orb
mov
shlb
jae
das
incb
jl
lods
inc
test
sub
add
mov
test
outsl
push
int
xchg
cld
mov
push
push
test
std
mov
sub
mov
outsb
icebp
jnp
popf
pop
mov
xlat
pusha
cmpb
fidivrs
lea
jb
mov
addb
xor
xor
push
jp
test
cmp
imul
daa
cmpsb
movsb
mov
push
or
cwtl
rcrl
lods
xchg
iret
test
fiaddl
cmpsb
and
push
jmp
jecxz
inc
xchg
jg
push
sub
mov
cmp
and
rcrb
jo
hlt
loope
push
mov
jns
aaa
mov
je
dec
rcll
pop
xchg
je
add
fcoml
and
push
or
mov
leave
pop
cmp
mov
and
mov
mov
lret
mov
xor
std
mov
mov
xor
movsl
cmp
adc
jo
pop
pop
pop
leave
ret
push
mov
push
or
movl
mov
not
movsbl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
mov
sbb
sub
mov
xor
movl
cmp
movl
jne
xor
mov
orl
push
mov
add
mov
mov
mov
xor
add
jmp
mov
lret
mov
mov
test
jb
adc
jb
notb
es
inc
int3
sti
movsb
pushf
jne
inc
lahf
ja
dec
scas
aaa
pusha
pandn
fsub
les
push
sub
rcl
inc
sbb
or
mov
adc
pop
mov
cmpsb
adcl
fdivr
jge
xor
inc
inc
adc
push
gs
dec
sub
fistps
fistps
push
imul
jmp
stos
xchg
xchg
mov
mov
xchg
loope
cmc
rolb
jbe
cs
push
daa
in
xchg
and
fcomps
mov
inc
mov
out
sbb
jns
sbb
xchg
mov
fucomp
fcompl
insb
ret
and
aam
shl
pop
and
pop
cwtl
dec
push
and
popf
jae
xchg
mov
out
add
sbb
mov
add
aam
dec
push
inc
mov
fistps
stos
xor
xchg
mov
and
iret
stos
pop
push
adcl
aam
sahf
jg
or
scas
fucomip
jno
clc
adc
mov
stos
repnz
xchg
push
add
inc
lahf
pop
mov
inc
adcb
lods
repnz
stos
mov
dec
jnp
outsl
mov
enter
mov
adc
jnp
jae
jne
push
lahf
push
mov
sub
push
xor
loope
mov
push
arpl
xor
orl
js
cmp
out
aad
xchg
hlt
jns
xor
cld
mov
repz
fbstp
stos
or
idiv
add
subl
test
cmpsl
leave
ret
cmp
push
mov
push
ror
sub
fucomp
xor
out
pop
sub
pop
outsb
sub
lcall
mov
jns
or
jmp
pop
dec
popa
inc
out
lods
pop
mov
out
inc
fdivrl
rolb
pop
jne
sbb
and
xor
cmp
jmp
xor
sbb
pop
lcall
loope
jns
dec
and
icebp
add
pop
jl
pop
pop
add
sbb
leave
xchg
jnp
jbe
mull
mov
add
repz
jo
add
xchg
fcomps
insb
jge
lock
xchg
jne
test
movsb
mov
cmp
icebp
repz
and
jmp
push
push
mov
push
jns
xor
inc
xchg
inc
adc
pushf
rcrl
push
sub
and
or
cwtl
es
push
push
xor
or
xor
jnp
inc
jnp
mov
jb
pop
xchg
fadd
add
fstpl
in
pop
sub
push
icebp
xor
lcall
out
inc
es
xchg
stc
adc
add
adc
mov
xor
outsb
mov
xchg
inc
jbe
nop
jl
imul
ljmp
and
ja
ss
cmp
int
inc
je
push
dec
jge
pop
sahf
pop
pop
aas
cli
das
andl
mov
xchg
adc
jmp
or
jg
mov
jmp
sbb
cmp
xor
jnp
mov
add
mov
hlt
or
inc
mov
xchg
xchg
clc
mov
stos
aaa
jb
cmp
and
cmp
arpl
fisubl
sbb
push
movsb
movsl
es
lret
sbb
add
pop
cmpsb
out
add
xchg
sub
sub
or
xchg
add
insb
ret
rclb
and
pop
cmp
mov
mov
adc
jo
ljmp
add
cld
dec
sub
jp
dec
jecxz
dec
icebp
inc
movsl
rcl
mov
cli
stc
pop
in
scas
rclb
out
jbe
xor
inc
and
mov
int
or
dec
idivb
jo
cmp
lea
daa
das
comiss
sub
push
sub
sbb
jo
cmp
jp
pop
lahf
xor
lock
mov
push
cmpsb
je
imul
arpl
or
repnz
sahf
mov
or
mov
fildll
cmp
cmp
or
and
xchg
imul
ljmp
mov
aam
jmp
stos
pop
cmp
lret
push
push
mov
jno
call
inc
movsw
inc
cmpsl
aas
sbb
adc
xor
lret
mov
mov
outsl
cmp
lcall
mov
jg
fdivs
frstor
push
insl
enter
int
pop
shlb
pusha
pop
ja
jmp
push
scas
mov
sbbb
scas
jns
mov
push
mov
mov
fcmovu
jno
aad
loope
daa
jmp
jle
jle
pop
fisubrl
ljmp
xchg
jp
mov
xchg
pop
rcl
mov
sarb
hlt
repnz
nop
rcrb
ud0
add
jecxz
or
int
add
je
lret
mov
cmp
mov
gs
sbb
mov
xchg
mov
xor
rcl
out
cli
dec
add
scas
sbb
popf
into
sub
mov
in
movsl
mov
push
sbb
shll
push
inc
loop
or
stc
es
push
jb
ficoml
mov
out
fbstp
shl
mov
lea
jne
pop
push
inc
mov
sbb
dec
xor
dec
xorl
icebp
pushl
jg
push
rolb
or
fcompl
icebp
leave
xchg
and
leave
rcr
ret
xchg
cld
pop
fucomi
push
mov
pop
xchg
jne
dec
push
mov
insb
sti
pop
lods
push
sbb
xchg
adc
lahf
pop
and
jne
imul
mov
in
ret
cmp
xchg
call
jb
fisttpl
loope
movsb
add
cmp
loopne
mov
aaa
add
sub
dec
or
push
dec
jp
xchg
xchg
scas
pop
jo
pop
rcll
mov
roll
enter
lock
mov
dec
mov
or
inc
insb
pop
es
adc
xchg
jecxz
mov
clc
cli
loopne
jae
xchg
cltd
sbb
fucomip
insl
data16
xchg
inc
sbb
cmc
cmp
scas
mov
or
jecxz
outsl
mov
mov
arpl
push
jne
das
fdiv
out
mov
insb
jno
mov
dec
jb
js
or
fbld
mov
popa
outsl
jae
pop
inc
rclb
mov
outsb
test
outsl
lods
mov
mov
sbb
adc
andl
daa
pop
jnp
mov
rcrl
dec
out
add
xor
cmp
mov
inc
and
out
lea
dec
fxam
or
cmpsl
and
xor
push
cmp
imul
adc
inc
lock
pushf
stc
loope
fdiv
adc
and
inc
adc
adc
mov
addr16
jmp
cld
aaa
popf
cmp
addr16
call
xlat
mulb
out
push
jnp
push
popf
pushl
dec
negb
mov
js
sarl
pop
sub
into
jo
cmp
push
mov
sbb
stc
pop
adc
popa
das
xchg
and
mov
bound
pop
push
add
rorl
inc
jmp
rorl
xchg
psrlq
xor
insb
push
mov
xor
add
in
push
outsl
mov
mov
ret
loop
or
pushf
fidivrl
push
pop
pop
jae
fnstsw
in
add
cmp
and
cwtl
aas
xor
mov
dec
push
pop
and
into
out
scas
mov
lods
xor
scas
testl
cli
add
xchg
rcl
push
push
sahf
mov
sub
dec
mov
neg
adc
pop
int
dec
xor
mov
push
das
scas
sub
and
ljmp
add
jns
pop
jmp
adc
push
jg
dec
lcall
mov
and
jg
cmpb
movb
cmp
js
mov
push
push
adc
sub
xchg
fistpl
inc
jge
bound
fsubrs
fwait
and
sbb
daa
jg
sbb
push
push
mov
out
push
jne
fisttpl
dec
outsb
cmpsb
enter
cs
pop
js
xor
test
jp
dec
orb
push
ss
pop
fistps
pop
fucom
xchg
push
inc
push
and
loopne
or
xchg
push
jl
rcrb
mov
xchg
popf
and
je
mov
jnp
ljmp
lock
cmp
xchg
push
out
hlt
pop
sub
insb
insl
lcall
loope
lea
subb
pushf
leave
scas
add
inc
jmp
sub
pop
xchg
xor
push
cli
lcall
lahf
stos
cld
push
jno
loope
sbb
cmp
int3
xor
in
mov
outsl
mov
or
cmpsb
es
mov
in
pop
mov
xor
xchg
sub
inc
movsl
std
shll
iret
mov
test
lcall
in
scas
cli
out
test
inc
clc
sbb
inc
test
fisubrl
mov
adc
cld
sbb
enter
or
dec
sbb
jmp
sub
xor
dec
sub
xor
cmpsl
pop
out
push
test
jmp
call
ja
pop
cmp
mov
xchg
dec
cmc
adc
pop
cmp
sub
flds
push
mov
aas
mov
fs
adc
in
stos
cmp
fcomip
sub
sub
lcall
and
insl
add
pusha
imul
loope
dec
jg
or
sub
mov
adc
jns
mov
cmp
xchg
loope
push
rcrb
int3
pop
fdivr
mov
xor
imul
jnp
es
orl
cmpsb
push
add
xchg
mov
loope
dec
xor
jae
dec
sub
xchg
ret
xchg
adc
movsb
pushf
xchg
mov
ficoms
hlt
and
mov
cltd
mov
js
in
notb
call
fimuls
dec
sahf
jl
imulb
ret
jne
pop
test
cmp
dec
pop
call
ret
and
inc
mov
in
lea
in
mov
push
clc
cmp
daa
cmp
pop
bound
ljmp
aas
lods
clc
outsl
mov
iret
dec
push
aaa
pushf
incl
pushf
fsubl
adcb
dec
inc
sti
adc
shrl
call
shlb
inc
out
scas
and
adc
mov
loopne
lods
fdivr
sahf
inc
pop
stos
add
jl
and
out
cli
in
push
sub
mov
push
lods
negl
pop
insb
mov
sbb
jo
ficomps
push
xchg
fcompl
lods
or
in
movsb
sti
stos
dec
fsts
sbb
mov
dec
and
dec
shrl
jns
jmp
sbb
lods
movsl
mov
cld
cs
popf
cltd
sub
stos
int
pop
mov
mov
dec
push
data16
aad
clc
pop
gs
popa
add
mov
clc
in
js
fildl
add
fdivr
andb
enter
dec
adc
std
cli
scas
xchg
sbb
mov
in
insb
movsl
push
adc
xlat
fcom
inc
aad
je
sbb
sub
mov
add
in
aaa
xchg
int
stc
jle
inc
push
out
xor
aam
in
cmpb
nop
add
inc
loope
movsb
cwtl
int
imul
aas
and
mov
lds
lea
sbb
jmp
iret
scas
lods
xchg
fsubr
adc
pushf
cmpsl
je
pop
ds
mov
xchg
enter
mov
mov
and
addr16
inc
mov
pushf
loopne
outsb
lret
dec
pusha
jecxz
insb
in
testl
iret
cmp
cmp
fiadds
jp
cmpsb
mov
xor
mov
or
sub
xlat
and
lcall
adc
es
sub
dec
fucomp
imul
jnp
xchg
mov
subb
pop
xchg
add
data16
and
jb
mov
enter
loope
jo
xchg
and
mov
mov
insl
xor
or
or
add
inc
sub
inc
add
scas
jecxz
insb
mov
std
sbb
add
mov
xchg
iret
jle
jge
xchg
inc
enter
mov
in
inc
lods
insb
ficomps
xchg
push
inc
out
aaa
test
pop
inc
insb
pop
iret
jne
cmpsb
inc
mov
ss
cs
mov
lcall
xchg
xchg
inc
pop
aam
jns
mov
cmp
fdiv
insb
jle
pushf
add
xor
imul
and
ss
daa
push
cmp
arpl
stos
sbb
or
sbb
sti
or
int3
pop
shrl
push
jg
push
test
adc
jmp
add
rolb
mov
nop
push
loope
sbb
pop
insl
xor
mov
jb
mov
xchg
pop
lret
xor
mov
xor
leave
arpl
imul
dec
adc
pop
push
js
aad
push
mov
shld
add
lods
rcrb
dec
fmull
bound
leave
jne
sbb
aad
lcall
fs
cmp
roll
loopne
adc
inc
call
inc
and
xlat
push
jle
xor
data16
test
push
popa
cs
fdivrl
aaa
xchg
dec
and
cld
int3
jno
fcompl
mov
out
shr
adc
popf
inc
fdivrl
clc
popa
imul
not
iret
mov
add
inc
and
movsl
push
mov
data16
jb
mov
cmp
jge
repz
enter
add
lea
cmpsb
xlat
jge
pop
mov
and
and
mov
cmp
dec
dec
xrelease
orl
pop
js
sbb
adc
xchg
xchg
repz
fcmovne
mov
jg
ret
repz
dec
lcall
loope
stos
push
faddl
inc
xchg
rolb
repnz
and
sub
repnz
js
xchg
ja
out
in
push
int
mov
insl
sahf
dec
xchg
cmc
fildl
push
sub
adc
cmpl
jl
ficoms
or
sub
call
test
in
ficomps
pusha
lock
add
arpl
jnp
mov
sub
outsb
pop
mov
dec
out
in
popa
mov
adc
pop
pop
inc
je
adc
stos
loope
pop
pusha
outsl
mov
cmp
and
insl
and
push
andl
stos
ja
loope
add
cmp
cmpsl
xchg
sbb
mov
mov
pushf
sbbl
cmp
hlt
or
popf
jecxz
dec
out
movsb
adc
and
mov
mov
movsl
push
int3
dec
or
jecxz
aaa
add
lock
mov
mov
in
imul
pop
jae
es
xchg
xlat
jmp
pop
popa
push
adc
pop
mov
xor
push
push
cmp
mov
sbb
add
in
icebp
sbb
xlat
mov
jo
sahf
cmpsl
mov
popf
xchg
pushf
sub
sbb
loopne
sub
add
out
cld
mov
adc
leave
xchg
cmp
or
in
lods
fcomip
pop
and
mov
lahf
push
aam
loopne
imul
cmc
sbb
sar
xor
add
out
or
movsb
repnz
jmp
xchg
xchg
subb
rorb
mov
jg
or
insl
mov
cmp
jmp
and
rcrl
xlat
push
out
cmp
imul
cli
jge
xorl
insb
or
jae
add
cmp
mov
leave
mov
inc
adcb
xchg
inc
enter
lods
std
push
mov
stos
je
iret
mov
push
sbb
pop
dec
push
out
adc
loope
sti
mov
xor
call
xchg
repnz
mov
fstps
adc
mov
and
imul
mov
cmpsl
pusha
repz
cltd
ljmp
ja
ds
sbb
mov
in
add
add
mov
mov
bound
xchg
int
mov
add
mov
sub
decb
mov
es
adc
pop
out
out
pop
aam
ds
dec
mov
test
and
hlt
add
push
cmp
adc
in
jmp
mov
into
adc
fdivs
aaa
add
inc
xchg
jl
adc
or
mov
sbb
pop
ret
ficoms
in
and
inc
out
out
jb
mov
pop
dec
in
xchg
sbb
sti
js
and
mov
push
shll
out
xor
leave
arpl
and
or
mov
mov
in
sbb
push
and
in
pop
stos
inc
jns
movsb
cmp
imul
je
cltd
test
fwait
push
je
lods
push
xor
pop
pop
out
test
jl
dec
fldl
pop
pop
adc
adc
shrd
dec
mov
dec
adc
sub
int3
mov
mov
xor
fstl
xor
add
dec
push
xlat
xchg
pop
inc
adc
repnz
test
dec
xchg
pop
or
push
xor
mov
mov
rolb
add
add
or
popf
sti
std
or
sti
xchg
mov
aas
psllw
mov
testb
xchg
int
mov
movb
lds
add
mov
out
cmp
mov
dec
cmp
cmp
fcomi
add
mov
and
sbb
dec
mov
pop
gs
fmul
rcrl
enter
pop
mov
mov
faddl
cli
jl
dec
sub
scas
into
lds
xchg
mov
jge
lahf
inc
adc
outsl
ret
push
xchg
inc
js
fadds
aaa
and
fnstenv
pop
sahf
add
mov
jns
cmpsb
clc
xchg
std
mov
ret
sbb
shlb
ret
pop
jo
mov
mov
das
dec
xchg
push
mov
cli
fwait
shrl
ds
adc
sbb
dec
or
imul
int3
shrb
inc
mov
mov
les
in
cwtl
dec
mov
arpl
or
sbb
ja
cmp
dec
xor
inc
push
nop
dec
call
addb
cmpsl
mov
std
sbb
add
pop
or
xorl
cmpsl
mov
pop
and
pop
or
iret
jecxz
adc
and
insb
inc
jno
mov
ja
cmpl
lock
dec
fstl
mov
xor
in
adc
ds
or
and
cmp
pop
lock
stc
gs
mov
pop
mov
daa
mov
xor
xchg
lds
stos
or
dec
mov
cmp
xchg
pop
popa
cli
mov
fs
jl
add
into
aas
insl
inc
clc
popa
nop
pop
mov
push
insb
daa
push
clc
fisttpl
cmp
push
xchg
inc
jge
subb
sahf
xor
and
sbb
and
pop
in
stc
leave
cmp
push
xor
mov
scas
pop
pop
or
out
jl
aad
jge
in
scas
push
lock
push
xchg
cmp
and
ja
lods
shlb
and
jecxz
sbb
ficompl
push
pop
clc
mov
arpl
or
sub
xchg
jo
jae
hlt
movsl
xor
mov
out
mov
jmp
incb
xchg
loopne
in
paddq
dec
dec
push
fsubrs
cltd
iret
lea
loop
imul
mov
lods
cmp
xchg
imul
stos
add
gs
and
rol
ret
or
dec
and
pop
mov
mov
aad
adc
or
adc
sbb
add
push
adc
mov
test
out
inc
in
in
xchg
je
cli
test
movsb
daa
lods
dec
fidivs
and
lock
int
sub
stos
sub
mov
push
jp
insl
push
dec
jl
inc
xor
ror
ljmp
pusha
imul
movl
cld
push
sub
xor
adc
mov
or
cmp
orl
fs
addr16
push
add
sbb
push
sbb
push
sub
ret
sbb
jle
cli
push
push
and
push
fistl
outsb
fstl
add
pop
dec
cmp
mov
and
hlt
cmp
pop
test
mov
adc
cmpb
xor
ljmp
jg
addr16
dec
nop
cmpsb
pop
inc
or
sti
mov
icebp
loopne
dec
xchg
mov
jne
incb
jl,pt
mov
jmp
lahf
and
jg
andb
movsb
sti
loopne
xor
test
add
sbb
scas
test
stc
iret
or
mov
sbb
xchg
in
orb
in
imul
sbb
sub
jl
xor
cmpsb
xlat
movsb
mov
inc
lahf
ljmp
lea
pop
sbb
xchg
repz
sbb
mov
mov
scas
cwtl
arpl
mov
xchg
push
das
push
fidivrl
mov
mov
fxtract
je
dec
loop
dec
ljmp
or
rep
xchg
sbbl
cmc
sbb
push
jmp
and
mov
les
adc
das
push
push
pop
inc
ljmp
jp
xchg
jnp
mov
mov
inc
pop
xor
cwtl
or
outsb
mov
test
loop
jle
dec
das
aam
jne
mov
mov
fidivrs
adc
mov
dec
in
push
lahf
ja
outsl
fildl
add
inc
mov
sub
dec
jne
lret
lock
push
lock
imul
icebp
pushf
pop
inc
scas
pop
cs
jmp
insb
inc
test
rorb
add
inc
push
orl
sbb
test
adc
mov
lret
sbb
out
outsl
insl
in
mov
mov
mov
lret
mov
add
xchg
int
mov
mov
sub
loop
aad
pop
lods
icebp
cld
mov
mov
or
fdivrs
out
cs
jecxz
sub
adc
into
call
call
lret
lods
pop
out
and
stc
mov
cltd
into
mov
or
ljmp
mov
xchg
jo
mov
mov
push
jp
rclb
pop
add
cwtl
xchg
inc
stos
xchg
jmp
enter
or
or
mov
push
repz
xor
xchg
out
andb
cmc
pop
xor
incl
jmp
in
cli
es
mov
out
imul
inc
xchg
xorl
push
inc
loope
imul
out
mov
fbstp
cmp
mov
gs
hlt
jnp
add
ret
stc
repz
mov
and
inc
sbb
fsincos
pusha
push
jno
aaa
dec
outsl
cmc
int
in
push
mov
inc
aam
mov
jge
push
repz
or
adc
ss
outsl
jae
in
xor
dec
xor
lds
push
adc
or
popf
push
dec
and
cmpsl
xor
mov
mov
adc
mov
pop
dec
ds
cmp
or
or
lret
mov
dec
incb
sub
or
pushf
mov
add
test
mov
add
addl
dec
mov
pop
jmp
pop
mov
test
push
and
add
mov
in
push
test
mov
out
mov
pop
jbe
mov
pop
mov
gs
mov
xor
stos
fdivs
cmpsl
addr16
add
outsl
lret
sbb
bsf
sub
pop
mov
sti
int3
ljmp
es
cli
test
push
mov
ret
leave
movsl
push
sbb
insb
in
aad
fucomip
test
sub
cmp
out
dec
mov
dec
push
mov
int3
mov
iret
pop
jmp
nop
rol
sub
xor
push
pop
add
push
into
and
inc
popf
imul
in
inc
or
mov
ds
int
ror
mov
dec
pushf
das
ret
fldcw
mov
jns
lret
and
js
pushf
test
filds
inc
ja
or
out
fistps
test
xchg
loop
ficompl
aaa
repz
fcomps
lea
aaa
jg
sbb
jae
mov
mov
or
ret
pop
ja
fcmovb
pusha
lahf
js
movsb
and
xor
sub
popf
aaa
into
jnp
out
and
jl
jl
faddp
xor
sub
stc
notl
ret
stos
pop
bound
aaa
adc
jecxz
sub
aas
adc
mov
mov
mov
xor
add
mov
mov
lcall
jecxz
cmp
lahf
iret
push
js
insl
jbe
loope
pop
and
cwtl
sub
es
adc
sbb
xor
in
mov
iret
popf
aad
pop
jg
jle
mov
inc
je
xor
fwait
cmp
jbe
mov
and
and
pop
mov
movsl
mov
shlb
add
and
fimuls
xchg
js
and
scas
sbb
jo
lret
ljmp
scas
das
mov
sub
cld
fwait
cmc
shll
into
test
scas
cld
shr
mov
and
insl
sbb
add
or
jno
sub
pop
pop
add
fdivrs
mov
cmc
pop
xchg
imul
dec
popf
push
fimuls
sub
iret
sub
jl
cmp
cmp
xlat
movsl
mul
pop
or
subb
xchg
sub
inc
push
sub
pushf
sub
or
test
outsl
nop
cli
mov
add
iret
adc
je
jge
call
sub
sbb
jo
push
pop
cmp
push
mov
and
mov
aas
mov
jl
xor
inc
pop
xor
pop
mov
pop
lcall
mov
pop
mov
sub
outsl
adc
adc
inc
fldlg2
ljmp
jno
addr16
fsubrl
mov
xchg
pop
repz
inc
pop
sub
cmp
jnp
pushf
sahf
pop
cmp
pusha
jg
into
sbbl
sbb
lcall
lret
sbb
in
pop
das
outsb
addl
aam
push
jle
pop
fcomp
inc
setge
in
fistl
jle
adc
sarb
mov
popa
enter
jnp
add
sbb
scas
dec
je
xlat
popf
jns
sbb
out
test
dec
adc
push
or
mov
aaa
inc
adc
pop
mov
xor
and
ret
mov
mov
or
cwtl
pop
inc
cmp
xchg
dec
push
xor
imul
mov
jbe
icebp
adc
pop
daa
mov
shlb
popf
inc
int3
jl
pop
push
ss
mov
dec
mov
sub
xchg
add
int3
jg
adc
fnsave
xor
mov
xlat
stos
xchg
inc
into
pop
cmp
sub
aas
sbb
cwtl
sbb
dec
imul
das
cmc
fcomps
fnsave
push
cmp
sub
sbb
fsubp
stos
mov
cmp
je
aaa
xchg
cmc
es
mov
out
ss
or
sti
aad
inc
push
fs
jmp
xor
mov
pop
sbb
adc
addb
fisubrl
mov
cmp
xchg
pop
xor
add
adc
add
add
jecxz
or
dec
mov
mov
shrb
outsb
or
test
fbstp
mov
lahf
cwtl
inc
pushf
jbe
inc
insb
or
jae
fistl
out
je
aas
lock
ror
out
cmp
inc
mov
push
mov
mov
push
xchg
sbb
sbb
mov
mov
enter
push
aad
jno
dec
movsb
or
mov
mov
aad
sbbb
cmp
xlat
das
dec
xor
push
mov
cltd
xchg
out
pop
inc
cmp
mov
jle
repz
pop
inc
sub
aas
and
fidivrl
mov
pushf
and
jl
pusha
out
loopne
mov
mov
and
push
frstor
jl
jo
push
out
push
call
jns
les
adc
and
lret
mov
test
jnp
rcr
int3
pop
fsts
sbb
pop
stc
iret
fldenv
jle
in
mov
xor
lret
cmp
adc
mov
out
lds
test
lods
aas
pop
and
scas
dec
push
add
sub
or
and
sarl
cmp
lcall
rep
and
xchg
sbb
call
mov
sub
or
cmpsb
jp
pop
and
cwtl
bnd
xor
stc
push
xor
mov
mov
stc
in
enter
int3
sahf
jmp
mov
ja
ds
test
stc
out
mov
add
mov
sub
loopne
pop
xchg
jns
loop
loope
add
xor
or
mov
out
or
xor
aam
sbb
andb
or
sub
leave
ds
lock
jmp
shrl
push
mov
in
xchg
test
jl
pop
cmc
dec
hlt
or
push
nop
or
push
sub
jmp
mov
xchg
insb
xchg
cltd
test
gs
jns
roll
jns
lods
pop
fs
push
dec
jb
stos
and
lcall
out
push
sbb
cmpsl
sbb
inc
test
sbb
or
inc
cltd
mov
enter
int3
mov
pusha
cmp
inc
cmp
cmp
push
jnp
push
pop
ret
gs
psraw
aaa
mov
inc
and
mov
rcrl
sub
leave
sbbl
push
xchg
cmc
xor
scas
push
fdivrs
push
addr16
jg
filds
dec
jae
mov
std
mov
xchg
ja
push
pop
adc
in
lcall
inc
outsl
les
sub
test
add
push
inc
dec
xchg
call
clc
jg
dec
sub
push
or
inc
jg
cmpsb
rcrb
adc
repnz
imul
cld
pop
in
imul
inc
mov
xchg
jl
pusha
cltd
outsb
lret
cmp
xor
mov
cmp
aas
mov
shll
or
ja
lret
cmp
neg
mov
dec
cmc
mov
shlb
shl
lods
adc
jb
mov
xlat
rolb
mov
xor
cmp
jle
mov
cmpsl
inc
xchg
push
shlb
test
add
stc
scas
jo
xor
js
lea
xchg
jecxz
iret
ret
ja
mov
cmc
xchg
ss
out
sbb
jp
add
in
pusha
ja
inc
sbb
sbb
lcall
cmp
cmp
push
call
rol
out
sahf
cmp
scas
inc
mov
in
mov
pop
sahf
mov
inc
push
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
sbb
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
push
addl
mov
xor
orl
push
mov
decl
add
sbbl
mov
mov
addl
test
movl
je
mov
and
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
xor
andl
add
mov
mov
xor
or
sub
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
and
add
andl
mov
xor
mov
add
xor
add
sub
mov
mov
sub
xor
add
neg
mov
sub
lea
xor
xor
cmp
movl
je
mov
xor
movl
add
cmp
jne
pushl
orl
call
movzbl
add
mov
movzbl
xor
mov
add
mov
xor
add
cmp
movl
je
pushl
andl
pushl
xorl
call
mov
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
xor
or
dec
mov
jmp
mov
xor
incl
add
movl
cmp
movl
je
mov
mov
mov
mov
inc
mov
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
jmp
mov
adc
mov
sbb
mov
xorl
add
dec
mov
sbb
mov
or
mov
xorl
add
movl
mov
movl
jmp
mov
mov
add
orl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
jmp
lret
sbb
ja
mov
sbb
mov
add
jb
pop
jb
adc
mov
test
ja
divl
mov
gs
mov
das
lea
popf
and
push
pop
stos
or
mov
test
leave
gs
xor
xchg
rclb
or
sub
pop
and
pop
push
sbb
xchg
dec
mov
mov
dec
jl
jns
mov
lahf
je
push
xor
push
dec
sbb
xor
arpl
cwtl
sarb
lret
pop
out
pop
mov
inc
out
xchg
mov
stos
jl
call
jbe
arpl
sbb
pop
cmp
mov
xchg
mov
hlt
jae
insl
adc
addr16
mov
and
lret
mov
and
lds
jne
ficoml
cwtl
pop
loope
out
ja
push
mov
mov
data16
aam
push
add
xor
xor
add
mov
cmpsl
mov
or
add
cli
jo
sbb
mov
loopne
movsb
lcall
sbb
jbe
dec
mov
mov
push
mov
push
mov
negb
or
push
jl
push
xor
pushf
mov
outsb
jae
mov
add
mov
mov
shlb
addr16
mov
and
scas
lods
fs
adc
mov
shll
add
mov
cli
cld
xor
mov
rorl
jnp
pop
aas
lea
sbb
movsl
xorb
movsb
and
int3
shlb
add
sbb
test
add
sub
mov
push
xchg
in
sub
mov
sub
xor
jle
dec
outsb
or
imul
cwtl
negb
sbb
cmpl
imul
es
loop
popf
repz
js
data16
xchg
fistpll
stos
in
lcall
shr
jle
mov
sub
loop
push
cmc
dec
adc
or
popa
inc
pushf
mov
loop
sbb
jae
inc
xor
or
dec
idiv
sbbl
push
cmp
pop
push
push
mov
xchg
push
cltd
bound
ret
stos
mov
addr16
repnz
stos
lock
sub
sub
jle
cmp
adc
stos
nop
subl
sahf
sub
dec
rol
jmp
dec
add
lods
xchg
inc
mov
sbb
rclb
mov
push
repz
loop
jno
pop
lcall
and
dec
push
mov
int3
mov
mov
in
sbbb
rol
das
adc
aas
je
shrl
sbb
repz
pusha
hlt
cmp
decb
push
inc
repz
cmpsb
cmp
cli
push
or
aam
int
decl
stc
adcl
in
out
xor
push
scas
mov
cmpsb
xor
outsl
lods
push
sbb
add
adc
mov
jge
push
jl
add
sbb
and
xchg
cli
jle
jne
and
ffreep
push
add
js
xchg
inc
fisubrl
push
cmp
and
out
cmp
dec
mov
xor
mov
jge
nop
add
xlat
xchg
sub
lds
aam
imul
ja
add
pop
mov
sbb
and
xchg
daa
xchg
mov
outsl
mov
push
dec
lret
out
push
movl
call
and
loopne
scas
in
dec
add
insl
pop
roll
jns
inc
adc
cmp
or
enter
bnd
adc
nop
sbb
jne
and
mov
arpl
pop
int3
push
mov
aas
dec
add
lahf
mov
lods
fisttpll
test
jge
pop
fsubs
mov
jmp
mov
mov
or
and
cli
cld
aad
mov
data16
ficoms
sub
push
in
popa
mov
rclb
cwtl
sbb
push
dec
cmp
pop
cmpsb
mov
push
in
stos
adc
fwait
add
mov
sub
inc
rcr
xchg
ss
jge
insl
adc
in
stos
getsec
sub
lods
inc
adc
dec
imul
cmp
mov
pop
lret
inc
in
add
mov
js
repnz
aaa
fadds
push
shl
push
int3
lea
sbb
adc
sbb
inc
out
aaa
lea
fs
ja
inc
push
push
push
pop
daa
cmp
jae
push
xor
mov
aaa
xor
cmp
jnp
mov
lods
sub
iret
add
mov
mov
sbb
in
rorb
mov
sub
incb
xor
mov
push
and
cmc
inc
dec
adc
pusha
lock
xor
pop
inc
xchg
pop
jne
popa
jmp
shlb
ds
xchg
pop
cmc
aad
pushf
and
adc
xchg
and
xor
push
adc
jb,pn
lret
push
push
mov
cltd
dec
dec
jge
ja
xchg
jo
pop
faddl
je
push
sub
cltd
incl
mov
sbb
inc
icebp
rorl
int
rcr
mov
dec
push
mov
lock
xor
or
mov
addr16
imul
das
sti
sub
add
xor
shll
ud2
xchg
andl
aaa
and
mov
nop
jae
adc
or
add
es
sub
xlat
adc
xchg
shlb
dec
scas
ljmp
imul
and
clc
test
inc
dec
add
out
dec
outsb
mov
cmp
mov
sbb
pop
sbb
lods
out
jb
and
xchg
mov
dec
adc
out
fcompl
nop
inc
or
cmp
adc
xchg
cmpsl
insl
es
sub
ror
or
xor
fwait
cwtl
mov
imull
mov
xchg
xchg
lea
data16
cld
xor
add
xchg
shl
gs
fidivs
cmpsl
mov
ficomps
xlat
pushf
xor
stos
cli
mov
fwait
cmc
fistpll
lret
dec
inc
jl
mov
xor
pop
stos
gs
sub
push
xor
push
mov
push
je
clc
push
mov
and
jno
mov
cli
jmp
xchg
inc
mov
pop
jmp
dec
test
out
mov
adc
mov
inc
adc
cmp
test
mov
dec
mov
divl
xchg
pop
ret
bnd
jge
xchg
adc
jp
cmp
in
mov
pop
inc
push
pop
fcomps
fnsave
sub
mov
mov
mov
and
fdivrl
jl
pop
clc
xor
cld
add
dec
test
or
pop
dec
stos
and
pop
inc
pop
aad
add
sbbl
mov
loope
les
add
inc
xchg
mov
or
gs
xchg
insl
pop
fists
gs
or
out
xchg
neg
adc
sbb
or
rorb
call
xor
dec
mov
emms
pop
outsl
jnp
cmp
mov
packsswb
fidivs
add
call
cwtl
outsb
push
loopne
arpl
in
fwait
out
or
pop
call
stos
mov
xor
in
test
aaa
xchg
and
loop
jle
pusha
fprem1
scas
out
sub
pop
inc
xchg
arpl
mov
lahf
shlb
pop
jnp
add
test
std
adc
jmp
test
lret
lods
in
adc
fbld
xchg
shlb
push
inc
scas
jecxz
jge
pop
dec
jns
out
icebp
inc
stos
test
mov
dec
pop
rolb
insb
adc
inc
dec
push
popa
or
xor
cli
movb
out
mov
lock
mov
ficoms
or
dec
rcl
mov
pop
dec
cli
jnp
and
hlt
aam
xor
lcall
add
push
mov
sbb
ret
inc
lods
std
pop
arpl
or
rcr
in
jnp
stos
sbb
push
popa
push
bound
xor
adc
leave
out
test
pop
hlt
mov
rcrl
xchg
ja
stos
mov
push
outsl
xchg
sar
jmp
sbb
mov
adcl
stos
andl
sub
and
mov
mov
pushf
scas
sbb
out
push
test
and
imul
into
push
pop
push
mov
pop
dec
jle
add
test
push
les
mov
adc
or
inc
cmp
inc
icebp
sbb
clc
or
dec
aam
adc
lcall
cmp
fwait
mov
stos
cmpb
bound
mov
rorl
fwait
and
push
inc
xlat
icebp
cmp
xor
jnp
sarl
jp
aas
dec
dec
popa
lea
add
cmp
cmp
push
jne
in
ja
sbb
dec
jp
bound
les
out
pop
sub
cltd
fistpll
cmpl
mov
shl
cmp
hlt
jecxz
imul
mov
cmp
fdivs
int3
or
ja
in
leave
pop
pop
rclb
sub
jae
mov
xor
in
mov
into
stc
cmp
mov
dec
out
and
std
sbb
add
les
mov
sbb
aam
addr16
stos
dec
into
and
add
pop
mov
clc
inc
clc
jmp
sub
mov
push
mov
and
push
rcrb
xchg
cld
push
cmp
sub
xlat
in
mov
pop
mov
mov
cmpsl
cmp
lea
dec
xor
push
les
in
fsubrs
push
ffreep
mov
mov
jle
jg
cmpsl
lods
pop
lea
adc
ficompl
insb
cmp
mov
xchg
push
pop
pop
jle
mov
scas
cmpsl
adc
xor
xchg
mov
fxam
stos
mov
popf
push
enter
stc
call
cmpsb
cwtl
lods
pop
int
fsubs
push
mov
inc
push
dec
mov
aam
push
daa
test
sbb
shrb
pop
lret
cmpl
out
fwait
stos
out
gs
lret
dec
jne
jmp
sub
dec
mov
sbb
filds
push
xor
lods
push
pop
hlt
repnz
xor
mov
psraw
and
shl
cs
dec
aam
jecxz
dec
push
inc
scas
insl
adc
cmpsb
mov
js
icebp
mov
inc
mov
mov
pusha
ss
pop
cmc
or
faddl
or
jp
test
lods
mov
test
cmp
mov
pushf
add
cmpsb
mov
mov
loopne
ret
into
lock
cmp
pushf
ret
sti
or
push
imul
and
into
clc
lret
jmp
pop
negb
sbb
push
mov
loope
push
mov
xor
add
mov
out
pop
ret
xchg
arpl
scas
cmp
imul
orl
movsb
or
jp
pop
ds
andb
push
nop
add
test
in
aam
inc
rcrl
or
cwtl
pop
add
or
jbe
lahf
xchg
ret
test
imul
mov
pushw
not
cmp
out
or
cs
mov
enter
jp
sbb
imul
adc
cmpsb
les
adc
mov
mov
idivl
mov
pop
xchg
add
es
mov
mov
mov
jecxz
sbb
add
sub
cmc
push
cld
push
aam
fidivrs
dec
aaa
mov
das
daa
mov
add
xchg
cmc
sub
push
adc
sbb
sub
ja
xchg
push
dec
add
pop
add
in
cmp
add
loope
jecxz
inc
push
dec
jne
inc
loopne
shlw
pusha
push
loope
sbb
jmp
push
test
sbb
stc
dec
insl
inc
hlt
inc
mov
stc
xchg
mov
lret
push
aas
cld
loopne
cltd
mov
cmc
test
mov
mov
mov
mov
pop
in
ret
hlt
fdivrl
fs
mov
cmp
std
adc
pop
cmp
sub
xchg
or
and
ss
mov
push
fsubrl
sahf
fiaddl
mov
aad
push
repz
sub
aam
xchg
push
mov
dec
ret
xchg
loop
pop
lock
inc
xchg
enter
xlat
inc
in
mov
xchg
insb
scas
mov
mov
sub
inc
addr16
repz
inc
aaa
jmp
pusha
sbb
stc
insl
pop
test
inc
adc
pop
lahf
push
push
add
adc
dec
push
xchg
shlb
xchg
cmp
push
push
ret
xor
inc
jo
or
dec
out
clc
fstpt
in
add
sub
roll
cmp
flds
in
addr16
mov
jecxz
pop
push
mov
in
xor
jp
cmpsb
xor
sti
push
sub
mov
mov
mov
scas
xor
inc
inc
sub
sbbb
push
ret
jo
mov
jb
mov
pop
add
cmpsl
adc
cmp
fistpl
popl
cmpsb
jmp
cmp
add
inc
lret
mov
push
cmp
cwtl
xor
jae
adc
lcall
imul
fstpt
insl
jmp
int3
sti
mov
push
or
addb
repz
dec
cmp
mov
aad
push
add
push
sbbb
xchg
dec
mull
testb
scas
leave
push
adc
sub
inc
xchg
in
ljmp
sub
mov
inc
inc
arpl
push
cmc
mov
push
mov
cmpsb
sub
dec
or
std
xor
outsl
out
push
jne
fmuls
das
lahf
jecxz
dec
loope
mov
cmp
mov
mov
aas
dec
or
xchg
inc
movsl
sbb
stos
cmpsl
inc
dec
jp
out
jb
dec
repnz
mov
fldenv
lea
and
shl
add
jns
outsl
int
mov
or
out
shl
sbb
mov
cmp
pop
je
cltd
stos
pop
mov
jb
outsl
xorb
stos
in
insb
mov
fbld
mov
or
sub
push
inc
and
xchg
push
cmpsb
clc
negl
mov
cmpsl
push
lods
jmp
call
fxtract
daa
xor
mov
cmpsl
rol
jne
push
in
pop
js
out
sbb
xor
cli
ret
lea
cmp
mov
sub
pop
lcall
cmp
addl
call
sub
js
jae
mov
add
or
sti
jg
leave
pop
pop
xchg
add
or
sub
jae
sub
mov
cld
push
clc
out
enter
cmp
int3
shr
push
mov
push
js
xor
push
sub
jg
out
sahf
xor
xchg
dec
dec
lods
in
sarl
mov
loope
subl
adc
xchg
outsb
xor
cmc
xor
xlat
and
cmpb
cmp
xor
inc
loopne
je
adc
xor
icebp
xlat
mov
addl
scas
das
pusha
bswap
and
nop
jp
aaa
add
cmpl
lcall
shl
in
movsl
icebp
mov
stc
lret
gs
aaa
shrb
subb
psubd
bound
jmp
dec
daa
int3
add
xchg
enter
jb
popa
out
jbe
inc
inc
icebp
int
and
in
sbb
rolb
lahf
fdivrl
ror
ret
pop
test
mov
stos
mov
scas
sub
ret
fsubrl
lock
test
cmp
push
jl
jnp
sub
stc
std
pop
mov
jnp
add
mov
popa
popa
inc
jp
aad
dec
pop
popa
mov
sbb
mov
adc
ja
enter
cs
sub
sub
imul
dec
adc
dec
lahf
xchg
mov
mov
pusha
dec
lock
and
push
xchg
scas
jg
xchg
js
jnp
lea
and
fisttpl
jecxz
mov
cwtl
ds
sbb
call
lret
cmp
in
rcrb
push
jge
inc
pop
or
sbb
loope
insb
pop
gs
mov
add
push
jbe
notl
push
lods
mov
ds
mov
sbb
inc
add
shrb
dec
mov
orl
fwait
sub
imul
and
mov
mov
push
push
push
pop
popa
and
jmp
rclb
bound
rolb
dec
lcall
push
xchg
or
mov
out
subb
xor
shr
in
ds
data16
mov
jecxz
mov
push
fs
frstor
rcrl
fldl
stos
lea
jo
fists
aad
cs
call
adc
dec
jne
idivl
loop
mov
mov
lret
fdivr
pop
cmpsl
jbe
jle
push
pushaw
push
loopne
pop
jle
loope
cmp
xchg
lret
aam
stos
sub
push
pop
jbe
cld
push
pop
xchg
outsl
in
in
cli
cmp
add
cli
sbb
jno
cmp
push
mov
xor
xchg
xchg
cmp
ljmp
and
mov
and
or
xchg
dec
and
jae
test
adc
pop
pop
lahf
jno
imul
mov
and
arpl
jmp
jns
xchg
arpl
adc
imul
jne
roll
pop
jmp
int3
sbb
jl
je
clc
fisubrs
mov
shlb
fisttpll
xchg
cmpsb
or
test
lret
and
addr16
lcall
mov
mov
dec
inc
sbb
pop
je
insb
sbb
push
push
mov
inc
pop
jmp
out
mov
mov
ret
xchg
and
lds
mov
paddsw
jne
and
push
cltd
mov
lds
sahf
repz
pushf
lahf
jge
mov
imul
mov
xor
dec
mov
mov
adc
cmp
push
jns
aaa
jecxz
jae
mov
pop
jecxz
je
jge
mov
das
aas
xlat
cmpsl
stos
mov
mov
adc
popf
sbb
mov
pop
insl
inc
daa
jae
inc
jne
mov
int3
jb
std
pop
adc
or
jl
lret
scas
lods
enter
js
rol
out
outsl
or
mov
sbb
ss
lahf
es
mov
add
or
mov
mov
clc
stos
lds
jecxz
add
jmp
mov
jne
adc
cmp
scas
mov
stos
or
and
mov
callw
lcall
jns
xchg
fchs
jne
and
cmc
sar
pop
cmpsb
mov
jbe
push
enter
sbb
addr16
ret
pop
loop
sub
xchg
out
fmull
inc
pop
jnp
out
mov
jb
lods
in
jae
cltd
and
rcll
pop
icebp
pop
int3
or
std
jl
push
jne
adc
dec
sbb
loopne
add
xor
fidivrl
pop
cwtl
sbb
lret
push
pop
xchg
and
shrl
decl
lods
fcomip
cmp
cltd
aaa
repz
pop
lcall
sub
int3
add
sub
or
mov
int3
and
inc
and
int3
sub
push
mov
lods
ds
out
int
xchg
add
fdivl
iret
out
dec
jae
mov
aam
ds
rorb
mov
call
mov
shrb
cmpsl
jecxz
inc
in
jecxz
sub
stos
xchg
push
mov
mov
clc
inc
shl
fidivrl
int
jmp
les
jle
adc
or
xor
xchg
leave
xchg
rol
sbb
imul
lock
fisubrs
dec
xchg
sub
mov
mov
mov
cli
lods
cmc
filds
pusha
add
cmp
and
movsb
cmp
aad
push
sub
repz
xchg
insl
js
sbbb
jmpw
xor
movsl
insl
in
cwtl
sbb
xlat
adc
xor
scas
xor
push
push
mov
or
out
sbb
lret
lods
scas
repnz
and
jb
xor
fstpl
push
icebp
adc
icebp
add
aad
push
shlb
jg
sbb
pop
fcoms
sub
pop
mov
int3
jbe
xor
pop
adc
fistpl
out
add
je
fsub
jbe
aam
pop
pop
push
push
jl
scas
subl
arpl
jmp
pusha
out
xlat
push
ss
jno
fdivrl
jle
scas
fstpl
push
lock
mov
or
push
in
pop
bnd
cmp
mov
sub
sub
fsubrp
sub
mov
pop
dec
mov
mov
inc
roll
or
aaa
mov
mov
sti
pop
adc
inc
inc
leave
inc
and
push
aaa
pop
divb
aad
out
inc
dec
cmp
mov
push
ds
fcomip
dec
in
dec
lahf
mov
test
jmp
pop
nop
push
mov
mov
adc
not
adc
idivl
cwtl
fyl2xp1
cli
mov
and
pop
ss
test
loop
push
lock
insl
test
ss
std
nop
mov
push
and
or
imul
and
ret
jmp
idiv
sub
push
xchg
mov
aas
scas
loope
loopne
incl
sub
lods
test
inc
pop
inc
movsl
xchg
fidivrs
add
xor
sbb
jns
jo
mov
aad
xchg
pop
leave
ret
mov
jmp
clc
test
mov
jp
out
and
dec
arpl
mov
stos
pop
push
loopne
jmp
or
ret
jns
sbb
jecxz
ficoms
fisubrl
pusha
sub
outsb
cltd
jne
outsb
scas
in
insl
pushf
nop
push
out
push
shll
repz
jb
mov
cmp
jb
repnz
add
sbb
rcrl
les
scas
or
xchg
mov
lret
scas
or
sub
out
jo
jae
popf
adc
mov
addr16
sub
ret
lcall
in
mov
js
ja
sbb
add
fistps
cs
and
xchg
mov
dec
xchg
imul
bound
aaa
jg
clc
lret
pop
pop
imul
out
aad
push
adc
jbe
jo
cmc
sub
popa
dec
mov
pop
idiv
lret
aas
filds
sub
cmp
or
mov
daa
pop
cmp
popf
add
lds
adc
je
loopne
mov
out
pop
stos
pop
inc
xchg
mov
std
lods
cmp
into
or
pop
popf
lret
jbe
repz
jmp
inc
pop
out
aam
in
lret
loop
inc
cmp
jp
int
push
enter
aaa
and
addr16
or
cmp
cmp
adcb
icebp
les
mov
and
repnz
adc
pop
mov
in
sbb
inc
addb
ficoms
xchg
out
in
jne
and
or
fists
dec
mov
xor
idivb
in
ljmp
aam
xchg
jmp
pop
fcompl
les
sbb
cld
add
adcl
xchg
xor
aam
push
sbb
fistpl
cli
cmp
mov
add
cli
ja
and
jle
dec
repnz
mov
iret
sarb
rcrl
iret
lods
mov
pop
or
cmc
lahf
cli
mov
cmc
push
lret
jne
lret
push
and
or
inc
inc
testl
dec
stos
mov
mov
adcl
loop
pop
lods
sub
cmc
call
jns
testb
jl
jb
sub
dec
addr16
enter
les
data16
ljmp
imul
fnstcw
jbe
pop
bound
xchg
nop
out
inc
cltd
cmp
test
clc
mov
push
mov
adc
mov
mov
aaa
mov
sub
push
xor
jb
jne
in
dec
or
sbb
cwtl
sbb
pop
shll
mov
lods
dec
or
lock
jmp
lcall
imul
insl
sbb
push
stc
cltd
or
clc
sub
dec
sahf
pop
lahf
arpl
lods
lret
les
add
push
push
jp
movsb
dec
jno
mov
add
jno
mov
xor
aaa
adc
xchg
std
std
loope
dec
out
xchg
dec
fadds
negb
xchg
scas
mov
mov
leave
sbb
cmc
mov
mov
xor
mov
ss
lds
pop
out
out
xchg
stos
jno
or
xchg
xor
pop
jl
mov
sub
pop
push
in
jl
mov
sub
cmc
outsb
push
addr16
sub
fwait
loop
inc
mov
mov
jmp
outsl
nop
rcl
and
ja
push
xchg
shr
sub
mov
imul
mov
scas
cmp
aas
bound
adc
jmp
int3
aaa
mov
in
xlat
sahf
dec
xor
es
and
das
in
add
adc
lods
movsl
push
js
arpl
sub
rclb
cwtl
jmp
push
jl
mov
ret
fsubp
scas
add
jo
scas
inc
push
fimull
xor
pushl
jno
movsb
cmc
add
es
pushf
mov
data16
ja
andl
jns
and
je
leave
popa
pusha
pushf
fsub
dec
push
pop
add
stos
aad
add
pushf
push
sbbb
inc
sub
aam
push
xor
mov
dec
mov
in
mov
xor
and
cmpsl
sarb
lret
ret
jb
sarl
xchg
mov
scas
xor
jp
sub
popa
jg
dec
in
mov
mov
jo
cmp
sub
mov
jp
sub
mov
shlb
das
jl
mov
xchg
movsl
dec
jne
dec
sbb
test
sbb
out
cmp
push
cmp
push
sub
cmc
inc
stc
xor
jbe
and
push
bound
push
lcall
ss
push
or
sahf
fucomi
xor
leave
mov
ljmp
jmp
sub
and
aaa
fistps
fimull
out
add
bound
jp
push
push
and
xor
cld
mov
lea
sub
xor
cli
divb
sub
mov
xchg
adc
add
inc
adc
inc
lods
sub
jb
ffreep
testb
je
out
mov
and
out
repnz
outsb
sbb
xor
popf
add
jns
sbb
or
aad
push
test
or
sub
cmp
mov
addr16
pop
insb
pusha
into
std
sbbl
aad
pusha
sbb
aad
icebp
dec
outsl
cmc
dec
in
movb
sub
push
pop
push
in
leave
mov
cmp
xor
xor
repz
adc
adc
xchg
pop
fsubl
hlt
or
fwait
fwait
lret
sbb
imul
pop
cs
bound
imul
popa
dec
loop
mov
push
enter
xor
cmpsl
mov
push
out
dec
icebp
flds
jno
repnz
insb
mov
cmp
and
cmpsb
push
xchg
dec
int3
or
inc
popf
push
xor
add
scas
adc
loope
mov
movsl
pop
xchg
inc
popa
imul
test
or
mov
mov
and
js
cld
or
dec
add
cltd
ja
or
push
inc
insb
mov
jnp
cmp
je
scas
dec
addr16
clc
or
or
cmpsb
jae
jne
jle
shrl
roll
std
dec
mov
cmp
sbb
shrb
stc
push
mov
jg
aam
iret
cld
call
lock
inc
data16
cmp
popf
dec
sub
sub
mov
adc
pusha
pop
loopne
pop
fsin
popa
jl
push
inc
jp
imul
jg
aam
sub
mov
std
aad
gs
daa
cs
nop
mov
inc
mov
popa
dec
scas
add
int3
mov
lret
std
movsb
pop
dec
mov
sbb
push
sti
movsb
fcoml
in
push
lahf
fcoml
dec
mov
repz
pushf
arpl
dec
jp
ret
sbb
jnp
aad
add
out
push
sub
push
add
or
ret
jge
cs
push
out
xor
jmp
mov
lret
mov
pop
push
bound
in
sbb
xor
daa
pushf
flds
aas
add
pop
xchg
adc
cld
sub
sbb
test
enter
or
fs
add
sbb
loopne,pn
call
or
sbb
dec
mov
mov
popf
mov
test
lods
cmp
xchg
pop
mov
sub
jmp
add
pop
sti
scas
adc
das
and
fisubl
jae
xlat
scas
dec
xor
sbb
mov
push
push
push
jno
jb
push
push
fstps
sti
iret
arpl
cli
in
sub
xchg
pop
jge
or
sub
pop
dec
test
xchg
insb
sub
sbb
std
ret
aaa
inc
jbe
scas
push
jo
ss
aam
test
test
dec
xchg
int
or
shll
insl
fwait
mov
out
sbb
icebp
adc
xlat
cltd
sbbl
out
pushf
sbb
xchg
adc
repnz
pop
push
aad
pushf
mov
jecxz
jbe
jp
jmp
int3
jb
fidivrl
rol
mov
mov
enter
insl
cli
jmp
xchg
sbb
loope
ss
mov
xor
hlt
jo
adc
adc
add
sbb
cld
aas
sbb
xchg
mov
xchg
fucomi
jb
in
lock
jge
mov
call
dec
inc
xlat
inc
sub
xor
loop
movsl
xor
add
pop
jmp
jge
inc
mov
outsb
sub
mov
jecxz
push
push
lods
mov
and
dec
pop
rcrl
sub
insl
add
je
cltd
push
sbb
xchg
xchg
sub
add
mov
stos
cmp
mov
popf
mov
pop
push
or
into
pop
mov
scas
iret
cli
sbb
mov
sub
push
test
cmp
xchg
mov
dec
sub
das
insl
cli
arpl
cs
and
mov
aas
mov
stos
sbb
inc
insb
bound
sarl
push
fldcw
into
iret
ss
dec
insl
push
inc
adc
inc
movsb
daa
or
out
fadds
inc
push
mov
add
mov
adcb
bound
push
lahf
out
jp
cld
sub
cltd
dec
xchg
xor
pop
or
adc
fmull
mov
and
push
sbb
jecxz
jmp
test
cmp
daa
cmpsb
mov
adc
fst
push
mov
cmp
mov
inc
sub
cmp
mov
xor
pminub
mov
jge
les
mov
sub
out
mov
and
lods
adc
movsb
sahf
ss
and
fnsave
pop
sub
inc
xchg
pop
push
fisttpl
in
cmp
pop
outsb
xchg
or
lret
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
jmp
xchg
cli
testl
jae
adc
pop
mov
jb
clc
pop
jb
std
call
adc
jmp
and
push
lods
and
mov
xor
jns
fidivrs
loope
mov
test
loopne
fwait
mov
inc
aam
ret
sbb
rorl
jb
inc
xor
jnp
jl
sub
mov
pop
loope
out
scas
cmpsl
repz
jg
jmp
andl
mov
iret
outsl
xchg
mov
leave
rcr
xor
rclb
jl
inc
push
pusha
int3
hlt
jae
imul
mov
ljmp
sbb
sbb
pop
jge
sbb
mov
cltd
dec
inc
mov
mov
in
xor
scas
mov
pop
mov
lods
std
scas
outsl
cmp
ljmp
push
push
push
in
sub
sbb
rcl
mov
rcll
jae
add
or
rorb
push
xchg
jnp
fisubl
cmp
test
lock
stc
shlb
mov
pop
jns
test
inc
mov
sbb
push
out
aad
mov
orl
cmp
mov
arpl
pusha
bound
das
or
push
sub
pusha
cmc
dec
xor
or
push
ljmp
pop
sub
inc
outsb
push
mov
mov
pop
adc
jle
sbb
dec
push
push
sbb
je
sarb
test
inc
cmpsl
jne
push
xor
xchg
dec
xor
mov
fisubrl
lahf
cmp
push
xchg
arpl
nop
xchg
xchg
mov
dec
jecxz
push
inc
mov
jecxz
out
add
xor
shrl
jnp
sub
scas
sbb
mov
add
cld
sub
int
mov
imul
sbb
xchg
aas
movq
xchg
scas
xor
push
xor
mulb
fstp
sub
aam
sbb
sub
xchg
xchg
add
lods
lcall
sbb
adc
dec
sahf
push
mov
sub
and
add
pop
sbb
enter
dec
cmpsb
cmp
rorb
pop
sbb
mov
fistps
xchg
jbe
outsb
or
sub
mov
or
sub
loopne
jmp
and
add
ljmp
stos
test
mov
dec
jmp
pop
or
stc
mov
cwtl
sbb
call
adc
cmpsb
mov
sbb
mov
push
xor
pop
dec
or
xor
xor
mov
mov
mov
mov
test
shll
mov
popf
sahf
mov
jne
test
jo
arpl
jne
mov
outsb
lret
xchg
test
movsb
mov
out
jle
mul
lods
xchg
pop
fldl
int3
fs
repz
int
pop
jecxz
dec
add
mov
lods
pop
xlat
or
add
xchg
je
lods
scas
and
jecxz
and
dec
pop
mov
aas
jmp
lds
repnz
push
mov
lahf
das
jae
cli
sub
xor
shll
adc
push
sub
enter
lds
xor
pop
rcrl
mov
sbb
jno
scas
jp
mov
int
cli
xbegin
clc
jge
int3
leave
bound
xlat
dec
and
ds
lcall
xor
dec
in
hlt
mov
mov
and
repnz
mov
add
mov
js
cmp
or
push
nop
mov
push
or
rcll
repnz
mov
xchg
unpcklps
add
ss
lret
push
mov
test
push
pop
pop
pop
in
push
dec
add
aas
scas
xor
sbb
dec
ret
xor
sbb
pop
add
pusha
jmp
out
sbb
push
mov
subl
imul
cmpsb
out
lahf
les
fcoms
cs
xor
std
sbb
ja
and
das
out
or
fdivrl
mov
inc
mov
push
aaa
sahf
adc
jne
and
xchg
add
test
js
test
or
loope
data16
and
loopne
adc
loope
test
jo
or
xchg
pusha
add
push
inc
inc
inc
out
int
outsb
inc
shlb
pop
lret
stc
pusha
mov
sarl
fsubrs
mov
xchg
push
mov
mov
xchg
ds
lock
fldenv
hlt
and
pop
imul
mov
inc
test
cmpsb
call
pop
push
ret
cld
jnp
scas
in
jecxz
sarl
jb
mov
sbb
inc
outsb
push
dec
inc
sbb
mov
add
js
mov
jns
mull
jbe
mov
fs
jg
add
ljmp
dec
lds
and
fsubs
mov
ss
cmp
cmpsl
jae
and
hlt
cmp
or
and
imul
cli
dec
sub
in
jle
jl
mov
cli
ljmp
mov
cwtl
mov
stos
xchg
sub
enter
cli
ds
sbb
push
int3
arpl
call
test
add
xchg
subb
add
add
mov
imul
shll
sti
mov
ja
adc
shl
cld
mov
shlb
xor
mov
leave
aam
shrb
xor
insl
xchg
test
cmp
mov
cmc
pop
cwtl
push
rorb
pop
adc
cwtl
mov
jo
inc
inc
or
cwtl
pop
mov
test
sub
mov
int3
iret
xor
push
imul
aad
shr
push
outsl
cmp
or
lcall
mov
mov
sbbl
lret
dec
sub
mov
orb
repz
push
xchg
and
sub
adc
sub
pop
push
xchg
scas
outsl
shlb
cmpsl
jecxz
ss
test
negl
out
andl
popa
pop
pop
xchg
movsb
outsb
aaa
ss
push
leave
popf
or
and
and
jno
sbb
jbe
pop
mov
repnz
xchg
inc
int3
nop
scas
pop
inc
imul
es
pop
sbb
lea
add
jg
jge
pop
jne
lcall
and
ret
xor
in
insb
cmp
mov
xorl
sti
iret
shrl
in
jecxz
pop
jg
lcall
ror
imul
adcl
imul
adc
or
out
js
lret
jnp
xchg
mov
pop
jmp
or
and
stos
rcrl
mov
push
cmp
jnp
mov
or
callw
std
popa
add
cwtl
mov
ja
inc
inc
std
xchg
dec
ja
sbb
xchg
xchg
cmp
dec
or
test
cmpsb
push
repz
jl
pusha
aad
fwait
jg
xor
jo
push
popf
leave
pop
mov
adc
xor
or
fldcw
sub
xlat
push
icebp
cltd
inc
cld
dec
sarb
stos
test
movsb
and
push
push
movsb
jb
scas
pusha
pop
shlb
inc
loopne
fstpt
add
mov
movsb
jno
push
in
loop
dec
mov
jb
and
cmpsl
inc
or
mov
orb
fsubp
jp
adc
repnz
dec
cmp
adcl
push
inc
out
or
add
inc
icebp
out
enter
mov
xchg
or
xor
push
xchg
and
xchg
inc
mov
in
jmp
pushf
fistpl
xchg
add
jne
xchg
jmp
dec
adc
adc
in
hlt
iret
fisubrl
mov
out
fcoml
fwait
out
cmpsl
nop
sub
cmpsb
push
mov
dec
into
and
mov
inc
jge
and
out
lea
rcrl
in
gs
lret
xor
dec
push
test
inc
and
mov
idivl
roll
xor
testb
inc
pop
mov
dec
scas
loopne
push
mov
cmp
in
dec
mov
sbb
add
add
std
inc
cmpsl
adc
xorb
push
iret
sbb
adc
mov
scas
leave
js
lahf
cmpsb
into
dec
es
mov
sub
or
test
sahf
fisubs
inc
notb
outsb
mulb
pop
dec
fldt
pmuludq
add
test
mov
rclb
and
call
and
stos
insb
push
cmpps
sbb
ljmp
scas
dec
dec
scas
push
mov
lcall
jmp
sbb
bnd
xchg
adc
fstl
sub
aas
dec
cld
cmc
cld
imul
xor
and
je
pop
negb
jnp
sti
mov
call
push
ja
inc
xchg
push
pop
push
cmp
jnp
icebp
and
outsb
or
inc
leave
and
mov
dec
rep
mov
add
mov
outsl
inc
movsb
enter
ja
adc
addr16
pop
xchg
ljmp
iret
cld
mov
xor
jl
cwtl
sbb
xor
ljmp
out
or
cmp
repz
pop
lret
je
cmp
js
int3
push
push
dec
scas
xchg
fnstenv
leave
addb
int3
es
les
test
rcll
sbbl
xchg
add
sbb
push
cmpsb
add
pop
ja
imull
aas
mull
sbb
mov
lods
into
sti
pop
pop
jge
mov
iret
sub
movsb
xor
adc
push
mov
aam
orb
out
cmpsb
push
rolb
mov
cmp
jnp
cmp
sbb
adc
mov
mov
cmp
jmp
das
dec
mov
inc
xchg
push
xchg
add
xchg
adc
stos
cli
mov
out
push
push
into
mov
arpl
notl
stos
mov
data16
mov
mov
pop
int3
adc
clc
sub
test
in
je
push
ficompl
mov
jge
shrl
js
push
jge
nop
cmpsb
ret
pop
and
mov
xorb
pop
adc
pushf
mov
xor
xor
jbe
xchg
cwtl
lock
call
cmpb
push
es
push
enter
mov
pop
mov
std
mov
dec
adc
mov
rol
mov
std
pop
push
jne
push
pop
mov
sub
mov
arpl
jle
or
fwait
xlat
les
or
ja
mov
push
mov
xchg
es
lock
or
in
or
lods
cwtl
add
cmp
jnp
repz
roll
cmp
adc
lahf
pop
sub
call
xor
inc
pop
pop
xor
xchg
out
mov
xor
test
test
add
outsb
ds
push
sub
mov
pop
inc
mul
dec
gs
jge
aaa
pusha
mov
cmpsl
fucomip
mov
scas
adc
rol
xchg
lcall
lock
js
in
push
lea
mov
hlt
cmp
in
push
push
cmpb
aad
xor
sbb
ret
stos
js
lea
int
movsl
mov
cld
cmc
cmpsl
or
js
push
inc
das
xchg
lds
mov
inc
mov
iret
sti
pop
mov
dec
test
mov
int3
das
mov
movl
daa
out
xor
sub
std
pop
push
ljmp
xor
or
das
mov
or
shlb
push
scas
imul
cmp
xchg
add
smsw
and
mov
aam
sbb
ficoml
pop
fwait
mov
adc
lret
incl
jl
adc
fdivrs
xor
adc
insb
outsb
mov
cs
int3
inc
movsl
hlt
jmp
ss
and
rcr
inc
outsb
les
leave
add
jle
lcall
dec
pop
push
aad
cs
pop
pop
mov
bound
pop
js
mov
mov
xchg
out
data16
incl
insb
xchg
xchg
call
or
jae
or
mov
jmp
das
inc
adc
les
jp
jb
pop
movsl
mov
mov
xchg
jo
mov
push
dec
xchg
xchg
or
pop
data16
stos
in
cmpsl
cld
subl
repz
fnstenv
incl
xor
popa
int3
sahf
xor
sbb
push
inc
dec
out
call
and
notb
push
inc
jbe
shll
dec
mov
icebp
arpl
fbstp
int3
dec
adc
pop
mov
leave
je
xchg
outsl
ret
mov
into
or
ja
mulb
adc
mov
pop
inc
mov
mov
cmp
ret
subl
xchg
fadds
cmpsl
loope
push
outsl
jg
out
xor
mov
iret
mov
daa
mov
jle
push
push
in
addb
fiaddl
or
and
out
dec
inc
xchg
fdivs
lret
ds
inc
or
pop
add
add
mov
movsb
jne
lds
xor
fmull
out
into
xchg
and
or
repz
fwait
lret
sbb
xchg
mov
jnp
stos
rol
jb
rolb
push
push
pop
pop
mov
ret
push
aam
inc
add
loop
and
adc
call
sub
xchg
mov
test
insb
cmp
cmpl
rorb
mov
rcrb
xchg
cltd
ss
cltd
mov
roll
sub
mov
cli
sbb
add
xor
xchg
pop
mov
pop
lock
lcall
cmp
sarl
hlt
int3
cmp
dec
pusha
inc
cmpsl
addr16
scas
es
jbe
loope
lea
out
cmc
add
bound
shl
popf
xor
loopne
xchg
cs
sub
lahf
mov
push
inc
in
addr16
sti
into
ljmp
fsubl
add
repz
repz
fdivp
push
mov
add
lret
cmp
adc
mov
jmp
lock
fwait
jmp
and
jbe
adc
notl
sub
inc
dec
pusha
pop
xor
push
and
dec
int3
xor
push
movsl
movsl
sub
or
mov
lcall
push
repnz
dec
pop
xorl
and
jb
fstps
stc
fstps
mov
fiadds
sub
imul
inc
jns
and
rcrb
mov
push
lret
aaa
sbb
push
or
lahf
adc
inc
push
xor
inc
mov
das
dec
dec
xor
lcall
lds
mov
pop
jp
orb
ja
lea
cld
sbb
mov
ret
cmp
and
mov
mov
fimuls
adc
pop
loop
add
pop
lds
add
in
mov
pusha
jg
lahf
cmp
or
adc
fcmovnbe
minps
push
xor
cmp
clc
pop
loop
push
dec
mov
mov
pop
popf
xor
test
scas
jp
int3
mov
lods
icebp
test
cmpl
scas
adc
mov
xchg
sub
lods
add
cs
ret
sub
sbbb
or
mov
hlt
cs
rolb
push
mov
sbb
out
ror
mov
shlb
mov
pop
xor
xorb
stos
call
loope
dec
dec
repz
jecxz
lea
push
jecxz
mov
and
jno
xchg
dec
jecxz
mov
mov
mov
jnp
vandps
mov
adc
icebp
adc
mov
pop
icebp
xchg
lret
sti
inc
add
test
mov
or
or
sti
mov
dec
insl
sarb
mov
mov
and
into
adcb
xchg
or
or
rorl
enter
jecxz
sbb
mov
dec
lret
lods
inc
ss
hlt
push
pop
pop
movsb
lock
jg
cmpsb
clc
mov
test
adc
in
push
sub
jg
xchg
xchg
sti
rorl
lea
mov
sub
jmp
shl
stos
imul
in
pushf
mov
and
rorl
les
inc
sbb
paddsb
aas
ljmp
out
popa
stc
xor
mov
add
out
js
xor
sbb
es
fldt
stos
push
fstl
test
scas
inc
mov
stc
iret
jle
add
pushl
add
and
cmp
out
outsl
fbstp
adc
xchg
ljmp
mov
rcrl
and
gs
fldt
jg
loopne
pop
and
xor
push
add
into
sub
add
test
cmp
into
lods
mov
cmc
xlat
jb
xchg
push
outsb
hlt
fdivrl
inc
push
mov
int3
mov
and
sbbb
inc
fwait
test
mov
push
dec
sub
orl
daa
mov
and
sbb
lret
imul
nop
clc
out
int3
rorb
adc
inc
xor
movsb
mov
xor
mov
and
loope
xor
jb
movsb
xchg
xor
push
out
sbb
pop
add
pop
add
shl
pop
fimull
aad
icebp
insb
mov
repnz
gs
fcomi
push
add
adc
lret
cmc
dec
or
sub
mov
lea
dec
lods
sbb
xor
dec
loop
loopne
or
xor
je
sbbb
cld
xchg
decb
push
push
test
dec
pop
mov
data16
ret
xor
lea
mov
or
mov
clc
loope
repnz
push
xor
stos
sub
add
cmp
xchg
cmpb
hlt
jl
add
mov
call
push
or
int3
cli
sub
adc
imul
cmp
mov
orl
sub
call
pop
and
fsubs
add
mov
jp
icebp
out
imul
mulb
pop
jbe
jg
out
or
inc
xchg
les
aaa
fcomp
cmpsl
adc
icebp
cmp
sub
repnz
jl
jbe
push
lret
movsb
push
mov
clc
imul
lods
sahf
sub
cmp
fidivs
aad
lcall
mov
mov
push
stos
repnz
jnp
adc
sub
xchg
or
add
or
inc
loope
pop
mov
adc
pop
sub
outsl
or
test
cmp
int3
movsb
push
sbb
mov
sbb
inc
cmp
inc
add
imull
jp
sbb
mov
xor
js
sub
add
push
xchg
icebp
pop
xchg
xor
popa
inc
xchg
xchg
in
fsubs
sbb
lret
rolb
ds
jle
bound
ja
cmpsb
sbb
lods
roll
or
loop
inc
int3
insb
xchg
cmpsb
push
xchg
inc
push
mov
xor
imul
repz
in
pop
aaa
or
xor
int
leave
pop
fsubrs
xchg
mov
xchg
and
mov
jmp
aaa
pop
out
fdivs
mov
and
mov
test
lcall
jb
test
out
inc
aaa
in
pop
call
sbb
jns
movsb
mov
lcall
jmp
push
inc
sti
mov
xor
mulb
and
mov
fildl
cmpsb
pop
push
and
adc
xchg
cmc
inc
inc
cmp
scas
sti
loop
cmp
jp
fisttpl
je
xchg
inc
push
leave
xchg
jbe
cmpsl
jbe
adc
popf
jne
fdivs
jo
add
sub
jl
push
or
sti
je
in
out
divb
cmp
xchg
cli
sbb
pop
outsb
leave
xor
push
lcall
mov
adc
ret
sub
mov
mov
xor
out
or
stc
lcall
add
popa
mov
or
jno
loopne
pushf
add
xor
inc
xor
fcoms
inc
hlt
loopne
xor
jae
adc
jns
or
test
call
dec
je
aad
jp
mov
aad
jecxz
inc
ss
in
xchg
mov
shll
mov
inc
lds
xor
in
inc
push
out
add
xor
jl
lret
dec
pop
xchg
add
xor
and
mov
mov
mov
xchg
hlt
pusha
push
in
stos
jecxz
push
or
repnz
push
in
loope
fiaddl
in
test
aam
inc
mov
cmp
ret
mov
adc
in
sub
ljmp
cmp
mov
hlt
icebp
iret
jbe
std
cmp
cmp
xor
iret
and
push
notb
jmp
xchg
fs
cmp
int3
adc
adc
inc
aas
and
jnp
cmpsl
and
mov
out
dec
iret
jl
add
fbstp
mov
dec
ficomps
icebp
mov
cmp
daa
mov
lods
fcomi
and
inc
cmp
or
lock
cmpsb
ja
sub
in
aam
lds
add
ret
adc
add
mov
dec
es
div
push
or
mov
sbb
fsubrs
divb
fdivs
test
mov
mov
jnp
and
jg
cld
loopne
inc
fidivs
inc
lahf
mov
xlat
adc
data16
pop
push
stos
push
lahf
jmp
test
jb
sahf
mov
aad
and
mov
mov
push
sahf
mov
stc
data16
push
jmp
or
add
clc
sub
lock
push
dec
sbb
or
sbb
cmp
aad
push
jge
loop
pop
aas
repz
xchg
push
stos
dec
mov
sbb
daa
aad
stc
xchg
cmp
outsb
mov
sub
dec
jns
imul
dec
pop
insb
sbb
jle
int
out
push
enter
mov
dec
push
xchg
aas
test
in
mov
clc
push
mov
cld
les
pand
mov
xchg
push
outsb
lock
repz
icebp
mov
push
and
push
call
mov
test
movsb
sub
push
int
shlb
cld
jl
iret
ljmp
dec
jae
ss
insb
sbb
dec
repnz
adc
sub
jmp
add
mov
jnp
rorb
pop
dec
aad
loope
bound
fs
enter
push
repnz
add
mov
jl
jbe
xchg
mov
mov
and
xchg
out
and
mov
and
fwait
std
push
insb
lods
in
rorb
dec
jmp
cmp
shl
ret
sub
ficoms
sbb
mov
insl
subb
cmc
pop
cmp
mov
jno
jle
sbb
pop
out
std
fs
push
pushaw
jecxz
push
cltd
repz
xchg
cld
out
and
xor
mov
leave
cmpl
sbb
es
insl
das
push
sbb
je
addl
mov
xchg
sub
xchg
pop
mov
pop
add
adc
mov
je
das
mov
cmp
subb
lret
jns
or
inc
jns
dec
push
adc
testl
addr16
lock
push
sbb
fwait
outsl
jbe
lods
push
jnp
call
out
mov
stos
pop
sbb
xchg
dec
lcall
leave
mov
add
xchg
sbb
je
mov
loope
jle
and
mov
ljmp
inc
pop
mov
add
or
mov
sahf
pop
jge
movsb
std
iret
mov
adc
leave
test
xchg
ds
xchg
sahf
test
adcl
adc
pushf
in
out
pop
xchg
mov
xor
outsb
sbb
push
push
or
test
stc
mov
das
stc
pop
inc
and
in
loopne
and
xlat
out
jle
ss
jo
test
sub
movsl
mov
push
in
filds
xchg
pop
leave
push
xchg
add
divb
movsl
pop
push
mov
mov
mov
cmp
lock
sarl
scas
rcr
bound
xchg
push
xchg
data16
aam
jne
pop
push
pusha
jmp
inc
jae
pop
dec
das
xchg
and
push
mov
inc
jg
call
inc
je
jbe
and
hlt
push
in
cmp
jno
pop
dec
inc
cmp
jbe
rolb
mov
lds
lea
mov
bound
cmp
in
pushl
jns
add
hlt
pop
xorl
cltd
pop
fdivrl
lret
push
push
dec
mov
mov
mov
cmp
lret
xchg
and
imul
jmp
cmp
repnz
lds
lds
scas
fmuls
jmp
mov
scas
and
sub
push
sbb
in
add
mov
psadbw
add
rolb
repnz
mov
ja
loopne
cmp
push
push
aas
repz
lret
inc
cmp
pushf
pop
dec
rorl
stos
xchg
jle
pop
iret
incl
adc
mov
in
pushf
or
xlat
ficoms
push
nop
mov
movsb
pop
cmpsb
ja
sbb
daa
or
sub
add
aas
jl
cmc
pop
enter
push
jbe
pop
push
jg
jmp
cmp
lods
dec
sub
add
aaa
cs
push
ja
or
movb
cmpl
test
fnsave
test
test
js
lcall
adc
add
push
les
xchg
mov
adc
cmp
orl
bound
push
inc
jb
xchg
pop
xor
xchg
aad
push
mov
xor
add
imulb
test
push
scas
mov
subb
popa
xor
cld
insl
cmp
adc
sbbl
jb
mov
test
mov
ljmp
pushf
enter
or
addr16
ror
addr16
sar
sub
push
mov
in
jmp
test
jle
fiaddl
insl
ds
mov
es
dec
out
jnp
push
xor
insb
push
dec
xor
ds
or
cmp
push
sub
mov
imulb
inc
sbb
pop
orl
jnp
aad
xor
mov
jb
dec
push
xsavec
push
mov
mov
sub
iret
pop
sub
mov
add
fmul
imul
shrl
jp
xchg
fbld
ljmp
dec
dec
popf
data16
das
add
rcl
add
gs
jecxz
rcrl
and
aad
cmp
xchg
mov
imul
js
jg
leave
out
es
rcll
sub
or
pop
aas
xor
sub
popf
cltd
test
mov
inc
push
pushf
fsts
repz
cmpb
test
dec
push
jg
xlat
push
adc
inc
mov
pusha
into
xor
mov
cs
aas
mov
sbb
rolb
popl
fildl
add
sub
roll
add
lahf
incl
out
ret
sub
pop
sub
enter
sub
lret
push
lret
adc
mov
sbb
mov
movsl
ret
shlb
add
icebp
ficoml
aam
arpl
pop
arpl
jnp
push
jp
in
lahf
adc
fisubrl
sahf
mov
lahf
wrmsr
scas
filds
adc
lock
jecxz
aad
sti
mov
mov
in
cltd
setnp
push
xor
pop
andb
bound
or
adc
pop
sbb
adc
sbbl
mov
scas
sub
stos
pop
leave
mov
jae
mov
add
fisttps
inc
inc
pushf
lods
movsl
pop
pusha
add
lods
jle
in
add
sub
out
sti
jge
mov
aaa
and
pop
stc
push
sbb
mov
add
sbbl
test
xor
dec
pusha
out
loope
xchg
push
inc
sub
and
mov
or
inc
xchg
cwtd
stos
sbb
loopw
ljmp
fwait
xor
jae
push
xchg
mov
inc
sahf
loopne
mov
inc
xchg
sub
movsl
pop
jno
mov
aad
mov
popf
dec
sub
loop
push
cmpl
shl
push
jge
divl
cmc
int3
and
push
jne
mov
mov
add
xchg
mov
aam
mov
js
pop
imul
cltd
fdivrl
scas
push
outsl
movsb
pop
into
aam
js
mov
mov
xchg
std
pop
and
mov
ja
test
adc
mov
xchg
ficoml
scas
dec
mov
pop
ret
dec
sub
fcmovnu
decl
lahf
fildll
test
push
push
lahf
and
rcll
dec
xchg
mov
in
pusha
xchg
das
das
pcmpgtw
cmp
mov
push
sub
jl
ss
lods
test
incb
inc
jne
adcl
inc
daa
jle
pop
fs
jae
mov
inc
cld
loope
sbb
xcrypt-cbc
cmpsl
adc
adc
or
int3
iret
rcrb
adc
sbb
mov
cmp
daa
cmc
scas
aas
xor
adc
test
sub
and
mov
cmpsb
add
and
and
adc
mov
fs
in
ret
imull
imul
inc
insb
jno
push
jmp
lahf
out
sub
mov
shll
inc
das
shll
cmp
ret
shld
stc
push
and
sbbl
in
loop
scas
cmc
xor
dec
cmp
push
fld1
enter
insb
arpl
inc
xchg
mov
popf
and
jge
imul
outsb
rcl
mov
aaa
into
loop
mov
inc
clc
cmp
push
dec
divb
pop
lret
int
aam
push
add
xor
std
mov
bnd
fmull
xchg
les
out
jge
xchg
fld
dec
mov
mov
rorb
pop
cmp
push
mov
xchg
mov
repnz
loope
nop
in
pushl
pop
leave
lods
movsb
ss
int
fs
scas
pop
adc
inc
cmp
aaa
push
mov
jmp
vpmuludq
jg
mov
test
je
lds
lea
mov
inc
jl
pop
outsl
fldt
xchg
pop
sbb
ficoml
lret
das
es
and
sbb
add
test
jbe
outsl
outsb
and
dec
xchg
mov
pusha
repz
das
sub
aas
pop
js
cs
dec
stos
or
adc
shrb
add
popf
frndint
fiaddl
mov
push
ret
adc
mov
inc
xor
mov
adcl
scas
jae
sti
in
fwait
mov
sub
pop
or
in
pop
add
dec
mov
push
cmpsl
push
lahf
lods
hlt
clc
popf
pop
or
sub
jnp
ret
xchg
push
ss
mov
out
pop
divb
rcr
lock
add
rcrl
aad
arpl
push
adc
test
jmp
mov
dec
daa
and
outsb
arpl
xchg
ss
repnz
repnz
xchg
ret
hlt
mov
test
adc
pop
adc
scas
jae,pt
jge
imul
fisttpl
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
or
mov
push
push
mov
sbb
mov
and
mov
adc
mov
mov
and
andl
movl
sbb
movl
sbb
mov
mov
neg
sub
xor
add
mov
sub
add
mov
xor
xorl
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
push
call
jmp
sub
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
push
pushl
call
cmpl
jb
orl
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
subl
sub
sub
mov
or
orl
sbb
mov
and
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
xor
movl
lea
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
call
mov
dec
mov
jmp
lea
sub
mov
sbb
mov
mov
xor
mov
sbbl
xor
xorl
add
mov
mov
mov
mov
add
adc
push
mov
adc
mov
sbb
mov
mov
sub
mov
mov
xor
mov
addl
add
movl
cmp
movl
je
mov
jmp
movl
mov
cmp
movl
jne
push
movl
jmp
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
add
andl
mov
orl
mov
adc
mov
xor
orl
add
movl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
movl
add
cmp
notl
mov
movl
push
je
adc
mov
adcl
add
addl
mov
or
mov
xorl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbb
push
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
movl
push
inc
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
sub
jmp
xor
test
or
loope
vpmovmskb
and
int
jb
pop
jb
xchg
loop
out
mov
push
imul
lods
bnd
mov
push
fst
movsb
push
icebp
and
push
push
inc
ror
fidivrl
cmp
cmpsb
xor
hlt
jp
xchg
pushl
jg
inc
cld
andl
inc
cmc
out
loop
scas
orl
jns
addr16
inc
les
cmp
leave
xor
cmc
mov
leave
xor
ja
stos
push
and
add
das
mov
dec
cmp
or
lods
pop
jb
dec
dec
add
in
lods
push
cmc
xchg
movb
std
fcomi
push
pusha
movsl
push
mov
dec
aam
mov
pop
aam
cmp
jle
sbb
xchg
clc
jo
mov
or
inc
es
rorl
mov
mov
xorl
stc
cmp
stos
lret
dec
outsb
scas
xchg
adc
add
outsb
push
enter
icebp
jmp
fwait
sbb
push
lea
call
daa
cmp
stos
stos
repnz
jmp
sbb
mov
repz
dec
jbe
jno
jb
pop
ss
mov
or
ficoms
push
ret
mov
nop
add
xchg
ljmp
dec
mov
sub
std
aaa
mov
mov
push
sub
popf
and
in
add
pop
jp
adc
sbb
std
out
mov
test
sbb
sbb
js
repnz
and
cmpsl
sbb
push
std
lea
sbb
clc
rclb
cmp
push
movsl
icebp
cmp
loop
addb
scas
lret
mov
xchg
clc
inc
mov
fnsave
or
jae
mov
add
fcomps
adc
scas
sbb
jecxz
cmp
or
sti
xchg
mull
pusha
sbbb
pop
jge
xor
inc
pop
jnp
pop
in
out
xor
es
xor
sarl
imul
and
lahf
mov
mov
adc
xor
jo
in
cmpsl
dec
sbb
adc
lds
mov
popfw
mov
fisubl
sarb
sub
inc
in
out
gs
jmp
push
sbb
inc
insb
in
sbb
shlb
sub
add
pusha
sbb
jae
mov
or
push
cmpsb
push
inc
fnstcw
icebp
movsl
lea
add
ret
inc
adc
mov
inc
push
mov
mov
sub
inc
cmpsl
and
int
movsl
and
scas
les
adcl
fidivrs
jmp
and
push
ljmp
iret
push
fstpl
mov
cmp
mov
xor
test
jp
jp
sub
sbb
es
enter
mov
or
jo
aad
cli
fcmovnb
lods
outsl
cmp
sti
ja
push
cltd
dec
frstor
mov
mov
mov
cmp
mov
in
aad
push
pop
addr16
loopne
mov
movsb
push
mov
movsl
mov
inc
jno
mov
pusha
cwtl
cmp
push
jge
subb
fldl
lods
cmpsb
lea
cwtl
repz
sbb
jmp
ret
daa
adc
xchg
push
xchg
ror
roll
jl
fwait
add
push
dec
mov
hlt
push
ret
add
sbb
outsl
inc
outsl
iret
mov
leave
dec
sub
sub
sub
jno
negl
jae
mov
sub
gs
push
stos
outsb
mov
and
sbb
xlat
xchg
fisubs
fwait
add
add
test
jo
in
pop
mov
int
sub
sub
fucomip
lahf
dec
cmc
mov
stos
adcb
cld
sub
jno
inc
push
int
scas
push
lahf
push
sub
out
int3
daa
mulb
mov
mov
fstps
insl
xchg
ret
cmp
faddp
shll
push
xchg
pop
cwtl
inc
dec
or
mov
sub
out
hlt
sub
mov
aas
in
xorl
movsb
mov
mov
jns
repz
cmp
inc
ds
xchg
push
pushf
inc
or
sbb
pop
test
jle
xchg
and
inc
movsl
sub
sti
and
mov
mov
or
or
rcrb
push
jb
dec
fld
xor
sarl
jae
mov
mov
rcl
mov
ja
aam
sub
insb
cmp
xchg
push
test
or
mov
jmp
ret
lods
stos
dec
and
push
and
mov
push
mov
mull
aas
fcmovb
jnp
fs
dec
cs
mov
cwtl
push
inc
xchg
xlat
cmpsb
pop
sub
ret
in
cmc
inc
outsl
dec
push
adc
and
lods
or
or
fistpll
nop
jmp
lods
jb
jb
fsubr
stos
mov
or
mov
mov
push
loop
pop
xor
mov
inc
push
xor
dec
push
das
test
sub
daa
in
pop
mov
or
test
rclb
pop
pop
lods
lret
xor
popf
cmp
xor
mov
mov
cltd
aad
popf
sub
mov
push
cs
push
mov
divb
test
add
mov
pop
add
xor
push
fneni(8087
sbb
jmp
call
jae
les
and
cli
mov
in
or
arpl
push
adc
ret
jns
push
lock
push
xchg
mov
movsl
mov
cmp
int3
gs
cmpsl
sub
sub
cltd
dec
pushf
sahf
shl
es
es
es
repnz
jnp
sbb
dec
rol
ret
mov
leave
jg
js
mov
cs
push
out
jae
jne
mov
add
insb
xchg
in
insl
test
xchg
fstpt
adc
mov
or
xor
xorb
and
imul
fucomi
pop
lahf
mov
push
loop
inc
out
call
or
mov
int3
jl
imul
mov
aas
ljmp
int
mov
cld
lret
xchg
nop
pop
add
push
adc
adc
pop
xor
gs
mov
push
pusha
or
popf
push
mov
pop
std
mov
lret
imul
mov
xchg
popa
jo
sub
jmp
push
jle
mov
and
daa
and
and
jge
mov
push
xlat
cmpl
cmpsb
mov
loopne
mov
movsb
clc
pop
dec
mov
push
pusha
fnsave
cmp
hlt
cmpsl
jne
dec
jmp
xlat
shrl
mov
push
push
xor
test
mov
push
out
push
inc
push
cmp
xlat
cmp
out
xchg
or
mov
jl
sti
sarl
push
sub
repnz
pop
test
mov
shrl
cmc
mov
pusha
les
cs
and
mov
mov
pop
push
cmp
sub
stos
jae
loope
mov
movsl
jbe
jnp
jge
stos
xchg
lret
loope
jg
fists
push
xchg
jle
inc
and
call
and
mov
mov
inc
jmp
mov
pop
or
pop
fsubrs
mov
pop
dec
or
fisttpll
out
and
mov
xorl
test
hlt
xchg
and
iret
or
iret
mov
sub
jnp
inc
mov
or
mov
leave
bound
push
pop
test
rcll
and
pushf
dec
or
push
add
std
lods
push
popa
lahf
pop
lods
pop
ret
in
sbb
loopne
and
push
push
cwtl
pop
push
jecxz
adc
jg
mov
hlt
mov
adc
out
data16
pushf
xchg
adc
xor
enter
adc
aaa
insb
mov
js
xchg
lock
movsl
pop
sti
int3
jecxz
std
sub
cmp
jb
mov
add
mov
mov
imul
nop
mov
sub
fdivr
aam
mov
xor
scas
std
mov
or
pop
insb
sub
jbe
pop
loope
and
mov
cmc
push
arpl
pop
mov
std
push
lahf
pusha
jno
push
or
call
or
mov
iret
mov
and
test
push
popa
dec
nop
nop
dec
int
xchg
sub
sub
push
and
mov
lcall
jle
push
icebp
pop
xlat
out
movsl
inc
mov
mov
repz
lods
and
add
xchg
loopne
imul
xchg
int
inc
test
ljmp
mov
es
sub
test
fdivs
sub
mov
or
dec
mov
dec
adc
push
jne
into
and
jbe
or
add
sti
aaa
xor
cmp
mov
adc
scas
and
pop
push
negl
xchg
sub
popf
fdivrl
ret
cltd
push
sbb
adc
popa
jecxz
nop
loope
lods
out
inc
xchg
dec
or
push
push
int
ret
mov
sub
call
sti
lret
adc
test
mov
cmp
scas
inc
daa
jo
jg
push
ja
adc
ret
inc
add
jecxz
xor
pop
popa
add
push
jo
shlb
mov
pop
movsl
pop
cmpsl
sti
adc
pusha
addb
or
fisubrl
fistpl
test
fsubs
pop
jno
xchg
sbb
pop
fstp
inc
sbb
and
inc
mov
mov
xchg
sahf
clc
stos
arpl
scas
xor
mov
or
inc
stos
mov
jge
jno
fimull
std
sub
incb
insb
mov
cwtl
stos
dec
push
xor
sub
ror
movsl
fwait
popf
rcrb
into
xor
ror
mov
sub
cwtl
cmp
hlt
push
xchg
cmp
lods
mov
cmp
mov
js
xchg
add
xchg
cmpsw
dec
sub
or
mov
push
jg
cmp
inc
mov
push
cwtl
push
lahf
insl
data16
cmpsb
adc
jl
jmp
and
push
repz
cmp
and
in
decl
sahf
jl
dec
mov
sub
pop
popf
fstl
xchg
adcl
fxch
xor
xor
mov
jp
lret
clc
decl
jne
xchg
xor
fcmovnu
movsb
push
pop
sbb
lods
mov
mov
inc
push
jecxz
rcrb
mov
rcr
or
or
sub
leave
lret
jmp
jmp
ds
int
ret
test
and
cmp
imul
leave
fs
add
dec
stos
xchg
out
fs
dec
cltd
jno
lcall
xor
sbb
sbb
clc
js
cmc
jg
sbbl
jbe
pop
pop
subl
dec
mov
inc
lcall
repnz
in
mov
push
sbb
jae
and
push
dec
push
sbb
pop
inc
xchg
xor
push
sbb
lret
mov
xchg
sub
shrl
and
xchg
and
insl
repnz
fimull
lret
push
xchg
imul
pop
mov
fisubl
sahf
pop
mov
insl
mov
repnz
aas
rorb
test
shlb
repz
sbb
push
xor
jle
icebp
add
mov
int3
sti
and
in
sbb
xchg
mov
sbb
fdivp
addr16
out
dec
push
push
dec
imul
xor
cmpb
xchg
cmc
lret
pop
mov
pop
pop
dec
arpl
in
and
in
mov
cs
flds
and
test
ljmp
lea
in
jp
pop
scas
stos
mov
hlt
in
inc
jbe
adc
push
scas
xchg
shrb
sbb
jl
lahf
movl
loop
cmpsl
xor
hlt
cli
andl
mov
sbb
aad
ds
fiaddl
or
mov
and
mov
or
sbb
cmp
call
iret
push
scas
outsb
aaa
xchg
sbb
mov
sbb
xchg
mov
cmc
mov
adc
inc
mov
or
movsb
enter
je
mov
icebp
dec
jmp
stos
fbld
mov
adc
mov
fidivrl
lcall
test
dec
xor
int
adc
add
lret
adc
daa
mov
xchg
xorl
xor
push
enter
fadds
imul
add
pop
inc
jmp
mov
test
repz
jp
and
hlt
xchg
sub
jne
xor
in
stc
loope
data16
test
mov
ja
inc
iret
dec
cmp
call
xchg
pop
jg
add
pop
xchg
add
pop
and
aad
or
cwtl
lahf
loopne
pop
and
dec
lcall
dec
cmp
jno
lret
mov
cltd
test
sahf
test
add
mov
sbb
mov
or
xchg
outsb
push
push
call
inc
lea
xor
jno
mov
jecxz
in
inc
testl
fwait
aaa
jle
mov
outsl
scas
cmpl
xor
ret
xchg
push
sub
dec
into
cmpsb
decb
inc
das
mov
pop
mov
test
inc
pop
push
scas
shl
dec
cmp
pushf
mov
shrb
pop
push
dec
cwtl
ret
cmp
adc
mov
cmpb
insb
test
cmp
loop
add
push
jbe
adc
xor
in
sbb
aas
es
jbe
or
add
ja
iret
testl
jbe
cltd
mov
fs
mov
jae
jge
scas
xor
adc
insl
xor
insb
sbb
xlat
adc
loop
dec
sarb
repnz
bswap
mov
fmuls
mov
decl
das
sbb
sbb
cmp
pop
push
add
movsb
push
fsubrs
mov
or
stc
inc
mov
ror
push
inc
or
repz
push
lea
push
add
jae
rorl
lods
jo
es
inc
out
roll
xchg
movsl
sbb
fnstcw
ret
xlat
dec
ret
and
cli
sar
xchg
xlat
fisttpll
and
pop
xchg
ficompl
inc
adc
cld
rorl
mov
xor
push
jecxz
dec
dec
cmp
aad
clc
pop
clc
ljmp
push
mov
outsl
pop
cli
mov
sbb
cmp
mov
cltd
cltd
and
orl
or
rorl
mov
icebp
rcrb
push
outsb
pop
arpl
jmp
cltd
hlt
pop
add
icebp
jae
shrb
imul
mov
outsb
xchg
lock
mov
and
lock
scas
sar
jmp
mov
jecxz
adc
orb
leave
std
add
mov
xchg
push
rorl
paddusb
out
inc
outsl
adc
adc
sbb
imulb
in
lret
cmp
bound
add
jne
js
dec
ret
mov
or
dec
sub
xchg
imul
inc
fisubrs
jmp
nop
sbb
mov
sbb
jnp
and
in
push
addl
data16
outsl
fsubrl
adc
xchg
xchg
jbe
adc
mov
fistps
les
sub
fistps
push
ret
xor
loopne
push
repz
pop
icebp
xchg
pop
mov
push
arpl
repz
fucomi
xlat
out
xchg
and
int
push
fdiv
mov
add
shrb
jns
push
movsb
push
mov
insl
push
popf
loope
xor
std
ficoml
mov
cmp
sub
fnstenv
xchg
or
xchg
xchg
scas
pop
jo
jp
jb
sbb
fidivl
sti
xlat
mov
sar
cltd
add
popf
cld
and
popf
mov
mov
lods
cmp
in
sub
pop
mov
push
loopne
call
sti
scas
push
sub
fiadds
dec
cmp
mov
lock
test
xor
xlat
and
pop
rorl
cli
dec
lds
mov
cmp
add
outsl
jae
push
adc
out
das
xor
loope
cli
mov
cli
lret
fwait
xchg
add
push
push
mov
popf
fists
mov
sub
inc
bound
pop
rdtsc
jnp
pop
dec
cmc
push
lret
lds
adc
popf
lods
aam
inc
arpl
out
pop
or
cmp
jbe
test
xchg
gs
mov
push
ljmp
icebp
mov
or
shlb
jle
pop
pop
dec
aaa
lock
jb
jnp
fnstcw
pop
push
hlt
stos
cmpsl
mov
jae
or
insb
mov
jno
sub
int
adc
idivb
in
lahf
jmp
bound
or
mov
cmp
je
sbb
mov
into
hlt
test
push
dec
mov
sbbb
xlat
xchg
repnz
pusha
enter
repz
loopne
loope
call
cmp
nop
sbb
sti
ret
lret
jns
les
inc
sbb
mov
sbb
mov
mov
jg
push
ja
xchg
in
adc
sub
add
xor
jne
cs
dec
les
add
add
gs
test
xchg
jo
hlt
pop
sahf
mov
cs
je
xor
das
sub
mov
mov
daa
data16
add
imul
shlb
lock
jmp
push
pop
das
xchg
cmp
shrl
out
push
mov
mov
lods
mov
shr
cltd
jp
pushf
je
push
sti
idivb
add
and
aaa
jmp
rcrl
call
xlat
jle
mov
push
inc
and
orl
inc
clc
inc
push
pushf
push
adc
mov
push
pop
dec
popa
push
outsb
insb
dec
scas
sub
mov
or
jecxz
lcall
mov
cmc
out
pusha
imul
imul
jb
inc
cld
and
cmp
ret
ss
dec
cmpsb
out
cmp
mov
lods
fdivs
mov
rcrl
jo
sub
scas
jg
push
jae
xchg
pop
inc
out
cmp
mov
in
icebp
data16
or
enter
repnz
pop
push
xchg
inc
or
in
rcrb
ss
testl
movsb
shrd
cmp
and
into
and
lea
sub
inc
jg
iret
dec
icebp
mov
inc
mov
pop
cmp
xchg
and
orl
mov
adc
sarb
jmp
inc
repz
xor
fwait
jmp
or
adc
std
rcrl
mov
jl
aam
add
mov
cmp
sbb
ret
aaa
pusha
pop
fsubs
or
je
cmc
cmp
repnz
in
mov
dec
inc
add
xchg
xlat
mov
lret
nop
sub
popa
shll
cmp
xor
xor
cld
jle
inc
mov
xor
push
inc
mov
jo
xor
pop
xchg
je
sbb
inc
mov
or
add
sbb
mov
push
dec
in
mov
les
sbb
sbb
insl
in
dec
xchg
add
enter
jle
andb
gs
lret
cld
xchg
aad
insb
roll
mov
cmp
ret
outsb
add
inc
or
cs
call
sti
mov
aad
mov
ficompl
arpl
aam
enter
popf
adc
cmp
sub
aaa
ds
mov
mov
dec
jg
clc
sub
mov
in
incb
push
adc
cli
xor
inc
movsl
addr16
mov
jecxz
sub
jmp
pop
out
je
cmpsb
jns
mov
imulb
fists
int
mov
test
push
lcall
cmp
push
mov
xor
test
push
loope
push
sbb
repz
pushf
stos
jg
xchg
clc
lea
clc
xchg
add
push
lcall
fstl
mov
shl
push
push
rolb
subl
aas
xchg
les
arpl
pop
sub
je
jne
aad
inc
stos
sub
pop
cld
repz
icebp
in
cmpl
xchg
jg
mov
jae
sub
lods
or
shrl
mov
cmp
sbb
loop
int
and
adc
ja
adc
lods
xlat
fcomi
cld
pop
mov
mov
jg
dec
push
push
aaa
stos
adc
test
cmp
cmc
xchg
push
push
xchg
pop
testl
mov
sti
or
push
sub
dec
push
jbe
mov
xor
xchg
adc
pusha
and
jbe
or
xchg
xchg
cld
call
nop
mov
jnp
mov
cmp
fimull
jb
loopne
or
sbb
mov
jmp
mov
mov
ss
imul
popa
xorb
mov
nop
sub
mov
clc
test
inc
cwtl
mov
jecxz
dec
pushf
mov
lea
lock
dec
mov
lods
stos
ds
fwait
add
adc
mov
mov
adc
cmp
lcall
into
sbb
or
movsb
xchg
aad
lds
fs
lods
sahf
test
test
mov
mov
arpl
sbb
popa
mov
jno
ffree
cwtl
xchg
test
cld
xchg
xor
push
insb
mov
mov
xchg
push
sbb
rorb
push
mov
cld
mov
mov
adc
mov
rorb
and
pop
lods
loope
inc
mov
scas
and
mov
cmpsb
jp
int3
clc
scas
int3
mov
cmpsb
push
fwait
test
icebp
adc
clc
int
insb
push
repnz
incl
pop
jecxz
mov
icebp
adc
vpmadcsswd
ss
fnsave
sub
or
call
std
dec
pushf
add
dec
inc
enter
xchg
int3
ja
sti
daa
lods
xlat
lods
testb
call
xchg
fs
fmuls
mov
call
jmp
cltd
xchg
pop
fs
push
add
test
inc
lcall
inc
out
sbb
cmp
pusha
jecxz
sub
cwtl
sbb
and
lret
movsl
xchg
in
add
popf
xchg
mov
dec
addr16
xchg
sarb
xchg
jg
fs
add
popf
das
lcall
out
pushl
ret
mov
fldt
mov
jae
jle
dec
jns
push
aam
js
jbe
les
xchg
push
mov
xchg
push
aad
cmp
mov
cli
push
mov
popf
je
jmp
xor
dec
pop
xor
adc
xchg
mov
repz
xor
add
mov
imull
std
cs
inc
fsincos
push
and
jle
sub
and
xchg
mov
ror
in
outsl
int
jnp
fistl
in
cmc
shl
mov
pushl
mov
outsb
sub
fiadds
push
sarl
cwtl
test
fwait
push
subb
mov
mov
adc
inc
lret
enter
repnz
rolb
ds
into
mov
in
rcrl
ljmp
jge
sub
mov
shll
leave
dec
jmp
inc
fs
cmp
add
arpl
outsb
mov
jmp
mov
leave
mov
sub
mov
xchg
lcall
scas
mov
pushf
dec
das
add
dec
pop
add
call
mov
inc
mov
pop
sbb
aaa
jl
push
movb
push
frstor
mov
dec
in
adc
push
movsb
repz
inc
jmp
pop
int3
and
scas
xor
sti
jp
jbe
imul
cltd
fsubrs
cmp
fldlg2
test
mov
xchg
dec
lock
sahf
push
shlb
leave
jnp
loopne
xor
test
enter
pop
sub
sahf
out
fcoms
sbb
add
mov
scas
or
add
push
or
pop
jecxz
leave
lods
shlb
dec
add
lock
push
mov
push
lcall
testl
lock
stos
jg
push
pop
mov
sbb
lock
mov
push
pushl
pop
mov
and
call
lds
pop
push
adc
sysret
ss
mov
jmp
ret
push
pop
loopne
out
pop
sub
mov
pop
mov
mov
cld
fisubrl
fldl
popa
loope
negl
insb
xchg
jns
cmpsl
jmp
xor
cs
idivb
in
repnz
cltd
js
and
jns
and
idivb
shlb
jge
mov
pusha
sub
insl
cli
aam
mov
push
push
sbb
pop
jo
add
cmc
daa
cmp
add
outsl
ret
sub
xchg
jb
adc
rclb
aas
into
fmuls
sbb
mov
or
ret
push
xor
or
lret
imulb
pop
xor
xchg
loopne
pushf
dec
mov
xlat
cmc
push
in
shll
arpl
pop
jae
xchg
lret
outsl
or
add
cmc
in
cs
cltd
jge
daa
stc
daa
les
jle
mov
nop
add
mov
je
or
pop
dec
fildl
and
adcb
xchg
xchg
insb
in
cmp
mov
mov
sbb
xchg
or
divb
lahf
mov
cwtl
es
adc
inc
add
stc
in
loopne
stos
dec
aam
jmp
repnz
add
mov
push
les
inc
jecxz
mov
gs
sub
and
movsb
jbe
popa
jno
addb
jb
xchg
jmp
subl
mov
jp,pt
inc
inc
xchg
in
mov
test
sub
mov
mov
incb
nop
adc
les
fwait
test
or
pop
into
dec
loop
pop
push
and
add
mov
les
and
jo
daa
cmpl
push
push
or
lods
mov
jne
cmp
jmp
sbb
add
mov
rcll
jle
das
icebp
repz
test
add
mov
adc
mov
mov
icebp
repnz
popf
mov
das
test
and
pop
xor
imul
je
add
in
sub
ja
popf
mov
iret
add
sub
cmp
or
cld
ds
add
cmp
cmp
sbb
cmpl
xchg
dec
push
loope
xor
dec
das
cltd
push
aam
sub
add
mov
mov
mov
dec
adc
jnp
push
pop
shlb
ret
sub
or
test
mov
inc
add
lods
pop
adc
pop
sbb
pop
ds
xor
sbb
add
es
lret
inc
add
popa
in
jle
sbb
inc
test
sub
insl
int
jb
js
fdivr
scas
test
mov
and
lds
test
pop
inc
sbb
or
pop
mov
sub
testl
sbb
aaa
out
fwait
mov
std
push
push
shlb
out
or
fnstcw
jge
ror
xchg
leave
ds
mov
lcall
push
loope
je
paddsw
dec
xchg
shlb
dec
push
jmp
jecxz
mov
cmc
mov
ljmp
fdivl
push
test
sub
lods
or
inc
sub
mov
ret
and
nop
movsb
mov
loope
lret
cmpsb
lcall
push
mov
or
jmp
inc
pop
cmc
lods
cmpsl
xchg
shlb
push
fildl
aad
push
imul
imul
std
outsl
xchg
push
sbb
jmp
and
enter
add
icebp
jne
jecxz
call
dec
mov
ljmp
loop
inc
fidivl
mov
insb
adc
cmp
ret
add
popf
lahf
sub
aaa
xor
jle
pop
mov
xchg
push
mull
pop
adc
arpl
lods
pop
in
rolb
jno
js
enter
in
lea
push
mov
orl
pop
fisubl
mov
xor
jg
sbb
pop
xchg
mov
cmpl
cmp
push
or
lods
fmull
inc
stc
xchg
idivl
out
xchg
xor
xchg
aaa
push
sbb
lock
xchg
add
mov
pop
sbb
add
in
cmpsl
push
add
popf
sbb
adc
fstl
fisttps
loope
and
lcall
cmpl
lcall
ret
js
in
pusha
notb
adc
lcall
mov
mov
mov
xor
xchg
aam
cmpsb
xchg
mov
clc
sbb
subl
dec
sti
sbb
shll
adc
movsl
fsubl
lahf
lock
dec
lds
test
sahf
ljmp
aas
sbb
and
addl
sahf
xchg
mov
lods
sub
fisubrs
xor
or
enter
std
test
inc
pop
and
inc
outsb
push
bound
mov
inc
mov
push
cmc
loope
idivb
repz
ficompl
mov
cmpsb
mov
mov
ljmp
clc
pop
pop
or
in
push
cmp
jno
xor
cmp
test
mov
jns
and
cmp
cltd
lret
add
sar
inc
xor
pop
xor
push
lret
adc
and
pop
xchg
popa
dec
aaa
fneni(8087
fidivs
jp
push
add
adc
adcb
cmp
xor
aad
popa
cmpsb
imul
imul
pop
ljmp
gs
xor
ret
xchg
sar
cwtl
mov
mov
sub
popa
add
out
das
inc
loopne
lret
ja
fs
pusha
mov
sub
mov
jmp
jno
xchg
jg
sbbl
push
mov
or
in
and
lods
aaa
mov
repnz
push
test
fwait
lcall
mov
jae
mov
add
mov
shl
push
jae
rcl
push
cmp
pop
out
in
and
xlat
and
lock
jne
fistl
mov
test
loope
pushf
hlt
cld
cld
popa
and
in
stc
sub
jle
jl
sbb
pop
popf
jmp
xor
push
xchg
shlb
and
pop
jo
loopne
pop
mov
rcr
xchg
stos
push
cmp
cmc
loopne
adc
and
sti
push
mov
mov
data16
mov
ficompl
sbb
shll
subl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
subl
add
adcl
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
mov
adcl
xor
mov
add
inc
movzwl
mov
xor
movb
lea
or
mov
sbb
mov
mov
addl
xor
orl
sub
orl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
push
movl
xor
mov
movzwl
sbb
push
adcl
mov
adcl
xor
mov
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
mov
movl
xor
sbbl
jmp
and
mov
fwait
sbb
mov
jb
rcrb
jb
sahf
add
nop
icebp
add
adc
enter
mov
aad
lcall
rolb
lret
xchg
dec
jle
jmp
adc
jecxz
popa
push
stos
add
or
and
cmp
cmpb
xor
loope
sub
leave
lret
jge
outsl
cmp
jle
fmull
mov
adc
push
rcrb
or
dec
mov
in
sti
int3
loop
jae
adc
and
cmp
leave
mov
jg
jle
movsl
daa
or
repnz
rcrb
ds
adc
lahf
das
lahf
repnz
shl
jge
adc
jp
fcomip
lods
in
xchg
addb
jnp
inc
lea
std
dec
mov
adc
push
push
cwtl
cmc
shrb
inc
push
push
scas
popf
xchg
subb
cmp
dec
cli
enter
fwait
je
int3
ret
push
jb
mov
ret
repnz
loope
aaa
push
jbe
cmc
pop
cmp
test
es
or
pop
rcrl
and
sub
mov
cmp
mov
xor
mov
mov
jge
push
push
int3
int
cmc
pop
sub
or
push
out
pop
lds
js
cmpsl
or
stos
fwait
dec
cltd
jno
push
sar
icebp
jl
jmp
je
retw
sti
xchg
aad
in
cmp
and
inc
xchg
les
hlt
mul
hlt
or
je
mov
xlat
adc
pop
sti
adc
or
sbb
je
fcoml
xchg
sbb
mov
ss
fists
popf
in
lods
sbb
icebp
popa
jnp
xor
pop
add
outsl
pop
js
sub
movsl
xor
jecxz
cmpsl
loope
and
jns
es
jnp
and
ds
aaa
xor
fsub
or
sub
fmuls
fbstp
add
mov
insl
clc
mov
push
jo
xlat
rcll
nop
mov
mov
and
lcall
scas
repnz
fnstenv
pop
mov
cmp
sbb
mov
aad
lea
xrelease
xchg
daa
jbe
push
lret
pop
inc
arpl
mov
and
jae
mov
mov
popf
cmp
dec
mov
ret
iret
aam
cmp
lods
mov
aam
push
push
dec
pop
int
push
push
or
lea
mov
aas
sub
sahf
push
shl
lea
loope
xchg
ds
cs
pushf
sub
test
inc
out
idivb
fcmovbe
test
stc
int
or
in
jb,pn
mov
cmpsb
cmp
movsb
cmp
pop
clc
stos
mov
ret
push
je
inc
loop
mov
movsl
test
iret
lock
shlb
bnd
repz
leave
push
je
idivb
loop
not
jge
add
cld
or
testl
xchg
push
xchg
and
push
jnp
sub
out
ret
sub
and
and
jbe
nop
sahf
inc
cmp
pop
dec
and
mov
in
addl
push
mov
addr16
jl
cld
push
ds
movsb
adc
push
cli
insb
leave
pop
mov
aam
cmp
js
movsb
scas
sbb
and
fcompl
xor
loop
cltd
xor
bound
aad
sub
cmp
xchg
sub
ja
inc
sarb
mov
shr
pop
lds
sbb
repz
call
sub
dec
push
sub
mov
fisubs
shlb
arpl
jmp
cmp
imulb
iret
popf
arpl
je
push
imul
mov
insl
cwtl
jbe
lret
bound
push
int
fsubrl
push
dec
sub
stos
mov
fdivrs
loop
cmp
push
jmp
js
jg
loopne
or
ret
mov
adcb
sub
rorb
ljmp
punpcklbw
xor
insl
sbb
and
mov
out
cmp
xor
and
xchg
jns
mov
data16
xchg
adc
jnp
push
ret
bound
pop
mov
fcomip
mov
call
or
pop
loop
movsl
mov
add
jo
push
push
sub
mov
addr16
push
repnz
mov
add
inc
call
inc
pop
push
push
aad
divb
jp
sbb
or
in
jge
mov
arpl
and
scas
cwtl
int3
lea
dec
das
xchg
and
aas
xor
in
jb
push
and
dec
pop
stc
fldcw
cmp
jae
and
ja
inc
lock
int3
adc
insb
and
sbbb
les
or
jg
mov
mov
fwait
adc
movsl
fnsetpm(287
add
aad
mov
out
lahf
pop
and
xchg
dec
lods
out
jge
mov
std
movsb
adc
adc
sbb
rcll
and
scas
mov
and
in
lods
subb
lahf
xchg
push
jecxz
fdivrs
mov
jae
data16
into
mov
jge
repnz
sarl
movsb
std
mov
mov
test
in
sahf
mov
push
imull
adc
pop
mov
out
out
jmp
lret
js
jp
and
test
pushf
cmc
int3
pop
sub
jl
dec
jge
inc
das
scas
int3
xchg
daa
iret
in
outsb
jg
cld
std
or
dec
ror
adc
ja
jecxz
dec
mov
rcll
lock
xor
adc
mov
pop
pop
mov
shl
mov
push
add
sbb
sub
insb
andl
cmc
int3
jl
repnz
pop
xchg
loop
imul
sub
roll
das
daa
test
lods
lret
xchg
cmp
xor
mov
inc
mov
mov
push
and
inc
ljmp
aaa
mov
sbb
cmp
arpl
shrl
push
int3
je
hlt
decl
mov
stos
clc
xor
pop
pop
dec
pop
cmp
or
adc
scas
adc
repz
push
outsb
js
push
mov
les
sahf
insl
inc
imul
loop
jp
and
push
push
lods
jb
push
pusha
dec
push
lret
sub
mov
jl
mov
not
insb
sub
pop
push
cltd
movsl
dec
xchg
loop
dec
sbb
ja
push
pop
imul
jl
sahf
jbe
add
and
int3
ss
call
pushf
xchg
adc
out
jbe
les
rorb
cmpsl
adc
clc
jmp
std
push
mov
cwtl
or
aaa
icebp
shll
fadd
mov
push
pushl
clc
stc
sbb
push
push
cmp
pop
cmpl
xchg
push
jecxz
mov
dec
loope
repz
cmp
icebp
imul
xchg
cmp
test
cmpsl
out
jns
dec
sbb
scas
push
xor
pop
imul
mov
fildl
test
cmp
sub
ds
aam
insb
je
pop
mov
lods
xor
shr
jb
mov
sahf
ret
mov
das
mov
ljmp
ja
xchg
mul
adc
dec
sarl
test
pop
jp
jg
ja
cmc
pop
js
jns
adc
jo
lret
dec
and
lods
sub
xor
popa
or
push
add
xchg
loopne
sahf
bound
or
lret
inc
add
add
pop
test
aaa
mov
repz
push
out
cmp
leave
jg
int3
imul
addr16
pop
cs
add
mov
dec
sbb
jp
pop
andb
insl
std
les
popl
out
sbbl
sarl
pop
inc
add
fcoms
fidivrs
jmp
push
xchg
mov
jmp
lea
xchg
out
mov
inc
or
push
mov
sub
mov
jo
cld
adc
repnz
pop
test
rcl
imul
push
lods
mov
movl
test
or
subl
push
in
mov
adc
ds
xchg
lahf
mov
mov
in
dec
ss
sbb
jge
push
and
mov
jmp
xor
orb
adc
ret
pop
loop
mov
sahf
xorb
mov
adc
sbb
leave
adc
mov
sub
add
mov
pop
cmpsb
jecxz
lea
cld
aad
inc
or
fucomi
and
sub
mov
imul
fbstp
cli
pop
mov
addl
add
mov
pusha
jp
sub
lock
xchg
mov
in
loop
aad
sub
nop
and
xor
mov
in
cmpsl
int3
pop
xchg
repz
jmp
push
dec
xor
jne
xchg
lods
repnz
pop
fwait
inc
push
jnp
icebp
jge
or
xor
bswap
xchg
lret
fbstp
push
sub
repnz
jb
hlt
fst
orb
mov
daa
ljmp
push
pushl
sub
cmp
xlat
idiv
inc
ss
mov
ret
mov
int3
mov
add
mov
lods
dec
shlb
sub
and
inc
adc
add
mov
mov
lds
sbb
stos
jmp
sub
stc
mov
call
loop
cli
neg
dec
and
int
gs
jno
in
mov
jecxz
pushf
push
mov
xor
xchg
sbb
into
aas
pop
mov
adc
jo
adc
xlat
cmp
ds
in
mov
es
subb
jl
mov
subb
adc
add
imul
lahf
out
push
jns
insl
mov
call
mov
faddl
shr
scas
je
mov
jns
mov
add
inc
nop
test
cltd
bound
es
js
cmp
daa
fwait
aas
lret
mov
stos
je
xchg
xchg
xchg
xchg
into
lret
rcrl
adc
cmc
fwait
add
mov
movsb
xor
fiadds
push
movsl
call
adc
dec
pop
test
fsts
ljmp
mov
jmp
rol
and
bnd
add
subl
mov
sub
mov
cmp
cmc
push
mov
xor
test
pop
cmp
sbb
insb
std
push
mov
dec
insl
call
in
ss
pop
in
stos
and
sbb
rcrb
testb
outsb
jmp
push
mov
jge
loope
out
ljmp
popa
push
xchg
and
stos
mov
fwait
std
push
fistps
stos
in
rorl
cwtl
and
mov
push
lret
fidivl
cmp
mov
cmp
pusha
mov
or
imul
pop
xlat
mov
scas
dec
rclb
mov
or
in
cmp
or
sbb
inc
stos
test
jecxz
test
dec
js
xchg
aad
cwtl
pusha
mov
pop
sub
jno
ljmp
push
mov
jmp
dec
adc
outsb
imul
or
je
lahf
and
pop
adc
jmp
lret
insl
add
pusha
out
cmp
jno
fsubrs
pop
xchg
into
pop
lds
fs
inc
insl
pop
subb
mov
pop
mov
bound
std
mov
push
iret
lcall
mov
sahf
sbb
adc
data16
in
fistpll
adc
add
xor
cmpsb
add
icebp
shl
jle
dec
movsb
push
fwait
bound
pop
movsl
in
jle
popf
and
pop
cld
mov
cmp
movsb
int
xor
ret
dec
ja
bound
mov
loope
cmpsb
push
loopne
cmp
rdpmc
jo
dec
ret
or
add
inc
pop
fimuls
and
call
mov
jmp
stc
loopne
inc
mov
dec
mov
dec
out
cli
and
dec
cmp
out
jge
pop
cmpsb
arpl
sub
scas
cmpsb
xor
test
fistpll
out
and
adc
inc
filds
sahf
call
and
push
cmp
dec
cmp
xlat
dec
or
cltd
inc
cmpsl
cli
aaa
mov
dec
pusha
adc
inc
lock
movsl
movsb
fisubl
xchg
lods
pop
aas
dec
lds
aam
rcr
xor
mov
push
mov
pop
int3
adc
or
cmc
inc
enter
in
int
sub
dec
das
mov
in
mov
sub
push
movsl
shlb
cmp
mov
mov
mov
or
xorl
push
adc
shrl
mov
xchg
inc
int3
cwtl
sub
leave
mov
sub
push
pop
loop
fcomps
cmp
movsl
jg
lock
int
mov
push
mov
add
rolb
sti
shr
js
testl
cs
sbb
pop
cltd
sub
inc
pop
mov
jns
sub
push
out
cli
lea
mov
push
jne
push
lock
in
cli
in
inc
movsl
and
jl
push
xor
daa
pop
xchg
cli
xor
mov
inc
sti
adc
adc
cmpsl
loope
inc
in
push
daa
std
fisubl
icebp
xchg
push
repz
pushf
push
je
out
arpl
mov
pop
inc
fwait
lock
mov
imul
sub
sbb
aam
xor
cmpsl
and
arpl
and
pusha
jmp
cld
and
and
pushf
xchg
and
leave
pop
movsb
int3
xchg
pop
in
lahf
or
ljmp
sahf
jbe
ds
inc
in
decl
sbbb
cwtl
test
pop
scas
inc
or
jmp
fwait
pop
mov
pop
adc
lods
jns
lahf
sbb
out
mov
cltd
push
fimull
fld
ds
cmp
xchg
lcall
cs
rcrl
lcall
or
jmp
sub
dec
test
outsb
dec
lret
cmc
lret
pop
push
aam
push
mov
fiadds
or
loop
lock
lods
cmp
in
jne
cltd
adc
jns
sbb
or
cmpsb
push
mov
mov
add
mov
ret
in
pop
mov
and
lds
sbb
iret
out
in
hlt
dec
mov
push
or
cs
js
dec
into
clc
mov
jl
gs
outsl
js
lcall
out
cli
sub
xor
cld
es
les
xlat
mov
or
adcl
rcrl
sub
movsl
xchg
cmc
rcrl
gs
sub
dec
mov
imull
sub
mov
mov
cmp
insl
js
xor
pop
adcl
repnz
jmp
mov
mov
push
notl
cs
jl
ficoms
sti
pushf
lret
dec
inc
inc
fsub
adc
adc
jae
testl
mov
sub
es
add
sbb
popf
dec
pop
dec
jp
aaa
test
and
adc
jecxz
adc
in
fidivl
je
in
das
loop
xchg
sbb
jne
fwait
sub
xor
bound
mov
jmp
and
sub
sbb
mov
sbb
mov
xchg
cmp
mov
sbb
pop
adc
adc
pop
dec
fsub
xchg
imul
sub
into
lcall
sbb
mov
pop
ud2
xor
inc
mov
jp
movsl
cld
pop
scas
pop
jae
mov
cltd
das
pop
inc
sub
lret
int3
inc
dec
insb
xchg
loopne
daa
popf
pop
mov
or
in
mov
addr16
xchg
push
in
cltd
test
call
sbb
mov
flds
cld
push
pop
clc
pop
iret
into
std
rcll
lds
shll
insl
mov
ret
addr16
mov
pop
subl
xor
mov
call
adc
psubd
mov
mov
stc
cmpsl
in
xchg
push
into
std
mov
mov
inc
mov
or
push
cli
add
add
andl
sub
jecxz
mov
ljmp
leave
aaa
dec
ljmp
xor
inc
xchg
sub
sysret
push
or
jmp
and
cmp
into
cmp
rcrl
dec
or
inc
pop
sbb
mov
mov
inc
dec
xor
sub
adc
mov
xor
or
cmc
and
pop
test
fimuls
dec
push
repz
push
iret
out
lock
lea
cld
sarl
popa
pop
jg
int
les
push
push
jl
push
dec
sub
sbb
int
adc
pop
nop
lds
nop
cmpl
ret
pop
sbb
lcall
add
fst
movsl
pop
ret
out
inc
jae
pop
mov
std
stos
xchg
adc
inc
not
stos
repnz
outsl
in
xchg
or
pop
int3
sbb
popa
jmp
xor
inc
repnz
sbb
inc
push
mov
pusha
leave
sbb
test
es
mov
clc
xchg
fisttpl
or
cmp
jnp
std
and
or
rcll
push
mov
add
dec
hlt
pmulhw
mov
xor
ja
cmpl
aaa
inc
xor
cmp
xchg
cmp
cmpsb
call
mov
aad
mov
out
insb
cmp
outsl
xchg
xorps
andb
push
xchg
xchg
push
clc
stc
push
iret
push
add
jno
jle
into
jo
lods
imul
divb
xchg
xor
dec
cli
and
call
mov
adc
add
adc
shll
push
loope
pop
icebp
xor
std
jne
popf
mov
pop
push
dec
sbb
mov
hlt
bound
stos
and
push
and
xor
addb
callw
popa
cmp
icebp
stos
inc
xor
rclb
xchg
inc
sarb
mov
movsb
cmp
int
cmp
xchg
dec
cmp
in
cltd
cltd
dec
imul
and
cmp
push
mov
mov
pop
mov
imul
adc
movsl
mov
cli
xor
leave
or
ror
mov
test
addl
dec
mov
lock
sbb
or
xchg
jnp
mov
test
inc
add
andb
movl
or
cmpsl
fadds
cmp
out
loop
cmc
les
mov
lock
test
mov
icebp
cld
mov
adc
add
or
cmc
int3
bound
addr16
push
adc
fs
xchg
mov
fsubrl
jge
insb
pop
loop
mov
iret
and
je,pt
mov
insl
andl
mov
xlat
imul
ljmp
aam
mov
jo
shlb
dec
mov
xchg
pop
shlb
jmp
call
movsb
hlt
sub
mov
sbb
adc
inc
or
xchg
inc
scas
ja
es
pop
xchg
js
in
jb
mov
movsb
mov
pop
fnstsw
mov
adc
out
in
cmp
pop
rolb
lret
jns
mov
cmpsl
cmc
push
xlat
xchg
jg
lret
sub
sbb
or
cltd
xchg
ja
mov
push
imul
push
je
xchg
dec
loope
lock
jae
dec
ds
cmpsb
int3
mov
out
inc
pop
pop
jne
cli
mov
out
pop
loope
adc
hlt
mov
divb
push
stos
or
movsl
int3
bound
cmp
cmp
mov
int
mov
mov
adc
mov
outsl
popa
das
mov
nop
and
pop
lods
push
pop
pop
xchg
xchg
adc
cmpsl
rcl
fmuls
sbb
int
mov
add
bound
jno
or
push
push
int
addr16
insb
into
test
cmp
in
xchg
out
jmp
out
dec
out
sub
ss
xchg
clc
jno
sahf
mov
jg
or
xchg
cmp
inc
add
inc
inc
xor
mov
and
pusha
add
test
mov
fildl
xlat
mov
mov
inc
incl
test
test
inc
mov
in
rorb
add
jns
decl
pushf
sti
pop
fisubrl
popa
icebp
and
adc
xlat
mov
mov
mov
mov
push
dec
gs
mov
jo
mov
ss
xor
lods
stc
popf
jae
pop
shlb
iret
xor
test
dec
inc
cli
insb
pop
mov
insb
push
pop
std
mov
fiadds
punpckhwd
popa
stc
xchg
cmp
cmpsl
outsb
cmpl
mov
mov
fstpl
call
sub
xor
add
pop
arpl
ja
xor
pop
aad
cmp
inc
pop
test
and
sub
lcall
outsb
xacquire
rcl
addr16
adc
inc
adc
dec
adcl
dec
lcall
cmpsb
pop
add
nop
xchg
pop
mov
popf
mov
imul
jp
cmp
xor
inc
xchg
rcl
fs
hlt
xor
inc
les
pushf
push
ret
or
jg
mov
inc
test
pusha
pop
and
ljmp
sub
insb
dec
shlb
xchg
pop
arpl
movsl
shll
mov
int3
bound
push
int
es
xchg
jge
ret
pusha
scas
out
mov
and
pop
add
loope
cmc
jl
sub
mov
in
je
ja
dec
inc
fucomip
movsl
es
mov
mov
cmp
pop
mov
or
mov
arpl
push
adc
dec
aaa
lds
mov
jmp
mov
insl
ljmp
or
sti
xor
mov
cwtl
mov
mov
add
ljmp
sub
sub
xchg
incb
pop
mov
repz
xchg
cli
fnstsw
mov
push
cmp
arpl
xor
or
ljmp
inc
addr16
mov
mov
adc
mov
test
cmpsl
adc
pop
sub
sbb
push
jbe
icebp
push
sbb
xchg
jmp
mov
je
add
notb
arpl
push
jne
dec
xor
sahf
movsb
mov
adc
pop
movups
pop
clc
sbb
push
mov
pusha
lock
push
adcb
test
test
in
mov
stos
mov
cmp
aas
add
andl
sbb
subb
fidivrl
mov
xor
cmp
shll
sbb
inc
out
sub
mov
jae
popa
jb
sbb
xchg
repz
pop
and
xchg
out
pop
repz
jns
cmpsb
test
lret
ljmp
ds
inc
fstl
popf
imul
or
pop
loop
out
add
pop
jbe
test
and
xchg
jb
xchg
imul
lock
int
dec
mov
jmp
ljmp
inc
jl
add
daa
sbb
cli
cli
pop
out
je
adc
push
mov
sahf
das
out
and
bound
clc
push
aam
push
mov
loopne
insb
push
fsubrs
pop
sub
push
dec
mov
mov
mov
lods
cmp
push
pop
sbb
enter
pop
push
push
aam
stos
xlat
mov
sbb
push
rcr
insl
int3
cmp
rcr
ds
imul
cmp
xchg
inc
mov
fstl
decb
add
mov
aas
sbb
lret
pop
test
add
hlt
jmp
dec
ljmp
mov
sub
mov
out
in
dec
cltd
push
sub
out
repnz
mov
sbb
and
scas
add
xor
lahf
cld
imulb
rcrl
cmp
testb
fwait
pop
xor
out
mov
jns
push
lock
xor
sbbl
leave
and
cmc
insl
daa
adc
pop
pop
sbbb
fdivs
xor
or
loopne
jo
mov
shlb
outsb
xchg
sbb
rcrl
loopne
inc
in
xchg
add
dec
fstl
xchg
pushf
xor
sub
nop
dec
fdivs
xchg
mov
add
jnp
ljmp
mov
shll
jae
pop
cltd
int3
push
push
pop
sbb
pop
shrl
shrb
or
xchg
incb
push
dec
pop
push
inc
lcall
jecxz
cmp
inc
outsb
mov
repnz
ret
jmp
add
shll
cld
or
mov
push
sti
dec
xchg
push
movsl
adc
sahf
inc
sub
icebp
cmp
lods
pop
cwtl
arpl
std
outsb
inc
sub
inc
movsb
iret
sub
xor
int
cmpsl
dec
inc
mov
lret
lret
dec
or
cmpsb
fcoml
scas
pop
sub
lea
pop
mov
inc
pop
les
gs
je
cmpsl
xchg
gs
pop
stos
inc
mov
and
arpl
cmpsb
rcll
lds
loop
in
int
mov
cmpsl
push
scas
sub
sbb
cmp
jmp
add
pop
fadds
shlb
xlat
and
pop
sbbb
scas
pop
xor
mov
mov
in
fcompl
rep
mov
enter
mov
push
ds
mov
jge
and
cmp
aam
dec
inc
dec
je
push
icebp
aam
xchg
fstp
mov
in
outsb
sub
outsl
pop
cmc
xor
sbb
dec
or
std
mov
push
push
push
or
cmc
stos
loop
nop
rcrb
dec
fs
jmp
scas
jle
in
or
inc
movsb
pop
mov
add
mov
dec
or
pop
fldl
roll
in
mov
mov
push
jae
fimull
xor
mov
les
dec
xchg
rcll
xchg
andb
syscall
cli
or
cmp
adc
dec
push
xchg
aam
aam
aad
mov
call
enter
out
mov
ds
mov
or
push
aad
jno
outsl
mov
ds
push
ds
mov
mov
in
outsl
push
adcl
test
pusha
filds
hlt
pop
lret
xor
xor
xor
test
std
dec
orb
and
and
call
or
or
add
and
xor
mov
push
rcrl
int
test
or
ret
cwtl
shrb
dec
add
push
ret
jns
sbb
and
sti
mov
movsb
pop
mov
loopne
xchg
push
movsl
hlt
loope
jae
jb
push
stc
movsb
mov
xchg
inc
add
jge
mov
mov
xchg
cltd
movsl
sahf
cmp
add
push
xchg
mov
js
lock
jge
sub
or
iret
cmp
mov
stc
test
clc
pop
popf
jmp
jmp
or
push
jecxz
out
push
pop
js
jge
fwait
lods
lods
push
mov
leave
inc
fbld
cltd
inc
pop
das
push
into
jbe
sti
xchg
ret
ret
pop
jns
sub
rorb
xchg
inc
es
in
lcall
ficoms
repz
mov
xchg
les
jp
insl
jg
adc
and
fdivr
lods
mov
std
push
cmp
xor
add
dec
call
xchg
fdivrl
clc
xor
iret
rol
mov
cmp
cwtl
mov
inc
in
je
movsl
cmp
das
cld
or
push
les
ror
rclb
inc
adc
xor
push
idiv
adc
mov
and
xchg
and
add
xchg
sub
dec
xlat
sti
push
and
sti
fwait
jle
add
push
mov
xchg
cmp
insl
aad
dec
pop
inc
add
mov
jns
ljmp
in
mov
pop
pop
in
repnz
dec
push
xor
rcll
cmp
inc
add
mov
and
lahf
dec
arpl
js
cmp
ficompl
lock
adc
or
fstpt
ja
xchg
rorb
ja
add
pop
adc
push
scas
int
push
je
es
dec
ljmp
mov
jne
cltd
sbb
add
movl
lahf
imull
mov
sbb
jge
sub
cmp
push
mov
mov
mov
rcr
inc
movsl
cli
dec
sub
outsb
mov
sub
or
jle
pop
lcall
mov
lret
call
push
and
pop
jle
mov
mov
jl
push
jne
sub
push
or
aad
lods
cvtdq2ps
int3
decl
mov
pop
sbb
lcall
adc
adc
cltd
inc
aam
jmp
sub
aam
pusha
cmpsl
cmp
xchg
dec
sahf
xlat
aas
mov
and
mov
jp
push
mov
rol
push
add
xchg
xor
shll
pop
fdivrl
cmp
cmp
add
in
or
adc
dec
fstpl
lahf
out
and
cli
mov
add
xor
ds
sbb
xor
mov
and
dec
adc
dec
lcall
ds
es
mov
mov
out
inc
je
sub
stc
push
add
jge
xor
pop
movb
dec
out
jb
movsb
jae
inc
int
push
cs
leave
dec
dec
stos
xchg
xor
lock
jne
push
cmpsl
negb
sub
lret
inc
outsb
pop
rcrl
in
cmp
fnstenv
pop
bound
out
lds
rolb
inc
xor
xchg
loope
jle
xchg
test
jecxz
data16
stc
sub
fnsave
pop
adc
ja
imulb
pop
fidivl
sub
lea
lcall
mov
inc
sub
jg
sbb
jb
xor
daa
push
lods
pop
pop
hlt
loop
stc
mov
out
add
scas
sbb
xchg
pop
sbb
imul
in
or
xchg
jae
insl
and
xor
adc
sahf
dec
int
or
add
mov
mov
out
aaa
dec
aaa
cli
add
in
stc
int
clc
mov
mov
sub
fmulp
mov
data16
jb
stos
mov
and
pop
cmp
aam
lret
pop
mov
shll
cltd
adc
sbb
insb
out
push
mov
das
movaps
outsl
xor
inc
push
outsl
outsb
cmp
cmp
aam
pop
das
mov
or
out
adc
mov
lea
ret
lea
lds
fcoms
dec
jl
daa
dec
and
call
daa
xchg
lcall
inc
daa
mov
dec
pusha
hlt
enter
lret
movsb
and
xor
ja
iret
mov
xor
in
loope
std
movsb
jl
lds
lret
das
adc
sub
fidivs
pop
insb
pusha
orl
mov
pop
je
jbe
in
movsb
insl
rcl
and
mov
lahf
lret
jno
mov
push
xchg
call
xchg
sbb
enter
jg
hlt
inc
ror
into
popa
nop
sbb
cmp
xor
push
mov
xor
dec
lds
stos
add
xchg
loop
cli
mov
push
addr16
push
int
or
lods
stos
jb
push
std
xchg
push
cli
adc
je
test
popf
pop
dec
dec
add
jmp
mov
or
mov
mov
xor
mov
subl
xor
movzwl
or
mov
mov
xorl
add
addl
movzwl
mov
mov
movzwl
sbbl
xor
sbbl
add
mov
mov
mov
inc
mov
cmp
movl
jne
mov
mov
orl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
dec
mov
mov
xor
xor
sub
add
mov
mov
add
movl
movl
movl
xor
mov
xor
mov
mov
adcl
xor
add
mov
movl
mov
je
andl
mov
adc
mov
xor
orl
xor
adcl
sub
sbbl
sub
adc
xor
mov
mov
mov
subl
add
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
add
or
dec
mov
mov
mov
add
notl
xor
mov
xor
add
xor
or
sub
imul
mov
mov
orl
add
and
adc
mov
mov
add
mov
addl
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
subl
sub
add
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
or
mov
xor
orl
add
movl
jne
movl
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movzbl
xor
sub
sbb
xor
neg
mov
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
adcl
xor
sub
xorl
sub
adcl
xor
movl
mov
not
mov
mov
movl
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
push
pushl
call
jmp
mov
xorl
jmp
fnstsw
mov
aam
aas
push
sub
jb
rcrb
jb
cmp
stos
sbb
aad
idivl
bound
shl
in
xchg
je
int3
cmpsl
lret
outsb
mov
stc
sbb
jmp
orb
and
mov
sti
ret
and
mov
sbb
push
xor
pop
aam
push
jecxz
xchg
lock
int3
pusha
mov
push
fsubr
xor
jns
mov
cmp
les
inc
mov
and
rorb
jb
xchg
and
mov
add
inc
iret
fstpt
jns
push
mov
in
push
stos
push
adc
jg
mov
mov
rcr
stc
loopne
lds
push
mov
mov
mov
and
pop
inc
arpl
cmp
dec
and
add
mov
add
pop
or
and
push
adc
dec
jmp
rcl
push
mov
inc
scas
pop
nop
push
mov
mov
or
int
dec
rorb
lret
xor
cmpsb
outsl
mov
and
push
hlt
xor
sub
add
and
jecxz
mov
inc
add
stos
dec
mov
xor
jnp
fsts
mov
fs
not
sbb
dec
aam
gs
xchg
add
mov
enter
ds
xchg
sahf
xor
xchg
movsb
aaa
shlb
cli
lcall
or
push
sbbb
aad
bnd
inc
rcr
push
scas
jne
clc
or
xor
sbb
or
push
add
das
iret
enter
jmp
mov
movsb
lret
or
xchg
sbb
or
mov
in
inc
ss
dec
sbb
sbb
pop
inc
sarb
test
push
xor
sbb
nop
ss
or
sar
jo
dec
repz
sbb
es
mov
adc
xchg
mov
inc
shr
lods
push
sub
jp
push
addl
push
stos
outsb
sub
mov
ficoml
gs
lret
adcb
jo
mov
arpl
pop
leave
pop
pop
into
jne
outsl
mov
push
lret
mov
mov
aad
mov
pop
loope
pop
add
into
outsl
mov
and
lods
and
and
or
adcb
in
mov
popf
mov
push
push
cmpsb
fs
adcl
movq
dec
mov
int
dec
add
test
pop
xor
rcr
and
test
mov
aaa
jo
sahf
shll
xchg
mov
repz
jl
or
stos
adc
xchg
cli
jae
jne
fdivl
jmp
clc
loopne
arpl
repnz
cmp
clc
stos
dec
outsl
xlat
adc
bswap
push
pusha
mov
mov
out
push
lahf
jo
mov
lock
daa
pop
push
data16
mov
mov
aaa
std
add
ja
ret
and
rorl
sbb
pop
and
rcrl
jns
fsubr
jecxz
subb
cmp
jne
mov
jmp
xor
inc
or
es
imul
sub
jnp
add
test
lods
or
dec
loope
popa
scas
lods
push
in
in
inc
nop
test
or
xchg
jg
nop
cmp
mov
jl
and
outsl
rcrb
xchg
fiadds
xor
addb
out
adc
les
dec
sbb
pop
inc
mov
jns
inc
mov
insl
mov
enter
das
arpl
aad
add
pop
adc
fs
aaa
call
or
jns
jns
mov
adc
imull
aam
cmp
adc
flds
mov
pushf
mov
jbe
ds
sbb
ss
je
stos
inc
push
arpl
lret
mov
test
cli
xchg
mov
sub
hlt
cs
cmc
mov
push
push
leave
push
fisubrs
mov
sub
ror
xor
and
pop
aas
fwait
push
divl
push
mov
adc
xchg
pop
dec
push
push
xchg
or
mov
or
mov
shrb
leave
insb
cmc
je,pn
inc
mov
in
mov
cmpsb
mov
mov
jge
fs
or
jg
or
leave
cmc
mov
ds
movsl
int
cmpsl
pop
jne
test
and
jns
adc
add
xlat
mov
xor
sbbb
roll
push
push
push
mov
loopne
mov
std
daa
mov
cli
cli
flds
rcrl
loope
cltd
cmpsl
inc
stos
dec
sarl
les
pop
in
rcrb
mov
pop
add
inc
rcr
sbb
sbb
inc
mov
push
sbb
add
jae
lret
push
dec
popf
cmc
out
sbb
scas
sub
test
cmpb
retw
fwait
fwait
sub
adc
pop
lcall
sahf
mov
ljmp
pop
sti
jo
mov
jl
nop
shlb
mov
or
jecxz
cmp
aam
jp
cmp
sub
imul
gs
jbe
jmp
pop
and
or
mov
mov
mov
cmp
pushf
xor
sub
inc
xchg
jp
sub
pushf
sbb
sub
ret
mov
test
jl
shll
insb
mov
repz
sub
scas
stos
es
lahf
stos
out
xchg
adc
adc
out
cmpsl
mov
loopne
not
call
jmp
xchg
push
divb
fistpl
test
mov
push
roll
jo
add
mov
mov
mov
adc
pushf
lret
fistpl
adc
dec
hlt
jp
xlat
mov
inc
shl
sbb
mov
movsl
cs
dec
iret
aad
push
popf
add
in
sbb
adc
add
xor
mov
imul
cmpsl
repnz
inc
out
incb
sub
cmpsb
jnp
mov
xchg
xlat
sub
mov
int
push
sbb
test
bnd
in
loop
mov
inc
mov
mov
mov
fiaddl
cmpsl
inc
mov
cmp
add
xchg
shrl
outsl
pop
and
add
imul
test
popf
lods
ret
jns
ret
mov
rclb
test
push
sahf
or
push
adc
int
jge
cmpsl
xor
jnp
rcrb
sbb
xchg
pusha
pusha
mov
inc
roll
gs
add
inc
xchg
ss
lret
push
xchg
ds
mov
shl
mov
xor
out
jecxz
sub
push
popf
xchg
push
cmp
jp
xor
mov
dec
js
call
mov
push
scas
pop
mov
rcrb
jecxz
ret
jmp
push
xchg
dec
mov
pop
or
ret
outsb
or
enter
sbb
xlat
sti
xchg
mov
ljmp
pop
sub
cmpsb
hlt
movsb
es
cld
mov
pushw
jns
pop
or
ret
pop
mov
cli
mov
stos
aaa
ss
pop
and
call
cwtl
cmp
popa
xchg
pop
cs
out
mov
or
mov
in
repnz
and
or
mov
or
or
cmc
testl
sub
sbbl
lret
test
adc
adc
xchg
mov
add
jmp
mov
xor
xorl
scas
adc
loope
push
mov
lods
in
jae
fisttpl
sbb
cmc
dec
sbb
and
fldt
inc
fcomps
lcall
icebp
cmp
leave
movsb
lret
pop
and
cmp
or
lret
movsw
repz
xlat
insl
add
or
sbb
cmpsl
sub
clc
cld
sub
mov
jne
fcom
movsb
and
or
xor
lock
test
stos
sub
xchg
in
sbb
sbb
cmp
ret
sbb
mov
inc
xchg
push
pop
push
jmp
movsb
cmp
aaa
pop
mov
sti
dec
pop
cmpsb
mov
add
dec
test
fchs
pop
push
jns
add
arpl
outsl
xchg
fistpl
loope
push
or
cmp
xchg
xor
cli
icebp
loopne
mov
or
loopne
in
fcomp
nop
push
push
movsb
sbb
test
push
sub
arpl
aaa
dec
call
std
sbb
sbb
add
inc
aaa
sbb
call
mov
mov
jb
outsl
nop
pop
pusha
mov
mov
mov
out
out
pop
repnz
ficoml
or
shrb
pop
mov
cmpsb
ret
scas
xchg
mov
dec
dec
lcall
push
add
lods
stc
mov
sbb
in
test
mov
inc
cli
aaa
lock
push
adc
push
push
mov
cmpsb
dec
xchg
and
xor
sahf
sub
cli
pop
cmp
stc
xchg
push
adc
fadds
cwtl
mov
push
nop
mov
shrl
adc
cmpsl
stc
or
cmp
in
or
loopne
outsb
xchg
ja
and
out
test
push
ss
js
push
push
jecxz
and
icebp
addr16
movl
mov
pushf
pop
pop
ljmp
shl
cwtl
mov
cmp
push
lcall
inc
push
sub
mov
and
insl
push
xlat
xor
bound
cmp
pop
sub
mov
mov
jecxz
ja
in
jbe
insb
sub
les
pop
movsb
iret
add
xor
push
jbe
jnp
adc
sti
sub
pop
sub
push
push
addr16
inc
in
cmpl
inc
sbb
pop
js,pn
push
int
pusha
pop
mov
stos
repnz
fisubrl
pop
dec
mov
arpl
and
movsb
dec
mov
rcll
mov
inc
aas
jecxz
aaa
jns
push
jmp
add
in
out
ret
cmp
outsl
insl
push
or
and
test
pop
xchg
fisttpll
mov
mov
pmaddwd
cmp
enter
ljmp
loopne
mov
push
into
or
repz
xor
mov
scas
push
jp
jle
inc
fldenv
negb
push
test
push
pusha
out
jae
and
cltd
inc
and
out
and
leave
gs
nop
cwtl
mov
xor
rorb
jle
test
shl
xchg
stc
aam
xor
jne
pop
jns
sub
sub
aas
sub
and
out
stos
mov
call
js
sbbb
rcrl
sbbl
nop
movsl
pop
push
cld
lea
or
test
sub
xchg
lock
out
imul
jb
cmp
into
sbb
add
jge
and
stos
mov
inc
lahf
icebp
push
pushf
or
stos
mov
gs
xchg
cmpsb
mov
cmpsb
sbb
fisubl
rcrb
jno
or
stc
xchg
dec
test
sbb
add
pop
out
jge
sarl
orb
jp
dec
mov
outsb
divb
inc
cmp
lret
fildl
jl
pushf
xchg
mov
adc
sti
adcl
and
mov
int3
mov
icebp
stc
jg
mov
or
push
inc
cmp
sub
mov
scas
mov
loop
xchg
or
push
adcb
test
jl
sbb
aaa
inc
lret
test
dec
es
insb
cwtl
xorl
jle
clc
jmp
cmp
popa
insl
les
or
daa
mov
call
out
push
imul
jno
jp
mov
pop
and
or
push
cli
mov
jg,pt
loope
fldl
push
insl
sub
fwait
sub
push
out
repz
xchg
push
lods
pop
loopne
cmp
inc
sarl
dec
cmpsl
xchg
push
sbb
std
dec
jecxz
fwait
pop
in
arpl
add
shll
sub
stos
mov
jp
push
or
loope
sbb
jo
pushf
push
mov
popa
leave
xchg
js
and
repz
and
push
call
pop
popf
hlt
push
out
lcall
popf
mov
sub
repz
adc
xor
mov
cmpsl
xchg
das
adc
jo
fmuls
fucom
lret
mov
mov
mov
or
sti
mov
inc
repz
movsb
ja
or
push
mov
or
popa
and
aas
push
cs
bound
xchg
addb
pop
ljmp
loope
mov
into
orl
ja
inc
push
imul
iret
outsl
push
imul
cmp
xlat
imul
sub
sub
xchg
scas
push
scas
imul
iret
xchg
stc
and
setns
fwait
movsl
cmp
fadds
mov
imul
pop
sub
cmpsl
mov
push
aas
pop
or
test
sarb
test
fimuls
xchg
repnz
xchg
sub
or
popa
mov
cwtl
pop
lea
or
pop
loopne
dec
or
loopne
xlat
jae
mov
sub
and
adc
pop
mov
push
lret
mov
aaa
xor
pop
lds
test
pusha
not
in
dec
jl
cmp
xchg
lea
mov
push
xor
pop
test
fnstsw
lret
push
push
lret
jo
mov
add
and
lea
ret
xor
pop
push
mov
inc
xchg
and
pop
push
xchg
jne
cmp
ffreep
xor
push
stos
mov
mov
js
pop
gs
into
mov
aad
popf
outsb
arpl
aam
stos
jl
pop
xchg
sub
inc
push
dec
mov
sbb
add
push
mov
cmpsl
into
xor
icebp
dec
cwtl
pop
and
jne
in
xor
insb
stos
xchg
or
ljmp
dec
mov
jecxz
lret
insl
pop
ret
add
int3
add
inc
imul
add
pop
test
cmpsl
push
test
pop
outsl
stc
jne
mov
repnz
iret
jne
push
popf
les
mov
aas
cmc
icebp
shll
or
push
push
xchg
fildll
push
test
lret
mov
pop
push
and
adc
xchg
jecxz
and
loop
out
push
adc
push
cmp
and
push
fwait
lahf
movsb
sub
adc
pop
mov
jl
xor
sub
mov
or
movsb
pop
les
inc
rcl
lds
das
mov
cmp
int3
jle
inc
arpl
xorb
sahf
xorl
jns
leave
loope
icebp
inc
mov
pop
cli
inc
dec
aam
push
xchg
pop
jne
jl
pop
jmp
mov
xchg
jp
enter
cli
dec
mov
cmp
orb
push
sub
sub
mov
inc
or
mov
add
lock
ds
inc
dec
pop
push
cmp
jmp
loop
dec
xchg
mov
cmp
mov
call
test
pop
mov
ficoml
in
xchg
dec
cltd
aas
jl
js
jb
sub
ret
sub
add
add
jecxz
adcb
out
adc
lahf
divb
int
mov
jmp
mov
sub
test
mov
repz
pushf
insl
push
mov
ret
insl
lods
shl
insl
pop
jns
cli
cwtl
push
mov
sbb
insl
mov
aaa
or
mov
inc
inc
mov
add
add
xchg
rclb
lahf
out
aam
loopne
dec
stc
outsb
push
xor
push
fildl
or
mov
jns
xor
mov
pop
or
dec
je
jp
cld
cli
jmp
xor
je
ja
xlat
xor
loopne
jmp
xorl
out
or
js
mov
mov
inc
fwait
ret
add
mov
repz
push
mov
xorb
aas
jbe,pn
push
mov
jmp
xor
mov
or
cmpsb
mov
inc
pop
mov
push
in
cltd
pushf
aas
push
xor
incb
sbb
add
fwait
mov
or
fnstenv
js
dec
sbb
repnz
into
stc
ffree
xchg
push
int
jbe
enter
shll
inc
sbb
stos
sub
jmp
xchg
fsubrs
push
das
inc
testb
push
pop
add
mov
sarl
sbb
xor
push
push
lcall
aas
cmp
dec
enter
adc
mov
jae
in
cmp
call
mov
andl
test
or
fcompl
inc
dec
test
pop
push
cs
enter
add
sub
jl
lods
mov
fldt
push
insl
outsb
or
xor
dec
in
inc
mov
and
ret
inc
lcall
fwait
lahf
ljmp
pand
lods
add
push
into
or
xchg
test
in
dec
add
xchg
sub
aam
adc
test
push
mov
mov
and
cmpsb
add
ds
fmuls
out
lea
imul
insl
fs
pop
rorl
into
cmp
jg
or
cs
in
fdivl
mov
inc
mov
push
ja
jecxz
push
dec
xor
sti
pop
dec
sub
adc
sbb
xchg
pop
xchg
clc
movsl
mov
mov
rclb
mov
mov
dec
mov
mov
mov
mov
es
mov
pop
popf
mov
cs
jnp
xchg
push
push
fdivl
sub
sbb
sub
int3
shl
rolb
in
bound
cmp
lods
jnp
mov
sti
or
daa
jbe
call
mov
out
test
icebp
call
ljmp
std
adc
adc
cmp
xchg
adc
adc
in
dec
pop
icebp
daa
xor
out
int
jb
das
jo
into
mov
ljmp
jne
ds
adc
push
inc
cmp
cld
dec
jbe
cmp
xorl
mov
cmp
adc
cltd
pop
es
fmuls
xor
fwait
cwtl
popf
lock
es
mov
test
ja
in
push
pushf
sbb
sub
sarl
ja
int
pop
lods
mov
mov
push
rcrb
sub
xchg
xchg
and
or
and
mov
divl
in
lods
or
adc
pop
fnstsw
xchg
mov
xchg
and
push
scas
mov
ds
lods
adc
push
mov
in
sti
push
enter
dec
in
ficoms
or
enter
mov
push
ret
adc
pushf
push
cltd
outsb
mov
mov
fbstp
lods
add
popa
push
mov
jbe
rdmsr
mov
push
pushl
sahf
pushf
and
aaa
cmp
sbb
fiadds
mov
movb
fwait
icebp
inc
push
inc
outsl
pop
adc
ljmp
jno
cli
fldcw
pop
jnp
aaa
leave
out
sbb
in
or
cld
aam
xchg
and
pop
icebp
pushf
mov
out
xor
aam
insl
mov
jae
out
imulb
mov
xor
outsl
and
xchg
mov
lods
mov
lahf
dec
push
sub
das
adc
out
testl
jp
cmp
repz
adc
push
andb
sbb
pop
scas
cmpsb
lcall
cmp
in
test
ret
mov
gs
xlat
rep
sbb
in
dec
andb
scas
xchg
je
stos
dec
pop
adcl
mov
lds
fidivl
xor
jbe
xlat
pop
dec
sbb
jmp
loopne
or
lods
pop
xchg
or
pusha
jnp
clc
ret
xchg
inc
sti
pop
dec
movsb
and
xor
out
fbld
dec
dec
test
xchg
sbb
mov
repz
adc
pop
cwtl
lods
xchg
add
daa
imul
mov
jmp
cmpsl
and
pop
sub
push
out
mov
dec
test
outsb
arpl
daa
adc
das
sub
movsb
int3
scas
test
xchg
mov
loop
jo
shll
stc
lock
dec
xchg
jo
jl
mov
stos
shrl
cmp
dec
les
push
mov
sbb
int3
mov
adc
sbb
cltd
or
xor
idivl
xchg
dec
pop
push
jo
or
xor
stc
les
mov
or
mov
rcrb
mov
mov
fs
lock
sbbb
out
lret
push
jno
dec
pop
jge
lods
fldt
mov
pop
repz
pop
lock
js
xchg
adc
jecxz
adc
dec
cmp
out
fwait
push
mov
inc
mov
negb
dec
popf
mov
xor
rcrl
fadds
xlat
stos
cmpsb
filds
in
call
clc
pop
dec
pop
cmp
xchg
mov
pusha
rclb
cmpsl
sub
mov
xchg
jb
xchg
loop
lret
adc
fidivl
jnp
jecxz
xchg
inc
push
outsb
das
jge
push
lcall
jae
mov
push
dec
push
jne
dec
je
fcomps
jg
cmpsl
push
fists
fisttpl
lea
push
and
ja
jmp
inc
xor
cmpsl
arpl
iret
adc
pop
idivl
sbb
push
add
push
xor
xor
dec
inc
adcl
and
lret
xchg
xor
mov
cld
mov
das
pop
testb
mov
shl
adc
xchg
and
mov
lods
in
sub
cmp
mov
mov
cli
inc
sub
pop
fnsave
push
inc
sub
or
jecxz
int
adc
push
addb
lods
inc
sub
loope
sub
dec
adc
or
jbe
enter
cmp
xchg
mov
jb
inc
add
sub
jnp
cld
outsb
sti
sti
inc
je
inc
inc
mov
sbb
pushf
lds
pusha
scas
fmull
fisubs
pop
pop
or
sbb
and
xchg
movsb
push
or
inc
sbb
mov
sbb
push
outsl
push
daa
pop
mov
mov
test
inc
test
mov
and
or
int
mov
rclb
jnp
ss
inc
aaa
xchg
inc
clc
cmp
pop
jno
cmpsl
pusha
dec
and
push
loope
or
push
andb
mov
add
adc
mov
sub
inc
hlt
pusha
xchg
mov
pop
add
sub
jg
dec
xchg
shlb
scas
add
sub
sbb
ret
jbe
jns
movsl
push
mov
xchg
xor
adc
sub
mov
mov
scas
pop
ror
frstor
or
push
sbb
dec
pop
or
leave
pop
cmp
pop
push
loopne
sbb
cli
hlt
jns
insb
jb
fisubl
loope
inc
xchg
mov
cmp
out
add
push
jmp
mov
push
mov
jo
xor
loop
lret
xchg
lds
fwait
mov
adc
dec
cmp
loope
stc
mov
outsl
cmp
xor
jne
dec
pop
xor
cmp
sahf
xor
in
aam
push
je
in
mov
cmp
push
jnp
sub
shrb
lock
or
mov
sbb
xchg
push
dec
mov
pop
fistpll
bnd
xchg
dec
ret
loopne
xchg
xor
popl
test
jecxz
rcl
dec
mov
filds
cwtl
push
iret
pushf
sti
adc
loopne
sbb
mov
fimull
dec
xor
std
push
inc
or
xor
ret
stos
dec
out
out
aaa
cmp
or
stos
test
inc
popf
in
add
xchg
add
inc
test
sub
fcomi
and
adc
pop
mov
jne
clc
orl
stc
jnp
rol
stos
jo
sub
les
outsb
nop
or
adc
or
add
or
xor
sub
xchg
mov
test
sbb
pusha
test
fwait
pop
sub
push
inc
je
push
pop
and
mov
mov
adc
push
xchg
adc
rorb
mov
jmp
inc
lods
dec
nop
xor
mov
or
outsb
icebp
jno
sti
mov
jge
adc
in
inc
repnz
lcall
sbbl
lock
aaa
xchg
add
ja
leave
xchg
lahf
mov
jmp
test
std
push
out
dec
aaa
cmp
xchg
in
out
jbe
outsl
pop
cmp
jmp
inc
mov
mov
rcll
cmpsb
adc
pushf
mov
icebp
rcrl
test
cmp
int3
jb
mov
add
cld
call
xchg
fmuls
rorl
sbb
fildll
xchg
mov
shll
test
pop
data16
dec
int
popf
mov
jne
push
push
sub
xchg
jle
push
or
repz
lods
push
das
std
repz
sub
sub
pop
pop
xchg
mov
adc
int
mov
push
mov
sbb
xor
loopne
shl
sub
mov
push
fldcw
mov
or
mov
or
lock
inc
lret
xchg
frstor
adc
and
xchg
lock
test
mov
push
pop
sbb
mov
sub
inc
jno
dec
or
cmp
pop
popa
negb
into
xchg
sbb
sbbl
xchg
jbe
xchg
std
imul
add
dec
push
ja
push
cltd
repz
popf
sti
or
push
call
es
pop
sbb
sti
inc
dec
pop
xchg
sub
sub
imul
xchg
stc
test
loop
jns
adc
addb
push
dec
push
movsl
mov
add
cmp
rcr
cli
fbstp
sarl
inc
sbb
dec
cmc
mov
insl
xchg
sbb
outsl
push
in
ja
inc
clc
adc
fistl
sbb
xor
mov
cmp
fadds
mov
test
add
lds
popf
xchg
mov
lcall
sub
cmp
xchg
lods
xchg
ds
jp
cli
add
aad
mov
ret
inc
fidivs
push
icebp
mov
aam
cmp
pusha
repnz
pop
xchg
inc
mov
mov
xchg
jb
sbb
dec
add
cwtl
sbb
test
cmpsb
lahf
push
lods
ss
adc
fiaddl
xchg
mov
sub
imul
pop
sahf
xchg
and
or
loopne
pop
mov
adc
lock
add
imul
mov
lret
out
insb
fists
mov
fidivs
mov
leave
fcmove
orl
movsb
xor
jnp
cmp
xor
mov
mov
dec
das
push
mov
push
aas
and
and
jl
adc
out
test
mov
in
mov
cmp
imulb
jmp
push
mov
mov
arpl
in
sub
sbb
add
addr16
das
cmpsb
and
lret
xlat
lds
mov
dec
cli
push
shr
jecxz
jnp
adc
fnsave
cs
sbb
int
jecxz
hlt
cmp
dec
lahf
adc
ret
and
mov
mov
popf
int
push
in
xor
outsl
inc
shlb
mov
sbb
mov
jo
fildll
xor
loope
lahf
in
sub
fbld
sti
cld
lret
lods
fldt
push
icebp
jo
push
nop
add
sbb
repnz
dec
pop
sub
in
dec
add
out
cmp
jns
pop
jl
sub
mov
ret
jmp
jo
hlt
sub
cmp
mul
mov
gs
addr16
lret
mov
sub
call
lret
add
ret
fs
inc
jp
mov
xor
jle
jae
popf
repnz
popa
cs
xchg
repz
nop
adc
sbb
pop
lahf
xor
rclb
enter
test
int
xchg
pop
mov
hlt
pop
sbb
push
ja
sarb
pop
insl
adc
inc
not
or
sub
sti
in
sbb
rdmsr
movsb
add
cmpsl
xor
imul
repnz
lret
imul
pop
dec
dec
lret
sub
push
xor
push
movsl
outsl
hlt
inc
adc
sub
imul
fsubs
cs
mov
sbb
outsb
mov
movsb
cmp
inc
orl
call
pushf
notb
into
inc
lcall
mulb
in
addr16
cs
mov
daa
push
jb
js
inc
gs
int3
cli
popl
pop
push
insl
dec
mov
and
push
cltd
pop
dec
add
mov
pop
push
lahf
and
jmp
jmp
popl
lcall
push
mov
cmpsb
dec
jns
shlb
lahf
out
inc
andl
and
push
dec
pop
int
sbb
fiadds
es
mov
out
addr16
sahf
sub
out
mov
testb
imul
pop
lds
nop
scas
cmpsb
push
jp
clc
or
or
out
pusha
ja
mov
mov
imul
ja
lcall
sub
or
mov
add
mov
ret
repz
sbb
xchg
mov
lods
gs
sub
mov
sahf
mov
mov
loop
mov
push
ds
cwtl
add
sarl
xchg
aas
clc
mov
stos
repnz
sbb
push
incb
roll
pushf
lods
clc
into
mov
mov
lcall
and
nop
hlt
mov
test
je
dec
jae
aaa
inc
fstl
rcrl
mov
out
and
or
add
xchg
mov
push
pop
mov
pop
sub
and
lods
popa
imul
test
inc
xor
js
jg
dec
mov
jnp
mov
jp
lea
and
push
push
push
pop
cmpsb
dec
int3
cmpsb
add
mov
iret
cmp
jl
pop
pop
insb
addr16
shlb
jge
push
insl
inc
loopne
push
inc
dec
cmpsl
out
popf
push
lcall
jle
lods
xchg
sarl
inc
test
testb
nop
rorb
lret
enter
mov
add
cmp
ret
jae
sub
lea
std
xchg
out
pop
sub
adc
mov
lds
imul
adc
scas
pop
fbstp
mov
mov
nop
arpl
jecxz
aad
mov
xchg
movsl
das
shrl
addr16
hlt
incb
add
inc
jo
inc
stos
test
xor
and
cmp
nopl
addr16
inc
mov
dec
outsb
iret
fdivrs
xlat
add
and
out
dec
jb
jnp
insb
rcrl
pop
jle
push
arpl
push
outsl
sahf
inc
inc
lock
xor
clc
inc
inc
cmc
leave
loop
rcr
inc
mov
test
jmp
lret
in
jnp
adc
push
pop
jne
and
lds
fcom
and
pminsw
push
ds
aaa
lods
rclb
icebp
sbb
arpl
xchg
lock
pop
mov
aam
das
lret
lcall
in
push
cmp
xchg
enter
mov
ljmp
adc
inc
add
inc
add
fsubrs
rcrl
cmp
sub
xor
mov
mov
mov
add
subl
imul
add
mov
add
mov
mov
andl
add
addl
or
mov
adc
mov
sub
mov
incl
add
xor
adc
mov
mov
add
mov
subl
add
orl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
jmp
inc
xor
jae
mov
xor
pop
jb
dec
cld
adcb
push
mov
cmp
xchg
pop
lahf
jns
int
call
out
lret
loopne
mov
lret
adc
mov
jbe
iret
or
pop
cmpsb
adc
pop
add
jmp
es
ret
in
les
mov
loop
test
dec
jns
sub
fistpl
mov
shlb
aas
adc
jae
xor
ret
mov
fisubrs
mov
cld
lcall
sbb
int3
fimuls
or
lcall
adc
aam
pop
dec
lods
inc
adc
lds
test
fcmovbe
sahf
aad
loope
call
lea
jge
push
xchg
and
adc
cmp
jmp
mov
or
or
in
jg
dec
std
xorb
sbb
mov
xchg
xchg
xchg
cwtl
add
iret
mov
add
mov
or
cmpsb
and
pop
sbb
mov
call
sub
add
mov
clc
into
xchg
aad
mov
mov
cmc
pop
mov
ss
adc
test
mov
xchg
mov
jecxz
xor
ds
push
sti
test
pop
inc
mov
je
or
mov
push
jnp
or
enter
lret
dec
rcr
shll
andb
scas
inc
cmpsl
mov
sub
push
daa
hlt
push
inc
mov
ret
mov
push
xor
mov
cmpsl
mov
mov
and
outsl
mov
mov
inc
push
stos
mov
pop
rclb
ret
inc
sbb
sbb
stos
or
into
xor
enter
fisubl
stos
and
movsl
add
iret
dec
imul
movsb
jg
imul
push
and
xchg
mov
jecxz
push
mull
push
cs
inc
cmp
dec
hlt
mov
fwait
mov
mov
scas
cmp
sbb
imul
xor
mov
neg
xor
out
push
enter
dec
adc
jo
adcb
sub
mov
inc
mov
jb
push
sub
scas
pop
xor
js,pt
sbb
into
cltd
insl
push
mov
in
xchg
adc
pop
add
es
push
pop
mov
sbb
add
xchg
and
dec
xchg
dec
arpl
stc
xchg
mov
popf
loopne
push
inc
mov
cmc
xchg
ljmp
loopne
fimull
jo
inc
push
out
lret
aad
lods
call
rcr
pop
pop
xchg
ficoml
mov
cmpsl
add
outsb
mov
inc
mov
mov
pop
mov
jge
mov
cli
dec
push
jno
add
pop
pop
test
pop
out
push
iret
inc
clc
jns
imul
inc
in
es
repnz
pop
popa
or
mov
mov
mov
adc
lcall
mov
jno
stos
aaa
and
out
mov
xor
inc
push
push
cmp
sub
lock
lret
jnp
fmulp
and
lret
enter
clc
inc
xchg
dec
mov
dec
push
cmp
mov
iret
punpckhdq
icebp
sarb
add
ss
jmp
ja
mov
out
daa
leave
call
pop
enter
xchg
push
cld
cld
jb
nop
push
mov
adc
xchg
mov
les
cmpsb
cmpsl
or
pop
dec
ficoml
jge
pushf
add
outsb
adc
mov
out
or
cmp
pop
inc
adc
xchg
xor
loope
mov
xorl
pushf
cld
orb
sbb
mov
xor
or
mov
int
inc
lods
mov
ss
fwait
mov
leave
pop
sub
int3
ret
cmc
adc
imul
and
adc
jecxz
pusha
push
xchg
incl
jp
xor
jno
lea
jb
faddl
pop
sbb
push
push
out
test
mov
xchg
lods
adc
lods
pop
repz
ds
imul
or
shr
popf
inc
aas
mov
xchg
pop
dec
add
adc
outsb
pop
shlb
ds
sub
ss
add
aad
dec
ss
mov
dec
lods
pusha
sbb
or
push
jl
lods
adc
scas
pop
or
xchg
mov
std
xchg
scas
cmp
gs
popf
push
and
mov
push
sti
xor
scas
xor
xor
mov
xchg
push
dec
cmpsl
pop
and
je
daa
movsb
xor
pop
loope
lock
xor
cltd
pusha
xchg
mov
add
cli
and
xor
pushl
push
lock
loope
sub
stos
stos
jns
cmp
push
xchg
into
sub
sub
mov
adc
add
push
push
repz
notl
out
dec
push
cmp
fs
mov
jne
pop
mov
cmp
mov
cmp
inc
sub
es
mov
xchg
aad
jno
outsl
cltd
pop
lods
xor
jl
iret
arpl
inc
pop
mov
push
xchg
lret
xor
sub
mov
addr16
int3
cmp
push
xchg
ss
ja
ret
mov
pop
pusha
stc
mov
push
add
lds
aad
mov
pop
push
mov
pop
and
cmp
or
and
jle
stc
push
adc
mov
shl
fistpll
int3
shrb
int
adc
fistps
xchg
xchg
xor
pop
movsb
xor
jp
xor
sbb
ja
sub
lret
lret
mov
jmp
mov
ljmp
sub
add
lods
lret
test
push
lock
movsl
xchg
jge
cmp
popa
jmp
xor
stc
in
dec
push
adc
lahf
mov
xchg
cmc
xchg
stos
vmovddup
cltd
imul
sti
jmpw
fists
jbe
cwtl
cli
out
ret
cmp
popf
into
jge
dec
outsb
fisubl
pop
mov
lret
jp
mov
sub
jecxz
imul
mov
jmp
cld
out
rcrl
add
push
push
xor
pop
cmp
shlb
lret
pop
out
ja
push
sub
cmp
aas
mov
in
stos
jmp
out
adc
mov
jne
daa
sub
ds
mov
inc
jmp
lods
cmp
addl
daa
lods
dec
sbb
and
or
sub
cmp
sbb
mov
outsb
fsub
sbb
jo
jle
mov
in
sbb
mov
sub
adc
movsl
lret
shlb
fldl
into
lock
inc
aaa
pop
mov
sbb
dec
or
fcom
push
xchg
xlat
adc
lahf
xchg
and
xor
lds
or
mov
adc
mov
mov
xchg
aad
ret
dec
mov
jle
cmpsb
push
or
xchg
add
mov
out
out
cmp
rcrb
mov
jge
or
pop
add
pushf
test
mov
inc
mov
sub
scas
jo
sub
je
sti
pop
jo
pop
mov
mov
in
xor
dec
in
cwtl
lods
or
repnz
xor
and
loop
xchg
inc
push
dec
lock
out
enter
sub
jle
push
iret
pushf
ja
shrb
dec
sbb
jnp
mov
rorl
mov
jnp
sbb
jmp
pushf
shrl
mov
fildl
test
out
mov
cmpsl
out
js
pop
push
sub
fwait
sbb
inc
and
dec
add
mov
jmp
sub
add
frstor
loop
mov
test
jbe
adc
sub
adc
out
pop
fildl
in
dec
inc
xor
mov
ss
inc
jmp
add
xchg
pop
clc
cmc
cmc
add
dec
xchg
jb
sub
testl
lret
adc
ror
or
scas
push
ret
stos
and
or
addr16
stos
or
daa
push
xchg
fdivrp
sbb
mull
jnp
dec
pushf
clc
fistpll
leave
std
push
aam
out
popf
mov
in
popf
mov
jl
rclb
arpl
ss
pop
jmp
addr16
jne
ffree
jbe
inc
sti
adc
sub
mov
or
dec
enter
cli
jge
rcr
or
jb
xchg
fidivrs
adc
xchg
mov
clc
scas
mov
rorl
lret
cwtl
push
cmp
aad
out
pusha
inc
jge
mov
shlb
or
adc
andb
push
mov
xor
xchg
mov
mov
shr
adc
sbb
enter
dec
cwtl
jne
lret
pop
xor
xchg
pusha
jp
data16
pusha
dec
arpl
mov
add
sbb
push
out
or
mov
aam
or
loope
adc
lds
or
and
xchg
pop
call
sbb
xor
cs
cwtl
mov
push
pop
pushf
mov
adc
loop
xchg
scas
or
add
xchg
pop
push
cmp
stos
add
andb
movsl
jmp
hlt
in
pop
xchg
adc
cmpsb
mov
test
loop
sub
aad
rcrl
mov
inc
mov
cmp
cmpb
stc
inc
xchg
mov
and
mov
aad
int3
stc
notl
aad
clc
jmp
repz
dec
negb
test
mov
arpl
pop
sub
dec
cmp
loop
sbb
test
rorb
mov
sti
jnp
or
hlt
jg
imul
mov
daa
dec
popa
aad
inc
dec
or
or
enter
insl
sbb
mov
sub
inc
shll
sub
orb
shlb
pop
loop
movsl
das
push
int3
jns
out
je
loope
adc
push
std
ljmp
das
mov
lods
pop
sbb
jle
scas
jbe
mov
faddp
test
or
dec
sahf
dec
xchg
cmc
inc
scas
or
es
xchg
cmp
test
mov
std
lahf
pop
call
add
scas
lret
pusha
dec
std
xchg
test
sbb
or
mov
cmp
mov
sti
js
pusha
jne
jle
and
xchg
cmp
jl
mov
cmp
repz
leave
mov
divb
popf
int3
jae
cmp
cmp
fldt
or
cmp
adc
sub
leave
cli
aaa
jo
int
push
enter
inc
jns
repz
popa
add
repz
sti
xor
in
cs
pusha
pop
inc
ss
dec
in
aaa
dec
inc
sub
scas
ret
inc
aad
into
shlb
clc
cs
adc
shl
adc
cwtl
into
jns
enter
in
and
push
adc
andl
pop
mov
bnd
stos
add
or
sub
test
ja
hlt
mov
mov
mov
adc
sbb
les
insl
nop
or
jns
inc
inc
pop
pop
repz
mov
pop
mov
dec
mov
aas
inc
hlt
call
popf
mov
stos
icebp
shll
cld
insl
lods
lods
mov
xchg
icebp
mov
bound
ds
sub
out
cmpsl
sub
pop
sahf
mov
xchg
pop
mov
in
jne
in
jle
inc
in
daa
pusha
lret
clc
add
jmp
and
jp
lcall
sbb
stc
xor
inc
lds
call
sahf
stos
leave
inc
xor
cmp
shlb
stos
hlt
push
xor
sbb
xchg
cmp
cmp
pop
add
rol
mov
mov
stos
sets
push
sbb
inc
cltd
cmpsb
movsl
pop
cmp
test
jg
repz
and
pusha
scas
xor
icebp
pop
gs
imull
mov
aam
sub
adc
cmpsl
sbb
ljmp
data16
ret
scas
cmpsl
pop
idivb
mov
inc
insl
bound
cmpsl
xor
imul
rorb
ret
xchg
icebp
aam
cmp
mov
fsubrl
pop
pushf
push
push
push
mov
cmpb
mov
pusha
mov
nop
sbbb
nop
stos
and
mov
xchg
sub
mov
or
rcrb
inc
fldt
mov
aas
xchg
fldcw
cmp
mov
push
jmp
and
lahf
dec
add
xor
out
mov
out
jnp
cli
add
dec
arpl
data16
mov
retw
addb
rcrl
and
xchg
fwait
adc
and
jmp
inc
jo
cmp
movsl
push
xchg
in
push
sbb
or
enter
lds
dec
es
lock
mov
fsubl
rcrl
lds
mov
sbb
stc
adc
sti
icebp
stos
jb
push
mov
inc
lret
lds
in
fimuls
jbe
mov
jge
mov
sub
lods
cmp
jno
adc
shlb
pop
cmpsb
lea
mov
popf
xchg
mov
out
jno
xor
ror
pop
sub
or
mov
dec
add
mov
fdivrl
dec
xchg
sub
or
push
adc
lds
jnp
cmpl
sbb
and
cmpsl
sbb
pop
mov
sbb
adc
jne
add
add
pop
jns
sbb
insb
call
inc
lahf
xlat
pop
or
cmp
cmp
sbb
xor
jbe
sbb
lret
lods
insl
or
push
sbb
iret
xchg
loope
dec
lcall
sar
jp
rcll
gs
ss
mov
jg
nop
outsb
loopne
mull
push
call
add
fnstcw
cltd
ds
or
rcll
xchg
sbb
add
xor
lcall
xor
aad
paddd
lea
icebp
dec
dec
xchg
pop
mov
cmp
mov
push
push
lock
xchg
jmp
test
mov
add
ret
add
sbb
pop
stc
repnz
into
insb
pop
fwait
adc
push
and
leave
push
lds
mov
push
mov
test
inc
pop
call
inc
fidivl
jg
dec
sbb
xor
cmpb
das
xchg
mov
fisubs
xchg
das
push
push
jg
lods
jns
mov
jg
xor
ret
ss
cwtl
stos
pop
jmp
mov
mov
pop
cmp
jge
ja
ret
jl
lahf
or
or
jmp
jg
mov
ja
lret
repnz
cs
stos
pop
mov
es
icebp
out
xchg
and
decl
push
mov
xor
and
or
dec
in
cld
xchg
bound
add
inc
sub
cwtl
cmp
mov
leave
call
and
mov
subb
add
fs
nop
pop
insl
add
mov
push
lret
fdivr
and
sar
mov
test
dec
jge
mov
jno
sahf
mov
int3
cmpsl
push
add
jo
loope
test
mov
cltd
jbe
push
or
push
out
and
add
or
mov
test
mov
pop
iret
fdivs
jmp
sbb
test
flds
mov
pop
test
add
add
xlat
negl
jp
scas
out
pop
in
inc
repnz
or
sbb
sarl
dec
push
xor
lahf
lods
xor
orl
rcrb
imul
xor
stos
mov
mov
jnp
pop
and
scas
lods
mov
movsl
pop
mov
add
mov
insl
mov
inc
push
fstpl
lods
cmp
insb
insb
je
sub
lret
push
sti
xchg
cmp
loope
scas
loope
test
sarb
push
hlt
jnp
xlat
xlat
dec
mov
add
mov
fs
or
push
test
xchg
vxorps
bound
addb
xchg
rolb
cmp
and
adc
mov
jmp
loopne
scas
cwtl
mov
mov
test
jmp
inc
in
mov
imul
cmpsb
lret
dec
stc
sub
jno
jmp
jge
std
mov
push
and
pushf
in
push
jno
mov
ljmp
xor
enter
sbb
cli
sahf
cmc
lods
jle
outsl
shll
xchg
push
sbb
xchg
fldenv
jg
jle
repz
pop
mov
lcall
adc
mov
fldl
insl
add
adcb
cwtl
cmpsl
jle
xchg
sub
xchg
hlt
dec
pushf
je
mov
sub
push
shll
sahf
xor
das
jl
or
lcall
jle
andb
push
mov
dec
add
std
sbb
stos
add
out
and
xor
shrl
push
sbb
or
and
xchg
cld
jno
cli
or
out
pop
sbb
addr16
sbb
shlb
xchg
jecxz
sub
fldenv
dec
pop
xchg
jo
mov
and
sub
mov
in
ror
jns
fcompl
in
mov
aas
xor
cmp
cs
je
add
cmp
mov
scas
mov
mov
outsl
cmp
aas
add
push
xchg
pop
insl
pop
in
inc
or
cmpsl
shrb
aaa
je
cmp
nop
dec
repnz
xchg
test
test
fisttps
xchg
inc
cmp
mov
in
enter
ds
std
adc
push
int
enter
cld
push
out
inc
xchg
sbb
xchg
cmp
loop
pop
bound
adc
mov
or
mov
inc
mov
xchg
clc
jo
sbb
outsw
sub
and
rolb
sbb
sub
cld
add
loop
ret
xchg
dec
xor
scas
xchg
sbb
shrl
add
cmp
xlat
ss
mov
ds
and
sti
clc
jb
cmp
jo
icebp
push
xor
inc
push
arpl
sub
push
cmp
jb
gs
ja
and
cmp
mov
lods
pop
dec
cmpsb
mov
mov
mov
inc
push
add
sbb
sbb
push
pop
pop
arpl
sub
dec
push
pushf
jnp
sbb
and
ljmp
negb
mov
push
dec
sbb
mov
push
push
dec
push
sub
fidivl
pop
test
add
ret
es
shll
int
mov
or
js
cmp
sub
push
lret
mov
push
cmp
fcmovnbe
ret
or
mov
mov
and
push
ja
roll
push
into
ja
mov
outsb
xchg
gs
test
and
int3
jge
jnp
leave
cwtl
test
call
and
mov
imulb
and
xchg
hlt
lock
out
lock
out
js
xchg
jl
sbb
jnp
clc
pop
das
or
mov
xchg
popf
mov
xchg
cmp
mov
es
dec
in
jg
je
dec
icebp
jne
rcrl
push
inc
inc
and
or
or
or
lods
dec
sbb
pop
mov
clc
sbb
int
xchg
enterw
in
bound
mov
pushf
pop
xor
mov
aas
mov
stos
inc
ficomps
lods
sbb
push
add
hlt
dec
or
fdivrl
sbb
adc
nop
mov
inc
xor
or
jmp
std
mov
sub
shl
add
pop
popa
movsl
movsl
std
lahf
push
fnstsw
sub
push
push
icebp
jno
sbb
xor
push
aad
pop
mov
mov
adc
lods
inc
cmp
iret
jl
lret
push
shr
jae
fxam
jnp
int
sti
xchg
jmp
cmp
pop
fidivrl
lahf
push
push
fstps
shlb
outsb
add
push
loopne
addr16
mov
cmc
jge
lds
mov
pop
jne
mov
mov
push
icebp
cs
jecxz
inc
cmp
cmp
pop
cmp
cmp
in
pop
scas
aam
data16
dec
dec
cmp
xor
fistpl
test
test
mov
rclb
adc
aam
cs
xchg
repnz
sbb
aaa
pop
inc
dec
fisttps
sub
rcrb
xchg
cmpsb
push
jb
loop
nop
aad
insl
test
js
inc
jo
mov
outsb
xchg
test
mov
pop
adc
scas
pushf
xor
shrb
dec
mov
cmp
sbb
sbb
fsubs
clc
cmpsb
or
pop
fiaddl
sub
lods
or
int
mov
cmp
leave
push
xor
repz
out
nop
xor
sbb
test
adc
lock
sbb
xchg
sti
mov
lret
push
stos
and
inc
xchg
mov
pusha
add
or
repnz
loop
and
jno
fsubs
add
push
add
push
or
rcrb
ret
add
xor
mov
jns
and
mov
imul
xor
ss
add
mov
xchg
jmp
mov
addl
test
loop
sbb
push
test
popa
sbb
lods
pop
dec
fdivrs
adc
xor
xor
xor
inc
inc
dec
popf
aas
xor
push
sbb
cmp
in
mov
jmp
out
mov
jle
sub
shrl
inc
sub
pop
sbb
or
je
xor
jne
mov
lea
inc
adc
mov
test
sahf
imul
inc
cmp
add
test
iret
lods
int3
rolb
dec
stos
adc
inc
dec
fisubs
mov
and
lock
lock
inc
hlt
lods
call
orl
pop
mov
call
sar
jae
xor
cwtl
adc
jl
pop
jno
orl
cli
faddp
or
pop
lea
mov
cs
je
sbb
jge
imul
or
andb
adc
fdivr
mov
jno
in
cwtl
and
add
int
and
xchg
adc
popf
ja
out
push
xchg
cmp
pop
xchg
push
imul
sub
jge
mov
test
movsl
or
aas
mov
fwait
or
repnz
adc
ljmp
incb
xchg
mov
xor
es
mov
xor
xchg
mov
pop
push
mov
xchg
sarb
sahf
pop
outsb
jnp
jmp
pop
int
inc
addb
dec
or
rcl
pop
cld
push
sbb
lods
add
push
adc
scas
int
mov
je
fcompl
lret
push
dec
jae
dec
inc
outsl
xchg
push
fimuls
sarb
pop
pop
push
dec
das
mov
push
and
push
mov
sub
cmp
arpl
cmpsb
or
cmp
adc
loopne
loope
mov
pop
cmp
inc
mov
jle
pop
mov
pop
movsl
jge
cmp
mov
test
outsl
popf
iret
mov
xchg
mulb
sbb
push
pop
scas
dec
jge
ficompl
push
cmpsl
ja
out
jg
mov
test
lcall
fstpt
enter
pop
bound
scas
cwtl
pop
int
movsl
jle
push
jbe
ja
xchg
stos
incb
mov
inc
sub
xor
in
and
mov
arpl
fs
daa
ss
inc
dec
xchg
icebp
pusha
push
push
filds
ss
aam
push
inc
popf
jp
or
fwait
call
fbld
int3
les
cmpsb
fisubs
or
in
out
add
ficoml
lret
in
cmp
xchg
stos
add
stos
xchg
cmp
aam
inc
xchg
in
jl
mov
pop
jg
test
jo
pop
jle
lock
push
xchg
inc
fs
dec
add
stc
loopne
cwtl
jl
jo
out
insl
lods
cmpsb
inc
mov
push
sbb
pop
mov
nop
cmpsb
push
les
adc
lsl
xchg
inc
imul
sbb
psignw
stos
int3
cmp
pop
aad
in
sub
pusha
int
cwtl
pop
out
mov
or
push
loop
mov
imul
xor
ds
adc
cs
dec
mov
ljmp
shr
pop
mov
inc
jno
out
sub
sbb
push
jg
cs
adc
mov
pop
mov
lods
lea
xchg
in
pop
jecxz
cmp
pop
pop
sbb
cmp
mov
mov
pop
cmpsl
loope
or
jno
mov
pusha
push
test
testl
jle
lret
mov
adc
popa
inc
sub
sbb
mov
cs
jne
push
je
leave
xor
pop
loop
pop
inc
jle
aam
enter
in
sbb
lods
cmpsl
xor
mov
lock
dec
dec
out
mov
lret
loop
pop
xorl
imul
mov
call
inc
in
xchg
dec
add
xchg
pop
mov
mov
sbb
jge
rcll
xlat
repz
sub
test
or
je
cmp
jb
or
aad
cmc
hlt
in
jl
cmpsl
push
cltd
addb
clc
and
lods
mov
imul
test
lret
mov
xchg
and
stc
xor
xchg
leave
pushf
cmp
dec
sbb
gs
fbld
cwtl
xor
push
dec
fistl
dec
pusha
ret
add
into
and
add
int
inc
and
ret
or
addr16
push
jo
lcall
pushl
mov
sbb
fidivs
xchg
inc
mov
aad
inc
mov
xchg
sub
dec
movsb
cld
fsubrs
pushf
sub
cwtl
fldl
pop
mov
or
pop
and
movsb
popf
and
cltd
push
xchg
shld
pop
adc
cmp
pop
jb
pop
jle
mov
add
cmp
adc
test
cld
mov
scas
popa
jno
movsb
fadd
in
dec
movsl
dec
jbe
jmp
in
jbe
cmp
xor
int
das
ret
mov
xchg
xchg
outsl
fdivr
aas
fucom
mov
imul
inc
stos
in
movsl
push
xor
adc
xor
aas
das
sub
mov
jno
pop
andl
je
xor
lock
jle
stos
lcall
xchg
stc
or
lea
in
mov
jmp
inc
jo
inc
lds
leave
stos
inc
xor
cmp
sub
jb
repz
enter
adc
pop
push
jg
lret
push
xchg
and
mov
xchg
push
add
xchg
mov
sub
icebp
pop
subl
add
push
xchg
dec
mov
cs
popf
ret
test
and
sbb
dec
shll
xchg
data16
aaa
pop
cmc
mov
movsl
pop
rcrl
adc
nop
sub
pop
and
cmp
mov
mov
sbbb
cmc
and
mov
icebp
loop
call
adc
fs
and
incb
jne
cwtl
dec
fs
cmp
je
mov
stos
mov
les
das
stos
out
pop
jno
push
fistpl
hlt
or
sub
pop
test
loopne
rolb
xor
xchg
dec
lea
aam
mov
in
or
popf
adc
xlat
adc
sub
jbe
loop
or
inc
rcl
sti
fisubl
mov
out
add
jbe
push
fstps
lret
lea
mov
into
shl
adc
enter
mov
gs
rorl
cmp
sbb
inc
push
imul
movb
loopne
cmc
xor
cmp
mov
daa
subb
cmp
xchg
push
scas
mov
push
dec
icebp
shrl
adc
imul
jae
dec
lods
pop
addr16
cmp
dec
stos
mov
or
mov
lea
xlat
xor
hlt
xor
pop
and
leave
jl
mov
cmc
rol
sub
and
aad
stos
out
sub
jle
sub
mov
lods
aam
arpl
mov
cltd
push
filds
mov
jnp
sub
decl
loope
lcall
jo
sbb
pushf
shrb
add
sbb
xchg
cltd
fists
push
add
mov
inc
cs
lret
movsb
movsb
pusha
addb
cmc
xchg
insl
ds
xchg
push
sbb
and
xlat
mov
or
lea
icebp
loopew
push
xchg
iret
mov
inc
mov
rcll
mov
dec
xchg
cmpsb
insb
cmpl
test
pop
test
fdivrl
cmp
mov
popa
mov
and
jg
jne
cmc
adc
cwtl
inc
das
and
add
jnp
arpl
popa
shr
in
xlat
sbb
fucom
mov
ds
shll
lds
jno
sub
xlat
cs
sub
or
cmp
pop
push
mov
in
fldenv
or
jmp
jg
xchg
pop
mov
push
lods
jge
push
loope
mov
frstor
sbb
jae
cmp
sbb
jnp
lds
shrl
cwtl
fcompl
mov
and
adc
inc
add
push
lock
hlt
lcall
test
stos
imul
bound
arpl
dec
or
mov
scas
ret
popa
xchg
adc
pop
out
jge
popa
xchg
rcrl
xor
xchg
pop
ficomps
mov
and
pop
mov
les
les
cmp
sti
xchg
repnz
cmp
scas
outsb
mov
or
repnz
xor
aaa
leave
pop
jp
fwait
cmpsb
mov
sbb
inc
inc
inc
xlat
mov
and
jno
fldt
popa
add
out
js
gs
cmp
mov
push
xor
scas
mov
xchg
sub
mov
push
add
mov
add
cmpsb
or
mov
mov
jae
inc
jb
jbe
daa
insl
mov
repnz
xchg
scas
jo
pop
repnz
in
mov
jecxz
pop
les
test
adc
int
jae
das
movsl
inc
mov
adc
movsb
lret
adcl
mov
sbb
mov
cmpsb
lcall
jb
jmp
cld
adc
jb
xor
in
mov
shll
aad
push
in
adc
xor
or
stos
xor
lret
rcll
sbb
inc
mov
movsb
xlat
dec
inc
pop
pop
das
in
cmc
xlat
shlb
js
arpl
enter
fsubl
cmc
jp
es
loope
add
gs
inc
outsl
loopne
jno
fstl
jle
loopne
or
leave
stos
es
mov
jl
adc
mov
rol
shll
clc
dec
fwait
js
push
xchg
dec
mov
jp
sti
mov
std
daa
insb
iret
shll
and
or
lock
cltd
cmpsb
test
ret
loop
lcall
mov
cmpb
adc
push
add
push
add
xor
jg
fdiv
rorb
scas
fisttpl
adc
and
sub
ret
sbbb
stc
pop
lcall
sub
lret
jl
addl
mov
jno
cmp
nop
std
dec
adc
jg
inc
lock
cmp
mov
mov
aaa
iret
adc
imul
in
lds
jle
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
jmp
or
aad
mov
sahf
fidivrl
ret
jge
rcrb
jb
dec
push
mov
sti
lahf
leave
push
lahf
test
pop
xchg
daa
pop
aas
es
cmpsb
cmp
std
fs
and
cld
lret
mov
sti
jge
sub
sub
imul
rorl
gs
stos
movsb
or
out
cmp
movsl
int
jmp
inc
cmp
inc
mov
lock
dec
push
sub
adc
push
xchg
jne
sbb
inc
cld
lret
xor
es
sbb
inc
insb
jbe
mov
mov
xchg
xor
xchg
mov
mov
mov
mov
jae
jno
xlat
adcl
pop
hlt
flds
lcall
icebp
cmpsb
xor
add
pusha
idivl
cmp
ljmp
es
cs
mov
jg
mov
cmp
fsubrl
add
cld
jo
mov
push
out
pop
jnp
mov
rolb
inc
jl
and
add
cmpsl
pop
mov
xchg
addr16
dec
ret
jmp
dec
imul
xchg
cli
inc
rclb
jns
insb
jmp
inc
mov
fldl
fdivl
xor
inc
roll
fwait
or
je
call
nop
and
popa
jbe
add
xchg
or
aaa
test
mov
ror
imul
jmp
mov
xor
adc
push
mov
shlb
sub
fistpll
push
scas
pop
dec
push
jbe
lods
hlt
mov
xchg
xor
ds
mov
lret
es
repz
sbb
and
pop
cmp
std
inc
jno
mov
fldl
orl
mov
xor
mov
inc
in
push
push
pop
lret
popa
mov
or
mov
loopne
pop
pop
movsb
mov
push
push
mov
pop
sbb
test
ja
mov
xor
xchg
movsb
mov
dec
cwtl
repnz
addr16
xor
pop
sbb
stc
mov
inc
test
out
mov
or
cmc
nop
or
daa
dec
inc
ficomps
or
sub
lahf
in
adc
pmullw
xchg
adc
pop
jne
mov
xchg
and
add
jno
aam
adc
push
lret
jp
movsl
fstenv
popa
testb
add
mov
shrl
xor
and
pop
adc
pop
lahf
cwtl
lock
pop
or
fidivl
push
ret
cs
lods
movl
cwtl
mov
lds
scas
ret
and
out
cmpsb
xor
loop
stos
xchg
test
jmp
in
orl
mov
scas
stc
ja
add
sbb
sahf
xor
xor
mov
in
dec
xor
lret
or
sbb
ss
sub
jge
sti
jo
movsl
mov
testl
in
inc
xchg
jbe
push
sbbl
or
in
sbb
dec
stos
movsb
mov
dec
in
lods
sbb
dec
or
sub
lret
loopne
dec
mov
pop
popa
and
sub
or
loope
dec
adc
and
xchg
or
pop
push
rcll
dec
mov
pop
push
insb
add
arpl
push
push
push
and
xor
fwait
movsl
pop
jnp
daa
push
and
clc
pop
fidivrl
lds
and
inc
fisttpll
push
repnz
xor
and
scas
imul
dec
lock
shrl
pop
stos
jb
inc
roll
adc
movsl
nop
mov
loope
clc
pusha
lods
sbb
lahf
shl
mov
dec
fidivrs
jl
mov
pop
test
mov
sbb
imul
std
xchg
or
das
cmp
jl
push
sub
xor
sbb
and
mov
xlat
sub
jns
sbbl
imull
cli
jecxz
mov
add
and
sbb
jp
xor
insb
lods
xchg
fisubrs
lcall
loopne
inc
sub
ja
adc
cmpsb
ja
mov
in
add
aam
mov
stos
fs
in
xor
adc
aaa
pop
shrl
sbb
insl
mov
xchg
sub
xorl
and
imul
sbb
mov
mov
mov
jp
insl
fisttps
shl
ds
inc
popf
push
mov
mov
pop
loop
std
push
jmp
popf
nop
les
dec
sbb
pushf
es
iret
and
lret
or
xor
bound
cmp
notb
in
fidivl
shll
pop
sub
scas
pop
and
jns
sbb
test
jmp
xchg
aaa
rcl
out
nop
icebp
aam
leave
imul
inc
xor
add
call
imul
xor
div
mov
fiaddl
iret
adc
out
lods
jbe
xchg
sub
or
and
add
popl
add
lret
adcb
fstpt
dec
adc
icebp
inc
and
jae
leave
loope
stos
icebp
dec
adc
imul
or
imul
mov
mov
inc
dec
nop
add
dec
hlt
push
cmp
jae
mov
mov
in
sbb
adc
xor
xchg
je
pop
aas
push
xchg
mov
inc
add
out
stc
mov
xchg
in
mov
fldt
lret
pusha
xchg
mov
addr16
xlat
insl
fcmovne
add
dec
add
mov
jae
fcompl
test
xor
or
lret
aad
and
or
jmp
loop
les
jecxz
movsb
loop
add
movsl
sbb
adc
pop
out
jno
mov
xor
xor
mov
fcomip
mov
inc
popf
sbb
fsubl
sbb
dec
and
shrb
or
pop
test
mov
das
arpl
push
imul
leave
add
les
jecxz
fldcw
jo
cs
bound
fildll
sahf
mov
push
add
dec
push
lcall
std
cltd
push
dec
lock
std
and
sub
gs
in
cmpsb
addb
pop
les
and
fistps
sub
repz
mov
and
or
in
mov
xchg
jg
push
outsl
push
loopne
faddl
stos
cwtl
call
mov
mov
mov
sbb
movsl
pop
mov
push
cs
mov
into
adcb
out
aam
movsb
clc
arpl
and
test
scas
mov
lcall
inc
xchg
mov
pop
rclb
stos
sti
lods
add
pop
inc
into
inc
out
scas
xchg
call
jnp
xchg
movsb
imul
mov
out
jge
pop
xchg
popa
xchg
dec
and
es
lods
pop
fdivp
and
xor
mul
test
sbbb
dec
cwtl
fwait
push
leave
or
xchg
mov
jne
int
sub
bound
pop
push
ja
add
mov
sbb
xlat
sub
insb
mov
out
mov
jl
adc
mov
pop
xor
jns
inc
lahf
inc
gs
and
adc
sbb
repz
cmpsl
jle
xchg
dec
inc
xor
sbb
popf
add
jg
pop
cltd
mov
sahf
sbb
push
loopne
cmp
hlt
push
jle
in
jmp
into
dec
push
imul
daa
inc
addr16
out
cmpsb
imul
mov
in
in
outsl
add
mov
cmp
movsl
mov
sahf
nop
cli
mov
adcb
mov
shrl
ret
jge
pop
xchg
rol
loope
in
je
mov
cmp
insb
mov
ljmp
js
xchg
push
mov
cmp
test
jo
jp
xchg
mov
icebp
mov
xchg
pop
imul
hlt
push
test
adc
js
mov
pop
sub
icebp
insb
or
inc
push
inc
int
xchg
lcall
ret
or
mov
insb
mov
jle
cmpsl
mov
loopne
std
cli
in
sbb
xchg
dec
out
les
popa
fsts
xchg
pop
sub
mov
xor
pop
mov
in
cmp
or
mov
cli
cs
mov
addr16
cmp
and
adc
pop
daa
pop
inc
lock
xor
ds
orb
xor
mov
sbb
jmp
jmp
pop
push
aas
mov
popa
lret
pop
fbstp
or
das
cmpsb
cmp
mov
adc
dec
jo
push
mov
insb
ljmp
nop
sarl
mov
mov
dec
pop
jnp
cmp
mov
jle
ret
dec
mov
shlb
mov
arpl
jnp
mov
ss
xchg
jno
arpl
insb
mov
push
scas
push
and
adc
cmc
sub
add
gs
pop
add
lods
cmp
loope
adc
and
fidivs
xor
pop
pop
cmp
lock
jp
jae
or
push
sub
add
xchg
cmp
call
loope
add
out
movsb
and
cs
loopne
mov
dec
sub
mov
inc
sbb
daa
dec
xchg
pop
or
out
adc
ret
inc
mov
mov
leave
imul
icebp
cld
popa
or
iret
fistps
mov
test
decl
fldl
and
mov
lds
lret
mov
fsubrl
cltd
idivl
out
mov
jp
sbb
repnz
ja
mov
mov
jno
addb
movl
add
adc
and
cmp
mov
repz
adc
cli
testb
lea
fldenv
repz
jbe
add
mov
or
imul
cmp
imul
mov
imul
sbb
jnp
mov
movsl
lods
sahf
sub
dec
dec
fs
jmp
add
pop
cmp
popa
jecxz
sub
xor
mov
int
mov
jb
jns
shll
cmp
lods
xchg
or
into
mov
cmp
or
mov
cwtl
xchg
mov
out
jp
call
or
jns
lcall
je
sbb
adc
pop
push
ficoml
lcall
aaa
roll
add
pop
js
mov
sub
int3
mov
adc
cmpl
add
adc
sbb
mov
xchg
and
inc
and
mov
out
lock
int
out
shll
push
and
inc
lods
test
mov
fsubs
gs
mov
xchg
push
sbb
jo
addr16
jnp
cmp
imulb
xchg
or
stos
inc
mov
les
adc
loope
in
ds
sub
mov
loop
mov
inc
jg
push
fstps
ret
dec
mov
movsl
in
cmp
into
shlb
push
in
repz
lret
aam
mov
lods
imul
shrb
jmp
pop
mov
push
ljmp
xchg
cmp
add
jl
mov
pop
lret
and
outsb
cli
fsubs
sbb
lret
ja
out
fadds
stos
xor
in
add
test
icebp
pop
mov
mov
jp
cmp
lds
jge
emms
mov
jecxz
out
mov
and
jae
nop
in
cmp
dec
lds
cmp
inc
enter
dec
push
push
cli
hlt
xor
and
pop
add
daa
pusha
mov
push
dec
pop
call
daa
adc
xorps
bswap
or
imul
xor
clc
out
jno
sbb
mov
test
fdivrs
mov
pushf
enter
push
stos
mov
inc
stos
mov
cmp
lea
imul
mov
xchg
cmpl
sbb
cmp
inc
pop
inc
js
mov
cmp
cltd
add
inc
lea
pop
adc
dec
push
sarb
sbb
nop
sbb
inc
cld
pop
dec
pop
rcrb
subb
rorl
dec
lods
lock
mov
out
push
pop
inc
stos
cltd
push
aaa
arpl
push
mov
pop
mov
jecxz
into
xor
int3
or
mov
pop
mov
aaa
sub
shr
out
and
adc
pop
pop
sub
in
ss
xlat
data16
mov
add
sub
iret
push
push
or
fwait
or
mov
add
xchg
pushf
stc
pusha
jge
and
jno
or
ss
icebp
pusha
dec
xchg
and
mull
mov
jns
fs
mov
jb
pmulhw
cmpl
cwtl
inc
in
ret
into
lretw
or
or
mov
daa
pop
mov
ret
push
push
rorb
test
in
mov
push
jmp
fsubrs
inc
jbe
jge
iret
aaa
inc
mov
fdivrl
movsb
jo
adc
mov
dec
inc
sbb
sbb
jl
or
push
jns
push
add
shr
enter
dec
and
scas
mov
jae
or
dec
pop
add
outsl
sbb
insl
and
jmp
push
mov
adc
ret
stos
mov
stos
pop
and
pop
aam
cwtl
or
mov
fs
clc
leave
push
sahf
test
push
aam
mov
or
outsb
test
lret
push
sti
into
cmpl
in
lcall
mov
aad
fcoms
xlat
jae
sbb
cmpsl
icebp
fdivrs
shlb
adc
sti
jae
leave
or
mov
movsl
lods
aam
mov
in
cmp
xorb
mov
pop
xchg
scas
ljmp
addr16
fldt
push
pop
movsb
jbe
inc
inc
xor
ret
xchg
loopne
aas
adc
mov
push
cmc
ss
jl
or
cwtl
push
popa
incb
mov
xor
or
or
repz
pushf
jmp
lahf
hlt
sbb
ljmp
mov
and
mov
cmp
lods
div
das
dec
sub
push
std
and
cs
sub
lods
or
lret
pop
scas
pop
icebp
xchg
sub
pusha
shrl
mov
mov
into
pop
mov
cmp
xorl
sub
cmovge
clc
dec
test
mov
jnp
popa
push
lds
sub
xchg
dec
popa
and
imul
xor
das
ret
xchg
sub
clc
enter
insb
mov
pop
leave
scas
mov
jne
jo
sar
out
dec
cmpsl
push
or
mov
mov
jns
adc
sub
in
pop
jmp
adc
stc
push
cmc
pop
in
xchg
pusha
add
hlt
adc
xor
xchg
and
int
xchg
fmuls
push
push
pop
sub
out
mov
cmp
jnp
inc
dec
out
xchg
dec
leave
xchg
push
add
jo
add
sub
mov
lcall
arpl
xchg
fwait
and
cmpsl
push
mov
sbb
cmp
les
or
jae
push
stos
repnz
adc
or
pop
xchg
lods
les
stc
xchg
loop
xor
xchg
jae
push
jp
and
mov
mov
xor
mov
jle
pop
sarl
lock
hlt
popf
jg
pop
daa
mov
xchg
mov
shll
sub
scas
out
jo
adc
adc
jle
push
push
jp
enter
inc
dec
and
add
aad
pop
lods
cmpsb
mov
or
jno
daa
gs
mov
lea
std
sbb
and
into
out
mov
mov
loop
or
cmp
fnstcw
sub
push
mov
xor
jmp
sbb
ds
xor
and
add
imulb
push
adc
cwtl
mov
insb
icebp
push
pop
pop
int3
xchg
sub
scas
stc
xor
inc
pop
jb
pop
in
fwait
test
push
fdivs
mov
je
push
test
adc
je
dec
cmp
gs
pop
jp
inc
sarb
jg
jg
mov
sub
push
int
add
int
ds
xor
call
jo
sub
shlb
dec
mov
lea
jbe
and
roll
jg
movsl
daa
idivl
mov
mov
xchg
lahf
push
mov
xchg
test
incb
pop
sub
mov
sbb
divb
test
lods
jns
dec
out
inc
daa
xchg
ret
jg
testl
pop
test
jle
dec
mov
ja
pop
lock
or
xchg
xor
popa
mov
or
js
fisttps
jo
insl
push
repz
mov
mov
pop
shll
pop
repnz
inc
stos
rcll
push
xor
push
les
sbb
add
movsl
stos
sahf
xchg
cld
and
fadds
cmp
and
mov
nopl
pop
shrb
loop
int
roll
flds
ret
imul
faddl
cmp
cmp
jp
div
push
pop
push
sbb
pusha
add
jecxz
jl
mov
push
lds
cs
pop
mov
fisttps
or
dec
mov
and
sbb
xor
stc
inc
lahf
pop
pop
aad
test
adc
repnz
mov
sti
mov
xchg
out
pop
jle
out
testl
ficoms
scas
int
outsb
pop
push
divl
aam
imul
jge
shlb
daa
fstps
ljmp
jb
jmp
xor
les
pop
aaa
pop
xchg
sbb
outsb
xorb
push
mov
pop
pop
stos
sbb
push
shlb
jo
addb
rorl
mov
lea
rcll
mov
or
push
dec
sub
jns
stc
push
mov
sahf
pop
orl
add
add
sub
fisubrs
add
roll
in
std
xchg
cs
sbb
push
ret
xchg
imul
jecxz
add
and
mov
insb
cli
add
sub
insb
test
mov
jae
mov
push
add
push
test
xor
ljmp
pop
pop
mov
mov
outsl
pop
mov
push
mov
and
aam
cmpsl
push
jnp
scas
dec
and
push
and
push
mov
jge
in
xor
out
xor
push
mov
ss
cmp
ljmp
lock
mov
out
sbb
sarl
sub
mov
stos
fucom
sub
push
and
scas
je
ud2
rep
subl
xchg
or
xor
movsl
cwtl
xchg
clc
outsl
pop
test
mov
movsl
jb
sub
inc
pop
pop
xor
aas
leave
adc
and
push
jp
inc
shll
jge
outsl
and
enter
pop
loopne
pop
inc
sbb
cmp
insl
and
pushf
ds
daa
sbb
pop
xchg
sbb
mov
aad
pop
lods
nop
aas
sbb
test
movsl
ljmp
and
fdivp
cmpsl
shrb
xchg
jl
mov
sbbb
fs
gs
jle
out
movsl
test
cwtl
mov
xchg
lea
ss
inc
out
jecxz
add
dec
in
push
fsubr
jnp
cmp
sub
popf
sub
aaa
xchg
scas
outsl
add
xlat
ja
dec
lea
aaa
sbb
sbb
mov
shrb
test
or
movsb
faddl
ja
or
call
mov
mov
test
lock
ja
lock
xor
pop
loopne
cs
fsubs
inc
mov
leave
jp
adc
xchg
or
inc
or
add
adc
sub
mov
gs
dec
pop
and
and
dec
sub
pop
rcll
cld
cld
shll
mov
ja
outsb
out
and
daa
adcb
push
xchg
sub
gs
cs
mov
pop
gs
neg
in
ljmp
cmc
sbb
jb
dec
cs
ljmp
mov
cmp
add
and
loopne
mov
push
and
jnp
push
or
add
aas
sbb
dec
and
mov
sub
pop
addr16
addr16
test
cmp
es
flds
mov
jae
imul
orl
sahf
mov
mov
cltd
mov
lcall
jbe
shrl
aad
pop
aad
scas
test
jbe
sbb
test
jl
dec
negb
je
pop
inc
cs
mov
mov
mov
jns
daa
mov
mov
and
push
sub
dec
mov
repnz
sbb
sub
xor
adc
ja
mov
jp
call
mov
adc
adc
xchg
sub
sbb
fsubrs
stos
in
adc
cmp
and
cltd
push
mov
gs
xor
push
sub
and
and
pop
mov
mov
mov
loop
fdivrl
cmp
cmc
and
imul
or
lea
push
pavgw
push
aaa
mov
int
pop
pop
sub
daa
cmp
js
popa
outsb
scas
lods
push
loop
sub
loopne
fucom
das
mov
xor
sbb
adcb
hlt
add
test
cmp
lret
rclb
pop
gs
clc
into
dec
adc
sti
jge
push
mov
ficoms
add
cli
das
jns
xor
push
jg
mov
fsubr
xchg
mov
ds
cmp
lods
test
mov
mov
pop
lock
dec
mov
daa
out
mov
int3
stc
sahf
fdivrp
gs
daa
inc
imul
loop
inc
out
push
lock
pop
mov
out
scas
inc
pop
mov
push
ror
mov
fldl
push
sub
test
ret
sub
xchg
cmpsb
adc
pop
sbb
clc
push
push
cmpsb
mov
loop
in
push
cmpsl
out
dec
fsts
mov
xchg
loop
in
or
out
mov
in
lahf
push
lock
jbe
shrb
push
and
test
fcmovb
add
dec
jno
lock
icebp
jecxz
cwtl
lret
in
cmp
mov
ret
inc
repz
call
jbe
fs
fdivrs
adc
roll
xor
inc
xchg
xchg
mov
add
jae
or
rorl
jbe
mov
push
adc
sbb
daa
bound
in
int
adc
in
inc
mov
movsb
mov
add
scas
cmp
inc
das
xchg
and
cmp
mov
gs
mov
lcall
add
mov
jb
aam
xchg
pop
jo
jl
mov
mov
hlt
inc
pop
mov
inc
shr
lea
sub
mov
jb
push
scas
adc
push
cmp
and
cvtdq2ps
mov
sbb
fisttps
mov
cwtl
lret
in
jae
scas
dec
mov
into
push
popa
push
sbb
inc
dec
push
push
mov
mov
push
outsb
mov
adc
mov
push
adc
cmp
sbb
xchg
jge
mov
xchg
incl
insl
push
xchg
mov
inc
fstl
adc
lock
cmp
lret
inc
icebp
fists
out
std
pop
pushf
sub
vmwrite
in
orb
les
addl
std
imul
mov
mov
gs
xchg
xchg
dec
out
cmp
or
add
add
jl
mov
mov
dec
int3
jo
and
or
std
sub
iret
lcall
dec
mov
cmp
inc
pop
sub
std
repz
pop
enter
jecxz
cmp
lds
xchg
inc
pop
adc
pop
sbb
addl
iret
iret
add
data16
jle
dec
sti
pop
mov
adc
mov
test
fisubrl
rolb
pushf
pushf
mov
aad
xchg
add
mov
sub
xor
mov
adc
jmp
stc
idivb
mov
in
lods
lds
shlb
jbe
jno
sbb
pushf
lods
int3
sti
mov
cs
clc
sub
mov
mov
sub
loop
sahf
sysenter
aam
cmp
or
neg
jmp
es
pop
dec
fst
adc
ja
into
xor
aam
hlt
lahf
push
fnstsw
imul
test
ret
je
or
mov
push
push
cmpsb
ja
iret
fisubrl
mov
addr16
cmpsb
lahf
dec
insl
into
or
mov
ret
jmp
in
or
ds
sub
imulb
xor
enter
sbb
cli
xor
popf
sbb
mov
shl
or
daa
fstp
push
mov
bound
xchg
push
fsubl
xchg
xor
adc
addr16
xchg
lds
lcall
push
das
push
cmp
mov
jp
movl
xlat
pop
push
repnz
packssdw
gs
dec
or
dec
xor
arpl
out
xor
and
dec
sbb
push
dec
push
mov
or
out
jo
inc
jg
inc
int
xchg
les
add
adc
xchg
or
dec
int
sub
mov
divb
inc
cmp
ret
rclb
es
fistpl
cmp
and
jo
sub
push
mov
jo
or
dec
adc
and
jae
xchg
pop
and
xor
add
aad
or
mov
mov
add
push
repnz
xchg
push
sbb
adc
cli
lret
inc
test
xchg
cmpsl
cmc
faddl
ljmp
cwtl
cmp
stos
and
mov
aam
push
sbb
in
int
cwtl
hlt
rol
outsl
xor
lock
or
add
aaa
push
sar
ret
mov
in
pop
xor
push
sbb
jne
mov
ljmp
ret
out
shl
pop
xchg
adc
jge
sub
in
adc
add
bound
in
xchg
or
pushf
ja
sub
cld
xor
add
mov
or
ret
dec
aas
mov
xchg
pop
pop
rcrb
jb
sarl
out
ljmp
push
xchg
jmp
gs
pusha
lds
mov
lods
cwtl
imul
loope
aad
mov
fisubrs
cmp
or
lea
or
dec
stc
mov
xor
inc
mov
xor
xchg
subl
pop
jmp
pop
xorb
dec
mov
mov
ror
xchg
push
in
inc
aas
cmpsl
mov
mov
or
addr16
cmp
and
nop
pop
xchg
mov
cmpsb
popf
les
add
insb
sbb
cmpsb
add
sbb
lcall
in
lahf
testb
repnz
cmp
popf
out
xor
dec
es
inc
leave
popf
lahf
rolb
jno
call
dec
ret
push
ficoml
sbb
aad
xchg
mov
xor
adc
mov
fmuls
addl
insb
inc
adc
pop
into
mov
adc
and
xchg
mov
mov
cs
mov
iret
sbb
and
stos
xchg
fs
je
adc
out
adc
jbe
fs
ret
jle
mov
jmp
shlb
test
daa
sub
loop
adc
adc
push
push
scas
add
fnsave
into
adc
enter
daa
lds
cmp
mov
adc
test
jo
scas
fwait
cli
gs
cmpsb
or
lock
imul
adc
xor
pop
fldenv
loop
jecxz
ret
cwtl
leave
pop
xchg
inc
std
sub
push
inc
subl
sbb
or
cmp
fisttps
add
into
cwtl
mov
add
lret
out
push
sbb
push
dec
jp
adc
decl
cli
loope
test
fstl
jae
mov
mov
sub
pop
testl
xor
sbb
jg
and
pop
and
push
ret
shl
mov
and
nop
sub
push
in
call
push
cmp
sub
ss
fsubrs
scas
lret
xchg
and
xor
inc
wrmsr
andl
jg
fisubrl
mulb
jmp
stos
sarl
mov
inc
jae
out
mov
sarl
pusha
and
jne
push
movsl
mov
mov
insl
iret
lret
push
cwtl
mov
jmp
mov
inc
popa
push
popf
sti
and
dec
inc
xchg
push
hlt
jg
sub
jle
gs
fmull
cmpsl
fwait
mov
rcrb
lods
push
fwait
dec
fwait
add
xchg
inc
jmp
cmpsb
fisttpll
add
mov
jge
in
xchg
sub
adcb
push
addb
iret
push
cli
mov
ja
lock
sub
mull
lret
pop
jecxz
sub
arpl
jl
mov
and
into
mov
mov
lds
adc
jnp
jecxz
jg
push
xchg
cmp
jmp
out
clc
fldl
xor
andb
out
or
lcall
jl
inc
and
hlt
jl
xor
into
xchg
push
jmp
shl
int
pop
loop
inc
mov
daa
jle
int
je
icebp
es
jge
pop
mov
push
sub
insl
jbe
and
jmp
in
xchg
sub
mov
das
int
js
mov
adc
mov
jmp
inc
dec
stc
psllw
fimull
mov
sbb
add
mov
mov
ja
mov
pop
cltd
test
cs
jle
mov
fmul
js
cli
into
std
push
and
mov
insl
or
pop
aam
stc
stos
push
ret
mov
jp
testl
fwait
or
fs
push
inc
jne
lret
push
xor
fidivs
or
push
int3
cmpsb
mov
mov
out
aaa
pop
mov
nop
push
andb
std
jnp
push
dec
xchg
cmpsl
aas
addl
mov
in
rol
shl
es
ficoms
push
icebp
ja
xor
mov
pop
xor
test
mov
in
xor
pop
mov
ljmp
cli
mov
push
xchg
into
inc
cmp
cmp
fisttpl
arpl
inc
cmc
enter
cmp
inc
fisubl
add
lahf
sbb
xchg
xor
imul
dec
jp
bound
mov
jl
jle
jnp
add
ret
jns
frstor
or
leave
icebp
cwtl
adc
mov
sbb
sbb
push
imul
adc
push
js
bound
test
add
idivb
inc
mov
pusha
add
sbb
and
mov
inc
fwait
lock
push
rcll
mov
add
cmp
jge
cmp
push
clc
push
das
in
push
dec
pusha
in
dec
negb
adc
sbb
faddl
xchg
push
sbb
jg
into
jae
andb
clc
mov
sub
jnp
push
jmp
ja
lahf
lret
jg
shrb
outsl
in
lcall
and
pop
int3
fildll
push
mov
mov
push
or
rolb
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sbb
xrelease
push
mov
aaa
mov
pop
xor
rcrb
jb
mov
jge
mov
xchg
sub
insb
xor
or
idivb
or
and
pop
push
mov
mov
insb
pop
push
push
inc
cmp
add
int
add
out
in
mov
stos
cwtl
sbb
adc
xchg
in
mov
sbb
arpl
scas
cmp
imul
or
out
push
in
or
cmp
xor
and
in
jnp
pushf
jl
pop
sbb
jmp
add
add
jae
sahf
xor
pop
xchg
mov
xchg
or
mov
stos
and
lret
xor
inc
fisubs
lret
and
xchg
lock
jmp
nop
pop
in
rorb
test
hlt
sti
lret
lods
rcr
or
xlat
mov
fbld
dec
test
mov
or
lock
jne
push
insb
shrb
mov
or
out
adc
fcmovu
push
mov
mov
mov
push
lret
and
sub
pop
outsl
aas
pop
loope
lcall
mov
jne
fwait
out
sbb
lcall
stos
cmc
sub
shll
ljmp
ret
in
loope
cltd
dec
add
cwtl
push
aad
cmp
cmp
pop
stos
xor
xor
loopne
divb
mov
movsb
mov
inc
popa
xor
lahf
fucomip
xchg
stos
add
inc
adcl
mov
adc
jb
icebp
ja
pushf
mov
adc
mov
pop
sub
adcb
out
pop
lcall
ds
lea
test
dec
xchg
fadd
imul
aas
data16
mov
add
mov
lcall
pop
cmp
cmp
push
sti
stc
fimull
dec
popf
icebp
push
mov
xor
inc
movsb
pop
xchg
mov
lock
jg
fadd
daa
dec
icebp
jb
aaa
or
fidivrs
or
jae
lock
and
pop
es
cmp
add
dec
jecxz
inc
or
lock
push
out
rorb
jmp
inc
or
jl
ljmp
pop
push
mov
mov
or
lahf
jno
call
xchg
pushf
mov
pop
scas
mov
inc
std
fcmovbe
imull
pop
sbb
adc
and
xchg
adc
or
rcrl
sbb
or
pop
jp
xor
pop
les
aam
mov
mov
pop
mov
and
lods
sub
fs
mov
scas
lcall
es
or
inc
es
out
inc
jbe
fstps
add
dec
in
pusha
in
xchg
push
push
call
sub
jb
or
pushf
push
pop
jg
pop
clc
mov
sbb
scas
ret
test
stos
popa
xor
xchg
loopne
dec
out
das
jns
arpl
inc
in
in
lret
cmpb
pop
mov
loope
cltd
or
sbb
push
cmp
adc
fnstenv
pop
es
into
jno
xor
adcl
jge
scas
xor
xor
ret
shll
or
jge
and
mov
leave
insb
pop
mov
and
sub
fidivl
cmp
mov
sub
mov
fwait
cmpps
dec
cmc
sub
xchg
hlt
fcmovu
pop
sub
xchg
cld
lea
cmp
stc
scas
dec
loop
mov
cmp
notl
push
and
xor
pop
jbe
cld
je
cmp
in
into
xchg
push
and
cld
sbb
push
in
jo
in
cli
jbe
gs
or
and
lods
mov
xor
push
adc
jb
push
and
test
inc
adc
dec
mov
xchg
inc
mov
ffree
repnz
mov
xlat
rcll
sbb
rorb
jbe
pop
inc
mov
xchg
xlat
xor
adc
pushl
mov
push
repnz
mov
xchg
sahf
dec
and
jno
fwait
xor
nop
mov
inc
pushf
into
dec
mov
cmp
sub
ljmp
int
mov
loopne
dec
mov
mov
mov
or
sar
dec
jp
jge
push
xorl
stos
fcomps
roll
sub
in
in
enter
and
scas
sub
or
jbe
adc
add
inc
sub
out
mov
or
stos
jae
mov
mov
or
push
aad
sub
lods
leave
xor
jo
fsts
and
inc
dec
xor
sub
jnp
and
sti
loope
jecxz
ret
dec
cmp
pop
nop
or
mov
test
daa
dec
test
jae
pop
mov
aam
mov
loopne
fldenv
sbb
popa
mov
and
mov
nop
pushf
lock
fmuls
lock
fcompl
das
movsb
adc
sub
fs
dec
add
inc
sbb
push
dec
cmpsl
test
lods
pop
push
adc
rcrl
jne
dec
mov
cwtl
dec
and
xlat
sbb
mov
mov
add
push
lea
jno
jle
add
or
sub
sbb
cmp
ret
stos
jl
shll
out
test
imul
dec
push
adc
arpl
lods
pushf
xchg
cwtl
or
push
inc
xor
outsb
cmp
xor
push
jle
daa
dec
sbb
mov
test
mov
or
pop
pop
mov
xchg
mov
push
xchg
xor
sbb
fmul
insb
adc
cwtl
enter
aad
pop
pop
dec
jnp
sub
pop
jmp
lods
daa
xor
dec
jo
jbe
cmp
insl
fwait
xchg
mov
and
sub
or
dec
ret
xchg
mov
in
dec
test
aaa
mov
shlb
or
addl
adc
fsubr
jge
addr16
inc
jmp
shll
loop
enter
mov
pop
or
jbe
push
cs
cmpsb
cmpsb
iret
out
cmp
addb
push
insb
mov
shrl
fcmovnu
jle
aam
div
xchg
lods
add
cld
data16
fstpt
add
xchg
mov
adcb
pop
push
dec
pushl
sti
push
sbb
out
aam
fisubl
pop
jmp
jo
push
imul
push
rorb
stos
cli
inc
mov
adc
mov
subb
insb
push
shl
xchg
pop
aas
sahf
aad
mov
out
ficoml
jge
pop
add
lods
mov
jb
jecxz
mov
imull
inc
mov
inc
lahf
in
cmp
mov
ss
push
lret
pop
mov
shl
shrb
sbb
flds
incl
sbb
outsl
dec
dec
aaa
shl
xchg
sub
add
push
xchg
incl
jae
jbe
test
mov
cwtl
sub
xchg
negb
dec
pop
test
cltd
adc
pop
jb
or
scas
cmpl
ss
in
sub
lret
popa
faddl
cmc
enter
in
pusha
xchg
or
mov
sub
testb
scas
and
mov
xchg
int3
mov
xchg
sbb
ret
jno
jg
lahf
xor
or
int
movsb
ja
stc
jle
mov
stos
sarb
sahf
mov
mov
rorl
dec
outsl
fs
add
add
outsb
sarb
ja
push
xor
lods
add
arpl
aad
ss
adc
push
mov
test
clc
repnz
or
mov
cmc
cmp
push
shrl
outsl
xchg
add
xchg
fwait
loopne
jl
sar
stos
scas
ds
cmp
pop
rcrb
stos
fnstsw
js
xor
lret
cmpsb
iret
loope
int
out
jae
mov
ds
outsb
sub
into
inc
mov
notl
push
scas
shlb
cmpsl
pusha
push
mov
dec
out
mov
or
inc
mov
test
cmp
ffree
mov
sbb
lock
jge
rcl
push
jp
scas
mov
mov
out
xchg
sub
inc
add
mov
push
pop
adcb
mov
ljmp
sub
dec
jae
pop
add
imul
pop
bnd
push
push
adc
jbe
rorl
fimuls
fmul
stos
fdivs
jmp
mov
cwtl
dec
test
arpl
test
sub
mov
xlat
imul
in
xor
inc
pop
mov
cmp
cltd
fimuls
leave
stc
lds
aam
push
scas
adc
push
add
jmp
or
rorb
or
jbe
mov
sbbb
sbb
mov
xchg
mov
mov
push
sti
cmpb
loopne
add
cli
repnz
adc
or
mov
scas
leave
or
js
iret
ret
jecxz
or
inc
xchg
mov
xor
lods
test
ficompl
ret
sbb
or
mov
dec
sub
cmpsl
fnstsw
lods
les
cli
pushf
addl
outsl
outsb
and
insb
aam
jl
jp
ret
add
ja
not
jno
push
cli
shll
dec
lcall
ficompl
adc
or
mov
sar
rcrl
dec
xor
test
xor
inc
seto
imul
jb
aad
into
and
adc
jns
and
ss
fcompl
nop
mov
cmp
cmpsb
lea
test
mov
fcmovb
cmc
ss
sub
imul
les
sbb
add
int
mov
cwtd
test
pop
or
xchg
cli
xchg
add
inc
dec
mov
in
cmp
aad
test
mov
jl
fs
mov
push
lock
mov
mov
xor
daa
pop
nop
ret
fcomps
lahf
jle
aad
mov
xor
in
and
inc
sub
mov
into
clc
pop
mov
int
jns
inc
aas
lcall
sbb
xchg
cmp
rorb
into
test
jno
pop
mov
jmp
jle
aad
lods
mov
jecxz
repnz
shll
mov
mov
cltd
test
shlb
jb
pop
movsb
adc
bound
hlt
pushf
push
push
dec
incl
pop
leave
call
sahf
bound
mov
jae
ss
push
sbb
and
mov
xchg
xchg
jns
jb
out
orl
test
iret
iret
daa
jbe
mov
addr16
or
inc
or
cmp
cmp
or
mov
je
xor
jg
fisttpl
shll
add
adc
dec
cltd
and
mov
xlat
pop
sbb
add
hlt
cld
or
pop
lcall
ret
sarl
aas
or
sub
decb
sahf
lock
jecxz
ret
sub
cli
or
das
jno
dec
pop
jne
sub
xchg
and
int
imul
xchg
mov
mov
sbb
and
add
rep
sti
cmp
pop
jle
pop
lds
out
cmp
shr
mov
pusha
cmp
scas
movb
dec
test
loope
inc
lret
sub
cmc
or
lret
xorl
in
fbstp
xchg
sbb
es
xchg
dec
call
into
nop
test
mov
add
nop
push
idivl
xor
cmp
mov
dec
sbb
mov
xchg
push
cltd
pusha
out
loopne
loop
test
popf
adc
arpl
lds
cmc
dec
sub
pop
test
and
aaa
mov
mov
add
jg
lock
movsl
or
cltd
lock
push
repz
hlt
gs
jmp
cltd
xlat
in
lods
shll
ss
jb
xor
pop
xchg
bound
xor
jp
loope
mov
in
mov
mov
scas
das
or
or
stos
lods
sub
or
jle
pop
adc
jo
jge
sti
or
jae
iret
jns
mov
mov
cmp
bound
dec
mov
stc
mov
je
mov
test
lods
test
dec
arpl
push
addl
ja,pt
in
lret
mov
fdivrs
add
lds
lahf
or
das
not
or
push
cmp
adc
jb
aad
and
aaa
mov
aad
pop
data16
jno
adc
inc
test
push
adc
and
jge
fst
and
push
scas
rcrb
mov
lods
in
mov
or
cs
int3
mov
shlb
data16
dec
sub
negl
jg
sub
pop
mov
xchg
in
jae
add
pop
adc
and
inc
or
std
or
jge
test
cli
les
shlb
jb
sub
add
clc
pop
repnz
mov
aas
xor
push
sbb
out
push
push
stos
jmp
stc
stos
pop
sarl
mov
ficompl
pop
inc
outsb
mov
ss
fists
dec
push
aam
ret
inc
add
xor
inc
xlat
cmc
mov
dec
js
enter
iret
mov
mov
push
sub
mov
xor
and
divl
stc
arpl
hlt
mov
push
cmpsl
test
or
xchg
jmp
sub
and
push
sub
push
and
clc
lock
cmc
add
test
inc
sahf
push
pushf
repnz
popf
xchg
xchg
mull
out
test
push
les
xchg
mov
push
aaa
std
xchg
sbb
popf
mov
dec
xchg
rcrb
mov
lods
ds
out
dec
pop
lock
int
icebp
mov
mov
pushf
add
sbb
int
stos
imul
iret
push
lods
loope
cmp
fsts
subps
jmp
jno
pop
push
cmp
leave
mov
out
sub
and
lds
xor
clc
mov
ffreep
sarl
mov
or
insl
pop
sahf
lods
nop
imul
pop
mov
jo
mov
add
loop
or
or
or
js
sbb
xchg
push
push
popa
lods
nop
icebp
mov
cmp
rolb
mov
icebp
inc
mov
mov
popf
xor
shll
imul
ljmp
xchg
cmp
or
out
outsl
sub
or
out
arpl
jle
add
movsl
cwtl
lds
push
jge
jno
lahf
out
sahf
cmp
mov
pusha
and
push
or
cmp
mov
xor
inc
sbbl
cmc
movsl
mov
pop
test
fwait
stc
add
jnp
xor
add
pop
cmp
mov
mulb
add
push
jecxz
int
mov
push
movsl
js
jbe
pop
mov
and
sbb
out
orb
adc
rolb
jo
pop
sbb
cli
dec
int3
push
mov
outsl
xlat
imul
lock
add
out
rcr
mov
jmp
roll
pop
xchg
inc
push
or
sahf
push
push
sub
mov
and
stos
adc
mov
push
cmpsl
ffreep
fidivrs
adc
xor
mov
out
inc
fsubrp
gs
stos
ret
adc
or
push
gs
and
adc
cmc
test
dec
push
jnp
pop
push
sub
cld
ret
sbb
es
in
fst
push
inc
lcall
movsl
movsl
xlat
sbb
inc
xor
fs
jge
mov
xor
and
lods
in
je
push
cmpsb
push
lods
les
test
rcr
and
jbe
xchg
loope
sbb
and
cmp
xor
xor
jecxz
jns
sub
popa
icebp
sar
loope
mov
or
lds
push
sbb
adc
pmaddwd
arpl
or
les
and
lods
mov
cmpsb
lret
dec
jl
sbb
xlat
pushf
xor
insb
outsl
mov
dec
into
clc
mov
jle
out
pop
mov
and
ljmp
jnp
fidivrl
sbb
mov
mov
fiaddl
sbb
push
popa
pop
inc
cmp
add
fstpt
fs
ljmpw
push
imul
sbb
push
jmp
repz
cmp
adc
movsl
mov
iret
dec
call
jns
aas
adc
xchg
dec
add
adcl
ret
push
push
inc
mov
cmpsb
or
mov
sahf
push
lds
mov
or
jecxz
sub
imul
push
lahf
xor
or
aas
or
xor
fstpl
cmp
xchg
in
fsubrp
in
fstps
aam
andl
addr16
jg
repz
mov
out
and
mov
shl
xchg
sbb
inc
sti
movsl
repnz
mov
dec
test
rcll
push
adc
mov
pop
movsl
sub
sbb
lret
scas
xor
test
ret
inc
shlb
push
sbbb
pop
fistpll
gs
mov
daa
pop
in
dec
mov
dec
call
jl
xchg
lods
mov
inc
sub
ret
bound
js
xor
shr
ja
xor
jle
ret
call
push
mull
inc
out
into
fisubs
repz
lea
je
push
popf
sbb
xchg
pop
movsl
cmc
push
inc
int3
sbb
adc
aad
mov
lea
xchg
mov
push
xor
loopne
rclb
cmp
xchg
mov
dec
test
mov
aad
icebp
mov
push
shlb
xor
fs
jecxz
test
test
cmp
jl
add
sbb
cwtl
jp
ss
loope
and
bound
and
push
clc
pop
cmp
jp
jp
pop
jae
mov
or
inc
cmp
cmp
and
add
cmp
dec
out
lds
pop
xor
cmpsl
lret
jo
test
fsubrl
jno
es
repnz
jbe
sahf
pop
enter
dec
and
lcall
orl
xor
addl
fstpl
pop
lods
cmpsb
pop
test
outsb
icebp
ret
push
cmp
fisubs
movsl
in
cwtl
out
addr16
cmpsl
mov
cmp
jle
dec
out
pushf
dec
cmpsb
inc
jmp
dec
mov
movsb
les
inc
cli
xlat
addb
stos
cmc
mov
xchg
cwtl
xchg
lods
popa
loopne
mov
mov
cs
jecxz
mov
dec
add
push
add
adc
xor
add
shll
shll
ret
sub
rclb
movsb
or
sub
cmp
mov
fisttpl
lcall
aad
int3
cmc
and
adc
lds
pop
sub
ljmp
cmp
std
pop
arpl
jl
in
pop
fidivrs
mov
or
ror
mov
mov
es
stos
sahf
pop
jno
jbe
arpl
in
fsubl
dec
lret
nop
sub
bound
ret
out
movsb
xchg
jge
xchg
loope
or
out
lods
sbb
addr16
nop
sub
fmuls
inc
ja
push
cmova
sarl
mov
cmpsl
xchg
xor
jb
cs
ds
das
ret
addr16
lock
lds
and
movsl
cmp
or
cltd
push
dec
add
xlat
in
fistps
fadd
push
test
xchg
sahf
imul
or
push
fiadds
in
mov
xor
or
add
sub
dec
xchg
lcall
add
and
je
pop
xlat
or
pushl
daa
out
cld
repz
mov
push
xchg
int3
xchg
test
lea
nop
inc
in
aas
adc
mov
mov
jge
movsl
clc
jmp
sbb
pop
mov
or
fsubrs
or
in
iret
bound
dec
insb
in
inc
dec
in
sbb
jmp
xor
lds
ret
xchg
lods
daa
call
jle
aad
loop
mov
data16
int
int
sarb
and
xchg
pop
jns
and
push
lds
xchg
mov
pushf
sub
movsb
das
mov
testb
xchg
mov
stos
xchg
pop
mov
xor
jno
push
test
mov
xlat
adc
ds
cmp
xchg
push
jb
sbb
mov
mov
or
mov
mov
mov
cmc
xchg
jle
mov
adc
cmc
jl
in
scas
mov
xor
jae
ficoms
xlat
fsubrs
add
sbb
cmp
aam
nop
lahf
inc
clc
sbb
sbb
shll
sbb
lods
es
pushf
jmp
push
dec
inc
cs
lret
jb
pop
fcoms
cmp
insl
sub
pop
sbb
sbb
jge
pusha
dec
fstl
mov
nop
dec
jno
push
nop
test
icebp
mov
pop
lods
imul
pop
push
xchg
add
es
ss
cwtl
or
mov
call
cmpsl
mov
xchg
xchg
bound
add
mov
aas
dec
cmpsl
sbb
lcall
and
inc
inc
jle
jl
nop
sbb
pop
mov
enter
int3
xchg
lcall
aaa
stos
cmp
xor
clc
mov
popf
bound
mov
inc
mov
sbb
push
dec
cmpsl
push
adc
push
mov
nop
dec
mov
mov
jb
sbb
mov
and
decb
dec
wrmsr
adc
testb
gs
jnp
mov
jle
mov
vmovups
stos
add
cmp
jno
jp
cmp
jnp
icebp
andl
add
xchg
push
mov
in
sub
les
or
mov
xchg
lcall
mov
jge
mov
std
roll
aam
repnz
mov
outsb
cld
clc
adc
pop
gs
nop
subb
addr16
lods
jns
mov
daa
mov
js
xchg
jle
es
fidivl
ljmp
std
fldenv
cmp
lcall
testb
fisubrl
int3
jmp
insl
mov
xor
lahf
fisubs
mov
sub
clc
pop
loop
stos
xor
aas
repz
jl
inc
ja
cmp
lock
test
pushf
fimuls
mov
jle
loopne
ret
push
fnstsw
adc
push
push
scas
and
divb
jne
jle
scas
mov
xchg
cmp
insb
mov
jb
fsubp
add
shlb
adc
mov
adc
in
and
pusha
adc
adc
mov
xchg
xor
jg
mov
outsb
outsl
jle
test
out
pop
push
stos
xchg
xor
add
scas
push
pop
cmc
mov
mov
loop
jge
xor
dec
fwait
mov
push
leave
mov
aas
loopne
dec
adc
loope
push
loopne
inc
cmpsb
bound
fisubl
sub
lds
fldenv
mov
out
add
jle
mov
test
pop
xchg
cli
leave
loope
push
das
jbe
enter
cmp
shlb
jno
adc
subb
push
lea
jmp
pop
pop
stc
shr
addr16
outsb
cmp
pop
lds
dec
sbb
mov
and
mov
stos
inc
mov
lcall
es
scas
outsb
stos
loope
lods
cmp
xor
scas
xchg
add
mov
sub
out
inc
xor
pop
outsb
aam
push
rcrb
inc
cmp
imul
pop
mov
push
jecxz
adc
mov
addr16
repnz
pop
in
lock
stc
lds
xchg
repz
xor
notl
xchg
ds
cmpsl
repnz
cmc
mov
fs
cmc
lret
imul
hlt
cs
arpl
push
roll
fists
pop
add
add
outsl
addr16
and
fisttpll
push
pop
or
je
cmc
outsl
daa
sub
mov
sahf
mov
push
cmp
hlt
jb
xor
std
lods
dec
mov
imul
call
and
mov
and
lahf
std
addb
cwtl
movsb
mov
mov
inc
xor
adc
pushf
mov
cmp
push
cltd
sbb
add
xor
stc
testb
jnp
cwtl
fs
in
lcall
push
mov
daa
push
push
ds
clc
sub
shll
inc
mov
mov
fisubs
xchg
insl
and
xchg
sub
mov
cmpsl
pop
mov
in
or
xchg
dec
sahf
outsl
insb
addr16
sub
int3
cmp
dec
mov
sbb
mov
and
inc
sub
rcrb
filds
sbb
and
add
aad
sbb
cwtl
sbb
data16
and
push
push
inc
mov
cmp
xchg
cmp
and
pop
inc
xlat
jecxz
mov
mov
test
cmp
mov
jge
imul
cmp
popf
shll
cmp
cwtl
or
cmp
mov
into
popa
mov
dec
jns
jo
pop
jge
jg
movsl
es
sti
sahf
push
int
lods
mov
sbb
mov
test
das
fnstcw
sbb
ljmp
aad
lock
fistpl
std
and
inc
lods
and
xor
xchg
pop
add
scas
lret
out
subb
mov
inc
jo
std
out
fcoml
insb
addr16
push
imul
cli
push
mov
xor
mov
or
or
xor
lahf
inc
jmp
sub
sub
mov
sub
sub
pop
addb
mulb
inc
sahf
adc
or
cmp
push
mov
push
mov
scas
movsb
mov
gs
or
cmp
inc
cmovae
pop
sub
mov
lret
push
lcall
cmp
and
sbb
cmc
pusha
add
push
push
mov
decb
rcl
or
scas
mov
outsb
gs
dec
fldenv
sub
add
pop
test
int
rcrl
pushf
xchg
sbb
aas
pop
push
insb
xor
into
push
sub
sbb
jno
popf
das
inc
and
pop
pop
mov
out
jno
je
mov
add
xchg
and
ds
inc
fmul
stos
sub
popa
cld
xor
adc
sti
fistpll
mov
mov
outsb
fildl
inc
mov
dec
mov
add
loop
test
iret
dec
xor
test
xchg
aaa
add
aaa
int
and
mov
rcrl
fisubs
push
mov
or
ja
or
jbe
dec
shll
xchg
push
out
sub
dec
push
in
push
push
inc
mov
cli
cmp
arpl
xchg
lods
and
inc
jnp
out
pop
sub
push
push
sbb
xchg
inc
add
iret
gs
push
bound
pop
sahf
in
inc
test
imul
inc
les
jbe
and
and
fcoms
dec
ret
fdivs
popf
int
xor
sub
dec
inc
jmp
lret
push
sub
and
lret
dec
loopne
mov
xchg
dec
adc
push
xchg
and
sbb
out
mov
and
push
rolb
dec
sbb
mov
pop
setbe
mov
stos
sub
xchg
dec
push
and
aaa
dec
arpl
mov
jecxz
stos
push
xor
sub
fs
push
pushf
jnp
add
sub
out
dec
xor
fwait
popl
cmpsb
out
insb
sub
in
cmpsb
add
adcl
mov
xor
sbb
cmp
mov
das
out
xor
sar
jns
jg
lea
jo
cmp
inc
pop
sbb
test
lods
stos
repnz
rclb
int
sbb
cmp
inc
jg
dec
adc
cmpsb
dec
scas
rcll
outsb
jle
cmpb
repz
lahf
xlat
adc
lret
out
addr16
aad
push
push
jb
adc
xor
mov
test
mov
push
xlat
xor
add
rcll
das
pop
adc
clc
or
lock
les
sahf
jg
pusha
xchg
push
insb
mov
and
jmp
inc
pop
std
sbb
inc
ss
adc
dec
xor
test
in
mov
movsb
mov
aad
adc
push
mov
test
sbb
xor
mov
loop,pn
add
add
test
sbb
inc
pop
mov
and
mov
outsb
mov
jbe
cld
dec
fnstcw
lahf
push
leave
roll
in
std
dec
scas
push
iret
aaa
rclb
imul
out
add
mov
jbe
jecxz
gs
sub
sbb
sub
pop
xchg
cld
cmp
mov
adc
cltd
inc
cmp
leave
js
cltd
movsb
mov
push
xchg
xor
lea
sub
mov
outsl
loop
lods
rcrb
shl
sub
shrb
mov
fistps
xchg
jmp
xchg
arpl
jo
subb
mov
and
rclb
lods
outsl
adc
dec
lock
enter
xor
mov
push
add
push
cs
pop
movsl
sbb
lcall
test
add
pushf
push
aaa
cmp
mov
popf
js
xchg
jbe
jecxz
jne
jb
xor
je
lahf
stos
dec
cmp
xchg
shlb
iret
lret
jle
mov
ret
push
ret
movsl
pusha
push
test
jmp
insl
insb
pop
and
lahf
add
scas
xchg
sbb
jecxz,pt
push
lret
pop
movsl
mov
scas
cmp
loop
enter
in
dec
cltd
cmp
in
sbbb
cmp
adc
add
mov
push
cmpsl
rcrb
loop
mov
jbe
push
add
insl
jle
push
pop
mov
add
mov
cmpl
sub
daa
ficomps
int3
out
push
push
sub
push
mov
and
aad
out
sub
subl
xchg
jnp
dec
xchg
or
mov
mov
jo
les
cmpsl
inc
out
or
cmpsb
mov
aad
ljmp
testl
mov
sbb
cmp
test
or
outsb
cmp
cmp
dec
insl
lea
rcrb
or
divps
pop
enter
lret
lods
leave
or
cwtl
in
cli
ljmp
mov
scas
dec
testl
jmp
fs
add
loop
scas
sti
mov
in
into
sbb
xor
sub
les
cli
scas
sysexit
repz
lods
pop
aam
stos
xchg
int3
mov
cmp
fisubrs
lret
lret
out
pop
xchg
jmp
pop
stos
rorb
rol
jle
lret
out
mov
gs
inc
adc
roll
xchg
fdivs
adc
mov
stos
loope
mov
inc
cmp
xor
mov
int3
cmp
sub
mov
jge
sbb
mov
daa
insb
pop
roll
xchg
xor
xor
mov
jb
sbb
mov
cmp
push
pop
add
add
scas
lret
test
dec
or
mov
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
add
add
inc
add
add
or
inc
add
add
adc
inc
add
add
sbb
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
add
add
add
add
add
add
add
roll
add
lds
add
adc
add
inc
add
adc
or
inc
add
adc
adc
inc
add
adc
sbb
inc
add
add
add
inc
push
or
jae
cmpsl
push
dec
adc
mov
rorb
add
dec
outsb
outsw
inc
outsl
insb
fs
popa
je
pop
push
imul
outsb
je
jb
popa
insb
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
adc
ret
ja
pop
movsl
xchg
add
add
add
mov
and
jae
std
pop
pop
mov
imul
pop
xor
xchg
movsl
jecxz
in
cmp
add
cmp
subb
push
cli
aaa
jp
push
test
je
insl
pop
mov
movsb
push
or
shlb
test
mov
stos
sbb
out
mov
insl
push
xchg
mov
mov
fucomp
dec
sti
out
xchg
adc
lcall
push
xchg
iret
inc
fcmovbe
mov
aam
inc
xchg
daa
js
xchg
or
shr
mov
js
dec
je
scas
sub
fs
fdivs
xor
jns
leave
cmc
jmp
inc
sbb
push
pop
inc
scas
rclb
adc
adc
xchg
pop
stc
pop
popf
js
jne
ret
ds
lods
and
lods
jp,pt
xchg
shrl
popf
mov
hlt
mov
jb
int
je
dec
ret
pop
aad
out
daa
inc
outsl
repnz
jnp
std
mov
adc
outsl
sub
push
xchg
mov
and
pop
or
pop
je
cmp
mov
adc
sub
jo
fdivrl
pop
fldl
ror
loopne
xor
loopne
inc
iret
in
mov
fsts
sbbl
or
std
mov
fildl
fiadds
dec
push
iret
xchg
sbb
adc
mov
int
in
sub
sub
lahf
scas
push
repnz
push
outsl
cmp
leave
insl
add
mov
ds
loope
stos
mov
and
adc
mov
adc
in
sahf
sbb
ret
pop
ljmp
aas
xor
and
test
iret
pop
int3
sub
xchg
sbb
fwait
rcll
lcall
sbb
mov
add
je
add
jmp
or
push
xor
add
out
add
or
fwait
shr
fwait
cmpb
push
je
pusha
xchg
sub
sbb
push
testb
stos
adc
ds
dec
pop
cmp
xchg
or
push
xchg
jnp
mov
adc
pop
shlb
testl
jg
pop
mov
jbe
sbb
jmp
mov
jmp
mov
mov
add
sub
loope
push
lret
je
int3
lds
sbb
mov
daa
sar
pop
fsts
sbb
outsl
and
outsb
stos
xchg
cli
lea
sbb
movsb
xchg
jle
push
dec
out
jno
jmp
imul
arpl
jecxz
scas
mov
movsb
add
add
push
pop
inc
aam
ja
cmp
push
sbb
or
sbb
rcrb
pop
xchg
lods
sbb
scas
mov
mov
mov
xor
les
jne
mov
and
sbb
inc
fcoms
mov
push
sub
fdivrs
jns
lret
in
or
adc
dec
sahf
or
xor
inc
cmp
pop
aaa
jmp
xchg
inc
pusha
push
fcomps
bound
scas
mov
mov
icebp
divl
mov
outsl
pop
or
je
add
lret
ja
pop
popa
sub
adc
sub
loopne
add
push
repz
or
jbe
sbb
idiv
cltd
add
xor
daa
dec
shlb
test
out
add
mov
std
loop
rorl
shlb
ja
mov
jbe
sub
mov
sti
sbb
sub
aam
inc
call
xor
aam
in
push
js
mov
jae
add
out
add
pop
mov
hlt
fcmovnb
jae
leave
int3
ret
inc
rclb
mov
dec
mov
xor
int
loope
stos
into
adc
or
decl
pop
jb
movsl
jmp
imul
xchg
dec
les
dec
pop
jecxz
pop
int3
movsb
rorl
xor
pusha
jnp
add
pop
jp
popa
bound
adc
sarl
mov
cmpsl
sbb
or
stos
jmp
xchg
sbb
popf
pusha
pop
xchg
and
sub
pop
mov
imul
mov
aaa
ret
fs
pop
and
outsb
jb
pop
lds
cmp
xor
add
and
xlat
mov
add
int3
mov
and
dec
mov
sbb
push
aaa
fistpll
lahf
in
jmp
xchg
in
pop
repnz
call
test
pop
call
push
lahf
mov
scas
sti
decl
mov
out
jbe
sbb
into
sbb
adc
aad
add
js
adc
popa
adc
jae
sub
jge
js
mov
sbb
and
xchg
mov
pop
jb
and
adc
and
push
inc
lods
fcoms
lea
add
int3
sub
mov
dec
jmp
ljmp
jp
xor
addr16
cmp
jecxz
popa
add
fadds
cmp
or
sub
jecxz
pop
inc
sub
mov
repnz
sbb
dec
sbb
sti
stc
sub
sbb
cs
les
pop
fistps
xchg
pushf
sub
mov
hlt
mov
js
testl
aam
pop
js
icebp
xchg
and
je
outsl
mov
inc
dec
dec
fsubr
loop
jp
mov
leave
leave
sub
inc
clc
gs
popf
jg
enter
hlt
mov
pop
mov
add
add
add
xor
mov
in
xchg
out
or
mov
mov
jae
daa
pusha
pop
out
push
rcpps
leave
xchg
sbb
jns
dec
mov
sub
enter
in
into
fwait
imul
in
cmp
mov
mov
dec
and
imul
sahf
push
fdivl
mov
pop
xchg
ss
cmpsl
xor
lock
test
mull
lods
fnstcw
inc
fbld
push
mov
inc
das
sbb
test
adc
leave
push
bound
aad
dec
and
cmp
dec
shll
jmp
jns
adc
jnp
mov
mov
adc
xbegin
jne
fdiv
add
xor
pop
rol
rcrb
xchg
mov
lea
jbe
adc
jecxz
sahf
andb
fstpt
mov
in
aam
outsb
adcb
pop
mov
pop
add
ss
add
lods
push
add
add
dec
mov
fcompl
sub
xchg
sbb
xor
lcall
pop
xchg
into
ja
das
and
dec
and
fistl
mov
cltd
es
push
xor
ret
repnz
aaa
mov
xorl
ror
mov
movl
out
outsb
loopne
in
push
test
add
push
outsb
mov
push
popf
lea
les
es
stos
jb
pushf
cmp
inc
je
pop
out
xchg
jno
test
and
jbe
movsb
add
test
mov
mov
adc
mov
popa
scas
inc
leave
inc
push
cmp
cmpsl
xchg
xchg
aad
inc
adc
incl
pop
sbbb
loope
add
mov
add
add
add
les
int
lods
loopne
and
or
mov
scas
dec
add
int3
pop
mov
in
pushf
fiadds
bound
shlb
shrb
fbld
add
dec
lcall
mov
mov
pop
pop
ds
adc
dec
mov
cltd
std
pop
movsb
jns
lds
and
test
mov
in
inc
outsb
push
test
cs
sbb
push
xchg
push
arpl
mov
mov
mov
jle
adc
pop
dec
adc
out
data16
daa
movsb
test
jp
cmpl
mov
test
leave
test
and
fildl
pop
lods
mov
mov
popf
imul
cmpsl
lds
jg
sub
or
cli
xchg
addb
pop
imull
loope
xchg
sub
mov
test
pop
xor
fdivl
into
mov
iret
lret
jmp
mov
scas
in
hlt
dec
arpl
mov
adc
stc
mov
aam
fwait
mov
ljmp
fists
dec
pop
push
sbb
pushf
div
sbb
fcmovnu
stos
adcl
andl
enter
xchg
sbb
flds
lcall
shrb
loopne
aaa
aaa
inc
ja
jp
les
cmp
cmc
scas
adc
mov
arpl
mov
jnp
add
push
lret
and
inc
rol
roll
mov
enter
or
loopne
movsl
inc
rep
push
xchg
push
mov
and
mov
mov
lret
iret
rorb
ja
les
mov
adcb
dec
inc
lds
add
loope
mov
nop
rcrb
and
sub
add
ja
cmp
fwait
dec
xor
scas
fdivrp
lret
stos
mov
sub
and
in
push
orb
xchg
sarl
out
sub
mov
inc
repnz
jbe
sbb
push
or
mov
div
jecxz
jp
stc
xchg
testb
mov
sbb
jno
jp
lock
cmp
mov
mov
add
neg
xor
xor
std
insl
sbb
lds
in
inc
lahf
test
pop
stos
xchg
mov
xchg
pop
out
xchg
xchg
bound
std
cmpsb
test
mov
int
push
outsl
in
pop
stos
push
lods
cmp
add
pop
pop
mov
or
xchg
xor
cmp
sub
in
mov
cltd
sbb
loopne
movsl
sbb
loopne
push
xchg
sub
mov
cmc
fistpll
pop
jo
mov
mov
jnp
push
sbb
test
dec
std
mov
fwait
je
sub
fcmovnbe
mov
sbb
push
jb
prefetch
fildl
fxch
mov
in
fs
mov
mov
iret
dec
rcll
int3
cmp
pop
xor
inc
addr16
cmp
aaa
xor
mov
inc
jb
imul
ficompl
fidivrs
cmp
mov
cwtl
adc
jo
jecxz
repz
mov
aaa
movsl
std
adc
cli
aad
pop
push
sti
aaa
outsl
test
lret
inc
jnp
out
aaa
push
subl
jbe
or
dec
in
divb
insl
lret
and
cli
pop
int3
sbb
push
xor
mov
xchg
iret
mov
pop
add
jmp
roll
or
cmp
stos
lahf
push
sub
stc
xor
sub
insb
lret
jmp
out
data16
lods
cld
mov
push
jge
negb
add
add
add
sbb
call
outsl
adc
ja
mov
test
icebp
bound
dec
ret
xchg
cli
mov
adc
es
or
in
xor
xchg
push
popf
push
or
sbb
xchg
ficompl
mov
fistl
pcmpeqw
pop
rclb
and
in
insl
mov
jmp
dec
jb
test
xor
adc
mov
xor
neg
mov
in
push
test
xchg
mov
out
aas
or
and
cmp
or
nop
xor
in
cmp
xchg
rcrb
fisubl
mov
outsb
and
mov
es
or
jno
xor
lret
pop
aaa
cmp
loope
xlat
mov
imul
dec
mov
in
pop
loopne
ss
xchg
stos
fwait
aas
fcmovb
jmp
xor
push
stos
jno
sbb
lea
lods
cmp
sbb
ret
aas
test
and
push
adc
dec
pusha
mov
subl
dec
pop
in
lahf
or
lahf
ja
mov
das
fmull
insl
andb
and
cmc
add
repnz
hlt
push
sahf
cmp
pop
mov
jmp
mov
xchg
jp
shr
popa
mov
aad
out
dec
or
nop
xchg
out
push
aam
mov
jnp
or
jmp
out
outsb
inc
hlt
cmpsl
cmpsb
popf
popa
push
int
pop
dec
je
xchg
adc
mov
sti
imul
cmpsb
push
rolb
xchg
adc
repz
mov
jno
adc
call
ret
mov
push
sub
enter
test
out
adc
mov
ja
cltd
cmp
ss
iret
je
icebp
add
neg
jmp
popa
test
in
xchg
add
out
add
push
xor
mov
lods
popa
or
inc
jp
dec
loop
and
mov
fstpl
jb
add
pop
sahf
js
inc
icebp
sar
cmpsb
ret
loopne
sub
and
sub
jo
add
push
pop
dec
add
add
je
push
cmp
cmpsb
sahf
dec
in
mov
pop
lods
and
nop
pop
sub
das
jle
cli
mull
mov
cmp
cld
je
shr
cli
xchg
into
or
mov
ljmp
fistps
jb
scas
push
jl
mov
sbb
and
xchg
jge
nop
ds
mov
loop
pop
imul
insl
xor
mov
fidivs
or
rolb
aaa
or
ljmp
leave
ljmp
arpl
sarb
aaa
push
push
jle
jmp
jo
xorb
mov
mov
sub
andl
xchg
xor
fisttps
jnp
pop
cmp
rcrb
icebp
test
mov
scas
js
jb
inc
mov
pop
ds
sub
loopne
les
lods
mov
stos
int
dec
lock
or
pop
xor
adcb
mov
movsb
lcall
aas
push
push
ficompl
data16
sbb
sub
adc
clc
push
ss
push
outsb
mov
loop
roll
stos
cld
roll
mov
popa
js
add
dec
addr16
cmp
mov
pop
mov
or
ret
pusha
mov
mov
add
cld
mov
mov
repnz
mov
mov
fstl
add
int3
or
jne
ret
aad
pop
dec
stos
lcall
mov
xor
mov
imul
pop
push
xor
pusha
mov
mov
xor
pop
hlt
imul
sub
mov
jne
cmp
out
xchg
and
cs
add
inc
je
hlt
stos
dec
negl
add
sub
jp
fimull
push
sbb
push
sub
push
sbb
aas
stos
jnp
jno
out
loop
fdivrs
jbe
fidivs
sbb
int
cwtl
mov
setge
dec
mov
cmc
dec
add
stos
or
push
jge
pop
mov
pushf
mov
mov
mov
pushf
xlat
xchg
sub
fisttps
jae
lods
adc
inc
add
int
inc
mov
xchg
sbb
add
bound
stos
in
push
fcmovbe
stos
adc
js
xor
jae
or
cs
mov
or
add
and
insb
test
xchg
je
sbb
mov
xchg
test
push
jmp
jnp
dec
jecxz
adc
in
leave
cmp
or
sbb
icebp
ret
xchg
jno
inc
pop
repz
cs
ljmp
sbb
imulb
ss
fidivrs
shll
aaa
dec
int
outsb
mov
xchg
jecxz
iret
aam
adc
jp
clc
int
lea
hlt
dec
cld
insb
mov
mov
aas
ficomps
sbb
loope
jecxz
shll
fcmovu
call
fnstcw
lock
arpl
jecxz
pop
pop
mov
push
xchg
or
mov
jne
imull
popa
push
inc
sbb
inc
popa
pop
enter
mov
mov
stc
xlat
dec
cwtl
inc
mov
jge
adc
push
ss
test
sbb
push
jne
loop
dec
pushf
les
add
xor
mov
jmp
inc
icebp
cld
aas
out
stos
je
jg
sub
xchg
insb
adcb
mov
out
dec
mov
stc
xchg
xor
stos
pop
and
arpl
call
js
out
jle
enter
pop
sbb
insl
jb
outsb
cmp
fs
cltd
xor
cmpsl
xchg
cmpsl
fs
mov
pusha
or
inc
push
sub
sub
lods
mov
pop
cmp
cwtl
scas
inc
js
es
stos
jae
cmp
mov
sti
jbe
sar
or
aad
lret
push
xchg
cmpsl
notl
or
rclb
push
hlt
test
jo
fistpll
insw
xor
test
or
mov
nop
seta
aam
stc
bound
out
xor
dec
sub
fidivs
out
xchg
mov
imul
gs
push
daa
leave
insl
int3
cwtl
mov
xchg
shl
ljmp
adc
clc
pop
call
xor
pop
xor
mov
cmc
fwait
mov
inc
mov
addr16
fsub
xor
mov
iret
js
jg
and
mov
repz
and
das
jno
movsb
sub
adcl
mov
cmp
inc
sysret
in
add
xor
add
or
sahf
jo
cmpsl
dec
into
in
xchg
es
std
mov
cmc
push
lcall
pop
cmp
iret
push
xchg
cs
push
into
pop
jmp
sbb
mov
adc
movsb
insb
xor
fdivrs
dec
jg
imul
mov
movsl
cmp
dec
add
repnz
push
enter
mov
sbb
call
out
and
into
sti
or
fisubrl
add
add
inc
sbb
dec
scas
pop
sbb
xchg
and
fstps
sbb
jmp
rorl
stc
je
pop
sarb
insb
cli
pop
gs
jns
nop
fsubrp
jae
gs
cmp
add
stos
mov
xchg
addb
adc
mov
lods
decl
arpl
mov
arpl
sbb
jnp
jmp
rclb
cs
mov
jmp
dec
bound
push
stos
cwtl
dec
xchg
orb
ret
jne
daa
push
jge
pop
adc
and
orb
add
clc
gs
pop
and
jmp
add
in
or
and
push
jne
lock
cld
cmc
je
xorb
enter
and
dec
mov
sti
pushf
mov
scas
or
repnz
adc
xor
mov
and
adc
out
adc
movsl
sbb
punpcklbw
push
outsl
xchg
sbb
mov
pop
loop
sub
fisttpll
add
ja
leave
movsl
cwtl
mov
xchg
cmp
lcall
in
lcall
sbb
dec
jl
lods
clc
std
fwait
lret
dec
add
insl
lods
cmpsl
lock
dec
pop
lahf
mov
mov
xchg
das
cld
push
test
add
or
sub
jno
mov
dec
push
iret
inc
data16
andb
mul
mov
lea
push
mov
dec
fmul
mov
inc
jns
std
sbb
add
in
pop
mov
push
mov
sti
stos
frstor
pop
addr16
inc
jb
fmull
pop
adc
out
cld
jge
inc
cltd
mov
mov
pop
dec
dec
cltd
ret
jno
leave
or
xor
xor
fwait
add
out
add
sbb
fdivs
daa
sub
push
nop
xorb
cmpsb
pusha
dec
mov
push
sbb
pop
jmp
sarb
lods
xor
pop
add
dec
out
mov
push
sub
outsb
sbb
leave
cmp
std
xor
rcr
inc
fwait
cwtl
xchg
loopne
mov
mov
loope
xor
roll
cmc
jno
ret
xchg
shlb
fdiv
mov
push
sub
pop
inc
pop
xchg
rorb
pop
mov
xor
xlat
cmpsb
cmp
shrd
ds
mov
and
sub
out
xchg
dec
mov
movsl
pushl
out
mov
aad
out
pop
in
jne
jno
sbb
std
movsb
and
scas
movsb
jae
xchg
ret
xor
aaa
shrb
clc
ret
cltd
nop
or
adcb
push
shrl
stos
sahf
add
dec
testb
add
mov
in
add
mov
xchg
mov
lret
ja
xchg
cmpsb
ja
ja
jmp
add
dec
cwtl
shr
sbb
out
call
mov
fbstp
lods
popf
sub
ja
add
xchg
jbe
aam
and
cld
pop
mov
fwait
test
xor
mov
out
je
mov
fnstsw
cmp
push
gs
xor
rclb
fwait
push
frstor
dec
jecxz
mov
sbb
cmp
add
pop
dec
orl
mov
in
xchg
dec
push
push
in
mov
stc
cmpsl
adc
fwait
in
push
or
jnp
dec
push
xlat
shlb
mov
push
inc
movsb
lods
dec
pop
mov
sbb
xchg
dec
cli
ljmp
mov
xor
pop
xchg
mov
imul
push
adc
mov
shl
cld
mov
out
out
cltd
ja
daa
loop
cmc
push
cltd
jns
add
out
add
pop
push
shl
push
movsl
push
inc
cld
xor
jo
inc
pop
scas
xchg
jno
sub
xchg
and
les
cmpsb
xchg
cmp
sub
outsl
jge
mov
mov
ret
xchg
xor
imul
test
xlat
out
icebp
mov
and
addb
mov
sbb
fcmovnu
xchg
addr16
frstor
pop
into
adc
pop
testb
push
mov
dec
sti
jecxz
xor
das
mov
in
cld
push
aad
pop
fs
mov
mov
dec
push
jp
pop
pop
push
inc
or
nop
popa
ficomps
mov
lret
jbe
insl
lds
cmc
sbb
inc
arpl
mov
mov
sbb
stos
sub
or
add
pop
mov
test
test
dec
jg
int
push
add
mov
sti
mov
mov
rclb
push
cmp
mov
dec
mov
insl
repz
test
aaa
fisubrl
jns
pop
add
jge
inc
and
push
mov
pop
and
daa
loop
and
sub
and
or
push
mov
aas
cmp
push
pop
frstor
add
dec
icebp
loopne
mov
ljmp
je
push
outsb
mov
push
pop
ljmp
or
add
inc
in
vcvtdq2ps
add
mov
dec
adc
lea
ja
push
adc
dec
cmp
jl
popa
sub
xor
jbe
decl
or
int
repz
cltd
lea
stos
mov
add
pop
push
mov
inc
adc
push
dec
xchg
inc
add
pusha
inc
adc
pop
negb
roll
mov
and
andb
or
sub
xchg
inc
mov
or
loop
les
add
out
add
shlb
push
add
lcall
sbb
je
sbb
pop
push
mov
and
shll
jae
push
sbb
icebp
mov
push
fistpll
test
sahf
mov
mov
mov
call
mov
out
xor
mov
mov
ret
push
fidivl
call
xchg
adcb
push
out
seta
fcomps
sahf
dec
or
inc
in
lcall
or
jno
push
push
inc
iret
mov
in
sbb
xchg
pop
jl
push
or
fsubrs
into
pop
pop
fcomps
movsb
insl
movsl
fnstsw
sahf
add
sub
cmp
sarl
xchg
dec
cltd
out
dec
fsubs
shlb
add
iret
enter
inc
mov
push
adc
aaa
repnz
mov
lahf
cmp
add
daa
xor
jmp
and
pushf
sub
repz
mov
cmp
cmp
jnp
scas
addr16
pop
jl
jge
inc
mov
lret
jb
push
repnz
xor
add
or
sub
lcall
insb
ljmp
out
inc
xlat
cmpsl
jg
cmp
test
jae
push
or
mov
mov
movsb
pusha
int3
ja
clc
adc
nop
stos
or
cmc
adc
lock
mul
repnz
sahf
nop
repz
loop
ret
test
jl
shll
insb
std
pop
mov
pop
dec
push
jp
cmp
popa
rcrb
stos
jl
inc
test
sbb
push
xchg
mov
repz
mov
mov
jmp
cmp
jne
leave
loope
addr16
push
iret
ds
pop
ljmp
adc
lcall
jg
inc
outsl
loopne
dec
jbe
inc
mov
add
sti
jno
into
and
loopne
push
sbb
ja
push
les
lods
mov
mov
ljmp
mov
adc
leavew
shrb
xchg
rorl
sub
sbb
jb
pop
lods
cli
push
sub
fstpt
mov
pop
repz
test
aas
inc
mov
inc
lods
inc
mov
shll
scas
int
sbbl
jns
jbe
test
pushf
shl
test
lret
xlat
jg
inc
jno
ficomps
rcrb
jp
adc
pop
mov
lock
hlt
xlat
sbb
inc
sbb
dec
jnp
sbb
in
pop
sub
gs
lods
jp
aad
and
test
push
mov
fsubs
insb
adc
inc
loop
xor
xchg
popf
push
insb
mov
add
pop
xlat
dec
repz
gs
mov
jns
in
mov
pushf
inc
mov
push
cs
or
test
dec
in
sub
and
incb
mov
dec
push
in
test
out
lock
push
repz
pop
mov
stc
iret
jne
jne
rol
das
out
dec
bound
in
lahf
lock
sarl
jge
and
xor
jle
push
iret
shufps
cmp
xchg
mov
mov
stos
imul
test
icebp
mov
jle
xchg
mov
cmpl
sbb
dec
mov
pop
mov
sbb
out
jg
push
inc
adc
mov
mov
xor
pusha
jo
stc
aam
pop
push
iret
jecxz
jl
enter
in
xorl
dec
sti
and
xlat
dec
call
loop
les
outsb
push
loope
mov
add
add
cmp
xchg
fs
jl
or
std
pop
out
xchg
and
xchg
jns
mov
pushl
push
sbb
loope
push
into
pop
sub
int3
cmp
flds
pop
into
sub
pop
jo
lock
push
aas
subl
xchg
mov
enter
adc
add
outsb
stos
lock
cwtl
test
popl
jae
repnz
pop
call
or
adc
stc
popf
into
jne
sti
pop
orl
or
out
add
in
mov
in
aas
and
push
sub
insl
repnz
sbb
mov
xchg
jg
bound
adcl
cmp
testb
jecxz
stos
das
insl
cmpsl
lock
and
jns
filds
inc
inc
jmp
xchg
pop
stos
jno
pushf
pop
add
mov
jb
imul
mov
out
jg
test
cld
test
inc
push
mov
mov
fcmove
pop
push
xchg
cmpsb
pop
fs
stos
lret
push
loopne
mov
or
sub
aad
push
or
cwtl
pop
inc
fcmovu
mov
movsl
push
repnz
xor
mov
mov
jle
stos
sbb
adc
push
mov
dec
jg
shrl
cmpl
lahf
shr
push
fldenv
pop
arpl
jnp
push
in
dec
cwtl
jnp
lods
pop
dec
out
fldt
shl
scas
in
pop
and
sti
pop
lds
cmp
ret
xor
lods
inc
lds
sbb
pushf
out
push
push
ja
dec
push
pop
test
xchg
sbb
jp
outsl
mov
mov
mov
jbe
bound
inc
out
jnp
mov
xlat
psubusb
add
out
add
andl
fsubs
leave
fwait
lret
pop
rolb
or
ss
aaa
sub
cmpsl
outsb
fcompl
mov
stc
sub
push
cmp
mov
mov
rorb
jb
cld
sbb
scas
mov
add
addr16
scas
mov
stos
lods
add
jl
test
mov
fsubs
insl
xchg
lock
lock
cmp
mov
mov
and
and
mov
and
inc
push
pop
notl
xor
stc
in
mov
pushf
je
sbb
mov
push
aam
cmpsb
in
jp
lods
and
sti
dec
cmp
scas
jo
push
dec
rcll
loopne
xchg
mov
mov
in
cmc
sub
movsl
mov
jae
test
addl
cmc
cmp
sbb
lds
addr16
arpl
xchg
pop
mov
pop
pop
int3
imul
mov
cld
xchg
adc
sti
aam
or
and
mov
mov
fistpl
pop
or
inc
mov
jle
sub
mov
and
push
ds
mov
std
ja
stos
pushf
test
out
mov
clc
js
lcall
adc
in
jp
xchg
xorl
sub
stos
flds
mov
or
mov
adc
testb
repz
cs
jl
xchg
pushf
enter
sub
push
and
in
repz
add
push
dec
jns
xchg
pop
out
orb
sarb
out
push
imul
adc
stos
shlb
repz
xchg
push
sbb
push
add
jg
jns
dec
lea
mov
test
out
add
push
sbb
adc
fwait
imul
inc
aam
xchg
data16
mov
into
sbb
mov
scas
or
cmp
sbb
mov
popf
jp
xchg
pusha
addl
sub
aas
imul
icebp
lea
xchg
mov
incl
mov
scas
adc
inc
and
sub
lret
or
test
testl
inc
insb
int
add
dec
shr
lock
or
pop
inc
add
rcrb
mov
lcall
testb
mov
cmp
xchg
push
xchg
mov
cmpsb
sub
outsb
push
popf
cmp
fs
sbb
adc
aam
and
or
pop
popa
mov
dec
nop
mov
int3
leave
sahf
or
movsl
jb
sub
out
add
mov
iret
mov
xchg
test
jbe
add
xchg
cltd
xchg
and
sti
pusha
sub
movsl
mov
rorb
pop
icebp
std
xchg
cmpsb
sbb
inc
jge
lahf
xchg
out
xlat
add
cld
cmp
and
data16
bound
js
lahf
ficompl
push
push
out
xor
fistps
jmp
hlt
lret
sbb
and
mov
sbb
sub
cmp
sub
jns
ret
cmp
pop
pusha
pop
movsl
pop
fildll
mov
scas
cmp
fs
push
sbb
scas
mov
dec
ss
pop
push
push
mov
xchg
enter
mov
pop
sbb
xor
xchg
adc
in
jl
xchg
imul
mov
rorb
bnd
cmp
pop
xor
and
hlt
int3
add
mov
testl
test
add
add
add
repz
push
add
roll
jno
arpl
xchg
xchg
out
adc
aam
inc
cmp
out
cld
jb
adc
jo
sahf
push
xchg
cmpsb
mov
cmp
mov
xchg
js
imulb
sti
cld
nop
stos
in
std
cmp
jns
fildll
leave
lods
jne
mov
mov
fildll
pop
iret
sub
pusha
xchg
mov
in
dec
adc
stos
dec
in
test
cmp
add
js
pusha
cs
xchg
in
xor
popa
test
cmc
jnp
gs
rorb
sub
ljmp
xor
rorb
mov
inc
jmp
psubsb
addb
sub
pop
insb
inc
add
jno
notl
cmp
or
xor
sbb
pop
mov
popf
notb
repz
loop
lods
push
flds
out
scas
pop
and
add
adc
push
sbb
mov
jle
shll
mov
cmpsb
push
in
sub
mov
add
aas
cmpsb
sub
cmp
sub
adc
out
bound
mov
fisttpl
lret
lds
les
and
arpl
nop
repz
and
ret
adc
int
push
and
push
xchg
dec
stos
repz
mov
inc
outsb
sub
outsl
and
adc
sub
pusha
adcl
orl
xchg
lock
sbb
fwait
xchg
insl
pop
ret
in
sbb
sub
dec
pop
dec
pop
adc
xor
mov
lods
std
sub
inc
xlat
fdivrs
sbb
or
test
dec
icebp
lret
jbe
cmp
pop
mov
test
add
sti
lods
xchg
loop
xchg
out
and
add
add
fucomi
xlat
inc
sub
inc
xor
adc
sub
xchg
out
daa
push
mov
mov
aaa
testb
fwait
mov
push
or
inc
out
aas
push
pop
nop
jmp
pusha
dec
int
lock
sti
mov
jb
xchg
fwait
sub
jae
les
leave
adc
inc
inc
std
mov
lahf
mov
ss
add
inc
call
ja
mov
mov
icebp
cmp
sbb
jge
jnp
add
jmp
xor
les
nop
lds
imul
jb
cld
scas
xchg
sub
pop
sub
sbb
mov
sub
mov
leave
jp
mov
cmc
and
jmp
insb
pop
int3
aaa
xchg
dec
ja
mull
jbe
arpl
or
out
mov
rolb
ljmp
lret
repnz
test
aad
or
andl
sub
jl
cmp
jb
jp
jno
mov
mov
cmpsb
lea
cmp
xlat
xor
push
lock
aam
rcll
jge
sub
mov
data16
sub
loop
sub
xchg
mov
sub
lods
pop
sbb
repnz
out
outsb
out
imul
out
sub
sbb
cld
popf
xchg
in
lret
arpl
adc
out
mov
bound
pop
sbb
mov
cmp
scas
mov
aaa
lea
sub
test
fiadds
xchg
inc
push
icebp
test
push
adc
pop
fistps
out
dec
lods
mov
aad
leave
jecxz
rcrl
add
in
push
cld
cs
repnz
std
push
lret
mov
add
add
add
fisubs
repz
adcb
jno
dec
stc
and
lret
sbb
loopne
rol
fsubrs
stos
cmp
out
arpl
lret
xchg
mov
or
xchg
add
pop
in
scas
mov
leave
or
cmc
mov
push
lds
stos
clc
stos
pextrw
inc
nopl
push
add
mov
push
mov
xor
fwait
test
out
sub
imul
push
lea
orl
cmpsl
jae
mov
cli
adc
xchg
pop
test
mov
adc
js
inc
in
push
add
das
cltd
es
xor
popf
pop
or
sub
push
jne
pop
imul
pop
call
push
out
fists
or
cmp
test
mov
push
push
daa
icebp
and
icebp
dec
pop
movntps
xor
stos
cmp
pop
fs
pop
test
pusha
xchg
push
or
lret
add
lret
pcmpgtb
inc
xchg
enter
mov
repnz
pusha
inc
dec
fbstp
jp
icebp
les
fiadds
pop
or
adc
dec
es
hlt
sbb
inc
xor
push
fidivrl
xchg
mov
icebp
mov
push
jl
in
ljmp
pop
rolb
pop
mov
fisttpl
cmpsl
out
dec
xchg
lea
xchg
sbb
lods
cmp
pop
ss
mov
mov
orl
imul
jb
imul
mov
popa
pop
xchg
repz
out
shrl
jecxz
adc
sub
ss
xor
dec
shll
stos
ja
mov
cmp
leave
sbb
bound
scas
add
out
add
call
call
xor
mov
jp
or
push
dec
sbb
xor
or
mov
sbb
test
loope
jo
mov
call
mov
jno
ret
push
mov
sub
inc
sti
sub
repnz
arpl
int3
sarb
or
addr16
add
xchg
in
push
sub
in
fmuls
adc
divl
or
push
bound
dec
int
js
fwait
push
xchg
mov
sub
ficoms
out
cmp
sbb
aaa
dec
test
push
pop
jb
adcl
inc
outsl
pop
push
adc
jmp
jbe
cltd
into
and
sub
ret
mov
arpl
ja
dec
xor
xchg
sarl
jne
xor
pusha
jno
push
push
out
mov
repnz
out
or
daa
xor
orb
out
jns
mov
dec
mov
mov
cmc
lcall
xorl
xor
sub
mov
mov
loope
mov
test
mov
ret
jecxz
es
je
adc
dec
cli
dec
jb
fadds
inc
scas
mull
lods
cmc
mov
push
iret
imul
mov
mov
ret
stos
fistps
lahf
and
sub
sbb
jmp
cmp
mov
sbb
jno
out
lahf
in
fnstcw
enter
mov
jmp
mov
movsb
xorb
fsub
xchg
in
mov
inc
mov
jl
aad
jecxz
push
xor
fstps
sub
inc
in
cmp
mov
sub
xor
and
repz
fldt
icebp
sbb
add
out
add
enter
movsb
mov
rcrb
bnd
scas
mov
lahf
cmp
mov
cs
xchg
out
pop
hlt
or
mov
cld
xor
xorl
push
mov
loop
outsb
pop
xor
mov
out
iret
xchg
xlat
fwait
pop
xor
xor
pop
jl
jle
push
mov
dec
pop
ljmp
mov
push
or
or
inc
enter
push
xor
insb
and
adc
cmp
aaa
inc
negl
jb
push
xchg
inc
js
das
inc
cmp
testb
and
popf
mov
adc
xchg
sbb
rorb
sbb
std
fldcw
sbb
movl
int3
push
or
loope
das
pop
jae
or
inc
lds
mov
ret
in
hlt
ret
icebp
pushf
data16
jae
daa
or
mov
jp
push
jne
repnz
call
mov
jno
mov
icebp
in
jmp
inc
orl
es
add
mov
jp
stos
test
test
jns
jl
push
inc
jbe
mov
mov
icebp
ret
mull
xor
inc
nop
xor
in
mov
push
and
mov
sub
js
repnz
outsb
jge
cld
pop
pop
ds
ss
lods
fwait
ljmp
pop
fsubrl
jns
jne
sbb
flds
push
mov
cmp
cld
and
mov
xchg
out
rcrb
pop
push
pusha
mov
lret
out
shld
pop
mov
sbb
xchg
ja
sahf
pusha
mov
cmp
mov
xchg
pop
insl
xchg
push
adc
push
shll
jae
rorl
stos
mov
add
inc
daa
or
push
jo
imul
data16
add
add
add
xchg
pop
mov
jae
imul
mov
cmp
int
push
lahf
out
adcb
push
icebp
fisttpl
xchg
jp
into
neg
sahf
movsb
sbb
test
add
popf
xchg
and
stos
inc
js
sbb
sbb
push
push
mov
push
fbstp
aad
jp
and
cmp
pop
push
and
lds
cli
mov
roll
lods
mov
xor
and
inc
xorl
jbe
nop
clc
imul
sbb
mov
imul
mov
pop
cmpsb
imul
xchg
pop
in
adc
xor
pop
push
stc
lea
push
nopl
pop
jns
xchg
mov
aas
cmpb
movsb
lds
xchg
lock
std
cwtl
inc
in
mull
cmp
push
xor
jne
inc
aaa
push
inc
in
add
push
xchg
dec
jecxz
dec
add
mov
lret
push
adc
pop
mov
leave
mov
fdivl
sub
fs
inc
or
andl
jbe
xchg
pop
in
push
lods
pop
and
pop
je
daa
jne
lahf
push
pop
out
or
adc
cmp
adcb
test
add
js
mov
cmc
mov
jmp
lea
jae
mov
insb
dec
xchg
clc
push
mov
lock
push
dec
adc
jg
pop
popa
clc
decl
cltd
xor
push
out
repnz
icebp
pusha
mov
sub
jl
xorl
popa
push
movsb
bound
xor
push
mov
mov
cmp
in
loop
dec
fcmovnbe
push
xchg
jmp
sbb
pushf
mov
aas
dec
lahf
mov
push
dec
mov
add
add
add
mov
and
inc
mov
inc
fadd
fcoms
pop
and
jae
fwait
inc
pop
insb
xchg
xor
push
movb
pop
adc
fbld
test
lea
addr16
adc
jne
dec
cwtl
outsl
clc
cmc
cwtl
in
mov
int
pop
sub
or
fildll
sub
repnz
lret
or
jmp
idivb
add
adc
mov
sbb
pop
lock
fisubs
dec
sar
mov
pmulhw
fstps
je
fwait
or
pushf
mov
sbb
fsubr
add
sbb
dec
outsl
cmp
sbb
lea
sbbb
push
cmpsb
lds
sbb
repz
pop
add
or
sahf
push
fwait
mov
jg
sub
push
js
mov
loope
sub
xchg
cli
push
mov
repz
sahf
jmp
repz
dec
push
mov
repz
lcall
test
pop
push
mov
shlb
adc
push
pushf
or
push
dec
rcl
jne
pop
sub
in
in
mov
pop
add
push
mov
sbb
mov
dec
or
stos
push
mov
push
mov
dec
pop
lahf
mov
or
and
aaa
stos
jmp
cmpsb
inc
adc
ss
cmp
idivl
outsb
es
sbb
xlat
jo
int
rolb
push
aad
mov
mov
xchg
xchg
cli
ror
xor
cmpsl
add
mov
pop
outsb
insb
and
or
dec
neg
inc
sahf
mov
sbb
jb
push
icebp
out
popf
addb
enter
stos
loop
xchg
mul
mov
mov
cs
hlt
mov
cmp
fs
xchg
add
repz
jmp
int3
addr16
out
add
popf
cmp
mov
test
fbstp
jo
cmp
sub
fsts
outsb
mov
jbe
pusha
add
xchg
mov
adc
push
pop
mov
sbb
xlat
dec
and
mov
jle
push
sub
std
add
push
jae
mov
push
jmp
inc
sub
xor
repnz
nop
sahf
out
gs
ret
ficoms
xlat
push
loope
addr16
adc
lock
clc
add
lea
xor
loopne
insl
inc
push
pop
sbb
or
sub
add
stos
dec
inc
mov
mov
rcl
sbb
shlb
jg
idivl
cmp
loopne
leave
fcom
imul
movsl
xor
cmp
mov
xchg
inc
outsb
jp
fstpl
cmp
das
adc
xchg
dec
jecxz
jae
ja
push
jae
aas
outsb
xor
movsl
jg
push
shll
mov
xchg
mov
dec
enter
fwait
imul
cmpsb
cmpsb
xor
sub
leave
xor
inc
dec
fistps
aad
mov
imulb
fwait
push
outsb
xor
dec
xchg
loope
and
es
push
insb
xor
scas
xchg
pushf
push
inc
aas
ret
push
lahf
push
sbb
mov
mov
rclb
loope
mov
mov
nop
push
and
and
jge
push
xchg
ficoml
add
sbb
out
test
push
lret
iret
mov
mov
sub
sti
pop
jle
jl
inc
aas
insb
mov
call
add
mov
xor
sub
mov
shrb
xor
repnz
sti
add
mov
aas
outsl
ljmp
mov
adc
mov
in
fdivrp
test
xchg
or
lcall
dec
sbb
out
add
loope
mov
push
sbb
jae
daa
fisttpl
dec
cmp
adc
mov
addr16
xor
inc
movsl
divl
xor
imul
push
sbb
repz
xor
test
jp
xor
inc
dec
lock
in
dec
leave
xchg
xor
mov
pop
xchg
sbb
shr
push
lret
test
xchg
icebp
pop
mov
fistps
adc
dec
push
inc
andl
gs
sbb
cmp
add
mov
call
stc
insb
sub
jle
pop
pop
mov
cwtl
aad
testl
mov
push
dec
mov
test
lea
dec
daa
or
xchg
or
adc
and
or
xchg
ds
popa
sbb
shr
jge
pop
push
mov
mov
mov
out
int
mov
jle
sti
jns
aas
push
dec
adc
das
sbb
icebp
gs
dec
mov
mov
jecxz
aad
mov
and
and
mov
lods
out
aas
ja
cli
stos
lock
adc
inc
xchg
sub
jo
push
and
in
and
cs
dec
pop
sbb
or
test
add
ds
cld
adc
imul
pop
insl
cmp
jg
mov
mov
mov
dec
dec
sbb
lds
ja
mov
mov
xchg
dec
ja
or
out
cs
loopne
sub
sub
out
push
inc
outsl
movb
mov
sub
loopne
cmp
lods
sbb
loope
pop
mov
in
sub
xchg
in
add
call
call
or
add
add
add
in
jo
fisubrs
mov
xor
cmp
jbe
xchg
pop
jp
xor
mov
rcll
sub
push
ljmp
sbb
mov
xlat
and
sub
xor
sbb
sbb
pop
mov
push
mov
xor
int3
jns
mov
daa
dec
mov
adc
imul
and
pop
ljmp
adc
pop
dec
mov
mov
cld
and
movsb
add
inc
inc
inc
outsb
jb
into
cmp
pop
adc
push
add
mov
andb
ljmp
scas
shl
test
or
call
mov
lahf
inc
dec
cmp
and
lea
stos
aad
int
and
pop
fstl
and
adc
dec
lcall
add
mov
sbb
insb
insb
dec
cwtl
jb
mov
fidivs
push
add
lock
cmp
add
mov
aam
js
dec
scas
push
sub
mov
mov
lock
jne
pusha
mov
adc
and
ret
mov
int
sbb
aam
jmp
dec
aas
rolb
arpl
cmp
and
jp
xor
inc
adc
push
stos
mov
xchg
sbb
mov
pop
or
push
or
ljmp
popf
cli
nop
scas
insl
pop
mov
lahf
cmp
in
push
mov
sbb
cld
shlb
mov
mov
std
ds
sub
call
sub
iret
mov
dec
inc
or
cmpsl
inc
lods
lock
shll
dec
test
in
std
xchg
lret
or
mov
out
add
lret
jo
or
push
cwtl
jmp
outsl
mov
ss
adc
insl
add
lret
add
dec
ret
add
arpl
jb
mov
jae
mov
jp
xor
push
fmull
in
lock
sub
daa
js
adc
cld
rorb
cld
add
mov
fs
or
mov
fwait
call
scas
inc
iret
xchg
ljmp
xchg
iret
adc
mov
or
cs
fadds
push
cmp
push
aam
testl
pop
and
mov
mov
pop
sub
xchg
xchg
fnstenv
xor
sbb
rcll
cmpb
and
das
repz
add
xchg
ret
adc
fists
cmp
lock
xchg
and
or
jmp
in
idivl
arpl
cwtl
pop
rcrb
sbb
mov
outsl
mov
sarb
mov
filds
push
movsb
inc
jl
dec
imul
xor
xor
jl
jne
mov
xchg
or
push
lock
pushf
inc
nop
stos
adc
fstpt
roll
push
cmp
out
mov
rorb
fs
mov
mov
push
pop
xchg
mov
cmp
and
into
test
inc
stos
icebp
sub
repz
pop
mov
clc
popf
data16
cmpsl
fistpll
std
mov
or
jle
mov
push
arpl
insl
mov
adc
testb
push
adc
sub
jg
hlt
add
mov
inc
jae
das
sbb
or
or
jbe
mov
xchg
pop
pop
ficoms
cli
push
repnz
mov
or
mov
mov
cmc
mov
mov
add
into
fisubs
mov
mov
clc
ret
mov
sub
pop
out
loopne
pushf
sar
mov
lock
sar
inc
cmp
popf
mov
add
in
dec
aam
mov
push
stc
mov
stc
and
mov
add
mov
or
xor
adc
xchg
out
testb
decl
into
jecxz
and
push
popa
test
cmpsb
push
mov
dec
popf
xchg
sbb
hlt
cltd
push
and
push
stos
cmp
ret
jl
popa
mov
sbb
in
sbb
sbb
nop
loopne
mov
mov
lcall
hlt
stc
xchg
add
sbb
fsubp
push
out
jecxz
lahf
in
hlt
jg
inc
push
loopne
jecxz
and
and
pop
xchg
push
push
adc
fstl
dec
mov
pop
lea
inc
dec
cmp
push
lea
loopne
or
adc
xchg
insb
js
daa
and
scas
test
sub
ret
loop
add
jno
pop
scas
cmp
rol
mov
xchg
fwait
scas
cmp
mov
xchg
ja
mov
jecxz
outsl
mov
test
and
push
test
and
adc
xor
jns
xchg
stc
jns
add
shlb
xor
scas
jmp
jl
outsb
add
inc
cmp
inc
lahf
mov
xchg
sub
mov
fisubrs
adc
fcoms
fidivl
scas
insl
loopne
and
das
cmp
sbb
cmc
cmp
adc
sub
pushf
mov
out
and
xchg
sub
loop
fwait
mov
xchg
xchg
dec
xor
stos
and
repnz
cs
dec
inc
hlt
popf
pop
neg
cltd
stos
pop
movsl
repz
or
rcrl
jl
cld
out
jbe
mov
sbb
add
add
add
pop
negb
mov
fistpl
xorl
rorb
add
sub
sbb
cwtl
addr16
outsb
push
xor
movsb
imul
xor
movl
ret
sub
inc
fmuls
adc
test
sbb
mov
xchg
push
dec
addl
add
ds
leave
outsb
shrl
js
mov
jb
and
rcrl
loopne
movb
out
xchg
aaa
jno
imul
insb
push
mov
push
sbb
fdivp
and
inc
xchg
xorl
mov
mov
add
scas
fs
icebp
gs
jge
cmpsb
adc
rcrl
addb
xchg
test
or
jnp
dec
loope
repz
or
inc
shrb
repz
lahf
cmpb
mov
cmp
mov
and
mov
sbb
xor
lea
mov
popf
push
push
stos
jo
inc
rorb
in
insb
arpl
push
aaa
stc
sbb
loop
in
mov
sub
enter
dec
jno
push
add
ficoml
andb
mov
fcomps
adc
movb
leave
mov
inc
data16
pop
call
xchg
pop
push
das
lods
cmp
adc
incl
sbb
add
stos
aaa
dec
call
icebp
mov
push
inc
lcall
mov
cmp
jle
add
fsubrp
mov
and
call
sub
jae
pop
movsl
add
bound
inc
push
cmp
enter
fldl
fldl
mov
push
dec
sahf
roll
out
add
push
push
sbbb
popf
jnp
cli
push
mov
test
outsb
xor
xorb
cld
dec
int3
xchg
int3
fldcw
shll
scas
inc
mov
jne
mov
inc
add
cmp
inc
ficoml
mov
xchg
and
cmpsb
cli
and
insl
pushf
inc
jae
xchg
dec
stos
and
out
mov
sti
xor
int
test
ficoml
pop
test
jp
out
sbb
sbb
out
sbb
dec
shl
mov
dec
popf
push
mov
sbb
cmpsb
std
mov
pop
lcall
int3
rorl
or
xchg
jmp
adc
xchg
inc
dec
xchg
lock
fistpl
xor
test
mov
cmp
adc
cmp
pop
shlb
clc
push
add
ret
pop
sarl
movsb
inc
dec
mov
jle,pt
sbb
inc
stc
das
repz
mov
cmpsb
lods
sbb
popl
cmpl
lea
xchg
cli
push
data16
mov
cmp
add
dec
xor
lcall
jno
sub
sub
mov
sbb
test
testl
mov
xchg
and
and
out
inc
jecxz
daa
test
cmc
mov
ljmp
cs
stos
mov
fiadds
jmp
test
sub
mov
pop
popl
outsl
pop
push
jl
shr
jbe
sbb
in
push
jnp
push
add
insl
out
mov
and
sub
adc
dec
mov
push
mov
add
imul
incb
mov
xchg
cld
mov
mov
or
inc
sub
fincstp
jl
fidivrl
js
int3
xchg
lret
rclb
imull
enter
inc
dec
mov
xchg
adc
les
test
add
out
add
jb
std
addr16
test
leave
mov
fs
fwait
icebp
int
in
sub
xchg
repz
push
and
sbb
pop
push
inc
and
std
pop
cmp
jmp
les
sub
mov
jl
sbb
push
cmp
stc
lret
or
mov
sbb
mov
roll
fwait
lret
in
mov
test
fistl
cmp
nop
aam
mov
adc
loope
xor
repnz
int3
cmp
into
mov
jnp
popf
dec
aam
xor
sbb
rolb
addr16
rorl
mov
sub
imul
dec
pop
sbb
jle
lds
aad
sbb
out
mov
xchg
fs
jle
xchg
pop
test
lahf
lods
inc
sub
aad
out
mov
mov
ds
jns
mov
or
test
dec
scas
sub
sub
jecxz
fwait
repnz
call
cmp
and
mov
dec
pop
mov
rclb
in
push
popa
mov
test
ljmp
ljmp
cmpsb
add
mov
out
mov
xchg
outsb
out
adc
addl
imul
pop
repz
sahf
bound
out
inc
sahf
jne
jnp
outsb
inc
and
jno
add
cltd
cmp
xchg
fstps
cld
leave
xchg
andl
fisttps
xlat
dec
leave
mov
xchg
sti
shll
aad
andl
lahf
or
es
add
outsl
cwtl
out
dec
sti
repnz
xor
repz
jl
or
ss
add
xlat
and
aaa
std
out
test
inc
insl
stos
ret
insb
lds
add
add
add
loopne
test
pop
iret
mov
xlat
in
cs
xor
mov
dec
cmp
mov
cld
sarl
jg
ss
loopne
fwait
and
cmp
lret
xchg
pop
jge
dec
and
or
iret
fdivrs
mov
cmpsl
add
push
into
jne
mov
push
inc
add
xchg
or
dec
fwait
jae
inc
adc
arpl
add
push
jmp
add
inc
mov
mov
hlt
insl
add
jge
aaa
mov
in
pusha
add
lods
cmp
adc
fldl
negb
mov
ja
outsl
popa
fimuls
bound
fwait
sbb
mov
call
sbb
adc
xchg
sub
movb
in
insb
jg
imulb
inc
inc
out
scas
dec
mov
rolb
mov
cmpsb
xchg
test
mov
enter
ret
jno
sbb
and
mov
popf
stos
cmc
mull
stc
xchg
clc
popa
in
mov
int
or
jns
push
push
les
push
xchg
pop
mov
lea
xchg
andl
out
in
cmp
cs
push
push
das
js
push
mov
pushw
mov
lock
sub
pop
adc
cld
fsubrs
std
mov
ja
sub
and
icebp
xchg
flds
jb
and
cmpb
shlw
jl
bound
arpl
push
movsl
push
push
xor
out
pop
push
xor
mov
loopne
adc
xor
jne
ret
jg
dec
adc
xchg
inc
out
out
pop
cmpsl
sub
bts
sub
xor
inc
aaa
xchg
mov
ror
dec
mov
jnp
ja
sti
lds
xor
addr16
push
add
nop
int3
popf
fistps
aad
pop
jns
insl
sub
push
movl
add
mov
inc
repnz
icebp
lahf
mov
iret
inc
dec
mov
popa
sub
icebp
mov
popf
repnz
fmul
clc
mov
xchg
pusha
and
mov
cli
jg
mov
lods
addr16
pop
test
fwait
mov
mov
lahf
cmp
out
cmpsb
mov
xchg
mov
adc
pop
mov
mov
xor
mov
shlb
push
les
pop
sub
pop
shll
sbb
adc
pop
insb
ret
pop
inc
roll
xchg
cli
mov
push
and
sub
push
cmc
pop
jo
clc
jp
fisubrs
dec
gs
sbb
and
aaa
fisubs
mov
jg
out
pop
fdiv
and
cmp
loop
push
icebp
xchg
or
dec
mov
xchg
and
es
ja
xchg
jg
dec
mov
mov
sub
add
fs
mov
sub
loopne
push
lds
decl
fucomi
or
popf
int3
add
insb
repnz
imul
aam
jo
adc
sbb
xor
std
mov
cld
ss
in
mov
dec
add
outsb
sbb
sub
xchg
mov
mov
mov
je
sarb
inc
stc
mov
xlat
ja
das
jns
pop
aad
jo
dec
adc
sub
and
fstpt
imul
jbe
scas
ljmp
enter
je
scas
and
sub
imul
je
jbe
xchg
or
inc
mov
xchg
imul
cwtl
loopne
xchg
js
testb
push
xchg
arpl
adc
mov
pop
out
icebp
std
dec
test
jl
pop
in
ds
push
adc
lods
outsl
fstps
add
loopne
cli
mov
ret
mov
add
out
add
add
cltd
mov
sbbl
stc
stc
imul
jae
inc
cmc
mov
test
xchg
push
inc
xor
pop
adc
sahf
inc
and
test
xchg
out
data16
sahf
sbb
sub
jg
xchg
addb
xor
pushf
xor
bound
mov
cmc
repnz
mov
jecxz
ljmp
inc
push
aaa
pop
sbb
stos
lret
cmp
mov
push
jns
cwtl
aaa
addb
sbb
jecxz
xlat
cli
or
adc
lret
sub
xchg
fdivp
pop
or
pushf
ljmp
inc
mov
jbe
outsl
rcr
arpl
int3
mov
mov
push
sarb
cli
mov
adc
int3
test
popf
in
lret
sub
pop
mov
cmc
leave
ds
push
xchg
or
imul
xchg
mov
and
push
mov
mov
fbstp
pop
sbb
jns
cmp
gs
jle
push
cld
stos
jp
in
adc
dec
js
cmp
mov
cmpsb
mov
push
or
std
add
jns
das
sbb
imul
sbb
sub
daa
mov
push
jae
cwtl
push
cltd
xor
cmc
xchg
push
out
popf
mov
iret
adc
sub
sbb
jp
xor
pop
jne
loop
out
adc
mov
mov
push
sahf
jp
add
fldcw
xchg
xor
xor
stos
pop
clc
mov
out
add
push
xor
lods
jbe
lcall
aam
mov
jmp
clc
xchg
outsb
aaa
xor
ds
add
adc
mov
movsl
fidivrl
jne
test
lds
and
lret
xchg
mov
inc
fdivrp
out
ja
xor
shr
inc
stos
and
add
out
add
fs
cmpsb
stos
fmul
xor
pop
shrl
jg
jl
ret
jle
popf
adc
sub
push
mov
cld
adc
jg
adc
inc
loopne
pushf
xor
dec
sub
fwait
scas
lds
lea
jne
stos
lret
xchg
jno
in
lret
pop
bound
mov
aas
cmp
sbb
enter
in
xchg
mov
push
sub
mov
jo
out
in
aam
movsb
cld
mov
pop
test
or
test
nop
xor
add
inc
imul
pop
push
adc
clc
cli
in
test
xlat
pop
cmp
cmp
xchg
inc
into
dec
mov
les
xchg
ret
pop
sbb
test
in
fildl
nop
lds
push
add
jl
add
in
pushw
push
xor
sti
xchg
cmove
sub
lock
inc
jns
cwtl
jnp
ja
out
add
aas
jae
and
xor
adc
mov
into
in
push
fcomp
fsub
stos
xor
mov
lcall
cmp
add
mov
aas
stos
mov
push
mov
adc
xor
mov
push
call
test
pop
shlb
sar
test
adc
pop
cmp
ja
mov
xchg
mov
mov
enter
filds
jecxz
xchg
mov
hlt
aad
pop
pop
ss
inc
popa
xlat
filds
nop
movsl
sub
popf
daa
push
mov
stos
cli
mov
stos
add
ja
lret
push
out
daa
jbe
or
sub
lock
clc
sbb
or
ret
push
dec
xor
stos
mov
push
add
cltd
mov
sbb
int
add
add
add
mov
out
mov
ret
cmc
ficoms
adc
dec
mov
push
push
in
push
sub
jmp
jo
std
ficomps
ss
dec
lret
jge
in
or
push
popa
mov
adc
cltd
insb
push
jecxz
int
popf
push
adc
inc
fimuls
cmp
mov
sar
adc
fmuls
test
in
push
rorl
add
jae
je
lahf
dec
jnp
scas
fistl
xor
jnp
lret
jmp
pop
leave
neg
fisubs
mov
push
out
addr16
lock
sti
mov
sbb
mov
mov
mov
cmpl
add
mov
mov
cmpb
lods
mov
pop
mov
xchg
cmp
mov
pop
ds
xlat
sbbb
push
adc
lock
push
adc
out
pop
jbe
rolb
outsb
and
dec
add
stc
add
repnz
xor
mov
mov
and
int3
loope
xchg
sub
cmp
mul
loope
faddp
int
inc
jnp
jmp
xor
xor
push
push
inc
dec
push
xchg
dec
xchg
popa
xor
lret
dec
in
les
inc
fs
jle
or
lret
jbe
push
lea
pop
mov
mov
jecxz
jmp
arpl
cmc
insb
inc
pop
cltd
xor
jno
aaa
out
jne
push
xchg
adc
insl
js
adc
xor
add
xor
hlt
outsl
xchg
inc
adc
dec
iret
sarl
pop
and
mov
inc
pop
std
push
push
aam
out
call
inc
dec
mov
mov
fstp
add
xor
cmp
push
icebp
lock
into
add
out
add
inc
and
leave
jbe
mov
or
mov
movb
cmp
pop
aam
inc
xchg
mov
arpl
shl
out
cmp
test
into
add
pop
pop
insb
aad
cmp
or
icebp
call
push
daa
mov
jo
sub
sbb
mov
repz
dec
ds
sbb
mov
mov
dec
imulb
jmp
xchg
fistps
stos
pusha
lods
xchg
rol
cmpb
stc
add
jne
imul
subb
sbb
bound
sbb
clc
jecxz
inc
leave
fucomi
scas
dec
push
andl
adc
scas
or
cmp
orb
pop
cmpsb
push
add
jno
in
mov
mov
jbe
pop
xchg
jecxz
adc
mov
repz
daa
adc
mov
pop
outsl
movsb
or
mov
pop
adcb
jae
pop
aaa
ret
in
inc
cmc
aam
mov
std
cld
ret
mov
pop
int
aas
cs
out
nop
popf
pop
xchg
inc
push
adcb
data16
loop
std
scas
shlb
movsl
shr
adc
fildl
mov
jmp
sbb
into
stos
fdivr
add
jae
mov
loope
and
or
dec
test
cmp
pop
pop
pushf
bnd
sbb
testb
test
cmp
dec
cli
fadds
cs
outsl
lods
xchg
jg
lahf
test
sub
icebp
arpl
fcomp
dec
aas
xor
out
mov
adc
cmp
dec
test
clc
pop
mov
into
pop
dec
jnp
push
lret
push
cmp
pushf
sub
mov
push
ret
mov
jge
shrb
test
rolb
add
add
add
mov
je
lcall
push
pop
out
repnz
sub
pop
push
mov
hlt
js
cmp
ficomps
sub
mov
mov
rcl
loop
cmp
or
scas
shll
pop
push
pushf
xorb
mov
leave
arpl
pop
adc
stc
decb
ss
outsb
aad
cltd
jne
ja
in
outsb
cli
loopne
sbb
add
cs
lods
xchg
push
mov
test
mov
data16
mov
or
mov
in
out
mov
or
mov
xchg
mov
sbb
xlat
mov
insb
mov
mov
jp
push
mov
cmp
dec
into
pop
xchg
xor
push
dec
into
popa
xchg
push
out
xchg
into
loop
dec
mov
jle
insb
loope,pt
mov
js
int
loop
out
inc
and
ret
adc
jge
cwtl
adc
test
inc
leave
int3
jge
icebp
dec
xchg
ret
add
add
sub
hlt
data16
jns
stc
jl
out
cmpl
bound
mov
adc
sbb
and
lock
cmp
popa
add
mov
outsl
push
mov
push
clc
sahf
nop
add
mov
in
nop
outsl
xchg
sub
data16
sbb
push
es
ret
pop
scas
mov
mov
mov
jmp
outsl
sub
and
stos
mov
loopne
lahf
cmp
jbe
or
inc
adc
and
test
cmpsb
clc
out
sub
fs
sub
loopne
xchg
lds
js
lea
fsubr
add
in
jmp
lahf
jle
dec
sub
or
add
add
add
push
loopne
add
and
push
inc
or
push
add
push
iret
sub
pop
mov
push
jno
cmp
mov
cmpl
lcall
cmp
das
imul
jmp
stos
out
pop
lock
scas
jge
ss
ss
or
add
and
shl
jmp
jle
sub
mov
loope
mov
loopne
enter
cs
cmp
xchg
pop
mov
inc
sub
fdivl
cli
pop
hlt
jle
xor
dec
shlb
push
mov
xor
sub
pop
hlt
mov
neg
lret
adc
pop
cmc
push
mov
cmp
jne
fnstenv
push
xchg
int
pop
xchg
cli
iret
adc
mov
pop
in
out
je
out
lcall
pop
dec
fdivrp
in
gs
mov
or
mov
xchg
dec
mov
lods
cs
dec
pusha
jge
mov
lods
xchg
cmp
into
rorl
push
pop
xor
enter
jne
xor
fcmovb
pop
or
pop
aad
test
or
sub
mov
std
add
cmp
push
call
xor
sbb
pop
inc
outsb
pop
es
lock
mov
outsl
jmp
inc
push
xchg
jge
sbb
pop
aam
cmpsb
insb
dec
movsl
fstp
mov
cli
sbb
pop
mov
ljmp
lret
dec
fcompl
push
mov
push
pop
or
jns
xor
xchg
adc
fbstp
add
arpl
and
in
test
push
sbb
int3
mov
int
push
adc
dec
cli
mov
incl
fwait
jbe
movsb
aam
add
add
add
nop
mov
mov
loope
pop
shll
push
cwtl
push
sbb
mov
lea
test
movsb
jbe
mov
mov
push
lock
std
pop
adc
mov
xchg
test
and
xchg
les
icebp
push
cmp
lret
jns
cmpb
loopne
sub
pop
sbbb
or
ja
inc
data16
push
xor
mov
insl
cld
andl
fcmovb
fsub
sub
adc
imul
rcrl
pop
cld
sti
pop
fidivrl
test
int3
pop
shrl
push
fcmovu
lock
xchg
cs
les
aad
adc
sti
and
jl
jb
arpl
ficoml
movsl
xchg
mov
mov
bound
push
popf
fadds
push
fs
xlat
push
cmc
popf
clc
and
orb
adc
ljmp
push
stos
sub
les
adc
add
jb
imul
movsl
pusha
shlb
in
cmc
xor
shlb
mov
mov
cmp
daa
mov
pusha
nop
push
mov
push
push
xchg
sub
add
arpl
jo
test
aam
mov
and
mov
jge
ljmp
pop
push
dec
jmp
jp
daa
das
aad
loop
stos
jmp
pop
jmp
adc
stos
cmpsl
mov
lret
sub
sub
cmpsb
in
pop
mov
ret
movsb
fildl
mov
push
in
sbb
push
adc
push
push
je
ret
sub
mov
inc
mov
repz
jmp
jno
das
mov
jns
fisubs
enter
lret
xorb
icebp
lret
cld
adc
out
jno
mov
add
out
add
xor
cmc
sub
into
fxch
mov
insl
cli
pop
mov
fsub
pop
loopne
or
repnz
pusha
mov
cmp
outsb
push
sub
mov
lods
mov
test
call
jge
sarb
cltd
mov
inc
and
mov
sub
stc
inc
xchg
xor
pop
add
int3
jmp
shrl
mov
mov
pop
idivb
jl
adc
lret
jecxz
lods
idiv
stos
xor
lock
or
pop
nop
inc
int3
mov
xchg
call
pop
pop
pop
insb
add
jmp
imulb
nop
testl
aam
mov
push
adc
rorl
mov
adc
ljmp
adc
es
push
cltd
imul
lods
mov
imul
cmpsb
xchg
push
outsl
mov
push
roll
jnp
mov
sbb
cli
outsb
xor
push
cmp
lea
mov
jl
call
cmp
dec
and
xchg
sbb
sbb
loop
mov
and
mov
xorb
mov
outsb
cmp
fcmovnu
or
lahf
sbb
leave
fs
push
push
mov
cmpl
cli
jb
or
xor
pop
sbb
mov
test
inc
ds
test
aas
sbb
adc
mov
pop
push
mov
pop
pop
mov
and
les
insb
inc
push
shrb
nop
retw
addr16
call
shlb
loope
rcl
fistpll
iret
cli
jl
dec
pushf
and
iret
idivb
sub
or
fdivrl
and
cmpsl
add
add
fwait
imul
out
int3
or
ja,pt
inc
mov
mov
lcall
xchg
cmp
in
jp
jp
in
xor
xor
lret
jg
fadds
add
add
add
push
test
out
mov
adc
hlt
jmp
fidivl
jge
ljmp
movsl
icebp
mov
movsl
repz
out
stc
mov
sub
cmpsb
dec
sub
pop
mov
jae
jb
leave
stc
cs
mov
js
mov
insl
movsb
ss
scas
rcrb
jnp
or
adc
pushf
mov
fdivrp
push
sub
inc
ss
push
mov
cli
inc
gs
sbb
xor
pop
jnp
faddl
outsb
dec
ljmp
xor
pop
mov
cli
xlat
lods
shlb
xchg
popf
in
in
sbb
enter
dec
cwtl
push
push
sub
and
sti
test
and
add
je
lods
or
fdivl
movsl
mov
cs
lods
sub
add
or
nop
daa
addr16
xor
rcpps
push
aaa
call
lds
fcomp
aad
add
jbe
xor
mov
fwait
cwtl
and
fcoml
and
loope
and
cmp
gs
push
in
cltd
rolb
pop
push
mov
imul
inc
sub
fildl
and
stos
fbstp
mov
pop
mov
leave
jmp
inc
mov
adc
lret
xchg
add
mov
jb
cmp
cmp
sti
jae
push
addl
push
sub
shlb
aas
mov
lcall
xchg
pop
imul
or
jb
loopne
xchg
int3
test
mov
int3
sbb
or
icebp
cmpsb
mov
push
cltd
das
daa
lods
test
hlt
leave
push
dec
add
movsl
push
push
mov
scas
mov
xchg
lret
leave
sti
out
je
cltd
fdivl
xchg
out
xor
imul
lahf
loope
adc
lcall
add
add
add
mov
or
mov
mov
je
mov
in
cmc
inc
adc
cwtl
movsb
push
mov
lds
notb
sbb
dec
push
repz
inc
push
dec
dec
and
hlt
lahf
daa
xor
arpl
adc
fbld
mov
ror
sbb
fwait
adc
push
iret
stos
jp
jg
and
xchg
push
lea
push
fldl
push
inc
mov
mov
fstpt
mov
xchg
cmp
movsb
pop
sar
adc
inc
aam
dec
les
cltd
int3
mov
adc
mov
mov
dec
divl
xchg
pop
pop
dec
cld
cmc
mov
xchg
mov
xchg
pop
out
mov
xchg
enter
cmp
adc
mov
xchg
jns
sahf
lret
xor
ds
cmp
mov
lods
and
xchg
test
dec
pop
iret
jno
movsl
in
xchg
pushf
pop
orl
in
push
push
pusha
lock
rcl
sub
ss
ss
cmc
inc
jl
cmp
xor
and
add
jnp
adc
dec
push
cmp
sar
in
lretw
loopne
xor
push
mov
bound
dec
inc
lret
mov
dec
jl
ljmp
pushf
lock
mov
add
xor
pushl
out
sbb
mov
loop
add
icebp
dec
out
imul
incl
sbb
jg
js
and
mov
rorl
lea
push
push
hlt
cmpb
iret
daa
mov
lea
sbb
sbb
sub
pop
inc
push
sub
push
andb
mulb
inc
xor
cmp
outsl
and
push
push
mov
mov
idivl
or
faddl
add
add
add
aaa
sti
sub
pop
dec
pop
bound
sbbl
pop
mov
sub
hlt
jmp
jne
lcall
sahf
sub
push
mov
iret
call
mov
aam
mov
pop
shl
scas
std
clc
or
fsubl
push
call
ja
cmp
or
test
mov
xchg
subl
stos
ret
clc
sarl
xor
mov
push
adc
pop
mov
pop
in
jbe
push
cmc
iret
jne
int3
mov
aad
out
inc
xchg
pusha
xchg
dec
stc
out
aas
pushf
cmp
mov
jmp
push
out
mov
outsl
xchg
pop
sub
jle
inc
sbb
pushf
sub
jge
test
dec
jno
lods
inc
sbb
and
hlt
and
insl
inc
pop
in
sbb
sbb
pop
fists
in
icebp
leave
divl
sub
popa
pop
inc
mov
int3
test
add
or
sub
pop
mov
sub
cmp
xchg
inc
inc
sub
xchg
sbb
and
enter
and
std
loopne
and
or
lea
pushf
push
xor
gs
out
pop
clc
nop
faddl
lds
mov
sahf
jge
cmpsl
or
cmp
ret
inc
jo
lods
movsb
or
and
push
movsb
jle
and
ja
pop
mov
sub
rolb
adc
sub
push
scas
xchg
mov
and
dec
out
int3
mov
cwtl
sub
lret
andb
in
inc
inc
push
xchg
cli
gs
mov
xor
cmp
out
lods
jns
sti
and
sbb
lcall
xchg
and
cmp
fidivrs
sarl
mov
mov
mov
adc
fiadds
add
add
add
arpl
push
sahf
pop
das
xchg
mov
inc
sbb
sub
jp
leave
xor
dec
mov
cs
dec
mov
in
lret
mov
xor
lahf
mov
daa
dec
mov
repnz
xchg
xlat
xor
rolb
fs
jl
dec
or
xor
jmp
push
adc
lret
test
aas
insl
or
jo
loopne
mov
or
and
adc
loopne
pop
xlat
insl
push
sti
fimuls
and
xlat
pushf
xchg
in
mov
mov
adc
sub
mov
push
cld
out
into
shrl
add
adc
out
ljmp
les
cld
out
addps
dec
mov
mov
dec
dec
dec
sbbl
push
cmp
push
test
sub
rcrl
out
out
nop
mov
je
mov
pushf
jmp
ds
shrl
mov
mov
in
sbb
jns
mov
mov
leave
adc
mov
xchg
adcl
dec
mov
or
xchg
ja
sub
jl
pop
or
inc
sub
cmc
stc
push
lds
xor
pushf
dec
fisubrs
mov
in
in
cltd
pop
hlt
fisttpl
mov
mov
lret
cmc
add
in
insb
adc
push
sub
dec
add
std
fiaddl
and
js
shlb
cli
lea
loope
fs
jnp
and
and
subl
push
aad
and
jmp
xor
scas
jle
imul
sbb
test
push
push
sub
or
cmp
out
pop
mov
ret
adc
ja
imul
scas
ds
mov
add
out
add
xor
xlat
push
push
bound
pop
and
je
test
aaa
mov
cs
mov
mov
ljmp
xlat
lock
sahf
dec
daa
pop
les
pop
sbb
and
mov
cld
dec
int3
pushf
pop
pmulhw
mov
js
test
adc
mov
jl
iret
adc
jae
int3
mov
or
nop
push
mov
push
ret
dec
divl
lahf
inc
pop
subl
or
cmpsl
xor
fldt
push
bnd
pop
cmp
cwtl
xchg
insl
jl
jecxz
inc
push
cmpsl
add
pop
mov
inc
mov
inc
push
jg
sahf
add
sbb
call
test
add
jns
pop
mov
xchg
cmp
daa
xor
jl
js
xor
push
dec
je
mov
nop
dec
adc
push
jmp
push
pushl
xchg
scas
lcall
pop
insl
push
out
mov
push
sarl
xchg
push
ret
mov
loopw
mov
fsubrs
das
pop
test
aas
stos
fcmovu
xchg
push
mull
lahf
mov
je
jno
fistpll
sub
int3
adc
enter
lahf
leave
push
push
cmpsl
mov
lret
pusha
dec
mov
jbe
stc
xchg
jmp
leave
or
mov
push
jb
inc
sbb
xor
call
cmp
mov
jbe
repnz
sub
pop
inc
lods
out
push
test
idiv
enter
or
stos
ror
sbb
test
sub
mov
stos
push
addb
fs
push
sbb
insl
rcll
cmp
icebp
hlt
ljmp
shll
and
mov
jbe
add
dec
or
scas
jmp
arpl
scas
cmc
loope
add
add
add
jne
pusha
ljmp
repnz
test
loope
push
xchg
and
add
xchg
mov
jb
mov
fsubrs
xor
call
shr
push
push
jle
mov
inc
aam
or
xchg
add
cmp
adc
push
or
sub
adcl
sub
out
pop
mov
in
mov
leave
bound
sbb
mov
sub
ficompl
cld
xchg
xor
adc
shlb
dec
mov
das
sub
imul
dec
dec
rolb
push
jp
dec
xchg
pusha
xorl
pop
jmp
push
or
jb
movsb
mov
rcrl
sbb
enter
ret
lahf
xor
cmp
ja
stos
std
adc
mov
aad
rol
mov
push
es
out
cwtl
andps
dec
adc
clc
outsb
shll
pop
sub
and
outsl
or
aam
imul
mov
ret
dec
jmp
mov
inc
sti
xor
and
jae
mov
mov
jo
push
mov
cmp
xlat
vmread
and
adc
imul
push
ljmp
xlat
loop
push
push
cmp
sub
mov
insl
jns
nop
lea
cld
mov
or
stc
loope
pop
adc
cwtl
pop
fldenv
clc
hlt
push
jmp
lcall
add
pop
aad
push
inc
add
adc
pop
lret
dec
es
sbb
enter
addr16
inc
adc
shll
sbb
loop
mov
pop
leave
inc
and
movsb
loope
outsb
cmp
imul
scas
add
test
push
imul
hlt
fsub
add
out
add
dec
sbb
adc
and
cmpsb
aad
pushf
inc
mov
test
inc
push
leave
sti
in
fwait
loop
adc
inc
inc
or
inc
mov
call
nop
das
jb
sub
push
shrb
jnp
sub
mov
inc
mov
xor
pop
add
stos
stos
dec
push
imul
xchg
inc
or
lods
mov
aas
loope
xchg
fmull
jns
jno
sbb
rcrl
add
fcomps
mov
adc
rcrb
inc
cmp
sub
loope
ja
gs
pop
mov
jne
lds
lods
jnp
int3
pop
mov
out
daa
mov
mov
dec
in
outsl
sahf
sbb
jbe
adc
rcl
test
sbb
add
cmp
or
fdivs
pop
inc
pop
cmc
loope
iret
subl
roll
stos
cmp
outsl
and
xchg
push
sub
xor
jge
push
repz
cmp
mov
jg
in
mov
mov
jge
mov
cmpsb
stc
add
pusha
mov
std
pop
adc
in
imul
pandn
xchg
or
out
pop
stos
scas
pushl
jp
pop
dec
dec
adc
cltd
pop
cmpsb
movsb
mov
inc
xor
push
push
pop
test
dec
mov
fwait
lahf
push
jmp
cli
cmpsl
and
pop
jecxz
shl
enter
in
ds
sub
out
addr16
sbb
pop
cmpsb
lods
pop
in
into
fmulp
pop
cwtl
sbb
jne
negl
adc
mov
cmpsl
jae
icebp
dec
mov
ds
pop
fwait
push
ljmp
or
cmp
add
movl
lret
popf
pop
xlat
aaa
add
arpl
push
or
ret
in
add
add
add
adc
sbb
xor
addr16
sbb
push
xor
add
cltd
std
out
pushf
xchg
imul
mov
sub
jo
jb
rcrl
mov
push
mov
sahf
or
call
ja
lret
sbb
aam
inc
mov
pop
push
dec
jg
dec
sub
xor
mov
push
pusha
mov
or
xor
adc
aam
in
negb
mov
xchg
dec
enter
xchg
inc
jb
sub
frstor
les
gs
or
push
push
bound
es
push
inc
lret
xchg
scas
adc
ret
inc
adc
int3
negb
stos
add
jno
std
adc
xor
jbe
mov
aad
cltd
pusha
inc
jl
dec
mov
dec
das
in
cld
push
mov
cmp
push
stos
in
cltd
andl
icebp
inc
push
in
movsb
adcb
cmc
lods
imul
or
or
dec
mov
push
js
imul
sub
repz
fisubs
cmpsl
cmp
mov
loope
lock
pop
int3
push
movb
repnz
cmp
dec
stos
cli
jns
inc
fsubl
or
push
enter
push
cld
xchg
pop
cmp
orb
fisubrs
lock
js
adc
cmp
lock
pop
cld
lret
fistl
enter
es
scas
in
imul
push
sbb
dec
sub
mov
sbb
xor
mov
push
addl
sbb
mov
cmp
jae
pop
xchg
push
int
roll
loope
cwtl
pop
mov
vdivsd
ss
fadds
out
jg
test
sti
push
push
call
lret
xchg
cltd
nop
xor
fsubrl
arpl
cmpsl
stos
test
add
call
pop
out
and
js
stos
out
add
add
add
mov
push
cmpsb
xor
stos
pop
iret
lahf
xor
lea
orl
cwtl
xor
pop
jnp
push
sub
cmpsb
aad
or
xchg
and
fists
sbbl
mull
xor
push
pop
xor
imul
xor
mov
cmp
in
das
cs
or
and
lahf
std
mov
jle
push
iret
lock
jne
and
cmpsb
call
addr16
add
pop
sub
lock
adc
adc
xchg
and
sbb
dec
jge
into
cwtl
cmp
inc
daa
rcrb
sub
xor
lret
shlb
movsb
loop
cld
xor
xor
push
sub
imul
add
xlat
xor
loop
popf
jb
inc
adc
pop
movsb
sahf
lods
lds
ret
mov
rclb
lahf
cwtl
xor
addr16
or
cld
inc
xor
inc
out
inc
inc
xchg
add
ds
jb
add
inc
lea
sbb
push
scas
pushf
adc
shll
push
xchg
push
and
or
xchg
jbe
ficoms
mov
lret
and
dec
jge
sub
or
lods
add
xchg
add
int
adc
enter
ret
cmp
cmp
lock
cwtl
les
arpl
cmp
mov
fbstp
or
mov
xchg
dec
imul
inc
cltd
inc
lret
xchg
xor
std
popf
pop
inc
dec
iret
loop
mov
cwtl
push
push
jns
inc
xlat
pop
adc
push
repz
mov
inc
jl
leave
out
call
cmp
jmp
cmpsl
imul
popa
clc
push
xor
movb
mov
data16
dec
imul
xchg
jmp
add
shlb
add
pop
stos
xor
repnz
adc
out
add
mov
pop
pop
into
loopne
enter
rorb
loop
and
mov
dec
nop
mov
dec
sub
shlb
sub
xlat
push
lcall
fdivrs
nop
jg
loope
int3
mov
pop
imul
xchg
dec
xchg
xchg
leave
add
cs
sub
stos
out
testb
sub
add
dec
mov
inc
fnstcw
mov
pop
movsb
jmp
xlat
pushf
push
mov
mov
stos
mov
sbb
sbb
jecxz
cli
movsl
cmc
in
sub
out
mov
and
lcall
ljmp
out
xor
fistpl
mov
sub
add
lahf
push
mov
push
xchg
iret
pop
xchg
dec
in
inc
js
sbb
rcrl
mov
stc
bound
in
mov
pop
nop
fdivrl
arpl
xor
shll
jmp
in
and
or
xchg
movsb
and
call
xor
dec
add
ja
and
mov
mov
shrl
xorl
dec
mov
xchg
addr16
jmp
fprem1
xor
nop
mov
test
and
je
jo
cmc
outsl
je
lret
mov
xor
or
pop
stc
sbb
pop
and
lret
xor
cmp
add
push
mov
xor
jecxz
push
adc
sub
inc
aad
fmuls
adc
adc
push
jne
or
inc
ret
out
fs
into
psrld
rcr
fistps
inc
andnps
add
out
add
subl
adc
repz
std
pusha
outsl
cmpsl
out
pop
pop
jb
test
insb
jl
lret
mov
mov
dec
xchg
sbb
and
cmp
imul
dec
xchg
repz
push
push
cmp
xlat
sub
imull
ret
add
test
mov
mov
idivl
call
fs
push
inc
mov
xchg
cmpsb
stc
repnz
inc
fcomi
mov
lods
sub
adc
aas
pop
mov
jae
ret
xchg
mov
mov
fnstcw
in
dec
insb
bound
lds
pop
cltd
push
xor
xor
or
std
int
stc
shl
insl
xchg
fwait
cli
push
leave
mov
add
inc
and
xor
mov
aam
pop
mov
jno
xor
movsb
mov
xchg
xchg
aas
mov
lcall
inc
inc
movsl
mov
movsb
adc
das
outsb
ss
mov
mov
into
stos
jecxz
rorb
arpl
mov
fldt
xlat
and
inc
cmc
mov
cmc
scas
or
in
sub
pop
cmp
lds
push
xor
rorl
inc
xchg
insb
ja
xorl
in
jnp
dec
adc
imul
loop
jp
lahf
scas
mov
imulb
test
imul
iret
mov
popl
cmp
cmp
push
rorb
clc
mov
xor
cmpsb
nop
mov
and
cmp
inc
mov
pop
push
and
jno
push
mov
push
lret
movsb
outsb
loopne
out
enter
inc
push
push
xlat
loop
xchg
jmp
mov
out
in
lea
sub
out
cmpsl
into
mov
pusha
pushf
pusha
pushf
cld
cld
mov
aaa
or
in
add
out
add
fldt
pop
push
push
lea
roll
pop
adc
mov
aam
push
pop
push
popa
adc
and
and
shlb
xchg
gs
sub
add
pop
sarl
pop
cmpsl
leave
mov
out
das
cmpsl
push
adc
mov
sarb
in
jo
sub
ljmp
out
movsl
fisubrl
stos
or
push
push
dec
aad
cld
insb
sti
xchg
mov
je
loop
and
test
xor
and
jg
mov
cwtl
pop
and
fcomps
jmp
mov
pop
scas
xchg
enter
and
ret
ffreep
loop
aam
and
loop
pop
inc
pop
jne
out
fmul
repz
enter
data16
adc
adc
daa
jmp
dec
xchg
clc
ja
adcl
pusha
loop
and
ss
std
xor
xlat
orl
and
fs
aas
cltd
and
jl
dec
or
push
sbb
test
add
inc
or
and
test
dec
jle
das
in
int
inc
jno
mov
lahf
sub
xor
mov
or
adc
pop
std
and
or
mov
or
add
or
lock
or
loope
fs
or
pop
jne
pop
xchg
mov
jbe
cmp
jg
xchg
jo
pop
cmp
cmp
insb
jno
xor
mov
jle
les
push
cmp
repnz
cltd
or
in
adc
imul
loope
subl
cmp
daa
dec
ja
cmc
or
in
cmp
or
ret
jg
mov
sbb
adc
add
out
add
cmp
dec
cmpsl
mov
mov
add
xchg
push
leave
mov
mov
roll
clc
je
jb
xor
and
ds
out
xor
cltd
adc
out
stos
dec
jne
adc
movsb
mov
cwtl
add
push
cltd
sahf
movsl
jmp
test
sbbl
adc
push
fmull
push
aad
fnstsw
push
subl
imul
dec
nop
addr16
popa
dec
xor
pop
pop
shrb
xchg
dec
je
or
mov
xor
lret
xor
or
lahf
cltd
repnz
out
cwtl
and
sarb
stos
or
test
xchg
xor
lcall
outsb
notb
mov
or
loopne
xchg
adc
inc
cli
test
leave
divl
iret
cmpb
inc
xor
adc
or
xlat
mov
sbb
pop
push
arpl
push
incl
xor
inc
stos
xor
cmpsb
test
jle,pt
sub
dec
push
cli
aam
inc
pop
or
pop
xchg
out
sar
xchg
pop
das
fisubl
out
mov
js
mov
bound
lret
repz
push
mov
xor
xchg
repnz
adc
or
outsl
gs
jb
test
es
sub
nop
cmpl
mov
addr16
adc
loopne
call
fisubrs
inc
add
aam
dec
imul
sbb
sbb
fxch
push
and
bound
nop
arpl
pop
mov
in
jmp
inc
add
xchg
jg
mov
mov
pusha
mov
push
jge
fld
int
enter
aam
shrl
lods
and
xor
push
test
out
xchg
sub
or
inc
xchg
dec
xchg
dec
into
adc
sub
add
add
xor
sub
fwait
or
xchg
add
jb
add
scas
mov
inc
ret
adc
incl
jns
inc
test
mov
cmp
in
pop
mov
in
push
push
adcl
pop
mov
sbb
push
sbb
insb
cmp
xor
iret
jno
mov
or
fcomps
js
push
push
idivl
arpl
nop
jae
jp
add
adc
aam
xor
push
dec
push
outsb
xor
dec
xchg
inc
adc
ror
in
icebp
push
adc
in
loopw
daa
mov
inc
lods
mov
nop
cmp
aad
arpl
mov
inc
addl
lock
fcmovnu
push
mov
lcall
mov
cmpsl
mov
leave
ljmp
jmp
ret
push
ret
sarl
cmc
mov
sahf
pushl
sbbl
adc
outsl
xchg
fldenv
popl
maskmovq
mull
cmpsl
adc
jg
cmpsl
aaa
in
mov
cmpsl
add
movsl
pop
mov
andl
repnz
mov
pop
or
pop
out
data16
add
in
aad
sti
std
fldlg2
cmpsb
pusha
pop
jns
aas
out
pop
ja
and
out
add
imul
cmp
les
hlt
inc
mov
sahf
in
dec
mov
cmp
in
and
or
ja
jp
mov
fs
gs
xor
mov
nop
sbb
lret
mov
psraw
scas
jge
cmpsb
lea
mov
fisttps
push
sub
nop
imul
daa
fcmovbe
xor
dec
push
cltd
pop
int3
hlt
shl
pop
mov
icebp
jmp
push
or
lea
add
and
jg
push
mov
outsb
popa
xchg
add
add
add
lret
jmp
imul
and
pushf
mov
sbb
out
movsb
and
push
mov
cwtl
or
stos
cld
imul
shr
aam
jg
lcall
cmp
es
das
adc
in
xchg
insb
adc
xor
mov
in
pop
jmp
fsubr
mov
fs
leave
out
cmpl
jne
dec
lods
sbb
jne
pop
dec
lcall
scas
jge
jl
sub
cwtl
aad
incl
mov
jmp
sbb
movsl
xchg
adc
pop
sub
xor
roll
imul
adc
mov
ret
or
bound
jb
mov
les
lret
mov
shll
roll
push
and
add
in
pop
lods
lret
push
pushf
fwait
scas
adc
stos
mov
sbb
in
cmpsb
mov
jne
xchg
movsb
sarb
cltd
cwtl
clc
pop
ja
pop
xor
dec
inc
je
xchg
mov
xor
mov
jecxz
push
div
xlat
cmp
stc
hlt
aas
push
ror
gs
lods
arpl
test
icebp
adc
popf
loopne
not
sbb
sahf
je
jne
pop
out
mov
mov
sbb
push
add
mov
and
jle
jg
imul
fdivrs
adc
fwait
dec
stc
or
icebp
daa
xchg
xor
ljmp
test
sub
pop
mov
jmp
push
bound
adc
cltd
nop
ds
jb
cmp
repz
inc
mov
push
lret
lcall
sbb
or
mov
mov
xchg
and
outsb
mov
fldenv
sbb
add
mov
push
mov
jp
filds
sub
jnp
sti
mov
in
cmp
sub
out
add
sti
sub
inc
sbb
xchg
dec
mov
push
rcll
ret
jp
push
dec
sub
cltd
xor
inc
ja
mov
sti
xchg
jp
cli
scas
pop
dec
jl
adc
mov
shlb
divb
loop
add
xor
and
cmp
ljmp
movsb
pop
iret
xor
shrl
xchg
stos
push
jo
mov
mov
dec
icebp
cltd
cmp
push
or
das
jmp
popf
dec
shrb
sub
xchg
dec
push
xchg
mov
mov
add
xchg
test
aad
sub
incl
pushf
lock
pop
cmp
inc
imul
out
insb
sbb
aas
jmp
repz
sub
mov
mov
test
arpl
inc
or
xor
out
fcoml
mov
ds
xlat
cmp
lds
flds
add
and
andb
push
test
mov
outsl
out
dec
data16
ret
add
rcrl
push
pop
push
xchg
push
div
icebp
idivb
test
push
lcall
mov
loope
gs
push
lds
lcall
xlat
or
and
mov
jne
in
cmpsb
xor
adc
jae
dec
pop
fisubrs
imul
mov
aas
xchg
add
mov
iret
push
xchg
cmp
or
and
xchg
dec
pop
cmpsl
and
arpl
popa
add
testb
jl
outsb
jge
mov
or
loopne
add
pop
push
mov
cld
nop
daa
dec
inc
cmp
scas
ficoms
push
imul
ret
std
imul
movsb
fwait
xor
inc
lea
mov
cli
jnp
mov
fbstp
fs
rolb
testb
fadds
add
rorl
jmp
addr16
lcall
jne
sub
inc
and
push
xor
add
push
lahf
lret
xchg
jbe
fs
test
adc
or
pop
pinsrw
lea
cmp
test
ror
xchg
or
imul
ljmp
xchg
sub
lods
push
call
shlb
loopne
sti
mov
xor
fisubs
jecxz
outsl
and
push
dec
cmpsb
cmp
pop
xor
shl
push
addl
fildll
rcll
pop
pusha
push
aas
hlt
sbb
into
xlat
loop
mov
pop
jnp
mov
dec
orl
jle
cmp
jmp
rcrb
sahf
adc
add
xor
sub
ret
xor
xor
mov
adc
test
in
in
xor
mov
push
cli
pop
popf
cld
xor
fbld
imul
pop
in
dec
test
xchg
sub
xchg
fwait
jbe
fistl
pop
push
call
rorl
mov
dec
mov
adc
iret
mov
inc
mov
clc
js
pop
loopne
cmp
xchg
cltd
xorb
mov
push
pop
inc
ja
adc
cmp
or
push
js
inc
ror
out
inc
dec
push
cmpsb
lods
adc
dec
inc
into
and
xor
call
inc
adc
loopne
jle
rolb
inc
jo
pusha
jb
sbb
pop
repz
das
ret
cmpsb
data16
add
xor
aad
xor
sub
sbb
popa
adc
scas
mov
sbb
