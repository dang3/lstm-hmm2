push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
jne
addl
push
push
call
test
jne
addl
push
sbbl
push
adcl
push
call
xorl
test
movl
jne
push
andl
push
adcl
push
sbbl
call
sbbl
test
jne
addl
push
push
call
orl
test
jne
andl
push
subl
push
call
xorl
test
movl
je
sbbl
xor
movl
jmp
movl
dec
mov
movl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
decl
mov
movl
not
lea
sbbl
mov
mov
add
mov
lea
inc
mov
adc
mov
and
mov
mov
mov
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
movzwl
add
xor
movzbl
xor
mov
subl
add
movl
mov
mov
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
adc
add
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
add
xor
movzwl
or
add
adcl
mov
and
mov
mov
orl
mov
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
mov
neg
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
sbb
mov
movzbl
add
mov
mov
xor
mov
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
sub
mov
xor
subl
add
movl
jmp
mov
mov
xor
andl
lea
push
mov
orl
xor
orl
lea
push
mov
addl
pushl
subl
call
and
mov
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
lea
sub
mov
mov
movl
xor
addl
xor
add
sbbl
mov
adcl
xor
lea
movl
mov
cmp
jbe
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
mov
mov
sub
movl
mov
mov
sbb
mov
push
adc
mov
xor
mov
andl
push
or
mov
sbbl
add
movl
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sub
mov
xorl
mov
jmp
inc
stos
pop
mov
mov
roll
add
jp
sub
cmp
popa
dec
gs
lea
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
test
adc
cmp
dec
pextrw
loope
movsb
out
mov
sbb
scas
push
imul
mov
cwtl
subl
and
dec
ds
arpl
das
xor
data16
cmp
dec
fistpl
scas
fwait
sbb
dec
in
adc
fldl
push
pop
std
lcall
mov
push
pop
test
dec
jb
mov
lret
or
and
sbb
shlb
inc
in
xchg
xchg
les
cmp
dec
push
out
push
pop
mov
push
pop
jle
push
sbb
dec
cmpsl
notl
pop
jns
push
jmp
hlt
pop
ret
sbb
inc
std
leave
cli
xchg
ror
rol
mov
mov
pop
pop
cmc
and
das
mov
sub
pushf
xor
out
loopne,pn
push
mov
scas
xchg
mulb
jl
ja
scas
loopne
loopne
push
out
adc
xor
sub
push
ret
inc
xor
outsb
xor
mov
or
mov
cmp
rorb
sub
mov
jb
mov
fistpll
in
in
movl
rorb
and
iret
ds
testl
xor
adc
sbb
sbb
sbb
jae
push
push
xor
sub
xchg
out
fsubp
sahf
xchg
push
hlt
push
popf
test
xchg
jmp
fcoms
sbb
bound
inc
fisttps
cwtl
inc
cli
adc
xchg
outsb
call
stos
aad
add
fisttpl
rcrb
ljmp
imul
cmpsl
je
fstps
pop
sub
mov
stos
inc
or
xchg
add
push
and
es
pop
inc
call
js
and
movb
mov
shll
and
add
xor
mov
movsb
clc
jo
test
mov
pop
sub
inc
fcmovu
push
cs
shl
test
loop
mov
nop
sub
add
jbe
repz
xor
mov
add
not
nop
sbb
jne
jne
dec
add
cmpsl
push
mov
test
xchg
imul
and
dec
out
rcll
pop
dec
aas
inc
std
sbb
lds
push
add
mov
dec
cmpsl
je
outsb
sub
jns
mov
push
push
sub
in
push
dec
daa
icebp
push
es
cmp
and
pop
adc
cmpsl
outsl
push
sbb
leave
leave
popf
out
pop
cmpsb
mov
mov
or
pusha
jne
push
jg
dec
mov
jnp
add
mov
lods
mov
inc
xchg
shld
loop
push
xchg
dec
mov
test
jbe
mov
sbb
inc
jnp
shlb
loope
rcll
inc
xchg
fs
fldt
fnstcw
stc
nop
fisttpl
inc
incl
scas
fdivrl
scas
adc
pusha
mov
sbb
mov
xor
sub
mov
cwtl
test
jns
mov
mov
add
imul
dec
test
shlb
jecxz
aas
orl
cmp
cmpl
mov
jle
mov
jp
es
add
dec
sbb
dec
xchg
or
add
sbb
addr16
out
in
push
inc
pushf
js
sub
xor
xchg
xor
and
cmc
cmpsl
ret
or
and
dec
fsubrl
insl
iret
dec
sub
jecxz
mov
scas
mov
fidivs
pop
out
mov
aam
int3
pop
cmp
hlt
pushf
inc
out
out
mov
in
xlat
icebp
int3
sahf
cli
ds
rol
loope
inc
add
insl
shlb
mov
xor
arpl
push
sti
and
lods
push
popa
aas
xchg
cmp
xor
sub
adc
pop
xchg
push
xor
xor
scas
xor
fldt
negb
aas
cmpsl
neg
xor
xor
cmp
push
lods
cld
fsubrl
cmovbe
mov
idivb
mov
out
pop
push
pop
mov
push
cmp
inc
mov
jmp
sbb
jo
sbb
sub
addr16
xchg
popa
push
rorb
adc
outsb
cmc
cmp
jmp
dec
pop
push
ficomps
or
pop
mov
adc
call
sub
add
add
inc
in
xor
mov
add
lock
in
sub
arpl
xor
xchg
adc
ss
add
sbb
jbe
lds
cltd
xchg
insl
call
jp
mov
dec
inc
ljmp
pop
jge
ds
fnstenv
cld
push
int
roll
outsl
arpl
ret
test
ds
or
mov
pop
negl
test
dec
loope
call
loopne
or
lret
aam
ret
cmp
sti
popf
sub
push
mov
test
add
add
jno
adc
cwtl
popa
mov
mov
jg
or
push
addr16
lcall
sti
sbb
dec
je
stc
test
aam
xlat
addr16
jge
pop
or
push
in
imull
arpl
aaa
rcl
jno
add
cmpsl
pushf
xchg
outsl
mov
jae
push
jl
lcall
lock
mov
jl
xchg
dec
jg
push
repz
jb
lret
mov
push
call
pusha
lock
cmp
sbb
mov
in
mov
add
push
pop
mov
fldt
xlat
xchg
mov
and
jp
fwait
push
std
xor
xor
mov
add
sahf
les
pop
enter
bound
dec
subl
push
dec
mov
call
cwtl
enter
adc
cmp
scas
sbbb
inc
push
cmp
push
inc
popa
fdivrp
mov
ds
test
jns
test
push
mov
cmp
insl
scas
pusha
test
xor
scas
pop
mov
mov
add
imul
clc
sbb
dec
insb
cmc
orl
jb
les
xchg
and
mov
jle
dec
push
sarb
push
jnp
and
adc
add
lds
es
rol
mov
sub
leave
filds
push
insl
mov
outsb
sbb
mov
xor
jbe
hlt
add
dec
xchg
cmpsb
jmp
and
mov
add
inc
pop
inc
loopne
push
lahf
dec
lds
scas
clc
shlb
mov
fisttpl
adc
sbb
add
rolb
enter
push
push
jl
imul
mov
cltd
bound
jle
pop
lds
popf
lea
sub
arpl
test
daa
xor
clc
fmulp
fadds
push
xor
subb
fisttps
call
scas
pop
jecxz
mov
dec
mov
cmc
jbe
dec
sub
xchg
sbb
shl
sarl
cmpl
push
sub
or
jg
pop
push
ret
mov
jp
sarb
stos
ret
cmp
lret
pop
mov
mov
pop
cwtl
or
movsb
ficoms
push
xchg
or
fcmovnu
fisttpl
xlat
pop
add
mov
inc
jno
cmp
hlt
lret
push
fmull
repz
mov
push
adc
sub
xchg
sbb
jns
aam
js
or
mov
pop
pop
pop
jl
mov
push
pushl
lcall
dec
or
sub
mov
lret
loope
cmc
imulb
sbb
scas
enter
repz
sub
or
fmuls
fcoms
fistpl
mov
mov
mov
pushf
sub
and
push
mov
faddl
sub
xchg
or
aas
movsl
dec
ret
push
cmp
add
addr16
sub
cmc
lret
mov
subb
sbb
mov
repz
rorl
sub
cmp
fwait
inc
pop
jae
std
sub
jp
ds
or
and
imul
mov
bound
adc
cmpsl
sub
pop
or
sbb
int3
add
push
mov
lea
in
andl
and
mov
sub
iret
sbb
or
xor
cli
cmp
dec
xchg
mov
setb
or
jo
mov
fwait
mov
mov
adc
leave
ss
cmpsl
inc
loope
push
cmp
push
fimuls
jne
xchg
dec
into
sti
fadds
add
mov
ja
xchg
int
lcall
hlt
inc
pop
xor
sub
popa
test
pop
fildl
cltd
jne
inc
nop
test
mov
movsl
orb
out
inc
xor
in
std
scas
icebp
fwait
xchg
loopne
and
jno
pusha
jb
pop
fsubr
xor
add
mov
cmpl
sub
inc
adc
mov
andb
repnz
adc
movsb
xor
jge
mov
ljmp
mov
mov
test
add
mov
add
mov
fisttpll
pop
sarb
insl
mov
mov
push
cld
dec
insl
insb
fstps
int3
lock
ljmp
and
mov
insb
inc
jl
adc
lahf
lret
lret
cmp
dec
push
dec
loopne
mov
movsl
push
mov
and
cli
cmp
mov
stos
jle
mov
sti
mov
pop
xor
dec
xor
cmp
and
mov
nop
sbb
cmp
xor
mov
jae
jg
jae
fsincos
stc
add
repnz
mov
iret
adc
stos
mov
mov
or
xor
divb
inc
cmp
jmp
mov
scas
testl
test
inc
lods
arpl
in
mov
insb
adcb
mov
cltd
divl
clc
ds
add
mov
inc
push
sahf
pop
xchg
das
outsb
stc
pop
jnp
cmp
or
dec
ds
cmp
nop
das
cmpsb
inc
jge
cmp
gs
sahf
outsl
andl
sub
jp
pop
push
pop
leave
xchg
cltd
mov
ljmp
and
outsb
add
cmp
sub
call
jecxz
and
sbb
add
mov
mov
out
mov
icebp
sti
mov
imull
mov
mov
imul
jmp
cld
shl
inc
inc
fstl
dec
sub
and
loope
push
push
mov
outsl
popf
dec
mov
xlat
xor
pop
jb
sub
inc
js
add
cmp
inc
pop
or
sti
mov
sub
mov
push
jmp
mov
jl
imul
dec
cmp
pop
adc
sbb
into
insb
repz
popf
jbe
cmpb
into
xor
adc
inc
cmp
and
adc
mov
out
pop
mov
sti
jnp
inc
inc
xchg
shrl
insb
or
add
mov
push
fstpt
js
push
ror
jecxz
xchg
aaa
nop
fimuls
leave
cmp
mov
das
inc
adc
add
jle
cmp
cld
ja
xchg
int
cmp
cmp
nop
lret
xchg
dec
push
inc
add
test
ds
lret
pop
jmp
adc
add
test
fimuls
inc
subl
sahf
movsl
imul
dec
sahf
call
jae
in
decb
cmp
test
das
orb
ja
and
lret
inc
test
orl
sub
in
les
sbb
loop
inc
movsl
xchg
insl
push
push
leave
adc
sbb
sahf
mov
xor
pop
mov
pusha
xchg
int
pushf
lods
je
out
fmull
sahf
fcmovnu
jmp
mov
sarl
inc
sub
js
sahf
cmpsl
xchg
push
fisubrs
scas
pop
pop
arpl
inc
adc
xchg
push
or
mov
and
mov
jle
test
fildll
push
rorl
sbb
cmp
gs
add
sub
in
inc
mov
jbe
rclb
jne
jp
dec
inc
or
add
clc
insl
fisubl
add
ret
cmp
xchg
cs
adc
neg
pop
mov
push
push
push
sub
call
jmp
sbb
adc
jmp
out
cwtl
popw
loope
push
cmp
dec
mov
arpl
je
adc
dec
test
mov
mov
dec
push
jecxz
call
int
icebp
popa
repz
enter
sub
inc
test
pusha
sti
arpl
fcompl
std
mov
xor
subb
and
pop
popf
pop
sbb
mov
mov
icebp
dec
cmc
popa
or
adc
mov
movsl
rol
sbb
stos
loope
push
add
sbb
hlt
test
fcomi
les
cmpsl
bound
mov
pop
and
xor
popa
inc
dec
ficomps
arpl
push
aas
mov
adc
mov
hlt
cmp
dec
add
add
aaa
test
and
dec
add
sbb
jb
sbb
pop
jno
idivl
mov
push
jbe
xor
loopne
xor
into
stos
push
bound
in
pop
fldenv
mov
mov
out
add
es
sbb
cmc
or
cmpsb
pop
loop
fldl
jecxz
xchg
lcall
fidivs
data16
sub
clc
sub
jg
jge
pop
xor
or
ss
iret
push
and
jecxz
pop
scas
or
mov
pop
addl
xorl
int3
xor
add
rcrl
mov
dec
sbb
jns
neg
sbb
sbb
in
stos
inc
mov
ljmp
cltd
repz
sub
and
leave
adc
sbb
pushf
jno
sbb
add
mov
cmp
std
fwait
mov
xorb
push
inc
inc
loope
push
xchg
aas
leave
out
mov
add
inc
or
fwait
xchg
fidivrl
cmp
fcmovnu
repz
mov
or
repnz
out
cld
scas
popf
inc
mov
int3
push
pop
mov
pop
pop
lcall
ror
je
hlt
cld
cmp
pop
mov
outsl
mov
movsl
cmp
mov
and
xchg
fistpll
addl
popa
mov
scas
or
cmp
clc
push
push
movsl
jecxz
sbb
add
insb
cmpsl
pusha
dec
xlat
mov
lret
xchg
adc
or
lea
jmp
test
cmpsl
sti
leave
mov
call
mov
jb
push
sub
insl
pop
inc
sub
jecxz
xchg
sbb
out
addr16
les
mov
popa
add
je
lahf
rolb
lods
es
je
mov
push
pop
test
inc
pop
push
mov
mov
mov
push
pop
jg
nop
test
jb
xchg
xor
ds
stc
cmovns
adc
xlat
call
dec
xchg
mov
pushf
je
mov
jnp
or
and
pop
fisttpll
mov
popa
inc
add
mov
out
inc
lcall
xor
roll
push
inc
xor
pop
dec
mov
ret
rcrb
fstl
iret
jmp
roll
das
add
jg
shlb
jl
pop
shrl
jg
push
mov
xchg
daa
push
lods
out
xor
shl
decb
aam
lcall
pop
ficompl
dec
mov
add
js
adc
jnp
push
mov
hlt
cmp
sbb
xchg
xchg
testl
mov
mov
outsl
inc
add
xchg
out
and
mov
dec
mov
pop
lods
mov
xchg
hlt
shlb
fwait
pop
lea
adc
int
pop
xchg
mov
and
and
jne
mov
pushf
jnp
ret
ss
add
test
and
out
or
dec
jg
ja
mov
into
mov
test
ds
loope
pop
sub
lock
pop
sub
lret
dec
sti
ja
shlb
insl
adc
insb
imul
pop
xchg
jnp
shrw
add
addb
pushf
sar
push
or
daa
mov
cmc
xchg
subb
xchg
test
push
mov
inc
mov
mov
filds
fbld
xor
inc
and
push
inc
out
mov
pop
test
out
xorl
cmp
clc
in
pop
jae
push
jae
jne
mov
jl
jo
push
pushw
and
addl
les
push
and
loope
sub
jg
stos
iret
cmp
inc
lods
mov
ret
adc
cld
mov
lahf
lods
add
mov
mov
or
push
sbb
xorl
pxor
push
inc
out
test
sbb
push
leave
fldl
ja
or
xor
ret
test
add
scas
sti
test
add
sahf
out
in
xchg
add
dec
fnstenv
rclb
or
add
fcoms
jbe
pushf
mov
xchg
out
movsl
fwait
pop
repz
arpl
adc
stos
push
cmp
pop
ljmp
jbe
pop
insl
cmp
add
insl
sbb
cmp
add
dec
dec
dec
lret
inc
xor
push
mov
stos
push
cmp
pop
test
mov
cli
cmp
xor
add
stos
sarb
jmp
cmp
out
cmp
sarl
jb
lods
push
sbb
sbbb
sub
mov
cmp
adc
or
div
sub
lret
cbtw
movsl
mov
mov
adc
jl
sahf
mov
insb
jns
nop
das
test
inc
int
repz
pop
inc
sub
gs
sub
ds
stos
lret
cltd
dec
outsb
imul
cwtl
xor
dec
aad
dec
mov
sub
jle
push
jb
dec
mov
xor
sbb
xchg
adc
iret
fnstcw
pop
loopne
fs
les
mov
hlt
jb
or
cmp
fisttpl
lcall
les
jnp
in
jge
adc
jnp
pop
mov
or
in
test
sub
es
negb
pop
movsb
push
and
lods
and
fcmovu
cmp
enter
mov
fsubrl
clc
dec
jmp
adc
arpl
ret
mov
push
push
pop
stos
ljmp
call
popa
cvtdq2ps
sbb
pop
addr16
test
push
inc
jecxz
or
notl
shll
in
pop
jge
loopne
mov
push
jmp
scas
hlt
xacquire
jp
xlat
and
jae
sub
inc
cwtl
mov
jecxz
mov
mov
pop
ja
aaa
outsl
add
pop
in
and
push
add
cmpsl
adc
xchg
push
mov
clc
and
and
adc
cmp
pmulhuw
add
in
pop
add
pop
jp
fnstcw
mov
push
mov
xchg
xchg
pushf
andl
cmpsb
cmpl
dec
push
scas
sti
dec
fs
mov
rclb
out
jnp
cmp
inc
push
adcl
and
dec
pop
out
fs
in
inc
mul
arpl
popf
loope
sti
xchg
xchg
into
jle
imul
sti
sub
ja
mov
enter
clc
ret
jecxz
mov
fnstenv
ret
mov
fs
xchg
dec
mov
and
xchg
and
dec
push
and
lds
popf
je
dec
jnp
adc
mov
fucomip
sahf
cmpsb
ja
adc
add
int3
cld
pop
dec
adc
loopne
iret
lock
pop
and
dec
imul
cmc
push
ret
fidivs
xchg
mov
je
mov
aaa
adc
sbb
repz
scas
push
mov
fcomi
pop
ror
adc
mov
sub
xchg
fs
andb
les
icebp
push
pop
mov
pop
mov
imul
cltd
pop
or
jno
cwtl
xor
movsb
fdivrp
sub
xor
jo
addl
jl
outsb
jp
jmp
dec
dec
push
push
and
bound
shr
clc
mov
xchg
or
mov
push
repnz
lds
insb
dec
test
jge
xchg
pop
test
inc
call
jge
jnp
pushaw
inc
loopnew
sarb
rcll
mov
jne
cmp
mov
aam
iret
jns
nop
inc
das
fsubs
jmp
fldl
xor
scas
add
push
mov
fidivrs
mov
add
lods
ret
lods
stos
mov
adc
mov
pusha
lock
pop
fs
loop
outsl
ss
ljmp
jl
adc
arpl
leave
cmp
adc
hlt
or
fcoml
jno
push
xor
and
scas
insb
rol
cmp
scas
inc
or
xchg
imul
lcall
rcrb
push
aam
cmp
cmovs
clc
not
cmp
ja
test
sbb
cmp
lock
sbb
adc
sbb
pop
out
les
sub
pusha
mov
inc
aam
stos
mov
cli
andl
mov
adc
jecxz
xor
pop
leave
fimull
or
pop
jbe
mov
lret
sbb
nop
stos
shrb
mov
mov
jno
mov
push
subl
dec
mov
pop
test
mov
xchg
pop
jnp
mov
aaa
aas
bound
xor
inc
cmp
jne
pop
clc
xchg
ja
and
mov
push
inc
jg
cwtl
push
xchg
negb
out
jo
cwtl
ds
sub
xor
ds
pop
xchg
fists
inc
mov
fbstp
inc
bound
imul
lods
cmpb
out
jmp
add
push
loope
cmp
pop
out
jmp
push
sub
call
inc
jle
lcall
hlt
cmpsb
push
sbb
cltd
mov
imul
ss
cmp
in
imull
std
mov
mov
aaa
jnp
cwtl
jnp
test
iret
fisubs
in
sbb
sbb
icebp
orb
mov
and
mov
fs
push
and
sarl
pop
adc
mov
enter
mov
mov
pop
push
popa
repnz
jo
add
outsl
cmc
mov
jbe
mov
cmp
jl
fldl
sub
jmp
lret
in
sahf
in
ds
lret
jge
dec
push
cld
addl
jo
cmp
xchg
hlt
add
xchg
mov
or
pop
pop
test
xor
xchg
jp
cmp
cltd
lods
lret
add
fisubs
cmc
cmc
xchg
mov
faddl
sub
mov
adcb
test
add
xorl
and
jmp
xor
scas
mov
sbb
fucomp
dec
clc
xor
mov
xchg
lcall
add
test
add
test
je
dec
inc
adc
in
pop
lods
xlat
mov
mov
shlb
xor
imul
pop
mov
pop
fucom
push
mov
cld
rolb
insl
mov
repz
sti
sbb
mov
fdivrs
in
fldenv
movsb
test
pusha
nop
sub
cmp
pusha
test
add
or
ret
inc
push
stc
lret
outsb
pop
pop
out
js
jp
test
lods
sub
and
sub
adc
pop
out
push
cmpsl
ficomps
jle
pop
sub
cmpsl
inc
sbb
loopne
and
lahf
add
fnstcw
stos
push
jl
cmp
cld
cld
add
sub
push
clc
inc
xlat
mov
mov
lock
mov
xchg
xor
ss
mov
out
and
iret
fisttps
mov
loop
jl
mov
add
dec
mov
popf
dec
fwait
push
pop
call
insb
xor
jecxz
pop
in
sbb
cmp
cmc
jae
sub
repnz
scas
dec
pop
popa
lods
stos
das
pop
popa
or
ret
std
cmp
xor
or
bound
mov
sub
jl
add
bound
mov
rcr
jge
cmc
stos
sbb
xchg
movsl
fistl
cs
xchg
push
ror
outsb
faddl
sub
movsb
adc
les
adc
cmp
dec
mov
ss
lock
aaa
gs
dec
andl
mov
out
icebp
int
mov
mov
sbb
push
test
push
out
add
or
xchg
or
in
push
shr
xchg
mov
out
mov
mov
mov
xor
lea
gs
sub
scas
cwtl
xor
sub
jns
ret
mov
fs
ret
fistl
subb
in
fbld
add
xchg
nop
jno
jmp
cli
push
gs
mov
cmp
or
jecxz
out
cmpl
pop
leave
insb
rclb
cmpsl
and
push
and
scas
stos
mov
jnp
imul
inc
addr16
or
jns,pn
pusha
adc
imul
notb
pop
pop
add
push
rcl
adc
add
scas
call
mov
xchg
outsb
sub
repnz
mov
ficomps
insb
fwait
mov
mov
movsb
daa
inc
rcrb
pop
adc
sub
loopne
mov
add
in
pusha
push
mov
push
mov
cmpsb
mov
xchg
adc
and
mov
pop
and
cmp
jl
repz
addl
fldl
lods
lods
mov
jle
ficoml
test
shrl
ret
rorl
fisttpl
stos
cmp
sub
mov
mov
push
addr16
inc
mov
pop
stos
sbb
loop
push
cmp
xchg
jle
jno
pusha
fsubs
and
or
fstl
push
fiadds
cmp
es
add
lahf
loopne
xor
loope
adc
imul
xchg
xchg
popfw
mov
lea
jle
hlt
aam
mov
ror
sbb
sbb
dec
fs
cs
js
and
add
mov
lret
sbb
and
cmc
lahf
icebp
xchg
cmp
inc
mov
sub
push
fmuls
dec
aad
inc
cmc
cmp
cli
and
movsl
divb
mov
test
push
lds
loope
movsb
or
mov
push
ret
ret
sbb
je
pop
mov
cmp
aaa
nop
sbb
movsl
hlt
xchg
sti
ret
xchg
ja
andb
das
lret
mov
or
es
pop
push
fisubrs
into
push
xorb
mov
mov
jnp
sti
push
push
and
and
loop
int3
sub
ret
or
fsubr
pop
js
push
or
fcmovne
vandnps
pop
cmp
popa
fbstp
loop
lea
push
mov
fisubrs
cwtl
xchg
addb
mov
sub
nop
inc
add
xchg
arpl
add
cltd
les
adc
cld
jne
sbb
pop
or
loopne
xlat
popf
daa
adc
mov
dec
stc
das
sub
push
pop
fisubrs
dec
cltd
cs
jb
lret
fcoms
mov
inc
pop
jnp
filds
adc
mov
or
xorl
lea
fistl
dec
add
lea
push
lds
lods
int3
sbb
or
js
jg
gs
adc
add
cmp
insb
push
mov
lods
sub
icebp
sub
das
shlb
mov
xor
rclb
sbb
and
sub
push
sub
sub
push
insl
xchg
imul
sub
mov
add
jbe
mov
ret
nop
mov
ljmp
aam
or
mov
out
adc
or
xchg
sub
mov
push
jecxz
mov
jle
sbb
sbb
mov
push
lret
es
shlb
dec
mov
dec
adc
dec
cmp
outsb
and
bound
test
sti
sbb
and
dec
xchg
dec
jne,pn
fdiv
mov
jbe
or
hlt
and
je
jg
outsl
rorl
xchg
mov
outsb
dec
mov
fistpll
cld
pop
out
notl
push
ficoms
lahf
cmpsb
test
in
push
roll
jbe,pt
ret
push
dec
dec
insb
adc
and
pop
cmp
xor
xor
pop
pop
cltd
pop
into
xchg
or
aam
jmp
sub
or
popf
or
stos
cwtl
lcall
ss
mov
popa
lods
pop
pop
popa
inc
pop
mov
and
leave
xlat
mov
sub
jbe
mov
jle
mull
in
movsl
pop
xor
lea
in
push
xchg
or
ror
aas
lods
xor
push
sbb
xchg
mov
movsl
pop
enter
adc
jne
icebp
aas
jecxz
or
and
xor
jg
shrb
std
jo
mov
cmpsl
pop
mov
call
leave
rcrb
ss
dec
mov
jmp
jns
and
mov
cmp
lahf
mov
setg
inc
cmp
shl
mov
jne
sub
lea
adc
pushf
pop
xor
xor
cmp
pop
jge
dec
push
lret
inc
jb
cmpsb
mov
dec
subl
lock
cmpb
lock
xchg
cs
mov
ds
jnp
imul
ss
call
or
std
dec
or
ret
fs
mov
xor
xchg
sub
int
push
scas
sti
insl
js
xlat
cmpsl
cmp
sbb
aaa
sahf
pop
ljmp
sub
sub
shll
jmp
lret
pop
loope
ret
std
imul
adc
inc
inc
out
repnz
cli
mov
aam
pop
jmp
add
lret
xchg
push
idiv
dec
sahf
mov
mov
cmp
ja
imul
jp
inc
dec
dec
jb
outsb
shl
adc
or
out
inc
xchg
nop
mov
mov
adc
pop
mov
fdivs
jge
aas
mov
jecxz
push
inc
test
dec
imul
or
and
push
cld
sub
xchg
cwtl
jb
outsl
dec
dec
stos
adc
dec
mov
mov
mov
add
imull
lea
lea
imul
fcomps
adc
inc
add
inc
add
lret
adc
inc
add
into
add
movl
adc
andl
xor
mov
push
add
xor
xor
sbb
mov
add
movl
adc
xor
orl
xor
movl
cmp
jne
cmp
je
jmp
or
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
subl
push
movl
push
addl
lea
push
subl
lea
addl
push
call
xorl
push
sbbl
jmp
push
xorb
es
and
pop
jp
add
jp
in
jg
repnz
pop
mov
out
jl
dec
xchg
xchg
push
loop
cli
adcb
add
jne
or
add
push
cmpb
fs
and
jae
xchg
mov
cmp
dec
cmp
xchg
pop
jae
xor
loop
into
in
cmp
lea
idiv
hlt
gs
addr16
mov
fstp
xor
std
mov
lahf
mov
fstpl
jle
aad
retw
and
insb
aad
sbb
mov
jb
lods
test
test
mov
cmc
test
mov
shlb
or
jmp
xchg
faddl
sub
inc
sbb
push
lret
mov
gs
jno
test
inc
in
mov
daa
lahf
push
mov
and
lcall
sbb
or
dec
mov
js
jge
lret
pop
xchg
sub
push
jnp
add
xor
inc
jnp
jmp
out
mov
xchg
dec
dec
push
cs
outsl
fadds
push
or
jno
cmp
mov
repnz
dec
test
test
sub
into
push
lods
ficomps
and
cld
loope
mov
xchg
and
test
pop
loopne
mov
into
enter
xor
inc
jb
mov
out
mov
sub
subb
push
inc
divl
cmp
pop
jbe
inc
mov
stos
andl
addr16
xchg
fdivr
pop
push
scas
xchg
xchg
sbb
lock
xchg
pop
icebp
dec
sub
arpl
sub
cli
dec
mov
mov
push
popf
clc
cmp
jnp
in
outsl
jno
sbb
nop
enter
push
and
inc
es
pop
and
loop
pushf
cmp
mov
into
fmuls
leave
pop
leave
enter
call
outsb
mov
adc
popf
push
push
sub
mov
movd
insl
test
xchg
jecxz
sub
mov
push
inc
ja
pop
mov
jle
imul
hlt
daa
imull
and
loope
cmp
test
and
shrl
out
sbb
xor
mov
inc
insb
int
jae
filds
adc
les
repnz
push
loop
scas
sbb
sarb
cld
adcb
sub
xchg
fsubr
mov
xor
loop
sub
mov
fimull
fiadds
fcoms
test
test
je
pusha
pusha
push
repnz
int3
imul
or
xor
in
fisubrl
loop
pop
movsl
int
rcll
pusha
or
and
je
and
xor
pop
loope
xchg
loope
pop
xchg
mov
mov
inc
aam
ficomps
out
lret
cmp
call
pop
add
xor
lods
pop
cltd
and
sbb
mov
xor
stos
test
daa
xor
dec
xchg
lock
mov
loope
bound
testl
movsl
jmp
xchg
push
ljmp
pop
clc
mov
cmp
into
adc
xchg
clc
jle
ljmp
xor
xor
jne
jnp
jo
in
leave
dec
test
mov
out
cmp
js
push
xor
sbb
test
out
push
adc
sarb
ds
int3
daa
mov
inc
xor
jge
popf
test
test
stos
mov
jns
scas
mov
stos
andb
sbb
cmpsl
xchg
push
dec
es
inc
shlb
pop
pop
lock
fisubrs
mov
inc
rcrb
int
scas
aas
jbe
jae
out
fildl
adc
hlt
pop
dec
mov
fsubp
dec
cmp
push
dec
shlb
sub
mov
in
add
fnstenv
push
call
xor
or
cmc
addr16
mov
sbb
mov
ret
lods
sarl
popf
sbbb
nop
xchg
and
loopne
jno
sbb
adc
and
xchg
jge
outsl
or
ret
sbb
xchg
xor
mov
xchg
cmp
sub
jmp
mov
cld
stos
scas
inc
les
clc
push
and
repz
add
outsl
and
cwtl
movsl
clc
movsl
sbb
popa
push
inc
pop
push
fsubs
pop
ja
push
fwait
iret
mov
push
cmp
jg
bound
movsb
xor
out
cmpsl
in
addr16
xchg
sub
xchg
add
pop
or
into
enter
sahf
sbb
hlt
pop
lahf
insl
mov
nop
or
pusha
sbb
add
shl
aam
arpl
jecxz
sarb
shl
jne
int3
push
adc
call
push
adcl
mov
mov
fstp
jl
sbb
or
lret
imul
or
movb
pop
icebp
sti
lock
or
mov
push
lcall
mov
or
seta
cmp
loopne
outsl
insb
or
or
xor
cmc
jo
push
xchg
nop
scas
hlt
roll
inc
movsl
loop
inc
fldt
inc
cmp
pop
mov
popa
adc
cmp
xchg
push
inc
dec
lock
jb
xchg
pop
xchg
cmp
push
inc
decb
test
hlt
jge
sbb
std
arpl
xor
mov
push
cmp
popf
cmc
inc
and
xchg
xchg
pop
sbb
jno
ss
rcll
pushf
lods
and
cmp
mov
and
adc
loope
fstps
or
jno
addl
xorb
dec
sbb
mov
jle
addr16
imul
push
out
fstp
mov
jo
push
jbe
push
clc
jge
adc
mov
sub
ret
lahf
outsb
push
lods
mov
sbb
data16
xchg
pop
inc
cmp
sub
movb
bnd
sbb
xor
ret
sub
cmp
fucompp
mov
dec
in
adc
cmp
push
iret
xor
sub
dec
adc
js
rcll
stos
movsb
add
sub
sbb
jle
sahf
inc
xchg
mov
cwtl
sbb
pop
movsb
repnz
arpl
mov
add
adc
movsl
out
cmpsb
out
stc
je
test
scas
hlt
lods
fstps
scas
mov
adc
push
daa
ja
int3
ljmp
sub
sub
dec
les
adc
std
adc
js
adc
js
stos
or
jle
xor
push
or
xchg
jb
inc
dec
outsl
xor
scas
push
push
ret
call
popa
cmp
push
scas
pop
sub
xor
pop
push
push
push
push
out
mov
sub
rcll
rorl
not
and
outsl
sub
aaa
push
mov
sub
icebp
clc
push
pop
fiadds
in
popf
fstps
push
ss
jo
mov
xchg
sub
mov
fs
mov
mov
jp
sbb
cs
test
insb
aaa
xchg
push
jbe
xor
mov
mov
sbb
rsm
xorl
lea
sarl
dec
and
adc
outsl
pop
mov
push
inc
inc
pusha
bound
aad
and
dec
push
outsb
dec
cli
shr
in
push
lret
nop
popf
or
push
jb
xorb
into
les
test
jg
imul
mov
xchg
scas
xor
jnp
push
mov
lret
add
push
push
mov
dec
sub
push
fstpl
jmp
fldcw
pushf
dec
scas
jge
ficoms
divb
adc
lods
push
pop
rcll
mov
push
int3
mov
decl
mov
in
and
mov
mov
mov
dec
sar
jmp
sub
push
sar
dec
out
sbb
ret
xor
sbbl
xor
and
push
ds
mov
pusha
mov
insl
or
mov
je
sbb
inc
sub
outsl
test
cli
push
pop
fldt
mov
xchg
pop
push
fucomi
xlat
xor
jecxz
pop
in
clc
mov
lds
lods
insl
jp
jnp
pop
xchg
pusha
and
xchg
xchg
push
and
inc
fadd
push
jmp
imul
mov
xchg
xor
loopne
cmp
fwait
sub
cld
sub
out
out
repnz
xor
fmull
inc
mov
mov
mov
dec
cwtl
jl
pop
idivb
shll
jmp
sbbb
jo
sbb
ds
aam
push
and
popa
jnp
push
data16
notb
int
jge
fwait
data16
hlt
mov
add
push
insb
mov
cld
loop
fsubl
aaa
scas
push
in
jmp
inc
pop
jo
js
cmp
mov
int3
test
mov
test
dec
xor
mov
int
jp
fiaddl
cmpsl
rcr
lock
or
cmc
pop
aaa
scas
inc
dec
cmp
xchg
and
in
sti
mov
xorb
xlat
jbe
bound
frstor
mov
lcall
sub
pop
scas
flds
jecxz
fsubrs
mov
negb
scas
jp
dec
and
leave
jbe
xchg
mov
shl
iret
jmp
adc
shrl
mov
mov
adc
shll
fnstsw
into
cmp
cmpsl
cld
xchg
adc
insl
repnz
sub
push
fsubl
mov
xchg
das
shll
mov
mov
pop
xor
aam
sub
push
adc
movsl
xchg
jmp
jle
test
pop
mov
inc
lcall
hlt
insb
xchg
inc
ret
rcrb
jmp
xchg
cwtl
ljmp
in
sbb
imulb
adc
mov
jns
or
aad
les
arpl
push
fcoms
dec
push
inc
int
sbb
insl
mov
mov
mov
bound
mov
pop
adc
lea
mov
cmp
sub
xchg
jne
sbbb
cs
adc
std
pop
xor
movsb
pop
sub
lret
dec
movsl
iret
paddb
leave
or
dec
je
sub
cmpsb
shlb
or
jle
mov
pop
js
jae
pop
pushf
mov
mov
leave
sbb
jne
aam
xchg
mov
repnz
or
test
in
dec
and
loope
adc
sbb
lcall
push
adc
add
xchg
aad
iret
out
or
mov
rcll
jmp
movsl
in
stos
pop
jne
mov
pop
xchg
inc
mov
sub
clc
shlb
cwtl
sub
dec
adc
stos
or
sbb
mov
add
stos
idivb
and
dec
adc
bound
push
jmp
aad
lds
mov
and
push
rorl
gs
xchg
scas
jge
adc
es
out
and
jg
stos
mov
push
fistpll
push
sbb
sub
dec
push
push
lret
cmpsl
sub
push
mov
shll
lds
lret
inc
or
imul
cmp
and
push
xor
inc
sbb
pop
mov
add
mov
pop
mov
cmp
je
mov
inc
repz
cld
js
aad
lods
je
mov
stos
and
lods
pop
mov
test
out
xchg
fsts
pop
out
das
rorl
int
sub
jp
mov
sbb
jae
stos
mov
pusha
sub
mull
xchg
mov
jl
lea
xchg
jns
sti
stos
xor
cmc
push
inc
rorb
insb
pop
pop
adc
jno
call
pop
push
lock
fbld
jb
sub
icebp
aad
push
inc
adc
out
sub
daa
jle
lahf
pop
out
sbb
jns
cmp
pop
mov
faddp
mov
fisubs
sub
lcall
inc
cld
mov
sbb
cmp
pop
push
mov
mov
push
lods
jb
sbb
jl
and
and
jge
cwtl
sahf
lret
mov
dec
xchg
adc
pop
int3
andb
add
cmp
xchg
ja
jp
movsl
mov
sbb
jnp
add
repz
dec
mov
repnz
rolb
mov
imull
es
fsub
pop
pop
mov
mov
dec
xor
pop
and
mov
dec
mov
out
inc
shrb
push
rcrb
push
insb
sbb
jp
in
mov
sbb
repz
aam
jns
rcrb
daa
inc
leave
xor
pop
sbb
js
sub
adcl
leave
repz
push
pop
inc
sub
mov
pop
push
dec
data16
push
or
std
mov
in
ljmp
cmc
push
inc
mov
or
inc
cmp
inc
mov
arpl
insb
ja
cmpb
cltd
xor
fsubr
fmuls
xorb
sbb
jge
dec
xchg
outsb
cmp
mov
push
and
dec
jbe
pop
xor
push
mov
inc
pop
aad
push
leave
out
xor
and
push
pop
xor
int3
lcall
mov
fwait
xchg
negl
lds
xor
pop
or
cmp
sub
pusha
fldenv
jnp
out
pop
popa
dec
inc
pop
mov
pop
dec
icebp
jg,pt
fsubrl
mov
dec
adc
filds
in
lcall
sub
pop
imul
push
popa
movsb
outsb
push
mov
and
jbe
and
cmpb
mov
adc
outsb
movsl
push
popf
imul
dec
jns
sbb
and
dec
arpl
lea
add
fimuls
jne
int
xor
stc
inc
mov
jge
into
ret
aaa
xchg
mov
loope
push
xor
sbb
xor
sbb
adc
in
adc
cmp
popa
mov
mov
cwtl
iret
movl
push
test
mov
sarl
mov
scas
les
fdivrs
fstpl
subl
hlt
jae
push
mov
dec
xlat
mov
sbb
dec
loope
pop
mov
mov
test
mov
mov
inc
out
add
int
pop
fldcw
data16
lret
popf
inc
push
push
in
lea
scas
ja
dec
popa
pop
push
pop
hlt
pminsw
dec
adc
and
jecxz
push
popa
aam
push
sbb
mov
test
jb
add
rcrl
loope
sub
loopne
cwtl
testl
jg
dec
loopne
push
adc
int
xchg
mov
cmp
insl
add
sbb
and
push
push
fbstp
int
xor
fnstsw
sub
xchg
hlt
inc
xor
inc
fnstsw
add
mov
adc
mov
mov
pop
rcrl
or
in
mov
lea
fwait
push
dec
adc
dec
stc
adc
or
xlat
fcmovnu
mov
cld
cmp
mov
ret
leave
movsb
jno
cmp
pop
sbb
lock
fucom
in
xchg
jns
inc
add
sbb
nop
adc
lahf
into
or
rol
std
stc
je
in
fsubrl
mov
lods
sbb
mov
push
xor
or
adc
adc
push
mov
xor
mov
stos
iret
push
push
mov
fs
pop
loop
cmpsb
and
xchg
sbb
add
mov
aad
vmread
out
fnsave
popa
mov
add
mov
mov
adc
ss
pop
dec
adc
pop
mov
mov
pop
lods
addr16
ja
adc
sub
stc
out
mov
mov
mov
xchg
inc
dec
jbe
mov
fwait
sbb
imul
int
jge
push
xor
pushf
ja
pop
fiadds
and
xor
movd
jb
dec
repnz
adc
dec
fisttps
ret
mov
movsl
leave
and
pop
add
mov
sarb
fiaddl
pop
jmp
sub
sarb
and
cmpsl
adc
or
rolb
dec
lahf
ja
push
sbb
test
mov
lret
or
mov
mov
out
pop
in
ja
mov
sub
cmp
mov
pushf
incb
cli
jns
jae
mov
repz
fbld
loope
or
rorl
ret
xor
sub
mov
ss
dec
add
lcall
sub
inc
cmpsb
andl
loopne
rorl
pushf
pop
stos
scas
movsb
xor
lock
fsubl
fisubrl
dec
andb
gs
mov
es
in
repz
inc
mov
fstl
scas
cld
jmp
pop
adc
das
aad
lods
test
gs
inc
sub
jmp
les
imul
icebp
sub
xchg
loope
cld
jl
mov
pop
lahf
or
mov
xchg
arpl
out
test
cmp
adc
movd
aaa
fwait
out
sub
jns
in
add
jmp
mov
push
jae
rolb
loope
cwtl
lahf
mov
in
sub
adc
jp
pop
aaa
je
bound
dec
sti
iret
adc
gs
mov
scas
push
pusha
lock
cmp
xchg
mov
lcall
punpckhbw
int3
mov
add
imul
movsb
jg
pop
sbb
mov
jge
lret
sti
cltd
pandn
lods
and
jo
inc
push
mov
lahf
sub
xor
shrl
fadds
lods
out
scas
clc
or
xor
addr16
xchg
mov
dec
sahf
int
cli
int
pop
cmc
out
lcall
pushf
or
push
call
pop
xchg
sub
pop
jge
subl
shll
push
scas
jmp
jno
cmp
or
cmpsl
repz
jmp
and
pop
mov
addr16
std
jecxz
cmc
xchg
out
push
push
fwait
xor
loopne
into
cmpsl
cmp
enter
dec
dec
inc
xchg
pushf
xor
loop
lret
addl
sbb
sbb
or
push
pusha
mov
mov
dec
cs
lret
imul
shlb
add
add
mov
xacquire
lock
jmp
jle
sbb
sahf
lahf
orb
cmp
mov
xchg
inc
je
xchg
enter
mov
push
mov
xchg
pop
test
popa
xor
aam
aad
mov
es
cmp
call
sub
push
mov
gs
xor
sbb
push
adc
mov
mov
cmpsl
push
mov
inc
inc
dec
jmp
inc
sub
hlt
mov
pop
mov
lret
mov
cmovns
mov
xlat
stos
mov
rcl
rolb
pushf
lret
ds
jb
lock
jp
fcoml
test
in
inc
fsub
push
adc
dec
das
insb
xor
xchg
push
pop
cmp
dec
mov
mov
leave
add
cmp
lds
mov
mov
in
mov
add
inc
push
cmova
jg
fstl
xchg
lcall
mov
sbb
imul
lcall
pop
xorb
xor
aaa
mov
jb
mov
pop
push
jmp
aam
add
inc
insw
and
cmp
xor
mov
lock
shll
orl
dec
mov
mov
xorl
clc
insb
in
lahf
pop
push
push
fstpl
iret
xor
lea
xlat
dec
mov
ds
addr16
sti
mov
inc
or
aad
sbb
mov
loope
ss
or
ret
icebp
mov
pop
rorb
loope
es
mov
test
jbe
sbb
cmp
or
fdivl
mulb
clc
inc
sub
sbb
in
add
inc
decb
pop
sub
je
fs
inc
mov
outsl
loop
insb
ds
int3
add
int
lock
test
xchg
add
in
xchg
mov
outsb
fadd
adcb
pusha
add
je
jbe
and
aaa
fidivrl
pop
pop
jmp
rclb
shr
pop
pushf
jecxz
cmp
lahf
push
cltd
sbb
scas
or
scas
inc
call
in
fnstsw
daa
cld
or
cltd
sbb
dec
xchg
das
cmp
jb
into
push
push
imul
leave
mov
dec
adc
or
sub
cld
cmp
xchg
and
divl
sti
jo
arpl
jo
xchg
pop
clc
mov
repnz
mov
mov
jo
pop
jno
pusha
int
xchg
movsl
adc
adc
add
sbb
out
mov
js
inc
fcoml
push
ret
fisttps
push
mov
es
scas
sbb
ds
push
jl
gs
sbb
xor
lds
or
outsb
dec
xchg
dec
mov
add
adc
lret
mov
test
and
jae
add
dec
mov
outsb
into
cmp
sub
js
push
dec
fcomps
jge
push
xchg
xor
idiv
push
mov
add
gs
in
addb
add
subb
or
or
xchg
mov
push
aam
push
out
les
lods
popa
jle
out
call
cwtl
cmp
xor
xchg
imul
jp
leave
pop
cli
push
bound
jecxz
test
insl
imul
out
dec
insl
add
cmpsb
adc
cltd
fdivrs
test
daa
shlb
cmp
jmp
rclb
arpl
imul
jo
inc
add
addr16
vsubss
bound
icebp
in
cmpsl
mov
or
xor
jle
xor
std
xchg
mov
pop
jg
adc
imul
sub
jae
mov
popa
jp
in
push
mov
push
jnp
sti
pop
mov
cwtl
or
sub
fstl
sbb
cmp
dec
or
aam
bound
dec
jo
repnz
and
imul
ret
outsb
es
mov
add
add
andl
adc
leave
cltd
out
jmp
in
add
mov
cli
fildll
mov
hlt
push
cld
pop
fs
xchg
iret
add
sbb
les
push
pop
int3
xchg
push
xor
sbb
addr16
add
sti
dec
addl
cmp
push
sub
ljmp
adc
mov
and
scas
lea
jmp
mov
jmp
aas
imul
lea
push
dec
lock
xor
mov
lret
or
mov
mov
or
shl
pop
adc
pop
mov
jp
das
xchg
pop
scas
mov
ret
out
sub
clc
arpl
and
xor
in
pop
or
fstpl
cmp
sbb
stos
andb
add
mov
sbbl
outsb
sub
push
lea
sbb
jecxz
and
sbb
pop
sbb
cmovbe
rcl
ljmp
lock
sahf
adc
lcall
mov
roll
push
xchg
push
push
out
jo
adc
les
or
inc
dec
pop
addl
jge
test
lcall
cmc
jo
cmp
cs
pop
out
add
pop
jno
jle
shll
out
enter
inc
cmpb
rcl
sub
js
add
loopne
or
xor
es
jne
xor
out
push
xorb
ss
xor
repz
jp
lds
test
mov
lods
test
jmp
out
js
ja
aam
icebp
pushl
icebp
fcomps
push
cld
cmpsb
imul
pop
xchg
insb
fnstcw
jae
xchg
add
pop
mov
inc
push
ret
push
popa
out
in
fsts
rcrb
in
add
add
xor
push
inc
je
repnz
gs
pop
mov
imul
loope
jae
sbb
sub
lahf
out
inc
push
sbb
cmp
mov
or
xchg
fsubrl
lods
cmp
cld
mov
adc
or
shll
adc
jb
ss
cmp
sbb
movsl
sahf
mov
adc
xchg
mov
or
ljmp
mov
xor
fnstenv
leave
daa
mov
inc
in
pop
lret
loope
mov
stc
lret
ret
iret
mov
mov
insb
dec
xor
push
adc
inc
and
out
aad
adc
incb
je
gs
and
daa
sti
enter
cmp
sbb
daa
movsb
mov
loop
call
loope
addl
inc
and
or
push
das
lds
arpl
sub
adcb
testb
dec
data16
and
add
jb
mov
in
inc
idivl
cli
add
fnstsw
mov
and
sub
or
jo
inc
fsts
outsb
adc
enter
cli
ljmp
fs
cmp
cmp
push
lods
movsl
mov
lods
pusha
fbstp
dec
or
imul
jnp
stc
andb
inc
mov
and
push
mov
inc
imul
cmp
popa
sar
into
nop
cli
sbb
push
lods
dec
ret
mov
jle
push
popf
jecxz
jg
cmp
xor
adc
xor
pop
bound
out
jnp
push
aam
jno
gs
leave
ds
pop
mov
jecxz
mov
xor
dec
fnstcw
cmp
mov
sub
int3
in
pop
fwait
insl
repz
sub
stc
cmp
repz
mov
test
lcall
arpl
jb
cmp
in
jns
movsb
fbstp
adc
add
bnd
lods
aad
xchg
jl
pop
add
mov
xlat
lret
pop
js
cltd
mov
mov
dec
pop
mov
xchg
outsl
push
andl
pop
bound
and
aaa
in
outsb
or
pop
fdivrl
jmp
rcrl
test
sahf
sub
adc
es
mov
mov
scas
xchg
push
adcl
shrl
push
xlat
or
test
addr16
nop
out
arpl
shrl
pop
aad
test
cs
push
cli
dec
mov
mov
push
andb
addl
outsl
cmp
and
pop
cld
outsl
or
dec
cmpsl
dec
mov
jecxz
faddl
dec
mov
pushf
adcb
int3
xlat
sub
mov
orb
jmp
inc
pop
cld
test
popf
int3
pushf
mov
sub
pop
lods
xchg
mov
sbb
movsl
mov
lret
ss
jmp
nop
pop
mov
rol
xor
adc
fwait
outsb
mov
out
push
cltd
inc
sarb
jbe
sub
loope
push
test
pop
jle
in
shrl
lahf
cwtl
inc
mov
fwait
pop
sub
cmp
pop
add
hlt
pop
xor
pop
mov
call
push
lock
sbb
mov
cwtl
sbb
jnp
dec
mov
sbb
inc
cmp
jo
dec
xchg
xchg
add
inc
and
or
add
xchg
pop
lret
test
or
int
hlt
jmp
mov
in
jbe
mov
std
fildll
fcmovbe
fcomps
sbb
aam
lret
xor
and
lret
push
pop
dec
int3
mov
cmc
sub
fisubrl
inc
ss
inc
aas
add
lock
subb
or
push
subw
das
lret
jo,pt
mov
xchg
mov
jbe
inc
fistpll
mov
mov
mov
jmp
ficompl
adc
xchg
fildl
aaa
imul
in
repz
sub
or
jbe
mov
sarl
inc
push
push
push
jmp
popf
notb
mov
jbe
flds
pushf
sbb
aam
xchg
jp
loopne
inc
jbe
or
rcll
div
cmp
aam
mov
iret
fwait
cmpsl
mov
dec
std
xor
dec
in
xlat
jge
out
xor
popl
or
jmp
inc
push
punpckhbw
dec
negb
inc
bound
dec
jae
sbb
xchg
or
aaa
ror
pop
mov
daa
pushl
test
ret
add
fwait
ljmp
cmc
mov
jo
mov
cli
push
and
mov
dec
cmp
mov
lahf
f2xm1
repz
cmpsl
scas
sub
gs
sub
pop
sbb
push
jg
push
sbb
test
mov
or
repz
jge
fimull
cli
inc
rcrb
adc
cmp
or
mov
xchg
mov
sub
rorb
adc
push
add
inc
std
dec
xor
shlb
inc
push
pushf
addr16
iret
imul
lcall
loop
lods
loopne
aam
fs
fsubrs
dec
xchg
out
xor
and
adc
loopne
jecxz
dec
notb
mov
out
and
inc
mov
fadds
lret
inc
repz
ss
imul
inc
negl
mov
mov
aas
bound
or
outsb
jmp
bound
push
ficomps
inc
cld
in
mov
push
int
mov
cmp
add
dec
test
adc
mov
cmp
xchg
rcl
mov
shll
pushl
mov
inc
arpl
lret
test
movsl
jns
sbb
sub
push
xor
int
mov
sub
mov
roll
mov
dec
shl
mov
push
xchg
fldcw
mov
mov
leave
test
fwait
mov
mov
shrb
nopl
xor
pop
jnp
js
push
fwait
das
shl
add
shll
mov
dec
xor
add
aam
out
mov
sub
in
push
test
addr16
fldl
xchg
push
sub
xor
sarb
stos
jp
mov
push
add
int3
mov
je
inc
movsb
fidivl
nop
call
jmp
cwtl
js
nop
push
add
or
lret
orl
movsb
dec
loope
cld
xor
xchg
daa
repz
test
cmp
insb
xchg
jg
jnp
fcomp
cmp
inc
loopne
mov
xor
mov
mov
mov
lds
insl
cmpsl
lret
pop
cmc
and
and
mov
push
and
pop
xor
fs
xchg
mov
mov
inc
pop
ficoms
flds
lods
daa
cli
sbb
pushw
sub
mov
push
movsl
jne
push
sub
jmp
mov
aas
leave
mov
inc
lcall
pop
gs
les
lret
mov
outsl
mov
pop
push
shrl
addr16
inc
cmp
inc
push
add
bound
inc
call
adc
lret
inc
cmc
fstpt
imul
mov
inc
js
push
jl
out
dec
lahf
jg
loopne
aas
cld
mov
dec
inc
jns
dec
xchg
hlt
outsl
mov
push
cltd
clc
push
dec
mov
rcrb
add
loop,pn
pusha
push
mov
clc
mov
lea
add
incb
cmp
sahf
mov
pop
dec
icebp
and
andl
cltd
sbb
test
xor
add
orl
push
call
adc
movl
addl
movl
neg
mov
mov
decl
xor
and
mov
andl
add
mov
sub
mov
test
je
and
mov
movzbl
sub
mov
mov
mov
mov
xorl
xor
dec
add
sbb
mov
xor
mov
neg
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
adc
xor
add
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
sbb
add
mov
addl
sub
lea
addl
xor
xorl
xor
movl
cmp
movl
je
mov
mov
adc
mov
adcl
xor
adcl
add
cmp
movl
jne
subl
pushl
xorl
call
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
xor
decl
add
cmp
je
andl
pushl
pushl
xorl
call
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
xor
mov
mov
mov
mov
sub
and
mov
mov
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
andl
mov
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
jmp
icebp
pop
call
das
sbb
mov
or
jbe
cmp
jp
pop
jp
pop
push
mov
stos
imul
fwait
or
ret
or
jecxz
leave
or
sub
xchg
out
dec
push
outsb
aaa
dec
aas
mov
arpl
test
js
sti
push
jmp
pop
adc
mov
pop
adc
inc
xorl
mov
outsl
cld
lods
and
fidivrl
jle
adc
lock
add
xor
ss
dec
mov
out
mov
insl
and
push
fs
sahf
mov
lret
shll
jne
sub
dec
mov
mov
repz
daa
mov
lcall
adc
sbb
push
pop
lds
pop
adc
push
dec
jno
inc
inc
add
in
shrl
cs
xchg
mov
mov
sub
cmp
lods
andl
gs
inc
in
icebp
push
mov
stos
dec
pop
pop
inc
lods
add
ret
insb
aas
mov
decl
jge
adc
and
inc
mov
xchg
push
imul
adc
xchg
adc
or
bound
pop
mulb
jnp
std
movsl
dec
cltd
das
subps
jnp
into
imul
push
outsb
cmp
cld
and
jmp
test
cmpsb
je
mov
xor
sbb
pop
fadd
ret
je
lock
inc
mov
inc
aas
push
or
xchg
icebp
movsb
pop
test
dec
add
ret
int3
daa
fisubl
pop
pop
push
jl
call
leave
xchg
int3
in
mov
pop
push
mov
fs
adc
das
cmp
sahf
push
fwait
jno
out
sub
out
mov
jmp
fisubrl
push
and
inc
inc
mov
jbe
rcrl
popf
jg
clc
ror
and
inc
jne
xchg
enter
insb
pop
xchg
dec
mov
cmc
jbe
sbb
jmp
inc
arpl
dec
repz
dec
push
sub
cmpsl
cltd
insl
bound
jbe
je
dec
sub
xorb
hlt
jbe
loop
pop
fistl
add
test
ret
inc
or
sub
add
xor
inc
cmc
jge
decb
inc
scas
popf
sarl
adc
lcall
sub
or
xchg
inc
fdivr
hlt
add
imul
ror
pop
cmpsl
jmp
iret
dec
mov
xchg
pushf
out
and
or
cwtl
xor
pop
gs
arpl
xchg
ret
out
mov
outsb
lods
mov
push
dec
imul
lock
xor
in
test
pop
pop
in
out
xchg
cltd
mov
in
imul
push
xor
aaa
inc
or
mov
test
rorb
cwtl
push
adc
add
out
test
sub
mov
mov
popl
movups
jle
jae
push
clc
push
pop
loopne
shlb
pop
popa
sub
mov
or
pop
dec
or
mov
mov
sarl
dec
and
rcrb
or
push
sub
cmp
or
jae
leave
xchg
imul
cmp
pop
js
cmpsl
sarb
inc
inc
rcrb
cld
out
stos
int
rolb
ljmp
cmpsb
and
xchg
int
inc
sub
dec
in
dec
xor
jbe
add
sti
push
loopne
mov
jg
sub
aaa
sub
mov
outsl
cli
push
bound
adc
cwtl
fmuls
hlt
inc
int
push
scas
xor
in
mov
push
das
ja
or
and
inc
out
xlat
mov
mov
popa
mov
sahf
loop
pop
gs
jnp
mov
cmp
out
sub
mov
ret
dec
lods
dec
jecxz
cmp
or
cwtl
mov
cli
imul
pop
stc
jecxz
push
sub
mov
dec
pop
mov
sub
and
push
lods
aaa
sbb
adc
inc
adc
in
inc
xchg
xchg
sub
push
jecxz
lea
cltd
mov
jns
fcmovnbe
lods
dec
nop
adc
movl
lock
adc
adc
mov
adc
popf
icebp
sbb
inc
lcall
mov
jns
out
jle
or
sub
lods
bound
addr16
in
or
cli
adc
add
lahf
rorb
mov
xor
sub
mov
lcall
fsubs
xor
out
or
scas
bound
imul
clc
pop
rclb
jecxz
dec
xor
jno
std
xor
jg
mov
xchg
jp
sub
mov
fsubs
data16
adc
push
xchg
or
jnp
push
sbb
cmpsb
mov
fdivrs
cmp
inc
ficoms
mov
ret
and
xchg
sahf
or
mov
paddsb
outsl
addb
sti
mov
xchg
mov
xchg
or
in
icebp
mov
fs
xor
ficoms
lock
sbb
dec
ret
stc
and
mov
clc
xchg
or
dec
mov
pushf
mov
jnp
into
into
mov
cmpb
stos
sub
mov
xchg
notl
cwtl
sub
loope
hlt
dec
enter
push
sub
sub
aam
aaa
out
fs
mov
mov
mov
std
adc
dec
inc
fcmovnu
adc
pop
stos
cmp
cmpsb
mov
cmp
mov
mov
xchg
cmpsl
xlat
ficoml
mov
enter
fcomps
insl
mov
in
push
inc
data16
xor
fstpt
cmp
icebp
mov
mov
mov
cmp
xchg
inc
mov
pop
mov
xor
mov
fst
mov
sbb
cmp
arpl
xor
rclb
cmp
inc
or
sti
mov
stos
adc
fnstenv
inc
mov
add
and
jmp
in
or
loopne
mov
and
aam
adc
xor
jns
inc
jle
add
sbb
cli
pop
cld
mov
inc
add
xchg
sub
mov
push
ja
cld
ficomps
int
inc
jo
cld
sub
pop
sub
inc
aaa
rclb
test
pop
inc
sub
mov
mov
neg
subl
inc
nop
int3
adc
divb
scas
fisubs
inc
in
cli
cmp
repnz
das
sbb
js
movsl
xlat
sub
scas
push
cmp
icebp
outsl
dec
clc
lock
shlb
dec
dec
shrb
cmp
jle
pop
ljmp
pusha
add
cmp
movsl
ret
inc
xchg
cmc
adc
fsubrl
js
inc
adc
subl
mov
add
mov
je
lahf
xor
and
jge
pop
inc
pop
loop
xchg
cmp
sbb
push
shlb
jg
inc
add
icebp
cmp
les
fnstcw
jmp
push
mov
mov
sti
pop
js
adc
push
or
xchg
or
dec
cli
cli
or
cmp
add
inc
stc
inc
sbb
xchg
std
fmuls
xchg
fsubr
inc
out
ret
pop
xchg
jl
jg
xchg
push
inc
pop
lahf
adc
or
clc
inc
push
rolb
test
out
xchg
mov
pop
mov
call
ficoms
or
imul
cwtl
pop
sti
xor
xor
jp
cmp
clc
movsl
xchg
push
jae
push
xchg
movsb
imul
cmp
jle
mov
outsl
fdivs
xorl
pop
sbbl
popf
pcmpeqw
sbb
stos
es
jl
cmpsb
mov
mov
pop
je
ljmp
rcrl
xor
mov
in
mov
xchg
sub
push
add
shll
cmpsb
mov
push
scas
ds
mov
call
cmpsl
mov
sub
insl
inc
jnp
shll
mov
shlb
nop
rorb
pop
rorb
xchg
xchg
insl
lods
push
mov
cltd
add
mov
mov
pop
ss
call
in
and
add
movsb
add
add
fwait
dec
xchg
lret
jmp
push
cld
je
sub
inc
movsl
scas
inc
push
dec
imul
ficomps
and
lds
push
loope
outsb
roll
sub
hlt
movsb
push
mov
gs
xchg
adc
mov
dec
ret
mov
sarb
shrl
or
push
push
mov
in
push
mov
or
cltd
add
xchg
mov
rcrb
pusha
push
cltd
push
pop
push
popa
imulb
rolb
xchg
and
fadd
add
add
test
xor
in
popa
repnz
push
das
shlb
mov
inc
mov
les
sub
cmp
push
in
dec
sahf
scas
jbe
mov
inc
es
icebp
daa
adc
pop
sub
das
cwtl
sbb
leave
jl
jbe
lahf
xchg
int
sahf
lock
pop
sub
push
outsl
js
and
push
lcall
push
sub
es
test
mov
cltd
pop
subl
pop
rol
adc
jo
lock
testb
fnsave
or
lods
mov
pushf
enter
inc
sbb
aas
pop
outsb
xchg
jae
mov
add
test
test
cmc
mov
int3
sti
mov
cmpsb
fldt
add
mov
je
xchg
inc
lret
repz
ljmp
xchg
call
lds
sbb
xlat
ds
enter
shr
mov
dec
jle
adc
lods
daa
es
mov
inc
shll
addr16
add
cmp
clc
dec
mov
dec
scas
test
jb
push
dec
mov
xor
lea
or
dec
cmp
rcrb
rcrl
mov
lock
mov
add
or
inc
test
jg
aam
into
mov
xchg
jp
out
fwait
lcall
dec
lds
xor
inc
pop
rorl
jb
int
sbb
lds
mov
fstpt
sbb
xorb
inc
xchg
xchg
jl
pop
je
pop
jno
mov
ret
rorl
jne
popf
div
jge
inc
sub
push
loope
js
push
js
add
mov
add
pop
js
cmp
mov
call
clc
mov
xor
in
cmc
lds
repz
dec
add
inc
sub
cmp
add
movsb
pop
inc
and
adc
mov
push
jp
xor
add
pop
adc
jmp
or
xor
and
sub
jbe
jg
pop
dec
push
mov
aad
int3
in
iret
ficoml
push
pusha
or
sbb
lock
adc
shll
ja
sti
jbe
mov
dec
dec
es
ljmp
gs
push
sbb
gs
jo
cmp
stos
gs
leave
sarl
ds
cmp
jne
test
sub
add
mov
shll
out
add
in
or
imul
mov
xor
dec
or
fldenv
pop
xchg
jno
pop
dec
cmp
fstpl
inc
je
mov
or
adc
xchg
cmc
xchg
pop
adc
sbb
lcall
popf
loop
je
subb
mov
pop
jp
enter
sub
mov
add
cs
adc
mov
push
imul
mov
fisttpll
loopne
sbb
imul
stos
add
mov
movd
xor
jg
jp
jecxz
xchg
cmc
sub
out
pusha
sub
nop
pop
dec
xchg
or
cmp
sub
jmp
adc
mov
sub
xor
mov
out
stc
adc
mov
cli
enter
sub
inc
mov
or
out
test
mov
inc
xor
fbstp
lcall
sbb
pop
dec
fisubrl
add
bound
addr16
int3
push
mov
out
orb
rcll
cmp
dec
inc
mov
jae
pop
dec
lds
into
cmpsb
xor
es
sbb
cmp
shl
roll
int
xchg
and
or
lods
pop
scas
mov
sbb
mov
mov
sub
dec
pop
mov
mov
mov
xchg
cmc
cli
jb
xchg
jb
pushf
rcll
frstor
ja
repz
jnp
popa
testl
test
or
sub
stc
bound
shlb
adc
stos
icebp
and
dec
enter
jbe
pop
dec
add
cmc
out
out
outsl
inc
out
rclb
and
das
mov
mov
adc
and
inc
or
ficomps
adcb
cmc
or
movsl
fsubrs
popf
scas
cmc
insb
fisubl
in
sub
xor
sub
rclb
aam
sbb
jmp
mov
mov
inc
outsl
jg
mov
por
add
xchg
sahf
scas
xchg
movsl
xchg
mov
stos
mov
stos
add
adc
mov
rorb
jnp
sbb
lahf
stos
sbbb
subb
xchg
into
pop
push
xor
cmpsl
xor
or
add
lret
mov
subb
fstpt
test
jae
xchg
ret
push
cli
lea
pop
pop
push
rol
shlb
cmpl
xor
or
rclb
ret
ds
xor
inc
or
mov
pop
cmp
aaa
pop
jge
inc
push
popa
mov
dec
dec
jp
sbb
jnp
inc
pop
mov
mov
sbb
mov
and
sbb
negl
notb
fisubs
inc
lahf
gs
jae
adc
xchg
ficompl
mov
fisubl
sbb
cmpsb
xlat
sahf
xchg
lahf
adc
popf
clc
lahf
test
sbb
dec
test
xor
fwait
cmp
fwait
sub
or
sub
mov
pop
inc
push
cmp
fwait
das
cmpsl
das
daa
add
test
iret
pop
and
and
mov
scas
lret
dec
call
aam
ss
fimull
js,pn
cs
dec
push
jecxz
pusha
test
out
lock
jno
xor
cmp
jnp
scas
out
daa
loopne
movsb
lds
pusha
aas
sbb
ljmp
cwtl
mov
dec
jns
xchg
orb
and
sbb
int
jae
bound
lods
push
inc
mov
arpl
lea
xor
idivl
pop
popa
out
into
aas
xchg
mov
test
movsw
repz
xchg
xor
sub
mov
fucomip
lret
lcall
adc
pop
in
call
jns
mov
insl
mov
repnz
jns
aam
dec
test
add
jg
push
push
jl
sub
outsb
cwtl
inc
lahf
inc
jne
cmp
les
jmp
mov
dec
mov
xchg
jo
pop
ljmp
add
and
cmpsb
cmp
sub
sbb
out
bound
int3
je
xor
rclb
xor
mov
jae
cmpsl
push
in
adc
cmpsl
les
sub
mov
fldenv
cmp
pushf
mov
int
shll
mov
push
insb
xchg
push
add
cmpsl
rol
pop
test
les
imul
cmp
cwtl
lret
mov
repz
cmc
pop
or
mov
jb
cmp
pop
sub
lock
push
popa
sub
xor
adc
lods
test
cli
lcall
adc
inc
orl
push
lea
lea
jl
mov
mov
and
inc
mov
push
in
mov
test
sub
out
aam
push
scas
push
sbb
cld
mov
xchg
sub
or
ret
dec
inc
mov
xlat
aam
mov
mov
and
les
xor
loop
sub
dec
dec
mov
xor
jg
in
mov
push
in
faddl
ficompl
mov
pop
adc
loope
pop
cmp
call
lahf
fstl
mov
sbb
add
push
stos
inc
cmp
mov
out
sbb
dec
add
push
pop
push
out
dec
rcrb
push
and
inc
rcrb
adc
mov
stos
pop
jge
fs
lret
fstpl
cmpsl
cmc
sub
es
loopne
ljmp
into
mov
test
mov
in
out
jmp
or
fbld
push
push
push
sub
cld
jecxz
xor
cmpsl
repnz
popa
pop
sub
rorb
shrl
xchg
or
cs
int
mov
jmp
pop
call
scas
dec
call
mov
pop
repnz
jp
sub
or
mov
lea
jne
rorb
sahf
jo
loop
cwtl
xor
repz
aas
pop
jnp
sbb
mov
das
incl
dec
fs
imul
into
insb
push
mov
and
pop
sub
xchg
test
mov
jl
mov
mov
xchg
rolb
movsl
aas
push
jg
push
xor
and
insb
outsb
daa
es
popf
jne
add
dec
sti
popf
add
fldcw
sbb
dec
outsb
pushw
cld
lahf
stc
push
jp
in
cmc
fnsave
xorb
add
fsubrl
mov
sbb
push
loope
or
jp
std
sbb
fbstp
lods
sub
scas
cmpsl
sbb
roll
mov
ljmp
and
xchg
loope
dec
jl
mov
stos
std
sbb
jle
xor
push
add
sar
ja
das
and
aas
fwait
jle
adc
test
daa
lahf
mov
sbb
mov
in
das
jae
sbb
jl
lahf
das
insb
and
sub
inc
mov
int
aad
push
lcall
and
adc
data16
xor
pop
lea
iret
ljmp
xor
or
shlb
sbb
add
fcompl
mov
orl
mov
inc
inc
mov
out
or
mov
out
aam
or
push
pop
roll
mov
iret
xor
out
adc
mov
jmp
jne
dec
lret
cmp
lea
dec
mov
pushw
std
sub
xchg
jne
or
inc
xor
lods
or
ret
add
jae
cld
ret
lcall
dec
stos
scas
jo
int3
inc
int3
inc
dec
jecxz
mov
inc
lds
gs
adc
cmp
js
sub
popa
aam
and
outsb
clc
add
sub
addb
xchg
xchg
inc
adc
lret
push
mov
loopne
push
into
lret
jno
mov
ja
mov
xlat
ss
xchg
fadds
ret
cmpsl
mov
mov
icebp
addps
test
add
pop
orl
int
rcrb
push
jns
ret
and
push
mov
mov
test
cmp
cmp
mov
jle
fnstcw
std
mov
leave
movsb
cli
cmp
push
add
movsl
bound
icebp
xor
jge
mov
aaa
in
sbb
mov
cwtl
xchg
loopne
dec
jo
int
push
movsb
outsb
repnz
jbe
dec
fwait
popa
jo
jne
pop
ljmp
jae
jg
int
test
dec
fs
xchg
add
sub
mov
sub
icebp
loop
cmp
test
xchg
jnp
xchg
lods
inc
and
or
fmul
pop
or
mov
pop
fcoms
js
stos
push
sub
dec
sub
in
inc
mov
bound
or
mov
mov
out
testb
mov
jge
jecxz
mov
test
sbb
or
stos
adc
push
into
aas
xchg
int3
xchg
mov
xorl
pop
icebp
cmp
xchg
xor
jns
mov
mov
jmp
aas
xchg
stc
jl
fs
pushf
aad
rcr
push
pop
scas
cs
cmpsb
movsl
dec
push
mov
lods
xchg
in
mov
xchg
mov
sub
xor
mov
dec
into
in
sahf
mov
call
dec
xchg
cmp
mov
mov
mov
out
cli
nop
inc
pusha
mov
ss
pop
xor
jae
aaa
int3
mov
sub
pop
fimull
cli
loope
js
sbb
or
aad
aam
or
pop
mov
enter
sub
std
pop
dec
lods
es
and
test
fists
lods
icebp
adc
dec
out
xchg
push
xchg
scas
not
adc
pop
repz
outsl
add
fstl
push
scas
dec
lods
mov
mov
pop
mov
fsubrs
jns
ret
or
xor
aas
or
rolb
xor
das
decl
jecxz
sub
cmpsl
ljmp
adc
sbb
scas
arpl
fistl
stos
jp
mov
les
pushf
inc
stos
pushf
push
adc
mov
dec
gs
lea
sub
adcl
mov
fildl
outsl
aaa
jo
int3
popa
jp
jo
adc
or
loope
pop
in
mov
insl
int3
into
in
aad
sub
aas
jbe
cmpsl
jne
mov
pop
subl
mov
push
shll
cs
cmpsl
pop
aas
mov
sti
dec
out
loop
mov
stos
jge
das
jb
scas
cmp
sbb
sti
adc
jns
and
sub
in
lods
or
mov
and
icebp
popf
xchg
mov
leave
inc
jbe
aam
pop
daa
stc
rolb
arpl
or
lods
mov
rcrb
cmp
pop
lods
pop
imul
or
dec
inc
dec
fabs
daa
dec
mov
mov
jbe
insb
cld
inc
mov
mov
rclb
cmc
fists
call
dec
pop
jo
fdivs
and
jge
bound
inc
or
test
nop
add
outsl
lods
inc
test
jbe
pop
int3
xchg
jmp
fstl
cs
movsb
ja
add
in
inc
push
sbb
testb
or
mov
dec
mov
and
xchg
andl
subb
test
adc
das
movsb
pop
or
lods
xchg
out
test
push
mov
mov
pusha
sar
fisttpl
dec
jmp
mov
mov
add
mov
add
push
dec
or
mov
sub
nop
ja
sub
xor
mov
test
jb
sub
sbb
mov
add
jbe
loope
cwtl
fmull
add
sbb
pop
xchg
lock
push
fs
pop
pop
adc
testl
xor
mov
sbb
pop
add
sub
and
jmp
pop
mov
push
arpl
ja
nop
xchg
negl
lock
mov
xchg
movsl
add
aaa
jne
adc
int3
mov
mov
xor
test
dec
sub
pop
test
xor
mov
adc
mov
les
add
lock
imul
femms
scas
xor
and
inc
lock
xor
push
sub
dec
leave
pop
mov
repz
lds
cmp
mov
mov
sub
and
test
lcall
pusha
sti
rcr
mov
sub
out
mov
shl
cmp
fwait
aam
mov
sbb
movsl
ja
inc
mov
nop
adc
rclb
mov
nop
mov
aam
dec
xchg
data16
jae
push
addl
inc
iret
mov
std
xlat
mov
xchg
pop
mov
dec
mov
mov
jmp
outsl
xor
sbb
mov
daa
sbb
lock
out
or
mov
in
sbb
lock
scas
cmc
cmpsb
jle
inc
and
arpl
sti
rol
sahf
int3
es
jns
cli
jno
and
into
mulps
pop
push
mov
inc
dec
mov
mov
daa
jl
in
mov
jb
cs
or
mov
pop
shlb
pop
fiadds
cltd
stos
cwtl
mov
push
fisubrl
loope
mov
gs
imul
pop
xlat
pop
out
sbb
push
push
cwtl
aam
jge
adc
and
mov
pop
jo
mov
adc
push
andb
sti
scas
inc
xor
sbb
incl
ds
rorl
dec
aam
mov
sbb
cmpsl
cmc
mov
movsl
popf
pop
call
push
addr16
sub
je
jmp
sti
or
stc
mov
mov
sbb
dec
fidivs
pop
pop
enter
push
mov
je
lret
out
outsl
mov
arpl
clc
popf
push
add
adcl
inc
in
jge
js
xor
shl
mov
sbb
add
ljmp
lret
cvttps2pi
push
mov
sub
data16
sbb
push
mov
pop
or
test
add
bnd
imul
insl
mov
inc
jne
les
and
shl
adc
mov
fisubl
jmp
pop
jb
in
inc
add
inc
or
mov
cmp
in
idivl
lea
xchg
cwtl
pop
cwtl
and
xchg
xor
popf
popa
lods
xchg
xchg
jl
push
xlat
stos
fsubl
lret
xlat
pusha
dec
adc
scas
pop
ficoms
and
xchg
fnsave
sti
psubd
je,pn
mov
add
out
in
xor
fsts
pop
xchg
fimuls
adc
push
scas
and
leave
mov
nop
lods
push
sti
adc
xchg
sub
ficomps
pop
push
imul
push
jge
loopne
cmp
mov
pop
rcrl
cli
and
lods
mov
ficompl
xor
add
dec
movsb
lret
push
push
aaa
in
pcmpgtw
popf
ljmp
push
pusha
out
sbb
rorl
sub
pop
adc
icebp
and
adc
stc
test
sbb
adcl
ret
cmp
or
pop
dec
fld
pop
idivb
xor
inc
lds
addl
scas
bound
xor
fimuls
cwtl
push
xchg
loopne
mov
jne
sar
mov
stc
cld
loope
aas
add
jge
jmp
icebp
mov
lds
iret
or
sbb
xor
sub
push
sarb
jl
dec
aas
or
cmpsb
inc
jl
or
shrb
fwait
cmp
adc
int
lock
stos
push
imul
mov
test
bound
pop
shlb
nop
roll
sbb
out
movsb
lcall
push
xor
mov
fimull
add
sar
xchg
shl
int
or
stos
cmp
loop
test
and
adc
cmp
hlt
aaa
push
jl
call
mov
add
xchg
push
in
and
fs
shrl
icebp
fsubrl
lret
inc
movsb
pushf
pusha
mov
mov
js
dec
or
dec
push
ret
mov
and
add
popa
sub
add
enter
je
jg
mov
addr16
enter
cmp
and
xor
and
jb
into
push
xchg
call
and
cmp
inc
pusha
xor
xchg
gs
jo
jle
mov
dec
cmp
add
mov
ficoms
push
inc
in
mov
inc
dec
jb
ret
push
fmull
add
sbb
fists
push
aad
ljmp
lret
pop
lods
fcmove
js
pop
pop
mov
in
pop
inc
mov
mov
or
fnstcw
aad
ja
mov
pop
fstpl
popa
sbb
pop
and
xchg
mov
fldl
and
push
les
mov
sub
imul
nop
push
daa
adc
dec
xor
mov
pusha
lcall
cmp
inc
inc
push
arpl
mov
sti
pop
or
lea
std
movsl
lret
notb
or
sbb
jo
fdivl
adc
sti
inc
cmpsb
into
in
ret
pop
cwtl
mov
lcall
je
in
mov
into
ds
pop
add
rcr
inc
stos
jbe
and
mov
shl
sub
fidivrl
pop
lock
ror
iret
insl
in
out
mov
push
push
xchg
xchg
stos
addb
dec
stos
cmpl
jbe
test
inc
adc
dec
jmp
mov
loop
aas
test
pop
cltd
add
inc
int
xor
cmpsl
test
sbb
sub
fdivrl
stos
adc
dec
jecxz
xchg
adc
repz
and
pop
sbb
and
jl
lcall
imul
insb
pop
inc
outsb
mov
mov
cmp
insl
inc
or
sub
pop
or
int3
pop
inc
sub
sbb
fiadds
adc
sbb
addb
out
mov
test
pop
jb
stos
pop
test
mov
jl
addr16
stos
dec
leave
sub
stc
loope
cli
cmp
icebp
nop
das
aaa
pop
jmp
pop
adc
cli
add
repnz
test
sti
popf
and
out
pop
sbb
filds
test
jno
pushf
jbe
or
fistpl
ret
push
mov
data16
daa
sbb
pop
loop
std
imulb
or
sar
icebp
das
jb
inc
adc
fisttps
add
xchg
je
movsb
xor
fs
sbb
call
not
cmp
xchg
shr
adc
push
sbb
mov
add
sub
fstpl
pop
fs
push
dec
adc
es
cwtl
test
pop
cmp
fidivrl
and
xorb
cmc
les
insb
sti
ss
and
sbb
je
loop
cltd
out
insb
mov
fidivrs
lret
rcrl
popf
and
popf
inc
xchg
xchg
in
mov
sahf
adcl
sub
mov
shrb
cs
mov
lds
sbb
decl
mov
lea
je
push
add
out
nop
mov
cltd
loopne
scas
sub
jnp
cltd
aas
bound
fadds
adc
mov
in
mov
and
ret
xchg
pop
adc
divl
adc
fcomps
shlb
outsb
sub
sbb
scas
je
push
or
mov
mov
hlt
stos
mov
iret
sahf
jp
pushf
sub
adc
pushf
mov
cmp
mov
jae
mov
std
mov
shll
and
cmp
lea
daa
mov
inc
cld
push
daa
lods
push
pop
std
push
lea
add
insl
push
sbb
arpl
pushf
orl
xor
movsb
dec
jle
sbb
xor
ja
pop
sar
js
and
daa
inc
and
fldcw
cld
in
pusha
pop
out
cmp
aaa
inc
aaa
js
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
jmp
incl
je
fs
inc
xor
jp
add
jp
addr16
jge
loope
or
xor
shrl
or
sbb
out
jge
lcall
mov
pop
aaa
sub
push
xchg
xor
push
mov
pop
ret
je
nop
jmp
or
inc
call
xchg
scas
lret
outsl
push
cmpl
add
inc
les
mov
mov
push
mov
popf
addl
test
mov
sti
jecxz
xlat
and
and
push
enter
push
pushf
push
cmp
sub
test
xor
push
dec
jne
lahf
loopne
inc
mov
ret
in
aad
stos
int
icebp
cs
popf
rorb
adc
inc
inc
mov
cmp
divb
mov
xadd
inc
push
or
scas
and
jne
cmc
ljmp
inc
cmpb
dec
add
mov
mov
lahf
push
sub
repz
out
adc
adc
movsl
lret
mov
es
orb
mov
pop
rclb
lds
daa
adc
push
lahf
pop
fmuls
stc
sub
adc
adc
xchg
orl
movsb
cmc
cmpsl
int3
scas
inc
shlb
dec
cltd
jns
pop
dec
mov
repnz
push
lea
add
sbb
fldl
add
mov
daa
push
jnp
test
adc
push
adc
shll
fstpt
mov
adc
mov
sub
into
leave
loope
sub
mov
inc
shrl
mov
popa
cld
xchg
push
aaa
and
pusha
push
cmp
inc
adc
dec
push
fs
or
mov
js
icebp
fcoml
sbb
jo
rolb
mov
ljmp
cmpsl
cmc
mov
sbb
aas
cmpsb
inc
pop
cmp
fwait
jp
xchg
insb
mov
mov
lock
cwtl
dec
mov
fdivr
cmp
rcrl
outsl
out
jge
jno
bound
dec
arpl
cmp
push
sbbb
mov
sbb
loop
mov
test
neg
fdivrs
lcall
flds
pop
jecxz
sbb
fildll
jne
and
arpl
int3
repnz
repz
pop
jp
ret
jns
and
push
or
jae
fnstsw
hlt
xor
adc
gs
adc
repnz
leave
or
movsl
fs
test
int3
test
sub
add
les
and
mov
cmpsl
mov
aaa
pop
std
mov
sbb
jbe
cmp
mov
jns
ljmp
xor
aas
pop
xchg
cmc
call
aas
and
jmp
push
nop
pop
cmp
mov
push
mov
pop
rclb
sub
cltd
mov
daa
cmp
cmpsl
data16
call
es
icebp
aad
mov
sub
ss
scas
xchg
pop
fwait
mov
popa
cmc
sbb
push
in
dec
or
mov
sub
js
loop
cli
inc
pop
push
fwait
sub
lret
lea
scas
jmp
sahf
and
xor
repnz
mov
lods
in
loop
cld
and
adc
roll
gs
xchg
and
jo
int3
test
xlat
cmp
das
hlt
pop
adc
leave
mov
es
cltd
pop
addr16
scas
xor
pop
scas
add
sti
in
sbb
adc
testb
sbb
push
pop
cmc
dec
dec
mov
sub
int
ljmp
pusha
jno
push
mov
push
rcrb
xor
inc
vminpd
dec
sub
push
push
ds
sub
pop
dec
mov
cmp
popa
scas
dec
nop
inc
iret
cmp
scas
xchg
es
pop
fcmovnu
cmpsl
ss
lods
mov
in
cmpsb
jp
dec
xor
pusha
int
mov
lahf
cld
add
dec
movsb
enter
imul
jp
scas
test
xchg
sub
aad
xchg
aas
push
inc
inc
mov
das
xchg
fcoml
cld
and
mov
xchg
pop
xchg
sbb
sti
loope
mov
push
jmp
ficomps
or
pusha
sbb
lods
mov
clc
loop
adc
mov
cwtl
sub
sbb
mov
insb
dec
outsb
jp
call
fwait
lods
data16
jmp
fnstcw
rorb
mov
mov
sbb
in
ds
push
xlat
mov
inc
adc
les
push
push
dec
or
aad
gs
scas
std
cmc
push
jg
mov
lods
movb
jbe
sub
or
push
inc
scas
dec
and
stos
jecxz
out
aam
lcall
fcompl
jnp
xchg
or
rcll
mov
pusha
dec
outsb
mov
imulb
mov
leave
or
lcall
xchg
cmc
jbe
scas
push
daa
jae
or
ffreep
sub
jmp
push
es
push
testb
dec
test
idivb
jns
or
jno
lcall
xchg
jno
sub
push
shlb
jbe
pop
daa
mov
push
mov
aam
jne
clc
fs
in
pop
mov
pop
leave
adc
xchg
jecxz
rcrb
fsubp
outsl
and
mov
pop
xchg
popa
out
push
and
lret
fisttpl
dec
cmp
or
jmp
cltd
outsl
xor
push
add
sti
pop
aad
sbb
in
add
arpl
pop
in
mov
insl
sbb
imul
lret
and
repz
mov
loop
sahf
pop
xchg
adc
cld
push
stos
bound
js
xor
test
in
mov
inc
push
cmp
cmp
sbb
pop
rcl
nop
push
dec
ret
loope
sbb
jmp
out
pop
or
sbb
test
cmc
adc
fstps
mov
out
and
and
stos
pop
enter
ret
sub
push
xor
stos
dec
jbe
mov
add
and
loop
mov
or
pop
int3
mov
push
out
int
addr16
addps
xchg
jne
cmpl
loop
ljmp
in
jecxz
popa
xchg
enter
xor
movsb
js
mov
and
xor
lods
sub
mov
flds
xor
ja
sbb
int3
repz
pop
ss
pusha
lcall
inc
pop
add
xor
push
mov
mov
pop
pushl
leave
clc
outsl
cld
push
test
arpl
mov
jmp
lock
xchg
test
imull
clc
aaa
xor
jp,pt
call
bound
dec
mov
or
mov
pop
cltd
jle
dec
mov
and
dec
out
outsl
imul
and
test
dec
insb
cltd
je
xchg
imul
insb
adc
cmp
xor
int
jb
sub
or
xchg
mov
adc
addl
fs
sbb
adc
ljmp
xchg
jmp
jmp
out
divl
gs
jae
mov
push
adc
hlt
xchg
push
in
test
cs
adc
or
add
test
adc
cli
call
adc
adc
das
jne
cmc
iret
xor
out
cmp
adcl
pop
inc
daa
pusha
outsl
push
scas
xchg
sub
push
sub
pushf
inc
add
push
push
pop
xchg
shll
movsb
cld
int
sbb
mov
sub
sbb
jecxz
test
jge
dec
xlat
xchg
lret
cld
stc
mov
or
adc
mov
pop
mov
or
jb
cmc
adc
aam
mov
ret
idivb
xor
pop
roll
prefetch
or
aam
sbb
pop
jecxz
aas
mov
sbb
popf
inc
cld
ds
rol
jno
mov
aaa
add
sbb
pusha
cld
fsubrl
fisttps
xchg
mov
movsb
pop
stc
add
in
mov
orl
scas
rcll
push
shl
pop
and
dec
add
test
cmp
mov
lods
icebp
jle
sbb
mov
fimull
arpl
add
pop
or
negl
ret
hlt
cs
fsubl
and
call
lahf
cmpsb
xorb
repz
out
ret
fldcw
arpl
fcomp
sbb
cli
test
adc
xchg
fidivrs
in
inc
mov
xchg
pop
xchg
sub
ss
cwtl
sub
adc
adc
sbb
mov
push
and
mov
dec
push
scas
inc
push
dec
jne
out
mov
div
cs
clc
movsb
rcr
or
pop
adc
mov
cmp
mov
fcmovnb
ljmp
adc
xchg
push
add
jns
add
subl
jg
jbe
inc
jnp
test
movsl
push
adc
mov
push
cmp
push
dec
lret
xchg
lret
into
pushf
jle
fdivrs
pop
mov
xchg
jno
ret
inc
repz
shrl
adc
sub
dec
shrb
xor
test
jp
dec
sub
xchg
ret
lods
adc
mov
pop
sub
add
or
mov
xchg
inc
adc
sub
push
pop
aad
test
je
gs
jmp
cmp
scas
pop
mov
add
decb
xor
shl
mov
bound
adc
cli
pop
jmp
sub
jns
ds
ss
lret
xor
adc
popa
mov
gs
cmp
mov
gs
xchg
xor
movsl
mov
stos
jae
stos
mov
pop
imull
pop
add
mov
xchg
ljmp
jle
fisttpll
mov
clc
sub
pop
cld
lock
insl
pavgw
lods
into
das
lea
cmpsl
int
mov
popf
or
mov
std
dec
data16
insl
jo
and
cmp
imul
fcoms
xchg
subb
pop
jbe
gs
and
jge
js
mov
dec
cld
hlt
decb
adc
jbe
fcoml
push
int
jle
in
int
test
push
arpl
sbb
xor
imul
cmc
bound
movsb
enter
dec
jmp
mov
lods
sub
ss
inc
lods
ja
xchg
dec
push
fs
jg
cmp
mov
cmp
xchg
call
je
and
cld
mov
add
sbb
test
lods
push
rcrb
pop
ret
lods
mov
add
push
enter
add
popa
and
rol
dec
push
les
out
push
and
loope
stc
stos
nop
or
adc
mov
leave
push
shrb
sbb
les
adc
xor
out
mov
sub
mov
lods
dec
jge
pop
xor
dec
dec
cs
add
leave
jp
and
pusha
loop
sub
mov
test
shrb
xchg
imul
movsb
xchg
inc
or
negl
scas
fwait
jno
mov
sub
hlt
jno
arpl
and
loope
daa
lret
fldl
and
xchg
jge
test
inc
xor
xor
je
dec
cmp
mov
fcomip
pop
incb
mov
pop
fwait
pusha
add
insb
cmc
mov
xlat
movsb
ljmp
shr
dec
add
mov
div
cmp
xor
adc
movsl
sub
pop
int3
out
pop
aad
sbb
inc
xchg
or
add
cwtl
mov
lret
insl
mov
mov
movsl
lods
lcall
inc
mov
mov
mov
inc
push
pop
pop
sub
jge
shl
jns
mov
movsl
jae
add
or
je
jecxz
das
push
movsl
sub
cli
repz
inc
push
xchg
mov
dec
jmp
test
cmp
jae
out
mov
ror
jle
mov
push
add
add
and
cmpsb
xchg
js
pop
mov
mov
rcll
mov
jae
dec
aam
xchg
xor
xor
sub
mov
xchg
push
int
pop
in
and
pop
stc
sbb
inc
cmpsl
out
adcl
pushf
aam
jg
je
jne
sbbb
push
mov
adc
cwtl
sub
aaa
adc
rcl
inc
imul
mov
pop
aad
sbb
sahf
push
std
sbb
jp
pop
aaa
push
stos
ja
mov
outsb
jp
and
fadd
popa
fiaddl
in
and
es
into
sbb
cmpsl
pop
push
dec
inc
mov
fisttpl
sahf
roll
ljmp
into
test
inc
adc
ss
mov
rclb
aad
mov
daa
fdivrs
jns
sub
sbb
sub
and
paddsw
jnp
cld
inc
nop
adc
sbb
ret
vshufpd
fs
jmp
xchg
mov
pop
mulb
cmp
sub
lret
test
fbstp
js
cli
ds
lods
jnp
test
das
repnz
jno
inc
into
dec
out
mov
and
das
jle
out
stc
inc
cwtl
in
nop
mov
pop
lret
xchg
fistps
sbbl
jmp
cld
fisubs
pop
inc
inc
icebp
mov
mov
loopne
cmpsl
and
stos
divb
fadd
lods
cmp
xchg
test
push
mov
sbb
xor
icebp
addr16
nop
jmp
inc
mov
mov
int
jns
arpl
leave
inc
adc
ss
pusha
mov
mov
push
xorl
fnstsw
mov
in
sti
mov
lods
fnstenv
adc
in
hlt
xchg
stos
fwait
outsb
test
push
sub
sub
loope
sbbl
sbb
int
add
and
imul
mov
lcall
test
iret
xlat
xor
mov
sbb
andl
mov
pop
cmp
dec
add
dec
ljmp
in
icebp
fs
pop
xor
ret
cld
arpl
sub
mov
stos
lahf
inc
fimull
fwait
xor
push
xor
push
and
sub
cmp
mov
mov
sbb
jo
dec
popa
mov
xchg
testb
lea
jno
fucomp
lret
stc
xorb
cltd
fcoms
inc
xchg
out
stos
imul
push
sub
pop
in
ss
in
sbb
mov
push
mov
jae
inc
cmp
fiaddl
ds
or
repz
popf
dec
loope
inc
out
test
jb
arpl
andb
mull
cltd
mov
sbb
loop
xchg
add
int
dec
jnp
xor
aas
dec
int3
imul
fdivs
mov
repnz
test
mov
and
sub
jne
cmp
pop
cwtl
imul
fisttpl
mov
jl
sbb
xchg
mov
mov
sub
into
test
icebp
push
sbb
out
xchg
mov
ret
push
cmp
imul
xchg
sbb
out
sarb
inc
cmpsb
out
call
fsubrs
mov
addr16
aad
data16
aad
or
inc
inc
jge
inc
test
pop
adc
popl
mov
add
or
mov
insl
shlb
mov
cmpsb
dec
scas
and
mov
aaa
cwtl
orl
mov
mov
mov
push
jbe
sbb
mov
testl
mov
mov
jg
mov
cmp
cmp
or
lret
aad
fcomp
xchg
xor
fcoml
sahf
nop
adc
add
mov
clc
push
adc
cmpsl
push
rcrl
xor
mov
sub
jno
imul
and
push
dec
in
mov
inc
xor
sbb
nop
mov
dec
pop
mov
adc
jnp
stos
imul
inc
aam
jmp
insl
xchg
add
dec
inc
popf
fldcw
xlat
push
pop
fiadds
call
cmp
das
mov
inc
ds
mov
add
sti
mov
push
push
dec
insl
shlb
xchg
jg
stos
gs
cmp
clc
fdivl
push
lods
aam
test
stc
fdivr
in
pop
testb
xchg
pop
popf
xor
repz
mov
inc
int
pop
push
gs
mov
sahf
ror
jg
outsb
add
loop
loop
mov
cmp
push
cmpsl
push
pop
push
mov
push
pusha
insl
mov
mov
cli
lock
pop
adc
cs
add
push
lcall
cmpsb
sub
push
lret
jb
mov
or
scas
mov
sub
lods
data16
sub
inc
mov
xchg
pop
mov
sbb
mov
rcr
inc
dec
adc
pop
push
lock
das
adc
xchg
dec
lods
out
stc
jb
fiaddl
fs
mov
jmp
fcomps
adc
pusha
repnz
and
inc
movsl
or
sub
xchg
test
mov
daa
cmpsl
cmpsl
add
test
stos
mov
and
mov
lock
ds
ret
les
ljmp
shll
mov
sbb
scas
faddp
xor
fisubs
lret
sbb
test
dec
js
cmpsl
mov
cld
pop
andl
dec
lods
dec
or
xchg
cmpsl
jns
fcoml
jp
dec
aad
mov
sahf
lret
cli
jnp
xchg
push
aaa
movsl
ss
and
cmp
mov
out
inc
out
movsl
outsb
inc
popa
shll
sbb
mov
andl
adc
xchg
loop
scas
mov
test
add
or
cmpsl
sbb
or
stos
cs
das
sub
lcall
push
jns
dec
fldcw
dec
inc
mov
stc
push
cmpl
popa
clc
sti
insl
pusha
subl
sub
cmp
lret
pop
mov
mov
aaa
xchg
aaa
out
mov
push
mov
adc
loopne
mov
hlt
mov
cmp
inc
and
push
fisttps
and
push
add
xor
sti
push
mov
mov
shlb
adc
testl
js
or
mov
sub
sbb
mov
cmp
xor
stc
std
bndldx
xchg
data16
out
roll
xlat
xchg
xorb
add
add
in
sbb
outsl
sub
and
in
jae
daa
xor
pusha
adc
mov
aas
int
pop
sub
cmp
movsl
sub
xchg
pop
and
xor
syscall
mov
int3
mov
cmp
adc
mov
and
mov
pop
pop
mov
sub
mov
mov
lods
xor
dec
mov
ror
jecxz
push
into
fbstp
stos
jnp
out
push
jmp
mov
mov
adc
fidivl
cmp
push
mov
mov
cmpsb
ret
ja
cmp
jp
add
in
and
mov
mov
outsb
adc
loopne
xchg
dec
push
push
xor
or
cmp
xchg
leave
sti
hlt
cmp
loope
blsic
sub
or
jle
xor
dec
loop
out
xor
pop
ret
add
pop
inc
test
imul
arpl
adc
inc
fildll
cmpsb
mov
clc
insb
fdivrp
xchg
mov
jecxz
jo
jle
inc
push
loope
jnp
loopne
add
stos
lock
and
pusha
lret
dec
push
aad
push
lret
sahf
jae
mov
scas
shrb
sub
lahf
jbe
hlt
loope
push
lret
sti
or
jge
test
cmc
cli
sti
sbb
inc
sub
test
xchg
rcrl
mov
out
sbb
add
xor
and
into
inc
jns
addb
subl
sbb
pop
add
fsub
mov
in
push
cmc
dec
jge
dec
cmp
lds
loopne
cmp
jne
sbb
sub
mov
cmp
dec
push
mov
adc
testb
lret
add
hlt
arpl
and
add
xor
jno
lahf
push
cmp
inc
imul
test
mov
sbb
jnp
test
jno
in
lea
shll
mov
inc
movsb
or
call
imul
lcall
mov
pop
mov
and
and
lahf
jge
cmpsb
out
mov
imulb
pop
dec
aas
repnz
es
int3
add
cmc
arpl
cmpsl
jp
jge
dec
out
not
hlt
push
mov
cmp
loopne
roll
push
add
pop
rcl
push
test
lock
xlat
cli
mov
xchg
frstor
int
pop
pop
testb
and
sbb
xor
inc
mov
test
jecxz
sub
sub
pop
push
rcll
stos
icebp
xchg
imul
adc
std
enter
jo
and
pop
mov
jne
inc
cwtl
adc
cld
inc
mov
or
mov
xchg
aam
sti
mov
jmp
pop
aaa
jae
rclb
ret
xchg
push
lret
push
and
loop
adc
insb
jecxz
iret
sub
je
sub
lret
call
or
mov
xor
mov
mov
and
aad
sub
dec
shll
jno
into
jae
leave
mov
cmp
sahf
rorl
std
fistps
push
sbb
mov
mov
loope
sar
mov
inc
pop
adc
cmp
mov
xor
ja
ljmp
loope
out
pop
cmp
pop
sar
bound
aas
shlb
xor
scas
and
std
sub
mov
add
push
ss
xchg
push
jle
divb
sbb
outsb
sub
aad
xchg
sti
ds
adc
lcall
sub
cli
das
into
mov
out
mov
push
cmpsl
push
iret
and
loope
xchg
lret
mov
inc
push
inc
xor
orl
and
and
adc
mov
daa
jmp
ja
mov
mov
cmpsl
mov
cltd
mov
dec
cmp
into
add
mov
arpl
mov
mov
dec
xchg
xchg
mov
cmp
sahf
sub
mov
pop
add
int
popa
add
stos
daa
dec
sar
divl
jmp
sti
jns
jae
add
aaa
test
mov
inc
jbe
xchg
push
inc
sarb
cmp
mov
icebp
xchg
jmp
inc
cmpsl
outsl
movsb
leave
test
icebp
aam
xchg
das
sbb
repz
rcll
cmp
pushf
rorb
pop
or
imul
int3
lds
push
push
dec
arpl
enter
jo
sub
out
nop
pop
sbb
ss
insb
jle
jle
mov
sbb
sub
dec
push
mov
mov
inc
cli
dec
repnz
push
jno
push
push
xchg
or
out
aas
orb
sub
xchg
xor
arpl
loop
or
inc
repnz
jbe
xor
ja
xor
scas
xchg
add
jbe
scas
xchg
pop
jecxz
ret
jecxz
and
aam
sub
cmc
lock
lods
add
mov
mov
pop
adc
stc
jbe
and
sti
xchg
orb
jae
mov
ds
mov
push
mov
movsb
mov
inc
or
cmpsb
jae
cmpb
sti
lds
mov
lcall
ljmp
sbbb
mov
cwtl
dec
mov
loopne
mov
in
push
test
mov
xchg
movsl
mov
push
cltd
push
insl
jl
in
jmp
push
lds
xor
cli
xor
aam
mov
cmp
mov
fmuls
mov
and
cmc
inc
insl
mov
jno
ja
and
jae
mov
test
fprem
xchg
push
jle
lcall
pusha
add
cmpsl
inc
mov
inc
dec
sub
and
add
mov
lret
cwtl
add
add
pop
xor
test
pop
push
mov
xchg
sarb
sub
call
int
pop
add
sbb
popa
mov
dec
int3
mov
out
aad
outsb
adc
sahf
jg
push
mov
out
lahf
dec
sub
inc
outsl
xchg
mov
insl
imul
ficoml
mov
arpl
jl
inc
enter
sarb
sarb
repnz
sti
dec
sbb
arpl
cmpb
and
imul
jecxz
jo
bound
cld
xor
mov
daa
pop
adc
loop
jb
jo
pop
jle
cmpsb
pop
push
outsb
xor
ret
pop
jno
out
loopne
fwait
clc
clc
mov
push
ljmp
sti
int3
cmp
jns
xchg
jns
xchg
push
dec
subb
cs
div
test
mov
or
mov
mov
and
cwtl
jbe
and
xchg
lahf
inc
popa
pop
lahf
cmp
cwtl
ljmp
pusha
std
cmpsl
xchg
xor
sahf
pop
jecxz
aam
int
add
jb
scas
insb
cwtl
bound
push
sub
int
dec
or
mov
cmp
ds
xchg
pop
xchg
repz
jno
inc
test
pusha
ret
lret
sbb
push
cmp
ljmp
cs
push
pop
jb
jbe
testl
cltd
fs
gs
icebp
sub
loop
push
sub
cltd
push
mov
mov
fwait
mov
aaa
sub
xchg
mov
rcr
lret
jae
or
fsubp
mov
adc
sbb
dec
xor
enter
faddl
inc
pusha
and
test
pop
push
lret
fstl
xchg
adc
addr16
add
les
and
jno,pn
lea
xadd
mov
test
sub
and
jge
pop
cli
pusha
jno
push
jmp
mov
xchg
sub
test
pop
in
sub
fstpl
jns
cmc
into
mov
sbb
adc
int
imul
sub
inc
out
aam
scas
push
sbb
jle
dec
imul
push
pop
dec
insl
jg
jle
push
sbb
fdivs
and
mov
fwait
xchg
rcll
cmpsl
jl
inc
xchg
ret
add
loopne
shrb
lret
jg
shl
dec
mov
xchg
cld
js
pop
popa
lcall
push
cltd
add
jbe
and
fisttps
lret
push
lret
fyl2x
test
add
pop
sbb
add
xlat
dec
mov
and
and
cmp
sub
mov
mov
imul
cs
mov
in
shll
inc
testl
xlat
dec
cltd
xchg
cltd
adc
aas
sbb
cmp
dec
lret
jne
or
shll
xchg
jae
xchg
and
mov
lock
add
iret
mov
inc
pop
aam
movsl
scas
pop
stc
mov
xchg
out
and
out
loope
hlt
dec
xlat
aaa
sbb
pop
mov
sar
pushf
lcall
aam
enter
add
std
push
or
dec
lds
fs
repz
and
movsl
sub
imul
dec
jecxz
or
test
loop
mov
sub
and
mov
sbb
cld
aas
jns
inc
imul
clc
sbb
xchg
dec
xchg
jne
push
inc
aad
adc
cli
mov
inc
cli
fadds
jp
push
scas
dec
dec
scas
or
aad
testb
lret
sbb
jae,pn
loop
test
or
fwait
mov
add
scas
out
xor
push
mov
push
sti
push
mov
adc
imul
mov
pop
dec
in
cmp
sahf
imul
cmp
shlb
add
mov
inc
sti
pop
shlb
push
pop
mov
push
pop
icebp
sbbb
pop
pop
js
xor
or
pop
dec
mov
call
inc
cmp
mov
mov
mov
mov
lret
pop
jle
fcom
mov
pop
mov
xor
das
clc
jg
mov
hlt
das
imull
jno
subb
mov
test
ja
sub
push
inc
out
or
jmp
mov
mov
nop
shl
push
add
loopne
mov
add
pop
push
push
cmpsw
scas
or
ficoml
inc
xchg
popa
clc
ljmp
cmp
sbb
repz
dec
add
pop
inc
popf
mov
fstpl
cmc
int
push
gs
pop
pop
dec
inc
push
xchg
insl
ret
mov
data16
inc
xchg
mov
mov
leave
push
adc
inc
pop
push
mov
ret
adc
in
hlt
xchg
popf
mov
roll
add
xlat
xchg
pop
pop
push
xor
mov
popf
in
dec
jp
outsb
ja
dec
xchg
iret
sub
push
shlb
adc
scas
pop
jmp
jl
mov
or
mov
adc
mov
fsubr
fistps
aaa
inc
cmp
lahf
inc
loope
leave
mov
test
mov
or
popa
fsubrs
outsb
add
cltd
negl
lds
insb
loope
aas
pop
jl
push
nop
sub
add
cmc
cmpsb
xchg
or
in
push
cli
add
dec
out
add
arpl
pop
stos
mov
mov
lods
das
decb
add
cwtl
incb
add
jb
rorl
les
and
cmpsb
leave
jne
in
ja
push
ljmp
ljmp
out
call
inc
test
xor
lds
in
sub
sahf
cwtl
sbb
push
cmp
dec
mov
add
adcb
dec
mov
lods
or
test
pop
xor
sbb
stos
pop
xor
cmp
add
cmc
and
in
rcrl
and
ja
jle
dec
pop
or
scas
jg
int3
shl
popl
mov
dec
fisttps
xchg
pop
xorb
xchg
insb
out
sti
test
les
inc
addr16
insb
fcoms
add
mov
xor
xor
or
cmp
mov
mov
push
daa
dec
nop
fsubrl
fstpt
xor
pop
add
sbb
mov
xchg
inc
sti
out
lahf
ljmp
xchg
cmp
test
mov
or
mov
hlt
adc
xchg
loope
scas
mov
push
pop
repz
int3
stos
popa
out
sahf
sahf
sarb
jg
imul
cmpsb
lret
cs
inc
enter
insl
int3
xor
sahf
loope
aad
mov
test
negl
or
dec
scas
xchg
inc
orb
jge
test
xlat
xchg
or
int
xor
mov
iret
pop
inc
mov
add
jle
rorb
and
or
lock
push
or
shrb
or
iret
les
out
nop
clc
enter
fbld
scas
mov
pop
nop
dec
adc
outsl
pop
xor
iret
cmp
loope
lock
fcmovne
ret
adc
mov
aad
jbe
mov
movb
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
push
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
andl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jb
xor
mov
mov
and
sub
sub
mov
xorl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
sub
mov
sbb
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
adc
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
dec
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
adc
mov
lea
sbb
mov
xor
or
mov
adc
mov
addl
mov
mov
xor
sbbl
add
xorl
mov
orl
mov
mov
mov
sbbl
add
dec
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
or
mov
adc
mov
mov
xor
mov
subl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
add
mov
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
not
mov
sub
mov
mov
or
mov
xor
add
adcl
imul
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
add
cmp
movl
mov
movl
push
movl
je
sub
mov
add
dec
mov
mov
adcl
xor
addl
add
subl
imul
movl
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
jmp
xchg
rolb
jae
fs
movsb
pop
je
pushf
jp
in
jp
sbb
mov
imulb
mov
in
mov
std
lret
shlb
pusha
sub
push
mov
insb
dec
push
mov
jmp
rcll
jecxz
push
mov
lods
insl
add
push
scas
faddl
in
test
enter
and
out
mov
inc
fimuls
mov
mov
aad
pop
adc
insl
push
mov
shll
cmp
mov
xchg
loope
xchg
stc
add
rorb
ja
and
call
roll
out
shll
sub
or
lods
and
adc
fisubrl
mov
cld
aad
lea
arpl
lds
fs
jne
fcoml
or
push
fdivl
fsubr
push
xlat
jb
lret
rorl
ficomps
jb
cmp
fisttps
iret
inc
test
xor
jge
dec
cmp
into
lcall
movsl
push
lock
mov
inc
mov
adcl
push
dec
cs
in
aam
push
sbb
mov
sbb
mov
add
sbb
mov
sub
xor
lcall
mov
pop
cs
dec
add
mov
mov
mov
out
in
sbb
dec
xchg
xor
lock
push
mov
mov
mov
test
dec
mov
cmp
out
or
aad
fstps
gs
jae
lock
xlat
gs
cmp
and
xor
pop
loope
mov
mov
sbb
ret
je
out
ret
dec
loop
and
nop
fadds
subb
jns
call
push
ja
xchg
mov
push
dec
cs
jmp
sub
xchg
fisubrs
push
in
pop
xchg
adcl
push
test
jl
js
or
dec
sti
out
testl
adc
call
mov
pop
push
iret
insl
outsb
inc
or
sub
xchg
aas
inc
fmulp
dec
jnp
sbb
inc
push
loope
add
es
add
inc
stos
insb
leave
pushl
ja
cli
sub
or
adc
fcomi
sub
push
fs
fwait
push
es
jle
scas
fucomp
dec
adc
loop
jno
inc
out
cmp
mov
daa
leave
insl
cli
notb
or
fdivs
inc
xorb
inc
push
inc
sti
push
out
lret
sbb
imull
sub
js
clc
cmp
repz
cmp
aam
aas
ret
lea
aaa
jbe
add
add
ficoml
xchg
pop
mov
jnp
sti
pop
push
ds
dec
inc
inc
out
or
out
dec
out
jmp
jge
insl
outsl
sti
mov
sbb
notb
adc
test
pop
std
pop
sbb
lret
sbb
stos
ja
cmp
inc
out
aam
xchg
or
or
outsb
inc
jo
cmc
pop
lea
xor
fcomip
or
push
xchg
repnz
in
sub
gs
sub
in
push
push
rorl
push
div
inc
ss
mov
mov
rcr
aad
add
lods
mov
cmp
leave
cltd
jno
adcb
mov
inc
xor
scas
cs
pop
in
insl
mov
cmp
adc
push
dec
stos
sbb
push
sub
ror
or
xchg
jmp
pop
and
lock
cwtl
and
dec
inc
sub
xchg
and
sbb
sbb
popa
push
dec
outsl
inc
cwtl
pop
dec
adc
leave
sbb
insb
pop
fbld
fmul
shlb
and
ljmp
fs
sbb
popa
dec
daa
clc
mov
push
je
xor
fstpt
push
ljmp
jne
mov
xchg
rcrl
dec
jp
lods
mov
push
cmp
mov
je
icebp
sbb
sarl
loope
cmp
push
rcl
inc
mov
aam
cli
fwait
shrb
sbb
inc
je
xchg
in
or
loopne
fidivl
es
int
in
jl
lahf
add
push
dec
sbb
out
and
insb
out
add
mov
push
mov
adc
add
push
or
jmp
pop
jb
mov
push
in
inc
cld
ja
jmp
jno
xlat
jae
ss
xor
xchg
js
inc
mov
add
je
sub
aam
dec
adc
lcall
pop
cmpsb
or
lds
mov
or
mov
mov
popf
mov
int3
js
jle
mov
sub
lret
lea
lock
mov
fstp
adc
out
ds
mov
daa
testb
loope
inc
and
dec
outsl
add
pop
jb
sbb
cmc
outsl
xchg
ljmp
daa
dec
orl
nopl
adc
jns,pt
mov
xchg
xor
sti
shlb
fistpll
jae
popa
into
xor
or
xchg
xor
add
sahf
mov
iret
pop
lock
pushf
inc
andl
add
rorb
pushf
shll
sbb
jbe
scas
pop
adc
cmpsl
xor
repnz
test
push
and
fbstp
sub
or
mov
fwait
mov
cld
les
xor
or
in
cmp
sbb
mov
sub
int
and
dec
push
sbb
insl
mov
cwtl
daa
lods
clc
xchg
inc
add
mov
aad
faddl
and
stc
push
mov
arpl
jnp
mov
jmp
sbb
jo
sahf
mov
jae
aad
sub
adc
scas
movsb
imul
hlt
imul
aaa
lock
addl
icebp
cwtl
jbe
jp
dec
mov
lea
fcomi
movb
ror
push
or
loop
orl
fucomp
arpl
into
ds
push
pop
mov
mov
or
mov
filds
inc
scas
xchg
xlat
repz
inc
jnp
lods
lret
jmp
jge
arpl
jmp
fistpl
cmpsb
xor
push
push
add
xor
dec
pusha
mov
stc
rcl
popf
push
in
mov
or
clc
stos
nop
xchg
lahf
scas
dec
xor
rcrb
inc
test
jne
jg
add
or
popa
inc
cmp
add
movsl
rolb
out
jno
lret
enter
call
outsb
jg
xor
xchg
fs
icebp
pop
add
push
lcall
mov
sahf
cmp
stos
loope
or
xlat
xchg
cmp
pop
pop
stos
cmp
mov
mov
push
pop
mov
and
cmp
adc
or
repnz
cmp
ds
mov
xchg
sbb
outsb
jg
stc
shlb
or
inc
iret
pusha
dec
xor
rcll
in
inc
or
les
lret
pop
loop
in
mov
outsb
cmpsb
nop
cmp
push
add
imul
or
or
push
idiv
mov
fs
roll
mov
mov
inc
movsb
cmc
xor
pop
mov
adc
xchg
dec
mov
mov
dec
cmp
jmp
xor
dec
jns
jmp
pushf
js
std
dec
dec
scas
jp
xchg
cmp
lds
leave
sbb
or
jo
xchg
push
and
mov
stos
bound
sti
movsbl
jge
push
out
lods
repnz
mov
mov
xchg
lcall
mov
ljmp
addr16
ror
add
mov
inc
lock
je
scas
cmp
mov
aaa
stos
xor
outsb
lret
mov
and
jmp
imul
add
sbb
dec
and
popa
pop
jno
cmpsl
or
js
adc
cmp
sub
adc
leave
add
xchg
fstl
lock
cmc
add
pop
lret
popa
push
lahf
imul
rcll
cmp
sub
push
addb
int
shlb
cmpsl
ja
jle
aam
subl
aad
in
sti
int3
and
cmp
adc
sbb
mov
scas
cmp
lret
or
adc
inc
out
movsb
int
mov
sbb
jno
push
cmpsb
ds
loope
mov
pusha
push
cli
mov
add
into
xchg
cld
rorl
and
cltd
xor
in
sbb
xor
pushf
sub
mov
xchg
mov
xchg
subl
xchg
shl
xor
cmpsl
xorb
xchg
inc
sbb
lods
inc
lret
daa
add
push
pop
enter
into
xchg
and
xor
testb
clc
xor
mov
jbe
xchg
shlb
subb
push
cmp
sbb
repz
adc
add
aad
xor
scas
fstpl
mov
fbld
dec
sarl
lret
jecxz
out
xchg
std
hlt
out
sbb
lea
ficoms
push
and
sti
rcr
cs
popa
push
mov
mov
popa
pop
fsts
roll
dec
jae
mov
mov
ljmp
rcr
inc
sub
cmp
inc
sbb
into
cmpsb
aad
cmp
faddl
jmp
sbb
daa
loope
fimuls
jns
stc
push
inc
clc
cwtl
lret
pop
scas
xchg
pop
xor
stos
pop
loope
or
shl
add
ds
pop
fcoms
inc
add
or
test
mov
iret
data16
jmp
bnd
cld
jae
lret
lcall
push
js
pushf
jbe
lahf
or
mov
imul
mov
subb
lds
pushf
int
sub
mov
int
jl
or
repz
repnz
mov
and
mov
out
test
addl
es
int3
test
adc
pop
call
sbb
pushf
mov
and
jecxz
fstpl
and
daa
mov
dec
push
ds
aad
int
test
jb
or
test
mov
mov
adc
add
or
cmc
filds
dec
jo
mov
push
push
pop
pop
daa
mov
xor
inc
push
sbb
xchg
outsb
arpl
cli
mov
jp
outsb
add
fld
mov
mov
scas
sbb
aas
dec
pop
cmp
mov
inc
hlt
xchg
lods
das
dec
bnd
xchg
pop
scas
out
cs
out
movhps
jns
insb
jnp
rcrb
mov
add
jnp
dec
jg
jecxz
adc
mov
add
imul
push
repnz
push
stos
aad
aaa
ret
adc
cmpl
lret
push
stc
pusha
xchg
cmp
idivb
mov
push
inc
jo
sbb
inc
push
jae
xchg
and
rorb
inc
adc
mov
test
outsb
test
bound
jne
dec
insb
add
aaa
push
xchg
imul
in
inc
ljmp
outsl
sti
cld
js
scas
push
pop
inc
loop
push
lret
jne
mov
iret
and
divb
xchg
repnz
ret
clc
lds
ds
add
xchg
push
lea
and
mov
dec
mov
movsb
mov
push
bound
sahf
pop
fdivrp
lds
les
mov
sti
fs
or
add
mov
mov
dec
ficoms
hlt
addb
or
xor
mov
cmc
add
xchg
push
pop
fstl
ljmp
sbbl
icebp
bound
rolb
pop
mov
ret
sub
mov
roll
add
mov
mov
add
adc
xchg
adc
int
jp
pop
test
mov
popa
cltd
lock
aam
pusha
jge
ds
daa
in
add
dec
pop
shrb
mov
int3
out
outsb
clc
add
push
arpl
push
sarb
mov
std
xchg
sarl
movsb
push
fs
lds
jb
adcl
push
cld
xor
mov
mov
movsb
pop
push
fnstsw
jl
popa
adc
push
insb
jmp
sbb
insb
call
dec
jmp
fimuls
shlb
lds
sub
xchg
out
push
add
aam
inc
sar
and
adc
or
shrb
popf
cmp
mov
enter
test
sub
xor
fdivrl
loope
pop
loop
iret
and
ss
mov
push
push
cmp
popf
jne
lahf
sahf
loope
fnstsw
orb
cmpsl
sbb
test
fimuls
test
aad
ret
xchg
sbb
rcll
js
sbb
pop
pop
test
sahf
mov
xchg
into
aam
sbb
push
mov
push
insb
xlat
mov
mov
aad
icebp
cmpsb
incl
xor
mov
add
jmp
fidivrl
fstpl
shlb
mov
add
cwtl
ret
xchg
test
cli
ja
sbb
insl
adc
or
push
adc
arpl
loope
mov
jge
xchg
mov
pop
push
adc
mov
cmc
adc
xchg
adc
inc
ja
sub
push
sbb
into
lret
and
pavgw
jp
pop
call
add
sbb
insb
dec
in
sbb
mov
sbb
mov
sub
pushl
call
pop
in
jge
jns
inc
ja
pushf
jne
lds
mov
mov
in
test
xor
adcl
sub
dec
mov
or
jecxz
xor
adc
sbb
xor
mov
lcall
rep
cmpsb
movsl
mov
call
sbb
lret
push
push
mov
popfw
adc
jle
dec
rorl
push
loope
out
cmp
ljmp
mov
popa
mov
inc
push
cmp
ss
mov
test
hlt
daa
jge
flds
call
mov
push
daa
inc
push
enter
inc
js
or
dec
sub
jl
fnstcw
xchg
pop
xchg
or
mulb
mov
xor
imul
shll
ss
repz
insb
xlat
jle
inc
ficoml
adc
imulb
push
leave
inc
xor
jmp
mov
aaa
mov
cs
pop
pop
jmp
inc
push
push
jae
adc
add
daa
mov
cs
mov
xor
in
je
xor
cmp
push
jne
push
dec
or
loopne
jl
or
mov
imul
jecxz
repnz
fwait
pop
jmp
push
add
jecxz
add
pop
addb
sbb
mov
ret
mov
jmp
das
out
mov
cmpsb
je
mov
stos
pop
push
je
movsb
add
fstps
and
and
cmpsb
sysenter
dec
rcl
push
sbb
add
sbb
cmp
jle
test
cmpsb
mov
sbb
aaa
insb
outsl
jbe
push
mov
shll
pop
ficompl
test
adc
jae
shlb
loop
test
insl
ss
into
adc
fdivrs
in
or
lods
dec
xor
ljmp
aad
mov
xchg
ficomps
dec
cld
popf
mov
push
cld
push
cmpsb
mov
orb
sbb
lcall
dec
dec
ud0
dec
mov
aad
pop
or
out
ds
clc
xorl
xor
xchg
mov
ljmp
jne
xor
push
adc
cmp
or
je
jnp
cmp
sbb
or
sbb
xor
pusha
xchg
pop
mov
inc
cmpsb
mov
sub
insb
cmp
jl
imul
lret
cmc
mov
push
enter
shrl
adc
add
pop
jns
rorb
bound
adc
mov
sbb
push
and
mov
icebp
test
xchg
or
dec
and
push
les
pop
lcall
fcomps
mov
loope
and
dec
inc
int
outsb
sub
xchg
pop
dec
into
leave
fs
pusha
lea
pop
rcll
repz
test
hlt
xor
or
aad
xlat
jbe
push
cs
or
int3
push
sub
jo
mov
push
f2xm1
aaa
xchg
pusha
pushf
sub
jge
cli
xchg
stc
push
pop
jp
loope
xchg
test
add
mov
cmp
and
jle
fucomip
scas
pop
test
leave
dec
test
jbe
imul
add
jae
adc
cltd
pop
inc
xor
out
in
int3
and
lret
pop
std
push
mov
mov
or
shr
adc
add
in
jns
jns
ljmp
push
sub
stos
mov
inc
loop
movsb
insl
scas
dec
popa
cmp
in
fisttpll
and
cs
jne
insl
inc
mov
jmp
movsb
fwait
xchg
mov
fistl
sbb
jg
sbb
in
push
cmp
insb
xchg
aas
ret
lds
loope
inc
mov
cld
jb
jmp
mov
into
inc
int3
sub
daa
sahf
xor
xchg
out
je
pop
hlt
xchg
js
and
lret
sbb
es
es
jnp
js
in
mov
andb
ss
test
in
fcoms
and
sub
mov
mov
lds
cs
cmpb
jecxz
sub
les
and
mov
in
stc
sub
xchg
cmp
shl
rcrb
int3
cs
cmpsb
adcb
cwtl
and
mov
inc
rcrl
mov
lods
adc
push
and
js
pusha
and
scas
mov
fldenv
fisttpll
ficoml
stos
push
xor
mov
mov
cmpsl
les
push
aam
mov
pop
xor
loope
xchg
adc
outsb
fisubrl
cmp
sbb
push
out
lods
fsubrs
repz
mov
fwait
dec
movsl
inc
out
dec
stos
adc
adc
inc
dec
mov
sub
push
mov
push
add
xchg
cs
and
sahf
cmp
push
hlt
xlat
adc
cmpsb
js
sub
push
and
sti
inc
shl
ret
imul
jo
insl
adc
rcrb
test
add
test
mov
xchg
jnp
add
pop
mov
cli
dec
and
mulb
lahf
push
mov
cmc
in
fadds
xlat
add
imul
and
xchg
mov
out
lods
jbe
mov
daa
mov
mov
iret
lret
jge
cwtl
in
add
ret
test
xor
cltd
push
jg
mov
pop
xchg
lahf
xchg
sbb
mov
ret
jmp
dec
arpl
jnp
cmp
mov
les
clc
arpl
sbb
out
pop
ljmp
and
and
jl
clc
out
mov
insl
inc
jno
xchg
dec
mov
loopne
insl
cmp
xchg
rcl
push
out
int
popa
in
ja
ljmp
je
ror
clc
divb
les
mov
shll
pop
loop
iret
outsb
push
fsubrs
sbb
lods
out
lcall
testb
and
cmpsl
fwait
bound
xlat
and
add
mov
testl
jns
cs
jg
dec
mov
mov
fdivrl
aas
inc
pop
xchg
and
daa
push
push
mov
js
mov
decl
xchg
loope
iret
jmp
xchg
in
repnz
sbb
add
inc
push
push
lods
je
mov
cmpb
fsubr
add
test
fcmovnu
lret
subb
cs
ljmp
sub
jle
add
cmp
movlps
test
xchg
aam
loop
sub
push
sub
cmp
int
inc
mov
dec
push
pop
dec
add
push
into
xchg
xchg
add
add
sahf
insl
outsl
sub
pop
ret
cmp
dec
jo
pop
stos
adc
mov
inc
xchg
jne
adc
lahf
shrb
lock
pop
xchg
jae
adc
in
aaa
lret
jne
lcall
sub
push
adc
or
lock
jb
imull
xor
cwtl
or
roll
push
lret
addr16
test
push
adc
ljmp
daa
inc
je
rclb
das
nop
test
ljmp
sbb
subl
push
and
vpmacsdqh
enter
adc
cld
mov
pop
outsl
fmull
sub
rcll
scas
add
add
push
orl
sti
incl
mov
mov
cmpsl
pushf
sub
and
loopne
lret
cmp
mov
out
imul
mov
data16
sahf
mov
stc
mov
ljmp
xor
aas
test
test
or
mov
mov
xor
dec
stos
sahf
pop
rcr
xchg
mov
pushf
xor
or
adc
shll
dec
stos
cmp
mov
push
xchg
ret
add
cs
jae
jmp
mov
test
movaps
imul
addr16
or
fidivl
mov
mov
mov
cmp
jp
sbb
push
xor
jns
jnp
popf
push
subl
jbe
add
shll
sbb
loopw
push
mov
mov
ds
and
fucom
xchg
fisubrs
das
outsb
dec
pop
adc
shll
xchg
loopne
push
inc
pop
shlb
cltd
adc
adc
mov
shrb
xchg
iret
sbb
mov
cmc
inc
jp
xorl
jb
popa
out
fcomi
pop
xchg
mov
xlat
add
aam
xlat
vxorps
ret
inc
test
xchg
mov
mov
shlb
sub
xor
and
cmpsl
in
je
out
mov
pop
pop
pop
adc
xchg
dec
in
inc
mov
insl
vmovdqa
scas
adc
jecxz
testl
push
mov
push
mov
adc
push
dec
adc
mov
ss
fxch
jns
jg
neg
lret
andb
sahf
pop
test
stc
jl
shl
pop
dec
call
cmp
mov
adc
das
add
clc
xor
push
fsubs
inc
sbb
loope
iret
imull
inc
enter
sbbb
lods
iret
loope
or
push
push
add
or
pop
out
mov
mov
or
pop
iret
sbb
pop
hlt
sub
inc
fcmove
fistpll
xor
out
jl
xchg
xor
adc
cwtl
mov
mov
test
and
movsl
lods
xor
mov
jl
std
pop
adc
push
or
mov
bound
cmp
xchg
xor
mov
xchg
test
and
mov
fwait
cmpsl
xchg
stos
jle
clc
aad
and
ret
ljmp
mov
dec
pop
lahf
cmpsb
repz
stos
sub
pop
dec
jae
out
sub
pusha
xor
sbb
fcomi
inc
sahf
and
sub
les
cwtl
sub
jl
push
cmp
sub
ret
push
inc
adc
sub
dec
mov
int
or
xchg
mov
stc
es
and
cli
add
jp
dec
mov
testl
iret
pop
icebp
cmp
cmpsb
and
xlat
insl
test
and
cld
movsl
push
fcmovb
add
subl
xchg
jae
cli
sbb
popf
push
mov
inc
xchg
pop
mov
testb
ds
stc
hlt
and
mov
mov
mov
pushf
sti
add
pushf
cmpsb
lret
dec
pop
dec
daa
sub
icebp
cmp
negb
fstpt
rclb
add
hlt
push
rorb
fcom
movsb
imul
mov
mov
pusha
imul
hlt
mov
sahf
pop
jb
adc
push
mov
scas
mov
imul
mov
stos
rcll
jbe
je
lods
or
mov
dec
repnz
imul
iret
dec
sbb
mov
test
ds
aaa
out
outsb
pop
mov
mov
push
test
ljmp
cmpsl
push
lods
add
call
outsl
fnstenv
inc
jns
pop
test
out
shl
inc
imul
pop
or
sub
push
imulb
push
sbb
loope
and
xor
sbb
aad
mov
pop
xor
std
into
or
xor
xor
ret
shll
mov
mov
mov
addr16
insb
popf
or
out
pop
sub
push
cli
mov
jnp
cmp
mov
cmpsb
cmova
cmpsl
sub
push
xor
jg
test
popf
or
pop
arpl
jg
aam
lea
mov
fs
mov
fiadds
xor
rclb
stos
lahf
xor
fmull
jb
std
jp
iret
push
jo
inc
into
jp
fs
stos
imul
cmp
mov
shll
pop
mov
lock
push
cmp
mov
insb
scas
push
jae
dec
fcmovnb
dec
xor
call
xchg
xchg
pop
jo
xchg
cmp
divb
inc
jnp
push
fcoml
dec
push
test
or
out
mov
pop
pop
and
arpl
ds
mov
xchg
int
inc
fsts
cli
inc
push
xchg
xchg
ret
icebp
out
xor
fiadds
mov
xlat
cmc
shrb
mov
outsl
mov
arpl
fldenv
in
jns
ret
mov
jle
jmp
loopne
icebp
or
into
mov
dec
mov
addb
pop
adcb
cltd
aas
lea
add
pushf
and
ret
push
push
lods
add
jge
stc
cli
mov
or
inc
test
pushf
inc
rcl
mov
sbb
jmp
or
ds
mov
mov
pop
pop
add
cmp
and
sti
xor
pusha
cmc
lret
dec
lds
adc
test
xor
in
mov
enter
aad
pusha
mov
pushf
cmp
adc
lret
shll
or
ret
mov
inc
insb
sbb
jl
pusha
cld
push
movsb
stc
pushf
nop
pop
xchg
mov
mov
enter
sti
dec
sub
jb
movsl
and
sub
adc
mov
and
lea
jg
scas
movsb
mov
sti
les
out
gs
lods
cwtl
call
idivb
push
mov
add
push
ret
push
push
xchg
cli
jle
add
xchg
aas
fstl
lcall
push
je
mulps
std
out
lahf
lahf
push
test
cmpsb
pop
movsl
fisubl
cmpsb
jl
or
addr16
std
add
mov
jmp
sarl
jmp
dec
sub
pop
mov
jecxz
pop
and
inc
mov
lods
or
mov
mov
xor
cmp
je
mov
add
sub
and
inc
mov
mov
xchg
unpcklps
ficomps
sub
or
jecxz
call
pop
icebp
dec
pop
cmp
mov
subb
fdivrs
fwait
mov
cmpsl
xor
pop
decl
dec
sub
pop
sti
or
test
xchg
mov
jno
mov
jnp
mov
sub
pop
or
pop
shrb
test
test
loope
pop
mov
pop
mov
jbe
or
shll
dec
mov
and
mov
xor
into
pop
addb
lahf
pop
sub
or
lcall
pop
loope
andl
xor
stos
jmp
dec
or
hlt
mov
int
or
loop
gs
test
adc
mov
lods
mov
cmpsl
adcl
adc
adc
nop
mov
cltd
jp
in
rolb
cwtl
jae
xor
mov
mov
mov
push
in
adc
insb
cli
sub
int3
arpl
std
clc
add
mov
idiv
call
and
arpl
pushf
lret
jnp
mov
js
fsubr
add
jbe
push
outsl
lahf
sarb
std
pushf
cmp
mov
jns
dec
cmp
sub
mov
cmp
inc
mov
cli
dec
out
lcall
or
ds
lock
addr16
lret
pop
es
or
sahf
ret
shrb
leave
mov
mov
test
stos
and
jae
out
ret
pop
enter
pop
je
test
pop
into
sbb
xchg
rcrl
daa
rol
and
js
loope
pinsrw
xor
lock
push
roll
push
or
push
pop
inc
incl
sub
outsb
cmp
test
bound
ss
pusha
in
sub
cwtl
xor
adc
lock
clc
pop
xor
in
pop
iret
sub
mov
movsb
fistpl
and
dec
orb
shll
xchg
cmp
sbb
repz
push
loopne
adc
enter
cmp
popa
int
scas
dec
mov
leave
mov
and
gs
and
mov
sahf
pop
incb
dec
pop
mov
add
stc
pop
jae
out
add
inc
xor
lret
setl
adc
sbb
inc
hlt
mov
call
sti
dec
lcall
push
pop
in
repz
inc
getsec
test
pop
or
push
mov
xlat
jne
push
das
jmp
aad
adc
out
mov
adcl
pop
aaa
popf
int3
cmpsb
mov
jne
movsb
and
loop
or
push
jnp
jmp
mov
push
and
fisubrs
divb
js
xchg
xchg
das
int
or
iret
pop
pop
ljmp
orl
add
sub
sub
inc
bound
adc
shlb
lods
jno
repz
pop
arpl
iret
xor
sahf
and
pushf
push
dec
inc
xlat
sarl
imul
repnz
sahf
js
icebp
adc
int3
fistpl
xchg
ret
cltd
into
dec
inc
inc
in
rorb
lret
push
mov
add
push
mov
xchg
into
or
sahf
movb
movsb
or
mov
movsl
inc
dec
push
out
sbb
cmp
icebp
xchg
jge
add
sbb
into
pop
idivb
bound
mov
add
shl
in
push
insl
cs
jmp
leave
leave
hlt
test
pusha
das
mov
mov
sarb
adc
aaa
movsl
pop
aaa
cmpsb
mov
lds
jle
inc
inc
fidivl
inc
out
mov
cmp
xchg
jo
fidivl
and
mov
outsl
ss
enter
call
aad
xchg
add
and
jb
pop
std
sub
sbb
or
ret
imul
mov
and
cmp
out
fs
std
pop
lds
arpl
and
popf
inc
sti
sbbb
adc
jmp
adc
mov
inc
test
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
xor
push
mov
mov
sub
add
mov
addl
mov
movl
push
or
mov
mov
xor
mov
mov
mov
incl
xor
movzwl
adc
mov
xor
mov
andl
add
add
imul
movzwl
mov
cmp
movl
je
mov
sub
mov
xor
add
adc
mov
xor
addl
lea
xorl
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
add
imul
mov
cmp
je
jmp
xor
aaa
fwait
mov
cmpsl
cmp
leave
jp
inc
pop
jp
out
pop
inc
test
lret
jg
xor
ss
inc
pop
and
or
out
jl
sti
inc
addr16
fwait
pushl
xor
int
sub
sub
scas
mov
sti
jb
arpl
add
out
xchg
mov
mov
xchg
and
test
es
dec
icebp
xor
mov
insb
pop
cmp
shll
rclb
xchg
test
jae
jmp
push
dec
negl
inc
loope
inc
fcoml
mov
xor
test
pop
and
cmpsb
mov
mov
or
pop
aam
hlt
dec
stos
dec
shlb
insb
cmpl
pop
notl
mov
inc
jg
dec
frstor
mov
and
cmc
out
out
imul
add
gs
inc
pusha
imul
mov
sub
cmp
xchg
xor
mov
pop
imul
fsts
dec
sbbb
inc
jnp
and
pusha
jbe
inc
fsubr
push
xlat
sbb
cmp
fists
aam
cmpsl
jnp
in
sub
or
pop
jns
icebp
push
mov
rol
outsl
jbe
repz
orb
pop
adc
pusha
in
andb
cwtl
scas
popa
sbb
jmp
dec
cmp
jle
pop
pushf
xchg
fbld
fisubrs
rcl
scas
js
dec
dec
mov
mov
nop
mov
cmpb
jae
jae
ja
jl
xchg
aam
dec
jg
cmp
pop
insb
mov
and
sbb
mov
add
and
mov
adc
flds
sub
movb
aas
lret
and
negl
jmp
insb
mov
mov
outsl
movsb
in
add
push
mov
pop
jl
inc
cmpsl
sbb
sti
fs
xchg
or
mov
pop
push
leave
std
outsl
lret
jnp
pop
sbb
dec
and
add
inc
bound
cmpsb
push
pop
aas
jmp
or
mov
cmp
cmc
into
jle
cmpl
imul
cld
adc
push
jne
jl
mov
mov
mov
sahf
mov
add
popa
inc
loop
sub
pop
mov
nop
test
leave
cltd
mov
fisubs
outsl
adc
adc
test
fiaddl
pop
jbe
pop
pop
pop
fbld
mov
fisubl
lods
dec
sbb
in
pop
lret
or
sahf
xor
push
cmp
xchg
pop
cltd
cmp
sbb
sub
insb
int
mov
cmp
and
ja
and
fnstsw
sub
cmpsl
jp
loope
in
cmp
xor
pushf
popa
mov
dec
mov
imul
sub
into
dec
mov
xor
adc
loop
cmpsl
dec
incl
repz
fsub
pop
and
out
out
insb
movsl
push
xchg
xchg
cmpsl
scas
adc
add
adc
mov
jae
adc
shrb
fwait
sbb
xor
testl
mov
divb
mov
shrl
sub
sbb
jb
or
jns
sub
add
test
pusha
push
mov
and
adc
arpl
push
or
or
jp
stos
lea
dec
ret
sbb
jo
bound
leave
push
mov
fcom
int3
aam
jp
movsb
test
xchg
dec
cli
sti
jns
and
adc
mov
or
cmc
inc
inc
cmc
fisttpl
and
jo
adc
mov
dec
scas
mov
popf
inc
mov
out
mov
mov
jmp
fldl
sbb
or
push
jbe
jg
inc
inc
lahf
iret
fcomps
enter
cld
ss
nop
sbb
mov
adc
push
popf
in
mov
roll
or
loop
mov
addr16
xchg
push
int
int
xchg
mov
js,pt
dec
push
jnp
pop
dec
leave
shrb
fstps
movsl
out
jno
and
imul
xchg
fisttpl
lods
push
test
xor
ja
and
idivl
out
push
sbb
cmpsl
jb
sbb
dec
xor
aas
xchg
dec
sbbb
outsb
mov
scas
popa
push
dec
loop
mov
lret
or
ljmp
aam
movsb
mov
push
in
inc
cwtl
aaa
clc
inc
ss
decb
xor
iret
mov
fwait
mov
jne
inc
cmp
fdivs
push
lods
inc
test
mov
fs
popf
insb
xor
mov
jb
and
ret
jo
shll
xor
mov
out
cmp
call
pop
inc
adc
xor
add
dec
sbb
adc
mov
pushf
into
std
xchg
cmp
cld
sub
pop
movsl
pop
adc
int3
popf
cmp
imul
dec
dec
inc
ror
out
xchg
jl
mov
mov
cmp
movsb
xor
sub
inc
jl
daa
pop
scas
sbb
and
inc
push
push
nop
rorb
sbb
out
sbb
repz
add
pop
outsl
cmp
dec
or
hlt
mov
lcall
mov
aam
gs
mov
pop
push
mov
push
test
jle
mov
shll
ja
lea
mov
mov
push
pushw
aam
xor
push
fstpl
cmp
addr16
lret
jns
adc
or
pop
add
adc
enter
jo
xchg
dec
and
pop
ds
inc
mov
roll
fiadds
ss
cmp
mov
push
arpl
out
xchg
push
repnz
test
push
push
cltd
lea
jne
mov
jae
sbb
int3
dec
std
outsb
insl
mov
mov
in
lock
push
lods
ret
loopne
mov
and
fiadds
daa
sub
scas
push
aam
dec
hlt
dec
stos
out
jl
insl
and
fidivs
cmp
mov
stos
bound
cmpsl
sub
fucomip
aad
inc
stc
rcll
pop
icebp
sbb
and
rcll
pop
jp
xlat
sbbb
mov
xor
sbb
loop
xor
insl
roll
pop
ret
imul
pop
mov
or
push
xor
mov
jnp
insb
call
or
inc
aaa
movsl
pop
out
pop
test
add
out
loop
inc
in
in
cmpsl
fildl
lret
movsl
into
mov
mov
int3
ss
add
dec
cmc
dec
call
sbb
add
hlt
scas
dec
xchg
mov
jmp
add
repnz
and
divb
daa
pop
jle
jb,pn
xchg
sti
fstpl
xchg
fwait
dec
dec
lods
insl
mov
fcomp
in
jmp
sub
leave
movsb
and
dec
pop
sbb
dec
aas
fidivrl
pusha
les
push
ljmp
push
test
repnz
fsts
lock
and
push
mov
add
es
jmp
mov
cmp
sbb
mov
xchg
pop
test
jbe
into
ss
movsl
stos
pop
mov
cmc
testl
fildl
popa
xor
and
mov
sbb
xchg
out
pop
shrl
inc
xchg
xor
aas
out
out
fmull
inc
push
hlt
add
rorb
stos
sub
pop
test
hlt
adc
xlat
jae
rcrl
jns
sbb
in
sub
insl
mov
ret
xchg
and
ret
sub
add
stos
outsb
jecxz
cld
sahf
test
cltd
pop
imul
fs
fldl
aam
mov
mov
lock
aad
out
cmp
cwtl
psubsb
test
rcr
mov
and
sahf
test
ss
xor
pop
sti
add
and
loopne
jmp
sbb
xor
les
inc
notl
lcall
les
iret
xchg
ja
cmpb
data16
loop
ret
cmp
and
add
inc
push
xor
xlat
lds
push
mov
mov
push
out
dec
leave
add
pop
push
stos
out
or
test
test
sub
aas
fisttpl
push
iret
xchg
pop
sbb
mov
pusha
sahf
nop
pop
pop
push
lock
pop
jmp
shll
sbb
pop
fstpl
mov
inc
shlb
pop
fcmove
icebp
xchg
jne
pop
int3
lods
int3
cmpsl
pop
pop
pop
mov
cs
sbb
adc
mov
out
jle
nop
es
in
lret
push
jae
adc
lahf
shrl
mov
sub
call
xchg
or
ret
push
repz
leave
pop
in
lock
addps
stos
popa
shrl
mov
repz
dec
or
add
pop
or
cmp
sbb
and
push
and
pop
and
pop
stos
div
xchg
jp
xor
add
shll
dec
lret
fstpt
and
sub
fs
xchg
sbb
sub
xchg
cli
or
setno
cltd
adc
imul
push
call
push
cmpsl
test
imul
pushf
les
and
ss
lcall
shr
imul
xchg
mov
add
out
hlt
cmp
and
pop
xchg
xchg
jmp
inc
mov
ret
jns
stos
fstps
lcall
mov
data16
int
lret
inc
fmul
dec
sbb
cmpsl
nop
nop
lea
into
or
daa
aas
sub
xchg
mov
sbb
in
sub
cmp
mov
ret
lock
push
dec
fbld
mov
mov
loop
loop
xchg
xchg
insb
sbb
xchg
dec
jge
pop
sbb
ret
popa
xchg
loop
dec
iret
mov
das
test
test
xchg
pop
lods
mov
xor
mov
mov
jb
jnp
outsb
imul
jl
sti
pop
mov
scas
fsubrp
xchg
jecxz
ja
and
int
sbb
mov
add
js
xchg
or
das
add
test
cmp
inc
push
mov
loope
aaa
movsl
sbb
out
call
or
adc
jmp
das
stc
mov
ret
mov
lea
loope
testb
insl
xor
aaa
in
cmc
inc
cmc
xor
popa
or
lock
sub
fwait
xor
or
in
cmpsb
push
push
mov
add
jp
leave
lcall
sbb
call
jle
add
icebp
fcmovu
ds
mov
pop
dec
jne
repnz
clc
mov
push
push
jnp
out
push
into
insb
jle
pop
jae
into
xor
ljmp
push
aam
loop
pop
stos
sbb
pop
mov
or
fldt
push
mov
sbb
les
lods
test
add
sbb
mov
push
filds
dec
dec
pop
jp
out
sahf
lock
test
loop
ss
push
scas
mov
mov
lret
imul
test
push
outsb
bound
xchg
pop
xor
xchg
adc
insb
in
aas
mov
leave
add
sti
fdivs
xchg
enter
inc
into
and
mov
push
es
aaa
pop
ret
clc
jb
push
mov
test
dec
lea
icebp
jae
test
hlt
jne
sbb
fcoms
ret
add
sub
dec
sbb
lret
fdivs
mov
cmp
insb
mov
xchg
outsl
scas
enter
xchg
adc
xchg
dec
scas
lds
sbb
jp
ljmp
inc
ret
rcrb
jmp
enter
push
test
aas
sbb
jns
push
in
push
sbb
xor
ss
mov
mov
lret
cld
scas
ljmp
push
imul
dec
dec
aam
popa
mov
mov
shlb
je
aad
mov
icebp
xor
xchg
sahf
cmp
inc
inc
sbb
int
add
jmp
add
dec
pop
hlt
xchg
int
push
jge
jno
xchg
scas
jae
in
sub
sbb
cwtl
insl
sub
xchg
mov
jmp
stos
dec
arpl
mov
adc
jmp
aas
and
movsb
push
gs
mov
pop
sbb
and
sbb
xor
pop
pop
push
cwtl
sarb
mov
mov
cmpsb
int3
aas
xchg
mov
scas
clc
pop
adcb
xor
jge
and
shl
mov
lds
je
lcall
clc
add
xor
adc
lret
xchg
adc
cmp
or
push
and
push
movsl
pusha
or
mov
xchg
rorb
aam
sub
pusha
das
stc
inc
jb
xchg
adc
pushf
sbb
jl
inc
mov
sub
and
leave
addl
mov
add
mov
test
push
loop
sub
adc
mov
outsl
cmp
sti
jns
aad
mov
mov
push
add
loop
imul
int
scas
je
xchg
sbb
mov
fwait
aam
notl
or
shll
in
mov
lahf
xchg
addl
inc
sbb
mov
int
popf
loop
and
jecxz
lds
dec
push
or
sbb
dec
inc
in
cmp
negl
int3
inc
dec
cmp
inc
mov
mov
fldt
jns
insb
mov
cmpsl
icebp
in
mov
mov
outsb
lcall
in
xchg
mov
mov
ret
adc
xchg
decb
push
xchg
sbb
xchg
add
cwtl
xchg
int
jne
or
test
mov
jnp
or
adc
pop
push
sbb
sub
jae
mov
clc
test
fwait
xchg
push
fmull
mov
xlat
nop
movsb
insb
in
sub
cmpsl
mov
ljmp
subb
cltd
inc
cmp
imul
mov
xchg
xor
push
mov
jae
repnz
add
fisttpl
fwait
pop
loop
movsb
or
hlt
popa
and
lret
lcall
movsl
xor
movsl
out
mov
inc
fs
in
or
pop
dec
pop
jle
fdivl
sbb
or
ficoms
pushf
pop
or
cmp
leave
aas
std
lahf
test
push
and
mov
mov
or
xorl
les
push
or
icebp
pop
shl
nop
add
lock
jae
xor
dec
pop
or
push
adc
lods
dec
xor
aaa
sahf
add
cmp
push
sub
inc
pop
adc
dec
ret
xchg
cmpsb
mov
test
mov
imul
imul
in
cmpsl
push
loopne
jg
sti
xchg
cmpb
inc
fidivrl
inc
adc
or
test
mov
mov
lock
test
mov
push
cmp
testb
mov
cmp
testb
fldenv
mov
ss
jne
les
mov
in
addb
mov
jg
push
insl
xor
cmpsb
das
jle
ljmp
and
sbb
push
add
idivb
mov
fcmovnbe
jne
xor
cld
mov
fadd
dec
sti
leave
push
and
mov
jl
aam
movsb
js
push
xor
fbld
icebp
test
xchg
mov
imul
fsubs
add
int3
ret
in
xchg
dec
jbe
mov
aad
sub
fnstsw
imulb
mov
loope
xor
aad
or
cs
clc
pop
clc
dec
sbb
push
lds
xchg
sahf
jg
int3
and
pop
dec
sbb
daa
ja
sahf
cmpsl
iret
das
fiadds
add
jp
add
inc
sub
mov
int
jmp
ret
aas
enter
insb
push
mov
std
and
jl
adc
pop
push
test
inc
push
mov
mov
and
test
and
in
jg
fildl
cltd
and
shrb
jne
sbb
pop
es
xchg
xchg
and
popa
mov
pop
sbb
movsb
push
inc
mov
xchg
push
sub
shrb
sbb
pop
push
mov
je
or
andb
xor
data16
add
out
mov
outsl
test
sbb
sarb
mov
sbb
fwait
lret
or
mov
lahf
pop
or
jl
insl
push
cmc
dec
in
scas
movsl
cmp
mov
arpl
inc
xchg
xchg
mov
orl
ret
in
push
adc
sub
adc
movsl
add
pushf
into
sbb
add
adc
dec
push
and
js
adc
jns
mov
xor
insl
adcl
inc
stos
aam
pop
fs
mov
sbb
xor
aas
push
loop
aad
push
out
xor
les
sub
xor
pop
test
mov
aam
popa
enter
scas
dec
and
xchg
cmp
insb
imul
mov
rorl
mov
fildll
mov
jge
fcomps
jnp
xchg
mov
dec
xchg
inc
jg
mov
mov
pop
into
pop
inc
mov
dec
mov
jae
mov
add
mov
add
cmp
fstl
jbe
nop
pop
and
ret
adcl
cmp
jge
mov
adc
inc
in
push
cmp
push
push
test
cltd
hlt
repnz
and
in
cs
movl
jge
cs
dec
cmp
imul
scas
mov
stos
nop
pop
jecxz
xchg
ss
push
ds
mov
aam
jo
fmull
inc
add
sub
jl
stos
es
mov
out
pop
sti
cmpsl
jne
sub
bound
jecxz
cwtl
lds
jg
lahf
push
loopne
rcll
jecxz
mov
and
shrl
out
fwait
mov
out
negl
aas
mov
lock
cmp
shlb
cmp
insb
faddl
jmpw
lea
aad
js
scas
xor
scas
outsb
mov
cmpsb
int
mov
and
lods
xor
mov
int
mov
push
int3
dec
dec
dec
fcom
xchg
add
xchg
jne
mov
mov
test
out
call
jp
mov
ret
or
mov
and
xor
outsb
jae
fldt
pusha
scas
sbb
mov
cs
shrb
sub
stos
add
popa
mov
shl
popf
lret
add
aam
divb
shrl
out
add
cmpsl
adc
mov
and
faddp
xor
scas
jmp
jp
xor
xor
imul
and
mov
cmpb
jb
pop
fidivl
and
jecxz
add
mov
dec
mov
or
sahf
and
pusha
pop
mov
lcall
insl
insl
dec
and
cld
dec
in
pop
and
pop
sub
xor
lods
pop
pop
dec
in
lret
nop
rol
out
mov
test
sti
popf
into
pop
ret
push
xchg
adc
fwait
sbb
pop
mov
lock
cld
fbstp
mov
sbb
jl
scas
inc
cmp
mov
mov
cmc
cmc
pop
mov
adc
dec
out
push
sbb
loop
mov
pushf
push
movsl
incb
and
xlat
push
pop
pop
cmp
dec
ds
sub
add
mov
mov
shr
push
fiaddl
mov
xchg
in
xor
mov
jne
fwait
insl
jbe
cmp
mov
cmp
xor
and
jno
jnp
jo
mov
cmp
or
stc
movsl
int
out
mov
into
sbbb
in
sbb
pop
push
inc
pop
or
out
mov
pusha
test
adc
lods
cmp
push
pop
in
pop
adc
mov
in
sbb
and
ja
clc
add
jnp
cmp
xchg
xchg
and
rorl
xchg
mov
push
dec
in
scas
loopne
bound
sarl
xchg
add
mov
loope
pop
sbb
add
add
cld
inc
jmp
out
mov
call
cmp
ja
cltd
push
xchg
mov
xchg
and
clc
xlat
aas
dec
xor
mov
cmpb
lret
push
push
cmpsl
lods
clc
push
jg
push
scas
ja
xor
mov
daa
imul
adcl
scas
lret
out
lret
xchg
fiadds
inc
xchg
aas
dec
je
pop
push
jecxz
fdivs
cwtl
cld
sbb
das
inc
cmp
inc
clc
je
adc
adc
xchg
add
insl
fists
fdivl
xor
lods
mov
adc
shll
dec
xchg
testb
dec
push
cmp
outsb
adc
jb
sub
fstpl
xor
push
rorl
imull
mov
dec
pop
jl
xchg
or
das
cwtl
push
pop
adc
or
or
gs
orb
sbb
clc
and
je
ljmp
clc
aad
sub
adc
sarb
jg
sahf
stos
adc
je
in
incb
jmp
dec
imul
mov
ss
popaw
dec
cmpsl
and
cmpsb
divb
or
adc
cmp
movsb
xchg
insl
jp
arpl
out
int
imulb
push
push
xchg
push
mov
mov
xlat
movsb
movsb
pop
pop
lret
jae
and
clc
mov
decl
dec
pop
push
mov
stos
loopne
pop
xor
fmull
loopne
sbb
out
sbb
dec
movsl
fisttps
mov
mov
inc
mov
mov
adcb
cmpl
push
mov
push
sub
mov
mov
mov
xchg
lret
js
cmp
hlt
push
stos
out
cwtl
or
dec
sar
movsl
xchg
or
sub
ret
add
mov
iret
outsl
inc
dec
out
jb
fildll
fstp
adc
add
mov
arpl
test
and
loope
inc
repz
arpl
pop
xor
movsb
test
shlb
inc
enter
mov
ss
mov
into
xor
cmp
pop
jmp
jmp
mov
xor
arpl
mov
shufps
stos
pop
pop
scas
das
repnz
mov
aad
ljmp
mov
inc
clc
or
or
loopne
shr
ret
adc
shrl
pop
test
xor
mov
popa
cmp
lock
adc
or
jne
fdivrl
cmovo
pusha
imulb
cld
imul
cli
xchg
sub
imul
sub
fwait
jnp
cltd
cwtl
ds
jmp
jno
xchg
ds
fcoml
xor
pushf
imul
enter
lahf
dec
aad
push
pop
and
lret
iret
cmp
or
rcr
mov
sub
stos
inc
cmp
inc
xor
jno
stos
mov
or
lcall
mov
xor
xchg
lods
mov
mov
pop
inc
add
out
clc
cmp
out
add
xchg
sub
fsubrs
or
xchg
inc
mov
daa
and
xchg
into
sbb
cmp
cli
mov
xchg
loop
int
movsl
push
push
or
add
jns
push
bound
fdivrl
lock
repnz
adc
add
xlat
mov
xchg
dec
sub
xor
or
xchg
mov
push
loope
sbb
rol
sti
mov
fadds
mov
imul
scas
lahf
orl
and
push
das
notl
scas
popf
jo
adc
jle
add
mov
push
pop
pop
mov
pop
subb
sub
mov
shlb
das
or
test
sub
in
scas
imul
mov
add
push
xchg
shll
imull
stos
shrl
mov
pop
clc
cmpsl
xchg
sub
nop
movsb
rcrb
ss
in
mov
and
scas
mov
and
mov
fsubl
mov
jle
and
xchg
mov
loope
lahf
sub
xchg
bound
inc
inc
mov
outsl
xchg
cmpsl
leave
mov
movsb
aas
call
test
dec
dec
dec
testb
push
lods
in
out
pop
push
mov
sbbl
iret
jb
out
xor
cld
repnz
and
or
pop
xor
dec
mov
xlat
or
mov
movsb
clc
lds
mov
ret
push
movsl
xchg
rolb
and
cmp
and
dec
jo
mov
fisubrl
xchg
xor
cmp
aaa
insb
sbb
push
roll
sub
push
hlt
mov
xor
aam
xchg
inc
subl
xor
mov
add
fildll
sub
out
arpl
icebp
fwait
xor
gs
inc
cmp
popa
out
pusha
push
sub
pop
pop
clc
push
cmc
xor
inc
add
or
push
fisttps
push
xchg
or
fisttps
inc
xor
adc
les
jl
mov
adc
xchg
sbb
lret
push
xchg
cmp
jo
mov
sub
outsl
lahf
and
mov
lods
stos
loope
and
test
mov
sub
dec
xchg
repz
or
test
dec
nop
mov
mov
outsl
push
lahf
mov
inc
pop
sbb
das
mov
add
mov
pop
inc
fldcw
lret
popf
inc
dec
and
mov
mov
das
lret
or
arpl
or
sub
imul
arpl
pop
xchg
popf
pusha
mov
jo
pusha
sahf
mov
into
adc
mov
cmp
mov
push
fcom
gs
adc
ljmp
bound
mov
push
or
mov
push
ret
rcrl
pop
lods
pop
sbb
xchg
push
xor
fs
in
push
jl
loopne
mov
jae
fwait
in
xchg
mov
aam
add
xchg
add
pop
rcrl
mov
sub
jns
ds
dec
sar
inc
mov
cmc
hlt
xchg
xor
jge
mov
push
pop
dec
push
or
lea
dec
rclb
push
pop
test
dec
stos
std
scas
or
sub
clc
call
cs
xlat
mov
lret
aaa
mov
jne
or
ljmp
sub
xor
lea
jecxz
leave
icebp
js
sahf
mov
dec
lcall
adc
inc
lret
mov
aas
push
pushf
popf
arpl
pushf
fisubrl
mov
jno
xor
xor
pushf
pop
push
cmp
fwait
hlt
xor
insb
fsqrt
mov
pop
mov
idiv
xchg
cmp
mov
mov
xchg
aad
sbb
or
mov
rclb
es
pop
dec
sar
cmp
ret
or
mov
mov
jae
fimull
fisttps
push
pop
cwtl
clc
out
adc
mov
dec
xchg
push
sbb
inc
fldl
aaa
mov
insb
mov
jle
push
in
dec
test
xor
stos
adcl
pushf
int
fs
mov
pop
sbb
sarl
cmp
sub
cmp
jae
loope
xchg
out
in
inc
push
fdivs
and
lods
popa
lock
push
xor
cld
dec
out
loop
push
shl
outsb
fs
jl
xchg
jl
stc
pop
mov
push
mov
aas
fistpll
test
es
fimull
push
pop
nop
pusha
add
into
xor
sti
pop
and
cwtl
and
jle
xchg
insb
push
add
shrb
mov
std
or
cmpsb
cmpsb
cmpsb
inc
xchg
out
xor
lcall
adc
push
ljmp
fnsave
int3
cmp
repnz
jae
cmpb
push
inc
push
pop
jmp
or
pushl
in
xor
lret
sbb
daa
fxch
pushf
popa
stos
or
push
adc
mov
sti
insl
sub
test
clc
or
push
fmull
xor
xor
adcb
pop
push
mov
or
sub
pop
inc
push
pop
xor
sub
dec
bound
bound
pop
fistpl
ficoml
call
popf
mov
stos
cmp
dec
aas
cli
jo
out
jae
in
shll
jmp
inc
scas
add
or
lret
push
inc
repnz
inc
shlb
cmp
ljmp
dec
pushf
lods
scas
ret
jb
inc
add
inc
jb
andl
inc
das
sub
add
jne
lods
or
mov
cmpsb
imul
je
rorl
cli
popf
out
sbb
mov
icebp
and
sarl
andb
cmp
call
pop
fxch
aam
repz
mov
xor
jbe
inc
xor
imul
xchg
pop
popf
insl
in
mov
mov
shlb
bnd
popa
push
cmc
jae
scas
jecxz
fldt
adc
dec
jmp
enter
mov
xlat
or
scas
aaa
arpl
push
push
jmp
sbb
lea
sbb
adc
mov
movsb
xlat
and
imul
mov
push
jge
dec
sbb
xchg
mov
addb
ss
and
bound
mov
mov
shlb
sti
push
cmp
push
loop
insb
and
bound
test
or
fimull
lods
int
pop
es
cmp
mov
jnp
cltd
loop
mov
arpl
int3
sbb
push
cld
dec
insb
pop
stos
icebp
push
xor
movsl
fcoms
je
or
stos
mov
testl
insl
or
lods
outsl
iret
jnp
cli
add
mov
inc
pop
cld
mov
sub
mov
cmp
mov
xorb
push
cmpsb
cltd
subb
iret
xor
addb
xchg
jl
cmc
int
daa
xor
ret
pop
mov
or
rclb
ljmp
pop
push
ds
ljmp
cmp
adcb
inc
mov
dec
cmc
insl
sub
or
filds
mov
xchg
data16
mov
jge
out
test
aad
or
or
shlb
add
hlt
mov
inc
enter
fwait
xchg
jne
or
ss
add
in
jae
outsb
mov
pop
out
ret
xchg
icebp
add
idivb
movsb
jecxz
add
xor
pop
in
sti
xorb
adc
add
xchg
adc
rcl
inc
pop
movsb
sbb
mov
xchg
insl
mov
xchg
push
call
xchg
int3
and
xchg
ja
dec
add
adc
je
std
xor
imul
loop
add
and
fwait
in
movsl
pop
fisubrl
in
dec
addr16
mov
sbb
cmpsb
shrb
in
sahf
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
adcl
mov
xor
sbbl
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
add
mov
movzbl
adc
mov
adcl
xor
mov
orl
add
xorl
movzwl
mov
movb
adc
lea
mov
sub
mov
orl
mov
andl
xor
orl
sub
orl
mov
andl
movl
xor
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
addl
push
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
xor
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
push
add
movl
jmp
mov
movl
mov
movl
inc
movl
cmp
jb
mov
addl
xor
adcl
add
movl
jmp
mov
movzwl
sub
mov
mov
decl
xor
mov
andl
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzwl
orl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
movl
mov
mov
adc
xor
sbb
add
or
mov
movl
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
movl
mov
or
mov
mov
xor
add
add
movl
mov
mov
mov
je
mov
mov
jmp
mov
pshufw
arpl
out
scas
jp
fcomps
jp
mov
mov
jmp
setne
sub
xchg
test
mov
icebp
out
stos
ret
sbb
cmpsb
sub
jecxz
out
or
cmp
add
jle
and
dec
sbb
mov
sahf
mov
jb
pop
adc
jno
mov
push
insl
test
pop
aam
xor
loope
flds
in
dec
pop
ss
cmp
int3
push
sti
inc
imull
imull
adc
cmp
clc
push
in
push
sbb
adc
fs
fdivrl
popa
pop
pushf
xchg
shl
dec
jns
sub
dec
mov
xchg
mov
loop
add
mov
or
dec
aad
sbb
xorb
add
mov
mov
xor
mov
leave
jb
out
gs
cmc
push
add
sbb
mov
andb
xchg
pop
cli
add
push
push
jmp
ja
int3
jle
enter
sbb
cmp
mov
jno
pushf
or
shl
xchg
out
ja
sbb
leave
pop
sub
xchg
addb
lods
lcall
test
jo
pushf
and
jns
cmc
test
pop
pop
cmpsb
push
ror
mov
in
sub
cs
call
les
rolb
xchg
push
xlat
lea
inc
mov
pop
jmp
int3
push
pop
pop
cmp
scas
jp
ret
lock
jecxz
stc
cmpsb
or
add
add
xchg
push
inc
or
enter
add
icebp
aas
leave
loope
push
mov
sbb
push
aad
cmp
mov
dec
xor
jl
lahf
pop
in
sub
hlt
mov
shl
and
aad
lds
inc
dec
mov
stc
sub
mov
push
pop
test
or
fsubrs
sub
xchg
sub
push
xor
sbbb
addr16
clc
sti
ror
pop
cmpsb
xlat
scas
into
cltd
std
cmp
mov
mov
jecxz
adc
mov
push
pop
pop
mov
push
cmp
int
call
sbb
popl
xor
pop
push
call
dec
scas
jg
cmp
aad
adc
pop
fwait
std
out
cmp
subb
push
pushf
outsl
and
jae
jmp
cmp
dec
add
lea
out
mov
pop
jo
movsb
mov
and
fisubs
nop
mov
dec
jnp
and
movsb
inc
push
cmp
testl
mov
out
inc
add
inc
cmpsl
jl
sub
add
enter
loopne
icebp
inc
sbb
inc
and
xchg
xor
mov
iret
mov
sbb
push
aaa
xchg
mov
sub
lods
ljmp
pop
fnstcw
pushf
push
pusha
int3
sbb
dec
jg
sti
shl
dec
notb
mov
pop
sahf
jecxz
sub
adc
jp
jb
push
adc
sub
aas
into
mov
adc
mov
or
into
inc
out
inc
xchg
xchg
ja
lea
or
insb
cli
xor
pop
imul
and
scas
nop
mov
and
jge
xlat
lds
cmp
popf
std
pushf
mov
mov
jl
iret
lods
cli
cli
lret
xchg
sub
in
or
pop
stos
in
cmc
scas
ffreep
outsb
add
aaa
insb
dec
jnp
pop
rorl
add
mov
in
pop
cmp
iret
lock
rorb
sbb
loope
cs
jo
mov
pop
rcll
mov
mov
inc
pop
adc
lret
pushf
data16
inc
dec
cmc
push
ja
aam
or
rclb
dec
pop
dec
fstpt
sbb
jl
jecxz
sarb
sub
pop
push
cld
cmc
sbb
xchg
jp
lods
insl
popa
adcb
or
jp
jp
dec
popa
outsl
in
fmuls
xor
mov
mov
fs
popf
dec
ljmp
pop
aas
ss
les
sti
push
cli
out
sbb
negb
add
add
jb
je
fstpl
pop
or
lahf
das
ficompl
loope
pushf
cmp
icebp
outsb
xor
imul
test
sahf
mov
mov
mov
aas
jbe
sub
jge
push
arpl
or
jl
cs
in
into
jge
clc
mov
and
or
xchg
pushf
push
dec
xchg
or
in
sub
inc
xchg
insl
mov
sub
cmp
mov
sarb
sub
out
mov
xchg
and
aas
fs
push
and
gs
mov
mov
jecxz
mov
ret
andl
cmp
incl
jb
add
push
out
cs
xor
jns
test
rcrb
psraw
pop
aam
mov
jge
push
arpl
add
out
divb
inc
lahf
faddp
push
xor
sti
movsl
loop
xchg
mov
mov
mov
sbb
fbld
das
sbb
mov
insb
adc
mov
pop
and
cmpb
xor
aas
je
notb
xor
ss
or
cmp
add
stos
mov
jns
enter
xchg
loop
mov
push
std
es
mov
push
cmp
mov
push
std
jbe
mov
mov
adc
sbb
fbld
jae
add
sbb
pop
es
lret
rclb
inc
xor
add
jo
test
leave
imul
dec
xchg
pop
cmp
data16
gs
inc
loope
adc
xchg
repz
mov
hlt
adc
pop
adc
stos
rep
repnz
mov
imul
push
or
jp
cs
xor
lcall
sahf
gs
aaa
mov
or
loopne
jns
ret
jae
jo
xchg
or
jge
adc
mov
xchg
dec
mov
push
aam
data16
fldt
mov
shrb
pop
sbb
sbb
in
or
mov
loope
insl
sub
dec
sbb
mov
ret
jmp
sbb
cmpsb
adc
mov
sar
mov
and
inc
xor
xor
sar
sbb
mov
add
push
xchg
movsb
mov
ljmp
in
add
sbb
push
je
cmp
jecxz
xchg
in
pop
ds
repz
enter
jnp
fisubl
cs
dec
int
pop
inc
les
loopne
dec
mov
ljmp
in
mov
cli
pop
andl
iret
xor
mov
bound
xchg
loope
sbb
push
cmp
mov
gs
push
std
push
pusha
nop
adc
mov
and
cld
loope
dec
xor
bndstx
lret
xchg
sub
push
xor
addr16
enter
leave
sub
dec
in
aam
divb
or
or
or
pop
jne
dec
or
xchg
dec
jle
ficoms
and
cli
adc
dec
frstor
stos
or
in
sti
ret
adc
dec
mov
inc
das
push
mov
call
ret
cmpsb
pop
pop
add
add
inc
pop
outsb
das
das
jl
shr
push
ss
cmc
stc
lea
sti
sub
dec
cmc
push
fistpl
sbb
loope
test
pop
mov
clc
add
lcall
jp
lahf
mov
fstl
jb
add
aad
scas
inc
cmp
push
mov
arpl
pusha
or
inc
sub
or
clc
ljmp
test
xor
mov
cmp
or
mov
push
in
or
and
icebp
ja
xor
in
loop
mov
pop
push
jo
cmpsl
jle
pop
iret
adc
and
out
movsb
dec
cmpsb
popa
push
xchg
inc
push
sbb
cwtl
cmp
movsb
jl
jmp
cmp
pop
lods
addr16
int
icebp
test
notb
test
repnz
inc
adc
jnp
mov
pop
outsl
mov
add
lret
xchg
repnz
dec
loop
cmp
mov
aaa
bound
fdivp
dec
pop
mov
inc
mov
sbb
stos
in
aaa
or
push
sbb
jno
dec
and
mov
jo
inc
pop
adc
negb
cmp
lods
push
addb
cs
add
out
pop
popf
pop
jecxz
fisubrs
push
adc
mulb
test
mov
in
jge
sub
jge
stos
aad
push
nop
sbb
stc
jp
sbbl
xchg
cmpsl
int3
jl
iret
cmp
cmp
and
jecxz
cmpsl
addr16
mov
lods
cmp
testl
fistps
out
test
test
mov
pop
test
pop
aas
push
sbb
loopne
sub
in
pop
push
pop
push
icebp
int
lods
decb
enter
or
cld
pop
sbb
xlat
push
popa
cmpsb
jmp
mov
cmp
cmpsb
imul
pop
sarl
insb
sub
pop
pop
push
mov
nop
sbb
push
and
icebp
push
cmpsl
push
fsubs
pop
das
pop
push
xchg
insb
adc
mov
add
xor
mov
in
cs
orb
and
popf
inc
sti
adc
cmpsl
aad
mov
lret
orb
add
lods
shlb
add
push
fld
mov
lock
enter
outsl
and
sbb
sbb
sarb
mov
test
xor
ds
mov
jnp
push
add
popa
enter
rcr
jnp
pop
jns
xchg
pusha
jno,pt
cs
and
mov
adc
xchg
gs
lock
push
cwtl
sbb
ja
add
inc
push
mov
lret
shl
mov
cmp
or
dec
cltd
push
notl
pop
jb
jge
fildl
add
iret
test
add
dec
inc
aad
adc
pop
mov
jecxz
add
ret
arpl
es
insb
jmp
jp
roll
ljmp
sbb
inc
cld
or
lods
pop
push
xchg
pop
xchg
stos
mov
sub
dec
out
xlat
push
inc
sahf
xchg
mov
push
dec
jge
xchg
inc
movsb
mov
jecxz
shl
xchg
mov
sar
jno
stos
ljmp
xchg
or
push
insl
xor
push
mov
loope
xchg
xchg
inc
fnstsw
and
scas
int
loopne
adc
pop
test
iret
mov
xchg
dec
pop
shlb
mov
add
and
mov
sub
fdivs
mov
dec
int
push
clc
popl
mov
add
mov
lea
jmp
cli
popl
jp
aaa
sbbl
mov
jl
data16
dec
stc
adc
dec
mov
int
mov
mov
leave
mov
cwtl
mov
mov
push
std
jno
inc
inc
push
add
repz
and
sbb
or
insl
cs
icebp
insb
xor
fiaddl
call
daa
stc
rorl
insl
std
adc
insl
push
mov
mov
xor
into
fwait
int3
call
lods
mov
and
jbe
xchg
mov
aad
pusha
aaa
dec
divb
adcl
in
cltd
mov
arpl
fdivl
mov
jl
in
inc
ss
xchg
and
scas
stos
in
xor
hlt
icebp
cmp
jl
mov
mov
push
rcrl
or
mov
push
xlat
jne
idivl
lret
loope
adc
push
jle
insb
ss
mov
cmp
and
ds
sti
inc
pushf
pop
insl
in
mov
pop
sbb
xor
xor
out
push
jl
push
jge
jo
repnz
xchg
test
push
jecxz
sbbl
add
pop
scas
bound
aaa
movsl
push
xchg
pop
dec
push
mov
inc
enter
or
mov
fsubl
add
std
test
les
sti
push
fcoms
movsb
cmpsb
fistpl
in
mov
les
cli
icebp
sub
pop
mov
fwait
movsl
mov
adc
xor
pop
xor
aaa
aam
mov
lock
inc
loope
pop
int
jg
dec
pop
pop
cltd
inc
push
jb
sarb
cmpsb
mov
repz
stc
rcl
and
sti
pop
popa
sarl
into
movsb
lock
sub
rcrb
inc
shlb
out
dec
gs
loopne
mov
lds
ja
arpl
mov
push
jge
in
rorl
jl
push
jae
mov
jecxz
rcr
xor
xchg
sub
test
sub
pop
repz
icebp
cld
lret
shrb
mov
mov
and
divl
adc
push
cmp
lods
cmpsl
fs
sbb
xor
fisttps
mov
mov
scas
clc
inc
xchg
cmpsl
add
sub
jg
mov
mov
movsl
and
dec
xor
leave
push
or
mov
push
lea
pop
mov
add
dec
loope
push
pop
add
out
sbb
dec
mov
hlt
in
push
in
and
sub
mov
repnz
sbb
push
aas
add
mov
mov
adc
jo
mov
or
inc
insb
mov
popf
pop
jns
xchg
pop
dec
jge
inc
mov
pushf
inc
mov
xor
mov
sti
jo
lods
mov
cmpsb
out
cwtl
pop
jbe
mov
and
mov
sbb
scas
xor
push
mov
xor
mov
jp
fstp
cvtps2pi
pop
out
dec
cmp
adc
inc
mov
xor
movsb
and
in
add
jecxz
mov
ja
mov
jmp
inc
dec
push
xchg
outsl
divl
sub
adc
in
mov
pop
out
push
insl
add
and
sub
xor
lea
sbb
sub
push
sub
add
and
outsl
sub
std
out
les
dec
dec
jg
subl
dec
mov
pop
mov
inc
xchg
scas
and
sbb
jns
int3
ss
ret
sbb
gs
cmpsl
rcrb
sbb
push
mov
loopew
nop
rcr
hlt
adc
aas
mov
push
in
call
xor
or
aam
clc
mov
or
sarb
sahf
mov
dec
inc
repz
outsl
seto
cmp
lods
rcl
push
mov
in
cmpsl
pushf
rcll
aam
mov
out
inc
nop
sub
out
jns
lock
inc
inc
decb
cwtl
xchg
mov
or
fildll
lahf
mov
adc
or
jecxz
pop
notl
mov
mov
das
rorl
add
mov
clc
jae
xchg
sbb
out
mov
int3
sub
fdivrp
out
inc
imul
scas
push
out
or
pop
rol
movsl
in
mov
adc
mulps
dec
jbe
fists
fbld
scas
adc
cmpsl
adc
and
inc
and
fs
pop
mov
lret
mov
clc
push
mov
sbb
addr16
sarl
or
cmpb
mov
push
dec
pop
and
xorb
aam
lds
jbe
hlt
sbb
mov
sbb
sbb
fistl
test
hlt
mov
xor
pushf
adc
push
jecxz
lods
dec
sub
sub
push
cltd
std
or
out
push
dec
sarl
lret
stos
xchg
xor
cli
push
in
jge
adc
mov
pop
mov
push
inc
jnp
loop
out
or
cld
pop
pusha
or
fiadds
test
sbb
movsb
in
inc
jbe
push
test
int
xor
jb
mov
lock
or
mov
insb
push
iret
pop
mov
push
inc
out
jmp
inc
les
inc
mov
loope
fcmovnb
or
dec
fistps
mov
sar
cs
into
pushf
mov
mov
fstpt
xchg
jmp
xchg
pop
pop
sub
sbb
sbb
insb
fisubrl
mov
ret
insl
inc
or
aaa
jp
mov
lret
xchg
jp
js
stos
lahf
popf
mov
mov
gs
lcall
mov
shll
ja
xchg
rcr
cmp
mov
jecxz
xchg
or
mov
dec
pusha
ficompl
pop
jb
fs
out
cmp
jb
cmp
ss
movsl
leave
shlb
mov
adc
push
push
aam
lea
lahf
sub
xchg
mov
lahf
rol
rcll
sub
insl
cmc
adc
fbld
xchg
jle
aaa
mov
clc
dec
nop
loopne
mov
jle
sbb
enter
add
mov
pop
fsubrs
mov
rolb
jo
orb
adc
xchg
adc
das
pop
loope
cmp
jbe
mov
sub
mov
xlat
dec
aas
bound
xor
pop
cmp
sbb
mov
mov
sub
bound
popa
in
rcl
mov
movsb
and
push
sahf
mov
pusha
or
pop
add
dec
jle
mov
pop
xchg
xchg
fldcw
fimuls
push
xchg
mov
cmp
jb
pop
or
sti
xchg
cwtl
int
scas
mov
mov
cmc
adc
outsb
xor
negl
adc
pop
push
and
xchg
inc
or
mov
pop
dec
mov
push
in
test
scas
inc
stos
pop
mov
xorb
out
ss
pusha
flds
in
ss
bound
push
test
adc
mov
mov
cmpsl
inc
adc
inc
popa
call
pop
lret
mov
mov
dec
pop
stos
xchg
ja
test
sub
rolb
jnp
testb
das
js
aas
adc
repz
clc
adc
je
and
cmp
das
into
aas
pop
jae
mov
popa
sbb
xchg
rcl
push
sub
sbb
add
add
mov
jbe
push
orl
add
test
fwait
push
xchg
packsswb
iret
cltd
inc
adc
sahf
push
rcll
fwait
dec
test
movsl
pop
dec
adc
ret
imul
fadds
popa
js
push
shll
scas
je
mov
lock
adc
mov
dec
push
jb
loopne
imul
jge
jecxz
push
push
pop
and
rclb
lahf
call
jne
test
imull
test
jecxz
lods
sbb
nop
pop
dec
stc
cmp
pusha
cmp
ret
xchg
out
subb
jecxz
mov
sub
fnstcw
test
add
ret
addb
cmc
shlb
jns
sub
pop
dec
and
jl
movsl
inc
inc
arpl
cmpl
cmc
jl
or
pusha
ret
jecxz
xor
int3
in
insb
ficomps
sahf
mov
stc
and
scas
icebp
push
push
push
lock
ss
lret
jbe
mov
jecxz
and
sbb
and
fnstsw
mov
fidivl
inc
notl
fstl
mov
lds
stc
mov
es
daa
jl
out
and
subl
in
inc
push
pop
lock
daa
ret
xchg
sub
sub
push
pop
inc
sub
mov
pop
stos
add
push
lods
dec
cwtl
jno
push
fwait
popa
addr16
dec
repnz
sahf
enter
lods
push
bnd
pop
rorl
jb
dec
and
ja
daa
sbb
pushl
js
push
mov
push
push
inc
add
icebp
xchg
dec
cs
lret
push
subb
push
lock
rcrl
jno
dec
es
cli
cmp
inc
push
adc
jno
gs
add
aam
repnz
dec
test
pop
pusha
inc
mov
loop
jle
ja
jno
js
int3
outsl
imul
nop
mov
movsl
out
cltd
xchg
les
mov
mov
aaa
jne
in
faddl
jno
xchg
leave
movsb
or
jae
add
cmpsl
iret
imul
xor
imul
ljmp
mov
popf
rcll
ffreep
dec
cs
mov
iret
sbb
bound
mov
push
mov
mov
inc
dec
int
push
jmp
in
iret
js
or
jb
fwait
push
dec
in
push
pusha
int
sub
mov
pop
enter
test
cli
call
pop
adc
pop
mov
and
movsb
ret
cmpsb
xorl
dec
mov
arpl
popa
decl
test
mov
icebp
fdivrl
mov
mov
lock
nop
cmc
movsl
add
sub
jl
enter
add
inc
inc
imul
mov
orb
repz
lret
loope
sbb
movsl
jnp
das
inc
roll
addb
xor
adc
sahf
popf
pop
jns
fsubr
mov
ds
add
or
test
mov
mov
jle
sbb
sahf
push
lods
xchg
mov
mov
inc
lds
es
aaa
jle
setnp
shll
adc
jo
sub
inc
lcall
gs
and
int3
mov
cmp
ljmp
lret
aaa
add
andb
ljmp
ja
loope
stos
movsl
add
insl
or
in
in
enter
int
dec
xchg
inc
xor
adc
fisubs
aaa
pop
icebp
out
mov
cmp
adc
adc
je
mov
jmp
push
cmp
repnz
int
pop
std
cmp
gs
inc
push
xor
mov
rcl
je
xchg
push
xchg
ret
dec
or
testb
inc
stos
jno
cmp
inc
nopl
je
pop
std
jo
or
lock
or
adc
cmpsb
push
jnp
pop
fmuls
rolb
mov
arpl
sti
adc
rcrl
out
jl
testb
int3
into
in
xchg
cmpsl
xor
test
dec
decl
sub
add
mov
sti
gs
push
test
pop
xor
outsl
mov
and
push
or
lds
lret
sarb
sub
fs
or
cmp
xchg
clc
xchg
pop
adc
adcl
bnd
pop
loopne
mull
pop
mov
xor
cmpl
rcll
movb
les
xchg
leave
pop
fcmovu
inc
pop
je
inc
or
jecxz
push
stos
jo
xchg
repnz
aad
test
stos
push
clc
lds
adc
enter
pop
jge
cmpsb
jle
clc
sbb
fldenv
ret
in
dec
xchg
pop
or
jmp
movsb
jne
xchg
fs
pop
ss
jp
pop
rcr
sub
xor
inc
cmp
out
cwtl
jp
lret
pop
fidivrs
mov
or
add
lods
dec
and
inc
js
pushf
mov
or
iret
inc
cs
js
adc
mov
rclb
inc
sbb
or
stos
or
jne
jo
rclb
jae
mov
push
in
dec
xor
mul
push
mov
cmp
jno
and
mov
bound
add
into
pop
stc
negl
jge
add
scas
push
fsub
jp
sbb
jle
push
bswap
test
pusha
mov
stos
xchg
jnp
cmpsl
dec
and
cld
clc
sbb
in
enter
xchg
xchg
push
add
sub
pop
bndldx
xchg
aas
repnz
cli
daa
sbb
xchg
pop
add
outsl
ljmp
test
jp
lret
adc
mov
mov
std
mov
mov
jge
xchg
jmp
into
inc
or
aaa
iret
mov
mov
inc
fidivs
out
inc
push
jmp
stos
stos
in
adc
pop
inc
ret
stos
insb
rorl
leave
adc
ret
out
push
inc
xchg
gs
into
aad
rclb
les
and
xor
mov
es
outsb
xor
xchg
mov
inc
imul
and
or
fcmovbe
das
aas
test
aas
in
fidivrl
repz
lods
fistpll
ret
jmp
adcl
dec
or
pop
lahf
repnz
and
jne
imul
adc
ret
mov
cmp
enter
adcl
imul
push
jmp
jo
mov
jmp
jmp
xchg
mov
ret
sub
adc
ds
push
insb
mov
jmp
and
xchg
pop
test
aas
lahf
sbb
sbbl
in
lcall
and
push
popa
imul
jno
dec
gs
pop
movsl
sbb
xlat
adc
not
mov
sub
mov
addb
cld
or
ljmp
or
push
ja
or
and
inc
out
mov
jp,pn
lahf
bound
or
jp
in
and
jecxz,pn
mov
jno
mov
movsl
adc
clc
incl
ror
repz
jge
xchg
movsl
es
push
fwait
mov
lods
rolb
fsts
fldl
cmp
push
adc
or
pop
cwtl
mov
inc
xchg
xchg
imul
adc
pop
rcll
xchg
stos
fnstsw
jmp
std
stos
adc
sbb
test
cmp
test
enter
mov
scas
jne
sbb
mov
cs
mov
pop
roll
mov
add
fadds
dec
mov
repz
es
ja
aad
ret
stc
jg
stos
xor
add
mov
dec
mov
jb
or
mov
insl
ret
repnz
add
lods
js
mov
int
or
cmp
data16
lret
in
pop
icebp
loop
loope
fidivs
mov
mov
jl
mov
cmpsl
mov
lds
xlat
pop
xor
rcl
cmc
fiaddl
push
in
fwait
inc
loop
insl
incl
xchg
sbb
mov
or
jbe
or
pop
mov
les
call
das
repnz
jne
test
mov
mov
xchg
push
jne
dec
loopne
cmp
das
addr16
jbe
adc
fsubp
into
mov
cmp
add
bound
insb
mov
mov
or
dec
pop
ss
cs
dec
push
repz
lock
pop
xchg
shrb
stc
rol
sbb
lods
popa
sub
clc
mov
hlt
dec
ret
xor
jne
pop
fbstp
fstpl
pop
sub
jg
xchg
cltd
sub
psubw
faddl
pop
xchg
mov
mov
aas
mov
jmp
scas
int3
mov
or
fwait
pop
ljmp
pop
jbe
jmp
pop
icebp
lock
sub
scas
sub
adc
jo
sub
mov
lahf
vpavgw
cltd
sbb
test
adc
xor
sarl
mov
inc
and
mov
roll
pop
hlt
test
aas
lret
mov
push
icebp
add
sbb
je
mov
sub
xchg
sub
pop
push
mov
fs
int3
jmp
nop
or
hlt
push
enter
fistl
xor
test
jmp
ljmp
xchg
imul
andb
addl
inc
pusha
inc
in
shl
inc
dec
push
push
std
xchg
in
adc
lea
call
insl
mov
mov
das
mov
add
jb
xlat
fildll
inc
adc
xor
ljmp
movsl
loopne
fimuls
outsb
and
dec
test
mov
pop
jbe
insl
lods
sub
aam
sahf
mov
rcrb
pop
pusha
add
xor
cld
test
mov
lods
dec
andl
dec
aam
fisubrl
add
stos
sbb
data16
jmp
scas
dec
inc
cmpsb
cmp
add
lods
cs
fmul
scas
mov
arpl
hlt
ret
outsl
mov
or
sub
mov
movsb
insb
dec
sbb
and
xchg
push
loop
inc
shll
mov
push
arpl
add
sub
jmp
aad
push
mov
cmp
jbe
lods
add
ret
xchg
mov
int
leave
fwait
mov
shlb
push
add
shl
or
loopne
cmp
dec
cmp
imul
repz
pushf
jae
add
iret
fnstenv
jle
cmp
xchg
aas
inc
jg
mov
ja
movb
and
ljmp
jecxz
je
ret
scas
jb
ret
mov
jns
sub
int
jecxz
or
lods
cld
lahf
stos
data16
and
scas
es
inc
shlb
push
inc
xchg
mov
push
and
in
test
jmp
test
push
test
std
aaa
ja
inc
aad
das
in
lahf
imul
and
arpl
fadds
xchg
mov
pop
xchg
fstpt
vmulps
ljmp
mov
rcrb
cmc
mov
movzbl
lods
mov
ret
js
ss
inc
cmp
push
add
jmp
pop
add
jge
inc
add
sub
movsb
mov
test
mov
aam
lret
outsb
xlat
negl
jno
out
fcomi
adc
pop
mov
push
ret
dec
jo
add
daa
fdivl
rcll
jnp
jg
loop
mov
cmc
mov
sahf
adc
repnz
add
xlat
lret
mov
shl
mov
daa
xchg
push
mov
or
into
js
cmp
xor
pop
add
repz
shll
mov
repz
out
aad
mov
jge
in
mov
shrb
aaa
cmpsb
ds
xlat
call
inc
or
hlt
imul
mov
push
lret
xchg
mov
out
add
ret
mov
mov
or
lds
mov
imul
pop
or
push
lret
adc
sbb
adc
ljmp
inc
in
cmp
mov
repnz
fsts
push
jecxz
scas
shlb
pop
push
push
xchg
dec
push
xchg
xchg
gs
dec
push
dec
mov
mull
movsb
stos
test
std
iret
fwait
mulb
ja
ds
push
xchg
or
and
jnp
clc
sub
sarl
stos
mov
scas
jbe
nop
dec
pusha
xor
dec
lret
ret
sar
fadds
sub
outsl
pop
notl
mov
add
inc
xchg
pop
inc
xor
xchg
xor
test
jmp
cmp
in
aam
aad
xor
je
mov
mov
adc
jecxz
aas
push
push
shrl
rcll
jmp
shll
mov
mov
cmp
mov
mov
insb
les
leave
into
dec
dec
mov
test
outsb
mov
das
xchg
mov
ljmp
xor
into
mov
orps
dec
inc
pop
ljmp
dec
aas
scas
push
dec
fisttpll
test
lods
or
inc
stc
pop
sbb
in
iret
xchg
in
repnz
fadd
ror
and
ja
xlat
push
mov
stc
bound
stc
push
push
lds
and
clc
mov
arpl
xchg
sbb
test
fildll
and
pop
lret
in
popf
stos
lock
pop
pop
ret
gs
xchg
int3
xor
aam
cmpsl
pop
mov
imul
outsl
imul
and
sbb
subl
sbb
xor
xor
xorl
sub
movl
sub
or
xor
movl
mov
mov
mov
add
orl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movzbl
or
mov
movl
mov
addl
add
xorl
or
mov
not
mov
mov
add
xor
adcl
mov
mov
not
mov
subl
add
subl
and
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
movl
lea
andl
mov
mov
mov
sub
add
subl
mov
mov
orl
xor
add
movl
jne
movl
jmp
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
xor
mov
sub
mov
sbbl
mov
incl
xor
addl
xor
movl
sub
subl
sub
xor
movl
mov
mov
movl
mov
jmp
mov
neg
mov
xorl
xor
addl
xor
sub
and
sub
xor
mov
mov
adc
mov
xor
xor
adc
mov
mov
xorl
add
imul
xor
or
add
mov
mov
mov
sbb
mov
xor
xor
add
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
jmp
sub
jg
imul
stc
nop
inc
sub
iret
adc
jo
jp
fcomps
jp
xchg
outsb
jns
push
adc
int
das
dec
pop
pop
lcall
mov
add
sbb
jno
jnp
in
mov
pop
out
add
mov
fwait
loope
push
mov
mov
xor
movsl
fadds
xlat
jno
add
lret
adc
lock
bound
jmp
call
mov
fs
test
inc
xchg
adcl
mov
test
rcll
and
adc
xchg
adc
call
and
jmp
xchg
adc
adc
jb
in
enter
pop
rorl
sbb
test
or
cli
popa
dec
xor
addr16
mov
xor
jno
sbb
popf
mov
lea
pop
or
xor
dec
adc
sub
mov
pop
inc
push
jp
and
add
inc
jnp
shll
lret
push
jb
outsl
push
pusha
out
or
push
adc
cmp
sbb
xor
mov
and
jo
push
daa
mov
adc
mov
inc
mov
hlt
leave
push
pushw
xchg
ja
pop
nop
push
inc
adc
scas
jmp
in
inc
lahf
call
dec
loopne
jb
push
cltd
stos
xor
arpl
dec
pop
add
jb
mov
out
scas
inc
call
shl
mov
aas
xor
fwait
inc
rcrb
rorb
sub
popa
stc
les
pushf
jge
loop
loope
mov
call
xchg
nop
flds
sbb
pop
aad
dec
pusha
fsubrs
mov
add
and
jnp
or
adc
gs
and
jne
add
xor
lret
adc
sbb
ljmp
sbb
mov
mov
insl
mov
mov
je
in
dec
test
mov
mov
mov
jge
lret
xchg
call
imul
stos
add
jp
jae
xor
cmc
ss
mov
cmp
xor
inc
rol
mov
push
loopne
lret
aaa
xchg
in
lret
jbe
js
push
and
jbe
cwtl
jae
iret
sub
and
cmp
sarl
test
fsubrl
pop
jg
pop
mov
cltd
inc
mov
std
fdivl
ja
sub
pusha
pop
rcrl
nop
dec
arpl
and
movsb
add
mov
jne
idivb
out
decl
sub
push
movsl
roll
push
pop
cmp
and
mov
les
ljmp
ds
and
aad
data16
mov
mov
negb
or
frstor
push
cwtl
add
cmp
subb
mov
mov
insb
repnz
adc
fstl
shl
pop
jo
inc
div
rcr
int
jne
pop
xor
add
sarl
cmpsb
ror
xchg
imul
lret
fldl
mov
cmc
pop
in
or
and
pop
sbb
mov
dec
xor
cmp
rcrl
push
sbb
xor
push
mov
std
cli
and
jne
stos
add
in
xor
jne
sub
mov
repz
and
out
in
xlat
mov
mov
popf
sbb
mov
mov
mov
aad
xchg
cltd
or
dec
jg
pop
xchg
jge
fcmovnb
xorb
test
xor
dec
inc
ljmp
popa
lds
mov
orb
pop
cmp
add
cmp
dec
fildl
mov
fidivrs
shl
jns
rcll
testb
cli
je
mov
fidivrs
jp
inc
movsl
add
jl
pop
push
adc
pop
stos
out
dec
pop
rol
popf
ret
outsb
das
popa
insl
xchg
popa
repnz
adc
iret
mov
mov
outsl
mov
clc
imul
mov
add
mov
jecxz
inc
dec
iret
sbb
sbb
test
mov
fldenv
mov
sti
adc
push
or
mov
movsl
adc
add
addl
ja
push
xor
inc
inc
into
cvtps2pd
stos
and
mov
xor
push
pop
mov
movnti
ja
jg
xchg
and
mov
push
sbb
in
or
sti
pop
int
push
xor
mov
and
dec
push
es
fiadds
jecxz
in
sub
movsb
jbe
cmpsl
jle
adc
scas
adc
mov
out
ds
daa
cmp
sbb
ss
sbb
xor
xor
call
loopne
cmp
adc
imul
pushl
out
enter
repz
sti
fcmovnb
rcr
push
shll
sbb
shr
xchg
dec
pop
xor
jmp
pop
popa
mulb
pop
jae
test
push
xchg
popf
mov
sub
sub
dec
cmpsl
ror
aaa
sahf
sbb
push
pop
sub
pop
dec
cmp
aas
test
pop
lahf
cmp
cmp
pop
or
repz
test
inc
int
sub
dec
jo
mov
xorl
fsts
mov
cld
fnstsw
sbb
xor
mov
fs
adc
gs
or
in
ljmp
int
cltd
in
and
xchg
pop
or
xor
mov
outsl
and
ss
and
or
pop
mov
push
mov
call
mov
std
ret
mov
aam
dec
adc
mov
daa
xor
lods
ja
cwtl
jne
scas
and
iret
mov
mov
jmp
cmpsl
jp
scas
and
outsl
jl
fadds
cltd
lret
push
test
outsl
test
mov
insl
insl
sub
dec
lods
jno
lods
mov
or
cmc
test
sti
fstpt
insl
shlw
mov
test
cmp
and
call
xchg
sbb
shl
adc
outsl
dec
lcall
imul
inc
cmpsl
sub
mov
test
xchg
out
testl
cs
out
jmp
inc
adc
fwait
jle
popa
pop
pop
pushf
lock
pushf
addr16
pusha
mov
in
jecxz
popf
sub
fwait
push
add
jne
adc
ja
push
jb
add
xchg
scas
push
repnz
leave
push
mov
mov
adc
cmp
jmp
adc
andl
repnz
xchg
push
movsl
add
cmp
jecxz
adc
dec
fwait
adc
fdivr
inc
test
pop
stc
pop
and
test
pusha
enter
pop
jno
ljmp
subb
icebp
pushl
sbb
mov
cs
sbb
mov
test
pop
out
fbstp
sub
xchg
pop
shl
das
xor
cmpsb
add
pop
mov
and
fists
xchg
fdivrl
inc
into
mov
mov
std
xlat
insl
scas
shrl
rcrb
es
push
cs
adc
xchg
jle
int3
jp
dec
js
push
fdivl
push
icebp
dec
ljmp
aas
sbb
mov
lock
or
pop
inc
fmul
add
add
pop
fiaddl
mov
fstpt
push
xor
enter
mov
mov
sbb
cld
xchg
push
sub
das
loop
fldenv
fimuls
and
notb
and
inc
add
mov
mov
fbld
inc
pop
icebp
cmp
xchg
dec
mov
sbb
mov
pop
pop
jns
xor
insl
int
push
in
loope
lahf
pop
and
pop
sbb
sbb
sub
sub
inc
jo
icebp
movsl
sub
pop
cltd
dec
cmpsl
rolb
jno
and
lahf
sub
inc
movsb
aaa
sti
xor
icebp
fbstp
mov
add
sbb
jo
ds
loopne
addb
or
ds
cmp
out
imul
int3
and
mov
insb
sub
in
test
push
sub
push
push
or
push
and
sub
adc
jmp
ds
mov
setbe
lods
test
xor
pop
add
push
jo
insb
dec
orb
insl
mov
ror
shlb
je
lods
adc
fimuls
inc
jge
and
jle
pop
iret
imul
out
in
pop
popa
je
jb
iret
push
pop
std
xor
or
test
sarl
adc
mov
adc
out
addr16
xchg
mov
xchg
insb
and
and
mov
pop
fwait
lds
cmp
stos
mov
ret
mov
sub
cmp
push
xor
cli
and
popf
mov
shl
ljmp
in
fs
mov
sub
jp
add
pop
push
xchg
nop
inc
mov
jno
sbb
aad
iret
imul
mov
loop
adc
ja
push
cmp
js
mov
mov
test
xchg
jmp
xlat
pusha
dec
ret
scas
rolb
clc
int
push
test
push
push
clc
scas
inc
sub
mov
adcb
insb
pop
jp
clc
or
fsubrl
sti
sbb
std
mov
in
jg
fisttpl
jb
jl
push
call
inc
mov
cli
dec
clc
push
or
stc
pushf
enter
ss
jnp
mov
mov
push
fsts
jle
inc
arpl
mov
cmp
mov
sub
mov
add
add
sub
add
lds
push
js
repnz
sar
pop
nop
ja
sbb
insl
add
mov
mov
lret
ss
or
jo
sub
xor
xchg
stos
mov
hlt
mov
lret
xchg
jbe
addl
addr16
loop
stc
add
mov
movsl
pop
pop
test
sbb
lods
mov
add
dec
pop
inc
mov
jmp
dec
pop
sub
push
jecxz
mov
addb
sbb
sbb
push
push
call
shr
dec
ljmp
jge
mull
jmp
insb
jns
sub
test
pop
test
iret
sub
in
bound
lods
rcrb
sbb
lret
jp
aam
rcll
mov
mov
adc
lcall
pop
sbb
mov
push
les
jle
imul
add
lods
fnsave
mov
stos
into
into
add
or
fsubl
hlt
add
cltd
cli
in
pushl
icebp
mov
jecxz
cmpsl
in
inc
insl
fistps
push
inc
push
insb
in
pop
jo
or
mov
loope
cmp
jne
sbb
lcall
outsl
outsb
js
jb
dec
lods
in
mov
test
add
xlat
dec
jg
nop
adc
xchg
cmp
aas
xchg
mov
filds
aaa
push
not
dec
jne
jb
ljmp
aam
orl
das
in
rorl
fstpl
cs
lret
inc
int3
and
and
push
cmp
int3
into
push
and
and
jno
mov
fnstcw
stc
mov
adc
push
pop
dec
pushf
scas
pop
ret
insl
adc
cmc
in
push
outsl
ljmp
sbb
jmp
orb
xchg
sub
fcoml
xor
and
cmpsl
fwait
jmp
ret
jmp
outsb
jbe
xchg
mov
fisttpl
mov
iret
sub
mov
jge
sub
push
and
lret
mov
ds
jp
sarl
jmp
ss
jecxz
xor
into
jb
subb
mov
push
push
fidivs
mov
mulb
xchg
push
mov
xchg
ds
outsl
push
andb
cmp
je
orl
add
insb
push
aam
aaa
cmpsl
cwtl
loopne
xor
mov
popf
mov
and
bound
inc
pusha
rcll
repnz
push
stos
pop
ljmp
outsb
jo
inc
push
bound
add
mov
cmp
jbe
sub
sarl
pusha
subb
addr16
cli
pop
push
lahf
leave
mov
mov
rcl
pusha
test
inc
iret
mov
lods
call
shrb
cld
dec
xchg
aaa
mov
cmp
jae
ffreep
adc
pop
mov
out
lds
xchg
iret
insl
or
xor
lods
fcomp
dec
add
sti
dec
adc
mov
xchg
sti
adc
jnp
aam
into
xor
push
adc
push
xchg
adc
stos
test
mov
popf
into
popf
test
rorl
jle
mov
iret
push
dec
je
stos
dec
mov
dec
in
push
loopne
ljmp
xorb
testl
jbe
inc
push
cli
ja
mov
fdivr
in
push
rcrb
add
stc
sbbb
mov
cmpsl
jg
sub
leave
dec
pushl
xor
ret
xchg
mov
insb
jne
fcmovnbe
in
hlt
jmp
push
pop
std
cmp
jno
dec
in
cld
jp
mov
cmp
aas
ret
push
inc
vlddqu
push
ret
jg
add
fdivr
loop
adc
jle
aad
ljmp
xchg
into
lcall
add
xor
adc
sub
fdivs
sti
insb
hlt
xor
mov
int
out
cmp
test
stos
cwtl
push
call
cmp
scas
xchg
sub
call
sub
mov
mov
ljmp
je
inc
xlat
adc
push
or
enter
es
cld
je
ja
call
mov
jae
mov
add
add
mov
pop
push
mov
dec
push
push
rcrl
adc
ds
cs
sbb
lods
outsb
leave
add
add
fwait
xor
lods
lods
ljmp
xchg
jne
pop
add
adc
or
adc
xor
inc
or
nop
lds
nop
shr
es
push
cmp
pop
enter
lcall
cmp
movsb
and
fwait
sbb
nop
add
movsb
out
push
and
adc
sub
mov
sbb
dec
push
xchg
das
xchg
jecxz
shll
mov
xor
loop
ds
add
pusha
cmp
jo
xor
mov
roll
push
test
in
rcll
and
stos
cmp
aas
movsb
flds
cmpsb
cmc
mull
loopne
testb
push
jbe
inc
sbb
cwtl
pop
add
inc
xor
sbb
call
dec
pop
pop
xor
je
popf
xchg
vandnps
into
push
and
jne
jp
out
aas
jbe
adc
popa
mov
pop
stos
adc
sarb
mov
outsb
cmp
mov
adc
xor
aas
sbb
and
add
mov
pop
jg
xlat
cmp
pop
lret
stos
mov
enter
popf
push
sbb
add
push
lods
dec
icebp
push
inc
cmc
cltd
inc
add
imul
mov
ret
pop
gs
xchg
dec
cmpsb
aaa
ljmp
jb
sub
cmp
fdivrp
or
xchg
xchg
pop
enter
data16
jae
sub
or
jp
mov
shlb
daa
cltd
push
adc
mov
mov
outsl
push
cmp
xchg
ror
jmp
xor
push
jns
jbe
jmp
in
sbbb
jo
jbe
into
rep
negl
stc
or
loop
adc
push
flds
roll
inc
dec
lcall
sub
dec
or
xor
xchg
bound
or
mov
jno
push
xchg
test
dec
mov
and
add
push
add
xchg
call
jae
pusha
mov
shrl
xchg
or
mov
ret
jecxz
adc
sbb
cmp
sbb
jnp
inc
mov
shr
adc
ret
xchg
inc
mov
jmp
out
adc
outsl
jno
in
imul
hlt
mov
mov
push
mov
push
mov
inc
iret
imul
ret
lret
mov
jno
outsb
dec
mov
sub
add
add
xchg
inc
mov
in
add
fst
mov
mov
daa
popa
pop
cmp
shll
incb
loopne
mov
pushf
jb
shrl
push
inc
dec
scas
jmp
mov
cmpsb
in
fistpll
sbb
loopne
push
inc
out
sub
xchg
or
jl
add
xor
stos
lock
insl
mov
data16
xlat
mov
lock
ja
sbb
push
add
inc
pop
cmp
scas
das
stos
fs
sbb
sbb
das
mov
push
cmp
mov
and
out
mov
or
inc
sar
add
adc
outsl
sbbl
adc
test
push
add
lock
cmp
shll
aaa
jbe
nop
push
jl
dec
cltd
fs
js
adc
test
lret
jmp
mov
or
mov
fimuls
movl
adc
out
subl
pop
lods
loope
popf
arpl
pop
jecxz
dec
bound
mov
gs
test
add
nop
push
mov
inc
or
ret
mov
in
lds
add
outsb
std
inc
pusha
adc
fisttpll
mov
push
mov
data16
sub
or
jp
pop
mov
xchg
repnz
enter
adc
cmp
fidivl
dec
out
pop
jmp
sarb
xor
sarl
cmp
push
lret
push
clc
insl
rclb
lcall
fsubr
test
sub
fldl
mov
aam
mov
sub
or
pop
sbb
sub
inc
mov
lods
push
cmpsl
xchg
pop
jg
push
pop
cltd
das
jne
adc
and
adc
ficoms
cmp
or
call
in
pop
mov
and
pusha
repz
cmp
fdivrl
dec
das
pushf
stc
fstps
fisttps
inc
loope
addr16
je
xchg
push
rcrl
adc
mov
adc
ret
incb
imul
pop
mov
and
push
mov
mov
or
jmp
xlat
jno
mov
mov
repz
sub
push
int
pop
aas
push
cmp
cltd
jne
pushl
mov
pop
jecxz
aam
lods
cmpsl
adc
sub
sbb
mov
ja
and
cmp
aas
inc
inc
inc
mov
in
xlat
mov
cmp
mov
lods
cwtl
cltd
push
out
in
sub
adc
cmp
mov
dec
inc
in
lahf
sub
mov
addr16
or
push
cltd
push
cmpb
xlat
shrl
xchg
scas
and
jb
mov
mov
sub
pop
sarl
test
subl
pop
sti
mov
dec
cmp
push
pop
jmp
pusha
testl
leave
push
test
pop
loop
add
cld
mov
and
pop
scas
repz
dec
mov
sub
mov
and
out
hlt
sbb
jmp
movlps
and
fldl
ret
adc
sarl
adc
daa
pop
xchg
out
cmp
lret
sbbl
dec
push
aam
pop
xor
and
dec
sar
sti
and
test
sub
in
repz
sbb
out
loop
xchg
or
jge
xor
scas
and
cmp
push
into
cmp
fcompl
ud2
aas
movsb
test
das
push
mov
cmp
daa
xchg
jbe
inc
inc
pop
xor
les
xchg
incl
mov
dec
rep
xchg
ficoml
lahf
clc
push
pushf
push
ja
xchg
mov
cs
xchg
push
sbb
inc
mov
repz
and
adc
faddl
imull
imull
nop
mov
push
test
push
ja
pop
enter
stos
pop
jno
pop
or
cmp
out
pop
loopne
stos
aam
dec
inc
mov
mov
jmp
push
daa
inc
shll
sub
push
fucomip
inc
mov
ss
lock
xor
jo
jmp
test
jp
in
xor
add
cmp
dec
orl
xchg
jns
lock
inc
mov
cmp
push
lea
inc
fisttpl
shll
adc
mov
and
lock
jo
pushl
clc
sbb
sbb
imul
sub
incb
dec
loop
cmpsb
mov
out
xchg
pop
sarl
sarl
jecxz
test
insl
adc
xchg
mov
stos
aam
inc
test
ljmp
repnz
or
cmp
rcr
lods
clc
cvtpi2ps
adc
dec
pop
imul
lret
sub
outsl
push
loop
ret
clc
insb
dec
movsl
pop
sub
and
and
and
adc
cmp
shrl
std
inc
lock
cmpsl
pop
lret
dec
mov
fidivl
pop
lcall
je
clc
out
lods
sub
push
xor
cltd
std
popf
out
iret
insl
negl
and
sahf
jmp
jne
lahf
mov
xor
mov
insb
scas
fidivrs
mov
jnp
xchg
arpl
and
icebp
mov
jle
pop
rcrb
jae
xchg
or
fdivrs
in
inc
adc
and
add
and
sub
loope
scas
and
loope
scas
push
je
cld
bound
lods
movsb
jnp
test
ja
pop
pop
pop
pop
out
lock
jmp
add
add
mov
insb
mov
out
inc
adc
dec
or
push
lret
stos
mov
or
mov
stc
sahf
ret
sub
out
pop
jnp
pop
cmp
sbb
rolb
jae
jbe
sahf
inc
out
imul
and
cwtl
pop
call
mov
repnz
pusha
cmpsb
sbb
pop
std
aad
andl
mov
outsl
mov
jbe
xchg
push
dec
rclb
adc
mov
pop
les
lds
push
sub
arpl
jmp
dec
addr16
pop
pop
push
fisttpl
lods
add
daa
pop
mov
ret
push
popa
rclb
addr16
iret
mov
cld
push
adc
mov
xor
int3
or
jecxz
repnz
adcl
and
adc
sub
jno
push
outsl
dec
out
inc
and
popf
and
cmp
mov
out
adc
nop
push
or
mov
mov
aam
sub
mov
xchg
lcall
call
test
xchg
rcrb
mov
add
lret
jne
test
test
push
movsb
jle
hlt
outsb
adc
lods
pop
push
ds
sub
push
popf
lds
mov
jae
push
mov
sub
sub
lea
sbb
pop
and
das
stc
movb
push
in
mov
or
mov
pushf
mov
cmpsb
imul
cmp
paddq
out
add
push
lret
jecxz
lret
xchg
mov
in
dec
xchg
arpl
mov
hlt
sahf
popa
inc
popf
addr16
iret
jne
orl
dec
lods
jb
mov
jg
inc
mov
push
outsb
add
and
pop
lea
add
cmp
std
mov
adc
outsl
xorb
ss
xor
and
lret
xchg
xchg
mov
call
std
das
push
dec
mov
call
and
pop
mov
pop
dec
out
mov
nop
add
push
and
mov
insb
inc
add
or
mov
movsb
dec
ds
daa
jb
repz
xlat
jle
in
clc
std
std
mov
dec
and
xor
fildl
xor
das
or
adc
push
mov
mov
lock
xchg
movsb
push
aam
sub
andb
cmp
popf
xchg
outsb
lea
lret
add
jecxz
or
cmp
roll
cli
out
jnp
mov
and
sbb
cli
or
cli
xchg
xor
cltd
or
bound
shl
inc
rcll
scas
xchg
dec
xor
fstl
nop
mov
dec
scas
adc
jno
xor
mov
dec
add
cmpsb
xor
push
or
add
lea
push
lods
jnp
flds
mov
inc
pop
test
outsl
fwait
xor
je
mov
or
push
xchg
stc
mov
jp
hlt
xchg
adc
out
lods
aam
jo
test
fidivrl
repz
add
adc
outsl
fildl
xchg
inc
or
xchg
fstl
sbb
pop
addb
test
mov
pushf
daa
addr16
fiaddl
mov
adc
sub
mul
xor
lret
mov
daa
mov
adc
aad
cmpsl
pop
inc
cmpsb
push
adc
xor
xchg
pop
pop
out
repnz
pop
mov
pop
jl
adc
pop
dec
jmp
sub
lods
xchg
push
push
dec
inc
in
hlt
mov
adc
cwtl
add
sbb
mov
repnz
push
or
subb
mov
jle
pop
pop
fstpl
adc
mov
cmp
stc
into
inc
div
push
inc
cmp
xor
add
jns
mov
js
xchg
xchg
rcrb
fs
cmp
mov
scas
mov
pop
xchg
jb
es
cmc
cmp
lahf
mov
stos
daa
cmpsb
add
movb
mov
jle
push
adc
inc
scas
jecxz
aaa
sbb
mov
mov
repnz
imul
jp
add
ret
adc
sahf
int
lock
lcall
iret
mov
add
cmp
mov
stos
loope
xor
scas
lea
xorb
sahf
dec
scas
adc
lock
pop
mov
fcmovnu
or
sub
jnp
xchg
fdivs
or
aam
mov
sub
mov
sub
inc
lahf
scas
add
out
mov
nop
sahf
cli
jmp
lcall
lcall
inc
pop
imul
outsl
mov
inc
adc
js
jecxz
and
adc
and
fst
push
les
add
fs
cmp
sub
push
dec
mov
into
std
dec
insl
jg
sbb
je
dec
xchg
or
push
repz
dec
fbstp
xor
push
cmp
pop
mov
add
add
shl
mov
inc
mov
sbb
jne
xor
scas
jns
pushf
sub
xchg
xchg
flds
stos
mov
mov
in
inc
orb
xor
inc
mov
dec
mov
fstpl
lods
cmp
loopne
aam
push
jle
ss
adc
test
xchg
add
xlat
jo
push
ret
ret
test
xchg
lea
push
mov
jae
xchg
xchg
test
pop
pop
aaa
xchg
loopne
and
push
addl
les
aaa
pop
sbb
test
push
loope
lcall
les
sub
movsb
enter
shrb
jb
je
stos
mov
pop
rcrb
inc
xorb
pop
push
add
adc
stos
data16
bound
rcrb
in
or
fstpl
sub
xor
pushf
add
orl
les
or
das
fstpl
push
dec
push
cmpsb
movsl
jecxz
pop
aad
fs
fcmovb
xchg
jnp
shrl
in
cmp
arpl
dec
push
loopne
shll
jae
imul
cmp
push
sub
sub
push
lcall
and
adc
adc
pushf
dec
leave
out
in
in
or
inc
xor
jp
sbb
in
jp
xor
pop
add
mov
dec
mov
adc
cli
dec
adc
int
jns
iret
popa
mov
push
sub
or
cmpb
and
dec
inc
loop
xchg
mov
push
je
outsb
ljmp
push
dec
jne
lods
lret
in
js
jnp
fistl
movsb
inc
sbb
pop
hlt
xor
and
adc
loope
or
adc
mov
jae
test
pop
orl
inc
loopne
rcll
dec
sarl
jmp
js
dec
and
adc
out
pop
int3
into
or
jns
xchg
aam
pop
stos
or
les
push
out
inc
leave
inc
aas
movsb
enter
jb
jge
gs
cltd
hlt
shll
add
sbb
test
enter
dec
mov
adc
jmp
faddl
push
mov
mov
test
and
inc
je
enter
or
mov
mov
ss
pop
mov
movsb
cmpb
xlat
jecxz
or
mov
lret
pop
fs
mov
daa
idiv
or
pop
in
fwait
jg
mov
mov
jp
inc
pop
rcr
call
and
enter
push
jge
dec
shlb
mov
pop
sub
enter
cmpb
stos
lock
mov
mov
xchg
inc
adc
xchg
lret
rcl
fisubrs
add
out
dec
test
and
adc
inc
rorb
popf
jge
movsl
dec
push
enter
call
jnp
out
sbb
inc
adc
jae
cltd
dec
mov
sub
and
mov
je
aaa
sbb
stos
repnz
in
jmp
jo
sub
mov
pop
and
shrl
in
jecxz
gs
adc
bound
mov
lcall
or
out
stc
pop
rcrl
cmpsl
out
arpl
xor
negl
and
arpl
cmpsb
cmp
and
dec
cmp
xor
in
push
pop
sbb
push
arpl
jg
push
bound
xor
in
xchg
cltd
out
ds
mov
cs
arpl
dec
mov
xchg
or
and
iret
iret
xchg
mov
mov
add
adc
adc
dec
adc
lea
sbb
jne
cmp
int3
dec
nop
jle
movsb
stos
roll
addr16
push
cwtl
jnp
cmc
push
xchg
movsb
xor
in
rclb
sbb
dec
jl
js
stos
sbb
shlb
ss
xor
pop
data16
repnz
jo
call
pusha
or
xchg
or
sub
sbb
cmp
inc
add
js
insl
jbe
loope
pop
shll
add
divb
mov
mov
adc
lds
mov
xor
mov
daa
out
fsubrl
and
add
scas
xor
dec
push
nop
jbe
fistpll
adcb
push
pop
add
sbb
ret
test
pop
xchg
pop
xor
pushf
push
cwtl
xchg
mov
sbb
fwait
out
fistpl
shlb
sbb
fsubp
ss
cld
fldlg2
inc
das
push
loopne
adc
sub
mov
adcl
jg
inc
out
inc
mov
pop
xchg
pop
jl
adc
lods
mov
sub
int
pop
jle
std
enter
mov
jae
outsl
xchg
push
enter
jno
inc
or
cmp
movsb
in
movsb
add
push
sbb
xchg
add
pusha
pop
idivb
add
push
std
cli
loope
stos
sbb
outsl
aam
cwtl
or
push
or
jbe
int3
ss
inc
push
xchg
je
sbb
in
adc
std
adc
aad
call
sub
push
xor
pop
lods
and
faddl
and
dec
or
sub
add
mov
mov
xor
add
jmp
clc
fsub
mov
mov
mov
cmp
push
jns
fcomps
jp
dec
sarb
inc
in
andb
arpl
lods
jle
hlt
xchg
insl
fxam
push
mov
mov
jns
addr16
icebp
push
xor
adc
mov
scas
inc
push
dec
jmp
inc
popa
dec
jno
repnz
or
sbb
popf
repnz
movsl
cmp
call
movsl
pop
icebp
add
push
mov
loopne
push
adc
cmp
call
add
sbb
ret
dec
lret
insb
mov
mov
jns
mov
adc
jns
xor
call
mov
ljmp
dec
lret
xor
addb
fisttpll
pop
or
push
adc
xor
test
out
cmp
arpl
xchg
cmp
inc
xlat
pop
mov
mov
cld
test
pop
or
out
mov
dec
pop
and
fdivl
mov
cmp
mov
pop
repnz
je
or
aas
mov
sbbl
adc
fidivl
lret
mov
rcr
mov
push
add
out
loop
pop
add
ret
inc
pop
and
cld
jmp
popa
inc
add
mov
or
js
fidivrl
inc
std
add
or
push
scas
ljmp
out
loope
add
xchg
or
push
ss
data16
sub
int
fiadds
jmp
ret
pop
mov
pusha
and
adc
and
xlat
cs
mov
in
aad
fildl
jnp
dec
jns
mov
rcrb
imul
popa
leave
and
jg
mov
fsts
js
scas
lret
mov
stos
cld
insl
push
sbb
popa
iret
adc
push
sbb
dec
sub
in
pop
jb
cmp
in
dec
je
lds
mov
xor
and
into
iret
inc
jb
out
std
imul
lock
or
rorb
test
mov
pop
mov
and
push
ja
scas
and
cmp
xor
jb
sbb
insb
jecxz
movsl
xchg
adc
jno
inc
jl
adc
inc
pusha
add
add
stos
and
cmp
adc
cwtl
out
daa
cmp
xlat
jns
mov
mov
jae
inc
pushf
repz
bound
mov
push
xlat
push
xchg
mov
adc
aam
dec
jae
xor
imul
lcall
push
sti
or
repnz
pusha
mov
jb
mov
sub
jno
popa
das
fmull
ss
push
mov
das
mov
sbbl
sub
lret
iret
std
pop
lahf
mov
adc
mov
xlat
ficoml
std
test
test
mov
lock
cmp
xchg
ret
cmc
mov
xor
adc
iret
pop
xchg
mov
lret
ds
jb
adc
mov
gs
aas
add
insl
adc
jecxz
dec
out
push
negl
shlb
add
xor
push
mov
dec
or
icebp
xchg
or
add
rolb
rolb
dec
filds
pusha
lret
sbb
cwtl
inc
cmc
fisttpll
mov
cmp
int
xor
or
fisubl
sbb
scas
scas
iret
scas
cmpsb
or
push
mov
dec
or
push
and
mov
or
imul
cli
mov
jno
mov
mov
rep
mov
mov
cmp
or
sti
lods
cmp
ja
pop
pop
fnstsw
cmp
mov
jle
shlb
push
push
push
ret
sti
int
cmpsl
lock
pop
movsl
xlat
jecxz
xchg
cli
out
test
pop
insb
js
daa
stos
sub
cs
popl
cmp
adcb
inc
scas
push
cmc
dec
adc
ja
stc
sahf
inc
mov
xor
jmp
loopne
mov
mov
jnp
inc
push
fnstsw
mov
ret
in
fistl
or
push
int3
push
mov
pop
inc
stos
mov
lahf
lock
jmp
rcrl
and
lret
aaa
or
jmp
pop
arpl
icebp
mov
mov
adc
add
rep
int
xor
mov
mov
aas
inc
fisttpl
leave
pop
jbe
xchg
sbb
fidivrl
push
movsl
mov
cmp
mov
mov
scas
aas
addb
lcall
test
ss
mov
adc
nop
add
sub
add
in
sub
push
cli
fcoml
pop
arpl
adc
jb
mov
test
lds
push
ss
cli
jmp
xor
icebp
adcl
repnz
mov
inc
ffree
sbb
or
out
cld
xchg
xchg
cmp
sahf
shr
sub
mov
adc
cmp
aad
std
ljmp
jecxz
ret
popf
lret
stos
xor
cmpsl
sbb
pushf
adc
push
ret
adcl
in
clc
roll
dec
adc
mov
mov
pop
sti
test
popa
push
out
and
push
cmpsl
xor
mov
or
add
and
mov
out
ret
rol
inc
jg
das
pop
fimuls
push
jb
test
pop
push
nop
fisubrs
sub
dec
shr
mov
rcrl
mov
and
pshufw
bnd
and
xor
pop
cmp
sbb
cmc
das
mov
push
or
scas
mov
mov
cmp
mull
push
adc
in
in
push
cmpsb
jns
icebp
lret
sbb
fstpt
arpl
inc
lods
sbb
dec
or
cmpsb
xchg
cwtl
cwtl
lahf
jae
ror
adc
pop
adc
dec
and
xchg
pop
mov
mov
mulb
iret
lds
jnp
cltd
ret
mov
mov
inc
aad
outsb
mov
and
mov
rorl
popl
and
jne
mov
fwait
or
pop
imul
insl
xchg
xor
cwtl
cld
rcrb
sbb
cmp
outsb
ficoml
sub
jl
mov
test
js
ret
jnp
pop
aam
cmpsb
mov
nop
test
insl
sub
xor
iret
adc
call
nop
push
mov
jmp
scas
xor
jne
mov
je
clc
test
adc
ljmp
shl
sahf
adc
aas
jecxz
loope
lcall
push
or
mov
dec
mov
fwait
pop
jle
shrl
fwait
cld
mov
sub
mov
lret
push
xor
jne
pop
sarl
or
les
push
test
adc
popa
cmpsl
pop
sbb
add
lods
ret
push
jae
clc
or
add
xorb
outsl
mov
cmp
cmp
xchg
mov
and
test
xchg
in
jns
jecxz
sbb
frstor
lret
sub
inc
stos
cmp
mov
mov
rclb
into
xchg
xlat
decl
xor
mov
testl
inc
mov
je
cld
scas
mov
out
sbb
and
arpl
setbe
mov
les
jge
jbe
xchg
xor
lret
cmp
mov
add
pop
dec
xlat
mov
subps
movsl
xchg
sti
daa
dec
mov
sbb
daa
pop
cld
mov
ds
mov
push
sarl
lret
lea
fstpl
test
xchg
loop
and
repz
mov
dec
xor
lret
jle
push
push
push
inc
push
sahf
xlat
mov
pop
dec
test
cmp
pushf
xchg
fnsave
xor
icebp
cmp
iret
bnd
or
cmp
or
fidivl
cmp
int3
ds
es
jne
aaa
and
lret
jmp
push
add
adc
bound
inc
or
mov
int
movsl
cld
nop
cmpl
cmpl
mov
leave
cwtl
or
jae
imul
outsl
push
pop
cmp
rcr
cmp
out
mov
movsb
inc
xor
mov
mov
mov
popa
mov
ret
lret
arpl
int
dec
inc
sahf
fstpl
je
mov
outsb
inc
xchg
push
movsb
rolb
popf
iret
enter
mov
gs
dec
ret
in
jmp
xor
lods
jo
dec
call
ljmp
lea
dec
xchg
sub
aaa
push
mov
mov
jno
std
std
loop
add
ss
mov
push
cmp
mov
sub
xchg
enter
imul
mov
icebp
shlb
rcr
test
push
add
mov
sub
and
out
roll
xor
add
inc
dec
adc
stos
sub
cld
jecxz
mov
sbb
add
icebp
xor
imul
dec
lods
jne
dec
jne
popa
movsb
ret
push
ja
ja
push
aaa
cli
jecxz
clc
or
push
aaa
pusha
out
add
nop
cmpsb
inc
out
push
inc
ja
jecxz
or
insl
into
jae
fwait
push
shlb
sub
out
jns
subl
inc
inc
dec
pop
jge
push
lea
pop
sahf
aad
mov
pop
pusha
popf
js
inc
lea
fs
jo
bound
movsb
push
clc
mov
jb
adc
cli
insl
nop
lods
fiadds
stc
cmp
inc
scas
rcr
mov
xor
mov
push
fsubs
inc
subb
pop
fcoms
out
fs
push
mov
out
ljmp
xor
xchg
and
xchg
sarl
mov
scas
lcall
xor
aam
fiaddl
xchg
push
sbb
loopne
sub
jno
repnz
xor
jg
and
out
xor
xchg
xchg
cmpsl
pop
std
cmp
popf
xchg
in
lds
mov
pop
xlat
into
mov
mov
daa
inc
mov
mov
sbb
ds
jg
fldenv
cli
mov
fisttpll
rol
xchg
jl
and
movsl
xchg
int
xchg
push
pop
sub
daa
stos
cs
loopne
add
das
pushf
aaa
mov
ret
sar
shrb
cs
sbb
mov
nop
xor
or
mov
lret
insb
mov
addl
ret
bound
add
add
xchg
jne
xchg
cmpsb
stos
xor
arpl
xchg
loop
inc
test
push
popa
mov
cwtl
cmpb
outsl
push
daa
mov
adc
fs
hlt
jnp
push
lea
rclb
adc
mov
jne
stos
mov
sbb
xor
jne
mov
in
in
sub
or
push
jg
xor
push
lock
jmp
movsl
movsl
mov
sub
pop
mov
lods
pop
lcall
jmp
test
cmp
into
lahf
mov
jb
lock
stos
inc
scas
adc
jge
mov
or
lods
sbb
mov
jp
lods
fisttpll
mov
mov
fiadds
shlb
add
out
jg
mov
popf
imul
and
jne
push
lods
xor
mov
imul
aas
inc
xor
loope
mov
or
jmp
pop
mov
pop
adc
pop
divb
mov
mov
jecxz
xor
cli
mov
jge
mov
or
insl
jg
mov
fistl
rol
pop
jl
push
jnp
adcb
sahf
push
or
cmp
cmp
xor
mov
nop
test
push
sarl
jbe
jbe
mov
xchg
jmp
mov
jge
shrl
in
repnz
jnp
leave
mov
lods
sbb
cmpsl
shlb
iret
sbb
sub
cwtl
push
aad
push
stos
mov
out
incl
mov
add
lret
mov
jge
repnz
test
xor
mulb
out
cmp
imul
inc
sbb
cmp
mov
in
pop
movsl
mov
jbe
ret
adc
inc
mov
xchg
addb
dec
dec
outsl
jae
xchg
pop
out
leave
push
cmpsl
lods
jg
inc
mov
fiaddl
xorb
stc
and
push
je
add
in
cltd
insb
xchg
cld
mov
mov
xchg
notl
push
pop
rorl
cmp
test
push
jecxz
or
or
mov
mov
out
or
jne
loope
mov
push
adc
stos
popw
cltd
loopne
arpl
dec
inc
lods
mov
mov
repz
cmpsl
call
or
adc
lret
xor
adc
mov
insl
jle
jno
loope
leave
je
xchg
xor
stc
movaps
or
dec
pop
push
das
mov
jmp
test
xchg
out
pop
repnz
push
add
notl
adc
dec
xor
scas
mov
xchg
nop
aam
subl
leave
xchg
sub
cs
bound
stc
mov
mov
pop
mov
add
and
jmp
les
int3
pop
adcb
fidivl
cmovno
aam
int
fisttpl
shll
lret
inc
or
mov
inc
andb
cli
cmpsl
leave
js
pop
fstpl
sub
rorb
cwtl
jno
xlat
inc
pop
and
roll
jmp
adc
imul
pop
sarb
stos
push
add
negl
lcall
es
pmullw
lret
fstp
mov
xor
movsl
inc
cmp
bound
xor
jnp
inc
mov
jnp
popf
mov
mov
incb
pop
ja
nop
or
xchg
mov
xor
js
imul
imul
lock
in
xlat
mov
xchg
xchg
xchg
or
pop
or
hlt
cmp
sbb
pop
xor
push
lock
stos
clc
dec
mov
stos
mov
adc
add
xchg
sbb
mov
push
icebp
addr16
ftst
xlat
es
cmc
sbb
gs
xor
xchg
sub
add
and
aaa
ds
pop
push
pop
ror
inc
inc
pop
lret
push
jp
loop
mov
jns
stc
out
clc
mov
sub
test
adc
pop
movsl
fwait
inc
xlat
or
pop
push
xchg
lock
adc
push
dec
testl
pop
cmp
cli
mov
hlt
dec
ss
mov
xlat
imul
xchg
ds
push
cmp
inc
idivl
adc
xor
sti
nop
mov
pop
sbb
cmpl
popf
add
cwtl
push
incb
push
add
insb
push
fisubrs
pop
scas
pop
pop
mov
xchg
push
xchg
mov
es
mov
cmpsl
jp
mov
ljmp
leave
mov
add
adc
enter
iret
push
mov
divb
out
mov
push
rclb
jle
xor
sub
nop
icebp
inc
pop
or
repz
inc
push
ja
cwtl
xchg
clts
dec
rcl
lret
insl
xor
mov
pop
cmp
cmp
dec
mov
into
jne
lds
movsb
ja
iret
xor
dec
addr16
int
jl
xor
mov
xor
mov
xor
ret
ss
test
sub
adc
cwtl
xchg
jae
sbb
and
cmpsb
and
aaa
inc
int3
sub
popa
push
jle
sub
dec
mov
test
push
ds
or
xchg
adc
mov
pop
ficoml
push
inc
hlt
lods
out
xor
daa
sarb
sti
int
stos
xlat
cld
fadd
push
mov
cld
repz
test
add
pop
ja
fwait
dec
shrl
lock
mov
stc
aam
mov
sti
insl
cmp
sub
and
cmc
push
dec
mov
js
cmp
in
adc
inc
les
repz
cld
or
mov
xchg
imul
mov
xchg
or
cmp
int3
fdivrs
mov
sbb
jbe
or
fmul
fs
maskmovq
negl
les
mul
dec
push
pusha
adcl
js
mov
addps
pop
adc
pop
lea
cmp
pop
xchg
mov
stos
xchg
mov
sub
push
por
jb
in
sarb
rcll
repz
mov
fmull
mov
inc
inc
sbb
and
enter
push
sbb
fnstcw
mov
push
out
and
push
xchg
fwait
pusha
mov
loop
inc
dec
jno
scas
testb
mov
push
lcall
cwtl
push
and
push
mov
icebp
jb
adc
mov
mov
push
pushf
fistl
repz
scas
or
icebp
call
mov
scas
ds
jne
pop
repz
sbb
pmaddwd
int
addr16
cmpsl
lds
xchg
jge
push
mov
jbe
mov
add
int3
rcrl
lahf
cli
rorb
jae
mov
test
sbb
pusha
fsubrs
loop
mov
arpl
inc
sub
cmp
movsb
pop
sbb
mov
into
insl
aaa
xchg
pop
addr16
andl
je
inc
push
das
loopne
ficoms
mov
pusha
xchg
orl
lea
adc
test
xor
fldl
jns
ss
cmp
into
fisubrs
daa
lahf
jp
and
popf
fadds
and
jo
sti
imul
xchg
inc
xchg
fdivrs
lock
sub
mov
bswap
insb
pop
and
cmp
xchg
lcall
in
cmp
fisttps
imul
stos
sbb
rcrb
or
aaa
cltd
repz
bnd
add
push
inc
outsb
xor
xorb
pop
add
test
pop
jge
mov
cs
fwait
inc
jns
push
add
lret
sub
cmp
fwait
xlat
pop
mov
add
in
mov
adc
ret
inc
mov
add
inc
aam
and
sarl
cltd
and
sub
jae
inc
add
adc
xchg
jg
daa
bound
mov
sbb
push
les
mov
dec
ds
decb
inc
les
in
jl
inc
stos
shrl
jmp
je
inc
push
push
out
bound
dec
inc
mull
stos
int
ja
fbstp
out
jp
mov
lcall
fisttps
pop
pop
pop
sahf
hlt
mov
ljmp
mov
aam
popa
sbb
insl
std
xchg
hlt
sbb
inc
push
addr16
pop
push
dec
loope
and
into
cld
int
ficomps
out
adc
outsb
aas
add
filds
sub
ljmp
subl
rorb
sub
iret
jne
mov
and
pop
jg
push
mov
ja
xchg
dec
in
pop
sahf
pop
or
lea
xor
in
outsb
pop
into
pushf
xchg
cmpsl
and
xchg
push
cli
in
cmp
or
xlat
scas
adc
movzbl
test
mov
popa
xchg
je
push
push
sub
pushl
pop
mov
and
cld
jl
pop
and
mov
push
lret
pop
jg
scas
fisubrs
mov
gs
daa
inc
scas
jmp
fwait
pop
push
out
shlb
jecxz
into
pop
push
mov
adc
mov
dec
cmpsb
sub
ljmp
inc
sti
push
in
orl
lret
aaa
jae
js
js
sbb
jo
push
lahf
pop
ret
xchg
jg
dec
fwait
mov
mov
cmp
sub
push
and
or
push
mov
mov
push
js
or
dec
out
cs
and
cmp
sub
or
shlb
popa
sub
push
jbe
pop
ljmp
push
cli
subb
jg
add
mov
xor
and
cmp
xchg
jg
mov
aaa
pop
mov
mov
and
dec
lods
adc
daa
ret
mov
mov
rcrb
lods
mov
testl
xchg
shl
xchg
push
pusha
dec
fwait
mov
or
ja
mov
iret
or
lods
ret
push
xchg
pop
das
data16
imul
jns
cmpsb
fdivrs
adc
push
xor
aam
or
lret
orb
iret
mov
push
dec
pop
or
add
push
or
in
shrl
lret
inc
jnp
call
out
stc
rcrb
cwtl
les
inc
sub
pop
jl
rolb
lods
cmp
add
inc
push
lcall
iret
sbb
inc
iret
daa
pop
lcall
xchg
fstpt
fsub
movsl
ds
lcall
stc
repnz
int3
jl
aam
outsl
xchg
repz
mov
stc
jne
sub
cmpsb
mov
cmpsl
aas
fs
mov
stos
push
lds
out
int3
ss
cmp
fwait
clc
push
mov
cld
lret
pop
sti
jl
push
or
lahf
sub
nop
jl
arpl
fsts
sub
test
sub
repz
out
mov
mov
xchg
lahf
pop
xorb
testb
jg
jno
mov
outsb
jle
inc
fidivl
fisubrs
loope
lahf
fmull
sbb
lock
ds
jb
lcall
push
and
iret
mov
fwait
lcall
leave
xchg
stos
bound
xchg
movsb
aad
fdiv
lret
ror
fsubs
lea
mov
adc
rclb
mov
add
into
push
pop
sahf
popa
push
ss
stc
inc
pop
aam
movsb
mov
push
jb
leave
mov
test
add
lds
insb
mov
mov
data16
dec
imul
add
ret
in
enter
mov
or
aam
movsl
and
lcall
pop
popf
fcmovnu
mov
aad
cmp
sub
cmc
into
cmp
out
outsb
test
js
mov
subb
sbb
cmp
pop
ret
out
pushf
sahf
out
adc
cmp
cmp
popa
push
inc
dec
dec
hlt
mov
addr16
jle
or
inc
mov
daa
ss
xor
jnp
ja
aad
sarb
in
mov
shlb
xor
shr
xchg
or
dec
cmp
push
cmpsb
mov
dec
out
sti
sahf
ja
mov
movsb
loop
arpl
cmp
inc
dec
push
cli
imul
pop
adc
pop
fcompl
mov
and
mov
cmpsl
mov
mov
jo
push
gs
stos
or
push
pop
scas
cmpsl
int
sar
outsl
scas
lret
xor
mov
cmp
push
cmp
sub
sbb
cmpsl
icebp
mov
cli
pop
js
js,pt
and
scas
push
sti
mov
lea
or
mov
xchg
add
lods
xchg
dec
aad
cmpsb
inc
adc
imul
jp
out
inc
bound
test
pop
and
mov
adc
push
stos
leave
lock
push
div
jmp
imulb
add
mov
loopne
icebp
mov
sahf
arpl
xor
jmp
mov
jge,pt
frstor
into
dec
cmp
and
xlat
test
divb
fisubl
movsl
mov
mov
test
or
push
lret
shrl
popf
push
inc
xchg
aad
sub
xor
leave
sbb
or
cltd
add
pop
sahf
jnp
push
pop
or
jmp
xor
jmp
and
lret
mov
fidivrl
mov
cli
int
sti
pop
loopne
aad
and
and
pop
dec
inc
stos
test
mov
shrl
call
or
stc
cmp
adc
jl,pn
dec
push
pop
mov
sti
mov
out
mov
sbb
fists
nop
and
and
iret
cmpsl
fadd
fnstenv
add
inc
sub
in
fbld
das
leave
scas
les
xor
sahf
iret
fwait
rcrl
fwait
push
popf
idivl
mov
mulb
mov
sbb
daa
mull
xchg
jle
sbb
jns
int3
mov
ret
mov
arpl
mov
bound
push
fisubrs
jle
mov
add
xor
arpl
dec
sbb
imul
mov
sub
aam
xorl
add
out
add
jmp
xlat
inc
inc
cmpl
call
adc
push
out
jbe
mov
adcb
jbe
sbb
out
imul
jmp
and
cmc
clc
and
pop
inc
aam
outsb
jb
cmp
mov
cmp
jns
mov
cmpb
stc
pop
mov
and
lret
push
mov
cmpsb
mov
flds
jp
in
cs
lds
mov
push
sahf
stos
adc
jae
add
pop
inc
or
sahf
clc
push
mov
test
inc
shll
lds
add
dec
pop
lds
cmpsb
lods
jo
push
in
and
and
mov
cmp
add
ret
fdivrp
in
lea
sub
aas
icebp
dec
mov
fsubrs
fnstsw
aaa
dec
pushf
cmp
xchg
mov
jle
xchg
sar
mov
sbb
xor
xchg
div
mov
sub
mov
push
mov
popf
nop
or
pop
xchg
push
xorb
jno
mov
aaa
cwtl
test
leave
aaa
mov
fcmovnu
sti
fstps
es
sbb
test
xorb
lods
rclb
jno
add
ljmp
sar
clc
xchg
mov
mov
movsb
in
imul
push
aad
lock
addr16
daa
adc
jns
fisubrs
test
lock
outsl
fdivrp
rolb
xor
dec
add
imull
out
adc
cwtl
push
in
mov
inc
mov
fs
testl
lds
std
push
test
imul
add
rcrb
adc
cmpps
fimuls
xchg
pop
xchg
dec
xor
add
test
jle
jne
lcall
mov
push
cmp
add
jp
xor
sahf
xorl
mov
notl
pop
xor
add
push
xchg
pop
pop
adc
push
dec
aas
xlat
test
fs
pop
popf
xor
ret
dec
pushf
int
xorl
nop
adcl
jg
ds
xchg
dec
mov
dec
shlb
or
push
dec
xchg
insl
pop
addl
into
jne
push
adcl
imul
mov
inc
jne
cmp
repnz
mov
xchg
int
xchg
fisubs
cltd
in
cwtl
xchg
or
daa
or
jmp
lret
in
pushf
push
in
sub
inc
sbb
add
xor
jbe
adc
lret
add
daa
int
ds
and
mov
pop
push
xchg
orb
jecxz
sbb
lret
pop
xchg
test
jle
jmp
arpl
mov
sbb
sub
pop
push
push
popa
nop
hlt
mov
int3
test
lret
inc
inc
hlt
adc
cmp
mov
sbb
call
inc
pmaddwd
repnz
jnp
cld
push
jp
cltd
pop
std
dec
shll
imul
xlat
idivl
pop
dec
hlt
xchg
and
mov
stos
sub
xchg
sarb
shrl
inc
mov
or
add
rorl
xchg
outsl
les
xor
daa
mov
jmp
inc
in
or
jns
xorl
ljmp
sub
lods
mov
mov
and
push
mov
ret
int
lahf
test
leave
rcr
lods
out
xchg
lock
push
pop
aaa
dec
push
xlat
mov
cmpsb
jns
aas
jne
stos
jp
jmp
cwtl
dec
stos
xchg
dec
movsl
mov
adc
xor
add
mov
mov
rolb
sbb
inc
and
or
arpl
mov
lods
ret
enter
mov
ret
lea
dec
inc
fxch
sub
ret
inc
pushl
mov
sbb
jg
push
cmp
hlt
xchg
jecxz
cwtl
pop
push
mov
es
jl
mov
fcompl
xor
rol
sub
leave
and
adc
scas
stc
inc
fs
fldt
xchg
push
mull
push
adc
sbb
mov
adc
mov
xor
pushf
mov
xchg
pusha
test
cwtl
cmp
push
cmp
mov
rcl
mov
rcrl
daa
cmp
into
rcrb
xchg
sbb
adc
cmc
repz
enter
mov
outsl
ds
fildl
ja
scas
add
test
pop
cmp
cmp
push
dec
push
and
pop
lea
lods
out
sub
xchg
jl
pop
pop
dec
cwtl
pusha
insb
push
ljmp
lcall
inc
sub
mov
popl
aad
jb
xor
mov
mov
enter
leave
pop
in
jl
and
incl
adc
lret
pop
xchg
int
push
sub
pop
in
inc
cld
nop
jecxz
jns
jecxz
clc
sub
std
dec
pop
add
addr16
ljmp
dec
or
mov
aam
icebp
jl
clc
mov
cwtl
call
lods
add
movsl
ffree
add
pop
test
jp
dec
mov
jbe
test
popf
jge
push
dec
repnz
dec
stc
lcall
fisttpl
mov
lods
sbb
pop
rorb
out
mov
dec
cwtl
push
cmp
sti
repnz
and
fbstp
pop
lret
xchg
sbb
push
adcb
testb
pushf
jle
std
mov
jb
jecxz
aaa
or
or
pop
repnz
test
xchg
bound
mov
ja
pop
loop
shrb
out
daa
lret
hlt
insl
stc
jle
data16
sub
inc
out
add
or
repnz
and
leave
ja
or
jecxz
clc
test
mov
or
std
cmc
pushl
jne
ret
mov
sub
rcl
xorl
lret
xor
mov
stc
xor
xchg
fisttps
fwait
sarl
push
out
sub
and
xchg
cwtl
punpckhwd
lcall
fsub
mov
jge
jb
mov
pop
xchg
xor
dec
vpcmpgtd
adc
push
mov
into
push
insl
bound
cld
cmp
jl
out
jecxz
dec
mov
inc
xor
mov
xchg
push
fnstenv
fadds
fwait
sbb
das
push
dec
or
out
xor
sbb
int
add
jmp
pop
popa
dec
in
jo
sbb
push
push
and
pop
jecxz
movsl
insl
in
mov
pop
fcmovnu
mov
push
into
cmc
loop
rorl
mov
add
inc
subl
arpl
popf
sbb
xchg
cmp
ret
jp
adc
or
or
or
cmp
outsb
out
out
mov
jg
test
adc
cltd
mov
add
mov
aaa
jmp
pop
int
bound
mov
and
lea
mov
ds
popf
sbb
imul
cltd
sti
mov
bound
push
xchg
dec
out
lret
mov
fstps
xchg
xchg
mov
cwtl
jne
std
int
mov
xlat
mov
popa
sub
fldt
adc
jnp
lahf
mov
xchg
mov
scas
stc
out
jecxz
sbb
xchg
mov
test
mov
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
sub
pop
dec
add
add
add
add
cmp
popl
add
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
clc
mov
add
mov
add
popl
add
sub
add
popl
add
add
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
push
push
inc
push
clc
inc
incb
push
push
scas
pop
lret
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
xchg
ds
add
int3
add
add
push
lahf
mov
fldl
lret
xchg
xor
outsl
cld
jnp
xor
pop
xor
movl
xchg
push
cmpsl
mov
xor
xchg
ss
push
jle
lahf
call
mov
inc
roll
negl
mov
dec
and
or
and
std
add
cmpl
sarl
push
inc
jbe
inc
lods
cmc
and
insl
imul
mov
ficomps
cwtl
ret
pop
push
xchg
xchg
out
sub
jle
vpsubw
sub
push
mov
push
dec
leave
push
in
lods
pop
pop
jg
loop
xchg
push
in
and
rcrb
push
fmull
loop
int
aam
repnz
mov
jmp
adc
pushf
scas
and
sbb
or
mov
and
add
and
ja
out
sub
in
add
mov
pop
jne
mov
pop
or
dec
add
sbb
idivb
mov
mov
sub
dec
fs
xchg
jne
dec
adc
lea
pop
cmp
mov
in
jecxz
fldenv
lods
pop
add
or
sbb
sub
insb
add
inc
andb
stc
inc
and
jb
fnstenv
mov
cwtl
out
leave
inc
jbe
sub
mov
inc
and
xchg
mov
add
mov
mov
cmp
leave
sbb
call
adc
adcl
imul
bound
jns
cli
out
lods
sub
xchg
jle
das
lea
scas
add
jae
int
jle,pt
xchg
cwtl
jns
icebp
mov
sar
or
adc
pop
mov
outsb
fstl
rcr
lahf
pushf
in
lcall
outsl
inc
stos
inc
fildll
push
or
mov
add
push
stos
jge
or
das
mov
notl
in
add
ss
ljmp
xchg
addl
in
pushl
mov
ret
rcll
cmpsb
xchg
jae
adc
push
daa
push
ret
or
cmpsb
stos
mov
sbb
fimull
mov
enter
mul
jb
outsl
lcall
sub
lea
adc
mov
xor
pop
rcrb
xlat
push
adc
wbinvd
or
pop
ds
jb
mov
lcall
jno
and
ljmp
nop
sub
out
add
jecxz
mov
psubusb
iret
loope
cld
sbbl
ja
add
scas
pop
mov
jp
lea
lret
cltd
daa
cltd
mov
add
idiv
jg
mov
mov
dec
sub
add
int3
add
add
lret
enter
jmp
push
test
stos
call
inc
inc
repnz
mov
nop
xchg
mov
sbb
sub
xor
pop
mov
test
sub
or
rcl
sub
sbbb
leave
xor
pop
in
data16
jp
and
rcrb
jecxz
add
das
scas
into
mov
int3
std
dec
adc
out
popa
fnstsw
adc
int3
pop
push
int
shl
cld
mov
mov
push
jp
out
add
dec
xor
pop
lods
mov
jecxz
imul
icebp
movsl
inc
mov
xor
stos
popa
sbb
mov
sub
movsl
push
adc
sub
jno
add
test
inc
xchg
jmp
clc
lds
sub
xor
in
sub
jns
setne
mov
xor
faddp
mov
bnd
adc
xchg
mov
jno
pop
jp
mov
mov
les
and
mov
dec
dec
shr
les
push
xor
inc
push
adc
sbb
cltd
cmp
loopne
repnz
mov
stos
mov
push
mov
dec
xchg
pop
rolb
sub
sti
or
imul
mov
es
sbb
cmc
ss
cmp
scas
push
jge
or
lea
fstpl
in
in
icebp
jle
sbb
cs
jbe
jo
cwtl
addr16
xchg
mull
or
in
inc
fldl
stc
fmuls
in
repz
mov
addl
je
fwait
movsb
sahf
dec
rorb
test
test
lds
mov
dec
fcmove
lea
daa
imul
mov
stos
mov
addb
cmp
mov
hlt
cltd
pop
out
mov
outsb
inc
or
lods
adc
and
push
js
idivl
mov
push
movl
leave
imul
nop
and
sbb
pusha
pop
pop
fisubrs
pop
sub
jae
stc
out
not
lods
pop
mov
push
jbe
pop
pop
enter
ja
lock
mov
rolb
mov
cmpsl
fnstcw
nop
mov
or
rolb
pop
out
dec
xor
sbb
faddp
lret
sbb
xchg
mov
mov
mov
mov
adc
fisttpll
lods
jo
and
adc
mov
mov
test
jle
inc
icebp
mov
mov
ficompl
add
add
sbb
pop
xchg
mov
fcom
inc
add
int3
add
add
pop
sbb
fnsetpm(287
lock
outsl
out
lcall
ljmp
push
mov
js
inc
inc
sbb
and
call
and
or
imul
aaa
add
sub
push
dec
xchg
and
push
mov
fdivl
push
xor
dec
call
fisubs
test
mov
sbb
lcall
jae
idiv
fcomps
mov
sbb
scas
jae
lret
pop
push
in
and
pusha
sbb
push
add
leave
adc
outsb
xor
mov
add
pop
inc
xor
adc
mov
ds
sbb
xchg
or
mov
hlt
sbb
mov
xor
or
pop
subb
pop
aas
jbe
add
inc
mov
inc
nop
xchg
jg
test
daa
and
add
mov
xlat
in
mov
stos
cmp
jge
xor
sub
ljmp
loop
mulb
leave
arpl
pop
or
sbb
adc
cmp
xorb
cmp
popl
lea
mov
mov
jl
ljmp
ret
cmc
ds
xor
mov
jae
cmp
or
sarb
jecxz
cmp
xlat
das
push
lock
ss
mov
aad
push
sbb
cmp
mov
and
sti
push
add
into
ljmp
mov
push
stos
rcll
pop
add
sbb
pop
mov
rcrb
sarl
adc
cmp
pop
loop
push
dec
inc
pop
inc
mov
adc
add
jmp
pop
repnz
int
movsb
mov
punpckldq
dec
lret
std
dec
xor
shl
sbb
loop
sbb
flds
mov
ss
lret
lcall
out
imul
shrb
push
popf
pop
ljmp
push
shll
cmp
pop
or
jb
popf
mov
loop
into
js
xor
cli
push
mov
mov
cmpsb
fisubl
mov
sti
dec
xchg
ret
pop
mov
cmpsl
aas
xor
and
pushf
mov
push
in
mov
xchg
jbe
aas
inc
dec
push
imul
out
iret
jo
xchg
and
out
andl
cmp
idiv
push
and
mov
mov
mov
xor
out
add
or
push
xchg
push
add
mov
jp
push
mov
inc
add
int3
add
add
in
push
inc
add
push
ffreep
and
mov
cmpsb
sarb
and
ja
lcall
jmp
xor
mov
test
sub
jne
xor
fs
clc
jle
mov
adc
ss
or
andl
adc
xor
sbb
ret
lret
xchg
adc
jl
add
imul
lds
mov
in
mov
movsb
nop
nop
mov
andb
jl
or
outsb
mov
shr
push
ret
inc
xchg
dec
popf
cld
jo
fmull
lods
lods
insl
mov
sub
fwait
pop
test
pop
cs
mov
xchg
inc
roll
mov
fs
enter
in
in
aam
dec
cmp
inc
mov
jg
pop
push
dec
mov
aam
ljmp
jg
jmp
pop
mov
divl
inc
jp
mov
addb
ret
setnp
sub
fmuls
lahf
cld
fdivrs
push
xor
jle
addr16
xlat
add
sbb
outsl
fmuls
sub
sbb
mov
inc
pop
cmp
fwait
les
loope
push
in
lea
scas
pop
and
sub
xor
sahf
sbb
in
mov
sbb
lods
adc
out
xor
and
mov
int3
aam
rorb
cmp
ss
mov
jae
cmpsb
call
arpl
mov
sbb
adc
add
std
sub
lcall
mov
in
daa
fnstcw
adcb
and
sub
bound
addr16
ror
or
mov
imul
clc
push
push
pop
out
cmp
fstl
push
or
jne
mov
jg
andb
stc
fmuls
inc
jp
fwait
dec
hlt
dec
xor
addr16
aaa
sti
jae
dec
sbb
xor
lock
push
daa
inc
and
pop
addr16
fstl
add
imul
scas
sti
daa
jb
adc
jp
in
push
jmp
hlt
lret
call
jne
fcom
clc
in
inc
push
push
subb
xlat
test
test
lock
pop
push
xchg
fisttpl
int
sbb
mov
lret
adc
push
adc
xlat
aas
out
jne
enter
iret
jge
sub
push
scas
xchg
xor
sahf
test
arpl
pop
dec
add
xor
shlb
mov
mov
inc
fidivrl
lahf
arpl
fldl
out
test
xchg
push
adc
sbb
ljmp
xchg
mov
jg
aas
pop
das
adc
in
out
add
add
hlt
mov
std
jl
dec
pop
cmp
out
adc
add
int3
add
add
pop
push
shll
pop
cmp
mov
sub
mov
lea
cmp
add
iret
lea
or
jb
sub
cmpsb
mov
jbe
xor
outsl
pop
dec
push
ljmp
and
add
outsl
outsl
dec
push
cmp
jecxz
dec
inc
loop
fucom
sbb
loope
dec
insb
cld
ds
orb
lock
nop
aas
or
mov
pushf
and
loope
inc
lret
je
jo
pop
daa
pop
dec
add
pusha
jp
lahf
mov
mov
xor
ficomps
pop
dec
adc
or
fdivs
js
fistps
adc
inc
lods
or
movsb
xchg
xchg
int
and
std
mov
aaa
pop
or
jmp
enter
sbb
cltd
loopne
stos
fisubl
and
adc
leave
test
sub
cmp
mov
pop
and
in
ljmp
dec
pop
inc
xchg
sbbb
dec
inc
and
aaa
out
enter
xchg
inc
or
mov
push
scas
mov
pop
jg
mov
mov
out
ds
push
mov
inc
or
dec
mov
lods
xchg
jg
inc
and
fwait
daa
pop
mull
fistpl
insb
dec
lea
push
test
lods
mov
aad
fcoms
ss
icebp
mull
mov
dec
cmpsl
pop
insl
cwtl
or
mov
nop
lret
xor
adc
mov
jne
leave
dec
fistps
pop
jns
out
and
adcl
enter
mov
fbstp
and
fidivrs
rorb
cmp
xchg
clc
cld
aaa
fidivrl
sahf
dec
dec
in
es
js
sub
ss
repnz
jne
push
or
outsb
insl
add
sub
xor
popf
shl
inc
sub
push
arpl
les
mov
daa
repnz
sti
sub
aam
and
je
lods
ljmp
scas
jl
std
or
adc
push
ret
add
lods
orb
cmpsl
xor
mov
pop
pop
xchg
inc
adc
push
fisubrl
mov
xor
int
sti
push
cltd
aad
cmp
shll
xor
xchg
inc
test
mov
and
out
jmp
dec
mov
adc
hlt
mov
lods
cmpsl
and
outsb
mov
mov
add
or
shrw
daa
xor
jb
aas
lods
or
fadds
jle
aaa
adc
add
imul
fdivrl
xchg
push
mov
int3
add
add
lret
adc
inc
push
cmpsb
cwtl
scas
in
inc
mov
mov
mov
loope,pn
sbb
and
imulb
ss
sub
jnp
mov
pusha
mov
xor
adc
ret
push
pop
icebp
fwait
enter
mov
sub
sbb
ret
jg
jg
dec
shrl
or
dec
sub
in
jge
jg
je
pop
loope
rol
cs
sbb
mov
xor
incb
out
and
sbb
ja
mov
add
or
dec
add
sub
xor
xor
mov
xor
dec
sub
inc
push
inc
ds
cmpsb
pop
cmc
arpl
inc
cmp
in
bound
push
mov
jnp
pop
nop
or
push
add
push
cmpsb
enter
jge,pn
mov
mov
jae
inc
dec
pop
test
stos
add
cli
xlat
jecxz
xor
daa
stos
dec
push
mov
gs
nop
mov
jecxz
test
push
call
adc
push
cmp
inc
cltd
add
push
pop
lock
outsl
mov
dec
adc
gs
fcompl
dec
adc
mov
push
cwtl
pop
stos
dec
sbb
adc
fdivr
push
dec
sbb
roll
stc
mov
out
test
and
stos
sahf
and
xchg
movsl
add
dec
sub
xor
inc
push
fwait
aaa
mov
adc
and
outsl
out
sub
push
loopne
icebp
or
sub
mov
jae
pop
sub
add
stc
scas
adc
repnz
mov
mov
mov
push
pop
sub
cwtl
mov
sbb
xchg
mov
ja
dec
insb
xchg
shlb
nop
popl
and
repnz
sbb
test
dec
outsb
push
sub
inc
int3
mov
add
popf
jno
xchg
popa
mov
cmpsb
adc
and
jb
lret
ja
jl
sbb
add
push
push
add
jno
das
xchg
pop
incb
jle
daa
std
adc
pop
jmp
sbb
xchg
mov
push
jl
movsl
push
and
mov
dec
outsw
and
lock
xor
mov
xchg
gs
fnstenv
mov
adcb
imul
push
aas
inc
push
mov
xchg
xor
push
or
mov
outsb
pop
in
mov
xchg
pop
adc
test
int
inc
push
lea
in
push
inc
out
cmpsl
sbb
jg
pop
aad
mov
push
add
int3
add
add
pop
call
div
mov
bound
scas
ds
adc
iret
jnp
adc
xorb
pushf
inc
int3
sbb
das
and
or
inc
mov
push
sbb
sarb
outsl
cmp
push
sti
sbb
push
xchg
fildll
xchg
sti
and
pop
je
not
aad
negb
popf
cli
lea
mov
lcall
nop
lods
out
lret
test
loop
push
iret
lret
mov
out
jp
adc
push
stos
repnz
pop
pushf
das
sbb
repnz
outsl
or
push
cwtl
fs
sbb
dec
sub
sub
mov
bound
dec
push
xchg
mov
add
jns
jecxz
insl
jb
mov
dec
inc
push
xor
and
std
cwtl
pop
add
std
sbb
mov
xchg
mov
jo
push
mov
andb
cmc
sahf
dec
xchg
dec
nop
dec
jne,pt
ss
xor
pop
xor
or
push
lods
xor
mov
xchg
xor
js
fimuls
rorl
mov
dec
bound
xchg
mov
xchg
adc
lret
arpl
dec
enter
or
inc
push
push
or
jo
mov
add
push
arpl
out
fwait
mov
push
rcrb
xor
sbb
dec
cwtl
fs
and
aad
cs
xchg
in
xorb
lret
jge
push
pop
in
sub
js
test
push
push
loope
mov
ret
jmp
cmp
add
pop
xorl
setge
sub
pop
in
xchg
cmp
pop
aad
nop
les
repnz
je
cmp
and
shll
cmp
xor
aas
adc
test
ljmp
lret
mov
je
movsb
pop
sub
bound
mov
repz
lock
fcmovb
add
sbb
cs
xchg
sbb
shr
mov
xlat
dec
mov
push
cmp
pop
sub
out
fldenv
push
mulb
orl
lret
sub
xor
lret
mov
push
sbb
aaa
stos
pushf
add
push
scas
in
in
or
loopne
fwait
inc
or
rcr
test
ret
adc
xor
out
xchg
push
xlat
xor
pop
pop
in
xchg
xchg
jo
xchg
adc
jl
xchg
ss
ret
lret
jns
pop
pusha
xor
sub
movsb
push
out
cmc
and
adc
sbb
add
add
cmc
fistpll
stc
cmpsl
mov
movsb
sbbl
rclb
add
add
add
inc
mov
push
pop
ja
adc
pop
jg
out
mov
or
stc
fs
fidivrs
mov
sub
fisubl
in
inc
aam
bnd
adc
adc
in
add
inc
push
jns
fimull
insb
jnp
fisubs
idivb
out
and
mov
pop
push
fcomps
mov
cmp
mov
xchg
sub
adc
add
and
mov
xchg
cmc
in
jb
mov
mov
add
add
xchg
movsl
xor
sbb
ss
fsubrl
js
hlt
mov
mov
inc
stos
inc
test
cmp
imul
xchg
push
mov
inc
jmp
xchg
hlt
add
and
xchg
push
dec
xor
mov
jae
lods
sti
out
enter
daa
sbb
icebp
xchg
push
popf
daa
xor
mov
and
mov
mov
enter
cli
add
cmp
ljmp
inc
xchg
lods
xor
xchg
inc
pop
fdivr
insl
push
loope
inc
push
mov
scas
inc
push
call
imul
scas
shrb
insl
lods
popf
dec
arpl
and
clc
pop
xor
lret
sub
fisttps
inc
cmp
loop
sub
pop
xchg
jp
popa
ret
push
enter
aas
add
push
insl
mov
ja
test
in
out
dec
jle
in
push
sbb
inc
add
test
fdivl
fnsave
cmp
inc
fsts
sbb
pop
test
dec
pop
dec
jno
jge
mov
scas
sub
test
adc
push
or
xchg
pop
in
cs
xchg
lcall
dec
push
inc
xor
mov
cmp
rol
cli
adc
mov
sbb
pusha
loop
popf
mov
pusha
fdivrs
mov
mov
testl
push
mov
pop
add
subl
push
xor
mov
and
cs
mov
daa
sub
dec
lods
push
sbb
mov
imul
jge
movsb
push
mov
mov
das
mov
jp
mov
insw
repnz
mov
fisubs
shr
push
cmp
inc
jge
shrl
mov
xchg
test
cmpsl
pop
mov
sbb
and
mov
movsl
adc
movsl
push
xchg
les
and
mov
es
dec
add
or
and
inc
mov
sti
and
sub
int
ffree
test
mov
test
sbb
hlt
sub
push
sbb
push
mov
lea
daa
sbb
and
movsb
lea
lods
and
push
push
add
int3
add
add
jl
in
push
xchg
clc
in
mov
cld
ror
call
inc
mov
dec
jo
pop
fdivrs
cmp
sbb
sahf
jmp
sbb
jge
fisubrs
adc
rcrb
in
mov
xor
lahf
and
and
xor
mov
outsb
xchg
pop
fmull
cmp
cmp
jl
mov
pop
adc
pop
mov
pop
pop
mov
jns
inc
mov
push
cmpsb
lcall
enter
les
push
ss
add
inc
clc
add
sub
sub
mov
cltd
push
mov
pop
xor
cmp
add
jl
pop
js
insl
pop
aad
jle
fsubrl
sub
imul
lret
xchg
mov
xor
lods
push
das
mov
cmp
add
inc
mov
lahf
mov
in
xor
mov
adc
cmpl
test
mov
out
int3
mov
push
mov
inc
out
xchg
jb
imul
mov
xlat
sub
in
hlt
dec
cli
mov
in
dec
jge
inc
stos
nop
xor
inc
stos
ret
stos
icebp
jl
lods
pop
clc
lret
dec
dec
add
shll
lea
fwait
out
scas
pop
in
mov
mov
incb
mov
inc
inc
inc
repz
inc
sub
adc
mov
sbb
jns
inc
push
xor
ret
repz
push
hlt
xor
xchg
cmpsb
jo
mov
cmp
mov
arpl
inc
insl
data16
in
mov
mov
das
sarb
jmp
sbb
sub
dec
cli
inc
xlat
mov
or
xchg
xchg
mov
pop
lock
rcr
jecxz
or
add
iret
pop
and
sti
add
in
dec
sti
pop
sti
jmp
pop
sub
pop
push
ljmp
pop
shrb
sub
add
mov
sarb
sahf
add
mov
and
int3
inc
cltd
push
push
push
or
test
jecxz
fidivs
mov
mov
sbb
fildll
mov
sub
aaa
sbb
adc
movsb
into
cwtl
push
arpl
xchg
jnp
cli
adc
mov
push
xor
ss
sbb
cltd
xchg
mov
jle
ror
cmpb
mov
mov
roll
inc
sub
jb
mov
cwtl
mov
xchg
mov
dec
cld
clc
aad
mov
mov
cmp
test
stc
fldcw
add
int3
add
add
jmp
dec
data16
and
and
fwait
adc
inc
outsb
orl
sbb
cmp
mov
mov
scas
fcmovne
orl
ret
push
les
lods
and
sbb
add
add
sub
jo
shll
dec
cmp
subb
and
js
jp
sbb
adc
inc
add
dec
mov
sbb
mov
push
shlb
and
scas
ja
cmp
mov
sub
mov
loop
lret
popw
cli
sub
movsl
cmc
mull
mov
or
sbb
jl
inc
cmovle
sub
dec
jl
rcr
cmc
sub
push
imul
add
daa
or
outsl
cmp
jmp
fdivrp
push
mov
enter
fwait
cmp
mov
fsubs
rorl
ret
pop
push
lret
aaa
test
movb
or
test
cli
cmp
or
mov
push
stos
addr16
mov
popa
pop
add
cltd
repz
mov
dec
jbe
in
adc
dec
cld
sub
push
add
iret
imul
lret
push
mov
mov
mov
ja
hlt
or
es
out
mov
adc
sub
sahf
das
or
sbb
fwait
dec
inc
push
sahf
les
pop
or
jno,pn
or
addl
arpl
xchg
pop
xor
hlt
push
gs
xor
mov
stc
mov
lods
out
and
aam
hlt
inc
faddl
movsb
lahf
lcall
xor
lock
mov
mov
out
mov
cmp
into
xor
inc
xchg
mov
adc
js
mov
movsb
mov
pop
cmc
test
mov
addl
xor
imul
push
pop
outsl
lods
cwtl
movsl
jne
dec
fwait
add
xor
outsl
add
lods
enter
xchg
xchg
cmpsb
push
sbb
jecxz
sti
lret
scas
pop
jo
jle
dec
ret
daa
xchg
aas
adc
lods
mov
dec
stos
sub
dec
je
push
jae
adc
push
mov
fwait
and
xchg
dec
pop
cs
jmp
in
imul
xchg
cmpsl
test
insb
and
and
sub
cmpsb
imul
mov
push
les
fmuls
and
cmpsl
cli
je
jg
xlat
iret
mov
dec
cmp
pop
inc
mov
scas
mov
add
xchg
std
jg
in
pop
aam
jno
ss
add
int3
add
add
cmpsb
in
clc
and
cmpsb
pop
std
cmpl
fmull
lret
sbb
leave
cld
mov
stos
lahf
mov
inc
andb
ret
pop
sbb
std
xor
jge
mov
pusha
fs
xchg
dec
leave
sbb
xor
imul
mov
mov
sub
jge
sbb
sub
dec
repz
fbld
adc
mov
pop
pop
push
cmp
pop
insl
call
xor
addb
int
pop
jnp
popa
pusha
adc
cs
shll
push
sbb
push
add
pop
xchg
ss
jns
cmp
pusha
mov
je
les
adc
cli
std
sub
stos
popa
sbb
ja
mov
inc
les
mov
pop
pop
cmp
in
ret
movsb
mov
shlb
nop
or
lock
loope
dec
shlb
lret
push
imul
imul
pop
push
pusha
arpl
xor
cmpsb
int3
stc
mov
rolb
adc
push
sahf
mov
scas
pop
push
cld
dec
fwait
imul
orb
or
push
outsb
fnstenv
rcrl
jmp
adc
out
stos
cmpsl
sarl
pop
push
jmp
shlb
sbb
in
jl
jmp
push
fimull
movsl
pusha
mov
adc
les
or
cmpsb
clc
cld
jmp
in
sub
outsb
aaa
daa
ret
pop
in
xor
mov
sbb
lea
mov
or
mov
sahf
cwtl
mov
mov
leave
ja
test
xlat
xorb
lret
movl
inc
mov
aad
sub
jg
clc
cmp
mov
sub
sub
jmp
sbb
xor
pop
fcompl
mov
xchg
push
push
das
fdivrs
push
push
shll
adc
push
stc
pop
out
inc
in
mov
sub
cmpsl
dec
mov
sub
mov
jns
inc
cmp
adc
mov
movsl
lret
inc
loop
push
dec
inc
mov
movsb
xchg
icebp
fs
mov
lret
in
lcall
mov
fnstenv
dec
push
out
movsb
ds
nop
daa
lret
adc
mov
sbb
add
in
push
cmpsl
mov
rolb
ss
adc
mov
mov
pop
fwait
push
ja
mov
lods
hlt
mov
cmc
scas
sbb
add
idiv
iret
std
mov
in
pop
add
int3
add
add
shrw
push
mov
ljmp
scas
adc
jnp
les
mov
ss
inc
movsb
add
inc
sbb
add
addr16
push
jge
push
lock
incl
push
pop
mov
mov
add
test
fmull
mov
push
adc
clc
fs
and
arpl
stos
rclb
and
mov
mov
ja
and
shl
lods
cmp
pop
lock
mov
mov
or
pusha
lcall
adc
ret
mov
out
lret
arpl
cltd
mov
push
mov
xchg
mov
sub
sbb
dec
pop
dec
pop
adc
mov
xchg
xchg
add
call
push
andb
mov
mov
push
jo
mov
inc
in
xchg
mov
inc
mov
and
mov
enter
in
adc
jne
push
push
std
dec
sbb
rcl
stos
out
cmpsl
mov
push
jo
je
cmp
mov
pop
push
mov
loope
imul
movsb
push
adc
push
shrb
lods
cmc
andl
push
push
scas
jnp
sbb
mov
rorb
out
out
nop
and
jmp
loopne
jg
or
ficoml
repnz
mov
loope
adc
jl
inc
or
xchg
jo
jmp
imul
rcrl
mov
fucom
add
in
dec
test
add
pop
sub
scas
aam
xchg
dec
xchg
adcl
sub
mov
sbb
xchg
mov
jmp
or
xchg
sbb
leave
enter
pop
mov
sbb
push
lods
fucomi
xchg
gs
lea
push
cmpl
and
fistpll
cmpsl
imul
cmc
sti
fstl
fcmovbe
pop
shl
aad
mov
xchg
rorl
mov
or
or
repnz
out
pop
ret
xor
sub
add
test
pushf
imul
dec
data16
fdivrl
movsl
sbb
dec
mov
and
mov
and
andb
inc
movsl
pop
jl
jne
inc
and
pop
cmp
sub
popa
inc
adc
mov
int3
jmp
cld
fimull
je
dec
cld
jp
lretw
dec
filds
out
ret
mov
out
mov
addr16
pusha
add
int3
add
add
inc
mov
rclb
adc
xor
bound
andl
fsub
aad
sub
in
aam
scas
popa
mov
aam
pop
cmpsb
jbe
push
cmp
pushf
mov
xor
movsl
out
gs
mov
shr
cs
jl
sbb
shll
enter
lahf
arpl
xchg
xchg
roll
ret
sti
dec
jne
loope
or
fwait
daa
pop
inc
clc
lret
xchg
test
jno
push
mov
xorb
inc
int3
fnstcw
movsl
dec
aad
sarb
mov
aaa
push
daa
repz
mov
les
mov
sbb
jae
loop
loop
sbb
std
xchg
icebp
mov
cld
bswap
or
pusha
cmp
mov
hlt
mov
add
jo
nop
jo
cmp
outsb
sbb
std
pop
or
inc
xchg
adc
push
ud0
filds
jl
fnstcw
push
in
cli
xchg
or
mov
mov
es
sbb
push
rorl
and
mov
inc
jp
push
inc
jns
mov
xchg
aam
and
jmp
mov
sub
sub
les
cmpsl
jecxz
leave
pushf
popa
mov
pop
mov
ret
jbe
sub
xchg
xor
and
imul
dec
mov
js
jno
mov
mov
xchg
mov
mov
xor
sub
lods
shll
add
ret
ja
es
or
pop
jp
pusha
inc
scas
mov
mov
sub
sub
push
les
and
inc
repz
pop
sbb
xor
sti
sub
inc
xor
popa
stos
imul
insb
inc
push
and
fsts
pusha
rcpps
js
inc
fyl2x
adc
mov
in
arpl
std
leave
fisttpl
mov
inc
dec
scas
in
add
jno
lods
sbb
gs
pusha
aaa
pop
pop
icebp
cs
test
push
inc
pop
sub
xor
or
outsb
fscale
aaa
imul
or
inc
sbb
out
add
pusha
test
bnd
mov
cmp
push
mov
mov
xor
testl
sub
inc
dec
dec
mov
pop
xor
jg
mov
ja
stos
sub
pop
loopne
jbe
push
mov
fwait
mov
push
xor
mov
xor
inc
inc
dec
sahf
call
out
sahf
je
iret
push
stos
jge
enter
mov
mov
push
push
jle
xlat
outsl
mov
lcall
add
int3
add
add
adc
add
int3
je
and
and
mov
das
inc
mov
push
dec
ss
out
push
ret
add
cmpsb
jb
sub
addr16
int
xchg
cmp
mov
pushf
and
lret
daa
or
cmp
fxtract
mov
cld
inc
inc
sti
cli
lret
cmp
aam
sub
jmp
push
loope
sub
in
lea
aaa
adc
repnz
ds
sti
stos
sbb
iret
mov
mov
mov
add
aam
movsl
aaa
dec
cld
push
mov
imul
psubb
jle
sahf
pop
cli
rcrb
pop
dec
dec
shr
dec
sti
fwait
shlb
pop
repnz
not
or
fsubrs
iret
cmc
adc
sbb
lcall
sti
test
or
and
push
jno
pop
int3
inc
cld
mov
mov
ss
aaa
jnp
and
aaa
ret
adc
jns
add
flds
sub
xorb
mov
or
add
cmpsb
cwtl
jnp
lods
jbe
push
mov
push
loope
or
and
sub
jns
adc
mov
xchg
push
add
shrb
mov
inc
fcomi
aas
push
jns
daa
inc
daa
movsb
inc
or
mov
mov
fistpll
imul
mov
outsb
xor
orl
jbe
cld
and
inc
jmp
push
push
popa
dec
and
test
fs
ficoms
inc
cmpsl
jae
imul
fbstp
xor
push
mov
shrb
inc
loope
setl
mov
push
loope
mov
in
pop
les
rolb
push
vcvttss2si
daa
mov
stos
pop
sbb
dec
dec
mov
aad
cmp
ljmp
cmp
push
push
loopne
and
xor
mov
ret
sbb
sub
push
and
adc
in
sub
in
xor
shrl
repz
cmp
xlat
or
sahf
outsl
and
addr16
imul
pop
outsl
xchg
or
xchg
call
rorb
into
shlb
dec
push
fldt
aaa
sti
sub
enter
js
jmp
xor
fadds
popf
popf
inc
pop
bound
pop
ret
jle
or
lcall
jg
or
repz
or
push
pop
sbb
ficompl
mov
cmp
sbb
popf
fsubl
xrelease
xchg
sbb
lret
lods
inc
xchg
cmp
xchg
mov
daa
mov
out
adc
xor
add
add
push
or
pop
out
repz
movsb
inc
aas
data16
int3
add
add
fs
clc
repz
inc
ljmp
ret
dec
pshufw
js
shrl
fnstcw
mov
out
xor
pop
sahf
xchg
inc
sbb
lock
jb
xor
aas
mov
imul
cwtl
jmp
call
fcoml
out
sbb
clc
ja
insb
mov
ficoml
iret
movsbl
sub
pop
lret
pop
inc
je
inc
in
and
js
ja
xchg
xchg
in
loop
add
outsl
pushf
mov
lods
add
sahf
cmpsl
in
jl
push
xor
cs
aaa
dec
lods
shr
push
jmp
mov
xchg
jmp
mov
gs
push
mov
push
jecxz
pop
mov
out
cmp
jg
test
xchg
icebp
subb
inc
arpl
jle
cltd
pop
xchg
xchg
inc
lds
push
mov
mov
in
mov
das
repz
jecxz
mov
add
ljmp
and
cmp
cmp
adc
jmp
pop
mov
andl
sbb
mov
jge
sbb
dec
add
es
mov
fiaddl
sbb
in
xchg
push
fadds
xchg
mov
adc
movsl
jl
adc
cmc
pop
xchg
aaa
int
mov
test
mov
sbb
xor
cmp
mov
je
stos
in
data16
cmp
jg
out
arpl
push
shll
rclb
cmpsl
xchg
xlat
xchg
xchg
lods
mov
sti
mov
push
outsb
lods
push
push
aad
mov
fimuls
fs
mov
xor
mov
sbb
pushf
xor
mov
loop
add
push
xor
imul
ret
subl
sub
and
sub
mov
in
ss
imull
pop
sub
and
sub
push
ss
cmpsb
das
add
sti
dec
divl
mov
cltd
into
sbb
push
push
aam
xchg
mov
popa
shlb
and
add
lret
xor
inc
sub
notb
push
jecxz
leave
pop
std
jns
cmp
cwtl
xchg
sar
cmp
add
pop
lret
or
pop
add
push
loopne
arpl
es
dec
inc
adc
push
fstps
push
ja
ror
dec
imul
mov
pop
push
mov
das
cmc
repnz
jmp
lret
xchg
movsb
fdivrs
in
leave
xchg
insl
mov
aam
inc
fmuls
nop
inc
pop
xor
add
add
add
dec
xchg
jge
stc
dec
iret
push
ss
xor
out
jmp
lds
xchg
ss
cmpsb
movsl
dec
sbb
or
loop
pop
int
fbstp
jle
test
mov
repnz
ja
jbe
rorb
jl
or
je
outsl
out
in
mov
loop
cmpsb
sbb
push
jo
sub
sahf
push
pop
stos
into
in
pop
xchg
mov
popw
adc
repnz
sbb
jbe
sub
push
mov
cmp
mov
push
aas
data16
repz
test
cli
mov
out
call
adc
or
mov
lret
cli
sarl
testl
jle
je
mov
mov
sarl
add
shll
clc
pushf
jl
mov
and
or
arpl
xlat
sbb
test
std
call
mov
xchg
inc
insb
lods
rcr
inc
pop
or
cmp
mov
mov
bound
sbb
xor
nopl
sti
data16
dec
out
inc
mov
loop
stos
dec
jbe
pop
outsb
call
pop
xchg
push
and
xor
sarb
in
jge
xchg
leave
pop
xor
test
add
call
loop
dec
repz
jmp
dec
lahf
lcall
or
mov
leave
in
add
or
jl
mov
ret
iret
xchg
push
sahf
add
rorl
dec
stos
add
cltd
into
shl
mov
imul
popf
fisttpl
fs
sub
mov
inc
enter
fs
jb
xchg
push
mov
arpl
mov
xchg
cltd
cs
adc
sbb
push
ljmp
loopne
sbb
jp
push
mov
or
dec
loopne
jle
xchg
xchg
push
xor
xor
xor
mov
fsubrs
or
dec
dec
ljmp
int3
mov
lods
lret
aaa
subl
and
xor
add
cmpsl
ret
sub
or
cmp
fwait
enter
mov
dec
out
xor
pusha
pop
jae
jo
ja
rorl
leave
std
iret
andl
add
push
pusha
das
and
inc
sub
jecxz
sub
imul
sub
pusha
cmp
aaa
lds
jecxz
rcrb
imul
lahf
daa
xchg
inc
adc
ds
xor
inc
mov
clc
stc
xor
sbb
add
add
ja
idiv
pop
out
dec
mulb
stos
ret
imul
int3
add
add
pop
insl
cmc
sub
mov
cli
cmpsl
mov
xchg
mov
jbe
into
lds
adc
or
sbb
addr16
clc
shrl
sti
pop
or
pop
mov
arpl
sahf
xchg
sarb
mov
add
andb
pushf
mov
dec
sbb
jne
out
mov
rcrb
cmc
dec
sbb
add
xchg
jne
loopne
rorb
aaa
jle
xor
sub
pop
or
shrl
xchg
jns
adc
insb
inc
fnsave
mov
sbb
stos
test
pop
outsb
mov
aad
cmp
xor
cmpsl
out
mov
lods
shlb
mov
dec
sbb
jp
xchg
xchg
out
std
bound
in
in
std
cmpsl
rorl
cltd
mov
inc
sub
mov
fsts
jno
pop
cmpsb
pop
pushl
push
xchg
jo
arpl
pop
mov
xor
stos
pop
pop
add
bound
lcall
or
mov
jmp
lea
jo
aam
pop
les
push
test
jecxz
add
xor
cmp
cld
jp
jne
cmp
ret
push
adc
mov
das
lcall
xchg
push
cli
mov
shll
rolb
mov
sbb
fimuls
call
xor
idiv
dec
sahf
lret
adc
sub
mov
xor
test
es
mov
sbb
inc
jg
cld
gs
out
mov
pop
nop
leave
pop
jns
mov
dec
dec
arpl
std
lods
jo
jns
movsl
push
imul
stc
in
mov
pop
inc
shlb
mov
mov
pushf
pop
movsb
stc
test
mov
jmp
pop
lods
loopne
adc
ficoml
adc
push
testl
add
or
and
push
inc
mov
mov
cmp
dec
notl
add
fiaddl
mov
out
imul
repnz
stos
imul
jecxz
sub
lea
push
mov
cmpsl
movsb
pop
dec
mov
and
popf
sbb
xchg
scas
adc
cmp
into
fcompl
sub
lds
jecxz
sarl
test
push
adc
cmovb
insb
push
setl
jno
dec
je
jmp
mov
dec
inc
mov
add
dec
dec
or
jecxz
pop
inc
jle
bound
loop
mov
pop
jecxz
sti
mov
test
in
mov
outsb
add
int3
add
add
mov
fstpt
add
pop
xchg
sub
in
and
fld
sub
or
push
xor
xlat
rorl
mov
cmp
mov
loop
push
call
add
and
inc
sub
pop
dec
mov
sub
adc
nop
incb
mov
dec
adc
xor
mov
or
insb
dec
jae
jmp
jle
lret
mov
rorb
les
cld
es
sti
int3
pop
jmp
or
mov
stos
push
inc
cmp
std
xchg
mov
jge
je
cmpsb
pusha
dec
sub
arpl
push
cmp
jns
or
clc
in
and
xor
psrlq
ror
pop
dec
std
test
leave
je
out
fwait
jmp
mov
mov
inc
aam
cltd
out
ret
fadds
push
outsb
fnsave
push
or
adc
adc
fmulp
xor
in
movsl
inc
pop
aad
ds
ss
cmp
pop
insb
and
cmp
xchg
xor
mov
std
cmp
or
sub
or
shrb
mov
inc
cmp
cwtl
lret
test
sbb
std
mov
pop
push
xchg
sub
stos
lock
jle
jne
lds
negl
cmp
pop
ljmp
cmpsl
fwait
cmp
and
pushf
jg
int
pop
mov
lahf
in
inc
or
das
loope
adc
lret
mov
jg
pushf
dec
arpl
sub
add
push
mov
mov
pop
cs
pop
mov
sub
out
filds
sub
adc
mov
sbb
push
repnz
popf
das
adc
mov
cs
xchg
out
popf
imul
inc
imul
push
out
shll
xchg
pop
jno
fimull
jge
jp
lret
enter
insb
pop
mov
repnz
add
sbb
sbb
push
mov
xchg
xchg
cmc
add
addl
imul
and
sub
and
inc
repz
sbb
cmc
out
lahf
sbb
jbe
mov
push
rcrl
inc
into
or
je
js
lds
dec
sahf
mov
pusha
inc
adc
dec
xchg
movb
pop
out
test
push
cmp
cmpsl
sbb
mov
ljmp
clc
int
or
inc
sub
adc
lcall
stc
fwait
or
lret
mov
loopne
movsl
iret
imul
xor
sahf
xor
mov
xchg
jno
add
add
add
sbb
js
data16
sti
push
std
lcall
mov
push
or
in
and
xor
fs
cmpsb
jo
xchg
xchg
pop
push
cmp
sub
sbb
out
inc
sub
cmp
leave
arpl
xor
push
dec
xchg
femms
sarl
test
pushf
push
fistl
jns
nop
fldt
aam
push
cmpsl
mov
insb
ret
loope
popa
mov
sahf
dec
jg
mov
inc
pushf
xor
les
ficomps
mov
clc
sbb
mov
sub
and
push
adc
lahf
data16
or
mov
out
xor
mov
add
jb
dec
mov
inc
mov
in
dec
movsb
jne
jmp
arpl
lcall
xor
imul
jno
sbb
fwait
pop
or
fldt
pusha
cmp
rcrb
in
mov
pop
cmpsl
popa
loopne
mov
jge
adc
sarl
xchg
mov
jl
mov
outsl
ret
xchg
xchg
sbb
jmp
xchg
cmp
lds
aam
cs
dec
jmp
mov
dec
mov
xor
mov
mov
xchg
lret
test
inc
jle
inc
pop
jae
and
jecxz
daa
cmpsb
testl
inc
or
fldt
or
daa
fisubrs
int3
insb
pop
in
jb
adc
iret
icebp
xchg
jecxz
mov
cmp
in
push
fimuls
inc
aaa
loop
bound
negb
and
mul
mov
das
loop
xchg
pop
or
test
arpl
roll
jge
decl
std
xlat
jne
ret
push
lret
adc
mov
leave
inc
int
mov
mov
add
repz
faddl
add
cmp
jl
fstpt
mov
jns
mov
pop
imul
mov
inc
movsb
and
inc
shll
out
push
leave
add
sti
lods
mov
sbb
loope
push
lcall
jo
mov
sub
cwtl
sbb
stc
pop
and
xor
mov
lret
fsub
movsb
mov
in
sub
js
aam
sub
ss
inc
dec
adc
push
loop
cmp
and
and
mov
iret
orb
and
out
and
int
inc
push
cmp
lock
fisubs
pop
sub
add
in
leave
sbb
enter
scas
in
test
add
clc
xor
inc
outsb
stc
std
in
mov
mov
std
pop
xor
fsubr
dec
push
bound
int3
add
add
rol
mov
xchg
pop
aam
rolb
repz
das
dec
fstps
sub
clc
aaa
iret
imul
imul
jae
lcall
xor
ror
mov
ret
adc
xor
es
adc
mov
js
sbb
mulb
push
aam
sbb
cwtl
mov
into
es
ljmp
push
jne
ss
adc
ja
adc
jne
jo
xchg
mov
bound
lea
fsub
xchg
xor
add
add
xlat
pop
cmp
insl
push
enter
imul
jns
mov
push
and
xchg
add
dec
aas
adc
pop
xorl
pusha
fnsave
xchg
cmp
push
sub
cmp
cmp
lods
fdivp
pop
adc
xchg
xchg
lret
ja
push
gs
or
dec
bound
or
fisubl
or
jl
sub
pop
mov
push
add
mov
inc
loopne
call
testb
insb
pusha
lret
movzwl
leave
mov
clc
lods
inc
add
idivl
inc
mov
sub
dec
out
nop
mov
pushl
add
xchg
pop
jns
jg
aas
jb
add
and
jl
jns
fstp
in
xor
insb
dec
add
dec
jge
mov
ret
rcll
push
push
pop
shll
or
xor
cmp
add
xor
mov
in
lods
xchg
adc
rcrb
pop
popl
and
dec
mov
imul
scas
inc
add
push
lcall
and
mov
repnz
jns
data16
xor
jo
divl
dec
daa
int
adc
scas
and
les
xor
ds
lcall
sub
imul
jl
jo,pt
push
jb
mov
fimull
add
sti
xor
and
dec
fcoml
push
lcall
xchg
or
push
pop
xchg
dec
pop
out
sub
mov
test
test
xchg
adc
mov
out
inc
test
sti
test
aaa
clc
push
jbe
or
in
stc
and
aaa
pop
loopne
lcall
shll
out
pop
push
es
cmpsb
and
mov
mov
adc
mov
inc
pop
fisttpl
andb
out
and
inc
test
fcoms
icebp
jns
and
xchg
sbb
add
add
rolb
out
sub
shrd
pop
aad
ja
add
add
add
or
sbb
fisubrl
inc
idivb
push
xchg
inc
loope
mov
lock
mov
jp
pop
sub
jecxz
inc
and
mov
fisubl
push
dec
in
cmpsb
lea
push
scas
dec
cmp
push
arpl
sub
insl
into
push
jmp
lea
mov
es
adc
fcomip
test
mov
test
add
or
add
adc
ja,pn
leave
popf
test
test
sub
imul
lea
sbb
sub
cmpsl
cmp
adc
dec
ror
sbb
loop
xor
arpl
cli
mov
stos
int
or
xchg
push
movsb
and
push
or
fisttpll
insl
jo
test
push
clc
movsl
jno
add
or
les
push
cmp
subb
ss
sbb
and
push
cmp
dec
aas
adc
ret
sbb
adc
fidivs
iret
fcomi
arpl
pop
cltd
cmpsb
push
sbb
sub
sub
bound
cld
pop
sub
ja
adc
add
std
pop
fisttps
push
jecxz
outsl
mov
add
aam
mov
jp
xchg
mov
jns
add
cmc
or
lods
xor
sub
out
aaa
imul
les
dec
dec
je
out
push
imul
adc
ds
out
negl
insl
loop
push
or
cmp
insb
adc
arpl
mov
nop
push
ret
pop
outsl
lret
fdivrs
push
add
dec
js
sub
pop
dec
pop
addr16
xor
shl
in
leave
lcall
out
addb
test
mov
inc
fcoml
xchg
int
xor
pop
ljmp
xchg
rorl
gs
mov
inc
jp
jg
xchg
movsl
mov
push
inc
xchg
or
jns
lods
cli
cmc
mov
bound
inc
bswap
push
addr16
sti
push
or
cmpsl
add
inc
mov
mov
push
jns
xchg
in
push
mov
aas
popa
xchg
mov
sub
mov
fdivs
mov
ret
xchg
jnp
int
call
clc
cmp
std
icebp
into
xor
pop
xchg
sub
cmpsl
mov
jle
or
out
xor
bound
xor
rcll
cmpsb
bound
or
lods
adc
mov
popa
stc
adc
fwait
pop
lds
jbe
clc
sbbl
es
add
inc
inc
popa
data16
rcrl
xor
or
adc
jns
add
add
add
mov
sub
jecxz
bound
fs
repnz
fdivs
aaa
jge
cmc
ss
jle
adc
push
sbb
pushf
mov
inc
add
xor
repnz
lcall
jmp
outsl
jnp
xor
push
clc
scas
pop
cld
inc
sub
popa
push
int3
push
imul
inc
ss
imul
shlb
inc
or
and
leave
push
and
xchg
iret
mov
out
fldt
dec
xchg
les
sub
push
cmp
fcompl
leave
icebp
jae
out
xchg
mov
pop
adc
das
push
jae
je
push
xchg
mov
mov
and
jg
push
cmpsl
sbb
lret
movsl
fprem
imul
dec
push
cmpsl
or
cmp
push
mov
and
les
call
mov
fs
push
fiaddl
dec
repz
leave
and
rol
xor
fimuls
movsl
cmpsl
or
enter
pop
adc
arpl
jmp
xor
rcrb
push
push
sub
repz
arpl
fwait
das
loope
fstl
cmp
loope
dec
xchg
dec
jb
inc
sti
test
inc
les
aad
lods
ljmp
movsl
mov
sub
pop
std
pop
sbb
lea
dec
and
rclb
pop
jb
lock
add
jge
repz
sbb
adc
sbb
enter
call
aas
inc
fsts
shlb
mov
loope
inc
pop
fdivl
loopne
fwait
es
in
sbb
loopne
pop
and
or
test
pop
lahf
roll
fidivl
shlb
inc
insl
adc
popf
mov
pushf
movsb
push
fcmovb
daa
push
mov
outsb
and
out
sahf
hlt
jno
repnz
sbb
mov
pop
xor
mov
cmpsb
das
lods
ss
fsubrs
adc
inc
lcall
loop
or
or
std
cmpsl
or
shll
add
scas
xor
pop
sbb
add
push
mov
push
lcall
in
fcmovu
hlt
pushf
push
xorb
mov
push
pushl
mov
hlt
push
aaa
cmp
jae
ja
mov
add
call
js
mov
sub
adc
xchg
rcrb
popf
push
dec
imul
add
add
add
mov
rcrl
repz
cli
in
jg
loopne
clc
xchg
xchg
jl
add
add
add
addr16
xchg
sbb
xor
loopne
mov
sbb
push
lds
je
mov
enter
adc
xor
add
or
popa
imul
cltd
loop
sti
adc
adc
and
or
cmp
aas
fdivrl
push
xchg
pop
xchg
inc
adc
addb
adc
inc
push
jecxz
mov
xchg
or
js
sub
std
pop
lcall
shrd
xchg
mov
lock
shll
jp
test
add
inc
ret
in
pop
aaa
sub
imul
loopne
mov
adc
adc
pop
cmp
mov
popf
daa
rcrl
int
mov
scas
mov
shll
in
xchg
cmp
divb
inc
out
imul
nop
icebp
adcl
test
pop
sbb
movsl
inc
jbe
je
sbb
or
add
sbb
sub
xchg
das
mov
je
jae
add
leave
cli
arpl
dec
and
das
scas
jg
mov
mov
jecxz
sbb
inc
mov
cmc
ja
testl
pop
xor
xor
xchg
push
mov
in
push
int3
mov
add
jp
add
pop
lahf
rcl
ja
stos
loope
js
test
and
push
cmp
dec
push
outsb
mov
adc
jp
test
pushf
imul
mov
and
add
dec
mov
xor
dec
add
or
xchg
add
push
icebp
sahf
jo
lods
inc
js
divl
cmc
mov
aaa
inc
loop
sbb
loopne
out
xchg
lock
das
and
insb
dec
rorl
jg
push
sub
data16
pop
push
or
insb
add
pop
data16
and
psrlw
push
xor
jbe
or
cmpl
and
into
push
mov
cmp
mov
or
mov
inc
out
out
scas
dec
xchg
sbb
movsb
inc
lret
adcl
loop
je
pop
jae
cmp
and
addb
pop
sti
dec
mov
and
dec
and
mov
subb
aad
adc
push
dec
push
lock
mulb
and
add
mov
cwtl
lods
ror
divb
add
inc
test
ja
or
jae
dec
mov
push
adc
cmc
dec
dec
flds
arpl
lds
fmull
dec
les
outsb
mov
sahf
cmp
mov
shlb
xchg
lcall
cmpsb
and
add
jg
add
add
add
test
sub
mov
xchg
push
scas
mov
cmp
inc
add
push
adc
inc
jmp
mov
test
xorl
push
adcb
lods
decb
jne
rsqrtps
scas
rcrl
and
dec
jnp
dec
outsl
or
mov
or
push
cwtl
push
sbb
mov
mov
aaa
sub
dec
pop
sbb
jne
and
mov
xorb
int3
push
ljmp
jecxz
add
addr16
adc
pop
les
scas
mov
fwait
push
sbb
sub
or
inc
push
ret
cmp
call
sub
adcl
icebp
sub
bound
test
dec
mov
lret
lahf
push
mov
jns
lret
pushf
ficoml
in
mov
add
rcrl
aad
jge
sbb
cmp
mov
mov
enter
in
pop
imul
ret
pop
mov
mov
ret
jg
jg
cwtl
das
add
pop
jmp
mov
dec
and
ds
test
mov
or
mov
popf
or
push
insl
mov
or
repnz
divb
popf
mov
scas
sub
loope
xchg
repz
mov
andb
add
pop
dec
and
cmp
sbb
ja
cmp
push
fs
nop
adc
cmpl
aaa
mov
inc
mov
sub
roll
push
fcmovb
mov
je
mov
addr16
lahf
mov
cltd
mov
lea
test
cld
in
ja
adc
lahf
mov
aad
jmp
cmp
push
xor
sahf
xor
cmp
inc
cltd
xor
dec
mov
cld
pop
ret
mov
jo
adc
pop
push
ud0
mov
lds
pop
sti
andl
pushf
je
sahf
mov
dec
inc
fs
in
in
stos
push
adc
sub
negb
adc
insl
test
add
push
lock
scas
adc
mov
mov
push
cmp
inc
sbb
mov
rolb
test
or
fistps
sbb
addr16
adc
adc
rcrb
push
dec
loopne
outsl
sub
sub
sub
pop
dec
data16
pop
and
push
test
xor
pop
add
ss
adc
inc
daa
in
add
add
cmp
mov
add
and
add
add
add
movsl
and
push
xchg
aam
or
sbb
jno
in
mov
movsl
int3
pop
in
sti
pop
lods
lahf
xchg
sbb
sbb
cmpb
sub
inc
jmp
shl
add
cmpsb
mov
je
push
fucomi
out
push
lods
inc
push
jp
ja
aam
add
dec
aas
mov
jg
ljmp
rcrb
aaa
xor
sub
dec
fisttpll
std
or
pop
popf
mov
ret
cli
adc
pop
nop
adc
shrl
outsl
mov
and
mov
or
and
add
mov
pop
pop
andb
movsb
cwtl
mov
or
adcl
mov
test
or
in
mov
out
aam
call
test
push
jmp
jmp
gs
das
repz
ds
cmpsb
cmp
pusha
and
popa
lahf
lods
pop
data16
decl
push
jnp
push
cltd
inc
test
jp
iret
ss
cmc
loope
cwtl
mov
mov
mov
fwait
repz
push
sbb
out
lret
shll
clc
adc
mov
pop
mov
enter
push
xchg
mov
xchg
dec
sub
inc
push
push
gs
std
frstpm(287
cmpsb
das
add
cs
shl
xchg
pop
sub
es
fdivrs
mov
mov
and
jecxz
adc
mov
xchg
add
mov
sub
pop
repnz
sub
mov
dec
xchg
xor
test
push
sub
lahf
push
ror
dec
iret
fiaddl
mov
mov
or
sbb
out
dec
inc
inc
sbb
lret
dec
sub
and
mov
lods
mov
aam
lods
and
inc
sub
pop
jecxz
or
outsb
fstps
cmp
nop
jl
sbb
xor
int
dec
iret
mov
xor
int3
aaa
mov
jne
mov
jns
sahf
pop
imul
mov
mov
inc
je
xchg
sbb
dec
imulb
sbb
jb
dec
pop
lods
push
mov
call
jle
stos
stc
sbb
sub
xchg
stos
repz
das
cmpl
popl
adc
pushl
or
hlt
mov
adcb
popa
pusha
adc
icebp
mov
sbb
cmp
jb
add
push
cmp
and
pushf
lret
popf
movsb
push
sub
mov
fwait
add
inc
mov
and
sub
add
idiv
js
ds
rcrl
enter
je
push
xchg
lret
es
mov
jg
js
ja
mov
or
hlt
test
test
mov
jno
ja
scas
ret
roll
push
iret
jge
push
adc
f2xm1
sub
int
iret
lret
test
adc
mov
lea
lods
xchg
or
add
mov
repz
lock
push
rol
pop
sub
in
dec
pop
ljmp
push
xchg
pop
adc
cmp
cld
or
sahf
fidivrl
xchg
and
xchg
inc
insl
inc
dec
sbb
inc
pushf
outsb
mov
rcl
sub
mov
lock
mov
cld
in
mov
jecxz
daa
mov
fimull
push
ljmp
inc
imul
fcoml
jle
sar
xchg
pop
mov
or
fistpl
fsubs
add
adc
pop
insl
xchg
in
add
xchg
or
popf
dec
aas
cmovb
xor
aaa
pop
inc
repnz
aam
roll
mov
cmp
dec
or
mov
out
dec
stos
testl
out
fmull
dec
push
cmp
jmp
ljmp
imul
insl
jne
sub
loopne
ret
in
fs
dec
push
inc
sbb
test
int
sub
xor
add
ljmp
jl
std
pushf
cmc
jle
sub
xchg
push
in
je
xor
xor
ljmp
fsubl
jle
aad
mov
jns
int
sbb
hlt
add
sub
push
in
outsb
mov
mov
in
and
fldt
loop
test
push
cld
xorl
inc
or
ret
and
ds
xchg
ret
cmpsl
lea
aaa
pmullw
cmp
les
xchg
out
inc
cmp
adcl
push
and
mov
nop
mov
or
hlt
out
inc
sub
xchg
movsb
ja
xchg
adc
repz
fnstcw
shr
inc
mov
and
pushf
bound
fdiv
loope
mov
in
cmp
mov
push
push
lret
lahf
imul
dec
test
mov
sub
jns
push
std
or
mov
fcomps
or
stos
pusha
jo
js
push
sub
loope
xlat
xchg
jmp
stos
or
mov
out
mov
pushf
test
add
add
mov
cmp
jle
xor
ffree
out
xchg
add
add
add
xchg
loop
lahf
or
sbb
mov
add
xchg
outsl
pop
mov
adcl
fmuls
pushl
mov
les
je
js
mov
fidivs
mov
pop
sub
int
sub
jae
mov
xchg
or
fcompl
add
mov
inc
icebp
int3
loope
cli
cld
roll
mov
push
pop
loope
pop
loop
loop
pshufhw
cmp
test
jb
fsubl
lods
sub
mov
fcomi
fadd
lret
mov
or
and
mov
bound
fwait
mov
jle
js
adc
fildll
lock
push
jl
cmpsb
sahf
fsubs
push
xchg
jecxz
ss
iret
cld
outsl
dec
popa
pop
outsb
test
out
adc
loopne
jmp
add
cmp
rorb
or
mov
push
sarb
sbb
mov
adc
popf
fistl
pushf
xchg
sub
jmp
mov
clc
mov
stos
lea
sbb
sub
pop
shl
cmp
shl
daa
pop
xor
adc
xchg
add
iret
xor
xchg
pop
cmpsb
test
shl
mov
sbb
aad
inc
daa
cmpl
add
inc
out
imul
push
lea
dec
js
shr
cwtl
and
neg
inc
pop
loope
test
and
xor
scas
push
push
and
sub
mov
xchg
jecxz
dec
push
add
arpl
lret
jmp
push
xor
leave
lea
rolb
nop
sub
mov
cli
fists
jo
ja
mov
and
cs
loope
int3
imul
ljmp
cmc
outsb
mov
loope
mov
outsl
cmp
outsb
vpsraw
aaa
jae
test
movsb
outsb
cmp
mov
shlb
pop
xlat
je
dec
or
out
dec
test
inc
jnp
enter
out
idivb
pop
or
push
repnz
push
adc
pop
pushf
mov
inc
mov
jo
orb
pop
sub
inc
or
push
add
sbb
xlat
xchg
xlat
jae
pop
mov
or
in
in
stc
fcompl
lea
rcrl
jp
inc
xor
pop
sti
inc
test
cld
scas
pop
dec
fildll
xchg
mov
clc
imul
insl
outsb
mov
call
outsb
pop
jl
lcall
movntq
out
pusha
sar
test
cmpsl
mov
push
fisttpll
xchg
sarl
cmp
add
add
sbb
out
idivl
mov
addl
add
int3
add
add
inc
and
add
jne
popf
shlb
xchg
mov
ds
mov
pop
jne
pop
iret
les
cmc
xor
and
sbb
stos
inc
push
movsb
xor
lcall
sbb
iret
mov
idivb
daa
cs
jbe
cli
mov
mov
repz
ret
push
fwait
push
sti
xchg
data16
inc
inc
shll
mov
pusha
mov
outsl
out
mov
popf
cltd
sahf
testl
push
insl
mov
inc
jns
or
cld
xor
xchg
inc
rcl
stos
mov
adc
pop
in
or
and
and
add
adc
or
imul
inc
aam
push
test
xor
test
loopne
push
fadd
lods
inc
push
aas
xchg
pop
hlt
stos
cmp
sub
mov
fildl
nop
repz
jmp
repz
lahf
or
sbb
enter
movsb
cmpsl
fldenv
add
bound
sbb
std
jp
repz
ja
dec
adc
cmpsl
test
out
pop
mov
xchg
mov
std
dec
dec
hlt
fimull
mov
ljmp
fcomps
xchg
xor
mov
adc
int
shlb
test
inc
in
xchg
fcoml
cltd
jp
lret
shl
test
fstpt
jno
dec
adc
test
sub
popa
mov
dec
adc
clc
cmc
fstps
push
imul
pop
rcll
iret
dec
inc
mov
sahf
push
fimull
out
insb
out
ret
std
test
mov
xchg
xor
xchg
cmp
pop
push
cmc
xchg
je
sbb
jns
mov
sti
into
mov
mov
sbb
loopne
mov
xor
dec
or
ds
sbb
sar
push
inc
mov
xchg
mov
inc
enter
mov
push
jb
les
repz
stos
push
lcall
push
shll
into
loope
out
jbe
pop
lahf
xor
movsl
cs
mov
adc
sahf
lahf
test
sbb
sub
xchg
adc
adc
cmpl
into
mov
sbb
fnstenv
clc
stos
stc
jo
jle
data16
les
mov
bnd
daa
dec
mov
mov
add
cltd
out
test
mov
xor
jo
mov
dec
dec
mov
jmp
jo
aas
mov
or
adc
ja
and
add
stos
push
cmp
out
lods
in
gs
fcompp
out
gs
mulb
xorl
add
add
arpl
out
mov
pop
cmpsl
cmpsb
test
xchg
dec
aas
pop
aas
add
cmp
ljmp
pop
pop
lds
xchg
jl
dec
std
daa
fisttpll
icebp
out
popa
pop
mov
adc
add
mov
lret
pop
jp
popa
cmp
mov
lahf
aas
inc
mov
sub
fistl
aad
push
stos
loopne
cltd
mov
xchg
std
xchg
and
adc
data16
add
int
out
jl
or
ljmp
push
push
lret
mov
into
stc
ljmp
push
sub
push
mov
adc
xchg
fisttpl
fidivs
or
incl
das
sahf
out
adc
mov
pop
mov
jl
scas
addl
mov
and
hlt
scas
dec
push
lret
add
push
scas
sbb
xchg
jno
gs
pop
jecxz
mov
out
push
pop
xor
out
call
icebp
nop
pop
test
flds
sahf
iret
outsl
fadd
mov
and
arpl
pop
and
xor
sbb
lds
mov
in
cltd
jb
fwait
cltd
out
data16
cld
xor
mov
ljmp
or
js
decl
jae
pop
arpl
pop
or
adc
jae
adc
arpl
pop
push
lahf
icebp
mov
enter
jl
out
push
and
mov
xchg
or
mov
pop
add
adc
jg
pop
xchg
cmp
inc
ljmp
sbb
cmp
jb
pop
jo
xor
xchg
pop
popa
mov
or
inc
stc
daa
ljmp
jmp
popf
sub
ret
pop
jns
xor
fs
pop
loope
int
adc
loop
jbe
call
mov
rcl
jae
stc
aam
lcall
sbb
mov
call
jmp
stc
imul
rorb
rcrb
cltd
push
mov
inc
lock
xor
dec
leave
clc
jl
call
out
jge
mov
push
pushf
xlat
sub
mov
sub
pop
sbb
xor
jmp
push
pop
sbb
stc
je
jmp
sahf
mov
push
xchg
pop
repz
cmp
out
mov
add
sbbb
ret
imul
sbb
into
addr16
sbb
push
sub
jno
dec
push
jmp
dec
cmp
push
test
adc
arpl
sti
adc
sub
aam
pop
nop
add
int3
add
add
je
adc
dec
test
and
mov
out
aad
loopne
lret
cmp
mov
ficomps
jp
test
ret
push
int3
add
aam
imul
mov
enter
dec
std
fwait
aam
xor
xchg
dec
lret
aam
fnsave
mov
inc
leave
repnz
fsubrs
leave
fwait
xchg
dec
adc
je
adc
repz
adc
push
ss
pop
sub
addb
inc
dec
std
loope
pop
repz
sub
mov
add
ret
xor
fimuls
xor
pop
xchg
popf
xchg
jg
cmp
cmc
xor
cmp
sbbb
xor
cmpsl
jno
es
push
cltd
call
lcall
sub
and
dec
mov
inc
xlat
push
repnz
or
in
outsb
mov
sbbl
mov
adc
sbb
mov
stc
out
popa
pop
and
mov
or
rcr
sbb
pop
out
das
or
mov
jmp
outsb
shrb
in
cmp
cmp
lret
ja
cmp
add
iret
and
enter
ret
loopne
adc
push
lret
cmpsl
dec
clc
jbe
adc
jecxz
mov
js
pop
or
adc
mov
imull
mov
lock
lcall
movsl
into
jae
inc
push
cmp
lods
aam
aam
mov
sub
mov
jbe
imul
das
movsl
push
mov
stos
les
and
pusha
adc
pushf
xchg
iret
mov
pop
ss
jmp
nop
sbbl
into
fwait
and
mul
ja
testl
jl
imul
cmp
in
jl
and
nop
stc
cmp
mov
std
xor
xchg
jg
jnp
bound
push
out
mov
xchg
push
pop
enter
sbb
cmp
int
xchg
iret
test
inc
test
cmp
out
adc
inc
and
fsubrl
int
jb
andl
jge
xrelease
mov
hlt
xchg
cmp
cld
push
shll
mov
xchg
scas
inc
xlat
fistpl
push
push
push
adc
mov
adc
nop
hlt
add
pop
xorl
ja
xor
arpl
mov
xor
push
stos
ret
out
mov
add
mov
add
add
and
xor
push
mov
int3
add
add
repz
dec
cmp
cmp
push
adc
inc
adc
xchg
fdivrl
xchg
mov
and
mov
add
jno
rcrb
pop
mov
jnp
jnp,pt
mov
std
xor
xchg
lcall
push
adc
mov
cmpsl
popa
adc
test
pop
jnp
imul
mov
movl
ljmp
fwait
jbe
fisubrs
sbbb
out
je
imul
cmp
cs
test
aaa
push
mov
mov
stos
icebp
outsb
scas
sub
mov
ss
jmp
mov
adc
jecxz
stos
cmc
xchg
loope
fstl
aam
lods
fs
arpl
push
jnp
mov
push
push
fildll
cld
fisttps
mov
call
leave
loop
ret
call
andb
pop
jne
ja
scas
fwait
pop
je
mov
repz
aad
enter
push
pushf
jl
push
movsl
xchg
add
sub
ffreep
jecxz
movsb
mov
xor
adc
cmp
cmc
sub
mov
xchg
dec
add
sti
sub
nop
cmp
xchg
pop
rorl
fs
lea
lahf
mov
add
lret
xor
xchg
repnz
jg
sub
push
inc
pop
mov
js
push
scas
in
lds
lods
mov
out
sbb
xlat
sub
or
sub
enter
popf
mov
xchg
lods
outsl
inc
mov
cmpsb
sbb
daa
push
arpl
negb
xchg
cmpsl
cltd
push
sbb
or
scas
shlb
xor
xchg
sbb
cmc
push
cmp
pop
cmpsb
cmp
sbb
push
je
adc
push
loopne
adc
cmp
inc
mov
pop
popa
mov
mov
jg
xchg
stc
daa
and
pusha
in
push
es
iret
mov
adc
rol
and
in
scas
ja
push
sbb
cwtl
sbb
add
cmpsl
and
add
jle
and
sbb
fidivrs
add
sti
lods
out
cltd
dec
mov
outsl
rcr
sbb
push
fnsave
fwait
add
xor
push
pop
shl
ljmp
push
xor
enter
pop
movntps
fsubrl
stos
test
cmp
sub
push
xor
or
add
aaa
stc
dec
sub
mov
fmull
aad
sbb
mov
mov
pextrw
pop
fsubp
push
xchg
dec
xlat
test
and
xchg
dec
pop
scas
mov
shrb
add
pop
mov
jg
popa
hlt
mov
add
xchg
add
int3
add
add
clc
fcmovne
mov
cmp
mov
xchg
mov
mov
jle
fidivrs
cld
pusha
je
int
cmp
pop
insl
sti
fisttps
dec
jae
or
add
mov
push
xchg
jg,pt
test
dec
lock
hlt
mov
call
jmp
jg
clc
push
cmp
ja
pop
fbstp
mov
dec
push
xchg
pop
jge
mov
movsb
sarl
outsl
loop
xor
pop
jns
lcall
mov
test
js
xor
sbb
adc
sbb
pop
add
lods
into
fisubl
dec
decl
call
and
push
cltd
in
loope
or
add
add
mov
mov
fnsave
imull
mov
mov
xor
outsl
cmp
cmp
in
mov
xchg
mov
lods
mov
and
push
add
mov
sub
jnp
cmp
mov
scas
add
cmp
push
and
jge
cmp
sbb
jae
adc
fst
mov
xor
mov
test
movlps
lret
lret
xchg
mov
pop
loopne
sbb
int
arpl
xor
or
jle
je
xchg
or
push
or
imul
pop
int
hlt
mov
push
movsl
jge
mov
stc
les
jne
pop
jo
push
inc
sbb
orl
test
lods
test
push
fs
mov
pop
mul
test
imul
or
fbld
insb
daa
xchg
leave
adc
gs
xchg
xchg
push
mov
out
fdivl
jo
mov
inc
mov
mov
popa
and
push
sbb
push
mov
cmp
xor
enter
sbb
repnz
jbe
ja
push
out
dec
fcoml
pop
mov
xchg
push
repz
cmpsb
pop
mov
stc
scas
adc
sub
lcall
xchg
push
mov
or
add
gs
add
xlat
lods
inc
push
mov
leave
and
fildll
xchg
loope
pushl
jl
mov
pusha
aam
and
adc
je
insb
mov
sahf
scas
jae
jo
sahf
nop
and
out
pop
adc
cli
loop
dec
adc
lock
pusha
adc
ljmp
enter
xchg
lcall
or
mov
dec
cmp
inc
push
pusha
jbe
out
fnstsw
pop
mov
add
add
add
mov
or
sbb
int3
or
jge
jne
mov
cmp
aad
pop
arpl
insb
hlt
dec
mov
mov
iret
sub
imul
arpl
mov
pop
sti
fstps
repz
cmpb
lret
xor
xlat
pop
sub
test
mov
xchg
das
out
mov
icebp
fwait
in
cmc
subl
sahf
jae
dec
push
and
imul
push
aad
push
mov
inc
sbb
fbld
shll
or
stos
mov
jl
andb
pop
cld
imulb
xchg
hlt
pop
dec
adc
lahf
pop
not
aam
das
repz
aas
iret
mov
sbb
bound
mov
sbb
mov
test
test
mov
iret
and
push
es
or
shlb
add
xor
mov
pop
imul
jp
sbb
cs
test
pop
adc
lret
xor
addr16
dec
sahf
outsb
jmp
mov
lret
out
sub
inc
mov
cmp
dec
dec
int
xchg
pop
dec
dec
or
jl
notl
sub
jle
mov
rolb
es
std
inc
adc
pop
xchg
insl
int3
popa
dec
adc
jecxz
jae
fcom
cmp
jns
shrb
mov
xchg
mov
decl
pop
es
stos
push
mov
inc
movsl
stos
fwait
mov
mov
imul
cltd
push
divl
push
inc
int
loop
fstl
lea
in
jecxz
rclb
sub
inc
push
or
fildl
dec
stos
sub
mov
outsl
inc
sub
stos
jne
sbb
add
jmp
stos
inc
mov
and
into
pop
fdivs
in
push
xor
add
xchg
hlt
outsb
sub
cmp
out
jecxz
es
loope
insl
test
movsb
ljmp
and
add
test
fs
mov
int3
imul
inc
lea
push
pop
lcall
push
push
jb
xor
push
jecxz
mov
mov
inc
xchg
push
xlat
les
cmpsl
or
cmp
movsl
in
push
add
push
xor
mov
movsl
inc
push
cmp
pop
inc
movsl
pop
fldt
or
adc
xchg
jmp
mov
mov
jle
fidivs
addr16
popa
adc
jle
fidivrl
fdivr
pushf
jo
xchg
and
lds
imul
push
imul
test
fisubs
mov
lret
dec
pushf
insb
push
sub
fucomip
ficoms
adc
loop
nop
mov
add
jne
in
xlat
push
xor
test
inc
faddl
jo
or
mov
mov
lcall
mov
and
cld
jge,pt
xorl
jno
imul
cmpsb
out
and
jb
scas
sbb
push
int3
gs
xor
jp
mov
repz
fadds
xor
subb
mov
xor
xchg
fwait
stos
inc
jne
mov
xchg
xchg
aas
sub
jp
xchg
loopne
pop
ja
loope
ja
pop
sahf
and
mov
aam
fbstp
nop
push
adc
and
out
bound
jns
sbb
sbb
inc
jno
rorb
or
xchg
daa
rcr
faddp
mov
daa
into
push
mov
push
ret
dec
pop
cmp
sbb
repz
inc
xchg
jge
add
ds
mov
pop
add
addl
iret
pop
pop
mov
test
push
jae
push
sbb
pop
cmp
or
sub
in
nop
mov
mov
mov
ret
mov
mov
or
add
mov
dec
mov
in
pop
mov
inc
fdiv
xchg
popf
test
mov
mov
movsb
pop
movsl
aaa
aam
divb
xor
dec
xchg
xor
rcr
popf
jmp
mov
xor
xchg
lahf
lods
loopne
lcall
jg
push
adc
loop
jmp
mov
rorl
mov
jne
mov
sbb
xchg
push
call
out
dec
fists
dec
dec
movsb
negl
lcall
inc
mov
in
arpl
addr16
jmp
mov
and
fisubs
mov
sub
out
xchg
adc
nop
mov
xacquire
cmpsb
xlat
out
xchg
repz
push
sub
ret
pop
pop
mov
add
xchg
mov
sbb
or
mov
mov
jl
mov
std
xchg
aam
jnp
pop
cwtl
cmpsb
xchg
mov
or
lods
sub
rolb
xchg
test
inc
sarl
push
sub
adc
cmp
mov
fstpt
xchg
xor
xchg
dec
jecxz
rcl
lea
pop
loope
sbb
sub
push
in
les
enter
ljmp
adc
sahf
mov
in
out
cmp
mov
ret
stc
subb
enter
addr16
xchg
xor
sbb
stos
loope
andl
add
add
add
insb
sub
outsl
daa
insl
push
push
stos
adc
rcrl
push
sahf
add
int3
add
add
bound
in
sahf
mov
sti
fdivl
sub
mov
arpl
das
lcall
rclb
iret
mov
mov
mov
jae
sub
push
rcl
test
into
aam
xchg
xor
bound
add
jp
lds
loope
sbb
jp
mov
add
loop
fistpl
jmp
push
loope
jne
jb,pn
jno
and
aas
subl
push
daa
cltd
enter
cmp
lret
sbb
das
imul
fidivl
out
jae
ss
jle
int
jb
xor
or
aas
push
xor
enter
adc
inc
mov
pop
push
fcomps
jge
dec
in
mov
xchg
pushf
inc
mov
mov
sub
push
mov
add
test
aaa
push
mov
in
data16
push
scas
idivl
mov
je
ja
fdiv
add
or
and
sub
and
xor
mov
scas
out
imul
xchg
cmp
out
jg
xchg
push
jns
test
cmpb
lods
dec
shlb
push
popa
push
add
jne
push
jp
fadds
add
repz
hlt
arpl
bndldx
xor
outsb
hlt
pushf
negl
or
lds
out
rorb
sub
sahf
stos
jmp
cmp
fbld
fistl
std
xor
jp
cmc
adc
jo
out
dec
mov
das
cltd
push
cmc
and
hlt
out
adc
inc
sub
sbb
push
nop
dec
pushf
and
sbb
rcr
enter
mov
jns
adc
xchg
push
nop
scas
popf
roll
frstor
pop
clc
int3
xchg
sahf
fmuls
ds
sub
push
dec
and
mov
cmpsb
sub
ljmp
mov
aas
cmp
test
xchg
pop
stc
dec
mov
pop
mov
xlat
ds
mov
xchg
push
movsl
mov
scas
loop
sub
fmul
shrb
adc
test
cmp
dec
mov
sbb
subb
ljmp
xlat
xchg
xor
mov
jae
adcl
je
test
pushf
sti
or
xor
in
mov
pop
ljmp
nop
jae
imul
mov
mov
inc
nop
outsb
pop
shll
test
push
icebp
xchg
mov
iret
ret
sbb
daa
xchg
or
mov
mov
fs
or
add
pop
and
mov
out
add
out
lock
add
push
pop
arpl
lahf
adc
hlt
cmp
lret
test
popf
adc
or
inc
je
sbb
push
cmpsb
cvttps2pi
lea
adc
cmpsl
clc
xor
loopne
lds
jnp
sbb
inc
ja
sub
mov
int
popa
insb
cmpsb
and
pop
out
cwtl
cmp
in
pop
jnp
jb
lcall
rolb
mov
lcall
hlt
pop
sub
aam
sbb
push
sub
and
fcoml
loopne
adc
jne
shlb
jae
rol
cli
dec
lock
xor
sub
dec
pop
add
in
and
stos
inc
push
in
in
xor
int
aas
xchg
jb
push
push
in
pop
fdivl
sti
lea
shlb
push
les
pop
xchg
rorb
aas
pushf
jne
fs
xchg
test
mov
repz
xchg
pop
xor
inc
push
out
out
test
adc
loopne
xor
inc
pop
mov
dec
repz
dec
stos
insl
mov
ja
cmp
imul
bound
mov
pop
push
cld
push
scas
mov
test
iret
xor
sub
fisubs
shll
rcrl
pop
or
mov
leave
mov
sbb
insb
repz
int
cmp
and
jo
push
repz
sub
cmp
enter
pop
shlb
push
rol
mov
xchg
xchg
outsb
insl
cmp
jp
mov
sbb
pushf
pop
repnz
test
lret
lds
mov
sub
lods
call
popf
pop
or
mov
fsts
push
mov
fldt
repnz
pop
or
inc
stc
sbb
bound
pop
ret
mov
pusha
push
scas
lret
mov
mov
inc
add
inc
sahf
in
pop
arpl
out
cmp
pop
rcr
das
pushf
mov
insb
xchg
cli
iret
jecxz
mov
or
jle
sub
cltd
pop
ret
iret
ret
ljmp
push
xchg
subl
xor
mov
cs
mulps
mov
cmp
push
cmpsl
mov
push
xchg
sub
js
repz
xor
pop
xor
sbb
or
and
sbb
pop
into
add
dec
xor
jecxz
ja
mov
lcall
jbe
xchg
cmp
std
cmp
aas
mov
mov
and
push
sub
cmp
nop
xchg
sub
fiadds
add
add
cmp
mov
je
sahf
push
out
mov
add
lret
lods
push
cli
aam
iret
push
nop
ds
jae
push
pop
mov
xor
adc
jns
xchg
add
aaa
jb
stc
mov
xchg
sahf
mov
or
jecxz
mov
bound
pop
icebp
dec
jp
xchg
inc
sub
cmpsb
pop
add
or
jno
and
stos
aam
mov
clc
mov
sarb
sub
int3
lahf
pop
mov
push
mov
sbb
xor
pop
pop
fs
test
mov
sidtl
insb
out
cmp
ja
les
sbb
and
rcrl
xor
mov
jnp
cmp
xchg
lods
stos
and
dec
xchg
js
lds
lretw
push
xchg
ds
adc
jo
mov
inc
mov
cmp
cmp
movsb
and
push
movsl
dec
adc
push
mov
jmp
mov
pop
hlt
add
mov
push
mov
mov
inc
lock
sbb
pop
or
int3
rolb
out
and
cltd
out
int
sbb
push
ret
repnz
enter
outsl
lret
fstpl
cmp
ljmp
filds
or
daa
clc
in
in
xchg
or
pop
lea
call
inc
or
mov
sahf
jns
movsb
xchg
and
icebp
push
out
cmpsl
jg
sub
cmpsb
jne
or
repz
push
dec
mov
jns
pop
mov
lods
call
aaa
lock
call
nop
push
and
push
sub
mov
arpl
pop
push
xor
jg
or
fxch
iret
mov
fdivrl
mov
jno
jno
and
popf
and
cmp
and
enter
es
pop
inc
mov
fimull
inc
leave
push
mov
mov
xchg
out
inc
xor
fnsave
popa
mov
pop
jb
sarb
fimull
cmpsb
lcall
mov
mov
das
cmp
mov
inc
ret
mov
movsl
jle
es
iret
cmp
mov
add
pop
aaa
dec
addr16
mov
xchg
js
inc
mov
adc
inc
adc
jnp
jb
jmp
add
dec
jmp
test
in
inc
xchg
jbe
inc
mov
dec
xchg
lods
inc
push
testl
fisubl
addr16
push
dec
cmp
push
adc
cwtl
mov
sub
jge
loopne
pop
push
sub
loop
sub
int
jne
push
ds
outsb
sbb
mov
jnp
mov
add
add
lods
in
xchg
jecxz
test
popf
jl
aad
gs
mov
fstps
subb
gs
inc
jecxz
sar
addr16
cs
out
sar
push
sbb
xlat
xor
cmp
mov
push
stc
data16
push
push
dec
xor
pushf
sub
sahf
leave
iret
into
out
cmpsl
cwtl
in
mov
pop
aaa
sbb
pop
imul
add
adc
mov
ret
jmp
aad
leave
test
outsl
out
push
sub
mov
dec
xor
xor
dec
xchg
lods
jle
mov
mov
xchg
repz
and
jle
ret
lret
repz
arpl
xor
sbb
cmp
adc
out
sub
cmp
lods
and
cmpsb
push
pop
xchg
mov
mov
and
fisttpl
sub
inc
inc
fwait
imul
shll
dec
and
imul
inc
xchg
mov
fmull
imul
pop
mov
fcmovnu
add
xchg
sub
mov
sbb
push
mov
adc
sbb
scas
push
cmpsl
lcall
pushf
sub
jle
fs
das
out
fwait
sti
in
repz
mov
jecxz
cmp
aad
inc
adc
sub
out
test
outsl
add
popa
or
testb
cmp
pop
lock
scas
fldt
js
mov
push
jmp
xchg
sbb
mov
dec
out
mov
stos
outsb
outsb
sub
or
mov
pop
pop
adcb
ljmp
xchg
imul
in
push
dec
outsl
dec
pop
mov
rcll
insb
stc
sbb
sbb
and
cmp
or
mov
xor
in
lret
inc
stos
mov
fildl
cs
pop
sub
cmp
xchg
mov
adc
push
arpl
inc
or
mov
test
fwait
bnd
mov
call
sbb
jecxz
bound
fs
lods
jmp
jb
cmp
iret
mov
repnz
incl
imul
add
sub
jl
mov
insl
mov
sub
cli
add
pop
dec
js
fmuls
cwtd
mov
ret
mov
xchg
inc
cmc
push
shld
jae
push
addr16
mov
insl
inc
pop
icebp
add
ss
push
mov
dec
mov
popf
cli
mov
stos
rcl
test
loopne
mov
jl
mov
mov
push
decl
call
ss
sbb
or
mov
mov
xor
mov
xchg
add
inc
cwtl
and
jmp
add
cmp
pop
inc
dec
xchg
cltd
fstl
cli
stos
mov
pop
push
push
sub
loop
dec
cmp
inc
pushf
inc
push
push
add
hlt
and
or
sub
jmp
out
mov
out
adc
shll
dec
imul
loop
pop
fsubrp
xchg
in
dec
add
sti
jne
dec
shlb
movsl
pop
inc
push
fidivrs
loopne
inc
jl
jecxz
insb
inc
lret
pop
jne
repz
fnstcw
out
js
mov
dec
or
data16
jp
jb
popf
mov
mov
ss
aam
sarl
inc
out
enter
lret
push
clc
cli
adc
stc
loopne
jno
pop
pushf
or
adcb
pushf
adc
aas
push
jae
shrb
push
fistl
out
imul
cli
movsb
sub
fmulp
outsb
hlt
mov
es
jne
jo
mov
dec
mov
jno
out
mov
xor
mov
inc
mov
sbb
cmovbe
mov
adc
or
push
popa
push
hlt
out
jp
dec
loope
adc
xchg
shlb
in
loopne
mov
sti
xchg
dec
inc
imul
jo
pushaw
or
dec
add
fildll
inc
jno
inc
push
and
push
sbb
sbb
test
dec
inc
addr16
push
sub
out
sub
add
pop
dec
in
adc
mov
sub
mov
enter
pop
call
cmp
inc
test
std
sbb
lret
xor
test
arpl
call
sbb
addr16
imul
std
add
hlt
mov
sub
ja
pop
popa
push
mov
dec
and
nop
cwtl
or
pop
xchg
fidivrl
xchg
and
aaa
das
push
inc
and
push
xchg
mov
fsubrs
das
xor
pop
repz
jmp
test
pop
xlat
mov
aas
rolb
aam
pop
test
xchg
jl
mov
dec
aas
pushl
inc
movsl
jmp
lret
movsl
push
or
loopne
mov
dec
cmpsl
out
mov
nop
inc
dec
sbb
adc
mov
xor
mov
sbb
push
lods
rorl
jnp
lret
jge
or
imul
pop
sti
iret
lods
mov
int
pop
lret
xor
stos
pop
or
pop
sbb
clc
push
popf
push
movsl
add
adcl
and
inc
and
lahf
out
mov
mov
inc
adcl
repz
dec
inc
mov
in
stos
clc
adc
add
int3
add
add
mov
dec
push
mov
notb
inc
leave
icebp
pusha
jl
stos
in
lret
lock
out
test
insl
fwait
pop
sub
sub
push
xor
mov
cs
mov
popf
sti
movsb
cltd
xor
pop
mov
jle
ret
icebp
es
scas
mov
push
test
fadds
xor
mov
jne
pop
popf
or
mov
mov
lds
dec
sub
mov
cmp
mov
pop
add
and
js
test
ret
pop
jno
inc
push
push
pop
push
inc
pop
dec
mov
es
repnz
push
xchg
and
mov
adc
out
movsl
les
insb
into
xchg
or
ljmp
ja
inc
mov
hlt
xchg
mov
pop
xor
add
jmp
loope
lret
mov
push
jle
dec
mov
mov
inc
xchg
jle
fnsave
cmp
scas
mull
push
stos
fistpl
xchg
mov
dec
inc
fiaddl
push
fs
rcl
mov
add
lods
in
cmpl
sti
pop
dec
insl
push
outsl
xchg
lret
ds
out
jle
push
xchg
jno
pop
push
push
adc
xchg
fnsave
repnz
sub
ret
pop
xor
clc
xor
xchg
xchg
enter
mov
inc
les
sbb
dec
inc
pop
add
jp
clc
les
aas
mov
xlat
lods
daa
mov
faddl
sbb
dec
loopne,pt
pop
cmpb
cmp
out
adcb
mov
cmp
inc
or
xchg
enter
cltd
popf
lret
sbb
arpl
inc
dec
jmp
arpl
and
jns
call
loopne
mov
push
les
pop
inc
cmp
pushf
or
sub
add
ret
ja
repnz
dec
or
in
stos
jge
push
nop
jne
lret
scas
inc
lret
sbb
ret
clc
mov
test
xchg
call
icebp
scas
mov
xchg
push
sarb
push
or
stos
adc
mov
mov
xchg
xor
int3
mov
cmp
cs
push
inc
dec
clc
movl
sub
pop
adc
lods
push
shll
push
testl
cld
es
cmp
inc
dec
or
mov
loopne
aaa
and
out
inc
lahf
cld
add
mov
stos
jo
dec
cli
fldcw
loopne
test
add
int3
add
add
lea
call
mov
lods
mov
negl
mov
pop
mov
jo
dec
pop
imul
in
sub
repz
neg
mov
sbb
push
fwait
xchg
add
sbb
jns
inc
shl
mov
lcall
jle
xlat
jnp
push
cltd
xor
mov
jl
jnp
cs
add
mov
push
call
daa
or
sub
sbb
in
lahf
fimull
jno
and
mov
popf
jp
out
ss
xchg
lods
pop
or
add
jecxz
or
fisubl
inc
push
add
mov
dec
sbb
ja
lcall
ss
push
lock
sbb
imul
sbb
dec
shl
xchg
lea
xchg
cmp
xchg
int
sub
out
add
pop
pop
ljmp
das
insl
addb
adc
jb
cmp
add
dec
outsl
push
cld
xor
mov
test
sub
jecxz
stos
or
out
sbbb
in
repnz
mov
add
leave
pop
mov
or
push
iret
je
add
push
push
or
push
dec
les
mov
cmp
inc
jbe
adc
hlt
or
addl
push
cwtl
fisubs
xor
std
jno
loopne
ja
dec
aad
xchg
mov
mov
outsl
fwait
mov
pusha
push
pusha
cmp
cmp
jp
xorl
inc
inc
ret
jge
sbb
rorb
push
je
xchg
inc
dec
mov
jle
cltd
test
fcompl
cmp
mov
ljmp
cmpl
xor
or
insb
notl
nop
inc
or
xlat
cmp
cmp
lods
or
jns
inc
repz
arpl
je
pop
xchg
xchg
pop
and
shl
adc
jmp
xchg
ja
test
jo
shrb
mov
or
inc
mov
jae
cmp
fs
jbe
xchg
shl
mov
xchg
mov
dec
scas
popf
add
gs
shrl
inc
xchg
or
add
pop
mov
popf
dec
setg
pop
daa
lret
or
push
mov
rorl
adc
pop
mov
frstor
pop
pop
outsb
push
and
stc
mov
inc
inc
aam
push
mov
push
fmull
js
mov
mov
sub
or
add
dec
xchg
pop
xchg
js
mov
ljmp
add
stc
fists
inc
xor
cmp
mov
adc
aaa
lds
shlb
dec
jbe
cmp
mov
fcoms
aad
mov
stos
and
xor
sbb
fcompl
xor
fldt
jns
lret
aam
xor
movsl
les
mov
addr16
aaa
aam
sub
mov
pop
stc
cli
inc
test
xchg
stos
push
mov
sbb
movsl
mov
jns
mov
push
jl
imul
movsb
xchg
sbb
adc
or
mov
clc
imul
lret
loope
ljmp
mov
adc
push
pop
sub
sarl
mov
xor
aad
mov
lahf
fidivl
cwtl
sub
jne
pop
mov
cli
cltd
mov
and
inc
mov
xlat
out
push
mov
cmp
mov
push
inc
int3
fstp
iret
push
mov
rcl
sub
inc
les
inc
adc
das
imul
inc
aaa
jae
sti
inc
bound
in
dec
dec
or
sub
mov
je
inc
cmpsl
cmc
or
pusha
rcrl
in
mov
ret
adc
inc
imul
in
mov
sahf
imul
dec
and
popf
loopne
fdivrs
fstpl
push
test
leave
add
push
or
push
mov
loopne
jmp
mov
sub
xor
push
shl
imul
push
fs
in
js
bound
ja
mov
jle
xchg
ljmp
lods
stos
outsl
int3
inc
outsl
dec
aaa
mov
arpl
or
xor
inc
mov
jnp
fs
mov
push
mov
popa
sarb
inc
jecxz
dec
dec
pop
mov
jno
xchg
xor
in
dec
es
mov
mov
add
mov
movsb
mov
xlat
sub
jae
cmp
dec
je
ljmp
dec
rorl
mov
insl
inc
lahf
lea
je
xchg
mov
aaa
or
test
xchg
aaa
mov
jns
lods
xchg
and
mov
cwtl
add
push
lea
push
mov
pusha
push
into
outsl
xchg
inc
mov
jg
cs
inc
mov
cmpsl
pop
rorl
add
pop
scas
or
imul
mov
mov
pusha
aas
rep
scas
jmp
ret
push
divl
mov
adc
iret
stos
sbb
sahf
stos
xor
add
add
xchg
jl
cld
decl
in
jo
lea
pop
loop
mov
add
add
add
mov
jnp
push
sub
jo
insl
dec
mov
mov
dec
xchg
inc
bound
mov
add
je
ret
arpl
imul
xchg
dec
out
push
adc
insl
and
sub
and
in
ret
mov
push
movl
hlt
inc
sbb
ss
ljmp
rcrb
cmp
scas
int
into
fbstp
fwait
or
sub
ja
dec
cmp
in
add
xor
clc
cld
add
sbb
insb
push
enter
outsb
or
inc
testb
mov
mov
inc
pop
ret
cmpsb
cld
xchg
test
cmpsb
call
and
lret
imul
mov
mov
cwtl
jnp
push
mov
xchg
sub
cmp
shlb
shrl
jae
push
mov
and
push
mov
and
pop
jns
nop
loopne
push
cmp
fs
dec
dec
out
push
sbb
in
popa
jns
aam
pop
jmp
jnp
ds
ficoms
insl
pop
sbb
mov
xchg
filds
add
sbbb
sbb
dec
and
imul
mov
insb
pop
daa
adc
xor
xchg
lds
outsb
push
out
inc
notb
cmp
lret
adc
movsl
dec
inc
es
sti
mov
lods
mov
popa
ficompl
mov
lahf
dec
addl
mov
test
pop
pop
pop
test
lods
adc
cmpl
mov
xor
fwait
outsl
jg
mov
and
jl
dec
push
stc
addr16
shr
out
cmc
add
loopne
test
addb
lcall
jge
test
mov
daa
jae
or
xlat
lods
jg
int3
pop
lea
scas
mov
sbb
inc
mov
cmp
ret
adc
mov
mov
mov
jl
pop
rol
jne
push
mov
inc
js
test
xor
fs
cmp
scas
push
in
ffree
mov
push
mov
jno
das
add
xchg
cmpsl
leave
loopne
dec
push
jno
pop
fsubs
or
out
mov
cltd
cltd
or
sbb
or
xor
bound
mov
adc
stos
shl
in
xchg
xchg
mov
lahf
bnd
nop
call
push
lahf
loope
loop
add
inc
nop
outsb
fldt
lods
push
lds
aad
icebp
shrb
ret
pop
fprem1
xchg
dec
inc
loopne
add
add
and
dec
repz
fldt
adc
popf
clc
xorb
add
test
cwtl
lea
add
sub
cs
adc
pop
outsl
sub
adc
in
scas
es
mov
jnp
xchg
push
and
push
fsub
inc
lret
or
xor
or
jg
sub
xchg
mov
xor
add
xchg
and
cwtl
mov
rcrb
fistpll
ret
aam
aas
xchg
ret
lods
push
sbb
sub
rorl
adc
dec
outsl
out
sti
insl
adc
push
aad
das
push
daa
aas
xchg
ss
xchg
xor
dec
aam
fildl
lea
xor
push
push
in
mov
dec
inc
bound
stc
mov
cmp
dec
inc
movsl
jne
jmp
test
mov
sbb
je
adc
bound
sub
push
push
jmp
cltd
int
ret
push
xchg
clc
jnp
and
add
or
mov
addl
jnp
or
fisttps
cmp
test
adc
jle
mov
es
mov
mov
xchg
sub
pop
sbb
xchg
scas
adc
xchg
lods
xlat
or
divl
adc
add
mov
loope
dec
out
enter
xor
mov
xchg
out
pop
sub
shld
or
cmp
cmp
xchg
in
sbb
int3
in
or
inc
popf
repz
sub
int3
pop
ffree
mov
test
stos
pop
scas
daa
mov
push
mov
sbb
sbb
mov
push
repz
test
push
lods
aas
mov
inc
jnp
sbb
jns
int3
loop
aam
cmpsl
cmp
outsb
hlt
jmp
dec
je
mov
imul
mov
in
lcall
push
pop
andl
mov
mov
int
rorl
outsb
pushf
stc
fadd
fmulp
das
dec
int
pop
loope
es
mov
cmp
cmp
ss
rorl
push
xchg
push
fcmovb
sub
xor
cltd
leave
or
push
ret
shlb
push
push
adc
out
pop
je
je
insb
xor
test
outsb
iret
add
fnstsw
dec
or
or
mov
repnz
cli
mov
icebp
je
dec
mov
dec
adc
pop
out
sub
fidivrl
mov
lret
out
xchg
jecxz
cmp
push
pop
test
lcall
jnp
pop
pop
mov
push
add
int3
add
add
imul
fadds
movsl
inc
sub
dec
negb
mov
repnz
add
mov
jl
std
rcrb
scas
jnp
jge
out
fstps
adc
loope
lods
cmp
call
aaa
mov
jb
jno
pop
sahf
stc
mov
adc
jmp
adc
iret
cmp
mov
dec
ja
ja
mov
sub
mov
gs
sub
or
aam
cmpsb
dec
sub
aas
sti
iret
mov
aam
pop
fisubrs
jle
jl
insb
cltd
rorl
xlat
inc
pop
and
jmp
int3
lret
adc
mov
int3
inc
pushf
aas
push
stc
out
icebp
sar
shlb
lcall
add
push
ds
dec
mov
cmp
push
jno
mov
clc
xor
fs
push
push
es
js
es
lahf
sbb
lea
fcmovne
mov
shrb
dec
mov
or
sub
imul
rorl
or
ret
in
xchg
jp
xchg
fwait
and
movaps
cmpsl
movsb
or
mov
stc
clc
cmp
mov
fstpl
test
push
pop
and
icebp
push
mov
ja
in
jecxz
sbbb
pushf
push
mov
subl
jno
dec
sbb
mov
push
imul
jnp
mov
movb
cmc
fwait
scas
mov
pop
mov
sbb
jle
adc
test
ret
push
xor
cmp
loopne
and
test
jae
xchg
outsb
adc
add
fwait
enter
cmp
sbb
jae
dec
and
fmull
xchg
and
sbb
sub
lret
test
push
lods
fcompl
xlat
ret
in
call
cmp
jne
xchg
testb
sub
test
mov
pop
inc
lahf
xor
mov
ja
arpl
jns
daa
mov
imul
sub
dec
jnp
cmp
inc
imul
xchg
mov
popf
dec
sar
stos
xor
xor
mov
in
adc
mov
into
in
fcoml
test
cltd
hlt
rclb
test
sbb
mov
cmp
jmp
out
popf
jae
aas
and
sub
inc
test
add
lea
lret
sub
rcrb
xor
add
sub
xor
rolb
dec
idivl
fnsave
fistps
mov
add
jmp
inc
insb
pushf
dec
repnz
sbb
mov
and
push
out
ds
mov
xor
and
sbbl
and
dec
add
mov
sub
push
sahf
jae
popf
nop
mov
cld
sbb
or
pop
loopne
inc
aaa
sbb
mov
fs
mov
movsb
xor
nop
fs
shlb
inc
ret
sub
stc
cmp
data16
orb
int
stc
mov
push
xchg
jo
add
cmc
mov
scas
cld
lods
cmp
sbb
addr16
and
inc
xor
cmp
inc
mov
adc
fst
shlb
rcrb
push
add
xchg
mov
in
mov
xor
sub
xchg
movsl
xor
jecxz
scas
inc
negb
clc
mov
dec
fdivs
mov
dec
jae
dec
imul
inc
dec
loope
popl
pop
pop
jge
sbb
lret
cltd
mov
xchg
and
and
int3
mov
sub
dec
pop
fucom
mov
mov
in
mov
xchg
dec
push
pop
sbb
mov
lret
clc
dec
int
and
push
das
push
pop
mov
and
xlat
int3
inc
mov
xor
pop
xchg
int3
pop
mov
mov
fidivs
lods
push
jg
pop
dec
fidivs
mov
lcall
in
rcl
jl
push
mov
adc
sub
adc
popf
pop
test
and
jge
inc
stc
xor
jmp
sbb
dec
dec
push
mov
out
outsl
dec
adc
repz
mov
out
loop
addl
push
mov
mov
ds
notl
cmpsl
insb
pop
and
push
inc
cmp
cmp
push
add
dec
lods
or
sti
outsb
std
test
cmp
jge
arpl
pop
mov
lcall
mov
ret
xchg
sub
movsl
out
inc
sub
stc
and
imul
cmp
arpl
jnp
add
test
out
or
cs
faddl
xor
dec
sahf
addb
pushf
or
adcb
mov
adc
fadds
jns
lret
xchg
pop
aad
mov
xor
jl
mull
cmp
sub
and
xor
and
sbb
cmp
xor
dec
dec
and
cmpb
push
xchg
or
xor
fisttpl
sbb
js
stos
and
or
icebp
in
mov
mov
add
jecxz
mov
ficompl
add
int3
add
add
xor
push
lock
cmpsb
mulb
scas
jge
and
jne
nop
pop
unpckhps
outsw
mov
sbb
fists
test
ja
push
fsubrp
aas
mov
jne
sub
pop
mov
add
sub
repz
les
hlt
mov
imul
sti
lahf
imul
jecxz
mov
inc
mov
xchg
mov
jl
movsb
leave
mov
lds
jecxz
push
scas
call
jbe
inc
mov
into
xchg
push
or
insl
orb
cmp
shlb
jns
aas
lea
add
insb
test
add
add
aas
sti
bound
movsb
mov
in
aam
fisubrs
mov
sub
fwait
pop
adc
dec
and
ss
scas
lret
scas
jbe
mov
adc
std
daa
push
imul
in
dec
or
stc
pop
push
into
dec
insl
xchg
pop
dec
mov
mov
rcll
enter
test
sbb
loope
mov
and
fcompl
jae
scas
add
cmpb
les
dec
popl
sysret
cltd
and
xchg
add
xchg
jns
adc
xor
jmp
mov
push
dec
jo
xchg
dec
nop
movsb
addb
mov
xchg
fnstenv
pop
mov
xchg
in
popf
mov
mov
jmp
jg
ss
std
popf
add
dec
mov
push
stc
cs
jg
add
jecxz
jne
out
btc
icebp
lods
xchg
decb
movsb
cmpsb
mov
arpl
movsb
xchg
sbb
sub
loop
or
fadds
cmp
enter
cs
and
push
cwtl
xchg
notb
aad
cmp
addb
sub
mov
repnz
out
pushl
fiadds
leave
or
mov
xor
xor
pop
es
insl
mov
adc
les
cmpsl
pop
adc
inc
arpl
inc
bound
in
mov
sub
dec
std
leave
ljmp
aas
adc
out
aam
iret
movsb
divb
inc
jmp
xchg
xchg
cwtl
out
out
pop
es
arpl
jl
cmc
and
xchg
push
ja
decl
push
repz
xor
sbb
fcoml
mov
dec
mov
int3
cmpsb
lock
dec
push
aas
ljmp
jne
gs
andl
repz
jno
mov
xor
fs
mov
fsub
subl
xlat
cmp
shll
add
add
punpckldq
add
push
push
sub
xor
fscale
xchg
int
adc
cmc
stos
cmpsb
sub
shlb
hlt
sub
mov
sub
xchg
and
xchg
pop
pop
xlat
loope
mov
pop
in
dec
jns
adc
sub
mov
mov
inc
adc
jnp
and
xchg
out
lret
sarl
mov
aam
push
rol
pop
mov
jae
or
and
scas
andl
inc
pop
and
cmpsl
ljmp
sbb
xchg
dec
cs
cmpsl
pop
mov
push
outsb
and
pop
adc
pop
add
lods
lcall
or
and
cmp
sahf
std
insl
out
adc
mov
movsl
dec
fdiv
call
in
mull
jno
ja
jecxz
es
adc
xchg
push
and
cmp
lds
mov
mov
les
je
and
outsl
mov
ror
insb
mov
sbb
ficomps
mov
std
sub
mov
jno
mov
test
fcmovnbe
imul
jmp
repz
movsb
push
iret
loope
adc
out
pusha
inc
ljmp
shrb
push
dec
and
sub
popf
popa
in
pop
pop
sahf
and
and
pop
adc
sbb
nop
mov
jmp
inc
add
inc
pop
or
bound
mov
gs
xchg
pop
push
loopw
lds
mov
lods
out
jg
pop
xor
xchg
sub
bound
sbb
and
cs
push
es
in
mov
test
cmc
cmpb
shrb
or
push
pop
jne
mov
cmpsl
xchg
mov
movsb
das
rcrb
and
fucomip
rcl
mov
mov
push
jne
cwtl
aaa
shrb
pop
xor
sbb
outsb
dec
xor
adc
loop
xchg
pushf
adc
imul
repnz
outsl
jecxz
jmp
jecxz
bound
negl
ljmp
mov
cmp
call
shr
dec
js
lahf
insb
and
jae
mov
cmpsl
fwait
hlt
inc
xor
cli
adc
jb
daa
out
in
xchg
in
ss
sbb
clc
rorl
shll
xchg
xchg
lahf
in
push
lret
push
cmp
adc
dec
enter
lods
out
xchg
cli
mov
pop
pushf
lea
maskmovq
pushf
fisubrs
pop
xchg
jmp
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
jle
add
int3
add
add
push
arpl
inc
rcl
xchg
out
std
and
inc
adc
fs
mov
rorb
sbb
jp
jp
add
mov
in
xchg
inc
mov
mov
popa
dec
hlt
fiaddl
mov
sub
in
ljmp
add
push
push
and
cmp
sti
sbb
pop
or
or
mov
in
xchg
xchg
push
popa
jge
dec
sarb
nop
scas
xchg
insl
pop
nop
aad
addb
sbb
adc
inc
aas
jl
notl
pop
cmpsb
inc
push
pop
mov
sahf
jmp
push
es
cld
inc
inc
inc
addb
ss
loopne
jno
loope
pop
xor
mov
mulb
mov
inc
xchg
sub
add
cmpl
clc
mov
sub
dec
stos
jae,pt
setbe
push
and
push
stos
popf
or
scas
pop
mov
jg
mov
mov
bound
sbb
fucom
sar
xchg
push
hlt
mov
and
push
popf
loop
xchg
push
pusha
out
sbb
mov
lret
dec
out
out
pop
push
pop
mov
lds
std
jbe
aad
sar
adc
mov
jl
mov
cltd
xchg
cli
sbb
jns
shrb
xor
out
nop
mov
push
les
movsl
cmovp
mov
sbb
cs
xchg
jmp
ret
ja
push
aad
insl
push
dec
hlt
inc
lock
inc
cld
pop
dec
scas
lea
adc
fistl
or
mov
cmp
sbb
mov
push
sbb
inc
dec
daa
test
dec
push
mov
into
jnp
mov
aad
jl
mov
icebp
sub
cs
fs
aam
pop
pop
sub
pop
je
xor
movsb
and
std
xor
cs
mov
mov
enter
out
add
push
push
iret
sub
adc
inc
enter
mov
outsl
insl
test
sub
adc
jnp
in
adc
idivl
cmpsb
inc
clc
fiaddl
fs
insb
xchg
mov
jge
inc
int
add
adc
loop
inc
imull
mov
xchg
in
sbb
imulb
xor
or
mov
jns
lds
dec
cwtl
pop
mul
int3
xor
int3
adc
dec
mov
xchg
loope
pop
jae,pt
jg
out
adc
or
ja
aas
pop
mov
sbb
cmp
push
test
rclb
pop
mov
ds
inc
pop
mov
mov
aad
mov
mov
lods
data16
add
mov
xlat
push
xlat
ja
out
ss
mov
dec
enter
add
add
push
sub
jl
mulb
inc
mov
cmp
popf
lcall
sub
scas
mov
data16
test
lahf
das
add
inc
adc
inc
sahf
mov
icebp
pop
lret
xchg
xchg
sti
insl
cmp
mov
pop
pop
ljmp
dec
sbb
movsl
ja
mov
call
outsb
inc
iret
test
gs
lea
repnz
lahf
enter
movsl
ror
fsub
scas
sbb
pop
push
mov
iret
mov
leave
loopne
push
cmp
xor
daa
iret
lods
fstpt
pop
jp
ror
shll
adc
rorb
in
scas
dec
sbb
jp
jmp
ret
mov
dec
mov
ret
dec
or
xchg
jne
outsl
pop
or
outsl
xor
rorb
mov
push
adc
xchg
xor
mov
adc
lds
movups
in
add
adc
lods
mov
outsl
inc
dec
in
sbb
add
pusha
adc
ljmp
or
mov
std
into
leave
adc
mov
lahf
sbb
dec
dec
push
xor
sbb
mov
arpl
cmp
fimuls
inc
xor
cltd
xchg
xchg
lcall
sti
and
pop
pop
sbb
add
add
int3
and
sub
cltd
jo
xor
adc
mov
in
cmp
in
sbb
fs
lea
jb
pop
in
dec
jo
mov
insb
lret
loope
mov
jge
push
mov
xorb
mov
inc
arpl
xchg
out
loope
das
in
fsubrp
xor
sti
or
dec
push
push
dec
movsl
call
std
pushf
dec
cld
sub
mov
test
int3
dec
xchg
cmp
push
icebp
clc
cmp
cltd
arpl
flds
daa
je
pop
lcall
test
mov
cmp
out
js
cmp
xchg
and
hlt
sti
rcl
int
xor
mov
xchg
mov
sub
mov
mov
mov
pop
nop
cmp
sbb
in
mov
dec
nop
dec
into
cmp
cmp
pop
xchg
pop
xor
pushf
and
mov
imul
popa
cmp
je
xor
adc
mov
movsl
adc
push
scas
or
add
mov
lea
mov
xchg
push
test
add
rcll
pushl
and
loope
lret
add
int3
add
add
outsl
inc
sub
fistps
fistpll
leave
push
int3
add
sahf
out
push
and
push
fisttps
and
cmp
mov
mov
mov
sub
inc
stos
lea
jae
dec
out
mov
mov
dec
sbb
rcll
aaa
faddl
adc
les
sahf
mov
jmp
mov
fiadds
cld
push
fisubs
pushf
movsb
cs
gs
lahf
cmp
fldl
inc
nop
push
in
es
mov
repnz
data16
cld
imul
jg
ja
loop
dec
or
insb
push
xlat
and
call
cld
adc
adc
imul
xchg
xchg
or
adc
push
lock
leave
repz
sbb
cli
push
aad
and
cmp
xor
sub
push
in
dec
dec
lds
and
lcall
mov
mov
ret
jecxz
dec
add
or
inc
jp
dec
and
popf
add
mov
add
jo
fs
lret
lods
sub
push
sub
repz
fcos
sub
jbe
inc
mov
shlb
mov
fwait
push
movsb
sbb
arpl
sub
push
rcl
rcll
sete
arpl
int
in
std
xchg
mov
ret
sbb
loopne
lods
mov
loope
and
fimuls
mov
cmp
xchg
fistpl
xchg
adc
popf
jmp
dec
pop
mov
xchg
inc
lcall
mov
jne
push
ret
cmc
sbb
push
xchg
dec
xchg
and
jg
js
es
or
lahf
dec
adc
movsb
dec
mov
pop
out
sbb
xor
mov
inc
mov
and
mov
xchg
pusha
jge
gs
pusha
subl
negb
pusha
jne
push
add
test
shl
pop
mov
sbb
out
xor
pop
pop
push
repnz
stc
push
inc
es
fwait
in
sbb
mov
mov
pop
mov
jge
pop
or
lods
fwait
scas
fistpll
lea
or
cltd
std
mov
dec
repnz
repz
insb
mov
dec
arpl
mov
jmp
push
fimull
cmp
int3
push
cmpsl
int
test
jbe
and
je
mov
decb
mov
cs
test
mov
or
or
add
add
negb
out
lods
push
popa
popa
push
insl
loop
add
int3
add
add
adc
mov
jb
xor
rcl
dec
xchg
jge
and
mulb
push
and
xchg
lret
in
ficoms
decl
stos
push
mov
xor
mov
pusha
jb
add
sbb
jbe
sbb
or
gs
adc
cld
sti
pop
jg
sti
stos
mov
and
lret
mov
movsl
xorb
cmp
cwtl
fisttpl
pop
add
inc
std
sub
and
fsubrp
pusha
hlt
xor
jp
pop
into
mov
mov
movsl
cmpsb
pop
xchg
pop
outsb
cltd
inc
cli
cld
push
rcrb
pop
dec
add
sub
add
pushf
int3
inc
mov
adc
outsb
xchg
mov
clc
es
sbb
rol
jg
fmulp
mov
aas
jne
pop
stos
dec
mov
lods
es
adc
pop
sbb
adc
cli
pushf
inc
dec
jmp
cwtl
push
inc
repnz
cmp
pop
or
ljmp
xchg
sub
rclb
pop
jmp
rep
pop
ja
fdivr
jle
add
and
fiaddl
sarb
xchg
push
xor
add
loopne
lods
jg
mov
jmp
aaa
stos
pop
test
cltd
loope
test
and
jne
js
rcl
in
or
adc
cmpsl
sarb
adc
cmp
and
dec
xor
add
and
xchg
and
push
imul
mov
sbb
or
nop
mov
sub
popa
inc
ds
or
les
inc
out
addr16
pop
lahf
pop
jmp
mov
iret
idiv
jno
jle
popf
add
sub
std
xor
fwait
adc
loop
ret
aad
repnz
addr16
dec
repnz
inc
add
inc
sbb
or
gs
mov
sbb
cmpsb
test
mov
jne
lcall
or
test
sbb
mov
mov
sahf
mov
mov
add
sbb
xchg
fsubl
push
or
sbbb
cld
jnp
test
dec
enter
aam
enter
sub
aam
movsl
mov
mov
pop
pusha
mov
mov
xor
rcl
sbb
sahf
cmp
sbbb
xchg
in
lahf
icebp
lock
fwait
xor
xlat
adc
test
xchg
outsb
xchg
out
dec
lret
das
and
jmp
cmc
mov
lret
mov
aad
dec
and
out
lea
add
push
push
jnp
fisubs
sub
add
add
add
adc
add
int3
dec
std
inc
int3
jo
imul
jbe
and
test
xor
call
mov
repnz
in
inc
mov
inc
push
mov
lea
std
fdivs
mov
jne
mov
cltd
push
lea
pusha
test
ret
mov
or
jp
mov
sbb
sahf
jle
push
pop
jg
add
dec
outsl
mov
les
xsaveopt
mov
jg
or
and
push
push
addr16
andl
loop
sahf
pop
inc
iret
push
xchg
test
mov
xchg
fdivrs
jno
rcr
mov
lods
mov
das
lea
subb
loopne
arpl
sbb
das
push
mov
push
out
push
fldcw
dec
jl
mov
ret
imul
outsb
jo
les
inc
imul
dec
push
clc
out
jno
jno
or
div
loopne
and
in
and
xor
adc
cmpl
pop
out
sahf
mov
enter
mov
push
fcomps
dec
popa
xchg
shr
mov
sub
xchg
xchg
mov
icebp
push
push
jle
jecxz
push
ljmp
jmp
push
pop
mov
jnp
pop
test
jbe
jp
ss
outsl
pop
inc
cmc
aam
sbb
test
xor
fimuls
gs
test
mov
fistl
cmc
stos
jmp
xor
jl
mov
mov
shlb
cmpsb
sti
das
loopne
mov
xchg
cmp
mov
inc
fmull
xor
jle
xor
int
sub
sbb
fiaddl
inc
adc
mov
jmp
dec
hlt
test
pop
push
inc
test
cmp
mov
inc
movsb
stos
mov
mov
cwtl
stc
out
loope
add
shrl
jmp
jno
sarb
mov
inc
andl
and
lock
mov
jg
ss
push
inc
adcl
cmp
mov
mov
pop
dec
inc
jp
jp
hlt
jge
sub
mov
push
mov
ret
fimull
sub
stc
fs
jg
mov
xor
sbb
cmpsl
stos
jecxz
aas
inc
pop
pop
iret
imul
mov
adc
insb
and
repnz
adc
lret
iret
pop
test
lcall
jmp
and
add
in
das
fiadds
xor
pop
dec
mov
imul
add
cltd
enter
mov
push
outsb
mov
pop
loop
roll
add
add
add
mov
inc
cmpsb
mov
push
dec
inc
sbb
cmc
or
shlb
int
insb
mov
jge
pusha
fcomps
sub
push
push
push
push
sbb
add
adc
mov
xchg
sub
sub
fwait
or
dec
inc
out
jp
add
stos
stc
add
aas
aas
ret
push
fnstcw
outsb
xchg
into
leave
out
fs
push
rclb
fsub
sar
ja
xchg
jnp
push
mov
sub
inc
aam
mov
lret
pop
mov
pop
jecxz
mov
roll
jne
test
xchg
stos
into
xor
int
sarb
and
inc
mov
in
or
inc
pushf
cmc
popf
roll
xchg
into
push
dec
pusha
adc
shrb
xchg
stc
push
push
jne
stos
cmp
or
lock
dec
insb
mov
add
adc
push
add
adc
sbb
iret
lods
dec
mov
inc
fnstenv
testl
mov
cmp
dec
nop
xchg
jne
dec
or
stos
pop
push
xchg
aad
or
sbb
scas
mov
and
repnz
mov
lret
or
hlt
inc
pusha
bswap
xchg
push
mov
sub
mov
notb
shrb
in
adc
int3
fstl
rcr
stos
aad
lret
lock
ljmp
mov
lock
xchg
xor
mov
fldcw
mov
mov
push
sub
mov
or
lcall
jns
mov
inc
pop
inc
or
jbe
lea
inc
in
lret
shr
jp
loopne
repz
test
mov
cltd
in
test
jl
cltd
pop
repz
xchg
subb
stc
push
pop
dec
push
pushf
dec
cmpsl
sbbb
jl
clc
data16
jmp
popa
jo
das
test
jecxz
pop
push
mov
pop
movsl
xchg
sahf
out
adc
rcrl
sub
dec
mov
or
loope
sarl
and
xor
test
ljmp
shrl
mov
and
mov
mov
push
sahf
outsb
std
movsb
faddl
pop
mov
adc
xchg
cmp
bound
mov
sarl
mov
add
add
mov
or
es
lock
scas
xor
insb
push
addr16
inc
xchg
jns
lret
cltd
cmpsl
add
cmp
iret
test
jmp
mov
cwtl
mov
jns
jne
push
sub
testb
not
and
cmp
movsl
pop
and
sbb
jns
sbb
jge
int3
outsb
xchg
mov
negb
add
int3
add
add
rorl
jb
lahf
and
mov
or
sbb
loopne
jp
lods
popa
lea
addr16
mov
jg
repz
adc
outsl
or
pop
popf
mov
push
xchg
shlb
mov
sub
jmp
dec
call
pushf
pop
cmpsb
popa
or
movsb
push
imull
push
pop
cmp
pop
inc
and
addr16
adc
out
lods
dec
fs
push
pop
mov
leave
pop
loope
cmp
dec
sub
nop
mov
rcl
dec
jge
jno
push
sub
in
mov
pop
xchg
mov
sub
aaa
arpl
and
insb
inc
test
xlat
test
stc
call
cli
lods
mov
push
push
sub
mov
fstp
pop
and
adc
inc
add
shl
inc
cwtl
shrl
mov
and
cmp
popa
jns
bnd
jg
lock
in
mov
pop
outsl
es
scas
cltd
pop
or
cmp
xor
inc
mov
and
inc
mov
mov
cltd
outsl
out
icebp
xorb
mov
dec
pop
paddsw
push
std
mov
mov
push
mov
pushf
push
ss
inc
xor
cwtl
fnstsw
out
mov
sub
dec
push
fildll
xor
mov
in
pop
add
out
mov
mov
pop
or
bound
pop
push
sub
adc
rorl
pop
movsb
push
cmp
sub
js
std
gs
nop
adc
das
call
mov
add
dec
jmp
cltd
jmp
mov
stos
cmp
jb
shrl
cmp
iret
rcrl
das
push
sub
jmp
mov
adc
or
push
lahf
into
jg
jae
aad
and
dec
mov
sahf
pusha
sub
ja
enter
cli
jnp
xchg
fadd
pop
les
lret
mov
jmp
repz
inc
pusha
dec
enter
mov
jno
cmp
and
fistpl
mov
mov
fwait
pop
divl
sub
popa
push
add
push
inc
dec
lea
mov
sub
fisttps
pop
fcom
rcr
xchg
mov
ret
insb
stos
push
lahf
jp
add
mov
add
lcall
push
and
inc
in
fs
push
or
sub
cli
inc
or
cli
cltd
and
inc
fcmove
push
scas
addr16
test
add
add
roll
pop
sub
or
flds
add
add
add
pushf
dec
inc
popf
mov
push
shl
sub
test
jno
push
movsl
mov
inc
push
mul
fiaddl
push
lods
insb
pushf
xchg
mov
in
pop
xchg
pop
fisttps
push
add
xchg
sub
es
adc
mov
sbb
stc
fwait
dec
fstl
adc
fsubs
aas
or
adc
push
cmp
push
clc
jno
add
popf
ja
jp
or
jl
lea
sub
jecxz
fnstsw
pop
rorb
xchg
cmc
push
fidivrs
int3
xchg
inc
jb
out
lahf
and
and
fstpt
scas
adc
ja
aas
std
xchg
add
rorb
xor
push
shl
repz
sti
cmp
xor
gs
xchg
jne
idivb
sub
jne
ljmp
outsl
clc
lea
mov
fwait
xchg
mov
idivb
js
mov
jmp
xor
outsl
sub
xchg
out
addr16
adc
gs
add
decb
mov
out
jg
push
in
add
or
cld
loop
sbb
cmpb
test
mov
push
rol
cmp
test
je
sbb
mov
mov
mov
dec
pusha
psubb
mov
test
mov
idivb
adc
push
lock
rolb
test
adc
mov
sahf
and
jp
mov
dec
mov
outsl
leave
shr
test
imul
pop
cmp
xor
cmc
pop
andl
repz
ljmp
jae
shll
push
pop
mov
pop
mov
cmp
je
lret
lret
arpl
nop
mov
pop
pushw
lods
mov
leave
popf
ja
adc
icebp
lods
xor
sbb
ret
jp
call
dec
or
push
jo
mov
add
sbb
xor
inc
sbb
std
fisubrl
arpl
rclb
inc
push
imul
jne
lods
pop
add
sti
pop
or
jns
cmpsb
sbb
insb
pop
jnp
adc
aaa
xor
jmp
in
sub
dec
pop
xchg
push
mov
mov
jl
add
imul
into
add
in
pop
addr16
fnstcw
aam
or
jcxz
lds
psubusb
mov
icebp
out
xor
testl
sarb
lods
mov
push
negb
testb
sbb
pushf
cli
mov
scas
aad
xchg
dec
imul
fildl
add
add
add
xchg
cmp
dec
aas
push
int
test
into
loope
push
es
or
jg
stos
sbb
lcall
mov
xchg
call
dec
popf
adcb
xchg
jb
jl
and
outsb
mov
add
adc
call
call
jl
ja
dec
clc
pop
call
pusha
cli
and
ja
add
mov
lock
cld
push
loop
in
jno
push
pop
fbstp
mov
xchg
es
xchg
pop
fistps
mov
xor
mov
jle
dec
bound
cltd
adc
pop
jecxz
push
mov
or
ds
xor
xor
mov
es
rcr
gs
xor
out
test
mov
jns
js
jbe
sbbl
and
loope
les
dec
xor
pop
int3
aad
sbbb
mov
jns
jle
or
pop
fisubl
or
in
clc
ficompl
pusha
xor
pop
or
jbe
js
mov
cmp
adc
adc
mov
xchg
mov
push
fs
dec
out
aaa
xchg
cltd
or
iret
hlt
imull
lahf
sti
fstps
scas
pop
or
xor
inc
sub
and
jbe
lods
jns
ja
and
sub
lahf
mov
jmp
stc
or
inc
push
xor
fiaddl
xor
imull
mov
or
add
xchg
mov
lcall
inc
xchg
jb
mov
sub
jnp
xchg
cmp
hlt
sbb
add
aas
push
daa
push
dec
mov
or
nop
repnz
ret
dec
pop
sbb
out
pop
pop
pop
out
push
test
xchg
adc
mov
and
mov
fisttps
dec
das
jo
hlt
cmpb
test
or
test
pop
repz
fldenv
insl
rolb
insl
jg
loopne
add
or
pop
sbb
mov
jo
in
scas
ret
fnop
or
jns
cmovno
mov
mov
xchg
ret
and
xchg
push
fstl
or
dec
push
jb
and
jns
inc
and
pop
jl
loopne
ljmp
push
into
test
rep
and
fists
mov
jb
repnz
pop
or
cli
arpl
fld
int3
xchg
xor
inc
add
xchg
cmpsl
inc
add
jl
dec
xchg
pusha
jp
sub
and
mov
test
or
std
mov
add
add
fisubl
mov
test
add
add
add
xor
jb
shll
pushf
jecxz
fnstenv
mov
aaa
es
inc
lret
movsb
ja
cmpsb
pop
mov
cmpsb
iret
mov
cmp
xchg
mov
faddl
mov
push
jno
add
aad
xor
xchg
popl
adc
fucom
int
repnz
fdivs
decb
or
cmp
popf
loop
stos
repnz
not
gs
cwtl
add
jbe
jne
stc
mov
pop
and
pop
sbbl
cvtps2pi
inc
push
xchg
add
mov
mov
cmpsb
inc
jne
sub
loope
mov
cwtl
lods
sub
jp
push
mov
cmp
adc
icebp
push
in
pop
arpl
in
mov
les
call
cmp
fdiv
push
pop
add
sub
sub
sar
es
inc
stos
jg
fisubs
test
and
js
test
or
ficomps
es
aam
xchg
aas
xchg
sti
pushf
sbb
cmp
das
movsl
jecxz
stos
pop
jg
cld
iret
and
loope
in
or
and
jp
sbb
xchg
ds
push
std
sbb
or
mov
inc
and
js
or
inc
aam
inc
push
dec
cmp
in
jne
fstpl
sbb
je
ret
inc
in
aam
add
mov
out
dec
lea
insb
dec
xor
fsubrl
xchg
sbb
pop
add
mov
and
inc
push
xchg
mov
xchg
out
sub
mov
pop
jmp
jae
cmpsl
cmc
sti
outsb
sbb
mov
hlt
push
xchg
mov
pop
cmp
es
push
inc
or
movsl
pop
and
inc
and
aam
adc
fdivs
lock
push
and
or
out
hlt
cmp
jo
call
pop
xchg
push
mov
hlt
mov
sub
or
fmull
pusha
imul
pop
rolb
dec
data16
sbb
mov
cmp
pop
fisubl
loop
and
out
xlat
add
data16
mov
lcall
sub
push
loope
cmp
inc
loope
movsb
movsb
mov
mov
fbstp
imul
icebp
int3
pushf
sar
lahf
xchg
push
mov
mov
sbb
pop
fnstenv
mov
cmp
jge
sahf
pop
cmp
xlat
ljmp
test
pop
push
inc
hlt
fucomi
std
jno
xor
imul
mov
mov
add
iret
cmc
sti
pushf
loop,pt
mov
hlt
sub
add
int3
add
add
xor
in
dec
sub
mov
mov
enter
out
mov
ret
inc
stos
and
shrl
in
subb
push
bound
or
aas
sbb
imul
sahf
add
mov
flds
and
jge
ret
ficoms
aas
stc
mov
in
sti
mov
mov
arpl
nop
dec
adc
mov
int3
rclb
mov
or
fs
scas
cmp
stos
dec
or
or
lahf
int3
rol
and
inc
dec
jp
ja
xchg
je
cmpsb
sub
dec
xor
mov
frstor
popa
fstl
addl
scas
mov
scas
stos
test
mov
and
popa
pop
cmc
dec
lcall
inc
cmp
mov
sbb
jne
fnsave
pop
cmpsl
rorl
dec
push
gs
mov
mov
xor
push
js
push
out
jmp
mov
fnstsw
dec
fwait
lods
imulb
and
lahf
xchg
inc
into
xchg
sbb
pop
arpl
adc
cmc
out
pop
int3
mov
cltd
or
inc
out
mov
das
add
push
jae
loope
test
lods
jne
and
dec
or
mov
push
test
sub
xor
or
push
push
outsb
inc
xchg
mov
jge
cmpsb
inc
nop
fwait
hlt
inc
repz
popf
sub
cmc
pop
push
fwait
lds
arpl
and
inc
sbb
testb
adc
jbe
aaa
icebp
clc
outsb
xchg
xor
imul
out
mov
mov
cmp
mov
mov
mov
and
subb
jge
sbb
sbb
outsl
pop
dec
in
clc
lods
and
sbb
inc
xor
push
jle
adc
gs
or
pop
scas
jae
add
xor
sbb
or
add
out
xchg
daa
mov
add
scas
imul
sub
inc
scas
add
jno
in
fisubs
add
mov
xchg
adc
jb
pop
je
insb
aas
add
incl
push
cmpsl
mov
xlat
jp
pushl
stc
push
lahf
loop
into
xor
xchg
jns
push
test
fadd
jno
xor
sbb
inc
cmpsl
cmpsl
loope
push
nop
int3
fwait
jecxz
push
dec
mov
mov
pop
dec
sbb
mov
add
lock
lock
rcr
dec
scas
push
xchg
std
cmp
stc
int
xor
in
jmp
add
int3
add
add
xor
rol
sub
insl
inc
out
cmp
cmp
bound
je
sbb
push
fcmovb
repz
adcb
sub
push
fwait
inc
insb
xor
out
xor
push
and
mov
lcall
add
ret
pop
repz
cli
fsubr
pop
jge
enter
std
sbb
insl
movsl
sarb
imul
pop
pusha
push
mov
stc
lcall
lret
lock
enter
lcall
arpl
es
lcall
pushl
out
in
sub
andl
scas
into
pop
pop
mov
out
addb
push
std
mov
add
sub
stos
mov
cmpsl
inc
pop
mov
iret
in
scas
out
dec
pusha
es
incb
dec
and
pop
hlt
add
mov
or
test
xchg
mov
mov
je
and
xorb
pop
repnz
mov
out
inc
jae
pop
adc
add
mov
jno
push
mov
outsl
jle
ret
jne
cmp
bound
das
dec
mov
sub
and
sbb
push
fsts
mov
xor
push
jg,pn
in
pop
mov
xor
fsubrl
aam
shll
pop
add
hlt
pop
loope
and
nop
aad
or
jne
sub
xor
test
pusha
pop
jbe
enter
mov
jae
push
test
and
xor
js
icebp
inc
xchg
and
ljmp
inc
adc
jg
dec
pop
movsl
pop
and
imul
scas
adc
in
push
cli
fwait
jae
and
dec
repz
dec
cs
mov
int3
cmp
and
pop
arpl
mov
imul
aaa
cwtl
pusha
popf
outsl
xor
pop
sarb
data16
je
xor
jno
ror
or
jb
xchg
cmp
popa
adc
and
push
xor
adc
mov
jecxz
jle
sub
cmp
jecxz
cmp
out
out
push
mov
dec
in
dec
imull
cmp
xor
jnp
mov
cli
xor
and
stos
aaa
fbstp
divb
mov
jne
dec
pushf
fmuls
xor
pop
xor
mov
add
adc
or
imul
fisubl
inc
cmp
jl
lock
sbb
or
adc
shrl
add
cmp
mov
add
adc
rcrl
data16
adc
lret
xor
add
