push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
pop
ss
jo
jo
jg
jo
xlat
cmp
rol
pop
push
add
ret
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
pop
cwtl
rclb
jle
divl
dec
daa
and
xchg
pushl
xor
push
mov
rcll
xor
fildll
scas
add
sub
xchg
cmp
fwait
bound
decl
cmpsb
ss
loopne
push
adc
adcl
popf
push
cmovno
icebp
repz
sub
shl
stos
into
test
sahf
int3
mov
jl
xchg
out
sahf
std
ret
jae
or
pop
adc
adc
pop
xchg
ja
mov
xchg
movsb
sar
pushf
push
dec
push
push
xor
add
sbb
inc
xchg
sub
popf
ss
cmc
fwait
stos
adc
adc
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
jg
jo
jg
jo
jo
xor
push
jmp
xchg
push
jae
cmc
fwait
and
inc
xorl
adc
sbbl
cli
hlt
xchg
cmp
js
mov
sbbb
dec
ds
hlt
repz
adc
bound
sarb
lret
divb
xchg
shrb
dec
mov
dec
mov
dec
adc
lret
stc
out
scas
je
mov
inc
movsb
mov
push
dec
insb
or
cmp
lea
fs
fs
and
and
and
jp
mov
pop
fdivrs
mov
or
mov
inc
inc
sub
leave
jl
sub
push
jmp
fisttps
mov
jmp
xchg
mov
cmpb
or
test
insl
push
dec
das
insb
inc
mov
add
das
fldl
sub
xor
sbb
adc
mov
testl
xchg
mov
pop
mov
repz
push
mov
in
push
in
sti
dec
push
insb
inc
shr
push
and
lds
sbb
inc
xchg
arpl
call
out
loope
sub
jo
mov
dec
test
into
jp
addl
lret
mov
add
add
pushf
sbb
pusha
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
mov
and
in
jo
mov
mov
ljmp
add
and
push
icebp
jp
decl
add
movsl
cmc
xchg
inc
mov
test
in
movsb
push
mov
out
mov
gs
cs
aas
cmove
and
nop
int
lret
pop
add
lret
repz
and
shll
adc
pop
pop
pushf
lret
or
mov
lods
aas
mov
push
mov
jnp
outsl
in
push
xchg
cmpb
add
fucom
xchg
in
xchg
jbe
lcall
mov
aam
test
arpl
popf
outsb
scas
xor
xchg
adcl
faddl
pop
jb
sub
push
sahf
sbb
jae
pop
push
xchg
jo
xchg
call
std
scas
mov
mov
sub
in
xchg
lods
sub
lahf
fidivs
inc
add
dec
hlt
xor
ljmp
lcall
and
sahf
cmp
mov
out
cmp
popa
orl
icebp
jmp
mov
mov
jmp
outsb
imulb
inc
insb
jne
xor
and
mov
pop
pop
mov
aam
cmp
cmp
stos
vaddps
jg
sarb
push
jmp
sbb
ficomps
fs
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
xor
cmp
jo
jg
jo
cmp
pusha
icebp
sub
xchg
pop
lods
pop
aad
jge
cmp
xor
dec
std
jnp
outsl
or
push
fwait
mov
and
sub
rcll
dec
xchg
sub
imul
call
pop
scas
pop
sahf
mov
dec
jnp
ss
adc
and
cmp
adc
enter
xor
adc
shll
rolb
clc
lds
cmp
out
rorb
dec
movsb
jb
scas
test
inc
jne
mov
ljmp
pop
ja
xor
cli
jmp
add
jbe
pusha
xchg
and
jbe
xchg
mov
dec
add
jnp
repnz
in
push
test
or
lods
pop
add
cli
mov
and
cmp
mov
mov
inc
cmp
adc
loopne
ficoml
mov
psrlw
imulb
mov
jne
in
jno
jb
fcmovne
xorl
xchg
pop
pop
sub
imul
adc
imul
enter
mov
lret
inc
ret
imul
pusha
test
fs
jecxz
clc
pop
mov
aam
loop
in
je
mov
out
sub
cs
dec
xor
movsb
mov
xchg
push
outsb
repz
push
mov
ret
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
pop
jp
call
xchg
jge
jo
das
ds
add
lea
aam
sahf
jb
mov
cs
mov
in
cmpsb
jmp
mov
cmp
fnstsw
jecxz
pop
mov
or
test
fistpl
mov
fmull
shrb
in
cmp
sub
mov
xor
loop
lahf
aas
jb
xor
aas
lea
cmpsl
lahf
push
push
sbb
cmp
inc
into
xor
cmc
mov
cmp
cmpsl
insl
pop
and
inc
cmpsb
mov
lahf
and
and
test
and
js
rorl
popa
fwait
in
mov
sbb
bound
in
push
or
sbb
aas
icebp
pop
repnz
inc
add
imul
sarb
fadd
rolb
xchg
scas
and
into
insb
jb
shrl
gs
shlb
icebp
jg
lds
cmc
fcmovnu
pop
mov
mov
mov
pop
sahf
arpl
insb
pop
lcall
xchg
mov
jb
adc
lock
dec
xor
jbe
xor
jae
push
lock
jmp
xor
lock
cmp
inc
insl
inc
sbb
add
stc
incl
sub
fdivr
mov
bound
jge
out
or
dec
cwtl
xchg
cltd
mov
daa
aas
xor
and
xchg
cmp
not
lcall
fcomps
jns
mov
push
out
sub
mov
shll
test
jno
xchg
pop
sbb
mov
insb
sub
jecxz
jnp
or
test
ret
scas
xor
push
cld
outsb
add
imul
mov
test
pop
repnz
xchg
push
or
mov
push
repnz
sub
push
mov
sbb
add
pushf
xor
sbb
bound
daa
xchg
push
cmpsb
xchg
inc
cmp
pop
and
sub
inc
push
sub
aas
push
jnp
push
jecxz
fisttpll
pop
enter
xor
mov
add
stos
jp
or
nop
xor
sub
subb
rcrl
test
jg
sbb
mov
jnp
xchg
cmp
mov
data16
stc
xor
push
pop
and
imul
pop
lcall
gs
jge
mov
inc
fisttps
push
dec
lret
aam
sbb
fnstcw
pop
int
aad
test
lods
jmp
mov
dec
pop
popa
lret
cmp
les
xor
jbe
ljmp
lods
xor
test
and
pop
inc
jb
mov
adc
hlt
pop
fistpl
jo
sbb
cmp
sbbb
outsl
mov
sbb
out
pop
cmp
pushf
and
jle
arpl
das
xchg
ror
in
nop
fmul
je
movsb
je
cmp
movb
pushf
ret
fsubs
mov
mov
pop
out
shlb
rcl
out
cmp
sbb
cmc
jae
or
ljmp
sbb
inc
cmpsl
arpl
xor
dec
cmp
xchg
lret
lret
push
push
clc
add
adc
nop
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
add
jo
xchg
jge
jo
mov
add
add
fsub
mov
adc
and
push
sbb
je
clc
inc
mov
push
sahf
lods
jbe
xor
mov
push
and
or
push
movsl
mov
ret
dec
sahf
dec
es
push
jnp
xlat
and
mov
pop
mov
ret
xchg
lahf
push
gs
jmp
mov
rol
ja
push
rcl
pop
sub
dec
in
inc
mov
pop
push
insb
dec
cmp
orb
filds
mov
cmp
cld
stc
jg
scas
lds
dec
push
stos
adc
out
mov
call
imul
fildl
stos
adc
fdivrl
mov
and
into
jne
pop
jno
xchg
pop
sbb
inc
sbb
lock
fs
jg
sbb
arpl
adc
lds
fstl
faddl
pushf
jns
cmp
js
enter
mov
dec
andl
scas
xchg
sar
cmp
push
sbb
inc
push
imul
jp
movsl
mov
cmp
xchg
arpl
mov
cld
push
and
cmpsl
fidivs
pushf
mov
in
movsb
mov
loop
fmull
mov
adc
shlb
daa
add
inc
lret
aaa
xchg
inc
cmpsl
pop
lods
xchg
xchg
repz
jg
xchg
fiadds
jl
ret
faddl
jnp
push
icebp
notl
adc
xor
dec
jge
jge
push
adc
mov
pop
xor
xor
dec
cld
xchg
xor
in
xchg
frstor
outsl
cltd
and
push
rcrl
push
jns
dec
jmp
insl
add
and
les
jno
pusha
ud2
mov
pop
jae
ljmp
jecxz
out
push
mov
xchg
lock
sbb
push
or
add
in
loop
jno
dec
pop
cs
jge
dec
jle
divl
jecxz
mov
adc
pop
mov
cmp
push
inc
mov
sub
aam
movsl
sub
loope
das
push
sbb
test
cld
ljmp
mov
call
shll
jbe
mov
cld
jmp
pop
adc
adc
mov
outsl
cli
mov
cli
lock
xor
frstpm(287
arpl
imul
sub
mov
orl
and
scas
push
cmp
shlb
scas
push
popa
outsb
jmp
xchg
cmp
pusha
xchg
scas
repz
push
sbb
jg
xor
subl
stos
push
jns
lea
push
sbb
decb
inc
sbb
push
mov
mov
mov
rcrl
sbb
push
mov
or
cmp
inc
add
pop
xchg
inc
adc
fists
xchg
add
stos
pop
scas
and
dec
scas
xor
mov
mov
adc
scas
test
mov
lret
xchg
mov
in
pop
mov
insl
fcompl
fcmovnu
mov
sub
lock
mov
je
ret
mov
jnp
fs
scas
mov
or
mov
daa
insl
xchg
cmpsb
push
xchg
pop
pop
sbb
mov
cltd
mov
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
and
add
jo
jge
jo
sub
adc
adcl
sarl
xchg
jl
pop
xor
mov
popf
or
mov
cltd
int
jo
stos
stos
fidivrs
add
test
and
pop
cmpsl
jae
cmp
lods
inc
jnp
loopne
loop
clc
jne
rorl
sbb
fs
jns
mov
dec
popa
stc
dec
mov
xor
jecxz
cmpsb
pop
xlat
test
mov
jl
mov
cmpsl
imul
lods
sbb
fs
xchg
dec
adc
fildl
enter
cmc
sub
pop
in
ja
test
push
clc
shrb
xchg
cmp
popf
mov
in
lods
lds
add
addl
loope
xorl
pop
inc
push
movsb
aad
add
mov
and
dec
nop
clc
imul
subb
es
and
xchg
jns
popf
jge
mov
dec
jecxz
repz
push
dec
jl
sbb
or
pop
add
add
lea
dec
push
out
in
mov
iret
test
icebp
movsl
mov
scas
ret
xchg
dec
mov
lea
jg
mov
sub
out
jg
daa
adc
lods
sbb
and
repnz
or
data16
mov
inc
adc
add
pop
cmp
adcl
fnstenv
lret
loopne
cltd
shl
mov
sahf
sbb
loope
roll
push
pop
out
add
mov
icebp
cmc
dec
sarb
sbb
hlt
jno
data16
pop
cmp
xor
test
xlat
sar
mov
ret
ret
push
xor
cmp
jo
ret
lret
add
clc
jb
inc
daa
push
sub
mov
jno
sahf
xchg
pusha
mov
out
lods
mov
rcl
scas
fcoms
xchg
mov
adc
and
test
sti
std
outsl
aad
shlb
mov
mov
mov
out
mov
lcall
add
stc
pop
sub
scas
mov
movsb
jo
lahf
jmp
jmp
addr16
loope
cld
cmpl
cmc
cltd
pop
xor
sbb
sbb
and
in
aad
mov
mov
pop
or
ret
xlat
ss
inc
mov
clc
and
push
lods
lods
nop
imul
loope
adc
sahf
outsb
test
imul
push
mov
jmp
cmp
jg
stos
lock
jp
or
sub
mov
xchg
mov
xchg
mul
out
dec
or
stos
inc
loopne
cmp
aas
inc
nop
in
jmp
xor
ss
mov
jns
pop
or
cwtl
je
insl
popf
scas
call
mov
stos
clc
sbb
add
subb
and
test
adc
mov
fsubs
xor
lock
stc
pop
test
mov
in
sbb
jo
sub
test
stc
loope
std
mov
jmp
pop
test
loopne
cmpsl
add
insl
lret
data16
fidivrs
add
mov
mov
inc
insb
add
je
imul
xor
mov
lock
push
js
mov
repz
loop
mov
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
enter
jmp
jge
jo
loop
push
inc
lds
add
xor
mov
rclb
enter
leave
inc
adc
mov
push
out
adc
and
adc
dec
test
jge
xorb
arpl
xor
pop
inc
xchg
xor
mov
inc
inc
jne
xchg
shll
cmp
cmp
rcl
bound
mov
lret
mov
sbb
test
aad
lret
jne
xchg
ds
xchg
idivl
movl
lcall
ficomps
cmp
jne
ja
movsb
sbb
xlat
mov
and
adc
jnp
arpl
lea
or
jg
int3
pop
fcomps
shrb
xlat
loop
mov
ja
add
aas
cli
icebp
shlb
adc
movsb
mov
mov
push
and
or
xchg
test
cltd
icebp
pop
jp
lods
cmc
test
cmp
sub
sbb
insb
test
pop
cs
mov
imul
pop
mov
faddl
mov
push
test
push
rcr
or
add
fiaddl
inc
inc
push
fs
jl
xchg
rorl
mov
add
popa
push
ret
jg
arpl
mov
repnz
cmp
sbb
lea
movsb
repnz
cmp
add
jge
adc
out
jecxz
mov
arpl
pop
xor
or
fidivl
outsb
test
cmp
sub
and
cmp
mov
sbb
pop
loop
pop
inc
iret
sub
notb
inc
ficoms
scas
movsl
ss
movsb
push
jae
clc
xor
push
popa
sub
push
push
and
sbb
dec
repz
and
or
sbb
aad
mov
lcall
movsl
cmp
fldl
lea
icebp
or
loope
xchg
out
mov
push
xor
xchg
xor
mov
push
out
aad
mov
mov
mov
sbb
addr16
adc
mov
sub
or
mov
push
dec
sub
adc
xchg
fwait
aas
mov
outsl
int
fimuls
add
jae
pop
bound
idivb
inc
mov
mov
push
je
xchg
ret
add
mov
incl
iret
lcall
outsl
das
fsubp
sarb
pop
js
arpl
int3
push
dec
fwait
in
jp
addr16
gs
sbb
negl
insl
jbe
popa
scas
rorb
adc
stos
xchg
dec
adc
nop
sbbb
mov
call
fdivrl
cmpb
mulb
rorl
xchg
mov
push
fdivrp
idivl
mov
test
dec
test
dec
andb
push
out
add
adc
pop
inc
lods
cmp
shrb
inc
jmp
das
in
shll
loopne
pop
push
addr16
popf
aam
jns
jg
jb
cltd
add
movq
or
js
imul
add
aas
ret
or
jbe
pop
int
adc
xor
in
shl
pop
fstpt
mov
xor
jp
xchg
push
fiadds
push
in
xor
xchg
idivb
xchg
cmp
leave
pushf
bnd
outsl
cmp
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
xor
or
jo
jge
jo
das
xchg
cmp
imul
repnz
jge
call
stc
jmp
insl
mov
push
jo
icebp
std
or
pop
outsb
mov
mov
mov
into
mov
in
mov
pop
pop
fdivr
popa
sbb
ss
leave
cmpsb
jmp
push
jecxz
loope
cs
add
xorb
inc
dec
adc
pop
push
int3
test
test
mov
jmp
subl
out
ljmp
sbb
aaa
mov
cmp
cmp
test
aad
fucomp
int
cwtl
and
nop
lods
mov
fwait
hlt
loope
frstor
fists
dec
adc
cmc
inc
mov
or
push
outsb
or
mov
pop
call
pop
mov
lcall
mov
ret
leave
sub
cmp
jecxz
leave
popa
fisttpl
add
addb
jns
mov
mov
insl
repz
push
test
outsb
dec
mov
sub
adc
in
cmp
movsl
js
jmp
adc
stos
mov
icebp
jne
mov
test
fistps
cmp
pop
add
scas
dec
popf
lods
test
adc
lds
and
fbld
dec
xor
shll
pop
push
dec
mov
push
or
repnz
call
jns
xor
sbb
imul
jno
jae
sbb
sbb
xchg
cld
call
aad
cwtl
loope
emms
popa
xchg
lahf
lea
pushf
jl
loop
icebp
pop
test
stos
dec
xchg
fsubrl
and
xchg
mov
pop
xchg
jg
lods
out
push
mov
adc
xor
xchg
daa
loop
lods
dec
les
fisttps
mov
xchg
and
adc
jg
aad
sub
pop
bound
les
rcrl
and
or
xchg
into
js
aas
cli
in
fldenv
movsl
aad
pop
push
cmc
sbb
add
or
div
xchg
and
mov
fisttps
push
test
mov
ljmp
jmp
stos
mov
pop
pop
cmpsb
pop
xor
jg
leave
fneni(8087
push
mov
mov
fildll
xchg
adc
add
sub
xchg
pop
outsb
mov
jbe
ds
xchg
fs
mov
xchg
inc
psubsb
shl
push
sarl
fs
shl
pushf
das
or
pop
dec
vpperm
jns
ret
add
or
lret
inc
push
sbb
dec
push
adc
repnz
xor
lods
int
loopne
sub
fmulp
xor
jp
sub
jo
movb
or
xor
mov
arpl
out
jnp
and
sub
jno
outsb
add
jp
and
adc
jecxz
jnp
pushf
mov
push
pop
sbb
or
add
sahf
mov
cmp
push
mov
sbb
popf
mov
push
ja
push
popf
push
adc
push
mov
scas
out
shl
and
fimuls
push
adc
lea
jnp
pushf
xchg
fnstenv
xor
add
adc
mov
test
jp
xchg
push
repz
loopne
mov
jmp
cs
loopne
in
jnp
jmp
jb
adc
or
xchg
jge
jo
notl
pop
ja
cmpsw
ja
rcll
mov
mov
fidivrl
add
dec
lea
mov
inc
pop
es
dec
lea
rcl
and
jmp
cwtl
fs
lock
outsl
pop
add
hlt
inc
add
cld
cli
mov
jns
pop
ret
dec
sbb
sbb
addb
jo
push
push
adc
cwtl
rolb
xor
dec
or
lods
mov
repz
outsb
or
rcl
push
sub
dec
adc
xor
adc
xchg
xchg
cmp
dec
jne
inc
inc
outsb
test
mov
sub
call
lret
aam
imul
cmpb
insb
mov
push
push
lds
aad
gs
das
mov
pop
adc
jl
mov
and
jge
pop
daa
stos
mov
test
inc
add
call
outsb
pop
shll
mov
int3
adc
test
stos
imul
mov
push
xor
fsubr
test
fstl
cmpsb
lea
shlb
inc
xor
jecxz
cli
pop
add
test
test
mov
lea
int
stc
jl
shr
lahf
adc
and
cmpsl
call
aad
hlt
pop
pusha
fnsave
aam
mov
mov
dec
rolb
mov
jp
cmp
and
dec
mov
std
outsb
pop
arpl
push
mov
sub
xor
dec
pop
and
bts
push
jmp
pushf
adcb
xlat
or
sub
dec
inc
sbb
pop
into
fcmovnb
lock
xor
xlat
xchg
shr
bnd
call
cmp
cmp
xor
mov
lret
adc
mov
loopne
cmp
xchg
lds
and
adc
cs
insb
in
inc
fwait
pop
ljmp
xor
add
ret
sub
je
stos
movsb
xor
xchg
add
insb
add
inc
aaa
imul
movsl
test
mov
lods
repz
jb
ljmp
rcrl
sub
cli
testl
pop
or
add
push
pop
jmp
pop
pushf
cmp
ficompl
cmp
xchg
dec
mov
mov
cwtl
jle
xor
sbb
xlat
inc
rolb
mov
inc
sbb
sbb
xchg
adc
lock
add
jne
adcl
movsb
popf
movsl
mov
in
in
mov
push
arpl
cmp
mov
jns
in
pop
sahf
aam
ret
jb
jo
and
push
cli
stos
sub
ret
mov
cli
ret
pop
repnz
push
scas
cmp
inc
add
into
xchg
cmp
ret
adc
fs
push
out
sub
stos
mov
fiadds
outsl
xlat
out
mov
add
outsl
lret
push
mov
xchg
out
lahf
getsec
add
out
push
pop
outsl
in
or
push
notl
divb
add
mov
jp
jbe
mov
orl
daa
in
sub
andl
xor
jmp
data16
in
int3
jne
popa
jno
imul
ja
adc
jo
mov
aam
pop
adc
and
or
daa
ja
outsb
das
cmp
or
pop
rcl
ja
xchg
nop
jp
jbe
es
cmpsb
mov
xlat
sbb
sbb
lea
jmp
fcomps
jecxz
xor
sub
sbb
sbb
incl
shlb
fldcw
aad
int
hlt
lret
cmp
enter
out
xor
and
xlat
xchg
nop
loopne
ret
test
adc
xor
cmp
fdivp
xchg
sbb
movsl
mov
fdivs
roll
pop
xchg
add
je
jecxz
aas
inc
cld
int3
mov
sar
mov
jmp
sahf
cmpsl
cmp
es
xchg
outsl
cltd
js
adcl
or
jmp
je
insb
inc
jge
sub
or
sub
dec
add
push
pop
and
stos
pop
push
test
das
sbb
out
lret
sub
cmp
aad
cld
xchg
jnp
sub
mov
jnp
dec
xor
das
push
jo
hlt
add
call
mov
scas
cwtl
imul
mov
movsl
pop
mov
adc
shlb
ret
cmp
scas
push
mov
aam
js
cmc
sbb
xor
stos
into
inc
dec
sarl
sub
insb
sbb
loope
jne
push
jae
jno
inc
stos
pop
aaa
ljmp
test
adc
or
lods
fstps
pop
add
add
ret
pop
push
cmp
adc
inc
pop
adc
pop
ds
sub
ljmp
hlt
pusha
jne
jnp
inc
inc
stc
or
iret
jno
and
cli
mov
mov
movb
rorl
hlt
shr
mov
mov
fbld
into
adc
mov
or
push
xor
rol
pop
sub
cmp
and
rcrl
pushf
mov
jae
adc
fs
lret
fildll
test
iret
or
mov
shl
data16
mov
stc
push
xlat
or
enter
sub
jg
jb
scas
jb
push
adc
icebp
test
hlt
mov
push
lods
pop
int
jmp
xchg
lock
out
pop
sbb
aad
aad
idivb
inc
cmp
mov
dec
ja
cs
or
push
lods
mov
in
imul
adc
sub
mov
out
pop
rep
sti
pop
movsb
imul
mov
das
inc
mov
in
arpl
cmp
inc
dec
scas
adc
xor
mov
dec
or
jle
out
dec
and
push
push
add
sbb
jecxz
xchg
sub
ja
push
and
bound
fisttps
push
ficompl
jne
jns
sbb
jno
or
mov
movq
xchg
inc
xor
cwtl
xor
or
pop
pusha
popf
insl
mov
mov
sbb
push
aaa
adc
and
mov
cmpsl
mov
iret
dec
mov
shll
in
and
mov
mov
es
pop
lods
test
sub
iret
imul
and
fcmovu
xor
les
stc
lret
sbbb
out
xchg
or
arpl
or
out
test
xchg
std
mov
sub
rolb
in
xchg
rorb
daa
in
out
mov
sub
add
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
inc
mov
push
adc
xchg
jge
jo
jmp
stos
sub
mov
add
mov
pop
pop
shlb
jmp
outsl
test
daa
xchg
xchg
lds
adc
pop
cmp
pop
xor
jecxz
popa
cmc
push
pushf
lea
shrb
sub
rolb
mov
adc
bound
gs
mov
adcl
lahf
xor
sub
push
inc
jb
jnp
js
mov
movsl
sbb
sub
decb
xchg
gs
pop
mov
sti
add
xorl
jns
mov
push
add
neg
imul
mov
pop
in
cmp
sbb
mov
rcll
adc
xor
in
movsb
repnz
push
in
adc
cmp
ds
cmp
mov
mov
adc
lret
loop
mov
leave
adc
jge
lods
adc
sub
mov
or
sbb
cmc
ljmp
inc
mov
adc
ja
call
mov
sub
int
add
mov
das
scas
add
sbb
and
xchg
pop
cmp
mov
jl
push
call
adc
lods
adc
mov
or
mov
sub
jns
adc
or
jg
and
push
ljmp
xor
and
pop
dec
inc
scas
xor
les
repz
outsl
lret
call
mov
int
in
outsb
lret
icebp
pop
cli
push
xor
mov
inc
in
push
mov
out
imul
inc
clc
setbe
adc
pop
cmp
movsb
mov
fmuls
jge
hlt
jns
out
inc
sub
pop
leave
lahf
mov
sub
push
xchg
mov
mov
jno
mov
movsl
xor
adc
jge
jno
lea
mov
inc
add
push
mul
push
rol
popf
adc
sub
call
or
arpl
adc
push
fadds
jl
push
ds
jno
pushf
nop
push
push
adcb
adc
and
sub
sub
hlt
jl
sbb
jbe
add
push
pop
adc
cs
mov
pop
rcrb
pop
out
xor
pushf
stc
stos
jmp
xchg
cmc
mov
scas
pop
aas
pop
sub
cli
imul
sub
sbb
clc
out
insb
int3
pushf
inc
fnsave
adc
or
mov
loop
fldcw
jge
popf
nop
sub
test
mov
jmp
pop
ss
pop
lods
shrb
nop
jbe
xor
pusha
jl
pop
ljmp
outsl
enter
mov
inc
enter
lcall
stos
hlt
ljmp
or
sti
and
push
out
adc
iret
fcmovne
and
dec
cmp
insl
xor
xchg
jns
mov
sub
gs
adc
pop
pop
cmpsl
imul
sub
sbb
addr16
out
test
push
shrb
xchg
jg
sub
sub
and
sbb
ret
mov
loopne
fsts
sahf
inc
scas
jmp
cmc
movsl
sbb
aaa
stc
adcl
fistps
nop
and
mov
in
shlb
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
bound
jo
jg
jo
pusha
in
stos
lds
lock
add
in
and
mov
stc
adc
or
push
jae
roll
xchg
cmp
pop
loopne
fnstcw
ds
in
adcl
lods
aam
aas
int3
js
lds
xor
test
add
jecxz
out
leave
mov
adc
enter
imul
lea
or
mov
paddusb
and
jnp
fadds
scas
les
cld
js
cmp
imul
adc
add
jb
cmp
data16
xor
mov
jae
pop
std
and
add
or
cmpsb
xor
dec
sbb
pop
adc
xor
or
sbb
aas
pop
cmp
sub
pop
out
loopne
mov
fsubrs
xor
imull
arpl
rorb
in
lahf
loopne
cmp
inc
xor
loop
ljmp
lods
sbb
repnz
sbb
movsb
rolb
push
fbld
cmp
adc
repz
jbe
addr16
mov
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
sbb
lods
jle
sbb
jo
or
sub
test
outsl
out
in
push
mov
repnz
ss
xchg
out
adc
mov
cmpsb
es
sar
jmp
xorl
pop
shlb
lret
inc
popa
int
test
insl
jb
jno
and
dec
jmp
sub
push
xor
fcompl
cmp
xchg
mov
or
dec
or
dec
jne
test
lods
pop
adc
pop
xor
dec
xchg
push
lock
mov
xchg
bound
lahf
xchg
mov
int3
push
aad
and
jmp
sub
in
clc
das
mov
shrl
adc
or
cmp
inc
ljmp
in
push
pusha
cmc
fdivrs
inc
leave
push
cmc
push
push
ret
ss
jae
lds
cli
es
push
mov
and
dec
mov
xor
shrl
cmp
popa
out
mov
lock
add
mov
mov
add
ja
cmp
fcompl
dec
or
hlt
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
lcall
jo
jg
jo
bound
adc
pop
xorb
pop
mov
imul
in
in
ret
rcrl
cltd
jmp
sbb
test
mov
xchg
into
cwtl
xor
xlat
pop
into
bound
push
cmpsl
sti
dec
cwtl
and
fwait
in
sub
pop
pusha
mov
mov
sbb
add
stos
insb
in
or
mov
sbb
gs
or
int
cmp
scas
xor
or
push
test
push
pop
fdivrl
clc
sarb
insl
inc
aas
mov
or
mov
or
lret
orb
insl
mov
mov
or
ds
repz
dec
data16
dec
mov
popa
lahf
sbb
sbb
adc
pop
dec
subb
or
jno
dec
sub
popa
fstps
sbb
out
and
mov
pop
mov
pop
cmp
insl
jmp
cltd
out
or
adc
scas
sti
dec
mov
lea
pushf
jmp
mov
imul
jne
xor
test
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
push
or
sbb
sbb
jo
pop
fcoms
fidivrl
sbb
nop
test
mov
pause
jg
lret
dec
xor
nop
sar
out
lret
cmpsb
xchg
pop
fcomps
mov
add
xor
and
dec
loopne
push
mov
ret
pop
xchg
and
lahf
inc
cmp
sbb
mov
push
enter
lahf
cwtl
or
push
fcomip
bound
sbb
popa
fs
fldl
pop
xchg
inc
lcall
jecxz
shll
adc
pop
repz
xlat
push
sub
in
pop
cmpsb
push
fnstcw
push
add
fs
ret
inc
dec
ljmp
pusha
roll
les
rclb
pop
ss
fistpll
cmp
inc
fucomi
insb
popf
cmc
adc
cs
mov
or
or
outsb
mov
ss
imul
jnp
iret
cmp
or
dec
cli
les
mov
push
icebp
adc
imul
pop
inc
and
loop
or
pop
movsl
inc
mov
rcrb
inc
clc
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
xorb
mov
mov
jne
sbb
xchg
sub
insb
jno
xchg
mov
jae
imul
aas
push
or
stos
inc
lcall
test
sarl
gs
loope
mov
fwait
aam
and
mov
leave
xchg
sbb
mov
ja
jno
add
sub
push
add
mov
js
dec
cmp
aam
sub
fbstp
mov
or
xchg
push
or
arpl
popa
cs
mov
adc
inc
push
jg
dec
out
insl
adcl
pop
dec
arpl
ret
or
cwtl
sahf
sahf
jae
mov
jp
push
jnp
cmp
xlat
test
leave
gs
sbb
xchg
fisttps
jbe
inc
jmp
andb
push
jns
in
push
dec
out
xchg
jle
jmp
aas
repnz
add
test
movsl
push
test
jecxz
lds
xor
ficoml
push
fbstp
dec
xor
add
mov
mov
xor
add
jmp
ffree
adcb
mov
outsl
xor
jo
sbb
jo
repz
nop
das
stc
pushf
xor
and
lock
push
push
cmp
nop
jmp
and
xor
fwait
adc
push
ret
lds
hlt
jns
in
into
lock
sbb
int3
insl
ds
dec
popf
cmp
push
dec
in
jle
sbb
test
in
add
call
stc
push
jnp
dec
jae
cltd
sarl
or
jmp
add
fsubs
sbb
xor
mov
rolb
and
mov
mov
test
sbb
add
push
stos
clc
jns
loop
push
xor
jnp
lcall
insl
cmp
cmp
mov
cs
imul
test
test
or
push
cmovge
cltd
cmp
cs
and
rcr
jne
dec
dec
add
test
out
bswap
lcall
sbb
xor
movb
int3
mov
xor
in
mov
stc
jl
and
inc
or
push
cmp
je
mov
mov
jmp
scas
or
repz
test
rcrl
daa
jo
sbb
jo
or
push
shll
sub
add
sbb
xor
mov
scas
or
iret
std
std
outsl
inc
insl
testb
lods
adc
aas
movl
dec
jge
ds
dec
mov
cmp
lcall
pop
aaa
jg
fwait
push
pop
mov
sub
shrl
sub
rclb
fiadds
jno
imul
add
pusha
add
leave
mov
rorb
cmp
jo
insb
cltd
jg
mov
out
push
jbe
inc
cmpl
dec
gs
shl
adc
push
xchg
xor
je
shrl
push
lahf
xor
into
shl
or
and
lea
xor
xor
xor
iret
dec
outsb
lret
test
mov
lret
and
sbb
ret
cmp
rolb
jmp
push
dec
xchg
inc
mov
inc
sbb
and
int3
nop
jl
pop
addl
cmp
mov
jne
mov
or
dec
sbbb
jl
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
mov
jo
sbb
jo
das
and
jmp
xor
push
push
ret
mov
pop
adc
lcall
and
jae
xchg
scas
dec
mov
in
jb
or
fadd
daa
fildl
sti
mov
and
loope
ret
cmp
mov
inc
push
add
and
fiadds
push
je
jb
aad
xchg
mov
push
test
imul
sbb
test
mov
pop
jl
roll
sub
pop
lock
movsl
stos
inc
sub
mov
aad
adc
mov
icebp
pop
repz
push
je
mov
nop
int3
mov
scas
jns
inc
cmp
inc
addr16
jae
aaa
mov
dec
jmp
mov
ss
sahf
repz
das
mov
sub
jl
insb
stc
adc
inc
sbb
inc
cmc
fcmovne
lock
sub
into
pop
xor
adc
add
shl
lahf
mov
es
mov
adc
inc
push
out
sti
cltd
pop
pushf
jp
dec
idivl
push
or
mov
cmp
jmp
mov
gs
nop
sbb
inc
dec
lods
and
jo
sbb
jmp
sbb
insl
js
sbb
iret
adc
ljmp
xchg
mov
push
or
sbb
adc
arpl
loop
inc
dec
aaa
outsl
dec
mov
aas
pop
ja
fiaddl
mov
push
ds
aam
jnp
inc
add
and
in
hlt
pop
cli
les
jl
jns
leave
jns
push
or
jg
mov
pushf
lods
pop
ljmp
and
lock
out
and
jb
jge
lods
sbb
add
lret
ds
sbb
shr
mov
sbb
or
sub
jp
mov
clc
add
insl
inc
adc
cmpsl
imul
das
dec
dec
jno
jmp
test
insl
lahf
mov
cmp
pop
add
and
call
fsubr
testl
repnz
rol
push
mov
out
scas
scas
in
scas
lock
jl
inc
sub
pop
xchg
nop
jg
in
leave
add
subb
rcrb
test
add
add
inc
call
jmp
aaa
dec
rcrl
jno
repz
enter
and
or
push
and
jo
jg
jo
std
lret
push
mov
sub
test
xor
mov
xchg
cmp
mov
mov
mov
push
test
es
adc
xchg
in
sub
andl
pushf
and
push
xchg
fbstp
cmp
lds
shll
pop
cmp
sarl
pop
adc
sub
lock
in
sbb
push
mov
jo
call
jns
ljmp
insb
das
sti
pop
jmp
mov
xorb
test
mov
inc
bound
push
movsb
mulb
mov
cmpsb
pop
lds
test
inc
add
out
xchg
mov
gs
lds
sbb
shl
shlb
test
sbb
aam
and
xlat
push
cmp
pop
bound
int
push
pop
insb
in
lods
nop
mov
sub
repz
xor
scas
mov
sbb
mov
daa
pop
aam
add
aam
lods
pop
outsb
addr16
add
inc
call
inc
in
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
gs
pop
push
mov
adc
xchg
and
movsb
lcall
pop
lea
call
mov
mov
sbbb
in
add
ljmp
fcmovnb
in
xor
pop
loope
jecxz
pusha
ja
movsb
adc
hlt
lock
add
orb
inc
jo
push
jmp
sbb
jmp
push
je
test
sub
mov
bswap
int
adc
mov
inc
lret
pop
das
xor
or
inc
mov
jo
mov
cwtl
sbb
inc
mov
and
subl
es
lods
scas
push
divb
in
sbb
lret
push
ficompl
scas
dec
mov
lea
imulb
and
ds
mov
cli
je
loope
movsb
hlt
incb
nop
dec
sahf
mov
xchg
repnz
and
test
sbb
repz
push
in
cwtl
sbb
pop
lret
inc
mov
pushf
mov
cs
and
mov
rolb
loope
outsl
xor
mov
jmp
jmp
cmp
xor
sarl
cld
sbb
adc
and
jo
sbb
jo
jl
mov
ja
cmpxchg
cwtl
outsl
xchg
mov
loop
mov
imul
outsb
shr
cli
insb
mov
popf
jecxz
and
mov
shlb
mov
loope
and
stc
jb,pn
mov
cmp
mov
mov
stos
cmpsb
dec
inc
push
mov
jno
dec
data16
mov
and
xor
sbb
test
repz
jge
sbb
and
enter
lcall
sub
cltd
pop
mov
lds
iret
xchg
mov
mov
clc
sub
testb
xchg
and
jbe
loop
ds
sahf
jno
mov
or
outsb
xchg
mov
push
add
stos
xor
shl
cli
daa
xor
adcb
adc
mov
or
insl
adc
fadds
cmp
mov
clc
or
mov
or
rolb
and
sub
and
sbb
mov
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
gs
jno
fistpl
dec
add
gs
xchg
iret
clc
mov
sti
movsb
mov
mov
vrsqrtps
popa
out
in
jg
jo
adc
in
andb
rcrb
fsubs
xorl
rcrb
sub
rcrb
xchg
xor
aas
mov
stc
mov
mov
loope
mov
loopne
dec
mov
in
sbb
imul
ss
push
in
add
lea
sbb
iret
out
icebp
jg
mov
cmc
cmpsl
mov
pop
loope
jbe
xchg
jbe
sarl
inc
pop
pop
mov
cmp
push
mov
cmp
add
js
cs
in
sub
shrl
fdivrs
cli
addr16
out
push
bsf
xor
mov
flds
xor
cs
rcrl
in
nop
imul
fistpll
fcoms
subl
pop
nop
pop
and
scas
xlat
jp
or
arpl
clc
in
lahf
xchg
orb
das
mov
mov
pop
leave
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
ficompl
jo
jle
jo
adc
outsb
jecxz
popf
sbb
lahf
sub
jmp
cli
js
inc
mov
ss
out
out
sbb
ss
call
ja
cmpsl
fistps
out
adc
je
adc
add
rcrl
mov
dec
aam
enter
lea
adc
clc
push
jno
push
pop
je
pop
jl
mov
movsl
sub
jo
cltd
xchg
in
in
popf
cmp
xchg
sti
fsubrl
lods
mov
mov
lods
dec
pop
dec
mov
test
pop
fsubrl
ds
fwait
int
neg
xor
in
movsl
or
jb
adc
adc
mov
ret
je
and
lret
xlat
push
sub
mov
sub
mov
pop
push
adc
xchg
bound
inc
cmp
mov
xor
rcll
cld
out
jne
gs
adc
mov
les
notl
fisttpl
dec
popf
and
add
pop
flds
gs
test
fimuls
sub
mov
imul
rolb
shlb
in
imul
adcb
test
xchg
pop
imul
mov
sub
mov
loopne
adc
mov
pop
and
sub
testl
scas
xchg
mov
ljmp
add
fadd
movsl
lds
add
sbb
adc
inc
shl
inc
paddq
mov
enter
xchg
shrb
dec
mov
dec
push
mov
dec
lods
sbb
inc
addb
mov
mov
in
xor
movsb
xor
mov
push
out
out
shll
mov
push
cltd
lcall
sub
pop
or
xor
ret
mov
mov
jns
in
dec
repz
test
sub
add
and
mov
int
push
test
sub
jecxz
mov
loop
js
jg
jo
mov
jns
fistl
dec
push
pop
fxch
rcr
icebp
xchg
leave
sbb
outsb
adc
ja
cwtl
lcall
cmp
sub
int3
lret
mov
leave
add
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
xchg
mov
jo
jle
jo
inc
jno
std
mov
mov
ds
notb
xor
pusha
pop
repnz
xchg
out
xchg
outsb
or
add
jle
mov
scas
inc
jns
add
cwtl
cs
outsb
xchg
fs
adc
push
popf
insb
jbe
push
mov
pop
into
lcall
out
scas
lock
ja
ljmp
jecxz
push
dec
cmp
es
xor
rcl
jg
call
sahf
push
mov
mov
stos
je
xor
aam
iret
hlt
adc
jecxz
nop
mov
bnd
int
outsb
ret
ds
repz
mov
pushf
mov
mov
cs
push
adc
mov
icebp
enter
es
loopne
xor
jno
loop
repnz
test
xchg
mov
test
push
out
push
sbb
mov
repz
sub
mov
std
fxch
enter
repnz
mov
mov
add
mov
out
xor
push
aaa
je
daa
cwtl
lahf
hlt
clc
loope,pn
cmpsb
es
sub
test
stos
or
stos
mov
test
cmpsb
adc
in
jecxz
orb
push
xchg
jno
jno
shll
pop
add
push
and
mov
jb
mov
cmpsb
fwait
lahf
sub
and
and
adc
mov
andb
inc
rcrl
fsubs
scas
stc
xlat
xor
push
stc
cmpsb
sbb
and
fwait
mov
adc
add
inc
mulb
cmp
or
sbb
pop
xor
lock
push
pop
mov
cmp
out
sbbb
iret
test
mov
pop
add
lock
mov
out
pop
and
jle
or
xchg
mov
jae
dec
cmpsb
dec
out
add
popa
decb
adc
add
mov
movsl
mov
fcomip
cmp
mov
sub
loop
sub
dec
sub
jnp
pop
icebp
jmp
inc
push
xchg
xchg
pop
addb
jmp
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
in
sbb
sub
fnstcw
jo
hlt
scas
dec
repz
inc
mov
ja
push
test
mov
jbe
dec
les
lods
jp
jp
and
xor
hlt
pop
mov
push
pop
xorl
sbb
fidivrs
out
jg
push
movsl
xlat
adc
lret
lcall
dec
lods
mov
cmc
add
mov
in
arpl
sub
repz
jnp
test
inc
lea
cmp
inc
popa
cmp
aam
sbb
xchg
imul
jmp
scas
in
jns
cmp
mov
idivl
mov
jle
cmp
xchg
jmp
gs
push
scas
fwait
sbb
sbb
mov
cmp
addr16
stc
xor
cli
and
or
mov
xchg
xchg
shrl
sub
xchg
push
adc
dec
sub
rcrl
or
inc
xchg
leave
rorl
call
aad
stos
lock
jle
out
add
inc
or
loope
iret
out
cmpsb
sahf
mov
shlb
mov
and
seta
in
xor
push
ret
in
pop
sbb
inc
fdivl
sbb
jno
add
mov
call
int
inc
adc
add
mov
add
ljmp
ss
push
jae
scas
mov
addr16
mov
rcll
insl
insb
mov
xchg
push
adc
pop
dec
or
dec
mov
das
out
stos
and
lods
roll
inc
cmp
pop
adc
inc
push
imul
adcl
out
jg
pop
jo
pusha
mov
sbb
stos
cmp
adc
out
imul
clc
popf
fsub
pushf
lcall
sub
sbb
mov
int3
ja
push
insb
icebp
add
adc
mov
inc
fisubs
lcall
fs
adc
push
mov
test
cmp
loop
push
insl
sub
pop
xlat
cmp
stc
xor
push
cli
push
pop
mov
adc
pop
in
push
lds
xchg
repz
rorb
sar
sbb
mov
push
dec
dec
bound
xchg
hlt
adcl
cmp
sbbb
popf
sub
push
dec
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
jnp
sub
les
jo
mov
shlb
and
adcb
pop
ds
or
in
push
cmc
out
jns
mov
push
push
xor
add
rcll
repnz
pop
mov
or
mov
add
add
cld
add
sbb
testb
outsl
in
imul
push
orb
pushf
mov
mov
fdivl
ss
incb
ret
lahf
nop
loope
pop
jp
lds
insb
cmp
roll
cmp
mov
dec
mov
jnp
sbb
sahf
int3
pop
mov
out
aas
cld
or
divb
mov
test
lahf
rcll
sahf
and
mov
lds
mov
cmpsl
addr16
inc
sbb
xchg
cmpps
inc
jg
iret
dec
shl
and
mov
lods
imul
mov
lock
push
and
adc
and
sub
pop
jl
mov
mov
mov
lods
and
mov
jg
mov
xchg
xor
jno
xchg
jl
stos
cmc
pop
or
paddusb
insb
aas
mov
jne
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
mov
jae
jo
les
jo
xor
jbe
lcall
push
add
fs
xor
push
cs
out
pop
push
int3
push
xor
rorl
sbb
sbb
mov
add
movsb
sarb
es
mov
sub
dec
lds
in
xchg
push
ret
je
popf
lock
adc
fisttps
dec
int3
ds
jg
lret
lods
push
cmp
pusha
jae
push
sahf
in
notb
push
and
lods
loopne
or
scas
or
addl
fcmovb
sub
cli
jp
shrl
xchg
in
addr16
inc
pop
jns
roll
stos
add
or
cwtl
in
pushf
gs
and
pop
xchg
out
sub
pop
adc
jbe
cmp
popf
adc
imul
test
sub
jae
lahf
inc
mov
cmpsb
add
loopne
fs
ret
out
jmp
in
pop
mov
dec
aam
movsb
ss
aad
dec
repz
lock
mov
daa
div
mov
cmp
xor
ret
call
cmp
pop
das
xor
mov
xor
movsb
xchg
and
aaa
andb
loop
inc
or
roll
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
cmp
xor
jo
popf
xchg
insl
rclb
and
mov
adc
inc
jg
andb
and
popa
pop
out
es
movsb
cld
mov
clc
insb
test
test
jnp
movsb
push
pop
movsb
lds
mov
js,pn
xchg
jp
mov
adc
lods
mov
mov
pop
adc
xchg
out
mov
inc
cmp
mov
mov
and
lock
mov
lret
scas
and
test
mov
shlb
push
xchg
or
cmp
fsubl
inc
pop
fiadds
jns
lret
movsb
cltd
popf
out
int3
mov
push
mov
insb
out
dec
adc
sbb
xchg
lods
psrld
xchg
fstpl
sub
fisubs
xor
int
add
popa
add
mov
inc
movsl
dec
push
das
adc
mov
and
sti
xchg
jecxz
lock
mov
dec
inc
mov
clc
sub
pop
lea
in
jmp
push
data16
loop
and
pushf
sti
aam
and
mov
outsl
add
stos
lcall
rcll
cmp
call
or
andb
mov
test
icebp
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
in
or
mov
jo
jge
jo
lods
or
xlat
hlt
shl
testl
daa
mov
jno
push
add
mov
mov
mov
out
pop
fdivrs
mov
mov
ds
and
daa
pop
lahf
xor
xchg
xchg
xchg
push
push
dec
mov
mov
call
fstpt
fs
pop
or
xor
push
jb
and
jne
cld
pop
pop
aaa
mov
std
pop
mov
or
mov
fwait
jmp
repz
push
cmc
sub
cmp
jmp
sbb
mov
data16
fsubs
lret
fs
sarb
imul
icebp
and
mov
enter
mov
inc
in
cmp
jb
sbb
sbb
jbe
push
pop
roll
hlt
xchg
push
icebp
dec
clc
sbb
aaa
sbb
ds
pop
add
xor
hlt
les
dec
dec
insb
xor
adc
inc
jns
sti
orl
jb
xor
inc
add
add
and
dec
push
pusha
lahf
cmpsb
mov
sbb
sbb
movsb
jnp
push
adc
push
mov
sub
fs
xchg
mov
scas
add
test
xchg
adc
das
mov
pop
adc
popa
xor
imul
inc
jp
pop
fidivrs
xor
repz
xchg
adc
mov
iret
andl
cmpsl
and
ror
mov
rol
fistpl
jb
mov
mov
pop
inc
stos
mov
xchg
adc
ja
adc
jl
pushf
inc
xchg
incl
xchg
push
sbb
inc
fcmovnb
std
push
ret
pop
lds
cmp
dec
ds
cmp
mov
pop
mov
pop
in
pop
mov
or
popf
cmp
enter
push
js
ljmp
or
enter
push
shlb
testb
sub
inc
dec
adc
xchg
cltd
sbb
into
add
mov
lahf
fs
adc
mov
pop
jns
sub
fcoms
mov
cmp
das
cmpsb
mov
and
xor
jp
int3
pop
fcmovne
push
aas
das
test
ret
jmp
push
iret
enter
hlt
xchg
dec
lock
or
fdivrs
mov
clc
push
mov
jg
das
xor
mov
jmp
pop
pop
adc
pop
jno
call
add
leave
jae
aam
les
inc
fisubrl
add
or
mov
inc
xchg
data16
mov
inc
cli
sbb
push
cmp
cli
es
shl
push
dec
cmp
and
fwait
dec
sti
hlt
and
sub
mov
mov
xchg
lods
or
jae
jns
or
pop
jmp
mov
push
mov
jmp
mov
movsb
int3
push
sub
movb
mov
pushf
jb
add
add
add
add
jmp
xchg
test
xchg
jno
xchg
js
addr16
lcall
jo
sar
mov
ljmp
outsl
inc
sbb
inc
int
popf
jmp
mov
and
sahf
dec
and
rsqrtps
jmp
xchg
stc
popf
jno
inc
sarb
xchg
test
mov
dec
int
and
mov
aas
repz
dec
outsb
add
gs
push
je
cwtl
sti
lahf
fnstsw
decb
mov
sbb
js
xor
add
repnz
mov
xor
adc
and
push
sbb
push
insb
loop
out
jo
inc
mov
mov
adc
and
aaa
push
xchg
cmp
mov
pushf
fs
xchg
push
mov
or
push
rol
mov
jbe
std
lret
aaa
add
dec
xchg
pusha
std
mov
pop
insl
imull
lcall
je
icebp
into
inc
cli
jne
ljmp
sbb
movsb
xchg
cmp
dec
stos
lods
sbb
dec
insl
push
fadds
out
adc
adc
jecxz
mov
pop
cld
pop
push
mov
mov
pop
or
scas
lods
lret
sbb
fists
ds
mov
insb
lock
inc
aas
xchg
jns
cltd
shll
sbb
add
inc
fstps
jge
aam
mov
add
cltd
push
mov
ret
sbb
mov
and
mov
xchg
outsb
adc
sub
ret
lock
xchg
sahf
cmp
pop
jecxz
test
stc
andb
stos
push
push
mov
ror
pushf
das
mov
test
es
sbb
pop
iret
mov
test
addl
xchg
lahf
push
inc
add
scas
jge
fstps
inc
mov
aad
and
jecxz
add
mov
mov
jo
add
and
bound
jne
and
jae
dec
mov
imul
adc
and
sub
sub
sbb
out
adc
ficoml
xor
jbe
inc
mov
mov
xchg
sarl
fcompl
jno
and
pusha
jae
pushl
cmc
lds
jp
mov
xor
mov
or
jae
rcrb
inc
fdivl
mov
lods
or
mov
pop
lret
ja
lret
dec
fimuls
mov
ss
into
aam
out
jnp
push
or
js
loope
lcallw
test
dec
ja
mov
inc
push
sub
sbb
in
cmp
mov
pop
sbb
aas
pushf
shl
int3
or
xchg
ljmp
xchg
mov
aad
mov
and
dec
jne
lret
lock
cmp
mov
out
adc
clc
mov
sub
lock
mov
push
lret
push
pusha
bound
push
push
push
and
ret
or
mov
cmpb
mov
xorl
movl
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fistpll
jge
jo
insb
fcmovb
js
aas
lahf
push
xchg
stc
ja
jnp
jns
dec
loopne
dec
dec
bswap
gs
pop
cmp
add
insl
push
dec
pop
bound
xchg
mov
xor
daa
sbb
data16
mov
divb
pop
sbb
push
sub
xchg
jp
in
imul
pop
lds
fwait
sbb
xor
cmp
sbb
pop
sub
sbb
mov
and
push
xchg
lret
push
jns
ret
pop
sbb
data16
lea
jo
push
xchg
jbe
fstpt
jne
cmc
repnz
adc
in
popa
rcll
dec
test
adc
lea
pop
dec
pusha
mov
mov
dec
movsb
jno
idivl
test
orb
sub
ret
sbb
xchg
subl
pusha
ja
inc
adc
fsub
lea
rclb
jmp
xor
mov
movsb
les
push
or
jmp
in
mov
push
push
pusha
xchg
mov
xchg
out
enter
jmp
lds
mov
stos
rorb
sbb
out
and
leave
cs
stos
jns
mov
negl
dec
push
fmul
add
jle
inc
pusha
jne
adc
aaa
cmp
add
in
fs
mov
cmp
mov
fists
jno
and
aam
out
xchg
xor
ss
shll
aaa
pop
pop
mov
lea
daa
std
pop
jecxz
arpl
jecxz
jp
je
imulb
mov
iret
add
fdivrl
adc
fadd
pop
sbb
lret
sub
pop
in
inc
clc
lock
pop
outsb
lods
pop
decb
loopne
jp
pop
and
out
mov
mov
sub
shlb
adc
fmuls
sbb
inc
inc
mov
push
sub
xchg
icebp
cwtl
lahf
pop
scas
ss
ret
pop
or
movsb
add
cmpsb
sbb
pop
push
scas
mov
push
clc
jg
mov
or
push
pop
lret
sbb
js
in
push
adc
push
aas
ret
mov
fistpll
mov
movsb
shlb
pop
xor
es
and
clc
mov
or
inc
sbb
fcmovnu
fs
inc
notb
cmp
sub
push
sub
in
mov
enter
adc
mov
jno
or
xor
jp
lock
mov
mov
adc
daa
sub
lahf
roll
mov
fstpt
sbb
stc
sti
inc
jo
pop
roll
ss
mov
xor
aas
addr16
daa
clc
mov
mov
shll
pop
ja
lea
sub
sbb
mov
add
out
xor
inc
movsl
dec
cmc
sub
mov
mov
sbb
push
mov
dec
mov
outsl
rcrb
dec
nop
sub
mov
test
movl
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
cld
sbb
stos
sbb
jo
and
jo
frstor
mov
add
outsb
out
fsts
mov
mov
jle
mov
aaa
dec
into
pop
mov
test
push
popa
jp
adc
insl
les
rorb
popf
push
mov
lahf
outsb
hlt
mov
iret
mov
into
dec
jns
enter
call
xor
mov
pop
push
sub
xchg
icebp
mov
sub
pop
or
loopne
xor
aas
add
inc
nop
or
push
push
bound
test
jne
jo
dec
xor
sbb
add
sahf
in
add
sbb
mov
sbb
cmp
shr
mov
in
add
jns
cmpsb
mov
fidivl
pop
xchg
cmc
test
std
fstl
add
sub
addr16
fisttpll
inc
jbe
in
imul
inc
inc
xchg
mov
jmp
popa
sub
sub
push
lods
test
pop
cwtl
jno
sti
sbb
mov
std
mov
iret
inc
mov
push
sbb
xchg
lds
push
insb
mov
sbb
int3
daa
repz
fdivs
scas
sub
leave
inc
sar
cmp
lret
scas
mov
lcall
xor
add
shlb
shr
jg
aad
mov
outsb
push
addr16
and
or
dec
xor
xor
popa
inc
scas
lea
xchg
movsl
subb
nop
push
push
jb
loopne
sbb
push
push
enter
cmpsb
stos
mov
les
mov
xchg
sub
ror
aaa
cmpsl
push
pusha
es
or
hlt
sub
push
inc
jo
mov
or
xor
dec
add
sti
fbstp
enter
je
pop
inc
insl
jg
and
mov
mov
pushf
push
test
imul
lahf
shl
inc
ds
fwait
test
js
pop
or
inc
inc
jecxz
xor
jo
push
cli
scas
or
jle
subb
insb
push
and
arpl
mov
test
out
inc
cltd
inc
stc
pop
and
pop
mov
adc
sub
sahf
loop,pn
cmpsl
inc
xlat
push
sahf
or
repz
sub
jecxz
cmp
ja
in
rcrl
sub
and
outsl
inc
mov
in
xchg
add
popa
outsb
push
pop
dec
test
das
jmp
mov
ret
popf
push
roll
addr16
ret
out
out
cmpsl
adc
lret
lea
mov
jo
imul
and
add
fldcw
out
mov
loope
fcoms
dec
std
cmp
sub
lret
add
xor
stos
xchg
xchg
fwait
mulb
push
cmp
loopne
loopne
or
mov
notb
pusha
fsubrs
ljmp
ja
fldcw
clc
mov
cltd
pop
jo
sbb
pop
dec
push
pushl
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
dec
scas
lret
jo
and
jo
lock
inc
push
loop
xchg
repnz
jno
xchg
loopne
xchg
xchg
loop
mov
rolb
dec
pushf
push
lcall
scas
mov
push
jecxz
or
dec
cld
bound
xchg
jo
mov
and
and
push
xor
mov
scas
test
jmp
mov
mov
xor
inc
mov
dec
fcompl
cmp
push
in
cmp
hlt
arpl
push
testb
xchg
loop
push
fsubr
xor
pop
cmp
pop
mov
dec
jno
mov
lods
cli
in
sarl
pusha
pop
inc
mov
fs
jns
inc
std
sub
fcomps
mov
sti
sub
push
pop
xlat
mov
scas
addr16
jecxz
sti
xor
xchg
and
jnp
mov
push
mov
jbe
xorb
sti
push
dec
jp
cmp
jge
add
sahf
jae
ja
sbb
dec
add
xlat
xlat
in
and
shll
add
iret
mov
hlt
loopne
sar
xchg
les
stos
inc
std
jns
mov
mov
mov
imul
xor
or
pop
jmp
xchg
test
sbb
sub
cmpsl
adcl
push
cld
aaa
ret
xor
or
push
push
xchg
jns
mov
pop
fsubrs
cld
cmpsl
inc
push
or
test
push
stc
push
lcall
add
out
add
xor
imull
dec
xchg
in
lods
cmp
iret
out
mov
cmp
lahf
cmp
inc
push
jmp
xor
aad
or
iret
dec
enter
ds
int
mov
mov
scas
adc
push
jle
movsb
fldenv
stos
lcall
sub
ret
jo
nop
cs
icebp
push
mov
push
push
cmpsb
jge
inc
out
jge
imul
leave
adc
into
int3
repnz
add
aas
and
add
push
fidivl
xor
lret
pop
fisubrl
mov
mov
int
add
sub
jbe
jl
lods
aas
popa
or
hlt
xchg
loope
mov
xchg
sbb
fisttps
std
adc
in
orb
frstpm(287
or
sub
push
adc
fbstp
sbb
mov
inc
into
bound
push
dec
mov
add
sbb
movsl
or
adc
or
aad
lock
cld
out
dec
nop
ljmp
ss
out
notl
mov
pop
mov
adc
sbb
daa
pop
push
movsl
adc
add
shl
inc
push
mov
cltd
cmp
data16
fwait
jo
out
fisttps
sub
adc
mov
rcrl
push
mov
daa
jb
and
push
scas
pop
into
adc
add
hlt
push
xor
cmp
and
push
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
aad
push
mov
adc
push
mov
push
leave
mov
mov
addr16
adc
mov
mov
insl
cmp
cwtl
out
push
fwait
xchg
ret
or
int3
mov
fwait
gs
pushf
lea
mov
icebp
adc
out
shlb
add
add
mov
sub
mov
xchg
xor
out
in
enter
inc
mov
shl
mov
fmull
popa
les
jno
add
ret
cld
mov
cmpsb
inc
adc
out
xlat
cld
inc
and
and
fldl
loop
jmp
push
mov
lahf
int3
cs
jno
gs
jb
mov
mov
jmp
in
push
sbb
cmp
shll
test
mov
icebp
out
jbe
frstor
jge
ds
pop
leave
aas
sub
push
rolb
enter
mov
in
js
out
stos
push
insb
dec
out
test
mov
lret
push
mov
addr16
fcmovnb
add
dec
push
lahf
aad
add
jle
dec
fstps
es
xorl
xor
jmp
sub
mov
movsl
das
stos
pop
mov
std
mov
dec
fwait
push
push
sub
inc
js
into
push
dec
sub
add
out
jbe
cmp
pop
mov
daa
jg
pusha
dec
or
cmp
xchg
sub
cwtl
test
lcall
int3
push
jecxz
cmp
movsb
or
adcl
jbe
mov
adc
cmp
outsl
dec
dec
fisubl
mov
fwait
jle
add
push
jae
mov
push
lods
sbb
in
test
dec
das
movsb
xchg
jnp
rorl
inc
push
in
jp
or
das
jg
fstpl
out
mov
mov
push
jns
iret
adc
rorb
jno
jb
movsb
aam
in
push
xor
sub
xchg
lahf
mov
out
or
xchg
rolb
shl
mov
xor
fidivl
mov
xchg
ret
pop
sub
lds
fucom
mov
js
imul
movsl
mov
je
lret
stos
adc
outsl
xchg
jmp
mov
mov
aad
cmp
lods
out
sti
sahf
fistl
pop
fldt
xlat
insl
push
int3
dec
test
xchg
outsb
ret
test
bound
jmp
or
rolb
std
dec
push
adc
lock
push
loop
xchg
or
data16
out
mov
fidivs
mov
mov
mov
rolb
test
sub
ljmp
mov
sbb
aaa
cmp
in
jb
xchg
add
xor
fstps
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
xchg
jnp
fisubrs
jge
jo
cmp
sub
jne
repnz
test
pop
push
ret
mov
stos
cmc
xor
in
pop
repz
fstl
mov
xor
arpl
mov
repnz
fidivl
mov
push
sbb
cmp
outsb
xchg
out
add
and
or
imul
sbb
xor
push
stos
fisttpl
and
add
aad
movsb
rcrb
jbe
aaa
xor
adc
addl
ljmp
mov
addl
lods
dec
es
adc
push
adc
xor
sbb
adc
mov
mov
cmp
push
xor
inc
push
rorb
mov
dec
jge
adc
xchg
sarl
int3
in
sub
push
addr16
cs
test
hlt
xchg
and
lret
inc
push
sbb
lret
mov
sub
mov
ss
les
push
lret
ja
mov
cmpsb
inc
sarb
in
out
dec
sti
insl
gs
pop
add
out
stos
cmpsl
rolb
lret
jbe
call
mov
xchg
and
outsl
xchg
jl
mov
int
lret
loopne
mov
das
loope
ljmp
popf
pop
addb
in
arpl
xchg
cltd
sbb
loopne
mov
aad
mov
and
inc
sbb
out
gs
popf
inc
int
or
std
push
fistps
and
push
xchg
cmp
cmpsb
cltd
jns
sbb
mov
mov
xor
daa
inc
mov
lds
inc
lock
mov
lods
fwait
subl
jmp
sti
ljmp
xor
dec
inc
cltd
dec
test
lods
or
repnz
dec
jbe
or
fidivl
xor
dec
pop
es
push
in
fcoms
add
xor
pop
fdivrl
jle
js
fdivs
push
jmp
imul
cld
shrl
outsb
xchg
sar
sub
pop
jne
and
xor
pop
sbb
dec
in
dec
jno
mov
jge
or
cs
push
loope
lcall
icebp
lods
mov
insl
push
push
enter
adc
pop
lret
sbb
fsubl
dec
mov
fisubl
inc
pop
xor
outsl
scas
testl
lods
gs
sub
in
jge
mov
pop
movsb
pushf
ret
mov
xchg
es
rorl
je
jp
lods
sub
stos
pushf
push
pop
add
ja
hlt
lods
lahf
repz
and
pop
movsb
pop
stos
fsubs
mov
xchg
dec
aas
movsl
dec
xor
push
inc
data16
xchg
fcmove
push
or
xlat
stos
xchg
dec
fldt
jle
push
dec
xor
xchg
bound
cmpsb
mov
xchg
or
xchg
xchg
scas
insl
data16
ret
add
iret
push
push
cltd
popa
lock
adc
fwait
nop
jl,pn
lods
rorb
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
dec
out
sbbl
jo
jg
jo
or
xor
fucomip
or
push
aas
dec
and
mov
xchg
xadd
lret
sub
rcrl
fiaddl
inc
sbb
int
mov
cmp
rolb
mov
add
ret
jb
jns
mov
scas
sbbl
mov
xor
jne
pop
push
ja
xchg
adc
xlat
in
mov
mov
push
jl
mov
fsubl
fistpl
jo
scas
mov
sub
adc
dec
bound
push
pop
out
mov
sbb
das
fldl2t
mov
mov
fwait
call
in
cs
lock
mov
out
stc
sub
popf
and
add
mov
xor
insl
xor
cmp
mov
mov
sub
js
push
aaa
pop
scas
pop
inc
or
mov
sub
test
push
jns
push
inc
adc
shrb
add
dec
imull
test
push
das
lret
add
js
add
hlt
push
push
mov
jl
lock
out
dec
push
mov
xor
push
pop
iret
lcall
jns
clc
sbb
aaa
mov
ret
out
push
xor
pop
and
inc
sub
adc
loopne
rcrl
mov
inc
cs
lods
mov
mov
dec
idivb
leave
clc
xor
or
in
int
inc
jno
xlat
sub
mov
mov
pop
addb
movsl
mov
out
mulb
outsl
push
fsub
adc
pop
divb
ficoml
sub
out
gs
fs
movsl
xor
mov
lret
mov
xor
push
sub
pop
in
adc
sbb
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
pop
cmpsl
push
int3
jo
imul
jb
hlt
and
xchg
sbb
in
in
add
xor
mov
cmp
out
dec
sub
xchg
test
jae
ret
xchg
mov
cmp
ret
push
mov
es
mov
xor
pop
mov
into
ds
lea
leave
cmp
mov
lret
xorl
and
divb
pushf
ja,pt
shlb
add
aaa
icebp
cmp
mov
xchg
fildl
das
cmpsl
loopne
pop
xor
pop
movsl
lahf
rcll
sbb
pop
in
mov
xchg
sbb
or
jg
test
insb
scas
add
jge
mov
negl
sbb
pop
mov
mov
jl
xchg
scas
fstl
fildl
and
or
add
push
popa
in
sbb
push
add
jne
outsb
scas
imul
xor
or
sub
pop
sarb
into
mov
xor
repnz
fbld
sbb
jmp
jnp
test
out
xchg
in
mov
pop
scas
fidivrs
sbb
xchg
iret
pop
push
bound
stc
out
mov
and
fwait
push
arpl
dec
push
add
adc
pop
mov
repnz
movsl
add
adcl
int
push
divb
cld
mov
pop
pop
cmp
push
or
lahf
stos
push
flds
add
inc
add
rcrl
int3
test
movsb
mov
iret
or
lcall
jbe
adc
pushw
jbe
enter
mov
imul
mov
pop
cli
sbb
loope
test
sbb
xchg
pop
xchg
xchg
fidivl
jp
fsubl
ljmp
xchg
test
fs
add
movsb
insb
nop
stos
adc
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
sub
dec
lret
imul
inc
pop
faddl
scas
adcb
mov
cli
jg
dec
scas
dec
sbb
insl
fistl
add
and
mov
int3
fiaddl
push
push
jne
je
movsb
std
aad
loop
push
or
nop
cmpsl
push
popf
inc
ja
push
in
int3
push
xchg
mov
mull
ret
push
inc
push
add
lret
inc
cli
hlt
sbb
jle
cwtl
mov
add
adc
pop
push
movsl
dec
cli
pop
out
repnz
cmpsl
or
ljmp
fadds
in
std
lock
mov
mov
fnsave
dec
neg
mov
add
insl
popf
testb
jmp
dec
pusha
lret
stos
scas
push
cmp
lcall
sub
sub
xchg
inc
test
push
pop
notb
push
jo
jl
test
and
ja
cmp
hlt
jge
outsb
sub
inc
xor
or
inc
inc
scas
test
push
sbb
stc
pop
cmpsb
ss
js
xor
je
into
sub
ljmp
inc
outsb
pop
sbb
dec
imul
sbb
sub
cmp
stc
arpl
call
jl
cs
lret
or
push
mov
push
aad
dec
fcmovbe
xchg
sbb
mov
cli
mov
call
mov
enter
call
sbb
inc
sub
or
fidivs
int
lea
inc
jno
notl
xor
xchg
je
imul
or
movl
pop
jne
cmp
xchg
mov
push
cmp
pop
inc
xor
repz
sbb
mov
jo
icebp
and
pop
mov
adc
mov
adc
lods
xchg
push
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
cmp
sub
inc
enter
jg
jo
nop
fs
pop
inc
push
xor
out
dec
call
mov
sbb
jae
add
pushf
cld
repnz
jo
and
xor
xchg
in
mov
pusha
cmp
sub
mov
fdecstp
inc
ret
mov
pop
jp
xchg
jge
add
xor
rcrb
pop
movsb
lret
cld
fisubrs
adc
js
loop
inc
sub
js
fwait
mov
xchg
push
popa
jle
dec
mov
addr16
andl
dec
sbb
adc
jle
mov
pop
add
cmp
add
xor
loope
shll
sub
adc
mov
in
xorl
or
ret
bound
popf
xchg
std
cmp
push
dec
stos
rol
push
xchg
inc
pop
jg
insb
dec
dec
mov
cmp
cmp
ret
sbb
into
add
sbb
lods
das
mov
mov
inc
jle
mov
and
pop
xchg
adc
aaa
stos
dec
movsb
and
adc
ficoms
imul
fistl
les
mov
icebp
sahf
mov
adc
dec
dec
sub
fs
pop
pop
push
add
mov
loopne
inc
or
fsubl
cmp
lret
cmp
push
rcrb
inc
mulps
mov
cmp
xchg
jp
mov
fidivrl
jb,pn
sbb
ja
rclb
xchg
push
pop
out
jmp
or
jmp
pop
xor
mov
movsl
mov
adc
cwtl
mov
adc
add
mov
xchg
pop
sbb
inc
cmc
push
lcall
mov
jns
dec
hlt
iret
sbb
insl
jno
inc
negl
dec
enter
pop
jb
inc
adc
mov
cmpb
out
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
mov
pop
in
mov
jg
jo
xor
negl
pop
out
dec
ficompl
mov
fcompl
xchg
popl
jle
dec
shll
lods
cmc
mov
dec
or
fnstsw
jae
stc
push
stos
aaa
out
lods
out
inc
dec
pop
xchg
pop
or
mov
push
xor
mov
imul
in
sub
push
xchg
xchg
add
add
ss
jbe
ret
outsb
and
js
sahf
paddsw
stos
rol
pop
sti
fidivrs
enter
test
imul
jbe
test
aad
fidivrs
js
lods
lods
add
sbb
nop
outsl
xchg
fsubrl
daa
add
stc
xor
mov
out
outsb
in
sub
push
sbbb
adc
push
pop
jae
xor
divl
mov
pop
je
ss
movsb
mov
mov
push
into
notb
iret
outsb
ret
mov
sbb
xchg
ret
lods
icebp
xchg
int
repz
bnd
fwait
jp
jle
es
cmp
jle
push
push
shlb
inc
repz
and
or
jp
mov
xchg
testl
push
jle
or
std
push
xor
push
movq
cli
fwait
push
dec
fmull
xorb
mull
push
dec
push
adc
adc
dec
sti
xchg
cmp
jb
or
mov
int
or
jb
mov
aam
leave
xor
or
pop
pop
mov
scas
xchg
pop
cld
mov
sub
pushf
push
inc
cld
dec
jns
jle
mov
push
lea
ja
das
fisubl
aam
or
xchg
mov
fwait
mov
cmp
pop
gs
lea
bound
in
stos
or
pop
ljmp
xabort
test
ds
fisttpl
cmp
subb
add
lds
add
sub
add
rolb
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
xchg
addr16
test
jo
imul
push
inc
arpl
rcr
sub
dec
gs
shrl
loop
dec
xchg
ljmp
js
pop
xchg
push
and
fwait
lea
adc
ljmp
loope
adc
and
mov
inc
xchg
jp
sbb
or
call
mov
inc
cwtl
addl
imul
inc
add
sub
jecxz
jmp
push
add
clc
sbb
sbb
mov
movsb
add
and
cmp
adc
addr16
push
lock
jecxz
jne
aaa
and
mov
sbb
mov
push
daa
rolb
bound
mov
mov
pop
andb
flds
fcompp
push
push
ret
mov
aaa
loope
mov
sahf
add
jnp
push
and
mov
rcl
xor
hlt
dec
nop
lahf
and
clc
stos
and
jo
lds
jns
xchg
or
decl
mov
sbb
scas
push
fcoml
lret
push
bound
push
inc
xchg
popf
rcll
test
jno
add
pop
fwait
adc
adc
pop
adc
test
jo
loope
js
into
xchg
xor
fmull
icebp
xchg
xor
inc
or
mov
cmp
sub
mov
shll
popf
mov
push
ds
cmp
jp
fsubrs
or
into
cld
in
outsb
lret
or
and
and
movsb
inc
add
cld
sbb
adc
shrb
pop
pop
mov
adcl
loopne
jb
je
int3
xchg
addr16
cwtl
cmc
inc
xchg
or
in
call
xor
adc
sub
or
xchg
dec
or
jbe
testb
addr16
sahf
xchg
inc
test
push
xchg
shr
push
adc
mov
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
mull
jg
jo
or
push
jl
cli
or
push
out
pusha
cmpsl
mov
iret
test
ret
jmp
sub
cmp
rcrl
or
hlt
ret
pop
adc
daa
mov
mov
orl
leave
clc
xchg
mov
loop
inc
mov
and
mov
call
jp
imul
dec
sub
mov
outsb
clc
in
mov
sbb
cmp
xor
add
cltd
pop
int
loopne
dec
lods
xor
lcall
dec
shl
daa
jecxz
stos
jne
loope
in
pop
mov
out
mov
lds
cmp
mov
bound
popa
jns
jns
mov
cmpsl
mov
sub
jb
mov
popa
in
and
sbb
loopne
dec
into
sbb
lcall
movsl
jle
mov
out
es
mov
test
enter
mov
or
ds
jl
les
dec
mov
movsl
inc
pop
fwait
loope
lds
dec
jns
mov
sub
push
je
mov
mov
out
popf
inc
inc
arpl
pop
jge
js
aas
cmc
dec
push
add
sub
scas
lret
nop
lret
pushf
cld
sti
mov
jmp
repnz
jo
adc
dec
fisubl
lock
fdivrp
lcall
das
cmpsl
mov
inc
incl
popa
and
mov
loopne
adc
cmp
loope
pop
fildl
je
jecxz
daa
lahf
pop
or
loopne
jmp
dec
fdivrl
shrl
testl
inc
dec
outsb
or
hlt
mov
xor
das
nop
add
xchg
xor
rolb
jge
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
lcall
jo
jg
jo
cmp
rcrb
stos
adc
cli
push
xchg
cwtl
mov
mov
dec
sub
cmp
dec
mov
mov
incb
insl
std
ja
loop
xchg
lcall
add
sub
jp
notb
xor
sbb
icebp
push
cs
or
push
rcr
mov
cmp
sub
leave
add
xchg
fidivrl
lods
jns
test
jle
sbb
cmp
adc
jp
outsb
ds
mov
pop
mov
leave
push
add
inc
negb
inc
adc
mov
cmpsb
dec
mov
in
fsts
jae
lahf
mov
mov
mov
js
and
lock
or
xchg
sub
data16
pop
pop
xchg
cmpl
nop
in
notl
js
pop
imul
or
lock
cmp
les
dec
loope
dec
fbld
clc
pop
mov
or
cmp
lcall
fnstenv
pusha
stc
clc
lock
mov
push
sar
dec
or
loope
sub
push
popa
insl
and
adc
sub
test
pop
push
xchg
popa
imul
dec
lret
icebp
pop
pop
xor
test
lea
push
pop
cmc
add
movsl
and
mov
ss
movsl
xchg
shrb
mov
out
sahf
rcr
inc
xchg
fcmovbe
loopne
orl
xchg
sub
and
xchg
cltd
out
sub
inc
pop
xor
mov
dec
push
add
add
pop
adc
loope
mov
adc
inc
mov
push
cmp
into
xlat
mov
push
dec
mov
mov
aaa
xor
push
sti
lods
ret
cmp
sbb
adc
inc
jl
mov
insl
dec
ret
inc
or
jle
mov
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
jae
neg
xchg
fidivs
imul
test
in
cld
jo
stos
mov
int3
fstpt
into
mov
cmp
lret
vmovmskpd
jle
cltd
jg
sbb
xor
add
gs
dec
pop
fdivl
mov
jecxz
call
insl
xchg
sbb
xchg
notl
cltd
aad
lods
pushw
cmpsl
lods
mov
lea
dec
or
leave
cmp
cli
in
jmp
sub
in
jno
add
adc
jae
out
mov
js
cmp
pop
inc
loopne
push
fldl2t
arpl
push
leave
xor
clc
call
scas
rorl
push
push
mov
inc
xchg
lahf
je
das
push
cmp
sbb
and
and
xor
addr16
scas
push
cmp
sbb
es
mov
jno
cmpsl
lret
xchg
jle
mov
out
cld
add
test
push
enter
mov
enter
adc
dec
imul
ror
mov
inc
lret
cmp
mov
dec
movsb
test
scas
les
sub
icebp
ret
inc
pop
pop
xchg
jb
loopne
fwait
jmp
jmp
xchg
shll
push
or
mov
fsts
dec
insl
out
jmp
sub
test
mov
bound
pop
dec
mull
pop
xor
iret
mov
sbb
ret
jp
and
jo
mov
xacquire
and
inc
dec
add
adc
gs
into
fistl
negl
ljmp
cmp
sbb
test
pop
mov
cwtl
dec
mov
xor
or
mov
jge
sub
push
mov
push
shl
xor
or
testb
mov
xlat
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
test
fdivl
imul
cltd
jl
loopne
mov
adc
seta
cmp
aam
inc
xchg
mov
jnp
jns
push
test
xchg
sbb
inc
scas
push
dec
out
fstpl
or
jp
jp
cmp
loope
fisubrs
js
clc
int3
push
cwtl
mov
js
fisubrl
jl
je
xchg
sub
mov
push
push
rorl
xor
popf
out
add
mov
pop
dec
leave
out
fldcw
pop
std
inc
out
jge
push
call
cmp
sbbb
movsb
cmpsb
push
adc
xchg
je
and
or
js
ja
and
pop
pop
jae
add
mov
cmp
and
aas
sub
js
mov
sbb
and
cmp
inc
xor
je
sub
out
cmp
mov
sub
paddsw
push
jne,pt
int3
outsb
inc
loope
shl
mov
loop
mov
clc
fs
lcall
add
movsl
fbstp
cmp
jns
push
sbb
mov
add
sub
add
pextrw
mov
addl
jo
pop
jns
stos
test
jbe
in
out
dec
fisubrs
push
outsb
icebp
mov
stc
lods
push
leave
mov
mov
ret
test
add
aam
fcoms
leave
int3
and
test
arpl
sbb
imul
xchg
and
sub
add
jae
fildl
sahf
push
test
mov
insl
xchg
lret
dec
hlt
lds
cmpsl
sbb
in
ss
xchg
mov
mov
push
outsb
push
je
inc
cs
stc
jmp
sbbb
cltd
js
mov
mov
inc
pop
test
jo
imul
sbb
shl
add
push
sbb
das
fdivl
cltd
push
push
mov
mov
aad
fwait
xor
insl
lods
cmp
pop
popa
cmpsb
ret
inc
jmp
cmp
and
in
push
in
loopne
shlb
or
mov
cmc
push
aad
maxps
sub
cmp
pop
mov
xor
mov
pushf
add
shrb
pop
shrl
or
adc
popf
in
loop
dec
mov
push
scas
data16
xchg
jle
popf
pop
sbb
div
inc
sub
nop
rorb
push
leave
stc
fnstsw
pop
out
inc
dec
cmp
sub
xchg
cs
sarb
pop
dec
jnp
leave
test
cmpsb
jecxz
dec
in
fwait
add
push
ret
popf
in
adc
aas
mov
stc
das
ljmp
dec
mov
and
mov
fdivl
popa
jmp
call
inc
mov
xor
xchg
fsubl
mov
cmp
xor
iret
jae
test
dec
xchg
out
xor
je
mov
push
bnd
fmuls
jmp
rclb
pop
jl
subl
shrb
stc
pop
mov
out
xchg
xlat
insb
nop
sub
ret
mov
fs
lahf
insl
xlat
push
jb
cmp
cmp
insb
lods
imul
dec
mov
dec
cwtl
jmp
test
sbb
insl
arpl
ja
cmp
xor
ja
loope
mov
ss
lock
pop
xchg
out
fcompl
jmp
popf
sub
sti
cmpl
scas
pop
imul
adc
jmp
sub
pop
imul
inc
jo
popf
inc
sti
dec
cltd
cld
jnp
adc
add
jmp
jnp
and
jmp
cmc
fwait
pop
xor
mov
mov
jns
repz
imul
jmp
clc
icebp
mov
icebp
ficompl
xlat
fdivs
imul
outsb
mov
int3
in
addr16
mov
or
mov
call
mov
adc
test
mov
push
ja
repz
ss
adc
imul
sti
std
mov
push
test
mov
sahf
inc
inc
out
fsub
mov
gs
push
jecxz
iret
pop
scas
das
into
sbb
sahf
aas
ss
movl
cmp
xor
add
xchg
mov
mov
xor
loopne
xchg
push
inc
out
mov
inc
shll
mov
lods
xor
fsubrs
addr16
mov
dec
add
xchg
pop
or
add
mov
xor
inc
fcom
push
inc
sarb
dec
mov
adc
enter
inc
cmp
jecxz
in
or
clc
jne
ja
or
and
xlat
dec
jle
inc
or
fs
pusha
inc
xchg
mov
sbb
push
sahf
mov
cvtps2pi
scas
cmp
aam
aas
dec
inc
ret
fidivl
lock
popf
add
xchg
or
xor
aas
and
lock
out
pop
dec
test
fildl
fmull
test
nop
mov
or
fnstcw
mov
mov
jae
fwait
cmp
in
jmp
add
insb
das
cmc
inc
dec
adc
push
mov
sbb
rclb
add
mov
les
push
in
in
lahf
inc
mov
xchg
cwtl
xchg
sbb
sbb
test
mov
sub
sbb
movsb
push
jg
mov
insb
fbstp
lds
cmp
inc
popf
popa
push
xor
add
rcrb
sub
in
ror
test
incl
inc
mov
bnd
fbld
add
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
nop
and
jo
jg
jo
and
lock
js
imul
jae
test
int
into
pushf
aas
loope
cli
subb
lret
adc
push
dec
iret
dec
scas
loopne
sub
adc
or
inc
out
mov
lds
loopne
ss
mov
push
jmp
pop
fld
aad
inc
or
and
aas
mov
loop
leave
jg
pop
push
pusha
mov
into
add
imul
push
mov
xor
stc
sub
and
xchg
cmpsl
add
scas
pop
mov
push
xchg
push
imul
lods
call
inc
stos
js
push
fsub
or
inc
mov
mov
xchg
enterw
xchg
sub
repz
outsl
pop
cli
sub
adc
and
dec
inc
test
pop
cmp
adc
mov
or
arpl
test
insl
mov
dec
adc
or
daa
aam
cmp
pop
jg
es
cs
pushf
movl
push
add
imul
inc
xor
inc
push
loop
add
into
push
loopne
int3
jne
sar
dec
mov
pop
mov
fstpt
xchg
mov
ret
push
mov
fsubrl
cli
mov
testl
sub
jnp
add
dec
pop
push
into
js
outsl
fsts
es
sub
mov
sahf
insl
loopne
inc
push
mov
pusha
dec
or
insb
mov
mov
cmp
sahf
nop
xor
add
mov
clc
fistpl
pop
and
push
cltd
dec
lcall
lock
loope
jo
jp
mov
ror
ret
lea
adc
push
inc
out
outsb
fisubrl
jnp
or
je
leave
fstpt
clc
mov
rclb
dec
aam
fucomip
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
dec
shrb
jg
jo
inc
mov
mov
pop
int
loope
ss
and
inc
xchg
out
arpl
mov
pop
pop
jae
fwait
lods
jnp
adc
imul
inc
ja
xchg
and
lds
adc
shll
xor
sub
mov
dec
outsl
add
js
jns
sub
pop
mov
popf
cmc
jge
inc
bound
dec
push
pushf
and
jge
push
mov
shll
clc
shl
leave
scas
or
ss
xor
xchg
dec
and
in
pop
dec
pop
cmp
outsb
mov
xchg
sbb
cmp
fmull
xor
jl
pop
clc
push
rcrl
mov
int
gs
sbb
xchg
ret
loop
cwtl
shl
fidivrs
ret
daa
cmpb
jge
negb
adc
or
mov
mov
popa
bound
jecxz
icebp
adc
mov
dec
in
fdivrs
adc
mov
roll
cmp
pop
sub
mov
je,pt
je
daa
mov
addr16
jb
xchg
faddl
xchg
loope
pop
and
decb
dec
int3
adc
mov
inc
add
cs
push
xchg
push
jnp
int
sbb
cmp
aam
in
fisubl
xor
cmp
insb
lea
inc
jle
in
and
jne
jecxz
mov
push
jae
nop
add
pop
jle
inc
sub
add
movsb
fwait
and
mov
cmp
mov
sub
adc
shrl
push
jne
dec
jle
daa
mov
pop
cld
or
mov
fmuls
adc
jge
movsl
in
addr16
pop
bound
mov
cmpl
sub
movsl
and
fsts
jmp
arpl
cli
lock
fdivl
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
or
loop
jo
jg
jo
jne
popf
jmp
mov
pop
mov
cmovp
fisubrs
mov
push
out
or
cmp
loopne
mov
repnz
inc
loopne
nop
inc
push
jns
fmul
cmpb
std
cmp
pop
icebp
pop
cmpsb
cli
inc
sub
shlb
ss
sbb
push
push
cmpsb
mov
cmpsb
dec
mov
cli
xchg
dec
imul
xor
or
xchg
fidivrl
ret
push
clc
xchg
call
movsb
shrb
xorb
xchg
xchg
dec
loop
and
jl
popa
int3
idivl
les
ljmp
pushf
stc
jbe
movsl
push
aam
shr
adc
sti
shlb
cmp
adc
stos
test
fdivs
jg
std
fisubs
adcb
outsl
add
mov
xor
add
pop
pusha
loopne
fwait
clc
dec
lcall
je
ljmp
sbb
in
in
mov
pop
cltd
add
stos
adc
adc
gs
or
jne
sbb
and
pop
mov
xor
push
fbstp
mov
rclb
repz
xchg
insl
inc
or
cmpsl
leave
into
mov
xchg
cmp
dec
sar
outsl
pop
jmp
cmc
push
inc
and
pop
lock
push
iret
sbbb
mov
jae
dec
adc
pop
push
rcrb
fcompl
cmp
push
nop
loope
lea
imul
popa
repz
inc
out
je
movsb
mov
lret
cmp
mov
cmp
fst
icebp
add
fs
add
adc
nop
mov
pop
jle
jge
cmpsb
xlat
lock
jo
mov
movups
flds
inc
add
int3
or
add
jbe
mov
cmpsl
add
loope
cltd
loopne
sub
add
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
rcrb
jo
jg
jo
int3
stos
cs
mov
sub
gs
fsubrs
addr16
sbb
xchg
out
push
and
push
add
enter
push
pop
sti
ds
mov
xor
out
sar
jmp
cmp
je
dec
movsl
cmp
add
inc
sti
call
bound
xor
das
dec
inc
adc
xchg
lods
lea
in
fsubr
lret
outsl
ds
fnstsw
jp
mov
pop
mov
push
push
cmp
out
jb
mov
and
xlat
sub
movsb
loop
and
add
sub
out
cltd
add
push
sbb
pop
add
inc
shll
les
add
cltd
icebp
insb
dec
stc
and
sub
add
cmp
inc
mov
shl
push
dec
out
in
mov
lret
or
notl
out
fnstcw
mov
push
ror
out
xor
pop
add
in
jmpw
xchg
adc
inc
inc
fst
mov
pushf
aas
dec
es
inc
ret
pop
sarb
jbe
mov
mov
fbstp
sub
inc
jnp
lahf
mov
jno
add
push
stos
xor
ret
cmc
arpl
push
fbld
mov
add
mov
or
pushf
mov
mov
xchg
lret
xchg
push
sbb
and
movsl
cmp
cmpsb
or
arpl
sub
push
arpl
mov
push
jmp
mov
jae
jno
mov
hlt
or
push
xchg
ja
jo
xchg
jg
jo
pushf
xor
and
sub
pop
mov
lds
sbbb
sbbb
push
mov
das
mov
mov
push
and
cmpb
pop
call
push
adc
xchg
add
inc
cli
clc
or
and
sub
lret
sub
jno
and
xor
dec
fldenv
and
push
minps
xor
lds
mov
loopne
outsl
jmp
jb
xor
inc
jbe
dec
pop
mov
cltd
movb
lahf
xor
pop
out
nop
fisttps
add
cld
mov
dec
aaa
add
and
sub
insb
imul
fcoms
movsb
jbe
dec
fsubl
cmc
jmp
mov
adc
nop
sub
mov
mov
es
jmp
pop
aam
jo
mov
mov
fadd
fimuls
cmp
lcall
andb
push
sub
fisubs
cs
push
ficoms
cld
and
adc
in
jbe
push
aad
jae
in
sub
add
lock
adc
mov
adc
inc
xchg
pushf
test
mov
stc
mov
pop
mov
xchg
push
ret
into
push
pop
jbe
fidivl
xor
add
jl
int
xchg
mov
arpl
or
jno
mov
jmp
aas
xchg
add
sbb
nop
ljmp
iret
daa
push
mov
and
jmp
imul
enter
aas
test
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
pop
filds
xchg
jg
jo
xor
or
shl
inc
sub
movsl
popf
or
sbb
or
emms
stc
cmpb
xchg
add
jno
loopne
lahf
mov
mov
js
dec
daa
scas
ds
sbb
xor
fcoml
and
push
insb
push
rorb
addl
cld
pop
jo
loop
pop
pusha
mov
loopne
into
leave
pop
into
add
gs
leave
imul
mov
ljmp
add
hlt
out
rep
imul
push
push
cmpsl
add
sub
pop
cs
xchg
sub
mov
movsb
insl
or
les
in
xchg
out
aas
push
push
pop
dec
in
mov
enter
jno
xchg
mov
sub
in
jg
in
mov
push
js
popa
dec
add
popa
call
mov
dec
mov
pop
test
ficoml
dec
insl
nop
mov
push
int3
xor
shrb
insb
mov
in
inc
decl
daa
and
add
adc
adc
cli
xor
inc
push
lret
dec
outsb
mov
addb
repnz
push
aaa
adc
adc
add
out
mov
and
jmp
sbb
mov
add
mov
mov
inc
push
mov
inc
aam
inc
repnz
jo
adc
pop
iret
sub
stos
and
daa
rcrb
inc
push
das
popa
outsb
dec
push
jl
and
sub
push
adc
pop
std
fcomps
xlat
fmull
clc
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
bound
adc
and
jo
xchg
jg
jo
jmp
adc
cs
or
data16
push
xchg
inc
sub
insb
adc
aad
or
fsubl
mov
pop
aas
mov
pop
sub
in
push
sub
insl
add
xor
mov
testl
ja
insb
lahf
loope
jns
inc
hlt
testl
in
imul
popf
int
test
test
shrb
push
fldcw
jle
xorl
jne
addr16
mov
test
xchg
in
shlb
cwtl
pop
mov
xchg
and
push
out
icebp
fcompl
sbb
repz
xchg
jg
loopne
pop
dec
pop
hlt
mov
movsl
mov
fbld
mov
inc
adc
jnp
xor
push
push
mov
pop
xchg
cmpsl
fwait
cmp
mov
or
fmulp
mov
mov
pop
xchg
inc
fimuls
std
mov
cld
dec
inc
in
clc
shl
mov
loopne
into
jnp
and
push
out
imul
mov
mov
push
mov
sbb
cld
jmp
or
fs
ret
loopne
lods
push
lcall
fmul
shr
ljmp
xchg
sbb
xor
call
mov
cmpsl
cmp
xchg
dec
fsubrp
outsb
sub
mov
adc
popf
stos
je
lcall
mov
sub
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
adc
adc
ljmp
into
sub
addr16
fsubr
aaa
pop
or
in
pop
decl
sub
shll
mov
out
in
jo
pop
mov
cli
sbb
sub
xchg
pusha
pop
sub
loopne
test
iret
or
into
jl
ss
aas
mov
mov
lret
cmpsl
test
cmp
push
rcll
dec
lret
ret
dec
outsb
bound
loope
mov
out
mov
or
aaa
inc
ret
or
std
rclb
popa
int3
lret
ret
add
cmpsl
add
in
sub
shlb
xchg
sub
xor
mov
jp
mov
or
roll
fwait
mov
inc
xor
mov
cmpsb
xchg
ret
sub
lret
sarb
cmp
icebp
dec
sbb
jbe
aad
xchg
ret
add
or
lret
and
pop
and
push
inc
pop
cmpsb
jecxz
fists
xchg
jbe
ds
mov
je
jnp
sti
iret
mov
mov
data16
repz
inc
mov
fidivrs
cltd
or
mov
lock
adc
mov
in
cmp
cmp
dec
and
cmpsb
scas
pushf
sahf
in
ljmp
or
into
pop
add
pop
cmp
imul
in
mov
or
jo
cmp
call
mov
out
test
jnp
ret
cli
shlb
push
in
imul
cmc
loope
jo
out
mov
mov
pop
ret
adc
sub
dec
call
add
int
add
add
rorl
add
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
xchg
stos
movsb
adc
xchg
jg
jo
sbb
inc
jl
xchg
sub
test
or
leave
adc
loop
popl
in
pop
dec
stos
mov
sbb
and
aam
lcall
fcomps
stc
mov
rorb
in
mov
dec
and
or
fwait
in
inc
popfw
sbb
stc
dec
mov
jg
mov
test
or
add
cmpsl
clc
push
mov
je
loopne
mov
dec
dec
adc
addb
popa
popf
xchg
fldl
push
test
je,pt
sti
mov
push
and
adcl
aad
cmp
pop
and
popl
pop
mov
in
lcall
jns
adc
and
jo
pop
mov
xchg
or
pop
popa
dec
data16
idivl
jmp
lods
sahf
adc
addr16
mov
xchg
lds
jae
cld
int3
inc
ss
jp
jg
adc
adc
or
sbb
mov
roll
fidivrl
push
sub
push
xchg
push
rol
in
mov
push
adc
dec
adc
cmp
rorb
dec
ja
mov
or
push
xchg
scas
sbb
and
mov
bound
mov
mov
sbb
lds
inc
or
lret
push
sbb
adc
aad
mov
mov
push
aaa
xchg
imul
imul
jmp
mov
icebp
in
icebp
mov
push
push
or
jo
jo
xchg
jg
jo
mov
pop
popa
xlat
adc
repnz
and
dec
jae
stos
divl
inc
sub
mov
orb
cmp
test
ljmp
stos
mov
std
push
jmp
test
mov
cmpsl
pusha
jne
push
sub
in
sub
imul
test
test
repnz
ss
xchg
dec
xlat
mov
inc
ss
sti
das
push
mov
faddl
in
push
xchg
inc
into
pop
sahf
sbb
sti
std
dec
mov
mov
fdivrs
lahf
adc
and
xchg
adc
rcrb
popf
repnz
ficoms
jno
pop
xor
imul
lahf
add
lods
roll
dec
push
fwait
inc
mov
stc
in
jns
pop
cs
and
cmc
jae
dec
inc
push
and
xor
in
xchg
mov
mov
add
sbb
add
hlt
push
arpl
insb
pusha
loope
mov
imul
and
jmp
jmp
jle
inc
loop
fwait
loopne
sarb
lret
sub
bound
cmpsl
imul
pop
mov
add
addr16
nopl
subb
sahf
xor
push
or
push
push
push
mov
pop
ja
xchg
adc
loope
outsl
mov
jmp
mov
adcb
in
repnz
mov
dec
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
ds
xchg
cmc
jo
xchg
jg
jo
xor
in
sbb
popa
fisubs
mov
repnz
arpl
push
popa
movsb
jl
push
cmp
push
fistl
popa
into
pop
pushf
cld
push
lods
cmpsl
sahf
test
nop
mov
mov
js
sub
or
mov
insl
or
jae
mov
pop
jl
and
pop
sub
inc
mov
mov
cmp
data16
pop
sub
test
aad
lcall
stos
in
aaa
mov
jo
inc
mov
aas
push
push
xchg
cwtl
xchg
cmp
push
jne
in
stos
fs
xchg
ss
stos
adc
pop
pop
jl
xchg
bound
outsb
lret
shrl
pop
rolb
xlat
jns
loope
mov
cmp
jb
dec
jo
add
push
test
xor
imul
jbe
lock
jmp
inc
adc
dec
addr16
pop
mov
rorb
mov
call
jo
lock
insb
fsubrs
inc
xchg
add
pop
into
cmc
aaa
aas
xor
lret
push
aas
mov
jmp
leave
cmc
lods
inc
and
and
jl
xchg
sub
dec
pop
add
enter
adc
jg
mov
jp
jae
sub
gs
cmpsb
cld
fidivs
daa
int3
outsl
xlat
inc
imul
pusha
add
out
push
ljmp
gs
notb
jns
scas
shrb
lahf
test
test
cmpsl
sbb
jmp
mov
lods
sub
inc
or
or
mov
add
frndint
std
imul
mov
xor
dec
pop
and
repz
xchg
jg
jo
mov
aas
call
roll
popa
sub
nop
sbb
mov
mov
sub
in
pop
dec
insl
inc
cmc
jge
mov
sbb
or
cmp
or
adc
push
mov
pop
xor
fisttpll
push
ljmp
in
aaa
cwtl
push
shll
push
pop
mov
ds
cltd
mov
dec
dec
stos
aas
addb
sahf
std
sbb
adc
sub
mov
mov
jge
adc
test
cs
js
adc
lods
fimuls
sub
add
xor
jecxz
xchg
dec
test
outsb
cld
adc
add
int3
int
pop
cli
jae
mov
inc
pop
cmp
movsl
push
mov
in
xchg
iret
pop
add
movsb
adc
xabort
pusha
sub
mov
sbb
push
mov
mov
push
and
in
inc
shlb
xor
int3
adc
push
mov
cmc
jmp
dec
cmp
add
mov
pop
lcall
push
mov
pop
and
push
pusha
add
jb
sub
jle
xor
sbb
and
dec
addr16
inc
xor
jmp
loope
mov
dec
xor
xchg
test
syscall
jmp
xchg
xor
inc
push
in
cmc
dec
mov
in
or
scas
push
rolb
inc
adc
mov
mov
popa
ds
aad
mov
pusha
clc
aas
jb
cmp
cmp
or
jmp
hlt
sbb
rep
cmp
aaa
enter
dec
bnd
xchg
jg
jo
mov
ficompl
stos
xor
sub
inc
mov
dec
dec
and
xor
mov
test
add
xchg
bnd
rcrb
push
rcrb
inc
psubusb
mov
ljmp
inc
jmp
cmc
int
mov
aam
notl
adc
pop
movsb
xchg
mov
ljmp
sub
testl
mov
out
sub
xchg
imulb
ss
lods
arpl
push
in
sbb
pop
xchg
sub
imul
jo
into
push
pop
adc
fists
push
xchg
cmpsb
inc
fisubs
lods
pop
pop
dec
mov
dec
ljmp
push
mov
add
and
add
cmp
cli
ficomps
scas
xor
mov
cwtl
arpl
leave
test
mov
rep
sbb
movsb
add
pop
leave
xor
jge
push
cmpsl
adc
rcll
sub
add
divl
and
fcoms
xchg
fwait
mov
inc
jno
xor
ljmp
dec
sti
aas
iret
mov
cmp
xchg
add
add
or
inc
mov
je
xchg
xchg
in
loop
xchg
test
and
les
pop
add
push
stos
push
xor
mov
mov
mov
mov
fidivrl
dec
jge
mov
lret
flds
out
shlb
rcll
sahf
cmp
and
lds
test
add
add
clc
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
adc
jg
jo
mov
shll
or
jle
call
lahf
xlat
or
pop
pusha
or
outsb
fisttpl
in
nop
add
adc
dec
mov
ret
into
mov
ret
inc
xor
aas
mov
cwtl
sbb
jbe
pop
inc
shr
popa
pop
cmpl
inc
or
repz
push
jecxz
cld
dec
inc
add
aaa
shrl
mov
ja
ljmp
adc
lock
fwait
mov
cmp
jmp
test
xchg
pop
xlat
sub
fidivs
dec
push
mov
jge
sub
int3
mov
std
in
jo
xchg
test
pusha
loop
mov
pop
lgdtl
xchg
push
stc
and
inc
outsl
rcrl
orl
adc
add
in
in
add
sub
or
xchg
shlb
rclb
mov
sbb
jp
shrl
rclb
inc
adc
cwtl
adc
sub
ds
xlat
mov
stos
cwtl
ret
xchg
pusha
cmc
inc
cltd
loopne
outsb
push
cmpsl
push
hlt
and
jo
lea
xlat
std
repz
mov
aam
add
mov
bound
xor
xchg
loopne
mov
repnz
cmp
jecxz
sbb
mov
movsl
mov
inc
mov
filds
adc
shrl
mov
jg
mov
cmpsl
xchg
sub
movsl
cmp
movsb
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
push
inc
jne
sub
cmpsb
shll
aas
jo
dec
mov
xchg
add
sub
and
popa
jns
sbb
mov
scas
sub
sbb
xchg
mov
and
xchg
ja
push
shll
in
scas
imul
sub
push
xor
dec
pop
cmc
mov
scas
lock
orl
loop
mov
adc
inc
adc
mov
outsb
loop
add
sbb
rcrl
add
jb
xchg
pop
mov
stc
lahf
xor
imul
subb
shlb
xchg
or
mov
ror
mov
ss
mov
in
lahf
mov
repnz
push
adc
data16
and
divl
aas
adc
xor
mov
std
iret
outsl
mov
inc
sahf
cltd
nop
or
out
sti
jno
jecxz
adc
in
mov
xchg
mov
cmc
out
mov
cmp
pextrw
push
pop
mov
imul
loope
ja
and
pop
mov
sbb
in
nop
movsb
es
mov
imul
in
fs
pop
push
pop
or
adc
cs
call
rclb
lahf
stos
je
aaa
jmp
mov
push
aad
sbb
aad
fsubrl
or
jge
and
imul
cmc
xchg
lods
jns
xlat
loop
jbe
daa
incl
pop
inc
push
inc
fisubl
mov
cld
call
mov
cwtl
push
jb
adc
fdiv
shlb
mov
int3
mov
mov
stos
leave
out
test
pop
icebp
out
int3
mov
sbb
enter
add
pop
jmp
in
jle
adc
push
sbb
jno
push
adc
xor
fldt
add
int
mov
scas
imul
add
es
add
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
cmp
jb
jo
sbb
inc
push
aad
test
mov
out
mov
push
pop
jmp
lahf
push
scas
inc
hlt
cmp
mov
ja
xchg
mov
dec
icebp
je
xchg
inc
notl
push
xlat
jmp
xchg
fs
mov
mov
leave
mov
or
mov
push
sbb
add
cmp
dec
inc
jns
push
adc
scas
cmp
sbb
jno
jb
aas
push
jmp
cld
add
iret
fsts
sbb
mov
leave
jge
daa
xchg
out
scas
loop,pn
mov
test
sub
jg
stos
imul
add
cwtl
aad
mov
xor
in
mov
jne
mov
outsl
je
dec
clc
fs
cmpsb
stos
push
adc
lock
fbstp
and
scas
pop
xchg
bound
cmp
or
hlt
outsb
cmpsb
mov
push
dec
push
cmp
xorb
and
sub
stc
lea
cld
and
pop
das
iret
enter
inc
mov
test
enter
inc
lea
iret
and
pop
adc
or
jnp
and
insl
mov
adc
and
arpl
jae
mov
pushl
sti
mov
out
cmp
or
sar
xchg
loop
pop
push
mov
xor
inc
push
jle
insb
out
test
aad
pop
rcrb
inc
int3
in
loop
jecxz
mov
push
cld
dec
xor
jge
fwait
sbb
jle
subl
pop
sahf
lods
or
sti
and
icebp
push
push
aas
icebp
les
mov
jecxz
jo
xchg
jecxz
pusha
inc
adc
ds
ds
mov
cmpsb
movsb
jle
imul
push
gs
call
sahf
xchg
stos
inc
inc
mov
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
into
sub
jo
jb
jo
pop
das
cmc
xchg
fwait
aam
rcr
call
sub
push
cmp
add
xchg
mov
sbb
and
xor
pushf
and
jb
popf
mov
outsl
jmp
ret
pusha
movsl
adc
insb
shl
pushf
loop
xchg
mov
sub
push
imul
pop
adcl
adc
dec
inc
xor
pop
stc
in
shll
dec
push
imulb
test
leave
les
insb
adc
inc
stc
xor
sub
lahf
pop
test
add
mov
dec
out
daa
ret
shlb
push
fnstcw
stc
test
pop
or
jnp
into
fnsave
fmuls
sub
and
scas
lret
adc
out
in
inc
jge
adc
sbb
sahf
shrl
lods
int3
push
or
sbb
scas
jns
inc
outsb
sar
insl
mov
hlt
push
repnz
xchg
stos
jge
fs
shll
icebp
mov
in
hlt
cltd
lcall
sbb
pop
call
push
add
movsb
dec
mov
loop
ss
mov
js
scas
push
mov
repnz
lret
mov
xchg
cltd
xor
xchg
xlat
and
in
mov
jb
ljmp
cmp
adc
xchg
paddusw
push
call
mov
and
pop
and
push
dec
out
je
sbb
pop
adc
aam
jp
shrb
fsubl
dec
cwtl
cmp
dec
mov
xchg
cmp
add
xor
dec
mov
js
stos
xchg
ffreep
push
aas
sbb
movsb
das
and
sbb
cmpsl
idivl
jae
imul
and
aas
icebp
jnp
sub
sub
xor
jmp
popa
dec
loope
icebp
jge
into
insb
push
mov
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
pusha
rol
jg
jo
jb
jo
adc
inc
fldcw
jp
adc
pop
mov
scas
dec
adc
push
pop
cli
data16
adc
mov
js
xor
pop
icebp
mov
jb
mov
int
repnz
cs
adc
inc
mov
clc
repnz
or
ljmp
cmp
or
sub
iret
or
es
mov
pop
pop
add
nop
outsb
sub
pushf
mov
ret
daa
mov
pushf
ss
pop
negl
or
outsb
mov
sbb
mov
lret
jo
adc
decb
adc
stos
lcall
xchg
adc
cld
fsubrl
lds
jecxz
and
dec
adc
mov
jl
lds
aaa
hlt
or
mov
inc
in
shlb
loop
addr16
cmp
shrl
add
pop
or
jne
repnz
das
test
cmp
inc
xchg
pop
or
ficoms
or
pushf
mov
mov
sbb
pushf
into
scas
cmp
fisttps
idivl
test
in
cli
adc
jp
jle
mov
push
fdivrl
iret
insb
inc
gs
repnz
mov
lret
jle
daa
pop
in
repnz
out
add
and
out
cmp
les
push
or
test
sub
sbb
dec
xor
jl
enter
fmul
outsl
jmp
sub
sbb
jae
ds
fs
ss
inc
add
mov
in
mov
xor
jno
sub
mov
aaa
mov
lret
add
mov
mov
lret
outsl
push
sbb
pop
repz
push
in
xchg
mov
repnz
push
cmpsl
hlt
loope
daa
lock
push
or
jmp
jnp
xchg
les
sub
int
mov
jo
jg
jo
dec
fildl
scas
jns
mov
fildll
mov
icebp
aaa
mov
lret
fstl
mov
lock
inc
insb
sub
inc
adc
and
sbb
lret
cmp
rorl
std
mov
das
lods
mov
aaa
clc
pop
std
imul
leave
test
rcrl
loop
jg
test
aam
adc
adc
inc
cmpsb
sub
cmp
fistpll
les
cltd
out
adc
ret
std
pop
inc
inc
fwait
pop
sub
insb
xchg
pop
sub
lret
rolb
push
push
mov
pop
jmp
push
push
push
test
mov
jge
insb
push
sub
dec
les
push
lret
sahf
xor
iret
add
shlb
mov
xchg
lods
and
stos
pusha
add
push
inc
out
test
xlat
out
sub
mov
sub
ds
mov
repz
adc
add
das
sahf
fwait
xor
jge
js
sbb
es
hlt
sub
mov
test
data16
push
mov
inc
mov
pop
cld
pusha
and
ret
mov
in
fdivs
ret
mov
dec
scas
testb
push
sub
push
stos
pop
add
stc
pop
gs
mov
into
mov
test
adc
adc
int
mov
push
xchg
add
leave
out
repnz
xor
les
loope
lds
mov
das
and
int3
push
clc
or
scas
sar
mov
xchg
add
sbb
std
mov
mov
cli
bound
mov
push
xor
sub
js
xor
mov
cwtl
imul
pushf
jb
add
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
shll
jo
leave
jle
jo
pusha
test
outsl
pop
mov
outsl
dec
jbe
mov
adc
in
inc
mov
and
ds
jb
out
xchg
in
mov
or
call
mov
in
mov
and
sub
xlat
ficompl
sub
pop
scas
add
stos
lock
jle
mov
ficoms
inc
push
push
inc
and
pusha
in
xchg
pop
int
mov
sbb
cmp
fldcw
push
jno
pusha
jo
pop
into
push
loope
fxtract
jno
jecxz
push
cld
sbb
pop
adc
stc
and
loopne
mov
es
imul
loop
mov
sub
jbe
mov
mov
sbb
inc
cmpsb
sbb
xorl
jl
rolb
push
les
sbb
inc
mov
adc
mov
cmc
lods
mov
add
fbld
test
stc
into
scas
repz
mov
pop
sbb
cmp
lock
sahf
push
pop
jmp
mov
adc
cmp
inc
test
repz
push
pop
outsl
push
adc
jge
sbb
and
xchg
push
lcall
add
lret
loopne
mov
outsl
in
mov
and
sbb
push
mov
jle
dec
sbb
out
or
jp
std
inc
call
cmp
mov
es
inc
xchg
jns
push
xor
subb
cmp
dec
int3
data16
outsl
xchg
lahf
or
loop
and
mov
sbb
cli
mov
imul
dec
icebp
cmp
shrl
and
out
push
mov
test
ret
imul
leave
pop
sbb
popa
sti
pop
add
ljmp
xor
ljmp
push
pop
fadd
out
lea
cmp
and
mov
shlb
or
mov
les
xchg
jecxz
jmp
mull
add
fwait
jge
data16
adc
mov
push
js
js
outsb
jmp
sub
test
add
add
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
insb
insl
mov
jo
jle
jo
rcrl
cmp
xor
cmpsb
sbb
imul
and
aad
mov
sub
inc
int3
loope
in
adc
adc
inc
insb
pop
out
xor
ucomiss
icebp
in
inc
hlt
adc
ds
imulb
sub
dec
jl
addr16
dec
dec
movq
stos
fistpl
inc
out
aaa
pop
inc
lret
addr16
pop
mov
dec
inc
mov
pop
punpcklbw
sti
shl
cmpsb
xor
mov
fidivrl
xor
sti
jecxz
pushf
test
xchg
push
fidivrs
imul
int3
sub
arpl
movsl
mov
jnp
jb
jge
cmp
sbb
imul
mov
aas
loop
cld
lcall
stos
dec
mov
pop
dec
shll
lret
in
pop
sub
jmp
je
imul
mov
fcoms
sub
inc
cltd
call
gs
mov
xchg
adc
int3
push
dec
mov
insb
fidivs
inc
jno
sub
movsl
cmpsl
int
push
lahf
jge
scas
popf
ja
aad
cwtl
fcoml
neg
loop
incl
xchg
and
nop
adc
mov
push
jg
push
add
add
addb
inc
imul
dec
jl
fldcw
rcll
adcb
xchg
iret
cmp
jl
adc
add
outsb
mov
icebp
cld
xor
mov
dec
or
pop
lret
cmp
fwait
shrb
lea
aam
cs
jb
dec
mov
cwtl
push
dec
leave
ret
stos
sub
add
fwait
lcall
push
push
popl
push
mov
call
fwait
mov
addr16
push
jge
xor
repnz
ficoml
test
xchg
lds
inc
or
cmp
and
jnp
lret
ds
jg
imul
push
sbb
mov
mov
out
insl
gs
test
mov
cmpsl
inc
add
lcall
add
mov
sub
mov
addr16
push
gs
ret
add
add
and
dec
xchg
rcrb
xorb
jle
jo
inc
sub
stc
loop
inc
dec
sub
mov
js
nop
jecxz
lods
lds
add
inc
pop
pop
mov
xor
aas
push
jge
dec
push
pop
int
loope
xor
or
aaa
das
sub
sub
jp
test
or
push
inc
push
xchg
sub
movsl
add
out
mov
xchg
adc
addr16
jle
lahf
cmp
or
and
dec
xchg
mov
pop
ss
add
and
int
mov
or
jp
pop
inc
repz
fnstsw
scas
sub
test
out
adc
ljmp
mov
sbbl
fldcw
mov
stos
call
mul
dec
aas
cltd
inc
jae
ljmp
shrl
js
sbb
or
push
lods
mov
and
cmc
inc
std
shrl
dec
xor
xor
push
mov
ret
dec
fisttps
and
pop
icebp
cmc
lods
gs
leave
popa
aad
test
dec
inc
paddusb
inc
je,pn
mov
or
outsl
int3
loope
sub
outsl
stos
pop
fistpl
das
jno
or
push
add
pop
mov
les
xchg
jo
xor
pop
dec
push
ret
test
lcall
loop
repnz
dec
adc
jno
mov
inc
jbe
jo
adc
scas
dec
lcall
push
and
repz
imul
dec
pop
insl
pop
sbb
xchg
fsts
inc
inc
push
lret
sbb
push
pop
fisttps
test
imull
adc
add
repz
addb
push
out
cmp
mov
stc
ret
jmp
lret
out
dec
shrb
mov
rolb
xor
push
jecxz
adc
dec
cmpsb
push
lret
aas
inc
add
push
xor
push
xor
mov
push
aad
pop
clc
mov
daa
cmp
jp
int3
arpl
jne
das
pop
mov
sbb
or
jno
mov
adc
pop
sti
push
and
mov
ret
ret
pop
jbe
inc
jl
lcall
leave
jg
xor
jno
sbb
inc
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
dec
mov
jo
dec
jge
jo
push
jne
mov
jge
stc
adc
xchg
sbb
push
pop
pop
inc
mov
gs
stos
lock
lea
sub
add
cmp
sbb
inc
cmp
cli
cmpb
xchg
imul
outsb
sbb
mov
bound
movsl
jmp
push
popf
rolb
in
in
cmp
dec
movsl
fisubrl
adc
add
xor
jp
cmp
push
dec
loop
loopne
add
or
push
sub
inc
addr16
pop
pop
cmp
gs
push
sbb
mov
dec
jge
call
shl
cli
sub
icebp
imul
xchg
sub
jge
push
or
mov
out
lret
pop
in
pop
cwtl
pop
stos
lret
fwait
shlb
jp
xor
es
sub
mov
fbld
repz
in
mov
pop
cmp
sbb
in
imul
mov
push
bound
cmp
add
repz
sub
mov
add
bound
icebp
dec
aaa
push
xor
sub
push
jge
icebp
mov
dec
mov
int
adcl
push
cwtl
out
mov
stc
jle
xchg
movsb
lret
pop
dec
movsl
or
and
or
xor
repz
lock
or
fidivl
jmp
fdivl
leave
jge
push
cmp
roll
mov
sub
lock
and
adc
jge
push
adc
fists
pop
cmp
and
xor
aam
add
in
push
in
insb
mov
jle
xchg
daa
mov
cmp
lods
adc
es
mov
rcrb
and
addr16
mov
mov
dec
mov
push
insb
icebp
jge
in
subb
lahf
pop
add
jecxz
sub
cs
sbbl
and
sarl
sub
out
cmpsb
mulb
roll
aam
pushf
std
push
jecxz
test
jo
fcompl
daa
or
pushf
cld
or
xor
add
jnp
scas
into
mov
rcrl
rolb
daa
xor
adc
mov
dec
addr16
imul
divl
cmp
adc
insl
mov
stos
aad
mov
scas
cmp
pop
in
in
xlat
jb
or
mov
xchg
add
stc
and
call
push
sub
push
movsl
xchg
jno
jo
and
ss
sub
mov
pushf
inc
sbb
dec
loop
mov
inc
daa
dec
aas
ljmp
aam
repnz
or
sub
add
add
pop
pop
outsb
stos
sbb
inc
inc
test
out
mov
xor
iret
daa
xor
in
fcoms
lock
addr16
mov
into
and
cmp
mov
jmp
int
xor
out
push
jb
fisubl
fwait
int
ja
dec
jae
shrl
push
scas
in
inc
out
mov
pop
fmuls
sub
or
ficoml
or
ljmp
ror
ja
jne
mov
scas
je
lea
into
iret
out
in
in
inc
pop
mov
mov
inc
push
imul
jnp
lods
jno
sub
push
nop
out
jae
pop
cmp
xor
test
xchg
adcl
ds
mov
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
xor
push
mov
dec
jge
jo
dec
testb
out
xor
data16
mov
xchg
std
and
jns
imul
hlt
test
sub
mov
push
push
lods
mov
mov
aaa
jl
fnstcw
sbb
jp
in
add
les
pop
sbb
mov
sub
mov
outsl
sahf
subb
mov
in
jae
xor
ror
outsl
movsl
pop
icebp
pusha
stos
into
je
es
mov
shl
xor
add
dec
xchg
stc
roll
rclb
mov
push
aaa
sub
mov
cwtl
jne,pt
add
sbb
js
in
call
mov
aad
push
jbe
iret
fildl
cmpsl
into
pop
dec
and
gs
or
push
inc
pop
dec
andl
bound
push
pushf
call
ja
ror
pushf
xchg
adc
cld
xlat
rclb
shl
addr16
push
pushf
xchg
dec
insw
loope
inc
js
jns
or
xchg
lahf
sbb
xorb
loopne
or
sbb
in
into
or
es
or
dec
xchg
push
clc
jae
aad
xor
xchg
mov
dec
je
push
mov
jl
hlt
popa
ljmp
add
jb
in
lock
pop
fiaddl
mov
lods
xchg
xor
and
pop
jae
add
mov
lods
xor
adc
xchg
out
xchg
test
or
or
lret
adc
jmp
push
ss
push
push
xchg
les
data16
les
jmp
imul
cmp
fsubs
les
mov
xchg
add
test
sub
mov
call
gs
bound
sub
sub
fs
adc
cmpsb
int3
sbbl
subl
fwait
jecxz
adc
popa
cmp
sbb
cmp
enter
and
mov
pop
adc
inc
xchg
lret
inc
popa
and
cld
sbb
rolb
adc
pop
xchg
les
dec
data16
div
adc
scas
cmpsl
jmp
pusha
pop
cltd
out
sub
in
cs
sbb
in
cli
sub
inc
cs
mov
imul
loop
sahf
dec
inc
sbb
mov
loopne
pop
inc
stos
stc
push
std
and
pop
out
cmp
into
aaa
jno
dec
xor
pusha
iret
repz
cmpsl
std
sahf
in
scas
mov
outsb
jge
mov
add
int3
xchg
adc
add
xchg
test
mov
call
hlt
out
dec
xchg
sbb
jl
or
push
aam
fdivl
fiadds
or
jb
bound
ret
movsb
es
or
andl
test
push
xchg
cltd
pop
sbb
dec
test
lods
xchg
and
sti
icebp
fmull
gs
lret
sbb
inc
pop
sub
ror
mov
bound
jecxz
mov
inc
lock
mov
sahf
inc
jne
cmp
inc
aas
mov
aaa
cmp
sbb
adc
out
dec
mov
cs
inc
lds
mov
xchg
fnstenv
push
leave
cld
stos
sub
jle
cmpsb
lods
or
into
mov
bound
fnstcw
pushf
and
ds
jecxz
sbb
jp
mov
setp
ret
jg
inc
lods
xor
int3
loop
dec
inc
mov
pop
xchg
jns
mov
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
fiadds
jo
jge
jo
cld
mov
push
mov
sarl
cmc
or
pop
or
fidivrl
inc
or
sbb
ror
sarl
add
in
sub
push
fcmovb
ror
sbb
pushf
js
jle
sarb
mov
rcrl
and
cmp
jg
xchg
mov
pop
mov
imul
or
loope
and
jb
cmp
xor
push
mov
fdivp
adc
pop
xor
popa
inc
in
mov
xchg
sbb
xor
or
cs
xor
dec
mov
mov
mov
mov
dec
jns
xor
js
add
mov
xchg
in
mov
sub
out
lret
and
gs
lahf
add
cmpsb
mov
das
sub
inc
cmp
call
sti
fs
cmpsb
sahf
fistpl
nop
out
mov
adc
pop
daa
cmp
test
cltd
mov
sbb
sti
int3
mov
and
add
daa
ljmp
pop
ss
mov
adcb
stc
fsubrl
aad
xorl
imull
int3
adc
mov
fdivl
enter
pop
pop
sbb
scas
pop
mov
xchg
sub
aas
stc
push
lods
outsb
scas
and
int3
jp
mov
add
adc
cli
fsubrl
xchg
data16
jne
push
jo
push
loope
test
pusha
nop
dec
cltd
neg
pop
jo
add
repnz
loope
movsb
andl
int
rorb
es
loop
push
adc
add
cmc
hlt
arpl
test
mov
xor
ret
daa
add
sbb
push
add
std
xlat
cmp
sbb
lods
fs
dec
sub
xlat
stos
jge
mov
je
out
jno
dec
loope
mov
cli
pop
dec
popa
and
pop
je
inc
cwtl
sub
std
cli
add
rcr
push
leave
loopne
lea
add
daa
xor
sub
and
cltd
push
sub
adc
push
inc
and
nop
mov
mov
jge
and
iret
in
lcall
sarb
stc
mov
rolb
adc
mov
outsl
in
repz
cmp
imul
jmp
pop
sub
xchg
and
enter
xchg
ss
pop
mov
test
leave
cli
add
fisubl
cltd
addl
cli
ret
in
jle
int
icebp
push
in
jns
pop
stos
xor
or
mov
cmc
inc
or
mov
nop
or
inc
mov
sub
jmp
or
into
and
xchg
nop
repnz
jmp
pop
cmp
loopne
xor
insb
loop
add
lahf
and
ret
aas
loop
or
std
xor
dec
popa
pop
mov
add
mov
adc
call
cs
xor
add
aaa
cmp
jb
and
orl
mov
movb
lock
jnp
stc
mov
pop
pop
cmp
shll
imul
idiv
dec
mov
and
mov
insl
push
dec
or
int
test
lcall
rcr
testb
push
fldcw
lods
fstl
mov
lret
and
movsl
in
sbb
bound
mov
inc
add
lds
jmp
loop
jns
in
sub
movsl
rorl
sbb
jno
call
lret
mov
mov
mov
jmp
xlat
frstor
pop
testl
insb
xor
xchg
jo
dec
jge
jo
jns
inc
test
mov
mov
sbb
sub
adc
inc
addr16
pop
repz
dec
inc
faddp
jg
das
inc
jecxz
adc
mov
cld
push
pop
pop
rclb
rcrb
jecxz
test
out
popa
jne
pop
cs
out
testb
mov
mov
out
adc
fs
movsb
fisubrl
jg
push
mov
arpl
push
clc
out
rolb
jb
sbbb
bndstx
ljmp
outsl
into
loop,pn
mov
cli
sarl
lret
sbb
xor
lahf
fisttpll
ds
lods
rcrb
lock
mov
imul
pop
cwtl
xor
aaa
push
jp
iret
sub
jmp
dec
out
pop
sbbl
lret
sub
lds
out
stc
mov
movsl
or
mov
call
push
pop
add
fstps
lahf
sub
popa
mov
imul
cmp
repnz
mov
fcmovnb
jno
inc
cmp
add
testb
dec
cmp
scas
addb
lods
push
xchg
xor
cli
cmp
cmp
mov
push
test
dec
insb
pop
cs
or
ds
jge
mov
out
xchg
and
xorb
push
pop
ja
fwait
pop
fldl
out
clc
mov
sti
or
mov
insb
test
mov
lock
mov
repnz
popa
adc
mov
dec
out
mov
xlat
fsub
clc
mov
mov
out
les
inc
sub
movsl
frstor
sar
cwtl
push
ret
pop
call
push
popf
mov
mov
mov
cmpsl
pop
out
dec
jecxz
es
enter
lds
scas
inc
mov
dec
mov
push
iret
int3
add
cmp
or
clc
dec
mov
call
insb
shrb
decw
add
add
data16
shll
cmpsl
push
push
pop
jno
jp
iret
aas
jns
cmp
movswl
repnz
sub
pushf
xchg
scas
scas
xlat
js
data16
and
popa
fiaddl
arpl
xchg
addr16
mov
mov
sub
cmp
sub
fisubl
pop
mov
cli
int3
xor
sub
sub
pop
inc
call
int3
rorl
pop
add
jle
popa
xchg
paddusb
and
adc
test
mov
add
jg
testl
cmp
into
mov
jbe
jne
mov
fcompl
into
jle
push
sbb
push
mov
mov
sarl
jo
test
shlb
xor
push
ret
in
push
insb
pushf
insb
arpl
notb
enter
push
shll
movb
arpl
inc
icebp
insb
sub
push
fimull
push
dec
and
mov
pop
push
jmp
je
pop
pop
pop
dec
clc
mov
jl
icebp
jle
sub
call
sub
bound
es
xor
gs
outsb
mov
push
mov
and
and
fdivrs
xchg
sub
scas
cli
mov
sbb
int
and
mov
and
dec
mov
push
mov
shrb
enter
mov
shlb
add
add
daa
jo
xchg
imul
sub
xchg
lea
cmp
shrl
vfrczps
jns
adc
mov
push
into
pop
add
pop
adc
repz
push
and
movsl
xchg
inc
rorl
test
sbb
add
mov
addb
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
repnz
jo
jge
jo
fidivs
inc
psubsw
adc
cmovnp
dec
mov
call
call
or
in
lods
ret
xchg
imul
push
aaa
adc
mov
mov
and
and
popf
int
lds
out
stos
outsb
dec
in
dec
mov
cmc
les
fisttpll
icebp
jl
sbb
jnp
fdivs
out
adc
mov
cmp
mov
clc
dec
inc
inc
xchg
adc
sbb
jo
rol
fmul
hlt
popf
mov
dec
loopne
std
pop
add
outsl
mov
dec
in
dec
sar
push
push
xor
icebp
sub
pop
adc
notl
lcall
push
jmp
adc
xor
mov
and
adc
cmp
sub
nop
shlb
cld
mov
adc
ds
lea
xlat
xchg
cltd
clc
mov
fcomi
or
insl
pushf
nop
rorb
or
lcall
test
inc
sbb
insl
ss
nop
and
or
iret
adc
jbe
repz
notl
inc
test
outsb
mov
out
pop
jnp
iret
sub
push
imul
mov
pop
clc
jns
inc
pop
das
mov
out
into
stos
mov
cwtl
dec
or
jp
add
out
add
jno
loopne
dec
rolb
addr16
xor
aas
xor
or
cmp
add
dec
call
cmpl
outsl
int
jge
cltd
mov
xchg
and
xchg
xorb
jae
adc
popa
mov
aas
dec
fnstcw
ja
add
pop
out
jp
push
pop
push
aam
push
fs
bound
movsb
and
xchg
add
dec
mov
addr16
cli
push
inc
into
cmpl
hlt
mov
mov
sbbl
out
xorl
sbb
daa
inc
out
dec
movsb
and
mov
dec
dec
jecxz
sar
mov
push
fprem1
sbb
sub
cmp
nop
adc
adcb
outsl
xchg
sub
addl
mov
ds
jae
jmp
push
xor
aaa
inc
js
les
jl
or
pop
and
mov
or
int3
inc
inc
push
or
and
adc
adc
aad
pusha
add
mov
sbb
xchg
daa
inc
aaa
insb
rorl
insl
ja
add
push
xchg
ja
ds
mov
outsl
frstor
stos
jb
mov
int
and
idivl
inc
int
inc
jb
notl
cmpl
enter
ss
pop
dec
test
and
mov
sbb
gs
aaa
pop
mov
or
nop
mov
push
insl
jbe
sbb
imul
cmp
and
add
in
jg
sarb
xchg
stos
mov
mov
mov
or
clc
pop
sbb
dec
adc
or
jmp
xor
mov
in
sub
or
add
rorl
pop
inc
jmp
fcomps
mov
daa
dec
cs
int
adc
mov
mov
test
or
xor
jmp
sub
and
or
xchg
das
aam
repz
dec
jmp
addr16
mov
rorb
dec
loopne
xor
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
arpl
jo
jge
jo
cwtl
hlt
or
lea
call
sbb
cmp
shlb
pop
adc
test
in
pavgb
ret
lock
or
lret
mov
and
movsb
and
jmp
mov
sbb
pop
in
arpl
fsubr
add
loope
adc
stos
add
insb
movsl
ror
jae
adc
mov
imul
sbb
push
or
push
mov
inc
roll
xorb
push
pop
cmc
jb
sbb
out
fcomps
stos
or
sbb
dec
mov
call
sbb
cltd
sbb
and
jl
imull
mov
add
add
repz
jg
movsb
loop
jge
adc
inc
and
scas
xor
xchg
loop
mov
dec
jmp
cltd
inc
sbb
sub
scas
call
xor
sbb
ror
in
xor
lret
mov
xor
mov
arpl
and
orb
or
hlt
pop
clc
xor
fwait
mov
dec
mov
outsb
popa
mov
loop
inc
pop
pop
fcoms
cmp
mov
adc
xor
adc
lret
repz
mov
mov
ds
loop
inc
jecxz
pop
fwait
and
jp
adc
mov
ret
cmpsb
call
imul
push
dec
cwtl
cmpb
movsl
movsb
out
inc
mov
dec
movsl
imul
dec
pop
jmp
or
shlb
cmpsl
inc
repz
aad
pop
dec
rcrl
in
xchg
cmp
fstp
test
mov
lret
ljmp
notl
aas
lods
shll
and
mov
sbb
dec
rol
outsl
popa
stos
cmc
imul
lods
mov
rcrb
aas
pop
cmp
push
in
fnstcw
pushw
das
iret
xor
inc
push
jge
frstor
mov
sbb
lcall
or
enter
ret
je
scas
lds
inc
push
xchg
sub
fidivs
jbe
rolb
mov
dec
add
jmp
enter
pop
mov
popa
push
jnp
rsm
cmpsb
push
sbb
mov
pushf
xlat
call
mov
movsl
scas
xchg
push
xor
mov
fcoms
jmp
fs
mov
mov
pop
ret
mov
sub
lods
pop
daa
jbe
xor
in
inc
mov
lahf
jg
adc
adc
es
fmuls
insl
test
xchg
xchg
out
lods
ljmp
cmpsl
xor
loopne
mov
inc
mov
cltd
xor
sahf
jle
sub
fiaddl
test
xor
jbe
loope
xor
aam
xchg
test
push
adc
push
cld
xor
js
pop
mov
mov
shrb
cmp
bound
fwait
out
xor
xor
sbb
loop
push
cmpsb
pushf
xchg
sbbb
cmpsb
dec
mov
repz
push
jge
xor
xchg
mov
mov
data16
outsl
out
movsb
mov
mov
push
outsb
in
fwait
dec
das
sub
pushf
push
stos
inc
jg
add
push
inc
lcall
dec
add
push
dec
cmp
fwait
jmp
or
cmpsl
pop
jp
scas
fwait
aad
sbb
dec
arpl
call
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
roll
jo
dec
jge
jo
inc
cmp
push
sub
sub
sub
fdivrs
ss
xchg
push
arpl
les
adc
shl
or
cld
or
cmp
and
mov
out
sub
or
or
lods
cmp
xchg
int
les
lods
fisubs
scas
mov
cmp
push
roll
cmp
jne,pt
add
cmp
mov
sbb
mov
jbe
jp
addl
xchg
mov
data16
mov
adc
aas
lods
cmp
push
or
std
xchg
add
sbb
stos
mov
add
cld
movsb
mov
mov
daa
mov
sub
cmp
lock
negb
or
inc
aam
mov
push
pushl
xchg
dec
pop
pop
popl
jl
pop
xchg
mov
fldl
cwtl
pop
mov
cmc
dec
jno
or
dec
mov
jl
mov
repz
mov
test
je
jbe
in
orl
jl
in
outsl
jno
pop
jae
xchg
fucomip
rcrb
cli
lds
pusha
dec
fucomp
inc
mov
lret
arpl
rcrb
pushf
or
shll
shlb
rcl
cmp
rorl
adc
fisubl
sbbb
aaa
push
dec
push
pop
sub
ret
lods
sub
das
iret
scas
jmp
jl
mov
fcmovnbe
shr
pushf
negl
xchg
or
test
inc
iret
cmp
flds
aas
and
inc
in
shl
xor
stc
sti
imul
sub
xchg
outsl
mov
mov
sub
pop
ljmp
add
daa
lahf
in
cmpsb
mov
stos
in
loope
dec
add
loopne
or
adc
lods
out
mov
sbb
or
push
cld
sbb
inc
jg
push
rcll
scas
push
sub
and
push
pop
jnp
xor
inc
pop
mov
dec
int
iret
xchg
arpl
imull
mov
shlb
imul
orl
jb
push
pop
mov
outsb
pushf
inc
insl
add
fwait
cmpsb
cmp
mov
pop
adc
add
pusha
movsb
xor
mov
jne
mov
xchg
cmp
mov
loop
cmp
sti
popf
adc
or
mov
ja
mov
mov
and
push
mov
xchg
scas
push
push
sub
es
les
mov
and
adc
clc
jns
in
push
icebp
sub
imul
sub
sti
mov
dec
lods
cld
mov
cmp
xor
ds
movsl
xor
mov
xchg
cmc
cmc
cmp
lds
jb
push
push
sbb
fsts
pop
or
in
push
jne
and
flds
out
sbb
inc
addr16
ds
push
mov
xor
jmp
mov
push
aaa
jp
push
jecxz
add
xlat
add
aad
mov
xor
or
jp
or
dec
push
stc
movsb
fisubrl
add
mov
or
cld
in
stos
push
lods
data16
scas
mov
repnz
or
jns
mov
add
mov
sbb
movsb
pusha
fadds
pop
push
inc
sbb
lods
jbe
xchg
inc
cmp
inc
xchg
adc
mov
data16
push
push
imul
scas
ja
dec
and
dec
aam
inc
in
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
insb
int
pop
mov
jo
mov
jmp
mov
mov
or
rcl
je
mov
lock
loope
call
xor
mov
shlb
lea
xor
in
push
pusha
cmp
pop
fistpll
cmp
or
mov
addr16
popa
inc
test
xor
mov
fs
bound
xor
insl
mov
insb
loop
das
ret
xorl
jbe
dec
push
lods
inc
pop
xchg
out
or
out
lar
inc
shlb
loop
fisttpll
push
mov
mov
dec
clc
cmp
in
mov
je
dec
dec
xchg
pop
sub
int3
loop
shrl
mov
loop
sub
aam
ret
lea
int
and
mov
pcmpgtw
ljmp
dec
mov
or
sbb
aam
inc
stc
bound
insl
popf
mov
xchg
cmpb
xchg
mov
dec
sbb
mov
mov
sahf
shlb
repz
add
mov
or
aad
sub
rdpmc
addr16
pop
popa
xchg
rolb
pop
push
mov
sub
fisttps
lahf
out
les
xor
iret
popa
xchg
lods
cmpsl
mov
fmul
aam
das
adc
jnp
xchg
lods
sbb
cmpsl
dec
mov
inc
mov
ljmp
dec
push
cmp
and
clc
jae
idivl
mov
leave
xchg
ds
movsb
mov
mov
mov
in
in
push
fisttpl
js
cmp
dec
mov
movsl
inc
movsl
lods
adcl
je
inc
movsl
push
add
mov
cli
aad
cwtl
pusha
sar
jno
in
add
aad
enter
roll
sbb
sahf
mov
adc
dec
and
and
xchg
xor
clc
and
dec
push
nop
adc
les
loope
push
sub
xor
nop
sub
es
jmp
sbb
mov
sub
inc
mov
out
fwait
push
arpl
loopne
ds
mov
mov
lcall
push
sbb
neg
shlb
orl
rorb
stos
and
dec
movsl
mov
mov
mov
mov
pop
mov
sti
out
xor
rcrb
into
jnp
clc
cld
mull
cmp
gs
xchg
dec
repnz
push
js
in
mov
xchg
outsl
sbb
lsl
jle
orl
repz
repnz
jle
test
stos
ret
mov
xor
das
lahf
push
stos
dec
xor
sub
xor
sti
add
iret
xchg
imul
sbb
jnp
outsb
aad
arpl
pop
pop
cmp
iret
dec
xchg
push
lock
insb
mov
add
rcl
jge
xchg
mov
inc
repnz
sub
in
xchg
add
les
sbb
and
push
xchg
lahf
jecxz
sbb
jle
rcrl
sti
push
gs
adc
push
cmpsb
ficomps
sbb
fidivrl
jno
pushf
xchg
mov
inc
repnz
xor
adc
sub
loopne
pop
int3
cmc
xorl
in
jg
jns
pop
jnp
dec
out
cmp
push
xor
or
or
mov
mov
xor
sub
in
add
enter
jne
xor
or
add
fbld
mov
dec
cltd
xor
rcll
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
mov
mov
dec
jge
jo
cli
push
cmp
mov
rolb
or
add
call
mov
scas
adc
push
sub
sti
pop
fimull
test
sbb
icebp
dec
cmp
push
lret
and
jb
cmp
pop
xchg
stc
aaa
stos
scas
adc
hlt
pop
inc
lea
dec
roll
out
push
pop
sub
loop
shlb
test
mov
xor
jno
stos
cld
loop
dec
test
fildl
jne
jg
ret
roll
lcall
jp
push
adc
das
dec
xchg
mov
jecxz
into
cmp
or
or
lcall
sub
pop
cmp
mov
jb
jmp
push
sub
jb
imul
mov
ret
scas
xchg
cmp
xchg
mov
dec
insb
xlat
cmc
cwtl
sbb
mov
in
int
inc
cs
cmpsb
dec
gs
pop
mov
ret
out
dec
clc
mov
jp
pop
push
xchg
adcl
lods
aaa
sub
clc
inc
into
mov
inc
xorps
test
test
cmp
cmp
dec
pop
lock
fmull
mov
xorb
stc
push
mov
shll
fdivrl
and
cld
repz
jo
adcl
gs
jno
add
stc
inc
dec
leave
sbb
outsb
sbb
xorl
fists
push
dec
in
cmpsb
ds
not
ret
or
lock
leave
cmp
sbb
cld
sub
cmc
jle
flds
movsl
insb
mov
in
mov
cwtl
imul
je
mov
icebp
cltd
enter
mov
in
je
and
fdivp
in
sub
fcmove
data16
imul
stc
mov
sbb
adc
inc
xor
inc
leave
pushw
jmp
inc
xor
jg
lahf
mov
or
mov
adc
lcall
fs
pop
mov
ds
repnz
mov
pop
lods
sti
dec
cld
into
movsl
push
adc
pop
into
push
mov
xorl
xor
push
xchg
in
scas
out
mov
pushf
fnstsw
xchg
add
test
jp
and
insl
cmp
push
and
aad
test
divl
ja
jecxz
sbb
cmp
sub
adc
enter
lods
insl
sub
sbb
sub
icebp
pop
or
es
scas
push
mov
sbbb
out
pop
cmpsb
psubq
lahf
sarl
mov
jnp
mov
sarb
ljmp
pop
dec
pop
fiaddl
lret
push
clc
repz
push
push
imul
lret
test
jecxz
loope
clc
scas
scas
test
push
rolb
inc
mov
sub
add
adc
or
cld
pusha
pop
test
push
and
int
fnstcw
xchg
xchg
scas
mov
mov
lock
imulb
orl
imul
push
push
add
fwait
jb
cs
sub
mov
idiv
stc
testl
sbb
push
mov
inc
cmp
stc
jp
sub
je
cmp
out
scas
jne
sbb
dec
mov
gs
cli
sub
mov
fadds
push
pop
cmc
aam
lret
rcrl
mov
repz
int
inc
sbb
jb
daa
mov
jg
xchg
test
icebp
and
sub
sub
mov
jb
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
or
stos
jo
dec
jge
jo
sub
and
xor
xchg
andl
mov
mov
jne
into
and
cld
pop
mov
cmpl
sub
and
adcb
lahf
push
add
stos
and
fldcw
cmpsl
clc
shlb
jnp
cmp
movsb
testl
mov
dec
je
push
je
dec
inc
enter
push
pop
out
jge
rcrb
loopne
cmp
repnz
jns
mov
fs
or
fdivl
and
xchg
movsb
jp
ss
popa
cld
lret
xor
cmpsb
mov
push
xchg
fs
xlat
mov
push
test
repz
dec
incl
mul
sti
ds
mov
add
mov
call
call
sti
jo
xchg
mov
cmc
cs
arpl
ss
cld
scas
lods
mov
pop
loope
mov
sub
dec
rclb
cmp
scas
fimuls
cmp
xor
xchg
fneni(8087
sbb
shll
jecxz
sub
lds
aad
fistps
xchg
clc
sub
lret
js
jae
lods
lods
mov
cmp
dec
adc
jb
xor
xor
pop
movsl
push
add
push
dec
adc
lret
lahf
dec
pop
xchg
push
ljmp
js
adc
pop
cwtl
rclb
pop
pop
dec
sahf
add
inc
push
lcall
jecxz
scas
rol
ljmp
and
es
int3
jae
jnp
lods
sbb
xor
arpl
mov
dec
aad
shlb
insb
ret
sub
cld
sbb
push
xchg
mov
cmp
jns
xchg
inc
pop
or
dec
jbe
movsl
in
pop
cmp
sarl
cmp
cli
or
shll
mov
dec
and
add
xchg
rol
cmp
sub
hlt
icebp
mov
fldcw
inc
mov
pop
mov
movsb
lock
je
pushf
dec
xor
mov
add
in
lods
add
inc
hlt
scas
rorb
dec
outsl
pop
xchg
jbe
mov
testl
loopne
dec
rcrb
push
popa
mov
mov
mov
arpl
sub
sub
mov
fisttpll
mov
add
cmpsb
mov
iret
lock
mov
push
ss
adc
sbb
out
xor
aaa
cli
sbb
jne
iret
xchg
lea
adc
push
insb
lcall
loop
jmp
push
aam
or
ja
cmp
mov
mov
pop
jp
ja
inc
clc
mov
sbb
test
pushf
jp
jg
inc
adc
and
in
sub
aaa
mov
mov
jecxz
loope
scas
rcrb
mov
jns
xor
ret
jl
lds
cmp
mov
mov
xchg
and
pop
pop
mov
push
ret
pushf
pop
add
lods
cltd
sub
imull
mov
test
ja
mov
or
out
and
xchg
dec
dec
pop
push
insb
and
mov
xor
inc
mov
pop
xor
lods
int
cmpsl
popf
or
push
sbb
cmc
jns
cmp
testb
jne
xor
mov
fwait
ja
out
push
pop
xchg
mov
xchg
cs
inc
jns
dec
mov
add
cmp
orl
les
xor
xor
mov
push
or
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
pop
cmp
fdivs
jo
push
or
lahf
cmp
push
out
jb
addr16
mov
xchg
enter
inc
mov
sbb
jno
pop
dec
rcr
dec
fistpll
aas
jle
inc
mov
out
rolb
call
int3
and
cmp
xchg
into
pop
mov
dec
sbb
call
xor
xor
adc
shl
pop
sbb
mov
sbbl
scas
repz
subl
inc
adc
jo
xor
adc
sub
or
mov
pop
movsb
test
out
insb
subb
sbb
aam
pop
lahf
xchg
pusha
cmp
mov
cwtl
cwtl
sub
test
fxtract
xchg
lret
aas
aaa
push
mov
cmpsb
out
sub
loopne
add
sub
mov
pop
imul
iret
loope
and
inc
fwait
test
push
fstpl
imul
in
notb
jle
fnsave
fcoms
xchg
pop
cmp
pop
xchg
into
pop
out
out
mov
inc
jg
leave
sbb
sbb
sbb
xor
in
in
adc
loop
sbb
mov
cld
xchg
shl
lock
jmp
stos
dec
jecxz
sbb
out
xor
insl
imull
push
or
push
mov
rol
pop
xchg
jnp
xorb
mov
push
push
xchg
inc
cmp
jno
mov
dec
jge
icebp
jnp
add
lods
daa
cmpsb
test
dec
faddp
fdivr
cmpsl
in
in
rorb
stc
pushl
call
mov
leave
in
pop
jp
or
xchg
pop
test
mov
inc
bound
mov
je
stos
or
xor
lods
add
repnz
sub
insb
fcom
insb
arpl
pop
cmpsl
jecxz
sbb
pop
cmp
mov
cmpsb
inc
pop
inc
ret
adc
fucomi
paddusw
repz
test
ss
in
xor
dec
mov
imul
sahf
test
repz
clc
nop
cmovl
das
add
fdivrp
mov
cmpsb
push
popf
daa
sbb
pop
inc
add
fidivl
mov
push
gs
jnp
dec
stc
dec
jo
sarb
fcoml
dec
cmp
addr16
mov
pop
dec
mov
xchg
push
inc
push
ja
movb
into
push
inc
cld
mov
ss
jge
mov
popa
out
xor
pop
pop
test
sub
pop
xor
movsb
das
xchg
stos
mov
ret
mov
xchg
mov
test
shrl
push
mov
cmpsb
out
loop
das
or
loopne
xchg
adc
and
enter
mov
xor
cmp
jnp
sub
scas
or
rcr
jp
pop
push
or
mov
out
adc
stc
dec
mov
int3
icebp
repz
or
cli
lcall
ja
and
loope
mov
jg
ror
or
cmp
shlb
inc
loopne
out
jg
hlt
or
push
inc
imul
dec
inc
jns
dec
adc
popa
ds
mov
sub
ja
or
mov
ds
sub
cmp
sub
add
jle
xchg
xor
add
or
pop
andb
aaa
imul
popf
sub
sbb
in
inc
xchg
in
sahf
dec
push
ret
pop
imul
test
mov
test
inc
cld
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
popa
shll
xor
jo
xlat
mov
arpl
ss
cmp
mov
pop
add
ret
xchg
popl
pop
stc
push
xchg
rclb
inc
sub
frstor
xcrypt-cbc
cmpsl
xchg
lahf
gs
test
dec
cmc
pop
mov
aam
ds
pop
jo
and
inc
xchg
subb
mov
ja
cltd
jmp
push
stc
cmp
cmp
adc
mov
or
insb
test
fdivrl
push
jmp
adc
push
jp
pushl
mov
sbbb
cmp
inc
negb
ret
lret
mov
and
adc
mov
loope
or
lods
test
push
push
cmp
sbb
outsb
neg
inc
sub
xorb
movsl
pop
xchg
nop
lds
lods
aaa
xchg
xchg
test
in
daa
data16
nop
mov
or
mov
js
xchg
dec
popa
or
nopl
testl
and
push
push
xor
cmp
or
repz
mov
and
sbb
dec
sub
dec
sub
adc
pop
test
ljmp
lret
jne
in
out
enter
jbe
lock
dec
addr16
aam
or
imul
cmp
cmpb
inc
or
cs
repnz
sub
lea
dec
sub
mov
xor
inc
cmp
or
int
int3
jns
lock
mov
adc
popa
imul
iret
ficoml
data16
fldcw
mov
sbb
cmp
lea
cmp
mov
and
or
jo
imul
add
test
dec
mov
lahf
lret
xor
cmp
mov
xorl
shrb
cmp
xchg
pop
mov
dec
pop
fucomip
sbb
mov
sahf
jns
jne
lods
in
in
dec
sar
aam
xchg
push
push
push
dec
mov
daa
cld
outsb
bound
and
xchg
pusha
lock
clc
cmp
mov
sar
cmp
xchg
mov
ret
cmp
aaa
mov
dec
shlb
or
arpl
xchg
mov
andl
imul
inc
fwait
std
fbstp
fs
dec
sbb
sahf
lret
cli
cmp
mov
adc
jb
daa
das
mov
fsts
sbb
int3
loopne
adc
mov
xlat
inc
sti
fisubrl
xchg
sub
movsl
xor
aaa
jno
add
or
pop
xlat
xchg
int3
xor
fistpll
or
jge
xchg
inc
rcl
popf
sbb
dec
mov
jno
mov
aaa
cmp
mov
push
dec
test
xchg
cwtl
cld
inc
cs
pop
call
iret
pop
push
jge
insl
lahf
outsl
cmp
mov
sbbl
adc
adc
fisubl
idivb
pop
cmp
sbb
aas
insb
loope
stos
or
xchg
out
inc
push
cmpsb
sbb
in
sahf
insb
fmul
pop
mov
push
enter
mov
jbe
xchg
mov
stc
xchg
xor
std
scas
push
cmp
xlat
rorb
mov
push
lods
mov
xchg
add
inc
jnp
xor
add
push
jnp
push
adc
and
ss
and
cmpsb
push
data16
mov
cltd
iret
cmc
imul
mov
ret
cli
insl
dec
jo
stos
cmp
sub
div
sub
pusha
lahf
mov
test
jne
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
jecxz
ja
or
jo
xor
mov
pushf
es
xor
jae
insl
inc
cmp
push
mov
imul
and
mov
mov
jmp
sahf
cltd
imul
xchg
out
cltd
adc
mov
jne
fsubs
adc
mov
xchg
xchg
mov
mov
inc
outsb
out
xor
test
sbb
int3
xor
or
shr
dec
push
adc
iret
hlt
popa
xchg
imul
lods
mov
sub
push
cmp
jo
mov
push
adc
xchg
fwait
pusha
xchg
data16
adc
addr16
sbb
fcoml
adc
inc
imul
adc
xchg
pop
aas
sbb
push
loope
inc
gs
mov
cltd
pushl
hlt
pop
outsb
cmp
aam
inc
cmpl
pop
insl
sub
fwait
mov
insb
dec
jecxz
sub
scas
jne
cs
insl
sbb
ja
inc
and
adc
int3
loopne
or
int3
lods
dec
mov
movsb
mov
mov
insb
dec
shrl
xor
fwait
pop
jb
cmp
inc
int3
leave
mulb
xchg
test
jnp
sub
bound
jno
mov
jmp
bound
icebp
xchg
in
sbb
pusha
mov
and
jbe
cld
dec
test
rcrb
lea
mov
adc
pop
out
das
mov
insb
pop
pop
leave
and
shrl
and
sub
cmp
fcmovne
loop
faddl
push
lret
aaa
femms
inc
jmp
push
add
sarl
or
sbb
or
hlt
push
out
xchg
jle,pt
adc
xchg
rclb
into
scas
leave
add
dec
mov
jle
xchg
mov
cmpsb
imul
cmpsl
push
xchg
loope
cmp
rorb
mov
pop
sub
sub
ds
notl
adc
pop
movsb
subb
das
repnz
push
test
pop
cmc
out
add
inc
and
xchg
inc
addr16
inc
outsl
fisttpll
cmp
push
imul
sti
or
hlt
adc
sbb
dec
sub
out
outsl
jecxz
imul
inc
in
push
mov
pusha
mov
gs
push
jb
bound
dec
andl
lret
sti
in
into
out
mov
xor
out
call
sbb
xor
push
xor
push
shll
rorl
repnz
sbb
adc
orb
mulb
mov
ret
cld
inc
cmpl
xor
push
hlt
inc
jns
add
cmc
loope
cmp
mov
mov
rcrb
cmpb
jecxz
out
sbb
sub
je
push
lods
shlb
js
lds
test
pop
leave
fadd
jmp
mov
daa
jbe
xor
and
push
adc
cmpsl
sub
jno
sub
sbb
repz
dec
loop
push
sbb
lods
ds
push
dec
std
adc
shl
in
lahf
xlat
pop
aad
xchg
jae
lods
mov
sbb
pop
aas
movsb
or
aad
iret
push
call
sub
insb
movsb
stc
dec
fwait
push
test
jmp
lds
lret
adcb
movsb
movsb
mov
aad
xlat
inc
in
or
icebp
fistl
aaa
mov
addr16
in
dec
rclb
mov
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
pushf
lahf
pushf
arpl
jo
mov
cs
add
sti
xchg
fadds
scas
adc
sub
jmp
cmp
or
and
dec
pop
mov
mov
cmp
inc
dec
xor
xchg
test
cmp
jnp
lods
jle
fcmovnbe
xor
mov
in
push
xor
scas
cs
lock
ss
outsl
imul
shl
test
jae
or
movsb
fcompl
add
stos
jb
pop
cmpsb
mov
leave
in
push
push
repnz
xlat
icebp
pusha
cltd
jg
xor
inc
sarb
repz
and
mov
lret
and
pop
dec
test
jle
mov
inc
jno
movsb
mov
icebp
xchg
pop
incl
out
mov
and
jbe
jbe
lcall
js
jg
iret
pop
xchg
push
adc
push
aam
mov
out
push
sub
mov
mov
push
pusha
mov
mov
int
fucom
stc
push
jbe
daa
and
mov
sbb
sbb
repnz
ret
pop
or
mov
jae
cmpsl
stos
sub
outsl
mov
jle
jp
sahf
mov
jbe
aaa
aas
cmp
ficomps
cmp
fsubrs
psrlq
fwait
call
push
xor
adc
xchg
mov
xlat
aam
movsl
add
fstpl
inc
adc
and
pop
sbb
push
imul
inc
adc
xor
jmp
mov
les
ljmp
hlt
imul
out
mov
sbb
mov
push
push
adc
lret
je
adc
xor
cmp
pop
ret
sub
xchg
sbb
fistpll
out
repnz
sub
push
cmp
mov
dec
arpl
cmp
faddl
ss
and
push
xchg
jne
repz
lea
pop
jns
cmp
xor
pop
jle
stos
sahf
dec
cmp
mov
inc
cwtl
addl
mov
mov
div
or
jb
mov
dec
movsb
push
into
inc
jecxz
enter
mov
xlat
lds
dec
out
in
dec
lcall
stos
mov
shlb
int3
enter
add
pushf
mov
push
xchg
and
es
stos
pop
imulb
jae
jae
pop
xchg
cwtl
bnd
sub
pop
je
data16
jae
adc
in
jbe
into
dec
icebp
insb
outsb
scas
test
and
xor
xor
adc
push
insb
xchg
mov
daa
jb
lods
xor
jmp
std
leave
movsb
push
lcall
insb
xchg
adcl
cs
xchg
das
cmpsb
cmp
mov
and
jl
dec
push
cmpsb
iret
in
jbe
lret
pop
inc
out
cmpsl
scas
pop
adc
xor
cmp
sahf
lds
adcb
in
xchg
in
call
cmp
cs
push
movsb
adc
not
cmpsb
xchg
push
xor
icebp
arpl
adc
shll
sarl
aam
ficomps
adc
out
fs
mov
xchg
loop
cli
es
in
push
mov
xchg
mov
mov
rclb
jmp
mov
daa
jg
and
call
adc
cmp
jns
lret
mov
imul
inc
inc
lret
mov
and
mov
arpl
inc
fmull
pop
insl
in
jg
xor
mov
jbe
loop
and
out
aam
push
test
and
mov
aaa
jmp
push
movsb
lcall
jmp
inc
cli
fisttpl
jp
xchg
mov
mov
jge
jo
lock
jl
int3
movsl
jne
imul
nop
pop
outsl
xor
sbb
pusha
andb
lcall
inc
aaa
int3
xor
or
fdivrs
mov
dec
mov
int3
cmp
jnp
cld
add
cwtl
in
and
push
lcall
addb
mov
idivb
mov
cmp
sbbb
mov
cmp
xor
push
out
add
stc
hlt
cmp
cmp
je
and
popf
pop
jge
push
cwtl
xor
jo
std
shll
xchg
or
and
xor
orb
jecxz
fcoms
pop
int3
push
mov
sub
hlt
xchg
cmp
xchg
ljmp
inc
ljmp
cltd
xchg
mov
mov
inc
movsl
cwtl
ret
hlt
fcomi
xor
lock
cli
icebp
jle
es
xlat
jae
mov
sbb
add
dec
jns
mov
and
in
adc
xor
mul
fistpl
in
xor
bnd
dec
cmp
push
in
dec
push
out
subb
addb
push
in
pop
pusha
adc
or
lods
outsb
out
pop
loop
xchg
aad
jge
push
in
jns
cld
sbb
test
jp
aad
xchg
inc
dec
mov
inc
cmp
loope
ds
movsb
dec
dec
xor
in
das
xchg
aam
call
dec
dec
and
add
lret
add
imul
fs
mov
mov
jecxz
and
je
ljmp
lods
mov
mov
and
add
mov
adc
enter
int3
insl
dec
lret
xor
dec
xor
cmp
adc
adcl
jmp
out
pop
xor
mov
push
mov
pop
dec
mov
es
pop
push
in
setl
push
adc
cli
fdivrl
dec
cmp
adc
jne
leave
sub
sub
bound
cwtl
ds
mov
push
cmp
shrl
out
mov
je
popa
sbb
push
fimull
aad
loop
push
mov
addb
xchg
mov
aad
adc
jno
int3
insl
notl
sbb
sbb
cmp
xor
and
mov
sub
inc
add
fs
cmp
mov
adc
mov
shr
arpl
insl
mov
insb
push
in
cwtl
popa
xchg
scas
lret
clc
js
mov
xchg
fsubr
mov
cmp
into
and
fwait
shlb
int3
inc
mov
dec
shl
sti
pop
mull
rcrl
xchg
push
mov
mov
mov
and
cmp
bound
lock
nop
ror
lods
jbe
mov
cmpl
or
inc
popa
jmp
ret
and
or
std
xchg
lea
sahf
ss
movsb
sbb
lock
subb
mov
out
pushf
loopne
pop
scas
or
xor
loopne
cmc
adc
inc
adc
jle
sbb
daa
inc
pop
jbe
add
and
push
adc
jo
fwait
xchg
mov
fs
addb
push
test
sub
int3
popa
lret
cmp
push
xor
ss
add
lods
or
adc
leave
sub
push
pushf
and
sahf
or
push
out
push
jae
sub
cmp
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
mov
xchg
inc
jo
dec
jge
jo
fadds
jns
mov
and
push
sub
shr
jl
push
sbb
mov
add
inc
adcl
fmuls
mov
fisubrl
aam
add
lret
iret
add
mov
daa
adc
jg
mov
cmp
xor
or
xchg
sbb
out
call
mov
sub
arpl
nop
mov
push
insl
out
inc
jno
gs
pop
pusha
adc
int
aas
ljmp
jl
cmp
rorb
fiadds
rcl
pop
lret
leave
adc
mov
adcb
xor
mov
xchg
cmpsl
insb
fs
add
pop
data16
subl
inc
std
negb
leave
dec
cli
pop
fisubrs
inc
mov
int3
call
fsubp
pop
push
fstpt
mov
rclb
shrl
xor
push
aas
cmpsl
out
xlat
lahf
ret
ret
or
fcompl
in
inc
aaa
dec
mov
jle
mov
xchg
and
ret
mov
add
cli
inc
add
iret
dec
mov
push
insb
xchg
adc
out
call
and
shlb
ss
xor
push
xchg
pop
sbb
loop
in
cmp
jne
cmpsb
lret
test
jbe
sub
jmp
mov
or
mov
or
movsl
xchg
mov
mov
outsl
loop
sub
pop
stc
xor
rcl
insl
jecxz
xor
aam
test
repz
inc
adc
test
xchg
dec
jns
insb
pop
lcall
nop
lock
xchg
aaa
cmpsb
sub
imul
inc
adc
dec
test
mov
fisubl
dec
adc
mov
dec
addr16
scas
outsl
pop
imul
aaa
push
test
jbe
out
pop
test
in
sub
cmp
orl
cmpsl
cltd
jo
imul
fistps
sub
adc
sbb
lods
cmpb
ja
popf
xchg
cltd
jmp
and
enter
ja
insb
fimull
mov
add
push
lret
mov
andl
fs
xchg
xor
sbb
push
lret
add
inc
out
rorb
jl
inc
pusha
xchg
int
sbb
inc
inc
adc
shll
pop
repnz
inc
and
jno
scas
xchg
lret
jnp
cmc
fistl
add
inc
int
cmp
loopne
leave
std
aad
xchg
ret
mov
test
inc
fcoms
jne
fdivrl
xorl
push
pop
lock
ficompl
xor
enter
pop
jl
cmc
mov
mov
pop
rclb
or
push
sbb
popa
out
jecxz
rcl
jo
xchg
jle
pop
stos
mov
pop
and
bound
xchg
lret
add
mov
mov
mov
push
sti
sbbl
sub
mov
ds
cmp
xor
push
sub
dec
cwtl
fsts
xor
inc
daa
fstpl
sarb
neg
mov
mov
les
pop
in
cmp
cmp
adc
jno
out
out
lds
pop
loope
add
or
lds
inc
push
cmp
inc
lahf
sub
push
std
fnstenv
aad
dec
dec
push
sub
out
mov
or
fdivrs
or
add
popf
test
sbb
xchg
test
add
push
ds
push
dec
and
in
adc
pop
xchg
es
jne
and
and
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
mov
mov
inc
jo
dec
jge
jo
add
lret
mov
pop
cld
or
js
mov
jno
mov
out
push
out
sub
mov
push
fmull
inc
push
sbb
aam
test
jbe
mov
aad
jmp
stos
cltd
mov
jne
adc
into
aaa
jae
dec
dec
push
in
or
add
mov
insl
pop
cmp
push
clc
icebp
xor
adc
mov
jle
and
inc
xor
sti
xor
or
xor
push
dec
mov
mov
cmc
mov
push
scas
or
cld
out
rorb
leave
inc
lahf
not
outsb
popa
mov
dec
dec
jnp
adc
lcall
repz
jmp
unpckhps
stos
inc
cmp
rorl
movsb
mov
and
das
sub
and
jns
aas
das
icebp
inc
fwait
mov
fdivrs
mov
pop
xchg
mov
sti
push
push
enter
sub
shr
dec
fmul
int3
jmp
imul
xchg
lds
mov
stc
xchg
add
mov
aaa
jge
sub
mov
popa
push
push
xor
or
repz
cli
jle
fidivrl
mov
repnz
jl
inc
lret
inc
stc
pop
inc
das
xor
mov
mov
sub
add
jne
scas
mov
or
in
test
out
int3
inc
or
or
push
out
dec
stos
push
and
js
cmpsb
or
inc
push
fnsave
adc
scas
mov
cmp
add
cmp
popf
out
inc
and
loopne
es
mov
repnz
es
inc
retw
or
xchg
mov
std
popf
jl
cmp
xor
and
dec
ficompl
cs
inc
shlb
pop
sbbl
dec
xor
fstl
pop
out
in
test
xor
ljmp
or
inc
int
rol
dec
or
xchg
inc
push
repnz
jmp
inc
jecxz
test
mov
lods
jne
rclb
inc
aas
mov
hlt
mov
mov
mov
lods
push
cmp
xor
mov
mov
mov
inc
call
push
js
mov
mov
dec
shll
cmpsb
or
ljmp
ret
push
loope
mov
ljmp
jno
rcr
xchg
bound
add
mov
into
xchg
bound
xorb
mov
mov
adc
out
push
xchg
cmp
dec
jbe
insb
lods
push
jne
mov
add
lock
fstpl
sub
push
or
icebp
addr16
es
popf
push
idiv
jp
mov
dec
pop
fnstsw
adc
out
jne
js
ss
add
inc
pop
call
pop
ja
mov
dec
and
int3
jecxz
arpl
and
add
or
push
lret
push
testb
into
cs
mov
dec
test
mov
clc
jle
jb
sub
stos
in
or
es
push
popa
test
add
dec
sub
xchg
sti
in
sarb
lock
scas
notb
sub
dec
lahf
cs
mov
xchg
addl
pop
xchg
inc
lret
sub
cli
dec
sub
imul
out
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
xchg
dec
jo
dec
jge
jo
adc
rcl
nop
pop
test
mov
or
and
add
xor
mov
fsubs
loop
addr16
mov
dec
out
xor
lret
mov
jle
xor
xor
nop
sub
xchg
inc
jp
scas
jne
mov
pop
mov
nop
ja
popl
and
in
mov
inc
or
rclb
shlb
negl
xor
icebp
cwtl
decl
lcall
and
fdivrs
cmp
shrl
sub
test
pop
sarl
iret
sbb
and
in
inc
dec
dec
and
pop
jb
sub
pop
test
test
inc
sbb
mov
jae
cmpsb
aas
bnd
fidivs
das
xor
lcall
push
sub
paddb
fistpll
jg
mov
sub
aaa
les
enter
cmc
push
pop
std
dec
cli
data16
inc
push
pop
jg
cmp
mov
push
and
rep
mov
les
or
scas
pmaxsw
jno
pusha
rcrb
mov
lea
and
dec
pop
aaa
dec
iret
pop
out
jge
adc
mov
pop
ret
mov
xor
mov
and
movsb
jb
dec
add
incb
dec
movsb
push
adc
jne,pn
scas
rcr
xsha256
cmpsb
adc
popa
pop
jp
xor
arpl
movsb
in
xchg
frstor
ljmp
add
pop
adc
mov
add
mov
mov
shll
xor
lcall
in
ds
mov
adc
data16
and
lds
pusha
pop
loop
fldenv
or
jmp
stos
sbb
jg
add
out
jle
and
xchg
imul
and
or
mov
push
in
ds
popa
sbb
outsl
scas
pop
add
add
repnz
iret
pop
cmp
pcmpeqd
push
imul
and
and
cmp
ret
and
mov
test
pusha
jno
icebp
and
inc
add
mov
hlt
and
inc
popf
nop
add
or
mov
sbb
xchg
mov
inc
inc
insb
add
in
jb
ret
mov
loope
sbbb
out
ds
ret
pop
cwtl
cmp
dec
cli
pusha
int
push
cmc
pop
push
in
inc
rcl
in
fnstsw
dec
xor
gs
dec
add
mov
mov
push
xor
insl
mov
cmp
out
aas
xchg
mov
xor
test
xchg
push
aas
mov
mov
in
jnp
scas
aad
xchg
out
xor
cwtl
pop
jno
arpl
pop
dec
mov
mov
popf
or
aam
das
or
lea
pop
mov
pushf
in
dec
lock
fidivrl
test
fstps
cmpsb
out
and
icebp
aas
mov
mov
cmp
inc
xchg
mov
scas
outsb
arpl
repnz
es
mov
fisubrl
mov
nop
adc
push
jae
mov
sub
fcompl
add
push
jnp
xchg
mov
xchg
push
sub
int3
mov
mov
push
popa
dec
repnz
push
push
sub
int
sbb
or
push
sbb
xor
iret
nop
lcall
jo
and
imul
pop
loopne
arpl
lock
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
xchg
subl
dec
jge
jo
xchg
test
loope
pop
hlt
push
or
mov
xor
ljmp
outsl
pop
enter
or
mov
xchg
xchg
push
sub
loopne
sbb
icebp
sub
fwait
and
mov
add
loope
cmp
test
push
psubb
test
popa
push
pop
sti
mov
xlat
push
ret
push
insl
sbb
jns
sub
das
das
mov
jbe
loop
pop
jnp
sbb
add
add
xchg
push
fst
adcl
fisttpl
mov
inc
jge
push
lret
inc
xchg
repz
jb
andl
fnstenv
lds
cmc
or
xchg
rcll
xchg
xchg
cmc
mov
and
dec
mov
std
pop
daa
data16
mov
mov
sbb
repz
mov
push
jle
outsb
repz
aad
pop
or
out
ret
push
mulb
ss
sbb
cwtl
push
leave
xchg
fucomip
aam
ljmp
and
dec
cwtl
sbb
dec
pop
out
ja
aad
push
mov
bound
inc
std
fs
or
stc
fldl
sub
and
mov
push
dec
or
cmp
mov
sbb
int3
xor
ret
ret
aad
push
rcl
add
add
sbb
sarb
faddp
sbb
inc
jbe
push
movsl
dec
jp
lea
pusha
push
push
jge
sarb
shr
int3
lock
int
jge
cmc
mov
adc
in
call
push
sub
add
clc
out
imul
jns
mov
nop
mov
mov
ror
xchg
repnz
enter
jecxz
sub
jno
xchg
push
fildl
xchg
in
add
in
cmpsl
push
mov
mov
adc
inc
clc
jg
sarl
cld
jb
je
out
pop
fildll
cs
aas
mov
lret
add
je
test
sub
dec
sub
cli
jns
aas
push
push
popf
icebp
vpshufd
cmpl
push
in
xchg
sar
aas
popa
mov
dec
xlat
adc
in
push
push
sbb
aad
mov
mov
mov
repz
mov
das
dec
icebp
test
iret
and
shrb
cmp
or
xchg
bound
repnz
mov
fcmovnbe
xor
jne
push
hlt
jo
jns
inc
xor
xchg
call
fwait
movsl
sub
cld
add
icebp
sbb
pusha
enter
cmc
lods
dec
mov
lahf
dec
les
add
call
xor
lahf
mov
sub
and
mov
dec
jmp
loopne
and
sbb
stc
xchg
in
aaa
lds
xchg
or
lods
cltd
jmp
or
sbb
inc
or
aam
daa
xor
ficomps
ja
mov
pop
dec
push
inc
or
pop
cmpsl
adc
mov
sub
xchg
ret
adcl
pop
sub
mov
mov
pop
adc
mov
imul
or
fadd
inc
jge
inc
jbe
dec
mov
and
mov
repz
mov
hlt
xor
cmp
stos
es
leave
test
iret
push
fs
jmp
sti
sub
pop
mov
roll
mov
add
or
mov
sbb
outsw
push
rorb
sbb
js
pop
out
cli
cmp
ret
mov
bound
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
