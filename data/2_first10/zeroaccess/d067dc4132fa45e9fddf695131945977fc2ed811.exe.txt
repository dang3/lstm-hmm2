push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
sti
addr16
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
iret
pusha
xor
pushf
in
lock
and
mov
pop
outsl
cmpsl
mov
pop
push
xchg
mov
inc
ret
sarl
xchg
pusha
mov
rcr
pop
xchg
cmp
xchg
lea
adc
pop
int
and
icebp
jnp
and
out
push
sub
test
int3
add
cld
mov
data16
sti
frstor
jo
adc
sub
adc
sub
ss
inc
lods
xchg
out
push
push
mov
cmovne
push
xor
or
cld
sub
dec
cmp
mov
or
jg
push
and
in
icebp
movsb
and
dec
jae
add
push
test
je
jp
sub
cli
adc
sub
aam
cltd
mov
add
stos
shl
ds
sub
in
aam
fcompl
es
sbb
dec
pop
ror
lret
jmp
pop
lret
sarb
ret
sub
enter
push
pop
sbb
xchg
xchg
push
loopne
xchg
je
cmp
pop
adc
stos
pop
fs
dec
xchg
sub
sbb
leave
pop
les
mov
mov
cmp
inc
pop
xlat
xor
lock
fs
pop
cld
mov
stos
mov
xchg
in
cmp
inc
loope
lea
scas
dec
js
leave
in
dec
push
in
repnz
ljmp
ffree
sbb
add
or
mov
movsl
shll
mov
push
and
jp
stc
pop
mov
inc
push
addr16
sbb
mov
inc
inc
xor
xor
add
fld
std
pop
lock
pop
pusha
test
outsb
pop
cld
jle
aas
hlt
jo
in
or
push
movsl
out
mov
or
gs
xlat
fcompl
mov
data16
inc
or
cmp
sub
cs
mov
out
add
pop
decb
rorl
pop
repz
and
repz
outsl
inc
jp
mov
pop
mov
lahf
add
jb
in
lods
sub
in
fs
push
les
sbb
sbb
push
loope
or
sarb
int3
pop
add
mov
fsts
mov
fwait
and
stos
int
pop
mov
dec
push
dec
sub
in
rolb
mov
xchg
std
xchg
xor
xchg
scas
out
into
adc
shlb
arpl
dec
mov
pop
ret
pop
cmp
fidivs
cmpsl
xor
loop
stc
sbb
lods
cmp
lcall
loope
fsubr
popa
cmc
push
or
aad
ss
adc
jae
imul
repz
cmp
or
orl
aas
pushf
cld
cld
int
out
push
pop
cmp
loop
and
sbb
jp
and
inc
fistpll
mov
jmp
add
mov
fcoms
and
and
call
cmp
enter
cmp
dec
loop
xor
jecxz
xrelease
and
int3
lret
lahf
sbb
repz
inc
sub
aad
push
pop
leave
in
sbb
inc
fcoml
je
dec
movsb
dec
jbe
test
adc
sub
inc
pop
inc
and
xchg
sub
adc
mov
jne
cmp
sub
xor
mov
das
lea
leave
scas
into
cmp
test
test
adc
test
xchg
fdivrp
cmc
inc
in
inc
cli
enter
dec
pushl
sub
mov
add
call
mov
cmp
mov
mov
aam
add
out
subl
push
jmp
jns
loopne
daa
mov
xchg
sub
pop
mov
js
jmp
add
shr
sahf
aas
pop
loope
ror
nop
imul
data16
jge
rol
xlat
sti
fcoms
or
idivl
repz
xor
stc
and
sub
push
mov
or
icebp
or
sbb
popf
xchg
daa
xchg
mov
push
out
push
stos
xchg
xorl
inc
dec
or
loope
out
add
stos
sbb
pusha
loop
xchg
mov
das
in
inc
jge
jbe
dec
call
enter
fs
js
add
inc
cmp
xchg
mov
cld
mov
out
mov
shll
arpl
bound
and
sub
push
push
or
into
mov
mov
cmp
out
movsl
xchg
xchg
push
mov
lret
loop
fwait
mov
mov
js
inc
cmp
pop
xchg
out
mov
sub
mov
lcall
lcall
cwtl
mov
stos
pop
iret
xchg
loopne
js
loope
int3
cmp
int
jo
call
mov
push
adc
dec
leave
sbb
call
addr16
mov
mov
fwait
jno
mov
jp
rcl
clc
mov
inc
add
cltd
pop
sub
or
icebp
mov
xor
scas
push
insb
xor
dec
cmp
dec
push
xor
adc
mov
pop
pop
stos
fstpt
cli
leave
pop
jns
aaa
fwait
cltd
jg
cwtl
inc
orb
lods
xor
mov
mov
mov
ficoml
dec
push
stc
ja
aad
fwait
pop
xchg
sbb
mov
scas
sti
cmc
shlb
clc
push
lahf
push
fdivs
xchg
push
fisttpl
lahf
mov
or
inc
dec
daa
add
in
test
cmpsb
pop
imul
xchg
int
mov
dec
jo
movsb
dec
hlt
inc
sub
in
mov
and
adc
push
jmp
sbbl
scas
jmp
aam
call
push
sar
xor
stos
outsb
mov
ficoml
lods
and
cmp
lock
int
and
adc
mov
push
mov
xchg
outsb
ss
lods
out
cmc
mov
insb
enter
out
and
cmpxchg
inc
roll
ret
jo
or
imul
xor
jmp
jo
andl
sub
mov
mov
dec
out
adc
and
test
insb
dec
lods
testl
pop
lea
xor
sbb
push
movsl
push
add
lock
mov
sbb
ds
sbb
mov
sbb
jno
ss
mov
push
inc
push
xor
daa
add
ljmp
jnp
out
push
jmp
cmp
addl
adc
pop
andb
ljmp
mov
sub
out
shll
fsubs
cmp
cmpsl
lock
jp
mov
xchg
fildll
les
cmp
xchg
outsb
ss
hlt
or
scas
inc
xchg
pop
rcl
inc
fimull
inc
jno
es
movsb
shlb
dec
or
cmp
popf
mov
or
int
cmp
fists
xor
lods
push
lahf
mov
push
es
and
test
sti
es
and
sbb
stc
fstpl
popf
jp
out
repnz
jno
inc
pop
out
insb
push
rclb
jne
cmpsl
xor
aas
push
xchg
aad
and
subl
mov
lahf
dec
out
dec
jmp
mov
ljmp
dec
cli
jo
sub
movsl
out
dec
iret
out
mov
sbb
sti
int
mov
sub
aaa
testb
xor
stos
dec
scas
insb
inc
mov
mov
cmp
cmp
aam
jb
hlt
dec
clc
xchg
aaa
jecxz
loope
mov
dec
dec
shl
lds
cmp
xchg
jb
lea
jb
in
shrb
xlat
dec
cli
call
js
mov
out
mov
and
int
push
push
int3
sahf
lds
dec
mov
aad
pop
dec
cld
xor
mov
mul
icebp
fistps
fisubrs
fnstenv
inc
xchg
sti
popf
lret
mov
inc
inc
data16
icebp
and
in
mov
mov
lock
push
adc
inc
xchg
lret
xchg
mov
cwtl
push
hlt
adc
fiadds
xor
inc
dec
push
pop
pusha
jo
pushf
mov
lret
pmaxsw
ret
jb
pusha
push
repnz
lods
mov
and
mov
std
mov
and
mov
push
add
adc
xor
stos
shld
lahf
pop
xchg
xor
out
fdivrl
scas
in
adc
test
cld
and
pusha
cmpsb
iret
fsts
shr
add
stos
push
xchg
push
movsl
push
rol
push
push
es
stc
das
or
push
push
xor
popf
stc
jne
data16
movb
pop
jbe
and
jb
sbb
mov
lahf
or
cmp
sub
fwait
mov
push
push
dec
fucompp
cli
xor
lods
mov
or
loopne
stos
pop
xor
and
mov
push
or
pop
xchg
mov
cwtl
jg
and
push
sub
cmp
popa
aad
xchg
stos
jbe
lret
call
inc
fldenv
mov
cmp
adc
mov
iret
pop
inc
lcall
dec
arpl
cmp
sahf
pop
stos
mov
or
pop
cmp
pop
sub
out
lea
jo
adc
and
push
jne
pop
push
aam
mov
outsb
repz
xor
add
movsb
add
xor
mov
pop
mov
in
rorl
and
ds
dec
lea
andb
stos
sahf
cmc
sar
mov
in
xchg
xor
fsts
scas
sahf
jp
sub
cmc
jge
and
xchg
jne
ret
cmp
ret
loopne
adc
fcomps
lods
cmp
xchg
xorb
push
shll
icebp
adc
fsub
lcall
xorl
push
insl
jle
inc
jp
hlt
daa
xchg
pop
cmp
dec
cmp
popf
inc
mov
xlat
or
push
push
xchg
mov
xor
jle
fimull
pop
xlat
jnp
mov
or
jge
scas
push
movsb
popa
push
fcoml
jnp
pop
jle
das
fdivs
sub
flds
add
mov
fiadds
mov
mov
add
jmp
dec
fcoms
int3
mov
dec
in
jbe
mov
sub
das
xchg
ret
xchg
sub
add
nop
fs
jnp
cmp
imul
hlt
xlat
jae
mov
adc
lret
fdivrs
push
cmp
dec
mov
shr
add
cmp
lods
mov
cmpsb
sub
movsl
mov
push
loop
or
dec
enter
imul
sub
stos
cmpl
xchg
outsl
loopne
sub
ja
cltd
ror
add
stos
and
es
scas
lahf
ret
sbb
mov
xor
push
ss
cs
inc
je
push
rcrb
aaa
dec
jbe
js
shlb
sbb
xor
in
lret
js
imul
imul
mov
pop
jo
add
jnp
add
std
jnp
jns
int3
insb
popa
xchg
jb
fwait
pop
pop
xor
push
add
mov
lods
lods
les
in
fisubrl
stc
xchg
xchg
sub
mov
mov
cmp
in
push
xor
sub
xor
xlat
stc
js
push
add
push
shrl
push
pop
pushf
inc
push
test
stos
or
aas
sbb
lahf
mov
sbb
pushf
jno
cmp
lret
scas
arpl
int
dec
jae
push
cmp
dec
push
lcall
imul
push
xor
inc
imul
mov
stc
cmpsl
mov
outsl
mov
or
push
jb
mov
cmp
cmp
add
repz
sub
sub
lock
test
insb
out
daa
push
out
mov
leave
cwtl
in
les
into
sub
mov
xchg
pop
mov
pusha
inc
pop
pop
mov
adc
in
lea
mov
or
xchg
hlt
jns
mov
addr16
stos
mov
or
sub
popf
xchg
insb
mov
je
xor
pop
jecxz
xchg
lods
and
leave
popf
dec
and
xor
aam
jae
inc
sbb
mov
pop
lock
xchg
insb
out
add
add
inc
mov
fdivl
outsl
mov
xchg
adc
mov
cmp
stos
filds
ljmp
inc
pop
out
jl
push
mov
adc
scas
fldl
pushf
int3
sahf
das
sti
add
mov
dec
mov
inc
fbstp
inc
enter
xor
fwait
add
dec
adc
outsb
js
mov
xchg
xchg
push
ds
cmp
lea
leave
xchg
xchg
mov
jecxz
add
sbb
les
xor
call
aam
xor
xor
fcomps
rcll
pop
sub
rcrl
std
mov
addl
int
sub
enter
cld
daa
cmpl
addr16
adc
push
iret
and
fs
fcoml
xchg
sub
sub
sbb
or
test
push
mov
or
je
test
and
fisttps
into
incb
fisubs
xchg
or
inc
or
inc
pushw
dec
insl
mov
pop
cmp
push
sub
icebp
scas
lcall
loopne
xor
fistpl
cmpsb
rcll
mov
das
xchg
mov
decl
stc
negb
sbb
lock
out
push
addr16
loop
add
in
pop
and
and
movhps
cli
out
inc
int3
mov
push
popf
imul
sub
aad
rcll
jp
mov
push
scas
pop
sub
push
xlat
xor
leave
sub
test
push
pop
lcall
sub
lret
fidivs
xchg
movb
aas
adc
test
fbstp
add
fwait
jecxz
push
mov
inc
cmp
lahf
jbe
or
inc
mov
xchg
in
sbb
xor
bound
mov
mull
test
mov
inc
ret
out
lock
shrl
shlb
out
add
push
jae
stc
ret
enter
mov
push
push
sub
add
or
mov
ja
imul
or
int3
cltd
ret
lret
sbb
ja
std
fimull
ds
pushf
mov
mov
mov
push
adc
push
imul
inc
test
mov
data16
mov
mov
xor
jno
pop
lahf
fcmovnu
sahf
mov
stos
mov
repz
push
or
loope
mov
inc
jns
or
push
fmuls
pushf
shrd
add
out
in
out
pusha
addr16
cmp
jae
adc
popf
std
loopne
adc
out
and
movsl
lahf
cmp
ljmp
jo
pop
adc
adc
adc
jg
pop
lods
dec
sbb
mov
jb
lcall
dec
scas
mov
in
and
mov
roll
lods
sbb
ss
jg
lock
cltd
or
in
pop
outsl
movsb
xchg
stos
xorl
lods
add
mov
repz
or
push
adc
shlb
inc
and
and
jno
inc
pop
adc
add
roll
test
bound
xor
or
rorl
jae
push
mov
mov
add
out
ffree
mov
cmp
jne
dec
push
repnz
das
xlat
sbb
mov
aad
shrl
mov
in
xor
mov
and
inc
pushf
icebp
mov
adc
ja
jecxz
dec
dec
fwait
inc
mov
mov
adc
scas
mov
jg
cmp
ss
addr16
jl
xor
rorb
xor
mov
clc
aad
push
nop
inc
add
stos
mov
push
mov
les
lds
mov
mov
dec
and
xor
fstps
cmp
fdivrs
stos
enter
sbb
or
mov
arpl
inc
idivb
and
pop
roll
addr16
inc
rcrb
and
dec
jbe
cmp
daa
sub
add
lods
xor
sub
je
dec
fs
sbb
sbb
mov
in
and
mov
mov
xor
push
jns
jmp
fildll
push
js
xorl
faddl
pop
shlb
xlat
push
adc
lret
movsl
cmp
fidivl
and
enter
scas
xor
loopne
dec
jle
mov
cmpsl
pop
arpl
inc
pop
fldl
sub
mov
fstpl
cmc
push
mov
or
xchg
fildll
lret
out
iret
out
es
out
jge
mov
in
and
notl
xchg
adc
mov
dec
je
xlat
jp
lcall
inc
mov
mov
sub
push
mov
or
inc
pop
jns
jns
clc
add
and
fsubs
mov
out
pop
mov
add
xchg
sub
je
out
mov
rcll
xchg
cmpsb
push
adc
test
push
mov
inc
idivb
adc
cmp
cmp
dec
call
in
movsl
push
imul
lcall
dec
adc
mov
adcb
rcrb
xor
popa
dec
movntq
test
sub
in
lahf
into
loope
jle
fiadds
push
xor
out
mov
cmp
into
cwtl
inc
rep
call
shll
push
pop
sahf
add
ss
orb
mov
loop
stc
into
scas
dec
imul
and
mov
add
inc
in
and
out
leave
adcl
js
dec
sub
and
pop
lea
bound
push
sbb
pop
xor
je
pop
push
je
test
sub
sub
add
jmp
out
add
icebp
lahf
push
add
and
flds
ljmp
jl
mov
add
xrelease
iret
in
xchg
ficomps
jge
popa
imul
adc
push
jge
mov
test
jae
lahf
or
test
inc
sub
imul
test
testb
rcr
imull
sbb
mov
mov
mov
jecxz
mov
lods
iret
lock
mov
jno
outsb
push
cmc
push
pop
sub
push
adc
out
xor
insb
aas
dec
outsb
lods
pop
and
xchg
and
jle
fldt
aam
call
rolb
movsl
adc
fiadds
pop
dec
fisubl
in
mov
int3
rcl
xchg
cmp
mov
xchg
call
jbe
out
add
mov
sbb
xchg
imul
div
mov
ds
addr16
jmp
mov
dec
mov
arpl
stc
cmp
push
mov
mov
mov
jge
xor
icebp
nop
mov
push
and
adc
jle,pn
push
div
pop
sbb
les
jno
push
mov
fidivl
mov
cli
sbb
cmpsl
pop
adc
adc
lods
cld
insb
mov
sbb
push
xor
mov
add
adc
lock
push
mov
out
pop
mov
pop
sbb
xor
xchg
les
fisubs
ss
clc
test
mov
iret
mov
mov
mov
sub
sbb
xorb
mov
pusha
sbb
scas
mov
jnp
jecxz
repz
fs
stc
xor
decb
adc
cmc
xchg
sub
scas
jg
movsl
pop
jp
jg
mov
loop
mov
xchg
push
inc
push
and
call
pushl
fmull
fs
pop
lock
stc
mov
jge
add
pop
dec
cmp
cmpsb
lea
mov
jmp
imul
lock
mov
inc
cmp
sbb
push
sarl
decl
in
jl
cwtl
inc
pop
jnp
xor
jmp
mov
dec
rolb
mov
daa
mov
in
out
sbb
mov
xor
imul
testb
mov
or
fisubrs
dec
sarl
mov
dec
test
loop
xchg
gs
push
bound
xor
xor
inc
mov
cmc
jmp
inc
imul
or
mov
es
adc
movsl
mov
ret
pusha
shrl
jp
lret
insb
imul
mov
add
filds
mov
dec
dec
js
lcall
nop
adc
rclb
sbb
mov
rcrb
mov
hlt
or
xor
or
xchg
pop
daa
inc
ret
and
sbb
pop
data16
aaa
fadd
mov
pop
cmp
mov
dec
ss
scas
loope
sub
cld
ret
arpl
jl
pop
movl
out
mov
leave
roll
arpl
and
mov
inc
push
inc
loop
inc
adc
jg
inc
and
leave
push
pop
cltd
ret
pop
xor
jmp
pop
stc
cltd
adc
stos
mov
mov
adcl
push
lock
mov
or
push
stc
mov
dec
fnstcw
mov
inc
push
jmp
xchg
or
inc
stos
pop
xor
sbb
mov
mov
push
jns
in
sbb
push
add
out
inc
loop
aas
xchg
rolb
cs
or
cmpsb
xor
rcll
lods
fwait
xchg
int3
mov
mov
inc
dec
mov
adc
sub
xchg
push
adc
xor
fdivr
xchg
jno
pusha
and
outsl
into
jecxz
jns
fmull
insl
or
xlat
aad
sub
mov
inc
dec
pop
mov
and
divb
mov
xchg
in
insb
mov
imul
inc
imul
sub
fisubl
es
pop
loop
jnp
cmp
dec
add
ljmp
sbb
sub
aad
push
ds
xor
insl
mov
and
lahf
lock
pop
cmp
push
and
adc
sbb
jp
push
push
cmpsb
cmc
test
aad
sbb
inc
pop
test
and
hlt
mov
pop
sbb
test
imul
inc
sub
xchg
inc
cmp
mov
fisttpll
push
jns
mov
xchg
mov
addr16
mov
mov
pop
mov
dec
adc
stos
out
repz
jmp
jge
cmpxchg
incl
test
cmp
pop
or
out
insl
lods
std
cmp
lahf
outsl
into
stos
cmp
mov
out
adc
xchg
jg
js
lock
sub
sub
dec
repz
push
push
xchg
push
pop
jns
xchg
and
insl
inc
mov
lea
cmp
bound
shr
pop
xchg
push
or
mov
enter
cwtl
mov
das
jns
and
rorl
xchg
dec
in
outsl
inc
arpl
push
or
add
mov
xchg
inc
imul
cli
sbb
or
xchg
pop
and
or
int3
jno
fistpl
inc
fistpl
xchg
stos
inc
xor
adc
jecxz
ret
push
add
jmp
loope
adc
and
xchg
xchg
pop
mov
pusha
xor
mov
pop
fcomp
aas
mov
jb
xor
and
xchg
inc
mov
jg
xor
ss
dec
xor
inc
scas
xchg
xor
xchg
sub
pop
inc
daa
mov
into
fildl
xor
push
bswap
xchg
inc
out
dec
xchg
or
fimuls
dec
cmpsb
and
cmp
popf
adc
sahf
add
mov
mov
cmpsl
movsl
adc
mov
or
cltd
inc
add
push
mov
dec
loop
out
adc
ret
cltd
call
push
into
mov
and
mov
repz
test
dec
insb
stos
inc
lret
ror
hlt
sbb
fs
shrb
cmp
or
fucomip
push
cmpsb
pop
mov
mov
adc
pop
idivb
mov
js
sbb
out
sbb
cld
inc
push
setae
jne
dec
adc
mov
cmp
and
notl
push
fs
cltd
xchg
and
xchg
inc
mov
jmp
popf
sarl
cld
push
mov
jle
inc
sbb
adc
ljmp
jnp
std
bound
inc
leave
insl
imul
and
mov
es
push
mov
xlat
or
aam
sbbb
lock
jge
jbe
das
inc
push
add
into
ret
arpl
repz
aam
mov
stos
jne
idiv
jp
dec
mov
out
push
divb
lock
jae
and
out
addr16
enter
and
pop
into
mov
pop
jle
ffreep
lock
test
in
jmp
sub
out
jl
popf
insb
test
and
cmp
xchg
filds
andl
cmc
cmpsb
mov
jbe
pushf
jmp
jo
popf
fisubrs
sbb
arpl
rclb
lock
push
pop
jne
dec
fucomip
nop
inc
movsl
lock
in
das
xchg
out
clc
andb
adc
jnp
mov
push
movsl
inc
fs
jge
repnz
mov
sub
repz
mov
test
add
adc
jae
mov
adc
imul
add
jg
lret
xchg
adc
sti
cli
into
sub
or
cwtl
rcrb
adc
pop
cmpsb
pcmpeqd
cld
hlt
pop
out
ffreep
inc
fmull
in
stos
aas
repz
es
pop
xor
ljmp
sub
cmc
cmp
out
ljmp
sub
lahf
mov
rcr
loop
addr16
cmp
jl
mov
xchg
mov
loope
adc
insb
mov
mov
in
jg
loopne
inc
jns
xchg
and
into
ret
inc
call
mov
mov
mov
call
mov
cld
pop
mov
push
sbb
je
push
inc
mov
out
mov
jns
mov
xor
lea
js
pop
xchg
imul
pop
add
mov
lret
cwtl
fdivr
jae
push
fiadds
dec
push
mov
inc
nop
pop
sbb
fdivrs
rol
adc
xchg
push
je
jne
out
sub
mov
xor
mov
fs
ja
push
mov
mov
xor
fstl
rcr
sbb
hlt
pop
in
out
out
add
insb
or
xor
stos
ret
cltd
icebp
dec
xor
es
push
enter
mov
cmp
scas
inc
pushf
dec
into
loope
outsb
and
out
loopne
mov
push
sbb
call
push
jnp
mov
push
cmp
sbb
push
xlat
add
test
cld
mov
xchg
notb
add
stc
rol
movsl
ret
adc
ja
or
lods
lret
and
div
adc
mov
push
outsl
test
aam
lods
push
pop
and
jno
add
cli
pop
pop
call
out
sub
fdiv
or
push
pmulhuw
and
imulb
push
imul
out
or
in
lahf
pop
movsb
or
or
pop
loop
aad
mov
jge
inc
into
jle
mov
and
xor
and
add
bnd
aas
push
mov
pop
inc
cmp
jno
fdivr
xor
stos
cmc
mov
shlb
xorl
mov
pop
out
ficoms
leave
repz
jle
xor
cwtl
test
and
jne
sbb
in
push
xchg
xor
dec
out
ljmp
sub
int
imul
pop
in
inc
xor
inc
fsubp
loope
add
xor
fiaddl
cwtl
mov
add
xor
cmpb
mov
lods
xor
cmpsb
loopne
incl
mov
pop
xchg
mov
jns
adc
dec
mov
adc
shlb
aaa
pop
call
sub
fnsave
jbe
shlb
fsubl
push
sbb
into
test
movsb
and
push
clc
push
popa
cwtl
fs
sbb
jb
jb
sub
dec
xor
fisubrl
mov
jg
call
mov
cmp
stos
inc
sub
jecxz
adc
ds
lods
loop
pop
je
mov
loope
cmp
lret
out
mov
loopne
add
push
lea
mov
xor
outsb
adc
jg
outsb
sbb
xchg
xor
in
ss
cmp
dec
sbb
inc
mov
insl
lods
lds
int
je
out
mov
xor
mov
gs
mov
dec
cs
pusha
hlt
inc
js
repz
dec
sbb
data16
sub
sbb
jo
adc
xor
jmp
push
insb
push
icebp
xor
mov
outsl
jae
es
insb
dec
mov
push
pop
imul
sbb
jg
cwtl
sub
inc
jg
jnp
cmp
xchg
lods
int
shrl
jae
imul
cmpsl
clc
jle
movl
xchg
pop
mov
cmpsb
icebp
push
imul
adc
hlt
mov
popa
fwait
stos
jnp
mov
sub
insb
mov
sbb
psubd
test
xchg
inc
fcomps
adc
stos
std
icebp
jmp
insb
jl
test
mov
sbb
xor
popf
inc
and
fdivrl
or
push
dec
cmp
push
sbb
xchg
fsubl
mov
test
test
mov
pop
repnz
xchg
pusha
sbb
mov
dec
aas
in
or
scas
sbbl
ret
sub
insb
loope
fidivl
cs
repz
mov
fisttpl
sahf
sub
xchg
adc
add
cmp
jmp
mov
arpl
scas
mov
xlat
pop
inc
fs
popa
inc
push
jmp
push
lret
mov
shr
xor
test
sarb
pop
insb
scas
lcall
xchg
or
sub
lcall
sbb
push
frstor
call
outsl
ret
cmp
sbb
movsb
enter
or
arpl
inc
jbe
cltd
jl
ret
push
mov
xchg
push
shlb
push
dec
lea
out
push
out
out
adc
repnz
mov
loop
jbe
sub
or
sub
sbb
mov
sub
pop
jns
and
pop
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
xor
loopne
jl
dec
pop
jl
xchg
notl
mov
jl
dec
inc
mov
fwait
inc
jbe
xchg
jecxz
push
dec
ret
cli
mov
loopne
test
mov
cwtl
cmc
test
icebp
cltd
sbb
cmpsb
cmp
xor
loopne
or
and
mov
popf
mov
mov
mov
into
out
rol
inc
jp
testb
mov
clc
sub
nop
in
dec
add
clc
xchg
push
pop
or
add
mov
jg
cld
xchg
inc
aam
xor
bound
insb
out
icebp
das
mov
push
sub
add
cltd
cmp
dec
pushl
cmp
push
add
arpl
in
and
mov
repz
push
cmp
pusha
sarl
addr16
xor
adc
xchg
pop
cmp
imulb
mov
popf
jle
add
rclb
fdivl
es
cmp
fs
add
cmovge
mov
adc
sbb
mov
xchg
jp
adc
aas
mov
sub
mov
fwait
mov
popf
in
lret
push
jge
scas
push
daa
decb
fbld
mov
jns
pop
in
cwtl
xor
rcll
dec
fisttpl
cld
or
loope
orl
jmp
pop
jno
std
and
pop
imul
lock
outsl
xor
fimull
ja
insl
scas
and
daa
aaa
mov
or
arpl
fsubs
in
jb
mov
stos
mov
adc
insl
and
iret
mov
xor
rol
xlat
xchg
pop
arpl
test
xchg
push
add
xlat
inc
shrl
or
subl
jecxz
jge
test
adc
jnp
aad
stc
jae
lods
in
aas
inc
inc
outsb
lahf
mov
inc
pop
adc
mov
repnz
adc
fimuls
push
pop
sbb
inc
mov
xchg
sahf
push
ret
pop
jge
push
test
jae
pop
call
addl
das
jbe
icebp
fwait
mov
aaa
pushf
fdivs
or
or
jbe
mov
dec
ficompl
test
xor
adc
sub
inc
clc
add
dec
imul
shrl
out
cmp
mov
push
int3
aas
xlat
inc
insl
pop
int
rol
lret
mov
inc
bound
mov
fimuls
divl
nop
adc
mov
xchg
in
cmp
xor
les
mov
dec
hlt
push
mov
lods
mov
cmp
jecxz
js
push
fisttpl
divb
mov
push
jmp
addr16
sbb
into
jns
mov
sbb
int3
xor
xor
rcll
incb
pop
aaa
xchg
xchg
xor
test
jle
rolb
shl
sub
and
mov
out
lock
sbb
mov
push
mov
add
mov
movsl
in
cltd
pop
dec
xchg
lock
in
xchg
inc
fucomi
les
mov
push
push
xor
xor
pushf
fldenv
or
mov
inc
frndint
or
inc
inc
mov
mov
aas
pop
mov
add
mov
jae
mov
mov
sub
xchg
mov
fwait
pop
mov
jmp
dec
shlb
lods
lahf
jecxz
pop
stc
bound
movsl
aaa
push
mov
js
stos
cld
rclb
enter
add
add
icebp
sahf
dec
pop
ljmp
push
jg
pop
imul
add
ljmp
sbb
and
movb
pop
cmc
shlb
mov
push
jg
jb
mov
out
inc
adc
movsb
les
pop
cltd
sub
push
sbb
ljmp
or
pop
and
xor
test
sahf
scas
lret
inc
lds
aam
pop
pop
subl
or
loopne
cld
ret
lcall
jle,pn
pop
pop
testl
es
loopne
lret
scas
xlat
js
or
cmp
clc
mov
pop
nop
xchg
lods
pop
rol
fadd
mov
cmp
repz
cmp
pop
push
jbe
shr
dec
xchg
ja
sub
rol
xor
inc
mov
jp
sahf
sbb
data16
aas
mov
cmc
idivb
xchg
xchg
imul
enter
subb
mov
jnp
int
and
cld
jp
jecxz
xor
test
pop
or
dec
inc
popa
sbbl
jne
push
idivb
int3
or
or
add
cwtl
push
ret
or
or
inc
push
cmc
mov
ret
push
pop
shrl
mov
and
cmp
negb
aaa
sarl
and
inc
je
add
fadds
jb
jge
xchg
cmpsl
scas
and
adc
xlat
adc
push
clc
jmp
in
inc
push
inc
sahf
sub
clc
in
push
push
paddq
push
pop
mov
fdivl
add
mov
dec
inc
aam
call
repz
test
and
jnp
xchg
bound
add
pop
xchg
sti
scas
mov
jbe
pop
fisubrs
test
mov
push
or
out
pop
inc
jnp
cbtw
pop
xor
xor
std
jae
pop
cltd
lahf
jnp
test
in
pop
lcall
mull
push
cwtl
inc
jnp
mov
out
push
fdivr
fs
inc
sti
add
jmp
mov
push
pop
mov
jg
call
loope
hlt
sub
lea
fadd
or
scas
aaa
int3
adc
cmp
jne
add
negb
add
dec
mov
jmp
mov
clc
fst
fldenv
std
sbb
in
stc
xor
push
push
or
repnz
test
rorl
mov
sbb
rcll
add
icebp
bound
loop,pn
cmp
mov
mov
add
xchg
cmp
outsl
loope
pop
loope
inc
mov
mov
repnz
mov
shrl
es
jl
push
add
or
repz
inc
cld
mov
xor
fdivl
push
inc
call
adc
cmp
popl
jp
and
gs
leave
adc
inc
ljmp
stos
mov
mov
push
mov
ss
or
fcmovbe
xor
call
cmp
jmp
iret
inc
flds
roll
fmull
test
mov
pop
mov
push
mov
xchg
mov
imul
mov
sub
cli
lods
push
push
pop
mov
mov
popa
xchg
jp
inc
lea
daa
sbb
adc
ret
sbb
mov
ret
mov
and
bnd
leave
cltd
sbb
push
cmpsb
mov
mov
jb
sub
and
pusha
or
icebp
pop
lods
mov
int
xchg
xchg
push
dec
pop
sub
xorl
mov
xlat
rorb
sbb
sbbl
sahf
fsubrl
cs
push
xchg
jmp
mov
in
cmpsl
adc
mov
sub
xor
and
sti
out
sub
aas
and
jo
mov
jecxz
and
jne
adc
mov
mov
data16
mov
lcall
push
mov
int3
jge
sub
sub
outsb
mov
dec
scas
mov
imul
je
std
sub
rcll
addl
sbb
dec
jne
sub
movsl
pop
nop
out
or
inc
out
add
lret
inc
orl
mov
sahf
repnz
add
movsb
sub
jae
dec
sub
adc
jp
mov
mov
in
adc
xchg
xor
test
pop
and
and
mov
mov
mov
mov
mov
stos
fwait
insb
add
mov
in
shlb
push
outsl
hlt
aas
imul
cli
jmp
call
scas
adc
mov
xchg
scas
arpl
fisubrl
cmp
xor
mulb
or
dec
pusha
push
nop
add
ret
xchg
fisubrl
mov
ror
cmp
cmp
sbb
pusha
fwait
mov
outsl
jle
adc
hlt
mov
jp
mov
mov
fldt
pop
rolb
adc
in
call
aas
sbb
cmc
push
push
jnp
scas
mov
dec
dec
out
dec
ret
and
test
movsb
lea
pop
mov
sbb
xchg
sub
jnp
pop
pop
adc
addr16
mov
or
insb
adc
xchg
imul
test
arpl
mov
xchg
pop
cmp
add
mov
adc
loope
sub
outsl
loop,pn
adc
dec
mov
inc
and
js
outsl
xchg
lods
shrl
je
push
add
testl
nop
rorb
cmpl
pop
jbe
xor
cmp
in
insb
lret
dec
cmc
lods
xchg
add
xchg
sub
cli
add
xchg
pop
or
push
fistpll
test
adc
lret
xchg
call
cltd
xchg
mov
mov
aaa
xor
or
xor
dec
or
das
incb
mov
mov
ror
cld
lahf
and
push
adc
lret
scas
or
and
lret
sti
add
aaa
fcompl
dec
es
sbb
out
les
jne
ds
xor
rcl
fistps
and
jmp
nop
mov
fucomi
xchg
cmp
cmc
mov
xor
sub
cmp
and
mov
imul
and
xor
stc
jo
pop
and
mov
call
or
pushl
leave
mov
mov
addl
or
add
shr
jne
mov
rcr
xchg
cmpsl
insb
lea
push
out
sub
clc
adcb
outsl
sarl
add
fnsave
fs
popa
add
pop
cld
jg
adc
outsb
mov
mov
mov
in
cmc
pop
lods
sbb
push
push
cmp
jns
jp
sbb
jmp
loopne
push
mov
push
insl
xor
and
and
xchg
in
daa
dec
push
adc
or
aas
jae
and
mov
adc
lret
jne
ljmp
into
iret
add
lcall
sahf
sbb
test
cltd
lock
xchg
jmp
repz
pop
scas
dec
daa
inc
add
inc
cwtl
movswl
rol
dec
pop
cld
test
out
mov
fldl
sti
mov
jae
sub
sub
in
adc
xchg
mov
ret
push
mov
mov
adc
shlb
dec
fidivl
mov
xchg
pop
lea
test
faddl
cmp
xchg
mov
js
mov
idivb
lock
je
rol
ljmp
js
ds
cli
stos
test
jno
repz
sbb
jae
jl
pop
pop
sbb
push
push
imul
sub
in
enter
aas
jns
jno
mov
pop
sub
cmpl
cltd
das
inc
pop
sub
pop
pop
sbb
mov
rorl
and
jno
xor
push
jmp
sti
pop
stos
stos
jge
fwait
push
test
xchg
imul
jne
decl
jl
adc
nop
mov
mov
add
mov
out
aas
sbbb
xor
mov
cmp
mov
je
pushf
leave
push
sbb
int3
mov
xor
adc
shll
ss
inc
push
mov
mov
pop
dec
clc
lods
xchg
inc
push
movsl
gs
fdivs
dec
add
xchg
jb
cmp
jle
repnz
jmp
cltd
add
xchg
nop
jns
aaa
fadds
sbb
pop
in
test
inc
enter
je
push
push
or
or
or
outsb
xor
push
in
fs
icebp
and
jns
mov
cmpsb
lock
icebp
fwait
mov
je
cwtl
and
fisttpll
nop
out
add
ds
je
shl
pusha
adc
movsb
test
test
dec
jae
xorb
out
dec
cs
mov
shll
lcall
dec
sub
loopne
into
pop
xorb
push
add
sub
mov
cwtl
pop
add
pop
loopne
das
lahf
mov
nop
fcompl
outsb
mov
sahf
mov
sar
mov
negl
iret
cmpsb
cmp
stos
jnp
adc
push
lock
into
mov
fistps
jbe
xlat
jo
mov
jbe
mov
shl
daa
push
sub
mov
dec
sub
cmpsb
mov
cltd
jb
xor
push
test
inc
pop
xchg
repnz
adc
add
fwait
lds
cmpsl
mov
jno
cwtl
out
test
ret
jno
int
adc
pop
and
fwait
cmp
das
jge
adc
loopne
adc
pop
push
xor
adc
fdivrs
sbb
into
mov
sub
lret
mov
movsl
adc
xbegin
mov
popa
mov
adc
sbbl
jp
lea
cwtl
sub
imul
daa
mov
ret
loop
pop
and
xlat
sbb
cmp
int3
cwtl
pop
aad
jnp
cmp
adc
sbb
add
popa
mov
js
and
adc
filds
sbb
shll
jne
jns
or
cmpsb
inc
xor
lods
mov
add
es
pop
js
or
dec
or
sbb
insl
leave
jno
out
repz
fs
lods
or
call
sub
sub
arpl
sbb
push
insl
fbstp
lea
xchg
jne
dec
mov
adc
inc
ss
sub
outsl
fstpt
sub
xchg
push
adc
sub
sub
inc
pop
cmp
xor
inc
arpl
push
test
sbb
divb
dec
jns
pop
mov
mov
mov
stos
pop
not
mov
enter
sub
cmp
ret
inc
cmpsl
sub
dec
scas
dec
hlt
pop
xchg
bound
pop
dec
sub
sahf
popa
inc
or
cltd
push
imulb
jle
xor
bound
push
ret
mov
cwtl
inc
faddl
inc
mov
das
fildl
aas
jge
dec
decl
fsubl
mov
into
sti
fwait
lods
enter
xlat
mov
xchg
data16
and
mov
sub
cmpsb
push
frstor
dec
mov
inc
xchg
mov
sbb
lahf
and
rolb
enter
jnp
inc
jne
push
push
mov
les
rolb
in
cmp
rorl
pushf
mov
arpl
mov
rorb
outsl
xchg
call
sbb
add
pop
adc
cmova
jno
lods
push
jne
lret
lahf
xchg
ret
stc
or
inc
adc
lret
dec
jp
xchg
setle
lea
pop
mov
xchg
adc
stos
movsb
int3
je
pop
fimull
rcr
int3
jecxz
xchg
sbb
pop
lret
lock
xlat
adc
cltd
jne
or
and
test
out
ret
imul
loopne
mov
arpl
fdivr
mov
and
adc
cli
inc
sbb
movsb
push
add
out
cli
and
std
or
mov
in
dec
mov
dec
call
push
and
and
filds
mov
xorl
pusha
xchg
addr16
inc
sbb
outsb
add
cmpl
loop
pop
nop
shlb
repnz
jmp
dec
sub
mov
jae
lcall
mov
mov
mov
aaa
push
loope
mov
filds
in
cmpsb
jg
jno
jp
sbb
mov
xor
mov
adc
add
loop
xchg
cmp
mov
sub
rol
sbb
ja
fbld
int3
dec
and
mov
jo
dec
orb
mov
and
into
mov
xorl
pushf
gs
lret
xchg
pushf
and
adc
fstps
inc
mulb
cli
stc
arpl
cmp
mov
mov
mov
inc
dec
dec
nop
jbe
push
jp
ret
add
push
fnstenv
clc
xor
xor
ret
imul
sub
dec
les
out
mov
mov
jno
add
les
mov
sti
xor
mov
mov
rcl
fdivrl
pop
add
or
dec
jns
out
pop
popf
stc
jne
inc
std
xchg
js
gs
sub
cmp
je
dec
movsl
shlb
aaa
lcall
gs
enter
dec
add
pop
rcrb
pop
jecxz
sbb
sbb
lods
fwait
test
mov
inc
popf
mov
jne
push
cmp
gs
xor
lcall
mov
aaa
pop
mov
adc
jmp
in
push
jo
add
jae
repnz
inc
xchg
into
mov
pop
mov
shlb
xchg
xchg
pop
dec
imul
jb
loop
pop
movb
adc
nop
into
adc
mov
lret
es
xor
cmp
dec
les
insl
sbb
hlt
add
shrb
clc
mov
fisubrl
out
xchg
add
testb
or
xchg
sbb
fldlg2
fisttps
mov
sahf
dec
add
or
movsb
xlat
inc
pop
cmp
push
xor
dec
ss
jmp
ficomps
in
jge
jnp
movsb
push
inc
fnstcw
lds
mov
nop
test
or
xchg
adc
rclb
mov
inc
or
call
dec
and
insl
stc
jnp
jnp
lea
imul
xor
inc
data16
dec
sub
push
sbb
jne
jl
adc
std
lds
push
xchg
mov
fs
stos
fidivs
mov
inc
dec
adc
sub
mov
xlat
mov
out
cmp
daa
je
jecxz
adcl
lret
hlt
mov
push
push
shr
xchg
pop
ds
pusha
pop
ret
and
repnz
test
sub
incl
jo
into
scas
aam
repnz
mov
ljmp
test
rorb
aam
jle
lahf
cmp
rcr
pushl
add
fwait
into
bound
jle
xor
add
sbb
mov
mov
movsl
nop
mov
aad
mov
arpl
daa
mov
xchg
cmp
repz
mov
enter
pushf
pusha
inc
jp
movsb
mov
jbe
lods
loopne
arpl
pop
or
add
mov
xor
pop
sbb
jnp
sti
dec
xchg
subb
jge
arpl
lret
ret
ds
jl
xchg
push
sub
int
inc
fstpl
pop
xor
icebp
sbb
test
ficomps
fmulp
stos
out
push
xchg
imul
cmpb
into
push
lods
movsb
sbbl
sub
xchg
cmpsb
push
fs
sti
lock
xchg
mov
sub
jne
push
push
sub
in
jns
ret
sub
and
pushf
fcomp
mov
or
lret
xchg
cmc
xorl
lock
mov
imul
dec
jne
inc
fwait
lret
test
jge
fistpll
aaa
scas
mov
xchg
or
sub
sub
dec
mov
js
sub
cmp
xor
movsl
pop
sahf
mov
jbe
aas
jns
xor
mov
mov
cld
xor
test
fs
ret
fs
dec
shld
enter
popf
das
push
dec
out
jnp
addr16
call
in
into
mov
pop
pop
mov
dec
xchg
lret
pop
xchg
aad
lea
pop
arpl
and
lcall
xor
test
cmpsl
xchg
pusha
mov
subb
xlat
xchg
int3
and
sub
test
mov
pop
js
ds
insb
jns
xchg
add
sahf
arpl
jl
rcrb
stos
fsubrs
jmp
iret
or
nop
int3
imul
in
daa
xorl
mov
push
adc
fdivl
push
adc
xor
xor
lds
cmp
xchg
xchg
loope
movsl
mov
rclb
dec
pushf
sub
inc
sub
xor
xchg
popf
sub
ret
in
aam
jnp
ss
inc
into
out
cli
mov
ret
outsl
cmp
lds
xchg
sub
mull
and
int
dec
int3
dec
mov
test
or
std
dec
cmp
lahf
scas
pusha
jne
movsb
mov
dec
xor
pop
in
mov
sbb
push
mov
sar
fucom
mov
sbb
sbb
jb
mov
and
mov
dec
sti
push
mov
dec
inc
popa
jo
mov
imul
andb
sbb
shl
fnstenv
pop
inc
shll
mov
idivb
jge
jge
in
call
mov
stos
ja
pushf
mov
gs
arpl
jmp
cmp
mov
popa
lods
aad
inc
bound
test
je
adc
jb
rcrb
mov
mov
loop
jnp
hlt
jle
pusha
pop
inc
imull
test
sub
out
or
xor
lret
je
inc
out
jbe
shrb
sub
mov
xor
push
xor
add
cmp
inc
das
dec
imul
roll
or
or
fs
shlb
outsb
and
adc
sbb
sahf
das
cmpsb
mov
add
inc
das
scas
mov
push
iret
sub
mov
out
andl
mov
xchg
sbb
pop
int
leave
imul
push
push
rcl
xor
in
inc
xchg
xchg
scas
testl
push
lock
sbb
subb
jne
sti
sub
add
or
repz
mov
xor
cmp
fldcw
push
dec
cmc
inc
xor
jbe
adc
mov
mov
dec
xor
repz
sub
xchg
pop
rorb
mov
movlps
inc
sti
mov
inc
mov
jg
hlt
push
adc
sbb
call
sar
ja
rolb
push
jne
mov
sub
cltd
add
xor
push
pop
sbb
cmpsb
push
push
mov
mov
dec
icebp
inc
mov
ret
cmove
jns
inc
adc
dec
jno
in
xchg
mov
iret
dec
cltd
shlb
loope
dec
incl
aaa
mov
pop
add
xor
shrb
fs
gs
fnstsw
orl
xchg
sti
popa
adc
jno
jne
jg
bound
scas
jmp
xchg
xor
adc
js
lahf
addr16
les
js
iret
inc
sbb
cltd
inc
popf
mov
lret
mov
inc
jg
fistpl
testb
mov
int
shr
sub
dec
xor
mov
pop
in
cmp
mov
xchg
push
addps
pop
cmp
adcb
out
mov
imul
xchg
jns
stos
push
inc
dec
cmc
in
mov
or
into
pop
test
sbb
push
adc
and
les
xor
icebp
and
mov
outsb
outsl
jge
pop
xor
jbe
imul
inc
or
das
in
add
push
xchg
fmuls
cwtl
movsl
adc
xor
push
jnp
loope
lret
sbb
xchg
push
jg
pop
xlat
mov
ret
push
fisttpl
push
xchg
mov
mov
xorb
inc
fs
dec
icebp
push
cli
fs
movb
fsubp
ss
loopne
ret
or
and
fmull
imul
lock
dec
andl
arpl
sub
mov
adc
or
sub
jne
mov
jbe
dec
out
test
jb
xchg
fmuls
int
movl
xchg
pop
and
jns
xchg
movsb
pop
lcall
imul
or
mov
dec
and
add
lcall
or
in
mov
cmpl
adc
and
push
pop
push
dec
fimull
scas
hlt
lock
out
xor
les
pop
mov
push
dec
or
std
mov
jbe
add
add
inc
jns
sbb
inc
lods
pop
and
dec
jecxz
cmpl
mov
mov
jae
push
dec
push
out
jl
pop
inc
mov
jg
inc
movsb
test
mov
lock
push
enter
je
or
and
aaa
lahf
clc
xlat
popa
mov
xchg
cmp
mov
cld
jle
sbb
out
loopne
int3
or
aas
mov
daa
and
push
adc
nop
nop
xchg
cmp
dec
mov
cmpsl
cmp
xchg
cmpsb
cmovge
xorl
test
mov
das
cmp
lea
loop
aaa
aas
fwait
test
push
cmp
scas
lds
fisubrl
lahf
mov
mov
lods
movsl
flds
imul
mov
mov
adc
je
repnz
bound
nop
sub
sub
mov
sub
or
dec
clc
sti
add
in
scas
push
sbb
bound
test
mov
aas
outsb
cmp
stos
js
fcoml
add
inc
xchg
ret
and
push
dec
push
pop
loop
int3
inc
push
sbb
aas
cmp
shr
push
and
inc
jmp
rorb
xchg
rcl
jl
das
inc
cmp
test
adc
in
and
push
push
push
loop
push
mov
gs
push
push
jo
pop
into
lret
xchg
fdivp
mov
nop
pop
insl
test
sar
sbb
mov
adc
bound
fwait
cmp
pop
add
int3
mov
add
dec
clc
scas
fisubl
xchg
sti
mov
sbb
inc
jae
rcl
in
ja
mov
outsl
sbb
divl
sub
inc
pop
sub
inc
jb
push
subb
test
jns
sbb
mov
xor
dec
mov
movsb
jmp
jecxz
xlat
das
xlat
rcrb
js
add
jns
enter
dec
fcmovu
imul
mov
out
jae
mov
xor
cmp
sbb
dec
xchg
pop
jge
cmp
fwait
pusha
fdivs
push
stos
aas
outsb
push
bound
mov
hlt
je
or
enter
pop
add
pop
incl
imul
arpl
subb
mov
push
jbe
sarb
loopne
divb
sbb
sbb
aad
mov
pop
dec
arpl
rorl
sbb
or
xor
xchg
out
inc
repnz
push
lds
lret
and
movl
lahf
xlat
out
aam
cli
sub
xlat
ffree
aaa
jle
aam
int
push
dec
wbinvd
or
cmpsl
fisttpl
pop
sub
cltd
dec
jg
push
ret
test
jecxz
insl
cmpb
es
dec
scas
cmp
not
enter
inc
sub
and
jnp
xchg
in
push
sti
mov
mov
repz
inc
mov
xchg
and
scas
jno,pt
xchg
mov
push
dec
test
xchg
jmp
jae
pop
jne
push
popa
pop
push
jns
pop
stos
pop
cmp
jns
xor
adc
ss
js
or
jle,pn
pop
push
insb
pop
inc
data16
stos
or
mov
repz
mov
sbb
xor
arpl
jl
or
test
mov
shl
cmpb
or
sbb
stc
jae
lfs
dec
leave
lahf
sbb
pushf
mov
ret
ja
cmp
movsl
pop
lds
and
dec
inc
push
loop
int
cld
cwtl
fwait
adc
imul
imul
subb
std
addr16
sub
popa
das
cmp
mov
out
mov
pop
cmp
shll
rcrl
popa
mov
push
sbb
sbb
daa
cltd
push
pop
xchg
in
decb
loop
insl
into
shlb
leave
sbb
lcall
lds
mov
aam
movsb
cmp
bswap
aaa
call
ljmp
sub
add
dec
pop
jbe
or
mov
xor
orb
inc
and
mov
fs
pop
outsl
repz
dec
push
icebp
rorb
jb
jae
inc
fisubrl
sahf
cmp
push
repnz
mov
add
test
xchg
mov
mov
cmpl
mov
lcall
gs
mov
sub
jne
add
test
sbb
jecxz
jnp
cmp
add
hlt
insl
enter
adcb
and
jl
mov
call
pop
enter
repz
hlt
mov
dec
fsubs
xchg
mov
mov
push
repnz
jmp
loop
cmp
movsl
andl
shl
es
adcl
push
cmp
insl
add
and
out
adc
or
leave
pusha
jmp
imul
in
pushf
gs
cmp
mov
addr16
pop
es
sbb
inc
dec
mov
in
push
bound
mov
mov
inc
leave
pop
cmp
and
mov
int3
fmuls
insb
ja
or
call
les
scas
mov
add
outsb
jmp
mov
xchg
mov
mov
add
enter
std
push
outsb
jle
mov
adc
cmpsb
repnz
mov
out
loopne
push
jb
mov
rol
xchg
push
and
push
sbb
bound
loope
and
sub
mov
sti
mov
rorl
mov
sub
pushf
jb
xor
xor
fisttpll
out
xchg
mov
test
in
lret
fnstenv
cltd
cs
sub
inc
or
mov
mov
ret
cmp
xor
cwtl
add
repz
pop
dec
pop
dec
jnp
loop
jbe
jg
out
pusha
push
addr16
loopne
in
add
fsts
mov
movsb
inc
leave
insb
fs
mov
int3
jae
rcrl
cltd
xor
in
sub
ja
xchg
mov
jmp
push
jmp
cmp
rclb
push
inc
mov
cli
ficoms
or
pop
es
fldt
inc
sub
shlb
xchg
jecxz
loopne
cli
shll
xlat
orl
cwtl
andb
sub
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
xchg
mov
and
pop
jl
inc
mov
fs
inc
mov
stos
and
sbb
sar
insl
xchg
clc
inc
pusha
xchg
vpaddusw
ret
and
mov
inc
jno
cmpsl
movsl
push
xchg
lret
sbb
das
call
or
pop
cmc
push
lods
nop
aam
mov
pop
mov
addr16
stc
in
inc
je
cmp
lret
mov
jo
pop
sub
mov
dec
dec
hlt
dec
scas
lahf
mov
adc
lea
mov
out
js
gs
pushf
mov
test
adc
push
js
or
repz
icebp
fistps
out
js
jns
jmp
in
dec
inc
push
nop
ja
adc
pop
aas
mov
popa
imul
mov
mov
sarl
xchg
cmp
mov
cmp
push
xor
jle
fiadds
push
mov
cs
dec
sub
push
testb
mov
push
dec
int3
dec
adc
jno
out
xchg
leave
lds
or
inc
and
pop
in
pop
shll
imul
dec
sub
lcall
sbb
mov
mov
and
dec
mov
sbb
out
xor
mov
lods
xchg
mov
movsb
imul
out
or
push
pop
pop
xchg
and
fsubp
test
dec
xchg
xchg
add
aad
ljmp
pop
mov
pop
out
aas
cmp
cltd
std
adcb
sbb
fnop
ds
scas
jne
out
add
testb
cmpsb
jl
and
ss
and
popf
in
iret
xorb
push
sbb
outsl
mov
mov
scas
mov
xchg
dec
push
sub
mov
xor
inc
repz
dec
sbb
data16
pop
lods
fisubl
pop
nop
push
push
pushf
nop
test
sbb
fs
in
cmp
nop
or
rol
sbb
sub
xchg
movsb
adc
popa
inc
mov
or
and
and
xor
and
lahf
icebp
mov
adc
sub
stos
pop
rorb
sub
nop
sahf
mov
clc
fistpll
repz
repz
stos
jno
lods
es
fadds
push
mov
addr16
ja
push
xchg
in
adc
jns
orl
aam
jle
dec
push
out
pop
ds
std
shlb
mov
nop
call
std
xor
repz
arpl
sbb
pop
pop
mov
scas
shlb
stc
fsubrl
cmpl
mulb
jmp
mov
mov
imul
outsb
psrlq
cmpsl
xchg
loop
pop
dec
subps
jmp
mov
mull
inc
push
mov
xchg
out
xor
mov
dec
adc
dec
jg
jge
popa
cmp
jne
xlat
ror
test
inc
xchg
push
sub
movsb
jl
sub
test
fistpll
in
lahf
inc
pop
pop
adc
dec
insb
es
ja
nop
out
xchg
fsubs
mov
fdivr
popa
cmp
in
pop
sbb
popf
sbb
xchg
rcrb
mov
call
sub
jae
mov
imul
lahf
sar
add
lds
repz
mov
test
and
mov
aas
xchg
into
shr
mov
lahf
sahf
sub
sub
cmp
imul
xchg
out
mov
pop
inc
inc
add
mov
lret
std
sub
push
filds
fcompp
or
clc
inc
cltd
mov
sub
mov
pop
push
pop
adc
in
jp
dec
test
and
mull
insb
orl
mov
cs
xchg
imul
mov
cmp
insb
add
mov
das
xchg
push
sbb
fisubrs
cmp
test
movsb
arpl
test
inc
dec
cs
mov
pop
xor
push
mov
icebp
sbb
pop
mov
shl
and
aas
les
push
aaa
cmpsb
jmp
outsl
xchg
sub
add
jno
mov
mov
gs
mov
movsl
nop
test
mov
cwtl
insb
inc
cmp
mov
popa
inc
in
pop
lret
push
int3
scas
mov
ds
xor
mov
cmpsb
mul
or
mov
jb
ja
loopne
add
test
cs
push
sbb
in
hlt
xor
mov
jmp
loopne
lcall
jl
push
sbb
nop
js
add
loop
dec
and
aam
mov
push
jmp
jne
cwtl
and
insb
insl
cmc
pop
sbb
lods
or
or
sub
mov
and
sahf
stc
movsb
cmpsl
dec
dec
mov
repnz
inc
and
je
lds
test
xlat
xchg
leave
lcall
gs
enter
pop
jmp
test
incb
push
sbb
mov
add
sbb
sbb
int3
rcrb
fldt
mov
pushf
lret
outsl
inc
pushf
leave
ljmp
push
push
shlb
and
cmp
mov
sarb
add
roll
das
jg
fmuls
mov
add
test
push
es
jne
aas
xchg
lea
adc
call
jge
cmpl
or
imul
enter
cmp
inc
and
test
sbb
sahf
push
aaa
jp
shr
push
bt
pop
fidivrl
rorb
push
es
push
scas
xchg
jge
jp
ja
cmp
stc
fwait
mov
cs
mov
popf
jge
and
dec
push
sub
rorl
std
pop
or
dec
fbld
inc
mov
push
mov
add
mov
xor
mov
and
rcll
popf
inc
inc
add
sbb
jge
xor
popf
mov
cmp
xor
xor
shll
ljmp
cli
pop
and
stos
ffreep
mov
scas
add
mov
xor
xlat
lods
das
hlt
sti
call
add
adc
inc
stos
dec
loopne
mov
aaa
mov
testl
xchg
daa
mov
sbb
xor
mov
loope
test
pop
inc
push
cmp
loop
sub
cmp
jno
add
push
lods
mov
mov
shl
inc
daa
enter
cmp
jg
xor
outsl
or
inc
or
inc
add
loop
fcompl
sahf
jmp
adc
mov
adc
mov
loopne
jle
xor
int
test
xor
cmp
sti
cmp
testb
pop
lock
notl
jne
fldenv
jmp
mov
push
dec
sbb
jne
jb
addr16
adc
mov
mov
popa
jae
push
scas
push
test
cld
cmpsb
and
lock
jmp
movsb
xchg
das
or
dec
arpl
nop
cs
dec
mov
or
mov
cmp
sbb
cmp
aas
cmpsb
mov
sbb
pop
dec
cmp
sbb
aaa
pop
lcall
dec
cmc
pop
cmp
xchg
cmc
and
out
xchg
test
sub
lahf
mov
push
sub
outsl
leave
mov
shll
push
movb
dec
add
inc
mov
push
call
addr16
into
add
xchg
icebp
sub
subl
enter
fs
ja
sbb
arpl
adc
clc
dec
fisttpll
dec
ret
gs
jnp
pop
iret
xchg
push
mov
lods
shl
dec
pop
addr16
je
xchg
mov
ljmp
xlat
pop
sar
sti
xchg
out
lcall
sbb
dec
sub
xchg
sub
mov
hlt
mov
mov
stos
push
jbe
out
stos
jecxz
cmp
leave
ljmp
cwtl
movsl
icebp
js
ljmp
movsb
push
imul
xchg
mov
mov
dec
jb
je
push
cld
inc
inc
pop
jo
xlat
push
fcmovu
loop
arpl
xor
adc
orb
push
popa
mov
mov
data16
mov
lret
xor
xchg
push
xchg
mov
xchg
inc
ds
bound
ficoml
mov
lods
pop
push
repz
cmp
in
sub
pop
insl
dec
mov
push
jbe
popa
push
bound
sbb
mov
dec
lahf
inc
cmpl
pop
repz
sti
loopne
daa
cmpl
js
roll
repz
or
mov
jns
xor
lcall
fldl2t
adc
pop
cli
testl
in
xchg
mov
mov
outsb
popa
jns
cli
mov
push
leave
mov
push
leave
orb
mov
aas
je
cmpsb
inc
or
imul
test
sub
out
neg
adc
divl
xor
add
lods
iret
xchg
pop
jns
outsl
xor
dec
add
and
mov
add
movsb
loop
lods
insb
or
popa
movsl
outsb
add
fstp
int
dec
jmp
mov
das
cli
dec
mulb
xchg
xchg
mov
mov
xchg
out
inc
push
jge
mov
and
push
xchg
add
std
test
inc
aad
sbb
jbe
inc
lock
pusha
out
shlb
dec
ja
lahf
pop
pop
into
fwait
inc
mov
lea
lret
insl
cmp
in
arpl
xchg
xor
xchg
in
test
mov
movsb
sti
fiadds
out
inc
jne
push
mov
xchg
adc
mov
push
mov
pop
pop
sbb
cli
cmp
sahf
mov
cmp
adc
ret
pushw
nop
rcr
and
mov
pop
punpcklbw
or
divl
lods
lds
xchg
sarb
jo
out
pop
mov
mov
xorb
loop
arpl
not
add
scas
arpl
lds
push
pextrw
push
cmpsb
mov
ror
jb
mov
mov
nop
or
test
fildll
fmull
cld
push
jecxz
jmp
int3
pop
fcmovne
aas
imull
repz
cmp
out
jp
test
lds
xchg
jmp
xchg
and
jbe
mov
cmp
inc
add
mov
int
cld
cmpb
mov
cmp
xlat
dec
and
cmp
adc
clc
in
mov
test
and
aaa
ja
divb
sub
gs
sbb
push
arpl
test
dec
xor
and
out
cmpsl
mov
stos
repnz
xlat
push
mov
xchg
add
jle
dec
pop
stc
mov
js
sbb
xchg
sub
or
cmp
lock
sbb
ret
andw
or
push
mov
xchg
push
pop
or
repz
dec
mov
xlat
pop
idivl
pop
pushl
std
push
sbb
push
inc
rcrl
movsl
add
nop
movsl
fucomi
lret
repnz
push
push
or
sbb
xchg
xchg
popa
jbe
sbb
cmp
cmp
test
xchg
mov
or
inc
xor
adc
push
adc
cmp
scas
fs
jae
push
mov
cmp
enter
pushf
call
mov
sahf
or
call
lret
enter
fisubl
adc
dec
mov
adc
cmc
dec
test
add
mulb
pop
jb
imul
imul
stc
idiv
pushf
mov
sub
lods
mov
pop
test
imul
sbbb
cmp
aaa
dec
add
fcmovbe
mov
lods
ret
outsb
pop
fidivl
and
adc
cld
mov
cs
cmp
pushf
ds
cmp
test
adc
into
aaa
jmp
out
stc
jg
loopne
sbb
mov
xchg
movsb
pop
mov
inc
loope
mov
mov
add
dec
lds
sti
push
sbb
movl
sbb
scas
or
lcall
out
xor
push
arpl
pop
mov
sahf
sbb
fidivl
in
dec
push
fstps
pop
icebp
dec
ret
dec
and
das
outsl
testl
in
adc
jns
add
or
adc
stos
sbb
sub
xor
pusha
mov
adc
aad
inc
fs
mov
sub
xchg
mov
lods
or
pop
sbb
add
icebp
test
and
mov
lods
jmp
mov
inc
jno
xchg
sahf
imul
jns
inc
and
push
out
inc
mov
mov
push
add
inc
mov
outsb
pop
push
in
fs
adc
sub
or
push
loopne
out
mov
and
jge
ret
cwtl
je
inc
rolb
lahf
dec
stos
jbe
mov
scas
sub
neg
lcall
mov
into
add
das
dec
rcl
lret
mov
mov
clc
into
cwtl
je
arpl
scas
and
cmpb
test
or
filds
jo
subb
jne
aam
lahf
xor
and
or
not
pop
dec
push
lods
jns
out
cmp
arpl
fwait
and
leave
std
xchg
dec
pop
sarl
jnp
out
dec
xor
repz
data16
jp
jbe
sbb
mov
fsubrp
cmp
out
dec
fsubrs
and
loopne
push
rcrl
pushf
inc
mov
mov
and
push
xchg
shll
mov
or
out
rcl
jbe
nop
jo
lods
mov
xor
jmp
je
pushf
cmp
sti
out
or
pop
jno
fistpll
out
lock
xchg
sbb
out
adcl
sbb
lret
test
cmp
push
xchg
jns
cmp
and
xchg
fisubrs
cmp
jne
ret
or
sbb
mov
inc
xor
dec
popf
cmpl
andb
mov
int
mov
sahf
mov
roll
inc
xor
jnp
cwtl
je
fistpll
stos
sub
sbb
test
and
xchg
xlat
push
mov
fidivs
sub
ja
jbe
sarl
aaa
divl
into
add
outsb
mov
cmp
mov
in
mov
mov
dec
rolb
push
sbb
mov
inc
test
jmp
daa
sub
popaw
sub
mov
add
outsb
aam
xlat
pop
dec
int3
js
addl
inc
mov
fwait
xchg
jmp
jge
mov
jns
push
jo
mov
push
dec
adc
stos
lret
sahf
movsl
loopne
lret
mov
dec
sbb
pop
mov
ss
das
jg
and
jge
xrelease
lea
dec
aaa
mov
dec
xchg
mov
jne
es
aam
fldenv
xor
jmp
dec
dec
jo
inc
pop
stc
pop
pop
xor
loope
jae
lods
std
sub
dec
xchg
dec
sbb
dec
add
sub
int
ljmp
or
sbb
mov
dec
faddl
mov
jl
or
push
fcompl
cmp
clc
xor
das
adc
dec
push
fdivrs
mov
mov
or
ss
pop
and
cmc
or
hlt
push
sub
clc
inc
aad
mov
jo
pusha
ficoml
pop
arpl
enter
loopnew
push
notb
rolb
nop
sub
call
inc
push
lret
add
loopne
add
jbe
pop
jmp
jb
pop
mov
std
add
add
xchg
lea
pop
aas
sbb
vaddsubps
leave
or
jo
lea
xchg
aad
mov
xchg
sti
test
ret
mov
ret
cli
push
ljmp
or
movsw
xchg
push
in
jnp
mov
xchg
push
lds
scas
sub
int3
enter
jge
push
lcall
arpl
add
push
add
sbb
repz
jae
jnp
mov
sub
scas
or
fmull
stc
push
out
es
fcmovbe
lea
insl
scas
sti
es
fnclex
sub
inc
pop
dec
xor
cmc
adc
pop
fisubs
fdivl
mov
das
mov
xchg
scas
aas
inc
enter
ss
jne
and
jne
ret
nop
jl
out
cmc
mov
sahf
push
sbb
daa
mov
dec
nop
mov
mov
sbb
lcall
push
and
add
mov
push
jge
adc
mov
mov
lea
or
cmp
out
in
jnp
iret
enter
xchg
jp
popa
std
rorb
dec
pop
dec
fisttps
in
mov
gs
out
das
inc
lahf
mov
cmp
add
mov
xchg
xchg
int
bound
push
push
fmuls
test
inc
dec
jle
mov
in
ja
fwait
add
in
and
pop
sahf
jg
mov
adc
dec
roll
shll
dec
sahf
leave
sbb
insb
push
std
xchg
mov
xor
mov
cmpsb
xchg
adc
dec
fadds
pop
divb
int3
mov
iret
pop
lea
mov
mov
mov
add
hlt
lds
mov
in
loop
or
jbe
fs
fldpi
xor
mov
mov
in
dec
xlat
xchg
adc
dec
inc
int3
mov
push
divb
in
and
dec
push
int
xlat
dec
inc
notb
cmp
pop
pop
inc
in
mov
sub
adc
ret
aaa
dec
sbb
pusha
mov
sub
ds
nopl
fsubrs
pop
push
fsubs
jns
loop
sbb
jno
lods
and
xchg
xlat
mov
test
inc
pop
push
cmpsl
shlb
inc
xor
scas
xlat
xchg
or
xchg
in
adc
mov
into
out
sbb
in
mov
inc
outsl
adc
out
and
xlat
ljmp
jne
js
sbb
add
mov
sbb
mov
arpl
pop
mov
mov
or
pop
mov
cmp
ror
shll
lcall
lcall
and
out
push
and
pusha
xlat
rclb
inc
dec
inc
sub
popf
out
lea
les
sti
sbb
jb
imul
mov
mov
pop
pusha
dec
dec
mov
faddl
dec
shlb
inc
ret
jle
insb
pop
mov
push
mov
not
xor
sub
xor
decb
xchg
gs
push
xchg
cmpsl
ljmp
or
xchg
insb
jl
or
js
push
inc
lcall
insb
push
aam
call
inc
cmp
or
stos
push
cltd
adc
jne
rcl
pop
and
addr16
sub
xchg
lds
movsb
shll
sti
in
incl
outsb
add
xor
mov
push
cmp
addb
cmpsl
push
push
sahf
fidivrs
inc
cmpsb
movb
into
iret
jge
mov
mov
xor
daa
shrd
lds
push
stc
mov
xchg
cmpsb
ffree
inc
sub
sub
and
xchg
lods
aas
je
aad
lret
pushf
mov
lock
imul
lcall
xchg
xor
std
jae
mov
ljmp
push
repnz
jp
sub
in
jbe
js
sahf
pop
pop
out
outsb
rorb
iret
mov
repz
int3
in
sarl
nop
cmc
jg
sub
ret
subb
hlt
inc
dec
xor
ss
mulb
sbb
aaa
sbb
stos
scas
ret
sahf
imul
fimuls
sub
orl
mov
cmp
mov
mov
scas
adc
popf
les
xchg
repnz
sbb
sti
es
stos
or
push
scas
repz
mov
xchg
ds
imul
out
mov
sbb
xchg
cmp
inc
xchg
imul
sbb
lods
mov
mov
jmp
ret
in
sbb
test
pop
lea
iret
stos
into
stos
js
pop
pusha
add
pushf
arpl
pusha
push
and
jbe
sbb
sbb
cltd
sub
or
xor
cli
cmpsb
dec
hlt
dec
imul
jge
shlb
adc
push
push
jp
arpl
or
stc
aaa
sub
push
sahf
push
dec
insb
mov
pop
xor
inc
cmp
leave
hlt
jo
xchg
xchg
mov
lcall
inc
sub
add
lods
stos
xchg
pop
lock
pop
jnp
and
out
in
movsl
and
pusha
sahf
psubw
xorb
xchg
lea
jne
xor
jecxz
cmp
lahf
out
fsubrl
pop
dec
stos
addr16
lock
ja
inc
mov
loop
lock
fidivrs
jmp
sub
fcmovb
sub
mov
mov
xor
add
cmp
sub
xchg
mov
popa
inc
mov
jbe
lds
cmp
or
bound
adc
in
nop
add
jns
push
or
cwtl
adc
pop
mov
aaa
movsb
adc
call
sbb
sbb
mov
xchg
sahf
cmp
and
pushf
sbb
mov
pop
sbb
dec
dec
fs
dec
arpl
daa
in
mov
xlat
jo
movsb
and
sub
mov
rcr
mov
cli
mov
mov
xor
jl
cmp
dec
jmp
push
insl
sub
or
stos
xchg
inc
cwtl
push
movsl
arpl
pusha
sub
mov
inc
repnz
cmpsb
xor
add
aaa
out
mov
sbb
leave
mov
aas
sbb
xchg
arpl
jns
pusha
dec
sbb
sbb
fldenv
sahf
mov
hlt
add
movsb
test
in
aas
cmc
cmp
pop
insl
inc
xchg
and
jge
pushl
test
out
sub
push
lods
cmc
jae
lahf
lret
mov
scas
cmpl
rcll
in
push
imul
jmp
cmpsb
cltd
jnp
lea
add
daa
clc
mov
or
mov
ja
pop
jl
fwait
bound
mov
arpl
xchg
js
iret
ljmp
ss
pop
xor
lcall
lret
and
out
mov
scas
test
push
in
adc
jns
push
push
adc
aad
cmp
mov
adc
daa
mov
mov
lds
rol
mov
mov
sbb
jge
movsb
mov
mov
mov
xor
inc
iret
fs
mov
pushf
movsl
fiaddl
lret
lea
fsub
xor
add
fistps
or
sub
add
mov
cwtl
leave
adc
or
ljmp
std
hlt
aam
into
adc
cmpsl
icebp
sub
data16
pop
sub
inc
icebp
push
js
mov
pop
inc
rolb
sbb
mov
icebp
fnstcw
mov
mov
outsb
in
pop
mov
mov
fcoms
mov
insl
enter
ja
jl
gs
push
popf
pusha
pop
fdivrl
inc
xchg
inc
fnstcw
adc
push
adc
fldcw
test
aam
shlb
cmp
push
test
mov
andl
pushl
xchg
lods
cmpsl
jae
xor
iret
test
and
jecxz
jbe
pop
ja
pop
pop
add
imul
mov
call
inc
sbb
fcmovb
mov
dec
pop
mov
sub
pop
insl
leave
pop
aaa
pushf
shrl
test
jb
adc
add
in
sti
icebp
dec
cmp
or
adc
lds
cmpsb
xchg
lock
xchg
dec
mov
xchg
jne
cmpb
outsl
fcmovnu
mov
or
adc
cwtl
cltd
insb
rorl
or
mov
das
scas
and
mov
in
xchg
dec
and
xor
cs
xor
pop
aam
loop
jno
push
xchg
add
out
mov
out
inc
pusha
fdivrl
pushf
xor
push
lds
call
mov
out
pop
cli
sub
mov
adc
pop
mov
add
mov
aad
ds
sbb
out
adc
mov
add
sahf
add
push
cmp
stc
ret
push
lods
pop
pop
pop
add
loopne
clc
dec
dec
arpl
das
pop
fists
repnz
xor
dec
lds
xchg
lcall
mov
push
push
in
sub
loope
push
jmp
push
pop
xor
jbe
add
xor
or
push
and
mov
xor
lahf
scas
mov
lahf
inc
mov
rcr
pop
xor
xchg
xlat
dec
fdiv
fisubrl
and
xchg
ss
test
jae
lcall
mov
fwait
sbb
addr16
insb
xchg
fs
sbb
dec
pusha
pop
into
adc
shll
in
and
orl
out
pop
idivl
pop
sbb
push
lods
mov
popf
inc
out
out
push
scas
xchg
mov
lock
ret
mov
mov
sarb
in
inc
sti
push
out
pop
add
fildl
inc
adc
int3
mov
pop
out
in
lahf
xchg
sbb
pop
call
ret
loope
icebp
pop
int3
js
test
iret
sbb
cmc
rcrl
xlat
xor
in
das
sbb
out
lret
pop
sti
adc
inc
aas
cld
lea
rorl
pop
bts
inc
add
push
in
mov
push
push
imul
daa
fs
adc
mov
inc
inc
sbb
add
les
fistpl
sub
cwtl
push
mov
loope
loopne
mov
jge
pop
das
add
mov
roll
mov
pop
shrl
out
and
nop
outsl
loope
inc
sbb
and
adcb
or
sbb
add
cli
addr16
jno
sbb
addr16
sbb
push
shrd
fldl
sbb
out
ss
popa
and
sahf
inc
pop
cmp
mov
fidivl
gs
pop
dec
adc
int3
je
lock
adc
gs
insb
push
mov
movsb
cmp
loopne
out
and
mov
xchg
or
xchg
movsl
mov
hlt
test
aaa
xchg
push
rorb
lods
pop
es
mov
mov
test
ret
in
imul
pop
dec
fisubrs
sbb
xchg
mov
xchg
cmpsb
lahf
in
or
inc
push
loope
jle
or
mov
adc
mov
outsl
adc
mov
add
shrb
in
gs
mov
push
mov
mull
ud1
sbb
push
or
sti
jmp
shrl
shl
jmpw
nop
mov
push
pop
sbb
stos
mov
and
or
and
loop
and
dec
push
push
lret
xor
xchg
pop
add
jp
cwtl
movsb
mov
pop
sbb
pop
bnd
or
stos
scas
sbb
or
jle
jg
and
movsl
bound
add
jae
or
sub
pop
mov
push
cmp
pop
xor
pop
pop
nop
icebp
xchg
push
lock
gs
es
inc
iret
and
iret
push
rolb
mov
mov
inc
mov
test
dec
add
inc
dec
daa
fiadds
je
mull
popf
mov
sub
int3
loopne
and
push
ret
jecxz
cmp
pusha
in
in
cmp
mov
jge
jne
inc
xchg
out
and
sahf
iret
fsubl
jb
out
or
out
std
mov
scas
sub
roll
icebp
outsl
fdiv
adc
mov
jb
push
inc
cwtl
adc
mov
ret
xor
loop
push
stc
jmp
cmp
and
gs
or
nop
xor
and
inc
loope
les
mull
icebp
pop
mov
fwait
xor
pop
loope
sti
scas
rcll
sarl
xchg
dec
pop
cmpl
and
jp
mov
push
sbb
pop
or
mov
dec
lds
mov
and
popa
mov
or
xchg
lret
mov
icebp
sti
xor
jmp
mov
daa
inc
dec
aaa
je
imul
add
in
dec
lret
andl
mov
pop
in
xchg
inc
std
and
stos
and
mov
fwait
mov
sub
hlt
xchg
insb
add
data16
xchg
insl
cmp
aam
or
inc
jl
insl
pop
dec
xor
lds
add
mov
and
inc
xchg
insb
jbe
dec
mov
out
nop
ljmp
addr16
ss
dec
int
sbb
cmpl
xchg
out
movsl
cli
out
cmc
sbb
or
fwait
mov
pop
push
lahf
jl
pop
ja
cmp
addl
cltd
inc
add
enter
push
inc
push
cmpsl
adc
cltd
xor
insb
fidivs
sub
add
movsb
in
ss
sub
test
fstp
push
popf
xchg
test
add
mov
sbb
test
add
push
push
or
iret
in
shlb
jno
jne
jns
sub
mov
out
hlt
cs
sahf
push
jne
pop
repz
lret
lods
push
xor
cmp
test
sub
mov
test
out
mov
inc
cmc
aaa
push
mov
icebp
jns
mov
dec
repz
sbb
sub
lret
movsb
jmp
int
icebp
xchg
out
xor
cld
pop
frstor
sti
test
pop
dec
mov
xchg
int
mov
adc
outsb
push
push
adc
or
xor
dec
pop
pop
xor
call
out
or
jae
adc
insb
cmpsb
push
lock
pushf
mov
mov
out
daa
int
or
and
push
int
mov
sub
idivb
mov
aad
add
xor
mov
sub
pop
int3
push
mov
cld
sti
pop
xchg
sbb
les
dec
cs
cmp
lret
adc
rcl
adc
cmp
push
and
xchg
sbb
roll
iret
mov
jbe
fldt
dec
sbb
dec
mov
adc
pop
cmp
out
or
dec
dec
pop
fsubrl
scas
pop
xchg
es
and
cltd
and
push
lods
fs
addl
shll
cmp
inc
adc
mov
push
xor
or
repnz
dec
int
test
pop
mov
stos
jnp
test
movsb
mov
push
dec
pushf
jl
dec
out
and
iret
jle
jno
cltd
std
push
mov
fimull
or
dec
stc
push
test
dec
mov
xor
mov
int3
pop
xor
fistpll
or
repz
loopne
pop
shl
aam
pop
insl
lcall
or
std
mov
sarl
mov
mov
xlat
jp
popf
and
jne
inc
pop
mov
scas
xor
scas
sbb
sbb
sbb
lods
mov
xor
cmp
add
cli
pop
pop
adc
les
pop
dec
push
out
or
stos
clc
mov
shlb
xor
pop
mov
mov
gs
jne
loop
std
jno
es
and
out
rol
jno
mov
lahf
cmpsl
fldcw
add
and
cmp
cmpsl
ret
mov
cwtl
adc
push
ds
dec
push
arpl
jmp
push
dec
mov
mov
mov
add
lock
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
jae
or
push
jl
pop
pop
jl
das
mov
fstps
pop
pop
push
adc
ja
push
sub
inc
movsb
scas
sbb
sbb
dec
divl
fistpll
mov
ljmp
jb
call
xchg
int
pop
inc
sbb
ret
je
adc
mov
inc
movsb
fistl
mov
mov
bound
mov
popf
add
pop
adc
mov
sbb
popf
push
dec
inc
cmp
int3
insl
outsl
ds
cmp
dec
cmp
into
jl
mov
pop
int3
cmp
sub
push
addr16
add
call
and
lock
in
fwait
in
fadd
lods
es
sbb
std
outsl
inc
xchg
test
or
jne
inc
aas
inc
dec
sbb
inc
dec
sti
inc
inc
fs
mov
push
outsb
cmp
sub
int
jae
sbb
dec
pop
push
mov
fsubs
cmp
sbb
lds
pusha
jb
into
es
push
test
pop
jg
mov
fcmovnbe
out
pop
imul
cmpsl
dec
lret
jg
cmpsb
or
icebp
popa
push
daa
repnz
cli
sbb
sti
adc
inc
cmpsl
inc
stos
pop
jge
mov
dec
dec
fisttpl
imul
gs
aaa
in
outsb
push
mov
adc
mov
es
xlat
enter
inc
fisttps
xchg
inc
sub
stc
into
lock
std
sub
in
sub
fldl
out
xor
xor
dec
pop
dec
mov
les
xchg
aam
hlt
out
adc
push
ss
out
bound
sbb
push
push
xlat
adc
mov
mov
mov
inc
adc
test
inc
inc
loopne
pop
xor
ja
data16
add
cmp
cltd
and
lcall
jl
adc
daa
inc
jno
adc
xor
and
mov
push
mov
xchg
xor
cmpsl
jb
mov
lods
inc
pop
mov
jb
int
sub
int3
add
xor
xchg
getsec
inc
pop
dec
dec
mov
sub
mov
inc
ret
jg
out
shrd
add
aad
fiadds
mov
sti
sar
push
nop
inc
shl
xchg
inc
out
mov
sub
imul
mov
loopne
lods
sub
cmp
xlat
dec
inc
pop
sub
mov
sub
insl
pop
sub
mov
cmp
sbb
inc
or
mov
dec
lods
adc
sub
lods
sbb
orl
or
or
ret
mov
in
leave
pop
add
mov
shll
frstor
movsb
or
cli
pop
adc
int3
arpl
sahf
das
out
cmp
mov
stos
loope
jae
push
iret
adc
push
push
pop
xchg
hlt
cmpsb
adc
dec
sbb
push
aas
pushf
mov
adc
nop
insl
mov
fsubrl
out
inc
xor
or
mov
lret
out
sarb
addr16
shlb
out
adc
sbb
mov
mov
pop
out
shrb
mov
flds
je
insl
fsts
cmp
std
cli
dec
lahf
pop
dec
aam
pop
and
pushf
out
stc
fidivl
inc
in
jno
push
pushf
jp
add
rcl
mov
cltd
pop
mov
cld
ljmp
sbb
int3
sbbl
aad
dec
adc
inc
mov
les
add
inc
jl
sti
lret
sub
sahf
loope
jnp
cmpsl
add
aas
pusha
out
lahf
sarl
scas
xor
pop
mov
leave
dec
fcompl
mov
loopne
adc
add
inc
dec
cmp
dec
lret
add
fisubrl
cmpl
push
add
stos
cmp
mov
enter
add
dec
and
mov
sbb
xorl
push
popa
mov
fstpl
sub
ret
insb
cltd
mov
cmp
sub
fstps
pop
dec
mov
sbb
mov
mov
or
sahf
test
fidivl
aam
enter
inc
hlt
push
testb
and
lods
in
in
cmc
xchg
int
adc
jg
out
jae
cmova
xor
jp
stc
int3
arpl
jb
repnz
add
xchg
cmp
mov
cmc
call
mov
ss
add
es
fld
jmp
aad
push
mov
pusha
mov
mov
and
adc
jae
jo
lret
and
dec
decb
clc
and
and
dec
jmp
sub
xchg
push
inc
fbld
leave
pop
lock
sbb
inc
jmp
mov
jbe
inc
lds
xchg
jb
out
mov
sbb
stc
movsb
push
fistpl
jns
cmp
rorb
mov
int3
push
imul
call
xchg
in
push
jbe
aaa
arpl
lods
jp
stos
in
sbb
xchg
sub
mov
pop
pop
xchg
test
cmp
pop
cld
xchg
dec
adc
aaa
sarb
and
aaa
mov
or
test
mov
mov
ret
mov
ds
jl
sbb
aas
cmp
pop
addr16
sbb
sti
pop
int3
cld
mov
shrb
xor
mov
mov
into
loopnew
fistps
sbb
data16
test
add
addr16
sbb
iret
aas
and
imul
sub
jnp
clc
repnz
pop
adc
adc
dec
in
lds
fnsave
xor
rcrb
mov
or
mov
outsl
inc
loopne
mov
jae
push
cmp
mov
dec
xchg
testl
sub
repnz
and
xor
cmpsb
testb
decb
sbbl
push
pop
xchg
inc
daa
mov
xor
ret
xchg
pop
fdivrl
nop
mov
mov
std
rol
int
out
out
pop
iret
mov
push
jecxz
mov
fucomip
fiaddl
lock
xor
xor
inc
je
movsb
scas
push
add
adcb
cltd
mov
cs
hlt
les
neg
push
data16
sbb
cmp
sub
out
add
in
sarb
in
xor
aas
jle
loopne
imul
scas
xor
test
mov
pop
cmp
sbb
pop
push
sbb
xor
packssdw
sub
in
mov
fwait
or
insb
jae
add
test
sub
add
mov
xor
xchg
mov
scas
mov
push
xchg
push
push
pop
xor
mov
pop
fwait
out
popa
push
and
xor
sbb
outsl
sub
mov
mov
inc
scas
mov
push
cmp
ret
xchg
arpl
cmpsl
push
enter
test
push
gs
fimull
push
stc
add
mov
int3
mov
add
sti
aad
data16
sbb
and
xchg
mov
mov
in
aas
jmp
es
scas
inc
add
mov
lods
mov
les
adc
sbb
adc
movsb
test
addb
lret
jg
pop
jne
jle
bound
in
sub
je
movsl
lahf
mov
cmpsl
or
adc
xorb
out
xchg
pushf
lahf
pop
xchg
test
sbb
mov
stos
mov
xchg
inc
xchg
in
repz
pop
sti
daa
loope
shlb
xchg
dec
xchg
push
mov
xor
pop
mov
icebp
xor
jno
pop
inc
jge
add
xor
cwtl
les
and
insl
push
jge
jae
add
ret
pop
dec
adc
jg
pushf
in
and
xchg
ljmp
ds
pop
xlat
mov
mov
jecxz
mov
shr
xchg
aaa
mov
mov
test
fdiv
jl
jl
mov
pop
add
push
int3
mov
imul
pushf
jae
ss
insb
pop
sub
into
mov
ret
les
push
jnp
xor
push
add
idiv
or
add
xchg
fcomip
outsl
sub
cmp
dec
out
daa
mov
fbld
pop
mov
arpl
sbb
loopne
xchg
gs
push
cmp
or
pop
in
test
out
mov
daa
into
lcall
pop
js
cs
fwait
ret
repnz
fwait
scas
xchg
xchg
mov
shll
iret
into
lods
ja
cmp
sbbb
cmp
cltd
sbb
sti
fisttps
incl
fistps
mov
sbb
jbe
pop
xor
js
lea
stos
add
pop
cmp
in
ss
inc
rcrb
xlat
inc
int3
dec
push
shll
sub
fs
cmp
fisttpll
divb
ljmp
insb
inc
cmc
inc
sbb
adcl
in
inc
sbb
dec
fnstenv
in
lods
popa
push
push
pop
jl
push
repnz
xchg
rorl
sub
cmp
adc
mov
insb
es
ret
add
push
jge
add
mov
jl
cld
push
cmp
inc
lods
and
out
dec
call
cltd
xchg
ficomps
jecxz
xchg
jnp
sub
jo
popf
adcl
test
or
andb
in
inc
mov
mov
lcall
cs
hlt
push
inc
cmp
daa
mov
das
xchg
jae
xchg
xchg
xchg
fidivs
mov
pop
fldpi
das
jns
pushf
popf
sub
shr
jmp
test
sub
cmp
bound
jmp
cwtl
fucomip
es
and
out
fsubrp
pusha
sbb
mov
outsl
inc
mov
out
popa
sub
sbb
sbb
in
mov
movsl
inc
fimuls
cld
in
scas
call
cmpsb
insb
cmp
push
aaa
or
sbb
aaa
imul
fildl
stos
test
fs
adc
mov
stos
mov
imul
adc
jp
cmp
pop
data16
lods
clc
dec
dec
or
xchg
sub
movsl
insb
js
mov
and
insl
clc
int3
cltd
mov
mov
or
popf
mov
jle
dec
dec
jnp
pop
xor
mov
or
push
xchg
ljmp
xchg
cmp
addb
sub
je
ret
xchg
inc
repz
test
out
sbb
outsb
test
in
sub
mov
call
xchg
pusha
xchg
pop
inc
and
movsb
mov
pop
xor
mov
cld
sbb
inc
jecxz
jne
es
aam
and
push
das
sub
xor
sbb
dec
js
into
rcll
pushf
inc
psubusb
iret
xchg
xchg
xchg
or
subl
jb
xor
in
and
xor
push
divl
inc
mov
inc
frstor
push
in
das
orb
xchg
daa
xchg
popf
mov
inc
add
jns
cmp
rorl
push
or
mov
sti
ja
jno
add
fisubl
xchg
pop
adc
cmpsl
popf
xor
roll
insb
popf
ljmp
xor
fcmovnbe
push
xchg
mov
test
insl
divl
push
test
push
jne
pop
mov
rcll
pop
adcl
xchg
cmp
pop
xchg
out
xchg
sub
and
mov
push
fwait
js
iret
movsl
and
ffree
pop
shrl
std
lock
shlb
xlat
dec
mov
test
add
cmp
and
jle
add
fisttps
jo
jp
adc
dec
sbb
sti
pop
andl
dec
sub
jo
fwait
pop
imul
cmp
xlat
jae
lret
mov
add
jge
jl
pop
xchg
scas
jecxz
cld
mov
pop
iret
int
jle
pop
test
inc
mov
jns
imul
fistpl
push
push
xor
cmc
js
mov
push
mov
mov
or
cmpsb
incl
stos
sbb
aad
push
lea
xor
in
stos
mov
popf
addb
sub
jne
ss
jl
pop
cmp
cmp
dec
mov
xchg
jb
and
dec
insl
sub
inc
or
gs
nop
cmp
mov
push
shll
xchg
sbb
cli
pushf
sbb
aad
dec
cwtl
imul
pop
js
push
push
add
shrl
cmp
mov
adc
jae
mov
push
hlt
roll
fadds
and
nop
out
nop
push
jns
fmuls
loopne
fs
jp
mov
inc
ret
fistpll
add
outsb
jge
leave
imul
test
mov
add
cmc
add
mov
outsl
lret
xchg
cs
ja
add
scas
clc
mov
test
jnp
clc
fisttpl
pusha
sbb
add
sbb
popf
dec
fldcw
icebp
sbb
lods
sbb
or
rcl
adc
test
dec
aaa
add
test
loop
push
mov
les
and
iret
scas
dec
cmp
mov
in
int
out
fs
ret
or
sub
into
lcall
ss
add
rolb
or
lea
inc
out
and
daa
mov
and
lds
adc
pop
dec
mov
daa
xchg
lds
dec
cltd
sub
js
sub
jl
mov
mov
sub
sbb
xchg
sub
rcll
jno
insb
xor
add
movsl
dec
icebp
je
cwtl
loopne
bound
das
in
inc
outsl
jl
cmc
cmp
testb
test
shr
out
xchg
loop
dec
adc
cli
outsl
push
mov
hlt
and
mov
test
stos
lcall
roll
lds
addr16
xchg
lret
push
mov
arpl
jno
ret
pop
lahf
mov
cmpsl
jno,pt
mov
out
das
into
lds
dec
fsubrs
xor
push
call
adc
adc
in
mov
lret
loope
mov
jnp
sahf
shl
cmp
jnp
xor
rolb
push
popa
decl
inc
call
xchg
jne
in
cli
loop
push
fs
cmp
in
and
aad
movsl
loope
add
imul
prefetchwt1
lea
call
push
leave
lret
xor
enter
pop
jb
pop
lods
jle
push
pop
jnp
mov
sbb
mov
pop
and
scas
mov
leave
scas
jb
hlt
sbbb
stos
sbb
test
ret
xor
call
sbb
xchg
data16
in
and
push
xchg
inc
mov
inc
push
mov
cmp
into
popl
mov
movsl
pop
stc
shl
movsb
push
jnp
mov
cmp
test
jne
pop
xor
and
dec
lock
xchg
dec
cmc
mov
xchg
inc
mov
add
jmp
jne
lods
insl
inc
xchg
frstor
ds
lds
cs
clc
in
popa
std
in
int3
fs
pop
sbb
rol
test
sbb
repz
sub
jns
test
or
js
xor
sub
mov
scas
aas
push
int
clc
mov
das
lock
cltd
and
shlb
jmp
jle
in
pop
roll
sbb
lahf
xchg
dec
xchg
inc
pop
movsl
push
es
out
mov
mov
call
mov
shrb
jecxz
mov
orl
imull
rol
gs
andb
add
xchg
shrl
aaa
repnz
cmp
out
insl
xchg
nop
sbb
adc
pop
dec
add
xlat
faddp
movsb
loope
inc
sbb
push
push
sbb
mov
rorb
stos
stos
in
iret
xchg
loop
push
in
cltd
jp
stos
adc
ficompl
xchg
xor
fnstsw
out
push
imul
shlb
mov
adc
aaa
test
pop
fcmovnbe
pop
mov
mov
lcall
int
cmpsb
into
out
jns
mov
into
test
xor
fimuls
stos
or
aaa
rorl
pop
daa
test
dec
adc
sub
sub
pop
cmp
xchg
adc
repnz
sbb
addr16
sub
dec
iret
hlt
sarb
in
mov
xchg
mov
mov
mov
xchg
pop
outsb
sbb
sti
mov
xchg
dec
and
cmc
xchg
adc
ss
sbb
pop
pop
push
fidivrl
xlat
jge
pop
je
out
xor
aad
mov
imul
cmp
xchg
xchg
mov
movsl
jne
out
popf
push
or
jns
test
jb
out
mov
imul
and
ds
sub
pop
sarb
cmpsb
pop
lds
cmp
push
adc
and
outsl
scas
aad
dec
jbe
mov
or
shl
jl
inc
push
mov
xchg
out
outsl
repz
cmpsb
andb
jg
mov
fucomp
and
ret
add
mov
mov
jl
sbb
testl
sbb
jl
pushf
mov
aas
in
jae
cmp
lahf
lea
mov
cltd
cs
into
cmc
jb
lcall
mov
in
int
jmp
pop
test
test
lcall
lods
pushf
jg
js
jae
xchg
sub
lret
xor
mov
int3
sub
jecxz
jge
cs
pop
jns
xchg
sbb
add
or
jnp
cmc
push
push
cli
xchg
sbb
xchg
or
insb
call
testb
dec
pop
mov
cmpsb
jmp
xor
and
enter
test
mov
cwtl
jns
mov
pop
dec
sub
and
stos
lock
sbb
std
insl
cld
aaa
jne
xor
lcall
dec
scas
jb
scas
dec
cmp
loope
inc
out
bound
addr16
fs
addr16
int3
test
lea
in
push
test
out
lcall
jo
jo
mov
sbb
adc
cmp
insl
jecxz
xor
rcrb
mov
add
push
cmc
push
int
mov
aas
fxtract
push
imul
sub
xchg
rsm
loopne
js
pop
maxps
push
in
repz
ljmp
adc
add
jle
addr16
popf
icebp
in
sub
cmp
cmpsb
aas
xor
pusha
dec
ror
addr16
jne
inc
int
daa
dec
cmp
push
shl
mov
orl
cmp
fadd
mov
insl
outsb
push
mov
les
add
adc
mov
adc
jp
mov
sbb
je
into
dec
icebp
jbe
mov
or
xchg
xor
xchg
sub
pop
inc
arpl
add
icebp
cmp
fmuls
lea
cwtl
push
and
imul
pushf
call
out
push
lds
lea
inc
cmp
xchg
mov
dec
rclb
and
out
mov
test
dec
jne
loop
stos
dec
nop
pushf
es
repnz
push
inc
and
test
cli
pop
or
int
pop
jb
popa
adc
push
imul
mov
inc
cli
and
je
insb
setg
adcl
out
stos
in
cmpsl
fs
pop
leave
push
adc
popa
test
inc
ret
sub
negb
xchg
jmp
out
pop
inc
cmpsb
pop
test
push
lods
enter
xor
sti
ja
and
mov
imul
aas
test
dec
adc
push
stc
jl
daa
rorl
mov
xchg
push
mov
movsl
clc
daa
inc
mov
inc
ljmp
sbb
cmp
pop
push
xchg
push
lret
push
mov
cmc
xchg
shlb
es
fdivrp
fidivl
mov
xchg
gs
pop
jg
mov
inc
fsubrl
push
push
int
adc
jp
jge
mov
mov
mov
push
jmp
in
js
xchg
test
mov
sti
xor
or
fildll
scas
pop
inc
int3
incl
mov
jns
in
pop
sahf
pop
add
jg
sti
and
das
jae
and
aas
pop
testb
std
repnz
lds
mov
and
mov
int3
jecxz
and
mov
inc
les
fwait
pop
int3
fildll
int
cmc
dec
cmp
pop
mov
arpl
scas
outsl
jmp
fistpl
adc
push
in
into
shll
xor
adc
test
out
jl
xchg
mov
lock
outsb
sbb
addb
outsl
sub
iret
insb
xchg
ja
mov
or
add
loopne
fldpi
ja
mov
cmp
jecxz
out
add
jnp
mov
inc
int3
xor
rcrl
les
bound
scas
rclb
aad
sbb
test
push
insl
add
add
xor
mov
int3
cld
jle
nop
push
dec
shll
sbb
ret
xchg
mov
lock
gs
inc
mov
dec
lahf
loop
out
icebp
mov
repz
jb
mov
lret
cmpsb
stos
or
mov
mov
sbb
push
stc
dec
sahf
adc
pop
sub
mov
loopne
mov
rolb
mov
jno
lret
pop
inc
jge
sbb
mov
mov
in
in
mov
negl
push
push
insb
aad
scas
mov
xchg
inc
cli
push
dec
push
fwait
loope
xchg
inc
mov
fptan
mov
sbbb
fistps
and
imul
mov
je
lahf
test
sbb
out
int3
mov
mov
jbe
lods
das
add
xchg
pop
dec
jl
stc
enterw
lret
je
mov
imul
les
jno
adc
ror
int3
stos
or
mov
or
or
jo
ror
jmp
add
mov
les
andl
shrl
and
mov
pop
fstl
aaa
xchg
stc
in
or
and
sbb
xor
lahf
rcrb
sarb
cmp
fnstenv
jge
xor
mull
loope
scas
mov
fs
dec
dec
adc
push
inc
mov
insb
outsb
fisttpll
out
push
cmc
icebp
adc
lods
sbb
loop
pop
int
aad
pop
enter
pop
mov
xor
jecxz
dec
push
add
scas
lods
sub
jmp
xchg
popaw
inc
and
sbbl
xor
adc
es
insl
mov
int
jno
fsub
or
mov
outsb
faddp
leave
fwait
pop
fadds
dec
mov
jb
or
and
pop
or
push
test
or
add
addb
int3
sbb
int
andb
sub
int3
out
and
xchg
rcrl
mov
mov
mov
shrb
data16
sahf
sahf
dec
insl
sub
sbb
hlt
movb
in
jg
fists
aaa
mov
add
test
imul
push
jne
pop
push
leave
sbbl
es
jns
mov
mov
mov
lock
mov
jge
mov
mov
rclb
mov
adc
insb
cwtl
sarl
mov
fldt
imul
jmp
enter
push
out
lret
adc
push
rolb
push
mov
and
push
mov
int3
hlt
test
fsubs
add
movsb
outsl
add
sbb
or
outsb
in
outsl
int3
mov
les
sbb
adc
les
add
jb
or
fisttpll
or
xchg
inc
dec
call
sbb
loopne
sbb
std
cwtl
mov
sbb
adc
adc
mov
push
lret
iret
inc
mov
add
and
jle
pop
push
and
sub
sbb
mov
cmp
jno
jbe
lock
jne
pop
dec
add
pop
pop
in
bound
nop
pop
repz
pop
rolb
jno
nop
xor
repnz
cwtl
lcall
pop
mov
sub
mov
and
pop
loope
popa
cmp
push
stc
add
mov
repnz
lods
push
stos
mov
aas
push
mov
cmp
and
dec
or
prefetchw
or
dec
inc
out
push
mov
jecxz
add
stos
mov
dec
call
loopne
sub
and
xor
cmp
iret
push
gs
hlt
lock
cltd
xchg
lea
test
mov
mov
sbb
jns
push
jns
mov
mov
add
fsubrs
add
jb
mov
push
xchg
fwait
and
mov
ret
add
adc
adc
sub
popf
cmp
mov
mov
and
cmp
loop
loop
push
mov
lea
insl
cltd
lahf
das
mov
sbb
sbb
jne
pop
inc
out
repnz
push
xchg
mov
mov
aas
sbb
adc
negb
lock
addr16
xchg
add
idiv
mov
stos
add
jecxz
add
push
int
ret
nop
or
scas
xchg
je
xchg
push
push
call
sub
hlt
sbb
jb
and
jno
mov
cs
pop
xchg
sbb
pop
jo
inc
int
dec
and
push
dec
inc
cmp
or
lods
mov
nop
mov
sbb
stc
pop
outsl
loopne
jle
call
add
inc
test
mov
dec
mov
and
clc
popf
jae
ss
cwtl
mov
lret
idivl
pop
jecxz
xor
int
jne
or
xor
lods
pushf
pop
jne
and
outsb
jle
nop
dec
test
cltd
sbb
push
loop
xor
xor
subb
jmp
pop
sub
push
jno
ret
in
std
int
xchg
push
add
push
inc
cmp
add
decl
inc
mov
jl
jmp
mov
sub
add
add
in
pop
inc
sub
int
std
loopne
ja
divps
adc
mov
xchg
cwtl
imul
sbb
and
std
adc
sbb
xor
ljmp
lods
popf
mov
mov
push
push
dec
add
fnstcw
cmp
pop
sbb
dec
fdivs
cmpsb
jns,pn
cmp
jnp
cmp
mov
sub
aad
aaa
inc
sbb
stc
test
lcall
push
ds
xchg
xor
pop
push
aad
lahf
sub
out
inc
fwait
mov
push
leave
lods
mov
xchg
or
dec
scas
mov
sub
and
movl
pushf
lret
scas
in
lds
mov
dec
mov
out
ficomps
cwtl
mov
es
enter
cmp
shll
fiadds
dec
jecxz
pop
or
pop
aam
sbb
repz
mov
mov
push
push
mov
cli
mov
pop
outsl
or
idiv
bswap
cld
push
fs
fnsetpm(287
iret
push
stos
adc
xor
cmp
loop
jmp
cmp
pop
enter
mov
mov
sbb
pop
call
dec
push
mov
sub
and
push
imull
incl
test
lret
push
ja
mov
cs
jle
mov
js
or
or
sbb
push
inc
fisttps
jo
inc
inc
iret
repz
inc
xlat
int3
test
dec
les
mov
mov
dec
add
jg
xor
cmp
ficompl
jbe
jnp
pop
mov
repz
ja
lock
cs
inc
xor
fimuls
out
call
gs
loopne
pop
fwait
out
inc
xchg
pop
push
sub
mov
ret
sbb
mov
pop
pop
cwtl
adc
xchg
scas
popf
cmp
pushf
jp
mov
mov
shlb
mov
clc
xor
mov
loopne
enter
mov
or
cltd
and
clc
dec
cmp
jle
xor
lahf
arpl
push
scas
adc
inc
push
lret
adc
and
push
or
push
jb
pop
aam
das
jno
out
leave
enter
jmp
clc
fistps
pop
mov
ds
mov
push
cli
jle
sub
sub
pushf
popa
adcl
rorl
repnz
bound
push
lret
adc
js
ds
scas
out
push
xlat
mov
dec
shll
mov
hlt
mov
dec
xchg
stc
shr
fwait
sarl
mov
dec
loopne
fwait
inc
aas
jae
mov
jle,pn
lahf
xchg
inc
mov
movsl
add
das
hlt
sbb
inc
mov
in
neg
xchg
sarb
xor
testb
add
mov
cmp
pop
into
jbe
movsb
movsl
out
gs
mov
xchg
filds
cli
sbb
enter
sbb
lcall
sbb
mov
add
lret
jl
testb
mov
pop
sbb
xor
pop
lret
or
pushl
mov
pop
pop
mov
es
jp
nop
scas
xor
mov
adc
add
jnp
ret
fisubrs
inc
and
outsl
into
mov
mov
pop
adc
push
push
sub
mov
out
insb
xchg
sbb
jle
cmp
add
ret
cmp
inc
flds
lret
mov
popf
pushf
cmc
fcompl
dec
outsb
sahf
js
adc
jae
sub
shlb
adc
push
inc
inc
inc
out
cwtl
js
clc
xchg
js
in
push
jno
pop
jl
jg
jae
jno
and
mov
ror
neg
dec
sub
int
dec
or
jle
iret
pop
orb
sub
add
dec
fmull
add
fs
lods
xchg
xlat
enter
mov
mov
sub
jl
dec
xchg
push
push
aas
in
mov
pop
mov
pop
push
mov
lock
dec
xchg
lret
adc
push
loopne
mov
adc
adc
jne
pop
lret
ja
sarl
pusha
pop
jl
dec
mov
push
mov
mov
stos
pop
sub
sbb
arpl
mov
cmc
roll
std
mov
pop
jge
mov
sbbb
jo
push
adc
inc
repz
int3
fildl
or
inc
cmp
enter
sub
ret
inc
jnp
ljmp
test
push
jl
push
leave
loope
mov
fldenvs
add
push
pop
lods
pmaddwd
xchg
es
fdivrs
lret
rorl
ljmp
pop
push
xor
or
out
outsb
testl
lock
adc
icebp
jecxz
cs
iret
cmp
movl
cmp
xor
and
jo
dec
int
rorl
mov
sub
mov
push
push
and
addb
cmp
push
push
out
enter
lds
or
push
jno
inc
or
cmp
aad
lcall
add
pop
leave
jmp
ds
dec
push
out
cmp
mov
add
int
fdivl
lea
inc
ljmp
push
pop
xor
dec
daa
sbb
xchg
aas
xchg
cmp
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
fnsave
pop
jl
notb
cli
in
iret
call
pushf
mov
movsl
std
and
ret
xchg
out
mov
add
iret
sahf
in
jp
das
mov
cmpsb
in
xor
mov
jne
pop
and
imul
mov
adc
fdivl
ljmp
adc
dec
cmp
add
push
and
aaa
fiaddl
lcall
popf
out
lods
xchg
in
jb
int3
cmpl
incl
and
fs
mov
into
adc
or
pop
pop
imul
or
sub
mov
inc
rorb
jno
mov
adc
sub
sti
pop
ret
and
adc
rcrl
xchg
nop
int3
imul
stc
fwait
sub
jno
fiaddl
xor
cli
std
add
mov
jo
dec
cmpsb
ret
sbb
out
jge
pop
mov
adc
ss
das
pop
inc
loop
popf
jecxz
call
ficoml
lcall
mov
and
pop
xor
loop
in
add
xchg
mov
mov
icebp
push
in
rcl
mov
xor
push
jmp
sub
cmc
daa
jo
cmpsl
and
push
fprem1
daa
scas
std
xor
lea
into
xchg
and
or
in
fsubr
imul
mov
ljmp
xchg
ds
mov
in
jnp
jl
stos
jge
mov
mov
das
adc
cmpsb
fldl
mov
pop
dec
inc
xor
aas
or
xchg
cld
iret
imul
imul
sahf
jb
adc
mov
mov
adc
enter
adc
sub
push
jmp
cmpsl
out
or
inc
jno
push
xlat
mov
jg
fstp
jmp
pop
and
sbb
aas
dec
cwtl
test
testb
mov
mov
or
xor
xchg
fs
imull
jecxz
xor
mov
xlat
jbe
cmp
mov
dec
aas
xchg
es
pop
inc
xchg
mov
shlb
mov
sub
imul
xchg
test
cmp
call
and
int3
clc
adc
push
dec
enter
lret
incb
dec
mov
adc
mov
stc
imul
lret
sub
iret
fidivl
loopne
out
jo
cmp
pop
push
pop
iret
imul
mov
ror
push
loope
mov
inc
pop
cmp
call
adc
testb
out
fwait
push
xor
fisubl
and
mov
dec
mov
or
dec
mov
mov
jp
adc
add
arpl
ror
shlb
adc
nop
xlat
popf
inc
or
xor
icebp
lcall
lahf
xchg
add
xchg
test
lods
xor
int
negl
ljmp
push
movsl
bound
jne
in
dec
loopne
in
in
mov
jle
mov
pop
or
inc
fcompl
mov
sub
clc
sbb
pop
fmull
or
pushl
mov
dec
jmp
jbe
mov
mov
inc
ret
stos
lods
mov
shl
fisubrs
out
call
inc
mov
add
push
dec
mov
dec
cmpsb
mov
test
sub
and
cli
sub
lds
mov
repz
xchg
sbb
mov
fildl
adc
sub
cmpsl
leave
shrl
mov
or
insb
push
cmp
repnz
mov
enter
jae
fdivrs
decl
lods
loope
movsb
fiaddl
mov
stos
sub
rcrl
pop
test
scas
cs
lahf
jbe
lds
ds
mov
fisttpl
xchg
or
or
mov
loopne
das
pop
lret
and
pop
shrb
lods
push
mov
cmp
int
pop
movl
ret
fs
push
out
inc
stos
push
sti
dec
in
fnstcw
mov
out
int
ljmp
dec
adc
pop
pop
push
mov
sbb
leave
mov
loope
push
dec
cmc
sub
pusha
xchg
mov
iret
jne
movsb
pusha
xor
jns
xor
pop
lahf
out
repz
or
pop
or
xchg
xchg
add
cltd
jg
nop
into
mov
mov
push
iret
xchg
fs
lea
aad
clc
xchg
sbb
mov
and
fsubr
ja
flds
mov
xchg
push
xchg
mov
jmp
test
call
mov
ret
xor
mov
cmp
cs
scas
or
scas
hlt
icebp
and
test
fcoml
adc
xchg
push
cmc
mov
inc
mov
iret
push
cmp
test
inc
mov
lods
add
add
in
mov
adc
mov
jg
into
or
mov
dec
mov
arpl
push
cmp
dec
ret
mov
and
aaa
push
xchg
ss
ret
sub
cmp
inc
int3
jae
rorb
jb
push
mov
jmp
insb
dec
adcb
div
fsubrl
jo
lea
fcompl
in
in
sub
adc
xor
or
fistpll
and
sub
sbb
mov
insl
xor
call
or
test
loopne
aad
xchg
inc
cmc
sub
scas
jmp
jno
fnstenv
push
fwait
add
jo
sub
jle
mov
arpl
jbe
lds
fisubs
sti
fs
js
inc
or
out
add
mov
push
mov
rorl
pushf
cmp
and
sub
push
jmp
shlb
pop
repnz
test
sbb
xor
fwait
dec
stos
jecxz
push
daa
outsb
jb
inc
dec
and
and
andl
sub
xchg
inc
rol
outsb
jno
lret
ret
xor
sbb
xor
sbb
or
sbb
push
cltd
je
int
jg
lds
mov
mov
popa
inc
push
in
hlt
mov
sub
int3
sbb
aas
cwtl
enter
mov
xchg
push
test
mov
movsw
push
jo
repz
ja
adc
cmp
jo
push
insl
aaa
mov
and
repnz
inc
out
int3
add
jmp
mov
xchg
in
jnp
mov
xlat
push
aam
ja
jns
mov
push
xor
mov
rorl
jbe
mov
seta
xchg
xor
aad
stc
in
pop
sbb
mov
xchg
sub
mov
mov
inc
cmp
jecxz
movsl
mov
push
cs
jno
call
cmp
mov
inc
fidivrs
rep
call
dec
in
into
cltd
sahf
js
xlat
mov
and
popf
mov
push
adc
stos
xchg
pop
dec
inc
aad
clc
dec
in
push
loop
mov
imul
push
xor
push
sub
out
dec
arpl
sbb
cmp
xchg
lock
js
hlt
push
outsl
fucom
sbb
fsubl
imul
jp
push
sub
pop
bound
daa
and
jp
xlat
jmp
push
xlat
sub
lcall
or
pop
lock
dec
mov
jmp
sub
shrb
or
push
rorl
nop
push
stc
inc
add
pop
ss
xchg
xor
cwtl
sbb
jmp
inc
xlat
out
inc
imul
add
fmull
cltd
jmp
xor
cs
adc
loop
test
fs
sbb
cs
loope
cmp
psubusb
les
mov
fisubrl
roll
xchg
insl
in
stos
dec
xchg
leave
ljmp
mov
js
push
pop
aaa
add
dec
jnp
sub
dec
in
jno
gs
sbb
addr16
decl
lret
pop
cmp
inc
lcall
mov
cmp
xor
test
dec
push
addr16
cmpsl
push
mov
out
or
xchg
xor
ljmp
stos
jo
or
ja
xchg
stos
xchg
xchg
cmp
scas
xor
jmp
push
xor
dec
inc
or
mov
call
cmp
data16
pop
enter
and
int3
into
test
and
subps
cmp
xor
push
loop
lods
orb
cmp
and
in
rorl
mov
es
inc
mov
mov
push
aas
mov
inc
shll
mov
data16
sbb
call
xor
mov
mov
adc
test
test
inc
movsl
cs
adc
data16
adcl
push
ret
and
cld
sbb
mov
rep
jb
lock
adc
jge
xorl
ror
jnp
mov
inc
addr16
fadd
nop
clc
xchg
mov
fiadds
or
out
sbb
leave
ret
adc
mov
out
cli
mov
lret
jmp
push
push
pop
cmpsb
pop
push
jb
mov
hlt
out
loop
ja
mov
xchg
inc
lcall
scas
imull
xchg
mov
iret
ret
xrelease
add
sahf
cmp
test
mov
push
mov
push
cmp
xor
addb
sarb
ds
cwtl
mov
pop
or
lock
test
lret
xor
or
mov
jae
jg
ljmp
imul
aam
jb
xchg
mov
or
sbb
pop
andb
cwtl
and
xlat
sti
xor
test
movsb
adc
mov
cmp
ja
dec
xor
int
int3
dec
mov
movsb
pop
add
out
xor
inc
lea
icebp
inc
fcmovbe
jae
push
fdivs
jmp
loopne
ror
jb
pop
mov
adc
cwtl
inc
adc
mov
pop
int
push
scas
adc
jecxz
and
and
lahf
push
lods
in
je
iret
pop
repz
inc
cmp
aad
sbbl
cmpsb
cmp
out
push
lret
jo
and
movsl
andl
xor
call
cltd
pop
sbbb
jno
or
add
nop
add
sub
fcompl
sub
push
dec
in
mov
push
cmp
mov
pushf
loop
push
sbb
gs
inc
cli
cmp
shl
shlb
lds
jno
je
repnz
xchg
jp
dec
or
pop
and
mov
ficomps
push
jbe
mov
sbb
popa
lret
movsl
test
pop
stos
xchg
stos
inc
xchg
jns
inc
xchg
out
fdivl
fadds
xor
mov
cld
scas
jle
jbe
cmp
push
add
xchg
shrb
decl
mov
and
ja
stos
pop
inc
dec
push
loop
jne
push
xchg
or
adc
pop
cmpsb
jge
mov
sahf
push
jno
mov
jb
mov
mov
rcrb
dec
mov
cs
shufps
jb
sub
dec
leave
loop
xor
ss
pop
or
neg
aam
and
and
xor
loop
push
in
adc
cld
aad
cwtl
shr
push
scas
fs
mov
mov
cld
pop
jo
repz
out
push
pop
daa
push
nop
jecxz
or
pop
lahf
pop
jns
xor
push
or
and
aaa
lods
lods
daa
cmpsb
pushf
pusha
aad
and
adc
ljmp
mov
pop
jg
inc
outsb
lcall
or
sub
inc
inc
push
sti
xorb
sbb
mov
mov
leave
sbb
xchg
fwait
in
jmp
jns
fiaddl
fimull
es
fwait
xchg
popa
cmpsb
insl
xor
mov
dec
iret
inc
xchg
inc
push
push
out
xor
xor
or
add
xchg
ds
mov
ret
cmpsl
sub
mov
xchg
cmc
dec
shr
mov
sub
cltd
xchg
scas
add
cmp
aam
dec
and
mov
mov
push
push
notl
movsl
jnp
adc
cwtl
mov
inc
mov
or
xchg
mov
fisubs
addr16
and
pushf
loope
pop
fnstsw
icebp
lahf
push
test
cmp
adc
push
xor
icebp
pusha
dec
js
mov
inc
jne
lods
ljmp
fcompl
shlb
inc
mov
test
lods
nop
and
fdivs
addb
adc
mov
push
loop
xor
sbb
mov
lods
pop
in
pop
dec
mov
xlat
hlt
xchg
jb
mov
cmp
or
and
adc
pushf
mov
test
dec
test
outsl
adc
mov
stos
pop
pusha
ret
xchg
cmpsl
pop
mov
push
xor
xchg
loope
push
ja
loop
test
push
ss
add
das
or
stos
lock
in
cmpsb
lods
inc
jne
and
imul
std
jg
lea
xchg
mov
mov
leave
movsb
cmp
lcall
push
lcall
out
and
mov
mov
jle
cmp
xchg
jae
mov
pop
rcll
jle
pop
jle,pt
mov
int
mov
inc
cs
xchg
sbb
int
in
jp
popf
repnz
push
mov
xchg
xor
xchg
or
jg
in
outsb
div
int
and
in
fadds
xchg
dec
pop
ds
imulb
lock
mov
insb
jb
test
int
push
mov
sub
addr16
and
mul
pusha
sub
cmc
pushf
mov
jge
repz
add
pop
out
out
sub
mov
xchg
xlat
xchg
mov
dec
inc
mov
aad
aaa
mov
and
ret
inc
in
mov
rorb
and
push
aad
call
ficoms
sub
scas
out
sub
test
ficoms
leave
jge
nop
xchg
leave
or
adc
push
push
pusha
jmp
dec
pop
test
mov
add
ja
loopne
push
rclb
fcoml
sub
arpl
pusha
pop
mov
jbe
jne
rolb
mov
add
xlat
jns
mov
cmp
subl
aas
shrl
icebp
dec
inc
mov
movsb
sub
jp
in
lahf
xchg
xlat
sahf
and
mov
lods
push
ret
ror
lods
in
fstps
pop
push
inc
xchg
je
add
sbb
out
scas
insl
dec
and
adc
mov
lcall
mov
inc
adc
jne
imul
leave
pushf
xchg
and
cmc
pop
lock
pop
les
les
fstl
ss
and
arpl
dec
mov
mov
cmp
outsb
sub
sarl
inc
xchg
dec
into
test
mov
lcall
popf
xchg
inc
fisubs
arpl
jo
add
add
aad
jecxz
and
mov
pushf
out
cmpsl
popf
or
dec
xor
in
pushf
mov
je
cmc
push
repz
mov
mov
inc
lods
out
pop
pop
or
je
outsb
das
xor
lock
jbe
mov
test
roll
cmp
dec
xor
jne
push
pop
ror
icebp
mov
test
xchg
dec
nop
sbb
mov
loopne
rorl
icebp
fnstcw
mov
add
scas
sub
mov
shll
adc
xchg
stos
pop
repnz
xchg
aas
push
test
push
push
cmc
push
and
mov
jp
xor
mov
fdivs
int
xchg
sbb
mov
sbb
mov
jp
test
mov
lock
xchg
ljmp
out
cmpsl
dec
test
mov
cmp
jecxz
push
xchg
mov
pop
enter
dec
popa
fucom
int
popa
addr16
mov
mov
cmpsb
and
mulb
mov
add
nop
dec
cwtl
and
pushf
adc
lcall
in
pop
jle
imul
cmp
or
nop
adc
movsl
cltd
mov
jecxz
jae
or
imul
xor
sbbb
sub
pop
mov
leave
add
xor
loop
pop
ret
cmp
push
cmp
frstor
or
inc
ja
out
popa
or
lret
sub
pop
mov
add
xor
mov
movsb
test
inc
push
inc
shll
mov
sub
push
aam
lea
mov
push
fcompl
mov
popa
cmp
repnz
jge
shll
dec
stos
mov
jns
ficompl
pop
lcall
sbb
cmp
and
add
jecxz
into
mov
sbb
xor
adcb
dec
add
xchg
lea
mov
test
lret
push
icebp
test
aad
cld
aam
es
push
xor
repz
sub
dec
mov
jl
cmc
leave
xor
repz
cmp
mov
xor
dec
pop
xchg
es
int3
lods
in
mov
je
jb
mov
or
ret
dec
outsl
adc
jg
cld
cmc
cmpsb
mov
or
outsb
loope
and
mov
mov
jnp
and
daa
cli
cli
or
stc
cmp
jmp
out
xchg
imul
into
cmp
sub
mov
cmp
insb
enter
in
loope
or
pop
cld
ficoms
xor
inc
aas
in
push
rolb
push
loopne
ds
jns
in
dec
popa
inc
xor
xor
dec
pop
jle
fimull
push
inc
mov
clc
mov
add
out
xchg
mov
xchg
push
insb
fsubr
ficomps
xchg
pop
aam
hlt
ds
sbbb
inc
jbe
jmp
out
lcall
call
xor
pop
pop
nop
xchg
mov
mov
push
sbbl
xlat
jle
push
pop
insb
mov
ljmp
jnp
pop
push
repnz
or
iret
push
sbb
enter
cmc
jbe
push
idiv
cmp
adcl
in
add
add
inc
mov
xlat
pop
xchg
int3
mov
push
das
data16
bound
adc
adc
imul
xchg
add
push
jae
and
loopne
mov
cs
imul
popa
imul
xchg
inc
inc
fisttpl
sbb
mov
cli
jg
cld
lods
sbb
mov
sbb
xor
dec
ljmp
mov
mov
je
mov
mov
inc
mov
push
adc
out
jp
add
imull
adc
sub
jno
leave
dec
push
dec
jo
adc
outsb
fwait
sti
loope
flds
ljmp
xchg
mov
jle
in
mov
or
into
cld
mov
push
out
cmp
push
jmp
popf
shrl
or
aad
pop
mov
xchg
fwait
mov
in
add
jmp
mov
out
clc
mov
popf
std
mov
mov
mov
add
jge
dec
add
movsl
or
fadds
lcall
iret
test
push
xchg
adc
mov
jae
dec
mov
mov
pushl
in
mov
lea
cwtl
lahf
sti
cmp
mov
jnp
jl
sub
outsl
dec
divl
mov
cmp
or
cmc
add
inc
out
add
aaa
gs
jne
faddl
cmp
dec
cwtd
cmp
lock
aaa
mov
mov
shlb
dec
jne
ss
sahf
imul
fs
inc
aaa
subb
mov
mov
clc
mov
call
std
inc
in
or
xor
push
in
outsb
repnz
xchg
aaa
mov
or
add
scas
ret
xor
xlat
inc
sbb
jne
imull
push
add
mov
imulb
xchg
mov
add
lea
out
pop
jo
add
dec
aaa
jp
roll
lcall
ja
push
addb
nop
dec
pop
popf
inc
ljmp
adcl
sub
pop
test
ja
push
add
ret
add
mov
or
mov
sbb
mov
stc
push
sti
aas
mov
or
jmp
leave
scas
xlat
push
ljmp
mov
jne
push
xchg
pop
pop
in
mov
shlb
out
sub
jmp
movsl
std
aad
dec
and
sub
popf
out
cmp
push
sub
out
pop
nop
aam
arpl
arpl
adc
aam
data16
mov
xchg
insl
test
cmp
add
roll
pop
adc
mov
int
mov
jne
pop
pushf
push
mov
pop
dec
sub
pop
push
push
decl
adc
sbb
aas
mov
fcomps
gs
cld
push
lea
orb
out
outsb
out
imul
mov
les
shl
leave
cmpsb
mov
in
mov
and
mov
movsb
lea
stc
jp
cmp
push
and
lcall
sahf
and
inc
sahf
popa
shlb
enter
cli
shrb
mov
dec
aam
sbb
jae
ror
out
mov
jno
dec
scas
mov
pop
mov
and
sti
push
aam
push
bound
sbb
xchg
outsl
not
add
add
cltd
mov
push
cltd
pop
xchg
stc
mov
ja
mov
clc
push
add
jle
jle
aam
add
ljmp
and
mov
in
scas
cmc
insb
mov
cwtl
or
inc
pop
mov
cmp
pop
xchg
movsl
int
fstps
jns
lret
pusha
xor
movsb
fisubrs
mov
pop
add
outsb
push
mov
mov
dec
or
repz
mov
outsb
xor
pop
int3
negl
inc
lock
push
fs
jnp
jmp
dec
shlb
call
fcoml
mov
push
xlat
sbb
andb
jmp
fnstenv
dec
mov
roll
std
mov
adc
pop
inc
pop
mov
mov
jne
xor
lea
data16
mov
mov
add
addr16
loope
in
fistps
rcl
scas
mov
daa
loopne
ljmp
fldcw
mov
jge
scas
aaa
mov
scas
ja
pop
nop
cmp
fildll
jle
fistpll
add
push
xchg
and
cmc
or
cmp
call
add
arpl
pop
mov
push
int
mov
cmpl
cmp
mov
rcrb
or
fmuls
ja
mov
jbe
or
inc
insb
jnp
jge
sbb
cmc
or
cwtl
inc
jne
xor
mov
adcb
in
mov
fmull
sub
sub
pop
loop
popf
inc
movsl
in
mov
sub
bound
jno
sub
pop
cmp
adc
or
sbb
outsb
adc
sub
bound
mov
ret
xor
lods
popa
clc
xchg
adc
stos
mov
enter
mov
push
xor
aas
xor
faddp
jle
sub
mov
or
jno
dec
and
std
dec
scas
inc
ja
cmc
jge
shll
mov
in
dec
xor
clc
pop
dec
jo
adc
aam
fsubrs
int
rcll
xor
aam
scas
xor
rol
test
jae
loope
jae
push
ds
mov
movsl
cmp
es
loop
cmc
jg
push
or
mov
lcall
decl
mov
aas
sbb
mov
pop
jno
rcl
arpl
mov
cmp
or
mov
inc
pop
jne
inc
cmp
adc
pop
mov
and
mov
xchg
dec
sbb
pop
pushf
or
fidivs
cmovnp
lea
add
add
mov
out
push
cli
cld
sahf
adcb
and
or
fcmovnu
mov
enter
push
jne
cmp
and
into
push
fdivl
ret
loope
aas
jle
adc
inc
inc
add
icebp
add
nop
testl
dec
insb
cmp
in
push
push
imul
add
cmp
mov
lahf
xlat
sub
pusha
repz
jne
pop
pand
xchg
adc
xchg
xchg
shrb
adc
leave
push
pop
jecxz
or
mov
aam
clc
jns
xchg
push
and
push
mov
cmpsl
mov
and
and
leave
insb
cmc
movsb
jmp
inc
and
fsub
inc
lods
mov
enter
pop
lahf
cmp
push
lret
pusha
fiaddl
cltd
sub
lods
dec
fcoml
loope
hlt
mov
bound
push
push
cwtl
cwtl
pop
cmp
lret
or
inc
mov
mov
test
rclb
inc
aaa
jl
lods
inc
mov
push
push
fs
cmpsl
mul
and
je
fdivrs
and
pop
inc
ret
repz
fnstenv
push
dec
fisubrs
pop
lock
test
loope
sub
arpl
ret
js
mov
xchg
and
stc
call
mov
sub
pop
fst
jl
and
xorl
push
imulb
jno
jecxz
idivb
lahf
out
in
dec
push
sbb
sub
roll
rcll
add
cmp
ja
xchg
ljmp
into
cmpb
cmp
pop
xor
mov
push
and
mov
pop
jne
mov
ffreep
sub
std
das
adc
ficoml
push
shlb
hlt
cs
ljmp
or
fmuls
pop
mov
test
ficompl
fwait
int
out
push
mov
pop
lahf
pop
ljmp
out
push
pushf
push
lahf
jbe
adc
je
sub
ret
xchg
addr16
pop
adc
stc
and
dec
mov
push
jp
outsb
add
adcb
or
sbb
inc
and
push
leave
dec
dec
outsl
int3
pop
add
aad
xchg
dec
lods
daa
mov
lcall
lods
add
psubusw
pusha
aas
inc
inc
push
setns
cmp
jb
outsb
sub
xchg
in
add
fsts
xlat
lcall
out
movsl
add
cwtl
inc
pop
jmp
mov
adc
pop
xor
jp
bnd
adc
cs
pop
loope
aam
gs
jmp
stos
adc
push
lock
inc
inc
mov
add
movsl
inc
ss
int
divl
out
mov
jns
cmpsb
int
pop
pop
sub
pop
mov
or
fisttpl
add
pop
pop
fidivs
call
cmp
out
adc
ss
jb
icebp
mov
adc
jecxz
push
pop
ficoms
nop
scas
mov
repnz
out
xchg
mov
test
lahf
cmp
dec
lods
stos
xor
jnp
sbb
jge
and
push
stos
hlt
and
movsb
ljmp
and
cmp
clc
out
sub
out
fnstenv
cmpsb
cld
push
rolb
es
insl
ja
in
xor
fsubr
jb
pop
pusha
lret
out
daa
popa
dec
add
mov
inc
cmp
pop
scas
decl
call
mov
data16
add
pop
lock
pop
cmp
and
mov
aad
pop
arpl
fistpll
inc
mov
dec
leave
xor
lea
ficomps
push
xchg
or
imul
xchg
mov
xor
fstl
scas
ror
js
outsl
shl
xchg
lcall
out
cmp
int3
imul
mov
mov
mov
sbbl
sub
add
xchg
jb
xor
pop
sbb
je
mov
push
pop
lds
xchg
jae
in
jl
lfs
arpl
add
das
lcall
lcall
es
fimuls
cmp
pop
add
addr16
add
adc
xor
inc
inc
in
xchg
inc
data16
adc
je
jae
cmp
jge
sbbb
push
sbb
popf
cmp
lock
mov
jbe
data16
les
stc
mov
pop
xchg
adc
xchg
dec
in
push
mov
dec
or
push
xor
cmp
fcomip
jnp
pop
loop
jle
sbb
test
adc
xchg
inc
and
sub
cld
jl
pop
cli
sbb
xchg
lods
mov
pop
daa
lea
sub
sub
sub
mov
pop
push
adc
stc
jle
mov
mov
popa
mov
mov
repz
scas
or
imul
fs
movsb
gs
cmpsb
sub
lahf
mov
fsubl
test
cs
and
test
les
test
push
pop
les
add
pop
inc
push
dec
push
or
jae
or
lahf
jg
bound
in
lcall
fsts
adc
in
jae
xor
xchg
ds
lahf
fwait
mov
shlb
lods
and
jns
xor
sbb
pop
setnp
jne
push
nop
add
insb
sub
movsb
lcallw
das
mov
aaa
push
insl
jmp
adc
fcomp
add
popa
jmp
and
in
cmc
imul
test
cmp
add
pop
aaa
cmp
mov
push
test
dec
xor
xchg
rorb
loop
lcall
divb
mov
push
xor
fsubs
adc
movsl
pop
ret
pop
jg
test
sarb
and
sti
out
fs
imull
adc
jbe
mov
push
xchg
sbb
int
cmc
xchg
mov
int3
sti
pop
test
arpl
dec
stos
mov
imull
or
inc
clc
add
pop
sbb
cld
sbb
mov
jae
repz
test
je
decb
addb
daa
push
jge
mov
mov
xor
repz
push
xchg
rep
aam
xor
sbb
into
and
push
decb
xchg
cmpsb
pop
roll
andl
xchg
lret
js
adc
gs
pop
je
lcall
cmp
adc
push
cmp
into
cld
lods
clc
negl
sub
dec
fistpll
jge
mov
ret
ljmp
cmp
sbb
sti
daa
mov
lods
dec
push
mov
mov
sub
dec
out
inc
fnstsw
dec
sarl
fwait
jne
int
push
inc
adc
mov
push
adc
pop
pop
jns
stos
sub
push
jle
not
fisubrs
pop
cs
jp
jo
mov
lahf
std
push
dec
pop
rcr
cltd
bound
sahf
mov
data16
jns
testb
jle
leave
or
mov
cmpsl
xchg
add
call
pop
arpl
cwtl
adc
mov
and
outsb
cmpsb
or
das
inc
test
daa
int
daa
mov
xchg
repz
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
rcll
aad
cmp
xor
jg
mov
xchg
repnz
clc
aaa
idiv
js
and
lahf
and
scas
and
call
jge
pop
aaa
mov
shlb
sub
inc
movlps
sub
sub
jns
fimull
dec
mov
fwait
inc
xchg
pop
mov
or
inc
mov
dec
add
cltd
icebp
xchg
jnp
loope
xchg
mov
dec
jb
push
and
add
xchg
dec
push
mov
push
movsl
rdtsc
aad
and
xchg
leave
fnstcw
or
mov
divl
loope
mov
sbb
rcll
push
jne
sub
sub
push
or
inc
push
jns
jns
fsubrs
push
mov
or
imul
push
mov
dec
jbe
push
in
and
push
xchg
push
ds
ljmp
jne
pop
mov
int
icebp
dec
outsl
dec
jecxz
aad
neg
loop
icebp
dec
frstor
or
pop
pop
push
jns
jl
scas
fcmovne
or
loopne
iret
mov
mov
pushf
pop
cld
mov
xchg
rcrb
pop
test
sbbl
lock
pop
std
lret
xchg
and
test
jno
xlat
push
mov
xchg
or
mov
int3
loop
lods
rcl
xor
jle
imul
insl
repz
sbb
popa
fcom
adc
mov
pushf
dec
inc
jns
es
aam
jo
or
subb
in
sbb
xchg
jnp
test
enter
jge
push
loop
rol
push
mov
jecxz
lods
xor
enter
xor
jg
in
cmpl
sbb
lea
ds
fmuls
repz
jmp
xor
xchg
mov
mov
sti
adc
cmp
xchg
sbb
adc
mov
aaa
xchg
lea
push
adcb
cltd
mov
clc
xchg
or
and
leave
jb
sub
pop
fdivrs
fidivs
sti
test
mov
mov
nop
sub
inc
dec
jmp
movl
sbb
jle
cmp
outsb
ja
test
dec
push
jg
mov
inc
mov
adc
sub
jns
popa
stc
jno
pusha
jo
mov
fwait
jo
jp,pn
sub
shr
ljmp
fldcw
mov
pop
sbb
aaa
fcoml
or
movsl
push
fildl
push
inc
cmp
mov
enter
jle
in
sub
arpl
mov
sub
loope
cld
mov
daa
jl
movsl
and
mov
cmpsl
test
mov
cmp
pop
bound
pop
push
in
cltd
dec
jl
or
push
cs
xchg
ljmp
pop
mov
add
lds
loopne
jbe
jb
les
pop
mov
adc
push
addb
nop
scas
dec
lahf
aaa
mov
add
dec
cmpsb
aam
xchg
andb
fwait
and
adc
aas
add
sub
pop
jle
ret
cmp
push
mov
lret
cmp
gs
adc
sbb
add
mov
test
cmp
add
cmc
jmp
mov
dec
push
adc
adc
testb
popf
pushf
shlb
dec
push
pop
cmp
cwtl
push
in
mov
sub
and
xchg
fldenv
adc
xchg
aam
loopne
or
mov
or
rorb
int
xchg
mov
loopne
ja
xor
or
es
add
in
mov
push
roll
insb
fs
mov
add
mov
adc
outsb
mov
out
inc
jno
imul
loop
aaa
ret
icebp
loopne
out
and
pop
and
test
mov
in
mull
xchg
jp
hlt
pop
jecxz
adc
or
cli
add
xchg
push
out
notl
xchg
xorb
mov
mov
jg
mov
test
inc
and
sub
mov
mov
flds
add
and
jnp
jge
shrb
pop
dec
or
or
xor
jnp
dec
lock
pusha
shll
repnz
inc
xor
bnd
dec
add
dec
fimuls
add
out
add
or
adc
pop
lret
ja
push
insl
sub
int3
shlb
jp
sub
std
mov
scas
int
adc
pop
mov
xchg
into
push
jecxz
imul
mov
leave
cltd
adc
arpl
jecxz
inc
cwtl
popa
dec
or
cmpl
sbb
sbb
add
call
enter
test
mov
std
mov
sbb
jnp
test
sub
ds
test
fidivrs
cmp
inc
mul
pop
int3
wbinvd
fs
in
inc
push
lods
pop
cwtl
inc
repz
js
jne
rolb
xor
nop
dec
push
or
push
sti
loope
xchg
clc
rcr
aaa
push
mov
jnp
dec
movsl
cmpsl
xchg
lcall
movsb
mov
dec
mov
cmp
mov
fst
pop
lea
aam
mov
sub
lods
cmp
sbb
cmp
inc
xchg
or
dec
int3
or
xor
push
sub
scas
repz
sbbl
push
test
cmp
and
xchg
out
push
jge
fstps
outsl
fbld
push
jo
out
jmp
adc
lret
mov
push
mov
fs
rcrl
rcr
imul
loop
pop
sbb
cmp
adcb
lods
das
in
mov
fsubp
scas
mov
and
movsl
push
insb
adc
call
or
push
cmp
bound
mov
or
scas
outsb
xor
jmp
inc
jns
test
and
mov
inc
in
push
addr16
sub
add
pop
push
imul
cs
sarl
outsb
push
es
mov
sub
hlt
imul
inc
pop
arpl
pop
outsl
adc
push
xchg
adc
aam
aam
mov
jno
inc
push
fisttps
rcll
and
outsb
cmp
sub
sub
scas
jp
mov
dec
ror
mov
inc
jbe
rorb
addr16
and
pop
push
xlat
imulb
test
mov
fwait
jmp
shlb
test
mov
or
sub
enter
push
pop
pop
out
daa
pop
sar
xchg
test
fcoms
rcll
iret
mov
stc
xchg
out
mov
outsl
div
shlb
jno
or
pop
jge
dec
and
sbb
xchg
aas
iret
mov
add
pop
inc
gs
sub
or
cmp
scas
out
push
adc
jmp
ret
rcrb
mov
dec
xor
mov
and
arpl
fstpl
addr16
jge
sbb
lods
std
push
sar
cmp
dec
adc
dec
adc
pop
outsb
or
dec
jl
or
daa
jmp
sahf
cmpb
and
sub
ss
push
mov
clc
mov
xor
sbb
aas
ror
and
shlb
mov
push
ret
cmpb
pop
test
dec
xchg
adc
adc
xchg
add
fstpl
dec
jl
repz
cmc
xor
loope
pusha
xor
mov
sti
adc
js
inc
mov
xchg
stos
mov
mov
adc
add
into
nop
jne
movsb
push
movsb
rcl
mov
mov
ret
icebp
jge
lahf
gs
addb
dec
xor
xlat
adc
cmpb
fdivs
test
in
mov
iret
sbbb
repz
fwait
ljmp
xor
push
push
inc
rep
or
scas
mov
mov
ret
xchg
add
pop
or
or
loope
enter
shlb
es
shlb
jmp
movsl
jp
mov
pop
pinsrw
sarl
call
pop
mov
outsb
loopne
adc
hlt
scas
scas
xor
fwait
mov
adc
inc
insb
jle
pop
dec
inc
mov
inc
shlb
or
cmp
lret
sahf
xchg
cmp
insl
and
lret
cwtl
jecxz
arpl
bound
add
cmp
xor
jl
dec
bound
or
push
cli
lea
sub
arpl
shll
push
into
pop
jb
hlt
dec
mov
cwtl
test
out
push
jg
daa
pop
sbb
and
mov
inc
pop
decl
test
in
sub
inc
rorl
or
mov
cmp
dec
add
in
das
aas
jp
rcrb
inc
cltd
xchg
mov
adc
je
push
rorl
sub
mov
loope
mov
push
xor
inc
jge
pop
jb
mov
test
mov
andps
xor
dec
mov
pushf
out
xorb
out
jnp
mov
ja
jo
and
in
mov
mov
jmp
jne
xchg
add
lods
and
xchg
mov
js
or
pop
push
dec
sti
mov
sbb
in
mov
mov
or
stos
mov
mov
and
adc
ficoml
push
mov
insl
fldl
shrl
and
shll
fistl
mov
pop
jle
pusha
movb
dec
inc
dec
fimuls
repz
jno
test
stos
call
shlb
aad
pop
mov
enter
jne
jns
test
xor
addr16
outsl
push
inc
push
cmpsl
sub
jbe
cmp
fwait
movsl
jp
mov
or
jle
ficoml
lods
inc
stos
adc
cmp
das
dec
push
loope
mov
or
cmp
xchg
inc
in
imul
sahf
mov
adc
xor
cmp
clc
stos
imul
leave
bound
add
mov
cmp
stos
jae
cmp
push
clc
jno
pop
nop
and
pop
cs
push
inc
dec
mov
add
mov
sbb
xor
negl
lea
pop
xor
lret
out
lahf
dec
shlb
mov
cld
into
jae
lods
mov
jno
jo
xor
lds
mov
mov
lahf
aaa
jo
jle
xor
pop
sub
ljmp
stc
jle
mov
jno
and
rorb
test
xchg
or
rcrl
jb
mov
add
mov
or
lods
scas
jg
push
xor
neg
paddq
jle
or
mov
jbe
and
adc
xlat
inc
jle
jge
or
enter
pop
sbb
sbb
out
xchg
push
push
ja
jbe
add
inc
cltd
imul
lods
sti
scas
cmpsb
pop
jns
stc
lret
and
jns
sub
pusha
jmp
cltd
mov
rcr
sbb
push
insb
xchg
movsb
xor
fistpl
insl
pop
mov
pop
sbb
outsb
jo
or
xor
jne
mov
fcomps
push
cltd
lods
movsl
lock
mov
gs
sbb
lcall
out
xchg
test
pusha
dec
scas
mov
loopne
fcomps
imul
push
cltd
push
repz
div
popa
add
shl
cmp
outsl
aad
adc
test
outsl
lods
sbb
insb
sti
fcomps
push
push
dec
loopne
jnp
pop
push
popf
cmpsl
or
and
pop
xchg
mov
inc
adc
cmpsb
rclb
sub
mov
inc
ljmp
mov
dec
out
in
xchg
pop
dec
push
mov
add
nop
push
mov
adc
cltd
push
push
out
out
aad
stos
jns
movl
push
icebp
aas
sbb
mov
pushf
dec
xchg
xlat
mov
sti
xchg
test
cmp
sti
jl
clc
test
jecxz
xchg
push
xchg
out
pop
push
xchg
rcrb
xchg
inc
into
pop
sbb
sub
ret
xchg
push
clc
jns
mov
icebp
lahf
je
mov
testb
es
in
scas
aaa
jbe
xchg
fldt
push
enter
faddl
jbe
xor
test
xor
iret
lahf
jmp
gs
push
icebp
cmc
mov
repz
stc
cmp
daa
adc
int
pusha
jecxz
dec
sbb
and
repz
inc
or
fidivs
sub
jb
pop
outsl
mov
mov
mov
subl
mov
adc
dec
in
sbb
inc
lods
jb
inc
dec
out
lds
clc
dec
sahf
dec
jnp
jle
dec
fwait
and
mov
jecxz
xor
fcomps
pop
loop
iret
or
rcll
inc
gs
addr16
lea
pop
scas
into
pop
mov
jo
repz
xchg
add
jmp
xchg
pop
outsl
and
mov
int
fisubrs
pop
jne
sbb
and
cmc
jl
loop
cli
insb
add
fiadds
adc
test
fdivrs
hlt
jae
push
or
inc
js
lock
insl
jl
aam
jns
inc
js
cld
ret
orb
rcll
roll
jb
nop
lock
jne
mov
aaa
pushf
inc
dec
out
inc
std
and
pop
sbb
dec
push
stc
xchg
cmp
das
lock
mov
out
nop
push
jmp
sbbb
outsl
jmp
push
popf
mov
dec
lock
mov
inc
cld
mov
int
mov
mov
dec
int
sub
ret
sbb
loop
sub
leave
jle
int3
mov
pop
jp
and
mov
push
mov
push
inc
dec
dec
push
sub
dec
pop
adc
out
les
pop
and
ss
icebp
pop
push
aas
or
xchg
push
push
mov
sbb
xor
jl
xchg
das
lahf
mov
cli
movsb
and
std
fs
lahf
sub
mov
push
js
mov
push
inc
dec
sbb
add
adcl
xor
dec
lahf
das
ret
sbb
aam
xchg
sbb
xor
adc
pop
jge
les
adc
mov
cmovg
es
dec
or
repnz
dec
inc
xchg
aas
addr16
repnz
mov
push
mov
adc
scas
scas
jge
call
adc
and
jmp
das
push
ret
sbbl
nop
inc
sti
repz
ds
sub
es
xchg
pusha
lcall
test
lcall
cltd
sbb
mov
lret
sbb
into
inc
rcrl
je
mov
bound
rep
inc
adc
lods
xlat
add
js
pop
lahf
xchg
adc
es
mov
pushf
popf
repz
pop
cmc
ret
aad
out
dec
mov
das
jmp
xchg
sub
ljmp
into
testb
out
ss
js
fsubl
aas
std
sub
pop
dec
repz
cmp
sub
push
ret
add
stc
mov
adc
xor
pushf
inc
and
dec
and
cld
leave
or
mov
filds
imul
jle
cmp
outsb
xor
mov
dec
shl
jmp
stos
fisubrs
or
leave
iret
sub
push
jnp
bound
jle
fwait
shll
in
push
rcrl
lret
loopne
fnsave
iret
inc
pop
pushl
inc
stos
imul
flds
pop
push
pusha
mov
ja
push
in
cmp
testl
jb
das
movsl
inc
rcrl
into
hlt
cltd
xor
sarb
add
xlat
dec
add
sti
arpl
mov
fwait
xchg
arpl
mov
mov
jns
daa
mov
lcall
or
mov
cmp
mov
mov
or
sub
jo
xchg
in
cmpsb
push
or
add
jno
xchg
inc
mov
xchg
or
jnp
xor
sub
ss
lock
shlb
add
sub
or
jne
mov
repz
add
addb
push
cmp
cmpsb
leave
pop
stos
fcompp
decb
sbb
insl
or
rcll
or
mov
xchg
push
push
fldl
mov
push
jmp
fcompl
adc
add
inc
mov
in
stos
std
inc
leave
fwait
pop
pop
subl
add
loopne
stc
loop
or
push
or
fisttps
call
xchg
addl
daa
jae
xor
jnp
pushf
adc
add
in
jae
fucomi
test
lcall
repz
jg
outsl
mov
addb
mov
lods
jmp
or
push
data16
inc
movsl
push
leave
push
mov
lods
btr
mov
fs
adc
mov
push
jne
dec
xor
ret
mov
jb
cs
lea
icebp
mov
sbb
push
cli
sbb
mov
xchg
jp
xor
jno
mov
jnp
inc
mov
sbb
ss
lahf
add
pop
pop
mov
mov
gs
add
les
push
aaa
mov
mov
push
mov
jg
dec
icebp
push
stc
mov
ret
cmp
jb
addr16
mov
mov
adc
iret
pusha
cmp
add
imul
cwtl
dec
jp
dec
xchg
mov
push
loop
jmp
xchg
add
mov
pop
leave
inc
xchg
je
mov
push
andl
sti
repnz
mov
push
sbb
int
inc
fcom
sbb
mulb
imul
xor
mov
jbe
ljmp
sbb
adc
or
icebp
enter
pop
imul
sbb
xchg
aas
and
insl
ret
pop
orl
and
pop
or
ret
test
mov
cmpsb
xor
pop
and
mov
test
mov
sub
xor
dec
shll
cmc
int
jmp
adc
lods
sub
jl
xchg
xchg
push
pop
movsl
sbb
sbb
sbb
arpl
cmp
mov
cmp
in
mov
inc
mov
aaa
lret
jne
and
mov
fsubl
cmp
push
repnz
in
inc
int3
pop
shll
les
jno
cwtl
pop
xchg
repnz
fadds
int3
aaa
out
mov
popf
jo
add
shlb
andl
aas
mov
clc
aam
into
test
lods
jne
xchg
mov
mov
or
dec
cmp
ja
adcb
add
fstpl
dec
mov
mov
jecxz
jecxz
test
imulb
jmp
jns
inc
pop
dec
mov
xor
xlat
xor
fists
fwait
inc
cltd
sahf
mov
mov
pusha
push
pop
xor
xor
jmp
xlat
lock
lcall
cmp
orl
int3
xor
imul
sbb
les
aas
mov
daa
ja
mov
pop
add
inc
push
sub
dec
out
sub
mov
jecxz
ds
divb
mov
pop
mov
mov
dec
push
fidivs
mov
add
sub
je
jmp
pcmpeqd
fs
mov
fs
adc
dec
push
jle
call
dec
pop
cltd
enter
jle
and
jp
cmp
in
jle
mov
les
loop
cmc
testb
sub
leave
or
aaa
or
inc
mov
or
shl
or
xchg
bound
dec
cmp
dec
call
jp
out
ret
push
push
xor
cmpsl
sub
gs
stos
int
insb
or
inc
pusha
jle
dec
pop
jp
sub
mov
adc
jp
repz
sub
cmp
xchg
mov
mov
out
cmpsb
or
mov
stos
mov
mov
push
aam
lret
ss
mov
hlt
jae
mov
xor
add
loope
rol
inc
dec
xchg
lcall
adc
bound
mov
enter
mov
push
bound
add
mov
dec
fnsave
sbb
je
fs
pop
out
pushf
sbb
mov
cmc
mov
jp
mov
fdivrs
sbb
push
xchg
mov
ljmp
or
pop
andb
adc
incb
xor
lahf
or
lret
sub
scas
dec
out
adc
jp
xor
int
scas
add
arpl
enter
adc
addr16
je
adc
stos
dec
fs
mov
push
icebp
out
mov
inc
mov
fildl
add
inc
jns
or
cmp
pop
lock
and
lahf
jp
mov
dec
sub
shl
and
adc
xor
sub
or
xor
shl
jae
shll
mov
ficoms
lds
push
mov
icebp
mov
add
jo
mov
jne
sbb
mov
lock
push
idivl
pop
and
lods
mov
inc
xchg
loope
mov
mov
inc
and
les
imul
adc
mov
ret
sbbb
pop
dec
mov
mov
mov
shrl
xchg
push
inc
pop
or
push
lret
sub
push
fwait
xchg
push
sbb
test
loope
loop
sbb
imul
cld
movsl
push
pushf
ja
jb
mov
mov
jae
xchg
out
sbb
stos
and
mov
push
out
push
aad
jo
or
inc
lea
lods
and
xor
insb
data16
lods
insl
std
mov
shll
sti
inc
sbb
jb
in
push
mov
fimull
fcoml
int
je
mov
xchg
aam
in
sbb
leave
cld
sub
push
xchg
sbb
jo
sub
bound
shrb
mov
in
setno
sbb
push
push
mov
imul
push
sbb
push
push
in
mov
bound
xor
lds
mov
daa
jns
movsb
xchg
xor
inc
mov
mov
jecxz
frstor
stc
add
dec
neg
aad
inc
gs
jl
mov
jno
ret
mov
jp
adcl
xchg
jle
in
ss
dec
scas
ds
gs
scas
xor
int3
cmpsl
adc
sbb
adc
push
ret
popf
pop
ljmp
aaa
arpl
push
fadds
movsl
xor
out
jb
mov
arpl
dec
mov
inc
dec
dec
xchg
jo
scas
jg
sub
test
addr16
mov
loop
sbb
sbb
fisttps
outsl
cmp
cmpsl
inc
xor
mov
test
cwtl
inc
lret
enter
cmp
mov
icebp
cmpsb
adc
sub
xchg
jge
imul
test
or
xor
ds
notl
rol
mov
adc
pop
add
testb
jns
or
out
push
fdivl
push
xlat
idiv
scas
or
xchg
popf
and
fadd
gs
mov
jmp
clc
mov
insl
add
lret
sub
sub
test
xor
adc
hlt
popf
shll
fwait
xchg
nop
sub
icebp
xor
mov
pop
fisttps
test
or
jne
flds
ds
inc
stos
stos
or
test
xor
sub
mov
mov
addb
in
je
ljmp
aam
inc
pushf
xchg
push
pop
out
test
push
jae
mov
lods
push
fs
inc
mov
flds
mov
and
loope
inc
jo
rorb
mov
cs
xchg
pop
or
mov
cmp
cmc
inc
xor
out
ficompl
fsub
aad
sbb
clc
ret
pop
and
ret
cwtl
call
les
les
stos
incb
mov
in
mov
jmp
mov
sbb
dec
js
sub
add
or
xchg
sub
fisttps
pusha
sbb
in
mov
pminub
mov
test
xchg
cmp
jg
lods
stc
fucomip
movsl
push
rcll
lods
cltd
out
or
fwait
cmpl
rcr
repz
fcoms
sti
cmp
add
cmc
cmp
negb
ja
pop
cmp
jnp
aam
mov
outsl
les
and
ss
adc
stos
xchg
ds
xor
frstor
xchg
pushf
pop
mov
aas
mov
scas
jns
xlat
scas
cld
or
push
mov
or
push
dec
pusha
mov
pop
jmp
mov
es
push
pushf
jl
sarl
imul
stc
mov
in
fsubrl
adc
mov
push
cmp
push
inc
xor
lcall
mov
add
out
fiadds
call
or
inc
xchg
stos
icebp
mov
movsl
pop
dec
sbb
incb
in
fwait
mov
or
pusha
orb
jmp
fwait
decl
sti
mov
sbb
jge
into
outsb
mov
out
adc
dec
insl
stos
inc
sub
or
sub
xchg
cmp
ret
mov
sub
int
pusha
sahf
lahf
lret
dec
aad
mov
ljmp
sbb
lock
insl
fisttpl
popa
and
stos
dec
movsb
inc
test
adc
nop
mov
lcall
pushf
icebp
mov
add
sti
adc
jo
pop
call
pop
pop
jmp
lret
mov
and
je
add
push
jl
mov
mov
inc
mov
ret
xorb
clc
iret
mov
mov
pop
adc
add
push
stos
movl
sub
sbb
cli
pop
cmpsl
in
dec
out
add
out
inc
fdivrl
cmpsl
lret
cmc
jnp
sub
inc
and
int
arpl
lahf
jnp
faddl
pop
sub
jecxz
inc
arpl
paddusb
add
inc
xor
cwtl
mov
into
add
mov
xor
movsb
in
push
cmp
adc
out
and
ds
mov
inc
dec
jg
sahf
int3
jmp
cmpsl
jl
popa
xchg
cmp
mov
js
pushf
mov
mov
mov
pop
cwtl
outsb
mov
xor
scas
mov
cmp
test
fmuls
sbb
mov
pop
lcall
cmp
iret
sbb
inc
stc
jle
shll
push
mov
mov
leave
jl
jb
lret
or
sbb
repnz
mov
enter
lods
or
push
mov
fiaddl
inc
fcmovbe
xchg
and
push
pop
dec
dec
sub
pop
cmp
js
jge
and
add
or
xchg
mov
jbe
insl
imul
inc
data16
int
orl
lcall
lock
inc
dec
push
mov
rcll
mov
dec
es
xchg
aam
es
mov
jle
add
xor
sbbb
aad
jecxz
and
pop
jno
push
lods
mov
mov
xchg
inc
or
cmc
xchg
mov
inc
sub
xchg
cmp
jns
mov
out
push
cwtl
add
out
mov
mov
hlt
jg
ds
xchg
mov
cmp
mov
jb
mov
sbb
cmc
or
idivb
enter
arpl
add
sub
mov
rcll
cmc
add
shr
lcall
orl
mov
rol
test
inc
pop
mov
push
mov
pop
ja,pt
mov
xchg
mov
sbb
imul
inc
xchg
mov
adc
xor
dec
stc
das
pop
add
xor
jnp
fstpl
push
loopne
outsb
xor
repz
imul
push
adc
sti
sub
pusha
dec
mov
jle
mov
push
xor
xchg
pop
lret
xor
aam
xchg
xlat
or
es
pop
cmpsl
mov
adc
imul
lods
adc
pop
pop
push
dec
cmp
jae
mov
bound
outsb
jb
aad
iret
cwtl
push
mov
leave
jmp
rcll
aaa
mov
neg
cmp
push
inc
or
mov
jne
jno
cwtl
dec
mov
push
cli
psllq
and
xlat
adc
sbb
mov
pusha
inc
xchg
or
dec
div
nop
imul
mov
scas
rol
pop
lahf
jge
cltd
fcmovu
add
push
xor
jno
sbb
jg
shrl
mov
or
add
mov
loope
scas
pop
fbstp
popa
push
aam
mov
loop
mov
mov
push
lret
test
lea
addr16
test
add
imull
test
or
loopne
addr16
js
mov
adc
repz
and
mov
xor
shll
xlat
push
cld
dec
mov
sbb
cmpsl
subb
ret
mulb
mov
incb
dec
enter
sub
in
push
sbb
sub
psubw
xor
insl
jg
jl
dec
fnsave
sbb
mov
divb
push
inc
data16
stos
movsb
or
mov
mov
enter
or
addr16
dec
dec
add
adc
xor
dec
hlt
push
iret
outsb
adc
movsb
push
mov
push
sub
aad
fists
dec
stos
jl
jp
xor
data16
push
stc
cli
push
fucomi
pop
sti
add
ja
pop
mov
rorl
pop
mov
loop
or
and
repnz
aad
xchg
aad
mov
ljmp
jl
int3
or
push
aaa
cmp
sbb
inc
loop
and
rol
test
or
lea
sub
or
dec
cwtl
mov
sarl
out
leave
push
mov
xlat
jne
xchg
push
fistpl
adc
inc
loopne
popa
adc
sbb
int
cld
adc
push
xor
dec
shl
cmp
dec
into
lock
jnp
inc
xchg
xchg
dec
adc
insl
in
xchg
test
push
test
popf
sahf
mov
les
xor
inc
xchg
sbb
pusha
xor
push
imul
mov
mov
pop
mov
jno
sbb
add
das
int3
push
cs
mov
ss
outsb
icebp
mov
mov
push
jl
jae
mov
or
and
pop
mov
add
in
ljmp
cs
ljmp
fisubs
aad
cli
sub
or
inc
xchg
pop
jae
mov
nop
ficompl
jmp
int3
or
dec
and
pop
gs
ds
mov
mov
ds
push
enter
inc
int
lahf
mov
jmp
rdtsc
dec
add
push
out
add
ljmp
iret
sub
mov
jb
test
jge
test
addb
pushf
or
movsb
mov
aad
clc
jg
filds
xchg
push
mov
ljmp
xchg
cmp
xchg
fmuls
enter
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
fcomps
jl
pop
jl
dec
insl
scas
arpl
pop
add
pop
test
lods
xor
and
fisttpl
push
sahf
jo
gs
or
nop
cmp
push
inc
inc
jb
mov
mov
jle
add
and
mov
pop
outsl
dec
adc
aaa
mov
out
aas
nop
mov
outsl
imul
dec
jg
test
xorb
add
aad
and
jmp
mov
ss
pop
pop
inc
mov
mov
outsb
out
jns
mov
push
inc
mov
adc
outsb
aaa
movsl
add
mov
sub
mov
dec
lret
mov
cmp
gs
sub
cmp
xchg
stos
cmpsl
xchg
shl
jo
pop
sbbl
and
adc
dec
xchg
cmp
jp
mov
into
ret
nop
test
push
stos
inc
out
test
idivl
mov
fstl
xchg
nop
ja
adc
inc
mov
push
ret
sbb
mov
cmp
int3
pop
mov
lret
stos
stc
repz
std
fsubrl
hlt
movsb
shll
inc
jno
shlb
xor
into
scas
mov
sub
dec
or
xchg
push
dec
xchg
adc
test
xor
jbe
or
mov
std
fwait
data16
xor
jnp,pn
sti
ss
aad
ljmp
add
xlat
mov
cmp
jg
push
xchg
cmp
pop
mov
mov
xor
sub
mov
sahf
mov
or
punpcklbw
in
push
in
mov
mov
inc
pop
dec
push
scas
fwait
adc
xchg
sbb
cltd
jecxz
outsb
push
cld
or
or
pop
sti
movsb
add
or
mov
sub
and
mov
add
bound
mov
mov
mov
mov
inc
xchg
cmc
add
sbb
dec
fcoms
push
pop
push
xlat
test
dec
sub
mov
mov
aas
subb
push
sbb
les
cltd
mov
cwtl
inc
adc
push
cmp
outsb
sbb
mov
mov
hlt
clc
sbb
shl
cmpsl
mov
rcrb
scas
sti
jne
int3
push
push
push
or
cmp
jge
jae
xor
popf
shlb
jno
mov
cld
pop
pop
repnz
cmp
test
cmp
add
pop
cmpsl
lods
inc
rcrb
iret
in
jb
mov
je
icebp
scas
ret
and
lret
mov
or
xlat
cmpsl
stos
pushf
or
sub
mov
sarb
pop
mov
push
movsb
mov
repnz
sbb
and
xor
xor
push
dec
pop
mov
jb
clc
cmp
scas
xor
push
movsl
mov
mov
rol
out
mov
mov
stos
test
add
fs
addr16
imul
inc
adc
xlat
out
ljmp
push
insl
push
scas
sbb
push
pop
adc
sti
xchg
mov
incb
add
test
ret
out
pushl
dec
pop
sub
je
xchg
mov
or
or
lret
out
mov
das
or
xchg
push
pop
push
sti
aam
lcall
fsubl
jb
mov
int3
sahf
mov
and
and
faddl
fiadds
mov
jae
inc
sbb
and
dec
xchg
arpl
sbb
int3
adc
jo
cmpsl
ret
ja
fwait
and
orl
xchg
mov
movsb
test
ja
xchg
incb
cmp
addl
imul
enter
divb
sub
adcl
std
inc
fcos
jecxz
sti
xor
dec
fs
pop
dec
and
add
sbb
or
push
or
imul
and
insl
fldt
sub
adc
outsl
lds
aam
cwtl
mov
mov
rcl
test
insl
dec
sub
into
cmp
jle
scas
mov
adc
mov
jns
pop
and
jbe
mov
shrl
sbb
loopne
push
dec
cmp
mov
adc
push
clc
jno
sub
inc
gs
fldcw
adc
imul
scas
les
daa
cmpsl
xor
xchg
cltd
inc
mov
lahf
mov
repnz
shll
ds
mov
sub
sub
decb
ret
mov
shll
insl
das
sub
ss
mov
mov
and
jg
mov
and
jmp
mov
repz
inc
mov
mov
dec
push
adc
add
mov
or
pop
imull
fdivrp
and
pushf
mov
sub
call
pop
mov
sti
and
jle
lcall
in
mov
jb
out
jns
jle
cmp
data16
cmp
out
or
ror
aas
aaa
cltd
popa
mov
add
xchg
lcall
int3
xor
hlt
xchg
in
hlt
stos
imul
inc
enter
popa
clc
repz
movsb
fcompl
into
dec
testb
inc
fldlg2
fyl2xp1
std
dec
xor
scas
fildll
in
lahf
stc
call
xor
sbb
pop
jns
and
push
or
and
imul
xchg
xchg
pop
ja
repnz
push
lods
aaa
paddw
xchg
loope
pop
jns
inc
mov
mov
in
cmp
xchg
shlb
in
cltd
into
sbb
sbb
js
xchg
push
fwait
adc
popa
sub
rol
inc
stos
add
mov
ja,pn
fincstp
lret
mov
xorb
xor
inc
dec
ss
mov
inc
jns
mov
add
sub
daa
scas
add
loope
rcl
lock
das
mov
pop
fimull
jo
aas
dec
rcr
and
aad
adc
mov
dec
repnz
jae
and
cs
jle
or
aad
mov
roll
out
enter
les
mov
push
mov
das
dec
add
or
adc
jl
pop
loopne
shl
pop
out
ljmp
pop
cmp
in
in
movsb
mov
xlat
xor
daa
sarb
jno
aaa
xor
jg
mov
test
test
push
cmp
in
stos
test
add
adc
pop
mov
xchg
mov
iret
cld
adc
mov
push
push
adc
xorl
sbb
mov
mov
orb
rcll
lret
rcrb
loope
cwtl
inc
std
in
roll
stc
fstl
loope
rcrb
sbb
sbb
push
adc
xchg
or
test
adc
fmul
rcrl
or
sub
mov
pop
or
mov
mov
jmp
push
in
and
push
fldt
inc
mov
mov
dec
ret
out
cmp
push
adc
mov
xlat
or
cmp
ror
int
mov
jo
imul
push
push
cmp
jge
fidivs
sbb
dec
dec
or
out
cmp
shlb
adc
rorl
pop
add
or
aaa
dec
mov
mov
adc
adc
sahf
adc
cs
and
xchg
xchg
fidivl
nop
inc
mov
sub
push
and
outsb
mull
xchg
push
push
inc
sub
xor
xor
add
test
movsb
jb
xchg
call
repnz
scas
push
fcom
ss
fwait
cmpsl
insb
add
mov
pushf
inc
cmp
fwait
cmp
insb
repz
sub
in
pop
xor
jl
push
and
out
lods
push
icebp
push
ror
in
mov
jmp
inc
insl
rcrl
push
sar
rorl
sub
ficoml
aas
add
xor
bound
adcb
into
xchg
add
lods
xlat
cltd
mov
mov
mov
add
lods
dec
leave
dec
lcall
jl
cs
cmp
aaa
fs
add
stc
into
xor
xor
dec
push
cmp
pusha
sub
repnz
dec
or
rcrb
mov
cmp
into
adcl
pop
mov
inc
gs
cs
lods
fxam
dec
cmc
es
jns
out
sub
popa
int
mov
push
inc
mov
sti
inc
jp
iret
in
push
jno
jo
xor
inc
mov
push
imul
inc
mov
mov
pushf
nop
lahf
lret
iret
and
pop
push
push
faddp
dec
loope
in
and
out
fwait
mov
mov
push
xchg
in
cmpsb
and
outsb
mov
sbb
decl
add
fwait
and
mov
stos
jg
xchg
sub
aad
push
push
ss
mov
clc
insl
je
inc
lods
outsl
repnz
inc
mov
push
sbb
dec
sbb
ss
mov
aam
fidivrs
xor
into
aas
clc
mov
push
mov
mov
pusha
stos
pop
mov
rclb
mov
fcomps
cmp
adc
push
sub
rorb
insl
in
pop
call
dec
add
ds
repz
add
in
inc
add
mov
mov
loop
imul
nop
outsl
pop
xchg
aam
fucom
popf
mov
jae
pop
xor
sbb
mov
xor
inc
repnz
clc
stc
dec
pushl
jge
fisttps
jp
push
jecxz
sbb
mov
sbb
jno
pop
sbb
sti
sbb
cmpsl
daa
nop
out
sub
dec
out
sbb
bound
push
pop
or
xor
stc
hlt
test
add
lret
and
ret
mov
cmp
xchg
mov
xor
shll
repnz
or
xchg
test
stc
pop
dec
jmp
stos
lods
ss
jbe
push
fstpt
push
push
arpl
stos
jmp
std
dec
arpl
adcl
repz
scas
sbb
aaa
icebp
xor
xchg
push
xchg
add
loopne
add
sar
adc
mov
int
fwait
xchg
jmp
sub
mov
test
inc
js
arpl
push
pop
out
int
cmp
jmp
pop
popf
cs
dec
das
sbb
pushf
pop
inc
repz
dec
cmp
push
lods
jb
adc
mov
sbb
adc
fdivr
pop
xorb
mov
jnp
cmpb
lret
orb
popf
repz
jae
setb
dec
rcl
xor
fnstenv
aas
jl
roll
mov
mov
repz
xchg
arpl
adc
lea
xchg
xor
movsb
sbb
or
push
fidivl
sub
cmpsl
push
aad
out
or
ljmp
aas
bound
addr16
es
xchg
push
stos
inc
push
jg
ljmp
lds
sub
nop
jg
call
in
popa
les
or
out
push
cli
adcl
inc
insb
call
mov
test
fidivl
repz
or
cmp
sbb
sub
shll
pop
das
jle
mov
dec
mov
adc
fidivrs
mov
shufps
push
add
inc
pop
je
cwtl
or
inc
add
sbb
sahf
scas
cmp
sahf
sbb
test
stc
ss
mov
push
add
xchg
xor
cwtl
inc
mov
aad
stos
shlb
imulb
dec
mov
add
movsl
xchg
pushl
and
sbb
inc
popa
shll
or
sar
push
ja
sbb
dec
in
lret
cmp
mov
lcall
lock
xchg
imul
push
cmp
sbb
xchg
clc
cld
mov
jp
pop
adc
jl
add
pop
mov
jmp
mov
test
sbb
inc
loop
lret
ss
sub
push
in
out
rolb
and
or
dec
sti
adc
cwtl
inc
cld
adc
andb
cmp
dec
or
popa
aad
mov
adc
jb
mov
xchg
push
loopne
cmp
xor
arpl
adc
dec
sub
bound
lcall
cmp
aad
jle
jmp
cltd
jne
mov
ret
ljmp
xchg
lods
por
fists
cld
jae
xor
push
mov
int
xchg
mov
and
jl
outsl
cmpsl
xor
jle
lods
cmp
fsubl
jmp
sbb
popf
insl
cmc
fstp
cmc
and
and
imul
dec
aaa
inc
dec
das
jmp
jmp
pop
sbb
push
mov
sub
xor
stos
and
push
and
dec
lahf
scas
aaa
pop
sbb
push
inc
jo
lret
outsb
sbb
jp
push
push
cmp
inc
andb
add
fdivr
fdivrs
aaa
sbb
jne
or
les
decl
and
int
adc
add
jne
in
out
sub
mov
dec
arpl
jg
aas
sbb
outsb
dec
add
aad
gs
dec
or
push
mov
pop
lods
jmp
xor
out
scas
ljmp
jecxz
xchg
xchg
fwait
ror
push
xor
mov
sbb
js
scas
mov
cltd
xchg
and
cld
xchg
fisubl
repnz
mov
push
pop
leave
fdivl
scas
mulb
out
sti
adc
pushf
dec
lea
sti
jae
out
xchg
fidivl
std
jmp
cmp
push
jb
sbb
pop
jg
push
rcr
pop
pop
or
adc
pop
sbb
add
into
mov
inc
pcmpeqd
insb
pop
mov
lret
push
jbe
push
into
adc
frstor
in
add
push
mov
sub
jmp
xrelease
mov
xchg
fmulp
iret
mov
and
add
mov
sbb
in
push
out
sbb
add
dec
popa
in
in
fsubs
aaa
nop
mov
and
jge
fdivs
into
pop
pop
lock
push
inc
xorl
pop
push
sbb
push
call
sbb
mov
pop
pop
xchg
pop
add
cmpsl
cmp
fldln2
clc
inc
add
das
in
fsubrl
xchg
and
adc
cli
fisubs
pop
xor
or
mov
loope
sub
hlt
mov
aas
rcrb
push
addl
out
xchg
xchg
push
push
mov
ficomps
push
call
jecxz
dec
inc
sbb
lahf
add
pop
jae
nop
and
cmc
ret
jae
mov
out
add
jb
mov
stc
cmp
jmp
and
pop
mov
fwait
les
pop
loope
push
pop
push
sbb
scas
ss
push
push
xlat
aas
pop
mov
je
loope
cmp
mov
ficoms
lret
lods
leave
jb
inc
rolb
faddl
dec
jne
adc
loop
out
ret
push
iret
enter
dec
mov
dec
pop
shr
xor
mov
or
mov
in
dec
andl
cmpsb
mov
movsb
mov
xchg
jb
xchg
shll
cmp
popa
std
pop
xor
lock
or
ret
pop
add
daa
pop
ds
mov
int3
or
lds
sub
push
xor
aam
lcall
lock
inc
jmp
jmp
jecxz
xor
aaa
dec
mov
inc
rorb
cltd
mov
mov
lods
jne
in
cld
add
xor
push
arpl
lds
lock
adc
pop
xor
out
loopne
xchg
in
repnz
jbe
push
add
sbb
ja
sbb
and
mov
nop
insl
or
mov
stos
pop
mov
mov
ss
cmpsb
cmp
jl
cmp
xor
adc
xchg
jl
pushf
jb
adcb
add
loop
data16
in
push
cmp
or
icebp
ret
jne
lds
sbb
push
mov
fstp
scas
xchg
iret
push
mov
inc
je
mov
call
adc
jno
xchg
ror
dec
test
dec
dec
xlat
movsb
push
jl
movsb
ror
sbb
jmp
out
dec
ret
out
es
test
jmp
daa
xor
adc
aas
fldpi
xor
jl
ljmp
popa
xor
es
or
sub
xlat
push
popf
dec
stos
mov
inc
pop
pop
mov
aam
push
jmp
dec
add
jge
lret
pop
and
and
sub
jmp
stos
jnp
bound
add
inc
aas
pop
cmp
shr
nop
sti
sub
cmp
sbb
push
scas
push
fisttps
mov
mov
and
addb
sti
mov
pop
stos
sub
mov
xchg
inc
inc
jo
xor
out
xchg
shrb
movsb
xchg
or
jnp
inc
ret
lret
out
add
dec
fs
iret
mov
mov
enter
and
popf
scas
pop
xor
push
out
push
int3
mov
xor
sbb
sbbl
sbb
pop
mov
cmp
adc
push
iret
sub
cmp
mov
shll
cli
and
push
outsb
repnz
stc
pop
std
loopne
jp
cmpl
mov
in
mov
sbb
or
mov
push
sbb
out
add
lock
cld
aaa
adc
fstps
inc
pusha
dec
das
mov
add
aas
test
ret
enter
mov
hlt
sub
gs
lods
pusha
stos
cli
xchg
rorb
xor
sti
inc
lret
fcomi
or
push
aad
add
xor
lcall
ljmp
insl
test
hlt
lea
jmp
fsubs
xchg
pop
jo
sbb
lret
sbb
xchg
sbb
push
jae
jge
push
jnp
or
lea
divb
xchg
scas
pop
rcrb
mov
push
sbb
mov
lods
push
mov
mov
push
xchg
enter
repz
and
push
jo
push
adc
jae
loopne
stos
sbb
sbb
scas
aad
ja
mov
in
aaa
inc
push
sub
iret
adc
lcall
push
xchg
push
aaa
push
jmp
mov
sahf
mov
adc
cs
adc
add
jp
repnz
stos
in
out
pop
cmpsl
subb
adc
push
decb
sbb
xor
mov
push
insl
pop
cmp
cmp
xchg
int3
mov
mov
es
data16
addb
sub
loop
sub
fdivrp
pop
sbb
mov
inc
sbb
ret
test
mov
orb
iret
jae
roll
lret
jnp
mov
ja
xchg
xor
test
pop
jno
arpl
test
scas
test
inc
xchg
repz
cmc
mov
js
push
aad
out
xchg
je
and
pop
inc
xor
clc
adc
adc
mov
inc
and
add
jl
lahf
sbb
push
movb
pop
insb
in
addb
enter
shl
push
adc
movsl
jnp
cmpsl
pusha
scas
icebp
mov
inc
leave
adc
ds
in
mov
sbb
cs
mov
loope
mov
into
out
mulb
xor
push
movsl
jbe
clc
xor
nop
jge
adc
and
outsl
mull
jb
in
clc
cmp
scas
loop
push
mov
dec
push
and
xor
add
popf
shrb
ret
in
rcll
out
in
test
dec
jnp
mov
push
outsl
or
lret
lcall
jno
daa
test
jle
nop
test
mov
cltd
mov
pushf
notb
push
and
xchg
dec
mov
lds
xor
inc
mov
fldcw
sbb
xchg
std
sbb
mov
add
jo
sbb
or
stos
pop
fwait
push
ds
adc
rcr
mov
pop
cmpsl
in
test
mov
add
cmpsl
mov
inc
in
jp
test
fidivrl
jae
inc
out
mov
jns
into
jne
shlb
mov
and
mov
pop
dec
lods
out
ret
and
mov
mov
fsubr
pop
mov
fnsave
and
jecxz
scas
jo
aad
inc
xchg
sahf
push
dec
sub
push
leave
lods
call
in
sarb
leave
movsl
hlt
sti
aaa
test
loope
fwait
repz
lret
test
mov
iret
xchg
shl
dec
addr16
loop
scas
scas
pop
push
stos
cli
sub
testb
adcl
test
je
daa
xchg
ret
addr16
push
cmp
lods
bound
out
cmp
or
outsb
pop
orl
mov
push
lcall
or
mov
push
roll
into
push
or
lcall
jne
pop
addb
lods
mov
test
rolb
icebp
xor
mov
arpl
cs
loop
popa
std
mov
cmp
out
stos
push
pop
insb
mov
pushf
inc
imul
xor
xlat
cmc
or
adc
xor
push
and
or
iret
rclb
sub
stc
cmp
fsubl
jp
scas
je
fs
popa
clc
jns
loopne
cmp
or
in
xor
out
out
pop
dec
xchg
cmpb
lret
cmp
insl
and
mov
mov
cwtl
repz
or
icebp
xor
pop
or
jmp
add
cmpsb
aas
mov
sbb
or
pop
jecxz
dec
add
clc
mov
mov
cmp
pop
aaa
arpl
xchg
outsl
stos
cli
gs
pusha
jg
jmp
pop
fwait
enter
mov
push
xchg
xor
cmp
xchg
xchg
push
ret
cbtw
loop
pop
mov
popf
testl
daa
movsb
push
lahf
stc
testb
add
and
aas
cwtl
clc
mov
loope
rorb
mov
out
roll
jbe
test
das
jnp
xchg
hlt
and
xchg
xor
and
jnp
mov
push
cmc
add
stos
mov
stos
pushf
push
shlb
ds
xor
rcr
add
pop
fmuls
add
loope
mov
lcall
div
and
jne
push
psubsb
out
mov
xor
in
inc
pusha
and
mov
arpl
mov
pop
ds
dec
bound
adc
xchg
adc
scas
jge
nop
xchg
sbb
jle
dec
inc
inc
xchg
in
int3
syscall
mov
jl
cli
daa
in
inc
sub
enter
add
mov
push
cwtl
mov
int
mov
addr16
ret
xor
insb
dec
inc
pusha
push
pushf
push
call
mov
stos
xchg
lcall
fsubrl
sub
loop
dec
push
mov
mov
adc
scas
loopne
sbb
test
push
jae
popf
jbe
push
je
push
aam
sbb
cmpl
inc
out
fidivl
inc
stc
loope
push
sub
mov
inc
cmp
add
cmc
sarb
out
or
push
ret
lods
sbb
arpl
dec
sbb
jne
movsl
imul
dec
sbb
mov
leave
cmp
ret
xchg
pop
out
pop
pusha
das
clc
mov
call
arpl
std
mov
clc
mov
inc
icebp
mov
fld1
test
xor
outsl
ja
pop
sub
adc
jo
mov
btc
dec
jg
mov
xchg
std
cmp
stos
or
loopne
xor
cwtl
popf
cltd
pop
jb
inc
sub
aad
imul
or
fimuls
sti
add
aam
lahf
popf
xchg
int
sub
xchg
add
dec
mov
mov
sbb
jle
xor
push
xchg
icebp
adc
jle
mov
dec
loope
mov
loopne
call
mov
inc
xchg
add
inc
movsl
pop
dec
das
cmc
loope
dec
cld
testl
jno
gs
in
stos
add
std
popf
jle
lods
cs
and
dec
int3
outsl
iret
adc
lahf
sti
ret
sub
scas
cltd
data16
addb
mov
adcb
add
outsl
stc
test
mov
aad
scas
testb
shl
jnp
xor
pop
loope
cmp
mov
xchg
out
fs
dec
cli
mov
pop
or
adc
in
je
adc
mov
in
or
sub
lret
or
cmp
ljmp
mov
inc
jne
cmpsl
pop
sbb
pop
dec
loopne
ss
mov
movsb
push
adcl
clc
sbb
mov
out
dec
xor
push
lds
mov
add
and
mov
ret
cltd
lods
aas
cmp
jp
pop
iret
xor
adc
sbb
mov
nop
lcall
inc
sbb
js
push
and
xlat
popa
push
aam
pop
or
cltd
inc
test
jecxz
add
xlat
in
lods
ror
pusha
call
aaa
mov
lock
sub
adc
fcomip
jne
xor
int
or
pop
in
aaa
pop
mov
or
jnp
int3
dec
sbb
rcrb
jle
cmpsb
fisubrs
mov
mov
cmp
add
mov
iret
mov
sub
ss
jge
push
popf
test
jecxz
das
into
adc
xchg
add
cli
jb
js
jl
movsb
lahf
ds
adc
jns
sub
icebp
lcall
lahf
loop
cmpsb
das
push
and
js
push
lahf
push
fistpl
dec
jge
int
ds
in
fwait
or
xor
push
sub
jnp
pop
adc
and
mov
dec
add
insl
into
add
jae
sahf
jnp
stos
pop
in
mov
hlt
mov
je
mov
cmpsb
rolb
adc
jno
pop
add
mov
dec
loope
inc
mov
inc
jge
rcll
sahf
cmp
xchg
add
insb
js
movsb
mov
sbb
cmp
sub
into
in
jecxz
pop
or
lock
push
xor
mov
es
addr16
leave
jecxz
out
jl
pop
adc
pusha
jnp
jbe
add
lret
shl
and
jnp
loop
jecxz
stos
pop
das
js
push
mov
call
and
add
inc
or
sbb
scas
dec
psllw
ljmp
int3
sahf
data16
call
lods
cmp
dec
cmp
xchg
cmp
lds
pop
cmpsl
xchg
data16
loop
fnstsw
push
dec
sti
or
xor
mov
push
fcoms
fisttpl
sbb
add
addl
cli
repnz
jmp
mov
pop
add
imul
popf
les
outsb
icebp
clc
lds
cwtl
pop
xor
push
cmp
adc
add
frstor
movsb
and
dec
pop
leave
push
fsubs
add
sbb
or
sub
cmp
sahf
icebp
add
inc
jb
std
mov
out
add
aam
add
imul
pop
dec
jae
push
cs
cmp
icebp
mov
jae
mov
sahf
cmpsb
sarl
jb
and
adc
test
mov
sub
sub
into
dec
push
test
or
inc
cld
jne
and
and
in
outsl
test
push
test
pop
rorl
in
cmp
cmp
flds
sub
push
andl
xchg
std
loope
jno
xor
sub
push
cmp
fidivrl
push
xchg
icebp
into
sahf
jg
sbb
sbb
outsl
cltd
xchg
pop
stc
lret
dec
jmp
adc
sbb
dec
bound
xor
mov
aam
mov
xor
leave
jb
ja
enter
dec
stc
pop
addr16
stos
add
sti
pop
push
notb
int
popa
dec
mov
mov
mov
mov
cmp
loope
not
add
out
lcall
mov
daa
mov
jge
jecxz
fcomps
popa
inc
pop
mov
imul
in
lods
push
fs
inc
dec
stos
lods
xchg
in
pop
lret
test
mov
test
push
lret
jnp
xor
call
sbbl
pop
cmp
mov
enter
sbb
add
add
mov
cmp
xchg
cmc
in
in
jmp
pop
dec
adc
data16
es
pusha
movsb
mov
lock
aaa
dec
mov
inc
in
pop
lret
outsb
sbb
sbb
cld
in
dec
and
scas
bndldx
mov
out
inc
test
rol
pop
jle
dec
imul
adc
aad
call
out
in
sub
ficompl
dec
adc
ss
clc
cli
call
lods
add
adc
add
int3
loop
rcrl
sbb
jns
loop
out
pushf
mov
stc
das
jecxz
mov
jg
test
rorl
sbb
adc
out
and
dec
add
adc
loopne
fsub
mov
inc
mov
insb
mov
ret
sbb
xor
jnp
mov
inc
or
cmpsl
lret
adc
mov
dec
ret
mov
inc
loop
fldl
adc
popa
ror
mov
les
mov
cmp
push
pop
js
xor
jp
add
pop
cmp
mov
and
sub
sbb
and
xor
push
outsb
loope
addl
std
cmp
inc
rcr
mov
add
cli
push
or
in
out
mov
inc
jns
push
call
add
shrb
xlat
jle
adc
mov
xor
sub
jmp
nop
sub
enter
add
testb
jle
inc
inc
mov
inc
sbb
cld
mov
mov
fstps
mov
sub
adc
hlt
sub
icebp
push
adc
mov
xchg
fld
inc
pop
fwait
jae
jno
and
scas
xchg
mov
mov
aam
sbb
ret
lcall
pop
xchg
mov
or
shl
push
mov
test
or
jne
loope
lea
mov
push
test
daa
adc
mov
sbb
cwtl
push
popa
out
imul
sbb
jae
cwtl
inc
popa
mov
push
lds
in
mov
outsl
mov
lret
mov
popf
xchg
or
jbe
cs
scas
stc
aam
mov
mov
scas
sub
mov
inc
or
ret
jnp
jp
rolb
cmpsb
rcl
insb
and
pop
xchg
or
popa
push
jnp
inc
nop
push
das
pop
jp
int3
loop
in
xor
gs
jae
in
scas
xchg
in
dec
mov
fistpll
fistpl
xchg
outsl
sbb
lods
cmp
lock
icebp
mov
out
pop
outsb
jl
mov
mov
sub
mov
xchg
in
push
rolb
in
mov
dec
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
xchg
jns
add
ja
mov
subl
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
