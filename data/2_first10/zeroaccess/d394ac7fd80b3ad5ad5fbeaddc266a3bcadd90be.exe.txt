push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
std
push
jae
aaa
hlt
out
mov
mull
movsl
lahf
sbb
push
or
mov
aas
cld
bound
lea
rcll
cmovge
mov
add
xsave
imul
js
outsl
shrb
mov
sbb
leave
jbe
mov
das
jnp
push
sbb
mov
gs
call
aaa
insb
xchg
pusha
repnz
sub
add
je
mov
outsl
repz
fiaddl
fldcw
out
push
roll
jl
mov
call
sbb
push
add
adc
stos
jnp
xchg
xchg
sbb
jge
cmpsl
inc
adc
or
push
incl
adc
inc
daa
lods
fbld
sub
mov
sub
in
iret
les
xchg
pop
imul
inc
inc
rorl
xor
cs
lea
fstpt
mov
pop
push
adcb
jb
and
insl
test
fs
mov
int3
mov
xor
push
cld
nop
push
roll
or
aam
jno
pop
adc
stc
dec
sarb
or
in
dec
adc
add
fs
je
xchg
shrl
jl
dec
cmpsl
pushf
and
xor
mov
jae
mov
rorb
test
pop
in
xor
or
test
testb
mov
sti
aam
cmp
push
fistpll
rclb
ret
shr
es
arpl
pushf
clc
lcall
bnd
cld
scas
sub
jg
jg
imul
and
mov
xchg
int
xor
ja
jmp
cli
in
mov
test
pop
pop
jp
addr16
stos
movsl
loope
stc
repz
adc
cltd
adc
sbb
xor
pop
out
pop
loope
mov
cmc
fmuls
adc
jg
out
xchg
aaa
stc
push
out
ja
pop
rcl
fcmovbe
stc
inc
push
lods
jg
sub
jbe
enter
jae
mov
inc
and
rcr
mov
ss
mov
out
icebp
mov
cltd
pop
mov
movsb
mov
lods
fdivrs
int
sarb
jecxz
and
add
leave
adc
add
push
movsb
std
call
in
sub
pop
addr16
mov
rclb
mov
push
and
cmp
lret
and
addr16
lods
movsl
mov
push
push
or
in
enter
iret
cmpsb
add
cli
or
data16
lahf
das
add
cmp
lods
out
outsl
pmuludq
gs
ja
or
push
fwait
lods
push
pop
cmp
push
std
mov
enter
fucomip
xor
scas
pop
or
jno
pop
js
sbb
lods
out
push
gs
mov
xchg
mov
mov
shll
ja
int
inc
out
adcl
fbstp
or
arpl
repz
add
sub
or
xor
sbb
fdivl
leave
call
add
test
jnp
push
cmc
jmp
test
sub
fwait
and
movsb
inc
sbb
in
loope
ss
bound
pop
dec
cmp
mov
xlat
mov
push
sub
sub
icebp
push
lea
mov
stos
inc
inc
push
clc
pop
imul
cs
pop
inc
dec
add
ficomps
push
je
leave
xor
xchg
xchg
iret
dec
inc
jmp
movsl
cmp
xchg
arpl
lods
fiaddl
jmp
cli
or
jae
mov
mov
std
cmp
rclb
xchg
mov
ljmp
xor
mov
ret
xchg
add
pop
mov
push
rolb
add
mov
in
xor
mov
xor
nop
mov
sub
js
call
inc
pop
enter
jb
or
mov
outsb
jle
or
pop
popf
xchg
push
pop
jo
sbb
sub
ret
xchg
lds
pop
or
sbb
inc
addr16
mov
in
maxps
das
cmp
or
iret
subl
xchg
xchg
pop
add
mov
test
mov
nop
jns
outsb
inc
xchg
cmp
das
pop
jp
add
in
in
xor
loopne
sub
or
pop
cmc
pop
xchg
xchg
inc
lods
aam
icebp
test
dec
test
lcall
ret
pop
cmpsb
div
nop
rcll
pop
adc
or
rcrb
lds
ds
push
ds
bound
out
ja
fcompl
dec
lds
push
pop
inc
insb
push
fmulp
mov
push
js
xor
loopne
ljmp
jg
dec
add
in
fsubp
cmpsl
pop
jbe
push
cmp
xchg
loope
dec
les
mov
add
jg
push
adc
jmp
out
and
mov
dec
int3
not
jnp
dec
int3
cmc
pop
sbb
imulb
lahf
push
sub
pop
int
cmp
divl
ret
sti
sbb
pushf
mov
push
sub
int3
mov
stc
mov
pop
pop
mov
insl
xchg
inc
add
xlat
mov
pop
test
fcmovb
jp
jnp
xor
cmpsl
enter
call
les
dec
push
add
mov
dec
fildll
jo
sbb
out
pop
jg
shll
scas
dec
pop
sbb
mov
ss
sti
and
enter
rdmsr
adc
fiaddl
push
sahf
pop
mov
call
or
xchg
ss
addb
or
mov
sbbb
mov
pop
mov
pop
sbb
jg
xor
fiaddl
sbb
es
push
orb
ja
lods
les
add
gs
lds
lods
call
xchg
jbe
cmp
lock
xchg
dec
add
adc
xchg
dec
pop
in
cmc
in
lcall
push
xor
add
mov
sahf
out
jb
push
xchg
loope
popa
and
sbb
jb
and
adc
xchg
xchg
xor
mov
add
mov
pop
int
popf
sar
pop
ja
es
cli
jle
cmp
mov
and
sub
iret
push
cwtl
cwtl
pop
lods
popf
lock
in
and
lret
lods
fwait
mov
push
pop
fldenv
jne
push
insb
mov
cli
push
rcl
push
push
sub
pop
or
jle
xor
out
xchg
gs
lea
cmpsb
pop
push
push
xchg
pop
mov
pop
lock
int3
push
mov
pop
mov
inc
lahf
sub
pop
dec
xchg
in
xchg
adc
ljmp
jne
outsl
inc
jo
leave
cmc
mov
sub
hlt
inc
and
xchg
xor
dec
or
fbld
cmpsb
and
xor
jle
gs
and
stos
mov
mov
mov
out
mov
jb
dec
icebp
adc
adc
lcall
stos
jl
jae
outsb
stos
setge
jle
out
inc
xchg
lret
sbb
iret
cwtl
dec
adc
cmp
aaa
imul
clc
bound
or
adc
or
lret
cmp
jae
out
xor
inc
rcll
mov
rcrb
lea
xor
mov
lahf
push
push
add
out
insl
xor
stos
in
data16
and
idivl
imul
js
outsb
add
in
pop
dec
popa
inc
mov
out
xor
sbb
cmp
repz
std
js
in
push
clc
mov
sub
mov
out
rcll
push
jae
jbe
loop
jb
imul
mov
pop
add
lret
iret
sub
cli
dec
mov
out
inc
lahf
sbb
dec
adc
push
aam
sub
imul
jge
adc
sbb
or
cli
stos
xlat
inc
fisubl
pextrw
imul
out
nop
imul
push
loopne
xor
or
adc
dec
xchg
cmp
movsl
popf
dec
cmp
xlat
cmc
mov
adc
test
cmp
mov
mov
aam
push
fidivs
mov
mov
sub
inc
je
hlt
sub
inc
scas
cltd
pop
ja
mov
int3
lret
fcomp
pop
cld
push
jmp
lds
add
arpl
push
into
imul
repnz
lret
dec
mull
pop
pop
mov
mov
inc
pop
dec
in
xchg
cs
inc
ds
dec
dec
loopne
dec
push
sub
or
mov
shlb
or
add
sub
push
add
push
rcrl
cmp
loopne
mov
fisubrs
push
outsb
aas
adc
sub
xlat
mov
es
sub
pusha
sbb
push
pusha
jmp
pusha
bnd
pop
mov
mov
sar
incb
repz
in
pop
pop
push
sbb
xor
cmp
aaa
lock
mov
ret
lods
dec
insb
andl
dec
jmp
loop
aaa
xchg
cld
sbb
ret
xchg
inc
pushf
or
addl
js
insl
push
dec
and
mov
inc
xor
sbb
and
fsincos
cli
jg
and
out
mov
lret
rcrl
mov
mov
repz
int3
pop
imul
insb
push
divb
xchg
xor
push
adc
ss
lret
lds
lret
cmc
enter
mov
cmp
dec
fisubl
xlat
mov
jns
mov
sub
or
xor
push
push
flds
push
mov
adc
adc
cmp
jbe
push
hlt
nop
jae
dec
hlt
sbb
fs
mov
pop
and
cs
aam
imul
aam
fwait
mov
jae
rclb
inc
jo
dec
pop
or
pop
jno
push
sbb
mov
and
mov
xchg
hlt
test
lret
lret
out
xchg
push
lahf
das
fisubs
in
jg
popa
inc
mov
jmp
ret
pusha
pop
cmp
mov
dec
xor
outsl
test
push
rorb
sti
pushf
stos
sti
inc
mov
addr16
add
insb
lock
push
jl
inc
push
cmp
xor
dec
inc
lea
rorb
ret
mov
push
sub
jge
mov
cltd
shrl
inc
adc
inc
mov
hlt
std
add
negl
mov
icebp
mov
inc
jbe
inc
inc
inc
mov
in
aad
iret
shll
mov
xor
cmp
adcl
adc
jg
frstor
jae
cmc
inc
push
lea
es
test
inc
mov
mov
testl
in
sbbl
adc
mov
in
mov
jnp
nop
popa
cld
cmp
loope
repnz
int
add
into
mov
or
lahf
dec
pop
nop
jp
hlt
cmc
mov
or
ret
in
mov
in
xor
call
movsb
clc
push
bound
xchg
mov
fldt
and
ret
hlt
xor
dec
stos
rorl
xorb
gs
and
mov
sbb
fcomps
cmp
xor
add
and
ss
pop
inc
lret
arpl
shrl
adc
add
xor
jg
test
lods
xor
and
mov
decb
repnz
push
push
mov
enter
fsubp
lret
ds
loop
mov
jle
or
je
mov
gs
pop
repnz
xchg
outsb
sbb
lock
jecxz
mov
pop
cmp
sub
jmp
cmpsb
and
popf
insl
lea
mov
lds
lea
not
fisubrl
xor
stos
daa
int
xchg
inc
jg
mov
cwtl
xor
pop
ret
cmp
fisubrl
xchg
inc
int3
rcll
jne
sub
xlat
mov
pminub
lock
cld
mov
aad
xor
jl
mov
sbb
cltd
sub
pusha
dec
mov
lds
push
aam
icebp
mov
mov
mov
mov
mov
inc
in
loope
jo
daa
inc
movsl
mov
push
inc
lahf
xchg
mov
ret
mov
popf
sbb
notb
xor
enter
push
jno
addr16
in
dec
insb
ljmp
outsb
imul
shrl
xor
and
jae
scas
cmp
mov
sbbb
test
xchg
push
mov
jmp
into
cmp
dec
cmp
lods
xchg
mov
jo
stos
addr16
inc
push
jnp
shlb
jge
mov
push
inc
cmp
fcomps
rolb
loope
xchg
scas
out
jmp
loop
lds
aam
mov
pop
pause
fcoms
shl
call
push
xor
push
cmp
popa
ja
add
mov
add
movsl
sbb
xor
test
mov
iret
std
dec
xchg
movsb
dec
mov
lret
push
aam
or
aas
sbb
adcl
movsl
or
ret
jmp
pusha
xorb
and
scas
pop
test
cmp
je
push
cmp
sub
xor
test
xor
je
lcall
subl
lret
mov
sbb
cmp
shr
addr16
jb
pop
cld
les
mov
pusha
cmp
mov
and
sbb
jle
cld
xchg
inc
inc
repnz
mov
pop
test
xchg
testb
mov
hlt
sbb
mov
xchg
add
leave
test
out
and
lods
pop
loope
mov
adc
dec
sbb
loope
xchg
int3
fistps
sbb
in
lock
rclb
mov
repnz
sub
cmp
mov
and
dec
add
loopne
scas
roll
xchg
les
cmp
divb
mov
xchg
push
aas
shrb
clc
push
incl
lds
into
xchg
scas
mov
cltd
xchg
in
cmpsl
xchg
dec
push
cmp
aad
fstps
andb
pop
fwait
mov
cmp
or
push
jmp
in
xchg
mov
or
jp
xchg
add
jle
sub
cli
push
stc
xor
jecxz
mov
mov
mov
push
mov
push
xchg
xchg
es
lods
mov
add
test
xor
push
in
and
jle
ja
inc
jb
inc
adc
and
fwait
mov
jbe
out
mov
hlt
clc
pop
push
jle
aas
pop
sbb
inc
repnz
arpl
push
cli
out
rolb
out
mov
push
mov
inc
sbb
pop
mov
inc
sti
test
xchg
cmp
mov
xchg
inc
orl
inc
les
xorb
out
mov
or
push
rolb
dec
aaa
test
ret
cld
hlt
jp
lcall
dec
ds
stos
mov
xchg
lods
bound
aas
cmp
icebp
adc
in
filds
push
sbb
jns
xchg
testb
dec
jg
lea
xor
push
clc
vminss
inc
xchg
jg
jnp
sub
pop
adc
ret
lea
arpl
lods
add
cmp
lods
dec
sahf
sbb
nop
enter
cli
xlat
cltd
or
test
jnp
jns
or
aaa
shlb
dec
repnz
mov
loopne
cltd
icebp
jmp
sub
jno
mov
in
ljmp
xor
hlt
mov
fadds
cmp
int
sub
mov
pop
mov
xor
in
sbb
sub
loopne
scas
sub
fnstenv
pop
lea
pop
test
int
notl
orl
testb
je
fdivrs
pop
and
xor
and
das
ds
sub
mov
test
jmp
add
lret
shrb
cli
sarb
scas
dec
in
mov
mov
test
sbb
xor
adc
mov
mov
sbb
jne
cmp
jbe
call
fs
pop
xlat
inc
pop
in
in
or
sbb
mov
dec
jnp
mov
insb
cli
jmp
adc
pusha
sbbb
mov
dec
dec
loope
lahf
aam
fadds
add
imul
dec
mov
lock
dec
jb
jbe
sarl
lahf
mov
jle
sbb
leave
hlt
int3
stc
pop
outsl
mov
jnp
xchg
adc
jns
rol
xor
divl
data16
in
mov
arpl
js
pop
loop
mov
in
cmp
mov
test
addr16
in
imul
cmpsl
cmp
mov
pop
rcrb
shlb
fsubrs
dec
add
mov
xchg
lahf
cmc
xchg
lret
sub
mov
adc
inc
adc
cli
push
sbb
fdivrs
in
add
ficompl
test
nop
mov
lahf
pop
mov
scas
aaa
xorl
popf
sub
inc
push
sub
or
adc
fsubp
or
cmpsb
daa
and
js,pn
sbb
mov
jge
lcall
mov
mov
pop
push
mov
jg
call
mov
push
scas
pusha
gs
insl
mov
insl
stos
push
sub
cmp
gs
ret
mov
xor
sbb
shrl
sub
inc
outsb
add
ss
mov
fildl
test
nop
ffree
leave
sbb
mov
add
mov
insb
shll
xor
mov
or
imul
rcr
ret
push
in
sub
jae
jns
fidivrl
pcmpeqd
mov
mov
inc
xlat
sbb
pop
mov
pop
inc
hlt
and
cld
enter
pop
xchg
sarb
push
or
es
jecxz
test
mov
lcall
jg
call
dec
xor
in
cmp
cli
mov
push
divb
jbe
inc
sub
jno
jg
mov
jno
out
add
xor
aas
xchg
xchg
pop
cmp
dec
out
or
mov
fistpll
stos
inc
jbe
ja
lea
iret
push
inc
test
lret
out
jmp
scas
xchg
add
and
sbb
push
js
not
push
movsb
jecxz
add
jbe
add
popa
and
mov
xor
inc
lcall
mov
pop
mov
push
cmc
mov
xor
popf
ror
push
lods
std
pushf
mov
cs
xchg
cmpb
mov
mov
mov
pop
mov
cld
dec
cmpsb
movsb
mov
lret
add
mov
in
add
das
jns
fidivl
push
out
imul
test
pop
fistl
and
int3
mov
cmp
and
testb
mov
sti
fildll
sbb
pushf
push
fs
cmpsl
push
inc
pop
loope
sbb
dec
mov
mov
gs
pop
sbb
adc
icebp
sahf
push
std
xchg
mov
cld
inc
pop
sub
ds
mov
in
mov
cwtl
loopne
fdivs
lret
enter
jne
lahf
loope
cmp
popa
push
xchg
add
rol
mov
lcall
movsl
push
jmp
lea
cmp
pop
loopne
jae
popa
lret
jl
sbb
mov
addb
adc
dec
mov
add
jmp
mov
stos
mov
mov
movsb
lds
movsl
cmpsb
and
pop
jmp
push
bound
fsubs
sahf
push
in
loope
pop
cmp
out
lcall
in
arpl
lods
mov
lock
push
inc
xor
shrb
cmp
or
push
aad
mov
mov
sub
pop
cmp
inc
test
popa
mov
loope
imul
xor
and
call
test
inc
rcrb
sbbl
push
xchg
dec
mov
jno
iret
push
mov
je
pushf
lret
mov
pop
and
push
sub
lock
jle
push
rcl
rorb
inc
add
adc
mov
out
cmpsb
lret
jmp
xchg
loope
jge
mov
mov
pop
imul
xor
popa
mov
cmp
insl
scas
leave
push
inc
bound
rclb
mov
dec
movsl
and
mov
scas
in
sahf
ss
enter
mov
add
mulb
popa
nop
lcall
aam
push
scas
les
jno
cli
cmpsb
repnz
xchg
cmp
nop
clc
cmpsb
push
jae
enter
pop
sub
push
xor
scas
xor
jle
dec
mov
xchg
mov
jo
cmpsl
ror
pop
test
lods
mov
imul
scas
mov
lcall
add
nop
sarb
pop
dec
int
clc
xchg
les
jb
es
lret
sub
cmp
add
sbb
in
sub
mov
enter
jl
arpl
cmpsb
cmpsl
and
leave
test
lds
in
sub
jle
mov
ret
lods
mov
xor
sbb
call
sarb
popf
popf
adc
mov
jnp
std
push
mov
ljmp
leave
sbb
jmp
shlb
mov
cs
xchg
mov
filds
sub
int
sub
mov
das
xchg
lock
rolb
stos
fdivrl
iret
lahf
mov
pusha
mov
pop
jg
sub
inc
adc
stos
and
add
mov
lcall
js
cmp
shll
mov
lcall
xor
push
mov
rolb
pop
inc
test
xlat
adc
and
incb
mov
or
insl
pop
inc
or
je
mov
and
fwait
lret
jno
adc
es
add
lds
xor
subb
mov
mov
pop
in
xchg
cmp
sbb
xor
push
test
dec
mov
sub
lods
sbb
clc
pop
mov
cli
push
push
cwtl
sbb
and
lea
push
ljmp
loop
adc
mov
xor
adc
pop
or
jne
jae
dec
xchg
idiv
into
xor
xchg
out
xlat
movsl
inc
jl
push
daa
shlb
push
lods
enter
cmc
ret
mov
pop
and
insb
mov
stc
and
pop
jne
jg
je
xchg
dec
dec
mov
fwait
cli
rcll
cmpsb
xor
test
hlt
jnp
pop
sbb
cld
add
das
inc
les
dec
adc
enter
pop
in
sahf
add
jne
jae
xor
data16
jno
and
ss
pop
sub
hlt
stos
jb
movsl
sub
sub
ljmp
jl
dec
cmpsb
cmpb
lods
ficompl
push
mov
cmp
hlt
les
push
lret
push
jg
xor
cld
inc
push
xchg
leave
sub
leave
rorb
es
ret
or
repz
call
movsb
insb
xchg
xchg
mov
mov
inc
add
repz
cld
ss
loopne
movsb
je
shlb
shlb
pop
jecxz
pushl
mov
faddl
inc
or
clc
xor
adc
or
and
in
pop
push
int3
jne
fs
mov
add
ja
in
cmp
test
or
notl
lret
dec
adc
add
push
jp
ss
stos
in
mov
cwtl
dec
add
loopne
cmp
dec
push
pop
icebp
xchg
mov
and
movsl
lret
dec
dec
fwait
lods
sbb
or
sbb
pop
adc
push
cmp
add
mov
rolb
sarl
lds
fs
jg
ds
ja
sarl
dec
jno
sub
add
int3
aaa
push
outsl
clc
mov
into
mov
ss
mov
aam
xor
push
cmp
jle
es
test
or
pop
push
sbb
bound
cmc
insl
rcrb
pusha
je
mov
sub
mov
ficompl
cltd
push
int3
shll
mov
mov
mov
out
rcrl
lahf
mov
add
insl
xor
inc
aad
rclb
cmp
out
insb
test
push
adc
add
xor
stc
sbb
mov
and
push
loope
adc
jmp
test
mov
xchg
movsb
fisttpl
jne
loop
dec
push
sbb
enter
and
jl
dec
adc
iret
mov
pop
repnz
mov
xor
push
cmp
mov
adcl
cmpsb
outsl
xchg
xchg
popa
sub
dec
and
push
adc
lds
movsb
push
les
scas
sub
loopne
test
iret
sbb
adc
cmp
xchg
cli
jb
jns
cmp
je
xabort
mov
or
cs
mov
sub
hlt
fnsave
jecxz
jnp
cltd
adc
inc
mov
mov
xchg
ja
std
out
loopne
push
push
xchg
hlt
mov
loop
push
cmp
sti
stc
bound
inc
xchg
jbe
mov
movsl
lods
cmp
cmp
shlb
aam
pop
fdiv
pop
xchg
dec
sub
ficomps
mov
movsb
inc
adc
fsub
movsl
cli
cmpb
adc
movd
clc
mov
adc
inc
inc
test
pop
lahf
cld
push
mov
out
lods
jae
mov
push
mov
mov
sub
xor
outsb
add
or
adc
mov
xchg
imul
jmp
dec
arpl
add
dec
xchg
pop
xchg
jnp
mov
mov
mov
xchg
cmp
fucomi
imull
jnp
push
jne
inc
inc
mov
xchg
mov
push
cltd
lds
pop
add
and
ret
fdiv
add
cld
in
inc
fildl
cwtl
incl
or
xorl
and
pop
add
mov
aas
mov
mov
outsb
mov
cmc
outsl
mov
fidivl
cmp
enter
push
call
cmpsb
mov
aad
and
ss
push
dec
ja
cwtl
jge
inc
push
call
in
dec
mov
ljmp
rcrl
pushf
imul
sub
sub
bound
inc
arpl
mov
xchg
jne
or
stos
sbb
callw
js
imul
pop
lret
inc
int
sbb
jno
sub
pop
jo
mov
pop
push
sbb
std
push
cmp
cmp
and
xor
dec
pop
testb
mov
mov
repnz
pop
stos
leave
sbb
cli
sbb
inc
popa
xcrypt-ctr
cmpsl
cwtl
push
outsb
push
xor
sarl
cmc
pop
xor
rol
es
sbb
movsb
les
jl
inc
dec
dec
pop
xchg
mov
adc
aaa
stos
cmp
in
fimull
lret
testl
jmp
cmp
fs
cmpsb
and
add
sub
inc
and
pop
pop
in
rcl
mov
and
and
mov
js
jle
stos
lea
cmpsl
or
add
pop
daa
jge
cs
mov
sub
shrl
dec
inc
jae
mov
outsb
sub
pop
xor
dec
dec
lods
jae
cmp
rorl
stos
test
test
and
xchg
xor
xchg
pop
push
or
jg
or
inc
adc
mov
xchg
stc
mov
std
pop
cli
stos
sti
ret
add
push
in
sub
in
mov
jns
sti
mov
push
in
mov
pop
icebp
das
or
not
mov
adcl
out
scas
fcomip
push
js
dec
cld
int3
nop
mov
inc
mov
xor
lret
lahf
or
enter
lock
xchg
sbb
xor
lcall
sbb
xchg
adc
add
xor
scas
scas
rcrb
ffreep
enter
xlat
xor
and
adc
or
rolb
test
lds
add
ja
xchg
inc
pop
cmp
insb
out
imul
jae
mov
rorl
jo
xor
outsl
mov
push
fxam
pop
jge
jl
aam
lds
mov
fcmovne
dec
push
aam
cld
pop
cmp
ret
shrl
idiv
cmp
pop
mov
cmpl
ja
rcrl
push
inc
orb
inc
add
mov
in
cmp
pop
cmc
test
daa
mov
xchg
cli
mov
out
mov
or
sub
aaa
cmp
lods
mov
stos
fcoml
push
cmp
push
dec
mov
sbb
sbb
pop
mov
mov
test
jmp
popa
and
pusha
cmpsl
sub
adc
shl
out
je
xchg
mov
sarl
push
and
dec
sahf
or
mov
push
jno
daa
push
and
test
lods
add
mov
sbb
add
or
leave
mov
push
in
xor
and
xor
mov
mov
pop
fldcw
add
fidivs
aas
cli
cmpb
cltd
sbb
add
mov
xor
lods
xor
mov
mov
ljmp
ret
inc
dec
and
fldcw
xchg
pusha
sub
cmp
push
imul
getsec
cmp
sbb
cmc
arpl
lgs
pop
clc
jmp
mov
ret
jg
stc
or
and
mov
jmp
adc
mov
cltd
gs
mov
ja
inc
dec
and
dec
addr16
adc
pop
mov
push
jbe
push
pop
in
insb
sbb
add
pop
lret
cmpl
add
int3
bound
fdivs
ficoms
ret
jmp
hlt
xor
sbb
fists
fsubr
mov
insb
int
jl
sub
out
or
mov
mulb
repnz
divl
pop
fs
ss
xor
sbb
dec
leave
mov
mov
inc
mov
lds
sbb
adc
jbe
mov
inc
out
adcb
shlb
xchg
inc
pop
cs
aad
int3
insl
cltd
es
sbb
push
inc
out
add
das
iret
jmp
sarb
sub
inc
xchg
imul
add
jne
mov
repz
cmc
and
punpcklwd
xor
out
lods
adc
adc
les
test
pusha
xlat
push
stos
dec
rcrl
scas
ss
nop
aaa
aad
cmp
enter
jecxz
xchg
xchg
decb
call
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
iret
popf
dec
jmp
or
jp
sub
push
mov
popa
push
push
adc
xchg
cmpsb
push
xor
cmp
mov
inc
imul
mov
movsl
sbb
mov
adc
push
andb
push
push
lds
sbb
dec
inc
pop
shrl
push
add
xchg
dec
int3
stos
sbb
call
lcall
and
lods
mov
pop
cmp
in
movsb
xchg
cltd
sbb
daa
arpl
shll
xor
shlb
sbbl
mov
dec
gs
in
mov
mov
inc
cld
dec
mov
dec
mov
ret
push
pop
pop
xchg
jle
pushf
sub
mov
aas
mov
xor
lods
inc
pop
add
ss
insb
or
mov
sahf
push
sbb
insl
cs
dec
cmp
mov
fcmovbe
ds
rclb
rol
xor
push
dec
xchg
push
pop
dec
xchg
dec
and
insb
arpl
sub
push
test
inc
hlt
sbb
decb
pop
mov
mov
fadds
arpl
mov
and
test
mov
mov
mov
shl
jno
repz
stos
or
xchg
jb
flds
sbb
stc
out
pop
hlt
xchg
mov
push
inc
shll
ret
pop
sub
add
sub
ljmp
xchg
movsl
push
xchg
aam
cld
pop
cmp
sbb
cmpsb
nop
hlt
push
pushf
jnp
jns
sub
mov
jmp
xchg
sbb
or
clc
mov
cmp
roll
fwait
scas
cltd
push
popl
frstor
adc
aad
xor
jge
mov
aas
xor
and
push
mov
push
xor
pop
test
scas
dec
add
icebp
inc
xchg
shrl
movl
dec
testb
xlat
subb
fwait
ds
repz
sub
adc
mov
insl
or
inc
mov
mov
gs
and
xor
sbb
dec
push
jl
test
push
mov
sub
mov
andb
pushf
sub
xor
cmp
xchg
popf
dec
mov
sub
lret
adc
sbb
adc
scas
popf
arpl
xlat
popf
or
mov
cmp
adc
cmpsb
mov
shlb
jl
mov
mov
xchg
push
out
pop
pushf
xor
mov
int
bswap
jnp
scas
cli
mov
enter
imul
shll
mov
fistpll
stos
gs
xchg
and
jge
or
and
mov
cmc
fdivl
mov
lods
adc
pushf
das
mov
scas
cmp
xor
roll
repnz
dec
cmc
cmp
inc
jne
gs
push
pop
push
xor
rolb
movsb
cmpsb
in
mov
cmpl
cld
xor
xlat
je
pand
mov
popf
jge
sub
push
mov
xchg
sbb
dec
imul
add
mov
adc
xor
mov
stc
fstpl
xlat
adc
push
in
call
les
mov
mov
shl
xor
adc
jmp
fwait
mov
shlb
pop
xchg
pop
or
push
rcrb
jl
test
scas
inc
xchg
pop
jecxz
xchg
loopne
xchg
aaa
ret
adc
jge
adc
aad
fbld
leave
fucomi
lahf
pop
stos
gs
into
adc
and
out
xchg
or
and
cmp
out
sbb
testl
mov
push
inc
icebp
hlt
xchg
test
adc
int3
lret
inc
xlat
cmp
xchg
dec
orl
ds
fwait
xchg
fistpl
les
xor
jmp
mov
lds
mov
xchg
fcmovnbe
mov
in
adc
and
jle
int
rcll
pop
push
popf
icebp
cmpsb
adc
enter
enter
mov
stc
or
add
jns
xor
clc
rcll
cmp
cmpsb
push
insb
pushf
mov
lahf
or
xlat
add
mov
mov
lods
frndint
roll
bound
js
sub
and
adc
cmp
sub
add
arpl
shlb
pusha
xchg
call
ret
in
scas
fnstsw
or
test
cltd
ret
lds
stos
mov
mov
mov
outsb
imul
xchg
scas
ja
add
mov
outsb
enter
fxch
cwtl
das
pop
mov
jae
lock
movsb
xor
pop
orl
mov
popf
dec
fdiv
add
sbb
xchg
int
push
test
mov
pop
fbld
add
test
incb
jg
dec
xorl
jl
pop
mov
xchg
inc
mov
jg
jnp
mov
sbb
negl
mov
sahf
xchg
jns
and
adc
notb
testl
sbb
pop
cmp
jns
mov
test
cli
daa
and
sbb
pop
sbb
lret
pusha
xchg
pop
sbb
push
movsl
in
int
cld
xchg
sub
xor
mov
sbb
inc
add
cmp
sub
add
popf
xchg
stc
outsl
sbb
mov
add
inc
pop
lds
imul
jnp
clc
rcll
push
mov
gs
das
xchg
dec
mov
cld
xor
int3
mov
aaa
mov
rcrl
popa
cmp
jge
mov
je
mov
ljmp
xchg
aam
jae
fiadds
dec
and
lds
push
pop
cmp
dec
xchg
stc
jmp
ja
lds
jno
push
add
xor
jno
pop
pop
mov
into
lfs
mov
cmp
and
orb
cmpsl
adc
cltd
fsts
mov
sub
cli
lret
into
loopne
pusha
pop
pop
dec
pushf
xor
out
rcrb
pop
sub
mov
popa
lea
pop
cmpsl
dec
in
imul
aas
test
pop
aas
dec
lret
repnz
mov
sti
frstor
fldl
or
inc
imul
lcall
roll
rorb
push
stos
or
sti
lods
repz
cmc
adc
push
add
test
ret
cmp
in
mov
cmp
nop
mov
xor
cmc
imul
cli
enter
iret
cmp
and
in
push
fwait
mov
cmpsb
dec
mov
push
cmpsb
cltd
sbb
xor
test
pop
imul
out
fisttpll
lock
adc
sahf
cltd
lret
loopne
adc
and
mov
or
sub
push
sub
xor
push
out
jge
dec
adc
mov
aad
xor
mov
mov
fmuls
ret
data16
push
test
mov
es
push
cmp
mov
mov
xchg
adc
and
add
into
cmpb
shlb
cmc
or
dec
bound
push
int
or
cmp
mov
cmpsl
int
fbstp
dec
imull
push
test
adc
dec
or
cmc
mov
frstor
sub
pop
aad
jb
sub
pop
imul
daa
push
cmc
mov
sbb
es
pop
and
sub
jne
push
imul
mov
out
lods
cmpsb
test
or
jp
cmp
pop
arpl
addr16
xchg
push
insb
cwtl
sahf
loope
mov
dec
mov
mov
or
mov
dec
insb
mov
mov
rolb
pop
push
pop
mov
rcrb
lea
lahf
push
and
pushw
int3
jp
out
out
js
roll
outsl
int3
frstor
mov
fs
aam
movsl
dec
pop
dec
cmp
out
std
jge
and
and
adc
and
sub
jnp
push
inc
sub
jge
dec
mov
hlt
adc
js
rorb
lahf
dec
mov
jge
or
dec
out
fiaddl
pop
push
and
add
mov
inc
aad
or
cmc
leave
cmpsb
or
xchg
in
ret
xor
or
inc
mov
mov
and
adc
js
cmp
inc
test
cmp
push
push
xor
xor
cmp
jne
mov
cli
inc
xchg
xchg
and
xchg
jae
aaa
jg
dec
out
stos
xchg
test
lods
lds
inc
iret
inc
dec
push
loop
xor
clc
je
sub
cmpsb
bt
push
mov
add
xchg
sahf
out
sbb
mov
pop
cmpsl
or
push
jmp
fimuls
shr
roll
outsb
mov
in
hlt
or
xorb
sbb
xchg
xchg
inc
fsubl
push
fwait
xor
rcl
inc
pusha
push
jl
xchg
popf
fdivrp
out
in
cmpsl
pushf
cmp
mov
lcall
adc
shlb
insl
xor
arpl
test
dec
add
mov
mov
fistpll
xor
pop
xor
stos
or
cwtl
cmpsl
pop
imul
xchg
cwtl
into
xchg
pop
cmp
mov
lcall
xorl
push
into
je
repnz
mov
stos
and
jecxz
dec
ficoms
les
nop
loope
flds
movsb
insl
icebp
mov
dec
sbb
js
incl
pushw
fwait
pop
movsl
inc
inc
add
jecxz
pushf
push
mov
cmpsl
incb
popf
xchg
or
dec
es
shr
xor
int
pop
sbb
pop
daa
es
sub
push
fwait
cmp
je
insl
xor
fiadds
fiadds
xchg
pop
jb
icebp
and
push
lret
inc
aam
xor
sub
xor
or
ljmp
dec
push
push
dec
repz
lahf
mov
hlt
test
mov
or
xchg
xor
sahf
mov
inc
fnclex
outsl
adc
mov
xlat
cs
pop
add
mov
in
jmp
mov
mov
fsub
addr16
or
in
cmc
repz
mov
add
iret
jbe
xor
mov
xchg
cli
push
repz
out
sahf
sub
ss
adc
in
xchg
sub
xor
sbb
inc
push
lds
cmpl
movsl
dec
xchg
jmp
test
scas
fs
leave
rcrb
push
in
mov
jb
pop
divb
std
sub
rcll
push
loopne
xchg
pushf
pop
push
sub
test
sub
mov
push
xchg
in
sub
lret
mov
and
lret
jns
int
std
movsb
jae
adc
add
jns
movsb
lods
cmpsb
loope
push
test
testb
add
push
cmp
call
jle
lret
pop
adc
cmp
mov
jg
push
cmp
jmp
pop
cltd
jle
cli
xchg
jb
arpl
mov
into
dec
shr
jno
push
das
cmp
lret
xor
arpl
sti
xor
cmp
cld
ss
mov
push
repz
pop
sub
mov
cmpsl
and
sbb
mov
loope
stos
jp
sub
pop
inc
int
mov
inc
adc
dec
mov
mov
sub
jnp
adc
mov
or
jae
mov
and
hlt
int3
lock
dec
mov
push
bnd
xchg
es
cmpsl
sbb
xor
ret
jns
aam
xchg
insb
sbb
sarl
xor
jne
xchg
mov
pop
into
jle
scas
test
fs
pop
into
sbb
jle
sub
aaa
pusha
add
fbstp
gs
loope
mov
ja
mov
or
into
mov
mov
xor
jp
jo
int3
in
adc
dec
fdivrp
pop
xchg
and
je
xchg
adc
mov
stc
mov
mov
stos
aam
cmp
pop
sub
pshufw
push
push
cwtl
ret
dec
iret
ja
push
sub
sub
lcall
ljmp
dec
adc
rolb
inc
js
in
imul
fstpt
popf
xlat
test
ret
mov
cmp
rorb
jmpw
pop
aaa
sbb
inc
or
ljmp
pop
pop
je
xor
sbb
aaa
iret
push
mov
cmp
aam
or
or
js
int3
andb
dec
ss
dec
insb
repnz
mov
lea
rorl
adc
xchg
dec
xchg
aad
cltd
in
mov
cmp
pop
shr
into
repnz
ret
out
sub
pop
sbb
mov
jo
cmc
mov
jle
mov
lea
push
sbb
test
mov
repz
jp
push
sub
mov
scas
xor
dec
mov
sub
fimuls
add
mov
sub
or
scas
push
pop
in
test
aaa
movsl
cltd
addl
dec
test
test
shll
add
mov
popf
lds
mov
repz
and
pop
sbb
inc
repz
test
sub
jp
jmp
movntps
orb
xor
xor
insb
mov
lods
cmp
movsl
les
pop
aam
nop
adc
adc
mov
fcmovnu
enter
add
sub
pop
fwait
and
inc
push
sub
mov
jnp
or
xlat
ret
sub
cwtl
enter
shrl
test
mov
mov
or
xor
ret
or
into
xor
or
call
mov
adc
xchg
mov
jp
add
cli
call
mov
int
dec
adc
cmp
lods
push
int
push
mov
stos
mov
ja
loop
jp
arpl
sub
outsl
pusha
xchg
jne
fcoms
iret
lcall
adc
mov
pop
sub
jae
das
rcr
push
xorb
or
dec
mov
sub
mov
add
mov
mov
out
into
mov
ljmp
xor
fadds
ret
outsl
xor
mov
xchg
add
mov
lret
sub
js
or
das
ds
push
test
int3
xlat
insl
insl
test
cmc
popa
icebp
push
push
jo
mov
aaa
inc
xchg
xor
adc
test
in
nop
xchg
jae
ret
rcll
pop
test
cwtl
mov
sub
je
mov
loop
idivl
insl
jb
dec
and
add
fiadds
xor
pop
ret
adc
shl
pop
jae
inc
cmp
mov
xlat
call
add
test
enter
push
xchg
or
jg
xchg
push
shrb
lea
fstpt
cmp
imul
outsb
mov
xchg
mov
add
mov
lods
lcall
sbb
roll
mov
out
shrl
push
negl
jecxz
je
dec
ljmp
repnz
or
outsl
adc
test
xchg
and
pop
jne
imulb
xorw
xchg
cmpsl
cmp
fdivr
lods
pop
cli
inc
inc
cmp
adc
fidivrs
cmpsb
mov
sbb
int
lret
outsl
loopne
and
mov
and
nop
and
mov
pop
push
or
test
sbb
in
cld
sub
js
xchg
pop
cmpsb
bound
push
cmp
push
hlt
ds
jno
mov
inc
dec
enter
cmp
and
cltd
cli
dec
mov
mov
mov
or
inc
and
sbb
jp
sub
jae
jmp
mov
fidivs
mov
jl
mov
or
mov
ja
popf
rorl
or
adc
push
cltd
push
fwait
ret
flds
daa
outsb
pop
mov
hlt
mov
dec
pop
pop
sti
das
lret
mov
mov
xchg
mov
fldenv
filds
shl
fsubl
jge
add
sub
das
sbb
jmp
nop
decl
mov
fnsave
mov
cmpsb
inc
or
jae
cmp
jns
or
xchg
ret
dec
mov
mov
mov
adc
sub
daa
adc
pop
nop
inc
loop
cld
sti
adc
jecxz
and
sub
cltd
mov
addr16
add
xlat
scas
fimuls
mov
push
add
add
arpl
test
mov
dec
pop
sbb
in
and
push
nop
sti
and
insb
push
fstpl
adc
and
lret
shl
xbegin
in
test
or
aam
aad
addr16
and
xlat
jp
andl
lock
mov
int3
idivl
inc
push
clc
push
mov
shlb
adc
lods
xor
pop
xchg
stos
das
add
adc
jbe
jb
pop
add
and
movsl
scas
in
inc
xor
xchg
rcr
and
xlat
leave
gs
in
lahf
aas
in
and
mov
jb
cmp
dec
pop
mov
lock
sbb
aam
jb
sub
cmc
inc
ss
and
nop
lcall
inc
das
shll
xor
or
sub
pushf
sbb
enter
sub
iret
nop
mov
xchg
movsb
inc
mov
xchg
push
xchg
sbb
sub
ljmp
cmpsl
out
push
gs
test
mov
aad
pusha
popa
cli
mov
stc
mov
mov
imul
adc
push
mov
out
sub
cmp
xor
stos
push
mov
sbb
mov
out
lock
dec
mov
das
ret
xor
and
jp
cmp
mov
or
sub
jns
mov
call
or
xchg
sub
add
adc
leave
jle
mov
sub
and
xchg
test
jns
pop
pop
dec
pop
and
mov
repnz
lret
aas
push
hlt
mov
dec
mov
push
xor
js
add
outsb
and
or
test
outsb
jae
mov
cmp
shll
ss
xchg
sar
push
mov
mov
scas
sub
popf
hlt
cmp
loop
sbb
cld
lock
add
pop
xor
cmc
dec
dec
adc
pop
jns
push
sarl
push
cmc
fcoml
xchg
int3
jnp
pop
sub
xor
test
insb
daa
mov
push
test
xchg
jl
cwtl
adc
inc
push
mov
lcall
push
data16
int
jns
sbb
mov
adc
ret
aam
and
push
jge
pop
xor
add
pop
mov
or
stos
adc
push
adc
bound
js
bound
stos
lret
xor
lcall
scas
test
xor
dec
dec
push
jne
fs
mov
repnz
cs
sub
xchg
ds
sti
test
fmull
sub
dec
jmp
jge
and
mov
inc
jmp
push
lret
fwait
test
aas
jmp
mov
mov
push
mov
outsl
into
push
loop
xchg
xchg
push
addr16
ja
sbb
inc
sahf
negb
cmp
sub
sbb
roll
or
mov
mov
ds
dec
push
test
add
popa
or
fsubs
adc
sarb
and
dec
jno
add
fstenv
jbe
sbb
fmul
lods
xchg
adc
popa
mov
xchg
adc
clc
jo
and
sahf
stc
test
adc
fiadds
dec
dec
mov
mov
push
or
sub
mov
mov
mov
test
das
scas
fbstp
fucomip
push
aam
dec
hlt
xor
fidivrl
mov
daa
call
and
xchg
pop
mov
lret
out
dec
cwtl
jns
scas
mov
xchg
fdivl
cmp
jae
leave
rep
jge
int
int
and
mov
icebp
lods
std
mov
lcall
jbe
es
mov
stos
addl
xchg
mov
mov
test
cli
push
mov
push
or
xchg
popf
sbb
scas
mov
imull
xchg
ret
xor
fiadds
mov
lret
test
movsb
xchg
dec
jge
mov
rorl
iret
hlt
call
jb
ret
call
dec
and
int
fsubl
fiaddl
and
mov
xchg
jle
dec
in
cs
xchg
push
sahf
dec
xlat
fs
pop
test
pop
dec
orb
or
push
lahf
insb
xlat
test
push
add
mov
ja
dec
call
sbb
add
fistpl
loope
add
jo
mov
leave
in
xchg
outsl
in
xor
xchg
inc
dec
xchg
shlb
cwtl
xchg
sarl
decl
pop
push
jecxz
cmp
lea
cmc
cmpsb
sbb
outsl
add
dec
rolb
shl
push
jne
cwtl
mov
inc
push
addr16
imul
out
pop
adc
and
pop
adc
adc
xchg
fidivs
add
div
mov
jb
nop
mov
out
shr
bound
pop
jb
inc
cmpsl
and
out
loope
sbb
les
shrl
in
jl
mov
jecxz
lret
aaa
ret
insl
insb
shlb
mov
or
popf
loope
pop
jb
add
loop
imul
notb
mov
popa
jmp
fwait
jge
xor
int
dec
xchg
push
fcompl
or
lcall
jl
mov
mov
mov
test
fdivrl
dec
daa
adc
jb
cmpsl
notb
mov
int3
cmp
pop
add
push
mov
popf
push
jle
shl
inc
xor
in
shrb
mov
clc
and
aas
loopne
movsb
js
lods
inc
nop
mov
fwait
gs
dec
inc
adc
jo
stos
mov
pushf
outsl
lret
lock
dec
dec
inc
adc
dec
xor
rol
out
rclb
mov
lret
movsb
mov
xchg
mov
out
out
cld
inc
jl
and
daa
xor
pusha
test
std
addl
icebp
and
div
or
inc
mov
jno
pop
add
dec
xor
xor
test
fcomps
pusha
nop
jecxz
lret
pop
jmp
rcr
jle
les
addb
jne
insl
je
mov
incl
dec
sbb
adc
xlat
cmpsb
mov
dec
addr16
lock
popa
push
aad
push
enter
push
or
add
popf
cld
aas
mov
cld
adc
cmc
push
pop
sti
add
mov
shll
in
ds
adc
sub
scas
or
push
xchg
push
inc
push
push
shld
pop
cwtl
loope
nop
dec
sub
push
out
jo
add
mov
ja
xchg
push
adc
outsb
shrb
cmp
das
cltd
push
call
nop
push
pop
mov
sub
inc
test
add
add
addr16
shlb
dec
lock
mov
lods
and
mov
add
stos
shlb
sub
dec
in
inc
or
popf
cmp
adc
mov
fs
cwtl
jae
cmp
inc
xchg
xor
data16
cmp
lcall
pop
jl
les
sub
aas
push
mov
add
fdiv
or
xor
movsl
xchg
push
cmp
in
pusha
jg
mov
arpl
in
into
sbb
dec
pop
sub
nop
xor
jns
lahf
mov
enter
sub
or
mulb
and
pop
push
or
push
mov
mov
adc
int3
leave
std
mov
pop
sti
nop
enter
adc
inc
mov
adcl
push
cmpsl
lods
sbb
push
aaa
movsb
jecxz
pop
pushf
sbb
cmc
fistl
and
mov
dec
in
mov
test
dec
sbb
mov
andb
mov
jp
mov
scas
bound
lock
push
adc
in
mov
inc
cld
jle
xchg
jge
or
and
ret
jge
inc
mov
xchg
jb
loope
xchg
jge
add
push
jno
xor
ljmp
leave
out
mov
mov
jle
scas
loop
fisttpl
movsb
out
push
adc
in
adc
xchg
ja
jnp
add
clc
fwait
stos
int
dec
fisttpll
cmp
cmp
dec
dec
fsub
fwait
sub
add
ret
push
push
jns
adc
stos
mov
dec
shlb
jno
cwtl
inc
fidivrs
stos
sub
popa
stc
imul
ret
jle
add
je
test
pop
fdiv
int
cmp
inc
add
pop
dec
fs
mov
test
add
adc
inc
adc
ss
fs
adc
mov
aas
xor
mov
xorb
les
sub
test
push
cmp
lahf
push
mov
out
mov
sub
cli
nopl
or
int3
leave
cli
xchg
add
test
rcll
cmp
iret
push
jl
xchg
aas
bound
in
xchg
arpl
mov
and
addr16
push
fucomi
xchg
mov
cmpb
mov
ret
ror
mov
mov
jns
stos
outsb
xor
sub
fmulp
mov
dec
adc
pop
sbbl
xchg
pop
das
mov
mov
mov
mov
mov
call
fnstsw
pop
xor
mov
push
add
inc
jae
pop
xchg
push
repz
js
jmp
imul
inc
cmp
inc
mov
xor
or
and
test
xor
pop
negb
pushf
mov
outsl
nop
dec
jp
out
jmp
dec
out
dec
insl
fnstenv
pop
jbe
and
js
adcl
stos
icebp
jecxz
fistpl
push
mov
jno
xchg
sahf
and
xlat
fildll
push
lock
xor
cli
push
in
fsubrl
sub
push
dec
movsb
lcall
add
stos
cmp
push
push
sbb
inc
data16
jp
pusha
mov
mov
push
cli
ret
sub
popw
cmpsl
push
or
xchg
mov
popf
adc
test
mov
sbb
cld
cmc
push
mov
push
xor
out
sbb
jo
data16
scas
stos
and
adc
mov
cs
call
popa
sarb
sti
orb
shl
xor
mov
xchg
ljmp
mov
push
jl
insb
adc
jle
and
xor
xchg
popa
pop
test
addb
jb
aad
leave
mov
popf
adc
dec
pop
insl
add
pop
cs
adc
les
add
popf
xor
xchg
lods
lcall
sub
fistl
aaa
jecxz
dec
aad
sub
pop
movsl
subl
mov
push
lods
dec
jo
xchg
jecxz
push
int
and
and
push
out
cmpsl
int3
movl
fldcw
les
inc
lret
sub
lcall
mov
or
test
jbe
xchg
mov
xor
add
pop
or
fisubs
js
adc
sarl
imul
pop
mov
sbb
dec
push
and
add
pop
loop
into
movsl
mov
mov
inc
add
add
add
or
fdivp
cmp
psubw
inc
pop
or
mov
orb
jne
cld
push
loopne
mov
push
xchg
mov
sbb
fisubrl
aaa
mov
icebp
mov
test
mov
xchg
adc
cmp
lods
shrb
add
sahf
stos
xor
mov
push
scas
adc
lahf
sub
subl
imul
lods
mov
xchg
add
fst
mov
or
int
jmp
sbb
mov
movsl
fildll
mov
popa
and
jno
aad
jmp
into
pop
lods
and
inc
xor
fucomi
gs
arpl
dec
sub
add
adc
fwait
push
sbb
sti
pop
fnsave
sbb
out
add
adc
adc
scas
fisubrl
push
data16
shlb
pop
mov
add
mov
test
lcall
rcl
xorl
cltd
adc
xchg
sbb
aaa
in
outsl
loop
lock
cli
and
mov
in
lods
pop
sbb
sub
rorb
dec
xor
mov
mov
das
scas
mov
or
in
loop
in
cmp
insl
dec
and
test
scas
sbb
es
xchg
rorb
sub
movsb
push
lret
mov
int
cmp
and
jne
rorl
shll
imulb
int
mov
mov
jle
je
sub
fidivs
sarl
mov
cmp
dec
jno
and
gs
xchg
pop
sub
ljmp
mov
popa
stos
adc
push
add
jae
fwait
aaa
repnz
scas
es
test
mov
in
add
push
shrb
vmovaps
pop
iret
sub
jne
mov
xchg
pop
jg
mov
movsb
or
gs
fbstp
xchg
jg
mov
xchg
xor
ficoms
cmp
cltd
dec
jnp
push
fidivrl
xor
outsl
aas
lods
mov
sbb
dec
add
outsl
sub
fisubrl
xchg
mov
popf
sub
sahf
imul
mov
sub
add
ret
adc
and
push
ffreep
xchg
xlat
mov
outsl
xchg
sub
popa
mov
mov
fildl
mov
xchg
xchg
scas
mov
ss
es
mov
sub
repz
mov
jmp
lret
cli
fdivr
notb
repz
out
add
pop
dec
pop
icebp
pop
inc
push
xchg
hlt
daa
fists
xchg
test
sub
mov
sahf
mov
or
dec
gs
xor
pusha
fistpl
das
jnp
push
xlat
out
mov
jne
pop
push
call
iret
out
mov
mov
ficomps
mov
les
push
lret
jg
jmp
xchg
adc
popf
iret
sub
or
bound
repz
mov
or
loopne
sub
addr16
jp
mov
ficoms
les
lret
sub
adc
and
lcall
test
aam
adc
repz
icebp
das
mov
jns
ja
loopne
jns
push
cmp
jg
cmp
pop
rcll
je
mov
rolb
cmp
mov
andb
jnp
add
and
adc
imulb
out
out
les
push
and
insb
into
push
jge
mov
and
mov
pop
in
inc
jo
xchg
outsb
in
cmp
fsubrl
fildll
icebp
rcrl
mov
fnsave
lcall
pop
jbe
mov
push
iret
insb
loop
xchg
scas
push
cmp
adc
add
fimuls
or
adc
lcall
hlt
in
daa
fdivl
cmp
add
scas
xor
mov
addr16
jge
mov
mov
mov
test
rorl
lret
dec
out
out
in
sub
push
mov
sub
sub
pop
aam
repnz
jbe
cmc
test
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
and
jl
lcall
jp
push
mov
arpl
mov
test
inc
sbbb
imul
xor
dec
mov
mov
mov
fsts
jp
cltd
ja
push
mov
push
rcr
out
shlb
insl
cltd
stos
add
and
xor
cwtl
imul
gs
push
pushf
mov
adc
lods
pop
fnstcw
sbb
leave
cmc
sahf
push
jmp
and
pop
movsl
mov
mov
mov
xchg
inc
subb
add
lock
bound
incb
adc
push
data16
jge
jle
imul
dec
push
lods
inc
fmull
xor
lahf
mov
adc
cmpsb
and
int3
in
adcb
jnp
andl
and
and
inc
sahf
out
xchg
adc
sub
dec
pop
les
mov
or
xlat
jne
inc
xor
repz
xor
sbb
xor
leave
and
fsubl
mov
pushf
jnp
mov
cmp
js
cmp
in
jmp
sahf
leave
stos
mov
sti
xchg
and
inc
shll
fnsave
movsl
inc
mov
mov
mov
out
aam
out
pop
js
ret
mov
mov
xchg
pop
imul
mov
orb
lret
dec
xlat
lcall
fdivrl
stos
pop
sbb
pop
div
pusha
shl
fstps
insb
int
mov
mov
dec
push
out
mov
push
push
scas
ljmpw
xor
dec
inc
xor
mov
pop
jmp
mov
inc
js
shlb
ss
or
push
arpl
aam
or
dec
mov
loop
mov
xor
pop
mov
pop
push
repnz
std
incl
or
cmp
ja
push
push
jecxz
imulb
push
xchg
in
dec
jp
pop
xorl
xor
lcall
or
xchg
inc
loope
inc
pop
mov
ss
sub
stc
jge
mov
push
lret
pop
sub
inc
mov
dec
decb
imul
testb
aas
sub
jnp
push
int3
jb
pop
pop
dec
or
mov
imul
mov
sbbl
xchg
cmp
inc
out
mov
or
repnz
rcll
xor
xor
xchg
out
mov
add
rcrl
jo
pop
adc
movsl
daa
push
test
mov
jb
out
out
cmp
shl
cltd
scas
sti
mov
inc
xchg
inc
jno
and
call
aam
popf
mov
xchg
loop
mov
incl
mov
sbb
std
pushf
and
loope
sbb
mov
shl
sahf
insl
bound
insb
push
insl
mov
push
add
pushf
jbe
notb
stos
and
enter
sbb
pop
jns
jl
push
and
adc
mov
inc
xor
mov
or
daa
or
adc
or
sbb
sub
int
lcall
imul
es
mov
sub
jne
insb
dec
cmc
or
out
adc
add
xor
pop
or
dec
fwait
rorb
xor
out
loope
sub
xchg
pop
push
sub
sub
jne
mov
jge
mov
xchg
popa
push
push
add
mov
imul
sarb
loop
jbe
mov
repz
mov
or
mov
adc
cmp
mov
mov
fbld
mov
and
xchg
push
iret
testb
xchg
jg
int3
stos
test
and
jmp
xchg
adcb
outsl
bound
xor
jo
or
lret
scas
inc
push
icebp
sub
mov
xor
insl
insb
push
push
test
xlat
sub
fildll
imul
addr16
out
loop
ds
sahf
out
testb
negl
xor
shrb
sub
leave
push
pop
stos
add
dec
jle
test
push
test
xchg
push
loop
pop
sub
cld
xor
cmp
xchg
in
sbb
inc
cs
popf
pop
cmc
andb
sub
dec
in
enter
cmc
mov
stos
les
mov
jb
or
add
test
mov
xchg
lret
gs
cmc
pushf
xchg
lds
lahf
add
jne
int3
push
cld
and
iret
dec
mov
xchg
mov
push
cmp
mov
add
repz
orl
push
dec
mov
sub
addb
aad
jo
mov
mov
fs
jmp
scas
and
adcl
mov
add
nop
push
pop
daa
xchg
pop
pop
sbb
jecxz
iret
loopne
and
cmpsl
loopne
adc
pop
stos
mov
jecxz
jle
leave
and
mov
mov
lcall
in
mov
push
push
dec
or
jnp
lahf
sbb
std
fists
dec
into
adc
icebp
js
cmpsl
or
repz
sbb
sbb
jecxz
mov
sbb
hlt
xchg
loop
ds
lods
add
cmp
dec
fistpl
jns
and
adc
pop
inc
das
jne
in
les
adc
paddq
push
lret
mov
add
pop
loopne
call
pop
inc
pop
in
xchg
js
mov
lods
test
cmpb
sbb
push
or
mov
sbb
adc
scas
adc
add
aas
outsl
shl
add
pushf
loop
xor
les
loope
mov
jns
out
or
jb
mov
push
and
or
ds
cmpsb
mov
out
and
sbb
jb
hlt
out
out
fsts
or
int
loop
insl
leave
jbe
mov
js
mov
pop
mov
add
adc
jecxz
inc
xor
daa
ret
outsl
popa
adc
cmp
jge
cmp
mov
adc
call
and
xlat
cmp
cmp
cmpb
out
test
mov
jl
lods
pop
inc
or
adc
mov
xchg
leave
frndint
jg
mov
loop
sub
les
fsts
mov
push
stos
out
push
sbb
adc
dec
add
mov
dec
push
xchg
pop
lcall
fimull
xchg
lea
aam
divb
or
ljmp
lods
icebp
fimuls
repnz
mov
jg
cli
into
jbe
in
imul
addb
lcall
aas
dec
subb
cs
cmp
ss
lock
test
pop
repz
mov
jmp
inc
lock
dec
cmp
or
mov
sub
sub
ja
jb
clc
or
lret
int
sub
adc
in
and
lock
xor
or
cmpsl
into
js
add
pop
push
stos
inc
sub
jnp
call
sbb
pusha
sarb
nop
pop
cmp
mov
sub
out
jne
jle
inc
dec
int3
and
mov
dec
arpl
push
mov
xlat
fwait
mov
mov
shr
shrb
stos
jl
mov
outsl
call
dec
fs
ljmp
cmp
fwait
arpl
sbb
xor
inc
mov
sub
fstp
rcrl
cmp
aas
push
scas
out
push
sbb
scas
add
clc
aaa
jo
ljmp
mov
add
cld
sbb
push
dec
xchg
jo
dec
movsl
mov
leave
or
mov
or
rol
push
ret
das
outsl
cmp
sub
xor
enter
int3
jno
mov
fiadds
push
cmp
xor
dec
sbb
cmp
out
xchg
movsb
push
imul
dec
mov
add
out
adc
out
jp
in
cwtl
addb
or
clc
pusha
scas
pop
js
test
imul
inc
sarl
iret
pop
lods
pop
roll
lret
addr16
jb
int3
and
daa
bound
test
fs
es
add
jle
or
out
or
aas
or
cld
xchg
adc
lahf
xchg
mov
xchg
fdivs
dec
out
mov
int
jnp
adc
insl
mov
or
mov
insb
mov
cltd
mov
out
xor
pop
sbb
xchg
out
aaa
call
xchg
xchg
adc
push
and
ja
jecxz
out
jnp
sub
jg
imul
into
imul
pusha
push
push
mov
and
sbb
pop
push
push
divl
pop
xchg
loope
fimull
in
inc
xor
lods
lret
test
and
hlt
leave
mov
call
jne
shr
xchg
cs
das
in
push
push
cmp
dec
mov
pop
and
mov
fcompl
loopne
mov
mov
dec
adcb
dec
sbbb
add
add
dec
or
stos
mov
lcall
pop
adc
or
mov
adc
aam
mov
bound
or
adcl
sub
sbb
test
inc
pop
adc
out
fdivr
inc
shlb
jo,pt
clc
iret
stos
mov
in
xchg
sub
jle
adc
scas
jne
icebp
sahf
pop
rclb
cmp
adc
mov
and
mov
adc
iret
sbb
and
shrb
out
and
sarl
jb
jl
int
repnz
jg
bound
adc
adc
jl
insb
rorb
jge
mov
adc
sbb
jmp
lret
test
jle
sbb
xor
stc
int
sub
icebp
out
rol
test
sub
xchg
aas
iret
aas
pop
push
xlat
jbe
inc
adc
xor
mov
jo
ljmp
bound
lahf
mov
adc
call
xor
loopne
sub
sub
sub
pusha
jge
mov
inc
cvtpi2ps
mov
movsl
mov
imul
jmp
push
fsub
mov
repz
pop
cmp
cwtl
cmp
jae
fs
mov
cmc
and
repnz
xor
fs
xor
pushf
out
or
dec
pop
push
cmp
adc
outsb
xor
sbb
adcl
pop
in
sbb
dec
scas
lock
lret
dec
cmpsb
ds
std
cltd
pop
xchg
adc
imul
pop
and
jmp
popf
xchg
pop
xor
sub
lods
test
js
xchg
cltd
lock
mov
sahf
mov
pop
mov
pop
jmp
mov
xor
scas
cli
int3
pop
fwait
loope
inc
mov
push
mov
int3
test
or
or
stos
dec
cmp
inc
and
shr
call
ljmp
sbb
outsb
xor
js
dec
in
mov
inc
outsb
test
cmp
sti
test
stos
jno
movsl
ss
scas
in
pop
pop
repz
jnp
and
sub
push
fisttpl
fs
scas
insl
movsl
cmp
sbb
fildll
pop
lcall
int
lock
mov
mov
add
mov
pop
scas
xor
ss
dec
insb
push
sarl
pop
mov
in
sbb
adcb
inc
cmc
xchg
fdivrp
pop
push
xor
into
and
pop
mov
test
jle
mov
push
xor
ss
sub
into
icebp
fildll
out
push
mull
sbb
mov
add
dec
ss
xchg
daa
mov
push
sub
push
cmpsl
mov
xchg
push
sub
sbb
or
inc
repz
push
pop
mov
iret
lods
test
and
loope
mov
ljmp
dec
out
xor
clc
xchg
loop
popa
sub
les
pop
insl
fldcw
mov
mov
xchg
out
hlt
fisubrs
push
cli
aas
mov
mov
pop
incl
out
pushf
xor
ja
jge
cmpsl
insl
outsl
mov
aam
xor
add
jno
movsb
mov
mov
add
out
xchg
std
gs
ret
sbb
push
ss
ret
or
push
lret
outsl
lea
aad
out
xor
fidivl
fisttps
inc
xor
pop
sbb
jae
test
aaa
cmp
and
adc
fcompl
cmp
loope
insb
cld
inc
shl
mov
test
test
inc
ljmp
mov
jle
icebp
call
pop
xchg
fisubl
lea
ret
cmp
dec
pop
insb
adc
ret
cmp
sarl
mov
add
push
pop
rolb
sbb
mov
rorl
mov
lds
cmp
mov
arpl
dec
incb
cmp
push
lret
int3
jp
push
cmp
roll
xor
jmp
mov
dec
lea
and
or
adc
ret
rcr
sbb
or
fcom
movl
lret
lods
sbb
add
xor
imul
mov
lea
nop
jne
inc
sub
xor
adc
fadds
mov
inc
mov
xorb
popf
into
cmp
jns
xor
imul
xchg
ljmp
insb
and
push
mov
dec
in
subl
in
jp,pt
sbb
das
jmp
jg
out
xchg
jbe
sub
sbb
mov
mov
mov
xchg
aaa
mov
out
lea
popf
movsb
cli
es
pop
fs
repz
shrl
mov
jecxz
xor
xor
fwait
add
xchg
fwait
mov
inc
push
out
loop
mov
jb
or
lahf
jmp
test
loop
sub
jbe
je
adc
lods
sarb
js
mov
sarl
mov
test
push
cmp
xor
es
ja
negl
jae
mov
push
or
sub
mov
mov
mov
xlat
sti
imul
xchg
mov
push
call
mov
jl
bound
push
roll
mov
add
in
in
mov
xrelease
add
dec
pop
adcl
and
jl
mov
inc
cs
and
jno
xchg
loopne
into
pop
cmpsb
ret
jp
jecxz
bound
hlt
pop
xchg
xor
dec
xchg
push
in
push
adc
xchg
jbe
cld
sub
add
push
iret
or
insb
lods
test
pop
inc
aad
std
ret
je
lahf
insb
pop
add
dec
orl
push
imul
inc
leave
sbb
enter
js
fs
mov
and
int
jecxz
jge
mov
inc
push
sarb
jmp
sbb
ret
fsubrs
push
call
pop
and
test
stc
jg
jno
sbb
mov
std
sarl
gs
js
sti
into
pop
lret
pop
lock
cmpsb
out
mov
ret
leave
inc
imul
mov
es
pop
loopne
ret
test
into
jno
push
mov
jbe
pop
or
aas
mov
pop
movsb
xor
dec
cmp
and
aas
jle
dec
adc
dec
pop
pop
cmpsl
lds
sbb
jl
xchg
push
arpl
xchg
push
std
sti
adc
adc
adc
or
icebp
pop
jp
arpl
or
aam
lret
inc
xchg
imul
imul
cs
jmp
imul
fisubrl
jo
shlb
inc
pushf
test
cld
jno
mov
loope
xchg
or
mov
mov
xchg
dec
sbb
xlat
push
sbb
dec
or
push
push
xlat
enterw
test
jae
mov
inc
je
outsb
sub
pop
sbb
adc
mov
pop
sarl
sahf
outsb
test
insb
push
fsubr
push
and
int3
pop
sahf
movsl
shlb
mov
xorb
and
out
iret
orl
push
adc
add
push
cli
sub
adc
stos
xor
jp
pop
in
ljmp
enter
cld
adc
in
push
inc
outsb
inc
add
and
mov
pop
stos
mov
fldcw
mov
cmpsl
popf
xchg
cmc
repnz
push
or
popa
outsb
add
scas
lds
sahf
cmpsb
mov
mov
push
or
pusha
sti
lret
mov
int
xchg
addr16
cmpsb
lods
sbb
out
arpl
cltd
lods
ror
aad
add
sbb
xor
lock
xchg
int
sbbl
and
lods
repnz
mov
push
lahf
fildll
cmpsb
mov
aaa
xor
leave
pop
test
dec
push
mov
sbb
adc
inc
xchg
sti
cmpsl
ja
pop
mov
jo
sbb
mov
sbb
jno
mov
xchg
dec
mov
leave
xor
stos
push
or
or
sbb
inc
in
jae
mov
jno
ffreep
out
pop
fistpl
cmpsb
and
adc
movsl
jecxz
xor
lock
inc
mov
adc
xor
mov
not
lea
sbbl
mov
mov
xor
arpl
arpl
sti
inc
icebp
jmp
mov
inc
jno
or
inc
push
idivb
out
cmp
and
push
int3
pushf
push
and
add
sbb
ret
mulb
fldenv
das
add
orb
hlt
and
cmpsb
aaa
lock
xchg
lea
insl
repnz
inc
xchg
xchg
rclb
rorl
pop
movsb
in
mov
sti
mov
xchg
add
aam
popl
ja
add
int3
idivb
std
pop
iret
fidivrl
add
je
int
scas
call
push
inc
push
icebp
scas
cs
out
mov
sub
xchg
jo
or
sub
not
lock
popl
or
mov
add
aad
int
repnz
inc
mov
cmp
pop
ljmp
hlt
or
mov
pusha
fistpl
fbld
loop
mov
mov
test
and
aam
lock
pop
and
lea
mov
icebp
in
movsb
lods
fisttpl
push
fdivrp
fcomi
rcl
repnz
fsubrs
xlat
xorl
stos
jns
mov
sbb
mov
fwait
dec
sub
lods
or
popf
add
add
cmp
cli
add
adc
push
scas
adc
push
add
sbb
pop
ret
movsb
or
movsl
cmpsl
sub
push
test
jnp
fidivrl
daa
outsl
out
mov
and
inc
or
lea
and
lods
out
cmp
das
sbb
aam
sahf
mov
fadd
xchg
jmp
push
jae
dec
xlat
adc
inc
ja
cltd
int
popw
rcll
adc
arpl
push
lods
ja
pop
add
adc
shll
fsubrl
push
shll
push
add
mov
mov
adc
std
out
mov
xorb
jp
mov
pop
jmp
cmpb
push
mov
xor
mov
xor
dec
icebp
add
inc
into
xchg
call
mov
sbb
in
fidivrs
and
call
jecxz
jg
sub
aam
jno
daa
dec
mov
shl
cmp
outsl
bound
arpl
jns
pop
mov
loope
jmp
cmp
test
rcrb
adc
push
dec
xchg
sarl
adc
xor
inc
jle
ret
push
or
add
aas
mov
imul
fdivl
dec
push
popa
xchg
xchg
mov
pop
lock
fimuls
push
in
cli
insl
pop
fbld
std
mov
test
and
aas
inc
lret
and
leave
sub
pop
pop
jbe
aas
insb
xchg
xchg
xlat
test
out
addr16
cmp
es
mov
sar
jns
bnd
mov
push
jbe
jg
push
repnz
adc
push
dec
jne
push
xorb
sarl
mov
xchg
xor
and
push
mov
jb
loopne
mov
ss
mov
fstpt
or
or
inc
fstpt
cmp
lods
es
xchg
int3
jns
jns
pushf
sarb
rorl
lds
jnp
mov
jae
inc
fistl
loope
mulb
mov
adc
xchg
fstpt
lahf
fsub
ret
movsl
test
js
iret
xor
add
mov
add
push
negb
jae
ja
xchg
test
pop
mov
rcll
mov
pmaxsw
stos
pop
insb
enter
popa
push
cmp
pushf
or
lods
mov
js
cmp
jg
out
inc
lea
dec
cmc
shll
mov
lret
mov
pop
push
inc
out
pop
pop
addb
push
call
pop
jo
into
pop
lods
cltd
loop
inc
push
les
aaa
outsb
inc
movsb
in
in
fisttps
pop
mov
jle
test
test
cmp
jmp
sub
mov
test
lret
mov
pop
insb
sub
rcr
jl
popa
xor
jmp
dec
in
xchg
add
ja
es
cmp
or
xor
push
std
cmpsl
fistl
shrb
sti
leave
mov
pop
shrl
push
fstl
mov
test
repnz
jge
dec
dec
popa
mov
repnz
dec
mov
addl
rorl
gs
imul
enter
cmp
daa
in
ljmp
jp
xchg
test
loope
rol
adc
xchg
popa
jl
imul
sub
mov
push
mov
out
fisubl
mov
ret
arpl
mov
jne
divb
cltd
scas
icebp
data16
jns
push
ds
push
sarl
mov
lret
push
div
mov
test
les
in
repnz
test
add
dec
xlat
sbb
mov
popa
stos
mov
cld
mul
add
out
xor
iret
insl
mov
hlt
ja
adc
push
dec
testl
loopne
jnp
fs
sub
testb
aad
inc
imul
sahf
push
ds
push
arpl
sub
jmp
xchg
and
push
push
ds
cmpsl
ret
cmpsl
test
adc
add
inc
mov
adc
push
ljmp
add
sbb
xor
fdivs
jge
add
aaa
sub
mov
dec
inc
xchg
xor
mov
int3
mov
mov
sub
or
jmp
repz
push
push
stos
cmp
lea
test
xorl
aaa
mov
inc
pop
mov
cmpsb
push
pop
rorl
ds
fcoml
fxch
xchg
sbb
xchg
fmuls
fisubl
data16
pop
mov
shlb
xchg
xchg
outsl
popf
xor
std
out
fisubrl
xor
mov
push
jb
or
testl
push
leave
jp
pop
sub
or
leave
insb
pop
sbb
std
ret
pop
jae
xor
dec
jno
and
xor
mov
jp
es
jae
sub
xor
roll
test
imul
arpl
cld
repnz
inc
loope
push
jbe
inc
push
stos
adc
jnp
push
addl
push
out
movsl
xor
scas
mov
movsb
ret
cmp
jnp
adc
shl
enter
adc
popa
addr16
insb
and
adc
pop
sbb
es
sbb
or
dec
sub
or
or
fcoms
idiv
push
rcll
cmc
pushf
fs
adc
xchg
popa
push
mov
jnp
add
test
loope
ret
add
cmpsl
xchg
mov
push
push
and
addr16
jg
stos
push
ljmp
clc
sbb
mov
lahf
dec
mov
adc
xchg
iret
xor
cs
shl
adc
cmp
pushf
and
roll
mov
inc
xchg
call
mov
dec
sbb
add
mov
cmpl
sti
pop
dec
jne
aas
mov
or
add
sbb
test
test
popa
aad
xchg
xchg
lret
shlb
inc
xor
and
mov
xor
mov
jecxz
push
roll
lcall
push
push
xchg
pop
dec
jl
xchg
mov
push
lahf
xor
scas
in
pop
addl
push
stos
lret
adc
aaa
push
inc
fcoml
mov
adc
jle
inc
push
adc
cmp
cvtps2pi
shlb
lock
pusha
pop
out
inc
test
pop
pop
push
stos
xchg
mov
mov
gs
fistpll
fstpt
div
add
or
push
ja
sbb
mov
repz
and
imul
scas
loope
cmp
andb
xor
push
xchg
xchg
xor
sbb
dec
sub
das
mov
inc
scas
add
pusha
xchg
cltd
int
jns
dec
xchg
jno
pop
les
sar
sbb
inc
loope
cmp
adc
mov
jne
add
sarb
pop
dec
inc
adc
stos
and
mov
lahf
rcrl
xor
add
cs
out
sbb
and
mov
test
push
movl
sbb
fisttpll
cmpsb
cs
mov
jo
data16
pop
inc
mov
or
mov
dec
mov
kmovw
clc
ss
push
fdivl
fwait
mov
push
pushf
subl
popa
push
mov
add
jecxz
and
inc
jl
pop
mov
andl
fcoml
je
pushl
loopne
jae
or
add
add
outsb
loopne
xchg
cmp
mov
icebp
cmp
lahf
mov
jne
inc
aaa
or
dec
mov
dec
cmpsb
les
stos
scas
mov
movsb
aad
mov
or
pop
jns
jle
cmp
cmp
je
mov
ret
mov
lret
dec
jmp
imull
rol
test
orl
pop
pop
mov
std
mov
mov
xchg
mov
mov
popf
xchg
popa
cmpsl
dec
cmp
addr16
cld
jmp
insb
xor
dec
jecxz
ucomiss
jle
imul
and
out
pop
push
add
mov
fistpll
mov
call
inc
or
push
jle
mov
mov
stos
push
orl
mov
hlt
xor
or
popa
mov
nop
dec
es
pushf
lods
add
mov
xchg
lock
addl
push
add
fists
add
inc
sub
pushf
lods
pop
or
movsb
mov
incl
or
repnz
ficomps
sbb
sub
cmp
xchg
cmp
jno
xor
es
hlt
cmpsl
and
stos
pop
movsb
sbb
in
mov
lods
dec
scas
ret
stos
mov
dec
and
sbbb
hlt
test
roll
xor
jmp
sub
cmp
cmpsl
pop
lea
ret
dec
xor
dec
cwtl
cmpsl
push
movsb
std
mov
out
xchg
ljmp
mov
fwait
out
jg
inc
arpl
and
mov
ljmp
stos
mov
lea
sti
pop
scas
ds
or
xchg
outsl
pop
lcall
add
out
mov
js
sti
sbbl
test
pop
dec
and
in
dec
add
lods
sbb
adc
push
inc
and
dec
ret
mov
dec
sbb
loopne
into
sti
adc
adc
push
jg
and
adc
cmp
aas
or
cli
adc
or
push
mov
adc
push
mov
in
jbe
jecxz
int
cmc
dec
enter
popa
jno
add
adc
mov
push
cwtl
sbb
dec
pusha
adc
cmp
fwait
xchg
mov
and
pop
repnz
or
lods
minps
push
sub
fmull
call
addr16
clc
outsl
pop
arpl
bound
push
mov
inc
xchg
ficomps
imul
xor
fmul
and
xchg
ret
ds
inc
movsl
divb
lea
arpl
shl
cmp
and
subl
cld
aam
rcrl
dec
mov
and
pop
call
movsl
enter
push
repnz
fdivl
adc
sub
dec
fcoml
dec
jge
int3
jg
movsb
cmp
sbbl
ds
out
shlb
push
xchg
mov
adc
pushf
push
mov
ja
jno
inc
pop
ljmp
sub
mulb
clc
loope
icebp
sarl
xchg
sub
and
xor
cmc
push
inc
rol
inc
in
cmpb
cmp
xor
rolb
xor
and
inc
iret
icebp
lea
cmp
cwtl
ds
call
xchg
test
aam
cmp
gs
outsl
insl
dec
xchg
mov
xchg
popa
pop
add
icebp
out
gs
mov
mov
shll
sub
imul
jecxz
fwait
in
lahf
cmc
insb
in
pop
push
lods
inc
in
push
repnz
jb
mov
sbb
mov
mov
push
sbb
test
inc
inc
jno
frstor
mov
mov
fwait
push
mov
mov
sti
addb
cmp
rolb
push
or
xchg
xlat
lret
mov
cmpsl
xchg
das
and
mov
popf
jns
out
mov
fs
or
int3
in
gs
cmpsl
cmp
jl
dec
sarl
xor
fs
out
cmp
movsl
lods
jle
into
cmpsb
xlat
xchg
dec
inc
mov
mov
lds
popf
push
lds
cltd
rcrl
push
andl
clc
or
xchg
add
cltd
imul
pop
add
out
insb
imul
xor
outsb
add
shll
lcall
call
sbb
push
fmull
addr16
cmp
add
lcall
push
ret
mov
mov
sarb
movsl
adc
push
xchg
inc
jg
dec
push
rclb
test
and
inc
das
je
test
mov
gs
or
jae
pop
outsl
jne
push
cmp
stos
sub
mov
xchg
test
xchg
shrl
jg
jecxz
inc
inc
repz
ss
mov
cmp
xor
pop
mov
inc
imulb
push
rcll
lock
add
hlt
cltd
add
jno
adc
inc
add
int
dec
js
testl
subl
inc
lret
dec
cmp
mov
aam
pop
fidivs
xor
aaa
fidivrs
adc
mov
call
mov
mov
sbb
adc
test
mov
ss
int3
cmp
cmpsb
btr
pusha
fs
pusha
cmp
movsl
dec
enter
jne
or
das
lea
cwtl
fwait
into
leave
mov
fs
hlt
mov
sbb
fldcw
jb
mov
inc
push
pusha
in
enter
inc
add
or
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
push
mov
jp
pop
jp
into
or
and
pop
pop
mov
mov
mov
xchg
insl
sbb
push
mov
lods
mov
fs
mov
sub
dec
push
mov
imul
arpl
mov
arpl
lds
movsl
jmp
inc
mov
push
dec
xchg
imul
mov
daa
divb
mov
adc
pop
dec
jnp
xor
cmpsl
xchg
adc
mov
insl
movsb
les
jno
dec
pop
or
mov
mov
jg
outsl
pop
popf
and
fdivrs
pop
mov
inc
pop
push
mov
loop
or
sub
push
add
test
dec
push
je
pop
andl
or
mov
lret
fcompl
jns
call
sti
pop
sarl
sbb
shlb
fsubs
xchg
jno
jae
in
adc
jmp
int3
xchg
add
push
pop
sahf
dec
add
dec
xor
inc
push
and
push
sahf
insb
push
cli
rorb
in
shrl
or
ror
hlt
lahf
test
ret
movl
jns
or
dec
rep
jge
pop
xchg
ds
and
scas
sub
cmp
add
les
pop
bnd
fisubl
jg
stos
sti
sahf
clc
jle
push
sub
sbb
ret
iret
hlt
rcrb
push
cs
data16
mov
into
and
mov
fstpt
je
inc
inc
cmp
mov
mov
push
xor
les
sbb
and
loopne
sub
dec
sbb
mov
dec
push
dec
arpl
aas
cmpsl
mov
test
leave
jo
pop
xor
les
pop
idiv
adcl
ja
xlat
and
and
popa
mov
inc
imul
jne
out
pop
shll
arpl
cmpb
or
push
xor
rcr
sub
data16
dec
push
mov
push
xchg
repnz
les
dec
jo
xor
mov
addb
mov
lret
xor
ret
jg
add
gs
sub
out
enter
dec
jecxz
fs
pop
aam
xor
sbb
or
in
mov
dec
outsl
push
shrb
outsl
add
bound
and
and
das
or
xchg
and
hlt
incb
cmp
xchg
stos
into
adc
inc
xor
mov
mov
lret
int
adc
mov
pop
and
shl
push
jecxz
mov
fs
addb
andnps
repnz
clc
pop
bound
cmp
fnsave
jp
dec
into
mov
mov
xor
and
pop
pop
outsl
cmp
and
int3
je
gs
je
mov
sbb
dec
pop
in
add
test
pusha
inc
cmpsl
xor
das
movsb
fstpt
mov
rclb
add
loop
and
adc
inc
sub
jns
fwait
sbb
cmp
stos
mov
cwtl
outsl
inc
pop
pop
pop
aam
andl
insb
inc
dec
stos
outsb
testl
das
jle
mov
imul
push
dec
add
out
sbb
fimull
xchg
adc
jp
pop
and
fs
insl
pop
outsl
icebp
imul
lahf
lahf
sbb
iret
ret
push
fcoml
in
cmpsb
cltd
cmp
filds
orl
icebp
and
mov
mov
mov
xor
test
dec
fdivrl
sbb
pop
pop
shld
add
daa
push
stos
push
int3
cwtl
jo
adc
add
leave
movsb
mov
fcmovnu
inc
hlt
adc
in
jmpw
movsl
dec
sahf
cmp
in
into
les
ss
loopne
clc
add
lods
scas
pop
loop
cld
cmp
inc
jbe
mov
jbe
jae
jbe
add
loopne
mov
stos
frstpm(287
js
test
mov
mov
out
adc
and
lret
adc
mov
adc
xor
adc
mulb
xor
popf
pop
outsl
shll
cmp
out
imul
outsl
test
sbb
imul
lea
mov
push
test
mov
sti
mov
insl
xor
cmp
cmp
loop
icebp
or
mov
and
leave
repnz
mov
ljmp
cmp
ss
cmp
aas
mov
inc
ret
add
sub
mov
lea
sti
mov
movsl
sbb
fcomp
and
std
sarb
mov
mov
icebp
outsl
divb
inc
jb
aad
fdiv
cmc
hlt
std
add
les
mov
call
ret
pop
dec
call
loope
ljmp
insb
insb
mov
repz
lcall
testb
das
ret
shll
mov
adc
pop
adc
mov
clc
fwait
into
push
ja
ds
in
adc
rorb
jmp
pop
xchg
xor
movsb
push
sbb
and
cmpsb
leave
movsl
mov
mov
cmpsb
xor
jnp
scas
lods
push
sub
dec
pop
in
ja
adc
inc
mov
scas
cwtl
cmp
jmp
xor
jl
icebp
out
cltd
pop
sbbb
xchg
imulb
imul
mov
cld
sahf
test
inc
out
ret
mov
cwtl
xor
or
cmp
sti
sar
test
sub
jmp
inc
inc
ja
rol
and
shll
jbe
mov
adc
outsb
and
shl
sub
or
movsl
int3
das
lret
scas
bound
retw
jne
inc
ret
dec
aas
inc
xor
jbe
cmpsl
jl
adc
push
jb
out
add
lret
int
shl
ret
and
mov
mov
xor
stos
lcall
cmp
push
shrl
loope
jne
sub
shll
lds
lock
adc
xchg
jge
mov
stc
fwait
xor
out
mov
in
xor
cmp
jne
imul
nop
dec
add
inc
adc
dec
mov
pop
loopne
int3
lret
and
pop
push
sub
pop
in
scas
or
inc
pop
call
xor
jge
lds
stos
or
int
mov
cmpsb
ret
or
inc
or
inc
mov
xchg
aad
pop
or
mov
or
push
add
inc
loope
or
lcall
negb
push
rolb
adc
xlat
xor
cmpsl
mov
hlt
and
inc
pop
movsb
imul
cmpsb
mov
jnp
movsl
mov
int
sbb
stos
mov
sub
xor
test
lret
rcll
or
sbb
and
stos
xchg
and
fs
es
js
js
in
add
sub
test
cltd
repnz
popa
ret
stos
adc
jbe
and
outsb
jo
sbb
cli
or
loope
adc
std
data16
loope
xor
add
jns
mov
aam
bound
jp
popf
divb
leave
jnp
bound
cmp
adc
es
xchg
bound
mov
lods
in
out
rep
push
mov
scas
xor
iret
mov
popa
rorl
push
out
ja
lds
enter
sub
mov
dec
mov
psadbw
js
shlb
sub
inc
outsl
push
inc
add
adc
xor
mov
mov
push
dec
out
addr16
lcall
jmp
inc
out
mov
sbb
into
cmp
outsl
mov
inc
movl
mov
sbb
insb
es
movl
push
in
mov
or
or
ficoml
dec
dec
mov
mov
jecxz
in
jns
jmp
dec
addr16
push
aam
in
ret
xor
adc
push
mov
pop
cmp
pop
xor
addr16
mov
aad
push
lea
mov
out
inc
cmp
jnp
add
fisubs
xor
jp
jl
add
sarb
dec
pop
mov
adc
adc
adc
mov
push
fdivrs
jno
jns
mov
arpl
popf
std
int3
dec
add
das
push
and
cwtl
jmp
push
in
enter
in
pop
out
pop
mov
in
jp
std
xor
add
jne
sbb
mov
add
sbb
rorl
test
add
adc
add
stc
and
sub
mov
mov
stos
xchg
mov
insl
adc
cwtl
pop
push
arpl
loope
push
lds
dec
mov
fs
movsl
mov
ficoms
inc
jbe
jbe
mov
cli
int
sub
and
and
xlat
out
in
adc
pop
insb
shll
mov
stc
add
mov
mov
jae
xchg
mov
in
outsl
push
daa
addb
gs
and
inc
dec
cmpsl
push
lock
stos
xor
sub
jo
popf
movsl
mov
inc
subl
popf
mov
fstpl
in
les
lods
dec
fcmovnbe
dec
inc
scas
mov
lods
mov
mov
sbb
push
push
cmc
les
ljmp
sbb
inc
jne
clc
cmp
lock
out
test
lock
pop
cmp
std
sbbb
dec
xlat
lahf
pusha
mov
int3
sub
add
testl
cmp
mov
sub
adc
cli
jnp
sub
inc
lds
adc
ss
adc
pop
push
rcll
push
js
es
xor
fwait
loop
inc
cmp
xor
rcrb
fnstsw
push
in
test
mov
adc
lahf
push
mov
imul
mov
mov
inc
mov
push
addl
into
fimull
inc
mov
std
mov
cmp
lret
in
jg
mov
sbb
mov
cld
cmp
movq
scas
fdivl
mov
inc
jno
out
imul
adc
lcall
ret
icebp
xchg
icebp
rclb
xchg
imul
lahf
pop
xchg
mov
push
arpl
test
cwtl
add
mov
sbb
xchg
cmp
ret
ds
popa
lret
cli
push
mov
aam
mov
sahf
fwait
push
and
cmp
mov
cs
jne
into
fdivrl
daa
lea
or
inc
push
cs
jge
pop
push
jo
mov
iret
push
mov
sbb
clc
pop
add
repz
movsb
imul
lods
mov
sahf
outsb
cld
mov
inc
negb
leave
sub
in
cmp
pushf
pop
xchg
and
in
jmp
push
xchg
mov
cli
pop
add
or
outsl
pop
and
pusha
push
xor
movsl
cmpl
ficompl
mov
arpl
aam
dec
inc
movsb
shlb
enter
mov
and
vmovapd
add
sbb
pop
adc
dec
sbb
or
cmpsb
scas
adc
aam
xchg
jbe
in
jmp
dec
cld
inc
mov
out
jl
inc
push
sbb
movsb
pop
ret
jmp
int
addr16
and
dec
loope
negb
adc
sbb
jbe
movsl
inc
sub
shlb
mov
jg
cmp
in
push
mov
stos
shll
std
pop
mov
mov
push
xchg
ret
in
jo
stos
bnd
mov
or
mov
fcmovb
sti
xchg
imul
cltd
pushf
xor
je
cmp
arpl
mov
inc
or
aad
and
jnp
das
adc
and
jbe
testl
std
adc
cld
iret
cmp
les
pop
rcll
jg
roll
les
testl
decl
in
je
xor
jbe
or
xor
popf
and
into
shr
fldl
loop
jbe
test
ret
or
data16
shr
stc
inc
sahf
aad
mov
add
xchg
rclb
adc
cmc
ret
add
push
cltd
mov
xchg
into
addl
prefetchnta
into
pop
mov
adc
sbb
mov
cltd
fidivl
dec
dec
xchg
jp
mov
fdivrl
testl
jnp
or
push
push
push
es
dec
int3
and
shrb
divb
hlt
sbb
lcall
scas
inc
gs
mov
shll
mov
insb
cmpsb
outsl
push
sub
xor
sbb
xor
fidivrl
out
and
xor
lods
fsubl
or
dec
lock
or
outsl
loope
dec
jbe
cmp
subb
imul
fildl
shr
outsb
cwtl
push
repnz
mov
andb
xchg
or
dec
aaa
mov
jp
std
insb
loopne
sahf
jae
scas
fidivrl
push
jmp
mov
mov
int
pop
add
mov
fldcw
cmpsl
inc
icebp
mov
mov
adc
inc
mov
mov
xchg
popf
cmp
mov
fstps
lret
adc
imul
mov
iret
xlat
cmp
cltd
iret
arpl
mov
inc
lahf
jmp
sbb
iret
pop
arpl
jo
ja
sub
push
or
es
or
fsubrs
dec
cmp
xchg
add
mov
xchg
or
js
stos
popf
cltd
cmp
pushw
fidivrl
andl
std
adc
mov
jbe
fs
lahf
dec
loop
leave
xchg
mov
popf
cmc
cmp
xchg
push
push
jp
shrb
test
jno
xchg
xchg
cltd
fcmovnb
fstpt
movsl
sbb
dec
inc
jmp
pop
push
xchg
sbb
test
jbe
xlat
xor
inc
fsubrl
or
or
push
push
mov
xor
jle
fld
jae
cmpsb
mov
lea
add
cwtl
or
ret
in
jbe
sub
das
or
cmp
dec
mov
test
in
dec
adc
outsl
mov
aas
ret
les
data16
int
not
dec
jl
and
in
mov
aas
and
fwait
stos
mov
cmp
sbb
fildll
pop
mov
cmp
jle
out
jmp
out
pop
xchg
imul
pusha
inc
add
lcall
pushf
mov
fdivr
stos
inc
adc
and
add
mov
scas
dec
lock
es
gs
inc
daa
dec
push
adc
jb
jge
inc
ja
mov
fwait
and
adc
xchg
add
push
inc
cwtl
in
inc
scas
loope
push
testl
push
aam
rcl
sbb
imul
sbb
out
lods
sub
inc
clc
loope
rcr
pop
cmp
push
cmp
pop
enter
filds
jmp
mov
orb
hlt
lods
mov
add
cmp
test
pop
cmp
inc
int
sub
sub
push
adcl
lahf
adc
vandps
mov
mov
mov
dec
xchg
test
dec
negb
fsubrs
inc
sbb
xorb
decb
jp
mov
or
mov
int
iret
xchg
jg
call
ret
daa
or
cli
inc
fst
jmp
sbb
sti
rorl
xchg
xor
daa
fsub
les
cmpsb
nop
shl
xor
outsl
fwait
js
xorb
ja
ja
test
fmulp
mov
in
pushf
out
cmpsb
sub
xorb
repz
sbb
dec
xor
pop
xchg
das
sbb
cmp
or
pop
push
push
jg
sub
mov
push
mov
stos
sub
mov
bound
in
mov
ds
xchg
add
xchg
and
sub
pop
inc
add
js
sub
or
add
mov
jmp
push
and
inc
fs
sub
ja
pop
push
repnz
fldl
mov
das
sub
fimuls
mov
popa
xchg
push
xchg
imul
cmpl
nopl
jne
push
sub
mov
flds
push
and
ljmp
push
dec
in
in
decl
sub
inc
je
aad
data16
and
pop
xor
jmp
movsl
movsb
xchg
add
pop
je
cli
push
int3
popa
call
cmp
lret
cltd
push
divb
lock
lahf
xor
jae
pushf
sbb
sbb
xlat
mov
aam
lds
sbb
shrb
sbb
mov
xchg
inc
cmp
mov
in
push
sub
pop
xchg
jg
pusha
ficompl
inc
or
stc
mov
jecxz
in
popa
jl
movsl
mov
jbe
inc
shlb
push
push
rcrl
jno
or
fcomi
mov
push
jl
xor
inc
dec
dec
rcrl
das
sub
int
inc
shlb
dec
mov
inc
imul
inc
sub
subb
adc
repz
ret
je
out
add
mov
push
pusha
jecxz
jns
dec
push
outsb
xchg
and
mov
aad
outsb
lret
pop
mov
sub
and
jb
jo
outsl
aam
push
cmp
pushf
jg
nop
push
stos
loope
dec
mov
fsubs
clc
test
xchg
pop
inc
call
or
cld
push
gs
aam
loope
dec
or
push
mov
xorl
cmp
mov
test
jmp
adcl
les
mov
icebp
jg
push
sti
outsb
sbb
aas
sbb
adc
cmp
add
xchg
pop
sbb
adcb
sahf
mov
add
pop
push
movsl
mov
popf
jb
popf
mov
sahf
ja
adcb
pushf
test
insl
dec
lret
or
rclb
or
sbb
dec
jb
jmp
sub
push
dec
pop
int
pop
int
pop
test
jne
jg
fs
jp
pop
lcall
cld
test
rol
in
add
es
sahf
pop
std
push
jg
ljmp
xor
cmpsl
ds
pop
push
xchg
sbb
and
jmp
ficoms
or
mov
or
xor
outsb
dec
mov
movsb
test
mov
icebp
xor
sar
or
mov
xchg
dec
movsb
stos
dec
xor
xchg
or
outsl
fisubl
sub
roll
out
mov
pushf
filds
shrl
xchg
push
push
pop
xchg
cmp
mov
or
aad
jno
jae
sub
pop
jecxz
mov
mov
jecxz
rcrb
inc
stc
lods
pop
popa
sbbb
lret
push
addb
add
cmc
sbb
ret
test
insb
fwait
ljmp
sub
outsl
ja
and
sub
push
repnz
adcl
fistpl
inc
frstor
cmpsl
mov
lcall
ljmp
pop
cmc
mov
mov
icebp
lret
add
mov
xchg
loope
outsb
mov
jl
push
mov
push
in
ss
sahf
lods
rcll
pop
mov
jp
sub
lods
push
in
and
decb
jb
jg
fdiv
out
test
jae
add
push
jae
out
inc
sub
fcmovne
mov
xor
mov
xchg
test
scas
add
ds
push
mov
movsb
cli
add
fwait
fs
lret
in
sti
push
das
je
jmp
dec
or
mov
dec
testb
and
mov
insl
inc
lock
mov
repnz
enter
jecxz
lret
xchg
and
outsl
mov
int
adc
mov
popa
ret
fnstcw
leave
mov
scas
ret
mov
or
fsubs
jnp
in
fwait
scas
or
pop
push
shlb
cs
mov
shrb
pop
push
push
cmc
jmp
add
jnp
sub
das
mov
or
xor
cmp
leave
lret
mov
shlb
jl
xchg
inc
push
mov
into
mov
xor
cltd
push
data16
or
mov
adc
mov
jne
arpl
fwait
push
mov
cld
daa
dec
aas
mov
aad
add
xor
pop
sahf
sub
icebp
sub
mov
xlat
jo
jle
data16
cmp
xor
xor
xor
xor
cltd
add
cmp
mov
mov
fistps
push
sub
xchg
es
inc
bound
jp
clc
stos
sbb
lock
xchg
dec
jnp
jecxz
leave
xor
popf
enter
push
push
jns
shrb
jp
sbb
xsaves
aad
jno
mov
clc
out
sahf
fistl
inc
adc
dec
pop
cmp
int
xchg
dec
and
dec
push
xor
cltd
loope
or
sbb
insb
leave
jl
dec
insl
fiaddl
dec
or
xlat
test
mov
sub
cwtl
insl
mov
push
sub
inc
or
jae
adc
dec
push
mov
mov
dec
fucom
std
dec
xor
movsl
shrl
jns
jns
sbb
pop
aad
mov
lods
add
push
xor
push
push
ret
dec
addl
sbb
mov
insb
lea
mov
sub
shll
into
pop
pop
or
mov
in
stc
popf
in
cmp
xor
icebp
arpl
subb
xchg
xchg
mov
and
insb
inc
push
add
sbb
push
lods
add
sti
sbb
xor
frstor
int3
repnz
push
std
mov
or
push
mov
add
xchg
or
sbb
mov
xor
dec
lcall
cmp
test
lods
add
pop
outsb
test
outsb
mov
add
pop
push
push
inc
jae
std
stc
mov
inc
cmp
ret
pop
push
mov
sti
and
push
in
insb
or
arpl
jmp
mov
iret
dec
int
inc
lahf
cmp
je
popa
add
inc
mov
mov
push
arpl
movsl
popa
roll
leave
fsubs
mull
push
pop
mov
lea
cmp
and
inc
pop
mov
sbb
testl
rcl
jb
or
jle
cmpsb
lcall
and
lods
pop
into
jo
jb
dec
mov
push
dec
push
jnp
and
cmpsl
lods
jno
pop
push
sub
adc
aas
xor
push
out
push
aam
mov
add
hlt
fxch
stc
adc
lahf
outsl
mov
and
and
and
push
add
mov
sub
ss
test
pop
scas
add
leave
or
call
push
daa
jno
lea
ja
lret
and
and
addr16
fcomi
dec
pushf
push
call
negb
jmp
sub
or
push
adc
sbb
lods
ret
push
sbb
repz
or
mov
sahf
das
xchg
outsb
or
xchg
jb
nop
imul
dec
pop
out
mov
lahf
push
out
xchg
fdivrp
in
sbb
repz
xchg
fwait
or
movsl
stos
jae
fbstp
cli
push
mov
dec
ret
pop
loope
sbb
int3
and
in
orb
mov
push
sbb
push
inc
popf
movsl
xlat
fs
pop
add
int
repnz
outsb
xchg
jae
xchg
lret
inc
testl
loopne
shll
cmc
sarl
pop
mov
xchg
cmp
cli
inc
mov
es
or
mov
mov
adc
or
mov
cld
aad
push
mov
sbb
dec
or
cli
jo
je
nop
pop
xor
xorl
adc
jle
add
jmp
mov
out
cmpsl
es
hlt
cmp
adc
xor
add
xlat
dec
sub
test
push
mov
pop
mov
mov
fistl
loopne
nop
or
xchg
nop
jp
pop
aaa
test
xchg
or
cmc
xchg
cmp
jl
jne
iret
sbb
sub
sti
cmp
dec
fcoml
xchg
adc
push
adc
fdivp
dec
sahf
in
adc
stos
pop
sti
sbb
mov
xorb
enter
mov
mov
ja
cmp
enter
stos
xor
cmpsb
inc
mov
loop
cmp
decl
jl
xlat
sbb
es
add
mov
sub
in
sub
sar
in
cmp
xchg
mov
add
and
pushf
pop
adc
sbb
icebp
pop
xchg
ret
addr16
cmp
push
jl
mov
aam
test
add
jo
push
xor
mov
inc
pop
cmpsl
scas
into
inc
aas
sub
jmp
jns
pop
gs
mov
xchg
adc
sahf
adc
cmc
ret
mov
pop
xor
iret
xor
in
mov
pop
shrl
insb
mov
inc
in
mov
dec
jbe
js
leave
push
lret
xor
ficoml
xor
jae
mov
xlat
adcl
out
pop
iret
iret
jg
push
pusha
xor
test
pusha
repnz
roll
nop
mov
stc
mov
pop
lds
test
add
hlt
mov
gs
stos
cwtl
sarb
inc
movsl
loopne
dec
cwtl
mov
push
test
mov
xor
dec
dec
sbb
xchg
pop
and
fisubrl
orl
mov
sti
and
ret
and
and
push
dec
add
push
cmp
xchg
jmp
in
aaa
sbb
cmpsl
gs
adc
frstor
xchg
xor
stos
push
jp
jle
mov
repz
leave
cmpsb
dec
mov
mov
adc
xlat
dec
data16
aas
push
inc
ret
sub
mov
mov
punpcklwd
jbe
push
push
into
push
lcall
fdivp
frstor
daa
shlb
sbb
cmpsl
ret
push
sub
mov
fs
in
fs
lret
push
popf
fsubl
lods
cld
nop
dec
cld
ljmp
outsl
mov
xchg
js
add
aas
aad
in
shl
or
mov
xor
xchg
pop
jecxz
es
lgs
add
mov
jecxz
addr16
jmp
test
cmp
hlt
dec
xchg
sub
push
pop
pushf
add
jp
mov
inc
ljmp
in
mov
fsubr
push
rcll
nop
fstps
xor
imul
mov
sbb
mov
push
and
push
icebp
outsb
ljmp
pop
outsb
stc
mov
dec
loopne
jg
insb
sbb
es
xor
xchg
loope
jb
pop
and
stos
aas
cltd
sub
xor
xchg
push
insb
sbb
movb
jne
xchg
add
fcmovu
nop
add
fidivrl
lcall
int3
mov
cmp
xor
cmpsl
jl
in
ja
fsub
test
or
inc
mov
fimuls
bound
into
pop
aaa
aas
cmp
jp
adc
dec
inc
repz
in
mov
or
imul
push
repnz
inc
aas
movsb
xchg
inc
xchg
jp
pushf
adc
mov
pop
lret
rcr
inc
cmp
and
fwait
add
xor
addr16
insb
inc
popa
add
or
pusha
jmp
and
lods
jbe
mov
sub
pop
add
adc
cld
add
sbb
mov
loope
add
pop
inc
repnz
inc
add
push
loop
aaa
cmp
jo
jb
movsl
add
pop
push
fnstcw
cld
adc
inc
cmp
lcall
shl
aad
xchg
inc
adc
mov
add
push
inc
add
dec
dec
jnp
mov
icebp
jecxz
adc
insl
and
add
dec
sqrtps
testl
mov
xchg
mov
lea
movsl
addb
push
out
push
jmp
mov
rorl
pop
jecxz
and
std
mov
adc
in
addr16
sub
fldt
stos
push
sub
flds
fbld
vpcmpeqb
cltd
sub
xchg
mov
out
ljmp
pop
xor
lea
jmp
cmpsl
lods
mov
sbb
out
mov
mov
negb
jge
ljmp
lahf
mul
mov
lret
pop
cmp
cmpsb
in
jl
mov
push
loopne
adc
push
push
call
sbb
stc
shrl
notl
cmp
fistl
xor
pop
or
mov
movsl
push
pop
pop
cmpl
adc
sahf
xor
pextrw
subb
push
cmp
jmp
rolb
inc
adcl
insl
add
push
loop
ss
jmp
xor
jg
fiaddl
fwait
mov
mov
stc
fnstenv
mov
test
mov
push
icebp
pop
jmp
rcrl
mov
cmp
mov
enter
js
ret
adc
mov
movsb
push
push
xchg
outsl
gs
sbb
ss
jne
xor
lds
inc
jge
shlb
push
cmpsb
sar
xchg
jae
fisubs
push
popf
fsubrl
xor
clc
mov
shlb
push
and
sub
out
popf
mov
fs
cmpsl
jne
sbb
push
inc
sbb
aaa
dec
pop
daa
push
test
inc
std
xor
cli
cld
daa
and
aam
lods
dec
lea
aas
inc
insb
test
or
mov
xor
aas
jg
cmpsb
inc
inc
inc
lcall
inc
popa
loope
push
jbe
xchg
push
sbbb
xlat
jl
sti
out
pop
add
ds
mov
mov
insl
enter
ficoms
lcall
fistps
sub
pusha
push
loopne
sbb
push
pop
cs
mov
add
stos
sub
cmp
loop
test
sub
sub
loope
push
or
sbb
test
mov
push
cmp
dec
jbe
push
mov
movsl
cmp
outsl
push
mov
push
pushf
std
enter
and
adc
jge
hlt
xor
xchg
push
dec
mov
js
add
negb
stos
shrl
push
cli
inc
cmp
inc
clc
dec
lods
out
loop
xor
xor
mov
icebp
push
daa
mov
mov
test
xchg
popa
xor
movl
fmuls
pop
mov
mov
push
add
adc
xchg
xlat
in
jp
xchg
and
or
mov
add
push
fnstsw
aad
sbb
lock
dec
je
pop
mov
aam
cmc
subl
dec
cld
fimull
stos
cmc
lea
push
cmp
xchg
xor
insl
pop
jo
dec
sahf
mov
sbb
test
sbb
arpl
out
dec
gs
loopne
scas
inc
pop
out
jmp
andl
popf
jns
jge
xor
pop
mov
sub
mov
stc
jl
mov
push
sub
or
repnz
aad
pop
jle
mov
sbb
jae
mov
adc
pop
sub
push
pushf
add
dec
add
addb
loope
addr16
sbb
push
pusha
repnz
pop
into
clc
es
jb
adc
pusha
adc
cmp
jp
mov
and
lret
dec
add
mov
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
pushf
push
adc
jmp
jp
jp
scas
xchg
lea
xchg
push
sbb
mov
es
mov
clc
and
in
imul
repnz
sub
pop
cs
scas
mov
push
jne
cmpsb
push
sub
dec
call
fldl
lret
push
pop
rol
repnz
cwtl
xor
add
or
clc
and
rclb
fstpl
cmp
and
fs
mov
mov
sarb
js
scas
jnp
sbb
fdiv
jne
pushf
insl
bound
dec
jne
or
scas
cmpl
movsl
adc
test
mov
lods
adc
adc
xchg
loopne
dec
push
mov
mov
sub
inc
sahf
sbb
les
push
int
xchg
xor
jecxz
imul
pop
shll
pop
test
or
sbb
test
xchg
fsubp
sbb
arpl
mov
jmp
jg
adc
out
dec
ja
mov
mov
mov
mov
jae
add
push
push
lds
adc
or
push
aaa
sbb
stos
mov
sbb
pcmpgtw
push
cs
pop
lret
add
popa
dec
sub
inc
loop
push
out
es
call
dec
imul
xor
addr16
sub
jno
fwait
daa
rol
mov
mov
rol
test
ret
stos
xchg
xchg
dec
push
mov
mov
sarb
lahf
out
and
jbe
cmp
mov
push
arpl
add
fists
dec
xchg
xchg
mov
push
xor
mov
jne
sti
aam
in
imul
adc
aam
pop
and
inc
sub
inc
cltd
adc
mov
adc
mov
repnz
add
insb
loope
das
ficomps
xchg
fnstenv
ja
repnz
add
inc
pop
cmp
sahf
cltd
pop
xor
insb
mov
add
addr16
xor
cld
loop
jp
mov
rcl
add
lcall
push
and
sub
cs
lahf
inc
scas
mov
add
mov
adcl
sbb
mov
push
lret
adc
push
std
or
addr16
xor
xchg
test
xor
push
bnd
ficompl
in
int
and
ror
sbb
bound
xor
or
pop
sbb
dec
xlat
xchg
and
out
pop
add
je
jmp
xor
stos
mov
sbb
cmpsb
push
push
enter
add
xlat
hlt
lea
ljmp
aam
xchg
cmp
push
fs
jg
push
sub
mov
pop
sub
lcall
repz
testl
xchg
mov
push
into
call
mov
aaa
mov
repz
stc
stc
xor
mov
inc
icebp
push
adc
mov
lock
pusha
push
xchg
in
imul
rorl
mov
imul
sub
mov
pop
sarb
jae
into
mov
cwtl
mov
mov
dec
subl
mov
jno
movsb
mov
popa
mul
insb
loop
imul
adc
jo
ja
pop
fwait
push
fcmovu
popa
ss
leave
sub
out
adc
fsubr
or
out
mov
cwtl
lahf
inc
dec
pop
leave
dec
lea
dec
out
xorb
pop
out
leave
movsl
pop
data16
pop
push
hlt
jmp
and
loopne
jmp
pop
inc
ds
shl
inc
scas
pop
cmpsb
test
and
fsubr
lcall
jmp
dec
pop
sub
push
imul
lcall
xchg
inc
outsl
cmpb
ljmp
cmp
push
jno
and
fimull
push
clc
orb
jo
mov
sub
mov
add
popf
inc
push
lods
xchg
imul
lods
scas
pop
push
sbb
sbb
xor
xchg
faddl
in
aad
sbb
mov
call
jl
stc
into
sahf
or
and
xor
adc
inc
cmp
pop
popf
jp
imull
sub
mov
outsl
gs
add
imul
into
mov
lret
aaa
or
lods
data16
mov
push
sbbb
ljmp
mov
arpl
loop
pop
outsb
ret
xor
stos
add
jne
sbb
incb
xchg
in
jp
daa
sub
out
mov
jns
lds
mov
lods
push
rolb
push
and
repz
pusha
shrb
sub
inc
outsl
cli
mov
int
ljmp
or
out
and
mov
cltd
push
loopne
ds
sti
xor
in
push
sub
mov
pushl
and
push
lds
int3
xlat
fs
sti
sub
lods
loop
jp
and
pop
push
adc
outsb
in
test
rcll
push
or
mov
mov
pop
or
mov
fwait
iret
add
jae
into
lahf
and
xchg
out
cld
or
scas
call
pop
sbb
mov
cmp
jmp
ja
ss
add
sti
mov
nopl
fistl
or
jg
and
adc
loop
push
add
movsb
add
fcoms
repz
cltd
sub
xchg
and
sbb
mov
ret
and
mov
mov
xchg
push
jbe
sbb
sbb
test
or
mov
dec
jecxz
add
push
push
into
xor
ljmp
outsl
popf
loope
sub
mov
sub
pop
adc
jns
nop
out
nop
jb
push
int3
clc
dec
les
les
imul
push
cwtl
fistl
loop
stc
xor
or
pushf
movsb
in
lret
repnz
lods
push
ljmp
jnp
cmp
jl
add
repz
fidivrs
adc
push
mov
in
int3
xor
xor
jg
xchg
int3
and
and
cli
push
cmp
mov
test
je
ss
dec
rcrl
jecxz
lods
loop
dec
mov
fstps
imul
jo
nop
jno
int
xchg
mov
dec
lods
cmp
push
jae
push
ja,pn
or
jnp
push
xor
ds
inc
dec
pop
icebp
rclb
in
fistps
inc
mov
fistpll
jnp
ret
sbb
xchg
push
ds
in
mov
in
sbb
dec
jle
mov
adcl
mov
cmp
cmpsl
cmpsl
cmc
mov
add
pop
mov
adc
push
push
xchg
ljmp
cld
cs
sub
addr16
mov
mov
mov
jmp
test
mov
andb
xchg
aam
shr
mov
and
adc
jne
dec
frstor
dec
in
add
and
test
add
mov
jbe
scas
mov
out
daa
ss
mov
and
adc
ss
filds
pop
daa
mov
cli
ror
out
sub
fbstp
call
es
push
dec
imul
outsb
or
add
xchg
std
jl
sub
mov
aas
and
rorb
pusha
xchg
inc
push
push
sarl
add
and
xchg
into
mov
xchg
pop
lea
scas
and
aad
mov
xchg
and
lods
sub
arpl
xchg
roll
mov
test
rcll
cmp
subl
in
fldl
mov
insb
cli
ficoms
add
jp
movsb
and
cld
dec
xchg
cmpsb
fldcw
push
add
outsl
jmp
pushf
in
push
sub
cmp
lcall
add
and
push
push
loope
fidivrs
out
mov
outsb
cli
out
lds
adc
xchg
and
int
inc
popa
lds
ds
cli
imul
xor
pop
xor
ret
sbb
add
xchg
dec
mov
std
lock
pusha
lods
cmpsb
lods
xor
mov
xchg
xchg
shll
in
jge
push
fidivs
mov
mov
pusha
addb
cmp
iret
pop
data16
sub
push
xor
inc
testl
rcll
and
pop
cmp
jbe
dec
xchg
dec
ljmp
rcrl
xchg
test
inc
imul
popf
xchg
popf
dec
sub
mov
leave
int
nop
dec
inc
ret
es
pushl
dec
jl
ret
or
xor
or
add
cmp
nop
pop
lea
inc
hlt
pop
lods
inc
sar
mov
push
adc
jo
add
test
inc
adc
mov
rcrl
cmp
or
sub
or
repnz
mov
ja
lahf
inc
int
push
pop
call
insb
popa
pop
jge
aas
lock
je
loopne
jecxz
aas
push
jb
jno
sbb
mov
mov
adc
mov
dec
jecxz
arpl
cmc
or
pop
lcall
jbe
mov
sub
inc
insl
push
mull
in
dec
mov
cmc
std
sub
popa
mov
or
xchg
fisubs
fidivs
repz
xchg
stc
sbbl
push
jnp
sbb
pop
add
jbe
adc
inc
or
cmp
or
cmp
push
js
xor
xchg
push
arpl
fdivrs
repnz
cmp
scas
movsl
je
push
ret
je
lods
add
xor
xor
cld
or
aam
push
and
in
test
enter
push
jnp
sbb
enter
xlat
adc
ds
xor
adc
jmp
sub
inc
xchg
pushf
fwait
shlb
sbb
out
dec
mov
cmp
fimuls
xchg
jae
xor
push
inc
int
add
adc
push
and
jb
push
fxch
adc
call
add
adc
push
iret
clc
mov
sarb
imul
or
cs
shlb
or
lahf
inc
std
add
mull
mov
lahf
test
pop
and
pusha
jne
push
adc
loope
inc
test
fcmove
add
mov
cld
mov
sub
mov
out
shlb
pop
adc
popa
clc
xor
mov
xchg
add
dec
inc
iret
inc
fisttps
inc
bound
cltd
daa
push
mov
fwait
inc
scas
adc
loope
clc
add
addb
lcall
ret
ret
mov
mov
inc
jmp
test
insl
loop
test
inc
jb
cmp
int3
cltd
pusha
int3
mov
mov
push
jnp
mov
cmp
js
clc
lock
push
xchg
mov
dec
add
pop
fsubr
pop
adc
pop
xlat
fwait
lds
xor
out
jecxz
inc
in
inc
mov
add
mov
inc
shlb
out
lea
mov
pop
dec
cmp
xorb
bound
push
jmp
jmp
and
or
popf
or
dec
shl
add
fs
daa
or
movsl
pop
out
push
loopne
xchg
lcall
xchg
sbb
jle
xchg
xor
repz
ja
fmuls
insl
xchg
fs
jmp
jl
xchg
add
cmp
loopne
ljmp
repz
lahf
mov
lahf
call
jecxz
adc
lds
mov
add
ss
mov
push
ljmp
xor
or
push
imul
mov
inc
sbb
xchg
cmp
jle
out
les
cmp
lds
lods
push
sarb
stos
imul
pop
mov
sub
pusha
and
jb
and
mov
dec
rorl
outsb
sub
mov
stos
dec
hlt
xchg
push
fs
mov
lods
test
and
aaa
pop
xchg
js
jns
lock
test
push
ret
mov
sbb
jp
mov
ja
ja
int
xor
mov
and
and
test
cmp
stc
out
cmpsl
pop
mov
sub
jmp
lahf
pop
mov
jnp
scas
sbb
jbe
sbb
mov
jl
aas
dec
scas
insl
jno
inc
mov
cmp
fldl
dec
sub
pop
add
clc
or
sub
and
inc
mov
es
jbe
adc
cmp
rcll
jmp
das
subb
cltd
inc
lahf
pop
dec
popa
cmp
fs
adc
xchg
push
pop
jecxz
out
addr16
xor
mov
mov
test
mov
inc
inc
cmpsb
dec
out
and
test
mov
popf
outsb
dec
call
cmp
iret
daa
leave
loopne
scas
sbb
sahf
neg
imul
pop
bound
fs
jl
pop
arpl
xchg
lods
loope
dec
sub
leave
adc
shll
add
and
sub
sbb
add
cmp
lods
std
xor
and
jecxz
mov
dec
cmpsl
or
xor
call
subb
lcall
pushf
aam
pusha
add
pop
repnz
shrl
mov
xchg
pop
out
loop
push
cmp
cmp
push
pop
loopne
push
data16
jns
dec
test
out
or
test
cmp
jnp
or
aaa
jp
rorb
mov
repz
cmp
jns
data16
aam
out
ret
out
jne
fimull
adc
mov
call
mov
pushf
push
in
inc
push
jecxz
ds
mov
xchg
cmp
in
fsubp
movsl
cmp
or
cmpsb
ficompl
hlt
daa
ljmp
dec
enter
sub
out
jg
pop
popa
pop
scas
sub
pop
or
mov
fistl
adc
jp
push
sub
in
jno
cmp
loopne
push
ss
push
pop
lods
loope
cmpsl
pushw
or
aad
mov
call
mov
sbb
dec
test
ret
xor
jge
movsl
mov
imul
xlat
out
or
imul
out
dec
jnp
das
ds
hlt
ficompl
sub
nop
add
into
dec
cmp
cmp
push
xchg
jb
cmp
sub
movsb
push
shll
test
or
pop
ror
mov
lahf
push
loop
divb
dec
push
push
ficoms
rorl
cmp
movl
or
popa
stos
cmp
aad
out
push
jge
and
pop
and
add
lock
and
xchg
xor
or
fldt
xchg
rcr
cmp
popa
aam
repnz
cltd
jg
std
push
loopne
icebp
push
mov
mov
iret
and
ret
jg
shll
scas
push
mov
adc
mov
addr16
popf
jg
adc
mov
jno
xor
xchg
pushf
aas
movsb
out
insb
cmp
mov
sub
sub
xchg
nop
cmp
add
inc
dec
les
loopne
movsb
inc
outsb
pop
pop
mov
jo
lds
into
cmp
ret
and
mov
cwtl
js
mov
cwtl
push
add
jb
nop
fists
xchg
adc
add
adc
sub
adc
xor
sub
ret
stc
fbstp
or
ds
mov
mov
test
pop
push
test
mulb
iret
pop
adc
mov
jl
xchg
push
jb
popf
loope
push
ljmp
mov
jg
dec
ud2
repz
insl
lcall
mov
and
push
cmp
xchg
sub
sbb
fistpll
xchg
int
jno
xchg
lods
pop
add
pop
rcr
insl
sub
pop
or
or
sub
cmp
or
mov
push
inc
adc
shrb
outsl
je
repz
xor
sbb
sahf
imul
jnp
sbb
push
cmp
jecxz
shll
cli
jle
and
mov
lahf
fisttpll
mov
into
fsubp
lar
cmp
enter
cs
into
movsb
inc
subl
and
xadd
pop
mov
pop
add
clc
mov
outsb
ja
cmpsb
jp
lret
push
aas
dec
mov
andb
fmull
mov
movsl
aaa
mov
adc
or
push
fs
cmpsl
dec
das
test
cwtd
dec
setp
int
test
xchg
lahf
dec
lahf
add
xor
push
and
movl
sti
xchg
dec
les
jp
dec
cmp
daa
xlat
daa
popa
cmpsb
mov
sbb
fucomip
les
mov
xchg
mov
mov
push
mov
jmp
lret
add
lret
add
mov
ret
xchg
jnp
cld
in
pop
shlb
decl
jmp
sbb
mov
subl
cs
push
sub
lods
repz
add
jb
xchg
in
leave
out
push
ficoms
insl
imul
andb
jp
xchg
pusha
lds
ljmp
es
fcomp
add
test
sbb
pop
lods
aas
cli
fstpl
mov
ss
iret
dec
loope
fwait
out
pop
fsub
pop
inc
clc
xor
jg
stc
push
arpl
xor
roll
or
mov
xor
arpl
dec
je
xor
lret
or
out
ror
jb
jge
xchg
xor
out
stos
pop
pop
push
add
adc
jecxz
adc
jb
mov
pop
sbb
sahf
pop
bnd
mov
movsl
movsl
in
loop
sub
or
dec
ja
push
repz
std
rcll
cmp
fnstcw
mov
pop
sub
sbb
lahf
repnz
repz
mov
dec
inc
cmp
popa
data16
mov
pop
xor
sub
ret
into
fisttpl
cltd
add
es
pop
sub
dec
clc
aas
scas
fcomps
pop
mov
mov
add
in
cwtl
scas
iret
xor
imul
and
inc
pop
shrl
jp
iret
fwait
mov
sub
pop
mov
fdivs
out
fdivrs
in
pop
pusha
loope
in
in
not
dec
stos
push
mov
xor
dec
test
lods
shrl
push
add
pop
mov
mov
sub
jbe
mov
jp
or
inc
mov
fwait
xchg
pop
or
sarb
xlat
sub
sbb
repnz
enter
pop
cmpsl
mov
sarl
jg
xchg
cmp
or
xor
and
push
cmpsl
pop
fs
lock
sti
out
and
repz
loopne
jno
xor
cltd
jecxz
cmpsb
mov
dec
push
inc
addr16
lea
pushf
int3
in
fisttpll
clc
insb
pop
cmp
mov
imul
and
sbb
fdivl
popf
jmp
stc
mov
out
inc
sbb
stos
fdiv
popf
pop
dec
mov
and
lcall
push
mov
fwait
xor
daa
jne
jae,pn
jg
mov
mov
jb
popa
repnz
mov
dec
stos
pushf
mov
sub
out
xor
push
sub
xor
daa
jno
mov
jnp
in
aaa
and
cmp
xchg
in
mov
inc
push
imul
or
add
mov
leave
xchg
out
jmp
addr16
fiadds
pop
xchg
lret
mov
ljmp
add
and
fs
mov
daa
dec
outsb
dec
xor
pop
sub
xchg
das
lds
cmpb
adc
and
into
inc
jb
into
pop
jb
add
mov
push
pop
xchg
push
daa
fcoml
shl
arpl
pop
cmp
add
mov
jns
dec
and
or
scas
popa
mov
push
scas
sub
xchg
shrl
push
xchg
aad
pop
jmp
mov
fdivrs
cmpsb
inc
pop
dec
loopne
jl
fchs
jb
adc
push
mov
call
leave
adc
mov
popa
dec
push
fidivs
scas
mov
cmpsl
sub
or
mov
lret
or
mov
mov
bound
cmp
cmp
cmp
imul
pop
scas
data16
and
test
cmp
sbb
stos
outsb
or
cmp
push
shll
and
mov
stos
inc
aaa
inc
pushf
shl
adcl
push
std
xor
pop
sub
aam
mov
add
jecxz
int
or
mov
pop
scas
mov
or
and
xor
ss
repz
inc
xchg
adc
xlat
jmp
cmc
mov
mov
les
aas
call
or
nop
pop
adc
test
cmp
js
loop
cmp
add
inc
mov
adc
pop
cmp
pop
sbb
stos
mov
push
movsb
stc
cmc
or
iret
sub
adc
sbb
jno
aam
shrb
ljmp
xchg
daa
movsl
adcl
xchg
jge
mov
mov
mov
stc
fistpl
sahf
outsb
xchg
and
insl
sub
pop
fcoms
icebp
mov
dec
arpl
rolb
push
mov
inc
repz
sbb
dec
icebp
mov
cwtl
test
inc
sbb
push
idivb
xchg
mov
mov
mov
xor
js
cs
repnz
push
sub
jns
rcrl
inc
mov
lret
jne
bound
rol
mov
pop
or
jbe
cmp
cmp
hlt
push
lods
popf
push
jge
pop
mov
sbb
cmp
or
sarl
mov
test
in
cli
aam
push
ds
and
xor
pop
int3
add
std
ss
mov
push
xchg
cs
rol
or
insb
sbb
imul
lcall
lea
xchg
lds
jne
fwait
adc
cmpsl
pop
sarb
push
adc
mov
mov
faddl
jmp
daa
data16
movsb
rorl
xlat
fidivs
addr16
popa
scas
sbb
xchg
cltd
subl
insb
and
pop
xor
sub
pop
movsb
jb
cmpsl
adc
test
movsl
or
cli
test
adc
pop
not
cmpb
or
sub
xor
jle
pop
mov
in
xor
es
jns
push
mov
lods
inc
and
divl
cmpsb
loope
add
cs
xor
pop
movsl
adc
jo
or
movsl
and
sbb
ss
mov
add
cld
sbb
add
out
mov
ret
xchg
sbb
std
pop
repnz
aad
mov
mov
stos
xchg
sbb
mov
dec
xchg
fwait
xchg
orb
adc
push
jns
bound
call
jle
lret
aad
sahf
and
jmp
jns
lcall
aam
int3
xchg
add
cwtl
dec
push
cmpb
shll
fisubl
insl
pop
jb
xchg
xor
outsl
and
push
movl
sub
jns
jecxz
pop
ds
jne
cmp
xor
sbb
or
inc
inc
ja
in
mov
add
js
push
sbb
rorb
js
mov
int
jns
mov
inc
adc
dec
lahf
mov
xchg
cmpsb
sub
mov
popa
add
add
popa
inc
mov
shlb
cltd
push
fisubrs
daa
pop
xor
push
pushf
jo
or
or
pop
lahf
cmp
adc
mov
rcrb
jb
imull
hlt
hlt
dec
fistpl
out
xchg
and
insl
cmp
cld
scas
js
int
inc
lods
pop
test
mov
mov
xor
sti
or
pop
mov
adc
adc
in
es
xchg
adc
aad
jg
sub
jne
cmc
mov
and
data16
les
jmp
add
popa
inc
test
jne
inc
adc
lock
push
pop
mov
movsb
sub
loopne
or
xor
dec
int
scas
ret
inc
cmpsb
dec
cli
xor
push
sbb
or
mov
sbb
fs
push
push
fmull
jecxz
es
pop
mov
pop
cmp
decl
popa
loop,pn
add
jb
cmp
test
xchg
jmp
mov
lods
or
test
dec
daa
and
pop
mov
int
icebp
mov
repz
dec
xchg
fstp
xchg
cmp
push
mov
xchg
orl
insl
addl
roll
or
clc
jb
test
es
jnp
add
fistpl
inc
pushf
adc
rorl
and
inc
cmp
cmc
cmp
push
cmpb
pop
cmc
sub
out
in
dec
push
cltd
push
in
jl
mov
daa
scas
gs
mov
dec
shlb
mov
pusha
stos
dec
outsb
cmc
jne
sbb
dec
xor
das
clc
sbb
pop
xchg
push
out
es
andl
push
jmp
jp
adc
mov
sti
cmc
mov
jmp
add
addl
mov
push
adc
addr16
sbb
std
pop
fbstp
nop
divb
mov
push
push
inc
push
jp
and
fidivs
cs
out
pop
aam
cmpsb
jns
xchg
or
ret
cwtl
movsb
addr16
add
xchg
mov
mov
adc
add
pcmpgtw
mov
mov
or
xchg
in
push
cmc
add
push
mov
push
movq
pop
push
cmpsl
icebp
push
push
ret
movsb
cmp
mov
add
push
lcall
mov
adc
dec
mov
and
fwait
push
mov
pop
and
sub
int
cmp
jp
cmp
jg
loope
xor
push
lods
pop
cs
sbb
dec
out
arpl
sbb
lea
ljmp
pop
icebp
int
loop
lret
push
mov
ja
adc
jae
xor
pusha
bound
or
adc
push
arpl
dec
stc
sub
mov
hlt
jmp
jne
inc
mov
sub
or
call
cmp
push
das
and
dec
movsl
and
adc
mov
scas
sub
add
dec
lret
push
jmp
mov
test
push
mov
sbb
jp
sub
test
xchg
push
sub
inc
rcrb
cmp
jge
add
and
mov
into
push
fs
les
outsl
xchg
out
lds
or
mov
adc
mov
out
dec
xor
or
pop
add
or
mov
sub
push
inc
les
inc
arpl
int
or
adcl
sub
xor
xchg
mov
and
lods
push
cwtl
decl
xor
fcoms
pop
jae
jne
fstl
in
inc
inc
aaa
std
pop
sahf
xorb
out
xchg
push
fistl
sti
push
aaa
mov
jo
insl
aad
aas
call
adc
or
pushf
push
lds
push
cmp
jg
jbe
jne
cld
push
ret
ja
cmp
scas
in
and
addr16
sbb
push
fsts
sbb
xchg
mov
dec
mov
scas
pop
cmp
dec
inc
pop
test
sbb
inc
mov
adc
loopne
std
shll
or
dec
mov
push
cs
add
jl
adc
stos
mov
movsl
xlat
ret
xlat
fnsave
add
xor
sub
pop
pop
outsl
icebp
rcl
jno
dec
pop
movsb
fistpll
mov
mov
stc
xchg
cmp
xchg
add
jge
fnsave
and
sbb
nop
test
and
jmp
push
outsb
outsb
std
mov
push
mov
sarb
pop
js
cmp
stos
popa
push
std
rolb
jecxz
jmp
mov
jmp
hlt
add
imul
pop
testb
fsubr
cwtl
or
push
jno
rcrb
movhps
dec
arpl
or
cmpsl
xchg
andb
bound
fcmovne
and
daa
fld
sub
fisubl
dec
loope
dec
mov
sbb
pushf
inc
sarb
push
add
shrb
sarl
mul
and
add
or
mov
jmp
cltd
shll
xchg
or
bnd
jnp
cmp
cmpsl
or
out
push
inc
cmpsb
mov
dec
mov
xchg
and
mov
sub
cmp
out
pop
mov
gs
sbb
sub
dec
add
mov
les
movl
hlt
pop
jmp
and
or
adc
pop
lret
xor
pop
dec
pop
pop
pop
pop
fstpt
leave
sub
or
aam
iret
cli
pop
xor
dec
mov
ljmp
xor
add
add
jecxz
lret
stos
rclw
clc
rorl
push
or
inc
pop
mov
repz
xchg
push
lods
push
adc
mov
push
addr16
sbb
or
cmp
adc
mov
orl
or
mov
cld
loopne
or
inc
pop
sbb
lods
or
idivl
into
dec
xlat
ljmp
jl
push
xor
loope
clc
pushf
in
rclb
adc
imul
cmpl
popf
cmp
in
lcall
in
movsb
insl
jnp
adc
mov
xchg
add
idivb
xchg
sbb
mov
jo
sbb
cwtl
sbb
add
sbb
mov
dec
jne
pop
test
add
cmpb
cmp
jecxz
out
enter
or
push
lcall
es
je
or
inc
xor
in
stc
das
popa
cmc
aam
xor
push
lret
in
aad
out
outsl
xor
jecxz
dec
xor
andb
mov
jno
loopne
stos
dec
sbb
sub
out
sub
and
mov
or
fidivrl
in
and
orl
lods
mov
jg
fdivs
ror
inc
mov
jae
fiaddl
add
mov
pop
push
imul
dec
mov
inc
mov
inc
inc
int
in
mov
and
mov
lods
pusha
mov
les
cltd
push
sub
loope
jmp
shlb
popa
mov
xor
adc
pop
out
xor
cltd
push
ja
xchg
mov
cmp
mov
sbb
leave
jo
jno
lahf
aad
inc
dec
out
mov
fsubrs
js
fld
std
aam
push
mov
in
xor
inc
fs
adc
cmpsl
or
icebp
leave
mov
stos
dec
mov
fwait
clc
jns
or
inc
pop
sub
pop
mov
nop
inc
movsl
out
dec
pop
and
jg
stos
pop
aaa
mov
jl,pn
clc
jnp
stos
inc
mov
mov
xor
loop
push
loopne
xchg
popf
movl
insl
and
mov
popa
adc
jle
cmpsl
add
dec
movsl
sti
stos
cld
jecxz
ljmp
sub
setae
sbb
stc
push
mov
mov
fwait
mov
xchg
push
jmp
testl
test
insl
xchg
icebp
adc
ljmp
lret
hlt
adc
or
mov
push
inc
xor
jno
pop
inc
xchg
push
insl
xor
xchg
mov
mov
mov
lock
sbb
jb
cld
dec
mov
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
mov
jae
jp
sbb
jp
jne
pop
pop
shll
pusha
scas
movsl
dec
lret
fisttpl
push
inc
stc
mov
adc
cs
push
xor
pushf
ja
fwait
mov
stos
sub
sbb
xlat
lret
dec
push
xor
xchg
stc
fcmovu
outsb
loopne
xor
stos
or
fldenv
out
lods
idiv
std
addl
lods
jbe
xor
mov
movsb
add
cmp
in
add
and
js
ss
inc
mov
pop
push
dec
mov
sub
pop
dec
mov
lret
dec
pop
ret
and
std
lods
je
pop
les
cmpsb
test
dec
sbbb
mov
imul
iret
hlt
mov
push
xchg
loopw
push
jmp
dec
lcall
ss
and
mov
testb
scas
movb
push
pop
jne
ljmp
ss
lods
fnstsw
sub
daa
ds
pop
repnz
jl
out
cmc
movq
daa
adc
xor
mov
and
subb
mov
stc
call
mov
mov
outsl
and
jl
xchg
cltd
jl
addr16
mov
pop
push
cmp
mov
dec
loope
mov
shrb
cmp
call
jl
push
js
les
adc
pop
repnz
jl
ror
jbe
pop
fstps
pop
add
fisttpll
out
shrb
and
mov
dec
in
rcll
dec
mov
cld
sub
pop
dec
sub
xchg
xchg
and
push
fwait
aaa
test
mov
jns
mov
or
out
mov
xchg
push
sbb
or
inc
insl
dec
out
in
push
inc
xchg
mov
mov
sub
mov
add
pop
fsubrs
or
mov
shlb
sbb
ret
jns
cli
loope
dec
jp
call
repnz
ja
sbb
push
leave
sub
push
aas
cs
xchg
pop
push
fidivs
or
stos
jge
add
xorb
sub
sub
dec
rol
xor
and
mov
mov
lahf
sbb
int3
xor
sub
andl
ret
daa
adc
mov
lret
add
dec
push
cmp
movsl
les
push
mov
outsb
xor
xor
ficoml
nop
mov
jle
test
mov
std
lods
int3
and
rorl
rcll
bound
cli
fidivrs
repnz
out
imul
adc
sti
mov
insb
pop
push
out
mov
pop
out
jg
dec
mov
ja
rcr
mov
out
test
test
or
pop
push
popa
pop
pop
sub
mov
test
out
lcall
fstpl
lret
inc
jae
push
mov
cltd
pop
aad
sbb
mov
fildll
or
add
xlat
jae
cwtl
cmc
mov
rorb
pop
xchg
mov
ljmp
xchg
sbb
iret
pop
shrb
sbb
or
cmp
ds
shrl
dec
out
ljmp
popa
cmp
sub
push
xchg
pop
sub
insl
ja
test
ds
jmp
jmp
nop
aad
in
mov
xorb
dec
in
ret
pop
push
sub
test
movl
test
sbb
out
and
cld
dec
in
cmp
jge
cmpsb
lahf
mov
adc
incl
mov
push
and
mov
mov
or
jno
imul
sub
cmp
outsl
add
adc
bnd
add
int
loop
push
jae
lods
sub
aas
cmpsl
fsubrs
stos
cmc
fbld
hlt
fildl
lods
push
dec
add
roll
ds
rclb
push
or
xchg
loope
cmp
lea
pop
add
mov
jbe
imul
sarb
mov
dec
mov
mov
stos
fdivr
xor
out
mov
insl
test
es
repz
ror
jns
push
clc
jl
scas
mov
cmp
es
rclb
shll
mov
fucom
add
inc
loop
sub
enter
xlat
push
hlt
mov
jns
add
aad
xchg
subl
pop
push
cmp
add
lret
nop
sarl
adc
das
inc
pop
addl
sbb
sti
adc
or
add
xlat
push
mov
icebp
add
sarb
jecxz
mov
adc
pop
lea
inc
pop
mov
xlat
cwtl
outsb
mov
jbe
fwait
fs
inc
jae
sahf
push
sub
ret
mov
dec
add
test
xchg
adc
inc
clc
out
mov
jnp
or
stc
shrl
ja
lea
xbegin
ret
in
push
push
sub
or
std
out
mov
xchg
jmp
out
mov
clc
in
sub
leave
loope
jne
xor
jmp
lock
adc
lcall
push
lret
inc
stos
bound
aam
or
test
bound
outsb
testl
xchg
int
xchg
cmpsl
inc
cmc
arpl
cs
outsl
sub
mov
aam
xchg
dec
xchg
jle
jle
jnp
shrl
enter
sbb
dec
cwtl
ss
outsb
lods
mov
scas
mov
repnz
std
mov
ret
repz
add
inc
or
cmp
icebp
lcall
pusha
mov
lods
pop
mov
cwtl
push
daa
les
sti
lahf
out
inc
cmp
das
imul
adcb
mov
daa
in
les
clc
popf
fsub
add
cs
xchg
xor
xchg
cli
push
mov
mov
mov
les
xchg
adc
shrl
mov
sub
test
fucomp
dec
cmp
inc
add
iret
decl
lea
aam
xchg
dec
repnz
shll
jns
outsb
fsubl
xchg
inc
mov
inc
dec
loop
fwait
out
pop
pushf
mov
sbb
xchg
mov
inc
pop
inc
std
repnz
cmp
addr16
movsl
mov
ds
stos
lds
repz
gs
loope
push
sti
mov
fimuls
gs
cmpsb
sahf
cmpb
scas
adc
inc
push
sbb
add
fisttpl
push
mov
int
lods
dec
mov
and
or
rolb
test
dec
insl
mov
and
rorb
outsl
out
xchg
push
add
aaa
dec
pop
out
mov
xor
out
out
push
sub
jae
sbb
jnp
fisttpl
and
jb
mov
mov
cmp
daa
dec
mov
push
mov
pop
pop
dec
xor
and
int3
xor
inc
mov
js
jge
int
or
arpl
fldl
aad
je
mov
and
and
jle
sbb
xchg
insl
mov
xor
mov
sbb
clc
adcb
movsb
mov
adc
shr
scas
sbb
or
xchg
jp
mov
nop
in
arpl
jns
fwait
and
jne
xor
sub
loop
les
sbb
jnp
iret
das
das
in
rolb
or
ret
adc
sbb
add
mov
jae
outsb
lahf
cmc
fwait
jmp
and
jg
enter
adcw
mov
sub
aam
je
xchg
sub
xchg
sub
sub
loop
mov
jecxz
sbb
sbb
rorb
inc
or
ret
das
negl
sahf
mov
jno
lods
into
stc
sbb
rcrl
inc
fisubrs
aad
lahf
xor
pop
lahf
and
adc
cli
push
out
mov
cmc
insl
cmp
ja
imul
xchg
jo
das
sub
adc
nop
adc
mov
fsubl
test
pop
or
mov
adcl
lret
test
push
xor
int3
push
or
adc
xchg
nop
mov
mov
jns
jle
add
out
int
cmp
sub
xlat
mov
cmc
out
xchg
push
pop
jecxz
inc
js
dec
scas
sbb
repnz
cmpb
sbb
ret
jle
xchg
jg
sub
sbb
mov
ret
xchg
int
rclb
in
xor
adc
mov
xor
sbb
mov
jne
push
mov
and
mov
mov
loope
pushf
repz
data16
dec
leave
in
insb
sub
pop
mov
adc
cmp
add
sub
dec
cmp
movsl
mov
mov
lret
stos
and
lahf
aam
pop
sub
mov
or
sbb
pop
int
lahf
or
ss
imul
fidivl
or
push
sub
test
repz
aam
mov
cld
ja
js
and
out
pop
repnz
icebp
and
jae
jae
cmpsl
push
sbb
nop
sbb
cmp
cmp
mov
add
in
int
jbe
and
shll
mov
xor
pop
xor
adc
xchg
jecxz
adc
push
mull
xchg
fimuls
or
lret
mov
nop
inc
mov
sbb
and
push
fcoms
or
add
mov
insl
jge
es
jbe
ret
stc
and
mov
lods
inc
fists
adc
sub
loope
sub
iret
fsts
test
xchg
lahf
mov
cld
scas
in
lcall
xor
in
lods
jno
loop
test
or
fwait
cmpsb
in
je
jp
ds
rcll
add
inc
xchg
push
fistps
xor
push
dec
push
sub
int3
push
movsl
cld
repz
jno
outsl
pop
loope
cs
lahf
mov
cmp
jg
mov
jl
pop
js
inc
adc
mov
xchg
mov
sub
and
pop
jecxz
add
pop
jo
inc
cmp
jg
fdiv
test
push
iret
xchg
cmp
mov
cwtl
adc
inc
es
enter
pop
leave
adc
jnp
pop
sub
dec
or
add
mov
clc
lret
shll
in
pushf
out
add
and
dec
mov
xchg
pop
pop
or
sub
or
mov
dec
or
shll
inc
shr
int3
or
popf
xchg
sahf
pop
jno
xor
mov
sbb
les
push
js
add
leave
and
out
or
push
push
les
std
test
adc
mov
out
loope
nop
outsb
add
mov
jo
cmp
jbe
daa
loope
stos
popa
sbb
jno
scas
cmp
jle
xor
jne
jg
add
lret
loopne
aam
sar
es
pop
aas
fistpll
inc
mov
mov
push
shr
jle
fistpl
imul
jno
test
lods
ret
mov
add
inc
push
add
pop
xor
mov
loopne
scas
xchg
cwtl
es
cmp
addb
xchg
xchg
mov
mov
add
in
push
subl
insb
cli
aaa
and
jns
sub
sub
push
cmpsl
ss
aas
shll
movsb
mov
inc
subl
push
ret
aas
mov
jecxz
inc
xchg
clc
psubsb
cli
cltd
cmp
jnp
addb
mov
mov
push
add
sbb
jmp
pusha
outsb
mov
psubusw
push
sbb
cmp
or
push
aas
shl
dec
adc
jno
jmp
sub
cmpb
dec
lock
lds
xorb
push
xchg
popa
jns
clc
pop
push
out
stos
mov
lret
inc
cmp
or
or
dec
movsl
add
loop
mov
cmc
xchg
and
push
or
ret
out
mov
outsb
cmp
cmp
out
pop
mov
ljmp
leave
mov
mov
mov
add
or
or
rcr
jae
call
sub
aas
idivb
out
cmp
loope
jge
daa
push
ja
jmp
xchg
clc
sub
or
cmp
push
push
jl
je
or
insl
les
cmp
push
cmpsb
in
cmp
icebp
cmp
scas
adc
jle
or
aam
mov
cmpl
push
popf
popa
jne
iret
testl
push
je
push
addr16
pop
or
cmp
ds
jo
data16
adc
jl
add
leave
rclb
dec
sbb
scas
add
ljmp
aas
lods
pop
jmp
jp
rorb
lock
xchg
imul
mov
movsl
gs
sub
mov
pop
das
pop
adc
sbb
mov
jbe
pop
push
mov
pop
inc
int
sbb
cli
lcall
repnz
cmp
and
jmp
push
pop
test
cmpsl
bound
xchg
cmp
push
jmp
adc
in
pop
mov
sub
push
mov
dec
add
addr16
pop
iret
mov
xchg
shr
lods
pop
or
add
xchg
loop
cmp
push
push
mov
mov
and
pusha
int3
push
pop
into
mov
xor
push
stc
xor
push
mov
nop
mov
arpl
out
out
repnz
pop
inc
dec
popa
push
inc
xchg
jb
sub
cltd
ja
nop
data16
ljmp
loop
xor
push
out
xchg
cltd
xchg
cmp
lods
daa
and
pop
aas
aas
scas
cld
adc
nop
negl
inc
mov
push
dec
sahf
jp
lahf
jle
mov
mov
fdivrl
xchg
mov
pop
cli
push
xor
enter
sbb
and
or
rcrl
cmp
mov
pop
mov
cmc
fcmovbe
je
iret
or
cld
gs
into
mov
cmp
xlat
cmpsl
lock
jnp
jbe
sub
mov
jne
popa
cmp
sahf
test
xchg
xlat
cltd
pop
lods
mov
adc
jg
das
mov
jo
lods
insb
lret
or
jns
sub
fadds
and
sbb
jg
mov
add
js
sub
and
mov
pop
push
into
adc
mov
js
push
fildll
xchg
lea
ds
in
ds
mov
lods
inc
lods
lcall
sub
jb
push
fstps
cs
xor
sbb
sbb
dec
sahf
push
lret
fildl
cwtl
adc
sbb
das
adc
jp
loope,pn
inc
mov
leave
xchg
loop
in
mov
and
or
cvtps2pi
int
call
repz
jb
adc
repnz
dec
add
pop
scas
pop
or
ljmp
jle
adc
sub
inc
sub
push
jp
push
out
push
pop
xor
or
xor
push
mov
sbb
pop
mov
aas
js
icebp
adc
imul
pop
mov
test
push
dec
sbb
enter
imul
mov
mov
int3
push
nop
and
jl
push
mov
push
jp
mov
loop
ljmp
jg
stos
js
in
lods
fstl
xlat
mov
push
aad
xlat
sub
add
dec
fwait
aam
cmp
mov
adc
mov
or
aad
inc
dec
out
mov
inc
jl
pop
data16
or
and
and
fstpl
jge
cmp
mov
lods
inc
push
sbb
stc
or
popa
mov
leave
mov
sti
cmc
and
into
pop
and
outsl
mov
jecxz
ljmp
in
adc
inc
cmp
push
lret
in
mov
push
push
xchg
or
xchg
outsl
xor
inc
and
jl
mov
inc
dec
ds
js
test
dec
shlb
pop
jg
loopne
inc
mov
shlb
sub
lea
les
clc
test
adc
scas
stos
dec
bound
movsl
nop
sbb
andb
into
cmpsl
es
push
orl
sub
imul
jge
pop
mov
in
push
inc
xchg
mov
jp
loop
jae
out
scas
into
jnp
scas
call
push
int3
sub
xor
dec
enter
xor
or
out
ret
daa
lret
and
ja
and
inc
sub
ljmp
js
es
aad
adc
cmpsb
jae
sub
sti
push
sub
sarl
jg
push
mov
test
lret
xor
icebp
testl
sub
pop
mov
bts
mov
loopne
inc
pop
pop
cli
jb
jecxz
mov
mov
clc
out
jae
mov
push
daa
cmp
fwait
xor
mov
cmp
mov
lahf
jg
push
in
push
xchg
jo
in
ds
out
out
xor
jne
mov
enter
jl
cmp
test
jmp
loop
lods
cmp
mov
mov
pushf
lock
mov
xor
fsubrs
push
sub
dec
hlt
in
bound
pop
decl
mov
add
mov
loopne
pop
mov
cmp
add
in
push
xchg
dec
lret
xor
jno
stc
daa
int
ret
into
jnp
lahf
jns
mov
cmp
sti
out
insb
push
aaa
xchg
xor
mov
sub
or
rcr
ret
adc
es
mov
cmp
and
sub
pop
mov
inc
mov
xor
adc
lods
jmp
sbb
aad
sbb
in
or
jne
cmpsb
xor
or
in
mov
adcb
jle
inc
rolb
in
fdiv
or
cltd
cmp
or
and
push
add
inc
xchg
loopne
mov
pop
adc
aas
enter
mov
and
jne
add
mov
sbb
add
mov
dec
jo
movl
fisubs
push
adc
add
ret
mov
lods
inc
jne
mov
inc
xor
push
sti
pop
repnz
pusha
push
mov
jae
or
call
iret
subl
and
mov
cwtl
push
cs
mov
stos
cltd
xor
inc
outsl
pop
stc
in
test
xchg
fisubrs
and
mov
mov
sbb
xor
dec
scas
jnp
out
jge
mov
xor
push
rcrl
lret
aas
ljmp
cmp
loope
test
daa
clc
in
outsl
xchg
les
jle
xor
jl
xchg
xor
push
sbb
clc
sti
push
cmc
scas
dec
sub
rcrl
or
pusha
sti
cmc
pop
push
scas
xchg
sahf
mov
cmp
xadd
sub
out
jge
loop
or
jge
jnp
adc
mov
jno
adc
jge
lret
arpl
lret
mov
movsl
push
fstpl
add
outsb
jle
cmp
inc
xchg
rorb
aaa
xor
in
mov
add
sahf
and
or
mov
mov
or
arpl
stos
push
cmp
adc
push
adc
pop
imul
adc
fs
xchg
jmp
iretw
jge
or
xor
or
mov
mov
mov
jae
mov
push
int
nop
fidivrl
xchg
dec
and
imul
ljmp
sbb
icebp
aad
rcrb
fdivrl
jge
lret
mov
icebp
loopne
xchg
inc
inc
sbb
fstpl
fdivrl
push
movsl
call
dec
das
mov
add
aam
mov
andb
push
jb
jns
movsb
pop
imul
xor
lret
mov
insb
jne
ret
sbb
inc
bound
push
dec
out
push
clc
mov
aam
mov
lahf
cmpsl
inc
nop
or
hlt
cmpl
mov
jne
lock
inc
testb
inc
insl
sbb
data16
ds
pop
sbb
dec
frstor
pop
pop
mov
mov
mov
mov
and
mov
fildl
add
dec
inc
xchg
sbb
add
add
adc
adc
cli
cs
mov
and
test
pop
jge
mov
int3
sbb
nop
push
cmp
jp
mov
and
popa
ds
aas
push
pop
nop
push
mov
jnp
mov
mov
movsb
lret
rcl
adc
jae
mov
fnsave
sbb
add
xchg
nop
call
iret
or
or
push
addr16
xor
lcall
jns
push
mov
xchg
popf
cmp
mov
repz
jmp
cld
loopne
into
mov
xor
push
mov
mov
mov
fdivrp
push
shl
dec
mov
into
ja
lods
adc
loope
dec
and
dec
pop
repnz
ljmp
cmp
inc
xlat
jb
mov
push
mov
cltd
and
shlb
lret
fcompl
ljmp
pop
es
inc
out
jl
test
lahf
movsl
sbb
cli
pop
xor
push
fcoml
mov
inc
lea
push
in
loopne
mov
lods
pop
cmp
xchg
das
sbb
sub
sbb
push
sbb
push
imul
pop
dec
or
repnz
push
pop
pop
inc
repnz
jp
lret
xchg
mov
movsb
add
daa
push
leave
inc
leave
pop
int
pop
push
out
loop
add
imul
pop
pop
imul
pop
fwait
sbb
jecxz
cmp
call
push
stos
sub
inc
ret
loope
cltd
sub
mov
fs
mov
pop
cmc
leave
fisubs
adc
jno
mov
adc
mov
ljmp
inc
pop
pop
xchg
jp
sahf
mov
leave
mov
enter
fcom
xchg
pusha
std
xor
add
stos
sahf
shl
inc
push
xchg
enter
in
aas
adc
sahf
daa
lcall
push
jno
and
pop
repnz
scas
mov
xchg
add
jecxz
addl
and
aaa
lret
pop
pop
andb
or
push
movsb
popf
dec
icebp
mov
jle
cli
cmp
sbb
or
mov
fs
push
in
in
jae
push
lods
add
jp
sarl
mov
loopne
push
fisttpl
adcl
faddp
std
jp
outsb
or
scas
mov
arpl
andl
in
sub
push
dec
cmc
stos
popa
aaa
sub
pop
leave
mov
cltd
or
test
loopne
shlb
test
lock
in
dec
clc
cld
mov
pusha
shlb
mov
jb
cmpsl
shlb
shr
test
dec
lods
fstpt
inc
sbb
call
xor
pop
movsl
xor
cltd
mov
or
shr
mov
push
pop
xor
pop
cmp
mov
shrb
fdivs
fldenv
movl
inc
sarl
cmp
adc
jnp
loope
add
push
push
mov
mov
aas
mov
repnz
or
sub
pushf
sarb
pop
imul
dec
jg
dec
xorb
fcoms
mov
xchg
mov
into
pcmpgtw
cld
ljmp
mov
loop
dec
sbb
popf
cs
push
fwait
xor
rclb
add
loopne
popf
lea
xchg
popf
mov
xor
inc
dec
lods
sbb
jle
mov
jne
fistl
sbb
mov
subb
and
and
fisttpl
aad
cs
jl
cmpsb
gs
fstpl
movsl
or
cltd
fisubs
pop
aad
pop
or
daa
pop
insl
call
mov
push
pop
inc
push
nop
test
je
mov
xor
cmp
mul
rcrb
aam
addl
adc
daa
aas
mov
shlb
aad
mov
clc
out
xchg
ss
lock
ljmp
mov
mov
icebp
leave
and
cmp
lea
sub
push
mov
ds
aaa
cmp
jg
cmp
daa
nop
out
pushf
add
fldenv
cwtl
arpl
jge
sbb
mov
pop
les
jmp
push
lods
sbb
fisubs
imul
and
or
gs
jl,pn
bound
in
mov
mov
mov
loopne
push
mov
sbb
jo
test
outsl
push
mov
outsl
mov
push
nop
rcr
pop
or
pushf
and
add
jmp
es
xlat
add
xor
mov
movsl
and
addr16
push
nop
inc
jne
test
into
pop
xor
pushf
jnp
and
cmp
jecxz
pop
fisubrl
lds
jmp
out
mov
pop
call
jo
imul
push
imul
add
aad
push
jo
ds
in
xor
loopne
push
xor
pop
adc
daa
ds
stos
and
push
sub
push
pcmpeqw
lcall
ret
jne
pop
jmp
lds
cmp
rorl
mov
sub
pushl
repnz
scas
push
push
or
pop
andb
pop
aas
and
sub
push
jb
push
ja
daa
cwtl
pop
aaa
or
pop
xchg
mov
inc
cmp
mov
cmpsl
lret
hlt
cmpsb
inc
cmpsl
shlb
call
and
out
dec
push
cmp
aaa
cld
and
push
dec
inc
inc
sub
xchg
cmp
mov
sub
js
xchg
add
sub
test
mov
fs
sti
mov
inc
push
sub
sub
adc
xor
setge
test
and
dec
out
sub
mov
mov
leave
mov
fnsave
jmp
adc
mov
lods
xchg
mov
push
or
adc
inc
mov
lret
int
push
and
mov
insb
roll
stos
xor
jb
test
shlb
pop
pop
cmp
xchg
jns
pop
in
cs
add
iret
dec
mov
jge
lret
mov
call
out
dec
sbb
rcrb
icebp
movb
jmp
jb
ljmp
jl
jno
nopl
or
add
in
out
jmp
cwtl
adc
mov
loopne
imul
jne
mov
jb
jmp
dec
mov
movsl
cwtl
push
pop
daa
dec
xor
int3
pop
outsl
add
adc
dec
test
dec
sub
sub
insl
mov
pop
ds
mov
in
mov
cmc
mov
leave
jmp
adc
mov
daa
and
gs
push
shr
and
xchg
xor
into
scas
into
sub
add
mov
push
je
pop
in
mov
and
scas
in
out
js
clc
fwait
mov
or
call
scas
dec
add
outsb
mov
inc
aad
add
sbb
sub
inc
cs
lea
or
mov
add
cmpsl
daa
pop
outsb
jbe
xor
mov
push
into
test
push
sub
fimull
pop
sarb
andb
sub
clc
divl
mov
pop
lret
xchg
fs
or
mov
jnp
push
not
pushf
sub
ret
push
orl
js
lods
and
cmp
jge
and
insl
daa
fisubrl
bound
test
stc
std
out
jp
enter
dec
sbb
rcr
je
sahf
cwtl
int3
ret
sbb
xchg
insb
imul
pop
and
mov
mov
shlw
jb
rol
sahf
mov
mov
inc
push
push
stos
psubusw
rorb
jnp
loopne
jge
mov
pop
mov
or
ss
mov
push
cltd
dec
popf
out
push
call
xor
cltd
stc
lds
je
lret
add
adc
movl
ljmp
push
jp
xchg
mov
jae
lret
push
cmp
mov
adc
add
lock
enter
rdpmc
ret
das
aas
lods
or
inc
stos
fldl
adc
test
sti
mov
sti
nop
xchg
mov
out
and
xor
xchg
pushf
mov
add
mov
mov
dec
and
scas
and
aas
pop
cwtl
aaa
cmc
outsb
jge
dec
pop
inc
mov
mov
xchg
mov
sbb
push
sbb
mov
xor
adc
jle
test
pop
mov
or
xchg
and
mov
jle
test
add
insl
xor
in
adc
mov
and
cld
xchg
int
leave
insb
dec
jbe
jp
mov
push
lods
dec
lret
sub
sub
fisttps
mov
movsl
mov
sbbb
pop
sub
and
mov
lock
dec
ret
ret
mov
mov
add
mov
pop
ficomps
vmread
negl
or
fnstsw
xlat
stos
test
mov
push
inc
out
jnp
ds
ret
cmpb
and
jle
enter
xor
adcl
dec
icebp
je
push
lcall
lcall
mov
xor
ss
movsl
mov
rcll
ljmp
mov
push
and
sti
out
scas
xchg
in
add
fnstenv
rclb
lea
or
mov
adc
gs
or
adc
insb
push
repnz
imull
int3
add
or
ret
data16
in
dec
jle
push
mov
cmpsl
add
int
mov
stc
mov
data16
push
pop
cmp
xchg
push
mov
mov
push
mov
mov
gs
lods
push
ja
mov
call
into
mov
test
xor
jne
shrl
scas
mov
insl
test
push
aas
pop
fbstp
dec
sbb
mov
or
fwait
scas
shr
popf
push
jmp
popa
out
inc
fisubrl
imul
xchg
fimull
icebp
mov
shlb
pop
jb
ss
repz
ljmp
out
jns
addb
sub
xchg
jecxz
xchg
adc
push
pop
xchg
add
in
sub
sub
push
sti
in
adc
cwtl
add
push
cmp
add
nop
stos
sub
mov
dec
mov
out
adc
pop
ljmp
xchg
gs
movsl
jp
outsb
out
xor
or
out
sub
mov
loopne
dec
add
loope
pop
ja
popa
push
int
lock
out
cmpsl
xchg
xor
sbb
ret
sbb
std
pop
xlat
cmp
gs
scas
and
mov
xor
jnp
xchg
cmp
addr16
pop
rorb
outsb
lret
cmp
inc
dec
add
adc
ds
sub
sub
fstpl
movsl
idivb
aaa
lcall
orl
adc
pop
cmp
cmc
dec
addl
jbe
idiv
mov
lds
les
jmp
cwtl
and
and
stc
sbb
sub
sub
sbb
vphaddwq
jns
push
jns
leave
iret
lock
lret
dec
fdivr
decl
add
add
add
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
ljmp
jp
stos
ror
mov
fisubrs
imul
cmp
add
push
inc
decl
or
mov
into
mull
and
aam
stos
bound
and
repz
clc
jns
add
dec
xchg
push
lret
iret
push
jae
xchg
or
inc
xchg
stos
jmp
jmp
mov
push
dec
movsl
out
sbb
sub
sarl
popf
je
aaa
ds
and
pop
loopne
and
xorb
or
push
dec
test
fildll
sub
outsl
sub
push
loopne
shrl
adc
enter
dec
outsb
jno
pop
shlb
add
call
or
in
test
inc
xlat
push
push
out
fninit
cld
test
icebp
mul
jae
mov
xor
lods
mov
push
xchg
ss
stos
icebp
aad
sbb
dec
xlat
mov
mov
push
pop
outsl
mov
sub
pop
fcoms
inc
add
mov
rorb
les
cmpsb
outsb
push
movsl
push
lods
adc
sbb
fildl
xchg
popa
cltd
addr16
pop
push
repz
call
lods
adc
mov
xor
adc
add
popa
pop
sub
sbb
mov
sbb
xchg
insl
xor
ror
mov
outsb
popa
adc
bound
test
mov
push
add
fists
cmp
cmc
mov
xor
imul
cwtl
adc
sub
cli
stos
insb
into
rorl
into
jg
cmp
mov
lds
lret
push
pop
dec
sub
pop
pop
xchg
or
mov
pusha
mov
in
sahf
ret
pop
pop
mov
or
pop
cltd
inc
dec
xchg
inc
in
xor
sbb
xchg
pop
push
cltd
loop
leave
in
in
sahf
cmp
cld
push
and
mov
ss
xchg
popa
fdiv
cmp
in
xchg
or
sbb
inc
mov
lds
push
in
jne
cmp
dec
daa
mov
mov
enter
mov
imul
dec
loopne
xchg
push
arpl
xchg
jp
movb
inc
jg
xor
inc
jl
mov
jae
cmp
mov
jae
out
jbe
fnstcw
jle
xor
push
mov
mov
jbe
fldcw
stos
movsl
rolb
xor
xchg
sub
ret
xchg
push
push
fisttpl
leave
nop
mov
movsl
loopne
stc
xchg
adc
mov
or
mov
mov
pushf
in
das
sbb
or
xchg
adc
popf
adc
aaa
xchg
daa
enter
cld
punpcklwd
add
or
not
and
and
mov
fsubrl
mov
sub
push
jne
imul
adc
cmpsl
mov
test
inc
scas
shr
lods
sub
sar
testb
cltd
jne
sub
cmp
pushf
in
adc
adcb
cmpsl
outsb
movsb
stc
push
sahf
sbbb
mov
mov
js
mov
cld
fisttpll
addr16
les
mov
bnd
pushf
dec
cmp
sahf
mov
aad
and
mov
push
cmp
xchg
mov
adc
aam
cmpsl
inc
fadds
stos
cmp
xor
mov
mov
sbb
xor
and
mov
adc
enter
mov
jecxz
adc
cli
shl
imul
push
sbb
imul
jne
push
cmp
push
xchg
sbb
mov
das
stc
mov
sti
mov
jbe
aaa
out
pop
mov
jae
mov
or
cmc
int
outsl
cmp
xchg
adc
pop
out
pushf
scas
test
cmpsl
xor
xor
sub
xlat
outsl
jg
xor
xor
imul
adc
cmp
mov
mov
into
dec
movsb
mov
mov
mov
push
mov
or
cli
pop
adc
test
jb
xchg
repnz
std
push
movsl
xchg
loop
popa
f2xm1
xchg
mov
xchg
jge
push
adc
xor
pop
sahf
mov
shlb
cli
add
push
sbb
stc
mov
mov
push
cmp
ljmp
mov
xchg
xor
adc
rclb
mov
ret
cld
sbb
cld
js
ss
test
push
loope
rcrl
negl
cwtl
mov
ss
fwait
mov
lods
popa
mov
jno
les
insb
xor
push
cli
fimull
in
xchg
in
sbb
cmp
and
push
xchg
sysexit
xchg
sbb
cmp
ret
push
sahf
xchg
add
inc
mov
test
or
loope
mov
insb
push
or
fcompp
mov
sub
shrl
and
cmpsl
inc
fwait
sub
mov
jne
jbe
out
mov
mov
mov
mov
push
mulb
dec
shrl
movb
push
xchg
pop
cld
or
out
sahf
cmp
dec
mov
arpl
push
lock
hlt
insl
and
inc
mov
cmc
xor
pusha
repnz
rcr
push
fiadds
shlb
rorl
jge
dec
sbb
push
sub
add
loopne
lock
fiadds
jo
out
mov
mov
xchg
fcompl
test
and
cmp
or
stos
testb
pop
js,pn
sbb
outsl
push
mov
cmp
imul
sti
loop
ds
jmp
popf
xchg
add
rclb
add
lods
pushf
cmp
or
sbb
arpl
mov
jmp
test
inc
movsl
cmp
aam
cltd
xchg
and
fnstenv
imul
lds
mov
out
test
inc
xchg
adc
ss
fidivl
jns
cmp
mov
mov
sub
xchg
fsubrs
das
sar
or
setl
mov
repz
in
push
iret
mov
fidivrl
sub
into
dec
and
lods
xchg
mov
xchg
ds
mov
pusha
dec
ret
xchg
dec
mov
out
add
jle
adc
add
or
out
divb
add
sbb
push
sbb
loope
xchg
in
sbb
dec
mov
sub
cmpl
je
fcoms
inc
xor
mov
aas
sub
loop
cmp
addr16
out
xchg
mov
jnp
inc
repnz
ret
outsl
in
xor
mov
sarl
push
hlt
jnp
adc
sub
fsubl
addb
mov
aam
sbb
scas
mov
in
test
out
in
lock
dec
push
stos
in
and
pusha
movsb
inc
or
cli
ljmp
arpl
aam
inc
mov
das
test
push
mov
push
dec
data16
orb
push
add
imul
das
insb
sub
repnz
loopne
rcrl
push
lods
fbld
rorb
pop
push
or
call
cs
lods
clc
sub
xor
daa
pop
ds
xchg
xor
push
dec
cmp
xor
mov
ss
aaa
push
fwait
adc
add
pop
mov
loop
pop
and
sub
mov
arpl
sub
sub
scas
rolb
stc
sbb
dec
ret
jno
push
inc
int3
cmp
mov
out
push
fs
mov
mov
mov
mov
test
pop
adc
enter
mov
cwtl
jnp
jb
dec
or
jp
lahf
xchg
add
xchg
or
ja
andl
mov
mov
cld
jecxz
cmpsl
andb
mov
bound
scas
test
cltd
pop
push
pop
cs
adc
xor
pop
or
or
adc
out
inc
aam
ficomps
fiadds
push
jge
push
adc
inc
sub
test
mov
idivl
mov
cmp
enter
mov
in
andl
outsb
add
stos
shl
pop
maxps
pushf
xchg
stos
xchg
mov
icebp
pop
pop
outsb
push
cld
mov
rol
es
in
pop
xchg
in
es
pop
je
test
out
or
push
mov
rol
cli
dec
or
add
mov
mov
jl
in
mov
repz
pop
rorb
inc
mov
dec
mov
sub
shrl
push
push
ret
push
push
add
sub
jbe
aas
pop
pop
mov
or
adc
sub
and
xchg
and
movsl
es
dec
dec
enter
sub
cmp
fistpl
push
jle
dec
adc
xor
lock
sub
andl
popa
pop
ds
loop
clc
fdivs
loopew
push
push
mov
sti
mov
das
out
pop
mov
testl
nop
sub
bound
clc
jle
out
test
inc
cmpsb
mov
popa
pop
mov
xchg
frstor
sub
mov
mov
sub
sbb
adc
mov
test
scas
or
push
subb
mov
icebp
dec
sbb
nop
sti
push
pushf
shlb
lds
push
cmp
xchg
add
sbb
jecxz
dec
sub
inc
popf
lods
hlt
push
inc
mov
or
cmp
dec
jge
xchg
rcrl
sbb
dec
hlt
adc
cs
jle
jge
lock
in
pop
jecxz
dec
pusha
adc
or
pop
pop
bound
pop
push
push
xchg
fbstp
pusha
pop
call
dec
insl
inc
cmp
jl
xor
push
lret
test
mov
mov
sarb
aas
lds
insl
sub
stos
sub
jbe
insb
arpl
ljmp
incb
mov
pop
loop
xor
arpl
sub
xor
sar
adcl
inc
lods
lcall
out
hlt
jno
inc
push
ja
cs
movsl
ljmp
movsb
mov
adc
loop
mov
enter
or
int3
pop
mov
enter
sbbb
xchg
sub
xor
les
loope
adc
mov
rcrl
sbb
stos
les
gs
sbb
and
ret
pusha
push
sub
cmpsl
xorb
mov
mov
jne
xchg
test
and
sbb
leave
dec
clc
rcll
push
mov
xchg
pusha
test
fidivs
mov
loopne
lods
out
insl
pop
mov
test
fldt
or
xchg
loop
mov
cld
imul
cmpsb
aaa
inc
xchg
jecxz
je
mov
ja
outsb
stos
jecxz
cmp
repnz
push
push
mov
cwtl
pop
cmp
fsubrs
fcoms
jb
mov
lods
mov
ret
lock
repz
sbb
or
mov
data16
jecxz
mov
pop
repz
mov
jne
je
outsl
pop
in
add
fstl
ljmp
shlb
add
repz
mov
pop
popa
jae
inc
lret
out
mov
int
sbb
cmp
pop
sub
add
por
or
sub
loope
and
xchg
add
in
mov
or
cmp
sbb
mov
push
mov
enter
cld
loop
mov
xchg
cmp
popa
cld
jle
adc
jecxz
repz
push
out
loop
sarb
insl
test
adc
lea
mov
xor
daa
xchg
jb
xchg
or
xchg
mov
jae
fidivrs
inc
or
mov
sub
cmp
and
cmp
or
cmpsb
shll
inc
shrl
stos
ret
adc
or
rcrb
and
stos
scas
jmp
es
inc
scas
inc
jge
cmp
loopne
pop
cmp
pop
bound
xchg
push
mov
mov
jecxz
xchg
xchg
mov
mov
jbe
shlb
ret
cs
aaa
cli
cmpsb
mov
ljmp
cmp
pop
ja
xchg
adc
out
sbb
add
pop
jg
mov
icebp
inc
inc
scas
sbb
outsl
and
mov
or
roll
mov
pop
cmpsb
adc
jns
dec
xor
adc
lods
mov
dec
dec
stos
jns
out
cmp
cmpsl
jnp
lret
out
mov
adc
std
push
mov
pop
push
xlat
push
sub
leave
shlb
push
pop
mov
cmp
outsb
test
decb
incb
insb
cmp
mov
xchg
movsl
sub
and
pop
jle
adc
insl
idivb
pop
in
fwait
xadd
pop
test
sub
push
negl
pop
mov
je
lds
in
inc
jo
sub
mov
and
pushf
ljmp
pop
lds
sbb
sbb
loope
sbb
sub
inc
push
dec
out
stos
mov
mov
fsubs
popf
stos
bound
mov
sub
mov
cmp
mov
loop
xor
cmc
xchg
push
xlat
fidivs
test
int3
pop
adc
cs
ja
mov
test
outsb
cmp
dec
xor
mov
or
rol
push
xchg
fcmove
push
idivb
std
daa
or
inc
int
mov
and
inc
loop
jmp
jo
dec
cmp
and
data16
cltd
adc
sub
xor
cmpsl
gs
ds
push
push
shrl
and
leave
dec
shl
cmpsl
and
jle
xchg
jns
push
pop
xor
scas
xor
stc
dec
lret
popf
pop
mov
dec
clc
pop
mov
inc
aad
fisubl
sub
popf
imul
cli
cmp
or
mov
into
testb
lods
cmc
lea
stos
outsl
repnz
imul
ljmp
fmul
mov
stc
mov
loop
lds
sahf
adc
mov
dec
push
scas
mov
iret
lret
fnstsw
dec
xor
clc
xchg
mov
lock
jecxz
faddp
xor
add
out
mov
jno
call
sbb
shrl
cmp
ret
jge
mov
xchg
sub
test
lahf
iret
adcb
in
add
mov
sub
fdivrs
outsl
cmc
insb
pushl
xchg
cld
sub
out
daa
push
scas
andl
jl
jo
inc
xorb
mov
shll
scas
xor
push
sub
out
jle
push
fimuls
lret
movsl
adc
or
cwtl
pop
loope
push
adc
cmc
add
mov
fstpl
ja
and
cmpsl
xor
les
jp
jbe
cmp
imul
sbb
lods
adc
roll
jbe
movsb
loop
push
lret
mov
pop
mov
push
jnp
mov
ret
test
ret
push
cwtl
mov
andl
xlat
adc
mov
push
pop
mov
xor
out
cmp
addb
xchg
ret
mov
add
pop
mov
scas
sub
push
xor
mov
loop
sbb
fidivl
push
jno
fdivs
dec
lea
and
jge
jnp
into
cmpl
xorl
mov
js
inc
sbb
hlt
jne
jle
lds
or
xchg
sub
sbb
repnz
push
sbb
scas
setnp
aas
pop
daa
mov
mov
fldt
mov
and
aas
pop
or
fisubrs
fistpll
imul
rcr
mov
jb
pusha
sbb
and
lods
xchg
mov
ja
insl
cwtl
add
outsb
xchg
jp
imul
lcall
xor
xchg
cmp
sbb
test
je
mov
call
xor
pop
out
xchg
addr16
cli
jmp
outsl
ljmp
lret
lods
pop
cmp
and
popa
ds
xchg
js
shrb
les
nop
sbb
test
xor
push
std
xor
idivl
aas
dec
ja
push
loop
sub
or
movsb
test
jg
mulb
push
lret
in
int3
out
addr16
fadd
mov
mov
pop
push
inc
sub
push
fs
sub
enter
mov
or
addr16
imul
sbb
xchg
inc
push
pop
hlt
ja
mov
xchg
or
dec
jecxz
jl
mov
int
push
mov
nop
fcomps
adc
in
adc
pop
mov
push
lods
sbb
enter
or
inc
insl
imul
jle
pop
adc
mov
lds
xchg
xchg
cmp
mov
mov
cltd
dec
outsb
sub
jmp
shrb
xchg
dec
adc
ds
cli
push
add
pop
xor
insb
mov
mov
cld
xchg
call
sub
into
inc
mov
scas
adc
pop
xchg
cld
cmp
cmp
xor
arpl
jp
stos
cld
sub
addr16
fldcw
inc
mov
dec
sarl
sbb
data16
adc
pop
jae
fsts
xor
leave
xor
mov
mov
ljmp
cli
sbbl
cmp
and
mov
push
lret
xchg
arpl
cld
inc
lret
aad
icebp
lds
jo
ret
xor
jbe
mov
inc
push
xchg
rorl
imul
test
push
dec
inc
push
fsubl
test
push
adc
iret
repz
addr16
mov
jp
or
and
fcmovnbe
lcall
mov
mov
cmpsl
jmp
nop
cmc
cwtl
test
pop
or
loope
gs
lcall
sub
jne
sbb
push
scas
adc
mov
test
mov
xchg
sbb
aas
sub
push
xchg
xchg
mov
mov
hlt
negb
loopne
in
in
aas
pop
clc
mov
out
stos
imul
call
arpl
and
inc
lds
in
dec
clc
lock
xor
out
arpl
mov
add
xchg
fildl
insl
rolb
pop
shll
ljmp
xlat
and
adc
test
mov
dec
mov
push
add
popf
sub
les
sbbl
les
pop
movsl
je
jecxz
cmp
jle
imul
enter
sar
daa
sub
sbb
pop
xchg
xor
push
aam
fsubrp
push
inc
insb
insl
inc
and
ret
sahf
bound
fwait
cmpsb
push
jns
dec
jae
lods
es
lds
inc
sub
outsl
add
imul
std
fwait
inc
inc
or
push
adc
inc
pop
outsl
shrl
inc
push
imul
sub
daa
repnz
jecxz
sbb
cmp
dec
aas
xor
push
inc
lahf
pop
pop
dec
out
lret
jg
jae
inc
inc
xor
fdivrl
inc
loopne
fucomi
dec
sbb
dec
in
mov
into
fcomi
adc
cwtl
out
movsb
sbb
xorb
mov
out
cmp
adc
dec
mov
adc
inc
popf
rcll
xchg
xchg
cmp
adc
and
jno
cmp
sti
or
inc
cmp
push
clc
adc
pop
cmp
ds
es
push
mov
lret
adc
adc
aaa
outsl
aaa
test
nop
lret
sub
stc
ss
bound
arpl
outsb
out
sahf
fstl
adc
xchg
cmpsb
cmp
outsb
xor
outsl
inc
push
adc
sbb
sbb
and
adc
call
aaa
sbbl
push
icebp
ffree
adc
xor
cltd
lock
push
notl
push
in
lds
and
cltd
mov
xor
mov
int3
scas
out
repz
jae
push
xor
xor
pop
bnd
lret
push
mov
addr16
mov
jae
subb
inc
adc
js
loopne
pop
aad
adc
dec
pop
sbb
shrb
stos
mov
push
lods
divb
xchg
out
testl
pop
es
cmpsl
cltd
mov
adc
fnstenv
jle
les
sbb
popa
int3
je
dec
push
cmpsl
ljmp
fiadds
dec
pop
mov
jecxz
pop
sbb
jmp
mov
jne
mov
sarb
inc
sbb
sub
js
inc
add
aas
xor
ror
push
repz
outsl
stos
dec
cmp
lods
ss
pop
mov
mov
rcl
popf
repnz
pop
cmpsb
mov
ss
jb
js
shlb
push
push
add
push
daa
pop
xor
or
aaa
mov
jns
ret
sub
fwait
lret
cmc
xor
cmc
loop
stos
cmc
pusha
sub
ljmp
ret
stos
aaa
pop
mov
dec
adc
xchg
scas
daa
dec
call
sub
jp
dec
xlat
dec
fs
enter
testl
push
imul
push
out
jno
out
pop
call
cmpsl
outsb
sub
stos
pushf
pop
es
and
ret
outsb
jne
dec
adc
lret
dec
stos
xor
stc
shlb
or
sub
xor
sub
push
cmpsl
in
push
mov
push
inc
icebp
sub
mov
popf
addr16
and
mov
fwait
fwait
jle
dec
adc
clc
enter
filds
popa
fnstenv
push
ret
idivl
push
xchg
hlt
lods
inc
out
xchg
test
pop
ja
clc
push
nop
sbb
xorb
pop
loop
adc
cld
out
daa
mov
leave
jle
in
mov
jge
push
fcoml
xor
pop
push
pop
push
stc
xor
pop
xor
inc
enter
cmpsl
dec
xchg
pop
pop
pop
inc
and
push
das
push
in
in
hlt
add
idivb
lcall
icebp
out
out
sub
std
mov
push
orl
icebp
push
pusha
dec
insl
rolb
mov
bound
mov
outsl
lods
mov
add
nop
aad
andl
jo
vunpcklps
cmpsl
push
lock
repz
movsb
dec
fistpll
pop
into
addr16
insl
sbb
mov
and
xchg
mov
push
xchg
sbb
and
inc
arpl
cmpsb
xor
push
push
sarl
and
xlat
js
mov
dec
xor
mov
pop
subb
pop
rcrl
addl
rcr
test
loope
dec
repz
lcall
xor
out
pop
test
leave
jle
test
jg
push
sub
pop
and
dec
or
test
or
out
xchg
xor
add
mov
lds
fstps
aad
out
jp
popf
xchg
xchg
pop
sub
pop
std
dec
dec
or
jecxz
jmp
mov
add
pop
test
sub
out
mov
sbb
and
jae
push
stos
or
jl
adcl
ljmp
mov
pop
mov
in
in
lahf
pop
mov
inc
pop
cmpsb
mov
and
andb
aad
and
dec
in
sub
mov
icebp
lods
push
push
sub
shrl
and
repz
push
fstpt
jge
lcall
test
orl
adc
insl
dec
sbb
fisubl
test
out
inc
aaa
and
mov
adc
push
mov
xchg
popf
mov
out
rcr
dec
mov
lret
lret
push
jb
in
mov
mov
in
fwait
jno
mov
mov
add
pop
int
sbb
sub
push
jno
cltd
pop
in
mov
pop
movsb
xchg
push
fwait
xor
adc
sub
dec
sti
shlb
repz
sbb
rorl
add
adc
hlt
cmpsb
mov
sbb
ret
fcompl
cld
and
scas
jp
or
cvtdq2ps
stos
imul
jle
sbb
jp
push
out
dec
call
jle
adc
in
loopne
sbb
xor
push
aas
inc
and
xor
mov
push
xchg
jo
scas
popf
jns
lahf
rcrb
into
sarl
lods
aaa
imul
lock
xchg
push
xlat
sub
cmp
lret
icebp
sbb
imul
testl
xchg
jmp
cmpsl
xchg
orl
les
cmp
jl
ret
icebp
jmp
xlat
xor
inc
adc
or
jp
xchg
fcmovbe
add
scas
sbb
sbb
xor
sahf
push
shll
fpatan
jns
cmp
jbe
xlat
xchg
mov
stc
test
mov
pop
imul
or
pop
and
cmp
stos
sub
jae
sar
inc
in
nop
call
adc
loopne
es
cwtl
jae
out
sub
jo
mov
add
xchg
lret
cmp
loop
pop
inc
shr
icebp
xor
or
icebp
dec
fs
ds
fnsave
pop
mov
inc
cli
js
mov
mov
rcrl
xor
mov
repnz
and
dec
lret
dec
dec
lea
hlt
in
pop
fcomi
rorl
mov
mov
lret
inc
jmp
or
fsubs
leave
inc
inc
add
stc
inc
cmp
jo
cli
andl
jb
lds
daa
sbb
xor
arpl
stos
xchg
jg
mov
dec
sbb
mov
or
movsb
mov
push
aad
dec
ja
cmpsb
imul
in
negl
in
ret
push
aaa
or
fmull
inc
aas
adc
mov
or
jp
dec
add
cmp
inc
add
pandn
cmpsb
dec
xlat
sarb
adc
xor
fcompl
je
push
inc
push
lret
popa
mov
add
jle
out
xchg
imull
dec
std
push
repz
lret
jne
mov
popf
loopne
or
jge
cmpsb
fwait
fwait
cmp
mov
cmp
xor
dec
loopne
je
inc
push
popa
int
mov
push
ljmp
mov
xor
fsubrp
jle
dec
or
aad
sti
psubusw
mov
lret
repnz
loop
jl
pop
jl
xchg
lahf
and
xchg
jg
repz
cmpsl
sbb
and
pop
sbb
xor
inc
xchg
clc
push
cmp
push
in
test
add
xchg
pop
push
pop
das
pushf
mov
fidivrl
jle
inc
xor
dec
or
and
or
and
lds
pop
lret
mov
addr16
push
jg
outsl
and
lahf
mov
adc
jne
inc
sub
les
adc
xchg
push
jo
rolb
mov
and
cmp
jmp
nop
push
ret
scas
mov
adc
jmp
outsl
jp
outsb
mov
mov
xchg
test
mov
xchg
lods
mov
pop
jp
add
mov
add
pop
in
dec
jns
roll
mov
jecxz
push
addl
fstp
data16
addr16
in
xor
mov
cwtl
push
lcall
sub
pop
pop
lcall
jge
leave
xchg
cld
dec
cltd
imull
mov
jecxz
sub
nop
xchg
repz
xchg
int
daa
ljmp
cmp
clc
jle
cmp
add
pop
pop
jnp
jp
mov
dec
jg
inc
jno
fidivs
pop
addb
pop
into
sti
repnz
mov
xorb
xchg
pop
sub
inc
mov
rol
adcb
insl
dec
lods
ja
xchg
aam
mov
adc
xchg
aam
push
mov
pop
pop
mov
es
jo
jp
sti
xor
pop
out
add
fcompl
dec
daa
out
add
int3
clc
or
push
push
xchg
scas
cmp
pop
rcll
rclb
cld
jb
inc
cmp
mov
enter
cwtl
sub
jge
add
stos
sahf
jns
ljmp
push
fiaddl
enter
movsb
call
fdivrs
fldt
out
stc
gs
cli
je
std
push
iret
or
sub
xabort
dec
in
jecxz
and
movsb
dec
call
movsl
ja
rcr
out
push
iret
jb
or
test
outsb
sub
mov
sub
pop
dec
dec
jae
aas
sarl
xor
negl
mov
mov
popf
gs
xor
iret
push
cmp
mov
xchg
stos
adc
adc
popa
int
add
adc
lret
jbe
pop
in
loop
jne
mul
jae
pop
cwtl
mov
lcall
clc
vphadddq
data16
test
xchg
xor
xchg
cmp
stos
and
test
cmp
out
movzwl
popa
pop
mov
push
mov
in
pop
dec
mov
mov
ds
in
push
ja
xor
call
test
cmpsb
mov
cli
mov
leave
push
int3
mov
pusha
push
add
xor
dec
adc
dec
lock
xor
dec
cwtl
dec
pop
cli
sub
dec
add
js
out
dec
in
xchg
ja
test
pop
cmp
cmp
jp
sbb
les
repnz
scas
or
int3
xor
jno
pushf
cmpsl
jb
imul
pop
ret
lds
lds
test
add
mov
jo
movsl
lods
cld
jecxz
xchg
in
testb
mov
lds
outsb
lods
jb
push
ja
xchg
jne
jo
imul
or
fiadds
out
ret
sbb
sbb
push
jmp
xchg
fdivl
stos
daa
cli
inc
movsb
xchg
pop
mov
sarl
cltd
xor
xlat
ljmp
ja
adc
jp
pushf
fcoms
mov
popf
pop
jb
or
loope
cltd
cmp
cltd
sbb
adc
sbb
mov
out
cli
pop
jb
imul
and
cltd
popa
stc
sub
in
or
aas
sahf
jg
hlt
mov
pop
add
xchg
xor
lret
addr16
daa
inc
in
inc
fsub
inc
mov
out
sbb
cmp
xor
aaa
mov
mov
dec
repz
icebp
xchg
and
pusha
js
inc
or
mov
push
mov
inc
sahf
inc
rclb
push
mov
dec
shrl
xor
cmp
out
mov
repnz
bound
stos
lods
jmp
adc
cli
cmp
cmp
ja
leave
mov
sub
jae
ds
jl
mov
test
cld
bound
std
pop
mov
pop
jge
sbbb
sub
sub
cs
add
mov
pop
movswl
out
mov
sbb
scas
lahf
xlat
aam
imul
fyl2x
pop
cltd
mov
cs
xor
stos
dec
clc
mov
mov
cli
dec
ds
jo
lea
push
jle
sbb
pop
es
aam
shl
adc
out
mov
sbb
in
arpl
mov
jo
aam
dec
sub
or
js
pop
push
and
cmp
push
pop
sub
xor
scas
xchg
icebp
aad
dec
hlt
in
ja
aaa
cli
cmp
aaa
mov
fisubrl
sbb
aas
push
icebp
or
out
je
lods
sub
jl
imul
add
push
add
add
add
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
and
or
or
jp
xor
ret
jns
leave
inc
pop
xor
in
push
add
stos
or
sub
ds
idiv
mov
or
lea
and
popf
gs
neg
mov
sub
jg
adc
mov
pushf
in
fcmovnbe
iret
or
sbb
idivl
sbb
pop
cld
lcall
out
sub
or
dec
imul
push
popa
ja
lret
loop
das
dec
sub
movsb
rcrb
jle
decl
pop
add
mov
jl
push
outsb
pop
push
xor
jae
lods
lcall
lds
orb
xor
pop
ljmp
cmp
fbstp
mov
jp
das
sbb
movsl
lock
push
jne
lahf
pushf
dec
inc
jbe
sbb
cmp
dec
leave
and
xlat
xchg
jl
repz
js
jb
fstl
popf
insl
jae
jnp
je
push
roll
and
pop
insl
rorl
lret
xchg
mov
scas
mov
push
inc
inc
inc
lahf
mov
sub
mov
jae
lds
jae
pop
pop
xor
sbb
aam
or
in
ffreep
call
dec
bnd
push
and
push
pop
dec
adc
movsb
stc
push
lret
adc
xchg
mov
negb
and
adc
fildll
pop
cmc
mov
enter
int3
and
loopne
out
push
xor
or
inc
aam
cwtl
jnp
push
mov
out
enter
sbb
cld
or
dec
dec
pusha
mov
sti
mov
out
mov
out
aam
pop
push
cmp
loope
outsl
icebp
or
clc
cwtl
xchg
xchg
hlt
inc
xchg
xchg
adc
stos
sti
mov
xchg
test
xchg
in
lahf
dec
or
js
push
push
ret
mov
dec
jbe
pushl
and
loop
lahf
push
pop
mov
cmp
sbb
lret
xor
xor
push
cmp
gs
ja
cmp
or
inc
sbb
enter
jle
lret
lods
or
inc
pop
mov
inc
ficoms
add
add
push
or
cmp
sahf
lret
push
into
movsb
xor
sub
idivb
test
xorb
orb
ficompl
repnz
out
cmpsl
xor
xchg
stos
lds
clc
or
insb
add
add
shll
les
gs
xchg
fmulp
movsl
clc
sbb
cmp
mov
repz
jecxz
test
sbbl
leave
lret
xor
sbb
mov
data16
movaps
xor
fst
out
incl
dec
test
and
mov
mov
loope
xor
ds
icebp
in
pop
out
popf
mov
add
pop
push
sbb
jge
mov
jnp
int
xchg
inc
add
daa
dec
xchg
out
mov
push
stos
out
cmp
xlat
dec
loop
pop
pop
out
inc
inc
sbb
push
loope
shll
call
sbb
jae
xchg
or
sub
ds
jl
sbb
push
fwait
add
mov
test
mov
jo
int
jnp
or
shlb
int
insl
mov
aam
push
lret
jg
into
lret
sub
cmpsl
mov
jae
cmp
pop
jle
xchg
sbb
push
je
mov
cmpb
xor
xchg
mov
cld
orl
lea
into
push
jmp
cs
jns
sti
test
cmpb
cmp
dec
in
ja
in
push
xchg
fsubr
popf
inc
loope
testl
or
outsl
push
or
mov
fcomip
mov
imul
sbb
lret
lods
in
int3
int3
sbb
xor
shll
add
dec
icebp
test
push
ret
out
pop
sub
sbb
cmp
lods
cwtl
or
push
push
and
mov
inc
jmp
push
mov
adc
imul
fisubl
das
push
mov
sbb
adc
and
pop
xchg
mov
jbe
jle
pop
fs
popa
xchg
inc
call
lods
call
xor
lock
mov
mov
out
lea
std
mov
scas
cmpl
outsl
mov
int
test
xchg
xchg
sti
jecxz
loope
pop
frndint
jmp
cmp
fwait
in
mov
xchg
mov
cmp
das
mov
out
cltd
or
negl
inc
loopne
jmp
push
mov
pop
das
jb
adc
test
test
push
subb
imul
sub
or
nop
daa
xchg
icebp
mov
decl
xor
mov
xchg
add
orb
push
sti
push
xchg
mov
cmpsl
loope
into
pop
dec
jmp
push
push
insb
scas
ds
lret
mov
xor
out
ret
leave
push
test
push
ret
cmp
mov
sarb
enter
jge
loopne
mov
sub
sahf
mov
push
fiaddl
xchg
push
pop
xor
mov
and
cld
push
inc
aad
dec
movsl
roll
mov
mov
pop
and
mov
movsb
adc
rorb
add
adc
jno
in
sarl
in
jnp
cmp
xor
jo
and
and
pop
scas
stos
addr16
adc
pushf
xor
jns
rorl
sysexit
arpl
mov
insl
pushf
cs
das
jg
out
jmp
repz
inc
std
xor
push
sbb
gs
data16
pop
add
ljmp
fnsave
xor
pop
mov
push
add
mov
cltd
mov
mov
jmp
and
adc
aaa
insl
xchg
push
ss
lds
ja
pop
vpsubsb
pop
pop
loop
sbb
mov
out
lds
pop
out
scas
and
fiaddl
orb
cmp
scas
push
out
cltd
mov
vminps
jae
je
cmovle
sub
sbbl
test
or
aad
inc
cwtl
pop
rcrb
pop
ljmp
cmc
adc
mov
pop
or
or
cs
add
inc
cmp
mov
fsubrl
mov
mov
sbb
loope
and
xor
lods
sbb
fucom
test
inc
cld
push
pop
enter
mov
call
fimuls
cmp
push
les
fistps
mov
cli
cmpsl
in
jecxz
push
xor
das
push
cmp
and
nop
arpl
in
adcl
lret
in
dec
pop
cli
mov
xchg
pop
ret
xor
and
jcxz
xchg
fimull
inc
icebp
push
test
or
repnz
popa
mov
repnz
aaa
dec
ss
leave
daa
mov
dec
sbb
add
sub
pusha
or
inc
je
setnp
ljmp
movb
xchg
lret
sbb
sahf
sub
cmp
jle
scas
ja
mov
ret
add
dec
scas
cld
xchg
inc
leave
lods
clc
aad
cs
mov
int3
test
or
jns
sub
add
or
push
mov
pop
jne
sub
push
jo
shll
pop
jmp
and
push
nop
hlt
pop
xchg
rclb
lret
ds
adc
push
push
jne
mov
jo
cmc
sub
adc
daa
inc
mov
outsb
iret
scas
fistpll
out
push
and
sbb
outsb
push
xor
fstp
push
idivl
xor
imul
out
lea
js
rclb
dec
cmp
in
mov
cmp
inc
sahf
add
mov
mov
pop
cmp
addr16
out
or
filds
lret
sub
ds
movsb
inc
mov
movsb
clc
dec
fidivl
jbe
clc
adc
gs
cmp
in
xor
stos
pop
sbb
mov
cmp
lahf
cmp
push
fildl
push
mov
fwait
xchg
test
out
scas
pop
in
leave
lea
add
ja
push
jg
out
insl
xor
test
fwait
pop
dec
daa
bound
loope
dec
repnz
xchg
xchg
scas
int
int3
cmp
rcl
inc
add
movsl
mov
shrl
jne
leave
pcmpeqb
inc
cmp
repz
mov
sbb
test
xchg
mov
pop
rcrb
rorl
out
enter
add
xchg
add
add
inc
outsl
pop
or
xchg
lds
lret
xchg
cmp
repz
jbe
bound
mov
outsb
pop
add
xor
call
shr
popa
cmc
pop
xor
push
sbb
popf
lcall
lds
in
sahf
push
push
repnz
rcll
inc
xchg
fdivrs
movsl
and
dec
lods
xchg
xor
out
fwait
popf
xor
les
vpsllw
insl
rcrl
roll
and
xor
cmp
sbb
xor
loop
jle
pop
hlt
push
std
fcomps
insl
jb
in
aas
xchg
scas
pop
lret
ljmp
adc
dec
cmp
mov
les
jecxz
pop
xchg
mov
sbb
testl
sub
push
sbb
inc
mov
and
mov
pop
xlat
push
shrb
inc
mov
inc
jo
or
loope
mov
push
int3
and
loop
xor
sub
lret
test
sub
repnz
push
jl
lcall
cs
dec
out
jno
xchg
pop
es
sub
jb
sub
icebp
add
ja
sub
cli
sti
add
cmp
inc
pop
dec
mov
xchg
es
lret
shrl
mov
push
or
push
in
vpcomud
xor
inc
xchg
stc
sub
nop
push
je
cmp
popa
pop
dec
pop
mov
mov
pop
pusha
xchg
mov
pop
sbb
jl
rorb
cmp
arpl
xchg
add
leave
jns
cmpsl
aas
mov
inc
leave
sub
xchg
cs
mov
test
iret
repz
push
add
in
sbb
test
inc
mov
lcall
add
gs
xchg
xchg
adc
xlat
dec
mov
sub
cs
repnz
mulb
test
xchg
xchg
cmp
adc
mov
mov
loopne
in
mull
push
xchg
loopne
mov
jnp
lods
pop
or
loop
ja,pt
pop
subb
inc
push
mov
add
cmc
sub
push
jl
cmp
xor
inc
push
pop
popf
out
mov
adc
adc
pusha
in
xlat
pop
jns
push
pop
pop
mov
data16
das
ljmp
mov
lods
cmpsl
pushf
sub
rcll
push
pop
es
subb
mov
dec
adc
icebp
ret
out
mov
fisubrs
push
dec
notb
sbb
imul
cltd
adc
mov
fcoms
jmp
lea
popf
xor
or
lcall
jl
pop
sbb
mov
loop
mov
jae
daa
sbb
or
ds
fmuls
xor
ja
lret
cld
pop
cmp
push
mov
add
dec
pop
orb
mov
outsl
jne
sbb
pop
ret
xor
mov
add
mov
cmp
fisubrs
leave
or
inc
outsl
mov
shll
mov
roll
jge
leave
stc
cmp
or
push
test
sub
mov
sub
push
notb
aas
sub
adc
cld
mov
jp
sbb
mov
ss
adc
in
pop
xor
dec
sub
fcomps
dec
clc
or
dec
inc
jle
or
push
dec
aas
pop
xchg
xlat
dec
adc
ret
bound
jl
lret
nop
in
sarl
mov
out
or
std
or
loop
jo
clc
imul
popf
out
imul
hlt
popf
rol
mov
ljmp
add
out
mov
and
subl
mov
sbb
push
adc
rcr
popa
dec
mov
ror
cmp
inc
call
jno
enter
mov
iret
dec
ss
scas
test
test
test
movsl
xchg
loop
rcl
hlt
bound
imul
bound
push
and
in
hlt
aad
out
dec
pop
lods
lods
pop
jo
fwait
or
xchg
test
mov
addr16
pop
mov
jne
mov
insl
jg
or
sbb
mov
push
les
push
adc
sbb
push
mov
xor
lods
mov
inc
leave
mov
imul
ret
cltd
inc
pop
aad
xor
dec
ds
push
push
call
jno
pop
and
iret
dec
inc
ljmp
in
imul
fcmove
or
lcall
push
movsl
loopne
into
jge
test
mov
mov
mov
stos
jnp
xor
addr16
shll
or
xor
hlt
into
add
or
xor
jg
outsb
sti
shl
dec
shlb
xchg
int
jle
or
loop
lahf
push
or
sbb
nop
xor
mov
push
jb
imul
subb
adc
in
sub
jge
out
mov
adc
clc
xchg
add
jns
fcoms
inc
xor
mov
pop
fwait
test
or
sbb
cpuid
pushf
add
push
sahf
imul
outsb
es
test
pop
fsubrs
frstor
or
fwait
lods
push
cmc
push
jl
int3
scas
out
popf
cld
sbb
sub
into
push
pop
xchg
inc
sub
orl
repz
jmp
iret
xchg
clc
addb
lods
and
loop
int3
jp
clc
inc
jmp
or
cmp
daa
jo
negl
sub
adc
scas
pusha
xor
mov
inc
push
sub
push
repz
add
int3
mov
mov
jae
fimuls
ret
mov
bnd
cmc
fisubrs
sti
in
inc
sbb
aas
jl
clc
decl
jne
insl
inc
sbb
xor
je
rolb
push
cmp
mov
add
sbb
xchg
lock
cmpsl
jnp
les
push
jle
test
inc
mov
xchg
mov
out
sbb
sbb
sbb
idiv
scas
stos
xchg
mov
in
jae
ret
xchg
rcrl
cmc
pushf
pop
pop
xchg
inc
xorl
sbb
inc
icebp
loopne
aas
and
mov
push
pop
dec
jo
jg
xor
lea
jmp
loop
dec
push
cmpsl
call
jg
sbb
fld
lods
push
nop
ljmp
bound
testb
arpl
sti
sbb
sbb
cmp
loop
xchg
cwtl
sub
popf
aas
fisubs
in
ror
push
xlat
sbb
fs
sbb
out
pop
daa
out
xchg
mov
arpl
repz
scas
mov
pop
cmp
add
and
pushf
pop
sbb
mov
mov
push
fs
and
call
add
out
int
sbb
icebp
in
aas
mov
mov
js
xchg
cmc
mov
pop
mov
adc
jo
mov
jo
sub
jle
jne
icebp
pop
mov
xor
push
jns
lds
xor
inc
imul
lret
in
sub
clc
imull
mov
fldenv
sbb
push
int
push
push
push
popf
xchg
imul
mov
ja
cmp
xlat
jbe
inc
add
pushf
push
xor
xchg
sbb
mov
lds
fiaddl
loopne
lods
cmp
push
sbb
out
mov
cmpsl
sbb
inc
or
ljmp
or
dec
fimull
into
mov
mov
and
ret
dec
mov
fs
xchg
mov
add
insl
int3
outsb
lods
pop
mov
fcmovnb
xor
xchg
mov
aad
pop
cltd
addl
mov
xor
rcll
sub
sbb
cltd
rorl
les
stc
fistpl
enter
imul
fmul
jae
inc
pop
or
lahf
add
fs
adc
push
clc
xor
std
add
sarb
lret
in
test
popa
xor
and
in
adc
cmp
dec
movsb
pop
popl
fwait
sub
push
stos
fnstenv
sbb
fsubr
or
pop
sub
jno
xchg
or
sahf
and
mov
mov
inc
outsl
test
insb
cld
inc
nop
rclb
mov
data16
in
cmp
popa
jbe
pusha
inc
repnz
xchg
push
adc
push
pop
push
std
arpl
xor
mov
dec
fsubrs
loope
std
sti
dec
jecxz
data16
sbb
fmull
jae
xchg
push
lret
dec
add
les
push
mov
and
jnp
and
loope
inc
jg
loop
ret
iret
dec
xor
fidivrl
jmp
pop
adc
or
roll
jp
xchg
lods
repz
mov
push
inc
lret
or
popa
mov
inc
cld
and
xchg
mov
mov
push
cmpsl
int3
cmpsl
pop
mov
adc
ror
fmuls
push
push
je
cwtl
insl
stc
xor
mov
jle
cld
dec
pusha
jp
jp
sbb
xchg
or
or
je
or
outsl
imul
mov
push
pop
or
mov
add
mov
cmpsb
imull
jae
push
in
mov
mov
inc
pop
fs
or
ret
or
push
sbb
pop
dec
ret
dec
add
xchg
call
insl
jae
pusha
rorb
push
pop
mov
xor
pop
subb
orb
mov
test
push
jbe
mov
push
int3
dec
jp
enter
cmp
or
and
lock
add
out
jp
cmp
and
loop
or
jae
lret
stc
add
push
sbb
push
testb
sti
xchg
movsb
push
imul
cmp
fcomip
mov
movsl
adc
mov
or
mov
mov
pop
cmp
mov
pop
test
fistpl
cmpb
in
push
and
fdiv
sbb
jmp
repnz
stos
mov
jmp
xor
push
into
sub
mov
out
pop
scas
inc
out
adc
xor
test
jbe
dec
jle
mov
cmp
hlt
lret
inc
repz
sbb
sub
fnsave
sbb
inc
adc
movsl
fisttpl
and
rdpmc
xlat
mov
push
mov
jnp
je
inc
popf
mov
xchg
sbb
iret
leave
mov
fcmovnu
or
xchg
fcomip
dec
xchg
and
movsl
jl
lea
into
enter
sbbb
shlb
cld
push
lods
and
arpl
cs
cmpsl
xor
imul
hlt
mov
adc
dec
xor
ja
out
fstl
cltd
mov
cmpsb
jae
adc
jle
fisttpll
mov
xlat
daa
sub
dec
sbb
imul
adc
pop
out
inc
in
pop
mov
repz
mov
mov
adc
imul
jg
movsl
lods
pop
sbb
inc
pop
xchg
jne
ljmp
fsubr
es
push
movsb
sub
das
ja
pushfw
mov
mov
pop
int
mov
lahf
daa
cmp
pushaw
leave
call
pop
xchg
popa
enter
jmp
push
mov
push
imul
aaa
dec
mov
out
cwtl
lret
mov
imul
and
adcl
pop
mov
sub
push
shl
es
push
jle
mov
aam
mov
loope
lock
or
scas
sub
loopne
hlt
mull
mov
pop
pop
icebp
xchg
es
inc
insl
add
adc
or
ss
scas
iret
push
loope
dec
adc
and
dec
movhps
out
arpl
into
pop
or
add
jecxz
setno
mov
cmp
dec
int
inc
mov
xor
mov
sbbb
mov
push
xchg
or
sbb
ss
popa
adc
ja
fsub
push
sti
push
rolb
mov
fmull
rcl
xchg
shll
imul
mov
outsb
or
flds
pop
jns
pop
daa
popf
ret
movsl
je
lods
pop
dec
repz
and
out
outsl
dec
out
aad
loopne
jmp
add
mulb
pop
movsb
pop
rcll
call
in
lret
xchg
jecxz
push
pusha
dec
dec
ds
fwait
mov
inc
or
cmp
in
pop
jae
jl
and
push
xchg
mov
not
sub
stos
scas
push
and
pop
inc
loopne
inc
loopne
es
jmp
cmp
add
inc
cmp
jns
and
sbb
iret
cld
not
sti
pop
test
loopne
call
xchg
sti
or
jnp
lock
bswap
mov
mov
mov
and
mov
push
ljmp
adc
mov
pop
icebp
lahf
or
fs
mov
repnz
ds
xchg
ja
cld
fnstenv
arpl
pop
and
dec
xchg
inc
cld
inc
ror
and
xor
lret
test
nop
jno
cli
les
rcrl
out
dec
xorb
inc
aaa
mov
mov
andl
ficompl
fsubrl
dec
in
rorl
mov
call
orl
sub
adcb
add
xorb
cmpsl
cmpb
adc
divb
subl
fst
shrl
xor
pop
push
jmp
xchg
cmp
int3
sbb
mov
ja
inc
pushf
dec
jb
push
and
dec
or
xchg
dec
add
pusha
sbb
subb
xorl
sbb
or
jg
outsl
cmp
flds
dec
mov
lcall
dec
mov
js
mov
add
mov
add
mov
jmp
mov
adc
fdivrl
dec
mov
std
stos
mov
mov
stos
stos
push
outsl
movsl
rorb
mov
test
dec
arpl
mov
jns
push
popw
push
outsb
pop
jmp
mov
sub
imull
and
cli
inc
inc
mov
in
xor
add
sub
jge
push
xchg
in
jno
into
lcall
sahf
jl
mov
or
mov
loop
pop
mov
push
push
or
xchg
add
cld
and
inc
dec
mov
push
stos
mov
push
dec
insl
fwait
push
out
jge
sbb
or
push
test
inc
mov
flds
fs
jl
in
jne
ljmp
xchg
and
mov
push
adc
ficompl
mov
shrb
cmp
xchg
int
gs
mov
pop
xor
xchg
mov
mov
lret
stc
and
insb
es
lock
adc
lss
loopne
out
push
rclb
shlb
mov
xor
xchg
leave
jb
mov
mov
inc
loope
cmpsb
fsubs
mov
movsl
imul
cmp
out
mov
into
or
das
xchg
mov
mov
dec
in
cmp
popl
cmpsl
dec
psubusw
mov
fstpl
mov
fcoms
or
cmpsb
pop
in
aaa
jle
jo
imul
test
mov
mov
inc
adcl
add
aam
cmpsl
fwait
jnp
push
imul
ret
mov
or
mov
push
ret
inc
push
sahf
and
add
ljmp
ss
xchg
sbb
frstor
cmp
adc
mov
fs
inc
push
xlat
and
lcall
mov
adc
sbb
in
dec
lret
mov
cld
andb
xor
jbe
into
mov
mov
push
icebp
xchg
xor
xor
lret
jnp
dec
arpl
cltd
sbb
cmp
lret
mov
pop
or
and
decl
mov
add
xchg
out
jcxz
in
lret
mov
cmc
icebp
out
js
pop
push
shl
cmp
xchg
int
inc
mov
icebp
push
pusha
jmp
mov
and
add
hlt
sub
iret
mov
dec
or
outsb
aaa
jmp
sub
ljmp
mov
mov
aas
insb
in
bound
iret
push
xchg
rorl
add
xor
mov
xor
jmp
les
cmpsl
pop
out
arpl
adc
movsl
cmp
cmp
cltd
or
roll
pop
sub
xchg
and
jecxz
in
test
xchg
xor
jmp
repz
dec
imul
xor
into
pop
mov
and
nop
sahf
cmp
mov
pop
adc
jmp
or
lahf
call
arpl
push
or
shll
andb
mov
aam
data16
jno
push
xchg
call
je
push
cmp
lds
mov
xchg
pop
sub
adc
rcl
test
inc
sub
addr16
pop
mov
mov
js
adc
lea
dec
pop
inc
jmp
shr
pop
mov
outsb
cmpsl
and
mov
cmp
js
or
or
adc
ror
roll
enter
addr16
pushf
cmp
pop
mov
stos
jne
sbb
nop
rcll
outsb
push
mov
lret
xchg
mov
jge
cmpsl
or
into
pop
out
test
ds
outsb
xor
enter
lods
iret
repnz
dec
cwtl
jle
popf
push
rol
mov
add
inc
or
push
mov
loop
fsubr
dec
push
push
int
pop
sbb
fcmove
outsl
cli
daa
test
dec
repnz
cmp
hlt
mov
jno
sahf
sbb
mov
cmp
fmuls
sub
sti
mov
jns
and
je
pop
dec
xchg
jl
into
insl
xlat
cs
cwtl
out
adc
shrl
arpl
repnz
push
mov
dec
add
test
jb
sbb
lods
shll
popa
push
mov
mov
mov
jmp
pop
movsl
and
insl
mov
sub
mov
cmp
js
mov
js
aaa
roll
les
xor
push
push
enter
mov
pop
imul
xchg
xlat
adcb
aas
xor
cld
imul
or
jp
fnstsw
faddl
ret
mov
sub
mov
cmp
push
cmp
push
fldenv
adc
jmp
test
test
jle
mov
mov
negl
mulb
pusha
daa
mov
sbb
sbb
mov
cld
shlb
dec
sbbl
les
shll
sub
inc
movsb
dec
vminss
push
jle
or
cmp
adc
xor
sub
push
divl
dec
sti
int
lcall
mov
dec
and
pop
mov
cld
push
lcall
test
fxch
mov
rorl
and
sti
cld
test
or
sarl
or
sahf
xor
sbb
movsl
popf
and
incb
call
loop
mov
xchg
xchg
daa
dec
in
jo
inc
pusha
pushf
stc
out
mov
xchg
adc
in
inc
cwtl
leave
xor
and
mov
mov
cmp
orb
cmc
push
adc
je
test
icebp
mov
and
inc
pop
iret
jecxz
iret
inc
cs
sti
and
mov
sub
push
pop
mov
into
out
test
adc
ss
sti
popf
xor
pop
pop
imul
std
mov
jecxz
sbb
shlb
xchg
pop
and
cli
fldenv
stc
scas
xchg
push
sbb
out
xlat
add
dec
sbb
xchg
dec
andb
imul
mov
fwait
cwtl
pop
cmp
aad
std
add
adc
and
xor
in
dec
xchg
push
enter
out
push
push
into
push
outsb
loope
nop
pop
xchg
xchg
out
push
cmp
ficompl
ret
negl
mov
mov
pop
or
push
xchg
gs
cld
mov
sub
ds
imul
jl
add
int
pusha
pop
jg
fimuls
popf
mov
mov
mov
mov
jle
loopne
push
dec
mov
fdivs
jmp
data16
sub
cmp
fxch
cmp
lcall
inc
test
call
sbb
sub
push
shrl
fdivr
mov
pop
bound
stos
imul
shlb
ficompl
jl
sub
shll
mov
imul
lods
popf
xor
jnp
mov
mov
xchg
cli
pop
orl
adcb
adc
xor
daa
push
xchg
insb
jl
in
cmp
aas
mov
es
fisttpl
pusha
pop
adc
dec
ds
dec
push
in
gs
lret
inc
mov
mov
xor
push
adc
jmp
notb
in
jae
mov
jno
loopne
icebp
jecxz
pushf
mov
sub
jge
mov
sub
aad
es
xor
xchg
fwait
push
faddl
addl
mov
push
mov
lods
mov
mov
enter
ds
outsl
aas
test
and
out
mov
push
xchg
lods
push
inc
mov
adc
jecxz
icebp
sbb
cld
jo
push
pop
fisttpl
andl
cmp
inc
jmp
pop
jecxz
xor
jb
push
mov
mov
jecxz
push
and
mov
xor
fmuls
cmp
les
sub
into
add
scas
dec
test
aad
cs
call
fists
test
sub
aaa
shl
mov
mov
lahf
int
call
jb
clc
repz
xchg
inc
jmp
nop
lea
mov
mov
xor
mov
mov
and
adc
aad
int
int3
adc
pushf
pop
mov
arpl
xchg
insl
sbb
jmp
sub
or
or
scas
inc
xchg
dec
clc
push
lods
xor
popf
aas
inc
pop
jae
inc
popf
mov
fimull
pop
loop
fnstcw
sbb
test
dec
pushf
repnz
pop
mov
shlb
xchg
pop
inc
pop
pop
shrl
or
ret
mov
lea
repnz
add
xlat
cmpsb
fprem
push
sbb
inc
ret
mov
xchg
out
inc
shrl
add
sub
stos
leave
hlt
or
xchg
fstpt
push
cmp
xor
pop
cld
out
mov
sbb
stc
sar
xor
das
add
dec
push
dec
inc
jecxz
lret
jmp
stos
icebp
mov
jmp
inc
sar
jae
push
arpl
nop
cmpsb
nop
inc
sub
pop
int3
add
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
or
addr16
push
jge
or
jp
inc
sbb
cmp
lods
adc
pop
mov
sbb
ret
mov
pop
xor
scas
daa
outsl
in
ja
lods
cmpsl
xor
jno
imul
inc
mov
xor
loopne
push
cmp
in
mov
mov
mov
xchg
xorb
xchg
sub
aam
mov
xor
push
push
xchg
lds
lcall
leave
push
orb
lock
mov
lods
loopne
fildl
test
mov
aas
pop
mov
push
pusha
scas
inc
rorl
pop
sarl
lock
daa
xor
sahf
mov
jae
sbb
jno
outsb
test
fwait
cmpsl
sbb
inc
stos
jne
mov
into
in
aaa
roll
add
test
inc
xlat
stos
jl
mov
mov
rcrl
sbb
into
aaa
insl
fisubs
shl
icebp
ret
outsb
mov
das
cmp
lahf
inc
mov
push
add
subb
dec
pop
gs
pop
movd
hlt
sbbb
xchg
es
lods
out
add
push
mov
add
and
xor
fiaddl
int3
fnstenv
pop
mov
xchg
sti
shl
xor
cmp
movsb
movsl
xor
jmp
cmp
inc
pop
aaa
push
jg
push
mov
mov
sub
or
ret
jo
pop
dec
enter
mov
mov
jle
int3
mov
aad
cwtl
lock
mov
sbb
rcrb
push
fneni(8087
mov
insb
aam
dec
mov
clc
shll
push
loopne
inc
jns
mov
cmp
xchg
mov
mov
jecxz
scas
adc
lcall
es
dec
test
jmp
jle
filds
inc
lcall
out
mov
bound
dec
mov
push
movsb
sbb
lcall
pop
fldt
andl
mov
and
iret
sbb
jne
sbb
test
cmovle
dec
cmp
adc
or
jle
adc
out
pop
mov
stc
or
mov
cwtl
cmp
jp
mov
dec
fbstp
sbb
outsl
or
inc
pop
leave
jecxz
and
or
jmp
rolb
imul
loop
adc
push
mov
sbb
fld
fstpt
dec
mov
sub
out
out
xchg
xor
pop
xchg
cltd
aad
mov
loopne
rolb
out
ret
imul
or
sahf
or
xor
imul
cmc
test
cs
movsb
jecxz
data16
fs
ror
inc
mov
or
out
pop
cmp
or
push
das
fistl
subl
insb
in
inc
add
stos
add
cmp
push
je
jno
pop
jmp
cmp
jmp
inc
dec
push
lahf
lods
mov
int3
xchg
outsl
cltd
add
stos
lea
jp
push
fnsave
out
pop
mov
jae
test
sbb
sub
push
ljmp
push
mov
pop
add
sbb
fsts
push
ja
lock
sti
nop
sbb
push
inc
in
outsb
outsb
jnp
data16
sbb
pop
xchg
or
cmp
fldl
or
cld
push
aad
into
add
push
imul
sbb
rcrb
repz
cld
mov
fisubs
in
cmp
fs
in
adc
sbb
stc
roll
and
or
loopne
push
push
scas
mov
sarl
push
sbb
repnz
add
in
idivb
dec
imul
ret
adc
adc
sbb
xchg
cmp
jns
aaa
add
push
aas
cwtl
jle
adc
jmp
imul
jle
pop
lods
cltd
push
sahf
fbstp
rcll
dec
mov
pop
mov
xchg
xlat
push
fwait
jns
dec
ss
xlat
add
cmp
xlat
loope
aad
and
mov
mov
xchg
adc
out
pop
mov
jnp
repnz
dec
jl
out
repnz
es
mov
fs
mov
sub
push
insl
dec
stos
jne
sub
xor
jb
aaa
jno
lock
les
leave
fmull
mov
les
insl
xor
inc
mov
mov
mov
shlb
popa
adc
xor
aas
scas
jns
imul
dec
imul
add
imull
movsb
inc
fcomip
add
enter
stc
sbb
xor
mov
pusha
pop
fldcw
rolb
cmc
inc
mov
push
cmp
adc
xor
std
daa
test
jnp
orl
mov
fadds
jmp
or
add
shl
adc
mov
addr16
nop
pop
sti
xor
jecxz
jge
push
pusha
shll
xlat
mov
ret
dec
xchg
xor
sub
push
inc
ljmp
dec
mov
adc
pop
jae
insl
aaa
nop
loope
std
push
xor
daa
jbe
add
cmp
xchg
imul
inc
push
mov
mov
jbe
xor
ljmp
and
test
mov
lcall
popa
jo
mov
mov
movsl
inc
jle
stc
or
mov
jge
inc
fdivrp
mov
push
mov
repnz
inc
add
push
in
fiadds
in
xchg
stos
out
cmc
jb
fnstsw
push
cs
inc
sub
sub
push
rcrb
insb
push
sbb
inc
fsubrl
ss
or
hlt
jno
shll
ret
xor
cmp
mov
insb
add
lock
loope
xchg
cmp
int3
push
testb
dec
rorb
adc
int3
inc
test
push
lds
das
xor
sbb
mov
cmp
mov
xchg
inc
sbb
pop
adc
mov
imul
ss
ja
jns
dec
pusha
movntps
jns
add
adc
xchg
outsl
pop
or
jg
pop
imul
mov
loope
in
movsl
lret
mov
xor
adc
rcl
fistpl
mov
push
push
or
inc
cmp
fs
ret
cmc
mov
xchg
movsb
lea
mov
cltd
cmp
lfs
xchg
aam
addr16
out
mov
mov
pop
addr16
cmp
xchg
aaa
loop
mov
clts
xor
ss
leave
xor
xrelease
ss
or
into
bound
xchg
jle
mov
cltd
push
test
and
mov
add
gs
mov
jno,pn
cmp
mov
popf
fdivl
inc
push
mov
add
ret
mov
xor
adc
int3
xor
dec
sbb
mov
cmc
movsb
jnp
scas
dec
popf
jmp
push
or
pop
imul
in
dec
pusha
push
push
push
mov
int3
xchg
cmpsb
rclb
xor
push
push
xor
push
sarb
mov
adc
mov
cmp
lret
mov
and
sahf
insb
lea
stos
and
les
aad
cmc
mov
shr
mov
repnz
cmpsl
movsb
add
adc
adc
lret
sub
pop
cwtl
test
ficoms
fs
icebp
jmp
dec
ja
cmpsl
push
cs
pop
inc
pop
sbb
out
add
cmp
aaa
rorl
mov
loopne
rorl
pop
jnp
cmp
jo
pop
dec
mov
fwait
jae
rcrl
sbbl
pop
pop
shl
je
push
shlb
mov
dec
fxch
inc
test
jl
rolb
add
jno
leave
sub
stos
xor
push
pusha
mov
mov
je
in
pop
push
pop
imul
dec
sti
inc
pop
mov
mov
ret
sbbb
nop
pusha
call
push
cmp
sbb
add
add
push
arpl
test
arpl
sub
pop
mov
repz
cmp
repz
cmpsl
imul
imull
pop
sub
push
xlat
xchg
push
sbb
dec
or
lcall
scas
xchg
mov
rcrl
jmp
loop
ss
and
pop
cwtl
mov
jle
pop
daa
into
aad
ret
inc
je
in
loopew
sub
sbb
cld
mov
insl
std
loopne
cmp
sub
lret
and
dec
xchg
lock
cmp
lds
mov
and
lock
pop
aam
int
xchg
sub
icebp
insb
adc
xor
mov
leave
sahf
and
jae
lret
xchg
sub
dec
mov
mov
lret
add
faddl
push
jb
adc
out
mov
test
jb
sbb
fidivs
cmp
mov
cmpsl
xchg
xchg
sub
loop
insl
xchg
sbb
cmpsl
cli
std
pop
jmp
shl
jle
lods
push
add
push
xor
mov
shl
mov
in
pop
sub
shll
repz
das
aam
test
adc
mov
adc
jecxz
adc
stc
lahf
pop
adc
adc
pop
dec
ret
repnz
movsl
xchg
leave
jnp
jg
jmp
fistps
push
mov
adcl
jg
mov
adc
pop
and
into
mov
stc
subl
inc
lahf
jg
std
inc
jmp
sbb
leave
dec
dec
lcall
call
lock
push
sub
push
mov
in
mov
les
cmp
lret
mov
adc
push
mov
adc
cmpsb
pop
aaa
in
add
mov
mov
hlt
pop
adc
sub
clc
inc
jl
or
mov
pop
mov
and
rorb
aas
inc
mov
mov
imul
mov
jno
sub
push
adc
lea
aas
mov
push
xor
filds
pop
mov
mov
repz
adc
mov
fildl
loop
lods
data16
or
inc
mov
sahf
std
xchg
push
das
mov
cmp
sbb
dec
inc
jg
jp
cmp
and
jl
jae
add
cmp
pop
mov
push
bound
inc
int3
xchg
mov
sub
inc
jo
mov
rolb
adc
imul
jl
adcl
push
call
xchg
xchg
jns
mov
out
jbe
jecxz
sbb
out
adc
mov
xor
xchg
loop
aam
and
dec
and
ret
sbb
in
mov
jle
stos
or
fsubp
pop
mov
mov
xchg
pushf
dec
fnsave
cmp
cmc
mov
aad
jp
out
xchg
mov
push
punpckhwd
sahf
das
in
cld
mov
clc
imul
jbe
mov
shr
dec
jo
out
xchg
pop
loope
pusha
pop
cmp
jl
es
and
sti
nop
fisttpl
xlat
js
pop
dec
mov
xchg
cmp
mov
pop
xorb
jns
mov
xchg
pop
aas
rcl
sbb
ss
or
dec
nop
sbb
ror
push
adc
out
dec
imul
cmp
xchg
jecxz
xchg
ss
lods
add
jle
imul
jae
sarb
adc
inc
sbb
push
imul
or
fs
dec
dec
subl
imul
mov
pop
test
mov
dec
leave
es
es
mov
sub
mov
ficoml
cmc
ss
dec
jno
jmp
mov
aam
adc
mov
nop
adc
pop
lret
mov
inc
sbb
jne
push
and
pop
sub
xlat
cmc
cwtl
pop
mov
cwtl
cmp
mov
mov
popa
push
lods
jns
mov
or
xor
or
inc
rcl
repnz
data16
mov
mov
xlat
add
call
aas
pop
orb
jl
clc
sub
loop
jnp
test
jle
fs
fcompl
arpl
dec
cmpsb
sbb
packssdw
mov
shll
pop
jns
stos
leave
ljmp
sti
fdivs
sub
fbstp
in
rcrb
dec
int
push
xlat
in
in
sbb
shrl
cmpsb
mov
pop
in
add
adc
add
mov
imul
jl
pop
scas
push
ret
xchg
mov
or
nop
push
fwait
dec
mov
vxorps
mov
lcall
popf
xchg
outsl
sub
or
mov
dec
xchg
mov
mov
popa
and
leave
clc
adc
push
xchg
xor
sub
jne
adc
adc
js
fsub
cmpl
mov
adc
inc
add
test
nop
add
mov
jns
sbb
imull
jge
fs
mov
hlt
add
inc
in
jae
add
fbstp
into
or
jnp
add
adc
jno
imul
xchg
rol
std
int
inc
cmp
lahf
aas
push
aad
imull
sub
data16
pop
add
ds
fildl
jae
int3
les
push
rorl
movsb
loop
mov
mov
arpl
jle
shll
repnz
shlb
jo
jecxz
and
cmc
addr16
push
and
adc
iret
xlat
fdivs
sub
push
cmp
mov
loopne
sti
cmpsl
ret
pop
mov
shll
in
push
sub
cmp
or
cmc
xchg
mov
rcll
jne
and
xor
mov
pushf
push
test
inc
int
dec
jne
pop
jp
adc
or
dec
pop
clc
jl
adc
in
push
mov
push
adc
icebp
dec
idivb
pop
out
pop
scas
inc
lock
cmp
sbb
adc
popf
push
inc
jge
fiaddl
or
std
pop
rorl
sub
dec
xlat
popf
fnstsw
jge
iret
insb
ret
js
xor
cli
stos
int
xchg
aaa
inc
jns
mov
adc
push
mov
add
or
xchg
pop
dec
sbb
cmc
pusha
push
rcll
xor
mov
outsb
iret
data16
push
mov
invd
xchg
adc
xlat
xchg
jo
loope
cs
inc
fs
dec
pop
bound
daa
mov
xor
push
outsl
ds
stos
cld
repnz
push
xchg
decb
xchg
mov
push
or
shl
loop
sbb
stc
adc
xchg
push
push
xchg
sti
sti
cli
or
das
ljmp
ds
pop
icebp
addr16
jecxz
ret
pop
dec
inc
pop
mov
fsubrl
aam
ret
lds
dec
fcmovbe
xor
popa
jecxz
fnstenv
test
xor
cmpsl
sub
mov
ds
dec
pop
ss
hlt
dec
mov
xorl
cmp
addr16
ret
mov
sbb
mov
call
push
mov
pushf
mov
mov
rcrl
test
pusha
xor
pop
inc
pushf
xchg
xor
fldcw
mov
test
dec
mov
and
pop
mov
jmp
imul
daa
jb
in
or
cmpsl
cmp
push
or
pop
mov
fldl
pop
adc
push
es
insl
into
outsl
xor
lcall
aad
mov
outsb
xchg
test
jge
das
icebp
mov
sub
xchg
sbb
fs
mov
sbb
add
mov
fildl
pop
sbb
loope
std
add
jb
iret
jo
outsl
mov
sub
xchg
popa
aam
mov
daa
in
cmp
inc
lock
rcrb
dec
mov
popf
hlt
stos
cmp
jo
subl
fdivrs
jb
inc
movsl
fildll
mov
jge
xor
cmp
jae
xor
int3
in
dec
mov
lret
xor
cmp
xchg
inc
fistpl
mov
scas
je
adc
mov
sub
pop
push
xchg
mull
bound
mov
jp
js
ss
scas
icebp
icebp
lret
fadds
out
xchg
push
inc
and
cmp
inc
fiaddl
scas
scas
xor
lock
stc
and
addb
dec
mov
add
cmpsb
mov
pushw
dec
addl
inc
test
lods
cmpsb
sub
andl
jmp
jle
fbld
lret
push
sub
pop
inc
aad
ja
in
and
dec
mov
mov
inc
cmp
lds
sbb
lock
les
or
xlat
in
xchg
pop
lret
xor
xchg
dec
cmp
inc
xchg
sbb
push
jmp
mov
test
sub
aad
dec
adc
andb
add
pop
int
jo
mov
inc
jo
leave
movsb
jno
jg
addb
nop
insb
xor
dec
pusha
in
mov
fsts
insb
lock
inc
dec
ret
sbb
inc
adc
mov
xor
push
add
rorb
mov
sarl
cld
lea
mov
hlt
fisubrl
xor
pop
mov
ss
ljmp
in
xlat
jg
andl
dec
pusha
insl
or
popf
xchg
push
fistpll
fists
ret
dec
push
xchg
mov
bswap
aaa
mov
mov
mov
sbb
push
ds
sub
out
dec
repz
mov
imull
mov
dec
cmpsb
lret
nop
jbe
mov
shrl
out
cmp
xchg
lea
iret
in
dec
scas
adc
mov
inc
icebp
xor
fistpl
loope
fists
push
andb
je
pop
mov
loope
js
in
in
imul
jbe
inc
imull
out
push
int
subb
xchg
cmp
inc
push
mov
arpl
js
mov
roll
cwtl
mov
sub
outsl
push
lret
jno
mov
or
clc
mov
pop
loopne
cmp
push
and
mov
add
insb
stos
jmp
out
adc
movsl
mov
ret
and
push
jne
pop
mov
mov
jns
xchg
push
shrl
adc
cmp
mov
insb
xchg
xchg
aad
dec
mov
xor
push
cmp
and
xchg
or
mov
cld
pop
loop
mov
jmp
fcmovu
xchg
repz
xor
sbb
in
aas
sbb
dec
mov
pop
push
cmp
int
jnp
pop
repz
shl
sbb
outsl
push
push
push
jmp
mov
push
mov
lods
outsl
inc
lahf
or
add
dec
dec
addr16
into
subb
cmpsl
insl
lds
loope
lock
inc
or
cmpsl
pushf
cmpl
mov
cmp
sti
pop
cs
xor
imul
stos
shll
add
clc
xor
and
ss
popf
test
or
mov
in
test
xchg
xchg
mov
fs
fistps
sbb
dec
popa
cmovns
dec
cmp
mov
subl
push
lret
adc
arpl
es
push
xchg
sbb
pop
jl
icebp
mov
jp
mov
mov
lahf
mov
pop
pop
fbld
jge
xchg
lds
imulb
clc
xchg
fs
mov
test
mov
repnz
push
dec
adc
jmp
je
mov
into
cmp
mov
enter
pop
lods
daa
test
push
arpl
lea
ja
enter
xchg
inc
dec
jge
inc
xor
loop
filds
loope
sbb
pop
repnz
jb
mov
inc
jo
xor
dec
inc
xor
xchg
divb
lods
jmp
push
and
das
sub
enter
scas
mov
in
out
popf
aad
mov
stos
clc
in
jnp
dec
sub
mov
mov
out
nop
jl
orl
lret
lcall
addr16
xor
cmp
sbb
sbbb
cmc
add
sub
out
imul
subb
ror
xor
cmpsl
out
pop
adc
pcmpgtw
xor
insl
cmpsb
ljmp
mov
inc
and
or
pusha
xor
xchg
sbb
mov
jns
leave
mov
pop
fisubrs
ds
int3
xchg
and
std
ss
shlb
inc
xchg
xchg
xor
test
lret
out
shl
xor
popa
mov
out
insb
xchg
mov
or
or
add
inc
jmp
push
stc
shl
mov
and
mov
and
adc
addr16
jmp
cs
arpl
sbb
dec
outsb
jmp
lea
dec
lret
cmp
add
xor
out
ja
jbe
jp
stc
mov
pop
ret
inc
push
out
ret
movsl
push
outsb
cmp
xchg
les
fcompl
mov
mov
fadd
orb
cmp
xchg
test
pop
mov
popa
fstl
sbb
dec
jbe
outsl
xor
jbe
push
ja
stos
pop
dec
add
xchg
ret
mov
add
sub
lcall
sub
cmp
jo
adc
fmuls
out
mov
out
les
test
ljmp
dec
sub
ret
inc
outsb
cwtl
lahf
xor
or
mov
inc
push
sub
popf
and
add
outsb
lock
sbb
sarb
pop
movsl
dec
adc
adc
mov
std
inc
je
ja
popa
lods
rcrb
mov
adc
jnp
add
cmc
fildl
mov
xchg
cltd
xchg
cltd
lcall
jp
mov
out
mov
fdiv
jne
shl
adc
test
cmp
mov
cmp
fcompl
cli
pop
in
test
test
pop
mov
jmp
push
negb
add
dec
cmp
mov
imul
leave
sahf
xor
mov
movsb
or
jno
pop
pop
xchg
mov
in
mov
aaa
out
iret
lret
inc
stc
xchg
xor
bound
cmp
push
cli
mulb
sarb
jb
dec
scas
cmpsl
jns
mov
mov
jns
dec
xor
dec
adc
xlat
cs
push
cmp
adc
cmp
clc
dec
sub
xor
push
or
mov
jae
xor
insb
outsb
repnz
add
dec
stos
dec
jno
pop
ss
pop
xchg
mov
sbb
and
mov
mov
or
mov
push
push
loop
rcll
stc
cltd
cmp
loop
pop
push
mov
sbb
ret
dec
mov
std
decl
jmp
les
push
arpl
push
mov
insl
pop
movsb
mov
mov
aaa
insb
add
ja
out
inc
adc
cli
pop
enter
js
push
jae
sbb
fsub
cs
mov
cwtl
push
adc
inc
sbb
xorl
sub
mov
rorl
std
scas
cmpb
xchg
ss
int3
mov
call
fisubs
icebp
ja
pushf
imul
push
dec
xor
xchg
daa
pop
jl
in
mov
push
sub
xor
mov
and
pop
fbld
mov
aaa
sub
popa
loop
es
addb
sub
xchg
add
pop
xlat
xchg
push
xorb
dec
xchg
push
xor
sti
push
or
and
test
into
mov
xchg
ficompl
sub
fcomps
inc
ret
lcall
fiadds
arpl
inc
test
fstl
pop
icebp
push
xorb
mov
mov
adc
push
daa
dec
js
sahf
and
mov
shlb
sbb
loopne
addr16
in
sub
xchg
mov
mov
cmp
push
inc
add
andl
stos
mov
xchg
and
int
imul
lret
sub
fs
xor
les
call
imul
mov
lods
adc
xchg
test
push
rcll
push
es
insb
aad
loopne
popa
lret
xchg
add
ljmp
in
test
push
inc
sarl
repnz
and
pop
pushf
repnz
add
loopne
mov
xchg
mov
int
mov
popa
xor
icebp
into
in
sbb
lods
mov
and
xchg
out
cmp
loope
xor
add
je
xchg
lcall
dec
mulb
or
repz
jle
pmulhuw
scas
rol
mov
dec
out
and
pop
jg
scas
add
push
sti
cmp
jb
aaa
cmp
inc
cmpsl
xchg
shrb
lret
add
or
xor
inc
inc
cmpsl
cmp
jl
mov
pop
out
iret
jno
push
adc
call
orl
jno
rcr
xor
mov
lcall
jbe
push
loopne
cmpsb
test
pop
fistpll
jns
movsb
insl
stc
mov
ljmp
enter
and
mov
pop
cmc
pcmpgtb
imul
rcrb
sbb
push
loope
ret
fsub
fsubrs
scas
fcoms
pop
cli
pop
cmpsb
sbb
jo
dec
xchg
xchg
cmp
add
lods
xor
shll
mov
sbb
aad
inc
outsb
pop
insb
or
fsubl
adcb
push
jbe
dec
fnstsw
adc
addb
movsb
xchg
das
add
push
adc
push
adc
cwtl
sbb
sbb
shr
lret
scas
loop
out
dec
dec
pop
loopne
jb
and
jb
or
iret
mov
shll
dec
xlat
out
xor
insb
push
fsubr
js
pop
out
fs
or
popf
or
cmp
mov
sub
and
dec
xor
jecxz
mov
es
aas
jnp
loopne
mov
les
mov
jecxz
mov
dec
ss
dec
xchg
cmp
lret
push
lret
mov
jp
pop
jle
xchg
addr16
sub
jecxz
mov
push
sub
lods
cwtl
js
sbb
aad
xor
jecxz
lock
inc
imul
aam
pusha
fnsave
stc
dec
xor
add
and
icebp
add
mov
adc
arpl
aad
add
repz
les
cmp
repz
pushf
outsb
adc
test
xor
inc
int3
test
mov
lock
mov
cltd
lret
pop
pop
cmp
lea
out
pusha
jmp
dec
xchg
push
push
mov
adc
andb
inc
push
sahf
ret
movsl
sbb
dec
pop
mov
fwait
ja
jo,pt
test
out
pop
test
fidivl
lret
and
cmp
or
sub
rclb
mov
mov
stc
cmpsb
popa
clc
test
mov
push
fimuls
xor
dec
stos
jmp
mov
mov
shlb
jbe
cmovle
sub
pop
xchg
sbb
pslld
push
sub
lds
add
or
xlat
xor
adc
popa
adc
pop
jg
int
jo
pop
fldenv
loopne
jl
pop
scas
fildl
pop
mov
data16
cmpsb
jo
add
adc
pop
mov
fwait
in
test
mov
dec
lea
xorl
popa
mov
pop
fucom
push
sub
push
push
cs
lds
cmp
shrl
clc
push
mov
pusha
cmp
clc
mov
cs
shl
pop
jp
adc
or
mov
cmp
pop
rorl
les
and
js
stos
jle
pop
sbb
adc
adc
nop
jg
ret
lds
inc
or
cmp
setno
pop
cld
flds
scas
mov
fistpl
cmp
mov
or
js
mov
mov
and
sub
jns
xlat
xor
adc
and
cld
ds
cmp
cmpsl
unpcklps
ret
outsb
mov
in
into
cmovbe
or
fldl
mov
dec
lea
jmp
jg
push
cmovb
test
andnpd
mov
cwtl
scas
inc
cmpsl
and
fucomip
jmp
mov
out
popf
mov
and
inc
movsl
mov
jmp
shrb
aaa
or
pop
push
or
lods
pop
sub
push
out
push
dec
fmul
push
or
js
jno
and
jne
pop
jno
mov
mov
cwtl
lock
shlb
outsb
and
mov
in
stc
dec
mov
lds
int
or
add
adc
cmpsl
mov
mov
imul
mov
and
scas
out
pop
stc
je
cmp
lea
ficompl
fmulp
sarb
out
adc
jmp
add
lcall
les
scas
pop
mov
bound
mov
cwtl
cmp
lds
fsubr
test
lods
icebp
pusha
xor
ja
cwtl
inc
je
jmp
push
push
sbb
or
leave
lret
int
inc
movsb
push
sub
add
test
loop
sub
mov
in
outsb
xor
xchg
mov
int3
cmp
mov
bound
inc
aam
jl
pop
mov
mov
lahf
jmp
cmp
pop
ljmp
shrb
xchg
xchg
aaa
and
pushf
aas
imul
jnp
push
push
in
fs
mov
adc
add
push
xor
aaa
xchg
mov
push
jno
jg
out
leave
pop
mov
stos
testl
lcall
sbb
sub
xchg
push
xchg
sub
in
fiadds
pop
sahf
out
cmpsb
ds
stc
emms
rcl
movl
xchg
mov
arpl
inc
fwait
push
mov
push
icebp
sbb
mov
dec
shll
inc
jb
jns
mov
or
mov
test
loopne
xchg
insb
sbbl
scas
fisttps
shlb
mov
mov
in
push
or
inc
push
mov
adc
test
or
pop
sub
pmullw
push
push
inc
mov
inc
xchg
jg
and
xchg
pusha
out
dec
xlat
imul
out
shlb
dec
outsb
adc
ret
jb
ja
sbb
mov
imul
cmc
test
outsb
in
aaa
inc
pop
mov
mov
ds
xchg
jno
call
stc
jmp
or
dec
out
push
rclb
sub
lea
int3
mov
loopne
xor
and
sbb
and
and
fs
rcrl
mov
dec
roll
adc
sbb
sar
out
mov
aas
jnp
add
aam
loope
sub
dec
mov
aaa
jle
jbe
lahf
mov
into
dec
mov
ljmp
push
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fstps
cmp
or
jp
adc
mov
lods
xchg
fcoms
popa
add
jb
cmp
xchg
or
roll
out
pop
test
arpl
mov
out
cmc
lea
outsb
pop
jb
lret
daa
insl
insl
or
jno
out
aam
out
xor
inc
xchg
dec
mov
mov
mov
fsts
stc
cs
mov
xor
in
ds
add
test
xor
mov
cmp
xlat
fistl
sbb
cli
pop
mov
scas
ds
sub
insl
and
mov
daa
add
jge
and
sub
cltd
cmp
adc
ss
jbe
cs
outsl
sbb
mov
scas
insl
push
or
add
cmp
stc
push
add
sbb
push
in
in
leave
cmp
xchg
lahf
out
mov
mov
mov
lods
mov
mov
cmp
test
icebp
cmpsl
sti
jg
inc
cmp
cmc
xchg
les
or
mov
out
test
xchg
xlat
and
push
aas
mov
pop
cwtl
mov
stc
xor
testb
dec
xchg
add
pop
xchg
sti
or
or
out
jmp
inc
nop
xor
mov
mov
cmp
lea
ljmp
sbb
sbb
mov
inc
popf
push
popf
mov
outsl
pop
cmp
lret
dec
sarb
xchg
inc
cwtl
and
push
mov
sub
jp
mov
xor
mov
pusha
outsl
sbb
sbbb
test
mov
adc
mov
test
inc
or
test
sbb
dec
enter
cli
cmpl
dec
fwait
les
rcrl
adc
mov
ret
loope
mov
popa
movsl
out
jl
call
adcl
test
xchg
add
jo,pt
mov
sbb
cmp
and
in
rcll
sbb
jl
lcall
dec
xchg
inc
jp
notl
sub
lea
jb
xor
outsl
mov
fisttps
adc
adc
push
arpl
sub
cld
js
adc
add
pop
xchg
rol
ret
and
inc
pushf
dec
outsb
rcrl
jp
dec
mov
pop
pop
mov
sbb
rcrl
fidivrl
dec
outsb
stos
jae
cmp
aad
mov
loope
sbb
jbe
in
in
xchg
sbb
int3
sarb
nop
pop
inc
and
xor
mov
adc
or
adc
loop
ja
mov
mov
xor
fidivs
sahf
pop
in
das
pop
ffreep
push
pop
cltd
adc
notb
adc
cmp
pop
xor
mov
lds
inc
out
mov
ja
out
andl
xchg
and
add
ret
dec
mov
shll
mov
out
icebp
fcoms
sub
push
outsl
repz
fildll
and
fdivp
idiv
jle
sub
xchg
push
mov
adc
inc
dec
add
dec
mov
xchg
pop
test
fidivrl
sbb
xchg
lret
in
push
fiaddl
jmp
js
lods
fisttps
and
idivb
movsb
fsub
int
inc
fldenv
dec
scas
data16
jecxz
lods
sbb
das
lahf
jo
das
mov
dec
pop
push
add
insb
xor
and
subb
dec
sub
jp
mov
and
and
and
loope
and
push
out
lret
xchg
mov
and
mov
push
pop
push
push
adc
js
mov
popa
xlat
js
cld
dec
add
or
jbe
out
outsb
mov
movsb
sbb
int3
cld
jnp
inc
in
hlt
sti
pushf
movsl
cli
lods
ret
add
stc
xor
push
mov
int
cli
inc
xchg
movsb
cltd
inc
sub
cmc
and
xor
gs
ret
test
adc
mov
repnz
inc
add
mov
push
cmpsl
mov
lods
mov
insl
jb
pop
push
push
jns
or
push
pop
shrl
push
push
gs
adc
jge
xchg
or
sbb
cmp
xchg
and
jns
push
mov
fistpl
jno
or
mov
dec
aaa
int3
mov
cmp
ja
inc
pop
xchg
pop
push
icebp
and
imul
test
jg
hlt
jle
insl
xor
mov
cltd
push
test
mov
sbb
imul
int3
jae
sub
push
push
movsl
negl
pop
jne
repnz
lcall
add
sbb
sbb
in
js
outsb
ja
jecxz
lahf
and
ljmp
popf
insl
inc
or
and
div
in
and
adc
sub
jmp
iret
jp
loope
loope
inc
jb
xchg
ficoml
pushf
repz
xchg
cmc
adc
push
and
shll
cmp
mov
mov
inc
adc
pop
out
ss
and
add
jg
movl
arpl
xlat
jmp
js
movsl
je
mov
movsb
in
in
sbb
xchg
pop
adc
cmp
mov
jmp
xchg
inc
xor
and
popa
push
loop
test
add
xor
cli
clc
xchg
subb
push
cmc
mov
test
pop
ret
cmp
xchg
in
and
add
fadds
movsl
cmp
mov
sbb
icebp
push
cmp
scas
sbbb
lock
lcall
mov
pop
das
les
outsl
pop
test
popa
xchg
stos
outsb
push
cmpsl
mov
add
dec
sbb
xor
jmp
xor
xchg
pop
push
hlt
xor
push
pop
notb
pop
cmp
lds
xor
mov
cs
dec
aam
test
fcomp
cmp
xor
sbbb
loope
mov
pop
sbb
lods
loop
jl
int3
sbb
out
rclb
and
sbb
and
test
sbb
adc
bts
jg
adc
adc
adcl
repz
std
fcmovnbe
hlt
into
js
rcrl
filds
ficomps
push
test
dec
and
cmc
inc
leave
into
ret
mov
fmull
mov
popa
push
push
sahf
daa
shll
lret
leave
cmp
and
mov
imul
cmp
repnz
mov
inc
lret
mov
mov
dec
xor
add
jo
popf
sahf
push
xor
dec
mov
addr16
and
fcmove
lcall
inc
mov
jnp
add
jo
pop
rcrb
mov
inc
ret
inc
adc
scas
mov
push
sub
mov
xchg
pop
inc
cmp
das
ud1
ljmp
inc
cmpsl
ljmp
dec
jle
or
cli
lods
insb
flds
aam
data16
dec
adc
stos
pushf
and
mov
shrl
insl
test
movhps
mov
pop
sarb
mov
repnz
pushf
push
insb
xchg
fwait
in
xchg
pusha
out
sahf
jmp
sub
lds
push
push
push
cmc
clc
jg
sarb
push
xchg
mov
adc
mov
jmp
xor
dec
popf
out
ljmp
and
les
es
adcb
daa
push
sbb
test
adc
sub
pop
fmuls
jge
xchg
mov
shll
mov
ret
push
cwtl
lods
xchg
jl
data16
cmpsb
pop
inc
xchg
and
cmp
aas
ret
ljmp
jnp
mov
mov
mov
inc
jl
nop
xor
in
xchg
outsl
in
in
and
or
movsb
outsb
fsubr
insl
jae
out
popa
mov
stos
mov
xor
call
jp
jp
jns
aas
jp
dec
xor
adc
inc
and
out
hlt
insl
cmpl
xchg
lret
in
jp
mov
dec
cmpsl
and
sbb
inc
into
fdivrl
sbb
aas
inc
xchg
cmpsb
hlt
push
pop
hlt
fwait
lret
dec
ja
hlt
add
scas
aad
mov
into
mov
cmc
fcomp
fidivl
cmc
push
xchg
inc
xor
arpl
or
cmp
sub
stos
pop
out
test
aas
pop
jno
cmp
adc
icebp
fistl
pop
popf
jb
addr16
cs
test
sub
je
sbb
into
jmp
sbb
enter
fdivrl
das
scas
xor
ljmp
xchg
bound
or
in
fchs
loop
dec
xor
mov
mov
nop
rcl
test
mov
pop
cmp
xchg
sub
lret
adc
jg
mov
mov
add
jmp
ja
jbe
adc
les
inc
xchg
lods
add
and
push
fwait
stos
cs
hlt
insb
popa
sub
pop
mov
adc
iret
out
xor
shll
dec
mov
cs
mov
xor
xorl
fidivl
into
outsb
pop
mov
ljmp
lods
and
cs
shl
aad
inc
pop
pusha
sbb
jb
xchg
inc
insl
mov
orb
push
stos
je
xchg
cmp
pop
es
inc
mov
rol
xchg
out
repnz
mov
fcmove
mov
int3
fbld
sbb
xchg
push
xchg
mov
and
sahf
imul
popf
mov
insb
cmova
and
test
xchg
jne
cmp
push
in
xchg
in
cmpsl
mov
lret
aas
pop
sahf
lock
das
mov
adc
jno
std
sbb
addr16
xchg
mov
add
lods
jmp
ret
jge
inc
add
add
out
pop
jae
pop
xor
xchg
cmp
xchg
out
mov
mov
inc
mov
in
or
cmp
mov
int
mov
mov
dec
outsb
hlt
mov
sbbl
lret
inc
and
dec
xor
rcrb
mov
jbe
pop
cmp
mov
mov
div
lock
cmp
xor
aad
lahf
mov
call
mov
lods
pop
xor
idiv
push
bound
mov
sti
dec
push
lock
jl
mulb
pusha
cmp
jle
nop
jmp
add
push
bound
adc
stc
adcl
mov
mov
out
lea
adc
insl
jne
xchg
cmpsl
push
jl
sti
pop
add
mov
jne
and
stos
sub
movsb
pusha
pop
das
adc
dec
std
and
jnp
mov
test
mov
sub
gs
je
and
xchg
lea
lea
adc
lds
xchg
hlt
cmc
push
push
sbb
jne
mov
lods
aam
mov
push
int3
lret
mov
mov
stos
lcall
or
dec
and
jle
or
xor
stos
mov
add
hlt
mov
or
jl
scas
mov
movsl
lods
cs
lods
mov
fs
push
jae
orl
add
mov
fnsave
lret
cmc
outsb
push
inc
inc
push
out
pop
movsl
and
dec
aaa
jecxz
lahf
pop
mov
mov
out
aam
dec
inc
movsl
xchg
jg
roll
in
addr16
popa
or
push
push
sbb
in
dec
lcall
ljmp
adc
inc
push
iret
cmpsb
push
adc
stos
xor
pop
movsl
pop
icebp
xchg
xor
outsb
push
cmpb
fwait
ljmp
int3
or
fs
push
adc
mov
push
bound
shl
adc
jae
fbstp
mov
and
sbb
cmp
fmuls
xchg
imul
mov
aaa
push
inc
push
in
mov
pop
adc
ss
and
pop
fisubrs
jno
in
xor
inc
or
bsr
inc
dec
jo
push
les
mov
xchg
mov
js
xchg
jns
inc
negb
scas
jnp
xor
xchg
xor
dec
stc
out
pushf
aas
push
adc
aas
lods
pop
jl
push
sbb
ds
iret
clc
test
and
lahf
lods
xchg
mov
sbb
or
pushf
mov
xchg
lahf
xlat
mov
es
mov
cmp
int
mov
pushf
call
sbbb
fistpll
outsl
ret
les
test
adc
mov
cmp
dec
fidivrl
cmp
push
data16
aas
stos
adc
jl
lret
add
test
lahf
xchg
cltd
push
in
movsl
jne
mov
ficoms
jae
add
negl
push
xor
push
and
roll
and
jns
lods
outsl
cmpsb
shll
inc
mov
xchg
push
or
mov
and
cmc
sbb
pop
jb
int
mov
loop
adc
or
and
scas
inc
mov
shr
dec
mov
adc
xchg
mov
stos
fistl
lock
xchg
or
push
xchg
dec
pop
xchg
popf
les
sbb
loopne
add
xor
fbstp
cmp
flds
cmp
mov
xchg
mov
out
add
mov
repz
cmpsl
or
pushf
or
push
popl
es
xchg
push
cmp
test
jge
pop
inc
arpl
leave
sbb
sbb
and
jmp
or
xor
int
jne
lea
xlat
dec
ficomps
push
inc
mov
orl
cmp
sbb
les
add
clc
iret
pop
leave
fwait
out
dec
inc
jnp,pn
out
jge
outsl
lods
fadds
es
pop
push
scas
cwtl
ss
aaa
sub
daa
add
lahf
jp
repz
push
insb
das
cwtl
sub
daa
cmp
dec
test
dec
aaa
adc
jle
dec
nop
inc
jg
xor
cltd
stos
lahf
loop
mov
std
xor
sti
cmp
sarl
pop
mov
sub
adcb
lcall
mov
cmp
xor
and
pop
pop
lret
pusha
lret
inc
mov
pop
inc
sub
mov
lds
sub
adc
xor
in
jmp
push
pop
aam
ror
jnp
fadd
inc
or
push
movsl
fcmovu
sbb
mov
outsl
pop
mov
inc
adc
mov
inc
or
mov
lea
lea
jae
add
and
jo
cmp
gs
jmp
adcl
xchg
dec
addl
mov
rorl
sti
inc
lock
add
loopne
lods
mov
mov
sbb
shl
jecxz
adc
test
xlat
mov
outsb
jne
adc
mov
mov
int3
xchg
ljmp
imul
lea
push
fisubrl
jle
or
inc
rep
jo
int
rcrb
push
inc
add
lret
cmp
divb
add
pop
test
repz
cltd
sbb
dec
mov
add
add
push
inc
aam
lahf
xor
stos
adc
mov
cwtl
jmp
jmp
pop
movsl
repz
stc
out
push
jno
fld
add
test
mov
cmp
and
mov
aam
pop
fbstp
sub
hlt
jl
xchg
inc
cmp
pop
or
adc
lahf
pop
leave
mov
dec
jecxz
int3
or
loopne
lea
lcall
add
mov
outsl
aam
push
je
movsb
fstpt
and
ret
sub
sub
mov
lods
mov
add
or
in
sbb
into
aaa
lea
push
daa
push
dec
jecxz
ss
mov
cld
mov
or
xchg
inc
js
lret
and
pop
jmp
jnp
dec
xor
dec
test
pop
dec
xchg
dec
adc
xlat
sub
int
rcl
jmp
test
in
or
rcrb
inc
cmp
pop
popf
lods
jne
mov
or
jmp
mov
test
push
int3
sbb
jecxz
aaa
push
jbe
adc
rcrl
xor
and
loopne
push
lods
lock
jecxz
sbb
pop
mov
sbb
and
fiadds
mov
std
dec
sbb
and
hlt
adc
pop
je
cwtl
aaa
or
test
or
fldl
jge,pt
cli
or
inc
cmp
cmp
push
mov
scas
adc
lods
je
push
into
sbbl
imul
cmpsl
inc
and
scas
ret
jno
rclb
sbb
loope
pop
sarl
mov
pop
xlat
push
pop
call
cld
icebp
sbb
aad
push
xchg
insl
repz
adc
popf
mov
test
addb
jne
xor
clc
cmpsl
cltd
imul
cli
imul
rorb
cld
xor
sub
adc
mov
fdivrs
adc
sti
outsl
mov
imul
push
jae
push
pop
loopne
mov
pop
sbb
mov
bound
dec
outsb
sub
lret
cmpsl
daa
fcmovne
bound
fdivl
adc
outsb
pop
add
movsb
stc
jo
add
sti
xchg
idiv
and
in
sub
cmp
in
cmp
mov
fdiv
shlb
jne
dec
outsb
je
jp
subl
and
adc
dec
mov
data16
mov
or
mov
rorl
lea
sub
std
lock
in
dec
push
imul
mov
add
sahf
scas
outsb
fdivp
xchg
or
pushf
rorl
adc
xchg
lods
pop
outsb
push
jmp
bound
shrb
cmp
pop
push
shlb
and
mov
mov
inc
outsb
push
adc
ret
sbb
jnp
scas
mov
dec
add
jne
mov
jp
out
and
xchg
mov
inc
movsb
pop
jb
test
push
cmp
xchg
lods
mov
xor
lods
inc
mov
mov
ljmp
or
addr16
sbb
idivl
lock
ret
jmp
shl
ret
pop
push
mov
sub
xor
mov
sarb
into
cmp
and
xor
sbb
inc
cmp
mov
hlt
lods
addr16
out
dec
in
rclb
loopne
dec
mov
pop
imul
test
or
jno
dec
mov
outsb
mov
push
int
cli
je
mov
leave
ds
shr
pusha
sub
jmp
mov
add
mov
rcrb
sub
jae
sbb
int3
fwait
scas
sbb
mov
push
pop
cwtl
mov
inc
enter
pop
push
daa
push
int
shlb
mov
in
sub
scas
pop
popf
bound
cmp
setno
and
dec
subl
mov
mov
inc
lods
jecxz
or
movb
pop
loop
push
cmpsb
push
movsb
adc
push
cmpl
mov
jno
neg
scas
orl
int
mov
mov
lcall
jno
and
push
out
add
sahf
ljmp
sub
or
sub
pop
insl
into
leave
sbb
stos
dec
imul
xor
xor
dec
sub
insl
es
sahf
jl
sti
inc
add
loop
push
or
movsl
sti
fstl
enter
push
cmp
shrb
stos
imul
push
jmp
xchg
pop
test
minps
lret
cltd
adc
fsubp
sbb
and
ss
test
fwait
cmp
jns
sbb
in
jb
xor
and
lahf
fdivrl
add
test
ficomps
adc
jle
and
into
scas
fcompl
pop
ror
leave
jecxz
xchg
adc
insb
lret
inc
sahf
adcl
data16
lea
push
jecxz
stos
test
push
sbb
stos
test
xchg
inc
ds
jle
push
jns
stos
stos
ret
outsl
test
fistpll
lds
jge
scas
xchg
mov
xchg
xchg
jp
add
push
adc
xlat
cmp
pop
sub
fstps
jnp
sarb
jo
xor
jmp
add
mov
mov
push
jb
pop
pop
nop
fsts
test
sarl
fmulp
mov
pop
adc
shr
pop
and
mov
rolb
jle
mov
and
or
sahf
jmp
pop
push
xchg
add
lods
stos
aam
jno
stos
jl
adc
add
inc
popf
mov
xor
add
inc
dec
mov
fisubrs
out
inc
jo
mov
leave
jo
and
loope
dec
mov
jbe
insb
aad
xchg
insb
xor
movl
xlat
lods
ja
sbb
push
mov
mov
xchg
adc
mov
ss
jge
sub
sbb
adc
enter
inc
ror
xlat
lahf
pop
mov
frstor
sarl
or
push
xchg
sbb
inc
and
mov
ljmp
or
sahf
jne
jne
inc
ret
adc
inc
push
jg
repnz
test
out
push
sbb
mov
push
cmp
mov
dec
cmp
mov
cwtl
push
scas
or
in
lahf
iret
sbb
mov
rorb
movsl
sbb
adc
daa
ja
les
pop
fs
ljmp
ret
jo
rcll
dec
lea
inc
adcl
pop
fs
mov
mov
inc
or
adc
mov
ljmp
insl
xchg
jae
mov
jae
scas
dec
not
sub
sub
cli
mov
pop
push
add
inc
lret
and
mov
inc
xchg
in
movsb
aam
push
push
in
xor
hlt
fs
xor
lahf
addb
ja
or
or
fisubl
push
xchg
fcoml
or
add
inc
int3
xchg
popf
inc
stos
jnp
push
pop
mov
addl
cltd
dec
int
dec
stos
pop
inc
jnp
out
xchg
aam
cltd
inc
loop
add
push
outsl
les
lahf
clc
stos
push
test
mov
add
fs
lret
aam
frstor
xor
add
jae
mov
mov
dec
cmp
xchg
push
decb
mov
jg
or
dec
push
lods
iret
xor
sub
sub
mov
cmp
mov
adc
movsb
sub
and
inc
push
sbb
out
insb
jp
mov
mov
in
jnp
xchg
negb
into
lock
jns
push
daa
sbb
inc
scas
loop
xchg
sbb
and
stos
idiv
mov
andl
cmp
add
and
clc
dec
add
in
mov
jno
sbb
or
jp
lahf
lods
mov
aas
xchg
test
loope
fidivrl
mov
mov
mov
and
fxam
mov
into
pop
in
cmp
repnz
jp
dec
inc
adc
lods
mov
xor
rcrb
jp
or
in
and
cmp
dec
xor
pop
cmpb
xchg
out
sahf
pop
xchg
add
out
xor
mov
dec
or
nop
addb
addl
cs
xchg
imul
lret
cmp
lea
sbb
test
and
xor
js
js
stc
dec
lock
scas
push
adc
add
cmp
cmc
sbb
mov
sbb
fisttpll
fistps
sbb
mov
cmpsl
js
xorb
sub
sub
pop
jbe
popa
mov
mov
imul
push
ret
xor
or
insb
pop
fstpt
pusha
aam
push
jmp
sub
dec
pusha
mov
push
das
push
popa
imul
push
pop
jg
call
loope
inc
inc
lods
insb
pop
aas
xchg
dec
cmp
lea
jne
dec
lock
xor
push
in
test
mov
ror
sub
jmp
jmp
jp
xchg
das
xchg
adc
into
jecxz
test
xchg
daa
mov
cmpsb
mov
jne
mov
repnz
push
out
mov
cmpsb
xchg
gs
ret
adc
insl
enter
clc
enter
sub
mov
test
arpl
mov
sub
sub
jecxz
mov
or
sti
pop
imul
jmp
cmpsb
mov
adc
rcl
movsl
push
jmp
or
shlb
mov
pop
inc
or
and
adc
xlat
pop
lret
movsb
leave
rcll
jecxz
mov
outsl
jp
sub
and
mov
dec
push
inc
xchg
mov
inc
and
pop
inc
rcrb
sbb
or
gs
scas
popl
loop
inc
test
fabs
lret
and
out
mov
and
adc
popw
fs
js
mov
adc
adc
cmp
rcrl
fwait
dec
mov
push
adc
ss
dec
lock
ds
ret
sub
inc
mov
push
not
fwait
popf
inc
mov
ret
fld
dec
rcr
xor
mov
mov
or
and
test
aaa
or
sbb
ds
and
test
xchg
stc
gs
popa
push
repz
xchg
pushf
imul
mov
lret
into
jb
inc
lds
gs
mov
out
ja
imul
add
dec
loop
push
sbb
popa
sub
repz
aad
out
mov
ja
arpl
pop
inc
or
push
iret
out
jmp
fs
stc
add
test
jge
enter
hlt
imul
dec
xchg
int
xchg
push
dec
test
loope
push
in
add
cmp
pop
sbb
cltd
mov
mov
into
cmpsb
adc
cmpsb
dec
pop
sub
pusha
les
jmp
imul
hlt
stos
push
clts
ds
lock
and
jnp
testb
test
outsb
xchg
lret
dec
inc
andl
aaa
add
sbb
push
ja
das
adc
push
pusha
mov
call
xlat
ljmp
test
movsb
imul
jnp
mov
rorl
scas
and
mov
sbb
cmpsb
stos
mov
arpl
pop
addl
push
adc
add
out
cmc
sbb
mov
mov
dec
sub
ficomps
xor
sbb
iret
mov
mov
pop
lcall
pop
enter
iret
and
push
or
mov
fucomip
adc
sub
xchg
mov
out
lock
sbb
fstl
ret
lahf
xchg
mov
inc
out
in
shrl
xor
fstl
adc
pushf
cli
push
stc
sbb
pushf
adc
js
or
jmp
jge
xchg
pop
repnz
mov
test
call
lds
cmc
out
add
inc
adc
das
adc
push
cmp
out
repnz
pop
jg
pop
cmp
inc
or
push
adc
mov
mov
or
dec
mov
xchg
test
je
js
loop
roll
mov
push
pop
cltd
and
arpl
rcll
sbb
push
rolb
fidivl
inc
push
dec
or
ljmp
shlb
inc
test
cmp
call
push
hlt
and
fdivrl
test
inc
mov
sti
rol
sbb
movsb
fstpl
dec
push
jge
repnz
or
mov
stos
jl
pop
pop
stc
mov
dec
fadds
outsl
insl
shlb
push
mov
pop
adc
mov
cmp
sbb
lret
fnstenv
fdivp
jl
sub
inc
dec
mov
inc
jecxz
xchg
loop
add
js
jle
xlat
mov
movsl
inc
push
lock
out
xchg
mov
decb
lods
mov
lods
xchg
jge
cs
cld
jg
in
ja
rolb
aaa
sub
cmp
and
and
mov
jp
mov
cmc
dec
sbb
stos
push
outsb
sbb
das
cmpsl
sahf
mov
xor
jns
inc
in
push
fwait
mov
mov
fmuls
pop
inc
in
adc
adc
xor
dec
mov
int3
add
les
cmpsl
or
push
dec
hlt
jge
xor
jb
arpl
push
pop
adc
sbb
adc
add
rorb
mov
jle
ret
popa
ss
pop
mov
mov
fmull
aas
or
lods
scas
jb
popa
cmp
cmpsl
sub
inc
ja
ret
or
test
pusha
lcall
shll
cld
les
iret
rclb
jae
shrl
pop
push
sub
pop
bound
fsubs
mov
dec
movsl
ret
lcall
push
jne
cmp
rcll
cmp
mov
das
dec
sub
hlt
sub
dec
inc
stc
insl
movsb
and
movsb
pop
inc
cli
add
inc
ret
gs
mov
pop
mov
adc
fldl
pushf
mov
xor
adc
add
cltd
leave
dec
cld
ja
int
or
dec
imul
pop
ud1
mov
mov
iret
xor
jmp
mov
mov
lret
rorl
movsb
or
inc
cld
clc
and
cwtl
outsb
and
jae
pop
adc
bound
clc
pop
mov
test
sbb
clc
pop
mov
stc
jno
jns
pushf
cmc
mov
push
or
fcoms
push
jno
sub
inc
xlat
pop
adc
loopne
or
aas
fcmovnbe
dec
push
or
mov
and
stc
lea
popf
movsl
std
or
cmovne
lcall
pushf
sbb
cmpsl
pushf
adc
cmp
adc
cmp
rcrl
push
cld
cld
cmp
mov
push
js
dec
add
sub
aad
mov
mov
in
inc
dec
idiv
mov
pop
inc
push
push
adc
arpl
xor
std
arpl
cmp
lcall
mov
jno
imul
addb
xchg
xorb
mov
pop
push
outsl
sbb
and
ret
bound
jnp
or
adc
push
stos
movsb
int
cs
mov
pushf
insb
and
cmp
xor
addl
inc
out
into
add
imul
sub
in
mov
cmpsb
das
push
dec
icebp
dec
mov
or
fmuls
inc
adc
cmp
jo
negl
addb
dec
push
mov
out
cmc
dec
push
lock
popl
inc
pop
push
push
sbb
fnstcw
daa
mov
xchg
mov
mov
imul
cli
shlb
fisubrs
cs
outsl
in
cmp
fsubrl
add
add
jl
cmp
dec
xchg
std
mov
rol
call
xchg
test
add
pop
sbb
adc
cmc
dec
fs
fwait
jge
mov
fnsave
adc
and
iret
adc
mov
lret
imul
dec
fisttps
or
pop
out
mov
push
xchg
push
mov
insl
insb
fistpll
xchg
lcall
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
or
outsb
sbb
jp
pop
jp
mov
movsl
lret
nop
mov
mov
mov
push
arpl
aas
xor
repnz
stos
push
mov
xchg
or
sar
or
insl
ss
sub
into
fcoms
cld
lahf
arpl
gs
jbe
outsb
sti
adc
inc
lds
fisttps
movsb
cmp
scas
outsl
or
mov
fsubrs
xchg
adc
mov
inc
in
cmpsl
add
lret
mov
sti
sub
push
mov
test
clc
movsb
aaa
imul
cmp
into
add
lods
pop
rorb
test
pop
inc
lcall
mov
loope
push
in
inc
sub
pop
xchg
shrb
negb
dec
sar
lods
xlat
mov
jbe
adc
fsubp
movsb
icebp
andb
inc
push
xchg
mov
and
xchg
xchg
mov
sbbb
mov
sub
mov
loope
mov
popa
xchg
and
lds
add
mov
xchg
out
xchg
lahf
xor
sbb
out
loope
cwtl
dec
jecxz
pop
scas
clc
jb
lcall
mov
xchg
mulb
mov
or
mov
xchg
bound
pop
mov
jb
addb
mov
inc
inc
div
fwait
pushf
loopne
stc
shrb
sub
movsb
imul
xor
mov
sbb
inc
mov
jge
adc
cwtl
mov
add
nop
mov
push
add
outsb
xchg
out
push
fidivrl
cs
mov
jle
pop
jg
imul
roll
xchg
add
std
or
outsb
mov
test
mov
push
scas
sahf
mov
test
mov
adc
cltd
mov
stos
sti
and
adc
add
into
pop
push
cmp
inc
mov
stos
rorl
xlat
pop
std
xchg
xor
std
xor
shrb
xchg
es
out
jnp
or
filds
in
adc
add
adc
rclb
rep
or
adc
push
xchg
xchg
push
xlat
cmp
xor
xor
sub
into
cltd
mov
fwait
inc
std
andb
cmc
mov
jecxz
or
cmp
clc
sbb
mov
mov
repnz
pop
imul
and
mov
cmovl
scas
outsb
sahf
or
mov
icebp
imul
ljmp
pop
in
jmp
jl
sti
cmp
ljmp
adc
rorl
mov
imul
das
inc
jo
xchg
mov
addr16
mov
mov
int
sub
lret
xor
aam
jmp
das
das
dec
push
ja
push
je
je
jbe
xchg
mov
mov
lods
mov
fsub
add
mov
lcall
dec
pop
lret
insl
stc
jnp
aaa
pushf
ss
xlat
ficoms
insl
jbe
outsl
cwtl
xchg
scas
js
or
dec
rclb
roll
xor
inc
xor
push
jecxz
je
xchg
fisubl
adc
pop
fcmovnu
stc
orl
in
loope
je
into
std
mov
testb
push
into
fistpll
ds
inc
fcompl
add
pusha
jns
loopne
pop
cmpsl
and
mov
inc
dec
jp
sbb
lret
test
push
push
dec
sahf
mov
add
mov
xor
xchg
arpl
pop
xchg
orl
sahf
rclb
bound
int3
xor
mov
add
xchg
fwait
or
sti
xor
sti
sub
add
xchg
push
xor
sbb
or
gs
mov
push
xlat
fwait
cmp
or
cld
ss
pop
inc
xor
bound
ljmp
fistpll
pop
out
adc
fwait
jecxz
out
adc
sub
pop
fs
dec
cmpl
jno
sahf
push
inc
adc
jns
mov
lret
fwait
mov
loope
fdivrs
xor
scas
jmp
push
mov
imul
mov
or
inc
call
mov
cmpsl
lcall
int3
or
push
inc
lahf
pop
scas
push
into
fucomp
das
in
jne
js
insw
mov
mov
xchg
lret
pop
mov
jb
or
mov
movsl
hlt
into
or
test
jb
pop
clc
push
pop
mov
push
pop
xchg
inc
call
push
test
fidivs
adc
repz
sub
or
aad
je
xlat
xor
push
bound
xor
fbld
test
push
test
jl
inc
xchg
es
mov
jg
mov
lock
sbb
js
jmp
sub
push
mov
ds
or
pop
mov
mov
lock
je
dec
jne
or
lcall
ss
hlt
insl
mov
dec
hlt
xchg
adc
test
fs
out
ljmp
jecxz
test
or
out
mov
popl
in
jns
xor
fadd
inc
mulb
mov
dec
add
insl
sub
and
sbbb
pop
xchg
sbb
iret
aaa
xchg
xor
xchg
cmc
mov
dec
test
pop
pop
daa
sbb
aad
mov
mov
or
mov
imul
add
ret
repnz
pusha
jno
xor
mov
out
cmp
pop
sbb
dec
mov
stc
out
je
test
lahf
push
push
adc
push
mov
add
cltd
xchg
mov
jo
add
outsb
sub
jge
or
sub
mov
cli
xor
cs
add
outsl
out
add
jae
and
cmp
adc
mov
stc
jecxz
sbb
lahf
mov
mov
cmp
fisubl
movl
ljmp
jae
jle
popf
push
mov
xchg
ss
push
lods
movsb
sbb
out
jmp
sub
push
mov
shll
xlat
inc
popf
imul
pop
cmp
mov
sub
ficoms
pop
enter
push
mov
sbb
nop
inc
cwtl
inc
insb
mov
leave
divl
cli
sbb
jnp
or
jbe
adc
sbb
jae
mov
xchg
test
mov
stc
xchg
sti
jb
js
mov
pushf
mov
pop
mov
lods
fs
cmc
xor
movl
xor
xor
repz
lahf
sbb
movsb
decl
outsl
mov
xchg
mov
push
mov
int
mov
inc
in
push
loope
inc
xor
dec
pop
cmp
xchg
imul
push
leave
xlat
push
rclb
les
iret
lds
cmp
adc
jb
inc
in
pop
inc
cwtl
and
push
arpl
inc
fnstsw
outsb
bound
test
lret
inc
or
add
imul
sbb
aaa
scas
jbe
enter
mul
sub
inc
inc
outsl
mov
je
out
mov
mov
xor
shll
stos
mov
or
daa
adc
cmp
pushf
lret
call
out
outsb
and
aam
jo
out
sbb
inc
or
mov
fdivp
or
push
mov
ljmp
fsubp
shll
push
xor
inc
and
dec
dec
xor
daa
pop
sbb
inc
loope
pop
out
pop
in
and
dec
jg
loopne
cmp
inc
in
pop
paddb
cmp
push
xor
mov
hlt
pop
pop
stos
int3
dec
int
push
in
aaa
jl
adc
cmp
test
sub
cmc
dec
jmp
sti
cmp
shr
cmp
mov
aas
jb
lahf
fisttpl
mov
cmp
cmove
clc
orl
push
cwtl
lock
xor
fisttpl
push
decb
and
xor
dec
cmpsl
xchg
lret
or
stc
icebp
test
pop
jge
aaa
lods
js
adc
or
or
jns
jb
dec
into
aas
into
pop
filds
sub
or
xchg
test
jl
sbb
fldenv
int
and
jo
adc
mov
and
sub
enter
iret
cmp
xchg
xor
or
neg
in
in
xchg
mov
movsl
movsl
and
fwait
inc
test
sahf
dec
or
dec
es
jb
ss
xor
mov
add
in
jmp
nop
lods
sub
push
cmp
sbb
xlat
leave
mov
in
dec
adc
lds
mov
lods
enter
scas
daa
lret
in
int3
mov
mov
imul
popf
lret
xchg
mov
add
inc
mov
or
mov
xchg
add
ss
fidivl
les
mov
or
lods
sarb
rorl
xchg
add
add
push
movsl
aam
out
jecxz
std
lods
or
daa
pop
aad
out
not
sahf
xchg
xor
shr
dec
push
xchg
jnp
cltd
xor
and
insl
push
sarb
mov
jb
out
sahf
or
cld
mov
shr
popf
int
dec
notb
mov
rcll
test
js
xor
push
mov
int3
push
adc
add
jae
jne
jns
cli
int
mov
add
sub
mov
scas
inc
fsub
dec
and
das
mov
jg
mov
addl
test
ret
es
bsf
scas
mulb
call
ret
push
push
xor
ljmp
mov
andb
and
cmpsl
lea
push
ret
cmp
call
out
jl
jae
sbb
and
xor
cmp
cmp
fidivs
loopne
sub
lret
xchg
mov
xor
mov
or
jecxz
les
dec
addr16
push
cmpsb
stos
loopne
pop
lcall
lods
pusha
out
inc
add
shrd
imulb
and
test
inc
out
idivb
mov
cwtl
cmp
test
push
sbb
add
add
push
std
adc
push
mov
nop
sbb
adc
fcomi
rorb
sub
jns
ss
adc
in
sbb
add
out
xor
pop
xchg
mov
lcall
out
in
into
sahf
pusha
in
pop
lahf
or
in
xor
loop
push
outsb
push
test
mov
daa
xor
loopne
fidivrs
dec
xchg
dec
lcall
add
and
xchg
jns
jmp
adc
test
push
int
push
xchg
xor
in
mov
aaa
bound
sub
ficoml
insl
xchg
xor
cmpsb
push
pop
mov
lahf
test
pop
sbb
div
lea
xlat
popa
push
sub
loop
test
cltd
scas
mov
or
movl
or
adc
int
gs
inc
jo
and
std
pushf
sbb
cmp
pminsw
lods
cmp
pop
sub
jg
xchg
cmc
dec
in
mov
test
dec
fnstenv
sbb
mov
and
scas
sbbl
push
les
inc
pop
xchg
dec
sbb
sub
xchg
ret
daa
mov
adc
mov
mov
mov
push
cwtl
cmpsl
jl
je
test
xor
out
sub
mov
sub
cmp
push
ds
xor
in
icebp
sbb
xchg
test
dec
mov
lea
xchg
sbb
jb
loopne
xchg
pop
sbb
fidivl
sub
in
fstps
les
nop
or
mov
adc
push
sbb
mov
sbb
jecxz
lcall
stos
lock
and
stc
mov
int
sbb
push
cs
jecxz
lea
push
adc
inc
or
sub
mov
cld
mov
push
jno
jge
cmp
lcall
mov
jne
adc
jae
rcrl
cmp
xchg
cli
out
shl
push
xchg
lds
xorb
ja
insb
mov
out
movb
mov
push
leave
mov
in
call
nop
push
test
stos
mov
cmp
dec
mov
add
ret
xor
das
movsb
mov
arpl
bound
rcrb
inc
mov
push
notb
repz
push
fs
addl
dec
inc
fmul
mov
mov
inc
sub
scas
xchg
in
in
mov
inc
fwait
inc
lods
aas
jns
ja
rcrb
ret
xor
mov
and
or
ret
push
scas
lds
mov
adc
das
inc
jnp
pop
mov
and
xor
idivb
int
fs
add
adc
fcompl
jg
mov
inc
clc
dec
stos
repnz
ret
mov
and
xchg
mov
push
into
push
insb
and
nop
repnz
or
rcll
leave
popf
mov
test
addl
or
pop
and
mov
dec
cmp
add
rclb
bound
jb
dec
idivl
pop
arpl
or
test
mov
inc
out
int
push
ds
jp
insl
imul
je
bound
adc
je
call
sbb
mov
es
dec
mov
lds
pop
xchg
sub
pop
or
adc
push
mov
lahf
inc
sub
jle
les
loopne
aad
cmp
fs
out
sub
dec
or
adc
push
push
fiadds
mov
mov
ja
dec
ja
xor
movsl
sub
jge
jno
jle
mov
mov
or
adc
inc
jp
and
pop
xchg
je
mov
dec
fcompl
mov
inc
sbbb
push
cmpsb
adc
lret
mov
sbb
outsb
dec
and
push
hlt
movl
stos
call
sbb
adc
ficomps
sbb
loopne
cmp
scas
adc
cmp
loop
push
and
ret
int
les
inc
pusha
dec
jecxz
insb
push
shrb
xor
popf
fdivrs
testb
fstl
shr
sub
jbe
push
loopne
sub
jbe
stc
ss
les
movsl
cmpb
and
cmp
jae
mov
push
jno
jns
adc
imul
repz
loop
mov
dec
inc
jmp
sti
dec
cld
push
sub
les
dec
xlat
inc
adc
daa
pmaxub
adc
sbb
sahf
arpl
cmp
mov
je
pmuludq
fs
std
cmp
fsubl
in
lret
mov
jg
jb
lret
fcmovb
pop
cld
stos
stc
push
fildll
inc
pop
mov
rorb
pop
adc
lahf
cmpsb
xor
jle,pn
fistpl
and
xchg
call
or
fisubrl
xor
push
test
push
add
test
add
bound
std
cmpsl
sub
popf
stos
mov
or
cmpsb
mov
sub
dec
jg
movsb
xchg
lahf
jecxz
pop
repnz
mov
jbe
pop
push
rorl
dec
call
inc
rorb
dec
pushf
mov
ffree
mov
push
dec
enter
jmp
psadbw
jno
jmp
js
jb
inc
addr16
sbb
or
mov
xchg
dec
call
iret
aas
popf
sarb
unpckhps
js
imul
cmp
xchg
clc
jp
sub
aad
fsubrl
sub
sbb
ja
lcall
dec
inc
fisubrl
mov
adc
or
and
jmp
ffree
call
popf
push
loopne
mov
adc
call
jo
ljmp
roll
inc
scas
leave
jo
lret
adc
mov
mov
cmpsb
fisttpll
dec
pop
aas
fimuls
pop
into
sahf
in
popl
and
dec
popf
jb
dec
xchg
in
push
fsubl
es
inc
cmp
cmc
push
xchg
push
shll
fcomp
cmp
data16
out
shr
nop
xor
dec
xchg
bound
into
test
cmp
lcall
mov
sub
dec
mov
iret
pop
fsubrs
inc
out
jmp
jmp
cmpl
ficoms
dec
test
rcll
mov
jmp
rcrl
jbe
pop
nop
dec
xor
outsb
lret
and
mov
sbb
jge
dec
sbb
adc
push
out
sti
test
ss
mov
clc
pop
cmpsl
pop
xchg
vcvtpd2dqx
test
imul
test
int3
mov
rclb
mov
jmp
daa
test
cmp
cmp
popf
push
or
scas
arpl
push
cmpsl
jb
mov
adc
aam
fbld
pop
shr
cwtl
add
imul
out
xlat
sbb
push
jbe
pop
add
and
out
jae
pop
mov
pusha
sub
rolb
fmuls
xchg
ja
test
sub
es
leave
pop
or
inc
xchg
or
cmpsb
cmp
xlat
insb
sub
orb
int3
adc
and
inc
jno
xor
mov
mov
add
idivb
mov
push
sub
andl
mov
mov
jmp
mov
add
mov
push
inc
fucom
das
pop
rclb
dec
pop
shll
pop
lds
adc
stos
push
mov
or
js
popf
inc
mov
nop
insl
arpl
fneni(8087
sub
inc
cmp
fcoms
jmp
jl
stc
fldenv
add
leave
insl
xor
in
lea
mov
lds
adc
jb
aam
outsl
inc
dec
ss
aam
in
loopne
mov
movsl
out
add
adc
pop
lods
push
adc
clc
lods
stos
cmp
gs
mov
push
xorl
scas
fsubrs
test
mov
mov
dec
daa
out
xchg
test
cmp
sbb
xor
or
or
cwtl
push
dec
and
cltd
test
push
dec
pop
push
push
fiadds
inc
dec
xchg
gs
add
dec
lods
inc
in
aas
rolb
add
out
mov
cwtl
sub
xchg
ja
jle
adc
fidivs
fdivrs
aaa
jbe
inc
in
mov
arpl
mov
insb
inc
mov
cmp
inc
add
fidivrs
jb
dec
int3
loop
call
xchg
call
outsl
push
cmp
add
cli
mov
pop
cli
jmp
daa
test
scas
or
fs
sub
enter
testb
and
leave
cmp
cwtl
clc
cmc
mov
add
mov
fiaddl
xchg
pop
xor
jnp
repz
dec
adc
dec
pop
cmp
mov
xlat
xchg
cmpsb
rcll
in
lock
cmc
mov
ljmp
dec
mov
adc
sub
mov
in
xchg
ja
push
divb
out
pop
push
sbb
pop
jmp
gs
movl
and
lahf
stos
fld
and
outsl
addr16
mov
cmpsb
jnp
leave
inc
mov
rorl
in
adc
sbb
sbb
mov
dec
xor
fwait
insl
sbb
std
mov
xchg
jge
sbb
loop
ss
in
mov
cmc
sbb
adc
xchg
fwait
scas
inc
data16
sbb
xor
jo
or
xor
add
loopne
jp
xor
cli
test
cltd
push
lret
hlt
loop
shrb
rcr
imull
mov
fdivs
stc
jo
stos
jmp
sbb
xor
fdivr
sbb
push
inc
sbb
push
int
adc
movsb
jns
leave
js
je
jp
call
arpl
mov
and
mov
out
add
and
adc
clc
les
mull
test
cmp
adc
push
xlat
adc
cmc
das
pop
sub
push
sbb
ljmpw
sbb
pop
shr
or
js
fildl
mov
mov
pop
dec
push
xchg
mov
jge
test
add
test
cmpsl
xchg
push
add
push
ss
dec
std
movsb
push
stc
ret
adc
fildl
push
and
shll
dec
mov
cmpb
pop
xchg
push
inc
inc
mov
loope
xor
std
aam
xchg
adc
xor
pop
xchg
add
aaa
add
or
into
sahf
mov
mov
test
dec
mov
cmpsl
inc
adc
pusha
leave
sub
clc
shrl
test
ds
or
loope
out
cwtl
and
mov
jo
mov
push
inc
adc
xchg
test
lods
fildll
jl
or
mov
imul
xchg
pushf
inc
mov
rclb
and
cltd
pop
aaa
jno
aad
inc
test
jo
ja
int3
iret
inc
rclb
mov
loop
inc
popl
stc
fnstcw
das
dec
mov
jnp
aaa
inc
inc
xor
xchg
or
or
pop
and
enter
adc
sti
sbb
jmp
mov
jnp
or
and
cmp
and
inc
jnp
repz
into
jbe
push
cmp
inc
mov
loop
inc
xchg
loope
jp
mov
jae
scas
push
or
sbb
push
sub
xchg
cld
sub
mov
pop
xorl
bswap
outsb
pushf
adc
popf
mov
push
mov
cmp
sbb
mov
jmp
sub
xchg
push
mov
cmpsl
jp
test
int
pop
inc
add
jl
int3
dec
fs
push
cltd
or
idivl
je
dec
xchg
movsl
jecxz
leave
lea
in
dec
iret
ss
stc
or
push
xchg
repnz
lcall
movsb
cmp
mov
not
or
int
inc
dec
call
inc
sbb
les
lret
jle
dec
push
push
ret
fimuls
scas
outsb
push
xor
xchg
insl
cmc
xor
xor
mov
sbb
mov
popl
mov
mov
cmp
xchg
shrb
pop
shlb
inc
or
cmp
scas
jp
stos
dec
repnz
push
aaa
fcmovnb
daa
cmpl
mov
lea
xor
mov
and
je
mov
pop
sahf
lods
into
xorb
dec
cmp
out
lcall
sbb
mov
jns
xor
fdivrl
mov
loope
div
mov
inc
add
je
add
adc
cmp
mov
flds
or
fsts
and
or
lret
sub
sahf
mov
cmc
out
pop
shrl
cmp
sub
inc
fs
or
cmp
mov
and
ds
cltd
mov
cmp
sub
bound
cmp
mulb
jno
dec
cld
sbb
imul
fdivr
mov
cmpb
gs
cmp
push
add
mov
push
stos
shr
dec
aam
xchg
jne
and
outsl
jnp
js
sbb
loope
mov
dec
sub
fmull
pusha
cmp
test
cwtl
sub
out
and
mov
mov
push
xor
pop
call
es
sub
inc
addr16
ss
fs
jle
inc
jnp
sbb
mov
adc
movsl
adc
jbe
fdivr
test
mov
push
lcall
xchg
jne
cpuid
mov
sar
daa
sti
adc
cmpsl
ret
test
loopne
mov
lcall
das
cltd
pop
faddl
popa
jl
jne
dec
xchg
daa
xchg
bound
leave
and
add
jp
loop
xchg
in
sub
cmp
repz
inc
sbb
push
imul
dec
roll
cmp
xor
dec
cli
sbb
in
cmp
fsubrs
adc
sbb
inc
mov
sbb
and
icebp
adc
aas
cmp
jo
les
sub
sbb
mov
dec
cmp
adc
je
push
sbb
mov
push
cmpsl
clc
repz
leave
jo
cmp
pop
outsl
adc
mov
cmpsl
fcmovb
test
lret
jo
dec
insl
mov
inc
insl
mulb
call
cmp
inc
push
mov
xchg
mov
adc
sbb
mov
mov
std
mov
in
enter
cli
icebp
dec
adc
shrb
jle
cmpsl
dec
ret
xchg
fcmovbe
scas
out
and
or
ret
cltd
and
adc
sahf
push
nop
aas
int3
xchg
scas
jno
in
xchg
roll
inc
roll
insb
stos
je
jne
jecxz
enter
adc
push
fdivrl
mov
lret
in
call
and
jl,pt
enter
mov
fsubrl
jo
adc
pop
push
jo
rcrb
je
xor
lods
cmp
mov
jbe
movsb
sti
pop
mov
cmp
test
imulb
scas
mov
lret
xor
loopne
jge
scas
scas
aaa
add
movl
mov
and
enter
pop
add
mov
jo
xchg
popa
mov
fnstenv
das
push
fidivrs
or
cmp
and
add
or
lret
aas
pop
scas
add
mov
loop
jae
xchg
jbe
aas
lret
sub
das
inc
int
rep
or
adc
adc
push
jne
inc
cmp
push
out
in
pop
or
cmp
dec
es
jnp
xchg
test
pop
jecxz
insb
into
lds
rorl
imul
dec
cld
mov
add
stos
or
pop
xor
add
xchg
sub
push
shrl
fyl2x
add
pop
jmp
adc
dec
ja
mov
xchg
loope
aas
psllw
fisttpl
rcll
cwtl
cmpsl
test
test
sti
push
push
and
sub
nop
push
ss
and
clc
pop
pop
pushf
xor
insl
adc
xor
jle
in
subl
jno
or
pushl
das
inc
lahf
adc
jg
mov
stos
test
aas
or
imul
mov
or
mov
pushf
pop
adc
jnp
bound
fwait
xor
repnz
lea
lods
sarb
add
sub
pop
dec
iret
iret
in
nop
push
es
pop
fst
icebp
fninit
sbb
adc
mov
xchg
fisubrs
test
outsl
push
in
inc
ss
hlt
dec
push
out
sbb
fst
push
mov
inc
add
les
out
inc
cmp
in
ljmp
rorb
jbe
pop
push
mov
dec
nop
pop
mov
mov
addl
enter
sbb
and
pop
out
std
lods
es
enter
pop
rcrb
fstpt
lods
sbb
lods
or
mov
clc
das
lods
lcall
jl
jecxz
add
popa
ucomiss
and
mov
aam
sub
aas
sahf
xor
mov
shll
ds
in
or
inc
aam
sti
mov
sub
jle
jns
inc
xchg
pop
pop
mov
inc
int3
dec
enter
and
into
fstpl
add
movsb
inc
dec
inc
or
lea
sti
adc
add
sbb
adc
dec
dec
lds
insl
inc
pop
inc
push
lds
xchg
rcll
data16
pop
inc
jp
push
xor
inc
notl
push
loope
ret
div
sbb
xlat
in
mov
add
lock
ja
loop
into
fistpll
mov
subb
imul
fimull
push
pop
pop
loopne
jae
add
xchg
jle
sub
lret
out
mov
lods
xchg
pop
xor
mov
xchg
add
int3
in
mov
jecxz
shlb
mov
pop
ds
jp
push
movsl
loop
into
push
jg
rorl
loopne
mov
cli
fidivrl
cmp
int
jne
stc
test
mov
aad
pop
mov
xlat
mov
mov
es
in
fmuls
outsl
jl
add
out
faddl
sahf
or
pop
arpl
pushf
insb
rcrb
incl
rcll
sbb
dec
mov
hlt
sbb
pop
inc
or
lret
test
dec
lds
imul
std
rclb
mov
mov
jle
dec
pop
xor
push
mov
mov
mull
lock
movsb
sbb
push
sti
int
rcrl
cmp
push
aaa
out
cmp
in
push
mov
xor
rcrl
mov
ja
xchg
mov
aas
arpl
out
jle
and
das
scas
int3
scas
loopne
pushf
adc
fs
in
sbb
adc
jg
rcr
pop
pop
mov
out
cmp
fnstenv
pusha
fidivrs
sub
inc
sbb
push
in
push
push
mov
jecxz
lahf
gs
pop
sub
popf
pop
shlb
dec
in
inc
lret
lock
pushf
aas
ret
inc
sub
mov
pop
sbbb
je
mov
pop
inc
cmpsb
xor
mov
jno
xor
fbld
mov
out
pop
daa
push
mov
adc
jle
or
xchg
pop
cmp
mov
inc
loopne
lcall
lahf
pop
push
arpl
stos
dec
ja
xchg
push
inc
jmp
or
call
lahf
sbb
cwtl
add
ds
mov
push
mov
mov
in
imul
adc
xchg
loop
int
xchg
andl
lods
loope
call
add
dec
xor
leave
stc
sbb
inc
inc
mov
int3
outsb
jg
in
sahf
mov
aad
sbb
in
daa
sbb
aas
inc
fwait
xchg
xor
jnp
imul
and
stos
sub
mov
adc
lods
loop
daa
sub
daa
sbb
in
sub
into
in
and
mov
inc
lods
lret
mov
sub
or
test
ds
adc
xchg
sub
mov
adc
sbb
jb
jmp
mov
sahf
or
xor
ret
xchg
sti
popf
and
aas
mov
add
mov
in
adc
cmp
push
out
sbb
rcrb
out
push
mov
mov
outsl
and
ja
jg
push
das
mov
dec
mov
mov
lret
dec
and
insb
dec
push
cmp
fnstenv
call
dec
inc
xchg
cmp
gs
and
cltd
and
enter
or
pop
or
imul
xor
push
das
cmp
mov
cmp
and
dec
xchg
adc
push
sti
jecxz
xor
addr16
dec
mov
and
loop
push
sub
pop
scas
or
fidivrl
andl
test
bound
mov
xchg
adc
push
sub
cwtl
pop
xchg
jo
xchg
fistl
jno
xchg
and
enter
dec
pop
sbb
pop
mov
clc
add
clc
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
add
sub
loope
jp
pop
jp
in
dec
pop
mov
pop
and
mov
inc
mov
test
ret
daa
sub
sub
mov
arpl
leave
loope
inc
inc
mov
in
dec
clc
cmpb
xchg
adc
lahf
les
and
shlb
dec
test
dec
xchg
jne
in
negl
push
jne
xlat
dec
int
push
jg
cmp
cmp
push
stos
repz
mov
pushf
pop
pop
sarl
loop
mov
dec
pop
push
xchg
repz
and
lods
in
in
orb
and
mov
sub
and
addr16
push
push
push
inc
scas
mov
testl
mov
fmull
jg
inc
pusha
enter
outsb
data16
and
test
dec
xor
adc
mov
lods
pop
pop
inc
fwait
xor
inc
mov
sub
lret
xor
mov
scas
and
ficompl
mov
mov
mov
shlw
mov
in
ret
or
out
or
and
push
xor
subl
inc
rcr
movsl
or
push
xchg
leave
push
xchg
insl
xor
xchg
jo
enter
mov
mov
shll
push
lea
mov
xlat
mov
loopne
stc
test
push
inc
mov
out
and
mov
mov
mov
mov
xor
pop
pushf
sbb
lea
push
push
pop
outsb
out
loope
xlat
push
dec
push
cli
adc
jbe
lock
xor
and
adc
xchg
into
push
popa
bound
pop
sub
add
ror
lcall
outsb
pop
mov
adc
fwait
and
cmp
push
adc
out
inc
les
test
inc
push
sbb
cli
adc
mov
xchg
sbb
add
cmc
sbb
mov
bound
or
loopne
sbb
mov
insb
jmp
pusha
stc
push
push
cmp
leave
dec
inc
je
or
mov
in
in
ret
xchg
bound
push
and
dec
mov
fists
add
xor
ret
mov
jp
xchg
scas
fs
cltd
mov
idivb
pop
xor
jns
mov
out
or
lods
mov
xor
mov
cmp
and
sub
lcall
loopne
jecxz
pmulhuw
jb
loopne
ljmp
adc
add
mov
in
dec
mov
sub
push
clc
xor
sbb
cli
adc
sub
pop
stos
cltd
or
fisubrl
lret
sbb
xchg
push
adc
sbb
mov
dec
mov
xchg
and
mov
and
subb
mov
aad
cmp
cmpsb
hlt
cli
fstl
push
mov
ljmp
imul
jge
lahf
mov
fisttpl
loope
andb
cmpsb
mov
cmp
imul
mov
fstl
pushf
stos
int
cs
mov
outsl
stos
dec
dec
mov
pop
outsl
stos
mov
mov
jg
repz
ljmp
lahf
lods
and
lret
in
adc
jne
pop
mov
cli
or
jnp
leave
sti
adc
jae
sbb
scas
stos
cwtl
aaa
cmp
stc
nop
adc
lods
icebp
fsts
xor
loope
fidivl
pushf
imul
rorb
push
xor
xor
pop
adc
xchg
jg
pop
popa
push
out
cltd
xchg
pusha
pop
test
sbb
bound
sbb
and
cltd
jecxz
mov
fdivl
or
mov
nop
xchg
int
jecxz
in
xchg
test
mov
stc
xor
push
or
fstpl
jo
fadd
or
pop
and
jecxz
test
pop
outsl
mov
mov
repnz
mov
adc
movsl
aad
mov
sbb
cmp
xor
add
sbb
xor
in
sbb
popa
xchg
jg
sbb
sub
test
mov
xor
in
and
outsl
mov
insl
cmc
pop
mov
mov
sub
fmul
outsl
js
rorb
mov
inc
pop
lret
ret
add
dec
push
lock
mov
and
stos
hlt
shlb
and
add
adc
scas
ret
or
aas
pop
jno
cli
inc
sbb
cmp
pop
mov
mov
cs
popa
cmp
aam
cwtl
cli
test
and
scas
adc
sbb
or
push
xchg
inc
incb
lcall
jge,pn
mov
icebp
mov
push
mov
test
enter
xor
rcrl
xchg
bound
or
xchg
fsubs
out
add
add
cmp
sti
hlt
push
push
dec
in
push
xchg
loope
dec
pop
inc
sbb
gs
jmp
ss
andl
pop
popf
loopne
ljmp
in
test
testb
outsl
in
mov
decb
aaa
dec
es
jne
fwait
dec
xor
push
push
add
fwait
xor
scas
push
cmp
lcall
in
repnz
xorl
xor
shrb
mov
xchg
dec
mov
rcll
test
addr16
arpl
dec
dec
sub
jp
push
lods
sahf
aaa
adc
mov
mov
cld
adc
xchg
push
int
add
arpl
jae
enter
clc
sarl
in
xchg
mov
cmp
out
ja
adc
imul
ficompl
lret
pop
adc
jp
mov
or
je
aas
pop
add
sub
dec
inc
idivl
movsl
cmovnp
and
and
out
testb
mov
mov
into
lcall
cmp
jae
mov
pop
pop
inc
sbb
leave
inc
jmp
push
inc
pop
das
ss
add
push
mov
cmp
adc
fstpl
mov
xchg
repnz
fistl
mov
inc
adc
push
outsl
sub
pop
test
call
mov
push
popf
jnp
xor
push
stc
ret
sub
push
mov
mov
leave
lods
push
add
cmp
out
jp
fs
mov
push
gs
inc
outsb
adc
jbe
mov
lcall
inc
mov
pop
sub
pop
fcomip
add
sti
lods
les
push
inc
sub
out
jbe
push
pop
addb
mov
jge
test
xchg
scas
mov
cmp
xchg
das
xor
or
or
mov
out
fwait
test
or
jl
push
pushf
mov
sbb
pop
pop
into
push
imul
jbe
popa
leave
dec
dec
fisttpll
divl
repnz
jge
mov
mov
jnp
iret
xor
mov
mov
bound
mov
ljmp
mov
roll
fsubp
out
sub
sbb
call
movsl
dec
fildl
add
ja
mov
dec
adc
sub
in
fnstenv
push
xlat
imul
jbe
jo
xchg
mov
dec
sub
add
and
dec
pop
sbb
adc
int
outsl
mov
or
jle
cli
or
jmp
jl
or
enter
pushf
xchg
cld
inc
xor
addb
jns
int
pop
imul
cli
mov
dec
xchg
xchg
mov
mov
adc
sub
movsb
cmpsb
je
sbb
shl
imul
or
xor
pop
push
popa
iret
inc
out
and
cmp
mov
add
pop
aam
jge
push
mov
sbb
ja
xor
or
cmp
mov
mov
fadds
lcall
rolb
mov
dec
cld
mov
push
push
jl
negb
sahf
enter
pop
es
addb
movsb
ljmp
xor
loop
adc
adc
mov
pushf
push
jb
mov
and
pop
fstpl
push
push
cmova
je
xchg
movsl
mov
cli
and
jae
cmp
and
xchg
add
mov
incl
movsb
mov
gs
fsubl
je
or
pusha
sbb
cs
nop
mov
loope
sarb
xor
scas
mov
xor
jns
cs
mov
test
push
xchg
lcall
mov
enter
hlt
xor
hlt
adc
je
push
pop
cmp
inc
rcl
push
arpl
jo
imul
pushaw
adc
sub
and
xor
adc
subb
js
jmp
cs
out
cmp
shll
inc
add
jmp
ret
jno
scas
cmp
in
inc
dec
push
and
mov
mov
xchg
dec
inc
dec
jne
aas
pop
test
push
push
mov
push
adc
jp
enter
daa
xchg
push
mov
cmp
pop
inc
add
jo
aad
xor
out
mov
cltd
outsl
cmpsl
jbe
addr16
push
dec
push
pop
push
stc
push
mov
or
sub
pop
xchg
orl
fnstcw
inc
adcl
inc
movsl
aaa
mov
popa
push
je
insl
push
jmp
stc
pop
xchg
and
mov
push
xorl
or
outsl
mov
pusha
outsb
outsl
xchg
dec
cmpsb
jmp
cli
xchg
jg
cltd
repz
sbb
cmpsb
xor
jnp
fldcw
out
jecxz
xchg
out
popa
aad
movsb
pop
mov
iret
fs
ret
pushf
lcall
sbb
mov
cmpsl
mov
dec
movzbl
iret
mov
jl
leave
fisttps
test
xor
sahf
lds
dec
and
outsl
test
cmp
fimuls
adc
outsb
push
dec
pop
and
or
mov
push
push
loope
repz
and
sub
mov
loope
iret
adc
roll
jbe
sbb
mov
cld
sub
movsb
sub
mov
jp
sbb
andb
inc
insl
fdivrs
adc
xor
rolb
mov
loopne
mov
cmp
push
and
shrb
shlb
lret
add
inc
dec
in
ljmp
mov
mov
and
pop
jne
lret
sub
out
cmp
jmp
loope
sbb
push
cmp
xor
jmp
in
sbb
xchg
mov
hlt
imul
cmp
sahf
inc
fucompp
repz
inc
inc
fsubr
negb
sbb
les
push
data16
jb
lea
jnp
xor
das
shrb
bound
xor
cmp
shlb
notl
pushf
or
shrb
loope
ljmp
addr16
mov
mov
pop
ljmp
insl
inc
out
adc
jae
addr16
cltd
cmpsb
cmp
je
pop
mov
testb
clc
inc
push
inc
insb
sub
jbe
movaps
ds
xor
sbb
adc
dec
dec
cmpb
xchg
mov
pop
mov
xchg
jb
std
add
push
inc
mov
jmp
fidivl
movsb
mov
lods
mov
testb
sub
repz
cmp
nop
push
movsl
je
insl
mov
jno
mov
in
add
pusha
cmc
je
cmp
xchg
pop
cmpsb
test
les
cmp
jl
scas
shrl
jmp
add
sbb
scas
cwtl
inc
xchg
mov
xchg
addr16
pop
inc
cmpl
stc
in
sub
fcoms
xchg
add
ja
es
xlat
inc
mov
push
dec
push
mov
adc
sar
pop
xor
int
push
sub
pop
fcoms
sbbb
jb
call
or
lahf
mov
imul
push
pop
cmc
and
hlt
addr16
add
push
rolb
inc
or
insl
nop
fistps
movsb
jns
hlt
pop
cmpsl
das
xor
sub
rclb
in
loope
mov
and
adc
dec
aad
andb
mov
and
fisubs
les
popa
pop
or
hlt
inc
lcall
push
and
push
fisubrs
or
inc
mov
add
push
xchg
mov
mov
movsl
lahf
add
xchg
mov
in
addl
mov
lock
sbb
popa
or
leave
pop
mov
shrb
fnsave
xchg
push
push
call
push
xchg
add
xor
ficomps
and
cmpsl
push
ror
movsb
popf
mov
inc
mov
xchg
jmp
jne
in
jp
add
inc
test
jae
jne
add
pop
or
sbb
out
jne
in
movsl
sbb
mov
adc
outsl
fs
add
lods
cli
add
movsb
stos
adc
dec
xchg
push
cwtl
push
jmp
cmp
sbb
xchg
add
stos
out
rclb
test
sub
mov
pusha
lcall
xchg
sbb
das
inc
mov
clc
mov
lods
mov
sbb
adc
mov
jg
cmp
aas
insb
addr16
mov
test
es
popa
jo
pop
sbb
mov
push
cmc
daa
pop
scas
clc
jg
sbbl
sahf
mov
push
mov
mov
cwtl
ret
jno
sbb
decl
mov
lods
or
sbb
leave
incl
popf
mov
pop
push
scas
add
sub
rcrl
je
cmp
out
xchg
pop
hlt
cmc
cwtl
jnp
xchg
mov
adc
stc
pop
cmovle
xor
enter
xchg
sti
pushf
mov
pop
rolb
dec
xchg
aam
repnz
or
pop
pushf
pop
dec
jne
scas
mov
movsl
dec
inc
pusha
shlb
inc
subl
in
lock
roll
gs
or
sbb
adc
mov
scas
push
loop
fisubl
adc
ljmp
bound
pop
stos
shrl
xchg
sub
loope
daa
mov
and
lret
lds
sub
jecxz
daa
jle
push
or
mov
xlat
mov
cmpsb
in
ret
aaa
loop
and
stos
aaa
xorl
and
and
js
inc
xlat
mov
push
xchg
jmp
add
movsb
sbb
sar
aad
out
pusha
push
mov
add
insb
jmp
xchg
insb
sbb
mov
add
jo
fdivr
adc
jbe
mov
ljmp
inc
add
mov
or
movsl
mov
xor
inc
adc
cwtl
mov
push
mov
lcall
loopne
pop
andl
ret
mov
pushf
das
mov
sbb
testl
test
test
dec
sbb
faddl
frstor
das
outsb
cmpsl
cmp
push
int3
mov
inc
stos
push
xor
xor
jmp
push
mov
lock
xlat
dec
int3
and
pop
add
mov
jae
fdivr
fisubl
loop
mov
xchg
xlat
sahf
inc
and
lret
and
and
gs
mov
ffree
ds
jns
inc
pushf
movsb
sub
jb
sub
adcb
pusha
inc
xor
fldl
outsl
mov
push
add
cmp
mov
cmpsl
push
aas
icebp
aad
pop
and
or
lods
jae
push
pop
mov
mov
cld
aas
enter
sbb
xchg
lods
dec
adc
dec
stos
push
add
in
jle
inc
xor
js
inc
and
cmp
je
xor
sbb
mov
pop
sbb
call
test
fimull
cs
test
hlt
out
int3
inc
shr
insl
inc
lahf
testl
mov
push
lahf
leave
push
xchg
mov
adc
out
hlt
dec
push
xchg
jns
arpl
testl
jle
push
popa
cmp
and
out
int3
cltd
fistpl
adc
enter
jl
loopne
and
mov
jns
sbb
leave
addr16
repz
movsb
ret
aas
jbe
ja
mov
pop
sarb
inc
pop
ds
es
mov
mov
pushf
aas
jo
xchg
pusha
xchg
mov
mov
outsb
jo
sub
inc
sbb
sbb
fldlg2
mov
test
inc
push
push
fnstenv
push
add
sbb
int
add
ja
ret
mov
out
and
rcrb
pop
xor
insl
dec
xor
jg
pop
nop
xchg
stos
pop
cmc
popf
inc
xchg
adc
jno
int3
enter
mov
fldenv
fldcw
mov
dec
push
pop
outsb
shll
lret
add
pop
in
add
xor
sarl
or
or
xchg
test
xchg
rcrb
scas
imul
lock
mov
cmpsl
xchg
es
fbstp
push
mov
push
pop
dec
mov
jno
jecxz
sub
sbb
sarb
ret
inc
push
adc
mov
fxch
inc
jne
jmp
cmp
test
je
out
push
push
xor
cmpl
cwtl
sbb
sbb
mov
xchg
iret
data16
add
pushf
dec
and
stos
cld
shrl
inc
ds
xchg
incl
lods
aad
lods
mov
movsb
xchg
mov
lods
push
sbb
popa
inc
ret
xor
ljmp
movsb
aas
scas
negl
in
jne
sti
andb
mov
xchg
insl
ret
pop
out
dec
pop
add
call
leave
mov
arpl
negl
xchg
in
lds
pushf
dec
mov
addr16
rcl
sub
out
rcll
out
movsl
lods
iret
jl
mov
mov
std
fmull
iret
mov
jnp
lahf
fsubl
imul
dec
xchg
loopne
and
and
and
mov
leave
xlat
add
push
push
outsb
xchg
cmp
push
mov
in
pusha
das
dec
or
push
in
loop
dec
mov
sti
or
xor
lcall
ljmp
icebp
aas
dec
mov
jno
inc
inc
cmp
fwait
cld
pop
mov
and
cmp
add
fbld
repnz
dec
and
cltd
sahf
mov
adc
jo
pop
ljmp
ljmp
mov
cli
lods
dec
sub
inc
or
mov
add
hlt
mov
jae
roll
mov
and
push
or
sub
ret
add
cmp
iret
cltd
xchg
lret
mov
sahf
inc
cmp
stc
out
jl
sub
aas
xor
adc
int3
das
mov
dec
add
imul
mov
pop
xor
in
pop
xor
ss
jb
iret
shlb
mov
push
dec
inc
imul
inc
mov
add
mov
jb
insl
ja
pop
jecxz
cmp
xor
ja
sub
les
in
sub
gs
das
in
std
add
leave
add
sbb
lds
in
add
push
in
push
jle
rcr
popa
mov
jmp
scas
daa
mov
mull
dec
jns
xor
jmp
mov
xchg
and
lock
mov
jecxz
push
mov
pop
ret
cmp
pop
loope
subl
mov
inc
fstpl
cli
pop
sarl
rolb
outsl
stc
jmp
dec
rorl
mov
push
je
out
movsl
dec
mov
outsb
arpl
sub
sbb
rolb
pusha
mov
mov
lret
icebp
push
mov
sub
lret
sahf
mov
cmp
mov
add
clc
lret
idivl
icebp
sbb
es
dec
out
inc
inc
shll
ss
jno
ret
clc
rcr
sarb
fimuls
cmc
mov
cmp
xorb
daa
fmulp
in
add
sub
pop
jl
xchg
mov
mov
lods
cld
je
ret
sub
rcl
fucomp
js
jns
mov
gs
add
lea
aam
outsb
andb
and
pop
pop
ss
adcb
jae
add
jo
mov
dec
fcoms
xchg
adc
cmp
out
arpl
sub
pop
clc
adc
out
out
test
xchg
push
insl
or
cld
jge
pusha
test
rcrb
xchg
int3
xchg
push
pusha
test
adc
adc
or
mov
shll
push
push
mov
pop
sub
clc
sub
mov
mov
aas
cltd
sbb
pop
leave
es
fisubl
aad
xor
fcmovnu
adc
out
lret
enter
stos
iret
xor
cltd
xchg
push
add
int
xor
mov
test
adc
addr16
call
sub
add
movsl
mov
or
vpacksswb
sti
mov
add
pushf
mov
cmp
outsb
mov
or
ds
jns
lea
push
movsb
mov
shl
int
inc
or
sub
mov
inc
lcall
jl
and
bound
repnz
ss
xchg
pop
cmp
sar
adc
aas
mov
push
cmpsl
icebp
dec
cs
adc
insb
pop
add
cli
scas
mov
loope
nop
push
mov
push
xchg
data16
enter
xchg
loope
xor
pop
cmpsb
cld
mov
sub
mov
pop
mov
mov
test
pop
inc
cmpl
inc
or
test
push
jb
fdivrs
inc
into
dec
lods
push
cmp
push
dec
dec
lcall
das
test
cltd
xchg
adc
mov
gs
inc
xchg
sub
sbb
cmpsl
xlat
inc
lea
mov
push
mov
jecxz
fwait
sub
jns
mov
xorb
or
daa
jle
iret
mov
jg
or
rcll
adc
xchg
pop
sbb
stc
sub
ret
xchg
lds
stos
fimuls
sbb
xor
jecxz
repnz
inc
push
sbb
cmpsb
mov
adc
jg
loop
insb
mov
push
imul
call
popf
in
adc
add
out
sahf
add
jns
dec
pop
pop
mov
xor
mov
push
push
pushf
insl
push
adc
dec
adc
sahf
and
add
aaa
aam
ret
xor
xchg
add
shll
add
add
sbb
sahf
jns
pop
std
lds
mov
inc
pushf
lret
cltd
stos
add
cwtl
adc
mov
xchg
or
lock
sub
out
mov
sbb
cmp
clc
lahf
sbb
add
and
addr16
inc
lds
jmp
mov
xor
roll
add
cld
push
mov
cltd
sbb
sarl
imul
pop
and
mov
gs
sbb
scas
inc
fs
mov
jge
nop
ljmp
add
std
int
gs
dec
pop
in
inc
dec
sbb
sbb
mov
das
push
ror
in
sbb
inc
jge
adc
xor
negl
push
or
loop
mov
lea
mov
mov
pushf
jnp
xor
push
push
nop
and
popf
xor
rcl
xchg
ljmp
cltd
mov
and
xor
add
mov
inc
ret
iret
mov
jnp
push
shrl
fstpl
mov
fs
scas
stos
icebp
cmp
outsl
add
pop
cmp
cmc
xorl
rcrl
sarl
std
ss
jge
xchg
adc
dec
inc
push
add
push
cmpsb
sbb
or
scas
lret
jl
add
pushl
mov
cmpl
ret
xchg
push
mov
xchg
shrb
xchg
dec
movsl
in
ret
dec
insb
and
ficoms
loop
jge
and
and
mov
pushf
mov
gs
js
mov
jmp
cli
adcl
fwait
xor
jbe
bound
and
icebp
xchg
sub
ljmp
pop
push
testl
popf
xchg
xchg
addl
addr16
adc
xor
adc
mov
sbb
xor
negl
in
negb
xchg
xor
dec
cli
pop
movaps
inc
mov
test
and
jle
ja
or
mov
fistpl
sbb
fwait
and
or
mov
cmp
xor
jge
mov
insl
out
cmp
pusha
jmp
out
push
push
inc
in
fsincos
in
xor
push
cmp
cs
hlt
push
ret
or
lret
xor
sbb
jge
dec
data16
jns
or
xor
cmp
aad
jmp
imul
inc
adc
adc
out
mov
sub
inc
xor
test
push
outsb
jmp
jmp
dec
fs
push
mov
inc
arpl
sbb
das
popa
push
adc
xor
mov
and
xor
push
jmp
inc
jecxz
mov
add
scas
stos
popa
sub
mov
rclb
in
pop
setne
or
cltd
sbb
adc
xor
icebp
je
and
sahf
sar
mov
clc
into
jnp
cmc
mov
shlb
pop
adc
sbbl
push
stos
cmpsb
adc
loope
and
xchg
cmp
adc
xor
es
out
mov
les
rcrl
sub
mov
fnstsw
sub
jnp
mov
hlt
es
push
lds
push
mov
cmp
sub
add
jns
adc
cs
ss
cmc
in
jno
je
mov
adc
mov
xchg
cmp
loopne
mov
test
icebp
stos
mov
cld
mov
scas
push
sti
sbb
sub
fwait
inc
dec
mov
bound
cmp
add
mov
cmpsl
mov
outsb
fsubrs
ds
clc
push
ljmp
jecxz
mov
iret
mov
and
pop
mov
dec
sub
cld
mov
outsb
add
push
lret
mov
xchg
ret
xor
xor
and
or
es
mov
in
das
push
scas
or
lea
mov
push
lea
arpl
and
jno
push
iret
rclb
je
cwtl
lahf
dec
fstpt
out
out
ljmp
add
hlt
rorb
aas
mov
addr16
adc
dec
or
xchg
mov
and
insl
in
test
sbb
jle
xchg
jbe
data16
mov
orps
lods
jl
into
add
pop
mov
xchg
push
scas
pop
fsubs
mov
xchg
fwait
xchg
mov
inc
inc
lcall
mov
mov
std
lds
xor
push
or
mov
sbb
sub
ficomps
push
cld
mov
or
adc
movsl
lret
scas
inc
popa
add
mov
enter
jae
out
dec
pop
shl
sub
mov
shufps
insl
lret
clc
iret
push
or
shrl
mov
repz
fldenv
std
lahf
imul
rclb
mov
ljmp
mov
rcrl
jge,pt
inc
and
mov
add
out
mov
inc
stos
rcrl
ds
test
sbb
adc
out
shlb
nop
jecxz
push
pop
lret
mov
lea
inc
shr
popf
push
inc
lock
nop
iret
mov
lods
add
mov
mov
aaa
and
jb
sbb
fildll
iret
xchg
aaa
sub
ds
dec
mov
push
or
fsubl
les
lock
and
and
lcall
adcb
adc
xor
ja
dec
das
pushl
adc
push
dec
jg
out
sbb
dec
add
adc
inc
pop
mov
mov
stos
daa
imul
inc
xchg
sahf
mov
mov
jns
and
pop
popa
lods
xor
aam
adc
ja
mov
sub
mov
fst
jg
mov
call
push
or
leave
loope
ss
jmp
icebp
dec
jo
prefetch
or
shrb
adc
lret
and
mov
cmpsl
dec
dec
ljmp
dec
into
adc
adc
dec
push
xchg
xchg
loopne
movsl
roll
pop
in
xchg
adc
fucomp
xchg
mov
mov
inc
sub
imul
inc
jp
pop
int3
sub
mov
pushf
inc
test
sahf
sub
dec
mov
ret
mov
mov
into
and
xor
cmc
pop
fimuls
arpl
ljmp
ja
pop
ja
jno,pt
pop
cmp
adcl
movb
shl
xor
push
push
mov
and
push
xchg
inc
orl
push
inc
jecxz
mov
add
stos
fcompl
and
repz
mov
pop
fisubl
sbb
add
mov
adc
fcoml
or
adc
imul
sub
fscale
mov
mov
outsb
adc
into
xchg
in
xor
push
jmp
cmp
fidivrl
push
pop
sbb
inc
mov
movsb
fs
cmpsl
movsl
notb
and
or
sub
mov
inc
mov
xchg
int
mov
mov
sub
fadd
lret
or
les
mov
stos
sbb
push
mov
in
stos
jecxz
gs
shrb
xchg
adc
inc
xchg
rorb
mov
test
pop
inc
xchg
xchg
pop
jmp
push
gs
int3
stc
or
test
jo
lods
fcomps
in
mov
fs
shlb
shll
inc
ljmp
cld
adc
nop
lahf
jl
ljmp
jno
adc
ficomps
pop
aaa
ja
dec
push
fdivrl
sbb
lods
hlt
add
imull
xor
lahf
sbb
jnp
mov
lea
mov
movsl
jno
jo
fisttpl
fsub
das
inc
push
and
cmp
sbb
scas
jns
test
dec
out
fimull
sarl
sbb
inc
and
mov
mov
out
pusha
xchg
addl
push
icebp
rol
aad
inc
push
sti
fnstenv
ja
dec
xor
push
jge
push
cmp
lret
movb
xlat
addr16
ret
jle
dec
mov
in
and
lea
shlb
lret
cld
inc
xchg
jae
pop
outsb
or
dec
imul
inc
fcompl
lds
das
lods
xchg
and
push
sbb
mov
jecxz
and
shlb
stos
inc
sub
pop
xchg
push
pop
imul
xchg
fnsave
je
mov
adc
fistl
jne
not
cwtl
jp
lods
pop
loop
push
sbb
jnp
das
fdivrl
decl
add
jb
adc
pop
jge
sbb
fs
jle
xchg
mov
mov
inc
dec
and
mov
mov
stc
xor
xor
enter
push
pop
ljmp
lock
cmp
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
call
jge
or
jp
movsl
xchg
sub
popa
xchg
gs
jmp
xchg
cmpsb
push
cmp
or
shlb
and
ss
and
sbb
xor
pop
add
xor
inc
fs
stc
daa
ljmp
mov
mov
shll
mov
inc
js
mov
mov
not
pavgb
jne
inc
mov
pop
dec
sbb
lods
stc
mov
jg
loope
bound
xchg
sub
scas
pop
or
aas
jbe
mov
daa
mov
fs
stos
add
pop
xchg
mov
cmp
push
sbb
idivb
or
test
pop
adc
sub
pop
push
mov
pop
add
dec
lock
cltd
mov
in
arpl
addr16
mov
sbb
jno
cli
loop
xor
adc
dec
sbb
adc
out
xor
mov
stc
push
jnp
sbb
cmp
movsb
iret
cli
arpl
ss
pop
insb
ret
call
dec
das
out
aaa
mov
xchg
lcall
addr16
mov
iret
fwait
out
ficomps
add
aam
cld
mov
pop
jge
movsl
inc
jb
jecxz
cmp
sbb
jbe
push
stc
lea
and
push
fs
or
ja
add
sbb
sub
icebp
mov
out
add
pop
push
stos
arpl
pop
in
fcomi
sbb
sub
xchg
pusha
and
outsb
sbb
hlt
mov
sub
mov
ret
and
pop
dec
mov
dec
sub
sahf
dec
adc
adc
repz
mov
ret
xchg
and
cwtl
jae
aam
jge
cmc
xor
inc
icebp
push
sarb
inc
jg
fdiv
popa
cld
icebp
fistl
inc
or
mov
dec
mov
mov
cmp
cs
sbb
mov
mov
jge
xor
xchg
cmpsl
mov
jge
sub
mov
cltd
push
fwait
shl
test
adc
pop
mov
xor
adc
push
or
xor
push
stos
int
or
mov
mulb
jecxz
pop
add
lods
into
lahf
or
add
aas
xchg
pop
cmpsb
add
pop
add
loopne
cmc
jb
cmpsl
jbe
xor
cmpsb
cmpsl
dec
insl
repz
mov
int
sbb
scas
stos
xor
push
adc
mov
dec
xchg
sub
enter
or
mov
inc
out
sbb
add
mov
add
int3
fimuls
les
xlat
xor
ljmp
inc
jb
adc
jge
repz
mov
push
mov
shld
js
sub
push
movsl
lret
in
cmp
loop
inc
sub
push
cmc
mov
mov
pop
outsb
cmp
das
test
icebp
cs
dec
les
sarb
sbb
clc
mov
or
pop
inc
clc
and
lret
iret
jnp
sub
push
fsts
push
icebp
xor
filds
dec
fnstcw
wbinvd
lahf
cltd
scas
sub
jecxz
mov
push
enter
cmp
jl
fnstsw
mov
adc
adc
into
mov
add
lock
insb
sub
or
jl
xchg
loope
mov
loope
pop
add
push
out
push
fisubl
imul
scas
repnz
lods
jbe
pop
lods
adc
xchg
pop
imul
insl
push
push
es
add
inc
jl
push
mov
and
call
js
mov
imul
and
fbstp
mov
jb
mov
sbb
gs
arpl
andl
or
push
aad
ja
or
push
mov
add
shrb
pushf
stos
lods
sub
xchg
push
movaps
add
aad
icebp
and
push
adc
mov
push
xchg
pusha
push
mov
dec
jnp
int
test
mov
sti
sarb
lock
aad
push
dec
jg
or
sbb
in
add
mov
sti
pop
sub
mov
mov
repz
sub
jb,pt
ds
das
mov
or
ja
mov
test
pop
stc
aad
inc
les
stos
lea
jg
and
sbb
es
rolb
loop
outsb
lret
cld
pop
into
xor
pop
mov
int3
scas
jmp
in
hlt
mov
fidivrl
ljmp
mov
lods
subl
dec
pop
sub
gs
sub
scas
jnp
nop
mov
pop
jg
and
adc
cld
xchg
push
push
shrl
inc
pop
cwtl
sbb
push
sbb
mov
fisubrs
cmpsb
je
iret
and
shrb
push
fstl
xchg
in
dec
sbb
imul
sbbb
icebp
sbb
leave
lea
orb
scas
jg
leave
incb
shl
push
insb
add
rol
push
xchg
jle
repz
xchg
repz
push
inc
xchg
adc
jmp
daa
add
rep
lock
xorb
xor
jb
sub
xchg
cmp
enter
imull
jb
push
les
lea
jns
rcll
push
mov
dec
lret
sahf
in
adc
idivb
push
mov
sub
mov
add
hlt
sarb
loopne
push
or
mov
jmp
leave
mov
push
or
lods
adc
std
mov
adc
fildll
sbb
sarb
jne
mov
outsl
and
jbe
out
jo
fs
loop
cltd
cmp
pushf
xchg
ljmp
popf
nop
ret
out
sbb
aam
loope
test
cmpsl
push
or
rorb
mov
mov
push
and
popf
or
xor
fidivrs
jno
mov
test
ret
cmpsb
pop
cmp
idivl
out
fistpll
jg
scas
popf
lods
mov
pop
inc
dec
cltd
test
or
sbb
dec
push
cmp
pop
in
cmp
bound
rcll
pop
jae
fidivrs
mov
pushf
dec
and
lock
aaa
movsb
push
ss
les
nop
roll
and
jbe
mov
bound
loope
or
and
movsl
lcall
dec
clc
mov
push
sti
pop
pop
in
stos
dec
pusha
or
ret
mov
insb
iret
pop
jns
push
ret
imull
cmc
subl
adc
enter
jecxz
scas
or
jno
into
add
add
inc
dec
push
lods
jno
or
jne
mov
mov
adc
jne
cs
dec
or
gs
sub
pop
pop
orb
jl
cmpsl
popf
jnp
xchg
stc
xlat
jecxz
ljmp
lods
arpl
fcmovbe
in
sbbl
test
sar
lock
mov
roll
xor
ss
stos
mov
dec
in
enter
int
fstl
xor
adc
fwait
mov
cmpsl
int3
fwait
iret
scas
std
mov
movsb
test
jmp
leave
ficoms
stc
popf
dec
out
lods
inc
lea
push
dec
scas
mov
out
mov
cmpsb
jmp
loope
test
lcall
out
popf
movsl
xor
subb
call
shlb
add
xor
dec
aad
jecxz
pop
leave
lds
loopne
xor
int
aad
and
lcall
cltd
pusha
std
lds
mov
jbe
fsubrl
into
pop
push
push
in
pop
mov
mov
lods
adc
inc
dec
mov
jp
adc
aaa
call
mov
push
lahf
fistpl
clc
inc
addb
dec
mov
push
out
inc
scas
nop
push
and
mov
inc
sub
out
movsl
addl
or
arpl
or
test
jp
xchg
imul
scas
xor
mov
pop
jne
and
cs
inc
or
xchg
add
jmp
cmp
mov
fisubl
pushf
addr16
or
inc
nop
mov
lock
cmp
dec
xor
jnp
xor
idiv
in
in
jge
icebp
adc
dec
insl
or
mov
pusha
mov
jnp
adc
cmpsl
aaa
pop
dec
scas
lahf
xor
rcrb
jb
cmpsl
mov
dec
xor
fstp
cwtl
dec
lds
fistl
out
push
sub
hlt
mov
cmp
pop
hlt
js
repnz
xor
imul
xchg
pop
pop
cmp
push
adc
mov
pop
in
mov
adc
lahf
and
movsl
dec
lods
pop
enter
fisubrl
sbb
adc
into
push
cs
pop
xchg
inc
loope
or
and
pop
clc
xchg
adc
dec
add
sub
inc
mov
or
into
popa
mov
xchg
adc
lret
imul
mov
rorb
loope
pop
pop
lods
insb
leave
repnz
dec
push
dec
shll
fwait
mov
add
mov
int
call
sti
stos
xlat
jo
out
xchg
or
or
and
mov
insb
sahf
jp
insl
cmp
xchg
fists
fcmovnbe
fnstsw
rolb
or
out
ljmp
lret
scas
jb
push
dec
int
sti
cli
mov
cmc
mov
inc
je
mov
inc
popa
sarl
lcall
aas
inc
mov
pop
xor
in
push
mov
int
jge
cmp
xchg
das
mov
xor
sub
jnp
fistpll
lahf
add
or
popf
xor
hlt
out
sbb
dec
call
fcmovnb
mov
xchg
fildl
push
aas
and
sub
dec
xor
loopne
mov
jecxz
cmpsl
mov
lcall
xchg
xchg
xor
pop
dec
mov
pop
stos
push
stc
leave
mov
and
pushf
mov
sub
pop
sbb
jge
sti
iret
adc
mov
and
aad
ret
lds
js
sbb
dec
add
mov
push
inc
fnsave
inc
mov
mov
adc
push
aad
mov
lock
leave
xchg
loopne
dec
push
daa
loop
add
movsb
mov
js
and
popa
cs
ret
pop
mov
mov
pop
fs
sub
and
sbb
in
jle
add
pop
sbb
jns
sub
ret
pusha
out
test
push
mov
call
push
ljmp
and
mov
push
cli
sub
ljmp
in
pop
sti
jbe
mov
inc
cwtl
jno
push
xlat
cmpsb
xor
outsb
adc
stos
sub
repnz
call
bound
pop
and
fisttpll
jge
pop
addr16
push
mov
shrl
sub
and
repz
ja
push
jp
movsb
and
mov
lds
pushf
out
sbb
mov
mov
out
popa
dec
sbbb
daa
clc
jb
imul
inc
popa
push
or
cli
and
cli
mov
xchg
add
shlb
add
mov
adc
cltd
adc
lock
xor
aas
pop
fsubrl
gs
lret
and
push
inc
stos
cmpl
jp
cltd
xorl
cltd
into
int
and
lock
ljmp
mov
out
mov
es
inc
decl
loopne
in
jne
mov
xlat
daa
test
nop
sub
fstps
mov
insl
loop
and
lods
jl
xchg
and
imul
push
xchg
ljmp
lret
mov
popf
pop
jb
das
aas
ljmp
dec
or
icebp
or
xor
jbe
enter
shlb
repnz
mov
jno
bound
pop
push
xchg
cmp
hlt
leave
dec
jmp
and
adc
mov
addb
dec
sub
push
out
rcrl
inc
xchg
add
insb
inc
sub
add
cmc
pop
sub
and
inc
mov
out
sbb
inc
clc
idiv
push
out
mov
lcall
ret
stos
fnstcw
adc
mov
mov
xor
scas
mov
mov
icebp
ljmp
pop
jnp
jle
jecxz
bound
adc
cmovl
movsl
ret
lods
roll
aas
add
and
sahf
rclb
push
lahf
shl
adc
ljmp
imul
out
shlb
mov
pop
cmp
cmp
cwtl
or
xlat
mull
push
aas
sahf
cmp
lahf
int3
cmpb
or
jno
add
jo
jecxz
jno
sti
rol
sub
mov
mov
lods
dec
fsts
fdivr
or
xlat
mov
int
rcll
mov
jno
push
ds
outsl
insl
lret
jle
imul
enter
sbb
pop
fsubrl
stos
and
pop
jbe
pop
push
enter
mov
jg
aam
push
sti
aam
out
xchg
fcompl
mov
mov
mov
jb
adc
jle
xchg
jns
cmp
pcmpeqd
pop
mov
or
in
sahf
pop
hlt
pop
clc
add
sbb
mov
cli
cwtl
cmp
outsb
lahf
in
mov
adc
int
pop
out
pop
lods
push
ds
mov
lods
mov
insb
xor
lds
cld
into
pop
add
push
pop
xchg
or
and
lods
sub
cwtl
mov
movsb
pop
addr16
dec
add
dec
shr
outsb
negl
inc
lds
mov
scas
push
inc
xor
daa
negb
dec
subb
sets
pop
pop
add
push
test
pushf
mov
lea
rcll
inc
ds
xchg
mov
js
push
jmp
xor
fcmovnb
sub
push
jmp
push
sub
stos
fcomip
mov
jmp
mov
jnp
repnz
cmp
js
mov
xor
cmp
call
mov
outsb
daa
rcrl
inc
jo
add
fisubrs
mov
xchg
lods
idivl
nop
xchg
sbb
aas
mov
jo
cld
aad
xchg
popf
add
push
pop
pop
addl
push
or
sub
jmp
mov
movsb
iret
xchg
psrlq
or
push
int
inc
cli
mov
dec
xchg
or
mov
jmp
repnz
scas
into
mov
mov
cmp
int3
jae
mov
inc
je
daa
adc
ss
insl
jnp
mov
push
xchg
and
add
xchg
sub
bound
push
adc
sub
stos
outsl
aam
cmp
ss
vpsubw
stos
mov
or
dec
mov
ret
arpl
or
lods
scas
sarb
insl
leave
mov
dec
pop
aam
outsb
inc
cmp
push
inc
xchg
push
pop
sub
pop
push
outsl
mov
faddl
pop
clc
pop
xchg
inc
aas
cmpsb
cli
mov
mov
adc
jns
inc
clc
lcall
setg
cwtl
scas
movlps
outsb
pushl
inc
daa
in
testl
mov
xor
ja
stos
jle
out
fcomps
fmuls
jb
arpl
ss
subl
sbb
add
pop
and
test
aad
xor
or
cmp
pop
pop
pop
xor
sti
and
test
xchg
and
scas
mov
test
add
loopne
inc
mov
cmp
push
loop
scas
cmp
mov
sub
jne
push
ss
pop
sbb
mov
or
jmp
in
fbstp
std
cmp
notl
inc
and
or
cmp
adc
icebp
das
sub
leave
sub
push
mov
dec
inc
jmp
popa
mov
clc
test
cmp
shll
mov
dec
jb
stos
xchg
pop
mov
lahf
pop
dec
in
adc
push
divl
or
sbb
cld
rorb
cld
out
ljmp
scas
push
sub
cmp
cmp
mov
jno
cmp
xor
pop
in
mov
insb
sbb
loopne
add
sub
leave
psubb
pop
xor
arpl
sbb
es
pusha
jle
inc
mov
push
movsb
ficomps
inc
addr16
inc
jge
mov
and
xchg
lret
iret
sub
cli
test
icebp
inc
es
sti
lds
xor
ljmp
lods
popa
jnp
adc
xor
stos
xorl
lret
js
mov
lret
repnz
cli
rorl
jb
stos
cltd
push
mov
sbb
pop
mov
sbb
jae
mov
and
jb
pop
in
pop
xor
rolb
nop
ds
jg
cmc
ljmp
xchg
ljmp
mov
fs
cmp
out
cmova
mov
xchg
mov
mov
fstpl
sub
and
sahf
jo
xchg
jg
mov
dec
ds
jge
inc
xor
rcrb
sbb
jle
shlb
les
js
inc
stc
add
or
dec
lds
dec
faddl
push
nop
cmp
les
ljmp
or
pop
popa
sub
inc
mov
mov
push
das
jg
inc
outsl
add
shrb
outsl
sti
mov
and
in
out
fistpl
fldenv
scas
jmp
stos
sbb
xchg
and
data16
pop
rcrb
cmc
aaa
mov
sbb
adc
sbb
cmp
lahf
rcrl
xchg
xor
leave
ja
cmpsb
in
movsb
inc
stos
mul
repnz
xlat
push
mov
push
or
xchg
jnp
mov
movlps
sbb
in
pop
and
hlt
into
sahf
ss
cld
push
xor
mov
xchg
add
xchg
xchg
shll
xchg
add
inc
pop
stos
adc
cmpsl
imul
push
jns
mov
addl
mov
pop
push
sti
imul
or
out
in
sbb
xor
add
imul
mov
adc
push
int
out
xchg
in
adcl
fbstp
mov
jg
mov
cmpsl
cmp
unpcklps
inc
fwait
aam
dec
in
mov
add
xchg
inc
insl
jl
jle
jmp
mov
mov
push
sarb
jno
aaa
cmp
and
push
xor
call
sti
daa
pop
lock
jmp
mov
rorl
dec
and
rclb
gs
out
or
cmc
push
and
inc
jne
add
mov
sahf
xlat
int
or
dec
or
ffree
sub
sub
js
popf
fsubrs
cli
test
cmp
adcb
cmp
in
fcoml
or
pop
pop
cld
dec
outsl
mov
ja,pn
xor
push
int
mov
push
out
pop
imul
xor
movsb
dec
xor
cmpsb
loopne
push
scas
adc
mov
scas
jb
lods
nop
sbb
mov
lea
pop
add
lret
xchg
adc
fcom
or
into
inc
out
mov
in
lret
js
call
stos
sbb
xor
push
icebp
cmp
cmc
jo
mov
push
or
sub
out
fnstcw
mov
push
dec
xor
xlat
and
xchg
push
mov
push
cltd
bound
add
jns
xor
jo
jp
adc
and
xchg
jl
xor
mov
mov
mov
fmuls
in
jg
jne
les
loop
rcpps
cwtl
int
sbb
ljmp
fst
mov
jmp
fcoml
mov
aam
jo
lea
mov
mov
pop
outsb
mov
lea
test
jb
and
push
shll
inc
jae
xchg
icebp
xor
lcall
into
xlat
test
xor
jecxz
mov
addr16
mov
cld
xchg
sbbl
or
cs
adc
sub
adc
jp
pop
push
je
pop
mov
fs
mov
sub
imul
add
xor
mov
adc
or
js
js
lcall
xchg
cmp
iret
and
out
pop
js
ret
adc
stc
or
lcall
in
emms
hlt
outsb
ss
int
in
roll
repnz
clc
popa
push
in
iret
lods
push
shll
imul
mov
negl
pushf
add
stos
cmp
xchg
flds
pusha
and
mov
insl
ja
cmpsb
push
pop
hlt
adc
scas
adc
out
push
arpl
xchg
inc
and
cld
xchg
jle
lret
int3
arpl
js
push
inc
dec
jmp
fs
dec
out
sbb
ja
lds
cmpsl
jmp
insb
sbb
sar
sarl
imul
daa
sub
call
push
aam
loop
aas
scas
xor
notl
jae
add
and
mov
sub
aaa
nop
sti
or
in
mov
mov
xor
xorl
sub
mov
leave
pop
jbe
das
out
or
mov
sbb
std
stos
push
insb
lahf
mull
push
cmp
xorl
inc
mov
mov
push
ljmp
loop
mov
add
mov
jmp
jp
xchg
mov
mov
mov
xchg
push
mov
imul
clc
orb
ret
mov
fwait
dec
jo
mov
ret
mov
cwtl
sbbl
dec
ret
loopne
movsl
and
insb
sahf
es
subb
js
lcall
nop
or
shr
mov
mov
adc
std
push
cmp
call
mulb
mov
mov
daa
clc
les
jno
into
lock
jne
cmp
ret
cmpb
subl
mov
adc
popa
sub
sub
add
rcl
mov
mov
and
aaa
hlt
cmp
incb
insl
insb
jbe
cmp
sub
pop
loope
push
jno
in
mov
stos
iret
std
jmp
cmpsl
pusha
adc
dec
sub
jo
das
xlat
jle
pop
xchg
aad
fs
inc
jno
scas
lods
xor
into
or
xchg
fwait
into
dec
push
add
sahf
shll
sbb
xchg
pop
jbe,pn
movntq
jecxz
mov
int3
cmpb
xchg
adc
in
cmp
push
or
pusha
cmpl
jmp
pop
bound
hlt
dec
and
insl
jge
inc
ret
jb
aam
cmp
mov
lds
dec
enter
sub
imul
xor
mov
ret
and
xor
call
xchg
pop
pop
mov
mov
rclb
gs
push
data16
out
in
pop
test
inc
and
or
sti
cmp
cs
mov
jmp
mov
out
jnp
mov
lcall
decl
addl
iret
mov
arpl
xlat
repnz
mov
iret
std
shrb
xor
lahf
dec
and
repz
or
scas
sti
jns
lret
push
dec
and
add
cwtl
fs
pop
and
sarl
mov
rcr
stos
lods
stos
les
xor
les
mov
adc
leave
or
stc
and
xor
or
ss
fsubl
pop
cltd
jns
inc
push
xchg
mov
push
inc
sub
xor
xlat
into
in
lock
or
and
add
mov
push
xchg
mov
scas
stos
xor
adc
pop
sbb
mov
cltd
add
fbstp
push
jecxz
mov
fidivrl
inc
push
rcrb
jnp
and
div
pop
cwtl
sbb
pop
jecxz
stos
add
in
xor
xchg
inc
add
jle
xchg
jb
and
std
and
fldenv
popa
jge
das
cmp
pop
sub
out
or
fwait
and
rcrl
push
xlat
mov
sbb
and
sbb
and
xchg
xor
mov
xor
outsl
dec
ss
mov
cltd
test
inc
pop
mov
adc
jnp
nop
dec
mov
add
xor
inc
xchg
addl
sbb
daa
jnp
das
mov
hlt
push
loopne
add
jmp
xchg
mov
clc
in
xchg
pop
cltd
inc
decl
mov
int3
xor
mov
repz
dec
and
shll
lods
stos
cwtl
inc
pop
fadd
add
mov
mov
loop
pop
xor
push
inc
cmp
out
or
es
pop
pusha
popf
dec
push
add
popf
sarb
xor
jnp
and
inc
dec
mov
enter
fbstp
cmp
xchg
cltd
int
cmc
jne
jmp
mov
imulb
int
das
mov
insl
dec
and
xchg
xor
mov
fwait
movsb
push
addl
subb
pop
jns
pop
pop
ja
jge
out
sbb
mov
mov
fs
dec
cmp
mov
ljmp
rcrb
mov
ret
daa
in
cld
push
pop
xchg
outsb
aas
jne
mov
push
or
leave
xor
imul
repnz
fstpt
mov
mov
add
in
fidivrs
pop
jbe
loop
ret
in
mov
cmp
lea
jg
outsb
mov
or
ret
insb
int
xchg
mov
mov
jmp
and
cmp
js
sbbl
jg
insl
call
sub
push
jbe
fisubs
and
and
push
loopne
out
cmc
cwtl
xchg
xchg
xlat
cs
pushf
pop
sub
mov
jbe
xor
push
cmc
outsl
fs
add
jbe
cmc
pop
or
cmp
mov
jno
push
lods
loop
imul
pushf
push
pop
jecxz
xlat
rcr
outsb
add
pop
dec
sbb
or
aas
xchg
mov
inc
sub
cmc
mov
pop
rcr
lcall
pop
xor
mov
lds
xor
repnz
sub
pop
std
mov
cld
mov
outsb
push
adc
xlat
addr16
sarl
leave
sub
adc
ds
je
mov
jno
xchg
outsl
loop
rcrb
push
cmovo
pop
mov
dec
insl
shrl
lods
nop
mov
daa
shl
pop
aaa
ret
jno
jne
or
mov
mov
mov
cmp
sbb
int
test
into
or
add
lcall
mov
dec
fsub
fwait
iret
jno
sbb
lods
ljmp
outsb
pop
inc
inc
adc
stos
and
pushf
in
sub
fsub
mov
mov
xor
mov
pop
stos
xchg
scas
cmp
cmpsb
xchg
lds
inc
adc
mov
divb
add
iret
test
jmp
test
daa
mov
cmp
into
subb
repz
sub
push
pop
vpacksswb
add
push
inc
jne
xor
push
std
push
adc
inc
jbe
mov
sbb
sub
jnp
dec
xor
or
out
in
test
ret
loopne
jmp
fdivl
out
pop
insb
push
aad
enter
sub
jo
fsubr
xchg
and
and
into
or
loop
mov
aaa
cmp
mov
outsl
sub
xchg
dec
pop
mov
sbb
sub
xchg
ret
xor
mov
sti
jle
cmp
test
cmp
fdiv
inc
dec
fcmovnbe
xor
flds
shlb
push
pop
push
ja
fwait
cmp
rclb
inc
dec
and
pop
jmp
push
lret
sub
mov
push
ljmp
loopne
cli
dec
or
je
imul
ss
sbb
pop
movsl
insl
pusha
mov
gs
call
pop
out
in
out
punpckhdq
cmpl
add
mov
mov
xchg
loope
cmp
in
out
cmp
adc
jo
in
add
js
jne
jno
and
jge
sahf
mov
jge
jns
adc
sub
push
mov
and
mov
mov
mov
adc
pop
inc
je
cmpsb
inc
pop
dec
loop
pop
push
outsb
ds
push
push
push
or
mov
int
les
sbb
lret
mov
jne
lock
outsb
inc
add
loopne
mov
and
hlt
mov
jmp
cmp
fsub
aam
stos
sti
jp
hlt
ja
fidivl
movq
dec
mov
jl
daa
clc
imul
shr
call
or
pop
add
pop
stos
gs
popa
sarl
push
cmpsb
inc
repnz
cld
leave
jo
cmp
icebp
xlat
push
hlt
cwtl
pop
arpl
incl
add
mov
leave
out
pop
jo
ret
and
dec
xchg
mov
aad
adc
mov
repz
jecxz
push
sub
pushf
jge
mov
aas
fdivs
imul
or
cmp
mov
sbbb
mov
pop
sbb
xchg
cmp
adc
jnp
push
sarl
filds
das
out
rcll
fwait
out
lock
mov
adc
inc
xor
sbb
ficompl
mov
dec
pop
out
push
sbb
adc
xor
push
mov
inc
xchg
xor
mov
xchg
test
xor
pop
das
or
mov
in
and
xchg
jae
mov
sub
push
mov
stos
or
popl
add
xchg
dec
sbb
adc
sub
push
pop
xor
mov
bound
jle
rorl
add
fisubl
in
and
nop
cld
int3
and
pop
mov
add
mov
inc
punpckhwd
arpl
sbb
add
push
out
into
into
test
adc
int
or
xchg
ret
xor
cmc
jbe
aas
clc
lret
sbb
mov
in
jecxz
sub
xor
leave
jb
lea
mov
lods
pusha
in
test
push
dec
sbb
add
mov
test
int3
xchg
or
adc
mov
je
mov
cmpsl
sti
inc
xor
imul
into
add
push
push
xchg
test
sbbl
mov
iret
push
add
inc
mov
shl
in
push
xchg
test
movsb
inc
jmp
jbe
addl
loop
mov
jne
jg
loop
fidivs
pusha
mov
cmp
xchg
lds
clc
lock
cmp
sbb
out
jecxz
ret
cltd
sbb
cmp
push
push
jle
cmp
adc
iret
inc
out
push
imul
cltd
cmp
test
inc
inc
pop
mov
fs
push
rclb
pop
call
sti
cmp
add
movsb
push
mov
cmc
fidivrs
add
outsb
movsl
ret
fidivl
push
ret
daa
adc
test
cmp
lods
bswap
and
or
mov
enter
jecxz
test
adc
push
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
jae
cltd
adc
and
mov
and
inc
inc
or
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
