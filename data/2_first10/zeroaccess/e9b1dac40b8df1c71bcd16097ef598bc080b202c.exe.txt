push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
ljmp
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
xlat
xor
push
mov
mov
daa
pushf
fwait
out
mov
insb
sbb
mov
sbb
or
fidivrs
pop
aam
data16
cmp
sbb
push
mov
imul
mov
enter
xor
mov
sbb
sbb
hlt
pop
lret
and
and
out
push
cmp
mov
push
jo
pop
out
pop
mov
testb
daa
xchg
add
in
shlb
mov
push
xchg
sbb
dec
rcll
pop
sbb
mov
sbb
loop
sbb
lock
and
push
xchg
xchg
dec
xchg
dec
outsb
nop
les
jns
dec
js
jg
sbb
idivb
xor
sbb
xor
sbb
sbb
or
inc
mov
clc
in
outsb
pop
xchg
sub
pop
fmulp
in
rorl
mov
adc
inc
and
and
push
mov
jge
cmp
mov
mov
je
mov
push
add
sarl
inc
jbe
sub
outsb
mov
rcl
cmpsb
push
inc
pop
inc
pop
sbb
mov
cld
cmc
fnstenv
inc
popf
out
lcall
inc
inc
xlat
hlt
cld
stc
into
push
inc
sbb
adc
mov
mov
testb
xor
out
jmp
pop
roll
inc
in
cwtl
jmp
ret
test
mov
movsl
add
js
lahf
call
cwtl
les
iret
lods
aad
push
push
jno
add
cmpsl
daa
lods
pop
cmc
pushf
xlat
dec
cs
pop
adc
mov
xchg
mov
xor
and
dec
pop
mov
bound
or
mul
outsb
inc
or
sub
int3
add
jecxz
insl
xchg
mov
jmp
rcrl
ficoms
fwait
out
inc
ljmp
test
dec
test
push
es
dec
xchg
out
lcall
fcompl
pop
lret
leave
popf
jae
mov
mov
dec
inc
xor
fwait
xchg
test
aas
or
adc
dec
call
ja
int3
jno
incl
mov
test
je
adc
and
xor
jne
pop
insb
jnp
lds
adc
cmp
bnd
sahf
xchg
and
push
push
dec
sub
jle
icebp
push
movsb
pop
and
adcl
inc
xor
xchg
pop
inc
push
xchg
aas
aad
pop
insb
push
call
int3
mov
inc
cmp
mov
mov
js
out
mov
mov
sbb
mov
fbld
and
test
push
and
ja
cli
adc
jmp
and
add
int
or
pop
fs
pop
mov
pop
mov
mov
jae
jmp
adc
in
movsl
cltd
fbstp
xor
int
lea
movsl
fistl
ret
jbe
mov
xor
notb
jno
sbb
fsubrs
arpl
and
lcall
push
nop
cmp
and
movsl
jecxz
bound
arpl
shlb
mov
lahf
sub
rcrl
in
je
aas
jecxz
hlt
pop
pop
fildl
ja
xchg
fidivrl
push
movsb
and
ficoms
fimuls
ja
rcl
push
cmp
jo
bound
push
dec
dec
jbe
xor
push
inc
fadd
inc
loopne
xchg
push
mov
add
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
lds
filds
mov
daa
cli
adc
repz
xor
inc
ds
sarl
fistpll
pop
push
ret
scas
xor
pop
lods
sbb
bound
insb
scas
sub
rorl
xor
call
push
psrlq
add
add
mov
sub
xor
cmpsb
movsb
loope
xchg
jl
gs
loopne
je
or
je
pop
add
mov
xor
add
cmovnp
out
xchg
and
and
in
cmp
mov
xor
adc
inc
call
or
in
mov
pop
pop
fnstsw
call
fst
aad
leave
popa
add
inc
mov
mov
jno
pop
cmp
lea
mov
imul
inc
loop
mov
movsbl
test
mov
jle
mov
out
fidivs
or
sub
rolb
pop
js
xchg
add
sub
mov
pop
push
sub
pop
inc
in
incb
mov
xchg
xchg
jmp
adc
loope
cltd
pop
cltd
jns
shr
fsubr
sti
hlt
mov
data16
sub
xor
and
mov
add
pop
shr
daa
jnp
sti
test
adcl
sar
lock
fstps
stos
shrl
sub
xchg
mov
out
pop
xor
iret
dec
pop
sbb
cld
jmp
xchg
and
data16
mov
jp
mov
dec
sti
in
adc
inc
dec
out
je
jno
jnp
xchg
fidivs
loopne
adc
leave
sbb
push
and
jle
xchg
push
addl
in
dec
int
push
jmp
pusha
jno
ffree
ret
ja
int3
lcall
inc
and
inc
into
mov
sahf
mov
mov
loope
mov
jae
or
sub
and
test
test
loopne
pop
mov
push
pop
pop
jmp
int
and
std
xor
cmp
jmp
sub
ds
fdivs
jno
mov
rcr
cmpsb
icebp
das
imul
xor
hlt
test
pop
mov
jnp
stos
cmp
out
das
mov
shlb
push
or
pushf
fldl
fdivrl
and
inc
and
dec
jecxz
mov
xchg
or
out
iret
in
addl
lods
loope
lods
pop
push
or
or
sahf
loopne
push
or
adc
jl
inc
sti
shll
rorl
dec
lods
je
dec
pop
mov
imul
ds
icebp
jge
sbb
movsb
jle
adc
pop
mov
cmp
in
fcomi
les
imul
aam
mov
in
mov
mov
jg
xor
jmp
enter
mov
std
outsb
pop
xchg
popa
out
das
jbe
fldl
arpl
outsb
repz
xchg
xchg
dec
push
cmp
xor
lock
or
adc
popf
in
mov
shlb
mov
test
jae
ret
imul
clc
adc
fcmovne
mov
repz
or
inc
jmp
xor
adc
push
or
cmp
mov
aas
and
popf
call
cmpsl
lahf
mov
insb
inc
ds
adc
mov
jns
inc
mov
jmp
and
stos
rcr
and
in
inc
add
pusha
loopne
in
lods
sbb
mov
and
stos
popa
dec
push
push
ffreep
adc
mov
xor
jbe
stos
lods
xor
cmp
jge
and
xchg
scas
xor
pushf
lret
dec
xor
nop
js
push
xchg
enter
inc
lret
push
test
xor
dec
sbb
push
popf
push
lahf
cmp
sbb
sbb
repnz
adc
cmp
loop
shrl
mov
pushf
mov
mov
lods
or
js
in
push
dec
rclb
aam
rcrb
inc
in
dec
in
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
lds
icebp
xlat
pop
add
adc
cli
adc
mov
insb
mov
imul
xor
xor
scas
mov
das
sub
and
fmulp
test
push
movsb
test
pop
push
jmp
xchg
dec
movsb
adc
fs
xchg
pop
mov
das
in
mov
popa
stc
mov
ss
xchg
cmp
sbb
icebp
lahf
xor
data16
jge
mov
ljmp
jb
xchg
or
jmp
aad
rorb
xchg
int
cld
dec
leave
push
outsl
in
bound
mov
popf
decl
lods
adc
mov
and
stc
xchg
aaa
sbbb
lahf
loopne
mov
sbb
into
jg
pop
jo
stos
loope
data16
jno
mov
sarl
aad
fnop
stos
adc
mov
add
mov
ljmp
imul
mov
imul
push
jp
inc
xchg
lock
movsb
sti
mov
push
test
lcall
sbb
jp
jbe
cmp
adc
mov
js
and
add
loope
or
inc
cld
cs
imul
sbb
mov
and
fnstsw
bswap
mov
inc
add
xor
iret
popa
nop
scas
xor
out
mov
je
sub
fnstenv
xor
xchg
pushf
es
mov
sarl
jno
and
mov
mov
movb
jne
xchg
stos
into
scas
mov
out
stos
arpl
mov
cmp
mov
je
addr16
sub
pop
pop
xor
or
aaa
fiaddl
pop
sarl
data16
inc
lods
sbb
push
outsb
int
iret
mov
test
push
and
pop
adc
add
icebp
fistl
adc
popa
pop
adc
mov
cmp
lret
dec
jle
jl
mov
and
int
dec
sbb
out
cmp
inc
std
in
fstl
dec
sbb
or
movsl
or
jb
daa
lods
push
flds
dec
pop
iret
rclb
sbb
clc
addb
inc
mov
pop
jecxz
shll
mov
movsb
pop
lods
pop
loopne
rcl
add
fs
xchg
addl
hlt
out
mov
inc
mov
fcompl
popl
xor
outsb
cmc
sbb
lods
jnp
push
adc
repz
inc
push
sub
idivl
push
test
inc
sub
sub
add
adc
popf
and
mov
push
aam
inc
mov
xchg
lret
fwait
push
int
jmp
lea
mov
sarb
call
fdiv
jge
mov
in
push
jmp
jmp
hlt
scas
fnstsw
es
add
and
mov
out
psubw
or
add
inc
iret
add
roll
sub
cmp
mov
push
xchg
and
xor
mov
add
mov
test
aas
mov
fbld
and
pop
inc
imul
mov
cmpsb
and
ljmp
lret
jno
popf
and
aaa
lahf
sbb
data16
in
iret
mov
stos
push
inc
jmp
in
cs
jbe
shr
pop
lret
dec
xchg
add
mov
cmp
or
mov
or
outsb
sub
cmp
mov
lcall
mov
loop
cmp
mov
cmc
push
sub
leave
dec
xchg
dec
movb
and
iret
mov
outsb
inc
pop
lret
mov
jge
jne
sarb
lods
loop
int3
insb
fs
orl
push
cmp
jmp
xchg
pop
jo
add
push
mov
push
cmp
mov
in
mov
test
xchg
fisubl
std
add
vmwrite
jae
test
es
xor
cmp
out
icebp
mov
push
jmp
int3
test
and
jg
cltd
lds
cli
adc
gs
in
int
repz
jmp
cld
shlb
jle
mov
jmp
adc
ljmp
xor
cwtl
push
icebp
push
ljmp
stos
int3
and
push
sub
pushf
or
mov
cmp
mov
xor
adc
xchg
xor
adc
xchg
out
fcompl
loop
daa
inc
outsl
xlat
and
xor
adc
fs
xchg
in
adc
ret
add
add
cmovnp
jo
aaa
add
outsb
xchg
inc
nop
loopne
cmp
and
and
dec
ja
mov
cmpsl
pushf
loopne
jge
xor
sbb
cmp
jns
fisubrs
ja
dec
mov
sarl
push
insl
jne
popa
das
adc
xchg
pop
clc
pop
and
in
addl
in
push
xchg
jb
adc
mov
leave
jmp
std
mov
out
ss
sub
rorb
test
movsl
cld
pop
add
and
jbe
imul
das
pusha
dec
adc
jbe
aas
mov
mov
adc
mov
pusha
lock
pop
cs
lret
mov
add
sub
add
or
shr
sti
sub
sub
jae
inc
xchg
inc
scas
aad
mov
cmp
stos
jp
xchg
mov
mov
les
xchg
xchg
es
loope
scas
mov
in
aaa
push
sub
leave
test
in
mov
adc
rorl
ljmp
insb
push
or
or
stc
and
js
sub
ret
jae
sbb
sub
mov
lds
flds
popf
push
jns
push
into
sahf
popa
xchg
aam
and
push
scas
dec
adc
pop
cwtl
jnp
dec
subb
pop
adc
pop
xorl
jp
cmp
lea
inc
mov
or
scas
cmp
push
jo
addr16
xor
fidivrs
push
and
scas
jb
jl
lock
in
mov
cli
pop
ret
adc
shlb
aaa
adc
dec
fistpll
repnz
jbe
pop
das
xor
xchg
shll
clc
mov
cmpsl
ss
or
xchg
aas
lea
push
std
add
sub
repz
xorb
dec
mov
xlat
or
orb
mov
jle
sub
out
test
in
inc
outsl
xchg
push
subb
pcmpeqw
popa
mov
pop
stos
out
xchg
or
fstl
mov
sbb
or
sbb
inc
and
stc
jl
xchg
fmull
cmp
sbb
and
cmp
or
in
pop
sub
arpl
adc
aas
call
jge
lea
adc
in
ss
add
pop
cmp
sti
or
cs
pop
scas
aaa
fsubp
mov
ja
ljmp
xor
mov
jns
rcl
cmc
pop
aam
mov
lcall
sub
mov
mull
jg
and
push
xor
ss
je
pop
int
add
test
add
dec
in
mov
int
xor
or
xor
mov
mov
repnz
or
dec
pusha
dec
mov
dec
bnd
pop
ljmp
ret
and
loop
shlb
jae
inc
fdivrs
cmp
pop
data16
insl
and
xchg
sub
mov
pop
cli
mov
dec
repz
mov
dec
inc
sti
imul
mov
xor
lods
adc
test
mov
dec
lret
ja
shrl
call
test
adc
xchg
push
inc
sbb
iret
ficomps
js
inc
jbe
gs
mov
xchg
pop
sub
in
or
inc
ret
out
cmp
insb
ljmp
nop
and
ret
jbe
iret
inc
xchg
inc
ljmp
movsl
jae
lock
int
loop
fistps
sbb
add
int3
inc
or
add
std
sbb
add
or
repz
inc
add
push
out
add
add
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
pop
fsts
adc
cli
adc
aaa
fnstenv
push
movsl
gs
xchg
dec
mov
bound
outsb
xrelease
popf
dec
loopne
std
mov
lahf
insl
xchg
jl
imul
xor
jne
adc
imul
ret
stc
sarb
dec
and
adc
and
std
adcb
cmp
or
cmp
lods
sti
and
bnd
sub
inc
es
dec
fmuls
xchg
das
xor
pop
cmc
jmp
xor
cmp
sbb
stos
jl
mov
pop
call
out
mov
aas
adc
pop
sub
inc
test
in
fst
inc
dec
or
addb
pop
lret
faddl
and
xor
dec
fnstcw
andl
sub
scas
add
cmpsl
mov
aad
scas
sbbl
mov
mov
jp
je
push
lret
mov
jl
aas
dec
loopne
pop
push
jbe
pop
adc
sbb
repnz
push
les
jne
shrl
jmp
pop
mov
adc
test
jecxz
jg
aaa
dec
jo
das
push
mov
pop
leave
ja
in
enter
and
insl
cmp
int
dec
push
sbb
add
call
scas
adc
mov
dec
inc
adc
mov
xor
fcmove
mov
fistl
or
jecxz
fucomip
jne
fwait
mov
test
in
dec
jb
mov
xor
je
cmc
mov
test
cmpsl
jge
push
add
push
xor
mov
pusha
cmp
mov
sub
std
and
and
jne
lods
rcrl
sub
ss
mov
stos
mov
int
and
jne
pop
add
push
pop
mov
sahf
jno
outsl
out
mov
cld
xchg
mov
mov
in
or
jmp
mov
pop
test
inc
mov
jns
mov
xchg
mov
jns
lahf
sub
cs
lock
pushf
mov
xor
cltd
sti
fildl
clc
testb
sub
pop
sbb
cli
es
sbb
aam
pop
test
sub
scas
or
xchg
and
dec
sub
adc
pop
mov
andl
cmpsl
jo
fcmovu
jmp
frstor
pop
inc
loope
xchg
int3
cmp
mov
inc
int
push
icebp
pop
js
mov
xchg
mov
jne
fistpll
push
pmuludq
jb
adc
fldl
fdivrl
movsl
xchg
inc
or
sbb
rcrl
cmp
push
ret
ret
jae
pusha
sbb
mov
ljmp
jecxz
clc
aaa
push
sub
adc
sub
and
fs
ja
push
cmp
mov
outsl
loopw
xlat
cmp
adc
pop
cmp
push
das
call
push
cwtl
sbb
call
cli
sbb
lds
dec
inc
mov
nop
cmp
add
or
mov
fstpt
js
mov
mov
adc
sub
jbe
in
xchg
push
out
mov
xor
jl
push
cmp
lock
xor
popf
stc
add
cmpsb
sbb
push
stc
rcl
inc
push
hlt
ljmp
pop
and
or
mov
stos
pushf
adcb
jl
push
cmpsb
mov
or
test
adc
iret
sarb
fdiv
daa
shrb
dec
test
xchg
sub
dec
sub
mov
sbb
add
xchg
sbb
push
cmp
sub
fidivl
daa
cltd
lock
fiadds
aaa
jo
stos
clc
mov
push
xchg
adc
dec
je
xlat
outsl
mov
mov
mov
dec
call
jmp
mov
xchg
jp
ficoms
and
addr16
shr
mov
xor
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
jecxz
mov
daa
cli
adc
testl
sbb
clc
clc
xchg
adc
movsl
cmp
mov
out
enter
cli
xor
mov
stos
loopne
out
jg
mov
insb
pop
clc
rorb
push
sbb
adc
fwait
iret
cmpsb
ficomps
jmp
int
adc
nop
push
mov
negb
mov
sahf
cmc
addr16
cld
outsb
cmp
mov
pop
cmc
aad
nop
push
xor
in
sbb
push
inc
fmul
subb
pushf
jmp
mov
sub
ljmp
jbe
daa
repz
out
push
test
push
lods
adc
movsl
shll
and
adcb
mov
push
or
adc
sub
and
movsl
fwait
data16
popa
jp
int3
data16
outsb
out
and
iret
ret
aaa
add
mov
stos
out
dec
ret
fistpl
scas
push
out
adc
repz
jl
aam
dec
jae
lahf
sahf
dec
cwtl
xor
jg
pop
in
movsl
cmp
shll
adc
ret
jmp
imul
out
lcall
pop
sahf
xchg
adc
sbb
or
mov
repz
mov
xchg
pop
xor
inc
fldcw
mov
dec
es
int3
iret
inc
cmp
and
add
jle
inc
mov
fwait
ds
mov
clc
js
fadd
icebp
mov
mov
jb
jge,pt
fisubrs
xchg
mov
jne
jg
push
lods
pop
jge
addb
dec
test
jg
stc
sahf
sahf
sbb
push
bound
bnd
adcl
sub
dec
rolb
hlt
lds
pushl
in
je
arpl
xor
or
lcall
mov
add
sub
arpl
mov
sbb
inc
cli
rcrl
jecxz
data16
adc
fstps
gs
xorb
hlt
out
dec
test
xor
daa
adc
addl
loope
cmp
stos
inc
push
hlt
dec
test
les
je
jbe
int
mov
jno
into
bound
int
ds
fidivrl
mov
xor
loopne
leave
arpl
outsl
sti
sub
scas
aaa
cltd
sarl
sbb
jo
shll
push
mov
sti
inc
dec
test
fldenv
insb
inc
in
xchg
sub
scas
insb
repnz
insl
test
mov
xor
cmp
sub
test
mov
or
push
not
ror
test
data16
fisttpl
adc
adc
repnz
inc
jns
mov
pop
inc
out
or
in
cmp
out
out
aaa
jmp
or
and
adc
loope
loop
or
jmp
and
cmp
xchg
shr
xor
scas
std
mov
push
push
fidivs
pusha
imul
insl
cwtl
push
sbb
sbb
xor
cmp
adcl
or
push
test
decb
push
lods
pop
or
pop
popl
std
xchg
dec
mov
mov
arpl
in
fidivl
dec
ljmp
leave
pop
xlat
enter
and
adc
add
inc
push
add
add
repnz
xchg
imul
jbe
cltd
sub
lock
mov
add
icebp
in
fdivr
imul
shr
pop
lock
jge
push
or
adc
sbb
popf
mov
cwtl
out
xchg
lea
pop
rcrl
js
or
pop
lods
lahf
insb
inc
test
adc
out
hlt
stc
fbld
sbb
cld
push
cmp
mov
fldenv
add
add
mov
jns
orb
cs
and
mov
lcall
dec
jae
lods
popf
test
movsl
pushf
push
or
dec
xchg
es
xlat
mov
rcrb
enterw
dec
adc
lcall
mov
mov
imul
movzbl
shr
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
adc
adc
daa
cli
adc
or
adc
or
add
xor
xor
xchg
scas
fiadds
push
sbb
mov
and
push
sub
push
pop
push
push
jecxz
add
lcall
xchg
mov
adc
push
jmp
sub
mov
das
inc
mov
dec
add
adc
mov
ret
push
mov
fwait
sub
icebp
lods
and
fwait
movsl
cmp
mov
or
push
rclb
pop
add
insb
inc
inc
cli
lods
ret
mov
pushf
out
fwait
mov
lods
fstl
pop
pop
js
testl
frstor
jnp,pn
insl
push
jge
xchg
aaa
call
call
cs
out
negl
adc
lcall
in
add
jne
hlt
xchg
mov
fnstsw
scas
jecxz
jl
out
and
jp
leave
and
mov
subb
jbe
xchg
jo
in
shlb
jae
mov
movsl
sbb
pop
js
sub
push
jg
scas
xchg
pop
mov
hlt
sub
pop
popa
cmc
scas
cmpb
movsb
and
pop
xchg
test
mov
mov
dec
xor
data16
sub
jp
cwtl
dec
pop
pop
dec
aad
push
sbb
inc
push
lret
jae
pop
adc
out
or
push
ds
stos
jns
adc
mov
add
adc
rolb
and
sbb
es
insl
adc
add
movsl
sub
or
add
xlat
fidivs
sub
mov
dec
xchg
jle
add
jecxz
mov
js
popf
aad
daa
mov
mov
pop
or
scas
mov
std
in
pusha
imul
mov
imul
imul
mov
mov
mov
lret
pop
sbb
dec
pop
inc
xchg
rcrb
leave
lcall
add
imul
stc
mov
pop
into
mov
adc
dec
pop
push
nop
adc
pop
pop
scas
repz
and
fistps
data16
leave
sbb
movb
jne
popf
orb
je
hlt
rcr
mov
inc
fimuls
mov
and
loop
adc
pop
bound
pushf
cs
insb
jne
clc
mov
xchg
ja
dec
sbb
lock
hlt
pusha
or
mov
dec
jg
push
add
jg
jmp
test
je
dec
jg
shl
or
pop
lea
inc
jae
fildll
sbb
cmp
lret
cmc
add
adc
xchg
cmp
cmpsb
inc
adc
gs
jb
push
mov
lcall
push
sub
icebp
xchg
mov
adc
xor
divl
filds
outsl
push
dec
sbb
js
jg
xchg
aas
fcom
dec
inc
in
loope
or
into
sub
cmp
and
sub
push
and
jns
test
inc
lock
fldl
addr16
push
int3
test
shll
sbb
jne
loopne
movsl
pop
adc
sub
xchg
enter
or
push
stos
outsb
cmp
aaa
lcall
pop
pusha
je
inc
push
imul
add
cmp
push
or
testl
mov
inc
repnz
test
xor
or
out
cmp
cmp
sub
adc
outsl
cli
or
mov
sbb
lcall
mov
mov
pop
cwtl
push
push
fsubrs
sub
ret
jg
mov
pop
ja
sbb
aaa
leave
fisttpll
cmp
scas
out
push
dec
push
mov
add
js
iret
mov
test
xchg
or
sbb
stos
idiv
mov
je
push
xchg
fidivrs
jnp
pusha
cmpsb
fldt
fsubrs
push
mov
ficompl
in
arpl
push
or
pushf
or
mov
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
ljmp
shr
xchg
push
aam
or
cld
xlat
push
pop
sbb
jo
jns
mov
rcrb
std
movsb
xor
mov
fisubrs
cwtl
repnz
hlt
inc
mov
and
add
lea
mov
mov
push
enter
or
sub
inc
sub
mov
out
push
pop
lret
jo
call
stc
and
es
int
mov
scas
insl
lahf
mov
ss
lods
outsl
pop
mov
iret
pushf
xchg
inc
dec
sbb
stos
aad
jo
cwtl
fstps
daa
and
sbb
mov
push
je
les
lret
test
add
in
dec
mov
jne
in
movsb
ljmp
arpl
or
xchg
addr16
out
ljmp
mov
into
add
rcr
leave
iret
mov
jo
jno
mov
test
inc
sbb
mov
mov
mov
pop
xchg
ret
cmpsl
jge
testl
jne
sub
leave
imul
ja
pushf
mov
sahf
pop
xchg
push
push
jno
je
xor
loope
mov
jge
xor
lea
xor
insb
lret
xchg
lock
es
inc
cmp
ds
inc
das
int
icebp
mov
ja
dec
test
cs
mov
lret
pop
jp
stos
mov
dec
sbb
push
jnp
mov
xor
sbb
lret
popf
test
pop
jp
inc
iret
xchg
add
push
cmp
cmp
lret
divl
arpl
sbb
cmpsb
mov
cmp
aad
adc
mov
shrb
and
mov
sbb
stc
push
ficomps
popf
out
and
or
pop
pop
ret
add
incl
add
rolb
rcrb
fbld
or
mov
les
mov
cmpb
cmovbe
pushf
adc
mov
sbb
mov
rol
xor
flds
outsl
lds
jb
aam
mov
daa
mov
mov
cs
cmp
jge
push
xchg
in
imul
lret
stc
push
insb
sbb
cmp
int
test
or
xchg
lret
adc
sbbb
pop
out
xchg
xchg
sbbl
test
jne
sbb
cmpsl
jecxz
dec
int
cwtl
pop
pop
mov
lods
mov
in
jne
xchg
aas
enter
orb
out
cmc
sti
jmp
mov
inc
loop
cmp
push
sbb
jbe
adc
lret
and
push
lock
lea
and
xchg
adc
insb
mov
cmp
mov
mov
dec
cmpl
cwtl
sbb
and
jno
mov
aaa
xchg
xchg
mov
or
roll
push
or
pop
mov
scas
les
std
push
enter
jmp
xor
cmp
ja
iret
add
sar
push
hlt
cmp
pop
pop
xor
dec
xor
sarb
imul
std
dec
mov
pop
popa
cmp
push
add
xchg
and
push
mov
mov
mov
inc
or
mov
cmp
sbb
xor
jbe
aaa
xor
imul
xchg
das
dec
push
jge
or
cmpsl
lods
jb
mov
or
lods
and
fs
dec
fcmovb
and
icebp
out
jb
mov
cmc
lock
insl
out
clc
or
movsl
push
xchg
inc
or
sub
shll
in
mov
mov
adc
in
pop
pop
mov
jno
or
cmpsl
sub
jnp
jl
ds
xchg
cmp
dec
xor
idivb
sub
les
mov
aas
mov
pop
xchg
jb
jb
pop
push
mov
dec
sahf
xchg
lea
rcrl
jle
arpl
or
push
sbb
pop
hlt
jb
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
lock
mov
adc
jl
insb
xor
daa
das
loope
das
xchg
jns
ss
aas
stos
ss
test
pop
in
out
xchg
push
lods
les
inc
gs
sbb
je
lahf
mov
sbb
fs
cmp
xor
cwtl
pop
test
dec
jns
and
push
and
fnstcw
inc
rolb
insb
sbb
mov
out
dec
xchg
popf
ret
out
dec
lods
adc
in
hlt
shl
sahf
shl
sub
imul
push
fcompl
loop
lahf
mov
andb
lock
adc
jnp
leave
lret
test
inc
push
jle
stc
sbb
dec
cmp
js
adc
pop
add
int
jmp
mov
rcl
stc
lock
fcmovnb
test
pushf
insb
or
add
push
push
out
andb
roll
mov
push
jg
scas
push
call
mov
xchg
cmp
xlat
aam
fimuls
dec
push
pop
sbb
adc
dec
xor
adcb
movsl
and
jbe
dec
or
push
fiaddl
xlat
scas
sbb
push
fistps
bound
dec
pop
push
shrb
dec
mov
jo
pop
lods
mov
mov
jne
cmp
repnz
sahf
cmp
mov
add
sti
popf
push
ja
push
xchg
push
sbb
arpl
fs
and
or
lahf
mov
fadds
dec
insl
push
mov
sbb
inc
sarl
test
mov
sti
nop
or
hlt
mov
fcomip
movsl
pusha
jnp
mov
cmp
cmpsl
in
mov
cmp
dec
inc
cmp
sub
pop
inc
loop
nop
sbbl
xor
fbstp
ds
mov
test
cwtl
stc
and
lcall
mov
ja
xor
pop
lret
pop
pop
insl
rcl
clc
fdivrs
xor
loopne
adc
push
pushf
xchg
scas
mov
sti
dec
add
mov
add
push
fbld
lahf
lret
inc
mov
in
jp
lods
sbbl
in
in
arpl
cmp
xor
mov
test
add
push
dec
aad
jp
ret
in
addl
out
repz
outsl
inc
stos
mov
pop
dec
out
dec
sti
add
add
sbb
lret
cmp
jns
jp
je
out
data16
add
addb
lock
in
out
sub
jb
jg
mov
cs
jb
jne
jmp
and
bound
and
lds
fwait
les
fs
mov
adc
pusha
les
and
lcall
adc
or
pop
jp
xor
hlt
or
jae
insl
mov
jae
push
push
int3
in
add
and
out
nop
outsb
pop
and
mov
test
mov
stos
lahf
xor
fcmovnb
shl
bound
dec
pop
jb
stos
or
bound
mov
xor
addr16
fidivrs
shll
mov
ret
insb
mov
sbb
mov
int
pop
out
into
jge
jae
mov
fs
xor
cmp
mov
xor
call
fldl
lret
lds
enter
in
insl
cwtl
in
or
cmp
call
xchg
or
lcall
popf
push
jl
fldcw
ror
dec
mov
or
roll
sti
or
xor
mov
sub
xchg
mov
mov
adc
fmull
idivb
loope
int3
mov
lcall
out
jg
addr16
in
in
in
jl
pusha
mov
cmp
mov
jmp
lahf
or
mov
mov
push
cmp
jbe
or
loope
repnz
sahf
shlb
test
shll
inc
inc
fsubl
mov
and
push
mov
inc
add
ficompl
cmp
add
xchg
add
add
add
add
sbb
add
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
mov
xchg
dec
jnp
cmp
gs
dec
scas
or
jecxz
cltd
dec
enter
das
push
lock
mov
sbb
xchg
xchg
mov
mov
or
mov
or
mov
lods
jae
mov
stc
jb
add
cmp
movsl
loope
sub
cs
rorl
repz
add
sahf
loopne
jne
das
push
cmp
push
mov
mov
add
add
test
mov
loop
les
cmp
lods
clc
cmp
repnz
pop
leave
dec
push
ss
ret
lock
ljmp
push
into
hlt
rorb
jle
mov
aas
adc
cmp
jo
stos
adc
push
pop
icebp
ss
dec
insb
lock
push
xor
adc
shrl
fstpt
das
pop
mov
sub
xchg
jl
repnz
stc
stos
adc
xchg
cld
repz
out
mov
jns
dec
aas
popa
xor
aaa
add
xchg
sbb
add
int
icebp
mov
jecxz
in
ja
data16
ret
xchg
popa
pop
lock
dec
test
push
mov
mov
jge
xchg
xchg
mov
push
insl
cmpsl
addr16
add
jb
mov
and
ss
rorl
movb
repnz
fwait
mov
arpl
jmp
lock
ret
cmpsb
roll
sbb
aas
dec
mov
cld
mov
adc
adc
sub
jecxz
arpl
stc
add
repz
jmp
add
jg
push
jmp
inc
mov
add
int
adcl
cmpsl
rol
or
data16
repnz
ds
subb
stos
mov
pcmpeqd
out
sti
sahf
pushf
push
push
call
cmpsb
daa
lret
pop
and
ret
dec
sti
sub
push
add
aam
push
mov
sbb
push
xchg
xor
out
mov
divl
push
cmp
repz
sub
test
and
sbb
inc
cmp
fists
jmp
mov
pop
mov
imul
jb
test
mov
mov
xor
dec
adc
aaa
andl
int3
sub
fdivrl
int
ret
xchg
xor
cmp
or
pop
push
push
dec
sbb
push
and
pushf
xor
pop
nop
dec
repnz
mov
dec
rcrb
mov
xchg
push
sbb
std
frstor
pop
or
loope
sub
push
pop
call
add
shlb
lahf
sbb
inc
hlt
cmp
mov
xchg
shlb
jbe
addr16
loop
adc
hlt
das
mov
mov
insb
outsl
nop
cmpsl
jae
and
out
mov
inc
loopne
cmpsb
jo
test
fwait
outsb
dec
cli
or
das
dec
jg
movsl
or
sets
or
jo
adc
or
insl
dec
mov
imul
pop
daa
xlat
sbb
cmp
cwtl
jno
ljmp
mov
sbb
jmp
push
cmpsl
sbb
push
enter
pop
or
sbb
add
xchg
je
repz
inc
dec
jl
rorb
sahf
adc
jecxz
fsubs
repnz
adc
int
fldt
stos
sbbl
testb
dec
push
xchg
pusha
ret
inc
mov
scas
outsl
xchg
jb
mov
push
and
loope
aad
stos
mov
mov
lds
pop
int3
arpl
adc
inc
add
mov
mov
test
mov
fnsave
xchg
aad
js
addr16
addr16
ret
pop
dec
iret
adc
ret
mov
ret
in
sub
adc
pop
lods
fcoml
or
dec
cmpsl
lock
or
mov
xor
xchg
in
ret
xchg
fwait
inc
pop
aad
rcll
aam
push
add
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
popa
push
fldt
adc
push
mov
mov
or
popa
enter
mov
adc
pushf
cltd
sbb
outsb
ljmp
mov
push
repz
adc
iret
stc
xchg
xchg
pop
mov
xor
mov
outsl
adc
jnp
xchg
subb
pop
mov
or
sbb
into
inc
inc
out
push
not
or
dec
xchg
cwtl
mov
add
jne
cmpsl
mov
add
jge
iret
cmpsl
out
aas
dec
cli
lods
lcall
enter
cmpsb
mov
aam
push
sti
pop
lock
inc
lds
add
idivb
out
insb
pop
mov
add
idiv
or
jp
dec
icebp
aad
jns
push
enter
ds
roll
iret
lds
fmull
test
in
jg
push
or
mov
jae
jmp
aam
pop
leave
mov
bound
inc
lds
push
ret
aam
movsl
movsb
sti
les
mov
lock
or
ss
jne
jge
inc
add
rcll
jge
mov
lods
mov
pop
int
cltd
adc
sub
xor
ss
mov
pusha
jns
insl
mov
mov
mov
fsubrs
je
in
dec
shlb
lret
xor
enter
enter
popl
pusha
lock
add
test
sub
mov
addl
inc
les
popf
push
cmp
cli
xchg
sub
cmpsl
jo
cmpsl
call
test
mov
insb
in
das
mov
xor
movsl
out
mov
sbb
std
out
lods
ret
bound
cmc
dec
test
push
jae
stos
fidivrl
popa
mov
and
mov
lret
fsubrp
or
pop
jae
or
add
insb
and
sub
push
scas
cli
xor
cli
in
pop
ds
cmpsb
jmp
in
jg
xchg
dec
imulb
mov
sahf
mov
xchg
mov
les
lahf
sbb
or
mov
sbb
dec
imul
xor
and
cli
clc
add
push
jmp
out
xchg
jge
in
jmp
pop
push
pop
sahf
adc
dec
or
and
js
nop
pop
lcall
add
mov
jns
mov
pushf
stos
out
leave
and
mov
idivl
mov
roll
arpl
mov
pop
insb
enter
les
add
cmpsb
inc
ss
or
popf
inc
pop
cltd
daa
divl
or
push
dec
mov
cmpsl
or
divb
jns
aad
adc
out
mov
dec
cmp
mov
push
mov
dec
adc
enter
cli
push
pop
imul
push
insb
xchg
mov
push
sbb
push
movsl
ds
push
mov
in
mov
aam
aad
mov
fildl
ror
jnp
xchg
shll
sbb
fisubs
jg
pop
dec
dec
andb
sub
lret
rcl
dec
ss
jo
push
repnz
mov
test
adc
fldcw
and
adc
add
andb
jecxz
jecxz
sub
mov
leave
push
out
out
jg,pn
stc
jg
cmp
add
mov
iret
movsl
popa
imul
xchg
ret
xor
xor
sbb
adc
inc
loope
ja
insb
out
int3
icebp
jle
mov
pusha
mov
es
cmp
loope
dec
push
sub
sub
loopne
mov
das
cmpsb
mov
scas
cld
mov
xor
data16
xor
popl
cmp
jl
and
repnz
add
jae
jbe
push
jno
das
int3
ret
mov
xchg
jmp
xor
pop
popa
push
out
push
imul
scas
xchg
cmp
xchg
test
stos
lods
mov
mov
mov
add
xchg
xlat
repnz
inc
out
jb
sbb
add
fisttps
sub
mov
inc
add
cld
roll
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
aaa
cmp
lds
mov
adc
cli
adc
sbb
jl
push
lahf
push
insb
icebp
into
inc
or
jle
lds
push
xchg
push
xchg
loope
or
pop
push
lahf
addr16
push
fs
scas
idiv
nop
mov
aam
jb
xor
sbb
or
mov
mov
mov
not
add
xor
das
loope
mov
inc
push
sbb
mov
aad
enter
scas
in
rclb
std
test
cmp
cli
push
mov
push
rolb
xchg
int
xchg
inc
fcmovu
sub
jecxz
call
lahf
fdivl
sbb
cmpb
mov
ss
jmp
push
fucomi
stc
pop
lret
sbb
push
int
cmp
sub
sbb
xchg
xor
imul
or
lods
mov
insb
je
pusha
mov
or
orl
mov
jne
cmpl
add
mov
rcrl
stc
cwtl
or
dec
cltd
push
insb
lock
aam
pop
push
dec
and
push
mov
cmp
xor
cmpb
mov
cs
dec
cli
into
and
and
addr16
ret
jg
addr16
sbb
sbb
pop
outsb
dec
pop
andl
sti
ret
add
loope
pop
pop
cmp
jl
pop
jae
andb
xchg
push
pop
cmp
dec
push
iret
aad
repnz
inc
outsb
jle
push
xchg
pop
scas
sub
mov
jp
jp
jg
notl
mov
inc
sbb
adc
loop
push
or
loopne
popl
xor
cli
imull
jae
pushf
mov
int3
ret
cli
xchg
cmpsl
mov
mov
jo
mov
xor
cmc
jns
andb
arpl
sbb
adc
ss
xlat
xor
iret
xchg
sbb
lahf
scas
sbb
in
ret
cmp
sub
rorb
movsl
adc
stos
or
repnz
insb
mov
pop
mov
jo
lods
lds
push
repz
pop
or
mov
add
push
out
and
adc
pop
cmp
pusha
pop
cmp
push
mov
jo
out
clc
lock
push
mov
repz
adc
ja
mov
lods
addr16
pop
ss
sbb
lahf
lcall
dec
mov
mov
lret
fldenv
cltd
unpckhps
daa
xor
out
jae
in
incl
xchg
rol
xor
jmp
mov
xor
and
sbb
je
rcrb
addb
mov
fwait
mov
cmp
mov
pop
aas
xchg
sbb
icebp
jae
cmp
shll
push
xchg
lret
imul
in
mov
add
mov
adc
pop
xchg
loope
aam
cmp
pop
test
cmc
jne
xor
jo
es
inc
cmc
lahf
xor
xor
cmp
xchg
lods
cmpsl
sub
jg
inc
popf
addl
mov
je
push
pop
in
xlat
rorb
mov
int
aas
mov
nop
rcll
and
mov
lods
pop
in
outsb
nop
lock
rcl
subb
jg
fwait
sub
fnstenv
sbb
arpl
dec
rcr
into
pusha
cld
add
dec
out
dec
mov
pop
std
enter
repz
in
xchg
sub
dec
test
movsl
ret
ror
clc
leave
inc
add
shl
dec
xor
pop
loopne
dec
imul
mov
je
pop
lea
shrb
idiv
xor
push
loop
jg
jl
add
adc
mov
jl
enter
push
xchg
out
test
adc
jo
aam
ljmp
lret
aaa
adc
cmpsb
push
sbb
push
cwtl
pop
xchg
call
aaa
jo
xlat
fstpl
mov
pop
mov
cmpsb
insb
and
repz
and
sub
shrb
xor
or
xchg
idivl
inc
mov
call
rolb
adc
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
popf
lds
adc
aaa
cli
adc
inc
or
cwtl
lret
pusha
xor
loope
and
ret
mov
sub
fsubs
iret
loope
sub
mov
incb
sbb
or
test
fucom
pop
pop
xchg
adc
daa
shl
jecxz
cmpsl
push
mov
sub
mov
rcll
lret
cmp
lods
xchg
xchg
push
scas
mov
xchg
repz
xlat
mov
cli
js
pop
cmp
add
imulb
imul
xchg
in
xchg
test
ficompl
add
lret
jecxz
arpl
cmp
pop
add
jmp
test
inc
test
roll
or
or
imul
mov
cmp
out
lahf
jp
jb
lcall
enter
sti
stos
cld
inc
pop
mov
test
bound
in
jge
outsl
je
jl
leave
xchg
inc
mov
push
mov
dec
movsl
add
cmc
or
xor
cld
outsl
ja
inc
test
sarl
mov
idivb
mov
je
push
test
and
pop
mov
xchg
or
ja
lret
jbe
pop
mov
fldcw
aaa
les
pop
div
jp
iret
jl
add
mov
out
sarl
repnz
sahf
push
mov
sub
rcl
sbb
out
push
ljmp
imul
dec
test
testb
or
out
roll
jl
add
fimull
loopne
xor
jo
pop
fcmovu
cmc
hlt
hlt
mov
mov
mov
pop
jnp
mov
sbbl
push
rorb
and
lcall
push
je
mov
icebp
ljmp
int
xor
xchg
adc
xchg
hlt
mov
stc
insb
insl
jecxz
mov
icebp
pop
daa
mov
or
je
rorl
push
mov
dec
outsb
jbe
lcall
rorl
pushf
cmp
add
jmp
push
xor
or
xchg
enter
jnp
mov
arpl
jo
pop
insl
dec
xor
aaa
es
loop
cmp
rcrb
adc
adc
fmuls
dec
jmp
mov
cmp
xchg
or
or
jo
pushf
mov
jg
sub
jg
sub
inc
pop
inc
lea
jge
movsb
pop
mov
ficompl
mov
adc
sbb
cmpsb
xchg
loopne
cmpsl
lds
sub
enter
and
arpl
ret
stos
xchg
les
gs
orl
dec
loopne
dec
mov
movsb
cwtl
mov
or
push
stc
int3
in
pop
sbbb
out
mov
cmp
mov
lods
cmpsb
ficomps
mov
mov
mov
sub
mov
insb
in
lods
jp
cmpsl
pop
adc
push
out
das
cltd
outsl
jg
xchg
cltd
lret
sbb
xlat
pop
add
push
add
repnz
jns
cltd
fdiv
popa
add
mov
out
pop
out
fisubl
inc
sbb
adc
adc
inc
push
cmp
fmull
sbb
jnp
pushf
and
xchg
fimuls
insb
push
add
mov
sub
in
fcompl
sahf
fs
pop
sbb
lahf
jb
into
out
xchg
flds
pop
dec
jg
sub
push
rol
addl
std
stos
fsubr
stos
shll
and
or
sbb
inc
fstl
andl
cli
outsl
sub
xchg
or
sti
xchg
imul
out
xchg
bound
mov
inc
xchg
iret
pop
jle
jo
and
out
jae
cmc
out
gs
ret
add
mov
mov
and
adc
inc
push
jge
shrb
sbb
and
js
xchg
push
dec
pop
icebp
xor
pop
pop
xor
cmp
xchg
cwtl
push
inc
add
or
xchg
cmp
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
sti
xchg
movsl
push
xchg
adc
addb
xor
adc
jmp
sbb
ret
sahf
cmp
push
enter
dec
out
div
test
je
outsl
add
aam
lods
push
popf
rolb
into
cwtl
xchg
mov
test
lock
ret
pop
jns
cltd
push
std
and
cmpsb
xchg
sub
fs
inc
repnz
dec
in
add
xchg
push
mov
xlat
call
xchg
dec
imul
adc
pop
sub
movsl
adc
repz
enter
pop
and
mov
inc
sub
push
dec
call
mov
push
ljmp
lret
xor
jns
stos
mov
aam
xchg
in
aad
jb
outsb
xchg
dec
ja
inc
mov
add
lcall
hlt
sahf
inc
cmp
add
addb
jl
or
xchg
cld
stos
fistl
call
lock
adc
movsb
lahf
mov
fdivrs
mov
cwtl
push
in
ljmp
fmuls
push
movsl
mov
lret
lahf
fs
and
cltd
pop
enter
pushf
in
jne
cld
sti
sbb
fidivl
lahf
into
mov
lret
cmp
inc
js
outsb
mov
pushf
dec
xor
push
outsl
cmp
jno
pop
add
mov
addr16
aaa
sbb
sar
inc
lds
jg
lods
and
loope
pop
or
jge
stc
pushf
insb
and
inc
pusha
clc
jge
call
ficoms
fmuls
jnp
mov
push
mov
out
inc
aam
jl
loop
loope
movsl
jnp
insb
in
rorb
pop
mov
test
mov
pop
hlt
imul
push
xor
shl
pop
test
les
or
xor
stos
cmc
dec
pop
arpl
push
xlat
clc
xchg
xor
fsubl
add
xor
daa
dec
dec
sub
aad
test
sahf
adc
push
cmp
adc
rcr
clc
push
daa
lcall
adc
insl
imul
mov
xchg
fdivl
pop
jle
dec
jg,pt
fdivr
rcll
imul
insb
pop
out
jle
or
push
sbb
data16
mov
ret
sbb
xchg
jbe
add
and
test
mov
lods
ja
or
sub
aaa
adc
xor
loopne
movsl
ret
loope
pop
or
mov
mov
popf
fisttps
or
mov
and
ljmp
mov
inc
inc
popa
jecxz
in
push
out
xor
pop
or
jns
mov
es
sub
fstpt
sbb
xor
or
out
mov
dec
in
mov
push
sarl
ror
xor
in
aad
fucomi
xchg
sbbb
fildll
lods
xchg
es
push
adc
aad
scas
inc
imul
mov
mov
aam
insb
and
cmpsl
js
and
sahf
call
dec
xor
and
aam
fldt
sarb
rcrl
in
clc
movsb
sahf
xor
and
xlat
cmp
outsb
bound
cmpsl
mov
pushf
fs
jnp
fistl
gs
inc
in
mov
push
pop
sub
mov
loopne
int
push
sub
jle
jb
fldcw
sub
fsubrl
jl
lods
decl
push
mov
and
out
xchg
shll
hlt
cld
cmp
outsl
stos
out
cmp
jno
lret
arpl
add
jb
xchg
ljmp
mov
push
push
jbe
jnp
fisubl
addl
cmc
lahf
sub
std
stc
lds
shlb
outsb
scas
shrb
inc
mov
ja
cld
out
mov
sub
stc
popf
cwtl
das
or
dec
add
jmp
inc
mov
js
fnstenv
out
fsubl
add
sbb
daa
add
lods
roll
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
out
in
adc
cli
adc
ds
mov
mov
int
push
pop
fsts
popa
repz
scas
test
incl
xchg
push
xlat
dec
clc
pop
and
dec
xor
mov
push
cmpsb
fwait
jecxz
dec
and
jl
inc
gs
ds
test
mov
cwtl
sbb
pushf
jmp
aas
jl
jp
faddl
mov
mov
sub
xchg
and
test
add
pop
push
arpl
mov
push
mov
test
mov
fcmovnbe
add
mov
mov
cmp
and
pand
cmc
sbb
sahf
mov
inc
sahf
inc
push
push
movsl
ja
sahf
ss
addr16
dec
negl
sub
push
xchg
fnstcw
popa
fistpll
pop
sub
mov
pmaxsw
pop
clc
enter
addr16
out
stos
mov
mov
push
push
into
mov
sarl
and
cmpsl
mov
xchg
out
ljmp
and
ret
mov
pop
mov
outsb
add
jne
sbb
pop
cli
enter
pop
fcmovnu
adc
stos
jnp
scas
jno
cmp
or
pusha
mov
nop
outsl
mov
cli
jns
out
and
adc
cltd
jne
scas
lcall
xor
cltd
mov
bound
lret
pop
jo
jge
push
rorl
cld
ror
push
fiaddl
js
sub
sahf
imul
addb
test
pop
cmp
jnp
sub
jl
aad
js
repz
pushf
push
or
ss
sahf
cmp
cmpsb
add
xlat
enter
mov
dec
in
lock
push
lock
pushf
or
inc
xor
add
mov
push
pushf
lock
push
or
enter
add
out
aam
aad
fsubs
mov
fdiv
jno
push
mov
mov
ret
mov
or
into
daa
fwait
mov
movsb
mov
and
push
adc
sub
outsb
lret
pop
rcrl
push
aaa
xchg
int3
xchg
mov
mov
loopne
cmp
mov
cmp
mov
rolb
jecxz
add
shlb
pusha
pop
inc
adc
int3
xchg
xchg
dec
inc
cli
push
sub
or
in
sahf
iret
das
pop
imul
insb
sti
cltd
mov
xor
jg
mov
cld
inc
xor
sub
xchg
pop
mov
add
push
decb
shrb
mov
push
mov
bound
pop
jb
les
aas
mov
popa
enter
sbb
xlat
jecxz
cmp
repnz
insl
mov
push
pop
pop
movsb
std
adc
hlt
dec
das
jge
sub
lcall
andb
cmp
pop
lea
xchg
jmp
or
hlt
inc
mov
cmp
shlb
xor
icebp
leave
cmpsb
pop
inc
jns
idivb
into
lret
cmp
dec
addr16
mov
orl
adc
lods
in
xchg
and
sbb
cld
jl
push
dec
mov
push
mov
orb
lcall
imul
divl
movsb
test
pop
aaa
incl
lret
mov
adc
push
std
push
push
loop
mov
mov
mov
fwait
bound
les
repnz
adc
jge
push
int3
pop
or
or
mov
flds
test
int
jmp
movsl
popl
xchg
cwtl
shl
xchg
sti
pushf
fistl
enter
cmp
sbb
push
inc
sub
dec
scas
filds
jae
and
outsb
xlat
cli
jp
arpl
out
add
enter
push
fldt
cmp
jno
out
add
xor
jge
push
inc
cmpsb
test
mov
fs
sub
jae
mov
or
dec
cmc
push
adc
or
xchg
adc
nop
push
xor
in
shr
xor
or
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
orl
xchg
add
ljmp
or
addr16
rcll
andl
addr16
xchg
pushl
mov
push
cmc
or
mov
insb
jo
in
cmpsb
push
pop
mov
movl
mov
xchg
insl
mov
shr
aam
repz
xchg
cmpsl
mov
pushf
les
movsb
push
xor
divl
arpl
mov
jnp
add
jmp
and
mov
sbb
sub
sub
sahf
insl
and
shlb
popa
mov
jnp
pop
cmp
xor
xchg
mov
ljmp
jecxz
push
adc
addl
pop
jae
inc
and
ljmp
leave
cmp
shll
enter
xchg
mov
xor
xchg
push
sub
aad
pusha
in
popa
mov
inc
sub
roll
jge
add
jp
sbb
push
adc
pop
mov
mov
ficoml
inc
das
fdivrl
clc
sti
mov
shr
icebp
lret
addb
jp
call
js
lcall
add
xor
or
aad
mov
aam
divb
cmp
jecxz
mov
add
xchg
imul
sub
inc
jp
scas
testb
push
jecxz
cs
pusha
push
mov
lock
sbb
mov
cs
push
mov
inc
lods
int3
mov
inc
xor
cld
rcll
into
jbe
movsl
xchg
jns
dec
iret
jnp
rol
fwait
mov
pop
out
loope
mov
cmp
jns
dec
sub
pop
pop
shl
jo
add
cld
icebp
in
movsl
adc
xchg
jne
sbb
inc
out
scas
ljmp
inc
mov
ror
jb
stos
push
cmpsl
loope
push
xchg
sub
test
push
mov
jg
dec
mov
mov
mov
mov
sub
loope
lcall
dec
dec
add
sbb
ja
xchg
xor
mov
rcr
cmp
mov
pop
xchg
dec
hlt
out
jno
jp
ret
mov
scas
sub
cmp
in
leave
adc
mov
mov
jbe
divl
pusha
aas
jne
add
add
pop
fimuls
inc
je
mov
cltd
fldenv
xor
xor
fwait
imull
idiv
push
cmpsl
dec
clc
lahf
push
fldenv
dec
sbb
jne
push
or
sub
push
fcmovnb
out
pop
sub
arpl
rcll
imul
addr16
jl
pop
mov
cmove
dec
inc
inc
mov
inc
negb
lds
xor
outsb
fwait
or
jbe
add
dec
adcb
aas
rorl
shlb
std
lret
orb
nop
lods
shll
push
sti
xor
std
adc
xor
test
ja
sub
and
pusha
pushf
fildl
sti
sub
je
cmc
imul
pop
jmp
inc
mov
push
add
add
mov
or
add
call
xor
jle
jmp
mov
xchg
and
call
jbe
imul
jle
in
daa
pop
nop
popa
mov
in
sub
or
aaa
mov
push
movl
loop
ret
adc
sbb
out
in
out
mov
sbb
cmpsb
in
lahf
xchg
sub
inc
jl
insb
mov
ja
jle
or
pop
push
and
test
mov
push
lds
imul
mov
in
sbbb
in
push
sub
pop
mov
push
mov
pop
out
mov
ret
subl
sbb
fdivl
pushf
and
push
and
cwtl
mov
mov
xlat
pushf
aad
outsb
nop
xor
int3
repz
or
jb
loope
inc
add
mov
sub
adc
lock
and
and
cmp
scas
sbb
mov
mov
xor
addl
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
scas
xor
push
jg
adc
cli
adc
lods
xchg
xchg
pop
lcall
push
jns
jl
out
sbb
js
jbe
pop
shlb
lods
add
cmp
test
cmp
sti
or
cmpsl
test
out
push
insl
cmp
dec
pop
push
inc
add
sbb
xchg
sub
push
jns
dec
lods
mov
pop
inc
sarb
inc
pop
add
repnz
dec
jp
or
js
push
fstpl
ljmp
iret
push
add
das
jo
dec
ret
pop
pop
jae
add
cmp
or
mov
out
or
sub
repnz
sbb
aas
arpl
sbb
inc
ret
or
stos
sbb
push
ret
out
jecxz
cmc
repnz
cmc
test
aad
in
sub
push
add
pusha
pop
fmul
aas
xorps
sub
or
mov
add
mov
cmp
hlt
clc
stos
shrl
arpl
and
push
or
add
jle
repz
jg
ret
bound
sbb
mov
cmp
pop
pushf
lock
mov
data16
jae
push
aad
jb
mov
pop
stos
arpl
fcoml
popa
adc
jl
or
int
xlat
fmul
push
stos
xor
js
test
sub
insb
cmpsl
outsl
sbb
lods
mov
loop
inc
push
stos
insb
test
in
mov
test
fs
in
xchg
pop
ficompl
push
mov
and
mov
dec
in
cmp
int3
pusha
in
sar
movsl
jbe
jle
adc
bound
aas
sbb
add
scas
adc
outsl
mov
xor
xor
inc
shlb
rorb
cmp
loope
fdivrl
dec
or
ja
insl
pushf
jno
dec
loope
movsb
test
stos
push
stc
pop
popa
lods
sub
clc
fsubs
fistpl
in
rclb
enter
clc
dec
aam
shl
xorb
add
mov
mov
cmpsb
adc
out
and
xchg
pop
jns
xor
or
dec
add
xor
xchg
xchg
mov
mov
shr
and
cltd
push
or
and
imul
test
jno
dec
adc
outsl
pop
dec
lret
xor
dec
in
mov
lret
add
roll
dec
arpl
out
scas
sbb
out
adc
mov
ds
popa
out
dec
int
push
sbb
pop
inc
sti
dec
int
aad
in
in
inc
rcrl
lea
inc
sbb
cmp
test
and
sbb
fisubrl
lahf
stos
ds
inc
fiadds
xlat
push
inc
mov
test
pop
imul
jbe
shll
loop
mov
movsb
mov
adc
add
jecxz
fwait
add
push
insb
fstpt
xchg
sub
xorb
imulb
movsl
daa
call
or
mov
inc
add
add
cmp
inc
popf
xor
rolb
xchg
out
jge
mov
cmpsb
xlat
test
sub
push
xor
inc
dec
int
push
cmp
shll
ret
and
cmpb
push
sbb
jmp
ror
mov
mov
arpl
pop
add
aaa
das
push
loope
jae
push
insl
sub
repz
mov
jge
dec
dec
into
scas
mov
xchg
xchg
push
mov
mov
and
inc
xor
cmp
insl
movl
sahf
push
lea
sub
nop
jno
imul
pop
jp
call
pop
sub
sub
jb
mov
pop
adc
int3
aas
or
mov
sub
int
cmp
shlb
pushf
fisubrl
mov
jg
scas
mov
loopne
testb
mov
sub
ds
xchg
imul
std
lods
push
ja
xor
in
shrl
mov
xor
imul
cltd
fimuls
icebp
push
movl
mov
mov
or
shrd
shr
and
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
out
ror
stc
lock
popa
cmpsl
mov
fdivp
inc
pushf
cmp
aas
std
mov
out
mov
xchg
sub
sbb
and
inc
pop
dec
in
outsl
fists
jge
jmp
mov
loope
in
int3
dec
aam
adc
jle
sub
jmp
mov
out
add
mov
addr16
push
lds
es
sbb
js
push
inc
cwtl
sub
push
and
loopne
lea
and
adc
sub
push
inc
subl
int3
and
test
mov
cwtl
add
pop
sbb
inc
mov
notb
inc
dec
sti
outsl
pop
pop
jge
je
jp
in
mov
adc
mov
iret
mov
sub
js
int3
cmpsb
gs
xor
xchg
mov
dec
pop
jnp
in
test
jo
sub
lods
scas
jle
mov
int3
movsb
push
pop
adc
mov
push
adc
mov
mov
dec
pop
ret
adc
lods
das
pop
dec
mov
scas
xor
movsl
cld
fwait
jnp
fwait
pop
xchg
in
cld
jl
movsb
sbb
mov
xchg
inc
fstps
scas
mov
sbb
lcall
out
push
jno
bound
in
sbb
out
push
repz
shrl
or
cmpsb
in
xchg
and
inc
mov
or
ljmp
fiaddl
jno
cmp
ss
out
addr16
bound
gs
cmp
jo
ret
loop
insl
testb
insl
inc
xchg
push
push
lea
and
xlat
ljmp
sub
xchg
je
test
shl
xchg
es
push
outsl
repnz
stc
out
stc
mov
test
xor
dec
sub
jno
call
rclb
pop
aad
lret
inc
adc
pushf
popf
stos
subb
adc
inc
aam
outsb
jb
leave
mov
fiadds
push
jae
xor
repz
and
xchg
inc
xchg
pop
or
add
xchg
xchg
jae
sahf
fstps
lret
or
push
test
or
inc
clc
loopne
mov
cmp
jmp
fsts
sar
rcrl
jae
pushl
das
xchg
lret
push
mov
faddl
std
mov
fidivs
mov
nop
mov
sub
icebp
gs
imul
mov
or
xor
xchg
add
push
and
sub
into
jbe
lret
xchg
fwait
jmp
fiadds
and
push
push
mov
mov
push
xchg
ret
icebp
je
or
outsl
ret
xor
and
pop
push
imul
ret
in
add
mov
subb
xor
shrl
lock
push
add
lods
jne
sahf
pop
sbb
fmul
mov
mov
addr16
ret
adc
xor
repnz
fisttps
cld
pop
js
pop
add
and
xor
adc
mov
dec
add
vmread
add
cmp
inc
dec
adc
and
pop
mov
pop
pusha
adc
push
inc
sub
insl
enter
lods
cmp
adc
jmp
and
adc
inc
iret
fwait
add
or
mov
out
rolb
lods
mov
test
dec
inc
sub
or
gs
iret
sbb
push
mov
jmp
hlt
test
in
je
cltd
mov
dec
push
std
push
push
stos
dec
or
repz
xchg
movsl
nop
out
dec
xchg
sub
cmp
in
push
sbb
push
dec
loope
fidivl
hlt
pop
cmp
mov
enter
ret
arpl
sub
shl
or
testl
mov
pop
xchg
les
cltd
jno
shl
imul
jle
int3
jb
pusha
push
in
imul
mov
sub
into
addr16
mov
sbb
rcl
aam
dec
rcrl
outsl
or
jmp
push
push
stos
sti
scas
or
scas
rorl
inc
add
roll
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
mov
cli
adc
sbb
leave
adc
vmovlpd
insl
mov
cmpb
mov
mov
jge
add
aam
add
into
daa
jmp
lcall
enter
mov
push
vcvtpd2dqx
repz
icebp
mov
pop
ljmp
mov
mov
inc
sub
sbb
xchg
jg
fists
jns
lret
pop
outsb
adcb
lds
in
dec
js
mov
mov
sub
push
enter
or
push
fdivr
pop
dec
jg
xchg
fdivs
enter
mov
xchg
addl
xor
out
inc
mov
lods
enter
mov
loope
notl
bound
aad
popa
mov
sbb
cmp
push
lcall
fmuls
mov
fstps
subl
or
rcll
mov
inc
lods
and
add
mov
sbbb
shrb
push
cld
xor
mov
call
es
mov
fadd
cmp
nop
mov
rorb
push
jecxz
jge
xchg
addr16
lret
pop
stc
mov
push
jae
add
mov
inc
dec
jb
cwtl
sub
inc
les
sti
leave
lahf
lahf
sub
jmp
mov
pop
jmp
icebp
decb
enter
push
movsl
stos
dec
fisttpll
fbstp
xchg
mov
or
adcb
push
mov
stos
inc
cli
pop
xlat
outsl
lahf
cs
ret
js
cmp
ja
fwait
bound
push
jmp
mov
les
cmp
jo
int3
aas
cs
lods
jne
pop
dec
jmp
pop
push
xor
scas
sarb
xlat
fimull
pop
push
cltd
push
bound
sbbb
jae
icebp
movsl
or
mov
sub
and
std
xor
rclb
jns
pop
ret
and
push
fsubp
push
lahf
rcrb
xchg
mov
pusha
adc
sti
add
cld
shll
xor
lret
mov
push
fisubrs
in
sahf
jno
std
sub
jmp
inc
out
xor
cmp
ucomiss
shr
mov
pop
out
cmc
xchg
pop
bound
mov
lea
int3
inc
sti
imul
dec
or
jge
and
mov
or
xchg
push
fdivr
mov
or
ljmp
int
pop
push
arpl
jmp
inc
push
mov
cmpsb
test
dec
loope
icebp
cmpb
mov
aad
test
faddl
sbb
shlb
repz
jg
clc
pushf
xchg
push
leave
adc
mov
adc
arpl
inc
and
push
add
xchg
mov
pop
outsl
out
cld
leave
xor
pop
jecxz
xchg
push
push
pop
ja
aaa
xchg
es
ret
loop
ja
ja
jbe
aaa
jne
lcall
cmp
mov
dec
icebp
push
fs
cwtl
pop
mov
call
loop
inc
mov
cmp
stos
mov
inc
and
mov
in
jl
xchg
in
punpckhwd
out
jno
sbb
movsl
test
outsb
mov
in
sbb
cmpsl
fcoml
leave
xor
xchg
adc
ljmp
pop
pop
jae
leave
das
add
mov
xchg
movsb
mov
lea
int3
mov
dec
movsb
in
mov
sbb
push
fsubrl
jmp
fists
dec
xor
sub
fimuls
fucomip
imul
inc
mov
outsb
jbe
cmove
or
mov
lods
sahf
mov
iret
jl
fistps
inc
add
jecxz
mov
mov
pop
aas
push
inc
push
rcrb
les
fmuls
push
pusha
and
adc
testl
aam
xorl
movl
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
ret
and
pop
adc
aaa
cli
adc
cmp
jmp
cwtl
daa
jno
les
int3
cmpsl
jbe
sub
xor
test
mov
bsr
bound
inc
cmp
fcompl
sahf
movsb
out
xchg
fildl
test
in
jnp
xchg
ljmp
jecxz
add
and
mov
dec
cmp
dec
int
and
push
xorl
mov
popf
es
roll
fdivl
jae
push
dec
mov
test
or
pusha
push
cmpsb
imulb
repz
dec
test
push
test
cmp
push
fimuls
xchg
push
ljmp
movsb
pop
jne
inc
sti
dec
mov
pop
int3
adc
fwait
aas
mov
jmp
add
andb
mov
xchg
dec
jo
cmp
push
subb
sbb
out
test
hlt
mov
scas
test
test
sub
xchg
inc
adc
in
sub
rclb
ja
dec
push
add
and
pusha
jns
push
mov
pop
jno
mov
aam
loopne
stos
repnz
pop
xchg
adc
shlb
fnsave
push
shrl
jp
mov
jbe
lcall
fsub
pusha
pop
xchg
popl
out
cld
test
pushl
mov
lret
clc
lods
sarb
js
add
pop
xchg
outsl
mov
leave
in
sahf
or
bound
and
dec
xlat
mov
lds
pop
lahf
scas
jae
ret
mov
inc
sub
fidivs
mov
mov
ret
nop
jmp
jb
mov
dec
lcall
arpl
out
pop
into
test
pop
aam
and
test
jg
dec
test
xor
inc
or
mov
aaa
mov
aam
adc
std
in
insb
fidivrl
daa
sub
cmp
dec
repnz
sbb
stc
mov
xchg
mov
pop
xchg
cld
push
jnp
push
imulb
sbb
and
lea
mov
ja
push
clc
cmc
mul
fldl
outsb
mov
xor
stos
adc
sti
in
mov
jmp
adc
dec
ss
jns
dec
test
fstps
adc
xchg
imul
or
ljmp
add
fdivrs
adc
adc
or
sbb
aam
sbbl
adc
mov
fcmovnb
mov
stos
mov
test
cmc
jle
loopne
pushf
roll
incb
inc
in
dec
fucomi
cld
aad
jns
test
repnz
in
andb
xchg
or
outsb
movsl
xlat
xor
push
jecxz
xlat
js
in
jg
lds
fs
push
fsubs
daa
stos
and
jno
cs
jo
or
mov
lcall
shlb
push
xor
cli
mov
lret
mov
jg
mov
jbe
mov
mov
testl
mov
mov
icebp
test
jo
rorb
xor
cs
cmc
in
and
movsl
dec
leave
pop
std
pop
scas
push
icebp
fmull
sub
sub
and
hlt
mov
pop
xor
aas
sub
jbe
loope
les
loope
sbb
sti
das
out
cld
fsub
lahf
popf
push
adc
lock
fildl
and
outsb
lret
movsl
push
cmp
andl
or
mov
sub
inc
push
ds
mov
inc
pop
inc
pushf
mov
fsts
jg
dec
test
sbb
mov
comiss
and
lods
test
fidivrl
push
rolb
mov
aaa
mov
cmc
arpl
xor
adc
add
decb
pop
insb
arpl
jno
loope
in
xor
push
lahf
sub
pusha
and
adc
jmp
int
pushf
ljmp
add
lock
in
idiv
push
loop
shrl
and
add
scas
in
imul
sbbl
sub
jmp
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
sbb
ljmp
cli
adc
test
push
xchg
mov
or
shrl
mov
iret
es
pop
in
jle
or
clc
cmp
mov
dec
fwait
fs
push
push
clc
loope
lret
cli
cmp
ss
arpl
pop
dec
mov
adc
xor
inc
leave
jno
je
outsl
add
ret
adc
imul
jno
xchg
xchg
pop
jle
mov
aad
into
aad
shll
ljmp
jp
cwtl
mov
stos
cmp
imul
and
mov
add
dec
popf
xchg
xchg
jle
inc
out
mov
in
addr16
mov
mov
jg
xor
inc
je
jbe
mov
jbe
mov
scas
mov
push
sub
lea
xchg
stc
mov
xchg
add
sbb
dec
cmp
mov
sahf
neg
add
pop
add
add
loopne
cmp
xor
xchg
lahf
nop
fldt
sbb
mov
hlt
pop
stc
push
cmpsb
dec
aam
sbb
sub
mov
or
lret
not
mov
xchg
mov
repz
pop
cwtl
call
pop
out
add
inc
inc
ljmp
adc
pop
cmp
lcall
cmpb
cmc
fistpll
cmpsl
in
fcoml
mov
inc
loope
jnp
jne
fnsave
js
lods
cmpsb
sbb
sbb
in
cmp
jbe
xchg
or
add
out
push
xlat
sub
mov
pop
iret
insb
xchg
dec
add
or
add
cs
adc
adc
jmp
jg
pusha
ljmp
mov
int3
jno
xchg
jnp
or
inc
xchg
dec
xchg
orb
adc
cli
cmp
incb
mull
dec
sahf
push
push
sub
je
scas
outsb
iret
int
loopne
pop
xor
imul
es
daa
out
cmpsb
pop
loope
mov
add
imulb
sbb
cmp
push
jmp
inc
sub
mov
js
push
faddl
movsl
pop
cli
je
jg
sub
pop
sarb
or
xchg
loopne
into
push
push
call
sti
push
mov
and
aad
push
dec
ss
or
mov
pop
leave
fwait
sbb
ror
cmp
fmull
pop
push
aam
cmpsl
lds
incb
jecxz
mov
jns
inc
sbb
popf
sub
jbe
cmp
adc
into
mov
in
and
adc
pop
sbb
push
cmp
jle
bound
mov
jge
movsb
pop
xchg
xchg
lea
push
mov
data16
out
loopne
mov
jne
negl
sub
outsb
inc
hlt
ja
ss
out
mov
add
out
cmp
or
adc
lcall
pop
push
or
lock
cmp
test
outsl
popf
loope
notl
lds
xchg
xchg
jge
jl
fs
lods
and
and
rcrl
out
ds
enter
xor
xlat
mov
lret
loop
andl
inc
out
inc
mov
or
fldcw
fists
out
adc
inc
test
icebp
imul
or
xchg
add
mull
dec
fwait
mov
jne
lret
or
call
insl
mov
sbb
ds
cbtw
int3
mov
outsb
roll
cltd
scas
aad
fwait
iret
mov
mov
push
adc
test
cld
mov
cmp
and
movb
out
imul
inc
fcmovne
adc
pop
and
jne
cltd
in
loop
push
xchg
cmp
or
jns
mov
mov
xor
popf
push
enter
aas
xor
shl
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
imul
test
sbb
add
add
sub
lock
sub
add
xchg
pop
inc
jne
add
inc
inc
mov
mov
in
mov
in
push
popf
int3
pop
xorl
cmp
test
es
scas
xlat
jbe
fdivs
add
pop
inc
rolb
lret
adc
in
mov
jo
aas
mov
jns
sbb
pop
js
shl
inc
outsb
and
js
cmp
pop
and
xor
sub
or
bound
xchg
aaa
adc
cmp
in
dec
test
adc
sbb
mov
inc
pop
mov
inc
sahf
aaa
xchg
pop
push
cmp
test
cmpsb
std
fsubrp
pop
lock
dec
jns
insl
movsl
pop
jle
pop
mov
cmc
roll
fstps
shrl
imul
cs
mov
add
popf
mov
ds
dec
and
imul
test
cwtl
push
or
out
dec
aaa
xor
lahf
xor
and
outsl
je
cmpsb
push
or
cmc
push
mov
jle
test
lahf
dec
cltd
sub
xor
in
dec
sub
test
cmp
imul
inc
cmp
stc
inc
pop
mov
adc
das
outsb
inc
cmp
imul
or
les
cmpsb
mov
push
fmul
outsl
cmp
pop
gs
mov
outsb
arpl
push
xchg
cli
sahf
xlat
pusha
pop
dec
add
mov
add
fsubl
arpl
movsb
repz
cmpsb
fistps
out
fbstp
in
fstl
test
in
js
enter
sub
es
sub
icebp
jp
push
or
mov
movl
out
adc
loop
adc
sbb
shrb
xchg
in
or
pusha
sahf
fldcw
ds
mov
popf
or
xchg
fdivs
fisubl
lea
mov
cmpb
ficompl
or
stc
and
jae
lock
push
nop
lahf
lret
cmpsl
jp
ss
mov
into
adc
scas
iret
in
rcrb
mov
cltd
xlat
lcall
mov
mov
inc
mov
aas
mov
mov
dec
mov
and
icebp
out
shll
cmpl
cmpl
adcb
pushf
jp
or
fs
movsb
daa
or
aaa
inc
imul
cmp
out
push
adc
es
xchg
ret
jae
xor
rcrl
and
in
mov
loope
or
cwtl
sub
push
ret
inc
sbb
mov
pop
sbb
or
mov
hlt
xor
enter
or
sbb
cmpsb
imul
mov
je
add
lds
adc
cmpsb
sub
les
jge
cmpsl
xchg
pushf
out
popa
add
jae
mov
nop
pop
push
mov
leave
jg
sbb
sub
jp
inc
push
pop
loopne
insl
mov
aad
rep
mov
int3
inc
and
cmc
aas
sbb
xlat
push
pop
jno
xor
sbb
insb
mov
pop
mov
mov
mov
add
fs
aam
xor
out
iret
gs
cwtl
jne
in
pusha
fxch
mov
dec
in
fs
aam
outsl
jae
mov
cmp
icebp
ret
stc
pop
ret
loop
lods
push
xchg
inc
hlt
test
xchg
or
and
cs
add
clc
das
movb
sbbb
jne
jp
data16
mov
sbb
das
or
iret
pinsrw
outsl
xlat
jmp
aam
int
fdivrs
aaa
icebp
mov
cmp
insb
mov
fmull
mov
popa
and
mov
mov
dec
int
js
fldl
loope
and
les
push
adc
cmp
and
fsubl
arpl
push
jnp
pop
aaa
mov
arpl
subl
add
jmp
push
add
sbb
ret
cmp
add
movl
add
loope
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
test
adc
cli
adc
mov
lcall
inc
cs
push
ljmp
ficoms
repnz
lea
sbb
dec
pop
aas
adc
mov
jns
xor
ljmp
in
sub
push
push
mov
xchg
out
push
fidivrl
mov
cmp
jne
fdivr
pop
addb
xchg
pop
push
sub
inc
iret
pop
jnp
pop
jne
jmp
push
cwtl
push
out
adc
in
pop
xor
hlt
jg
je
cmp
cmp
sahf
push
mov
out
test
test
ss
fisttpll
jp
mov
iret
lret
imul
xorb
ja
push
pop
rorb
cmpsb
mov
lcall
jnp
jae
and
or
sub
pop
xor
in
sbb
xor
clc
mov
enter
sti
jecxz
xchg
fs
cmp
add
les
xchg
lret
dec
mov
lock
cmp
sub
push
sbb
rol
dec
dec
test
rol
inc
xchg
mov
xor
mov
cmc
sbb
xor
popa
cmp
loop
movsl
in
jno
cmpsb
xchg
cli
out
adc
lcall
push
loop
shl
out
lock
mov
xchg
into
les
aas
arpl
scas
jb
xor
lret
cwtl
pop
ret
clc
jo
mov
pop
movsb
ret
pop
stc
xchg
aad
xchg
movsb
test
and
dec
jl
leave
imul
adc
dec
lea
stos
test
fxrstor
icebp
ret
enter
insb
push
sbb
add
push
mov
dec
and
ret
mov
adc
mov
lods
dec
inc
das
add
dec
mov
es
rcll
mov
imul
stc
cmp
dec
cmp
mov
into
fidivrs
pop
xchg
mov
pop
inc
and
jmp
or
mov
cmp
stos
push
jle
idivl
nop
push
fdivrl
negl
push
cmp
das
shlb
jg
or
int
stos
dec
rcr
lock
bound
pop
mov
push
ss
popf
mov
push
jmp
aaa
sub
cmp
mov
sbb
cmp
mov
mov
movsl
xor
mov
jbe
dec
in
sub
pop
ficoml
jmp
fnsave
jmp
mov
idivb
fbld
mov
mov
stc
fcoml
ret
sbb
inc
lods
jno
scas
sti
aad
addr16
fs
enter
testb
add
or
cmp
mov
notl
push
push
push
pop
jne
movsl
sub
inc
shlb
xor
shlb
movsl
inc
cmp
inc
mov
inc
sbb
cmpsl
xchg
pop
cmp
addl
cmp
ret
xor
jae
std
or
and
in
dec
push
pop
mov
cmp
into
cld
mov
scas
xor
xchg
daa
push
bound
in
or
or
mov
aas
pop
enter
jbe
fstps
lods
repz
lcall
fsts
fstps
ljmp
push
pop
add
in
cmpsl
sbbl
pop
int
sub
xchg
push
push
orl
mov
jnp
cmp
and
int
and
xchg
sbb
and
sbbl
push
or
mov
dec
scas
into
cmp
aas
hlt
cs
push
enter
inc
pop
aam
pop
mov
test
xchg
clc
dec
xor
dec
sub
xchg
add
xchg
xchg
push
xchg
or
jne
neg
jg
xor
inc
and
in
and
out
mov
sub
inc
xor
stos
jmp
lea
push
ret
jo
in
pop
fstpt
inc
add
loope
mov
outsb
movsl
aam
lahf
adc
sbb
outsl
scas
sarl
jmp
jmp
add
rorl
mov
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
loop
mov
aaa
cli
adc
sbb
es
rcl
xchg
or
dec
mov
cmp
mov
shll
lods
cmpsl
cwtl
fnstenv
cmp
pop
pop
and
inc
push
fucom
daa
loop
dec
xchg
jle
jecxz
jnp
je
lds
call
cli
arpl
aad
jnp
cmp
stc
jp
loope
imull
xchg
mov
popf
adc
test
into
in
addl
xchg
adc
shll
lock
aas
icebp
test
xchg
jno
aad
les
aas
push
or
adc
cmp
sbbl
popf
dec
into
test
sub
adcb
rcrb
jmp
jne
and
cwtl
loopne
imull
int3
pop
neg
xlat
add
inc
sub
inc
mov
sub
in
push
lock
dec
mov
inc
pop
popf
repz
movsl
pop
mov
mov
mov
sub
stos
std
std
mov
into
xor
out
cs
fidivrs
pushf
cs
and
mov
int3
movsb
adc
sub
in
cmpsl
push
jne
rcl
push
ljmp
jecxz
cltd
lcall
in
scas
out
xchg
inc
aas
movb
jae
std
add
shll
out
and
lock
outsb
inc
mov
pushf
sub
ljmp
cmp
aas
mov
and
add
cmp
fidivs
insl
mov
jmp
xchg
xor
scas
enter
mov
pop
adc
push
xor
adc
lods
mov
xor
or
add
cmpsb
insl
mov
in
push
push
andl
mov
flds
leave
dec
dec
jmp
xchg
cwtl
in
sbb
fbstp
clc
push
sbb
fists
xchg
inc
clc
in
mov
fcmovnb
sub
lahf
mov
movsb
hlt
mov
inc
adc
lods
pop
sahf
cwtl
in
mov
test
ljmp
gs
adc
xor
and
mov
adc
loopne
in
pop
add
in
sub
mov
jge
mov
push
mov
lcall
or
out
dec
mov
adc
inc
jae
out
das
mov
lea
xor
xor
out
sbb
lea
fstpl
mov
push
out
sbb
lret
xor
dec
movsb
push
and
jne
lret
mov
std
pop
in
mov
xor
ret
cmp
arpl
in
add
cmc
push
stos
sti
into
lahf
aam
aam
pmuludq
jo
push
call
ljmp
cmp
mov
movsb
cs
or
sub
lock
fnstsw
jo
inc
fiaddl
fs
ds
icebp
ret
push
movsl
adc
pop
push
mov
sar
jae
cs
lods
aam
mov
pop
fidivl
fdivs
pop
add
xchg
out
aam
mov
fists
inc
pop
or
adc
mov
cmp
or
sub
jg
js
mov
lahf
pop
xchg
mov
mov
xchg
repz
clc
in
mov
mov
test
push
mov
mov
cmp
ja
adc
or
scas
idivb
ja
lret
cmp
or
fwait
jns
xor
push
shlb
outsb
hlt
push
out
adc
flds
mov
test
mov
jle
stos
sbb
sub
cltd
lods
mov
xor
mov
in
cmp
outsl
fcomps
frstor
loopne
mov
movsb
and
or
jne
fnstcw
sbb
dec
orb
xchg
shrl
and
scas
jle
push
and
push
jo
lea
sbb
jg
rol
scas
cli
lret
call
sbbb
jmp
out
dec
hlt
bound
fwait
shrb
adc
and
push
sti
sbb
icebp
lret
test
roll
pop
jmp
pop
mov
mov
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
dec
mov
adc
cli
adc
flds
loope
push
jg
or
mov
pop
scas
mov
aad
dec
stos
add
mov
pop
push
cmp
push
shrl
insb
daa
xlat
or
cwtl
jns
add
daa
sub
ja
pop
sbb
in
cld
jb
rcrl
mov
fwait
cmpsl
mov
xor
aam
jecxz
ffreep
cmp
cli
mov
movsb
sbb
iret
pushf
inc
dec
aad
xor
shll
ret
inc
imul
daa
std
fstpl
insb
arpl
jno
push
cmp
ja
fists
mov
xchg
pusha
punpckhdq
lds
out
lea
adc
pop
mov
mov
mov
enter
or
bound
cli
adc
jg
pop
jmp
repnz
mov
add
xchg
idivl
in
push
push
das
xchg
hlt
jecxz
cmp
xchg
cmc
test
mov
add
mov
jns
call
pop
jae
out
ficompl
xor
stc
imul
stc
pop
and
ljmp
out
mov
jle
mov
out
pop
dec
insl
push
jecxz
imul
popa
dec
sub
inc
lds
test
ja
out
or
jno
xchg
push
jb
cmp
and
sbb
cmp
divb
bound
sbb
lds
and
inc
xchg
fisubl
test
sahf
call
mov
sbbb
jnp
mov
push
stos
mov
pop
jb,pt
stos
xchg
mov
jmp
fdivrl
xor
pop
outsl
sub
sahf
in
leave
inc
es
popf
or
pop
ja
mov
orb
popa
jg
push
cmp
adc
xchg
sbb
cmpsb
in
and
or
jecxz
iret
lock
mov
mov
mov
mov
lahf
sbb
lea
pop
bound
cli
js
jo
jge
loope
or
insl
test
xor
in
std
mov
mov
daa
clc
das
lock
incl
mov
push
mov
adc
xorb
adc
fdiv
cmpsb
outsl
insl
dec
or
lret
xor
popa
jo
fs
mov
pop
sub
xchg
xchg
out
add
in
dec
jb
pop
sbb
out
fnstenv
data16
mov
add
lods
xor
stos
sbb
mov
adc
push
or
or
xor
shlb
mov
mov
mov
xlat
add
out
rorb
jle
mov
push
or
mov
cmp
pushf
inc
flds
ret
nop
into
push
cmpb
cs
lds
inc
rol
mov
push
mov
mov
daa
jp
in
or
scas
lret
outsl
insl
and
xor
ss
push
cmp
and
lret
sub
ljmp
adc
hlt
add
sub
sbb
shlb
pop
movsl
jbe
mov
pop
lods
pop
cli
scas
int
cmp
adc
cmp
sbb
mov
xor
fstpt
popf
lahf
cmp
enter
pusha
mov
cli
fs
lret
in
dec
jbe
push
sbb
xor
iret
js
inc
jnp
cmp
mov
mov
out
xchg
daa
aam
push
stos
fisubrs
sub
sbb
sub
dec
outsb
xlat
mov
or
push
ror
cltd
mov
cmc
cwtl
xorb
mov
bound
lcall
sub
pop
fistps
adcb
pop
cmp
cmp
xchg
aad
mov
out
lret
je
sbb
sahf
add
bound
ss
push
sbb
fidivrl
aam
sbb
sbb
rclb
dec
ret
or
sbb
pushf
out
push
mov
adc
pop
and
and
rorb
je
call
ljmp
add
mov
sarl
dec
pushf
hlt
or
clc
xor
xor
cmp
stos
sarb
ds
subl
or
inc
mov
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
sahf
mov
push
xor
adc
cli
adc
dec
and
mov
sbb
mov
idivl
clc
mov
leave
and
cmc
fists
test
inc
test
cli
jns
sub
call
loopne
and
std
inc
imul
xchg
test
les
jle
jbe
xor
addl
bndldx
out
sbb
mov
and
push
cli
fwait
popa
dec
nop
jbe
cmp
or
aas
ja
fs
xor
ds
scas
in
leave
stos
cmp
popa
push
lods
mov
add
js
pop
das
repnz
daa
or
test
ffree
mov
subl
mov
dec
movsl
scas
repnz
mov
outsb
dec
pop
ret
ds
call
jmp
cmp
fistpl
add
in
cmpsl
push
repz
mov
lcall
cmp
inc
rolb
jns
mov
jmp
imul
mov
sub
inc
jmp
stc
mov
ljmp
xchg
adc
ljmp
push
sbb
pop
bound
add
rcll
shll
xchg
mov
daa
jb
ss
or
dec
aaa
mov
push
jle
lods
out
and
stos
xlat
rorb
mov
sbb
cmovb
loope
shrb
xor
shll
add
or
lcall
or
add
aas
pop
test
jb
xchg
fisttpl
add
shll
and
movsl
pop
insb
jae
fst
cmp
cwtl
xchg
mov
mov
jmp
mov
cmp
mov
clc
mov
test
in
test
cld
add
mov
cmpsb
cmp
int
ljmp
popf
or
adc
sub
push
inc
and
add
inc
lods
idiv
js
inc
out
hlt
mov
xchg
jno
dec
push
add
sub
gs
fsts
arpl
lds
cmp
xor
imul
sbb
movd
jmp
mov
xchg
dec
adc
mov
leave
xchg
xor
inc
ds
jp
cmc
clc
sbb
xor
mov
clc
or
and
cmp
push
adc
sub
das
aam
mov
in
iret
or
lret
loope
das
adc
inc
outsb
push
cmpsl
fsincos
js
out
inc
adc
data16
data16
mov
dec
mov
bound
cwtl
int
popa
mov
xchg
out
les
hlt
js
sti
xchg
push
arpl
stos
testb
adc
int
test
imul
fildll
inc
ds
sub
int3
stos
aaa
fildl
ds
and
lods
data16
jae
inc
inc
adc
push
ss
rcrl
inc
lock
addb
jge
cmp
cmp
out
lods
or
xor
inc
inc
and
imul
push
pusha
rclb
arpl
pop
cmp
add
add
mov
sub
push
mov
rclb
cmp
xchg
xchg
adc
adc
dec
cltd
in
xchg
stos
int
inc
nop
sbb
data16
push
adc
emms
shl
mov
bound
in
insb
add
cmp
inc
orb
in
sub
mov
add
inc
sub
xchg
mov
xor
cs
pop
mov
mov
ljmp
stc
xor
inc
push
outsl
xchg
adc
imul
rclb
sti
shl
loopne
notb
int
das
flds
mov
push
sbb
imul
sbb
mov
idiv
fldl
leave
adc
mov
cwtl
sbb
pop
sar
xor
test
js
fs
popf
mov
stos
fcoms
fldt
lods
mov
popa
dec
movsb
mov
sub
stos
jmp
dec
loopne
jnp
push
mov
les
mov
mov
shrd
shl
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
pop
jnp
pop
adc
aaa
cli
adc
stos
aas
nop
cwtl
or
int3
or
xchg
push
or
adc
movsb
xchg
cmpl
les
mov
push
mov
rorb
mov
nop
xchg
pop
ret
xchg
in
jbe
or
dec
sub
cwtl
dec
xor
mov
mov
or
pop
je
pusha
adcb
movsb
xor
jns
xchg
pop
sub
adc
jb
adc
dec
cli
shlb
sbb
add
dec
jns
gs
pop
scas
xchg
scas
sbb
jge
and
push
ret
xor
xchg
ret
and
jg
out
ja
pop
inc
lret
pop
lea
push
mov
je
icebp
or
testb
jmp
or
andl
mov
fnstcw
adc
pcmpeqb
insb
mov
push
icebp
adc
jle
xchg
inc
push
sub
jecxz
and
into
xchg
dec
xchg
push
mov
psraw
test
sahf
ljmp
xchg
gs
pop
mov
inc
jmp
lcall
aaa
mov
inc
dec
jb
bound
dec
xorl
xor
cmpsl
pop
dec
cwtl
cmpb
cmpl
xor
fdivrl
sahf
in
jl
ret
add
cmp
add
cmp
pop
pop
pop
fs
mov
inc
imul
mov
das
xchg
push
mov
sub
xlat
insb
fstl
xchg
xchg
iret
into
dec
adc
repnz
mov
push
add
jl
outsb
pushf
scas
cmpsl
cmpsb
icebp
shr
dec
add
icebp
cmp
xchg
push
add
cmp
adc
stc
pop
stos
xchg
mov
cli
cmp
mov
inc
in
fwait
sbb
mov
push
jne
pusha
fwait
cmpb
ds
add
mov
std
cwtl
mov
add
xchg
adc
pop
mov
outsb
es
fwait
ja
cmpsl
xchg
cmp
sti
out
sarb
lahf
jl
mov
int
or
sub
loope
popf
aaa
bound
movsb
jecxz
mov
xor
shr
jmp
gs
xor
cwtl
repz
jb
xchg
mov
adc
xor
xchg
lds
rcrb
mov
dec
sub
rorl
outsb
es
imul
out
jle
jb
aam
pop
cmp
dec
inc
outsl
cmpsl
xor
pop
repnz
lret
imull
fnsave
adc
cmp
dec
arpl
push
mov
lahf
jb
pop
mov
fs
negl
pop
pushf
arpl
in
cltd
dec
xchg
mov
push
cmpsl
add
push
jns
mov
in
jno
cmp
out
gs
out
popa
inc
ds
ss
jle
mov
repnz
or
rorl
neg
add
fcmovu
or
dec
pop
xchg
scas
loopne
outsb
ja
jbe
decl
repz
jbe
popf
or
cmp
mov
movsb
and
icebp
popa
or
sbb
pop
xchg
rol
and
dec
or
mov
or
out
movsl
mov
lods
fstps
cmp
aaa
les
or
lcall
xchg
outsl
in
sar
mov
and
shll
sbb
or
imul
push
rolb
jge
pop
xchg
push
movb
mov
add
mov
mov
lds
test
inc
leave
out
mov
imull
das
jns
cmpsb
fistps
xlat
les
pushf
jae
pop
add
out
add
mov
sbb
rcpps
daa
mul
push
cmpsl
dec
inc
comiss
out
pop
into
fwait
lods
or
mov
mov
fisubrs
cmp
loopne
dec
xor
push
cmpl
and
sar
push
push
xchg
xchg
mov
jecxz
popa
stos
cmpsb
aad
repnz
out
push
lret
xor
imul
mov
sbb
push
sub
test
jmp
add
sbb
mov
pop
push
xor
ficomps
adc
aaa
cli
adc
iret
mov
pop
mov
and
sti
pop
das
insb
xchg
mov
imul
imul
orl
enter
push
jne
push
mov
jae
xor
aad
sub
pop
push
loope
dec
push
aas
pop
xorl
mov
push
push
cli
or
and
pop
in
mov
mov
pop
pop
icebp
mov
dec
icebp
or
loop
push
cwtl
in
xchg
sbb
fdivrl
mov
cmp
dec
or
movsl
inc
jl
imul
cmpsl
push
sub
decb
mov
mov
pop
or
jne
lcall
loop
jl
xchg
add
xor
rorl
test
xchg
mov
loope
imul
mov
add
loope
inc
movsl
jo
cmp
sbb
fcomi
lcall
sbb
popa
aad
pushl
movsl
add
ds
sahf
adc
rcrb
and
pusha
pop
ljmp
lds
xchg
call
add
sub
stos
sbb
fwait
push
in
es
scas
clc
add
fbld
jb
sahf
sub
sbb
mov
dec
lret
in
xchg
aas
les
xor
insb
sbb
mov
rcll
out
mov
js
mov
fcmovu
leave
xchg
andl
outsb
aas
add
sub
dec
fistpll
fadd
mov
shll
cli
arpl
mov
fwait
mov
notb
mov
stos
push
lret
dec
fnsave
mov
dec
cmp
push
loopne
sub
adc
insb
in
in
fstl
idivb
mov
mov
cltd
mov
cmp
aaa
repnz
jl
movsb
scas
xchg
jne
lods
push
test
pop
xchg
mov
adc
cmp
imul
or
jo
pushf
and
into
cmp
adc
cmp
mov
in
lret
or
dec
cmp
jg
mov
mov
in
and
xchg
inc
xchg
fnstenv
jp
and
rcll
iret
loope
mov
cvtps2pi
lret
xor
cmp
movsb
add
add
ja
cmpl
mov
into
jmp
outsb
xchg
mov
scas
pop
cmp
fs
call
jb
lds
jb
in
mov
pop
lods
xor
push
loop
and
sbb
adc
push
int3
dec
rorl
test
hlt
mov
stos
mov
push
test
xor
xchg
xchg
fs
les
cmp
cmp
enter
test
shll
inc
cltd
cli
push
jnp
sbbb
decb
jns
loop
mov
xor
lods
push
or
mov
sti
inc
imul
push
movsl
movl
decb
adc
push
shrb
jns
add
jns
aaa
testb
in
sar
cmp
lods
in
neg
dec
mov
pop
sarl
jno
lea
iret
sbb
fmul
sbb
testl
and
add
dec
pop
push
sub
popa
dec
and
cwtl
push
jbe
fs
add
lods
jno
xchg
test
lods
xchg
mov
cmp
mov
cmpsl
movsb
xchg
insb
push
jae
dec
and
jnp
mov
add
adc
mov
lret
mov
xor
push
lahf
cmp
xor
sbb
or
push
loope
aas
insb
sub
and
ss
icebp
cmp
pop
mov
jns
xchg
pop
lcall
adc
negb
aaa
mov
fisttps
out
push
jg
jecxz
push
bound
sahf
inc
inc
jnp
mov
imul
lret
das
push
inc
push
clc
cld
stos
sub
insb
addr16
jmp
dec
cmpsl
and
push
push
cmp
dec
lds
fwait
dec
nop
stos
cmp
cmp
sub
fidivs
sub
jo
sbb
into
sbb
dec
sub
inc
and
mov
ds
push
subb
mov
xchg
out
push
or
lcall
xchg
ja
lods
enter
add
shlb
enter
add
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
out
inc
pop
lds
pop
adc
aaa
cli
adc
pusha
and
stos
mov
filds
push
pop
dec
push
stc
jecxz
mov
aam
movsl
out
push
push
pop
test
sbb
dec
dec
cmp
movb
ds
lret
sbb
and
mov
orb
ja
xchg
pushf
mov
jg
scas
sub
add
push
push
and
mov
pop
aaa
stos
imul
inc
es
push
cli
aas
in
lret
fidivrl
mov
inc
sbb
fists
hlt
in
adc
cmp
lret
mov
or
add
shrb
rcr
icebp
iret
jmp
jle
out
xor
mov
int
cmp
xchg
addr16
loopne,pn
sti
sbb
push
xchg
sbb
pop
xor
stos
fninit
fwait
out
jp
and
das
jge
mov
jnp
inc
cmp
and
adc
mov
je
adc
jno
pop
jne
pusha
lahf
repz
loop
cltd
in
mov
lock
insl
pop
adc
nop
jae
push
cmp
pop
in
adc
jno
iret
adc
std
addr16
xor
mov
lahf
or
pushf
push
lahf
xor
outsl
push
das
nop
mov
cwtl
ja
rcll
adc
fmull
in
hlt
inc
lock
mov
mov
cld
stos
shr
adc
int3
in
xchg
xlat
imul
stos
test
inc
movsl
mov
lea
jb
lret
or
sbb
mov
mov
add
mov
cmpsl
movl
ret
xchg
ret
push
out
popa
and
mov
mov
adc
rcrb
int3
sahf
inc
mov
mov
add
jne
mov
in
int3
test
add
mov
imul
xchg
jle
adc
pop
icebp
push
adc
mov
enter
sbb
adc
test
in
jae
dec
lret
lock
arpl
push
sub
sbb
stos
es
rcl
xor
lods
pop
dec
sub
mov
sbb
ret
sbb
pusha
push
jb
sub
sbb
in
fcoms
inc
mov
push
xchg
arpl
dec
aad
push
call
fidivrs
push
hlt
mov
dec
mov
pop
arpl
inc
popf
test
and
inc
imul
aas
stos
sub
jnp
movsb
and
add
xor
std
popa
aad
int3
push
or
pop
popa
jg
cmp
jbe
lcall
mov
lods
cmp
adc
cmp
jno
into
cltd
cmp
jmp
loope
sbb
cwtl
xchg
mov
push
mov
xor
cmovae
and
filds
cmp
and
mov
sub
mov
daa
insb
lret
pop
xlat
repz
mov
mov
xchg
xor
fisubs
and
das
cmp
pop
gs
sahf
pop
imul
and
inc
mov
xchg
scas
mov
mov
ret
jbe
or
inc
sar
mov
pop
mov
xchg
mov
or
pop
mov
popf
dec
ret
lcall
in
fcoml
and
inc
rolb
jno
jns
push
lods
pop
lock
or
adc
ds
or
popa
loop
addr16
insl
xchg
lds
daa
cmpsb
xor
pusha
leave
into
jecxz
sbb
push
or
jl
aas
pop
cmc
fcomps
ret
jmp
xlat
jne
ret
lods
xchg
pop
sbb
jg
xchg
ljmp
dec
push
mov
dec
sub
out
add
call
adc
cmpsb
xchg
movsb
call
inc
cwtl
into
sbb
xor
pop
dec
cld
not
pusha
fcmovbe
xor
push
inc
push
or
cmpsb
sarb
pcmpgtw
push
cli
loopne
call
cwtl
mov
lcall
inc
int3
mov
inc
mov
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
movsb
add
inc
adc
adc
dec
mov
imul
adc
aad
repz
pop
mov
js
sarb
adc
cmpsb
mov
cmp
push
add
add
arpl
fistl
call
mov
out
push
nop
mov
jge
jle
rclb
or
push
add
divl
popf
mov
xchg
movsb
mov
int
rorl
xchg
testl
bound
leave
adc
dec
mov
push
sarl
rcrl
sub
in
iret
ss
test
insb
leave
push
cli
cmp
pushf
xor
mov
in
push
push
push
xchg
mov
ds
insl
and
stos
jo
jp
dec
jp
jmp
fwait
pop
adcb
push
mov
pop
imul
pusha
mov
ret
movsl
xchg
sub
add
outsb
lock
jns
pop
and
sbb
pop
ror
pop
cld
adc
jmp
jge
stos
or
xlat
pop
cltd
xor
jne
cli
aad
divl
pop
aad
and
sbb
and
je
pop
or
inc
push
jno
mov
lret
ret
shr
push
movsb
mov
mov
push
aad
adc
imul
rorl
mov
in
add
xor
xchg
scas
sbb
out
jae
out
scas
adc
lret
clc
cmp
jb
push
icebp
leave
nop
adc
mov
push
testl
inc
jns
lret
mov
dec
cli
cmpsl
jp
add
or
aas
adc
std
movsl
shrb
inc
lock
cwtl
insl
mov
mov
loope
sub
mov
xlat
jns
pop
mov
jo
mov
aas
push
out
adc
in
adc
movsb
aaa
jb
xchg
pop
dec
and
pop
sbb
out
pop
inc
mov
jge
imul
arpl
shrb
cmp
xchg
or
rcr
sub
add
rorb
mov
mov
xchg
ss
lds
pop
stos
fucom
lods
jecxz
pop
ret
pop
add
out
std
cmpsb
jmp
push
ret
and
dec
xchg
xchg
pop
bound
cmpb
cmp
inc
adc
pop
push
cmp
and
mov
js
sbb
push
ret
adc
outsl
sar
repz
in
xor
adc
rolb
fs
in
fadds
pop
clc
cmp
shrb
xor
dec
push
into
push
cmpsb
stos
mov
mov
pop
xor
and
adc
mov
js
mov
and
pop
dec
cs
out
popa
xchg
sbb
sub
and
test
in
aad
insl
dec
leave
mov
mov
ds
fxch
fwait
jne
js
fcmovnb
and
mov
mov
hlt
out
mov
cmpsb
mov
std
adc
into
out
pop
stos
add
inc
cmp
inc
mov
sub
xor
fldln2
mov
sbb
sbb
or
mov
xchg
or
ss
push
push
push
int
cmp
push
jle
stos
std
xchg
rorl
cmpsb
ja
aam
ljmp
adcb
iret
push
add
pop
movsb
stc
mov
dec
std
xchg
xlat
dec
mov
xor
cmp
aaa
in
jb
xchg
xor
cmovge
adc
xchg
fiaddl
sbb
mov
jmp
insb
xor
mov
inc
aam
xor
jmp
addb
jno
sub
and
mov
fisttps
cwtl
es
xchg
fwait
sub
jb
iret
jns
or
or
sbb
add
cmp
or
test
mov
or
clc
fcmovnu
testl
movsl
pusha
xchg
ljmp
movsl
jae
mov
or
lahf
mov
inc
dec
icebp
pop
and
jp
mov
push
jp
cs
lcall
cld
cmp
or
inc
and
out
ljmp
push
stos
imul
dec
xor
out
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
pop
dec
mov
adc
aaa
cli
adc
adc
jle
jmp
sbb
sub
dec
cmp
sbb
xchg
xor
push
rorb
jnp
mov
loope
scas
and
call
cwtl
imul
and
loope
dec
lret
sbb
fisttpll
pop
and
hlt
jg
fidivs
inc
scas
int
dec
jb
hlt
aam
dec
outsl
push
xchg
stos
addr16
mov
mov
fistl
popf
pop
incl
sub
lods
and
bound
insl
shll
std
pop
std
js
rorl
out
test
fsubl
xchg
xlat
in
cmp
pop
and
lods
int3
or
pop
or
jp
xchg
mov
inc
pop
xor
dec
nop
add
and
fdivrs
or
ja
mov
and
mov
fisttpll
or
pop
pop
aad
stos
mov
stc
dec
lret
sar
test
jg
sub
popa
xchg
sub
and
fs
inc
bound
push
push
cmp
aaa
inc
jmp
subb
sbb
mov
dec
fwait
aad
into
out
fs
in
pusha
cli
xchg
stos
sbb
out
xchg
clc
xchg
cmpsl
mov
xor
mov
enter
adc
loopne
arpl
aaa
jae
jp
bound
je
fists
cmp
add
lcall
movb
ficomps
loopne
xlat
in
sub
pop
out
push
mov
push
adc
lea
aaa
pop
dec
test
aad
mulb
adc
xchg
pop
add
pop
popa
lods
sbb
insl
lock
mov
adc
test
outsb
hlt
in
pop
fs
negl
mov
xor
add
push
ljmp
xchg
jb
addr16
xor
mov
inc
ret
data16
add
popa
lods
aas
push
add
push
cmp
push
testl
jmp
xchg
adc
fildll
xchg
mov
sbb
scas
mov
outsb
or
pop
mov
sahf
push
lea
ss
clc
test
shll
lea
data16
xchg
std
insl
sub
and
cmc
scas
std
xchg
scas
xor
enter
sbb
fldl
mov
and
mov
mov
call
sahf
int
rclb
jmp
cmp
cmp
jge
test
enter
add
imul
add
std
jae
enter
xchg
stos
orl
or
mov
push
sbb
ret
dec
pop
push
xchg
pop
lcall
aad
push
adc
mov
movb
mov
push
add
imulb
or
and
lahf
dec
push
repnz
xchg
sbb
mov
jg
pop
test
xchg
xchg
and
dec
cwtl
jae
loop
imul
ds
pop
push
out
lahf
scas
dec
adc
shl
shr
fistpll
mov
ret
aad
mov
xchg
fidivl
cltd
shl
sub
add
and
mov
daa
out
lret
cmp
lods
fistpll
arpl
and
notb
orb
jmp
jno
xchg
push
xor
fwait
cmp
out
mov
ja
stos
lods
ret
inc
insb
stc
in
push
out
add
add
xor
xchg
push
inc
pop
rcr
jg
std
jecxz
popf
jle
sub
mov
repnz
inc
out
fists
call
sub
aaa
mov
mov
dec
mov
xor
ds
pusha
mov
mov
add
pop
inc
mov
jnp
pushf
jno
inc
es
mov
out
push
jne
push
rorl
jo
cmpsl
dec
add
shlb
popf
fucomi
pop
dec
cwtl
sbb
outsb
fbstp
cltd
pop
cmp
jo
mov
movsl
sbb
scas
or
mov
mov
xchg
push
mov
push
movsb
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
test
add
adc
cli
adc
pop
pop
shll
add
leave
lret
fs
enter
movsb
psubusw
ds
mov
aad
aad
insl
push
push
sub
xchg
fs
lock
in
adc
adc
and
daa
push
jecxz
mov
roll
rolb
out
andl
dec
out
je
call
cltd
xchg
push
xchg
xchg
xorl
cwtl
pop
inc
mov
in
sub
inc
mov
xor
jne
add
pop
inc
and
ret
ds
mov
jnp
in
lahf
sbb
out
inc
mov
cmp
xorl
mov
imul
or
insb
sbb
fwait
add
inc
sub
sbb
stos
xchg
xor
sbb
or
push
sub
dec
mov
in
sahf
sti
xchg
fwait
and
ja
add
fiadds
ja
pop
mov
test
or
or
jg
jmp
repz
mov
jae
aas
sbb
add
xorb
sbb
sbbb
lahf
cwtl
xchg
and
jbe
push
mov
push
or
dec
xchg
test
bound
adcb
and
fiadds
in
pop
mov
arpl
cmc
stc
xor
jno
test
scas
pop
xchg
mov
jnp
and
mov
dec
xor
inc
mov
faddl
leave
xchg
sbb
icebp
pop
daa
push
pop
loop
and
es
clc
mov
imul
jmp
push
and
mov
cmc
jmp
push
cwtl
and
sti
adcl
jmp
mov
and
xchg
xor
xchg
xor
push
in
out
sbb
xchg
mov
mov
fnstenv
mov
cmp
int
cwtl
ja
rolb
cmp
loop
jge
ficoml
out
lea
mov
imul
or
sbb
push
ror
push
inc
out
std
cmp
xor
push
jp
add
inc
or
sbb
push
dec
jns
push
dec
imul
fldenv
mov
in
mov
cli
xor
or
xchg
xchg
leave
inc
add
pop
fucomp
push
je
push
sub
fsts
gs
mull
adc
pop
dec
push
call
call
rorb
push
sub
sub
add
subps
pop
mov
dec
orl
mov
gs
xor
push
andb
das
pop
mov
sbb
add
or
jnp
test
xchg
cmp
sbb
loop
mov
push
push
xchg
out
and
in
in
cmpsb
loop
xchg
sti
sbb
lock
ss
jge
fcomp
mov
cmp
loop
push
sbb
mov
pop
pop
sub
in
lcall
pop
jns
jo
push
jbe
xchg
xchg
cs
lock
xchg
pop
into
add
cwtl
push
sub
xor
ret
enter
sub
push
and
flds
lcall
cmp
mov
adc
xor
sub
outsl
push
pop
inc
cs
stos
sbb
repnz
ja
fs
mov
inc
fsubp
movsb
adcl
adc
fisubrs
mov
pop
out
dec
rolb
dec
jecxz
cmpsl
push
cmp
cs
out
and
mov
rclb
inc
out
sub
jb
sub
push
dec
data16
pop
cmpsb
or
sub
ljmp
cmp
cmp
mov
or
jne
push
or
push
lret
and
mov
mov
and
dec
push
notb
push
out
ret
adc
mov
push
and
xchg
inc
dec
pop
aaa
xchg
in
cmp
ret
mov
les
mov
push
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
mov
aaa
cli
adc
mov
inc
test
dec
pusha
test
enter
aad
mulb
popf
dec
lret
cmp
js
ficompl
jo
in
rcl
out
cmp
in
push
test
pop
jmp
and
fsts
je
data16
pusha
cmp
sbb
dec
test
lock
repz
dec
cmp
and
push
out
and
cmc
xchg
inc
dec
jmp
int3
sub
popf
stc
cmp
leave
cli
adc
xchg
test
gs
and
pop
mov
add
and
adc
cmp
mov
pop
push
jge
movsb
sbb
in
es
stos
cmpsl
pop
cs
rcrb
shl
add
out
and
ljmp
sub
jl
push
mov
mov
dec
jle
cmpsl
sub
in
stos
inc
mov
mov
insb
xchg
dec
js
sarb
xchg
xlat
rorl
cmpsb
arpl
test
shrl
or
sub
mov
inc
push
and
add
mov
mov
aam
sbb
jo
std
adc
popa
cmpsl
inc
xchg
xchg
pusha
mov
push
rcrb
push
adc
jnp
stc
loope
or
fs
pop
mov
jbe
scas
dec
and
out
sbbl
push
push
movhps
ljmp
push
jae
cltd
push
fistpll
ljmp
test
add
pop
pop
sbb
outsl
xchg
cmp
add
lahf
add
adc
ja
ljmp
in
mov
lea
jg
push
aam
stos
cmpsb
daa
test
aam
jnp
inc
xchg
lcall
xchg
in
adc
xlat
js
push
cli
pop
add
sbb
ja
or
pop
jecxz
shr
add
pop
lcall
ds
jo
fsub
fwait
mov
aam
pop
cmp
arpl
jp
sbbb
push
icebp
mov
ds
mov
ret
pop
hlt
push
inc
inc
icebp
rcrl
jne
jb
mov
push
aam
jmp
cmp
xlat
push
push
inc
mov
sbb
loopne
ret
cmp
pop
adc
sti
mov
das
sub
clc
aas
sub
loopne
dec
loope
push
xchg
ja
and
or
lahf
out
inc
insb
mov
cltd
dec
cli
imul
cmp
cltd
out
ficomps
and
pop
mov
out
inc
cmc
mov
popf
fisttpll
cmpb
jno
lock
pop
adc
inc
mov
imul
popf
into
and
jnp
pop
cmp
xor
fistpll
push
cmpsb
ret
fcoml
fidivrs
stos
leave
push
cwtl
pop
hlt
rcrl
aas
xor
jecxz
pop
jbe,pn
ja
xor
and
dec
loope
in
cli
rcrl
fisttpl
adc
jb
aas
ljmp
cwtl
lahf
out
dec
xlat
pop
pop
inc
xchg
inc
repz
sbb
sahf
es
mov
int
movsl
push
adc
push
lods
xor
push
popa
stos
mov
jo
addb
imul
xchg
dec
scas
adc
dec
mov
mov
inc
scas
push
mov
stos
add
xor
sbb
xchg
rcl
and
leave
cld
inc
lcall
sbb
int
fstps
in
cmp
push
fnstsw
fldcw
jno
jp
and
xor
cmp
bndstx
adc
hlt
jmp
pop
mov
push
cld
shl
cmpsb
adc
adc
pushf
lahf
sub
inc
stos
pop
mov
mov
jmp
mov
add
push
mov
pusha
sbb
sub
mov
xchg
mov
fcompl
icebp
ljmp
iret
imul
mov
insb
cmp
aad
les
test
aam
jle
nop
out
jb
movsb
jo
xchg
jmp
ret
push
cld
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
mov
repz
aaa
cli
adc
sbb
jo
arpl
insl
pop
xor
aaa
xchg
dec
pop
xchg
sub
pop
push
fists
push
dec
mov
push
aas
pushf
gs
jne
aad
push
aaa
xchg
je
negb
dec
shr
add
push
stc
pushf
sub
or
push
popa
popl
shlb
jecxz
mov
sbb
mov
ret
xchg
and
mov
dec
dec
test
fsubs
jl
cmp
movsl
addr16
xchg
push
leave
aam
mov
push
into
in
add
mov
test
stc
inc
mov
dec
sbb
push
pop
loopne
in
jle
in
and
popf
sbb
and
add
add
jmp
add
das
lcall
pop
cmp
fmul
dec
mov
stos
push
cmpsb
pop
cs
sarl
adcb
jg
lret
notl
inc
pop
push
mov
push
les
hlt
cmp
ja
jb
fimull
rcrl
movsb
dec
inc
aam
pop
iret
push
std
or
addr16
addr16
mov
loope
repnz
mov
sub
xchg
adc
test
call
mov
jb
xchg
adc
je
or
insl
rorl
mov
fldcw
xchg
fidivs
lods
pop
mov
aaa
nop
cmp
into
mov
sbb
iret
adc
iret
fmul
loop
inc
jecxz
cmp
inc
cmp
fsubs
and
shl
xchg
sarl
adc
mov
sbb
lahf
mov
ret
lock
xor
push
mov
push
cli
insl
inc
out
aas
pop
inc
repnz
in
pop
gs
lret
sub
push
push
shll
out
hlt
xor
and
outsl
mov
out
cmp
push
mov
hlt
and
fadd
sub
inc
scas
incl
lret
push
rcrb
arpl
add
es
loope
leave
push
popf
inc
jecxz
pop
adc
mov
xorb
hlt
jmp
in
fdivl
mov
cmpsb
mov
push
dec
push
sub
or
outsb
sahf
fsubrl
stos
fcomip
hlt
mov
push
cmp
xor
xchg
xorl
cmp
dec
cmp
loopne
pop
mov
cmp
jno
outsl
pcmpgtd
mov
adc
cs
add
jno
stos
mov
sub
jo
push
divl
lds
shrb
mov
mov
xor
push
jo
loope
adc
dec
sub
pop
mov
or
out
jp
mov
mov
mov
xchg
mov
xchg
cmp
xor
add
aad
dec
fnstenv
mov
xchg
ja
dec
and
jbe
popa
sub
aas
xchg
cmp
or
pop
fsubrl
xor
mov
dec
mov
push
aaa
nop
int3
mov
es
pop
jo
scas
sub
cmp
lahf
addb
adc
push
sti
push
loope
stc
adc
mov
xchg
sbb
rorb
xchg
adc
das
aas
dec
loopne
aam
hlt
ds
inc
adc
sbbb
xor
push
out
cltd
cmp
js
into
subb
pushw
inc
dec
mov
inc
sub
jle
xchg
mov
leave
fists
int3
push
sub
movsl
pop
data16
sub
push
ret
hlt
les
jne
or
pop
out
outsl
aam
fs
adc
ljmp
mov
add
sub
or
loop
out
mov
pusha
or
lock
pop
lea
add
inc
mov
ja
or
push
or
icebp
enter
in
sub
test
sub
sub
adcl
movsl
out
stos
and
ret
push
xor
es
push
dec
dec
clc
sarb
sbb
mov
mov
push
sbb
dec
movsl
enter
cmpsl
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
cltd
sbb
aaa
cli
adc
cmp
cmpsl
out
cmp
imul
testb
loopne
inc
push
ljmp
roll
cli
int
test
rolb
popf
sbb
dec
mov
cwtl
pop
movsl
js
adc
gs
shlb
fs
xor
inc
cmp
test
dec
or
sarb
xchg
aam
add
test
in
pop
inc
mov
adc
cltd
sarb
mov
or
test
je
jmp
cld
xchg
into
rclb
mov
jo
mov
mov
and
pop
out
push
pop
add
aam
sub
insl
sub
jns
popf
sahf
xor
jo
xlat
push
out
sarl
aad
jg
mov
sub
pop
jo,pn
fsubrs
inc
cmp
add
ljmp
js
sbb
xchg
sbb
or
and
shl
jno
imul
mov
sbb
cmp
subb
pop
push
sti
ficoml
icebp
stos
bound
dec
loop
sub
cmpsb
jmp
ss
inc
jp
xchg
add
ror
sbb
xor
mov
imul
jnp
inc
pop
fiaddl
in
push
lea
out
cmp
loope
leave
push
mov
repz
pop
sbb
stc
jno
xorl
icebp
mov
cltd
or
mov
cmp
and
dec
xchg
movsb
dec
inc
outsl
mov
inc
xchg
adc
inc
sub
stc
mov
cmp
loope
idivb
sub
test
movsl
cs
aam
dec
xchg
pop
sbb
mov
add
enter
popa
inc
xor
outsb
movsb
shll
sbb
cmc
mov
test
xchg
ds
xchg
lock
push
icebp
ret
xchg
jbe
mov
addr16
xchg
push
xchg
sarb
inc
xor
aam
arpl
dec
hlt
hlt
fstp
das
mov
pushf
popa
sub
rcll
pop
mov
sbb
mov
mov
push
fsubrs
and
push
dec
cmp
addl
jl
movsl
sbb
out
je
xor
dec
mov
pushf
adc
mov
and
sbb
push
fsubrs
xchg
cmp
adc
insb
ficomps
ret
mov
jnp
inc
sbb
inc
out
sbb
test
push
xor
mov
lock
fisttpl
fidivs
out
fwait
xor
sbb
int3
lds
lret
mov
fs
rcrl
ja
loopne
jmp
scas
cmpsb
xchg
mov
and
or
cmc
popf
dec
loope
or
iret
sub
mov
test
scas
sbb
ljmp
xchg
out
xor
cmpsb
cli
lret
add
mov
push
jo
xchg
cltd
into
leave
pusha
mov
mov
lret
and
popa
popf
fidivrl
or
loop
pop
shlb
shl
add
inc
cwtl
fidivs
or
ret
pop
outsb
loopne
lcall
xor
in
out
inc
dec
lds
ljmp
shrl
les
sbbl
enter
lea
addb
sbb
jns
inc
scas
xor
clc
mov
and
aaa
fcoml
xchg
dec
pop
or
repnz
or
lods
mov
stc
sub
testb
adc
aad
cs
sub
insb
fimuls
movsl
fs
fcoms
addr16
mov
clc
jl
fistpll
imul
and
mov
push
lcall
cwtl
dec
fsubs
sbb
cli
mov
and
gs
mov
out
call
mov
rorb
fisubs
push
rolb
xor
int
aaa
popa
lret
aam
jle
shrl
or
xor
dec
and
je
out
mov
cwtl
cmpsl
sbb
push
add
shlb
rorb
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
fst
mov
aaa
cli
adc
cwtl
out
or
out
mov
jge
mov
sti
dec
je
lea
cmpsb
loopne
mov
inc
in
lcall
mov
xchg
xlat
and
adc
aam
jle
pop
rcll
dec
movsl
popf
lcall
xchg
sub
cmp
orb
mov
push
and
gs
fdivrs
and
adc
cltd
mov
push
sbb
jg
out
ss
mov
add
out
mov
test
xchg
xor
add
inc
inc
cmp
push
xchg
mov
sub
dec
dec
les
ffreep
cld
cltd
dec
sbb
xlat
mov
xor
lahf
xchg
outsb
cli
adc
or
sub
xor
out
adc
cmpsl
inc
inc
cmp
jp
or
add
test
es
or
inc
movsl
mov
bound
std
fwait
or
fimull
xchg
jb
push
mov
ljmp
pop
lea
rol
push
stc
test
add
scas
dec
test
repnz
mov
cwtl
lea
inc
popf
ds
pop
rcl
mov
testb
lret
test
pop
mov
mov
in
lret
or
xchg
loop
mov
mov
cmc
dec
aaa
cmp
add
dec
and
into
pop
xchg
lret
and
cmpsb
ret
aas
cltd
insb
mov
jle
jg
test
pop
cwtl
mov
fwait
enter
or
clc
sarb
ds
or
pusha
mov
daa
mov
shlb
aaa
xchg
pop
repnz
lcall
cmp
xchg
jo
and
lock
test
adc
pop
arpl
cs
adc
or
lcall
push
push
aas
outsl
icebp
dec
std
xor
sub
pop
and
mov
sbb
pop
mov
and
outsl
lcall
fildll
sub
pop
cmp
int
jecxz
cmp
xchg
dec
jbe
cmpsl
pop
popa
sub
bound
pop
aad
fcompl
xchg
data16
test
lock
xchg
inc
xor
push
inc
dec
cs
ret
cltd
arpl
fiaddl
es
push
push
iret
push
mov
jle
imul
scas
pop
pop
fidivs
mov
or
int3
popf
sub
pop
cmc
cld
push
jg
and
xor
enter
test
and
jl
pushf
sarl
or
sbb
jg
mov
or
lret
insl
jl
in
lcall
or
push
add
mov
cmp
push
push
addb
sbb
inc
cmp
fs
jp
movsb
lret
xchg
pop
hlt
mov
fidivl
movsb
movsl
cmp
jecxz
pop
mov
imul
mov
test
mov
sub
pop
or
pushf
cmp
nop
mov
push
mov
out
test
lods
int
gs
add
xlat
or
mov
mov
jb
fdivl
jo
sbb
push
out
fdivrs
jnp
ljmp
and
aas
xor
mov
cmp
adc
xor
fdivs
add
sbb
sub
fisubl
fwait
mov
divb
sbb
clc
mov
dec
es
arpl
mov
arpl
addb
das
or
cltd
dec
scas
insb
insl
pop
push
mov
adc
pop
ljmp
fmuls
add
inc
in
jl
mov
cmp
sarb
gs
xor
fwait
adc
lods
in
out
inc
repz
sub
push
call
and
xchg
xor
inc
lahf
jecxz
xchg
and
cmc
or
lret
outsb
in
pop
pop
xor
out
mov
cltd
out
jo
mov
insl
lahf
mulb
lahf
andl
jmp
lea
adc
leave
xor
pop
push
add
adc
aaa
cli
adc
loope
repz
idivb
insl
add
add
dec
sub
or
push
or
aas
dec
adc
mov
es
imul
dec
shl
xor
in
mov
aaa
fiadds
out
mov
pop
iret
adc
lods
popa
pop
xor
mov
xchg
dec
cmp
sbb
mov
jg
dec
mov
mov
pop
pusha
inc
notb
xchg
imul
ror
jge
movsl
mov
mov
mov
pop
lcall
cmc
and
mov
xchg
sub
iret
mov
pushf
sub
jae
cmp
push
fiaddl
popf
push
iret
xchg
push
ljmp
lods
mov
mov
pop
sahf
lret
scas
push
leave
movsl
loopne
pop
mov
into
fs
mov
inc
jb
xchg
push
sbb
mov
scas
dec
pop
add
iret
jae
push
adc
pusha
cmp
negl
xlat
popl
or
je
cs
dec
ds
idivl
jbe
rcll
sub
andb
ret
rclb
cmp
loope
lods
repnz
stos
movsb
inc
xchg
mov
ja
movsb
negl
in
cli
adc
or
sarl
xchg
xor
add
filds
dec
push
imul
lcall
mov
je
sbb
daa
outsb
and
ret
dec
sti
scas
cmp
mov
sub
cwtl
sub
cwtl
rcrb
push
mov
roll
sbb
add
iret
fmuls
push
lods
xlat
inc
es
lcall
call
out
jno
popf
cmc
dec
dec
packsswb
sub
fcmovnu
xor
sub
out
mov
sahf
scas
xchg
and
popf
add
int3
add
inc
cli
or
movsl
mov
das
pop
jbe
push
aam
cmpsl
dec
or
inc
insl
cmp
dec
xor
lret
push
jp
push
sbb
insb
test
add
jbe
imulb
jge
addr16
cmpsb
seta
stos
mov
lahf
and
adc
inc
or
pusha
pop
jbe
call
divb
imul
pushf
insb
and
mov
fwait
into
fwait
test
cmp
push
clc
and
cmp
pop
test
add
and
mov
dec
cmp
ficoms
adc
fstps
dec
stos
and
adc
in
mov
xchg
cs
mov
mov
scas
incl
xchg
rclb
pushf
mov
dec
mov
daa
dec
mov
mov
xchg
mov
jae
xchg
and
out
sahf
mov
push
mov
inc
pop
call
dec
bound
xor
dec
jae
fildl
jmp
dec
mov
leave
inc
rol
mov
dec
jp
test
test
lea
adc
lods
sbb
push
cmp
sbb
lea
push
pcmpeqw
mov
pop
mov
pop
repz
adc
aam
repz
pop
mov
adcb
jb
sar
ds
inc
test
adc
fiaddl
imul
push
das
lock
xchg
mov
notl
xor
in
sbbb
stos
in
inc
iret
mov
sbb
stos
inc
std
addr16
sbb
outsl
rcl
sahf
adc
and
mov
and
hlt
and
test
cmpsl
int
icebp
and
sahf
inc
cmpsl
fcompl
hlt
filds
scas
mov
daa
push
cmp
xor
cmc
jnp
lea
ja
mov
add
inc
roll
sub
sub
mov
sub
repnz
subl
int
jbe
jae
cmpsl
scas
adc
xchg
rcrb
sbb
jg
cwtl
and
push
in
icebp
pop
ficoms
idiv
xor
aam
test
inc
or
imul
sbb
xor
and
add
inc
cltd
rorl
jne
shrd
shr
shr
xor
push
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
test
or
sub
add
sbb
aam
int3
sti
sbb
mov
int
dec
jbe
dec
iret
cmp
mov
pop
inc
pop
ss
xor
xor
in
sbb
in
adc
jne
mov
inc
into
sbb
mov
and
xor
add
dec
popa
jp
fstpt
mov
lcall
inc
and
out
imul
cmpsl
and
pop
push
cmpsl
xchg
add
in
push
scas
out
ds
decb
push
leave
inc
sbb
test
ffree
lods
jns
jmp
rcrl
ret
xchg
push
mov
and
sbb
ds
add
cli
js
adc
sarb
and
pop
das
addb
popf
jg
mov
mov
in
inc
cli
cwtl
cmp
xor
dec
push
jmp
fucomp
xchg
sub
in
icebp
sbb
cli
gs
adcb
pop
fisubrs
xor
pop
mov
scas
pop
das
push
dec
enter
pop
xchg
add
test
cmc
and
cld
sub
shlb
imul
dec
mov
inc
xchg
push
adc
sbb
mov
fnstcw
mov
mov
add
push
lret
lods
push
sub
push
xor
dec
test
in
call
jg
jl
cld
lock
sbb
fcomip
leave
push
pusha
mov
pop
lds
jns
push
dec
mov
mov
and
lret
cltd
add
sti
subl
ja
fwait
iret
xor
mov
dec
inc
jmp
call
rcrb
lahf
pop
add
fsub
add
dec
mov
mov
push
pop
mov
jae
icebp
dec
jno
jmp
icebp
ficoms
inc
clc
enter
in
mov
jne
andl
nop
das
lods
mov
test
or
lock
and
lcall
loope
jmp
xchg
adc
imul
jle
push
mov
rorl
btc
dec
jb
scas
lock
pop
mov
sub
jg
inc
cmpsl
pop
in
fisttpll
repz
add
rclb
std
mov
jge
sub
fnsave
inc
push
push
mov
test
in
or
jl
xlat
aaa
arpl
test
sbb
push
rcrl
sbb
filds
int
out
mov
sbb
mov
jbe
jae
lock
mov
std
das
jle
jno
cmp
pushf
jnp
xor
jmp
jb
int3
dec
sahf
fnsave
sti
sbb
lea
adc
scas
mov
sbb
add
shlb
cltd
ljmp
mov
icebp
push
push
lret
adc
jecxz
out
fstl
out
cmp
sbb
scas
push
cmpsb
push
outsl
fwait
shrl
cmpl
mov
adc
dec
daa
jl
fs
test
fisttps
pop
paddd
inc
cmp
mov
lods
xor
shrb
inc
out
lcall
in
sti
and
mov
dec
jle
xor
movsl
popa
jge
adcl
push
aad
and
popf
mov
cmc
mov
das
push
or
shlb
add
xchg
sub
addl
insl
adc
xor
dec
loopne
enter
out
aam
xor
xor
xchg
or
dec
out
iret
add
adc
into
cmpsb
dec
jno
insl
add
xor
fidivs
imul
and
js
mov
ja
dec
adc
dec
movsb
mov
jns
stc
out
fwait
cmp
pop
outsl
mov
flds
add
pop
add
push
mov
es
ret
iret
shlb
xor
mov
add
inc
subb
loopne
cmp
or
bound
jge
push
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
dec
test
adc
aaa
cli
adc
mov
pop
pop
loop
ljmp
inc
push
pop
call
mov
hlt
and
pop
push
icebp
push
jmp
sbb
mov
in
xor
inc
add
cmp
mov
cmp
add
rcll
push
and
and
out
fbld
outsl
insb
clc
daa
or
ljmp
push
pushf
sub
add
mov
push
cmp
push
xor
jge
out
imulb
cli
ficoms
leave
idivl
insl
mov
mov
testl
repnz
sbb
xlat
movsb
mov
and
or
sti
scas
dec
inc
pop
sbb
push
or
mov
hlt
pop
popf
dec
sbbl
rcr
bound
imul
cltd
xor
adc
test
outsl
adc
or
decb
in
jg
fidivs
sub
mov
sahf
add
push
int3
loopne
pushf
das
lock
sbb
xlat
sbb
testl
divl
je
add
xor
sbb
lea
or
cmp
and
mov
movsl
stos
daa
mov
mov
inc
inc
pop
lret
sbb
cld
dec
pop
xor
add
mov
fildll
push
cmp
es
mov
subl
fmull
leave
jle
cmp
inc
data16
mov
mov
shl
xor
faddl
and
sub
and
les
fmull
popf
lods
addr16
push
rcl
push
push
in
add
ret
adc
les
jae
call
and
sbb
jbe
cmpsb
sub
out
adc
cmpsb
loopne
clc
or
xchg
pusha
fmull
cmpsl
jmp
imul
lock
in
hlt
push
mov
adc
mov
jnp
inc
pop
cmp
shll
pop
mov
cmp
add
push
enter
inc
into
loop
mov
rcll
ffree
das
jp
lods
push
imul
ror
stc
fnstenv
repnz
cmc
lods
cmovge
mov
and
aam
mov
mov
pop
int3
fs
mov
fldcw
jne
scas
dec
adc
les
xor
mov
xor
mov
mov
jmp
hlt
js
cmp
into
lcall
cli
jg
pop
and
cmp
cmp
rclb
cmpsl
push
mov
aaa
incl
scas
jle
fisttpl
out
sbbb
mov
jl
hlt
mov
test
adc
data16
arpl
adc
mov
sbb
shrb
movsb
cwtl
mov
mov
and
std
pop
mov
jl
mov
adc
movsb
xor
xchg
rclb
imul
inc
daa
cli
dec
sub
push
stos
cmpsl
daa
decl
add
mov
push
pop
test
ja
jne
add
cli
rolb
scas
inc
jg
popa
mov
cld
lds
sub
insl
fwait
xchg
xchg
test
sbb
xor
fs
mov
into
negb
jne
lcall
fistpll
push
and
loope
push
sub
test
adc
mov
pushf
test
cmp
sbb
loopne
add
test
add
sar
cmp
lods
sahf
sbb
cli
and
popa
movsl
jg
and
mov
mov
xchg
ljmp
jecxz
movsb
adc
fsts
scas
sub
mov
or
fistpll
mov
out
sti
imul
push
es
dec
rcl
lret
or
test
out
test
dec
jmp
push
call
lock
pop
in
push
out
lcall
mov
cmp
xor
mov
enter
adc
xor
sub
icebp
xor
jmp
lods
cld
xchg
jmp
xchg
loope
test
lods
adc
aaa
cli
adc
xchg
int
addr16
xor
lods
cld
dec
cli
add
jp
push
and
addr16
adc
popf
mov
shrl
inc
pop
inc
inc
call
bound
pop
add
test
repz
in
jmp
daa
cltd
orl
imul
rorb
dec
popf
shl
push
sub
clc
dec
stos
in
xchg
insb
imul
xchg
inc
pusha
xchg
out
in
cwtl
fs
test
out
iret
test
jae
test
ficoms
adc
mov
shl
mov
mov
inc
adc
jns
add
mov
push
jg
mov
mov
jge
or
push
call
sbb
sbb
inc
sti
mov
mov
adc
add
adc
adc
lock
das
out
mov
bound
rolb
loopne
pop
inc
mov
cmp
nop
dec
cmc
pushaw
and
and
mov
addr16
fs
xchg
sbb
sbb
je
repz
add
cmp
mov
dec
mov
ret
sub
test
pushf
mov
pop
pop
shrl
daa
sub
cmp
jno
mov
lods
in
outsl
pop
adc
fisttps
add
pop
mov
push
mov
jne
call
pop
enter
cli
aad
imul
and
xchg
fs
xor
push
nop
fisttps
fsubl
cli
mov
jp
fiaddl
aas
xchg
adcb
and
lds
mov
adc
cld
rcll
stc
adc
pop
mov
je
mov
ret
mov
les
pop
and
or
xchg
out
fisubs
shlb
into
sbb
addl
xabort
mov
daa
fimuls
inc
or
jae
pop
mov
dec
shrb
adc
fsubr
jb
mov
shrb
adc
and
xor
loope
add
or
mov
lods
and
pop
cmp
adcb
dec
jbe
mov
out
push
or
mov
mov
stos
push
inc
jge
mov
pop
in
inc
sbb
push
test
ficomps
shrb
and
mov
gs
inc
in
push
inc
inc
mov
push
jb
gs
pop
cmp
jne
popw
xchg
dec
ja
push
fcomp
mov
push
inc
xor
push
cmc
outsb
in
ss
mov
decl
sahf
out
movsb
mov
jmp
rcr
xchg
mov
sbbl
lahf
push
dec
ret
lock
ds
mov
iret
mov
or
xorb
adc
scas
jno
jp
pop
orl
cmc
and
add
lret
sub
cwtl
loope
out
testl
jle
xchg
xor
jl
inc
movsb
imul
mov
movsl
pusha
sbb
xchg
xor
rclb
sub
stc
pop
stc
inc
test
fisttpll
or
test
enter
push
jecxz
and
ds
shlb
add
push
scas
xchg
and
inc
xchg
and
frstor
cmpsb
mov
arpl
sbb
cs
fiadds
cmp
sti
mov
fisubs
lret
jae
mov
cwtl
cltd
xor
imull
loopne
push
jmp
insb
add
push
imul
inc
test
mov
ficomps
mov
push
jbe
hlt
and
cs
mov
shrb
sub
mov
movsb
add
pushf
push
sar
or
movsl
adc
adc
push
xchg
jns
sub
cld
push
cmc
bound
lret
test
mov
lea
mov
sub
xor
sub
dec
xchg
stc
jne
push
es
ljmp
daa
pusha
scas
in
mov
jnp
cli
adc
mov
rcll
mov
movsb
ret
push
or
push
test
push
adc
add
adc
test
add
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
lods
sbb
adc
cli
adc
jo
mov
add
lods
jmp
fs
fadd
into
cmpsb
mov
mov
push
fdiv
mov
sub
and
out
outsb
imul
mov
push
out
adc
push
jae
fidivs
out
out
add
sbb
test
fistps
cmp
gs
xor
jno
insb
pop
cmc
sub
pop
mov
es
cmpsb
mov
fnstenv
repz
push
xor
dec
cmp
repnz
jbe
push
fildl
cmpsl
into
je
dec
fisubs
jae
dec
call
xor
xchg
dec
sub
cmp
call
push
leave
imul
cmpl
mov
pop
movsb
test
cltd
adc
push
mov
cmc
push
pusha
mov
mov
mov
fcmovnb
adc
sarb
sbb
jecxz
in
push
push
xor
xor
mov
fdivrl
mov
jno
mov
or
mov
cmp
je
cmp
mov
inc
mov
inc
mov
add
mulb
sbb
cltd
aad
mov
pop
outsl
or
scas
mov
mov
lret
mull
mov
pop
les
xchg
stos
mov
cmpsb
cli
out
sbb
mov
sub
and
push
out
mov
dec
inc
cmpsb
pop
sbbb
nop
xor
pop
mov
push
jge
xor
push
mov
addr16
sbb
cbtw
add
push
fistl
loope
ds
aas
mov
sbb
ja
adc
daa
lret
push
mov
dec
test
ja
lcall
test
js
fwait
dec
pop
jle
push
imul
orb
push
dec
xchg
pop
imul
xor
cmpb
pop
sbb
pop
add
or
enter
roll
push
je
jo
add
int
inc
add
popf
cmpl
les
inc
and
or
xchg
nop
mov
push
test
jge
sbb
cs
es
inc
or
xchg
into
add
add
ss
fsubrp
shlw
inc
mov
jl
or
stos
mov
and
test
pushf
popa
pop
rcrb
fsubrl
push
movsb
and
mov
lahf
lock
addl
jl
sub
scas
jb
ret
testb
pmullw
test
insb
lods
clc
xchg
icebp
shrb
jo
and
pop
ds
lods
fidivs
dec
mov
repz
pop
pushf
jo
dec
jecxz
pushf
fisttpl
xchg
loope
sub
cmp
mov
rcrb
popa
repnz
add
cwtl
adc
ljmp
dec
jnp,pt
or
pop
push
add
outsl
cmp
adc
sti
mov
xchg
xor
inc
jne
out
cmp
xchg
mov
scas
data16
push
push
or
daa
xchg
xor
insl
pushf
hlt
ja
push
sub
test
and
icebp
xor
jl
sub
add
int3
aaa
xor
dec
inc
ds
icebp
xchg
xchg
imul
push
sub
and
fsubs
add
xchg
rorl
add
push
addl
sbb
push
adc
sub
outsb
outsl
cmp
mov
inc
insl
stos
dec
shl
sahf
pusha
addr16
xchg
push
cmp
lahf
arpl
loope
int
push
and
iret
enter
popf
xor
jmp
and
inc
into
lcall
or
insl
imul
outsb
out
in
fsubrs
fisubs
mov
cwtl
out
cmpsb
cmp
ds
pop
jmp
push
push
or
movsl
push
inc
ja
subl
and
lret
sub
mov
mov
fs
xlat
or
in
mov
aad
mov
int
nop
ljmp
mov
repz
jecxz
cltd
popf
lds
cmp
cmp
dec
mov
insb
xchg
push
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
sub
pushf
adc
aaa
cli
adc
cmp
add
shll
ret
jnp
rcl
jns
sarl
adcb
cli
adc
push
dec
mov
pop
outsb
pop
pusha
push
loope
stc
mov
dec
popa
add
fmuls
dec
mov
call
aas
jg
push
rolb
rcrl
lret
lahf
movsb
jmp
cmp
push
jle
jb
mov
adc
mov
in
stc
stc
imul
dec
out
xchg
cmp
inc
rclb
cmpsl
or
adc
fstl
and
ljmp
pop
mov
mov
test
stos
popl
in
sbb
out
sbb
loop
xlat
sub
jle
mov
std
cli
jmp
push
movsl
mov
or
cltd
imul
and
int
sub
outsl
pop
out
in
lock
scas
aad
fwait
lret
mov
jp
mov
mov
sbb
xchg
pop
rol
std
int3
pusha
dec
imul
mov
pop
rcrl
lcall
mov
arpl
inc
subl
shrb
dec
movl
loopne
sub
fiadds
scas
cmp
xor
adc
mov
mov
popf
test
cmpsl
xor
adc
lret
xor
push
and
or
inc
xchg
mov
fs
jne
adc
std
inc
ljmp
je
xor
inc
scas
sub
inc
sbb
dec
jno
enter
outsl
adc
out
fwait
insl
js
xchg
add
lret
pushf
addr16
cmpsl
aas
mov
mov
jl
ja
sbb
inc
outsl
sbbb
test
loope
loope
pushf
mov
fsubrl
fistl
inc
pop
scas
push
mov
test
insb
inc
inc
cmp
bound
push
movsb
add
dec
or
lar
push
pop
fldl
mov
nop
std
andb
fildl
daa
lea
push
mov
scas
or
cs
imul
jnp
or
sub
mov
mov
push
mov
mov
pop
test
mov
adc
jns
ds
ficomps
out
xchg
push
ds
fcomip
push
orb
and
das
dec
int
stc
sbb
psrlw
loope
fcoms
ss
fisubrl
add
mov
jmp
test
test
xor
cmp
push
leave
jae
repz
enter
sub
clc
lea
iret
push
jae
mov
pop
jl
out
push
adc
mov
dec
adc
fadd
aaa
sub
lret
mov
mov
cmp
cmpsl
cmp
sub
xchg
ljmp
fmul
mov
repnz
jle,pt
inc
leave
into
pushf
mov
ret
xor
sbb
pop
pop
push
jle
icebp
mov
jecxz
aas
xchg
rcrl
addr16
fisttpl
jp
repz
cmp
mov
push
aas
cmp
jecxz
movsl
scas
push
xor
inc
jle
sub
dec
add
pop
cltd
lods
mov
popa
sahf
dec
add
loopne
pusha
lea
mov
aas
adc
mov
lret
mov
ret
cmp
stos
insb
mov
mov
mov
xor
jns
popa
das
jno
adc
sbb
pop
inc
dec
mov
lods
ja
roll
xor
jns
test
ret
mov
clc
nop
insb
inc
lret
mov
das
xlat
dec
int
jbe
xor
loop
jp
ret
adc
xchg
clc
jecxz
xor
adc
fists
test
pop
mov
mov
xor
jne
int3
mov
push
pop
dec
inc
ffreep
rorl
insb
dec
push
dec
pop
loope
jno
jg
divl
aam
push
cwtl
pop
xor
and
loop
test
jne
rol
in
sub
in
sti
les
hlt
cld
and
stos
xchg
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
enter
pop
mov
adc
push
xor
clc
incl
rorb
jbe
cmc
int
jp
jne
or
clc
fldl
mov
popa
jg
mov
dec
mov
pop
daa
xchg
jno
jmp
testb
test
jno
stc
repnz
sub
shrl
sub
push
or
inc
adc
adc
sbb
pushf
fwait
loope
mov
js
pushf
loopne
ds
js
es
mov
sbb
sbb
jl
and
ficompl
lock
jae
loopne
sub
outsl
rorb
add
lock
sbb
push
lods
jg
push
test
cmc
and
jp
iret
jae
dec
mov
dec
pushf
sub
insb
jbe
rcrl
clc
or
imul
cmpl
xor
jo
mov
jle
dec
sub
nop
pop
xchg
mov
aam
mov
enter
add
iret
inc
scas
adc
add
inc
hlt
jmp
push
push
repz
imul
mov
push
pop
aam
pop
fistl
mov
and
mov
xor
pop
jp
outsb
mov
cmp
out
outsb
hlt
jnp
imul
iret
pop
fs
gs
push
outsl
cmp
cmpsb
inc
int3
xchg
fwait
xor
jecxz
pop
mov
or
outsl
inc
xor
fisttpl
xor
jo
cmp
xlat
sub
imul
ds
dec
dec
jb
and
ds
clc
pop
clc
lcall
fisubs
mov
shlb
inc
js
xchg
movsb
jl
lcall
and
xchg
pop
daa
in
push
inc
add
call
roll
sub
ja
adc
in
add
fidivrs
fidivs
jg
or
das
jbe
int3
in
bound
mov
pop
out
pop
jnp
sbb
cmp
pop
cmp
nop
jno
mov
cmp
inc
push
or
mov
adc
pop
mov
jge
call
negb
arpl
mov
lea
jae
repz
cltd
and
jns
int
inc
or
push
push
testb
cmpsb
movsl
pushf
push
xor
in
xlat
shrl
or
xor
fmulp
xor
dec
inc
insb
push
addl
jo
jb
cli
push
mov
je
ficompl
cmpsb
push
hlt
andl
sub
bound
xchg
aaa
cs
test
cs
out
sbb
addr16
stos
lcall
je
movsb
popf
xlat
nop
xchg
or
ffreep
inc
je
push
fstp
add
sbb
xchg
jge
shr
pop
arpl
hlt
stos
inc
imul
pushf
test
into
push
imul
outsl
or
movsb
ljmp
sarl
xchg
cmp
aas
sti
and
dec
stos
lock
mov
xor
loope
xchg
or
sub
stos
xchg
hlt
fcmovb
push
dec
or
adc
lds
or
stc
pop
rcpps
jp
xchg
data16
enter
outsb
add
hlt
in
jbe
scas
jno
jl
sbb
cmc
fmul
stc
jbe
xchg
xor
loopne
sub
cli
subl
or
rol
push
movsl
dec
inc
std
inc
popa
vhsubps
jb
test
mov
sub
cmpsb
jl
daa
je
fstpt
mov
arpl
std
cmc
sahf
jl
sbb
jae
nop
dec
push
jnp
pop
scas
jge
gs
neg
pop
sbb
mov
mov
iret
stos
mov
out
xchg
mov
shlb
int3
push
or
or
push
or
nop
pushf
sbb
pop
push
push
jge
and
std
rorb
add
cmp
lods
pop
add
testb
call
stos
pushf
xchg
movsl
js
mov
xchg
pop
fs
sbb
in
outsl
test
mov
jl
lods
stos
dec
pop
pop
movsb
in
push
push
fs
mov
rorb
ret
add
add
je
lods
mov
imul
sahf
mov
adc
cli
adc
incb
in
bound
andl
xchg
sub
mov
jmp
test
push
adc
movsb
pop
mov
adc
xchg
ret
cmpsl
cld
out
jae
sub
add
outsb
es
mov
inc
dec
sub
mov
cmpsl
mov
mov
inc
dec
xor
testb
test
out
push
ret
or
push
outsb
jo
pushf
ret
jl
pop
das
int3
imul
loop
idivb
popa
xchg
icebp
fdiv
fadds
xchg
jbe
out
enter
stos
push
adc
fucomp
aas
mov
ror
ljmp
js
ljmp
xchg
outsl
xor
inc
inc
shll
mov
jb
mov
inc
into
or
sbb
inc
cmp
pop
rep
scas
cmp
imul
push
jmp
icebp
stos
xchg
mov
xor
ret
push
fmuls
sub
mov
sbb
outsl
mov
pop
and
fadd
cmp
push
push
dec
sahf
add
into
mov
fdiv
jle
fst
inc
or
dec
inc
jmp
mov
call
dec
rorl
mov
nop
pop
jb
dec
sbb
add
lret
dec
fcompl
pop
lock
inc
xor
mov
push
mov
cmpsb
fmuls
std
jbe
mov
jmp
aaa
push
xchg
stos
adc
insl
xor
stos
dec
add
or
xor
loop
repnz
mov
repz
imul
jecxz
adcl
mov
stos
stc
int
inc
fadds
and
stos
lret
shl
cmpsb
jmp
jp
gs
sbb
jae
cmp
adc
pop
xor
push
and
and
dec
mov
repz
das
stos
cmp
add
scas
sbb
cmp
mov
daa
mov
into
xor
imul
mov
adc
add
mov
adc
leave
jne
test
xor
pop
sub
or
das
xor
jmp
add
stos
mov
or
push
and
andb
in
sarl
int
sbb
or
into
push
cmpsb
fisubrl
jno
adc
mov
xor
adc
icebp
loopne
jmp
repz
hlt
dec
xchg
pop
sbb
xorb
mov
movsl
mov
int
lcall
int
daa
xor
imul
int
pop
das
test
inc
sbb
dec
cmp
lcall
pushf
imul
aam
pop
pop
inc
pusha
imul
jg
lret
in
xchg
iret
push
lds
jne
icebp
cmpsb
fisttps
mov
and
test
mov
test
or
js
dec
sbbl
adc
cmp
or
rorb
sub
shl
push
sbb
dec
clc
sub
gs
cltd
xor
push
sub
mov
test
int
cld
xor
jbe
sbb
sbb
aas
dec
adc
xchg
push
mov
scas
ss
pop
int
push
mov
cltd
ret
in
push
or
cld
pop
loop
ret
ja
add
leave
mov
incb
xor
ljmp
or
cmp
cmp
mov
movsl
mov
pop
sub
jle
cwtl
data16
pop
xor
pop
sbb
sti
sub
adc
fcoms
pop
test
arpl
jl
call
daa
pop
nop
mov
cli
test
int
or
mov
pop
adc
dec
nop
movsb
push
ret
dec
xor
or
mov
jae
ljmp
xlat
mov
and
mov
movl
mov
mov
or
mov
mov
jmp
aad
sbb
das
aam
mul
popa
push
cmp
inc
test
js
adc
cli
adc
jle
ret
lods
pop
ja
fwait
lods
dec
xchg
fistps
cmc
sbb
inc
xchg
int
pop
push
bound
xchg
stc
and
mov
addl
pop
xlat
inc
ds
add
je
mov
into
daa
adc
mov
fcoml
jnp
and
mov
nop
dec
or
gs
mov
popa
test
rcrb
test
jmp
xchg
mov
add
fisubrl
mov
sbb
pop
popa
sub
mov
in
imul
pusha
or
jmp
mov
inc
push
jne
jb
lret
mov
jne
mov
push
or
push
js
jne
adc
cmc
mov
sbb
test
xchg
inc
sahf
mov
daa
aas
sub
xchg
jp
mov
out
outsb
xchg
test
jp
or
sub
in
sahf
icebp
and
sbb
loop
push
loope
push
or
outsl
push
fs
jge
test
xchg
add
mov
pop
dec
mov
stos
outsb
mov
nop
stos
sahf
imul
loope
sbb
lods
mov
jns
repz
mov
std
dec
mov
jbe
les
mov
scas
test
ficompl
mov
jp
dec
popf
cmc
lcall
shll
cmp
inc
lods
cmp
hlt
in
push
cmp
mov
sub
dec
jnp
decb
jl
mov
mov
sub
xor
adcl
push
add
xchg
pop
push
shrl
fstpt
push
cmp
add
clc
outsb
dec
dec
insl
je
push
push
into
sbb
add
inc
cmp
fdivr
out
mov
xlat
lods
push
int
xchg
mov
adc
test
pop
ds
and
add
test
hlt
mov
dec
in
test
mov
ret
mov
jle
imul
cmp
mov
mov
in
pop
cmp
push
fsubr
pop
test
inc
jl
mov
cld
jno
int3
insl
push
lods
mov
in
dec
jae
lret
adc
cmpsb
xchg
xor
adc
shlb
pop
dec
shrb
xchg
xor
popa
into
lret
out
insl
lret
inc
fucomip
mov
and
lret
loop
adc
xchg
sub
add
mov
push
adc
mov
push
fwait
jnp
mov
xlat
pop
pop
mov
cmp
jne
adcb
sub
jecxz
xor
push
pop
bound
leave
dec
imul
ja
roll
movsl
neg
in
xor
test
into
cmpsl
sarb
pop
cmc
je
loopne
xor
inc
pop
or
adc
fs
in
inc
sub
cmc
add
mov
call
dec
adc
cmc
out
hlt
mov
inc
sub
cmc
push
cmp
negb
jecxz
sub
test
mov
cmc
aam
push
pusha
fwait
addl
loopne
cltd
out
iret
fwait
or
dec
mov
clc
into
dec
mov
popa
push
je
les
in
xchg
inc
cmpsb
jbe
int
or
jnp
sbb
jns
ficomps
xchg
psrlq
push
mov
jno
jmp
int3
stos
lea
ljmp
enter
jns
aas
xchg
data16
lret
bound
sub
popa
push
push
pusha
add
gs
mov
push
or
bound
ja
or
push
stos
fistpl
mov
lods
jnp
dec
mov
ja
xchg
jl
push
clc
insb
das
sub
ret
xlat
mov
les
push
or
adc
push
jle
inc
aaa
sahf
push
sub
outsb
inc
inc
mov
pop
add
in
test
je
movsl
insl
stos
jl
ljmp
cmp
scas
pop
pand
hlt
and
lcall
jns
stos
test
jecxz
lret
push
aam
stos
ficompl
dec
outsb
es
scas
rcr
outsl
push
xor
jb
sub
push
subb
pop
loop
push
ds
data16
sub
lods
enter
add
mov
or
add
shl
jmp
add
push
adc
mov
adcb
aaa
cli
adc
dec
stos
cmp
vmread
mov
or
mov
data16
lahf
inc
and
mov
add
lods
adc
cli
sub
jmp
testl
bound
sub
push
cmp
and
mov
mov
scas
test
lret
icebp
test
cmove
dec
stos
loop
jno
inc
scas
xchg
pop
mov
mov
xor
jb
fwait
repnz
inc
mov
cmp
push
nop
out
fldcw
cmp
mov
scas
insb
push
pop
int3
push
mov
pop
mov
jae
shll
pop
sahf
test
add
mov
mov
int
push
or
cmpsl
pop
sub
in
insl
cmpsl
pop
out
pusha
repnz
fsub
xor
xchg
int3
gs
push
data16
jbe
movsl
lock
push
dec
mov
out
arpl
repz
not
mov
xchg
xchg
jne
pop
fisttpl
pop
enter
fidivl
jnp
out
inc
in
jno
xor
cmp
rorl
jb
ret
or
fldcw
stc
push
subl
aad
loopne
loopne
mov
in
js
outsb
mov
es
cwtl
pop
add
mov
add
fs
pop
inc
mov
xchg
xchg
stos
lock
into
mov
imul
sub
pop
rcrb
and
add
out
xchg
imul
or
lods
shr
stc
inc
insb
pop
bnd
fdivr
push
xor
dec
mov
mov
inc
roll
xchg
shl
cmp
scas
cmpsl
rolb
pop
xchg
dec
adc
push
je
aam
xlat
aas
xlat
mov
pushf
dec
stos
xchg
lock
inc
lock
xchg
mov
sahf
lea
mov
ret
mov
addb
xor
sbb
jle
inc
adc
adc
loop
push
fisttpll
inc
test
or
mov
xchg
das
jge
jecxz
outsb
or
adc
xlat
icebp
dec
stos
mov
in
sahf
mov
mov
jo
in
scas
cmp
in
test
push
dec
aad
inc
outsl
and
xabort
outsb
sti
in
push
loop
mov
shl
mov
and
and
nop
clc
jb
nop
adc
jbe
in
and
pusha
out
test
fdivrl
fstps
arpl
dec
loop
pop
out
arpl
scas
daa
es
inc
sahf
mov
and
in
push
leave
fcoms
mov
rclb
std
xchg
push
fwait
inc
sub
loop
inc
mov
pop
adc
mov
dec
sahf
adc
es
xor
cs
sbb
jns
cmp
mov
cmpsb
outsb
bound
int
inc
mov
je
loope
leave
and
pushf
mov
cmpl
cltd
and
gs
push
adc
xor
aad
movsb
xchg
fcoml
push
or
or
push
pop
popl
aad
sub
xchg
pop
lret
xor
es
sbb
in
mov
add
inc
push
push
mov
cltd
xor
and
sub
pop
push
sub
and
dec
jmp
xchg
or
ja
jl
mov
shll
loope
fstpl
cmp
stos
or
outsl
adcl
jns
sub
out
jmp
push
in
add
mov
int3
mov
and
push
frstor
hlt
movl
fsubrs
or
mov
jecxz
push
jmp
imul
mov
insl
inc
js
and
push
dec
mov
push
cmp
sub
or
adc
pop
pop
testl
ret
add
cmc
add
cmc
call
cli
lods
pushf
dec
jp
repnz
rolb
call
enter
push
imul
xlat
loopne
push
jmp
call
js
jo
cmp
mov
mov
mov
shrd
jmp
frstor
dec
xchg
movsb
cmp
popl
push
adc
cmp
add
out
sbb
mov
ds
dec
add
adcb
in
cmpsb
mov
stos
loope
jnp
mov
mov
sub
lcall
jnp
out
inc
flds
xchg
lods
iret
je
push
in
fimuls
jmp
cmc
pop
lods
enter
adc
daa
lret
outsb
stos
dec
ret
xor
xor
mov
loope
push
mov
repnz
out
sbb
addb
inc
fcoml
insl
in
push
or
test
scas
or
inc
xchg
push
sar
and
sbb
sbb
adc
cmp
ds
push
push
aaa
shlb
adc
cmp
pop
push
pusha
dec
mov
push
mov
fists
and
sub
push
std
out
jmp
sahf
in
lret
or
push
pop
pushf
mov
sub
jne
hlt
push
adc
add
cmpsl
dec
fistps
lcall
and
lock
jge
cltd
les
testb
divl
testl
push
iret
lods
ror
popa
mov
xor
lret
mov
mov
xchg
punpckhwd
jl
push
xor
insb
sbb
jp
pop
pop
leave
sub
xchg
mov
inc
or
cltd
movsl
mov
stc
dec
lds
and
cli
int3
jge
inc
scas
fucomi
pop
repz
stos
sarl
jmp
sti
inc
xchg
mov
insb
pop
popf
imul
cmp
leave
shl
aad
cld
pushf
jle
hlt
imul
xchg
dec
cld
leave
xchg
sti
fimuls
fbld
jnp
sbb
add
dec
movsb
and
clc
repz
jno
dec
xor
pop
int
inc
cwtl
mov
insl
divb
cmp
and
pop
lods
lea
inc
fnsave
mov
int3
mov
jnp
and
sti
fdivp
push
mov
push
or
loopne
jge
jae
js
stos
outsl
mov
ds
es
mov
pop
ja
shrl
pop
call
add
pop
test
daa
dec
pusha
lods
cmp
dec
lret
movsl
mov
inc
add
clc
insl
in
and
call
inc
sub
pop
mov
cli
sbb
int
pop
mov
outsl
jae
daa
xchg
dec
sub
sub
lds
jno
loop
ret
mov
fidivrs
loop
inc
mov
cwtl
bound
pop
ja
andl
sub
test
cmp
cwtl
sarb
and
insl
aam
add
pusha
inc
mov
jle
sub
jno
sub
or
dec
ret
fldenv
dec
pop
mov
mov
cld
ret
popf
sub
loop
dec
pop
sbb
sub
mov
or
repnz
notl
cmpsb
and
ss
shrb
lret
or
sub
ljmp
mov
arpl
add
xchg
xchg
cld
mov
mov
push
aam
lods
cmc
mov
xchg
xchg
dec
ret
les
cmp
stc
movsl
and
mov
sub
in
mov
nop
adcl
std
mov
add
jbe
sarb
add
fdivs
ret
sbb
ds
aad
lea
lcall
sarb
ds
cmp
jo
sub
xor
xchg
jge
mov
fcomi
in
push
sub
pop
rcll
inc
cld
into
and
pop
mov
loopne
imul
xor
cmp
jg
mov
xchg
test
mov
dec
or
lret
xor
repnz
add
movsb
xor
out
mov
xorl
jecxz
movsb
andb
nop
lods
mov
shlb
das
cmp
lret
cmp
clc
or
mov
add
mov
push
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
push
cmpsb
push
jmp
pushl
movsb
mov
mov
xor
adc
mov
repz
xchg
cli
int3
test
daa
adc
inc
sahf
cmp
rclb
sbb
lock
jmp
sub
inc
shl
and
scas
pop
add
mov
lods
pop
adc
xor
mov
cmp
and
jmp
hlt
mov
cmpsb
mov
adc
push
inc
cmp
arpl
mov
fisubrl
mov
mov
sbb
xchg
mov
rolb
dec
pop
xchg
popa
or
les
pop
sub
mov
mov
mov
push
dec
mov
lock
scas
mov
out
clc
lcall
xchg
jg
bound
cs
lods
pop
pop
adc
inc
mov
push
test
or
xchg
push
repz
stos
adc
fisttpll
rorl
decl
xlat
data16
dec
mov
xchg
ficompl
cmp
rcll
mov
mov
cmp
in
fisubrl
aas
xor
sarb
pop
dec
inc
adc
sub
jb
cmp
lea
outsl
or
mov
enter
scas
fbld
inc
cmp
mov
jecxz
add
mov
nop
fists
rcrl
xor
mov
sbb
sar
xor
outsl
stc
into
xchg
sub
fidivl
mov
sub
ret
inc
js
push
ds
es
nop
fadds
les
pop
decb
fsubr
xor
clc
mov
cmp
call
mov
addr16
mov
xchg
lock
stos
out
in
add
imul
sub
int
js
fimull
testb
cmp
inc
std
inc
mov
mov
xchg
pop
xchg
insb
arpl
jecxz
loop
pusha
lret
add
fbstp
icebp
adc
sbb
dec
jae
pop
outsb
mov
sub
xchg
sbb
or
test
fdivr
imul
jo
aad
jecxz
or
cmp
fs
or
sub
mov
adc
icebp
cwtl
and
cmc
add
or
sub
mov
and
push
shlb
repz
std
inc
xchg
mov
mov
daa
push
and
or
pextrw
int
sub
iret
aad
fidivrl
pop
mov
add
or
inc
lds
sarl
sbb
push
dec
pop
push
pop
jnp
and
popf
ja
and
outsb
mov
shll
loop
pop
shr
pop
pop
das
mov
hlt
lods
push
popa
push
popl
push
fstpt
xor
push
add
inc
out
mov
push
inc
arpl
shrb
aas
adc
iret
cmpl
jmp
jbe,pt
fisubl
or
rcl
in
add
dec
outsl
xorb
fnstcw
lock
mov
cltd
add
jno
adc
lcall
dec
mov
push
dec
jmp
or
jle
ds
jle
mov
dec
inc
or
sti
dec
xlat
ljmp
mov
adc
movsl
leave
scas
xchg
mov
aaa
std
xor
push
jnp
cli
in
xchg
dec
popf
xchg
out
not
out
dec
dec
cwtl
cltd
aad
bound
lahf
mov
add
int
pushf
das
xchg
inc
jbe
mov
xchg
mov
xor
xchg
js
dec
fidivs
lahf
push
addr16
mov
lcall
adc
scas
xchg
sub
adc
mov
sub
cltd
sub
jle
ror
int3
push
sbb
inc
rcrb
sbb
add
andb
lock
mov
ret
cmp
mov
fwait
cmp
mov
jle
lcall
push
xchg
jns
sub
jl
call
lock
inc
mov
mov
jmp
mov
dec
js
fs
xor
adc
xchg
dec
test
push
adc
aaa
cli
adc
call
cmp
push
mov
repz
ss
or
les
dec
sbbl
das
imul
xor
mov
popa
lods
jno
cli
mov
fmuls
scas
pusha
in
or
in
mov
xor
mov
fwait
mov
popf
xchg
xor
test
sub
sarl
iret
fisubrs
inc
add
jns
cmc
es
pop
popa
leave
add
sahf
lcall
xor
mov
cmc
xchg
dec
test
cmpsb
xor
mov
in
dec
into
jl
ja
ja
dec
adcb
xchg
ficomps
xchg
in
loopne
pusha
pop
test
jnp
les
mov
or
push
movsl
sub
imul
jge
aaa
xchg
add
aad
sub
hlt
adc
fdivl
push
xchg
mov
pop
out
and
nop
jp
jbe
lds
mov
loopne
adc
push
xor
or
add
push
mov
ret
xchg
mov
out
jb
or
mov
sahf
inc
loope
xchg
bnd
jge
fwait
pushf
fcomps
inc
fwait
stc
cli
cmp
pop
lahf
jl
out
mov
dec
sbb
stos
ret
cmpsl
into
push
xor
cmpsb
cmp
xchg
mov
hlt
push
in
rcr
push
push
sar
movq
lock
pop
cwtl
fs
dec
fdiv
jp
inc
dec
xor
lret
das
push
es
jae
sbb
lods
sbbb
dec
aas
jo
cwtl
rcll
bound
stc
insb
jg
rcrb
mov
sbb
mov
mov
outsb
inc
xchg
sub
scas
mov
nop
push
lea
xor
dec
jae
jbe
ljmp
adc
push
lret
pop
sbb
fadds
mov
or
sbb
into
xor
in
xchg
lret
testb
clc
push
add
lcall
hlt
push
sbb
mov
xor
fstpt
fwait
repz
push
cltd
push
sar
hlt
jl
push
int3
xchg
and
and
int
or
into
sahf
mov
mov
outsl
ljmp
jne
sbb
dec
sub
jmp
and
mov
push
pop
push
out
cld
repnz
or
pushf
inc
lds
into
scas
rclb
pop
jecxz
ss
or
sbb
xchg
xchg
add
ret
mov
dec
dec
movsb
in
punpckldq
int
imul
das
int
push
icebp
or
or
loopne
out
mov
jl
or
xchg
outsb
mov
inc
jno
cmp
stos
cmp
fdivrl
inc
adc
push
xchg
mov
inc
jae
int
rorl
mov
or
cmp
inc
jle
add
jmp
daa
sub
push
lds
std
stc
cltd
fsubrl
pop
xchg
add
push
stos
adc
mov
sub
hlt
jle
jbe
jmp
pop
pop
sbb
imul
cmp
mov
dec
xchg
out
ret
pop
loope
pusha
pop
fimull
jl
roll
inc
test
in
pop
mov
pop
pushf
aad
aad
add
inc
dec
and
jne
pop
gs
bound
pop
xor
into
mov
push
lret
pop
sub
sahf
pop
or
rcll
jecxz
xlat
jns
xor
adc
out
in
dec
aad
xchg
pop
push
cmp
cmpsb
aam
loope
cmpsb
inc
sub
xor
ret
andl
cmpsb
int3
call
scas
das
fisubrs
push
xor
jae
sub
out
ret
lock
mov
pop
addb
lock
and
add
hlt
ror
or
inc
sub
pop
cmc
pop
cmp
rorb
leave
cltd
fnstsw
mov
inc
add
addr16
xchg
pop
add
leave
fs
fs
xchg
jmp
add
sub
decb
lods
enter
add
int3
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
add
adc
cli
adc
lods
lahf
lcall
mov
cmp
rorb
mov
pop
rcrl
mov
xchg
addb
xchg
test
leave
xchg
std
dec
ljmp
jb
into
movsb
hlt
ds
fsubr
popl
mov
jno
pusha
loop
daa
jmp
jb
mul
fistpll
cltd
shll
adc
pop
sbb
pop
arpl
loope
push
mov
sbb
inc
mull
push
movsb
mov
sarl
aas
jg
es
pop
in
mov
and
jg
rcrb
jbe
out
enter
dec
fisttpll
dec
dec
call
leave
mov
fisttpll
ljmp
add
sub
jl
pop
push
sahf
in
mov
sub
or
xlat
adc
jle
dec
das
in
dec
gs
xchg
xchg
fldenv
lds
aas
mov
add
xchg
dec
nop
sahf
in
enter
aad
mov
popa
xchg
sahf
jmp
pushf
andb
jecxz
aam
mov
inc
pop
or
inc
subl
dec
xor
jle
inc
negl
push
leave
dec
sahf
dec
push
mov
adc
jb
ret
adc
mov
in
mov
push
inc
pop
loop
adc
fdivrs
movsl
xorb
stos
rcll
push
inc
and
mov
xchg
inc
fnstcw
mov
jg
stos
movsb
fiadds
inc
fsubl
adc
mov
xchg
outsb
xchg
sbb
aam
leave
sbb
mov
mov
jns
xchg
fisubrl
lock
push
aad
or
add
enter
fstl
insb
push
fst
add
fwait
int
int3
sub
sbb
das
xor
mov
or
movntq
inc
scas
mov
or
std
sub
out
xor
or
pop
push
dec
add
jl
cwtl
add
inc
push
out
les
dec
stc
arpl
loop
jb
fwait
pop
jge
out
xchg
add
inc
sub
jae
and
mov
xchg
mov
scas
insb
fdivr
and
pop
clc
andl
nop
add
pop
dec
test
sbb
pop
inc
dec
cmp
mov
push
sbb
adc
xor
mov
lret
add
or
jge
das
es
lcall
or
subl
fistpll
test
negl
jno
xchg
popa
inc
xor
movsb
jg
mov
xchg
jnp
das
push
xchg
jb
adc
in
jae
adc
push
sbb
fistpll
inc
aas
sbb
bnd
pop
ret
mov
cmp
inc
mov
pop
sub
fidivrl
adc
push
les
jo
fwait
popa
loope
out
lcall
adc
mov
mov
dec
leave
insb
dec
or
jmp
and
sbb
mov
mov
jmp
ret
test
jp
xor
push
adc
lahf
adcl
and
pop
pushf
jle
sbb
out
and
outsl
push
mov
pop
sar
cli
neg
les
imul
data16
dec
pop
pop
xchg
jne
sub
repz
jmp
xor
imull
cwtl
xchg
dec
pop
mov
sub
ja
push
out
shlb
sub
aas
mov
adcb
jmp
movsl
test
stos
out
add
jne
xor
shlb
popf
push
sbb
enter
dec
lods
int
mov
out
sbb
dec
rol
mov
ret
mov
push
adc
push
repnz
shll
inc
mov
test
popl
inc
jns
push
push
lea
jne
in
aad
in
xor
stc
xor
xor
repz
jecxz
sub
sbb
fbld
push
fs
test
mov
test
xlat
fwait
xor
test
pushf
fidivs
imul
ljmp
mov
xor
or
mov
shrd
add
jmp
push
fsubrl
dec
or
mov
dec
cmp
aaa
cli
adc
arpl
sbb
hlt
or
js
adc
fldt
nop
outsb
mov
rcrb
or
out
jecxz
sub
xchg
jp,pn
mov
fdivrs
enter
pop
js
push
pop
and
pop
loop
add
add
inc
push
jnp
pusha
insl
sbb
or
mov
into
adc
out
ja
xor
cmp
std
xor
or
sub
xchg
and
push
cmp
xor
sub
test
push
xchg
insl
dec
insl
dec
inc
insl
ss
shrb
jmp
mov
jae
dec
or
or
xchg
orl
xchg
sub
les
push
aas
inc
mov
pusha
push
dec
in
incb
jbe
cmpsb
out
add
push
xor
loope
sbb
jo
js
call
push
push
adc
add
loopne
daa
mov
jb
enter
cmp
outsb
fcoms
mov
cs
push
and
aaa
push
ja
sbb
pushf
sbb
mov
pop
xchg
ret
xor
jnp
pop
inc
inc
lea
mov
push
outsb
and
daa
in
mov
lret
sbb
mov
fwait
inc
test
sbb
or
pop
push
push
lret
mov
pop
insb
lret
inc
sbb
or
and
cmpsb
xchg
ret
andl
sbb
mov
jno
aas
sahf
shll
xchg
pushf
psllq
lret
in
pushf
jl
mov
xchg
and
sbb
sbb
out
mov
mov
lcall
push
sbb
int
xor
mov
orl
sbb
stc
jmp
out
sub
and
cmpsb
jns
std
cmp
pop
lods
cmpsb
inc
inc
push
adc
out
mov
xchg
sahf
in
shll
pusha
inc
jnp
scas
std
dec
gs
lods
mov
in
rclb
sbbl
stc
stc
addb
stos
inc
lods
repz
shrl
lret
sbb
jmp
dec
mov
je
adc
cmpsb
in
loope
daa
stos
xchg
xchg
ret
push
inc
sbb
hlt
in
mov
lcall
loop
inc
outsb
push
push
xchg
xchg
lods
lahf
cmpsb
test
std
xor
push
or
fwait
std
mov
sti
outsl
ss
out
mov
pslld
daa
mov
mov
xor
ds
out
xchg
push
fistpl
inc
insl
pop
lcall
cmc
or
push
mov
mov
mov
popa
fimuls
xchg
int
add
adc
xchg
or
or
jmp
sub
pusha
gs
xor
int3
fiaddl
add
adc
xor
mul
jne
jmp
or
popf
cmc
imul
mov
jmp
sbb
es
repz
jnp
jg
jne
sbb
mov
out
inc
shrb
sub
adc
int3
jo
shrl
xchg
pop
nop
pop
dec
mov
daa
lock
stc
cmp
mov
lret
cmp
bnd
int3
vxorps
pop
mov
sbb
scas
xchg
faddl
bound
mov
dec
or
icebp
add
sbb
add
dec
xor
push
int
cmc
nop
mov
mov
fcomps
mov
icebp
cmc
mov
shrb
out
enter
gs
adc
cmp
aam
cltd
lods
or
lods
popa
mov
inc
xchg
aaa
add
xor
mov
add
push
xor
dec
or
dec
jle
add
pop
jp
or
mov
stc
pop
adc
mov
pusha
pop
pop
fsubs
xchg
in
test
push
insb
mov
mov
adc
lret
xor
mov
add
stos
sbb
and
ds
pusha
or
sbb
mov
adc
js
out
fnsave
add
movsb
mov
cld
jmp
iret
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
push
dec
jle
adc
aaa
cli
adc
pop
sahf
cmp
addr16
ja
sbb
xchg
cmp
hlt
outsl
mov
jnp
loop
subb
out
stc
pop
aam
jae
jle
adc
adc
pop
mov
mov
fsubp
mov
in
cwtl
les
mulb
cmp
cmp
inc
addr16
inc
xchg
xor
mov
stos
xor
lds
in
repnz
pop
xor
mov
mov
addr16
push
sbb
xchg
adc
inc
jp
dec
sub
mov
hlt
adc
sbb
xchg
cmp
jle
and
cmpsl
and
mov
gs
cmc
movsl
push
aas
sub
mov
das
inc
out
out
stos
pop
xlat
mov
pop
adc
lret
mov
ss
insl
mov
adc
int
lret
adc
sbb
or
xor
mov
xlat
xchg
or
sbb
pop
push
fsubp
clc
mov
inc
push
inc
pop
and
pop
sahf
mov
xor
ds
jbe
fst
mov
xor
iret
outsb
es
sub
xor
ret
mov
cmc
jge
cmp
xchg
pusha
ror
bound
imul
or
outsb
iret
add
inc
mov
sbb
and
inc
mov
jb
xchg
ljmp
icebp
adc
dec
xor
sahf
dec
aad
xchg
mov
sbb
int
scas
pop
jb
in
aaa
sub
add
mov
ret
cmp
jg
pushf
imul
cmp
xchg
imul
in
test
jns
push
ljmp
mov
ds
cmp
mov
add
dec
lret
das
lea
mov
sbb
loope
mov
sbb
xor
rolb
push
mov
mov
hlt
aaa
push
iret
jg
push
shlw
add
popa
pop
adc
andb
ret
push
push
mov
lret
push
or
insl
push
xchg
dec
pop
cmp
ja
dec
lret
fistl
push
mov
mov
dec
mov
repz
jl
jle
test
es
int3
push
xchg
jge
pop
imul
push
std
push
xchg
outsl
fistpl
sub
inc
xchg
mov
cmc
fbld
mov
push
repz
dec
mov
pop
push
or
inc
roll
mov
sbb
or
sbb
out
sbb
or
nop
sahf
leave
push
xchg
nop
repnz
cmp
loop
mov
testb
shr
lds
mov
mov
jno
jmp
fdiv
and
xchg
fsub
jg
lcall
or
in
mov
sub
xchg
add
cmp
inc
stos
jno
std
fdivp
mov
ret
js
mov
jg
cmpl
and
andl
pop
rcrb
cmp
imul
jns
pop
in
mov
ja
sahf
shrl
iret
hlt
add
push
ret
into
or
in
add
dec
cs
fistpl
mov
mov
inc
inc
outsl
fwait
adc
test
mov
call
xor
out
int3
mov
lea
leave
jmp
pop
and
mov
imul
mov
cmp
inc
in
mov
inc
popf
sti
xchg
int3
xchg
pop
inc
lea
mov
int3
cmpsl
sbb
icebp
and
ret
adc
scas
pop
jp
cltd
cmp
add
ljmp
pop
into
test
int
lea
xchg
add
jbe
test
jmp
mov
std
sub
xor
jge
mov
mov
nop
inc
es
mov
sub
in
mov
jl
mov
xor
lock
sbb
mov
xchg
mov
mov
jle
nop
lods
jle
or
outsl
sbb
addb
leave
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
push
cmp
adc
cli
adc
dec
cmp
xlat
mov
insl
add
pop
sbb
int3
mov
mov
ret
int
mov
mov
scas
xor
push
cmpsb
push
cmp
rcrl
add
mov
out
pop
rcrb
popf
pop
lcall
mov
movsl
mov
shr
inc
cli
nop
data16
push
shll
mov
mov
and
adc
jg
sub
les
sub
inc
rcrl
pop
mov
mov
dec
pop
cmp
mov
add
movsb
fwait
jo
idiv
sti
mov
sbb
cmpsb
shll
sbb
repnz
mov
mul
jnp
inc
arpl
lds
cmc
inc
in
mov
push
push
rorl
movsl
std
gs
or
fwait
ja
mov
lcall
ret
mov
mov
into
pop
cmp
cli
or
aam
int3
xchg
dec
fistl
roll
gs
mov
jns
sub
xchg
adc
mov
cmc
adc
push
sub
fdivrp
call
nop
pop
cmpsb
push
and
mov
arpl
bound
loope
push
or
mov
dec
clc
xchg
mov
pop
cmp
data16
xchg
xor
adc
mov
lcall
inc
push
mov
add
push
or
and
outsl
jne
insb
mov
xlat
mov
pop
mov
scas
fnstenv
mov
cmc
jae
cli
ret
mov
dec
repz
out
testl
insb
dec
mov
std
jecxz
adc
idivb
outsl
add
dec
or
or
mov
arpl
xchg
in
xchg
sbb
push
out
fbstp
jl
daa
jge
mov
inc
sub
adc
xchg
and
jp
add
das
cs
jae
jmp
pop
lea
andl
into
sub
and
test
pop
loop
idivb
add
pop
push
xchg
bound
orb
test
jle
out
mov
sbb
aas
cmc
fistl
jecxz
mov
add
push
jp
rcll
adc
int
sbb
sti
mov
lods
stos
loope
xorl
xchg
in
sub
lods
mov
ffreep
sbb
jl
sub
adc
in
dec
add
pop
sbb
dec
mov
jle
call
movsl
push
mov
mov
xchg
cmp
pop
cmc
data16
aas
sbb
jge
bound
add
push
and
xchg
iret
sbb
xor
test
and
mov
or
cmc
cmp
arpl
iret
adc
rcrb
movsl
mov
das
mov
or
lcall
mov
fadds
jo
cltd
sahf
jae
and
je
gs
imul
xchg
in
fmuls
in
mov
cmpsl
sbb
or
push
rolb
xor
fwait
js
adc
lock
nop
xor
or
and
inc
jae
scas
cli
or
ss
adc
addr16
fwait
daa
sbb
imul
add
out
cmp
fwait
jl
pop
jne,pn
incb
cltd
jno
test
sub
jg
stos
pop
inc
sub
xlat
pop
push
pop
cmpsb
lahf
cltd
mov
aaa
pop
shl
xchg
dec
cmp
mov
dec
scas
jp
add
push
and
ret
and
les
cmp
jne
lahf
xor
cmpsb
fstps
adc
lds
shlb
data16
in
sub
sbb
cld
fadd
imul
push
and
inc
fsin
cmp
ss
cli
imul
gs
jmp
jp
dec
sub
hlt
loop
add
push
pop
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
pop
repnz
out
adc
aaa
cli
adc
mov
jge
jns
inc
addr16
jo
fadds
insb
mov
mov
inc
lds
rorl
push
xor
pop
fwait
fs
jns
jae
add
push
aad
mov
push
out
jmp
mov
xchg
mov
mov
hlt
call
adc
mov
sub
shrl
inc
mov
adc
sti
call
lahf
loop
mov
jmp
push
xchg
sbb
leave
cmp
repnz
outsl
jmp
cmp
mov
sbb
add
jbe
jl
xor
xchg
jne
fnstcw
aad
fwait
outsl
ja
inc
push
aad
filds
lret
in
cwtl
push
jp
je
test
xor
mov
fdivrl
mov
or
xchg
aam
imul
js
mov
dec
sub
ret
mov
fadd
inc
stos
out
fcoms
jle
jmp
inc
stc
push
fbstp
shlb
jecxz
aam
cmp
pop
stos
pop
add
stos
aas
fcom
xor
jno
clc
cmc
sbb
dec
ljmp
sbb
inc
sarb
roll
lret
lcall
mov
cmp
cli
les
and
sub
in
or
out
mov
loope
xchg
fisubrs
xor
adc
scas
xor
lret
inc
enter
stos
or
outsl
out
ja
adc
int3
or
cmp
xchg
and
xchg
sahf
adc
mov
je
sbb
test
mov
mov
orb
faddl
xchg
nop
out
mov
mov
int
mov
and
mov
sbb
mov
jbe
js
loop
mov
xchg
inc
mov
lods
jl
shrb
xchg
add
cmpsb
cmc
mov
mov
cltd
in
loope
cmp
fs
sahf
cmpsl
dec
pushf
in
outsb
adc
jo
add
out
fsubl
pop
lret
mov
loope
push
ficompl
cmp
stos
fs
and
or
cmc
lcall
sbb
scas
jnp
fldt
scas
cmc
aam
daa
mov
inc
ret
cmc
push
inc
movsb
jbe
insb
or
mov
cmp
jp
cmp
outsb
call
jnp
insl
mov
cmpsb
mov
cmp
sbb
pop
dec
inc
adc
clc
shl
jge
iret
cli
dec
filds
repz
jp
enter
xchg
mov
fldt
fs
mov
xchg
mov
ret
popa
adc
mov
push
add
pop
cs
test
aas
jb
xchg
push
cmp
mov
int
or
xchg
fcompl
jle
mov
sbb
dec
push
outsb
ret
in
xor
adc
insb
outsb
clc
aad
push
or
jno
inc
fstp
mov
mov
fbld
cmp
adc
or
xchg
lret
xor
add
cmpsb
aaa
insb
jmp
outsb
lods
mov
sbb
or
jl
push
cli
mov
adc
xchg
add
add
ret
xor
mov
cmp
mov
fisttps
dec
push
in
mov
add
ljmp
shl
add
xor
dec
inc
jno
mov
bound
adcb
jns
insb
inc
pop
ret
and
out
and
aas
push
dec
movsl
arpl
decl
xor
or
pop
aaa
das
sbb
adc
add
dec
pop
gs
jno
and
jnp
or
or
sbb
push
stos
sub
push
fldt
xor
adc
insb
add
xchg
ljmp
and
and
jp
adc
out
test
cwtl
fidivrs
xor
pop
jge
and
icebp
cli
scas
dec
cmpsl
inc
lcall
add
jmp
adc
mov
and
out
js
mov
sub
adc
aaa
cli
adc
push
insl
stc
push
pop
into
addr16
pop
lahf
test
push
int3
shl
out
xchg
xlat
xor
icebp
mov
mov
movsb
cmp
mov
es
rolb
mov
jmp
jp
inc
fs
outsl
xchg
xchg
adc
mov
sbb
das
lock
push
test
shll
stos
imul
jle
sbb
jbe
cmp
mov
pusha
add
jno
sbb
add
movsb
cwtl
mov
jp
push
stos
fs
into
loopne
fxch
shl
jnp
xlat
push
or
enter
inc
fsubrs
dec
xchg
xchg
dec
pushf
mov
arpl
add
les
inc
push
fstpt
jmp
daa
sub
dec
xor
sub
mov
imul
rol
xlat
lahf
repz
fdivl
pop
xchg
sar
pop
aad
test
push
inc
push
lock
mov
sarb
pop
mov
sbb
cmp
repnz
push
test
mov
test
jns
fwait
push
push
inc
dec
mov
sub
adc
cld
xchg
adc
xorb
mov
sub
lcall
lods
lods
sbb
das
xor
sbb
sub
imul
decl
adc
insl
sbb
dec
je
inc
mov
outsb
pop
and
iret
loopne
stc
and
testb
lret
in
adc
repz
xchg
push
sub
lock
in
outsl
mov
into
gs
cld
inc
pop
xor
mov
fisubl
xchg
call
popf
out
cmpsl
mov
out
jmp
lahf
mov
inc
mov
jo
arpl
add
dec
jmp
lds
inc
dec
jae
dec
mov
dec
int3
shll
inc
push
jg
lcall
imul
leave
jb
repz
orb
push
add
jp
ljmp
xchg
sti
fbstp
popa
mov
jo
xor
movsl
sbb
orb
cmp
mul
jecxz
or
xor
cld
jno
loop
or
sub
outsb
or
movsl
push
movsl
out
sbb
shlb
fidivs
movsl
push
insl
pop
xchg
push
or
mov
dec
dec
add
lcall
cmp
xchg
pop
sub
cmp
sub
adc
hlt
lods
arpl
mov
pop
pop
or
faddl
pop
pop
sub
bound
or
pop
daa
repz
stos
test
pop
cli
aas
pop
popa
sub
stos
movsl
sahf
clc
mov
and
aam
push
imul
adc
fmull
in
sbb
inc
and
test
sub
xor
fwait
xchg
sbb
testb
push
pop
lcall
push
pop
cmp
pop
stc
icebp
and
cmpb
push
or
xchg
adc
movsb
jbe
mov
cmpsb
bound
mov
into
jg
xchg
jo
add
repz
add
cs
and
fisttpll
cmp
icebp
and
or
popa
test
ljmp
jo
xchg
dec
test
dec
inc
ss
negb
sbb
fstpt
or
inc
call
push
push
je
cmp
adc
aas
ds
jne
push
sub
enter
in
roll
fistps
mov
pushf
dec
inc
call
jl
adc
sub
inc
in
adc
cmp
adc
jno
cmp
lods
std
adc
mov
hlt
hlt
das
test
mov
push
rcrb
pop
ljmp
jg
sbb
add
data16
stc
pop
pop
add
ficoms
out
jg
mov
jle
shll
ret
inc
pusha
jbe
mov
xchg
dec
adc
adc
loop
stos
dec
testb
jno
leave
adc
lock
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
mov
clc
dec
outsl
sbb
adc
cli
adc
outsl
test
leave
aas
in
xchg
rorb
test
inc
cmp
filds
or
xchg
dec
cmpsl
jmp
jne
testl
test
mov
out
pop
bound
xor
ss
add
jae
push
mov
loop
lods
in
scas
aad
out
mov
pmaxsw
rorb
out
mov
cmp
stos
xor
push
andl
xchg
push
fucomip
movsb
mov
jp
and
iret
sbbl
xor
call
loop
pop
pop
inc
adc
dec
aas
lds
jb
xor
xor
xor
and
xchg
pop
mov
adc
and
push
push
in
bound
mov
fidivl
mov
fnsave
jno
sbb
aam
xchg
mov
lret
cmp
mov
dec
mov
pop
and
xor
adc
sub
or
ss
xchg
add
jle
test
pop
mov
or
cmpsl
jae
das
mov
push
pushf
insl
fcompl
loopne
xchg
ficompl
sbb
xchg
and
cmp
ja
mov
mov
xchg
scas
aas
xor
inc
push
adc
std
push
into
push
jb
roll
daa
rolb
mov
push
jmp
or
insb
dec
pop
mov
mov
dec
in
add
xor
push
test
dec
pop
sbb
mov
popf
pop
movsb
sbb
lods
imul
and
sti
stos
and
sahf
dec
jo
adc
mov
mov
lea
push
out
inc
fiaddl
in
daa
jge
jno
aas
jmp
cld
inc
daa
dec
js
cltd
addl
lea
or
jnp
scas
loopne
fwait
pop
movb
mov
out
mov
mov
adc
mov
jp
fs
push
js
loop
dec
int
inc
jl
insb
add
cld
in
push
bound
nop
ret
lods
stc
inc
jmp
and
jae
insb
rolb
lret
inc
xchg
out
les
out
cld
lretw
mov
cmp
sbb
sbb
mov
pop
loope
lock
jbe
sub
test
outsl
test
push
adc
jge
cli
adcl
sbbb
sub
mov
push
jp
pop
cld
mov
repz
outsb
cli
dec
movsl
cmp
mov
inc
pushl
cmp
popf
jg
jg
movsb
sahf
jge
cmpsl
dec
xchg
es
aas
or
imul
push
xchg
into
adc
jbe
xchg
outsl
push
jnp
xchg
sub
sub
pop
dec
push
push
cmp
fwait
jb
xor
mov
outsl
fwait
loop
imul
jge
mov
mov
adc
jne
xor
dec
fnstcw
rol
sub
aad
lods
fcompl
cmpsb
repnz
fldl
mov
adc
mov
in
dec
xchg
jg
dec
mov
cmp
aaa
dec
sub
test
scas
jno
cld
jle
inc
cmp
push
mov
mov
cmovp
mov
or
in
mul
filds
push
xchg
mov
jbe
mov
negb
xchg
loop
pop
mov
mov
and
and
mov
xor
push
xor
or
xchg
xchg
scas
xlat
sbb
mov
jae
scas
in
in
dec
aaa
dec
adc
mov
dec
jns
jae
loopne
out
subl
idivb
clc
testl
aam
add
jo
out
dec
dec
pop
adc
jbe
mov
mov
dec
push
inc
shrb
pusha
shrb
adc
jbe
dec
jg
sti
hlt
bound
adcl
jae
push
sub
sti
test
xchg
sbb
roll
inc
sub
sbb
adc
or
adc
lds
das
out
sbb
push
mov
xchg
popa
jecxz
adc
out
add
cmp
outsl
push
push
push
daa
dec
ljmp
loope
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
pushf
adc
dec
mov
adc
xchg
cli
adc
aad
pop
pop
push
aad
or
push
push
mov
dec
loope
test
mov
hlt
mov
scas
mov
adc
aas
mov
outsb
test
leave
in
mov
jns
push
pxor
mov
cmpb
out
push
insb
jmp
scas
popf
data16
movsl
jnp
stos
shlb
ret
sub
pop
repz
sub
mov
arpl
dec
xor
adc
rcl
aad
add
movsl
sub
mov
sbb
xchg
les
push
jecxz
and
pop
push
and
ret
mov
js
jo
loopne
mov
mov
mov
icebp
fucomi
cs
xlat
add
fwait
leave
data16
pop
popf
sti
lret
jo
popf
cmpsb
scas
daa
jge
jb
sub
cmpl
ja
cmpsl
adc
or
xor
jo
inc
sub
outsl
cmpsl
in
sbb
sub
mov
pop
pop
or
clc
outsb
or
sti
ljmp
movsb
fldl
into
and
fisttps
sbb
jae
dec
clc
xchg
push
fcoms
movsl
les
dec
popf
jmp
adc
rcll
dec
or
or
clc
xchg
stos
push
jno
cmp
mov
nop
sbb
lods
leave
pop
mov
bound
pop
push
movb
cmp
imul
mov
xor
push
xor
cmp
insl
add
lcall
adc
int3
daa
cmc
in
mov
pop
sub
jmp
cmp
stos
inc
add
mov
loop
fiaddl
xchg
pop
loope
insb
add
mov
cmp
aam
outsb
pop
enter
cmpsl
or
mov
shlb
addb
mov
pop
fnstcw
xchg
push
cli
cld
shlb
lcall
aad
cmp
loopne
dec
lock
jb
pop
inc
cmp
sbb
cld
mov
lea
sbb
stc
push
jo
push
movsl
fldt
lret
into
outsl
dec
inc
dec
mov
sbb
or
mov
xchg
xchg
push
push
xchg
mov
adc
shll
div
ja
mov
scas
mov
jns
int3
andb
cmpsb
cmp
mov
add
outsb
lock
lahf
popf
fldl
pop
fmuls
pop
pop
mov
data16
aaa
push
loope
sti
popw
mov
iret
out
adc
rolb
pop
rcl
pop
fwait
and
je
dec
shll
insb
loope
dec
cwtl
loop
pop
mov
dec
jmp
test
xchg
inc
push
ja
or
xchg
sarb
repnz
add
push
sub
sbb
mov
daa
icebp
jecxz
push
inc
cmc
scas
and
jae
movsb
dec
into
dec
xor
jnp
mov
push
mov
mov
pusha
into
add
fs
pusha
int3
mov
sahf
mov
jl
adc
jle
sub
add
mov
outsb
testb
sbb
in
xor
js
insl
jbe
rolb
nop
sbb
mov
rclb
adc
orl
mov
gs
daa
mov
xor
dec
shl
xor
fwait
push
push
adc
inc
icebp
push
cmp
ret
and
mov
mov
aam
faddl
fisubrs
dec
fs
shlb
rcr
cli
dec
and
insl
pushf
mov
orl
push
mov
push
pop
out
scas
pop
out
in
mov
iret
jns
push
mov
push
decb
push
lods
lods
iret
or
mov
cmpsb
js
cmp
and
add
test
ss
xor
jl
popa
sub
out
cmc
adc
mov
stc
or
add
add
dec
add
add
ss
ds
xor
ret
push
xor
adc
xchg
cli
adc
sub
pushf
add
lahf
orb
dec
xchg
ljmp
imull
arpl
enter
dec
mov
lock
stc
xchg
mov
mov
xor
nop
cltd
jle
push
xchg
hlt
repz
add
xchg
sbb
add
imul
push
and
or
ljmp
jecxz,pn
cld
lcall
mov
jecxz
jnp
cli
cmp
push
xor
sbb
pop
into
fs
push
sarl
inc
js
xor
lds
test
mov
push
xchg
adc
xchg
mov
xor
jbe
pusha
hlt
testb
call
mov
enter
jl
pop
shlb
pop
lret
data16
xor
shlb
and
xor
pop
xchg
add
or
shl
mov
jbe
rorb
adc
jl
push
sbb
add
pushf
test
cmp
dec
loop
jmp
xchg
pop
out
imul
mov
setnp
sbb
int
mov
repz
xor
subl
cld
insb
xor
nop
xor
mov
lock
mov
int
inc
rorb
lret
add
into
pop
inc
je
in
aas
rolb
add
pushf
cmpsb
cltd
and
pop
fistps
ret
test
setle
inc
and
loopne
insb
mov
in
mov
fstl
add
dec
and
cmc
sti
mov
jge
and
leave
push
fldl
dec
mov
adc
fwait
inc
mov
lret
xchg
inc
outsb
pop
imul
mov
pop
cli
or
mov
push
jp
xor
mov
gs
inc
pop
pushl
and
scas
aaa
add
add
dec
cmpsb
pop
xchg
jge
push
idivl
js
push
movsl
nop
jg
add
pop
pop
ljmp
jecxz
subl
xor
sub
xor
cmp
mov
jmp
inc
pushf
xor
jge
outsl
dec
xor
cmp
repnz
pop
fisubrl
jae
lock
xor
and
fistpl
adc
mov
daa
add
jp
sahf
xchg
cmp
adc
cmp
leave
mov
adc
xor
out
adc
movb
cmp
outsb
push
and
adc
xor
sbb
cmp
xorl
jmp
jmp
xlat
inc
xchg
push
cmc
add
jle
aam
test
adc
das
loope
cmpl
test
pop
mov
incl
cwtl
xor
aaa
sbbl
inc
mov
mov
jge
add
dec
int3
and
mov
lcall
daa
pop
mov
xchg
shll
in
dec
addb
and
sub
sti
das
xor
pop
cmp
mov
les
loopne
popa
pop
icebp
mov
mov
scas
add
sub
dec
mov
add
push
icebp
mov
xchg
sahf
rol
imul
xor
je,pt
into
lea
int3
pop
incb
stos
scas
push
pusha
roll
cmp
jmp
mov
movsb
mov
mov
fsubs
pop
mov
cli
pop
arpl
popa
test
leave
jle
aam
fisttpl
pop
int3
ret
into
sub
sarb
ret
insl
ficompl
mov
xchg
std
add
in
and
lods
pusha
dec
xlat
enter
xor
sbbb
adc
adc
mov
leave
fimuls
cmpsl
mov
enter
adc
add
cmp
pop
mov
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
aad
sarl
xchg
cli
adc
xchg
cltd
jo
push
sbb
jmp
pop
and
repnz
jle
inc
mov
movsl
jno
loope
push
imulb
sub
fs
repz
push
jnp
cmpsl
fisubs
leave
cmp
dec
mov
popf
xchg
movsl
je
loope
test
aas
lahf
cmpsl
clc
fdivrl
js
mov
fidivl
loop
aam
js
scas
xchg
lea
sbb
lret
sbb
inc
dec
pusha
test
push
test
icebp
mov
stos
inc
mov
cli
cmp
cmc
stc
imul
lock
shll
out
out
out
in
cmp
jno
out
addr16
dec
adc
mov
fstps
jae
mov
push
loopne
push
mov
test
jbe
icebp
xchg
pop
lcall
adc
sar
lods
cmp
sub
jnp
jne
add
cmp
imul
xorl
pop
ljmp
aam
imul
jmp
jl
pop
sbbl
inc
addl
jg
push
pop
insl
in
mov
loopne
or
jo
mov
xor
xchg
popa
xchg
xchg
test
push
mov
addl
jno
mov
aad
push
or
cmpsb
mov
call
mov
adc
loop
pop
mov
inc
iret
xchg
mov
out
fdivs
xorb
cmpsb
xchg
rorb
pop
lahf
cmpsl
jg
xor
dec
stc
or
cmp
data16
js
hlt
inc
and
ss
test
insl
sahf
and
pop
sahf
negb
movsl
mov
xor
mov
jae
jp
dec
sti
and
clc
and
fildll
jle,pt
movl
and
mov
mov
dec
in
ret
xchg
pushf
mov
mov
inc
lret
sub
cmp
mov
mov
in
sbb
popf
les
xchg
cmc
jnp
addr16
arpl
bound
xchg
fnstcw
data16
cmp
jle
sub
pop
xchg
lret
fbstp
and
cld
add
sbb
xor
aam
xor
int
inc
add
mov
mov
adc
andb
jb
sub
dec
mov
adc
xchg
mov
into
into
pop
int
mov
decb
idiv
das
push
mov
xor
dec
pop
xor
inc
out
or
lret
lea
and
xchg
and
inc
push
jge
rcrl
imulb
cmpsb
clc
cmp
pop
in
sbb
jl
ja
nop
not
aas
cld
jns
stc
lahf
push
aaa
jne
les
and
add
js
and
cmpsb
adc
jge
mov
mov
rcl
outsb
in
nop
pop
fsubr
lock
mov
repz
stos
cmp
daa
adc
fistpl
sti
neg
sbb
sub
cmp
popa
cli
jp
lods
sahf
push
cmpsl
jbe
jo
lods
or
ss
cmpsb
jle
aas
dec
pop
nop
adc
ljmp
add
xchg
add
inc
mov
push
sahf
mov
lods
or
insb
xor
mov
icebp
pop
test
inc
mov
loop
in
lock
and
cli
cmc
aas
lcall
aad
or
lcall
enter
cmp
js
pop
inc
adc
cmp
mov
daa
pop
jl
dec
adc
insb
sbb
loope
mov
aam
sbb
mov
insb
jno
mov
push
sahf
into
push
arpl
out
push
jno,pn
lcall
add
testb
push
xchg
js
pushf
ret
fwait
dec
out
aam
out
sub
push
mov
ljmp
scas
in
inc
fadds
push
add
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
ja
jg
clc
adc
icebp
push
mov
push
call
sbb
idivb
mov
loope
stos
shrl
xchg
ja
movsl
out
fldcw
push
inc
mov
pop
cs
sbb
pop
pop
jns
lock
sub
dec
rcll
test
cwtl
cmp
movsb
mov
ret
loope
jo
dec
lahf
cmc
jnp
jo
sbbb
fistl
cmp
push
jbe
sbb
fs
mov
iret
xor
jno
cli
int
pop
push
pop
imul
sbb
int
rolb
or
adc
mov
lcall
cmp
cli
fs
or
push
rcrl
sahf
dec
pop
and
cmp
into
js
mov
xor
out
lods
inc
jmp
sub
push
mov
xor
xor
mov
sub
push
push
stc
or
mov
mov
ret
mov
mov
bound
mov
cli
sar
sub
pop
rcl
mov
jnp
outsb
mov
outsl
cs
in
and
push
aas
in
xor
push
shll
jne
sbb
repz
pop
pop
insb
adc
call
push
push
inc
mov
xor
mov
inc
das
mov
rcrl
movsl
push
cmp
mov
sbb
hlt
ret
push
push
hlt
cmp
lds
cmpsb
fwait
or
pop
or
sbb
aam
sub
adc
in
jae
mov
sti
roll
je
scas
ror
dec
int
pop
arpl
xchg
cmpsb
xchg
scas
arpl
jmp
inc
outsl
dec
mov
rolb
mov
and
jns
mov
ror
repnz
test
cmpl
adc
pop
pop
pushf
jmp
or
push
adc
aaa
push
iret
pop
xchg
cmp
or
outsb
adc
and
lret
inc
jmp
xchg
jle
stos
pop
add
fsts
nop
cwtl
xchg
mul
rcl
inc
pusha
jo
insb
mov
leave
jl
mov
dec
outsl
add
xlat
outsb
pop
xlat
es
rorb
push
das
push
sub
sub
mov
push
or
cmp
mov
mov
pop
dec
xor
push
or
jge
test
push
jno
xchg
mov
inc
fistl
shlb
cmp
jnp
inc
xchg
das
push
inc
mov
mov
into
dec
pushf
adc
into
into
lahf
jmp
cltd
mov
push
xor
xchg
jnp
jecxz
pushf
mov
lret
out
pop
mov
outsb
rcll
dec
pop
jle
xchg
mov
dec
sub
push
mov
adc
mov
xlat
jge
stos
imul
push
xchg
mov
and
inc
xor
outsl
dec
jnp
fstps
mov
mov
shrl
inc
xchg
aaa
push
and
roll
out
loope
push
cwtl
adc
jmp
sub
lret
imul
xchg
add
jge
je
sarb
dec
xchg
orl
sbb
icebp
xchg
shlb
inc
aaa
mov
add
or
sbb
pop
lret
cmp
ja
or
mov
nop
and
inc
add
xchg
in
jg
gs
push
dec
mov
or
popa
xchg
cmp
repnz
mul
outsb
insb
sub
sbb
das
jae
mov
vpsubusb
int
pop
cli
movsb
inc
xlat
lods
push
lea
inc
inc
inc
repz
popf
stc
fmull
jbe
jle
jmp
fstpl
int
dec
and
sbb
ljmp
jno
push
in
lahf
inc
je
movsb
add
jbe
ficomps
dec
mov
lahf
push
aam
dec
inc
mov
push
xchg
ret
xor
jecxz
mov
ficompl
xor
int
in
jl
cmp
xor
xchg
dec
mov
inc
in
push
add
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
jnp
clc
adc
adcl
out
or
in
sub
or
adc
imul
lea
add
push
in
sub
aas
adcb
mov
jb
jg
sbb
mov
outsb
mov
bound
pop
jo
sbb
push
pusha
nop
push
xchg
ss
loope
mov
sub
mov
sub
out
inc
roll
jge
cli
pop
call
xor
sbb
and
mov
mov
dec
mov
cmp
mov
dec
adc
scas
stos
inc
filds
out
cmp
sub
les
int3
cmc
xchg
push
inc
inc
sbb
stos
int3
mov
cwtl
fwait
dec
and
jl
jo
cmp
out
out
rcll
adc
enter
std
cmc
mov
ds
into
scas
or
andb
xor
and
mov
lret
mov
jle
xor
cwtl
cmp
hlt
dec
mov
mov
in
or
dec
cmc
andb
xchg
pop
loopne
xchg
into
cltd
xchg
cmp
push
pop
aam
push
jns
dec
cmp
and
xchg
movsl
inc
hlt
mov
add
or
cltd
and
stos
dec
es
imul
dec
or
inc
sar
inc
mov
stc
loop
mov
and
xorb
cmc
outsb
jmp
test
mov
xchg
mov
sub
jb
sbb
cmp
mov
jmp
jns
in
and
inc
aas
clc
cltd
add
jbe
mov
cmc
dec
out
add
jp
inc
jg
aam
pop
adc
aaa
xorb
dec
loop
dec
cmp
repz
ljmp
cld
cwtl
adc
mov
leave
cli
mov
push
mov
push
das
mov
lods
aad
div
mov
divl
insl
bound
scas
stos
cmp
stc
test
xor
hlt
lgs
xchg
out
mov
add
negl
pop
fidivs
add
add
mov
mov
sbb
test
scas
mov
pop
jnp
test
xlat
mov
jmp
cmp
jecxz
and
repz
rcrb
mov
out
jne
lods
xor
jae
push
xchg
push
lcall
dec
inc
addb
adc
fnstcw
pushf
xor
imul
out
mov
pop
jge
scas
mov
push
push
mov
sbb
sub
sub
lahf
in
fidivs
call
xchg
aam
jbe
mov
aas
add
push
xchg
adc
invd
subl
xchg
jl
in
out
mov
sti
mov
fistl
inc
push
addr16
sub
mov
add
into
decb
xchg
mov
fs
mov
gs
or
outsl
sub
popa
and
fistpl
and
faddl
rclb
cmp
aam
xor
adc
es
jg
ss
scas
xchg
mov
xchg
fisubs
and
das
nop
cmp
pop
mov
lcall
arpl
add
lret
out
cmpsb
pop
sub
faddp
stos
fwait
pop
or
xchg
jae
aas
jle
adc
stos
push
ljmp
ret
and
popf
cmc
mov
fsubr
bound
and
mov
jl
dec
push
sti
cli
xchg
inc
int
cltd
jge
lcall
mov
iret
xchg
mov
hlt
and
test
mov
or
fisubrs
inc
or
xchg
jae
cmc
in
mov
sub
not
lret
mov
rcr
add
and
iret
mov
push
aas
stos
arpl
imul
int3
mov
adc
jp
pop
sbb
xchg
inc
mov
and
fadds
add
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
mov
xor
adc
dec
cmpsb
or
and
cmp
cmp
cld
and
cs
and
mov
aaa
push
or
out
popf
lods
lds
push
sbb
out
inc
xchg
cmp
loop
mov
lret
js
scas
xchg
mov
in
fwait
jg
mov
scas
pop
ss
mov
stc
pusha
loop,pn
std
jge
es
enter
hlt
sahf
and
push
fwait
adc
in
push
add
cmp
bound
adc
push
cmpsl
mov
movsl
notl
fldcw
fcmovnbe
inc
out
or
xchg
sub
xor
adc
adc
subl
jo
mov
cmpsl
add
xor
repnz
sbb
subb
push
dec
xor
pop
or
push
lea
and
sub
and
and
add
jne
testl
jp
pusha
mov
lods
loop
fstpl
mov
nop
daa
fbstp
aas
insl
mov
test
xchg
movb
icebp
int
xor
add
push
leave
jmp
adc
jmp
cli
nop
sub
pusha
jecxz
adc
dec
jecxz
ret
std
and
mov
mov
rorb
scas
push
cmp
roll
lds
ret
repnz
sti
dec
test
mov
adc
call
jp
incl
pop
xor
add
popf
cld
xlat
daa
outsl
sbb
dec
or
imul
nop
movsb
push
add
leave
adc
rorb
sub
repz
inc
fs
into
xchg
pop
test
xchg
sbb
and
andl
fwait
loope
dec
ss
dec
xchg
jg
add
push
aas
inc
ljmp
dec
cmp
and
pop
adc
jo
and
mov
sbb
sbb
les
adc
popa
std
adc
aam
test
xchg
mov
ret
add
xor
pop
shrb
test
scas
pop
xchg
daa
xchg
sbb
in
ficoml
scas
and
cld
rorb
adc
insb
fisttps
fildl
mov
insl
lahf
out
cltd
jne
adc
add
std
js
lahf
fnsave
sub
mov
pop
test
xchg
repnz
lds
sub
sbb
sub
imul
add
loop
scas
popa
bound
xor
xchg
add
imul
sub
outsl
inc
nop
or
mov
cmove
inc
mov
add
mov
popa
out
jge
mov
dec
pop
daa
icebp
xor
dec
mov
int
arpl
ret
jmp
psrad
add
pop
pop
sub
nop
jge
inc
lret
loope
mov
loope
sti
ds
sbbb
clc
lahf
and
mov
loope
push
sub
in
out
push
xor
cltd
cwtl
sub
xor
sbb
xor
sbb
mov
sbb
pop
jge
xchg
out
dec
add
int3
push
pop
clc
jp
adc
or
out
and
imul
push
aaa
mov
imul
lock
hlt
lods
les
fstpl
js
jmp
incl
sub
mov
sub
dec
pop
outsb
repz
cld
cmc
sbb
xchg
push
sub
sub
push
jmp
mov
mov
test
dec
adc
mov
gs
mov
push
aas
jae,pn
push
push
fldl
pop
dec
fidivrl
xor
add
into
out
xchg
or
fbstp
mov
mov
jae
ljmp
lods
loop
call
ljmp
add
lea
mov
or
add
and
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
push
stos
jne
dec
out
clc
adc
dec
sub
xorb
and
and
add
negb
mov
shlb
clc
popl
test
push
push
add
movsb
lea
sub
sbb
pop
push
test
jo
int3
mov
test
test
popa
jp
icebp
mov
jnp
shll
mov
bound
mov
or
fld
xor
adc
ds
dec
jbe
mov
or
pop
xchg
or
std
arpl
cmpsl
js
lea
rclb
in
sbb
xchg
mov
ja
fucomi
jno
inc
ljmp
push
icebp
test
mov
popf
xchg
int
mov
lea
xchg
nop
daa
jne
push
out
jl
push
pusha
insb
jbe
lret
adc
movb
dec
pop
adc
mov
js
add
sti
addb
mov
inc
pop
xor
shl
test
mov
das
data16
dec
mov
or
adc
or
pop
jmp
xor
stc
call
jp
pop
dec
mov
icebp
mov
push
mov
inc
pop
out
xchg
out
stos
lret
mov
xchg
lret
push
push
out
aas
fmul
shrl
dec
leave
dec
mov
mov
push
mov
loop
jg
adc
push
pushf
loopne
outsl
inc
pop
push
cmp
mov
ja
subl
push
push
aad
test
lods
in
ds
xorl
push
shlb
fstpt
daa
jne
cmpsb
push
lcall
mov
push
push
xchg
insb
rclb
add
pop
dec
fprem
cmp
into
jge
test
arpl
mov
or
mov
repz
push
push
aad
lods
fidivrl
mov
das
in
or
out
ss
in
xchg
lds
cmp
pop
mov
cmc
div
xor
addr16
lea
jecxz
and
in
inc
add
out
imul
fwait
in
cmp
fsubl
mov
cmpb
sbb
inc
sbb
loope
cwtl
rcll
aam
mov
mov
ret
in
ret
repz
lds
jbe
icebp
mov
fdivs
das
in
push
popa
mov
or
jl
jae
fisubrl
push
paddq
ret
stos
clc
sbb
xchg
out
sbb
mov
pusha
xor
rcrl
movsl
icebp
cld
and
movsl
pusha
jecxz
xor
icebp
ljmp
cmpl
push
mov
mov
xchg
jb
idivl
rcrb
mov
test
pop
pop
push
psubw
hlt
incl
dec
out
xor
in
inc
icebp
or
repnz
movsl
in
sarl
lcall
inc
jno
inc
mov
iret
and
xor
sbbl
fdivl
jp
push
into
cmp
mov
mov
xchg
cmp
adc
or
pop
jmp
movsb
in
sub
add
push
adc
js
mov
pop
dec
rol
aam
add
sbb
xor
push
add
sbb
xor
adc
mov
mov
lods
pop
dec
dec
fistpl
shlb
stos
inc
lods
dec
or
out
lods
lock
pop
push
cmp
mov
imul
inc
jecxz
ror
cwtl
push
sbb
test
or
sbb
mov
test
fdivl
pop
addb
cmp
jp
and
adc
fdivl
pop
lock
mov
and
andb
mov
testb
lds
aad
inc
push
push
mov
icebp
inc
xor
mov
sub
add
mov
xor
div
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
jnp
adc
push
out
push
in
out
xchg
rolb
aaa
sub
enter
xlat
xlat
sbb
and
xchg
cmp
mov
aaa
inc
sub
jb
pop
stos
iret
dec
inc
pop
push
dec
addb
lret
pop
dec
and
andl
not
outsb
jo
rolb
mov
cwtl
nop
leave
test
cli
lock
push
sub
inc
mov
fwait
sub
in
inc
push
pop
repnz
pusha
mov
xorl
out
inc
out
cld
xor
aaa
push
out
or
pop
xchg
fldt
into
fs
andps
xlat
add
pop
testl
sbb
fistpl
popa
ret
and
orb
test
push
aaa
xor
out
icebp
inc
scas
mov
js,pn
and
pop
ljmp
push
iret
pop
fnsave
push
mov
and
jbe
mov
ret
xchg
movl
fldt
mov
pop
rcr
stos
fcoms
movsl
fildll
xlat
adc
popf
jle
mov
pop
in
jns
mov
xchg
sub
push
pop
rorl
or
jo
mov
cld
mov
imul
jae
dec
std
jmp
push
inc
gs
inc
jo
jp
fs
dec
mov
pusha
sub
test
in
stc
push
data16
push
mov
inc
cmpsb
sahf
rol
jl
push
jl,pt
and
pop
inc
mov
push
cld
sbb
and
inc
jo
fsubs
push
dec
push
aad
mov
and
cltd
cmp
mov
mov
adc
ljmp
inc
aas
scas
loopne
ficoml
push
pop
fcoms
mov
sarb
jmp
or
xrelease
adcl
hlt
xor
jle
jo
inc
xchg
outsb
sbb
lods
outsl
pop
inc
les
mov
adc
and
and
cmc
call
adc
clc
fildll
xchg
stos
ja
test
das
lahf
nop
jns
aad
jns
sbb
arpl
xchg
xchg
xchg
popa
ds
xchg
pop
addr16
test
jecxz
sub
adc
scas
testb
inc
cmp
jle
or
mov
enter
mov
into
adc
jle
mov
popf
lods
jg
data16
cli
or
or
xchg
add
mov
adc
fadds
les
stos
add
dec
out
mov
rolb
outsb
mov
xchg
cli
and
and
cs
push
dec
xor
mov
les
xchg
mulb
sarl
jmp
mov
pop
jl
sub
pop
iret
push
fldl2e
mov
xchg
pop
outsl
aas
test
dec
cmp
int
fs
dec
movsl
push
mov
fwait
add
push
inc
add
lahf
pop
inc
push
mov
pop
mov
pop
lret
sbb
and
mov
addr16
xchg
fwait
cmpsb
jb
push
fcomps
dec
pop
cmp
mov
xor
push
pop
int
cmp
mov
cwtl
push
rorb
es
inc
roll
in
or
mov
cmp
cmp
lcall
xchg
outsb
faddl
xor
push
jl,pn
pop
mov
adc
mov
aad
cmpl
sub
pushf
adc
fcoms
dec
and
ja
xchg
enter
movsb
add
je
pushf
filds
aaa
sub
pushf
iret
in
xchg
iret
adc
mov
test
mov
fisubl
pusha
or
ficompl
std
mov
add
cmpsl
jmp
and
cmpsb
add
cld
popa
jae
es
sti
or
mov
test
mov
inc
scas
ja
or
enter
add
inc
faddl
add
add
inc
fdivr
add
add
inc
aam
insl
add
mov
mov
jmp
and
mov
out
jno
mov
mov
xchg
cli
adc
mov
add
dec
lock
adc
mov
mov
popf
mov
insb
into
inc
jmp
xchg
insl
rcl
in
xor
int
loopne
outsb
dec
dec
pop
hlt
cmp
push
imul
push
cmpsb
mov
mov
inc
mov
dec
cmp
fdivrs
sub
hlt
mov
cmp
pusha
movsl
ret
lods
push
push
jo
add
fcoms
push
data16
pop
stos
rolb
xorb
cmpsl
jp
ljmp
mov
or
ret
insb
cwtl
jb
sahf
mov
fildl
dec
lock
xchg
inc
sbb
clc
rolb
lret
sbb
pop
jnp
or
mov
fidivrl
cmp
fisttpll
add
push
andps
lock
arpl
divb
inc
dec
jnp
sti
addr16
fiaddl
cwtl
call
scas
add
std
mov
call
imul
out
sbb
xor
sub
in
stos
nop
stos
sub
dec
ret
pop
cmp
dec
das
int3
out
push
popf
inc
lods
push
jne
mov
in
imull
push
mov
lret
inc
pop
cltd
mov
adc
je
repnz
jp
lret
sub
mov
mov
nop
mov
inc
leave
loop
int
int
or
add
push
jge
add
inc
gs
loop
jno
jl
fbstp
adc
push
roll
cmp
lea
adc
bound
jg
cmp
inc
sub
xchg
add
dec
xor
inc
cli
icebp
mov
ret
xchg
pop
push
push
les
cwtl
sbb
add
insb
enter
aaa
mov
add
shll
fs
int3
xor
dec
lret
push
aad
push
or
sti
cmp
pop
out
push
add
stos
dec
pusha
cmp
test
jge
std
and
push
dec
push
inc
push
sbb
aaa
cmp
xchg
push
xchg
mov
das
and
ficoms
xchg
jp
xchg
sbb
pop
push
sbb
orb
cmp
sbb
or
sub
xchg
cmp
or
sbb
xchg
add
mov
mov
mov
adc
les
fldz
aad
inc
iret
adc
cwtl
jge
xchg
mov
imul
sti
xchg
adc
test
mov
pop
inc
lods
push
inc
sbb
enter
mov
flds
xchg
push
push
mov
std
push
jns
pushf
movsb
or
cld
mov
sub
out
sti
xor
fidivrl
loop
in
cmc
aad
fildll
in
cwtl
xchg
jl
jl
iret
mov
fidivl
xor
andl
icebp
mov
adc
xchg
mov
push
pop
popf
dec
aam
and
mov
push
aam
lcall
mov
and
cmc
sub
into
imul
es
es
xchg
lods
outsl
sub
ror
sbb
xchg
stos
xorl
mov
cmp
push
movl
jecxz
stos
add
push
and
les
add
jg
pop
mov
ss
xchg
jle
inc
fdivr
mov
mov
jne
lock
mov
je
inc
cmp
stos
lea
or
lret
aaa
and
jecxz
adc
mov
xor
out
loop
mov
out
jb
sub
stos
mov
push
dec
xchg
jo
xchg
pop
inc
pop
xor
pop
aaa
movsb
add
add
and
xchg
enter
sar
lea
jne
rcrb
sub
jge
sti
adc
add
frstor
cli
mov
mov
hlt
jp
and
jp
add
xor
mov
jmp
out
mov
xchg
stc
mov
sub
int
adc
mov
dec
cmp
xchg
push
pop
add
frstor
arpl
sub
daa
sbb
or
pop
jp
xor
dec
cmc
xchg
mov
std
loop
jno
divb
sti
cwtl
ljmp
or
push
out
aas
rolb
jne
nop
push
add
out
rol
test
imul
mov
sbb
mov
cs
data16
push
mov
test
push
ficomps
mov
sub
jl
xor
sti
out
cmp
or
jns
or
push
add
xor
insb
scas
adc
arpl
aad
mov
cmp
and
add
mov
mov
imul
adc
dec
fwait
rclb
lcall
mov
sub
push
cmc
icebp
sbb
add
or
dec
mov
pop
jmp
mov
cmpsl
arpl
inc
mov
fisubs
pop
jg
lock
fwait
inc
enter
push
pushf
stos
lahf
shll
jg
cs
jl
mov
lds
mov
scas
mov
xor
pop
push
sub
push
cmp
and
fcoml
pop
aaa
fwait
lahf
lods
xor
and
pop
mov
pop
xchg
fidivrs
repnz
cmp
pop
xlat
jae
pusha
dec
sbb
mov
aas
mov
das
or
loope
aad
das
push
inc
inc
mov
inc
inc
out
mov
mov
inc
mov
int
and
push
dec
jg
into
out
adc
sub
call
outsl
orb
push
in
pop
dec
mov
sbb
ds
inc
push
mov
sub
adc
dec
call
sub
add
scas
cli
dec
pop
int3
test
xchg
stos
movsb
gs
cmp
std
cmpsl
xchg
sbb
ds
mov
lods
mov
int3
repnz
jp
es
jl
pop
lea
cwtl
dec
leave
sbb
jl
and
clc
cmpsb
imul
push
movsl
pavgw
nop
cwtl
jle
loop
hlt
fidivrs
test
pop
dec
pop
rcrl
sbb
cmp
out
ret
insb
sub
js
scas
push
daa
out
shll
aas
pushf
cmpsb
mov
addr16
outsl
mov
jge
dec
mov
xor
ss
clc
shrb
xor
pop
dec
mov
ss
lock
sbb
and
add
iret
pop
push
les
fistl
mov
pop
dec
stos
fs
cmp
sbb
loopne
inc
out
add
jl
negl
sbb
call
testb
sbb
repz
gs
dec
lods
jno
pop
shll
inc
inc
cwtl
sub
lahf
fnsave
mov
add
daa
scas
inc
je
push
fs
cs
push
sub
add
mov
jmp
xor
rolb
mov
ss
fcompl
mov
push
int
stos
adc
xchg
mov
sbb
and
hlt
jmp
or
and
mov
rcl
lock
push
mov
sahf
cmp
lods
lret
out
cld
adc
or
pop
ljmp
sub
mov
adc
addb
mov
sti
sub
and
imul
mov
mov
rorl
aaa
ret
mov
ficomps
lea
fwait
and
call
inc
inc
repz
repnz
daa
jo
dec
call
icebp
dec
sbb
and
pop
pop
push
addr16
mov
out
mov
test
roll
sbb
stos
test
mov
mov
sbb
test
dec
xchg
pushl
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
mov
cli
adc
pusha
nop
jb
lcall
push
dec
jle
jmp
gs
fimuls
adc
mov
inc
loop
lods
insl
int
push
cs
ret
andl
xchg
cs
insl
pop
inc
jb
jbe
mov
inc
shrb
mov
inc
andb
fdivp
jb
lods
adc
pop
push
repz
cmp
mov
lret
cmovge
or
sub
adc
arpl
lods
jl
std
push
dec
int
mov
fidivrl
push
inc
iret
dec
mov
dec
in
fucomip
orb
jno
xor
jl
negb
stos
cmp
pushf
addb
xchg
popa
ror
mov
mov
ret
js
lahf
mov
dec
lcall
jecxz
or
mov
xchg
push
mov
xchg
cli
xchg
dec
xchg
inc
movsb
lods
jno
cmp
lds
jb
test
sbb
or
outsb
pop
fsub
mov
dec
mov
ljmp
jne
scas
dec
pop
stos
inc
and
js
sbb
jecxz
push
cmp
mov
push
pop
cmpsl
sar
mov
leave
in
and
jae
daa
ljmp
test
aam
xchg
call
xchg
and
fiadds
and
mov
lcall
and
mov
push
leave
mov
out
mov
int
out
xchg
inc
push
or
sbb
xorb
sub
jo
stos
insb
cmp
enter
push
mov
stos
mov
cli
addb
inc
lahf
add
inc
push
push
push
or
dec
xchg
fdivrl
in
xorl
fimull
cld
orl
cmp
mov
arpl
imul
push
inc
icebp
stos
lock
lods
idivl
jae
lods
loop
sbb
jo
inc
aaa
jae
sub
pop
sarl
repnz
xchg
sarl
sti
mov
movsb
fwait
lret
das
jge
xor
ljmp
scas
outsb
loop
lock
aas
imul
xchg
in
mov
es
das
lds
pop
mov
mov
es
xchg
mov
pop
mov
xlat
pop
jp
push
xchg
cmp
jae
sbb
in
inc
xchg
je
sahf
cmp
cmp
mov
dec
pop
sahf
xor
jb
add
adc
add
cmpsl
add
push
push
xlat
aaa
cmc
or
and
mov
sti
mov
in
js
sbb
cmp
je
mov
jmp
test
mov
mov
cli
cmpsb
xor
test
and
enter
lahf
xchg
or
or
repz
adc
in
cli
jb
in
mov
fiaddl
in
adc
jae
movsb
leave
sbbl
sub
and
cltd
loopne
aam
fstpl
mov
mov
push
ljmp
into
cmp
jae
adc
pop
jno
cltd
ss
clc
and
ss
adc
jge
xchg
dec
movsl
push
inc
xor
stc
mov
push
jecxz
les
movsb
stos
cltd
jne
out
mov
cmp
dec
cli
ljmp
test
decl
aas
xor
std
mov
fcmovne
dec
dec
cmpsl
pusha
mov
jae
stos
and
sub
and
cmc
xor
scas
in
inc
fbld
out
cmp
pushf
or
fidivrl
and
push
pop
icebp
sub
out
idivl
hlt
movb
cwtl
daa
mov
jl
movsb
push
mov
push
push
push
orl
pop
xchg
sti
fldenv
shll
xorl
fdivr
xor
stos
repz
and
dec
lahf
int
xchg
sbb
mov
lret
in
int3
movsl
lds
push
xchg
mov
shl
mov
ljmp
pop
sub
jno
in
dec
ja
xor
rorb
pop
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
in
cmp
clc
adc
stc
in
sub
add
jno
push
stos
cmpsl
rcll
addr16
or
mov
adc
mov
sarb
repz
jmp
imul
cmp
test
aam
fs
mov
sbb
fsubrp
addl
cmp
nop
idiv
cmp
adc
shll
ja
subl
out
hlt
push
mov
inc
subl
insb
mov
leave
mov
sub
cmp
add
shll
cmp
movl
filds
ret
pop
add
clc
pop
xor
cmpsl
lods
inc
insb
jle
adc
cmp
js
jmp
xchg
xor
ds
jl
add
mov
pop
xchg
lods
sbb
aam
xorl
jno
inc
in
jne
sbb
pop
and
inc
cmp
icebp
adc
sub
frstor
inc
mov
ja
xor
mov
lret
cmp
sbb
aas
mov
mov
xchg
cmp
xor
add
cmpsl
xchg
fwait
mov
sub
xor
mov
add
mov
pop
add
push
pop
js
cmp
cli
das
movsb
add
lea
subb
int3
ja
ljmp
insb
xor
xor
lcall
hlt
stos
cmc
fstps
inc
in
movsl
xlat
mov
into
mov
pop
sbb
adc
lods
push
mov
les
loop
sub
dec
hlt
js
repnz
pmulhw
cwtl
push
xchg
imul
jmp
cmp
lret
and
adc
scas
pop
dec
push
call
fwait
arpl
jp
push
xor
adc
and
push
test
popa
imul
xlat
or
fistpll
cwtl
inc
in
mov
jae
mov
cmpsl
in
notl
jl
cmpsl
cmpsl
mov
insb
sbb
pushf
int3
movsb
dec
fwait
idivl
popf
test
jmp
or
pop
pop
adc
imul
dec
loop
lods
movsl
nop
xor
pop
mov
mov
xchg
test
jne
fwait
adc
xchg
fisubrl
xchg
jle
xchg
mov
mov
popa
sub
sbb
sti
movsl
mov
mov
sub
jl
mov
fstl
pop
notb
jae
leave
addb
mov
pop
jmp
sub
inc
add
fidivl
fildl
push
sbb
aas
lea
xor
push
test
pushf
mov
lcall
test
mov
fiaddl
jno
lret
mov
xchg
repz
and
test
bound
insb
jp
ss
leave
xor
dec
fldenv
aas
cwtl
mov
jp
popa
or
dec
push
sbbl
or
xchg
sbb
xlat
rcl
mov
inc
lock
mov
cwtl
mov
jmp
mov
cld
pop
cmc
dec
mov
add
inc
dec
inc
outsb
xlat
xchg
lock
xor
mov
loope
dec
inc
jecxz
add
jns
jnp
fwait
mov
or
lahf
mov
mov
mov
or
pop
jl
icebp
mov
dec
xchg
jae
inc
jp
mov
xlat
inc
iret
jne
dec
pusha
push
xchg
sub
sbb
rol
cmovns
inc
aaa
cmp
and
pextrw
adc
fidivrl
jbe
inc
ljmp
sbb
sbb
push
adc
sub
in
xchg
and
jmp
mov
test
xchg
push
dec
aam
jp
jecxz
dec
call
mov
cmp
mov
push
or
and
loop
inc
ficomps
scas
out
pop
pop
cmp
inc
clc
xchg
sbb
add
inc
hlt
movsb
das
add
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
adc
pop
xchg
filds
movsb
je
test
lret
addr16
cmpsl
cmpb
xor
xchg
popa
pop
test
lds
xchg
gs
dec
jle
dec
or
rcl
pop
leave
cs
inc
sbb
movsb
fistpll
sbb
leave
sub
cmp
inc
pop
cmc
inc
aas
mov
push
pop
and
jge
aaa
jo
mov
test
sarl
xor
mov
adc
sbb
jo
sub
mov
fs
jecxz
sub
out
xchg
aaa
lcall
movsl
rep
hlt
leave
add
xchg
sbb
inc
loop
jl
int3
aam
sub
xchg
mov
ffreep
mov
insl
dec
push
cmpb
mov
mov
imul
stos
adc
leave
sbb
mov
inc
mov
cmp
loop
sbb
inc
iret
cmc
xor
add
push
das
sbb
adc
repz
cs
subl
xor
push
jae
push
push
ja
mov
cwtl
cwtl
mov
jmp
dec
and
ds
jg
dec
rcll
clc
ja
push
cmp
jno
aaa
and
inc
mov
mov
pop
mov
mov
add
lea
sahf
mov
daa
jmp
adc
lods
outsl
ror
imull
inc
jbe
aad
fs
lds
hlt
add
inc
xchg
mov
sub
xchg
fwait
int
fnstenv
inc
inc
jmp
loopne
popf
imul
pop
xchg
in
jae
pushf
es
imul
push
popf
loop
push
mov
jno
sbb
stos
leave
sub
xor
adc
andl
cs
js
xchg
aad
in
pop
sub
xor
lods
stos
testl
popa
outsb
cmpb
cli
rolb
jno
out
lahf
add
xlat
or
dec
ja
mov
jne
push
pop
jno
pop
ret
mov
lahf
test
rorl
xor
scas
bound
shlb
adc
xlat
data16
jbe
ret
cmc
push
push
xor
mov
es
int3
xor
decb
adc
xchg
mov
push
int
popa
adc
and
push
or
lds
jns
mov
sub
jle
sahf
aad
jnp
in
mov
mov
fstps
add
push
faddl
add
pop
lods
scas
pop
add
cmp
out
push
pop
mov
ret
pop
push
insl
dec
pushf
hlt
repz
in
testb
scas
xchg
xchg
xchg
and
sti
xchg
in
test
es
loop
mov
into
or
sub
inc
cwtl
mov
xchg
dec
repnz
mov
mov
mov
pop
cli
xchg
inc
jno
shll
scas
sbb
inc
cmpsb
xchg
pop
fnstcw
fiaddl
sbb
or
jbe
jmp
cmp
lock
fisttpl
mov
xchg
das
out
shlb
mov
sbb
push
in
and
cmp
or
xchg
mov
out
daa
jmp
sbb
pop
mov
mov
popf
enter
pop
sarb
push
sbbl
fdivrp
cmpsl
int3
incl
or
sbb
sbb
xchg
cmpsb
jne
sti
adc
call
roll
or
call
fstl
in
fs
pushl
xchg
ret
dec
push
cltd
in
xchg
fs
pusha
cli
xchg
aam
sub
cmp
adc
adc
dec
sbb
cmp
ds
and
xchg
fdivrs
out
out
aaa
xorl
or
das
inc
loope
ror
adc
inc
jno
shrl
mov
mov
xchg
ljmp
jecxz
nop
popa
test
adc
inc
rolb
cmp
int3
inc
adc
add
inc
enter
add
int3
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
mov
mov
stos
ja
loop
in
cld
aas
sbb
push
rorl
cli
jne
mov
add
loopne
jo
cmp
adc
xchg
mov
inc
ret
roll
addr16
mov
dec
ss
push
mov
rorb
insb
fs
divl
cld
nop
pushf
push
mov
test
sarl
adc
xchg
xchg
or
xchg
sarl
push
add
movsb
lods
lgdtl
pushf
xchg
dec
gs
in
stos
scas
xchg
sub
ss
lods
pushf
mov
push
mov
inc
push
dec
inc
mov
insb
mov
push
repz
inc
mov
in
test
jg
loop
out
rcr
jbe
inc
xor
mov
adc
cmpsb
ja
push
mov
popf
sub
lahf
call
mov
pop
and
movsb
xor
lods
xor
popa
mov
jge
inc
dec
clc
xor
movsb
pushl
cmp
and
stos
addr16
lods
scas
mov
in
pop
arpl
xlat
cs
pop
jnp
push
test
aas
pusha
mov
and
mov
ja
jb
nop
das
cwtl
push
nop
add
cmc
cmpsb
call
rclb
test
mov
or
pusha
xchg
je
scas
jl
test
cmp
adc
test
jge
jo
sub
das
popf
out
push
adc
ljmp
jnp
rolb
xchg
dec
push
mov
cmp
ja
cmp
add
scas
out
pop
fisttpll
nop
pop
int
and
andb
outsb
inc
bound
popa
daa
mov
test
ds
in
lock
decb
xlat
lret
push
xchg
mov
push
sub
xchg
mov
popf
add
in
rcrb
dec
ret
inc
xchg
imulb
mov
ds
adc
cmpsb
jbe
sub
imulb
pop
adc
enter
mov
arpl
push
add
pusha
popf
hlt
or
jbe
pop
lret
pop
in
dec
mov
inc
xchg
sub
push
enter
hlt
or
mov
arpl
icebp
out
and
sahf
and
nop
mov
sbb
lds
cwtl
jge
mov
ljmp
adc
pop
pop
mov
lret
into
mov
pop
icebp
in
cld
movsl
dec
push
imul
loopne
pusha
jle
fmull
aam
mov
cmp
push
das
adc
mov
add
and
mov
mov
subl
xchg
sahf
or
sub
ss
xchg
fsubr
mov
dec
fldl2t
or
popa
mov
mov
push
pop
scas
adc
scas
xchg
test
and
mov
adc
and
ds
adc
sahf
jnp
jmp
mov
dec
fmull
into
data16
pop
and
cmp
loopne
and
lods
cs
ss
out
and
add
xor
mov
mov
loope
mov
shrb
aam
jge
lcall
push
lret
mov
sbb
out
push
or
loop
sbb
in
cmpsb
sahf
out
adc
pop
in
sub
les
sti
ficompl
scas
sub
sahf
inc
stos
std
sub
call
adc
mov
xchg
push
sarl
mov
inc
xor
fstps
pop
inc
js
int3
jg
cwtl
mov
aad
dec
fadds
sub
inc
mov
lahf
mov
pop
inc
sub
ss
cmp
xor
pop
nop
or
pop
stos
mov
cmp
adc
fidivrs
xor
stos
sahf
in
inc
xchg
lahf
sbb
or
xchg
out
inc
sbb
jns
mov
ror
jns
decb
xor
ror
mov
push
rorl
aam
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
dec
sub
adc
shr
lret
push
jbe
scas
xorl
jp
sub
popa
aaa
dec
loopne
loopne
mov
pop
addr16
cli
push
lret
aad
xor
mov
lret
mov
mov
test
mov
fwait
aas
mov
xor
rcr
repz
dec
nop
stos
and
xchg
push
into
aaa
inc
xchg
sbb
hlt
loop
pop
aas
scas
out
or
pushf
xchg
test
ja
dec
int3
mov
out
std
cmpsl
sbb
adc
lahf
push
xlat
mov
jno
ficoms
jne
int3
cmp
and
fcoml
xchg
aas
jmp
adc
icebp
subb
lret
mov
xlat
imul
mov
push
or
ja,pn
inc
lcall
and
cli
mov
inc
and
xchg
or
sub
push
mov
movsl
pop
mov
add
stc
xchg
mov
push
lea
jecxz
stc
dec
mov
xchg
pop
stos
mov
sub
pop
mov
loopne
pop
out
pop
ss
inc
or
mov
mov
cs
mov
sbb
sbb
insb
lea
add
add
add
inc
push
jno
pop
scas
sbb
addr16
pop
pop
ja
or
xor
jns
gs
lret
add
adc
mov
aam
xlat
leave
sbb
ret
cmp
test
andl
push
aad
mov
mov
loope
inc
xor
jge
fwait
mov
out
jl
mov
mov
pop
add
out
ja
sub
xlat
mov
inc
jbe
sbb
mov
aas
sahf
test
ja
imul
incl
fsts
mov
mov
int
fists
xchg
popa
add
jno
test
mov
shl
fsubr
cmp
pop
inc
fcom
mov
inc
push
mov
xchg
mov
dec
adc
cwtl
or
pop
mov
roll
adc
fwait
stos
dec
jmp
mov
jno
subl
jno
push
jnp
outsl
xlat
arpl
push
or
sub
pop
mov
arpl
mov
cmp
cmpps
mov
adc
bound
fadds
fists
fstpl
jne
inc
push
xchg
push
jle
popf
sbb
fwait
dec
ljmp
xchg
cmp
sub
repz
cmp
mov
cmp
and
ds
sub
call
lahf
imul
mov
mov
test
fdivrl
sub
xor
fs
lds
out
cltd
aam
xchg
pop
dec
push
sub
iret
loopne
push
call
hlt
outsb
inc
repnz
jnp
mov
leave
clc
lret
sbb
mov
nop
xchg
scas
insl
xorl
and
sahf
mov
mov
das
cmp
dec
sub
arpl
jge
sub
lcall
jmp
icebp
lcall
cmpsl
push
imul
pop
cmpsb
or
mov
mov
push
rolb
sbb
xchg
daa
mov
xchg
cmpsl
jbe
add
mov
add
and
jno
int
popf
lahf
cmp
mov
push
dec
cmc
in
mov
in
les
pop
mov
or
or
clc
ret
cli
pop
lds
cmp
cli
and
hlt
sbb
test
cmpsl
les
jno
gs
fcmove
xchg
jle
sub
xchg
ret
sbb
sub
fstpl
lods
addr16
out
aad
ja
addr16
mov
loop
ret
loopw
fnstsw
cmp
mov
inc
cmp
xchg
and
push
fs
lahf
mov
mov
cmc
das
iret
sbb
sbb
sub
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
xor
into
fwait
clc
adc
push
int3
sbb
leave
mov
std
xchg
push
dec
or
jmp
mov
inc
push
jmp
xor
dec
leave
pop
imul
mov
jge
fs
cmpsl
repnz
adc
repnz
inc
jecxz
push
pop
add
fst
stos
dec
xchg
pop
clc
cmc
mov
mov
push
cmc
shll
cmp
out
in
xchg
add
loop
leave
mov
dec
repnz
push
add
ficoms
ret
in
fdiv
pushl
mov
and
inc
aas
loop
scas
clc
xchg
jge
adc
inc
into
dec
cld
xchg
mov
gs
enter
pusha
sub
jae
iret
jns
fcomi
pop
pop
cmpl
pop
lods
jne
inc
in
sarb
fildll
jmp
ljmp
sub
aad
xlat
inc
sub
dec
nop
adc
js
into
xor
xchg
fsubr
bound
dec
mov
nop
cmp
jl
fsubl
inc
cmc
in
mov
ja
jmp
test
call
sahf
test
repz
mov
mov
mov
xchg
pushf
push
adc
xor
dec
push
mov
cmpsb
mov
sub
jb
jb
xchg
addb
das
jns
cld
sbb
faddl
iret
popa
mov
jge
xchg
sub
test
xchg
cmovne
mov
call
fbld
cmp
outsb
lahf
sbb
js
mov
in
mov
sub
pop
or
stos
pop
loope
xchg
pop
and
adc
enter
fiadds
stos
movb
mov
test
and
xchg
mov
add
dec
scas
pop
outsl
outsl
arpl
mov
int
cmp
adc
repz
rclb
rolb
or
cltd
mov
rcrb
mov
daa
pop
arpl
ja
out
pop
cs
or
popf
and
dec
push
notl
call
push
mov
xchg
std
or
pop
mov
rorb
leave
adc
sub
scas
cmpsl
data16
add
cmpsb
pop
in
adc
or
push
push
xor
push
xorl
imul
ljmp
adc
shl
xchg
js
push
cltd
das
cmpl
arpl
inc
mov
into
hlt
movsb
pop
ret
mov
fldl
sbb
stos
cmp
push
xchg
in
jnp
xor
fwait
add
imul
hlt
and
mov
dec
cmp
sti
jp
jae
scas
int3
cltd
in
inc
xchg
insb
gs
push
pop
mov
mov
loop
xorb
mov
mov
push
pop
adc
rcrb
inc
xor
inc
push
cmpsl
call
sub
in
or
mov
adc
fildll
in
jl
cmp
call
jl
cmp
xor
fimull
inc
inc
inc
iret
inc
cmpsl
cmpsb
or
dec
xchg
stc
dec
call
adc
sub
inc
mov
loope
sub
sbb
andb
jle
inc
sub
xor
fwait
mull
inc
lods
es
out
fwait
push
push
cld
stos
pop
bound
mov
bound
stc
mov
xlat
adc
mov
in
inc
xchg
add
gs
sbb
jnp
dec
mov
sbb
pop
jl
test
add
jae
mov
test
sti
pop
and
nop
scas
mov
fmuls
jno
xor
push
or
add
orb
pop
mov
mov
imul
ds
sarb
jg
inc
addr16
jbe
inc
ja
out
adc
and
test
daa
cmp
jns
outsb
iret
in
push
js
add
insb
fiaddl
fwait
add
pushf
rcll
lahf
movq
add
lahf
sbb
cs
repz
jno
stc
and
add
mov
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
mov
adc
sub
sbb
push
data16
repnz
mov
rcr
xchg
dec
jmp
adc
loope
dec
cmpsb
xorl
or
cmp
xor
outsb
aad
add
in
or
les
dec
inc
rcr
xchg
mov
mov
jne
mov
jg
adc
in
stos
cmc
les
mov
and
dec
shll
stos
and
xchg
jne
jl
cmpb
adcl
push
je
cld
je
and
fidivrl
xchg
daa
loopne
push
cli
xor
push
mov
mov
and
fldenv
les
movsb
mov
jmp
pushf
xor
sub
gs
aas
insb
xor
mov
gs
stc
push
and
and
aas
cltd
sub
lea
lret
and
js
push
not
xor
jge
lret
popl
jno
mov
out
int
dec
imulb
cmpsb
adc
mov
jmp
push
and
lcall
repnz
xor
stos
stc
xor
or
int
repnz
dec
jo
lcall
movsl
dec
loope
xchg
xor
or
ss
out
cmp
ljmp
std
cmpsb
adc
test
or
mov
sub
cmp
add
in
lock
push
xchg
mov
dec
xor
mull
inc
movsb
rolb
shr
in
jo
clc
test
aad
outsl
hlt
sub
sub
add
xor
imul
sbb
jo
xorl
sbb
lods
push
cmp
enter
sbb
out
lods
bound
movsb
jmp
sub
xchg
test
mov
or
shll
dec
dec
movsb
fadds
push
repz
mov
cld
lods
xchg
rorl
dec
icebp
popa
testl
adc
sub
xchg
mov
roll
stos
bound
mov
aad
loopne
jne
or
in
inc
inc
cli
fstp
bnd
fidivrl
sti
pushf
pop
sub
popa
cmp
jmp
cmp
cmpxchg8b
int3
dec
push
mov
daa
mov
mov
adc
or
flds
test
ret
pop
mov
pop
lret
aaa
leave
cmp
repnz
mov
enter
jo
aam
jno
push
pop
mov
stos
push
or
sub
adc
push
cld
bound
pop
es
ds
push
dec
jb
jnp
jbe
aas
ret
mov
popf
pop
push
xchg
and
jle
cmp
mov
jns
dec
add
or
ja
jns
jl
sbb
jmp
xchg
cmp
jo
mov
and
addr16
push
and
dec
or
test
repz
or
sahf
les
jns
ficomps
mov
dec
mov
inc
sbb
or
lret
call
arpl
pop
xor
out
mov
pushf
jne
pop
mov
fucomp
mov
xchg
stos
inc
xchg
or
adc
std
jb
enter
fldt
cmp
push
ror
cmpb
sbb
adc
mov
and
lods
jae
or
adc
and
dec
loope
pop
hlt
mov
lock
jbe
aad
mov
lret
add
cmpsb
iret
inc
ret
scas
cwtl
aam
sahf
or
jae
loop
cmp
push
das
or
sbb
jb
out
add
rcrb
sbb
rcll
inc
pop
or
ss
paddsb
sub
mov
xchg
movsb
mov
jp
mov
insl
xor
cltd
jecxz
jmp
xor
fsubrs
js
aad
adc
cmp
movsl
out
lds
mov
cmpsl
daa
jns
and
lods
in
jecxz
pop
sti
add
mov
outsl
mov
push
pop
jge
and
cli
mov
imul
push
lods
leave
xorl
and
int3
std
mov
push
clc
sahf
icebp
push
cmp
mov
mov
sti
push
insl
pop
xor
sbb
pop
push
gs
dec
aam
mov
rol
mov
sarl
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
push
cmpsl
clc
adc
adc
inc
std
mov
jo
addl
stos
mov
mov
pop
repnz
cmp
stc
test
inc
mov
jb
sti
adcl
ljmp
clc
test
xor
mov
mov
push
call
mov
repz
jmp
jl
in
jge
jae
inc
loope
jbe
mov
mov
lret
inc
jo
inc
inc
xchg
mov
push
stc
out
pop
mov
cs
add
mov
ljmp
jae
xchg
aad
aam
movsb
clc
popa
mov
lret
fisubs
jb
lcall
ljmp
nop
or
sub
inc
daa
mov
leave
pop
fs
mov
xchg
mov
mov
jecxz
or
push
out
dec
mov
ret
inc
int3
adc
pop
enter
loopne
bound
jmp
mov
fadd
mov
int3
inc
clc
mov
xor
pop
cmpsl
out
fldl
inc
ffree
test
loope
xchg
loop
xor
sar
sbb
loop
shlb
xor
mov
push
in
js
cmp
xor
scas
arpl
outsl
xlat
cwtl
push
jns
xlat
sub
into
imull
adc
pop
mov
sub
dec
xchg
flds
addb
push
lods
pop
ret
aas
cmp
adc
pop
and
imul
sub
hlt
inc
ds
and
sbb
imul
sbb
aaa
sbb
dec
sub
out
push
add
fimull
pop
jno
mov
sbb
mov
xchg
popf
mov
cld
mov
push
js
gs
xor
adc
mov
shlb
mov
loope
iret
pop
inc
dec
insb
in
sbb
mov
push
pop
xchg
or
lcall
push
xchg
popf
stos
add
inc
mov
imul
pop
dec
cs
sar
gs
out
mov
div
scas
sbb
daa
das
sbb
lcall
mov
fildl
fidivl
insl
mov
xor
jmp
mov
repnz
in
enter
cmpsl
es
and
inc
subb
mov
shrb
dec
sub
inc
sub
lcall
push
les
jmp
jp
xor
and
xlat
cmp
sub
sub
jecxz
inc
aam
sbb
push
jmp
bound
fs
arpl
jp
xchg
inc
push
outsl
out
adc
mov
sbb
movsb
push
mov
fnsave
out
fwait
xchg
jno
sub
notl
xor
rclb
mov
cmp
cmp
imul
mov
jle
jno
ds
stos
cmpsb
xor
sbbl
and
imul
cli
inc
ja
sub
loopne
into
insl
les
das
outsb
sbb
push
mov
sbb
cs
addl
aaa
or
or
mov
push
mov
pusha
and
xchg
mov
add
xchg
add
cmp
mov
imul
sbb
mov
mov
fadds
fs
movsb
out
ret
and
sub
cmp
das
outsl
inc
jns
or
ror
cmpl
test
sbb
mov
mov
inc
daa
dec
jecxz
fidivl
dec
push
stc
mov
int3
leave
repnz
test
push
cld
jg
mov
cmp
int
je
movsb
pushf
dec
or
mov
sub
mov
dec
xlat
add
jnp
repnz
lods
xchg
repnz
mov
pop
stc
dec
inc
push
loope
pop
and
lods
xor
mov
sub
daa
add
mov
inc
pop
repz
cli
push
popa
lea
pop
movsl
dec
lret
mov
daa
out
xor
mov
insb
add
rclb
dec
sarl
push
fsubs
jo
jl
push
mov
inc
xlat
jb
lds
rorb
push
and
xor
dec
inc
das
inc
idivl
popa
mov
or
stos
adc
jl
ret
ljmpw
inc
mov
jp
mov
jns
adc
enter
xchg
xor
popa
sti
ret
repnz
sub
jb
add
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
sbb
aaa
ja
adc
adc
repz
data16
bound
xor
dec
dec
push
mov
movsb
cmc
call
push
mov
int
push
rorb
in
scas
in
and
sub
inc
testb
test
mov
popf
mov
dec
scas
and
popf
jae
addr16
shr
lret
cmp
imul
xor
mov
mov
xchg
mov
loop
add
pusha
pop
addb
aas
arpl
and
or
je
cli
ljmp
gs
mov
xor
andb
lds
dec
sahf
sbb
xchg
dec
sub
inc
into
mov
mov
or
pop
das
jecxz
add
mov
daa
int3
leave
stos
cmp
mov
loope
repnz
mov
mov
jno
in
stc
xlat
and
add
subb
fwait
sbb
mov
or
test
cmpsl
mov
sbb
daa
xchg
call
mov
and
test
push
adc
sub
shll
data16
daa
or
mov
loop
into
mov
or
xlat
lret
adc
xor
cmp
cmp
mov
stos
insl
xchg
sub
cmp
dec
push
ficoms
mov
pop
dec
cmc
pop
into
fsubrl
mov
out
lcall
cld
pop
cmp
pop
inc
mov
inc
les
push
pop
loop
out
fstpl
je
test
mov
xlat
test
test
add
inc
mov
les
iret
sub
mov
jno
mov
xor
lret
pushl
hlt
nop
bound
ljmp
lock
sub
out
jecxz
mov
xor
mov
xor
mov
sbb
in
lods
jbe
in
xor
and
mov
inc
push
shll
data16
cmpsb
jl
inc
movntq
out
push
pop
dec
lret
xlat
and
dec
fdiv
clc
sub
dec
or
push
adc
mov
xchg
sbb
repz
stos
jmp
ficomps
stos
adc
push
jmp
out
mov
pop
jg
clc
pmovmskb
sub
jbe
and
and
add
push
xor
dec
mov
test
or
xor
aad
adc
push
push
mov
popf
roll
inc
stos
lcall
aam
out
dec
dec
fistl
sub
sti
jae
sbb
push
sub
push
or
mov
es
testl
idivb
pusha
pop
int3
cld
imul
shl
movsl
mov
xchg
push
aam
add
jg
cld
sub
push
push
imul
mov
dec
adc
in
scas
xchg
cmpsb
or
sub
xor
mov
jmp
jb
mov
ja
dec
xchg
repz
ret
rcrl
or
sbb
negb
mov
push
dec
adc
clc
in
sub
jb
pushf
mov
aad
push
sbb
xchg
mov
out
jbe
addb
xor
fwait
sti
cwtl
mov
outsl
xor
mov
push
inc
imulb
pop
pop
int3
aad
loopne
adc
movsl
xchg
adc
cmp
sbb
jns
mov
fcmovbe
and
add
push
jl
xor
dec
push
mov
in
fdivs
jmp
int
sti
inc
cmp
dec
int3
faddp
sub
aaa
and
push
or
inc
and
cmp
cwtl
adc
sub
aad
or
xchg
outsl
mov
pop
push
pop
mov
loope
imul
rorb
fwait
pushf
leave
mov
push
xor
dec
test
xor
sbb
or
sbb
out
push
mov
xchg
pop
sbb
sbb
into
mov
fs
mov
mov
mov
icebp
cmp
pop
je
jl
mov
psadbw
cmp
icebp
pop
ret
flds
cmpsb
jnp
mov
stc
jbe
loop
mov
imul
xchg
movsl
or
cmc
fldcw
enterw
jnp
jne
sub
pop
enter
std
mov
loopne
jmp
adc
pop
fsubrl
fadd
inc
lock
ja
add
inc
clc
add
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
bound
pop
lods
test
adc
adc
out
fs
lcall
shl
adc
push
inc
inc
add
outsl
cmp
arpl
fucomip
jo
add
test
sbb
mov
fdiv
xor
jno
push
shlb
fwait
addr16
and
movsl
xchg
repz
pop
popa
and
push
add
mov
jle
roll
loopne
and
out
mov
inc
ret
aam
mov
push
or
lret
mov
push
repz
dec
push
mov
repnz
lret
cwtl
pop
sbb
push
mov
jbe
mov
sahf
std
push
push
cld
or
imul
ja
xorl
popf
mov
inc
les
mov
pop
dec
test
or
jle
fistps
stos
mov
pop
adc
xchg
ret
xchg
adc
incb
ja
lret
and
loopne
out
jns
xor
mov
popf
mov
fcmovnb
mov
jmp
mov
mov
sub
jge
punpcklbw
sub
pop
pop
dec
lds
push
jns
in
xchg
mov
xor
pushw
pushf
bound
lods
cs
jo
push
add
lretw
dec
inc
stos
dec
add
test
repnz
outsl
lahf
mov
lea
push
out
jb
and
outsl
pop
xchg
sbb
daa
lds
add
daa
test
stc
lods
cmp
jne
movsb
cs
inc
mov
scas
xchg
pop
test
cmp
mov
cmp
mov
mov
clc
in
inc
cmp
cwtl
xor
mov
rcrb
ret
in
rclb
sahf
js
lahf
mov
sub
lods
leave
cmpb
shll
scas
jns
jbe
jns
scas
loop
sub
xor
out
fsubs
cs
xchg
mov
mov
daa
cmp
test
dec
xor
xor
xor
clc
out
shl
sbb
fstpl
or
fdivl
fcmovu
aas
inc
or
sub
mov
add
inc
into
jns
xor
clc
xchg
cltd
and
push
bound
fisttps
add
fsts
push
clc
jecxz
cli
in
or
jno
pop
cmp
test
in
jl
test
pop
adc
out
adc
ret
and
pop
es
popa
inc
dec
add
add
dec
mov
pop
xchg
rolb
xchg
cs
push
sbb
cmp
rclb
fcmovu
push
and
cmc
les
roll
mov
push
out
xorl
jg
cli
jge
dec
jb
daa
push
or
sub
cmpsb
ret
dec
popf
push
jmp
ror
popa
dec
movb
xchg
dec
out
aam
mov
mov
sub
sub
in
mov
in
mov
jmp
jg
push
call
shlb
inc
push
xchg
push
das
mov
inc
shl
stos
xchg
cmpsb
mov
je
loopne
dec
scas
mov
mov
pop
xchg
enter
std
mov
cmp
lcall
in
imul
xchg
sub
jo
sbb
cli
js
pop
sbb
test
cwtl
lret
gs
mov
adc
mov
dec
pop
or
mov
rclb
add
xlat
stc
mov
fsubl
ja
dec
pop
xorb
push
jnp
sub
inc
scas
or
sbb
cmc
cmc
lea
push
xchg
jecxz
add
push
add
pop
dec
dec
sbb
pushf
test
data16
mov
mov
add
push
outsb
gs
mov
xchg
pop
jl
xor
inc
insl
mov
cmp
das
cmp
outsb
fmull
enter
outsl
push
orb
in
jmp
in
mov
movsb
or
mov
sub
mov
sub
inc
stos
or
cmp
lock
shll
imul
inc
push
daa
pop
popf
popf
addl
cmc
testb
bound
popa
sti
test
pop
xchg
mov
add
add
mov
xchg
movsb
cwtl
mov
int3
sub
fidivrl
adc
push
mov
bound
bnd
add
out
inc
call
push
int3
gs
inc
pop
and
rcrb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
mov
xor
pop
mov
xchg
mov
imul
int
sbb
mov
mov
inc
push
or
xor
cmp
mov
cmp
push
cli
push
shll
mov
imul
jg
mov
mov
aad
jl
pop
nop
mov
scas
cmpsb
sbb
and
jo
push
sbb
lock
push
cmpsl
loop
js
push
jge
cwtl
sahf
push
sub
lods
push
ret
fdivs
sbb
fdivl
loopne
dec
sub
sub
add
jmp
ja
test
sbb
fildll
mov
jl
cmp
mov
das
or
mov
xor
aam
dec
sbb
cmpsl
sbb
push
scas
sbb
jmp
fnsave
lret
lret
add
fcomps
into
in
fs
xor
push
aam
pop
pop
in
or
pop
test
add
mov
lret
out
mov
jmp
in
in
jg
cltd
aad
incl
leave
push
sti
fidivs
mov
mov
mov
cmp
lahf
ret
push
cmp
test
cmp
xchg
mov
pop
outsb
sbb
xor
sbb
and
push
mov
push
mov
ljmp
cmp
xor
sarl
sbbl
dec
add
andps
mov
fisubl
mov
orb
xchg
in
adc
mov
fisubrl
inc
jle
xlat
lcall
clc
or
xchg
add
pop
lods
sbb
xchg
repz
xor
cmpsb
aam
inc
lods
outsl
lock
mov
inc
and
push
xchg
jb
inc
or
add
add
popa
mov
rcl
jl
xlat
sbb
mov
test
imul
ljmp
push
jae
dec
popa
popa
or
push
inc
scas
rorb
xor
fiadds
sbb
or
jl
shr
inc
test
icebp
pop
push
push
mov
dec
inc
loopne
add
mov
insl
cmp
xchg
aas
mov
sub
cmp
stc
addr16
outsb
mov
cmp
enter
jne
es
loop
sahf
cmpsb
mov
leave
clc
inc
pop
jg
sub
fcoml
out
insl
mov
ficoml
fs
mov
cmp
xor
fisttpl
andl
mov
push
dec
lret
pop
into
push
mov
mov
rcrl
insb
cli
jno
pop
insb
sub
dec
jg
sti
mov
fisttpl
das
clc
mov
dec
adc
adc
or
icebp
dec
popf
cmp
cli
lds
je
pop
mov
jb
and
or
inc
add
pop
in
xchg
adc
movsl
mov
cmp
jae
lret
adc
or
inc
pusha
cmpsl
jnp
ret
push
fs
and
lods
xor
fiaddl
stos
fisttps
mov
movsb
dec
or
push
dec
lock
jne
pop
push
push
mov
insl
out
dec
push
mov
lock
push
add
jecxz
sub
sub
add
or
imul
gs
insl
cmpsb
adc
inc
cli
les
xchg
xchg
js
ljmp
sub
data16
int3
dec
int
or
inc
nop
sbb
mov
js
sti
add
int3
mov
or
push
iret
leave
dec
push
in
test
sbb
lcall
je
xor
mov
jnp
push
xchg
sub
mov
cs
mov
sub
dec
mov
movsb
lods
xor
xchg
push
and
mov
cmp
pushf
or
test
mov
sub
ja
and
ja
stc
mov
in
push
jle
sbb
mov
out
jp
mov
mov
ja
rorb
je
jle
push
lcall
and
dec
mov
push
sahf
cmp
ret
sahf
test
or
inc
inc
imul
mov
cmp
jp
repnz
pop
dec
fisttpll
mov
mov
push
xor
fwait
clc
es
setno
cmc
xor
mov
jnp
and
stos
andb
ljmp
cmp
loop
jno
mov
mov
rcll
mov
dec
dec
aas
leave
push
push
push
push
call
ficompl
cmpsb
popl
fidivrl
and
xchg
sbb
ss
sub
xor
in
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
jp
push
nop
jae
adc
adc
fidivrl
xchg
test
daa
or
shlb
lcall
cmp
jge
lods
xchg
push
sub
pushf
rolb
and
cmp
stos
pop
push
stos
push
jle
call
shl
push
push
sub
cmp
mov
mov
in
push
jb
add
cli
into
pop
and
std
cltd
xorb
cmp
enter
dec
lods
sub
aas
push
dec
adc
hlt
adc
out
pusha
and
jns
sbb
das
mov
icebp
xchg
pop
pop
sub
xor
orb
mov
xchg
or
lcall
add
das
pop
or
adc
arpl
andl
or
jmp
add
push
push
sbb
bound
pusha
out
cmp
movsb
in
jg
in
mov
frstor
movsl
inc
push
outsl
sbb
mov
cltd
call
out
ja
pusha
cmc
xor
hlt
sbb
enter
xor
xchg
xor
xchg
dec
mov
jae
es
jno
jg
sbb
adc
hlt
in
jmp
stos
or
shll
push
lret
sbbb
cbtw
addr16
adc
xchg
rcrl
mov
jl
sbb
push
cmpsb
push
clc
sarb
jmp
adc
sbb
rclb
fmulp
cld
aam
repz
nop
int
int
adc
jecxz
adc
and
jb
jmp
fistl
jns
xchg
add
inc
outsl
lahf
inc
mov
cwtl
mov
xor
jmpw
addr16
pop
test
ret
add
loop
loopne
mov
loopne
xchg
lods
pop
test
sbb
roll
pop
fldt
mov
jbe
je
sahf
mov
mov
push
lock
sbb
sub
aam
scas
lret
mov
push
movsl
lret
add
lret
sub
push
sarl
sbb
test
aad
repz
ret
pushf
aam
fstl
mov
fiadds
cld
or
mov
adc
xchg
nop
cli
jae
sub
push
push
bound
int3
dec
xor
push
adc
jg
sbb
ds
push
xchg
ljmp
sarb
cmp
push
mov
mov
xor
rcrl
ljmp
mov
push
repnz
xchg
mov
out
insl
mov
fcompl
out
in
jmp
lods
adc
mov
cmpsl
nop
push
add
mov
jg
rorl
testl
sarl
ljmp
jmp
out
lods
sbb
xor
dec
jno
aas
int3
ja
or
nop
daa
outsb
aad
arpl
adcl
repnz
cwtl
fisubrs
or
dec
xor
movsl
sub
jne
xor
add
adc
push
xlat
decl
cli
inc
sub
flds
add
les
push
jmp
mov
enter
test
xor
shlb
addr16
xchg
pop
add
lods
frstor
jp
aas
movsl
mov
dec
ja
adc
xchg
js
inc
push
xor
shlb
stc
xorb
dec
cld
loope
or
mov
push
xchg
fidivl
nop
inc
dec
jns
lods
xchg
fisubl
pop
push
mov
or
xor
call
mov
jmp
sbb
mov
and
inc
outsl
stos
push
jg
mov
jae
js
in
or
push
test
sub
sub
adc
mov
fmuls
and
arpl
ret
in
add
lret
fstpt
lock
jmp
cmp
or
pop
out
dec
mov
xor
add
ficomps
dec
add
mov
icebp
enter
dec
maxps
and
ret
ficoml
cmp
xor
ss
pop
scas
adc
cmp
mov
mov
int
cwtl
mov
or
push
push
pop
pop
xchg
lods
xor
ret
pusha
dec
adc
fcompl
bound
mov
mov
push
mov
ljmp
push
ret
sbb
xor
adcl
div
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
pop
sub
jmp
adc
adc
adc
pop
lods
dec
icebp
cmp
jmp
add
sbb
inc
bnd
mov
ds
mov
or
loopne
jne
fstpl
lock
sub
testb
cmp
pushf
and
jg
sbb
xor
cmp
repz
push
jge
fcompl
movsb
mov
pusha
jbe
test
pop
add
adc
push
fldenv
outsb
and
lcall
call
add
push
in
mov
pop
shlb
hlt
jge
jecxz
faddp
gs
dec
aad
add
or
bound
mov
jg
roll
and
mov
cmc
cmpsb
ret
sub
jbe
ss
xlat
mov
dec
rcr
push
or
pop
lods
fs
ljmp
jae
adc
and
cmpsl
xchg
jbe
shll
lds
mov
in
fsubl
mov
dec
mov
mov
mov
std
xchg
loope
ret
lret
ja
std
mov
add
xchg
jne
mov
cmp
push
xchg
jbe
mov
mov
mov
mov
adc
fdivrl
andl
aas
push
mov
inc
pop
jge
cwtl
rclb
in
je
jl
push
notl
mov
jae
or
into
jae
cltd
ud0
jg
adc
and
adc
hlt
pop
mov
xchg
ds
xor
imul
lods
lret
push
mov
movsl
mov
shll
jbe
pusha
adc
push
cmpsb
mov
popa
fistpl
out
add
sarl
sbb
stos
arpl
aaa
pop
fildll
or
push
jo
xor
aaa
mov
sbb
pop
xchg
stc
jecxz
dec
jno
push
jmp
push
xor
out
ja
mov
inc
xchg
pop
icebp
bound
outsb
jo
frstor
sbb
adc
icebp
inc
xor
fxch
and
cmp
jmp
imul
aas
pop
jg
aaa
mov
leave
xchg
fldl
xchg
pusha
shll
dec
adc
jg
ret
icebp
out
cmc
pusha
pop
cmpl
in
xchg
xor
scas
dec
daa
xor
jp
inc
aam
ss
xchg
xchg
xor
stos
cld
and
lds
xchg
mov
dec
jnp
mov
adc
sub
nop
das
xchg
js
mov
sbb
rcll
dec
push
cmp
pop
pop
adc
movb
inc
mov
cld
xchg
mov
mov
nop
push
and
xchg
sub
call
mov
mov
cmp
icebp
js
pop
int
push
call
and
jecxz
mov
call
jnp
jge
out
mov
mov
or
in
notl
ror
jb
fsincos
xlat
add
test
test
hlt
jge
mov
testl
in
pop
xorl
inc
test
je
cwtl
mov
jb
std
lock
rcr
daa
pop
xchg
rcll
bound
push
xor
sub
mov
dec
cltd
cmpsb
cwtl
sbb
test
das
inc
or
cltd
hlt
fnstsw
xor
addl
xchg
inc
mov
sub
lret
mov
mov
filds
or
jb
and
adc
sahf
mov
dec
rorb
fsubrs
cmpl
addr16
jle
jns
mov
lock
xchg
inc
jnp
inc
int3
in
inc
jns
shll
and
in
fcomps
push
cwtl
jecxz
and
in
mov
or
lahf
fwait
into
imul
jae
scas
sub
sub
imul
fmulp
cli
push
pop
stos
cmp
jnp
icebp
fwait
pop
iret
and
cmp
les
mov
xor
ret
jmp
push
mov
outsl
jae
ds
xchg
scas
xor
mov
icebp
fs
es
sbb
out
cmc
fisttps
cmpsb
sub
mov
jne
pushf
mov
inc
lea
push
add
lcall
mov
mov
sbb
xor
cmpsb
sub
push
pop
inc
push
inc
decl
decl
decl
decl
jmp
sub
jmp
push
mov
cmp
sub
clc
adc
adc
lcall
xchg
mulb
loope
mov
xchg
call
mov
rcll
movb
popf
push
cmp
jecxz
les
cmpsl
mov
sti
sbb
sbb
rcrb
fwait
cmp
mov
imul
sbb
push
cmpl
sbb
push
adc
mov
jge
inc
fdivs
sbb
clc
dec
cmp
pop
aad
jb
sbb
inc
aas
clc
sti
icebp
push
and
pushf
xor
test
push
xor
mov
out
inc
pop
jnp
sbb
leave
into
stc
pop
je
add
jmp
loop
scas
mov
stc
and
sbb
rcl
jno
xlat
leave
or
es
fbld
out
or
test
ret
sub
sbb
mov
stos
stos
dec
mov
pop
mov
movntq
out
jg
les
jnp
xabort
int3
mov
mov
test
dec
bound
outsb
popa
push
jge
mov
outsb
push
inc
cltd
add
jae
rcll
not
sbb
out
ja
adc
and
repnz
add
mov
or
add
jge
mov
lods
fldenv
bound
mov
std
xor
fs
sub
lret
addr16
fnstenv
push
mov
inc
jg
popa
mov
sbb
fisubrs
xchg
mov
lea
mov
enter
mov
cmp
test
cmp
dec
push
xchg
js
cs
arpl
jecxz
lret
xor
push
fsubr
outsl
adc
movsb
jl
insl
cmp
repnz
sub
jne
push
fs
addr16
stc
pop
mov
xor
push
xorb
das
sbb
adc
pop
js
sar
leave
mov
push
push
fisubl
cmp
add
das
and
shrb
mov
cli
adc
bound
xor
gs
xor
inc
outsl
mov
int
push
mov
dec
scas
sbb
hlt
cmp
sbb
lcall
sub
xchg
loopne
and
popf
inc
xchg
jb
push
mov
jne
sub
pusha
push
xor
mov
stos
mov
or
std
in
and
push
popa
fbld
test
je
sub
xchg
mov
pop
sub
fwait
or
movsb
jmp
mov
jne
lds
iret
sub
jecxz
mov
jns
scas
sti
dec
xor
ja
lods
adc
xor
xor
icebp
mov
testl
xlat
dec
jnp
and
cmp
dec
adc
push
cld
mov
js
push
data16
jmp
add
jl
fwait
es
sub
iret
push
dec
push
addb
ret
out
aas
ficompl
jmp
mov
or
xorl
in
dec
sbb
mov
lret
stc
jmp
movsl
mov
cli
nop
jno
ret
lds
push
imul
push
adc
mov
out
push
xchg
insb
fmulp
sti
addr16
rcrb
jbe
test
adc
outsb
popa
jecxz
loope
pop
sub
std
adc
aam
ds
add
or
push
lds
sbb
shll
imul
xchg
repz
fwait
inc
aad
cwtl
shll
adc
add
xor
mov
sbb
jl,pn
or
add
mov
mov
ds
pop
pop
jecxz
push
addb
out
and
das
clc
ljmp
add
jnp
mov
or
sub
mov
sub
adcb
out
aaa
jae
mov
popa
rcrl
dec
pop
jmp
movsl
int3
lahf
inc
sarl
push
dec
enter
scas
jge
jnp
repnz
aaa
adc
rclb
mov
outsl
dec
bound
sub
xor
cmc
dec
rcl
jo
mov
mov
insb
shrb
sbb
pop
fsubr
or
pop
cmpsl
mov
xchg
fstpt
lcall
mov
addl
push
fcmove
inc
popf
fistpl
dec
int3
push
push
cmp
and
imul
xchg
xor
fs
mov
mov
add
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
popa
sbb
cld
jns
ret
cli
inc
jl
bound
lods
or
addr16
cmpsl
rorl
repz
out
push
mov
push
leave
repnz
mov
btc
jge
mov
and
pop
lahf
clc
arpl
in
pop
mov
cwtl
call
inc
and
imul
or
push
sub
es
icebp
jg
or
xchg
xor
dec
cltd
shl
imul
sbb
and
mov
into
ja
xorl
mov
loopne
xor
mov
lret
cs
xchg
push
imul
ljmp
mov
outsb
mov
sub
mov
aam
sub
dec
sub
sub
adc
xchg
sbb
repnz
jmp
lock
aaa
inc
inc
lods
pushf
imul
jae
mov
pusha
xchg
xchg
cld
sahf
push
sti
pop
mov
add
cmp
fsubr
ljmp
pushf
sbb
sub
out
mov
imul
lods
xchg
lock
inc
adc
addl
or
mov
cmp
mov
jmp
mov
out
sarb
xchg
jb
scas
sub
push
daa
sbb
lret
cmp
or
push
jge
push
scas
xchg
pop
fdivrl
mov
loop
loope
adc
scas
jbe
jmp
xchg
out
sbb
cli
negb
jb
pop
mov
mov
mov
mov
popf
int3
xlat
mov
js
xor
ror
dec
in
ret
mov
jmp
jbe
mov
sbb
jbe
add
fxch
sub
scas
clts
enter
add
push
inc
cmpsl
fldt
and
test
pop
push
mov
loopne
loop
and
adc
data16
mov
push
nop
dec
mov
cmp
and
sbb
mov
outsb
cs
lcall
mov
insb
loope
push
out
push
mov
in
xor
mov
jmp
shll
jg
mov
push
rcr
test
xor
sub
inc
repnz
lods
jb
iret
sbb
dec
dec
push
ljmp
mov
mov
inc
stos
cltd
jp
xchg
pop
mov
xor
mov
in
mov
mov
push
jo
cli
fcmovnu
sub
sarb
aas
push
jne
xor
cmp
mov
and
xor
push
rorl
icebp
adc
andl
aaa
dec
mov
popa
xchg
sub
lock
sti
mov
adc
aaa
and
mov
pop
xchg
push
fdivr
bound
rcrl
push
mov
lcall
bound
sub
mov
pmuludq
xorb
jb
sbb
icebp
icebp
and
lds
fsubrl
sub
lcall
stc
dec
xor
pop
ds
pushl
fnsave
arpl
push
or
inc
lock
jo
or
ja
testl
mov
dec
push
xor
inc
mov
lcall
ret
popf
jno
inc
fldenv
or
js
xor
dec
lds
jae
in
daa
loope
sbb
or
mov
shll
or
shlb
rcrl
cmp
aam
and
or
ljmp
jmp
ljmp
loopne
mov
jno
test
es
and
and
xor
scas
xor
and
mov
cmpl
repnz
push
xor
test
aam
push
icebp
lods
out
gs
or
push
and
jge
icebp
xor
dec
sahf
dec
mov
jb
leave
test
shrl
sub
loope
mov
pop
repz
fdivp
rolb
sub
mov
push
jne
adc
jecxz
das
jmp
ret
xor
xchg
insb
int3
faddl
cs
push
clc
fcmove
jecxz
dec
shr
loop
iret
fstpt
jecxz
inc
and
add
lods
aam
test
pop
std
mov
sbb
movsl
aad
sti
push
fsubrs
gs
sub
cs
jg
xor
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
lds
cld
cli
mov
push
cmp
lods
faddl
sub
mov
mov
js
mov
push
inc
insl
imul
imul
aam
std
xchg
mov
add
scas
jno
iret
clc
pop
xor
clc
test
pop
shlb
hlt
sarb
jns
pop
jns
adc
popf
shl
pop
call
lret
push
dec
sub
ret
lock
daa
fiaddl
add
fdivr
dec
xchg
test
repnz
pop
or
cmp
jp
testw
fucomp
inc
enter
adc
sbb
push
daa
decb
lret
test
and
ret
shlb
push
pop
shl
ret
push
xor
jno
idivb
mov
or
es
mov
fstl
push
sbb
push
popl
jne
cmpsl
adc
sub
dec
mov
test
dec
test
into
jns
roll
fimuls
adc
ljmp
rorl
cli
stc
mov
fiaddl
dec
inc
nop
test
and
jg
push
xlat
dec
imul
rcrb
leave
sbb
cmp
shrb
fstps
ret
lods
mov
imul
faddl
out
out
sti
outsl
cmp
sub
out
xchg
insl
xchg
cmc
sbb
ret
nop
push
insb
adc
dec
daa
xor
inc
loop
call
mov
nop
in
stc
test
fnstenv
sbb
and
ss
fstp
popf
sub
dec
jae
lcall
xchg
hlt
mov
mov
pop
repnz
out
mov
push
mov
adc
in
outsb
mov
cmp
sub
and
jo
ljmp
or
orb
dec
es
in
pushf
pop
nop
mov
nop
push
in
imul
arpl
in
movsb
push
mov
push
dec
enter
hlt
outsl
push
aam
cmp
mov
adc
cmp
dec
mov
push
fstpt
movsb
insl
sub
lret
jmpw
mov
lret
mov
gs
xchg
outsb
insb
pop
xor
jne
in
xor
xchg
xchg
shrl
or
fldcw
add
jns
jmp
inc
aam
mov
ja
xchg
pop
insb
aad
mov
loopne
jp
fnstsw
and
insb
jno
mov
push
sub
outsb
jnp
test
std
adc
out
rorl
fwait
jae
aas
sub
push
xchg
cmc
stc
sub
bound
xor
xchg
cmc
je
pop
sbb
fcmove
pop
mov
xchg
test
cmp
pop
cmp
fnstcw
sub
loop
adc
inc
lock
ja
push
sub
bound
movntq
sahf
xchg
fwait
cmp
and
adc
les
js
fadd
ficoml
cld
negl
mov
lds
cmc
adc
mov
adc
jg
pushf
xchg
xchg
push
outsb
pushf
sub
test
or
or
inc
mov
add
xchg
pop
push
dec
lea
in
jnp
adc
jecxz
push
xor
mov
and
or
sub
add
mov
inc
xor
test
cmpsl
lds
cmp
fnstsw
sub
in
mov
adc
jmp
sarl
out
movsb
jge
sbb
mov
and
mov
push
shlb
mov
clc
xchg
jnp
and
pop
inc
fnstenv
xchg
pop
push
test
out
ja
out
mov
xor
ret
adc
inc
inc
in
in
jns
stos
aam
test
jbe
adc
xchg
push
adc
fmul
iret
xlat
and
aas
pop
add
insl
fisttps
popf
push
mov
add
jl
pop
sbb
add
dec
and
cmp
push
add
xchg
int
cmpsb
mov
sbb
out
or
jo
jae
ja
mov
scas
cmp
mov
xchg
xchg
sbb
outsl
enter
or
and
leave
xchg
sbb
sbb
aaa
mov
mov
aaa
xlat
popf
jbe
mov
and
shlb
ficoml
shl
jp
inc
mov
add
and
or
repz
xchg
xchg
cwtl
daa
cmpsb
inc
clc
adc
adc
ret
cmp
dec
adc
inc
jne
jp
addb
xor
push
pop
inc
aaa
inc
mov
insb
mov
scas
movsb
fstpt
sbb
mov
jo
cmpsb
push
fdivr
cmp
fisubl
add
je
movsb
add
cmp
jae
sub
in
jne
xorb
jne
cwtl
mov
add
sti
sub
sub
mov
push
ljmp
ficoms
sbb
stc
pop
cwtl
lret
test
sbb
popf
xchg
dec
iret
pop
jmp
mov
ret
pand
mov
cmp
popa
test
mov
jecxz
mov
mov
jp
xchg
xchg
fmull
loop
loope
sub
testb
stos
cmp
out
push
outsb
cwtl
hlt
cmp
in
adc
adc
mov
leave
or
pushf
or
int
jo
in
rcrl
mov
mov
add
inc
lock
mov
imul
sub
icebp
adc
mov
jmp
mov
mov
and
jg
gs
and
mov
push
push
mov
mov
bswap
xor
pop
inc
ret
stos
mov
inc
jo
aaa
mov
sbb
lahf
insb
sahf
incb
aad
daa
mov
rcrb
xor
shll
pop
mov
loopne
iret
sub
and
and
mov
sub
out
inc
dec
mov
cmpsl
cmp
rcrb
xor
sbb
leave
notl
cli
xorb
imul
loope
mov
cltd
into
lahf
sbb
xchg
in
sahf
into
movsl
adc
mov
xchg
add
aaa
test
cli
push
cmp
xchg
das
ss
dec
lods
test
pop
leave
adc
or
inc
pusha
shll
push
push
mov
pushf
mov
shll
push
je
std
outsl
hlt
inc
or
inc
adc
lods
cmpsl
jge
ss
inc
xorl
in
lods
dec
cmp
pop
jno
popf
xchg
jae
mov
jge
add
pmuludq
adc
test
jns
add
mov
mov
xchg
xchg
sarl
sbb
xchg
cmp
cwtl
xchg
adc
pop
inc
xchg
add
jae
mov
inc
mov
fdivrs
mov
add
cltd
cwtl
loopne
lea
into
and
pop
push
jo
out
hlt
inc
sub
inc
in
xchg
push
hlt
fs
xchg
sub
fldt
cmp
fistl
clc
jne
and
je
mov
inc
imul
and
std
sar
and
dec
out
in
inc
cmpsl
rolb
test
mov
cltd
pop
push
mov
test
xchg
sbb
sub
cwtl
adc
mov
push
add
dec
xchg
mov
inc
mov
pusha
std
mov
cmc
hlt
divl
and
hlt
daa
jl
push
pop
fidivrl
das
cmpb
jne
pop
push
aas
and
test
xor
ja
sub
xor
lods
cmp
lahf
out
xchg
or
push
inc
push
pop
dec
sub
mov
xor
inc
roll
in
call
mov
das
addr16
pop
add
movsl
sahf
sub
out
in
mov
pusha
cli
xor
and
stos
jecxz
and
fcompl
ds
pop
bound
shl
cmp
push
or
data16
or
dec
inc
dec
ss
cmp
mov
sbb
add
dec
jmp
call
push
out
adc
popl
sbb
xor
mov
out
cmc
pop
aam
imul
jns
bndldx
and
lds
addr16
xlat
jmp
call
and
imul
add
mov
pop
sahf
xchg
push
jnp
mov
movsb
rol
and
jg
push
or
dec
cli
inc
clc
push
add
fisubl
out
sbb
fnstsw
stc
push
clc
idiv
jbe
push
rcr
push
lahf
cmpsb
sub
pop
mov
push
pop
pop
aas
mov
mov
std
daa
xchg
xor
push
repnz
mov
test
shrl
or
loopne
cmp
jle
mov
jo
jl
push
push
sarl
mov
jne
sub
shl
icebp
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
cmp
clc
adc
adc
jno
cmp
pop
xchg
sub
lret
add
sub
pop
cmp
neg
xor
mov
mov
in
mov
insl
dec
push
call
testl
sarl
addr16
mov
stos
imul
cmc
adc
testb
push
sti
sbb
push
adc
fwait
imul
test
sbb
std
push
ffreep
adc
jle
orl
je
scas
inc
xchg
jl
xor
in
push
cmp
add
xchg
and
mov
inc
mov
ja
jns
fcoml
ret
ljmp
mov
mov
jno
add
mov
jge
leave
mov
and
mov
cld
sub
les
cmc
push
pop
cmp
lods
jnp
cltd
into
popf
mov
out
dec
fistpl
sbb
xchg
rcr
add
test
pop
daa
and
cmp
adc
mov
bound
js
stos
jg
stos
test
enter
aaa
add
repz
pushf
dec
xor
hlt
pop
pop
jle
shlb
inc
out
subb
fsave
jo
rcll
dec
ret
ljmp
loop
mov
dec
sub
int
cltd
ret
shll
sub
incb
int3
push
aaa
push
mov
push
repnz
add
dec
push
dec
fcoml
mov
enter
xchg
jmp
xor
adc
and
lock
std
jns
inc
out
or
pop
fdivrs
jno
mov
cmp
negl
out
ret
sbb
aas
neg
push
scas
test
aam
jecxz
lods
dec
pop
inc
xchg
jmp
ss
jb
lds
inc
or
pop
sub
dec
daa
shlb
mov
xchg
nop
ljmp
into
inc
inc
ds
cli
loopne
mov
out
cmp
pusha
lcall
lods
mov
sbb
cltd
dec
fsubl
mov
and
xchg
inc
push
in
in
xchg
fldl
xlat
in
test
fldcw
movsb
stos
pop
pop
push
fldt
or
pop
flds
stos
jp
cmpsb
popa
mov
sub
xlat
or
out
inc
cwtl
scas
pop
int
inc
jg
out
adc
pop
imul
rorb
out
sahf
out
xor
push
push
inc
vcvtsd2si
aad
push
add
xchg
mov
jae
into
aas
loope
sbb
lret
dec
bound
movsl
popa
pop
cltd
mov
ljmp
push
jecxz
insl
popa
dec
and
cmp
loope
cmp
mov
popa
outsb
pop
in
loopne
or
nop
xchg
dec
adc
pusha
outsb
rclb
pop
scas
jbe
pop
push
fsts
pop
xor
leave
jl
pushf
iret
incl
add
stos
push
pop
adc
add
bnd
fwait
dec
xchg
in
jmp
out
pop
jnp
orl
dec
out
and
push
or
int3
ss
xor
mov
mov
pop
cltd
xchg
sahf
movsl
pop
pop
ss
cmc
mov
cwtl
iret
add
lods
stos
jb
jae
dec
pop
add
es
ljmp
inc
sub
and
jno
dec
mov
test
popa
adc
lret
lret
pop
je
and
ret
add
into
fucomp
or
out
aaa
mov
cwtl
jbe
pusha
lea
xor
xchg
jg
adc
ret
loope
ret
fxam
cmpsl
jge
dec
les
and
je
push
cltd
mov
iret
ja
or
sbb
mov
fidivrl
notl
pop
inc
aaa
mov
test
inc
stos
sbb
lret
sbb
js
vmovaps
or
lret
xchg
fists
aas
mov
loop
xchg
dec
mov
dec
jne
sub
push
or
daa
mov
hlt
cmpsl
int
fwait
insl
xchg
push
adc
in
mov
dec
test
xchg
jo
mov
pop
xchg
sub
cmp
arpl
lea
iret
and
cs
daa
out
jno
or
dec
lods
sbb
dec
xor
mov
ficompl
aad
add
pusha
adc
jne
test
jb
mov
cli
inc
mov
lea
stos
rolb
cmp
test
arpl
lea
xchg
jns
or
fdivrs
sti
mov
dec
jg
dec
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
push
clc
adc
adc
mov
adc
js
lret
xchg
mov
icebp
pop
aas
or
pop
outsl
cld
jns
fwait
inc
repz
cmpsl
test
iret
lods
in
sar
jno
pop
xor
sbb
adc
shll
dec
xchg
mov
mov
leave
loope
sahf
inc
movsb
dec
xchg
scas
loop
pop
dec
add
sahf
pop
push
jb
jns
fdivrl
movsl
pop
rcrl
in
push
push
rolb
mov
push
mov
and
in
cmpsb
es
cmp
adc
mov
arpl
aad
sbb
mov
pushf
nop
sbb
or
or
xor
sbb
jecxz
mov
xchg
adc
mov
push
out
ds
add
clc
movsb
add
lahf
jae
or
push
jnp
loop
sub
subl
mov
out
and
adc
xchg
push
repz
mov
mov
lret
sbb
cmp
adc
sbb
cli
sbb
or
not
push
popa
dec
jno
fnsave
sub
mov
push
xchg
leave
repnz
dec
xchg
ficompl
pop
fcmovnb
and
and
fabs
dec
push
lret
inc
aaa
jns
cwtl
lock
cmp
xor
test
jo
inc
mov
lcall
scas
xor
xchg
push
movl
fimuls
loopne
pop
sbb
jge
std
in
mulb
cmpsb
jl
xchg
incl
arpl
dec
add
cmp
cld
mov
ror
sbb
xor
adc
pop
mov
mov
cwtl
outsb
jl
fstp
cmpsl
add
in
shrd
mov
cli
pop
jno
outsb
imul
sbb
rcll
add
sarb
ds
mov
cld
or
nop
pop
cld
push
dec
xchg
ljmp
inc
dec
call
fs
mov
in
sbb
mov
mov
fbld
adc
outsl
test
xchg
test
mov
push
shlb
push
sub
mov
add
xor
data16
out
scas
out
pop
inc
pusha
or
fdivp
test
ds
mov
xchg
cmpsl
mov
push
ljmp
testb
cmp
add
pushf
inc
jnp
testl
repz
out
sbb
adc
sarb
js
test
loop
add
pop
wbinvd
in
test
shrl
je
mov
loopne
cmc
mov
xchg
sbb
aad
jae
adc
lods
call
lods
pop
or
ja
test
insl
mov
loop
sub
jmp
jae
add
push
rorb
push
inc
or
in
dec
inc
fisubrs
aam
mov
lods
insl
xor
or
jmp
lods
js
xor
mov
popa
mov
dec
mov
test
and
inc
cmp
xchg
add
pop
int3
ja
dec
jns
addr16
push
jnp
push
cmpsl
daa
mov
call
lret
sbb
pop
mov
cld
test
fistpll
scas
dec
and
sub
movsl
and
fmul
outsb
mov
cli
lret
lahf
jne
push
jns
pop
je
ror
hlt
add
idivl
je
and
aaa
loope
xor
inc
pop
gs
aad
mov
js
mov
imul
pop
adc
cmp
or
mov
mov
jmp
mov
roll
stos
fwait
dec
pushf
push
mov
jbe
and
mov
xchg
cmpb
mov
bnd
movsl
bound
mov
stc
xor
mov
fs
sub
inc
jo
lea
pop
in
out
out
xchg
arpl
adc
arpl
repnz
cltd
lea
sub
scas
and
into
icebp
push
pop
das
call
lods
clc
jmp
das
cmpsb
leave
and
sub
mov
push
sbb
pop
inc
adc
lcall
pop
xlat
or
mov
ss
mov
xchg
sahf
movsb
and
int3
lods
pop
inc
jns
pop
outsb
sub
or
clc
sub
xchg
or
movsb
popa
pop
jp
call
sbb
jmp
inc
rcll
sbb
inc
mov
add
push
mov
into
mov
mov
adc
adc
gs
cmp
jl
mov
mov
mov
adc
ljmp
sbb
vpunpckhdq
jb
jp
leave
enter
cmp
push
inc
test
cmp
and
imul
mov
outsl
mov
test
in
or
pop
test
push
imul
jns
inc
into
xchg
push
imul
idivl
push
cmp
mov
or
xchg
lock
imul
mov
add
xchg
jge
xor
das
mov
loope
psubb
hlt
adc
imul
popf
xor
shll
and
js
int3
call
pop
cmpb
stos
mov
mov
push
loope
mov
or
mov
xchg
fisttpll
imul
xchg
ja
adc
lock
sbbl
mov
lds
dec
cmpsb
adc
jecxz
stc
pop
push
pop
pop
xchg
cmp
push
mov
cmp
sbb
bound
dec
mov
rolb
in
inc
cmc
cmp
push
jge
arpl
sbb
lods
popa
jo
pop
ljmp
dec
cmp
cld
cltd
jp
cld
add
aas
sbb
cmp
nop
or
daa
sbb
arpl
scas
in
fwait
shll
rcll
inc
lds
ret
pop
inc
les
and
dec
and
mov
pop
pop
call
stos
dec
mov
adc
dec
loope
jl
imul
add
pop
vaddsd
test
mov
popf
mov
ret
mov
xchg
out
cmp
stos
jae
lods
jns
leave
lock
popl
sarb
lea
loopne
adc
inc
dec
out
outsl
cmp
fwait
jnp
adc
inc
popf
mov
adcb
push
lahf
ja
sub
cmpsl
mov
or
jmp
aaa
mov
xchg
inc
mov
lcall
into
pop
jmp
jmp
pop
pop
and
cmp
ss
adc
push
ds
roll
cmp
int3
mov
cmpsb
dec
push
and
int
jle
daa
jo
arpl
rcrl
cmp
mov
sub
xchg
lret
sahf
imulb
adcl
pop
push
add
aad
inc
les
das
pop
movl
push
scas
or
out
arpl
push
adc
ds
pop
fnsave
mov
pushf
cwtl
or
jnp
lods
notl
pop
mov
aad
and
addr16
data16
push
jecxz
je
pop
or
dec
lret
je
pop
xchg
or
and
lahf
sbb
fcoml
xor
imul
dec
adcl
push
cwtl
and
push
or
add
icebp
mov
out
out
pusha
sub
pop
mov
jl
lret
mov
sub
or
push
add
xorb
xor
int3
push
xchg
out
inc
dec
movsb
test
fnstsw
les
mov
jecxz
inc
mov
loope
dec
daa
push
push
push
aaa
addr16
sub
pop
aaa
mov
arpl
pop
rcrl
frstor
pushf
push
xor
pop
jnp
lea
or
lcall
lock
lods
sbb
es
push
xchg
loope
push
pop
jbe
adc
adc
ss
cmc
data16
jbe
in
mov
int3
mov
out
stc
mov
out
aaa
test
pop
lock
idivl
mov
data16
in
sbb
stos
or
add
out
mov
adc
movsl
and
xlat
outsb
mov
and
sub
xchg
call
inc
lcall
fwait
ja
add
xchg
jne
cli
fnstenv
cmpsl
pop
into
xchg
je
xor
mov
mov
push
bound
push
in
popa
cli
ljmp
jmp
dec
repnz
clc
pop
mov
add
xor
stc
cltd
in
ror
fs
push
iret
lcall
push
test
and
sub
pop
cli
pop
cs
inc
loope
push
test
jns
icebp
test
dec
mov
mov
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
test
dec
outsb
or
adc
xchg
ret
add
mov
out
cs
or
cwtl
stc
rol
in
dec
inc
inc
jmp
pop
aas
mov
fwait
ljmp
sub
cmpsl
push
push
dec
stc
stos
std
mov
inc
cmpsl
cwtl
jb
xor
jo
xchg
jo
jno
mov
push
test
enter
mov
lds
je
shl
enter
jp
mov
push
daa
mov
add
push
mov
popa
mov
popf
aad
sub
add
push
and
or
or
rcrl
aaa
mov
in
sahf
cltd
mov
and
adc
bound
aaa
xchg
ret
sub
daa
movsb
mov
jg
into
push
in
popf
xchg
fidivs
outsl
out
iret
mov
and
test
aad
and
outsb
call
xchg
mov
scas
and
mov
jnp
or
and
inc
xchg
adc
adc
loopne
jp
fisubrs
out
xchg
ja
in
mov
shlb
aas
fdiv
mov
pop
and
ret
sub
mov
xchg
sub
sti
nop
jns
andl
sub
xor
xchg
pop
jmp
push
pop
divl
sbb
in
into
cwtl
dec
pandn
or
lcall
push
jno
ret
pop
jnp
lahf
test
cmp
mov
mov
aam
mov
xor
xchg
sbb
ret
scas
jl
roll
sbb
mov
sub
pop
push
mov
pop
lret
mov
jecxz
popa
sarb
fadd
test
shll
push
gs
int3
lret
push
add
adc
xchg
dec
test
and
push
les
push
add
fidivl
popf
sbb
jmp
jecxz
mov
dec
loope
dec
xor
sahf
jae
push
shlb
test
cmc
mov
xchg
and
mov
pop
mov
xchg
mul
push
lock
mov
repnz
mov
dec
ds
or
setnp
xchg
sbb
xchg
mov
jp
add
outsb
pop
jb
pop
and
scas
mov
or
dec
sub
les
mov
shrl
movsl
pop
dec
mov
xchg
xchg
jg
xchg
jecxz
pop
xor
adc
loope
stos
pop
dec
stos
sub
je
stos
mov
xchg
jp
inc
mov
push
in
xor
jg
xchg
adc
add
push
int3
adc
add
ds
leave
loopne
enter
ds
sub
sbb
push
jmp
in
scas
cli
pop
insl
push
dec
cmp
inc
or
imull
jp
xchg
sar
sbb
orb
ss
mov
mov
fwait
je
push
mov
fwait
notl
xor
insb
inc
cmp
je
mov
sbb
popl
cmc
movsl
fbstp
sbb
push
xchg
das
cld
loop
xor
js
fwait
and
jg
lret
les
test
into
popl
mov
dec
popf
jecxz
jno
push
xlat
and
mov
ljmp
push
adcb
and
fstl
cmpsl
add
xchg
pop
rolb
xlat
mov
out
and
xor
sbb
iret
cmp
test
cmp
jne
mov
std
push
add
sbb
push
and
repz
stc
dec
sub
icebp
jecxz
repz
int
call
adc
js
mov
inc
in
jb
xor
fisubrs
lret
inc
dec
test
fwait
mov
int
adc
rcl
out
pop
push
push
sbb
ja
loopne
in
scas
insl
sub
notl
sub
xorl
aam
int
xor
aas
inc
out
xchg
pushf
gs
stos
cltd
js
divl
or
push
int
cmc
lcall
ja
insl
loopne
out
popf
mov
xlat
fisubs
dec
cmp
or
gs
and
xchg
mov
sub
cmp
fs
cmp
into
divl
imul
sub
nop
sahf
pop
pop
jp
popf
mov
adc
sub
mov
ds
ss
add
mov
mov
pop
ds
inc
js
push
in
inc
cld
movl
jmp
mov
test
adc
inc
and
sub
in
clc
adc
adc
test
jecxz
mov
scas
inc
lret
cmpsb
dec
pop
xchg
ds
out
or
repnz
hlt
cmp
shl
je
inc
imul
leave
hlt
xchg
fstps
lret
mov
mov
xchg
ficomps
cmp
dec
mov
sub
mov
adc
jl
scas
call
jae
mov
in
cmp
mov
mov
xchg
jb
mov
sub
iret
movsl
and
ret
jne
sar
dec
daa
loope
cmpsb
outsl
pusha
dec
xor
scas
fisttpll
lods
add
cmc
jg
mov
lds
rcrl
rorb
movl
push
and
mov
int3
push
bnd
sbb
lods
cmp
and
call
in
xor
sbb
push
dec
pop
xlat
xor
push
fwait
dec
add
pop
jns
mov
or
into
and
imul
dec
in
in
sub
and
std
ljmp
jno
push
add
and
in
mov
mov
in
push
push
push
sub
jg
dec
pop
jmp
inc
cld
xor
mov
mov
fcomps
jnp
dec
icebp
mov
fs
idivl
xorl
jp
mov
push
xorl
test
add
loop
stc
lock
sbb
push
jno
xor
shll
aam
jp
dec
dec
test
mov
iret
ret
popf
mov
pop
cs
jmp
lret
movsb
mov
sbb
insl
rcll
cwtl
cmp
lret
jno
dec
sbb
pop
dec
hlt
in
pop
out
aad
xchg
mov
loope
dec
jnp
mov
test
into
inc
pop
sbb
fwait
test
xchg
stos
mov
gs
sub
stc
in
pop
ja
cmpsb
clc
push
movsl
inc
addb
adc
xor
mov
or
icebp
test
sub
lea
mov
jp
cmp
addb
cmpsl
jnp
adc
test
out
xchg
imul
fsubr
in
addr16
rol
cmpsl
mov
inc
ret
jne
sbb
jnp
sahf
sbb
mov
dec
imul
or
imul
dec
bound
call
push
movsb
arpl
ds
jns
mov
out
fnstcw
sub
adc
in
aaa
sbbb
sub
push
sub
imul
xchg
adc
jg
or
cmp
dec
pop
dec
mov
shll
and
test
sub
mov
xor
jmp
mov
jae
stos
jl
ds
add
insb
in
mov
shl
cmp
mov
popf
mov
mov
pop
mov
sub
frstor
lret
dec
dec
xchg
push
mov
roll
push
sub
lcall
push
iret
sub
shl
and
cld
popa
testb
xor
idivl
xchg
mov
pop
fs
pop
jmp
cmpsb
jbe
cmp
inc
cmp
gs
push
and
pmulhuw
data16
xorb
mov
add
adc
call
pop
sahf
and
cmp
pop
rolb
jb
rclb
jo
mov
add
scas
scas
add
je
lock
stos
lock
adc
push
ss
cld
icebp
shlb
fs
sbb
or
addr16
or
xor
fwait
aas
mov
rol
mov
test
dec
mov
cmp
or
push
loop
and
and
fidivrs
inc
into
xchg
popf
sbb
dec
push
xor
mov
ja
xchg
xchg
push
cmpsl
pop
xchg
fiaddl
mov
aaa
mov
jge
pop
cmc
inc
cmp
pop
xchg
aas
dec
pusha
mov
adc
mov
jle
rcl
sbbb
testl
mov
test
dec
addr16
lea
movsl
fstpl
sbb
mov
xchg
dec
cmp
xor
test
xor
fdivs
popf
mov
scas
out
sub
mov
cwtl
std
icebp
rorl
sbb
ret
mov
dec
mov
sub
fldt
pop
dec
out
pop
movl
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
and
dec
push
shlb
xchg
test
mov
push
xchg
js
hlt
mov
xchg
jl
js
test
and
mov
into
mov
enter
add
fs
mov
jp
and
or
imul
insb
cmp
out
cmpl
cmp
mov
repz
fstpt
xchg
addb
cmc
sub
rol
in
pop
rcll
pop
jno
cmpsb
js
stos
ret
nop
es
shrl
loop
out
push
ljmp
mov
ds
pop
xor
icebp
adc
push
xor
nop
ret
int3
inc
push
out
xor
push
into
dec
cmp
loope
push
frstor
aas
lcall
mov
ja
inc
and
jmp
push
pop
inc
fstps
jp
inc
das
mov
jo
subb
lcall
faddl
test
ja
cmp
cmpsl
icebp
aam
out
pop
and
rcll
xor
bound
addr16
jge
test
es
xor
gs
into
mov
jo
rcll
out
lret
cld
and
ja
sub
jg
stc
in
sbb
push
xchg
adcl
test
mov
jb
sub
inc
ljmp
xchg
sbb
mov
jno
dec
insl
ljmp
addr16
mov
dec
sbb
inc
pop
pop
fnstcw
xorb
xchg
push
sub
test
xor
pushl
mov
push
cmp
jne
add
stos
andl
les
xor
pop
adc
repz
sub
lods
and
jns
or
jno
jo
test
inc
cwtl
cmp
test
or
aam
dec
insl
jecxz
addr16
push
int
aas
xor
dec
xchg
inc
mov
pop
cmp
xor
sub
mov
inc
adc
sbb
shlb
and
in
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
