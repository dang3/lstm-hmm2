add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
push
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
sbb
gs
mov
out
jle
mov
add
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
jl
jl
jl
jl
push
outsl
cmp
adc
mov
sbb
imul
sahf
outsl
mov
mov
dec
adc
cmp
dec
daa
out
scas
out
shlb
pop
jo
push
and
xchg
add
call
xlat
or
sbbb
mov
mov
xchg
das
add
cli
cmp
jbe
xor
imul
sbb
lcall
pop
push
push
lret
dec
sub
mov
jmp
sub
clc
movsb
pop
sbb
rorl
push
bound
dec
sar
fs
out
clc
mov
lods
or
je
or
push
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
xor
jg
jl
jl
jl
into
xchg
dec
xor
sub
insb
mov
and
xchg
cli
xchg
add
cltd
cs
inc
xorl
cmc
rcrl
pop
fiadds
adc
loopne
enter
dec
fcomps
shlb
je
fldenv
or
pop
test
pop
fwait
sbb
sub
stos
inc
aam
test
enter
and
test
cmp
add
add
mov
cmc
push
adc
or
jbe
adc
jnp
mov
fs
push
rclb
arpl
jne
gs
xchg
xlat
mov
and
mov
faddl
jne
or
sbb
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
pop
cmp
fstps
jle
jl
jl
jl
and
fdivrs
stos
sbb
inc
mov
loopne
loop
sbb
aas
or
xchg
fldcw
arpl
ret
daa
shll
out
rorl
jae
sub
push
pushf
mov
push
jbe
xor
mov
leave
xchg
stc
pusha
mov
jge
lcall
sbb
stc
xchg
test
in
jns
xor
loopne
xor
in
jbe
sbb
or
push
cltd
mov
cmp
sub
mov
test
daa
and
mov
cmc
sub
xor
mov
pop
jb
push
cmpl
push
cwtl
jp
jne
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
out
add
jle
jl
jl
jl
sarb
arpl
test
sbb
lock
lods
pop
shrl
sbb
fidivl
jmp
push
jle
aaa
out
shll
scas
rorl
dec
add
in
ljmp
xchg
pop
inc
fidivs
cmc
or
push
rclb
sub
jnp
cmp
and
popf
pusha
jnp
or
es
add
fldl
mov
xchg
xor
imul
out
negl
sub
mov
loope
pop
xchg
pop
je
sub
dec
pop
addr16
dec
repz
mov
rorb
repz
in
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
xchg
mov
jl
jl
jl
dec
loope
sub
pusha
cmpsl
xchg
or
and
xor
icebp
divb
lock
insl
mov
push
clc
mov
out
jge
push
scas
call
fsts
adc
sbb
subb
mov
or
xchg
push
xor
outsl
movsb
pop
mov
sbb
add
mov
into
xor
out
scas
xlat
push
and
roll
push
popa
std
add
daa
mov
or
xchg
stc
fiadds
add
data16
mov
xor
xchg
imul
pushf
dec
addb
push
add
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
fs
adc
mov
jbe
pop
inc
fmuls
sub
pop
inc
test
xchg
add
test
cs
mov
arpl
testl
and
imull
es
inc
imul
push
or
arpl
pop
lcall
movb
sbb
sbb
inc
lock
dec
sbb
and
xor
jbe
mov
mov
shr
loop
adc
mov
push
sbb
xchg
xchg
loopne
into
add
sbb
jbe
sub
ret
fs
add
hlt
aad
jns
je
push
or
cld
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
or
jo
jl
jl
jl
cld
and
addr16
outsb
sub
loopne
stc
jae
jge
setb
pop
sbb
push
inc
inc
jns
pop
add
arpl
push
add
xchg
sub
xchg
loope
sub
outsb
mov
out
test
push
mov
jnp
popf
hlt
inc
add
jecxz
xchg
push
adc
push
data16
pop
adc
sbb
ss
les
shl
addr16
fists
jmp
adcb
push
je
mov
sahf
nop
cmp
addr16
and
adc
cmp
cmp
fs
imul
clc
xchg
lock
imull
mov
add
pushl
call
jmp
cld
mov
mov
dec
mov
aad
cltd
mov
lods
jae
jl
jl
jl
pop
incl
loope
push
pop
mov
jl
fs
mov
mov
pop
sub
js
sarb
dec
fidivrs
mov
inc
scas
push
loopne
es
ret
ret
push
pop
testb
out
cmpsl
mov
xor
mov
mov
ret
out
in
aas
jno
push
aaa
idivb
pop
clc
jmp
mov
std
sub
lock
lods
inc
pop
sub
int
scas
mov
and
jnp
lea
lret
call
cmp
test
push
rcl
movsl
sbb
jno
and
adc
addr16
lcall
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
outsb
xor
jl
jl
jl
popf
lock
int3
mov
cmpsb
or
sahf
leave
fs
lock
mov
dec
and
and
movsl
leave
cltd
or
mov
cmp
xlat
arpl
movsb
stos
ds
add
ja
push
or
pop
sbb
ja
xchg
adc
push
push
out
cmpl
imul
dec
sub
insb
sarb
mov
add
inc
push
jp
pop
roll
js
pop
in
outsl
cmp
mov
lods
mov
shr
dec
pop
lods
pop
jae
push
xchg
adcl
lock
inc
mov
jl
mov
inc
loopne
loope
push
in
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
testb
jl
jl
jl
or
fwait
loopne
enter
jmp
movsb
or
inc
dec
mov
pushf
inc
dec
pop
and
ds
cld
imul
fsubs
jp
and
pop
pop
fsub
or
dec
cmp
in
inc
dec
xchg
xor
or
test
movsl
lret
push
icebp
jmp
sub
pop
les
push
or
pushf
mov
xor
daa
push
lahf
insl
aas
data16
mov
cwtl
lret
mov
pop
or
adc
sbb
push
in
clc
and
pop
mov
mov
bound
push
int3
jo
push
fs
inc
in
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
inc
fstpl
jl
jl
jl
shlb
fiadds
dec
mov
lahf
fistpl
push
pop
mov
iret
mov
dec
jg
mov
fldl
xchg
addb
in
das
jecxz
add
mov
pop
fidivrl
rcrl
shrl
mov
sbb
cmp
inc
mov
out
pop
dec
shrl
xchg
inc
or
push
add
aam
mov
fildll
jg
loop
push
cmp
out
fnstsw
stc
fcoms
dec
mov
adc
sub
vmulss
out
pop
inc
mov
mov
mov
mov
orl
jns
add
mov
add
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
xchg
sbb
je
jl
jl
jl
sbbl
mov
sbb
sbb
push
xor
and
lods
and
stc
jg
xor
in
mov
cmpsl
ret
cld
sub
sbb
adc
cli
nop
inc
xor
xor
push
aas
jne
fisubrl
mov
xchg
xor
inc
ds
pop
test
jne
sbb
out
xchg
or
sub
cmp
out
mov
adc
adcb
pop
mov
test
loopne
cmc
std
mov
ret
mov
mov
or
lret
cmp
out
and
adc
add
sub
neg
xchg
shl
cmp
out
inc
pop
and
test
sbb
pushl
jmp
or
mov
mov
push
int3
xchg
xchg
int
jnp
stc
cmp
jl
jl
jl
stc
add
stos
daa
insb
push
mov
dec
mov
cmc
loopne
insb
fs
rcll
popf
and
sub
sbb
xchg
push
xor
mov
arpl
outsb
fstl
jp
xorl
lcall
cltd
inc
stc
mov
daa
sub
mov
lods
ljmp
cmpsl
jns
fsubr
mov
stos
mov
mov
adc
aas
ja
popa
dec
jmp
incl
scas
cmp
gs
xchg
insb
lret
add
mov
xor
sbb
mov
std
mov
mov
xchg
push
call
int3
mov
je
sub
jno
add
clc
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
mov
mov
mov
sbb
push
cmp
int3
lret
insb
lcall
mov
push
out
xchg
std
rclb
ljmp
popf
pop
in
mov
jnp
adcb
dec
dec
insl
daa
push
rsm
mov
repz
jecxz
movl
dec
mov
ds
lahf
adc
testl
movsl
popf
jno
pop
mov
xchg
lahf
xchg
mov
mov
aam
xor
adc
lds
mov
add
dec
fwait
cltd
outsb
mov
aaa
dec
fbstp
or
stos
or
leave
test
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
test
xchg
jbe
jl
jl
jl
out
out
add
adc
out
shll
pop
enter
push
pop
leave
loop
adc
and
data16
arpl
arpl
dec
sbb
jnp
popa
ja
dec
aas
stos
pop
cmp
nop
ret
mov
xchg
xor
rcrb
adc
inc
inc
call
sub
and
pop
fs
mov
push
out
xor
scas
lcall
ljmp
ljmp
jae
sub
push
push
insb
sarl
sub
aas
xchg
dec
sbb
sub
fbld
incl
pop
cmpsl
lret
cmp
enter
or
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
cmp
fmull
jl
mov
sbb
ljmp
or
rcl
pop
out
icebp
shlb
add
aad
mov
dec
xor
or
aas
movsb
and
xchg
js
jp
outsb
loopne
fnstcw
iret
jecxz
sbbb
rolb
jb
xorb
sbb
xor
mov
jecxz
hlt
fucom
cmp
nop
mov
xor
jg
imul
cmpsb
xorl
or
icebp
data16
mov
dec
jecxz
sti
scas
adc
ret
add
sub
testb
mov
fimuls
out
aad
sbb
inc
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
dec
popa
nop
push
add
jl
mov
je
jge
orl
fsubrs
push
mov
xchg
pusha
stc
jae
and
pop
pop
loop
sahf
pop
into
dec
cmp
ljmp
fistps
xor
xchg
jge
aam
push
dec
inc
inc
negl
pop
push
xor
add
dec
xchg
or
call
xchg
jge
mov
in
negl
mov
enter
mov
jg
lock
call
scas
movsl
sub
imul
les
test
int3
sub
sub
call
jb
js
ret
dec
and
cmpsb
popa
inc
adc
mov
fmul
ret
mov
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
sbb
dec
or
jl
jl
xor
dec
insl
nop
push
sub
jnp
ret
ficoml
add
imul
shlb
out
dec
iret
imul
repz
pop
push
dec
lods
push
sbb
out
sub
scas
inc
mov
lea
adc
adc
hlt
push
fcomp
scas
mov
nop
xchg
fldl
and
jmp
adc
je
icebp
lds
sub
lret
pop
aam
jg
in
stos
inc
sbb
xchg
ljmp
insl
sti
push
cltd
push
mov
cmpb
imul
adc
xor
mov
add
xor
in
cmp
dec
pusha
pop
lds
inc
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
imul
xchg
adc
inc
inc
ret
divb
cmp
cmp
popf
push
testl
cli
jmp
clc
arpl
pop
pop
mov
mov
mov
xor
and
andl
mov
jo
sbbb
mov
push
mov
loope
cwtl
nop
sbb
aas
ficoms
mov
cmpsl
xor
sbb
dec
cs
mov
into
and
pop
or
out
lea
ret
ja
lahf
shll
nop
cwtl
ljmp
mov
cld
outsl
xor
cmp
lret
push
sub
mov
mov
cmp
push
fsubrp
add
sahf
jb
add
or
jmp
fsub
mov
clc
mov
repz
mov
or
jl
jl
dec
out
mov
test
lret
cltd
lds
imul
mov
jno
aaa
sbb
data16
call
jno
and
jle
xor
adc
cmpsl
repnz
xchg
xchg
icebp
xor
movsb
add
stos
jo
jnp
sub
lds
cmp
xchg
leave
and
mov
xchg
popf
xor
and
ds
stc
sbb
jmp
adc
jnp
push
mov
hlt
shl
cwtl
test
and
in
inc
mov
mov
push
rclb
fld1
pusha
decl
ret
xchg
dec
outsl
and
mov
std
pop
add
mov
jmp
pop
fimuls
cltd
push
mov
jmp
jl
jl
jl
popf
fimuls
inc
cmp
loope
sbb
and
insl
pop
leave
mov
jbe
popa
cmc
jne
fcmovnu
stos
push
xchg
roll
adc
fisttpll
inc
out
shr
stc
sti
rclb
leave
int
movsl
add
dec
out
push
hlt
scas
test
cmc
inc
xchg
in
add
dec
fst
std
push
dec
ss
pop
insl
dec
or
jg
enter
xor
jb
push
lods
jecxz
fstps
push
scas
sub
repnz
hlt
cmp
fldl2t
icebp
pop
repz
jo
mov
ss
pop
pop
imul
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
adcb
nop
or
jl
stc
push
sbb
push
mov
std
sahf
mov
lods
pop
fisubs
mov
sub
das
adc
and
hlt
xor
cmp
pushf
push
out
and
stos
jnp
or
inc
fs
pop
mov
ret
adc
mov
fldpi
push
ret
cli
adc
add
pusha
pushf
dec
nop
inc
jns
sbb
xchg
mov
rclb
sti
mov
sbb
sti
xchg
das
aaa
out
les
lcall
xchg
stos
in
testl
bound
mov
mov
clc
add
lock
arpl
jno
fistpll
jno
stos
add
cmp
fisubrs
pusha
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
pop
sbb
mov
mov
loopne
push
testl
push
pop
cmpsl
in
mov
sbb
insl
cmp
xchg
iret
mov
adc
or
push
xlat
ret
mov
lcall
inc
aam
pop
ret
stc
fwait
cmp
mov
loope
shl
daa
push
call
iret
mov
and
cld
sub
inc
icebp
ljmp
sbb
inc
or
push
cmp
add
mov
shlb
in
arpl
xchg
add
add
daa
shll
pop
rorb
outsb
ret
inc
loop
push
fnstcw
cs
xchg
pushf
movlps
xor
sbb
jmp
in
test
sti
mov
dec
cmp
popf
or
jl
mov
pop
pop
pop
xchg
icebp
shr
aad
fwait
pop
or
imul
and
and
out
sbb
in
lods
jecxz
push
pop
xchg
jg
fdivl
push
ja
inc
cmp
or
push
adc
fdivrs
in
popa
cmpsl
sbb
jecxz
mov
sbb
cmp
shll
xchg
lret
pop
mov
pop
xchg
ds
jae
jne
lods
in
lea
bound
arpl
xor
pop
popa
and
xchg
mov
mov
ja
mov
or
mov
xor
rorl
pop
fcmovu
loop
xor
rolb
pop
hlt
jmp
dec
jge
cmpb
jge
push
loope
mov
jl
mov
mov
mulb
scas
adc
loopne
ss
jno
mov
sti
sub
in
out
or
dec
jo
aas
pusha
pop
cmp
pop
jnp
mov
inc
and
aaa
mov
mov
push
add
test
xor
je
jl
icebp
xchg
lea
xchg
adc
mov
fxch
xorb
mov
mov
les
add
aas
movsb
jne
stos
sahf
insb
adc
mov
cwtl
stc
sub
or
leave
pop
ret
sbb
nop
popf
stos
daa
jg
cmp
or
and
imul
insb
mov
aad
rolb
pop
test
and
lds
inc
hlt
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
sbb
jl
jg
jl
xor
mov
adcb
sahf
push
xchg
lds
xchg
add
std
cmc
and
lods
sub
cmpsl
cld
repnz
mov
scas
xchg
pop
sub
or
xchg
stos
adc
jle
dec
sahf
daa
cmp
adc
mov
mov
les
mov
push
movl
mov
stos
push
insb
mov
fs
push
sahf
cmpsl
ret
rep
fyl2xp1
dec
mov
or
subl
add
popf
mov
out
idiv
mov
xor
and
mov
lods
xchg
push
lds
add
add
pop
nop
aaa
stos
lahf
bound
add
lret
cmc
adc
dec
fsubl
ljmp
test
lds
cmc
pop
in
repz
pushf
mov
gs
leave
xchg
jo
scas
adc
push
scas
sbb
js
add
push
cmp
jmp
rcrb
pop
rorb
pop
pop
xchg
orb
push
cli
mov
mov
das
cli
pop
aad
aad
fiadds
lds
jmp
lret
push
inc
sub
inc
repnz
mov
add
sahf
jb
add
cld
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
and
popa
mov
into
jg
jl
or
cmp
out
add
pop
test
out
pop
mov
dec
cmp
push
clc
push
outsl
test
lock
loope
lock
pop
mov
add
aaa
and
in
lods
shll
std
mov
data16
mov
iret
in
inc
lahf
jmp
jbe
std
and
xchg
aam
sub
jo
and
cmp
not
ds
push
lea
push
or
ja
mov
mov
cmpsl
lret
cltd
pop
push
mov
int
pop
dec
push
dec
xchg
lds
lcall
xchg
and
cmp
aas
cmp
sbb
mov
pop
scas
push
rcrl
jae
inc
arpl
add
cmp
lods
add
pop
push
fisubs
jae
push
mov
mov
in
enter
les
cmc
icebp
in
inc
inc
jb
mov
jbe
imul
icebp
aam
in
cwtl
mov
sub
inc
iret
call
push
popa
lods
pop
sbb
and
push
mov
clc
adc
dec
mov
mov
int
inc
push
push
mov
or
jle
inc
int
sub
mov
dec
fsubrs
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
xorb
add
jg
jl
mov
cmpsb
mov
jno
nop
adc
pusha
pop
xchg
leave
repz
adc
loop
push
jge
cwtl
and
rol
push
loop
in
lods
mov
insl
sahf
mov
and
jecxz
xchg
mov
cli
nop
push
xor
sub
cwtl
xchg
fldenv
lods
xchg
pop
push
xor
inc
adc
xor
mov
in
pop
cli
mov
mov
lahf
dec
add
in
lcall
int3
idivb
jge
cmpsl
mov
dec
lret
bound
jns
pop
ja
loope
int
ljmp
xchg
cltd
shlb
arpl
fs
jne
loopne
or
lahf
ja
lahf
jle
and
adc
adc
movsl
mov
or
push
ljmp
and
sbb
or
sti
mov
mov
push
jns
sub
jns
xor
notl
scas
lods
sbb
xchg
imul
es
inc
fnsave
jo
fisubl
fstpl
sbb
cmpsb
xchg
mov
cmp
decl
lret
add
popa
lahf
lret
test
pop
push
cmc
or
adc
es
nop
xchg
adc
gs
inc
mov
shrb
and
fimull
adcb
mov
and
ds
in
cmp
and
pop
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
sbb
add
jl
jl
adc
frstor
out
in
xchg
cmp
jl
pop
lret
sbbb
dec
push
sti
jno
and
inc
shrl
mov
xchg
mov
sub
inc
and
jp
div
push
add
mov
leave
pusha
dec
push
in
jo
ds
les
xlat
xor
in
leave
sub
add
cmp
sbb
mov
sbb
daa
adc
shl
into
sub
cmp
jne
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
lahf
mov
jl
hlt
jl
jl
pusha
call
mov
sbb
inc
inc
mov
in
jle
pop
sub
in
cld
clc
mov
fiaddl
in
mov
push
fs
imul
push
cmpsl
or
pusha
mov
jle
shll
mov
cmc
add
sahf
xchg
pop
xchg
cld
jae
das
mov
scas
insl
dec
jecxz
push
or
inc
mov
daa
mov
repnz
cmp
push
lret
enter
bound
sub
cmp
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
fs
incb
jl
xchg
jae
test
icebp
push
jle
outsl
jnp
je
inc
mov
inc
dec
or
movsb
rcl
fwait
in
loopne
pushf
js
push
jl
and
xor
mov
in
mov
idiv
mov
rorb
cmp
pop
ja
repnz
ret
xor
data16
add
mov
xchg
pop
dec
repz
mov
pop
mov
dec
out
dec
ret
shl
adc
adc
in
aad
mov
popa
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
rcll
xor
jl
jno
xchg
push
sbb
mov
pop
push
pop
xchg
inc
mov
ret
imull
mov
cmp
pusha
jno
rcr
inc
dec
mov
push
xchg
fmuls
jo
fucomi
setge
insb
sbb
adc
clc
sahf
popf
scas
movsl
in
lods
lahf
xor
and
fidivrs
pop
sub
stc
pop
push
jecxz
xchg
pop
in
add
shll
fld
jg
std
ficompl
mov
in
pop
ret
push
scas
add
and
cmp
es
jmp
push
adc
pop
lahf
sub
cmp
mov
dec
pop
dec
or
push
adcl
pop
mov
fwait
sub
pushf
clts
xchg
ss
dec
sbb
ficompl
adc
xor
dec
into
xor
pusha
inc
mov
or
mov
les
adc
jnp
subl
cmpsl
jnp
push
shll
jle
icebp
and
mov
stos
fdivl
fnsave
sbb
fld
shl
call
and
hlt
cltd
cltd
imul
iret
imul
mov
or
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
mov
pop
jl
xor
jl
cmp
pop
outsb
dec
sub
adc
jno
mov
icebp
inc
int
jns
add
mov
or
pop
ret
mov
pop
xchg
sbb
into
adc
mov
and
ficomps
xchg
inc
cmp
mov
aad
add
cwtl
mov
dec
fstpl
cmp
push
popa
adc
jmp
pusha
mov
pusha
and
push
ret
or
icebp
out
jb
add
jmp
or
movsl
testl
fcomip
fstpl
xchg
cwtl
inc
fcoml
mov
loopne
incl
divl
je
scas
test
xor
mov
add
inc
inc
xchg
jne
movsb
repnz
inc
xor
lds
jbe
test
push
ret
out
mov
inc
shlb
loope
mov
inc
out
daa
fmul
mov
pop
mov
sbb
notl
cmpsb
adc
dec
inc
or
jmp
mov
int
or
mov
inc
ret
xchg
out
xchg
mov
fcoml
fmuls
iret
sbb
jns
std
jae
sbb
sub
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
out
lret
in
xchg
jl
xor
jl
adc
ret
imul
ds
inc
cmpsb
mov
popw
or
add
add
mov
adc
mov
adc
cmp
aas
scas
pop
faddl
lock
cltd
out
scas
jg
fdivr
inc
mov
cmp
push
push
lret
loopne
adc
sahf
mov
and
ret
popf
ffree
popa
mov
orb
mul
outsl
stc
pop
adc
sbbl
mov
imul
sub
popf
testl
cmpsl
ja
mov
xchg
jnp
cwtl
je
fcomps
testb
roll
xchg
or
mov
xor
and
push
xor
into
cld
fwait
lret
mov
adc
out
shrb
imul
cmp
dec
add
imul
mov
in
cmp
call
into
scas
jp
idivl
das
fildl
repnz
aad
out
icebp
jp
std
js
leave
clc
jnp
fistl
mov
nop
sub
inc
imul
jge
xor
lods
xor
leave
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
stos
neg
lods
pop
sbb
jg
jl
popa
jg
hlt
std
test
push
ja
sbb
orl
iret
out
movsl
stos
sarl
std
or
ret
popa
test
xlat
ljmp
arpl
push
fs
popf
fdivl
xchg
add
xchg
jnp
mov
aaa
cmp
pushf
mov
fimull
das
jnp
scas
push
xchg
sub
inc
subb
enter
cmp
jbe
or
ds
sarl
xor
xor
notb
mov
btc
out
sahf
in
sbb
cmp
popf
lret
test
in
sbb
xor
sahf
scas
add
pop
in
movsl
ja
xlat
mov
xor
push
xor
xchg
in
xor
sub
dec
fwait
aaa
sbb
jbe
adc
or
jns
inc
ss
inc
pop
aad
and
or
mov
test
sbb
xchg
dec
xchg
sub
fxch
mov
pop
dec
sub
sub
push
lods
adc
je
repz
jo
cmp
mov
cmc
int
stos
xchg
cmpsl
test
push
and
inc
pushf
mov
mov
fnsave
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
lock
sbb
jg
jl
jle
mov
adc
out
or
push
fdivp
inc
je
insl
lods
inc
jbe
data16
mov
aad
dec
xor
and
and
push
and
ss
les
pop
outsb
mov
push
cmpsl
sbb
test
sub
jecxz
movsb
mov
xlat
mov
or
pusha
cmp
leave
test
xchg
ja
shlb
sub
xor
outsl
fcomp
adc
icebp
scas
js
cmp
pop
bound
inc
fwait
addr16
pop
jne
mov
push
and
bound
pop
pop
roll
subl
cld
pusha
lahf
stos
outsl
scas
jmp
pop
insb
and
cmp
push
cmpsb
ljmp
lods
shrl
xchg
dec
mov
test
xchg
jb
lcall
iret
incl
and
sbb
addb
add
lea
xor
testb
inc
in
mov
fldcw
fs
rcrl
xchg
andb
int3
sbbb
in
xchg
js
incb
or
sub
jecxz
adc
dec
push
adc
test
stos
jno
push
mov
ja
mov
jmp
mov
mov
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
dec
mov
jl
jg
jl
xchg
inc
repnz
lods
adc
shrb
inc
add
jno
pop
insl
sarl
call
js
and
sbb
addr16
int
out
jecxz
push
sbb
js
insl
mov
shlb
cmc
add
ja
bound
adc
out
jle
mov
movsl
push
stos
fistpll
iret
xor
sub
pop
ret
mov
lcall
int3
sbb
cli
cmpsl
icebp
pop
insl
pusha
jg
imul
pop
mov
ljmp
data16
mov
cmp
jp
xlat
addr16
mov
test
loop
icebp
xchg
and
xor
out
mov
fldl
add
mov
loop
sub
jp
inc
test
rolb
bound
mov
push
test
roll
popa
lods
pop
and
fs
cmp
cmc
xor
mov
or
mov
pop
or
mov
loopne
shll
inc
mov
leave
mov
mov
cli
ficoml
ljmp
sbb
add
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
fildl
shlb
jg
jl
je
out
pop
and
mov
cs
sbb
popf
out
mov
stos
pusha
ljmp
adc
jno
fstpt
cld
sub
fisttpll
pop
movsb
xor
jne
xchg
jg
pop
adc
into
jnp
ljmp
in
mov
mul
arpl
out
cltd
in
and
cld
xor
mov
pop
and
in
rcrb
pop
lock
mov
push
aaa
or
jge
jge
imul
adc
sbb
xchg
add
add
push
repz
dec
jb
or
movsb
add
inc
cmc
push
ss
in
std
and
adc
cwtl
and
cmp
adc
scas
sub
icebp
out
ja
or
aas
mov
push
cmp
add
push
sbb
in
xor
or
dec
faddp
jmp
stc
das
push
test
xchg
jae
pushf
into
rorl
push
sub
sti
pop
xor
in
and
jge
fwait
cltd
daa
xor
push
mov
cmp
adc
std
cmp
ret
outsb
pop
outsb
or
add
xchg
popf
std
mov
jmp
psraw
out
frstor
imul
jl
jg
jl
repnz
inc
ja
xchg
xorl
call
imul
mov
sbb
mov
xor
rolb
push
iret
das
cmpsb
mov
ret
outsl
pop
int
cltd
scas
push
mov
repz
or
icebp
sub
popa
or
adc
cmpsb
jge
xchg
add
mov
outsb
shrb
mov
dec
pushf
out
sbb
jecxz
movsb
mov
aam
add
mov
and
push
cs
outsb
xchg
inc
es
inc
mov
repz
pop
sti
cwtl
cmp
xchg
sti
cli
andl
imul
fcmovnbe
enter
mov
jl
out
outsl
ret
pop
adc
xor
jbe
sbb
add
adc
sbb
adc
add
and
ljmp
cmpsl
add
pop
mov
mov
sub
cmp
dec
imull
inc
jl
enter
adc
adc
mov
out
in
das
std
jnp
shll
pop
int
xchg
aam
sti
jne
in
stos
sbb
andb
sti
cmpsb
and
jp
pop
lcall
add
jae
mov
das
jns
cwtl
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
jae
cmp
jae
sub
shrl
rclb
addr16
das
cwtl
fdivrl
sub
out
in
adc
pop
dec
inc
jmp
int
mov
inc
or
mov
push
mov
int
mov
js
frstor
loope
and
xor
dec
iret
pop
out
pop
add
fsubrl
addr16
and
data16
jge
fcoms
and
inc
mov
inc
loop
add
outsl
pop
mov
ljmp
mov
mov
aas
cmp
pop
pop
adc
iret
mov
adc
pushf
jle
mov
filds
js
jnp
xor
xor
dec
cwtl
jp
cmpxchg
xor
hlt
push
add
pop
fbstp
faddp
dec
jae
cmpsl
and
sbb
or
icebp
cmp
adc
loop
pop
pop
outsl
orb
test
jo
shl
fwait
add
sbb
inc
add
lods
pusha
push
pop
fldt
cmp
push
mov
sbb
enter
cmp
movsb
or
js
mov
ljmp
lea
push
mov
cwtl
imul
or
push
or
push
fmull
rol
call
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
test
adc
mov
jl
xor
jl
or
cld
out
dec
call
stc
cmp
fcomps
call
pop
or
dec
pop
bound
int3
in
test
jno
andb
pop
sub
cmp
sub
add
movsl
inc
sub
repnz
sub
nop
mov
dec
dec
mov
push
push
loopne
jp
pop
lret
xor
and
lret
repz
icebp
add
cmp
stos
add
rorb
mov
mov
loop
lahf
mov
lods
es
ja
inc
mov
pop
pop
add
cmc
aas
out
test
lods
repnz
ret
fisttpl
in
push
adc
push
cmpsl
andb
pop
jg
ficomps
shlb
push
mov
fnstcw
ret
pop
mov
dec
pop
dec
or
cmp
inc
adc
das
and
pop
in
adc
out
xor
addr16
xor
sbb
sbb
inc
sub
xor
fisubl
iret
pusha
lods
mov
and
cwtl
mov
and
out
shrl
inc
aas
sbb
mov
mov
rolb
push
in
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
push
mov
rolb
xchg
add
xchg
cmc
push
icebp
push
stos
jns
sub
pop
and
imul
push
cmp
pop
rorb
sbb
mov
test
inc
gs
cmp
xor
add
adc
mov
or
mov
int3
insl
lock
push
imul
mov
push
sarl
in
add
jno
add
dec
add
ret
hlt
incl
imul
ss
sbb
cld
pusha
dec
xor
fcomps
mov
imul
scas
xchg
inc
push
inc
and
cmpsl
jns
cmp
lock
stc
and
inc
dec
xor
pop
xchg
sti
push
sbb
sbb
sbb
jmp
insb
into
push
xchg
insl
ds
jmp
repnz
mov
sbb
jbe
jmp
fsubs
adc
ret
push
mov
cli
xchg
dec
mov
cmpsb
or
decb
lcall
mov
popf
sbb
pop
mov
sbb
mov
lahf
ljmp
xchg
cmp
imul
or
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
xchg
fwait
mov
popf
lret
and
mov
loope
int
xchg
jmp
divb
push
push
sub
scas
cs
or
incb
out
mov
pop
jp
dec
jo
jo
imul
push
mov
xor
repz
js
mov
jle
and
mov
cwtl
push
xchg
or
inc
repz
or
lret
adc
out
outsb
insl
jno
lods
cmp
mov
stos
mov
adc
mov
out
xchg
sbb
cmp
push
dec
sbbl
or
lock
lret
push
add
push
loop
insl
cmp
in
adc
orb
add
xchg
push
sub
fsubs
add
nop
loopne
fidivrl
outsl
add
pushf
push
lret
cld
shlb
cmp
mov
xlat
testb
fisttpll
in
push
js
push
pop
push
mov
sbb
xor
cmp
pop
inc
rolb
sahf
filds
idivl
cmp
dec
and
jle
add
je
movsl
dec
orb
mov
movsl
hlt
imul
mov
mov
mov
jmp
or
push
cmp
dec
shll
adc
jl
push
dec
pop
add
rorl
sbb
cmpsb
imul
adc
or
fcompl
mov
and
push
pop
or
testb
xchg
sti
shll
or
ds
imul
mov
pop
dec
and
ljmp
ja
push
dec
cmc
cld
shlb
cmp
push
dec
push
ret
andb
icebp
popf
filds
ror
ds
mov
dec
sbb
jns
popa
sub
or
ljmp
mov
imull
xchg
push
add
or
lcall
sbb
dec
insl
add
sbb
and
cli
or
pusha
pop
push
and
addr16
mov
insb
pop
leavew
fbstp
fdivr
add
jae
movsb
rol
mov
idivl
fisttpll
pop
jno
inc
cmp
and
outsb
sub
pop
jb
fdecstp
enter
adc
dec
mov
mov
out
mov
vmwrite
out
insb
xor
test
xchg
mov
mov
js
test
repnz
out
notb
cmp
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
push
adc
jl
jg
jl
lock
mov
push
sub
xor
std
jae
lock
xchg
jne
into
sbb
out
fcoml
or
add
outsb
inc
xchg
orl
adc
arpl
insb
jbe
lock
push
pop
ds
xchg
and
mov
or
mov
mov
icebp
es
push
inc
sahf
cmp
dec
outsl
test
xor
dec
mull
sbb
sahf
mov
push
std
cmpsb
std
xorl
aaa
jbe
xchg
pop
xchg
mov
xor
test
icebp
pop
cmp
mov
mov
popf
pop
jecxz
lock
push
test
std
clc
cli
in
and
dec
sub
pop
fmull
mov
subl
push
jge
lret
jg
sbb
es
in
or
xchg
jb
cmp
out
xor
xchg
cmpsl
sbb
sbb
sub
insl
or
or
adc
mov
or
scas
jae
fs
addr16
mov
dec
push
adc
mov
rcrl
aad
mov
push
cmp
je
dec
fldcw
cmpsb
fwait
cmpsb
push
neg
flds
popa
aad
ja
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
pusha
inc
notl
les
xchg
ds
test
adc
fisubrs
pop
scas
fwait
lret
xchg
movsb
mov
loope
fidivrs
xor
mov
cmp
pop
mov
mov
push
negb
inc
sti
out
cs
sub
push
arpl
rorl
loop
stc
mov
add
insb
dec
scas
jo
pop
scas
adc
ss
mov
movsl
sbb
dec
and
xchg
xchg
sbb
xor
and
push
pop
and
push
cmpsl
in
push
inc
pop
dec
hlt
cmpsb
jnp
into
addb
shll
out
jp
mov
xlat
arpl
stos
sub
pop
shl
and
mov
test
je
outsb
aam
ja
clc
jg
lods
add
sbb
and
cmp
out
push
bound
ljmp
int3
rclb
push
ja
pop
jp
hlt
adc
scas
xor
addr16
mov
fldt
mov
mov
cltd
cmc
add
rclb
loopne
cmp
imul
xchg
leave
fldl2t
jnp
adc
js
or
pusha
mov
insb
js
push
ja
fsubp
push
dec
jno
enter
xchg
inc
jb
xchg
hlt
pop
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
flds
leave
sub
jl
jl
inc
mov
int
cmp
loop
cmp
fldt
or
roll
push
xor
adc
add
xchg
fsubl
xor
mov
mov
shl
lea
add
insl
and
bound
jp
pop
and
rorl
mov
cmp
add
sahf
addb
jmp
sub
std
fiaddl
aas
jbe
popf
lock
jg
xchg
fcmove
cmpb
push
xchg
mov
in
xor
or
shlb
out
jmp
fstpl
xor
push
pop
adc
out
push
jmp
ficoml
mov
out
adc
jo
test
jle
and
adc
in
jbe
sub
push
scas
pop
cmp
or
pop
lahf
xor
cmp
add
add
icebp
in
fs
jns
adc
jne
jo
int
sub
jl
jl
mov
insb
mov
rolb
fists
push
push
movsl
jge
decb
int3
lods
jg
jne
xchg
add
mov
sub
mov
jge
pop
lret
mov
lcall
fs
xchg
xchg
jmp
addr16
stos
dec
xor
ljmp
cmp
lret
frstor
imul
inc
rclb
xchg
cmp
xlat
sbb
sbb
push
sbb
jge
pop
inc
jnp
unpcklps
jge
int3
jno
sbb
and
pop
dec
cmpl
es
repz
sbbb
js
popf
movsb
mov
fcmovne
fmull
out
cmp
pushf
adc
fistps
movntq
lea
cmp
repnz
frstor
jnp
jo
jno
xchg
mov
mov
mov
jae
mov
mov
scas
add
pop
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
sub
sub
jl
jl
loop
add
mov
ret
xorb
dec
xchg
dec
ret
outsb
out
mov
out
cmp
pop
pop
mov
arpl
fcoms
fidivl
icebp
add
js
xor
xorb
adc
xchg
stc
ficoms
mov
jns
mov
cmp
adc
idiv
push
ja
pop
das
add
dec
cmp
cmp
push
add
and
push
test
cmp
mov
jge
push
jmp
dec
add
cmp
outsb
jle
leave
xchg
pop
cmp
jnp
mov
lret
cmp
arpl
cmp
push
xor
adc
push
push
inc
fisubl
and
das
dec
mov
jnp
xchg
pop
sbb
sbb
movsl
push
sub
xor
popa
push
dec
xchg
in
xchg
imul
adc
enter
sbb
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
in
adc
jl
sbb
jl
xor
aam
mov
inc
movsl
aas
mov
cmp
xchg
jne
add
jnp
xchg
adc
imul
mov
pop
sbb
push
fnsetpm(287
sbb
push
or
xorb
xchg
inc
add
sbb
sub
jmp
pop
dec
das
cltd
mov
scas
and
fisttpl
jnp
jmp
xchg
jge
arpl
mov
cmp
in
push
push
stos
fwait
jb
push
mov
sub
dec
dec
rol
xor
std
and
in
or
xchg
mov
jne
js
hlt
inc
xor
cwtl
insl
add
daa
sbb
sbb
lahf
jle
xchg
ror
mov
out
sub
sub
dec
xchg
aad
inc
dec
outsl
test
test
mov
sub
and
xchg
icebp
fildll
rorb
mov
loopne
sbb
fcoms
outsl
cli
ss
js
mul
xor
mov
push
dec
mov
fnstcw
movsb
cmpsb
mov
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
sub
sbb
jl
out
xor
mov
mov
andl
popf
adc
frstor
cmp
pop
xchg
jge
adc
shlb
stos
sub
mov
mov
add
or
addr16
and
pop
dec
xor
cmp
dec
cli
xchg
repz
and
aaa
jl
ret
mov
sub
mov
adc
cmp
out
push
lods
push
and
add
or
adc
sahf
ja
or
inc
rolb
aam
and
sub
andb
shll
out
and
pop
in
popa
loope
jno
fdivr
mov
enter
and
adc
adc
xor
cld
adc
jge
jl
mov
in
int3
mov
repz
xchg
mov
mov
out
mov
stos
mov
adcb
iret
or
out
mov
shll
gs
repnz
pop
out
test
or
sbb
mov
cmp
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
mov
sub
jl
jg
jl
mov
fdivs
iret
mov
sti
and
push
repz
add
jp
and
jne
add
mov
push
and
pop
and
add
out
xor
pop
mov
lods
and
mov
fildll
fst
adc
ja
mov
fwait
lods
test
mov
in
pusha
test
cmp
pop
jo
inc
add
dec
shl
inc
sub
push
add
mov
fidivs
dec
xor
cld
jb
mov
and
lcall
mov
pop
push
mov
shlb
add
pop
cmp
and
xchg
lcall
jge
in
dec
xchg
adc
repz
fwait
in
cmp
rorl
andb
outsb
outsl
push
push
aas
push
pop
xchg
sub
pop
pushf
mov
cmpsb
pop
adc
test
lods
xchg
inc
jb
dec
cmpsb
dec
xor
mov
mov
sbb
movsb
sub
mov
sbb
inc
cmp
ds
jp
xchg
je
rorb
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
sti
push
ret
int
das
jl
sbb
jl
bound
adc
or
or
lret
mov
fwait
mov
pop
test
test
push
out
imul
push
xchg
hlt
cli
or
jg
scas
dec
stos
lods
int
inc
int
js
rcrb
into
pop
leave
stc
push
xchg
sub
daa
js
icebp
insb
xchg
mov
aas
stos
insb
sbb
add
jbe
and
aam
pop
adc
jae
cmp
or
in
rolb
adc
and
imul
test
push
lret
and
or
cmp
sbb
mull
jnp
test
sub
cltd
sub
shll
scas
mov
ss
inc
fisttps
sbb
jle
es
mov
ret
cwtl
loopne
jle
dec
add
dec
cwtl
lahf
inc
es
rcl
inc
jl
xchg
or
lock
pop
dec
mov
cmpsb
push
jle
mov
pop
mov
dec
push
xor
outsb
rcl
rorb
add
add
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
outsl
xor
stc
subb
jl
jg
jl
leave
xor
xchg
movsb
add
int3
mov
lret
bound
xlat
dec
or
imul
testl
scas
lret
xor
or
imul
jb
repz
movsl
or
leave
xor
or
xchg
sbb
mov
adc
stc
push
mov
pop
sahf
insl
scas
mov
inc
sub
inc
pop
pop
cs
dec
and
jno
sbb
xchg
mov
pop
lods
cltd
repz
dec
ljmp
out
xor
dec
xor
out
or
int
rcrl
add
filds
ret
cs
mov
popf
add
popl
sub
aaa
mov
mov
fstl
repnz
nop
into
cli
aad
loope
outsl
push
cld
push
sbb
mov
ja
add
xchg
mov
out
add
jmp
cli
jo
adc
inc
dec
cs
test
pop
xchg
mov
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
dec
dec
pusha
or
jg
jl
cmpsl
lahf
jb
xor
mov
rcll
push
decl
adc
push
out
movsb
clc
sub
lods
jp
mov
push
insl
call
pop
dec
push
jns
aaa
jl
xchg
cmp
mov
pop
sbb
les
pop
addl
mov
aad
cmpb
loopne
dec
cmp
subl
xor
in
mov
dec
iret
jno
imul
pop
imul
xchg
gs
out
push
daa
xchg
fldcw
sub
imul
scas
mov
je
jns
or
mov
push
popa
into
int
jb
and
mov
fdivrs
mov
aad
cmp
aas
insl
mov
nop
repz
lahf
daa
test
inc
inc
lock
insb
in
xor
aas
aas
addr16
cmp
xor
jle
jl
sbb
and
lds
rcrl
mov
dec
addr16
jecxz
and
adc
iret
fsubl
mov
outsl
stos
cmc
pop
xchg
scas
push
mov
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
fsubrs
jl
or
aam
mov
sub
sub
in
ds
sub
out
xor
dec
int
xchg
in
inc
inc
dec
jne
and
mul
or
cmpsl
in
xor
lcall
in
call
add
lret
and
es
loope
test
push
push
imul
loopne
aas
xor
lret
push
mov
test
mov
out
xorl
aas
icebp
pop
cmpsb
in
push
in
cmc
loope
mov
jno
xchg
data16
adc
and
cmc
rorb
xor
jmp
mov
sub
loopne
add
mov
in
ss
or
jecxz
cmc
call
jp
or
jle
movsb
add
fistl
inc
jg
enter
scas
test
insb
js
cwtl
fstpl
or
ljmp
jge
push
dec
icebp
pusha
pushf
sbb
xor
dec
mov
dec
add
dec
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
add
mov
jg
jl
mov
lahf
push
jo
jl
or
scas
xlat
inc
out
mov
push
popf
add
jb
cmp
xchg
popf
repnz
into
movsb
xor
idiv
push
add
cld
xlat
shlb
push
decb
cmpl
xchg
rcrl
in
pusha
and
movsl
insl
cld
jno
inc
shll
bound
xchg
gs
std
jb
out
jne
shl
cli
popl
sbb
sub
or
pop
add
bound
clc
inc
hlt
ljmp
pop
repz
xchg
lret
or
lea
push
xchg
xbegin
fstl
scas
inc
mov
lahf
xor
inc
gs
mov
fdivp
sahf
stos
push
insb
imul
cli
repz
lret
inc
xor
push
mov
fbld
outsb
ds
mov
pop
into
mov
orl
int
and
adc
repnz
push
inc
xchg
jno
sbb
pop
add
xchg
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
xchg
or
jp
cmpsl
add
and
fs
add
int3
jne
je
inc
dec
lahf
jmp
ficompl
test
daa
mov
fsubs
inc
movsl
adc
jg
mov
xchg
adc
inc
push
lods
jmp
sub
cmpb
jb
mov
lcall
pop
mov
and
lret
cld
jmp
cmp
rorb
sub
push
call
daa
inc
movl
hlt
sbb
sub
in
mov
pop
and
cmp
push
sbb
call
inc
test
pop
shlb
cld
cltd
dec
imul
mov
xchg
push
adc
out
shll
int
out
dec
adc
cmc
mov
push
je
push
cmp
mov
repz
pop
cmp
fidivs
push
ret
mov
pop
lea
add
mov
int
shll
shll
inc
repz
addl
outsl
dec
scas
jno
jne
jmp
xchg
pop
cmpsl
inc
adc
sub
ds
push
pop
and
jl
sub
sbb
fistps
add
lods
adc
mov
pop
jbe
cld
jp
push
gs
and
mov
ret
sbbb
sti
ss
mov
xchg
rorb
inc
or
pop
dec
jge
movsb
jno
cmp
pop
push
mov
cwtl
into
sahf
inc
push
or
jo
in
cltd
jbe
psrld
out
loope
outsb
jp
jo
rep
int3
js
sub
in
mov
fisttps
adc
pop
inc
imulb
jnp
repz
add
add
mov
fdivl
pop
clc
jae
int3
or
rcrb
jle
popf
leave
test
outsl
mov
cltd
notb
mov
rcll
fldl
hlt
lea
popa
ret
jmp
adc
outsl
cmp
fnstsw
push
dec
pop
shll
insb
push
incb
push
sbb
test
outsl
ss
pop
add
sub
loope
and
repz
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
cmc
mov
jl
or
out
mov
jge
imul
insb
repnz
push
push
push
jbe
sub
sbbb
sub
push
xor
cmp
stos
mov
inc
add
gs
std
movsb
cs
xchg
inc
ljmp
jmp
lods
je
repz
ljmp
push
dec
out
cmpsl
inc
das
incb
and
lahf
aad
mov
jbe
je
and
rclb
outsl
fimuls
and
aad
inc
and
pop
sti
pop
pop
push
cltd
mov
xchg
jg
loopne
pop
in
xor
movsb
cmp
loop
insl
and
outsl
pop
push
jmp
icebp
jae
je
mov
mov
lods
or
sbb
sub
fdivrs
and
sub
jne
push
movsl
adc
inc
daa
stc
cmp
cmp
hlt
lret
lret
pop
out
mov
lcall
jp
sbb
and
mov
cmpsb
add
add
daa
add
add
dec
into
hlt
jge
jge
fnstenv
mov
jnp
jl
or
push
jno
dec
fidivs
fwait
add
addb
or
lahf
in
mov
xor
push
mov
add
jb
jge
mov
pop
pop
sbb
mov
in
mov
mov
fwait
adc
andl
or
inc
shll
jp
bnd
ds
loopne
pop
jg
jmp
imul
jp
addb
repz
loop
xchg
stos
inc
push
mov
and
dec
mov
xor
dec
stos
idivl
sbb
mov
mov
xchg
xor
jo
xor
es
inc
pop
mov
outsb
loopne
jo
insb
cli
adc
scas
fldl
push
cmpsb
xchg
outsl
int
jmp
mov
fnsave
mov
rcl
icebp
rcl
dec
mov
jbe
in
mov
in
cmpl
jmp
push
or
push
pop
punpckhwd
jmp
aaa
xor
lock
jmp
shr
dec
pop
pop
jns
insl
adc
push
ret
cmp
jg
jl
int3
aad
xchg
cltd
dec
mov
imul
pop
push
fwait
jg
cmp
or
subb
test
jne
repnz
adc
leave
bound
or
jnp
jbe
and
sbb
sub
out
jp
mov
mov
mov
jns
adc
imul
mov
sub
mov
movsb
push
jo
iret
mov
cmp
adc
leave
imul
lret
rcll
jge
xor
ja
cmp
or
outsb
jecxz
sub
mov
adc
out
imul
add
xor
jae
movsl
or
out
pop
mov
push
sbb
rol
scas
xchg
push
fiaddl
push
gs
repz
insl
dec
adcb
add
dec
shr
enter
test
std
mov
loop
sbb
xor
out
push
leave
pop
arpl
sar
sbb
sbb
std
mov
stos
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
ja
push
dec
sbb
jl
or
pop
cli
xchg
and
notl
sub
lcall
stos
inc
fistpll
cmpsl
jmp
scas
add
lods
push
jp
mov
ret
adc
and
gs
cltd
dec
sti
in
lds
addr16
pushf
or
cmp
pop
bound
push
jl
addr16
dec
jmp
mov
xchg
mov
and
ret
outsb
and
cmp
xor
fdiv
jno
jbe
adc
mov
fucom
dec
xor
int
sbb
sbb
aad
sbb
int
aam
and
out
repz
or
xorl
jno
mov
fs
mov
push
enter
inc
in
sbbl
xchg
in
push
cmpl
dec
outsb
or
cmp
jno
mov
pop
push
ret
in
pop
nop
gs
mov
xor
movsb
sub
cmp
mov
std
xchg
ja
xchg
addr16
adc
gs
inc
mov
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
movsl
aam
cmp
jg
jl
int
fisubrs
or
pop
or
adc
push
or
xor
out
cmpsb
pop
sbb
pushf
dec
dec
pusha
cmp
call
mov
push
cmp
dec
push
inc
sarl
or
mov
mull
xor
sub
mov
rcll
imul
sbb
lret
fildl
fisubl
je
xchg
jae
test
pop
sbb
sbb
fimuls
sbb
push
cmpsl
popa
hlt
aam
lock
in
arpl
cmp
mov
daa
ja
pushf
addl
sub
mov
cli
sbb
inc
lret
xchg
mov
xchg
insb
addl
pop
stos
adc
arpl
xor
sti
jno
or
lea
rclb
add
in
jge
jecxz
lret
sbb
iret
jne
jne
mov
cmp
and
pop
insl
lret
shll
dec
mov
add
pop
mov
mov
mov
and
dec
rolb
enter
add
xchg
out
std
push
gs
repz
jg
daa
cmp
jg
jl
cltd
rcrb
jno
inc
div
inc
fimull
test
in
mov
in
cmp
out
or
mov
lds
daa
repz
popf
or
scas
push
popa
add
ss
or
rclb
mov
sub
cwtl
stos
push
push
or
inc
fnstsw
aad
hlt
pop
mov
mov
xchg
xchg
pop
adc
fisttpl
scas
adc
pop
add
cli
clc
outsb
xchg
int3
outsl
push
ret
jle
inc
xor
push
pop
push
mov
dec
shlb
cmp
add
movsl
loope
pop
out
dec
add
repz
cmpsb
jbe
xchg
lret
enter
icebp
adc
lock
pusha
mov
test
out
fistpll
fiadds
xchg
cmp
aas
fstpt
test
sbb
lcall
insl
outsb
fcomi
mov
cmp
insb
push
adc
ffreep
mov
inc
lock
inc
clc
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
push
outsl
out
adc
jl
inc
pop
inc
cmc
sub
inc
icebp
sub
test
fcmovb
sbb
ret
push
sti
repnz
insl
hlt
push
xchg
jp
inc
stc
das
adc
in
in
cmp
lods
aam
adc
jb
xor
js
pop
pop
jg
sub
inc
aaa
addr16
cmp
clc
adc
and
jg
test
or
mov
shll
and
mov
xchg
std
arpl
rclb
push
add
arpl
dec
inc
out
loope
cmp
xchg
jl
ja
pop
xchg
aam
fucomip
sub
mov
insl
sub
loope
das
cmpsl
js
and
inc
clc
or
int3
repz
fisttpll
ljmp
insb
mov
push
jmp
dec
out
pop
jp
imul
fistl
ret
or
lods
adc
fwait
sub
ja
lods
inc
or
stos
in
ror
mov
aas
fmuls
enter
add
or
xor
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
iret
daa
lds
jl
jg
jl
out
in
cmp
xchg
mov
push
stos
mov
cmpsl
repz
fldcw
dec
add
xchg
sti
imul
or
aam
xchg
adc
xor
pop
iret
jp
out
mov
xchg
in
rcrl
ja
imul
sub
es
dec
sbb
repnz
mov
cmpsl
in
rclb
or
xchg
adc
mov
or
hlt
aam
setbe
sub
loope
mov
popf
mov
aas
test
es
mov
cmp
mov
xchg
xorl
sbb
call
or
ficompl
dec
sub
stos
je
jne
mov
fwait
mov
sub
cmp
adc
jae
xchg
lds
pop
add
idivl
out
xor
mov
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
mov
aas
jl
or
adc
dec
into
jle
pop
lds
jle
mov
mov
adc
add
inc
sbb
mov
mov
popa
leave
cmp
jo
adc
cmp
test
pop
sbb
in
out
stc
movsb
addr16
insb
push
sbb
mov
sbb
nop
push
jne
mov
int
lret
in
cmp
xor
xchg
movsb
cmp
jb
adc
imul
shrb
and
or
jl
mov
arpl
iret
das
lcall
push
shr
lret
cmp
leave
sub
mov
test
call
xchg
lahf
cmp
sbb
jb
jno
pop
adc
outsl
test
insl
pop
lea
mov
daa
divl
daa
in
sbb
sub
and
pop
inc
mov
clc
mov
inc
adc
and
jbe
pop
push
pop
pushf
dec
adc
xchg
in
lret
sarb
sbb
xchg
push
pop
mov
adc
mov
fwait
dec
bound
flds
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
dec
inc
or
jecxz
jl
push
jg
jl
mov
stc
insl
lahf
push
jae
xchg
sub
add
stc
into
insl
out
xor
mov
icebp
mov
bound
jge
pop
in
push
inc
sub
inc
hlt
mov
arpl
xor
out
fildl
fnsave
leave
dec
in
mov
imul
pop
imul
lea
xor
imul
jg
adc
jl
in
je
sub
fstpl
ret
jl
addl
and
push
popa
shll
jbe
cmp
jg
add
inc
js
xchg
xchg
xchg
hlt
xchg
dec
outsb
add
imul
mov
test
jnp
in
mov
aaa
int3
insl
mov
and
adc
xchg
lea
fiaddl
cmp
mov
lret
scas
pop
ret
fiaddl
ret
mov
sub
je
lret
aaa
arpl
sub
cli
arpl
fwait
mov
mov
add
dec
cld
repz
push
push
scas
loop
and
ljmp
add
add
add
add
add
or
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
lock
clc
sbb
int3
rclb
inc
push
inc
sub
iret
and
sub
mov
cmp
pop
std
into
xchg
nop
cmpsb
loope
jno
jbe
inc
adc
mov
lods
mov
fimuls
push
ret
call
test
sbb
lock
lock
lret
mov
out
sub
jne
enter
ret
dec
stos
adc
mov
sbb
mov
out
cmp
arpl
outsb
repnz
leave
cwtl
mov
arpl
push
out
or
rol
pushf
push
cmp
jae
data16
cwtl
addr16
mov
test
pushf
inc
dec
leave
fs
mov
pop
and
pop
push
pop
xchg
mov
daa
pop
sbbb
mov
cwtl
fmuls
test
js
iret
push
fimuls
cmp
pop
popa
sbb
push
sbb
std
mov
sub
or
push
xor
stc
clc
imul
mov
clc
movsl
mov
jmp
movsb
flds
xor
pop
leave
xchg
xor
jg
jl
leave
xchg
mov
inc
lea
adc
xor
fistl
test
xor
rorb
push
test
add
adc
lahf
nop
out
or
cmp
rclb
and
das
xor
icebp
xchg
ret
xchg
fwait
cmp
and
vpcmpeqb
mov
add
lods
icebp
xor
jne
js
je
in
cltd
jge
out
mov
lods
fiadds
ss
sbbl
aaa
mov
out
out
inc
adc
sub
mov
negb
sbb
mov
fs
fwait
adc
cmpsl
inc
les
or
jp
adcb
aaa
je
mov
sub
pop
fdivrl
outsb
movsb
loop
sub
outsl
xor
lods
jecxz
add
fs
push
adc
pop
out
sbb
out
call
rcl
adc
lret
cwtl
mov
in
insl
inc
jge
mov
fistpl
shlb
lds
adc
pop
inc
imul
jne
pop
nop
mov
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
fsubrp
mov
mov
jl
push
jg
jl
pop
xchg
mov
cmp
add
cmp
dec
call
sub
push
add
mov
aad
fcomps
enter
imul
repnz
cmc
add
das
loope
xor
push
push
xor
ret
cmp
fadds
xchg
movsl
xchg
xlat
and
stos
mov
out
jae
insb
cmp
dec
adc
sbb
cmp
xchg
add
and
jg
sbb
pop
and
insb
add
mov
into
xor
inc
pop
dec
mov
fwait
sub
lret
and
jno
push
loop
lods
mov
inc
fsubl
pop
cltd
rcl
stos
adc
mov
cmp
pushw
cmp
scas
cmc
mov
enter
lret
testl
loopne
cs
xor
add
push
lahf
add
out
mov
push
add
lock
ljmp
mov
xlat
sub
pusha
cli
add
push
sub
xchg
push
in
jnp
fwait
mov
out
call
movl
xor
addl
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
mov
addr16
xor
jg
jl
xchg
out
arpl
loopne
pusha
mov
dec
sbb
daa
mov
loope
cmp
xor
lret
stc
add
mov
cmp
push
dec
mov
add
mov
pop
sub
inc
jae
xor
lahf
bound
lcall
pop
movsl
jmp
test
and
mov
lret
leave
jge
xor
mov
aaa
bndldx
cwtl
add
aaa
scas
inc
aam
xchg
mov
adc
pop
fbld
jno
pop
cld
sbb
in
mov
or
inc
lock
sbb
push
xor
out
dec
mov
xchg
pusha
cmp
outsl
push
in
adc
xlat
mov
inc
dec
out
outsl
xbegin
push
sbb
mov
jo
shlb
dec
add
mov
or
cmp
negb
stos
mov
test
sahf
ss
mov
mov
les
ret
xchg
pop
int
imul
cmp
adc
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
xchg
xchg
bound
xor
jl
cld
jnp
push
rol
cmp
inc
ret
dec
prefetch
or
stc
inc
cmpsl
das
sbbb
movsb
lahf
in
shl
ljmp
movsl
push
adc
xor
addr16
push
pop
pushf
stos
shrl
push
adc
mov
add
add
imul
movsb
and
repz
fimuls
out
sbb
xchg
jo
jmp
out
xchg
icebp
ja
aam
mov
xor
jge
jle
or
cmp
mov
lcall
xor
or
shl
pop
aam
dec
sub
mov
adc
ss
mov
inc
sub
inc
add
jecxz
mov
repnz
mov
and
repz
divb
sbb
loop
or
xor
push
sub
xlat
int
sbb
jecxz
xor
jg
fcoms
push
cmp
ja
out
xor
add
mov
fmuls
mov
jnp
jne
test
repnz
xchg
in
sbb
mov
movsl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fucomip
es
cmpsl
getsec
jl
push
jg
jl
jl
xchg
in
mov
fistps
scas
jne
and
pop
sub
fnstcw
mov
cmp
out
cmp
insl
mov
dec
es
repz
ds
out
outsl
mov
sub
stc
sbbb
fimuls
mov
jo
imul
ja
push
stos
icebp
in
mov
jmp
incl
rorb
sub
in
mov
pop
scas
fdivr
nop
adc
ja
repz
icebp
or
sbb
sbb
jle
insl
inc
sti
mov
inc
pop
cmp
pop
gs
arpl
fldl
xchg
jg
xor
shrl
jae
push
xchg
xchg
pusha
and
pop
xchg
outsb
aas
bound
mov
mov
sti
cwtl
xor
mov
cmp
cmpsb
sti
out
push
gs
mov
inc
xchg
ljmp
mov
cltd
cwtl
fildll
mov
cltd
dec
enter
add
jge
fwait
inc
test
pop
int3
push
cmp
cli
xchg
nop
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
je
sub
ljmp
xchg
push
xor
jns
mov
cmp
in
mov
sub
add
add
add
pop
aad
pop
pop
outsl
aam
movsbw
enter
movsl
jae
sbb
jle
pushf
xchg
scas
mov
ds
test
loop
mov
adc
jnp
fisttpll
inc
in
and
jp
test
or
dec
mov
or
cmp
ret
scas
cli
and
push
gs
loop
nop
mov
test
ljmp
push
lret
aad
mov
mov
push
xor
inc
pop
jg
mov
rclb
pop
pop
jg
add
jnp
xchg
loop
mov
mov
and
scas
sbb
push
aas
sub
mov
adc
pop
dec
add
dec
mov
sahf
mov
inc
out
dec
inc
mov
or
loope
pushf
mov
lods
ss
ljmp
pop
and
adc
aad
xor
int
test
mov
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
mov
xor
jl
push
jg
jl
fcoms
lods
in
xchg
sahf
es
jo
int
mov
iret
iret
mov
add
add
outsb
sub
or
lret
mov
decl
push
sub
mov
inc
cmc
loopne
fisubrs
jge
and
push
mov
mov
or
inc
aas
ja
lret
jo
testb
aas
jl
and
pop
sbb
push
daa
enter
dec
inc
in
sub
sub
fwait
cmp
orl
or
aaa
xchg
cmp
dec
ret
daa
adc
jnp
push
xchg
xchg
orl
cmc
int3
mov
jne
push
pusha
mov
jns
fldenv
mov
inc
push
fs
iret
sbb
xor
jns
pop
ss
dec
mov
push
les
mov
in
out
inc
sbb
and
fs
jmp
mov
rcl
sti
addr16
mull
inc
out
and
pushf
xor
mov
popa
lahf
sahf
mov
push
addr16
cli
push
es
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
jl
push
jg
jl
scas
cmova
push
lods
cmp
push
push
aaa
cmp
call
test
pop
sbbb
out
xchg
in
int3
inc
jno
cmpsb
cwtl
inc
repz
call
pop
cmp
adc
fwait
hlt
sub
fwait
add
mov
dec
jo
inc
jmp
pop
mov
mov
fwait
and
les
jg
test
out
pop
pop
bound
dec
adc
sbb
inc
pushf
arpl
mov
push
loop
lods
sub
mov
fsubrp
andb
jg
jg
in
dec
fwait
xor
jno
out
jle
jnp
pop
fisubrs
xor
pop
inc
mov
xlat
popa
jle
pop
sbb
dec
push
and
xchg
sbb
mov
mov
sbb
cmp
adc
pop
lds
pop
pop
fists
mov
dec
icebp
aas
int3
mov
adc
jmp
and
cmp
mov
dec
mov
or
idivl
cmc
je
mov
arpl
sub
fcmovnu
push
movsb
fcompl
jl
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
stc
and
out
jl
mov
or
movsb
cwtl
add
stos
jns
hlt
shll
ja
int
jp
cmpsb
lret
pop
test
call
lods
xchg
mov
test
popf
aam
stc
mov
lods
cmp
cmp
ds
inc
jb
adc
mov
inc
or
cltd
sbb
hlt
xchg
das
jecxz
xchg
mov
in
roll
xchg
lahf
lds
pusha
aad
sub
test
nop
adc
sbb
test
negb
scas
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
test
in
jae
jl
mov
add
inc
cmp
and
push
jo
mov
data16
cmp
mov
call
in
ljmp
push
enter
in
jb
outsb
aam
sub
bound
inc
add
dec
in
sub
lcall
repnz
cltd
lret
jnp
mov
xchg
test
push
pop
jo
out
pop
popa
mov
xchg
int3
mov
out
push
arpl
sbbl
sahf
pop
cli
nop
clc
lods
pop
pusha
and
push
roll
daa
cmpsl
push
inc
inc
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
cmp
test
sbb
mov
inc
aaa
mov
gs
scas
shr
mov
cmpl
jp
xchg
adc
sub
in
lret
sbb
push
jae
inc
mov
sub
rorb
inc
inc
hlt
mov
add
pusha
mov
adc
lret
sahf
jg
push
xchg
adc
jle
mov
sahf
push
sahf
push
cwtl
or
fsubs
scas
repnz
inc
push
imul
pop
leave
jbe
ljmp
jno
pop
movsl
into
fcoms
mov
sub
sbb
lahf
adc
xor
cmc
adc
adc
fimuls
mov
sbb
in
daa
inc
xchg
fucom
cmc
jecxz
movsl
sbb
cmp
sub
cmp
iret
mov
lahf
jp
aad
je
pushf
fwait
or
cmp
dec
mov
and
cmpsl
mov
popa
xchg
fadds
sbb
pop
pop
adc
xchg
test
mov
pushw
cmp
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
push
test
jl
daa
jg
jl
fnstenv
lret
fistpl
pop
mov
mov
sub
push
cmp
mov
cmpsl
push
mov
inc
push
jne
stc
add
clc
mov
ficompl
jmp
ret
jmp
fs
adc
bound
popf
cmp
fisttps
aam
cmp
xchg
jl
lahf
cld
mov
pop
push
jnp
movsl
outsl
adc
lds
fmuls
shlb
sbb
inc
jbe
in
cs
dec
popf
dec
cwtl
jl
or
call
lret
ljmp
mov
push
int
mov
pop
sub
sbb
push
push
sub
pop
mov
mov
into
mov
mov
aas
or
cwtl
mov
inc
bound
bound
xchg
mov
test
sahf
shl
scas
jno
add
xchg
cmp
arpl
add
cli
mov
jmp
shr
push
int3
jns
jnp
cs
jp
jb
inc
aas
shrb
mov
jge
mov
mov
add
rol
xchg
jno
lods
shl
into
mov
mov
xchg
mov
mov
loopne
pop
or
xor
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
push
jno
jl
daa
jg
jl
adc
cli
sbb
pop
or
push
mov
or
jnp
leave
xor
mov
jecxz
xor
inc
loopne
dec
fistps
dec
cmp
push
jb
cmp
fwait
sbb
jmp
inc
xchg
hlt
xchg
add
push
xchg
or
add
fsts
dec
pop
pusha
in
adc
int
or
pop
mov
pop
jae
sbb
mov
mov
add
push
fldt
in
dec
stos
movsl
push
movsb
faddl
mov
push
lret
cmpsb
jbe
shll
popf
adc
insb
loopne
js
ds
dec
loope
sub
inc
xchg
mov
xchg
dec
movsb
stc
lcall
mov
adc
test
cmpsl
popa
push
and
mov
add
outsl
test
jnp
ja
sbb
push
push
lea
movsb
incb
test
inc
call
jnp
cmc
imul
push
mov
fdivl
outsl
in
mov
js
dec
xor
or
popa
inc
cmpsb
test
adc
or
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
aas
mov
jl
jg
jl
xchg
or
aaa
lret
or
add
push
mov
aam
fwait
shlb
push
xchg
pop
mov
pop
jg
adc
mov
push
popa
dec
jmp
push
mov
pop
push
test
mov
mov
jnp
cmc
lock
xchg
jno
jg
mov
test
push
and
or
aad
scas
dec
ss
rorb
pop
fwait
or
int
pop
jmp
rcll
pop
xlat
mov
sti
lock
xchg
out
testl
jmp
cltd
stc
fcompl
lods
repz
imul
jge
loopne
rcrb
add
daa
lods
out
push
mov
and
mov
hlt
out
fwait
add
stos
xchg
mov
test
lcall
push
inc
std
dec
rclb
mov
jbe
data16
jo
mov
mov
add
shr
mov
shlb
push
jge
leave
xchg
mov
mov
xchg
loope
stc
arpl
or
dec
cmpsl
push
xchg
xlat
fisubs
scas
xor
fbld
sub
sbb
sub
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
and
jecxz
jl
lret
jl
fistps
ret
in
push
inc
push
cltd
push
add
ror
paddusw
mov
mov
sbb
cmp
fiaddl
adc
out
data16
adc
push
arpl
inc
ljmp
jno
fdivrs
fidivs
or
test
dec
daa
ljmp
js
aad
push
outsb
adc
jnp
ja
lods
inc
mov
and
sbb
iret
fsts
xor
push
xchg
xor
fists
loopne
mov
or
sub
test
pop
sbb
rcr
push
insl
cmpsb
pop
dec
sub
xchg
mov
push
pop
fldcw
mov
adc
lret
cmpsl
icebp
data16
sbb
fwait
dec
addb
bound
dec
pusha
aam
xor
bnd
and
inc
lea
popf
lds
andl
movsb
cltd
repnz
inc
push
gs
lcall
mov
ret
jae
fiaddl
xor
call
xor
adc
pushf
orb
or
and
int
sub
jnp
cs
and
xor
add
xor
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
jg
imul
or
data16
xor
popf
stos
xlat
sbb
shlb
scas
lods
sub
adc
xor
in
and
ljmp
mov
mov
sbb
push
lahf
sub
or
xchg
xor
add
pop
aad
mov
sbb
fbld
mov
enter
pusha
jns,pt
xor
fs
jnp
sub
cld
dec
pop
dec
mov
cli
xchg
push
outsl
jo
int3
pop
popa
outsl
ret
ficompl
sub
or
adcb
in
mov
inc
outsb
rorl
push
inc
or
xchg
in
sbb
fdivrs
xchg
adc
jno
xchg
sahf
int
mov
iret
data16
pushf
mov
lret
lds
jb
cmp
inc
mov
mov
iret
xchg
or
push
jns
call
jb
out
gs
movsb
pop
pop
bound
sahf
xchg
mov
jecxz
dec
movsl
cmp
xchg
imul
jl
jge
push
enter
rclb
fstp
cmpsb
movsb
dec
xchg
ror
cmp
scas
cmpsb
fcoms
rorl
imulb
shrb
xor
sbb
or
popf
int
adc
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
mov
adc
sbb
ja
pop
movsl
js
or
inc
push
lcall
push
add
xorl
push
arpl
std
sbb
loopne
add
sbb
test
xor
testb
icebp
pop
cmpsl
adc
fs
stos
and
ret
sbb
sbb
pop
sub
les
jno
jae
inc
imul
test
cmp
pushl
add
push
xchg
pop
cmp
dec
movmskps
stos
xor
jo
jno
mov
xor
lea
add
adc
insb
mov
out
mov
jbe
stc
orl
scas
sbb
and
mov
xchg
push
inc
and
jmp
push
js
push
or
scas
mov
xor
pop
xchg
mov
inc
mov
sti
repz
mov
xchg
xor
mov
dec
cmpl
lcall
fnstsw
mov
lcall
std
inc
push
dec
push
jle,pn
xchg
add
xchg
pop
add
mov
jns
mov
dec
jecxz
and
cltd
stc
sbbl
jae
add
mov
jmp
jmp
xchg
test
loopne
bound
add
lds
jg
jl
adc
fdivp
push
and
or
or
div
shrb
add
and
je
lahf
mov
pop
xchg
sub
imulb
inc
sub
jl
jne
rcr
scas
adc
fstp
aaa
pop
stos
mov
int
jo
cmp
imul
lods
scas
jle
jp
jle
dec
adc
mov
mov
ret
movsl
das
lods
fcom
lock
cmpl
das
dec
cli
adc
inc
loop
pop
mov
stc
mov
cmpsl
or
cmp
push
adc
cmc
or
lret
js
repnz
das
xchg
lods
bound
outsb
rol
push
sbb
cld
js
iret
out
add
mov
mov
imul
mov
mov
jp
inc
xlat
mov
movsb
adc
orb
es
adc
and
mov
xor
imul
movsl
push
mov
mov
outsl
testl
fs
and
dec
fsts
sbb
pop
fcmovu
test
das
pop
pop
inc
test
jb
adcl
cs
cmp
mov
cld
lods
ljmp
in
ljmp
sub
inc
cld
jmp
aam
rolb
pop
fs
jge
fisubrs
inc
jl
les
jg
jl
push
mov
cmp
mov
clc
jno
or
inc
and
mov
flds
sbb
lods
and
je
jmp
push
sub
jns
shll
lcall
pushf
add
cli
cmc
push
into
out
sbb
sub
pop
daa
inc
shlb
adc
insl
inc
cwtl
stos
mov
xchg
mov
dec
and
mov
xlat
push
xor
and
xchg
xor
push
mov
push
xchg
and
cwtl
sub
sahf
jnp
outsb
push
pop
xchg
test
sarb
cli
sub
cmpsl
out
cli
fisubrs
mov
fisttps
dec
bswap
loop
sti
orl
shrb
adc
xlat
popf
mov
adc
decl
pop
cmp
dec
mov
ss
scas
cmpsl
mov
pop
add
hlt
push
jb
andl
sbb
rcl
fstl
movsw
mov
gs
or
scas
ss
push
mov
dec
push
scas
repz
xchg
sbb
cmp
sub
das
xor
jl
mov
ficoml
jl
es
ret
push
idivb
or
inc
sub
add
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
add
inc
add
add
inc
add
add
inc
add
add
in
jp
jp
jnp
adc
cmp
add
and
add
sbb
clc
loopne
test
mov
and
and
dec
cwtl
ljmp
jae
addl
scas
adc
ljmp
jmp
insl
xchg
scas
lods
ss
nop
ljmp
mov
xchg
mov
out
xchg
mov
fsincos
aad
xchg
inc
adc
cli
fucomp
ljmp
and
push
dec
fisttpl
jg
sub
insb
mov
mov
clc
out
ror
ja
repz
in
pop
mov
jae
and
fcomps
add
and
adc
fadd
adc
das
imul
shlb
movsb
xchg
push
push
push
cmp
cmp
mov
jno
xor
jnp
mov
cltd
inc
movsb
outsl
dec
fucomi
std
test
jmp
push
or
pop
flds
fidivs
stos
insl
ret
dec
int3
inc
outsl
and
and
inc
std
and
or
dec
push
cmp
cmp
mov
scas
sub
in
lds
imul
fdivrl
repz
jne
xchg
xchg
clc
xchg
es
cmpsb
mov
mov
int3
in
sti
adc
adc
xor
in
mov
xchg
fnstsw
push
loope
cmpsl
xor
jae
xchg
sti
dec
xchg
push
hlt
cmp
and
gs
scas
xor
xor
arpl
cmpsl
inc
outsb
or
lock
push
subl
or
inc
mov
sub
and
sbb
jg
fs
pop
xchg
pushf
xor
stc
sbb
jmp
addr16
mov
pushl
lcall
lcall
or
xor
xchg
push
adc
jns
push
push
xchg
jge
inc
das
mov
mov
pop
lret
fyl2xp1
daa
sahf
shll
stos
dec
mov
cmc
in
pop
leave
jnp
inc
jg
sbb
call
cs
mov
rcrb
iret
sahf
scas
push
xchg
clc
nop
in
mov
movb
ret
fmuls
pop
fdivl
lock
movsl
push
or
divb
push
inc
inc
dec
xchg
out
aam
xor
fs
rcrl
test
out
mov
lds
andb
pop
lods
dec
sub
fs
js
or
xor
in
pop
jl
sub
add
push
iret
mov
lcall
jge
mov
test
pop
sbb
mov
pop
cmc
cmpsb
xchg
lret
push
dec
fstpl
icebp
xor
xchg
sub
sub
xor
xor
xor
cmp
sbb
in
popf
mov
push
aam
hlt
inc
mov
repz
imul
push
je
sub
jb
aas
insb
pop
push
cltd
fwait
rclb
sub
aas
stos
mov
cli
out
shlb
in
lret
pop
xlat
pop
mov
or
dec
test
xor
adc
push
add
stos
or
rcrl
or
rcrb
lahf
fldenv
jp
jo
add
out
xor
adc
xrelease
cmp
dec
imull
or
sarb
cltd
movsl
mov
pop
pop
xlat
xchg
jmp
pusha
test
inc
lcall
xchg
sbb
fucomp
mov
inc
aas
mov
mov
xchg
sahf
inc
jg
stos
push
push
mov
scas
mov
test
mov
cmpsb
push
jle
aas
lret
test
fistpl
inc
jle
test
xor
sbb
and
add
sub
jae
cs
xor
stos
cmc
in
add
adc
xlat
push
cmp
inc
add
sbb
adc
cmp
imul
stos
shll
shlb
in
and
into
adc
inc
add
insl
inc
pop
jg
lds
inc
outsl
dec
mov
pop
or
hlt
fwait
int3
popf
daa
xchg
andb
sbb
xor
fisttpl
outsb
js
mov
aas
out
daa
outsl
mov
and
dec
mov
mov
addb
les
jbe
fildl
push
dec
loop
jle
hlt
adc
pop
jle
or
imul
movsl
aad
lcall
in
or
test
shlb
and
ret
xor
call
shll
sti
mov
popl
test
add
aam
ljmp
mov
jne
pop
cmp
pop
into
add
push
fstps
shr
pop
iret
cmc
fstp
cltd
pushf
orb
jbe
cmc
loope
cmp
jbe
cmpb
jns
push
aaa
rclb
imul
xor
push
pusha
cmpsb
cmp
cwtl
repz
inc
idivb
sbb
xchg
fdivs
inc
ret
or
push
inc
cmpsl
fxch
js
in
cmpsb
cmovge
and
xlat
and
push
or
lds
or
leave
pushf
gs
sub
mov
std
hlt
push
push
xchg
mov
cmpl
fbld
cmpsb
xchg
sub
mov
jge
adcl
jns
or
sbb
rclb
mov
xchg
add
xchg
or
sbb
xchg
out
pop
mov
jl
insb
cmp
imulb
mov
add
addr16
test
push
insb
adc
pop
sbb
pop
test
rol
or
rcll
add
sbb
sarl
and
sbb
add
fildl
icebp
test
xchg
add
pop
cmp
cmpsl
verw
inc
enter
and
jmp
mov
and
jle
addb
pop
jge
popa
dec
scas
ja
fcomps
lret
nop
push
inc
dec
imul
inc
mov
xorl
jae
xor
mov
inc
sub
xor
jg
ret
jg
inc
fcmovnb
imul
jl
jo
stos
mov
sub
add
or
xchg
popf
inc
stc
int3
sahf
loopne
pop
mov
insb
xchg
in
mov
pop
sub
outsl
mov
pop
icebp
push
mov
cmp
out
sub
fcoms
mov
cmc
or
cmc
add
fisubrl
push
jno
xor
test
rcrl
movsb
mov
mov
in
mov
cld
mov
aad
jo
in
cmpsl
cmp
add
add
add
xchg
mov
sbb
jg
jnp
call
add
mov
pop
xor
sbb
push
ss
cmp
mov
xchg
popa
sub
xor
sub
mov
les
xor
int3
push
sbb
or
push
iret
inc
imull
popf
adc
jno
add
lock
insb
jl
adc
push
xchg
fwait
shll
fdivrl
pop
and
movsb
xchg
xchg
xchg
lds
xchg
pusha
imul
pop
ficomps
iret
neg
dec
dec
fsubrp
and
lcall
hlt
pop
or
sbb
or
mov
pop
les
rcll
cmp
cltd
xor
or
clc
inc
add
stos
nop
mov
push
add
jae
inc
je
jno
pusha
push
add
icebp
mov
in
mov
rclb
and
push
sub
cmp
in
loop
and
pop
jecxz
sub
hlt
adc
lcall
sbb
push
sahf
cmp
data16
lret
fcoml
jl
jg
movsl
aas
popa
sub
xor
inc
int
xchg
ret
hlt
mov
xor
mov
jge
and
mov
fldl
jecxz
out
adc
cmp
jp
out
aaa
nopl
push
cmc
mov
push
mov
cmp
dec
cmp
lea
stos
ss
dec
xchg
inc
xchg
popl
mov
cmp
dec
lcall
lods
out
aaa
mov
sbb
repz
imul
push
xchg
bound
int3
test
repz
cmc
cmp
sub
cmpsl
ss
cmpsb
pop
sbb
pop
aad
std
add
fmuls
xchg
ljmp
jnp
ret
xor
gs
outsl
jl
out
imulb
jp
fs
sub
push
add
mov
movsl
mov
pop
dec
push
sub
loopne
xor
cli
xor
adc
adc
popl
dec
jno
fistl
test
fcmovu
adc
xor
cmp
ds
push
arpl
aas
mov
cmp
inc
addl
loopne
add
lds
in
cmpsl
xor
or
inc
scas
inc
rclb
adc
mov
push
push
test
and
imul
pushf
adc
cli
or
rcrb
push
inc
add
fdiv
outsl
sub
inc
and
xchg
int
popa
lret
sbb
dec
mov
es
int3
fwait
test
arpl
inc
loope
xchg
fbld
stos
dec
ret
shll
or
adc
mov
frstor
sub
xor
adcl
ret
cmp
cltd
sub
adc
mov
mov
sahf
mov
fidivl
or
mov
cmpsl
mov
movsl
loop
daa
imul
dec
pop
test
imul
sti
out
push
xchg
adc
adc
aad
push
fs
push
scas
adc
int3
loope
dec
mov
loopne
push
pop
cltd
mov
ret
sbb
jne
cli
call
int
push
pop
lcall
imul
pop
loop
lcall
scas
and
int
mov
dec
and
stc
es
adc
stos
xor
push
lods
out
adc
push
fimuls
stos
mov
fnstsw
inc
arpl
add
xor
sbb
int3
xchg
int3
stos
xchg
or
inc
dec
push
push
sub
fs
stos
push
pushf
or
mov
cmp
fcomps
lret
clts
sbb
mov
out
jp
sbb
sahf
ljmp
sub
mov
stos
mov
faddp
loope
or
xchg
cld
pop
add
mov
or
sub
pusha
shl
es
lcall
out
pop
xor
xadd
cmp
sbb
pop
cwtl
lock
jb
aaa
in
push
pop
loopne
in
insl
xchg
jg
shlb
mov
lcall
je
sbbb
sbb
je
jecxz
lcall
sbb
arpl
inc
enter
test
mov
dec
ds
pop
mov
imul
test
jne
pop
cmp
shrl
mov
jno
adc
ret
movsl
les
repz
mov
and
insb
shlb
arpl
pushf
sub
lds
xchg
nop
sub
mov
jnp
movsl
ret
movsb
les
imul
add
xor
adcb
xor
pop
cmp
mov
out
lret
mov
nop
call
sahf
mov
cmp
js
sub
int3
jno
xor
repnz
adc
push
xchg
add
sbb
movsl
arpl
adc
push
in
mov
jp
cltd
test
test
cmc
sbb
pop
inc
arpl
daa
pop
mov
in
mov
jno
cmpsl
push
and
xor
pop
add
fbld
dec
cmp
add
lcall
xor
jge
je
cmp
push
and
cs
inc
out
jb
push
and
mov
stos
stos
jb
sub
ret
loop
orb
mov
mov
ds
jns
fdivr
out
cmpsl
fcoms
push
adc
nop
xchg
add
hlt
pop
imul
xor
xor
inc
xlat
inc
scas
fbstp
in
decl
sbb
movsl
fisubrs
sbb
jbe
and
jo
cmpsl
bound
mov
ljmp
mov
out
popa
adc
jp
shl
cmc
rorb
fmull
dec
imull
cltd
dec
ja
mov
sbb
mov
mov
sbb
mov
mov
in
mov
sub
leave
pop
mov
add
gs
dec
mov
sub
push
lcall
pop
insl
push
pusha
and
sbb
int3
es
jae
and
pop
repnz
stc
sub
push
pop
xor
aam
insb
sahf
or
std
jp
pop
shrb
mov
adc
push
dec
andl
es
stos
dec
add
dec
daa
outsb
mov
jmp
xor
push
xchg
bound
imul
add
add
add
fs
mov
aam
mov
sbb
and
add
sbb
jmp
scas
mov
xchg
cmc
aas
sub
jo
and
stos
mov
xor
mov
jae
faddl
pop
xor
mov
inc
je
aad
mov
mov
gs
add
daa
add
popf
mov
mov
jne
ss
inc
stc
mov
mov
hlt
push
icebp
pop
lds
mov
mov
cmc
fstp
iret
xchg
jle
cmpb
mov
rcl
dec
movb
inc
insl
push
xchg
cmp
sahf
cmc
insb
or
lret
jns
imul
or
push
mov
negl
sbb
push
xor
mov
pop
incb
sbb
sbb
enter
imul
jbe
icebp
lock
sahf
test
mov
js
xchg
xlat
pop
pop
adc
out
lret
or
dec
inc
dec
daa
jae
add
mov
adc
popa
cmp
xchg
scas
sub
inc
lahf
rcll
gs
cmp
cmp
out
dec
inc
std
add
add
ret
daa
icebp
das
mov
popf
lods
icebp
push
xor
jp
scas
xor
adc
sub
and
rcl
push
ficoml
out
dec
cmp
or
pop
bound
sbb
ud2
adc
out
xchg
add
jae
jmp
fs
jne
imul
jl
fwait
xchg
ret
nop
outsb
hlt
clc
pop
icebp
test
xchg
push
pushf
mov
sub
shl
imul
mov
cmp
mov
pop
cltd
inc
sbb
sar
inc
pop
test
add
rcll
push
leave
outsl
mov
pop
xchg
mov
sbb
fstpl
push
in
adc
sub
inc
repz
xchg
imul
out
or
mov
loopne
push
inc
mov
shrb
add
mov
jmp
cmp
sub
mov
scas
into
shll
dec
jle
int3
adc
das
sub
or
lea
pop
addl
adc
rorl
lcall
mov
imul
mov
call
pop
xor
das
mov
sbb
test
adc
and
test
adc
mov
xchg
cmp
js
je
das
xor
adc
sbb
mov
cmpsb
addr16
lock
adc
inc
cmp
pop
popa
mov
outsb
fdivrl
movntps
imul
andl
mov
jg
test
xorl
dec
xchg
adc
or
pop
pop
jp
loop
mov
outsb
mov
adc
je
push
adc
cmc
mov
mov
fdivs
fwait
mov
out
push
sbb
mov
cmp
or
xchg
repz
test
pop
mov
inc
lahf
mov
orb
and
dec
inc
xchg
std
mov
daa
ret
mov
sbb
fisttpl
nop
inc
mov
or
ret
cmp
add
scas
daa
xchg
push
imull
cmp
movsl
cli
inc
arpl
mov
clc
xor
loop
rolb
movaps
aas
insl
lea
in
arpl
xchg
shlb
data16
test
jle
test
mov
xor
push
scas
sub
lret
call
and
insb
or
sub
pusha
incl
ss
imul
xchg
mov
scas
ss
and
test
and
xabort
leave
stc
dec
mov
scas
lcall
pop
cs
loop
pop
sarl
xor
imull
jae
sub
call
add
repnz
scas
sub
cwtl
pop
imul
sub
repnz
or
mov
leave
cltd
movsb
jne
popf
gs
sbbb
mov
push
je
cmp
add
lods
bnd
mov
test
push
hlt
or
outsl
jecxz
xor
subl
jnp
jnp
ds
push
repz
pop
jnp
or
sbb
or
mov
mov
or
sbb
in
movsl
xor
adc
mov
lods
xlat
nop
popa
data16
test
and
push
mov
icebp
rcr
xchg
pop
jno
addr16
in
dec
sbb
dec
mov
test
jno
xchg
call
insl
inc
jmp
pop
xor
jbe
pop
stc
push
mov
adc
in
mov
cmp
out
xor
dec
movsb
imul
fsubrl
jg
or
xor
cmpsl
mov
fisttps
jns
lock
pop
sbb
fwait
push
add
cmpsb
xor
xchg
pop
xchg
mov
cmovge
pop
aam
mov
push
pop
shll
sbb
xchg
test
mov
pop
mov
mov
les
imul
insb
or
rorl
je
in
adc
stos
sub
out
outsb
into
sub
push
or
jb,pn
loopne
add
push
fmull
or
inc
mov
add
rorl
aaa
aas
mov
cwtl
mov
dec
mov
cmp
mov
test
int
out
jg
jmp
in
xlat
enter
mov
loope
jno
jo
test
je
js
jecxz
and
mov
sbb
xor
pop
lock
mov
jbe
push
mov
sub
pop
cs
xchg
mov
sbb
jo
add
loop
in
add
std
mov
xor
add
add
aad
stc
stos
test
icebp
mov
add
lret
fmull
dec
adc
decb
pop
mov
jl
mov
imulb
cld
mov
mov
ret
dec
and
std
es
add
iret
fldl
aam
enter
jae
add
mov
push
adc
pop
aas
sub
adc
rol
lcall
js
or
nopl
loop
in
rorb
mov
sbb
repz
negl
loope
xchg
fcoml
add
fsubrl
jb
enter
scas
bound
and
or
add
out
adc
inc
cli
sarl
xchg
add
out
push
inc
sbb
push
cmpsl
cmp
mov
xchg
sbb
mov
xchg
mov
mov
in
clc
sbb
imul
cmc
fcmovnu
pop
sub
sahf
call
ds
imul
ss
or
pop
in
testl
cwtl
ds
add
and
add
jo
mov
mov
in
test
dec
ds
sbb
addr16
mov
push
xlat
pop
sub
insl
outsl
and
mov
push
mov
mov
push
and
dec
ret
fiadds
fcomps
jnp
outsl
mov
popf
aas
and
pushf
pop
lahf
push
mov
ljmp
jae
xchg
ja
popf
mov
fisttps
imul
int3
pop
call
aas
mov
imul
std
in
int
cs
jge
push
mov
cmpsl
aad
add
xlat
sti
xchg
stos
sub
add
daa
jmp
xchg
imul
mov
jbe
cmp
flds
push
daa
push
scas
int
xchg
nop
sub
cmpsl
inc
iret
nop
cmp
ss
les
add
xchg
push
cmp
cmp
dec
pop
orl
out
shlb
inc
adc
add
shr
push
dec
daa
fadd
inc
fcoml
icebp
cmp
xchg
lods
inc
out
pop
inc
inc
aam
mov
and
cmp
fwait
and
sti
cmp
idivl
lret
inc
imul
ja
imul
lods
push
pop
xchg
jnp
stc
addl
cs
jb
aad
cs
mov
adc
ljmp
aad
and
rcr
cltd
loope
test
dec
leave
add
cmc
ljmp
dec
dec
xor
fs
inc
xchg
mov
jns
jbe
and
mov
or
cmpsl
ljmp
mov
push
hlt
aas
push
ljmp
fwait
cltd
ja
in
incb
je
lods
in
adc
call
imul
dec
xor
jno
inc
push
mov
frstor
outsl
mov
fcoms
pop
shll
dec
add
jmp
xor
inc
jmp
xor
mov
cmpsb
lods
push
scas
stos
jbe
loope
or
jne
jge
or
mov
lea
mov
pop
fisttpl
jg
or
stc
mov
xchg
mov
xor
lret
inc
xchg
jl
mov
add
cmp
jns
jbe
pop
mov
cld
les
out
nop
pushf
mov
inc
jmpw
xchg
fstl
aas
sbb
push
sbb
lcall
bound
xchg
dec
pop
inc
add
sub
aad
cmpl
push
loope
out
and
xor
push
pop
fwait
xchg
fwait
popl
adc
add
inc
movzwl
js
test
mov
das
sti
int
sbb
ja
iret
dec
sbb
fdiv
orb
cmp
mov
mov
inc
cli
test
dec
add
inc
mov
or
or
or
sub
dec
dec
sbb
cli
mov
movsb
xchg
or
lahf
fisubl
loopne
cmp
push
scas
or
fldenv
mov
int3
push
movl
jmp
fisubrs
lcall
addr16
pusha
cmpsb
dec
adc
jns
sub
mov
push
and
imulb
sarb
xchg
xchg
mov
cmp
aas
lret
mov
imul
loop
sub
test
movsb
xchg
imul
or
sub
add
imul
dec
push
icebp
adc
adc
in
in
movsb
cltd
loope
push
ret
jae
and
stc
mov
push
int3
pop
push
les
push
jno
or
insb
push
or
out
enter
js
outsb
punpcklbw
int
pushf
dec
cwtl
add
inc
jb
outsl
adc
jns
jo
movsl
jmp
xchg
cmp
nop
aas
mov
push
and
adc
movsl
outsl
mov
sub
lods
lahf
xchg
or
xor
scas
sub
mov
idivl
cmp
jae
roll
scas
test
push
or
fiaddl
add
xor
jae
pop
insb
cmp
cli
ja
add
pop
scas
scas
lcall
dec
dec
aas
ja
and
lcall
pop
test
push
scas
hlt
pop
pop
lret
jmp
mov
push
int
mov
in
xchg
stc
mov
lods
mov
iret
mov
out
sbb
ljmp
pushf
cs
inc
aas
enter
and
addb
je
fmuls
mov
pop
ror
std
movsb
jbe
inc
fs
lds
sbb
cmp
shrl
xchg
sbb
inc
ret
loopne
mov
jne
or
in
jb
adc
mov
push
icebp
sub
mov
stos
push
pop
jns
out
js
xchg
push
movsl
xor
lods
cli
lods
or
pusha
aad
xor
popf
inc
dec
pop
addb
xchg
stos
testl
loope
fiaddl
jns
lods
jnp
cmp
sub
add
fisubs
iret
dec
scas
push
inc
jbe
push
pop
pop
outsl
fildll
leave
push
out
aaa
pop
jecxz
mov
adc
jnp
xlat
and
xchg
xchg
sbb
ss
pop
enter
mov
mov
add
push
pop
mov
mov
mov
shrl
dec
call
mov
mov
mov
or
test
dec
test
xor
xchg
mov
mov
aad
test
or
int3
or
fcoms
sbb
nop
cmp
mov
mov
pop
pop
jg
fs
out
and
jbe
testb
xor
xor
inc
jb
lds
sbb
mov
incb
lahf
adc
dec
mov
lea
jnp
mov
push
cmp
push
pop
popf
in
bound
js
cmp
dec
rol
or
repnz
adc
dec
outsl
cmp
loope
and
negl
int3
jo
lods
cmc
scas
dec
pcmpeqd
fsubs
dec
xchg
shlb
ret
mov
inc
push
mov
enter
dec
mov
cmp
add
inc
aas
cmp
dec
lret
xor
jle
lcall
mov
fidivl
mov
rcl
clc
mov
or
cmp
pop
and
mov
aaa
or
jp
pop
scas
or
cld
dec
xchg
arpl
daa
int3
ficoml
mov
or
lea
jnp
add
add
add
adc
jnp
int
ficoms
icebp
stos
or
add
and
add
mov
call
outsl
test
es
lods
jecxz
das
loopne
push
lahf
loop
aas
arpl
imul
cmpsl
inc
in
in
jecxz
scas
push
pop
xchg
sub
outsb
jns
jb
sbb
dec
push
lea
xchg
int3
pop
push
jg
jg
cmp
ja
lods
cmp
or
jg
fadds
adc
rcll
ja
enter
dec
fadd
fistpll
mov
lret
mov
in
push
sahf
lds
jnp
test
xchg
pop
or
push
push
lock
out
xchg
pop
mov
or
pop
and
ret
pop
push
test
cmc
fdivrs
cmp
push
push
fnstenv
xchg
xlat
testb
mov
testl
xchg
sbb
jns
push
out
fbld
sete
jbe
pop
sub
jae
insl
cmpsb
and
xchg
outsb
lods
xchg
push
xchg
jp
mov
push
xchg
mov
sub
push
mov
inc
mov
push
nop
es
icebp
test
popa
and
iret
adc
xchg
xchg
je
daa
jne
movsl
or
out
ja
mov
pushf
mov
daa
jecxz
inc
jne
fstps
add
push
gs
add
movsb
pop
dec
push
addl
inc
je
fs
hlt
fsub
push
testb
sti
aas
inc
jbe
loop
cmp
inc
push
sub
xchg
addr16
cmp
mov
mov
cmp
sbbl
popf
popf
jne
rcl
in
push
adc
fwait
cmp
lea
push
push
ja,pn
icebp
aam
arpl
out
dec
stos
insb
pop
push
jle
jb
lret
and
xchg
rcrl
jns
js
or
cmovge
pop
push
add
push
out
xchg
scas
dec
dec
add
add
bound
shll
push
in
jg
imul
jl
popa
push
popa
sbb
adc
stc
enter
push
push
insb
cwtl
or
sarl
rorb
or
cmp
jmp
jbe
jl
les
cli
jge
cmp
adcb
ret
xor
cmp
mov
jns
daa
clc
movsb
sbb
sahf
fdivr
pop
popa
int3
out
inc
fcmovnbe
mov
ret
arpl
cmp
dec
cmpsl
dec
sub
adc
lret
movsb
dec
test
inc
int3
es
dec
push
push
and
sub
aaa
repz
cwtl
xor
jp
dec
out
lods
inc
and
sbb
or
sub
dec
xchg
mov
bound
fstl
pop
and
mov
xchg
fldl
mov
xlat
test
std
jae
xor
jnp
mov
mov
jge
add
push
mov
ret
rorb
jns
sub
daa
js
pop
addb
push
inc
xchg
sbb
xor
xchg
je
sbb
jl
in
clc
lret
fistl
push
pop
jo
gs
push
mov
cwtl
jg
sti
sub
jbe
mov
add
xchg
cld
jne
je
test
inc
jns
enter
inc
ljmp
insl
mov
push
and
stos
imul
fdivs
inc
xor
repnz
mov
lea
fwait
or
jecxz
rolb
jae
pop
mov
cmp
dec
and
add
cmp
and
cmp
adc
int3
and
or
sti
xchg
xchg
push
xlat
add
jl
add
xor
daa
loopne
test
sti
inc
imul
inc
lods
push
stos
daa
gs
mov
xor
add
into
push
sub
repz
xor
lcall
add
cmpsl
cmp
fcoml
aas
cmp
stos
adcb
shll
insl
repz
inc
in
mov
fs
push
mov
inc
pop
les
add
sbb
xchg
shll
jae
cwtl
add
mov
into
xchg
lods
cmp
mov
int3
dec
stos
scas
in
and
jbe
inc
fidivrs
inc
jno
sbb
outsb
call
clc
cmp
xchg
adc
in
pusha
lcall
int3
dec
mov
test
dec
fstpl
mov
dec
bswap
add
pop
ret
out
mov
dec
sub
jge
or
mov
cmp
adc
sbbl
dec
inc
lods
adc
fdivl
stc
sub
jno
sbb
pop
idivb
mov
mulb
jmp
mov
push
in
testb
adc
add
add
testb
adc
or
sub
mov
arpl
inc
dec
addr16
cmp
call
loope
pushl
mov
xor
dec
adc
jae
sub
and
push
mov
push
inc
xor
pushf
mov
or
xchg
pop
sarl
xchg
cmp
jb
dec
in
sub
aad
and
mov
cltd
imul
and
jbe
data16
push
add
imul
mov
clc
cmp
arpl
bound
push
sbb
cmp
movsl
mov
jg
push
call
inc
add
mov
inc
push
jns
jb
in
dec
push
add
sbb
jno
cmp
or
mov
aam
sbb
push
xchg
sarb
mov
dec
pop
mov
push
imul
fwait
stos
fcomp
bound
outsl
je
repnz
mov
mov
push
xchg
popa
addb
add
inc
pop
stos
aad
dec
mov
adc
mov
inc
mov
fbld
and
push
or
imul
insl
in
aas
aam
in
add
xchg
cmpsb
in
jne,pt
lret
stc
lret
cmp
test
imul
mov
int3
int3
sub
push
jg
je
jbe
popa
or
and
jo
dec
mov
leave
aad
xchg
inc
and
das
popa
cmp
test
mov
jmp
jno
cmp
dec
jns
and
jae
sbb
adc
add
stc
cmp
std
adcb
push
jns
xor
mov
repz
jge
cmp
popf
sub
stc
pop
jl
insl
addb
cmp
fdivs
or
dec
ret
jo
mov
mov
jle
jmp
popf
out
in
add
add
add
outsl
movsb
daa
jbe
idivl
mov
push
cmp
sub
add
hlt
mov
jb
mov
mov
bound
lret
cltd
mov
mov
push
shrb
out
rolb
dec
xchg
mov
mov
scas
test
cltd
cmp
stc
loope
leave
aas
cmp
push
cltd
aam
xor
push
push
cmp
pop
sub
pop
sub
ss
xor
aam
sub
adc
sahf
sbb
rcrl
outsb
or
je
pusha
add
rcl
cltd
push
mov
or
enter
xchg
adc
pop
jae
in
mov
or
mov
sub
out
inc
out
psrlq
adc
subb
xchg
je
div
je
fs
leave
add
xchg
dec
jp
fisttpl
add
pop
sahf
mov
enter
adc
pop
loope
xchg
fistl
and
xchg
mov
add
dec
or
cld
pop
les
pop
xchg
lds
dec
sahf
jg
insb
popf
adc
fstps
std
push
push
mov
and
lock
and
das
out
xchg
lret
sub
fisubl
andb
mov
gs
inc
push
jne
test
and
xor
and
xchg
scas
out
shrb
xlat
aam
xor
xchg
imull
dec
popa
lods
call
incb
dec
loop
cmpsb
mov
out
shll
mov
stos
mov
inc
inc
cld
add
xor
test
mov
inc
test
push
rolb
sbb
mov
jo
clc
or
popa
dec
fimuls
sub
sbb
imul
or
inc
mov
ds
jb
cmpsl
push
fstl
out
mov
outsl
stos
clc
xor
push
aaa
and
push
pop
jnp
jnp
hlt
imul
ds
mov
dec
sti
push
jge
mov
cmovae
aaa
push
dec
scas
and
fidivl
int3
cmpsb
sub
mov
add
dec
push
mov
cmp
pushf
mul
andb
arpl
aad
mov
jb,pn
add
ret
add
push
xchg
cmp
out
inc
js
fs
out
adc
nop
mov
sbb
push
je
sbb
inc
nop
inc
jbe
mov
xchg
icebp
pop
pop
clc
add
shlb
fs
cmp
lahf
and
das
xor
and
add
jp
pop
push
inc
test
imul
mov
pusha
jbe
addl
inc
mov
mov
test
pop
mov
icebp
cld
stos
lahf
cmpsl
shlb
subl
xor
imul
daa
mov
xor
add
and
or
das
mov
into
les
fdivl
repz
imul
jmp
lods
xor
dec
jmp
xchg
pop
dec
fiadds
pop
mov
inc
mov
out
pop
pushf
sub
movsl
rcrl
clc
loop
pop
outsb
push
pop
lea
xchg
pmulhuw
sub
ror
mov
fxch
cmpsl
pushf
and
cmp
adcl
sbb
cmp
sbb
bound
nop
push
jg
pop
adc
dec
insb
in
xor
iret
stos
mov
pop
fldenv
lds
ss
dec
lds
pop
cli
out
lods
sbb
sbb
mov
movsb
sbb
or
add
fisubs
icebp
add
jnp
mov
dec
mov
imull
cmpb
jecxz
add
es
das
push
adc
mov
or
cmp
pop
sbbb
fwait
adc
jo
mov
lcall
std
sti
mov
add
sbb
fcom
or
aad
and
push
sbb
push
mov
das
into
inc
jmp
test
xchg
and
dec
jno
jnp
or
out
mov
cs
pop
cmpsl
aad
mov
and
push
pop
loopne
mov
jbe
dec
cmc
sbb
xor
pop
cmp
mov
pop
roll
mov
mov
jp
leave
mov
sbb
enter
das
mov
les
lds
adc
xchg
sbb
sub
sub
dec
les
ret
cmpsb
daa
inc
sub
push
jl
inc
pop
and
out
icebp
jle
jp
out
in
push
addr16
mov
adc
js
sbb
inc
mov
lret
xor
cmpsb
stos
cmp
inc
rcll
fsub
xchg
repz
xchg
jns
mov
mov
cmp
jle
sarl
inc
cwtl
jnp
sub
push
ret
rcr
jecxz
mov
std
jno
pop
cmp
movsb
clc
fwait
mov
pop
test
pop
lea
xlat
loop
ds
les
pop
push
mov
popa
and
jg
sub
into
sahf
rol
stos
addr16
test
out
aam
sbb
mov
jno
lcall
sahf
sub
jnp
xlat
scas
cmp
stos
ror
push
jge
les
push
push
pop
clc
std
sub
mov
jns
pushf
orb
test
filds
xchg
jnp
mov
fdiv
xchg
mov
imul
lock
xor
fnsave
pop
insl
push
pop
loopne
push
imul
inc
daa
das
bound
jnp
fildl
or
stc
pushf
scas
clc
mov
jp
movsl
mov
mov
shll
add
cmp
shr
out
in
enter
loopne
xchg
lcall
pop
pop
bound
xchg
xor
push
loope
movsb
out
or
shl
ffree
add
subl
mov
daa
xchg
popa
pushf
ret
shll
push
push
js
jns
sub
test
push
cltd
fcmovnb
and
adc
ret
in
int3
fsub
sub
inc
sbb
sbb
xchg
sbb
scas
pop
scas
dec
leave
sahf
cmp
leave
sti
sbb
mov
and
and
jecxz
ret
adc
popa
orb
pop
sub
mov
jle
sub
sbb
pop
fmulp
lock
dec
jbe
aaa
negb
mov
std
push
dec
mov
pop
das
loope
mov
xchg
xor
jp
les
aaa
aam
ret
rcrl
adc
mov
jns
sub
fisubrs
repz
ss
pushl
ss
push
push
subl
pop
sub
push
cmp
pop
inc
cmp
out
lock
enter
adc
cli
add
add
add
jnp
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
add
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
xlat
lea
rclb
add
and
add
push
lea
inc
add
fistpll
imull
xchg
pop
jge
inc
popf
fcomp
in
sti
fidivrs
inc
jle
rolb
shr
cmpsl
sub
stc
dec
cmp
jb
popa
fisubl
add
icebp
add
gs
imulb
movsl
pop
nop
ss
test
rol
or
orb
aad
mov
lahf
sahf
cwtl
cs
aad
jne
ljmp
pop
ss
xor
push
push
ljmp
dec
out
out
cmc
pop
push
idiv
inc
iret
fisttpll
call
xor
rclb
xchg
mov
dec
jnp
dec
cmpl
ret
cmp
dec
add
fcmovnbe
inc
jge
mov
dec
call
sub
cmpsl
daa
cmc
mov
daa
in
push
in
test
or
insl
pop
mov
ljmp
add
push
push
xlat
iret
fsubrs
addl
jns
sbb
loope
insl
mov
xlat
test
aam
adc
pop
ret
jbe
mov
lahf
in
lods
sbb
rolb
push
es
mov
inc
xor
das
stc
sub
clc
jmp
sub
cmp
sbb
sbbl
sub
adc
negb
clc
lahf
xchg
adc
pop
test
dec
fwait
xchg
add
mov
cmp
jno
mov
mov
fisubs
xor
in
sub
jbe
out
repz
outsb
push
push
rcrl
ja
aaa
stos
lcall
pop
xlat
sti
push
inc
or
js
out
dec
mov
inc
pop
movsl
roll
inc
popl
insb
leave
mov
fwait
jl
aam
test
mov
pop
and
std
lcall
sbb
mov
mov
repnz
push
mov
jnp
pop
mov
icebp
fists
sbb
and
cmp
xor
mov
or
test
sbb
dec
mov
mov
jmp
mull
inc
jp
popa
sub
mov
dec
mov
adc
adc
sub
ja
pop
in
pop
daa
pop
repz
push
xchg
pop
test
push
mov
orl
aad
xor
daa
loopne
adc
sub
adc
cmpsl
ret
sarb
out
mov
mov
cmp
mov
mov
xchg
imul
ds
fucomi
or
lret
fsubrl
and
inc
ljmp
aaa
addr16
dec
xchg
add
out
cwtl
repnz
lea
sub
mov
push
xor
mov
loope
xchg
pop
push
loopne
test
and
pop
mov
in
pop
outsl
out
xchg
cwtl
dec
fnstsw
cmp
add
sbb
xor
lods
lods
mov
adc
andl
mov
mov
cmc
push
cmp
inc
sub
sbb
int3
mov
or
inc
xor
mov
jle
add
ret
cmc
add
cmpsl
mov
jle
add
mov
bound
arpl
fwait
test
ds
repnz
ret
push
btcl
loope
jp
jmp
jo
push
fwait
mov
sbb
inc
pusha
push
sub
ds
into
push
pop
sub
aas
shrl
xchg
mov
mov
outsw
cwtl
mov
and
imul
les
jg
jae
popf
stos
aad
mov
push
sbb
cwtl
push
mov
test
sub
push
adc
ffree
cld
add
inc
fs
or
fmull
adc
aaa
mov
js
inc
sbb
mov
cwtl
push
stos
cli
pusha
std
seto
icebp
sub
cmp
mov
adc
push
jmp
rcl
jnp
mov
push
in
xorb
ja
lret
jle
fstp
and
inc
xchg
push
pop
jb
out
or
outsl
add
push
push
inc
pop
add
data16
sub
or
pusha
dec
mov
mov
pop
sbb
push
or
decl
inc
ret
push
cmp
lds
jns
jge
inc
adc
jle
in
sub
cmp
inc
sbb
jb
fsts
stos
sti
fwait
or
and
sbb
cmc
mov
popa
add
scas
sti
mov
adc
rorb
jl
lahf
inc
mov
frstor
push
lahf
jne
mov
add
add
adc
jecxz
mov
add
and
cltd
stc
xchg
xchg
sub
out
xchg
mov
imul
or
pusha
push
bound
and
mov
adc
dec
scas
repz
sub
fsts
test
mov
or
jae
push
cmp
fwait
jne
or
aad
mov
jg
sar
inc
mov
hlt
jmp
pushf
movsb
sub
pop
or
jae
sub
lea
loopne
mov
fs
and
lahf
push
mov
dec
jno
xchg
dec
lods
mov
add
jnp
push
mov
and
adc
clc
push
stos
aas
cltd
aad
and
pushf
adc
cmp
inc
adc
aas
inc
xor
test
movsb
inc
xchg
aam
add
mov
sub
sbb
adc
in
xchg
pop
mov
fs
adc
pusha
scas
jmp
stos
ja
push
mov
daa
xchg
popl
movsl
mov
xchg
testb
pushf
xchg
and
jl
stos
loopne
jo
orl
sub
push
or
pop
rolb
xchg
or
xchg
pop
dec
shrl
add
push
rorb
dec
xchg
push
lea
xor
in
sti
push
push
push
orl
insb
and
jg
sbb
xor
loop
mov
aam
jmp
jecxz
jp
mov
aaa
mov
wbinvd
fld
mov
inc
jp
leave
or
xchg
call
push
in
fdivr
adc
mov
dec
jecxz
push
pop
ret
lahf
mov
xor
inc
mov
cmpsb
neg
stos
lea
aam
repnz
loop
cmp
dec
mov
into
pop
lret
int
adc
jmp
mov
movl
fidivl
je
pop
or
push
test
add
add
add
jg
stos
mov
pop
out
outsl
adc
add
pop
add
push
xchg
xor
push
iret
dec
sbb
and
test
xchg
lret
addr16
cmp
or
mov
and
int
rcll
lahf
sub
clc
fs
add
xchg
cli
sub
inc
mov
cli
movl
inc
dec
and
xchg
push
lds
push
pop
jg
hlt
aam
and
popl
aas
insl
sbb
lret
push
fnstcw
mov
test
dec
mov
push
inc
mov
ljmp
cmp
add
xchg
pop
ret
aad
cmpsb
cmp
cmp
popa
shrb
idiv
fimuls
jl
outsl
sbb
cmpsl
aas
jl
mov
push
not
mov
adc
andb
push
hlt
cwtl
out
mov
movsl
bound
pop
pop
and
xchg
pop
sbb
fiadds
xchg
xchg
cmp
dec
add
adc
out
daa
rcrl
mov
pop
dec
jne
xchg
pop
or
mov
ja,pn
or
mov
movsl
and
adc
dec
ficoms
xchg
test
loope
pop
jns
cmc
mov
out
inc
lds
mov
xchg
shrl
shll
jb
push
stc
sub
push
and
or
out
stos
lcall
inc
mov
sub
icebp
xchg
cmp
mov
int
aas
subb
ret
test
push
jno
shl
jns
jnp
outsb
out
mov
das
or
xchg
pusha
lahf
mov
dec
fwait
cmp
push
push
aaa
movsb
fs
push
push
outsl
cwtl
fwait
inc
scas
fwait
lock
iret
mov
notl
add
sub
rolb
imul
sbb
jg
rcrb
gs
aas
mov
lds
sub
cs
out
push
out
jnp
les
adc
jg
mov
and
movsb
je
fldenv
inc
xchg
imul
loopne
cmp
xchg
imul
pop
loop
scas
je
or
leave
push
into
cltd
mov
sub
and
shlb
in
aam
mov
stos
xor
mov
jle
outsl
js
outsb
add
xor
ret
in
cmpsb
add
pop
jge
sbb
pop
and
sbb
jl
pop
outsb
pop
push
jge
dec
lcall
pop
andl
pop
fs
das
xchg
inc
or
lret
cmpsb
inc
mov
push
sub
nop
cltd
stos
test
mov
mov
mov
mul
int3
cmp
movsl
jmp
lcall
lahf
push
jl
sub
mov
cmpsl
sbb
cmp
pusha
xor
mov
mov
cmp
sbb
mov
imull
jp
mov
out
stos
aam
std
xchg
je
mov
lret
incl
mov
dec
inc
inc
mov
sbb
push
inc
cmp
icebp
mov
push
pusha
and
adc
and
stos
in
mov
jg
ret
insb
rcr
jecxz
mov
clc
cltd
sub
push
fdiv
sub
mov
pop
lret
fldenv
push
inc
inc
stc
mov
pop
mov
out
mov
movsb
xor
cwtl
shrl
xor
insb
push
daa
inc
idiv
pop
cmc
jl
clc
hlt
aaa
xchg
out
mov
adc
or
idivl
mov
or
int
mov
add
cmp
hlt
arpl
mov
stos
lahf
sub
and
pop
movsl
pop
mov
mov
lahf
jne
add
push
scas
cmp
mov
fldcw
clc
movl
xchg
fs
jne
adc
jns
inc
and
adcl
sahf
insb
out
testl
adcb
cmp
incb
stos
fwait
pushf
sbb
movsl
mulb
fcmovnu
imul
scas
add
ret
cmpsb
mov
aam
xor
pop
lahf
and
into
adc
ret
lods
or
inc
jae
pop
rorb
lret
and
iret
pop
dec
mov
or
ret
lock
stos
inc
dec
push
push
mov
pop
sub
add
int
add
push
mov
mov
ljmp
and
fnsave
fcoms
sub
pop
cmp
test
lock
push
clc
lods
xchg
push
lret
adc
loopne
popl
pop
fiaddl
adc
adc
pushf
lea
das
or
mov
xchg
nop
mov
cli
mov
fnsave
out
fwait
jg
xlat
fs
and
fcoml
jbe
inc
inc
mov
testl
fstpt
test
leave
push
xor
mov
cld
int
stos
imul
and
ret
jo
sub
outsb
dec
cmc
les
adc
fcomp
ss
mov
xlat
dec
sbb
add
das
cwtl
adc
cltd
sbb
es
test
or
aam
iret
lcall
xor
test
std
adc
xchg
push
and
xor
jl
dec
stos
fwait
repz
xchg
mov
clc
not
and
jns
and
sti
sub
arpl
lock
arpl
int
popa
pop
jb
inc
stc
dec
andl
xchg
cld
pop
or
dec
dec
cmp
sarl
cmp
ja
jmp
into
jle
repz
ret
lcall
out
and
mov
mov
jmp
jno
iret
and
inc
push
lahf
inc
jmp
push
pop
maxps
or
dec
scas
out
insl
mov
inc
sti
add
cmpb
xchg
jge
movsb
int
add
ret
addr16
mov
call
mov
aam
fxch
lods
sbb
pop
and
push
xchg
mov
inc
xlat
fisttpll
out
mov
xor
int
pop
das
out
std
cld
ficompl
scas
loope
push
imul
dec
sbb
out
inc
jns
mov
fiaddl
fldl
out
jae
xlat
incl
inc
dec
leave
cld
push
and
ds
inc
jae
xchg
cmc
daa
push
jne
mov
cmp
icebp
nop
adc
fldenv
add
js
mov
xor
sub
sbb
inc
das
mov
out
and
imul
jbe
sbb
jle
and
lds
add
aad
jecxz
xchg
lcall
xchg
cmpsl
cmp
sbb
inc
stos
loope
sbb
add
sbb
out
cmp
repnz
mov
aam
sbb
add
pop
add
add
push
in
cmpsb
dec
lcall
insb
mov
idivl
push
leave
and
lahf
adc
cs
adc
icebp
call
jns
dec
popa
dec
lahf
mov
mov
addr16
mov
out
cltd
mov
mov
mov
pushf
push
mov
or
xor
cmp
push
inc
xchg
inc
or
aam
xchg
cs
pop
mov
out
enter
xor
xorb
stos
int3
pop
mov
jnp
gs
lret
pop
pusha
or
movsb
ret
sbb
data16
fs
stos
inc
adc
call
dec
lea
xor
sub
mov
decb
push
xchg
adcl
into
outsl
ret
mov
pop
dec
dec
lahf
cmpsl
and
repnz
inc
pushl
fwait
enter
or
call
out
or
and
xor
or
aam
in
dec
jmp
int
or
adc
inc
int
add
mov
pop
add
std
add
pushf
push
in
push
pop
cmp
sub
dec
cs
sahf
sbb
mov
ficoms
and
fstpt
lahf
pop
lcall
push
dec
push
push
sbb
inc
adc
jb
subb
dec
movl
xor
les
push
mov
ljmp
lcall
into
pop
test
mov
subb
jns
jmp
mull
iret
loop
leave
clc
inc
adc
jne
test
insl
out
pop
fdivs
into
lds
inc
pop
jno
mov
and
inc
add
faddp
and
or
mov
sub
dec
test
loope
mov
outsb
mov
cmp
lods
mov
mov
sub
mov
pop
inc
push
mov
pop
xchg
and
push
pop
pop
cmp
add
aas
xchg
lret
mov
jbe
out
ss
and
dec
sti
jp
inc
imul
ret
subl
stos
paddsb
sub
rclb
outsb
call
pushf
fbld
pop
mov
test
movsb
gs
int
into
mov
dec
pop
mov
notl
stos
dec
bound
bound
fstps
mov
lret
scas
dec
mov
xchg
shll
out
int3
adc
outsl
lea
pop
sub
mov
aad
dec
mov
cmc
push
rclb
pop
iret
or
pop
jp
mov
push
push
popa
mov
mov
pushf
xchg
push
mov
xchg
jns
jmp
stos
shl
out
dec
in
movsb
fstpt
sub
sub
cld
out
push
mov
sarl
sti
xor
pop
lcall
add
jnp
xor
xor
lock
and
lods
inc
outsb
inc
xchg
and
sbb
outsl
mov
test
out
jge
fcomi
adc
jp
sarl
jmp
xor
ret
mov
inc
xor
mov
leave
push
xor
clc
nop
sub
lds
cli
sbb
imull
add
enter
outsl
mov
add
ret
sbb
cltd
jp
bound
bnd
add
or
cmp
in
lods
clc
daa
ror
jns
std
xor
sahf
inc
dec
sub
cmpl
xorl
ja
and
jno
enter
shll
icebp
andb
in
cld
sbb
sbb
push
repz
jne
lds
fistpll
mov
or
dec
sbb
inc
or
loopne
push
clc
xchg
cmp
movsb
cmc
add
in
mov
ljmp
jno
and
enter
push
xor
and
fldt
repnz
call
mov
push
dec
jmp
loope
ret
mov
or
lcall
call
mov
and
pop
and
mov
aad
push
cli
mov
stc
insb
inc
jne
aad
push
sub
cmpb
sbb
lret
clc
sahf
mov
dec
mov
dec
jae
and
jno
dec
or
addr16
icebp
add
jg
inc
and
into
xor
lcall
das
pop
add
das
jp
sbb
sbb
and
sbb
mov
scas
push
aas
push
fldl
shrl
push
xchg
cmp
out
test
test
cld
sbb
jae
mov
or
cmp
sub
inc
sub
jbe
mov
lcall
add
ds
xchg
pushf
inc
adc
push
pop
fnstcw
xchg
es
fstps
mov
lret
mov
mov
pusha
loop
shll
or
nop
nop
pop
push
aas
xor
in
and
std
lret
mov
pop
lahf
jbe
repz
ret
movsb
mul
dec
cmp
scas
jmp
es
sahf
cmp
push
jb
jge
push
jae
stc
sbb
xchg
aam
or
js
push
lret
pusha
inc
pop
or
xchg
xchg
cmpsl
popf
push
lret
cwtl
xor
nop
jb
and
outsl
inc
mov
fcoms
pop
rcr
dec
imul
test
add
test
xchg
fs
daa
cltd
mov
jae
ret
leave
sub
sbb
cmp
cs
call
clc
jns
hlt
or
cmp
jp
int3
mov
popf
fisubs
dec
push
faddl
jo
dec
gs
outsb
or
adc
adc
fwait
push
int3
in
push
or
clc
out
push
jo
clc
fs
shlb
addb
mov
xor
sahf
xchg
or
xor
adc
stos
mov
loop
cmpsb
fwait
adc
add
cmp
das
xor
inc
mov
clc
ret
dec
push
ret
cwtl
pop
jo
jae,pn
arpl
push
xor
mov
jmp
dec
aam
jle,pt
call
js
jae
pop
jle
addb
ret
repnz
ds
adc
push
mov
hlt
pop
in
rorb
mov
dec
pop
mov
mov
inc
shr
mov
imul
fimuls
lret
into
adc
sub
std
pushf
subb
jmp
inc
xor
xor
sbb
stc
push
adc
sbb
mov
int
loop
lret
in
mov
dec
and
sti
icebp
mov
dec
pop
fwait
imul
fs
jecxz
sbb
lods
mov
sbb
mov
loop
lret
shrl
jl
and
loop
mov
outsb
aam
cmp
add
add
add
andb
cld
icebp
jmp
adc
and
add
pop
add
mov
stos
mov
jbe
jbe
in
or
adc
pop
push
pop
scas
daa
and
cltd
add
adcb
and
ffree
mov
ljmp
mov
sbbl
lret
xchg
mov
sub
adc
lret
nop
mov
mov
xor
xlat
cli
adc
sbb
mov
xor
test
aas
cmp
aaa
sub
call
xlat
test
push
mov
shrl
stos
mov
test
cli
mov
cmp
xchg
sahf
jno
and
push
pushf
push
repz
cmp
fsub
test
fwait
dec
mov
shll
pusha
ss
inc
fisttpll
std
dec
cmp
imul
push
es
std
movsl
adc
cwtl
popf
pop
or
jmp
push
cmp
sbb
lahf
testb
stos
andl
cli
add
ror
and
jnp
pop
mov
movsl
scas
in
outsb
mov
data16
xchg
cmpsl
stos
aad
xlat
in
or
push
cltd
call
jo
push
sub
xchg
test
cld
mov
int3
sbb
insl
jbe
jae
cmp
ret
jle,pn
fldenv
call
repz
add
cmp
jl
ss
jl
dec
loopne
fdivrl
inc
leave
push
shlb
adc
jae
mov
mov
std
loop
fistpl
mov
aas
inc
jg
mov
mov
cmp
and
jmp
xchg
ret
cmc
iret
fmul
data16
int
sti
out
fadds
lret
cmpsb
push
sub
xchg
mov
into
and
clc
lret
dec
sbb
fwait
dec
cmp
stos
mov
lahf
or
imul
jno
inc
add
in
lods
stc
and
jnp
inc
and
fbld
pop
mov
shlb
add
push
int
push
pop
fs
add
add
mov
sub
fisubrl
lods
lods
mov
push
andb
push
jno
int
mov
into
repnz
sbb
mov
jbe
rorb
xor
xchg
add
jbe
inc
retw
push
sbb
mov
iret
sub
inc
sub
push
fwait
rorl
push
pop
push
push
xlat
imul
and
pusha
mov
das
and
ja
fsubs
adc
mov
jle
jle
dec
lret
mov
fbstp
inc
xor
mov
jg
lahf
ds
loopne
sub
push
mov
out
pop
pop
mov
dec
loopne
movsl
insb
sub
lahf
cmp
cmp
mov
mov
push
mov
xlat
fucomi
push
jbe
mov
mov
jbe
mov
push
movsb
std
cmp
xchg
aam
loop
iret
xchg
mov
mov
lahf
pop
pop
movsl
mov
xor
pop
adc
loopne
test
pop
pushf
adc
fldt
flds
stc
adc
or
loope
test
insb
sbb
sub
xchg
push
je
sub
in
psrlq
hlt
adc
or
gs
nop
inc
adcl
mov
popf
pusha
fisttps
inc
rcll
push
sti
cmpsl
inc
sbb
sub
pusha
add
out
or
rol
cmp
loopne
scas
jecxz
xor
and
mov
jo
aad
cmp
pop
fs
into
sbb
sub
popa
loopne
out
lods
out
mov
arpl
jne
fmull
push
daa
fs
jb
cmp
lcall
std
inc
addr16
repnz
rclb
loope
mov
nop
add
je
in
orb
call
jb
shll
loopnew
push
out
inc
jmp
out
dec
cmp
mov
mov
mov
push
out
lret
jno
aaa
out
or
push
shll
pop
push
test
jl
xor
pop
and
cmp
cmc
push
inc
dec
cs
jnp
stos
xchg
mov
pop
push
push
inc
stos
sbb
out
mov
pop
inc
inc
call
jecxz
push
mov
adc
xor
sub
or
xchg
imul
imul
imul
std
cmp
es
mov
orl
xlat
pop
gs
shlb
sub
mulb
sub
inc
sbb
ds
cmp
fsubrs
ds
loopne
shl
adcb
loopne
sub
addb
fdivrs
xchg
enter
cld
mov
int
nop
jg
xchg
aam
or
jae
sub
sub
inc
fsts
push
sub
das
out
cmp
sbb
xlat
mov
and
xchg
jmp
rcrb
enter
mov
adc
jo
test
pop
insb
nop
push
lret
in
inc
add
jp
mov
mov
decl
cmp
das
insl
sbb
inc
movsl
inc
jo
mov
mov
mov
cmp
aaa
bound
data16
push
pop
insb
sub
cltd
es
adc
popa
push
fisttpll
fcomi
lds
push
xchg
jns
xchg
cmp
xor
and
std
enter
sti
xchg
fs
dec
pop
fs
push
not
mov
pop
add
jle
adc
pop
cmp
hlt
inc
int
jnp
adc
cmp
mov
ja
adc
inc
sbb
outsb
cmpsl
xchg
push
insb
inc
dec
stos
pop
xlat
iret
daa
pop
call
push
repnz
add
fidivl
ljmp
call
fnstsw
bound
dec
push
ror
out
inc
int
daa
ret
imul
pop
mov
sub
or
mov
bound
mov
ljmp
cmp
adc
and
mov
adc
adc
iret
pop
icebp
mov
insl
add
lds
and
jl
inc
mov
inc
pop
xor
testb
inc
loop
scas
jo
mov
cmpsb
xchg
insl
xchg
jp
aam
mov
das
xor
and
cmp
test
mov
arpl
test
xchg
or
loope
xchg
add
sbb
pop
fcmove
roll
or
jbe
in
inc
adc
xor
mov
dec
pop
push
cmp
pop
jg
jecxz
enter
mov
lcall
inc
mov
repnz
test
push
mov
pusha
cmp
add
add
add
mov
mov
aad
add
and
add
mov
loop
or
sub
adc
cmp
loope
js
inc
push
xchg
outsl
mov
adc
inc
je
jmp
or
push
outsl
inc
ficoml
sbb
push
shl
jge
mov
dec
add
mov
cmp
fnstenv
jp
sbb
jl
dec
enter
insl
int
sbb
ss
xor
or
aad
jl
pop
out
jbe
mov
shrb
add
pop
add
cmpsb
fnstcw
gs
movd
jmp
mov
xchg
pop
mov
sub
arpl
fsubl
ds
mov
dec
xor
bnd
push
push
outsb
cs
andb
jmp
mov
jp
and
inc
sbb
cmp
mov
nop
push
jb
xchg
mov
rorl
sub
fmuls
ret
adcl
mov
xchg
inc
xchg
mov
popf
shl
out
movsb
mov
sti
fldcw
cmp
adc
cli
aas
pop
outsl
out
push
test
fisttps
stc
sbb
inc
xlat
pop
dec
arpl
cli
jp
movsb
dec
add
arpl
cltd
adc
push
int3
mov
das
test
jae
fildl
out
or
jae
ret
sbb
inc
scas
int3
in
lcall
mov
inc
sbb
out
subb
push
inc
stos
jnp
xchg
dec
mov
mov
sbb
xchg
ja
mov
or
mov
or
xor
fs
into
es
outsl
xlat
movsb
iret
insl
imul
xchg
vpunpcklwd
insb
add
sbb
in
jne
popf
cmpsb
clc
test
cmpb
nop
mov
out
or
push
mov
call
sbb
jnp
shrl
sbb
push
loope
mov
jmp
clc
mov
aam
adc
in
lods
stos
into
adc
lea
jbe
mov
fdivl
loop,pt
lds
mov
enter
jp
mov
inc
and
rolb
push
adc
fdivrs
mov
icebp
outsb
sbb
sub
cli
or
sub
xor
ja
mov
sbb
cld
dec
pop
cmp
xor
in
xor
aaa
jbe
adc
fsubr
xchg
jecxz
and
fwait
sub
imul
div
and
cmpsb
xlat
fsubrp
push
add
jp
bound
push
lods
pop
repnz
pop
mov
jle
jo
mov
add
imul
lds
ja
pop
flds
outsl
mov
xlat
mov
rolb
and
inc
imul
push
jbe
push
mov
mov
mov
lods
sti
jb
cmc
push
mov
gs
mov
daa
aas
imul
pop
movsl
add
dec
enter
sub
inc
aad
fimull
sbb
adc
fcoms
inc
sub
fiadds
orl
clc
jmp
punpckhwd
cltd
je
dec
sbbl
daa
test
mov
jbe
or
cld
mov
xchg
fs
xchg
inc
mov
jge
mov
mov
jge
or
mov
or
adc
mov
bound
cli
test
and
mov
mov
mov
out
sbbb
push
iret
or
ja
das
ja
test
mov
mov
int
xchg
cmp
and
push
add
mov
iret
popf
pop
cmpsl
xor
push
hlt
popa
jo
inc
pop
add
add
inc
bound
mov
jl
pop
dec
cmpl
mov
int
inc
pop
loope
cmpsl
mov
inc
notb
mov
jo
arpl
sub
adc
mov
out
test
test
negb
xor
cmp
js
jecxz
enter
adc
xchg
stos
icebp
mov
xlat
call
mov
and
cltd
push
xchg
sub
lret
sub
pop
dec
shl
pop
or
lock
mov
out
scas
mov
movsl
decl
xor
daa
inc
aaa
jns
pop
inc
outsl
or
add
jne
mov
test
xor
adc
popa
test
xchg
into
adc
mov
ret
sbb
test
mov
dec
xchg
pusha
mov
cli
sbb
mov
cwtl
pop
mov
shrb
sahf
mov
bound
mov
ret
cmp
lret
dec
xchg
mov
fnstsw
fisubl
xchg
bound
bound
sahf
push
insb
xor
xor
add
mov
sub
add
or
push
fdivr
pop
and
and
decb
cs
fstl
jle
xchg
scas
mov
jmp
test
shlb
jle
rorl
outsb
jle
dec
je
loopne
xchg
mov
lahf
dec
addr16
push
andb
xchg
pushf
ss
jno
sti
dec
jmp
ss
push
cwtl
lea
lods
and
inc
jecxz
dec
push
loopne
fucomip
ror
adc
adc
mov
fs
out
push
ss
xchg
ret
out
jle
orb
sbb
dec
stos
adc
pushf
aaa
fs
cmpl
sub
lahf
cmp
push
xchg
movsl
shlb
xchg
sbb
inc
dec
jle
je
jae
ret
cmpsb
or
jl
in
inc
bound
cwtl
mov
leave
push
push
movsl
lret
iret
pop
mov
fsts
and
dec
stos
out
les
xor
xchg
mov
pushf
test
jbe
mov
mov
adc
cmp
lock
push
outsl
sahf
std
jmp
dec
cmp
push
addl
cld
mov
sub
pop
bound
repnz
out
repz
gs
xchg
scas
andb
cltd
out
dec
popa
clc
loop
ljmp
in
ss
sbb
dec
adc
into
or
sub
fdivrs
cmp
iret
cmp
cwtl
adc
fimuls
add
fsubrl
or
dec
or
call
mov
cwtl
mov
fucom
popf
stos
inc
cmc
or
adc
jmp
jg
xchg
mov
add
loopne
in
data16
xor
enter
aad
inc
aam
xchg
sub
aaa
popf
dec
inc
and
push
pop
pop
sbb
add
add
add
push
lea
sti
pop
lods
into
fisttpl
gs
stos
int3
imull
add
and
add
out
pop
push
push
adc
mov
push
sub
pop
inc
loope
pushf
movsl
gs
mov
inc
fadds
lcall
jg
dec
sbb
jno
sub
mov
jns
fs
in
cmpsl
cmp
into
adcb
dec
mov
out
push
sub
push
jg
sub
inc
loopne
sahf
xor
stc
adc
cmpsl
int
cmp
in
scas
cli
ds
mov
or
mov
sahf
cwtl
or
sbbl
mov
ja
sbb
lods
mov
arpl
sbb
jns
mov
xor
addb
out
jmp
stos
outsb
popl
rcrl
mov
lds
popf
push
add
out
popa
push
pop
lahf
xchg
xchg
xorb
sti
and
mov
pop
mov
sbb
sarb
xchg
cmp
js
sti
or
push
es
movsb
dec
fcoms
adc
jnp
xor
adc
in
jnp
ss
aad
mov
sbb
add
or
mov
aas
dec
lods
aad
ss
dec
or
test
pop
enter
push
jl
in
in
push
cmp
mov
cmp
xor
inc
sub
or
mov
aas
imul
xor
out
imull
bnd
scas
or
jp
aas
fldenv
dec
dec
pop
scas
imul
add
cmp
mov
mov
jge
xorl
mov
rcr
imul
addr16
rcll
fsts
dec
sbb
push
mov
push
sub
push
pop
movsb
cld
cmp
aaa
mov
imul
test
mov
fisttps
sbb
popf
sbb
es
fnstcw
rcll
xor
insb
push
mov
mov
or
and
sti
dec
scas
add
jmp
fcompl
test
out
lret
inc
mov
jl
jg
dec
or
shr
sub
call
test
push
es
gs
and
push
jle
sbb
xchg
pop
xchg
xchg
popf
not
pop
dec
cltd
mov
scas
iret
sbb
add
pusha
xchg
mov
jecxz
mov
mov
sahf
xchg
cmp
and
sub
mov
jae
mov
fistpl
jge
stc
cmp
lea
push
mov
insl
cmpsb
xchg
hlt
xor
mov
jnp
or
cmc
pop
inc
jbe
xlat
mov
cmc
into
jmp
or
sub
xchg
mov
xor
sub
mov
sub
mov
mov
mov
sbbl
adc
or
mov
mov
clc
sarl
loop
stos
adc
dec
inc
xor
ficoml
popf
cwtl
dec
push
in
mov
inc
cmp
lcall
shlb
popa
jg
jp
lock
jo
mov
push
fs
sbb
ret
jge
in
mov
lods
fiaddl
shl
mov
xchg
movsl
xchg
insl
xchg
mov
push
inc
cmpsb
sub
pop
sub
subl
inc
jns
fwait
adc
xchg
stos
jge
dec
das
pop
jl
or
adc
pop
push
leave
dec
xchg
jns
cmpsl
cmp
stos
sub
outsl
js
adc
inc
aad
mov
push
mov
aam
xchg
aam
pop
ja
pop
xor
imulw
ret
out
mov
aad
inc
push
sbb
pop
lods
mov
fwait
mov
out
mov
push
sbb
jae
test
inc
push
jne
adc
or
dec
negl
ret
or
jno
insb
dec
mov
sbb
fildll
divl
call
sbb
add
and
mov
fidivl
mov
inc
jnp
roll
mov
xchg
jns
aam
push
mov
push
int
cli
push
jo
or
repz
push
mov
test
repnz
lahf
je
add
sub
mov
and
outsb
cmpsb
sub
fisubrs
ret
repz
lret
lods
sahf
cwtl
mov
lock
pushf
fdivl
jp
clc
hlt
aam
out
fwait
sbb
push
mov
adc
daa
add
testb
lods
rorl
and
int3
mov
cltd
mov
stos
lret
pop
xlat
cli
dec
pushf
int3
mov
and
into
jbe
cltd
fwait
shrb
cs
jl
xchg
cltd
push
sub
lret
inc
adc
jne
mov
inc
inc
mov
leave
lods
xchg
in
subb
cmp
in
mov
repz
dec
push
or
inc
dec
mov
mov
xchg
xchg
stos
lcall
adc
push
push
push
lea
testb
jl
clc
dec
lds
or
jnp
rol
jecxz
loopne
cwtl
sti
je
dec
push
movsb
ret
xchg
mov
loop
add
sub
lcall
xchg
mov
shrl
call
aam
push
or
nop
mov
mov
push
cmp
cmpsl
xchg
mov
xor
mov
fs
fs
and
and
cmp
lock
mov
fnstenv
xchg
mov
push
sub
jecxz
push
xchg
popa
arpl
subl
jb
mov
out
xchg
pop
cmpsl
push
sbb
xchg
lahf
cltd
outsl
andl
imul
mov
and
cmp
cwtl
fwait
sbb
mov
cltd
fnstenv
jb
jo
test
push
mov
pop
lods
and
and
out
sub
lods
push
stc
sahf
mov
mov
sarb
push
lret
scas
ret
ja
in
arpl
repnz
cmp
mov
scas
push
push
xor
fimull
sub
call
sub
jecxz
orl
repz
cmp
cmp
sbb
pop
stos
xchg
jle
ds
mov
jge
pop
xor
inc
jns
leave
push
cmc
insb
js
xchg
inc
adcb
call
jno
scas
loop
mov
ret
pop
mov
fs
aad
in
mov
push
dec
dec
fisubrl
shl
int
js
sahf
push
adc
sbb
arpl
jb
and
outsl
push
arpl
mov
mov
mov
push
jne
pop
fsubrs
sbb
add
cwtl
es
cmp
and
add
add
add
cwtl
and
add
adc
mov
push
adc
and
cmp
add
adc
jecxz
cmpsb
adc
mov
test
adc
add
pop
add
test
repnz
mov
xchg
in
jns
jg
enter
xchg
xorl
scas
ret
add
xlat
add
sub
push
lea
or
fisttpl
out
ret
mov
icebp
or
ljmp
test
lcall
or
adc
xchg
loope
out
shlb
sub
int
sbb
pop
mov
xor
mov
sub
push
mov
pop
sbb
mov
xor
or
jnp
inc
pop
add
cmpb
mov
movsl
sbb
imul
cmp
mov
mov
popa
push
das
fsubrl
pop
xchg
adcl
jp
or
pop
scas
outsl
xor
lods
adcb
push
and
add
cmp
imul
cwtl
push
mov
arpl
push
ja
mov
jge
lcall
imul
xor
test
mov
cmpsl
mov
std
clc
rep
sub
inc
adc
mov
mov
push
in
outsl
jbe
insb
cmp
cmpsb
divb
jmp
push
and
pusha
push
idivl
test
pop
pop
test
mov
xor
xchg
cmc
mov
or
dec
idiv
fbld
test
pop
adc
loope
cmp
pop
aad
cwtl
dec
negb
sub
imul
sbb
std
xchg
inc
repnz
aaa
adc
dec
mov
or
sbb
and
jecxz
adc
sbb
push
pop
mov
iret
test
inc
aam
add
aas
rclb
testb
js
adc
and
scas
or
mov
jecxz
adc
cltd
bsr
lock
lret
pop
rcrl
into
popa
call
xchg
iret
shrb
add
nop
pusha
out
jp
test
and
adc
clc
call
mov
pop
out
inc
dec
xlat
mov
out
adc
cmp
ljmp
filds
int3
adc
js
stos
rol
sahf
aam
lock
xchg
xor
jmp
inc
or
push
pop
inc
or
es
enter
imul
shlb
jno
les
clc
inc
je
or
ret
jmp
or
cwtl
addr16
xor
xchg
push
push
mov
inc
out
icebp
mov
cmp
and
repz
scas
mov
decb
push
mov
mov
aaa
sbb
loope
popf
bound
rcr
adc
or
dec
fsubrs
jns
mov
lods
lock
add
aas
xor
sub
inc
fwait
ret
es
cli
mov
mov
rep
sub
inc
addr16
dec
xchg
in
xor
lret
mov
inc
popf
ss
cmpsl
mov
stos
mov
jo
in
loope
data16
pop
mov
cwtl
ja
cmp
dec
addl
mov
push
jo
mov
cmp
xor
subl
jl
dec
dec
lock
push
daa
or
jns
rorl
sub
das
cmp
stos
jae
leave
rol
and
pop
or
push
mov
out
pop
out
gs
inc
out
jg
aam
into
mov
ja
xor
push
bound
sbb
push
outsb
mov
or
test
mov
push
negb
out
and
lcall
int3
imul
jl
fs
xchg
fnstenv
pop
lcall
adc
lods
jne
shr
fcoms
in
jg
pop
xchg
cmp
xchg
sub
sub
xchg
icebp
mov
lods
adc
push
sbb
je
jnp
rorb
push
sbb
xchg
adcl
xchg
into
fildl
jmp
loop
adc
das
dec
dec
cs
in
rolb
lcall
adc
push
out
ss
lea
jb
push
xchg
and
lods
gs
test
jl
out
inc
call
xlat
xchg
loopne
cmp
jne
mov
and
jg
push
jne
cmpsl
sub
adc
popa
push
adc
pop
decl
jg
dec
adc
test
jmp
movb
shrl
jns
pop
je
fmull
jae
adc
nop
mov
lock
ret
pop
add
sbb
sti
push
pop
mov
mov
mov
ficoms
push
pop
rcr
je
cmp
cmp
arpl
or
xor
or
mov
out
out
xchg
adc
hlt
adc
jecxz
and
shld
mov
les
dec
ret
dec
jle
lods
xchg
add
sbb
adcl
jmp
and
dec
clc
or
clc
inc
in
cmpsl
cmpsb
enter
push
dec
xlat
ret
xchg
jnp
imul
in
lock
lcall
in
mov
insl
out
test
popa
or
imul
dec
dec
das
addl
xchg
stos
sub
jle
ljmp
push
out
mov
mov
push
pop
mov
adc
mov
stos
cmp
jge
or
mov
lods
and
movsl
insb
cmc
lock
fcoms
ret
sub
test
sbb
mov
adc
add
push
add
repz
subl
jno
es
cs
daa
pop
int3
push
mov
clc
imul
cmpsb
out
mov
repnz
sbb
cmpsl
add
je
mov
sahf
stos
dec
cmp
jae
imul
clc
mov
rcll
data16
cmpsl
aad
loope
test
push
fsubrs
pop
inc
and
ss
sbb
jle
imul
idiv
mov
sub
dec
mov
outsl
and
fcmovb
mov
mov
mov
lret
sar
insb
repz
ret
or
repz
dec
insl
int
cwtl
std
and
pop
inc
in
repnz
out
scas
stc
fbld
mov
nop
rol
dec
pop
xchg
push
pop
outsl
imul
sbb
jae
mov
addl
int
fnsave
neg
sub
mov
mov
dec
cld
add
xchg
in
loopne
nop
in
int3
fs
push
xor
clc
pop
lods
mov
stc
clc
cmp
push
mov
in
mov
mov
mov
pop
dec
cmp
push
or
xor
push
add
cmp
std
mov
adc
add
add
add
sbb
insl
les
mov
jae
mov
add
and
add
push
push
aaa
int
aas
mov
sti
movsl
xchg
pop
mov
add
leave
and
hlt
sub
hlt
mov
roll
test
mov
push
push
jno
ds
bound
pushf
icebp
push
cli
insl
data16
lahf
enter
xor
imul
lahf
xchg
sbb
mov
repz
adc
in
or
movsl
gs
and
sub
arpl
adc
xchg
mov
iret
jmp
popf
xchg
and
mov
ret
cs
push
jb
sub
xchg
cs
pop
dec
cli
iret
inc
out
push
mov
in
cmp
ss
lods
adc
adcb
push
push
outsl
xchg
mov
pop
or
xor
lcall
popa
mov
cmp
popa
lret
test
stc
pop
push
jb
jp
add
mov
sub
xchg
test
adc
lahf
in
pop
fildll
call
popf
add
sub
xor
rep
inc
mov
or
aad
out
stos
out
insl
and
mov
test
js
divb
repz
lret
sbb
rolb
dec
inc
sbb
or
inc
xchg
push
movsl
imul
sarb
fs
sbb
add
lds
test
or
test
mov
fiadds
add
pop
pop
ss
xchg
mov
add
fisubrs
cmp
lods
lds
xorb
arpl
add
fwait
sbb
dec
xchg
jb
xor
cmpsb
cmp
decb
or
mov
sahf
push
jge
in
loopne
push
loope
jl
sbb
out
lret
mov
mov
enter
mov
add
lods
adc
cli
xor
call
dec
aas
mov
jp
addb
dec
shlb
and
fidivs
mov
dec
lock
xchg
dec
fcoml
ret
cwtl
bound
push
xchg
les
pop
sahf
fnstcw
imul
ss
fdivr
sub
mov
or
jb
movsl
mov
addr16
xor
dec
repz
lcall
aad
in
add
mov
inc
ret
inc
dec
sub
push
orb
jbe
fwait
stos
pop
fmulp
nop
add
mov
jmp
and
das
ret
mov
xor
scas
pushf
in
push
add
mov
sbb
in
pop
xchg
cld
loop
jae
stos
aas
jle
jo
or
cmp
xor
push
iret
inc
aas
or
test
mov
out
dec
sbb
out
cmp
add
lods
xchg
push
dec
std
lret
cmpsb
ja
jmp
jl
subl
inc
xor
inc
stos
inc
mov
movhps
pop
push
pop
imul
xchg
pushf
xchg
inc
daa
sub
in
inc
adc
add
dec
mov
mov
xchg
ficomps
inc
mov
std
mov
lea
xchg
stos
mov
dec
cltd
aam
pop
je
inc
push
mov
mov
cmp
es
cmpsb
and
es
or
pop
stos
test
bound
notb
mov
fistl
sub
lods
jne
pusha
dec
xchg
fbstp
divl
inc
cld
lahf
imul
aad
outsb
roll
rol
fidivrl
adc
cmc
sub
push
pop
xor
cmp
int3
push
cmp
cvtps2pi
sti
mov
lea
pop
call
xor
mov
inc
iret
push
sub
jmp
sub
insb
out
out
in
out
pusha
inc
pusha
mov
dec
pop
mov
int3
mov
fists
mov
jl
rcrb
dec
stos
daa
fidivrs
mov
movsb
je
js
xor
pop
cld
sbb
sub
push
mov
xor
scas
testl
and
outsl
les
or
fadd
or
test
bound
jno
repz
adc
cmpsl
fildll
mov
std
iret
or
in
xchg
stc
cmp
and
ret
inc
movsl
dec
std
rep
std
lahf
or
dec
pop
mov
jnp
stos
adc
inc
sbb
xor
sbb
in
jnp
cltd
div
lds
lcall
lods
push
ret
cld
xor
adc
imul
and
adc
mov
stc
in
or
loop
sti
sub
add
lods
and
loop
cmp
jnp
or
out
out
mov
iret
push
addr16
cmp
adc
bound
sbb
xor
icebp
es
inc
bound
shrb
sbb
xchg
lret
inc
in
xlat
mov
in
and
lods
pop
sub
repnz
inc
pop
xchg
out
cwtl
cli
adc
stc
dec
dec
int3
or
int3
sub
and
les
sahf
cmpsb
movsl
push
movsb
je
xchg
dec
les
scas
jo
fidivrs
daa
sti
divl
mov
push
addl
xor
mov
aas
ja
xor
cmp
lret
sub
inc
int
movsb
xchg
pusha
in
mov
sub
xchg
jbe
loopne
shr
push
or
aas
call
imul
adc
or
enter
fisttpll
popf
sbb
ret
adc
xor
xor
fstps
mov
pop
xor
loope
push
and
mov
dec
rolb
notl
cwtl
ret
loope
cmpsl
mov
push
addb
scas
sbbl
pop
ret
inc
mov
mov
push
jl
ljmp
xchg
pop
imul
inc
imul
push
adc
and
cli
pop
int3
fwait
dec
mov
jns
lods
mov
inc
fcmovnb
lock
mov
into
mov
int3
pop
loope
mov
rorl
xchg
inc
adc
push
xchg
movsl
ja
xchg
cli
mov
daa
adc
insl
xor
test
mov
js
sahf
push
out
adc
push
pop
int
fidivl
pop
sbb
push
or
pop
sub
nop
ds
ja
cmp
loop
test
xor
jg
xchg
jns
or
jns
popf
addl
cwtl
pop
pop
mov
cwtl
push
leave
adc
and
dec
cmp
daa
out
jno
inc
loop
imul
sbb
fisttps
cli
cld
lea
xor
scas
or
jne
jge
repz
xchg
out
js
mov
lock
add
and
out
mov
xor
inc
add
and
add
in
sub
jle
adc
jg
cmpsb
xor
je
frstor
dec
subb
xor
mov
pop
je
orb
fcmovu
mov
push
popf
add
or
xor
mov
push
cmc
push
add
adc
add
xchg
mov
in
mov
jmp
aas
or
sub
xchg
lds
or
cmpb
sub
sbb
daa
pop
xor
mov
dec
bound
popl
and
xchg
jmp
fnsave
mov
stos
aam
xor
mov
cmpsb
push
jnp
stos
nop
fimuls
mov
and
dec
pushf
bound
xchg
mov
push
mov
sbb
mov
stos
stos
mov
pop
cwtl
fisubl
leave
adc
aas
push
jno
out
lret
add
jbe
xor
insl
in
add
ret
jecxz
js
adc
sbb
mov
jb
xor
test
mov
fs
ja
mov
enter
sub
jle
call
mov
outsb
ja
movsb
sub
orb
push
enter
and
add
leave
and
push
cmc
sti
push
xchg
sbb
and
cmp
ds
fwait
or
mov
rclb
cmp
cmp
call
pop
in
int3
lock
mov
ret
jg
das
and
subb
dec
fwait
cltd
push
ret
xorb
jmp
lds
mov
test
mov
aas
leave
push
addb
clc
jne
cmpsl
pop
inc
imul
enter
inc
sub
fldenv
mov
mov
pushf
fidivrs
das
mov
sahf
in
adc
inc
arpl
aaa
rorl
lret
into
inc
mov
icebp
sub
push
adc
pushf
movsl
lret
outsl
or
repnz
xchg
mov
xor
jmp
jecxz
repz
jmp
adc
icebp
mov
and
cmp
jne
or
scas
xlat
dec
pop
jo
and
push
adc
shr
xchg
and
inc
mov
incb
push
shr
dec
lret
sbb
dec
lds
scas
push
es
dec
addr16
push
fdivl
mov
pop
ljmp
dec
cmc
mov
adc
clc
mov
nop
sbb
stos
adcb
push
fidivl
push
pop
adc
jno
mov
es
push
xchg
fwait
pop
or
mov
or
mov
push
mov
loope
addr16
adc
mov
je
dec
mov
mov
jae
fildl
shlb
ds
jns
inc
cs
fs
scas
stos
sub
lahf
cs
xor
out
not
in
jae
bnd
fwait
jmp
xchg
push
xchg
and
xor
mov
enter
jo
scas
enter
sub
shr
xor
sbb
inc
xchg
les
sub
cwtl
cmc
mov
ljmp
popf
mov
into
mov
sbb
and
movsb
test
fdiv
pop
int3
fdivr
adc
pop
dec
and
push
mov
xor
shll
xor
sbb
pop
add
sarb
out
fstpl
xlat
inc
xchg
dec
mov
add
test
dec
push
f2xm1
shll
out
fnstenv
int
inc
popf
inc
mov
jmp
sbb
mov
popf
pop
xchg
psubd
sbb
push
mov
dec
arpl
pop
xchg
adc
out
std
loopne
int3
lock
xor
jge
and
ja
cmp
fisubrl
pop
insl
sub
xchg
xchg
adc
mov
mov
adc
push
shlb
sbb
ja
dec
daa
negb
loope
ss
insb
ret
pushf
lidtl
mov
rolb
leave
lock
dec
adc
lds
leave
fidivl
add
add
pop
stc
imul
mov
xchg
push
out
out
into
rcrl
add
shrw
imul
in
inc
imul
into
lea
cmp
sub
fwait
xor
std
fldl
movsb
ret
ja
mov
jae
push
loopne
jno
sbb
lods
jmp
out
xchg
add
mov
fimuls
shl
mov
adc
mov
mov
sbb
and
jg
mov
rcrb
aaa
cmp
cmp
cmpsb
cmp
sub
sti
pop
outsb
movsl
jns
aam
sahf
insb
jno
inc
and
or
jnp
icebp
pusha
xchg
popf
pusha
cwtl
mov
mov
popf
mov
pop
pop
pop
clc
pop
aad
jle
cld
push
je
jae
orl
mov
decb
and
divl
rcrl
pop
jns
push
leave
addr16
dec
jnp
cmc
lods
xor
mov
dec
enter
shlb
insl
xor
or
loop
es
icebp
fmuls
inc
orl
imul
mov
add
mulb
stc
dec
sbb
sub
xlat
mov
scas
rorb
xchg
xchg
in
fidivl
and
popa
add
and
inc
mov
jmp
sahf
cmp
mov
je
rcrb
add
push
or
and
std
int3
imul
adc
cmp
add
pusha
xor
inc
or
or
push
xchg
inc
inc
inc
add
sbb
xor
or
mov
push
out
mov
aam
and
sbb
popa
scas
test
add
xor
dec
jl
cmpl
lods
in
xor
iret
aaa
lea
inc
ret
pop
aam
and
cmp
xchg
mov
aaa
aad
stos
sahf
leave
addl
push
sub
shrl
cwtl
rorb
aam
xchg
and
mov
dec
xor
pop
fdivr
pop
pop
loopne
inc
or
in
mov
loop
pop
jmp
or
xor
xlat
sub
mov
adc
test
iret
call
pop
jge
dec
xlat
shlb
dec
jmp
outsl
out
adc
mov
shl
in
int3
push
stos
fwait
mov
jae
cld
cmp
xor
es
repz
mov
je
stc
mov
add
in
xchg
mov
pop
inc
pop
mov
add
add
add
add
mov
push
push
std
jo
dec
add
and
add
lahf
jmp
dec
or
jle
adc
sub
push
sub
leave
xchg
icebp
lcall
jle
imul
sbb
aas
xor
pop
mov
rcr
push
or
mov
jg
rcrb
inc
add
cmpsl
jae
xor
or
hlt
pop
nop
out
fists
jge
jnp
call
adcl
sub
stos
pop
imul
add
cli
xchg
out
in
add
sub
xor
sbb
xchg
lods
jl
lcall
sbb
adc
out
xor
mov
jne
push
mov
loopne
mov
imul
rcll
push
and
push
xchg
leave
int3
flds
and
dec
cmp
sub
adc
xor
fisubs
xchg
cmp
incb
pusha
fcmovnbe
sbb
push
movsl
loope
jecxz
cmp
sub
xor
ss
jmp
ds
xor
sub
shlb
xor
and
and
mov
mov
ljmp
leave
ficompl
adcb
fs
stos
cli
cmp
push
outsb
pop
cltd
sbb
pop
iret
pop
icebp
xchg
rcrl
xchg
mov
mov
sbb
push
mov
xor
pop
cmp
out
push
pop
fs
enter
and
mov
pop
dec
xchg
lds
mov
push
pop
int3
cmpsb
bound
jbe
pop
fs
clc
xchg
xchg
jns
xor
mov
inc
inc
int
lds
push
push
inc
sti
push
enter
xor
mov
adc
movsb
jb
pop
dec
sub
jg
push
jb
mov
push
cmc
adc
mov
jbe
outsb
xchg
rclb
clc
adc
int
cmc
arpl
push
hlt
int
xchg
cmp
push
cmp
add
xor
dec
mov
mov
or
dec
ret
fwait
xlat
cmpsl
les
arpl
int
js
inc
pop
divl
scas
cmc
repz
mov
gs
dec
icebp
pop
je
imul
push
inc
jge
loopne
fs
xlat
sbb
xor
test
ss
push
pop
xchg
in
add
push
idivl
addb
or
fistpl
add
pop
je
xchg
jmp
call
inc
pop
and
mov
test
sbb
and
jp
andb
mov
cmpsb
inc
fbld
clc
out
shrb
push
fwait
adc
mov
inc
pop
jle
push
rorb
pop
jnp
cmpsl
xchg
push
push
clc
mov
loopne
loope
incb
and
orb
jge
ss
mov
arpl
out
pop
adcb
int3
pop
and
scas
fmuls
ds
test
repnz
out
sub
std
adc
js
cmp
daa
and
aaa
push
add
test
mov
mov
out
dec
mov
out
test
repnz
test
mov
mov
xchg
sub
inc
mov
mov
or
out
inc
mov
je
les
inc
pop
sarl
pop
pop
dec
or
adc
lds
imul
mov
in
lds
icebp
adc
jg
mov
xlat
pop
aas
bound
test
in
mov
cli
mov
mov
sahf
xlat
dec
xchg
sbb
mov
lahf
stos
jmp
xor
cwtl
dec
pop
adc
jle
mov
push
or
insl
xor
mov
mov
xchg
cmp
out
pop
xor
dec
loope
inc
lret
addr16
lock
aam
in
mov
fimuls
stos
sub
test
arpl
es
mov
pop
mov
shll
cwtl
mov
mov
push
lock
frstor
xchg
jp
cwtl
inc
ljmp
mov
loop
dec
sub
dec
out
mov
push
dec
fildll
jns
sti
rclb
pop
lock
inc
or
fldl
inc
jb
mov
jle
cltd
pop
adcb
and
fadds
mov
ffreep
std
cmp
in
mov
push
das
pop
xchg
mov
leave
mov
fcmove
push
jmp
lcall
cmp
clc
in
mov
sub
lock
sub
cmc
test
int
cmp
stc
xor
mov
mov
mov
add
fstpt
sbb
shr
adc
sub
push
mov
test
loop
xor
mov
sbb
lock
jae
pusha
pop
cwtl
call
jp
repnz
push
aas
popf
mov
sbb
mov
test
push
ret
jmp
int
fs
movsl
pop
cmovge
cmpsl
fxch
rcrb
push
int3
mov
mov
imul
adc
insb
cmp
and
stos
syscall
xor
mov
adc
jp
push
es
addb
jb
inc
je
and
in
cmpsb
xor
in
mov
inc
shlb
shll
and
add
out
hlt
cmpsb
lods
test
mov
test
jp
in
cs
fbstp
loope
pop
pop
pop
stos
push
les
dec
xchg
popf
jnp
lea
das
fistps
mov
push
jno
mov
lods
iret
jmp
lret
int3
pop
or
mov
inc
test
adc
cmpl
aad
out
leave
test
lret
push
cmc
sbb
movsb
ret
sar
pusha
mov
push
and
xchg
gs
imul
in
mov
ret
mov
xor
pop
movsb
sub
frstor
aam
adc
push
xor
stos
add
popf
pop
cmp
mov
xchg
cmpsl
add
fiadds
sub
shll
popf
fimuls
insl
les
mov
cmp
fcoml
mov
xchg
mov
dec
push
jo
lahf
cltd
sbb
cmc
mov
call
setae
fiaddl
push
movsb
pop
push
fisubrs
loope
or
mov
aaa
in
shlb
cmc
test
xor
xor
cwtl
fisubrs
sub
cld
and
sub
scas
rcrl
js
mov
int3
xchg
push
out
pusha
add
pop
pop
and
cmp
mov
pop
js
pop
test
lock
push
inc
test
or
fmul
xchg
cwtl
gs
add
push
inc
or
pop
cltd
shr
rolb
mov
pop
add
and
js
jge
bswap
sbbb
push
or
xchg
xor
sbb
mulb
sub
mov
and
ja
push
dec
js
pop
adc
jle
jecxz
ss
sahf
xor
nop
scas
or
xor
sti
leave
test
leave
pop
and
jo
imul
sbb
icebp
ret
sub
sub
jp
int3
jp
and
sbb
xchg
mov
mov
and
das
ljmp
xchg
sbb
sbbb
jg
xor
xchg
jae
mov
movsb
movl
cmp
imul
jb
sub
inc
dec
xchg
aad
hlt
cmp
out
loopne
mov
loopne
jg
adc
jbe
push
mov
or
fcom
push
mov
in
in
jbe
pop
fwait
ljmp
adc
cmp
divl
push
cmp
sbb
jb
sbb
lock
mov
repz
shrb
aad
pop
negl
mov
fisttpl
into
std
xor
sub
movsl
jnp
nop
cmpsb
adc
adc
xchg
in
push
int3
fstl
sub
mov
fisttps
add
mov
mov
jle
cltd
out
loope
addl
jg
fldcw
orl
push
cwtl
and
jmp
and
pop
test
icebp
je
adc
mov
mov
push
mulb
mov
pushf
fisubrl
rol
lcall
inc
rorb
sbb
mov
lock
int
pop
jmp
adc
test
pop
and
je
xchg
push
sub
imul
into
ret
push
jne
out
lods
lods
jb
jl
or
dec
test
jl
adc
fwait
stos
add
push
pop
mov
push
popa
loopne
mov
push
testb
mov
or
inc
xchg
mov
xchg
clc
out
sub
pop
pop
pusha
sub
int3
sti
fwait
das
pop
clc
mov
dec
inc
fnsave
push
fisubl
add
dec
clc
push
lods
shll
sbb
sub
jnp
cld
cwtl
imul
out
mov
shrl
dec
mov
adc
inc
sub
pop
xor
add
cmp
jmp
nop
pop
mov
push
xchg
xchg
ficoml
pop
adc
popa
jmp
cld
test
lock
bswap
mov
lods
loope
rcr
imul
aam
pushf
std
je
sbb
cwtl
imul
jg
arpl
mov
sbb
cmp
xor
xchg
inc
and
or
mov
mov
lcall
cld
sub
mov
das
mov
pop
les
pop
in
movsl
dec
scas
outsb
add
mov
mov
sub
xchg
test
sbb
sbb
je
mov
mov
mov
les
pop
push
cmp
mov
js
leave
sub
xor
jnp
mov
jae
cld
adc
or
or
sbb
lcall
jge
sbb
out
repnz
data16
inc
mov
sahf
mov
xchg
loop
jo
lds
jmp
mov
sahf
lds
push
xor
mov
mov
jnp
fcoml
les
int
cwtl
sub
shll
dec
popa
insb
mov
push
jnp
adc
jp
jns
push
ffreep
popa
and
push
jne
lret
mov
mov
lds
push
cmp
mov
and
mov
fldcw
mov
jbe
mov
shlb
mov
dec
mov
push
movsl
sbb
cli
xor
lods
push
adc
and
pushf
int
test
sub
bound
cmp
xchg
leave
idivl
sub
faddl
push
aas
xor
add
cltd
cmpsl
xlat
dec
push
aas
lods
or
inc
jae
adc
leave
int
in
lret
jns
jo
aas
jno
jns
enter
sti
push
sbb
aas
lods
add
jb
aaa
lock
pop
aaa
mov
xchg
cmp
lods
aad
sbb
ret
imul
push
aas
push
scas
sbb
sub
push
mov
jnp
stos
orl
jae
mov
mov
imul
xchg
lds
cmp
movsb
jns
dec
xchg
pop
decl
lock
add
dec
clc
mov
xchg
adc
jb
cmpsl
stc
ficomps
add
setns
mov
rorl
sub
mov
mov
sbb
push
addr16
mov
sub
imul
or
cld
cld
movsb
enter
nop
out
adc
pop
dec
cmp
mov
push
repz
out
scas
mov
jb
add
fsubl
in
jl
sub
in
loop
cltd
add
cmp
xorl
ljmp
insb
rep
jmp
xor
mov
cltd
adc
adc
fsubrl
lret
pushf
call
inc
jo
lcall
and
pop
xlat
das
es
ja
fsub
pop
push
add
adc
imul
addr16
cmp
ss
dec
xchg
addr16
ljmp
inc
fs
or
das
xchg
or
cmp
cmpsl
lods
or
ja
fiaddl
scas
sub
fstpl
mov
jl
out
aaa
in
lock
jo
cwtl
out
inc
push
arpl
gs
cmc
xchg
xchg
ja
cmp
jge
adc
inc
sti
js
pop
mov
mov
dec
xchg
pop
int
test
arpl
cmp
out
mov
inc
jmp
dec
or
dec
repz
data16
stos
sbb
sub
push
dec
cs
xchg
lret
lds
lds
mov
xchg
out
outsb
adc
daa
jge
into
or
cld
in
out
daa
cmpsl
aam
test
adc
pusha
out
fs
sbb
outsb
push
xor
stos
ja
gs
mov
fisttps
into
cmpsb
aas
push
fwait
imul
or
loop
in
fnsave
jns
lahf
call
jge
loope
mov
imull
adcl
mov
xlat
adc
pop
fists
jno
pop
inc
jl
dec
in
pusha
xlat
lock
movsl
mov
xor
add
sbb
lods
bnd
jne
jae
mov
mov
sub
cltd
in
dec
bound
lcall
jg
inc
mov
out
ljmp
test
jae
insb
enter
call
icebp
add
add
add
pop
addl
rcrb
rclb
pop
add
and
add
movsl
sbb
popa
push
scas
inc
rcll
adc
dec
add
lock
push
mov
cmpsw
hlt
push
in
cltd
inc
rcrl
xchg
pop
fnstcw
nop
cwtl
mov
js
or
imul
inc
push
neg
adc
rol
fmull
and
loope
out
xor
xor
fs
xor
push
insl
lds
sub
hlt
repz
adc
cwtl
loope
pop
adc
ljmp
cs
cmp
fisttpll
imul
js
and
loop
mov
push
dec
add
and
enter
add
mov
test
repnz
sub
cmpsb
mov
fdivrp
enter
add
mov
imul
mov
test
push
sub
and
sub
imul
pop
popa
movsb
xor
sub
outsl
daa
aaa
hlt
mov
push
xor
out
mov
pop
ficoml
cwtl
ss
das
fwait
inc
lea
lahf
mov
stos
cmpsb
sbb
and
scas
lcall
sub
sub
mov
imul
sbb
xor
mov
mov
icebp
cltd
add
jmp
mov
adc
mov
pop
lret
rol
push
jmp
mov
sub
cmpsb
mov
lret
jns
pop
shlb
cwtl
cmp
jl
adc
leave
call
inc
jecxz
push
inc
bound
push
lea
lcall
call
sub
outsb
jg
popf
cs
sbb
lahf
cwtl
pop
pusha
xor
inc
cli
bound
or
cmc
lods
les
and
test
push
add
adc
xor
outsl
sbb
fstpl
xchg
loopne
mov
das
ficompl
daa
enter
mov
imul
xchg
xor
sub
jno
cmp
fsubrl
add
ljmp
andl
out
imul
xor
xchg
mov
sbb
jg
lock
xchg
dec
cmp
adc
clc
sbb
fs
xor
std
out
jne
ss
or
sub
lret
das
or
icebp
popf
aaa
sbb
sbb
movsl
int3
mul
mov
pop
jne
xlat
cmp
xor
sti
dec
xor
mov
mov
je
insb
mov
and
mov
push
stos
mov
lahf
fs
dec
push
lret
and
fs
in
adc
xor
test
and
fisttpll
repnz
frstor
add
call
push
jecxz
lret
jo
or
rorl
xchg
push
pop
test
xchg
fucomi
test
add
mov
push
or
or
push
push
andl
sbb
push
insb
cmpb
jg
dec
clc
xor
aas
cmc
sub
or
sub
adc
dec
dec
stos
mov
das
jno
jge
scas
pop
leave
std
jp
mov
adc
add
jmp
mov
cmp
add
xchg
jle
filds
aad
in
or
push
es
sub
xchg
into
fisubs
pusha
leave
ss
cmp
rcll
sbb
jp
lcall
mov
adcl
push
aas
add
leave
repnz
sbb
movsb
dec
xor
inc
ljmp
sbb
fwait
mov
int
sbb
mov
adc
jnp
jmp
and
lahf
xchg
sbbl
sub
push
mov
aas
push
mov
cmp
mov
xor
int
icebp
aad
out
out
or
mov
shrb
subb
mov
jge
pop
imul
push
test
cmpsl
mov
xchg
pop
dec
add
das
rorl
jns
scas
sbb
fisubrl
jno
inc
test
rclb
fs
lea
inc
insb
test
pop
cmp
cmp
insl
cmp
aam
out
xor
sub
test
push
cmp
hlt
lea
ret
js
mov
or
sub
cmp
fiadds
pop
daa
std
add
and
mov
pop
dec
mov
jle
push
insl
popf
mov
jecxz
xchg
jl
xor
mov
jmp
subb
cli
lods
outsb
inc
shll
xor
jns
jno
std
scas
popa
xchg
sub
sub
dec
push
or
pop
mov
mov
add
mov
es
xchg
mov
stos
sub
scas
push
sub
sub
and
je
mov
in
pop
pop
sti
jmp
int
pop
pop
mov
iret
stos
push
insb
in
nop
in
imul
int3
pop
push
in
jle
shll
push
sub
pop
sub
in
scas
iret
jns
addr16
add
sbb
call
rorb
or
mov
sbb
gs
xchg
dec
les
clc
mov
cli
pushf
in
int
xchg
adc
adc
int
lret
clc
outsb
dec
fstpt
test
cld
pushl
push
jb
cli
dec
and
out
bound
jno
mov
jnp
pop
aas
testl
adc
clc
xchg
mov
int3
int3
lret
stc
nop
divb
and
mov
xor
lcall
outsb
xchg
mov
arpl
std
push
inc
pop
inc
mov
insb
mov
sub
movmskps
outsb
insl
cmp
adcl
sub
and
scas
sbb
call
xor
push
push
ret
jne
and
or
outsb
mov
mov
or
cmpsb
xchg
mov
dec
popf
aaa
push
iret
xlat
jbe
push
sbb
or
add
stos
mov
stos
outsl
cmp
out
cmpsb
movzbl
into
or
jmp
pop
enter
xchg
inc
cmpsb
ret
cld
xchg
enter
pop
divl
scas
lds
or
pop
jo
mov
fadds
inc
movb
lret
push
mov
lret
mov
sub
scas
cmp
mov
jge
cltd
sarb
push
sbb
sbb
lods
pushl
or
cmp
add
add
add
adc
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
data16
outsb
cmp
jbe
jp
jle
add
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
add
add
add
sbb
add
add
or
cmp
cmp
cmp
cmp
cmp
cmp
and
sbb
add
les
enter
shlb
aam
fdivs
fdivl
loopne
in
jle
ret
repz
std
jle
loope
mov
xor
insl
in
add
and
add
add
mov
push
push
push
pop
das
and
or
filds
pop
jno
enter
orb
aas
shr
mov
cmp
mov
cmp
add
sbb
jmp
or
enter
cmp
adc
adc
jae
pop
test
push
xchg
std
mov
mov
jmp
add
inc
jnp
or
push
mov
cmc
or
xchg
mov
es
push
inc
dec
cltd
lods
inc
xchg
fwait
mov
sub
outsl
sbbl
aaa
in
shrl
pop
imul
and
rcr
iret
or
mov
mov
icebp
into
sti
jnp
xor
push
dec
mov
dec
orl
mov
dec
mov
mov
jg
pop
mov
stc
and
scas
or
daa
jb
pop
jle
imul
mov
pop
arpl
adc
and
xchg
faddp
ja
cltd
mov
mov
lods
rorl
gs
int
or
daa
into
icebp
push
add
jo
std
ds
je
and
ja
and
sti
pop
test
shrb
cmp
pop
cmc
iret
cmpsb
add
sub
pop
jmp
adc
leave
push
pushf
aad
adc
aaa
add
lds
push
data16
push
push
out
cwtl
xchg
sahf
test
pushf
sbb
push
test
andb
cld
cmc
or
sub
xchg
jne
cmc
std
inc
scas
inc
lea
add
mov
dec
jns
jg
out
rol
shlb
sbb
jae
cltd
call
adc
stc
jno
xor
jb
jne
jl
mov
add
jb
mov
lea
xchg
rorl
rcll
lahf
add
and
and
jp
ds
hlt
movsl
or
xor
insl
jge
pop
enter
sbb
cmp
or
and
cmp
push
mov
pcmpeqb
or
add
adc
and
jmp
inc
mov
pop
lods
dec
mov
add
adc
lds
jle
or
jge
mov
cmc
lods
pop
inc
pop
lahf
cmp
arpl
push
cmp
adc
mov
negb
lcall
daa
pop
sbb
int
mov
or
add
fisttpl
addr16
pop
mov
push
test
jb
imul
in
inc
push
mov
addb
aas
xor
xchg
and
xlat
mov
mov
mov
cmp
pop
cmp
addr16
shl
cmp
push
test
in
movsl
dec
adc
pop
lahf
lea
xor
negb
iret
xchg
mov
lret
cmp
add
push
cmp
cmp
mov
jle
jmp
add
and
cmc
or
cli
repz
cmp
add
in
inc
fs
sub
scas
repnz
fwait
dec
jnp
leave
adc
call
lds
scas
ret
test
mov
cmp
ficomps
pushl
push
cmp
dec
mov
popa
jnp
adc
sbb
testl
mov
out
dec
lahf
adc
movsl
das
inc
hlt
stos
ljmp
imul
shll
aas
add
cs
jb
mov
out
loop
jp
inc
in
jne
add
or
addb
mov
push
push
ret
shlb
stc
mov
mov
in
xchg
rorl
je
fwait
xor
adc
scas
jns
jae
stos
ficoms
std
xor
sub
sbb
dec
xor
xchg
or
inc
scas
lods
mov
mov
mov
das
fisubrl
push
mov
or
mov
imul
push
push
imul
xchg
call
scas
popa
cmp
popl
insl
inc
dec
int
jle
cmp
imul
ret
movsl
adc
xor
push
cmp
dec
add
fdivl
jns
jb
int3
xor
dec
insl
and
xchg
fisubrs
sbb
ret
loopne
lock
test
out
dec
push
add
mov
das
pop
leave
add
imul
insb
ds
idiv
ds
push
fnstcw
inc
push
jne
out
cmpsl
fs
add
repnz
sti
push
in
pop
cwtl
xchg
mov
gs
ffree
xchg
test
and
jno
jmp
lods
push
jmp
fwait
push
push
xor
pop
or
lret
jae
mov
cmp
or
ss
dec
add
cmp
xor
pop
lret
inc
jns
fwait
cmp
mov
divps
push
scas
sbbb
lds
das
jle
xlat
iret
dec
add
incb
mov
sbb
fs
hlt
faddl
lret
and
pop
fxch
test
std
in
jp
fidivs
add
test
lods
or
loope
cmp
push
out
adc
xor
scas
and
arpl
js
repz
stc
mov
cmp
jp
out
and
jecxz
pop
es
test
adc
je
or
sub
data16
cmpsl
pushl
addr16
aad
stc
push
or
ret
mov
inc
pop
jno
addr16
mov
lock
push
dec
mov
adcl
jbe
sbb
inc
out
pop
daa
cwtl
pusha
dec
mov
pop
cmp
repz
lret
push
arpl
arpl
jl
scas
clc
xor
add
lret
mov
lock
sbb
mov
rcll
add
inc
ficoms
lods
dec
insl
out
jae
mov
nop
fistpll
addb
sub
sbbb
cltd
pop
adc
pop
inc
push
xor
jno
push
stos
fsts
jl
adc
aas
in
inc
sti
or
ss
imul
shl
or
lahf
cmpsl
lahf
stc
aam
jno
arpl
add
repz
fisubrs
aas
pushf
xchg
scas
clc
pop
push
divl
popf
adcb
and
lret
lea
out
sbb
xlat
adc
sbb
in
dec
jle
or
stc
cmpb
xor
es
les
mov
mov
lret
roll
and
sbb
xchg
hlt
lret
enter
mov
inc
mov
xchg
and
jne
inc
icebp
in
cmc
cs
sub
les
mov
mov
xchg
fsubs
sub
pop
dec
jg
sub
add
add
add
clc
sahf
out
or
repnz
imul
add
das
rclb
mov
test
mov
inc
cs
outsb
pop
mov
ret
xor
popa
xor
loope
scas
sub
aas
xchg
pop
adc
in
cmpsl
pop
lods
lret
push
sbb
inc
fs
orb
loope
hlt
jl
lcall
es
mov
dec
aad
mov
out
jb
sbb
test
jl
sbb
leave
and
sti
stos
push
mov
push
call
gs
cmp
es
js
cmp
imul
movsb
pop
mov
popa
movsb
rolb
push
inc
movsl
pop
pop
test
leave
ret
dec
out
cmp
out
push
sub
pop
repnz
lahf
aad
and
cmova
out
hlt
fdiv
xchg
inc
call
xlat
repnz
mov
inc
out
cmpl
aaa
or
jno
iret
xor
sub
aaa
adc
add
sbb
pop
insb
std
mov
fnstenv
mov
sar
lcall
das
and
arpl
jle
mov
push
fildl
adc
jp
jle
ss
xor
mov
push
notb
cmpsl
pop
loop
mov
push
gs
adc
xor
inc
es
and
cmp
test
jp
cli
fs
mov
sub
fimuls
cmp
mov
andb
jbe
ja
inc
sbb
adc
mov
and
out
das
cld
xchg
ljmp
lock
xor
movsb
bound
into
and
insl
inc
hlt
jb
jg
aad
inc
xor
xor
cmp
lret
push
stc
inc
pop
stos
mov
adc
jbe
adc
iret
mov
mov
push
lea
imul
jo
dec
pop
idivl
push
mov
cmpl
inc
mov
add
loop
inc
add
js
test
aad
jp
stc
or
push
scas
add
or
and
hlt
push
andb
hlt
jg
cwtl
das
cld
fisubs
push
add
inc
out
idiv
sbb
insb
xor
lahf
sbb
in
pop
mov
lahf
sub
data16
push
xchg
sub
sbb
lock
ljmp
mov
cs
pop
lcall
clc
aaa
test
dec
int
in
or
sbb
mov
mov
cmp
sub
adc
ljmp
ds
in
sar
jp
scas
dec
shlb
jbe
xor
xchg
test
xor
jb
iret
pop
loop
add
lahf
icebp
stc
mov
loop
call
imul
icebp
dec
gs
xchg
ret
popa
pop
mov
push
xchg
jb
clc
decl
mov
dec
push
jge
xchg
mov
int
lret
scas
adc
jg,pn
cs
pop
scas
cwtl
jmp
mov
cmp
cmp
cmp
mov
popa
repnz
or
call
in
mov
call
int3
or
jb
sbb
scas
xor
mov
push
repz
mov
inc
pop
rorl
cmc
rcrl
add
dec
ja
and
adc
insl
push
out
es
in
lods
pop
test
lds
test
repz
push
inc
pop
push
cmp
sahf
fwait
add
or
je
ds
or
cmp
mov
dec
test
mov
cmpb
xor
and
sar
stos
mov
andl
daa
ret
inc
int
adc
je
subb
cld
leave
pop
fdivs
ds
jns
mov
lcall
in
sbb
rclb
xchg
mov
dec
int
add
cmp
cmp
outsl
sub
adc
adc
xor
shll
nop
jmp
adc
adc
mov
push
je
sahf
mov
movsb
test
aad
popa
sbb
mov
icebp
in
jno
inc
fst
adc
lret
mov
in
das
mov
mov
and
push
popf
pop
lods
sbb
jg
mov
int3
dec
sub
or
imul
int
xchg
hlt
or
pop
cmpsb
push
outsb
dec
push
ffree
fidivs
movq
loopne
and
or
std
subb
pop
jbe
fs
hlt
inc
sub
out
mov
lea
rolb
pop
mov
mov
mov
dec
cmc
inc
sahf
orl
or
ja
inc
lahf
scas
mov
inc
out
sbb
pop
aas
jle
sub
pop
stos
int3
sub
je
ds
sbb
addl
dec
mov
xchg
inc
xor
xchg
mov
jnp
adc
xor
mull
ds
daa
push
push
imul
adc
and
mov
aam
lret
xlat
xor
in
ja
jne
arpl
mov
out
cmc
sti
add
into
daa
sub
movsl
jnp
out
movsl
sub
in
stos
jne
lods
push
jle
fistpl
inc
mov
cld
pusha
adcb
lods
loop
pop
push
push
lret
jne
cmp
jp
insb
stc
mov
cmp
arpl
sbb
cwtl
jns
dec
and
gs
cltd
and
push
sub
incb
push
cmp
pop
stos
mov
in
push
xchg
leave
dec
mov
addl
insb
fwait
lahf
mov
lcall
push
inc
push
fiaddl
mov
sub
stos
in
adc
mov
sub
imul
inc
test
in
ffreep
jge
push
int3
in
shrb
sub
push
jnp
int
mov
adc
dec
push
mov
das
add
add
adc
add
sub
cmp
sbb
jl
in
stos
mov
es
jge
mov
lret
adcb
pop
inc
dec
cmpsb
dec
xor
dec
xchg
add
movsb
inc
int3
mov
cli
jne
sbb
int3
push
fisttpl
shr
push
mov
inc
insb
sbb
xor
xchg
or
pop
mov
fwait
cmp
popf
push
sub
lret
adc
insl
dec
int3
jmp
fistpl
mov
insb
xchg
add
push
in
jo
loop
or
dec
aam
mov
fadd
sub
mov
mov
add
add
shlb
jg
stc
ficoms
inc
and
cmp
fsubrl
jo
add
pop
add
cs
cmp
inc
mov
int
mov
jg
add
or
jp
mov
push
imul
stos
or
push
mov
fs
subl
lcall
jecxz
add
imul
bound
testl
and
call
es
out
sub
xchg
jmp
and
mov
fs
pop
and
aaa
ret
lret
cmpl
xchg
aam
imul
testl
lods
pop
xor
pop
xchg
cmp
or
inc
subl
sub
inc
or
jge
push
lods
fs
fsts
leave
and
rcl
aaa
sti
inc
pusha
cmp
shlb
and
rorb
push
cmpsl
out
jbe
cmp
sbb
xlat
xchg
cmpb
xchg
fistpl
decb
int
inc
dec
sbb
cmp
dec
sete
ret
inc
pop
scas
dec
outsb
rorl
out
movsb
pop
repz
jle
in
xlat
xchg
clc
leave
pop
xor
sbb
fs
gs
pop
mov
test
icebp
lahf
shll
xor
js
rclb
dec
jne
test
xlat
hlt
dec
clc
or
test
cwtl
dec
and
pushf
or
adc
pop
jae
sub
xor
and
add
sbb
dec
mov
jecxz
cld
addb
out
xor
mov
pusha
pop
xor
ret
mov
xor
mov
mov
and
mov
jp
xchg
cmp
loope
in
push
pop
add
test
int
lahf
in
push
cwtl
adc
jno
out
ret
mov
and
xchg
inc
cli
repz
fmull
mov
mov
fld
bound
cmovb
xor
or
and
add
xor
push
popf
pop
xchg
mov
dec
mov
sub
mov
xchg
cmpsl
xchg
fs
fwait
push
jmp
pop
or
cmp
cs
mov
mov
es
cmp
xchg
mov
sub
nop
in
push
adc
mov
lahf
dec
sahf
sub
pop
sbb
sub
outsl
jmp
outsl
xlat
filds
js
int3
lcall
out
or
pop
out
xchg
sbb
push
lret
bound
dec
sub
nop
rolb
loop
add
mov
arpl
imul
add
pop
inc
add
hlt
mov
ret
aas
add
cmp
and
add
and
into
aas
xchg
add
test
or
nop
push
mov
lods
jmp
sub
js
in
mov
or
dec
idivb
fdivp
sbb
adc
iret
mov
clc
imul
bound
dec
add
mov
insb
pop
or
jecxz
aas
xchg
stos
mov
lcall
mov
ret
stos
push
sahf
jne
call
mov
call
fdiv
xchg
push
pop
push
sbb
outsl
lods
sbb
xchg
pushf
add
imul
pop
ret
stos
lcall
sbb
lods
jge
jno
jl
pop
les
scas
shlb
sub
stc
test
mov
cmpl
dec
jle
mov
mov
stc
adc
fidivrl
aad
nop
iret
dec
filds
add
stc
ret
mov
mov
loop
sbb
jmp
add
daa
mov
sarl
test
inc
dec
movsb
inc
or
pusha
dec
test
pop
jb
mov
and
cmpsb
push
adc
jge
adc
dec
es
mov
popf
jb
cli
out
mov
icebp
lcall
movsl
cmpsb
sahf
sub
sub
mov
test
not
mov
movsl
jle
ds
cmpsl
popf
in
out
in
out
jl
dec
popa
sub
xchg
lahf
inc
dec
ljmp
mov
sub
dec
or
cmc
adc
movsl
cltd
sbb
gs
xchg
imul
pop
push
inc
aas
xchg
ret
movsl
sbb
xchg
xchg
iret
mov
pop
popl
mov
pusha
sbb
xor
lds
cmp
enter
inc
stc
call
dec
pop
mov
aad
jno
xchg
or
call
dec
popa
push
xchg
sub
pop
testb
nop
nop
mov
mov
sub
icebp
sbb
insl
cld
outsl
das
lods
or
push
popa
cwtl
mov
aam
shll
jle
adc
dec
jl
cmc
mov
clc
sbb
into
in
xchg
add
xlat
test
cltd
jo
fxch
or
mov
mov
pop
cmp
xor
cmp
or
imul
shlb
pushf
jb
inc
imul
arpl
out
mov
sub
mov
nop
testl
fisubl
inc
and
mov
out
dec
pop
sbb
mov
inc
mov
dec
mov
sbb
jmp
into
imul
jp
sahf
imul
fstpl
lcall
lcall
into
test
mov
bound
mov
lods
or
leave
mov
negl
mov
mov
pop
pop
out
stos
decb
mov
pop
or
movsl
lods
arpl
sub
shrl
out
mov
lcall
mov
xor
sub
sbb
out
lds
mov
test
xor
pop
je
jl
cmc
ljmp
sub
call
fwait
adc
aad
cli
rorb
call
or
push
shll
xchg
pop
imul
push
loopne
lret
das
lods
bound
subl
ret
sub
xlat
ret
mov
out
add
jb
mov
mov
mov
or
aaa
stc
and
push
fsubrl
test
dec
adc
pushf
pusha
lret
jmp
inc
gs
divb
lods
xchg
pop
jb
xlat
push
jne
xor
mov
jmp
push
int3
out
inc
lret
scas
lahf
dec
cwtl
cmp
pusha
sbb
and
cwtl
aas
loope
repnz
int3
jecxz
fsubr
loope
push
insl
dec
lret
xor
mov
xchg
notb
xor
mov
movsl
jbe
jp
inc
mov
sarb
adc
cmp
int
das
fcoml
imull
mov
nop
sti
mov
add
add
and
mov
pusha
fidivrs
add
and
add
dec
jg
fstps
xchg
aad
pop
jmp
es
mov
pop
push
outsb
clc
mov
mov
js
mov
or
scas
gs
and
xor
mov
lock
sub
cmp
adc
sahf
sub
test
push
or
test
add
adc
ja
mov
subb
push
mov
call
pop
mov
setle
setge
xchg
mov
add
scas
std
mov
push
dec
adc
mov
sub
cmc
mov
jecxz
cmpb
arpl
imull
mov
not
mov
sbb
inc
test
sub
test
repnz
add
lahf
lcall
cmp
pusha
and
je
mov
daa
jns
out
mov
lret
out
cmp
cmp
push
inc
shrb
and
lret
pop
repnz
push
test
jbe
cmp
fwait
sbb
scas
in
or
outsb
sti
loope
sbb
mov
and
push
jge
das
ss
mov
mov
jecxz
mov
scas
jnp
mov
test
jae
test
aaa
int3
repz
cmp
adc
sbb
sub
push
in
pop
ja
adc
mov
xor
or
jnp
lds
js
repz
test
cmp
out
imul
or
adc
shlb
mov
mov
outsb
sbb
ss
sbb
xor
mov
fildll
pushf
call
adc
sub
cli
cmp
data16
ret
cmp
stc
fstl
pop
loopew
pop
lds
scas
xchg
xor
scas
stc
push
inc
ret
fistpll
loop
xchg
xchg
pop
and
mov
mov
arpl
jecxz
sbbb
insb
mov
jnp
inc
xchg
std
iret
cmpsb
xor
sub
enter
add
mov
scas
outsl
aas
outsl
leave
shlb
loope
sahf
mov
or
or
xchg
loope
xorb
sbb
mov
stc
dec
lea
add
or
lds
loope
pop
or
outsl
inc
cmp
filds
xchg
push
cmpsb
pop
ficoml
mov
mov
aam
jb
lcall
xchg
and
int3
cmpsb
adc
dec
pop
pop
jb
xor
xchg
in
pop
test
xchg
outsl
bound
push
lea
dec
xor
pop
jnp
das
cmp
inc
cmc
xor
rclb
lcall
shrl
mov
jns
rcll
jle
adc
ret
inc
jle
mov
lcall
dec
adc
jp
in
xchg
pop
sbb
dec
pop
add
push
in
mov
aas
out
sbb
test
cmpsb
popf
jl
or
hlt
loopne
sbbl
negb
scas
push
fdivrs
das
test
pusha
inc
cmp
outsb
test
sub
lods
push
scas
test
rol
rclb
in
jle
rcrl
shr
mov
jmp
loop
sub
cmp
pushf
xchg
mov
pop
out
jno
aaa
mov
es
add
testl
and
jne
xlat
adc
and
cmp
outsb
dec
mov
fs
jg,pt
sbb
mov
and
jp
cmp
shrl
outsl
jp
sub
test
add
insl
shrb
inc
idivl
imull
mov
and
js
js
adc
mov
shl
mov
cs
pop
jae
in
cmpsb
push
jno
aam
push
push
gs
mov
push
lret
test
dec
add
adc
jmp
xchg
test
push
pusha
into
push
pop
popa
dec
or
add
nop
loope
or
lock
stos
inc
addr16
call
sbb
and
lock
jl
xchg
dec
rclb
call
cld
jne
movsl
push
fwait
mov
fcmove
push
in
sub
pusha
sarb
adc
push
push
jnp
addr16
movsb
enter
and
addr16
dec
sbb
push
rorb
ljmp
ljmp
out
fbld
add
inc
push
sbb
lods
sbb
inc
xchg
nop
dec
cmp
or
pop
scas
fmuls
jne
int3
add
shll
push
push
les
mov
inc
adc
cmc
xlat
sbb
sub
push
pop
adc
shlb
adc
movsb
mov
je
xor
mov
dec
xchg
push
gs
fdivp
fmull
mov
inc
rclb
inc
test
repnz
lock
jb
pop
shrb
or
fidivrl
adc
nop
loopne
inc
and
iret
mov
shll
nop
out
pop
stc
aas
imulb
add
testl
jbe
repnz
sub
repnz
imul
addr16
pop
jmp
movsl
lahf
fcoml
jno
daa
jmp
xor
cmpsl
mov
cmp
ja
cmpsl
out
push
mov
roll
outsl
mov
xchg
call
sti
xor
inc
cmp
aaa
xor
xchg
test
jge
sub
pusha
dec
push
std
sbb
adc
inc
in
pop
push
sbb
imul
adc
test
inc
mov
mov
pusha
jo
sbb
mov
pop
shrb
int3
lahf
xchg
jns
insl
enter
adc
int
stos
mov
mov
outsb
js
nop
mov
adc
scas
add
test
push
ret
rcrb
xchg
es
loope
mov
xchg
mov
adc
stc
mov
mov
adcl
movsb
sub
insb
aaa
outsl
xor
insb
cmp
xchg
arpl
pop
fdivrs
js
fldenv
inc
mov
and
insl
or
lret
daa
xor
je
popf
jmp
insl
enter
fisubrs
push
insl
adc
call
push
insl
fdivr
push
sub
jbe
mov
or
xor
loopne
jle
lods
je
pop
adc
fdivrs
cmp
in
rolb
cld
mov
in
sbb
xor
pop
lcall
fildll
rclb
mov
add
add
add
popa
push
pop
jmp
jle
js
aam
cmpb
and
add
mov
mov
test
gs
jecxz
ficomps
and
test
xor
or
jae
cmp
dec
sub
out
sbb
push
jmp
es
push
or
das
xor
dec
enter
lcall
jmp
outsb
out
dec
lock
jae
pop
dec
dec
sub
pop
out
in
mov
mov
mov
sbb
cmp
jmp
out
test
sarb
mov
call
pushf
adc
or
dec
scas
lods
inc
push
or
cli
aaa
pop
jae
lahf
cmp
jmp
mov
call
call
rorl
mov
loop
fwait
push
pop
mov
dec
insl
loope
sub
aaa
jb
inc
test
mov
pop
insl
sub
mov
cmp
or
vandpd
push
push
aad
cmp
andl
out
lds
stos
sbb
mov
ljmp
xchg
fnstenv
out
sbb
testl
inc
sub
push
pop
jbe
loope
dec
and
mov
jbe
enter
or
or
add
jns
and
call
pop
repz
rcrb
inc
inc
outsl
mov
adc
rcr
insb
mov
sahf
shll
imul
xor
outsl
cmp
nop
mov
dec
dec
inc
fs
pop
jmp
inc
cs
pop
icebp
testl
push
mov
repnz
outsl
leave
out
mov
mov
pop
or
xor
and
inc
push
add
mov
js
sbb
movsb
sbb
sub
lret
js
testl
mov
cmp
push
stos
push
mov
repnz
cmp
stos
mov
mov
movsl
scas
push
out
mov
mov
xlat
aas
loop
lahf
adc
push
loope
pop
scas
test
push
inc
aas
mov
sbb
and
jg
fwait
cmp
ret
arpl
add
addr16
daa
outsl
xchg
stos
jbe
mov
or
int3
mov
fisttps
jne
fwait
add
jge
ret
leave
leave
nop
sbb
mov
call
and
stos
hlt
mov
insb
dec
adc
mov
out
mov
scas
mov
leave
test
ret
les
or
xor
mov
pop
pop
sbb
sub
imul
mov
fdiv
addr16
gs
out
push
inc
loopne
mov
addr16
lock
jp
push
jb
cmpsb
idivl
sbb
jl
lods
mov
stos
inc
es
rorb
sbb
jbe
ret
xchg
xchg
movsl
pop
adc
xchg
addr16
dec
rcr
pop
gs
aam
cmp
inc
pop
mov
outsb
rcr
mov
jle
cmp
push
add
push
mov
or
adc
dec
push
inc
and
and
push
sub
cmp
aas
sub
es
sub
dec
inc
sbb
sub
orl
cs
arpl
cmpsb
jle
in
or
sbb
sbb
add
les
shl
insl
js
mov
jno
pop
and
jbe
sbb
push
xchg
or
pop
arpl
fcmovnb
lods
pop
mov
aaa
xchg
scas
sbb
clc
fnstenv
and
xor
scas
pop
sbb
adc
imul
jae
or
push
cltd
loop
outsb
lret
dec
xchg
sbb
loopw
mov
mov
sub
mov
adc
gs
mov
or
out
ret
pop
or
jnp
add
xchg
jbe
ds
cmp
push
pop
lock
hlt
loopne
cmc
outsb
xchg
inc
pop
xlat
popa
fs
xchg
test
test
mov
ficoms
repnz
dec
lret
xor
mov
in
fsubs
fidivrs
xchg
jae
int
inc
lcall
jae
inc
bound
cmp
fsubr
insb
jmp
jb
xchg
and
popa
xchg
in
fs
movsb
movsb
push
adc
lahf
mov
jge
push
ret
addr16
pusha
push
push
push
pop
les
ja
icebp
hlt
cmp
or
mov
sbb
daa
jmp
stos
loop
movsl
ljmp
pushf
push
cmp
fs
addl
movsb
jge
in
orb
jae
and
adc
aam
dec
repnz
push
jnp
in
jo
dec
xchg
or
jno
mov
xor
cli
xchg
sti
mov
add
mov
inc
push
test
push
adc
into
dec
frstor
mov
lods
lretw
mov
inc
mov
or
jecxz
mov
ss
jmp
push
add
jp
cmp
fstps
cmpsl
or
test
mov
mov
int
cmp
jmp
and
imul
test
mov
jle
xchg
push
sbb
mov
lods
cmp
out
push
rcl
mov
sub
fwait
cmp
pop
pop
cmp
jo
fidivs
imul
adc
cltd
fisttpll
test
cmpsb
mov
ds
push
and
in
test
mov
sbb
mov
lret
mov
lcall
mov
fcoml
dec
cmp
push
imul
dec
arpl
xchg
jnp
mov
pop
dec
repz
cwtl
int3
mov
add
adc
pop
cli
or
pop
jle
call
mov
in
adc
mov
cmpsb
push
xchg
push
addr16
out
cmp
out
add
or
cmp
repz
cs
fnstsw
filds
adc
in
xor
rclb
mov
ljmp
out
push
xor
loope
dec
cmp
fistpl
sub
inc
popf
mov
mov
mov
inc
dec
stos
sar
in
adc
sub
or
adc
shlb
pop
loopne
sbb
push
and
es
lret
fadd
jecxz
hlt
ja
cli
add
or
jo
rcl
adc
loope
std
ret
pop
repnz
fldl
jnp
mov
dec
mov
addr16
sbb
jbe
push
mov
and
mov
add
add
add
test
mov
jecxz
arpl
jp
xor
pop
add
mov
xor
or
mov
icebp
out
fsubrl
cmp
test
cmc
mov
push
es
jno
nop
mulb
jp
ss
add
shlb
fdivrl
jecxz
and
stc
sbb
call
iret
ds
sbb
mov
jo
adc
cmpsl
xchg
jne
fwait
gs
inc
popf
or
dec
or
xor
cmp
push
in
push
sbb
lds
call
inc
sub
mov
adc
insl
repz
pop
inc
adc
or
test
push
ja
add
jp
nop
jl
adc
xchg
jge
push
jle
cmp
out
daa
arpl
jo
imul
pop
mov
or
das
imul
fiadds
inc
pop
loopne
mov
imul
pop
xchg
cmp
test
arpl
cmp
into
mov
jno
adc
out
xor
xchg
jmp
fidivs
xchg
lods
movsl
jb
mulb
pop
pop
jp
aad
push
outsl
adc
mov
and
jne
push
int3
mov
mov
jne
das
jecxz
aaa
fsts
jecxz
arpl
pushf
adc
loopne
push
fidivrs
sub
in
ljmp
adc
stc
rcll
mov
mov
sub
dec
fidivrl
imul
push
push
shlb
or
add
jno
push
xor
cmc
xor
idivb
sti
cmp
filds
mov
rol
jle
fstps
sti
and
adc
jmp
xchg
cmpsl
mov
out
rol
mov
js
shlb
inc
repnz
inc
mov
inc
mov
test
jno
insb
push
ljmp
ficomps
xchg
cmp
mov
mov
pop
fcoms
lea
shlb
or
push
push
jno
push
jnp
pop
cltd
ficompl
test
cmc
mov
int
in
std
movsl
sub
ljmp
sub
mov
xchg
or
idivb
jae
add
pop
xor
mov
push
scas
push
ret
cmp
inc
dec
and
xor
arpl
lods
sub
cs
fiadds
mov
andb
and
jne
movsb
fsub
jno
mov
mov
pop
shll
enter
and
dec
test
cli
in
out
test
dec
out
filds
ret
and
mov
es
jne
ss
jbe
xchg
or
or
push
add
and
push
cs
fidivs
dec
out
sbb
jge
inc
sti
sub
aas
roll
xor
push
dec
arpl
pop
sbb
jns
rorb
inc
ret
bnd
inc
dec
leave
xchg
pop
orl
flds
add
xor
loop
sub
dec
or
sti
xchg
or
addl
xor
jo
and
ljmp
lds
ljmp
and
add
fcmovnb
sub
ret
rclb
mov
or
push
dec
test
inc
in
fsts
xchg
pop
iret
nop
fsts
imul
push
lods
ja
roll
cmp
jle
cmp
push
cmpsl
loopne
ret
dec
arpl
std
out
xlat
idivl
xor
idivl
push
fadd
mov
shrb
js
mov
iret
cmpsb
xchg
adc
orb
in
dec
test
xor
out
outsb
dec
aam
fwait
dec
jecxz
nop
stos
fbld
jl
and
jo
ljmp
testb
aaa
sbb
dec
sub
dec
xor
add
xchg
outsb
pop
adcl
push
scas
sbb
pop
add
test
push
push
testb
in
dec
mov
cmp
add
add
push
adcl
inc
xchg
sub
fs
xchg
jle
imul
mov
adc
xchg
jo
test
aaa
cli
stos
dec
fstpt
push
fsubl
fsubs
mov
xorl
push
sbb
lcall
outsl
xchg
fcmove
sub
pop
push
nop
pusha
les
fiadds
or
daa
mov
push
mov
or
iret
in
pop
push
mov
jmp
ja
sub
add
cmc
andl
leave
out
jle
xchg
arpl
leave
cmp
jl
mov
add
sbb
mov
xchg
outsl
mov
mov
js
iret
fcomip
xlat
ja
mov
add
mov
mov
push
pushf
xchg
mov
push
mov
lcall
gs
cmp
movsb
lret
lret
aas
cmpsl
sarl
sub
adc
int3
out
arpl
mov
inc
push
adc
pop
insl
leave
shl
sbb
mov
sbb
subb
xor
bound
test
push
pop
sbb
sub
idivb
insb
int3
stos
mov
push
lds
mov
pushf
xchg
dec
clc
or
dec
or
fsubl
repnz
scas
jp
pusha
fidivs
loop
mov
in
dec
fmull
inc
jae
mov
dec
xor
sbb
cmp
xchg
mov
jl
fcmovu
insl
inc
lods
mov
mov
and
mov
mov
mov
inc
pop
mov
cmp
fwait
sub
out
std
lds
imul
cmp
jg
xor
jo
pop
cwtl
repz
test
fstl
gs
addl
jb
jbe
adc
mov
mov
or
cmp
xor
sarl
rcll
mov
iret
enter
scas
add
jmp
addr16
sub
dec
push
cmp
xor
or
call
rcrl
pop
pop
jno
dec
decb
push
in
and
out
and
cltd
xchg
lahf
das
push
ret
cmpsl
adc
cltd
stos
lock
popa
mov
test
pop
shll
push
cmc
adc
and
pop
hlt
xchg
into
sub
mov
imul
sahf
sbb
loope
testl
jb
adc
dec
dec
cs
or
aam
fsubr
pop
es
mov
pop
push
or
mov
data16
out
aam
out
fnsave
pop
cmp
jne
pop
push
add
mov
int3
push
inc
sub
push
dec
scas
stos
mov
pop
pop
adc
int3
mov
scas
lret
add
add
add
adc
aas
pop
push
jb
stc
decl
add
and
add
cmpsb
and
dec
ljmp
inc
loopne
insb
jge
sti
mov
adc
sbb
xchg
mov
push
mov
cli
stos
incb
mov
cmp
daa
push
cmp
add
sti
es
mov
cmp
jb
jne
jp
lea
outsw
ret
cmc
cmpsl
je
and
pop
push
std
lds
xchg
xor
out
push
fidivs
out
sub
sub
popa
sarb
sub
fimuls
shll
ret
or
shll
vmwrite
sarb
pop
push
jg
lods
xor
xchg
lret
sahf
sub
insb
sti
xchg
xchg
inc
test
add
xchg
ds
pop
cld
xchg
fisttpl
xor
loope
push
lcall
sbb
xor
fdivs
ds
insl
sbb
cld
pop
push
int
xchg
gs
mov
push
and
push
call
in
std
push
mov
cmpsb
into
and
add
test
dec
and
rcll
in
shlb
je
movsb
xchg
stos
test
inc
fs
push
lds
cli
scas
push
rcrl
or
scas
repz
enter
loope
fadds
dec
dec
push
ja
outsl
stc
mov
cmc
clc
push
lea
mov
mov
decl
sahf
lret
lret
aam
lcall
daa
adc
xchg
adc
inc
adc
xchg
or
daa
lahf
cmpsl
std
jge
std
nop
fldt
mov
ds
imul
xchg
cmp
les
dec
mov
dec
pop
mov
pop
inc
dec
sub
aam
cmpsb
xor
mov
jl
mov
xchg
dec
fs
inc
sub
add
lret
jp
inc
xor
outsl
pop
daa
push
dec
lahf
cld
fiadds
lahf
ja
mov
jns
sbb
out
xchg
sar
lret
sub
in
mov
sbbl
mov
insb
lods
lret
pop
or
clts
mov
mov
and
pop
mov
sub
inc
sbb
xchg
out
enter
jne
pop
mov
push
and
mov
mov
test
shrb
pop
jb
pop
adc
pop
dec
je
jne
cs
or
leave
and
sub
mov
call
mov
pop
xor
out
mov
xchg
or
pop
xchg
sahf
mov
test
xchg
mov
xor
int3
out
sbb
sub
jg
add
cmpsb
cltd
data16
cmc
fucomp
cltd
lods
jmp
pop
faddl
mov
fsts
dec
push
xlat
gs
ja
sahf
pop
mov
xchg
push
sahf
add
xor
xchg
add
mov
pusha
xor
shll
pop
hlt
out
divb
push
or
rclb
sbb
cmp
jge
fcmovb
sub
into
mov
push
pushf
stc
cli
pushf
popa
cmc
imul
sbb
xchg
xchg
jbe
mov
adc
and
in
push
aaa
je
adc
out
adc
mov
shrb
fsubrp
ja
pop
and
ret
fcoml
cmp
enter
leave
dec
out
and
mov
cmp
subl
adc
push
enter
inc
je
sbb
imul
loopne
mov
ffreep
sbb
pop
lahf
sbb
imul
jg
add
and
mov
push
je
movsb
add
ja
pop
es
fistpll
out
sti
xchg
data16
mov
adc
add
sbb
sbb
pop
movups
icebp
stos
pop
mov
mov
cld
test
jnp
bound
es
sbbl
loopne
and
mov
fdivs
into
call
sub
inc
push
sub
push
pop
lret
outsb
jbe
sbb
aaa
pusha
jb
cli
je
loopne
enter
push
ss
js
mov
inc
mov
push
mov
mov
xor
loopne
sub
loopne
push
xor
fisubrs
sbb
out
and
std
pop
cmp
mov
jp
in
or
xchg
clc
inc
ljmp
sub
imul
loopne
gs
and
fisubl
mov
test
inc
sarl
push
pushl
pop
mov
xor
inc
sbb
in
adc
stc
rcrl
xchg
adcl
loope
xchg
je
andl
or
xchg
jo
and
shrb
add
mov
or
ljmp
sub
jl
mov
fmuls
push
cld
ror
sbbb
leave
stos
pcmpgtb
mov
dec
inc
aas
es
and
iret
and
lahf
jae
xor
ss
cmp
dec
sub
fs
fs
pop
add
sbb
push
fsubrs
out
int
ja
or
jnp
push
call
xchg
ja
mov
movl
addr16
mov
stos
call
daa
push
sarl
cmpsb
cmc
or
cwtl
int
mov
inc
notb
lret
sbb
jnp
add
pop
mov
jo
add
jae
cld
pop
mov
jle
leave
dec
lds
cmp
in
sahf
mov
data16
jns
pop
jbe
sub
mov
sub
mov
mov
mov
jge
data16
jl
stos
jge
adc
stc
in
ficoms
je
rol
sbb
mov
pop
jle
popf
sub
sub
push
popa
lahf
cmp
push
ljmp
mov
je
and
xchg
pop
xchg
add
stc
lret
nopl
push
rcrl
aaa
dec
addl
fildll
xor
inc
and
inc
sub
sbb
xor
icebp
xchg
jo
pop
or
inc
fisubrs
jecxz
jae
cmp
sub
fistpll
or
adcb
adcb
jo
cmpsl
mov
xchg
xchg
push
fs
mov
jle
adc
xor
pop
cli
test
ffreep
ljmp
mov
dec
push
and
mov
lret
xor
call
gs
and
and
push
repz
shrl
jp
xchg
dec
jge
pushf
lods
dec
mov
sub
adc
sub
pop
mov
mov
inc
add
cmp
out
sub
cmpsb
aaa
dec
xchg
xor
pop
mov
lea
sbb
mov
add
add
add
push
lea
into
out
popf
adc
xchg
add
and
add
mov
rclb
dec
lcall
push
jl
nop
mov
mov
jae
add
stos
ljmp
xchg
in
xchg
adc
loope,pt
enter
iret
data16
or
stc
sub
dec
ret
push
cmp
shll
popw
sbbl
mov
xchg
add
jge
jns
nop
jge
test
stos
pop
rclb
inc
pop
sbb
sbb
jp
mov
lret
ja
xchg
rcr
pop
je
xor
or
ret
xchg
pop
cmp
bnd
adc
enter
in
mov
xor
ret
adc
mov
aas
ljmp
and
sub
data16
inc
aam
in
cltd
add
xor
out
nop
pushf
xchg
pop
push
aad
pushf
push
cmpsb
push
aas
aam
leave
arpl
jge
fcmove
or
and
stos
in
movsb
hlt
sub
std
imul
and
js
insl
push
dec
faddp
daa
jecxz
lahf
incl
sub
jl
outsl
sahf
cmp
stos
dec
rol
push
imulb
mov
popa
inc
push
sbb
jg
pop
inc
stos
sub
pop
or
js
push
loop
push
sbb
or
insl
loope
ja
fdivr
inc
iret
in
adc
loopne
jge
and
sbb
stos
push
out
adc
push
jns
decb
mov
std
xor
divl
or
icebp
mov
mov
lret
mov
add
xor
lods
mov
stc
jns
out
mov
test
lea
sbb
jecxz
or
add
xor
push
dec
mov
push
jo
sub
xor
ret
bound
push
push
fwait
inc
add
cmpsb
test
fdiv
mov
loop
data16
push
cmp
push
insb
mov
mov
or
mov
in
test
mov
sbb
pop
push
inc
imull
in
mov
lret
leave
arpl
rcr
movsl
outsl
xor
inc
loop
mov
mov
pop
dec
mov
lock
or
addr16
sub
vunpckhps
push
sub
pop
std
int3
and
jne
shrl
cmp
lea
sbb
inc
jb
sbb
mov
jbe
in
sti
mov
out
lret
cli
rcll
repz
dec
ffreep
dec
movsb
jae
lahf
popf
pushf
inc
inc
push
pop
push
jl
jae
imul
mov
shr
dec
bound
shrl
pop
mov
mov
orb
pop
repnz
jno
test
or
xchg
lds
outsl
sahf
cmpsb
jb
frstor
and
and
mov
jle
fst
mov
mov
adc
xchg
xchg
jno
mov
mov
dec
and
in
inc
push
les
pop
xchg
cmc
pushf
cmp
popw
insb
add
cbtw
ret
mov
jne
jge
inc
push
repnz
cmp
subb
jecxz
or
out
inc
sbb
sbb
dec
movsl
or
out
sti
push
push
pushl
mov
int3
mov
aaa
dec
mov
and
int3
cmp
lods
loopne
das
data16
add
lea
cmp
jp
mov
scas
mov
test
mov
ljmp
out
push
imul
xor
clc
rorl
push
arpl
mov
aas
and
mov
mov
mov
xor
push
push
fs
daa
pop
aad
xchg
mov
in
int3
mov
xor
add
ret
dec
sub
dec
cmp
ret
sub
hlt
inc
popa
dec
lea
and
xchg
dec
jb
dec
loope
adc
mov
lds
mulb
pop
push
jno
rcl
and
pop
cmpsb
inc
loopne
add
push
and
xor
imul
pop
mov
sub
adc
jb
push
sbb
out
jp
or
cmp
test
sub
sbb
stos
and
shll
add
mov
sub
cmpsl
cwtl
in
adc
inc
push
andps
les
movsl
pop
mov
pop
js
mov
rep
nop
push
push
stos
cmp
and
pop
mov
or
jb
out
push
loop
dec
outsl
jg
xchg
xor
dec
arpl
push
dec
cli
int3
xchg
sti
jl
in
decb
neg
and
pop
mov
jne
jns
push
xlat
adcl
out
lret
outsl
xor
push
mov
or
inc
ja
call
insl
test
lcall
dec
mov
push
push
lret
dec
xchg
addr16
cmc
adc
adc
or
jl
into
sbb
and
outsl
mov
fcmovne
inc
nop
adc
lcall
pop
int3
pop
jecxz
push
out
stc
dec
pop
call
lcall
mov
adc
push
cli
mov
mov
pop
outsb
leave
scas
cmp
pop
jle
mov
pop
daa
fistpl
fbld
pop
pop
mov
xchg
cli
push
push
xlat
popl
out
daa
ds
out
jge
out
push
xlat
into
test
loop
loope
mov
loopne
sbb
shll
jno
cmp
and
add
imul
and
dec
xor
das
mov
sub
push
dec
int
xchg
push
daa
and
pop
mov
inc
mov
repnz
iret
push
stos
mov
jp
mov
inc
mov
pushl
xor
xor
aas
shrl
clc
mov
pushf
cmp
sub
lahf
xor
pop
or
mov
je
imul
xchg
pop
jecxz
and
push
stc
dec
xchg
sub
cld
into
lret
lods
fdivl
enter
mov
inc
pop
sbb
pop
and
lods
fidivrs
test
imul
pushf
pop
fmuls
mov
loop
js
ljmp
xchg
pop
loopne
pop
inc
add
int
mov
jno
test
inc
jp
lock
jno
xor
pop
mov
ror
xchg
dec
push
jp
loope
and
and
pushf
les
in
mov
and
adc
mov
icebp
ret
xor
xchg
inc
pop
lds
in
and
stos
cmp
push
sti
test
in
dec
out
es
push
lcall
adc
pushf
rclb
add
test
push
xor
and
xor
add
add
xchg
dec
jnp
sti
mov
ds
ret
lcall
pop
add
dec
gs
hlt
jge,pn
dec
inc
inc
dec
push
jne
inc
cmp
and
pop
jne
fldcw
mov
cmpb
or
negb
sbbl
lods
and
cli
outsl
rorb
pop
cld
add
jnp
cmp
xor
cli
jle
testb
or
cld
xchg
bound
cmp
cltd
shl
lcall
sub
shll
cmp
dec
insl
nop
mov
iret
and
push
jg
movsb
push
pushf
push
sub
pop
xlat
mov
inc
pop
mov
jns
insl
ret
sarb
jae
mov
jl
dec
ret
ret
out
lar
add
inc
xchg
repz
mov
enter
xchg
fcmove
or
push
push
dec
and
mov
bound
sti
popa
divl
sysenter
adc
bound
notb
outsb
xlat
loop
sysexit
mov
inc
xor
mov
int3
push
cmp
mov
sub
add
sub
pop
incb
xchg
cld
inc
lods
pop
lds
xchg
shll
mov
inc
sub
aam
xchg
loopne
fs
call
add
incb
adc
lea
mulb
sbb
daa
in
sti
ljmp
push
rcll
mov
scas
sub
scas
push
cmpsb
lcall
addr16
mov
int3
movsl
cmp
jp
xor
jne
push
or
jl
add
jae
push
subl
pop
and
xchg
out
das
out
testl
insb
mov
cmp
pop
ss
out
push
dec
push
lods
je
imul
bnd
add
icebp
leave
push
lock
in
cmc
addr16
movsl
push
xor
inc
mov
sbb
xchg
cmp
xor
sbb
leave
adc
cmp
popf
mov
in
cwtl
loope
mov
mov
lds
aas
lret
push
sub
jbe
rol
sbb
ljmp
lahf
jle
lods
add
filds
imul
fst
or
fistpl
out
jo
cltd
loop
xchg
out
fyl2xp1
sub
xchg
adc
cmp
out
inc
in
loope
outsl
stos
xchg
cmp
xchg
mov
inc
cwtl
sub
loope
push
adc
mov
jb
and
dec
popa
aad
and
lcall
movsl
das
fstps
dec
mov
inc
fs
test
andb
push
or
or
xlat
ljmp
sbb
pop
jnp
add
xchg
push
push
shlb
notl
and
add
fildl
cwtl
jp
out
xor
add
stos
sti
mov
out
cmp
xchg
mov
jg
xchg
cmp
data16
out
jmp
out
adc
sbb
inc
lock
clc
push
mov
test
adc
mov
mulb
mov
adc
movl
enter
xchg
jle
xchg
js
sub
push
sldt
aam
std
outsb
and
ds
fbstp
add
adc
div
bound
jo
imul
xchg
pop
iret
xchg
xor
repnz
adc
ljmp
into
mov
add
mov
in
xchg
push
subb
addb
sahf
addb
inc
mov
or
dec
int
aaa
jb
xor
push
jl
adc
sub
stc
push
fimull
push
jns
or
adc
cmc
out
dec
pop
dec
and
repz
fwait
dec
sbb
and
popf
jle
fmul
notl
and
jge
pop
mov
xor
push
or
or
add
cmpsl
bound
popf
mov
jo
mov
and
cmp
pop
adc
jns
repnz
pop
call
fisttps
mov
lock
cltd
mov
mov
jno
cwtl
sub
jb
push
movsl
arpl
jno
cmp
je
inc
test
mov
stos
lret
movsb
push
icebp
fs
xlat
mov
inc
inc
das
stos
jns
sub
jle
in
adcb
loop
push
icebp
jl
bound
and
outsl
insl
pop
sbb
loop
push
dec
mov
adc
insb
inc
lds
mov
xchg
cmpsl
test
inc
clc
push
jg
sub
mov
divl
pop
icebp
adc
inc
and
lods
sbb
push
xor
lock
loope
mov
mov
mov
icebp
inc
mov
jmp
filds
or
pop
mov
cmp
dec
lods
jb
lret
adc
mov
lea
stc
jp
dec
add
lahf
push
cld
xchg
mov
and
sbb
rorl
inc
int
lahf
inc
imul
or
or
daa
xchg
lahf
lock
lds
loopne
fimull
es
xor
stos
ja
push
pop
adc
add
insl
addr16
stc
sbb
and
pop
sub
shlb
arpl
sub
jg
cmpsl
xlat
inc
lea
je
test
mov
pop
cmp
or
addb
stos
jno
jno
jg
xchg
test
dec
lahf
ja
jecxz
push
adc
pop
orb
aas
pop
cmc
inc
push
iret
test
iret
xchg
ret
arpl
mov
inc
in
push
and
jl
adc
sbb
mov
ret
mov
or
add
sub
clc
and
cmp
xlat
pop
outsb
jno
pop
in
pop
pop
cwtl
jmp
popf
push
sbb
mov
push
jg
jnp
fidivs
sbb
cmpsb
mov
in
push
std
push
adc
pop
mov
pop
mov
loop
cmpl
jbe
push
scas
push
cli
or
adc
es
or
dec
fildl
gs
stos
inc
cli
pop
sbb
cmc
negb
fistpl
push
popa
push
aas
and
out
sbb
lds
lods
aas
push
loopne
jns
pop
dec
test
fldcw
in
arpl
mov
cmp
mov
inc
sbb
and
or
stos
dec
shlb
leave
pop
repz
mov
sbb
loope
mov
mov
sbb
adc
sub
movsl
jg
xchg
fnstenv
shlb
lock
es
jge
cmpsl
sub
movsb
jns
sub
inc
xor
xchg
aaa
call
and
popf
ljmp
test
mov
repnz
mov
jne
push
in
mov
sbb
push
pop
cmpsl
js
sub
add
add
add
mov
cli
cmp
mov
xor
mov
add
fldenv
test
or
mov
dec
ret
dec
pop
js
insl
inc
inc
arpl
int3
in
test
dec
mov
push
xor
pop
and
add
jns
adc
fnstsw
fisubl
cmp
imull
idivb
mov
adc
sub
sbb
sub
mov
testb
mov
push
push
bound
ret
lea
nop
inc
xor
xchg
fstpl
sbb
lea
mov
sbb
in
lds
xor
jns
adc
pop
xchg
lret
aas
cs
aad
mov
fnstcw
push
jle
push
pushf
lahf
ss
pop
add
inc
cmp
roll
sub
out
in
clc
test
jns
xlat
ss
lods
loopne
xchg
aam
lahf
popf
fmull
push
inc
cmp
cmp
test
sbb
adc
jg
push
inc
jge
pop
cli
jg
incb
in
loopne
popf
mov
pop
jbe
push
test
shll
sbb
jne
outsl
dec
xlat
ficoml
int3
pop
mov
sub
out
popa
call
subb
or
lds
out
dec
inc
repz
ss
dec
jne
stc
and
mov
icebp
jb
icebp
mov
insb
and
data16
stos
fwait
mov
sbb
xor
mov
push
in
fiaddl
and
in
and
jge
test
mov
fninit
push
cmpb
int
xor
inc
add
jecxz
push
sbb
and
push
push
dec
mov
sub
jbe
loop
gs
jmp
mov
mov
popa
shll
add
push
mov
insl
fiaddl
jno
adc
jle,pt
xor
enter
push
lcall
sbb
xor
jl
sbb
imul
jge
cld
jecxz
inc
aam
cmp
stos
leave
es
xchg
sub
popf
mov
jno
fisttpll
pop
sbb
shl
js
inc
test
ds
mov
fidivl
movsb
cmp
xor
xlat
push
mov
sub
insb
pop
repz
fbstp
mov
and
sbb
fs
fdivs
xchg
jmp
mov
das
xor
xchg
loope
fcmovb
dec
cmc
lock
push
sbb
icebp
fs
pusha
cmp
in
out
fcompl
test
or
movb
icebp
inc
test
and
in
push
cmpsl
pop
aam
imul
cmpsb
stc
popf
mov
or
dec
push
inc
outsb
scas
mov
stos
dec
push
sbb
mov
fisttpl
xor
pop
mov
in
and
cmp
iret
xor
dec
cmp
cmp
cld
fsubl
into
jb
sti
inc
pop
out
xor
push
bound
sbb
lcall
hlt
and
rcrb
call
out
rcr
mov
inc
mov
aad
mov
mov
jb
mov
xor
insl
addb
inc
aam
int3
test
outsb
adc
imulb
jge
sti
in
dec
lahf
test
int
inc
push
adc
jns
fs
popf
add
pushf
or
pop
mov
jg
mov
mov
push
sub
push
jg
pop
ljmp
xchg
mov
mov
add
and
adc
sbb
adc
ficoms
sarb
jo
xchg
xor
add
dec
into
mov
rcrl
cmpl
or
pop
es
test
jl
cli
mov
decb
sub
outsb
adc
push
inc
xchg
nop
ss
jge
xchg
std
add
subl
fidivrs
repnz
jns
adc
roll
inc
inc
sub
push
mov
ds
inc
adc
bsf
jne
add
bound
push
cmp
aaa
or
test
add
movsl
movsl
daa
subb
je
mov
shlb
inc
jno
xor
dec
and
or
add
ret
xchg
test
aaa
push
jbe
inc
cmp
jae
xchg
sbb
out
pop
pop
test
cltd
adc
in
jmp
or
std
mov
cmp
subl
pop
sub
clc
or
hlt
xchg
dec
lahf
lret
pop
inc
lret
ret
dec
jle
xchg
mov
ror
sbb
pop
xchg
and
outsl
mov
pop
sbb
lahf
fs
lods
push
sbb
sbb
stos
mov
int
cmp
cmc
sbb
fidivl
jbe
popa
inc
lea
aad
dec
cmp
bound
ds
mov
add
push
xor
int3
mov
sbb
stos
fst
call
push
shlb
repz
aam
in
stc
in
cmp
cmp
in
test
aad
addb
into
das
out
pusha
add
cltd
dec
jae
dec
rol
mul
xchg
adcb
fs
pop
mov
add
inc
inc
sub
or
add
jmp
jle
sbb
push
cmp
into
inc
push
cmp
cs
ds
push
mov
rorb
arpl
mov
roll
ss
into
aas
andb
xchg
cmp
pop
jbe
call
lock
movsb
gs
inc
adc
jno
jb
dec
or
mov
ljmp
xlat
test
popa
in
out
pushf
leave
addb
in
xchg
cmp
pop
aas
dec
sti
or
mov
stc
pop
stc
pop
add
test
pushf
incb
lds
lods
aaa
or
dec
aas
push
cmpsl
sti
arpl
shlb
jo
add
not
mov
jae
divb
jno
cmp
jl
mov
or
adc
cld
pusha
adc
xlat
xlat
mov
mov
nop
add
fisttpl
jle
mov
into
inc
mov
xchg
stos
push
scas
jl
or
adc
mov
dec
stc
mov
mov
push
mov
stos
loope
adc
and
or
repz
into
xchg
mov
shll
imul
lret
jnp
and
rorl
inc
je
fbstp
ja
or
std
inc
in
test
or
sub
dec
rolb
xor
adc
nop
mov
push
lret
or
push
mov
add
add
add
push
add
ja
xchg
popf
mov
pop
add
test
add
mov
mov
pop
gs
cmp
addl
or
lods
cmp
out
push
inc
pop
test
cmpsl
pop
xchg
pusha
movsl
cmp
pop
stc
push
jp
mov
out
cli
cmpb
aam
push
xor
mov
pop
call
fwait
lret
sbb
sti
out
test
xchg
push
mov
mov
pop
sarl
sti
mov
shl
inc
and
jmp
adc
push
decl
scas
mov
or
mov
into
jnp
sub
jmp
cltd
inc
sub
jns
push
and
movsb
mov
mov
shlb
aad
sbb
mov
jbe
fcomps
sub
icebp
ljmp
or
mov
in
loopne
daa
cmpsb
cltd
xor
mov
pop
pop
adc
jnp
mov
and
cmp
sub
and
jmp
jne
pop
xchg
sbb
das
ljmp
push
ret
mov
inc
fcoml
lea
adcl
in
fmull
jge
dec
gs
xor
mov
cmp
cmp
shlb
subl
push
out
push
shlb
and
in
jns
sbb
int3
icebp
outsb
mov
pop
jp
int3
xor
inc
jbe
mov
sub
xchg
std
fs
pop
xlat
adc
shl
lahf
and
imul
negb
cmc
aaa
push
jmp
xor
aam
lea
push
xchg
lret
mov
cmp
in
sti
xlat
xchg
in
out
and
and
add
mov
loop
notb
shll
inc
gs
add
es
xor
or
push
sub
sbb
ret
mov
bound
pop
adcl
rcll
sti
mov
insl
mov
jp
jecxz
pop
imul
adc
stc
jle
dec
xor
sbb
xor
loopne
ficoms
push
bound
jbe
in
jnp
push
icebp
and
sarl
inc
or
in
cmp
outsl
sahf
roll
adc
addr16
mov
push
lea
movsl
mov
pusha
cmpsb
pop
lock
pop
xlat
push
add
jns
dec
jp
inc
sbb
outsb
test
pop
bound
inc
xchg
lods
adc
push
imul
lods
mov
movsb
and
dec
out
mov
mov
xchg
mov
cli
xor
lret
or
mov
lar
lods
cmp
mov
sbbb
cli
movsb
xor
iret
je
outsb
jno
mov
xchg
cwtl
sub
in
add
sub
je
insl
mov
fs
loop
adcb
loop
ret
mov
imulb
addr16
out
imul
or
jle
aam
mov
aad
adc
cmpsb
sbb
or
adc
sub
and
mov
mov
mov
int3
inc
jp
addb
mov
je
shrb
push
loop
dec
mov
inc
cmpsb
or
dec
scas
es
mov
mov
in
dec
rorl
and
mov
into
out
mov
ret
sti
add
sbb
addr16
push
mov
and
sar
loope
push
hlt
jns
and
sti
pop
ficompl
lret
mov
arpl
or
push
push
lret
std
outsl
inc
jp
adc
imul
ds
mulps
xchg
dec
push
jno
xchg
ret
fnstenv
popf
pushf
jae
jnp
int
in
stos
movb
cmp
mov
push
loopne
lods
adc
fisubrs
in
aam
pop
fbstp
stc
jle
fwait
inc
stc
jne
stos
xor
xchg
in
mov
xor
repz
jp
insl
dec
xor
mov
xchg
test
out
int3
xchg
jmp
cmp
inc
or
xchg
mov
in
cmc
sub
fwait
jns
and
aam
add
pusha
rorb
popa
mov
mov
add
and
xchg
jnp
sbb
xchg
shll
cmp
fldt
lcall
and
repnz
sti
loopne
push
outsb
rcrl
fwait
sbb
sbb
fdiv
jbe
sbb
mov
jg
nop
dec
std
fsub
sahf
sub
shrb
inc
mov
inc
jecxz
bound
rcrb
inc
sti
fisttpll
sbb
scas
fsubs
push
pop
in
fwait
in
xlat
ss
cmpsb
pop
mov
xchg
add
ror
cmp
inc
sbb
or
loop
outsl
sbb
mov
aas
jae
xchg
mov
lret
call
sbb
testb
dec
and
call
xchg
push
dec
jb
in
pusha
xchg
or
and
push
and
loop
mov
rcrl
mov
mov
mov
mov
loop
inc
je
inc
jns
xchg
sub
jno
mov
lods
xchg
sbb
and
cmpsb
subb
push
adc
cmpsl
fnstenv
loopne
into
mov
imul
pop
mov
jbe
inc
call
cmc
and
in
ljmp
int
xchg
pop
lods
repnz
cmp
in
sbb
cltd
xor
divb
out
mov
sbb
mov
loop
xchg
out
jbe
clc
jne
jb
sbb
popf
jbe
les
pop
mulps
fidivrl
cmpsl
cmp
arpl
gs
mov
lcall
mov
add
or
icebp
xchg
addl
daa
cmc
and
aad
jns
pop
cmp
add
repz
mov
pop
fisubl
sbb
ss
jl
dec
mov
or
inc
push
xor
imul
sbb
push
pushf
jp
and
fwait
stos
jbe
push
mov
dec
pop
mov
and
pop
iret
xor
clc
testb
imul
fdiv
adc
mov
inc
xchg
xchg
dec
jecxz
loop
jns
add
add
add
pushf
sbb
push
sahf
fidivrl
add
stos
cmp
add
pop
add
ja
dec
push
stos
cs
sub
je
stc
jns
or
rcrb
frstor
test
sahf
dec
cmp
push
jb
jmp
je
sbb
lock
push
mov
inc
outsl
xchg
fdivrl
xor
push
pop
mov
dec
imul
dec
ret
pop
cmpsb
cs
mov
mov
push
loopne
push
mov
imul
xor
mov
fs
inc
xchg
xlat
mov
mov
ds
pop
aad
dec
jo
dec
in
pop
xlat
dec
push
stos
in
inc
lcall
pop
imul
cmp
pop
mov
adc
out
jns
inc
int3
test
fdivs
xorb
mov
aaa
mov
int
std
mov
jmp
lea
dec
loope
pop
mov
fists
cmp
sahf
adc
fwait
xor
jg
es
inc
add
add
xchg
mov
std
adc
movsl
jnp
mov
cld
adc
xchg
cmpsb
cmp
or
insl
hlt
sbb
add
mov
shlb
pop
loopne
mov
push
lods
sbb
mov
jmp
shlb
outsb
fildl
rdpmc
push
cmp
cli
mov
pop
std
std
xchg
jne
or
insl
push
mov
pop
inc
faddl
xchg
testb
mov
push
les
aas
cmp
adc
lods
jnp
jmp
mov
mov
push
arpl
mov
imul
lcall
sbb
out
ds
gs
or
aaa
dec
sub
mov
lret
lcall
arpl
jbe
sub
mov
jle
jae
or
ds
mov
mov
aaa
and
in
ja
loop
rcrb
mov
sub
lahf
xor
test
pop
and
fcoms
scas
jmp
mov
stos
subb
add
data16
cmp
fistpl
and
xchg
jns
push
jo
daa
mov
pop
pop
xchg
xchg
push
ret
pop
add
inc
into
sbb
out
shlb
les
mov
dec
cwtl
ljmp
movups
fsub
sarl
jecxz
popa
hlt
xchg
aad
add
sahf
movsl
xor
call
sub
add
xor
xchg
sub
and
jg
cmp
dec
outsl
sbb
sbb
mov
stos
outsb
mov
js
jp
out
aaa
push
cwtl
shlb
insl
push
mov
sbb
mov
inc
lea
pop
movsb
addb
mov
orb
cmp
in
jnp
cmpl
xor
test
sub
pop
push
std
lea
or
or
ljmp
or
ja
out
push
xor
std
cmp
xchg
pop
cli
lcall
insb
mov
dec
cmp
es
xrelease
fsubrl
cmp
lcall
data16
jns
adc
ret
mov
mov
stc
imul
mov
jg
mov
ss
dec
test
ss
movsb
xor
pop
pop
xor
sub
cmp
adc
rcr
pop
decl
xchg
hlt
clc
popf
dec
cmc
dec
mov
daa
das
lods
add
dec
cltd
add
or
xchg
adc
ficomps
mov
pop
or
inc
push
jge
imul
mov
test
jne
xor
mov
pushf
mov
dec
test
inc
jge
jp
pop
inc
push
lock
and
jnp
add
in
ljmp
test
add
les
inc
xor
mov
mov
and
pushf
xchg
pop
popf
adc
pop
mov
inc
cs
fdivrl
sub
cmp
fcompl
das
sti
pop
push
test
jne
push
in
xchg
cmc
cwtl
xlat
popf
add
pop
inc
neg
pushf
hlt
push
dec
mov
imul
nop
ret
loop
dec
add
in
add
pop
aaa
aad
jmp
mov
cmpsb
cmc
cmpsl
pop
popa
sbb
fidivl
and
xchg
jbe
mov
orb
xchg
mov
fs
loopne
arpl
mov
adc
lods
sbbb
imulb
sbb
mov
and
lea
add
add
into
cld
sahf
or
stc
scas
pop
and
sahf
or
sbb
daa
fs
pop
nop
insb
adc
and
sub
inc
subl
push
cwtl
movsl
mov
xchg
and
inc
or
mov
adcl
int
rolb
stos
repnz
imul
out
sahf
addr16
xor
sarb
insb
sbb
adc
hlt
push
xchg
xor
xchg
dec
push
fs
popf
lret
lcall
pop
daa
xor
shrb
jbe
or
sbb
arpl
lret
in
adc
pop
pop
js
pop
jmp
mov
ds
test
jmp
push
loop
outsb
jns
mov
cwtl
scas
pop
sub
pusha
mov
cmpsl
or
dec
clc
inc
and
into
xchg
pop
mov
adc
dec
add
gs
aaa
xchg
jmp
sbb
xchg
insb
or
dec
dec
jb
adcb
mov
xor
lret
jl
ror
add
pop
popf
jbe
sub
adc
pusha
sbb
lea
push
sbb
push
pop
xor
sbbl
out
out
mov
inc
mov
sub
out
rcrl
in
flds
insl
test
lock
stos
pop
lods
lcall
push
cmp
dec
aaa
dec
sbb
in
mov
mov
mov
mov
dec
push
xor
push
adc
sbb
fnstsw
testb
je
push
push
mov
sub
pop
data16
or
std
and
mov
das
xorb
cs
add
xor
or
pop
and
shll
xchg
fidivrs
pop
add
or
adc
xchg
sbb
xor
push
cmp
inc
in
cmp
lahf
loop
mov
sbb
cmp
decl
mov
mov
add
add
arpl
lcall
mov
mov
pop
add
call
cmp
xchg
mov
filds
pop
out
sahf
cmp
cli
jmp
mov
or
and
sbb
arpl
sti
lahf
mov
mov
pop
movsb
lcall
rcr
cld
dec
sbb
mov
mov
notb
inc
fwait
out
scas
pop
pop
xchg
pushf
iret
mov
popf
out
aas
pop
dec
and
xchg
addl
jge
iret
rolb
inc
mov
test
cmp
je,pt
and
outsb
stos
or
ds
xchg
fstps
jl
dec
and
mov
insl
dec
test
mov
lea
mov
cwtl
xchg
sub
clc
inc
sub
push
dec
nop
inc
inc
lret
mov
imul
fwait
xor
xchg
cmp
out
add
xchg
mov
ret
das
push
popa
jmp
xor
andl
subl
push
jmp
adc
sti
xor
jmp
orl
adc
jo
scas
xor
pusha
test
idivb
pop
cld
ss
add
push
test
push
mov
lcall
mov
ret
sarl
cmp
cmc
enter
stc
xchg
ret
adc
push
sub
dec
in
int
xor
add
loopne
xchg
das
and
out
or
push
xchg
cld
addr16
mov
in
adc
arpl
cmp
add
out
repz
cli
aad
and
and
out
xor
lods
mov
xchg
cmp
outsb
mov
or
sub
or
sub
push
pop
mov
xchg
xchg
ficoml
dec
in
and
std
mov
mov
scas
ds
jl
mov
push
pushf
cmp
rcrb
fdivs
xchg
icebp
shll
adc
mov
fs
nop
pusha
xchg
push
rcll
and
mov
cwtl
outsl
mov
lods
loopne
push
int3
xor
push
mov
nop
rolb
cmpl
pusha
hlt
lcall
aam
test
test
je
dec
mov
xlat
lea
cmp
or
and
adc
iret
das
cmpsb
test
call
lret
pop
enter
ja
and
shl
push
inc
cs
sbb
pop
divl
fs
mov
sub
sbb
movsl
movl
xlat
in
rorl
enter
fisttps
mov
inc
fidivrs
je
and
jno
pop
dec
test
aam
sbb
push
loopne
jb
mov
mov
fsts
inc
mov
hlt
je
sub
xchg
ljmp
clc
fst
jle
out
repz
and
xor
jp
mov
inc
inc
mov
stos
int
jle
push
xchg
pop
dec
inc
cmp
mov
cmpsl
adc
lods
jl
mov
cmp
sbb
pop
div
das
cltd
ja
xchg
xchg
jecxz
insb
int3
or
test
test
sti
sub
xor
insb
push
pushf
pop
fwait
outsl
gs
inc
movsl
rcll
and
lret
fdivl
or
mov
cli
int3
pop
xor
loopne
popf
imull
mov
lcall
fs
mov
sar
int3
mov
outsl
xchg
fs
shlb
mov
mov
bound
faddl
test
sbbl
cwtl
insl
sahf
aaa
mov
fadds
ljmp
mov
cmpb
xchg
add
mov
adc
outsl
mov
vrcpss
or
popf
jmp
out
push
adc
push
pop
les
fbld
lahf
push
ret
ljmp
dec
dec
lds
cmc
push
add
imul
stc
xchg
push
sub
shlb
out
cmp
cs
out
mov
fidivrl
lods
test
cltd
xlat
cwtl
imul
enter
test
call
adc
xchg
jp
xchg
push
jg
dec
iret
in
stc
mov
jmp
sbb
fs
push
andb
aad
mov
adc
mov
jnp
mov
fadd
sbb
out
mov
enter
ret
sahf
pop
mov
jae
mov
or
mov
jae
xor
cmp
cltd
mov
hlt
es
cmp
mov
pop
sub
xchg
push
lcall
push
jecxz
cltd
cmp
push
enter
loope
fdivs
or
aam
mov
leave
cltd
mov
dec
pop
sub
bound
imul
mov
aad
insl
in
push
pop
xchg
je
jl
stos
mov
adc
push
mov
js
enter
in
and
rolb
mov
lcall
pop
shlb
cmpsl
jns
iret
mov
mov
out
dec
add
xchg
jle
inc
sar
cwtl
aam
push
xchg
and
mov
jp
pop
or
rcrb
loop
out
sub
cld
mov
mov
sahf
fadd
in
icebp
cwtl
jg
bound
repnz
rdpmc
lret
cli
pop
ffreep
pop
xchg
inc
jg
out
lcall
push
adc
cmc
les
in
bound
cli
imul
dec
adc
dec
pushf
pusha
movsb
xor
dec
adc
jmp
ljmp
push
xchg
xchg
push
xchg
cmp
nop
mov
mov
inc
jns
mov
cld
inc
sbb
jo
jns
out
iret
xchg
ret
icebp
and
arpl
aaa
scas
imul
pushf
xlat
stos
test
jns
or
sahf
xorb
or
or
rclb
add
dec
inc
jno
adc
cld
rolb
jns
mov
movsb
sbb
push
ret
dec
outsb
sbb
mov
fsubrs
stos
mov
outsb
mov
xor
outsb
jle
adc
dec
popa
and
jle
mov
popl
cmp
rorb
data16
xchg
popa
jmp
cli
sbb
jmp
xchg
xadd
in
loop,pn
xchg
push
aaa
mov
outsb
es
xchg
pop
fsts
xor
or
jp,pn
dec
push
mov
cmp
sbb
xorl
insb
iret
xchg
pop
mov
bound
push
mov
pop
cs
test
lret
push
jp
notb
pop
inc
arpl
inc
sbbl
add
add
add
stc
out
inc
std
fidivrs
movsb
dec
sub
das
mov
mov
add
popf
stos
movsb
add
push
lods
cld
in
cs
and
mov
xor
ja
cltd
fdivrl
enter
test
xchg
inc
dec
shrb
xchg
ja
repnz
mulb
xor
and
xor
dec
and
xor
adc
add
nop
fwait
in
or
jno
inc
sbb
cli
lahf
mov
repnz
dec
lret
push
jle
data16
xchg
fildl
xor
cmpsl
lock
inc
dec
adc
xchg
mov
not
mov
sbb
cmp
sub
push
ljmp
int3
or
cli
fwait
jne
jns
jp
lods
dec
scas
dec
mov
dec
sarb
enter
jmp
bound
clc
push
lods
add
rcll
test
outsl
mov
insb
popf
cmp
lock
rorb
js
sbb
pop
das
dec
nop
incb
or
and
pushf
add
clc
mov
jle,pn
aas
loope
cli
mov
dec
fwait
hlt
jge
test
outsl
clc
cwtl
sbb
int3
pop
xchg
cmc
fnstcw
mov
nop
mov
push
ljmp
incb
xchg
jb
sahf
stc
inc
xor
repnz
lret
ljmp
daa
data16
sbb
or
rcrb
rorl
sub
sub
dec
outsb
nop
stos
out
sub
out
enter
xor
jl
shl
sub
cmpsb
adc
inc
nop
test
mov
mov
cmp
mov
adc
or
cmpsb
or
push
add
or
push
ss
cs
inc
mov
adc
ror
dec
jl
or
clc
ds
gs
push
or
pop
shll
outsl
jae
std
rcll
dec
pop
jne
inc
mov
shrl
fnsave
lcall
or
nop
lret
xor
lret
and
push
movsl
sbb
addl
cmp
push
mov
test
ja
lahf
jb
sbb
lods
es
inc
sub
inc
add
mov
pop
stc
fdivrs
es
mov
xor
mov
lret
adc
imulb
lcall
enter
cmp
ljmp
inc
mov
std
adc
xchg
jnp,pn
and
mov
cmp
dec
icebp
and
cltd
xchg
and
xchg
adc
stos
in
xlat
popa
lods
mov
inc
or
fdivs
lock
mov
dec
stc
loopne
sahf
mov
in
and
ljmp
and
test
and
lods
mov
lods
enter
pop
iret
pop
sbb
es
stc
stc
rclb
add
pop
add
xchg
cmp
movsl
es
jp
mov
and
sbb
or
ret
xor
insb
sbb
push
pop
or
clc
cmp
adc
mov
es
mov
cwtl
push
sbb
lcall
jae
sub
roll
sbb
ds
sbb
jno
aaa
inc
xchg
jns
jecxz
dec
out
sbb
fmuls
adc
sub
pop
fidivrl
add
xchg
add
insl
xor
pusha
xor
in
repz
ja
inc
popa
lret
inc
scas
jno
mov
fwait
mov
mov
out
loope
cmp
scas
ds
imul
add
inc
movsl
clc
and
or
ja
jns
stc
push
sbb
mov
sbb
popf
pop
arpl
lods
test
nopl
mov
push
mov
fld
mov
jmp
int3
repnz
xchg
test
orl
in
mov
and
insb
js
int
addr16
add
add
mov
mov
ror
fnsetpm(287
xor
jns
push
cli
shl
push
loop
cs
inc
push
sbb
or
ficoms
clc
daa
pop
sub
inc
and
jge
and
stc
jbe
pop
mov
fstl
test
jno
push
inc
and
push
sbb
add
push
repnz
pop
mov
or
inc
mov
in
push
out
cmp
dec
jge
cwtl
dec
sahf
movsb
in
data16
sub
nop
sbb
xchg
test
cs
xchg
imul
stos
jl
test
cmpsb
movsl
int3
lret
mov
repnz
repnz
jne
inc
dec
push
cmp
stc
jns
aas
loopne
es
fwait
add
out
sub
jae
cs
out
pop
vmovaps
js
jl
int
fwait
xchg
or
push
cmp
aas
mov
push
or
scas
or
xorl
imul
test
dec
xchg
pusha
stos
and
cmp
pop
mov
pop
or
inc
dec
int3
das
aas
cmp
inc
mov
lods
test
fucom
dec
adc
out
jns
rcl
nop
mov
popa
rorl
inc
mov
cmp
adc
stos
inc
imul
rorl
inc
adc
ret
pop
mov
outsl
and
adc
test
pushf
and
cmp
ja,pn
shlb
into
xlat
gs
cmp
mov
cmpsb
test
and
stos
daa
dec
sbb
pop
xlat
jb
insb
cmc
shll
and
sbb
inc
jb
or
mov
lds
rclb
and
pop
add
xchg
and
cli
in
enter
cwtl
jb
lds
xor
lods
push
add
push
out
mov
pop
adc
mov
push
lea
adc
cmc
in
xor
sbb
lods
cli
pop
lods
lds
xor
mov
mov
pop
fsubl
pop
int3
sub
push
jns
inc
xchg
and
inc
adc
xor
sbb
fcomps
imul
out
clc
adc
pop
sbb
sbb
ljmp
hlt
je
outsl
test
and
dec
addl
test
fnstsw
int
or
add
bound
outsb
dec
sbb
dec
adc
add
pop
jmp
ss
fsubl
jb
out
lret
mov
mov
xor
adc
int
das
sub
mov
cmp
cmpl
and
aam
sub
nop
cmp
xorl
movsl
sbb
je
cmc
inc
sbb
test
xchg
cmc
jns
loop
fbstp
sti
inc
bswap
pop
or
in
mov
add
add
cld
jg
and
jb
rol
add
pop
add
rcrl
push
popa
repz
xor
lahf
iret
ja
int
and
clc
pop
int3
cmp
call
movsl
mov
and
or
dec
bound
enter
lret
daa
insb
inc
push
cltd
adc
push
or
pop
pop
jo
aas
mov
mov
xchg
lds
adc
bnd
or
xchg
les
jmp
ja
out
or
nop
decl
sbbl
ljmp
das
repz
xor
pop
in
sub
cli
jp
xchg
test
pop
adc
jns
in
inc
mov
repz
push
loop
adc
sub
insb
ljmp
lea
loopne
or
mov
inc
inc
adc
jge
out
fucomip
cmp
ljmp
pop
nop
sahf
in
sti
add
shr
dec
mov
dec
cltd
sub
mov
ss
pop
jl
add
add
cmp
or
mov
push
repnz
sub
cld
loopne
int
ss
sbb
and
pop
dec
and
inc
push
inc
and
out
push
shlb
pushf
loop
cli
jne
xor
cld
paddd
and
sub
mov
jne
adc
hlt
icebp
mov
in
andl
xor
jmp
shl
cli
push
mov
les
lahf
sti
mov
bound
push
mov
movsb
insl
int3
icebp
jmp
or
pop
add
sbb
xchg
push
or
sbb
pop
cmp
jbe
mov
mov
sub
dec
and
xor
push
fwait
lds
test
lcall
mov
dec
pusha
fcmovnu
dec
mov
test
mov
sbb
iret
jg
cs
aas
cltd
push
pop
push
ret
xlat
rol
sbb
pop
jg
lds
push
arpl
lret
sbb
mov
adc
loopne
dec
pushf
fwait
mov
outsl
mov
leave
xchg
loope
inc
icebp
cltd
and
xor
arpl
mov
adc
int3
roll
ret
pop
loopne
lcall
aas
sub
mov
pop
pushf
sbb
or
and
fstpt
mov
lret
call
mov
stos
ljmp
xor
rorl
dec
mov
andl
dec
cmpsb
rclb
jo
icebp
or
subl
imul
add
jge
mov
xchg
inc
mov
xchg
mov
mov
call
nop
mov
adc
cmp
lds
hlt
mov
call
cmpb
je
xchg
popa
filds
pop
popf
ss
push
pop
and
lret
sbb
mov
pop
scas
dec
cmp
jl
add
push
jl
outsl
cmp
daa
insl
dec
jno
sub
push
aad
inc
and
int3
pop
fadd
lock
roll
movsl
jle
or
pop
scas
and
rclb
or
inc
shlb
cmp
sub
and
sbbl
clc
cmpl
adcb
je
push
pop
mov
inc
cli
lea
xor
loopne
lods
push
push
and
inc
dec
cmpsl
incb
rclb
and
inc
cmp
jbe
ds
mov
hlt
std
cmp
inc
repnz
inc
add
cmp
addr16
ljmp
push
faddp
hlt
xorb
sbb
ljmp
mov
sbb
fwait
arpl
pop
loopne
jns
add
or
out
fimull
inc
dec
sarl
mov
mov
jge
fstpl
push
push
jae
outsb
sbb
hlt
jge
imul
sahf
dec
lock
xchg
mov
aaa
jae
nop
push
adc
add
clc
jecxz
int3
popa
jne
pop
xlat
scas
or
jns
and
add
cwtl
xor
add
test
cld
or
jecxz
adc
pusha
insl
pop
xor
dec
push
push
inc
mov
mov
adc
aad
jg
or
inc
inc
shlb
and
test
sub
shrl
xor
mov
inc
hlt
adc
movsl
mov
jae
sahf
ss
mov
call
rcrl
enter
push
sub
xor
push
pop
cmpb
and
lahf
loope
insl
jno
pop
xor
scas
cltd
and
inc
cltd
push
cmc
test
cmpsb
test
cmp
xor
ja
cli
ficomps
lea
mov
xchg
into
fldenv
pop
js
adcl
xchg
and
pop
or
movsb
jb
jno
or
icebp
loop
lret
in
aad
pop
sbbb
repnz
mov
daa
cmp
dec
xchg
sahf
fst
fisubl
mov
jno
jnp
push
jg
mov
shr
lahf
icebp
pusha
sahf
test
push
loopne
inc
pushf
add
dec
mov
popf
sub
jnp
mov
in
into
mov
out
test
push
inc
mov
mov
jge
inc
mov
aas
popa
aad
in
cmp
push
xchg
cmp
call
cmp
pushf
mov
and
sub
mov
mov
add
dec
or
fisttps
jbe
dec
add
gs
lea
xor
push
and
lods
addr16
mov
add
mov
shll
hlt
sub
jmp
sbb
int
push
cmp
aam
nop
mov
sarb
es
fs
jmp
or
sub
cmp
lds
pop
jnp,pn
sbb
cmpl
jecxz
insb
mov
cmp
xchg
ds
jg
out
loope
int3
jne
mov
rcr
xchg
repz
pop
enter
push
addr16
nop
cmpsb
loopne
mov
loopne
xchg
imul
xchg
out
ret
push
jmp
outsl
mov
push
cmp
nop
movsb
cmpb
fwait
mov
or
test
popa
pop
cmp
std
cmc
sbb
fldenv
push
sub
fsubrl
inc
cld
call
add
imulb
fcoms
jg
js
cs
inc
std
mov
inc
sti
push
dec
jmp
jge
rcr
out
push
roll
cmp
js
hlt
sub
sub
mov
testb
mov
add
add
shr
and
aas
fcomip
out
or
mov
add
pop
add
add
rorl
push
xchg
mov
jg
cmp
testb
jp
jmp
ja
movsl
cmpb
lods
xor
aas
mov
sub
stos
jns
imul
jae
in
add
dec
xchg
sarl
jp
dec
cld
cmp
mov
push
fisttps
ds
mov
out
dec
mov
add
jle
jl
mov
lahf
jmp
xor
enter
stos
fisubrl
pop
mov
dec
mov
jmp
inc
lods
leave
sub
test
test
or
sbb
scas
jne,pt
mov
jle
out
fcomps
out
fnsave
inc
lahf
cmc
in
pop
adc
imull
popf
mov
or
scas
fcoms
sub
pop
dec
repnz
push
sbb
cwtl
fwait
pop
leave
lahf
xchg
jle
andb
stc
cwtl
cmp
xor
mov
dec
jmp
add
push
xor
or
sarb
adc
lock
mov
mov
xor
icebp
xchg
in
pop
lret
aam
inc
int
adc
sbb
push
cmpsl
in
mov
mov
push
xor
sub
add
fnsave
jno
xchg
pop
xor
call
sub
jb
incl
clc
or
mov
je
nop
mov
sahf
mov
in
test
add
pusha
sub
jl
ds
sub
les
fiaddl
loopne
lahf
jnp
pushf
lahf
sub
adc
add
lret
pop
xor
push
xor
jmp
movsb
pop
jl
adc
fstps
je
or
repnz
ja
and
movsb
aaa
pop
leave
outsl
jno
jp
push
sbb
jno
mov
es
cli
sbb
or
enter
and
inc
sbb
mov
xor
imull
arpl
pop
fiaddl
std
mov
fmul
lahf
out
int3
mov
mov
and
lahf
mov
cmp
enter
add
inc
and
xor
cmpsb
int3
mov
movsl
aam
sbb
stos
mov
pop
push
mov
mov
pop
insb
fimull
jl
jns
in
sbb
cld
inc
jmp
push
outsb
cmc
xor
out
movsb
aam
sbb
pop
pop
fsubl
mov
or
adc
ret
leave
fsts
out
lods
dec
jle
cmc
xor
pop
sub
sub
insb
xor
pop
push
hlt
dec
xlat
push
fwait
pop
es
cwtl
sbb
or
xchg
cmp
cmp
mov
mov
xor
in
cmc
cmpsl
rcrl
lods
shrb
jg
or
push
mov
add
xor
xchg
movsl
lods
dec
push
adc
jne
fsubs
mov
or
enter
inc
test
addr16
test
dec
dec
loopne
jle
sbb
jb
repnz
sub
roll
lret
cmp
jmp
fwait
addr16
fsubrs
mov
pop
out
mov
mov
scas
mov
dec
sbb
leave
out
jo
sub
outsb
data16
pushf
shrb
push
insl
pop
jbe
sbb
ljmp
rorb
inc
adc
fs
aaa
mov
outsl
and
movlps
cmp
hlt
adc
out
or
mov
filds
ss
add
or
mov
out
lods
stos
push
sbb
sub
push
inc
fidivrl
aas
loop
mov
popf
dec
es
sub
mov
js
shr
arpl
sbb
mov
pop
outsb
push
cmp
cmpsl
mov
add
rorl
jp
dec
or
orl
ficompl
pop
sbb
sbb
mov
pop
outsb
cwtl
imul
movsl
gs
dec
lea
shr
mov
jl
mov
sti
das
push
enter
pop
and
adc
pop
fdivl
pop
and
aas
sub
out
jmp
pop
outsb
xlat
daa
call
push
cs
pop
add
popa
sub
pop
ja
adc
mov
bound
push
ret
and
insb
lcall
mov
fsubl
or
mov
push
out
lret
loopne
ja
push
data16
pop
sub
fmull
cmp
mov
add
pop
jne
cltd
push
in
dec
or
sub
pop
gs
pop
mov
xchg
inc
lea
sbb
xor
sbb
mov
imul
les
gs
jge
stos
pop
and
hlt
or
std
pop
fwait
int3
in
cmp
push
scas
mov
pop
mov
add
rolb
loop
pop
dec
push
out
push
out
adc
xchg
fidivs
xchg
out
rolb
aaa
fadds
xor
xor
cmpsb
dec
sub
add
push
ficoms
dec
xchg
out
sub
fwait
sub
jae
ljmp
push
push
cmpsl
mov
ret
insl
xchg
imul
fcompl
or
and
mov
or
inc
jno
jp
test
aam
xor
dec
push
mov
mov
sub
jno
mov
pop
insb
rcrl
fwait
nop
xchg
pop
mov
arpl
repnz
out
movsl
mov
jae
fsubrs
inc
movsb
jae
popf
mov
test
out
jg
aas
hlt
out
rclb
add
xor
in
out
addl
pop
add
mov
sub
data16
push
and
or
push
es
xchg
insl
lods
idivb
lods
mov
out
pusha
pop
out
or
pop
mov
imul
icebp
cltd
hlt
out
lods
and
push
and
mov
call
repz
test
or
add
or
rorb
imul
cli
add
xchg
mov
jbe
test
mov
push
push
clc
nop
lock
jo
subl
inc
rcl
jl
mov
inc
xor
shl
adc
loop
push
pop
push
xor
enter
call
mov
xor
xchg
test
out
mov
xor
sar
jecxz
mov
dec
xchg
sbb
fwait
mov
add
inc
lret
add
add
add
add
lret
ja
daa
inc
call
mov
pop
add
cltd
orl
faddp
insl
jne
or
cmp
xlat
push
popa
lock
xchg
and
mov
mov
aad
pop
mov
daa
sti
dec
sbb
or
int3
out
outsl
pop
dec
rolb
or
fldenv
xchg
popf
repz
jne
seto
lret
shrl
rcl
adc
adc
test
mov
enter
push
icebp
outsb
mov
movb
cmp
repnz
call
fstps
jecxz
imul
cmp
mov
mov
sahf
imull
xchg
lods
out
insb
sti
call
mov
lret
jns
xchg
shr
fnstenv
call
data16
pop
adc
scas
cmpsl
dec
jg
fidivrs
adc
adc
push
sbb
mov
mov
pop
mov
or
and
pop
push
adc
add
cmpsb
enter
pop
dec
gs
aad
cli
fisubrl
xor
jmp
sub
add
lock
or
xor
loop
xor
test
mov
mov
test
imul
ror
ljmp
fimull
mov
data16
xchg
jo
aad
sbb
pushf
outsb
mov
inc
arpl
dec
cmp
outsb
and
push
addr16
cmp
insb
mov
push
xor
dec
in
cmp
cmp
repnz
sub
insl
loop
and
out
jp
out
imul
dec
ds
movsb
loopne
xchg
sbb
and
dec
mov
mov
dec
mov
std
push
jb
lahf
cmp
fidivrs
cmp
iret
cmp
lcall
adc
dec
or
jmp
mov
pop
xchg
push
pop
es
mov
xchg
fisttpll
push
adc
fists
pop
mov
imul
push
mov
sbb
pop
bound
and
inc
push
cwtl
rcl
out
inc
add
les
leave
adc
jmp
test
inc
ret
fadd
repnz
push
inc
lock
and
fwait
mov
dec
aam
je
mov
xchg
add
mov
sbb
mov
inc
jnp
mov
inc
lea
sahf
call
rclb
sti
fnstenv
movsl
lock
sbb
test
jbe
add
sbb
aam
or
and
mov
add
cmp
fisttpll
jne
dec
cmpsl
mov
adc
jns
dec
mov
scas
nop
lcall
lcall
sti
insl
fcmovnu
push
xlat
cmp
out
stos
imul
mov
sbb
iret
fs
out
pop
imul
ret
add
mov
cld
xor
in
loope
fcompl
sub
dec
insb
sbb
je
dec
push
scas
lds
repz
mov
xlat
stos
daa
daa
dec
fs
imul
stos
int
mov
mov
jnp
inc
xchg
lea
sub
mov
cmc
jo
es
mov
push
mov
test
xor
pop
mov
lds
movb
cltd
dec
scas
cld
push
les
lahf
push
fs
shr
in
pop
mov
push
mov
cmc
shll
mov
scas
xchg
dec
out
leave
lock
test
das
sub
mov
cli
lea
stos
sub
push
xorl
loop
sbb
mov
insl
lret
fadd
andl
push
mov
inc
daa
push
fldt
jmp
lea
in
lcall
iret
jnp,pn
xchg
pop
xor
xor
aad
fcmovne
adc
mov
jmp
jbe
dec
mov
sbbb
test
into
xchg
in
repnz
andl
movsl
ret
fwait
push
cmp
pop
cmp
leave
addr16
mov
cwtl
mov
or
sarb
pushf
sbb
in
mov
test
mov
pop
mov
mov
call
frstor
sbb
rcl
mov
adc
call
ficoml
dec
outsl
push
aad
xchg
jecxz
loopne
cmp
faddl
jecxz
mov
mov
pop
cld
cmp
mov
icebp
sarb
pusha
sub
dec
adc
xor
test
mov
jg
cmp
test
sub
stos
add
lock
push
inc
adcl
xchg
test
and
bt
sbb
mov
mov
repz
sub
int3
div
inc
and
pop
cmp
daa
cmp
adc
lea
pop
rclb
push
imul
mov
and
push
movsb
sahf
xchg
lret
lahf
lret
jo
mov
leave
adc
pop
sbb
sub
dec
out
pop
jae,pn
xchg
mov
int
cmp
addl
ss
sti
jbe
test
sub
or
and
loopne
or
push
test
leave
pop
xchg
adc
xlat
ja
mov
inc
in
loope
movsl
inc
cmp
mov
dec
ror
repnz
ja,pn
in
sub
add
iret
inc
or
jb
inc
pushf
clc
stos
aam
mov
inc
fcompl
xchg
mov
inc
into
imul
es
jle,pt
insl
inc
jbe
push
add
push
push
jno
or
mov
into
je
xchg
push
movsb
lea
push
aaa
stc
xchg
mov
add
lret
loope
sti
sub
arpl
stos
imul
mov
ret
xchg
dec
and
fscale
dec
adc
mov
cli
das
jbe
sti
cmp
lea
jne
xchg
hlt
dec
mov
sbb
sbb
mov
pop
push
in
loopne
sub
add
aas
popa
sbb
sahf
daa
jecxz
and
ljmp
gs
dec
sub
xchg
adc
sbb
inc
mov
imul
xchg
fistpll
adc
adc
mov
push
out
mov
lcall
sub
adc
xchg
sahf
stc
cmpsb
mov
test
in
pusha
leave
aas
jecxz
xor
mov
and
dec
lret
in
test
lret
jmp
jmp
push
xlat
mov
push
std
mov
add
mov
xchg
jns
cld
cmp
stos
aad
testl
inc
pop
inc
rolb
push
sar
add
jmp
insl
lahf
add
add
add
push
pop
mov
pop
es
cmc
loop
fildl
add
pop
add
xchg
repz
push
mov
or
mov
jns
clc
jae
psadbw
das
lds
sub
rolb
sbb
aad
ss
jp
sbb
sub
cvtps2pi
xchg
mov
arpl
sub
xor
sti
movsl
jg
iret
aad
stc
and
fcmovnbe
cltd
jns
cltd
add
cmp
test
das
and
push
or
inc
fmull
mov
inc
xor
push
stos
scas
enter
xchg
xlat
mov
mov
test
repz
andb
ljmp
push
hlt
aaa
mov
ds
or
sbb
aas
pop
scas
pop
or
mov
test
xchg
mov
sbb
dec
insb
and
cli
mov
mov
sahf
xor
jge
push
push
cltd
jg
mov
subl
les
push
mov
xchg
and
sahf
adc
sub
les
push
push
stos
xor
push
cmp
sahf
jae
sub
jecxz
cltd
icebp
dec
push
std
jae
rcrl
loopne
pop
jecxz
xchg
rcr
or
int3
xor
inc
movsb
stc
es
negb
shlb
in
out
aas
es
dec
rolb
lods
mov
addr16
int3
ljmp
or
stc
js
inc
sub
xchg
sub
loopne
inc
adc
add
mov
ljmp
push
lea
adc
or
in
popf
cli
mov
mov
cmp
push
sbb
dec
dec
xor
jb
test
inc
adc
xchg
jae
call
ret
cld
add
out
push
xchg
cmpsl
push
das
mov
aad
rclb
sub
fcompl
push
lcall
stos
jmp
jg
mov
je
shl
pop
inc
adc
arpl
fisttps
cmp
cltd
dec
popf
push
push
aam
sti
xchg
inc
mov
xlat
dec
pop
mov
cs
fstps
mov
cmp
add
jl
rorb
sbb
lea
push
inc
andb
mov
or
jg
dec
xrelease
out
pushf
mov
pop
xlat
pop
aam
call
fcom
shlb
sub
mov
lret
in
mov
pop
shl
push
aas
pushf
dec
test
add
inc
push
cltd
faddl
imul
out
fwait
xchg
in
out
xor
loop
mov
fimuls
push
mov
push
test
sub
pop
insb
aaa
push
dec
push
dec
nop
pop
sbb
add
leave
xchg
repnz
es
pop
ljmp
out
in
mov
sarb
adc
loope
insl
mov
mov
mov
pop
xor
cmp
sub
mov
pusha
push
add
jmp
or
lods
add
movsl
dec
inc
adc
rcr
lods
divb
mov
push
jp
je
dec
dec
repnz
push
pop
ret
cmc
or
push
jnp
mov
push
cmc
cmpl
cli
insl
sub
xor
mov
sub
sub
inc
and
rcr
jb
cmp
sbb
sbb
mov
push
cmp
scas
mov
mov
fstpl
mov
je
call
jno
dec
and
fcomip
pop
push
dec
sub
inc
mov
clc
mov
movb
je
sbb
jno
fwait
adc
mov
sbb
ret
popa
mov
or
clc
jl
pop
inc
push
test
mov
pop
test
lcall
dec
jmp
shlb
ljmp
xchg
icebp
movsl
lods
lds
xchg
shlb
or
clc
imul
xchg
pop
adc
fisubrs
cld
pop
adc
adc
push
jb
in
push
dec
xor
in
clc
pushf
scas
dec
lock
mov
dec
fs
test
pxor
push
xor
nop
jle
stos
rorb
orb
add
scas
add
add
repz
movsb
aam
or
sub
aam
sbb
and
sbb
fadds
aam
mov
xor
dec
stc
and
sbb
inc
test
ss
lret
mov
mov
inc
lret
rolb
mov
shlb
mov
call
out
cld
dec
nop
dec
pop
jo
jne
fisubrl
pop
pop
call
fs
cmp
adc
mov
lret
dec
add
icebp
pop
sbb
lcall
push
pop
pop
mov
stos
out
jge
add
and
xchg
loope
push
push
lahf
lea
or
movsb
dec
shll
test
jb
mov
outsb
shll
shr
sbb
call
cmp
int
scas
out
in
cmc
outsb
and
mov
test
inc
adc
mov
std
jno
lcall
xchg
jp
xchg
sbb
dec
or
jl
sarl
scas
mov
pop
cld
loop
dec
jo
adc
aad
jne
pushf
ljmp
adc
int
pop
fidivl
insl
push
stos
add
mov
dec
pop
push
std
pop
adc
cmc
pop
jg
xchg
inc
or
adcl
iret
inc
sub
cld
add
int
ror
arpl
mov
movsl
lods
in
mov
jl
out
lcall
addl
mov
and
add
cmp
xlat
xchg
dec
gs
dec
jae
leave
iret
gs
mov
push
inc
pop
dec
mov
and
imul
or
ret
lock
pop
xorl
iret
push
fwait
pop
jns
xchg
push
mov
scas
out
add
or
add
push
stc
xchg
fildll
cmp
push
xchg
mov
aam
mov
inc
gs
dec
testl
mov
loopne
adc
mov
subb
xchg
or
sub
push
cmp
in
pop
notb
push
cld
push
ret
rclb
xor
cmp
out
and
in
dec
xchg
sub
push
mov
dec
jb
hlt
xchg
nop
and
mov
js
dec
out
daa
imul
mov
fsubrs
add
add
add
pop
mov
cmp
mov
loop
add
pop
add
pop
shl
lahf
push
jb
insl
and
lds
mov
leave
sbb
les
into
into
jg
pop
dec
pop
rcll
hlt
xchg
xor
add
adc
sub
cmpsb
int3
cmp
pop
stc
pminsw
xchg
inc
push
xchg
sub
xlat
sar
out
xor
jne
movsb
sub
inc
cli
enter
daa
adc
sub
xor
pop
dec
stos
fisttpl
mov
xchg
popa
jbe
adc
or
xor
mov
das
xchg
mov
or
in
pop
inc
loope
cmp
dec
jne
enter
or
jo
cmp
push
stos
pop
xchg
cmpsb
adc
aad
cld
das
test
loope
dec
jno
jle
mov
jl
mov
push
pop
add
int3
lcall
mov
enter
popf
orb
push
pop
xor
push
inc
inc
jb
fwait
cld
imul
stos
test
sarb
incb
xchg
mov
gs
and
pop
std
pusha
out
sbb
loopne
call
xchg
inc
cmpsl
imul
inc
xor
pusha
and
inc
negl
jne
pop
sub
arpl
lods
sub
xor
inc
cli
inc
sarb
fmull
xchg
ret
adcb
outsb
pushf
jo
shlb
mov
movl
std
xor
xor
in
or
stos
inc
sub
xor
jl
hlt
test
test
int3
stos
pop
cmp
xor
outsl
pushf
xor
dec
je
adc
add
sbb
xchg
and
ret
fwait
clc
aaa
movsl
push
cmp
inc
lock
mov
mov
mov
inc
or
inc
enter
jle
mov
in
sub
cmp
adc
inc
and
cltd
stos
adc
lock
pusha
jg
inc
shlb
xor
and
adc
or
add
pop
js
adc
or
fsubl
push
out
in
out
mov
pop
leave
outsl
jno
xchg
jb
xchg
loopne
test
push
jbe
push
xchg
pop
daa
jle
orl
in
inc
movd
mov
add
fsubp
lcall
ljmp
outsb
or
fcmovnbe
xor
and
sbb
add
les
mov
fisttpll
lods
sub
push
jo
in
insl
das
inc
fdivs
arpl
sub
nop
out
push
andl
pop
mov
dec
hlt
dec
enter
inc
gs
js
lret
lds
je
cmp
stos
inc
dec
push
imulb
jp
xorl
shll
cwtl
lcall
je
insl
dec
rep
imul
jl
inc
loopne
push
cmp
xor
xor
addr16
rolb
ret
dec
or
int
cwtl
rcll
mov
in
adc
dec
rclb
or
inc
jbe
cltd
loop
add
mov
movsl
stos
and
inc
fs
shrl
push
or
pushf
mov
dec
daa
jge
or
mov
clc
xorb
xor
in
faddl
push
xchg
es
lcall
in
jae
xchg
enter
inc
push
mov
and
xchg
pop
hlt
mov
or
out
push
xchg
fnstsw
pop
ds
jmp
repnz
mov
sbb
cwtl
mov
push
dec
repz
cli
sub
out
iretw
fcompl
pushf
mov
pop
js
or
movsb
inc
loopne
cmp
fimuls
movsb
adc
outsb
inc
xchg
push
adc
aas
repz
popf
push
roll
stos
lea
lahf
and
pop
sub
push
xor
push
push
stos
mov
loop
sbb
push
ja
das
push
lods
jae
cmp
xor
dec
lahf
cltd
fidivrl
jns
dec
mov
daa
pop
fcmovbe
cmp
push
dec
mov
gs
mov
xorb
jae
dec
loopne
in
pop
jns
add
push
std
lea
push
imul
push
cmp
jns
clc
mov
or
jbe
jne
and
scas
pop
scas
sub
enter
mov
daa
icebp
lret
dec
push
push
aas
addr16
mov
aaa
lahf
out
inc
mov
rol
mov
fld
jmp
addr16
jnp
pop
sahf
scas
fwait
add
aad
dec
xchg
cmp
outsl
jnp
lcall
xchg
cmp
fisttpll
outsl
xlat
jg
aaa
mov
adc
cld
jno
mov
out
cmc
inc
cmp
xchg
mov
push
sbb
mov
cmc
std
adc
push
jb
out
fwait
mov
pop
stc
cltd
jmp
in
in
pop
ror
int
add
sbb
jb
xchg
xor
dec
daa
lock
hlt
xor
iret
dec
xchg
jg
pusha
lret
in
adc
loope
roll
dec
pop
popf
sti
pop
push
outsb
jbe
push
push
and
out
out
cmp
push
xchg
push
movsl
dec
mov
sbb
mov
mov
inc
ret
int
leave
xchg
dec
fwait
pushf
adc
nop
mov
test
mov
mov
cmpsl
jns
push
push
shll
stos
test
dec
mov
shl
mov
mov
cmp
nop
loop
jecxz
arpl
repz
das
jmp
lcall
sbb
adc
lods
cs
stos
push
mov
jnp
push
xor
decb
pop
stos
movsb
dec
daa
sbb
dec
adc
adc
aas
adc
push
xchg
dec
xlat
daa
ss
std
imul
ss
arpl
clc
xchg
ja
pop
lds
in
pmullw
pop
into
test
inc
or
mov
out
jecxz
cli
xchg
fst
xchg
mov
cmpsl
into
out
xchg
jne
dec
jns
out
mov
stos
sub
aaa
sbb
cmp
or
inc
inc
out
sbb
adc
in
lods
push
out
pop
pop
inc
jae
cli
add
mov
pop
mov
loopne
popa
add
xchg
idivb
xchg
mov
push
cwtl
cmp
shl
sbb
sbb
push
cmpsl
jg
xchg
and
scas
add
or
sti
mov
xlat
into
lcall
lods
repz
inc
dec
jg
jg
scas
pop
in
push
mov
add
or
test
jecxz
add
stos
imul
cld
sbb
push
push
add
lods
fisttpl
pop
jb
fnstcw
sub
lods
dec
xchg
subb
cli
lods
mov
dec
inc
mov
mov
cmpsl
sub
clc
arpl
add
add
add
xor
loope
icebp
mov
in
mov
jmp
add
sub
aaa
cli
in
std
rol
mov
or
js
or
mov
jns
outsb
shll
mov
inc
imul
addl
xchg
je
xchg
sub
inc
push
and
xor
dec
rcrb
in
enter
sub
and
leave
insb
loop
fistps
fs
mov
shll
add
pop
push
jbe
or
adc
into
add
dec
mov
sub
cmpl
push
or
add
add
jl
dec
fdivrl
jp
pop
push
in
lahf
add
test
ficompl
xor
ss
cmpsl
dec
leave
and
dec
mov
pop
xor
outsb
jne
dec
push
xchg
inc
mov
nop
inc
shll
js
pusha
hlt
cmp
cli
enter
in
mov
jp
add
das
and
js
and
fnsave
push
pusha
xor
jecxz
or
popl
loopne
adc
and
mov
pop
push
sub
jge
lods
add
fidivrl
out
dec
mov
scas
add
xor
mov
dec
xor
mov
sub
test
add
adc
or
popa
cmpsl
xchg
in
jmp
pop
mov
add
pop
fildl
lods
ja
sbb
out
jae
addb
push
push
lret
test
pop
pop
push
pop
imul
fnstsw
pop
sahf
in
in
cmp
pop
push
mov
test
add
lods
ljmp
sbb
xchg
gs
fwait
lcall
scas
insl
ljmp
in
lds
cwtl
jo
fadd
pop
fwait
and
cmp
adc
ja
into
and
xchg
insb
push
shrl
push
loopne
or
mov
push
aas
rol
add
sub
lret
xchg
lret
xchg
xchg
inc
fcomi
xor
mov
nop
jge
xchg
cltd
push
jp
fsubrl
add
and
dec
gs
or
ljmp
pushf
push
xor
cmpsl
popa
xor
pop
jp
inc
std
sub
xchg
pop
bound
pushf
cmp
cmc
or
inc
scas
pushl
dec
mov
int3
cld
xlat
mov
aam
out
and
stc
cs
lds
aaa
ds
hlt
fcmovnbe
dec
fstpt
div
xchg
add
xchg
xchg
in
sub
and
inc
mov
dec
inc
leave
mov
adc
jmp
mov
dec
xor
notb
push
outsb
mov
out
rcl
lock
lahf
test
xor
push
outsb
fwait
aas
cmpsl
cs
mov
ss
cmc
arpl
lcall
push
sub
cli
dec
push
int3
push
dec
cld
pushf
xchg
ret
mov
jmp
push
scas
xchg
mov
std
sbb
push
or
das
push
gs
push
ficoms
jo
aaa
lret
adc
iret
adc
repnz
outsb
xchg
lahf
pusha
lcall
ss
sahf
mov
ss
push
cs
pop
scas
mov
stc
les
xorl
sbb
mov
mov
jae
push
fnstenv
daa
hlt
jne
mov
lods
leave
jo
test
leave
mov
sub
inc
push
orl
xchg
out
inc
jno
pop
repnz
dec
or
dec
outsl
push
movsb
sbb
or
loopne
lcall
lcall
push
xor
inc
and
pop
inc
xchg
or
lock
ret
and
pop
mov
add
clc
mov
jecxz
std
shll
sub
and
dec
rcrl
repz
mov
scas
push
and
inc
ror
lock
push
and
repnz
pop
jbe
xor
adc
stc
test
cmp
xlat
mov
fstpt
xor
pushf
mov
sbb
gs
bound
insb
aam
js
push
sti
ljmp
and
xchg
idivl
sbb
pop
daa
enter
mov
call
jnp
fistl
xor
mov
xor
add
or
pushf
mov
test
pop
sub
imul
repnz
gs
inc
or
or
sub
imull
rorb
popa
xchg
dec
sbb
sbb
ret
push
inc
popa
sbb
mov
call
adc
mov
std
and
pop
sub
cmp
in
sbb
push
addr16
add
repz
mov
xchg
ret
push
popf
or
clc
jbe
hlt
fs
pushl
and
ds
lcall
lods
sub
loope
sub
mov
jecxz
dec
push
xor
xchg
jb
jb
jno
orb
jmp
fldenv
movsl
jecxz
cmc
add
cli
jo
iret
cmp
push
xlat
jmp
enter
dec
out
add
loope
jnp
not
or
or
loope
roll
xchg
lret
mov
imulb
xor
mov
ja
insb
jo
jae
xchg
jno
adc
mull
jae
ficomps
xor
popa
cmp
js
dec
loop
jmp
rol
aam
mov
xor
sub
fmulp
or
lods
leave
push
out
sub
mov
cs
pop
jns
add
sbb
mov
test
repnz
fdivp
sarl
nop
pop
les
sbbb
xor
add
adc
cmp
xor
or
inc
pop
sbb
inc
inc
fdivl
pop
sub
inc
mov
add
insb
cld
adc
je
and
sar
adc
and
xchg
sbb
sbb
lods
ror
mov
mov
rcr
pushf
mov
jg
and
jecxz
daa
xor
jg
out
nop
repz
test
pop
ret
aaa
in
jp
jmp
dec
divl
scas
out
lock
inc
test
dec
push
lahf
push
inc
fisubrl
ret
mov
movsb
fiaddl
movl
ss
les
mov
jne
stos
outsb
xor
sbb
mov
xchg
jns
mov
push
call
xor
adc
movsb
adc
mov
adc
popf
push
out
mov
std
and
repz
fldt
scas
leave
jg
and
loope
sar
daa
push
jp
mov
rcrl
out
in
push
shll
int
pop
mov
xchg
mov
add
add
out
xchg
icebp
mov
out
aad
adc
jecxz
jae
lock
and
add
mov
pushf
sub
xlat
ljmp
xor
decl
xor
mov
or
jb
repz
repnz
pop
enter
mov
jbe
pop
test
mov
shufps
xchg
sub
nop
pop
insl
dec
push
mov
movsl
add
fnsave
outsb
test
and
ds
repnz
mov
or
out
dec
repz
nop
mov
add
jge
and
push
push
fcoml
out
out
bnd
jbe
or
jl
dec
adc
test
and
imul
inc
jl
add
hlt
cmc
ss
push
push
mov
jmp
es
repnz
cli
ret
adc
mov
mov
sbb
add
push
mov
adc
xlat
mov
xchg
sub
lds
lds
adcl
mulb
pushf
or
sbb
push
test
jne
outsl
arpl
xorl
clc
in
into
mov
sbbl
daa
mov
cwtl
aaa
daa
jl
les
or
jo
mov
or
cmp
jl
push
les
ret
out
mov
sbb
insb
stos
repnz
mov
sahf
mov
dec
mov
ficoms
test
jl
xchg
xor
aaa
jo
pop
jl
fsubrl
xchg
lods
in
add
pop
mov
fisubs
inc
xchg
fstpl
dec
mov
testb
cmp
add
insb
cmp
mov
mov
mov
fsubl
fwait
pop
gs
jmp
mov
sahf
icebp
dec
mov
cmp
dec
inc
stc
xchg
mov
ja
xor
je
ljmpw
mov
aam
mov
add
push
lahf
mov
fmul
popa
movb
inc
push
push
jg
aad
xchg
out
or
mov
pop
push
mov
repz
mov
lret
ja
mov
lods
int3
enter
lock
and
add
or
movsb
mov
lahf
xor
sub
pop
sub
repnz
int3
addr16
mov
add
insl
bound
jne
xchg
pop
mov
dec
push
push
push
and
and
sub
mov
popa
xchg
sbb
lahf
adc
mov
xchg
lret
rcr
repnz
popf
jbe
test
pop
sahf
mov
xor
sub
aam
and
add
mov
aam
xchg
jl
stos
popf
jne
clc
push
aaa
roll
das
shr
mov
mov
jae
mov
or
in
inc
pop
ret
data16
pop
jge
jle
adc
pop
jns
stos
sbb
sahf
aas
shl
mov
icebp
pop
out
sbb
jge
push
scas
outsl
es
jle
roll
scas
pop
adc
xchg
in
repz
out
sbb
aaa
ret
xchg
jmp
out
cld
push
fmuls
add
in
and
fidivrl
cmp
rcl
sar
insb
dec
or
leave
fimull
and
cmpl
sti
adc
add
adc
fidivs
dec
into
mov
jp,pt
cld
nop
jbe
mov
fimuls
enter
loopne
mov
dec
xor
pusha
push
and
jl
stos
aam
dec
sub
xchg
mov
lret
lock
mov
push
or
andb
mov
xchg
cmp
mov
xor
pop
pop
pop
fnstcw
xchg
mov
lds
mov
out
test
pop
out
xchg
xchg
sub
jp
mov
xchg
push
cmp
mov
jne
scas
shlb
daa
loop
push
mov
mov
cmp
test
sbb
adc
xchg
sbbb
enter
jl
ss
arpl
pop
jb
sbb
lods
jmp
jl
lods
data16
bound
divb
iret
pop
lcall
lods
mov
insb
call
add
loop
adc
lods
fcmovu
in
outsl
cmpsl
mov
cmp
loopne
or
cmp
inc
mov
cmpsl
lds
jge
stos
jae
clc
fidivrs
mov
jo
popf
jnp
adcb
rcrl
lahf
cmp
pusha
xor
ljmpw
dec
cmpsl
cli
lock
lahf
or
aas
imul
icebp
mov
ljmp
aad
or
push
or
rcr
sbb
stos
pop
rclb
test
cmc
bndstx
sub
dec
les
xlat
add
dec
es
outsl
mov
push
imull
push
divl
in
mov
ficoml
push
nop
je
clc
cmpsl
gs
and
lret
pusha
xabort
pop
dec
addr16
lock
xchg
push
cmpsb
ljmp
repz
outsb
adc
insb
addl
iret
pop
fsubs
mov
test
push
or
add
test
or
scas
mov
shll
stc
xor
and
and
movsl
push
jmp
into
add
jmp
dec
pop
pusha
bound
aaa
push
ja
xlat
xchg
jae
into
iret
out
out
ficomps
insb
jmp
lret
shll
pop
cli
push
mov
xor
mov
imul
test
jl
fs
jg
pop
insb
pop
lret
mov
mov
imul
inc
dec
jp
lahf
fsubr
movb
scas
cmp
mov
xchg
pop
and
and
jne
add
pop
xor
fwait
sub
xchg
fnstenv
loope
inc
xchg
popa
ja
sahf
stc
popa
iret
xchg
and
fbld
shrb
push
add
aam
jns
dec
sbb
ja
popf
pop
jne
jo
imul
mov
mov
cli
popf
or
push
jl
and
popa
pushf
push
add
sti
jge
jne
pop
int3
push
jg
jp
sarl
mov
into
aad
test
pop
jo
dec
jmp
loopne
dec
icebp
xlat
divb
lods
mov
and
popa
frstor
mov
out
inc
lods
pop
and
sbb
repz
cmpsb
push
xchg
add
add
add
mov
xlat
mov
shlb
push
scas
testl
add
mov
mov
mov
mov
shlb
push
or
popa
insl
rcrb
xchg
arpl
loop
xorl
ret
jge
pop
int
add
cli
out
mov
inc
push
mov
jl
xor
dec
pop
or
sar
iret
stc
inc
rolb
int3
push
loop
pop
loop
xor
sub
jg
dec
sti
insl
movsb
xchg
loop
xchg
imul
push
push
xor
xchg
fs
mov
dec
dec
dec
fst
xchg
jge
or
test
sbb
cmp
in
ss
in
orb
std
cmp
in
jle
add
popa
push
ja
test
insl
pop
orb
jae
imul
xchg
call
xchg
sbb
sub
mov
adc
mov
popf
cmp
ftst
mov
xor
xchg
mov
sbb
aas
push
adc
jge
mov
xlat
ljmp
lcall
aaa
xchg
mov
std
cmp
sahf
lahf
ja
xor
push
leave
movsb
and
imul
jns
mov
es
lods
imul
mov
push
stc
aam
loope
pop
movb
loope
jle
out
pop
dec
jge
xchg
xchg
sbb
xchg
dec
mov
mov
in
inc
add
ja
nop
in
lods
js
out
nop
xchg
push
es
ja
ds
mov
inc
cwtl
cwtl
jecxz
pop
cmpsl
pop
dec
mov
scas
roll
out
pop
jg
aad
push
or
push
and
iret
into
ss
mov
lods
repnz
loopne
xchg
js
sbb
dec
cmc
sub
sub
dec
out
inc
lret
hlt
jne
addb
loopne
sahf
pop
or
movl
mov
iret
jecxz
arpl
inc
push
and
jg
or
call
lcall
iret
and
or
push
jp
pop
cli
jmp
dec
stos
or
pop
mov
and
popa
sbb
das
cmp
adc
or
cmpsl
in
pop
jne
test
xor
pop
icebp
pop
mov
or
inc
xorl
mov
pop
mov
ror
ror
in
lods
out
sbb
adc
lods
jne
or
jo
push
jle
adc
mov
dec
add
jne
insb
or
push
xchg
jns
adc
clc
dec
sbb
fsts
pop
xor
stos
stos
push
call
je
mov
fcmovne
dec
addl
dec
insl
loopne
fnstcw
cmp
fstpt
pushl
scas
cwtl
iret
jge
setp
out
and
lods
out
or
sahf
sbbb
sub
ret
cs
mov
es
int3
into
negl
in
xchg
inc
cmp
inc
sbb
mov
sbb
lret
mov
or
fdivs
test
fsubrs
std
out
frstor
dec
push
ja
inc
ljmp
pop
jns
sub
xchg
sub
test
nop
les
pusha
sub
sub
mov
ret
sub
in
adc
xor
push
int3
fistl
push
pushf
mov
mov
add
mov
negb
cld
js
or
dec
xchg
jl
inc
sub
cmc
insb
lds
sub
push
mov
rorb
and
sahf
mov
loope
jbe
sbb
shlb
sub
mov
fsubrs
cmp
mov
inc
clc
dec
insl
fldt
sahf
jnp
jns
cmp
xchg
adc
adc
pop
add
add
add
sbb
jge
xchg
int3
out
or
je
out
mov
dec
shlb
stc
mov
or
sub
inc
sub
in
mov
mov
push
or
and
loope
pop
sub
mov
lods
xchg
pop
xorb
mov
mov
dec
and
iret
scas
push
fmuls
mov
ja
lods
inc
mov
pop
dec
adc
das
inc
xor
popa
cmpsb
mov
ss
mov
insb
clc
push
jle
dec
popf
mov
sbb
lcall
lods
xchg
jns
mov
fmulp
into
jp
jge
push
and
in
sub
inc
mov
adc
lret
aam
push
adc
sbb
jecxz
out
iret
or
outsb
mov
out
xor
sub
rcl
adc
pop
push
sbb
stos
push
mov
orb
mov
nop
and
mov
lret
push
popw
cltd
lea
cmp
out
fstps
pop
fsub
xor
ds
dec
int
cmp
out
jb
push
mov
aas
in
jnp
negl
and
mov
xchg
jl
xchg
inc
lods
jns
test
insl
fldcw
ds
push
and
and
dec
sti
adc
cmp
rorb
call
inc
jb
pop
pop
mov
sub
out
pop
shlb
jne
adc
cmp
pop
inc
cli
ret
xor
in
push
sbb
push
and
or
repz
pop
add
loopne
mov
mov
xchg
and
stos
nop
push
jae
mov
ret
scas
testl
int
xchg
cmp
shlb
or
cli
inc
adc
mov
xor
dec
xor
pusha
subb
daa
dec
xchg
hlt
mov
dec
inc
out
test
imul
orl
inc
arpl
mov
test
jnp
lret
out
test
and
and
mov
scas
sarb
stos
stos
out
dec
jl
frstor
lds
jno
test
lahf
jae
xor
rorl
inc
iret
cmp
xorl
std
fcmovne
pop
cmp
add
xchg
xchg
or
mov
push
into
orb
outsl
iret
lea
add
mov
dec
mov
std
into
pushf
mov
sbb
test
mov
mov
or
mov
ror
scas
and
lret
popf
push
sub
stc
add
repnz
arpl
cli
mov
or
mov
je
adc
xor
xchg
ret
and
jns
icebp
aam
add
or
lea
cltd
pop
sbb
cmp
repnz
pop
cwtl
scas
push
pushf
inc
adc
gs
shrb
mov
xor
popf
ror
lds
add
add
add
repz
movsb
adc
movsb
jo
mov
add
pop
add
fldcw
add
cmpsb
std
mov
filds
inc
cmp
mov
xor
paddusw
aam
popa
mov
dec
and
mov
cmpsb
inc
cs
aad
pop
or
in
and
jbe
dec
addr16
out
and
mov
adc
repz
mov
push
mov
fwait
add
in
dec
mov
inc
in
mov
rcrl
and
inc
nop
pushw
push
int
cmp
repz
lods
sub
or
test
data16
stos
xchg
adc
lret
je
nop
push
mov
cmc
pop
leave
jp
outsb
mov
jg
xor
int
mov
xor
lods
test
push
fs
gs
jbe
sub
test
lods
cld
xchg
push
add
xor
adc
sub
loopne
jp
outsl
push
mov
pop
jb
cltd
mov
jp
cli
pop
xchg
push
rcrl
popa
add
stos
pop
and
push
fimuls
popa
iret
push
dec
xchg
cltd
pop
nop
cmp
jo
gs
sub
xchg
and
mov
outsl
mov
and
aad
sbb
and
inc
jnp
xchg
mov
test
data16
mov
xor
jbe
and
mov
lahf
mov
push
mov
cmc
bound
data16
cmp
push
std
cmp
add
xchg
pop
and
cmpsb
jg
mov
jbe
mov
movl
sti
fs
mov
movsb
dec
or
adc
std
int
popf
sbb
push
nop
inc
xlat
xchg
add
jns
nop
xchg
sbb
pop
ret
push
sub
cmc
gs
fdivrl
or
adc
rclb
or
mov
mov
pop
cs
push
sahf
inc
out
mov
push
push
lods
xchg
dec
or
and
test
das
popa
adc
xchg
push
mov
xchg
sahf
popa
pop
add
or
ljmp
lcall
sbb
fildll
lahf
pushaw
and
lods
pop
fistpll
fwait
add
dec
loop
test
or
mov
call
js
push
nop
push
into
repz
ficomps
xor
aaa
push
mov
mov
popa
shlb
cmpsb
xchg
repnz
or
xor
js
mov
pop
dec
test
mov
repz
cmc
xchg
fs
push
pop
inc
cmp
cmc
push
dec
mov
dec
aas
decb
xor
mov
or
fists
cmc
or
ja
adc
int3
dec
jp
lcall
jg
hlt
or
mov
or
movl
out
mov
add
push
cmpsl
pop
xor
fmul
add
loope
xchg
sub
add
jge
inc
cmpsb
sbb
mov
in
or
aad
popa
mov
push
push
sar
scas
rcll
test
dec
cli
lret
pushf
pop
rcll
inc
incb
stc
loope
pop
lret
cmpsb
dec
mov
jns
mov
dec
sub
ss
mov
dec
fcmovne
setns
movsl
and
pop
cmpsb
xchg
jl
mov
push
xor
clc
dec
xchg
xchg
call
cmp
leave
sub
xchg
out
ds
clc
sbb
xor
mov
xor
aad
xor
dec
movl
xlat
stos
pop
lods
fsub
fnsave
adc
dec
push
das
jge
les
cmp
push
jecxz
jge
xchg
out
jnp
out
pmaxsw
mov
decl
or
pop
loopne
and
mov
jo
or
pop
jg
call
pop
and
xchg
dec
out
mov
shrb
pushf
cmp
jnp
mov
xlat
mov
stos
jbe
mov
xor
adc
out
mov
add
lea
sbb
xorl
inc
mov
dec
xchg
int
add
loopne
pusha
sar
test
ror
mov
fwait
add
imul
push
gs
test
jnp
ret
icebp
sub
dec
add
sbb
pop
int3
in
in
cmpsb
push
pushl
movsl
push
add
and
dec
arpl
cwtl
shll
mov
adc
aaa
int
loopne
xor
jns
cwtl
mov
mov
xchg
or
fistl
jmp
ljmp
data16
jp
xchg
fsts
cs
fcompl
lds
adc
fisubrl
pushf
lds
mov
es
int
sub
xor
scas
and
adc
repz
sbb
aaa
movsb
xor
into
jne
lahf
inc
sbb
hlt
and
push
xchg
loopne
loop
es
jbe
mov
addr16
addr16
ds
aas
jg
sbb
loopne
sahf
in
inc
jmp
mov
push
movsl
mov
push
lock
push
lret
sbb
loopne
mov
sbb
push
stc
mov
lret
add
insb
in
aam
iret
inc
in
inc
or
test
sarb
and
fldl
jge
mov
insl
xchg
ljmp
lods
sub
cmc
lods
fcoms
jno
movsb
popa
jb
mov
mov
aam
mov
mov
push
cmp
test
outsl
test
and
lods
dec
jno
repnz
xor
lods
sub
ret
scas
cli
xor
cmp
dec
test
dec
push
dec
fwait
out
mov
and
in
jp
testb
pop
iret
cmpsl
mov
icebp
popf
arpl
lds
push
pusha
sub
in
gs
movsl
jg
fisttpl
jb
mov
mov
clc
inc
inc
xor
insl
in
lahf
fisubs
mov
mov
mov
scas
dec
sti
mov
push
jle
out
mov
xchg
adc
out
iret
popf
js
out
inc
or
adc
lret
das
sbb
jne
xchg
fwait
push
leave
pop
or
fbstp
sarl
jns
adc
or
inc
shl
std
int3
lret
cmp
les
dec
es
ret
sbb
stos
lcall
xchg
out
or
and
xchg
dec
xchg
sub
js
mov
dec
add
das
out
les
