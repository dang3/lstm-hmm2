mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
jle
dec
push
nopl
jmp
mov
ffree
push
sub
les
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
xlat
das
lahf
sbb
and
and
jne
xor
je
popf
jmp
mov
sti
bound
pop
insl
ljmp
push
jecxz
lds
sti
jae
std
lods
cmp
cld
imul
or
ret
lcall
push
sbb
sub
repnz
loop
push
popa
movsl
int3
ja
dec
and
cmp
mov
fcomps
outsb
in
cmp
mov
push
push
test
adc
popl
cmpsl
sub
adc
mov
pop
mov
mov
push
sarl
jo
insb
adc
aaa
jno
daa
pop
add
shrb
int
push
ficoms
dec
sti
add
cmp
dec
outsb
and
or
push
bnd
lods
sbb
lock
sub
aam
fnsave
notb
shl
lret
and
enter
adc
mov
lock
daa
insl
dec
pop
or
test
and
mov
mov
popa
inc
imul
icebp
stos
lea
push
icebp
enter
inc
cmpl
adc
sti
test
sub
int3
mov
xchg
in
popf
adcb
outsb
jle
pop
jnp
xchg
xor
fwait
pop
pop
jb
bnd
mov
sbb
aaa
adc
pop
xor
test
push
cmp
pop
ja
shrb
xchg
jne
int3
cmp
jnp
or
xchg
out
movsb
mov
movsb
xor
popf
neg
inc
or
iret
mov
sbb
sbb
test
cmp
xor
ja
es
xlat
out
inc
popf
adc
sbb
dec
aas
dec
int
pop
rcr
jne
xchg
mov
xchg
in
sub
dec
sub
int
sub
xchg
push
jl
adc
fwait
gs
cwtl
pop
clc
xchg
and
js
cmp
sbb
inc
mov
pushf
bound
sub
pop
out
test
jecxz
adc
stos
test
lods
sub
add
and
stos
jno
aad
cmp
js
inc
cmp
sbb
mov
cmp
pop
negl
push
pop
or
push
dec
test
aas
mov
dec
mov
pushl
mov
inc
lcall
adc
fisttpl
imulb
shlb
cld
pop
fmul
es
xlat
lods
jge
sub
pop
out
mov
scas
arpl
imul
push
mov
pop
jg,pn
int3
addr16
push
test
fsubrl
mov
lds
test
cmp
adc
push
mov
cmp
jg
cmp
jae
mov
jno
push
mov
mov
cld
pop
xor
movsb
stos
push
sbb
shlb
mov
das
outsl
imul
fs
push
xorl
mov
sub
pop
aad
sub
jle
insb
dec
out
push
ret
jg
lock
in
mov
outsb
dec
xor
xchg
pop
repnz
testb
mov
das
pop
inc
jl
ficompl
xchg
push
xchg
and
add
pop
stos
mov
mov
adc
xor
pop
movsl
js
fldenv
lods
cmp
das
xchg
testb
or
cmp
into
sbb
fisubs
addr16
daa
inc
xchg
and
xchg
inc
loopne
or
loopne
call
pop
cltd
les
and
nopl
fisubs
hlt
xor
rcrb
popw
es
ja
cltd
push
xchg
aas
pop
pxor
mov
icebp
dec
outsl
xor
mov
lea
jno
add
mov
daa
lods
dec
fs
stc
pusha
jne
cli
or
mov
imul
lds
insb
adc
lods
pop
aam
jp
roll
push
jmp
xchg
jl
out
icebp
bound
leave
cmpb
add
push
in
repnz
inc
and
jns
lcall
lock
xor
das
stos
insb
pop
movsl
pop
callw
pop
enter
sbb
pusha
insb
push
in
enter
popa
lock
bswap
hlt
test
mov
stos
sub
pop
in
mov
mov
and
push
mov
js
push
cwtl
out
lahf
lcall
push
test
xchg
or
pop
or
jns
inc
lds
add
xchg
jl
mov
pop
shlb
and
mov
daa
dec
fldcw
pop
inc
fisubrs
xchg
or
js
js
dec
pushf
jmp
inc
ret
in
sarb
stos
adc
sub
dec
loop
fprem1
enter
inc
shrl
rcrb
pop
adc
jl
test
and
dec
add
fsub
bound
repnz
sbbl
mov
or
xchg
add
or
arpl
xchg
push
dec
mov
inc
sub
loop
rol
adc
adc
lcall
jbe
dec
mov
push
scas
jns
dec
cltd
imull
fnsave
mov
bound
sub
dec
mov
push
pop
pop
xchg
push
loop
mov
roll
jecxz
jmp
stos
addr16
clc
in
xor
and
lret
jge
lods
mov
popf
mov
xor
rorb
push
decl
sub
jge
popa
push
lods
xchg
enter
pop
mov
test
sbb
sbb
push
cli
and
jecxz
xchg
arpl
pop
push
mov
dec
aam
cmp
out
mov
cmp
subb
shl
and
pop
outsl
out
xchg
mov
mov
dec
mov
int3
xchg
add
xor
inc
fisubrs
jns
dec
cmp
fisttpl
mov
xlat
rcrb
test
movsl
sbb
push
shr
xchg
sbb
aas
ret
push
movsb
jp
xor
push
mov
pusha
sub
mov
ljmp
xor
jb
xchg
xchg
xor
iret
repz
jp
add
mov
push
dec
or
cmpsb
mov
in
xchg
jae
mov
pop
movsb
out
popa
and
push
mov
or
fldcw
push
mov
mov
mov
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
btc
xchg
ficomps
or
dec
inc
add
jmp
bswap
mov
mov
outsb
push
mov
cwtl
dec
xchg
xor
dec
mov
inc
sbb
cs
jne
ffreep
cmpsb
call
pandn
jns
and
mov
add
aaa
sti
xchg
jns
dec
adc
ret
push
jnp
sbb
lea
outsl
xor
lds
or
das
add
cmp
repz
movsl
lds
xchg
add
xor
push
dec
gs
xor
add
and
enter
mov
cmp
inc
adc
ret
out
sub
mov
lahf
mov
iret
repnz
jns
pop
adc
push
loope
lods
jg
or
xchg
ret
ljmp
push
sub
outsl
stc
sbb
mov
insb
sbb
mov
xchg
xchg
xchg
inc
and
add
cmp
xchg
outsb
inc
jmp
fmul
into
inc
or
mov
gs
cmp
dec
ss
and
je
jmp
mov
loopne
das
dec
daa
mov
lds
mov
stc
xor
loop
mov
or
scas
std
push
xchg
aad
mov
and
pop
icebp
mov
mov
popa
mov
ficompl
out
inc
sbb
cmp
ljmp
xor
imulb
mov
cld
lds
mov
mov
sub
mov
loop
es
scas
lcall
and
pmaxsw
cmp
inc
sub
stos
rorl
sbb
sub
adc
and
popa
xor
insb
aad
movsb
into
mov
fldcw
notb
pushf
ja
adc
out
push
mov
arpl
ret
in
fcoms
mov
xchg
push
xchg
xchg
in
call
testl
movsl
addl
cli
sub
cmpb
in
push
inc
pop
sub
pop
je
inc
addr16
nop
insl
repz
loop
clc
pcmpeqb
adc
arpl
and
testb
repz
push
jae
xor
je
leave
cmp
jg
jbe
pop
jmp
inc
jg
aas
subl
adc
cwtl
inc
jmp
push
mov
jp
outsl
fdivl
popf
and
sbb
inc
inc
mov
sbb
or
mov
stc
stos
pop
mov
shr
adc
dec
or
pop
jnp
pop
ret
inc
in
push
jns
jecxz
mov
jne
lcall
mov
scas
pop
and
inc
cmp
rcrl
inc
out
sub
pop
stc
push
jecxz
xchg
int3
mov
lret
jbe
fwait
sub
mov
push
loopne
mov
ss
adc
pop
fcmovnb
push
fdivrp
mov
sub
addl
repz
aas
mov
outsb
and
inc
enter
push
enter
xor
mov
outsb
jno
cld
push
dec
in
jno
sbb
xchg
inc
scas
mov
popl
jae
test
jbe
subb
rcrl
and
push
out
jle
insb
pop
jb
inc
scas
xchg
lcall
mull
mov
mov
or
aaa
shlb
xchg
iret
addr16
jecxz
or
mov
scas
rclb
mov
dec
cmp
mov
xor
jbe
xor
std
mov
repnz
scas
dec
adc
dec
inc
repz
rolb
mov
sub
and
cld
mov
inc
cmp
outsl
cmp
into
repz
or
fimull
icebp
jmpw
and
bound
dec
dec
in
add
jns
sub
lods
adc
cmpsb
lret
add
cmc
stos
mov
or
xchg
das
dec
shl
mov
push
popf
mov
int3
dec
lahf
xchg
sub
cmp
or
scas
jae
int3
int
nop
je
je
out
outsl
add
aam
mov
lahf
into
or
pop
stos
test
gs
sub
inc
jbe
lods
and
mov
inc
dec
jbe
dec
fiadds
and
or
and
add
sarb
pop
cmpsl
cmp
lcall
xor
xor
jne
sbb
pop
shrb
xor
ret
pop
xlat
xchg
scas
jmp
fwait
mov
testb
add
roll
cmp
addb
int
push
jnp
add
pop
daa
xchg
repz
mov
cmp
ret
aas
xchg
xchg
lret
out
pop
imul
push
jecxz
mov
aaa
cli
jmp
daa
imul
adc
pop
or
sbb
jmp
subb
cmpl
cmpb
data16
rcrl
test
inc
cmp
xchg
adc
scas
and
popa
ret
and
xor
ss
mov
push
fidivrl
xor
lret
jle
jae
rorl
jge
pop
imul
aaa
test
clc
or
pushf
xchg
stos
pop
mov
mov
dec
xor
dec
xor
pop
andb
and
pushf
xor
lret
sbb
fistpll
add
dec
push
pop
or
ror
imul
adc
imul
adc
in
xchg
fldenv
out
sub
push
and
daa
adc
cld
lcall
nop
ret
dec
imul
mov
das
ret
adc
dec
mov
insl
jne
addb
mov
rcl
adc
cwtl
mov
adc
dec
sub
mov
ret
lcall
cmpsl
ja
loope
and
dec
mov
fwait
sbb
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
fdivs
jge
push
mov
aaa
in
mov
bound
xor
repz
sbb
mov
sbb
imul
xchg
dec
cs
xchg
call
test
jmp
gs
jno
arpl
mov
pop
stos
cmp
ss
out
jne
sbb
repnz
or
jecxz
ljmp
aad
dec
lock
mov
jne
push
pop
sub
movsb
xchg
das
das
dec
jge
jb
or
pop
adc
add
dec
arpl
mov
std
sbbb
icebp
or
shlb
push
and
sbb
dec
std
ret
imul
cmp
rol
mov
xchg
sbbl
loope
xlat
xchg
in
adc
cmp
xchg
adc
std
stc
add
sahf
sbb
mov
cmp
xchg
xchg
xor
push
sub
cs
shll
out
xor
adc
test
out
mov
cmovne
push
fistpl
lds
adc
mov
sti
sub
xchg
mov
push
pop
xlat
lock
xchg
dec
push
and
hlt
fnstcw
popa
push
jecxz
xchg
jo
test
mov
pusha
data16
inc
lds
adc
cwtl
insb
and
dec
icebp
insl
std
xchg
cmp
hlt
jecxz
and
movsb
mov
cmp
loopne
decl
push
in
scas
clc
outsl
imul
push
cltd
subb
mov
jae
jp
adc
cmp
loop
mov
jle
outsb
jo
add
push
test
push
adc
ficoml
mov
repnz
adc
les
sub
leave
xchg
xchg
scas
lea
cmpsb
pop
andl
lahf
jne
xor
xor
fisubs
in
dec
inc
testb
adc
gs
add
pop
xchg
or
xchg
in
xor
add
push
fcompl
aam
pushf
adcb
sub
scas
or
sarb
mov
das
addr16
mov
and
stos
or
xchg
sti
js
push
jp
xor
xor
stos
and
sbb
sub
xchg
in
xchg
pop
sti
xlat
sbb
mov
sbb
cli
dec
and
bound
push
imulb
inc
lcall
outsl
mov
in
push
aas
mov
adc
lea
mov
ret
mov
iret
cmpsl
add
dec
mov
cmp
rcl
ljmp
or
sahf
cld
jo
insl
cwtl
push
fistpl
lret
xchg
sti
dec
mov
pop
iret
xor
mov
loope
push
mov
push
jg
cmp
stos
aad
ror
xor
lahf
mov
add
das
imul
cmpsb
fistl
ret
cltd
stos
movsb
fisttpl
lods
dec
ret
out
scas
pop
mov
inc
ret
cmpsl
les
adcb
pop
cwtl
jnp
lret
jo
xor
dec
push
push
or
retw
test
ss
test
or
mov
xchg
sbb
cli
dec
sub
movsb
aam
mov
lds
pop
shll
cld
sahf
in
adc
sub
orb
xchg
or
and
jb
in
jne
pop
add
call
dec
xchg
add
xchg
xor
xchg
cmp
cmp
daa
xor
popa
aas
jnp
xchg
shrb
repnz
daa
cmpsb
xchg
imul
andb
pop
dec
lock
aas
or
jno
in
xchg
adc
jecxz
inc
aam
cwtl
xchg
data16
dec
mov
pop
jecxz
sti
mull
and
push
inc
aad
xchg
cli
stc
daa
sub
cs
mov
and
enter
jp
out
rclb
adc
lods
xchg
inc
and
dec
iret
pop
sbb
sahf
sbb
inc
xchg
jne
daa
xchg
and
mov
pcmpgtw
xchg
ja
test
je
pop
adc
xorb
push
pop
popf
and
dec
je
mov
inc
xchg
xchg
mov
repz
push
imul
ja
sub
mov
xchg
into
cmp
inc
ficompl
mov
jns
lahf
push
jno
xchg
sbb
cmpl
cmc
jns
xchg
scas
les
andl
mov
in
lcall
hlt
dec
lock
add
pop
xchg
sti
mov
jp
lods
pusha
adc
es
sub
movsb
je
out
ja
xor
adcb
cmc
fidivl
jo
mov
mov
push
ja
xchg
inc
cltd
rolb
adc
xchg
loopne
push
fwait
rcll
xlat
out
dec
pop
fldenv
movsb
divl
adc
sbb
xchg
jl
popf
sbbb
inc
and
xlat
imull
lods
ds
add
jg
je
cwtl
icebp
mov
daa
xor
fdivrp
ja
cmp
adc
push
repz
shll
push
jne
sub
jg
jl
inc
adc
jmp
mov
outsb
xchg
sbb
in
mov
add
cwtl
enter
cli
dec
js
jnp
and
out
cld
icebp
insl
and
hlt
ret
leave
ret
mov
push
je
inc
cwtl
daa
push
push
push
jbe
jecxz
movsl
outsl
cmpl
push
popf
xchg
xor
xchg
add
shlb
pop
cmp
aad
pushaw
in
int
inc
ret
rorl
popf
stos
je
mov
add
outsb
mov
dec
mov
mov
xor
xchg
out
or
jmp
test
jne
pop
imul
fnstsw
iret
jns
adc
add
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
shr
xchg
fimuls
pinsrw
out
jmp
outsl
lcall
sti
mov
leave
xchg
xchg
xchg
pop
test
shl
pop
adc
lret
mov
add
rorl
je
push
shlb
pop
pop
push
sarl
add
inc
aas
xchg
xchg
inc
dec
mov
mov
lret
orb
inc
adc
sub
inc
inc
mov
push
push
add
fwait
pusha
xlat
mov
xchg
fsubs
push
jo
push
dec
repz
je
ret
jae
in
nop
and
inc
dec
mov
lret
mov
cld
int3
dec
ret
cmp
in
je
dec
xchg
sti
roll
mov
mov
xchg
xchg
push
and
ds
xchg
rorb
movsb
jbe
sbb
loope
mov
or
jo
dec
sbbb
out
rcll
dec
in
push
lds
mov
mov
daa
fistps
mov
push
mov
fwait
pop
pop
fdivrs
pop
gs
sub
inc
faddl
sbb
cmp
mov
bound
aas
jo
xor
fldcw
adc
dec
push
mov
into
push
dec
jnp
mov
loope
push
ljmp
loopne
sbb
push
adc
movsb
dec
dec
or
sti
pop
add
rcll
out
jb
xchg
jns
popf
jg
or
fsub
pop
dec
and
movsb
std
ds
stc
and
das
adc
sahf
push
in
adc
pop
push
ja
iret
sbb
cmp
les
mov
inc
ljmp
in
pop
or
jle
jo
jb
sqrtps
and
dec
pop
fsubl
in
push
in
cs
cld
lods
push
orb
add
mov
mulb
fcomps
xor
test
sub
xchg
inc
adc
jno
movb
inc
dec
push
cli
lret
les
int3
ret
jbe
sti
sub
pop
insl
fildl
xor
or
pop
shrb
sbb
outsb
fcmovu
in
cwtl
int
mov
dec
cmp
into
cmpsl
cld
outsl
inc
les
stc
and
xlat
scas
leave
outsb
mov
and
stos
xchg
fldenv
dec
add
rclb
clc
or
jmp
outsb
push
xor
inc
xor
popf
jle
out
mov
xor
fwait
jmp
lods
leave
adc
enter
xchg
enter
mov
pop
loopne
sub
mov
dec
cmp
cli
testb
subb
adcl
inc
and
sub
sub
push
test
mov
lret
and
repnz
or
dec
ljmp
push
outsl
adc
xor
fimull
bound
add
lds
jbe
sbb
and
sbb
sahf
dec
jb
cltd
popa
loope
add
jp
and
add
xchg
enter
in
mov
adc
add
lea
mov
push
out
jg
imul
pop
adc
jge
push
mov
push
cmp
or
push
insl
jl
push
sbb
mov
pusha
pop
cltd
fldenv
sbb
lods
cwtl
cmp
xor
mov
cmp
je
push
leave
enter
fwait
leave
test
addr16
and
sbbb
sbb
jmp
ljmp
imul
repz
sub
es
lock
enter
lds
inc
js
mov
lds
imul
lds
mov
dec
mov
out
push
jmp
loopne
and
mov
or
lret
inc
jecxz
sub
jmp
stc
lahf
rcl
stc
std
cmp
mov
jne
sti
sub
fs
or
lea
addr16
pop
inc
jg
sbb
gs
icebp
pop
out
and
shr
int3
and
stos
fisubs
mov
pop
out
mov
mov
push
rolb
negl
popf
sbb
mov
popf
aaa
mov
popa
pop
rclb
int3
test
dec
pop
mov
stos
icebp
fsubl
jns
jno
push
out
jge
inc
mov
or
and
shrb
mov
adc
lods
cmpl
sahf
fcoml
int3
int
pop
and
rcr
pop
es
mov
test
jo
cmc
push
dec
xchg
sub
clc
dec
sbb
faddl
sarb
lret
sub
push
pop
movsl
push
loopne
loope
scas
das
mov
dec
jl
inc
repz
cmp
fistl
fistpll
in
xchg
lcall
fcomp
mov
dec
mov
sbb
dec
sub
or
xlat
pop
jl
daa
add
imul
rcr
push
mov
and
cmpb
add
in
sbb
sub
sbb
mov
in
int3
int
dec
repz
cmc
negb
inc
or
jl
addl
mov
cs
arpl
pop
adc
pop
movsb
xchg
inc
mov
dec
leave
sbb
xchg
mov
fwait
nop
insb
lock
mov
rclb
cmc
sbbb
adc
gs
sar
jbe
adc
mov
pop
fisubs
sub
jno
imul
mov
ret
mov
xchg
pop
sub
sbb
or
push
add
shrl
and
push
loopne
sbb
adc
jmp
jb
xlat
lahf
push
in
inc
imulb
aas
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
shrd
fmull
and
xchg
pop
and
bound
jle
outsb
es
dec
sub
dec
repnz
mov
cmpsb
cltd
out
int
test
in
add
iret
xor
or
leave
in
jae
pxor
addr16
cmpsl
or
insl
mov
mov
cmpsb
pop
xlat
mov
xchg
daa
enter
and
int3
lds
lds
movsb
bound
insl
jp
xor
xorl
insl
dec
ds
int
cmp
in
fldt
fwait
pop
movsl
pop
sarl
sti
push
aad
ds
rcr
jmp
into
lods
andb
jne
adc
mov
adc
mov
lret
jl
ljmp
jmp
fs
push
mov
mov
notb
xchg
jb
add
jg
out
sarl
in
notl
push
idiv
iret
rolb
hlt
and
out
jae
pop
adc
popf
xor
pop
mov
fisubs
mov
cmpsl
leave
into
push
repz
je
jo
adc
pop
jns
jg
rorb
or
pop
shl
test
cmp
mov
out
jno
sti
or
xchg
mov
or
mov
push
repz
ficoms
add
or
inc
loopne
sbb
adc
out
cltd
cmp
and
sbb
xchg
dec
and
out
cmpl
call
shrb
sbb
mov
cmp
mov
pusha
iret
loop
mov
cs
inc
xor
sub
testl
xchg
out
jbe
cli
sahf
pop
mov
sti
fcomps
sub
fsubrp
jmp
outsb
imul
in
cmp
mov
lret
sbb
mov
in
jecxz
lock
fpatan
add
xorb
push
test
xchg
cmp
lods
int
and
aad
push
out
clc
mov
sbb
je
xchg
inc
fiaddl
dec
pop
push
add
pop
lret
mov
out
push
loope
popa
daa
pop
ja
mov
and
xor
stc
sub
cwtl
xor
cld
ret
sbb
and
lcall
dec
mov
xor
cmc
and
and
xor
std
dec
or
sbb
mov
popa
addr16
and
xor
sub
inc
sbb
add
ljmp
xchg
xchg
jg
enter
mov
popf
mov
popf
sbb
gs
pop
sbb
push
jne
lahf
ss
inc
push
fsts
pop
fstp
xor
lcall
push
out
jno
mov
push
fnstsw
iret
cmpsl
push
mov
push
pop
sub
xor
outsb
sub
add
dec
adc
jbe
xchg
inc
testb
cmp
jae
add
pop
push
fcom
and
decb
fstpl
mov
ror
xchg
out
sahf
shlb
mov
shrl
inc
in
mov
push
mov
ficompl
cmc
xor
out
pop
inc
add
bnd
push
ljmp
adc
rol
pop
and
mov
cmp
loopne
mov
sub
movsb
push
lcall
mov
notl
mov
add
ret
stc
fbld
add
mov
mov
arpl
mov
jle
push
sub
jp
add
mov
xor
pop
pop
iret
cmpsl
adc
outsb
pop
movsb
cwtl
xorb
iret
popa
das
adc
lea
xor
popa
dec
roll
xchg
push
mov
daa
mov
in
in
shrl
mov
lock
outsb
out
arpl
stc
or
jae
mov
inc
pop
cltd
xchg
mov
icebp
cmp
lds
stc
es
cmpsb
in
adc
lods
dec
xchg
outsb
ret
lret
mov
jnp
jl
mov
lret
pop
mov
popf
orl
adc
stos
aad
loope
lcall
movsb
mov
inc
leave
outsl
mov
adcb
int
stos
push
inc
inc
push
ja
cmpsl
mov
sub
aam
sbb
mov
dec
adc
mov
jecxz
pop
or
mov
pop
push
leave
jecxz
pop
shl
cmpb
loope
adc
lret
add
and
popa
dec
inc
popf
daa
mov
sti
lea
cmp
xor
mov
mov
mov
aaa
and
mov
loopne
ficomps
pop
hlt
imul
xchg
iret
xchg
popf
jnp
dec
sbb
pop
add
or
dec
lahf
leave
adc
fistl
sub
loopne
push
jecxz
xor
adc
clc
jle
icebp
pop
adc
xchg
pop
insl
pop
jbe
into
in
clc
stc
cmp
push
add
lret
pushl
cmc
cs
cmpsb
pop
in
outsl
and
push
inc
fbld
addr16
mov
cld
negl
lcall
repz
mov
add
out
jge
and
sbb
jmp
jecxz
sbb
pusha
or
dec
xorb
and
pop
jns
repz
pop
ljmp
inc
pop
cli
and
sub
jmp
and
clc
adc
loop
cmp
gs
jge
fsubl
jb
ja
mov
sbb
mov
aad
into
sub
jb,pn
dec
dec
es
fstl
jno
adc
cld
int
dec
js
jbe
ror
sub
xchg
inc
int
xchg
xchg
stc
xor
push
repnz
jo
xlat
push
clc
or
lret
xor
xchg
mov
cli
mov
clc
jle
dec
sbb
test
pop
shrb
popa
push
mov
aad
movsl
adc
mov
or
sbb
call
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
js
in
rorb
pinsrw
cmovae
cmp
call
test
inc
ljmp
insb
sub
sub
mov
mov
mov
sbb
nop
xchg
pop
mov
das
pop
mov
imul
cmc
or
push
repz
out
scas
cmp
push
scas
xchg
jno
cmc
add
popf
cmp
daa
pop
mov
dec
fcomps
jno
mov
sarb
int
push
jecxz
pop
add
cmc
push
mov
shll
aaa
es
cmp
out
inc
mov
sbb
cmp
dec
mov
ret
add
push
ja
aad
or
out
cltd
testb
xor
mov
mov
sbb
adc
cwtl
or
decb
mov
pop
daa
sub
mov
mov
mov
jne
daa
pop
ss
mov
aaa
cmp
and
shrb
jp
shr
and
mov
in
mov
xlat
out
cmp
jle
in
or
adc
sub
inc
fdivl
ja
popa
add
scas
pop
xchg
xchg
int
test
inc
movsb
or
or
cmc
adc
pop
aas
xlat
lods
push
ret
cmp
inc
mov
dec
aaa
mov
mov
pop
rcrb
pop
dec
add
sbb
mov
inc
push
shlb
lods
pop
jb
scas
scas
mov
mov
dec
enter
jle
fdivl
or
push
mov
cltd
roll
cwtl
mov
fsub
or
imul
fwait
mov
shr
orl
and
cvttps2pi
mov
mov
sbb
test
sbb
pusha
gs
dec
xchg
outsl
scas
enter
sarb
or
pop
xchg
mov
mov
cmpsb
popa
sub
lds
push
decb
mull
xchg
mov
jno
push
es
xchg
loope
push
fbld
mov
dec
push
push
sub
shll
mov
xchg
xor
push
sub
add
jnp
inc
bound
lcall
andb
inc
push
mov
cmpsb
leave
dec
jo
cmp
out
or
cmp
pushf
sub
jl
notb
cli
adc
dec
xchg
int3
dec
pop
ljmp
push
scas
cmp
dec
subb
mov
pop
leave
push
sub
bound
rorl
loop
dec
cli
icebp
ds
mov
add
cmp
stos
repnz
arpl
adc
hlt
das
pusha
push
mov
ja
rcr
jns
es
lcall
dec
outsb
mov
ficoms
insb
pop
mov
cmc
mov
and
into
mov
cmp
mov
mov
push
shrb
jb
dec
lret
in
aas
test
addr16
mov
lea
out
jbe
inc
fildl
pop
push
ljmp
lds
jecxz
mov
jle
cs
fisubrl
lds
xor
mov
sub
and
lock
rol
pushf
mov
mov
out
orl
movsl
adc
test
insl
ret
mov
jge
dec
pop
sbb
dec
jl
pop
jns
adc
and
or
in
lret
nop
xchg
sub
aas
xchg
fnstsw
xchg
imul
push
lea
inc
or
shll
subl
daa
popa
lods
in
xorb
mov
fildll
adc
lea
pop
mov
push
imul
mov
mov
mov
sub
xchg
ja,pt
test
testl
aam
add
out
add
in
sub
inc
lret
sbb
add
sbb
ja
sub
mov
jne
mov
mov
dec
in
pop
push
add
pop
icebp
outsb
add
repz
push
pop
dec
inc
jmp
inc
ja
dec
add
leave
inc
jg
inc
adc
jmp
lret
mov
jmp
push
or
push
dec
in
add
jno
mov
add
in
mov
pop
cli
dec
or
test
sahf
aaa
or
mov
inc
pop
in
lock
test
pop
in
dec
cs
insb
idivl
or
inc
jg
sti
in
iret
cltd
push
testb
lock
jae
add
fbstp
mov
ja
xchg
mov
mov
bound
push
xor
or
jb
push
pop
add
cld
sahf
and
test
adc
test
mov
mov
sub
fwait
cmc
int3
data16
push
enter
cmpsl
cmp
add
js
in
nop
fists
push
or
lcall
push
fbstp
mov
imul
xchg
sub
pop
push
xor
xlat
out
mov
out
push
lret
aaa
cld
sbb
ss
aaa
jp
pop
adc
or
rol
inc
outsl
dec
push
dec
out
out
mov
adc
inc
popa
jmp
dec
xchg
inc
ret
test
es
xchg
or
imul
ud2
test
adcb
imul
mov
sub
daa
lcall
leave
ds
or
mov
into
inc
mov
out
icebp
icebp
out
push
pusha
mov
cmc
push
jmp
sub
xchg
sub
popa
push
lods
pusha
or
daa
jecxz
and
jns
xor
inc
loopne
push
dec
or
hlt
insb
dec
test
add
loopne
loope
pop
fldl
in
add
ja
aaa
clc
mov
lahf
jge
dec
push
dec
iret
jbe
les
xchg
and
sub
aad
repz
or
jne
inc
test
imul
sbb
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
add
pinsrw
wbinvd
jae
cld
pop
xor
xchg
mov
pop
and
fnsave
stc
lds
jns
rcl
ret
jg
jbe
repz
sahf
push
jmp
dec
jg
filds
pushf
sar
lds
fsubl
mov
inc
mov
pop
jg
xorl
out
jecxz
popf
xchg
mov
movsl
xchg
xorl
inc
inc
cwtl
arpl
dec
xlat
jmp
push
testl
iret
dec
int3
or
jmp
adc
jl
popa
add
je
aam
inc
outsl
movl
outsl
xor
mov
shlb
add
jno
lcall
shlb
repz
ficoms
lods
mov
js
xor
adc
hlt
dec
jo
dec
out
pusha
and
outsl
loop
inc
mov
int
lret
fiadds
push
sbb
push
popf
dec
jno
add
fcompl
test
sbb
dec
inc
and
pusha
int3
jo
ficoml
jns
pop
sti
cmp
add
dec
addl
cmc
dec
or
fwait
cmp
mov
push
cs
and
mov
xchg
inc
sub
sbb
push
mov
test
jae
add
ja
and
fidivrl
insl
adc
cmp
addb
jmp
bound
pop
imulb
je
mov
push
lret
cmp
xlat
dec
in
and
aad
xor
aad
fs
sbbl
jne
sbb
pop
rolb
sub
test
cmp
leave
or
and
mov
into
icebp
fwait
lods
cmp
dec
pop
subb
ficompl
and
dec
dec
adc
aad
nop
repnz
push
xlat
lahf
push
outsl
or
iret
mov
scas
mov
addr16
sub
stos
or
fdivrp
sub
dec
xor
pop
inc
icebp
jbe
and
push
jle
or
fs
cltd
xchg
lahf
or
out
stos
imul
push
sbb
push
pop
mov
push
mov
in
dec
idiv
mov
lcall
call
sahf
cmpsb
jl
jg
cmp
repnz
jecxz
gs
jmp
adc
hlt
fistps
xor
xor
jno
sub
xlat
mov
push
add
push
pop
sbb
adc
xor
mov
cltd
cld
add
fistl
pushf
into
mov
push
push
mov
stos
test
push
adc
push
rcrb
test
xchg
adc
addl
bound
xchg
les
fnstsw
or
push
lret
inc
loop
data16
fstl
pop
pop
pop
ret
lods
loopne
mov
lods
mov
repnz
sbb
arpl
lods
sti
adc
cmpsb
inc
ljmp
pop
cmc
pop
mov
scas
and
mov
sbb
test
in
aas
aad
lods
push
aas
ja
adc
sub
icebp
lock
mov
pop
fbstp
xor
das
mov
push
ds
inc
enter
jp
pop
jbe
inc
xor
lds
mov
and
shr
out
mov
ror
lods
mov
popa
mov
fistl
call
in
adc
jns
inc
mov
loopne
out
nop
sub
dec
xor
dec
dec
sub
inc
arpl
and
and
das
lods
pop
pop
inc
out
pusha
je
call
inc
and
sbb
scas
or
push
sarl
adcb
ret
dec
pop
inc
out
lea
in
sbb
sub
adc
mov
jge
xchg
aaa
xchg
adc
xchg
cmp
mov
ss
lods
mov
stos
movsl
push
out
ja
or
dec
fidivs
and
hlt
lahf
mov
sbb
mov
test
repz
ret
mov
dec
lcall
outsl
pop
bound
adc
xchg
movsb
imul
sbb
ret
rcl
push
mov
and
jne
pop
int3
clc
int
pusha
push
mov
xchg
dec
cmc
loop
lahf
xchg
jge
mov
or
mov
inc
jne
sub
cwtl
lods
lcall
pop
jge
and
mov
sahf
out
jno
int3
lahf
test
sarb
push
imul
shl
lcall
repnz
jb
jbe
cmpsl
leave
mov
sbb
sbb
fsubs
sub
test
mov
cmc
pop
jb
xchg
dec
rcrb
nop
cmpsb
xor
cwtl
movsl
jb
xchg
leave
push
scas
adc
and
frstor
push
aam
daa
popa
movsb
in
xchg
xor
add
hlt
push
lods
mov
in
int3
cwtl
fists
call
std
sbb
and
push
sub
popf
xchg
clc
inc
cmpsl
pop
xor
je
mov
jb
jecxz
fdiv
clc
shr
inc
test
ret
enter
testl
outsl
lahf
shrl
pop
sbb
xor
add
mov
jmp
sbb
fildl
add
xchg
mov
mov
cmc
das
cmp
sub
mov
xor
add
movsb
sbb
sbb
dec
stos
sbb
sub
dec
fs
dec
ror
xchg
popf
scas
push
add
jb
adc
in
shrl
sbb
iret
rcrb
inc
int
popf
jo
jg
out
mov
insb
mov
cmc
lds
fmul
sub
inc
cmp
xchg
decb
or
xchg
jb
lock
ret
js
repz
fwait
xchg
imul
cltd
xchg
jnp
cltd
sbb
ret
loope
and
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
clc
xchg
and
data16
pinsrw
pmaxsw
mov
mov
rcr
jmp
push
dec
sub
rcl
cwtl
xor
jne
insl
cmp
jge
xor
xchg
sahf
sub
cld
das
mov
out
aam
cltd
jns
pop
dec
scas
and
aaa
dec
std
jb
iret
icebp
mov
push
or
pusha
xchg
fildll
jbe
mov
or
mov
lds
outsl
stos
cmp
cmp
getsec
pop
call
xor
hlt
les
mov
insb
cltd
sub
sbb
cmpb
inc
push
out
js
mov
cmpsb
mov
xchg
sub
mov
imul
lods
fbstp
pop
xchg
pop
inc
scas
pop
lock
insl
hlt
je
xchg
popa
sarb
mov
addr16
sub
fldcw
sbb
mov
jae
jns
push
xchg
push
cli
loopne
mov
mov
fs
jp
fildl
adc
dec
icebp
adc
sbb
aas
mov
adc
mov
mov
inc
jns
rcr
mov
lea
and
pop
or
sbb
ja
xchg
scas
mov
xchg
cmpl
pusha
cld
pop
and
mov
mov
jae
ljmp
inc
inc
lret
jecxz
cli
fstpt
inc
adc
jmp
xchg
gs
pop
gs
push
out
out
into
data16
in
jbe
add
int
into
add
jb
inc
ss
imul
out
cmp
insb
movsb
jge
mov
jmp
popa
cmc
and
repnz
pusha
dec
cmp
dec
popf
inc
xor
lods
mov
iret
ds
lods
or
mov
movsb
outsl
inc
repz
mov
xchg
add
div
das
cs
inc
std
sub
inc
push
in
loope
aaa
xchg
sub
es
std
sbb
inc
mov
scas
outsl
pusha
mov
sub
dec
mov
mov
xchg
ss
cmpsl
packssdw
lods
popf
push
xor
fstpt
and
sbb
pop
sub
mov
or
shrb
mov
out
xor
cmpsl
lahf
out
inc
jle
mov
sbb
cmp
and
sbb
daa
mov
push
push
ror
lcall
lds
cwtl
sub
adc
ljmp
imul
mov
hlt
sti
xor
lret
test
mov
mov
stos
and
filds
add
outsl
outsb
mov
lock
mov
xor
jecxz
mov
adc
rclb
push
sub
loope
xchg
out
mov
les
test
xlat
popa
push
and
cwtl
fdivs
cs
nop
and
ficompl
cmc
scas
xor
fists
xchg
or
sbb
jno
outsl
out
mov
push
ret
mov
xor
test
inc
js
nop
sbb
mov
pusha
fwait
aas
push
dec
xor
rcll
cmp
jle
push
mov
or
cmp
pusha
mov
jbe
xor
sbb
push
xor
or
and
out
call
hlt
cmp
dec
enter
push
sahf
lret
dec
cltd
lret
inc
cld
mov
dec
popf
sbb
jnp
iret
lcall
sub
ja
push
cmp
pop
shl
insl
push
pop
mov
inc
xchg
dec
or
stc
push
inc
std
pusha
pop
adcb
jno
scas
dec
pop
movsl
mov
jmp
dec
pop
ja
xchg
jo
pop
push
outsb
je
xchg
daa
jns
clc
jae
inc
mov
outsl
lods
mov
pop
ja
bnd
clc
push
or
pushl
push
addb
jge
dec
mov
imul
ja
fbstp
sti
mov
test
inc
fstps
jbe
je
fcmovb
cmpsl
hlt
dec
lock
dec
pop
mov
mov
jo
inc
push
sub
mov
sub
data16
mov
stc
or
xchg
jbe
xor
push
shll
pusha
cmp
fcmovne
bound
push
mov
jno
test
jo
shr
jns
jo
rcrb
jae
scas
iret
test
sbb
inc
lcall
cmpb
imul
lea
bnd
or
js
inc
in
push
scas
ret
xchg
rcl
adc
rorl
outsl
sarl
inc
jle
fsubl
add
jmp
xchg
sbb
gs
pusha
push
mov
sbb
lock
mov
push
or
or
mov
icebp
sub
lahf
aam
lret
ret
pop
mov
jecxz
dec
subl
es
inc
adc
adc
mov
jmp
das
mov
jg
mov
roll
and
add
mov
or
and
nop
cmpsl
add
adc
pushf
sub
out
cmpsb
dec
jae
sbb
push
enter
xchg
movsl
in
arpl
out
mov
mov
sbb
loope
insl
sub
scas
out
dec
insl
cltd
xor
dec
push
fs
out
ret
push
inc
shrl
cmp
test
push
sub
test
inc
bound
push
ljmp
inc
out
shrb
xor
clc
inc
fdivr
and
xchg
leave
jo
sub
push
sub
lcall
pushf
and
mov
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
fnstcw
pinsrw
paddb
push
andl
push
mov
adc
pop
pop
das
mov
mov
test
dec
mov
ret
adc
jmp
inc
shlb
dec
sub
adc
lds
inc
sti
imul
orb
mov
out
pop
sarb
icebp
sbb
sahf
ds
js
addr16
movsb
test
push
ret
jb
insl
adc
jle
jbe
sbb
into
xchg
push
repz
xorb
dec
aaa
lock
lea
cli
adc
xor
pop
daa
mov
mov
cmp
ljmp
and
adc
data16
xor
scas
je
jp
inc
jne
fisttpll
push
mov
jecxz
push
mov
aaa
dec
roll
or
dec
fisubrl
and
fwait
int
jnp
jp
pushf
mov
popa
sbb
pop
aaa
faddp
or
ret
xor
sbb
ret
sahf
shlb
jno
stc
and
in
and
cmc
arpl
pop
sbb
push
mov
inc
ficoml
aad
cmp
jns
fcompl
xor
xchg
xchg
mov
dec
add
sub
cmp
mov
je
out
sbb
dec
pop
cli
dec
sub
cwtl
mov
out
pop
lds
hlt
sti
pop
pop
fsub
jl
mov
cmp
jb
idivl
nop
dec
aas
pop
xchg
push
orl
mov
jmp
es
adc
shrb
loopne
daa
mov
xchg
testl
iret
daa
adc
mov
mov
push
fisttpl
add
sarb
filds
push
divl
push
das
shll
adc
cmp
and
rcrb
pop
cmp
jno
jl
xchg
ficoms
imul
gs
test
sub
clc
test
subl
sub
out
pop
pop
aam
sbb
add
jmp
xor
arpl
adc
lahf
imul
nop
std
mov
mov
inc
push
xchg
xchg
outsl
xor
mov
std
roll
adc
sbb
push
mov
pop
mov
fxch
push
gs
into
cmc
pop
xor
or
inc
mov
mov
les
lods
inc
mov
lret
out
icebp
xchg
push
jge
int3
jecxz
jmp
pop
fldt
out
push
pop
add
test
outsb
lock
sub
sub
push
call
addr16
mov
xchg
push
xor
pop
gs
dec
push
sbb
pop
adc
dec
xlat
jno
cwtl
inc
popa
js
and
xchg
cld
in
inc
push
loopne
pop
arpl
inc
dec
pushf
insb
and
stos
xor
add
mov
cs
fisubrl
rcl
imul
pop
popa
mov
push
cmc
aas
and
inc
xchg
fmull
loop
out
ret
lret
test
ret
and
aas
xchg
dec
int3
pop
test
push
sarb
pop
sbb
dec
xchg
push
enter
xchg
pop
xchg
loop
into
scas
or
xor
movsl
and
sbb
insb
sarl
repz
jg
adc
xchg
xchg
cmp
push
test
in
sub
add
sti
adc
icebp
push
cmp
mov
flds
xor
push
adc
sbb
and
scas
sub
imull
xor
decl
insl
mov
xor
push
in
test
sahf
push
sbb
data16
dec
cmp
std
push
subl
jne
cmp
push
xchg
cltd
stos
dec
jmp
lds
loop
inc
out
dec
lods
sbb
jo
cmp
adc
popa
jge
jecxz
test
aam
pop
mov
push
push
dec
stc
lret
sbbb
and
mov
adc
mov
xchg
add
mov
outsl
inc
and
jbe
fstl
mov
or
mov
addr16
sti
mul
mov
pop
and
fbstp
sub
cs
pop
pop
jno
push
dec
cltd
cmpsb
add
out
fimuls
in
mov
nop
xor
xor
inc
jb
adc
mov
mov
jl
jmp
insl
xchg
or
xor
inc
or
pop
push
stc
and
lea
clc
add
cmpl
stc
inc
ret
pop
scas
and
inc
pop
and
adc
xor
or
push
pop
jnp
dec
jnp
mov
xchg
lcall
add
xor
aam
int3
or
loop
into
aaa
mov
leave
adc
xor
sub
mov
sbb
inc
push
adcl
sub
inc
int3
cmpsb
pop
ss
push
daa
inc
aaa
outsb
mov
inc
lcall
loopne
pop
mov
movsl
fs
cli
fsubs
sub
out
int
in
jb
fwait
or
pop
iret
es
push
add
pop
adc
sbb
lret
mov
in
mov
and
xchg
rcr
nop
and
loopne
leave
ret
mov
push
jns
push
xchg
shl
scas
insb
hlt
jge
pop
push
cmp
scas
mull
xchg
in
sbb
mov
insb
dec
push
adc
sbb
dec
div
push
std
cmpsb
out
cmp
add
lahf
mov
test
mov
fimull
aaa
xchg
lods
testl
sarb
inc
aad
dec
adc
cmp
inc
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
add
repz
mov
add
pmuludq
pop
or
push
mov
sub
mov
dec
lret
jnp
add
nop
fstpt
cmp
mov
lcall
loop
pop
sti
inc
cwtl
das
or
lahf
dec
ret
xchg
lret
dec
dec
sub
xor
popa
xchg
dec
xchg
loop
scas
jno
mov
push
inc
fmuls
jbe
sbb
mov
add
or
cli
sar
loop
out
in
js
add
pop
jmp
push
aas
pop
popf
das
and
cmp
mov
dec
inc
push
add
mov
inc
pop
or
sbb
in
jb
mov
jb
dec
jle
dec
pop
ljmp
fidivrs
and
push
hlt
insl
adc
leave
xchg
pop
mul
pop
xor
jp
sbbb
cmpsl
iret
mov
cmp
xchg
pop
cmp
stc
inc
mov
or
or
mov
xchg
cwtl
mov
add
jb
xlat
push
icebp
jmp
inc
neg
jae
jnp
push
out
pushf
mov
imul
push
adcl
rcl
mov
test
lds
leave
jl
cld
jl
push
mov
notb
adc
adc
adc
jecxz
jge
cmpsb
enter
or
aam
lea
and
out
jp
int
pop
ret
cmp
or
xchg
fcmovb
xchg
and
cltd
scas
mov
mov
lods
dec
scas
inc
jnp
arpl
and
aas
mov
fsubs
push
roll
sub
fst
xchg
faddl
adc
lods
std
dec
push
xlat
push
fists
dec
gs
int3
ret
xchg
movsl
fsts
lock
xchg
pushf
xchg
sbb
cs
pop
inc
rorb
and
out
cmp
or
lods
lahf
lds
std
xor
pop
xor
shl
mov
das
xchg
and
daa
nop
loop
repnz
cld
and
mov
sbb
jo
adc
mov
out
xchg
jo
pop
call
pop
or
les
rdpmc
pop
js
cwtl
movsl
jae
out
pop
fs
int
pusha
pop
enter
mov
les
mov
lods
mov
inc
add
pop
pop
into
mov
jmp
dec
jb
outsl
pop
cmp
jle
cmp
mov
pop
mov
xchg
fcoml
icebp
dec
pusha
pop
sbbb
add
push
pop
jecxz
ss
xchg
sub
or
out
cmp
imull
repnz
xor
das
cmp
jmp
jl
mov
xchg
pop
pop
cli
lahf
clc
adc
add
or
mov
aas
fnstcw
pop
inc
pop
push
and
lret
and
pop
cmpl
movsb
mov
push
or
jo
pandn
jge
sbb
stos
ds
std
cmpl
cmp
aam
push
inc
jecxz
std
push
pop
cli
mov
stos
sub
mov
movsb
out
cmp
nop
add
std
cld
fcoml
cmp
and
jb
jbe
dec
add
pop
out
mov
or
dec
mov
cltd
mov
test
mov
inc
cmp
cmp
pop
jmp
xor
es
sbb
mov
push
jp
mov
int3
cmp
inc
shl
mov
ja
mov
and
repnz
mov
insl
or
inc
adc
dec
mov
adc
cmc
cltd
pop
scas
push
jmp
pop
cmc
pop
gs
jmp
add
adc
dec
mov
sbb
dec
scas
addr16
add
test
das
stos
pop
out
mov
sbb
fiadds
add
xchg
ljmp
and
adc
pop
out
jns
daa
roll
shll
and
sub
inc
add
into
xor
test
jno
outsl
into
jg
push
fs
inc
cs
and
push
push
mov
mov
pushf
test
adc
clc
mov
or
sbb
mov
shlb
pop
mov
pop
adc
loop
aaa
out
cli
jecxz
jns
or
push
or
pop
ja
in
and
xor
fists
add
mov
mov
shll
push
pop
xchg
xchg
jmp
fistpll
or
xor
repnz
add
dec
in
mov
add
mov
data16
sti
mov
cmpsb
or
sbb
and
pop
aam
or
sahf
orb
lret
cld
fistl
push
in
fs
or
inc
adc
js
lea
jae
mov
les
cmp
fsts
leave
dec
lret
cmp
ljmp
cmp
fistpll
repz
clc
fs
fidivrs
mov
pop
fs
inc
jge
cmp
adc
fistl
rcll
out
and
push
lods
or
push
mov
cmpl
and
sub
push
imul
ret
icebp
xchg
adc
rolb
or
or
cmpsl
int3
and
movsb
adcb
frstor
cmpsl
adc
shr
inc
es
inc
pusha
negl
iret
jnp
mov
mov
mov
out
lret
dec
pop
dec
js
xchg
out
in
adc
push
loopne
push
ffree
xor
add
xchg
in
enter
cmp
pop
or
leave
ss
jne
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
mov
mov
add
setno
popf
sub
or
jg
out
mov
adc
imul
pusha
iret
mov
push
push
adc
cmp
add
daa
out
ds
addr16
pop
xchg
xchg
ljmp
push
cmc
xor
cltd
xchg
add
fisubs
dec
aaa
faddl
xchg
rolb
repnz
repnz
bound
xchg
lea
jecxz
data16
lock
mov
enter
mov
popf
aam
mov
push
test
sarb
or
cmp
daa
dec
iret
mov
shr
in
stos
xchg
popf
shl
dec
sub
mov
pop
int
scas
adc
inc
sub
lret
push
xchg
lock
cmp
pop
sub
out
sub
jecxz
fldcw
ljmp
subb
cld
and
jg
mov
or
sbb
iret
xchg
xchg
subb
shr
movsb
sub
dec
testl
cltd
ret
pop
cltd
lcall
push
leave
outsl
sbb
push
bound
pop
data16
sbb
inc
imul
cld
aaa
lods
push
xchg
test
mov
mov
imul
movl
ret
pop
and
xlat
xchg
sub
dec
int
push
adc
mov
int
clc
jnp
in
or
xchg
cwtl
mov
icebp
mul
mov
icebp
push
xor
sub
pop
or
repnz
js
std
push
cmp
int3
push
and
xchg
icebp
push
inc
jl
daa
jg
fldt
inc
jg
sbb
inc
and
and
test
pop
jae
mov
add
clc
sahf
dec
push
push
lahf
inc
fs
sbb
leave
and
movsb
add
cmc
cmp
idivl
dec
xor
add
mov
cltd
shll
loope
mov
movsl
add
inc
push
fstl
mov
clc
cld
mov
les
xor
push
movsb
arpl
or
test
pop
jge
pop
int3
push
addr16
adc
lock
push
and
mov
mov
sbb
jp
jne
mov
and
ror
aas
cmp
xchg
lods
iret
rorl
fildll
add
mov
shll
jbe
jg
mov
dec
les
mov
jns
jmp
jae
das
jbe
iret
cmpsb
sub
jecxz
fsub
mov
sub
xchg
jno
adc
lods
lcall
stc
ret
outsb
imul
scas
outsl
xchg
cmp
dec
int
leave
stos
cmp
aad
mov
sbb
mov
and
or
push
mov
insl
sahf
enter
in
repz
les
and
stc
clc
in
inc
es
call
das
inc
dec
mov
pop
aaa
testb
ret
mov
xlat
mov
xor
lds
loope
leave
pusha
mov
shlb
jecxz
movsl
icebp
nop
pop
cwtl
cmc
push
xlat
pop
adc
inc
sbb
xchg
out
cltd
or
fstpl
shlb
cwtl
repz
dec
loop
sbb
add
fs
fcmovb
daa
and
dec
mov
dec
fmuls
lret
xlat
nop
out
xchg
ss
in
sub
dec
enter
dec
inc
jge
add
lahf
and
dec
add
jnp
jns
aaa
cs
jmp
out
dec
dec
rcll
push
mov
scas
xchg
fsubrs
sub
iret
ret
mov
lea
shll
pop
ja
les
cwtl
lahf
aad
shrb
fimuls
out
mov
cmp
icebp
sub
es
test
mov
das
outsb
cmpsb
mov
dec
sbb
jl
test
add
out
sbb
fdivl
cli
push
xchg
pop
pop
push
and
sbb
push
inc
les
add
push
std
mov
test
cmpsl
and
in
adc
push
mull
movsl
sbb
fstl
push
out
jge
sahf
and
cmpsl
lock
mov
pop
adc
and
jg
addr16
mov
and
std
orl
mov
pop
pop
pusha
rcl
inc
jle
jp
addr16
aam
jl
cmp
iret
fs
xchg
cmp
inc
xchg
in
jecxz
xchg
cmp
xor
cmpb
dec
dec
jle
pop
aas
and
inc
js
or
dec
pop
pop
adc
outsb
lret
sahf
call
js
shl
lahf
inc
test
cmp
and
movsl
inc
mov
or
adc
lret
xor
xchg
out
ds
loop
add
cmp
in
mov
or
push
mov
jle
fstl
jns
outsl
outsb
inc
jmp
ds
lea
xor
ds
ljmp
xor
fadds
test
and
imul
sti
and
or
xchg
scas
leave
negb
scas
push
cli
xor
and
loopne
pop
or
mov
scas
pop
adc
xchg
mov
mov
xorl
aam
ljmp
repnz
and
test
sarb
ret
dec
xchg
call
sbb
nop
push
addl
pop
adc
out
std
jle
xchg
jmp
test
inc
rcr
sub
stos
int
in
daa
outsl
or
mov
in
xchg
jno
xchg
insl
dec
daa
imul
loope
inc
enter
adc
pop
int
incb
mov
pop
and
jle
shrb
and
mov
lods
push
mov
push
bound
int
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
xor
mov
add
dec
xchg
fwait
fwait
nop
adc
mov
mov
movsl
push
xchg
cmp
repz
dec
jle
es
push
mov
push
js
hlt
rorl
jg
adc
push
mov
add
jo
addl
add
movsl
mov
mov
cmp
mov
adc
mov
subl
imul
ret
cwtl
adc
ss
popf
aad
cmp
aaa
clc
ret
sbb
push
cmp
jle
or
test
fbld
scas
jmp
xor
push
jno
adc
mov
pop
or
sub
divl
add
cmp
mov
std
cmpsb
lods
pop
xchg
lods
mov
clc
popa
pop
xlat
cld
lcall
lret
jbe
cmpsl
push
adc
pop
outsl
or
sbb
xor
mov
outsl
sbb
adc
aad
imul
xor
mov
sbb
int3
cmc
push
pop
jl
jns
xchg
sti
jecxz
in
cs
ret
lcall
inc
push
arpl
sbb
pop
out
es
inc
out
mov
ret
out
rcr
adc
adc
sub
jge
ljmp
je
pop
data16
or
push
int
outsl
out
popf
movsl
mov
push
cwtl
mov
insb
sbb
mov
jmp
mov
aad
inc
clc
pop
mov
mov
push
movsl
orl
dec
jbe
out
outsl
inc
inc
adc
mov
bound
push
push
dec
les
subb
lret
cmp
cs
and
pop
call
push
add
pop
mov
addr16
xchg
mov
mov
pop
mov
das
jne
hlt
je
jbe
mov
adc
jne
and
mov
out
xor
repz
popl
xor
jg
or
mov
mov
add
lods
dec
lret
push
imul
push
ret
mov
pop
xlat
dec
push
popa
mov
clc
cmpb
xor
xlat
lods
cld
je
movsl
fisubrl
push
lret
int
mov
inc
cs
imul
xchg
enter
add
das
add
insl
popa
add
mov
lods
out
xchg
mov
mov
lds
fistpl
mov
pop
ljmp
popa
fistl
mov
aad
aad
into
addr16
ret
mov
mov
or
jb
sahf
jmp
lahf
mov
insl
subb
jmp
insl
ljmp
cmc
cwtl
mov
inc
adc
xchg
fsubr
jns
out
dec
jo
mov
mov
icebp
mov
in
lahf
shr
dec
sub
mov
jmp
ljmp
sub
mov
clc
std
cmp
adc
clc
mov
insb
push
push
and
pop
aaa
dec
lcall
ficompl
inc
adc
mov
popa
xlat
lcall
cmp
stos
xor
push
dec
in
faddp
jbe
loope
fcoml
lods
adc
sub
mov
movsl
adc
xlat
outsb
fs
mov
clc
jnp
ss
pop
jne
push
hlt
add
roll
dec
cli
cmp
pusha
push
sbb
ja
jo
push
pop
in
pushf
xchg
ret
scas
jecxz
push
mov
adc
rorl
js
cmpsb
shlb
inc
pushf
push
mov
sub
mov
xchg
lret
test
dec
jno
pop
xchg
or
lahf
mov
aaa
jge
lods
cmpps
cmp
fwait
push
test
mov
fdiv
dec
nop
dec
loope
pop
inc
stc
sbb
mov
lret
pop
inc
push
ljmp
aas
add
sbb
cmpsl
and
scas
mov
ret
jnp
lock
fisubrs
add
sub
test
xor
out
loop
jl
popa
movsl
popf
sub
clc
xlat
rcll
incl
sbb
adc
cmpsl
xor
scas
adc
push
sbb
fdivrl
sysret
xchg
mov
mov
fnsave
jecxz
cmpsb
pop
repz
and
xor
dec
and
popa
ljmp
adc
jb
mov
addr16
mov
fimull
outsl
lret
test
add
movsb
inc
xlat
push
mov
jle
int3
out
jmp
mov
cmp
xor
cmp
dec
into
jno
and
cli
sti
xor
negl
jle
out
adc
add
xlat
insb
popa
jecxz
arpl
cmp
in
add
add
and
rorb
xor
scas
adc
xchg
and
pop
mov
bound
rcr
jo
sbbl
fdivl
in
cmp
sbb
sarl
lret
inc
add
push
xor
sbb
xor
test
mov
lods
mov
aaa
in
sbb
cmpsl
dec
push
ss
jmp
jl
loopne
xchg
mov
mov
out
cmp
jle
jecxz
ret
fmull
lods
out
pop
jp
fstps
bound
cmpsb
adc
xor
mov
cmpsl
outsb
inc
std
cwtl
fistpl
mov
mov
fldcw
xchg
adc
in
sub
pop
mov
sbb
cmc
push
push
or
loopne
stc
jnp
dec
cs
push
in
shlb
sbb
mov
push
mov
mov
jl
cmc
mov
scas
adc
adc
std
es
clc
xchg
stc
rcr
cli
cwtl
lods
sbb
lea
mov
mov
mov
outsb
dec
mov
sarl
jae
in
xchg
mulb
shlb
jp
and
pop
sbb
inc
fldcw
mov
lret
xlat
add
jecxz
jecxz
inc
mov
inc
ficoms
mov
lods
sub
inc
stc
add
addl
add
fs
sarl
mov
xchg
aam
inc
mov
call
fs
sub
mov
lock
shl
les
stos
jecxz
jnp
mov
stos
pop
and
fs
movsl
jno
cmpb
ficomps
add
push
clc
inc
fildll
repnz
jb
bound
pushf
push
imul
dec
jp
xlat
cld
pop
call
mov
sbb
out
in
addr16
arpl
insb
clc
pop
cmp
rcrl
inc
rorb
mov
pop
into
sub
negb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
fs
xchg
repz
pfmax
xchg
orl
out
mov
mov
sub
loopne
jno
cmp
xchg
xlat
xor
pop
jns
mov
mov
fimull
pop
out
daa
dec
inc
call
jmp
iret
popf
test
sub
inc
enter
dec
jecxz
rol
pop
mov
xchg
xor
xchg
inc
mov
lds
popf
mov
pushf
dec
adc
mov
add
dec
loop
inc
mov
adc
or
xchg
or
cmp
fs
pop
lods
inc
push
fdivrs
or
sbbb
div
adc
push
cmp
popf
enter
movsb
aas
mov
push
nop
dec
repz
and
sbbl
sub
xor
dec
jnp
and
mov
mov
mov
shrb
fld1
cld
pushf
pop
jp
in
mov
icebp
lea
jns
and
clc
cmc
add
ja
sti
mov
mov
icebp
adc
inc
xor
add
pushf
int
inc
bnd
loopne
push
les
lahf
push
cwtl
in
rclb
ljmp
inc
xor
js
leave
call
subl
jg
iret
shll
js
sbb
and
mov
push
lret
lods
dec
cs
or
push
in
popf
push
xchg
push
push
jno
jle
fstpt
or
and
jl
div
aas
insb
jecxz
mov
lds
adc
dec
xor
mov
jmp
dec
popf
movsl
jbe
inc
sti
add
je
or
std
xchg
jns
arpl
push
lahf
and
lcall
dec
adc
in
out
jge
mov
sti
mov
add
int3
jno
into
in
insl
add
loopne
cli
xor
adc
arpl
pop
call
sub
testl
icebp
dec
cmp
movsb
test
ja
cmp
sti
push
ffreep
aas
in
mov
adc
or
cmp
cmpsb
jno
out
xor
js
cmp
stos
pop
add
jbe
insb
loop
in
jle
or
les
xchg
fildll
mov
les
lret
jge
xchg
fs
dec
jl
jne
lcall
mov
mov
dec
and
xchg
cmp
daa
mov
mov
rolb
movsl
popl
flds
rcl
adc
mov
adc
dec
and
push
mov
sub
jg
and
es
sub
adc
aad
shll
adc
xchg
add
out
mov
sbb
jns
sub
pop
jae
jb
xchg
stos
rep
jae
pushf
dec
cmp
sub
bound
add
lahf
mov
jb
imul
jp
adc
and
sbb
jb
movsb
fldt
movsl
xchg
push
jp
bound
push
stc
aas
sahf
cmp
pop
push
sub
mov
cmp
mov
testl
lods
sub
mov
sbb
xor
ficomps
stos
mov
cmp
aas
jmp
hlt
jmp
outsb
mov
es
xchg
mov
xchg
outsl
add
jecxz
cmc
insl
mov
addr16
jae
push
stc
jns
dec
lds
lret
and
xchg
sub
lahf
dec
cmp
xlat
dec
or
sahf
int3
push
pop
leave
sub
cwtl
inc
fildl
adc
push
fmul
mov
mov
jae
ret
and
or
out
mov
rol
jecxz
icebp
leave
pop
ja
mov
dec
jg
cmpsb
mov
insl
pop
andb
enter
in
pop
add
push
adc
mov
jbe
mov
stos
jnp
pop
in
jge
xchg
and
dec
dec
xor
sub
xchg
and
push
push
ret
jb
pushf
sbb
cmpsb
jg
mov
mov
inc
xchg
push
push
mov
pop
jnp
mov
push
fiadds
lahf
stc
sub
jo
add
xchg
fs
dec
test
dec
mov
das
inc
cmp
dec
rol
xchg
mov
cltd
xchg
push
ja
test
cltd
lock
mov
or
nop
popa
sbb
insb
sub
jmp
sub
inc
test
int3
xor
imul
dec
inc
pusha
sbb
ss
and
or
and
dec
test
lods
pop
ljmp
cmp
mov
icebp
imul
idiv
fcomps
adc
test
mov
mov
mov
add
cmc
mov
test
xor
push
inc
mov
and
cmp
bound
push
out
sbb
pop
in
xor
lahf
imul
cmove
cmp
push
test
push
push
idivl
jae
dec
divb
test
mov
jle
xor
pop
jg
fisubl
dec
jl
push
mov
xor
mov
cmp
shrl
push
or
add
in
fwait
cmp
subl
xor
pop
add
lret
roll
imul
pop
sbb
xchg
outsb
add
push
cwtl
and
inc
cmp
mov
cmp
xor
dec
inc
mov
in
aam
ficoms
and
cmp
int3
cmpsl
fs
pop
xorb
mov
mov
sbb
mov
sahf
xorb
or
shll
es
ljmp
aad
sub
pop
pop
mov
adc
mov
push
pop
movsl
rcrl
xor
or
or
push
add
jmp
lods
aas
xchg
jns
mov
and
sub
push
xchg
or
mov
mov
xor
pop
ret
push
jnp
ss
jno
pop
in
lcall
repnz
or
je
mov
pop
or
fs
jg
dec
fisttps
add
mov
inc
mov
push
stc
and
mov
scas
outsl
pop
fcomps
xchg
test
bound
fwait
xor
mov
mov
bnd
sub
ljmp
mov
xor
mov
in
call
inc
add
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
in
faddp
stos
pop
add
loope
sbbb
dec
in
inc
andl
ret
in
idivb
out
adc
call
or
push
fdivrl
std
and
jo
lock
or
idivl
push
cmc
lds
daa
xchg
inc
xchg
idivl
add
lret
je
and
stos
xor
push
cmpsb
jae
jb
test
mov
loop
subl
sarb
xchg
mov
int3
pushf
daa
test
pop
xor
test
adc
sti
stos
pop
insl
jne
fiadds
or
or
fisubrl
adc
inc
pop
adc
xchg
jl
icebp
or
or
mov
iret
lods
push
int3
dec
jecxz
fldl
lods
inc
dec
insl
es
rcrl
xor
dec
cwtl
ret
aam
imul
outsb
sbb
int
add
in
shrl
fidivl
sub
add
fldl
mov
in
sar
jle
sub
fldl
cs
or
inc
cld
pushf
out
mov
int3
push
mov
and
ljmp
insl
pushf
lahf
std
loopne
ja
popf
stos
pop
adc
fcmovu
into
call
xchg
sbb
lret
push
daa
out
sub
jbe
ror
jmp
rol
add
test
cli
jge
movsb
cmc
push
lahf
jns
push
cs
xchg
push
jmp
cmpsb
insb
int
push
ds
mov
pop
jnp
mov
mov
cld
adc
mov
push
aam
adc
jo
push
fisubrl
leave
or
dec
stos
repnz
repz
xor
mov
and
mov
inc
mov
inc
mov
les
mov
pop
xor
xchg
mov
sbb
xor
test
rcrl
pop
lds
sbb
jmp
mov
data16
aaa
mov
dec
sahf
stos
repnz
ret
sbb
pusha
shr
jg
test
mov
clc
dec
sub
popa
adc
or
inc
aas
ja
pop
inc
cmp
cmpsl
jno
mov
loope
jge
pusha
xchg
outsl
dec
mov
mov
inc
mov
xor
cmp
mov
sbb
aam
pop
decl
cmp
push
mov
das
inc
push
mov
or
adc
lcall
roll
dec
adcb
push
xchg
cmp
sahf
dec
test
and
shlb
push
cs
fwait
jo
gs
jp
aaa
adc
pop
test
inc
jns
mov
sbb
adc
pop
mov
mov
jnp
jecxz
out
xchg
pop
inc
test
ss
movsl
push
push
inc
out
mov
jmp
repz
aaa
mov
lds
jbe
jne
add
sahf
sub
das
mov
subb
mov
xchg
mov
xor
aaa
out
ja
neg
jae
addl
cmp
mov
xchg
cmp
out
scas
xor
out
scas
inc
enter
mov
xor
dec
adc
fwait
jmp
je
div
or
es
push
dec
inc
jns
mov
mov
mov
jg
repz
fldt
mov
pop
imul
push
xor
iret
inc
rorb
std
add
jae
mov
mov
dec
mov
cmpsl
shrl
pop
stos
ljmp
movsl
push
popa
mov
dec
inc
xor
inc
sbb
addr16
data16
mov
cld
test
push
or
stc
cld
jp
les
out
xchg
jl
sbbl
hlt
jb
and
addr16
cmp
dec
push
stc
call
mov
and
lret
xor
mov
add
and
aad
mov
push
pop
lds
lcall
mov
decl
mov
mov
rorl
inc
mov
lret
into
leave
daa
jno
push
add
mov
aam
xor
lods
adc
jae
aad
fistpl
out
adc
outsb
mov
sbb
sub
test
daa
pusha
mov
lret
sbbl
push
iret
inc
cld
adc
sahf
out
push
sbb
and
pusha
sarl
nop
int
push
dec
repz
imul
xor
js
xchg
scas
rol
jg
dec
dec
jle
mov
cld
and
push
js
mov
imulb
in
sti
sbb
mov
jmp
mov
shrb
inc
pop
jmp
jno
mov
push
fcmovbe
cmp
js
adc
xchg
aam
cmpsl
push
arpl
sar
es
push
imul
fldl
add
mov
add
insl
test
in
shlb
mov
pop
cmpsb
lahf
int3
dec
adc
outsb
cmp
xor
decb
sub
or
adc
ljmp
call
xlat
xchg
add
rcll
xor
mov
mov
pop
xchg
and
sti
mov
pop
pop
mov
cli
sub
insb
jge
subl
push
cwtl
mov
mov
adc
repnz
jbe
in
mov
mov
outsb
sahf
and
cmp
popf
inc
mov
sbb
mov
cs
pushf
sub
int3
into
fstl
popw
jmp
mov
mov
cld
mov
stc
scas
loope
cmp
or
mov
or
lds
aam
lret
outsb
mov
push
sbb
and
and
or
pop
fsub
or
push
pop
and
lret
jg
jmp
lret
dec
das
lret
aad
mov
sbb
ret
lret
cli
fwait
iret
mov
pusha
movsl
jns
ljmp
sub
sahf
xlat
popa
das
addr16
mov
dec
jo
inc
pop
and
rorb
dec
dec
mov
sbbl
ret
push
xchg
sbb
fmull
adc
adc
mov
mov
lods
sub
ss
out
cmp
and
cltd
test
add
push
xchg
repz
jmp
or
dec
jns
mov
sbb
jb
and
sub
sbb
push
stos
lcall
adc
mov
pop
jb
ja
xchg
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
xchg
mov
push
add
dec
cmc
test
mov
mov
out
mov
mov
inc
subl
cmpsl
jle
dec
mov
int
mov
push
lret
mov
scas
in
inc
sbb
lock
xchg
fcompl
bound
dec
test
xchg
mov
sbb
lds
adc
mov
adc
jae
insl
dec
daa
bound
add
mov
div
pop
mov
and
jo
pusha
inc
rclb
loopne
jbe
mov
sti
or
cli
fadds
leave
sub
ljmp
lret
lret
mov
in
arpl
ret
mov
scas
clc
out
push
test
dec
push
sbb
imul
hlt
add
lahf
mov
lret
cmp
sahf
push
les
mov
ja
movsl
xchg
test
movsb
out
pop
pop
sub
pushf
fistpl
jae
push
or
xor
mov
inc
into
mov
mov
pop
lcall
and
dec
fidivrl
fs
adc
sub
outsb
stc
cmc
cmpps
arpl
movsl
pop
or
push
sub
jmp
lcall
lahf
and
jl
fnstsw
mov
stos
push
sahf
mov
call
push
sahf
and
adc
stos
out
push
cmpsb
mov
or
lret
test
daa
and
and
ljmp
push
jecxz
push
enter
jae
aaa
repnz
shl
cmc
divl
in
bound
loop
mov
out
sub
mov
fldcw
cld
and
jae
ja
xchg
add
stos
sub
xchg
xchg
jmp
mov
and
loopne
cmpsb
es
add
cmpsl
mov
addr16
arpl
repnz
mov
ja
pop
nop
xchg
test
imul
subb
divb
push
adc
ret
call
div
mov
jo
leave
add
or
aaa
cmc
les
fnsave
or
add
out
push
in
pusha
add
push
nop
sbb
push
in
daa
cmp
mov
jecxz
aam
out
sub
dec
ljmp
push
inc
or
pusha
or
aam
jecxz
mov
or
ss
adc
icebp
jnp
test
xchg
pop
lods
lock
adc
inc
or
add
addr16
in
fidivs
xchg
pop
fs
dec
jmp
mov
add
xor
scas
push
add
fwait
ljmp
mov
test
jmp
loope
mov
lea
out
mov
cmc
cmp
or
mov
bound
add
add
stos
lock
pushf
mov
or
adc
push
sub
mov
mov
ror
jecxz
xor
fnstsw
inc
push
jno
movsb
imul
cltd
mov
sahf
es
je
rol
or
sbb
movsl
mov
jne
gs
sbb
lods
jne
rcrb
lret
mov
add
mov
sbb
jno
pop
addr16
or
adc
enter
hlt
and
mov
xor
push
bound
xor
inc
lahf
call
add
lret
les
das
cs
out
aad
sbb
lock
cmp
jecxz
outsl
mov
mov
or
sar
adc
or
inc
lea
out
bndldx
test
fsts
sbb
mov
cltd
inc
jb
push
or
out
inc
jmp
sbb
test
mov
loop
orl
add
xchg
outsb
cld
sub
pop
xor
ds
xchg
mov
cs
push
fdivp
int3
das
cmp
dec
push
dec
addb
push
pmulhw
push
dec
imul
pop
sbb
imul
aad
mov
lea
dec
jecxz
xchg
mov
lods
xor
aam
clc
scas
lock
mov
add
out
cmc
xor
test
lahf
dec
xchg
dec
jge
mov
mov
mov
aas
dec
sub
popf
mov
xchg
popf
loopne
inc
addr16
sbb
pop
lahf
sbb
pop
loope
in
lock
xor
in
loop
jmp
fstl
cmp
vmwrite
gs
or
std
sahf
inc
xlat
sub
cmp
stos
and
enter
or
orl
sbb
cmpl
dec
leave
nop
pop
movsb
lock
adc
mov
dec
out
sbb
call
lret
jge
test
sub
stos
mov
repnz
lahf
mov
xor
imul
in
mov
xchg
scas
add
lcall
sbb
cltd
cs
into
mov
test
mov
mov
jl
js
popa
push
ljmp
mov
cmpsl
xor
jnp
xor
incb
cmp
jo
scas
inc
ret
xor
fists
cmp
dec
xlat
ret
mov
dec
insb
dec
sahf
mov
adc
test
mov
mov
xor
js
and
mov
lret
sbb
fnstsw
cmp
mov
pop
adc
mov
sbb
fnstsw
loopne
xor
xor
dec
outsb
xchg
push
outsl
sub
mov
out
cltd
mov
insl
and
imul
in
add
sbb
out
sub
repnz
and
cmc
dec
sub
inc
cmpsb
pop
inc
arpl
or
lret
sub
adc
or
sub
add
mov
xchg
mov
incb
jmp
stc
mov
push
test
out
jns
mov
lods
sti
or
out
and
movsl
xchg
fucomip
cmc
imul
inc
cld
xchg
test
je
inc
aas
sub
dec
in
sub
sbbb
sub
js
call
movsb
aaa
sbb
mov
inc
adc
mov
cmp
int3
fs
jns,pn
sub
mov
jl
fisttpll
in
cmp
int3
cs
mov
aas
repz
mov
lds
xor
lds
ja
push
pop
dec
and
out
in
aas
repnz
fmull
mov
mov
xor
mov
xchg
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
mov
add
xchg
std
jnp
lret
jle
pop
inc
xor
icebp
dec
xor
pop
mov
test
add
push
sarl
mov
addr16
cmp
stos
jb
add
fsubr
ud0
data16
sahf
ror
dec
push
mov
out
mov
dec
pop
mov
dec
fwait
inc
add
iret
sub
cmc
shll
and
and
cmp
rcl
push
popf
sbb
lds
push
xchg
inc
test
loopne
jbe
shrb
push
cld
sbb
cld
xchg
mov
icebp
in
andl
imul
jecxz
movb
fnsave
cs
sub
lds
add
inc
jmp
rorb
hlt
sbb
push
cmpsb
mov
mov
test
adc
rcl
fs
insb
in
inc
arpl
inc
addb
add
inc
fldl
stos
lcall
cmpsb
popf
inc
add
outsl
mov
jae
push
pop
mov
inc
push
sarl
in
ja
pop
insl
sub
mov
fs
xor
sbb
pop
cli
dec
adc
inc
insl
fidivs
mov
mov
es
test
je
and
jecxz
aam
adc
fisttpll
fnstcw
pusha
sub
test
sub
adc
or
mov
hlt
cmp
push
mov
pop
pushf
in
jnp
fs
daa
fs
cmp
or
sub
mov
and
adc
rcll
sub
cmpsl
inc
dec
pop
imul
cld
xlat
jge
xchg
xchg
sbb
jmp
adc
push
outsl
add
jae
mov
mov
pop
fistps
sarb
or
mov
aaa
in
fwait
lock
push
aad
or
and
and
rorb
mov
ret
cmp
xchg
incb
cmp
pushf
cld
cmp
add
or
xchg
inc
fcoms
clc
xchg
dec
in
sbb
sbb
dec
mov
mov
dec
subb
push
mov
loopne
repz
inc
arpl
in
js
cld
scas
das
test
nop
shlb
pop
xchg
add
nop
movhps
xchg
pop
xor
cmp
shrl
jecxz
mov
mov
xchg
in
cmp
loope
xlat
pop
adc
aaa
in
jmp
lods
pushf
mov
pop
ja
loop
enter
or
or
and
dec
adc
xor
pusha
mov
sbb
or
clc
loop
adc
sub
sbb
add
pop
push
clc
jns
mov
aam
sti
push
jae
push
fwait
movsb
mov
push
fimull
scas
cmpsl
or
push
pushf
addb
nop
lods
dec
mov
call
xchg
sbbb
mov
xor
ljmp
mov
jnp
data16
xchg
xchg
fmul
sbb
lret
dec
mov
ror
mov
add
in
daa
mov
pop
xor
or
je
repnz
mov
dec
test
and
mov
push
test
data16
fiaddl
popa
sbb
xchg
jmp
ret
mov
lds
aad
mov
aad
lods
into
das
test
leave
cld
push
and
mov
rcrl
pop
jnp
in
enter
lods
rorl
fidivrs
loopne
es
and
mov
je
sbb
stos
mov
or
mov
pop
mov
mov
jne
xchg
dec
or
xchg
mov
mov
das
sahf
pop
fbld
or
push
popa
mov
jp
sub
or
push
outsb
cwtl
push
push
in
movsb
and
out
fdivrl
cltd
cwtl
sti
faddl
adc
pop
push
or
jnp
sub
push
ds
pop
fs
push
and
rcrb
cmpl
cld
outsl
add
mov
push
add
imul
cmp
adc
mov
jecxz
cs
scas
xorl
sbb
js
xchg
inc
mov
pop
xor
data16
mov
xor
cmp
push
scas
ja
mov
inc
hlt
pop
pop
pop
loopne
mov
fistps
je
nop
ret
xor
mov
adc
mov
sbb
ret
out
fsts
cli
pop
sti
leave
movsl
or
push
loop
jb
ja
dec
test
sub
push
mov
xacquire
aas
not
or
adc
mov
adc
or
imul
push
adcb
xchg
inc
mov
sub
jg
xchg
mov
repnz
clc
inc
push
ljmp
scas
mov
pop
push
fwait
pushf
cmpsl
out
sbbl
push
leave
fwait
jno
stc
test
push
outsb
add
and
mov
ja
sbb
out
jmp
inc
movsb
sub
out
add
hlt
out
push
cmp
popa
test
enter
pop
sub
lods
lea
mov
mov
push
imull
xlat
jp
in
les
or
push
loope
xchg
xor
lods
mov
scas
mov
sub
fldl2e
xchg
pop
js
ret
outsb
rorb
std
push
arpl
xor
sbb
addps
daa
fadds
mov
push
jle
inc
mov
push
mov
jbe,pt
lock
jb
pop
je
pop
lds
rol
xchg
cs
jecxz
push
mov
dec
push
fs
jecxz
aaa
cmp
into
lods
test
dec
dec
sub
push
ja
inc
inc
jg
je
pushf
pop
xor
sbb
arpl
mov
push
repnz
mov
lret
pop
jb
pop
and
clc
data16
mov
loop
in
pop
inc
lret
imul
mov
mov
sub
aaa
inc
cmp
or
fistps
je
xor
mov
add
jmp
jb
pushf
mov
push
pop
pop
push
in
ja
jl
and
mov
aad
jmp
jno
pop
loop
add
fmull
or
in
or
loop
push
xor
dec
lds
andl
inc
imul
dec
xor
fcomps
stos
cmp
add
pop
out
out
lods
aad
into
xchg
mov
xchg
in
sbb
jne
adc
adc
das
adc
dec
xchg
js
popa
sbbb
in
jb
jge
out
lcall
popl
sub
dec
cmp
xchg
test
push
bound
push
mov
cs
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
and
add
mov
ss
cwtl
lds
cmp
stos
xor
push
sbb
iret
fimull
sahf
sbb
add
int3
pop
pop
push
mov
mov
mov
dec
lahf
jbe
pop
nop
cmp
jae
test
incb
and
cmpsb
scas
add
jnp
repz
fs
cs
push
push
das
out
ljmp
jnp
test
ficoml
dec
adc
mov
mov
rcrb
jo
clc
jmp
repnz
or
dec
outsl
jmp
ret
push
jbe
pop
pop
adc
mov
lea
xchg
dec
fdivs
cltd
adcl
pop
or
mov
stos
push
lcall
cmp
popa
fsubrp
fisubrl
mov
les
sahf
adc
adc
push
aam
inc
mov
stos
ljmp
inc
push
fsubl
cmp
jp
movsl
jne
stc
push
push
sarl
xor
fisubrl
mov
mov
inc
test
jp
mov
sbb
inc
arpl
cmc
pop
int3
loopne
dec
repz
dec
mov
jne
jge
iret
pusha
cld
and
pop
setb
mov
in
xor
test
sahf
leave
iret
lret
daa
and
mov
push
inc
addr16
adc
mov
inc
sub
add
dec
nop
lcall
jg
pusha
xchg
sbb
aam
leave
cmc
xor
loope
inc
repz
mov
enter
js
fdivrl
xchg
icebp
and
sbb
sahf
cli
inc
in
dec
lret
ljmp
dec
js
aam
xchg
mov
cltd
sub
jae
jns
jmp
pop
lock
sti
mov
lcall
test
iret
mov
fistps
adc
pop
xchg
sti
sbb
sub
pushf
mov
notl
stos
ja
lock
mov
xchg
pusha
cmp
adc
dec
xor
cmp
out
adc
popa
stc
cmpsb
popf
mov
pushf
mov
or
and
cmpsl
xor
mov
pop
cli
push
rcrb
xchg
jg
inc
outsb
daa
lret
inc
inc
sub
test
add
sbbl
jne
add
loope
cwtl
xor
push
sbbb
mov
pop
push
xor
movsl
testl
divl
sbb
mov
aaa
push
aaa
in
stc
ja
xchg
std
and
xchg
fbstp
loopne
xor
inc
xchg
je
dec
es
clc
cmp
fwait
lds
mov
popa
test
cmpsl
sub
addb
adc
in
sbb
fcmovu
test
out
movsb
das
test
or
test
mov
jp
or
pop
mov
outsb
adc
out
cmp
adc
jmp
fsubrs
pushf
lea
fwait
mov
adc
pop
mov
scas
cmovne
adc
repnz
cmp
inc
hlt
cwtl
jl
mov
and
clc
lods
adc
inc
sub
adc
jge
stc
push
das
dec
push
push
shll
add
mov
mov
pop
in
in
and
inc
les
pop
clc
add
pop
test
lcall
mov
pop
test
jg
xor
pop
bound
bound
sahf
les
jb
sbb
scas
xchg
stc
fdivl
adc
in
sub
push
nop
jmp
out
sub
loop
mov
adc
adc
in
cmp
sbb
imul
negl
out
pop
aad
push
icebp
lock
fsts
sub
add
and
fiadds
jl
lahf
adc
out
push
dec
mov
icebp
jl
mov
add
sub
int
sbb
ret
push
pop
mov
pop
xlat
push
push
jbe
iret
pop
ret
fisttps
push
sbb
push
mov
std
jmp
xchg
les
nop
xchg
mov
loopne
inc
pop
adc
and
inc
mov
mov
xor
sahf
fstps
dec
stos
mov
xchg
fimull
pop
mov
iret
je
lock
cmpsl
dec
push
or
mov
decb
xchg
ret
fwait
mov
fldl
xor
mov
aaa
je
mov
mov
sbb
dec
xchg
fcompl
ds
stos
loope
sti
mov
enter
scas
jbe
adc
stos
mov
aad
jo
xchg
ret
jle
xchg
and
outsb
repz
push
pop
dec
inc
scas
cmp
arpl
rolb
out
rorb
jno
dec
sub
or
fwait
lock
and
in
mov
insl
cld
repnz
dec
rcrb
sub
arpl
repz
adc
sti
sub
lock
sub
pop
and
push
jb
adc
and
jge
dec
ja
scas
mov
fistpl
sbb
jge
mov
fldcw
adc
scas
hlt
lahf
fists
xor
mov
and
push
xchg
insb
jb
call
push
inc
adc
jl
fwait
sti
xorb
dec
mov
ss
shrl
cli
lcall
mov
enter
fmuls
in
inc
movsb
cmp
fildll
scas
sub
scas
shr
adc
movsb
icebp
sbb
xchg
daa
scas
sbb
or
and
lea
jnp
cmp
or
xor
pop
or
aam
lret
call
sbb
dec
push
test
adc
push
push
fimull
xchg
mov
rorb
add
es
mov
insl
fsub
cbtw
fs
test
test
add
fcmove
test
push
or
add
test
jg
add
mov
jl
andb
movsl
jnp
mov
aaa
pop
xchg
cmp
ret
mov
jl
mov
loop
dec
mov
mov
jmp
fsubrp
xlat
adc
daa
lock
clc
ret
jno
in
cmp
shr
outsl
cmp
pop
inc
mov
addr16
adc
fldenv
mov
stc
jae
mov
inc
out
mov
mov
add
nop
xchg
xor
dec
add
fidivrl
jmp
cmpsb
scas
dec
push
pop
dec
push
ja
jb
repnz
daa
cmp
das
pop
mov
xchg
imul
out
add
xchg
nop
mov
mov
imul
stos
mov
sbb
jle
sbb
scas
shll
shll
cmpsl
and
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
add
mov
daa
push
es
shr
jne
jge
aam
or
pop
dec
xor
mov
push
and
push
mov
push
sbb
adc
dec
ret
les
nop
push
pop
andb
push
popf
leave
stc
lods
test
sarl
popa
sub
out
pushl
shrb
sub
mov
enter
inc
adc
cmp
sahf
lods
loopne
andb
ja
dec
inc
add
push
and
mov
test
ret
dec
sbb
push
repnz
jmp
push
and
rclb
cmp
push
jb
mov
leave
imul
loopne
adc
mov
test
vshufps
cmp
int
sti
pop
popa
lahf
rcr
test
outsb
test
dec
xlat
shr
push
test
inc
dec
xchg
push
outsb
int
mov
sarl
pop
dec
les
jbe
in
je
xchg
cwtl
sub
jne
ficompl
pop
mov
cwtl
xchg
xchg
out
cmp
pop
jae
je
jecxz
mov
aas
aad
outsl
stc
into
out
dec
incl
jae
scas
ret
test
push
push
mov
fldl
mov
xor
fisubrs
dec
nop
adc
lock
inc
lret
loop
fstps
push
lret
dec
cmp
jns
dec
mov
or
sbb
cli
cmp
mov
pop
push
or
jp
jo
pop
ja
add
mov
lahf
cmpsl
dec
cmpsb
shl
mov
cmp
leave
outsl
stos
test
lahf
cmp
lock
xchg
push
inc
idivb
leave
out
mov
pop
mov
clc
mov
loop
inc
xor
xchg
and
stos
sbb
mov
inc
jb
cmp
xchg
lret
xlat
dec
xchg
cld
scas
jo
mov
out
add
inc
jle
xchg
cmp
xchg
adc
inc
pusha
jmp
ljmp
cwtl
xchg
jbe
sub
cmp
or
and
push
cld
pop
pop
jno
fcoml
inc
or
shll
mov
mov
xor
pop
int
imul
mov
movsl
shll
jae
dec
mov
jo
pushf
bound
fstpt
jge
jns
mov
jnp,pn
jecxz
xchg
or
or
out
inc
add
dec
lods
cmp
inc
lcall
inc
and
je
sub
aaa
fnstcw
cli
and
push
mov
cmp
data16
add
xchg
gs
enter
imul
fbld
mov
push
mov
test
lret
out
pop
pop
pop
clc
aad
mov
push
sbb
jno
fs
push
xor
jmp
aaa
push
in
push
es
arpl
popa
pop
filds
ret
xlat
push
inc
sub
das
xchg
movsl
popa
into
test
pop
sub
pushf
or
imul
call
xor
mov
ss
lods
repz
sbb
mov
xchg
inc
fldl
std
add
into
fisubrl
dec
mov
pop
and
or
or
daa
fdivr
notb
adc
daa
cmp
and
pop
sbb
bound
call
cmpb
xlat
stc
or
dec
ficoms
pop
push
jnp
popa
push
lcall
sti
mov
fdivp
shrl
in
push
shl
and
pop
add
xor
sbb
pusha
add
mov
add
fcmovnu
lds
ljmp
and
mov
repnz
jge
call
shl
push
ret
pop
icebp
mov
add
test
cmpb
out
sbb
push
mov
cmp
fnsave
fld
add
lds
pop
rorl
imul
cmpsb
in
inc
xchg
xor
stc
sbb
ret
push
xchg
mov
or
sbb
push
mov
push
and
jge
lock
in
repnz
sbb
movsb
out
dec
lahf
add
imul
dec
jecxz
cmp
ficoml
dec
sbb
xor
pop
pop
fmull
pop
jp
sub
negl
scas
push
dec
cltd
jp
jno
xchg
and
lahf
jge
mov
stos
push
lret
cs
pop
out
jl
pop
push
leave
push
andl
stos
xor
adc
cltd
addr16
sub
out
jno
lret
rcrl
jg
cli
xchg
pop
mov
dec
fidivs
rclb
orl
mov
out
mov
rcll
out
jl
lods
aaa
add
std
xchg
xchg
push
rolb
addr16
sub
mov
aam
leave
fwait
mov
int3
mov
hlt
test
out
mov
add
or
ficomps
scas
jecxz
mov
push
lcall
mov
mov
cmp
std
out
sbb
loopne
gs
jne
or
pop
mov
dec
jmp
subl
mov
mov
xor
mov
jne
std
xchg
mov
ja
pop
jbe
gs
dec
cmpsb
inc
movsl
popa
sub
sbb
lock
mov
std
xchg
fwait
rcll
fistpl
or
sbb
xor
and
and
jg
ret
sbb
jg
dec
pop
cmp
jnp
gs
nop
jp
cmp
xchg
das
pop
mov
outsb
dec
daa
sub
sbb
lahf
push
in
popf
push
js
gs
or
insl
cmp
test
ret
pop
sub
fs
lods
jns
fcomps
subb
in
out
pop
lea
push
xchg
inc
pop
push
loope
cmp
mov
jl,pn
xor
mov
xor
rcl
and
sbb
mov
fildll
jmp
sub
xchg
in
jno
scas
and
out
loope
adc
mov
xchg
or
ljmp
aam
xor
in
and
in
or
repnz
pop
mov
or
sahf
inc
cld
push
xchg
aas
in
mov
iret
pop
mov
lret
test
into
fldcw
jae
mov
shrb
imul
jbe
bswap
aas
and
or
scas
js
in
jne
pop
inc
push
iret
adc
cmpb
and
xchg
pop
jns
std
popa
cli
inc
xor
lahf
mov
sub
stos
lcall
xchg
cld
mov
outsl
mov
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
inc
xchg
mov
add
in
pop
loop
cmc
test
test
push
das
cmp
arpl
inc
xor
or
mov
xchg
jno
push
xchg
xor
cmp
jnp
xor
sbb
mov
data16
xchg
cmp
pop
test
hlt
jge
jmp
push
mov
jns
fwait
loopne
sbb
mov
push
push
cmpsl
negl
repz
add
sarb
mov
dec
loope
hlt
xchg
mov
in
or
pop
sbb
out
push
addr16
in
not
aas
and
subl
mov
sub
mov
movsb
in
outsl
push
push
dec
jnp
and
mov
popa
fs
push
or
or
in
fistpl
jb
mov
jl
shll
call
sbb
sub
mov
push
adc
cmpsl
xchg
jne
es
popf
dec
pop
mov
cmp
stc
lcall
lcall
orl
mov
mov
aas
xchg
sub
xchg
int3
xor
pusha
fdivl
repz
mov
add
pop
and
fdivrp
cmp
outsb
sub
xchg
sub
lahf
and
pause
adc
or
pop
cli
stos
call
xor
jne
sti
dec
pop
ja
dec
imul
lock
and
push
aas
outsb
xchg
out
add
xor
jne
add
fsts
in
sahf
adc
push
stos
in
xor
mov
sub
cmpsl
xlat
sub
test
pusha
rolb
jp
fisttpl
xchg
dec
cmp
mulb
sbb
and
adc
psllw
jae
sbb
and
popa
adc
cmp
inc
push
and
aas
in
mov
sbbb
and
cmpl
mov
pop
mov
dec
pop
dec
les
ljmp
and
dec
and
outsl
in
jp
popa
bnd
vcvtsi2ssl
out
adc
adc
jb
add
fsubrp
cli
inc
lds
aam
loop
aas
loope
cmpsb
mov
xchg
hlt
jle
dec
mov
aam
js
and
dec
pop
mov
sbb
out
jge
adc
mov
mov
les
xor
pop
fbstp
jl
sub
mov
pop
aaa
mov
pushf
rcl
push
jecxz
cmp
scas
cmp
sbb
into
movsb
cmc
cmpsl
and
cmp
adc
repnz
mov
pop
jmp
inc
clc
ss
andl
or
sub
mov
sub
dec
pop
mov
aas
js
aad
jnp
jg
push
mov
xor
test
add
cmp
mov
out
mov
adc
mov
fnstcw
je
in
jle
lea
dec
in
mov
imul
adc
out
fistl
jle
scas
or
test
pop
fwait
cmp
cld
mov
inc
mov
mov
sub
out
mov
pop
subl
loop
push
lods
and
xlat
hlt
add
inc
mov
in
or
cmpsb
mov
add
int
mov
nop
mov
sub
idiv
in
mull
in
fmuls
ljmp
pop
lcall
ret
imul
lea
ja
xchg
xor
les
jl
or
jae
dec
mov
aas
cltd
or
scas
fwait
xchg
xor
jmp
stos
imul
jmp
and
lods
or
mov
sbb
icebp
fbstp
sub
cmc
int
jb
pop
jmp
popf
adc
jae
xchg
xlat
mov
fwait
aaa
jle
mov
pop
jbe
insl
aam
jge
lea
repz
outsl
hlt
sbb
repz
pop
fcomi
into
fistps
cmp
lods
rorl
data16
pop
cs
rcrl
pop
and
popf
jmp
dec
notl
fidivl
lods
mov
jmp
lods
pop
cmpsb
das
icebp
ret
cmp
out
add
mov
mov
xor
ja
jl
cmc
sub
xor
mov
std
or
pop
mov
jb
int
enter
mov
xchg
and
push
mov
ret
jae
mov
popa
add
mov
xlat
jg
push
es
icebp
fdivrs
sbb
or
lods
push
xor
movsb
scas
inc
daa
or
mov
insb
jnp
dec
cli
in
lcall
movsb
nop
xchg
mov
cwtl
notl
xor
cli
xchg
jmp
push
int
mov
out
push
push
add
sbb
sbb
push
sbb
popa
test
jae
outsb
sub
test
psubsw
jmp
dec
mov
ss
repnz
mov
jne
test
lcall
in
test
lcall
ja
mov
adc
loope
dec
and
pop
inc
loopew
or
clc
push
cmc
ret
orb
or
pop
cs
ret
inc
movsl
push
adc
ficoms
ret
dec
loope
iret
scas
iret
xor
jmp
scas
testl
push
loope
int3
jl
dec
cmpsb
inc
sbb
in
dec
xchg
vmread
in
mov
out
pop
sbb
cmp
cmp
pop
fsubr
daa
pop
sub
fldl
outsb
adc
xor
js
inc
jg
push
in
xlat
int3
inc
mov
insl
pusha
iret
sahf
jl
xor
ret
icebp
andl
adc
pop
sahf
dec
ror
mov
test
test
and
add
jle
xchg
loopne
int
stos
fidivrl
iret
push
jle
dec
adc
jp
mov
push
js
mov
int
movsl
movsl
xor
clc
lea
push
or
cld
and
mov
repz
and
sbb
aad
mov
bound
test
push
inc
sbb
lea
lods
fnstenv
and
and
push
inc
jl
xchg
stos
sbb
mov
mov
pop
push
jo
mov
lds
adc
and
bound
push
push
rcl
push
lahf
shrb
adc
lcall
lret
fwait
lahf
loopne
out
mov
les
lds
cld
jle
cmp
aaa
test
test
cmp
je
jl
and
cmp
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
add
jecxz
ret
inc
jl
xchg
mov
mov
cmp
test
xor
stos
lods
movsl
mov
sub
pop
inc
jne
or
out
lods
push
and
lcall
cmp
roll
add
inc
fwait
dec
mov
cld
cmpsb
in
notb
imul
loopne
aaa
mov
mov
mov
mov
jbe
mov
xchg
mov
mov
and
scas
arpl
xchg
lds
stos
adc
inc
lods
addb
pushf
adcl
hlt
int
mov
cmp
pop
pop
mov
lfs
cld
xor
insl
mov
jb
xchg
or
or
std
pop
test
xchg
mov
pushf
pop
dec
shl
icebp
leave
lea
pop
or
and
xor
or
inc
jbe
lret
fists
sub
pop
mov
inc
out
sbb
push
push
add
adc
aad
gs
js
mov
and
jle
lret
push
jmp
cmp
test
mov
in
mov
inc
repz
push
sahf
jmp
lea
and
orb
mov
pop
gs
mov
or
clc
loopne
les
lock
in
sub
dec
outsl
jnp
je
hlt
in
loope
sbb
dec
std
mov
cmp
outsb
xchg
popa
sbb
sbb
add
adc
add
dec
mov
mov
scas
xor
stc
rolb
mov
lret
sbb
in
xorb
sbb
and
sub
outsl
adc
outsb
outsb
or
push
addb
jns
mov
addr16
pop
push
jno
call
test
jmp
cwtl
pop
adc
mov
sysret
bound
aas
jae
and
sub
sub
pop
lock
aam
insl
stc
pop
xor
fsincos
das
mov
outsl
adc
sbb
add
cmc
adc
imull
push
lods
pop
outsb
push
movsl
inc
dec
sub
jg
pop
adc
adc
mov
jmp
cmp
movsb
xor
cwtl
inc
sbb
xchg
cmp
add
adc
lods
aas
stos
xor
dec
scas
scas
nop
jbe
dec
cld
sub
push
gs
idivb
xor
divl
and
inc
test
call
mov
shrl
and
sub
cmp
dec
shlb
fsubrs
or
mov
adc
addb
xor
push
out
xchg
push
shlb
xor
add
mov
mov
imul
and
xor
add
cmp
in
lds
push
push
nop
pop
adc
jns
lahf
mov
jp
lcall
push
jb
iret
daa
xchg
jne
mov
and
pop
lock
mov
in
fdivrl
mov
mov
inc
in
leave
xor
jmp
xor
arpl
inc
js
xchg
daa
lds
pushf
push
pushf
push
sbb
adc
or
adc
jns
mov
gs
jns
stos
dec
push
pop
push
dec
fcompl
mov
aas
inc
inc
cmc
icebp
inc
dec
xor
mov
lret
and
xchg
loop
pop
pop
xor
xchg
sti
icebp
inc
dec
xor
mov
dec
stos
push
adc
fidivl
ja
stos
sub
jo
pop
cld
out
or
iret
imul
pop
jge
ljmp
test
sbb
cmp
jb
loopne
aad
cmpsb
gs
popf
fsub
add
call
imull
xor
dec
jge
cwtl
mov
and
dec
sub
ljmp
iret
add
sbb
push
dec
or
daa
jle
les
push
insb
jne
jns
loop
gs
push
mov
out
pop
in
icebp
pop
scas
jge
xchg
mov
cmpl
sbb
cmpsb
lahf
scas
sub
adc
roll
loope
adc
fwait
fs
in
mov
jbe
ljmp
dec
sub
jae
lea
xorl
stos
leave
insl
lahf
insb
mov
std
rcrb
ret
roll
je
nop
popf
mov
fldt
pop
mov
nopl
xchg
xchg
daa
xlat
sub
fnstenv
movsl
pushf
icebp
iret
pop
push
pop
jo
pop
jecxz
cwtl
pushf
repnz
xor
cwtl
push
repnz
aam
outsl
jbe
lods
daa
clc
mov
ror
addl
mov
ljmp
sti
xor
out
pop
es
cltd
movsb
mov
push
ret
imul
cmpsl
mov
aam
mov
insb
add
jb
fmull
pusha
jne
and
out
ja
mov
ror
bound
jl
hlt
outsb
subb
jge
scas
stos
test
mov
sub
or
int3
fsts
mov
insb
jg
jmp
jno
mov
sub
aaa
fld
push
pop
cmc
push
andb
sub
lea
into
out
pop
push
ss
mov
add
fimull
in
mov
fs
push
mov
or
dec
mov
pop
mov
mov
mov
add
es
sub
movsb
pushl
aad
or
aad
addr16
call
lods
dec
out
push
jb
jecxz
hlt
or
and
sub
test
mov
adc
scas
cld
or
test
push
fidivrl
pop
or
cmp
sbb
jb
nop
in
cmp
jae
sbb
jbe
xchg
sbb
movb
and
add
call
and
insl
or
test
inc
xor
into
pop
jno
out
xchg
mov
mov
stos
insl
mov
mov
shrb
das
imul
fstp
lea
mov
add
shll
inc
mov
movnti
mov
inc
enter
dec
fidivs
cli
lea
es
data16
aad
jb
add
pop
cs
into
hlt
leave
imul
xor
fdivrl
xor
jnp
dec
testb
push
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
repnz
loop
iret
popa
int
iret
cmpsl
cld
sbb
cmp
mov
ds
sub
hlt
mov
xor
cltd
iret
xchg
int3
pop
dec
mov
fimuls
es
aad
mov
push
in
mov
jo
clc
int3
cs
lods
stos
add
out
lret
lods
inc
xchg
outsb
aas
xlat
xor
iret
enter
jns
dec
call
mov
sbb
xor
and
cld
mov
icebp
outsl
lret
mov
fidivs
gs
cmp
add
rclb
cs
arpl
call
mov
xlat
xchg
push
sarl
sub
mov
push
push
dec
cld
ljmp
int3
jmp
jae
rcrb
fdivrl
dec
cmp
lret
xlat
lea
jae
daa
pop
fldenv
mov
cmp
cmp
xchg
popf
stc
or
jge
fisttpl
fbstp
rcrl
xor
push
jge
sahf
rcrb
add
ret
lods
mov
inc
call
mov
filds
jecxz
loopne
cmp
movsl
fadds
xchg
push
sub
xlat
add
add
mov
pusha
data16
stos
into
pop
jno
fidivrs
cld
xchg
xor
mov
xor
sti
push
mov
mov
add
fmuls
scas
daa
push
lock
rcrb
nop
movsb
pop
lret
movsb
int
mov
sahf
iret
leave
push
fisttps
notl
push
add
add
gs
xor
lret
mov
adc
lret
push
daa
xlat
xchg
mov
xor
xchg
xor
push
mov
xor
lret
or
xor
pop
push
test
stos
add
mov
jns
mov
mov
push
sbb
insb
popl
dec
inc
sub
sbb
lea
add
outsb
icebp
xchg
sub
pop
jp
popf
or
sbb
jb
jne
mov
aam
ror
mov
sarb
push
repnz
mov
dec
push
jbe
pop
xchg
daa
insl
mov
bswap
add
ja
add
jl
imul
sbbb
pushf
push
push
test
pop
mov
je
mov
out
insb
cmp
mov
add
xchg
mov
lret
mov
dec
outsl
stos
icebp
insl
je
or
adc
outsb
jge
loop
add
jno
push
adc
and
scas
push
add
daa
je
jle
jge
push
adc
push
lahf
or
sbb
fcompl
and
jmp
shrd
loop
addr16
cmp
inc
xchg
sbb
cmp
aaa
pop
adc
shrb
in
call
insl
inc
mov
pop
lahf
nop
fisttps
stos
pushf
es
and
jmp
adc
fimuls
rolb
cmpsb
or
shl
adc
in
mov
mov
pusha
sub
lcall
jmp
mov
mov
lods
mov
dec
push
cmovo
jne
add
sbb
xchg
jge
xor
cmp
cmp
mov
ret
insb
inc
cmp
cwtl
scas
xor
or
lcall
frstor
add
pop
filds
mov
ret
andl
jns
cltd
ss
or
jecxz
movsl
int3
in
mov
ret
pop
mov
xchg
or
fwait
cwtl
subb
or
inc
outsl
hlt
xchg
pushf
mov
negl
xor
addb
xchg
dec
pop
sbb
jo
inc
ds
pop
xor
sti
out
ret
ds
push
adc
add
addr16
xorb
xorl
jecxz
jae
adc
jne
cmp
pop
js
sub
xchg
scas
aam
mov
mov
xchg
jle,pn
add
outsl
xchg
nop
push
jge
xor
int3
jmp
mov
adc
outsl
mov
adc
outsl
pop
mov
jae
xchg
xchg
stc
aas
cmp
cmp
mov
xlat
jle
out
push
cmpsb
outsl
xor
sarl
ljmp
push
add
mov
lock
xchg
push
cs
push
pop
insb
cmpl
and
jmp
adcb
mov
orb
dec
sub
cwtl
inc
xor
mov
std
loope
data16
push
jle
je
shll
inc
push
mov
aaa
popf
xchg
test
lret
jae
ljmp
pop
sub
out
inc
push
dec
mov
jg
movsb
xor
mov
fsts
push
sbb
add
adc
pop
fsubs
ja
mov
jbe
in
popf
lret
test
mov
movsl
retw
clc
shrl
adc
mov
outsb
jb
and
scas
ds
push
inc
mov
jmp
adc
mov
inc
push
add
aad
fildl
xor
or
enter
pop
or
pop
ret
push
dec
mov
jmp
or
sub
jns
mov
jg
mov
push
inc
push
push
scas
and
testl
sub
repnz
jns
mov
ret
adc
push
xchg
ret
mov
cmp
clc
iret
aam
addl
call
nop
xchg
inc
movsl
cltd
xchg
xchg
nop
pop
mov
mov
ja
fidivs
add
mov
scas
xchg
cli
ss
ds
mov
mov
inc
push
mov
cmc
gs
mov
sub
jb
gs
jl
xor
les
push
call
sbb
cli
test
jns
insl
dec
mov
lahf
jo
leave
fistps
insb
mov
orl
xor
jmp
sbb
add
inc
cmp
clc
test
inc
movsb
bound
je
adc
pop
pop
add
ret
dec
pop
mov
rorb
sub
push
repnz
inc
int3
call
shll
loop
negl
adc
dec
xchg
and
pop
sub
std
sub
inc
jb
aaa
fnstsw
cltd
add
das
addr16
mov
mov
aaa
js
insl
gs
faddl
push
cli
sub
sub
lahf
mov
lods
jmp
mov
mov
fisubs
in
cld
jae
mov
mov
mov
lret
and
dec
loop
dec
repnz
sub
stos
loop
and
int3
out
jge
mov
lret
repnz
imul
into
add
xchg
mov
inc
jnp
insl
pop
or
mov
adc
aas
stos
aas
test
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
in
jl
xchg
mov
add
push
push
dec
dec
gs
daa
jl
jle
mov
cmp
fbld
fists
cli
inc
js
xchg
lods
mov
push
or
sub
out
icebp
sub
loop
adc
mov
xchg
loope
xchg
sub
movsb
mov
jo
pop
push
jp
push
fsubr
jns
movsb
push
pop
cmp
xchg
and
pop
cmp
sub
dec
push
shll
xlat
mov
cmpsb
xorb
and
sbb
mov
icebp
rclb
dec
icebp
test
xchg
sub
in
pop
push
cmpsl
cld
xchg
shl
or
jle
jb
int3
repz
jae
and
adc
outsl
out
fs
push
je
imul
cmpsb
push
and
xor
outsb
pusha
hlt
mov
fstpt
push
adc
pop
pop
push
je,pt
add
xchg
iret
xchg
jno
pop
into
ret
popa
mov
lret
stos
cmp
mov
mov
jne
mov
rcr
fistpl
or
fisttpl
dec
out
cltd
jb
lds
add
stos
or
stos
aaa
stc
pushf
xor
popa
rcll
pop
mov
lods
or
outsb
vmwrite
shll
outsl
and
scas
test
push
jge
insb
hlt
lcall
mov
lods
inc
mov
mov
jl
add
push
imul
jge
jns
jb,pt
lret
fnstenv
jg
mov
rcll
cmpsb
jg
mov
xchg
fucompp
push
pusha
out
leave
dec
icebp
mov
ret
das
inc
lahf
in
add
mov
push
ja
jae
cmp
add
xchg
inc
add
dec
loope
mov
mov
cwtl
ror
fdivs
movsb
lock
push
das
jle
dec
sub
jne
cmpsl
bound
inc
xor
into
jae
test
cmc
stos
or
adc
jo
mov
loope
sub
shlb
sub
or
inc
nop
test
dec
push
add
push
iret
jle
cs
jnp
push
mov
and
sub
mov
cmp
push
jecxz
cmp
pop
dec
sub
shll
cwtl
jl
add
and
or
sub
mov
jnp
out
cmp
xchg
clc
push
call
fiadds
sub
inc
jecxz
pop
ja
out
inc
clc
push
idivl
sbb
dec
test
ret
add
idiv
pop
mov
jp
cmc
or
std
or
jge
popf
jnp
or
pop
cmc
mov
ret
in
fwait
movsb
and
xchg
insb
in
adc
lcall
and
ss
dec
insl
idiv
sbb
cmp
add
add
movsb
inc
xor
test
cmpsl
inc
lcall
mov
jno
data16
stos
fs
fisubrl
ja
inc
cmp
inc
insl
int3
push
int
inc
cmp
mov
and
inc
add
push
mov
fidivrs
mov
xchg
mov
loope
adc
test
mov
jno
lods
mov
or
outsb
arpl
fwait
inc
scas
stc
adcb
les
mov
inc
jl
inc
lods
loope
sbb
dec
out
or
jnp
outsl
and
inc
idivb
fwait
or
addr16
add
icebp
test
lahf
push
and
jo
cmp
add
sbb
arpl
adc
cltd
sub
hlt
mov
pop
jnp
loope
arpl
ja
int
or
or
enter
jle
enter
loope
sub
sbb
and
and
sbb
sahf
aas
xchg
or
cld
fmul
jp
fidivl
inc
aam
sarl
xlat
out
xor
in
hlt
jp
inc
sti
adc
push
mov
fidivrl
out
xlat
repnz
pop
inc
sbbb
xor
pop
les
lock
mov
mov
aaa
in
std
pop
dec
stos
xchg
rorb
faddl
and
pop
out
push
jne
dec
enter
push
xor
dec
mov
pop
outsb
iret
pushl
icebp
ja
outsb
adc
es
popa
xchg
sti
lcall
inc
iret
dec
mov
pop
sub
inc
dec
call
and
sarb
mov
inc
add
scas
adc
fimull
popf
fistpl
imul
test
mov
leave
jl
adcb
mov
fnstsw
push
rcrl
cmpsl
inc
loop
sub
adc
popf
cmp
fbstp
lods
mov
lods
jecxz
dec
push
pop
pop
mov
dec
rorb
imul
int3
out
and
jbe
lret
bound
pop
enter
pop
in
xchg
icebp
cmp
or
in
jbe
fisubrl
inc
shll
outsl
push
inc
adc
cmp
adc
pushf
repz
jg
xorb
jb
enter
outsl
adc
outsl
in
xor
jecxz
mov
inc
imul
push
sti
mov
and
sbb
and
xchg
add
popf
mov
sub
cs
mov
pop
cmp
cmp
xor
jb
mov
xor
push
mov
insb
mov
loopne
clc
fiadds
mov
mov
mov
pop
add
sbb
clc
mov
add
push
and
xor
mov
test
test
dec
fcompl
sbb
jmp
xchg
adc
aam
push
mov
adc
cmpb
rcrb
cmovge
pop
mov
pop
ljmp
ffree
cmpsl
and
mov
push
inc
add
adc
sbb
aaa
fcmovnb
int
push
rol
mov
insb
mov
cwtl
jbe
inc
jecxz
jnp
mov
dec
fcmovbe
call
or
lret
jecxz
pop
rorb
stos
int3
adc
dec
les
rcrl
lock
insl
add
push
push
lret
mov
add
cld
push
popf
setns
dec
mov
repnz
sub
out
test
cmp
test
ret
add
ja
mov
lds
mov
pop
stos
movsl
mov
ficomps
jp
lock
stos
or
mov
mov
aam
jno
sbb
push
rolb
xor
data16
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
movswl
mov
mov
in
pop
mov
mov
mov
aaa
adc
lea
or
pusha
lea
or
mov
sub
test
hlt
lahf
fmuls
mov
aaa
clc
iret
xchg
out
aas
inc
push
scas
xor
loopne
aaa
vunpcklps
call
inc
fbld
add
xor
inc
andb
clc
push
nop
stos
je
pop
mov
rclb
mov
sub
push
lcall
sbbl
mov
data16
dec
aas
sahf
add
xor
nop
xor
pop
mov
jnp
jne
pop
mov
adc
dec
pushf
add
aaa
lock
xor
xchg
insl
mov
lahf
mov
je
adc
push
loop
push
fwait
dec
jno
xor
pusha
fdivr
lods
sub
out
pop
je
sti
dec
jbe
fisubrs
push
ret
mulb
sbb
and
int3
push
dec
ret
add
punpckhdq
cmpsl
sbb
dec
mov
push
pop
push
xchg
push
dec
add
std
ja
cs
daa
ja
scas
insb
ja
aaa
jp
outsb
aas
mov
sbb
pop
fwait
jle
sub
aad
hlt
shrb
cld
mov
enterw
ds
fists
sarb
dec
hlt
mov
and
test
jmp
sbb
xlat
mov
jns
jmp
cltd
push
jae
test
nop
mov
adc
sub
adc
imul
cmc
popf
out
sbb
iret
aaa
and
lahf
inc
test
in
adc
gs
and
mov
or
push
lods
pop
add
jns
and
mov
inc
in
pop
pop
cwtl
mov
sahf
out
sbbl
add
out
push
xchg
sub
mov
inc
cmp
cmp
arpl
sbb
sub
push
push
adc
idivb
mov
movsb
adc
cmp
rol
int3
xorb
stos
push
fldl
sbb
lcall
adc
ja
test
cmc
xor
std
lock
cli
lods
ds
in
repnz
out
pop
movb
fcmovnbe
xchg
cmpsb
xor
mov
aas
insb
sahf
ds
addr16
mov
sbb
out
xchg
jbe
push
xchg
stc
mov
xor
stc
into
add
out
arpl
dec
inc
pusha
mov
jg
inc
fildl
sbb
loopne
sbb
sub
jo
fcmovnbe
es
lea
aam
ja
insl
pusha
or
loope
nop
in
cmp
ljmp
or
lea
arpl
dec
mov
std
xchg
packsswb
hlt
sti
mov
jne
syscall
sbb
pop
pop
or
push
dec
xor
dec
cmp
clc
fs
sub
or
cmp
test
jo
shrl
in
push
xor
xor
xchg
repnz
jge
aad
mov
xchg
out
adc
dec
add
imul
rcrb
pop
daa
mov
adc
loop
subb
mov
jb
insb
cmp
sahf
mov
pop
fdivs
and
movsb
cs
mov
js
das
das
in
stos
inc
xchg
lods
mov
mov
sbb
jg
test
popa
ret
push
pusha
xor
inc
mov
inc
aaa
push
jle
sbb
cmc
lds
dec
cmpsb
mov
cmpsb
daa
outsl
mov
pushf
lods
or
sti
cmp
cli
data16
mov
pusha
mov
dec
sti
in
jle
pop
lock
popf
adc
fidivs
xchg
daa
adc
jl
ja
cld
lret
pop
shll
add
test
outsl
inc
and
sbb
xchg
cmp
sbb
xor
xchg
jnp
loope
cli
and
jmp
loopne
xchg
fstpl
mov
outsb
xchg
cmpsl
dec
ljmp
push
cmp
pusha
shlb
ja
shr
cmc
insb
dec
cmp
or
fs
lcall
int
dec
dec
xchg
jno
adc
mov
adc
ret
xchg
notb
sub
in
pop
flds
sub
hlt
ss
dec
mov
lcall
aas
repnz
mov
jge
xor
sbb
js
js
and
ja
pop
in
xchg
and
add
xchg
mov
jo
mov
mov
in
test
inc
in
xlat
push
mov
movsl
xchg
push
subl
xor
ss
dec
movsb
mov
dec
cwtl
out
jbe
or
mov
cli
jno
in
pop
in
mov
fcmovu
adc
mov
or
inc
fistl
push
mov
and
repnz
mov
je
pop
push
js
mov
xchg
sbb
push
rcll
sbb
ret
pop
add
jge
adc
cmp
or
les
arpl
cltd
mov
ljmp
pop
mov
inc
mov
sub
jns
shrl
mov
adc
pop
je
rclb
mov
xchg
fistpll
outsl
test
xor
mov
or
mov
mov
iret
movsb
aad
js
adc
xor
sub
fildl
xor
movsl
mov
pushf
test
in
mov
jo
push
outsb
hlt
push
or
sbb
push
and
lds
and
sub
aad
cmpsl
push
jnp
dec
cwtl
add
ss
and
ss
sbb
insl
pop
mov
push
int3
sub
or
xchg
mov
arpl
icebp
and
sub
jecxz
cli
sbb
cmp
sbb
xor
clc
or
adc
mov
inc
mov
fildll
lret
addr16
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
dec
jns
push
loope
invd
add
psrlw
out
mov
out
and
mov
test
popf
lds
pop
xlat
cmp
jnp
aas
movsl
and
mov
jae
int3
adc
mov
mov
cmc
adc
jno
inc
mov
arpl
mov
nop
lock
cli
jo
fwait
leave
out
cmpsl
out
in
cwtl
stc
das
push
in
mov
outsb
cltd
clc
push
add
mov
repz
cmp
push
leave
sub
mov
xor
sub
outsb
mov
pop
cmp
shll
or
sbb
ret
xchg
push
pop
cltd
daa
int
gs
jb
jp
mov
and
cs
sbb
mov
arpl
bound
cltd
outsb
ja
jmp
sbb
pop
inc
or
rorl
xchg
movl
movsl
mov
stc
jp
stc
data16
stos
les
dec
cmp
stos
out
jg
mov
and
mov
jecxz
std
jns
fstpl
fcompl
and
test
fmul
jbe
adc
push
lret
mov
iret
push
and
test
int
dec
mov
test
aas
cmp
or
mov
jmp
ds
jle
cs
jl
fs
cmpsb
out
push
mov
inc
xchg
test
cmp
adc
sub
ljmp
sub
pop
jns
inc
push
call
fisttpll
pusha
jae
mov
js,pt
mov
lods
fs
movsl
out
arpl
pop
and
adcl
cli
test
adc
sub
pop
out
lcall
shr
das
lret
or
dec
mov
cmp
xlat
fdivr
adc
jecxz
mov
dec
push
add
iret
mov
je
sbb
ja
stos
lods
pop
andb
sbb
cltd
push
mov
ret
and
mov
pop
cs
pop
jmp
insb
mov
add
lds
cmp
dec
lahf
scas
or
shll
dec
adc
add
adc
cmp
push
mov
push
push
or
push
roll
sbb
xor
je
and
adc
pop
arpl
dec
pusha
dec
cmp
and
or
cwtl
dec
adc
lret
jg
jecxz
repnz
push
insb
int3
push
ja
insb
shlw
stc
xchg
xchg
pop
repz
add
inc
cmp
jecxz
push
add
std
sbb
xchg
xlat
jbe
push
mov
xchg
scas
adc
mov
mov
lret
inc
cmc
add
mov
inc
fcoms
inc
jge
aam
pushf
loope
enter
cltd
aad
imul
dec
stos
out
ja
sub
inc
cmpsb
and
subb
jnp
stos
and
sbb
xlat
pusha
aad
pop
or
xlat
movsl
sahf
inc
jmp
iret
push
movsl
lcall
mov
mov
daa
lret
cmp
sbbb
pop
or
inc
add
jl
jp
pop
pop
dec
inc
in
test
inc
push
fmuls
ss
mov
ret
fldl
cwtl
jae
shll
roll
outsl
sbb
imul
out
inc
jl
addl
sbb
dec
and
stc
push
in
push
fisttpll
out
xchg
pop
push
sub
popf
inc
int
je
cmpsl
and
mov
dec
pop
mov
fs
push
daa
adc
sub
lret
and
sub
test
sub
ret
flds
jg
and
and
es
sbb
mov
sti
test
xor
jecxz
ss
out
lods
push
ljmp
xchg
or
and
mov
repz
cmpl
push
xchg
dec
cmp
adc
cltd
mov
fwait
inc
jnp
call
pop
mov
aad
sti
daa
pop
cmpsl
int3
testl
xor
jno
ljmp
into
or
xchg
sbb
push
mov
sbb
test
int3
in
enter
add
jmp
loope
insl
push
sub
add
jbe
xor
add
fisttpl
rcrb
aaa
gs
je
je
dec
jmp
inc
mov
cli
mov
insl
cltd
xchg
cmp
mov
jle
cmp
adc
js
in
adc
gs
mov
and
sbb
cld
mov
mov
and
iret
aaa
cmp
repnz
mov
inc
cmpsl
inc
loop
loopne
fistpll
mov
jmp
aad
cmp
rcll
loopne
and
lret
cmc
push
or
sarb
and
or
xlat
adc
add
xor
xchg
in
push
or
fwait
sbb
sbb
xchg
pop
sub
ret
scas
pop
inc
push
xor
jae
call
fisttpll
xchg
xor
test
dec
sub
xchg
jle
adc
jle
outsl
popf
divl
test
add
pushf
or
fistpll
ret
movsb
ss
enter
cmp
mov
mov
adc
cltd
dec
arpl
xchg
test
jl
push
ds
cld
mov
out
jg
lock
sbb
call
push
lahf
sbb
movb
jmp
test
mov
mov
push
push
das
and
fstpt
inc
add
pushf
or
leave
cmp
adc
xor
sbb
in
dec
movsl
call
arpl
mov
adc
xchg
orl
imul
sti
pop
pop
mov
ficoml
addr16
jb
orb
inc
lahf
test
xor
mov
shlb
cmc
lds
xor
clc
mov
mov
call
lret
stos
popf
xlat
sub
inc
aas
cmp
int3
and
iret
std
mov
roll
and
jnp
bound
lods
das
lock
cmp
je
loop
in
lahf
int
mov
jae
pop
lret
test
xchg
push
div
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
repz
mov
invd
add
jl
in
inc
adc
addb
cld
fucomip
and
aam
push
lods
sub
lea
loop
add
cs
psraw
pop
test
js
xor
jle
jge
movsb
lock
popf
ljmp
cwtl
pop
stos
sahf
imul
dec
movsl
call
bound
xor
and
stos
imul
adcb
jbe
fmuls
inc
mov
movsl
movsl
xor
pop
jbe
pushf
outsl
jbe
lock
rcrb
add
mov
push
mov
pop
minps
xchg
test
shrb
mov
sti
xorl
fcmovnu
std
pop
jb
xlat
aad
inc
int3
inc
insb
xor
adc
arpl
mov
in
inc
out
test
out
fldl
roll
ja
je
xor
mov
jle
lods
mov
outsl
push
repnz
mov
pop
add
push
movsb
aad
jns
mov
rorb
sbb
sub
jb
enter
inc
in
lods
or
dec
sbb
dec
lcall
loopne
addl
int3
int3
mov
and
loopne
call
imul
push
push
popa
addr16
nop
adc
out
fistpl
sbb
pusha
inc
stc
fcoml
cmp
xor
test
dec
fs
out
xor
movl
push
dec
mov
cmpsb
xchg
mov
movsl
add
sbbb
flds
cs
dec
and
inc
movsb
out
jne
test
jo
push
loopne
sub
repz
xchg
sbb
test
fwait
mov
dec
into
insb
push
xchg
rcr
fsubrs
inc
or
pop
xchg
out
fldl
xor
sub
loopne
je
xor
xchg
xchg
daa
inc
add
loop
or
ja
push
popf
adc
xchg
icebp
fmulp
stos
test
pop
js
addb
sub
mov
icebp
or
cmp
repz
mov
push
out
xlat
cmc
dec
mov
dec
in
mov
xchg
ss
or
xchg
adc
add
adc
jne
xor
push
pop
pop
das
ljmp
adc
sub
jp
xor
mov
sbb
nop
enter
dec
or
hlt
cmc
mov
mov
cltd
jno
ret
mov
xor
add
push
pop
mov
add
pop
pminub
repnz
sahf
mov
cmp
jmp
inc
stos
arpl
cltd
lret
cmp
insb
mov
iret
int
cmc
dec
pop
fwait
bound
jns
inc
dec
jmp
and
pop
outsb
loopne
mov
scas
enter
xor
push
mov
sbb
in
jns
sub
adc
inc
and
mov
fists
imul
mov
adc
in
mov
incb
mov
loope
and
mov
in
adc
jecxz
or
mov
jns
pop
sub
fistps
pop
inc
mov
int
movsl
xor
rol
test
inc
jle
xor
pop
shlb
or
icebp
or
outsb
in
pop
scas
cli
and
jg
subb
adc
inc
addr16
dec
mov
es
cmc
xlat
xchg
mov
mov
push
jecxz
mov
cmp
test
sub
pop
inc
pop
lods
rcll
addr16
cmpsb
jle
sub
shlb
mov
in
enter
fidivl
out
push
pop
xor
sub
ja
jb,pn
push
fcomps
adc
scas
das
push
insl
xchg
adc
inc
sub
inc
cmp
mov
sti
pop
cmpl
arpl
sbb
pushf
into
xchg
xlat
adc
push
lds
and
shlb
mov
out
jnp
daa
sbb
xor
xor
and
cmpsl
mov
lds
leave
mov
push
inc
lcall
cmp
add
imul
mov
inc
into
push
push
sbb
mov
add
pop
adc
ljmp
push
pop
icebp
fcmovu
or
sub
xadd
mov
cmp
mov
icebp
pushf
adc
das
and
jns
adc
mov
sahf
cmp
sbb
ljmp
push
push
sub
or
loopne
push
fimull
or
inc
lods
push
ljmp
aaa
in
push
movsb
in
insb
mov
jns
inc
xchg
ds
lock
ret
mov
or
scas
mov
xor
xor
xchg
testl
cli
test
inc
gs
lcall
repz
ret
in
sub
xor
fnop
das
adc
inc
lock
pop
ds
mov
leave
into
adc
or
les
cmp
jg
imul
dec
mov
mov
cwtl
scas
dec
dec
scas
daa
out
mov
fcmove
and
loop
orb
adc
fcoms
repnz
clc
inc
popf
loop
cs
mov
add
mov
sbb
aam
mov
int3
xor
inc
mov
jmp
cwtl
nop
cs
dec
xchg
adc
fs
inc
test
inc
inc
or
jno,pn
mov
jns
sete
xor
aaa
add
iret
popa
out
pop
add
shrb
fwait
adc
sahf
mov
imul
adcl
dec
inc
mov
arpl
dec
sbbb
xchg
pop
sub
movsl
adc
jo
jo
in
and
jne
and
push
mov
dec
pop
iret
xchg
or
add
push
dec
jne
mov
dec
cmp
in
cmp
xchg
cmpsl
movsw
rol
push
push
mov
cmpsb
and
xchg
outsb
shl
or
mov
push
cmp
pop
clc
jae
in
dec
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
invd
lret
pop
jg
sahf
mov
xchg
imul
adc
jle
shll
mov
pop
xchg
sub
inc
insl
xor
pop
mov
shrl
jb
cld
cmp
stos
arpl
pop
pop
jp
and
pop
xlat
rolb
mov
mov
mov
cwtl
cli
lahf
adc
jo
loope
cmpl
stc
adc
inc
or
pop
jmp
jb
mov
scas
mov
add
arpl
rolb
out
std
push
std
xchg
dec
inc
pop
dec
insl
shrl
cld
into
dec
and
push
cmp
mov
adc
aaa
sbb
jne
loop
sub
pushf
ficompl
adcb
mov
out
popf
inc
add
pop
fmuls
cli
dec
adc
fisttpl
or
ja
and
ficoml
addr16
mov
ret
mov
adc
pusha
aas
push
pop
in
movsb
pop
fcom
and
shll
loop
fldcw
lds
sub
cwtl
jb
cmp
adc
dec
fsubrs
rcr
sub
pusha
in
pop
xchg
cmc
cli
enter
inc
mov
jp
sub
lcall
aas
jp
imul
adc
dec
imul
inc
mov
cmp
push
dec
or
cs
roll
sarl
fildl
imul
out
sub
aad
imul
add
hlt
jo
pop
push
cmp
xor
jecxz
dec
push
test
fdivp
nop
in
mov
mov
frstor
push
mov
cli
in
insb
dec
add
fdivl
imul
sbb
sub
cmp
les
divb
loope
cmp
jno
cwtl
pop
pop
imul
pop
push
mov
into
ffree
jl
and
pushf
adc
xchg
adc
and
jae
cs
psubw
insb
sub
push
mulb
xor
xor
mov
push
out
adc
adc
cmpsl
ds
xor
inc
daa
mov
mov
scas
lods
lret
pop
js
pop
insl
leave
mov
xchg
xor
mov
adc
xchg
rclb
xor
outsl
rep
xor
mov
or
sahf
mov
ficomps
mov
mov
aad
xchg
push
in
mov
sub
xor
jo
orl
jmp
movsl
outsl
ret
repz
sbb
xor
popa
add
in
pop
cmp
fcom
cmp
push
inc
mov
in
fdivrl
cltd
sbb
sub
xchg
imul
xlat
sbb
or
mov
inc
and
scas
mov
dec
insb
push
repz
mov
pop
dec
sbb
adc
add
xor
inc
dec
xchg
hlt
iret
stos
and
aam
mov
pop
out
cltd
add
mov
es
imul
xchg
add
cmp
sub
cltd
sar
ret
cmp
mov
popa
mov
sub
ret
sbb
das
push
aad
jmp
jg
jmp
xchg
loop
loope
push
push
adc
xchg
shlb
adc
dec
jbe
icebp
sub
push
cmpsb
lods
test
cmp
sub
cmp
jbe
icebp
enter
cmp
sbb
add
sbb
pushf
out
repz
insb
mov
pop
inc
repnz
dec
mov
or
jae
test
inc
orl
add
adc
jl
jns
fisubrl
pop
mov
or
xor
mov
repnz
fcmovbe
aas
lods
insb
dec
pop
mov
cmp
dec
jno
call
mov
sbbl
repnz
call
aas
fstpl
and
mov
stos
aas
jl
mov
push
jo
testl
shrl
cmp
pop
rcll
xchg
jnp
mov
jmp
ret
fisubrs
into
leavew
mov
dec
int3
into
ds
pushf
fbstp
push
out
jno
mulb
fwait
insb
dec
cld
sti
xsha256
cmpsb
adc
fnsave
movsb
jge
fs
dec
pop
hlt
imul
outsl
sub
int3
cltd
jae
test
push
jne
scas
or
loop
aad
fnstenv
loopne
lret
flds
mov
cmpsl
mov
stc
das
jns
mov
loop
popa
sub
mov
sub
inc
inc
ds
lds
je
inc
fwait
mov
fs
cmp
push
xor
adc
pop
mov
out
add
cmp
ljmp
mov
cmp
mov
adc
out
loop
movsl
jo
mov
add
sbb
and
xor
jmp
mov
insl
subl
sbb
pop
cld
dec
jmp
cltd
sbb
mov
and
pop
inc
pop
jmp
push
pop
clc
cmpsl
add
lds
xor
sti
stos
aad
in
stos
ret
mov
aam
sbb
cld
ja
xchg
cmp
aas
roll
xor
cmp
mov
add
push
test
mov
orb
add
aad
and
or
movsb
out
dec
mov
pop
movsl
sub
mov
or
lods
cld
mov
aas
jmp
arpl
in
cwtl
push
sub
into
or
out
push
push
sub
sbb
vaddps
cmp
xor
push
xchg
mul
jbe
mov
mov
mov
js
adc
insl
dec
enter
pop
imull
out
lods
sub
pop
mov
mov
stos
mov
xchg
jl
lahf
xchg
lret
loope
xor
fidivl
mov
lea
push
lods
les
adc
ret
je
das
in
sbb
sub
mov
pop
xor
sub
addr16
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
test
inc
cwtl
test
getsec
inc
mov
inc
inc
inc
xchg
or
test
mov
xchg
cmp
mov
jle
lcall
stos
cmp
add
rorb
daa
xchg
test
cmpsb
in
sbb
mov
dec
cmp
rorb
mov
int
mov
sub
mov
frstor
rorb
sbb
repnz
es
xor
lods
sbb
ficoms
sbb
cmpsb
cmp
jmp
ds
scas
add
aam
add
lret
sub
mov
icebp
mov
ret
fstpt
mov
test
pop
mov
sub
push
sti
scas
sub
fwait
jae
shlb
cmp
sbb
mov
or
jne
pop
test
or
xor
pusha
jecxz
lods
ret
mov
lock
adc
mov
enter
mov
sub
push
sbb
out
cld
dec
imul
pop
dec
add
out
mov
lahf
jecxz
ljmp
sub
int3
mov
fnstcw
lret
aas
xchg
in
xor
fiadds
mov
out
jmp
fildl
xchg
test
in
enter
loopne
cmp
inc
xchg
add
inc
jns
aam
aaa
mov
jmp
sub
sub
test
cmp
test
shl
imul
clc
iret
or
pop
into
es
lret
int
dec
add
mov
pop
dec
jae
fdivr
xor
cmp
pop
sbb
pop
adc
testl
ja
and
push
sbb
adc
mov
les
loop
pop
mov
popa
lcall
cmc
and
mov
fldz
add
icebp
inc
ja
sahf
lds
and
stos
jns
adc
popf
adcb
sub
pop
sahf
loopne
shll
loopne
adc
pop
cmp
and
xor
in
cmp
push
mov
sbb
push
adc
repnz
xor
addr16
mov
popa
lret
shl
mov
es
or
inc
aaa
xchg
xor
lods
fcompl
mov
or
inc
or
xchg
int3
xor
movsl
mov
call
push
mov
gs
push
cmp
xchg
mov
add
sbb
sub
push
clc
in
fsts
xor
mov
mov
out
daa
lret
cmpsl
pop
push
ror
jb
scas
fwait
cmpsl
mov
xchg
leave
xor
sub
pop
add
mov
aam
in
jae
sbb
pop
jnp
int
mov
fbld
bound
and
fsubl
mov
inc
lods
or
and
adc
ja
fmuls
mov
cmp
mov
cwtl
int
cmp
sbb
cltd
insb
mov
fadds
stos
and
fxch
std
or
mov
and
pushf
addr16
sti
fdivl
test
xchg
sub
rcr
out
popa
je
mov
fsubrp
fsts
testl
pop
mov
add
cmp
lret
stos
leave
insb
lcall
push
aam
pop
pop
sub
in
loope
cld
push
cwtl
out
sub
push
out
call
add
lods
andl
sub
inc
ja
sti
insb
ss
lret
mov
xor
add
imul
dec
xchg
scas
mov
xor
pop
pop
cmp
push
add
push
outsb
sub
mov
lea
movsl
cmp
jl
jno
push
jno
and
xchg
pop
add
sub
push
ret
mov
insb
jg
inc
test
cmp
jns
imul
std
push
movsl
adc
mov
test
movq
push
pusha
or
add
xchg
in
xchg
lcall
sub
and
push
pop
or
cs
ds
pusha
insb
xor
bound
sub
or
jae
dec
cmp
stos
sbb
test
push
adc
sti
cmpsl
jo
inc
fstps
xor
mov
loope
xchg
adc
push
xor
push
jo
jnp
and
sub
mov
jmp
movsl
lret
mov
or
in
xor
and
add
push
daa
fsubrl
rolb
mov
add
lds
adc
jge
mov
xor
enter
rorb
cmpsb
into
cld
cld
jl
cli
les
jne
aas
scas
pop
icebp
fldpi
jns
push
notb
shr
loop
or
add
mov
add
jns
pushl
pop
push
xchg
push
adc
and
cmpsb
pop
cmp
fadd
push
idivl
push
add
push
leave
cmp
aas
mov
push
dec
xchg
inc
loopne
aaa
dec
and
rolb
jb
jo
adc
fidivrl
pop
mov
movl
xchg
xchg
jg
adc
inc
and
aaa
mov
orl
mov
inc
arpl
rcr
cmp
pop
or
jmp
xchg
jo
jge
test
stos
mov
jle
lods
mov
cmp
sub
xchg
cmp
lea
out
mov
mov
and
in
mov
xorl
bnd
clc
cmp
xchg
dec
negb
cli
jle
push
or
dec
ret
mov
lret
cmp
sbb
xchg
mov
pusha
pop
push
push
sub
fisubrl
pop
inc
add
sub
test
mov
xchg
sbb
xchg
ret
shrb
inc
mov
mov
add
push
mov
mov
sbb
scas
leave
push
dec
mov
fsubl
push
inc
inc
push
loope
movsl
scas
movsl
pop
idiv
jmp
mov
xchg
mov
fadd
xchg
scas
popf
invd
add
pavgb
scas
shrl
xor
filds
mov
sbb
or
lret
cmp
xchg
mov
sbb
mov
inc
test
and
push
pop
movsb
sub
cmpsb
adc
jns
jbe
dec
xchg
dec
call
loop
push
bound
aaa
cmp
or
ret
jnp
roll
out
adc
jmp
arpl
lahf
adc
push
xchg
iret
cmp
mov
sub
in
lcall
jo
leave
loop
and
jnp
adc
test
cmp
xor
push
push
mov
xlat
sub
push
jmp
test
push
or
xor
pop
ja
jp
jne
std
pop
sti
and
pop
cmpl
aas
inc
push
xchg
mov
lds
inc
pusha
fstpl
xor
sub
icebp
test
sub
sbb
filds
nop
sbb
mov
movsl
iret
lcall
daa
cmc
cmp
inc
add
aaa
lahf
dec
mov
ja
mov
xor
pusha
movsb
xchg
dec
ja
sub
push
xchg
jge
xchg
sub
mov
push
dec
insb
dec
dec
sbb
mov
add
jge
fimull
jge
adc
test
mov
and
jl
add
ret
icebp
popf
pop
push
add
aas
aaa
dec
sub
jo,pt
leave
lret
mov
stc
sbb
imul
xchg
lods
jge
scas
clc
cs
inc
mov
ljmp
or
arpl
rcrb
mov
sub
shr
mov
das
test
mov
imul
aad
dec
adc
test
xor
loope
adc
mov
sub
enter
mov
insl
std
lock
out
insl
mov
pop
cmpsb
sbb
fcom
sub
sub
stc
inc
add
jle
stc
inc
sub
mov
pop
mov
movsb
adc
mov
jle
adc
movsl
in
and
cmp
ret
pop
jge
sarl
sarl
mov
push
popa
adc
sti
shld
cmp
pop
jne
decl
lods
mov
test
add
imul
pop
mov
sbb
test
adc
push
inc
in
cwtl
stc
je
lea
mov
jg
xchg
cltd
imul
lcall
dec
jecxz
in
mov
ret
cs
jecxz
jmp
xor
ss
jo
pop
out
aaa
popa
loopne
mov
mov
jne
mov
jl
into
mov
out
mov
sbb
imul
or
ficompl
inc
or
ja
shr
cmp
xlat
sbb
xchg
sub
out
mov
in
stc
mov
xchg
test
sub
pop
mov
and
cwtl
cld
js
fcomps
mov
jmp
test
push
jne
insl
fsubrs
mov
in
in
mov
push
sbb
mov
jg
mov
enter
add
mov
adc
pusha
pop
fdivr
nop
repz
or
sbb
repnz
fidivl
pop
das
xchg
and
jo
rcll
divb
insb
lahf
mov
subb
aas
adc
leave
pop
pop
nop
jbe
push
mov
mov
call
jb
pop
lea
aam
lods
push
pop
mov
mov
xchg
lea
push
shll
stos
outsl
xchg
sbb
mov
imul
sub
jmp
pop
xchg
mov
xchg
xor
imul
adc
leave
in
repnz
arpl
jmp
faddl
push
xchg
adc
mov
movsw
lcall
aam
pop
int3
cmp
push
adc
sub
xor
dec
imul
loope
pop
loopne
mov
scas
outsl
sbb
negb
lods
add
mov
add
shlb
mov
cmpsl
cmp
push
push
lods
mov
add
push
xchg
lcall
rorl
call
push
addr16
xor
mov
out
and
dec
xor
cli
sub
out
push
adc
push
insl
mov
lds
popa
ja
xchg
sub
jmp
adc
stc
scas
movsb
dec
pop
popa
inc
jbe
out
dec
in
sub
cmpsl
sahf
push
mov
add
jge
cmp
mov
call
dec
xchg
sahf
adc
jbe
pusha
fsts
mov
pop
outsb
or
dec
lret
scas
push
jl
insb
hlt
xchg
cmp
or
cmp
mulb
movsb
mov
mov
loopne
dec
pop
jns
rcl
out
push
dec
xchg
fmulp
mov
dec
xchg
jne
xor
adc
sub
outsl
es
lds
fs
jns
or
movsl
sub
mov
jns
cmp
hlt
rcll
fs
popa
fs
sub
stos
bound
sbb
test
adc
rcrb
movsb
aas
dec
stos
jge
mov
push
test
mov
icebp
call
iret
adc
data16
je
xor
sbbl
insl
insl
stc
and
mov
push
xor
scas
fsub
das
mov
ja
addr16
push
adc
xor
clc
sub
inc
cld
test
inc
dec
fldl
or
inc
pushf
or
into
lret
sub
lods
push
mov
xor
imul
lret
jp
xchg
xchg
repnz
and
lret
stos
stc
jnp
adc
nop
cld
adc
repnz
cli
xor
and
pcmpgtw
push
inc
inc
js
add
ss
out
cmc
sub
jmp
test
jle
dec
stc
insb
loop
push
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
test
invd
add
shrd
in
pavgw
jo
ret
xor
aad
mov
clts
outsb
xor
add
in
std
mov
push
scas
sbb
popa
xor
out
push
cmp
mull
xor
dec
mov
and
in
daa
imul
and
addr16
dec
cmp
aad
lahf
sub
push
mov
push
cmpsb
xor
jg
jns
push
dec
outsb
adc
xchg
mov
inc
dec
cmc
cmpsl
push
inc
sbb
ja
int3
jbe
dec
xchg
add
sub
adc
pushf
cmp
pop
popf
xor
pusha
and
std
pusha
out
ds
scas
inc
mov
inc
jge
add
inc
js
sahf
cmp
pushf
adc
fiaddl
inc
fsubs
and
lea
xchg
int
dec
mov
add
cli
dec
or
and
loopne
jge
ret
in
push
push
push
xchg
popa
push
inc
sub
sbb
subl
add
pop
xchg
jp
sbb
mov
ds
inc
jecxz
adc
pop
repnz
maxps
jae
xchg
loop
dec
cmp
shlb
xchg
les
imul
gs
dec
mov
fsub
mov
addl
add
popl
and
pop
cmp
lcall
pop
test
arpl
outsb
lcall
repnz
in
arpl
mov
jle
test
jne
std
cmp
inc
out
xchg
jae
rolb
lods
outsb
add
sub
cmc
pop
lret
dec
les
cltd
fs
jecxz
out
lret
mov
addr16
rcr
push
stos
das
mov
push
dec
adc
out
insl
inc
orl
xchg
push
mov
adc
cmp
ds
das
jg
sbb
jp
push
sar
dec
ds
out
aaa
gs
push
ret
fisubl
xchg
jecxz
inc
push
es
stos
xchg
mov
add
movsb
mov
pushf
push
pop
test
int
sub
or
fildl
xchg
inc
jns
sbb
aad
stos
das
repnz
decb
xlat
int
out
pushl
mov
test
sub
pushf
sub
addr16
ret
mov
hlt
scas
inc
loopne
xchg
lcall
movsl
mov
xchg
pop
xchg
jl
mov
iret
daa
push
inc
or
divl
sti
and
sarl
mov
in
mov
and
xlat
push
inc
aad
faddp
insb
daa
push
rorb
xor
mov
outsl
or
mov
ljmp
sbb
mov
pop
inc
dec
les
mov
in
imul
mov
pop
push
pop
les
or
rcrl
pop
mov
push
out
pop
mov
adc
sub
pop
cmp
scas
push
fdivs
mov
pop
call
mov
lahf
sbb
movsl
sti
into
cmp
in
or
pop
mov
rclb
fimull
sarb
cmp
outsb
sbb
jge
dec
jmp
xor
jg
test
lahf
pop
dec
ret
mov
and
push
sub
ss
mov
push
rolb
lea
xor
xor
add
stos
mov
in
and
xchg
aad
cmc
pop
cmpsl
or
cs
jnp
sbb
cmp
sar
jp
lcall
aaa
mov
xchg
fwait
pop
sub
xchg
leave
int3
pop
jae
inc
xchg
push
push
stos
cmp
jns
aam
cmp
mov
sbb
stc
mov
rol
sbb
push
push
pop
add
je
inc
lcall
mov
scas
push
icebp
pushf
mov
push
xor
sbb
xorl
mov
add
in
sbb
jecxz
pop
lock
ret
mull
xchg
orl
push
push
push
cvtpi2ps
test
in
pop
push
dec
push
xlat
in
add
paddusb
fs
cmc
lds
inc
sub
ljmp
push
daa
inc
or
mov
divb
imul
inc
mov
xchg
orl
push
dec
ljmp
or
dec
and
aad
mov
adc
incb
clc
aad
dec
push
std
out
mov
xor
stc
or
in
pop
ficomps
rorl
push
leave
ret
sbb
aas
sub
jbe
js
jo
arpl
inc
mov
testl
test
and
stos
repnz
sub
xor
jge
mov
sti
pop
nop
stc
or
cld
movsb
and
adc
adc
ss
jb
push
add
xor
sbb
fs
fwait
fs
clc
jno
mov
subl
iret
mov
inc
lock
cmp
cli
dec
rcll
loope
push
adc
cmp
arpl
and
cwtl
push
cmp
xchg
xchg
push
sub
and
fldcw
aaa
or
dec
xor
cmpsl
iret
adc
lea
mov
dec
imul
cmc
add
dec
jge
movsb
mull
push
jo
insl
adc
adc
rorl
out
mov
rol
fistpl
cs
pop
enter
movsb
push
popf
sub
bound
movl
shrl
cs
pop
lds
clc
nop
jne
xor
sbb
div
fdivrp
insb
push
addr16
mov
sub
lds
insl
inc
int3
jae
sti
mov
jb
pop
mov
nop
pop
int3
sarl
jnp
adcl
inc
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
sub
mov
add
xadd
mov
cltd
push
xchg
jae
mov
das
fs
cltd
adc
lahf
pop
sbbl
fiadds
mov
imul
sub
pusha
push
push
mov
fmull
inc
mov
xlat
stc
out
les
mov
mov
imul
lods
repz
push
pop
xor
stos
inc
xchg
inc
into
jns
jb
pop
or
in
rol
lret
jbe
fistps
std
ja
rolb
mov
jmp
xor
mov
mov
scas
dec
loop
mov
jbe
ret
inc
rclb
fnstenv
fildl
aad
lock
das
cmp
in
repz
imul
jno
push
insl
js
loopw
clc
jmp
cmp
mov
dec
xchg
pop
lret
xchg
dec
push
fistps
push
test
xchg
popf
cmp
mov
adc
or
fnstsw
ja
mov
fldenv
mov
push
lods
jnp
sub
aad
popf
inc
nop
push
dec
movsl
jbe
imul
cli
push
mov
out
pop
adc
dec
dec
pop
ret
dec
and
adc
clc
sbb
push
mov
xchg
xchg
cld
in
pop
lds
ja
dec
repnz
sti
add
add
test
xchg
jo
adc
or
add
xchg
jp
inc
cltd
insl
dec
mov
faddl
xor
es
mov
cmp
mov
lcall
ljmp
push
pop
add
bound
js
inc
mov
jno
sub
jmp
imul
or
mov
xor
xor
dec
insl
popf
cmpsb
inc
leave
push
ret
mov
jmp
mov
fisttps
enter
les
into
inc
sub
nop
lea
ss
push
lds
mov
jno
mov
mov
in
mov
sti
loop
push
push
cmc
ss
das
and
inc
pop
sbb
and
push
stos
cs
rolb
adc
adc
daa
xchg
mov
inc
int3
movsb
data16
xlat
sub
push
xchg
or
xor
mov
adc
andb
cwtl
aad
sarl
cltd
iret
cs
ret
mov
inc
mov
ret
lock
jno
jge
aad
push
jbe
lea
xor
or
mov
call
and
dec
out
sbb
sbb
mov
roll
mov
push
lahf
lret
gs
mov
cmp
pop
mov
lods
push
lahf
mov
add
aas
sbb
in
push
sar
pop
mov
out
dec
movsb
gs
fimuls
pop
icebp
sub
mov
fidivrl
mov
pop
jno
icebp
lret
sar
and
les
mov
insb
mov
subl
ljmp
inc
or
daa
popa
lods
xor
out
dec
fs
clc
int
pop
test
fs
push
mov
ds
shrl
sub
push
sub
jle
js
and
outsl
or
test
adc
cwtl
in
push
mov
push
fildll
add
in
outsl
add
shrl
push
mov
nop
inc
out
rcr
repz
stos
sbb
in
xor
movsb
push
adc
xchg
inc
nop
fbstp
jne
add
pop
push
mov
xor
adc
outsb
pop
mov
arpl
outsb
shlb
dec
xchg
lods
lods
mov
sbbl
enter
dec
subl
and
aas
push
ret
pop
push
push
dec
dec
in
and
popf
push
popf
push
jge
hlt
xor
and
adc
sbb
or
mov
cmp
xor
pop
out
in
or
fsubrl
fists
inc
pop
xor
inc
sbb
jnp
xor
add
push
mov
add
pusha
lret
jb
mov
lcall
fbld
addr16
fcomi
push
add
inc
rcl
ja
mov
pop
xchg
fstl
or
adc
mov
sar
das
push
addl
inc
push
xor
pushf
xchg
jb
add
movsb
imul
scas
inc
push
mov
lahf
fldpi
mov
mov
rcll
out
scas
push
insb
ficoml
aas
sbb
dec
jnp
in
bound
xor
pop
sarb
sub
repnz
out
mov
loop
add
repz
xchg
shl
adc
getsec
jmp
lods
aam
or
roll
and
xchg
xchg
leave
cli
inc
cmp
dec
arpl
fidivs
mov
out
out
subb
sbbb
pop
mov
dec
arpl
mov
stos
jge
jmp
aaa
into
pop
nop
adc
loopne
jo
jecxz
and
gs
fildl
inc
xchg
mov
adc
cltd
jg
sti
mulb
ds
arpl
adc
or
mov
pop
leave
pop
dec
cs
sbb
xchg
add
fstp
sub
sahf
cld
sti
clc
pop
mov
es
test
and
mov
sarl
rol
ljmp
repz
clc
add
push
clc
shlb
xor
fistps
xchg
lods
add
cmc
pop
rolb
push
jns
sbbl
mov
ss
cwtl
mov
pop
adc
cmp
mov
dec
sub
rcll
int3
inc
mov
dec
outsl
test
mov
cld
ss
mov
cwtl
out
ja
adc
orl
cli
add
icebp
pop
ja
or
aam
adc
repnz
mov
imul
jge
les
mov
push
pop
clc
call
cmp
pop
inc
cs
insl
dec
mov
push
xlat
xor
jp
cli
insb
aas
ss
sbb
outsl
xor
pop
dec
bound
pusha
rolb
mov
ja
in
popa
cltd
push
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
scas
es
mov
add
movzbl
dec
inc
cld
mov
rclb
mov
and
add
ret
in
jmp
lahf
popa
dec
pop
mov
test
push
iret
loope
pop
lods
inc
adc
add
inc
movsb
add
mov
outsl
mov
test
mov
cmp
sarb
incl
packuswb
jns
aam
inc
sahf
inc
fistpll
push
jo
repz
mov
and
xor
sub
dec
mov
mov
arpl
mov
dec
in
inc
test
cmc
adcb
or
push
jg
in
out
jle
imull
lock
std
push
mov
sbb
cmp
inc
mov
dec
cmpb
pop
ss
mov
out
xchg
sub
jle
es
repz
sbb
mov
mov
xchg
vpshab
mov
mov
sub
push
scas
int
mov
aaa
cmp
jmp
cmpsl
pop
xor
mov
push
pop
ss
xor
add
lds
rorl
sbb
insb
iret
pop
sub
fildll
mov
es
popa
dec
adc
fwait
cmpsl
mov
jge
mov
imul
and
dec
es
mov
xchg
mov
bound
dec
dec
xchg
int
mov
jle
sub
out
loop
mov
pop
repnz
imul
jmp
xchg
stos
xchg
andb
mov
dec
jle
cmp
ret
dec
lahf
ret
push
jbe
mov
lret
test
xchg
stos
pop
pop
sbb
popa
sub
sub
shll
jge
cwtl
sub
pop
leave
jecxz
push
movsb
out
cmpb
sarb
jbe
cld
aad
mov
cli
pusha
int3
test
jo
mov
fstp
ja
sbb
xlat
pop
out
inc
add
sbb
test
mov
jns
mov
insl
and
out
and
lods
lds
lds
sbb
dec
or
and
push
pusha
pop
ror
or
adc
mov
sbb
push
add
aam
mov
loopne
xor
mov
dec
xor
and
push
xor
inc
xor
or
adc
xchg
sbb
add
stc
sub
int3
rcll
xchg
add
or
add
or
fs
lahf
adcb
loope
dec
and
ds
push
cmp
inc
ljmp
xchg
popl
lret
push
je
sahf
xchg
ret
fs
and
and
call
cmp
popf
push
or
mov
aas
cwtl
rclb
dec
daa
mov
ljmp
dec
aas
pop
mov
pushw
and
push
imul
push
dec
cmp
push
inc
sbb
test
jmp
or
inc
mul
adc
iret
data16
repz
loopne
pop
adc
cmp
push
sub
adcl
or
popl
mov
cmp
rcrb
aam
cwtl
clc
mov
int3
into
mul
enter
jp
scas
shll
cwtl
cmp
xchg
mov
movb
sub
push
jo
jge
xchg
fldenv
cwtl
adc
jae
int
or
vmaskmovdqu
stc
pop
shll
sub
cmp
or
inc
ret
test
sti
jno
in
ret
lods
in
stc
fwait
push
dec
xlat
testb
hlt
ljmp
jecxz
or
sbb
adc
setp
leave
or
mov
mov
lcall
hlt
jns
sub
cmp
cmp
and
inc
popf
int
out
cmc
call
sti
xorl
ret
add
fdivr
outsb
inc
aam
pop
outsb
inc
loope
mov
sub
jae
cmp
jne
mov
out
jge
ret
cmp
stos
imul
lret
rclb
or
mov
xor
and
cmp
fists
int
sbb
inc
divl
cmp
inc
es
daa
icebp
or
dec
aaa
adcl
sahf
mov
insb
jp
cmp
push
mov
adc
inc
jne
imul
and
ljmp
leave
add
and
test
nop
push
jb
or
mov
pop
fcmovne
or
xchg
sbbl
sub
test
or
mov
cwtl
lret
push
aas
pop
push
or
ds
test
pusha
push
push
push
mov
lret
and
shl
add
in
lret
adc
xchg
xchg
pop
divl
pop
add
pop
scas
in
outsb
fninit
cmpsb
in
aaa
dec
add
lahf
inc
aaa
daa
icebp
lret
push
xor
cmpl
into
cmc
data16
push
push
pop
cmpsl
fmull
sub
nop
and
incl
mov
jno
lcall
pop
lret
push
test
test
adc
in
fwait
pop
insb
scas
lds
sub
mov
push
fldz
inc
mov
mov
and
rolb
xor
stos
arpl
stc
cli
dec
daa
js
aam
je
jae
cmp
push
push
stc
or
iret
mov
dec
mov
subl
dec
rolb
mov
xor
and
xchg
xchg
or
popf
hlt
es
js
cmp
in
daa
lods
push
insl
add
popf
dec
lcall
pop
sub
cmp
sub
jns
notb
sub
lods
adc
cmpsb
notl
push
test
push
sub
xor
int3
stos
mov
jg
pop
xchg
mov
out
sbb
mov
imul
rorl
inc
hlt
pop
xor
pop
fdivl
call
nop
or
imul
outsl
divl
add
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
bswap
out
jmp
outsl
xchg
or
out
loope
or
je
movsb
lods
dec
ja
add
fdivs
imul
sub
std
pop
sub
ja
and
stos
xor
or
in
or
pop
or
in
adc
adc
lock
push
scas
mov
int
data16
outsb
mov
jge
mov
and
pop
test
cmc
jle
pop
jb
imul
sub
shll
xchg
xor
push
ret
pushf
xor
xchg
push
xor
dec
fildl
xor
js
dec
add
gs
mov
mov
cmp
popa
pop
pushf
jnp
jns
xchg
je
in
cmp
cli
add
in
fidivl
push
inc
aad
and
mov
and
cld
or
stos
and
call
xlat
mov
mov
hlt
inc
add
and
pop
fistpl
dec
push
inc
mov
dec
cmpsl
lret
cmp
ret
add
pop
out
or
add
sbb
ret
cld
out
movsl
inc
mov
hlt
xor
inc
ret
mov
cmp
movsl
dec
notb
cmp
pop
jb
addr16
stc
push
jbe
lcall
test
popf
xchg
es
push
fwait
inc
xor
xor
dec
and
cmc
int
push
jmp
cli
or
inc
cmpsl
mov
fdivr
int
add
inc
or
or
dec
mov
mov
cmc
or
mov
cmpb
add
loop
dec
call
add
push
fdivl
add
dec
jle
dec
sub
cmp
push
ret
xchg
mov
sti
lahf
mov
cli
andl
sbb
cmp
push
pop
cltd
push
dec
jo
xor
jb
loope
arpl
mov
add
xchg
fmuls
imul
cmp
jl
ljmp
mov
lock
dec
vandps
scas
or
pop
push
xchg
push
lahf
xchg
pop
cli
and
jge
std
enter
shrl
fstpl
rorb
xchg
loopne
inc
lods
in
mov
add
sbb
fwait
rcrl
jnp
shlb
pop
sahf
bnd
insb
lods
and
adc
xchg
lret
and
movsl
cld
arpl
addb
or
pop
pop
test
mov
enter
loopne
sbb
or
fimuls
dec
call
inc
xlat
test
push
xchg
clc
xchg
insl
inc
neg
or
dec
lret
repz
push
fisubrs
cmp
sar
ss
cld
ds
int
mov
xchg
add
jnp
movsl
cmp
out
push
pusha
leave
ret
int
outsb
xchg
int
xchg
mov
js
push
divb
jbe
iret
dec
cmpl
mov
fldt
repnz
or
orl
xchg
lock
or
and
int
dec
pusha
icebp
inc
ret
mov
fnstsw
and
rcr
movsl
sbb
xor
dec
jnp
cmp
aad
xor
mov
xor
mov
sub
jmp
cmc
jne
mov
in
adc
leave
mov
xchg
pop
xchg
inc
cmc
or
aam
push
adc
aad
cwtl
hlt
nop
stos
nop
jo
sbb
jae
cltd
jnp
filds
xor
xchg
jae
cmp
cmp
cmp
ljmp
mov
xor
cmp
add
xor
fs
dec
pop
das
jle
push
sbb
nop
jbe
cld
lcall
mov
adc
fnsave
xor
cmc
lds
int3
sbb
sbb
or
jbe
sub
rorb
sbb
mov
scas
mov
xchg
jecxz
sar
inc
add
cmp
and
popa
js
decb
lahf
or
jecxz
lret
or
mov
mov
push
loope
fbld
adc
cmpsb
and
into
dec
aaa
dec
sub
xor
push
mov
fs
pop
pop
inc
inc
pinsrw
push
fmuls
stos
aaa
push
testl
adc
outsb
pop
xchg
repnz
mov
dec
dec
cltd
cmpsl
test
pop
jmp
lods
mov
inc
mov
mov
and
jae
mov
add
xlat
iret
jmp
cmp
enter
inc
int
or
push
jl
mov
dec
push
and
int3
cmpsl
ss
mov
push
sbb
pop
cmpsl
lret
pop
mov
or
pop
jno
js
loopne
sub
push
daa
cltd
sbb
jnp
test
sbb
push
jl
pop
adc
mov
sub
lock
mov
jo
enter
dec
rorb
je
push
int
dec
clc
lock
and
push
mov
insb
lock
outsb
loope
inc
pop
jb
in
hlt
loopne
fmull
loope
ds
xor
sub
int
pop
pop
jo
out
dec
and
jge
mov
jo
xor
je
outsl
cltd
jbe
mov
je
xchg
sub
xchg
adc
daa
mov
mov
loop
pop
pop
cli
cmp
ds
movsl
aaa
sub
and
or
ds
dec
jmp
gs
xor
movsb
xorl
push
fldcw
sbb
gs
mov
clc
rcll
inc
lea
stos
inc
shll
adc
call
pop
enter
test
jle
daa
xchg
pop
sahf
orl
or
jns
or
cmc
lock
ds
dec
xor
repz
fisubs
hlt
xchg
jno
pop
or
out
pop
jmp
call
subb
and
fldenv
ret
ds
xor
push
imull
sbb
fisubl
lea
cmpsl
call
mov
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
loope
and
or
rsqrtps
daa
in
insb
lods
dec
cmp
jecxz
cmpsl
mov
xchg
addr16
jno
rorl
add
in
inc
in
add
pop
jb
adc
aas
mov
movsb
mov
test
sbb
pusha
jecxz
leave
pop
div
insl
pop
sbb
scas
nop
mov
mov
ss
adc
insl
andb
fldt
les
cs
mov
sti
cmp
jl
rol
and
xor
out
inc
lcall
addl
jge
or
into
add
and
aas
loop
adc
lcall
ret
push
sbb
jg
out
push
dec
mov
rcr
cmc
movsl
lahf
movsl
adc
call
mov
lock
mov
pop
mov
jae
in
loope
nop
lods
xchg
pusha
mov
and
sbb
test
addr16
mov
cld
stc
cmp
dec
xor
cmp
fnstsw
cwtl
sub
fwait
cmpsb
sbb
sbb
stos
es
sbb
outsb
js
mull
fwait
addr16
mov
push
movsl
xchg
dec
addb
or
andb
mov
add
xchg
data16
mov
pop
mov
jo
push
inc
mov
mov
push
inc
sub
adc
push
mov
mov
add
cli
and
push
add
int3
adc
test
popl
dec
jno
imull
fstps
aaa
pop
xchg
cmpsb
adc
xchg
fisttpl
pushf
or
pop
pusha
pop
cmp
lea
out
in
push
mov
sbb
inc
loop
add
aad
dec
sbb
cwtl
or
pop
pop
call
inc
enter
faddl
mov
out
ds
push
aaa
cmpb
pop
xchg
scas
pop
or
rcr
out
xchg
pop
out
adc
stos
shll
dec
pusha
jo
pop
and
mov
mov
jns
mov
mov
or
int
add
sti
add
xchg
lds
scas
sbb
xchg
inc
adc
arpl
rcr
cmpl
xor
dec
sbb
nop
lcall
sub
mov
sbb
gs
adc
cwtl
in
mov
push
lret
scas
fbstp
push
dec
aam
shrl
stos
pop
out
push
das
dec
adc
insl
or
mov
mov
movsl
cmp
xor
add
adc
pop
sbb
imul
faddl
hlt
out
mov
cmp
divps
sbb
pop
push
pop
aaa
and
add
sbb
clc
cli
push
jge
jle
sub
std
mov
aas
inc
repnz
push
movsl
mov
lea
add
sbb
testl
flds
push
pop
sahf
shrl
mov
or
pop
or
add
cld
jge
sbb
push
pop
fstps
lods
insl
jae
cli
cmp
jo
ljmp
adc
push
jge
xchg
out
aam
pop
xchg
stos
inc
sar
fstpl
and
hlt
icebp
mov
jns
lret
inc
pushf
leave
jp
repnz
adc
movsl
mov
inc
test
int
sarl
mov
jle
cmp
jae
push
lahf
fwait
repz
pop
clc
jno
add
adc
xor
aam
mov
cmp
mov
pop
push
pop
aam
adc
xchg
scas
ds
lods
xchg
adc
add
into
popa
fsubr
std
dec
lret
jg
mov
pushf
push
bound
popf
shl
arpl
lcall
push
lcall
pusha
jne
inc
adc
je
jae
popa
outsb
in
loope
add
xchg
sub
ja
aaa
movsb
mov
or
and
xchg
push
jno
addr16
test
jecxz
cmp
mov
loope
popf
sbb
fcomip
cmp
cs
scas
movb
das
mov
jbe
pop
outsb
pusha
cmpsl
lods
sbb
sub
jbe
inc
and
xchg
sbb
cmpb
mov
imul
popf
dec
inc
insl
aas
lds
cmpsb
push
xchg
push
test
jmp
test
nop
xchg
mulb
lods
nop
gs
stc
jns
incb
mov
and
lea
push
std
in
push
pop
nop
cltd
fcmovb
aaa
std
xchg
fistps
lea
mov
xchg
xlat
and
imul
cmp
pop
cmp
or
arpl
test
xchg
fwait
and
xor
out
push
pop
cmp
loop
dec
orb
cli
mov
popf
and
mov
push
out
mov
sub
ret
pop
or
add
pusha
lods
mov
mov
add
clc
les
mov
cmp
dec
test
xchg
push
test
aad
int
lea
sbb
aaa
pop
loope
rorl
shll
insb
pop
adc
cmpb
repnz
xchg
ja
jg
push
rcrb
inc
cmpsl
mov
stos
xor
subb
mov
std
sbb
pop
insl
mull
out
add
fistps
push
cli
cs
test
mov
repnz
mov
or
and
xor
cmp
push
jnp
push
ret
sbb
sbb
test
dec
xchg
inc
cmp
pop
popa
in
pop
jmp
dec
outsb
scas
jnp
push
pop
fildll
outsb
das
ret
or
lret
cld
and
in
push
or
jnp
hlt
inc
sub
out
inc
lods
add
mov
mov
push
scas
xor
add
mov
pop
stos
ret
daa
bound
adc
aas
fs
rorb
sub
loopne
mov
bound
mov
xor
mov
dec
mov
pop
das
mov
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
nop
adc
or
pmulhw
test
movsl
fsubrs
mov
cmp
xor
outsl
enter
dec
sbb
cltd
adc
test
adc
cwtl
jb
imul
dec
xchg
fidivrs
sbb
jl
jge
sar
ret
and
or
mov
add
and
popa
popf
dec
mov
roll
fsubl
hlt
sahf
lret
dec
test
in
push
fsubrs
fcoml
shll
in
add
dec
dec
rcrb
stos
repz
insl
in
daa
cmpsl
xor
in
pop
repz
push
inc
sti
adc
mov
ficoms
scas
loop
shl
mov
scas
insl
lds
cmp
mov
push
mov
push
xchg
fnsave
ljmp
and
xchg
fidivl
sbb
mov
or
idiv
jmp
push
inc
push
rolb
lahf
fwait
inc
cmp
sub
mov
fdivrl
in
pop
add
testl
inc
adc
mov
pusha
mov
xor
bound
push
iret
clc
insb
loop
aas
pop
push
clc
call
sahf
mov
scas
dec
lea
cmc
fldenv
inc
pop
lahf
xor
lods
push
outsl
dec
push
inc
jmp
jmp
xor
adc
xchg
sahf
dec
in
test
cmpsb
adc
mov
mov
or
insb
mov
xchg
nop
lcall
sti
dec
jge
mov
loope
or
fisubrl
mov
add
pop
int3
dec
ja
repnz
push
pop
mov
jbe
mov
sub
add
add
ret
sbb
fnstcw
cld
cmp
movsb
aad
sbb
pop
push
dec
out
arpl
lcall
pop
mov
jle
cmp
and
out
int
dec
aam
movsl
mov
testl
fildl
imul
mov
lret
lods
repnz
jnp
cmp
jecxz
sbb
push
fiadds
jbe
xor
xor
outsb
jnp
cmp
cmp
jge
jnp
js
sub
aam
push
sub
jo
cli
cwtl
and
xlat
mov
cltd
dec
adc
mov
cli
stos
test
push
sbb
gs
aas
int3
or
loop
inc
fwait
push
and
xchg
outsl
das
adc
and
xlat
mov
pop
int3
ljmp
dec
adc
jae
sti
ljmp
gs
inc
stos
dec
pop
out
and
dec
imul
stos
sti
loope
xlat
adc
push
inc
jmp
rcrb
pop
outsb
fs
mov
or
daa
or
dec
add
jbe
push
xchg
in
add
push
leave
dec
aas
push
sub
dec
in
mov
mov
xor
and
push
std
leave
lods
xchg
push
scas
and
ljmp
pop
scas
jmp
leave
jb
stos
fwait
in
cs
movntq
out
xchg
pop
xchg
imull
sub
push
test
mov
rcl
mov
fstpt
imulb
jg
or
cmp
mov
inc
lahf
adc
sti
mov
xchg
call
cmp
into
rcl
and
sbb
adc
sbbl
lea
loop
sub
mov
jecxz
fs
fsub
jg
pop
cmp
mov
mov
bound
idivl
cli
mov
ljmp
mov
int3
inc
std
and
movsl
adc
mov
lret
mov
jecxz
sub
push
xchg
and
and
int
mov
fs
xchg
push
jl
cmp
fisubs
cmpsb
inc
and
xchg
bound
jnp
push
mov
fcmovnu
or
mov
sbb
out
mov
cmp
lret
pop
mov
out
cmp
rorb
push
xchg
adc
jmp
outsb
adc
sarl
cld
addr16
dec
push
leave
jnp
or
lret
lret
in
push
add
inc
adc
inc
std
jb
mov
shrl
inc
jl
cmpsl
daa
mov
jb
adc
outsb
cmp
pop
pusha
mov
ficomps
jno
dec
ss
pop
into
inc
mov
push
js
std
pusha
jmp
xchg
in
pop
fwait
cwtl
and
mov
in
stos
adc
data16
jp
jecxz
mov
mov
das
push
adc
fucom
push
adc
orl
adc
sub
adc
cmpsl
add
xchg
movsl
in
add
sbb
add
push
out
push
mov
xchg
xchg
int
pop
lret
pop
ljmp
roll
cs
lret
dec
aas
shrb
adc
mov
add
push
cwtl
push
outsb
mov
arpl
push
dec
cwtl
and
mov
push
push
sbbl
push
adc
pushf
mov
sbb
dec
xor
into
push
rcll
sub
xor
mov
inc
cmp
aad
add
cld
dec
or
cltd
pop
adc
cmp
movsl
cs
or
inc
adc
push
out
mov
stc
loopew
sub
lds
cmp
and
mov
xchg
mov
sahf
dec
xchg
out
int
cmp
inc
cmc
cmp
xchg
js
mov
cmp
adc
xor
or
loop
je
jp
lret
push
cmp
nop
stc
fstps
adc
pop
fadd
pop
jg
popa
mov
cs
js
sub
sbb
mov
adc
push
adc
icebp
jp
mov
push
lods
dec
lock
xlat
outsl
sub
repz
cvtps2pi
sbb
push
inc
aas
dec
aam
lahf
adc
adc
adc
adc
add
inc
in
inc
lods
ret
push
jg
lahf
cmp
mov
adc
sti
xor
add
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
movq
sar
push
sbb
out
and
in
xor
std
mov
aad
in
xor
jbe,pn
pusha
mov
sub
push
movsb
sbb
mov
inc
dec
mov
add
out
xor
out
or
dec
cmpb
pushf
enter
repnz
pop
scas
rcr
pushf
or
lret
inc
push
enter
sbb
pusha
ds
gs
xchg
jg
jne
ret
cmpsb
pop
aam
out
inc
sahf
push
inc
stos
pop
lahf
mov
mov
ljmp
aam
jo
aam
xchg
out
pop
add
mov
fbstp
pop
leave
imul
inc
movl
ljmp
sub
movl
adc
int3
dec
inc
rorb
scas
mov
data16
cmp
adc
mov
sub
fdivrs
push
adc
stc
lretw
popa
lock
subb
xchg
add
js
adcb
imul
xor
sub
mov
outsb
cmc
jp
dec
and
xchg
rclb
mov
inc
lock
nop
or
dec
dec
lds
sub
in
and
mov
xor
data16
mov
jbe
rorb
jge
les
jbe
and
les
add
clc
mov
cld
or
aas
int3
fsubs
or
add
or
icebp
lods
push
and
pop
inc
insb
popf
idivl
in
adc
sub
outsl
cmp
das
cmpsl
and
add
out
mov
push
outsl
pop
mov
inc
sbbl
cmp
aas
and
ret
movsl
mov
and
xchg
jge
pop
test
mov
mov
pop
push
jge
fs
js
daa
movsb
cltd
jmp
jmp
mov
push
sub
les
push
addr16
shlb
and
adc
lock
and
mov
fidivrl
push
push
icebp
rorb
push
scas
fimull
stc
ror
mov
inc
pop
pop
mov
xor
idivb
cmp
cwtl
push
outsl
xchg
out
rorl
xchg
jle
mov
adc
popa
pop
adc
push
stos
sbb
sub
inc
lret
inc
sbb
imul
je
dec
and
fiaddl
rorl
add
out
test
xchg
iret
xor
daa
fstl
xchg
xchg
fadds
cmp
popl
out
enter
sub
adc
jnp
lret
xchg
and
pop
jge
mov
xchg
inc
jl
pop
stc
aas
fistl
mov
icebp
shrb
mov
aad
fwait
pop
jl
outsl
lret
cli
in
jmp
jb
mov
andb
sub
inc
int3
cmp
lcall
je
mov
dec
repnz
sbb
aas
daa
lcall
ja
mov
lods
sar
jno
les
in
stc
sbb
jbe
mov
pop
icebp
sbb
enter
testb
dec
andl
mov
inc
stos
or
sti
and
sbb
pusha
sub
in
push
cli
or
xor
dec
push
xchg
inc
outsb
jle
insl
and
shrb
jmp
scas
popf
adc
ja
mov
push
add
or
lret
pusha
insl
xor
and
in
cmp
adc
adc
mov
leave
mov
out
int
mov
mov
aaa
sub
pop
or
out
das
or
mov
xchg
loop
mov
sbb
xor
pop
in
xchg
pop
int
xchg
jl
ficoml
mov
loopne
add
xchg
push
cmovl
adc
inc
cltd
imul
lretw
lock
push
pop
jne
sbb
mov
jns
std
imul
add
insl
and
and
insl
fbstp
push
mov
sub
jge
stc
mov
into
cmpsb
test
in
nop
adc
xchg
enter
nop
inc
xlat
movsb
test
mov
pop
rclb
xchg
sbb
sbb
sub
pop
in
addr16
xor
das
lcall
mov
adc
fsubp
cltd
sbb
xor
sbb
mov
nop
bnd
mov
jl
xchg
outsb
dec
mov
pop
mov
mov
mov
cmpsl
cmp
add
out
mov
adc
in
sbb
repnz
jge
shl
push
stos
fmuls
lock
inc
jo
std
dec
lahf
addr16
xor
xchg
mov
sub
jle
push
hlt
jns
fistps
out
popf
xor
add
mov
js
mov
outsl
dec
inc
xlat
add
fsubrp
arpl
ds
sub
jae
jo
mov
xor
mov
xor
les
adc
lock
gs
int
arpl
dec
mov
mov
mov
mov
xor
dec
xchg
mov
mov
mov
pop
mov
dec
add
sub
xchg
xorb
lock
movsl
daa
xchg
cli
scas
aas
push
pop
jecxz
push
sbb
scas
orl
mov
cli
and
mov
aam
jbe
sbb
or
adc
inc
loope
jns
inc
je
ss
sbb
jae
push
mov
push
inc
push
outsl
push
lods
dec
mov
push
in
scas
inc
mov
cs
scas
std
dec
pop
mov
lahf
xchg
xchg
fwait
mov
lea
sahf
cmp
adc
sub
xchg
cmpsb
add
in
sbb
jmp
cmc
lret
repnz
and
rclb
push
sti
pop
call
pop
and
jg
pop
sub
js
stos
pop
add
jo
or
fs
repz
or
imul
push
clc
fisttps
shl
jmp
push
mov
cli
sbb
fnstenv
dec
cmc
lahf
push
xchg
inc
invd
add
pop
cmpsb
lret
cld
les
or
cmp
cmpsb
jae
jp
negl
in
sahf
out
js
gs
stos
aam
add
push
aas
jno
fmull
sub
mov
dec
pushl
mov
and
into
inc
fstps
xchg
push
out
divl
push
add
and
fists
dec
pop
cmpsl
sub
pop
jmp
daa
les
mov
lcall
sub
bound
mov
push
or
cmp
jmp
or
mov
and
mov
rcl
out
out
ret
pop
mov
stc
adc
dec
inc
imul
or
dec
dec
mov
imul
adc
ret
sub
hlt
cmp
mov
test
enter
jno
dec
out
sbb
pop
jecxz
push
fwait
mul
mov
ss
fwait
xor
ja
jne
or
rcll
in
pop
inc
pop
repz
aaa
stos
stos
and
aas
std
mov
insb
jbe
pop
ss
dec
hlt
sbb
cmc
or
call
pop
sub
cmpsl
mov
pop
clc
mov
mov
inc
cmp
sbb
pop
pop
addr16
and
in
lahf
enter
js
xchg
sbb
and
int
mov
mov
jecxz
in
dec
movsl
jnp
mov
dec
mov
loopne
or
adc
push
pop
jnp
add
cli
mov
jno
pop
imul
and
pop
shlb
jp
mov
jg
insl
jno
or
sub
xor
das
pop
pop
jle
test
fiadds
adc
jp
aaa
in
xor
pop
cmp
lods
push
pop
dec
lahf
fwait
ror
push
mov
adc
adc
mov
addr16
scas
pop
sbb
mov
pop
leave
xor
add
push
popa
xor
ja
clc
lahf
mov
push
outsl
in
ljmp
cmc
dec
mov
aas
push
sub
pop
aas
xchg
sbb
rorb
add
gs
or
test
cmpb
push
fidivl
inc
xor
mov
pushf
sbb
insl
into
jns
stos
outsl
mov
xchg
jle
mov
or
scas
cwtl
xchg
cmp
arpl
push
xor
into
sbb
andb
es
jge
hlt
sub
out
fyl2xp1
add
mov
fdivr
std
jnp
dec
shl
fnstsw
pushf
sub
xchg
sub
iret
mov
mov
repz
and
jle
outsb
gs
xor
lahf
cmp
mov
xchg
inc
cmpsb
or
xchg
jns
or
insb
jp
in
sbb
ljmp
in
add
sub
js
inc
xorl
call
fdivrl
jle
push
xchg
lret
mov
inc
pop
jl
sub
call
push
jecxz
arpl
pshufw
inc
cmp
jecxz
je
test
sub
mov
xlat
rorl
and
mov
int
inc
sub
mov
cmp
xor
dec
cmp
lds
std
adc
mov
cli
jecxz
pop
lods
stos
addl
test
hlt
test
into
cld
or
push
mov
dec
sub
aam
sub
arpl
or
sti
cmpsb
sahf
test
pop
and
mull
and
pop
cmp
stos
xor
rcll
bound
mov
push
loope
jmp
fldl
jbe
sarb
adc
test
jne
imul
stos
mov
jmp
adc
arpl
aas
add
pop
in
dec
js
jb
jmp
cwtl
cld
std
jmp
dec
mov
hlt
dec
je
or
rol
or
ret
add
out
inc
sbb
ret
xchg
jp
jle
inc
stos
cwtl
add
es
fcmove
mov
pop
xchg
daa
lds
movsl
ficomps
push
les
or
cmp
mov
cld
nop
clc
incb
outsb
imul
repnz
popa
xchg
je
pop
subb
and
daa
pushf
movsb
cwtl
or
or
fnstenv
xchg
mov
mov
lret
push
adcl
cwtl
insb
pop
orb
pop
xorb
lahf
popf
popf
mov
xchg
shl
push
and
jno
jle
pop
mov
out
cmp
movups
push
jl
or
jl
push
psllw
pop
pop
outsb
pop
repnz
xchg
and
push
add
es
inc
nop
dec
aaa
icebp
or
inc
adc
mov
cmc
icebp
leave
fidivrs
shrl
adc
das
mov
add
sub
sub
gs
subl
jno
cltd
dec
fmull
loopne
lcall
in
orl
cmp
mov
ret
movsb
push
mov
sbbb
ja
push
lret
cmpsb
push
cltd
jmp
xchg
dec
dec
xchg
iret
push
add
fwait
mov
lods
cmp
mov
into
in
int3
inc
iret
mov
mov
jb
or
jo
aas
push
add
shlb
sub
out
dec
mov
orb
inc
adc
fdiv
dec
les
xchg
testb
sub
fwait
lods
lcall
ss
xchg
in
xchg
inc
push
add
mov
push
cli
inc
push
add
mov
jp
push
add
mov
repz
push
xchg
hlt
or
cltd
cmp
adc
xor
cmpsl
xchg
out
dec
ds
push
sub
popf
sub
xchg
test
mov
insb
movaps
ror
cmp
inc
in
add
sub
lods
dec
jmp
subb
sub
clc
in
or
adc
lods
sbb
cmp
lret
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
loop
out
mov
setb
stc
lahf
push
add
out
leave
xchg
int
push
icebp
xor
rolb
fsubl
push
icebp
inc
out
mov
lret
sbb
jg
loope
sbb
pop
shlb
ds
xor
cmp
enter
add
ss
mov
int3
shll
or
imul
lret
push
lcall
xchg
and
push
icebp
push
jp
mov
mov
mov
jle
lods
cltd
ret
icebp
push
mov
mov
aas
jo
ficoml
cmp
daa
jp
inc
mov
outsb
dec
adc
ret
jae
scas
data16
stc
sbb
subl
xlat
adc
ffree
or
jns
push
mov
xchg
shll
out
cli
mov
pop
push
gs
aad
jns
ret
xor
cmp
outsb
rorb
aad
sub
jo
cmp
popa
xchg
xor
cmpsb
sub
mov
cmpsl
cmp
ds
out
or
pop
pop
push
mov
rorl
mov
cmp
push
add
push
xchg
mov
push
sbb
pop
pusha
movsb
sbb
in
decl
push
xchg
inc
mov
scas
xchg
loope
xor
inc
pop
jb
xor
insl
outsb
je
inc
push
inc
pop
xor
add
ja
loopne
notb
movsl
push
dec
test
sub
mov
out
jle
je
enter
cmp
cli
mov
cli
int3
out
les
mov
jp
xor
mov
mov
or
and
push
xor
mov
mov
push
or
rol
xchg
lret
js
mov
mov
lods
cmp
mov
cmp
je
in
cmp
pop
pop
dec
add
sbb
mov
in
xorps
sti
mov
jns
xlat
sub
mov
adc
dec
aaa
les
int3
ja
pop
fisubl
sbb
cwtl
mov
add
hlt
mov
jae
fisubrs
pop
jb
test
imulb
push
mov
repnz
inc
push
inc
mov
mov
inc
ljmp
out
push
add
jno
fcomip
shrb
jb
pop
enter
mov
shr
push
lods
fisubl
lods
inc
xlat
mov
push
dec
pop
push
das
mov
ficomps
add
mov
push
sub
or
scas
cli
movsl
sti
nop
push
adc
out
inc
dec
mov
dec
fwait
mov
call
enter
mov
movsb
mov
aam
lret
mov
mov
and
sahf
jne
mov
sahf
iret
test
test
jo
cmpsl
call
dec
aam
ljmp
push
sub
xor
and
sbb
leave
loopne
lcall
jne
or
ficomps
lea
into
idivl
es
stos
jmp
adc
pop
je
cmpl
es
inc
out
inc
pop
out
push
dec
jbe
jecxz
adc
inc
xor
push
fisubrs
arpl
and
mov
pop
inc
inc
pop
das
pop
push
out
repz
lret
mov
incb
xor
adc
jge
or
push
add
dec
pop
inc
mov
repz
aam
and
arpl
shll
and
cli
shrb
cmp
push
push
ret
push
and
loope
std
ss
mov
subb
imull
rcrb
mov
test
and
xchg
fnstcw
cmp
aad
insb
cld
jge
jb
out
push
insb
dec
lds
fcoml
fsubrs
xor
dec
andb
adc
xchg
scas
rorb
outsb
loop
and
or
push
lods
scas
ss
xor
and
mov
adc
xlat
inc
aas
mov
insb
add
mov
pop
mov
mov
jnp
aaa
ficomps
scas
or
cmpsl
and
rcll
repz
sub
mov
adc
repnz
icebp
shll
sub
cli
pop
cmp
sbb
cmpl
mov
lret
push
outsb
or
inc
jmp
jl
xchg
test
push
and
and
jmp
insl
inc
sbb
lock
dec
add
out
mov
mov
iret
iret
popa
inc
setbe
int
stc
out
ja
mov
inc
pop
out
repz
inc
cmp
add
int3
mov
adc
sbb
int3
and
jmp
cmc
out
cmp
mov
test
data16
and
cmp
mov
fcomip
lcall
jle
push
mov
jns
and
mov
int
scas
into
movsl
enter
fwait
mov
xchg
and
inc
cltd
je
cmp
or
popa
push
es
pushf
sahf
and
add
adc
adc
pop
jmp
mov
lahf
adc
jns
les
and
jns
jnp
loope
cwtl
cmp
pusha
movl
or
in
inc
movsb
xor
and
xchg
test
cli
xchg
insl
rorb
stos
jnp
mov
and
ja
adc
test
cltd
fisttpl
sbb
mov
cmpsb
xchg
stos
imul
iret
shll
jp
testb
lea
jmp
iret
and
jae
mov
and
lods
xchg
pop
popa
call
lcall
out
adcb
push
rcrl
mov
das
cmpsl
mov
stos
xor
fstps
cmp
mov
popa
imul
cwtl
jle
mov
cwtl
mov
stos
cmp
xchg
fcmovnb
orl
xor
dec
jnp
jg
and
push
test
and
shr
xor
arpl
cmp
lds
dec
and
and
divb
dec
or
test
cmp
mov
fwait
push
add
in
or
cmp
dec
sbb
jno
dec
dec
mov
movsb
xor
enter
sbb
or
data16
icebp
aam
and
lret
cmp
inc
mov
cmp
loop
push
jecxz
cwtl
mov
stos
mov
fildll
inc
je
mov
push
movsb
jge
es
mov
insl
cwtl
xchg
lods
cmp
inc
in
test
xchg
push
dec
mov
cmc
nop
addr16
xor
mov
xchg
xchg
repnz
stos
js
jb
or
xor
insl
pop
insl
addr16
lock
cwtl
aad
imull
add
jge
cmp
mov
xor
push
xor
add
mov
aad
andb
push
mov
or
push
fimull
jns
sub
xchg
cmpsl
adc
dec
mov
aas
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
das
sbb
clc
sbb
mov
nopl
adc
bound
lods
pop
jb
dec
push
pop
jbe
arpl
and
pop
ror
inc
add
dec
cltd
gs
insl
jne
xor
sbb
in
xchg
outsb
xchg
fs
cmp
xchg
pushf
outsl
mov
pop
mov
stos
xchg
jmp
shrl
xchg
rcl
inc
mov
push
xchg
leave
fcmovbe
leave
sarb
out
cli
mov
sub
dec
add
movsb
dec
int
imul
mov
and
test
mov
inc
push
add
mov
jle
sbb
push
lahf
imul
inc
dec
dec
hlt
mov
and
sbb
iret
mov
sbb
jae
iret
push
xorb
cmpsl
push
xor
xchg
fs
and
mov
pusha
icebp
mov
sti
jecxz
sbb
lds
and
adc
xchg
add
movl
dec
leave
dec
jb
dec
shlb
mov
insl
mov
mov
mov
xor
mov
ret
add
sbb
pop
call
imul
das
push
cmp
dec
loop
aaa
rolb
aam
mov
dec
fistl
sub
out
pop
stos
loopne
imul
int3
or
sahf
enter
mov
push
xchg
inc
fwait
andb
mov
push
xor
push
sahf
sahf
shrb
xor
test
les
adc
test
sub
dec
fdivrs
lret
push
and
mov
add
inc
adc
imull
dec
and
in
or
xchg
mov
pop
shll
pushl
pop
loopne
addr16
shll
addr16
insl
loope
stos
xor
test
dec
aam
orl
inc
sbb
fcomps
or
icebp
and
into
cld
jbe
outsl
popf
sbb
push
pop
aaa
scas
pop
subb
into
xrstor
sbb
sbb
cmp
inc
pop
inc
dec
movsb
cmc
std
adc
sbb
jle
sub
fwait
adc
and
jae
scas
cli
cmp
pop
jl
rcrl
mov
and
xchg
and
scas
sbb
aas
ja
mov
sub
out
fdivs
int
jp
and
pop
cmc
jmp
cmc
inc
fdiv
sbb
pop
call
in
lds
push
lahf
ljmp
or
lock
sub
add
aam
cli
lds
test
pop
push
mov
ljmp
cmp
mov
push
incb
int3
idiv
pop
inc
ficoml
repz
leave
out
push
mov
inc
int3
pop
stc
cmc
inc
adc
adc
mov
push
mov
into
adc
mov
addr16
xor
xchg
jns
mov
enter
sub
pop
imul
int
repz
mulb
pop
mov
dec
insb
sbb
das
cmp
pushf
pop
cli
mov
jae
sbb
mov
inc
xchg
xchg
mov
push
jl
jb
je
out
scas
sbb
jp
and
jnp
ret
pop
pop
xor
sarb
int
xchg
and
nop
xchg
push
cmp
push
mov
sub
inc
in
mov
fucomi
mov
loopne
xor
cmpsb
clc
add
sub
test
insl
aaa
lods
fisubl
xchg
xchg
adc
clc
call
jnp
into
lahf
cmp
adc
mov
fs
mov
adc
enter
dec
fnstenv
insl
sbbl
xchg
inc
mov
fldcw
cmp
enter
jno
rep
stos
ret
test
cmpsb
pop
clc
leave
cmp
iret
jbe
mov
ror
or
pop
lret
push
ss
xchg
mov
movsl
mov
aas
stos
loope
sub
fsubrl
adc
insb
push
jle
adc
dec
mov
bound
aas
lods
mov
cmpsb
sbb
insb
cmc
jmp
testb
addl
dec
sub
aam
push
js
push
push
and
xchg
outsb
popf
push
push
xchg
add
jge
push
push
into
adc
mov
movsl
and
into
lcall
and
xor
stc
xchg
push
fmull
testl
xlat
fadd
inc
pop
or
jmp
es
mov
cmp
dec
sub
jecxz
xchg
sti
push
out
insl
dec
sub
sbb
out
int3
xchg
ds
ret
mov
imul
stc
sarb
andb
nop
imulb
bnd
jnp
push
les
cs
cwtl
adc
hlt
in
aas
sub
push
cmp
push
pushf
mov
stos
pop
dec
lret
pop
sti
fcom
je
push
or
aad
sbb
mov
pushf
mull
into
push
aad
aas
sub
jg
mov
mov
mov
int3
or
cmpsl
jae
aas
add
sbb
data16
adc
xchg
shrb
and
das
sbb
xchg
cld
add
jb
push
pop
in
push
fmull
mov
negb
insl
mov
xchg
inc
jle
dec
jecxz
mov
add
fldt
adcl
adc
sahf
imulb
dec
rcl
xchg
jbe
mov
cwtl
test
sub
mov
pop
cmp
leave
fstpt
xchg
into
lea
loope
jl
sub
and
aas
int3
inc
sti
fcomi
inc
inc
fsubr
mov
fisubl
dec
cmp
pushf
pop
lds
sbb
les
and
pop
jo
mov
popa
sub
xor
aaa
mov
sub
fisubrl
jmp
inc
dec
jge
mov
xchg
popf
scas
insb
movsb
adc
lods
cmp
pop
call
push
pusha
andl
adc
dec
push
pushf
mov
mov
movsb
pop
sbb
push
cmc
jl
nop
xor
nop
mov
cmp
push
xchg
sbb
and
push
mov
rorl
mov
sbb
dec
outsb
mov
ficoms
adc
int
sbb
rcrl
mov
aad
adc
daa
mov
test
mulb
enter
sbb
push
and
xchg
mov
aas
pop
lahf
loopne
sbb
outsl
in
jno
testl
jecxz
mov
jns
add
dec
sbb
mov
push
add
sbbl
in
mov
cmp
fisttps
and
pop
sub
sub
outsb
out
bound
ljmp
inc
fnstenv
loope
enter
inc
cld
popa
cmpsb
icebp
sbb
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
leave
sub
dec
pop
pop
mov
fsubs
mulb
mov
jnp
adc
push
push
or
cwtl
mov
sub
jno
cmpsb
jp
add
push
jecxz
mov
out
pop
sub
mov
icebp
sbb
sbb
fimull
mov
into
ds
jbe
dec
mov
jl
add
pop
sar
lds
lahf
cli
mov
inc
in
lods
xchg
jg
jle
cs
rorl
inc
xlat
jo
in
xor
cmp
xor
stc
test
jno
loop
rcll
or
and
inc
xchg
out
inc
mov
jnp
shr
adc
jnp
sbb
test
push
fistps
dec
push
inc
mov
test
mov
aas
out
mov
dec
sbb
shlb
jl
pop
lret
mov
mov
in
movsb
inc
mov
push
xlat
cmp
mov
jp
lcall
testl
cmp
adc
lcall
shlb
sbb
xchg
pop
mov
cmp
mov
pop
bound
push
mov
mov
shll
subb
and
sbb
mov
or
aaa
mov
stc
dec
fstpt
movl
rcl
inc
adc
cmp
outsb
xor
jae
ds
jmp
or
dec
sti
shr
mov
sub
lods
rclb
in
out
or
adc
mov
mov
fisttpl
icebp
rcrl
sub
xchg
in
lds
divb
mov
add
pop
and
std
test
mov
cmpsl
dec
sbb
movsb
movsl
pop
jb
inc
mov
bound
je
cmpsb
lock
adc
inc
testb
add
ret
xor
push
xor
btr
add
jge
loopne
xchg
push
enter
lret
ds
pusha
popa
negb
sti
dec
std
mov
cwtl
mov
push
inc
push
xchg
out
icebp
mov
lock
mov
mov
add
xor
sub
add
mov
lret
icebp
sub
mov
clc
mov
jne
shrl
nop
mov
or
adc
test
push
pop
stos
int
inc
fistpl
fwait
insl
xchg
mov
or
repz
lods
repz
sbb
cmp
aam
pop
fneni(8087
arpl
popa
xchg
or
pop
inc
and
adc
mov
test
mov
jg
daa
rolb
cmp
xchg
rorb
sub
mov
rcr
stc
pextrw
inc
or
sub
std
adc
sahf
push
leave
xor
mov
pop
das
cli
fistl
jge
or
pop
pop
add
cmp
cmp
add
into
and
sbb
adc
sbb
fstl
popf
xchg
lret
sbb
out
push
imul
test
dec
sbb
add
jmp
addr16
lock
mov
mov
arpl
and
pop
push
push
pop
ds
test
test
xor
adc
dec
scas
aad
lahf
and
ret
clc
rclb
scas
gs
pop
pusha
daa
add
movb
pop
icebp
or
dec
add
mov
and
lret
stos
or
push
pop
cltd
movsl
jl
in
mov
adc
mov
aad
xchg
mov
les
outsb
cmp
mov
dec
mov
pop
andl
in
pop
hlt
mov
dec
fnstsw
sbb
adc
and
push
ret
popa
cmp
mov
mov
xor
and
in
sbb
xor
pusha
and
sbb
push
jmp
lock
in
dec
dec
fmul
arpl
ret
imul
insl
int3
dec
ret
and
popf
sub
pop
adc
daa
aaa
xchg
adc
and
notl
mov
mov
repz
mov
dec
aaa
loopne
or
mov
mov
mov
xchg
dec
repz
inc
shl
jne
icebp
mov
ja
add
xchg
mov
mov
dec
jge
hlt
in
das
cmc
sti
inc
call
mov
adc
jle
xor
ss
push
aam
stc
or
inc
and
mov
negl
adc
scas
xchg
mov
add
stos
dec
sub
nop
jnp
mov
fldenv
negb
xor
or
inc
shll
jne
inc
testb
mov
dec
cmpl
mov
les
mov
das
jecxz
pop
mov
jae
jns
aam
cmc
xchg
add
cmpsb
jl
lret
lcall
testl
dec
inc
pop
push
int
sahf
xlat
es
push
insb
out
push
push
pop
cmpsl
cmp
fldt
repnz
push
mov
xor
pushf
mov
iret
in
adc
cs
mov
ret
sbb
dec
rorb
xchg
or
clc
inc
scas
fcompl
and
cmp
push
sahf
mov
decl
sbb
ss
dec
sub
or
gs
push
insl
jmp
jl
lock
mull
or
or
adc
stc
xlat
xor
mov
stos
bnd
aam
push
dec
loop
jmp
or
or
mov
cmp
jns
mov
pushf
pop
jmp
into
xor
jg
fs
sbb
sub
jge
mov
dec
aam
loop
dec
xchg
icebp
pop
sub
test
repz
shrl
es
add
or
lods
pop
pop
mov
adc
pop
lock
jno
and
pop
ljmp
mov
pop
jns
xchg
not
insl
dec
and
push
pop
add
std
ds
cli
dec
mov
data16
in
push
xchg
xchg
scas
sub
xchg
mov
ss
and
call
enter
xor
in
imul
add
adc
testb
xchg
inc
inc
imul
movsl
pop
sub
sbb
sti
test
insl
stos
dec
shr
repnz
pop
lcall
ficoms
stc
xor
je
fbld
or
ret
addl
pop
mov
push
mov
jecxz
int3
js
imul
pushf
jns
mov
adc
mov
es
insl
pop
lods
jecxz
ficoml
sbb
pop
sub
or
mov
repnz
mov
out
loopne
out
lret
mov
test
lcall
add
push
add
cmp
cmpl
pop
or
push
cmp
mov
jae
adc
push
inc
arpl
mov
mov
sti
jno
loop
imul
sbb
icebp
sahf
in
in
scas
rcl
adc
jmp
into
add
or
imul
sbb
adc
and
cld
je
pop
loope
xorl
sub
pop
das
stos
in
test
addr16
jmp
push
jle
mov
call
std
loope
add
popf
xor
mov
fwait
xchg
pop
xorb
shll
mov
pushf
aas
stc
push
outsl
movb
dec
out
push
inc
aas
dec
jne
out
or
jmp
leave
push
push
mov
popf
outsb
pop
dec
jbe
shlb
movsl
adc
and
mov
cld
lret
sahf
inc
jmp
push
cmp
mov
mov
shlb
adc
lret
ret
or
push
mov
fidivs
sbb
mov
or
xlat
sub
insl
xchg
out
subb
dec
fsubs
sub
mov
dec
test
mov
nop
dec
fwait
sub
xor
add
or
mov
sbb
or
dec
cmp
add
cmpsb
scas
aam
dec
mov
hlt
or
sti
add
outsb
mov
add
cmp
pop
cltd
or
aam
sahf
sub
or
push
test
mov
sbb
sti
push
cld
fisttps
xchg
inc
scas
pop
les
xor
cmp
fistl
mov
in
movsl
sub
pop
js
mov
dec
xor
sarl
lret
xchg
popf
ja
xor
cwtl
incb
mov
mov
dec
in
adc
cwtl
fisubrl
xor
push
out
mov
mov
insb
test
mov
dec
fstl
jo
andb
sti
cmp
and
xchg
ficoms
test
mov
mov
sub
lret
pop
dec
inc
loop
aas
mov
mov
push
ja
sbbl
xor
jo
add
sub
inc
mov
jp
leave
lret
rcr
pop
and
out
pop
jecxz
jge
push
pop
cli
or
int
icebp
mov
adc
mov
xchg
repnz
sbb
incb
leave
sub
push
xor
push
pop
in
cmc
jmp
push
and
cmpsl
add
lcall
inc
sbb
aad
adc
fistpl
dec
and
notl
test
mov
mov
shr
sub
xchg
add
gs
xor
fstps
and
pop
adc
adc
jae
jb
das
push
add
xchg
je
mov
outsb
lds
inc
dec
shrl
jne
xor
das
or
cltd
lods
or
cltd
pop
xchg
insl
in
adc
divb
mov
xchg
mov
inc
add
mov
subl
push
out
loope
pop
lock
xchg
sbb
mov
and
pop
pop
mov
jae
testb
and
xchg
lcall
imul
cmp
mov
js
ljmp
repz
cmp
push
outsb
or
adc
xchg
nop
pop
and
fnsave
dec
jmp
cmpsb
outsb
push
cmpsl
sub
jp
inc
popf
call
jecxz
cmp
sbb
sub
push
sbb
cs
jnp
adc
dec
out
push
mov
push
mov
aas
js
jl
adc
and
pop
lock
rolb
popa
push
fadds
dec
and
push
push
or
inc
adc
mov
insb
xchg
pushf
shlb
fwait
shr
jge
push
mov
loopne
adc
ss
ret
push
xchg
adc
andb
push
xchg
loopne
aad
pop
xorb
push
lds
les
sbb
push
fbld
and
adc
dec
pop
pop
and
mov
jmp
bound
jecxz
clc
xchg
adc
mov
xchg
out
mov
inc
xlat
std
sbb
mov
adc
test
lret
inc
cs
in
rclb
jno
sbb
jle
jp
nop
sub
mov
repz
xor
loop
sub
cmp
mov
cli
cs
mull
and
sbb
std
xor
fildll
xchg
lret
adc
sub
mov
sub
jmp
mov
mov
mov
push
out
or
test
ljmp
mov
push
aas
push
mov
jb
lock
pop
dec
les
imull
or
jge
std
pop
xchg
mov
scas
cmp
and
push
mov
addl
pop
adcb
mov
scas
out
push
repnz
ret
aad
icebp
shrl
jae
push
and
or
adc
out
rorb
cmpb
in
inc
xchg
loope
mov
int
mov
jno
addr16
ja
mov
dec
mov
jp
sarb
daa
push
adcl
loop
add
pusha
fistl
shrb
repnz
clc
pop
gs
ljmp
jp
dec
jp
call
leave
adc
jecxz
in
jle
js
lret
push
push
stos
repnz
push
enter
aad
jbe
ja
jns
mov
sbb
mov
push
insb
testb
in
lods
cmp
test
mov
adc
jb
jbe
jbe
pop
pop
push
sbb
xchg
lods
sbb
sub
test
outsl
mul
pusha
test
mov
pop
xor
xchg
xor
sti
out
fidivrl
jge
jmp
pushf
daa
rorb
mov
or
mov
int3
mov
in
push
xor
ds
int3
stc
rol
sahf
mov
ret
enter
rorb
pop
jae
cmp
xor
xchg
leave
dec
out
sub
jbe
data16
movl
push
sbb
stos
add
xor
jbe
in
pcmpgtb
daa
lds
ja
jp
nop
call
push
ret
push
mov
jno
inc
imul
lock
sbb
sbb
or
mov
xchg
cltd
xchg
adc
inc
es
or
daa
lret
lods
adc
cmc
push
jo
and
adc
add
mov
and
pop
push
aam
cmp
in
ficompl
sti
divb
and
mov
push
jecxz
mov
add
sub
push
fdivrs
add
xor
outsl
mov
push
jmp
nop
pop
outsb
test
mov
fcomi
mov
sbb
mov
scas
fnstsw
mov
jno
add
mov
cld
popa
jbe
sbb
insl
dec
cmp
sbb
subb
pop
andb
jo
orb
nop
xor
stos
jno
xchg
loopne
mov
sti
push
ljmp
xlat
and
cmp
mov
adc
and
pushf
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
xchg
ret
adcb
xor
clc
sub
insb
xlat
xor
pop
mov
add
lret
mov
jg
test
mov
fstpl
xlat
or
adc
mov
cmc
sbb
inc
push
mov
andnps
sbbl
pop
mov
jnp
xor
cmp
ss
fidivrs
inc
test
pop
jns
enter
into
xchg
xorb
nop
jb
sub
sub
sti
lds
lds
iret
xchg
and
sbbb
mov
std
inc
hlt
fadd
fdiv
rol
sub
sbb
jecxz
push
xchg
xor
add
dec
in
mov
mov
xchg
stos
sub
fwait
xor
daa
cld
cwtl
shrl
mov
mov
or
push
call
and
pop
lea
out
popa
mov
in
or
ret
sub
dec
enter
das
dec
adc
xchg
rcll
imul
into
xor
fwait
ja
jp
repnz
mov
imul
xor
xor
movsb
xlat
stos
negl
sbb
in
dec
mov
push
pusha
dec
adcb
xchg
xor
cmp
adc
xchg
inc
frstor
inc
xchg
mov
inc
pop
adc
or
lcall
jecxz
cld
pop
add
or
xchg
rcl
fnstenv
stos
mov
xor
sub
ds
and
cmp
sub
jmp
cmp
movsl
aam
es
aas
jmp
inc
mov
adc
iret
je
mov
stc
je
mov
xor
pushf
pop
std
adcb
in
fisttpl
ficoml
lea
lret
les
push
roll
clc
bound
mov
add
sbb
pop
pusha
in
mov
cmp
mov
insl
mov
xor
decb
xchg
in
ja
push
jae
mov
inc
xor
cli
out
pop
loope
lcall
fisubrl
jle
xor
add
push
hlt
out
cmc
scas
sbb
repnz
pop
fimuls
xchg
in
adc
and
or
or
adc
fidivrl
sahf
xor
mov
push
push
insb
fbld
imul
sub
jnp
cmpsb
pop
fadd
mov
popl
lcall
or
inc
das
and
rclb
jbe
jecxz
push
cmp
sbb
push
mov
sbb
stos
add
rcr
sbb
jnp
fisubl
fwait
popf
xchg
or
or
push
jl
in
jecxz
test
test
dec
cltd
leave
mov
test
jecxz
ja
in
cmpsl
jp
inc
jno
ljmp
fnstsw
inc
sahf
js
and
add
sbb
jmp
fsubrp
scas
and
xor
mov
lahf
push
repnz
xorb
dec
insl
fnstsw
inc
xor
movsb
pusha
sbb
stos
addr16
jmp
sub
jg
add
int3
pop
push
adc
sbb
imul
cmp
dec
dec
clc
cwtl
int3
cmp
loop
jbe
stos
hlt
inc
mov
push
or
cld
daa
xorl
pop
sub
or
push
sbb
in
cltd
jo
cltd
mov
push
adc
jno
aas
jae
and
filds
fisubl
pop
sti
daa
dec
popa
test
adc
sub
dec
sahf
sub
mov
inc
push
sbb
pop
gs
pop
pop
mov
pusha
push
and
aam
and
ret
sbb
idiv
jmp
dec
or
je
imul
inc
xor
gs
hlt
pop
enter
fildll
cmc
sbb
fs
test
loop
cmp
pop
push
jmp
mov
fwait
mov
sbb
fimull
and
xor
test
sahf
mov
mov
jno
jg
insl
cmp
loope
jg
jge
ja
mov
push
ficoms
push
add
dec
mov
stos
negb
and
sub
pop
ds
inc
shrl
pop
mov
pop
shl
scas
lea
out
test
shlb
mov
mov
divb
lret
sti
movsb
mov
cmp
and
inc
add
mov
mov
ljmp
nop
push
push
adc
pop
aam
pop
iret
divb
filds
mov
and
dec
cld
lcall
test
int3
fildl
mov
ja
inc
and
ja
inc
out
add
push
pop
data16
mov
adc
stos
pop
push
in
xchg
jl
sti
inc
add
loop
sbb
test
push
ret
cmp
imul
jmpw
cmpsl
xchg
add
adc
inc
mov
cmp
les
cmc
jp
sbb
sbb
or
xchg
push
dec
test
jge
call
cmp
sub
jo
mov
fbstp
jne
pop
sbb
push
fadds
mov
ss
cmp
int
mov
js
jp
shlb
stc
jo
pop
mov
jno
outsb
jp
sub
xchg
dec
movsb
jge
mov
pop
push
mov
xor
daa
push
decl
push
test
mov
sbb
and
insb
hlt
inc
or
cmp
jnp
hlt
adc
xor
push
dec
iret
stc
ret
lods
mov
loop
addr16
and
jb
jp
repz
stos
xchg
inc
mov
rolb
cwtl
inc
ret
or
or
xor
jns
shl
adcl
shlb
mov
adc
xchg
adc
inc
or
scas
aas
scas
pusha
jmp
jbe
test
sbb
sbb
pop
ds
bound
iret
xchg
xchg
rorb
fbstp
ret
jp
ret
ss
es
cs
sbb
pop
loop
cli
push
fcomps
ja
mov
ja
daa
bswap
push
add
movsb
in
data16
in
je
jmp
dec
sub
mov
sbb
jns
daa
subb
ss
xchg
imul
stc
sahf
mov
jb
cmp
pop
lcall
jp,pn
fstp
or
and
iret
and
test
les
mov
push
pop
xchg
shlb
push
mov
or
push
mov
and
pusha
push
pop
add
add
mov
rcll
shll
call
xor
dec
dec
stos
cmp
loopw
cmp
xor
enter
xchg
xchg
pusha
cwtl
dec
aas
push
dec
mov
out
xor
mov
add
and
jbe
fwait
cltd
icebp
xchg
pusha
mov
test
cmp
andb
sysenter
loopne
movsl
cld
rol
rcrb
call
lcall
jle
xchg
pushf
mov
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
cmc
dec
cmp
adc
and
lods
outsb
lock
adc
and
jg
dec
xor
loope
int
inc
outsb
pusha
sbb
jo
mov
and
inc
adc
test
sbb
cmp
xchg
add
or
inc
xchg
hlt
fisttpll
popa
inc
cwtl
jne
xlat
pop
aam
jo
push
scas
aam
add
adc
pop
cmp
xchg
cmpsb
and
lea
aad
in
sub
mov
mov
mov
pushf
push
push
push
pop
mov
sub
add
pushw
fucomp
jg
je
and
popf
push
mov
pop
es
dec
cmp
xchg
out
pusha
xchg
sub
sbb
pop
cmp
mov
ficompl
mov
sbb
push
scas
jne
dec
xchg
cli
push
adc
or
mov
dec
sub
inc
pusha
outsl
xchg
add
push
sbb
add
out
out
fwait
xchg
or
rcl
pop
lods
xchg
jp
jb
push
adc
jae
push
rcll
stos
mov
sbb
hlt
scas
sub
xor
insl
push
sub
hlt
repz
out
mov
inc
jae
idiv
stc
test
fstl
sahf
shlb
sub
cs
mov
je
outsb
insb
or
sub
dec
or
jecxz
push
xor
in
cmp
xchg
scas
dec
mov
mov
push
out
leave
int3
sti
cld
push
and
xchg
scas
mov
and
push
es
xchg
push
rcrl
sbb
xchg
add
mov
cltd
scas
xchg
and
xchg
movsl
xchg
filds
js
dec
pop
loopnew
or
sbb
mov
mov
sti
jp
es
cmpsb
arpl
or
pop
ljmp
out
icebp
ret
pushf
hlt
xor
sub
daa
sub
dec
fildl
lea
ss
sub
mov
mov
or
inc
dec
inc
jecxz
lret
movsb
lret
or
dec
xlat
mov
jne
jg
enter
sub
addr16
mov
push
mov
insb
push
xor
pop
dec
jp
mov
jno
jmp
sbbb
lcall
jno
sbbb
loopne
dec
jns
xchg
sub
mov
rorb
xchg
xchg
push
in
push
pop
aaa
xlat
addr16
jb
fstpl
fdivr
mov
add
mov
and
test
lret
mov
jbe
inc
pop
es
jp
pop
mov
xchg
mov
sub
inc
sub
adc
movsl
jns
push
lock
in
adc
xchg
orb
sbb
or
sub
mov
lock
in
cmp
adc
insb
pop
pop
and
rclb
ficoms
sbb
pop
sarb
jp
mov
loop
insb
sbb
faddl
cltd
out
pop
inc
inc
movsl
lods
jmp
repz
push
pop
aaa
aas
sub
mov
jne
jmp
push
test
sti
out
jo
in
xchg
adc
xchg
lahf
mov
pusha
jle
sti
cwtl
rol
push
movl
inc
xor
adc
imull
movsb
loope
adc
lret
lds
adc
repnz
mov
or
xchg
fwait
cld
nop
call
sbb
mov
lcall
jnp
push
lods
mov
or
scas
push
mov
into
fcomip
lahf
mov
lcall
xchg
ja
mov
fimuls
lods
jo
push
ljmp
inc
or
or
dec
notl
pop
aam
push
sti
jl
jb
mov
fs
aam
adc
fcomps
jl
fucom
pop
movl
adc
xor
inc
shll
aam
sub
in
enter
xchg
aaa
mov
movsb
leave
jmp
cmpsb
leave
pusha
je
scas
cld
iret
cmp
sysexit
ret
or
xchg
orb
insl
lock
mov
jmp
imul
jmp
filds
sbb
pop
add
or
std
pop
dec
pop
ss
add
lret
cwtl
xchg
cs
outsl
call
lods
cwtl
add
jns
adc
sbb
mov
jb
pop
icebp
lods
ficomps
sub
inc
and
filds
mov
inc
inc
xchg
imul
ja
xlat
sbb
push
adc
roll
aad
xor
icebp
sub
or
cs
cltd
xor
ret
jg
add
and
mov
jmp
imul
inc
jno
sbb
pop
popa
lock
rolb
in
int
mov
adc
adc
pop
lods
jbe
push
or
pushf
test
cltd
mov
sub
inc
xchg
adc
dec
cmp
leave
mov
and
stc
or
push
daa
jg
test
or
insl
jae
jb
mov
adc
jns
sbbl
inc
lds
adc
out
dec
je
gs
cwtl
dec
push
rolb
cmpsl
xchg
in
and
cmp
loop
stos
fnstcw
dec
add
push
mov
loope
inc
xchg
or
mov
or
shrl
inc
lds
mov
add
sub
sahf
push
dec
scas
rorb
xorb
dec
ja
push
aas
jno
adc
mov
or
mov
jecxz
mov
push
testl
cmp
inc
mov
push
sub
stos
add
insb
inc
mov
in
mov
data16
mov
test
unpcklps
aad
xchg
dec
mov
inc
sub
lods
addb
in
dec
and
sbb
sbb
pop
mov
addb
jnp
jmp
add
sbb
fwait
sbbb
out
mov
data16
popf
pop
mov
lcall
mov
and
fcompl
and
sub
hlt
insb
jae
sbb
sbbb
pop
in
sar
hlt
push
pop
in
and
mov
jns
dec
push
dec
cli
or
stos
inc
fwait
lret
cmp
fidivs
das
adc
out
mov
lcall
hlt
jb
idivb
rorb
shll
mov
das
sub
pushf
or
pop
jb
cli
xor
pushf
sbb
cltd
aam
push
int
pop
xlat
mov
cmp
lcall
jae
mov
mov
scas
adc
xor
clc
aaa
mov
out
aad
lods
inc
movl
pushf
mov
fisttpl
fndisi(8087
mov
ja
clc
sub
aad
in
nop
cmpsl
jg
jmp
jno
pop
addb
pop
push
mov
jp
fildl
shll
pop
rorl
inc
call
cmp
out
mov
jmp
cmc
xchg
cmp
push
mov
adc
push
mov
adc
and
mov
pop
int
mov
test
out
mov
xor
dec
cmpsb
inc
sub
xor
bnd
lret
mov
daa
xchg
addr16
pop
das
int
fwait
sti
loopne
loope
xchg
or
push
imul
mov
jecxz
and
jg
or
fs
cs
add
push
orb
or
xchg
in
imul
sbb
rcr
icebp
in
shll
sbb
xor
nop
pushf
xor
mov
inc
bound
push
mov
xor
sti
out
xchg
out
negb
es
test
lcall
xchg
rorb
pop
dec
adc
nop
hlt
mov
inc
imul
js
in
jae
xor
xor
jb
jge
add
data16
fstps
test
fs
div
pushf
int3
jb
mov
imul
push
mov
inc
fwait
inc
rorb
adc
sbb
repz
cmp
adc
add
sarb
sub
and
dec
scas
push
jp
subb
push
jmp
xor
stc
push
ja
mov
or
cmp
and
movsl
subl
jno
lret
or
in
repnz
movsb
test
xor
dec
insl
xchg
imul
arpl
movsb
mov
dec
pop
pop
dec
xor
loopne
outsl
add
inc
mov
xchg
mov
insb
mov
std
aaa
std
xchg
pop
jae
adc
xchg
cmc
scas
insb
push
sahf
ret
lods
stc
xor
negl
outsl
dec
push
test
and
ss
mov
adc
pop
xchg
xchg
sub
ret
cld
aam
repz
dec
push
in
cmp
sub
and
xorb
cmpsb
and
sbb
in
add
pushl
xor
xchg
xchg
addl
mov
cmpb
in
cmp
pop
cltd
sbb
push
sbb
mov
in
rol
pop
negl
out
mov
ficompl
pop
mov
in
push
and
or
icebp
jne
xchg
add
inc
aas
fwait
add
movsb
pop
inc
bound
out
mov
mov
in
dec
arpl
cwtl
push
cwtl
sbb
sahf
mov
jo
movsl
xor
imul
push
ja
lods
jb
insb
pop
pop
cmpsl
lret
stos
or
xchg
stc
sub
gs
xlat
and
loopne
movsb
push
adc
pop
jle
push
pop
push
xchg
testb
ds
loop
scas
lea
js
push
testb
mov
std
daa
jp
fdivrl
dec
jecxz
ds
mov
repz
jnp
xchg
dec
aaa
ret
int
xor
jo
hlt
stos
adc
pop
jle
aas
xor
test
sbb
addl
shlb
pushf
mov
mov
jne
jne
fwait
xchg
out
add
and
and
stos
push
jno
mov
and
out
push
mov
arpl
push
popa
mov
stos
add
mov
out
insl
pop
mov
adc
cmc
jno
das
and
sub
sub
add
lea
scas
mov
mov
add
sub
ror
xor
mov
in
jl
popf
jecxz
push
ret
xor
mov
in
mulb
nop
out
mov
cld
jecxz
cmp
out
pushf
lods
xor
test
dec
dec
add
pop
mov
popf
cwtl
push
fwait
xchg
imul
das
ds
or
mov
pop
aam
stc
sarb
lret
outsl
mov
fsts
bound
inc
jecxz
lcall
or
popa
and
jle,pt
popa
xchg
sahf
cmp
push
sbb
and
leave
sahf
dec
and
les
out
rcrl
push
jecxz
sbb
and
fs
xchg
lock
pop
lds
inc
clc
fcomps
int3
add
mov
or
sbb
xorl
repnz
jo
push
out
and
push
dec
fists
and
out
fmull
push
sbb
pop
outsl
pop
jp
leave
scas
xor
mov
push
sub
lods
xchg
mov
mov
or
inc
scas
fsubrl
cltd
jmp
mov
mov
jno
adc
jbe
pop
inc
jno
and
ret
push
jmp
movsb
push
stos
jb
fstpl
xchg
dec
or
mov
shl
inc
cmpsl
adc
into
add
xchg
int
pushf
jl
les
lods
cwtl
pop
lods
and
jecxz
pop
pusha
adcb
mov
or
xchg
test
sub
pop
adc
ljmp
pop
mov
aad
incl
dec
mov
fisubrl
aam
jb
push
inc
sub
jno
jp
stos
test
dec
adc
xor
mov
movsb
jg
mov
add
jle
cmp
into
leave
cmpsb
add
xchg
test
jno
or
or
add
lods
xchg
add
cmp
cli
xlat
xchg
mov
test
pop
mov
out
cmpsl
ja
psubq
enter
repz
add
fadd
pop
xor
lcall
cmp
ret
out
dec
adc
adc
ret
cli
std
rolb
incl
cmp
pop
shr
ret
imul
pushf
in
shll
mov
cltd
xchg
loopne
ficompl
add
lcall
sub
xor
cmpsb
cmpsl
or
movsl
addb
lcall
mov
sbb
aaa
cmp
orb
daa
dec
adc
lods
xchg
jg
mov
shlb
fdivl
sbb
jo
mov
sub
addr16
mov
pop
sbb
outsl
jnp
out
insl
sbb
sub
lods
sub
xchg
outsl
add
pop
out
adc
iret
adc
movsb
movsb
xchg
ds
mov
xor
inc
mov
jle
or
cwtl
filds
lcall
les
mov
push
loope
and
sub
dec
push
adc
rolb
jb
cmp
mov
out
cmp
je
inc
lret
push
sbb
mov
fs
and
lea
outsb
mov
push
into
mov
lds
fldt
cmpsl
xchg
je
xor
lods
pop
lods
and
mov
lret
inc
aad
push
mov
mov
lds
xchg
and
out
cs
push
popa
movsb
mov
loopne
jbe
lret
in
pop
cmpsb
xlat
rcrb
frstor
dec
lds
sbb
dec
xlat
xchg
xor
and
out
xchg
mov
push
popf
and
cmp
sub
or
or
in
and
stc
clc
cmp
test
add
push
sub
cld
pop
test
or
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
jmp
mov
rdpmc
jl
dec
popa
das
movsb
mov
pushf
hlt
cwtl
dec
inc
lods
adc
rorb
out
or
imul
stc
cli
test
xchg
xor
idivl
and
and
xchg
pop
adc
adc
nop
and
inc
and
ss
loopne
xor
or
sub
hlt
mov
pop
xor
and
mov
sbb
pop
stos
mov
fmuls
daa
test
and
les
cmp
mov
mov
stos
shl
lcall
push
adcb
pop
jmp
jo
jl
and
or
cli
or
and
pusha
push
jmp
push
adc
xchg
ret
lods
les
pop
hlt
xchg
movsb
inc
repnz
xlat
inc
or
mov
adc
and
xor
jb
cmp
stos
out
mov
jp
or
inc
dec
es
into
stos
pop
inc
aas
imull
roll
insb
add
loope
lret
cmp
adc
ficoml
xchg
fldenv
pop
loope
mov
insb
xorb
stos
jp
les
ljmp
sbb
mov
sub
mov
adc
aad
add
movsl
dec
cmp
jmp
xchg
or
xor
aas
push
sub
aaa
dec
loopne
lahf
outsl
shlb
out
outsl
jnp
pop
or
push
or
scas
fsubl
push
or
and
inc
cli
pop
or
test
jecxz
inc
xchg
test
gs
lods
mov
xchg
pop
inc
jnp
xchg
and
cs
lods
push
je
push
fs
adc
mov
not
into
xchg
inc
pop
idivl
ja
dec
scas
add
rcll
stc
aaa
cld
ret
lcall
insl
xor
cmp
int
sahf
inc
jae
cmp
nop
idivl
mov
cmc
adc
inc
into
mov
sbb
push
pop
insb
lods
in
out
int3
in
clc
scas
fadds
jle
pop
dec
ljmp
xor
jle
fldenv
mov
jle
sti
les
scas
dec
lock
xor
push
inc
cmp
insl
jge
mov
cmpsb
jmp
or
bound
pop
scas
div
es
add
jmp
pop
es
sub
cli
je
fnstsw
push
stos
jecxz
loopne,pt
mov
mov
rclb
popf
pop
mov
adcl
sub
dec
inc
pop
addb
cmp
add
js
mov
dec
loope
xor
sub
loop
pop
aaa
add
xchg
push
ljmp
fwait
add
push
push
rorb
movsb
call
cmp
in
inc
mov
lcall
inc
push
xchg
adc
xor
and
jnp
cmp
inc
sbb
rorl
jecxz
push
test
cmp
pop
mov
adcb
repz
cs
loop
add
call
int
mov
xchg
sub
ret
ss
xor
fmuls
jecxz
xchg
pop
jle
sbb
push
sub
push
test
adc
mov
scas
sbb
es
xchg
int3
cmp
pop
or
cmpsl
dec
nop
push
insl
sbb
jbe
arpl
mov
dec
mov
ret
sbb
into
mov
push
sbb
mov
movsb
stos
xchg
addr16
jo
inc
mov
pop
jbe
push
fimuls
aad
sti
cmpl
mov
insl
jb
add
pslld
mov
stos
popf
jae
fistpll
sub
mov
jecxz
sti
in
pop
out
aas
cmp
xor
dec
pop
cmp
xchg
sbb
and
inc
jg
jecxz
stos
out
add
cmp
out
lcall
loopne
jb
fs
bound
fisubs
push
xchg
js
push
sbb
cmp
xor
push
lret
mov
stos
mov
xchg
push
cmp
jge
jae
mov
xor
popf
mov
pop
sbb
inc
fmul
loope
pop
ret
mov
cli
enter
lret
inc
or
pop
xor
lcall
bound
sbb
sbb
addr16
dec
xlat
scas
inc
faddl
mov
sub
shrb
dec
jle
movsb
pop
scas
mov
xor
mov
imul
dec
push
push
adc
jle
adc
loope
fstcw
add
lock
int
mov
adc
cwtl
inc
inc
fisubs
jo
adc
xchg
cmp
pop
push
sti
fsubl
adc
push
xchg
add
jae
pop
xchg
ljmp
lock
xchg
stc
or
aad
dec
fwait
aam
inc
push
jne
pop
je
ficomps
add
mov
aas
mov
icebp
lea
sbb
inc
inc
test
enter
scas
cmp
in
inc
repnz
sub
lret
incl
add
mov
emms
daa
loop
xchg
imul
cmp
insl
pop
push
xchg
add
test
insb
cld
out
jnp
adc
popf
std
push
out
popf
mov
cs
cli
sub
sbb
push
test
stc
sbb
ljmp
push
std
aad
sub
mov
repnz
push
inc
out
and
mov
fistl
movsl
mov
jae
sub
cmp
aam
push
fcmovnu
jp
sbb
pop
ret
mov
jle
mov
in
inc
pop
sahf
push
push
xchg
pushf
loop
fwait
in
mov
rcrl
sbb
dec
lods
dec
sub
add
jp
mov
mov
inc
dec
or
pop
iret
mov
int
jbe
pop
cmpsb
ss
inc
cmpsl
dec
cmp
shll
mov
mov
sub
lods
xor
xor
jecxz
sub
insl
mov
mov
enter
mov
pop
pop
iret
xchg
enter
andb
fadd
jp
xorl
pop
inc
loop
sub
data16
push
aam
movsb
pop
and
sub
out
and
aaa
clc
inc
adc
test
in
jo
ja
stos
aas
xor
and
in
sbbb
xor
push
les
pop
push
fneni(8087
test
push
daa
inc
mov
pop
sbb
jbe
aas
pusha
xor
iret
pushl
jae
loopne
sbb
sbb
xchg
iret
into
dec
movsl
push
fs
xor
jge
repnz
cmc
inc
dec
rcrb
fistpl
sbb
mov
clc
xchg
arpl
cmp
clc
sbb
bound
xor
and
jmp
jne
add
subl
xchg
jle
push
mov
and
ror
pop
incb
fwait
nop
adc
sti
les
cmp
jmp
loopne
addr16
pop
fidivl
rcll
pop
or
ret
rorb
cs
rclb
repnz
loope
jle
mov
insb
add
das
mov
ljmp
xor
out
mov
push
std
rorb
das
sbb
idivb
mov
push
scas
mov
inc
pop
pop
inc
mov
lock
push
in
sub
test
rorb
out
push
jae
rcr
jmp
daa
in
repnz
inc
dec
stos
cltd
sbb
dec
iret
mov
sarb
push
aad
popw
xor
shlb
and
dec
es
ss
loope
out
div
mov
dec
xor
xorl
jno
push
mov
push
loope
addl
out
into
inc
push
shrb
notl
mov
cmp
aas
insb
hlt
push
add
fiaddl
pop
dec
push
or
test
cmp
cltd
bound
push
adc
mov
inc
out
pop
mov
pop
stc
push
dec
aam
xor
je
mov
dec
icebp
sub
lcall
push
dec
dec
loop
aas
hlt
mov
inc
or
ret
xor
ja
fwait
shlb
lret
push
pop
sbb
sub
sbb
pop
movsb
mov
sub
cmp
inc
mov
test
mov
cmp
push
mov
je
xchg
add
das
movsl
out
es
out
mov
push
std
ret
rorl
in
test
mov
stc
ss
sub
add
ljmp
jne
mov
insl
bound
dec
adc
mov
mov
sarb
push
lret
push
xor
sbb
cmpsl
jg
cmc
xorl
pop
pop
mov
cmp
cmp
scas
inc
jge
outsl
sbb
lock
loope
push
xor
les
call
hlt
mov
sub
mov
or
xor
nop
lret
insl
outsb
shrl
jmp
add
sbb
fstpl
mov
mov
arpl
mov
xchg
push
mov
pop
add
sbb
cmp
clc
dec
sbb
repz
adc
nop
cltd
pop
int
ficoml
lcall
cli
xor
mov
mov
xor
stos
fistpll
subb
fisubs
ret
pop
add
pusha
test
sub
es
pop
test
mov
adc
xchg
das
out
cmp
fwait
int
andl
orb
ds
mov
add
fwait
packuswb
mov
mov
push
add
sub
add
sub
push
arpl
ret
lock
or
seto
jmp
clc
les
dec
cmp
imul
jo
nop
sub
lret
js
into
and
inc
jnp
fisubl
jo
mov
push
mov
inc
and
dec
icebp
jmp
aam
arpl
shl
lods
call
testb
pop
outsl
sub
add
fildl
sub
jp
pop
xchg
movsl
mov
xchg
mov
incb
fnstcw
leave
jg
rorb
std
fcoml
sti
mov
xchg
call
cmp
inc
inc
mov
fucom
outsl
outsb
movsl
rorb
movsl
cmc
inc
scas
sub
mov
mov
sub
lret
fsub
xchg
scas
jge
xor
jmp
movsl
and
scas
repz
fxam
dec
into
subb
lret
or
js
jg
dec
and
mov
imul
arpl
cmp
pop
inc
cmp
test
mov
inc
jbe
add
dec
mov
xchg
sub
add
sub
xor
xchg
aad
out
xorb
inc
bswap
pop
scas
xchg
lahf
ds
jnp
mov
mov
jecxz
adc
in
les
test
int
xchg
sbb
imul
jae
hlt
cmp
mov
ficoml
shr
dec
aad
xchg
in
std
pusha
sub
repnz
ds
test
pop
dec
jmp
or
sbb
jns
or
ds
in
pop
adc
mov
or
sub
push
popf
das
sub
cwtl
sti
out
ljmp
pop
sbb
and
repz
mov
lret
ja
cmp
lahf
and
inc
mov
testb
iret
mov
jmp
test
inc
or
sub
xorb
or
push
test
shl
adcb
popf
push
adc
pop
dec
add
rcl
sbb
inc
stc
das
loope
jg
mov
andb
mov
mov
jb
popf
sub
out
sub
xchg
jbe
pop
xor
loope
fstp
push
push
arpl
pop
xor
sbb
adc
test
cmp
push
xchg
repnz
or
sub
leave
lods
dec
jnp
leave
shrb
jecxz
iret
add
popf
sti
fcompp
mov
mov
cs
inc
cmp
sbb
and
push
outsb
fldl
lds
movsb
xchg
ret
mov
sub
mov
sub
lock
incl
mov
jnp
mov
xlat
mov
lock
inc
movsb
sub
cmp
fwait
and
in
ret
leave
sub
jecxz
and
pop
cmpsb
mov
jns
mov
jae
jmp
jge
mov
pop
xor
lods
mov
imul
insl
mov
inc
test
pop
push
adc
push
mov
fmull
xchg
xlat
negl
sti
test
insl
push
out
jl
jle
in
xchg
and
pop
testb
mov
push
push
lods
mov
dec
fistpll
stos
add
add
dec
add
out
aad
or
nop
push
cltd
adc
lret
xlat
ja
inc
test
jge
adc
arpl
push
pushf
and
js
jnp
cmp
clc
mov
sbb
cmc
lahf
cmp
dec
stos
adc
loope
jmp
mov
iret
push
cmc
cli
sbb
sahf
xlat
and
insl
and
push
mov
mov
out
mov
jns
or
enter
pop
enter
pushf
adc
hlt
adc
pop
and
cltd
add
cmpsb
pusha
fdivr
xchg
cmp
stos
push
incl
jl
int3
test
sbb
pop
sbb
mov
sub
imul
mov
mov
outsl
mov
cli
popf
sbb
jae
pop
shlb
mov
dec
cwtl
inc
call
adc
test
loope
mov
inc
fcmovnbe
outsb
xchg
mov
or
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
cmp
mov
jbe
loop
outsl
out
mov
loopne
fstp
divl
and
push
loop
arpl
mul
fs
aad
jo
sub
fadds
jnp
sahf
cmp
inc
xchg
or
or
xchg
adc
jne
cwtl
mov
adcl
push
das
lahf
jns
sbb
scas
scas
mov
in
cli
xor
fistpll
pop
mov
adc
mov
lret
add
pop
sub
pop
mov
sub
repnz
stos
add
lock
call
out
lds
loop
sub
je
ja
mov
jno
mov
fbld
dec
je
mov
and
ljmp
and
push
sub
dec
mov
nop
adc
cmc
dec
xor
pop
rcrb
push
lea
int3
pop
inc
cmpsl
lret
xchg
pop
leave
ds
popa
scas
ljmp
call
ret
push
ja
xchg
sub
push
pop
ljmp
fsts
mov
hlt
scas
cs
hlt
ret
xchg
fnsave
cli
das
jae,pn
xchg
xchg
cmp
jae
icebp
pop
jb
aas
out
aad
int
jecxz
inc
movsl
pushf
inc
mov
popa
sub
or
gs
ja
ret
dec
and
cmp
out
out
insl
or
subb
jecxz
imul
iret
push
js
pop
add
jmp
xchg
adc
jmp
jge
pop
aam
ret
add
lock
shlb
and
aas
leave
nop
inc
or
pop
mov
pop
sub
ficomps
leave
jmp
mov
jmp
mov
or
ljmp
lret
inc
jecxz
int
in
and
pop
sub
pushf
mov
fwait
pop
and
imul
inc
xlat
inc
jmp
dec
mov
push
sar
mov
jne
test
ljmp
mov
mov
ss
icebp
mov
sahf
sbb
rcr
xchg
add
mov
mul
shlb
inc
mov
sub
cli
jecxz
sti
cmp
cltd
fnstcw
sub
fidivrs
inc
xchg
jnp
xor
jecxz
mov
dec
pop
push
movntq
and
lock
jecxz
add
leave
push
inc
andl
shrb
xchg
adcb
js
stos
mov
test
fldcw
ret
lds
data16
adc
pop
adc
xchg
and
jp
movsb
insl
mov
xor
stos
test
jno
and
and
std
add
xor
xlat
sub
sub
cmp
cli
lret
in
idivb
jo
mov
sbbl
stos
lcall
out
add
mov
std
hlt
add
pop
jge
shll
sbb
pop
pop
iret
mov
int
outsb
push
in
inc
xor
outsl
ja
punpcklwd
mov
out
int3
loopne
cmp
jg
mov
dec
xlat
pop
cwtl
sub
lea
jo
and
jl
aam
mov
shll
xor
cmp
fnclex
fldl
xchg
add
dec
mov
xor
inc
in
pusha
adc
lcall
push
lea
jmp
mov
test
jge
dec
jl
icebp
push
pop
add
pop
ficomps
xchg
insb
xchg
mov
mov
push
gs
push
sub
push
cld
adc
sbb
popa
cmpsb
out
jne
xchg
idivl
cmp
lea
roll
ds
cmp
or
lock
jns
sbb
dec
enter
fistps
in
sbb
mov
arpl
inc
and
cmp
enter
cld
outsl
movsl
push
push
lods
jecxz
push
sbb
ficompl
jae
rol
cmpsl
push
sbb
push
mov
pop
pop
mov
push
cmp
repz
sub
sbb
call
pop
fisubl
add
loopne
ljmp
lock
inc
xlat
sub
dec
mov
mov
in
aad
test
movsb
cmp
push
inc
push
push
jl
mov
lock
mov
pop
out
in
push
xchg
pushf
stos
jno
mov
fsub
fidivl
sub
mov
aas
aam
dec
sub
mov
ror
dec
loop
mov
xor
mov
add
and
out
and
addl
xchg
lods
cmpsb
add
and
ret
aad
sbb
cmp
and
mov
mov
adc
xlat
stc
int3
scas
sahf
pop
out
jbe
jnp
and
loop
cwtl
popa
xor
cmp
fxch
movsb
or
push
push
leave
lret
cwtl
and
lods
mov
xchg
jo
loop
arpl
jnp
jmp
mov
faddl
lods
or
mov
pop
iret
and
mov
lahf
dec
xchg
addr16
hlt
mov
test
and
ljmp
shl
ss
rolb
push
add
cld
lock
cld
add
nop
cmp
pop
hlt
addb
cld
pop
push
ret
scas
add
inc
pushf
out
pop
push
mov
ja
xchg
pop
mov
dec
sti
dec
push
sbb
mov
test
cmovne
sbb
inc
jb
dec
xlat
or
je
enter
cwtl
xor
mov
and
movsl
cmc
or
cwtl
cmpsl
jmp
in
and
add
cmc
sbb
outsl
inc
adc
inc
outsl
hlt
imul
inc
push
ficoml
mov
lcall
jne
sarb
test
sub
push
xor
mov
insl
inc
push
int3
ret
push
xor
xchg
xchg
leave
rcrl
sbb
in
sahf
jg
outsb
pop
mov
and
movsb
fistl
outsl
js
xchg
push
pop
popf
mov
stc
jnp
pop
fcoml
cmc
sbb
fistps
xor
add
push
sub
fisubrs
fstpl
jbe
mov
jl
clc
add
shrl
lret
mov
inc
test
les
cmp
and
fs
shll
movsl
adc
mov
mov
push
jg
sub
and
xor
push
insl
fs
aaa
mov
fwait
lret
fwait
sub
daa
jno
or
addr16
mov
lock
lret
dec
jb
outsb
jns
pop
popf
xchg
add
ss
pop
push
leave
int
mov
add
cmp
xor
push
push
out
jno
fidivs
aad
push
ja
out
pop
adc
pop
test
adc
cli
inc
shlb
mov
lret
mov
pop
push
sti
inc
shrb
pushf
adc
jnp
lahf
inc
pop
ds
bound
xlat
xlat
popa
shlb
jo
aad
cli
inc
fs
mov
push
pushf
xchg
shlb
les
push
or
scas
xchg
test
hlt
push
push
mov
mov
sbb
xchg
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
and
and
or
jmp
jb
scas
xorl
pop
push
jno
cltd
cmp
lds
movsb
add
fisubrl
or
clc
pushf
xchg
adc
addr16
mov
sub
xchg
pop
add
out
jge
xchg
lock
mov
cld
jg
jmp
insb
lods
push
mov
jecxz
xor
jno
xor
cmp
daa
sub
jnp
xchg
in
pop
popf
mov
fwait
mov
out
mov
mov
sub
out
shl
sub
push
mov
out
jmp
cmp
icebp
test
lods
fwait
sti
cmc
ja
add
gs
sbb
mov
sub
add
add
sbb
sub
dec
insb
add
int3
xchg
test
inc
mov
push
inc
push
out
cmp
mov
jecxz
push
ret
addr16
lds
xchg
out
or
adc
push
xchg
jge
gs
fcoms
push
cmpsl
push
loop
pop
mov
pop
cwtl
xor
push
push
or
das
push
or
sub
mov
cmpsl
gs
adc
xchg
fwait
jg
lcall
xor
push
aas
mov
push
sub
jg
ss
mov
insb
pop
les
mov
pusha
dec
sub
mov
push
pop
fmull
jbe,pt
mov
scas
mov
es
fstl
or
mov
or
syscall
movsl
adc
stc
loope
dec
pop
push
test
sbb
jmp
mov
ret
lds
jl
bound
inc
sbb
cmp
inc
shrb
push
repnz
int
jno
push
repz
pop
mov
aas
jmp
pop
cmp
xchg
mov
jne
bound
int
cmp
imul
popf
sarl
jecxz
jmp
or
and
pop
pop
fstps
clc
pusha
sti
adc
cmp
jbe
mov
fstps
xor
out
pop
in
hlt
inc
ds
cld
mov
and
outsl
sbb
jo
or
cwtl
mov
push
test
mov
fsts
mov
mov
and
xor
aam
push
out
popf
mov
sbb
lock
shl
push
jno
dec
mov
cmp
xor
arpl
iret
ss
adc
push
hlt
test
fwait
mov
mov
xchg
push
mov
test
ret
pop
repnz
mov
push
and
pop
in
test
pop
call
xchg
pop
jl
xor
ret
loop
shr
jns
fsqrt
pop
pop
arpl
cmp
jg
sub
mov
inc
enter
es
jl
das
inc
cmp
xor
dec
adc
add
les
jp
jp
jg
dec
add
shll
xchg
jbe
fldcw
jecxz
mov
idivb
loope
add
arpl
xchg
inc
cli
test
mov
mov
xchg
imul
out
or
xor
jae
push
icebp
push
mov
rorb
push
cmp
xchg
fdivl
jns
movsb
mov
arpl
notb
int
fcoms
sbb
int3
sbb
aas
pusha
inc
jp
ja
pusha
jns
mov
shrb
and
scas
push
dec
jmp
imul
cwtl
outsl
xchg
push
xchg
cmpsl
cld
mov
test
cmp
push
add
iret
jp
pop
and
int3
mov
movsl
xchg
aad
leave
es
lds
imul
int3
add
ds
das
push
push
movsb
fwait
xchg
sbbb
xchg
test
mov
jg
sbb
sahf
lret
icebp
loope
out
lcall
sub
mov
mov
cmc
jb
jne
or
cltd
fmull
dec
or
dec
jo
pushf
sub
aam
icebp
mov
out
daa
and
neg
xchg
lea
fisubrl
jle
and
sbb
out
mov
stos
sbb
lods
inc
pop
mov
outsb
imul
lock
mov
jae
or
gs
xchg
sub
add
sub
decb
sub
fisttps
icebp
mov
inc
or
cmp
movsb
push
loope
or
pushf
jg
int3
or
sub
xchg
out
outsl
stos
and
test
or
sbb
outsl
push
or
adc
pop
dec
mov
adc
in
lahf
test
pop
movl
in
jo
mov
ja
inc
test
cmp
shrb
push
xchg
cmpl
or
stos
rol
add
fdivp
lea
out
fsubl
pop
pop
insb
pushf
out
push
mov
sub
cmp
stos
lods
fcom
push
push
cmpsb
cmp
or
add
sub
insl
ljmp
ret
xor
jecxz
and
push
jb
push
dec
jg
cmp
sti
xor
push
sti
jl
push
sbb
pop
add
mov
push
add
jbe
lea
daa
jmp
std
mov
pop
cmp
xlat
mov
mov
xchg
xorl
loop
scas
clc
mov
enter
imul
bound
inc
pop
and
cmp
sahf
sbb
fldl
fdivr
dec
jo
mov
mov
and
xor
xchg
and
push
or
cmp
outsl
ds
fbld
popa
rcll
stos
and
in
scas
pop
mov
mov
test
nop
or
popa
jecxz
loopne
mov
or
mov
pushf
lods
mulb
dec
test
clc
in
fcmovnb
outsl
pop
dec
insb
xor
sub
in
dec
push
imul
sbb
popa
xchg
cld
insl
push
push
mov
in
int3
divb
fsubp
mov
aas
and
rcrb
out
jg
idiv
and
mov
adc
push
push
mov
movsb
testb
push
imul
xor
ljmpw
lods
xor
cwtl
bound
add
inc
adc
leave
add
inc
xchg
ret
pop
jmp
pcmpgtb
andl
loopne
cs
shll
push
xor
aas
sar
mov
cli
sbb
int
jne
icebp
scas
das
pop
push
xorl
mov
ret
arpl
xchg
inc
pop
pop
je
test
jo
movsb
add
mov
xor
hlt
mov
andb
fcoml
inc
rcl
dec
mov
dec
or
push
xchg
xchg
push
out
stos
xchg
sysexit
mov
mov
adc
push
jle
adc
sti
fstpl
rorb
adc
adc
out
leave
lods
or
push
push
jmp
sbb
push
adc
xchg
int3
xchg
cmp
mov
gs
and
mov
lcall
fsubrl
xor
cmp
fdivrl
mov
cmpsl
xchg
xor
xchg
es
imul
aad
aas
sbb
mov
mov
xchg
inc
and
loop
ss
fdivrl
mov
lret
je
lock
xor
outsb
sahf
loopne
insl
xor
jo
stc
dec
fsubs
xor
leave
fsubs
cmp
lcall
or
add
cmc
pusha
int3
xor
cld
movsl
lock
xor
addl
push
mov
xor
push
das
in
mov
mov
iret
cmp
mov
icebp
jl
pop
or
mov
xchg
popf
sub
xor
test
ret
nop
roll
das
cwtl
pop
add
mov
ror
test
jl
sahf
cmpsb
jl
add
jmp
xlat
clc
lret
insb
rcrl
mov
repnz
cwtl
pop
adc
ret
lcall
adc
sbb
xor
push
jnp
and
or
popf
shlb
mov
es
je
jg
lods
mov
dec
mov
mov
jge
cmp
xor
jle
mov
in
push
push
or
andb
inc
aaa
sub
test
cli
dec
js
push
jne
es
scas
insl
bound
inc
int
sbb
mov
rorb
or
xor
push
xor
dec
clc
js
pop
push
xlat
xor
nop
loope
test
sbb
scas
pop
mov
lods
inc
pop
cmp
add
push
dec
lds
ljmp
int3
lret
aam
xchg
gs
lods
insb
cmp
aam
sbb
addl
lret
popa
stc
jge
mov
sbbb
sub
xchg
push
sub
mov
loop
sub
addb
cmp
xchg
jp
ds
push
mov
cmp
inc
sbb
push
xchg
mov
mov
push
sub
in
cmpsl
repnz
add
sub
xor
push
fwait
das
rorl
imul
xchg
into
or
stc
mov
cmpsl
mov
rolb
cmp
hlt
mov
cmp
adc
inc
dec
inc
arpl
jne
xchg
stc
leave
es
lea
mov
add
mov
sub
fcoms
jg
or
xchg
mov
xchg
inc
rorb
xchg
in
jns
sbb
lods
push
lock
pop
push
dec
repz
das
inc
dec
jnp
dec
cld
test
adc
js
rcll
sub
cs
sbb
sbb
add
fistpl
aas
jnp
pushw
insl
xchg
rorl
adc
divb
and
xor
dec
pop
push
mov
in
cwtl
inc
xchg
inc
rcl
mov
adcb
jno
arpl
and
cmp
aad
push
mov
call
test
xchg
dec
test
push
in
push
leave
les
call
dec
push
shrd
cmc
adc
adc
jg
subl
or
in
pop
mov
push
pop
leave
cmpsb
ret
mov
notl
orl
mov
lret
pusha
arpl
lods
sub
mov
aaa
nop
push
sbb
mov
addr16
scas
clc
lods
mov
mov
mov
xchg
scas
and
mov
mov
jl
mov
jl
std
jmp
pushf
push
subb
mov
mov
jp
insb
neg
and
mov
cli
mov
or
push
mov
cli
push
xchg
sti
jnp
inc
mov
lret
cmc
push
xor
cmp
mov
pop
sbb
adc
cmp
jp
xchg
lahf
and
pop
fcom
sub
mov
inc
movlhps
pop
icebp
pop
sbb
movsb
mov
mov
mov
mov
lcall
mov
sub
gs
or
call
add
out
mov
jl
jnp
mov
in
or
pop
pop
lret
movsb
arpl
lret
mov
out
push
lods
insl
daa
push
push
push
iret
jae
hlt
mov
mov
aam
lret
xchg
mov
leave
mov
pop
popa
shll
xor
das
xor
sti
jge
mov
adc
loop
mov
call
movsb
leave
push
ret
scas
out
sahf
mov
mov
int3
test
out
pop
pop
jl
shll
cwtl
mov
stc
and
pop
aam
push
mov
push
outsb
test
jecxz
mov
lahf
stc
repnz
cwtl
arpl
xchg
stos
inc
and
dec
test
fisubrs
dec
pop
inc
add
inc
insb
fstp
les
inc
fidivrl
mov
adc
mov
pop
xor
xchg
add
mov
jl
mov
push
cmpsb
mov
divl
insb
mov
xchg
orl
pop
fdivrl
mov
addl
xlat
insl
add
addr16
addb
sub
xor
mov
hlt
ja
adc
rclb
clc
clc
xlat
int3
and
repnz
inc
fistps
push
jno
mov
sbb
jae
call
sub
arpl
cmp
and
outsl
popf
ret
push
rcl
pop
and
popf
sbb
mov
or
jmp
enter
inc
mov
pop
push
or
scas
test
int
sub
xchg
pop
push
mov
loope
dec
and
xor
lea
movsl
fwait
test
bound
push
xchg
leave
inc
xor
popf
pop
aad
xor
add
xor
add
jge
sub
sub
mov
js
push
neg
call
outsl
push
push
lods
test
inc
in
enter
cmp
and
adc
pop
scas
add
data16
repnz
in
sbb
mov
rclb
dec
pop
ds
inc
sti
dec
or
push
xchg
sub
xchg
outsl
pushf
fs
jp
sbb
lret
stos
push
fldl
iret
xor
cmp
sahf
cmpsb
pop
add
cli
data16
adc
nop
lea
jl
dec
repnz
ret
adc
test
push
or
in
mov
cmp
icebp
push
ljmp
and
shlb
sbb
js
les
pop
cwtl
fmul
pusha
sub
testb
ljmp
pop
dec
mov
jno
fistl
inc
imul
popf
adc
adc
int3
loope
cmp
or
lods
mov
xor
pop
rol
jecxz
repz
add
lock
xor
ljmp
in
or
fpatan
inc
jg
fdivrs
pusha
jl
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
jle
cmp
addl
add
cmp
mov
push
leave
mov
lret
dec
mov
push
ljmp
adc
push
andb
xchg
lea
sub
jge
pop
cmp
jecxz
shrb
mov
sbb
mov
mov
cmc
sub
aaa
mov
and
clc
bound
cs
sub
lea
fmuls
aad
push
je
cs
outsb
pop
xor
test
test
outsb
mov
and
jecxz
sub
idiv
mov
mov
inc
outsb
aas
mov
aad
jne
jb
stos
out
cmp
and
cmp
xchg
dec
es
xchg
popf
out
or
mov
inc
pop
mov
pop
fidivrs
ret
or
xor
inc
scas
jns
mov
add
inc
addr16
sub
aaa
aaa
aad
jmp
jbe
lock
xor
sbb
imul
lret
leave
jae
and
xor
arpl
jp
cmp
add
loopne
sbb
xor
add
mov
repz
fsts
push
adc
mov
data16
xchg
lods
add
fadds
xchg
jmp
lcall
stos
lea
jle
outsb
fxch
sarl
xor
jne
jp
and
jge
xchg
xor
cmc
mov
inc
inc
mov
sarb
adc
ficompl
cmp
push
jle
sbb
rorb
orb
loopne
sbb
cmp
dec
rclb
or
or
int3
enter
mov
stos
fimull
inc
add
outsb
aaa
ss
adc
negb
insl
cmp
jne
and
mov
ljmp
xor
int
sub
mov
dec
pop
int3
dec
repz
pop
push
into
xor
pop
stos
cmp
loope
push
jne
mov
imul
pusha
push
aaa
cmpsl
cmp
cmpb
ds
enter
fdivs
mov
jno
cmp
fstl
sbb
dec
adc
ljmp
std
fwait
outsl
xchg
jb
mov
ret
call
sub
popf
cmp
or
mov
int3
or
sbb
adc
mov
leave
aaa
cmp
push
sub
pop
loope
jnp
data16
add
rorl
xchg
insb
outsl
rolb
inc
ds
ljmp
mov
pop
jo
xor
pop
mov
scas
xor
adc
test
lcall
jno
and
fdivp
sar
inc
push
push
divb
adc
repz
sub
pop
cmp
mov
sbb
sti
sub
adc
movsl
int3
sbbb
mov
jmp
fisttpll
xor
loopne
push
dec
push
mov
xchg
mov
dec
lret
jns
das
rol
sbb
dec
jbe
test
sti
add
jmp
sbb
aaa
shrb
or
mov
jo
dec
subl
ret
dec
inc
jno
in
push
adc
push
daa
xor
or
ret
enter
outsb
adc
loop
inc
sbb
or
push
into
pusha
inc
jae
lahf
les
sub
add
mov
xor
lods
pop
pop
pusha
dec
pop
shll
fnstcw
pushaw
xor
out
and
aas
andb
mov
dec
mov
in
popa
jno
cmp
adc
movsl
add
xorl
mov
pop
imul
dec
incl
out
popa
loopne
push
mov
das
test
pop
mov
xchg
addr16
dec
dec
stc
inc
cmpsb
rorl
bound
or
lret
xchg
and
add
jne
jbe
jle
call
xor
mov
cmp
fcomps
fidivrs
pushf
nop
into
rclb
adc
jns
fidivs
popf
in
mov
in
pop
enter
out
pop
dec
dec
or
sub
dec
clc
repz
mov
shll
rolb
dec
cmpsb
jno
gs
les
mov
in
mov
cmp
inc
push
or
lret
sbb
or
dec
gs
mov
scas
pop
movsb
and
and
pop
sti
out
push
cmp
fnstenv
stos
out
push
jb
pop
fnsave
mov
les
adc
jno
outsl
sbb
sbb
fidivs
das
movsl
push
das
inc
outsb
xchg
mov
or
rolb
adc
fdivp
mov
scas
iret
cwtl
pop
pusha
add
xor
call
fucomip
rclb
dec
xchg
and
mov
push
imul
jae
inc
test
lds
mov
punpcklbw
jns
mov
inc
xchg
cmp
jp
sbb
and
gs
sub
test
mov
fsubl
and
out
js
fildll
ror
int
rclb
cmp
test
dec
inc
enter
xor
xchg
jge
in
and
push
push
cmp
jle
cmp
sbb
mov
jmp
cmp
nop
data16
or
std
pop
mov
sbb
or
push
stc
sarl
push
mov
enter
leave
xor
sub
pop
lret
adc
xor
mov
in
mov
pop
in
pop
in
pop
push
dec
jge
ss
pop
cmpsb
push
aad
lock
push
or
repz
scas
rol
imul
dec
sbb
cmpsb
or
xorb
mov
xchg
subl
jl
sub
mov
inc
mov
repnz
dec
stos
pop
inc
sbb
adc
inc
mov
mov
mov
sbb
mov
lods
adc
mov
out
lods
mov
xchg
in
sub
mov
xlat
cwtl
jbe
mov
jns
mov
mov
dec
fisubrs
dec
or
pop
xor
test
mov
push
pop
xchg
push
push
xchg
ss
add
stos
enter
sbb
adc
aaa
xorl
sbb
cli
lods
movsl
xchg
mov
stos
arpl
test
frstor
fldl2t
dec
sbb
mov
mov
push
and
mov
clc
and
add
aad
cltd
rcll
xchg
out
imul
out
push
or
sahf
data16
enter
lds
stos
xchg
arpl
and
imul
inc
stos
sub
movsl
nop
cmpsb
pop
mov
pop
xchg
pushf
aam
ljmp
and
lock
aas
push
outsb
sub
sahf
xchg
push
fistps
add
pop
test
dec
in
jge
xchg
mov
rolb
mov
movsb
roll
lret
inc
jo
enter
jne
fadds
addr16
jnp
js
xor
cmp
cmp
icebp
xchg
fisttps
lcall
push
add
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
inc
inc
mov
jbe
jno
cmp
int3
imul
aad
sbb
sbb
dec
sets
mov
loop
mov
xor
mov
xchg
je
fsubl
push
or
repnz
cmp
fldcw
xchg
nop
mov
call
mov
jecxz
insb
ljmp
adc
mov
mov
or
and
xor
and
fs
cmc
push
ret
sbb
dec
mov
imul
adc
ljmp
inc
in
inc
pop
lret
clc
pop
mov
lahf
mov
imul
out
inc
mov
xor
out
mov
jbe
pop
dec
jae
mov
push
je
adc
xchg
inc
insb
mov
mov
sbb
dec
fdivrl
iret
insb
sub
adcb
fstpt
inc
jmp
outsb
and
jg
pushf
mov
clc
push
out
or
mov
mov
cwtl
outsl
xchg
in
mov
inc
add
ret
nop
aaa
scas
sti
mov
fwait
scas
mov
push
addr16
xchg
adc
rolb
cmc
or
mov
hlt
aam
mov
shr
outsb
push
dec
insl
ljmp
notl
aas
adc
mov
mov
je
mov
fisubrl
sar
mov
mov
adc
or
push
dec
mov
test
jb
shll
incl
insl
xor
push
inc
ja
cld
in
fists
push
pusha
or
jg
lret
dec
fidivrl
cwtl
cmp
sub
addr16
lret
xchg
xchg
jecxz
and
cli
js
pushf
inc
push
add
and
lret
adc
int
data16
cs
aaa
xchg
mov
ret
inc
fwait
add
nop
leave
shrb
mov
push
icebp
and
sub
adc
iret
ret
outsl
xchg
sub
bnd
fcoml
xor
and
imul
cmp
icebp
inc
pop
fadd
fldenv
jmp
aaa
gs
test
sbb
fmuls
lock
sbb
icebp
ret
inc
inc
push
inc
aas
adc
ror
cmpsl
lea
xor
mov
cmp
mov
movb
cld
add
mov
mov
test
mull
push
lods
js
inc
sarl
sti
in
mov
out
fdivrs
or
inc
and
ret
das
sub
std
enter
xchg
fldt
mov
andb
loopne
iret
loop
int
popa
leave
jne
shlb
xchg
stos
ljmp
sub
jp
stc
xor
aas
dec
push
pop
mov
cwtl
and
out
and
sub
push
pop
mov
jns
pusha
stc
je
xchg
test
test
inc
std
pop
inc
adc
mov
jbe
mov
push
rcrl
cmp
insl
addr16
mov
push
jo
pop
lods
ljmp
out
in
push
gs
jg
xor
push
rcrb
push
stos
inc
repnz
je
sar
mov
push
adc
andl
ljmp
out
mov
mov
mov
popf
insl
push
sub
sbb
dec
xchg
cmc
mov
xchg
xlat
add
mov
xchg
add
pop
loop
cli
cs
and
mov
sub
xchg
pop
sub
or
add
cmpsl
lods
mov
loop
and
div
loop
adc
sbb
icebp
xlat
sub
adc
sbb
in
andl
jecxz
xor
dec
xchg
jp
ss
mov
dec
sahf
test
flds
sbb
mov
scas
inc
repz
loop
mov
dec
jns
pusha
mov
idiv
add
inc
mov
mov
push
pop
dec
or
lds
xchg
lods
adc
sub
mov
pushf
mov
xor
clc
jnp
jmp
and
lea
pop
cmp
cwtl
fdivrp
nop
cmp
xchg
ljmp
decb
add
lret
pusha
and
inc
mov
lahf
into
xchg
outsb
into
pop
mov
pop
call
cmp
lock
sbbl
mov
mov
ja
cmp
lret
in
ret
out
test
rcrl
mov
or
std
enter
pop
inc
shll
pop
or
shl
stos
test
ret
fstpt
jp
imul
addb
pop
adc
jnp
inc
jle
jae
sub
je
aaa
into
ss
push
pop
bswap
dec
aaa
adcb
xor
imul
adc
scas
xchg
and
icebp
push
daa
es
jb
mov
mov
fsubr
adcl
pop
add
dec
inc
cmp
pop
imul
dec
xor
mov
data16
ret
jl
shrb
out
pop
mov
adc
scas
mov
enter
xor
shl
inc
mov
rorl
ds
clc
ret
pop
nop
andl
sub
roll
iret
pushf
test
mov
xchg
sub
xchg
movsb
mov
pop
push
sub
mov
aad
jge
xor
xchg
imul
mov
mov
testb
xorb
rcr
es
test
lahf
sub
inc
mov
push
lea
mov
ljmp
cmp
icebp
je
xor
dec
inc
pop
scas
push
inc
xchg
mov
int
jg
dec
pusha
ds
lock
xor
pushf
popa
insb
test
adc
mov
rcrb
adc
jbe
outsb
out
mov
fcoms
push
jge
pop
dec
iret
xchg
push
adc
test
mov
jo
cmpsb
sbbb
xlat
cmp
sbbb
cmp
jno
movsb
inc
int3
dec
jl
xlat
mov
push
out
or
dec
pop
and
aad
cmp
ret
add
fs
mull
jo
dec
loopne
cmpsl
sub
cli
cmp
add
jae
popf
rcl
pop
movsl
inc
stos
mov
or
add
sbb
jp
iret
imul
mov
shrb
and
in
pop
mov
mov
inc
and
lods
mov
sbb
sbb
cmp
mov
leave
jo
sub
sbb
cmpl
stc
les
mov
popf
or
inc
dec
lods
popa
mov
mov
gs
pop
jp
out
cmp
test
jne
notb
ficoml
into
imul
push
pusha
stc
jnp
fcompl
mov
movsl
daa
daa
pushf
add
push
jne
sbb
je
xchg
cld
int
loope
jg
dec
lret
in
mov
jae
add
cmp
andb
mov
pop
push
aam
xor
jns
imul
pop
test
push
cmp
jg
cmp
jb
test
stos
pusha
cmp
cmp
sar
subb
adc
ss
jmp
pop
repz
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
adc
adc
addl
loope
out
mov
push
es
arpl
fs
fwait
pop
aaa
andl
push
repz
and
ret
inc
pusha
ljmp
or
xchg
leave
adc
loop
inc
movsb
cwtl
add
icebp
insb
orl
repz
imul
inc
sub
bound
mov
cmp
fucom
and
js
pop
sbb
imul
push
cmp
jne
sbb
mov
cmp
push
inc
pop
test
mov
jmp
sbb
mov
jns
dec
pusha
jp
int3
cmp
or
in
jg
in
push
inc
enter
inc
adc
popf
mov
mov
test
inc
jbe
push
out
cmpb
jbe
mov
adc
out
arpl
sub
cmp
movsb
test
insb
xchg
outsl
out
jae
xor
inc
mov
or
xorb
inc
sbb
sbb
mov
movsl
cmp
add
lock
aas
mov
push
mov
sub
and
aam
mov
enter
jmp
movsl
out
xchg
iret
inc
dec
push
push
dec
call
out
stos
jb
xchg
cltd
int3
mov
jnp
mov
inc
dec
cmp
push
lahf
pop
leave
push
shrl
cmp
sarl
add
adc
push
push
mov
lret
pop
add
and
push
pop
sbb
int
int
hlt
xor
pop
and
and
push
ja
into
scas
or
xchg
mov
jb
test
inc
jp
or
mov
test
sub
mov
xchg
mov
dec
jle
xor
call
aam
or
xorb
test
test
inc
dec
xchg
inc
loopne
pop
inc
fstpl
pop
and
stos
movsb
jbe
inc
aad
ficoms
dec
add
lods
imul
jb
sub
add
sbb
and
ljmp
repz
mov
ror
fnstsw
adc
sti
jl
pop
mov
mov
sub
xchg
mov
adc
dec
push
mov
andl
fdivrl
pop
les
fnsave
fcoml
push
dec
out
repnz
or
xchg
push
sub
dec
mov
rclb
mov
sbb
cld
in
dec
test
stos
push
imul
sub
jno
push
ret
cli
dec
dec
dec
mov
mov
mov
sbb
dec
in
repz
xchg
push
pusha
cld
inc
inc
test
sahf
dec
outsb
cld
arpl
add
es
and
rcrb
lock
ror
int
or
js
push
add
inc
mov
lods
push
xor
movb
and
mov
call
and
call
inc
sub
out
mov
adc
adc
ror
out
jo
sbb
mov
sub
add
movsb
mov
xor
nop
sub
mov
cli
mov
insb
stos
lods
mov
inc
fisttps
mov
int3
sub
jb
or
xor
fcoms
shlb
mov
jno
mov
pop
pushf
int3
out
and
fstps
xchg
lea
rcl
mov
jg
imul
mov
mov
in
and
cmp
jl
test
sbbb
mov
stos
or
rcrb
push
cmpsl
xor
es
imul
fcomps
dec
shlb
das
loopne
xchg
inc
out
into
stos
out
dec
sub
hlt
pusha
dec
test
repnz
insb
loope
dec
mov
and
adc
xor
popa
arpl
std
jle
mov
xlat
mov
sarb
cmp
lds
or
cmp
cltd
in
ds
xor
add
pop
push
add
push
pop
mov
inc
sbbl
add
cmpsl
dec
loop
cmc
popf
imul
adc
mov
mov
out
cmc
jb
enter
adc
scas
jmp
mov
roll
pop
cmp
or
adc
imul
lds
testb
mov
push
rcr
mov
cmp
shlb
dec
push
fdivl
sbb
adc
push
mov
xor
jecxz
sbb
jle
mov
cwtl
xchg
out
loopne
xor
mov
push
or
pop
fwait
add
notb
mov
sahf
in
scas
inc
sub
mov
addr16
add
notb
clc
xchg
loop
mov
inc
shrb
pop
loop
stos
or
mov
and
cmpsb
outsl
repz
jne
push
pop
mov
cmp
mov
add
icebp
xchg
jp
push
rclb
pop
in
movsb
jae
cmp
sti
jp
xor
daa
aas
or
mov
cmp
iret
inc
and
and
dec
into
ds
cmp
fisttps
test
mov
or
aam
and
fs
in
rcrb
ja
add
pop
into
sbb
and
cmpb
inc
dec
nop
xchg
mov
pop
je
mov
mov
cld
mov
sub
xchg
movsb
mov
loop
dec
mov
loope
sub
pop
add
push
add
add
mov
dec
cmpsl
out
pop
mov
loop
data16
sbb
inc
repnz
orl
pop
sub
daa
mov
jmp
movsb
sub
xchg
pop
pushf
xchg
loopne
push
jo
and
mov
xor
nop
out
ret
rcrl
rorb
hlt
adc
and
xchg
pop
and
push
inc
and
inc
dec
stc
iret
dec
es
fsubl
push
adc
movsl
sub
dec
inc
and
push
pusha
insb
cmp
mov
std
inc
test
and
push
and
inc
arpl
adc
add
addr16
movsl
ds
mov
mov
test
andl
popf
mov
inc
rolb
andb
push
mov
dec
pop
fbstp
cmp
adc
dec
stos
xchg
enter
les
mov
push
lret
in
ss
out
mov
stc
sbb
movsb
test
daa
dec
jae
icebp
movsb
xchg
mul
mov
in
pusha
mov
xchg
enter
inc
ret
fwait
dec
pop
mov
xor
cli
add
pop
inc
fnstenv
icebp
pop
jl
cmp
cmp
xorb
xor
sbb
mov
push
mov
jae
ljmp
ret
cmp
out
sub
aas
shl
sbb
stos
mov
push
adc
and
mov
imul
loopne
jne
pop
push
mov
jns
icebp
mov
lret
pop
jbe
mov
or
and
jne
xlat
dec
xchg
jecxz
aas
iret
out
into
or
std
push
xchg
jge
test
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
pop
adcb
psubd
sub
xor
adc
push
cmp
cs
and
push
outsl
pushw
imul
orb
sub
dec
push
iret
stos
inc
or
jo
ret
push
sbb
ds
jb
in
push
insb
decl
dec
mov
movsb
divb
sub
out
cmc
sbb
in
mov
push
or
mov
mov
mov
pop
shrb
cmpsl
add
fisttpl
nop
in
bound
das
sti
inc
jg
dec
mov
dec
test
shll
cmp
sbb
xlat
xor
pop
adc
or
sbb
loop
aaa
in
jns
xor
loopne
cmp
add
inc
mov
jbe
incl
or
call
ja
fucomp
jecxz
sub
push
in
sbb
popa
xor
daa
jge
sbb
mov
push
cmc
mov
add
jb
push
test
dec
loopne
sahf
sub
xchg
mov
xorl
lcall
sub
sbb
mov
popf
orb
or
sbb
gs
fnstcw
sti
jecxz
add
dec
fdivl
pop
outsb
pop
into
fidivl
xchg
mov
push
int3
in
lahf
insb
pushf
hlt
loop
jmp
in
dec
mov
mov
sbb
fidivrs
inc
jnp
and
std
sbb
insl
test
sub
imul
sub
sub
cli
pop
decl
pop
cmp
out
movd
mov
test
mov
movsl
mov
sbb
cmp
cmp
dec
dec
out
jl
mov
pop
pop
lahf
popa
out
enter
inc
push
jo
push
jle
xor
andl
or
mov
jnp
out
hlt
popa
adc
enter
mov
or
imul
push
jo
fcmovnu
nop
jae
mov
sarb
sahf
sub
push
xchg
push
out
pcmpgtw
push
push
test
mov
push
mov
insb
dec
iret
adc
add
inc
repz
insb
xchg
pop
and
and
popf
fbld
test
jle
jb
loopne
imul
sub
popa
lcall
lea
in
jecxz
push
and
std
cmc
rcr
push
or
in
pop
lea
cmpsl
xor
pop
in
xchg
clc
mov
inc
cmp
movsb
std
in
subl
mov
sbb
cltd
pop
aas
mov
leave
in
and
movsl
or
mov
and
int3
rcll
test
jbe
fcomps
in
push
jo
adc
pop
incl
shll
lret
xchg
mov
in
sub
je
xor
loop
mull
jns
adc
sahf
cld
arpl
fs
mov
inc
mov
lret
inc
cmpb
inc
inc
cli
mov
jns
mov
movb
fwait
in
data16
fcmovb
or
xchg
aam
and
movsl
xor
stos
lock
cld
shll
aaa
or
fdivr
daa
jecxz
pop
cmp
xchg
enter
stos
jo
mov
sbb
shll
and
dec
or
cli
cmp
ret
pop
sbb
xor
inc
aad
mov
or
ja
xor
xlat
xchg
and
mov
push
or
imul
out
sahf
mov
cmp
addl
pop
cmp
nop
cltd
aam
movsb
jnp
xor
cli
or
imul
sbb
sbb
xchg
cmp
xchg
imul
fadd
sbbb
fmuls
lret
cltd
shrl
inc
fstps
add
push
pop
xchg
xor
aad
sub
pop
adc
sbb
call
cmp
lock
mov
xchg
push
fsubr
jl
push
stos
push
cmp
out
or
ljmpw
adc
les
rcl
and
out
into
dec
fcmovb
ds
cmc
inc
jne
mov
or
pop
cmc
repz
mov
cmp
fnsave
sbb
jg
fldl
sbb
sub
mov
ds
imul
ret
outsl
stos
cmovae
jmp
xor
jae
int
xor
shll
cmpsl
inc
cmc
xchg
mov
shlb
push
in
divb
scas
sti
ret
lcall
push
ret
aas
add
aaa
cmp
and
cltd
adc
xor
fsts
sbbb
xor
out
outsb
mov
addr16
jae
repnz
adc
sub
inc
sbb
mov
ss
ret
outsl
loopne
pop
mov
add
test
push
mov
sub
pusha
ja
sbb
mov
imul
dec
aaa
and
push
dec
fildll
mov
lret
pop
test
or
pop
je
inc
shr
adc
mov
sbb
test
dec
lea
outsl
mov
jo
mov
mov
push
fwait
jnp
dec
adc
and
cmp
repnz
arpl
sbb
aas
filds
ljmp
imul
xor
cmp
in
int
xlat
cwtl
clc
push
mov
movsl
pushf
push
cli
int
jmp
out
xor
xor
int3
lds
mov
and
xchg
or
imul
cmp
sub
scas
jns
and
mov
mov
mov
imul
bound
in
cs
loop
mov
sub
mov
cmp
and
dec
lret
mov
jmp
mov
cltd
data16
xor
sub
adc
rclb
pop
cmpb
add
orb
fcompl
or
imull
sti
sbb
fidivs
pushf
xchg
leave
in
daa
clc
push
adc
cmp
loope
mov
xchg
mov
cli
in
and
inc
addl
adc
loop
mov
ror
cmp
fmuls
push
mov
ja
test
inc
outsb
pop
insb
loop
xchg
iret
push
jmp
scas
sbb
jo
mov
pop
push
push
divb
adc
pop
adc
and
inc
adc
cmp
adc
es
mov
push
in
inc
inc
jmp
sarl
pop
fistpll
aaa
mov
fsubs
ds
arpl
push
dec
xchg
clc
dec
sbb
rcl
ja
adc
loop
mov
pushf
mov
pop
jecxz
ja
outsb
inc
cmpsb
dec
pop
xchg
add
xchg
in
mov
lds
gs
rorb
dec
dec
mov
das
jne
pop
mov
stos
clc
push
add
xchg
lret
mov
mov
mov
test
rolb
jne
or
mov
fisubl
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
fld
push
fwait
mov
cltd
jo
fdivrs
xor
into
insb
sub
in
movsl
lret
icebp
loopne
mov
jp
iret
hlt
les
sahf
jbe
ret
hlt
cmpsb
inc
mov
dec
cli
jae
mov
mov
fwait
and
dec
das
ja
iret
clc
lahf
mov
xor
rorb
pop
data16
push
pusha
aas
inc
fcoms
add
fsubrl
stos
or
test
cmpsb
jle
daa
push
xchg
ret
jo
lds
das
jae
mov
testb
rclb
jl
clc
dec
cld
xchg
cmpsl
mov
push
fsubs
scas
lret
xor
and
insb
in
int
push
arpl
jne
pop
movsb
lcall
int3
popf
testb
sub
shll
jle
out
jmp
mov
leave
inc
dec
fsubs
inc
pop
or
cmp
fisubrl
adc
pop
dec
adc
inc
xor
cmc
sub
push
mov
add
test
push
push
sbb
mov
andl
sub
xchg
int3
jne
and
xor
mov
ret
pop
popl
add
xlat
mov
rcl
inc
enter
xor
jmp
in
sbb
repnz
sarl
sub
ror
daa
cmp
or
dec
popf
mov
lea
add
ljmp
lahf
lds
add
jno
outsl
int3
dec
mov
jmp
fidivrs
push
rep
mov
movsb
push
add
jo
jns
outsb
aam
icebp
inc
sbb
dec
or
psrad
push
push
push
test
test
iret
ja
into
outsl
push
mov
fsubrp
pand
mov
adc
sarl
fcmovb
pop
pop
ret
push
jecxz
sub
stc
test
add
fwait
pop
ja
jg
or
jo
or
sbb
aam
iret
lret
call
xchg
das
dec
inc
push
push
and
mov
sbb
push
sub
sahf
jmp
jg
xor
lret
bound
cltd
outsb
aam
imul
sahf
cli
rcr
fstl
sbb
adc
cld
mov
xor
sbb
aad
aam
je
test
and
add
pushf
scas
in
popa
mov
js
js
or
enter
mov
mov
cmpsb
adc
shl
add
mov
loope
pop
pop
imul
push
out
loope
sbb
xor
test
dec
in
sarb
mov
mov
mov
jmp
push
pop
add
jo
rolb
rolb
iret
sbb
sbbl
in
lahf
scas
xlat
inc
pusha
daa
dec
mov
loopne
push
cmpsb
and
mov
xor
rorb
xor
push
ret
push
ss
test
dec
inc
ljmp
cltd
out
hlt
cmpps
imul
ret
cmp
mov
ficomps
lea
shrl
add
and
xchg
scas
bound
cld
xchg
out
mov
test
std
shr
or
lods
int
push
or
std
jl
mov
mov
out
mov
mov
movsl
adc
fdivrp
and
sub
inc
test
fstl
dec
int3
ja
push
xchg
pop
sbbl
cld
in
fsubs
push
andl
push
aas
aad
insl
cmp
lock
sub
add
or
popa
sub
sbb
fdivp
adcb
mov
pop
imul
pop
pop
push
sbb
notl
sbb
xor
stos
imul
bound
mov
outsl
adc
add
loopne
xor
push
loope
lret
xor
mov
xor
and
inc
lock
fadds
inc
in
mov
mov
mov
jecxz
stc
ss
lock
repnz
cmp
mov
or
xor
stc
xlat
cmp
clc
or
addr16
and
arpl
push
icebp
movb
sbb
pop
xchg
adcl
jno
mov
filds
aam
leave
dec
xor
sbb
or
mov
es
pushl
mov
and
loopne
fwait
nop
rolb
inc
inc
hlt
cltd
mov
pop
pop
jbe
jmp
outsb
sar
xor
inc
inc
xor
push
dec
dec
lods
aam
inc
repz
mov
cmpsl
in
xor
into
into
arpl
mov
mov
mov
in
nop
test
and
mov
loope
in
add
add
testl
insl
subl
sub
mov
inc
das
data16
int
mov
into
es
int
jle
pop
lods
sarb
outsb
nop
pop
push
inc
imull
pop
repz
or
outsl
fdivs
mov
sbb
mov
mov
mov
add
lret
fwait
in
jo
lds
mulb
jo
pop
sbb
cmpl
xor
dec
dec
cmc
out
stos
clc
mov
mov
lock
data16
out
mov
repnz
and
pop
push
push
loopne
sbb
dec
mov
mov
test
sbb
fdivrl
xor
test
mov
ficomps
cmp
cli
rcrl
in
clc
xchg
rcrl
in
mov
dec
xor
aaa
cmc
ljmp
or
fisttps
pop
sub
pushf
ljmp
xchg
mov
pop
popf
call
popa
push
cmp
cmc
dec
inc
lahf
and
xor
dec
xor
mov
pop
jne
stos
cmp
adc
push
inc
mov
pop
adc
jl
lock
cs
mov
pop
test
fstl
scas
dec
lahf
pop
scas
pop
je
test
lahf
int3
shlb
jno
inc
iret
and
bound
mov
mov
fs
jb
jg
cmpl
mov
in
xor
inc
lret
pop
es
fcmovbe
mov
mov
mov
cmp
mov
mov
sti
push
imul
movsb
jp
dec
enter
mov
jns
add
jo
test
push
cmp
dec
scas
lcall
sahf
inc
mov
lret
inc
aaa
ret
and
lahf
xchg
push
dec
inc
repnz
test
loope
jmp
cs
xor
fnstenv
push
int3
dec
cmpb
sbb
inc
fcoml
pop
faddl
jl
dec
and
int
outsl
enter
inc
je
cmpsl
mov
push
movsb
pop
sub
inc
pop
push
ljmp
pop
ret
jge
push
fldenv
mov
cld
push
and
mov
sub
cmpsl
mov
xor
xlat
add
xchg
push
ret
cwtl
sub
loop
sti
mov
adc
jmp
or
pop
mov
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
adc
jno
sarl
lods
js
sbbl
lret
sbb
jmp
das
out
xor
sbb
mov
jl
stos
shl
test
daa
aad
jg
adc
daa
inc
xchg
xchg
push
inc
in
jae
fsub
int
sbb
jecxz
push
pop
out
cmpsb
rcl
xchg
inc
mov
or
mov
cmp
lods
iret
pop
xor
xchg
or
jecxz
xchg
stos
aad
popf
outsb
push
lahf
mov
add
lcall
inc
mov
mov
ror
pushf
shlb
adc
dec
mov
adc
ficoms
push
lods
cmp
lods
push
dec
or
out
dec
cltd
dec
add
sbb
adc
std
dec
ljmp
fists
in
cmp
mov
dec
cmp
push
aaa
push
inc
sarb
xchg
orl
ljmp
out
rcrb
nop
xchg
and
imul
mov
jo,pt
data16
lea
imul
outsl
jmp
mov
xchg
sbb
repnz
add
insl
fildll
adcb
loope
xchg
fucomp
jg
out
dec
aas
xchg
push
jnp
aad
and
and
pop
push
or
test
and
push
frstor
fisttpl
test
es
movsl
sub
push
mov
push
in
jecxz
push
sbb
adc
push
repz
jbe
in
ss
mov
cwtl
in
or
sub
pop
out
or
push
mov
or
roll
mov
mov
xchg
inc
jbe,pn
pop
push
cld
cs
lret
push
sub
out
dec
loop
dec
inc
add
push
rcrb
sub
insb
or
roll
loopne
out
xchg
and
sahf
inc
pop
xchg
scas
das
xor
test
add
dec
jp
lahf
mov
imul
icebp
and
shll
imul
xor
iret
adc
dec
bound
mov
fs
mov
rolb
add
dec
int
xchg
ljmp
es
sub
mov
and
xor
mov
outsl
imul
je
ljmp
xchg
dec
popa
push
insl
shll
mov
sub
adc
aad
js
stos
movsb
scas
add
or
imul
sub
not
andb
or
xchg
inc
lcall
adc
fidivl
in
lock
sbb
push
ret
or
movsb
lcall
pop
leave
fimull
pop
mov
mov
lock
inc
mov
popa
xchg
movsl
jl
andb
pusha
dec
xor
loopne
es
mov
inc
les
imull
push
push
inc
aam
mov
ss
jle
ja
inc
cmp
push
xlat
popa
cmp
fldcw
pop
iret
stos
push
mov
sahf
xchg
cmpsb
inc
icebp
xorl
es
xchg
popf
inc
mov
divps
pop
dec
cmp
orl
adcb
shrb
sbb
xchg
cmp
push
in
mov
or
or
mov
and
ror
add
loope
and
movsb
andl
stos
stos
mov
add
add
jb
out
loope
or
and
adc
dec
xor
out
xlat
jae
mov
jmp
cwtl
fbstp
pop
fiadds
or
add
jne
adc
and
mov
adc
cmpsl
push
int3
fiaddl
fisubrs
loope
cmp
or
mov
or
out
jg
movsl
pop
sti
push
mov
jns
insb
cmpb
aas
jg
pop
pop
out
pop
insb
cmpsl
hlt
or
clc
repz
outsb
loop
mov
jbe
inc
cmp
or
imull
sbb
repz
out
xchg
lods
pop
lahf
jns
cmp
fs
or
int
cmp
fisttpl
fisttpl
arpl
fdivl
inc
pop
insb
lea
dec
data16
cmp
inc
in
or
mov
dec
sbb
aam
pop
inc
adc
inc
stos
cmp
dec
fwait
pop
dec
lahf
add
les
and
adc
repnz
add
shl
adc
mov
js
jp
adcb
or
xchg
mov
lcall
xchg
leave
orl
vandnpd
insl
dec
and
hlt
call
stos
in
xchg
gs
mov
sub
inc
inc
imul
inc
ret
mov
sbb
push
sbb
pop
add
pop
and
std
inc
lahf
push
push
push
aam
shll
sbb
mov
cmp
xor
imul
outsl
fcoml
push
xchg
and
daa
std
sti
dec
push
imul
mov
test
fcmovnu
and
cmp
iret
aaa
cs
sti
cmc
stc
mov
mov
subl
inc
mov
dec
sbb
in
cs
pop
ret
jge
icebp
enter
and
xchg
in
mov
pop
test
inc
cld
inc
sarl
cmp
push
jp
sub
adc
push
pop
popf
xchg
xor
gs
aad
and
imull
mov
mov
cli
jbe
lret
std
movsl
pop
mov
popf
mov
sub
cmp
ja
test
sahf
hlt
adc
lret
xor
jb
xchg
jle
int3
jbe
push
repz
cmpsb
mov
xchg
add
movsl
rolb
add
sub
push
mov
pop
imulb
mov
jnp
xor
mov
or
and
mov
lret
imul
in
scas
push
sub
and
mov
es
mov
lret
xchg
inc
out
test
imul
xchg
or
mov
rorb
xor
adc
xchg
push
ficoms
mov
mov
add
mov
adc
ljmp
and
jmp
cli
mov
xchg
nop
or
mov
pop
das
hlt
mov
fstpt
loope
push
jmp
sub
cs
decb
loopne
pop
scas
stos
pusha
jnp
arpl
cmp
repnz
hlt
and
jl
pop
pop
push
sbb
xor
pusha
js
push
pop
loope
adc
and
cld
arpl
imul
out
push
and
iret
cld
bound
or
lock
scas
add
sbb
pop
xchg
fstpl
std
das
and
or
aam
mov
aaa
inc
stos
fcoml
shl
or
scas
xchg
cld
sub
push
pop
mov
or
pop
lahf
das
icebp
sub
dec
enter
lret
sti
mov
aam
cltd
push
inc
sbb
jle
xor
add
xchg
cmp
icebp
dec
push
xchg
fsts
bound
js
imul
mov
enter
inc
div
add
loope
cwtl
stos
insl
xor
arpl
cld
fsubl
adc
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
sbb
int
js
mov
pop
popf
add
stos
and
adc
xchg
hlt
jle
int3
js
push
pop
movsl
jno
ja
outsl
insb
push
sub
sub
and
xchg
pop
std
jle
cmp
jp
cmp
xor
push
xorb
adc
and
negb
fistps
push
push
xor
shll
and
and
test
sub
mov
and
mov
enter
push
mov
pop
ret
xchg
repz
lods
fnstsw
rcl
xchg
mov
lds
push
jge
jmp
sbb
mov
and
ret
pop
push
cmp
xchg
and
push
pop
mov
movsw
enter
shrd
xor
push
lock
pusha
repnz
sbb
and
pop
aad
jg
sbb
sahf
and
mov
movsl
push
mov
jecxz
mov
dec
fists
mov
into
pop
mov
out
and
fwait
mov
cs
not
insb
test
mov
fisttps
and
shl
out
jmp
rcrl
jnp
fsubs
cs
stc
mov
das
sub
xchg
xor
sub
mov
mov
scas
and
stc
pmullw
lret
icebp
aam
ds
int
inc
sub
sti
pop
jle
fwait
xor
or
jge
int
imul
stc
lds
xchg
dec
in
pop
out
pop
jecxz
sub
mov
adc
jecxz
jecxz
insb
in
lret
cmp
fmul
dec
jecxz
std
mov
xchg
aad
arpl
rolb
mov
es
enter
xor
in
sbb
gs
jb
or
fsubrl
aas
aaa
xchg
push
dec
inc
inc
adc
ror
daa
inc
lcall
mov
jmp
loopne
push
shll
xchg
cmpsl
leave
xchg
push
scas
mov
add
jle
xchg
stc
jecxz
mov
arpl
xchg
addl
sbb
popa
mov
add
mov
scas
mov
jae
sub
fisttpl
sti
adc
xchg
popf
rorl
iret
add
pop
push
cmc
scas
inc
bound
ror
inc
ds
jge
rcll
lret
xor
adc
jnp
pop
sti
ljmp
dec
cmp
dec
dec
sbb
test
dec
sbb
pop
std
stc
inc
mov
cli
aad
pop
inc
aas
pop
or
loopne
xchg
jmp
lret
mov
mov
mov
scas
xchg
jge
xchg
adc
sub
add
sub
xor
ja
push
mov
enter
push
mov
cmpl
adc
cmp
sbbl
push
repnz
cli
flds
scas
dec
adcb
add
inc
sbb
fisubl
sbb
es
out
out
mov
pop
out
cmp
xchg
into
idivl
aas
mov
mov
push
xchg
jo
jge
fistpll
imul
cmp
pushf
cmp
sbb
fistpl
test
sub
sub
sub
leave
inc
inc
jns
filds
push
or
push
sbb
pop
mov
jecxz
cmp
sub
sbb
rorl
aaa
xor
fidivl
pop
mov
cltd
call
scas
ja
jg
shlb
nop
data16
ja
xchg
cmpsl
in
dec
inc
leave
das
jge
mov
shll
xchg
xchg
push
pop
push
mov
iret
cs
loope
mov
pushf
sbb
fcomps
data16
jl
pushf
jnp
rcrb
add
sub
mov
icebp
fstl
popa
inc
or
popa
sti
xchg
mov
mov
dec
pop
shlb
mov
aad
mov
in
mov
adc
xor
push
sar
inc
and
shlb
test
cmc
lds
jns
xor
loopne
lock
cmp
std
mov
gs
cmpsl
stc
sbb
pop
jno
fdivl
mov
xchg
inc
mov
and
push
mov
add
aas
add
sbb
in
push
cmpsl
lret
in
mov
je
add
and
mov
mov
das
aas
mov
lea
or
pop
xor
xor
push
or
or
data16
and
aaa
mov
fs
fistpll
push
rcrb
outsb
push
sbb
or
ret
xlat
pop
les
addr16
cmp
jle
setae
or
loop
fwait
adcl
adc
pop
stos
arpl
sbb
in
lods
push
stc
jno
loope
lret
dec
and
inc
xchg
sahf
or
lds
addr16
in
test
icebp
dec
cmpsl
push
loope
push
mov
jo
jmp
popa
aad
ficoml
bound
stos
adc
stc
push
lcall
cltd
dec
bound
cmp
xchg
xor
int
pusha
jae
and
adc
les
push
push
push
and
mov
iret
xor
pop
subb
xchg
mov
test
daa
xlat
out
mov
int3
xor
push
es
aas
or
scas
scas
outsl
sbb
push
and
mov
mov
fldenv
xor
sub
mov
out
add
stc
mov
jns
cmp
aad
inc
adc
jae
sbb
sub
mov
nop
hlt
scas
idivl
sbb
xchg
outsb
ret
ficomps
push
add
xor
movsb
leave
pop
je
and
insb
sbb
imul
popa
gs
insl
mov
outsl
push
push
dec
sbb
sbb
push
inc
mov
mov
dec
ja
ret
clc
movsl
push
fdivrl
or
mov
sub
movsl
imul
dec
lods
ret
cli
outsl
in
mov
cs
aam
sbb
in
into
fadds
in
fcmove
pusha
testb
dec
lcall
pop
mov
popa
inc
pushf
xchg
icebp
fs
mov
inc
lahf
dec
lds
fsubrs
cli
mov
adc
pusha
sbb
dec
ficoml
outsl
mov
ss
pop
xchg
push
divb
sbb
divl
or
sub
pusha
sub
jno
repz
das
or
pop
and
adc
mov
fwait
xchg
xchg
push
repnz
gs
out
stc
mov
insb
jl
into
fidivrs
push
mov
dec
stos
push
pop
lock
int
cmp
inc
mov
mov
pop
fwait
jg
and
fisubs
and
daa
cmc
mov
fdivrl
dec
loopne
js
inc
cli
add
add
div
adc
or
pusha
sub
lcall
jne
cli
enter
and
sbb
sbb
jb
add
aaa
test
js
inc
and
mov
pop
lret
enter
or
sub
notl
add
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
jmp
mov
add
je
xlat
add
dec
mov
jnp
push
mov
mov
pushf
pop
enter
ja
sarl
lret
mov
adc
daa
je
shll
jg
dec
fwait
mov
mov
repnz
negb
add
loope
dec
mov
int
cwtl
movsb
lcallw
mov
rorl
or
sar
xchg
mov
sbb
mov
push
cmpl
or
xor
negb
cmp
pop
jo
pop
insl
mov
sarl
push
cwtl
test
and
xchg
pop
ret
cli
mov
pop
scas
pop
adc
dec
cmc
rcl
and
mov
ljmp
inc
push
dec
mov
inc
push
jge
popa
imul
je
adc
call
dec
inc
mov
xchg
sub
xlat
xchg
xlat
jbe
arpl
stos
cmp
mov
sub
xor
sub
icebp
lock
mov
dec
in
xor
cli
and
add
dec
jle
into
dec
aad
scas
sbb
mov
pop
les
cmp
shl
rcl
sub
out
subb
adcb
inc
adc
push
mov
in
jl
clc
rclb
ret
pop
cmc
adc
iret
inc
and
fisubs
dec
xchg
ljmp
pop
cwtl
pop
ret
inc
cmpsl
movsb
shll
dec
fmulp
xchg
jns
or
push
xor
cmp
jno
xchg
ret
inc
sbb
lds
sbb
pop
mov
pushw
lahf
stc
jp
mov
or
stos
cmp
mov
roll
and
gs
addr16
dec
push
jae
pop
mov
jns
lahf
mov
or
pop
dec
stc
stos
xchg
lcall
pop
daa
sub
std
pusha
pop
test
mov
rcll
iret
aas
sub
push
outsl
cwtl
cld
pop
pop
dec
mov
fldenv
imul
pop
or
popa
cmp
mov
movsb
movsl
jne
jb
pop
jmp
shll
jb
xchg
mov
pop
in
cwtl
std
mov
test
mov
ret
in
or
add
inc
sbb
pop
or
and
sub
jmp
adc
xlat
and
out
rcrb
xchg
rol
xchg
pop
lcall
adcb
or
dec
mov
sbb
aam
sbb
adcb
notb
cld
pop
in
jne
push
xchg
mov
ficoml
fsubrl
xor
stos
and
sbb
cmp
cmpsl
in
xor
sbb
push
outsl
movsl
dec
jno
rorl
mov
add
inc
cmpsb
mov
jmp
sbb
das
xor
inc
add
sbb
jg
pop
jge
fs
fstpl
add
les
jb
pop
les
ficoml
mov
push
loope
dec
or
pop
xor
cmp
int3
sarb
aas
xor
and
push
sbb
xchg
jae
sbb
pop
out
or
push
dec
out
ret
mov
sbb
fs
xor
or
xor
jp
test
fwait
enter
jnp
sub
xchg
inc
lret
or
ret
mov
jns
mov
jge
inc
xchg
lret
sub
mov
jge
fwait
pop
or
lahf
mov
sbbl
and
mov
dec
jo
mov
loopne
sbb
and
push
stos
push
mov
mov
ja
in
inc
cmc
push
imul
dec
and
mov
cmpsb
loope
in
mov
notb
stos
cmc
mov
bound
rorb
sub
mov
mov
and
pop
lcall
mov
shll
iret
fsubrs
mov
xchg
mov
sbb
fs
pop
xor
cmp
xor
pop
movsl
mov
mov
stos
and
adc
push
mov
lds
clc
mov
je
leave
mov
mov
fs
dec
mov
mov
xchg
push
adc
pop
push
push
shrl
cmpsb
pushf
ret
aam
lds
stos
inc
xlat
xlat
pop
pop
fistpll
scas
mov
std
loope
adc
jae
jne
fsubl
cwtl
and
pop
adc
mov
inc
dec
pop
sub
dec
jmp
or
or
push
test
dec
xlat
or
jae
jp
add
push
cli
test
ret
add
dec
mov
sub
xchg
lods
push
mov
adc
cmp
mov
cmp
scas
xor
je
jle
jmp
arpl
inc
sbb
cmp
add
jns
lret
sub
sbb
fsubl
jnp
rorb
mov
and
scas
lret
pop
into
inc
ljmp
cmc
mov
or
add
add
loop
mov
std
mov
jge
xchg
sub
dec
mov
std
sub
inc
out
cmp
cmp
lea
pop
out
mov
mov
push
xchg
or
orb
xchg
sahf
mov
gs
jl
in
or
push
sbb
cli
inc
pop
pop
sbb
andnps
fucomip
clc
loopne
fpatan
pop
push
repnz
mov
mov
add
loop
shll
sahf
fmul
mov
in
inc
sysenter
xchg
xchg
push
xor
mov
loop
rsm
add
in
mov
es
jnp
out
push
jmp
clc
ret
testl
or
push
pop
pop
sti
lds
push
add
ret
adc
cmp
cmc
cmp
pop
jl
loop
sbbb
popf
jmp
fstps
fwait
std
or
add
out
stos
hlt
mov
lock
out
movsl
stos
adc
int3
cmpl
mov
enter
adc
xor
xchg
jne
jb
mov
aas
mov
xchg
inc
sbb
mov
fildll
and
popf
fldl
fistl
es
imull
dec
mov
fimuls
inc
aas
pop
xchg
cli
test
fldl2e
inc
pop
jbe
push
rcl
inc
push
cmp
int
dec
std
mov
data16
sbb
mov
addl
xor
dec
jno
in
jns
or
mov
jno
fimull
cmp
dec
cmp
aam
pop
mov
add
loope
or
mov
in
cmpb
leave
daa
or
test
cmp
pop
push
les
fisubrs
xchg
in
stc
call
push
mov
or
ret
pop
stc
and
in
enter
inc
xor
popf
xor
and
mov
out
lods
dec
mov
mov
imul
pop
sub
test
xchg
movsl
pop
out
xor
out
adc
mov
or
xorl
mov
push
push
pushf
push
xor
mov
push
pop
cmpsb
ret
movsb
push
sbb
and
fwait
jae
push
cltd
push
sahf
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
fs
mov
pop
cli
adc
imul
jo
div
std
fs
xchg
jno
aad
icebp
inc
test
pop
mov
cmp
dec
aaa
jno
push
bound
ljmp
or
lahf
push
xor
and
ljmp
out
sub
and
fistpll
or
in
mov
mov
rcll
pop
inc
mov
add
mov
scas
jmp
inc
mov
add
lret
je
mov
jo
fldcw
add
jge
push
out
xchg
sbb
adc
popa
imul
in
sbb
ret
movsl
sub
sub
pop
sub
aas
cwtl
jecxz
loope
mov
mov
fwait
test
call
lcall
cwtl
xchg
ds
mov
popa
mov
jo
inc
test
imul
ds
js
sub
repnz
xchg
lods
cmc
sub
fwait
inc
jns
addr16
sbb
adc
dec
jge
lds
adc
testl
jbe
jb,pn
mov
addr16
mov
das
lods
and
adc
ljmp
call
movsb
fidivrl
sub
pop
mov
pop
xchg
xchg
dec
xchg
call
scas
fdiv
es
mov
lret
mov
stos
test
add
filds
cmp
jae
leave
fwait
pusha
movsb
xchg
iret
mov
add
pop
and
mov
jmp
sbb
cli
cmp
stos
mov
enter
decl
call
cmp
add
xchg
add
add
adc
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
