push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
mov
in
jo
rcl
aad
ror
rol
pop
push
add
jge
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
rolb
adcl
jl
outsb
ret
mov
xorb
adc
sbb
push
mov
je
popf
and
mov
mov
mov
ja
out
push
test
dec
insl
lcall
out
xor
cli
cwtl
test
clc
jae
sub
jno
test
outsb
cmp
sub
pop
leave
and
cwtl
jecxz
mov
pop
mov
xchg
sub
cli
jmp
adc
hlt
test
loopne
cld
jns
in
inc
mov
stos
lea
sub
dec
inc
dec
sub
add
xchg
bndstx
xchg
adc
adc
in
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
jg
jo
jg
jo
popa
or
and
cmp
bound
shrl
repnz
rorl
pushf
add
inc
scas
fsubs
xchg
adc
sahf
shll
xchg
xchg
xor
ljmp
xchg
insl
sbb
adc
xor
in
cmp
sbb
xor
fcmovnb
int
mov
les
mov
clc
xchg
adc
fsin
mov
cmp
in
vsubsd
mov
adc
leave
xor
mov
insb
mov
aaa
xor
jb
data16
inc
and
sub
clc
mov
fstl
aad
rolb
scas
add
clc
mov
mov
insl
iret
shll
xchg
lcall
sar
dec
outsl
pop
out
lods
xchg
xorb
fdivrl
fcmovnb
pop
pop
sub
outsl
stos
call
andl
js
mov
stos
stos
or
cld
outsb
push
sahf
jl
leave
push
roll
jp
mov
push
xchg
daa
adc
lods
mov
and
ja
insb
and
in
jmp
mov
rol
rorl
iret
mov
jo
les
repnz
fidivl
xchg
and
jae
xorb
add
js
or
xor
jl
mov
or
push
add
add
pushf
sbb
pusha
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
ds
dec
jle
jo
jg
jo
scas
adc
lock
push
mov
shr
cld
ja
sbb
mov
cltd
adc
xor
cld
fucomip
out
rcrb
xchg
pop
rorl
imul
sub
daa
and
ja
bound
frstor
mov
arpl
xor
nop
aam
pop
repnz
mov
fsubr
fdiv
or
test
push
cmc
loope
cmp
xor
jnp
loope
shll
dec
inc
mov
fs
and
leave
int
js
mov
push
pop
nop
add
pop
mov
lea
sbb
mov
cmp
and
jg,pt
jmp
lret
cmp
jl
push
mov
lods
push
mov
adc
pop
scas
mov
ficompl
pop
cmp
daa
repnz
cmc
push
fisttpll
fbstp
sub
or
push
mov
sub
mov
daa
out
push
stos
fwait
pop
xchg
mov
fisubrs
jnp
int3
sub
sub
and
ja
jns
xor
mov
mov
jge
in
mov
test
dec
pushf
sbb
jns
inc
pop
dec
cmp
testb
mov
shrl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
insb
or
aas
jl
jo
jg
jo
fsts
xor
xchg
push
pop
repnz
xor
jb
sti
add
pop
dec
cmc
mov
in
test
popf
inc
or
out
lret
scas
pop
lods
jno
outsl
addr16
iret
xchg
das
mov
mov
cli
xor
sbb
rcll
es
lahf
inc
aad
addr16
jecxz
inc
jo
cli
push
fisubrs
push
jb
lea
test
mov
jb
scas
movl
fcmovu
ret
stos
fiaddl
popa
sbb
pop
pop
push
ja
stos
pusha
sbb
jne
xchg
sbb
mov
push
data16
out
xor
sbb
sub
arpl
cmpsb
daa
adc
jno
cwtl
mov
in
je
or
stc
xor
gs
xchg
mov
mov
cli
pop
xor
mov
and
nop
lock
xor
stc
ljmp
jne
pusha
mov
es
lret
lret
xor
pop
jecxz
in
add
hlt
adcl
shll
jnp
fwait
dec
imul
inc
mov
cmp
sahf
andb
and
arpl
stos
xchg
cltd
xchg
xchg
lret
push
jg
lock
pop
mov
ret
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
dec
mov
jge
jnp
jo
jge
jo
cld
or
and
das
lock
shrl
shl
dec
add
inc
mov
push
ficoml
sub
push
sbb
cwtl
repnz
sbb
leave
and
shrl
xchg
hlt
sbb
int
jns
add
jecxz
xchg
pusha
lods
jno
fisttpl
mov
mov
cmpsb
pop
notb
nop
fdivrl
xchg
xchg
cmp
test
mov
cmp
xor
mov
out
shll
sahf
push
push
cwtl
into
add
push
es
dec
decl
sbb
xchg
pop
add
fidivrs
ret
cmp
cmc
jno
int3
test
xchg
push
stc
aas
jp
cmp
shll
mov
jmp
inc
pop
or
pop
stos
jno
enter
je
adc
pop
pop
ret
cs
orl
adcl
and
inc
sub
punpckhbw
mov
ljmp
out
out
mov
mov
pop
jmp
test
test
cmp
inc
mov
sbb
mov
ja
outsb
lds
outsl
mov
mov
roll
inc
stc
inc
cltd
popa
cs
aam
adc
jne
lea
sub
popf
push
jns
xor
cmp
dec
mov
jns
mov
mov
xchg
sub
repnz
xor
dec
xchg
jle
scas
adc
and
add
xchg
rcrb
ret
pop
inc
xchg
mov
mov
inc
enter
dec
cmp
and
pop
xchg
cltd
ds
add
imul
and
pop
fisttps
xor
scas
mov
lret
or
mov
inc
inc
dec
xchg
adc
inc
ret
loope
into
into
shrb
bound
rclb
dec
mov
loopne
mov
jg
jg
ljmp
icebp
xchg
jb
or
stos
and
and
jo
xchg
push
add
dec
push
jle
cmpl
outsl
inc
xor
add
orl
shrl
push
inc
jbe
fs
loop
adc
and
xchg
lea
out
repnz
xchg
mov
testb
imul
in
push
mov
and
mov
mov
lods
inc
test
jne
mov
int
loopne
out
xchg
pop
and
arpl
ret
mov
mov
dec
fisubs
xor
lret
pop
lcall
cmp
roll
xchg
movsb
jne
les
lds
or
test
xchg
js
lds
jne
jne
cmc
loope
push
iret
mov
or
stos
test
fs
ffreep
int3
dec
and
stos
inc
add
ds
aad
and
loop
repnz
in
lahf
pop
lods
gs
jmp
pop
or
mov
orl
cmpsl
mov
mov
mov
fmuls
xor
into
xchg
pop
arpl
ret
push
push
aam
movsb
xor
popa
push
dec
pop
mov
xor
xchg
push
mov
loop
xchg
dec
sub
idivb
add
sub
ss
cmp
mov
test
pusha
popf
fildl
xor
cmp
add
xor
mov
sub
mov
sbbl
jmp
add
arpl
cmp
jo
xchg
jge
jo
repnz
add
xor
sbb
xchg
lock
add
or
daa
jo
xor
data16
dec
movsl
dec
pop
ficomps
clc
and
xchg
xor
jne
jmp
jo
xor
inc
xor
push
mov
clts
xchg
add
or
and
sub
jb
mov
mov
lcall
nop
mov
jp
pop
shll
mov
std
dec
outsb
adc
xchg
xchg
popa
insl
inc
push
pushf
xchg
lods
xor
mov
fsts
in
mov
lods
push
pop
pop
and
xchg
mov
js
loopne
cmp
or
cmp
out
icebp
or
out
aas
sbb
js
add
fcmovnu
repnz
push
int
sbb
ss
in
std
mov
rorl
and
iret
mov
mov
hlt
movsb
sub
inc
mov
jp
adc
movl
jmp
into
fists
push
inc
mov
mov
fiadds
mov
es
pop
sbb
jo
fisubrs
les
icebp
aas
adc
push
ljmp
arpl
das
inc
shll
cltd
mov
shll
xchg
inc
je
fidivrs
into
out
adcl
stc
push
sbb
or
pop
jge
cltd
xchg
arpl
and
and
sbb
std
push
andb
in
cmp
jge
ret
mov
mov
test
inc
mov
stos
mov
sahf
push
movsl
out
cltd
test
xor
loope
add
dec
insb
fistpl
sahf
fs
push
int
add
ret
mov
jbe
fwait
mov
cmp
mov
cltd
fidivs
xlat
inc
dec
xchg
mov
movsb
jo
sub
addb
sub
daa
inc
sub
or
add
in
test
rclb
addr16
jns
pop
sub
pop
pop
xor
movsb
dec
bound
es
push
lds
inc
sti
xor
xchg
rcll
push
mov
and
jecxz
add
jl
dec
cmp
sbb
aaa
cs
and
inc
push
dec
negl
jecxz
lahf
add
test
mov
sbb
gs
add
loop
inc
inc
jnp
sbb
iret
xchg
sbbb
pop
pop
nop
out
aam
pop
cmp
rol
das
jbe
mov
in
pop
fcom
testl
arpl
mov
das
adc
ror
imul
jge
push
mov
xchg
mov
lods
inc
les
xlat
sahf
mov
lds
into
out
lds
push
adc
jnp
add
subb
scas
xor
nop
shll
cmpsb
sbb
or
and
insl
enter
mov
sbb
popa
pop
std
lock
and
inc
int3
cmp
mov
leave
mov
inc
testb
or
test
imul
sbb
inc
iret
stos
and
cwtl
jb,pt
fiaddl
add
fucomip
bound
lret
mov
aad
test
scas
sbb
adc
lahf
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
adc
xchg
sbb
jo
xchg
jge
jo
mov
pop
xchg
add
or
out
pop
outsl
jnp
fstl
cltd
mov
mov
mov
inc
adc
sahf
cli
add
repz
push
rcll
lods
pop
jne
mov
mov
pop
in
adc
imul
cmc
mov
sbb
or
inc
int
sub
xor
jmp
enter
insb
sub
xchg
dec
test
pop
scas
and
xchg
sub
sbb
push
push
push
jno
mov
push
test
hlt
mov
clc
ret
aam
dec
outsl
movsl
lea
sub
xlat
loope
push
and
sti
push
add
lods
jns
xchg
scas
and
adc
add
pop
cmpsb
xor
jp
or
ret
cmc
outsl
sbb
cmp
sub
jecxz
dec
aaa
cli
mov
mov
adc
rorl
mov
popa
in
mov
imul
mov
push
insl
add
das
mov
or
cld
dec
cmp
aad
xchg
or
mov
jnp
xchg
jae
xchg
or
ljmp
das
lret
aas
sbb
lret
dec
sbb
imul
push
adc
mov
ja
loopne
xchg
dec
dec
or
mov
loope
pop
in
xchg
jbe
es
xchg
mov
pop
mov
cmc
aaa
outsb
fisttps
jl
xchg
push
out
and
lret
pop
mov
pusha
movsl
sahf
jp
test
pop
sbb
mov
js
xchg
fidivrl
les
clc
int
or
pop
jno
sahf
jno
inc
add
aaa
cmp
jle
mov
sbb
cli
cmpsl
stos
pop
xor
test
jae
sub
xor
stos
loope
test
inc
xor
and
addr16
mov
xchg
fsubrp
dec
xor
call
pop
xchg
jl
pop
lea
pop
popl
mov
sub
or
insb
dec
shl
push
dec
cmp
mov
push
mov
push
mov
iret
sbb
pop
loope
into
rolb
int
sbb
sahf
iret
mov
cltd
inc
push
mov
cmp
mov
aaa
ficoml
sti
test
enter
mov
mov
xchg
dec
sbb
xor
bound
add
or
js
dec
pop
mov
outsb
sbb
pop
jno
popf
or
es
mov
mov
sarb
add
xor
jo
push
in
and
and
out
xchg
int
inc
inc
jo
jnp
jle
stos
jnp
in
mov
cmp
mov
push
adc
xchg
sub
mov
jbe
ljmp
sub
dec
leave
insl
sbb
cmp
adc
add
stos
pop
add
jg
cmpsl
cmc
addl
dec
andb
das
and
sbb
cld
pop
sbb
push
and
outsl
add
mov
in
dec
jmp
mov
loope
or
xchg
movsl
stos
xor
mov
mov
pop
push
aas
add
movlps
and
imul
push
out
adc
test
arpl
scas
aaa
or
dec
mov
adc
lret
leave
repnz
add
clc
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
adc
in
jmp
jge
jo
pusha
scas
lods
outsb
xchg
cli
pushf
jbe
xor
xchg
xor
mov
add
xchg
jmp
repz
shll
popf
push
sub
stos
mov
inc
lret
fisubrl
lods
fisttpl
clc
lods
lods
xor
test
mov
filds
arpl
sti
sub
lds
add
sbb
pushf
push
sub
outsb
jle
jnp
sahf
push
popa
inc
jmp
cld
xlat
adc
dec
push
lea
loopne
sahf
cmp
xor
lds
mov
jmp
pop
lods
loope
sbb
mov
pushf
imul
mov
cmp
sbb
sub
xorb
cltd
fldt
pushf
and
cltd
cmpl
inc
and
cmp
push
movsb
sbb
int3
gs
scas
sbb
cmp
adc
jns
xchg
decb
jmp
adc
push
inc
xor
and
por
in
add
jbe
jns
jae
fsubrl
xor
cmp
in
mov
xor
pop
out
inc
fisubrl
mov
imul
imul
int
imulb
adc
arpl
or
fbstp
jp
push
in
mov
mov
fdivrl
mov
and
jne
pop
lock
jge
cmp
cmc
cmp
add
and
adc
jl
xchg
sbb
imul
inc
pop
push
mov
adc
mov
stc
stos
ljmp
int3
push
lcall
cmp
and
test
jge
xor
fcomps
dec
add
inc
sub
xchg
mov
xchg
lods
dec
lods
or
jne
add
out
imul
stc
push
scas
out
imul
flds
and
xchg
jne
rcrl
xchg
or
cwtl
mov
xor
lahf
outsl
and
sub
nop
fwait
js
das
adc
pusha
incl
mov
rcl
mov
sbb
sbb
movsl
daa
jne
cmp
or
fnstcw
pop
ljmp
mov
pop
arpl
jp
hlt
ret
mov
adc
mov
push
mov
sbb
std
push
push
adc
cld
mov
shrb
ss
xlat
push
cwtl
je
mov
jno
mov
iret
add
cmpsl
lock
iret
xor
ljmp
xor
sub
mov
addb
pop
stos
adc
mov
gs
inc
sub
nop
cmpsb
in
push
dec
xchg
mov
imul
sti
mov
in
mov
pop
outsl
mov
stos
fcomps
stos
rorl
pop
icebp
jge
decb
out
cmp
test
xchg
shl
leave
pop
dec
mov
mov
xchg
pop
xor
and
fstpl
cld
and
inc
sub
monitor
push
fnstsw
jo
sbb
push
ret
mov
imul
pop
mov
in
mov
pop
add
movsb
jno
loop
adc
jmp
cmp
jmp
cmpsl
popf
das
xchg
icebp
xor
test
push
jne
adc
push
jae
pop
fldenv
add
pop
jecxz
aam
aaa
adc
shrl
cmp
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
enter
jo
xchg
jge
jo
cmp
pop
xchg
sub
movsb
fadds
in
gs
ret
loop
sti
in
xor
enter
inc
sub
jmp
out
pop
je
insb
std
lahf
lock
xchg
icebp
add
dec
shll
cmpsb
fistps
sahf
or
inc
and
add
in
stos
add
out
sub
movsb
div
inc
aas
loop
lock
lcall
sbb
pop
jno
cmp
push
ds
dec
gs
mov
cmpsl
add
push
mov
cmp
dec
ljmp
loopne
mov
mov
dec
ficomps
ljmp
addr16
pop
xor
scas
adc
mov
sub
enter
pop
sti
pusha
out
xor
add
mov
bound
stos
pop
in
cs
mov
mov
je
adc
or
inc
sbb
mov
cli
lock
xchg
cmp
fdivs
sbb
outsl
inc
cltd
movsb
test
sub
ss
out
das
insl
aad
popa
xor
jmp
loopne
xlat
daa
dec
dec
push
xchg
jge
push
jae
add
adc
test
loope
int
hlt
mov
addr16
push
mov
aas
lds
lret
pop
mov
mov
enter
dec
out
sti
ljmp
pop
out
cs
jns
dec
cltd
push
xlat
outsb
out
fs
mov
inc
scas
inc
or
test
pop
lock
adc
mov
dec
xchg
mov
das
or
jg
mov
out
lock
lds
lcall
pop
xchg
enter
mov
in
es
out
fcompl
mov
call
out
dec
sub
nop
push
movsb
out
ja
inc
dec
shrb
iret
mov
add
lea
jmp
sbb
in
lret
mov
popa
outsb
inc
call
inc
inc
push
imul
mov
fstpt
inc
cwtl
mov
leave
and
imul
popa
sub
cmp
and
mov
jle
xchg
in
fistpll
ljmp
sub
push
inc
jle
stos
add
dec
or
push
mov
stc
mov
dec
push
stc
insl
sbb
mov
cmp
jp
divl
or
inc
xor
sub
ja
jns
decl
lcall
out
and
xor
scas
push
cld
mov
dec
adc
fwait
xchg
rcrb
loope
push
cmp
stos
out
adc
cmp
mov
adc
scas
inc
sub
daa
lods
xchg
inc
lock
xchg
push
imul
loopne
inc
inc
subb
xor
mov
jnp
sahf
in
outsb
push
gs
ss
ljmp
out
pushf
movsb
test
pop
lret
je
xchg
adc
jle
add
test
jne
addr16
mov
pop
adc
sbb
adc
jecxz
dec
xorl
js
aas
pop
push
sub
adc
in
aam
xchg
into
push
mov
mov
cmp
outsl
js
add
adc
cmp
cmp
push
jo
xchg
xor
ja
adc
call
lret
push
pop
pop
pop
into
fucompp
mov
push
fildll
shrb
lods
sbb
sti
nop
adc
filds
icebp
mov
jmp
cs
loopne
in
jnp
jmp
and
adc
or
xchg
jge
jo
sti
push
mov
or
ret
pusha
xchg
and
lret
cli
rcll
repz
cmp
inc
pop
stos
popf
into
outsl
mov
cmpsl
push
sbb
jns
add
jmp
push
xor
mov
jge
jno
jns
xor
push
iret
xchg
xor
call
inc
mov
popa
push
xchg
faddl
jno
cmp
add
mov
fs
cs
mov
mov
jl
sub
inc
pop
pop
loop
xor
xor
test
jle
clc
cmp
xor
jle
outsl
push
mov
hlt
cmp
mov
jne
repz
xor
pop
repnz
or
dec
in
mov
inc
jmp
jo
sub
sbb
or
mov
add
xorb
mov
sub
out
rol
sub
dec
lods
mov
int3
cmp
lods
popa
je
sbb
int3
jae
adc
push
add
int
je
test
in
movsl
and
je
push
inc
ss
jg
push
jle
and
repz
call
adc
repz
push
repnz
add
pop
sbb
mov
cmc
add
not
in
sbb
fwait
enter
clc
nop
out
test
hlt
xchg
mov
mov
mov
or
xchg
pop
ret
sub
test
mov
cwtl
cltd
sub
mov
cmp
mov
mov
xor
xchg
ss
jnp
cmp
and
mov
jge
loop
xor
jmp
arpl
fs
mov
sub
in
jbe
pop
xchg
dec
inc
cmp
mov
pop
cmpsl
mov
test
xchg
into
inc
cltd
jo
xor
lret
xor
jns
test
aas
int
in
sub
pop
scas
insb
ret
pop
xchg
mov
aad
add
icebp
cmp
cmp
lret
jmp
jno
pop
dec
inc
out
aas
cltd
jbe
adc
pop
aaa
arpl
and
cwtl
mov
sbb
pop
in
adc
inc
pop
inc
mov
scas
cmpsl
push
push
xor
inc
fistps
dec
add
xchg
push
cmp
jle
insl
push
pusha
mov
shll
pop
jne
dec
sbb
xchg
leave
cltd
rorl
pop
add
fmuls
adc
sbb
lea
push
gs
dec
xchg
clc
mov
cs
jnp
xchg
xchg
inc
lods
shrl
inc
cmp
push
mov
xchg
jnp
add
cmpl
push
add
movsb
pop
pop
loope
cmp
mov
dec
test
clc
jno
push
shlb
sbb
or
and
cmp
outsb
and
add
cs
cmp
jge
hlt
jge
flds
jp
negb
stc
mov
repz
iret
leave
inc
mov
outsl
aas
add
loope
or
cmp
in
xor
push
sti
jmp
test
push
lds
xor
lcall
movsl
or
pop
int
mov
pop
xchg
and
mov
sub
inc
cmp
cmp
mov
pop
inc
jnp
test
fsubs
insl
addr16
pop
jo
rol
adcl
xor
jmp
data16
in
int3
jne
popa
jno
imul
mov
xchg
jge
jo
inc
out
sbb
loop
jns
lcall
cmc
mov
or
enter
lds
subl
ss
lds
push
dec
or
pop
and
and
jl
fsubl
and
pop
adc
int3
test
mov
cmpsl
loope
add
fsubs
imul
out
pop
insl
push
cltd
inc
push
xchg
outsb
push
fdivl
popa
gs
mov
imul
sub
fidivrs
sub
xor
movsb
movsb
mov
mov
in
and
mov
pusha
lcall
dec
test
out
mov
xchg
cld
add
xor
mov
inc
jnp
dec
mov
repnz
daa
in
in
scas
or
test
mov
sub
xchg
push
vcvtps2dq
xor
sub
sarl
jnp
xchg
lods
ss
cmpsb
enter
sbb
hlt
jns
push
into
sahf
pushf
loopne
or
sbb
testb
dec
movl
fisttps
push
out
fldl
mov
subl
sub
aad
pop
int3
fwait
sarl
fsts
sti
pop
mov
xor
sub
in
imul
xchg
repz
xchg
sbb
stos
in
push
adcl
fldcw
imul
add
xchg
ja
out
insl
mov
mov
xchg
xor
repnz
push
test
mov
cltd
or
or
bound
mov
dec
shl
inc
pop
call
lods
or
je
mov
sub
es
jno
sub
or
fidivrl
ud2
dec
imul
arpl
out
xlat
jp
or
add
xchg
cld
lret
or
cltd
jle
bound
outsb
int
and
cmc
add
stos
dec
and
dec
dec
iret
and
jle
rcrl
lock
pop
inc
shll
repz
jo
push
cmp
push
push
sub
in
mov
stc
add
sbb
push
and
scas
cltd
cmp
sti
adc
imull
push
fs
aad
daa
inc
aas
inc
or
xchg
mov
sahf
daa
sar
cwtl
xor
mov
dec
jl
lret
cwtl
mov
xchg
push
sbb
jge
shlb
imul
adc
sub
outsl
popa
fistl
out
std
and
cmp
add
ret
sarl
fstl
xchg
test
es
mov
cld
je
sub
shlb
cltd
fwait
imul
addr16
negl
mov
and
addr16
or
lea
aaa
test
hlt
mov
into
es
shl
daa
cli
aas
mov
ja
and
push
icebp
repnz
sub
push
je
es
pop
xor
mov
leave
and
out
xchg
jecxz
xchg
outsl
int
inc
add
cmp
adc
mov
add
test
out
xchg
daa
test
daa
cmp
int
pusha
jmp
sub
sbb
loop
push
sbb
and
dec
push
lea
pop
popf
mov
test
add
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
xor
jo
jge
jo
popf
mov
dec
jl
mov
pop
and
ficoml
addr16
shl
jae
test
push
lahf
dec
xor
into
push
or
lods
test
mov
stc
lods
xchg
lret
out
je
push
fidivl
dec
mov
dec
icebp
add
test
daa
adc
fbld
push
ja
inc
push
mov
mov
or
mov
fwait
cmpb
cs
popa
inc
addb
adc
cs
inc
fldpi
mov
enter
div
leave
pop
or
sbb
and
pop
stc
iret
orl
and
ljmp
cmp
push
into
push
pop
mov
icebp
test
test
popf
shrl
aaa
sub
sti
jae
popl
mov
ret
cmc
outsb
push
push
jb
or
mov
adc
jl
dec
xchg
mov
mov
jno
cli
bound
sbb
pop
fistpl
mov
std
into
out
jno
ret
sub
xchg
or
cmc
aas
mov
je
mov
sbb
sbb
cli
jns
push
xchg
mov
div
shll
jbe
sub
jnp
push
faddl
adc
jno
cmp
lcall
adc
orl
in
scas
xlat
lods
movsl
mov
sub
push
cmp
out
push
pushf
cld
mov
rcll
xor
mov
push
popf
filds
and
pop
mov
icebp
sub
les
jp
fstpl
mov
adc
cmp
xchg
cs
insb
sub
mov
xchg
aad
push
pop
insb
push
push
and
cmp
icebp
adc
repz
pop
mov
test
loop
push
outsb
and
stc
daa
push
dec
inc
loope
xor
test
inc
in
jge
pop
cmc
pop
cmp
adc
lcall
outsb
aad
jmp
hlt
movsl
fistps
mov
xchg
frstor
scas
dec
cltd
cwtl
sub
lahf
adc
cmovno
out
rolb
inc
pusha
push
jbe
push
pop
sub
pusha
mov
push
mov
sbb
iret
xchg
xchg
add
into
adc
jmp
ret
cmp
xchg
push
in
mov
test
dec
insl
in
mov
push
sbb
inc
push
push
mov
enter
mov
subb
imul
data16
sbb
mov
sub
add
or
shrl
pop
lods
mov
ds
mov
pop
xchg
and
push
in
mov
cmpsl
or
pop
mov
cmp
jnp
push
cmc
xor
mov
gs
lock
and
mov
mov
arpl
and
lahf
stos
lret
ds
negb
loope
adc
sub
add
push
test
loopne
test
xor
hlt
pop
nop
in
outsl
std
dec
out
inc
lret
fcomp
test
lods
in
mov
in
cmp
gs
je
xlat
mov
mov
mov
movsl
sbb
xchg
imul
xor
mov
rcrl
adc
sub
add
incb
or
imul
mov
sbb
imul
aas
test
shlb
mov
sbb
fstpl
jl
xchg
cmpsl
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
xor
mov
push
jo
sbb
jo
pushf
mov
aad
xchg
pop
push
daa
push
jo
or
daa
add
sub
jle
ret
je
clc
ja
cmpsb
push
jb
push
mov
inc
xor
incl
jp
adc
daa
push
stos
xchg
xchg
sets
pop
in
dec
imul
xor
loope
aaa
inc
xor
sbb
or
adc
es
mov
popa
push
and
nop
xchg
sar
popa
xchg
or
shl
push
nop
pop
hlt
js
mov
xchg
push
xlat
or
push
loop
inc
insl
mov
xchg
jbe
popa
sahf
add
ja
in
jle
or
pop
dec
mov
popf
aam
or
rcrl
and
jl
pop
lahf
dec
leave
ds
fnstenv
cltd
int
cmp
fwait
pop
ja
xchg
imulb
pusha
xor
mov
push
out
outsl
push
mov
xlat
or
ror
or
sarb
push
mov
in
mov
add
jb
sub
cmc
add
arpl
push
es
and
sbb
imul
pushf
jb
add
add
inc
inc
add
mov
sub
add
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
and
cs
xchg
sbb
jo
popf
fbstp
std
aam
dec
mov
push
aam
push
jb
and
jl
cmp
repnz
cmp
insl
mov
cmc
std
sbb
sbb
in
insb
insb
xor
adc
push
sbb
dec
add
pop
lock
mov
xchg
popf
jno
mov
imul
and
leave
mov
jae
in
sbb
inc
cli
jle
adc
cmp
pop
test
mov
sti
and
stos
lods
cmp
pop
mov
adc
xchg
es
mov
jle
fucomip
rcrb
jb
add
lods
out
sub
rcl
test
mov
sub
or
loop
fs
inc
nop
add
adc
mov
dec
jbe
mov
sub
xor
and
jo
mulb
xlat
fists
int3
cmpsl
outsl
or
jne
jno
mov
or
xlat
mov
adc
add
push
jb
pop
cld
push
xor
or
dec
cli
and
and
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
xor
sbb
jo
jg
jo
popf
add
push
subl
sub
outsb
inc
jnp
sub
lea
in
mov
xor
jae
int
sbb
xchg
jmp
inc
mov
js
jmp
pushf
shrb
push
cmp
mov
mov
inc
and
push
pop
jbe
call
mov
xchg
xor
in
pop
orb
lods
sbb
sub
shrb
or
scas
lahf
dec
cmpsl
sbb
es
mov
push
fwait
call
syscall
lods
hlt
xorl
pushf
jecxz
jo
pop
jbe
pusha
adc
imul
xor
pop
push
mov
jbe
pop
fisubrs
scas
inc
sub
sbb
dec
cli
sub
sbb
popa
jne
or
mov
inc
mov
divb
mov
pop
rclb
jns
inc
jbe
fmull
cmpsl
loopne
mov
push
pop
cmp
enter
daa
jle
adc
dec
in
or
shl
xor
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
loop
jo
sbb
sbb
jo
and
movsl
or
sarl
xlat
jmp
mov
fstpl
invd
mov
and
add
aas
out
xchg
pop
call
cs
hlt
dec
mov
and
mov
mov
pop
inc
mov
push
or
xchg
aad
data16
sbb
pop
les
and
movsl
insl
xchg
mov
ret
sub
es
adc
sbb
adc
mov
pop
xor
cmpb
add
push
inc
lds
dec
or
mov
hlt
test
mov
in
or
call
dec
inc
push
das
xchg
gs
adc
dec
leave
mov
nop
in
sar
insb
daa
push
push
cmpsl
pop
add
in
test
dec
out
mov
xor
test
and
aas
rorl
mov
or
pop
inc
dec
and
fmull
mov
fnstsw
in
inc
mull
inc
and
stc
xchg
adc
or
mov
xor
jbe
push
lret
inc
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
data16
addr16
mov
popf
enter
xor
push
lea
push
popf
mov
loop
or
sbb
xchg
in
jle
or
inc
lds
pop
das
jmp
ret
ljmp
jge
iret
fimull
outsl
sub
push
std
adc
test
cs
xor
cwtl
movsl
and
jmp
or
jg
push
popa
lcall
and
xchg
or
test
pusha
sarb
scas
and
jbe
stos
add
mov
rclb
and
fwait
aas
mov
fdivp
jp
mov
fistpl
jmp
fnstenv
cwtl
out
sub
cmp
and
pop
sbb
adc
xor
fmull
movsb
xor
into
mov
loope
scas
and
ret
sub
cmp
cli
movsl
and
push
push
insb
cmp
mov
ja
fld1
jno
shl
mov
mov
stos
push
mov
xchg
xor
add
mov
mov
xor
add
jmp
ffree
adcb
mov
xor
jo
sbb
jo
fs
outsb
jns
into
xchg
test
pop
js
bound
sahf
pop
xchg
insl
jmp
scas
add
pop
imul
jnp
push
mov
test
inc
mov
fnstsw
gs
sbb
jp
fwait
cmpsl
and
inc
or
adc
jecxz
jne
andb
icebp
and
arpl
daa
jle
gs
pop
mov
xor
divb
loopew
shll
ss
add
lret
jnp
icebp
add
mov
jno
or
adc
test
jle
lret
sub
push
and
in
aaa
sbb
push
jae
ss
lret
lret
fnstcw
ret
mov
in
jne
xchg
sbb
pop
pusha
sub
cmp
repnz
in
xchg
sbb
mov
push
movsb
jecxz
in
gs
mov
and
xchg
sti
jb
sub
sbb
data16
loopew
loopne
movsl
or
mov
or
add
xchg
out
imul
push
lret
scas
enter
mov
sbb
push
adc
inc
or
add
cmp
je
mov
mov
jmp
scas
or
repz
test
rcll
daa
jo
sbb
jo
rcrb
xlat
mov
or
jnp
test
jae
inc
rol
in
mov
fsub
mov
mov
mov
cmpl
jae
out
lods
xchg
rcrb
push
and
pop
or
pop
outsl
call
adc
stos
test
adc
mov
idivb
inc
aam
sahf
dec
cmp
or
iret
jmp
scas
mov
pop
sub
fistl
inc
cmp
bound
mov
leave
movsb
mov
pop
and
iret
xor
das
test
scas
idivl
rolb
jo
pushf
inc
stos
mov
je
aam
or
mov
movsb
leave
cmp
jne
jg
mov
fwait
ss
repnz
pusha
outsb
push
setns
repz
loopne
in
dec
mov
sbb
icebp
shlb
push
dec
sub
sub
or
sub
popa
inc
mov
mov
lea
push
mov
cli
or
das
aas
daa
jno
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
mov
jo
sbb
jo
std
mov
shlb
mov
ror
xor
subps
push
xchg
jae
jne
aam
sbb
jnp
xor
addr16
loope
xchg
mov
dec
popf
stc
fwait
imul
pop
imul
mov
in
lret
movsb
rolb
adc
mov
inc
ja
std
inc
shll
jmp
sub
test
inc
in
fbstp
fldcw
adc
push
adc
xchg
xchg
push
jb
mov
jnp
add
mov
in
gs
bound
jl
cs
stos
pop
sti
cld
mov
movb
cmpsb
lds
push
rorl
pop
lods
imul
and
xor
out
push
pop
test
and
xchg
pop
jl
call
and
orb
push
jp
leave
xchg
test
fchs
lcall
jb
scas
iret
scas
fdivrl
insb
clc
rcrl
xor
and
cli
jmp
das
pop
and
push
xchg
push
cmpsl
xchg
das
sti
movsb
push
mov
mov
movsbl
xor
add
cmp
jmp
mov
gs
nop
sbb
and
and
jo
jns
or
in
fstps
or
ds
out
cltd
sar
notl
push
jbe
jp
mov
sbb
int
adc
out
dec
sahf
lret
and
mov
aad
sbb
xor
mov
add
es
shl
jmp
cmp
call
cmc
in
mov
call
push
jecxz
scas
push
sbb
pusha
sub
lods
fadd
xchg
push
adc
and
aas
call
out
or
jne
cltd
popa
jnp
and
leave
xchg
ljmp
movl
fisubrs
rcrb
or
movsb
sbb
or
clc
lods
test
adc
lods
add
push
jmp
or
mov
inc
jmp
cld
cld
les
loop
or
adc
out
push
andb
test
or
jbe
ret
pop
push
jno
sbb
mov
mov
fistpl
inc
lret
cmpsl
jecxz
mov
push
das
adc
cmp
xchg
lods
cmp
incl
add
movl
jmp
aaa
dec
rcrl
jno
repz
enter
ja
es
push
and
jo
jg
jo
pop
sub
mov
adc
out
scas
das
and
push
lcall
fdivp
inc
lods
scas
xor
cld
fwait
add
fidivl
loope
add
fidivrs
bound
push
andb
push
jecxz
push
xchg
and
mov
call
lock
and
cmpsb
xorl
and
adc
mov
into
repnz
out
xchg
cli
lret
sub
out
dec
mov
out
out
fcmove
mov
stos
adc
jbe
testl
into
aam
sub
adc
repz
adc
xor
fucomi
hlt
mov
lret
and
mov
inc
mov
mov
and
clc
cmpsl
dec
sbb
insb
mov
xchg
fs
jmp
jb
jecxz
cmp
push
or
iret
sbb
xchg
cmp
add
add
inc
mov
int3
lds
lods
scas
adc
notl
data16
in
jb
pop
xor
push
inc
add
add
adc
popa
popf
fnstenv
pop
pop
pop
xchg
or
jmp
pop
mov
inc
call
inc
in
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
xchg
mov
dec
push
test
xor
xchg
mov
int
xchg
jle
xor
push
popf
sbb
xor
dec
add
jb
stc
mov
lea
and
sub
push
xchg
sbbb
cltd
inc
dec
push
jl
jne
cmp
mov
lods
loope
xchg
sbb
or
movsb
ds
pop
sbb
fidivrl
or
xchg
xor
adc
xor
cmc
sub
std
mov
or
fsubl
and
xchg
data16
mov
inc
daa
icebp
mov
jp
dec
ds
sub
xor
mov
enter
es
pop
cmp
and
add
jno
jp
imul
pop
fwait
jg
mov
or
test
adc
stos
cwtl
lods
shrb
bound
jae
xchg
js
inc
jge
jno
cmp
jecxz
ds
jmp
push
divl
sbb
sbb
aas
js
dec
insb
lret
scas
sub
mov
inc
jge
out
je
scas
pop
lods
dec
incl
jmp
jmp
cmp
xor
sarl
cld
push
and
sbb
jo
adc
ss
mov
xchg
jecxz
push
mov
hlt
mov
lahf
out
insl
pop
aad
pop
js
cmp
aam
push
and
jne
add
mov
out
inc
cwtl
and
push
mov
outsb
loopne
push
xor
xlat
or
fsubrs
shll
mov
adc
add
mov
sub
pop
jnp
xchg
xor
dec
xchg
rclb
cmp
adc
inc
mov
mov
test
dec
pushf
inc
xchg
push
testb
push
sarb
adc
push
push
pop
stc
adc
push
push
shrl
out
mov
inc
addr16
icebp
and
inc
movsb
pushf
mov
mov
jbe
movsl
lea
sbb
sub
jle
jne
into
pushf
inc
sub
int3
dec
iret
dec
ret
dec
adc
sub
outsb
inc
or
jno
xor
ret
repz
je
lret
mov
cmp
sarb
push
mov
push
dec
test
into
idivb
movsl
or
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
xchg
aad
lds
leave
pop
or
fistpll
insb
lods
loop
adc
hlt
cmp
lahf
mov
mov
ror
jge
xor
arpl
outsl
xchg
int
inc
data16
mov
sub
mov
adc
sbb
add
xchg
out
fisubs
pop
ret
arpl
je
adc
dec
cltd
inc
xchg
sbb
jns
adc
cmovnp
cmpsb
push
mov
fistpl
sub
pop
inc
lea
lods
hlt
clc
pop
in
out
in
sub
cmc
pushf
jae
mov
adc
lcall
and
push
or
fidivl
ljmp
es
push
and
addr16
add
sub
hlt
xor
das
aas
add
ja
ret
mov
adc
test
jb
out
es
push
sub
mov
xor
popf
mov
cmp
mov
inc
mov
iret
xor
adc
add
popa
aam
hlt
and
lea
add
call
dec
stos
ja
addl
cld
mov
pop
lahf
mov
pop
leave
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
das
dec
and
das
jo
fnstcw
jo
sub
mov
sbb
xlat
pop
stos
mov
icebp
sbb
bound
push
addb
push
adc
shll
xchg
outsb
jns
xchg
fistpll
fwait
add
pushf
xchg
push
pop
lret
ja
cmp
mov
in
and
rclb
adc
jl
add
mov
mov
int
jbe
daa
movsb
dec
jb
sub
test
fsubrp
and
nop
cwtl
push
mov
jnp
sub
test
xchg
mov
insb
xor
push
pop
cmp
ja,pn
xchg
rcrb
hlt
push
mov
sahf
mov
push
mov
xorb
cs
in
pop
dec
and
int
cmp
jp
and
test
enter
testb
push
sbb
adc
jge
or
cmp
pop
cli
aad
mov
mov
sub
xor
pop
xlat
or
clc
jl
icebp
push
ljmp
test
adc
push
cmp
test
test
or
push
popf
daa
in
sbb
sarl
ja
or
xor
fmuls
lods
lds
or
out
mov
rcll
lcall
bound
jl
pop
ss
sbb
ss
xchg
and
add
bound
mov
imul
cmc
andl
outsl
lahf
fdivrl
cmpsb
call
ja
lds
xlat
inc
pop
mov
jge
jns
stc
jp
inc
pop
jmp
add
shl
pop
dec
pop
stos
push
das
outsb
pop
mov
fcomps
pop
and
lcall
loop
iret
arpl
sub
lds
push
roll
jmp
adcl
stos
cmp
lods
cmpsb
jecxz
mov
sbb
mov
decl
je
mov
stos
aas
xor
cmpsb
push
in
loope
or
stos
ret
cmp
xor
xor
pop
scas
dec
adc
cmp
sbb
add
cmp
or
or
dec
pop
push
repnz
test
xchg
fistpl
out
movsl
out
and
ja
std
addps
iret
sub
mov
add
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
mov
jo
fnstcw
jo
es
or
lods
mov
dec
mov
pop
test
incb
in
shll
ja,pt
mov
mov
mov
xorl
mov
fwait
sub
iret
dec
jbe
sub
push
adc
scas
movsl
imul
ds
in
lahf
dec
sbbb
fldt
xchg
stos
popa
rcr
and
sub
sbb
leave
nop
pop
pop
push
fdivrl
loop
pop
push
cli
sub
js
lock
cmp
push
das
push
or
mov
lods
es
jnp
sub
testb
cmp
push
adc
mov
aam
and
sub
add
fs
lahf
push
ljmp
dec
or
pop
cltd
leave
jnp
xor
pop
add
lods
xor
xchg
pushf
imul
mov
fildll
cmp
mov
mov
inc
sub
rcrl
ret
mov
lock
inc
xchg
dec
cmpsb
fstps
push
pop
add
jl
faddp
arpl
sbb
nop
ds
pop
xchg
js
jbe
outsl
mov
fcomps
nop
cmpb
mov
push
das
int3
repnz
stc
push
jmp
ret
push
insl
jo
push
lea
aaa
push
into
jl
push
cld
scas
sub
push
outsl
data16
sub
aas
cld
mov
jbe
jg
fxch
sub
mov
popf
xor
clc
sub
jmp
dec
cli
mov
push
aas
xor
xchg
cmp
leave
call
jae
sub
ds
cmp
jg
lcall
test
test
nop
xchg
add
data16
xorl
scas
std
aam
mov
cltd
push
xor
cld
xor
pop
fsubl
lock
hlt
aad
xchg
pop
out
and
cmc
and
fldcw
lock
add
mov
mov
adc
xchg
sbb
jne,pn
or
pop
push
cmpsl
rcl
movsl
setp
inc
ljmp
cmp
xchg
lods
mov
mov
movups
adc
leave
sbb
ret
fsub
jbe
sub
rorb
pop
pop
out
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
jmp
sub
fnstcw
jo
fsubrs
add
shrl
mov
outsl
notb
pop
adc
inc
lret
add
pop
movl
rorb
xchg
xor
insl
imul
js
xor
xchg
add
rcl
add
mov
jle
std
mov
inc
mov
or
sub
enter
jae
jns
add
xor
daa
mov
les
mov
cld
dec
mov
fsubrl
mov
orl
pop
pop
fsubs
repnz
lea
add
mov
push
sbbl
or
sti
clc
lea
stc
sub
or
daa
inc
xorb
xchg
loope
jnp
mov
cwtl
sbb
mov
jnp
sbb
inc
ficoml
bound
clc
int3
sbbl
mov
rcrb
xlat
sub
insl
mov
xchg
mov
js
push
js
mov
inc
mov
pop
rclb
xchg
cwtl
lea
outsb
popa
fidivrl
js
popf
jne
cmp
cmpsb
cmc
pop
fcomp
repz
out
and
pop
ss
xor
fidivrs
lea
mov
hlt
subl
jb
mov
dec
sbb
pop
loop
and
sbb
cwtl
lods
push
imul
dec
lcall
mov
mov
sub
stos
lea
mov
xor
repnz
mov
and
sub
lds
sub
adc
insl
add
adc
xchg
idivb
stos
std
sub
sarl
mov
xor
xor
xor
pop
popa
outsb
or
std
mov
ja
jo
fcompl
pop
xorl
jbe
pop
mov
stos
sbb
loopne
lret
mov
insl
xor
dec
mov
ds
and
cs
dec
cmp
xor
xlat
clc
lock
into
std
call
loopne
or
mov
fsubrs
aam
push
fistpl
cld
inc
cmp
fnstcw
lahf
jmp
sub
dec
dec
dec
xchg
mov
xchg
mov
mov
shr
dec
repz
add
pushl
cmp
cmp
jns
aad
cli
test
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
clc
scas
sub
les
jo
out
das
mov
roll
loopne
outsb
pop
lock
xor
push
or
mov
loopne
pushf
pop
dec
fwait
mov
das
dec
mov
ret
xchg
adc
push
cs
jecxz
mov
repz
push
push
adc
or
xchg
stos
pop
pop
sub
pusha
je
cmp
fldl
ljmp
daa
pop
push
mov
addb
xor
jns
mov
jge
aad
std
data16
out
mov
cmpsb
test
and
fldenv
das
shll
cs
les
and
push
inc
mov
call
out
cmp
fcmove
cli
and
fcmovnu
sbb
and
xor
inc
dec
popl
cmp
push
sub
nop
jl
aad
icebp
lahf
pop
test
and
loopne
daa
daa
cmc
xchg
cmp
xor
inc
cmp
sbb
dec
mov
mov
sarb
in
daa
xchg
sub
repz
pop
add
js
call
push
cwtl
rclb
inc
and
insl
inc
dec
test
ror
in
js
loopne
xchg
std
iret
xchg
or
lret
mov
loop
xchg
xor
lods
in
rorl
xor
imul
mov
push
jae
and
xchg
vorps
push
inc
add
add
add
add
adc
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
xor
lcall
jo
sbb
daa
mov
mov
je
xchg
data16
iret
cmp
js
cs
cmpsl
aam
jl
imul
cmpsl
add
add
pop
mov
fidivl
mov
stos
ret
test
add
call
xchg
enter
ss
jmp
xchg
loop
mov
stos
subl
dec
aad
ffreep
jb
mov
xor
loop
incl
fsubr
loopne
jae
inc
test
mov
mov
call
adc
cmp
xor
pop
pop
or
mov
ss
cltd
fwait
std
shl
dec
jbe
inc
roll
movsl
jge
test
fcoml
int3
jne
out
test
es
sub
loopne
ljmp
sub
fwait
pop
shll
cmp
test
addr16
dec
loopne
icebp
or
scas
aad
or
lods
shll
sbb
inc
cmp
xchg
test
je
stos
push
xchg
adc
add
adcl
and
cmp
pop
dec
pop
in
dec
mov
dec
lds
push
dec
push
xor
insl
fmuls
ja
fnstenv
int
xor
mov
outsl
and
loope
movsl
mov
xor
add
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
rol
xor
jo
lret
inc
cmc
push
jecxz
fucom
add
scas
jo
pop
add
xchg
pminub
hlt
ret
adc
insl
lds
mov
int
and
mov
mov
and
les
push
mov
sub
cli
fsubs
insb
das
test
outsl
mov
and
jnp
sbb
push
inc
adc
mov
pop
ds
sub
mov
cld
leave
dec
mov
cs
and
jp
jae
sbb
dec
shrl
pop
jg
jno
cltd
dec
and
jp
loopne
or
pop
mov
cmp
ret
sbb
xchg
in
sub
js
decl
outsl
xchg
mov
loope
mov
cmp
shll
push
push
cmp
iret
es
fwait
pusha
cmpb
inc
bound
cmc
pop
mov
jmp
inc
lret
jns
pop
add
mov
mov
cld
outsl
add
mov
xchg
cltd
push
inc
sub
add
lret
mov
xchg
sub
or
fwait
xchg
cmpsl
xor
jns
push
pop
popa
dec
mov
sub
and
xchg
and
dec
mov
adc
iret
dec
lds
std
xchg
lcall
mov
sbb
test
icebp
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
xchg
es
mov
jo
jge
jo
test
das
xor
into
add
fcompl
outsb
js
cli
add
ss
jg
adc
adc
test
fstps
scas
xchg
xchg
loope
add
jecxz
xor
xchg
outsb
lret
pop
mov
adc
xchg
lret
and
and
xchg
out
jnp
jb
and
mov
pusha
jp
rclb
add
icebp
pushf
mov
jg
cmp
aas
ljmp
enter
testl
jle
or
inc
mov
dec
gs
inc
xlat
mov
jmp
inc
mov
add
decb
subb
xlat
es
or
mov
xor
fstpl
lcall
rorl
insl
int
fdivl
lahf
popa
xchg
subl
mov
cmpsl
cmpsb
push
in
icebp
inc
sub
testl
jge
rcl
mov
xchg
cmp
inc
adc
push
lret
popa
xchg
dec
roll
pop
enter
addr16
or
out
add
xor
ss
xor
mov
arpl
push
adc
add
das
pop
sbb
idivb
movsb
or
mov
ss
bound
inc
dec
sub
pop
nop
lea
push
jmp
xchg
sub
inc
sub
enter
test
outsl
pusha
cmpb
and
add
sub
sub
out
test
loope
in
sub
push
test
cmp
lods
xchg
adc
push
dec
cmp
xchg
jge
mov
fmuls
cli
inc
xchg
imul
movsb
clc
out
or
or
cmpl
jge
lcall
add
add
repnz
jle
pushf
add
shll
xchg
stc
lods
pop
xchg
cmp
aaa
movsb
ds
add
dec
scas
dec
adc
cmp
lds
gs
xor
mov
jle,pn
adc
out
lea
inc
pushf
add
aaa
inc
imul
inc
pop
mov
push
test
cmp
inc
scas
adc
dec
xor
mov
adc
sbb
inc
push
and
shl
arpl
cli
mov
jl
lods
adc
cmpsl
hlt
mov
inc
inc
leave
shrb
mov
div
out
cltd
pop
mov
sub
lret
scas
jo
and
xlat
lret
mov
add
rorl
fimuls
push
sti
sub
out
out
dec
push
repnz
mov
xlat
mov
clc
sbb
out
cmpsb
addb
or
dec
push
mov
arpl
sub
scas
pop
or
inc
scas
mov
mov
sub
repz
xchg
mov
jb
adc
pop
or
xor
pop
bound
mov
loope
mov
add
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
and
push
cmp
xor
and
jo
jns
sub
cmp
cmp
mov
in
xchg
inc
xor
mov
jmp
pop
es
cmp
mov
data16
fcoml
ror
ja
mov
ret
lock
enter
mov
leave
inc
cmp
xchg
fsubrl
int3
mov
lret
cs
mov
push
nop
mov
or
dec
ss
mov
ret
sub
mov
lahf
inc
xor
lcall
fptan
cmp
mov
cmp
cmc
xchg
mov
or
jecxz
mov
jg
mov
pop
cld
fwait
pop
fistps
push
scas
dec
push
addr16
cmc
mov
divl
imul
je
fldt
je
movsl
lahf
xor
pushf
sarb
and
aaa
xchg
mov
pop
pop
xchg
push
flds
mov
insl
inc
arpl
enter
leave
into
sarb
call
pusha
loop
dec
sub
leave
sbb
test
cmpsb
mov
sbb
or
push
and
mov
push
jmp
dec
push
fdiv
add
scas
adc
sub
dec
jmp
mov
xchg
into
mov
pusha
rorl
popf
push
or
lret
cmpsb
add
pop
jbe
mov
mov
loop
js
and
cld
rorl
or
in
xor
iret
pop
rcrb
ja
out
jecxz
subb
xor
aam
dec
movb
sbb
out
mov
fisubrs
mov
int
ret
dec
inc
scas
and
mov
movzbl
add
add
in
gs
shll
iret
push
add
and
sbb
xchg
in
enter
repnz
popa
sbb
jmp
icebp
add
xchg
loopne
inc
repnz
sbb
xchg
mov
fsubrp
add
adc
sbb
scas
push
rolb
mov
xchg
imul
jae
loopne
mov
push
in
cwtl
jge
test
and
fldt
pop
push
leave
push
push
sub
daa
cmpsb
inc
pushf
stc
imul
hlt
jg
inc
rorb
xchg
fldt
dec
sub
mov
in
decl
ljmp
js
push
movsl
addb
and
jno
pop
repz
sarb
or
mov
pop
sub
xchg
adc
add
cmp
movsl
mov
push
repz
loope
push
ds
outsb
jae
cmp
jae
rcr
ds
gs
mov
popa
sbb
bound
lds
push
stos
aas
gs
int3
repz
inc
inc
sub
add
pop
push
or
pop
leave
cltd
addr16
sbb
iret
std
icebp
stc
mov
ljmp
xchg
jmp
cmp
mov
scas
mov
inc
std
add
aam
mov
xor
hlt
es
add
inc
fdivs
mov
clc
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
add
imul
jo
jge
jo
or
mov
rorl
negb
movsb
loope
cmp
jmp
inc
imul
or
jl
or
es
inc
push
rcr
mov
xchg
fwait
push
lret
int3
outsl
dec
lds
push
sar
cmp
arpl
mov
imul
in
test
cltd
or
jl
mov
xchg
in
das
push
jle
cmp
sub
int
mov
in
dec
mov
fwait
mov
test
push
outsl
iret
jne
out
dec
mov
test
outsl
sub
ret
rorb
jbe
sarb
mov
mov
rorb
data16
fcompl
pushf
dec
push
inc
arpl
jae
pop
pop
add
or
popf
jo
into
push
jns
add
stos
cltd
push
cld
pop
repz
mov
std
inc
cmp
sahf
ja
adc
aaa
test
aad
loopne
sub
pop
shl
sarb
inc
sahf
and
pop
inc
aad
int3
add
lods
fnstenv
sub
addr16
sahf
dec
std
leave
test
pop
inc
cmp
mov
add
hlt
int
adc
loop
loopne
daa
ret
mov
add
les
lret
xor
test
pop
and
iret
data16
icebp
push
out
cmp
inc
sahf
adc
into
jb
jmp
xchg
xor
rorb
rcll
fdivl
xchg
cmpb
mov
lods
push
roll
dec
cmp
int3
rolb
arpl
inc
es
xchg
test
je
movsb
cli
sbb
hlt
push
push
lock
outsb
daa
aas
out
inc
cmc
aam
pop
xlat
je
popa
repz
outsb
pusha
mov
mov
mov
outsb
cli
fwait
mov
adc
push
add
ss
adc
shll
mov
aam
out
lret
data16
insb
arpl
movsl
jbe
inc
xlat
testb
adc
lock
xchg
xchg
add
in
sub
dec
jmp
out
sbb
repz
sbb
jne
sarl
sahf
ljmp
loop
mov
dec
loopne
sbb
cmp
in
leave
xchg
cmp
frstor
jle
push
xor
add
jnp
loopne
sti
mov
repnz
testl
and
and
mov
pop
sbb
jmp
jecxz
xor
in
xor
jae
loope
ficoml
jbe
insl
mov
pop
xlat
aad
mov
aaa
in
in
cmp
stc
adc
das
cli
fdivrs
jg
dec
jp
pop
lahf
cmpsb
push
adc
out
sub
loope
or
push
push
pop
out
jae
push
add
cmp
mov
loop
mov
addr16
jb
xchg
sub
cmc
push
hlt
sub
pop
in
test
and
jns
add
test
inc
mov
add
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
es
jo
and
jo
mov
and
hlt
ja
out
xor
and
inc
cld
mov
sbb
jae
jo
icebp
test
sbb
test
adc
sarb
les
in
int
or
jmp
shll
pop
lret
or
lods
push
leave
mov
cs
outsl
div
mov
xchg
sbb
jge
mov
dec
sahf
lret
and
or
sbb
jle
test
inc
xor
push
adc
pop
or
sub
dec
push
mov
push
pop
fs
lods
jge
in
sub
popl
stc
push
ja
push
push
jle
mov
adc
push
jg
xchg
sub
add
pop
dec
ret
mov
mov
and
pop
arpl
push
jmp
push
add
clc
inc
sub
andb
jnp
sub
jl
ljmp
mov
shll
divl
addr16
shlb
loope
inc
outsl
cmp
fnstsw
sub
sub
cmp
scas
mov
xor
dec
cmpl
pop
mov
xchg
pop
addr16
psubsb
add
js
or
dec
pusha
mov
dec
stos
jle
pop
fninit
fs
and
mov
cltd
addr16
push
out
shl
sbb
sub
test
out
xchg
or
or
cmpl
and
lcall
inc
in
mov
repz
std
jmp
mov
daa
jb
push
out
push
ficomps
fwait
mov
pop
cltd
push
cmp
jge
or
jnp
adc
xchg
test
xchg
popf
flds
arpl
inc
mov
in
stos
repnz
push
rcll
jecxz
sti
add
inc
popf
data16
fildll
xchg
mov
inc
mov
inc
pop
int3
adc
out
pusha
into
cmp
mov
call
mov
outsb
jp
mov
scas
sbb
or
pop
mov
lret
dec
arpl
enter
les
inc
mov
pop
jmp
stos
add
and
das
inc
lea
icebp
jnp
pop
aad
mov
sub
dec
mov
mov
xor
cmpsl
out
shl
mov
jmp
fildl
and
mov
sub
loopne
jae
icebp
sbb
orl
or
loope
or
adc
cmpb
leave
out
sub
lock
sbb
and
testl
leave
ret
dec
call
dec
sbb
and
lcall
aad
and
fnsave
mull
xchg
enter
js
test
jnp
pop
xchg
or
or
out
jne
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
mov
lret
jo
and
jo
pop
bound
jbe
xorb
mov
jle
jmp
xor
repnz
or
push
xor
loope
popf
lea
imul
mov
xorb
sub
loopne
mov
lcall
sarb
cltd
mov
mov
ljmp
push
rclb
repz
pop
add
fwait
bound
add
rclb
inc
dec
or
jne
xchg
mov
cmc
movsb
push
int
bound
mov
aaa
push
cmpb
mov
or
jbe
out
and
xor
ss
imul
iret
xchg
mov
and
mulb
cli
cwtl
lahf
jo
jo
xor
scas
pop
movsl
adc
push
adc
cmp
inc
mov
and
inc
mov
jmp
imul
rcrl
insb
jo
or
inc
or
push
cmp
int
lcall
mov
xor
jge
dec
mov
inc
stc
xor
lea
jns
pop
arpl
jne
add
mov
fdivr
aaa
scas
mov
iret
cmpb
xchg
fildll
or
sub
pop
cltd
paddb
fadds
std
stc
movb
push
add
sbb
icebp
stc
hlt
mov
inc
ds
mov
cmp
enter
lods
in
dec
inc
sub
cmc
inc
sub
mov
sub
jp
or
mov
xchg
mov
repz
mov
imul
movl
mov
ficompl
dec
icebp
xlat
jmp
int3
sbb
dec
aas
add
sti
ret
sbb
sbb
sahf
mov
adc
push
cmpsl
out
loop
adc
maxps
and
pop
fwait
cmp
popf
in
xchg
push
sub
mov
mov
out
stc
push
or
sub
sti
pusha
decb
adc
cmp
add
sub
addl
cmp
aad
mov
xorl
pop
xchg
rcrl
clc
cmpsb
pop
fnstenv
stc
stos
mov
clc
or
xchg
jbe
decb
out
xchg
push
addr16
jno
sub
inc
jmp
test
inc
jo
and
jbe
and
add
vdivps
cmpsb
lds
inc
push
pop
or
xchg
int3
jae,pt
cmp
neg
int3
jno
add
pop
iret
clc
push
fcmovnu
adc
in
popa
inc
out
xchg
add
pop
sbb
sbb
mov
jbe
jnp
aad
push
add
daa
test
aad
mov
sub
mov
lea
jbe
mov
enter
dec
adc
es
jmp
cmc
clc
fcmovnu
sbb
je
movsb
adc
js
add
add
jns
call
cmp
push
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
lret
adc
imul
rolb
fwait
loopne
popa
xchg
mov
fisttpl
pop
push
popf
popf
shl
dec
test
in
aam
mov
xchg
out
sub
jnp
fldenv
mov
adcb
mov
jmp
or
inc
jne
out
loop
cmp
pop
inc
sub
insb
in
sahf
add
xchg
subb
xchg
sub
jge
stos
xlat
gs
jmp
sbb
add
xor
mov
in
cs
jae
aaa
cli
jne
and
enter
dec
aad
mov
popa
xorb
mov
jne
out
test
jne
pop
add
test
push
lods
xchg
dec
dec
mov
ja
pushf
mov
fnstsw
push
sbb
xchg
add
call
or
std
loop
jbe
jmp
mov
xchg
stos
ror
int
fnstsw
adc
pop
xor
mov
cld
jmp
jmp
fistps
sbb
mov
leave
mov
clc
inc
dec
fadd
sbb
pushl
in
mov
jecxz
push
and
jns
jne
sbb
jecxz
ficoml
dec
dec
das
pop
stc
icebp
push
ret
push
mov
mov
test
lods
sub
sub
mov
mov
int
repz
pop
lcall
lcall
cli
or
scas
test
cmp
jg
sbb
aad
xchg
xor
orb
mov
test
adc
out
fistpl
xchg
iret
ficoms
adc
mov
subb
loop
in
mov
repnz
stc
es
or
mov
nop
pop
jg
inc
imul
jp
mov
jle
leave
or
cmp
fcoms
sub
inc
xchg
push
ret
sbb
pop
movsb
in
jp
xchg
imul
cmp
lahf
cwtl
pop
outsb
pop
sti
mov
mov
test
or
lods
push
out
pop
lret
mov
repnz
fcom
inc
hlt
or
imul
push
int
sahf
out
push
ja
jnp
popf
sbb
jae
stc
jo
lcall
aas
pop
ds
mov
jg
lahf
pushf
sbb
dec
arpl
addl
dec
divb
mov
dec
jg
push
scas
addr16
add
sub
mov
mov
cmp
iret
ret
mov
xchg
out
popf
std
cmp
rcll
adc
push
push
sbb
shl
push
xor
fists
sub
push
cmp
test
scas
cmp
or
orb
outsb
jb
dec
push
add
xchg
insl
leave
loope
adc
sbb
jp
dec
xchg
mov
imulb
dec
rorl
sti
xor
lret
imul
cwtl
push
cs
in
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
stc
jmp
fisubrl
jge
jo
popf
add
and
jns
popl
rorl
repnz
push
das
cltd
ffreep
leave
mov
clc
xlat
xchg
push
mov
mov
xor
stc
push
aas
movl
in
sbb
dec
outsb
dec
inc
rorb
add
sbb
orl
xor
mov
cmp
in
mov
mov
outsl
jle
jle
jmp
adc
pop
push
jmp
sub
hlt
and
dec
in
mov
es
xchg
ret
push
push
out
sub
adc
mov
or
movzbl
ret
js
aaa
imul
int3
xchg
ss
lret
push
add
fwait
or
loope
mov
push
pop
xchg
jge
cld
int
jge,pt
in
fs
inc
or
stos
xchg
aad
xchg
ljmp
jae
movsl
in
cmp
mov
out
push
sbb
lar
scas
jmp
pop
cmp
out
push
scas
enter
aad
cmp
rcrl
pop
imul
das
xor
pushf
test
cmp
push
cmp
add
mov
or
test
push
xor
push
lahf
enter
dec
cmp
repnz
loope
lock
fnsave
lods
inc
pop
jne
ret
jmp
push
add
shll
rolb
pop
mov
xchg
add
mov
stos
je
dec
adc
inc
adcl
repz
pusha
test
xchg
mov
pusha
jo
mov
fldl
test
inc
cli
mov
mov
negl
pop
testl
xor
push
mov
ljmp
mov
push
fstl
xor
cmc
or
mov
lock
sbbl
stos
hlt
daa
dec
dec
cltd
aad
std
mov
lret
fcmovnu
jb
enter
fildll
ss
popf
int3
and
push
mov
inc
mov
jno
pop
std
lods
mov
ljmp
loope
inc
mov
lods
repnz
adc
sub
pop
aam
pusha
jle
xlat
movsb
popa
or
pop
mov
jne
ret
dec
inc
dec
cwtl
adc
sbb
dec
in
adc
cmp
stos
into
or
push
lret
pop
inc
and
mov
stos
imull
sti
add
jns
cmp
jge
jecxz
xor
dec
inc
and
add
lods
mov
sbb
iret
fcomip
out
daa
dec
pusha
out
test
test
sbb
dec
scas
add
push
lock
pop
jl
ljmp
add
stos
sbb
cmc
pop
xor
adc
jbe
or
test
sub
std
push
xchg
scas
icebp
das
dec
push
data16
add
loopne
sbb
test
push
or
xor
outsl
and
add
stos
ljmp
sbb
je
sar
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
jle
dec
movsb
pop
into
jo
imul
lods
add
lret
movsb
dec
nop
push
pop
push
fyl2xp1
cltd
mulb
movl
mov
repnz
mov
push
test
test
inc
pop
mov
les
out
sbb
pop
dec
dec
fsts
push
ret
xor
inc
mov
pop
ljmp
inc
stc
decb
pop
mov
dec
adc
xchg
or
popf
rcrl
test
xchg
push
repnz
xor
insl
mov
sub
xchg
adc
out
xchg
pushf
mov
cmp
adc
aas
xchg
or
or
push
cs
jnp
jl
insb
call
cltd
std
mov
fisubs
pop
mov
aas
lahf
scas
shrb
adc
cmpsl
fists
dec
sbb
sahf
mov
mov
dec
clc
dec
sub
ss
sub
in
aam
or
dec
xchg
add
call
ret
cmp
dec
roll
in
add
addr16
cmp
dec
jbe
addb
jle
repnz
loopne
cmp
insl
sbb
mov
fdivs
sub
cmp
cmp
pop
das
fmull
push
adc
jl
push
sbb
insb
add
cld
stos
iret
lea
cs
mov
aam
dec
lahf
in
xor
popf
sbb
aam
movsl
pushf
push
or
insl
xor
stc
mov
cld
cmp
fs
lahf
mov
sub
cld
inc
stc
int3
ret
testl
mov
mov
and
mov
push
lods
mov
in
loopne
mov
shlb
jne
repz
fisttps
fistl
xor
rolb
in
sub
push
daa
xor
inc
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
pop
dec
push
int3
jo
imul
mov
xchg
movsl
inc
jbe
jmp
cwtl
mov
xor
or
jmp
fdivrp
fisttpll
call
repz
pop
lock
mov
sub
xor
sub
sbbb
sbb
scas
xor
clc
mov
cmp
in
mov
aaa
xchg
mulb
push
je
sub
xchg
mov
fistps
sbb
subl
mov
cwtl
jmp
inc
sub
dec
xchg
sub
jbe
into
lock
mov
mov
push
das
mov
insb
pop
mov
js
dec
scas
sub
mov
mov
cmpb
inc
insb
pop
ret
out
sub
iret
push
call
adc
push
push
insb
std
lods
mov
fldl
mov
add
das
mov
push
data16
dec
adc
scas
aad
sub
dec
andb
ljmp
and
dec
jns
shrb
pop
or
xor
xchg
call
sub
dec
les
push
jmp
inc
sbb
in
addr16
inc
jns
add
lahf
je
shrl
test
stc
xor
lock
pop
into
lods
shr
push
mov
imul
adc
inc
push
add
ret
and
shlb
ss
jbe
imul
jnp
es
int3
sbb
mov
cmp
mov
pop
pop
fwait
int3
std
jbe
push
push
cmpsl
cs
jecxz
sub
cmp
xor
jecxz
push
daa
iret
aas
es
inc
ficompl
dec
xor
or
scas
clc
sub
cmc
mov
js
xchg
mov
std
pop
lret
gs
dec
pop
fldt
mov
dec
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
lods
lods
mov
lret
imul
xlat
fwait
rorl
ja
stos
cmp
aad
push
push
adc
nop
insb
add
lret
jg
lea
or
pop
pop
test
in
add
push
je
lods
xchg
scas
xor
fcomps
jecxz
mov
lret
inc
out
stc
adc
mov
aaa
jmp
dec
xorb
clc
adc
pushf
push
mov
inc
fucomi
mov
inc
sti
mov
add
imul
sbb
or
stos
sbb
xchg
stc
push
push
mov
xchg
outsl
push
push
inc
lret
pop
or
adc
leave
outsl
ja
sub
test
repnz
test
or
stos
xor
pop
imul
pop
xchg
sbb
aaa
ss
popa
test
jg
stos
out
repnz
mov
push
in
jbe
mov
sahf
mov
and
jno
sub
fisubrs
or
lock
cmpsl
in
mov
jl
dec
sub
xchg
cmp
repz
in
sbb
jae
cwtl
rcrl
out
xchg
rcrl
dec
xchg
stc
sub
loop
pop
inc
push
aam
into
and
cs
repnz
adc
out
jns
ja
xchg
cmpsl
gs
ds
sbb
cmp
fwait
cmp
iret
inc
push
sbb
pop
test
cltd
lret
shll
sbb
dec
test
pop
mov
mov
das
dec
call
cli
push
push
xchg
jb
fldenv
lock
dec
movsl
outsb
out
jnp
jl
pop
rcr
in
inc
fbstp
jmp
mov
add
loop
inc
mov
mov
mov
and
and
fs
rcrl
inc
outsl
test
jecxz
ljmp
dec
sbb
add
cmp
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
xchg
into
in
movl
jo
scas
mov
cmp
adc
je
push
fs
push
mov
cmpsb
push
movl
leave
mulb
out
repnz
stos
xchg
cmpsb
mov
pop
shrb
mov
inc
dec
cmpsb
inc
sbb
icebp
jle
cld
ss
lods
loop
cmp
add
sbb
xchg
loop
pop
mov
mov
xchg
and
mov
and
mov
xchg
popf
in
or
mov
in
push
sub
add
adc
lods
cs
outsb
clc
shlb
xor
xor
repz
or
sub
out
mov
call
adc
cmp
cld
push
fwait
int3
xchg
inc
mov
aas
cld
rcll
fimuls
inc
jl
jnp
aaa
ret
out
xor
fwait
mov
push
inc
popf
mov
fsubrl
jmp
sbb
sbb
and
mov
ficompl
xchg
cld
fisubrs
clc
cmp
xor
jbe
ss
popf
sahf
fcom
sti
add
repz
xchg
scas
icebp
pop
sub
nop
cmpsl
jnp
push
inc
fsub
addl
cwtl
pop
mov
divl
jmp
cmp
jbe
mov
pop
inc
addr16
push
sti
sub
pop
jmp
mov
adc
xchg
inc
stos
xchg
sbbl
push
xor
dec
divl
and
pop
pop
lock
sbb
jne
mov
mov
sti
push
or
adc
pop
add
xchg
imul
fistpl
rcrb
loopne
mov
outsb
aas
mov
push
aaa
jno
sbb
push
out
pop
lret
xchg
inc
and
pop
cltd
movsb
dec
add
push
pushf
mov
xchg
sti
adc
rclb
push
push
xchg
dec
popa
or
inc
mov
lahf
add
mov
shll
lahf
dec
aam
cli
repnz
out
jecxz
cli
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
fs
pop
cmpl
jo
add
stos
pop
push
ljmp
out
sub
add
inc
ror
pop
push
iret
daa
mov
xor
dec
fisttps
push
mov
jne
xchg
cmp
test
enter
jp
addb
sbb
xchg
out
cmpsl
xor
inc
jl
clc
add
popf
jnp
orb
inc
or
push
testl
pop
scas
mov
xchg
xchg
data16
dec
sbb
mov
pop
or
cli
cli
lret
icebp
lret
leave
push
jecxz
ds
xchg
mov
fnstsw
les
ljmp
movsb
test
dec
jns
call
movq
loope
mov
push
xor
fiadds
sub
loope
sub
push
gs
jb
jge
jl
test
ss
cmp
hlt
mov
jg
cmpsb
add
sub
je
cmp
cmpsl
cmp
xor
mov
cli
cmp
mov
add
xchg
shrb
inc
dec
loopne
add
imul
adc
push
rcl
sbb
loop
insb
aam
call
dec
in
cmp
xlat
test
in
scas
mov
xchg
negb
mov
push
addb
shl
jno
pop
pop
aam
sarb
jge
jg
int
sub
das
shrb
pusha
icebp
test
or
or
sub
jnp
lock
stos
push
xor
add
adc
addr16
popf
pop
cmp
pushf
loopne
and
lds
imul
sub
daa
sbbl
xlat
push
imul
xchg
jne
mov
fidivrl
ljmp
lret
or
loopne
lock
xchg
sbb
imul
bound
add
mov
sbb
mov
xor
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
mov
aam
jo
jg
jo
clc
loop
jl
fistl
addb
cld
js
sahf
jl
xchg
sbb
mov
insl
add
mov
cltd
or
sahf
stc
dec
jae
int3
scas
cld
fldt
xchg
movsl
daa
fdivs
sub
pusha
test
xchg
cmc
jecxz
hlt
inc
sub
xchg
pushl
or
mov
gs
cmp
pop
push
jecxz
jns
stos
pop
cmp
fnsave
jmp
sub
mov
xadd
idivl
push
mov
adc
sbb
lock
std
sbb
into
jg
inc
adc
xchg
popa
in
fiadds
adc
pop
dec
cmp
pop
shrb
push
mov
cmp
xor
lret
jo
xor
sbb
xor
sub
push
aaa
or
mov
aad
nop
add
cli
xadd
lahf
mov
adc
shll
imul
mov
dec
adc
dec
add
int3
mov
pop
in
jne
insb
jnp
lods
imul
mov
das
sub
ret
dec
loopne
cmp
mov
sbb
inc
add
lods
test
mov
loop
setae
dec
mov
xchg
pushf
call
pop
loop
cmpl
xchg
into
mov
in
cmp
ljmp
xlat
cmp
les
sbb
scas
test
jo
movsl
testb
mov
cs
mov
jns
faddl
dec
xor
mov
in
jge
out
pop
je
enter
mov
arpl
lods
cmp
dec
jecxz
jnp
cmp
xor
push
cwtl
lret
in
push
loopne
mov
inc
mov
lods
les
and
pop
repz
pop
cld
xor
lret
fbstp
stos
mov
mov
js
dec
cltd
xor
testl
cld
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
fsubs
jg
jo
or
adcb
inc
cmp
sub
aad
jns
and
fiadds
icebp
jmp
jg
add
cld
bnd
dec
int
cwtl
jp
xor
ret
xor
ret
push
mov
andb
sbb
dec
fs
jbe
or
pushl
pusha
lahf
out
syscall
aaa
int
lea
out
adc
popf
and
dec
jbe
add
and
sbb
out
dec
inc
sbb
ret
sahf
cmp
movsl
jg
jl
mov
mov
mov
test
clc
inc
push
outsl
pop
adc
mov
add
lret
outsb
xchg
pop
mov
push
loop
and
mov
rcr
cld
movsb
popf
and
ficoml
pop
lahf
pop
dec
rcl
mov
ja
sbb
fs
mov
or
lret
cmp
xchg
push
ret
and
filds
rcll
sbb
xchg
mov
test
or
push
and
ret
jae
add
xchg
jae
hlt
xor
push
call
clc
jle
inc
inc
cmp
sub
and
stc
inc
std
inc
lcall
xchg
mov
push
sahf
xchg
ret
outsb
aam
mov
stos
lcall
popf
scas
les
xchg
rorb
xchg
sbb
jge
jecxz
xchg
sbb
push
aam
test
test
insb
fstl
xchg
pop
or
cltd
push
dec
inc
ds
jae
addr16
or
adc
cld
inc
jne
sbb
mov
adc
mov
ss
jecxz
push
jo
pushf
cwtl
mov
ret
lods
nop
jbe
mov
paddb
in
aad
clc
and
js
ljmp
jge
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
aad
stos
push
lcall
jo
push
push
pop
dec
mov
or
aas
adc
out
clc
xor
xor
xchg
sbb
clc
push
imul
adc
xchg
sbb
enter
inc
mov
adc
mov
mov
add
outsb
jno
cmp
jb
fs
jnp
ja
outsb
test
mov
hlt
jmp
or
lods
mov
aad
cmc
sub
out
repz
pushf
ljmp
pop
mov
cmpsl
jg
aam
adc
push
aad
fs
test
fs
je
aam
mov
inc
cwtl
test
or
test
push
inc
repnz
xor
inc
pop
jmp
fimull
aas
pop
cmp
fadds
jmp
dec
push
rcrl
scas
xor
inc
std
movsl
mov
mov
sahf
xchg
das
ret
stos
popf
fsubrs
inc
pusha
loopne
and
popa
jo
add
pop
lds
call
lret
jg
jge
lea
mov
sar
fucom
rolb
call
out
push
sbb
les
cmp
adc
mov
fimull
push
out
stos
and
xchg
push
loope
mov
mov
clc
inc
mov
cmp
cmp
movb
push
test
push
inc
inc
push
mov
dec
mov
daa
pushf
jo
mov
rcll
punpckhdq
shll
cmp
rcr
movsl
inc
mov
sbb
test
aaa
popl
xchg
push
cmpsl
out
sti
cmp
ret
in
fldenv
xchg
jle
xlat
test
lahf
adc
stc
and
popa
push
js
mov
jo
jae
lods
dec
cmp
pop
fs
xor
mov
fwait
dec
vmovss
fidivs
mov
ret
outsl
fs
mov
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
sbb
arpl
xchg
fidivs
imul
in
mov
test
or
mov
nop
les
fnstcw
pop
loop
scas
xchg
popf
js
jno
scas
jmp
inc
cmp
scas
daa
pushf
mov
sbb
mov
rcrl
pop
xorl
out
test
lock
lret
mov
roll
jae
aam
dec
call
mov
popf
test
mov
gs
jg
and
mov
lea
jecxz
jno
sub
pop
fstp
ret
out
pop
mov
inc
lret
lret
jp
outsl
add
sub
outsb
fidivrl
int3
int
je
dec
xlat
dec
xchg
fdivl
pop
xlat
repz
adc
ds
mov
push
xchg
test
mov
lret
cmc
mov
mov
sahf
inc
sbb
mov
lds
mov
dec
jbe
test
xor
fldt
add
in
mov
idivb
and
dec
bound
or
in
dec
icebp
inc
xor
mov
shlb
push
stc
lcall
or
orl
mov
push
jg
repnz
dec
mov
pusha
xor
mov
and
jmp
push
nop
dec
push
aad
push
dec
mov
out
out
flds
or
push
sub
out
push
inc
mov
xchg
mov
inc
or
dec
dec
fdivrl
push
sub
cli
out
out
loope
sbb
mov
loopne
mov
sbb
mull
inc
push
pop
pushf
or
jae
sbb
outsl
inc
adc
cmc
out
addr16
cmp
shll
and
mov
psubq
mov
test
sbb
mov
iret
in
je
push
jnp
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
test
fdivl
imul
pop
aaa
push
in
pop
cmc
lahf
insl
sbb
inc
loopne
or
push
shr
out
mov
imul
mov
out
pusha
gs
sbb
outsl
ds
mov
jo
mov
dec
sub
xchg
scas
pop
adc
in
jl
loopne
enter
arpl
test
xchg
mov
arpl
and
sti
cmpsb
out
or
lock
pop
lahf
mov
aaa
int3
gs
ja
popa
or
sub
pop
bound
mov
push
incb
mov
sbb
insl
mov
pop
cli
loope
iret
lcall
mov
jp
aaa
mov
shr
test
inc
push
sbb
sbb
pushf
jns
pop
adcl
scas
repnz
adc
xor
add
out
dec
push
loopne
leave
xchg
std
fcoms
jmp
leave
out
add
mov
jmp
lds
pop
xchg
mov
dec
xlat
popf
hlt
sahf
repnz
aad
fstps
jp
cmp
stc
in
dec
push
mov
rclb
stos
movups
inc
aad
pushf
push
js
mov
or
cmpsl
lds
add
dec
adc
cmpsb
mov
stos
xor
in
popa
xor
cmp
leave
xchg
arpl
lret
gs
lret
cmc
jne
cmc
insb
lret
add
fildl
movsb
xchg
repz
mov
in
pushf
xlat
xor
cs
jae
pusha
or
lcall
lods
test
jmp
push
jne
xchg
loopne
aaa
lea
xor
add
lahf
lcall
or
cld
test
xchg
cmp
mov
dec
push
inc
popa
jmp
mov
cmp
jmp
push
dec
sbb
in
mov
lret
push
stos
sbb
cmpsl
sbb
test
jmp
sbbb
cltd
js
mov
fsubrs
jo
imul
ds
pushl
test
sbb
jnp
imul
imul
les
sarl
push
into
lret
mov
sub
es
loop
ljmp
or
movsl
xchg
dec
int
sub
out
clc
push
sti
dec
lret
jmp
daa
in
fldl
stc
push
lahf
pop
push
mov
insl
push
add
je
fnsave
xchg
jecxz
push
les
mov
pop
xchg
cmc
dec
addr16
push
subb
sbb
push
out
sbb
out
dec
fcmovnu
jg
ss
fbld
mov
rcrl
je
or
xchg
arpl
fstps
stos
xchg
adc
or
fsts
mov
insb
push
test
test
das
dec
inc
sub
scas
and
mov
adc
iret
xor
mov
fistps
out
mov
push
cmpsb
adc
xorb
xchg
lcall
dec
inc
pop
and
pop
icebp
loope
mov
mov
clc
or
into
mov
sti
imul
or
push
mov
or
or
sub
xor
xchg
xor
cmp
mov
rcl
mov
loopne
aaa
les
gs
inc
ja
int3
sub
cmp
jmp
jne
mov
push
loop
je
or
popa
sbb
popf
fstp
clc
cli
lea
sub
mov
sub
xchg
subl
cmp
arpl
in
or
jae
add
je
push
cmp
push
fisubrs
lret
mov
sbb
leave
int3
mov
cmp
loope
daa
lret
or
pop
outsl
out
test
loopne
imul
jmp
clc
icebp
mov
icebp
ficompl
into
add
fdivs
imul
xlat
in
dec
dec
jg
mov
pushf
aaa
mov
inc
jae
gs
mov
popa
xchg
fsubr
mov
and
popf
inc
addr16
mov
cmc
cmp
inc
into
mov
scas
push
hlt
pop
inc
das
shlb
clc
lret
mov
push
sbb
or
arpl
rcr
mov
and
dec
and
jno
mov
gs
jne
push
les
test
add
xchg
std
xor
sub
in
lcall
fisttpl
cmpsl
mov
and
addr16
or
repnz
mov
fisttps
test
or
sub
fldcw
and
das
mov
std
inc
or
sbb
push
scas
mov
adc
pop
sbb
xorb
dec
inc
add
adc
clc
jnp
sbb
nop
xchg
sub
inc
lea
add
or
xchg
testl
jae
js
scas
loop
daa
cs
jbe
xchg
jge
sbb
insl
ja
mov
sub
int3
pop
mov
imul
dec
movb
inc
scas
jnp
cmp
mov
scas
movsb
adc
dec
push
pop
mov
clc
pusha
and
xchg
mov
adc
loopne
leave
test
adc
and
pusha
adc
push
cltd
mov
movsl
pop
push
cmpl
mov
fdivl
movsl
and
jns
jbe
pop
popa
xchg
cltd
xor
mov
push
ficoml
orl
into
cs
shrl
mov
jg
or
jb
hlt
sbb
stos
and
push
xchg
cmp
cld
repz
add
sub
imulb
cmp
out
lds
cmp
push
lahf
mov
fdivrs
cwtl
jo
sbb
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
pop
dec
and
mul
jo
imul
cwtl
outsl
jne
xlat
pop
pop
mov
adc
ret
sarb
jo
std
mov
stos
cwtl
out
or
popa
scas
lret
repnz
add
dec
lahf
rorb
inc
test
cmpsl
xor
cltd
adc
jo
inc
sbb
dec
lret
outsl
or
cmpb
sub
call
cmp
cmp
mov
jbe
add
lret
and
gs
imulb
shlb
shll
fiadds
push
cmp
sub
mov
inc
pusha
imul
cmp
stos
or
or
stos
lret
les
cmc
mov
jg
xor
lret
stos
and
adc
xor
push
inc
mov
jmp
push
add
in
or
dec
push
mov
cmp
shl
rol
pop
lods
pop
pop
std
mov
mov
xor
xchg
push
in
clc
data16
in
or
sub
dec
bound
sub
ja
iret
or
or
dec
icebp
push
and
pop
xchg
add
xchg
in
pop
pop
subl
pop
mov
lods
jae
stc
jb
negl
movsb
pop
sti
sbb
cwtl
sbb
out
hlt
lret
mov
loop
xor
cli
xor
lea
ret
test
sub
test
mov
in
push
dec
pushf
push
sahf
ds
icebp
out
outsl
stos
mov
pusha
leave
cmp
pop
fisttps
cmpsl
mov
mov
cmp
mov
cmp
int3
clc
test
fsubs
and
pop
mov
out
imull
push
sbbl
sub
iret
cmp
movsb
cli
and
ds
pushf
jns
pop
jge
sti
jge
sub
mov
aas
xchg
pop
xchg
and
mov
inc
call
cmp
mov
pop
stos
lcall
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
mov
jo
imul
ret
sub
and
fisttpll
out
fadd
daa
rcl
fsubr
sbb
mov
mov
mov
outsb
xlat
cwtl
inc
mov
inc
repnz
pop
enter
add
nop
addr16
xlat
inc
add
jge
test
addr16
push
arpl
mov
sbbb
ja
movl
cmp
repnz
xor
push
push
mov
cmp
mov
inc
repnz
out
and
mov
stos
pushf
and
push
ja
scas
dec
jbe
shll
or
add
pusha
xor
and
repnz
xchg
jo
jnp
les
sub
ss
mov
outsb
mov
mov
fwait
lods
jl
cmp
stc
mov
ficomps
xor
xchg
nop
xchg
ror
sub
outsl
push
mov
jae
mov
fs
std
mov
push
mov
lea
mov
cmp
div
add
fwait
leave
mov
inc
dec
loopne
lods
stc
hlt
mov
xor
mov
nop
adc
jg
fdivs
xor
xor
std
or
outsb
cmp
mov
test
scas
loop
inc
inc
add
cmpb
psubb
jbe
dec
add
lret
push
pop
xor
pop
shl
jp
or
sarb
imul
dec
dec
push
fistpl
cs
pop
cmpsl
fdivrs
jae
adc
or
push
mov
push
jmp
or
stos
hlt
and
xor
mov
add
mov
mov
cld
cltd
dec
ficoms
pop
xchg
jecxz
ror
in
out
adc
repnz
popa
movsb
popa
out
popa
push
and
add
add
stc
hlt
mov
cmp
mov
jge
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
mov
jo
jg
jo
fsubrs
cmpsl
fisttps
scas
sbb
mov
mov
add
shll
cmp
push
xor
add
push
popf
mov
jp
mov
test
xchg
jnp
xchg
movsb
mov
test
sbb
pusha
pop
roll
jno
push
pop
popa
sbb
mov
daa
outsl
xchg
movsb
sub
mov
in
lret
repz
jl
call
jmp
outsb
pop
sub
xchg
and
inc
pushf
xchg
jbe
movsl
bound
adc
out
mov
rorb
ja
xor
xlat
fwait
jmp
jmp
cli
push
and
mov
test
pop
xchg
pop
aaa
mov
and
xlat
bound
pop
sbb
repz
mov
inc
sbb
inc
pop
int3
or
out
mov
ret
sbb
movsb
lds
dec
xchg
gs
jl
adc
dec
jp
out
repnz
pop
push
test
decb
mov
xlat
sub
ret
aad
jne
add
dec
adc
dec
xor
pop
mov
sbb
repnz
push
sub
mov
inc
pop
pop
lock
icebp
outsb
pop
and
mov
jne
mov
xor
add
sub
js
xor
fbstp
mov
inc
cmc
fmull
mov
push
xchg
and
adc
fidivl
or
cld
mov
mov
inc
lret
or
or
arpl
pop
adc
test
xor
pop
aaa
cwtl
out
fisttpll
cmp
scas
pop
or
loopne
mov
data16
xchg
mov
scas
in
dec
push
arpl
mov
cld
mov
mov
aad
inc
mov
fcoms
movsl
xchg
imull
je
inc
sub
dec
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
pop
and
ds
jo
xchg
jg
jo
add
outsb
aam
jp
leave
ffreep
aad
inc
inc
jmp
xchg
sbb
incb
or
int3
push
fidivs
loope
icebp
cmp
in
sub
aaa
orl
test
add
inc
and
dec
in
xchg
push
mov
pop
pop
aam
or
ljmp
enter
mov
sbb
imul
or
test
xlat
adcl
xor
jle
movsb
jbe
daa
cld
gs
hlt
sub
ret
pop
arpl
xchg
shr
jo
clc
xor
mov
stos
es
push
shl
inc
lahf
nop
mov
push
push
bound
cwtl
shll
xor
or
hlt
add
js
jbe
xchg
aas
mov
aad
push
pop
cmp
lret
lods
inc
int3
mov
stc
mov
lock
in
bound
cmp
ss
shl
adc
movsl
dec
inc
adc
rorl
push
xchg
mov
dec
dec
jecxz
push
pop
xchg
repnz
xor
or
loop
out
pop
scas
movsl
pop
jmp
outsl
and
cli
jnp
cmc
dec
mov
rorb
movsb
mov
mov
sub
xor
xchg
inc
hlt
adc
mov
scas
ja
add
cmpsl
cmpsb
add
push
add
cwtl
ret
and
cmpsl
shlb
out
push
push
push
pop
loopne
xchg
mov
mov
push
mov
scas
lcall
add
mov
hlt
or
fistpll
out
jo
xchg
jg
jo
mov
dec
int3
jne
xor
jnp
pop
fcmovb
test
sti
stos
jnp
xrelease
lahf
rolb
xor
and
lds
push
pusha
cmp
jns
test
lods
jnp
mov
jle
lahf
mov
arpl
mov
push
rcrb
fdivrs
pop
add
test
in
xchg
call
aaa
push
scas
cli
popf
ljmp
rcll
gs
dec
call
push
push
and
fsubp
test
aaa
test
cltd
test
pop
out
imul
jecxz
sbb
shlb
and
adc
mov
xchg
mov
insl
stos
xchg
in
leave
aaa
adc
fs
dec
test
test
fldl
xorl
sbb
mov
int3
pop
aam
push
fxch
jecxz
adcl
inc
out
cld
mov
inc
stc
imul
cs
push
ljmp
dec
or
fadds
adc
rcrb
imul
imul
fsts
test
cld
dec
mov
sbb
nop
imul
popf
push
push
fldenv
adc
adc
sub
mov
sub
jmp
bound
push
notl
xchg
mov
mov
sub
in
pop
out
int
inc
pop
movsl
xchg
std
mov
inc
sarl
repnz
pop
scas
dec
cmp
dec
imul
inc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
cmp
jo
jg
jo
and
ret
aam
xchg
pop
cmc
push
pop
insb
sbb
cwtl
outsl
mov
cmpsl
mov
and
add
add
aaa
lods
ret
mov
pop
pop
lods
jecxz
inc
pop
repnz
aaa
in
mov
aas
test
outsb
arpl
mov
adc
xor
sarb
jno
stos
adc
lcall
sbbb
pop
mov
pop
jnp
lds
insl
xchg
mov
imul
jne
test
test
xchg
icebp
xchg
pop
sbb
cmp
or
outsb
sbb
jnp
mov
imul
js
test
clc
pop
jns
mov
je
ret
dec
pop
rcrb
sahf
cltd
js
inc
jbe
mov
lods
cmp
mov
gs
jne
lods
dec
std
filds
into
fcoms
mov
pop
add
cld
bound
out
jmp
lahf
inc
ret
aam
aam
insb
xor
xor
mov
addb
jmp
jns
clc
in
or
push
je
jbe
aam
adc
xor
dec
xchg
xchg
sbb
pop
mov
pop
xor
repz
push
mov
jb
xor
jecxz
data16
dec
cmp
sbb
loopne
push
in
add
sub
or
sub
or
push
pop
mov
xchg
loop
lcall
ret
push
push
or
push
repnz
sbb
cmp
sbb
dec
int
stos
mov
and
out
stos
add
mov
orb
xor
or
xor
push
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
sbb
jo
xchg
jg
jo
push
jl
push
push
push
inc
add
adc
pop
outsb
sub
pushf
jmp
fisubrs
daa
xor
dec
sub
push
jno
cmp
dec
cmp
adc
lods
adc
pop
scas
sub
inc
jb
daa
fsubs
mov
mov
jp
lret
js
or
faddl
out
mov
dec
js
pop
popa
pop
xor
jmp
push
dec
cmpsl
bound
mov
cmp
push
mov
inc
adc
cmp
test
leave
leave
cmpsl
push
andl
dec
lahf
sbb
adc
repz
ljmp
jp
add
rol
add
fiadds
push
into
dec
jae
ret
adc
das
xorb
mov
inc
ret
stos
jbe
mov
scas
mov
jne
lods
jecxz
fs
xor
adc
cli
aam
sub
jmp
mov
sbb
insl
jmp
adc
loop
pop
shrl
mov
inc
add
fisubrs
popa
daa
pop
inc
cmp
insl
ds
mov
adc
adc
cmpl
and
push
sbb
bound
lea
mov
ljmp
stos
addb
mov
fistps
out
aam
out
movsb
sarl
sti
cmp
test
cmp
icebp
dec
push
stos
ret
pop
out
fs
mov
lea
sub
fistps
rorl
inc
mov
dec
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
sbb
inc
sub
jo
xchg
jg
jo
lea
add
push
shlb
jnp
insb
fcompl
fmuls
leave
movsl
mov
out
jle
dec
sbb
pusha
sbb
je
test
call
dec
dec
pop
lds
sbb
mov
cwtl
fnsave
es
adc
mov
push
insl
out
lods
outsb
pop
in
das
pop
ret
and
cmc
insb
push
nop
push
lahf
jae
repz
or
xlat
inc
inc
inc
dec
mov
lds
or
mov
jb
test
xchg
movsl
addl
mov
sbb
or
sbb
xor
pop
imul
push
mov
sub
stc
or
pop
clc
lcall
fadds
das
dec
xchg
mov
sub
sbb
mov
and
sub
add
std
jp
adc
mov
cmp
sub
jbe
jmp
or
xor
pop
lret
rcr
mov
mov
repnz
mov
cmp
or
cmp
push
add
bound
imul
mov
push
inc
cmp
adc
mov
std
data16
jmp
mov
sbb
inc
fwait
adc
or
out
mov
das
adc
bound
lods
lods
xchg
mov
aaa
outsb
push
fsubp
xlat
mov
ss
inc
mov
orb
call
add
int
add
add
rorl
add
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
push
jp
and
xchg
jg
jo
push
outsl
sub
ds
jge
adc
lods
jnp
cmp
dec
xchg
cmpsl
cwtl
lea
div
sub
mov
rcl
scas
loopne
pop
rorb
int
imul
popf
sub
arpl
loop
jmp
negb
stc
test
dec
repnz
mov
aaa
jne
push
pop
iret
cmp
xchg
fwait
movsl
ret
lret
add
fcompl
int3
jnp
or
xchg
in
mov
adc
sub
out
xor
pusha
push
outsl
data16
jmp
js
mov
dec
outsl
fs
xchg
adc
and
in
push
icebp
movsl
test
pop
lods
cmpsb
pop
add
in
mov
stos
xor
inc
jo
call
stc
fdivrl
dec
xor
push
or
clc
jo
testl
or
and
pop
insb
sub
mov
adc
lock
sti
pop
in
outsl
inc
jecxz
test
jne
cmp
lea
les
out
cmp
int
dec
andl
rorb
and
sti
dec
nop
mov
jnp
sub
dec
fcomi
mov
jl
cmpsl
ret
add
push
jno
inc
lods
mov
or
push
cwtl
mov
push
in
jl
mov
rcll
inc
testl
iret
xchg
or
insl
jmp
inc
aas
imul
add
adc
stos
add
in
adc
daa
pop
shlb
jecxz
test
dec
subb
xchg
or
add
add
icebp
mov
push
cld
push
lock
jo
xchg
jg
jo
es
pop
int
loop
ret
push
sbb
xor
fiadds
push
or
cmc
ficomps
push
ljmp
test
push
xor
dec
pop
mov
mov
test
push
push
adc
xchg
sbb
arpl
push
cwtl
mov
fnstcw
inc
pushf
adc
dec
pop
xchg
outsl
adc
ret
lahf
add
inc
mov
scas
nop
jns
dec
in
or
filds
fwait
lret
or
out
mov
jbe
or
popa
aas
or
scas
xchg
sahf
cmc
movsb
inc
call
mov
adcb
lcall
cmp
xchg
sbb
lcall
test
fucomp
cmp
mov
xlat
or
enter
test
jns
push
mov
or
inc
jo
xlat
sbb
sub
lret
shll
fnstcw
push
add
gs
xchg
jp
orb
mov
fadds
inc
shrb
mov
xlat
movsb
aad
mov
pop
push
in
sbb
cmc
push
push
dec
test
mov
imull
pop
addl
or
std
stc
sbb
push
adc
mov
out
lret
rcrb
pop
adcl
rorl
adc
pop
mov
iret
lock
xchg
loop
or
sbb
enter
jo
into
int3
mov
scas
adc
or
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
jge
xchg
cmc
jo
xchg
jg
jo
pop
in
push
xor
add
outsb
adc
jl
and
jne
dec
mov
dec
rol
push
stos
sbb
loop
test
and
add
mov
adc
inc
repnz
mov
xchg
add
dec
push
pop
js
insl
lahf
aam
sub
rclb
test
ret
pop
inc
push
add
mov
pop
dec
jo
xchg
and
test
fsts
andl
jecxz
jo
test
sbb
inc
clc
push
push
or
ret
xchg
mov
hlt
call
pop
das
jg
daa
push
and
mov
daa
addr16
jle
loop
loop
in
pop
lock
add
lods
dec
mov
cmp
fisubs
jbe
jb
cmp
add
mov
fmul
cwtl
cmpsb
clc
cmp
dec
cltd
insl
inc
pop
sbb
mov
add
pop
mov
cwtl
xchg
and
xchg
sahf
lret
ljmp
mov
imul
mov
jns
or
adc
mov
or
loopne
xlat
and
out
xchg
sub
je
imulb
xor
pusha
mov
xchg
or
shll
js
int3
int3
lds
push
std
cld
mov
mov
pop
lods
sub
sub
orb
stos
pop
cld
out
imulb
pop
add
cmc
fwait
mov
movsl
mov
xlat
fdiv
mov
or
mov
add
frndint
std
imul
mov
xor
sub
repz
xchg
jg
jo
xchg
mov
std
jge
sarl
rorb
lret
lds
cmp
xchg
bound
lods
dec
inc
fwait
mov
mov
mov
fcom
and
clc
inc
adc
fidivl
xchg
movsb
arpl
fidivl
mov
cmp
push
add
scas
scas
fldt
repz
fistpll
xchg
sbbl
pop
inc
sub
cmp
cwtl
push
in
imul
push
in
mov
pusha
mov
push
movsb
adc
sbb
mov
jno
shlb
xlat
fldcw
xchg
rcrb
outsb
or
lahf
jmp
mov
pop
xchg
mov
cmovbe
push
pop
mov
dec
push
and
push
inc
jbe
out
add
adc
mov
push
push
nop
xor
push
call
cmc
mov
mov
mov
mov
arpl
cli
lcall
sbb
inc
int
push
fs
jge
cmp
pop
or
sub
or
data16
mov
xor
jne
nop
xchg
pop
daa
pop
push
mov
out
or
inc
mov
fldcw
push
out
filds
lret
mov
xor
into
pop
test
cmp
les
push
lea
pop
add
daa
lcall
into
jg
in
adc
xor
cmp
inc
popf
nop
adc
add
sbb
jmp
hlt
sbb
rep
cmp
aaa
dec
mov
jo
xchg
jg
jo
mov
xor
sti
lea
mov
pop
and
adc
iret
sbbb
adc
dec
rcl
adc
push
add
movsb
xor
inc
cmp
jge
pop
mov
mov
adc
ficompl
push
icebp
insl
ds
mov
inc
andl
and
fwait
scas
shrb
je
sbb
shl
push
and
faddp
mov
mov
rclb
add
mov
or
inc
or
adc
inc
or
fcomps
lds
ds
mov
stos
es
pusha
jl
shr
into
out
pop
movsb
push
cmp
movsb
repz
push
inc
bound
hlt
test
jmp
pop
rcrb
int
aaa
rcll
xlat
out
jge
sbb
mov
cli
in
jne
nop
inc
add
stc
out
xor
jb
jns
adc
cmpsl
std
mov
or
leave
stos
jns
xchg
push
sar
lea
aad
jns
lahf
fnsave
pushf
in
jae
mov
adc
out
iret
dec
mov
mov
cmp
push
fnstcw
adc
stos
mov
mov
sbb
rcl
pop
adc
sahf
hlt
xchg
sub
hlt
mov
fdivrs
mov
pusha
mov
fisubrs
mov
testl
xchg
mov
pop
aad
sub
dec
sar
add
aam
push
mov
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
cmpsb
mov
xchg
jg
jo
test
pushf
sub
fs
mov
sbb
and
jp
in
and
dec
xchg
rorb
sbb
ss
fs
cltd
xchg
test
mov
sar
dec
mov
shr
int
mov
pop
xlat
addr16
push
push
inc
std
out
rol
in
fs
movsl
aaa
dec
adcb
xchg
mov
clc
or
idivb
test
jne
inc
sar
icebp
add
pop
loope
add
fidivs
in
mov
push
std
pop
test
jg
sbb
or
cmp
jno
push
aam
jmp
cli
stos
fsts
dec
es
sub
stc
lods
and
adc
sbb
bound
and
mov
add
sbb
and
jmp
mov
imul
hlt
mov
jnp
add
sub
jmp
dec
loopne
shr
subb
or
popa
jae
xchg
into
push
jb
je
add
enter
mov
shlb
mov
cmp
xor
test
pusha
jp
pushf
jno
addl
sbb
bnd
pop
std
xchg
push
inc
fmul
lods
jne
daa
xlat
lret
sarl
sub
lods
jnp
xorl
addr16
out
movsl
std
sub
scas
and
clc
xchg
je
adc
mov
cmp
enter
mov
adc
mov
sbb
pushf
jnp
test
sub
inc
mov
adc
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
pop
cmpsb
sub
push
inc
int3
cmp
imul
lret
xchg
pusha
repnz
mov
jo
aam
sub
shlb
fwait
cmp
sbb
inc
cmpsb
imul
ljmp
imul
into
and
sbb
cmpsl
xchg
xor
out
push
sbb
pop
inc
lods
cmc
pushl
add
and
pop
lahf
xor
xchg
push
movsl
ss
iret
je
cld
dec
sub
inc
and
push
cmp
into
cmp
jbe
inc
test
xor
daa
sbb
jnp
sti
std
jg
mov
push
mov
shll
gs
js
fwait
xor
pop
ret
dec
or
call
lahf
cmp
push
clc
fscale
std
sbb
out
dec
dec
lcall
mov
push
cmp
cli
outsb
ja
sbb
sub
xor
cmp
cmpl
ret
mov
fcmovnb
dec
repz
daa
dec
in
mov
jmp
cmp
dec
out
xchg
mov
mov
adc
addr16
mov
or
mov
inc
xlat
test
pop
mov
xchg
or
push
sbb
jl
adc
add
add
std
movsb
rolb
and
fadds
call
out
and
lods
dec
leave
inc
popf
fmuls
scas
mov
imul
push
mov
dec
gs
out
pusha
in
out
cmp
mov
add
inc
mov
jnp
loop
lock
dec
ret
lahf
nop
cs
sbb
test
gs
mov
daa
mov
jo
xlat
jb
or
out
mov
test
lock
pop
add
jmp
ret
cwtl
xchg
inc
xchg
test
pusha
out
bound
dec
cmp
mov
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
stos
xchg
cld
jo
jb
jo
ficoms
daa
mov
dec
ds
jns
std
movsb
push
hlt
pop
jae
mov
adc
inc
push
sbb
xor
nop
lock
lret
mov
movsl
out
mov
jbe
cld
or
cmpsb
sub
dec
pop
pop
cmp
and
iret
inc
xchg
xchg
sbb
lock
mov
fcom
inc
loope
insl
es
xor
stos
or
fdiv
loop
les
adc
sub
test
outsl
jns
or
xor
ja
roll
or
mov
mov
pop
leave
push
jmp
adc
xor
and
inc
loopne
rcr
addl
fnsave
push
mov
or
daa
out
stc
dec
dec
movsl
movsb
push
sbb
inc
icebp
push
adc
cs
push
shrl
inc
xchg
sub
movsb
jmp
stos
mov
jmp
sub
dec
xor
fucom
stc
stos
or
xchg
inc
push
scas
pop
adcb
jecxz
movnti
lret
mov
iret
pop
aam
add
mov
aaa
mov
cmp
sahf
pop
rorl
or
xor
ret
ss
notl
pop
pop
mov
push
repnz
cltd
jl
ja
cmp
push
fisubs
subb
mov
adc
mov
pop
aad
lret
sub
int3
jge
dec
or
insl
data16
cmp
addr16
sbb
add
aad
dec
adc
lea
in
dec
or
bound
pop
sub
je
xchg
fidivrs
dec
push
xor
jmp
neg
cmp
sbb
mov
std
mov
cmpsl
push
fs
or
cmpsb
mov
xor
and
enter
mov
ss
pop
gs
mov
cmpsl
pop
int
xchg
fcomi
aaa
mov
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
pop
and
jo
jb
jo
clc
jecxz
out
mov
add
sbb
mov
inc
mov
int3
ja
cli
sbb
cwtl
jmp
movl
xchg
xlat
inc
cltd
pushf
in
xor
rol
inc
sar
stc
jle
daa
int
aam
inc
xchg
mov
in
xchg
scas
ds
xchg
dec
cmp
inc
dec
aam
xor
test
sti
jge
mov
mov
pop
in
loopne
add
jmp
pop
cmc
pop
repz
pop
mov
xor
jl
mov
and
push
xor
xchg
push
outsl
mov
arpl
pop
and
xchg
and
mov
push
lock
clc
mov
sub
fistpll
mov
cmpsl
mov
lret
movb
dec
sti
movsl
jb
xor
nop
push
insl
xchg
xchg
loope
inc
and
outsl
cmpsl
mov
scas
int
mov
sub
imul
xor
cmp
cmpsb
add
pop
imul
jge
mov
gs
cmc
fmull
xchg
inc
pop
fldenv
pop
out
adc
aaa
xor
and
mov
ss
cmp
xchg
xchg
mov
sub
mov
mov
test
mov
fnstcw
loopne
fiaddl
cmpsl
scas
mov
fstpt
sahf
rcll
inc
jo
sub
lds
out
pop
fdivs
add
sti
mov
into
cmp
popa
movsb
pop
lret
in
test
xchg
mov
xchg
test
outsl
out
mov
cmp
xlat
adc
icebp
fmul
push
daa
movsl
sti
loopne
sub
ljmp
loope
push
dec
insl
dec
fisttpll
in
dec
sbbb
jno
mov
out
xchg
sub
ret
adc
cmpl
test
add
add
add
add
add
jmp
mov
jmp
or
scas
shll
jb
loop
andb
clc
jo
jb
jo
jo
loopne
std
jnp
cmp
in
xor
sub
cmp
mov
mov
orl
int
mov
and
mov
scas
and
adc
aad
lock
cmp
xchg
les
popa
gs
nop
jne
jmp
cld
xchg
lret
jb
repz
in
or
push
xor
add
mov
xchg
cwtl
dec
dec
test
stos
inc
adc
jns
dec
ficomps
fadd
mov
or
sub
adc
jo
not
sbbb
pushf
rcrl
imul
test
popa
pop
int
mov
int3
iret
enter
push
pop
adc
xor
adc
fstpt
mov
xor
adc
jg
or
out
cmp
jns
das
jmp
movsb
je
clc
dec
cmp
sub
dec
mov
xchg
jmp
sbb
xchg
and
adc
dec
mov
stos
jmp
push
outsl
pop
cmp
mov
inc
test
movl
stos
arpl
jb
pop
stc
orl
test
in
inc
aas
call
push
jae
jp
orl
aad
out
mov
xchg
push
fisubl
shlb
and
mov
lods
fisttpll
jne
test
mov
xchg
cmp
jge
pushf
orl
lret
pop
arpl
push
add
movsl
sbb
loop
inc
mov
imul
stos
pop
adc
pop
int3
test
jnp
cmp
je
add
dec
and
jo
jb
or
mov
cmp
loope
jmp
cmc
jle
fsubrs
push
repz
in
dec
rcrl
or
add
orl
cmp
lret
push
imulb
or
fists
mov
lods
cmp
mov
xor
jmp
jnp
xchg
les
sub
mov
or
jno
jo
jb
jo
and
movsb
inc
xchg
push
popf
xor
je
xchg
or
aad
xchg
aas
inc
adc
mov
dec
mov
and
push
lret
fidivrs
push
add
pop
xchg
mov
nop
arpl
rorl
sbb
add
adc
arpl
rol
sub
mov
ljmp
mov
sub
inc
lods
sahf
xorl
sbb
repnz
popf
je
test
dec
in
dec
mov
clc
or
popa
stc
inc
mov
xor
xor
lock
out
xchg
bound
ja
xor
push
loop
ret
mov
xchg
sar
ja
imul
adc
jl
mov
jl
addr16
add
fucomp
insb
pop
popf
xchg
call
int
and
and
sub
dec
and
jmp
int
in
rcl
mov
xor
push
jg
cmp
push
mov
or
or
subb
sbb
mov
jns
cmp
inc
scas
or
xchg
add
mov
push
adc
nop
cmpsl
stc
leave
adc
adc
adc
out
push
data16
push
sbb
sub
stos
out
sbb
mov
cltd
popa
pop
dec
mov
aaa
and
lods
mov
sub
stos
push
pop
hlt
or
sub
repz
insl
jge
into
rorl
out
sub
mov
shlb
leave
xor
daa
inc
loopne
dec
jnp
movsl
insw
lcall
jl
cmp
push
movsb
int3
mov
loop
cmp
aam
jge
pop
mov
or
xchg
inc
test
jbe
and
stc
fists
subl
iret
cmp
nop
in
insb
or
add
and
xor
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
sarl
jo
leave
jle
jo
pop
and
negb
pop
out
mov
dec
es
pop
shll
sbb
lods
adc
jle
fimull
dec
cs
jae
pop
stos
enter
pushw
pop
mov
sbb
or
neg
xchg
sti
and
jle
inc
sub
dec
fcoms
push
test
cltd
fadd
sahf
push
test
dec
mov
dec
pushf
jle
pop
cli
xlat
dec
cmpsl
xchg
lret
mov
xchg
in
add
test
inc
call
shr
push
push
movsl
fldt
and
mov
arpl
pop
pop
cli
ja
subb
inc
std
loopne
fnstsw
xchg
arpl
xchg
aad
out
or
dec
dec
out
lods
scas
mov
dec
or
adc
sbb
imul
pop
jecxz
fwait
cld
leave
jg
and
sub
dec
popf
test
sub
sbb
lret
aam
and
add
loopne
movsb
enterw
sub
xor
hlt
sub
mov
lret
nop
ret
xor
imull
and
lret
push
sbb
and
xchg
pop
outsl
lods
lcall
fwait
mov
inc
mov
pop
repnz
cli
mov
adc
enter
add
cmpsb
add
cmp
sbb
sbb
mov
push
push
add
out
sbbb
nop
aas
fmull
inc
cmp
rcl
cwtl
push
push
jbe
ficompl
adc
sub
test
xchg
add
test
sbbl
xor
xchg
pop
mov
pop
mov
jbe
or
mov
mov
add
and
leave
lods
jp
push
sbb
mov
cmp
jb
mov
arpl
jae
fildll
sbb
or
mov
mov
stos
iret
enter
sarb
cmpsb
cmp
sub
adc
cmp
lahf
cld
xor
fstpt
pop
subl
sub
addr16
jne
test
push
fs
and
daa
lret
test
jge
lds
xchg
sarb
stos
sbb
pop
mov
mov
pop
mov
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
sub
cmpsl
xchg
int3
xorb
jle
jo
lods
push
inc
lods
jg
movsl
and
lods
pop
mov
test
adc
out
ss
ja
test
xchg
ret
pop
lcall
xchg
mov
aam
jno
retw
cli
jno
out
lret
and
aam
popa
nop/reserved
dec
sbb
cmp
loop
pop
inc
mov
pusha
push
mov
push
insl
and
call
cmp
mov
into
add
cmpsb
and
mov
imul
sarb
mov
dec
lahf
clc
or
enter
lret
pop
and
jnp
ja
xlat
rorl
aad
cmp
mov
adc
das
mov
outsl
xchg
icebp
xor
mov
xlat
rcll
and
decl
jns
and
sti
das
adc
cltd
xchg
out
fwait
sub
jno
xchg
pushf
daa
gs
inc
les
out
jno
imul
sub
inc
xchg
call
lock
divb
xor
repnz
adc
jecxz
loop
xchg
pushf
je
xchg
clc
sub
inc
sbb
ljmp
iret
sub
jno
repz
call
test
dec
int
jg
sarb
out
fidivl
int3
mov
pop
jge
push
xor
mov
pop
pusha
jecxz
mov
xor
cmpsl
aas
mov
das
dec
insb
lret
imulb
jmp
gs
mov
adc
mov
orb
mov
mov
dec
aam
cmp
adc
or
jns
xlat
pop
outsb
insl
xchg
mov
cli
inc
sub
or
xchg
gs
cmpsb
ret
out
sub
aas
cmpb
push
lods
lods
into
xor
cltd
dec
push
aaa
adc
dec
movsl
nop
xor
subb
adc
jle
dec
dec
scas
cwtl
xor
sahf
xchg
cld
popf
sbb
mov
mov
xchg
xor
and
xchg
rol
inc
and
mov
into
fsubs
mov
inc
and
call
popa
add
push
inc
lock
mov
dec
data16
inc
dec
dec
jmp
stc
xchg
out
daa
imul
add
and
dec
xchg
out
sbb
leave
jle
jo
dec
mov
into
outsl
jle
jp
scas
dec
add
scas
add
insl
xor
and
push
test
push
out
lcall
mov
mov
inc
mov
mov
lret
scas
mov
aad
xor
ret
repnz
or
daa
sub
sub
sub
xor
in
sub
hlt
mov
push
test
xchg
jg
lahf
into
imul
or
je
dec
js
pop
push
cmpsb
stc
arpl
or
and
in
adc
push
jp
int
sub
xor
out
test
add
popf
pop
sub
mov
gs
repz
jbe
mov
popa
mov
insb
cmp
cmp
ret
aaa
cmp
mov
cmc
rolb
xor
lahf
dec
sbb
push
insl
xor
sub
pop
inc
push
cmpsl
fs
pop
fstl
pop
xchg
cmp
mov
push
subl
fwait
push
jmp
inc
into
popa
and
pop
inc
xchg
mov
or
or
movhps
rcrb
scas
or
outsb
xor
xchg
mov
jp
add
cmpsb
lea
cmp
mov
push
lea
mov
pop
mov
int
lea
mov
pop
or
call
addr16
xchg
cwtl
repz
ss
int3
add
xor
test
hlt
daa
sti
testb
loop
ds
push
xchg
fs
xchg
lock
sub
dec
lods
aam
mov
mov
fucomp
popf
mov
nop
pop
movsl
sbb
dec
add
imul
outsb
imul
jbe
inc
fildll
inc
xchg
mov
xchg
jns
or
outsl
lcall
mov
inc
push
inc
fmuls
addb
sub
cmpsb
lahf
fcmovnbe
dec
cmp
test
pop
jo
int
and
hlt
xor
jg
xlat
shr
fisttpl
movsb
dec
jl
ljmp
adcl
mov
mov
xor
dec
mov
jecxz
jae
dec
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
repnz
jo
dec
jge
jo
test
xchg
inc
addr16
jo
clc
and
daa
in
mov
adc
jo
sbb
push
stos
cmp
adcl
jp
push
jle
lret
jge
test
xorl
inc
sbb
pop
jmp
aaa
mov
lret
sbb
adcb
int3
xor
fwait
sbb
test
ja
gs
inc
jmp
in
icebp
jg
cli
and
adc
or
icebp
test
inc
push
ljmp
lahf
push
cli
pop
fnstsw
cmp
jo
cmp
insb
int3
clc
pop
mov
lods
jnp
lahf
in
imul
in
rcrb
push
addr16
sub
cmc
add
xchg
push
movsl
mov
adc
int3
sub
pop
aad
mov
sbb
andb
pop
and
dec
mov
ja
scas
fistl
sub
mov
in
xchg
xchg
aas
cmpsb
mov
and
dec
daa
jge
aad
data16
lods
outsb
ds
lret
and
xchg
adc
out
pop
pop
dec
ret
adc
sbb
jb
cltd
fimull
jo
in
jecxz
fisubrl
adc
mov
paddw
repnz
and
mov
idivb
push
adcb
call
imul
pop
aas
in
ja
ret
fcoms
cmpsl
pop
push
dec
sub
push
scas
push
mov
and
pop
loop
sbb
inc
sbb
jp
fs
push
cmp
push
dec
or
sub
xchg
pop
xchg
mov
sbb
cmp
mov
cmp
adc
mov
nop
mov
xchg
imull
mov
aaa
sti
mov
pushf
ja
mov
andl
jo
stc
adcb
scas
sbb
pop
push
pop
loopne
jo,pn
pop
mov
ret
xor
loope
push
and
xor
mov
fisubrl
es
and
dec
shr
dec
inc
xlat
or
in
xorps
pop
sbb
jno
jae
or
ljmp
out
jnp
adc
fadds
cwtl
or
inc
sub
test
and
mov
jle
aas
lret
sub
fwait
dec
cmc
iret
push
sti
mov
sarb
mov
xor
push
mov
stc
mov
dec
xor
stos
js
std
jno
adc
inc
jge
cmp
and
mov
pop
rorl
adc
add
sahf
or
hlt
movsb
shr
pop
stc
into
xchg
jg
mov
xchg
jle
lods
hlt
pop
out
jb
lods
push
inc
pop
jp
xor
fcoms
jmp
adc
cmp
lcall
and
inc
push
in
hlt
mov
adcl
mov
mov
mov
xor
pusha
adc
inc
popf
push
sub
adc
sbb
arpl
out
xor
out
movl
js
mov
mov
push
mov
inc
pushf
pop
out
or
mov
stos
sub
and
mov
xchg
add
push
ss
daa
lahf
aam
mov
push
or
mov
jge
jl
and
push
pop
cmp
cmpsl
out
push
aas
adc
jnp
mov
insb
inc
popf
jnp
mov
inc
loopne
bnd
outsb
sub
push
fisttps
call
inc
add
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
cmp
add
jo
dec
jge
jo
mov
ret
in
in
in
out
inc
mov
lret
scas
inc
in
outsl
mov
into
dec
sbb
jne
nop
jne
pusha
sub
mov
jne
data16
pop
inc
or
sbb
push
pop
int
in
fdivl
push
jae
mov
mov
and
test
testl
xor
cmp
push
das
sbb
outsb
xor
sbb
ret
lret
outsb
stc
xchg
fs
lahf
add
incb
lea
ss
loope
hlt
pop
mov
sbb
push
rcrl
dec
mov
movsb
dec
dec
subl
bound
popa
pop
push
pop
out
insl
mov
lea
enter
xor
push
fisttps
out
jmp
pop
cmp
fwait
dec
jp
sbb
popa
adc
inc
daa
jmp
cmp
gs
hlt
push
jle
mov
inc
fmulp
jl
pushf
in
cmp
stos
push
fsubrs
jno
xor
pop
movsl
inc
jne
scas
jo
lods
gs
dec
mov
lods
aam
pusha
lods
jle
sbb
add
or
cltd
int3
push
dec
ljmp
adc
cmp
or
test
lods
clc
push
in
mov
pop
cmp
sub
outsb
clc
and
push
sbbb
loop
or
leave
pushf
fwait
popa
outsb
xlat
and
aaa
lods
dec
dec
cmp
and
ss
fcomip
mov
cmp
or
aaa
imul
mov
cli
jns
sbb
push
enter
dec
nop
jp
insb
jb
xor
out
mov
pop
push
stos
rcrl
fiaddl
into
pop
jno
inc
or
pop
lods
xor
push
divb
adc
adc
lods
adc
movsl
xchg
cld
sub
sar
into
and
mov
test
xchg
fmull
rol
aaa
xchg
dec
push
xorb
rol
jmp
int3
mov
rolb
sbb
sbb
sbbl
lahf
test
mov
cli
ja
sbb
jb
hlt
ljmp
clc
push
fsubl
ja
adc
push
jmp
pop
add
mov
test
pop
mov
cmp
sbb
mov
xor
aad
mov
add
fldcw
mov
jbe
xchg
pop
div
push
insl
aaa
pusha
inc
sbb
add
or
lock
stos
push
cmpsb
lret
mov
out
dec
mov
adc
daa
insb
sub
addl
dec
inc
inc
lcall
adc
in
xorl
or
cmc
dec
lret
stc
in
cmp
popf
xchg
ds
in
insb
pop
daa
incl
or
cmp
push
aam
rcll
push
in
fldl
xor
jl
cmp
shlb
loopne
cli
xchg
xchg
lret
jecxz
testb
aas
sub
jmp
scas
sbb
mov
test
jl
sbb
mov
adc
and
jecxz
cwtl
pop
repz
outsl
jns
push
sbb
mov
mov
jge
jnp
mov
aam
add
lahf
mov
rcll
xchg
ja
sbb
pop
jp
inc
pop
scas
xor
mov
out
sbb
inc
fnstenv
fiadds
pop
insl
mov
xchg
adc
dec
fwait
aad
iret
jb
inc
sbb
and
mov
lods
rcll
ficoms
or
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
pop
das
pop
mov
jge
jo
mov
adc
fwait
or
xchg
rolb
xor
cli
insb
fdivrl
fs
insl
push
push
inc
add
add
dec
dec
insl
lock
es
sub
jae
inc
push
mov
adc
lea
xchg
push
popf
popa
mov
xor
std
mov
or
ror
jg
push
adcl
loop
jae
loope
movsl
push
mov
xchg
jl
adc
je
test
jg
subl
add
jno
pop
inc
int3
divl
sahf
mov
push
sub
in
addr16
outsl
movsl
or
ljmp
mov
push
inc
xchg
mov
pop
dec
rorb
mov
js
mov
call
jecxz
pushf
addr16
sub
cmp
push
pop
xlat
mov
dec
rorb
or
dec
mov
repz
shl
idivb
orb
ljmp
add
daa
jb
sub
cs
int3
mov
xor
dec
loope
xor
nop
push
mov
inc
push
int
cmc
ds
imul
jg
xchg
cmp
mov
fs
out
cltd
cmp
int3
lret
push
mov
mov
jmp
mov
shl
ficomps
xor
adc
inc
adc
into
or
mov
daa
ljmp
mov
jle
jo
ret
lods
mov
popa
jbe
popf
ret
sub
pop
lea
jae
inc
xchg
mov
sbb
cld
bound
scas
add
lds
repz
jb
push
cmp
xor
frstor
mov
mov
dec
cld
mov
cmc
rcrb
adc
mov
dec
xlat
lea
movsb
add
inc
push
mov
lods
cmp
aad
cmpsb
jno
mov
sbb
inc
fnstsw
adc
fwait
cmpsb
push
int3
sub
push
dec
mov
xor
idivl
mov
out
sbb
jne
sbbl
adcl
dec
pop
cltd
cmp
jnp
test
loope
ret
jge
push
test
popf
or
mov
mov
out
add
xor
fwait
cmp
lea
out
aam
and
stos
fistpl
inc
rcrb
sub
rcrb
cmpsb
repnz
or
pop
fwait
cmp
xchg
aad
push
inc
enter
adc
decl
rolb
lcall
mov
pop
movl
push
jg
andb
es
frstor
loop
push
jmp
inc
or
inc
ja
jl
mov
pop
jle
sbb
lret
roll
imul
xchg
and
scas
add
insl
xchg
stos
fwait
inc
movsb
push
xor
lock
add
mov
addr16
scas
test
in
cmp
shr
cmp
push
push
imul
cmp
and
add
xor
pop
sti
mov
jae
inc
mov
pop
cmp
inc
out
addr16
popa
mov
data16
in
stc
outsb
int
xor
les
mov
popf
imul
and
push
fwait
mov
push
fs
push
pusha
mov
sub
jge
inc
mov
dec
cmpsl
dec
or
inc
adc
scas
dec
pop
or
arpl
mov
jno
dec
or
aas
xor
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
xchg
loop
xchg
jo
dec
jge
jo
push
mov
fildll
add
outsb
push
push
ds
outsl
jmp
lock
mov
push
rorb
cmp
sbb
lret
fstpt
pop
mov
xor
jecxz
test
popa
sbb
sarl
push
enter
movl
xor
mov
lahf
movsl
scas
sub
add
js
mov
pop
test
lds
leave
jge
cld
jo
je
sub
aad
adc
mov
adc
xchg
jae
sarl
fnsave
scas
aam
in
or
pop
inc
pop
sub
ret
cltd
dec
dec
jecxz
or
cltd
pop
lods
add
jl
mov
sub
cmp
pusha
sub
dec
push
pop
push
xchg
sbb
movsb
lret
xchg
daa
dec
out
dec
push
or
lret
adc
mov
and
inc
adc
or
subb
inc
mov
sub
filds
mov
ret
addb
xchg
out
xor
xchg
add
imul
or
xor
lds
dec
xor
iret
cmp
dec
cmp
int3
mov
push
lcall
clc
dec
subl
mov
jp
inc
sbb
in
jp
mov
pushf
jo
xchg
mov
je
out
cmp
int
pop
jae
loope
or
adc
dec
cmpsb
lock
mov
arpl
xor
mov
sbb
fimull
mov
call
sub
inc
dec
data16
xchg
pop
fldenv
insl
inc
ja
jne
add
dec
add
add
bound
stc
pop
getsec
push
mov
adc
lcall
adc
xchg
and
push
test
fs
push
mov
pop
mov
inc
into
mov
test
mov
jl
loop
iret
enter
sbb
cmp
call
inc
iret
cmc
out
dec
xchg
std
mov
stc
xlat
fdivs
mov
push
aad
jmp
lret
xor
and
or
ss
jmp
xor
mov
das
sbb
mull
or
ret
xor
push
pop
aas
fwait
dec
cmp
or
imul
sbb
and
lahf
out
jno
fsubr
dec
cmp
out
push
mov
jp
ret
rcrl
pop
outsl
in
jmp
push
nop
scas
and
je
xchg
mov
jno
push
mov
pop
iret
mov
pop
stos
adc
lods
lods
adc
cmp
xchg
imul
pop
push
ret
jb
mov
cmp
mov
jecxz
test
bound
sbb
js
push
sahf
in
mov
sarl
cli
mov
push
insl
xchg
push
stos
dec
mov
jl
pop
jle
cmp
inc
std
bound
sbb
mov
lds
scas
and
push
xor
outsl
lods
cld
clc
sbb
fisttpl
addb
dec
mov
xchg
push
outsl
mov
inc
ret
ror
xchg
add
mov
pop
dec
or
and
insl
sbb
jg
xor
pop
pop
xlat
sub
jl
imul
sbb
add
adc
pop
fwait
nop
xchg
outsb
dec
addr16
or
in
sbb
pusha
int3
iret
out
aad
mov
sbb
add
mov
addb
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
shll
jo
dec
jge
jo
mov
sbb
mov
jnp
fstl
add
push
adc
les
in
xor
les
add
mov
and
enter
inc
cli
push
aaa
pushf
decl
ds
adc
inc
sub
mov
and
imul
icebp
xchg
cli
daa
pushfw
add
or
sub
sahf
fs
jmp
push
xchg
sbb
rcll
scas
add
cmp
les
pop
push
jb
add
xchg
aad
sbb
mov
push
jle
aaa
outsb
cmc
adc
lea
test
xor
sub
out
and
push
push
push
mov
lahf
shrl
fmuls
mov
lds
dec
push
sti
xor
scas
popa
mov
jb
or
fcmove
xchg
lahf
push
mov
loopne
cmp
jb
xor
cwtl
mov
loope
stos
pop
dec
fistps
ss
je
xor
pop
lds
das
in
test
mov
int3
mov
mov
and
sbb
or
add
push
adc
aas
and
jns
aaa
gs
xchg
ss
mov
push
fidivrs
shlb
lahf
adc
aad
pop
xor
hlt
test
arpl
fstps
lods
loopne
dec
push
dec
xor
aaa
push
fstp
addr16
ljmp
iret
out
dec
xchg
sti
mov
ret
outsl
outsb
cmpsb
push
dec
mov
add
fucomip
mov
gs
call
and
mov
stos
cltd
lret
and
adc
jle
sbb
and
jp
sub
or
cli
lods
cmp
adc
xor
adc
dec
jb
or
and
flds
jnp
or
xor
int
enter
jno
paddsb
icebp
jo
push
dec
and
jo
xchg
shll
js
loop
pop
lea
fisubrs
out
and
and
inc
mov
lahf
cmp
xchg
sbb
mov
xor
repnz
es
cli
nop
bound
test
mov
out
push
add
inc
les
imul
xchg
inc
mov
jae
mov
add
dec
fistl
push
cwtl
xchg
shll
cmp
sub
sub
jnp
push
push
insl
fs
mov
out
aad
inc
repz
pop
mov
aad
popa
mov
data16
mov
frstor
movsb
cld
orb
pop
dec
jne
mov
in
lds
push
push
sbb
sbb
pop
jo
scas
mov
xor
pop
mov
mov
sub
mov
and
xchg
mov
xchg
xchg
or
cltd
cmc
fadds
ljmp
and
xchg
mov
je
movsb
fidivrl
or
fsubrs
dec
sti
lret
mov
jmp
test
xchg
and
jae
jno
mov
cmp
cmp
xor
lret
lahf
fs
and
push
sub
in
rcrl
dec
test
ret
mov
xor
in
shlb
ds
push
aad
shlb
fidivrs
jge
lea
fdivl
push
ret
cmp
adc
mov
pop
mov
mov
enter
in
push
push
dec
cmp
js
jg
scas
lds
lahf
pushf
or
jno
cmp
xor
mov
mov
dec
mov
pop
push
xlat
js
lret
mov
pop
es
adc
test
add
cmpsl
aaa
and
cld
scas
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fisubrl
lcall
insb
mov
cmp
mov
mov
push
into
cmpsl
loopne
lea
call
lds
and
cld
mov
mov
fst
jne
mov
sbb
and
outsl
fucom
hlt
jae
das
sbb
push
je
lahf
jp
xor
push
xchg
cwtl
jnp
xchg
faddl
shr
jmp
sahf
pop
pop
add
sbb
sub
mov
and
test
inc
in
rcrl
xchg
cs
pop
jp
adc
lods
xor
pop
xchg
pop
push
jne
mov
andl
je
in
enter
lock
ret
push
test
sbb
lds
or
icebp
push
xor
rolb
fldcw
mov
and
int
and
xor
xabort
xor
dec
and
or
outsl
test
jb
jl
jmp
sbb
in
enter
outsb
popa
lds
mov
mov
push
ljmp
mov
push
xchg
fs
cltd
mov
cmpsb
jecxz
out
inc
xor
or
pushf
sub
and
push
push
pop
cmpsl
sub
clc
inc
xchg
loope
mov
push
sahf
jnp
or
sahf
xor
push
adc
xchg
cmpsl
dec
std
movsb
cmp
aas
hlt
test
mov
lods
and
leave
ljmp
add
loope
pop
inc
mov
xchg
mov
mov
ret
lock
mov
and
adc
ret
js
nop
pusha
sub
pushf
rclb
pop
daa
xorl
xlat
mov
mov
inc
insb
out
lds
xor
push
xchg
sub
iret
xchg
int
xlat
xor
xchg
push
add
xchg
sahf
pusha
or
cli
aaa
dec
sbb
pop
xchg
cltd
and
outsl
mov
jo,pt
gs
adc
mov
inc
cmpsb
xor
push
scas
test
sbb
push
iret
pop
ss
lds
rol
scas
imull
out
sbb
dec
jae
test
adc
fisubs
enter
jno
out
xchg
loope
cmp
xchg
xor
movsb
pop
in
and
push
test
and
mov
enter
cltd
sub
out
int3
mov
xchg
mov
jmp
loope
sarb
cmp
mov
cmp
stos
sbb
stos
adc
cmpsl
pop
jmp
inc
sub
mov
mov
xchg
inc
inc
xchg
jo
push
or
insb
xchg
lds
inc
jne
sbb
mov
mov
push
xor
out
add
orl
dec
popf
adc
adc
nop
mov
cmp
daa
out
xchg
or
aad
outsb
push
aam
jo
frstor
roll
xor
fs
mov
aad
fwait
test
mov
mov
pop
pop
ljmp
stc
scas
xor
cli
mov
mov
lea
test
mov
mov
std
xchg
jecxz
icebp
and
lea
shrl
shrb
jmp
or
sub
cli
aad
imul
in
push
add
lret
pop
aam
mov
inc
enter
nop
mov
sbb
neg
sbb
mov
lds
lret
cmp
clc
call
push
or
xor
mov
mov
sub
mov
push
jmp
xlat
fisttpl
push
jne
jmp
insb
addr16
dec
bound
cmp
xchg
cwtl
movsb
fistpl
pop
lods
hlt
xor
inc
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
aad
cmpsb
jo
dec
jge
jo
test
outsb
sub
inc
and
mov
out
jmp
mov
fwait
sbb
lock
mov
add
jg
cmc
jae
and
in
push
xchg
adc
divl
popf
aas
bound
adc
sbb
inc
hlt
lods
push
jnp
stos
aad
inc
mov
mov
push
mov
push
mov
insb
lods
cli
add
push
xor
jmp
add
cld
shlb
add
add
and
leave
jle
sar
adc
push
fidivl
outsl
rcrb
adc
cwtl
stos
sub
out
or
cmc
inc
pop
cmpsl
andb
lea
push
dec
ret
add
jp
test
mov
lods
cmp
inc
mov
pop
inc
or
sbb
outsl
mov
enter
xchg
sub
dec
js
shll
sub
pop
arpl
xchg
push
pop
pop
sahf
loopne
jge
mov
dec
stc
movb
inc
ja
adc
hlt
scas
mov
dec
dec
fisubrs
arpl
jecxz
add
cmp
jecxz
cmp
fucom
adc
sbb
pop
jmp
mov
data16
fmuls
imul
repnz
pusha
add
out
jle
insl
sarl
sub
inc
pandn
mov
shlb
jb
movsl
imul
xchg
inc
push
lahf
mov
and
and
inc
adc
and
and
push
jb
fs
sbb
movsb
cmpsl
cmpsl
pop
mov
rolb
inc
cmc
dec
jb
call
jecxz
cmp
adc
lahf
cmp
mov
ret
rclb
aam
icebp
jecxz
sub
inc
push
inc
out
mov
in
sub
and
inc
testl
adc
mov
bound
inc
sbb
add
push
sub
xor
adc
add
mov
pushf
lcall
push
aaa
scas
mov
and
mov
fsubs
rcll
popl
jg
movsb
adc
pop
leave
rcl
jmp
in
out
ja
sub
fcomp
xchg
fsub
mov
mov
scas
sarb
ds
cmp
push
loope
dec
push
cmp
jo
sbb
xor
pop
add
xchg
push
pop
ss
jp
ds
fcmovne
aam
repz
cmpsb
and
sbb
push
pop
adc
scas
jecxz
aam
mov
push
scas
sti
xor
dec
sub
mov
enter
jae
js
mov
outsl
cld
loop
jnp
jle
fsincos
cmpb
stc
lcall
popa
stos
dec
cltd
inc
adc
inc
xor
push
jp
push
aad
outsl
cmp
insl
dec
jecxz
je
inc
adc
or
imul
push
lret
pusha
clc
xor
dec
and
mov
mov
les
mov
aaa
testl
xchg
iret
xchg
test
mov
movsb
lcall
std
imul
dec
mov
popf
and
sub
xchg
je
mov
cmpsl
insl
jns
lock
int3
and
adc
add
jo
mov
divb
out
js
jnp
or
xchg
pushf
mov
lock
push
xor
inc
fnsave
jmp
ss
or
cmp
push
stos
add
cmc
mov
in
call
popf
xchg
repnz
cmpps
cmc
test
push
and
add
rcrl
test
adc
add
dec
and
dec
aam
inc
in
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
enter
mov
jo
xlat
out
aas
jo
clc
push
adc
cmp
popa
mov
and
fnstsw
hlt
or
divl
data16
mov
mov
mov
pop
out
scas
xchg
jbe
mov
add
aaa
or
pusha
nop
pop
sahf
mov
mov
push
add
adc
pop
movsb
in
sub
rcll
movsb
adc
xor
flds
ret
xorb
div
xchg
ret
add
mov
sbb
and
xor
inc
mov
data16
lods
pop
jl,pn
in
hlt
jmp
pop
std
sub
xor
insb
ja
daa
loopne
daa
xchg
scas
dec
mov
dec
xor
and
dec
test
sub
mov
xchg
dec
enter
icebp
sub
in
adc
ljmp
daa
mov
sub
dec
lds
or
xchg
dec
mov
jbe
jns
inc
leave
jg
daa
or
fnstsw
mov
jge
arpl
jo
shll
ret
fsubp
and
call
mov
and
es
pop
xchg
mov
mov
inc
mov
js
clc
in
iret
mov
xchg
add
xor
cwtl
mov
mov
scas
xchg
icebp
xchg
xchg
loopne
xor
mov
mov
push
aaa
mov
push
rcll
lea
call
push
mov
aaa
xor
cwtl
xor
pop
push
xchg
or
dec
mov
pushf
push
movsl
xor
pop
pop
rcrb
jge
xor
fwait
mov
mov
mov
jae
jns
popl
test
into
push
jecxz
jne
and
daa
and
push
inc
aaa
xor
jecxz
xor
jle
push
mov
int
imul
push
xchg
xor
inc
adcb
mov
shlb
mov
pop
sbb
loope
ljmp
sub
sbb
movsb
fildll
sarb
rcll
or
and
jp
jg
lret
fwait
and
or
jbe
imul
xchg
ret
push
subl
mov
das
arpl
bound
fcomi
jmp
mov
sub
call
mov
fcoms
pop
jne
mov
lcall
xchg
adc
xchg
mov
xchg
dec
inc
dec
mov
mov
out
out
imul
push
pop
loope
insb
data16
xor
dec
xchg
xchg
orl
mov
lds
mov
and
xorl
inc
push
fnsave
and
hlt
rclb
shll
cmp
and
sahf
pop
cwtl
lahf
and
xchg
test
popa
inc
push
sbb
shlb
movsl
pop
inc
pushf
sub
ja
xchg
pop
or
inc
mov
mov
mov
pop
shr
stc
fwait
idivl
xor
fs
test
dec
push
adc
sub
loopne
mov
sbb
scas
mov
cmp
shlb
mov
repnz
jo
std
adc
addr16
and
mov
cltd
jle
test
or
cmc
dec
xor
aas
push
cld
mov
xor
and
in
aad
aaa
mov
jmp
mov
dec
hlt
or
scas
mov
lcall
and
testb
jmp
sbb
sarl
lahf
popa
sti
arpl
add
movzbl
jo
pop
mov
sbb
int
cwtl
leave
jb
jp
mov
stos
lds
sti
loopne
test
test
fmuls
mov
sahf
test
out
das
faddl
ds
fucomi
cmp
dec
pop
pop
fwait
pop
test
ficomps
or
sbb
xlat
fsub
outsb
cmp
adc
mov
movsl
mov
sbb
subl
sarl
adc
clc
xchg
rclb
out
stc
adc
outsb
inc
shlb
fistps
push
jmp
clc
into
lea
pop
imul
push
sub
fwait
cli
dec
stos
out
ljmp
pushf
fsubs
jb
add
js
cmp
mov
jl
enter
or
testb
adc
adc
das
jg
bound
cwtl
inc
mov
fs
inc
mov
testb
xchg
sub
test
dec
dec
dec
xor
addr16
xchg
or
movsl
mov
aas
fimull
push
pushl
jecxz
in
cmpl
mov
pop
into
xchg
adc
push
and
xchg
lock
xor
cmpsl
jl
dec
out
lods
and
push
enter
into
push
stc
sub
inc
xchg
roll
jl
shrl
into
jns
jb
xor
pop
test
push
das
fmull
fimuls
daa
jle
inc
mov
test
gs
fwait
dec
mov
fs
fdiv
insl
into
fs
or
xor
mov
iret
enter
dec
mov
add
subl
stos
scas
push
dec
nop
inc
shl
add
cmp
sahf
cmpsb
inc
xlat
in
xor
cltd
out
ss
dec
push
out
nop
xor
push
nop
sbb
ja
into
add
or
sbb
lcall
outsl
addb
push
or
mov
jns
push
add
iret
insb
cmp
pop
xchg
jns
pop
aaa
rolb
or
lcall
xor
sub
mov
insb
xchg
sbb
pop
sarl
sbb
cwtl
dec
dec
lds
cmp
dec
jg
push
test
fsubl
test
out
cmp
dec
xor
xchg
ljmp
or
mov
jnp
popa
out
lret
lods
jg
das
mov
mov
gs
jmp
lock
add
xor
push
lods
jg,pn
shrb
les
mov
stos
clc
arpl
mov
jo
mov
rorb
sub
dec
pop
inc
xor
or
or
or
adc
xor
int
lds
and
in
push
push
mov
jp
mov
sub
jno
mov
cmpsb
adc
enter
sbb
cltd
fst
lds
xchg
jmp
gs
outsl
sbbl
inc
sbb
sbb
ret
aas
jns
pop
pop
mov
stc
fiadds
fwait
sti
lret
mov
xor
stos
lods
inc
negl
leave
inc
jecxz
fadd
dec
and
or
shrb
sti
neg
vmovq
movl
das
pop
leave
or
adc
jmp
sub
inc
push
cltd
push
mov
xchg
adc
adc
in
inc
lret
shll
lahf
in
scas
ret
dec
cmp
adc
mov
mov
pusha
xor
lock
inc
pushw
into
sbb
stos
pop
jge
stc
int3
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
add
jo
dec
jge
jo
leave
xlat
pop
add
inc
int
and
pop
mov
pop
xor
sar
andb
xlat
mov
xor
dec
ror
and
aas
inc
sbb
call
jbe
push
mov
adcl
scas
decb
push
in
pop
or
fsubrl
lret
adc
sti
jle
scas
xor
dec
call
cmp
xchg
xor
je
insb
std
cmp
cld
cmp
mov
icebp
push
push
scas
lahf
ss
mov
rcll
jb
ss
inc
mov
bound
in
dec
pop
pop
and
mov
int3
inc
mov
subb
pop
jl
out
cltd
sub
sbb
stc
ds
movsb
xor
rol
ret
jne
pop
push
jb
imul
sub
sarl
push
dec
xchg
push
lahf
adcb
das
xchg
movsl
push
inc
aas
rorb
inc
add
sbb
imul
decb
pop
ret
xchg
xchg
int3
loop
jnp
mov
adc
sub
aam
jb
call
ljmp
js
dec
out
outsb
inc
or
testb
inc
adc
cli
ja
notb
mov
aad
mov
or
nop
fs
jmp
inc
or
jge
xchg
adcb
lcall
inc
add
test
jns
test
push
arpl
jg
xchg
cmp
nop
data16
mov
cmpsl
insl
leave
xlat
sub
cmc
pop
pop
jno
inc
jp
pusha
add
and
lea
test
xlat
clc
add
pushf
ror
insb
jp
cwtl
mov
cmpb
xchg
xchg
adc
dec
fnstenv
push
ficompl
or
cld
fisubrl
jns
lds
or
call
jl
in
sub
mov
pop
cmpsl
sub
fdivs
ja
mov
mov
mov
sbb
push
add
icebp
or
repnz
mov
sub
push
mov
sub
sub
jg
mov
add
test
in
pop
jbe
dec
jb
cli
push
fdivs
mov
or
out
pop
inc
idivl
in
cmp
repnz
and
push
mov
dec
xorl
or
daa
jle
xchg
loope
jbe
add
mov
xchg
xchg
sbb
popf
mov
push
pop
fs
adc
and
ljmp
mov
fldcw
in
sub
sbb
rcll
inc
xlat
sub
pop
pop
sub
and
aaa
or
dec
and
out
push
pop
insb
ret
jns
loope
and
mov
fnstenv
xchg
sbb
sbb
ficoms
sub
mov
and
inc
xchg
or
test
cmp
add
push
test
push
insb
mov
jne
arpl
ret
push
pop
lret
jg
xor
insb
stc
lds
or
je
sbb
pop
mov
dec
pushf
inc
inc
dec
sub
fdivrs
push
inc
sahf
dec
mov
xor
xor
mov
dec
dec
cmp
and
push
push
insb
inc
lods
hlt
je
cmpsb
pop
and
gs
roll
cwtl
mov
pushf
jmp
lods
or
dec
ljmp
fiaddl
dec
ret
mov
xchg
fsubrl
lock
stos
out
sarl
sub
pop
mov
pushf
fs
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
sbb
jo
dec
jge
jo
lock
pop
fcmovb
xchg
pop
jle
cmp
or
rolb
dec
xor
or
mov
jb
pop
enter
shlb
lock
cmp
inc
mov
push
je
out
in
xlat
dec
ja
imul
sub
dec
jb
pop
mov
or
add
mov
ljmp
jecxz
cwtl
or
inc
ja
shll
pop
xchg
repz
sbb
dec
xchg
call
das
scas
fldt
jl
aaa
xchg
jmp
movsl
jae
lods
scas
dec
jbe
add
dec
je
add
test
lods
das
les
mov
sbb
inc
inc
dec
xchg
ret
out
leave
repz
ret
pop
hlt
cmpsl
out
push
in
inc
lahf
and
call
je
repnz
pop
mov
les
mov
and
mov
test
cmp
scas
mov
jbe
jmp
je
cmp
shl
and
daa
add
add
movsl
cmp
pop
ja
push
dec
jle,pn
dec
fstps
mov
iret
cmc
mov
or
out
cmc
int3
sub
aam
mov
pop
aam
loopne
jmp
mov
sub
and
popf
cmpsl
or
lods
push
mov
lock
ljmp
int
mov
mov
sbb
push
sbbl
pop
subb
mov
push
mov
insl
and
ret
sbb
pop
shll
xlat
pushf
add
mov
popa
inc
lds
xor
cmp
ret
push
jmp
movsl
or
das
outsl
push
add
lods
pop
adc
mov
in
push
cmp
into
divb
outsl
mov
test
call
mov
sbb
je
sub
loopne
dec
pop
scas
fwait
cli
xor
movsb
push
fisubrs
mov
dec
cmp
push
outsl
mov
lock
xchg
in
test
cmpsl
pop
addr16
mov
bound
out
inc
mov
dec
push
aad
pop
adc
push
mov
jmp
shlb
and
iret
or
stos
rol
fadd
push
in
mov
out
pop
ret
add
jle
inc
push
ret
sbb
ffree
mov
mov
cld
jge
movsb
addr16
adc
aaa
int3
lret
mov
adc
mov
rclb
insl
cwtl
jp
sub
push
rolb
mov
sti
pop
and
jmp
mov
in
mov
repz
mulb
testl
add
jmp
popf
pushf
and
insb
inc
rcrb
jecxz
xor
push
push
inc
add
rcrb
test
mov
jbe
mull
jp
enter
jns
xchg
dec
in
jno
pop
jmp
out
lahf
and
lods
test
xor
mov
xchg
mov
mov
ret
and
fs
out
dec
cmc
adc
cmpsl
outsl
and
xchg
push
inc
in
mov
push
cli
sbb
shlb
adc
rcl
fimuls
jge
xor
jae
and
jb
sub
int
lret
push
clc
out
dec
pop
call
pushf
xchg
fnstenv
aad
push
mov
and
and
xchg
jne
jmp
xchg
adc
xchg
mov
or
add
in
or
ss
adc
xchg
sbb
pop
adc
xor
push
out
lahf
aas
out
outsl
jae
bound
push
ret
or
jl
cmp
jg
enter
add
add
or
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
mov
mov
jo
jge
jo
lods
add
sub
je,pn
sbb
ret
bswap
and
aas
lock
cmc
pushf
pusha
addb
sti
inc
test
sub
loopne
xchg
sbb
jg
add
lret
leave
addr16
and
cmpsl
pop
bnd
pop
mov
sub
sub
out
movsl
jle
and
or
and
add
rol
out
add
mov
scas
int3
test
push
clc
fistps
test
pop
xchg
adc
dec
sahf
scas
add
mov
inc
add
shlb
das
jecxz
and
stos
and
push
jns
cmpsl
int3
out
addr16
ficoml
lock
mov
fstl
pop
in
sar
popa
xchg
adc
mov
loope
cld
mov
cmp
push
or
sub
cmp
std
std
sub
push
add
push
mov
dec
push
outsl
cli
cmp
mov
fsubr
adc
outsl
push
dec
mov
fsub
inc
fcompl
sbb
or
pop
pusha
push
adc
icebp
cltd
addr16
adc
repnz
sub
lret
loop
push
cmp
push
daa
push
fisttps
ret
add
push
js
pop
je,pt
or
sub
insb
outsl
gs
clc
fadd
sbb
sbb
sti
popa
lahf
add
fildl
sbb
orb
mov
outsb
adc
sbb
sub
int
ds
sti
sbb
stos
lock
popa
dec
inc
fiaddl
push
out
jo
in
cli
ljmp
sahf
xor
push
cmpl
fimull
sub
jl
and
mov
or
cs
add
arpl
push
cmp
cmpsl
inc
cmp
out
jp
loop
popa
push
sub
push
fwait
xor
add
pusha
add
push
pop
mov
jg
add
in
dec
mov
sbb
mov
test
mov
ds
xchg
aas
or
dec
dec
cmp
mov
adc
inc
icebp
mov
push
inc
xor
add
dec
xchg
pop
ret
pop
adc
adc
mov
cmp
iret
pusha
xchg
sub
pop
gs
imul
fidivl
jno
inc
cmp
stc
jp
mov
xor
dec
add
dec
jp
mov
inc
jbe
cmp
cmpsl
std
inc
jp
jge
jmp
imul
std
andb
mov
mulb
movl
jbe
xchg
sbb
cmpb
jb
mov
adc
or
insb
testb
cmp
cmpsl
adc
les
sub
sub
dec
shll
push
cmpsl
or
out
pop
je
je
ja
andl
outsb
insl
fcom
mov
iret
add
mov
xchg
jecxz
jmp
pop
and
clc
inc
popf
mov
mov
inc
jmp
xchg
add
cmp
cmpsl
lods
das
lret
pushw
iret
sbb
inc
out
mov
mov
sub
jb
hlt
push
xchg
lea
adc
sub
inc
jecxz
mov
push
jb
add
int3
or
pop
mov
inc
popf
pop
xchg
push
xor
sub
sbb
mov
push
or
jecxz
into
imull
rcr
aad
movsb
aad
add
psubusw
push
repz
pop
bound
sub
repnz
ja
add
pusha
scas
movsb
movsl
lea
dec
add
jns
std
cmp
mov
mov
lods
sbbl
iret
test
je
mov
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
xor
repnz
or
jo
mov
out
test
idiv
push
jmp
push
push
mov
cmp
aaa
lret
in
push
cmp
pop
gs
and
pop
dec
dec
mov
mov
pop
jg
ret
and
xchg
xor
out
negb
fcompl
fst
cmp
cltd
call
mov
repz
jle
add
pop
jae
jl
cltd
xchg
outsb
xchg
mov
mov
xchg
push
fs
add
and
push
sti
leave
inc
hlt
ljmp
loope
call
jl
mov
push
cmp
daa
push
inc
stos
push
popf
lods
scas
jb
gs
mov
cltd
insb
pop
popf
mov
mov
ds
scas
adc
sub
jb
adcb
test
xchg
lods
popf
inc
cmp
push
jecxz
mov
test
fucompp
daa
dec
push
lret
sub
int
dec
dec
and
movsb
fdivl
popa
pop
push
push
das
dec
jl
icebp
inc
pop
aam
fisubl
push
enter
mov
and
aaa
pop
and
mov
cmp
cltd
out
in
mov
mov
jp
adc
mov
pop
and
out
cmpsl
inc
xchg
cmp
xchg
out
sub
push
cwtl
test
bound
add
sti
xchg
lret
jo
fs
popf
lret
sbb
pop
std
aaa
int
adc
outsl
push
mov
jae
cltd
cmpsb
and
sub
inc
push
xor
cli
pop
imull
rclb
push
inc
and
xchg
jne
outsl
pop
ret
iret
sarb
inc
stos
mov
mov
divb
and
repz
jle
xor
popf
in
in
inc
ja
dec
xor
jl
add
stos
ret
scas
arpl
sub
je
rep
pop
push
sbb
divb
adc
sub
out
sbbl
mov
imul
hlt
cmpsl
mov
push
out
cmp
testl
push
cmp
pop
xor
or
mov
int3
mov
cmp
xacquire
jae
mov
xor
push
aas
aaa
das
jp
xchg
dec
outsb
inc
test
cmp
sbb
loope
mov
adc
push
or
hlt
pop
ror
jo
cmc
dec
pop
les
and
mov
sahf
repz
sub
dec
outsb
loopne
pop
in
pop
pop
ja,pn
dec
dec
shlb
jmp
jo
mov
popa
lock
movsl
push
inc
pop
jge
push
dec
jbe
repz
adc
mov
cmpsb
cmpsl
cmp
mov
outsb
ds
movb
movsl
pop
mov
jbe
jae
js
je
mov
or
or
adc
aas
mov
push
or
pop
inc
in
call
xchg
int3
pusha
sub
xor
dec
add
in
nop
clc
inc
into
push
or
jmp
fldl
into
movsl
pop
lret
push
out
push
loop
outsl
repnz
cmp
pop
xchg
mov
adc
mov
imul
rcl
repz
mov
xchg
cmpsl
repnz
xlat
xor
arpl
sbb
decb
iret
mov
lods
into
or
pop
push
fisttps
jb
mov
fdiv
jbe
in
jle
ret
sar
sahf
ljmp
xchg
outsl
xor
in
or
xchg
cmp
in
xlat
arpl
jns
hlt
loope
fsts
xlat
in
addb
cltd
and
mov
stos
inc
fnstcw
addb
inc
in
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
popa
mov
jo
dec
jge
jo
xchg
xchg
fxch
icebp
mov
into
nop
mul
dec
stos
inc
shlb
pushf
xchg
pop
add
and
call
popa
pop
test
pop
iret
lea
mov
sbb
mov
loopne
xor
iret
or
in
in
lds
mul
push
lahf
cmp
add
lea
aas
ret
fs
stc
sbb
mov
imul
dec
int3
mov
out
inc
popa
jmp
inc
mov
and
pop
fmuls
incb
pop
mov
push
jp
mull
dec
push
add
dec
repz
dec
jnp
sbb
pop
fs
ja
test
fs
call
mov
pop
mov
mov
enter
add
ds
add
pop
pop
aam
jno
mov
les
mov
das
mov
xchg
cmp
xor
stc
cmp
stc
push
sbbb
and
push
xorb
mov
pop
fstl
mov
hlt
in
sbb
repnz
insl
adc
or
xchg
adc
out
dec
aas
shrl
das
mov
jg
enter
cmpsl
pop
cmpb
repz
or
jo
push
push
mov
incb
rclb
pop
xor
sub
fidivs
cmp
in
rorl
cmp
call
movsl
push
and
or
out
aad
push
ljmp
jg
ret
dec
push
adc
fldl
lds
push
pop
addb
dec
loop
mov
dec
mov
lds
jge
push
or
xchg
enter
flds
mov
aas
data16
mov
inc
or
iret
jno
jns
add
xor
popf
daa
lods
repnz
ret
xchg
inc
adc
fsubl
add
pusha
add
push
xor
rol
cli
insl
fcom
test
sbb
lcall
and
sub
subb
jl
cmp
std
push
into
outsb
lea
sbb
dec
int
inc
fldl2t
xor
movsl
lock
test
or
mov
out
sbb
xchg
fdivr
out
aam
lahf
insb
out
fcompl
xor
lret
nop
fxch
mov
testb
es
lds
test
mov
das
cmc
loop
test
sbb
rclb
icebp
jae
loope
adc
ds
rclb
shlb
jge
daa
ljmp
cwtl
push
insb
sub
xchg
out
dec
inc
adc
es
sub
into
add
cmpsb
push
ret
jp
push
stc
call
mov
repnz
out
fistl
xor
cmpsb
mov
fs
push
je
imul
and
and
stos
jge
dec
lods
inc
xchg
mov
inc
fiaddl
into
pop
jp
sub
xchg
add
in
aad
cs
adc
das
daa
xor
loope
jmp
fs
push
push
pushf
fldenv
lods
outsl
pop
sub
add
or
adc
add
clc
mov
fmulp
movsb
test
push
inc
scas
cltd
xchg
add
sarb
cmp
icebp
les
mov
pop
ss
sub
mov
sahf
inc
imul
in
fld
pop
lock
cmp
sbbb
subl
stos
inc
add
push
or
out
add
add
fisttpl
jp
xchg
mov
mov
jge
jo
mov
xlat
jne
xchg
sbb
pop
and
mov
gs
cld
rcrl
push
outsl
pop
fwait
add
icebp
push
call
rcrb
inc
or
jp
stos
fstps
lcall
aad
mov
shll
negb
addr16
mov
jnp
insl
rclb
sub
inc
xor
jg
notb
xor
add
dec
loopne
xchg
push
movzbl
movsb
or
push
sub
mov
xor
ficoms
in
and
mov
fbld
stos
lds
lods
cwtl
stos
inc
outsb
incl
mov
or
push
movsb
dec
inc
int
dec
push
inc
dec
add
ret
loop
mov
aas
imul
cmpsb
ds
call
sbb
shrl
add
lret
add
mov
xchg
fldenv
popf
outsl
fsubl
test
out
mov
loopne
jp
sbb
fbstp
lock
test
inc
stos
push
pop
mov
xchg
push
pop
ja
adc
xchg
aam
inc
add
xor
repz
lret
int
sbb
pop
pusha
mov
xlat
stos
sti
enter
or
movsl
dec
adc
xchg
rcr
push
add
push
jge
fwait
mov
push
mov
xchg
loopne
xchg
and
lds
pop
stos
ljmp
mov
adc
jae
mov
sbb
dec
jmp
stc
leave
mov
rclb
push
orl
mov
mov
cmp
pop
ja
bound
and
mov
and
xor
mov
mov
and
inc
popf
ja
jno
sbb
inc
stos
lods
mov
psubsb
and
scas
sbb
testl
es
pop
out
mov
cld
jecxz
or
rorl
adc
add
pop
sub
inc
add
arpl
loop
jp
lods
shlb
scas
out
jae
lcall
notl
xor
xchg
fistps
adc
test
aaa
pop
sub
push
aas
sub
cmp
adc
mov
imul
cmc
mov
cmp
mov
pop
cwtl
rclb
rol
add
jno
or
and
push
sub
test
and
or
pop
add
es
repnz
stos
fisttpll
aaa
add
push
sti
shl
mov
dec
sub
cmp
cmp
and
inc
pop
jge
xor
or
add
ja
add
cmpsb
jmp
xlat
xchg
inc
sbb
mov
pop
sub
mov
loope
push
fcmovnb
or
imul
jbe
jecxz
gs
cmpsl
cmp
pop
sub
outsl
rolb
push
jle
xchg
divl
inc
pop
outsb
movsl
leave
jp
jmp
mov
arpl
aad
jb
into
xor
jno
adc
dec
or
repz
repnz
orl
insl
cli
xchg
xchg
lcall
lahf
sahf
call
call
fwait
push
mov
mov
sbb
jmp
push
adc
xchg
bound
adcl
mov
adc
gs
or
gs
dec
pushf
xor
and
outsl
repnz
xor
fs
mov
jmp
imul
jle
cmp
push
jmp
sbb
mov
popf
jne
outsb
xchg
xchg
rorl
add
call
add
jae
roll
jno
xlat
xchg
inc
jo
dec
jge
jo
mov
mov
divb
out
lcall
fcmovb
arpl
sbb
mov
in
ss
aas
xor
xchg
dec
xor
dec
test
xchg
stc
push
mov
pushf
push
sub
pop
pop
lret
mov
or
pop
pop
mov
stos
push
dec
in
mov
jne
loope
push
mov
push
in
push
in
mov
test
mov
call
pop
cmp
mov
bound
cmp
ss
push
pusha
insl
dec
mov
pushf
movsb
ja
movhps
mov
pop
loope
notl
loopne
popa
and
in
and
mov
out
xor
test
cmpsb
adc
roll
sub
in
xchg
fisttps
mov
mov
mov
shll
xor
lcall
jl
call
xchg
jl
xchg
jb
mov
orb
xor
js
jecxz
inc
mov
or
pop
loope
fldt
lock
inc
or
je
adc
xor
movsl
mov
jl
push
pop
or
xor
stc
mov
xor
or
jle
adc
sbb
fmuls
stos
mov
xorl
xchg
scas
sarl
add
push
mov
xchg
leave
aam
pop
orl
fidivrs
xchg
push
cwtl
outsl
and
mov
pop
sbb
xor
pop
mov
rorl
pushf
or
and
xor
pop
jb
jne
scas
xor
shrb
loope
dec
shlb
int
adc
xchg
inc
xchg
pop
mov
ja
test
aam
dec
mov
fsts
in
jge
cmp
out
inc
ficompl
jb
outsl
inc
clc
out
mov
in
dec
out
fisubs
fs
pop
xor
or
insb
adc
adc
jmp
fs
ds
pushf
sahf
mov
dec
jg
cmpsl
sbb
dec
xchg
mov
pop
push
fmull
xor
out
xor
mov
sub
inc
repz
mov
xchg
lods
xor
nop
jbe
jmp
xchg
nop
cmp
arpl
or
mov
in
aam
out
pop
and
push
or
scas
xchg
inc
xor
in
arpl
mov
loop
movsb
insl
mov
pop
push
cmp
clc
adc
dec
xchg
mov
mov
mov
jb
sbb
push
mov
arpl
mov
and
pop
xchg
sbb
inc
es
ljmp
cmp
inc
sbb
mov
jbe
jns
xchg
lahf
clc
sahf
push
mov
into
ficoms
push
jge
aaa
or
in
scas
or
cmp
mov
add
lahf
movsl
mov
and
mov
rdtsc
mov
ja
scas
cmpsl
push
dec
das
jmp
cmp
test
mov
in
mov
out
add
stos
cmp
mov
lock
shrb
push
and
addb
fcoms
and
jb
adc
nop
and
les
mov
enter
mov
cmp
xchg
mov
cmp
adc
int3
rcrl
int3
adc
push
shll
enter
jmp
pop
pop
mov
mov
or
push
imul
sahf
push
test
arpl
mov
fnstsw
mov
gs
popf
ja
push
sbb
stos
addb
imul
clc
les
and
cmc
inc
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
jl
out
inc
jo
dec
jge
jo
loope
xor
lea
or
insb
jns
fidivrs
xchg
pop
ss
test
sub
and
sbb
mov
icebp
pop
pop
ss
mov
popf
sub
leave
xchg
mov
lds
cmc
mov
cltd
cmp
mov
xlat
cmp
adc
int3
js
sahf
xor
sub
adc
divb
fwait
push
dec
jl
cmp
jno
lods
fbld
sbb
aaa
stc
xor
outsl
daa
repnz
and
cli
mov
push
or
scas
adc
dec
sub
cmp
test
out
sti
shl
rcrb
cltd
test
fcmovne
dec
jle
lods
je
lret
mov
adc
aaa
dec
push
adc
cmp
lods
push
fisubrs
orl
push
cmp
insl
push
outsb
or
pop
adc
ja
mov
or
add
into
enter
push
scas
cmpsb
sub
fwait
sbb
insl
fnsave
inc
push
jmp
adc
mov
outsb
push
aad
or
call
jae
fcoml
sub
inc
jg
jp
test
inc
fldcw
lock
stos
ret
mov
cwtl
xchg
mov
notl
mov
rcl
bound
cli
cltd
in
xor
aam
aam
shlb
fidivs
lock
lds
es
pop
inc
leave
mov
pop
cmp
jmp
xchg
subb
and
dec
and
iret
fwait
push
stc
push
push
in
mov
mov
fcomp
adc
fnstenv
out
mov
cltd
cmp
sbb
xor
ret
or
mov
pop
push
shlb
fstpt
mov
shrb
addr16
test
hlt
jmp
pushf
shr
movsl
stc
push
push
rcr
push
ds
lahf
je
sub
dec
mov
add
sbb
inc
xchg
dec
test
repnz
imul
fistpl
ss
sbb
push
fidivl
fstps
or
arpl
fldenv
push
shlb
mov
int3
leave
cmpsl
xchg
jnp
mov
xor
fidivrs
cs
std
pminub
or
dec
sti
inc
repnz
adc
daa
jno
add
jl
mov
xchg
movsb
adc
je
arpl
into
push
add
divb
lods
testb
aaa
pop
and
js
in
mov
push
cmp
adc
add
lahf
sub
dec
mov
sbb
adc
in
lahf
pop
jmp
mov
cmpsl
lret
xchg
or
rorl
cli
mov
lds
xor
outsl
inc
loop
je
out
pop
add
and
sub
movsb
push
cmc
repz
fsts
or
scas
and
mov
pusha
jle
ret
inc
popf
lea
inc
cmp
xlat
sbb
popf
popa
inc
cmpl
mov
out
sbb
cmp
sub
lods
test
pop
lcall
or
lods
jge
xchg
jne
sti
xor
cmp
xchg
mov
dec
add
ret
aad
push
bound
mov
inc
or
out
or
mov
pop
es
test
ficoml
dec
xor
and
addb
push
pop
aaa
dec
loopne
inc
xor
sbb
sti
fnstenv
cmpsb
fwait
mov
cs
mov
loopne
or
shlb
pop
dec
inc
push
xor
inc
ret
testb
push
ljmp
push
sbbb
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
pop
dec
jo
dec
jge
jo
push
sub
fistps
xor
nop
dec
adc
mov
sbb
adc
mov
fistpll
inc
ljmp
decl
in
push
test
jns
negl
mov
sbb
popl
xchg
jl
movsl
mov
and
int
and
inc
ja
out
push
cmc
popf
mov
adc
popl
sbb
add
xchg
sbb
out
mov
sub
sbb
lods
inc
sti
imull
aad
push
arpl
arpl
push
repz
lock
cmc
mov
push
mov
mov
and
inc
addb
add
xor
and
loopne
adc
mov
mov
jne
add
inc
cmp
ljmp
out
shr
adc
mov
jno
leave
test
add
in
stc
inc
das
or
stos
gs
push
dec
mov
xchg
sub
mov
test
lcall
hlt
jge
inc
out
xor
add
je
cs
jno
pop
push
sbb
mov
sub
jns
js
xchg
mov
loope
test
test
pop
push
mov
call
dec
test
dec
ljmp
and
sbb
adc
adc
loopne
push
dec
repnz
pop
cmp
adc
xlat
sti
add
fs
sbb
lock
sar
int
rcrb
es
or
push
mov
aas
mov
jo
shrb
out
sub
fildll
cmp
mov
adc
out
mov
fnstcw
pop
pop
mov
cli
sti
pop
mov
mov
mov
push
les
and
test
push
push
test
fcmovu
push
sbb
xor
dec
les
sbb
or
mov
loopne
sub
push
lds
fsubrs
push
sub
lock
jb
cmc
lods
cmp
mov
jmp
mov
icebp
adc
cli
adc
nop
arpl
pop
xchg
inc
sahf
cmp
lock
mov
push
jns
aam
pop
pop
xchg
in
movsl
cwtl
xchg
lret
cmp
cmp
push
mov
or
adc
sub
sti
cmp
mov
adc
mov
jnp
call
dec
aad
int
pop
icebp
push
and
ja
cld
dec
add
jge
movsb
loop,pn
dec
cmc
sti
mov
sub
fldenv
js
xchg
add
nop
addr16
mov
mov
out
mov
mov
mov
gs
test
pop
mov
adc
add
jne
pop
ficompl
es
lods
xchg
xor
jne
mov
ja
pop
cmp
mov
lcall
into
insl
clc
out
stos
and
js
mov
push
pop
test
aaa
push
fldl
cld
fistpll
dec
add
mov
mov
aaa
lea
and
out
pop
fs
jmp
iret
in
outsb
movsb
mov
dec
imull
jmp
inc
stos
aam
dec
test
aaa
gs
mov
or
cmp
imul
pop
out
pop
xor
cli
jmp
idiv
dec
mov
cmp
in
mov
mov
addr16
sahf
inc
rcrl
pop
sub
cmp
fisttps
mov
dec
fucomp
add
push
frstor
ss
jmp
adc
aad
mov
push
inc
lcall
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
xlat
enter
dec
jo
dec
jge
jo
xor
pop
out
push
fldt
adc
cli
ror
pop
xor
aaa
loope
es
mov
test
aad
mov
or
arpl
mov
lods
xchg
push
adc
adc
mov
xchg
sub
add
lods
daa
cmp
data16
fsubs
mov
sbb
sbb
sub
imul
pop
std
sub
and
adc
cmp
adc
adc
sahf
sub
sub
sbb
test
lret
sbb
and
sbb
xor
lock
lahf
sbb
inc
mov
cmpsb
jmp
sar
pop
or
xchg
outsb
pop
insb
outsb
mov
insl
cmc
dec
jmp
int
js
and
nop
iret
enter
das
add
jns
push
rol
into
subb
mov
pop
pop
arpl
mov
mov
shrb
rcll
pop
pop
inc
std
iret
push
loope
in
frstor
or
xchg
movsb
enter
mov
fcmovne
test
enter
icebp
orl
sub
iret
aas
dec
movsl
fcmovnb
mov
fwait
xor
sbb
add
pop
daa
lret
mov
outsl
and
mov
xchg
pushf
cli
jl
popa
dec
cmp
call
add
insl
mov
add
aaa
loope
mov
push
negl
pop
mov
pop
mov
or
lods
jo
je
mov
mov
jecxz
inc
xchg
push
cmpsl
fmull
xchg
mov
mov
push
cmp
lahf
xor
imul
dec
jmp
leave
xlat
js
jmp
sbb
into
cwtl
pop
inc
xor
lret
jmp
out
xchg
mov
push
and
pop
jnp
mov
iret
pop
out
js
fidivs
movsb
shlb
cmc
iret
mov
shrl
lods
sub
inc
push
adcb
shl
adc
fistpll
push
jb
movsl
add
mov
mov
inc
mov
imul
pusha
roll
aad
and
or
int3
stos
hlt
and
adc
sbb
out
push
mov
dec
mov
gs
lcall
xchg
pop
jae
mov
jne
push
addr16
xor
pop
push
or
cmp
and
xor
test
aad
enter
xor
xor
push
cmp
xchg
into
fiadds
push
aad
jb
ljmp
push
das
xor
push
cmp
jae
das
jecxz
mov
dec
xor
incb
and
sbb
push
mov
nop
std
xor
loope
xchg
mov
cmp
or
loopne
dec
inc
jnp
cmp
sub
aad
push
fmuls
mov
adc
int3
addr16
rcpps
pop
out
bound
enter
jmp
sub
push
cld
pushf
mov
and
or
repnz
or
push
orl
daa
pop
lock
iret
cmp
mov
sub
sbb
mov
call
ret
sbb
fbld
adc
stc
xchg
and
icebp
test
in
jmp
sub
dec
imul
testl
or
add
ds
mov
insl
jg
movsb
dec
imul
imul
cmc
and
mov
mov
test
mov
sti
stos
jae,pn
inc
ret
out
mov
xor
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
