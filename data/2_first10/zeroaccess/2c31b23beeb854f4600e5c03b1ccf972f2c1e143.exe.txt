push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
iret
lods
scas
rorb
lahf
ret
sub
in
sbb
test
mov
mov
sahf
mov
sbb
pop
test
rol
or
mov
leave
out
mov
and
sar
push
pop
mov
jecxz
cs
jge
and
dec
fldt
repnz
jns
mov
adc
mov
out
mov
mov
jmp
sbb
xchg
fsubrs
in
sbb
xchg
cmp
test
push
jp
imul
push
cld
and
jg
mov
xchg
pop
ss
lret
mov
cmpsl
stc
addr16
sbb
pop
pop
stos
clc
mov
push
push
dec
inc
rcrb
xchg
test
push
out
or
mov
cmp
xor
int3
in
ds
push
jns
push
arpl
inc
cli
or
adc
imul
cs
cmp
cmp
jb
cmp
mov
xchg
mov
cmpsl
push
daa
mov
rorb
lcall
mov
sub
jb
inc
rorb
lahf
out
and
cs
movsl
mov
push
in
jo
mov
xchg
testl
into
jb
mov
out
outsl
xchg
lret
lret
pop
cmpb
xchg
add
add
dec
nop
push
push
repz
mov
out
mov
push
inc
andl
sbb
sbb
or
mov
or
test
ljmp
xor
rorl
cmp
loopne
cmpsl
add
push
cmpb
xchg
cmp
push
adc
mov
out
push
xor
or
shll
enter
int3
xchg
push
mov
filds
push
or
out
lret
or
sbb
out
and
lret
and
data16
xchg
add
jecxz
out
in
in
in
xchg
icebp
jecxz
mov
fdivl
mov
jbe
add
pop
insl
xor
sub
inc
push
out
mov
loop
jecxz
push
add
aaa
fcmovu
xchg
xlat
movsb
or
dec
or
and
adcb
xor
pop
fistps
outsl
push
icebp
jmp
in
daa
notl
outsb
pop
pop
pop
mov
call
sub
dec
xor
out
cmp
jp
imul
mov
in
fadds
call
jecxz
bound
xchg
xor
mov
adc
je
mov
cli
dec
data16
add
inc
add
fcoms
mov
mov
mov
daa
aad
xchg
pop
mov
xchg
push
out
scas
sub
push
addr16
fisubrl
push
push
hlt
outsb
inc
adc
mov
pushf
imul
sub
ja
bound
adc
jl
mov
jecxz
stos
add
push
fs
dec
mov
add
push
scas
fadds
add
add
sub
sbb
jmp
xchg
adc
dec
sarb
out
xor
mov
sub
sub
dec
jmp
out
mov
insl
outsl
sarb
fdivs
mov
clc
pop
ret
insb
xor
or
sahf
setl
data16
repnz
outsb
imul
jecxz
loopne
xchg
cltd
addr16
shll
jne
jge
mov
out
mov
push
inc
jne
in
cmpsl
dec
pushf
daa
test
jecxz
and
add
hlt
xchg
xor
popa
jo
fiadds
mov
mov
mov
pop
std
fisubrs
pop
or
scas
pop
das
mov
xchg
mov
sbb
xchg
dec
sahf
mov
in
and
rclb
dec
cmp
pop
push
out
inc
dec
xor
filds
ficomps
mov
xlat
push
dec
scas
cmpsl
inc
push
fdiv
xor
aas
sarl
jmp
mov
rcr
adcl
push
pop
std
call
pandn
int3
aam
push
or
int3
adc
sarb
dec
cmp
push
js
push
repnz
js
imul
pusha
loopne
jl
movsl
arpl
ja
pop
in
adc
inc
jle
notb
mov
push
push
ret
mov
and
data16
cltd
call
xor
js
push
cmc
xchg
popa
and
dec
adc
leave
push
sahf
cmp
sbb
aad
xor
mov
jmp
push
fisubrs
dec
std
push
int
and
je
ficoms
xchg
fwait
out
iret
jnp
xor
pop
fbstp
mov
xor
pushf
mov
sub
clc
lcall
testb
fwait
adc
push
lock
aad
push
or
xchg
sbb
xchg
jbe
or
dec
mov
push
sub
lock
adc
lahf
aaa
xor
or
popa
sub
dec
jle
fiadds
fidivs
push
push
mov
jns
mov
xchg
aam
loopne
jecxz
inc
xchg
lods
pop
xchg
aad
mov
test
in
pop
faddl
mov
xlat
pop
fdiv
es
mov
inc
dec
pop
sbb
cmp
jg
jl
mov
sub
and
aad
sbb
cwtl
add
push
sub
sub
stos
scas
out
jmp
mov
add
cmp
mov
jae
xchg
mov
mov
pop
mov
and
jmp
sbbb
out
in
fiadds
pop
enter
mov
xor
nop
movsl
lds
mov
movsb
movsb
imul
fidivrl
add
and
scas
lods
jge
or
or
into
fidivrs
mov
roll
add
dec
cmc
push
xchg
mov
incl
push
push
pop
inc
int
and
mulps
mov
or
xchg
xchg
xor
xchg
cmpsl
into
jo
int
jle
pop
push
jl
fldenv
aaa
gs
imul
sar
pop
mov
sub
dec
jg
cmp
test
stos
scas
enter
dec
outsb
scas
ds
mov
decb
xor
pop
test
push
or
orb
push
sbb
ret
sbb
sbb
pop
faddp
adc
ljmp
fnstsw
cmp
mov
jae
or
arpl
cmp
adc
into
mov
xchg
dec
je
dec
arpl
mov
inc
sbb
mov
pop
adc
xor
aad
sbb
push
cmp
fldcw
mov
pop
pop
mov
in
ret
adc
test
jne
mov
sarb
fldl
mov
jae
and
mov
xchg
lret
cmpb
imul
xor
loopne
loopne
mov
insb
ljmp
xchg
insl
cli
out
pop
xchg
fistl
jge
mov
push
sbb
repnz
cmpsb
fldcw
mov
add
cmp
mov
stc
lret
adc
cmp
mov
insb
mov
cmp
mov
in
fadds
xor
or
push
enter
sub
sbb
add
mov
stos
jge
push
cmp
outsb
inc
es
ret
int
or
mov
es
push
rorl
push
dec
dec
jns
jl
les
adc
mov
out
mov
cwtl
lods
lds
jge
push
gs
push
add
jmp
or
mov
add
push
fdivp
push
sub
mov
mov
pop
and
es
push
pop
imul
test
add
xchg
leave
adc
push
mov
nop
xchg
xor
addr16
jge
push
jbe
test
xchg
fnstsw
dec
pop
jmp
add
sub
inc
mulb
shrb
int3
shlb
gs
xor
mov
jns
fsubrl
jo
repnz
fstpl
jp
fndisi(8087
cmpsl
das
mov
in
dec
dec
insb
mov
push
insb
pop
fcmovnbe
insl
or
and
ljmp
sub
jae
jae
mov
xor
aam
inc
cmpl
cmp
out
xchg
pop
xchg
push
ret
insb
or
push
stc
fdivl
xchg
aad
mov
push
repnz
clc
int
jmp
scas
push
dec
movsl
add
add
cmp
fwait
jmp
lret
data16
dec
xchg
fwait
push
xor
lods
ss
mov
cmp
inc
mov
stos
xchg
dec
mov
jmp
xor
dec
int
inc
mov
das
and
and
jmp
pop
adc
dec
jecxz
mov
or
aaa
sbb
cmp
jp
jle
dec
pop
lcall
add
fcomps
iret
sub
add
cli
inc
push
mov
fimull
mov
popa
jae
movsb
stc
fcmovb
mov
sbb
ficompl
es
es
dec
out
leave
and
add
fstpt
push
rclb
jae
pop
cs
out
icebp
cs
popa
flds
inc
mov
mov
sbb
or
mov
in
dec
bound
in
cmp
es
mov
and
jnp
fisubs
and
push
add
fdivl
negb
sbb
or
das
xor
hlt
dec
sub
jbe
jge
mov
pop
cld
fcmovnb
xchg
mov
push
ljmp
daa
je
sub
push
jle
movsb
dec
call
ror
or
push
mov
mov
and
icebp
dec
in
push
xor
mov
sub
jl
xchg
test
in
shll
jb
scas
push
inc
mov
lret
xor
fsubrs
lret
mov
cmp
mov
test
xor
enter
sbb
jbe
or
push
adc
mov
and
or
icebp
dec
repnz
jmp
dec
shlb
mov
int3
sbb
loopne
push
cmp
das
push
sbb
in
jle
mov
pop
out
sub
cmp
je
inc
cwtl
je
pop
fldl
sahf
mov
into
aaa
sub
jmp
cmp
push
pop
pop
repz
call
cmp
or
out
pop
and
dec
sahf
xchg
cmp
leave
test
ja
pop
sbbl
cmpsb
and
mov
and
and
mov
idiv
fnstenv
fisubl
sbb
lahf
stos
fsts
and
and
lock
test
or
jo
inc
push
ja
sbbb
jmp
xchg
mov
jge
sub
sub
pop
push
cmc
cmp
pushf
cmp
fsub
mov
jae
ret
push
xchg
mov
mov
xchg
dec
or
out
sub
mov
fiaddl
fwait
mov
fwait
sub
imul
sub
xchg
adc
scas
stc
mov
movsb
pushf
gs
loope
js
mov
lods
sahf
push
or
push
sbb
cmpsb
and
add
dec
lods
and
or
and
in
mov
inc
cmp
lock
pop
push
mov
push
cmpsl
xor
test
outsb
pushf
xchg
call
pop
arpl
or
ss
inc
in
in
cmc
lds
sarl
bound
fdivp
das
stos
imul
decl
repnz
xchg
js
jg
incl
add
jne
rclb
js
jns
in
and
mov
aam
stos
mov
enter
jmp
clc
add
add
push
pop
lret
sbb
cmp
ds
fnstenv
pop
push
popa
and
pop
out
fwait
dec
cs
sub
add
inc
jno
add
sahf
adc
add
lds
mov
sub
aad
xor
rcll
or
push
xchg
mov
dec
pop
ljmp
mov
jno
xor
int
and
mov
dec
je
mov
in
inc
pushf
fnsave
ljmp
cmp
idiv
js
subl
or
das
and
in
pop
aas
cld
xchg
mov
imul
js
xor
inc
adc
or
and
push
and
cmp
movb
es
mov
orl
movl
pop
add
fmul
jp
xchg
out
mov
aaa
sbb
xor
ljmp
dec
jae
push
or
mov
inc
dec
cmpsl
subl
adc
stos
jle
and
cmp
push
push
push
dec
mov
lret
sbb
add
jae
jg
inc
je
mov
adc
jno
push
add
bound
sbb
and
adc
icebp
mov
jmp
push
pop
inc
int3
icebp
pop
sahf
mov
push
lea
xor
or
cmp
xchg
outsb
mov
pop
xor
xorb
addr16
push
push
inc
out
lret
adc
xchg
add
xchg
mov
movsb
push
sbb
add
jecxz
out
mov
push
push
lea
clc
push
sahf
ud1
aaa
push
push
sbb
mov
mov
sbb
sbb
mov
int
lods
imul
mov
and
xchg
sbb
int3
mov
mov
addb
jnp
push
sbb
mov
mov
push
jle
adc
and
sbb
pop
insl
fwait
in
movsl
div
in
lea
ror
jle
mov
lods
stc
rcll
jnp
xchg
scas
mov
xchg
cmp
xchg
mov
cld
and
xor
jmp
gs
lret
cwtl
sub
js
or
and
dec
mov
aas
rcrb
or
shrl
jns
mov
sbb
outsb
dec
push
push
mov
test
push
pop
jae
inc
pop
testb
jmp
cmpsl
insb
or
mov
adc
bnd
mov
jmp
sbb
dec
add
movsl
lods
cmpsb
gs
imul
mov
push
and
xchg
mov
jne
inc
jo
pop
and
mov
enter
add
mov
mov
fsubs
sub
and
and
les
xor
xor
dec
out
jnp
lret
xchg
mov
add
pop
outsb
popa
jbe
or
xchg
rolb
xor
movsb
cli
lds
das
cmp
sub
xchg
adc
gs
add
add
mov
fxtract
or
in
icebp
fcompl
rcrl
orb
mov
mov
and
sub
mov
scas
lahf
mov
cmp
push
cld
xchg
pop
out
xor
sahf
div
push
aam
cltd
int3
or
dec
or
xor
into
cmp
push
xchg
cwtl
movaps
push
push
cmp
cld
xor
add
cmpsb
or
sub
aad
jnp
mov
xor
mov
js
mov
sbbl
pop
cltd
add
pop
inc
and
pop
pusha
outsb
mov
add
and
test
lea
mov
loope
add
mov
mov
popa
fsubs
and
rcrl
or
pop
jg
les
test
les
cltd
mov
pushf
test
ja
pop
lea
jns
xor
and
popf
popa
add
ret
adc
pop
mov
add
push
ret
in
fisubrs
es
js
push
mov
ljmp
icebp
cmp
push
pop
pop
lods
fcoms
cltd
jo
orb
push
mov
pop
mov
rol
add
dec
aaa
jmp
xchg
xor
xor
dec
sub
jl
mov
arpl
out
mov
push
sbb
mov
cmpl
mov
cli
and
and
pop
pusha
cwtl
int
int3
jmp
pop
ret
mov
push
jg
fldln2
loopne
lret
push
xchg
xchg
jg
inc
push
pop
cmp
loopne
arpl
xchg
fsubl
sub
push
mov
pop
call
add
and
inc
inc
jno
mov
jecxz
sarb
or
xchg
mov
popf
mov
jns
inc
in
adc
mov
sub
cld
repnz
das
or
scas
test
out
les
cmpsb
inc
mov
in
rorb
mov
jle
mov
jbe
mov
lret
js
jl
inc
ss
sti
xchg
mov
lock
xor
lock
xor
mov
test
push
fildll
adc
loopne
and
push
mov
daa
xlat
and
pop
adc
ss
mov
in
push
cli
push
aam
jmp
aaa
repnz
push
rcll
inc
mov
or
loope
or
and
int3
sub
bound
add
dec
and
lock
pusha
push
into
out
and
stos
je
mov
pop
out
cwtl
xchg
call
or
mov
in
in
add
adc
out
xchg
push
ja
imul
mov
mov
or
and
addr16
jmp
inc
sbb
jg
or
add
adc
lods
lahf
add
and
push
and
push
mov
pop
xor
dec
hlt
sub
xchg
bndstx
sbb
stos
andl
js
push
xor
jge
xor
add
add
dec
push
push
in
mov
mov
or
xchg
cmp
or
push
cwtl
int
xchg
adc
and
pop
out
sub
stos
movsl
in
adc
popl
movsb
insb
bound
add
adc
dec
xchg
pop
xor
push
pop
insb
xor
das
daa
test
das
mov
sub
adc
add
out
hlt
xor
sub
ja
pop
cltd
and
mov
jnp
jo
in
std
into
sub
out
sub
mov
inc
mov
adc
cld
mov
shll
xor
sti
xchg
dec
rep
push
ja
xchg
cltd
cmp
jae
jo
setno
cmp
adc
jo
inc
addr16
and
and
xchg
fneni(8087
sbb
aad
push
adc
dec
ja
pop
fsts
cld
push
adc
xchg
pop
push
dec
repnz
pop
xchg
xchg
sub
cmp
and
lcall
cmpb
pop
mov
inc
mov
mov
jecxz
dec
call
movsl
sub
fisubs
or
in
mov
dec
lock
out
xor
scas
and
or
or
bswap
fdivrl
clc
ret
cmp
and
mov
pushf
loopne
cmp
push
in
fnsave
xlat
xchg
mov
push
scas
ret
hlt
lods
pop
daa
mov
arpl
cmp
pushf
or
xchg
movsl
mov
xchg
stos
lret
inc
movsl
shll
ret
loope
stc
icebp
test
movsb
pop
sti
test
xchg
mov
lea
shll
lret
lret
into
imul
std
ja
jns
push
push
sub
or
std
and
sbb
out
xor
pop
leave
sbb
icebp
cs
jge
inc
push
out
out
loopne
aas
jae
jns
ret
insl
out
sbb
pop
mov
inc
lods
neg
or
notb
push
stc
ds
nop
divb
mull
sub
adc
sub
leave
mov
in
xchg
punpckldq
push
in
movsl
inc
orb
mov
mov
sub
mov
push
mov
andl
daa
rorl
outsl
jge
inc
jnp
sub
es
adc
dec
dec
push
int
es
jge
cli
adc
stc
xor
test
xor
adc
lods
div
push
jbe
dec
out
pop
sbb
fnstsw
shl
mov
mov
jge
scas
add
fsubp
add
or
dec
mov
push
es
jne
negb
or
sbb
mov
inc
ja
loopne
push
pop
icebp
fnstenv
les
loop
xor
pop
mov
pop
dec
aam
xchg
xor
sub
xor
mov
stc
jno
out
jecxz
sub
call
ljmp
adc
pop
xor
add
lahf
sarb
fucom
jp
mov
mulps
cltd
cmp
repnz
fadd
in
ds
xchg
mov
hlt
lods
stc
mov
mov
cmp
enter
push
hlt
cmp
push
aas
jle
subb
rcrb
lret
in
jmp
push
mov
mov
dec
mov
dec
mov
inc
xor
and
std
data16
mov
cwtl
je
test
mov
mov
jp
fsubrs
cmpsb
mov
stc
out
stos
popa
mov
scas
jae
inc
sbb
lahf
pop
jp
cwtl
adc
pop
inc
xor
pop
cld
adc
jge
loop
scas
pop
cs
fcmove
adc
push
addl
mov
imul
ljmp
aas
dec
jg
in
movsl
sarb
stos
sub
aam
ret
push
inc
out
xchg
jp
add
sbbb
push
outsb
xor
test
or
jno
xchg
sub
pusha
mov
xchg
gs
test
dec
mov
js
inc
notb
dec
shll
push
jae
cwtl
ja
in
push
adc
pusha
addr16
adc
mov
mov
mov
xor
mov
jne
lds
add
and
xchg
loop
rcl
ds
stc
pop
xchg
mov
mov
fnstenv
les
orl
cmp
inc
inc
js
into
rsm
leave
addr16
fldt
dec
cmc
push
jae
addl
lret
or
add
and
cmp
mov
xchg
xchg
push
nop
imulb
ror
mov
dec
adc
mov
repnz
inc
out
xlat
mov
push
jecxz
call
mov
jbe
iret
adc
mov
push
and
hlt
sti
out
lods
inc
aam
adc
adcb
scas
adc
imul
jg
dec
cmpsb
push
xchg
push
in
sub
xlat
or
push
push
loop
out
mov
aad
fidivl
push
fs
xor
jb
mov
outsb
mov
xchg
repz
cli
pop
std
pop
pop
add
into
cwtl
cmp
jecxz
sbb
fmull
stos
fxch
in
and
mov
sub
out
xor
adc
loop
not
and
jp
stos
int3
pop
mov
pop
jecxz
jnp
ss
sbb
aad
int3
test
data16
lods
add
mov
add
sub
in
cli
pop
push
stos
add
push
ret
leave
rol
and
mov
sti
lock
dec
dec
scas
xor
xor
cmp
mov
xchg
aad
in
nop
iret
pop
out
jno
cmp
aad
xor
mov
cmpl
clc
xchg
xlat
sub
dec
roll
ljmp
hlt
scas
cmp
xchg
shr
dec
push
mov
dec
cli
add
jmp
enter
jnp
addb
cli
mov
xchg
inc
pop
sub
out
lcall
sti
cmpl
mov
adc
xchg
pop
stc
sbb
aad
lret
or
out
movsl
mov
mov
pop
pop
xchg
push
sbb
xchg
addb
stos
jb
enter
je
call
mov
mov
into
aad
fcompl
in
enter
icebp
jecxz
movsl
push
push
inc
xor
sbbb
std
adc
ljmp
or
in
pop
inc
clc
mov
fdivrl
mov
iret
test
repnz
mov
pushf
ds
and
repnz
dec
jle
outsb
ret
adc
jnp
inc
insl
popf
rorl
enter
fiadds
loopne
mov
dec
mov
cmp
mov
xchg
loope
movsb
scas
cmp
out
out
test
clc
repz
test
out
testl
pop
mov
out
sbb
lods
fwait
int
or
cmc
pop
daa
out
scas
adc
movl
sub
mov
mov
sahf
and
lods
movsl
add
and
cmp
pop
enter
dec
xor
sahf
mov
push
fadds
mov
pop
push
add
imul
pop
sub
fst
xor
in
stos
xor
lock
and
inc
fistpll
aas
ds
nop
mov
out
hlt
notb
xchg
in
clc
pop
loop
ss
lods
push
jno
leave
jle
nop
mov
lret
jecxz
cmp
xchg
scas
insl
push
push
and
jne
lret
out
in
mov
lret
fsubrl
cmp
popf
cs
or
iret
sub
bound
stos
dec
jg
pop
fildl
pushf
mov
mov
daa
pop
mov
aad
loope
lahf
inc
aad
and
bound
dec
ja
les
push
push
mov
popa
push
xor
outsb
sbb
loop
rorb
in
or
add
fwait
cld
push
sgdtl
jmp
sub
push
out
mov
scas
or
inc
cmpb
daa
addr16
mov
jo
sahf
mov
mov
or
mov
dec
mov
jle
scas
cmpsl
sub
add
in
pusha
mov
loop
lock
ljmp
xchg
mov
mov
dec
add
nop
fistl
cltd
sbb
mov
or
int3
testl
sbb
pop
dec
cmp
jge
sub
es
mov
aam
push
and
fwait
cld
mov
arpl
lods
and
arpl
call
cwtl
sub
enter
dec
dec
or
enter
cmp
jl
dec
rcr
out
into
mov
jecxz
sbb
pop
cmp
pop
jne
in
jno
xor
cmp
sub
dec
mov
push
sub
stc
js
cmpsb
add
lret
and
cmc
movb
leave
outsb
sub
mov
ljmp
mov
xchg
aad
pop
popf
lea
cltd
inc
push
repnz
adc
es
or
mov
les
lcall
cmp
popf
push
loopne
adc
or
je
push
loop
leave
dec
int
xchg
ret
loope
jg
lock
mov
clc
out
mov
data16
cs
aaa
ja
mov
out
cmpsb
dec
pop
shll
and
xchg
test
rorl
pop
sbb
and
loope
cmp
lods
int
stos
repz
sub
jns
insl
and
xor
and
pop
push
cmp
cmp
mov
lcall
test
sub
xchg
cmp
sub
sub
fiadds
inc
xchg
push
sub
addr16
loop
sti
lock
je
sub
sub
jbe
xor
xchg
mov
cmp
das
and
push
outsl
in
bndstx
out
imul
dec
and
mov
mov
dec
sbbb
call
in
sahf
out
sub
sub
xor
mov
int3
or
dec
into
xchg
mov
ret
cld
mov
adc
sub
adc
jnp
sbb
std
in
sbb
inc
in
mov
adcb
mov
decb
dec
inc
push
sbb
or
pushf
in
andb
sbb
leave
sub
outsb
shll
ja
and
fnsave
xor
fsubl
sbb
xchg
cmp
fimuls
mov
mov
cmp
call
ret
dec
inc
nop
scas
ja
rorl
fwait
mov
push
sub
fimull
imull
jmp
mov
mov
mov
les
in
mov
mov
test
cmp
out
mov
sub
lea
pand
sbb
loopne
test
mov
pushf
pcmpgtd
scas
out
inc
mov
cmp
adc
es
mov
mov
pusha
aas
push
mov
not
lea
xor
jmp
hlt
add
and
and
out
add
cmp
cmp
ljmp
jp
leave
mov
mov
push
fs
js
ret
cmpsb
mov
leave
pusha
lahf
mov
fcomi
pop
mov
test
scas
add
jne
imul
fsubl
push
add
xchg
push
es
add
jne
lahf
lods
pop
sub
mov
mov
loope
cmc
push
movsl
lods
sub
sahf
loop
cmpsl
inc
loopne
popa
loopne
ss
jae
inc
loope
imul
arpl
xchg
xchg
addr16
or
aaa
fimuls
add
or
arpl
dec
sub
mov
or
std
mov
clc
mov
pop
push
jno
push
and
bound
into
pusha
test
jmp
pop
iret
cmp
sub
cmp
movsb
iret
sbb
lcall
loope
sahf
dec
adc
adc
xchg
out
xchg
insb
insb
jo
mov
cmp
insl
sbb
xchg
jno
cld
mov
jb
mov
ds
xor
sahf
mov
shlb
mov
adc
das
jb
repz
popa
or
pop
out
xchg
adc
adc
fwait
out
and
sub
int3
pop
in
enter
jbe
pushf
shll
xor
cmp
pop
mov
inc
fcomps
and
in
add
push
stos
in
insb
add
ror
shl
int3
pusha
mov
xor
daa
idivl
incl
out
dec
jl
inc
repz
ljmp
es
mov
aaa
les
outsb
aaa
gs
ja
hlt
lcall
test
dec
leave
cmc
jb
inc
stc
cltd
in
xchg
test
movb
or
outsb
ja
and
shlb
xor
mov
add
loopne
add
mov
mov
push
xor
push
add
pop
inc
mov
mov
mov
mov
out
pop
les
call
dec
xor
mull
sbb
jg
outsl
mov
and
ror
or
ja
xchg
xchg
jb
enter
add
inc
ret
mov
in
subb
js
add
cmp
testb
xor
mov
sti
inc
pop
pop
data16
jmp
sub
jmp
xchg
fisttpl
insl
lea
lods
arpl
inc
or
ficompl
sbb
out
adc
scas
fcmovnbe
push
fdivs
add
mov
xor
imul
divb
mov
fimuls
lds
fwait
jecxz,pt
lea
sbb
or
nop
clc
adc
fisubrs
cli
stc
mov
jnp
mov
and
shrl
sbb
push
rcll
fisttps
test
or
arpl
nop
xchg
shrb
fsubrs
cld
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
lahf
cmp
decl
pop
jp
or
jp
and
fnstcw
push
and
add
fisttpl
xor
xlat
out
insl
rol
ret
pop
cmpb
mov
sub
lret
pop
add
outsb
jg
lock
pushl
push
ficoml
leave
inc
in
sti
pop
neg
inc
mov
les
fsincos
xor
enter
dec
rorl
popa
test
sub
mov
add
stc
push
ds
imul
in
sbb
leave
mov
mov
push
dec
xchg
jae
jno
rorb
rclb
aad
dec
push
test
mov
fildll
cmc
in
ret
pop
adc
sub
or
xor
andb
mov
xor
sub
jne
and
inc
xlat
mov
aaa
sub
mov
pop
mov
fdivs
pop
stos
fadds
pop
jns
mov
fistps
shll
xchg
rolb
sarl
xor
and
dec
cmpl
leave
outsl
jnp
sub
fcompl
in
or
mov
jle
push
es
dec
mov
lret
mov
jns
sbb
dec
call
or
sbbl
inc
cmp
iret
lcall
pop
adcl
ja
test
sub
and
fisubrs
aam
adc
push
jnp
or
sahf
adc
push
sahf
xor
out
mov
sbb
xchg
mov
incl
pusha
inc
subl
pop
fisttps
dec
leave
faddl
jge
out
mov
aam
addr16
sbb
sti
xchg
bound
and
ss
insl
jle
push
testb
sub
fcomip
out
cmpsb
aam
or
shll
mov
push
test
sbbl
sbb
or
add
movsl
divl
pop
push
aas
push
push
adc
jns
dec
inc
xor
push
add
aad
sub
sub
mov
jle
outsl
int3
push
add
pop
sarl
and
lock
test
int3
pop
cmp
mov
dec
pop
add
pop
jns
jmp
pop
subl
les
sub
push
sbb
addr16
mov
jno
rcr
cmp
and
jmp
push
mov
jns
push
stos
jae
xchg
test
jmp
adc
mov
push
negb
popa
xor
push
lcall
inc
pop
scas
xor
int3
bound
lret
decb
out
inc
fisubs
dec
and
mov
gs
mov
mov
mov
ja
pop
shl
and
mov
and
pop
add
das
adc
dec
into
add
xchg
shlb
adc
pop
outsl
dec
pushf
add
jg
xor
jb
add
adc
dec
inc
out
and
jo
shl
pop
pushf
mov
push
or
nop
mov
xor
push
mov
lods
loop
add
lret
inc
scas
in
leave
lret
mov
fprem1
stc
mov
test
mov
cmp
aam
mov
dec
stos
mov
fimull
je
xchg
into
std
jle
and
mov
pop
mov
push
jg
mov
icebp
ljmp
cmpsb
or
addr16
fs
sahf
and
stc
pop
outsb
jo
test
popfw
outsl
xchg
cld
inc
rclb
icebp
mov
repnz
add
inc
mov
int3
cs
mov
or
jb
in
dec
cwtl
fstp
and
mov
clc
fidivl
jae
xor
xchg
jle
das
movsl
push
fistpl
xchg
mov
mov
add
xor
mov
xchg
push
sbb
and
lods
inc
loopne
ljmp
push
subl
in
jg
or
inc
incb
fldl
pop
addb
jl
lods
mov
dec
push
push
and
mov
jmp
ret
jecxz
cmp
add
loope
shlb
sbb
inc
dec
stc
shlb
dec
lock
pop
lods
loope
dec
or
push
adc
aam
xchg
push
test
lret
mov
push
js
add
and
imul
push
aas
jp
rorl
adc
pop
cwtl
jg
call
and
pop
pop
push
jbe
stos
lds
dec
pop
xchg
imul
xchg
out
fisttps
lods
lea
imul
inc
mov
idiv
push
test
sbb
cmp
lcall
ret
add
lods
out
and
sti
pop
test
rcll
leave
mov
mov
mov
push
jb
push
and
pop
fwait
lahf
shrb
popf
aad
sub
cmp
xor
cmp
pop
shlb
mov
arpl
ss
arpl
mov
or
imul
clc
icebp
shll
mov
pop
push
mov
out
jmp
xlat
andl
fwait
lds
push
rcr
lods
inc
scas
adcb
xor
leave
movsb
lods
ja
das
call
xor
push
out
outsl
cmp
jmp
jmp
fwait
or
cmp
lret
cmp
popf
mov
gs
lretw
faddl
push
xor
mov
xchg
xor
out
pop
repnz
push
jecxz
inc
cmp
mov
xor
mov
dec
add
popa
dec
outsb
mov
xor
mov
arpl
mov
cltd
push
fsub
popa
or
rorl
inc
js
jp
adc
test
mov
mov
in
insl
cmpb
inc
repnz
repnz
and
and
ss
popf
addl
mov
jo
push
mov
add
outsl
dec
jp
and
mov
push
popf
scas
push
ret
pop
mulb
jle
xor
cwtl
push
orb
xor
std
xchg
xchg
cwtl
sub
sbb
push
xlat
mov
es
sub
out
or
xlat
sub
and
add
fisttps
in
sub
lret
xchg
es
call
mov
mov
push
xorl
cmpsb
inc
adc
shrl
pop
or
push
mov
or
cmp
push
je
outsl
dec
push
icebp
push
jo
ror
sahf
lods
ret
lcall
add
xchg
leave
jle
pusha
adc
popa
push
stos
push
jg
xchg
mov
jnp
cmp
or
dec
daa
fists
jb
ret
add
sahf
cld
xor
xchg
fcoml
sar
xor
xchg
pop
jne,pn
push
xor
push
and
cltd
fcoms
pusha
pop
fucomp
scas
cmpb
inc
mov
jl
push
pop
push
mov
pop
rcll
hlt
les
lods
add
adc
pusha
test
mov
mov
mov
pop
jp
add
cmc
mov
fidivrl
mov
and
mov
jg
ret
negl
fcoml
mov
pop
lods
add
push
jnp
hlt
cmpsb
adc
ret
and
mov
or
sub
mov
mov
sbb
sbb
nop
and
scas
adc
and
divl
lret
sbbl
lret
fmulp
arpl
cmpsb
inc
or
jbe
mov
rclb
mov
out
sub
jg
xor
mov
push
dec
pusha
ficoms
adc
jmp
add
xchg
test
add
mov
push
sbb
pusha
jns
push
addl
pop
mov
fmuls
dec
aad
sti
pop
lret
stos
inc
jle
jo
mov
push
inc
enter
jle
sub
scas
push
push
jg
jbe
sbb
pop
les
adc
insb
ja
clc
cli
or
shrb
insl
test
push
popa
adc
imul
push
mov
inc
cli
invd
xchg
sub
es
loopne
pop
pop
pop
add
and
std
mov
mov
iret
mov
mov
pop
addr16
adc
dec
adc
xchg
into
shl
movsb
mov
add
mov
inc
mov
pop
rorb
dec
inc
dec
jg
dec
push
repz
cmc
mov
dec
dec
insl
loop
fisubrl
cltd
pop
notb
outsl
xchg
pop
push
mov
cli
push
sbb
mov
es
enter
pop
data16
fisubs
movsb
push
je
call
into
xchg
dec
in
hlt
jb
lahf
icebp
das
jl
mov
push
scas
mov
bound
xor
imul
cmp
sbb
push
dec
notb
mov
jle
cmc
cmp
into
cld
lea
xorb
push
dec
dec
enter
xor
jp
pop
xchg
dec
mov
lret
jle
jne
lcall
notl
repz
iret
push
shll
scas
cmp
push
popl
lret
daa
ret
mov
cld
jecxz
sub
data16
mov
mov
mov
mov
shll
jo
inc
pop
push
lock
inc
mov
imull
popl
or
push
pop
bound
and
cmp
and
xorl
jo
xchg
xchg
push
outsl
dec
fstps
dec
dec
lods
and
divl
mov
inc
ljmp
repz
clc
popf
xchg
popa
popa
shrl
mov
jle
jae
xchg
repnz
imul
insb
dec
mov
mov
or
bound
call
incl
jmp
mov
xchg
pusha
adc
and
data16
js
lock
cs
mov
jg
adc
fcomip
rolb
fbstp
xchg
sbb
cwtl
xchg
xchg
mov
xor
jno
loopne
les
lret
pusha
dec
xor
mov
sub
and
cmp
loope
dec
outsb
sbb
dec
inc
inc
lods
jo
sldt
jmp
or
sub
jmp
lods
fwait
js
push
mov
cmpsl
daa
mov
mov
outsb
pop
inc
ljmp
push
ja
das
jmp
test
mov
jmp
data16
lds
mov
jmp
gs
gs
xor
cwtl
test
mov
jb
fdiv
inc
sub
mov
testl
and
mov
aad
jnp
popa
mov
jecxz
mov
sti
imul
lods
xor
dec
pop
jbe
data16
or
bound
pop
cwtl
les
ret
dec
push
xchg
jb
loop
inc
add
and
test
fists
jns
in
mov
push
loope
push
popf
orl
pop
jmp
fwait
xorb
lea
dec
or
add
ret
stos
xor
push
das
xchg
sbb
push
mov
add
icebp
xor
jne
pop
or
sbb
addr16
pusha
nop
push
mov
xchg
inc
test
pushf
pop
inc
push
add
inc
adc
pop
addr16
aad
jge
cmpb
mov
jae
cmp
push
push
popa
int
addb
insb
jne
xchg
mov
insb
mull
mov
out
in
lds
arpl
inc
fwait
or
and
in
outsl
jl
mov
sahf
shlb
or
ja
adc
jmp
jns
cltd
faddl
jne
sahf
jg
jle
push
popf
mov
outsb
scas
push
cmp
pop
pop
loopne
rcrb
lods
jge
cmpsb
ds
lahf
lods
mov
push
jecxz
add
pushf
mov
adc
sub
cmp
pop
add
xchg
icebp
test
scas
mov
mov
insl
test
push
xchg
outsb
xor
pop
sbb
mov
out
addl
shll
pop
dec
adcl
mov
mov
out
in
mov
scas
jno
push
iret
xchg
adc
adc
stos
decb
divb
inc
daa
dec
push
xchg
fsubrs
in
shrd
aaa
dec
dec
cmp
mov
or
cli
rcrl
jnp
dec
inc
shl
and
or
sbb
aas
sub
addr16
xor
jge
lcall
dec
icebp
jae
jp
test
push
mov
mov
lods
xchg
repnz
aaa
xchg
mov
data16
xchg
fldt
cli
xchg
lcall
pusha
pop
jmp
fisttps
xor
shlb
fs
sub
loopne
jl
xrelease
jmp
cmc
xchg
lcall
pop
movsb
jg
js
jns
incl
or
les
int3
adc
outsb
inc
cmp
mov
inc
es
roll
pop
jne
mov
pushf
sarb
sub
sbb
inc
fidivrl
lea
ja
fcomps
xor
or
ja
loope
xchg
popa
fsubs
xchg
cmc
adc
imul
dec
negb
sarb
mov
or
insb
xchg
add
dec
es
inc
push
sub
repz
outsb
shr
jns
fld
mov
sub
aas
in
shll
dec
loopne
inc
jge
adc
jle
loopne
imull
inc
adcb
int
add
mov
sbb
pusha
js
or
pop
push
xchg
loopne
lods
xor
pushf
je
jb
test
cmp
scas
pop
add
mov
dec
or
ja
xchg
nop
stos
jecxz
xor
or
pop
mulb
jno
lds
mov
dec
jo
sub
jo
cmpsl
clc
pushf
in
cmp
sarb
clc
mov
or
inc
addr16
sub
loop
popa
sbb
subl
scas
icebp
push
mov
or
push
cmp
push
int
pushf
add
cmc
insl
imul
lea
push
jp
std
inc
pop
rorb
ret
push
fs
shlb
pop
sub
inc
pop
jne
sbb
shrb
or
jecxz
mov
sbb
mov
xchg
lret
cmpsb
out
pop
add
fs
test
adc
sub
dec
repnz
nop
pop
cwtl
jbe
ret
test
pop
insb
clc
rclb
add
aam
pop
lea
mov
dec
mov
xor
add
popa
clc
pop
mov
jnp
imul
xor
stc
bound
dec
cld
mov
inc
add
mov
xor
mov
xchg
mov
pop
dec
imul
sub
cmp
cld
xchg
mov
cmpsb
mov
sub
hlt
xor
push
mov
das
push
add
add
xchg
in
pop
mulb
enter
scas
addr16
test
jecxz
frstor
mov
bound
push
popf
adc
lret
fwait
sbb
scas
and
mov
cwtl
sub
icebp
insl
lds
sbb
cli
jb
outsl
mov
mov
js
in
add
enter
adc
cwtl
jg
fwait
inc
dec
dec
in
movsl
pop
lret
sar
daa
dec
jp
jns
xchg
jp
mov
imul
push
stos
pop
out
or
bound
xchg
jo
push
add
aaa
add
enter
and
rorb
test
xchg
pop
dec
movsl
push
into
add
out
dec
lods
xchg
and
adc
int
push
sbb
jbe
xchg
jns
push
outsb
loop
jle
fdivl
test
leave
xor
adc
sbb
enter
testl
int3
and
adc
xor
imul
sub
test
test
es
aam
push
les
mov
add
testb
cmc
fildl
in
pop
inc
mov
stc
rcr
fs
test
inc
lcall
xor
adc
sbb
jge
lahf
xor
jmp
js
and
pop
inc
ffree
das
sbb
mov
push
push
leave
add
cmc
aas
rcrb
enter
inc
xor
js
cwtl
mov
fsubl
bound
or
xor
sub
data16
fwait
test
or
icebp
icebp
cmp
push
push
fmul
mov
or
xor
lods
push
rcrl
iret
js
inc
mov
pop
popa
xchg
into
fisttpll
dec
xor
sub
or
pop
or
sbb
dec
shll
inc
and
mov
js
sbb
mov
out
jp
xlat
mov
insb
testl
mov
adc
lahf
sub
mov
cli
add
jbe
and
xchg
arpl
adc
mov
xor
lds
scas
pop
mov
test
in
or
fcmovne
stos
jnp
lea
push
aad
int
sub
push
cli
popa
xchg
xor
jns
addl
adc
jns
pop
movsb
cmc
fsub
sbb
aad
lds
ret
movsb
mov
mov
add
xchg
push
mov
js
cmp
pusha
imul
out
in
mov
xchg
das
or
push
fnstsw
mov
cmpsb
movsb
push
lahf
inc
jmp
cwtl
ret
loope
and
in
jnp
out
aad
sbb
dec
push
scas
andb
inc
out
pop
pop
push
vpsignb
orl
sub
xchg
xchg
filds
arpl
pop
fcmovbe
pop
mov
mov
pop
dec
jo
test
adc
mov
mov
mov
inc
out
sbb
test
lock
aam
pop
pop
dec
incb
scas
and
adcl
das
inc
shll
xchg
jp
sub
pushf
pop
inc
addr16
xlat
mov
dec
and
push
loopne
insb
push
in
cmp
or
in
in
cltd
jb
xlat
test
adc
xchg
push
cmpsl
out
fistl
and
test
ljmp
hlt
add
scas
cwtl
push
adc
cmp
sub
mov
cltd
dec
mov
imull
inc
loop
inc
add
adc
repz
mov
cmp
adc
mov
in
pop
xchg
sub
adc
dec
mov
stos
mov
sarl
jb
outsb
insl
lahf
add
and
dec
add
cmc
xchg
hlt
loope,pt
addr16
xchg
xor
sub
imul
negl
fs
push
lock
xchg
adc
pop
inc
rolb
gs
repz
mov
insl
filds
mov
clc
pop
cmp
jg
es
out
js,pt
dec
pop
les
outsb
jl
mov
stos
scas
jge
mov
xchg
mov
push
outsb
shll
shlb
faddp
hlt
mov
bound
fdivr
mov
dec
and
lds
cltd
rclw
mov
sub
add
scas
aad
sub
and
ret
mov
clc
cmp
shrb
hlt
and
loopne
pop
test
fwait
inc
xor
xor
and
xchg
call
pop
fs
cmp
pop
adc
pop
mov
add
sbb
cmp
sbb
xlat
and
lret
or
adcl
outsb
movsl
stos
cmpl
out
cmpsl
adc
and
lret
inc
icebp
pop
adc
and
pop
cmp
nop
inc
sub
sub
out
xor
mov
fcomps
mov
in
mov
fcmovne
cmpsb
mov
and
popf
jnp
push
mov
out
push
mov
outsb
mov
ret
and
push
mov
sbb
mov
xchg
arpl
nop
xor
mov
mov
push
jnp
xchg
ljmp
test
push
pop
cwtl
out
and
jae
int3
inc
inc
add
inc
mov
inc
or
cld
jmp
mov
inc
pop
pop
inc
push
repnz
out
pushf
jno
out
mov
dec
hlt
mov
rorl
mov
cmp
decb
out
mov
xchg
jecxz
test
int3
push
sbb
aas
pop
jno
jnp
xor
je
mov
bound
mov
xor
mov
pop
ror
aaa
repz
cltd
xchg
mov
mov
sahf
pushf
push
repnz
pop
cmc
push
jp
jmp
inc
mull
xchg
shrb
mov
push
pop
daa
inc
sbb
inc
test
popf
pop
mov
ljmp
cli
mov
pop
inc
shl
pop
pusha
mov
repnz
cmpl
inc
push
mov
stc
hlt
mov
xor
cmpsl
ljmp
xchg
push
adc
cli
out
fstpl
sahf
cs
lock
cld
xor
xchg
and
xor
repz
loop
sbb
sub
xchg
test
dec
out
cmp
pushf
mov
mov
mov
pushf
dec
pop
test
xlat
and
lcall
pop
icebp
xlat
rorb
add
stos
xorb
adc
mov
aad
xor
fcoms
xchg
fsubl
imul
mov
xor
lea
jge
ljmp
mov
ds
push
rclb
popa
mov
ret
fbld
bound
mov
shlb
movsb
push
jnp
adc
pop
mov
pop
jle
icebp
das
inc
push
push
cmp
jnp
add
fistpll
lea
filds
cmp
and
xor
lcall
ret
int
xchg
mov
sub
aas
fcomps
insb
mov
adc
pop
pop
shll
jge
outsb
insl
xor
aam
lods
jmp
fsub
in
mov
add
sub
mov
sub
ss
mov
jns
push
hlt
aaa
jl
into
popf
orl
scas
xchg
testl
sub
inc
int3
cmp
imul
ds
int
dec
mov
jmp
std
sarl
mov
jl
stos
mov
loope
leave
adc
dec
icebp
repnz
sbb
push
pop
push
dec
fmulp
mov
cmpsb
xor
and
sahf
arpl
repz
and
and
push
jo
stos
sbb
pusha
int3
push
jecxz
jmp
int
insl
je
pop
push
sbb
das
dec
clc
into
mov
in
imul
mov
jge
push
ds
call
sub
push
cld
lds
ret
std
js
mov
out
mov
jno
aaa
sahf
insl
cmpsl
sub
popa
lea
cmc
sbb
lcall
scas
xchg
cmc
mov
adcl
or
push
xchg
mov
xchg
cmpsb
xchg
test
adc
push
dec
repnz
fs
adc
push
fisubl
mov
and
in
loope
stc
roll
adc
lret
lods
test
subl
pop
dec
or
fwait
add
in
dec
sbbl
clc
in
hlt
push
ret
jo
cmpb
into
mov
bswap
ds
push
dec
fmuls
xchg
push
adc
inc
inc
xor
add
addr16
sub
dec
bound
add
push
pop
mov
mov
icebp
in
pop
or
cmp
xor
xor
mov
mov
push
push
xor
outsb
roll
push
sti
bound
add
dec
int
push
ja
and
sti
jno
fnstcw
mov
int3
int3
xchg
fdivl
mov
xchg
pushf
in
outsl
inc
test
lods
xchg
cmp
into
add
adc
xchg
fwait
mov
daa
xor
jg
jbe
xor
loopne
push
xchg
add
pop
cmp
xchg
lock
jp
cmp
fwait
lods
push
push
mov
aad
pop
out
clc
lea
addr16
cmc
pop
jmp
add
mov
xorb
icebp
cmp
movsb
jecxz
call
cmp
stos
loopne
sbb
cmp
icebp
xchg
pusha
cmp
jmp
or
fadds
add
into
and
neg
or
clc
cmp
dec
lret
and
pushf
out
push
or
xor
or
scas
push
jb
sub
cld
add
and
mov
lret
dec
and
ficoml
sub
add
test
fcoml
aad
xchg
and
icebp
push
jle
mov
mov
cwtl
mov
pop
add
sub
rcrb
xor
pop
pop
push
mov
mov
movsb
mov
out
hlt
lret
pop
mov
adc
add
inc
sub
addl
out
bound
cmp
sub
cli
pop
ljmp
sub
xchg
stos
mov
push
fisttpl
sbb
xor
mov
dec
in
jbe
cmpsb
test
out
aaa
cmp
or
jmp
sbb
sbb
xchg
shl
fcmovnb
cltd
inc
xor
test
into
inc
inc
orl
add
popf
popf
in
jg
inc
add
sbb
sbb
push
xor
ja
lods
mov
jb
mov
xor
pop
imul
mov
enter
mov
ja
lods
jge
mov
inc
popf
and
ss
inc
fisttpl
fidivrl
sub
rcrb
xchg
js
mov
and
repnz
adc
xchg
stos
das
xor
rclb
in
mov
cmc
rcl
jle
mov
sbb
push
sbbl
call
cmp
push
frstor
cmpsl
subb
subb
dec
jle
cmpsb
pusha
test
mov
call
das
je
shrl
jmp
inc
pushw
in
push
or
bound
repz
enter
sbb
pop
leave
add
xor
arpl
test
jns
loop
addb
cld
in
sbb
mov
mov
lret
mov
cmp
insb
pop
fucomi
dec
aaa
jo
mov
dec
lahf
test
arpl
add
fidivl
fwait
cmp
dec
fwait
inc
push
rclb
inc
add
jbe
pop
lret
sub
sub
mov
push
push
sti
rorl
and
rcl
inc
cwtl
insb
mov
jecxz
adc
dec
jnp
addr16
mov
jb
cwtl
fnstcw
cld
icebp
adc
fsubrs
aam
and
adc
adcl
scas
les
pop
or
sbbl
mov
xchg
cmp
xor
movnti
inc
mov
test
or
in
jle
rcr
out
sbb
aaa
ljmp
push
jmp
cmp
sub
add
jecxz
fwait
push
jne
mov
std
mov
cmp
sub
adc
stos
ss
ljmp
mov
cmpsb
ficompl
and
push
jnp
hlt
cmp
pop
mov
outsb
cmpsb
cmp
std
lret
xchg
dec
dec
scas
and
push
pop
in
cmp
jae
jle
andb
in
cltd
imul
push
int
int3
and
cmp
fbstp
sahf
push
or
popf
dec
mov
fimull
es
fidivrs
int3
cwtl
sahf
test
int3
int3
xchg
adc
inc
xchg
sub
clc
lods
jns
inc
and
aad
jmp
lret
jnp
jnp
sub
xorl
dec
jle
cmp
iret
xchg
in
out
aam
aad
js
push
jnp
in
mov
or
xor
syscall
jne
mov
sub
jg
and
mov
into
cmc
xchg
and
pop
jle
stos
pop
fstp
lods
test
lds
xlat
mov
pop
repnz
cld
adc
push
sbb
push
and
push
mov
enter
sbb
inc
in
fisubrl
ljmp
adc
xor
decl
mov
jecxz
xor
lret
dec
repnz
in
stos
fs
dec
ja
aad
mov
cwtl
add
call
inc
jmp
fs
xchg
inc
test
add
fildl
xchg
inc
and
pop
scas
loope
test
inc
jmp
mov
iret
icebp
mov
inc
inc
push
insl
xor
adc
add
arpl
jb
adc
sti
mov
push
call
mov
orl
cmpsb
insb
outsl
adc
pop
ja
cmp
add
mov
mov
inc
sarl
add
push
mov
loope
addl
mov
xchg
jl
or
adcl
mov
and
and
out
mov
dec
pop
rcll
adc
dec
mov
lds
cwtl
add
jb
arpl
mov
jp
sbb
call
aam
dec
push
xchg
or
mov
jg
dec
sbb
push
pop
adc
jp
sub
xchg
pop
or
xor
xlat
inc
jge
jo
enter
and
insl
dec
fwait
repnz
cmpsl
cld
sbb
pop
pop
inc
cli
xchg
sub
mov
and
dec
imul
jge
pop
push
pop
loope
mov
icebp
fcmovnu
ja
xor
push
sub
shll
roll
js
xchg
inc
mov
pop
shufps
sub
stc
sti
popf
fcompl
dec
sub
inc
sbb
cld
jl
jnp
inc
inc
cld
xor
dec
hlt
or
call
mov
xchg
xor
data16
in
inc
fwait
cld
dec
shrb
outsb
lock
ljmp
int3
mov
orl
and
add
popf
mov
rcll
daa
inc
loop
into
fistpll
in
fwait
sbb
sbb
jns
daa
fisubs
pushf
test
add
loop
cmp
dec
dec
shl
test
shr
out
fwait
sbb
ffreep
jns
sub
sahf
jnp
fdivrs
mov
rcrb
cli
out
sarl
push
cmp
imul
nop
idivl
lock
mov
mov
popa
cmp
sub
fsubrp
hlt
mov
sahf
mov
ja
sbbb
jo
out
and
insl
push
mov
jl
xor
xchg
mov
jne
rdmsr
shrl
out
sub
cmp
pop
pop
mov
sahf
test
or
lret
mov
in
mov
aaa
xchg
inc
push
out
outsb
push
mov
das
jmp
into
jp
outsl
sub
xchg
xchg
xchg
popf
jno
push
cli
pop
mov
jl
xlat
cli
daa
push
dec
outsb
jb
pushf
out
out
push
jl
add
xchg
fcompl
add
fwait
ds
adc
dec
out
fwait
xor
in
inc
and
jecxz
pushf
xorl
insb
xchg
fisubrl
outsb
xor
jle
sub
loope
in
or
das
push
jp
movsb
mov
or
mov
adc
scas
popf
ret
cli
dec
pop
jp
enter
pop
mov
mov
pop
hlt
push
inc
mov
mov
sub
jnp
inc
fstpt
sbb
je
sbb
xor
jns,pt
int3
lea
pop
cmp
cltd
addr16
inc
sarb
dec
insl
fdivs
ss
xor
lock
imul
add
mov
jb
push
push
dec
pop
fsubs
push
adc
insb
aas
mov
xor
fistpll
push
adc
mov
sub
test
dec
jns
daa
out
fs
out
jg
mov
sub
pop
ja
inc
inc
popf
insl
gs
lods
mov
movsl
out
loopne
sub
xchg
imul
cmp
cmc
cmovns
rcr
and
xchg
aas
dec
mov
mov
inc
jg
lea
pop
out
dec
out
ret
push
xor
jge
outsl
lahf
scas
das
jnp
test
cli
push
in
and
fnsave
add
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
sbb
and
sbb
jp
fwait
xchg
shrl
mov
cli
add
push
ret
add
fcompl
add
mov
rcr
push
cmpl
loopne
fwait
jns
ficomps
xor
inc
mov
sub
push
fwait
js
ja
xchg
sti
pop
cld
or
add
pop
lea
mov
mov
lret
call
push
inc
fs
shlb
lods
mov
cmpsl
sub
ss
repz
sub
andb
adc
push
inc
adc
mov
pop
out
mov
insb
gs
push
cmp
sub
pop
push
enter
sbb
ret
out
ds
mov
push
pushf
sbbl
sti
mov
push
xchg
aas
and
stc
andb
ds
leave
stos
ds
dec
test
out
sahf
insb
pop
bound
mov
dec
mov
pusha
add
iret
cmpsb
sbb
ljmp
lock
mov
mov
mov
jle
sub
adc
add
pop
xchg
pop
and
mov
cmp
shrl
push
mov
aaa
mov
fdivs
mov
dec
sbb
cld
xchg
push
cmp
cmp
pop
les
ss
sub
decb
push
popa
mov
ror
adc
test
add
pop
stos
pop
aas
dec
mov
arpl
dec
inc
sub
imul
jne
sub
aas
adc
repz
dec
aas
cltd
addb
icebp
dec
dec
test
fdivl
push
cld
mov
in
and
jne
and
stc
mov
sbb
je
inc
in
arpl
or
dec
popf
call
or
cmp
insb
push
pop
imul
imul
outsl
lods
repnz
and
call
sbb
adc
es
mov
mov
push
les
cmp
std
ret
add
dec
aas
shll
jmp
or
cli
fcomps
sbb
fsubrs
fldl
or
enter
sbbb
jno
lds
mov
sbb
adcb
dec
pop
cltd
inc
adc
jmp
sbb
inc
cmp
in
scas
das
fisttps
test
xor
cmpsb
push
stos
sub
dec
jns
add
outsb
sbb
jle
repnz
mov
pop
lahf
ret
or
sub
xor
loop
rclb
inc
test
call
mov
movsb
xor
mov
sub
out
dec
icebp
inc
push
xchg
bound
xor
pop
loop
jns
jbe
outsl
pop
out
into
iret
in
and
or
cmc
push
outsl
ljmp
xchg
xchg
in
add
pop
cwtl
and
sti
aad
jns
adc
sbb
arpl
mov
pop
es
and
mov
pop
popa
les
cmpsb
xor
mov
mov
pusha
add
nop
jge
jbe
cmp
movsb
push
xor
js
sbb
sti
ss
sbb
enter
das
call
dec
push
pushf
mov
fcmovnbe
add
imul
jnp
jl
mov
mov
je
pop
dec
push
mov
arpl
dec
imul
cmp
gs
mov
add
xor
out
mov
jnp
jns
xchg
mov
push
insl
stos
lods
cmpsl
movsb
popf
sub
add
jmp
cmp
mov
fwait
and
std
sub
push
cli
je
or
shlb
lret
loope
aaa
int3
pop
mov
and
inc
sub
jo
lods
add
outsb
cmp
cmpsb
or
add
dec
popa
jae
and
inc
jp
cwtl
cmp
lea
imul
mov
adc
xchg
enter
and
mov
pop
loopne
enter
in
insl
addl
in
sbb
pop
mov
test
aad
sub
iret
call
push
pushf
ret
call
xlat
aaa
dec
scas
in
or
outsl
sbb
test
mov
lea
outsl
lds
scas
add
xchg
sahf
add
cmp
call
shll
inc
ja
mov
sub
pop
and
into
add
sub
xor
mov
dec
jmp
dec
push
fiadds
sub
insl
jns
in
jno
inc
pop
adcl
add
out
adc
leave
ret
lahf
dec
xchg
pushf
hlt
or
pop
mov
or
fdivs
je
aam
in
inc
fcomps
pop
lcall
pop
xchg
adc
test
cmp
mov
leave
ret
test
fiadds
mov
sbb
mov
mov
push
inc
sub
arpl
mov
sbb
lock
jnp
cmp
add
sti
xor
cmp
pop
lret
pop
xchg
jmp
xor
mov
jle
pop
xchg
leave
lret
cmp
xchg
dec
imul
cmpsb
push
jl
repnz
insb
lock
pop
icebp
xchg
notl
ret
mov
mov
jp
mov
mov
fisubrs
stc
push
test
xor
dec
or
fsub
jno
testb
clc
out
js
int3
rorl
xor
inc
into
test
gs
dec
sub
mov
fistpll
fisttpl
sub
cmp
scas
scas
mov
xchg
roll
imull
push
stc
sbb
stos
dec
ss
xor
mov
rorb
popf
xlat
lods
lcall
mov
cmp
inc
dec
dec
sbb
sub
es
shlb
adc
aam
mov
adc
outsb
test
sti
cwtl
in
or
out
subb
mov
push
push
jne
and
cmp
lds
shlb
and
inc
and
sub
int3
push
jle
jae
pop
out
sbb
dec
aas
imul
jp
pop
mov
ror
xor
sbb
je
adc
insb
mov
pop
fistl
and
nop
lods
adc
pop
or
sub
movsb
and
lahf
push
into
cmpsl
cld
xchg
subl
data16
xor
lds
sahf
rolb
inc
and
adc
fdivrp
nop
mov
push
iret
mov
out
cmpl
cmpsl
call
and
jp
add
xchg
rcrb
pop
std
add
in
xchg
cmp
xchg
push
cmp
mov
push
cltd
adc
cli
adc
or
pusha
cmp
out
xor
xor
jge
imulb
movb
jb
cwtl
inc
mov
dec
daa
sbb
jo
stc
adc
sub
dec
les
stos
fstps
fsts
cmp
sbb
jge
popa
jp
mov
movsl
adc
sbb
dec
cmp
pop
cmpsl
jbe
sbb
mov
cmp
movsb
flds
jo
pop
sub
std
in
pop
shll
push
fwait
and
push
xor
pusha
mov
imul
mov
xor
sub
mov
inc
in
dec
xor
icebp
pop
insl
xchg
adc
in
repz
sbb
popa
mov
mov
test
xchg
jp
aad
jno
jb
jge
mov
aam
or
jl
je
out
fwait
stos
popa
test
sti
jg
scas
pop
int3
xchg
or
mov
sub
inc
nop
pop
ficomps
rolb
cli
push
cld
inc
sahf
mov
cmp
xor
ljmp
cli
xor
pop
test
dec
sahf
jno
inc
inc
pop
cli
add
mov
pop
fsubrl
les
sbb
incl
loop
cwtl
push
xor
es
int3
cli
sub
bound
xchg
inc
and
jno
nop
cltd
test
xor
stos
inc
and
jns
insb
test
aaa
bts
adc
nop
adcb
leave
imul
push
sub
push
pop
pop
aaa
mov
test
int3
push
sub
arpl
pop
inc
push
add
or
bound
jmp
jb
daa
fistpll
int3
bnd
dec
dec
rolb
sbb
dec
dec
cmp
loopne
adc
roll
test
cmp
or
xchg
jecxz
in
sbb
out
cmc
fidivl
movsb
test
xlat
pop
xchg
push
xchg
adc
cmovno
in
push
cmp
inc
cli
mov
or
or
dec
mov
std
out
shl
mov
sti
int3
mov
hlt
push
sbb
jecxz
popa
adc
out
notb
push
shl
dec
arpl
xlat
idivb
lods
pop
repz
ret
rol
imul
repnz
jae
pop
cmc
ja
shll
nop
xchg
mov
mov
cmp
xchg
sbb
ljmp
pop
test
xor
push
int3
xlat
ja
pushf
xlat
jl
sbb
test
cli
les
fsubrl
jb
call
xchg
imul
inc
mov
test
lea
aam
sbb
cmp
mov
mov
push
adc
movsb
repnz
test
push
add
push
jb
push
cmp
or
inc
xlat
jne
xchg
lret
and
dec
sar
add
cmpsb
jmp
shlb
aaa
mov
ret
pushf
movsb
mov
pop
inc
shrb
gs
cld
test
ljmp
imul
int3
mov
negl
in
in
stc
and
xchg
jnp
push
in
mov
shl
lods
pop
pop
outsl
cmc
ja
mov
or
inc
mov
sub
shlb
repnz
mov
loope
jnp
xchg
dec
adc
or
sub
out
in
mov
outsb
lret
in
pop
lock
jne
xchg
sub
xchg
mov
sbb
fwait
adc
sbb
out
cmp
jmp
fnsave
fwait
dec
hlt
movsb
mov
xchg
cmp
mov
cli
fisubrs
adc
jns
jo
xchg
or
cwtl
xchg
jmp
xor
cmp
xlat
dec
data16
mov
imul
test
cld
sti
xor
fidivrs
adc
loopne
cmc
or
faddl
pushf
jnp
xchg
fmuls
push
pusha
ret
mov
shll
cmp
push
cmp
loopne
inc
iret
add
out
xchg
mov
push
leave
pusha
scas
mov
nop
xor
xchg
jecxz
and
gs
inc
mov
scas
mov
cmp
data16
pop
jecxz
fdecstp
std
mov
jp
add
fmul
mov
fstpl
stos
loopne
push
fsubr
pop
xor
cmpsl
pop
cs
push
sub
pop
jno
inc
mov
pop
lahf
gs
inc
adc
out
in
subl
test
ds
mov
fistpl
lods
xor
je
mov
adc
and
and
cli
in
xchg
xchg
xor
and
cmp
add
and
out
je
stc
sbb
and
lcall
out
cmp
push
xchg
popa
std
push
jno
mov
sbb
xchg
out
lods
mov
dec
int3
xchg
dec
xchg
in
dec
pop
and
popf
subl
mov
sbb
insb
xor
mov
idivl
pop
aam
out
jo
in
popf
fsubr
inc
lea
add
or
ss
pop
xchg
mov
shll
jbe
ficoml
and
out
frstor
in
and
shr
test
ds
sbb
dec
movsl
fwait
jo
cltd
gs
adc
into
ljmp
sub
xor
cmc
pop
xor
lret
mov
jnp
mov
repz
sub
fs
loop
lret
sub
faddp
out
pop
xchg
lret
divl
add
jecxz
sbb
aam
mov
pop
jmp
jle
and
mov
xchg
adc
iret
cwtl
jmp
jmp
or
fs
daa
cltd
sub
out
and
ror
cmp
xchg
and
out
dec
add
cmpsl
das
cltd
sarb
or
xchg
int3
mov
pop
ret
add
xor
aam
sub
jle
popa
icebp
iret
xor
mov
jae
add
popf
shlb
or
sub
cmovs
inc
jge
jp
push
jle
or
repnz
sub
push
mov
xchg
cmp
xchg
cli
push
sbb
dec
gs
das
cmp
popa
outsb
gs
adc
pop
mov
clc
mov
icebp
ror
daa
inc
jns
jmp
stos
pushf
cmp
movsb
lcall
push
mov
lcall
sub
addr16
xchg
adc
add
or
in
xorl
dec
xchg
outsb
and
insl
mov
or
loopne
scas
leave
jecxz
sti
mov
leave
fs
mov
sub
add
lret
inc
sub
push
fmulp
cmp
lods
sub
ffree
pusha
dec
arpl
in
sub
xchg
cltd
jno
cmp
jmp
pop
aas
mov
pop
inc
mov
imul
fmull
aam
sbbl
popf
icebp
cmovg
out
fnstsw
in
cld
xor
insl
js
ljmp
push
leave
loop
pop
dec
inc
rcl
gs
push
icebp
xor
cmpsb
cmpl
push
out
test
sbb
xlat
sub
lods
pop
dec
ds
je
xorl
pusha
dec
cmp
shlb
and
pushf
sar
cmp
hlt
mov
les
iret
mov
pushf
cmp
push
jo
inc
shlb
push
sbb
pop
std
jle
lods
popf
push
imul
push
xor
loop
cltd
cwtl
sub
lock
sbb
jae
les
ror
mov
icebp
xchg
ja
mov
sti
or
shl
pushf
and
cwtl
inc
mov
insl
mov
xchg
sbb
mov
les
mov
inc
aas
test
xor
jbe
xrelease
xchg
mov
scas
loopne
mov
dec
loop
inc
or
out
dec
rorl
dec
cwtl
test
popa
leave
cli
push
loopne
add
mov
aam
rcrl
cld
je
stc
mov
sub
sti
addr16
std
call
aaa
pusha
into
stc
pop
jmp
jmp
leave
mov
hlt
jle
ret
push
out
add
data16
lret
out
js
repnz
test
movsl
xor
mov
popa
repnz
xor
mov
mov
mov
mov
inc
adc
sub
lahf
dec
outsl
xor
addb
jb
inc
cmpsb
lcall
mov
cmovge
push
jnp
outsl
jb
lock
shll
sbb
or
out
rorb
sbb
jae
lds
fsubrs
xor
popf
ret
or
jp
or
cmp
aad
xchg
xchg
ljmp
sub
mov
sbb
fsts
and
out
push
insl
lcall
pop
or
lods
push
cs
mov
rcll
cwtl
mov
dec
les
sub
mov
push
popa
push
adc
movsb
mov
mov
cs
int
in
xchg
push
fsubl
jmp
and
pop
ljmp
hlt
in
dec
mov
jb
ds
jg
sti
negl
push
ret
rcl
adc
fldcw
in
push
cmp
imul
psrlw
fwait
cmp
in
xor
dec
dec
sub
test
add
out
mov
xor
mov
pop
dec
pop
cmc
jge
out
js
or
iret
dec
or
jg
outsl
inc
cmp
rcrb
xchg
cmpsb
or
mov
sbb
test
xchg
xchg
push
or
xchg
lret
xchg
push
call
mov
mov
lret
sub
xor
cmpsl
mov
test
dec
sbb
roll
cmpsl
xor
jle
add
rcrl
pop
mov
imul
xor
push
mov
ret
pop
cmc
lock
cmp
movsb
mov
sub
jnp
dec
dec
adc
push
jno
int3
and
scas
sub
pop
subl
in
pop
frstor
lods
ljmp
test
pop
add
xchg
pop
rcr
ret
jns
push
addb
or
sbb
and
lahf
or
scas
popa
or
sub
incb
adc
fdivr
orl
lret
lds
cmp
stos
xchg
mov
dec
or
cmp
push
xchg
or
pop
push
lahf
xor
fadds
mov
divb
mov
data16
arpl
dec
sub
mov
into
xchg
push
xchg
test
xor
dec
test
pop
in
xchg
mov
push
cmp
out
dec
mov
adcb
adc
mov
js
sbb
mov
fwait
lock
lods
adc
cmpl
gs
and
shrb
cmp
pop
jnp
sbb
fisubs
inc
addr16
mov
les
testl
pop
or
sti
sub
or
dec
xchg
mov
xorl
or
pop
fadds
vsubsd
shlb
inc
sbb
cmpsl
fistpl
xor
rcr
bound
sub
inc
fnstsw
xchg
jp
pop
sub
cmpsb
fcomi
test
repz
adc
pop
jnp
orl
cmp
jp
mov
rorl
outsl
mov
imul
dec
sub
mov
sahf
js
cmc
bound
fadds
adc
cmp
lahf
sbb
frstor
inc
xor
xchg
adc
push
dec
fadds
jne
arpl
loopne
call
dec
mov
xchg
mov
fwait
xor
mov
xchg
adc
popa
add
push
cmc
icebp
adc
pop
lea
adc
adc
inc
mov
outsl
inc
es
pop
xlat
pop
in
xor
aad
mov
clc
push
mov
xor
mov
aaa
lods
sub
xor
inc
add
test
xchg
inc
xchg
aam
inc
sbb
nop
push
sbb
push
call
xorl
addr16
mov
or
pop
mov
mov
inc
or
pop
mov
xchg
pop
jmp
sub
mov
sarb
addr16
inc
sarl
nop
daa
mov
aas
cmp
mov
mov
push
fistpl
cmp
xchg
sub
pop
and
mov
sbb
mov
jmp
test
fsubs
mov
sub
mov
out
ret
cmp
adc
lret
and
jecxz
inc
adc
cs
jecxz
mov
sbb
imul
xlat
mul
inc
in
lsl
and
sub
jmp
leave
mov
addr16
sti
mov
test
cmc
jl
or
pop
add
pop
ljmp
rorb
ljmp
je
enter
xchg
fdivrs
adc
leave
dec
pop
sbb
popf
xlat
dec
jge
inc
pop
pop
and
call
jae
sub
lds
sbb
jmp
inc
adc
test
or
incb
sbb
dec
fbld
mov
stos
iret
mov
outsb
fs
out
out
scas
push
dec
dec
or
xchg
dec
mov
push
in
sbb
pushf
test
jp
stos
lea
or
mov
js
mov
xor
push
stos
mov
call
cltd
arpl
xor
mov
push
mov
ss
mov
std
cmovs
stos
and
sub
dec
scas
cmp
push
or
add
aaa
fistpl
mov
cwtl
adc
test
hlt
jl
movsl
dec
push
cmpsb
dec
aaa
addb
push
test
dec
mov
cmpsl
outsb
or
cmp
std
out
lea
mov
sub
xor
leave
imul
sub
out
push
les
leave
cwtl
or
test
mov
mov
lret
fsubrl
cmpsl
scas
lock
lahf
dec
add
xchg
mov
dec
mov
aad
xor
test
mov
xchg
cmp
xchg
ss
leave
out
jne
dec
bound
sbb
dec
add
movsb
and
fiadds
xor
bound
jmp
ret
bound
dec
shrl
es
gs
sti
inc
sahf
adc
lea
or
push
in
cmpsl
ds
mov
adc
xor
mov
cmp
lret
shr
mov
ficomps
in
mov
cld
xor
mov
push
pop
push
push
inc
jg
mov
insl
cmpsl
jg
orb
jmp
mov
or
pusha
shll
movsl
mov
pop
scas
push
add
or
adc
fstps
pop
aam
sbb
push
inc
aam
mov
insb
icebp
jg
imul
aas
in
stos
jne
push
repnz
stc
stos
xchg
dec
loop
push
shl
testl
leave
xchg
add
mov
mov
add
les
aam
push
jecxz
cmpsb
in
insb
add
pop
cld
movsl
stc
push
imul
xchg
dec
lret
push
int3
sub
push
push
xchg
mov
stos
fs
roll
xlat
test
pop
xchg
imul
loop
cmp
repz
lahf
int
mov
cmp
push
hlt
loop
jnp
in
cmp
cmp
sti
jbe
dec
outsl
inc
push
mov
sbb
xchg
mov
cmc
cmp
sub
jbe
pop
jb
sbb
fidivrs
add
xchg
cmpsb
push
jae
aaa
psllw
pop
xchg
mov
adc
jns
insl
mov
lock
lods
pushf
lea
call
jl
xchg
rolb
mov
movsb
into
pusha
sbb
sbb
add
sar
dec
adc
push
cmc
mov
into
mov
push
mov
out
cwtl
mov
inc
mov
sub
mov
mov
in
mov
lods
push
jmp
pop
cmp
cmp
es
test
es
mov
push
in
incl
sbb
mul
dec
xor
test
test
addr16
fmuls
xchg
stc
xchg
movsb
mov
and
dec
or
testb
push
fistps
adc
mov
jbe
inc
cmp
and
jnp
or
rclb
push
rcrb
xor
shrb
cld
test
ja
sbb
sbb
add
divl
clc
sbb
dec
mov
push
inc
push
mov
ficoml
movsb
cmp
cmp
mov
cmp
test
scas
xor
rcrb
ret
mov
bound
adc
movsb
mov
iret
lea
mov
out
mov
xor
pop
push
push
jns
inc
idivl
inc
rolb
into
adc
and
adc
out
int3
jecxz
in
mov
xor
fisttpll
mov
out
pop
enter
punpckhwd
fstl
stc
ret
adc
jmp
xor
cmp
jg
subb
shlb
jge
push
lds
pop
push
nop
pop
dec
jp
sbb
fisubs
test
gs
daa
pop
and
add
sbb
dec
mov
icebp
je
sbb
insl
aad
add
adc
in
push
les
int
xchg
rclb
inc
cmc
sub
icebp
cmp
sbb
mov
dec
fidivs
imul
pop
clc
dec
insl
cmp
push
hlt
or
push
jle
mov
clc
enter
out
bound
xchg
ret
fwait
fstl
addr16
ds
and
loopne
and
sbb
outsb
xchg
push
adc
in
xor
xchg
lock
sahf
dec
scas
sub
in
loope
push
sub
xorl
cmpsl
fdivl
ljmp
test
ja
xchg
jbe
lret
or
and
daa
sbb
dec
stc
lods
popf
push
into
adcl
xor
xchg
mov
push
call
je
flds
mov
sub
scas
push
lock
notb
sub
pop
es
xchg
pop
movsb
mov
in
ja
arpl
out
scas
mov
mov
push
call
dec
xor
and
out
std
mov
dec
mov
xor
push
push
jne
add
push
push
out
cmp
mov
cmp
jnp
lods
cmp
aas
mov
ret
add
jmp
jge
push
mov
dec
jmp
cmpsb
aad
xor
ljmp
lock
pushl
mov
xor
out
xor
aam
inc
add
outsb
adc
subl
xchg
stc
mov
pop
negb
out
outsl
inc
shlb
stc
repnz
idivb
adc
mov
jmp
xor
jmp
push
lods
mov
cld
jp
xchg
xor
incb
addb
cmp
lock
adc
xchg
or
sub
ja
mov
fisubs
adc
xchg
sub
mov
inc
mov
xor
out
sbb
sahf
cmp
mov
fcmovne
and
sub
push
mov
adc
pop
xchg
ds
sbb
dec
outsl
cmpsb
add
roll
mov
sarb
loopne
or
out
dec
das
sub
adc
pop
inc
mov
dec
out
inc
dec
jp
fcomps
pop
sbb
adc
stc
jnp
ret
stc
sahf
pop
ja
movsb
push
or
add
mov
inc
xchg
mov
aas
in
into
jg
sub
jo
adc
stc
ret
push
cli
aaa
or
or
je
jno
xor
pop
mov
mov
adc
stos
pop
iret
mov
fimull
imul
mov
dec
ja
enter
lcall
push
movsb
mov
push
mov
movsl
outsb
xchg
mov
leave
adc
je
pushf
jg
jbe
pushf
leave
je
loope
mov
out
mov
outsb
mov
std
imul
inc
fisubs
sbbb
or
cltd
push
cmp
add
mov
cmp
pushf
test
rorb
movsb
sbb
fistpl
pop
hlt
adc
insb
jge
insb
sub
jno
push
jae
xor
mov
enter
xchg
sbb
inc
aas
in
push
rcrb
push
cli
test
and
jns
pop
mov
scas
sub
inc
push
jl
fs
or
mov
push
lret
xchg
pop
stc
sub
mov
cmp
das
adc
lds
xor
lods
xchg
hlt
clc
subb
pop
subl
push
into
lea
sar
fnstcw
xchg
sbb
popf
loopne
sub
aad
icebp
bound
aam
test
inc
mov
sub
dec
inc
push
in
adc
outsl
insl
push
xchg
cld
ret
lahf
cld
push
sbb
and
movsl
sbb
push
jne
lahf
jle
push
pop
pushf
shll
lret
jae
mov
cwtl
and
jns
inc
push
pop
fidivrs
xchg
inc
shlb
xchg
push
xchg
mov
dec
cmpsl
hlt
pop
jb
divb
mov
divl
jge
jle,pn
xor
in
or
in
pop
jne
xchg
adc
aas
push
les
jmp
and
xor
jle
cmp
add
cmc
or
mov
cmpsl
jecxz
cwtl
sarb
sti
mov
inc
pop
lret
pop
fbstp
xchg
gs
stc
in
jb
or
inc
shl
jnp
fwait
pop
int
sahf
cmc
inc
fnstenv
data16
and
mov
hlt
pusha
test
je
xor
frstpm(287
cs
lds
iret
cwtl
sub
and
inc
mov
addr16
or
iret
neg
out
mov
jne
pop
pop
outsb
pop
jbe
sub
mov
packssdw
push
cmc
rol
imul
outsb
dec
adc
mov
leave
fwait
test
loope
add
out
mov
and
jecxz
insl
jns
adc
repnz
stos
jb
push
pop
cmpb
jns
imul
outsb
ljmp
cmpsl
xchg
pop
push
sti
pop
cmp
add
jns
call
push
test
fbld
jge
shlb
push
xchg
inc
imul
add
pushf
fiadds
mov
jg
cld
and
add
adc
sbb
in
movsb
adc
mov
mov
and
cmp
lret
jns
stos
mov
cmpsl
setg
jns,pt
cwtl
cmp
or
insl
rcrb
bound
jbe
cs
lods
mov
add
fs
sti
dec
xchg
icebp
mov
int3
mov
add
xchg
bound
mov
xchg
cli
ss
adcb
cs
pushf
lret
out
clc
or
test
mov
testl
iret
add
jmp
movsb
stos
cmp
insb
inc
nopl
adc
es
adc
sbb
test
repz
cld
test
cmp
into
inc
sub
test
dec
testb
fst
outsl
je
clc
cmc
int3
stos
cmpsb
adc
je
in
xchg
int3
or
sbb
jno
or
cmp
xor
repnz
fldcw
mov
sub
mov
jl
jo
sbb
jno
cli
dec
jbe
lds
jge
push
jle
adc
xor
aam
in
push
xchg
adc
sub
sbb
ja
or
jge
mov
pop
cmp
repz
xchg
ldmxcsr
movsl
das
cmp
stc
or
shlb
xchg
pop
mov
cltd
jge
push
push
sbb
rorb
fistpl
push
mov
xchg
stos
xchg
jbe
push
pop
push
mov
lcall
push
sub
int3
dec
sbb
adc
sarb
sub
inc
jl
mov
out
sub
and
decl
cmpsb
xchg
push
mov
cli
adc
int3
pop
mov
inc
cmp
sbb
xchg
iret
mov
mov
mov
ret
and
pop
fcmovnu
or
inc
push
not
lods
test
and
fdivrs
mov
jge
shrl
fsubs
cwtl
sbb
sahf
data16
sahf
xor
adc
notb
pushf
jb
push
and
push
in
lahf
adc
lret
cli
nop
in
shr
jecxz
cmp
cmpb
jl
mov
add
test
sbb
inc
inc
rol
ror
xchg
lret
dec
cmp
jmp
movsb
mov
lods
lods
loope
cmp
fdiv
inc
bound
mov
sbb
cs
out
cs
into
and
sub
mov
icebp
or
ja
ret
jmp
ss
stos
fs
fs
imul
sbb
lods
adc
jecxz
or
mov
sbb
push
in
cmp
daa
and
mov
aad
add
jp
mov
adc
push
out
cmpsb
push
add
ret
aaa
in
adc
lds
or
cld
clc
mov
gs
in
les
inc
cmpsb
adc
jno
les
sbb
xchg
inc
lods
or
mov
cmc
inc
push
mov
mov
xor
adc
out
test
insb
movsl
xor
mov
fs
call
stos
sti
gs
popf
insb
adc
lahf
adc
inc
aas
cmc
push
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
dec
mov
add
jp
pop
jp
dec
push
stos
scas
in
pop
stos
in
nop
mov
fnstcw
sahf
daa
dec
jl
cltd
xorb
pop
inc
or
enter
imul
sbb
adc
popf
jle
or
nop
mov
and
cmpsb
out
mov
pop
push
aam
jle
popa
rcrl
xor
sub
jns
sbb
adc
pop
ret
add
pop
ljmp
stc
out
loopne
mov
lea
ffree
xchg
mov
jne
cmp
mov
mov
sub
push
insb
pop
or
adc
arpl
pop
rcll
mov
cmp
fstpt
mov
xchg
std
pushf
jecxz
sbb
xchg
pop
mov
sbb
popa
jecxz
test
lods
test
jge
xchg
mov
pop
ljmp
fldl
xchg
push
fcoms
cltd
jmp
lcall
and
addl
inc
movsb
mov
push
add
push
dec
xchg
inc
popa
or
push
xchg
sbb
push
mov
repnz
dec
out
testl
pop
stos
dec
sub
lods
inc
cld
insl
addb
int
mov
add
out
imul
mov
dec
cmp
in
pop
stc
iret
jno
sub
fcmove
pop
and
push
adc
or
scas
mov
pop
dec
cli
das
pop
dec
sbbl
mov
or
sub
rcrb
scas
loop
xor
outsb
outsl
pop
mov
and
adc
mov
scas
into
enter
cli
push
push
repz
in
test
stos
bound
mov
arpl
fsubrl
xchg
cwtl
dec
and
bound
cmc
xor
xor
pop
ficoml
cli
mov
jge
loope
mov
lret
adc
sub
jge
call
lret
iret
test
dec
movsb
inc
push
pushf
xchg
or
mov
fnsave
fsubrs
cli
divl
idivb
loope
enter
aaa
mov
mov
or
pop
push
fidivl
push
mov
sbb
shufps
std
sbb
sub
aam
push
pop
addr16
sbb
push
iret
cwtl
or
aas
mov
dec
jb
ds
mull
lret
lret
adc
adc
lods
leave
arpl
pop
dec
jge
cli
hlt
cmpsl
mov
fcmovb
inc
out
mov
push
mov
sub
loop
cmp
adc
add
xchg
pop
shl
sti
push
mov
inc
scas
jmp
cwtl
arpl
dec
pop
pop
outsl
out
jno
iret
cmp
pop
cs
push
insb
mov
pop
lret
movsl
sarb
sub
gs
mov
stos
inc
mov
std
test
sbb
dec
cmpb
lret
repz
fisubrl
imull
nop
daa
test
fcompl
leave
jle
xor
lods
pop
dec
daa
test
shlb
xchg
add
test
sbb
out
movaps
outsb
and
fadd
mov
aas
mov
and
repnz
sarl
icebp
fwait
mov
xchg
lock
shrb
mov
jne
push
or
into
outsb
and
lds
mov
jns
jmp
mov
mov
sub
sub
stos
push
in
stos
inc
outsb
out
pop
cmp
aam
xlat
loope
mov
cmp
inc
dec
or
sbb
jecxz
sbb
mov
push
or
int
daa
and
movsl
jbe
push
xor
or
pop
xor
bound
aam
fwait
scas
push
or
mov
inc
pop
dec
jns
loope
xchg
call
and
mov
enter
adc
inc
mov
outsl
dec
pop
mov
jl
cmpsl
les
mov
pop
lods
cmc
test
cltd
mov
cmpsb
movsb
bound
mov
mov
sbb
test
sbb
mov
out
sub
add
and
insb
push
mov
arpl
lock
mov
inc
mov
adc
lds
inc
aam
mov
cmp
mov
insl
pop
cmp
push
mov
aam
pop
sbb
mov
mov
mov
arpl
add
out
sbb
js
jne
movsb
fucomi
inc
cld
sahf
fisubl
push
or
stos
testl
push
sbb
ljmp
fucomi
push
loop
ficoms
loop
push
rcl
int3
mov
test
mov
xchg
mov
jp
das
xchg
push
pushf
push
pushf
mov
mov
mov
cmp
push
movsl
cmp
inc
mov
lock
lock
orl
rorl
cmp
mov
jne
push
dec
and
push
xchg
push
sub
push
cmp
pop
xchg
out
je
shll
fcmovu
aas
call
pop
push
bnd
sbb
dec
sub
dec
mov
lret
push
roll
test
pop
add
lcall
mov
lock
or
das
inc
gs
je
ficoml
call
fbstp
mov
leave
hlt
push
push
mov
xchg
mov
push
jmpw
out
enter
and
cmp
xchg
jmp
xchg
jp
out
push
repz
movsl
pop
inc
push
xchg
aas
or
mov
cmp
pop
mov
fwait
xchg
mov
fs
jno
xor
fisttpl
jecxz
outsb
popa
fldenv
fmull
inc
test
into
push
cmp
fildl
adc
dec
pop
inc
testb
sub
cld
add
lods
loope
pop
das
pusha
mov
sti
loop
rcll
add
mov
jnp
stos
hlt
std
jne
imul
push
xchg
xchg
sbb
and
jg
aas
jo
xor
jp
add
push
and
arpl
add
jle
popa
loopne
mov
push
sti
pop
out
pop
sbb
cli
dec
inc
dec
mov
fidivrl
rol
mov
je
lret
js
clc
dec
adc
mov
mov
rolb
adc
jnp
cmp
scas
mov
add
lods
push
jle
popa
les
pop
mov
pop
lds
nop
orl
lea
sbb
xchg
js
sbb
inc
testb
icebp
inc
adc
mov
inc
fidivrs
adc
fistl
lea
inc
dec
test
ss
adc
insb
adcl
test
mov
loop
addr16
jb
xor
clc
mov
xchg
lock
loope
jb
movsl
ja
fldl
into
pop
fimuls
in
inc
push
mov
lret
mov
icebp
jle
push
lahf
daa
sbb
jmp
push
mov
mov
aas
hlt
inc
adc
out
cmp
mov
stos
lret
fs
shlb
pusha
push
pop
and
faddp
jge
inc
sahf
hlt
cmp
sub
cmp
jmp
mov
sub
ljmp
subb
or
mov
arpl
icebp
sbb
test
cmpsl
fisubrl
push
cmpsb
pushf
add
push
imul
mov
lahf
mov
mov
int
cvtpi2ps
adc
jb
push
dec
repz
dec
mov
rcrl
xor
dec
cltd
mov
push
sbb
add
sbb
push
jno
repnz
lcall
nop
sub
cli
sbb
hlt
out
fidivrs
bound
enter
stc
mov
push
xchg
mov
push
stc
add
mov
imul
jns
clc
or
jno
daa
jae
loope
movsb
filds
xor
cmpsb
add
outsl
mov
inc
push
jmp
cmp
jns
and
inc
jmp
test
pop
cltd
pop
and
mov
popa
push
xchg
sub
js
loop
mov
lock
jns
cmc
pop
lret
xchg
jns
fs
lcall
push
lcall
xchg
in
lret
mov
pop
sbb
sub
xor
shrl
cwtl
into
adc
popf
out
add
movsb
fs
sub
add
sbb
leave
xor
andb
add
dec
sub
hlt
test
sarb
cwtl
xor
inc
jbe
mov
mov
imul
xchg
dec
mov
shlb
push
adcl
hlt
test
inc
jecxz
mov
pop
inc
addr16
add
inc
das
insl
imul
adcb
imul
xor
or
lret
dec
movsb
test
cwtl
sti
lahf
int
xor
add
sbb
sbb
nop
xchg
inc
out
cmp
mov
xchg
push
adc
cmp
mov
sbbl
sub
repnz
xor
inc
sahf
std
in
pop
inc
pop
test
idivl
psrlw
mov
sbb
lds
fwait
xor
lcall
lahf
std
sbb
dec
push
dec
test
hlt
fwait
into
sbb
imul
subl
in
notl
pop
out
sub
inc
push
mov
cmp
fcompl
ret
jmp
pop
mov
pusha
xchg
popf
insl
mov
sub
mov
mov
pop
pushf
cwtl
jmp
mov
mov
mov
ljmp
xchg
pop
xor
subl
xor
xor
dec
call
popf
test
sbb
out
sub
sbb
or
xor
mov
xlat
inc
xor
jae
iret
inc
iret
jge
shlb
push
pop
insb
lahf
jbe
je
xor
flds
jne
inc
lock
stc
ret
testb
xchg
xor
sahf
dec
subb
inc
lea
es
imul
xor
ret
adc
add
mov
push
sbb
aad
push
pop
lods
pop
pop
stc
xor
pop
lret
jb
inc
fmuls
nop
xchg
push
leave
sub
or
dec
leave
daa
jp
icebp
aam
clc
mov
or
or
mov
push
mov
lahf
xchg
adc
xorl
je
push
sub
andb
mov
or
repz
adc
hlt
mov
in
subl
jmp
add
xchg
test
in
mov
mov
inc
xchg
imul
or
test
xchg
cmp
xlat
in
adc
cld
and
or
ljmp
xor
das
pop
pop
xor
in
frstor
mov
pop
out
ret
dec
xchg
xor
mov
mov
inc
lcall
sub
mov
add
dec
cmp
dec
jo
adc
ja
repnz
loopne
fcomip
test
int
fiadds
test
inc
xor
xor
int3
dec
pop
push
nop
add
ja
ja
push
sbb
and
xchg
sbb
mov
dec
gs
xor
iret
pop
imul
mov
mov
mov
int
shlb
clc
ja
insl
das
pop
sti
aam
adc
fcomip
lods
mov
incl
fsts
std
mov
std
leave
and
lret
push
xor
leave
rcr
cmpl
jae
mov
leave
fwait
inc
je
fxch
mov
cltd
push
mov
dec
ja
mov
std
dec
cwtl
dec
adc
lahf
aam
jno
insl
sbb
fdivrs
stos
icebp
psadbw
xor
inc
dec
pop
mov
adc
scas
out
movaps
test
and
stos
mov
loopne
push
mov
and
movsl
sti
mov
add
cmp
push
ss
clc
jmp
and
add
jb
aas
dec
shll
int
and
adc
jecxz
fidivs
pop
xlat
xor
dec
loopne
adc
adc
ds
cmp
add
imul
and
loope
xchg
jp
xchg
stc
xlat
pop
outsl
xor
mov
sbb
out
xchg
mov
add
shrl
test
push
iret
cmp
mov
sbb
jp
or
mov
mov
cmpsl
testl
daa
mov
leave
pusha
add
or
mov
add
loopne
push
ss
mov
xor
ja
sub
push
xor
les
mov
shrl
leave
or
mov
divl
pop
dec
loopne
mov
lcall
enter
adc
lds
pop
aad
mov
jo
dec
dec
add
sub
xor
mov
rcl
inc
nop
pushf
sub
adc
xchg
mov
lea
xlat
lcall
shr
imul
and
sbb
enter
ret
xchg
adc
in
sahf
mov
out
sub
jns
pop
dec
addr16
adc
cmp
jg
loop
out
rcrb
rcrb
pop
aaa
aam
sub
pop
or
roll
or
jg
test
cmp
sub
jae
sti
and
aaa
push
cmpsb
sub
int3
lcall
sbb
jmp
jbe
adc
inc
out
xchg
sbb
in
dec
push
aam
or
pop
jg
cmpl
dec
sub
inc
iret
sbb
icebp
lods
in
inc
test
dec
movsb
aaa
mov
cmp
cmp
or
dec
cmp
jo
iret
in
sarl
loope
or
jmp
out
push
cmp
sub
ja
clc
out
mov
xor
shl
iret
and
cmc
and
jae
lds
daa
idivb
xchg
mov
fidivrl
mov
or
mov
insl
mov
jmp
es
cmc
mov
dec
fs
mov
jmp
out
testl
popf
ficompl
leave
xor
fwait
lcall
ret
scas
or
repz
mov
aam
jmp
adc
sbb
cmpsb
fdivl
fucomp
loop
out
inc
push
aaa
cmpb
add
inc
out
pop
add
imulb
imul
or
add
iret
cli
mov
push
stos
call
pop
popa
mov
ss
adc
lock
imul
test
pop
test
mov
mov
xor
push
test
call
mov
fwait
xor
jge
sub
fsubl
or
pop
lea
repnz
test
lock
jno
push
add
xor
jmp
rorb
and
jmp
pop
fadds
subl
pop
ds
loop
lods
ja
fcompl
lea
vmovdqu
add
lods
jle
xor
jg
mov
lods
cwtl
loope
mov
mov
mov
subl
pop
sbb
inc
movsb
sahf
cli
mov
push
or
mov
pop
scas
fisubl
je
and
rorl
cmp
add
pop
xor
subb
stos
lret
jnp
mov
xchg
pop
xchg
bound
sub
push
or
repnz
xor
insb
cs
repz
dec
das
push
sbb
or
loop
mov
mov
repz
arpl
cld
rclb
cmp
push
inc
dec
cltd
add
adc
xchg
ret
mov
jl
or
mov
mov
sub
outsb
mov
into
push
lods
pop
stos
mov
fstl
adc
ret
sub
mov
insl
iret
dec
adc
outsl
xchg
adc
repnz
add
aaa
aam
loop
test
shr
push
roll
add
adc
loopne
cwtl
add
idivl
xor
adcb
mov
data16
mov
fimull
stos
xor
push
adc
push
xor
jle
jo
jb
fwait
add
jno
je
fdivl
sub
mov
ja
popf
js
ret
cwtl
jecxz
and
lea
adc
imul
movsb
out
jne
xchg
xchg
jecxz
push
pop
scas
mov
mov
mov
inc
jne
adc
je
imul
mov
cwtl
mov
mov
arpl
add
out
mov
inc
adc
pop
mov
into
jle
or
out
fs
mov
sbb
jp
fistl
jmp
movsb
rcll
dec
ret
push
xor
das
bound
mov
and
pushf
icebp
push
sahf
sbb
pop
mov
push
sbb
add
mov
adc
aaa
mov
daa
jo
xor
add
dec
cmp
xorl
dec
es
mov
add
das
xor
jnp
xchg
data16
lock
or
insb
pop
xor
arpl
mov
mov
add
cmp
adc
pop
or
rcll
mov
lds
and
int3
push
adc
enter
in
inc
jo
mov
lock
ret
cli
lock
sub
aad
mov
xchg
cmp
and
ud1
mov
pop
jno
add
mov
and
popf
add
pop
addr16
cmp
xchg
pop
inc
mov
push
add
push
xorl
inc
popa
add
mov
scas
or
xchg
cmp
inc
xor
push
add
cmpl
and
pop
lods
push
jle
movsl
addr16
das
or
sarl
sub
and
mov
sbb
add
push
lcall
pop
arpl
int
in
lret
vcvtsi2ssl
push
aas
les
inc
or
pushf
idiv
jmp
je
mov
sub
ficoml
xlat
push
or
jbe
daa
jecxz
pop
cmp
mov
inc
lods
cmc
pop
push
xchg
add
clc
inc
decb
cmpsb
mov
inc
pop
pop
jnp
xchg
and
out
out
enter
fcmovnu
daa
andl
dec
mov
js
fisubl
or
hlt
add
cmpsb
call
pushl
add
mov
jo
pop
scas
sub
js
scas
jmp
sub
push
in
je
repnz
daa
add
and
jb
adc
sahf
sbb
jp
sub
icebp
push
idivl
add
mov
int3
mov
pop
enter
xchg
cmc
rcrl
xor
mov
add
int3
jno
test
dec
and
adc
roll
les
push
subb
mov
inc
cld
repnz
pop
or
movsb
pop
pop
cmp
cld
pop
psubb
jp
inc
mov
mov
or
pop
xor
iret
sub
push
mov
mov
lock
popf
mov
sbb
lcall
mov
lret
lret
mov
imul
dec
mov
sbb
popf
sbb
sbb
scas
mov
stc
lcall
dec
call
inc
sbb
xchg
imulb
movsb
adc
imul
mov
cmp
cmp
jle
mov
pushf
rorl
lcall
mov
sbb
sbb
fsubp
repz
repz
lds
mov
sbbb
sarl
movsb
insb
imul
in
std
xchg
icebp
push
aad
dec
dec
outsb
or
push
les
dec
fs
mov
mov
mov
out
or
cld
add
or
jno
xchg
aas
dec
pop
adc
out
sbb
jle
ja
cmp
cltd
test
sbb
cmp
vpshld
mov
sub
adcb
cli
jns
mov
cmpl
daa
mov
xchg
mov
and
sub
jmp
dec
xor
adc
sbbl
mov
pusha
in
push
push
add
xor
inc
sar
xchg
and
cli
ret
mov
addr16
mov
cmp
cmc
repz
jmp
sti
imul
and
jecxz
sbb
dec
shlb
pop
lods
mov
xor
push
sbb
inc
fcomi
fsub
mov
mov
pop
mov
or
bound
pop
mov
mov
sub
xchg
sti
mov
mov
jae
jnp
das
jnp
xchg
jne
sub
jg
js
insl
scas
xchg
push
cmpsl
sbbb
inc
sbb
repnz
mov
andl
inc
cltd
nop
in
sbb
mov
push
sarl
dec
sbb
mov
pop
xor
cmp
adc
jae
push
pop
sahf
pop
imul
loope
ret
sbb
out
mov
inc
scas
ss
xor
push
not
add
mov
jbe
stos
cltd
add
jne
lods
sub
mov
test
outsb
insb
cmp
pushf
mov
scas
dec
push
push
and
mov
rclb
inc
test
into
push
mov
jo
xchg
test
repnz
dec
sub
pop
add
nop
xchg
mov
das
cld
lcall
mov
in
mov
pop
dec
inc
cmpsb
add
sub
scas
and
mov
xor
clc
pop
or
dec
out
sub
outsl
repz
push
inc
fdivrl
lods
mov
add
mov
rcrb
notb
popf
push
lds
cmpsb
fimuls
sbb
in
mov
inc
push
pop
pusha
dec
inc
sub
push
stos
daa
jp
jbe
xchg
aas
or
dec
mov
add
add
cwtl
push
lods
push
popa
lret
enter
sbb
stc
repz
adc
scas
add
inc
push
sbb
xlat
rol
scas
addr16
scas
mov
cli
fwait
cmpb
mov
xchg
popa
or
out
lcall
icebp
enter
mov
lods
and
mov
push
or
jne
pop
test
ja
out
fmull
fldt
stc
dec
es
sub
jmp
pop
mov
movsb
ret
mov
cmpsb
int3
nop
mov
out
pop
jnp
pop
sbb
nop
push
mov
je
dec
les
outsb
stos
pop
push
aam
orb
mov
mov
pusha
sti
cli
stc
push
nop
push
lahf
andb
and
les
dec
dec
das
rcr
pop
jl
repnz
les
pop
cmp
sbb
aad
sbb
push
push
int
rclb
cmp
xor
mov
cmpsl
in
mov
cmpsl
inc
and
jno
das
add
cmpsb
lcall
push
sbb
mov
int
xor
push
pop
test
add
cmp
lock
pop
sbb
xor
dec
bound
lock
enter
out
outsb
cmc
insb
mov
rorb
jmp
pop
dec
and
mov
cli
mov
insl
mov
lret
stos
push
push
push
fxch
mov
and
mov
ret
lock
dec
xchg
mov
orl
xchg
xor
in
adc
or
gs
push
mov
addr16
jnp
sbb
repz
mov
rclb
incb
rcrb
les
lcall
movsl
bswap
out
pop
out
jb
push
loop
pushf
pop
fistl
mov
jne
fldenv
jnp
neg
nop
test
jbe
hlt
hlt
dec
push
ja
lds
adc
loopne
dec
dec
pusha
loop
int3
add
xchg
bound
loopne
popf
push
mov
sbb
daa
int
pop
enter
xchg
push
adc
xchg
cmpsb
add
ja
jp
rcl
in
jne
rcrb
mov
cli
mov
mov
xchg
lock
pop
sub
popf
adc
add
mov
test
test
pop
pop
fimull
jo
ror
xor
jmp
js
mov
dec
out
xor
adc
mov
adcb
and
mov
mov
and
mov
fisubrs
inc
iret
push
inc
in
shrl
mov
cmp
dec
mov
or
push
mov
je
sub
shll
loope
jge
cmp
data16
scas
fnstsw
imul
push
and
push
mov
mov
mov
push
cwtl
sub
hlt
stc
fcoms
push
out
sub
lds
xchg
jb
jnp
sbb
sbb
scas
xchg
xchg
push
and
mov
jge
rcll
incl
cmp
dec
add
pushf
lcall
pop
das
cmpb
mov
out
lcall
sub
ss
or
nop
imul
lret
insl
ljmp
pop
xor
inc
jae
pop
jae
test
and
or
adc
push
in
out
and
adc
subl
cmpl
stos
inc
push
jmp
jp
lahf
pop
in
adc
sbb
inc
mov
sub
movsl
and
movsl
jp
test
test
mov
out
test
or
stos
dec
and
push
mov
lock
orb
gs
out
jmp
neg
ljmp
bound
dec
jmp
and
imul
stc
jo
sbb
mov
push
in
mov
cmp
push
jo
jb
xor
mov
lret
inc
push
sub
and
mov
sub
je
mov
cs
jo
pop
and
loop
clc
aaa
adc
and
push
aas
mov
shr
inc
inc
mov
or
pop
call
lods
inc
dec
dec
dec
adc
fcomi
push
sub
fisubs
aad
pop
test
out
or
pop
mov
imull
fwait
sahf
push
in
pushf
mov
ljmp
push
xchg
sahf
popf
push
push
das
addb
mov
lds
xor
mov
jle
push
add
or
fucomip
aas
adc
adc
test
pop
cmp
das
fistpl
in
mov
xchg
insl
fstpl
int3
and
mov
imul
or
aam
mov
les
pushf
daa
adc
cwtl
cs
and
add
mov
in
mov
xchg
xchg
sahf
dec
bound
jmp
sbb
insl
and
dec
sub
subl
lcall
sub
push
mov
aas
fdivrs
into
ljmp
pop
and
xor
popf
popa
xor
jo
data16
sti
and
mov
mov
sbbl
ficoms
cwtl
leave
imul
in
sbb
sbb
push
ret
mov
jo
loopne
aas
jbe
sub
and
sbb
add
in
in
neg
dec
ss
xchg
fstpt
mov
and
mov
add
lret
shl
std
movsb
mov
bound
cmp
imul
xor
adc
ss
lret
idivl
mov
in
cmc
and
in
mov
out
mov
insl
ljmp
mov
icebp
push
sub
shr
pop
push
mov
sbb
add
shrl
dec
xchg
test
sub
rorl
sbb
lds
xor
push
iret
addb
pop
sbb
mov
imul
xchg
mov
mov
shrb
inc
sbb
sbb
cmp
sti
cmp
mov
jnp
inc
dec
mov
out
or
mov
cmc
jmp
xor
dec
in
xchg
arpl
pop
in
mov
sbb
arpl
jne
sub
xchg
dec
iret
add
in
lock
add
pop
pop
hlt
jl
pop
cld
xchg
mov
and
xlat
fwait
leave
call
cwtl
es
push
jl
ret
mov
repz
or
mov
pop
iret
pop
sbb
das
add
sbb
add
pop
hlt
insl
negb
xchg
inc
inc
cmp
iret
dec
xor
or
xchg
xor
cmp
or
sub
xor
stos
pop
int3
add
dec
nop
out
outsl
pop
cmp
jge
mov
xchg
push
mov
inc
sbb
ja
fstl
scas
and
xor
dec
fsubrl
das
push
loope
adc
cwtl
mov
and
es
push
test
jp
rorl
sbb
sbb
xor
imul
das
jns
idivl
mov
and
mov
or
cwtl
cmpsl
pop
mov
stc
in
je
inc
pop
pop
sti
adc
sub
call
fdivl
jle
mov
jbe
cmp
xor
dec
imul
inc
nop
mov
loope
jo
lret
mov
pop
dec
adc
push
inc
xor
mov
shl
jb
jns
jo
inc
mov
les
xchg
es
enter
push
fidivrs
fcomi
xor
mov
pop
cmpl
pop
mov
cld
xor
into
imul
in
mov
push
mov
xor
mov
fldcw
and
or
movsl
pusha
lds
dec
adc
add
pop
ja
stc
enter
roll
or
mov
aas
lcall
loopne
fnstcw
and
fprem
push
mov
pop
pop
iret
fsubl
leave
push
jecxz
mov
test
incl
jbe
shrb
pop
adc
stos
popa
add
xlat
cwtl
addl
mov
mov
ljmp
aas
xchg
clc
dec
data16
inc
int3
insl
ja
xchg
jle
ffree
push
scas
add
lret
mov
nop
or
ja
int3
cmp
and
out
sahf
mov
cmc
xorb
loope
jae
out
sub
ds
sbb
add
or
add
add
je
sub
rorb
sbb
mov
mov
rep
sahf
shr
pop
insb
xchg
sbb
sbb
lret
imul
jb
pop
cvtpi2ps
mov
mov
cld
arpl
xor
lock
pushf
sarb
aad
jl
cmc
adc
xchg
add
mov
lea
adc
pushf
pop
in
fwait
shl
ds
xchg
mov
rcrl
mov
sbb
test
cmp
imul
fs
mov
push
out
fisubrs
lods
call
jbe
push
insl
clc
jae
pop
add
je
popa
clc
pop
push
push
add
push
adc
scas
roll
mov
dec
lahf
aas
lock
xchg
mov
insb
jb
dec
out
jge
xor
mov
icebp
add
mov
push
loopne
sub
jp
les
jmp
cmp
mov
sub
bound
test
into
gs
sbb
cmp
lods
repnz
cmp
adc
or
popf
outsl
add
out
sbb
int3
rolb
sbb
cmp
mov
inc
lret
enter
into
stc
lods
xchg
popl
inc
aas
jne
rcrb
sub
incl
pop
sbb
push
popa
repz
jnp
test
sahf
cmp
aaa
adc
fwait
outsl
loopne
test
sbb
outsl
out
mov
iret
sbb
mov
test
cmpsb
dec
aaa
lret
pop
mov
sub
fdiv
xchg
jp
xor
adc
jl
std
jo
sbb
scas
hlt
adc
das
faddl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
aas
mov
stos
aam
jp
sbb
jp
jp
shll
mov
xchg
out
jmp
ficomps
or
or
xchg
sub
and
cmpsb
lea
adc
mov
add
daa
popa
or
out
add
mov
mov
mov
out
add
arpl
outsb
bound
adc
aas
stos
inc
cltd
frstor
rolb
mov
jl
out
mov
xor
push
incl
and
in
push
xchg
in
push
stos
adc
sub
adc
pop
inc
insb
cld
inc
cmpsb
test
and
or
adc
arpl
adc
js
std
lea
insl
cmp
jle
call
or
sub
xor
pop
mov
jge
dec
outsb
jmp
lret
push
cmpsb
loop
aaa
adc
sub
pop
mov
lods
into
mov
xchg
test
xor
sbb
call
xchg
fildl
nop
add
and
sub
fcomp
movsl
call
loopne
clc
push
repnz
cli
jmp
jp
cli
push
sub
xor
add
jg
rcrl
lds
out
jno
xchg
insb
lea
icebp
cmp
pusha
add
int3
jg
sbb
pop
pushf
into
sbb
inc
nop
pop
jae
mov
or
inc
inc
mov
lahf
cmpsb
clc
mov
push
or
add
cmpsb
mov
fdiv
mov
subl
jbe
lcall
dec
sub
fwait
sub
ret
cmpsl
mov
jge
mov
pop
jo
inc
pop
push
inc
xchg
or
lret
int3
sub
push
fsubl
jp
shrb
adcl
push
xor
lahf
jle
rorb
int3
mov
or
xchg
cs
mov
int3
pop
fmuls
fisubs
push
mov
jnp
rcll
loope
push
outsl
out
mov
and
inc
insl
jnp
jae
in
lcall
ds
pusha
or
add
hlt
stos
xchg
and
loop
dec
xor
jecxz
push
addr16
cmp
cli
or
push
push
insb
add
cmpsl
add
fiadds
insb
int
frstor
sbb
outsl
jae
xchg
cmpl
lret
jge
mov
test
xchg
imul
popf
jb
ljmp
mov
pop
int3
pop
and
dec
repnz
push
es
sub
xchg
and
mov
mov
jb
dec
mov
inc
jg
test
sbb
adcb
pop
rolb
push
stc
mov
stos
aad
jns
sub
pop
xor
pop
loope
leave
xlat
fwait
inc
fisttpll
imul
insl
adc
lret
pushf
std
mov
inc
pop
cmp
rorb
movsb
je
incb
xor
xchg
jns
or
add
pop
ljmp
mov
jae
xor
mov
pushf
add
int
or
sbb
das
push
stc
xchg
jp
mov
arpl
xor
xchg
data16
or
jmp
xchg
out
nop
cs
loope
insl
roll
mov
in
push
popa
cs
or
adc
pop
push
sbb
or
loopne
push
andb
mov
stc
aas
mov
in
or
and
push
xchg
sbb
xchg
aaa
inc
jb
mov
cmpsl
dec
xor
adc
xchg
xor
xor
sub
or
jbe
into
dec
repnz
lahf
and
add
aam
mov
cltd
inc
inc
adc
adc
mov
aas
xor
out
inc
xor
iret
int3
sub
fmull
or
dec
pusha
mov
aad
xchg
in
xor
jle
sti
out
hlt
inc
shlb
je
adc
jg
lds
pop
sahf
es
scas
cmp
iret
mov
out
pop
mov
adc
fildll
rclb
push
inc
pop
nop
fs
pop
xchg
sbb
inc
adc
leave
ds
fsts
cmp
hlt
mov
jg
mov
push
cli
add
jle
mov
daa
add
mov
pop
dec
inc
test
ljmp
push
jge
cltd
das
rcrb
push
inc
jg
mov
insb
jne
add
mov
mov
aad
out
mov
mov
mov
cmp
neg
enter
dec
je
cmp
sbb
rcl
dec
jmp
jns
mov
scas
jb
mov
push
add
xchg
rcrl
push
mov
pop
sub
scas
mov
loopne
int
stos
mov
fiadds
xchg
movsl
add
icebp
lret
mov
lcall
ret
loop
inc
add
mov
clc
lret
mov
testl
pop
jle
jno
pusha
dec
sub
and
in
xor
inc
sbb
insl
std
push
call
imul
mov
xor
add
addr16
sbb
mov
sub
inc
icebp
fdiv
or
mov
fcoml
scas
daa
or
or
test
mov
cmpb
daa
fists
xor
xchg
sbb
mov
mov
pop
jge
inc
fsubrs
mov
or
add
imul
mov
cmp
and
fstps
inc
mov
jmp
movsb
fucomp
adc
popf
fsubl
cmp
pop
mov
ret
and
jp
xchg
mov
jns
push
or
popa
aas
push
outsl
mov
mov
pop
aaa
pushl
sarb
sbb
dec
mov
xchg
jbe
and
ret
aaa
jbe
icebp
jecxz
mov
cltd
push
and
inc
mov
mov
mov
out
dec
ret
shll
inc
inc
adc
gs
cmpsb
jg
out
sub
and
sbb
mov
imul
dec
or
stos
lock
cmpsl
mov
jecxz
cmc
pop
mov
arpl
dec
in
mov
fdivs
dec
mov
loope
mov
rcrb
cmp
mov
test
popf
jmp
repz
adc
hlt
shlb
ret
sbb
mov
mov
movsb
push
insb
fdivr
dec
das
mov
mov
out
jae
out
cmpsb
lcall
cmp
jl
adc
subl
adc
jle
insb
rcrl
adc
js
data16
jbe
outsb
popl
and
fs
fcmovnb
mov
call
inc
stos
aam
sub
mov
aas
xchg
cltd
repz
ds
testb
or
dec
lcall
or
int
cmp
icebp
ja
add
arpl
ret
mov
test
mov
and
mov
into
jns
inc
inc
sub
jbe
jle
out
in
mov
xchg
add
jns
sbb
jbe
mov
sub
sub
lahf
jbe
jp
mov
cmc
mov
aas
mov
push
arpl
add
addr16
mov
push
add
mov
jnp
add
xlat
push
fs
pop
lret
clc
dec
cmp
adc
int
pop
fwait
mov
sbbb
dec
sub
or
xchg
lods
lret
fadd
mov
test
addr16
lock
pop
cmp
test
imul
sbb
fucomi
pop
cmpsl
push
mov
jo
sbb
xchg
mov
repnz
aad
out
xor
nop
pop
add
xchg
mov
bound
lahf
cwtl
ret
fs
ds
dec
fsubl
inc
dec
outsb
clc
call
mov
mov
sub
pop
add
inc
cld
xor
jle
test
imul
mov
sbb
push
pop
fcmovnb
cld
lcall
or
dec
adc
sbb
into
les
xor
or
mov
sar
pop
js
or
cmpsb
addr16
xchg
lret
movsb
mov
jge
cmp
jbe
pushf
mov
stc
pop
fisubl
mov
or
loopne
test
or
mov
outsb
test
aam
lock
xor
icebp
fsts
pop
lcall
shll
cmp
insb
mov
shl
ret
mov
adc
pop
icebp
dec
call
push
test
mov
cmp
test
into
mov
test
push
ret
pop
cmp
subl
sub
add
jbe
in
or
test
xor
loope
dec
sub
lahf
push
sub
ds
push
jnp
mov
cmp
dec
cli
dec
jmp
add
sti
dec
ror
sbb
xor
cmpsl
pop
mov
inc
inc
push
lret
and
mov
dec
icebp
adc
pop
out
mov
pop
mov
jmp
push
test
mov
inc
mov
add
and
xchg
test
pop
mov
sbb
cmp
push
and
popa
pop
pop
sub
fisubl
lods
sbb
lcall
cmp
pushl
popa
es
mov
xor
mov
mov
inc
and
mov
adc
pop
clc
orb
push
push
stos
and
rcrb
in
out
or
into
ds
imul
insl
jl
lock
and
or
push
loope
lahf
loope
pop
sti
iret
leave
les
leave
call
or
cmp
xor
sbb
mov
ds
inc
addr16
cmc
push
cmpsl
idivl
mov
ficoml
ja
sbb
sarl
jae
movsl
ljmp
cmp
fdivrs
lea
fwait
insl
xor
fldenv
ds
xchg
xchg
sbb
ja
cs
mov
add
push
out
sti
rorb
jl
call
add
mov
or
fwait
add
arpl
push
lods
jne
sti
negb
out
mov
adc
pop
into
hlt
andb
sbb
pop
mov
pop
addl
aam
or
adc
mov
jmp
test
sub
lock
pop
or
daa
lret
add
mov
mov
shll
inc
xor
adc
xchg
xor
dec
fs
pop
leave
sti
add
jl
push
inc
imul
nop
jb
test
xchg
insl
inc
shll
and
sbb
cmp
cmp
jae
pop
pop
sbb
pusha
cmpsl
mov
fiadds
ret
sahf
shll
push
inc
clc
lods
test
push
test
xchg
scas
xchg
inc
icebp
outsl
or
mov
lods
dec
call
ret
pushf
pop
pop
sbbl
mov
aas
mov
mov
call
je
ja
fld
xor
pop
lret
push
out
call
sarl
roll
sub
push
out
push
mov
imul
xor
xchg
lods
jae
sbb
in
adc
mov
rcrl
or
xchg
and
shll
dec
aaa
pushf
ret
mov
mov
bound
xor
or
push
adc
addr16
movsl
pop
jae
add
iret
adc
mov
mov
jle
int
xor
or
xchg
dec
adc
push
cmp
stos
repz
jle
shl
sbb
sub
pop
sti
scas
sbb
xor
add
imulb
js
cwtl
lods
sub
out
es
les
aaa
lahf
inc
loop
std
adc
std
lcall
jg
lcall
vpsrld
adc
add
stc
fists
repz
mov
aam
lcall
dec
pop
dec
jmp
pop
popl
leave
sbb
mov
je
cmp
push
leave
ds
out
cmp
xchg
aas
cmpsl
adc
iret
push
incb
sub
iret
js
into
jmp
push
push
inc
or
and
cmp
fsubs
mov
imul
inc
mov
inc
fstpt
dec
cmp
leave
lock
loop
std
inc
aam
mov
add
mov
pop
shl
lret
cmp
fnstenv
imul
sarb
mov
sbb
outsb
dec
xor
mov
loope
stos
pop
jo
dec
pop
lds
sub
in
fistpl
bound
fimuls
xchg
arpl
add
cs
jbe
jo
nop
jge
movsb
shl
xchg
mov
cld
popa
shlb
lahf
mov
imul
aas
mov
scas
popa
pop
pop
test
arpl
jno
outsb
cltd
push
pop
iret
shlb
push
xor
lock
ja
mov
mov
lea
cmp
xor
add
sub
movsb
sub
call
xor
es
push
dec
in
aam
and
pop
gs
not
mov
push
andb
xor
in
in
mov
imul
jns
sti
mov
push
push
and
enter
jae
ss
mov
mov
jl
mov
jecxz
sub
sti
ffreep
push
mov
add
mov
jo
out
sbb
mov
or
lcall
mov
xchg
ja
add
lds
inc
mov
int3
mov
clc
push
xchg
xchg
pop
fstpt
scas
ret
mov
lret
dec
sub
push
add
mov
adc
or
cmpb
ss
pop
lahf
lods
cmp
xchg
sbb
sub
dec
mov
cmp
sub
cld
jno
cmp
jg
inc
mov
mov
cmc
push
js
pop
aad
xorb
hlt
sub
sahf
lret
jnp
rclb
movsb
test
pop
lcall
imul
add
cwtl
mov
mov
fmull
shll
inc
mov
movsb
mov
and
mov
mov
xor
aad
mov
repz
mov
pop
lcall
mov
mov
imul
cmp
push
or
sbb
dec
adc
jae
mov
push
add
flds
les
insl
cltd
and
add
push
fcoms
inc
test
pop
mov
xor
sbb
cmp
mov
imul
or
pop
pop
adc
sub
or
lahf
or
imull
cltd
stos
imul
dec
xor
lock
cltd
pop
adc
call
test
mov
cmp
cmp
mov
dec
mov
or
andb
cwtl
jecxz
cmpsb
inc
in
mov
jbe
dec
xchg
adc
inc
jl
roll
dec
sti
idivl
stos
and
adc
inc
xchg
out
cmpsb
outsb
pusha
add
js
lret
loop
js
push
in
fldt
sbb
push
out
and
sbb
pop
mov
xor
cmpb
jbe
out
lret
cli
test
stos
shlb
sti
pop
and
aas
jmp
pop
push
xchg
dec
dec
rclb
shll
jno
aaa
loop
enter
movhps
cmpsl
jb
leave
xchg
xchg
es
xchg
sub
mov
gs
xchg
bound
scas
mov
sub
icebp
dec
xor
ja
xlat
push
pop
inc
loopne
out
je
jg
push
js
mov
mov
rol
sbb
adc
cmc
repnz
out
popf
stos
enter
dec
mov
xchg
shll
jne
loopne
adc
fisubrl
push
pop
inc
cmpsb
outsl
pop
sti
inc
jns
and
aaa
mov
and
rorl
inc
pop
jns
xor
shrb
stc
lock
sbb
jg
mov
xor
jae
rcrl
mov
sbb
out
sahf
fnop
dec
or
cmp
nop
sbb
xlat
pop
jno
arpl
push
fsubl
adc
loope
test
pop
sub
lahf
divb
jns
ret
adc
mov
shll
call
rolb
mov
insb
cmp
fidivs
loope
mov
int3
out
pop
add
mov
push
idiv
push
in
js
dec
and
push
mov
sbb
bound
inc
popf
or
out
xchg
ret
xchg
enter
push
mov
sub
pop
push
pop
adc
dec
jmp
movsl
mov
sbb
jbe
xchg
imul
ficoml
enter
or
les
mov
leave
adc
iret
orb
mov
pushf
lods
push
xchg
lcall
cmpsl
adc
das
xor
negb
add
cmpsl
movsb
xchg
pop
push
negl
or
dec
sub
jmp
aam
dec
mov
add
push
lods
cmpl
jbe
js
add
mov
leave
cmp
mov
js
das
cli
xchg
cmp
cli
std
lahf
aam
and
mov
loope
pop
scas
lods
mov
inc
movsl
in
sti
enter
addr16
push
inc
add
pop
xchg
mov
aad
leave
push
dec
inc
add
inc
je
fcmovu
add
stos
shrb
popa
les
pop
sub
je
pop
out
mov
jge
cmp
rcrl
js
dec
aam
loopne
jle
sbb
jmp
aam
sar
cmc
bound
xchg
mov
and
cld
popa
leave
out
lock
cmp
inc
flds
test
int3
cs
mov
ror
inc
cmc
daa
nop
and
mov
aad
movhlps
dec
xchg
xlat
jns
mov
adc
mov
xor
jmp
mov
bound
dec
adc
jns
lods
jle
mov
ss
mov
mov
xchg
fsub
mov
push
movsb
rorl
popf
dec
pop
lods
mov
push
popf
pop
mov
xchg
int3
mov
pop
mov
dec
push
mov
ret
test
push
pop
add
and
and
inc
xchg
push
imul
mov
in
inc
imul
and
fsts
pop
pop
pusha
dec
lods
jbe
push
pop
xor
cli
imul
jg
pop
cmp
ret
test
outsl
fsubrs
iret
sub
mov
pop
jo
roll
and
xor
mov
fldcw
mov
jnp
ljmp
lcall
pop
or
outsb
or
push
dec
mov
shll
jns
fwait
in
addr16
movl
or
push
and
sub
lret
inc
mov
aaa
mov
jle
xor
sbb
scas
int3
enter
imul
mov
ljmp
mov
mov
add
mov
pop
enter
mov
js
aam
loopne
and
fcmovne
inc
in
dec
outsl
sbb
sbb
and
fwait
mov
jge
outsl
push
or
sti
xchg
stos
scas
nop
test
cmp
jl
fistl
iret
pop
jb
movsb
mov
fwait
jns
ffreep
mov
sahf
sbb
stos
push
mov
test
pop
sbb
cmp
and
push
adc
xchg
push
iret
xchg
hlt
clc
cmpsl
test
jecxz
sbb
cmp
sub
cmp
loope
lods
or
mov
fldl
psadbw
arpl
mov
hlt
lods
gs
add
outsl
loope
inc
push
push
and
push
and
push
xor
sub
mov
cmp
dec
xor
mov
hlt
popa
aad
movsb
addb
outsl
lret
or
jle
xchg
hlt
cmp
lahf
movsl
ja
hlt
cmpsl
xchg
push
icebp
add
cmp
stos
fistpll
and
scas
inc
mov
xor
or
xchg
xchg
push
sti
dec
mov
adc
jecxz
xchg
fsts
insl
sbb
dec
ljmp
lret
jns
scas
test
sub
shl
push
push
pop
push
adc
mov
stc
push
dec
push
popa
push
xor
xchg
and
out
dec
push
push
add
adc
pop
xor
mov
mov
stos
gs
in
test
xchg
les
shrb
inc
sub
js
mov
add
aaa
ss
repnz
int
cmp
dec
das
bound
inc
ss
jl
fisttps
lahf
add
pop
sbb
enter
aad
aaa
inc
insb
push
dec
push
dec
fdivrs
popf
lds
shl
fists
mov
inc
dec
mov
add
adc
sbb
lods
ljmp
xor
cld
pop
scas
mov
inc
es
inc
cmp
movsb
sub
sub
jp
lret
dec
in
sub
xor
pop
ss
in
lret
subb
pop
repnz
fbstp
movsl
xor
test
xor
pop
cmpb
sbb
sbb
int3
push
sarb
je
sbb
daa
fiadds
lret
hlt
cmp
push
inc
loope
insb
loope
add
or
cmp
fwait
jg
mov
lds
adc
test
ja
cmc
adc
ss
sbb
fistpll
ss
fcmovnb
cmpsb
stos
add
cld
cmp
fisubrl
imul
xchg
xchg
fsubrl
pop
imul
add
mov
add
mov
push
loop
xchg
inc
push
aas
sbb
jle
inc
mov
cwtl
xor
ljmp
shrb
icebp
pop
mov
test
lods
stos
push
adc
push
iret
loopne
fwait
inc
add
push
and
push
sub
sbbl
loop
xchg
and
ss
daa
xchg
shrl
loope
mov
imull
mov
mov
lock
xor
mov
cmpsl
je
and
lods
stc
loopne
repz
mov
dec
mov
dec
pop
pop
jp
test
push
test
push
jo
mov
mov
add
call
cmc
cwtl
and
imul
fidivrs
cmpsl
and
mov
dec
cmp
insl
imul
mov
mov
xor
jle
xchg
lret
ljmp
mov
pop
fdiv
sbb
push
xchg
xor
dec
mov
jo
sub
popl
push
or
movsl
or
jp
jge
jbe
leave
rcll
adc
cmp
test
leave
jmp
mov
int3
push
dec
sbb
pop
hlt
adc
mov
jo
pop
push
pop
add
insl
pop
fcompl
push
iret
lcall
cmp
push
out
cmpl
xor
adc
mov
mov
xchg
dec
popf
lret
lock
lock
xor
stc
push
repz
cmc
mov
cs
jg
scas
mov
jg
jmp
jl
xchg
pushf
inc
adc
movsl
iret
adc
push
test
xchg
icebp
mov
in
pop
xchg
lea
sub
xchg
rcrl
repnz
dec
mov
sub
fldt
into
xchg
call
inc
rcl
xor
mov
ljmp
jecxz
clc
and
lds
lret
cmp
dec
mov
fs
cld
popf
xor
push
test
cmp
out
mov
push
mov
insb
int3
aaa
cmc
jge
sbb
sahf
jge
ja
jno
lea
cld
in
add
mov
popa
sbb
jp
shrb
sbb
xor
or
int3
pop
dec
addb
dec
icebp
mov
xor
xchg
lahf
dec
in
and
dec
add
dec
lcall
mov
imul
std
adc
in
pop
sub
ja
xchg
dec
pusha
insb
mov
xchg
cmp
push
icebp
cmpsl
ret
xchg
mov
mov
jo
out
sub
sbbl
push
push
enter
mov
push
popf
cmpl
shlb
sbb
test
out
cli
aad
inc
pop
stc
mov
cmpsb
aam
lods
push
cmp
xchg
fimuls
and
ja
xchg
add
mov
daa
fs
pop
dec
push
mov
aam
sbb
aam
xor
mov
push
ss
or
fadd
cli
add
mov
addr16
pop
xchg
arpl
mov
mov
add
loope
push
enter
lods
pop
iret
ret
and
and
mov
jbe,pt
inc
push
pop
or
mov
adc
jecxz
xchg
adc
push
dec
mov
mov
loopne
inc
icebp
enter
scas
xor
sub
jns
sti
ds
orb
adc
sarb
cmp
inc
jne
sbb
pop
daa
inc
clc
xchg
cmp
cmp
cmp
add
stos
pusha
hlt
decb
inc
mov
out
lcall
xchg
xchg
leave
cmpsl
stc
clc
pusha
lahf
mov
out
loope
iret
mov
outsb
enter
fsubrp
mov
sti
aas
push
jle
sahf
nop
sbb
cli
paddusw
imul
out
jmp
int3
pop
xor
je
in
inc
mov
or
test
rolb
fadds
in
xchg
mov
push
fsub
stos
push
fdivrs
in
popf
jno
mov
jl
sbb
fisttpl
int
pop
mov
ljmp
lock
sub
jo
ljmp
or
test
movsb
inc
stos
jne
in
jnp
gs
iret
pop
negl
cmp
ja
shrb
mov
xchg
orb
cmp
lods
push
push
inc
jp
and
push
sbbl
cld
sub
lcall
in
enter
cld
jge
and
in
pop
nop
repnz
or
shlb
xchg
mov
int
insl
imul
cs
cwtl
jp
mov
mov
dec
sbb
or
repz
aaa
cmp
imul
rcll
inc
mov
negl
ja
lock
and
gs
sub
gs
dec
loopne
and
fldl2e
mov
mov
push
movsb
xor
ds
pop
xchg
cld
es
mov
xchg
xor
mov
stos
movsb
ret
sbb
jae
dec
xchg
pop
push
lds
cmpsl
les
adc
shll
jg
cwtl
fldl
into
xor
fsubl
push
icebp
push
jge
int3
pop
inc
push
shl
ret
mov
aad
pop
int
push
cld
jbe,pt
mov
or
fucomp
jge
cwtl
lret
cmpsl
push
push
sbb
loopne
adc
mov
xchg
fidivl
mov
les
jl
sub
popa
push
xor
dec
jnp
sbb
xor
adcb
sbb
int
pop
push
call
cmp
fidivs
repnz
pop
in
movsb
inc
and
pop
data16
lret
jne
xchg
sbb
ret
test
sbb
cmp
pop
shlb
cmpsl
jl
jmp
sahf
xchg
sub
test
add
adc
inc
mov
out
notl
adc
into
push
ficomps
mov
imul
push
or
inc
subl
xchg
mov
addl
fsubl
jmp
mov
lret
mov
xchg
dec
popa
sbb
aad
enter
add
lock
scas
imul
and
outsb
stc
aas
stos
aas
cltd
lahf
cli
dec
lret
sbb
xchg
nop
lcall
pop
fs
and
cmp
cld
lcall
in
xchg
dec
lret
cli
jno
rorb
cmc
scas
mov
push
adc
test
pop
adc
lock
sub
pop
pop
push
sub
xchg
pop
add
sub
xlat
inc
push
movsl
test
jns
leave
cmp
push
mov
xchg
sbb
adc
adcl
dec
cld
mov
test
loop
sub
mov
dec
add
scas
dec
mov
sub
mov
push
push
adcb
in
fnsave
mov
pop
cmp
test
xor
sbb
dec
lea
jp
enter
aad
inc
jo
test
and
mov
lahf
inc
push
jbe
js
lock
jne
dec
mov
lds
les
iret
pop
or
addr16
imul
mov
sbb
inc
call
push
mov
out
sbb
mov
mov
insl
push
std
mov
dec
mov
test
pop
imul
cmpb
dec
sub
aam
pop
daa
bound
out
add
loop
sbb
cmp
sub
push
mov
mov
push
mov
call
add
sub
les
fs
add
outsl
cmp
movsb
or
mov
mov
loope
push
and
call
ss
int
cld
mov
je
mov
mov
mov
iret
sbb
fdivr
clc
add
daa
in
movsb
adc
jo
pop
jge
xor
jns
int3
insl
mov
push
push
add
addl
pop
push
jecxz
cmp
or
ja
into
imul
cld
mov
xlat
ljmp
xchg
push
bound
call
mov
dec
nop
pop
adc
pop
daa
fildll
cltd
pop
movsb
pop
adc
cmpb
stos
rolb
adc
jge
dec
jge
outsb
mov
cmpl
into
in
clc
pop
cmpsb
mov
out
sub
jp
mov
insl
test
mov
mov
lods
popf
jns
es
lret
adc
aam
out
ret
push
shrb
xchg
jne
sbb
test
cmp
shlb
pop
push
add
test
and
push
push
mov
and
test
sbb
xor
mov
xlat
ja
xor
popf
mov
in
mov
jnp
js
cmp
cmp
and
in
out
fcmovbe
pop
ljmp
xor
sub
cli
movsb
push
in
lahf
xor
cld
bound
xchg
jne
xchg
aas
mov
xor
xchg
jnp
repz
mov
jo
push
rcrl
mov
fisubrs
enter
gs
push
inc
fstpl
or
out
pop
ds
pop
aam
pop
shlb
out
jne
xchg
das
pop
ljmp
insl
jns
rorl
push
push
cmp
out
rorl
test
cmpsl
ja
ja
sub
and
iret
push
push
jbe
pop
lods
movsl
pushf
test
cld
xor
ja
dec
repnz
out
fwait
lret
clc
xchg
lret
ljmp
in
pop
mov
cmp
mov
loope
sbb
test
xchg
mov
xlat
int3
mov
js
or
fnsave
mov
pop
push
xchg
inc
dec
ror
push
lods
adc
sahf
out
aas
xchg
fists
out
out
xor
dec
fnsave
sbb
xchg
push
pop
fbld
jl
adc
mov
cmp
push
push
mov
jl
inc
pop
lods
mov
andnps
pop
mov
iret
je
arpl
inc
arpl
addr16
in
push
mov
sub
push
hlt
adc
pop
loopne
gs
or
pop
inc
nop
rcrl
sarb
arpl
fs
outsl
adc
mov
inc
mov
pop
fnsave
mov
icebp
inc
xor
lret
or
add
and
xor
cld
es
fnstsw
mov
mov
arpl
adc
rolb
outsl
iret
and
sbb
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
push
or
lret
sbb
jp
aas
jl
data16
sbb
jo
sub
rcrb
fcmovnbe
imul
xchg
add
sti
xchg
movsl
push
call
lods
pop
cmpsl
fisttps
ljmp
jo
inc
pop
push
or
sarl
out
stos
cwtl
mov
sbb
clc
jmp
xor
adc
in
pop
jnp
fdivs
filds
jo
mov
xor
imul
test
adc
sub
jle
ja
mov
and
xchg
jno
cli
inc
fadd
jne
pop
mov
imul
mov
push
mov
push
xlat
mov
mov
fldenv
xchg
cmc
adc
sub
or
push
imul
dec
inc
in
pop
nop
sub
imul
xor
jne
movd
sub
push
vmptrst
in
daa
lods
mov
cmc
popa
push
cltd
mov
sbb
mov
out
ret
stos
addr16
orl
mov
mov
mov
jl
mov
fnstenv
std
mov
xorl
mov
and
scas
xchg
adc
or
fldt
and
pop
out
stc
orps
add
scas
das
cltd
xor
addr16
stos
lock
cmpsl
sbb
ss
jl
push
mov
sarb
idivb
pop
sbb
movsl
mov
sbb
gs
cmp
aam
xor
xchg
xor
or
insb
or
orw
add
pop
push
ret
gs
cmpl
daa
jne
push
idivb
call
sbb
gs
push
pop
rol
mov
push
test
dec
mov
in
mov
cld
imull
ret
xor
nop
mov
rclb
rcrb
aad
or
pop
push
repnz
push
or
mov
rcrb
add
je
add
cmp
sbb
pop
in
dec
test
cld
add
stc
test
mov
movl
push
aas
loopne
mov
mov
lret
adc
pop
mov
gs
loop
and
ret
cmp
mov
sbb
jecxz
sub
add
test
mov
pop
pop
add
movsb
mov
test
shlb
pop
sbb
mov
insb
pop
insb
push
in
mov
push
sub
divb
call
out
mov
push
cli
adc
add
push
mov
mov
stos
aad
push
inc
push
pop
dec
adc
ja
test
cltd
pop
mov
ljmp
mov
mov
sub
clc
dec
call
sub
ss
xor
mov
mov
jo
adc
push
push
lods
jnp
inc
xchg
pop
sbb
and
pop
dec
xor
mov
fimuls
xor
rclb
movsb
add
xlat
push
cltd
cmpsl
sahf
rclb
in
aas
sbb
mov
out
je
pop
cwtl
test
bound
push
out
mov
pop
cmpsl
iret
int3
out
loope
jle
popa
or
les
ret
imul
les
jmp
jns
mov
inc
jg
push
outsb
push
xchg
and
cmp
repnz
add
test
cmpsb
add
leave
int
sti
jg
add
out
shll
outsl
ds
inc
sbb
pushf
cwtl
rcl
cmp
mov
xchg
mov
imul
or
xor
aad
ljmp
loopne
jo
and
popa
and
rorb
jmp
insl
ja
cltd
inc
pushf
sbb
clc
shlb
push
cmp
negb
lea
ret
mov
mov
sub
cs
cmp
mov
sbb
jl
mov
sub
shl
xor
out
out
fs
push
aaa
push
test
test
pop
in
dec
scas
inc
pop
js
add
mov
movntq
out
jbe
out
and
nop
enter
in
jle
icebp
and
call
xchg
fmull
stos
cltd
jge
and
es
out
das
cltd
imul
xor
out
fisubrl
loopne
fldenv
dec
hlt
in
mov
rcrb
shrl
loop
xchg
mov
rcr
mov
mov
ficomps
insb
int
test
sbb
xchg
test
pop
pop
into
push
mov
cs
mov
stos
mov
ret
adcb
repz
sti
ret
sbb
xor
and
out
inc
mov
loopne
rcrl
push
aad
xor
sub
push
mov
js
or
cs
sbb
jmp
mov
sub
or
cmpl
xchg
movsl
mov
mov
xorl
gs
jge
pop
hlt
xchg
mov
xor
popf
jp
fldln2
xor
push
push
xchg
xchg
aaa
ja
scas
ror
pop
dec
lock
xchg
or
jae
inc
and
xor
sub
mov
push
push
outsb
sub
aam
inc
aas
and
into
sub
es
pusha
repnz
dec
ljmp
pop
fisttps
lret
mov
xorb
jecxz
cltd
inc
mov
call
repnz
mov
addr16
add
lock
incb
gs
mov
xor
jmp
dec
mov
mov
mov
movl
lret
mov
and
or
sbb
and
inc
xlat
adc
popa
hlt
leave
sub
lret
dec
cli
sbb
pop
mov
inc
loopne
and
dec
or
gs
pop
push
mov
pop
mov
inc
mov
xor
push
les
xchg
je
ja
lret
jmp
pop
lods
call
push
sub
dec
outsb
add
imul
sahf
pop
jo
add
leave
mov
sbbb
sbb
add
add
or
out
push
push
dec
jle
imul
lret
sarl
andb
ljmp
sub
stos
movsl
shrl
ja
push
mov
sbb
mov
insb
cmp
mov
or
std
aas
push
jge
cltd
mov
sub
icebp
es
imul
pop
cmp
test
add
mov
mov
in
sbb
call
adc
cld
or
xor
imul
mov
das
ret
adc
sub
or
add
and
data16
stos
sbb
jge
or
jno
dec
lret
outsl
push
pop
scas
push
mov
or
je
in
jp
dec
mov
lock
in
cmp
push
inc
in
jo
cltd
jg
out
and
psubw
and
into
mov
cmovno
icebp
pushf
out
int
lahf
dec
subb
add
xor
adc
mov
push
lock
imul
outsb
xchg
dec
je
xor
lret
xchg
sub
push
mov
lret
in
pushl
xor
pop
popf
shlb
mov
xor
xor
shll
int
mov
or
fstps
sbb
mov
arpl
hlt
jb
inc
gs
out
cld
pop
cmp
pop
jae
xorb
dec
test
mov
addb
or
sti
mov
cmpsb
scas
lods
jnp
in
xor
or
xchg
adc
xor
out
jbe
les
cld
movsl
out
mov
push
daa
test
test
add
test
leave
frstor
mov
mov
bnd
pop
cmpsl
mov
dec
es
ret
clc
push
dec
xchg
je
ss
jns
or
popf
lock
mull
xor
xchg
orb
add
rcrl
int3
mov
cmp
pop
xchg
cwtl
mov
sbb
jo
pop
stos
mov
clc
stc
mov
jb
adc
xchg
into
inc
or
negb
dec
dec
bound
lock
and
jmp
in
inc
mov
pop
xchg
es
rep
adc
int3
lods
inc
test
negb
xchg
sub
gs
and
xor
jnp
test
daa
cltd
aad
xchg
mov
aam
lcall
jg
add
dec
adcb
scas
dec
fldenv
insl
das
mov
adc
push
lahf
lret
in
push
push
subl
add
or
pop
and
dec
mov
sub
xchg
fsubrp
mov
or
xor
jb
xchg
loop
negl
popf
cltd
in
icebp
pop
stos
dec
push
dec
mov
scas
iret
dec
mov
mov
adc
add
jp
push
addr16
dec
test
repnz
shrb
test
jae
mov
int
add
add
mov
jb
dec
xor
insl
in
jl
sub
jl
imul
pop
mov
mov
sti
sbb
subl
lock
xchg
int
cwtl
jns
sbb
sub
pop
adc
xchg
pop
fildl
adc
mov
push
cmpsb
and
inc
and
dec
dec
in
cmpsl
bound
cmp
sti
lret
mov
pop
nop
pop
push
imul
dec
cmp
cmpsl
hlt
push
popa
fsubl
xor
jge
dec
lcall
inc
insl
adc
imul
adc
inc
fcoms
xchg
cltd
sahf
adc
jo
pushf
dec
xor
dec
adc
mov
and
clc
negb
out
mov
stos
mov
mov
cmp
sub
leave
arpl
pop
movsb
xchg
sbb
sub
pop
cmc
pop
and
sbb
inc
addr16
flds
stc
and
outsb
jle
leave
stc
mov
jae
cmp
ret
push
mov
cmp
stos
push
mov
pop
mov
push
or
and
xchg
scas
outsb
popf
jle
inc
sbb
jp
jae
enter
add
jns
dec
ret
das
cmpsl
cmp
scas
adc
movsl
imul
cmp
popf
imul
cmp
xor
pushl
mov
sub
xor
mov
mov
clc
jge
pusha
add
loop
aad
sub
clc
cmp
dec
jns
psubusb
js
adc
popa
add
shll
dec
mov
mov
test
push
sbb
pusha
push
jne
add
stos
rclb
adc
and
jbe
sub
cmp
shlb
icebp
out
mov
push
loopne
sbb
push
pop
jp
dec
das
in
insl
cltd
jns
dec
pusha
popa
pusha
arpl
adc
arpl
add
pop
mov
ljmp
mov
data16
lret
imul
cs
inc
and
sbb
mov
pop
mov
mov
cmp
aas
cwtl
xor
in
mov
cmp
jp
test
sub
mov
mov
popf
dec
imul
sub
mov
insl
aas
mov
adc
pop
xor
inc
and
mov
icebp
inc
xchg
movd
sub
pop
pop
add
aad
outsl
mov
or
push
in
sti
cli
push
nop
lock
mov
orl
add
pop
xchg
lods
mov
push
jl
cli
and
xor
jns
push
into
dec
mov
xchg
insl
dec
xchg
stc
dec
imul
rcrb
shll
mov
adc
pop
ljmp
push
out
pushf
mov
in
std
nop
xchg
mov
xchg
and
push
jbe
mov
pop
clc
push
dec
dec
push
setne
das
push
aas
mov
insb
xor
in
adc
movsb
xchg
sub
xlat
inc
test
jns
iret
mov
sub
pop
test
jecxz
push
adc
or
imul
out
add
mov
add
xor
dec
sub
mov
jne
jl
dec
mov
adc
fwait
mov
xor
xchg
aas
in
xchg
daa
hlt
jno
scas
mov
mov
fbld
jo
push
and
xlat
scas
in
add
imul
out
push
into
jno
roll
jmp
jl
clc
ret
ret
xchg
hlt
pop
rcr
jle
cmp
adc
jbe
or
scas
cmpsl
pop
stos
jp
mov
push
outsl
outsb
add
cmp
ret
mov
add
xchg
dec
mov
test
cmpsl
lods
jo
movsb
inc
jg
mov
shlb
cmpsl
xchg
mov
mov
test
mov
or
sbb
rcr
add
sub
push
push
mov
mov
jns
fwait
mov
mov
push
rclb
lret
add
sub
jns
loope
or
push
fwait
add
test
jp,pt
daa
mov
push
jle
mov
dec
aam
xchg
imul
or
std
in
fwait
sub
in
gs
std
xlat
filds
mov
or
call
cwtl
cld
mov
xor
lods
aad
shlb
pop
mov
mov
rorl
and
push
adc
and
aas
cmp
pop
lret
xchg
jns
pop
popa
and
fiaddl
adc
or
inc
jo
les
mov
in
jbe
mov
jecxz
xchg
lea
cmp
test
pop
in
loope
mov
sub
jle
pop
xchg
xchg
shlb
out
lea
inc
lods
pusha
in
adc
in
test
inc
fcmovnb
push
pusha
addl
xor
lods
jb
imul
divl
fdivrs
imul
test
cmp
pop
aaa
lret
in
jns
mov
call
jns
js
xor
repnz
fistpl
in
and
jle
mov
adc
test
jnp
rorl
out
or
enter
dec
stos
cmp
fnstcw
and
andl
push
in
js
or
adc
inc
in
cs
mov
lods
adc
cmc
cmpsl
nop
repz
int3
aam
push
clc
or
add
enter
sbb
or
cmp
or
jne
out
inc
pop
push
pushf
jb
cltd
icebp
aam
xor
xor
push
testl
push
arpl
div
add
dec
and
divb
inc
and
xor
mov
mov
int
shr
or
sbb
repnz
and
movsl
movsb
xchg
jge
mov
aad
fists
mov
lods
sub
inc
mov
inc
push
stos
and
inc
cmp
in
outsl
stc
pop
xchg
loopne
inc
int3
sti
mov
add
cli
or
add
shll
jno
cld
mov
or
js
js
xchg
cmp
rcrb
xlat
negb
mov
xchg
lock
sub
push
mov
mov
cs
stc
jg
pop
test
lods
lods
add
push
mov
pop
push
lea
cmp
dec
mov
outsl
adc
cmp
lods
adc
pop
push
inc
cmp
cmp
cmp
dec
push
stc
dec
clc
or
ficomps
cmp
mov
or
push
les
pusha
and
mov
das
cltd
mov
jp
push
pop
lods
movsl
mov
jle
sbb
inc
cmc
add
in
xor
push
loopne
xlat
push
mov
dec
aas
sti
cmp
pop
xchg
aad
push
dec
clc
testb
jmp
xlat
loope
sahf
fs
mov
cmpsb
in
sub
sbb
jb
subb
fistl
and
fidivrs
sub
repnz
mov
enter
adc
ds
aaa
add
pushf
fwait
aad
inc
pushl
push
cmp
mov
jl
les
mov
pop
jecxz
cmpsb
pop
and
xchg
or
aam
mov
inc
shlb
push
data16
in
mov
jnp
sbb
sahf
je
or
mov
dec
xor
cli
pushf
shl
movsl
clc
xor
mov
push
push
jo
sub
lods
sub
mov
cmp
rcr
das
mov
jne
mov
in
pushf
mov
jns
shll
lock
das
js
in
insb
cmp
divl
mov
gs
repnz
repz
sbb
sbb
cmp
sub
pop
daa
pop
nop
jmp
test
in
xchg
pop
pop
mov
inc
adc
lret
inc
loop
icebp
adc
jl
push
mov
insb
mov
je
dec
hlt
inc
lret
js
repnz
pop
push
or
inc
dec
testl
sub
es
fs
xchg
dec
cmp
or
shll
mov
pop
movsb
add
push
inc
push
adc
call
cmpsl
mov
mov
xorb
xchg
xor
cmpsl
stos
and
mov
subl
fstl
loopne
jno
out
aas
add
fwait
stos
into
pop
out
jmp
or
repnz
outsb
xor
jecxz
adc
xchg
addr16
je
ds
xor
xor
inc
jecxz
pusha
stos
jl
or
mov
dec
sub
lret
add
fisubrl
inc
lds
cmp
movsl
fneni(8087
mov
or
lret
jns
pop
jecxz
cmp
mov
mov
push
sbb
mov
mov
mov
enter
push
cwtl
lds
dec
daa
aam
lods
xor
mov
int3
das
jl
sub
pop
jp
shl
jmp
aas
cmp
enter
outsl
daa
or
xor
fs
push
pop
pop
adc
cs
mov
push
push
pop
sti
sub
xor
mov
sarb
rcrl
popa
test
nop
and
adc
loop
or
mov
jecxz
das
adc
mov
xchg
jle
xchg
lods
clc
pop
sub
jle
mov
dec
sbb
push
loop
dec
ss
aaa
xor
or
hlt
cmc
mov
mov
pusha
std
mov
mov
sbb
fisttpl
int
lods
jnp
ss
movsl
and
push
push
pop
imul
mov
imul
and
loop
jns
xor
inc
dec
or
popf
lock
add
je
push
add
cmp
inc
loop
xchg
add
arpl
xor
cmpsb
mov
arpl
loope
mov
std
xor
jae
into
hlt
pushf
jno
je
lcall
nop
cld
or
inc
lock
lcall
xchg
rcr
inc
inc
and
cmp
or
adc
les
lret
call
adc
lods
cmpsl
gs
inc
imul
mov
sub
sub
test
xor
cmpsb
or
inc
cmp
xchg
jl
mov
add
jle
xchg
stc
das
mulb
inc
in
mov
lods
sbb
scas
scas
mov
inc
movl
arpl
ljmp
sbb
js
shlb
cwtl
rolb
xchg
ret
fdivr
popf
out
inc
mov
movsl
inc
lret
popf
xor
or
lret
loopne
js
xchg
subb
sub
cmpsl
cltd
repnz
cmpsl
jge
inc
dec
call
stos
dec
das
movsb
sbbb
cmpb
inc
lahf
repnz
pop
sar
mov
jg
outsl
fisttpll
std
out
in
push
int
rol
push
mov
lock
jle
mov
addr16
cltd
sub
and
insb
sbb
fdivl
dec
mov
xor
inc
mov
dec
in
pop
shll
mov
xor
jl
into
push
lock
pushf
insl
out
mov
cmp
roll
je
sbb
std
mov
sub
je
rcl
popa
rolb
xchg
jbe
lcall
mov
mov
out
xchg
repnz
scas
dec
mov
dec
and
lret
or
pop
hlt
pushf
test
xchg
inc
jnp
lea
cli
xor
xchg
dec
cwtl
sub
dec
mov
or
push
xchg
movsl
ja
aas
pop
add
out
inc
jnp
sbb
jb
mov
pop
add
cmp
pop
fidivl
fwait
rcl
jne
and
xor
fstpl
mov
mov
fisubs
daa
sbb
aad
outsl
movsb
inc
dec
stos
adc
sbb
push
stos
sbb
lds
push
and
loopne
or
ret
lea
push
push
imul
mov
jb
push
mov
pop
nop
mov
jmp
leave
inc
daa
jg
cmp
adc
mov
jle
fldl
ja
sahf
pusha
rorl
imul
dec
imul
in
test
push
xchg
cmp
xchg
sbb
mov
aas
rol
and
add
loopne
out
test
mov
test
jecxz
shll
stos
dec
fwait
inc
into
popf
pop
fdivrl
cmpb
test
push
loope
ret
push
inc
mov
test
or
xlat
mov
lea
lds
push
punpcklwd
sti
add
mov
insl
bound
sub
ja
lret
fsubs
jns
data16
dec
sub
xlat
jo
es
mov
aad
aas
xchg
hlt
shl
movsb
sahf
cltd
push
pop
cltd
rclb
inc
mov
int
push
dec
popf
fs
jle
sahf
jge
icebp
push
add
cmpsb
call
adc
stc
adc
mov
insl
or
popa
popa
xchg
and
and
mov
cmc
mov
mov
popf
push
sbbb
fdivrl
jge
dec
sub
or
sarb
or
push
arpl
hlt
cmc
into
xor
xchg
movsb
popf
add
call
push
push
add
or
sub
mov
or
imul
cmp
adc
mov
mov
incb
es
pop
xorl
xor
in
push
xor
mov
inc
push
lods
push
sbb
pop
dec
mov
arpl
popf
ret
dec
xchg
or
or
push
jecxz
movsl
fisubs
push
xor
lods
int3
mov
mov
sahf
popf
adc
aad
in
adc
lds
pushf
jae
jnp
sub
sub
and
inc
jmp
ss
jecxz
jg
rcr
andl
sbb
or
mov
scas
sub
insb
mov
dec
int
or
rorb
movl
es
out
xchg
mov
outsb
pop
or
ficomps
stc
pop
adc
sti
lahf
push
mov
mov
cmp
cmc
subb
enter
sbb
inc
lock
std
or
add
sbb
dec
mov
lods
or
into
lock
lock
popf
addr16
mov
xchg
mov
ja
jecxz
aas
lods
lret
insl
cmp
stc
add
jl
shrb
inc
in
lock
xchg
mov
adc
push
pop
dec
adc
jb
pop
fisttpl
dec
lcall
dec
ret
out
jge
jae
loop
mov
cmp
mov
xor
push
icebp
rcrl
lea
pushf
ror
js
jp
int
or
addr16
cmpl
xor
mov
gs
aam
mov
cld
cmp
mov
or
add
fistps
icebp
shrb
seto
adc
sti
gs
cmp
int3
push
push
mov
cmp
and
pop
stc
test
out
fstpt
dec
cs
lcall
aam
repz
push
mov
xor
dec
fxtract
sbb
pop
loop
pop
sub
xchg
xchg
stos
insb
jmp
frstor
cmp
inc
mov
ja
clc
imul
dec
popa
xchg
xlat
dec
xchg
mov
jl
imul
xchg
dec
mov
push
inc
addb
dec
icebp
adc
stc
xchg
out
lds
bound
out
mov
jns
sbb
imul
push
int
aad
add
pop
scas
sub
push
test
and
shlb
cmp
imul
mull
imul
sbb
frstor
dec
ljmp
cmp
pop
mov
int
addb
pop
imulb
stc
sub
adc
out
jecxz
fimull
add
pop
es
outsb
pushf
mov
dec
loopne
xlat
leave
stos
add
loope
ss
dec
test
xchg
pop
jno
jae
std
mov
iret
pop
mov
sub
jmp
je
mov
std
arpl
mov
icebp
aad
inc
icebp
mov
test
sti
inc
add
outsb
mov
call
outsl
cltd
mov
into
inc
scas
repnz
cmc
push
and
xor
lock
cmpb
sbb
imul
jnp
fldenv
pop
iret
jns
sbb
cmp
xchg
movsl
es
aam
test
cld
pushf
mov
in
push
sarb
push
xchg
pop
mov
adc
rcr
add
xor
xchg
sbb
add
xchg
inc
sbbb
or
mov
sub
sub
ret
and
ja
mov
mov
xor
mov
loop
je
mov
loope
or
dec
or
icebp
xor
cmp
mov
cmp
sub
pop
adc
fdivrp
pop
add
out
or
loope
xor
mov
xor
jmp
or
adc
jns
lahf
pop
xchg
rep
xor
adc
iret
and
push
out
cwtl
and
dec
popa
je
insl
mov
jns
fcoms
dec
sti
inc
ljmp
push
pop
add
push
in
mov
xchg
xchg
cmp
inc
sub
icebp
inc
mov
pop
popf
fwait
ss
fcomp
xchg
mov
aam
jle
int
call
cmp
fs
daa
bound
fs
movsb
cmp
inc
dec
push
das
cmc
mov
scas
lock
or
sub
insl
adc
xchg
add
imul
lcall
mov
cld
pop
xor
pop
pop
hlt
push
ret
repz
jl
push
ljmp
sahf
mov
scas
jnp
loop
jmp
leave
into
movb
push
out
sbb
ss
cmp
rolb
cmp
out
xor
lcall
scas
jp,pt
or
and
push
push
fdivrl
outsl
pushf
int3
nop
loopne
mov
leave
sbb
setle
dec
or
lds
push
pop
pop
fstps
cmp
cli
mov
jns
push
shlb
pop
push
idivl
arpl
xchg
sbb
dec
adc
mov
insb
in
sub
push
jmp
mov
test
sub
loopne
imul
adcb
rcrl
inc
lahf
add
pop
lret
flds
daa
pushf
xchg
adc
mul
cmpb
int
dec
gs
cmp
add
push
jns
aaa
sahf
std
lcall
aam
dec
pop
push
add
les
std
mov
dec
cmp
fimuls
cmpsb
xor
jns
lahf
aaa
or
lods
push
aam
movsl
cmpl
lret
and
or
mov
test
iret
pop
mov
ss
cmp
jg
xchg
adc
les
cmp
testb
jg
out
inc
loopne
xlat
flds
or
movsb
fwait
sub
or
ss
les
jl
mov
sbb
jae
push
outsb
subl
enter
loop
sbbb
pop
jl
mov
pop
pusha
xchg
lea
shll
pop
cmpsl
mov
iret
arpl
jle
mov
out
inc
sbb
xchg
cmpsb
mov
sbb
sbb
fwait
push
sub
sub
out
inc
cs
addl
jnp
lds
les
mov
jnp
sti
out
inc
js
mov
xchg
repz
mov
icebp
imul
push
addb
nop
int3
push
and
aas
pop
pop
int
into
dec
lret
cmp
fcmovnb
mov
mov
insb
jmp
jp
push
movsl
bnd
mov
popf
cmp
mov
bound
movsb
loope
xor
xor
inc
dec
aas
mov
or
mov
mov
xor
inc
xor
out
sub
or
fs
std
mov
push
xchg
cmc
mov
testb
rorb
inc
cmp
lods
push
in
loop
stc
pop
push
pop
sub
clc
fiadds
mov
cltd
pop
cmpsl
shlb
scas
orb
faddl
cltd
mov
ds
push
push
daa
adc
cmp
mov
andb
dec
jecxz
test
add
dec
subl
sbb
sbb
sti
rcll
iret
adc
into
cmp
mov
lods
push
or
xor
fdivs
pop
insl
adc
sti
jmp
adc
dec
cmp
dec
xchg
mov
push
jmp
fsubr
jecxz
jo
outsl
mov
cmpsl
loop
mov
cltd
sub
loop
mov
mov
inc
shrb
push
mov
lods
es
js
aad
out
notl
jmp
jo
cmp
dec
push
mov
ret
xchg
dec
lock
mov
mov
stos
mov
fmulp
or
leave
dec
adc
mov
ljmp
inc
bound
push
rolb
shrb
bound
stos
arpl
or
add
inc
push
adc
out
fistps
push
scas
dec
push
xchg
in
sbbl
shrl
add
sarl
in
sub
push
add
mov
movsl
popf
popf
mov
stc
push
mov
mov
movsl
imul
pushf
sbb
sbb
aam
into
push
mov
outsl
lahf
lret
cmp
callw
adc
or
mov
dec
mov
push
test
shlb
das
jle
sub
lea
daa
xchg
inc
pop
add
aaa
xlat
es
mov
faddl
jb
mov
inc
fdivrp
pusha
ds
dec
xchg
popa
add
shl
lds
in
adc
pusha
cmpsb
movsl
lahf
push
sahf
pop
push
scas
add
add
push
stc
aas
stc
sub
adc
xchg
sub
ret
mov
inc
stos
jns
js
adc
movsb
dec
jle
mov
fmuls
or
xchg
xchg
push
jmp
outsb
call
ljmp
jl
adc
sti
xlat
mov
cmp
pop
xor
push
jge
xchg
negb
hlt
out
sub
mov
jg
int
xor
cli
jno
xor
fs
loop
mov
pusha
fwait
mov
xor
fsubp
repz
lcall
inc
push
jge
cmp
or
inc
mov
mov
pop
xor
push
jnp
stc
cmp
jno
dec
and
negl
es
xchg
pushf
testb
xor
les
insb
movsl
xor
dec
popf
mov
aad
imul
inc
jmp
loop
xchg
xchg
push
lock
push
popa
add
and
and
mov
dec
cmc
lret
loopne
mov
jge
negl
adc
mov
rorb
fs
call
dec
sahf
xchg
lods
inc
jae
xor
stos
push
sbb
test
stos
fmulp
dec
scas
je
sub
enter
mov
imul
hlt
dec
aad
mov
fisubl
jnp
outsb
outsb
int3
sub
ja
repnz
sti
push
fstps
addr16
dec
rcrb
pop
or
fs
sahf
enter
std
stc
je
mov
pop
idiv
mov
fwait
aaa
dec
cmp
fiaddl
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
jg
scas
jp
or
jp
mov
jb
push
in
pop
cmpsb
repnz
ficoms
jno
mov
cwtl
adc
mov
cltd
and
mov
xor
mov
out
jl
sbb
aam
cli
mov
adc
cltd
pop
dec
rcrb
les
gs
mov
mov
sub
sbb
adc
popf
jo
sub
cli
pop
mov
xchg
lahf
daa
sub
pop
push
dec
pusha
ja
jg
push
push
push
xchg
mov
addr16
lcall
inc
inc
jle
pop
nop
testb
jmp
mov
lds
out
scas
fsub
mov
dec
and
xchg
jmp
and
xchg
jle
mov
mov
xchg
inc
pop
pop
xchg
lock
sbb
fstpl
add
jb
data16
mov
pop
lds
and
fldt
dec
adc
adc
stos
ljmp
lock
sub
es
lds
adc
std
adc
sub
fisttpll
sbb
xchg
les
into
dec
mov
stos
pop
adc
cmc
jle
sub
mov
jmp
cmp
pushf
mov
std
mov
int3
data16
test
inc
jle
fisttpll
xchg
aas
out
insb
adc
ret
loopne
es
cmp
test
sub
xor
xor
inc
js
test
or
push
imul
mov
cmp
stc
jecxz
inc
push
sub
cmp
push
ror
xor
aam
fwait
mov
mov
push
pushf
add
test
push
sbb
mov
dec
xor
sar
stc
scas
xchg
bound
pop
mov
jg
pop
lods
xchg
or
cmp
and
mov
testb
lret
in
out
stos
in
call
mov
ljmp
in
inc
jnp
test
adc
dec
and
xor
bound
jne
jmp
ja
aam
in
aad
je
and
cmpsl
mov
mov
test
inc
out
dec
test
mov
icebp
xchg
call
xlat
repz
rcrb
lods
push
push
sub
cmp
es
notb
daa
ds
push
lods
leave
adc
pushf
pop
mov
aas
xchg
lods
adc
mov
roll
mov
xor
int
sbbl
cmp
imul
repnz
repnz
jge
outsb
inc
mov
mov
imul
cwtl
enter
mov
inc
jl
mov
inc
inc
and
dec
adc
cmpsl
ret
cmp
mov
lods
mov
inc
pop
xchg
std
xchg
xor
push
aad
shrb
jge
inc
push
inc
jmp
outsl
sbb
rorl
jle
jo
jns
sub
orb
out
sahf
push
xchg
xor
jecxz
pop
cli
cltd
out
adc
popf
daa
inc
pop
jmp
inc
loop
rorb
jle
lahf
mov
shrl
stos
mov
pop
add
ljmp
fs
jae
mov
or
pop
cmp
cs
mov
adcb
dec
movsl
push
pop
mov
into
rclb
push
pop
push
sahf
sub
pop
or
lods
adc
test
cld
and
mov
push
ficomps
enter
inc
sti
mov
cmp
mov
ret
xor
dec
cmp
push
push
stos
loope
scas
or
ljmp
clc
aad
xchg
cmp
lret
addb
cmp
stos
mov
push
xlat
imul
out
push
and
push
push
scas
pop
loope
js
inc
push
xlat
mov
adc
cld
jbe
fisttps
sub
loop
imul
lock
mov
mov
xlat
adc
out
inc
mov
lods
icebp
push
into
jne
mov
xor
sbb
fldcw
subl
sbb
jnp
push
and
aam
mov
mov
mov
dec
test
cltd
lea
or
cmp
cmp
leave
cltd
dec
std
mulb
clc
pop
mov
mov
faddl
dec
mov
ret
mov
mov
popf
push
data16
cmp
add
sbb
and
sub
mov
or
lds
test
out
pop
scas
push
jge
mov
or
adc
push
or
fmulp
jbe
sbb
gs
pop
pop
add
xor
mov
add
xchg
enter
enter
lods
mov
popf
mov
ret
jnp
lods
sub
lds
in
jp
lea
xchg
mov
adc
int3
jmp
adc
sub
out
cld
ljmp
pop
xor
lods
into
jmp
jno
lock
ret
adc
nop
add
add
call
xor
xchg
xor
mov
or
or
xor
mov
aas
pop
cmp
inc
cld
out
cmp
lods
pop
std
add
insb
arpl
imul
es
cwtl
mov
getsec
xchg
push
jb
loopne
shr
js
in
mov
jno
jnp
outsl
xchg
and
dec
out
gs
sbb
mov
imul
jmp
push
mov
sti
dec
outsl
repz
or
cli
push
les
addr16
imul
pushf
sbb
shl
fstps
out
adc
cmp
bound
data16
mov
stos
jp
jnp
sarb
mov
jns
adcb
out
stc
pop
shll
push
lahf
in
stos
xor
inc
shrl
inc
pusha
xor
movsl
adc
insl
dec
fmul
sub
dec
test
hlt
fldenv
adc
fistl
adc
and
imull
icebp
test
push
jb
pusha
daa
lcall
xor
leave
dec
jb
aam
popa
xchg
imulb
jns
or
daa
lahf
sub
xor
repz
arpl
mov
jno
xchg
lahf
in
or
xor
cmpsb
sbb
in
add
sub
sub
mov
inc
push
adc
mov
jnp
outsb
jg
je
inc
pop
mov
in
fdivl
sbb
test
std
and
fcomip
cmp
xchg
call
ss
ja
and
mov
js
lcall
and
shld
or
aad
test
lcall
push
jecxz
daa
popa
jno
or
push
nop
sarl
daa
cmp
inc
xor
in
fidivl
add
inc
cli
jg
dec
movsl
addr16
fwait
mov
pop
xchg
push
add
adc
adc
outsl
adc
cmc
fcmovnu
icebp
stos
icebp
xor
lods
mov
mov
pop
pop
xor
xchg
cld
in
ss
mov
cmp
cmpsl
insb
es
ljmp
push
mov
imul
inc
rorb
or
roll
pop
xchg
jmp
inc
ret
in
daa
or
and
idivb
inc
mov
mov
sti
hlt
sub
lds
sub
aad
xor
loopne
push
jb
arpl
stc
dec
adc
inc
mov
in
or
push
enter
jg
dec
mov
aas
insb
adc
lock
out
shll
js
xchg
jg
rsm
and
cmpl
lahf
push
fistpl
mov
mov
jge
sub
and
and
mov
jmp
je
or
add
or
jmp
jbe
adc
and
mul
into
nop
nop
push
push
pop
outsl
mov
cmp
mov
orl
bsr
cmp
in
sub
xor
dec
popa
aam
mov
leave
aaa
scas
ret
insl
inc
mul
lock
xor
mov
and
aaa
cmp
sbb
push
mov
outsb
imul
push
add
fwait
push
dec
jp
imul
pop
addb
inc
pop
dec
cltd
lock
cmp
std
into
fldcw
or
or
out
sbb
lret
adc
dec
mov
cmpsl
and
aaa
je
add
xchg
popf
test
push
jp
stos
js
lcall
repz
and
imul
fbstp
mov
mov
cmpsb
mov
rorl
cmpb
sbb
mov
daa
icebp
aam
and
inc
or
dec
rclb
add
and
and
or
adc
test
cmpsb
or
lea
ljmp
inc
iret
dec
fiaddl
and
adc
fcompl
jp
pop
xor
inc
mov
in
add
nop
mov
adcb
nop
dec
push
int
gs
and
inc
inc
adc
xor
push
fisttpll
jmp
add
jo
int
out
or
push
xor
lret
push
jnp
repz
cwtl
mov
ret
sub
sbb
mov
aad
mov
dec
sahf
les
pop
loop
ljmp
lret
movsl
loopne
mov
shll
fstpl
lods
fists
sbb
or
inc
cmp
in
out
jno
push
or
jmp
lea
fst
fstpt
inc
aad
movsl
or
into
or
add
sbb
mov
push
insb
jecxz
mov
mov
fwait
push
jne
push
adc
mov
xchg
inc
clc
add
js
add
lret
push
mov
sbb
inc
push
jg
sub
sub
pusha
fwait
in
in
adc
in
mov
inc
xor
call
cmovle
dec
cmp
js
inc
imul
inc
sarb
pop
push
mov
mov
mov
cli
inc
scas
sub
ja
ret
sbb
dec
jge
fcmovbe
stc
daa
push
lods
ret
inc
or
pop
adc
imul
push
mov
xlat
ds
jge
push
je
xchg
mov
pop
fwait
mov
adc
pop
das
push
push
cmp
push
adc
mov
pop
into
stc
std
jl
and
das
dec
push
cwtl
mov
mov
leave
cltd
inc
or
cmp
lret
xor
jg
out
pop
or
cltd
push
rcrl
shll
push
fucomip
xor
add
jb
mov
addl
dec
fbstp
mov
and
mov
pushf
icebp
add
es
inc
pop
mov
cmpps
ficompl
arpl
and
int
mov
jno
cmpsb
or
cmp
nop
ds
in
cmp
mov
dec
cmpb
clc
mov
mov
xor
loope
xor
pusha
xchg
adc
ljmp
loopne
es
int3
push
add
mov
nop
push
inc
rolb
adc
scas
mov
imul
ljmp
pop
sbb
xor
xor
inc
push
pop
fs
mov
aam
fsts
dec
dec
add
popf
inc
adc
and
inc
fists
sbb
scas
sbb
adc
sub
cld
xor
xchg
lcall
sbb
mov
lahf
or
jae
and
mov
adc
pushw
mov
inc
or
mov
jge
hlt
and
mov
inc
xchg
icebp
mov
jns
dec
stc
adc
aaa
and
jno
gs
test
mov
mov
outsl
mov
sub
popf
mov
xchg
lret
outsb
xor
push
cmp
mov
add
cmp
lods
sahf
sti
repz
jl
sarl
push
ja
cmp
or
mov
je
ficompl
push
xchg
inc
ds
in
push
xchg
imul
fdiv
imul
out
cmp
ret
in
pop
cmp
in
mov
movsb
aas
call
fsubs
cmp
cmp
cs
or
dec
scas
mov
cmpsb
xchg
mov
mov
push
pushf
jbe
fidivrl
sbb
test
mov
addr16
or
and
sbb
gs
mov
pushf
test
push
push
lods
mov
loop
rorb
test
insl
push
scas
clc
mov
pop
lods
iret
push
lahf
cltd
pop
addb
sbb
cwtl
xacquire
inc
jne
push
adc
cmpl
fadd
test
pop
or
test
cmpsl
push
sbb
xchg
aad
cmpsb
ss
jle
ss
and
stos
push
xchg
cld
movsl
sub
inc
lcall
aaa
mov
lmsw
jge
add
ret
pop
cmp
inc
test
fisubs
mov
inc
shlb
push
fwait
or
push
mov
xor
inc
add
orb
ljmp
popf
icebp
popf
mov
lea
mov
out
fsts
imul
nop
pop
fadds
cmp
outsb
loope
dec
push
test
dec
cmp
add
lahf
lods
sub
add
inc
xor
push
mov
xlat
shll
cmp
push
data16
leave
xchg
movsb
test
pop
cli
sub
push
test
sub
sbb
mov
in
push
push
mov
xor
fs
ja
dec
push
push
add
mov
pop
fnsave
int
fbld
mov
dec
in
cs
xchg
hlt
lods
add
push
imul
stos
and
jo
js
test
sub
test
stos
adc
imul
lcall
test
sub
xor
cmp
inc
mov
jle
dec
and
mov
rol
mov
xlat
push
jbe
push
out
xor
xor
ret
js
test
es
add
lcall
and
je
sub
leave
mov
lea
cli
cmpb
icebp
and
xor
decl
sbb
adcl
mov
cmpsb
je
xchg
repz
xchg
in
stos
and
test
out
test
popf
and
shl
push
cltd
pop
mov
dec
in
xor
fidivl
dec
gs
adc
shrl
jnp
mov
pop
gs
in
das
cmp
add
adc
out
mov
xchg
enter
mov
pop
cmp
jnp
cli
sahf
adc
inc
xchg
jle
ret
test
adcb
out
lcall
or
lret
xchg
mov
mov
push
ret
lods
pop
dec
mov
imul
stos
gs
das
rorb
imul
nop
pop
es
xchg
xor
adcb
mov
clc
cmp
xchg
inc
xchg
fcom
stos
lcall
pusha
xor
dec
sbb
nop
inc
and
inc
hlt
mov
sbb
sbb
std
mov
fldcw
push
sbb
out
xchg
sub
pop
test
call
stos
fsubrs
xor
pop
lea
stc
faddl
fildl
mov
or
push
dec
jmp
arpl
and
test
add
xchg
sub
pop
lcall
sub
aad
or
mov
pop
inc
sti
ret
ficomps
mov
rorl
inc
movsb
es
shlb
mov
dec
dec
sub
dec
sub
jg
pop
adcb
jne
cwtl
aas
push
pop
aas
jns
sbb
leave
adc
mov
orl
cmpsb
das
fsubrp
jno
pop
dec
movsb
push
xchg
jecxz
in
cmc
inc
cmpsl
push
mov
inc
pop
mov
jp
dec
mov
sti
cmpsl
sbb
xor
insb
pop
jl
cwtl
xchg
movsb
inc
in
sbb
adc
xchg
cmp
and
or
jb
and
out
stos
fildll
xchg
sub
outsl
inc
and
cwtl
test
cmp
mov
or
or
loop
int
dec
mov
xchg
in
imul
test
lcall
inc
out
mov
stos
pop
hlt
mov
push
in
xchg
stos
and
adc
push
test
add
push
mov
in
mov
and
xchg
fwait
mov
or
add
inc
pushf
aam
negl
sbb
xchg
aaa
sbb
sub
add
pop
ja
scas
lock
insl
ret
outsl
mov
into
scas
xchg
insb
adc
in
loopne
add
mov
add
call
leave
je
cmp
jae
pop
xor
subb
pushf
mov
test
nop
xor
adc
xor
sub
cld
xchg
xchg
cmp
mov
lcall
mov
push
fsubr
lods
stos
pushf
xchg
lods
fwait
mov
loope
xor
mov
and
add
cltd
or
aam
or
cmp
cltd
popf
jae
ds
and
lret
mov
int3
pop
cmc
stc
bound
and
into
ljmp
mov
inc
mov
sahf
cli
pop
jle
push
cld
cmpsl
ret
pusha
imul
dec
push
and
lods
cmp
fadds
xchg
push
cs
push
push
cld
ficoms
xor
sbb
lret
push
jb
repnz
add
mov
mov
cmp
pop
in
add
xor
cmc
nop
daa
in
push
subb
push
pop
cld
sub
mull
fs
push
add
xchg
add
cmp
testb
test
loop
lods
jle
leave
stc
repz
cmpsb
xchg
pop
mov
test
insb
sbb
jnp
cmp
es
test
sbb
mov
jbe
add
push
sub
pushf
cmpsb
cmp
xchg
arpl
stos
ja
push
sbbl
xchg
push
in
xor
and
out
pop
test
lock
pop
xchg
cld
or
aas
cmpsb
es
imul
pop
sub
mov
pusha
cltd
insb
ljmp
sub
pop
or
sub
divl
ss
jle
mov
add
lcall
xorl
addr16
jecxz
pop
sbb
aaa
popl
es
or
aaa
cmp
mov
movsb
jl
call
jnp
cs
out
dec
fcmovbe
mov
push
jbe
bound
mov
repnz
js
jmp
cmp
out
sbb
loope
inc
sub
cltd
sti
and
pop
std
jmp
cmp
cmpsl
jg
xchg
cs
dec
stos
lret
dec
cltd
bound
out
xor
mov
jae
sub
sub
jns
jno
test
or
push
mov
xchg
or
hlt
dec
call
pop
adc
xchg
mov
into
stc
xchg
into
mov
mov
dec
dec
loope
inc
or
addr16
and
roll
push
mov
ret
jl
ret
rcl
mov
sahf
mov
inc
or
or
mov
ret
aam
mov
shl
jbe
in
or
shr
mov
sub
cmp
jmp
lds
mov
mov
sbb
bound
aas
and
cmpsl
pop
gs
or
xchg
cwtl
lcall
sub
iret
lds
sbb
dec
pop
sbb
mov
xlat
mov
mov
xchg
jne
pusha
ss
mov
nop
add
movsb
arpl
xchg
sub
xchg
iret
rcll
insb
mov
lcall
sbb
sbb
nop
lcall
test
and
push
cmp
repnz
call
pop
lods
xchg
pop
loop
sub
ljmp
out
sbb
fisubrl
adc
loopne
sarl
js
jmp
adc
test
cwtl
mov
push
jg
mov
jecxz
sub
jae
lahf
shll
idiv
mov
xchg
or
es
pop
cmpsb
jp
aad
add
or
lds
mov
icebp
cs
push
adc
adc
out
mov
int3
in
jno
ficoml
mov
mov
jecxz
mov
pop
cmpsl
je
shlb
shl
mov
test
mov
test
test
rolb
adc
insb
push
mov
sbb
popl
iret
scas
or
rorb
jge
insl
int
pop
and
dec
inc
dec
sahf
fistps
popa
leave
iret
add
xor
cmpsb
out
inc
xlat
mov
arpl
cmpsl
mov
push
imul
roll
mov
jle
xor
in
mov
stc
stos
outsb
dec
popf
cmc
fs
pop
inc
cmp
push
pop
dec
sbb
test
mov
ja
mov
arpl
mov
push
dec
mov
lahf
in
stc
push
in
inc
stos
cmc
daa
sti
mov
mov
cmp
jbe
mov
ljmp
mov
faddp
and
push
xchg
dec
fwait
mov
mov
mov
mov
pop
je
xor
adc
pop
insb
inc
lret
push
insb
ret
repnz
fcomps
mov
jge
mov
or
sarb
and
inc
mov
mov
push
mov
cs
xchg
or
clc
stos
lods
std
mov
push
ja
dec
les
xorb
divl
jne
out
xor
popa
dec
in
test
jmp
fstl
fiaddl
sbb
das
into
adc
mov
sbb
scas
jne
vmovdqu
xor
jae
inc
std
addr16
jns
fcoml
cli
pop
js
push
inc
sti
cmpsl
popa
ljmpw
jmp
repnz
push
mov
xor
iret
shll
sahf
sub
test
insb
sub
push
loopne
push
adc
hlt
dec
jl
sub
loop
xor
pop
cld
jecxz
cs
mov
hlt
or
or
pushw
scas
xorl
inc
dec
push
mov
dec
inc
bound
in
outsb
xor
jecxz
and
adc
push
add
and
pop
push
aas
aad
jp
je
decl
lret
sbb
js
fidivrl
or
cmp
add
jg
pop
jbe
mov
cld
ret
repnz
cmc
mov
mov
fsubrl
movb
imul
add
jno
andb
icebp
nop
ror
clc
sub
mov
jb
xchg
inc
xchg
shr
xchg
add
lahf
mov
repz
add
cltd
cltd
sbb
pop
adc
pop
into
mov
insl
pop
push
jecxz
insl
jnp
mov
mov
mov
int3
mul
test
jge
jmp
lods
lret
sub
jmp
das
adc
cmpb
lods
or
pusha
sub
lcall
enter
cmp
aas
inc
xlat
repz
in
mov
push
fisubrl
imul
pop
jg
mov
negb
enter
mov
loopne
shll
pop
jl
fcomip
fwait
lret
xor
gs
fsub
push
and
std
mov
dec
loop
xor
inc
sub
repnz
jnp
inc
dec
push
pushf
mov
adc
cmc
pop
fwait
into
js
xor
cmp
push
and
push
imul
nop
add
sub
nop
pusha
sbb
hlt
jecxz
mov
lock
out
lds
mov
mov
clc
inc
jne
pop
pushf
sbb
lret
ss
sbb
test
sub
push
mov
jp
aaa
sbb
pop
push
fistps
leave
inc
xchg
add
push
cwtl
push
mulb
push
inc
sub
mov
sbbb
psubusb
xchg
dec
or
loope
outsl
test
loopne
dec
pop
xchg
mov
imul
adc
test
sti
addl
mov
mov
cwtl
fdivrs
rcll
pop
sbb
add
xlat
imul
pop
mov
jp
ja
xor
popa
rorb
ja
push
push
iret
enter
pop
xchg
divl
aaa
insl
popf
xchg
add
jo
outsb
pop
in
pusha
aas
mov
fdivs
loope
int3
cltd
in
sub
mov
fnstcw
jnp
mov
cltd
inc
push
fnstsw
adc
jb
stos
repz
push
fdivl
pop
js
shr
out
cmp
add
jg
xchg
aam
xorb
sub
cwtl
loop
cmp
testl
rolb
inc
jg
rol
jae
push
pop
push
add
mov
or
push
roll
mov
pop
and
lar
jge
cmp
xchg
jne
andb
in
dec
lahf
iret
ss
in
icebp
jbe
into
loopne
loopne
mov
and
push
push
and
xlat
add
popa
adc
testl
pop
jle
ja
mov
incl
sbb
stc
test
push
popa
loope
shlb
mov
jmp
mov
jbe
sub
mov
and
rcrb
fucom
dec
sbb
pop
enter
scas
or
sahf
xor
mov
out
hlt
into
cmpsl
sbb
or
into
aam
outsl
xchg
add
inc
inc
cmp
sub
xchg
stc
lcall
andl
test
je
push
push
push
mov
adc
fdivrs
lret
out
mov
ret
mov
addr16
div
scas
pop
jns
shlb
and
mov
adc
cld
in
mov
lret
inc
test
inc
icebp
jg
and
das
sahf
jg
pushf
cltd
lods
subl
sub
or
inc
cmpsl
mov
outsl
jge
xor
adc
mov
lds
cs
xchg
pop
or
cmpsl
jg
sbb
hlt
mov
dec
shll
adc
push
mov
add
xchg
pop
hlt
sub
dec
cmp
iret
inc
and
jmp
lahf
rcl
and
aam
int3
push
lock
pusha
dec
xor
shlb
cmc
lret
add
pop
bswap
mov
xor
dec
xchg
or
lea
enter
test
jp
xchg
push
or
or
mov
ficomps
xchg
iret
outsb
xchg
jge
insb
sub
popf
scas
xor
fdivl
ja
jne
insb
jmp
jne
xor
mov
mov
push
cmp
sbb
inc
or
fcomps
pop
repnz
pop
mov
lcall
adc
jmp
aam
lods
and
push
neg
mov
hlt
mov
js
add
cs
dec
or
imul
cs
pop
inc
repnz
jle
lds
cmp
push
pop
je
ds
mov
mov
mov
stc
imul
mov
mov
and
outsb
xchg
repnz
fdivp
and
mov
pop
roll
jp
sbb
push
adc
aad
fistl
or
in
inc
inc
sub
stc
lret
icebp
leave
insb
inc
sub
iret
inc
inc
pop
ficoml
or
sbb
divl
call
sub
insb
hlt
mov
ret
inc
lret
mov
sbb
shlb
push
aad
or
cmp
imul
xchg
xor
sub
jno
std
mov
out
mov
enter
ret
and
mov
or
jo
ret
cwtl
pop
movsb
icebp
xchg
mov
aaa
fisttpll
mov
orb
and
arpl
jmp
dec
and
mov
in
les
subb
push
in
push
add
dec
int3
lcall
lods
cmpsb
xor
mov
outsl
jno
dec
sbb
mul
mov
or
jae
pop
add
inc
push
in
cmp
iret
int3
inc
push
bt
mov
xlat
out
out
out
dec
cli
dec
jbe
mov
pop
fcmovne
bound
and
rcrl
stc
dec
loope
pusha
neg
and
bound
aam
lret
pop
mov
mov
decl
xchg
scas
pop
fadd
pop
cld
leave
dec
mov
dec
jl
inc
sarl
ret
mov
popa
mov
adcb
push
xchg
adc
mov
dec
inc
icebp
or
fwait
pop
adc
std
test
in
imul
and
pop
cltd
or
jns
ret
push
xchg
into
outsl
push
or
fnstcw
int3
xor
xchg
stc
mov
ret
inc
xchg
fldcw
fwait
xor
notl
sbb
xor
inc
push
cld
fnstsw
stc
xchg
mov
cli
fs
jp
mov
rcrb
xchg
cld
imul
inc
lahf
add
ret
and
ja
push
cld
in
aam
rolb
repnz
sahf
ret
daa
mov
loopne
adc
int
push
fildll
mov
ret
pop
shll
mov
test
pushf
pushf
shrb
cltd
shl
mov
dec
roll
out
dec
inc
and
cmpsb
or
xor
or
lods
adc
and
xor
sub
push
adc
push
cmp
popf
movsl
sti
push
lods
mov
das
mov
loopne
rol
add
stos
xor
xchg
jmp
cld
xor
aaa
hlt
push
mov
ljmp
cwtl
jge
add
imul
ljmp
sbb
cmp
cwtl
lods
je
jnp
add
sti
dec
cltd
jb
mov
pop
mov
call
add
out
jns
out
mov
add
pop
mov
xor
in
sub
jno
repz
push
push
adc
aam
xchg
icebp
push
leave
out
shlb
jp
push
nop
fnstcw
add
das
fwait
xchg
in
loopne
repz
xor
xlat
loopne
ja
xchg
mov
mov
ffree
inc
loopne
mov
insb
or
sub
mov
pop
push
and
mov
jo
testl
int3
jns
sbb
arpl
mov
movsl
sub
es
dec
in
mov
inc
inc
leave
and
and
in
mov
pop
std
arpl
mov
jle
push
sti
out
mov
mov
inc
and
cmc
mov
or
je
or
mov
clc
dec
dec
ss
mov
pop
cltd
xor
cmp
aam
lea
cwtl
hlt
ret
in
pop
adc
sbb
inc
cmp
imul
data16
outsb
sbb
jo
and
sbb
in
push
push
in
int
jo
add
push
add
dec
pop
stos
lds
mov
enter
add
test
pusha
mov
je
test
in
and
scas
lods
and
ds
arpl
pop
cmc
shl
mov
pop
das
jns
fisubl
insl
int3
jae
mov
mov
add
ja
xlat
stos
into
xchg
and
xchg
lret
cmp
loopne
popa
gs
cmp
sub
popa
daa
sbb
movsl
hlt
les
and
sub
cmp
or
xchg
dec
and
fwait
rcrl
lods
sub
xchg
std
dec
sub
insb
xor
adc
cli
popf
icebp
lods
inc
xor
add
inc
mov
pop
push
push
int
push
add
int
cmp
pop
xchg
sbb
mov
out
adc
mov
add
dec
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
mov
xchg
pop
jp
mov
and
ja
adc
xor
push
loope
xchg
jg
dec
jmp
pop
pop
jno
mov
fbstp
jne
xchg
subb
sbb
and
inc
insb
out
xor
xor
out
sbb
sub
add
sbb
cld
je
test
mov
mov
mov
pusha
scas
fidivs
fistl
out
fists
pop
sub
test
jmp
fidivrl
pop
mov
in
cmp
dec
outsl
sub
dec
loopne
cmp
arpl
ficomps
cmc
aaa
adc
xor
imul
int
jle
xchg
push
push
test
and
test
dec
jno
inc
push
cli
mov
or
add
jb
mov
and
xchg
inc
loope
rorl
add
stc
out
mov
aaa
xchg
js
sub
fnstsw
das
out
add
push
inc
dec
lahf
test
sub
sbb
bound
fwait
pop
and
push
mov
insw
test
jns
xchg
inc
js
cwtl
inc
popf
mov
ret
out
add
pop
shl
pushf
or
dec
test
insb
out
xchg
dec
or
inc
push
aaa
add
xchg
mov
call
sub
add
or
sbbl
jmp
pop
cwtl
xor
lods
adc
shrl
shll
push
jbe
pop
loopne
fistl
fidivrl
mov
mov
pop
push
mov
fmull
fcomps
std
outsl
dec
xor
mov
lret
fisubrl
movsl
ljmp
nop
xlat
js
fists
push
xchg
mov
pop
xchg
into
push
in
addr16
rclb
insl
adc
jne
adc
mov
push
cmpsl
shll
sub
mov
repnz
push
jae
loope
aas
jg
jmp
loope
addr16
mov
dec
in
inc
filds
daa
rcrl
outsb
imul
dec
xchg
mov
insl
ss
mov
xchg
mov
mov
or
cwtl
cmp
clc
sbb
in
jne
or
inc
push
and
push
mov
fsts
clc
loop
adc
ss
cmpl
loop
repnz
test
sbbl
shll
inc
lea
mov
pop
cltd
mov
std
push
lahf
cmp
cmp
sub
pop
in
test
pop
xchg
lret
cmp
insb
aas
jnp
das
xor
mov
lea
scas
cmp
cli
or
repnz
push
inc
int
mov
add
add
push
mov
push
jbe
adc
mov
and
cmpsb
das
insl
cmp
rorb
fdivp
cmp
pop
xor
es
imul
cmp
fmuls
in
and
mov
lods
pop
stc
rorb
cmp
sub
fsubr
push
leave
lret
cli
mov
push
js
dec
jge
int3
push
dec
imul
jbe
add
dec
repnz
ret
ja
imul
lret
push
lret
enter
insl
or
mov
lret
scas
push
outsl
js
or
xchg
push
test
jge
adc
lods
sti
fdivs
stc
jecxz
test
mov
rcrl
push
pop
cltd
push
loope
fsub
xor
inc
adc
dec
sarb
stos
mov
inc
sub
dec
and
je
lcall
loopne
xor
jge
dec
pop
mov
js
das
fmuls
sub
call
sahf
sub
daa
or
mov
movsl
mov
in
mov
cltd
jns
add
push
sub
pop
scas
or
cmp
jo
int3
mov
fstl
xchg
lea
sti
fidivs
mov
fstl
sbb
fnstcw
push
dec
inc
cmp
out
sub
repz
imul
jmp
sub
out
pop
dec
or
popa
test
pop
add
aam
loopne
sbb
add
mov
adc
adc
push
repz
pop
mov
fst
fidivrs
bound
jns
fs
ds
mov
xchg
ljmp
ret
cmp
sub
inc
cli
fwait
xor
stc
sub
mov
std
fwait
mov
negb
out
jp
sbb
cmc
jnp
cld
mov
rorl
adc
test
je
push
lcall
pop
bound
pop
shrb
inc
addr16
lahf
jl
cwtl
cmp
loop
xor
fldenv
jb
xchg
sbb
add
mov
xor
ret
imul
ret
push
push
dec
and
icebp
sub
jl
jg
add
out
push
mov
pop
mov
aaa
lea
sbb
inc
es
push
lods
jns
maskmovq
idivl
loopne
rcr
push
pop
cltd
or
adc
cmp
pop
popa
dec
jecxz
jno
adc
mov
ljmp
repnz
inc
ja
push
adc
push
push
lds
push
repnz
sbb
jl
loop
js
popl
cmpsl
push
out
jmp
adc
jp
add
lods
mov
lahf
fwait
and
dec
cmc
iret
mov
enter
inc
xchg
inc
mov
dec
sub
outsl
out
add
shrl
sub
sbb
movsb
ret
aad
sbb
or
add
cmp
jecxz
shrl
xchg
sub
cltd
insb
lods
aas
xchg
push
xchg
pop
cld
sbb
push
in
cld
aaa
xchg
dec
push
cmpsb
xchg
dec
dec
cmpsl
xlat
cmp
push
cs
mov
sbb
xor
les
pop
mov
inc
push
jg
jb
bnd
inc
vmovhps
fcmovbe
sub
shl
movl
jae
sbb
jnp
mov
mov
je
and
stos
in
popf
or
fcomps
or
jg
add
pop
push
pop
or
aas
outsb
pop
popf
adc
cltd
pop
lret
xchg
adc
jae
loop
xor
or
addr16
dec
sbb
dec
inc
sbb
test
in
mov
stos
leave
icebp
add
push
sti
push
repz
int
xchg
aas
jb
and
push
or
jp
and
mov
popf
sub
or
idivb
pop
xor
je
push
data16
daa
dec
jno
jno
pxor
mov
repnz
lock
xor
lods
fistl
mov
xchg
jge
jno
shll
xchg
fdivrl
mov
xchg
mov
push
jecxz
and
mov
push
out
incb
movsl
adc
fucomi
mov
xchg
in
dec
cwtl
cmp
cltd
cli
xor
push
mov
pop
sub
scas
movsb
mov
jae
iret
pop
lods
mov
add
shll
mov
add
js
outsb
jno
or
enter
ss
xchg
xchg
inc
ja
scas
jbe
dec
or
dec
inc
lret
shll
nop
mov
dec
ror
mov
sub
out
sbb
jp
inc
lret
inc
cmpsb
jne
pop
mov
mov
or
cmp
jle
push
in
xor
mov
repnz
dec
in
iret
pop
sti
sbb
mov
stos
adc
and
sub
ret
jg
jbe
pop
adc
push
fs
add
inc
insl
sbb
bound
cmp
cld
aam
xor
add
sbb
sub
lods
push
int
cmp
xor
call
adc
dec
push
out
xchg
sub
jg
movsb
cmp
mov
push
jg
ret
adc
cmp
pop
out
xchg
enter
mov
shl
es
jmp
pop
push
pop
mov
jno
mov
or
xlat
cmp
push
fisubrl
pusha
pop
insb
cwtl
in
inc
loopne
in
push
dec
jne
inc
push
jbe
mov
scas
mov
xchg
ret
stos
add
add
inc
xchg
lods
mov
addr16
into
mov
mov
sbb
lea
ffree
ror
inc
scas
xchg
sub
lahf
lahf
and
fcmovu
adc
pop
stos
shll
adc
adc
pop
js
int
fidivrl
test
adc
xchg
xchg
sbb
int3
in
jle
cmpsl
pusha
leave
imul
sahf
adc
cld
lret
pop
jge
dec
into
or
repz
movsl
mov
mov
leave
rorl
mov
cmpl
jo
test
loop
fs
divl
inc
stos
push
daa
xor
push
call
mov
mov
jns
jmp
into
add
ficoms
gs
sub
add
mov
fucomip
jmp
js
xor
jg
xchg
je
mov
daa
push
push
xor
in
add
cmpsl
int3
sti
jp
or
repz
mov
aas
jb
movsl
mov
or
mov
sarb
dec
divl
xchg
xor
xchg
outsl
or
nop
pusha
mov
mov
in
lods
out
mov
adc
cmpsb
xchg
loope
add
fwait
xor
scas
inc
loopne
movsl
in
sub
sub
mov
inc
ljmp
sub
lods
xor
push
inc
dec
cmc
add
xor
xchg
xchg
sbb
popf
in
or
inc
mov
cwtl
in
mov
mov
xor
lahf
add
sti
repz
lret
divl
sbb
xchg
sar
xor
es
jb
movsl
cmp
insb
int
dec
aas
shll
fistps
xchg
icebp
movsl
aas
outsl
mov
das
mov
mov
and
pop
addr16
pop
or
bound
incl
jno
lea
add
and
jnp
loop
mov
and
xchg
pop
push
test
and
jge
les
cmp
fmul
mov
inc
lret
pop
inc
lcall
out
out
push
and
out
ljmp
adc
lahf
lods
lds
mov
sbb
cmpb
pop
xor
pop
mov
movsb
lret
mov
xchg
iret
jecxz
cmpsb
pop
mov
mov
js
aaa
scas
test
mov
out
add
adc
push
idivl
testb
rorl
and
mov
inc
pop
cld
dec
loopne
popf
mov
ds
lods
sbb
cmpsl
mov
mov
cmp
fbld
inc
imul
dec
lret
cltd
shrl
xchg
pop
mov
or
arpl
lods
roll
or
mov
jno
ja
aam
xchg
push
xchg
lock
sub
jmp
aad
mov
jle
xor
addr16
add
mov
push
xchg
mov
rcrl
add
into
cmc
sub
cmpsl
adc
xor
leave
enter
hlt
imul
cmp
pop
jb
and
mov
push
or
push
mov
cmp
xchg
cmp
pop
push
or
repz
push
or
clc
mov
lret
mov
mov
push
and
cld
rcrb
mov
imul
jmp
and
push
xorl
push
mov
fwait
jae
cmc
pand
mov
adc
cld
mov
mov
movsl
lds
repnz
in
pop
jo
cs
sbb
jmp
int3
imul
shll
outsl
mov
add
gs
cld
int3
mov
push
jno
dec
inc
js
rcll
adc
inc
insb
cmpsl
push
push
pop
jns
mov
dec
arpl
bound
push
add
cmpsl
mov
mov
sub
sub
aaa
cwtl
xor
leave
test
lods
sbb
clc
arpl
jp
loopne
repnz
cmc
sbb
scas
pop
pop
cltd
sub
jecxz
jcxz
cmpsb
xorl
mov
cmp
push
fistl
jl
pop
cmpsl
sarl
dec
es
cltd
les
cmpsb
mov
lahf
fmuls
popf
out
sbb
stos
dec
jbe
imul
mov
xchg
jp
xor
and
jns
pop
sub
mov
dec
insl
fwait
mov
pop
pop
cmp
cmp
fs
jo
xor
jnp
or
test
mov
mov
pop
jns
mov
clc
scas
jnp
mov
mov
xchg
mov
mov
jnp
add
cmp
jne
xor
and
and
xchg
push
fistps
je
js
fidivs
push
pop
insb
inc
adc
insb
inc
addl
cli
and
sbb
mov
inc
es
mov
mov
fidivl
push
sub
arpl
fs
hlt
pop
xor
sub
cmp
in
mov
jns
xchg
cli
stc
mov
mov
shrb
ss
mov
adc
and
pop
and
cmpsb
sar
test
or
lock
in
mov
mov
and
inc
imul
inc
repnz
repz
sub
lods
xchg
mov
mov
mov
insl
aaa
xchg
arpl
fs
adc
and
fimuls
movsb
testl
out
cmp
and
pop
repz
enter
mov
dec
test
xadd
shrl
ret
sbb
faddl
fwait
popf
roll
add
pcmpgtw
hlt
sub
mov
nop
scas
shr
andl
pushf
scas
adc
push
stos
std
in
sti
and
rolb
pop
loop,pt
jno
outsb
mov
and
scas
or
testb
add
pop
in
enter
rcl
cmp
mov
or
dec
sbb
and
je
prefetch
lret
test
fldl
and
arpl
adcb
pop
aaa
mov
adc
pop
sbb
inc
dec
cmpsb
in
ret
inc
sahf
jmp
jne
and
lods
sub
fisubs
icebp
ds
mov
pop
push
jnp
in
or
movsb
mov
pop
loope
xchg
and
shll
inc
cld
adc
sub
loopne
dec
insb
lods
loope
adc
xor
push
nop
ret
popf
sar
xchg
jmp
push
outsl
add
cmp
and
sbb
xchg
xchg
loope
hlt
stos
mov
jae
sbb
mov
jecxz
push
jns
bnd
arpl
popa
enter
or
mov
stos
and
sarl
inc
push
add
xchg
xor
push
dec
mov
lods
stos
iret
shrl
imul
cmp
jb
pop
push
rcrl
dec
mov
pop
ret
insl
mov
lods
jae
int3
shll
xchg
jge
xor
jae
xor
push
cmp
sub
js
outsl
ret
mov
enter
pop
mov
xor
imul
mov
lds
and
loope
ja
add
mov
jge
dec
mov
mov
int
xor
sbb
in
cmp
divl
inc
mov
lods
popa
jp
frstor
add
and
inc
mov
das
shlb
test
cltd
ljmp
out
mov
xchg
fstl
sbb
sub
sbb
clc
roll
lret
sbb
pop
sub
inc
or
pusha
and
addr16
dec
sbb
mov
inc
cwtl
xlat
aas
or
mov
popf
jne
mov
in
mov
xor
insl
mov
insb
fwait
sbb
mov
jmp
lods
mov
push
subb
sub
mov
in
xor
xchg
push
sbb
loop
cmp
cli
push
pusha
popa
adc
dec
cwtl
dec
xor
ficoms
out
add
addb
inc
lods
push
xchg
aas
repz
xchg
sub
or
hlt
test
sbb
or
or
xchg
or
mov
in
sarb
out
and
lahf
jl
or
jne
aas
push
pop
shll
ss
rcrb
push
lahf
out
inc
cmpl
ds
adc
jp
repnz
daa
cmp
fiaddl
icebp
cmc
push
shrl
and
lea
cwtl
cmpsb
xor
jle
jnp
xchg
test
or
stos
adc
js
in
testb
ret
fnclex
pop
fldenv
adc
popf
xlat
sti
mov
mov
jmp
call
insl
xchg
jns
and
stos
daa
popf
mov
cltd
popf
sub
mov
add
inc
mov
rcrb
bound
arpl
cmp
shrl
add
xchg
sub
enter
movsl
sbb
sbb
filds
jno
xor
lret
or
mov
or
sbb
rclb
fcmovnu
dec
mov
imul
sub
rclb
add
pop
cmp
cld
ljmp
pop
aad
cld
mov
stos
cltd
stc
adc
shrl
sub
scas
fwait
int3
das
add
scas
cmpsl
dec
rclb
add
leave
push
out
jmp
xchg
inc
outsl
jl
fldenv
ss
data16
mov
lods
lds
push
rcrb
sbb
bound
dec
lods
mov
push
push
aaa
loop
sub
fstpl
xorb
and
lods
pop
divb
cmp
cmp
ss
mov
inc
scas
or
fdivrp
cld
and
mov
and
xchg
fwait
stos
and
rolb
xor
sub
jne
mov
pop
stos
sub
seta
pop
mov
push
jne
pusha
jecxz
jne
mov
das
cmp
cmp
or
and
adc
aam
imul
fdivrs
adc
add
push
add
cwtl
clc
lods
in
decl
jg
mov
int
mov
adc
inc
or
rorb
jno
mov
cmp
mov
dec
pop
jno
mov
outsb
out
aas
in
xorb
jnp
push
or
cmpsl
xor
pop
arpl
xor
jno
sub
jecxz
test
in
std
dec
icebp
stc
iret
fwait
mov
cwtl
mov
jnp
or
out
stos
cwtl
test
out
sub
ss
in
and
dec
call
push
xchg
and
addr16
adc
pop
outsb
dec
jbe
xchg
out
inc
mov
xchg
jle
push
xchg
fcoml
add
xorl
sub
lods
xchg
pop
sbb
mov
imul
jecxz
cmc
add
mov
loop
adc
fdivrl
xor
xchg
xchg
jp
lcall
xchg
adc
fisubs
xchg
data16
push
mov
mov
jg
dec
pop
cmpsb
ss
fimull
movzwl
jnp
jne
out
push
adc
cmp
mov
jge
mov
loopne
cmp
dec
fiadds
rorl
stos
test
rolb
and
mov
inc
jg
xor
xchg
push
sub
jge
xor
bound
or
push
push
sbb
jbe
iret
inc
out
cltd
lds
fistpl
ds
scas
fisttpll
pushf
jae
fcmovne
rcll
or
mov
dec
loop
enter
push
lret
or
mov
xorl
and
or
out
push
cmp
std
xor
stos
jb
xchg
dec
in
arpl
push
adc
dec
fdivrl
and
ret
sbb
jecxz
jbe
nop
rcr
outsl
mov
xor
icebp
or
xchg
pop
inc
jecxz
test
dec
fwait
int3
mov
sbb
call
shrb
icebp
pop
cmp
in
mov
or
mov
inc
out
dec
push
or
dec
inc
or
das
mov
aam
cmc
fildll
adc
mov
push
in
movsl
pusha
ds
adc
xchg
mov
in
cmp
out
pop
push
nop
sub
push
push
loop
jnp
iret
xor
jge
inc
es
xchg
or
or
dec
outsl
fstps
insb
sub
mov
mov
dec
jle
in
push
cmpsb
mov
and
repz
mov
mov
inc
cmp
pop
pop
xchg
addr16
lahf
cld
and
inc
or
sub
xor
xchg
iret
fsubrl
fldl
sub
mov
int
out
inc
lret
sbb
into
cwtl
loopne
mov
mov
jl
setg
jecxz
lods
test
int
int3
lret
jno
dec
outsl
rol
xchg
icebp
add
lods
xlat
fcomip
sbb
cli
or
jns
subb
mov
sti
sbb
mov
mov
adc
lods
dec
sub
lret
pop
and
push
xor
shll
adc
mov
sti
xor
ja
lsl
mov
sbb
mov
mov
xchg
sub
ds
aas
loopne
cmc
xor
data16
aad
mov
in
adc
mov
push
push
or
lret
push
addb
mov
sub
cmp
popa
gs
push
dec
out
cmpsb
cmp
test
ljmp
xor
cmp
mov
call
mov
dec
scas
daa
daa
test
pop
xor
iret
int3
dec
mov
ja
and
xor
rorl
fnstsw
mov
fistl
push
mov
cld
push
xchg
jbe
jle
aad
mov
jnp
or
cmp
les
jns
daa
sub
das
test
adc
into
dec
mov
dec
inc
ss
push
shll
push
mov
lds
ret
mov
lods
test
aaa
outsl
loop
push
push
sub
sbb
das
inc
pop
cltd
push
cmc
enter
ret
into
in
lods
add
pop
repnz
fs
adc
mov
adc
jno
jg
test
xchg
push
pop
fstpt
inc
mov
cs
mov
aaa
sub
jp
mov
icebp
jae
lret
dec
jecxz
loop
sub
add
popa
scas
push
xor
pop
mov
stos
pop
ds
popf
idiv
mov
pusha
xlat
sub
rol
call
inc
xor
pusha
xchg
sbb
dec
dec
sahf
push
lcall
mov
jecxz
dec
or
jns
sbb
or
sbb
cwtl
outsl
fisttps
lret
add
std
mov
test
or
mov
call
mov
adc
lds
xlat
pusha
mov
hlt
shlb
adc
das
xor
test
insl
sub
psubd
inc
aad
inc
out
rolb
fwait
gs
pop
jno
inc
adc
push
mov
pop
push
orl
negb
filds
lods
xor
add
xchg
dec
adc
mov
pop
cmp
and
movsl
pop
lods
test
pushf
adc
bound
cmp
loope
repnz
mov
outsl
and
leave
scas
dec
sbb
and
test
pop
mov
cmp
push
fistpl
push
cmp
jo
jnp
into
test
setne
and
xchg
mov
sub
jns
pop
push
loop
std
or
int
sub
les
pusha
mov
mov
aas
xchg
and
jb
aaa
stos
pop
inc
jp
test
and
push
icebp
bound
faddp
daa
mov
dec
mov
mov
jg
repnz
jne
and
fxch
arpl
sbb
cs
jne
add
in
enter
gs
pop
inc
xchg
cli
sub
inc
mov
ss
add
sarb
pop
push
js
push
mov
sub
mov
cltd
fs
enter
pop
add
or
scas
arpl
out
mov
in
lret
add
jp
mov
hlt
push
lods
or
les
pop
andb
test
or
pop
int
outsl
jne
mov
pop
cmp
fwait
stos
mov
sti
popf
add
and
and
ficoms
faddl
popa
push
pop
push
sbb
jnp
xchg
or
adc
jnp
fimuls
lods
ficoms
sub
cmp
sbb
sub
xchg
and
jo
adc
mov
popa
repnz
sub
and
aam
stc
adc
cmpsb
in
sar
xor
scas
sbb
sbb
push
js
es
js
ds
sub
stos
roll
lods
jo
aaa
pop
sbb
call
inc
out
cmpsl
in
xchg
stos
or
test
repnz
std
mov
pushf
push
adc
adc
push
cltd
std
add
or
rcll
lret
xor
enter
and
xchg
inc
inc
inc
sbbb
icebp
gs
pop
lock
sub
jg
jl
pop
sub
dec
shll
adc
lods
fsubs
dec
nop
lods
pop
lret
sub
sbb
aad
in
cs
cmpb
jmp
into
xor
arpl
fstpt
loop
cmpsl
in
bound
or
imul
adc
adc
addr16
loope
adc
enter
mov
inc
sbb
xchg
push
das
ss
repnz
stos
add
jp
test
insb
test
mov
notl
fsqrt
add
ficomps
andl
bound
aaa
test
cmpsl
in
fs
push
loopne
outsl
mov
xchg
cmpsb
je
dec
jecxz
jne
aad
mov
xor
mov
movsb
test
xchg
mov
shrb
shll
mov
imul
ficomps
sbb
adc
jle
and
scas
movsb
mov
cli
or
xor
ss
push
mov
fiadds
sbb
jae
jnp
sbb
das
lods
in
test
jo
adc
sub
test
insl
in
jae
enter
je
cmp
or
fists
pop
fcompl
jo
scas
ds
in
lods
shr
mov
ljmp
stc
mov
mov
mov
mov
daa
lahf
dec
xchg
xchg
ja
popa
fstpt
ret
mov
popa
lea
pusha
dec
mov
iret
jg
out
imulb
add
push
or
cmc
dec
daa
xchg
in
outsb
arpl
jl
dec
imul
cmp
jnp
jno
cmpsl
ja
push
ficoml
test
int
repz
aas
push
scas
pop
test
aas
mov
pop
xor
nop
int3
cmp
enter
repnz
pop
imul
pop
fcmovnu
ficomps
shlb
mov
inc
sub
dec
pop
mov
or
aas
pop
les
mov
jne
pushf
fidivrs
pusha
mov
sub
mov
mov
pushf
int
fs
mov
add
movsb
mov
dec
call
in
jge
cmp
shr
adcl
jp
std
test
ficoml
cmc
aam
fbstp
loope
cmp
mov
cmpb
popf
cmp
and
lods
pop
sub
mov
sub
call
mov
sub
mov
xor
out
das
inc
imul
lret
repnz
cld
cmp
fwait
or
and
loopne
stos
dec
cmp
bound
push
std
cmc
test
bound
dec
lock
xchg
push
mov
or
jae
fmuls
jnp
and
in
cmpsl
xor
cli
jno
push
in
enter
popa
scas
popa
subl
stos
js
ret
jb
ds
stos
adc
fcmovu
outsl
pop
push
mov
out
push
dec
in
test
sbb
pop
arpl
mov
cmpsl
pop
mov
lock
incl
xor
jns
scas
jecxz
sbb
lret
jecxz
cmp
jecxz
jnp
repz
add
fs
mov
sub
or
jo
and
cmp
rorl
dec
push
or
clc
push
sbb
fs
jg
xchg
inc
and
pop
sbb
fisubrs
je
loopne
cmp
stc
orl
mov
push
jmp
in
mov
movsb
adc
mov
stc
sub
pop
lcall
sti
jo
push
dec
adc
add
add
pop
add
sarl
fwait
jmp
add
pop
pop
mov
mov
pop
dec
push
and
int
jge
sbb
add
bound
loop
aam
rorb
dec
dec
push
push
mov
jb
sarl
lret
nop
cmpsb
mov
stos
hlt
mov
notb
mov
mov
mov
cmpl
or
into
mov
popa
push
xchg
sbb
imul
mov
mov
enter
fisubs
mov
xchg
ja
in
cmp
add
sarb
cmp
dec
jmp
test
xchg
sub
sub
xchg
inc
aaa
in
std
dec
sbb
jle
xor
das
mov
aad
mov
adc
popf
pushf
push
push
inc
mov
and
inc
mov
daa
int
sub
jg
cmp
dec
stc
es
das
adc
adc
adc
mov
hlt
in
jb
imul
sti
xchg
push
std
cmc
push
or
xorl
add
pop
mov
loopne
test
orl
outsb
fxtract
mov
jg
outsb
repz
stos
out
jae
ret
push
gs
cmp
fldenv
push
inc
sbbl
or
dec
lret
add
mov
add
setge
test
iret
and
shll
f2xm1
cmpsb
and
popf
jb
pusha
mov
mov
add
mov
mov
add
and
xor
mov
pop
loope
and
cmp
ret
aam
mov
daa
loope
xor
xor
in
outsl
sti
dec
cld
mov
add
jo
mov
pop
jmp
mov
jb
xchg
in
arpl
xor
pop
mov
mov
mov
add
lcall
xchg
push
sbbl
leave
push
inc
subb
das
mov
cltd
add
addr16
scas
mov
scas
addr16
int3
call
out
enter
jb
add
mov
in
mov
jbe
hlt
inc
outsl
sti
sarb
lods
push
fwait
stc
andl
test
lret
dec
std
jmp
movsb
dec
mov
push
loopne
add
cmp
aad
std
stos
mov
lock
jno
mov
loopne
enter
dec
push
jmp
ds
shll
jle
sub
push
xorb
insl
out
mov
es
outsb
or
std
stc
pcmpeqd
adc
mov
scas
xor
xor
push
dec
das
adc
jo
les
fcom
out
in
arpl
out
loope
push
xor
xchg
loopne
ja
fdivl
sti
cmp
mov
cli
jmp
call
fisubl
pop
in
mov
repnz
dec
dec
sbb
sbb
cmpsl
popa
xchg
scas
fs
sbb
push
mull
dec
rcl
out
adcb
nop
out
inc
cmpsl
lods
outsl
jecxz
test
push
cmp
jp
add
push
mov
arpl
in
rorb
inc
lods
push
xor
cmp
repz
notb
xor
mov
jl
push
pusha
mov
add
push
add
push
mov
outsb
inc
pop
test
sbb
adc
fs
fdiv
aas
xchg
mov
mov
mov
jecxz
mov
inc
ljmp
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
xchg
mov
push
jge
or
jp
in
push
cmc
xchg
ret
leave
sbb
inc
add
std
jg
and
xchg
mov
fwait
dec
push
mov
sub
sub
imul
popf
and
adc
jecxz
scas
mov
out
mov
mov
inc
sbb
into
es
cmp
gs
rclb
push
dec
jb
and
add
scas
outsb
stos
cmpsb
cmp
jmp
sub
pusha
xor
add
addl
pop
fneni(8087
cmp
inc
mov
stos
mov
sar
lahf
call
xchg
push
lcall
lcall
dec
xchg
push
push
dec
sub
ljmp
cmp
dec
nop
sub
or
and
insb
inc
imul
out
and
in
repz
scas
pop
mov
push
mov
mov
fldt
jo,pn
mov
push
js
fdivrl
lods
cmpsb
xor
test
pop
arpl
pop
imul
and
loopne
icebp
lret
in
fldenv
xor
inc
insl
jge
js
loop
lds
jmp
sub
jmp
icebp
push
push
push
jae
in
out
in
pop
mov
not
sbb
lahf
hlt
add
mov
stos
das
xlat
loope
divl
sbb
fdecstp
jmp
les
cmpsl
inc
fstpl
jnp
daa
arpl
iret
push
lock
mov
xlat
pushf
lods
mov
out
out
or
ljmp
jecxz
das
push
push
test
ds
mov
and
xor
mov
repnz
ja
jne
sbb
idivl
pop
movsl
dec
sub
and
fdivl
mov
lret
fcmovbe
loop
into
or
mov
in
test
add
fistps
cld
jmp
push
lahf
xchg
jae
subb
mov
adc
xor
pusha
ret
pop
mov
mov
fs
arpl
ljmp
sbb
insb
push
jmp
adcl
adc
ret
jbe
lea
cmp
icebp
cmpsb
repz
and
cli
in
mov
in
jge
fbstp
dec
rcr
dec
adc
mov
cwtl
movsl
mov
lret
fbld
push
addr16
inc
popa
in
jg
popf
les
enter
icebp
in
aam
ja
ja
gs
in
or
add
xor
adc
jae
add
dec
sete
stos
sub
fs
adc
lea
lea
sahf
jl
sbb
mov
adc
xchg
mov
fwait
push
sub
mov
sti
aam
jge
jnp
hlt
mov
test
sti
pop
jns
add
xchg
jp
push
mov
data16
xchg
add
mov
nop
stos
outsb
popf
inc
sti
or
add
mov
or
jbe
pop
mov
cmpb
hlt
cmp
pushl
adc
orb
sbb
push
je
xchg
xchg
mov
adc
mov
repnz
sub
dec
and
repz
or
sbb
lcall
fiadds
xchg
test
es
jae
push
mov
movb
xor
xlat
pop
cmp
pop
sub
mov
jns
call
lea
mov
jmp
in
xor
push
repz
stc
pusha
dec
sub
jle
mov
xor
aam
loopne
in
enter
add
jp
mov
fidivrs
sti
scas
mov
ljmp
lock
fiaddl
jne
xlat
xor
in
das
sub
jno
stc
fs
pop
and
or
inc
stc
idiv
mov
and
adc
xchg
pop
mov
dec
ret
mulb
in
and
sub
dec
mov
pop
inc
mov
mov
ds
adc
push
inc
jnp
sub
inc
lds
jnp
repnz
inc
add
hlt
push
ret
sub
fwait
outsl
ja
xchg
rdmsr
in
hlt
or
add
sahf
cmp
cmp
in
xor
arpl
sbb
mov
sbb
jno
leave
xlat
dec
jg
dec
fisttps
orl
test
jg
arpl
sahf
in
adc
mov
push
xor
sti
icebp
mov
cmp
subl
pop
push
cmp
sahf
mov
mov
out
pop
bound
loope
pop
push
enter
cwtl
movsl
cmp
jo
add
inc
cs
adc
jno
mov
mov
mov
or
shrl
cmp
mov
call
dec
or
lock
xor
inc
cmp
out
repnz
jae
lods
sbb
mov
push
rcl
jmp
popf
popf
xor
sub
fadds
aam
push
movsb
test
mov
int
push
push
xchg
dec
scas
pop
sub
add
add
add
jle
xor
gs
xchg
pop
mov
aad
pop
rcrl
fnstsw
add
movsl
cs
insl
push
rolb
std
add
push
aam
push
sbb
push
push
jecxz
pop
sbbl
mov
jno
shr
push
inc
mov
fwait
das
aas
jne
xlat
push
cmpsl
mov
in
lcall
mov
sbb
jge
bound
hlt
aad
mov
push
cmp
cs
iret
pop
stc
in
add
out
popf
mov
jae
sti
test
scas
loopne
pop
mov
sbb
stc
sbb
push
push
mov
inc
cwtl
adc
orb
stos
dec
stc
add
mov
sub
and
dec
xor
ljmp
cmp
pop
adc
or
inc
ret
fistl
cmc
notl
fisttpl
jne
test
and
mov
fidivs
sub
mov
pop
mov
xor
divl
cmp
clc
es
cmc
jno
or
cmc
fidivrs
add
test
xor
add
outsl
push
jmp
jne
xor
sub
xlat
adc
dec
cs
lods
cmc
sbb
mov
cmc
mov
push
mov
jb
out
daa
mov
mov
xor
lret
icebp
cmp
pop
ficomps
bound
mov
jae
cli
or
in
leave
loop
ftst
std
mov
repnz
es
loope
push
je
repnz
ficoms
push
shrl
aaa
mov
pop
jge
and
cmc
mov
cmp
sbb
cli
lods
aad
push
inc
dec
loop
inc
cld
jno
push
or
js
jbe
leave
cmp
xor
add
mov
and
xchg
fimull
mov
bound
adc
in
in
test
dec
je
push
jmp
cmp
xchg
stos
and
cwtl
loope
incb
leave
or
sbb
lret
jmp
lahf
xor
repz
call
sub
xor
mov
shll
dec
or
nop
xchg
std
dec
inc
mov
dec
cli
fisubs
cmp
std
and
xor
in
xor
and
repnz
mov
imul
push
add
jbe
or
push
rcr
xor
mov
mul
dec
stos
xor
pop
sbb
mov
imul
and
lahf
xor
adc
xchg
xchg
gs
mov
sub
outsb
call
mov
sahf
mov
loop
mov
mov
fwait
pop
lret
push
in
and
std
in
or
lods
int3
cmp
leave
xchg
subl
fisubl
mov
hlt
bound
mov
fs
jno
das
stos
inc
adc
cli
xlat
shll
aad
repz
push
shl
int3
shlb
mov
xchg
adc
scas
cmp
rcrl
sti
pop
jp
sub
aad
jns
cmp
scas
loope
sti
ret
rol
ficoml
sarb
fildll
and
jno
push
inc
mov
jmp
bound
dec
cs
jl
inc
cwtl
idivb
fdecstp
loop
lods
cmp
outsl
ja
clc
stos
mov
lds
pop
cmc
jecxz
in
movsl
push
and
lea
jp
scas
sbb
imul
aam
add
fisubs
das
fisubrl
mov
movb
mov
jl
addr16
bound
dec
js
push
popf
and
stos
cmpsl
inc
inc
lret
sub
inc
je
fcompl
mov
rcrb
mov
in
pusha
jecxz
xchg
test
jae
pop
or
push
xor
cltd
xor
js
data16
jnp
in
scas
insl
inc
or
sub
xlat
jecxz
mov
or
scas
xchg
xor
sbb
popaw
add
negb
jb
aam
xchg
lret
pop
mov
mov
mov
cltd
or
stos
add
inc
test
in
call
pop
sbbb
loop
adc
cmp
ljmp
add
adc
pop
mov
das
inc
dec
mov
dec
xor
lds
jbe
insb
imul
dec
lahf
fdivrp
jnp
cmpsb
int3
bound
pushf
and
xor
fisttps
scas
ffree
pop
incb
cmp
xlat
xchg
jo
push
add
ljmp
fucomp
imul
rolb
jge
or
jp
stc
jmp
data16
cli
lahf
out
dec
push
shll
or
rcl
sub
jecxz
adc
xchg
sbb
pop
mov
loop
add
test
pop
das
lods
add
insb
loope
leave
mov
and
pop
stos
or
call
jmp
call
dec
sub
sub
mov
jmp
leave
cmpsl
sbb
notl
inc
jle
roll
addr16
pop
xrelease
movb
test
add
loopne
idivl
adc
mov
ja
jnp
fsubl
xchg
and
das
iret
mov
adc
jl
add
dec
scas
out
jge
add
or
xor
pop
lcall
add
jmp
popa
in
lret
adc
push
adc
popa
lock
movsl
and
and
or
mov
add
out
outsb
leave
cmp
ljmp
sbb
mov
aas
arpl
dec
push
and
push
mov
adc
test
push
jl
or
aad
sub
sub
fstpl
loopne
cmpb
mov
pop
mov
xchg
int
outsl
cmp
inc
incl
jmp
mov
xchg
and
pop
mov
in
lcall
mov
sbb
imul
pop
scas
int
mov
call
mov
adc
sahf
dec
test
mov
mov
mov
jmp
mov
xchg
sbb
insl
push
fbstp
or
inc
xchg
icebp
nop
adc
sbb
add
in
lahf
xor
add
daa
subl
pop
cmc
sbb
xchg
iret
lods
incb
push
fucomp
leave
mov
inc
xchg
movsb
cmpsl
or
mov
cmp
in
or
xor
lahf
xchg
ljmp
test
push
mulb
cmp
jecxz
sub
out
mov
mov
jae
sub
adc
mov
xchg
test
rcll
or
adc
dec
lcall
mov
mov
adc
rolb
pop
xor
loop
mov
jge
mov
jl
repz
loopne
xchg
into
push
enter
leave
hlt
aad
and
inc
sbb
adc
call
sub
into
lods
movl
dec
jbe
xchg
lret
mov
popa
das
popa
and
cmpsl
pushaw
out
stos
scas
sahf
push
js
ds
out
fisubrl
pop
pop
test
out
pop
add
aaa
ficoms
shlb
mov
dec
test
or
jo
inc
mov
sti
sbb
ss
xor
stos
and
or
push
pop
in
mov
int3
pop
jmp
in
sub
sbb
test
push
out
jmp
es
shrb
clc
imul
push
fsubrl
or
shl
fmuls
cmpsb
push
insb
fwait
ds
insl
out
loope
out
and
ljmp
jmp
mov
and
mov
nop
pop
xor
sbb
imul
push
mov
cmp
cmp
inc
xor
sbb
add
adc
loope
ficomps
fwait
dec
push
out
popa
inc
or
inc
imul
decb
rcll
jmp
insl
das
scas
or
pop
les
enter
repz
or
pop
xchg
dec
pop
jp
repz
xor
popf
inc
ja
scas
popa
sub
mov
xchg
mov
cmpsl
sti
ss
fsubs
xor
xor
jbe
ds
hlt
push
mov
sub
sbb
dec
or
pop
sbb
gs
ljmp
lods
and
add
lcall
test
pusha
js
pop
aad
repnz
push
in
or
add
jns
jno
in
dec
arpl
dec
and
addr16
sbb
dec
jne
outsb
push
push
fsubr
shrl
das
pop
cmpsb
loop
add
out
pop
pushf
mov
out
inc
inc
cmp
and
and
pop
aam
out
adc
mull
sbb
add
stos
incb
aam
or
ja
cmp
xchg
pushf
inc
stos
and
and
ret
dec
pop
lea
add
movsb
sub
ja
mov
jb
ja
inc
cs
sahf
jbe
inc
popf
adc
inc
xchg
cs
fidivrl
xchg
leave
cmp
add
jb
mov
into
and
sarb
aam
add
push
fstpl
inc
stos
inc
xor
daa
sti
ret
dec
sbb
mov
mov
xor
jns
hlt
filds
idiv
sbb
clc
mov
stos
push
push
sahf
insl
ds
rcl
sub
fadds
fs
sahf
fidivl
in
add
pop
aaa
lret
rcrl
and
jnp
lret
out
sahf
mov
and
jnp
out
cwtl
pop
shll
mov
cmp
mov
mov
xlat
mov
test
das
dec
cmp
comiss
cmp
loope
dec
stos
xor
pop
push
jne
in
stc
mov
movsl
cld
adc
mov
mov
sub
out
insb
fwait
push
data16
adc
mov
push
mov
mov
inc
and
jne
sub
or
fidivl
sti
sbb
cmp
mov
dec
mov
leave
aaa
jb
push
lods
rcrb
enter
data16
xor
js
lcall
jge
cmpsb
lods
mov
scas
dec
inc
jecxz
inc
xchg
mov
cs
lock
test
jno
pop
rcrl
or
xchg
push
sub
lahf
mov
sub
mov
movsb
mov
into
mov
sub
dec
sub
push
or
mov
iret
std
add
push
pushf
nop
fisttpl
cli
and
and
clc
push
lods
cmp
xor
mov
or
push
and
xor
icebp
outsl
sub
mov
and
movsb
lcall
xchg
mov
mov
jle
ljmp
xchg
mov
int3
stos
aaa
add
jb,pt
mov
mov
push
cltd
and
mov
or
sub
jp
pop
arpl
adc
jne
push
and
cmp
xchg
xchg
cmc
int
arpl
aad
jbe
xchg
dec
rorb
mov
orl
cmpsl
pop
lret
dec
push
enter
adc
cmp
pop
mov
outsb
lahf
daa
insb
out
add
sub
mov
mov
inc
call
jl
lcall
ret
cmp
jo
mov
notl
xchg
xor
cmp
mov
lods
decl
ret
ret
pushf
dec
and
xchg
cmp
pop
xor
test
test
iret
cs
sbbl
call
test
pop
outsb
push
dec
push
movsb
and
mov
aas
xchg
in
aam
gs
fistpll
gs
int
mov
fs
pop
popf
mov
mov
int3
adc
cmp
cmp
test
call
mov
mov
and
or
icebp
mov
push
inc
sub
test
mov
inc
mov
aas
cwtl
push
test
stos
sbb
mov
mov
nop
push
icebp
pop
and
rclb
scas
inc
cwtd
leave
sbb
cld
rcrb
jl
cmp
jae
push
stos
or
jge
sub
and
ds
or
and
imul
movsl
fwait
sbb
add
adc
sub
shrl
in
aad
ljmp
icebp
xlat
pop
push
cmp
jb
repz
inc
or
fmuls
push
div
sti
sub
mov
ret
stc
jmp
xor
mov
or
mov
sbb
mov
inc
mov
negl
dec
in
jle
ss
and
add
pop
adc
into
cmp
jmp
inc
fdivl
push
jmp
mov
dec
push
mov
jae
mov
pop
loop
pushf
mov
push
in
pop
cmp
test
das
jbe
bound
rolb
xchg
pop
sub
sbb
pop
fnsave
or
fnsave
add
mov
cmc
inc
xor
pop
mov
jbe
push
dec
cmpb
inc
or
movsl
pusha
pop
jg
outsl
leave
xchg
shll
cmp
adc
mov
xchg
pop
rclb
pop
add
test
mul
mov
clc
jne
lcall
loop
pop
xchg
or
fsubrl
in
test
mov
dec
inc
inc
cmc
adc
jg
push
retw
cmp
xor
add
mov
xchg
in
cmpsw
rorb
xadd
xchg
cwtl
lret
and
push
inc
adc
scas
dec
aad
in
push
in
shl
in
dec
ss
mov
shll
jmp
pop
sbb
test
adc
or
repz
daa
shl
mov
dec
dec
lds
inc
xchg
pop
mov
std
leave
jnp
notb
fistps
stos
sahf
or
movsb
ret
imul
jg
imulb
cmp
jp
in
inc
jmp
test
pop
jbe
bnd
or
iret
mov
adc
nop
xchg
cmp
cmp
xchg
fiaddl
in
pop
sbb
in
mov
cmc
mov
jp
push
popf
jmp
call
fs
pop
mov
mov
lahf
cmp
js
add
scas
adc
gs
xchg
sub
fsubp
rclb
fmuls
test
mov
inc
fildl
cmp
adc
mov
mov
or
push
xchg
fiadds
lcall
jae
clc
or
adc
push
leave
pop
sbb
daa
stos
fcompl
jnp
pop
mov
dec
stos
adc
push
sbb
sbb
stos
idivb
inc
pop
popa
je
cmp
pushf
fstps
lock
es
xchg
cwtl
pop
cli
rorb
nop
and
gs
xchg
xor
mov
out
push
jae
mov
insb
sbb
int3
push
sbb
test
mov
addr16
jmp
inc
testl
js
adc
adc
popf
bound
out
dec
ret
xchg
and
aad
pop
movsb
into
and
repz
aam
pop
dec
mov
sbbb
or
inc
sbb
xchg
fs
mov
shlb
or
jne
push
sbb
in
push
outsb
mov
stos
or
cmp
mov
les
test
into
movsb
sti
subl
insl
iret
xchg
xlat
dec
and
mov
test
pushf
xchg
lcall
cs
pushf
pop
xor
lahf
popa
sub
jl
cmp
add
out
or
mov
xchg
pop
sahf
add
and
bound
lahf
addr16
sbb
loope
cmp
lods
mov
pusha
addr16
dec
stos
stos
pop
rorw
lods
or
adc
xor
fimuls
add
mov
fs
loope
pop
fs
out
andl
iret
pop
sbb
add
inc
movsb
lock
cwtl
stc
inc
mov
fadds
je
cmpb
push
addr16
lahf
int3
das
in
xchg
int
lret
ss
insb
mov
jmp
pop
frstor
test
push
add
jecxz
xor
pop
sahf
mov
jp
mov
or
push
mov
jecxz
mov
or
aas
lea
xchg
or
cmp
add
sub
push
outsl
fimull
dec
mov
stos
mov
in
imul
and
dec
or
out
shlb
inc
add
mov
ja
pushf
cmp
pop
fldl2e
dec
jle
push
adc
dec
fldt
mov
dec
jge
sbb
aaa
ret
xchg
or
scas
fldt
or
imulb
mov
leave
xchg
jg
fsubl
add
movsl
testb
les
xchg
rorb
cmp
push
mov
mov
fs
fwait
inc
iret
js
aaa
mov
push
pop
aaa
in
push
mov
cmpsl
sti
mov
outsl
call
cwtl
add
leave
call
popf
mov
enter
mov
mov
lret
cmpsb
lock
cs
adc
cmp
pusha
mov
push
cltd
dec
jl
jbe
xor
fwait
insl
mov
gs
lahf
xchg
stos
lahf
or
add
fidivs
mov
out
adc
or
stos
stc
jno
popf
in
popa
xchg
mov
repnz
cmp
mov
int
hlt
add
in
cmp
pusha
and
xchg
jp
cmp
or
dec
cld
inc
adcl
ret
pop
jb
stos
dec
popf
mov
filds
dec
shrl
sbb
scas
push
fstp
xor
adc
sbb
push
sbb
push
xchg
pop
dec
in
hlt
inc
sbb
xor
mov
or
arpl
add
jmp
cmp
movb
mov
xchg
pop
fnsave
bound
es
jecxz
pop
cmp
xor
xor
xchg
fcoml
sbb
mov
enter
sub
dec
nop
mov
push
mov
jae
mov
sbb
subl
fistl
repnz
in
sahf
out
movsb
cwtl
lret
popf
pop
nop
enter
adcb
mov
gs
daa
add
inc
into
int
daa
sub
sarl
inc
test
cld
clc
and
sbb
lret
sbb
repnz
xchg
jl
stos
sbb
push
adcb
mov
nop
and
inc
aam
and
arpl
jae
aam
pop
mov
mov
data16
cmc
jbe
push
pusha
sub
xor
popa
dec
fidivl
es
jle
cltd
sub
test
sub
inc
mov
xchg
jl
mov
jno
mov
xor
sub
mov
adc
insl
out
sub
mov
dec
arpl
cltd
mov
adc
mov
aad
shll
dec
test
push
shlb
sahf
lods
ss
mov
jp
mov
inc
out
cmp
dec
cmpsl
xchg
jnp
addl
shlb
outsl
mov
out
movsb
imul
mov
les
or
mov
sbb
sbb
cmc
out
mov
or
fld
testl
pop
sahf
js
int3
mov
mov
ja
xchg
gs
fimuls
inc
cmp
imul
jge
adc
cli
lods
adc
pop
lret
dec
inc
mov
jo
fwait
mov
jecxz
inc
mov
mov
xchg
mov
jae
rclb
inc
adc
les
lods
leave
lods
adc
mov
pop
test
outsb
iret
into
sub
leave
or
iret
in
enter
scas
sbb
mov
fisubs
shlb
mov
divb
test
mov
inc
in
push
enter
dec
arpl
cli
mov
and
imul
lea
icebp
test
stos
enter
jg
or
outsl
jns
ja
mov
popf
pop
mov
out
mov
ds
pop
xor
xchg
lock
les
frstor
sub
sub
mov
jno
les
test
lahf
js
sbb
pop
leave
pop
xchg
or
imul
push
add
lahf
jmp
decb
jp
enter
adc
jp
inc
mov
lock
jns
xchg
dec
repz
fisttpl
cli
insl
loope
wbinvd
sti
push
lods
stc
add
dec
loopne
mov
lcall
rep
mov
fnstcw
hlt
fcmovne
gs
sbb
pop
jne
movsl
jl
cmpsb
and
hlt
fildl
sub
adc
sub
mov
or
mov
push
das
das
jo
xchg
addr16
cmpsl
cmp
sti
ficoms
fisttpl
fs
aaa
insl
pop
fildll
call
ret
loopne
iret
sbb
inc
daa
xor
add
jecxz
imul
loope
popf
fistpl
in
xchg
bound
insl
nop
push
scas
jno
fbstp
ja
inc
inc
jle
int3
mov
cs
stos
xchg
gs
repz
and
lds
sub
clc
inc
push
xchg
jl
xchg
out
aas
jle
data16
popf
mov
or
sbbb
pusha
and
add
clc
fstpl
mov
mov
sbb
mov
mov
jnp
or
mov
outsl
lods
mov
call
adc
shr
clc
cltd
cmp
in
xchg
jb
mov
mov
leave
ljmp
inc
outsl
das
or
push
xchg
adc
icebp
jo
dec
sub
push
aaa
shrl
roll
shll
add
mov
mov
xchg
sbb
jo
push
and
or
das
sbb
lahf
mov
jno
sti
sub
and
leave
jl
faddl
cmp
or
sarl
jp
adc
mov
xlat
pop
hlt
js
ljmp
adc
jg
sub
jb
sahf
jb
in
cmc
fists
add
aad
int3
scas
data16
addr16
fnsave
adc
push
cmc
lock
imul
insl
mov
jns
sub
rcll
push
mov
cmp
jecxz
mov
xor
xorl
mov
clc
fbstp
lods
mov
jl
xchg
adc
mov
roll
dec
adc
adc
mov
and
lcall
fmull
icebp
mov
xor
adc
mov
outsb
movsb
int3
jecxz
aad
add
jno
xor
jp
mov
pop
push
jl
jae
inc
shll
std
sbbl
jne
movsl
mov
mov
je
dec
rolb
loope
sbbb
pop
iret
and
in
in
mov
dec
dec
push
and
out
shll
jb
lods
movsl
dec
mov
bound
mov
ljmp
jbe
sbb
insl
mov
dec
or
jnp
dec
cli
jecxz
inc
int3
xchg
mov
pop
out
lds
mov
sub
cltd
sbb
mov
sbb
stc
and
pop
out
mov
insb
stos
scas
mov
fiaddl
loop
pushf
scas
in
sub
idivb
out
jb
mov
jmp
jl
dec
popf
jns
sti
addr16
or
cmp
movsl
mov
jmp
cmp
fnsave
mov
decl
mov
dec
jecxz
leave
outsl
push
sti
push
das
mov
pusha
shrb
int
mov
sbb
lret
mov
inc
pop
inc
jb
pushf
aas
loop
and
mov
pminsw
je
sub
cmp
adcl
push
sub
ljmp
and
loop
push
rorb
loopne
outsl
fwait
lcall
pop
inc
cmp
and
movsb
adc
mov
inc
jo
and
in
mov
movsl
insl
xor
fucomp
adc
mov
in
ret
add
pop
pop
popa
jae
dec
loop
pop
lods
inc
ret
repz
mov
cmp
jl
add
xor
and
lds
bound
xchg
sbb
cmc
sbb
or
loop
adc
and
mov
inc
or
mov
in
in
push
rorb
inc
fmuls
add
sbbb
mov
shlb
inc
inc
repnz
data16
xchg
mov
sub
xor
arpl
fldenv
das
sub
stos
jle,pn
add
cmp
adc
fs
dec
outsb
or
lods
jle
daa
jne
jl
jb
sub
js
push
mov
dec
call
fcoms
cmp
xchg
test
lock
test
pop
daa
mov
or
cld
loope
push
xor
jp
mov
mov
repz
jle
pop
pushf
xchg
pop
pop
inc
call
pop
xchg
cmpsb
fwait
adc
sub
jle
daa
sub
int
repnz
jae
cmpb
ja
add
mov
aas
xlat
pop
or
outsb
cld
or
mov
shrb
xchg
ret
pop
dec
xchg
test
pop
mov
sbb
mov
mov
cmp
mov
and
idiv
mov
xlat
mov
push
xchg
jg
push
mov
sti
jecxz
and
repz
test
adc
js
mov
lcall
popf
sub
xor
sbb
sbb
decb
cmp
push
imul
sbb
lods
mov
add
xor
dec
push
popa
mov
mulb
clc
dec
das
stos
push
or
dec
leave
popa
sub
lds
pop
cmc
add
lret
insl
cmc
mov
loop
sti
dec
push
mov
adc
fnstenv
or
shlb
sub
push
sub
jo
dec
stos
das
mov
cld
and
ds
jno
jae
out
xchg
popa
sbb
adc
cmp
jecxz
jge
pop
movsl
stos
xor
dec
xor
clc
lds
xor
rcrb
js
xchg
adc
sti
fld
or
mulb
adc
xchg
or
xchg
leave
push
rolb
mov
jmp
enter
xchg
insb
fs
arpl
mov
jge
lahf
mov
sti
mov
sbb
fdivrl
add
mov
jbe
bound
and
inc
add
fdivp
mov
push
iret
push
xor
mov
push
and
push
cld
or
lret
cmp
jle
sub
push
cmp
stos
test
xchg
jge
xchg
in
pop
cmp
out
add
gs
or
ret
bound
daa
aam
shlb
adc
stos
xchg
jbe
sub
inc
lds
push
pop
jecxz
adc
add
cmpsb
loope
mov
push
xchg
pusha
sub
mov
pop
pop
jmp
mov
movsl
ljmp
pop
loope
cltd
fiaddl
popf
ljmp
lret
pop
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
flds
cmp
or
jp
rorl
push
push
and
inc
push
lea
push
cmp
popf
jae
int
pop
stos
outsl
mulb
push
adc
jo
dec
sbb
in
sbb
inc
mov
lret
sbb
cmc
loop
xchg
subl
cmp
lock
mov
int
add
sahf
repz
mov
inc
fdivs
inc
je
call
cmpsb
iret
cld
pop
push
loope
mov
pop
inc
arpl
data16
pop
arpl
xchg
sti
leave
cld
clc
lods
mov
idiv
xorb
mov
and
in
xchg
test
ret
pop
int
xor
mov
insb
xor
jmp
inc
xor
xchg
cld
cmpsl
inc
push
imul
lcall
sarl
vmovlps
loope
movb
cmc
ret
imulb
cmp
out
lret
ss
test
ja
sarl
inc
xor
arpl
sarl
pop
mov
iret
xchg
jmp
inc
popf
js
xchg
stos
gs
mov
scas
mov
cmp
xchg
or
xlat
lcall
fnstsw
enter
idivb
push
movsl
insl
pop
jns
lea
clc
xchg
cli
mov
shl
jo
scas
repnz
repnz
mov
jecxz
clc
lea
and
int
aaa
xchg
dec
pop
shlb
das
xor
dec
push
pusha
mov
dec
push
jb
mov
xor
ret
add
add
movsb
data16
inc
test
leave
sub
adc
pop
test
jmp
aas
fiadds
jge
mov
repz
jno
push
push
mov
arpl
pop
subl
mov
add
sbb
fistl
es
mov
idiv
inc
movb
and
xchg
das
jg
jp
mov
xchg
pushf
xor
sarl
pop
ret
inc
inc
jnp
and
inc
stos
std
fistpll
pop
negl
shlb
mov
or
sub
adc
push
mov
icebp
ror
jne
sti
repz
insb
or
push
ret
outsb
adc
subb
mov
dec
loopne
pop
xchg
mov
repnz
into
shlb
sub
sbb
stos
inc
aas
mov
xlat
dec
ds
jbe
repnz
mov
sub
xorb
roll
mov
add
lea
inc
mov
std
xor
pop
xor
sbb
jnp
pop
movl
mov
pop
jne
mov
jecxz
and
push
pusha
add
mov
inc
cmc
daa
xchg
push
cli
lret
xor
fwait
imul
enter
mov
adc
mov
push
out
rorb
fcoml
dec
fdivl
or
xlat
mov
addb
imul
adc
mov
std
xorl
gs
cmpsl
test
mov
std
mov
sbb
in
jnp
popf
enter
mov
mov
hlt
test
test
mov
cmpl
popa
cwtl
lahf
push
nop
lret
dec
out
sub
mov
fidivrl
lahf
shrb
sub
faddl
sti
test
push
mov
fstpl
or
ljmp
cmpb
xlat
fnstenv
bound
push
jp
std
fs
sub
bound
inc
sbb
hlt
or
and
lea
pop
shl
and
insl
sahf
and
iret
pushf
pop
push
js
sub
mov
pushl
add
popa
add
dec
sub
dec
lret
cmpsb
pop
jecxz
aam
stc
std
xorb
mov
ret
mov
out
mov
push
in
frstor
rcrl
sbb
test
sub
xlat
jp
arpl
inc
push
push
pop
das
or
inc
fiadds
add
call
xlat
fdivrs
stos
cmp
nop
lods
cmp
sarl
fdiv
pop
inc
mov
jge
adc
aaa
jnp
inc
cmp
test
push
repz
les
mov
fwait
dec
xor
cmp
mov
and
das
mov
xchg
in
pop
in
imulb
add
mov
fwait
sub
enter
mov
das
call
arpl
push
mov
jp
outsb
pop
pop
popf
sbb
ss
or
xchg
outsb
inc
fimull
jmp
dec
adc
mov
adc
fcomps
add
rorb
ja
out
sarl
cmp
mov
cmpsb
shll
iret
mov
aaa
xchg
xlat
adc
mov
testl
adc
sbb
ret
out
iret
mov
push
xchg
in
fiaddl
sub
inc
lcall
adc
sbb
lds
inc
cmp
subl
iret
cmp
pop
or
jge
loopne
inc
jns
nop
dec
push
inc
cld
in
sbb
cmpsl
movsb
sbb
cmp
mov
es
ds
jl
xchg
rcll
sub
mov
pop
and
scas
pop
scas
jb
popl
fiadds
pop
mov
ja
cmp
popa
rclb
addl
cmp
inc
fistl
sub
adc
and
addr16
adc
sbb
mov
xor
aas
cmp
ljmp
pop
xor
add
test
test
pop
imul
stos
imul
nop
xchg
cmp
and
pusha
call
xchg
add
lock
pop
mov
jne
mov
les
jns
sub
sbb
xor
mov
xor
or
xorb
hlt
jge
jl
push
setge
fsubr
lds
push
insb
xchg
add
je
pop
setno
dec
push
sti
adc
jne
push
mov
sar
push
and
fmull
xchg
xchg
sub
insl
cmp
das
dec
jb
sbb
popa
aad
cs
dec
sub
and
cld
or
jle
cltd
int3
stos
pop
inc
mov
les
addb
push
mov
rorb
gs
in
or
in
mov
jns
lods
jp
das
pop
xchg
cmp
les
push
jnp
dec
jmp
and
insb
arpl
out
call
dec
lods
clc
or
iret
jb
sbb
xchg
into
mov
push
and
push
mov
mov
andb
stos
nop
mov
fs
inc
mov
xchg
or
rcll
ret
jb
js
mov
adc
mov
imul
cmp
cmp
test
cmp
addr16
clc
mov
out
add
mov
inc
sti
cs
pop
cli
add
adc
or
and
pop
fistpll
cmpsl
loop
xor
cltd
adc
popa
daa
jg
mov
jp
int3
ja
xorb
insb
add
inc
add
mov
dec
jmp
dec
rorl
jno
test
push
push
inc
and
inc
pop
roll
and
imul
or
mov
loop
inc
push
jne
fs
inc
cmpsl
or
xchg
icebp
inc
ja
jne
pop
nop
dec
push
inc
add
shr
pop
xchg
sub
or
gs
cmc
ret
cmp
dec
or
loop
jb
add
adc
fiaddl
add
sub
pop
cmp
shrl
jns
xor
fnstenv
in
jg
fistpll
push
fwait
or
insb
dec
ficoms
adc
mov
xor
or
mov
cwtl
inc
jns
das
daa
lods
dec
lcall
clc
xchg
or
cmp
sub
orl
lods
std
and
mov
aad
sub
or
scas
mov
jae
mov
mov
dec
sub
adc
lahf
lcall
or
xor
roll
mov
das
stos
jne
inc
mov
ss
sahf
jmp
sbb
mov
das
ja
jo
mov
mov
mov
push
mov
cmp
out
cmp
mov
push
stc
sub
es
popf
fmull
and
nop
cmp
add
or
push
inc
dec
mov
dec
jge
cmp
pop
add
fcmovnbe
js
push
fcmovnu
lret
test
lock
hlt
and
jmp
inc
add
outsl
je
test
cli
ds
mov
test
clc
adc
add
stos
scas
push
cwtl
jmp
pop
stc
adc
push
xchg
inc
lahf
push
popa
int3
lea
push
and
pop
xchg
mov
add
adc
daa
out
incl
xchg
jne
jge
cs
aas
pop
ljmp
dec
jae
sbb
ds
cli
das
and
push
leave
sahf
or
fcoms
nop
pop
push
lods
in
in
hlt
lods
int
les
adc
mov
push
mov
pop
push
je
test
cs
aam
fs
inc
iret
in
add
aaa
add
or
rorl
xlat
shrl
xchg
sub
sbb
dec
rclb
enter
sbbb
sarb
mov
xchg
int3
clc
xchg
pop
xor
mul
xchg
xchg
dec
das
mov
push
adc
icebp
js
popa
mov
out
pop
jae
jge
jge
mov
subl
sarl
test
sbb
mov
ret
mov
dec
lahf
mov
cmp
mov
int
jne
cmpxchg
mov
dec
call
push
scas
or
bound
icebp
and
mov
xchg
hlt
fimull
aaa
mov
es
pop
inc
jmp
xor
notl
out
mov
push
mov
pop
mov
push
dec
test
lret
inc
lea
imul
fadds
out
xchg
mov
adc
roll
movntq
leave
int3
addb
fdivrs
pop
idivb
test
lret
icebp
sub
scas
jns
xchg
inc
jnp
ret
mov
test
jae
xchg
ret
jmp
add
mov
dec
loop
scas
bound
jmp
mov
aad
push
notl
and
das
leave
dec
mov
out
ja
rcpps
into
mov
adc
add
js
adc
jb
ss
fimuls
xor
cmp
push
addr16
bound
enter
dec
mov
xor
clc
cltd
dec
add
cmp
out
add
mov
andb
push
xchg
in
pop
push
push
pop
in
scas
je
pop
push
popa
cmp
jl
cmpsb
dec
mov
xchg
mov
cs
ja
out
cmp
insl
addr16
fadd
hlt
sbb
lcall
fwait
lcall
icebp
imul
inc
sub
xor
mov
cmp
mov
cmpb
cmpl
shlb
pop
test
repnz
mov
test
packssdw
xchg
mov
mov
out
js
or
xchg
or
mov
ficompl
repz
dec
call
adc
xlat
shl
loope
rorb
jp
popa
sbb
inc
sbb
jne
jbe
mov
jmp
leave
jb
mov
xchg
mov
in
mov
and
push
or
add
stos
xor
ss
in
fisubrl
test
movsw
aam
decl
out
ja
movsb
mov
aaa
dec
pop
pop
cmp
les
mov
or
or
xchg
add
fcomps
pop
sub
iret
mov
jnp
mov
inc
stc
jge
push
sub
xchg
cltd
icebp
or
stos
loop
call
shrb
lods
inc
and
or
xor
push
mov
inc
xor
jle
adc
ja
addr16
out
fisubs
repnz
mov
leave
pop
jae
and
push
int3
push
mov
dec
xor
ss
imul
int
or
into
lret
inc
adc
mov
push
lcall
pop
daa
pop
sti
adc
inc
iret
les
jecxz
cmp
call
sbb
in
pop
or
out
add
and
or
ds
fmull
mov
mov
cwtl
fisubl
cmp
or
mov
jne
jbe
and
sbb
aad
inc
lahf
mov
mov
sub
and
sbb
jnp
inc
push
mov
dec
mov
jbe
cld
ljmp
repz
out
xchg
and
mov
fdivs
jb
mov
aas
mov
jecxz
daa
jl
mov
mul
loopne
jno
ret
cmpsb
int3
in
lret
pop
scas
outsl
inc
cmp
push
loopne
jae
mov
add
mov
xor
call
ss
js
pop
jecxz
ret
roll
xlat
ss
jle
dec
nop
aas
shll
popa
fidivs
ret
mov
in
notb
shll
mov
add
pop
mov
fbld
js
jle
out
jbe
dec
lods
jne
mov
cmp
pop
fucomp
lea
push
lret
scas
std
dec
cmpsl
xor
or
lds
cmc
adc
dec
jle
jb
loop
cld
lods
add
mov
cwtl
repz
mov
and
imul
push
mov
add
mov
out
rep
out
in
push
mov
cmp
jmp
xchg
and
je
in
xchg
xchg
add
sbb
pop
xor
sub
pop
mov
nop
jl
mov
iret
leave
dec
mov
xchg
jl
xchg
push
cmpb
mov
adc
enter
lahf
pop
sti
and
dec
dec
cmp
pusha
outsl
add
out
cmp
dec
das
mov
jecxz
lea
xor
xor
jle
test
xor
stos
adc
mov
adc
movsb
imul
and
xchg
jecxz
add
fs
fnstsw
jp
mov
mov
outsl
sub
mov
dec
push
push
repz
mov
repnz
mov
push
sarl
mov
fisubl
addr16
jo
mov
mov
push
outsb
test
stc
insb
inc
leave
xlat
lret
push
out
negb
fildll
ja
iret
and
scas
movl
outsb
jo
test
repz
mov
inc
movsl
xchg
or
test
sub
cld
call
jge
lret
stos
dec
push
daa
push
loope
mov
mov
js
cmpsb
mov
aam
adc
mov
sti
call
imulb
loop
in
inc
lret
aas
sbb
cmp
jmp
dec
cmp
cmp
push
mov
test
cmpsl
clc
xchg
xor
cltd
xchg
xchg
inc
frstor
adc
mov
jmp
jbe
rclb
mov
jbe
jb
adc
movsl
dec
scas
add
fdiv
rcr
rorl
push
mov
xor
lahf
adc
add
add
mov
jno
ret
xor
mov
rolb
xor
mov
lcall
cmp
mov
mov
sbb
and
jo
dec
inc
lea
jmp
mov
int3
out
pop
add
in
cmp
int3
outsb
xchg
ja
cld
pop
nop
outsl
lds
mov
in
push
adc
add
push
jp
ja
movsl
fwait
test
adc
cmp
mov
push
push
test
ror
mov
push
jns
jp
or
test
pop
sahf
loopne
pop
ja
pop
imul
pop
cmp
movsl
xchg
push
rorb
and
adc
je
call
shl
pop
shrb
bound
in
sub
lahf
push
xor
enter
xchg
or
fcompp
dec
dec
sub
mov
aaa
adc
mov
aas
mov
push
mov
mov
pop
lock
adc
add
enter
pop
push
lds
push
les
mov
incl
mov
pop
test
mov
fucomip
fidivrs
push
mov
mov
mov
stos
inc
ficoms
icebp
pop
fs
xchg
test
leave
lahf
dec
loop
cmp
xchg
add
cmp
mov
push
and
pop
lods
cld
cmp
out
add
lods
sub
cld
mov
and
or
call
mov
sti
jle
xchg
rol
repz
out
mov
mov
and
fnstenv
call
or
push
movsl
mov
inc
movsb
or
psubw
sarb
hlt
out
or
adc
testb
cli
dec
xorb
pop
daa
xor
add
pop
and
fwait
pop
mov
xor
rolb
stos
je
mov
in
mov
outsl
jnp
push
movsb
add
cli
sub
lcall
loope
int3
mov
ja
lcall
mov
or
push
cmp
out
xchg
ja
dec
enter
push
pop
daa
sbb
mov
imul
fwait
sub
jl
out
push
and
xchg
cli
and
lock
subl
jp
sbb
xor
xor
mov
fildll
hlt
sub
and
inc
inc
add
sbb
into
std
cld
mov
mov
mov
xchg
xchg
mov
and
dec
push
jp
jno
dec
adcl
pusha
sahf
mov
adc
mov
mov
jno
inc
mov
sbb
lock
jnp
lods
pusha
mov
out
and
into
pop
std
enter
push
mov
popa
and
out
push
pop
js
mov
xorl
in
and
div
xchg
mov
push
mov
imul
mov
cmp
lret
fwait
mov
adc
pop
and
jae
and
bound
push
rorl
test
mov
lods
out
or
cmp
or
ret
add
sbbb
lret
in
pop
fiadds
fwait
popa
jo
out
into
cmp
push
mov
aad
jmp
or
ja
lret
lods
movsb
lret
add
lea
push
jl
pop
and
mov
stos
adc
mov
sti
out
dec
test
lds
cli
dec
push
mov
mov
jns
push
add
pop
and
cli
divl
dec
ss
xchg
out
hlt
inc
sbb
sahf
mov
cmp
add
mov
arpl
fucomp
mov
and
sahf
int
scas
loop
test
adc
out
xor
ret
xchg
popf
enter
add
push
mov
in
pop
inc
mov
repz
inc
cld
lcall
cmc
fcmovb
aad
popf
jne
sub
or
push
inc
shrl
lret
clc
push
cmp
mov
lahf
clc
push
es
stos
jg
cwtl
adc
dec
imul
sbb
cltd
fsubl
xor
jb
push
sub
lds
fwait
in
int
sub
mov
sbb
lods
rcrb
scas
and
je
mov
push
call
outsb
and
imul
push
pusha
or
inc
les
or
loope
add
scas
cmpsb
loope
repnz
bound
push
adc
jle
sbb
push
push
xor
xchg
xchg
pop
aad
enter
or
mov
adc
lret
sbb
test
mov
ss
cmp
popa
xlat
inc
push
rol
sbb
mov
pop
sub
xchg
sbb
cmp
add
mov
out
aaa
ja
push
mov
icebp
lret
scas
ljmp
and
mul
test
repz
inc
lods
push
push
xor
xor
or
frstpm(287
and
mov
popl
inc
aad
je
mov
jp
in
dec
mov
xchg
pop
icebp
pop
pop
push
ss
mov
lds
adc
xor
popf
scas
movhps
pushf
mov
sub
and
inc
minps
dec
push
in
jp
cmpsl
stc
sbb
or
jge
jp
xchg
ds
sbb
fnsave
scas
sar
pop
dec
mov
fcmovnb
or
push
jg
pop
lds
sbb
pop
sub
ret
sbb
nop
xor
jl
mov
push
lahf
sub
jno
push
lea
inc
or
test
das
movsb
hlt
test
jecxz
xchg
dec
sbb
and
or
repnz
addr16
mov
inc
jg
lods
jmp
sub
sub
loope
jge
dec
rcll
pushf
in
xchg
test
test
xchg
add
cld
fwait
mov
clc
int3
xchg
cmpsb
addb
jge
ret
lods
stos
mov
in
sub
mov
xchg
inc
inc
push
arpl
pop
cli
xor
sbb
pop
pop
out
loopne
adc
out
loopew
ljmp
pop
aad
ret
xchg
fisubrl
jg
pop
dec
lods
fisttpll
insl
fisttpl
bound
orl
mov
push
xchg
cld
clc
dec
outsb
mov
mov
or
pop
mov
or
add
fucomp
cmp
jp
scas
test
aaa
push
dec
xchg
pushf
mov
or
cld
insl
test
stos
pop
test
scas
daa
and
out
push
ret
sbb
jns
scas
mov
ds
jb
pusha
lret
add
je
xchg
insl
adc
jl
pop
aam
dec
rcll
lcall
xor
sbb
fsubr
push
sbb
jge
jp
rol
sub
ljmp
lcall
pop
les
push
movsl
jge
jmp
mov
aaa
fnstenv
mov
outsl
or
faddl
mov
mov
loopne
cmp
sub
inc
mov
mov
xor
lret
sbb
or
insb
mov
add
leave
push
scas
adc
bound
mov
repz
mov
xor
pusha
loopne
sub
mov
jns
aas
popa
dec
sbb
in
adc
pop
xlat
mov
arpl
inc
int
sarl
push
inc
fwait
fwait
les
cmpl
sbb
adc
push
jmp
inc
repz
cltd
out
and
xor
iret
jmp
cmpsb
and
push
xlat
pop
and
stos
sarb
shrl
cmp
fcomps
out
mov
push
cmp
pop
imul
out
cltd
pusha
aaa
sarb
fsubrs
test
icebp
outsb
mov
fistpll
das
pop
and
xor
pop
decl
inc
fnstsw
les
into
cmp
lods
jns
sbb
js
test
dec
cmp
repnz
jl
sub
test
loope
fiadds
stc
pop
divb
xor
jns
and
fs
out
xchg
push
dec
push
mov
push
jg
daa
mulb
sbb
vpshufhw
das
sti
or
inc
inc
mov
movsl
fnstcw
add
mov
test
mov
call
cmp
pusha
cmc
or
fidivl
cmp
xchg
test
sub
cmp
push
xchg
aas
sub
xchg
push
inc
test
movsl
dec
jp
imul
cmp
pop
ror
pinsrw
push
adcl
jmp
test
cmp
add
cmp
sub
jo
mov
mov
in
push
xchg
daa
adc
cwtl
lret
mov
jecxz
or
fnstenv
mov
mov
pop
test
add
xor
mov
xlat
push
sbb
and
test
pusha
jnp
movsb
cmp
addr16
lods
test
aam
sub
ds
in
mov
jge
adc
subl
add
mov
xor
nop
mov
xchg
je
mov
hlt
stos
mov
push
cmc
sar
add
out
fstl
mov
loop
mov
fldenv
push
jmp
mov
loopne
mov
loopne
or
jp
mov
sub
xchg
push
inc
stos
add
pop
ss
mov
cwtl
cld
inc
mov
fadds
int3
adc
xor
mov
pop
loopne
outsb
mov
cld
mov
lcall
jno
xor
mov
pop
gs
cmp
shlb
outsb
imul
data16
aam
xchg
mulb
adc
ljmp
out
jno
cwtl
pop
or
in
faddp
mov
push
dec
fwait
jp
pop
dec
jns
test
dec
daa
mov
scas
adc
dec
xor
push
int3
sbb
xchg
pop
push
andnps
insl
leave
lcall
decb
mov
call
rcll
clc
sbb
jae
repnz
roll
scas
mov
test
shlb
int3
sub
adc
mov
ljmp
mov
pop
xchg
stos
in
hlt
xor
repnz
jno,pt
pop
dec
pop
push
adc
push
push
das
xchg
jp
mov
call
mov
mov
xchg
je
movsb
adc
leave
mov
outsb
dec
outsl
popa
inc
lock
mov
mov
adc
and
mov
aam
inc
sti
pop
shll
pusha
and
dec
jnp
xchg
pop
sahf
pop
inc
pop
dec
mov
xor
xor
and
inc
jb
lret
inc
inc
mov
fldl
and
sbbb
insl
ret
push
or
pusha
xchg
int
lcall
pop
inc
jae
sub
jp
jno
aas
fdivl
daa
std
dec
lret
mov
daa
js
outsl
adc
dec
mov
pushl
mov
repz
repz
mov
or
jmp
push
sub
mov
xor
aas
movsl
dec
scas
imul
sub
mov
mov
fisubs
imul
ds
fisttpl
jns
sti
fisttpll
and
sub
sub
roll
pusha
loope
aaa
idivl
inc
rol
test
push
out
dec
mov
push
pop
movsl
fcomps
loope
and
clc
sub
pop
cltd
jo
xchg
jne
int
dec
jmp
add
scas
cmp
add
test
sbb
imul
mov
dec
das
mov
xlat
dec
mov
divb
lods
shlb
jecxz
fidivrs
jge
mov
adc
addr16
arpl
push
pop
push
or
jg
aad
into
es
sub
cmp
jl
leave
pop
xor
call
sbb
and
div
ficomps
sub
jo
sbbb
push
mov
out
mov
sbb
flds
mov
leave
je
sub
xor
dec
imull
push
test
xchg
mov
xchg
pop
jle
cmp
jnp
or
pop
iret
fldcw
stos
ret
adc
xor
pop
scas
cs
push
stos
dec
push
sub
mov
mov
pop
mov
sarl
sub
popf
sbb
imul
vpmaxub
adc
test
lahf
mov
into
xchg
orl
xchg
in
rolb
or
gs
cs
pop
jne
jge
aas
mov
dec
lahf
mov
dec
cmp
push
mov
jb
adc
mov
cmp
push
sti
mov
ret
xor
jae
and
in
fmuls
scas
sub
dec
push
in
cmp
add
jns
cld
or
loopne
scas
push
lahf
in
jge
shrb
or
mov
imul
adc
negb
sub
and
loop
pop
mov
je
cmp
imul
sar
in
sbb
data16
sbb
adc
sbb
stc
das
cmp
lret
shll
and
enter
fwait
dec
in
push
out
push
subl
jecxz
and
mov
out
out
push
loopne
pushf
push
and
shrl
xchg
cmp
sub
mov
add
dec
mov
sub
jae
cwtl
in
ror
aas
add
jne
mov
jl
imul
jo
jns
repz
lret
sub
int
xchg
or
pop
popa
mov
movsl
add
push
das
insl
or
mov
lahf
adc
out
leave
imul
push
push
movsl
in
imull
sub
sub
sbb
mov
scas
mov
xlat
movl
push
popa
push
sbb
in
cmpsb
fstps
shrl
pop
loope
addl
push
push
sbb
xor
repz
dec
int
mov
add
rorb
xchg
popf
dec
rorl
ret
sahf
insl
sub
je
xor
mov
sbb
popf
xor
xchg
sub
add
repnz
lock
pusha
mov
std
mov
cwtl
sub
pop
mov
iret
lods
pop
js
pop
or
mov
stos
inc
jno
imul
andl
mov
pop
lret
sti
decl
aad
jmp
lods
sbb
push
xchg
xlat
xor
fcompl
fwait
les
bound
mov
mov
pushl
repz
push
loope
in
xlat
cmc
pop
add
cmp
pop
shll
jge
aam
scas
jae
jns
daa
shrl
inc
cs
adc
das
nop
mov
sbb
sub
lret
jmp
sbb
lods
mov
mov
add
loope
or
aaa
scas
dec
push
shlb
and
sbb
mov
push
xchg
iret
ss
subb
mov
addr16
mov
fsub
mov
out
mov
cmp
push
repz
and
cmpsb
mov
push
pushf
push
fsubl
int
mov
test
in
sahf
repz
pop
leave
pop
incb
mov
sub
xor
lret
rcr
subl
sub
scas
sbb
pop
ret
loop
xchg
inc
fbstp
add
mov
cli
aad
call
add
jno
enter
push
mov
int
les
jg
outsl
fisubl
cli
adc
sub
shr
cmc
testw
jp
adc
xchg
inc
out
and
inc
xor
cmp
dec
or
xchg
lea
in
pop
fbstp
rorl
lods
sbb
cmp
lret
xor
les
xchg
pop
push
dec
imul
jl
cld
outsb
fdivrp
push
out
test
push
jle
mov
repz
in
mov
orl
inc
mov
lds
adc
pop
je
xchg
push
mov
dec
mov
ja
mov
mov
hlt
cli
mov
xchg
jbe
push
sarb
mov
leave
fiadds
repnz
dec
jae
lcall
sub
push
sub
insb
adc
stos
and
clc
popa
loope
push
sbb
sbb
ror
cmpsl
int
outsl
in
pop
roll
les
xor
je
dec
stos
dec
sbb
and
dec
sub
mov
push
arpl
fwait
stos
in
adc
push
dec
js
testl
imul
mov
mov
dec
and
lds
std
movsb
push
cli
sbbb
imul
sarb
pop
in
push
int3
js
push
or
jns,pn
xchg
push
pushf
sahf
lea
loop
outsl
in
pop
add
sbb
mov
test
rorl
or
jb
add
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
ja
and
or
jp
lods
inc
in
dec
arpl
scas
shr
xchg
mov
push
jmp
dec
pop
roll
cmpsl
jge
imul
push
addr16
adc
mov
mov
jge
ja
mov
push
sbb
adc
xchg
js
orl
addr16
cwtl
add
imul
mov
mov
clc
stos
in
out
ljmp
arpl
inc
pop
lret
cmp
push
popl
mov
push
icebp
fistpll
inc
arpl
test
and
add
and
test
push
push
push
leave
loop
add
loop
mov
daa
outsb
adc
mov
outsl
bound
and
jo
popa
test
imul
sbb
pop
out
pop
add
add
icebp
rcrb
dec
test
iret
and
mov
lods
ret
je
aaa
enter
dec
mov
fbld
push
aas
test
mov
mov
gs
inc
sbb
lahf
ja
into
sarl
pusha
call
enter
int
hlt
repnz
mov
cmpsl
cmp
dec
adc
popf
test
sub
xchg
xlat
pop
and
adc
sbb
orb
and
lods
cmp
push
jae
and
lahf
inc
xchg
xchg
test
and
jmp
repnz
ja
jo
adc
incb
push
les
pop
aad
mov
dec
cmp
inc
ret
xchg
cwtl
mov
xlat
testb
mov
xor
add
shll
icebp
ljmp
in
push
and
pushf
gs
ret
xchg
lds
adc
dec
out
dec
or
popa
pop
mov
inc
jne
je
and
push
and
mov
fcomps
mov
cmp
cli
fisubrs
push
cmpsb
call
movsb
test
mov
fldl
and
pop
xor
icebp
in
and
xor
jnp
mov
jecxz
aas
scas
xchg
jb
out
arpl
push
mov
push
push
xorb
sbb
fs
shrb
sbb
out
push
addr16
xchg
das
pop
and
lds
stos
dec
or
wrmsr
inc
adc
xlat
mov
dec
dec
cmp
push
jae
lret
cmc
hlt
lods
inc
aas
shlb
call
xchg
cmp
sbb
test
mov
cmpsb
jne
cmp
lret
add
shll
push
popa
mov
and
out
cltd
mov
pop
popf
imul
fimull
xor
mov
dec
jmp
inc
idiv
stc
dec
lock
and
arpl
add
stos
in
mov
inc
mov
jo
in
scas
aad
fimull
jp
jo
ds
push
dec
arpl
xchg
repz
pop
insl
fidivrs
in
pop
lods
adc
xchg
addl
dec
ja
mov
mov
add
shll
xchg
ret
sub
imul
push
sub
cld
adc
pusha
sbb
xchg
mov
xchg
jle
lret
out
dec
push
or
jmp
dec
stos
xor
xor
fxch
pusha
cmp
xor
in
mov
stos
sub
add
push
mov
or
and
mov
in
ljmp
fildl
or
outsl
scas
fcmovb
sbb
push
jl,pn
movsl
or
aaa
pop
lds
mov
push
cmp
stos
data16
ret
lcall
jnp
mov
adc
jge
sahf
ja
inc
repz
test
fmulp
pop
push
cmp
pop
push
mov
fs
pop
push
cwtl
icebp
inc
daa
add
stos
loopne
aam
adc
xor
mov
leave
xchg
and
mov
inc
add
in
mov
sbb
lea
push
push
xchg
jl
and
bound
jle
jp
fimuls
and
pop
jne
in
into
addr16
cld
faddl
cmp
aad
push
addr16
mov
fst
das
pop
outsl
ficompl
dec
xchg
repnz
dec
out
cmp
aad
mov
pop
and
aad
xlat
repnz
mov
ret
mov
push
lea
in
add
arpl
xor
icebp
xchg
or
dec
adc
cmp
in
adc
stc
lea
inc
jnp
xor
mov
pop
xchg
mov
outsl
stc
fcmovb
pop
xchg
jbe
sub
adc
and
sahf
xor
fscale
mov
xchg
jns
insl
mov
dec
cmp
mov
or
jns
or
lods
subl
es
ja
addl
cwtl
mov
fisttpll
out
cmp
icebp
push
mov
xor
addb
or
aas
sahf
xchg
and
and
cmp
cld
fidivl
inc
pusha
jo
dec
xlat
testl
fiaddl
cvtdq2ps
cmp
mov
insl
popf
int
test
sub
das
add
stos
cmp
jge
jns
popa
movsl
dec
xor
mov
and
dec
movsb
outsl
gs
mov
popf
or
jns
mov
sub
cltd
and
movsl
aad
xor
or
pop
push
loope
mov
popl
ret
inc
decb
lahf
shlb
xchg
int
es
std
stos
jo
xor
dec
push
daa
xchg
inc
and
sahf
lods
sar
rolb
ja
cmpl
inc
xor
ret
mul
xchg
rcr
repnz
ret
ja
loop
cwtl
dec
xor
leave
into
std
sar
lea
leave
movsl
enter
loopne
jecxz
dec
xor
notl
in
or
jp
jge
xchg
and
xor
fs
pop
pushf
mov
pop
inc
lret
jmp
push
pop
flds
mov
mov
insb
xorl
mov
aad
mov
cmp
sbb
inc
jle
pop
and
movsb
aam
shl
pop
xchg
fbld
and
mov
inc
fcomi
inc
popf
lock
sarb
jle
stos
adc
adc
mov
dec
mov
cmp
pop
decb
jmp
rcrb
loop
add
lret
push
mov
clc
adc
repz
mov
js
pop
dec
lds
and
negb
and
adc
sbb
xchg
lahf
mov
sbb
jle
pushf
test
hlt
sbb
inc
cmp
aam
ja
dec
test
lret
cmp
dec
pop
ljmp
into
hlt
mov
jo
test
push
ja
xor
mov
rorl
orl
sub
adc
mov
cwtl
cmp
test
test
fcmovu
mov
jmp
ja
cmp
jmp
out
xchg
jmp
pop
adc
ljmp
fsts
and
fcomip
sbb
adc
cs
repnz
adc
loop
into
adc
in
jp
add
xchg
popa
xchg
add
xor
ja
xor
inc
mov
mov
mov
pusha
jp
xchg
bound
inc
inc
mov
out
jnp
cmp
daa
adc
cwtl
and
xor
adc
push
leave
and
fidivrl
mov
cmp
js
dec
pop
ret
sub
pushf
dec
mov
out
lds
push
dec
lods
fwait
adc
jno
cmp
dec
push
inc
pop
fwait
mov
dec
dec
aaa
push
rolb
imulb
sbb
push
icebp
shlb
rclb
test
xor
push
pop
cmpsb
aaa
das
aad
loop
mov
xor
ljmp
inc
sbb
decb
iret
dec
jnp
fs
pop
pop
mov
je
outsl
dec
repz
push
lds
cmp
mov
lods
inc
mov
xchg
loope
inc
pop
dec
xchg
xchg
mov
xchg
pop
add
xchg
das
mov
mov
insb
shll
xor
popf
sahf
pop
mov
xor
ss
stos
dec
pop
sub
mov
nop
fidivrl
sub
insb
add
dec
sbb
jns
or
inc
scas
cwtl
insl
fmull
mov
mov
push
dec
mov
jmp
sub
jl
adc
and
mov
inc
push
jnp
orb
add
mov
xchg
shr
xchg
mov
shlb
imul
cmp
fld
pop
or
sub
aaa
cs
in
fldl
mov
xchg
cld
add
stc
or
jnp
jp
cld
mov
inc
add
fstpl
xlat
xor
mov
xchg
in
or
adc
cmc
mov
test
cmc
lcall
je
xchg
pop
lea
cwtl
test
cmp
std
fimull
add
movsb
add
xchg
lret
int
mov
inc
dec
xchg
lcall
nop
test
jae
xor
adc
es
fimull
pop
es
cwtl
sub
pop
dec
sbb
fcoml
inc
leave
out
pop
sbb
loop
or
xchg
inc
inc
jnp
adc
bound
test
mov
rorl
or
lods
push
xchg
test
pushf
ljmp
out
pop
scas
mov
dec
orb
insb
or
icebp
rcrb
adc
les
xlat
fwait
movsb
pop
rcl
pop
aad
xchg
fstpl
js
mov
lds
scas
jp
sub
mov
call
test
mov
sub
test
fimull
mov
adc
test
rcrl
adc
dec
add
jp
xchg
pop
out
insl
outsb
adc
or
je
fstpl
fistpll
push
mov
aas
mov
cmc
dec
stos
jbe
or
lods
mov
pop
sub
xchg
pop
jno
jno
rcrb
add
stos
mov
push
imul
or
xor
dec
aaa
push
out
sbb
adc
dec
xor
outsl
push
mov
jmp
xchg
or
mov
pop
cmp
or
push
arpl
arpl
adcl
test
mov
cmp
rcl
out
mov
fwait
jne
cmp
mov
add
pop
addr16
or
jae
cmp
pop
xor
jne
in
or
stc
js
aaa
fmuls
sbb
mov
shrb
xor
mov
rclb
loope
out
fldenv
cmpsb
sub
test
out
dec
icebp
or
ss
je
mov
inc
xchg
jmp
inc
fmuls
dec
mov
inc
pop
lds
xchg
dec
sbb
aaa
mov
and
jns
fldcw
sti
sahf
ds
adc
cmp
push
scas
xchg
adc
xlat
shll
lahf
daa
notb
dec
mov
mov
mov
or
es
add
mov
les
lods
aaa
xchg
xor
ret
arpl
rolb
lea
test
movsl
shl
fisttpll
push
jge
mov
or
push
pop
mov
mov
xlat
mov
or
hlt
out
add
fwait
stc
mov
mov
sbb
shl
push
push
lds
imul
inc
jo
cld
shrb
pop
int
jmp
mov
rorb
sbb
shl
imul
jmp
std
mov
jmp
push
jmp
inc
dec
mov
push
scas
and
rolb
je
pop
les
sbb
push
jae
movsl
subb
lcall
pusha
pop
inc
mov
cmp
pusha
cmpsb
pop
dec
sha256msg2
xchg
stc
cmpsl
stos
mov
push
xor
sub
lret
in
xlat
add
cmc
ret
std
xor
adc
adc
and
mov
fimull
sub
mov
pop
test
loope
dec
xbegin
push
add
jbe
xor
pop
inc
addr16
out
rorb
es
jns
adc
lret
daa
orb
pushf
pushf
mov
loop
jp
jge
ret
cld
repz
outsb
fsubrs
int3
rcll
inc
cwtl
xchg
or
sub
fwait
add
aad
cli
shll
in
shrb
jl
jecxz
sub
mov
xchg
stos
mov
pusha
mov
cs
push
xor
sub
sarl
out
mov
mov
xchg
daa
int
addr16
pop
jae
dec
dec
arpl
aam
sub
sahf
and
pop
cmp
adc
mov
outsl
aad
repz
inc
test
cwtl
jns
lcall
shll
jbe
xor
lods
push
mov
or
sub
mov
cltd
cmp
lods
mov
scas
adc
inc
imul
xchg
not
ds
mov
je
subb
fsubrp
incl
lods
sbbl
int3
mov
mov
jl
icebp
jnp
mov
rcrb
mov
sub
fs
mov
adc
jge
fstpl
adc
push
dec
addr16
pop
nop
cmc
adc
mov
xchg
test
ds
pop
xchg
pop
push
shlb
push
incb
pop
add
mov
mov
movsl
inc
mov
shlb
push
or
rolb
mov
mov
sbb
jmp
es
mov
les
mov
push
test
jae
aas
dec
xor
pushf
xchg
sub
pop
mov
sti
out
shrb
pushf
xchg
lods
inc
into
cmc
fistl
pop
mov
and
addl
mov
adc
xchg
cmp
rol
cmp
scas
loopne
jecxz
push
cmp
ret
jmp
push
mov
push
daa
ljmp
lock
pop
adc
lock
sub
sbb
pop
adc
sbb
xor
loop
jecxz
or
jnp
ret
inc
aam
int3
clc
mov
sub
cltd
aaa
dec
sub
cmp
dec
xor
mov
fimull
or
jns
mov
call
cmc
fcomps
cltd
outsl
mov
cld
mov
mov
jle
les
inc
xchg
xor
insb
sbb
jmp
mov
leave
rcl
sbb
xor
xchg
cmpsl
mov
xchg
test
sbb
movsb
fwait
loope
pop
int3
cs
shl
xchg
lds
lret
mov
xchg
icebp
notb
and
mov
cmp
sub
lds
pop
sti
test
mov
pusha
fs
add
xorl
andb
adc
xchg
push
in
inc
cld
adc
addr16
jbe
inc
divb
xchg
xchg
test
add
icebp
push
sbb
fwait
dec
popa
orb
les
scas
xor
fisubrs
enter
sbb
aad
mov
push
outsb
cwtl
pushf
test
into
in
sbb
ja
jno
pop
mov
sti
xchg
and
mov
cmp
fwait
aad
repnz
insb
mov
pop
mov
enter
scas
inc
sbb
and
cmpsb
imul
push
inc
mov
push
pop
dec
xchg
pusha
and
xchg
aam
and
std
stos
mov
push
mov
mov
jbe
bound
int
dec
call
pusha
aam
call
f2xm1
fidivrl
cmpsl
movsl
xor
clc
mov
dec
lret
loopne
pop
int3
and
hlt
bound
push
push
test
mov
cld
das
xor
outsb
xchg
mov
push
inc
leave
fs
cmp
lcall
push
in
fidivl
jp
repnz
rorl
pop
push
pop
shrb
dec
adc
adc
mov
pop
sub
inc
mov
or
nop
mov
neg
andb
mov
mov
inc
inc
dec
sub
shl
xor
inc
mov
fimull
in
lock
ljmp
out
sub
jmp
push
xor
stos
jns
loop
mov
mov
addr16
cwtl
arpl
pop
or
and
sub
negl
fidivs
mov
push
scas
pop
dec
imul
cmp
add
and
jp
mov
cli
aaa
ficomps
dec
daa
lea
icebp
inc
out
aaa
or
mov
mov
adc
or
xchg
cmpsl
sbbb
pop
xchg
movsl
mov
push
js
adc
in
dec
xor
inc
std
jb
ret
push
adc
push
stos
push
inc
mov
psraw
pop
enter
cli
idiv
adc
adc
daa
pop
sub
lods
into
lcall
mov
test
dec
mov
adc
sbb
sarb
sub
jmp
les
push
notl
sahf
mov
aam
arpl
add
ret
inc
test
push
mov
jg
push
cli
mov
jmp
add
fwait
icebp
mov
loope
insb
mov
add
sbb
out
lcall
pop
or
cmc
jno
das
insl
js
cmp
mov
mov
jae
sbb
xchg
xchg
mov
xor
jecxz
fdivr
and
pop
icebp
add
lahf
in
fsubrl
push
dec
cmp
bnd
arpl
dec
or
inc
fstps
jle
cmp
mov
dec
cmp
and
mul
icebp
xlat
adc
bound
dec
gs
push
scas
push
mov
out
lret
sub
clc
popa
decb
sbb
inc
mov
sub
sub
out
adcb
enter
xor
push
icebp
push
int3
leave
addr16
test
cmpsb
inc
mov
add
ss
dec
cmp
loop,pn
dec
lds
dec
je
pop
fildll
cwtl
cmp
push
xchg
mov
push
push
xchg
ss
clc
fcoml
jo
lods
sub
cmp
xorb
mov
mov
or
mov
out
sti
pop
mov
fcmovne
pop
iret
and
fisubrs
xor
push
loop
push
mov
add
xchg
pop
and
cmp
pop
fiaddl
and
jb
gs
or
cmp
lds
cs
sbb
imul
enter
lea
pushf
mov
stos
and
mov
jno
adc
je
inc
imul
mov
sahf
mov
mov
lret
mov
adc
lahf
inc
push
popa
outsb
les
in
push
lret
aam
xor
fisttpl
push
mov
jne
mov
xchg
cli
arpl
ret
inc
lods
pop
movsl
mov
dec
or
adc
outsb
sti
out
ficomps
ljmp
mov
adc
stc
push
xchg
leave
lods
lds
mov
cmpsl
shll
int3
cmp
outsb
jmp
xor
cwtl
mov
fisubl
xchg
das
xchg
fcoms
lds
adc
pop
sub
testl
test
stos
mov
ret
sti
push
rcrl
mov
roll
mov
dec
fidivrs
cmc
fistpl
mov
repz
mov
ljmp
repnz
ss
lock
mov
enter
mov
lret
jg
jle
push
xor
lods
xchg
int3
adc
xor
pop
int3
add
stc
push
cs
lret
xor
sahf
or
mov
sbb
inc
cmp
bound
aaa
insb
cwtl
xor
mov
push
mov
sbb
out
in
movsb
jb
mov
and
mov
orl
lock
jne
repnz
lret
mov
pop
pusha
ljmp
and
mov
ret
movsl
cmp
jo
lret
push
xchg
leave
jl
shl
es
stos
and
hlt
xchg
lock
dec
jle
push
add
popa
push
mov
lds
mov
popa
test
ret
daa
fnstcw
xchg
ljmp
iret
pop
cs
mov
ss
jmp
shl
xchg
xchg
in
jle
mov
sub
mov
sbb
stc
test
nop
ds
ds
mov
sub
mov
in
xchg
xchg
notl
fcoms
dec
test
fcoms
jl
xchg
mov
pop
mov
push
push
inc
adc
push
xchg
sbb
cld
lds
adc
and
pop
lahf
cmp
sbb
cmp
mov
pop
pop
jle
and
cli
jno
shl
lahf
es
arpl
bound
or
aad
jp
mov
mov
jae
cmpsl
add
sbb
mov
dec
cmp
xchg
xor
rol
cmc
pop
inc
fwait
or
in
call
and
ds
mov
into
xchg
movsl
int
pop
fsubr
lret
js
leave
mov
push
dec
jg
das
mov
int3
or
lea
dec
ds
mov
fcomps
mov
jmp
stos
adc
cmp
cmp
pop
jg
or
daa
cld
popa
into
push
pop
addr16
mov
test
add
mov
jmp
imul
cmp
sbb
add
inc
icebp
sbb
push
test
les
sbb
movsb
or
shl
xchg
jne
int
lods
mov
lahf
mov
sbb
ret
add
aam
mov
xor
cld
pop
jb
shl
adc
int3
out
jmp
sti
jl
and
push
sahf
aaa
mov
clc
sub
mov
fimuls
ss
mov
into
push
popa
pushf
aas
scas
lods
adc
xor
out
loope
lret
rclb
outsl
and
jp
cmp
dec
and
xor
inc
in
das
shufps
movsb
fnstsw
add
fisubl
xor
arpl
adc
fisubl
xor
xchg
cmp
testb
fwait
ja
cmp
dec
and
ret
fists
enter
pop
in
lret
pop
lahf
or
and
stos
cmpsl
add
or
jle
xor
or
loopne
shrb
pop
fldenv
mov
push
cmp
xor
ds
mov
in
aam
icebp
sub
push
mov
sbb
adc
dec
xchg
xor
mov
mov
push
xchg
lds
pushf
cwtl
and
dec
loop
push
lock
adc
jg
mov
cmp
mov
fbstp
addr16
inc
icebp
push
cmpb
mov
sub
or
adc
add
movsl
cld
inc
adc
jne
stos
mov
mov
mov
fdivr
mov
pop
add
pop
out
insl
and
pop
push
mov
js
pop
push
loope
pop
roll
sub
in
loopne
and
sti
cmpsl
push
int3
lods
adc
push
movsb
jne
xchg
lret
ret
add
gs
mov
nop
shl
aad
dec
dec
xor
mov
cmc
outsl
outsb
jg
daa
shl
fldcw
mov
cmpsb
jge
sbb
lds
inc
sbb
enter
push
std
inc
push
aad
jp
or
dec
rcrl
cmpsb
jns
or
inc
in
fnstsw
out
cmc
out
push
stos
or
jp
in
push
les
lea
jmp
ret
mov
lcall
mov
into
fld
xor
int3
mov
fistps
lahf
insl
ja
or
cwtl
loop
movsb
sbb
aaa
stos
mov
repnz
jae
jge
in
gs
pusha
stc
in
es
jmp
ja
imul
ljmp
inc
es
xchg
cwtl
xchg
mov
mov
pop
dec
pusha
push
push
inc
dec
jo
mov
sbb
mov
add
rorb
cltd
and
pop
sbb
xor
cmpsb
pop
movsb
mov
lret
scas
in
and
xor
pop
mov
add
mov
int3
xlat
jbe
dec
stos
xchg
pop
orb
mov
lock
insb
mov
inc
fmull
jp
jb
stos
mov
aas
les
sub
fstl
test
lret
inc
mov
pushl
test
hlt
push
mov
movsl
daa
cltd
mov
popa
push
fdivrs
mov
insb
lock
or
shlb
inc
aaa
popf
mov
push
push
mov
inc
add
push
sahf
pusha
outsb
int
xor
xchg
lahf
stos
cmpsl
sti
int3
push
addr16
xor
pop
lret
test
ret
test
fwait
outsl
insb
movsb
sbb
push
and
sub
mov
es
adc
loopne
xor
aad
cmp
and
xchg
xchg
movsl
xchg
loope
jne
sub
clc
lods
jb
adc
add
frndint
inc
cmp
mov
lods
sbb
aaa
fcoms
call
jnp
xchg
into
ljmp
push
orl
fs
cmp
cmc
sub
fwait
xor
data16
lcall
fcomip
adc
lahf
xchg
mov
and
int
cmp
xchg
xor
inc
data16
cmp
sbb
push
mov
rcr
xlat
xchg
js
mov
dec
mov
pop
xor
imull
gs
sub
xlat
inc
push
cmp
cmp
cmp
or
testl
adc
gs
mov
cmpsl
ja
xchg
jne
test
in
sbb
mov
jno
xchg
sarb
aaa
in
or
arpl
and
dec
sbb
imul
mov
fidivrl
inc
xor
cmpsb
in
sub
bound
push
lcall
push
cmpsb
mov
inc
ret
push
inc
fiaddl
add
sbb
filds
mov
sub
cltd
aad
and
cmp
add
jns
mov
in
out
test
addr16
lods
lds
or
xor
jmp
mov
enter
or
and
jmp
loope
push
movsb
iret
inc
add
fs
out
into
cmp
dec
repz
push
push
mov
xor
add
arpl
es
xchg
lret
out
mov
lcall
nop
shll
lock
rolb
aam
fsubr
mov
adc
xorl
inc
sbbl
sbb
int
out
aas
dec
js
sbb
outsb
pushw
add
mov
testl
cmp
daa
adc
jne
cmpsl
pop
fwait
and
outsb
mov
adc
mov
adc
in
adc
push
fdivrp
cmp
int
push
stc
movsb
push
out
shll
imul
bound
call
fstpl
xchg
mov
daa
repz
test
es
dec
adc
inc
push
hlt
dec
pop
pop
jae
aad
cmpsb
mov
idiv
pop
imul
mov
cmpb
pop
sub
inc
ja
fildll
std
addr16
pop
sbb
sbb
push
jecxz
push
loopne
dec
jp
cmc
lds
add
xchg
stos
cmp
stos
push
ret
cs
cmp
sahf
imul
loope
and
sub
insl
or
aad
mov
fbstp
sub
dec
jle
jmp
sbb
push
popa
out
cli
push
jg
mov
scas
inc
mov
mov
lods
repnz
pop
fcoms
lcall
mov
push
je
out
in
les
lea
mov
adc
fimuls
leave
sbb
mov
mov
xchg
ss
cli
ja
aad
mov
jno
pop
lahf
inc
push
adc
stc
pop
fnstcw
xchg
in
xchg
or
dec
and
dec
outsb
push
pop
sbb
inc
and
clc
je
sbb
fwait
stos
sub
fs
cltd
dec
ds
sbb
push
mov
out
in
rcrl
mov
lock
mov
les
iret
inc
push
hlt
or
ficoml
mov
mov
sbb
jns
adc
mov
shll
loope
int3
cwtl
jp
popf
push
jnp
lret
test
sbb
enter
push
cli
dec
shll
jns
lods
subl
jmp
mov
mov
loope
jne
add
pusha
mov
fildll
inc
out
icebp
sub
pop
or
movsb
pop
ja
cwtl
fcoms
sub
cs
sbb
test
das
push
adcb
cmp
leave
gs
ljmp
add
push
cld
xchg
mov
mov
out
std
jae
and
sbb
sbb
add
mov
jg
gs
loopne
aad
push
stos
pop
push
or
hlt
sqrtps
add
add
xor
add
ret
ljmp
push
fdivl
xorl
fwait
rcll
pop
and
call
dec
mov
sbb
dec
xor
xor
out
movsl
fs
sub
mov
aas
inc
jns
mov
or
dec
sbb
setns
sbb
ljmp
out
adc
xor
lock
filds
call
out
out
xor
pushf
sbb
jnp
sbb
pop
in
or
pop
mov
add
loope
pushf
sub
pop
xor
or
stos
adc
les
pop
ss
push
adc
cld
dec
sbb
jle
rolb
pop
jmp
cmp
pop
mov
sub
cmp
rclb
dec
dec
push
jb
movsl
add
gs
xchg
lcall
push
ss
dec
pop
dec
push
mov
and
jbe
es
jo
push
scas
inc
les
cmc
mov
jb
popf
outsb
mov
out
xchg
cmp
and
imul
popa
arpl
cltd
int3
icebp
cmc
inc
movsb
negb
and
outsl
loop
sti
adc
mov
fadds
inc
fimull
sub
push
ds
dec
push
jecxz
dec
pop
dec
dec
ret
sub
int3
aas
xchg
adc
loope
cmp
mov
shll
cltd
mov
js
push
shlb
mov
or
push
cltd
ficoml
jp
mov
inc
hlt
add
dec
rcrl
adc
cmp
stc
mov
decb
shlb
test
aad
mov
loop
je
adc
or
sbb
insl
lcall
sbb
dec
mov
imul
call
int3
rclb
pop
mov
fldt
aad
ror
insl
std
and
shrb
sarb
jecxz
shlb
pop
lea
std
int
pop
xor
mov
push
pushf
push
cmpsb
dec
or
test
xor
je
sbb
icebp
sub
xchg
mov
jns
fmul
shrl
lods
jo
cmp
outsb
sub
loopne
xor
insl
mov
test
add
je
or
rorl
cmpsb
inc
xor
jno
out
fnstenv
imul
bound
out
sub
rcrl
pop
adc
arpl
sbb
sub
xchg
xor
je
mov
jg
and
dec
cmpsl
mov
fldcw
jl
mov
dec
outsl
jbe
inc
cltd
xor
push
addr16
and
std
loopne
dec
push
inc
sbb
scas
adc
sbb
mov
pushf
sbb
adc
int3
repz
repz
cltd
push
adc
shll
dec
mov
inc
jle
mov
pop
jb
jl
add
xor
mov
or
cs
push
dec
push
sbb
pop
test
stc
jo
dec
pop
adc
ss
aad
dec
push
test
adc
xchg
cwtl
and
mov
and
aad
inc
jo
mov
add
sub
into
pop
repz
fldcw
cmp
ret
fists
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
test
loope
jp
pop
jp
fisttpl
fdivrl
dec
arpl
incl
pop
cmp
in
dec
lods
lret
loopne
xchg
add
lock
lret
xchg
insb
cmp
adcb
dec
adc
push
cmp
adc
push
xor
adc
lds
in
mov
dec
and
gs
out
cmc
rolb
aad
lods
dec
stos
adc
push
cmpsb
xor
ror
push
cltd
push
cmp
lcall
andb
xchg
inc
lods
out
insl
inc
testl
pop
cmpsb
cli
or
das
mov
push
lahf
push
xchg
mov
and
mov
in
pop
xchg
add
sbb
xor
rcr
mov
mov
add
sub
pop
fs
jae
fdivrs
adc
add
mov
sub
test
sti
mov
ficoms
xchg
push
aam
or
adc
mov
mov
out
mov
lcall
cld
jp
sub
and
push
and
inc
movsb
nop
out
iret
and
xor
aad
outsb
int3
rorb
lret
push
data16
imul
ficompl
mov
and
cwtl
xor
enter
test
jae
insl
jge
push
jle
mov
lret
mov
xchg
nop
mov
fidivrs
cmpb
mov
rclb
xchg
popf
cmp
loop
in
test
or
rolb
push
mov
insb
push
aad
cmp
sub
xchg
xor
inc
mov
clc
add
mov
xchg
aam
iret
push
sahf
push
lahf
dec
jns
inc
cmovnp
jl
out
in
and
xchg
sub
enter
mov
stos
into
pop
outsl
stos
aad
flds
test
pop
sbb
icebp
stos
shlb
sbb
mov
out
aam
iret
shll
cmc
push
xor
push
dec
xor
ret
cmp
cmpsl
test
test
mov
cmp
jp
mov
iret
mov
add
push
fsubl
sub
std
sbb
adc
mov
xor
das
mov
lret
sbb
fwait
aad
cli
sti
pop
dec
sub
clc
mov
out
adc
adc
mov
and
aad
or
das
xor
lret
or
aas
in
sarl
mov
sbb
leave
leave
inc
or
xor
jne
mov
jge
outsb
divb
mov
in
sub
gs
xchg
jo
mov
push
add
je
cmp
frstor
test
gs
jp
popa
cs
mov
popa
test
or
pop
test
imul
or
or
xor
dec
sub
shrb
or
jge
xchg
and
loopne
cmpsb
inc
int
push
arpl
cli
inc
cmp
notb
jle
push
arpl
mov
jns
nop
mov
mov
ss
xchg
imul
repnz
or
xchg
scas
push
test
cmp
shlb
stc
push
mov
js
mov
sub
add
sbbl
lcall
xchg
idiv
mov
mov
inc
cli
fcompl
in
scas
jae
hlt
gs
adc
lea
aas
mov
mov
movsl
fsub
adc
ret
mov
int
xor
adc
and
jle
and
jl
leave
push
xor
lret
mov
cmc
push
addr16
fstps
hlt
mov
xor
mov
jno
sbb
jg
sub
xor
out
repz
push
outsb
mov
cmp
and
roll
jmp
cmp
and
inc
dec
addb
in
push
adc
in
int
addr16
push
lds
out
sahf
call
adc
pusha
js
inc
push
not
adc
jmp
mov
mov
ds
mov
aam
cwtl
or
imul
and
or
dec
icebp
dec
xor
loop
in
jmp
push
cs
jp
testl
int
out
push
cmp
push
cltd
jae
mov
sahf
clc
fists
xchg
mov
jne
and
out
jecxz
ja
hlt
mov
sub
aas
or
sbb
cmpsb
xor
inc
dec
outsl
popf
xor
aad
cli
jne
pushl
mov
icebp
gs
jnp
xchg
push
mov
cli
sub
or
bound
shlb
cltd
pushf
and
mov
shll
sub
xor
pop
add
cmpsl
stos
pusha
push
xchg
sbb
add
adc
sbb
int
add
jns
xchg
sub
test
inc
jno
scas
test
push
mov
subl
xchg
jbe
es
pop
cli
inc
scas
fstp
stos
mov
mov
jge
addr16
sahf
out
loop
adcl
fildl
pushf
push
mov
ja
ja
push
xor
movsb
mov
stos
pop
jp
fisttps
jmp
mov
and
jmp
jae
iret
jp
cmpsl
lods
daa
lahf
inc
std
lea
add
ja
adc
lods
pop
cmpsb
mov
adcl
cmpl
call
mov
into
sub
inc
push
fwait
fwait
push
fnstcw
addr16
mov
and
loope
mov
daa
fisttpl
xchg
sub
adc
mov
dec
xchg
iret
gs
inc
dec
mov
inc
push
push
sub
lret
dec
dec
dec
inc
lahf
cmpsl
pop
push
enter
out
cmp
bound
add
test
or
jns
mov
mov
sahf
sbb
aas
mov
dec
sti
dec
aaa
fnstcw
mov
add
lods
cltd
pushl
xchg
mov
jle
jbe
adc
cmpsb
std
xlat
or
sub
or
pop
test
fcomps
mov
cwtl
ss
pop
jae
aaa
cli
pop
es
test
in
stos
mov
loope
lods
aas
sti
pop
shll
cmp
fldt
aad
cmp
mov
scas
mov
xchg
movsb
data16
imul
add
add
ret
inc
sbb
sub
cmp
pop
out
jp
add
mov
enter
sub
mov
jle
insb
ljmp
pop
pop
sub
inc
fiaddl
mov
and
add
dec
ljmp
stos
mov
jmp
xchg
stc
pushf
btr
leave
mov
cmp
sbb
cli
lcall
mov
pop
adc
jne
push
daa
aaa
loop
int
mul
mov
jb
mov
mov
mov
xchg
div
or
mov
sbb
insl
lret
lds
xchg
jp
and
cmp
xor
jecxz
insb
pop
or
inc
or
adc
pop
iret
int
jp
movsl
call
shlb
jno
out
mov
andl
shlb
xchg
mov
jle
fwait
mov
or
insl
fsts
sub
pushf
mov
mov
sub
sbb
cmpsb
mov
flds
stos
cmp
mov
mov
iret
lahf
stos
jecxz
std
lahf
mov
cltd
scas
sbb
call
mov
sbb
cltd
mov
jg
xchg
jns
ficoms
int
popa
movsl
mov
cmpsb
cmp
repz
test
sub
jg
cs
pop
sub
insb
ret
cmp
push
push
iret
inc
or
cwtl
push
dec
scas
imul
pop
mov
push
jno
mov
rcr
cs
cmc
push
and
insb
push
mov
lods
mov
stc
xchg
mov
jnp
test
imul
scas
ja
fisubs
out
outsl
popf
xor
xchg
js
enter
dec
loop
rolb
pop
iret
imul
loope
pushf
mov
repz
fimull
add
mov
or
xchg
js
pop
add
lea
incb
pop
ljmp
jg
cmp
outsl
movsb
mov
sub
mov
cli
das
call
adc
loop
out
dec
push
mov
xlat
je
mov
popa
mov
push
mov
daa
rorb
mov
inc
or
adc
rcr
cli
fdivs
popf
dec
out
mov
aas
and
inc
ds
mov
addr16
pop
in
and
out
pop
ficomps
mov
cld
jbe
xor
fdivrs
and
xor
jne
in
cli
pushf
sub
cmp
inc
and
pop
cltd
mov
mov
insl
push
xchg
and
ss
inc
test
mov
jnp
icebp
fidivrs
subl
xchg
mov
jp,pt
sub
xchg
jno
dec
xor
aas
or
ret
adc
aas
mov
or
mov
pop
loopne
xor
push
jge
fwait
lahf
notl
push
jl
inc
pop
pop
xchg
enter
push
jg
aaa
jp
loop
stos
mov
adc
and
mov
mov
idivb
ja
loop
mov
add
in
dec
sub
dec
sub
int3
mov
sub
pop
daa
add
pop
cmpl
sbb
aas
sub
shrb
mov
rcrb
fimull
jns
or
flds
sbb
jnp
ljmp
inc
push
ret
out
adc
mov
push
push
dec
testb
xorl
nop
dec
or
je
pop
push
xchg
fucomp
das
outsb
xchg
imul
fs
mov
clc
arpl
dec
jno
jmp
push
mov
fisubrs
xchg
push
ficoms
fdivl
outsb
lods
cmp
or
out
call
arpl
jle
lret
mov
sahf
jmp
jo
lret
push
pop
dec
or
cmp
jg
pusha
test
cmpl
mov
lret
ljmp
jecxz
xchg
int
cs
adc
call
dec
and
les
mov
dec
call
or
inc
sbb
dec
inc
imul
xor
mov
cmp
aaa
hlt
mov
and
push
mov
jl
out
sub
in
out
push
mov
mov
push
test
out
sarb
and
lret
jb
push
nop
cmp
mov
loope
imul
sbb
push
xor
cmpsl
stc
pop
popa
loopne
clc
or
imul
lahf
jns
ret
mov
xchg
xchg
daa
cli
or
fs
push
int3
sub
mov
lahf
sub
out
insb
sub
jb
or
mov
rcrb
sub
jnp
addr16
dec
roll
fnstcw
push
arpl
in
fwait
push
jle
dec
inc
pop
pop
jbe
ret
mov
aad
push
pop
jle
dec
push
stos
add
dec
sub
push
repz
cmp
mov
ljmp
fsubr
pop
push
mov
xlat
and
mov
sub
loopne
mov
xchg
loop
jo
mov
push
cmp
es
sub
mov
pushf
push
mov
arpl
sub
add
aad
and
sub
enter
jle
mov
sub
scas
dec
push
mov
sti
aam
or
cmpsb
std
xor
mov
rclb
repnz
inc
mov
dec
add
imul
mov
dec
stc
stos
dec
out
stos
and
lds
ret
aam
clc
les
jo
pop
inc
push
jb
iret
xchg
lret
jl
lea
and
xor
dec
insl
inc
pop
fnstsw
mov
sbbb
fstl
cs
les
add
pop
frstor
adc
das
pushf
adc
bnd
pop
fidivl
xor
jne
dec
or
pusha
mov
cmp
push
cwtl
pop
fcomps
and
inc
and
subb
pop
out
sub
push
sub
out
push
leave
jge
xor
xchg
or
lret
push
std
mov
sbb
jl
inc
dec
cs
lfs
aas
mov
inc
incb
pop
jmp
or
xchg
add
mul
imul
test
inc
adc
into
cwtl
cli
or
mov
sahf
inc
add
xchg
out
gs
xchg
jno
je
aad
inc
enter
jge
mov
mov
popf
push
xchg
add
inc
lods
push
jmp
adcb
jmp
ss
inc
xor
scas
mov
and
enter
pop
imull
lods
adc
push
xor
bound
enter
mov
dec
mov
stos
mov
out
dec
mov
scas
cwtl
cmp
and
test
adc
insb
dec
push
inc
add
lods
pop
cmp
push
movl
outsl
inc
cmpb
mov
into
add
repz
ret
and
mov
faddp
mov
mov
stc
mov
sbb
into
mov
dec
dec
gs
mov
shll
mov
mov
rol
xchg
pop
rorl
xor
lcall
or
and
out
pop
pop
lret
jg
int
inc
sub
xchg
stc
mov
into
push
mov
in
mov
xor
dec
jnp
mov
xchg
push
inc
dec
gs
frstor
aas
pop
popa
mov
pop
cltd
movsb
mov
scas
aad
xor
test
inc
and
xchg
and
idivl
popa
push
xchg
pop
push
inc
scas
bound
push
pop
dec
and
stos
stc
push
dec
adc
lods
push
inc
sub
mov
into
gs
or
inc
jmp
and
cmpsb
pop
mov
sub
sbb
xchg
in
sub
push
jp
movsl
mov
ja
push
andb
pop
xor
sti
push
mov
cmpsb
xchg
mov
btcl
xor
xchg
add
cmp
mov
call
pop
jbe
dec
frstor
push
rclb
fstps
bound
jae
insl
in
sub
movsl
aam
test
cmp
push
add
in
ja
pop
aas
pop
xchg
sub
cs
ljmp
mov
xor
cmpsl
js
dec
mov
icebp
inc
testl
lea
pop
sbb
inc
mov
subb
pushf
mov
stos
rcrb
and
cmp
push
fsubr
xor
xlat
add
les
gs
sbbl
push
xchg
and
or
inc
inc
mov
dec
sbb
insb
add
cltd
push
addr16
ss
adc
rorl
std
jae
cmpsl
inc
leave
cmp
in
das
sti
dec
cmp
fisubrs
loopne
add
aam
and
jnp
fisttpl
xchg
push
mov
push
xchg
push
sbb
or
sbb
xchg
movsl
inc
sub
iret
jae
or
and
fistpl
xchg
in
je
repz
ja
ret
bound
adc
aad
cld
fdivl
fs
movsl
mov
xchg
adcl
dec
jmp
stos
and
push
test
or
adc
mov
pop
push
and
jbe
cli
dec
clc
mov
scas
xchg
mov
movsb
out
fistpll
aaa
adc
cmp
sahf
mov
xchg
out
sbb
cmp
in
mov
inc
lcall
dec
in
sub
call
test
aaa
dec
roll
xchg
pop
insb
into
push
pop
cmpsb
and
push
mov
flds
dec
iret
negb
and
lahf
inc
cmc
mov
cmc
jbe
inc
mov
out
aam
sub
out
jmp
rcr
fcoml
adc
pop
bound
in
add
push
inc
mov
push
lock
adc
mov
in
or
push
mov
jbe
adc
cmp
mov
lds
aaa
loopne
inc
js
insb
or
add
sub
enter
setnp
insl
insb
cmp
shrb
mov
push
std
xchg
fmuls
push
ljmp
jae
mov
push
push
popa
adc
mov
or
lahf
rcrb
xchg
jmp
lcall
fsubr
mov
repz
jmp
pushf
das
rcrb
lods
or
aas
mov
cli
push
movsb
or
jge
inc
xchg
insb
mov
das
pop
insl
xchg
sti
jmp
lods
push
mov
cwtd
sub
imul
push
and
fwait
inc
pop
les
lret
xchg
fimuls
xchg
cmp
xor
xor
sahf
inc
mov
arpl
aaa
fnstcw
xchg
xchg
xor
aad
cmp
mov
xchg
outsl
ds
fwait
cltd
xlat
adc
adc
push
push
lret
dec
std
jne
mov
push
rcrl
and
inc
jle
rorl
das
ret
loope
sbb
xchg
cmp
aam
pusha
scas
mov
jno
jno
push
or
jg
fucom
fcomps
sbb
cmp
iret
aas
pop
scas
aad
das
outsl
leave
inc
call
mov
cli
mov
cmp
adc
add
jle
fwait
movsl
add
push
lcall
daa
data16
mov
enter
lods
mov
bound
adc
add
push
mov
aad
std
or
xchg
push
cmpsl
push
xor
aaa
mov
fdivrs
jae
inc
rolb
rolb
mov
push
or
pop
into
mov
and
sbb
jne
in
and
orl
mov
clc
icebp
dec
ficomps
jecxz
and
lods
dec
adc
into
mov
pop
sbb
out
and
daa
inc
scas
dec
adc
dec
leave
xchg
fs
sub
cmpl
in
adc
push
cmp
xor
lea
sub
cli
xchg
jns
mov
fisubs
in
push
xor
inc
sub
das
cmp
imul
push
std
dec
shll
xor
pop
push
insb
fildll
je
in
lea
jnp
mov
inc
scas
lret
pushf
mov
push
leave
adc
cmpb
bound
cmp
xchg
pop
lods
inc
out
lods
mov
xor
ud0
sbb
mov
cltd
lcall
es
ret
ret
or
xchg
out
or
sub
inc
jp
dec
das
push
lods
lods
int3
push
stos
inc
mov
fdivl
sarl
dec
out
idivl
or
cltd
cmp
insl
adc
insl
dec
mov
jge
movsb
shl
dec
and
dec
test
nop
stos
pop
std
jns
xor
bnd
or
pop
cwtl
mov
lahf
into
inc
loope
and
xchg
sbb
shl
and
outsl
xor
push
stos
ds
add
cmp
inc
fisubs
mov
dec
and
hlt
sub
push
lods
mov
in
inc
sub
inc
fstpt
sub
adc
jmp
cmovp
cmp
pop
mov
sti
lret
test
sub
mov
popf
dec
hlt
mov
push
es
jo
cmc
fdivr
jecxz
das
cmpsl
lcallw
or
xor
loope
out
sbb
dec
xchg
jae
mov
xor
fs
repnz
add
cmpsb
jno
mov
push
lods
enter
xchg
push
hlt
out
and
jmp
fsubrl
outsl
xor
stos
outsb
sub
push
sub
fwait
xchg
lahf
pop
outsl
or
mov
sahf
push
fs
and
pop
repz
fs
or
inc
leave
jmp
outsl
sbbl
cmp
pop
dec
jmp
fwait
rcl
adc
pop
insl
inc
xor
in
xsha256
cmpsb
mov
jo
ret
lret
xchg
xor
int3
stos
mov
pop
aam
bound
rcrb
xchg
das
push
out
mov
push
sub
je,pt
insb
ret
pop
lea
xchg
call
cli
imul
push
lret
mov
adc
pop
add
ljmp
inc
movsb
bound
fdivl
inc
faddl
clc
iret
stc
mov
stos
add
call
pop
lcall
ss
xor
sub
push
neg
int3
mov
sbb
jne
jb
dec
fs
add
repnz
les
pop
arpl
xchg
push
out
inc
xlat
aas
icebp
push
decl
mov
jecxz
mov
sbb
call
pop
jne
pop
stos
mov
insl
pop
mov
mov
push
sbb
add
out
mov
cmp
sub
ss
push
pop
mov
mov
jne
sub
dec
xor
rolb
add
std
test
lods
sbb
ljmp
movsl
dec
icebp
leave
or
cwtl
or
dec
jp
pop
lcall
cmp
pusha
das
subl
clc
bound
mov
aad
adc
lods
push
inc
imul
mov
add
pusha
lahf
enter
push
gs
jge
jnp
cmp
out
leave
inc
xor
shl
dec
dec
xchg
xchg
pop
ret
std
push
sub
mov
and
add
aam
aad
cli
push
xchg
jecxz
adc
jne
ss
mov
mov
mov
and
jl
ret
mov
jne
jp
sub
push
rcr
out
ss
sbb
popa
nop
pop
sub
mov
fiadds
pop
repnz
stc
jo
xor
adc
call
mov
orb
popf
xchg
repnz
push
mov
lock
cmp
sub
jns
js
into
dec
mov
lods
add
inc
add
shlb
jnp
push
mov
xchg
cmc
mov
mov
mov
push
movsl
gs
push
push
mov
sub
mov
stc
mov
mov
mov
xchg
xor
mov
adc
rclb
or
push
add
mov
dec
leave
jae
out
in
int3
adc
notl
jnp
out
les
hlt
jns
mov
add
mov
hlt
mov
push
mov
lods
notl
test
jne
sbb
push
push
mov
pop
ss
cmpsl
xchg
icebp
and
push
xlat
jge
std
inc
adc
fldcw
push
pop
bnd
imul
push
ret
daa
mov
pop
in
push
and
gs
xchg
rcll
stc
xor
mov
lods
test
fldcw
insb
or
outsl
scas
arpl
std
add
mov
addr16
or
mov
jp
adcl
mov
sub
mov
jne
and
mov
addb
push
jmp
std
jl
and
pop
xchg
outsb
xchg
sbb
daa
xchg
cwtl
addr16
pop
adc
lds
addr16
fistpll
idivl
pop
and
xchg
or
or
data16
clc
mov
test
push
push
shlb
sbb
insb
shl
ret
or
xor
or
inc
shrl
lret
jle
mov
xchg
pushf
xlat
test
inc
inc
and
push
and
mov
enter
sub
and
push
arpl
jg
mov
rolb
aad
imul
xchg
sub
mov
and
out
jb
nop
outsl
push
in
outsb
jp
dec
cmp
faddl
inc
xchg
aam
sarb
adc
repnz
push
mov
mov
sub
push
scas
push
dec
mov
push
fucom
or
cld
shrb
jl
jne
repnz
cmp
inc
cwtl
out
mov
daa
mov
mov
xor
ret
sub
and
mov
jae
andl
sbb
popl
add
in
or
sahf
jno
inc
cmp
orb
sub
fistpll
push
cs
jnp
es
dec
dec
cmp
out
out
sbb
and
out
sub
cmpsl
int3
hlt
push
jae
test
jl
pop
test
loopne
call
push
push
inc
cli
rcrb
js
jns
ljmp
add
outsl
insl
mov
or
pop
in
fstl
mov
repnz
insl
je
repz
mov
dec
into
cmc
int
push
popf
cmp
leave
mov
cmc
push
mov
fcompl
jl
cmp
mov
pop
dec
mov
xchg
dec
nop
cs
xchg
or
ret
jb
inc
loope
gs
shll
xor
mov
addr16
fisubs
hlt
or
lahf
inc
inc
xchg
cltd
lods
cmc
sub
shr
lea
aaa
xchg
shll
xchg
sub
lret
or
jecxz
test
nop
mov
popf
mov
lret
gs
fucomip
imul
pop
inc
sub
push
adc
in
cmc
movsb
outsb
mov
mov
fcmovne
fstps
jno
stos
movsl
aas
xor
adc
rolb
dec
mov
sahf
div
pop
rorl
int3
adc
mov
sahf
mov
lcall
lock
jb
les
or
das
pop
fwait
push
repnz
cmpsl
xor
sbb
xchg
jnp
push
mov
les
mov
push
lcall
leave
pop
mov
into
arpl
data16
add
pop
xlat
push
adc
mov
fmuls
into
pop
jge
shlb
shll
and
cmpb
inc
lods
xchg
cmc
mov
test
clc
or
xor
shr
icebp
xor
stos
in
push
movsl
cmp
out
stos
lods
mov
sub
xor
shlb
add
into
pop
add
lds
rcrb
aaa
cmp
mov
add
cmp
xchg
insb
and
fmull
movsb
lahf
cmp
js
push
adc
mov
sarb
mov
jb
aas
pop
sbb
aaa
in
fiaddl
call
jae
sbb
sub
lahf
pop
inc
or
in
stc
rcll
popf
loopne
xor
aaa
aad
jne
pop
cmp
xor
add
pop
jbe
xor
mov
in
sahf
iret
dec
test
push
jmp
push
ror
adc
enter
add
jo
xchg
stos
adc
int
pop
gs
mov
sbb
ljmp
sub
clc
sbb
xor
pop
jl
xor
pop
cltd
fbstp
ds
push
or
ds
inc
sbb
aam
pop
fnsave
cmp
jns
or
push
insl
add
shll
xor
cmp
jnp
mov
icebp
sub
shl
addb
insb
jle
dec
jp
lods
xorb
xchg
adc
or
pop
inc
fstps
pushf
mov
or
xorl
call
sbb
cmp
test
lret
sar
ja
add
jns
lret
mov
insl
jb
jg
cmc
insl
lds
jle
and
push
jecxz
jge
push
mov
subb
dec
stc
lock
in
jns
fsts
test
mov
adc
mov
subl
jecxz
repz
iret
rol
hlt
nop
rclb
fidivrl
cmp
mov
or
dec
imul
push
pop
aaa
cwtl
out
loopne
in
pop
inc
xchg
rcrl
sbb
push
or
or
ret
test
idivb
rorb
xlat
push
int3
add
jne
stos
aaa
sub
fsub
lret
rolb
pop
repz
mov
xor
int
lret
push
sbb
int3
pop
rcrb
inc
enter
sbb
cwtl
adc
pop
jecxz
xchg
lock
jne
dec
das
mov
leave
dec
dec
xor
aam
jg
adc
sub
or
mov
negl
pop
push
sbb
out
stc
inc
mov
xchg
test
pop
dec
pushf
sti
xchg
dec
or
ss
aaa
shll
sbb
sbb
pop
das
sub
dec
xchg
aam
out
loope
inc
lret
push
pop
or
push
sbbb
dec
dec
repz
lock
lahf
push
icebp
lea
mov
pop
es
push
xor
mov
dec
daa
xor
cmp
pop
jo
or
nop
fstl
add
mov
pusha
loop
cmp
lods
mov
lcall
cmp
cmpsb
add
bound
sbb
popa
in
shr
push
jmp
inc
xor
mov
fstpl
stos
or
and
lock
push
xlat
filds
iret
loop
xchg
sbb
jo
stos
repnz
and
xor
adc
aaa
repnz
hlt
xor
cld
adc
scas
ljmp
push
clc
rcrl
ficoml
test
mov
std
mov
push
rcrl
fwait
div
subb
cltd
dec
les
or
mov
repz
jp
stos
ds
rcrb
insl
jnp
fnstenv
xor
test
push
cs
je
subl
and
ds
mov
xchg
cld
mov
shlb
dec
mov
sahf
pop
movsl
pop
es
mov
jo
lods
xchg
jne
inc
std
movsl
mov
xor
xchg
adc
jbe
cmpsl
cld
pop
pop
sbb
mov
lea
cli
stos
and
add
sub
ss
movsb
mov
in
data16
in
cmp
lcall
jno
or
pop
loope
mov
mov
adc
sbbl
sar
adc
ss
mov
sub
jo
inc
imul
xchg
repz
push
fcmovu
sub
and
cli
int3
mov
dec
mov
mov
pop
pop
scas
sahf
xor
inc
cmpl
push
mov
push
jnp
jle
sub
push
mov
pop
lret
stos
inc
mov
pop
and
dec
and
push
movsb
ljmp
adc
and
add
dec
cld
mov
arpl
xchg
dec
cmp
push
and
loopne
sbb
test
in
adc
arpl
push
nop
mov
xchg
add
mov
cli
out
mov
push
test
xor
or
or
ja
int3
js
outsl
daa
test
ret
scas
mov
or
mov
xchg
lods
outsb
sbb
and
cmp
jns
into
outsb
psrld
test
int
ffreep
jg
pop
das
stos
lret
call
dec
mov
pop
mov
xor
out
les
jle
ljmp
sub
dec
sub
mov
leave
adc
out
repnz
pop
mov
or
inc
sahf
mov
lds
xor
lock
mov
or
dec
in
loopne
push
inc
psubd
cli
in
insl
inc
sbb
imul
hlt
adc
testl
pop
jo
sbb
jno
mov
inc
ljmp
test
cmp
push
in
mov
int3
sub
jns
mov
sar
push
test
or
inc
mov
and
and
and
in
xchg
cwtl
pop
daa
fwait
mov
mov
and
mov
push
sub
jge
divb
je
and
push
mov
pop
test
xchg
mov
test
ds
clc
stos
cwtl
lahf
jb
xchg
fcoms
in
push
fdiv
repz
xchg
cmc
inc
std
jecxz
repz
or
cld
sbb
pop
pop
push
lret
nop
gs
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
dec
fmull
pop
jp
mov
fistpll
out
mov
lcall
mov
pop
push
jno
test
repnz
push
ret
dec
mov
inc
push
bound
out
jl
addr16
orl
mov
sub
and
jmp
jge
mov
mov
out
in
ret
popa
add
mov
pop
dec
mov
mov
sub
cmp
jg
data16
int3
lock
test
in
or
mov
sub
push
mov
sbb
xor
adc
ljmp
test
jb
into
sub
clc
add
dec
dec
pop
fdivrs
shll
sub
mov
out
ljmp
cltd
push
test
mov
pop
mov
lahf
jmp
xchg
xchg
mov
xchg
ret
mov
cmp
or
jno
cli
test
mov
fwait
push
add
pop
lahf
cmc
cmpsl
int
xor
les
adc
andb
jno
cmp
push
shr
sbb
inc
fcmovne
popf
icebp
push
xor
add
fadds
das
pop
scas
or
test
jmp
cltd
sub
pop
das
gs
fisubl
push
push
xchg
pop
rol
and
inc
cwtl
mov
test
or
inc
mov
loopne
mov
pop
xrelease
pop
inc
adc
scas
add
sbb
stos
in
cmp
push
xor
adc
packuswb
dec
hlt
test
push
in
sbb
xchg
pop
scas
or
sub
push
imul
jp
jae
and
adc
pop
nop
mov
pop
push
xor
sbb
mov
in
inc
xchg
push
mov
insl
or
mov
mov
or
std
sub
es
outsl
mov
push
and
pop
neg
mov
xchg
cmc
jp,pt
ret
dec
sub
xor
mov
jne
lock
pop
push
int
shlb
lret
dec
mov
cmp
test
sbb
bound
shlb
and
sbb
mov
ret
outsl
pop
cmp
ret
sub
sub
pop
dec
and
xor
xchg
dec
clc
test
mov
mov
mov
add
sub
hlt
jecxz
jecxz
fdivrl
icebp
xchg
stc
push
cmp
dec
in
or
jns
push
cmp
mov
mov
xchg
cmp
aam
ret
jne
insl
int3
data16
sarb
je
mov
mov
inc
dec
mov
clc
add
pop
sbb
fstpt
xchg
loope
sub
lods
push
cmovno
movsl
sbb
jg
jb
or
imul
or
fstpl
leave
mov
icebp
arpl
pop
arpl
jl
push
push
mov
mov
int
inc
dec
test
dec
sbb
xchg
push
fcompl
test
call
mov
jae
call
test
test
sbb
cmpsl
test
push
xor
pop
jae
imul
nop
xor
cmp
mov
xchg
mov
mov
and
inc
dec
addb
sahf
and
fisttpll
xor
in
mov
outsb
mov
push
aam
insl
pop
mov
and
sti
jo
sbb
mov
push
movsl
sbb
sbb
test
sbb
xlat
mov
xlat
sub
push
inc
nop
xchg
dec
dec
mov
out
sahf
int
cmp
mov
sarl
stos
cs
aad
aad
cmp
mov
mov
xchg
add
adc
cmpsb
inc
sbb
filds
jnp
xor
or
loop
pop
test
mov
push
xchg
xor
ds
pushf
decb
cmp
lock
fidivrs
test
daa
jno
adc
fsubs
lods
cld
les
sarl
std
pop
adc
xor
loope
mov
pop
sbb
std
mov
pop
sbb
daa
xchg
out
andl
sahf
stos
popa
out
data16
ret
stc
push
add
xchg
sub
mov
or
sub
mov
fdivr
outsb
and
call
adc
dec
mov
and
daa
jae
xchg
push
movsb
outsb
mov
sbb
out
push
sahf
pop
sti
cltd
dec
mov
rclb
dec
mov
cmp
or
sti
xchg
in
sub
lcall
mov
mov
sub
add
sbb
mov
xor
adc
and
bound
xchg
cmp
gs
sarb
sub
and
lret
push
ljmp
sub
fmulp
nop
ds
in
pop
enter
pop
movsb
push
in
push
cli
clc
sub
out
es
pusha
sarb
pop
outsl
das
xor
sub
sbb
or
imul
jmp
push
js
lock
push
out
xchg
jns
mov
mov
push
jae
lahf
ja
int3
jecxz
aad
jne
mov
inc
sahf
mov
xchg
outsl
and
push
lods
ret
pop
cs
mov
dec
hlt
clc
lock
push
adc
jl
mov
call
insb
adc
lahf
pop
xlat
jl
js
sbb
mov
test
shr
sbb
fidivs
orl
mov
xor
or
sbbb
jns
repz
mov
repz
cmp
pop
mov
lret
out
mov
pop
pop
rorb
stos
dec
ja
fsubrs
insb
or
add
lcall
xchg
or
xor
dec
rcrl
jb
push
ret
xchg
mov
jo
sbb
mov
ficoms
out
xchg
ret
or
push
add
mov
adc
cltd
xchg
xchg
ret
xchg
sahf
in
jnp
adc
movsb
inc
jmp
adc
xchg
movsb
cltd
cli
dec
xor
rorb
clc
jne
ret
mov
sub
inc
ror
test
or
xchg
jb
sbbl
loope
loope
fadds
popa
xor
insb
cmc
in
or
and
test
in
xlat
cmpsb
sahf
ljmp
test
fwait
push
test
pop
mov
mov
mov
mov
mov
iretw
mov
add
add
mov
xchg
pop
adc
and
push
aaa
adc
movsb
mov
mov
sub
sbb
enter
lret
jecxz
outsb
dec
dec
hlt
lcall
dec
xchg
pop
pop
jl
frstor
cli
les
mov
mov
iret
cmpsb
push
mov
push
dec
adc
pop
sub
mov
pop
sub
notl
xchg
mov
andb
pop
gs
push
out
and
imul
stc
xchg
ret
push
cmp
sbb
add
adc
cs
push
and
adc
mov
pushf
adc
movsl
leave
jb
enter
adc
test
xchg
insb
cmpsb
mov
pop
aas
call
or
add
xchg
adc
adc
lds
mov
andb
lea
mov
or
dec
cmpl
jno
jne
sub
adc
roll
adc
psubusb
xlat
pusha
cmp
stc
cs
subb
jne
arpl
cmp
shlb
mov
int3
mov
ffreep
scas
add
pop
test
into
psubd
jl
cmpsb
scas
lds
jbe
imul
inc
jne
dec
inc
test
addl
mov
dec
mov
xchg
or
jmp
xlat
push
add
subb
jecxz
jge
popf
jnp
mov
xchg
xchg
xchg
enter
push
repz
cmp
xchg
mov
gs
int
dec
mov
and
imul
cs
in
pop
hlt
iret
and
ja
mov
or
ljmp
sahf
inc
push
jecxz
int
mov
leave
arpl
inc
xchg
imul
mov
rol
sub
sub
gs
pop
push
fnsave
mov
repnz
and
sbb
loopne
lods
jl
mov
iret
fsubl
call
lret
in
mov
pop
int3
cli
lret
mov
popf
test
movsb
adc
inc
jmp
in
ss
ja
sbb
gs
adc
leave
push
orl
inc
jp
adc
fadds
sti
iret
shrb
or
sbb
xor
push
mov
lds
mov
js
lea
shlb
sbb
stos
icebp
cli
icebp
dec
call
test
sbb
xor
push
mov
pop
push
dec
das
jl
mov
sarl
pop
std
int
jle
jne
aad
insl
sbb
sbbl
pushf
scas
fstps
imul
sbb
dec
mov
sub
jp
aam
iret
in
ret
repz
das
out
call
pop
fs
jle
ljmp
dec
push
lret
in
mov
cmp
push
int
push
insb
xor
sub
inc
jno
iret
sbb
jge
repnz
jp
push
jp
js
test
xchg
cmp
dec
test
dec
int
lret
jle
ljmpw
jbe
push
out
push
inc
fisttpl
push
mov
xor
inc
sahf
mov
addr16
lock
movsl
rclb
cmp
out
mov
mulb
fwait
xor
popf
inc
aaa
fucomip
jmp
in
movsl
jl
mov
out
push
dec
stos
sub
adc
cmp
lea
into
xchg
inc
jg
mov
push
mov
pop
mov
cmp
add
add
cmp
movb
bound
jl
jno
push
xchg
ja
push
dec
jg
mov
test
fs
imul
blcfill
sbb
mov
addb
push
fwait
call
rorl
adc
das
add
int3
dec
not
sti
jns
aas
pop
fs
fdivr
lahf
leave
mov
addr16
and
mov
test
sbb
jo
sbb
arpl
in
mov
or
push
shl
mov
push
aaa
flds
popf
andb
jne
stos
pusha
in
pop
and
ds
or
mov
xchg
mov
mov
dec
frstor
enter
mov
mov
out
push
lret
int3
xchg
out
fimuls
jnp
insl
cmp
inc
setne
push
mov
and
mov
push
sbb
xchg
out
popa
cmc
fildll
mov
insb
pop
xor
fwait
xor
mov
int3
cs
es
dec
or
adc
mov
out
out
jb
cmovl
push
pusha
adc
fcoml
inc
inc
je
jmp
nop
and
lret
mov
xlat
out
sarl
inc
jo
stc
xchg
mov
packssdw
mov
mov
or
in
xchg
fs
cld
push
lods
decl
jecxz
fsts
movb
int3
cmp
push
pop
or
pop
loop
out
fists
stos
stos
aam
and
fdivrs
pop
in
xchg
aad
or
gs
or
mov
fisttpl
cmp
pop
xor
inc
mov
out
test
gs
add
popf
dec
xchg
mov
cmp
and
int3
lcall
cmp
jne
lds
inc
daa
mov
cmpsl
lods
push
sbb
ret
orb
in
rolb
decl
shlb
fimuls
jb
pop
das
je
sbb
int3
inc
push
xchg
in
jnp
iret
pop
add
test
and
sub
or
out
ljmp
jns
push
and
cld
mov
ljmp
lret
inc
lock
lods
sub
cmc
xorl
insl
jge
and
pop
fs
cltd
fimuls
jp
push
stc
pop
xchg
lcall
mov
mov
xchg
hlt
test
ret
ds
hlt
sub
and
pop
dec
xor
or
mov
roll
fcmovu
adc
and
xchg
daa
arpl
es
pop
loope
push
outsb
mov
sub
inc
jp
ret
mov
push
inc
cmpl
cmpsl
mov
cmp
data16
inc
add
xchg
movsb
mov
pop
enter
inc
gs
fs
js
dec
jg
sub
mov
insl
mov
sbb
cld
repz
adc
and
lcall
pushf
int3
xchg
popf
pop
test
mov
ss
cmp
adc
aaa
mov
add
in
mov
leave
mov
shrb
mov
fldenv
pop
fistps
mov
addr16
ret
inc
cmp
jmp
out
inc
fdiv
and
xchg
loope
inc
incl
insl
xlat
adcb
jae
inc
and
outsl
jo
stos
or
aas
xor
repnz
mov
mov
cmp
std
sti
push
xor
jl
or
ret
ret
sbb
sbb
push
mov
push
inc
mov
cmp
inc
jno
test
mov
out
sbb
push
mov
xor
stc
das
jl
xchg
and
jle
stos
pop
add
adc
repnz
and
and
aas
stc
push
xchg
sbb
and
loop
repz
idivl
daa
push
daa
xorl
mov
outsb
fidivrl
out
pop
push
sub
push
insb
movl
push
sbb
pop
aas
and
inc
pushf
xchg
dec
outsl
pop
mov
xor
push
call
pop
jo
in
into
mov
xlat
inc
pop
insb
outsl
pop
xchg
out
adc
outsb
jp,pt
shl
movsb
lock
or
loop
mov
insb
xor
add
sub
jnp
stos
ret
int
jl
in
sub
pop
push
out
lea
popl
cli
mov
lds
lcall
rclb
push
add
mov
cmp
mov
adc
mov
sbb
jno
adc
adc
nop
out
out
ret
push
insb
mov
or
lcall
outsb
or
popf
mov
gs
xchg
or
push
sbb
mov
push
jne
jecxz
sbb
std
pop
test
out
hlt
mov
mov
aam
lock
adc
insb
pushf
rol
pop
pop
lods
lret
pop
movsl
mov
movsb
repnz
je
and
jbe,pt
xchg
adc
sub
lcall
fnsave
jp
xchg
mov
dec
or
jno
scas
add
pop
xor
testb
sbb
sti
cld
bound
mov
mov
cmc
push
sahf
and
mov
int3
daa
add
sbb
fcos
fwait
clc
out
mov
xor
outsb
std
mov
scas
test
ror
mov
xchg
xor
mov
dec
fdivrl
mov
and
mov
and
cld
notb
inc
icebp
das
mov
xchg
jmp
cmp
movsl
call
mov
dec
popa
sub
rorl
sti
adc
adc
ljmp
rcl
scas
and
jae
nop
pop
xor
or
loope
gs
adc
in
leave
jo
imull
xchg
icebp
adc
inc
jecxz
push
add
jbe
jno
cmp
rolb
std
jns
adc
addr16
shrl
aad
lea
ds
xor
mov
mov
rcrb
insl
dec
lahf
mov
xorps
mul
xor
movsb
pop
xor
jl
add
aad
cwtl
daa
test
fcomps
xor
enter
inc
jns
das
xor
adc
pusha
add
sti
cmp
mov
es
bound
cmp
inc
mov
inc
inc
sahf
mov
push
ss
inc
mov
lea
faddl
pop
mov
cli
pop
mov
sub
dec
das
xchg
popf
fisttpl
out
inc
fld
jb
xor
pop
mov
xchg
mov
cli
sub
imul
fdivrl
dec
addr16
es
sbb
out
das
insb
add
mov
inc
cmpsl
mov
movsb
xor
jmp
mov
bound
lock
je
jno
mov
inc
mov
xor
sub
aad
push
or
nop
stos
scas
mov
jmp
dec
mov
sti
sub
add
xor
repnz
enter
pop
add
sbb
xlat
stc
dec
scas
aam
xchg
push
jbe
imul
mov
xor
movb
cli
daa
cmp
imul
push
fcoms
loop
mov
das
inc
push
cmp
enter
sub
adc
fidivrs
push
bound
cmpsl
iret
cmc
fwait
imul
pop
sub
stc
aaa
repnz
mov
popa
jnp
xchg
lret
sub
mov
rolb
jl
mulb
mov
fistps
andl
jecxz
mov
sbb
and
jecxz
pop
rolb
pop
jno
add
add
cmp
clc
jp
enter
jnp
nop
cwtl
adcb
mov
scas
fbld
in
mov
mov
hlt
stos
inc
cs
and
stos
push
cmp
pop
pushf
lea
iret
clc
jle
pop
cmpsb
insb
jno
je
sbb
int3
mov
xor
imul
inc
pop
and
das
or
repnz
cmpb
movsl
fdiv
mov
rolb
imul
cpuid
jno
cld
or
cmpb
addr16
jg
aam
int3
mov
mov
gs
rcrb
add
xor
and
xor
repnz
jmp
imul
inc
rol
dec
dec
and
jl
push
or
xor
pop
fs
out
pop
dec
pop
in
lock
xchg
mov
mov
mov
add
xchg
mov
int3
aad
pusha
jmp
lahf
subl
cmp
and
test
push
loop
inc
clc
fidivl
iret
or
andb
or
jp
ds
shll
or
loop
cmp
or
pop
and
ljmp
xchg
xchg
rcrl
outsl
or
jle
lcall
in
pop
dec
or
add
cmp
fs
push
addl
add
pop
lret
xor
leave
xor
flds
fwait
cmc
mov
mov
paddd
aad
int
das
cmp
negb
iret
orb
loope
arpl
imul
faddl
pop
jl
fisttps
mov
fildl
mov
sbb
icebp
testb
xorb
xchg
js
add
movl
mov
jns
shlb
add
push
lcall
lcall
rcrl
outsl
sub
ss
push
testl
mov
cmpsl
mov
jbe
mov
loopne
mov
sub
xor
xchg
lret
fnsave
call
ret
push
jle
ud0
push
out
in
sbb
dec
sub
push
pop
and
add
cmp
icebp
cwtl
jecxz
xchg
jle
inc
ljmp
cmp
mov
sbb
movsl
cmp
push
mov
sbb
cmpsb
push
arpl
push
push
push
fstpt
testl
jb
jb
pop
xchg
add
sub
aaa
dec
fidivrl
cmpsb
test
xor
in
ljmp
mov
pop
fidivs
push
push
xchg
add
cmp
aaa
xchg
mov
or
orl
jne
cmp
cltd
clc
pusha
jl
in
sti
je
mov
dec
int
xchg
rcll
lods
rclb
or
imul
movsl
pop
dec
cmc
and
jecxz
sbb
popa
arpl
jl
push
adc
call
movsb
int
scas
daa
sbb
xchg
add
cltd
clc
mov
rcrl
inc
rcl
subl
inc
iret
xchg
inc
xor
xchg
adc
lcall
js
jle
stos
push
fisttps
cmp
dec
pop
dec
cmp
dec
in
mov
dec
mov
push
cmp
ss
jmp
shr
stc
call
push
mov
jbe
sarl
or
aaa
out
jb
push
int
clc
lahf
mov
loop
stos
popf
fnstcw
rorl
aad
pop
leave
aam
loop
ret
inc
push
push
scas
dec
dec
std
and
rcrl
mov
sbb
add
jno
xchg
ret
mov
jp
sub
sbb
xchg
adc
adc
cmc
aaa
sbb
pop
sbb
cwtl
and
mov
dec
mov
mov
add
into
jne
inc
test
in
mov
fisubl
adc
and
repz
adc
cmp
push
mov
sbb
add
lds
nop
jge
xor
mov
mov
adc
popa
cmp
jbe
xchg
inc
aas
and
xor
and
gs
sub
pop
subl
in
pusha
pusha
pop
jnp
sub
add
dec
cmp
repz
dec
jmp
js
js
icebp
mov
test
or
jb
test
into
jne
mov
lods
and
fimull
rcr
lods
icebp
cmp
stc
int
cld
jnp
sub
jae
adc
jl
cmpsl
repz
popa
fistl
cwtl
xor
sub
mov
data16
sbb
mov
add
mov
sub
std
sbbb
push
mov
mov
mov
mov
lret
dec
inc
dec
mov
mov
insb
call
in
pop
dec
insl
dec
test
lret
hlt
ja
adc
rcrl
jmp
pop
mov
inc
jmp
stos
cmp
pop
stos
mov
jg
aas
jns
pushl
xchg
je
lock
fstl
jb
adc
push
pop
into
xchg
aad
xor
into
int3
ljmp
dec
data16
imul
sub
add
addl
mov
scas
fcom
mov
cmp
fisttpll
out
movsl
add
cli
push
pop
add
fcompl
cs
xchg
int3
sbb
popf
aas
mov
mov
fidivl
out
nop
rcr
lods
mov
sbb
lods
cltd
mov
jp
mov
dec
mov
cmp
xchg
pop
arpl
push
xchg
std
cmp
rcl
pop
aad
ljmp
xorl
mov
cmc
lock
imul
into
inc
pop
jnp
cwtl
lock
add
pop
mov
and
lahf
xlat
rol
out
sahf
std
daa
icebp
mov
in
lcall
fwait
cmp
cmp
mov
lcall
fcomp
push
mov
les
pop
cmp
leave
xor
clc
and
std
mov
xchg
inc
xchg
movsl
jmp
pop
or
dec
mov
scas
lock
sbb
sub
or
jns
mov
xlat
sub
imul
cmpsl
inc
xor
pusha
cmp
inc
popa
sbb
xor
cmpsl
xor
and
pop
fldl
shl
cmp
aaa
xchg
push
insl
sbb
push
or
mov
pop
add
fucom
cmp
push
or
sub
jecxz
dec
push
mov
push
sbb
mov
push
jnp
loope
push
jecxz
jae
fisttpll
mov
mov
into
sbb
xchg
mov
insl
jle
in
movsb
sub
mov
in
pop
cmc
outsl
jo
notl
cmpsb
in
pushf
add
push
out
push
mov
sbb
xlat
dec
pop
inc
pushf
pop
xorb
sub
ja
cmpsb
out
push
jl
ja
pop
pop
dec
jle
out
mov
adc
pop
iret
push
adc
sarb
sahf
xor
xor
push
pop
test
push
and
mov
outsl
add
push
push
pop
mov
repnz
sub
cmp
xor
imul
or
shll
push
stos
xor
loopne
filds
jecxz
hlt
push
in
push
jno
pusha
inc
mov
xchg
jg
ja
das
rcrl
add
fxch
push
cmpsb
mov
rorl
mov
fdivs
mov
lret
or
push
inc
jl
jg
rorb
fs
repnz
int
or
and
jnp
popf
sub
out
scas
sub
and
pop
dec
push
sbb
mov
rcr
xor
ja
bound
jg
in
cmc
inc
and
mov
xchg
push
push
xchg
mov
int
add
movsb
outsl
pop
js
dec
cs
sbb
fiadds
push
cld
and
jle
mov
lods
or
mov
addr16
je
pop
jne
test
testl
outsl
add
dec
xlat
ja
ja
xchg
pop
and
lret
retw
cmp
cs
repnz
xchg
sbb
mov
fisubs
sub
adc
aaa
cli
clc
and
je
xor
jmp
mov
lea
and
pop
int
addr16
gs
or
rep
xchg
out
push
inc
shlb
jmp
lods
gs
int
sbb
push
mov
fnsave
mov
push
jae
shll
test
rorb
or
repz
add
pop
add
cmc
ja
rcrb
movsl
mov
xchg
dec
and
jecxz
xchg
jbe
add
arpl
mov
fsubrl
push
gs
sub
jns
das
int3
and
xchg
and
add
rcrb
decb
inc
pop
ljmp
sbb
xchg
xchg
or
and
sbb
inc
loope
inc
xchg
icebp
mov
and
xchg
ss
inc
mov
adc
jnp
push
jge
jge
dec
notb
jns
and
enter
mov
movsb
jge
or
out
cltd
jg
pop
sub
mov
push
jg
or
xor
jg
xchg
dec
aad
cmpsl
ja
sarb
xor
dec
repnz
adc
xor
sub
mov
insb
shrb
hlt
popa
popf
pop
aam
sbb
imul
or
jg
iret
iret
jne
push
rolb
scas
bound
add
lret
lret
bnd
sbb
or
push
sub
sub
jno
scas
adc
mov
in
into
cmp
jae
jmp
sbb
cmp
mov
cwtl
mov
pop
movsb
sub
add
adc
xchg
xor
int
call
inc
push
sub
clc
push
xchg
cmp
xor
lahf
pop
add
fdivr
mov
lods
loop
insb
ret
xlat
popf
inc
adc
es
push
mov
xor
dec
jg,pt
adc
xchg
sbb
stos
mov
test
mov
dec
xor
sub
mov
and
xchg
push
mov
outsl
push
gs
pop
sbb
rorl
jmp
pop
and
mull
inc
and
loopne
stc
out
pop
in
mov
pop
sbb
add
fistpl
dec
add
rcr
mov
addl
ds
and
lock
or
xchg
test
mov
scas
cmpsl
cli
ficomps
cltd
aas
jmp
xchg
or
in
mov
int3
xchg
ficoms
int
in
bnd
sub
xor
fabs
insl
pop
sbb
mov
xchg
and
popa
adc
xchg
push
test
lea
in
lcall
inc
in
push
hlt
jecxz
sub
or
xchg
add
repz
data16
push
ja
aaa
dec
inc
nop
or
roll
aas
adc
fnstenv
add
fwait
cmc
fdivrs
sahf
mov
cli
cmpsl
dec
andl
jg
push
ja
mov
mov
mov
popa
cmpsl
test
out
or
imul
mov
addr16
sbb
lcall
cmpsl
jl
movsl
filds
sarl
popa
or
imul
aam
in
lret
movsb
cmc
sti
or
cld
cltd
shrb
roll
push
pop
mov
push
or
std
mov
inc
les
outsl
mov
std
pusha
xor
jle
int
add
pushf
jl
mov
xchg
jno
outsl
jo
dec
xorb
cmpsb
popa
and
cmp
sub
aad
or
pop
mov
mov
cmp
mov
xchg
jp
and
lcall
imul
insl
or
rcrl
jp
xor
cltd
andl
dec
clc
movsb
icebp
push
adc
xchg
mov
cmp
or
clc
fistps
test
js
xor
gs
shll
push
mov
out
mov
les
pusha
hlt
stos
enter
pop
add
andb
pop
rcrb
mov
cmp
pop
sub
popa
jne
adc
cli
insb
sahf
adc
xchg
inc
jge
add
jno
pop
sbbb
pop
cmp
jge
sarl
xor
repnz
int3
xor
ret
adc
or
jbe
push
stc
pop
mov
push
cmp
fsubrl
mov
hlt
cltd
pop
out
out
mov
sub
sub
sbb
fidivl
xor
ljmp
popa
test
lock
dec
mov
in
jmp
imul
jb
sbb
and
inc
dec
data16
loop
movsl
pop
xor
stos
lret
xor
data16
rclb
mov
and
cs
jns
xchg
ds
dec
inc
scas
cwtl
mov
push
je
stos
pop
je
pop
adc
adc
test
push
cli
lds
push
jp
inc
out
sub
in
arpl
arpl
mov
xchg
hlt
incb
mov
add
rcr
sub
movsb
jmp
mov
push
pop
mov
and
int
mov
adc
pushf
mov
test
and
data16
into
cmp
and
jbe
scas
movsl
cmpsl
adc
ret
push
xlat
shlb
pop
lods
into
pop
inc
daa
jle
sbb
das
sub
sub
shrb
xchg
sbb
and
mov
in
push
pop
outsb
or
iret
xor
pop
gs
dec
cmp
xchg
xchg
aad
gs
adc
leave
xorl
leave
mov
mov
adcb
sbb
pop
test
xor
ret
das
pop
mov
fcmove
xor
mov
push
fadds
xchg
scas
pop
push
loopne
call
scas
jne
insl
aad
push
int
cmp
adc
rclb
push
enter
sti
jge
sti
cltd
cmp
push
pop
mov
pop
mov
mov
adc
sarb
movsb
xchg
jecxz
cmp
cmp
mov
idivb
in
dec
sbb
and
or
xor
stos
loop
cmp
and
pop
outsl
mov
or
pop
mov
mov
push
add
je
loopne
out
jecxz
cmp
repnz
push
mov
mov
test
pminsw
mov
shl
xchg
lcall
push
or
rolb
inc
call
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
movsb
dec
mov
scas
cmp
add
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
