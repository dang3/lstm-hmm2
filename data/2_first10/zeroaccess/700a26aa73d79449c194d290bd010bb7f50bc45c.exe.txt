push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
or
jmp
int
sarl
push
sbb
fldt
js
js
push
js
enter
rcr
fld
pop
push
or
je
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
add
aam
jbe
call
xchg
ljmp
push
xor
in
mov
jge
loope
jnp
xor
dec
popa
push
push
movsb
dec
push
cltd
fsubs
and
movsl
fcompl
cs
clc
and
lahf
sahf
mov
std
add
push
pop
dec
aam
es
adc
scas
sub
xor
jge
into
jecxz
sahf
js
add
and
or
adc
mov
cld
aad
data16
loope
lock
test
hlt
in
aaa
jg
inc
push
cltd
jnp
out
xchg
mov
faddl
lds
lods
cmpb
cmp
mov
xchg
pop
mov
lods
cltd
add
dec
orl
sbb
pop
daa
push
sahf
mov
add
ja
xchg
test
scas
mov
jle
push
clc
aad
lds
int
mov
iret
xchg
pop
aaa
xchg
mov
sub
inc
push
sub
cmpsb
push
jecxz
sub
fbld
sbb
sti
pushf
pop
push
inc
out
out
lods
add
leave
insb
inc
push
mov
dec
push
or
fnstcw
xor
daa
aam
push
inc
xchg
iret
sahf
pop
test
jno
js
shrb
inc
jns
pop
adc
jmp
push
mov
shll
and
mov
dec
push
pusha
xor
push
push
add
pop
call
scas
lds
mov
adc
add
repnz
jl
dec
inc
xchg
test
xor
or
insl
testl
loope
mov
cmc
ret
lret
cld
mov
jns
cmp
cmp
or
sbb
push
or
dec
outsl
rcl
xchg
cmp
jg
mov
pusha
sbb
add
adc
xchg
leave
pop
or
xchg
inc
pop
cmp
enter
test
add
out
test
pop
movsb
lahf
jae
push
gs
mov
sbb
pop
cs
pushf
repz
leave
int3
inc
jge
fs
xor
loop
test
fcomi
fsubrl
inc
das
pop
cmp
or
sarb
mov
mov
push
sbb
jl
movsb
cmp
push
in
cmp
mov
les
lea
stos
fildl
rorl
add
stos
add
mov
das
filds
inc
mov
insb
or
adc
cmp
lea
sub
xchg
xor
jmp
call
mov
fidivrs
jo,pt
add
sub
jb
push
test
cmp
mov
sbb
and
cltd
outsl
mov
ljmp
in
inc
pop
adc
mov
xchg
cmp
xchg
dec
jg
push
fcmovbe
test
rcll
push
and
repz
adcl
outsl
and
in
xchg
sbbl
clc
je
push
dec
loop
dec
sub
or
faddl
jno
fidivs
jnp
inc
test
loop
and
and
and
inc
jnp
pop
and
mov
xor
out
mov
loope
push
repz
cmp
mov
jg
pop
inc
imul
adc
jno
jmp
repnz
call
add
adc
repz
pop
fwait
test
mov
lods
and
push
neg
lret
mov
aaa
cmp
dec
lds
lahf
test
or
mov
fwait
pop
push
adc
jg
repz
xchg
mov
xor
xor
or
and
pop
lahf
push
push
adc
enter
iret
or
addr16
xor
lea
mov
shl
add
mov
push
add
sbb
dec
stos
push
mov
mov
or
outsb
push
dec
mov
xlat
mov
std
lods
imul
leave
push
add
and
dec
gs
cwtl
inc
jge
pop
sbb
push
or
fnsave
lcall
pop
pop
mov
loopne
push
jb
aad
jno
movsb
xchg
push
pop
outsb
or
pop
inc
rcll
sar
and
nop
clc
mov
ljmp
call
add
in
mov
lock
in
test
inc
add
or
mov
andl
push
sub
jmp
enter
rcl
xlat
xlat
dec
xor
pop
push
rclb
push
js
push
js
stos
add
adc
and
and
sbb
and
jle
mov
mov
jp
insl
and
xchg
xor
mov
aam
sub
leave
xchg
cmp
xchg
push
xchg
loopne
lods
xchg
jno
cmp
inc
dec
fisubl
mov
lea
mov
sti
scas
decb
fcoml
jae
ret
cld
mov
or
push
mov
push
inc
mov
pop
test
mov
repz
mov
dec
frstor
sbb
enter
mov
mov
push
std
inc
xor
stos
aaa
aaa
loop
jge
mov
lahf
add
and
mov
jb
jno
movsl
cmp
xchg
lret
and
pop
jle
mov
mov
arpl
test
flds
cmpb
mov
add
mov
stos
lahf
mov
inc
cmc
or
js
adc
loop
or
lcall
jnp
mov
adc
movsb
or
test
sbb
sbb
inc
mov
or
mov
jb
js
sbbb
test
jge
in
out
aaa
dec
lret
xchg
mov
mov
or
mov
ret
xlat
and
hlt
sub
mov
sbb
adc
xor
imul
cmpsl
or
mov
lret
and
into
test
sahf
mov
xor
inc
mov
fdiv
out
adc
mov
add
pusha
pushf
insl
addl
jno
outsl
inc
stos
pushf
into
inc
adc
cmp
pop
adc
mov
movsb
push
xor
mov
imul
and
add
fldenv
stc
in
xchg
lods
push
mov
mov
push
incb
ret
mov
mov
es
test
pop
scas
add
or
jge
sub
fs
jl
sub
jne
jbe
jne
dec
lcall
push
jne
push
popf
pop
inc
and
outsb
shlb
dec
movsb
xor
mov
jle
xlat
jb
dec
push
std
lret
mov
dec
push
mov
dec
pop
cltd
lcall
inc
mov
outsb
outsl
insl
hlt
xor
mov
push
outsb
mov
pop
popf
lods
sbb
stos
ficoms
popa
call
outsb
gs
out
jne
or
pop
in
and
dec
sbb
add
ret
movsl
adc
dec
call
movb
push
pop
xchg
jmp
fs
enter
hlt
pushf
mov
iret
lss
xchg
mov
fs
movhps
mov
enter
sub
in
sbb
es
repz
mov
loop
mov
add
out
fcmove
scas
mov
scas
out
aam
pop
imul
jecxz
aaa
shl
mov
adcb
daa
filds
pop
scas
call
rorl
dec
leave
ja
test
out
scas
push
jbe
rol
push
mov
mov
adc
pop
jbe
andl
jp
es
mov
add
dec
lcall
pop
adc
divl
sbb
push
hlt
rcrb
leave
push
shl
cmp
into
fwait
pop
fidivs
push
or
dec
stc
xor
out
adc
das
stos
mov
push
test
mov
adc
test
jmp
stos
test
sub
sbb
and
pop
cmp
in
movsl
inc
insb
pushf
out
and
test
xor
xchg
cli
iret
adc
hlt
ret
aaa
xor
movsb
jge
push
pop
adc
out
lcall
jecxz
push
push
cmp
fistps
push
pop
cs
js
xor
out
mov
add
sbb
imull
aas
rcll
push
push
adc
add
mov
icebp
xchg
lret
inc
jle
xchg
push
mov
inc
push
xchg
pop
inc
out
ljmp
sub
pusha
mov
dec
ret
inc
iret
pop
pushf
mov
mov
imul
outsb
dec
cltd
sbb
ret
pop
in
sbb
xor
imul
mov
lret
jg
ret
clc
push
and
jns
pop
divl
adc
lahf
push
and
xchg
inc
mov
sub
mov
dec
sub
movsl
push
xor
push
push
int
sub
lret
sar
outsl
decb
js
xchg
xchg
push
addr16
test
push
or
xor
push
add
mov
mov
mov
sub
and
add
movl
jmp
enter
shrl
mov
dec
push
nop
push
pop
js
push
js
imul
repnz
jns
popf
adc
pop
dec
add
dec
iret
mov
out
mov
cli
loopne
cmp
mov
xchg
xchg
out
xchg
dec
mov
jle
out
inc
outsl
xlat
and
xor
jnp
outsl
inc
rol
sbb
js
ss
xchg
or
fcmovne
dec
inc
inc
scas
mov
mov
sbb
fs
and
fbstp
shl
mov
mov
pushf
fcomp
roll
inc
fcmovu
mov
jnp
loope
sti
push
mov
and
pop
pop
mov
lods
push
xchg
call
cmp
hlt
movsb
jne
cmp
dec
cmp
sbb
lahf
mov
out
lods
jmp
nop
iret
insl
inc
cld
mov
shrl
add
mov
dec
cli
sbb
jg
jmp
mov
sti
mov
inc
cmp
inc
lock
mov
mov
push
ret
cs
pop
pusha
pop
ficoml
sbb
cmp
fimuls
in
adc
xchg
mov
pop
cmpsb
xor
dec
mov
repz
mov
inc
sub
mov
pop
adc
inc
jns
inc
sub
mov
and
fsubs
add
inc
xchg
push
cli
jg
push
ret
dec
xor
cmp
cmpsb
shrl
xor
bound
imul
or
adc
xor
out
mov
outsb
push
rcrb
xor
mov
and
stc
sbb
test
loop
arpl
and
jge
ljmp
xchg
add
ret
clc
mov
fadds
push
enter
dec
popf
mov
pop
mov
jmp
cmpb
pop
adc
mov
push
mov
insl
mov
push
loopw
je
mov
imul
xchg
into
sub
mov
inc
inc
popa
mov
xchg
insb
xor
jmp
shrb
fisttpll
and
mov
xor
es
bound
xor
cwtl
add
or
repnz
in
add
subl
rorb
cmc
fwait
test
lock
sbb
jl
add
dec
js
xor
lcall
test
pop
jg
inc
dec
cmp
mov
jge
cmp
jo
add
mov
call
dec
mov
jg
lock
dec
xchg
push
sub
inc
mov
mov
push
jb
xor
sub
jmp
push
rolb
in
in
es
add
sbb
sub
mov
push
repnz
push
sub
outsb
or
mov
push
es
mov
aad
adcb
popa
shlb
jg
add
or
dec
test
xchg
pop
and
jnp
sbb
call
cmp
shlb
or
leave
cli
loop
loope
adc
mov
es
mov
cmp
fildl
into
loope
push
or
rcrb
add
inc
mov
adc
out
hlt
ss
sbb
aaa
push
pushf
movsb
pop
xor
shll
pop
imul
mov
and
inc
cmpl
lcall
pop
inc
ja
outsb
repz
bound
sbb
loope
addb
adc
ss
xor
or
xchg
xlat
out
in
sbb
mov
fidivl
loopne
inc
insb
sub
leave
aam
xor
mov
mov
jl
aaa
jne
popf
pop
ret
insb
mov
jecxz
adc
mov
roll
pop
pop
mov
lea
mov
push
inc
imul
adc
xchg
inc
inc
aad
jns
and
push
push
pop
dec
adc
and
xor
cmp
clc
into
dec
push
test
mov
imul
outsb
ljmp
cmc
sbb
fiadds
pusha
scas
pop
pop
lock
or
or
xchg
cmp
dec
cld
sbb
lcall
jb
iret
fsub
mov
mov
and
loope
add
jge
add
loope
inc
add
mov
jne
test
fiaddl
mov
outsl
into
mov
lea
mov
es
dec
jmp
add
add
std
jb
mov
mov
mov
ret
movsb
mov
mov
stos
jmp
gs
ret
ret
adcb
jle
push
fldcw
in
fstl
jle
adc
jmp
repnz
gs
jnp
adc
insb
pop
test
mov
xor
mov
mov
notl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
movl
jmp
int
cmp
rcr
mov
mov
inc
or
push
js
xor
rcrl
testl
push
and
scas
mov
data16
jnp
out
gs
aas
cltd
fidivl
ljmp
mov
cmp
cwtl
inc
ret
arpl
outsl
and
push
idivb
aad
pop
repz
ds
mov
out
inc
jae
scas
pop
cmpsl
lds
loope
movq
push
mov
xchg
xor
leave
dec
lret
jl
cli
mov
int
das
in
pop
in
addb
sub
inc
popa
mov
repz
incl
mov
dec
js
aam
mov
andl
ja
cmpsb
lods
mov
and
or
adc
sbb
fiadds
ficoms
jmp
adc
int3
xchg
dec
sbb
imul
cmp
xor
sbb
insl
es
xchg
repnz
lcall
mov
adc
int3
jo
or
shrl
push
std
pop
test
xchg
ret
push
test
fdivl
das
mov
add
mov
int3
leave
adc
dec
and
push
lea
sub
ret
call
inc
mov
pop
jle
push
and
mov
or
jecxz
sbb
mov
push
jnp
xchg
insl
push
insl
jne
push
adc
pop
aaa
cmp
ljmp
das
jmp
add
jp
lret
bound
fdivrl
mov
adc
in
cmp
outsb
dec
test
xchg
rorb
shrl
mov
or
call
jb
sub
xor
pusha
xchg
dec
push
or
dec
scas
xor
adc
adc
arpl
pop
mov
pop
jb
cmp
testl
xor
ret
iret
inc
push
stc
mov
xor
dec
pusha
scas
sahf
scas
in
jns
dec
daa
insl
xlat
mov
push
dec
mov
push
lds
pop
aas
rolb
imul
sub
mov
gs
lock
mov
push
inc
cltd
leave
sub
out
test
call
pop
push
pop
mov
push
adc
and
jb
shlb
mov
mov
lock
test
faddl
mov
xlat
lock
or
inc
sbb
loope
add
fcomps
imul
in
out
cld
xor
cmp
mov
sbb
mov
gs
lcall
rcl
xchg
lea
imul
popa
sbb
gs
sub
xor
mov
out
cmpl
outsl
into
enter
jne
xor
mov
int3
sub
jecxz
pusha
sub
test
stos
inc
aas
add
sub
pop
pop
test
add
jb
mov
jo
outsb
xchg
scas
mov
fs
push
and
mov
mov
in
xorb
sar
push
lock
push
icebp
enter
add
in
xchg
fnstenv
xor
mov
fimull
mov
imul
test
or
cmp
aam
cmp
mov
jo
and
dec
jecxz
or
inc
dec
scas
sbb
adc
xchg
scas
insb
and
popa
sub
repz
mov
in
mov
mov
shl
bound
jle
pop
mov
pusha
push
xor
cs
dec
stos
push
mov
and
xchg
mov
or
inc
and
mov
test
inc
inc
roll
fs
jecxz
repz
hlt
icebp
cmpsb
inc
sbb
jo
ret
mov
sbb
fistl
xchg
mov
ret
pop
decb
scas
or
inc
dec
sub
addr16
insb
arpl
loopne
dec
ret
sbb
pushf
and
sub
cmc
mov
add
rol
sbb
fdivl
mov
push
add
sub
add
cld
adc
xchg
push
xor
jg
push
cmp
xor
cmpb
adc
xchg
lea
mov
cmp
lods
jecxz
xlat
imul
std
into
push
sub
rclb
xchg
and
or
cs
push
or
and
je
adc
add
out
or
push
jg
add
into
push
fsubs
xor
fnstcw
or
push
stos
lods
subl
push
xchg
outsb
jecxz
xchg
cmpsl
sbb
movl
mov
and
jmp
leave
mov
leave
jl
lods
aam
push
adc
push
js
inc
rorb
dec
repnz
fdivrl
xchg
mov
mov
rorb
mov
icebp
les
ljmp
popf
sbb
out
dec
or
fmulp
mov
sbbb
dec
imul
xor
enter
adc
mov
mov
and
aam
sub
imul
mov
lock
inc
imul
add
cli
stc
push
lock
xlat
jbe
lods
fdivs
sahf
insb
mov
sub
sar
xchg
hlt
and
adc
leave
push
jecxz
out
test
std
adc
xchg
dec
and
cmp
hlt
mov
pop
xchg
mov
cltd
pusha
pop
lods
push
test
sub
sbb
test
mov
mov
ds
xor
pop
push
rcrb
adc
jbe
addr16
pop
fsubl
jmp
loopne
mov
in
or
jge
lcall
int
cli
out
hlt
into
mov
xor
repz
aad
sbb
xchg
pop
loopne
cs
pop
icebp
cmc
imul
and
sti
iret
shr
jbe
sub
notl
loope
jecxz
outsb
dec
mov
pop
fmuls
cmpsb
or
andb
jns
dec
mov
adc
imul
aas
je
and
jecxz
test
nop
cmp
mov
loop
push
es
loopne
xlat
mov
das
push
fstl
test
or
test
popa
push
xorl
fwait
rcrb
cwtl
andb
loopne
push
xchg
mov
sbb
inc
inc
call
and
adc
pusha
xchg
stos
jns
int3
fisttpll
cld
adc
push
les
fcmovbe
fildl
jp
outsb
in
iret
fwait
in
jp
ret
mov
mov
loopne
scas
mov
into
in
pop
cmp
popa
popf
mov
rcll
pop
push
jb
cltd
mov
jecxz
add
movsb
out
sub
loope
sub
aas
movsb
jp
daa
pop
jo
inc
outsl
and
pop
inc
xchg
sti
std
or
cli
test
sbb
or
int3
push
sbbb
cmpsb
lret
test
gs
mov
decb
paddw
sub
cmp
mov
aas
std
scas
fdivrs
mov
fmull
loope
lock
popa
mov
es
std
outsb
sub
pop
mov
jl
or
push
ljmp
loope
ficoms
int
push
or
xlat
call
pushf
xchg
mov
stos
inc
ret
jg
out
jg
push
adc
xor
popa
inc
adc
and
inc
push
xor
mov
adc
into
add
mov
pop
loope
je
xchg
add
fldt
and
dec
cli
pop
mov
add
mov
insl
dec
test
nop
or
test
vpsllq
mov
fiadds
sub
jns
mov
cmpsb
dec
loope
sbb
js
mov
outsw
inc
aaa
movsb
rorb
xlat
pop
fsub
pop
je
test
mov
jns
or
movsb
adc
dec
insl
cwtl
loopne
cmp
xchg
or
push
xchg
lods
sub
xor
in
cmp
sub
lods
and
cli
lahf
in
jno
leave
idivl
or
xor
test
idiv
mov
push
out
ja
adc
popa
or
mov
sbb
dec
das
adc
jbe
mov
cmpl
push
jbe
shrl
test
lret
lret
push
fnstsw
jne
int
pop
dec
and
xor
mov
stos
jns
fwait
sbb
dec
pop
push
or
ljmp
sahf
lds
sub
jns
and
inc
cmp
aam
jmp
cltd
outsl
mov
clc
ja
cmp
xor
int
jp
dec
mov
imul
push
pusha
repnz
pop
ret
repnz
mov
aam
fcompl
fnstenv
sarl
pusha
loopne
mov
fwait
in
mov
sub
cltd
mov
popaw
mov
ja
adc
pop
and
leave
int3
dec
notl
mov
cmp
or
lret
stc
sub
arpl
fnsave
out
lret
pop
in
test
adc
jg
pop
mov
and
sub
je
dec
cmpsb
aas
mov
xor
jp
out
nop
inc
ret
cmpl
out
sub
lods
scas
incb
les
mov
sbbl
stos
or
int3
ret
xor
orl
jmp
int3
sarb
fidivrl
icebp
out
repnz
dec
mov
jl
js
decb
aam
push
enter
jae
in
inc
cmp
mov
jns
imul
cld
divb
out
pop
jnp
push
bound
jecxz
dec
cmpb
mov
mov
mov
cmp
jae
push
mov
dec
pop
scas
orb
movsb
into
xlat
sub
sub
imul
out
and
loopne
xchg
push
push
mov
dec
cmc
push
insb
sbb
cmpsb
xchg
sbb
lret
fmull
sbb
fisttpl
mov
inc
les
rorl
aaa
fldenv
xlat
pop
mov
ljmp
repnz
mov
ss
jle
cltd
rcll
mov
lock
push
xlat
repz
adc
popa
pop
sbbl
aad
mov
or
push
fsubrp
shrb
aad
add
popa
inc
sti
and
cmpsb
inc
sub
jo
push
pop
scas
jbe
xor
lret
jno
push
outsb
sub
filds
inc
call
mov
xchg
ret
xchg
pop
sti
js
mov
in
ljmp
cmp
movsb
mov
js
aad
popa
mov
dec
imul
iret
fisttps
dec
mov
cmp
bound
and
pop
rcr
sub
mov
cmp
sarb
lret
sbb
sbb
lcall
mov
add
fcmovnb
mov
loopne
dec
dec
call
outsl
mov
ljmp
sti
mov
pop
mov
pop
adc
in
loop
add
pop
mov
cltd
clc
sbb
leave
xchg
imul
fmull
sub
sbb
mov
adc
jmp
push
jge
cmp
fs
jmp
pushf
nop
enter
adc
repz
lods
push
and
lock
gs
rcrb
inc
das
mov
fsts
jge
mov
pop
mov
std
cmp
imul
and
divb
cwtl
adc
xorb
jb
adcb
mov
wrmsr
jnp
add
out
cmp
mov
hlt
jmp
arpl
lock
call
aad
data16
dec
adc
pop
or
cmp
push
nop
fsubp
rdtsc
ja
sub
push
push
mov
push
fsubl
jp
test
add
filds
xor
shl
in
in
ret
mov
xchg
cmp
xchg
add
dec
pushf
xchg
cs
cli
filds
outsb
pop
jl
push
jge
subps
insb
push
or
sbb
push
test
and
xchg
rcrb
cld
xlat
stos
adc
dec
out
pop
mov
dec
icebp
pop
sbb
xor
fs
cs
es
sbbl
cmp
push
popf
sbb
sub
push
scas
dec
cwtl
dec
xchg
lret
pop
sbb
and
imul
popf
outsl
mov
and
rcrb
pop
xchg
jno
xchg
inc
or
cmp
jmp
hlt
xchg
jmp
data16
jge
push
pusha
or
mov
cmp
sbb
xor
cmp
lds
scas
mov
aad
mov
mov
inc
mov
cmpl
or
mov
cmpsl
mov
pop
outsb
out
and
xchg
pushf
or
pop
cwtl
push
inc
push
mov
adc
and
out
adc
mov
aaa
ljmp
inc
movsb
mov
hlt
inc
sub
subl
and
mov
pop
jge
mov
push
add
add
inc
sbb
push
nop
aaa
cmp
lret
sbb
sbb
scas
push
and
outsl
or
shll
dec
inc
rcrb
fildl
rcl
pop
notl
test
inc
mov
lea
push
xchg
outsb
mov
aas
xor
call
enter
add
fsubrs
sbb
sti
das
fcmove
cmp
mov
movsl
lret
mov
pop
pushl
mov
test
mov
lcall
sub
cmp
cltd
pop
repnz
je
lods
ljmp
xchg
sub
stos
pop
add
pop
jecxz
mov
jnp
test
jecxz
sbb
push
and
ret
push
mov
pop
dec
mov
jbe
add
xor
add
mov
add
jmp
cmp
rcl
ror
int
sub
stos
ljmp
js
jl
js
inc
hlt
int3
mov
jmp
mov
call
jo
sahf
fwait
icebp
fdivrs
and
push
fisubl
sub
rorb
mov
stos
jg
inc
cmpsl
insl
inc
fistpl
inc
cmp
xor
sub
mov
push
and
inc
mov
int
mov
mov
jle
mov
outsb
pop
in
movsl
loopne
push
jnp
adcl
xchg
push
mov
fsubl
leave
push
into
test
lret
push
scas
daa
icebp
mov
pop
loope
es
in
lret
jne
or
and
jl
pop
movsl
or
push
out
and
push
pop
jno
jne
cld
stos
add
pop
xor
jle
lret
mov
rclb
add
pop
roll
dec
adc
mov
push
mov
add
inc
pusha
mov
inc
pop
rcl
sbb
rcrb
test
dec
jae
stos
mov
lret
jge
leave
mov
fiadds
fnstenv
out
lcall
sub
in
or
in
pop
dec
sub
js
mov
into
xor
fnstsw
and
inc
enter
xor
dec
jae
rclb
mov
in
nop
aas
clc
sub
pop
adc
inc
sbbb
mov
jne
or
jg
inc
ja
and
add
imul
inc
sub
movsl
cmc
cwtl
lock
cld
mov
cmp
movl
mov
sub
dec
loope
cmp
mov
cmpl
movsb
sti
clc
repz
mov
xchg
lods
fisubrl
rclb
mov
lret
stos
sub
insb
or
push
xor
push
outsl
jnp
dec
xchg
dec
cwtl
sbbl
mov
pop
or
in
sahf
or
adc
cmc
fildl
test
sbb
mov
pushf
mov
cltd
loop
in
adc
jp
cmp
sbb
push
sub
mov
push
mov
mov
fisubl
add
ljmp
mov
outsb
sub
xor
lcall
adc
sbb
mov
cmp
orl
adc
mov
imull
pop
mov
or
push
mov
insb
imul
mov
and
push
cmp
iret
mov
call
and
out
mov
std
pusha
ljmp
shlb
insl
pop
vpmacsdql
mov
lds
sbb
xchg
inc
sub
xchg
cwtl
jmp
shrl
push
mov
test
popf
addr16
stc
push
jg
test
repnz
lahf
jnp
dec
aam
aam
push
hlt
aas
stos
clc
jae
push
imul
xchg
xor
add
xchg
mov
push
mov
je
mov
testb
mov
or
xchg
jmp
je
mul
and
mov
dec
out
fcoms
into
cwtl
cmpsl
daa
je
and
mov
ljmp
mov
add
xor
setl
xor
es
leave
sahf
push
rclb
sbb
sti
sahf
or
adc
sbb
mov
push
pushf
dec
xor
and
lret
insl
repz
inc
shrl
pusha
add
js
cs
or
dec
and
cmp
dec
push
into
and
sbb
mov
xor
fs
add
xor
outsb
popa
or
dec
pushf
in
mov
cmp
push
fdivrs
scas
inc
leave
mov
xlat
fcompl
lahf
mov
push
jae
imul
xlat
dec
dec
dec
andl
lret
xlat
into
popf
inc
mov
and
pop
cmp
rcrb
arpl
xchg
jmp
adc
push
jg
dec
mov
xor
sub
xchg
loope
cmpsl
fdivp
out
lods
fwait
mov
pop
outsb
in
test
arpl
mov
push
dec
push
outsl
int
in
xchg
pop
lret
adcb
cmc
ret
adc
adc
fadds
int3
enter
mov
popf
pop
pushf
addr16
dec
mov
dec
mov
cmp
mov
xor
and
and
inc
lret
add
fmull
xchg
cmp
and
cmp
jmp
inc
and
call
call
lods
roll
imul
popf
xorl
and
jne
in
pop
ja
js
inc
hlt
movl
mov
xor
mov
movb
and
jmp
ror
iret
rol
stos
adc
jb
pop
or
push
js
push
js
xchg
insl
pop
sbb
and
scas
pushf
scas
xchg
or
repnz
mov
notb
int
cmpsb
push
cmp
fdivrs
and
sub
and
dec
movsb
test
push
int
and
jecxz
test
mov
sub
stc
and
cmp
test
mov
push
vshufps
inc
inc
loopne
into
lgdtl
push
sub
and
repnz
inc
jne
cmpl
pushf
xchg
stc
mov
out
dec
lea
sub
sbb
sub
and
rorb
rcrb
mov
jns
xchg
xorb
mov
mov
mov
mov
sbb
popw
xor
out
repz
sub
mov
shrb
pop
mov
dec
testb
sbb
in
out
dec
mov
iret
pop
mov
and
cmp
cli
movsb
stos
adc
in
sbb
or
push
jnp
dec
push
sub
in
xorb
rcrl
fidivrs
adc
data16
ljmp
popf
xor
dec
mov
jnp
shl
mov
xchg
movsl
popa
adc
cmovnp
dec
mov
fldt
sub
hlt
imul
arpl
icebp
test
mov
clc
sbb
out
cmp
xor
loop
loope
std
pop
cmp
icebp
test
fxch
je
xchg
xor
roll
push
and
push
loope
sbbl
pop
jge
xor
mov
lcall
push
lods
aad
push
bnd
stos
push
fildll
mov
shl
stos
jno
adc
cmp
fdivs
sub
es
xchg
je
cwtl
push
inc
mov
nop
in
in
lods
shll
imul
mov
adc
out
inc
bnd
int
fwait
clc
out
mov
daa
adc
cmp
push
mov
hlt
into
push
add
imul
shr
test
pop
je
cmpsl
jg
out
inc
lahf
mov
pmaddwd
ror
push
sbb
jns
mov
test
mov
repnz
nop
pop
xchg
and
nop
pop
popfw
hlt
add
mov
ret
and
push
shlb
movsb
mov
pop
dec
cmp
lret
push
jmp
testb
xchg
xchg
mov
sbb
fidivl
cwtl
add
mov
adc
fucomi
dec
sub
adc
jns
push
sahf
mov
push
lret
inc
stos
sbb
or
popf
mov
shr
lcall
lea
popa
cmp
pop
or
push
call
in
xor
adcb
push
int
repnz
sbbl
mov
test
jmp
lods
sub
pop
sarb
push
cmp
lret
or
sub
imul
xchg
std
adc
into
mull
xchg
popf
aam
xchg
mov
into
xlat
insb
fucomip
or
dec
aam
aad
mov
mov
jge
jle
cmc
cmp
scas
pop
mov
das
inc
or
inc
jb
inc
pop
xchg
sub
test
pop
mov
dec
stc
repnz
lahf
push
and
rol
ficoml
adc
test
pop
outsb
mov
lods
pop
or
into
out
leave
lret
aad
movl
cwtl
repz
or
lret
mov
pop
mov
popf
scas
or
mov
sub
ret
cmp
fistl
sbb
lds
sub
or
xlat
xchg
aas
into
add
inc
jl
pop
lods
inc
push
add
lcall
shl
push
jo
fstpt
xor
cwtl
xchg
ret
mov
inc
std
adc
fsubrs
cmp
sub
psubsb
mov
sbb
push
imul
cltd
scas
fwait
mov
push
in
mov
xorb
repz
jmp
mov
test
fdivrs
adc
lret
push
inc
bound
mov
test
pop
ja
sub
pushf
mov
push
pop
xchg
test
cmp
mov
inc
push
sbb
scas
cmpsl
ljmp
push
testl
push
push
stc
xchg
and
add
lods
rorb
js
ds
in
fs
or
cmp
adc
loopne
negl
mov
mov
lahf
mov
sbb
mov
or
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
sub
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
call
jmp
add
jmp
iret
ror
aas
rol
iret
rcll
and
push
fucomip
and
push
js
push
sbb
jb
fsubs
test
dec
enter
or
jno
inc
dec
mov
cs
mov
jnp
cmp
adc
pop
push
mov
xor
imul
mov
andl
sub
rcl
out
fldcw
dec
lahf
outsl
push
dec
xor
inc
push
insb
jo
cmovns
jno
cli
or
lods
fisttpll
sbb
inc
jne
pop
rcr
mov
sbb
in
movsl
or
ret
shl
jg
lret
push
xchg
push
lahf
int
loop
jmp
loope
jmp
push
add
and
jmp
test
movsl
lret
inc
mov
ror
add
stos
in
int
in
inc
jo
repz
es
cmpsb
sbb
push
test
sarl
push
jl
mov
fimull
and
cli
push
lea
mov
mov
outsl
cmp
mov
in
imulb
pop
lret
aas
int
add
pop
jle
gs
and
aad
cmpsl
mov
or
aad
sub
xchg
jg
mov
and
xchg
mov
bound
incl
push
je
aaa
out
scas
mov
sti
test
jnp
push
jle
sub
adc
out
pop
retw
loopne
xchg
add
jp
add
sbb
sub
aaa
negb
add
mov
mov
adc
cmp
mov
push
loope
es
dec
or
fsubp
xchg
arpl
sbb
adc
pop
push
and
xchg
fisubrl
pop
les
push
pop
stc
test
leave
mov
pop
das
adc
mov
and
sbb
xchg
lcall
ss
and
xchg
add
lcall
mov
mov
aaa
jo
imul
fisttpll
push
jg
sbbb
ret
push
and
mov
inc
mov
cmp
push
push
and
pop
sbb
repz
popa
add
scas
cmp
jmp
lods
shll
dec
adc
clc
insb
and
insl
int
pop
insl
xchg
dec
pop
ficoml
cmovbe
adc
sti
sbb
jnp
adc
cld
fldl
fsubl
nop
inc
shl
std
xchg
in
add
lds
cmpl
lret
sbb
fcmovnb
push
int3
sar
and
mov
pop
icebp
ret
mov
or
mov
loopne
jmp
enter
cmc
mov
jecxz
adc
pop
push
aam
arpl
pop
cmovne
inc
cmpl
dec
inc
sti
xchg
outsl
mov
or
xor
and
mov
jmp
xchg
in
call
addb
call
pop
popf
xor
enter
pop
jns
mov
xor
mov
insl
fwait
ss
xchg
repnz
pop
add
fistps
push
xchg
cli
fwait
dec
mov
jle
cmp
out
xlat
xchg
out
psubb
and
dec
lahf
sub
ret
movsb
push
add
cmpsb
fsubrl
add
pop
outsl
jl
mov
test
adc
xchg
je
fcom
aad
addr16
ljmp
repnz
in
ficompl
pusha
out
pop
lahf
neg
dec
lods
jnp
cmpsl
mov
push
adc
sub
cmp
cmp
movsl
iret
dec
xchg
stos
leave
mov
gs
mov
jns
sti
xor
pop
mov
jb
leave
xor
dec
mov
pushf
cld
adc
test
jbe
pop
pop
popf
sub
sbb
jb
lea
mov
xchg
dec
ds
sub
call
xchg
sbb
push
or
bound
fiaddl
mov
add
pop
lock
insb
jnp
and
stc
mov
imull
outsl
jns
and
ret
pop
fwait
popa
xchg
or
cs
xchg
stos
outsb
push
cli
cmovnp
jae
vcomiss
mov
icebp
adc
call
sbb
std
xor
jl
push
xchg
jae
bound
jge
addl
dec
lcallw
int
and
lahf
stos
int
pop
stos
and
pop
icebp
call
lcall
sbb
mov
inc
cli
pop
dec
xchg
rcll
imul
jb
adc
adcl
fld
inc
sbb
out
pop
in
ss
cmp
add
xor
or
mov
adc
xor
mov
mov
sub
or
jmp
xlat
ror
aas
leave
rcr
rolb
xchg
mov
push
js
cld
cmp
xchg
loope
jle
jo
adc
mov
adc
xchg
clc
pop
jge
lea
pushf
cltd
repnz
andb
jae
int
cmp
pop
jge
jmp
cmp
mov
test
mov
sbb
lret
xorl
xchg
jl
sbb
xor
fmul
test
jle
in
mov
idiv
out
das
int
out
lret
imul
rorl
fadd
insl
jmp
add
push
mov
xchg
or
mov
sbb
fdivr
push
jp
into
repnz
cmp
add
push
jne
repnz
cs
inc
test
cmp
mov
je
dec
dec
sahf
inc
sbb
and
movb
cmp
fadd
rol
pop
push
aaa
sub
ret
enter
in
mov
outsl
repz
pop
fmull
out
xchg
pop
fsts
mov
xorb
dec
test
jno
add
mov
xchg
pop
xchg
lods
jbe
lret
xor
dec
mov
loope
enter
jle
sub
and
pop
and
testl
and
jno
ds
push
sarb
mov
fldcw
sbb
sub
jb
push
cmpsb
dec
cmp
sbb
lods
leave
xor
jno
sbb
lret
out
fisubs
cltd
mov
sbb
lret
mov
lods
xchg
jb
adc
repnz
jecxz
inc
xor
movsl
imul
es
pop
rep
cmp
dec
inc
add
shrl
outsl
fsts
pop
mov
pop
sbb
inc
rcll
inc
xor
and
test
xlat
or
fwait
and
mov
enter
pop
inc
les
dec
out
adc
pop
push
stos
cld
push
mov
cmp
xor
stos
fbld
imul
jns
fxch
jle
cmp
aad
loopne
xor
fidivs
push
cwtl
push
daa
push
ret
xor
push
das
ret
jecxz
adc
lahf
add
je
std
push
jnp
sar
dec
mov
iret
mov
adc
addb
dec
out
cmpsl
dec
sbb
sti
sbb
inc
add
cwtl
aad
dec
popf
test
jp
push
call
nop
cmp
cltd
mov
sub
scas
addr16
mov
jb
pop
adc
or
adc
les
sbb
push
repnz
cwtl
shlb
icebp
adc
push
scas
xchg
bound
push
pop
aad
faddl
ljmp
aam
add
and
cmpl
jbe
icebp
inc
outsl
mov
jmp
into
jg
jno
pusha
movsl
and
pop
jno
imul
shll
imul
out
xchg
ret
mov
mov
push
loopne
jne
jb
fidivrs
push
jle
outsb
in
arpl
stc
in
mov
lret
mov
mov
mov
add
in
jne
or
pop
dec
sub
mov
test
or
mov
or
mov
int
jns
sub
cmp
xchg
fs
sbb
subl
sbb
ss
lods
or
shrb
fadd
rol
jae
or
shll
mov
lea
or
ffreep
cwtl
repnz
jae
and
sti
cmp
mov
leave
mov
aaa
push
push
dec
notb
mov
inc
push
and
out
mov
add
out
les
test
repnz
imul
add
xor
stos
sub
cmp
leave
push
in
push
jno
andl
jmp
out
aaa
in
dec
out
and
adc
mov
out
and
push
sbb
or
jle
in
mov
rcrl
jl
lcall
xchg
fsubl
pop
mov
dec
mov
jle
aas
sub
or
ret
adc
cmp
push
pop
int
shlb
dec
adc
xor
aas
and
sbb
jno
inc
jecxz
inc
hlt
sub
in
dec
push
adc
popl
xor
push
sbb
lock
mov
inc
leave
test
jnp
jns
pop
loop
popl
in
jecxz
xor
std
vcvtpd2dqx
or
shll
sti
sub
int3
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
jmp
cmp
aad
dec
add
add
sub
das
js
push
js
lods
pop
inc
test
push
mov
inc
int
add
mov
shlb
mov
mov
inc
cmp
gs
adc
dec
push
mov
xchg
dec
sahf
xchg
rol
aad
sbb
add
cmp
mov
and
or
mov
xor
int3
ss
int3
sbb
shr
in
aas
dec
xor
pop
inc
pop
test
test
mov
xor
jb
inc
sbb
mov
jno
jl
test
pop
lret
cli
fs
mov
rorb
mov
pop
sub
dec
inc
in
add
mov
rcll
shrl
jl
pushf
in
or
ds
das
xor
mov
aam
push
aaa
adc
mov
in
jb,pn
sub
mov
mov
jg
cmp
hlt
mov
push
mov
cmpsb
or
dec
push
rcrb
jno
push
cmpsb
adc
sub
mov
jnp
hlt
dec
or
adc
jns
pop
jge
ret
xorb
ret
aaa
nop
or
into
jno
iret
xor
and
dec
push
movsl
ss
jnp
xor
stos
xchg
aas
imul
jnp
jmp
jnp
cmp
aam
int
cmp
mov
sbb
xor
push
mov
and
sti
adcb
out
fwait
jmp
and
add
jmp
sub
add
cmpsl
in
mov
int3
hlt
out
adcl
jecxz
cmp
sbb
mov
mov
aas
pop
pop
out
or
fadds
divl
addb
movsb
roll
dec
popl
xor
in
loop
jno
cmp
pop
rcl
aas
out
push
inc
testl
add
xor
roll
sti
mov
mov
stc
int3
cmp
mulb
mov
jecxz
mov
inc
sbb
popa
inc
pop
out
mov
lret
add
mov
dec
in
add
sbb
jno
arpl
mov
test
or
aam
mov
imul
pusha
or
xor
ret
push
testb
int3
sbb
jecxz
lock
mov
xchg
adc
cmp
out
lret
out
cmpsb
push
mov
dec
fs
or
enter
jne
push
sahf
push
pop
mov
inc
mov
xor
in
loope
cwtl
adc
int3
add
sbb
scas
ret
xor
xor
sarb
and
mov
sub
push
mov
jg
jecxz
ss
in
jnp
dec
fs
loopne
fsubr
sub
inc
or
push
push
push
pop
pop
dec
sbb
inc
jmp
lahf
lods
jmp
xor
xor
mov
add
shrb
aam
push
mov
pop
and
jo
or
cs
jecxz
incl
push
xor
inc
insl
aaa
dec
add
cld
out
adc
fs
xor
sbb
pop
push
push
fcomi
pop
lea
or
pusha
dec
fldl
bound
mov
xchg
ret
jnp
jmp
and
push
fucomip
insl
sbb
outsb
cmp
push
insl
out
add
lds
movsb
jnp
call
bound
xchg
ret
aad
push
or
enter
or
addr16
es
fwait
dec
push
adc
adc
lret
data16
clc
cmp
sahf
out
sti
sbb
mov
sarb
mov
xchg
jne
adc
mov
xchg
pop
cwtl
cmp
mov
pop
movsl
dec
andb
iret
jmp
mov
push
inc
clc
sub
aaa
cmp
dec
cmpsl
dec
push
pop
mov
sbb
js
and
cmp
in
in
add
out
adc
xchg
lcall
jmp
add
fists
pop
scas
mov
call
lcall
mov
data16
aad
fimuls
add
jne
repnz
clc
and
xlat
leave
and
jmp
mov
mov
push
popf
xchg
xchg
repz
in
or
sti
inc
ljmp
data16
mov
andl
mov
sarb
orl
lds
jbe
pop
popl
mov
ss
inc
test
dec
and
dec
jle
aas
jle
lret
aam
sub
pop
sub
xchg
mov
vpshuflw
mov
in
pop
xchg
push
xor
fnsave
push
or
sbb
push
jae
jge
shlb
js
ror
pop
sbb
fistpl
in
or
sub
add
xor
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
adcl
add
jmp
enter
rcl
iret
shlb
testl
js
mov
pop
lcall
mov
cmp
lea
add
mov
movl
cmp
test
mov
or
xorb
jns
or
in
ficompl
sub
ret
enter
jo
sub
stc
push
test
jnp
pop
js
inc
push
pop
addl
loop
mov
scas
add
mov
in
inc
aam
movhps
xchg
sbb
cmpsb
push
pop
outsl
fwait
dec
pop
inc
fstps
jmp
dec
movsb
imul
sbb
arpl
lret
or
fadds
xchg
sub
inc
mov
adc
mov
dec
dec
les
fstps
aaa
dec
arpl
std
inc
in
scas
imul
cmpsl
jmp
push
pop
add
or
or
add
cmp
jmp
mov
and
divl
cmp
cmp
out
mov
add
adc
mov
pop
pop
les
dec
cs
pushf
popa
xor
sub
lret
into
push
aad
dec
add
fwait
test
inc
mov
bts
scas
jnp
sarl
push
cs
hlt
stos
movsb
repnz
dec
clc
xchg
movsl
je
popa
push
aaa
xchg
das
icebp
mov
pop
mov
dec
xor
xchg
hlt
pop
fsts
jp
inc
pushf
cli
mov
inc
or
and
add
sbb
mov
dec
push
data16
aam
push
lret
push
cltd
in
mov
idivb
jo
dec
mull
sbb
data16
dec
lds
xor
insl
sarb
rorb
jecxz
mov
mov
rcl
adc
jmp
test
in
push
adc
std
add
shll
sbb
vmovdqu
inc
mov
mov
sbb
lock
jbe
push
xor
stos
jnp
push
dec
xor
sbb
jmp
sub
or
inc
push
add
daa
loope
paddq
scas
popf
and
or
fwait
mov
mov
push
fwait
jo
mov
mov
shlb
add
outsb
push
ret
aas
clc
pop
int3
mov
ret
icebp
dec
mov
dec
add
pusha
jl
lret
fdivl
mov
cmc
jl
mov
xor
cmpsl
out
mov
jae
popf
mov
mov
add
cmpsb
mov
mov
add
in
mov
cmp
mov
lods
outsb
xlat
shlb
and
fwait
mov
icebp
test
out
lahf
sbb
sahf
stos
jno
xchg
sbb
ret
popf
adc
push
mov
in
mov
in
dec
mov
stc
add
cvtps2pd
arpl
sbb
jmp
pop
inc
xchg
jne
add
mov
or
mov
push
xor
inc
loop
push
outsb
loope
cli
lahf
rcrl
sbb
cmc
mov
jl
test
cmc
loop
mov
mov
jb
shll
xchg
inc
jo
outsl
shlb
imul
push
cmpsl
add
sub
imul
sub
cpuid
bound
stc
dec
mov
ds
fsub
xchg
scas
or
sub
xlat
cmp
stos
test
mov
and
dec
cmpsb
bound
mov
shll
xlat
aaa
jmp
out
xchg
lock
jmp
add
sbb
mov
inc
sub
sbb
es
cmp
add
cmp
aam
arpl
push
or
push
adc
test
mov
outsb
jg
mov
xorb
sub
xor
mov
push
cmp
lods
pop
insl
lahf
loop
iret
dec
add
repnz
adc
pop
mov
push
inc
cmpsl
push
ret
test
mov
or
mov
lock
pop
lret
or
stc
in
mov
cmpsl
dec
mov
sub
fldt
mov
inc
in
rol
test
movsb
imul
mov
lods
nop
mov
arpl
dec
aas
jg
pop
js
addb
adc
add
push
push
popa
inc
stos
shll
mov
pop
aad
shrb
xchg
or
testb
add
and
inc
xchg
lahf
xor
loope
inc
aam
sbb
jmp
ret
int3
fcmovbe
rcl
movsl
or
and
and
js
inc
sbb
pop
jmp
xor
fs
into
ret
popf
sub
out
pop
jnp
outsb
cmc
and
outsb
adc
mov
pop
xchg
call
mov
adc
xorl
push
xor
push
xlat
in
call
out
out
mov
lea
push
out
mov
push
hlt
push
lods
divb
pop
xchg
pop
into
es
inc
lahf
loopne
fldl2t
mov
cmc
mov
or
dec
fiaddl
stos
jl
and
sbb
in
xchg
xor
and
push
or
pop
xlat
pop
adc
imul
enter
outsl
pop
ret
lret
nop
xor
aam
mov
push
mov
xor
mov
adc
adc
in
pop
aas
cmp
notb
dec
je
push
std
mov
loop
inc
ja
sbb
add
pop
sarl
adc
pop
out
sbb
sub
pushf
imul
add
push
in
iret
push
xor
cmpsl
mov
lea
lods
cld
push
fmulp
aaa
mov
arpl
inc
dec
pop
xchg
notl
mov
cmpsb
cmp
pop
xchg
ret
mov
mov
jne
fisttpll
outsl
ficomps
and
xchg
lock
js
sub
xor
cmp
outsl
daa
jae
sti
sub
inc
pushf
ror
sub
sub
pop
sub
pop
jmpw
mov
iret
insb
mov
pop
dec
mov
cmp
inc
inc
xor
test
pop
mov
dec
sub
kxorw
popf
mov
cli
dec
mov
sub
push
add
or
cmpsb
mov
xchg
call
addb
lret
push
xorl
push
adc
push
cmp
add
popf
xor
jbe
mov
or
movsl
ljmp
mov
xor
xor
repz
jne
mov
mov
pop
add
xor
and
lret
mov
pop
vmovaps
aaa
out
add
jne
or
jne
push
cmc
jmp
mov
pop
inc
mov
out
jns
mov
insb
or
int3
loope
xchg
push
cmp
adc
sub
clc
loop
dec
add
cmp
fisubs
inc
insb
lret
add
sti
leave
add
jno
and
test
xor
and
pop
add
int
ljmp
and
cmp
lret
dec
jmp
pop
fwait
pop
in
and
or
ss
dec
or
sbb
out
aam
cli
rorl
sub
iret
add
rcl
dec
jl
cmp
insb
pop
jl
mov
test
in
scas
jo
bound
push
push
cmpsl
xchg
dec
sarl
xorb
iret
mov
pop
hlt
sbb
sub
stos
adc
add
orl
ss
mov
dec
cwtl
jne
cltd
jecxz
inc
xor
leave
imul
jno
iret
stos
push
mov
cmp
addr16
jmp
push
rcrl
pushf
push
cmp
lods
push
mov
or
mov
pop
jb
mov
sbb
sbb
jb
add
or
mov
mov
xchg
iret
addr16
dec
and
call
aaa
repnz
xlat
pop
nop
push
mov
les
mov
test
in
lahf
out
push
push
push
lahf
loope
add
cmp
xchg
mov
int
sub
outsb
sti
mov
push
nopl
clc
rol
clc
hlt
or
mov
jne
jno
cmp
das
jl
sbb
imul
testb
push
mov
adc
les
int
pop
cmp
mov
call
or
enter
push
dec
vcvtpd2psy
movsl
stc
mov
repz
ret
sbb
dec
add
add
xchg
push
jecxz
in
dec
xchg
out
bnd
mov
iret
add
fcoml
inc
dec
or
lea
jg
add
xchg
out
fcomip
or
sub
out
cmp
adc
xor
pop
rcrl
jg
rcr
mov
sarb
filds
xchg
jbe
mov
dec
mov
test
shl
mov
mov
push
test
lret
sbb
mov
push
jge
leave
lock
mov
jmp
int
aas
fcmovbe
leave
aad
or
lds
and
push
js
cwtl
adc
nop
sti
inc
sarl
shr
inc
sbb
cld
adc
scas
lahf
xorl
push
pop
fldl
jbe
jne
stos
icebp
cmpsl
or
jecxz
pop
sbb
inc
pop
jae
imul
arpl
push
pop
cli
add
pop
pop
push
inc
pop
rcll
inc
push
aaa
call
les
fcmovbe
pop
cmc
stos
push
dec
cwtl
std
fidivs
push
and
lcall
jp
iret
pop
subl
add
sub
hlt
jle
mov
xchg
sub
or
fbld
sbb
lcall
loop
addr16
mov
push
orb
mov
cmpsl
arpl
sbb
nop
jl
and
scas
xchg
in
fwait
mov
ja
cmp
adc
dec
cwtl
hlt
mov
cmp
xor
mov
daa
add
push
popw
inc
mov
mov
jne
mov
fdivrl
sbb
push
ss
xchg
pop
xchg
xchg
xor
xchg
movsl
pop
lods
sub
pop
cwtl
cmpsl
mov
jb
popf
in
inc
scas
push
insb
popf
mov
xchg
lret
cmp
gs
out
sub
cwtl
fwait
into
daa
mulb
jo
push
inc
ret
push
cmp
fmuls
dec
pushf
xor
pop
cmp
pop
or
dec
jbe
add
addr16
pop
loopne
dec
rclb
lods
pop
adc
xor
out
mov
jns
imul
xchg
xchg
rep
sarb
mov
in
push
xor
int3
sbbl
mov
push
gs
jge
mov
push
dec
lahf
repnz
sbb
xor
and
subb
fidivs
jp
and
xor
ret
or
sbb
and
fdiv
in
push
pop
xchg
insl
fst
je
imul
or
adc
xchg
sub
fsubr
insl
cli
leave
pop
adc
xchg
shlb
cld
lahf
mov
push
mov
shll
sbb
iret
xor
xchg
negl
fidivs
daa
pop
jg
push
insl
mov
js
or
movsb
es
adc
and
dec
stos
mov
addr16
pushf
nop
js
repz
inc
cmpsb
cmc
stos
pop
sbb
fisubl
and
in
int3
aam
mov
ljmp
cltd
aaa
pop
jbe
mov
jmp
xchg
dec
push
pop
adc
cmpsl
mov
test
mov
and
ds
and
cmp
in
nop
mov
loope
aam
inc
xlat
inc
out
xor
imul
mov
dec
inc
pop
dec
imul
fstpt
cmpl
mov
mov
out
stos
ficompl
mov
scas
cmp
sbb
ds
dec
inc
stos
jno
ljmp
call
mov
sahf
inc
mov
jp
ja
and
repz
xor
pop
sbb
xchg
ljmp
add
mov
orb
xchg
mov
jl
fstps
mov
sub
lock
sbb
inc
cmpsb
add
push
imull
sarb
xor
sar
fwait
sbb
testb
popa
insl
sbb
dec
jne
xor
nop
fldt
addb
sbb
mov
xor
jecxz
sbb
lock
popf
dec
stc
mov
stos
ds
nop
or
xchg
sahf
xor
lods
cwtl
fildl
jge
test
leave
xchg
jns
aam
or
xchg
cmpsl
movsl
mov
fdivs
pop
repz
fisttpll
repz
mov
jmp
or
push
pop
mov
mov
movsb
rcrl
cwtl
test
cmp
mov
out
jg
xchg
jno
lods
jbe
xchg
sti
mov
jge
jle
pop
out
es
shrb
inc
addl
and
aaa
outsl
jb
aaa
cltd
mov
rcl
stc
push
lock
negb
lret
inc
xchg
add
pop
inc
cld
pop
mov
fwait
int3
pop
ja
xchg
jbe
es
ret
or
add
jl,pn
dec
adc
bound
xchg
jge
sbb
xchg
xor
test
push
mov
sbb
jnp
mov
xchg
insl
or
mov
push
mov
out
xchg
sahf
scas
add
pop
testl
mov
test
in
pop
imul
pop
inc
push
adcl
mov
shlb
ss
mov
dec
mov
adc
mov
mov
add
mov
sbbl
mov
jmp
lret
rcl
ror
fsin
sbb
pop
push
jno
jl
js
push
js
test
and
scas
sti
sbb
les
mov
mov
push
inc
push
mov
fucom
pop
les
shrb
lcall
mov
test
mov
xor
stos
mov
test
mov
push
sub
sub
mov
pop
mov
daa
sub
sub
les
add
jge
pop
mov
lret
mov
pop
out
repz
ss
push
mov
imul
xor
insl
add
push
decl
repnz
jg
mov
mov
ret
pop
lods
xor
push
cmpsb
negb
cmpsb
pop
push
pop
inc
jns
mov
mov
pop
out
frstor
shl
arpl
mov
cs
push
mov
jmp
mov
lcall
xor
cld
sbb
push
int3
negb
or
out
in
xchg
mov
pop
out
or
in
push
movsb
in
rcl
and
int3
cmc
insl
sub
dec
das
nop
jo
test
add
mov
xchg
xor
rcl
movsb
pop
mov
leave
into
add
aam
xchg
dec
jmp
rcrb
fcompl
ljmp
daa
mov
stos
xchg
call
mov
jbe
cli
inc
cmp
std
loope
testb
divb
xor
fdivl
mov
pop
ljmp
repz
jge
aaa
add
add
inc
imul
mull
flds
mov
pop
jle
daa
das
imul
lods
dec
or
jle
xchg
imul
enter
mov
add
les
adc
mov
xorb
pushf
and
push
dec
mov
lahf
fdivrs
xor
aad
xor
in
lods
inc
int3
and
std
cltd
divb
or
inc
test
fstpl
and
adc
sub
and
and
and
pop
les
pop
cmpsl
sbb
lods
push
clc
jo
sbb
jg
xor
je
jno
into
push
stos
je
and
imul
pop
sbb
cmp
xchg
imul
adc
shl
into
xorb
xor
das
mov
inc
push
mov
push
call
sbb
jp
or
test
mov
mov
into
and
inc
push
xor
cmc
daa
cmpsb
dec
lret
sti
pop
dec
addr16
add
xchg
push
dec
push
adc
movl
xchg
in
lock
jl
push
rcr
jns
mov
insl
fsubrs
pop
sbb
cmp
mov
pop
cmp
ja
pop
insl
out
pop
lahf
in
cmc
xor
dec
enter
or
adc
lahf
mov
imul
in
cmp
or
sub
aam
icebp
sub
fsubrs
mov
cmp
out
ljmp
in
ftst
mov
adc
mov
shl
push
push
sahf
mov
cli
loop
out
xor
pop
imul
fldt
and
movsl
dec
mov
popf
daa
add
enter
pop
mov
adc
das
jg
add
lret
hlt
push
mov
comiss
pop
in
test
sub
xchg
in
jle
add
mov
jmp
sahf
in
mov
inc
add
dec
aas
mov
lret
sub
mov
xchg
lret
jno
scas
sbb
cwtl
es
cmp
pushf
dec
hlt
xchg
jne
mov
xchg
cmp
xchg
xor
shl
dec
icebp
sarb
scas
frstor
jl
in
xchg
xor
ficomps
and
insb
push
push
cmpsl
movsl
jo
or
sub
sbb
movd
push
fwait
lcall
fmul
pop
stos
xor
pop
dec
xor
push
sub
adcl
rorb
sbb
data16
xlat
cwtl
jmp
mov
aaa
cmovo
fdivl
pushf
and
nop
mov
push
imul
out
fadd
imul
sub
fbstp
inc
adc
sbb
repz
mov
jg
or
cld
out
int
das
ljmp
stos
ja
jbe
das
out
mov
aaa
scas
insl
aas
inc
es
scas
sbb
icebp
pushf
leave
fiaddl
arpl
push
mov
inc
bound
mov
nop
aas
lock
ds
out
imul
mov
add
adc
cmp
add
test
add
push
mov
test
add
add
mov
cmpsb
inc
add
adc
mov
dec
mov
jmp
jmp
ret
rcl
rol
into
push
cmc
loope
push
add
js
jl
js
std
mov
jns
aas
mov
mov
xor
mov
dec
mov
daa
arpl
jg
inc
jp
xchg
cs
mov
int
data16
dec
mov
shlb
cmp
addb
es
xor
add
cli
std
test
mov
cwtl
lods
loope
pop
xor
xchg
outsl
cmp
or
out
jl
xchg
mov
sub
js
dec
push
int
push
mov
push
daa
sbb
push
in
clc
scas
cmpsl
out
pushf
adc
cltd
imul
xchg
and
cmc
and
inc
clc
enter
mov
push
shlb
dec
outsb
pop
pop
lods
and
dec
aam
xchg
lods
push
ljmp
xor
push
test
and
and
or
pushf
mov
push
jae
movsl
out
adc
jmp
negl
leave
cli
out
dec
in
xor
pop
pop
idivb
js
jle
fsts
cmp
imul
xchg
xlat
int3
or
fsubrs
ret
pushf
lcall
and
xchg
scas
mov
sub
icebp
call
lods
inc
call
jl
lret
adc
jp
les
pop
add
push
sub
mov
inc
fistpl
call
leave
xchg
mov
dec
rcr
and
mov
mov
and
add
leave
fimull
pop
into
fstpt
loopne
jmp
mov
fldcw
inc
and
imul
fwait
test
cmpsb
lahf
push
mov
icebp
cmpsl
sub
sub
adc
test
xchg
dec
mov
not
xchg
ss
push
out
jnp
fstpl
jbe
mov
adc
mov
mov
mov
int3
dec
adc
push
ret
push
cmp
in
cs
dec
mov
mov
jg
addr16
adc
pop
xchg
adc
xor
adc
loop
jo
xor
sub
out
jle
sbb
or
fcmovnu
scas
call
add
adc
shll
mov
in
enter
lds
adc
mov
push
scas
sbb
insl
out
jmp
rcrl
xchg
push
inc
mov
div
pop
ret
adc
aaa
push
jae
jp
addl
add
or
jmp
jecxz
in
int3
cs
hlt
lods
mov
pop
out
jp
push
or
inc
dec
addr16
xchg
push
pop
daa
sub
bound
je
push
xor
js
mov
inc
mov
cld
xchg
mov
mov
or
dec
das
lret
repnz
push
cmp
lds
not
pop
dec
shll
aad
jecxz
or
or
clc
movsl
ret
cmpl
lock
mov
ja
and
out
and
inc
rolb
push
loopne
xor
stos
ja
in
nop
adcl
cmp
fmuls
cmc
cmpsl
adc
test
lret
adc
lods
imul
inc
imulb
jae
or
mov
pop
push
es
add
aas
cli
dec
les
lea
sub
dec
in
mov
lds
push
push
xchg
jmp
push
jp
dec
xor
add
cmpsb
cld
and
sbb
pop
jecxz
negl
dec
shlb
cmp
data16
ljmp
rorb
mov
inc
xchg
jbe
adc
lea
imul
or
mov
cmp
shrb
fs
or
jnp
dec
mov
mov
adc
ret
int
sbb
jb
push
mov
stc
inc
push
hlt
cltd
insb
push
adc
mov
jl
inc
ja
cmpl
jae
pop
arpl
daa
sbb
insl
shll
jge
flds
lods
outsl
sarb
aas
xlat
rorb
mov
xorl
and
xor
fistl
mov
adc
ss
std
xor
pop
ljmp
push
jo
ret
mov
mov
xchg
or
out
in
pop
pop
inc
call
jg
stc
jo
mov
lret
cmc
rorl
arpl
out
mov
jl
aam
mov
andb
mov
cmp
dec
push
mov
mov
sti
add
mov
jb
xchg
jmp
sub
lods
loop
iret
decl
add
jmp
mov
fcmovnbe
hlt
inc
or
rclb
lret
push
js
imul
pop
cmp
imul
jp
fsubs
dec
in
inc
insb
xchg
mov
xchg
ret
mov
sub
xchg
push
rolb
or
cmpsb
xchg
mov
aam
add
loope
into
or
push
int3
fldl
lret
fcmovne
orb
mov
adc
rcrb
mov
xchg
out
cmp
sbb
out
sub
lds
inc
push
inc
pusha
add
fiaddl
cmp
cmp
scas
iret
mov
daa
and
rorb
mov
xor
jne
enter
mov
inc
mov
movsl
cmp
scas
fdivrs
les
cmc
sbb
push
test
cmp
add
add
movsb
and
cltd
das
push
add
in
lock
sbb
in
inc
sbb
roll
mov
ljmp
addl
fnsave
sarb
push
pop
inc
sahf
test
loope
ss
cmp
fstpl
add
pop
pop
push
jmp
xor
add
imul
mov
ret
in
in
xchg
in
call
sub
das
sbb
imul
mov
mov
and
insb
adc
ja
fs
and
lock
dec
xchg
ret
fcmovbe
fnsave
fsts
dec
push
mov
add
loope
dec
mov
inc
xchg
test
xchg
test
mov
jge
loopne
xor
mov
test
cld
loop
cmc
sbb
mov
clc
and
mov
sbb
pop
in
fsts
add
jbe
int3
fucomi
lods
loop
stos
sub
push
popa
test
repnz
lods
and
in
sbb
inc
dec
out
sub
ljmp
lock
cmp
dec
insb
imul
mov
out
loope
fsubr
and
mov
adc
jbe
xlat
mov
push
frstor
push
adcb
adc
out
pop
das
pop
cmp
sub
mov
imul
xchg
scas
jne
xor
inc
lock
inc
add
and
call
inc
scas
popa
or
mov
jnp
rcrl
or
lret
movsl
sbb
mov
push
kxorw
or
test
cmp
sarl
ss
cmc
scas
sbb
jnp
mov
bound
popa
subb
or
jae
cmp
mov
sahf
cmpsb
push
mov
aaa
sub
sbb
pop
outsb
int
popa
lods
or
test
lods
push
push
std
sahf
jnp
clc
pop
pop
xor
sbb
jns
fwait
out
imul
test
jns
push
sbb
sub
pop
xor
cmpsb
clc
mov
push
adc
pop
imul
dec
push
jg
iret
mov
addr16
movsl
lret
sub
loop
ljmp
js
mov
adc
lds
aam
ficomps
cmp
push
popw
mov
in
xchg
sub
cmp
mov
adc
cmpsb
inc
int3
outsl
push
mov
mov
clc
pop
cwtl
setns
iret
push
es
cmp
push
sub
inc
jle
jl
gs
jmp
adc
in
jle
mov
push
out
cmp
cmp
and
ret
mov
cmp
xchg
xchg
jmp
xchg
mov
pushf
mov
lods
addr16
mov
repz
mov
sbb
std
scas
out
or
mov
test
hlt
lods
js
cld
movsb
or
sarl
sub
sbb
mov
arpl
push
call
mov
dec
leavew
cmc
lea
push
movsb
adc
sarb
jb
push
push
std
or
and
jle
enter
clc
out
adc
push
ss
and
int
into
mov
or
push
mov
sbb
xchg
add
les
xlat
movsb
iret
sbb
cld
sub
aam
aad
cmp
js
lretw
testb
fs
fimuls
fsubrs
lret
call
aam
test
outsl
xchg
adc
dec
jle
or
add
popa
std
imul
jns
sbb
ss
enter
std
popa
movsl
fists
sbb
jbe
sbb
scas
push
cmpsb
in
loope
or
movsb
xor
es
clc
arpl
jg
xor
bound
mov
nop
jns
cmpsb
sub
fisttpl
insl
inc
add
popf
inc
cmpsb
adc
jle
and
inc
inc
insb
scas
idivl
popa
fisttpl
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
ror
rol
fxch
fcmove
xor
shl
mov
js
push
js
mov
lret
dec
shr
imul
jp
hlt
shrb
adc
mov
push
adc
push
jne
pop
movsb
scas
and
push
inc
adc
mov
cmp
xor
gs
and
iret
popa
mov
fnstsw
imul
rclb
sbb
repnz
out
mov
cmp
aas
jo,pt
xchg
cmp
rorb
test
jo
sub
jno
sarb
xchg
sbb
dec
call
loop
cmp
enter
loopne
jmp
inc
outsl
adc
sti
mulb
mov
ror
or
mov
jno
ds
insl
lods
and
and
sbb
cmp
test
int3
sbb
cli
ds
mov
mov
in
and
inc
je
leave
out
loope
jns
sub
xchg
inc
ljmp
xchg
sbb
xor
fstl
shr
adc
push
mov
ret
sbb
bound
fwait
inc
fwait
cmp
repnz
mov
lret
xchg
je
mov
enter
xlat
test
pushf
icebp
mov
rolb
cmpsl
leave
jno
sub
aad
cld
xchg
xchg
xor
mov
cmp
jno
rcr
add
js
out
adc
pusha
xchg
scas
inc
jmp
mov
or
or
loope
dec
mov
sub
dec
jmp
into
jno
mov
mov
icebp
ss
and
push
jno
and
insl
divl
addr16
jmp
shlb
mov
pop
mov
mov
hlt
movsb
adc
lods
mov
out
push
aaa
xlat
dec
add
fisttpl
or
push
jmp
mov
push
lods
ficoms
out
xor
enter
pusha
je
div
gs
fidivs
nop
jmp
jns
inc
sahf
inc
jg
and
jmp
or
cwtl
loopne
mov
out
jae
sbb
enter
inc
mov
mov
stc
cmp
addl
pop
ja
add
push
ret
jbe,pt
adc
movsb
rorl
mov
cmp
adc
inc
jmp
in
push
scas
subl
dec
mov
pushl
test
push
xchg
sub
dec
negl
sbb
dec
arpl
std
adc
mov
mov
inc
fadds
mov
and
js
mov
fsubl
dec
pop
fwait
pop
imul
std
test
adc
fadd
add
mov
divl
push
pop
sahf
fimull
sbb
or
and
cmp
adc
xchg
fwait
jb
pusha
ret
sub
push
filds
push
or
cmpsl
cli
mov
mov
fistpll
push
sbb
xchg
loopne
add
inc
rorl
add
push
jne
mov
jge
icebp
sti
fistpll
and
in
aas
loop
add
adcb
jl
cli
dec
inc
mov
push
xor
ret
xchg
fnsave
add
inc
stos
out
mov
xor
xor
sub
adc
ja
cli
adc
and
or
aam
adc
mov
push
sub
aam
add
je
mov
xchg
cli
pop
and
xchg
into
dec
mov
sbb
sub
sub
cmpsl
out
xchg
dec
mov
repnz
stc
pop
adc
cmp
outsb
call
adc
xchg
cmp
dec
xlat
jg
add
in
pop
pop
push
pusha
test
cmc
ja
mov
cli
adc
in
xor
sbb
and
test
and
or
add
imul
push
shrb
cmp
or
lds
sub
sub
int3
shll
leave
cmp
pop
sbb
orl
addb
mov
mov
push
or
cmp
push
int3
jbe
add
mov
call
sbb
sti
xchg
lret
bound
faddl
pop
push
jb
into
cltd
in
cs
xchg
xor
jae
cmp
sbb
lret
pop
mov
sub
pop
cwtl
testb
sarl
mov
inc
add
sarl
fcmovu
ret
jmp
jne
jne
sbb
stc
cmp
mov
mov
mov
jmp
ror
ror
fcmovu
aas
scas
push
orl
js
push
js
xchg
aaa
pusha
scas
jae
aas
mov
jge
test
shlb
mov
scas
inc
sbb
add
aam
cli
push
loopne
lock
pusha
inc
sahf
cmp
fisubrl
push
jb
cmp
in
mov
aad
mov
std
adc
mov
pop
or
jecxz
sub
and
sti
sarb
xchg
add
mov
dec
and
pop
into
pop
ret
addr16
in
das
jl
cld
xor
and
test
jae
addr16
push
les
adc
imul
or
and
jmp
test
in
jno
jg
jecxz
icebp
lcall
lods
dec
out
test
cmp
push
int3
cmc
fst
fsubp
in
sbb
adcl
movl
lock
push
push
fisttps
outsl
add
call
inc
pop
rclb
lret
and
push
jmp
js
cs
cmpsl
imul
xor
and
cmp
cli
repnz
mov
lret
sti
in
xchg
sahf
pop
leave
or
dec
add
popa
cmp
jo
xor
or
pop
add
mov
jge
ss
popf
or
push
mov
jle
push
mov
pop
mov
addr16
dec
mov
sub
and
inc
pop
stos
push
out
mov
push
add
stos
mov
frstor
imul
dec
rcl
lock
mov
shlb
inc
push
push
mov
adc
hlt
jge
out
shll
ds
dec
inc
test
sarl
dec
xor
jge
shlb
mov
lea
pop
adc
mov
lea
push
gs
cld
idivl
imul
push
cwtl
add
testb
insl
in
orb
xchg
fxch
push
pop
mov
lock
or
sahf
mov
xchg
cmp
inc
xchg
out
sahf
push
pop
pop
cmp
adc
scas
scas
aad
out
xchg
scas
hlt
lret
orl
aam
std
adc
xor
in
and
push
push
mov
das
jmp
hlt
int3
dec
lds
pop
mov
mov
push
sti
scas
lahf
push
mov
sbb
pushf
ret
dec
cmp
and
popl
add
pop
popf
cwtl
inc
inc
and
cmp
subl
inc
push
lods
mov
ja
cs
bound
sub
mov
test
inc
loope
xor
or
lcall
mov
data16
push
lds
pop
pop
mov
lahf
mov
dec
lcall
mov
push
push
fistl
shl
dec
jmp
mov
in
mov
addr16
clc
imul
mov
sub
inc
lret
push
dec
mov
jnp
shlb
xor
outsb
or
dec
push
sub
mov
ja
mov
push
mov
icebp
mov
cmp
mov
jle
push
sti
sbb
das
push
arpl
fyl2x
fwait
pop
mov
mov
rcl
sbb
dec
leave
mov
stos
fcoml
push
jo
ret
or
gs
dec
das
pop
xor
pop
leave
xchg
mov
jns
push
clc
dec
add
push
lret
pop
xchg
dec
pusha
mov
sub
std
cvtps2pi
xor
aam
and
test
xor
and
jne
and
lds
mov
jecxz
test
cli
jns
int3
daa
data16
add
xor
repnz
cmpsl
lret
sub
inc
adc
in
xchg
adc
mov
inc
jmp
imul
jne
mul
or
addr16
jmp
cmpsl
and
leave
add
imul
cmp
sbb
test
movzbl
sarl
inc
ficomps
test
ret
ja
leave
stc
xchg
dec
pop
xchg
cli
imul
lods
std
cwtl
sarl
outsb
stos
cwtl
jmp
outsb
inc
jbe
lahf
lock
inc
imul
rcll
cmpsl
dec
cmp
call
xor
subb
cwtl
lods
inc
rcr
adc
sbb
aad
fcomp
aaa
or
pop
out
add
popf
sub
jb
nop
mov
out
fistl
mov
push
bound
xchg
pusha
lock
sub
adc
jo
mov
into
pop
iret
enter
cmpsb
ffree
add
loop
jbe
push
sub
prefetchnta
fisttpl
jmp
int
rcr
rol
fxch
cmp
sbb
push
js
cmpsb
fdivrl
in
pop
outsl
push
aam
mov
add
sbb
push
cltd
xlat
push
lea
sub
dec
out
lds
sbb
xchg
mov
js
or
out
sub
jmp
arpl
pushf
xchg
adc
pop
notb
mov
add
push
clc
insb
push
nop
rolb
push
cmpsb
addb
xchg
xchg
inc
sbb
gs
decb
jne
shrl
adc
jg
xor
xor
jp
mov
and
fisubrl
sti
dec
mov
sub
cmp
mov
cmp
pop
sub
addb
cmpsl
adc
in
sarb
sbb
fcoml
fdivrs
mov
imul
sub
add
and
shll
push
nop
dec
push
jb
in
mov
push
stos
outsb
inc
mov
mov
std
sahf
xchg
mov
push
enter
mov
xchg
mov
enter
dec
cmp
jge
pop
mov
xchg
mov
mov
clc
lcall
or
cmp
push
cmc
lcall
testb
scas
adc
dec
jmp
add
xchg
pop
fwait
jns
mov
imul
mov
and
nop
jb
test
ret
dec
pop
xor
cltd
bndstx
es
in
inc
sbb
pop
jnp
cmp
jmp
push
push
push
xchg
lcall
mov
test
fisttpll
or
push
arpl
inc
repz
jae
xchg
ds
pop
repz
cmp
mov
adc
mov
stos
ret
roll
push
int3
jb
ror
hlt
nop
push
xchg
mov
sub
push
and
int
cmp
push
jno
leavew
adc
add
cmp
test
mov
movsb
push
orl
fnsave
rsm
mov
fistps
jmp
mov
cmc
outsl
adc
adcl
mov
inc
testb
inc
inc
add
mov
pop
leave
jbe
mov
and
fcmovu
or
mov
xchg
stos
in
bound
or
pop
movsb
xor
push
jne
and
push
pop
push
inc
lcall
shll
test
push
cld
inc
ss
das
shrb
adc
mov
cs
add
icebp
jecxz
adc
xchg
dec
pop
sbb
xor
cwtl
cmpsb
fnstsw
ljmp
mov
push
repnz
out
jo
fwait
cmp
aam
cli
cld
dec
jno
cld
jno
xorl
or
mov
cmc
cli
pushf
fists
push
xor
sub
mov
das
sti
movsb
xor
addr16
clc
lret
test
inc
jnp
jp
xor
pop
mov
scas
hlt
in
xchg
xor
das
add
xchg
mov
mov
dec
or
movntps
cmp
jecxz
pop
test
jge
adcl
cmp
or
shlb
sub
and
int
movsb
or
or
ss
mov
in
xor
add
and
jnp
into
mov
enterw
adc
scas
cmpsl
lods
fiaddl
lret
jne
add
xchg
dec
rclb
js,pt
sub
fiadds
fldt
xor
cmp
cltd
fisubrs
push
inc
sbb
in
orb
test
pop
fldcw
clc
fstl
inc
enter
pop
mov
sub
rol
in
shrb
push
imul
shlb
xchg
popf
insb
inc
jne
inc
jnp
mov
jl
add
sti
mov
lock
mov
sahf
test
mov
cmpsb
pop
nop
pop
add
aaa
sub
in
mov
in
cmp
sahf
sub
add
std
pop
mov
das
mov
push
sub
dec
jns
in
push
iret
outsl
popf
inc
pop
in
aad
cmp
mov
jge
inc
xchg
iret
out
je
scas
push
aad
imul
or
xlat
hlt
mov
xchg
fs
sub
jge
inc
xor
mov
rorb
cmp
call
cmpsl
test
stc
inc
push
leave
stos
cmp
push
jnp
jbe
cmpsl
leave
sub
inc
xchg
jecxz
aas
sub
xor
xchg
cmpsl
mov
icebp
lahf
adc
jg
xchg
mov
xor
jmp
xlat
xlat
iret
into
iret
aad
cmpsl
in
in
jp
or
fidivrs
push
js
jle
cmpsb
arpl
roll
fdivs
ja
aad
hlt
lret
fsubr
push
clc
pop
dec
lds
shlb
jp
mov
inc
inc
add
jecxz
enter
lock
dec
ret
lret
jle
push
push
cmovno
test
or
xchg
mov
es
in
in
sbb
xchg
loopne
fisttps
mov
pop
pop
cmpsl
stos
jb
and
cmp
addr16
inc
movsb
lcall
addb
inc
mov
or
mov
xchg
mov
xchg
cmp
test
rolb
stos
pop
cmp
loopne
add
sbbl
cmp
ret
add
incb
sub
jl
cmp
les
adc
daa
pop
inc
scas
aas
sbb
xchg
and
cltd
lds
mov
ja
cmpb
in
aam
mov
cmpsl
movsl
imul
push
insl
mov
ss
subl
mov
fs
cmp
dec
ret
mov
fdivs
in
dec
sbb
mov
xchg
in
in
xlat
add
cmpsb
cld
sets
fisttps
mov
push
pop
sub
jb
adc
sbb
or
imul
imul
icebp
sub
je
cmp
leave
dec
int
pop
sub
adc
xor
cmp
loopne
cmp
or
and
xchg
sbb
lock
xor
loope
shlb
jge
lods
test
push
jge
out
cmpsl
mov
jg
iret
and
inc
inc
repz
push
fnstsw
fucomi
cmp
popl
leave
adc
mov
jle
jns
bound
cmp
popf
in
ss
jl
inc
or
roll
lods
dec
and
mov
adc
in
ret
mov
mov
or
ja
cmp
ja
xchg
pop
into
scas
je
mov
or
shrb
inc
mov
pop
add
pop
popf
cltd
xor
test
adc
sbb
push
and
dec
pop
or
or
inc
pop
adc
in
dec
and
orb
xor
outsb
push
mov
pop
test
mov
pop
or
dec
mov
jnp
push
in
mov
xor
pop
jp
mov
pop
xor
pop
dec
lahf
divb
sbb
dec
leave
or
dec
fnstenv
and
mov
jo
mov
sub
mov
sub
adc
sbb
testl
push
xor
mov
pop
jb
xor
xchg
clc
or
test
je
call
mov
xorl
shll
sub
test
pop
pop
shlb
mov
int3
cmp
mov
fldenv
icebp
jle
lret
sbb
das
cmpl
data16
mov
push
fwait
mov
and
daa
arpl
xchg
inc
pop
and
sub
scas
imul
xchg
subb
filds
mov
hlt
sub
push
and
sahf
ja
aaa
push
rol
push
mov
addr16
xor
or
cmc
jbe
in
push
mov
dec
and
nop
test
dec
into
dec
push
std
mov
out
fmulp
add
fstps
ss
pop
jmp
mov
inc
sbb
in
cmp
jne
pushf
pushl
dec
cmp
lea
es
std
enter
sub
scas
push
mov
stos
mov
mov
cmp
aaa
xchg
add
inc
pop
cmpb
mov
or
int3
mov
push
int3
test
lahf
mov
xchg
addr16
pop
repnz
push
ljmp
xor
jge
ss
mov
rorl
pop
mov
jle
xchg
les
push
cmp
mov
xor
popf
cmc
mov
mov
cmpsb
bsf
and
and
xchg
add
mov
or
clc
mov
xchg
decb
pop
pop
sub
inc
and
add
jmp
adc
xchg
mov
push
shl
xlat
loop
movsb
fcomps
dec
mov
jg
daa
cmp
inc
rcrb
data16
mov
fucom
out
fldl2e
xchg
sub
in
jl
ss
add
push
movsb
jbe
rclb
mov
setp
mov
sbbb
pop
and
fnstsw
dec
inc
adc
push
pop
insb
test
push
clc
icebp
add
jmp
rol
ds
lret
aaa
aas
push
cs
dec
int
and
js
jl
js
or
js
mov
and
adc
xor
and
ret
jns
insb
add
mov
sub
push
push
and
push
sub
int3
mov
shl
icebp
rorb
rclb
cmp
dec
push
scas
popa
xchg
adc
cmpsb
jge
xlat
mov
jg
aas
pop
add
rcl
rcrb
outsb
inc
jle
sahf
pop
and
sub
mov
sbb
cs
dec
lcall
mov
xchg
xor
xchg
sub
out
mov
int3
and
xor
loopne
mov
out
in
sbb
jns
js
sub
insl
stos
ffreep
xchg
push
push
je
jecxz
sub
sub
outsb
inc
cld
cmpsb
shlb
fistpl
xor
fidivl
scas
xlat
ret
pop
lods
push
mov
scas
inc
cmpsb
pop
adc
pop
fnsave
dec
andb
cmp
adc
adc
jae
cmpsl
test
je
pop
sbb
jmp
cmpsb
xchg
xor
loopne
inc
mov
jp
dec
cld
fildl
or
jmp
insb
xchg
cmpsl
inc
out
add
fcoml
in
sbb
adc
notb
stc
inc
fildl
lds
and
fnstcw
jno
xor
push
dec
or
sbb
xor
push
in
inc
fimuls
sub
adc
mov
roll
dec
mov
test
cmp
pop
mov
loope
aam
dec
pop
arpl
loop
in
xchg
inc
aaa
cmp
insb
bound
inc
rorb
ret
push
mov
lods
icebp
fwait
cmp
pop
in
je
loopne
cmp
mov
pop
stc
adc
jg
jp
push
pushf
notb
jmp
popf
sub
jae
out
jp
enter
sti
mov
stos
ljmp
stos
pop
add
mov
jnp
cmpsl
pop
faddl
push
jbe
xor
nop
std
cmpsl
lods
and
adc
mov
je
imul
loope
and
mov
cmp
out
add
mov
dec
inc
sub
pop
out
lds
pushf
cwtl
scas
jae
ss
cmpsl
ret
cwtl
jl
sub
das
lea
push
loop
shlb
xor
pop
aaa
out
in
mov
cmp
mov
mov
test
ja
sbb
jnp
push
jne
insb
push
test
pushf
adc
jnp
add
pop
cmp
dec
jo
cmp
addl
enter
dec
hlt
pusha
daa
ficomps
andb
or
mov
scas
call
push
roll
dec
test
mov
out
pop
stos
dec
push
out
in
cli
inc
negl
xchg
mov
ljmp
notl
cmp
jmp
push
jns
mov
out
xchg
push
cs
loope
xor
jl
int
dec
sub
add
xchg
cmp
mov
mov
lock
inc
mov
push
push
lods
push
jecxz
out
pop
scas
sbb
dec
outsb
sub
movsl
rclb
and
aas
pop
add
sahf
ret
aad
lcall
clc
add
sbb
push
outsb
nop
in
push
insb
es
aad
mov
rol
mov
push
sub
mov
aam
daa
push
push
loop
inc
adc
aam
jmp
arpl
pop
lods
inc
nop
mov
adc
mov
fcmovnb
adc
rcll
jecxz
cmp
inc
cmc
test
es
mov
outsl
jge
push
ja
scas
mul
sbb
cmp
cld
cmp
or
jo
data16
shr
movl
pop
jbe
or
fildll
aam
lret
dec
xor
push
xor
adc
test
mov
jns
mov
ret
cmp
lahf
popa
xchg
and
inc
aam
sub
mov
mov
push
push
aaa
mov
inc
call
icebp
jp
xchg
inc
ja
cmp
xchg
jecxz
pusha
jo
sbb
push
xor
jno
mov
in
pop
jo
mov
in
lret
jg
not
mov
test
sub
pop
ljmp
xchg
jmp
and
out
mov
cmp
inc
jge
scas
push
cmp
out
rol
and
and
inc
dec
addr16
mov
sbb
fwait
repz
loope
mov
in
dec
in
lea
pop
inc
xlat
add
ficoml
pop
mov
jg
enter
aas
mov
mov
sub
jp
mov
sbb
mov
push
adc
add
call
inc
in
movb
push
jmp
aas
int
rcr
lret
aad
inc
sbb
shll
in
in
js
jl
js
mov
adc
sub
mov
aas
mov
or
mov
gs
imul
and
sti
xchg
lods
cli
outsl
imul
hlt
cli
mov
xor
int3
add
shlb
push
sbb
and
jns
arpl
dec
inc
inc
mov
cli
push
sub
fdivl
push
fcoml
and
cld
nop
leave
add
out
rcrb
cltd
mov
fwait
mov
in
jg
insl
inc
jno
mov
mov
in
lds
xchg
jmp
cmpsb
or
jo
push
fwait
xchg
mov
std
pop
mov
mov
mov
stos
xchg
cwtl
lahf
cmovae
mov
mov
out
shl
jp
cmpsl
cwtl
xor
adc
into
fldt
pop
pop
in
push
dec
xchg
test
js
xor
cmpsl
xchg
mov
inc
fistpll
jo
test
jmp
inc
lret
cli
mov
push
fstps
jge
repnz
mov
sbb
add
xchg
das
mov
or
fs
jp
xorb
jecxz
lds
mov
cmp
xor
dec
cwtl
jecxz
imul
cmp
outsb
enter
add
or
xor
mov
mov
mov
cli
dec
sub
cwtl
adc
cwtl
outsl
pushl
daa
sti
or
nop
lcall
mov
or
xchg
adc
dec
lcall
mov
das
cmp
subl
dec
enter
add
jbe
cmc
das
test
mov
ljmp
pop
and
fucomp
icebp
pop
fidivrl
ja
and
xchg
jle
sbb
mov
insl
inc
dec
xchg
pop
fnstenv
shll
lahf
and
xchg
xchg
out
vcvtpd2psy
decl
sti
mov
dec
push
or
or
sbb
or
and
pop
insb
pusha
mov
sub
and
push
in
in
fnstenv
mov
bound
sub
je
mov
push
or
cmpsl
movsl
and
cld
add
icebp
rorl
lods
lock
outsl
sarb
cmp
subl
xor
inc
es
pop
pop
int3
aam
pop
repz
in
mov
shlb
and
cmp
mov
adc
xchg
pop
cmpsb
popf
loopne
adc
pop
push
and
mov
push
sbb
rcrl
sbb
data16
dec
xlat
dec
xchg
out
aad
add
pop
push
inc
fwait
ror
cmp
xor
pushl
pop
sbb
or
test
lret
stc
ret
std
mov
std
sub
cmp
fs
hlt
rclb
xchg
sbb
sub
lock
andb
adc
ret
pop
movsb
into
nop
test
js
adc
movnti
inc
jmp
std
mov
xor
stc
mov
and
movsl
loopne
fs
lock
hlt
hlt
mov
sbb
outsl
pop
push
js
addb
xor
pop
out
pop
cmp
call
movd
pop
mov
inc
push
imul
cmp
repz
cli
orb
out
fcmovne
jns
shr
daa
test
pop
out
push
cmp
test
pop
sub
out
imul
xchg
sahf
or
popa
xchg
mov
daa
inc
and
shr
mov
and
xchg
out
inc
push
pusha
stc
mov
shl
dec
mov
sub
pop
mov
adc
mov
repnz
sti
dec
pop
stc
push
pop
jae
inc
cmp
call
pop
pop
mov
add
loopne
cmp
xchg
stc
push
push
sub
fs
mov
insb
in
test
push
les
jp
lcall
data16
sbb
pop
in
lods
stc
mov
sbb
and
loope
jmp
mov
addb
and
rcrl
loopne
xchg
cmp
lret
insb
call
imul
loopnew
icebp
popf
mov
sub
movsl
cmc
push
add
fsubrs
add
cld
add
das
dec
popf
mov
jecxz
shrb
ds
pop
mov
inc
xchg
mov
clc
sbb
mov
out
nop
mov
in
push
sbb
into
cmp
lret
icebp
jns
test
imulb
ror
call
jns
in
mov
fldenv
movsb
xchg
adc
aam
andl
add
push
jmp
ror
ror
ror
rcl
lret
rol
into
xlat
movl
push
js
sbbb
pusha
shrl
les
sbb
push
pop
xchg
inc
lret
in
repnz
adc
sub
les
int3
and
les
outsb
loopne
les
push
std
pop
addr16
jp
mov
add
pop
subb
inc
push
incb
xchg
out
or
or
shufps
mov
xchg
ss
insb
or
or
cli
add
jnp
xor
insl
icebp
out
aas
sub
xchg
sbb
mov
mov
mov
xor
loop
sbb
ret
mov
inc
in
out
sahf
out
or
xchg
ljmp
sub
out
push
imul
pop
int3
and
mov
aam
add
bound
loope
mov
nop
xor
xlat
daa
jge
push
cmpsl
xchg
mov
mov
sbb
jmp
in
xor
pushf
ficoms
mov
inc
and
sub
sahf
or
leave
aaa
or
iret
dec
or
cmp
in
dec
and
jle
or
mov
xor
jne
or
dec
outsl
sti
cmovg
into
adc
popa
nop
roll
sub
sti
jno
test
jl
inc
mov
addl
sub
mov
and
push
jns
imul
sub
ficomps
aam
ja
lahf
fcmovu
jne
cmc
lock
sub
mov
add
push
push
push
cmc
mov
mov
push
sbb
jns
xchg
inc
fbld
jno
pop
or
cmp
pop
pop
add
hlt
lret
pushf
mov
dec
pop
xor
mov
fnstcw
jle
push
nop
push
loope
sub
aaa
push
movsb
xchg
loop
mov
out
adc
out
test
popf
lock
adc
sub
insb
aaa
xor
mov
mov
pop
out
pop
lea
adc
adc
jp
adc
lock
cmc
rorl
adc
loope
sub
scas
add
lods
movsl
mov
pop
mov
dec
mov
push
lcall
movsb
and
fistps
mov
xor
ret
adc
outsb
mul
out
xlat
mov
dec
fs
add
in
xor
hlt
mov
sahf
pop
sti
sub
jno
sbb
sbb
pushf
and
arpl
jbe
inc
inc
pusha
sbb
fiaddl
lret
lret
and
ss
add
and
out
cmp
std
inc
idiv
in
mov
lcall
cmp
push
cmp
jno
fdiv
test
das
xchg
inc
jmp
xchg
into
lods
lcall
xor
call
scas
xchg
fimuls
and
inc
lahf
daa
push
push
jno
mov
pusha
cmp
data16
xchg
scas
mov
xor
inc
mov
outsb
cmp
xchg
or
or
gs
push
in
dec
repz
and
sbb
sbb
outsl
xor
pop
mov
push
mov
cmp
mov
mov
aam
push
push
pop
sub
icebp
jmp
das
or
mov
into
movsb
add
mov
fidivrl
mov
cmp
xchg
add
ljmp
das
mov
mov
mov
xchg
fidivs
jmp
add
aam
or
and
out
in
adcb
out
jmp
jo
nop
rorb
rclb
ss
pusha
jnp
in
inc
divl
mov
sbb
arpl
sub
cmp
push
jmp
loopne
cmp
lcall
push
sub
sarl
inc
sbb
mov
pop
cwtl
add
mov
xor
xor
or
mov
int
fwait
dec
sub
inc
mov
inc
jae
sub
sbb
lcall
je
push
sahf
roll
aaa
faddp
lea
dec
scas
insl
aam
filds
jae
int
jnp
sbb
push
sbb
pop
jb
scas
pop
ds
stc
add
inc
cmpsb
adc
test
in
aad
notl
cs
push
jo
mov
mov
adc
into
sbb
mov
in
fucomp
sar
shrl
ficoml
mov
push
ja
xchg
mov
mov
in
inc
rol
pop
pop
fisttpl
gs
std
add
push
sub
test
jmp
add
stc
out
and
or
cwtl
add
add
xor
push
add
cmp
leave
lret
ror
cmpsb
movl
js
push
js
ja
loope
mov
subl
out
sbb
ret
adc
xlat
sbb
lret
std
cwtl
pop
mov
pop
cmpsb
jno
add
mov
inc
jns
xor
lcall
xor
jne
pop
fwait
outsl
pop
cli
xor
outsb
jo
cmp
iret
cs
pop
shr
dec
popf
mov
pop
pop
stc
cmc
xchg
insb
inc
jns
xor
xor
test
dec
in
xor
mov
daa
xor
jno
fnstsw
out
in
jge
ret
xor
into
inc
sub
shlb
nop
div
gs
lods
mov
mov
jae
cmp
scas
mov
pop
aad
jns
mov
pop
and
xor
mov
lods
add
aam
dec
mov
movsw
mov
mov
addr16
pop
xchg
scas
lods
or
jnp
insb
add
xor
fbstp
and
dec
mov
dec
inc
stos
jbe
sbb
test
push
fidivrl
mov
jmp
pop
dec
lea
or
divl
jne
dec
adc
in
xor
nop
mov
mov
lock
jnp
xchg
mov
test
pop
into
idivb
mov
stos
mov
cmpsl
and
cmp
and
inc
je
add
cmp
cmp
imul
cmpsb
add
inc
out
cmpsl
jecxz
scas
jno
test
jo
xor
ficoms
sub
dec
xchg
push
and
into
icebp
pop
add
inc
inc
inc
add
pushf
mov
filds
jo
cmp
push
mov
xor
xchg
sarl
lret
jnp
mov
rcrb
xchg
shl
sti
pop
fdivs
mov
jae
rorb
jbe
je
jmp
push
pop
cli
push
xor
adc
xchg
leave
cmpb
loopne
outsl
int
push
sbb
in
icebp
or
mov
xlat
je
movb
ljmp
ja
or
xor
add
mov
cmp
xchg
and
xchg
push
adc
test
pop
sbb
sub
lods
stos
push
adcb
scas
aaa
pop
int3
into
cmpl
add
fs
arpl
dec
testb
xor
xchg
insl
cwtl
add
or
notb
roll
and
mov
and
cmp
mov
int
xor
lret
test
imul
fstpt
cmp
int3
ss
push
jl
outsb
loopne
mov
fsubrl
fcomp
xor
dec
idivl
out
loopne
nop
stc
aam
nop
push
dec
es
popf
jmp
call
imul
es
jmp
mov
lcall
sub
imul
int3
dec
sti
mov
into
notl
imulb
and
shl
imul
jo
movsb
adc
ljmp
sti
jb
popf
decl
inc
fistl
aad
ljmp
aaa
dec
mov
adc
add
cmc
xchg
xor
pushf
or
enter
into
or
sbb
fsts
test
jbe
or
lcall
inc
push
je
xchg
out
push
test
aas
mov
jbe
sub
push
xlat
stos
dec
daa
lea
jl
int
sub
gs
sarl
pop
sub
push
adc
push
jmp
roll
push
in
rcrl
adc
mov
shr
sbb
push
sub
ss
sub
pusha
inc
mov
mov
call
xchg
mov
ja
das
sbb
pusha
mov
enter
lods
push
push
fldl
andb
les
imul
mov
nop
enter
cmp
pop
or
sub
and
je
lret
lock
fyl2xp1
mov
jge
mov
dec
cld
test
jbe
add
jl
cmp
lret
int3
lods
aam
cmpsb
add
je
icebp
shlb
pushf
sbb
mov
mov
jle
sub
pusha
push
mov
sub
and
inc
mov
push
jg
out
rcrl
ret
out
ja
ficoms
push
jns
add
into
dec
clc
int
in
xor
mov
insb
inc
daa
jle
mov
cmp
popf
xor
pop
testb
inc
pmaxub
lret
popa
add
incb
adc
dec
out
ljmp
jbe
or
sbb
lcall
jmp
pop
in
test
lods
sahf
mov
mov
add
ds
leave
int
fldenv
xchg
lret
xchg
cmp
js
push
js
mov
pop
mov
ja
xchg
jbe
and
jb
in
shll
cmp
mov
rolb
out
fcompl
mov
rorl
stc
lea
push
into
xor
shrb
out
shr
or
jge
dec
aad
dec
cmpsb
mov
lcall
pop
jmp
aas
les
cmpsl
in
popa
stos
cmpl
xor
ljmp
pop
xchg
push
ljmp
outsb
int3
mov
mov
lock
push
jns
aad
adc
mov
cmp
dec
cmp
jmp
jp
stos
and
xchg
test
into
inc
fwait
add
subl
fwait
popl
outsl
and
mov
cmp
cmp
mov
fs
pop
mov
popf
xchg
pop
cmp
cmpb
ljmp
add
xchg
dec
pop
mov
jne
out
xchg
in
mov
aas
dec
lcall
xor
popa
loopne
sarb
or
movsb
cltd
push
rcrb
fsubrp
dec
push
test
cmp
pop
pop
shr
jmp
sbb
inc
lahf
xchg
jb
mov
imul
xchg
lods
loope
out
js
lds
mov
push
mov
mov
mov
fiaddl
sti
mov
mov
mov
call
push
mov
mov
pop
inc
xchg
call
xor
mov
and
data16
and
sbb
xor
cmp
popf
jg
fbstp
repz
xchg
sub
add
cmc
mov
sarb
mov
lock
loope
test
sub
push
xchg
dec
cltd
bound
lcall
stc
push
cmp
jge
repz
pop
test
popf
adc
dec
scas
xor
pop
enter
jg
sub
movsb
inc
cld
test
push
in
cmp
push
decb
cld
clc
pop
es
add
cli
mov
movsb
jns
jle
sub
fsubl
pop
sub
lock
dec
cmc
or
inc
lahf
push
xor
push
push
sbb
cs
into
add
mov
ret
push
mov
inc
sub
push
imulb
cmpsb
loope
out
cmp
dec
jg
xchg
mov
sub
or
jmp
test
scas
imul
xchg
ss
sbb
mov
in
das
push
mov
cmp
push
mov
insl
cmp
aaa
shlb
mov
mov
jbe
icebp
test
ss
xorps
xor
push
ja
xor
mov
xor
sub
or
ss
xor
push
or
cmpsb
popa
sti
out
xor
xchg
sub
xor
jns
not
cmc
jmp
out
leave
jno
popa
fstl
push
bound
in
sbb
adc
adcb
cmp
aaa
sub
lea
orl
mov
jnp
sub
adc
sbb
scas
data16
pop
movsl
iret
cmp
and
mov
jle
outsl
imul
outsb
repz
mov
mov
das
jb
cli
pop
sbb
xchg
sub
xchg
insl
jp
test
xchg
inc
add
push
xor
scas
pop
mov
cmp
repnz
mov
stos
pop
fsubrs
ret
jg
sbb
mov
dec
cld
insb
iret
movsl
push
sti
xor
mov
xchg
mov
aaa
pop
mov
add
dec
int
jo
daa
mov
das
add
push
arpl
xchg
adc
pop
adc
push
xor
or
popa
mov
sub
jle
mov
mov
roll
mov
xchg
push
lcall
arpl
mov
sub
test
xchg
imul
mov
and
mov
gs
in
dec
jp
lea
push
inc
adc
je
jge
and
ret
mov
lahf
movsl
out
xchg
inc
xchg
xchg
test
dec
push
inc
lods
mov
ret
cmpsl
out
sti
imul
pop
std
sub
fnsave
push
or
adc
rep
mov
cs
adc
xor
mov
call
popa
xchg
ret
mov
mov
cmp
xchg
outsb
out
daa
mov
dec
cltd
jmp
hlt
jb
in
into
lock
sub
gs
ret
or
out
test
xchg
adc
sub
mov
mov
push
jg
aaa
pop
ja
in
mov
cld
cmpl
lea
jmp
rcl
ror
ror
ja
pushf
and
js
push
js
jnp
add
or
fmuls
jns
mov
inc
ds
mov
int3
xchg
les
addr16
loopne
popa
es
inc
jno
sub
mov
xchg
andb
mov
fcomp
adc
sub
and
scas
xchg
gs
in
das
dec
cmp
aam
cmc
mov
push
cmp
push
push
out
gs
mov
iret
mov
inc
push
pop
mov
inc
lds
adc
and
cmpsl
dec
cmp
scas
int3
je
test
sbb
icebp
lock
jb
dec
or
mov
hlt
cmc
xchg
adc
bound
fdivrs
push
dec
ds
insb
movsl
outsb
xchg
jle
xor
xlat
sahf
cmp
insb
jbe
and
jae
loopne
int
xor
push
ljmp
mov
or
lcall
dec
imulb
jmp
test
fcomi
lcall
mov
mov
jb
mull
popa
ret
lods
lahf
ss
cmp
and
push
or
fstps
loop
mov
scas
mov
ret
mov
add
mov
xchg
push
push
xchg
xor
dec
dec
mov
dec
imul
sub
hlt
loop,pt
into
jae
xchg
push
aam
mov
imul
ljmp
dec
cld
inc
or
addr16
popa
pusha
jb
fildll
scas
pushf
out
mov
insb
pop
nop
imul
scas
sub
test
sub
cmp
mov
mov
sbb
test
lcall
lret
int3
adc
cmp
aas
pop
mov
and
nop
mov
dec
jg
or
mov
dec
imul
mov
pop
mov
rcrl
clts
outsl
mov
dec
sahf
imul
out
push
loopne
popa
cs
sub
test
lcall
stc
adc
adc
or
jae
adc
in
jb
out
and
loopne
std
sbb
xorb
dec
sub
sbb
xchg
movl
icebp
mov
or
ds
repz
cmpsl
jns
loopne
sub
imul
mov
dec
jmp
inc
fdivs
fisubrl
in
mov
arpl
mov
and
cltd
data16
pop
into
out
idiv
lret
and
in
addr16
in
mov
mov
in
sbb
or
xor
out
shll
in
xchg
sub
cmp
xor
rorl
xchg
inc
nop
es
call
popa
fldl
ss
lahf
sub
iret
fildl
into
out
add
into
mov
and
pusha
cmp
ss
filds
mov
xchg
sbb
mov
sbb
jnp
or
lcall
in
sub
and
scas
leave
aaa
jb
mov
stos
negl
lahf
lcall
or
push
dec
jo
inc
lods
nop
add
jg
xchg
or
into
test
push
mov
cmp
cvtps2pi
mov
jnp
push
and
push
cmpl
push
cmp
stos
pop
mov
jbe
and
jp
mov
loope
fxch
mov
xchg
sahf
loopne
cmp
pop
sbb
sub
in
cwtl
fwait
sub
add
pushf
mov
loopne
jo
push
gs
call
jle
js
ljmp
cmp
adc
arpl
test
cmpsl
mov
test
ja
popa
mov
in
mov
push
gs
dec
lret
cmp
sbb
sub
push
mov
fimuls
jp
ja
cmc
js
cmp
cmpsl
mov
pcmpeqw
shrb
clc
lea
cmp
push
int3
cmp
cmp
mov
cli
arpl
jg
ss
shll
imul
add
xor
cltd
pusha
push
rcrb
mov
mov
cmp
mov
dec
jge
push
test
pop
fwait
inc
clc
int3
int3
xchg
add
inc
jmp
push
or
and
scas
add
stos
xor
insl
sbb
xor
call
sub
mov
push
or
fcmove
mov
inc
pop
sahf
in
loope
dec
push
and
repnz
jle
add
divl
or
ja
sub
cmpb
inc
enter
add
ret
ror
fld
outsb
js
inc
ljmp
js
jl
js
adc
push
dec
mov
or
fs
jnp
icebp
pusha
enter
popf
outsl
divl
mov
ja
pop
and
sahf
add
inc
leave
sbb
fsub
inc
test
mov
and
add
dec
ret
pop
test
in
les
hlt
jno
fimull
lcall
jns
cmpb
scas
gs
gs
sbb
inc
imul
xchg
cmp
jg
loope
das
inc
fcomip
lods
add
mov
imul
int3
inc
loope
pop
add
push
mov
add
fwait
push
into
jecxz
cmpl
jne
les
jo
lcall
cmp
jge
sub
enter
mov
xchg
xchg
addl
xchg
repz
icebp
pop
cmp
jle
repz
pop
outsb
and
test
fimull
inc
fidivs
mov
mov
push
mov
sbbl
inc
stos
pusha
idivl
xor
push
cmp
repz
jp
xor
jmp
jbe
inc
aad
mov
sub
std
outsl
xchg
mov
into
inc
xchg
add
sub
pop
add
sub
mov
sahf
xor
or
and
xor
push
jno
xor
adc
mov
pop
scas
in
mov
popa
adc
in
sub
sbb
adc
ljmp
sbb
rclb
nop
gs
rcrl
das
insb
sti
or
push
pop
inc
incb
push
mov
or
insb
push
or
pushf
popa
rcrb
andb
inc
test
lret
decl
add
dec
lods
es
imul
jmp
std
push
call
into
mov
sbb
rcrl
stos
mull
lret
jne
insb
jmp
mov
lods
xor
loop
in
mov
push
pushf
out
mov
lea
and
push
dec
push
xchg
shr
cmpsl
gs
incl
push
or
sbb
pop
incl
mov
jmp
mov
insb
add
imul
add
xchg
mov
cli
inc
mov
push
add
pop
outsl
arpl
xlat
sub
repnz
xchg
ljmp
cmp
out
jp
cmp
gs
or
lcall
mov
add
xchg
lds
xchg
cltd
inc
pop
or
inc
mov
jl
sbb
push
inc
dec
fisttpll
jge
sub
ja
lahf
fdivrs
out
mov
leave
mov
pusha
loopne
pop
sbb
jne
xor
daa
cld
or
imul
data16
mov
test
mov
mov
adc
jp
xchg
subl
in
scas
mov
arpl
xchg
fstl
loopne
mov
inc
sbb
lret
dec
leave
mov
mov
inc
jmp
mov
dec
cltd
jae
inc
sti
ss
movsb
push
cmp
cld
int
jmp
shrb
ret
inc
test
cmpsb
imul
test
iret
push
push
pop
push
icebp
ficoml
pop
dec
fimuls
dec
xchg
in
mov
aam
stc
mov
out
fdivs
dec
mov
repz
pop
pop
sahf
pop
ss
icebp
out
cmp
dec
pop
adc
pushf
sbb
xlat
insb
pop
into
adc
push
add
xor
clc
dec
scas
bound
mov
daa
mov
mov
ret
pop
shlb
inc
ret
mov
xchg
or
cmpsl
or
jne
dec
jbe
jle
insl
xor
dec
jecxz
test
fstp
fnsave
dec
add
fldl
cltd
out
or
loop
push
mov
inc
fwait
mov
and
mov
mov
dec
outsb
fstpl
lock
or
out
paddq
mov
repz
jle
sti
cmp
jecxz
mov
push
mov
push
rep
enter
out
scas
sub
jg
add
arpl
push
sbb
scas
iret
test
cmp
push
lock
sahf
cmc
int
dec
das
xchg
push
pop
mov
inc
fdivl
adc
inc
idivb
cmp
xor
enter
enter
or
shll
xorl
test
xor
sbb
mov
fsubrs
adc
ret
int3
rcrb
mov
ss
rorl
fidivrl
sbb
pop
sti
movsl
push
je
lea
jmp
ds
enter
int
xor
pop
data16
aam
add
js
jg
jle
cltd
mov
cwtl
add
and
pop
push
bnd
cmp
ljmp
and
sbb
inc
adc
leave
push
add
push
pop
mov
fcompl
addr16
fiaddl
fsubrl
pop
sub
or
fdivrs
adc
xchg
rorb
xor
add
lahf
pop
xlat
mov
es
dec
xor
repz
xchg
aad
pop
add
mov
xor
popf
imul
mov
xchg
je
fadd
in
xchg
and
adc
push
icebp
jne
pop
std
push
sub
out
cmp
hlt
inc
mov
sbb
daa
adc
loopne
adc
lea
shll
fimull
mov
pop
push
orl
test
cmp
and
dec
xchg
pop
lret
push
sti
iret
jns
cs
jns
popf
scas
mov
mov
adc
add
cmpxchg8b
jp,pn
loop
dec
push
stc
mov
sbb
in
daa
in
cld
mov
in
sbb
inc
cmp
inc
pop
pop
xchg
and
xor
mov
in
xchg
push
test
shll
fs
pop
aad
jle
xor
mov
popa
sub
jmp
ret
sti
lods
inc
pop
dec
ja
push
jp
adc
orl
mov
mov
sbb
jns
xchg
lret
or
out
jl
call
cmpsl
loopne
push
add
cwtl
inc
mov
aam
mov
add
inc
and
pop
enter
cltd
in
mov
lods
pop
pop
hlt
lds
jae
lods
lcall
test
or
in
push
cmc
sub
ljmp
fildl
xor
jmp
cmp
clc
ret
andb
stc
cld
jmp
xchg
dec
cltd
imul
cltd
xor
cltd
addr16
inc
aam
sti
nop
inc
adc
addr16
adc
jno
hlt
xchg
xor
adc
jg
in
and
mov
pop
out
jg
leave
cltd
push
xchg
shll
or
orl
push
mov
xor
push
add
out
jl
cmpl
fwait
xchg
jbe
xchg
or
rcrl
mov
lahf
popf
ljmp
jne
shr
je
dec
cwtl
xchg
jmp
punpckldq
clc
jae
mov
adc
cmp
insl
mov
and
add
sub
cmp
scas
sub
xor
fstl
pop
xchg
jle
lock
test
sahf
sbb
imul
in
dec
loop
and
data16
mov
mov
xchg
sahf
fiaddl
adc
lds
rolb
lret
stos
push
in
jl
gs
sub
pop
pop
dec
inc
mov
mov
test
dec
imulb
xor
pop
fisubl
in
ficomps
xor
sbb
pop
pop
in
dec
out
xorb
push
xlat
jge
jp
mov
lret
loope
cmp
push
ret
sbb
mov
add
push
das
pushf
jbe
or
test
sbb
inc
xchg
pop
subl
and
scas
rorl
faddl
aas
cmp
add
push
dec
fidivrl
fsubrs
sti
loope
sbb
pop
test
fwait
mov
popf
mov
or
les
insl
stos
shll
add
gs
mov
arpl
xchg
xchg
out
sub
and
pop
adc
dec
inc
imul
bound
repz
loop
pushf
movsb
cmp
data16
movl
sahf
sub
inc
push
leave
inc
sbb
inc
inc
dec
sub
movsl
inc
pusha
fwait
daa
push
jle
aaa
in
mov
fimull
pushf
sub
cmp
mov
outsl
jbe
mov
jle
push
xor
xchg
bound
stos
pop
aam
xor
mov
mov
nop
enter
inc
cmp
add
or
mov
out
les
jae
test
iret
int
test
mulb
in
jl
adc
orl
sahf
imul
mov
jae
out
push
pop
hlt
xor
scas
sbb
xchg
ficomps
jne
dec
mov
repz
xor
test
sti
insb
mov
mov
int3
mov
in
fsubr
rol
inc
lcall
cmp
push
leave
ljmp
sub
scas
sar
imul
jmp
cmp
ret
rol
rcl
int
push
nop
fiadds
mov
js
jl
js
xor
add
sub
aaa
jae
in
int
sahf
xchg
sub
test
inc
cmp
mov
ss
jnp
xor
or
mov
jmp
fcomp
ljmp
mov
imul
xor
icebp
push
icebp
mov
jg
les
adc
xchg
cmovle
loop
shlb
inc
fldenv
dec
sbb
adc
xor
pop
mov
fstpt
leave
aad
inc
out
and
into
imul
hlt
push
call
sub
mov
ss
into
cmp
in
rorl
popa
push
jg
fsub
inc
cmp
and
add
mov
dec
je
jl
sbb
mov
out
arpl
jge
in
cmc
lods
mov
das
stos
or
pop
mov
mov
xchg
rcrb
xlat
push
adc
pop
fdivrl
sbb
sub
sbb
and
addl
call
sbb
dec
add
stos
adc
jae
sub
mov
jbe
push
test
cmp
cmc
adc
fstl
xor
mov
aam
rorl
outsb
je
cmp
cwtl
mov
pop
imul
or
pop
jle
push
addr16
or
or
fcompl
mov
push
and
sbb
divb
sub
stos
clc
mov
test
scas
ret
mov
or
inc
mulb
mov
outsl
aas
test
into
dec
ret
int3
or
mov
mov
jg
mov
sbb
movsl
gs
xchg
shll
mov
lds
aad
xorl
pusha
adc
push
xchg
mov
mov
jb
shrb
leave
inc
sub
stos
mov
test
pop
sub
xchg
xor
and
ud1
popf
mov
loop
cmp
dec
lret
add
push
enter
jecxz
xorb
push
cmc
dec
arpl
inc
fbld
addr16
leave
jb
cld
leave
arpl
unpcklps
mov
dec
scas
jp
jno
sbb
xchg
rclb
adc
aad
add
cmp
xchg
xchg
sbb
mov
pop
imul
inc
into
aas
lahf
mov
add
ret
inc
daa
ljmp
pop
jae
imul
ror
ds
leave
hlt
add
hlt
dec
mov
popa
inc
sbb
pop
xchg
mov
in
inc
movsl
mov
pop
xchg
jno
sti
mov
jmp
test
daa
insl
icebp
xlat
scas
fisubl
xchg
movsl
cmp
pop
xchg
adc
ljmp
fistpll
mulb
test
push
mov
adc
test
lock
decl
out
push
mov
in
stos
sub
stos
cmp
or
sub
dec
pop
lds
adc
fs
lods
out
sbb
fwait
in
add
sub
jmp
push
jecxz
lahf
jnp
mov
dec
in
pop
adc
pop
lods
insl
repnz
mov
xor
int
xor
mov
pop
les
inc
inc
mov
mov
subl
mov
push
jg
add
scas
fisubrl
and
mov
sub
daa
in
push
dec
jbe
stos
loop
js
jns
insb
loope
fwait
cmpsl
out
inc
orl
aad
bound
pop
mov
jb
imul
rclb
pop
test
sbb
js
xor
pop
inc
pop
dec
lahf
sub
hlt
test
std
add
sub
adc
popf
ret
or
in
aad
push
mov
or
adc
xchg
jae
push
scas
xor
clc
add
test
popf
es
jb
mov
pop
adc
aaa
shlb
inc
mov
and
fs
pop
test
push
sarl
cmp
sub
stc
ds
jmp
call
fcomp
push
push
insb
sbb
lahf
or
push
loope
js
shl
test
testb
push
iret
sub
scas
xchg
dec
cwtl
mov
out
or
fisttpl
cmp
pusha
adc
and
in
and
push
loope
mov
cmp
aam
xchg
into
mov
jns
lods
lock
mov
fdivs
inc
lret
leave
cwtl
frstpm(287
xchg
bound
test
xor
mov
mov
or
push
mov
jmp
leave
cmp
ret
leave
leave
leave
lret
int
setne
js
jl
js
mov
daa
lock
fs
icebp
out
lds
lcall
mov
int3
add
clc
sti
mov
mov
cwtl
addr16
xor
pushf
dec
push
lock
adc
in
js
jl
sub
popf
inc
xchg
push
pop
xchg
mov
mov
test
shrl
mov
inc
scas
pop
out
cwtl
pusha
mov
andb
ficomps
inc
mov
stos
data16
cmc
test
add
ficompl
pop
ds
movsb
inc
cmc
rclb
test
cmpsb
pop
mov
pop
xor
fsubs
out
push
jge,pn
dec
in
cmc
jg
jge
outsl
lods
mov
adc
jne
jle
iret
in
iret
arpl
out
lock
add
clc
lock
dec
outsb
and
in
pop
mov
cmp
mov
jge
jo
xlat
pop
call
sti
or
arpl
je
lock
xor
ja
jb,pt
lock
cmp
inc
xor
pusha
pop
pusha
iret
es
sub
orl
inc
adc
out
mov
jae
loop
inc
int
cwtl
sbb
in
sub
xchg
movsb
dec
shlb
lea
ds
call
in
popa
daa
bt
mov
insl
dec
ds
or
in
cld
jle
fmul
test
ja
mov
push
mov
sbb
pop
stc
mov
mov
icebp
add
jne
jne
inc
mov
mov
xor
push
xchg
popf
jge
pusha
cld
mov
jecxz
mov
fnstsw
out
into
push
xlat
adc
mov
iret
or
jecxz
dec
cld
xchg
rcll
sub
push
xchg
push
out
inc
xor
arpl
inc
mov
out
cmp
fimuls
arpl
xchg
jmp
shrb
adc
jg
mov
pushf
sub
adc
xor
jg
iret
or
cmp
out
arpl
xor
mov
jnp
or
sbbb
push
mov
rorb
push
in
mov
inc
adcb
mov
mov
mov
inc
testb
repz
cmpl
sub
xlat
and
cmc
in
fcoml
jbe
das
push
sub
scas
adc
pcmpgtb
jno
in
mov
cmpsb
sbb
out
cmp
dec
fs
jb
ret
or
in
fstpl
adc
jb
popf
lock
jecxz
cmc
mov
scas
pushf
mov
pop
jne
xor
and
push
int3
mov
mov
insl
je
stos
shrl
loope
jmp
mov
cmpl
dec
inc
inc
dec
cmpsb
jmp
xlat
mov
dec
sub
lcall
jo
adc
mov
mov
nop
jmp
test
pop
nop
mov
mov
xchg
mov
xor
ds
rolb
orl
test
sahf
ss
in
xchg
mov
cld
dec
sub
cs
sbb
movsl
negl
cmc
repz
dec
xchg
push
jle
xchg
insb
mov
xrelease
mov
fstps
adc
scas
fmull
cs
sti
mov
insl
movsb
mulb
lods
pushf
sub
push
adc
mov
jno
cmp
or
or
mov
jg
popa
into
pop
dec
dec
fiaddl
nop
mov
aad
or
lds
push
jne
ja
repz
sub
daa
adc
jle
sbbl
xor
cmpsl
daa
mov
pusha
mov
inc
daa
push
stos
pop
aaa
jno
xor
jno
js
stos
sub
mov
push
daa
mov
or
enter
pop
sub
adc
dec
xor
mov
pop
adc
xchg
mov
push
andnps
mov
mov
dec
jmp
jge
and
sub
mov
push
aad
and
adc
int3
popf
mov
jle
pusha
popf
inc
dec
lea
lret
sbb
lret
adc
stos
mov
stos
pop
lods
pop
xchg
inc
adc
imul
adc
or
mov
inc
sbb
mov
fadds
dec
xor
mov
enter
mov
jle
jmp
lods
mov
arpl
sbb
xor
push
fs
mov
divb
imul
mov
xor
add
mov
mov
mov
lea
mov
jmp
lret
rcl
fnstcw
stc
mov
dec
nop
js
push
js
das
lock
xchg
adcb
or
mov
pop
insb
pop
test
mov
mov
jmp
push
loop
lcall
mov
pop
mov
mov
and
call
or
inc
icebp
jns
inc
mov
sbb
push
inc
adc
arpl
rcll
jae
add
outsb
push
cmp
mov
adc
ljmp
push
outsl
mov
xor
mov
xor
mov
out
daa
outsb
sti
mov
in
nop
notl
jb
pop
pop
arpl
insl
gs
sbb
shr
les
push
lods
push
mov
imul
ja
sar
daa
out
pop
out
mov
add
add
rorb
cltd
sbb
add
mov
lcall
in
or
mov
rcrl
add
repnz
xchg
sub
out
mov
cmc
mov
in
xchg
pushf
lcall
jmp
mov
adc
cmp
shlb
cmc
jl
jo
cli
ret
loope
in
out
mov
in
xchg
mov
pop
cmp
jb
sbb
je
sbb
orb
dec
add
out
mov
cmpsb
inc
xlat
arpl
push
loop
aad
js
subb
cmp
movsl
mov
fldz
push
loop
xchg
jb
std
jae
repz
push
icebp
data16
int
in
mov
fdivrp
inc
outsl
dec
shr
pop
repnz
pop
sub
cs
iret
sbb
shll
xchg
cmpsb
insb
push
or
addr16
pop
add
sbb
sub
clc
fidivrl
int3
sub
pop
cld
je
jl
ja
bound
jbe
mov
add
xor
shl
or
insb
add
sub
and
pop
out
fwait
sub
inc
insb
rorb
ret
call
les
push
push
xchg
add
mov
sbb
insl
mov
imul
xlat
stos
sub
jne
repnz
jg
mov
or
adc
icebp
adc
adc
into
mov
ja
pop
dec
clc
ds
out
lcall
mov
aas
bound
stc
ss
pushf
xchg
int
push
push
into
and
mov
add
add
aam
daa
pop
add
insl
sub
movsl
scas
pusha
mov
mov
cmp
es
mov
aam
jbe
in
test
push
push
addr16
lret
adc
jo
test
fucomi
pusha
push
pop
lret
and
or
xchg
es
out
test
fcmove
add
or
ds
adc
in
pop
cltd
jp
sbb
aam
popa
das
imul
push
popa
fsubrs
jle
xor
pop
jle
adc
or
pop
and
out
dec
adc
mov
cmp
sub
push
push
xchg
cmpsb
je
mov
sub
mov
loope
fs
scas
jb
cmp
iret
adcb
mov
pusha
movsb
cmp
adc
rol
or
sub
movb
out
hlt
push
jle
aaa
loope
pushf
pop
xchg
xor
lods
push
jecxz
rcr
call
pop
test
xor
popl
scas
push
jb
jmp
jl
call
ret
cmpl
jg
lds
rolb
pop
cmp
std
insb
xor
dec
shll
test
add
push
push
mov
fildll
jecxz
fsubrs
jnp
ret
xchg
push
sub
sub
mov
divl
mov
lahf
dec
or
mov
push
test
cmp
push
xchg
dec
stos
sub
inc
out
out
stc
or
mov
mov
test
ja
dec
gs
jne
xchg
in
int3
orb
adc
adc
and
push
sbb
inc
fwait
daa
push
cwtl
ret
aas
adc
das
pop
mov
dec
lds
test
pushf
andl
and
pop
push
ret
imul
lret
dec
dec
ja
cmc
or
inc
int3
dec
sbb
mov
add
jmp
aas
push
movsb
sbb
ss
dec
adc
aam
imul
push
mov
or
pop
push
pop
in
sti
in
push
loop
dec
push
cmc
je
xor
xor
xchg
fucom
lcall
jge
add
into
addr16
jo
add
shll
loope
lahf
push
call
mov
lock
mov
jmp
vpsrld
fcmovbe
leave
sarl
cmp
test
cmp
fwait
js
push
js
cmpb
das
pushf
add
stc
in
jns
lahf
add
aad
imul
push
cs
enter
or
mov
push
fidivs
fdivl
andl
shll
cmp
jae
rorl
je
or
cmp
testb
mov
sarl
aaa
addr16
shr
push
pop
repz
in
pop
push
inc
push
push
or
jnp
sub
cmp
insb
mov
imul
cmp
loop,pn
insb
add
jge
inc
sub
xchg
in
fs
xchg
mov
negl
lods
es
inc
mov
cltd
push
test
in
mov
divl
lret
in
adc
sbb
mov
jnp
out
xor
or
scas
popf
mov
ds
add
mov
repnz
iret
sub
or
push
jecxz
pop
jge
mov
mov
cmp
shlb
jmp
pusha
inc
push
cmp
je
add
into
fsts
cwtl
outsb
addr16
cltd
mov
dec
loopne
push
lret
outsb
es
push
xor
cli
cmp
cmpsl
and
mov
pop
jl
mov
mov
lods
adc
movsl
adc
dec
inc
xlat
push
push
mov
xor
or
jmp
cs
inc
fsubl
jmp
xchg
dec
ds
adcb
mov
sbb
rolb
and
lods
sub
mov
jae
add
in
aam
pop
jnp
stos
mov
stos
aas
cld
cwtl
mov
packsswb
outsb
jne
mov
repz
xor
dec
icebp
mov
mov
cld
mov
inc
insl
cli
lods
jmp
inc
loop
sti
push
mov
sbb
lods
jne
outsl
cmpsl
flds
idivl
or
cwtl
test
jnp
adc
adc
das
aam
push
mov
ja
sbb
mov
dec
mov
into
cmpxchg
out
push
lock
jbe,pt
cmpb
inc
scas
inc
fisubrl
je
xchg
popf
add
ljmp
dec
jbe
gs
mov
test
mov
dec
mov
ret
add
dec
fsubrs
or
inc
pop
mov
gs
test
ljmp
and
xchg
cmp
cmp
mov
cmp
jle
push
sbb
lods
jbe
fsubrl
mov
and
xlat
fsts
pop
outsl
outsl
pop
sbb
mov
pop
xor
inc
and
jp
xchg
mov
push
cmp
lods
mov
cmp
mov
sub
cmp
sub
add
ror
ret
cmp
xlat
pop
fimuls
aam
lods
mov
test
test
mov
mov
sub
cmp
and
xlat
or
pop
mov
scas
and
call
xchg
nop
mov
std
cwtl
pop
jb
push
jbe
jnp
xor
movsl
jb
mov
aam
add
aam
stos
pop
out
mov
sub
adc
in
push
mov
fnsave
adc
loope
or
out
fwait
icebp
mov
push
ja
imul
hlt
jnp
jne
rcl
lea
das
or
adc
mov
cli
push
in
shl
es
pop
sarb
or
andb
sbb
testb
leave
push
dec
fs
cmpsb
fdivrl
jg
mov
adc
enter
mov
jmp
sti
and
add
je
sbbb
pop
aas
mov
into
cmp
ljmp
mov
adc
ljmp
sbb
movsl
sbb
push
test
push
andl
fidivrs
stc
mov
xlat
jmp
xchg
xchg
out
xor
sbb
pop
stos
fcmovb
mov
cmp
lds
lret
nop
add
sub
or
out
out
int3
push
sub
fadds
pop
lods
mov
mov
jno
aaa
mov
mov
mov
mov
inc
push
sub
cmp
mov
lret
add
add
add
push
in
jno
jns
rolb
jge,pn
mov
in
add
cmp
xchg
sub
and
fnsave
loope
movsl
test
cli
dec
sbb
mov
push
and
jo
das
rol
ljmp
mov
mov
mov
jmp
ror
ror
rcl
rcl
cld
in
lock
stos
sahf
js
push
js
xchg
cli
arpl
shlb
push
xlat
push
shll
cmp
mov
xor
dec
jo
mov
adc
mov
shll
push
hlt
jno
mov
mov
adc
loope
cli
les
pop
mov
pop
insl
pop
mov
in
addl
ja
or
cltd
cmpsl
jecxz
pop
mov
test
jne
jns
shrb
sub
subl
lret
xor
jae
dec
pop
inc
repz
les
shl
dec
add
ficomps
or
cli
call
lds
add
jle
mov
mov
orl
cmp
jmp
addr16
fidivs
inc
clc
xor
jno
cmp
ret
jbe
or
push
jg
scas
shrb
insb
sbb
mov
mov
stos
mov
int
insb
loop
aam
inc
pop
jp
xchg
lcall
sbb
popa
popl
aad
sub
mov
ret
push
push
push
sub
xchg
shlb
fnsave
mov
dec
mov
xchg
mov
out
pop
test
jno
mov
mov
fsubrp
adc
xor
xchg
dec
in
in
mov
test
push
testl
aad
cmp
inc
pop
mov
leave
jbe
add
xchg
push
fwait
repnz
or
test
sbb
or
cmp
aas
mov
scas
ret
ret
jb
lahf
scas
cmpsb
jne
pop
subl
lcall
test
fnstcw
push
sub
inc
mov
aam
push
cld
loopne
cmp
in
jb
xchg
aad
gs
gs
and
imulb
mov
test
dec
dec
sub
cltd
add
shlb
jns
xchg
jl
call
loop
jns
cmpsb
inc
mov
icebp
pop
stos
cmc
stc
cld
pop
push
call
mov
scas
add
inc
imul
mov
repz
incb
fsubl
mov
jle
xchg
sbb
jmp
ret
add
movsl
push
jge
or
sti
push
ficoms
jl
mov
xlat
mov
jno
outsl
insb
fstl
arpl
mov
jmp
stos
rcll
cltd
xchg
mov
sbb
leave
je
jb
lahf
pusha
jns
mov
ficoms
inc
daa
fisttps
ret
mov
lahf
pop
icebp
xor
icebp
adc
bound
lods
push
in
and
jmp
push
fldenv
iret
xor
dec
pop
repnz
pop
and
int
jmp
xor
test
in
pop
dec
dec
mov
sbb
xchg
aad
es
ret
pushf
aas
pop
pop
cltd
pop
sbb
jno
and
movb
scas
pop
jmp
add
pop
aaa
add
cmpsl
aas
repnz
iret
imul
loop
or
mov
jae
xor
sub
jo
out
mov
shlb
mov
or
add
aad
out
add
stos
inc
jb
pusha
loopne
pop
push
scas
mov
aaa
mov
jmp
push
inc
test
adc
call
push
dec
mov
test
rolb
js
ljmp
inc
dec
xchg
imul
pop
push
mov
dec
or
lea
dec
adc
inc
push
sti
xorl
int
aad
or
inc
outsb
outsl
arpl
cltd
cwtl
mov
movsb
sub
cmpsb
mov
jnp
jecxz
mov
daa
mov
pushf
sub
cmp
xchg
pop
jge
push
mov
pop
and
cwtl
lea
add
inc
jns
ror
test
movsl
sti
aad
xchg
jb
jg
subl
jmp
sbb
mov
inc
bound
lea
std
and
add
insb
scas
lds
mov
lock
cmp
push
or
aad
jb
out
les
dec
movsb
cmp
loope
and
mov
por
fimull
movsb
fdivs
cmc
popa
jmp
push
scas
jmp
imul
mov
movsl
or
outsb
add
test
aas
dec
jns
sub
sbb
add
lods
push
mov
mov
mov
sahf
ja
mov
sub
add
sub
inc
mov
pop
fdivl
adc
mov
clc
xor
add
mov
mov
mov
jmp
lret
lret
leave
leave
leave
cmp
and
mov
js
xor
sahf
lret
loop,pt
stc
mov
imul
jecxz
xchg
add
push
xorb
lock
mov
rorl
pop
push
or
xor
push
lock
add
pop
inc
cmp
dec
stc
mov
es
repz
icebp
mov
shll
jb
mov
mov
pop
lods
decl
push
xor
jmp
sub
icebp
shlb
lahf
cmp
add
lret
mov
and
inc
sbb
pop
adc
arpl
jne
mov
dec
jl
inc
push
and
dec
shrb
clc
inc
ret
rcr
cmp
inc
lcall
addr16
mov
rolb
sub
fs
mov
cmp
dec
jp
ja
mov
dec
out
adcl
in
sub
dec
dec
loopne
dec
movsl
push
popa
bound
test
and
jecxz
cs
lock
mov
xor
pop
mov
push
std
out
aam
xchg
cwtl
mov
push
inc
push
jmp
xchg
movsb
ret
xor
sbb
mov
add
or
stos
dec
mov
in
pop
push
mov
jp
clc
popa
mov
ja
int
test
cmpsl
push
sub
frstor
stos
cld
push
icebp
sarb
adc
sub
push
dec
jne
or
xchg
insl
pop
add
or
dec
mov
int3
repz
push
jg
in
and
mov
bound
stos
mov
adcl
fdivr
ja
loopne
popa
push
adc
xchg
mov
xchg
pop
mov
pusha
jno
inc
inc
jmp
xchg
mov
test
cli
dec
stos
fsubl
sub
rcr
xchg
fimuls
mov
lret
mov
in
and
loopne
lock
cwtl
scas
dec
sub
mov
or
das
jns
sahf
push
scas
mov
sbbl
iret
in
adcl
jo
les
inc
loopne
jmp
ds
push
cmp
int3
clc
lahf
popa
or
ss
arpl
pushf
or
jmp
icebp
sahf
add
mov
pop
push
cmp
mov
sub
jns
dec
adc
jno
sub
imul
push
outsl
push
jne
ds
inc
fwait
inc
pop
cmp
cmp
mov
mov
adcl
loop
or
mov
pop
xchg
repz
test
pop
ficomps
lds
or
int
jns
leave
dec
shrl
adcb
daa
enter
push
sbb
adc
mov
das
fisttpl
dec
test
adc
std
pop
fldln2
shll
jl
dec
enter
mov
sbb
mov
inc
in
xchg
mov
in
into
sahf
enter
push
sub
mov
jge
mov
outsl
mov
pop
bound
xor
in
pop
jg
xor
mov
out
mov
jae
push
push
out
jmp
push
push
movsb
lcall
popf
imul
jmp
rclb
out
rcrl
mov
mov
and
or
or
jp
add
imul
xchg
mov
xchg
cltd
mov
idivl
shld
push
stos
lods
push
or
nop
mov
sbb
lcall
ja
test
in
aaa
fstps
lock
mov
stos
adc
ljmp
push
add
or
jp
aaa
rcr
and
xor
imul
mov
std
or
xchg
mov
aad
adc
or
mov
stc
fsts
pop
xor
push
push
je
cmpsb
dec
rolb
scas
add
add
outsl
inc
dec
cmp
lods
insl
sbb
xchg
fidivl
shrb
cwtl
fwait
daa
fcmove
jno
add
push
add
je
jmp
fwait
lfs
lods
xchg
lcall
sbbl
jne
pop
fiadds
negb
fstps
sarl
fstpt
mov
mov
stos
push
es
insb
mov
cltd
sbb
mov
test
push
mov
sub
out
xor
mov
in
adc
movsl
loop
mov
pop
push
xchg
xlat
lret
icebp
add
stos
into
faddp
inc
sub
in
jl
adc
mov
mov
jmp
cmp
ret
rol
dec
pop
fwait
or
movsb
js
push
js
das
jae
aas
into
inc
mov
lret
push
xor
out
cmp
jmp
xchg
add
inc
pop
das
xor
out
lahf
pop
sbb
lea
push
lock
aad
loope
rcr
inc
addb
jae
push
xchg
nop
dec
dec
lahf
pushf
in
adc
inc
and
jge
push
mov
call
xchg
ja
push
sbb
dec
popf
adc
mov
push
pop
rcll
add
sbb
out
mov
aad
filds
adcb
xchg
in
jns
dec
into
and
movsl
into
outsb
cmp
sbb
mov
out
mov
mov
sti
sbb
scas
jmp
pop
lock
cmpsb
push
cmpsl
imul
mov
ja
mov
sub
jge
inc
decb
or
add
cmp
mov
scas
push
jmp
jne
dec
or
add
andb
mov
scas
xchg
mov
jne
dec
int
lcall
loope
xor
push
iret
sbb
adc
jae
popa
test
xor
jmp
cmp
scas
test
dec
cmp
pop
mov
popa
dec
or
xor
sbb
std
mov
dec
sub
or
movsl
cmp
testl
sub
icebp
push
jp
dec
test
or
xchg
and
and
dec
mov
enter
mov
fcom
aas
rorb
lea
xor
xchg
or
sti
cmp
inc
push
cmc
sahf
push
xchg
cli
xchg
mov
jmp
int
cwtl
xchg
mov
gs
loop
shrb
cmp
icebp
xor
mov
and
cli
loop
and
mov
into
mov
dec
mov
cs
pop
sub
stc
cmp
pushf
dec
adc
dec
stos
mov
imul
lods
jae
push
jmp
orb
test
sbb
lcall
ss
mov
cltd
dec
mov
and
inc
aad
inc
push
aas
cltd
sarl
ja
sbb
and
or
xchg
pop
push
out
scas
test
jmp
scas
imul
fs
or
or
orb
or
lea
lret
xchg
mov
mov
push
jecxz
pop
shrb
push
jge
pop
fchs
jb
jo
xor
ret
dec
mov
cld
dec
daa
mov
cmp
adcl
clc
pop
push
movsb
push
out
imul
int3
adc
in
js
ret
push
cmp
jb,pt
adc
cltd
pushf
iret
mov
aas
xchg
mov
jge
rorl
aam
dec
popa
les
fistpl
xor
xor
and
shrl
jg
scas
outsl
fmull
jo
std
mov
sub
xchg
lahf
sbb
in
imul
sub
lea
loope
adc
lods
jg
fdivl
aad
testl
lcall
leave
divl
stos
inc
cmp
push
add
mov
outsb
mov
jmp
xlat
push
mov
mov
mov
xor
jns
sbb
loop
push
rcr
xchg
mov
xchg
mov
stc
cmpsw
fimuls
inc
icebp
pop
in
and
add
mov
cwtl
mov
js
movsb
aaa
cmp
test
xchg
or
or
dec
clc
jns
fisubrs
mov
sbb
pop
mov
int
xor
jecxz
notb
mov
test
xchg
mov
sbb
xchg
xchg
xchg
jo
mov
mov
and
lods
test
mov
ret
shrl
int
imul
jns
push
push
adc
shlb
or
add
sbb
fwait
sub
jo
popa
fmulp
xchg
sub
jp
adc
in
xor
push
jl
lea
hlt
cmp
xchg
leave
sbb
loop
insb
lahf
mov
inc
das
push
mov
mov
and
loop
pop
fninit
and
jb
pop
movsb
xchg
cmp
pop
scas
gs
sbb
mov
or
dec
push
popf
push
icebp
fwait
push
sahf
cltd
outsl
xor
mov
cmpsl
lcallw
nop
pop
xor
add
icebp
xor
xor
and
mov
in
mov
lea
ss
cmp
sub
pop
jecxz
mov
fldenv
dec
xchg
aam
xchg
adc
adc
mov
mov
jmp
int3
sarl
ror
rcrl
xlat
call
lock
js
push
js
fxch
mov
notl
stos
adc
inc
icebp
jg
and
xor
dec
sub
jno
in
arpl
inc
xor
and
mov
xchg
imul
mov
jnp
pop
andl
enter
and
ja
jmp
pop
lret
rorl
and
call
mul
out
mov
jnp
adc
add
xchg
jmp
xlat
cwtl
pop
nop
dec
shlb
sbb
push
addb
orl
or
push
int
sub
xor
inc
sub
mov
dec
popa
mov
or
outsb
or
jae
ljmp
in
dec
jbe
mov
repnz
mov
int
fbld
scas
and
test
dec
cmpb
idivl
and
mov
dec
cmpsl
jge
mov
jg
or
fstps
jo
xor
divb
sbb
pop
dec
or
xchg
imul
push
jge
mov
int3
push
jmp
dec
inc
jecxz
inc
inc
repnz
xlat
jne
inc
les
adc
cmc
fcmovnu
xor
repnz
nop
hlt
notb
loop
mov
loop
cmc
cmp
push
xor
sub
cmpsl
psubsw
pop
fdivs
andl
inc
jecxz
mov
js
jno
mov
mov
stos
stc
jb
xor
push
dec
jbe
push
fisubrl
xor
out
cmp
in
add
sub
lret
shlb
loop
and
into
inc
add
ret
or
jne
in
aam
imul
bound
cmp
cltd
lea
repnz
dec
xchg
jo
jmp
lea
pop
test
outsl
stc
inc
aaa
cmp
clc
mov
mov
and
add
inc
xchg
inc
mov
scas
je
loopne
into
aas
xchg
sub
xchg
adc
adc
or
sub
add
xchg
int
push
pop
shl
xlat
add
jl
sub
xor
push
and
addl
pop
add
xor
adc
mov
mov
jnp
sahf
mov
imul
sbb
add
and
xchg
or
push
jecxz
sub
sarl
repnz
out
cmpsb
xor
cmpsb
adc
dec
push
outsb
xchg
or
push
jmp
rcrb
xor
jb
loop
ja
sbb
in
cwtl
scas
jne
inc
adc
popa
aaa
mov
xchg
mov
sarl
in
ret
inc
xor
xorl
outsb
lods
sbb
and
movsl
xchg
mov
fwait
ja
cld
push
inc
lcall
daa
mov
add
adc
jbe
out
jno
sbb
inc
pop
pop
jo
and
repz
scas
jp
fs
cmp
mov
imul
pop
pop
jne
push
test
push
jae
pop
xchg
push
pop
cmp
or
icebp
dec
jmp
push
xor
cld
cmp
and
rcll
inc
xchg
and
xchg
cmp
pop
mov
inc
cwtl
aas
and
or
xchg
rcrb
ret
pop
fwait
insb
in
scas
leave
pop
test
pop
movsb
mov
in
cld
aam
cmc
ljmp
aaa
jae
int3
das
push
loop
int3
call
out
test
fwait
sbb
dec
fmull
mov
sub
ret
or
shrb
out
mov
sar
mov
or
add
repnz
mov
inc
sahf
leave
dec
out
ds
mov
pop
and
div
int
jmp
iret
jmp
fistpl
repnz
sti
data16
lock
gs
cwtl
add
add
ror
push
jne
test
adc
test
xor
jae
push
ljmp
int3
pop
aam
inc
ror
and
sti
jb
pop
lods
jae
jl
jp
xchg
in
les
dec
xchg
pop
jnp
cmp
and
bound
jns
mov
mov
aas
cmp
lcall
pusha
sub
lret
nop
addr16
add
addr16
bound
mov
jge
lock
les
rcll
add
stc
cmp
out
push
jmp
mov
pop
and
sbb
mov
jnp
cmp
fcompl
mov
inc
clc
add
ja
cmpsl
add
es
leave
in
push
imul
push
jp
cmp
in
mov
int3
mov
mov
mov
jmp
iret
enter
fcmovnu
roll
ficoms
jae
in
lret
js
push
js
hlt
lret
or
mov
push
in
or
ds
mov
leave
cmp
xchg
popf
mov
rcrb
and
pushf
jb
mov
popa
stc
add
and
out
pop
fstps
mov
pop
mov
loop
push
bnd
xor
push
leave
xchg
sub
push
in
pop
cmc
and
xchg
lods
cltd
shlb
jno
aas
mov
mov
sbb
mov
js
call
adc
push
xor
out
adc
sub
mov
push
mov
pushf
fwait
sarl
mov
xor
imul
gs
push
das
jecxz
mov
xor
aam
lret
out
sbb
mov
push
push
leave
dec
jno
repnz
icebp
inc
xchg
fs
rol
stc
dec
or
inc
cli
repnz
stos
loope
pop
clc
push
and
xor
sbb
addl
mov
mov
stc
cmp
imul
mov
push
nop
jae
or
bound
icebp
repz
test
in
clc
leave
out
in
and
les
cmpsb
dec
sbb
push
popf
xor
push
mov
clc
sbb
ficoml
add
ffree
movsb
sbb
cltd
and
add
or
cmp
scas
std
xor
in
repz
daa
xchg
stos
dec
sbb
lahf
add
sarl
loopne
or
pop
pop
movsl
mov
fidivl
sahf
cmp
sbb
inc
adc
lret
mov
outsb
sbb
imul
inc
push
sub
enter
add
jnp
adc
push
adc
stc
push
jns
movsb
sub
jle
shl
fstpl
fs
jae
cli
inc
cmp
mov
xchg
pushl
ds
xor
sbb
fmul
lret
dec
add
jl
lahf
jg
xchg
add
nop
inc
push
add
in
xor
add
mov
pop
in
mov
dec
out
shrl
addb
jle
test
shlb
fadd
cmpsl
int3
test
mov
or
loop
sub
inc
es
cmp
in
cltd
pusha
sub
ret
mov
jg
arpl
xlat
inc
inc
test
xlat
repz
stos
in
pop
pop
push
test
imulb
cli
fidivl
cmp
mov
rcr
loope
cltd
cmp
sub
fcoml
leave
or
and
leave
in
ljmp
mov
hlt
add
add
repz
in
popf
mov
inc
ret
xor
mov
test
ja
or
out
lock
and
xor
mov
adc
pop
cli
lret
mov
push
dec
xlat
cltd
in
into
lahf
inc
dec
fdivrl
and
sar
dec
add
cmp
clc
cmp
or
nop
dec
int3
push
out
push
divb
fdiv
dec
sti
fstpt
shlb
movsl
lret
imul
hlt
sarl
mov
or
cwtl
pushf
and
dec
ja
loopne
mov
cwtl
or
rcr
or
jbe
dec
insl
test
mov
xchg
push
push
mov
repz
subb
xchg
mov
in
sbb
push
sub
cmpsl
cs
sub
and
call
dec
or
sbb
imul
test
sbb
loop
scas
cwtl
sub
mov
dec
in
std
insb
jecxz
inc
arpl
xor
lods
pusha
inc
mov
sub
jecxz
sbb
adc
pop
push
andb
adc
lods
adc
sub
push
aam
pop
push
cs
fs
adc
mov
xchg
sbb
mov
adc
dec
or
ja
dec
jb
repnz
jnp
xchg
pop
pushf
and
movsb
sahf
cmpsb
fistpl
mov
std
adc
cmp
pusha
add
mov
fsub
daa
sub
xchg
in
imul
jmp
inc
xchg
sub
jbe
lret
call
push
dec
testb
loopne
cmc
xor
and
add
call
daa
mov
inc
lahf
xor
jle
fwait
loope
testl
cli
addr16
andl
or
add
pop
mov
mov
scas
repz
xor
inc
jns
push
sbb
jo
mov
les
je
movb
dec
cld
stos
mov
push
cmp
sub
es
fcom
jno
idiv
in
mov
push
push
and
orl
in
mov
inc
adc
add
ror
cmp
jg
jne
add
int3
mov
js
jl
js
lret
xchg
xchg
jle
xchg
fwait
test
push
cli
jge
xor
call
neg
pop
sub
sub
into
ret
add
fcmovnbe
mull
repz
shll
push
fisttpll
xchg
mov
add
mov
mov
hlt
mov
jg
ret
cmpsl
lret
scas
hlt
pop
adc
aas
sbb
dec
xor
adc
pop
pop
mov
mov
gs
push
mov
pop
loope
in
addb
in
mov
and
jge
aaa
or
xor
mov
adc
test
mov
and
push
sbb
cmpb
pop
xor
xchg
pop
subb
cmc
enter
pop
bound
fs
pop
lds
ljmp
fildll
test
add
jg
inc
loope
or
and
lods
sbb
clc
inc
loope
ds
cmc
xchg
popf
adc
ret
test
push
in
pop
push
fsubs
xlat
and
ret
pusha
unpcklps
mov
push
cmp
push
sbb
add
fbstp
add
pop
vmovaps
mov
iret
xor
cmp
adc
sub
out
xor
pop
mov
mov
pushf
scas
xor
dec
cmpsb
mov
subb
jecxz
xchg
dec
clc
and
or
sbbl
cmp
mov
arpl
js
push
inc
addl
sub
adc
mov
stc
lret
js
cmpsb
std
mov
sub
jp
loop
daa
dec
fwait
sbb
push
js
push
aas
cmc
andl
cld
lods
pop
aad
roll
call
fcmovbe
cmp
mov
xchg
jecxz
sbb
fdivrl
inc
push
dec
sbb
stc
or
jne
xchg
xor
jb
notl
ljmp
mov
in
push
leave
into
xor
gs
pop
mov
cmpsb
mov
push
sbb
insb
mov
adc
sbb
lea
cmp
pop
xlat
insb
lods
iret
xor
shl
cltd
js
jge
aaa
stos
push
mov
arpl
jg
mov
insb
push
xchg
repz
hlt
frstor
mov
mov
mov
pop
imul
js
pop
mov
cmp
lods
aas
fcmovb
jge
cs
pushf
xor
push
lea
mov
rolb
lock
xor
leave
nop
mov
inc
lcall
dec
out
jp
dec
mov
pop
sbb
pop
shr
pop
xor
mov
push
in
cmp
les
std
pop
and
mov
fs
adc
aad
push
sub
pop
pop
add
sbb
inc
dec
or
daa
mov
fisubs
cmp
cmp
or
dec
sub
cmp
sahf
adc
leave
stc
mov
inc
test
dec
outsl
lods
sub
adc
std
inc
mov
and
int
sbb
das
cmp
call
imull
movsl
inc
and
ret
out
cld
adc
nop
push
pop
pop
stos
inc
sub
data16
dec
and
pop
xchg
stos
cmp
cmp
xor
xchg
das
shr
je
rcrb
test
nop
das
mov
jno
push
outsl
xlat
shlb
sub
and
imul
xchg
jg
or
push
aaa
sbb
stos
cmp
nop
ds
jmp
sub
icebp
push
cmc
mov
push
adc
push
jae
push
add
mov
mov
push
bound
pop
jae
inc
xchg
push
mov
pop
shlb
mov
aam
mul
outsb
out
clc
xor
sbb
popf
ffree
or
push
and
mov
inc
xchg
cmp
fdivl
in
push
sub
fsts
xchg
push
mov
lahf
push
pop
jmp
hlt
inc
xchg
fcmovnb
mov
jecxz
clc
jae
jle
or
in
sahf
cwtl
outsl
push
orb
pop
inc
or
rorb
dec
das
push
ja
dec
adc
psrad
push
icebp
aad
inc
cltd
mov
nop
xchg
mov
repnz
in
xchg
out
jle
pop
lds
movsl
xlat
into
repnz
pusha
and
lds
xchg
sub
push
in
jo
lahf
adc
fdivl
pop
adc
int
clc
nop
cmpsb
and
push
mov
jno
lret
add
mov
sub
pop
and
mov
inc
faddl
jne
mov
xor
jmp
rcl
ds
ds
fnstcw
sbb
imull
push
js
adc
sub
js
aaa
je,pt
in
push
popf
jecxz
mov
push
and
xchg
lods
fisttpll
imul
pop
mov
ljmp
fwait
push
mov
daa
sub
notb
jo
int
fimull
dec
movsb
sbb
out
mov
cltd
push
mulb
cmpsb
inc
movsl
or
inc
lods
inc
and
cmp
dec
push
push
push
xor
cli
iretw
loop
sahf
jge
out
repz
xchg
dec
mov
iret
loope
inc
xor
push
mov
sbb
jno
jge
pop
fsubrs
dec
push
data16
daa
in
and
fdivs
mov
or
cltd
insl
push
xchg
or
xor
cwtl
cmc
mov
movsb
and
inc
insb
stos
pop
fs
jecxz
and
ret
ja
gs
shrl
mov
pop
inc
out
push
daa
daa
cmp
fisttpll
push
add
in
test
imul
lret
pop
into
es
inc
aaa
adc
jbe
and
jb
jae
ss
pop
sub
fdivs
mov
cmpsl
dec
xchg
ss
stc
add
add
adc
rcrl
mov
fs
shrl
mov
pop
pop
mov
out
decb
call
and
mov
int
push
sbb
insb
adcb
push
pop
ds
rolb
xchg
subb
jl
cli
mov
shrl
adc
data16
mov
jno
adc
dec
repz
jp
push
sbb
fdivr
sub
inc
fdivs
mov
data16
int
popa
sbb
push
sbb
ja,pn
rcl
shld
cmovle
inc
fldln2
pop
cmp
leave
push
cltd
insl
xchg
pop
cmpsb
adc
fisttpl
jb
add
addl
jb
inc
gs
mov
and
enter
lods
mov
sub
xor
mov
sahf
sub
add
jb
cld
mov
push
scas
sub
push
mov
imul
pop
mov
jae
or
jg
sbb
sub
cs
fcmovne
fistl
add
mov
push
add
inc
mov
jns
stos
jns
testb
cmpsl
dec
movlps
mov
in
lret
or
mov
mov
lcall
mov
das
mov
inc
ret
add
mov
xor
ss
xor
sbb
and
shll
sahf
leave
call
sbb
pop
xor
xor
iret
fsubrs
xor
insb
jl
sub
lret
sbb
sbb
rclb
dec
insb
es
sub
adc
cmovne
loopne
sbb
stos
push
sti
mov
jae
popa
push
fistps
pop
lret
and
mov
mov
lods
add
daa
mov
adc
decb
jbe
cmp
inc
xchg
jecxz
inc
push
not
repnz
dec
xchg
xor
dec
pop
mov
push
jge
dec
jg
xlat
inc
out
adc
sysret
jl
sti
mov
jne
cmc
or
mov
add
out
fidivl
stos
mov
push
add
test
and
pop
loop
lret
jl
or
and
or
or
add
jne
xchg
pop
xor
out
cmp
pop
enter
das
and
sub
push
pop
lock
inc
push
outsb
rorl
mov
cmp
imul
mov
rclb
sar
jle
icebp
fs
or
xchg
adc
mov
jb
test
ljmp
out
insb
out
es
jecxz
and
andl
mov
mov
add
in
adc
adc
insb
stos
xchg
push
lock
dec
pop
enter
xchg
repnz
dec
lds
mov
push
das
push
lret
pop
inc
pop
je
test
int
mov
in
pushfw
sbb
inc
and
mov
pop
mov
outsb
inc
and
xor
pop
mov
push
fists
aad
bound
xchg
sub
push
fisttpl
mov
mov
aad
and
mov
inc
push
push
inc
mov
mov
mov
mov
adc
rorb
push
add
jmp
ror
rcr
rcr
rolb
enter
movb
jl
js
add
mov
mov
push
mov
in
ret
fmull
ret
subb
pop
or
rorl
mov
push
movswl
pop
rcrl
int3
movsl
mov
sub
les
sarl
push
ret
lret
cmp
out
jns
adc
push
add
stc
push
push
cld
jle
stos
mov
xorb
xor
imul
and
cwtl
jb
testb
sub
rcrl
jg
gs
subl
ja
push
dec
aad
cmpsl
ljmp
test
sub
xchg
pop
mov
cld
mov
rcrl
push
cltd
daa
inc
mov
jl
jmp
add
mov
add
inc
in
mov
push
in
popf
pop
fwait
addr16
jmp
adc
clc
stos
bound
fmull
and
loop
popf
mov
fbstp
cwtl
sti
adc
or
mov
enter
mov
pop
aad
loop
out
mov
push
jnp
pop
fdiv
xor
push
aad
cmp
sbb
add
movsb
pushf
outsl
leave
movsb
sbb
inc
lret
dec
xor
mov
repnz
shll
fstl
xchg
cmp
outsl
jne
insb
mov
lds
addr16
int3
inc
xchg
pop
push
adc
scas
lahf
std
mov
loop
std
mov
mov
mov
clc
bound
dec
fadds
in
ss
lea
mov
mov
les
jecxz
hlt
cs
shrb
cwtl
or
shlb
inc
dec
popf
push
xchg
les
push
fidivl
shll
dec
clc
cmp
mov
je
mov
xadd
mov
push
adc
add
repnz
iret
lods
testl
xchg
and
loope
jno
jl
push
lret
xchg
or
inc
and
out
imul
mov
sub
push
mov
les
mov
movsb
loopne
leave
mov
jne
xchg
pop
arpl
jbe
push
mov
mov
xor
sbb
std
xlat
out
add
stos
out
pop
les
xchg
push
jle
es
repnz
fistpl
sub
or
or
mov
mov
mov
mov
test
nop
lcall
push
pop
mov
sbb
fadds
push
or
mov
leave
push
sti
fcoms
sub
dec
leave
push
push
sbb
imulb
push
mov
inc
cs
add
add
movsb
into
xchg
fs
xorl
jp
pop
pop
push
int3
xchg
cltd
imul
daa
sub
pop
xor
inc
sbb
dec
aaa
fcomps
dec
mov
out
ja
mov
jge
std
mov
lret
sbb
push
lds
adc
adc
jecxz
xor
push
gs
push
data16
das
fucomip
pop
ret
popf
aaa
or
push
frstor
push
call
js
push
repnz
fcompl
inc
cltd
in
lock
out
mov
std
movsl
dec
int3
mov
and
aas
shll
fcompl
pop
daa
dec
popa
fcmovnbe
test
xor
jo
pop
fstps
into
add
sbb
fcom
cwtl
xchg
aam
outsl
dec
enter
add
dec
repz
jecxz
mov
xchg
cmpsb
sahf
xchg
out
jo
loope
sub
mov
push
scas
mov
mov
push
pusha
idivl
pop
mov
test
or
xor
mov
sub
sub
or
xlat
popf
sub
xchg
adc
sbb
push
lahf
aas
popl
int
push
push
dec
xchg
mov
jl
idivl
add
fcomps
ss
lods
mov
mov
loope
imul
decb
pop
sbb
sub
stos
jge
pop
jno
in
stc
jp
clc
jnp
leave
ljmp
xchg
pop
movsb
sub
fbld
fs
test
fisttps
and
lcall
lock
sbb
daa
sub
push
and
lret
cmp
rol
ja
sbb
and
mov
insb
stos
cmpl
sbb
lahf
add
jmp
push
push
call
sub
daa
xchg
sbb
sbb
popa
pop
loop
pop
mov
xchg
push
jmp
into
leave
ds
xor
xchg
xor
push
test
inc
js
push
js
mov
in
xor
shlb
mov
pusha
xchg
sub
addr16
lds
icebp
sbb
sarl
jg
imul
out
pop
pusha
mov
push
repnz
int
and
das
bound
xchg
notl
sub
icebp
dec
adc
mov
loop
xor
xchg
addr16
in
lret
and
imul
pop
mov
jbe
lcall
sub
xor
dec
mov
or
or
cmpsb
in
faddp
xchg
pusha
vmovntps
insl
rcr
sub
mov
jbe
cld
mov
mov
int3
dec
scas
mov
lahf
or
push
bound
mov
xlat
add
mov
jo
mov
cld
pusha
lret
adc
xchg
mov
mov
jbe
mov
xchg
outsl
cmpsl
fdivr
jo
pop
or
jae
jb
outsl
mov
outsb
and
mov
jbe
ror
cmp
cmp
sbb
inc
leave
in
sub
xlat
mov
insb
pop
mov
sbb
jmp
cli
mov
ja
jno
cmc
xor
push
in
ret
enter
test
sub
cmp
fucomp
dec
fadd
add
out
pushf
in
adc
cli
mov
or
xchg
mov
in
xchg
mov
jno
sub
push
mov
push
out
cmp
jae
nop
insb
jl
push
stos
cmpl
fwait
cs
arpl
adc
std
loop
outsl
mov
cltd
mov
leave
aaa
push
dec
mov
daa
push
jmp
fs
mov
pushf
jne
inc
inc
push
cwtl
pusha
push
rcrl
pop
sbb
jbe
mov
jno
and
int3
jmp
jecxz
jmp
stos
and
loope
cs
je
test
repnz
ja
lahf
pop
sti
cmp
lret
mov
movsb
sub
aam
add
js
mov
push
mov
in
popa
mov
jb
outsl
xchg
fs
inc
enter
and
adc
bound
enter
push
push
mov
jg
mov
xchg
mov
es
pop
push
ljmp
popf
stc
cmp
jl
adc
dec
arpl
fs
cmp
dec
add
stos
out
mov
ret
mov
push
dec
mov
and
lock
rdpmc
cmp
mov
inc
lcall
sub
inc
pop
call
dec
ret
jge
jno
arpl
push
leave
and
jnp
xchg
xchg
push
dec
filds
gs
sbb
fbld
cltd
and
fsubrl
int3
loop
mov
dec
test
and
and
lret
jge
mov
mov
push
test
imul
mov
sub
mov
pop
xchg
mov
pop
sbb
lock
mov
orl
scas
jp
or
mov
cmp
push
jno
roll
bound
mov
mov
into
push
aaa
repnz
dec
das
sbb
cmp
jp
dec
xor
inc
dec
add
frstor
or
pop
sub
icebp
fistpl
gs
lock
jle
mov
jle
jbe
mov
mov
fisubrs
push
cmp
repnz
test
dec
xchg
cltd
and
pop
loopne
push
hlt
mov
mov
push
or
jo
test
gs
xchg
fs
loop
sbb
mov
mov
ret
jge
std
pushf
sub
cmpsb
lock
cli
mov
cmc
frstor
in
mov
test
pop
push
out
ret
or
dec
pop
insl
nop
das
aaa
jb
mov
jno
popa
cmp
test
push
mov
jp
mov
cmp
invd
das
lds
loopne
das
or
jbe
pop
push
rorl
xor
xchg
fldenv
inc
push
mov
dec
sub
dec
repz
addl
xchg
cmp
mov
xor
xor
ret
and
into
lds
adc
and
cmp
call
mov
and
pop
jb
jmp
bound
in
mov
fisttpll
outsb
loopne
aad
cmp
dec
xchg
xchg
push
outsb
and
and
test
push
loope
jle
push
pop
pushf
movsb
imul
int3
incl
in
sar
fisubrs
pop
pop
scas
fcomps
leave
inc
xchg
xor
sub
inc
jle
ret
mov
sub
subl
jnp
jmp
or
movsb
push
mov
mov
inc
push
shll
xor
call
mov
addl
sti
inc
ret
jmp
ds
sarb
rol
imul
js
push
js
aam
mov
jb
fisubrs
sbb
push
mov
leave
pop
in
adc
sbb
cmp
lds
sub
jl
std
cmp
loope
shll
pop
lret
fadds
test
xor
cwtl
pushf
stos
pop
adc
je
xchg
push
icebp
std
clc
push
movsl
int
xor
mov
js
inc
lret
std
sbb
ss
push
daa
and
gs
inc
push
mov
dec
jge
push
iret
jg
inc
push
and
les
repz
adc
outsb
and
lret
cltd
mov
imul
push
sub
adc
insl
mov
push
popf
pop
dec
pop
cs
push
stos
mulb
int
adc
pop
lods
pop
aaa
or
gs
sub
dec
mov
test
jl
add
repnz
lods
out
pop
xor
pop
outsb
mov
fisubrl
pop
dec
scas
call
mov
movsl
fwait
pop
xor
cmp
push
pop
popl
mov
push
lcall
mov
adc
add
out
adc
xchg
push
lock
xorl
inc
mov
xchg
clc
cmp
or
and
in
mov
cmp
pop
xchg
add
scas
dec
push
xchg
cmp
cmp
ja
sub
inc
pop
les
adcl
mov
inc
mov
adc
cmp
stc
xchg
ss
jle
pusha
cmp
cmp
cld
idivl
adc
push
test
arpl
call
jnp
sub
dec
int
pop
insb
sar
inc
mov
mov
scas
cmp
pop
pop
push
jp
mov
sub
stos
cli
cs
pop
cltd
jne
pushf
jg
sti
and
inc
andl
add
lods
das
sarl
push
and
dec
jge
fldt
int3
push
inc
hlt
mov
out
pop
inc
sub
cwtl
xchg
rorl
sarl
xor
negb
stos
cli
jmp
lock
mov
je
push
jle
xor
adc
call
stos
sub
sbb
lds
jle
xchg
fmuls
mov
in
push
out
add
in
mov
push
mov
mov
je
ss
in
mov
inc
and
and
lcall
sub
bound
add
jb
cmp
clc
mov
fiaddl
or
rcrl
lret
jae
ds
pop
xor
test
jmp
loope
iret
jg
loope
jne
inc
inc
inc
mov
in
lea
jg
inc
mov
mov
out
addl
mov
sbb
adc
popa
rcll
jle
mov
mov
dec
or
xchg
push
cli
xor
inc
mov
dec
hlt
xchg
loop
addb
aaa
mulb
aas
adc
xchg
mov
nop
test
jle
cmp
pop
lahf
mov
into
mov
fwait
daa
pushf
and
cmpsl
stos
popf
mov
aaa
mov
ss
push
out
jno
add
nop
stos
lods
mov
into
aam
movsb
repnz
xchg
cmp
test
sub
pop
mov
insl
mov
push
or
push
sbb
neg
lret
nop
clc
xor
clc
mov
les
adc
jg
xor
pop
dec
xor
sub
cmp
push
outsl
jae
xor
push
movsl
jnp
fidivrl
sub
mov
dec
ret
adc
jg
sub
ljmp
lds
xchg
lea
cmpsb
aas
jle
dec
mov
outsb
or
mov
add
jns
pop
test
sbbl
decl
mov
mov
mov
sbb
pop
int
sti
leave
out
fwait
xor
jg
movsl
and
scas
push
cmp
pop
cs
xchg
arpl
rolb
adc
divb
inc
imul
add
es
add
imul
mov
clc
int
push
pop
popf
fnstenv
mov
mov
jmp
mov
mov
test
das
push
mov
xor
xor
popf
cmpsl
mov
sub
jns
loopne
ficoml
push
xor
stos
in
test
repnz
mov
mov
mov
das
or
sbb
sub
call
or
call
imul
ret
movsb
enter
mov
jmp
iret
iret
rol
rol
int
fldenv
xchg
jbe
js
push
js
in
stos
cld
jl
fistps
test
xchg
aad
insb
xchg
add
mov
sbb
sahf
gs
adc
cmp
sbb
xchg
mov
cmp
push
int3
mov
adc
dec
xor
pushf
add
xchg
adc
dec
fisttpll
adc
and
mov
push
movsl
nop
dec
fadds
int3
cmc
fs
addr16
lret
sti
negb
inc
mov
std
cs
or
sub
push
lock
dec
not
dec
mov
pop
cmp
push
pop
mov
sbb
ret
add
dec
scas
movsl
xor
push
icebp
sbb
sbb
repz
lods
sarb
push
cmp
popf
pop
add
push
cltd
sbb
mov
xchg
jb
mov
out
xchg
rcll
xchg
mov
call
mov
xchg
add
jmp
repnz
outsl
nop
lods
je
fdivrs
ficoms
cmpsl
lds
dec
jnp
fwait
mov
rolb
rclb
jbe
mov
pushf
mov
inc
or
mov
enter
sbb
pop
cs
in
dec
pushl
push
add
clc
mov
sbb
xchg
inc
xchg
rcrl
xor
push
les
in
xchg
outsb
inc
xor
movsl
sbb
mov
xchg
or
or
jge
int3
sahf
push
insl
mov
xchg
repz
sti
lret
jmp
insb
add
addr16
add
cmp
daa
fwait
xor
jne
outsb
fadds
out
insb
movsb
jmp
adc
push
push
inc
push
sbb
bts
cmp
mov
dec
add
pop
mov
add
jbe
rsm
cmp
sub
cmp
sub
pop
jb
fldcw
adc
aam
out
out
push
cmpb
sub
jo
repnz
les
mov
mov
sahf
test
cli
cmp
push
nop
les
mov
leave
sub
xor
outsb
sahf
leave
repz
cwtl
ds
mov
cmp
out
in
cwtl
stos
pusha
sub
xor
or
adc
jb
push
dec
stc
into
add
cmp
es
ret
test
adc
lods
add
inc
stos
addr16
sarl
adcb
int
mov
add
sbb
cltd
and
repnz
shll
daa
mov
roll
jmp
add
fsts
fists
scas
leave
lcall
sbb
lahf
dec
and
lcall
dec
xor
cmpsb
push
adc
mov
ret
out
daa
rclb
jb
xor
cmpsb
ljmp
pop
push
and
sbb
iret
aam
pop
push
aas
jecxz
mov
std
mov
mov
sbb
sbbb
ja
mov
movsb
ss
movsb
repnz
sub
jbe
or
repnz
dec
sbb
shl
sbb
push
pop
hlt
call
or
dec
xchg
loopne
pop
lea
ja
add
ds
adc
in
xchg
mov
sti
fisubl
inc
fmuls
ljmp
dec
and
add
or
sub
bound
xchg
mov
mov
lea
je
sbb
lock
add
call
dec
push
stos
lret
push
xchg
inc
lea
pusha
push
mov
inc
jge
ljmp
outsb
jg
fwait
push
inc
cltd
xchg
or
fs
adc
sub
xchg
inc
xchg
adcl
push
push
or
sbb
hlt
jl
fisubrs
mov
xchg
js
js
push
xor
mov
xchg
adcl
scas
xchg
in
xchg
inc
sahf
insb
inc
out
jne
addl
sub
aas
std
pop
jle
das
ljmp
pop
lea
pop
xchg
push
xchg
js
ret
add
repz
mov
xor
mov
icebp
fidivl
or
movsl
jp
dec
imul
push
cmp
rcpps
imul
cmp
imul
adcb
mov
mov
xchg
loop
int3
inc
repnz
loop
push
icebp
pop
scas
stos
add
jge
push
lret
rcrl
lds
push
mov
push
push
xlat
and
pop
aas
cmp
dec
mov
fildl
scas
push
mov
mov
adc
cli
jae
mov
push
sub
popa
mov
insb
xor
add
push
mov
add
push
mov
mov
jmp
enter
aad
enter
xchg
and
xor
fwait
pusha
push
js
push
js
or
cs
mov
loopne
aas
test
dec
gs
popf
ja
fwait
dec
jne
daa
jg
cmp
add
out
outsb
lcall
out
cmp
sbb
aam
push
mov
lods
cmpsl
push
je
addr16
sub
ds
enter
and
ds
and
mov
pop
mov
popf
adc
ljmp
lods
in
jg
xlat
sbb
mov
data16
cmp
dec
dec
and
xor
pop
cmp
out
scas
bnd
jge
jae
xchg
js
daa
sar
ljmp
aas
mov
mov
scas
aad
stos
int
mov
addr16
xor
out
movsl
xor
test
mov
sub
test
fwait
je
mov
aas
adc
je
pop
and
mov
lock
repz
cli
pop
sbb
inc
pop
sbb
mov
daa
insb
pop
cli
xchg
mov
sarl
jge
or
cmp
jo
inc
std
fdiv
stos
cltd
cltd
out
add
rclb
icebp
xor
testl
xor
ljmp
fdivl
cmp
sbb
inc
sbb
out
adc
cwtl
mov
es
push
xchg
pop
jl
inc
adc
bound
pop
mov
cmp
lret
cmpsb
iret
andb
pop
icebp
mov
mov
shrb
pop
adc
cwtl
addr16
xchg
dec
loope
xlat
add
pop
jg
dec
sbb
out
addr16
out
bound
and
arpl
mov
dec
mov
lret
sub
and
add
addr16
jecxz
and
adc
stos
inc
icebp
dec
data16
pop
loopne
cmpsb
scas
cvtpi2ps
ss
mov
add
cmp
push
lret
mov
mov
mov
and
lock
nop
xor
imul
mov
aad
xor
test
int3
xlat
pop
xor
jns
mov
xacquire
xor
std
dec
xchg
pusha
mov
xor
and
push
inc
cmp
pop
adc
pop
jg
int
push
jbe
mov
sub
and
pop
insb
fistps
push
sarl
add
fwait
gs
lock
inc
mov
push
fcmovnbe
out
rcl
std
dec
and
out
sbb
mov
mov
stos
adc
outsl
sahf
jl
xor
push
ret
mov
lret
fs
div
sahf
shll
xor
mov
xchg
ljmp
jae
and
ja
or
test
in
push
das
f2xm1
hlt
pop
lods
jp
ret
push
mov
mov
popa
mov
add
das
mov
jg
jno
daa
jne
xchg
pusha
shll
mov
or
rcr
mov
call
fmuls
pop
xchg
lret
fists
cmp
jae
pusha
mov
jb
xlat
out
aas
push
fiaddl
bound
dec
mov
adc
dec
push
lahf
dec
adc
jnp
ret
mov
xchg
xchg
popf
notb
rcrb
cmpsb
push
ret
xchg
movsb
stos
or
pop
insl
inc
fdiv
sub
mov
push
or
mov
insl
pusha
add
js
daa
and
iret
cs
fs
jnp
das
stos
dec
mov
mov
push
fcomi
cld
mov
mov
lock
inc
fsub
data16
cmp
outsb
sub
dec
mov
adc
cmp
push
lcall
jmp
inc
lods
lods
fisubrl
cmp
xchg
outsb
stos
pop
and
or
nop
or
dec
jnp
inc
enter
ret
push
jle
cmp
jns
pop
mov
inc
icebp
stc
and
add
cmpsl
retw
push
jno
mov
cmp
mov
ljmp
in
fisttpl
jl
push
mov
ja
loop
xchg
mov
dec
adc
pop
cmpsl
insl
mov
test
xor
sbb
pop
sti
jmp
mov
aam
adc
sbb
fbld
cmp
or
addr16
rclb
les
cmp
or
push
lea
ss
and
adc
push
xchg
arpl
inc
lods
out
lock
or
sub
xlat
mov
xor
ljmp
add
ds
enter
rol
pop
xor
push
pop
js
push
js
enter
out
push
lahf
lret
inc
xchg
addr16
sbb
push
pop
xor
push
dec
xchg
mov
dec
mov
xchg
rcr
shlb
mov
mov
lea
ss
sbb
sbb
fldcw
xlat
pop
in
cmp
cmp
mov
push
push
clc
xchg
xchg
fsts
mov
nop
faddl
mov
iret
pop
popf
jno
ret
and
leave
daa
stos
test
adc
push
mov
mov
add
lea
iret
popa
mov
xor
cmpsb
cld
icebp
mov
fcoml
dec
push
enter
test
lret
and
std
lods
imul
imul
mov
sub
or
lods
pop
inc
push
pop
pop
xor
and
fwait
js
fwait
push
les
dec
xlat
push
sbb
xchg
movsl
das
pop
cmp
xchg
push
add
repz
lods
hlt
dec
mov
jo
in
scas
jno
fldcw
push
jp
stos
out
enter
fcoms
test
out
aas
push
push
mov
je
shll
xchg
cmc
xchg
insl
cmp
add
stos
sbb
das
push
jmp
adc
sub
cmp
lods
ja
or
push
cmp
or
jle
adc
push
jns
mov
jge
add
scas
or
sub
ret
fnstsw
shl
xchg
mov
lahf
push
inc
mov
sub
push
loopne
je
sub
es
dec
outsb
and
xchg
mov
add
and
jb
inc
cwtl
sbb
shlb
dec
jae
xchg
dec
dec
sbb
cmc
adc
cmpsl
test
shlb
push
insl
jge
sbbb
mov
push
jnp
push
pop
iret
pop
or
or
lods
iret
push
in
jne
push
pop
mov
jmp
add
mov
shll
orl
push
mov
icebp
out
jl
mov
xor
fdivs
enter
xchg
addr16
inc
or
push
loope
cmp
xchg
dec
mov
pop
ds
ficomps
mov
cmpl
leave
inc
fldl
dec
loop
data16
jg
sub
and
dec
adc
pop
xchg
bound
dec
sub
in
push
xor
dec
daa
xchg
pop
cmp
test
call
mov
iret
jmp
inc
popf
dec
test
cwtl
xor
pop
adc
xlat
mov
out
pop
ljmp
popa
adc
dec
pop
stc
jns
stos
divb
loope
fcompl
sti
lods
fsubs
rcl
cld
mov
int3
or
dec
cmpb
jae
cmp
cwtl
shrb
daa
pop
bound
add
addl
mov
push
mov
fdivrl
ds
in
cmp
and
inc
hlt
lcall
sti
sbb
push
iret
push
stos
out
xor
mov
mov
inc
cmp
push
push
inc
adc
mov
pop
sbb
fndisi(8087
movsl
adc
xor
dec
fsubr
lcall
icebp
jl
aas
pop
cmc
test
icebp
jl
mov
mov
gs
mov
stos
lret
fdivr
push
ss
in
adc
pushf
outsl
out
mov
sbb
mov
or
insl
or
dec
jmp
es
xor
jl
add
or
add
testb
ret
or
shll
cmpsb
nop
iret
in
lcall
arpl
adc
clc
push
sbb
dec
aam
inc
das
mov
and
pop
sub
mull
cmp
cltd
push
xchg
adc
mov
leave
out
push
sub
insb
lret
push
adc
xchg
inc
icebp
movhps
sbbb
xchg
loop
xchg
mov
lret
daa
mov
jmp
in
push
fidivrs
dec
dec
aas
addr16
imul
jmp
push
outsl
test
aam
daa
sub
rcll
iret
rcrl
int
mov
lret
ret
jae
testb
and
xor
cwtl
jns
sub
jge
mov
int
fldz
scas
sbb
lock
push
psrld
rcrl
sbb
aaa
or
push
cmp
push
pop
nop
test
xchg
mov
dec
inc
push
push
push
sahf
push
cmpsl
std
pushfw
ljmp
out
push
mov
fisubrl
xchg
adc
jg
jo
mov
lods
loope
mov
cmp
mov
addl
lcall
sbbl
dec
fsubr
push
add
into
rcl
aam
xchg
fwait
cli
inc
mov
jl
js
stos
loop
jecxz
dec
jg
setle
mov
mov
push
ja
insl
xchg
pop
fwait
or
test
or
or
into
mov
outsl
and
xorl
dec
pop
ror
cmp
cmpl
in
adc
and
jb
scas
push
and
mov
jns
jecxz
aas
aad
sub
loopne
xlat
icebp
xchg
sti
les
xor
or
jl
loopne
mov
push
xor
shl
scas
nop
daa
sub
fstpl
and
mov
jne
xor
xor
push
into
stos
in
cmp
xchg
lock
or
sahf
enter
fists
jno
repnz
or
push
xcrypt-cbc
mov
movsl
mov
icebp
pop
mov
daa
xlat
inc
stos
imul
in
frstpm(287
cs
rcrb
aam
aaa
xchg
adc
and
lods
repz
test
ret
stc
stos
insb
jle
fisubrl
adc
inc
push
out
push
and
sbb
fcomi
mov
jno
and
daa
dec
not
dec
pushf
jnp
out
movsl
std
fdivrs
mov
mov
data16
aad
cmp
xchg
not
jmp
loopne
mov
xchg
mov
xchg
fimull
cmc
add
xchg
xchg
hlt
mov
and
add
in
sahf
in
stos
lods
jo
test
or
pop
inc
mov
sbb
pushf
hlt
loope
or
xor
jecxz
int3
cmp
mov
pushf
popa
add
jmp
imul
insb
cmpsb
outsl
outsb
std
add
pushf
enter
xor
fucomi
cmpsb
push
sbb
daa
test
push
push
fs
in
sbb
clc
movsl
and
push
adc
cmp
sbb
dec
add
dec
fnsave
mov
jle
test
xchg
loopne
outsb
in
fnstenv
jne
out
insl
inc
clc
inc
movl
mov
ja
xchg
sbb
or
clc
in
mov
fstps
dec
jg
fiaddl
jp
inc
mov
insl
mov
push
nop
jg
incb
and
int3
dec
inc
in
jnp
mov
adc
cwtl
addr16
sbb
dec
fwait
orb
in
jbe
inc
cs
rorl
les
dec
scas
adc
xrelease
in
mov
cmp
shrl
arpl
sub
xchg
sbb
jns
out
sub
mulb
adc
push
pop
repnz
shl
xor
pop
enter
aad
mov
idiv
nop
sub
sub
imul
mov
jl
lods
jmp
aaa
jno
fnsave
sub
or
push
pusha
cwtl
aam
mov
fs
xchg
insl
jle
stc
and
xchg
adc
inc
or
mov
xchg
cmp
xor
or
adc
pop
push
mov
inc
stc
test
out
and
loop
jecxz
push
sti
add
fisubrs
push
xchg
push
imul
jno
pop
insl
lea
test
call
fsub
scas
dec
aaa
idivb
outsb
fnstcw
jns
movsb
sub
xor
adc
pop
mov
add
movl
adc
call
bound
jb
mov
dec
fdiv
test
inc
jo
sahf
fcomps
loop
mov
nop
clc
push
hlt
inc
pop
leave
test
adc
sub
pop
inc
icebp
mov
aas
lret
pop
ret
and
mov
adc
aas
jmp
cs
mov
jne
xlat
dec
mov
les
int3
int
jle
repnz
nop
adc
cmp
cmpsl
lds
addb
adc
int3
push
hlt
pop
enter
gs
jg
mov
cmpsb
jmp
movsl
movsb
xchg
fst
sbb
shll
test
inc
in
stos
jmp
adc
roll
loop
insb
sbb
adc
mov
push
lea
mov
pop
dec
sarb
fmull
cmpsb
fiaddl
rcl
inc
dec
push
dec
sub
shrl
int
add
push
shl
movsl
mov
addr16
daa
inc
rcl
insb
adc
push
jecxz
mov
sbb
decl
jecxz
loopne
and
out
out
jnp
js
repz
scas
mov
repz
sarb
ss
xorb
and
add
mov
ror
stos
incl
orl
js
push
js
repnz
pop
dec
xchg
mov
and
lcall
push
cmp
fstps
or
aad
mov
outsl
fimuls
push
loop
les
xchg
mov
adc
and
popa
jae
and
xor
mov
fs
mov
push
ror
push
adc
mov
in
sti
ucomiss
and
les
cmc
lret
rolb
jmp
jnp
stos
outsb
xor
test
dec
in
ds
mov
ja
sub
mov
cmpsl
jp
inc
sub
mov
into
mov
adc
in
xchg
je
das
gs
cmp
mov
call
adc
enter
out
sbbb
das
mov
shrb
shl
inc
add
std
enter
inc
adc
insb
jg
and
loopne
fistpl
jecxz
push
call
mov
ret
cmc
stos
lcall
inc
jecxz
inc
fs
mov
lret
aad
jp
add
call
dec
or
adc
xlat
jnp
pop
and
cltd
adc
cld
mov
les
push
sub
lahf
mov
popa
sub
lods
mov
outsl
adc
xor
lret
lcall
jb
push
out
stc
mov
lds
jb
pop
aaa
mov
int3
inc
mov
mov
sub
outsl
mov
xchg
mov
dec
xchg
pop
fsubr
inc
arpl
inc
in
ror
inc
stc
pop
ja
inc
mov
xchg
mov
jecxz
push
lods
bound
ss
xor
xor
add
icebp
sti
test
imul
out
sbb
adc
out
repz
repnz
int3
movsl
idiv
xor
mov
in
jg
int
pop
push
loope
push
mov
mov
int
pop
andb
jbe
in
mov
lahf
cmpsb
rorb
pop
imul
xchg
sti
xchg
jge
mov
or
bound
jo
sub
lret
pop
cmp
cmp
lahf
inc
ret
call
push
movsb
xchg
lahf
inc
pop
mov
aam
add
xchg
inc
repz
testl
lds
ljmp
push
jle
sbb
cmp
mov
inc
fldt
ss
push
scas
xchg
mov
sub
dec
pushf
leave
mov
pop
out
sub
mov
cmpsb
mov
mov
in
mov
outsl
sub
jns
je
js
push
mov
cmc
mov
cmp
lock
fmul
cmc
sub
movsl
pop
cmp
mov
adc
das
push
mov
pop
jmp
in
shlb
xchg
fidivrl
lock
aaa
cmp
mov
push
inc
pop
xchg
jecxz
outsl
xchg
ljmp
mov
mov
mov
mov
stos
push
scas
xchg
cmp
jl
test
xchg
mov
and
int
push
or
rcrb
pop
lahf
add
cmp
aad
xchg
mov
sub
call
xor
or
cmpsb
fldcw
sub
repnz
rorl
pop
and
out
into
fisubrs
pushf
ret
lds
sub
or
jne
div
ljmp
rcrl
loopne
xor
in
ss
fs
lds
push
push
sub
and
stos
or
js
out
xchg
shlb
sbbl
cmp
js
negl
jae
sbb
out
orb
sbb
push
cwtl
xchg
push
clc
arpl
inc
ret
and
inc
mov
movsb
mov
and
pop
cmpsb
cwtl
inc
jns
in
add
mov
mov
sbb
sbb
jmp
sub
vmwrite
fcmovnb
lret
test
or
mov
pop
sbb
adc
pop
or
pushf
fnstsw
xchg
pop
inc
inc
daa
push
shrl
xchg
popl
inc
popa
push
dec
and
into
into
loopne
jmp
pop
cld
out
adc
jle
mov
jno
and
das
in
mov
std
imul
jp
jno
jmp
jp
lods
xchg
aam
dec
and
insl
mov
loopne
or
out
loopne
das
in
cs
clc
push
adc
dec
cmp
cld
mov
sub
sub
jmp
lret
rcr
aad
shll
das
loopne
cwtl
fs
push
js
xlat
filds
adc
dec
pop
insb
sbb
arpl
xor
lcall
or
dec
jnp
movsl
inc
cmpsl
dec
repnz
pop
int
xor
xchg
pop
inc
jp
add
test
lea
imul
mov
and
sarb
dec
pop
cwtl
pop
sbb
jmp
jecxz
sbb
icebp
ss
cmc
lret
cmp
jns
sahf
cltd
loop
stc
nop
js
std
inc
sbb
pop
jp
adc
add
sbb
sbb
xchg
push
arpl
sbb
not
xor
jge
fsubrs
push
xor
sahf
sahf
push
jmp
test
sbb
pushw
and
mov
inc
cmp
ret
mov
outsl
and
xchg
and
shll
add
in
push
adc
mov
jle
push
xchg
mov
cmp
dec
scas
test
imull
clc
xchg
inc
cmp
add
pushf
cmp
data16
jmp
jbe
repnz
movsl
jle
scas
test
pop
ds
ljmp
cmp
mov
xor
dec
xlat
inc
mov
lock
mov
mov
jo,pt
push
icebp
push
std
jg
icebp
xchg
sbb
cmp
jno
sti
add
xor
push
aas
lock
mov
clc
sbb
faddl
inc
loop
mov
inc
sub
inc
add
shl
or
loopne
and
stc
adc
jb
bound
push
nop
adc
lcall
int3
clc
fnstcw
arpl
mov
push
xchg
stos
mov
sub
mov
inc
test
sub
stos
sbb
mov
cmp
xchg
xor
mov
fiadds
xchg
out
and
mov
push
mov
mov
scas
jle
int
mov
in
fsubs
xor
and
jae
cmp
cmp
pop
mov
mov
lret
mov
insl
in
push
and
mov
push
std
fistps
mov
addr16
xchg
repnz
inc
push
sbb
sub
aas
addb
xor
inc
pop
popf
divl
push
test
adcl
lods
popf
orb
push
movsb
mov
je
dec
mov
insl
int3
xor
fcoms
xor
das
daa
pushf
test
fucomi
xchg
mov
vhaddps
pop
xchg
and
adc
lods
daa
dec
fdivl
outsb
sbb
inc
pop
loop
rorl
pop
subl
xchg
cmp
xchg
into
jl
jmp
inc
lods
push
rcrb
data16
call
push
add
int3
ret
imull
repz
test
bound
rcrb
push
imul
or
int3
loop
pop
fldt
fnstsw
mov
xchg
ja
repz
jno
lcall
and
push
xchg
inc
push
ja
cwtl
ret
dec
push
sub
mov
or
mov
js
orb
aas
sub
ss
in
or
jo
pop
adc
add
lret
add
subl
loope
sub
sbbl
pop
and
ds
scas
lock
sub
fmull
jo
sbb
and
and
sbb
sbb
stos
rol
cmp
push
or
pop
jnp
add
movsl
adc
std
xchg
xchg
pop
mov
jno
or
jl
loope
jmp
enter
out
fnstenv
out
out
adc
je
pop
sbb
and
sbb
ficoms
fisubrl
add
fldenv
les
cmc
push
push
or
cmc
or
enter
dec
xchg
cmp
das
inc
dec
inc
xor
scas
mov
cli
jne
cmpsl
cwtl
jne
mov
and
je
rcl
fwait
mov
mov
in
loop
imul
or
sub
sub
negb
shlb
mov
ja
push
inc
aas
cmp
std
xchg
enter
lret
xchg
jno
adc
mov
cmpsb
je
inc
pop
sub
daa
ss
mov
push
popa
or
pusha
pop
dec
push
inc
adc
clc
and
lret
and
loope
inc
xchg
sub
mov
in
sarl
xor
sarl
pop
xchg
xchg
xchg
imul
dec
xor
pop
dec
lds
testb
movsl
test
bound
push
sub
dec
mov
cld
mov
mov
jmp
rol
ds
rol
stos
test
leave
sub
outsl
js
push
js
repnz
or
sar
cmp
jp
lcall
into
mov
out
cmpsb
cli
jbe
push
sbb
aas
int3
fmuls
pop
adc
xor
cs
xor
hlt
bound
adc
sbb
sbb
sub
insl
sub
fiaddl
xchg
pushf
and
rorl
nop
inc
in
mov
dec
les
movsb
sbb
pop
pop
jmp
and
aam
out
daa
xor
xchg
les
push
inc
jno
sahf
mov
dec
cmp
xor
out
sub
or
jb
dec
into
mov
fwait
add
aas
andl
call
fistl
shlb
test
inc
aad
ljmp
jno
sbb
cmpsb
out
mov
add
jecxz
imul
clc
xchg
insb
sbb
imul
fsubs
push
xchg
or
imul
int3
outsl
add
clc
jmp
gs
xor
out
je
insl
cwtl
pop
in
cmp
lods
mov
shll
jns
mov
cmp
jge
dec
cmpsl
and
jp
jno
mov
int
cmp
mov
imul
aam
ljmp
mov
out
movsb
ja
pop
sarl
fsubl
loopne
mov
orl
repz
and
cli
test
test
fdivrs
and
sub
pop
idivl
data16
pop
test
pop
sub
and
sub
in
xor
test
les
ljmp
test
out
outsb
sahf
push
outsb
fs
pop
pop
mov
push
sbb
test
inc
cmpsb
inc
pop
inc
inc
pop
jno
pusha
scas
cwtl
jg
dec
mov
out
sbb
mov
add
mov
nop
dec
adc
ret
popa
nop
js
test
mov
movsb
je
jbe
fistpl
jnp
arpl
cmc
ja
push
in
ja
aas
daa
inc
ret
fmul
inc
mov
sub
sbb
hlt
cli
pop
sub
mov
add
in
into
jnp
push
enter
xor
shll
cwtl
jb
repnz
xchg
frndint
xchg
dec
mov
cmpsb
adc
xchg
mov
repz
scas
mov
test
ds
jl
addb
fdivrl
jmp
das
andl
cmp
fs
mov
inc
and
sub
push
aaa
out
inc
inc
movsl
push
call
insl
scas
add
and
mov
xchg
cmpsl
push
mov
push
push
push
cmpl
and
xor
dec
push
and
jno
mov
outsl
test
rorb
jecxz
sti
add
add
xchg
out
sub
out
xor
outsb
cmpsb
ret
or
dec
scas
mov
mov
insb
mov
lds
mov
test
notb
scas
sub
and
dec
push
sti
fstpt
shl
mov
add
ret
adc
jecxz
test
cmpsb
lret
jl
jmp
test
out
idivl
test
icebp
out
cmpsb
dec
inc
filds
jle
loopne
andl
into
push
out
test
cld
mov
js
fcoml
mov
inc
bnd
pop
fistps
dec
sub
cmp
jmp
mov
sbb
sbb
add
add
sub
shl
inc
mov
pop
lods
aaa
push
xchg
mov
jno
je
dec
repz
sti
fidivrs
lds
sub
adc
or
mov
test
sbb
sbb
jbe
pop
mov
fbstp
pusha
test
sbb
test
mov
repnz
push
orl
ret
stc
movsl
cmpb
loopne
push
pusha
jecxz
loop
mov
in
push
andb
pop
inc
in
rorl
pop
push
jbe
inc
aam
add
dec
xor
or
jg
jmp
cltd
mov
xchg
aaa
fwait
mov
mov
sub
pop
divb
int
push
or
inc
and
jne
fsubrp
xchg
test
mov
pushf
sbb
test
add
test
addr16
mov
loopne
pop
and
fmull
cmp
mov
mov
jb
mov
pop
imul
outsl
xchg
stc
pop
adc
jnp
and
in
icebp
or
out
movsl
jg
push
adc
xchg
mov
jmp
lret
cmp
sahf
repz
hlt
jb
js
jl
js
test
mov
addr16
dec
sbb
pushf
loopne
jb
xchg
cmp
fldt
adc
ss
cli
sbb
negb
scas
pop
repz
bound
inc
push
fxch
ret
mov
sub
int3
xchg
shlb
mov
sbb
loop
loop
add
jnp
add
push
mov
out
mov
push
addl
lret
dec
pushf
int
jae
inc
pop
dec
sbb
fwait
and
pop
mov
ljmp
test
sbb
inc
aad
mov
dec
stos
inc
add
jae
out
mov
ljmp
mov
ja
imul
mov
ds
out
stos
mov
sbb
fistpll
stc
pop
pop
xor
and
sti
sub
cmp
push
jge,pn
cmp
pop
ja
dec
mov
mov
sbb
aaa
or
pop
sub
into
data16
mov
xor
xchg
ds
adc
cmp
lret
xchg
pop
push
lahf
mov
loopne
out
cwtl
add
sub
push
jecxz
xor
push
mov
mov
pusha
cmp
mov
add
jmp
jns
xlat
mov
sarl
cltd
push
sub
rcrl
ret
mov
dec
mov
repz
jmp
xchg
test
shlb
repnz
xchg
out
add
int
xor
ss
xchg
dec
js
pusha
jbe
jle
dec
test
out
push
lret
mov
aas
lcall
pop
cmp
push
insl
jmp
shl
jbe
dec
mov
adc
mov
insb
inc
outsb
pop
bound
incb
aaa
mov
cmc
dec
or
popf
push
sbb
out
xchg
jns
adc
adc
pop
sbb
mov
cmpsl
arpl
clc
cmp
inc
mov
ja
fildl
aad
xor
push
pop
leave
sub
jb
fmull
orb
mov
cli
lret
mov
scas
pushf
inc
mov
clc
les
xchg
add
cld
repnz
inc
add
push
aad
xchg
test
inc
lea
stos
adc
cwtl
cmp
fdivrl
push
mov
inc
dec
movsl
xor
sti
out
test
push
mov
adc
test
jo
fmull
inc
sub
jne
xchg
adc
xchg
pop
sbb
loope
inc
inc
inc
lods
adc
pop
test
or
cmp
sub
push
jnp
inc
sbb
test
lret
xor
js
loope
lods
xchg
dec
fmull
jp
fmul
and
out
mov
jo
or
push
das
add
and
jno
lock
fdivl
mov
adc
scas
sub
sahf
adc
test
sbb
out
xchg
xchg
dec
scas
fidivl
xchg
inc
aaa
repz
and
mov
pop
and
push
xchg
fdivs
xor
mov
or
add
insl
idivl
mov
sbb
test
pop
mov
jno
add
mov
in
dec
outsl
fs
lahf
out
sbb
test
les
sub
adc
cs
int
sub
shl
shlb
mov
adc
pop
mov
jl
outsl
inc
shr
jecxz
dec
dec
movsl
sbb
pushl
cld
mov
stos
push
push
cltd
in
adcl
lea
ret
inc
ja
int3
sbb
jbe
cmpb
movsb
jbe
rorl
dec
lahf
pop
xchg
jecxz
push
bswap
insb
out
push
mov
sbb
call
push
push
dec
ds
hlt
jp
jns
arpl
adc
inc
js
inc
repnz
mov
aaa
sub
add
das
popa
or
ljmp
lcall
sahf
push
mov
ret
cmc
imul
pop
jno
inc
xchg
push
or
jno
mov
sti
jle
xchg
push
xchg
pop
fdivr
enter
mov
dec
shll
ret
mov
cmpsb
xchg
mov
inc
test
push
dec
jp
nop
movsl
mov
jge
mov
sub
pushf
push
ljmp
jo
inc
decb
lods
repnz
es
pop
mov
mov
mov
adc
icebp
fiadds
imul
cld
call
js
dec
mov
dec
cmpsl
enter
in
or
sti
cwtl
out
les
cmp
cltd
push
jg
ret
jne
mov
stos
xor
sub
mov
lea
incb
inc
jmp
ret
cmp
fcmovne
out
cld
mov
dec
imul
js
sbb
mov
pop
sbb
sbb
mov
jnp
mov
bound
aam
push
test
xor
mov
mov
ret
daa
add
push
jmp
add
icebp
jne
xchg
inc
cmp
dec
cmc
lcall
ds
lret
bound
cltd
or
in
pop
lods
lock
cmc
jne
test
pop
xor
addb
sti
outsb
sahf
mov
mov
lret
ret
and
sahf
pushf
push
rol
or
mov
notl
jmp
xchg
and
push
loop
sbb
aas
in
add
sub
push
sub
jb
pop
cmp
jecxz
push
call
push
sbb
fstl
orb
push
cs
and
xchg
push
les
aad
sub
nop
push
enter
xchg
xchg
int3
aaa
and
in
addr16
movsl
addr16
sub
lcall
pop
in
popf
pop
mov
mov
inc
mov
lods
jae
pop
cmpsl
pushf
add
mov
mov
orl
scas
xchg
ret
jp
int3
mov
inc
int3
xchg
addl
jl
or
cli
mov
test
or
add
jg
adcl
mov
push
sbb
ret
jne
sti
push
push
mov
mov
add
dec
xor
in
fwait
xlat
lods
sahf
je
popf
pop
in
out
in
rorl
add
jmp
movb
mov
add
inc
dec
out
clc
lods
in
xor
xor
push
cwtl
cmp
xchg
push
clc
pop
push
popa
cmp
ret
mov
xchg
xchg
pop
daa
pop
xchg
lea
cs
mov
xor
ja
repnz
lds
cwtl
lods
xchg
les
xchg
mov
loop
imul
movsb
aas
mov
cmp
ror
out
push
in
jle
cmp
cwtl
and
push
das
mov
push
shlb
mov
jp
or
cmpl
fs
stos
out
cld
insb
test
cmp
mov
push
clc
inc
jmp
jbe
fcompl
jae
test
mov
test
lds
inc
lret
into
dec
dec
rclb
push
mov
mov
mov
loopne
inc
mov
cmpsl
aas
push
cltd
inc
xlat
fwait
and
adc
out
loopne
mov
loop
into
in
subl
idivl
push
sbb
scas
xlat
fistpll
sarl
jb
mov
insb
add
loop
jbe
sti
add
mov
nop
dec
iret
fdiv
mov
in
or
adc
sub
shl
inc
and
sbb
jp
mov
add
fwait
leave
out
outsb
repnz
sub
xor
arpl
aam
daa
mov
pop
das
sarb
stos
sti
fldenv
push
ljmp
in
daa
rcrb
mov
cwtl
test
dec
js
mov
pop
inc
jo
scas
lcall
sub
inc
hlt
jp
int
add
mov
dec
shlb
mov
arpl
jecxz
scas
pusha
gs
add
in
in
pop
add
push
out
xchg
add
sbb
mov
aam
shlb
je
subl
or
jmp
sub
mov
mov
push
mov
jg
inc
sbb
jp
push
mov
pop
mov
lret
add
test
mov
icebp
mov
or
push
jle
ss
out
push
ficomps
int
enter
inc
push
test
or
fsubs
roll
or
inc
xor
adc
push
inc
ja
popa
test
fwait
jbe
and
sub
lods
dec
mov
mov
mov
mov
rol
lret
push
imul
flds
pop
lahf
lods
mov
imull
mov
cmpsl
lock
and
lock
data16
pop
ss
popa
pushf
in
sub
je
test
pop
div
testb
in
and
xchg
in
out
xlat
loop
mov
fnstcw
in
jle
mov
xchg
sbb
dec
in
cld
lret
xchg
data16
repz
mov
rcrl
movups
lret
outsl
fs
arpl
mov
mov
or
jecxz
inc
stos
gs
je
int3
insl
jg
adc
dec
adc
je
xlat
jecxz
mov
xchg
jl
out
inc
lcall
push
pop
dec
jmp
rcl
int
xlat
aad
sahf
mov
repz
js
jl
js
in
daa
ret
sbb
mov
lahf
lahf
jne
push
sbb
jp
imul
lret
movsb
mov
shl
sub
into
ss
xchg
and
dec
hlt
and
pop
inc
cmc
repnz
cmp
jbe
xchg
loope
cltd
sti
std
fwait
outsb
mov
cs
movsb
cmpsl
or
call
cmc
movsb
push
popf
cmpsb
push
insb
xchg
iret
jle
xchg
pop
or
icebp
stos
mov
jp
imul
out
pusha
mov
imul
inc
dec
mov
scas
xchg
push
push
inc
arpl
add
sub
rorb
mov
push
aas
cmpb
mov
pop
aaa
dec
push
mov
adc
into
jp
jle
mov
mov
ss
pop
inc
pushf
mov
pop
mov
hlt
pop
mov
mov
loope
inc
xchg
pop
mov
shl
jle
lahf
orb
sub
bound
jl
inc
mov
dec
mov
rcl
ja
jo
fucomi
loop
daa
clc
cwtl
imul
pop
flds
mov
fs
jae,pn
add
mov
pop
inc
roll
or
jmp
or
or
inc
and
push
addl
sub
jecxz
or
test
xchg
xchg
sub
mov
fsubs
sti
dec
outsl
mov
mov
pop
push
push
and
notb
push
fldl
je
js
dec
movsl
outsb
sahf
push
or
loopne
xor
xor
jg
mov
les
std
dec
int
cmc
mov
mov
popa
jns
adc
add
push
cmp
leave
stos
lahf
jmp
pusha
scas
hlt
add
mov
wbinvd
insb
shrb
sahf
xor
enter
out
fs
loopne
sbb
addr16
and
scas
out
mov
xchg
fldl
sbb
andl
mov
and
adc
push
xchg
sub
jns
shll
mov
js
ret
mov
cmp
jg
and
sahf
xor
insl
fnsave
neg
inc
sarl
loop
sub
sbb
test
pop
outsl
add
push
dec
and
push
xor
imul
dec
pop
mov
mov
scas
and
inc
sub
or
sub
adc
cs
lods
sub
jl
cmc
stos
xor
cs
int3
fwait
sbb
sub
je
adc
popa
push
outsb
in
fmuls
xor
mov
xchg
fmull
lds
jns
mov
cltd
sub
sbb
sbb
pop
and
cmpsl
inc
sbb
fnstsw
fcmovnb
mov
mov
pop
aam
loop
loopne
xor
das
jge
je
scas
inc
rcl
mov
test
outsb
xchg
das
arpl
xor
adc
stc
mov
jne
rclb
add
pop
dec
jl
and
or
inc
adc
push
sarb
push
gs
sub
cmp
cmp
dec
lea
adc
push
popa
sbb
mov
orl
mov
mov
jno
out
mov
enter
mov
jge
jp
iret
stc
inc
jae
or
andl
addr16
sti
es
mov
lds
pop
sti
mov
movsl
addr16
and
jl
and
test
daa
or
fs
jl
outsl
ucomiss
mov
bsr
pop
vunpckhpd
lret
mov
xchg
cmp
lahf
mov
mov
sbb
std
push
xchg
sub
into
lea
imul
and
add
icebp
test
xchg
imul
mov
and
inc
das
lahf
daa
dec
movsb
mov
outsl
push
jns
add
jnp
scas
pop
sub
cmp
push
and
fwait
inc
das
enter
loope
mov
jge
bnd
and
leave
add
mov
fwait
scas
and
jnp
pop
cmp
cmpsl
rcl
push
sbb
push
int
adc
cmp
mov
int
xchg
lods
sub
sbb
aad
test
and
test
aaa
mov
subl
mov
xchg
jb
xor
mov
inc
les
iret
push
push
add
push
dec
bound
dec
xchg
stos
imul
mov
leave
aad
icebp
cmp
xchg
fsubr
inc
xchg
pushf
xor
shr
push
add
mov
cmc
add
inc
lcall
js
jl
js
adc
lods
or
pop
push
mov
mov
pop
cmp
push
fmull
push
leave
out
lcall
fdivl
nop
adc
lods
out
idivl
add
cmpsl
push
iret
pop
jns
sbb
sbb
jbe
movsl
lds
aaa
push
add
xchg
clc
inc
insl
int3
cli
ret
aas
lahf
lea
outsb
mov
xor
shr
in
rorb
hlt
xor
jbe
add
arpl
mov
adc
call
repnz
insl
test
mov
inc
xor
jne
and
adc
mov
repz
dec
popa
adc
insl
sahf
scas
imul
or
or
sbb
sub
in
jbe
lret
inc
loop
cmp
adc
xchg
sub
push
daa
mov
repz
xchg
fcoml
pop
jb
mov
movsl
repz
movsb
cmp
xor
insl
pushf
cli
pop
cmp
mov
sub
xchg
stc
fidivrs
pop
aaa
ror
jo
mov
call
cmp
outsl
cld
sti
stos
push
insb
jo
jp
les
or
xchg
rorb
mov
lock
pop
test
pusha
dec
push
pop
dec
xlat
push
enter
daa
lods
pop
xor
add
dec
aam
mov
daa
adc
mov
xor
sarb
loope
and
inc
inc
jns
mov
push
mov
loope
insl
divl
xchg
mov
mov
shrl
into
icebp
xor
adc
mov
jbe
push
add
adc
mov
jae
and
out
xchg
jge
lods
hlt
dec
inc
outsb
and
hlt
mov
xor
ja
xchg
mov
mov
popf
popf
cmp
add
rclb
iret
and
adc
mov
pop
ljmp
sahf
inc
push
xlat
rorl
mov
ret
pop
fwait
stos
xor
pop
pusha
data16
cld
rclb
cmp
decb
mov
add
add
xchg
les
test
jmp
pop
dec
jl
xor
in
orl
jae
jle
pop
mov
out
pop
mov
test
aad
xchg
cmp
dec
fnstcw
or
jbe
mov
mov
jecxz
mov
push
out
lret
pushf
cmpsl
lea
int3
xor
aas
sub
cmp
je
loop
out
orb
push
sbb
mov
test
int3
in
and
mov
or
out
mov
sbb
pop
ret
cs
and
mov
into
or
pop
pushf
adc
inc
in
es
imul
jle
lea
mov
je
push
pop
cmpsb
xor
out
ret
mov
cli
ss
out
enter
lock
and
adcb
out
scas
xchg
push
jnp
js
cmpsl
shlb
mov
js
stc
xchg
and
cmpsb
inc
cli
loopne
adc
imul
js
hlt
jecxz
mov
mov
pop
dec
push
jb
cltd
mov
push
loopne
add
and
notl
fistpl
rcl
hlt
je
sub
xchg
xchg
inc
data16
aad
inc
pop
paddusb
xor
cwtl
arpl
inc
jno
adc
push
mov
push
or
and
xacquire
and
cmc
mov
pop
adc
das
movl
or
add
out
mov
rclb
xchg
dec
arpl
scas
insb
cltd
out
mov
mov
je
sbb
fld
cmpsb
and
cmpsl
and
loope
inc
jno
call
repz
mov
test
dec
add
xor
jl
std
mov
inc
imul
adc
adc
pushf
fnsave
add
jl
mov
cwtl
aad
in
xchg
sub
mov
and
lods
test
adc
pusha
cmp
sub
cwtl
pop
pop
push
sbbl
xchg
mov
cmpsb
dec
test
push
jmp
jbe
adc
inc
pop
movsb
add
push
sbb
cltd
add
imul
jmp
jmp
imulb
xor
aaa
lret
pop
adc
sub
mov
sub
xchg
lods
test
movsb
jbe
pop
aas
push
push
pushf
xor
adc
hlt
lret
xor
ja
inc
or
dec
popa
jne
or
cmpl
sub
out
test
and
jmp
sarb
ret
rcl
mov
or
sub
jg
push
js
xchg
or
jg
shrl
add
pop
mov
pop
add
jg
enter
cmpsl
mov
mov
data16
xor
arpl
xchg
into
jge
dec
loope
shll
and
jecxz
leave
push
repz
aaa
rorl
jb
xor
push
ja
mov
jne
insb
in
sub
into
dec
push
xor
shl
mov
push
add
and
adcl
fildll
gs
mov
arpl
pop
jnp
mov
outsl
jnp
xor
es
ret
jno
enter
outsl
stos
cld
jg
sbb
daa
xor
jnp
jno
ja
ret
int
push
daa
js
arpl
js
imul
ret
pop
cmp
or
iret
lahf
jg
cmp
mov
sub
insl
dec
insb
shrb
jg
fidivs
ror
jmp
add
cld
xor
inc
ljmp
xchg
dec
js
jo
aaa
jnp
int
enter
in
jl
or
adc
and
ss
adc
xor
into
add
sub
stc
roll
or
aaa
insb
xor
jnp
nop
xor
push
std
pop
ja
sarl
push
pop
adc
xor
add
adc
jns
insb
ljmp
pop
pop
add
inc
mov
iret
adc
out
sbb
add
adc
inc
push
imul
mov
jg
fcompl
and
push
add
adc
inc
bound
pop
int
and
ret
out
lahf
pop
mov
add
or
sub
push
or
daa
aaa
lret
test
add
mov
call
fildl
addr16
cmp
dec
and
scas
mov
cmpsl
cltd
cld
or
adc
test
push
jmp
push
jae
int3
jno
xchg
dec
cmc
push
imul
fidivrl
adc
xchg
or
icebp
fsubl
xchg
mov
jae
clc
xor
addr16
outsb
push
dec
stos
hlt
xchg
mov
arpl
adc
sti
stos
mov
nop
stc
inc
push
mov
scas
adc
test
out
addl
outsl
cmc
push
test
fldl
cmp
add
test
inc
mov
jns
dec
popa
pop
test
jae
sbb
sub
xchg
adc
lods
push
mov
xor
pmuludq
scas
in
adc
andl
dec
xchg
in
pop
mov
aam
sahf
adc
push
cmc
data16
cmp
enter
xor
les
outsl
mov
sbb
data16
lcall
and
fidivs
repz
push
aaa
cmp
xor
sub
cld
into
out
add
popf
xchg
stos
push
insl
pop
fidivrs
movl
push
nop
aam
jecxz
xor
cmc
xor
enter
add
mov
pop
add
adc
std
push
imul
mov
and
cwtl
das
popa
testb
mov
js
jae
cmpsb
jg
je
jae
pop
push
push
pop
out
js
mov
fstpl
fcmovnu
jmp
sbb
xchg
xor
pop
testb
dec
and
xchg
or
scas
es
xchg
xor
sahf
and
loope
and
insl
scas
insl
xchg
adc
jle
inc
sbb
add
sarb
sbb
pop
rcll
cltd
push
sub
jbe
arpl
out
mov
mov
out
dec
mov
push
sub
lcall
ficoms
inc
bound
sti
adc
mov
dec
shrl
mov
cwtl
leave
mov
sub
mov
leave
je
or
xchg
jne
ss
mov
cmp
push
imul
push
popf
add
in
sub
xchg
sbb
jl
and
insl
pop
lods
imul
shll
cld
add
xor
adc
cli
sub
xchg
lods
ss
xchg
sbb
rorl
mov
pushl
je
pop
cmpsl
clc
sub
jle
ja
sbb
stos
adc
dec
mov
jle
jae
fidivrs
sbb
and
les
pop
push
outsl
and
cmc
mov
and
pusha
scas
mov
dec
mov
pushl
jmp
ror
fcmovbe
rcr
mov
popf
add
push
js
scas
and
dec
or
lods
movsb
inc
pop
shlb
dec
in
sahf
or
pop
aad
pop
jg
xchg
pop
fwait
data16
lock
test
jle
testl
fs
scas
push
jno
scas
adc
lods
fiadds
fnstsw
in
adc
dec
sbb
sarl
hlt
sbb
out
cld
xchg
test
icebp
push
cmc
jno
jg
pop
stc
out
mov
sbb
inc
xchg
lcall
imul
shll
adc
shlb
lea
push
rorl
jbe
push
sbb
pop
sbb
and
xchg
imul
xor
push
cs
cwtl
das
pop
sub
xlat
insl
cs
loop
shll
mov
sub
sbb
mov
bound
mov
cmp
repnz
stc
in
add
add
pop
jno
dec
sbb
adcl
mov
push
mov
xor
jno
sbb
lret
sub
dec
mov
xchg
fsubs
cld
mov
aad
lea
in
xchg
mov
std
xor
push
or
mov
in
std
inc
mov
cmc
adc
inc
shll
sbb
xor
adc
mov
lret
movsl
cmc
add
xchg
push
mov
out
mov
xor
mov
pop
vcvtusi2sd
shll
mov
loope
and
icebp
push
fwait
repz
aad
in
xor
fsubs
add
sbb
xchg
jns
and
jge
sbb
cltd
jg
sahf
div
mov
test
addr16
push
pop
push
and
cld
jecxz
in
sub
and
fcmovnb
xchg
outsl
out
lock
stc
lcall
lods
stc
fstps
pusha
pop
pop
xchg
xchg
test
scas
loop
sub
mov
idivb
mov
icebp
sbb
fadds
inc
scas
mov
das
fistpl
addl
pop
das
repnz
in
jno
cli
bswap
sub
sbb
pop
shll
mov
hlt
jl
jg
repz
lods
mov
inc
mov
jbe
aaa
clc
movsb
dec
dec
iret
push
xchg
jno
xchg
lcall
mov
push
mov
fadds
je
mov
sbb
mov
jp
mov
jmp
imul
push
jmp
cmc
adc
push
cs
mov
aaa
ret
imul
inc
xchg
inc
inc
sbbl
push
out
push
jbe
dec
xchg
mov
ret
out
pop
sbb
pop
es
add
stc
adc
jo
push
mov
sbb
mov
pushf
icebp
jp
or
flds
adc
nop
mov
mov
and
cmp
in
jle
push
pop
xor
add
or
fldcw
xchg
rcll
fwait
icebp
es
fwait
in
jl
xor
test
xor
dec
pop
mov
repz
sbb
jbe
mov
xor
add
leave
mov
push
popa
adc
sbb
mov
movsb
push
cwtl
addr16
scas
les
test
loop
ds
mov
std
and
adcl
xchg
sub
outsl
mov
jmp
xchg
call
jmpw
shr
xchg
jne
lds
das
pop
popf
sbb
lods
por
adc
adc
push
out
lock
jl
out
mov
push
add
stc
out
cmp
out
add
jae
pop
les
mov
jge
hlt
enter
pushf
out
mov
test
test
push
mov
repz
xor
out
mov
mov
cs
lahf
jle
test
das
add
add
icebp
cmpsl
rcl
shll
aaa
and
mov
sahf
cmp
in
out
or
add
sarb
jecxz
ljmp
sub
or
or
cltd
xchg
rcrl
leave
xchg
dec
in
not
xorl
add
inc
mov
mov
iret
jmp
mov
imul
push
popf
push
and
test
jmp
cwtl
shlb
pop
daa
sub
jnp
into
push
cmc
ret
hlt
ja
xchg
pop
sub
pop
sub
xor
add
ja
cmp
xchg
sbb
test
fildl
ret
rcr
aas
scas
pop
ds
out
out
loopne
leave
fucomp
sub
lret
outsl
jo
dec
stos
mov
mov
jmp
aas
vpmullw
xlat
jne
fs
sub
call
js
jl
js
xor
jmp
into
jmp
jg
dec
insl
out
pop
cwtl
push
je
cltd
push
pop
insb
dec
jno
adc
out
shl
aas
mov
add
cmp
outsb
dec
out
popa
pop
xchg
xchg
xchg
lods
loopne
aaa
movsb
adc
mov
lret
cmc
imul
mov
sbb
mov
mov
mulb
adc
js
insb
bswap
sahf
cmpsb
cmp
xor
ss
mov
push
jge
and
dec
js
dec
and
dec
inc
es
jb
int
lret
mov
loop
mov
pop
push
xor
insb
insl
fdivr
hlt
sbb
int3
popa
pop
xor
inc
mov
fiaddl
jb
xor
fisubl
fstps
int3
aas
xor
imul
mov
mov
mov
jbe
loope
dec
sbb
xor
sbb
adc
sbb
xor
and
daa
cmc
mov
sbb
aam
adc
sbb
sahf
faddp
push
or
notl
xor
jns
mov
sub
and
leave
adc
shlb
inc
dec
sub
cmc
add
rcrl
inc
popa
inc
xchg
loopne
pop
xlat
xchg
jne
ja
pushl
int3
icebp
mov
pop
push
divl
xchg
or
sub
btr
lods
jb
int3
and
das
ret
jmp
push
cmp
or
mov
or
jmp
iret
in
lods
inc
outsb
push
mov
ficoms
icebp
sbb
cmp
push
lods
lret
lahf
push
xchg
sbb
add
dec
jecxz
jge
aas
out
fcmovu
fisubrs
mov
or
loope
adc
mov
clc
movsb
arpl
mov
mov
xchg
movsl
add
data16
in
std
cmp
inc
pop
lea
xchg
mov
inc
or
stos
inc
mov
not
pop
flds
pop
shlb
aas
adc
outsb
add
sub
xor
sub
sub
pusha
or
sub
xchg
mov
es
mov
push
adc
lods
sub
or
sti
pushf
lea
lods
call
or
ja
and
call
xchg
call
lods
out
xor
fsubrl
jg
lret
adc
sbb
test
mov
dec
fst
movl
loopne
sub
inc
mulb
movsl
sub
mov
mov
rcr
scas
jne
fistl
or
ss
ss
mov
or
out
int
xorl
jae
xor
mov
jmp
or
xchg
sahf
repnz
mov
mov
scas
sub
mov
mov
and
xchg
and
lret
repnz
cs
xorb
jne
adc
fwait
xchg
jnp
fisubs
cwtl
cmp
popa
or
in
cmpsb
lods
adc
gs
lret
cmpsl
test
and
mov
sbb
jno
and
sub
aas
push
inc
dec
mov
imul
xor
dec
andl
jns
xchg
push
rcll
movsl
add
or
outsb
mov
rcrl
sahf
mov
add
fs
xchg
rcll
and
insl
pop
push
ja
cmp
das
dec
or
bound
adc
inc
sbbb
ja
and
fwait
stc
and
into
mov
popf
push
icebp
xchg
push
mov
into
in
test
lock
fldl
jnp
xchg
push
or
jp
clc
mov
dec
pop
sub
daa
stos
outsl
scas
jecxz
in
add
xchg
sbb
das
pop
fwait
leave
fidivs
andl
push
std
and
or
mov
test
mov
mov
cli
jl
mov
push
xlat
add
pop
dec
mov
push
xor
stc
mov
pop
pop
push
xchg
push
lea
jge
push
pop
stos
repnz
xchg
mov
imul
jb
jo
pop
xor
sti
loop
outsl
or
fdecstp
fs
dec
mov
jns
xor
fbstp
mov
fdivp
outsb
popa
lahf
pop
pop
or
les
mov
push
cmp
rolb
out
mov
inc
sub
inc
sub
mov
dec
ss
mov
fldenv
jne
add
inc
pusha
pushl
lea
pushl
jmp
cmp
rol
rcl
fcmovnb
mov
inc
shrb
sti
jle
jp
jg
push
js
add
mov
mov
or
dec
sub
movsb
std
or
ljmp
sbb
sbb
mov
pop
mov
mov
lock
or
xchg
imul
sbb
dec
or
mov
lds
cmp
inc
push
mov
dec
loop
pop
push
mov
loope
mov
push
inc
mov
and
adc
adc
loop
in
dec
xor
mov
fst
cmp
mov
outsl
jno
fbstp
pop
jg
xor
sub
out
cmp
cmp
pop
or
mov
cmc
pop
or
movb
xlat
test
cmp
and
fcoms
xchg
inc
ret
lret
push
mov
cmp
pop
mov
pop
les
xor
xchg
dec
shrl
test
cmp
fwait
dec
sar
or
mov
mov
cltd
mov
mov
fbld
repnz
mov
adc
jae
inc
cmp
or
out
cmp
fwait
int3
adc
hlt
jo
mov
adc
and
jg
mov
mov
rolb
sub
push
mov
aaa
scas
adc
out
add
sbb
pop
es
les
in
adc
mov
sub
int
xchg
movb
sub
enter
push
aas
xchg
pushf
sub
pmaxub
cs
mov
fistpll
cmp
push
outsl
sbb
sbb
pop
es
inc
repz
arpl
pop
inc
or
xchg
cmp
xchg
loopne
repnz
sub
out
xchg
push
xor
dec
cmpsl
pop
inc
sarb
lret
mov
cld
dec
or
stc
pop
mov
or
sbb
sbb
scas
add
cltd
mov
add
jg
add
rorb
inc
imul
cmp
adc
movsl
call
pop
pop
int
mov
add
ja
mov
mov
xor
shlb
cmpsb
out
adc
mov
aaa
lret
sbb
xchg
or
mov
sub
nop
pop
or
xchg
xchg
in
cmp
scas
pop
cmp
or
xchg
dec
jmp
mov
iret
dec
ss
ffreep
iret
iret
push
flds
clc
flds
cmpsl
jmp
enter
mov
pop
insl
inc
xchg
mov
gs
int3
das
cs
lret
sti
and
dec
ret
aaa
jae
push
pop
push
or
mov
pop
or
popf
lods
sarb
pusha
aaa
push
mov
pop
pop
dec
sub
adc
push
dec
sahf
orb
dec
cld
insl
shll
adc
hlt
mov
inc
pop
or
sub
sti
cs
imul
call
push
es
cmp
cmp
pop
call
add
sti
fimuls
cmp
lods
xchg
sbb
jp
sarb
or
inc
sbb
fldcw
and
clc
pop
mov
mov
and
pop
ficomps
xor
js
jae
dec
rorb
xchg
sti
and
jmp
push
aad
ds
lcall
daa
nop
adc
jle
or
test
fs
shrb
idiv
shrb
adc
lds
cmp
mov
fists
test
nop
in
mov
push
adc
jne
xchg
out
cltd
mov
pop
pop
fwait
loope
add
push
push
sahf
cld
je
push
adc
mov
dec
imul
inc
xor
in
repnz
lods
test
mov
mov
cli
stc
xlat
lcall
pushf
int3
cmp
test
jg
add
push
jmp
add
lods
dec
addr16
inc
ret
test
aad
roll
or
dec
mov
cld
mov
ja
xchg
adc
mov
adc
push
jecxz
aas
dec
mov
sbb
in
xchg
push
jmp
sti
test
popf
int
sarb
aas
aaa
lcall
mov
pop
cmp
xor
subl
movsl
fdiv
pop
add
negl
cmp
pop
pop
into
jge
dec
or
pop
movsl
jecxz
scas
jns
lahf
pop
arpl
mov
sbb
cli
push
setl
subb
inc
pusha
jmp
dec
jge
enter
dec
inc
xor
test
jle
das
mov
cmp
adc
lea
jmp
aas
aas
or
out
sti
xor
js
jl
js
ss
push
jbe
hlt
jne
push
jmp
pusha
sub
rcl
imull
fidivrl
mov
mov
fdiv
ds
insl
lcall
pop
mov
mov
jbe
fldenv
test
fcmovbe
movl
and
xchg
push
xchg
and
cmp
adc
and
inc
xor
cmpl
pusha
mov
sbb
inc
fisubrl
jo
mov
or
out
fstpt
int
pop
loope
ds
push
xor
cmpsl
dec
pop
mov
movsl
popf
mov
lock
iret
in
sub
jecxz
test
xchg
mov
sub
sarb
sub
push
mov
or
pusha
addr16
mov
lahf
xor
mov
call
dec
mov
mov
or
push
fnstsw
mov
lea
clc
loopne
fdivrl
movsl
push
xchg
jnp
jl
fs
daa
mov
int
lock
aam
xor
clc
mov
shlb
lret
cmc
ret
es
scas
adc
cmp
pop
lret
mov
pusha
cs
sbb
inc
out
into
push
mov
movsb
push
inc
fistps
cmp
sbb
daa
xchg
repnz
rorl
lods
fiaddl
bound
pop
mov
xchg
stos
add
xchg
pushf
fwait
incl
loopne
pusha
jge
or
xchg
stos
mov
mov
notl
cmp
andl
cmp
adc
mov
mov
imul
push
imul
adc
xchg
cmp
dec
sub
mov
push
lcall
fsts
pop
hlt
xor
test
movsb
fcmovb
fdivr
push
movsb
ss
mov
insl
push
sbb
or
shr
lahf
xchg
and
pop
pop
nop
jecxz
push
lahf
cmp
enter
mov
js
pop
popf
pop
lods
mov
adc
jl
xchg
sub
das
xor
xchg
inc
jg
cs
push
mov
ret
mov
xchg
mov
pop
divb
fwait
adc
in
sub
push
or
adc
arpl
push
mov
push
jae
pop
cmc
mov
push
push
xor
jnp
mov
add
sbb
push
mov
cmpsb
inc
dec
xchg
inc
ljmp
loop
mov
cld
mov
rcrl
lds
and
ret
sub
fs
xchg
mov
stos
sahf
add
mov
inc
xlat
testl
mov
movsb
jp
inc
in
push
mov
leave
test
jp
lds
xchg
movsb
adc
rcr
mov
mov
cmp
jne
mov
in
cmpsl
push
dec
nop
add
xchg
lods
mov
add
jl
ss
xchg
nop
dec
dec
cltd
out
mov
orl
cltd
fwait
testl
mov
popf
or
stos
fcmove
jmp
lahf
jecxz
add
dec
cmp
push
mov
test
pop
mov
mov
out
setbe
sub
int
ret
dec
xchg
cwtl
mov
rcr
imul
aam
cmpsl
out
mov
xor
loope
sar
scas
in
mov
or
inc
dec
imul
lret
lret
imul
or
pushf
cli
pop
push
pop
mov
ret
outsb
xor
jne
mov
sbb
xor
aad
add
push
jl
repz
shll
cmpsl
inc
stc
pop
xor
sub
sbb
std
inc
cwtl
in
push
lods
mov
pushf
stos
jg
push
iret
test
inc
into
nop
push
sbb
sbb
paddd
and
jmp
adc
mov
ljmp
jle
aas
shl
sarl
push
nop
insb
mov
insl
mov
or
fadds
les
dec
dec
std
shll
hlt
sub
test
cltd
cmp
push
pop
xor
loope
stc
ja
pop
cmp
mov
xchg
std
xchg
xchg
rcll
hlt
call
cmpsl
out
das
leave
lss
stc
pop
cmpsb
mov
ficompl
or
aam
dec
xor
mov
mov
loop
mov
out
push
xchg
cmc
orb
lcall
lahf
xchg
push
or
sbb
or
lods
mov
mov
shlb
xchg
push
ret
inc
lock
fdivl
jge
les
clc
push
lcall
inc
add
xor
push
add
ror
fidivrl
jge
jne
push
push
jg
push
js
lods
mov
sub
pop
jecxz
inc
fsubs
jmp
mov
pop
sahf
dec
adc
xchg
shll
add
push
ljmp
arpl
cwtl
adc
mov
sub
mov
inc
sbb
dec
daa
sbb
mov
nop
cli
add
pop
pop
xchg
cmp
inc
arpl
cmc
daa
cltd
or
xor
mov
adc
or
popa
mov
mov
xor
or
mov
lret
push
sbb
cmpsl
les
fsubs
mov
repnz
cltd
fxch
lea
stc
pop
lcall
pop
mov
and
cmp
repnz
cmpsl
jno
sbb
mov
push
mov
sub
test
jne
ficomps
sub
or
enter
clc
pop
add
ja
stos
iret
sbb
test
lods
xchg
mov
cmp
xchg
pusha
pushf
pushf
fisttpll
scas
adc
shrb
into
dec
inc
sbb
jg
pop
fldt
jb
push
stos
pop
leave
or
mov
loop
or
cwtl
cmc
jl
rcrl
sbb
xor
mov
xchg
aam
add
sbb
sbb
pusha
iret
inc
icebp
es
cli
jmp
andb
cmp
sarb
mov
xchg
lea
enter
fsub
sbb
testb
test
ja
fldpi
icebp
jp
into
imul
imul
xchg
xor
mov
mov
les
cs
xchg
jge
push
xchg
and
cmp
insl
or
cld
popf
inc
movsl
dec
adc
aaa
ret
arpl
xor
sub
pop
addr16
mov
out
andl
scas
sub
aas
ret
insl
xor
and
pop
xchg
fistpll
add
push
fisttpl
push
ljmp
pop
aaa
sub
insl
loop
dec
sbbb
imul
dec
loope
xor
mov
xchg
stc
cltd
jno
lret
fs
aam
push
mov
jp
jb
or
jecxz
std
sbb
add
add
std
aaa
dec
add
pop
or
or
gs
push
jae
pop
xchg
negl
dec
cmp
dec
rclb
inc
dec
rorb
sti
pop
xor
inc
clc
popf
mov
mov
test
ljmp
add
mov
ret
cmpsb
mov
xchg
mov
imul
sbb
sbbl
incb
bound
das
mov
pop
push
shl
mov
pop
cs
pop
ffree
rcl
xchg
or
push
cmpb
sbb
movsb
jne
xchg
stc
xchg
loop
subl
fidivl
mov
mov
xor
in
fnstsw
sti
orl
mov
scas
decl
rol
jae
fldt
cmp
push
lea
bound
arpl
lcall
and
jbe
arpl
push
or
fs
xlat
aam
add
aaa
ljmp
cltd
das
repz
insb
leave
sub
shl
inc
outsl
push
lahf
and
loop
inc
xrelease
data16
or
xchg
in
sub
push
push
inc
ss
sti
bound
jmp
inc
jmp
push
jbe
pusha
mov
mov
lds
adc
lahf
mov
xchg
mov
jns
rcll
cmp
and
xor
xchg
js
out
mov
or
movsb
dec
out
in
dec
rorl
ficomps
sbb
push
fisubl
fadds
or
sahf
mov
mov
scas
xlat
inc
orl
jbe
push
push
int
test
jle
jns
xchg
jbe
jnp
nop
ds
les
jo
loope
cmpsl
mov
lods
jecxz
sub
mov
addr16
inc
leave
jns
pop
adc
mov
mov
mov
test
jmp
push
dec
in
js
add
cmp
jp
jmp
fldt
cli
sbb
enter
daa
loope
xchg
fwait
and
jbe
addl
pop
mov
jle
divb
fwait
outsl
pop
mov
xchg
addr16
mov
fsubr
mov
xchg
leave
daa
jbe
out
sub
stos
sbbl
mov
sub
pushl
jmp
lret
leave
rcl
fcmovb
sub
test
and
push
js
xor
pop
enter
mov
rorl
dec
mov
call
lret
inc
mov
push
leave
je
inc
mov
clc
xlat
stos
rclb
lods
repnz
aad
mov
mov
imul
sbb
rolb
idivb
mov
add
jmp
dec
sub
mov
and
es
stos
pop
jl
sbb
inc
jmp
ljmp
sar
ljmp
les
xor
pop
imul
adc
sbb
stc
inc
lret
movsl
mov
fcoml
jbe
nop
lods
mov
out
cmc
scas
mov
mov
into
dec
sbbl
rcrb
mov
dec
test
jmp
xchg
mulb
pop
mov
das
and
test
push
or
repnz
cmp
mov
sub
cmp
insl
enter
jne
push
jmp
popa
shll
pop
cmp
cwtl
lcall
arpl
fsts
mov
xor
test
dec
mov
es
rcrb
dec
xchg
pusha
andl
icebp
sahf
test
test
mov
movsb
xor
mov
out
fistpll
mov
bound
cld
loopne
mov
sbb
cli
test
scas
xchg
clc
push
lcall
cmp
adc
jne
out
stc
rclb
cmpsl
push
xrelease
push
push
scas
jg
mov
inc
xor
pop
fcoms
out
jmp
pop
arpl
fidivrl
mov
int3
fdivr
lcall
sbb
inc
test
sub
cmpsb
in
sub
test
in
rdpmc
mov
lods
fadds
xchg
cwtl
jo
frstor
jmp
add
xchg
jno
loop
sbbl
imul
lret
pop
iret
or
icebp
adc
out
andl
push
add
popa
sub
sbb
out
out
nop
jnp
or
mov
es
jp
fcoms
jae
pop
mov
or
jo
insl
nop
idivb
mov
ret
jbe
clc
pop
pop
psubsw
mov
aaa
xor
pushf
pushf
mov
lods
rolb
aam
adc
stc
xor
push
int
scas
subl
or
mov
cli
mov
push
sarl
les
push
rorl
mov
mov
and
jp
and
mov
sub
cs
emms
fldl
xor
lahf
insb
jno
adc
push
add
sarl
or
mov
cmp
and
add
out
xchg
orb
dec
stos
sbb
jb
push
popa
lahf
and
flds
and
ret
jb
es
pop
mov
pop
bound
jmp
ljmp
push
push
dec
dec
inc
dec
out
ret
mov
fcoml
jg
loopne
arpl
repz
rorl
test
push
hlt
push
mov
mov
clc
mov
add
mov
imulb
out
push
inc
loop
mov
xchg
aaa
cmpsl
xchg
xchg
add
gs
andl
int
leave
shrl
inc
xor
mov
push
cmp
test
fstpl
in
push
ds
gs
icebp
mov
inc
lahf
cmp
mov
idivl
cmp
mov
lcall
inc
dec
push
aas
movb
cmp
cmp
jmp
push
es
push
cs
jo
popa
mov
inc
mov
fidivs
out
xchg
inc
daa
push
inc
and
sbb
fwait
call
mov
mov
repnz
jb
cmp
sub
xor
cmp
mov
mov
pop
pop
xor
add
cmp
or
push
dec
imul
xchg
out
or
pop
stos
jg
push
add
xchg
or
rcl
push
or
addr16
sbb
jecxz
xchg
in
dec
setno
and
repz
fwait
add
cltd
imul
xchg
ljmp
push
pushf
mov
dec
lock
sbb
pop
sbb
push
add
add
nop
ss
dec
scas
push
icebp
jnp
xchg
sbb
loopne
xor
cmpsl
push
mov
xchg
outsb
cmp
lods
push
push
add
fnsetpm(287
lods
jnp
popf
int3
add
notl
popa
add
push
jne
stos
rorb
roll
pop
call
mov
mov
add
pop
jmp
rol
int3
fcmove
fimull
stos
repz
push
js
orl
jne
push
addl
adc
mov
push
hlt
rcll
lds
ficompl
xor
iret
fistpll
xor
repz
xor
cmc
xchg
ret
pop
rclb
jno
mov
bound
inc
sub
sub
jg
addr16
bound
imul
pop
mov
call
rcrl
bound
lock
nop
out
imul
sub
icebp
inc
sbb
add
sub
pop
xor
xchg
enter
rcrl
push
jl
xor
mov
in
and
or
sbb
lods
inc
inc
jae
lret
mov
push
sbb
stc
jle
or
mov
dec
push
cmp
cmp
dec
cs
mov
cmpsl
push
mov
add
mov
xor
lcall
jge
push
sbb
ljmp
fadd
mov
xor
js
mov
outsb
inc
cwtl
in
pop
dec
js
scas
lret
out
sbb
push
or
out
enter
stos
jmp
jp
lret
mov
pop
dec
cltd
dec
je
out
loop
add
test
push
or
cs
ret
push
sbb
adc
std
imul
mov
pop
dec
cs
inc
mov
dec
lock
mov
testb
loopne
mov
sub
add
inc
cmc
jmp
shll
rolb
jle
jnp
inc
scas
test
mov
in
adc
pop
lods
shrl
andl
repz
sarl
cmp
xchg
lods
dec
lds
aam
pop
outsl
adc
adc
push
outsb
icebp
mov
insl
sbb
loopne
stc
mov
dec
or
loop
int
mov
add
and
adc
jle
lret
call
sub
pop
ret
fidivl
mov
adc
pop
push
in
xchg
inc
mov
and
cmp
negl
sbb
jne
sbb
add
dec
mov
and
add
addl
sub
repnz
fld
dec
dec
dec
jne
push
sahf
pop
pop
je
nop
mov
repz
push
adc
jmp
adc
jno
xor
push
and
out
adc
xor
mov
gs
pop
lock
xor
xor
adc
adc
pop
fisttps
nop
jle
and
cld
pop
jl
push
sbb
pushf
or
pop
pop
jg
loop
mov
xorl
mov
and
rclb
cmp
mov
mov
xchg
push
fdivrl
mulb
pop
dec
pop
inc
ljmp
mov
arpl
mov
or
pop
enter
jns
rorl
pop
and
or
xor
xchg
aas
sti
insl
and
fcmovu
sbb
mov
shrl
cltd
lods
lret
daa
lock
sahf
cmp
jo
cmc
data16
xor
out
push
ljmp
and
and
stos
dec
test
lahf
rorl
mov
push
lret
mov
aad
sub
imul
dec
andl
insb
outsl
jmp
ficomps
add
pusha
xchg
mov
rcll
shlb
xchg
mov
cli
push
xor
je
scas
or
mov
sbb
mov
mov
subb
cmp
fnstsw
rorb
add
jo
dec
add
sub
jmp
cmp
in
rorb
mov
repz
inc
iret
ret
js
shrb
sub
test
sub
testl
popa
sub
and
and
in
or
or
vcmpsd
and
and
loopne
push
cmpsl
stos
mov
mov
rcrl
or
into
ja
test
push
jg
sbb
mov
sbb
out
mov
dec
jmp
les
push
push
mov
xor
test
jmp
or
popa
stos
push
ds
test
and
add
test
or
adc
xchg
in
push
dec
cmp
jecxz
pop
inc
jg
mov
mov
call
xchg
push
mov
push
ret
addr16
in
jno
test
cmpsb
fdivrs
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
jmp
ror
cmp
aam
ror
add
sub
mov
das
jg
jae
js
lods
inc
jmp
adc
jmp
aas
lds
sbb
and
adcb
inc
and
sub
mov
adc
and
lcall
xlat
push
stos
sbb
sti
push
jmp
out
les
fst
sub
push
js
inc
cmp
add
outsb
push
shr
jno
enter
xchg
js
and
aas
dec
push
aaa
pop
fsubl
daa
adc
jp
lar
xor
fstp
sbb
xchg
jnp
dec
arpl
lea
mov
loope
or
mov
das
pop
mov
sub
add
or
scas
insl
xchg
fsubrp
xchg
adc
sub
inc
and
jnp
adc
je
fwait
sub
cli
test
xchg
sub
leave
and
and
xor
shrl
in
mov
jne
mov
lods
or
xor
push
sub
daa
daa
insb
stc
sub
xlat
adc
push
jecxz
rcll
pushf
push
inc
lcall
imul
fcompl
mov
mov
xchg
adc
and
nop/reserved
cmp
mov
xchg
pop
push
retw
in
mov
int3
out
adc
pop
fldl
jle
adc
lret
repnz
cmp
hlt
popf
dec
dec
mov
mov
icebp
mov
test
fisttps
shrl
ljmp
lret
lods
lcall
jecxz
sbb
fimull
push
in
and
or
sbb
std
xlat
sbb
xor
cltd
lock
imul
iret
adc
add
nop
sahf
imul
ja
xchg
cmp
call
je
enter
push
cmp
nop
pop
xor
lods
push
ret
or
lret
xchg
inc
stc
jle
fcomps
push
out
loope
arpl
daa
ret
lock
loopne
outsl
jnp
pop
xor
clc
rolb
loopne
loope
dec
add
js
and
cmpsl
add
lahf
in
arpl
pop
sub
hlt
jmp
mov
data16
push
jmp
sbb
cmp
inc
mov
loopne
out
sbb
xchg
lahf
stos
cmp
xor
sub
push
adc
les
sbb
jle
out
dec
lahf
in
icebp
push
loope
cmp
inc
je
push
popf
mov
dec
xor
lods
fucom
or
imul
push
sub
in
lret
sbb
jge
mov
sub
in
cwtl
dec
xchg
test
mov
mov
pop
fidivl
test
jb
clc
rorb
add
sahf
fstpt
lods
jl
pushl
aam
inc
xchg
pop
adc
test
mov
and
lods
mov
shlb
xor
shll
mov
xchg
aad
mov
icebp
sbb
lock
lods
cmp
jge
popa
cmpb
ret
bound
pusha
test
sbb
movsl
test
es
lods
lahf
les
xchg
push
xor
pop
cmp
mov
movsl
pop
aaa
pop
ljmp
xchg
jle
out
xor
ret
jmp
mov
push
out
sub
inc
add
in
movsl
lcall
outsl
lret
shll
add
and
xor
mov
shrb
inc
cmp
xor
fs
xor
test
inc
lahf
test
cmp
xorb
ja
inc
ja
divl
dec
sti
into
mov
gs
loope
cld
test
mov
add
ljmp
inc
mov
sbb
mov
popf
inc
dec
sub
mov
jp
adc
data16
nop
xor
xlat
shr
sar
arpl
push
aad
xchg
out
out
cmp
imul
test
lock
xchg
or
ret
pop
add
inc
push
repz
sbb
jno
cld
add
in
mov
xchg
call
sbb
mov
out
adc
insl
jno
jmp
outsl
sti
shll
pop
shlb
faddp
roll
stos
ss
stc
adc
or
test
nop
hlt
testb
outsb
out
add
aad
dec
out
dec
fistpll
push
shll
pop
mov
push
hlt
in
inc
mov
popf
loope
pop
mov
leave
push
inc
dec
dec
fcmove
push
jmp
test
add
ret
rcr
fcmovb
jp
outsb
sbb
aad
xchg
xor
jae
js
in
dec
notb
movups
cmp
mull
mov
jp
scas
add
movsb
in
mov
imul
aaa
in
and
fcomps
mov
data16
add
cmpl
adc
mov
dec
leave
push
lcall
cwtl
js
mov
mov
jbe
paddusb
jo
xor
inc
mov
pop
insl
mov
cmpsb
jbe
dec
push
andb
adc
cwtl
xchg
xor
adc
aam
aad
mov
pop
enter
shl
arpl
xor
add
cmp
mov
out
xchg
jo
pushf
xchg
add
dec
add
mov
idivb
adc
sbb
rcrl
call
and
mov
cmpsl
mov
mov
lea
add
js
lock
sbbl
leave
xchg
lds
push
rorl
push
repz
in
fcmovb
stos
scas
mov
mov
mov
jp
and
aaa
push
fadds
and
leave
push
stos
cmp
insb
rorb
and
fistl
sbb
adc
inc
xor
in
push
push
sbb
push
aam
imul
jns
aas
in
fdivrs
shlb
in
pop
inc
mov
xorl
imul
dec
add
xor
xor
xchg
cld
gs
mov
jnp
cld
jo
mov
mov
mov
cmc
jmp
pop
aad
add
movb
sub
test
adc
mov
ds
xor
ss
mov
cmp
faddl
scas
sbbl
push
pop
fsubr
fsubrl
or
mov
data16
notl
clc
cwtl
ss
mov
ficoms
push
aad
cli
addb
cmp
mov
sbb
pusha
sub
lret
push
fdivl
shr
mov
gs
cmc
imul
xchg
enter
and
push
mulb
and
add
xor
adc
pop
cltd
sbb
push
mov
adc
mov
cmp
imul
dec
or
lock
test
int
test
lea
cltd
rcl
das
mov
sub
iret
shlb
fidivrs
jne
test
sarb
inc
in
imul
aam
xchg
stos
clc
fwait
out
out
xchg
mov
mov
imul
xlat
jo
cmc
sbb
add
pop
push
mov
stos
push
push
push
jae
cld
push
pop
xchg
dec
add
les
dec
lcall
mov
add
push
xchg
xor
ret
mov
pop
mov
push
xor
lret
dec
test
dec
jg
cltd
sub
jmp
cli
jne
add
mov
mov
pop
add
pusha
mov
cli
aas
xorb
test
sub
or
js
sub
and
sub
add
xor
sbb
in
loopne
jo
jle
cmp
add
add
jbe
mov
fsubrs
aaa
ja
and
lods
push
jb
adc
dec
ficoml
aas
call
lds
sub
add
hlt
jg
ja
adc
push
dec
dec
push
arpl
pop
ss
cld
sub
mov
cli
push
push
sub
xor
xchg
lret
jge
jne
jp
inc
gs
cmp
jg
enter
lret
addr16
fiadds
jne
stc
ret
lretw
insl
inc
cmpsl
mov
movl
inc
and
sub
ss
sarb
dec
shrb
mov
mov
addl
mov
lcall
add
xchg
filds
popf
mov
mull
jmp
add
fadds
push
jle
or
jp
popa
push
and
jmp
jne
out
push
jb
dec
adc
ja
test
push
outsl
aam
xchg
pop
iret
adc
xchg
adc
pusha
and
cmp
lods
inc
fldl
call
adc
lret
lahf
data16
and
pop
cltd
aas
inc
lods
mov
push
pop
stos
mov
test
and
mov
mov
aad
mov
inc
pop
pop
es
shlb
outsl
mov
or
cli
jmp
aas
ret
rcl
iret
ret
dec
xchg
stos
dec
mov
js
popa
int
xorl
pop
adc
mov
adc
and
push
pop
inc
stos
mov
das
and
jecxz
shl
add
divb
sbb
scas
cwtl
stos
rorb
dec
dec
fldl
inc
ret
les
and
add
cmp
aam
xchg
int3
jecxz
push
iret
inc
cmp
call
pop
movhps
outsl
sbb
mull
jno
push
in
xor
dec
push
out
dec
lcall
imulb
cmp
popf
dec
inc
dec
daa
popf
push
in
imul
inc
cmovge
divb
rol
repz
mov
dec
pop
jge
sarl
push
pusha
mov
adc
mov
xchg
mov
lods
sarb
dec
leave
xchg
jle
mov
sub
addr16
in
xchg
scas
icebp
push
pushf
jns
out
into
xchg
mov
or
add
clc
mov
movsl
dec
dec
dec
cmpsl
lcall
out
inc
mov
sub
and
aam
aad
or
or
mov
cmp
lods
or
lea
pop
test
pop
xor
dec
or
pop
inc
cs
aaa
pop
mov
push
xor
into
and
xorl
fldenv
repnz
fucom
fsubrl
mov
fldl
mov
outsb
mov
pop
sbb
movsb
add
cltd
sub
addr16
popa
in
mov
popa
cmp
repz
adc
rcrl
xor
jge
mov
imul
mov
jnp
int
lret
jno
shrl
sbb
shll
imul
add
pop
mov
fsubrl
jg
inc
sahf
and
cmp
movsb
loope
int3
inc
xchg
cltd
nop
sub
arpl
lret
inc
add
dec
pusha
sub
test
xchg
mov
addr16
cmp
stc
jmp
push
fistpl
iret
sarb
leave
jge
or
and
pop
and
xor
movsl
sub
push
pushf
lods
sub
cld
xchg
jne
fs
push
push
out
rcrl
rorb
add
rclb
and
movsl
adc
imul
push
popa
popf
push
sbb
out
mov
xchg
push
jns
fs
jmp
push
leave
sahf
add
insb
mov
mov
ja
xchg
and
inc
mov
call
ficoml
in
leave
imul
cmp
aam
in
cmpb
pop
pop
stos
jo
mov
adc
add
call
div
cli
cld
jmp
sub
xchg
popf
or
mov
dec
je
cmc
pop
lret
imul
test
pop
test
inc
pop
add
call
mul
add
sub
in
cmp
xchg
in
in
xor
in
test
mov
push
dec
cs
pop
push
aam
add
ret
js
xchg
adc
out
stc
int3
pop
arpl
in
mov
cltd
and
inc
cmp
lret
mov
bound
testb
push
dec
into
lea
adc
fistpl
xchg
sbb
hlt
dec
and
in
pop
adc
sbb
mov
lds
xor
inc
loope
xchg
mov
es
sub
lret
cmovp
jle
cmp
pop
gs
sub
mov
out
xor
push
mov
imul
pop
pop
jecxz
jno
sarb
inc
add
dec
xor
xchg
push
test
inc
pop
inc
mov
imull
mov
cs
cmp
cmpsb
movsb
cwtl
and
cmp
inc
or
cmp
movsb
xchg
cmp
cmp
and
std
ja
out
cmp
pusha
test
inc
outsb
jg
movsb
xchg
pop
jno
mov
sub
es
fisubrs
scas
jecxz
faddp
das
fdivrs
add
jmp
mov
xlat
aaa
sbb
xor
jns
jp
adc
jmp
popf
sub
cmp
inc
push
and
aad
fs
aad
in
inc
pop
cmp
add
or
push
cmp
dec
cmp
cmp
ss
mov
bound
je
mov
inc
into
sub
xor
inc
outsb
outsl
and
dec
add
mov
and
add
aam
pop
ja
mov
sbb
pop
repnz
inc
mov
sub
mov
movl
jmp
cmp
lret
rcr
lret
iret
adc
sub
cmp
jae
js
pusha
push
inc
fdivrs
repnz
jp
cmp
call
daa
xlat
roll
pop
std
mov
loopne
jae
and
dec
xor
cltd
jle
mov
pop
mov
dec
fstps
inc
imul
cs
jecxz
daa
rorl
sbb
scas
fadd
push
and
adcb
mov
mov
mov
and
pop
rcrb
sbb
fimuls
dec
add
sbb
je
cmp
das
jecxz
mov
mov
int3
dec
gs
cmp
pop
pusha
cmp
push
mov
mov
dec
rorl
push
dec
inc
inc
arpl
or
ljmp
add
or
leave
mov
push
sub
sarb
xor
mov
in
dec
dec
inc
loopne
nop
cmp
dec
jo
lods
sub
mov
fildll
add
xor
icebp
pop
xchg
fldcw
stos
dec
jmp
ficomps
lea
sahf
push
fiadds
mov
test
enter
sbb
arpl
mov
jae
jp
pop
pop
out
js
std
mov
ljmp
das
mov
and
and
push
loope
and
mov
adc
mov
fstpl
das
out
aad
dec
inc
lods
lea
pop
xchg
jb
ret
ret
push
movsl
or
sahf
mov
loop
xchg
pushf
push
popa
loope
data16
dec
jo
dec
outsl
lahf
sbb
xor
notb
lret
test
mov
mov
xor
out
pop
jle
sahf
fisubrs
ret
mov
cmp
shll
mov
push
pushf
add
addl
push
filds
lea
push
push
test
sub
jp
cltd
fwait
outsl
aam
pop
out
add
mov
push
xchg
pop
mov
push
pushf
incl
repnz
mov
sub
aam
inc
repnz
xor
push
insl
xchg
mov
aad
cwtl
mov
loope
xchg
sbb
test
push
hlt
xor
push
or
int
jnp
shlb
add
xlat
jp
call
sbb
aam
or
xorl
cmp
jnp
stc
insl
sub
fidivs
push
std
addr16
push
cmpsl
or
xrelease
mov
xchg
add
movhps
pop
jl
je
xacquire
sbb
idivl
adc
xor
leave
cld
icebp
push
frstor
dec
inc
cmp
clc
popa
out
jne
inc
xchg
push
nop
aas
push
jle
lds
movsl
lock
icebp
fldcw
addl
sub
mov
cmp
and
pop
xchg
mov
repnz
push
fadds
push
jecxz
dec
jecxz
pop
xchg
inc
xor
enterw
leave
mov
sbb
jge
inc
shlb
jp
sbb
leave
xor
call
or
and
mov
jmp
inc
in
push
adc
addl
int3
mov
lcall
pop
ficomps
outsl
mov
sub
les
arpl
cmp
fdivrp
fbld
and
push
mov
sbb
je
dec
js
lods
pusha
in
sti
adc
mov
cld
stos
scas
or
push
adcb
cmpsl
in
pop
push
daa
inc
pushf
jl
mov
xchg
and
inc
imul
jnp
pop
cld
lea
xchg
es
sar
mov
fucomip
sub
or
cmp
jno
push
inc
xchg
or
mov
insb
mov
add
lret
xchg
push
sbb
subl
icebp
push
pop
out
in
mov
loopne
mov
lods
xor
movb
fisttps
sbb
pop
push
xchg
push
jle
cmpsb
mov
inc
hlt
sbb
aad
test
fdivrs
cmpsb
add
lcall
paddusb
sub
mov
push
jbe
outsb
out
add
int3
sahf
mov
push
lock
sub
ret
mov
fsubs
pop
cmp
fnstenv
jg
or
adc
into
inc
out
mov
mov
cli
dec
fldl
in
mov
das
ret
shrb
sbb
dec
cmpsb
cmp
std
lods
popa
sti
aad
sbb
insb
scas
sbb
jns
xor
push
push
inc
dec
xchg
test
cmp
push
and
inc
sub
mov
ljmp
sbb
adc
mov
sbb
push
pusha
mov
jp
xchg
pop
add
int
xchg
mov
and
xor
fidivs
loopne
test
inc
add
adc
jmp
aas
enter
fxch
rclb
fistpl
xchg
ret
jg
jae
js
push
pop
data16
and
mov
les
lods
xor
mov
jmp
adc
mov
mov
mov
pop
insb
imul
cmp
pop
lret
cmp
jmp
iret
mov
cmp
push
insb
sub
mov
xlat
xor
jmp
out
mov
test
inc
js
cmpsl
test
jnp
or
push
sarl
add
xor
lahf
jp
lcall
inc
mov
popa
ret
xchg
inc
and
jo
xchg
cmp
xchg
mov
dec
xor
sarb
popf
or
leave
sub
pop
hlt
clc
dec
mov
je
jl
or
and
inc
sbb
push
ficoml
data16
std
adc
pushf
mov
xor
cmc
lods
mov
xor
arpl
hlt
stos
adc
jnp
xchg
jne
cmc
aaa
inc
cltd
dec
pusha
xchg
aaa
inc
cmp
jge
sbb
mov
lret
sbb
js
mov
mov
sub
int
daa
es
fidivl
adc
addr16
dec
lods
fdivs
stos
aad
out
dec
imulb
xor
loop
sbb
mov
fs
inc
aam
out
int3
sbb
mov
and
out
fisttps
and
push
and
mov
mov
add
iret
sbb
sbb
jno
inc
movsb
mov
bound
dec
js
fmull
lret
xchg
out
xchg
mov
lahf
mov
fisubrl
movsb
dec
jmp
cmp
push
iret
movsb
and
rol
cltd
mov
inc
mov
stc
mov
nop
arpl
shrb
add
outsb
or
iret
sub
ja
jns
subl
xor
inc
dec
cld
or
das
lds
jb
fwait
movsb
pop
icebp
xchg
dec
rcrl
push
leave
adc
pop
and
loope
mov
mov
cmp
and
pop
sub
dec
mov
dec
loopne
imul
sbb
cld
or
sub
call
cmp
mov
cmp
jl
adc
pop
mov
jmp
mov
sbb
shll
pushf
sbb
lods
in
leave
sub
mov
mov
pop
pop
push
and
loop
mov
cmp
mov
add
call
push
add
inc
scas
jb
cmp
out
inc
pop
mov
add
inc
mov
popa
in
mov
out
loopne
cs
subb
fistl
stos
les
lret
shrl
jne
adc
movsl
adc
and
inc
pop
add
jmp
pop
sub
fs
lcall
daa
inc
imul
sub
pop
and
cmpl
ljmp
mov
filds
pop
mov
jae
xchg
insl
sti
cwtl
cmp
or
cmp
stos
fsub
cmpsl
push
jecxz
cltd
in
or
pop
push
ja
adc
push
jg
xor
mov
adc
nop
mull
ret
in
lcall
ret
sub
lahf
add
sahf
mov
pop
rcl
jno
dec
xorl
fwait
sbb
lods
and
das
call
mov
out
xchg
ljmp
dec
push
imulb
or
pop
push
inc
mov
xor
add
sti
add
in
imul
leave
test
sbb
pop
mov
cmp
pop
ja
pop
mov
cmp
loope
js
sbb
pushf
pop
or
stos
mov
addl
dec
xchg
mov
int3
dec
aaa
jl
pop
push
push
imul
inc
cmp
movl
jb
inc
push
jmp
or
pop
pop
cwtl
dec
ja
inc
fimull
rclb
iret
xchg
cmp
stos
or
mov
adc
in
jle
les
inc
imul
mov
cmpsb
in
out
iret
sbb
loopne
lea
jno
clc
cmp
cmp
dec
cmpsl
gs
iret
jp
ss
icebp
mov
adc
mov
adcb
and
mov
dec
mov
adc
fcomip
icebp
mov
mov
dec
in
rcr
lret
jp
push
xor
or
out
out
adc
jne
and
xor
fidivrl
xor
decb
fs
mov
inc
hlt
inc
mov
out
lock
clc
push
sahf
out
mov
dec
leave
xor
adc
mov
xor
add
mov
sub
sub
jmp
xlat
cmp
int3
fxch
aad
insb
test
jb
jg
jae
js
or
mov
sbb
mov
adc
fwait
cltd
pop
cs
movsb
lret
add
dec
es
xchg
pop
ficompl
std
sub
dec
pushf
popf
fs
jl
push
sbb
scas
dec
xor
push
ds
or
jle
sbb
icebp
sbbb
mov
add
js
cwtl
cmp
out
scas
mov
lods
jle
insl
xchg
rcrb
iret
mov
sub
outsl
arpl
inc
sarb
mov
ret
pop
sbb
mov
cmp
cwtl
add
addl
push
lret
add
scas
mov
xor
and
lret
or
sbb
and
aad
inc
mov
ja
sub
xor
push
xchg
cltd
inc
pop
cli
popa
add
mov
lock
or
cltd
cmpsl
xor
adc
mov
and
sub
push
popw
inc
dec
jg
icebp
loop
pusha
mov
sub
sbb
jle
out
repnz
imul
mov
in
adc
sbb
mov
xor
add
or
sahf
insl
pop
icebp
mov
stos
fs
sbb
xor
push
das
dec
pop
movsb
add
xchg
add
mov
cmp
sub
into
mov
and
jge
add
mov
push
stc
push
lcall
ss
popa
sub
adc
icebp
adc
outsl
ljmp
test
push
add
jae
mov
popf
jnp
test
aas
pop
jo
mov
pop
or
daa
and
jecxz
mov
jo
mov
jl
dec
sbb
cmpsl
mov
inc
ss
push
add
or
pop
mov
sbb
aam
xchg
andl
imul
movl
sub
pop
xchg
dec
cmp
ljmp
shl
lret
mov
jb
dec
sub
cmp
mov
pop
push
es
roll
movsl
fsubr
popf
pushf
adc
aas
cmp
fwait
adc
insl
movsl
push
mov
cwtl
mov
jge
jg
xchg
xchg
sub
rcrl
ds
xor
xchg
outsb
cltd
cltd
lahf
inc
sbb
ret
daa
test
xor
mov
fidivrs
jp
mov
enter
and
ljmp
rol
int3
jecxz
lods
cwtl
mov
int3
add
lock
mov
push
int3
inc
xor
aad
or
es
aam
push
sbb
adc
dec
les
movsb
rolb
je
and
hlt
cltd
test
and
enter
mov
push
adc
adc
inc
lgs
fs
sbb
and
jae
fwait
insl
mov
shll
test
sub
fidivl
cltd
jle
and
sarb
clc
jl
pop
andl
jns
setbe
mov
in
jecxz
adc
push
mov
mov
inc
rcl
jp
or
adc
lea
xor
pushf
sti
adc
lea
call
push
xor
jmp
test
fsubs
sbb
out
scas
cwtl
mov
sbb
xlat
insl
and
cmp
mov
push
dec
out
stos
or
scas
dec
orb
jl
aad
cmp
push
or
pop
jmp
cmc
adc
test
popa
xor
mov
mov
jne
int3
movsl
or
sbb
fwait
push
and
dec
test
aam
pop
fs
add
loop
fiadds
xchg
mov
pop
stos
sti
fdivs
xchg
loopne
call
ss
cmp
cmpsb
lcall
lods
cmp
fnstenv
stc
or
sti
jne
adc
push
sarb
jb
pop
lret
scas
inc
lcall
test
filds
push
mov
sub
mov
pop
push
loop
inc
cmp
out
push
ds
jmp
dec
adc
jo
scas
and
ja
cwtl
ss
mov
adcb
cmp
inc
add
pop
pop
arpl
enter
dec
outsb
test
jg
pop
cmp
icebp
cs
mov
fidivrs
gs
out
lret
jbe
cmpsb
mov
ret
filds
mov
cmp
sbb
xor
push
test
pop
testb
gs
adc
mov
xchg
les
pop
push
pop
mov
add
enter
push
aad
lret
cmpb
cmp
mov
add
mov
mov
mov
adc
jmp
mov
lret
or
mov
ljmp
jae
js
je,pt
xchg
cmp
std
and
enter
cmp
adc
sahf
les
lret
shlb
sub
mov
and
and
movsl
loope
sahf
cli
sti
push
xor
mov
out
mov
popa
imul
popa
push
test
and
mov
stos
std
jle
arpl
mov
out
icebp
into
shlb
pusha
and
jle
adc
insb
cmpsb
repz
inc
or
cmp
test
insb
sbb
mov
lcall
rorl
and
pop
pop
dec
test
pop
jp
mov
in
in
cs
push
mov
push
lea
sub
decb
cwtl
add
loope
push
aam
jne
or
xchg
lods
jb
and
cli
and
out
loopne
insb
xchg
push
inc
sub
jae
lds
rcrl
push
xor
mov
ja
jp
scas
aaa
xor
mov
jl
inc
cltd
sub
sarb
lcall
clc
and
xor
lods
mov
scas
add
mov
xor
push
gs
test
fldcw
fs
adc
sbb
mov
movsb
jbe
fimuls
mov
add
push
mov
out
mov
cs
test
cmp
clc
sahf
cltd
pop
mov
xor
add
push
ret
insl
xchg
mov
fstpl
fstpl
in
cmpsb
ja
lds
arpl
adc
push
or
mov
addr16
xchg
and
push
cld
fxch
push
jne
push
pop
and
insl
or
inc
jns
mov
stos
movsl
adc
and
ficompl
in
cmp
out
scas
ret
cld
xorl
sti
mov
sub
dec
sti
icebp
xchg
mov
js
aaa
cltd
cmp
ficompl
inc
imul
movsl
fsubp
pop
imul
lcall
mov
call
loopne
cmp
jns
out
jmp
mov
clc
cmp
leave
mov
mov
out
xchg
pop
ljmp
pop
fwait
dec
daa
xor
cmp
push
stos
cmp
cmpsl
mov
cltd
imul
leave
xchg
in
rcrb
movsb
js
sbb
sub
push
inc
sub
or
leave
jp
arpl
rcrb
rclb
loop
inc
dec
pushf
imul
and
adc
scas
rcrb
and
ljmp
xchg
outsl
fistl
nop
fdivrs
dec
bound
pinsrw
sub
mov
cmp
scas
fisttps
or
push
jg
imul
inc
sub
rorb
mov
jo
mov
mov
inc
jge
xchg
in
out
repz
xor
cmp
ljmp
je
loop
lods
ret
or
mov
jl
lret
mov
cld
aad
pop
cmp
fcoms
stos
xor
cmp
fistl
bound
dec
mov
inc
and
xor
das
push
push
cmp
pop
xchg
cmp
pop
leave
jns
and
ss
mov
push
movsl
and
out
jge
ja
enter
push
outsb
or
mov
scas
lea
or
jb
sub
hlt
cmpl
and
in
pop
je
shrl
cmp
lock
cmp
push
jl
sub
xchg
cmp
xchg
ds
add
inc
scas
mov
imulb
test
mov
arpl
test
sarl
popa
push
inc
fs
lcall
loopne
fwait
in
add
fs
std
imul
mov
add
lcall
fs
pop
lds
mov
dec
rorb
sbb
popf
pushf
ror
sbb
jecxz
push
hlt
xchg
ja
mov
das
inc
mov
ja
data16
shr
jg
test
inc
shlb
fs
push
rorb
pop
test
clc
push
adc
fcoml
ret
loop
mov
es
pop
or
pop
cs
mov
shlb
pusha
das
flds
fwait
adc
ss
and
dec
ja
out
scas
mulb
ljmp
jl
gs
fidivrl
shlb
xchg
jmp
cltd
push
jo
fidivl
sti
rorb
clc
mov
add
nop
sti
adc
repnz
jmp
inc
imul
aam
xchg
ja
inc
and
call
pop
in
lret
sarl
mov
mov
xor
jmp
leave
int3
leave
rcr
fxch
aad
push
adc
ror
jg
jae
js
les
test
xlat
xor
xchg
ljmp
lret
sbb
mov
imul
pop
xchg
adc
jmp
jnp
and
fbld
lds
or
mov
sub
rorb
push
pop
cli
mov
in
nop
dec
mov
mov
mov
lock
add
or
push
mov
and
mov
and
test
push
aam
jne
movsb
inc
inc
or
dec
jnp
jbe
mov
xor
fisttpl
or
push
xchg
sti
outsl
xchg
sbb
lret
push
inc
jb
mov
mull
decb
je
in
nop
pop
fstl
inc
push
cmp
ss
add
repz
das
mulb
xchg
cmc
dec
pop
xchg
push
push
or
adc
stos
jecxz
sbb
inc
insl
dec
mov
add
dec
orb
mov
push
ja
outsb
jmp
mov
mov
roll
adc
or
jl
fcmovb
mov
sbb
mov
loop
pop
ret
mov
test
push
pop
popa
mov
loopne
mov
incb
dec
test
loop
sti
in
imul
xlat
sbb
jb
or
fiadds
mov
or
cmpsl
push
inc
pop
fstpl
cltd
mov
dec
xor
adc
and
insl
mov
cmpl
pop
cmp
fisubl
scas
dec
pop
rclb
sahf
scas
pop
pop
or
mov
mov
bound
sub
pop
inc
jmp
xor
push
and
cs
mov
out
xor
lea
and
iret
out
sahf
stc
jmp
out
sub
outsl
xor
sub
cmp
loop
add
js
mov
mov
pop
jo
or
dec
outsb
cmp
lods
out
scas
mov
adc
mov
andb
imul
test
fbld
rorl
sbb
aam
lock
rclb
and
sub
mov
mov
adc
pop
loope
fcmovb
sbb
jecxz
bound
mov
into
lds
or
adc
bound
aad
aas
loope
lea
lock
insl
xor
aam
jl
jne
or
xchg
inc
add
jl
pop
int3
aam
sbb
xchg
and
jns
fdivrl
scas
imul
ret
jl
out
or
cld
leave
out
inc
xor
add
or
and
fs
push
mov
insb
inc
dec
xor
repz
repz
xor
mov
add
or
loopne
arpl
popf
jnp
roll
aas
or
pop
pop
or
and
pop
lret
push
cld
ljmp
cs
mov
enter
add
pop
mov
cvttpd2pi
jl
pop
fildl
dec
inc
iret
cmp
mov
xor
ret
inc
shlb
jo
hlt
mov
dec
cmpb
mov
loope
bound
inc
cmpsb
xor
cltd
mov
sbb
mov
cltd
call
mov
jle
sbb
push
sub
push
mov
int
and
jo
mov
pop
popf
sub
sbb
test
sub
push
inc
inc
in
inc
and
add
hlt
fisubrs
arpl
sub
mov
aam
ficoms
dec
pop
es
inc
adc
inc
mov
bswap
insl
fwait
xchg
in
jno
je
xchg
push
fisubrl
cltd
cmp
in
nop
icebp
or
iret
mov
jecxz
rolb
push
hlt
sbb
sarb
jge
xor
in
dec
add
mov
fidivs
mov
pop
jl
sti
xchg
hlt
hlt
test
inc
xor
rolb
ja
or
add
std
ror
and
push
push
push
xchg
fstps
mov
xchg
test
mov
xchg
pop
les
stos
bound
add
hlt
fsub
sti
in
or
fwait
mov
and
repnz
mov
or
xchg
push
nop
or
jmp
cltd
icebp
aas
fmul
das
ss
das
inc
jge
outsb
insb
ja
sbb
xchg
pop
int
mov
mov
adc
ror
mov
adc
push
push
pusha
outsl
fidivrs
jmp
enter
aad
xor
std
daa
xlat
jg
jae
js
push
rcr
inc
mov
or
sub
push
mov
stos
cmp
cli
test
rcl
dec
pusha
xor
leave
gs
inc
shl
dec
mov
cltd
div
bnd
inc
aam
in
les
clc
stc
fmul
aas
mov
cmp
push
sarl
jns
mov
sahf
and
popa
add
cltd
daa
mov
mov
pop
movsb
shlb
pusha
cmp
dec
popa
repnz
adc
inc
stos
add
push
sub
push
ja
mov
sbb
clc
addb
or
aad
insb
int
jmp
bound
test
das
pusha
push
pusha
repnz
shl
mov
sub
sbb
mov
mov
rcrl
add
mov
sbb
pop
and
mov
pop
stos
cmp
dec
out
mov
fmul
xchg
iret
dec
add
cmpsb
mov
adc
or
and
aam
cwtl
jae
push
jae
inc
out
pusha
dec
mov
loop
lret
or
pushl
sbbb
fnsave
dec
lcall
jbe
jmp
push
ret
mov
test
std
push
cmp
sbb
dec
mov
out
in
jp
xchg
mov
lret
mov
in
cmp
adc
mov
sahf
or
mov
jae
repz
popf
and
mov
das
mov
mov
push
pop
outsl
gs
mov
fmuls
outsb
sub
outsb
arpl
adc
push
xchg
jae
sbb
mov
pop
das
rcrb
aam
ljmp
sub
scas
aaa
in
mov
test
sbb
mulb
pop
das
sbb
int3
stc
aam
aam
repnz
imul
ret
cmpsl
jle
and
rorb
inc
mov
ret
iret
fsubl
fxch
rclb
mov
dec
jb
inc
into
ret
addr16
pop
jae
cli
jnp
mov
mov
ljmp
lods
fwait
into
cld
shr
ds
hlt
pop
cli
xchg
lock
push
std
icebp
loope
shlb
sbb
movsb
lods
push
cmp
jno
dec
aad
add
pop
daa
shll
cmpsl
add
cwtl
pop
inc
orb
mov
mov
adc
pop
xchg
pop
icebp
add
push
mov
push
lahf
jecxz
arpl
repnz
ja
push
push
into
lock
pop
dec
popl
call
lock
js
addl
mov
aaa
js
push
scas
testl
ss
lods
lret
rol
daa
loopne
fdivs
xor
jb
or
fstp
jmp
push
clc
mov
sti
push
jmp
outsb
ss
mov
outsb
mov
xor
inc
sbb
ret
rorl
dec
fiaddl
mov
sub
xor
scas
xchg
je
and
xor
mov
sbb
mov
mov
in
mov
xor
or
dec
popf
rcr
fnsetpm(287
mov
xor
dec
or
lods
out
xor
pop
push
or
adc
stos
in
fidivs
mov
repz
and
aas
pop
push
pop
pop
cs
scas
ds
pusha
imull
pop
into
cmp
or
mov
cmp
lret
add
and
mov
push
or
mov
push
cmp
popf
add
mov
jae
mov
lret
repnz
pop
xchg
push
test
xor
test
add
pushl
mov
mov
clc
xor
int3
popl
out
leave
ret
fwait
dec
inc
adcl
scas
scas
mov
add
cmpsl
push
fisubl
pop
sarl
sbb
arpl
jne
in
adc
cmp
dec
adc
sub
lret
aaa
cmc
pusha
xchg
movsl
push
cmpsb
adc
jns
mov
mov
call
or
adc
dec
arpl
popf
xor
add
in
inc
xchg
push
dec
adc
push
cmp
add
hlt
xor
and
je
cmp
push
mov
sahf
adcb
push
test
mov
popa
xchg
cwtl
addr16
arpl
ret
xor
das
jg
xor
xchg
or
xor
jecxz
push
add
xchg
sub
and
add
fnstsw
cmp
in
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
movl
jmp
into
xchg
push
call
aas
fidivrl
jae
js
dec
jns
jecxz
cmp
outsl
jg
fldl2t
in
out
hlt
stos
out
pop
loope
sbb
scas
cmp
pushf
sbb
lods
pop
push
out
sub
ret
xor
jp
sbb
int
inc
mov
mov
xchg
add
or
jge
push
mov
ffree
push
mov
ret
inc
and
adc
lcall
sbb
ja
mov
mov
mov
sti
cld
or
inc
call
shl
xchg
adc
mov
loopne
fsts
mov
cmp
mov
mov
mov
idivb
ret
dec
mov
loopne
sub
xchg
stos
aaa
sbb
mov
jp
fsubp
repz
cmovl
call
movsl
jecxz
push
dec
data16
push
popf
jge
mulb
xchg
push
rolb
inc
fistpl
insl
mov
inc
add
pushf
xor
sub
jl
xchg
loopne
and
lret
cli
and
xchg
jae
clc
mov
ja
stos
inc
dec
xchg
push
pusha
inc
stc
pop
fisttpll
out
stos
cmp
mov
rorl
xchg
dec
sbb
cmp
jns
jae
xchg
in
sbb
adc
jbe
jb
mov
mov
out
pop
add
clc
icebp
test
push
cmp
jmp
outsl
mov
ds
xchg
add
aad
jecxz
or
loop
xchg
or
jb
addr16
xchg
leave
xor
or
loop
and
sub
add
mov
push
imul
in
in
js
inc
add
jb
jbe
mov
sbb
dec
fs
push
pop
push
inc
sbb
push
mov
mov
lock
aas
push
cli
cli
enter
mov
sti
sbb
daa
lcall
cmp
cmp
pop
cmpsl
in
fcmovnbe
add
cmp
or
inc
cmp
jnp
addr16
adc
out
mov
xchg
mov
pop
in
lods
pushf
fwait
push
outsl
inc
gs
hlt
lock
clc
mov
inc
cs
mov
jns
adc
fsub
dec
sarl
add
sbb
or
scas
push
mov
push
out
in
mov
adc
subb
xchg
push
in
cmp
in
pusha
mov
sti
test
sarl
mull
adc
or
popa
mov
enter
or
jge
roll
push
or
les
fwait
push
int3
mov
ds
sbb
xchg
in
pop
dec
xorl
lahf
jg
in
pop
stos
out
pop
xchg
pop
add
in
test
shlb
and
adc
inc
or
jbe
inc
fstpt
mov
add
sub
sbb
cltd
cmpsl
fdivl
dec
fstps
push
inc
push
mov
decl
in
sub
jle
lahf
xor
in
iret
outsl
cmp
jo
push
insl
dec
lods
mov
sarb
or
mov
cs
xchg
leave
stos
mov
loope
idivb
cli
das
xor
fidivrl
pop
mov
inc
sbb
or
mov
ficoms
loope
or
dec
insb
xchg
fmull
ljmp
sub
pop
sarb
cld
and
xchg
int
xor
adc
lcall
popf
xchg
cmp
scas
jb
mov
inc
repnz
inc
call
out
and
xchg
fisttps
or
adc
fistpll
ljmp
repnz
rclb
ficoml
call
test
cld
mov
cmp
jns
loop
xor
hlt
cmp
psraw
int3
shrl
in
jge
xor
sbbl
ja
cmp
js
dec
mov
ret
sub
mov
xchg
push
repz
sbb
and
jle
xchg
xchg
or
jns
adc
mov
sahf
mov
ret
jb
sahf
jb
push
dec
popf
pop
jp
pop
jmp
pusha
or
and
repz
test
jl
out
repz
xor
push
or
mov
aaa
or
sub
dec
xchg
es
sbb
shlb
fldcw
sub
inc
or
and
mov
add
mov
gs
cmp
push
scas
repnz
stos
xor
xor
xor
and
jmp
int3
aas
into
rcl
ror
shll
fsubl
jg
jae
js
mov
out
mov
gs
loop
loop
jmp
int3
pop
pop
psrlq
in
lahf
call
or
stc
mov
in
and
ss
sub
in
lahf
out
aaa
gs
mov
nop
inc
ljmp
jnp
dec
jecxz
cmpsl
dec
xchg
sbbl
dec
sti
out
xchg
push
repnz
shrl
push
xchg
in
outsl
out
adc
std
mov
jns
pushf
add
sbb
cmpl
mov
push
lcall
orl
imul
shll
jbe
test
xor
in
pop
add
xor
xor
test
mov
loope
ss
and
insl
std
popf
add
mov
out
mov
ret
push
mov
pop
repz
aaa
insb
sbb
jbe
imulb
pop
dec
hlt
sbb
imul
in
xor
inc
fwait
out
push
mov
inc
gs
scas
sub
inc
adc
or
dec
cmp
pop
sbb
test
stos
sbb
jge
inc
and
sub
dec
mov
mull
aas
mov
sub
jne
outsb
xlat
and
dec
pop
push
rsm
xor
mov
test
pop
inc
rorl
mov
add
mov
jnp
mov
add
insb
ja
fcomps
out
push
push
mov
aaa
int3
mov
add
sub
es
mov
loopne
jmp
push
xor
jnp
add
adc
mov
sub
push
arpl
push
aam
cmp
mov
in
test
sbb
lahf
mov
pop
stos
and
dec
push
movsl
arpl
lea
es
dec
lret
and
icebp
or
and
insb
mov
lds
sub
mov
xlat
test
xchg
imul
sub
cmp
in
cmp
xchg
adc
dec
les
or
scas
fadds
es
das
fwait
movsl
push
push
inc
xor
nop
ja
inc
mov
cld
adc
and
inc
pop
jno
aam
shll
insl
mov
sbb
push
shrb
dec
bound
mov
dec
lret
pop
jno
add
jge
and
xor
aas
lods
iret
cmpsl
mov
mov
sti
push
add
mov
imull
and
cld
lahf
cmp
call
pushf
call
shlb
out
ds
cltd
cmp
pop
pop
xor
push
bound
mov
cli
mov
push
lcall
jecxz
std
push
adc
mov
out
or
inc
sub
push
icebp
int
cs
insl
aad
or
adcb
scas
popf
and
or
fwait
jp
insl
imul
dec
ds
jle
adc
fistpll
mov
adc
pusha
push
and
cmp
inc
xchg
jb
mov
jmp
xor
sahf
dec
xlat
dec
pop
pop
cmp
stos
lcall
repz
iret
cltd
test
lods
cli
sbb
sub
xchg
js
push
rolb
out
dec
sbb
pop
xor
cli
push
dec
cli
jge
aam
mov
scas
push
test
pushl
aas
popf
xchg
xchg
pop
push
pop
and
xlat
mov
out
dec
push
pop
lret
nop
ret
in
shll
dec
xor
int3
insb
mov
aam
pop
push
lcall
pop
rcrl
mov
mov
jo
sbbb
test
jmp
sbb
insl
cmpsb
jno
inc
jne
lret
push
scas
fstl
sub
sub
std
sub
jnp
mov
pop
sbb
dec
fsubrl
or
mov
clc
sbb
test
inc
inc
je
mov
cld
subl
and
fdivr
jo
iret
pop
scas
push
js
loopne
or
std
pushf
add
shl
and
pushf
xchg
nop
cmp
cwtl
shrl
aad
and
andb
sbb
adc
inc
insl
stc
inc
adc
outsl
mov
xchg
sbb
fidivs
push
xor
insb
and
inc
enter
dec
pushf
mov
mov
cli
pop
dec
fiadds
mov
push
dec
leave
mov
in
sbb
lret
inc
movsl
sahf
movsl
adc
cltd
push
push
sbb
call
or
out
pop
clc
dec
jg
in
cltd
add
neg
jmp
ret
lret
ret
aad
leave
xchg
sahf
mov
and
jl
js
scas
pop
jns
hlt
in
mov
mov
mov
push
pop
movsl
lret
iret
bound
rol
xchg
jmp
jne
xchg
testl
stc
imul
mov
test
imul
fiadds
mov
cld
cld
mov
sbb
pop
fstps
xlat
push
add
pop
push
lock
cwtl
pop
int
out
mov
sbb
fadds
ss
mov
imul
xor
add
movsl
imul
push
jo
popf
push
push
mov
pop
mov
jbe
fs
mov
sub
call
mov
mov
in
dec
pop
sub
and
cmpsb
push
ljmp
lods
inc
dec
ds
push
idiv
add
pop
sti
lcall
scas
add
cli
mov
inc
sub
fs
popf
out
xor
pusha
je
dec
test
in
inc
push
sti
inc
adc
lds
in
pop
add
pop
stc
sbb
loop
xor
dec
add
xchg
inc
cmpsl
pop
fs
jo
pop
add
push
cmpsl
jnp
ljmp
jne
mov
mov
mov
push
or
cld
cltd
stc
out
repz
pushf
enter
push
je
popa
sarl
and
and
sti
mov
mov
push
xor
push
movsl
dec
daa
mov
call
dec
xchg
xor
or
rcr
int
or
pop
xchg
xor
or
adc
ljmp
pop
cmp
push
in
clc
lret
fsubl
fildl
adc
cmp
inc
dec
aas
cmp
jg
pop
and
repz
xor
test
sub
sbb
cmpsb
push
push
test
jg
fxtract
loop
xchg
shr
mov
sbb
fisttpll
pusha
sbb
fsub
sbb
test
xor
rorb
mov
fstps
cwtl
test
arpl
fwait
fs
in
mov
je
sbb
fcmovne
ficoml
or
popa
sbb
fwait
inc
push
cmp
ja
pop
icebp
test
mov
push
shlb
aad
adc
pop
or
add
pop
icebp
mov
add
insl
inc
cmp
insb
add
je
into
loopne
sbb
xchg
mov
arpl
scas
and
jl
shll
cmp
gs
cmp
test
cmpsb
sarb
cmpsb
or
sub
lret
jl
mov
rclb
inc
jo
inc
arpl
xor
cli
cld
adc
mov
inc
jg
add
jp
cmpsb
dec
sub
mov
pushf
sub
imul
shl
out
pop
sub
lods
hlt
dec
fs
add
push
cmpsb
divb
pop
xchg
mov
call
rorl
mov
and
sbbb
xchg
imul
inc
dec
xchg
hlt
pop
icebp
sarb
xor
fs
add
add
mov
sub
int3
cmc
inc
add
stc
or
shrb
push
dec
out
testl
pop
adc
mulb
popf
add
dec
mov
cmpsl
inc
mov
inc
scas
jecxz
sub
jge
mov
mov
mov
xor
jmp
sysret
leave
ss
je
fsubr
adc
stc
jle
xor
enter
pop
test
icebp
sbb
cmc
idivl
gs
sbb
xchg
push
fidivrs
push
imul
out
fmull
adc
popf
sbb
enter
fldcw
lods
push
repnz
cli
xlat
fprem
pusha
push
scas
mov
ret
stc
cmp
push
sahf
ljmp
dec
xchg
aaa
push
jnp
jl
xor
lret
mov
jle
mov
mov
mov
jno
push
fisubrl
aad
pop
lret
insl
adc
ljmp
add
mov
rorb
dec
sub
sbb
inc
insl
dec
push
push
jns
aas
rcl
or
sahf
sub
orb
outsb
adc
adcb
mov
mov
sbb
xchg
mov
pop
xchg
add
sahf
push
and
xor
pusha
pop
ss
xor
gs
cmpsl
sbb
js
adc
add
stos
pop
arpl
mov
sbb
jge
xchg
inc
and
lea
cmp
bnd
sub
ljmp
repz
fs
cltd
or
and
testb
or
pop
sbb
sbb
jmp
int
cmp
not
mov
sbb
sbb
jg
jae
js
push
cmp
xor
rcll
or
or
fimuls
cs
pop
sub
mov
stos
test
cltd
ds
movzbl
mov
push
imul
ret
jmp
iret
out
sbb
nop
jno
mov
push
rcll
loope
mov
pop
mov
dec
pop
iret
dec
aam
arpl
or
jmp
stc
test
scas
xchg
push
cmp
sti
push
jge
mov
pushl
mov
or
add
jo
jne
xchg
sub
fldl
cmp
mov
lods
cli
dec
mov
inc
ret
into
into
popa
xor
ljmp
nop
insl
rorl
cli
shlb
jne
fnstenv
adc
mov
fmuls
addr16
dec
mov
fisttps
inc
dec
loopne
sbb
lds
mov
je
sub
mov
popa
fwait
xor
xchg
imul
test
shlb
cmp
inc
pop
fisubs
or
icebp
jbe
jge
mov
jecxz
jl
dec
mov
arpl
ret
test
dec
sub
xchg
iret
add
icebp
mov
fistl
cmp
aam
add
xlat
adc
inc
pop
ja
and
add
add
gs
add
sbb
lret
mov
fimull
cmp
loope
int
test
jnp
rcr
cmp
sub
jb
sub
punpcklbw
ljmp
addb
idivl
push
fistps
sub
jb
add
push
xchg
jl
push
cltd
lock
je
popf
fdivrl
inc
cmpsb
and
int
push
sub
fbld
sub
add
inc
add
mov
push
xorl
and
fs
shr
outsl
into
aam
rol
lods
mov
aaa
das
sbb
mov
mov
andb
mov
xchg
mov
jmp
push
outsb
into
push
ds
lock
fisttpll
mov
inc
push
sub
mov
xchg
cltd
push
shlb
cmpsb
cmc
stos
inc
insb
add
and
or
dec
push
mov
cmpsl
push
lea
icebp
aad
cmpsl
jle
inc
and
jnp
mov
lahf
scas
test
flds
add
cmp
rol
cmp
sbb
inc
mov
push
xor
lcall
adc
mov
mov
dec
jb
push
and
ret
xchg
inc
push
xchg
inc
adc
cmp
xlat
mov
jmp
mov
nop
ffreep
jp
mov
pop
ficomps
pop
inc
call
mov
cmpsb
add
fimuls
sbb
dec
imul
push
in
cld
jns
jg
popf
clc
das
dec
xor
cmc
rcrl
mov
std
add
adc
inc
out
mov
inc
hlt
dec
ret
stos
mov
idivl
bound
push
jle
push
pusha
xchg
in
xchg
push
mov
xchg
and
push
adc
jo
pop
ds
adc
mov
inc
jae
pop
mov
sarl
fcomps
jbe
cmp
mov
sub
xchg
add
adc
enter
lret
imul
lods
es
sbb
test
test
jge
or
lock
les
std
ret
cmc
insb
ficomps
cwtl
inc
inc
jnp
fnstenv
or
dec
int
dec
js
movsb
push
int
mov
mov
stos
mov
pop
jo
enter
sub
rcrl
js
mov
fmull
sub
xchg
or
jbe
mov
sbb
push
jnp
nop
mov
jbe
out
aad
negb
sub
das
jecxz
arpl
sub
jne
cs
repz
loop
lret
inc
out
imulb
outsl
repz
ss
in
xchg
jp
je
rcr
or
push
pop
jmp
in
in
orl
insl
xor
popf
add
add
incb
loop
jo
mov
roll
push
pmullw
mov
lret
roll
icebp
mov
sbb
mov
pop
cld
jbe
sahf
xor
cmp
cld
jl
cmpsb
mov
mov
jl
nop
xchg
lods
dec
imul
or
adc
inc
stos
sbb
rcr
rcll
sahf
or
adc
int
cmp
mov
jnp
ret
inc
fsubrl
cli
xor
pop
movsl
movl
adcl
movl
sbb
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
xor
xor
add
jmp
lret
ret
ds
mov
lret
xadd
xor
aaa
mov
jae
js
lret
inc
dec
fs
popf
insb
mov
sbb
aam
das
push
dec
jp
mov
outsb
adc
popf
data16
ds
movsb
in
sbb
insl
bound
aaa
fbstp
adc
add
mov
add
fiadds
xor
xlat
push
push
xchg
mov
ret
sarl
int
mov
icebp
imul
and
outsb
inc
call
cltd
popf
pusha
sub
imul
movsl
loope
sahf
lahf
inc
mov
into
mov
ficoml
push
idivb
mov
inc
mov
fisubrl
test
and
inc
outsl
es
cmp
ljmp
ljmp
cmpsb
out
mov
or
xchg
pop
ftst
idivb
dec
adc
xchg
pusha
sahf
push
jmp
aaa
inc
jo
pop
pushf
pop
ret
push
add
push
out
or
inc
adc
jnp
adc
xchg
adc
sahf
cmp
adc
sarl
mov
pop
mov
xchg
push
test
sub
roll
jo
dec
jp
pop
je
xchg
and
jge
mov
jg
push
arpl
or
mov
jmp
cltd
fistps
fistpll
mov
ret
arpl
and
mov
mov
fbld
repnz
push
nop
sub
sub
xchg
mov
mov
sti
out
movl
adc
and
std
xor
subl
and
mov
sub
js
jl
add
scas
loope
dec
and
pop
movsb
shll
jle
call
jge
call
push
les
xorl
lods
call
xor
out
push
xor
es
scas
mov
adc
pop
xchg
add
lds
iret
in
and
sub
sub
push
mov
jnp
cli
rcrb
xor
jno
add
mov
pop
add
in
push
jg
fistps
call
into
ds
lock
pushf
push
inc
add
jno
fcomip
mov
mov
push
outsb
inc
cli
gs
mov
jecxz
ja
mov
movsl
stc
test
ret
in
mov
inc
mov
lcall
js
pop
push
mov
push
jno
test
pusha
add
cltd
nop
scas
fisttpll
sbb
or
insb
mov
inc
fildll
lods
add
pop
pop
out
mov
push
sub
or
cmp
lcall
cmpb
push
test
daa
jnp
mov
stos
jbe
cmp
pop
mov
cmpsl
std
mov
movl
lods
sbb
inc
ss
aam
int
bound
in
aas
daa
es
addb
out
xchg
jmp
push
inc
out
fwait
ja
mov
fsubs
pop
ja
pop
enter
leave
lret
ret
ficomps
sub
xchg
xchg
bound
das
mov
dec
imulb
xor
add
clc
mov
loope
pop
inc
inc
ds
or
cmpl
and
push
daa
out
cmp
cmp
adc
andb
xlat
arpl
sub
pop
pop
fisubs
test
xor
push
cld
sbb
fcmovnbe
fucomi
or
pop
push
lret
mov
punpcklbw
sub
cld
repnz
inc
mov
xlat
add
das
cs
push
repz
dec
cwtl
out
xor
imul
test
xchg
pop
push
sbb
mov
xchg
shll
arpl
inc
sarl
dec
icebp
and
dec
fisttpl
mov
mov
loope
cmp
in
mov
hlt
movsb
xlat
mov
lock
push
dec
xor
pop
es
add
mov
or
dec
pop
mov
add
insl
mov
push
xor
inc
inc
cmpsb
fisubl
and
push
dec
mov
aas
loope
repnz
clc
cld
mov
pop
dec
pop
repz
aas
ffreep
xorl
stos
aaa
loop
movsl
popa
push
jo
stos
in
outsl
push
jl
aam
mov
ret
lea
sub
bound
sbb
je
fidivl
inc
testl
out
repnz
jne
outsb
je
push
loop
out
lret
sbb
mov
mov
fidivs
mov
and
cmp
mov
test
inc
add
add
add
add
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
adc
jmp
mov
rcl
fcmovnb
fnstcw
or
jne
push
cwtl
push
icebp
jg
jae
js
and
cmpsb
cmpsl
push
inc
xor
repz
xchg
sub
mov
subb
adc
in
pop
jne
mov
aam
cmp
jbe
testl
adc
lret
mov
xor
sub
jg
cmp
test
jne
cmpps
aam
aad
adc
sub
inc
hlt
enter
xchg
dec
and
cmp
fst
xor
or
xor
push
data16
jae
dec
adc
and
jb
sti
cwtl
cltd
cmp
shll
fsubrp
inc
dec
arpl
add
adc
jmp
cmp
adc
popa
jb
fildll
cmp
push
xor
pop
inc
shlb
mov
jo
push
out
jae
mov
rclw
push
lcall
addr16
movsl
in
sub
mov
movsb
scas
push
dec
add
pop
push
out
sahf
mov
fwait
push
outsw
or
popf
xor
inc
sbb
ss
popa
lea
pop
mov
jp
mov
in
and
cmp
sbbl
loopne
and
andb
cmp
subb
daa
fwait
jbe
sbb
mov
pop
sti
addr16
nop
clc
adc
add
imul
mov
jmp
add
dec
repnz
push
cwtl
sub
xchg
jecxz
nop
int3
push
gs
pusha
and
mov
test
rcrb
sub
jl
pop
in
ljmp
loop
fsubl
xchg
pop
xor
out
aas
aas
dec
dec
mov
jp
mov
sarl
cs
and
sub
add
fimull
out
inc
add
cmp
mov
lock
aad
scas
mov
sbb
mov
cli
fildl
mov
or
lods
aam
jns
dec
enter
stos
cmp
movsl
sub
imul
mov
or
jle
clc
shll
jg
inc
inc
stos
add
and
fnstsw
movsl
mov
adc
and
xor
or
fsubp
mov
xor
or
mov
cmp
sbb
insb
or
add
aad
cmp
or
and
sub
daa
call
push
popa
rcll
insb
stos
in
sub
mov
pushf
lret
mov
jae
sar
loope
mov
bound
jmp
fstps
mov
lock
cmpsb
mov
jo
rclb
stos
insl
mov
mov
push
dec
ds
jg
and
xor
mov
loope
adc
lods
mov
cmpsb
or
leave
mov
pusha
dec
xor
aam
sub
xchg
aad
stc
dec
mov
push
aas
dec
and
fidivs
fwait
out
mov
pop
mov
add
fdiv
jge
xchg
aas
xchg
sbb
or
xchg
cmp
mov
fdivp
inc
xchg
xchg
mov
fs
std
or
in
cmp
xchg
and
loope
int
push
js
test
sbb
jl
movsb
dec
add
xor
xchg
xor
rcll
and
repz
arpl
fisttpll
or
pop
pushf
pop
lods
fcoms
jg
js
sahf
xor
or
dec
and
in
pop
ljmp
js
sub
imul
shlb
push
dec
outsb
sub
sbb
roll
push
fwait
mov
cli
ret
and
inc
in
or
loop
fistpll
lcall
and
pop
mov
pushf
sub
push
adc
mov
sub
dec
iret
and
mov
aaa
ljmp
in
xchg
pop
cmp
mov
subl
jns
and
cltd
lock
sbb
loope
sbb
mov
push
sbb
mov
aad
xchg
aaa
cmp
mov
inc
mov
in
sbb
push
stos
repnz
push
jecxz
push
dec
mov
jp
fists
xchg
lcall
xchg
pop
orb
adc
xchg
gs
ja
popa
mov
inc
cwtl
outsl
and
push
cmp
push
int3
pusha
push
fldlg2
enter
test
push
mov
cmp
scas
sti
cli
pop
jecxz
cld
sub
pop
lea
inc
imul
pop
repz
mov
xchg
sahf
adc
jecxz
out
fs
sbb
fdivrl
jns
inc
repnz
setno
xchg
dec
cld
mov
push
bound
int3
cmp
loop
add
jmp
lret
leave
int
int
fxch
sub
and
jns
jg
jae
js
xchg
pop
adc
sbb
cmp
inc
mov
push
cmp
test
ror
add
aad
mov
push
sbb
xor
jb
sub
dec
fistpll
dec
std
push
aad
xor
mov
jae
pop
testl
arpl
mov
jp
cmp
sub
orl
imul
jl
xchg
fbstp
xchg
sbb
fimull
jno
mov
cmp
loop
mov
xchg
in
jg
lcallw
inc
mov
jl
push
xor
leave
jp
mov
lock
inc
pop
leave
scas
or
gs
sub
sub
adc
sbb
test
rorb
mov
cltd
in
test
add
jb
in
pop
dec
lds
add
or
jno
lahf
push
inc
cli
fdivrp
and
int
dec
jo
mov
outsb
mov
sub
sub
insl
jae
mov
fwait
test
push
ja
adc
adc
outsl
pop
jg
je
mov
fbld
sbb
aaa
and
add
div
mov
outsl
rclb
push
call
sub
hlt
jp
les
push
shlb
and
jbe
cmp
mov
xchg
fdivs
dec
cmp
jmp
mov
stc
push
adc
int
mov
push
jns
push
inc
addr16
xor
xchg
in
aas
pop
fildl
leave
sbb
and
jb
mov
bound
test
movsb
xchg
scas
loop
lods
jno
in
push
sarl
iret
sahf
loop
mov
out
aaa
adc
cmp
in
icebp
arpl
mov
cmp
pop
cmpsl
daa
add
sub
inc
dec
and
cmpsl
js
repz
and
push
sbb
cwtl
xor
jns
js
fprem
pop
or
rclb
repz
jnp
cli
cld
fdivrl
sbb
mov
mull
loop
out
push
adc
loop
mov
sub
mov
pop
adc
xor
hlt
rorl
jae
dec
cmp
mov
popa
mov
mov
popf
int
lds
rolb
insb
test
add
cltd
nop
lret
or
push
xchg
adc
mov
xor
lds
xchg
out
xor
pop
mov
call
test
in
orl
sbb
jp
xchg
mov
jb
sub
jmp
fwait
aas
dec
das
cs
jmp
mov
mov
jge
push
imul
jge
loope
packuswb
pop
or
adc
test
sub
mov
fiadds
dec
mov
pushf
xor
sbb
ficomps
shlb
bound
and
arpl
dec
sti
imul
xchg
clc
dec
std
lahf
ja
testb
pop
outsb
cmpsl
push
fiaddl
sbb
sbb
adc
jle
scas
xor
addl
pop
mov
add
jge
icebp
lods
sahf
and
scas
and
add
push
inc
scas
test
cltd
cwtl
test
jl
lods
mov
hlt
negl
rcr
js
test
sbb
xor
xor
mov
push
xor
int
mov
stos
xchg
cwtl
enter
mov
pop
cmp
adc
stos
pop
int3
pushf
ret
fdivrl
push
mov
popf
icebp
add
ljmp
loop
pop
add
xor
lahf
mov
lods
adc
sbb
xor
jle
inc
add
push
fsub
fidivs
and
divb
roll
negl
inc
arpl
xor
inc
push
inc
xor
dec
cmpsb
mov
pop
out
pop
pop
add
test
xchg
in
add
sbb
dec
jp
cli
pop
stos
sbb
dec
sahf
sbb
xchg
sub
dec
push
or
pop
mov
mov
js
and
or
sbb
or
adc
push
xchg
xchg
adc
in
lds
pop
mov
xchg
dec
dec
inc
cmp
inc
cmp
push
pop
jno
mov
insb
pop
cmp
sbb
mov
psubd
inc
inc
insb
or
popf
mov
mov
adc
jge
adc
jmp
popf
test
stos
cmp
subl
jl
outsb
jge
aad
push
iret
push
and
cwtl
movl
movl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
jmp
iret
cmp
fld
outsl
fisubrs
insb
clc
jg
jae
js
stc
icebp
test
pushf
divl
in
movsb
push
mov
mov
jb
or
dec
mov
cmp
adc
sbb
lds
test
insl
inc
rclb
sbb
incb
cmp
push
xchg
cs
inc
arpl
in
push
mov
xchg
pop
lret
imul
arpl
ljmp
enter
xchg
pop
dec
loopne
cwtl
lret
fwait
loopne
adc
fiaddl
cli
cmp
mov
push
movsb
lret
xor
shr
cmc
nop
call
mov
mov
xchg
jae
mov
sbb
jo
outsl
cmp
jp
jbe
jg
push
inc
sahf
and
pusha
ret
inc
test
roll
vpshufd
popf
imul
mov
loope
adcb
push
add
dec
popa
dec
sahf
push
movsb
divb
cmp
and
mov
cmpsb
mov
cld
mov
fs
loop
or
out
pop
shrb
or
test
mov
xchg
xorl
in
mov
xchg
out
jne
mov
mov
adc
cmp
icebp
mov
mov
je
mov
mov
xor
sti
xchg
int3
mov
xchg
lret
aas
int
lea
je
call
mov
inc
cmpsb
mov
adc
popl
shlb
lock
push
and
mov
adc
mov
ds
dec
inc
pop
lahf
jns
jle
cmp
lods
mov
imul
js
and
repz
stos
add
notb
cmp
mov
in
jmp
jg
inc
outsb
popf
lea
es
imul
out
jmp
jg
cld
ds
push
sbb
xor
inc
dec
cmpsb
out
loop
sub
scas
pop
insl
hlt
xor
inc
jle
cltd
stos
push
pushf
xor
std
hlt
sti
cmp
mov
pop
jmp
fwait
sbb
out
clc
push
sub
imul
bound
scas
enter
jbe
stos
mov
cmc
stc
xchg
and
shrl
adc
dec
push
push
mov
xchg
in
cmpsb
push
dec
push
nopl
mov
xor
inc
and
pop
jno
scas
xor
xor
fcomps
mov
dec
xchg
adc
enter
sub
pop
aas
adc
in
outsb
mov
stc
rcl
mov
cs
or
push
repz
dec
lahf
mov
int3
pop
outsl
xchg
addr16
jbe
out
cmpsb
mov
sbb
outsl
sub
outsl
and
pop
jge
inc
out
mov
adc
jae
pushf
sub
jle
push
shrl
jle
add
insl
push
in
push
jmp
dec
es
mov
loopne
mov
xor
mov
icebp
sarb
int
gs
pop
or
or
jge
lea
adc
mov
mov
ss
pop
je
push
test
dec
cmp
lret
xchg
sahf
xchg
das
jae
das
stc
movsb
test
outsl
sub
test
lgs
fisubrs
pop
ljmp
mov
or
rcll
cli
jecxz
mov
xchg
or
into
popf
jg
gs
cmp
js
lods
jge
lock
jb
sbb
cltd
adc
repz
mov
dec
dec
subl
scas
xlat
and
jb
pusha
sub
out
bound
mov
xchg
rorl
push
cld
clc
sub
in
ficomps
and
insl
pop
adc
push
subl
push
push
mov
pusha
jae
ret
jmp
cld
outsl
test
pop
jne
out
dec
notb
data16
les
or
jmp
cmpsl
mov
xlat
cmpsb
jecxz
add
jns
loop
cmp
ret
pop
popf
add
sub
lods
dec
push
sub
repnz
insl
xchg
popa
or
add
and
test
sbb
push
mov
jg
push
push
lahf
les
pop
lds
inc
int3
test
mov
mov
repnz
shrb
or
call
sub
mov
jle
bswap
scas
fs
push
dec
outsb
ss
pop
dec
lret
popa
jle
jns
sub
add
jne
pop
jle
cltd
push
mov
int
jno
into
hlt
push
hlt
mov
arpl
pushf
clc
add
mov
lcall
loope
xor
mov
notl
add
cmp
movl
je
push
movl
jmp
mov
adc
jmp
lret
rol
lret
lret
and
adc
xor
jmp
js
jl
js
pop
sbbl
fcoml
insb
jbe
lcall
mov
popf
std
jecxz
dec
aam
and
shll
mov
ljmp
pop
fistpll
mov
push
xchg
stc
call
stc
lods
inc
mov
xor
jp
xchg
and
add
dec
arpl
mov
lds
add
mov
out
subl
dec
ljmp
aad
push
jp
shll
mov
xor
add
repnz
sub
pop
mov
mov
insl
fbld
stc
cmpsb
adc
add
lock
imul
ss
dec
xor
dec
je
shl
lods
test
push
mov
movl
stos
xor
sbb
mov
jb
sbb
cmp
pop
sub
xor
xchg
popl
or
enter
mov
daa
lret
mov
push
pop
sub
adc
xchg
ficoml
jns
cmp
mov
xor
shrl
push
movsl
dec
lcall
movmskps
sub
sub
lcall
mov
dec
pop
jecxz
adc
orl
movb
pop
sub
out
or
dec
adc
pop
push
ror
cmpsl
xor
incb
sub
xchg
mov
clc
lods
adcl
test
loop
sbb
repz
test
rcl
sbb
je
adc
mov
sub
iret
insl
std
cmpl
inc
mov
outsb
mov
mov
sbb
add
ja
adc
push
stos
cmp
xor
cld
or
gs
push
out
movsl
mov
das
lcall
sub
lahf
jg
and
icebp
sub
xor
out
cmpsb
test
jns
mov
and
jne
loope
or
sub
lds
loopne
pop
cmpsl
and
inc
jg
lods
test
adcl
aas
into
sub
push
xchg
cmp
or
or
pushf
ffreep
jp
rcl
inc
and
cmp
push
add
imul
xor
fsts
cmp
scas
mov
in
stos
cltd
ss
fcmovbe
push
jne
lock
test
nop
std
fstps
sub
jle
pushf
mov
sbb
sub
popf
xchg
sub
les
add
jae
mov
jnp
xchg
mov
cmp
pop
cmp
fwait
xchg
cmp
test
sub
push
std
or
iret
sbb
sti
aas
imul
push
xlat
shll
jp
dec
adc
and
jns
cs
sarl
leave
loopne
mov
lods
inc
out
or
lock
je
jns
ret
push
xor
mov
cmp
pop
push
loopw
repnz
jle
xor
clc
and
jne
les
sub
mov
jle
jecxz
or
push
aas
lret
cs
int3
idiv
test
iret
cmpsl
insb
push
imul
push
push
cmpsl
int
lock
mov
jne
mov
out
ja
cmc
cmp
dec
std
outsl
push
mov
sbb
adc
pop
xlat
lds
xchg
movsb
push
mov
inc
stos
and
xchg
mov
mov
pop
outsb
cmp
aad
loop
cmp
mov
sub
mov
dec
fst
and
pop
or
nop
cwtl
sbb
daa
sbb
daa
jnp
inc
push
test
jp
mov
pop
call
jge
sub
push
mov
scas
adc
pop
scas
jecxz
cwtl
pop
inc
in
rcrb
pushf
cltd
sub
sbb
jp
fdivs
ds
loop
addl
shrb
jg
scas
jecxz
xchg
lret
movsl
jmp
clc
push
xchg
pusha
pop
loopne
fidivrl
lea
xorb
add
stos
push
sarl
pop
push
in
movsb
and
aas
andl
pushf
add
dec
orw
xchg
mov
aas
aas
mov
and
xor
sub
iret
inc
sbb
sub
pop
cs
int3
insl
ret
out
push
or
add
add
insl
push
cmc
mov
sbb
jbe
rorl
sub
dec
stos
ret
dec
jo
jmp
in
or
lcall
mov
call
cmp
dec
dec
ljmp
sbb
pop
add
sub
mov
addl
xor
andl
add
movl
jmp
int
enter
int
stos
nop
dec
jmp
jg
jae
js
lahf
sbb
pop
sbb
xchg
cmpl
cmc
dec
mov
lock
inc
xor
insl
test
iret
mov
jle
imul
outsw
test
push
jecxz
pop
xor
call
ja
jne
push
push
pusha
xchg
rcll
and
jno
in
test
add
or
xlat
push
push
jb
mov
cli
rorb
jle
xchg
sbb
and
lea
push
sbb
mov
dec
dec
rorl
stc
loope
mov
ds
lock
push
pop
pop
int3
sub
scas
shlb
stos
mov
sbb
movsb
xchg
dec
adc
pop
or
add
pop
cmp
add
jae
decl
xor
lea
mov
inc
cmp
xor
ud0
jmp
cmp
dec
mov
and
adc
orl
in
pop
push
cmpsl
idivb
iret
mov
insl
and
addr16
jmp
mov
adc
jne
add
add
sub
cs
cmp
mov
inc
jmp
adc
mov
xchg
fsqrt
neg
scas
jb
mov
push
mov
clc
into
jne
xchg
push
jmp
push
sbb
aad
add
jae
jl
xor
cli
repz
pushf
pop
pop
dec
inc
push
lcall
aas
icebp
jo
sarb
jno
test
popa
clc
je
pop
add
ficomps
repz
push
cmpsl
nop
mov
mov
loopne
pop
pop
fwait
daa
jge
mov
add
xor
mov
push
test
inc
subl
jns
sbb
jge
aad
inc
xor
mov
test
call
push
stc
cwtl
pop
aas
roll
jns
roll
shlb
push
or
cmp
mov
loop
shlb
mov
and
mov
mov
xor
xlat
push
lcall
dec
les
hlt
pop
cmp
cmp
ror
icebp
or
jle
rcrl
mov
jbe
popa
sub
in
or
adc
scas
pop
dec
sar
outsb
mov
movsl
outsb
pop
pusha
pop
xor
jle
js
sub
and
jne
mov
add
out
mov
and
je
push
ret
dec
sub
dec
daa
in
push
mov
inc
dec
fnstcw
push
xchg
ret
push
or
jbe
insl
and
scas
dec
jmp
inc
stos
adc
cli
push
add
adc
mov
sub
mov
shrb
fnstsw
cmp
sbb
mov
or
push
and
jo
sbb
movsl
and
loop
inc
psubw
mull
cmpsl
mov
xor
scas
xor
lods
xchg
lret
stc
inc
imul
data16
cwtl
dec
dec
cmp
mov
fcomps
imul
mov
or
repnz
addr16
dec
xlat
xor
jmp
popa
jae
xchg
repnz
fsts
movsb
jle
dec
mov
in
cli
neg
mov
push
dec
cs
or
dec
rcr
stos
xchg
pop
add
addb
jecxz
push
cs
cli
and
xor
pop
scas
nop
iret
xor
repz
repnz
into
scas
pop
lcall
shll
stc
sbb
xchg
ds
les
rcl
sbb
and
add
and
mov
lahf
xchg
sbb
sqrtps
cmp
mov
xchg
bound
pop
loopne
mov
xchg
xchg
das
mov
add
pusha
add
arpl
arpl
sbb
or
adc
jp
outsl
test
out
and
hlt
and
imul
push
cmpsl
xor
out
push
lcall
lret
int3
test
push
int3
sarl
sbbl
and
xor
in
fildll
lret
cmpsl
sub
cwtl
or
jecxz
decl
adc
sub
orl
mov
bound
mov
daa
add
mov
xor
into
xchg
xchg
das
jns
fcomi
lahf
fdivr
lahf
mov
inc
xor
push
mov
jle
push
sub
cmp
add
mov
pop
xor
punpckhbw
outsl
jne
and
xor
push
out
inc
lret
cmpsl
jge
add
xchg
filds
mov
or
aam
push
mov
xchg
jmp
xor
idivl
cli
jmp
lret
leave
shrl
mov
inc
dec
mov
jae
js
jno
aad
movsb
mov
adc
pop
cmp
sub
mov
std
je
popf
add
insl
or
dec
cld
loope
enter
mov
js,pn
scas
cltd
daa
popf
or
mov
push
inc
aas
ljmp
add
jb
push
dec
or
xor
cmp
loope
pop
daa
loope
lods
fmuls
out
fisttpl
dec
imul
xchg
pop
out
pop
out
xchg
mov
rcll
insl
xchg
inc
adc
dec
sbbl
inc
cmpl
xor
lea
mov
mov
popf
out
iret
pop
ror
pop
dec
bound
icebp
mov
dec
add
push
cmpsl
imul
cwtl
cwtl
xchg
inc
cmpb
mov
mov
movsb
fwait
push
inc
xlat
cmp
push
and
pusha
jne
push
jmp
outsl
lods
or
lret
mov
mov
cmp
sti
fadds
adc
jnp
stos
outsl
jb
gs
or
cli
xor
and
adc
nop
xchg
xchg
mov
mov
pop
iret
inc
les
inc
scas
cmc
mov
pop
jne
popf
cmp
ljmp
mov
dec
into
xchg
pop
jmp
dec
pop
cld
xchg
div
loope
dec
or
adc
lds
sub
push
movsl
jne
jno
xor
push
std
sub
pop
rcrl
pop
mov
sbb
dec
jae
sbb
call
cmp
push
sub
sbb
fsubs
cmp
rcr
faddl
pop
inc
outsb
rcr
orl
xor
or
mov
xchg
push
adc
decl
pmaxub
pop
xor
jae
sahf
les
lret
push
mov
mov
cmp
sahf
js
repnz
rorl
mov
lahf
daa
int3
and
mov
fldl
or
sub
test
inc
nop
and
int
jb
dec
add
das
cmp
pop
mov
pop
cmp
mov
rclb
in
dec
negl
sbb
es
lret
hlt
xchg
int3
sub
add
mov
mov
inc
bound
pusha
mov
mov
arpl
inc
rorb
fmuls
jmp
add
dec
adc
mov
nop
cmp
push
je
jne
in
je
push
mov
mov
jno
in
or
je
pop
jnp
movsb
and
cmp
fldcw
pop
stc
cmpsb
sub
insl
fwait
sub
jl
cmc
sbb
mov
ljmp
mov
mov
mov
mov
btc
outsl
mov
shrl
loopne
or
lcall
or
aam
in
faddp
rorb
pop
icebp
test
sub
loop
or
movsl
fists
inc
mov
arpl
mov
fsubl
movsb
cld
xor
dec
mov
push
and
jns
mov
jle
std
sarb
sbbl
mov
pop
icebp
jae
imul
push
xchg
cli
and
imul
call
adc
test
push
cs
movsb
loop
cmpsb
jae
adc
ds
pop
xchg
mov
lahf
int3
shr
fisubl
test
adc
mov
js
popf
in
xor
dec
aad
popa
sub
out
aas
sub
mov
dec
cmpb
fbstp
pop
nop
pop
adc
loop
lret
push
std
int
dec
arpl
lods
test
data16
adc
in
icebp
imull
incb
movsb
xchg
mov
pop
adc
jno
jbe
sbb
lods
jns
pop
push
repnz
mov
cmpsl
gs
jle
insl
push
bound
dec
hlt
hlt
je
cld
lds
in
xor
jnp
or
adcl
cwtl
mov
xchg
xlat
xor
fwait
pop
arpl
sahf
aas
cwtl
stc
in
mov
dec
sti
xchg
cmp
test
inc
jns
movsbl
dec
test
in
xlat
out
fucom
push
rcrl
jns
cmp
inc
clc
xor
xchg
fistpll
push
repnz
adc
pop
and
stos
repz
mov
sarb
cmpsb
clc
enter
test
mov
sarb
pop
dec
push
loopne
jb
or
dec
mov
push
jno
popf
push
sbb
sbb
cmp
out
aaa
push
int
pop
cmpsl
lcall
int3
mov
fwait
aaa
mov
jo
adc
xchg
push
mov
mov
xchg
fildl
adc
rcrl
jg
or
jg
orb
add
cld
jmp
into
iret
iret
cmp
cmp
shl
aad
je
and
push
inc
mov
jae
js
ds
dec
or
push
call
mov
mov
xchg
adc
mov
lock
ret
inc
mov
jmp
stos
lds
sahf
out
scas
cs
pop
sbb
hlt
jge
mov
lret
push
or
cs
dec
je
fadd
clc
lcall
sub
rorl
cwtl
push
mov
iret
lahf
xor
push
pop
or
mov
mov
std
ret
push
push
or
insl
and
pop
adc
dec
popa
test
stos
sub
push
int3
pop
xchg
sub
mov
lahf
push
xchg
inc
push
lret
push
ret
daa
rcl
ja
mov
jnp
les
ret
scas
and
imul
mov
mov
gs
pop
test
inc
popf
sahf
push
or
sub
push
sub
xchg
mov
lock
les
sbb
loop
jb
mov
mov
jg
test
sahf
adc
ss
xchg
jo
add
mov
addr16
xchg
ljmp
sbb
adc
cs
in
clc
clc
sarl
sbbl
je
int3
imul
rcr
fs
les
jg
lods
dec
inc
lahf
in
mov
aaa
je
cmpsb
std
dec
jmp
insb
xchg
mov
fcoms
xchg
adc
jbe
out
and
insl
mov
inc
dec
inc
sub
jbe
lret
dec
jae
xchg
push
fs
cmp
push
sbbl
dec
mov
jecxz
mov
lret
sahf
lds
lret
push
lock
push
movsl
out
xchg
sbb
jecxz
push
aaa
cltd
push
adc
fwait
add
test
sub
mov
sbb
data16
iret
repz
imul
mov
mov
notb
hlt
cld
push
inc
add
push
or
dec
push
mov
imul
mov
daa
nop
pop
ficomps
cwtl
xor
inc
daa
adcl
cmp
cld
test
pop
xor
loop
push
add
ss
dec
sub
ljmp
dec
xorb
xchg
scas
aad
push
dec
dec
and
enter
or
fistpll
mov
mov
js
cmp
popfw
stos
shll
add
dec
aam
cwtd
sub
lret
xor
int3
jmp
shrl
cs
mov
and
and
mov
rclb
xchg
xchg
xchg
pushf
mov
mov
ret
xor
leave
mov
jg
stc
outsl
dec
push
fxch
push
rcrl
dec
cmp
cltd
leave
inc
out
int3
sub
enter
nop
add
aas
outsl
je
cmpsb
mov
lods
fdivrl
xchg
cwtl
arpl
iret
jp
fnstsw
add
cmp
cltd
fldlg2
loope
insb
xlat
xor
xor
and
in
dec
mov
icebp
cmc
xchg
test
jge
cltd
das
or
mov
xor
push
stos
out
mov
nop
loop
mov
ss
adc
pusha
mov
add
or
jg
xor
enter
mov
pop
hlt
movsb
xor
mov
xor
mov
cld
push
mov
pop
stc
aam
dec
pop
push
dec
cs
fcoms
xor
hlt
pusha
lock
arpl
outsb
inc
xchg
out
xchg
lcall
mov
jp
or
inc
fisubl
xchg
filds
sbb
xchg
sbb
out
mov
pop
push
mov
push
cmpsl
mov
fwait
pop
xor
mov
out
mov
cmpsb
out
test
les
jmp
ja
sbb
out
mov
movl
pop
mov
xchg
mov
data16
ret
shrl
xor
cmp
push
mov
push
sbb
scas
adc
sbb
jle
in
jae
ljmp
mov
sbb
pop
adc
cmovae
mov
in
mov
insl
dec
inc
cltd
call
adc
in
or
pop
outsb
out
ljmp
push
push
ljmp
sub
jg
push
loop
mov
adc
sbb
jnp
scas
in
lds
test
aas
cs
mov
and
loopne
ljmp
xchg
outsl
out
ret
mov
ja
add
or
fsubr
jl
mov
mov
scas
sti
and
fisubrl
mov
xor
sbb
pushf
decb
add
xor
lods
pop
mov
cmp
inc
dec
mov
pop
jns
mov
ret
sub
lret
jle
jbe
js
in
stos
xor
inc
jo
clc
out
pop
jne
and
pop
mov
add
lret
cmp
aam
fistl
mov
jg
jae
js
cmp
xchg
push
fsubs
or
lds
out
arpl
xchg
xor
adc
pop
dec
sbb
aad
addr16
fcmovnb
jb
shrl
bound
cmpsl
out
jg
fs
or
add
lret
mov
shll
xchg
mov
in
mov
cmp
roll
out
pop
push
int
jbe
or
adc
lea
in
lods
shrb
xchg
fidivl
shl
pop
push
mov
adc
adc
or
xor
mov
add
adc
inc
test
aam
std
jo
sti
add
lods
and
adc
pop
adc
push
sbb
data16
mov
push
xchg
mov
push
fwait
mov
jl
sti
add
pop
in
adc
loop
outsl
jno
add
xchg
sti
arpl
adc
pop
pop
pop
sbb
mov
imul
and
enter
push
dec
xchg
lock
gs
mov
out
sub
pop
outsb
lret
or
loopne
stc
jb
pop
cs
sbbb
cs
adc
fs
fimull
aas
push
mov
lret
sbb
mov
pop
imul
jl
out
lods
and
mov
ret
adc
addr16
std
sub
mov
xor
sub
bound
sbb
inc
fmull
jbe
push
inc
jge
xor
pushf
pusha
mov
into
push
xor
sub
push
and
jecxz
add
mov
insl
leave
hlt
sub
in
and
xchg
mov
cmp
sahf
push
loop
xchg
inc
fsts
popa
sti
pusha
sub
pop
sti
mov
loope
mov
and
sub
inc
div
in
movsl
pop
imul
jo
sbb
loopne
inc
pop
cwtl
jl
xlat
lret
mov
adc
cs
xchg
lret
or
xor
mov
mov
cmp
cli
inc
cltd
rdtsc
call
mov
add
xchg
mov
xchg
sbb
mov
ret
sbb
cs
xor
gs
or
sbb
imul
push
jnp
out
jbe
jae
xor
mov
lcall
jle
out
push
and
sbb
add
jg
mov
out
std
jno
xor
jmp
arpl
movsl
faddl
adc
pusha
cmp
movsl
jne
out
inc
outsl
ds
mov
mov
ret
clc
enter
aas
mov
jns
jb
dec
testl
mov
inc
push
daa
mov
icebp
clc
ds
dec
cmp
cli
xchg
lods
sbb
popf
push
test
rcr
adc
push
mov
inc
or
in
sub
mov
jb
jmp
mov
shrl
mov
push
xlat
pop
icebp
sbb
add
call
cmp
mov
adc
xchg
movaps
popf
cs
mov
inc
jbe
cmc
inc
jno
sbb
ljmp
fisttps
sbb
xor
andb
bound
mov
stos
lret
sub
sub
incb
sbb
push
push
mov
outsl
fcoms
xor
cmp
dec
add
push
xchg
pushf
xor
add
sbb
int3
cmp
or
mov
arpl
xor
stos
jle
sbb
repnz
cmpsb
insb
or
cmp
daa
sbb
fnstenv
inc
adc
inc
divb
push
pop
pop
cmp
jmp
xchg
xor
mov
aad
fimull
push
jp
xchg
dec
out
and
lock
pop
dec
pop
push
fucomp
jl
mov
dec
pop
lcall
xor
jb
mov
mov
sbb
lret
cmp
inc
adc
adc
stc
sub
shr
sub
loopne
lea
jle
jnp
mov
sbb
add
imul
mov
or
mov
jbe
mov
pop
cltd
int
insb
clc
add
xchg
fdivp
aad
ret
xchg
adc
xor
adc
fcoms
ss
sub
pop
insb
push
jp
pop
out
sti
xor
mov
sub
icebp
insb
mov
cli
mov
cld
lahf
sbb
push
sub
jae
icebp
mov
mov
clc
jmp
int
aad
int
sahf
pusha
mov
lret
scas
lcall
jp
out
loope
pop
inc
lock
rolb
mov
dec
arpl
push
arpl
movsb
adc
or
test
jmp
les
cs
scas
adc
xchg
popa
loop
sub
imul
clc
mov
push
shrb
push
xor
shlb
jne
cwtl
inc
jle
inc
jle
jae
test
xchg
cwtl
mov
pushf
mov
push
jl
dec
mov
mov
lret
push
cmp
cld
nop
orl
mov
pop
adc
loope
fstps
and
sub
adc
pop
add
xor
adc
jns
fsts
std
sbb
and
ret
dec
push
cmpsb
dec
mov
jp
sahf
inc
mov
fdivrl
or
out
addr16
andb
mov
push
pop
push
inc
test
out
andb
lods
and
das
dec
shlb
dec
jb
sbb
push
mov
daa
jb
rclb
mov
pop
fdivp
mov
pop
mov
xchg
mov
push
pop
and
push
aam
movb
pop
sbb
mov
jb
jns
dec
int3
pop
adc
dec
in
jae
lds
adc
xorb
loop
xchg
cld
lcall
jle
dec
push
inc
test
stos
insl
add
dec
sub
xor
jge
xchg
cmp
sub
fstpt
in
scas
xor
scas
aaa
pop
cmp
jp
lods
cwtl
mov
cli
xor
jnp
addr16
ja
lea
sbb
fldcw
inc
fcom
not
mov
f2xm1
sub
data16
push
xchg
out
fisttps
dec
pop
pop
push
add
xchg
dec
cld
xchg
or
sahf
stc
sbb
bound
rorb
inc
div
or
mov
fs
jp
mov
inc
and
jl
incb
mov
jno
inc
not
getsec
pop
xchg
lret
pop
mov
sti
test
push
shrl
sub
sbb
cmp
sbb
xor
sti
mov
mov
adc
test
cltd
lods
bound
mov
and
mov
loopne
mov
out
mov
sahf
sbb
aad
jle
ret
aam
mov
test
aaa
mov
cwtl
lret
pop
je
push
xor
enter
stos
out
jbe
loopne
pop
movsb
ficompl
dec
push
ret
inc
push
jo
pop
fnstcw
aam
sbb
cmp
jb
call
sbb
mov
fstpl
imul
mov
mov
inc
and
mov
adc
mov
push
outsl
push
inc
xor
push
jle
mov
mov
imul
add
shl
lods
imul
js
psubw
lahf
xchg
loopne
cltd
mov
pop
shrl
push
fmul
jne
inc
push
adc
out
fs
push
pop
add
das
mov
mov
ret
aaa
pop
pop
out
xchg
into
outsb
mov
sbb
cmp
es
xchg
pop
sub
sbb
push
sub
mov
shlb
test
pop
cwtl
pop
mov
mov
or
cmp
inc
pop
ds
das
les
outsw
test
sti
and
and
fisubl
out
mov
xchg
dec
and
add
inc
push
cmp
and
push
stos
fcmovnb
inc
das
cmpsb
imul
in
sti
jb
in
lcall
xchg
jb
adc
outsb
int3
pop
pop
mov
inc
mov
push
or
and
sarl
out
je
sub
sbb
or
jne
mov
push
rcrb
outsl
xor
mov
jmp
dec
xorb
xor
hlt
lods
in
jmp
ljmp
fdivl
jbe
xchg
add
sub
push
pushf
sbb
push
push
popa
nop
stos
daa
mulb
or
adc
rcrl
dec
cltd
lods
aad
addr16
adc
test
dec
ss
ja
and
cmp
mov
mov
lods
and
fsubrs
arpl
jle
mov
or
sbb
shl
sbb
mov
jno
cmpsb
outsb
dec
xor
call
pop
adc
aas
push
mov
lahf
je
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
cmp
fcmovnbe
rolb
cmp
mov
jl
js
mov
rorl
jg
cmpsb
call
cmp
jnp
mov
jae
div
sub
int3
xchg
cmp
push
mov
dec
sbb
mov
sahf
add
pushf
xor
inc
add
popa
nop
insl
jne
jmp
pop
push
jl
lcall
das
jg
sbb
xchg
pop
js
inc
jecxz
mov
inc
push
pop
add
sbb
pop
jnp
sub
push
mov
test
stos
ficomps
sub
sarb
lea
pop
rcr
mov
lret
insb
mov
inc
mov
scas
dec
xchg
pusha
jnp
and
sarb
cs
fmull
pop
cmpsl
jle
mov
and
add
dec
pop
jne
pop
mov
sbb
mov
add
ret
mov
fistps
push
push
rorl
inc
out
jmp
jbe
or
lret
popf
add
fwait
pop
xchg
out
or
push
xchg
and
jmp
sahf
pop
in
jp
cmc
insb
addr16
call
xchg
addr16
sbb
jbe
addl
jbe
pop
push
scas
or
push
lods
aam
outsb
and
jmp
mov
lret
inc
in
in
dec
iret
adc
jecxz
jbe
push
out
sbb
xchg
jae
xor
pop
and
shrl
aaa
dec
fs
lods
sbb
mov
or
aas
jnp
push
scas
jecxz
xchg
popf
dec
call
pop
mov
push
mov
js
icebp
fs
xchg
movsb
fisttps
aam
call
shlb
sub
inc
push
mov
adc
inc
repnz
xchg
repz
jle
fsubrl
mov
fcmove
hlt
cmp
cs
inc
inc
jl
jb
outsl
into
js
inc
xor
or
jmp
pop
nop
push
jge
icebp
cmpb
inc
addr16
pop
aad
insl
add
mov
mov
pop
out
hlt
lret
repz
jmp
cmovge
cmp
jmp
ficoml
cld
push
pop
add
int
rcll
jl
in
cmovg
and
nop
aas
sub
test
sub
adc
nop
mov
xor
repz
aam
pop
and
push
test
or
je
imul
push
ret
pusha
ds
and
rorb
movsl
mov
aaa
pop
mov
and
jo
mov
cmp
and
out
leave
push
mov
dec
test
in
jecxz
loopne
add
leave
sbb
ljmp
loop
out
hlt
lods
sub
or
orb
jb
jle
xorb
scas
leave
shlb
mov
ljmp
test
sub
mov
xchg
mov
xor
add
push
cmp
pop
cld
ficoms
push
cmc
sub
in
jmp
scas
xor
popf
mov
mov
push
jle
and
pop
sbb
adc
sbb
faddl
dec
push
cmc
xchg
das
and
nop
mov
and
push
in
xchg
lods
ljmp
inc
push
mov
insb
enter
sbbl
call
ret
adc
dec
mov
iret
lret
xchg
xchg
push
cmc
gs
inc
jmp
loopne
adc
les
into
into
lret
push
rorb
and
push
dec
test
stos
mov
sahf
rolb
loope
data16
jmp
and
inc
add
repnz
aas
stos
push
leave
push
daa
rol
add
jnp
lahf
add
je
stos
adc
popa
mov
mov
es
test
push
inc
clc
aad
ds
jle
adc
fildl
xchg
ret
jo
sbb
sub
sbb
mov
popa
mov
pop
roll
stc
pop
push
dec
sbb
insb
adc
push
movsl
cmp
sahf
pop
popf
cs
stc
repnz
repz
lret
push
rorl
testb
or
enter
dec
imul
out
jbe
or
lds
test
lsl
pop
push
call
sahf
mov
push
test
add
fld
movsb
inc
sbb
clc
andb
aam
je
subl
sbb
push
dec
es
cmp
jne
stos
test
dec
sub
or
mov
int
push
jb
rcll
jl
dec
idivb
hlt
inc
pop
fidivs
rorl
scas
xlat
sub
mov
mov
orl
sub
movl
jmp
aas
int3
ret
aad
aam
stc
stos
push
cmc
pop
mov
mov
js
dec
addl
sub
addr16
jae
cmovnp
xor
negb
mov
in
iret
mov
test
out
int3
lret
pop
push
mov
cs
sub
push
repz
adc
cmp
sbb
adc
cmovs
mov
adcb
adc
adc
dec
pause
xchg
xchg
xchg
cmpsb
outsl
or
sbb
negb
xchg
inc
or
cli
sbb
jmp
push
and
mov
in
push
icebp
push
push
shl
aaa
out
insb
fmull
push
fsubrs
clc
rcrl
aad
xor
jns
rcl
inc
cld
push
rorb
pop
lret
pop
cmc
ret
in
or
xchg
cmpsb
test
jecxz
lods
dec
scas
mov
jp
leave
scas
push
ljmp
mov
dec
imul
cmp
sub
adc
pop
sub
push
lret
lea
sbb
inc
test
sub
das
or
dec
sti
pop
push
mov
sbb
xor
jp
lcall
test
test
sar
inc
das
aad
test
lret
out
add
out
lcall
shrl
sahf
andb
loopne
inc
pop
fdivrp
mov
inc
jle
jp
in
es
sahf
sbb
push
icebp
imul
xchg
lret
int3
dec
imul
cltd
data16
jle
out
or
or
into
jo
or
lods
cld
das
fistpll
jmp
xor
pushf
push
dec
gs
adc
fsub
inc
add
jae
add
lds
pop
and
mov
and
cmp
mov
outsl
je
pop
xor
movsl
pop
or
imul
les
or
rorb
pop
pop
xor
pop
and
adc
popf
push
out
cmpsb
jle
xlat
dec
nop
xor
mov
in
pop
jle
cmp
push
sub
cli
inc
int3
mov
cmp
scas
pop
sbb
add
cmpsl
das
ret
adc
and
inc
insb
jnp
test
loope
data16
mov
pusha
jmp
loopne
in
xchg
sub
jg
xchg
cld
scas
fistpll
jne
add
cli
or
inc
ja
hlt
roll
sbb
and
imulb
inc
dec
jo
out
dec
lods
je
xchg
lea
adc
movl
inc
push
stos
add
nop
mov
add
pop
sub
popf
test
mov
add
jl
iret
ret
sarb
mov
pop
aas
sub
push
ret
or
inc
xor
imul
dec
loope
adc
pushf
add
std
mov
inc
dec
xchg
in
scas
add
loope
cmc
test
jns
outsl
fsubr
cltd
pop
sub
xchg
jbe
and
xchg
jae
imul
sar
outsb
jg
xchg
pop
out
das
popf
cmp
arpl
std
fsubl
test
fwait
inc
jmp
popa
clc
imulb
bnd
adc
outsb
loope
into
dec
shll
out
sub
ret
adcl
test
and
xchg
xchg
sub
pushf
jmp
shr
sub
out
in
movsb
leave
mov
jmp
mov
loopne
push
cmp
int3
ja
push
xorl
jmp
roll
je
mov
ljmp
gs
fidivl
mov
insb
push
clc
sarb
repz
mov
cli
push
jb
arpl
loope
pop
std
xchg
cs
js
xor
cmp
andb
unpcklps
adc
jo
lea
stos
imul
mov
ret
pop
jecxz
add
jmp
arpl
rcll
sbbb
mov
int3
cmp
or
out
mov
sti
pop
and
or
pop
and
and
cmpsl
outsb
mov
mov
sbb
out
cltd
fcmovbe
ja
fxam
sahf
inc
aas
aad
xor
sub
jno
out
lds
stos
repnz
pop
jnp
or
jl
push
cmp
mov
jns
test
movsl
add
aad
push
mov
rorb
movsb
jg
sub
repnz
or
mov
push
popf
cmpsl
mov
out
mov
sub
xor
jmp
sub
jmp
push
and
ret
jp
js
lahf
cld
pusha
stc
aad
sbb
out
subl
inc
add
lds
loopne
adc
pusha
cld
movsb
adc
test
or
les
pop
add
xchg
push
cltd
shr
xchg
rcrb
mov
pop
cmp
fcmovb
add
addl
add
xlat
into
ror
aad
xlat
imul
idivl
stos
jg
jae
js
icebp
hlt
pop
mov
add
inc
xor
mov
pop
add
push
jbe
fcmove
addl
fisubrs
pop
cltd
stos
int
cli
rolb
fildl
push
cmp
ss
push
sbbb
addb
or
sbb
cwtl
dec
fisubl
jecxz
pop
add
push
sub
xor
ljmp
xor
jo
and
or
add
and
sbb
repz
in
in
dec
cmc
lahf
dec
loopne
adc
arpl
xor
jae
insl
rep
loopne
out
cs
pop
and
sub
xchg
pop
es
lret
push
sbb
je
push
insb
data16
ficoms
out
mov
test
push
imul
inc
rorb
mov
xchg
aam
das
aad
push
sahf
je
push
mov
push
or
sbb
mov
jge
mov
mov
xchg
pop
movsb
or
cltd
jge
pop
and
xchg
dec
bound
dec
leave
into
cmp
aad
add
sub
lea
lcall
sarl
jae
mov
fcompl
mov
enter
aas
adc
push
jnp
rcl
shrb
xchg
jae
int
ss
jb
popf
scas
arpl
pop
aam
cmp
shll
ja
arpl
jns
pop
fidivrs
mov
sahf
xchg
lcall
push
bswap
in
jle
ds
das
xchg
push
push
les
lods
sub
pop
jle
mov
inc
push
cmp
ljmp
jg
scas
cmc
sub
cmp
ret
adc
fs
fs
sbb
shrb
jns
pop
lret
mov
jno
insl
xchg
dec
pop
pushf
stc
repnz
aad
and
adc
sbb
xchg
sahf
add
fmuls
xchg
xor
outsb
iret
std
es
jns
int3
test
rolb
push
lahf
sbb
movb
test
dec
sbb
mov
sarl
sub
mov
jbe
adc
int
jns
add
jp
lret
mov
or
scas
hlt
cmc
rolb
shr
add
lret
inc
ja
js
stos
and
sbb
test
inc
int3
cmpsb
lods
aas
seta
push
mov
sub
or
out
cli
test
dec
cmp
add
jecxz
imul
lds
jne
sbb
fmul
cmp
cmp
sub
push
xor
lods
inc
outsb
jbe
lods
jp
push
sub
mov
jbe
jl
dec
pushf
push
stc
les
scas
and
mov
es
and
ret
in
pusha
inc
lea
test
mov
xchg
mov
pop
aas
in
leave
xchg
mov
test
cmp
xor
and
daa
fstps
push
xor
addr16
inc
int3
jmp
testb
mov
push
or
lret
pop
nop
insb
fisubrs
push
cs
fnstsw
popa
loop
stos
cmp
cld
cs
in
cmp
out
xchg
cmpsb
popa
pop
in
dec
jl
adc
add
nop
dec
inc
aad
inc
scas
and
jge
mov
loopne
add
sub
push
fs
jno
mov
xchg
dec
insl
xor
das
xchg
hlt
test
fs
in
popl
sbb
fdivrl
pop
adc
das
inc
mov
fbstp
insl
std
sub
cltd
mov
pop
ljmp
xor
int3
xchg
sub
dec
andb
lahf
sub
lahf
std
pop
xor
jbe
xor
mov
xor
jo
fldcw
lea
mov
or
outsl
call
jl
mov
push
fwait
nop
adc
aas
pop
pop
cmpsl
xlat
imul
popf
pop
popa
jo
iret
inc
mov
sub
scas
mov
loop
cmp
pop
sub
dec
and
repnz
aas
mov
mov
dec
xchg
jnp
dec
iret
arpl
sub
mov
add
sub
out
inc
jecxz
arpl
cld
pop
aaa
out
mov
in
jge
mov
loopne
and
adc
xchg
sbb
popa
popf
push
faddp
mov
mov
push
add
inc
adc
ljmp
call
sbb
xor
add
push
cld
xor
sbbl
add
movl
jmp
jmp
ror
rcr
rol
aad
stos
loope
call
js
jl
js
dec
outsb
call
sbbb
and
dec
mov
dec
mov
cmp
add
fcompl
fsubs
sub
xchg
shll
stos
movsb
xchg
mov
test
icebp
popf
sbb
inc
mov
pop
les
jle
inc
hlt
jbe
dec
and
push
out
adcl
inc
sub
inc
aam
das
cmc
sbb
xor
ds
test
test
xor
push
les
inc
xchg
stc
imul
push
notb
push
adc
sbb
pop
ja,pt
cli
test
popa
mov
push
stos
aaa
fsubr
or
adc
and
iret
sbb
movsb
xchg
xchg
call
out
inc
rclb
aas
adc
inc
jecxz
push
xchg
test
xor
fnstenv
add
leave
cmp
hlt
in
jo,pt
popa
int3
cmpsb
clc
popf
inc
data16
lea
cs
jge
sti
movsl
xchg
inc
inc
mov
fisubrs
movsl
xchg
or
testb
xchg
cs
testb
mov
dec
loop
cld
mov
pop
and
test
dec
sub
pop
test
fsubl
add
cmpsl
loope
bound
cmp
sub
xor
push
popa
in
jne
cmp
xor
rclb
ljmp
cli
xchg
fdivrs
imul
jg
and
pop
xchg
test
aaa
cltd
fstp
pop
push
bound
shrl
and
dec
jbe
push
pop
das
adc
bound
lret
adc
inc
rclb
sbb
js
push
xor
jns
sbb
jmp
jp
fdivrp
mov
int
cli
jge
call
xchg
les
frstor
pop
int3
shll
dec
gs
mov
xor
xor
fsubl
clc
fisttpll
sub
add
lods
xchg
sbb
addr16
mov
iret
outsb
xor
jae
popa
fstpt
sbb
ds
jg
mov
shll
push
mov
shll
mov
or
stos
pop
ljmp
push
adc
xchg
stos
push
mov
sbb
iret
push
jmp
test
pop
fnstenv
xchg
mov
int3
outsb
inc
sub
mov
pop
or
jmp
lea
xchg
add
dec
test
cmp
arpl
insl
stos
dec
scas
or
xchg
mov
mov
call
adc
sbb
cs
cmpsl
adc
sub
ror
push
inc
subb
adc
dec
cmp
popa
jle
inc
dec
repz
inc
rcll
dec
push
clc
ds
int3
push
dec
cmp
adc
out
rorl
xor
push
fwait
or
xor
sbb
mov
stos
imull
ret
sti
cwtl
testb
icebp
loopne
add
cmp
cli
outsb
push
mov
add
pushf
inc
fisttps
hlt
js
scas
mov
xchg
jae
sub
push
sub
inc
daa
cmp
sub
es
cs
push
cmp
pushf
aaa
test
icebp
jg
or
sti
mov
push
mov
mov
xor
mov
ja
jb
push
movsl
out
out
jmp
sbb
fists
insb
cld
clc
rcll
call
gs
sahf
sahf
xor
cmpsl
mov
xchg
xchg
das
xchg
add
inc
mov
cli
jge
xor
mov
call
cmpsl
subl
mov
sbb
mov
inc
movsb
push
xchg
xor
decb
inc
or
xchg
xor
or
dec
pop
add
jge
push
pop
jns
and
adc
bound
mov
and
sub
cli
sbb
jg
bound
popa
int
popf
aaa
mov
loopne
xlat
dec
imul
or
data16
xor
shlb
or
pop
push
pusha
fadds
dec
test
inc
outsl
sbb
ficomps
mov
xor
sub
movsl
dec
pop
jae
adc
and
cmp
movsb
jmp
mov
push
clc
push
and
xor
push
xor
push
popf
xor
fsubs
roll
nop
enter
mov
jl
xchg
iret
dec
popa
jg
pop
adc
adcl
xchg
xchg
cmp
ret
mov
fnstenv
add
pushf
or
das
or
sub
adc
dec
push
sub
popf
movsb
mov
xchg
jns
mov
and
push
mov
push
aam
and
add
add
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
mov
mov
sub
mov
jmp
lret
into
leave
aam
cmp
cmp
mov
js
jl
js
add
ficoms
sbb
icebp
mov
push
test
add
out
ret
loop
arpl
and
pop
sar
jl
lsl
or
test
pop
pop
or
cmp
push
out
cld
and
enter
cmp
sub
push
rol
sub
daa
push
fs
arpl
push
popf
push
daa
cmpsl
adc
lret
movsb
out
lcall
jne
lcall
mov
out
bnd
mov
psubd
jg
push
and
xor
dec
sub
mov
hlt
hlt
sbb
mov
xchg
xor
out
bound
fmull
addr16
push
sub
push
stos
dec
int
cli
pop
jae
push
addr16
xor
and
shrb
shlb
js
test
lcall
inc
scas
test
jne
adc
xchg
leave
or
mov
sahf
push
sbb
sbb
xor
adc
bound
add
rcll
repnz
cs
fistpl
fwait
sbb
mov
adcl
out
mov
mov
addr16
inc
sbb
mov
and
in
sbb
repnz
xchg
cmc
cmpsl
jmp
je
rorb
test
daa
int3
rorl
cmp
ss
pop
dec
das
fildll
pushf
jbe
lret
inc
xchg
dec
cmpsb
testl
or
les
movsb
mov
into
jo
cmp
movsl
adc
into
ds
in
stos
aaa
xor
push
sbb
mov
inc
das
and
call
and
add
stc
sbb
or
loopne
add
fwait
je
ret
test
in
xlat
mov
movzbl
js
push
loopne
rclb
mov
stos
icebp
and
rcl
ret
test
mov
push
lret
out
cmp
and
xor
test
rorb
mov
mov
adc
lret
jle
sti
mov
xchg
or
jns
test
dec
cli
jl
fs
cmpsl
mov
addr16
dec
adc
adc
fsts
sbb
jbe
ret
fidivl
push
add
mov
cld
sysexit
orl
xchg
sub
pop
aas
jmp
jl
dec
sbb
insb
inc
mov
jnp
fsubl
daa
pop
push
sub
mov
je
sbbl
xor
stos
scas
lret
pop
jae
xlat
mov
mov
add
pop
fwait
lret
scas
push
daa
nop
ja
mov
xchg
sti
fsubrs
mov
dec
mov
inc
out
push
imul
cmpsl
nop
xchg
das
mov
js
icebp
inc
mov
inc
or
cwtl
scas
nop
mov
je
push
add
fnstcw
xorb
pop
mov
fstpl
cwtl
and
sbb
cmc
nop
aas
pop
out
and
bound
push
daa
shrb
jecxz
rol
sub
cmc
lock
mulb
sub
pop
push
loopne
pop
xor
int3
es
or
test
mov
shrb
insb
add
mov
in
push
mov
les
fwait
test
in
ds
add
cmc
mov
popa
js
pop
dec
js
subb
jle
aam
cmp
sahf
clc
ds
and
or
pop
cmp
or
test
mov
and
pop
jle
pop
loope
cmp
push
push
mov
inc
jno
adc
jecxz
imul
jecxz
ficomps
data16
mov
popf
jl
and
cmp
adc
movsl
sti
inc
pop
les
ret
popa
movsb
xor
mov
daa
outsb
push
cs
inc
lret
nop
push
push
js
jge
aam
xchg
subb
cmp
sbb
xchg
mov
add
arpl
mov
in
aas
out
aas
divl
add
jg
loopne
and
and
adc
xchg
inc
iret
xor
and
mov
adc
mov
adc
adc
lcall
rcll
and
add
dec
ror
inc
pop
cmp
popa
cmp
xchg
fstps
pop
inc
or
mov
mov
inc
imul
add
adc
push
popa
pop
mov
adc
mov
testl
sub
cmp
jnp
mov
jns
shll
cmp
bound
cmp
leave
sahf
mov
mov
add
add
pop
jecxz
xor
mov
pop
jge
xchg
xor
add
jmp
cmp
leave
lret
leave
leave
ret
outsb
lret
jge
jmp
jg
jae
js
aad
cmp
test
ja
cmp
mov
lcall
cmc
jp
cmp
push
stos
inc
movsl
inc
lcall
not
pop
aaa
and
xchg
mov
xchg
xor
or
out
jbe
push
cmp
loopne
jbe
test
shlb
xchg
mov
aam
pop
and
xchg
dec
xchg
mov
mov
xor
out
in
add
sbb
jmp
xchg
xor
outsb
mov
sub
mov
insb
lea
jnp
xor
loope
mov
adcl
push
orb
icebp
clc
and
aas
pop
cltd
push
inc
out
leave
addl
jne
push
cwtl
mov
lret
ljmp
xorl
and
outsl
lds
xor
mov
jo
ja
arpl
out
imul
mov
ljmp
dec
jmp
das
ljmp
mov
andb
mov
cmp
jle
push
sbbl
jns
mov
rclb
movb
adc
ss
fs
sub
testl
mov
cmpsl
addl
out
pop
mov
xchg
test
mov
jae
xor
jns
pop
and
add
test
xor
push
ret
pop
outsb
mov
and
addr16
cmpsl
push
stos
xchg
inc
dec
or
jmp
in
in
adc
imul
xchg
dec
fs
popf
lds
imul
int3
sbb
xchg
bound
dec
psrlw
dec
mov
dec
push
cmpsl
add
jae
es
jb
or
fwait
pop
sbb
pusha
out
xchg
into
jmp
push
xor
mov
push
or
mov
xchg
and
pop
dec
repnz
mov
dec
mov
outsl
mov
cltd
mov
cmc
inc
cmp
adc
mov
xorl
fsubrs
jl
mov
incb
stc
rorl
xchg
jle
nop
ret
sub
in
mov
fisubrs
clc
push
out
clc
jl
adc
dec
add
cltd
inc
fidivrs
dec
and
sbb
cmpsl
notb
cmp
test
or
mov
ja
sti
and
adc
nop
ret
jo
mov
or
dec
lock
sbb
subb
mov
mov
dec
xor
std
cmp
mov
jmp
adc
pop
jmp
fisttps
push
mov
daa
push
unpckhps
dec
inc
adc
pop
int
mov
or
sbb
aas
in
test
pop
mov
xchg
aad
mov
push
inc
inc
aaa
iret
ds
loop
movsb
mov
push
flds
es
enter
or
bound
pushf
jp
add
pop
ss
subb
jne
jg
test
mov
xor
dec
mov
jnp
sahf
lret
inc
shlb
lahf
loopne
cltd
int
push
in
fldl
adc
sahf
icebp
int
iret
xchg
dec
in
mov
aaa
ficoml
shrl
sahf
mov
cmp
scas
fwait
and
fwait
test
das
bound
sub
repz
imul
js
xchg
mov
fdivp
and
inc
stos
cmpsl
sbb
xchg
xor
inc
in
sbb
xchg
mov
inc
repz
popa
addb
pop
mov
cmp
push
push
mov
ret
subb
push
cmc
adc
fdivrp
in
sahf
adc
insl
push
mov
jecxz
mov
add
in
mov
mov
shll
inc
xor
push
out
cmpsb
ljmp
mov
aas
pop
or
aam
xlat
cmp
mov
fs
pop
or
loopne
lcall
add
sub
add
stc
fcmovnbe
sub
leave
pop
adc
pop
dec
or
movsl
fstl
jo
call
outsl
inc
out
sub
and
int
pusha
xchg
dec
mov
jecxz
dec
fstl
push
fwait
lds
adc
subb
movsb
sub
xchg
pop
cmc
les
daa
jnp
into
out
add
loopne
or
movsb
movsl
out
sbb
bound
pop
test
or
xor
outsl
in
pop
jns
mov
fwait
scas
inc
mov
aas
sarl
jns
mov
xor
xchg
push
test
imul
shr
or
rol
fcmovnu
jp
orl
jg
jae
js
xchg
in
or
std
xchg
imul
stos
jmp
jg
shrd
push
pop
fdivs
sub
ret
push
insb
out
scas
popf
call
nop
dec
jge
icebp
jb
aam
loopne
xor
dec
push
andl
sbb
cmp
inc
and
aas
adc
xchg
mov
les
js
rclb
jle
mov
sub
inc
dec
in
mov
dec
jne
inc
add
cli
popa
xchg
les
pop
leave
adc
add
jno
andl
jb
andl
mov
push
jae
incl
movsl
rclb
pop
xchg
sahf
inc
push
jo
and
cmp
fmuls
push
out
fcomip
jns
insl
and
xchg
lods
cld
inc
adc
mov
mov
and
push
in
or
xor
push
inc
stos
xor
mov
leave
dec
mov
cmp
das
sbb
pop
popa
and
movsl
and
and
fidivl
mov
data16
dec
sbb
je
outsb
push
xor
test
imul
xchg
or
in
scas
push
daa
je
adc
loop
neg
aaa
aaa
adc
dec
sbb
pop
add
lret
mov
insb
data16
mov
inc
add
test
jmp
push
ds
xchg
pop
cmp
or
jae
ret
or
jg
cmpl
shlb
sbbl
int
sub
jg
sub
sarl
xchg
mov
mov
retw
or
pop
sarl
outsb
xchg
fs
shlb
push
xchg
mov
adc
js
fmuls
and
mov
aaa
es
mov
or
cltd
push
or
push
sbb
mov
in
and
add
add
ret
and
mov
jb
push
pop
jle
fisubs
cmp
mov
cltd
dec
mov
test
mov
xorl
shlb
sar
into
and
adc
cwtl
mov
dec
sbbl
sbb
jecxz
mov
loopne
dec
aad
add
push
out
mov
dec
mov
testb
arpl
dec
mov
xor
xchg
pop
outsl
mov
fwait
ret
les
fs
jo
push
dec
in
sbb
push
ljmp
xchg
cs
int
lcall
in
mov
xchg
fs
aad
mov
inc
inc
std
fs
or
add
call
in
push
inc
es
scas
adc
lcall
xor
cltd
div
or
push
lret
dec
xchg
inc
scas
iret
sbb
rorb
stos
xchg
sub
sub
dec
outsl
cmp
data16
jbe
inc
stos
cmc
imul
es
lret
adc
cltd
mov
xorl
clc
stos
cld
mov
lcall
shrb
push
into
mov
adc
cwtl
iret
adc
sub
push
int3
push
pop
aam
add
add
nop
pop
out
sub
leave
sbb
popa
push
in
push
mov
arpl
mov
pop
xor
jns
fisttpl
test
outsl
mov
and
and
pop
jp
scas
adc
mov
mov
sahf
xor
adc
jl
push
notl
cmpb
lcall
cli
push
scas
add
mov
mov
mov
test
adc
jecxz
aam
repnz
dec
in
test
mov
lods
mov
neg
jmp
imul
mov
cmpsl
and
ja
sbb
ljmp
rcrl
outsb
sub
lods
in
xor
cmp
loop
repnz
mov
cmc
sahf
fistl
es
mov
xor
mov
inc
or
push
mov
enter
int3
mov
loop
xchg
push
jbe
mov
out
add
mov
out
push
sub
sub
dec
push
call
xchg
jmp
push
mov
loop
jbe
mov
jmp
dec
in
adc
xchg
es
cld
sbb
call
in
negb
fistpll
pop
es
push
xchg
adc
fisubrl
mov
and
push
ja
jb
adc
imul
cmp
xlat
mov
sub
add
lcall
xchg
scas
xlat
mov
mov
sub
jmp
ror
lret
fcmovbe
fcmovb
mov
xor
inc
jg
jae
js
sahf
jbe
xchg
jne
in
pushf
lret
mov
push
sbb
mov
inc
pop
js
mov
insb
shlb
adc
test
mov
mov
adc
std
sub
pop
test
jb
out
cmc
dec
cltd
lcall
imulb
cwtl
dec
xchg
ja
lods
mov
xor
pop
rcrl
or
js
mov
mov
in
testl
sub
push
pop
rolb
inc
out
xorb
ret
lret
rorl
mov
test
push
sub
sub
pop
mov
pop
xchg
xor
sbb
cld
jmp
and
cld
lods
test
in
pop
inc
add
in
xor
ja
ret
xor
xor
sub
fistl
xor
aam
ljmp
push
lock
lods
and
js
xor
jne
dec
jno
fcmovne
xor
sahf
mov
jnp
pop
jae
incl
sbb
adc
js
adc
stos
lock
jbe
orl
mov
or
pop
mov
loope
rcrb
rcrb
or
out
jbe
jle
outsb
imul
shll
xchg
out
adc
jne
data16
popf
jne
or
or
into
or
sub
push
xchg
out
cli
cmp
cwtl
mov
xorb
es
fimuls
pop
ret
sbb
rcll
sub
aas
push
jl
jbe
xor
jnp
mov
into
inc
add
out
add
mov
out
stc
rorb
shlb
popa
and
in
push
jb
loop
push
sbb
mov
xchg
jno
scas
mov
aam
sub
movsb
and
lahf
arpl
sbb
push
test
pop
outsb
push
jle
xor
push
int3
pop
lock
imul
and
divb
xor
xchg
sbb
add
fisttpl
lret
mov
dec
clc
mov
sbb
lea
inc
je
data16
in
out
lods
mov
addr16
je
or
sub
stos
aad
sbb
lods
or
xchg
lea
or
fidivrl
lds
mov
xor
push
int
lret
cltd
mov
xchg
dec
sbb
jo
fsubl
mov
cmc
iret
pop
dec
jbe
out
enter
cmp
mov
fabs
add
mov
daa
adc
outsl
dec
out
fs
pop
push
inc
aaa
jp
nop
ja
mov
sbb
push
push
ds
xor
fcoml
inc
jne
xor
jne
inc
fidivl
insl
and
xchg
ss
lret
out
ja
sub
roll
imul
lds
mov
cmp
dec
sar
mov
xor
cld
cli
adc
dec
and
loopne
dec
or
push
or
pop
mov
or
das
mov
jo
repz
sub
jle
hlt
add
dec
sub
pusha
dec
outsl
mov
mov
xchg
sbb
ret
stos
sbb
cmp
fimuls
and
xchg
push
sbb
mov
outsb
scas
push
mov
mov
aaa
js
jns
pop
mov
in
jge
je
stos
std
outsl
cmpsl
sub
mov
mov
or
or
dec
pop
cmpsl
jl
fdivrs
adc
aas
test
pusha
jp
push
xor
mov
insl
inc
movsb
mov
pop
cltd
lcall
movsl
rsm
mov
push
fsubrl
or
movsl
mov
sbb
push
test
mov
fninit
cmpsl
into
mov
test
imul
mov
dec
mov
insl
je
lret
nop
movsb
dec
out
ffreep
push
mov
push
sbb
test
inc
ljmp
cmp
pop
xor
lret
mov
add
lcall
push
sub
sbb
mov
shl
sbb
jnp
jb
inc
jp
xor
jns
and
adc
adc
push
pop
adc
loope
rcrl
out
test
ret
test
add
test
adc
xor
adc
scas
mov
mov
mov
enter
adc
mov
lret
adc
push
and
sbb
sbb
dec
icebp
push
cmp
xchg
test
fmull
stos
orl
adc
sahf
xchg
movsb
rclb
bound
sub
lds
cmp
cmp
jmp
ret
fcmovbe
aad
fs
inc
mov
ret
leave
inc
jg
jae
js
pop
cmp
fsubr
shrl
mov
or
cs
arpl
or
std
xor
or
movsb
push
hlt
lret
xchg
movsb
repnz
out
arpl
push
call
lahf
push
shlb
mov
cmp
inc
mov
jp
or
lods
jb
lahf
leave
inc
rcl
stos
rorl
pusha
dec
pop
cmc
fldl
call
mov
mov
ljmp
and
mov
mov
and
in
dec
pop
stc
jecxz
out
test
dec
icebp
cs
mov
lret
sub
inc
xor
aad
mov
xchg
mov
fwait
sub
jmp
push
inc
sbb
gs
jb
cs
sub
sub
adc
dec
jle
pop
dec
outsb
negl
jmp
cmpsl
std
dec
push
adc
dec
ret
cmp
xchg
stc
test
dec
rclb
xchg
push
jno
xlat
movsb
cmp
cmp
insb
dec
push
repz
push
cld
mov
mov
mov
mov
mov
sbb
jp
sub
dec
add
push
mov
pushf
sbb
pop
mov
and
add
sbb
inc
push
test
call
icebp
mov
imul
daa
std
mull
out
push
addr16
adcl
cmp
and
inc
or
mov
movsl
push
and
cwtl
das
je
cmp
call
jnp
pop
jns
in
ja
cmpsl
test
cltd
add
scas
inc
cvtps2pi
fs
dec
sbb
mov
rol
adc
into
sbb
sahf
jnp
pop
jge
cli
mov
sub
cmc
out
faddp
aad
je
xchg
adc
mov
or
cmpsl
test
cmp
pusha
inc
icebp
sub
push
pop
out
lea
mov
jne
lcall
inc
or
movsb
push
bound
mov
push
outsl
mov
mov
xchg
out
lds
sub
fnsave
sbb
ret
xchg
cmpl
mov
inc
insl
add
dec
fisubs
cltd
mov
mov
pushl
push
inc
push
std
xor
mov
or
or
lahf
sub
mov
test
dec
sti
sub
orl
jmp
movsl
dec
adc
or
sbb
add
xor
in
or
inc
jnp
lds
dec
and
outsb
cmpsl
jnp
push
adc
dec
mov
shrl
or
filds
cmp
outsb
xor
imul
int3
push
add
mov
and
into
and
test
fildll
mov
ret
lds
andb
aad
xchg
out
xchg
popa
aas
lret
inc
pop
movsb
out
lahf
xor
popa
enter
and
sbb
out
ss
addr16
jecxz
add
xchg
les
into
mov
shrd
or
mov
cld
mov
push
test
xlat
das
push
xchg
add
in
xor
lock
hlt
ljmp
mov
movsb
mov
and
add
xchg
xchg
call
in
push
ss
fs
faddl
aas
fldcw
mov
lea
std
orps
jne
and
iret
or
pop
mov
out
mov
or
push
push
enter
rolb
shll
inc
outsl
mov
pop
fiaddl
inc
mov
pop
fsubr
je
pusha
ljmp
push
inc
jg
insb
fists
dec
cmp
ss
rcrl
mov
gs
and
outsl
mov
jp
mov
pusha
sub
push
pop
push
ljmp
ss
lcall
int3
or
lret
mov
adc
cs
movsl
addl
rcrl
sbb
and
push
lret
xchg
test
filds
cmp
and
pushf
xchg
daa
cli
jnp
xchg
add
sarb
pop
je
mov
mov
ret
and
sti
cwtl
pusha
cld
and
outsl
sbb
inc
xchg
jo
cmpsb
xorb
dec
xchg
in
sub
imul
inc
xchg
aad
adc
mov
pop
xor
pusha
xchg
faddl
mov
insl
mov
sahf
pop
ds
pop
and
aas
jne
outsb
stos
push
lcall
popf
fisttpl
fs
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
cmp
les
jmp
inc
pop
int3
cmp
jg
jae
js
leave
out
xor
adc
add
pop
jg
cld
notl
sbb
cld
addr16
and
sti
mov
jle
and
dec
enter
jecxz
jnp
in
call
shlb
add
add
ljmp
popa
mov
cmpsb
mov
ret
data16
lods
or
pop
stos
and
pop
loop
aad
or
test
add
cmpsl
xchg
lods
movsb
shlb
add
add
pushf
mov
xchg
push
cld
xchg
sub
jns
fdivl
add
xor
jno
icebp
mov
jge
daa
push
mov
mov
jns
xchg
hlt
scas
mov
int
movsl
mov
in
arpl
cwtl
hlt
jge
outsb
add
and
call
loope
rorl
cwtl
sub
xchg
fwait
std
in
fnstenv
data16
cmc
push
jge
pop
lahf
push
cs
add
leave
jnp
lret
test
jae
mov
mov
stos
outsl
dec
cmp
or
mov
outsb
imul
fwait
push
scas
sbb
add
jne
add
and
lahf
push
scas
pop
mov
das
jbe
pop
jge
mov
pusha
pop
test
jmp
add
adc
xchg
cmp
mov
push
testb
sub
cs
push
jge
inc
outsl
aaa
mov
xchg
dec
in
aaa
fdivr
leave
push
pusha
pushf
xchg
push
loopne
lds
push
xchg
inc
xchg
dec
popa
in
mov
push
hlt
mov
cli
ja
fsubrs
xor
cmp
test
loop
sbb
pop
xor
lahf
push
pusha
jg
sbb
dec
or
mov
push
in
jo
int
aam
inc
jae
data16
rcll
popa
xchg
add
pop
xchg
push
xchg
cmc
mov
adc
inc
adc
xchg
jle
fs
or
ds
lock
xchg
cmp
jbe
jmp
dec
sub
cmp
jae
sbb
fildll
in
inc
leave
push
jg
inc
mov
clc
mov
sub
mov
inc
pop
rorl
clc
ds
push
pop
sti
adc
test
jmp
fdivrs
mov
sub
das
inc
and
xchg
das
outsb
adc
mov
mov
or
dec
push
aas
clc
jno
aad
lcall
clc
dec
sbb
ljmp
add
stos
push
mov
insb
and
push
lahf
test
and
out
mov
mov
pop
in
pop
shrb
xlat
add
jno
stos
mov
cli
sub
andl
es
cmp
or
sub
cmc
adc
call
data16
sarb
sti
out
cmp
cmpsb
ja
mov
daa
mov
mov
or
or
add
inc
mov
pop
jae
into
jmp
pop
movsl
mov
push
outsb
notb
add
push
imulb
js
sbb
or
vpsrlq
inc
adc
and
out
xor
and
sbb
pop
or
xor
mov
ljmp
cmc
cmp
lea
cmp
repnz
and
mov
rcll
std
fbstp
mov
add
pop
mov
mov
insb
lahf
cli
bound
and
bound
leave
pop
and
xor
cmpsb
xor
or
xchg
pop
inc
dec
lock
push
sahf
sub
jo
push
push
pop
cmpsb
arpl
mov
clc
and
jmp
stos
push
or
adc
sbb
testb
ljmp
test
pop
sahf
or
xor
imul
jns
xor
add
mov
test
push
in
outsl
dec
andnps
inc
loop
cltd
stos
adc
mov
xchg
outsl
aaa
not
fbstp
push
cmpsl
xor
out
cmp
push
insb
or
cmp
leave
mov
subb
adc
roll
stos
wbinvd
popa
mov
dec
repz
inc
adc
and
mulb
jmp
lret
test
mov
lcall
aad
xor
push
gs
outsb
sub
negb
shlb
popa
daa
fisubrs
and
and
test
pusha
inc
data16
pop
rcrb
insb
adc
lds
mov
adc
adc
mov
shll
pop
xchg
enter
dec
stc
inc
out
scas
fisubl
mov
or
int
ror
fstps
mov
aaa
push
jg
jae
js
rcr
xchg
mov
mov
mov
jmp
inc
add
scas
aas
insl
das
movb
jns
outsl
jnp
stc
insb
das
in
xlat
jl
bound
mov
adc
push
mov
lds
sahf
sbb
arpl
add
enter
mov
pop
or
clc
mov
pop
daa
cld
filds
out
xchg
push
lods
movsb
xchg
cmp
pop
clc
jge
xchg
lcall
pop
out
dec
repz
mov
movb
nop
stc
loop
cmp
adc
mov
add
cmp
ret
jo
xchg
cmp
imul
out
adc
cmp
jmp
cmpsb
loope
jg
xchg
dec
pop
cmpsl
aaa
icebp
roll
fidivrl
bound
jb
in
xchg
xor
das
xor
xchg
lahf
hlt
lds
in
insb
push
mov
dec
cmp
arpl
mov
and
or
stos
push
bswap
xchg
lock
jmp
shl
sbb
inc
xchg
mov
int3
cld
stc
inc
insb
out
into
or
cmpsb
inc
jl
jmp
data16
adc
popa
jp,pn
loop
outsl
add
aas
ret
jl
dec
addr16
mov
pop
lods
mov
lahf
xchg
inc
inc
ret
adcl
sahf
mov
sbbb
push
xor
in
jle
shrl
fwait
loop
jp
ret
or
popa
hlt
bnd
hlt
mov
into
pop
sub
adc
jae
xchg
pop
adc
andb
pop
cmpb
std
arpl
scas
pop
dec
into
mov
mov
sbb
loopne
out
xor
arpl
pop
jmp
sub
dec
cmpsb
add
push
mov
imul
pop
sbb
and
popa
xchg
dec
ret
fsubl
mov
pushf
jnp
push
pop
adc
push
call
adc
out
cli
movsl
lock
mov
push
adcl
jb
adc
test
shl
lods
jge
outsb
in
mov
or
pushf
push
xchg
movsb
sbb
jae
mov
add
std
sahf
enter
xor
jl
int
xlat
jb
jb
pushf
ficompl
sbb
cmp
into
adc
inc
hlt
lods
sbb
sahf
insl
enter
sbb
scas
cmpsb
mov
sbb
and
ljmp
int
loop
add
movsb
adc
pop
jl
or
gs
sbb
je
add
in
pop
xor
mov
mov
pop
movsb
and
lahf
inc
call
fisubrs
mov
loopne
scas
mov
cld
pop
mov
arpl
ret
daa
in
sbb
jp
add
nop
mov
pop
mov
in
add
xlat
in
lea
jnp
xchg
xchg
jne
fsubrl
aas
jmp
cli
sub
jbe
enter
rorb
and
mov
aam
int
inc
xchg
mov
imul
pop
aas
subb
dec
mov
push
xchg
mov
mov
adc
ret
js
cmp
push
add
mov
pusha
xchg
xor
sub
adcl
mov
clc
outsl
cli
jo
fsts
stos
shr
adc
daa
jle
stc
dec
maskmovq
push
decl
and
sub
mov
dec
mov
inc
adcl
imul
cmp
incb
jle
je
das
pop
aaa
fldenv
jmp
mov
and
in
cltd
ret
scas
lret
arpl
stos
xor
testb
lret
dec
or
mov
dec
sbb
mov
mov
test
and
pop
loopne
inc
mov
cs
in
add
cmp
int3
cltd
iret
adc
arpl
fdivs
outsl
cmp
ss
fs
fimull
cmp
adc
mov
lods
inc
loop
and
xchg
mov
ja
mov
cli
leave
mov
add
imulb
dec
mulb
ret
dec
dec
es
sub
adc
aas
dec
cmp
ds
dec
pop
jb
shll
mov
lods
inc
adc
ret
test
add
xchg
cmp
push
rcr
xchg
ret
decb
mov
ret
inc
xor
xchg
xchg
push
xor
jg
mov
outsb
clc
mov
adc
imul
nop
inc
jle
lahf
pop
adc
push
rcrb
in
mov
mov
push
sahf
jo
push
xor
cld
pop
mov
insl
pop
jae
lock
sbb
cmp
mov
int
outsl
xor
sbb
mov
pop
mov
scas
xlat
mov
mov
sub
cmp
jmp
rcl
ror
rcr
aam
pop
inc
daa
clc
push
cmp
pushf
sub
js
jl
js
outsl
icebp
and
dec
rcrb
mov
pop
adc
pop
jns
call
sub
mov
dec
add
xor
jbe
repz
xchg
cli
shlb
mov
dec
push
push
or
icebp
xor
into
insb
push
pop
or
subb
mov
cmc
sar
imul
mov
pop
sub
sahf
xchg
std
sarb
sub
sub
adc
and
push
dec
add
inc
fldt
jl
bound
sahf
nop
or
out
insb
mov
test
dec
sbb
sub
mov
xor
jo
dec
push
insl
add
icebp
and
insb
negb
call
pusha
pop
jp
out
adc
hlt
popf
lods
outsb
inc
pop
mov
mov
mov
ficoms
or
js
fs
je
xchg
push
bound
jp
jb
or
push
sub
mov
sbb
clc
jle
js
sub
mov
pop
imul
nop
cs
push
xor
test
push
and
scas
add
fwait
sub
ret
and
jg
sbb
pop
iret
push
iret
or
cmp
enter
daa
loope
orb
das
dec
push
addb
dec
mov
push
jno
push
mov
push
or
cmpl
bound
pop
mov
push
shlb
push
cli
test
add
pusha
push
jne
jl
xor
cmpsb
and
or
mov
cwtl
cmp
fwait
loope
mov
js
ds
sahf
add
mov
adc
push
push
arpl
xorl
sti
sub
add
lret
and
push
aas
inc
insb
push
call
bound
mov
adc
xchg
sub
sub
lods
xor
or
dec
adcb
xor
mov
and
mov
xchg
mov
rol
adc
xor
ds
dec
sbb
in
xor
sti
mov
std
gs
cmp
loop
bound
sbb
fisttpl
jl
lret
outsb
lret
push
dec
mov
into
popl
push
in
dec
xlat
mov
dec
adc
xchg
movsb
mov
cmp
xchg
jle
adc
rol
and
insb
inc
lods
cmp
lds
es
push
mov
jecxz
jl
cmp
sbb
xchg
pop
scas
ret
mov
fs
addb
xlat
aam
pop
movsl
cmp
ja
leave
icebp
xchg
fs
inc
or
mov
test
notl
shl
dec
pop
shlb
sub
adc
mov
dec
mov
adc
es
cmp
mov
xchg
add
int3
sbb
addl
pop
jge
mov
scas
mov
pop
bound
sti
fidivs
mov
mov
stc
in
pop
xchg
xor
adc
or
in
mov
xchg
in
stos
inc
sbb
mov
movsl
mov
sahf
xor
add
push
jae
in
aas
dec
lea
mov
add
jbe
inc
aad
xlat
jecxz
sbb
inc
pusha
sub
lods
ja
push
fsts
mov
cmp
je
aaa
pop
jmp
lea
cli
out
lods
jge
js
stc
bound
dec
xor
inc
jne
xchg
sarb
cmp
jno
mov
test
xor
pop
dec
dec
adc
repnz
dec
sbb
andl
out
arpl
sahf
ss
gs
push
mov
mov
jbe
out
and
xchg
je
mov
mov
pop
xor
jle
paddsw
repz
cmp
mov
adc
lods
iret
scas
sub
fistl
pop
inc
in
xlat
xchg
out
cli
data16
sbb
sbbb
add
int
out
pop
in
xchg
idivl
dec
and
xchg
pop
mov
aaa
xor
add
movsb
and
pop
cmp
adc
popa
pusha
push
xor
jp
scas
popa
sbb
ret
mov
les
and
xchg
mov
jo
rclb
sub
cltd
jl
cli
emms
push
lcall
xchg
add
testl
pop
dec
ds
popf
cmp
pop
movlps
fstps
hlt
sarb
out
movsb
ja
mov
jmp
mov
mov
xor
xor
jmp
lret
ds
fcmovnb
pushl
push
ja
pop
jg
jae
js
xor
jmp
adc
push
call
or
push
mov
push
mov
xchg
or
adc
xor
in
aaa
dec
jmp
pushf
cwtl
int3
sbb
xchg
repz
cmp
pop
jae
jecxz
mov
xor
lods
enter
fldenv
sbb
insl
pop
lcall
gs
mov
inc
or
mov
sub
mov
clc
jbe
mov
ljmp
notl
mov
icebp
mov
lret
into
out
daa
js
mov
incb
pop
addr16
sub
imulb
jp
mov
stos
and
lea
ljmp
xchg
fs
dec
add
outsl
test
and
gs
xlat
jecxz
es
inc
shrl
pop
clc
icebp
inc
inc
rol
cwtl
inc
sub
negl
das
aad
dec
and
xchg
xorl
lcall
push
or
paddusw
data16
jb
ds
mov
das
and
push
imul
cmp
outsb
cmp
add
pop
jl
adc
out
dec
xchg
jge
sub
mov
ja
mov
andb
jge
cmp
inc
ja
jg
push
daa
pop
pop
pop
loope
cmp
sarl
fimull
shlb
adc
ret
jnp
std
jge
add
loopne
cwtl
ds
hlt
loope
xchg
fldl2e
dec
mov
push
decb
andb
fistps
movsb
cmp
add
xlat
push
sub
test
test
sub
popa
rcl
inc
dec
xchg
pop
and
and
in
das
mov
cwtl
mov
mov
mov
dec
mov
mov
dec
cmp
test
mov
mov
jno
push
inc
lds
xchg
cmp
push
rcl
or
aam
mov
xor
add
rorb
movsl
stc
pop
pushf
pop
ja
mov
inc
mov
dec
and
cmc
popf
into
cmpsb
xchg
out
jl
xchg
or
and
cmpsl
pop
adc
dec
push
dec
pushf
cli
adc
jne
lahf
test
add
rorb
rol
adc
jmp
adc
sbb
adc
ret
jno
fs
add
outsb
mov
jmp
jle
imul
xchg
pop
fcoms
ret
and
xlat
mov
repnz
sub
cmpl
and
inc
dec
fldenv
pusha
xchg
xchg
sarl
sbb
inc
testb
pop
je
enter
push
push
mov
sbb
adc
pusha
dec
push
add
xchg
xor
dec
andb
mov
mov
xor
push
shrb
sub
aaa
push
test
out
lret
mov
jg
xor
fdivrs
push
fisttps
data16
data16
adc
orl
sub
sub
repnz
in
cli
xor
icebp
sbb
cmpsl
sahf
idivl
add
lret
add
mov
jmp
into
ja
mov
aad
cld
das
nop
mov
lea
xchg
insb
in
pop
mov
inc
out
in
push
add
mov
adc
das
cli
sub
shrl
jl
lock
cmp
xor
cmp
in
push
std
shrl
adc
inc
and
popa
stc
inc
xchg
pop
lcall
mov
jp
push
mov
mov
inc
sahf
sub
push
in
mov
mov
cmpsl
pop
aas
mov
sbb
cmp
jb
mov
hlt
mov
mov
jo
add
hlt
test
mov
xor
cmpsl
faddl
pop
mov
jo
flds
lods
popl
mov
push
out
out
in
ss
inc
dec
pop
jnp
mov
lret
dec
cmpsb
ja
dec
sbb
xchg
and
std
cmp
mov
pop
mov
es
rolb
push
aas
adc
inc
xor
cmp
push
incl
adc
into
push
push
xchg
popa
fs
jno
cli
pop
bound
std
sbb
test
pop
jbe
ja
add
push
cmp
jo
mov
jecxz
push
mov
dec
or
sbb
std
push
and
imul
mov
nop
aad
add
xlat
popa
pushf
pop
jp
bound
or
push
and
mov
or
in
sbb
icebp
lret
add
add
imul
mov
mov
sub
jmp
cmp
xlat
enter
int3
sub
xchg
lods
adc
jae
js
sahf
or
or
add
jns
cltd
sbb
jne
push
rcll
and
push
pop
rcll
sub
cli
push
repnz
cmp
movsb
pusha
cld
add
lret
xlat
pop
js
jb
mov
and
xchg
cmp
inc
in
adcb
jg
fstps
dec
pop
jp
sbb
push
sub
jno
mov
push
ss
out
nop
aaa
rorl
sahf
cli
push
sub
lock
jl
push
xor
sbb
fstpt
mov
and
bound
shll
and
push
cmpsb
filds
gs
enter
out
lcall
ret
inc
mov
sahf
dec
jae
add
mov
push
and
mov
es
cmpsb
pop
adc
arpl
sub
xchg
cli
mov
stos
out
out
add
enter
mov
pop
loopne
dec
test
push
jl
bound
ja
inc
sbbl
andl
pusha
and
mov
sarb
pop
out
mov
sarb
shl
call
outsl
bound
xlat
add
fwait
xor
cmpsl
fxch
jmp
das
cmp
adc
leave
mov
push
mov
mov
popa
xor
pop
adc
pop
sub
sti
out
jno
rorb
aad
sub
mov
out
push
inc
mov
adc
dec
sub
fidivl
mov
jl
mov
sub
mov
push
push
or
jb
mov
aam
inc
mov
jb
jnp
pop
adc
aaa
lea
dec
ss
arpl
fiadds
dec
xchg
sub
jg
adc
lods
call
loopne
push
leave
or
out
jae
ljmp
inc
xlat
in
pop
xor
ss
stos
in
xchg
scas
aad
incl
clc
mov
sbb
int3
push
and
xor
mov
sub
jge
sub
nop
pop
repnz
inc
dec
xor
pop
movsl
jbe
test
pushf
dec
push
aad
aas
jno
cmp
mov
icebp
sbb
xchg
rcl
mov
xchg
push
jno
test
cmp
adc
and
fstpl
dec
adc
jne
xchg
jno
push
jp
cmp
inc
pop
faddl
lock
jno
dec
push
clc
clc
xchg
xor
data16
mov
adc
pop
adc
ficompl
test
pop
int
mov
xchg
jb
or
xchg
enter
ret
stc
sbb
je
sbb
je
js
out
in
mov
jns
add
lods
fsubs
dec
jl
jle
nop
and
test
dec
xchg
pop
gs
ret
cmp
mov
outsb
jns
jb
pop
xor
push
ja
enter
push
les
popa
icebp
xor
fists
mov
xor
cmp
dec
fstpl
cmc
sbb
jnp
jl
jmp
ss
repz
xor
sub
push
mov
ds
fwait
jl
das
mov
and
out
push
mov
or
hlt
cmp
adc
pop
shr
xor
mov
xor
or
and
jns
pushf
cs
fisttpl
incl
pusha
enter
lock
add
jb
cmpsl
dec
push
sub
popf
adc
sub
sti
leave
mov
dec
lods
adc
cwtl
push
pop
dec
jecxz
inc
in
push
add
jo
insl
pushf
mov
cs
pushf
xchg
cmp
pop
pushw
pusha
mov
pop
xor
or
xchg
ror
arpl
ret
in
jns
jecxz
sub
or
jne
push
dec
jo
dec
mov
push
mov
lds
and
lea
ss
xor
cmpb
insb
dec
push
imul
xchg
pushf
jnp
pop
xchg
xchg
and
push
sbb
js
loope
repz
out
scas
dec
and
sub
pop
ja
push
mov
lcall
inc
arpl
loope
mov
inc
mov
inc
repnz
jnp
jmp
add
xchg
je
test
in
movsb
sub
push
inc
push
lea
rorl
dec
xor
mov
add
mov
out
mov
fdivl
sub
mov
into
in
pop
into
mov
ret
xchg
cltd
push
repz
out
sbb
jl
stos
add
nop
xor
or
add
mov
jmp
mov
jmp
leave
mov
lds
ja
xor
addr16
jae
js
in
jle
mov
and
mov
call
adc
add
popf
insb
mov
arpl
fimuls
cmp
sti
jae
ljmp
sbb
call
cmp
lcall
pushl
xor
adc
mov
pop
adc
adc
push
in
mov
imul
inc
arpl
inc
adc
xor
mov
or
daa
dec
dec
mov
xchg
push
dec
sbb
aas
popl
sti
dec
arpl
inc
ficompl
mov
cmpsl
popa
xor
xchg
or
movsl
mov
jge
jns
fsubl
ret
pop
push
ljmp
repz
add
leave
pop
test
lods
lea
and
fdivrl
dec
adc
scas
sbb
or
je
shl
sbb
push
mov
xchg
repz
div
cmp
adc
ret
push
imul
or
or
cmpsl
lea
mov
push
push
sbb
sbb
rcrb
insb
adc
stos
sub
jp
push
pop
xor
inc
push
and
pop
mov
add
mov
cmp
aaa
addr16
shl
es
outsb
loop
pop
shr
push
test
mov
in
psrlw
popa
fiadds
enter
js
mov
inc
xor
lea
inc
mov
sti
mov
or
mov
neg
sbb
test
xchg
xor
push
add
outsb
loopne
mov
cli
subl
cmp
or
mov
pushf
adc
push
stos
push
iret
and
add
and
mov
hlt
mov
jb
inc
repnz
imull
dec
addr16
adc
pop
inc
sub
pop
xchg
push
cltd
aad
fs
push
imul
mov
inc
in
ret
lahf
xor
cmp
lock
add
dec
jl
xor
or
mov
ljmp
imul
inc
ficoms
and
or
push
aas
clc
mov
cwtl
jge
imul
push
into
in
shlb
xchg
lret
lahf
sub
xchg
push
xchg
bound
ds
movsb
xor
sub
fdivl
sub
cld
decb
call
movsb
or
mov
sar
push
fisttpll
add
or
icebp
jle
test
or
xchg
test
dec
mov
jp
or
subb
ja
es
rcrl
imul
inc
ss
push
lock
test
push
mov
inc
addr16
xchg
test
fldt
jle
imul
movsl
jle
xor
lds
pop
inc
fisubs
xchg
je
test
gs
ds
jbe
mov
insb
dec
outsb
fcomi
addb
sti
shll
and
out
les
dec
stc
fsub
mov
fsubrl
subb
jnp
fdivrs
mov
repnz
or
push
insb
sub
jg
xchg
fwait
dec
call
and
jecxz
xchg
test
inc
jnp
mov
mov
sarl
mov
insl
sbb
movsl
imul
das
jle
lds
pop
push
xchg
inc
adc
inc
pop
sub
mov
adc
insb
mov
andb
aam
enter
pop
in
mov
jmp
pushf
inc
xchg
aas
xchg
mov
lods
aaa
insb
das
loopne
dec
sub
add
cmpsb
sub
jp
pop
dec
mov
insl
add
pop
mov
mov
sub
test
mov
add
xchg
out
push
pusha
mov
pushf
push
fcmovb
xchg
lea
cs
sbb
ret
mov
pop
jl
fwait
data16
fldenv
cmp
leave
sti
xchg
imul
scas
sti
imul
divl
rcr
jae
sub
xor
test
js
xchg
sub
dec
shr
roll
or
dec
fistl
sbb
sub
dec
push
push
scas
inc
dec
pop
mov
jmp
cltd
sub
cmp
or
out
loop
faddl
lods
jae
nop
dec
iret
lea
outsb
aaa
scas
or
popf
aam
pop
hlt
and
ret
push
and
push
flds
mov
aaa
shll
ljmp
fidivrl
push
mov
fwait
xchg
fstl
lret
dec
andb
loopne
mov
mov
andl
lea
pop
out
out
ljmp
test
cld
xor
jmp
rcl
leave
aad
rcr
or
or
js
jl
js
into
test
jle
fstpl
mov
jb
test
int3
xchg
jns
iret
sbb
sar
lret
mov
xchg
movsb
ficoms
fsubr
sub
xchg
repz
and
mov
xchg
pop
es
ds
cmp
ljmp
and
insb
popa
cmpsl
testl
test
cmp
rcrb
iret
lret
adc
fxam
in
ja
jno
mov
mov
lods
mov
lret
xlat
stc
test
rorb
sbb
jg
mov
jle
fwait
jle
es
mov
xchg
jne
pop
shl
cmp
xchg
inc
loop
cwtl
jb
jmp
push
or
push
loope
testb
jns
fldpi
das
push
jnp
mov
pushf
xor
cmp
adc
add
cmpsw
scas
add
xor
xor
xchg
dec
jnp
cwtl
js
pop
cs
add
mov
aas
jge
scas
adc
jbe
pop
sahf
cmpsb
cmp
push
cmc
in
pop
push
cmpsl
cmc
sti
dec
cld
xchg
jecxz
aad
aaa
add
cmp
sti
pusha
jmp
mov
cmp
movsb
je
inc
add
jmp
mov
add
add
lahf
adc
or
push
ja
adc
fimull
cli
lods
adc
add
push
lods
sahf
mov
inc
mov
add
push
adc
aad
xor
push
push
adc
mov
jns
push
fs
mov
cs
push
icebp
rorl
addb
sbb
mov
lcall
stos
mov
xor
das
cmpsb
pop
xor
dec
repnz
sbb
data16
loope
pop
sbb
test
or
add
add
and
icebp
mov
sbb
cmp
adcb
out
push
sbbl
in
test
xor
mov
mov
adcl
xchg
sti
jne
scas
dec
pop
jge
repnz
pop
movb
mov
xor
xor
rclb
addr16
mov
lods
in
mov
repnz
push
fsts
repz
repz
or
lcall
xchg
jb
aas
mov
pop
inc
por
adc
out
call
sti
pop
inc
test
cmp
dec
ja
jno
add
addb
xchg
lea
ret
jp
xor
cmp
jl
fwait
mov
clc
mov
out
lcall
inc
or
pop
mov
rcl
imul
or
dec
pop
pop
xor
or
hlt
inc
out
dec
repnz
push
imul
pop
pop
loopne
and
dec
push
mov
mov
dec
add
xchg
jnp
ds
xchg
outsb
ljmp
scas
cmp
fsubrs
dec
les
loopne
cltd
xlat
and
cltd
lcall
mov
dec
dec
addr16
adc
ja
push
jg
cltd
sbb
xchg
call
fmul
dec
out
sarb
sub
imul
push
sbb
jno
loope
mov
das
mov
cwtl
loopne
test
test
je
jp
ds
add
pop
inc
shrl
pop
dec
ss
cmp
pusha
ret
rcrl
loopne
or
xchg
push
cmp
lds
into
das
outsl
cs
push
lds
xor
sub
adc
add
xchg
cs
popf
in
call
mov
and
push
sti
clc
cltd
inc
mov
fisttpll
jb
rcll
cwtl
int
mov
jae
jge
icebp
in
pop
sti
enter
mov
scas
inc
daa
xor
xor
dec
test
popf
mov
sbb
or
ret
xchg
sahf
xchg
cmp
arpl
inc
push
fdivl
pop
sbb
push
es
mov
inc
inc
dec
mov
sub
pop
xor
outsb
sbb
lea
and
rep
ds
mov
lds
dec
jle
xchg
int3
sub
inc
sub
in
fstl
jmp
xchg
ja
or
fs
ja
pusha
cmpsl
xor
lea
lods
inc
arpl
out
jne
jle
lock
add
dec
mov
out
pop
inc
xor
pop
sub
fiadds
pushf
shll
or
adc
dec
mov
cmp
sub
pop
or
xchg
scas
repnz
cs
test
pop
jl
mov
push
mov
ds
lcall
xlat
or
add
int3
int3
int3
rcl
aas
in
mov
sub
mov
jg
jae
js
cld
mov
cmp
adc
jnp
add
xchg
inc
je
xchg
pop
pop
mov
popf
test
out
pop
pop
popf
dec
and
xor
xorl
loope
dec
xor
cmp
or
std
popa
adc
pop
sbb
in
test
mov
jmp
fcoms
les
and
mov
mov
or
push
test
sbb
les
jnp
sahf
sub
inc
dec
mov
jp
adc
rorb
ja
roll
inc
xchg
fimuls
mov
mov
pop
hlt
xor
xchg
leave
cmp
outsl
stos
aad
cmp
jle
scas
rcl
cmp
sub
lea
in
push
push
lret
jp
popa
repz
sahf
scas
push
sbb
dec
push
andl
sub
ss
cli
jmp
aam
movsb
insl
and
movsb
aas
icebp
lock
dec
add
and
sub
mov
call
sbb
test
cwtl
jmp
lods
fs
cmp
xchg
xchg
push
enter
sub
and
dec
scas
pop
or
xor
push
aad
mov
jne
push
fnstenv
clc
lds
mov
push
lret
jge
sbb
outsb
pusha
adc
sarb
popf
sub
mov
dec
pusha
outsb
cmpsb
es
add
xchg
dec
inc
ret
cmp
push
in
stc
repz
pushl
scas
mov
push
or
dec
xor
xchg
xchg
cmpsb
lods
mov
outsb
pushf
or
push
push
rorl
mov
iret
rclb
inc
std
stos
ret
in
mov
aad
popa
jb
decl
add
mov
add
es
gs
cmp
out
sti
mov
pop
data16
repnz
shl
in
lea
out
inc
sub
popf
sub
mov
fistl
cmp
int
mov
and
test
mov
and
cmp
insl
rol
jne
out
out
stos
test
shr
pop
and
das
jp
push
and
js
cmp
push
push
movsb
rolb
sahf
mov
js
mov
repnz
loopne
fwait
movsl
loopne
shl
es
rdmsr
push
mov
mov
inc
sbb
xor
bound
frstor
cltd
and
pusha
cmp
xchg
dec
jne
mov
ljmp
push
add
incl
jne
pop
push
add
call
insl
add
add
sub
pop
adc
fwait
mov
jp
lods
and
sbb
cwtl
cs
pop
cmp
pop
in
or
jmp
mov
ss
jle
jne
ds
faddl
xchg
xchg
pushf
mov
cmp
or
cmp
mov
jae
ficoml
leave
shll
jnp
cmc
jg
adc
leave
dec
cli
pop
jae
pop
fsubr
pop
push
rolb
iret
rcr
mov
daa
hlt
clc
lret
cmp
dec
mov
adc
std
xchg
and
jns
mov
test
sbb
mov
mov
aaa
std
int3
sti
sub
mov
and
into
mov
ffree
and
sub
and
or
push
push
cmc
push
sub
es
adcl
leave
xchg
imul
cs
xchg
inc
sbb
pop
adc
lcall
xchg
xchg
cmp
xchg
test
fs
inc
loopne
lock
fdivp
sti
cltd
fs
or
shrl
push
leave
xor
les
mov
push
jmp
ja
xchg
sub
loop
shlb
add
testb
movsl
enter
cmp
cmp
xlat
inc
cwtl
mov
or
pop
inc
mov
fidivrl
test
flds
cld
scas
jge
cli
or
mov
movsb
sbb
mov
cltd
fistpl
mov
inc
rcll
mov
outsb
pushl
in
xor
mov
sti
sub
lcall
cmp
and
loope
mov
gs
jp
or
enter
or
dec
cmp
sub
xor
pop
ret
adc
xchg
cmpl
jp
pop
ret
lret
pop
adc
xchg
mov
fwait
jae
inc
aad
mov
daa
cmp
pop
xor
test
call
jp
or
xlat
stos
loopne
add
jle
adc
mov
xchg
in
mov
cmpsb
jnp
add
jmp
les
xlat
lret
rorl
xchg
mov
mov
js
jl
js
filds
out
xor
jl
xchg
movsb
mov
and
inc
addb
int
sub
cmp
gs
jmp
hlt
outsl
ret
add
push
push
jnp
cld
int3
out
mov
xchg
pop
sub
add
cld
aam
imul
jmp
scas
mov
mov
les
mov
xchg
mov
mov
add
add
adc
cmp
sbb
jne
mov
xchg
out
stos
add
mov
dec
push
popl
and
sub
xchg
ljmp
jecxz
ja
mov
scas
push
popa
cmp
mov
cli
jecxz
pop
fldcw
or
test
pop
mov
sbb
sub
nop
shl
mov
jae
xchg
push
adc
rorl
or
outsl
mov
fmuls
mov
test
rclb
jo
ss
pop
fwait
les
sub
mov
cs
jl
push
xor
pop
push
push
and
push
inc
pusha
out
lcall
cltd
jle
fcmovne
sub
pop
pop
sti
cmp
mov
xchg
movsl
jno
xor
mov
xchg
mov
mov
cmp
or
sbb
xchg
cmp
test
data16
ret
in
ja
dec
mov
sbb
inc
cmpsl
mov
adc
stos
or
outsl
ljmp
fisubs
or
lods
bound
push
lods
mov
lcall
xor
stc
pop
cli
flds
xchg
imul
inc
cmpsl
cmp
out
popf
lods
pop
jbe
in
mov
add
in
scas
lock
notb
push
outsb
stc
push
xor
in
pushf
xchg
ror
xor
mov
add
cs
sbb
movsb
clc
pop
xor
add
inc
hlt
fs
cmp
add
in
fldcw
push
or
inc
roll
xlat
lret
sbb
rorb
scas
out
xchg
mov
fcompl
outsl
xchg
and
inc
pop
ds
test
jle
push
test
leave
mov
scas
xchg
outsb
fsincos
sbb
into
and
je
xchg
or
inc
or
pop
lods
xchg
cmpsl
push
daa
push
lods
inc
fisubrs
add
lock
in
inc
push
call
jne
mov
xchg
in
cpuid
jl
ljmp
out
arpl
xchg
mov
lret
cmp
fsubr
leave
add
rcll
dec
je
fwait
stc
pusha
mov
sti
cmpsl
add
cs
cmpsb
or
adc
or
pop
pop
adc
sbb
in
push
mov
leave
stc
mov
cs
lcall
add
pop
in
xchg
dec
mov
fdivl
mov
pop
pop
push
dec
sub
lds
test
call
mov
mov
sarl
mov
jle
or
call
mov
pop
push
repnz
fs
out
cmc
movsb
lock
jbe
inc
push
jns
out
fisubrs
sbb
and
adc
mov
insb
xor
adc
push
cli
aas
jmp
sbb
pusha
movsl
push
enter
xlat
std
inc
jecxz
xchg
dec
dec
mov
dec
mov
imul
test
mov
jge
imul
lcall
lret
int
aas
inc
aam
fs
sbb
loope
stos
js
notl
loope
pop
pop
pusha
push
or
lock
dec
aad
out
gs
push
ret
push
dec
pop
jp
icebp
imul
add
xchg
sbb
adc
jns
cmpsb
testl
hlt
aam
adc
cmp
arpl
or
sti
sub
in
push
rcl
ds
push
cmp
ljmp
cmp
and
addb
mov
xcrypt-cfb
cmpsl
loop
insl
push
scas
ss
sbb
pusha
xor
inc
mov
rorb
push
ljmp
out
ds
lret
sbb
lret
mov
fadds
mov
out
cmc
lcall
xorb
lret
mov
pop
std
aad
jge
add
iret
cmc
out
sub
sub
cltd
sbb
and
push
test
aam
outsb
cmp
mov
jg
xor
and
mov
out
dec
pop
and
inc
add
imul
mov
mov
sub
cmp
ja
jmp
ror
sarl
vpsubusw
out
mov
js
jl
js
xchg
leave
pop
in
test
cmp
sbb
pushf
inc
ljmp
stos
sub
icebp
cs
je
mov
xor
mov
lret
fdivl
rcrl
mov
mov
adc
rclb
jnp
das
adc
lea
popa
movq
repz
shll
cwtl
les
dec
dec
out
adc
cmc
das
int
push
cwtl
xchg
js
or
js
in
outsb
sub
sub
out
sbb
jl
out
dec
sbb
jo
loop
aam
mov
lcall
push
cmp
dec
lock
push
mov
pop
add
mov
fwait
adc
mov
je
push
fsubs
push
out
dec
push
je
inc
mov
pop
add
aaa
addr16
ss
loop
jo
stos
cmp
push
push
mov
xchg
ds
ss
fnstcw
jno
xorl
jns
mov
mov
mov
xchg
xlat
push
les
loopne
bound
daa
mov
icebp
loopne
imul
lahf
cmp
fcompl
pop
ja
mov
jnp
mov
push
pop
pop
mov
pusha
add
jmp
xchg
mull
pop
lea
sbb
test
es
jecxz
cmp
cmpsl
sbb
sbb
push
pop
mov
push
int
rcr
scas
add
lret
or
dec
inc
cs
xor
dec
and
lahf
fs
pop
adc
jno
sub
mov
mov
sbb
cmpsl
sbb
cmp
in
ljmp
call
jne
xor
js
orb
or
dec
rorl
fs
inc
pushf
and
xchg
or
sbb
pusha
push
popa
cmpsl
xchg
jns
enter
movsl
mov
movsb
add
xchg
mov
enter
bound
sub
mov
out
xor
push
pop
out
movsb
std
adc
jmp
data16
mov
andb
dec
jo
dec
fwait
xor
jl
ret
cmc
xchg
das
lcall
lret
lods
icebp
mov
xor
in
ljmp
stos
out
xchg
jmp
dec
movsl
fs
leave
mov
adc
leave
loope
inc
add
xor
out
test
imul
fnstsw
sarb
divb
mov
push
mov
push
mov
clc
cmp
mov
mov
outsl
adc
js
and
int3
pop
jae
mov
jnp
in
mov
out
xchg
mov
pop
int
mov
mov
push
or
sbb
xor
jbe
or
fsubr
cmp
out
je
loope
pop
loope
and
fsubrp
pop
es
pop
aam
pop
push
cmpsb
jb
mov
mov
xchg
jecxz
sub
cmpsl
jb
cmpl
xchg
sbb
cli
push
dec
pop
pop
and
imul
jno
pop
mov
mov
dec
xor
or
in
loop
fs
push
lods
lock
idivl
test
in
jo
push
xor
and
mov
into
inc
sub
cmpb
int3
dec
push
shrl
clc
lea
lods
adc
leave
sub
in
icebp
cmpsl
enter
ret
fisttpll
xlat
sub
dec
pusha
cwtl
ljmp
sbb
pop
js
in
into
cmp
test
push
test
jno
push
cmp
test
pushf
mov
sub
push
or
xchg
scas
jno
or
cmpsl
xchg
pushf
andb
loope
push
out
std
sub
adc
pop
hlt
pop
cmp
cmc
cmpsl
aam
cmc
adc
stos
mov
into
int
aaa
xorb
xor
das
adc
cmp
idivb
stc
inc
lds
loopne
pop
enter
xor
xor
insl
cmpl
add
sbb
sti
imul
jl
sub
sbb
sti
shll
dec
dec
or
mov
leave
adc
lock
stos
pushf
mov
fdivs
mov
bound
or
mov
cld
imul
adc
in
repz
loop
js
pop
and
add
insb
and
inc
add
dec
sarl
scas
sbb
ja
outsb
test
scas
stos
fs
mov
lcall
jmp
mov
mov
xor
xor
add
add
jmp
vmovq
fcmovu
fdiv
mov
into
cs
jg
js
js
js
or
loope
mov
int
hlt
sub
pop
xchg
icebp
popf
pop
or
aaa
sbb
scas
xlat
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
xor
adcl
add
mov
mov
movl
movl
mov
push
movl
movl
mov
movl
cmp
movl
je
dec
mov
adcl
xor
addl
xor
subl
lea
subl
xor
movl
cmp
jne
movl
jmp
mov
mov
xor
add
mov
and
mov
mov
adcl
xor
add
sbbl
mov
mov
or
mov
orl
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
sbb
push
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
push
pushl
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
sub
lea
push
pushl
not
push
lea
inc
inc
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
pop
subl
xor
adcl
call
cmpl
jne
xor
movl
inc
jmp
sub
movl
adc
movl
lea
xor
mov
lea
mov
subl
mov
mov
sub
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
cmp
movzbl
mov
mov
je
sbb
mov
xor
xorl
add
orl
imul
mov
movl
jmp
xor
or
add
add
mov
mov
incl
xor
add
inc
mov
mov
subl
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
mov
mov
xor
lea
mov
mov
mov
movl
mov
movl
mov
mov
xor
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movzwl
mov
mov
mov
mov
movl
movl
cmp
jne
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
mov
and
movl
mov
mov
sub
mov
movzbl
add
mov
sub
lea
and
mov
xorl
mov
adc
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jb
adc
lea
xor
xor
mov
sub
and
mov
dec
mov
xor
push
adc
push
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
or
sub
or
mov
mov
sbbl
xor
sub
mov
xor
andl
xor
add
adcl
add
orl
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movzwl
add
mov
inc
mov
mov
sbb
mov
mov
mov
mov
push
push
and
mov
mov
mov
adc
xor
adc
push
mov
add
add
decl
mov
sub
lea
adc
mov
mov
mov
xor
xor
add
mov
adc
movl
xor
xor
mov
sub
or
lea
mov
sbb
mov
mov
movzbl
xor
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzbl
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbbl
mov
not
mov
sbbl
mov
andl
mov
mov
subl
mov
movzwl
xorl
add
mov
mov
mov
andl
xor
addl
add
cmp
movl
jne
mov
adc
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
or
xor
xor
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
xor
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
or
mov
adcl
add
movl
mov
and
mov
push
push
sbbl
test
je
adcl
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
imul
mov
subl
add
sub
mov
xorl
mov
xchg
sub
sub
xor
add
mov
mov
mov
xorl
mov
mov
subl
xor
xor
addl
add
mov
mov
mov
je
mov
xor
add
cmp
movl
jne
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
je
pushl
pushl
addl
call
movzwl
sbb
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
mov
notl
movl
push
movl
mov
mov
movl
push
mov
movzwl
mov
cmp
je
mov
or
mov
mov
add
mov
andl
xor
adcl
add
cmp
movl
je
neg
mov
xor
xor
or
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
neg
pushl
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
push
sbbl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
and
mov
add
push
andl
mov
mov
orl
xor
andl
movl
movl
xorl
add
movl
jmp
cmp
jne
mov
mov
movl
mov
movl
mov
notl
mov
mov
movl
mov
movl
jmp
movl
cmp
jne
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
mov
sub
orl
push
xor
or
add
mov
mov
movl
add
andl
push
orl
call
incl
movl
cmpl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
xor
push
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
push
adc
mov
sbb
mov
xor
xor
mov
adc
mov
add
add
orl
imul
mov
mov
cmp
movl
jne
not
mov
xor
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
mov
movzbl
or
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
movl
sub
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
pushl
pop
inc
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
mov
orl
xor
xor
mov
add
movzwl
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
mov
sbb
movb
xor
xor
sub
lea
dec
mov
adc
mov
mov
xor
sbbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
movl
adc
mov
mov
orl
push
sbbl
xor
mov
add
movl
jmp
mov
movl
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
mov
mov
add
xor
movl
cmp
jne
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
add
mov
add
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
pop
pop
add
jo
add
test
add
pop
add
rcrb
add
add
ljmp
add
add
adc
add
pop
add
sub
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
js
add
mov
add
pop
add
mov
pop
add
pop
add
loop
add
lock
add
pop
add
or
add
pop
add
sub
add
add
inc
pop
add
push
pop
add
pusha
pop
add
jb
add
test
add
pop
add
mov
add
pop
add
rcrb
add
pop
add
out
pop
add
cld
pop
add
push
pop
add
push
pop
add
cs
add
inc
pop
add
dec
pop
add
pop
add
jbe
add
mov
mov
pop
add
ret
add
pop
add
ljmp
add
pop
add
sbb
add
sub
add
pop
add
dec
pop
add
fs
add
jbe
add
test
add
add
rcrb
into
pop
add
ficompl
add
pop
add
cli
pop
add
push
pop
add
push
pop
add
cs
add
cmp
add
add
fs
add
jp
add
mov
add
pop
add
ret
add
pop
add
ljmp
add
pop
add
sbb
add
pop
add
cmp
add
add
pusha
pop
add
jb
add
mov
add
add
mov
add
rcrb
rcrb
add
pop
add
negb
add
pusha
add
adc
add
and
add
xor
add
push
pusha
add
fs
add
jb
add
mov
add
pusha
add
mov
pusha
add
add
add
in
pusha
add
cli
pusha
add
or
add
and
add
popa
add
inc
popa
add
pop
popa
add
jo
add
andb
nop
popa
add
mov
popa
add
les
add
popa
add
cli
popa
add
add
add
sbb
add
bound
add
add
push
bound
add
add
je
add
mov
add
add
mov
add
ret
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
add
add
nop
arpl
add
add
enter
fsubs
add
arpl
add
arpl
add
add
sbb
add
sub
dec
add
pop
add
fs
add
add
mov
xchg
add
mov
add
mov
add
add
aam
add
fisubs
call
add
add
add
add
sbb
add
es
xor
add
cmp
add
inc
add
push
add
pop
add
fs
jb
add
jl
add
xchg
add
add
mov
add
mov
add
enter
shlb
add
add
out
add
out
add
mulb
add
data16
or
add
add
and
add
add
data16
data16
dec
data16
pop
data16
bound
add
add
add
add
mov
add
data16
shlb
shlb
add
data16
cli
data16
or
add
add
add
xor
add
add
push
add
pop
add
data16
js
add
test
add
add
mov
add
lret
add
add
ljmp
add
push
add
sbb
add
add
ss
add
pop
push
add
jp
add
mov
add
push
add
les
add
push
add
push
add
sbb
add
add
add
add
add
add
jb
add
jb
add
add
add
pop
push
imul
arpl
ja
jp
gs
dec
je
ja
popa
push
jno
jae
dec
dec
jae
dec
push
push
push
push
fs
insl
push
inc
dec
push
insl
inc
push
dec
data16
jne
imul
jno
arpl
dec
dec
push
imul
push
imul
and
add
add
mov
add
add
add
add
add
add
push
add
mov
dec
add
mov
add
add
push
xor
jns
bound
popa
push
je,pn
jo
aas
inc
jo
dec
popa
insl
gs
js
inc
inc
pop
inc
push
inc
inc
push
inc
dec
push
inc
inc
push
inc
dec
dec
cmp
add
add
add
fcompl
add
push
add
je
add
loopne
add
sbb
add
and
add
jp
add
int3
push
add
lock
add
outsb
data16
cwtl
push
add
movsb
pop
add
sub
add
add
add
jo
add
test
add
pop
add
rcrb
add
add
ljmp
add
add
adc
add
pop
add
sub
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
js
add
mov
add
pop
add
mov
pop
add
pop
add
loop
add
lock
add
pop
add
or
add
pop
add
sub
add
add
inc
pop
add
push
pop
add
pusha
pop
add
jb
add
test
add
pop
add
mov
add
pop
add
rcrb
add
pop
add
out
pop
add
cld
pop
add
push
pop
add
push
pop
add
cs
add
inc
pop
add
dec
pop
add
pop
add
jbe
add
mov
mov
pop
add
ret
add
pop
add
ljmp
add
pop
add
sbb
add
sub
add
pop
add
dec
pop
add
fs
add
jbe
add
test
add
add
rcrb
into
pop
add
ficompl
add
pop
add
cli
pop
add
push
pop
add
push
pop
add
cs
add
cmp
add
add
fs
add
jp
add
mov
add
pop
add
ret
add
pop
add
ljmp
add
pop
add
sbb
add
pop
add
cmp
add
add
pusha
pop
add
jb
add
mov
add
add
mov
add
rcrb
rcrb
add
pop
add
negb
add
pusha
add
adc
add
and
add
xor
add
push
pusha
add
fs
add
jb
add
mov
add
pusha
add
mov
pusha
add
add
add
in
pusha
add
cli
pusha
add
or
add
and
add
popa
add
inc
popa
add
pop
popa
add
jo
add
andb
nop
popa
add
mov
popa
add
les
add
popa
add
cli
popa
add
add
add
sbb
add
bound
add
add
push
bound
add
add
je
add
mov
add
add
mov
add
ret
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
add
add
nop
arpl
add
add
enter
fsubs
add
arpl
add
arpl
add
add
sbb
add
sub
dec
add
pop
add
fs
add
add
mov
xchg
add
mov
add
mov
add
add
aam
add
fisubs
call
add
add
add
add
sbb
add
es
xor
add
cmp
add
inc
add
push
add
pop
add
fs
jb
add
jl
add
xchg
add
add
mov
add
mov
add
enter
shlb
add
add
out
add
out
add
mulb
add
data16
or
add
add
and
add
add
data16
data16
dec
data16
pop
data16
bound
add
add
add
add
mov
add
data16
shlb
shlb
add
data16
cli
data16
or
add
add
add
xor
add
add
push
add
pop
add
data16
js
add
test
add
add
mov
add
lret
add
add
ljmp
add
push
add
sbb
add
add
ss
add
pop
push
add
jp
add
mov
add
push
add
les
add
push
add
push
add
sbb
add
add
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
popa
addr16
imul
outsl
jbe
add
push
add
gs
je
push
outsl
outsl
insb
bound
inc
js
add
popa
addr16
imul
dec
arpl
add
popa
je
push
je
je
jae
imul
pop
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
push
imul
push
arpl
push
add
push
add
je
popa
jb
outsb
je
sgdtl
je
insb
addr16
je
insl
add
scas
add
fs
arpl
inc
add
push
push
jb
outsl
jb
add
imul
popa
jae
push
add
xchg
add
je
outsl
jns
popa
jb
je
add
add
outsb
imul
push
arpl
add
push
imul
movsb
add
pop
outsl
outsl
insl
gs
aaa
add
popa
jb
jo
gs
jne
inc
add
inc
add
je
outsl
arpl
add
cwtl
add
inc
imul
jae
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
jbe
push
imul
mov
push
imul
ja
add
ja
arpl
add
xchg
add
je
outsl
jns
outsb
jne
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jne
insb
push
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
roll
jbe
jo
imul
inc
add
je
popa
jb
outsb
je
sti
add
dec
outsb
push
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
hlt
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
imul
je
gs
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
gs
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
gs
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
outsl
outsb
imul
push
jb
je
cmp
inc
insb
addr16
je
insl
dec
outsb
je
addl
outsb
jae
jb
dec
outsb
jne
add
inc
jb
popa
je
push
imul
push
add
add
jae
popa
addr16
outsl
js
js
add
add
outsb
fs
gs
popa
addr16
add
jl
push
push
outsb
gs
outsl
jo
jo
add
inc
outsl
jo
push
arpl
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
pop
add
je
jns
je
insl
dec
outsb
jne
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
push
add
arpl
outsl
jo
jo
outsb
jne
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
push
imul
popa
jae
inc
js
add
outsb
add
je
imul
outsb
addr16
add
xchg
inc
gs
insb
addr16
jb
arpl
cmp
inc
push
insb
addr16
jne
je
outsb
add
stos
add
fs
imul
add
jo
imul
arpl
add
fs
arpl
insb
gs
je
jb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
gs
imul
js
push
add
xor
push
gs
popa
jb
je
outsl
jae
icebp
add
jae
dec
gs
popa
addr16
add
mov
fs
je
imul
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
mov
inc
jb
ja
arpl
inc
js
add
push
gs
push
add
imul
imul
add
jae
jb
outsb
je
push
add
push
add
je
jb
jo
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
gs
jo
popa
je
push
arpl
add
fs
popa
jb
je
out
add
imul
jae
addr16
add
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
inc
gs
insb
addr16
jb
arpl
add
push
imul
popa
jae
inc
add
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
add
imul
jae
addr16
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
and
dec
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
jb
inc
gs
imul
arpl
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
imul
add
je
outsl
jns
jne
jae
jb
bound
inc
gs
outsl
jo
imul
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
je
imul
add
gs
je
inc
imul
jb
insl
inc
add
call
outsb
dec
arpl
add
jecxz
inc
imul
outsl
ja
js
add
add
jae
popa
addr16
outsl
js
add
insb
imul
jb
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
outsl
arpl
push
arpl
add
jbe
insb
imul
je
add
insb
push
imul
inc
gs
outsb
jne
je
je
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
ja
outsb
imul
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
insl
push
outsl
inc
push
add
add
jne
inc
push
imul
add
add
je
jne
jae
jb
outsl
jae
add
add
insl
outsl
jbe
dec
outsb
jne
add
add
outsb
imul
push
outsl
imul
inc
push
xor
cs
insb
add
mov
gs
jbe
outsb
je
add
add
gs
je
dec
popa
imul
sbb
inc
gs
jne
bound
inc
outsl
jb
popa
je
add
pusha
add
outsb
fs
imul
gs
add
jecxz
inc
jb
popa
je
push
imul
inc
gs
imul
imul
jns
add
fiaddl
dec
jae
popa
insb
imul
addr16
jb
jne
add
outsl
add
outsb
fs
gs
jne
arpl
add
add
inc
popa
fs
outsl
fs
je
add
mov
inc
jb
inc
imul
dec
push
dec
add
push
gs
imul
jne
push
imul
add
je
push
dec
outsb
outsw
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
push
insb
gs
js
mov
push
gs
outsl
jbe
inc
imul
jns
add
dec
add
je
jns
je
insl
inc
imul
jns
add
inc
imul
je
imul
push
gs
push
inc
outsl
outsb
je
js
add
out
add
je
imul
mov
inc
outsl
insl
jo
jb
inc
imul
ja
inc
insb
jne
push
inc
jne
data16
add
int3
add
jae
jb
jo
outsb
push
add
jo
outsb
insb
outsl
arpl
add
gs
jae
dec
jne
gs
add
add
fs
imul
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
gs
inc
imul
jb
popa
je
dec
jne
gs
add
add
je
push
dec
outsl
arpl
add
inc
gs
imul
popa
je
add
into
add
jae
jb
outsb
inc
add
adc
dec
outsl
arpl
push
imul
imul
jne
arpl
js
add
imul
je
push
dec
outsl
je
imul
outsl
outsb
push
add
xchg
add
je
outsl
insl
insl
dec
outsl
fs
push
je
je
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
js
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
sbb
gs
imul
gs
add
inc
gs
imul
popa
je
add
xchg
add
je
outsl
insl
insl
inc
outsl
outsb
imul
dec
jae
popa
fs
jb
je
push
je
add
imul
jne
arpl
add
add
je
outsl
insl
insl
push
je
je
add
imul
push
push
jb
outsl
jb
je
add
add
gs
inc
imul
gs
outsb
push
gs
js
gs
imul
gs
mov
inc
gs
je
insl
dec
popa
insl
gs
add
rolb
je
arpl
push
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
jae
popa
arpl
add
jae
add
jb
outsb
je
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xor
arpl
je
add
cli
add
jb
outsl
imul
out
jae
jb
outsl
insb
insb
add
pop
pop
arpl
insl
outsl
fs
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
jb
je
add
sahf
add
jae
bound
gs
add
jge
data16
add
lds
jo
imul
add
insb
outsl
ja
jb
stos
add
ja
imul
data16
je
add
pop
pop
arpl
inc
imul
jae
jb
outsb
je
add
add
outsl
insb
outsl
ja
jb
and
pop
gs
je
add
jns
je
insl
add
call
js
je
add
je
insb
add
iret
add
outsb
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
and
arpl
jae
outsb
add
add
jb
outsl
jne
add
ja
jae
bound
add
arpl
imul
add
gs
insb
add
outsb
jne
add
add
jb
push
add
jb
outsl
insb
add
movsb
add
ja
imul
add
jb
jb
outsl
jb
add
outsl
ja
add
push
add
imul
pop
pop
addr16
popa
imul
and
arpl
jo
add
xchg
add
popa
insb
jo
popa
add
add
jae
jb
outsb
je
add
dec
push
push
inc
push
push
cs
insb
add
xchg
inc
jb
popa
je
inc
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
imul
add
arpl
push
imul
inc
gs
jne
jb
outsb
je
bound
arpl
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
jb
popa
je
push
arpl
outsb
add
insb
je
add
push
gs
dec
gs
imul
inc
push
je
dec
push
add
popf
add
gs
je
inc
outsl
outsb
je
outsb
imul
aad
push
gs
imul
add
inc
outsl
arpl
add
add
insb
insb
push
outsb
add
add
je
imul
addr16
js
add
add
jae
outsl
jb
inc
inc
add
popa
je
dec
popa
je
push
push
push
gs
bound
je
jb
arpl
add
inc
gs
popa
jo
outsl
fs
testb
gs
je
gs
push
outsl
fs
inc
gs
outsb
inc
outsl
js
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
movl
inc
inc
add
sahf
add
gs
je
inc
outsl
outsb
je
add
push
popa
addr16
add
je
dec
inc
imul
fs
outsl
outsb
je
gs
jne
arpl
add
xchg
add
outsl
inc
push
add
mov
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jns
jne
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
dec
gs
imul
push
arpl
jae
bound
cli
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
gs
dec
inc
imul
popa
jb
push
popa
add
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
rolb
outsb
fs
popa
je
add
popa
je
inc
imul
imul
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
je
outsb
insb
add
push
imul
inc
gs
bound
arpl
add
dec
xor
cs
insb
add
pop
jp
jp
push
add
add
insl
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
dec
imul
inc
imul
insl
inc
add
inc
add
insb
inc
add
imul
imul
insb
inc
add
test
pushf
clc
inc
imul
insb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
imul
insl
inc
add
test
dec
imul
sbb
orl
call
inc
add
addr16
mov
jne
mov
incb
mov
imul
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
imul
push
dec
insb
popa
cmp
push
pop
lds
add
cmp
add
add
add
inc
add
add
add
add
push
add
insb
add
inc
add
dec
add
add
inc
add
dec
add
add
add
inc
add
push
add
add
insb
add
imul
add
add
imul
cli
jne
push
cmp
pop
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
xchg
imul
pop
mov
int3
push
inc
add
dec
jae
imul
imul
in
adc
addr16
push
pop
jb
inc
inc
dec
imul
dec
inc
dec
imul
add
push
dec
inc
outsb
jno
inc
dec
jno
imul
je
jo
dec
insb
popa
inc
inc
ja
inc
add
push
push
dec
popa
pop
addr16
popa
outsb
pop
insb
inc
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
push
adc
push
adc
push
cmp
adc
cli
push
adc
sub
add
adc
mov
adc
xor
add
jg
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
sbb
add
dec
adc
cmp
add
adc
roll
add
push
adc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
dec
adc
dec
and
add
adc
sub
jbe
adc
add
adc
jo
adc
push
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
adc
xor
adc
cmp
arpl
add
pop
adc
xchg
mov
inc
add
mov
inc
add
mov
inc
add
push
adc
cwtl
xor
add
xor
add
push
adc
add
adc
lret
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
dec
cmp
cmp
push
add
inc
cmp
inc
xor
add
push
xor
dec
push
push
xor
push
inc
xor
pop
xor
add
dec
pop
push
xor
pop
xor
push
dec
aaa
cmp
dec
push
pop
cmp
dec
add
xor
pop
inc
xor
aaa
cmp
dec
add
inc
pop
pop
inc
xor
inc
add
xor
xor
dec
inc
aaa
aaa
add
aaa
pop
push
pop
xor
pop
inc
dec
dec
inc
add
dec
aaa
pop
inc
dec
inc
pop
xor
pop
inc
xor
dec
xor
pop
xor
cmp
dec
dec
cmp
xor
cmp
pop
xor
push
pop
xor
cmp
cmp
push
inc
pop
push
dec
ss
dec
inc
add
xor
push
inc
inc
pop
push
add
pop
xor
pop
push
add
xor
pop
push
dec
pop
pop
inc
dec
inc
add
aaa
pop
push
push
dec
aaa
pop
xor
push
xor
xor
inc
inc
push
dec
pop
push
dec
inc
add
push
pop
dec
dec
aaa
pop
dec
add
pop
pop
dec
inc
pop
push
add
ss
aaa
inc
xor
xor
pop
dec
push
xor
add
pop
pop
push
inc
dec
aaa
inc
pop
push
push
add
dec
add
add
xor
push
add
add
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
add
add
dec
add
add
push
add
add
pop
add
add
add
add
xor
add
dec
add
dec
add
add
dec
add
add
add
add
push
add
add
inc
add
inc
add
add
xor
add
add
add
add
add
pop
add
add
xor
add
push
add
add
add
add
cmp
pop
add
add
xor
push
add
add
add
push
add
xor
pop
add
add
add
dec
add
push
add
add
add
push
add
add
xor
dec
add
inc
add
dec
add
xor
inc
add
add
add
xor
dec
add
aaa
add
inc
add
dec
add
xor
inc
add
add
dec
add
inc
add
inc
add
push
add
add
add
inc
push
pop
mov
inc
mov
stc
fldenv
dec
cmp
jp
outsl
inc
outsb
gs
gs
arpl
outsb
jne
dec
push
imul
dec
jo
pop
gs
js
inc
outsl
arpl
pushw
dec
push
arpl
bound
jbe
outsb
jo,pn
bound
