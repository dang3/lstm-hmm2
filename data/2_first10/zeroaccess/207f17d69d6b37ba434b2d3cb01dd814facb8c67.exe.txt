push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jle
jl
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
sbb
adc
repnz
mov
clc
and
inc
jmp
cwtl
mov
pop
inc
xchg
adc
cmc
jp
xchg
lock
lods
stos
sbb
insl
ja
mov
iret
cmpsl
test
push
fldt
mov
jae
lods
cli
lahf
pop
lret
add
mov
ss
pop
dec
xchg
cli
mov
cmp
fdivr
cmc
fildl
roll
pusha
jmp
push
out
adc
inc
ror
mov
push
incl
sub
mov
mov
pop
add
sub
mov
push
mov
push
pusha
aam
inc
cld
mov
jne
push
ret
mov
insb
push
push
ret
sbb
pop
add
imul
call
and
mov
add
loop
sub
das
cmp
leave
xor
mov
stos
inc
xchg
std
ffreep
pop
outsl
jl
icebp
decl
sub
add
scas
mov
cmp
das
inc
fs
int
cmp
push
push
dec
test
sbb
lods
nop
rcrl
push
cwtl
mov
fcoml
cli
mov
test
jecxz
or
in
lcall
xor
es
xchg
mov
cmp
jae
fistpll
inc
jb
les
fwait
mov
pop
mov
bound
cmc
mov
lods
aam
or
or
pop
fists
and
jge
dec
pop
mov
sub
loope
mov
sarb
mov
popa
mov
lods
push
pop
pop
rolb
repnz
loopne
push
scas
xchg
dec
sbb
ret
pop
jne
pusha
push
test
adc
andl
sub
mov
push
pop
lea
cld
aad
call
cmp
in
mov
fcoms
add
daa
shl
dec
imul
push
testb
test
repnz
xchg
push
loope
je
push
pop
mov
lahf
test
or
ror
loop
push
lods
jmp
fdivrp
in
jno
and
jns
ja
insb
in
fadd
sbb
and
inc
test
addl
stos
lret
push
dec
ds
fcmovne
data16
stos
scas
adc
lds
dec
push
mov
bound
push
bound
je
sub
mov
ret
cs
and
sub
fcoml
mov
aaa
jg
mov
push
fcomi
adc
sbb
add
mov
lret
outsb
mov
pushf
inc
xchg
dec
out
pop
das
fadds
pop
call
mov
bound
push
movsb
cmp
clc
stos
and
or
xchg
ljmp
out
ret
jno
mov
mov
in
frstor
sbb
cltd
aas
pop
push
sub
dec
mov
push
xor
aad
push
cmp
xor
jp
test
push
ret
jb
mov
pop
mov
push
sbb
push
mov
aaa
xorl
jb
subl
cmp
sbb
push
jb
mov
and
xchg
cmc
xchg
stc
in
mov
xor
and
add
mov
test
xchg
inc
jno
mov
pushf
cmp
dec
jo
add
out
or
sub
jle
mov
fsubr
jmp
int3
push
int
cmpsl
insl
aam
je
icebp
mov
jecxz
pop
or
mov
fidivl
arpl
jno
xor
or
mov
or
and
xchg
push
ror
scas
cmc
das
inc
enter
ret
jne
repz
mov
sub
push
push
sbb
shll
push
test
xchg
mov
sub
dec
ret
fldcw
jne
push
cmc
mov
aas
out
cwtl
pushf
shrl
or
inc
or
call
aas
mov
adc
repnz
adc
cltd
mov
cmpsl
data16
cmp
or
lea
aaa
pop
xlat
out
inc
mov
in
scas
cmp
sbbb
pop
sti
cmp
and
sbb
fucomip
inc
in
pop
pop
stos
call
ss
push
dec
push
inc
aam
xchg
pop
sti
push
push
inc
add
sbb
icebp
xorl
fldl
xor
fs
js
dec
mov
cmp
dec
lahf
adcl
sbb
sar
mov
aam
inc
sbb
outsb
rol
push
mov
sbb
push
jg
fdivs
cmp
or
aad
outsl
push
addb
xor
mov
xchg
inc
mov
mov
jmp
repnz
insl
rol
rcrb
dec
ljmp
aas
mov
cmp
mov
mov
mov
mov
outsb
ret
cli
jmp
cmpl
mov
shl
rorl
pop
add
outsl
jnp
adc
clc
jmp
mov
js
push
and
pop
out
movsb
arpl
adc
ret
roll
inc
xchg
in
sahf
fwait
mov
icebp
push
inc
fmull
cmpl
lock
jge
push
in
pop
rcrl
daa
aas
mov
mov
cs
pop
enter
or
fs
fisubrs
in
inc
adcb
arpl
movsb
out
loope
je
xor
cmpsl
pushf
adc
add
push
notb
in
movsb
mov
xchg
mov
pop
sub
pop
add
popf
and
mov
xchg
jno
mov
jne
loope
fsubrl
xchg
movsb
int3
paddsw
fldl
adc
out
push
arpl
inc
or
push
fisttpl
mov
test
dec
cmc
lret
mov
adc
iret
xchg
mov
fldt
add
xor
cld
repz
cli
in
or
lods
leave
pop
je
adc
fs
adc
inc
push
and
adc
rcrb
sbb
sub
push
push
xor
cmpsb
leave
sub
pop
mov
and
mov
mov
dec
test
leave
dec
xchg
out
inc
in
dec
es
aas
dec
btr
mov
pop
adc
lock
cmpsb
push
in
ss
mov
or
loope
push
cmp
push
shr
inc
cld
jle
and
lds
push
sub
shld
lds
mov
adc
outsl
push
and
ja
mov
mov
out
mov
sahf
mov
cmp
jne
and
cmp
outsb
mov
adc
and
fcmovnbe
jb
mov
addr16
and
sbb
mov
mov
movsb
and
clc
jecxz
dec
dec
cmc
cmpsb
mov
add
test
sahf
sbb
add
xor
xchg
fwait
jmp
loopne
xor
push
sub
and
lahf
cmp
sahf
or
and
xor
pop
enter
push
addr16
push
andb
std
fmull
and
daa
insl
xchg
ret
and
popl
add
xchg
int3
aaa
mov
das
and
jbe
adc
outsb
pusha
hlt
sbb
push
pop
cmp
neg
and
dec
adc
shll
xchg
add
shlb
fs
dec
xchg
fnstsw
cltd
out
pushf
pop
mov
out
mov
lea
faddl
push
inc
fs
adc
push
aaa
arpl
xchg
cmp
iret
enter
mov
or
push
ja
negb
pop
rorb
xor
cltd
pop
and
jae
lret
cmp
xor
pusha
jle
out
cmp
fwait
pop
in
sub
addr16
pusha
push
sbb
std
orb
add
or
je
mov
xchg
cmp
mov
je
scas
enter
jne
orb
mov
adc
mov
fildl
pop
inc
mov
dec
sbbb
add
cwtl
loopne
push
leave
mov
push
cmp
mov
jne
and
xacquire
mov
pop
mov
cmpsl
ficoml
call
sbb
ret
outsb
aas
jmp
pop
fsubr
pop
scas
test
jmp
insb
sbb
cmpsb
ret
pop
rolb
sahf
push
jno
jp
mov
mov
jl
cmpsb
add
mov
sub
or
dec
stos
pop
mov
pop
adc
arpl
xor
adc
nop
addr16
aad
jecxz
jmp
inc
loope
jle
cmp
fwait
hlt
sahf
sbb
lods
cmpsl
faddp
ja
xlat
jae
mov
lea
out
xor
fstpl
int
mov
adc
loope
fsts
xchg
shrb
xorb
mov
jecxz
mov
fbstp
aam
popa
push
ds
mov
pop
data16
push
or
rolb
xchg
cmp
mov
imull
icebp
aad
mov
xchg
nop
sbb
push
or
push
sub
push
jb
rcll
sub
shr
cwtl
xor
push
pusha
adcl
ret
scas
and
mov
lret
pop
mov
out
adc
pop
out
xor
es
mov
mov
cmp
pushf
mov
add
xchg
shr
dec
jno
insl
mov
sbb
inc
loope
xor
imul
test
sub
int3
jl
dec
cli
jle
shlb
out
leave
les
stos
popa
or
fnsave
pop
jb
lods
imul
stc
icebp
mov
mov
adc
xchg
inc
cld
hlt
js
stos
dec
mov
sbb
push
rcrl
out
scas
add
mov
dec
mov
push
lahf
cmpsb
inc
mov
xor
inc
into
jae
jg
sbb
xor
insb
dec
insb
jnp
cwtl
enter
in
shlb
sti
pusha
dec
out
cmp
scas
rolb
fiadds
insl
cs
cmp
fisubrl
lret
push
or
jmp
xchg
fcoms
mov
jle
mov
dec
sbb
shll
adc
leave
push
or
mov
inc
popa
and
shll
lds
or
push
test
push
adc
bound
mov
pushf
iret
cmc
push
sbb
stos
dec
push
mov
pop
test
fldl2t
mov
add
imul
int
dec
aam
lret
jne
mov
fnstenv
xchg
daa
xor
aas
bnd
add
cmpsb
cld
mov
mov
fidivrl
std
cmpb
in
cs
aad
adc
insb
push
push
or
test
xchg
ret
rorb
scas
and
mov
push
jno
jnp
in
outsl
adc
mov
js
xor
pop
mov
or
mulb
dec
inc
jae
scas
push
push
hlt
push
mov
adc
shrl
jae
sbb
jle
movsl
jp
lret
cmpl
jg
mov
sbb
mov
push
movl
fbld
in
rcl
xchg
lods
and
sbb
dec
ror
and
movsb
pop
cli
mov
mov
xchg
xchg
mov
and
int3
sbb
jle
mov
test
loop
lock
das
jmp
add
test
cs
adc
repz
out
sub
mov
sub
mov
and
mov
fsubl
out
test
or
mulb
add
pop
jne
pop
lea
adc
pop
xchg
insb
xor
inc
cmp
jge
push
mov
sbb
arpl
aad
test
inc
inc
mov
bnd
mov
gs
in
mov
cmpsb
loopne
mov
or
mov
jmp
popa
add
stos
out
mov
pop
dec
cmp
and
and
xlat
test
testl
imull
out
leave
jbe
xchg
out
cmp
in
sbb
les
call
ret
jnp
test
dec
add
inc
pop
xchg
mov
cmp
cs
out
inc
mulb
xchg
out
out
stos
sbb
imul
xchg
das
and
pop
mov
adc
xchg
xchg
sbb
jle
fcos
jno
or
push
bound
inc
cltd
dec
mov
jl
daa
pop
leave
adc
mov
mov
pusha
cwtl
mov
push
in
int
sarl
test
pushf
ja
rorl
xchg
stos
mov
fimull
stos
or
cmp
mov
add
fistpl
aaa
jo
js
mov
inc
out
movsb
shlb
xchg
push
sti
adc
roll
fmull
adc
cmpsb
xor
stc
and
sub
cs
xchg
push
dec
adc
and
in
inc
mov
les
std
cmpsb
pop
add
popf
add
or
mov
call
xchg
addr16
out
sub
mov
dec
mov
repnz
xchg
scas
les
test
adc
adc
dec
imul
fmull
xor
inc
or
push
sti
outsl
and
mov
movsl
jae
cmc
sub
sbb
lods
ja
dec
popf
aaa
insb
rol
push
mov
mov
and
and
data16
jbe
and
cltd
nop
popa
insb
fwait
push
loope
mov
rcll
fucompp
adc
xorl
fcoml
inc
ret
dec
push
loopne
and
mov
bound
xor
mov
jp
mov
scas
lret
mov
mull
mov
inc
adc
pop
daa
dec
sub
and
in
sbb
and
cmp
inc
neg
loope
leave
fwait
mov
pop
sbb
es
sub
jo
dec
mov
imul
pop
dec
mov
xchg
ss
dec
pusha
adc
inc
add
les
mov
inc
cwtl
negl
mov
stos
sti
mov
rsm
scas
mov
jo
mov
inc
mov
in
decb
pop
test
repnz
adc
pop
rcrl
fnstcw
jmp
dec
push
std
je
inc
lea
jmp
mov
dec
pusha
jl
add
mov
jns
pop
rorb
mov
out
adc
pop
insl
rcr
push
and
call
inc
sbb
dec
inc
mov
mov
jns
daa
mov
xor
cltd
imul
cmp
insb
in
push
cmp
ss
sbb
rcrl
add
loop
jb
mov
into
fninit
es
mov
mov
jns
enter
push
ljmp
inc
lea
adc
push
mov
jmp
fwait
mov
insl
mov
cmp
in
sub
push
in
in
pop
mov
pushf
mov
es
and
fldt
adc
pop
xor
xchg
mov
imul
xchg
add
xchg
into
ja
xlat
mov
mov
rcll
outsl
std
pop
adcb
test
out
adc
sti
imul
adc
xorl
jle
add
and
pushw
xlat
and
xor
adc
push
xor
mov
sub
hlt
mov
sub
jp
add
xchg
xor
mov
fmul
into
add
pop
sbb
or
dec
jmp
push
xchg
sub
mov
das
js
shll
repnz
fstp
sar
cmp
loope
xchg
xor
dec
sub
shll
xchg
repz
outsb
iret
add
shlb
outsb
arpl
cmp
mov
jp
cld
add
push
out
stos
and
outsl
or
aas
mov
out
cmp
or
mov
inc
xor
xor
inc
cmp
aad
popa
mov
mov
lods
jae
insl
cmp
lock
push
insb
jno
popf
scas
mulb
push
jae
stos
enter
cmp
inc
scas
push
hlt
pop
imul
jmp
xor
jg
fwait
mov
jae
pop
and
femms
push
jns
sub
in
bound
pop
mov
je
mov
xor
cli
push
pop
xchg
test
push
jle
lds
addr16
cmpsb
outsl
roll
mov
stos
icebp
pop
ret
aaa
mov
stos
dec
mov
jbe
fdivs
xor
ss
lock
push
adc
lcall
out
dec
das
sbb
push
cmp
repnz
cmp
dec
jo
pop
push
or
pop
jno
out
xchg
add
addl
test
push
sub
and
pushf
fs
push
outsb
jns
push
push
cld
mov
dec
mov
rdpmc
inc
mov
sub
xor
adc
ficoms
xchg
pop
add
loop
mov
xlat
pop
or
jecxz
or
jnp
cli
mov
ljmp
xchg
out
mov
mov
jg
sbb
pop
and
ss
cmc
dec
stos
mov
pushf
add
or
dec
loop
mov
pop
mov
mov
pusha
sub
add
jmp
insb
lods
pop
lock
sti
repz
jnp
mov
add
sub
add
mov
andl
sbb
mov
inc
jl
inc
fs
or
movsl
scas
mov
add
mull
xchg
mov
push
or
cmpsl
repnz
mov
pop
dec
add
repz
mov
pop
push
xchg
jne
xor
dec
mov
cmpsb
mov
notl
xor
cltd
push
lods
loop
stos
imul
stos
xlat
adc
lcall
lds
jmp
xchg
les
jo
cmc
aaa
inc
fdivrs
in
filds
and
mov
push
into
cmp
fwait
inc
and
jmp
inc
pushf
or
xchg
cmp
jp
fistpl
cwtl
daa
cmp
ss
mov
and
mov
aas
insl
lock
out
pop
push
jb
imul
inc
cltd
nop
jl
stos
jns
in
aad
push
jnp
mov
mov
and
cmp
xchg
ret
sub
inc
mov
push
les
gs
mov
adcb
mov
adc
outsb
sub
popf
sbb
mov
or
aad
lret
iret
test
fildll
adc
mov
adcl
flds
push
and
icebp
pop
ja
movsb
leave
leave
loop
lahf
inc
xor
mov
and
testl
dec
loopne
jge
cmp
jl
xlat
bound
rclb
sub
std
xor
inc
jo
ret
dec
lods
clc
cmpsl
outsl
sti
sbb
sub
mov
js
je
jle
int3
mov
pop
cmp
lret
and
push
push
das
add
jg
inc
in
sub
fidivs
mov
enter
inc
inc
popf
pushf
scas
adc
mov
dec
jmp
adc
clc
inc
movsb
pop
mov
mov
sbb
cmp
adc
pop
sub
add
xchg
fwait
mov
arpl
xchg
or
or
leave
insl
xchg
push
pop
stos
mov
ret
cmpsb
jecxz
jb
and
add
inc
popa
mov
jnp
add
aas
mov
or
adc
sub
movb
mov
aaa
fcmovbe
gs
shlb
inc
push
push
sbb
pusha
daa
aam
sub
sbb
cmp
les
xchg
int3
adc
arpl
in
sbb
mov
pmulhw
movsb
or
mov
sub
mov
mov
add
mov
pop
call
ja
jp
scas
sbb
rcrl
jecxz
fwait
divb
addr16
cmp
pop
stos
inc
mov
xor
nop
push
dec
cltd
push
mov
jle
cmp
stos
fs
xchg
add
or
jg
negl
mov
in
lods
push
test
stos
sub
inc
jg
shrb
movsl
pusha
push
rclb
push
sbb
xchg
pop
mov
enter
cmp
sbb
jo
pop
push
xor
lcall
dec
jmp
add
psubusb
cmp
xchg
das
mov
ret
cld
xor
push
mov
inc
insb
rcrl
sti
fstpl
cmpsb
lock
adc
xchg
shll
arpl
test
mov
imul
mov
stc
jbe
pop
fxtract
arpl
sbb
ret
xor
push
inc
ds
mov
jo
inc
je
les
lret
mov
jle
push
and
aas
cmp
push
mov
push
in
dec
leave
inc
add
mov
lods
jb
pop
daa
int3
cltd
mov
in
nop
mov
outsl
mov
cmp
sahf
ficoml
sub
rcrb
test
mov
lods
inc
xchg
fmull
roll
lods
mov
into
xor
lret
xor
add
xor
cmp
adc
imul
mov
and
hlt
sahf
adc
fdivl
push
pusha
fnsave
push
adc
xchg
xchg
imul
bound
jns
pop
xchg
mov
sti
cld
and
xchg
mov
push
cmpsl
into
scas
sbb
fldl
loopne
loope
cltd
cmpsb
jnp
pop
push
sub
ret
fildl
pop
iret
push
enterw
cmp
mov
daa
mov
inc
fbld
jo
cmpsl
jge
xchg
outsl
roll
inc
ficompl
add
adc
fs
pop
movsl
pop
and
adc
daa
and
clc
leave
inc
ljmp
rcrb
cmp
push
mov
in
cmpsb
test
enter
dec
repnz
ja
icebp
pop
dec
inc
iret
pop
cmp
cmp
jecxz
mov
test
and
mov
mov
xchg
or
pop
sub
cli
xchg
jno
addr16
jmp
and
cmp
pusha
sbb
fidivrs
push
sub
hlt
sbb
push
icebp
push
mov
scas
sbb
pop
fldt
sbb
icebp
sub
sub
cmp
sub
ds
cmp
cmp
dec
sub
mov
gs
and
sbb
xor
cmpsb
repz
incb
cmc
mov
scas
adc
xchg
daa
aaa
adc
pushf
and
mov
imul
jg
imul
mov
rcrb
jns
cltd
rcrl
mov
xor
or
les
adc
outsb
lcall
ret
mov
push
inc
ret
fildl
mov
dec
rcll
inc
xchg
jnp
aam
cmp
inc
cld
jp
cmpsb
faddl
push
dec
sub
popf
inc
std
in
arpl
sbb
test
push
shlb
dec
push
in
cmp
and
xor
push
cmpsb
xchg
fimull
sub
mov
es
adc
cmp
mov
shll
and
aam
int3
inc
mov
in
or
xchg
xor
ror
pop
mov
incb
push
pushf
frstor
cmpsl
mov
mov
add
cmp
aas
jge
cmpsb
lock
xchg
dec
imull
mov
push
adc
ret
xor
jmp
arpl
push
and
mov
lock
int
adc
outsl
mov
jge
arpl
adcb
mov
in
jg
sbb
js
mov
out
fnstenv
cwtl
into
mov
adc
add
aad
pop
jl
aam
std
sub
out
lods
xchg
adc
outsb
cltd
sub
addr16
scas
xor
mov
jecxz
mov
mov
jns
and
iret
jmp
cltd
and
pushf
mov
movsl
xor
imul
add
sbb
das
xor
bnd
stc
mov
rclb
arpl
xor
push
xchg
or
cmpsl
jo
jb
pop
test
inc
xchg
jle
es
ljmp
sbb
add
adc
es
fwait
enter
push
in
and
scas
andb
out
mov
xor
push
mov
iret
js
popa
cwtl
pop
ja
inc
pop
repz
data16
es
cld
pop
jne
push
jb
cmp
dec
adc
shll
sub
aas
sbb
shrl
mov
jge
cmp
mov
call
xchg
pop
xlat
xor
xchg
negb
and
aad
cmc
sub
lds
dec
inc
sahf
out
sub
sbb
xor
test
jp
push
iret
mov
inc
push
pop
scas
out
sub
dec
jmp
and
add
push
aaa
dec
sbb
adc
iret
jg
xor
cld
lret
mov
das
mov
cwtl
pop
xchg
and
pop
xor
cs
sub
les
test
repnz
sbb
das
or
push
scas
pop
inc
dec
xor
jo
and
jno
fwait
and
in
sub
inc
inc
dec
dec
movsb
imul
gs
dec
mov
mov
cmc
arpl
sbb
repnz
pop
push
rorb
into
inc
in
les
inc
fsubrl
ficoms
sub
out
xor
outsb
push
bt
cwtl
imul
xchg
jp
add
les
xchg
fstps
test
mov
mov
insl
pop
rol
xchg
fmuls
mov
dec
push
fwait
shl
shll
faddp
xchg
jb
mov
or
sbb
sti
sub
mov
js
mov
sub
jle
mov
arpl
decb
or
mov
aad
dec
insl
inc
fisubrl
fimull
adc
pop
loopne
popf
push
fildll
and
push
push
in
ret
xor
pop
jo
dec
mov
stos
ss
ds
dec
fmul
mov
in
lcall
into
out
and
sbb
jg
cmpb
jo
das
push
add
push
fisttpll
aam
xlat
pop
mov
out
adcb
insl
mov
clc
loope
ljmp
sub
mov
push
xor
ret
jge
mov
push
sub
sub
inc
sub
outsl
push
xor
adc
in
lret
mov
fcomps
sub
mov
cmp
push
mov
rorb
pop
add
testb
dec
mov
adc
inc
outsb
mov
fidivs
lock
sbb
sahf
cmp
scas
inc
pushl
clc
or
sub
push
cmp
jge
jns
out
push
mov
sub
xor
sbb
popf
add
jbe
sahf
in
imul
movl
lods
mov
sbb
or
jns
test
pushf
adc
add
mov
sub
cli
jb
mov
adc
mov
bound
jmp
clc
push
test
push
xor
jl
in
es
xchg
inc
leave
jo
rcrb
xlat
lahf
and
dec
ljmp
sub
subb
testl
test
mov
sti
mov
iret
mull
add
imul
iret
aad
adc
bound
loopne
loopne
push
lret
jp
sbb
out
jbe
inc
hlt
adc
cmc
int
sub
sahf
sbb
decl
andb
lock
adc
mov
clc
pop
pop
andb
and
test
aam
mov
lret
jns
and
dec
lods
xor
sbb
pop
inc
imul
jmp
sbb
sti
sbbl
xor
insb
cmp
adc
aas
push
repnz
xor
pushw
nop
cmp
jle
jmp
xor
or
push
bound
xchg
xor
and
das
sub
pop
jb
adc
imul
test
rol
lret
pop
push
xor
mov
clc
xlat
xor
hlt
dec
inc
mov
xchg
dec
shr
je
xor
mov
fldl
push
push
movsl
sub
pop
xor
or
fst
push
sbb
mov
icebp
pop
cs
paddsw
mov
mov
push
jp
loopne
clc
push
add
loopne
out
adc
pop
rep
sbb
or
cltd
fcompl
idivb
movsl
xchg
loope
or
mull
and
pop
and
mov
imul
js
pop
loope
sub
std
mov
mov
shl
jl
dec
jne
sti
xchg
lock
cmp
call
adc
addr16
xor
inc
les
out
testb
mov
lods
fnsave
aad
mov
sar
jns
jmp
jae
pop
rclb
sti
out
clc
push
lret
sbb
or
cmc
lcall
or
das
vmulsd
pop
ds
es
ja
pop
mov
aam
les
jbe
cmp
push
add
mov
add
call
in
aad
les
xlat
ja
cmpl
sub
mov
lcall
les
fcomi
loop
dec
lods
outsb
cmpsl
fadds
xor
pop
add
pop
pop
mov
les
cs
into
jo,pn
jp
out
dec
rolb
add
lcall
jmp
dec
adc
fs
popf
adc
cli
lea
fisubl
xor
lods
inc
nop
fisubs
fistpl
sbb
mov
pop
xchg
xorb
inc
push
aad
mov
or
rolb
xlat
cs
lcall
push
add
pop
jl
lcall
cmp
out
push
testl
repnz
iret
fucomip
in
dec
mov
pop
jnp
xchg
movb
icebp
push
add
adc
xchg
fidivrs
shlb
adc
ljmp
sarb
bswap
hlt
xor
inc
xchg
and
inc
cmp
jp
cmp
cltd
and
cmp
mov
jle
xchg
lds
mov
ret
icebp
shl
and
pop
push
inc
adc
dec
xlat
or
int
push
adc
lods
adc
xor
cli
mov
xchg
sub
inc
out
push
sbbl
pop
fcomps
push
aaa
dec
mov
xchg
mov
jno
inc
ja
inc
in
jge
pop
sbb
sub
in
dec
push
push
sbb
xor
xchg
pop
adc
mov
mov
mov
dec
mov
mov
cmovns
pop
pop
push
mov
outsl
jl
cmp
es
addl
pop
shll
jo
int
imul
daa
addb
dec
leave
mov
fcmovnu
loop
push
jge
out
sub
inc
loopne
jmp
adc
push
loope
loopne
add
mov
inc
out
in
cmp
xor
mull
mov
adc
or
jno
aas
mul
mov
mov
arpl
inc
or
cmpsb
push
stc
mov
lds
in
cltd
xchg
aad
shll
cmp
movsb
cmp
jbe
inc
enter
mov
push
gs
es
push
mov
push
int
bound
mov
orb
pop
xchg
fstps
jns
xchg
in
inc
xorb
aaa
cld
stc
push
int
rcr
jb
mov
mov
cli
fidivrs
dec
es
xchg
mov
inc
dec
rcrb
stos
and
out
loopne
loopne
pushf
push
mov
mov
repz
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
lahf
xchg
loopne
jl
dec
pop
jl
cmp
inc
jb
fwait
jp
push
or
leave
cmpsb
push
sub
xchg
push
sahf
jb
imull
jns
mov
inc
jecxz
pop
pop
js
mov
cmp
cli
push
dec
mov
fisubrl
mov
data16
mov
sti
fdivrl
aaa
pop
push
mov
repz
xor
jl
or
jge
aaa
mov
jnp
xchg
push
cmp
mov
mov
sub
mov
push
aam
sub
mov
adc
lcall
movsb
push
jle
adc
out
jno
sub
sti
xchg
cmp
mov
call
rcll
xor
dec
scas
inc
loope
adc
sub
das
movsl
push
dec
inc
xlat
mov
push
inc
dec
inc
add
xor
test
pop
je
mov
imul
push
pop
in
add
jo
aaa
pop
ret
or
pop
shll
inc
or
fldt
arpl
push
sbb
and
outsb
rcll
fstl
inc
jo
fidivrs
cmc
xchg
mov
xor
sahf
fsubrl
sub
cmp
adc
sti
xor
jl
cmpl
frstor
cmp
mov
shll
pop
inc
inc
pop
pop
cmpsl
cmpl
inc
or
rcrl
or
or
std
or
hlt
das
sti
jo
mov
adc
inc
outsl
pop
loop
mov
and
inc
mov
fildl
leave
push
sbb
sahf
mov
call
out
adc
es
add
cmc
pop
dec
sub
cld
mov
aam
lret
test
cmc
arpl
dec
mov
lock
adc
dec
icebp
and
pop
mov
jl
stc
or
mov
imul
hlt
jae
in
into
out
push
sbb
push
mov
sbb
rol
and
dec
out
add
lahf
cld
adc
mov
leave
mov
movsb
xchg
push
sahf
int
stc
sbbb
inc
pop
add
xor
and
push
data16
sub
and
mov
shlb
mov
test
jl
int
mov
pop
fcoms
mov
in
popa
xor
popa
xchg
mov
ss
sbb
in
sub
sahf
mov
fisubs
mov
cmp
pop
dec
insb
sub
fsubr
in
pop
lods
push
std
xchg
stc
jb
movsb
in
pop
out
aas
and
pop
mov
mov
sti
cmp
imul
loope
cli
pop
aaa
sub
and
pop
ror
and
cmp
cmp
nop
xchg
cwtl
into
call
data16
pop
xchg
cmpl
adc
dec
lret
out
xchg
outsb
cmp
push
mov
mov
mov
sbb
pop
push
ret
insl
inc
jns
pop
push
add
fistps
divl
fsubl
push
adc
jp
insl
test
les
sbb
outsb
in
movsl
mov
lock
mov
lret
pop
rolb
push
int
aaa
jl
xor
sbb
lret
sub
sbb
add
inc
adc
xchg
mov
rdtsc
push
cmp
fistpll
sbb
shrb
push
lds
rol
clc
add
das
dec
mov
sub
mov
sbb
xchg
mov
sub
add
incl
sarl
push
not
fidivs
push
fdivl
push
fadd
inc
xchg
lahf
add
xchg
cmpsl
loop
sti
stos
mov
in
jp
lret
cmc
jnp
xor
lds
testb
mov
js
cli
pop
push
adc
dec
ja
cmpsl
pop
sub
fsubs
mov
dec
shlb
std
xchg
push
stos
jns
shlb
lret
pop
xchg
mov
and
dec
and
lods
dec
add
js
mov
xor
xor
insl
push
adc
lahf
or
add
pop
iret
and
pop
adc
cmp
or
push
jo
cltd
cld
inc
outsb
inc
dec
int3
ljmp
inc
in
out
outsb
pop
lahf
push
fnstcw
push
pop
stos
lret
out
lock
mov
xor
loop
fcomps
mov
mov
xchg
mov
sub
xchg
into
add
add
stos
pop
in
fwait
clc
pop
test
aaa
test
sbb
int3
sbb
xchg
mov
cmpsb
imul
jp
jne
dec
and
and
pop
bound
fprem
or
andb
xchg
adcl
aaa
mov
stc
ret
and
add
shll
xchg
das
dec
push
enter
inc
es
std
jo
jp
jle
addr16
mov
mulb
cmp
inc
jl
hlt
fstl
xchg
aam
pop
ds
addl
sub
sbb
scas
les
jns
push
inc
jno
stc
xor
cli
orl
js
aad
sbb
push
sub
in
popf
xchg
push
jno
shlb
ss
test
test
adc
stos
fsubrl
fcomip
aam
bnd
pop
sbbl
sbb
push
sub
pushf
pop
aam
loop
inc
cltd
fwait
mov
bound
inc
scas
inc
dec
stos
lret
test
mov
cmc
cli
pop
pop
das
pop
add
loopne
sbb
repnz
out
notl
push
fisttpll
in
rcl
aaa
mov
repnz
xor
jmp
inc
mov
cmpsb
scas
mov
daa
push
and
cli
and
movsb
fistpl
enter
add
das
out
div
push
pop
jp
sarb
mov
xchg
pop
push
sub
fstps
notb
outsl
sub
mov
nop
jl
jmp
mov
push
push
xor
pop
inc
push
and
lret
pop
popa
stos
rolb
sub
cmp
imul
subl
pushf
or
faddl
pop
xchg
pop
in
mov
leave
cmpsb
jb
scas
repnz
stos
cmp
std
jno
int3
shll
cli
scas
roll
push
push
mov
mov
xor
mov
lods
xchg
ljmp
pcmpeqb
out
in
imul
mov
push
fdivs
fistl
fs
pop
sub
mov
daa
xor
cli
lahf
sbb
sub
lods
push
adc
push
add
loopne
clc
repz
int3
add
push
lcall
lret
push
fnsave
fwait
xchg
outsb
lock
mov
decl
mov
and
call
andb
pop
jne
icebp
pop
testl
movsb
sar
pop
inc
cmp
inc
subl
cmpsl
jmp
cmp
and
lret
icebp
insb
dec
fs
jbe
pop
pop
es
sbb
xchg
mov
popf
mov
outsb
out
lahf
ret
add
mov
into
mov
call
jb
xor
push
stc
ret
mov
xchg
dec
xchg
es
xchg
sub
adc
dec
sbb
mov
popa
fistps
cmp
adc
push
xchg
mov
jnp
cmp
ret
push
aaa
iret
scas
pusha
cs
fdivl
adc
sbb
aad
jp
mov
push
sbb
mov
aas
jmp
and
dec
cmp
test
or
popa
adc
pop
out
es
dec
in
xchg
cmpsb
cmp
out
push
jg
xchg
in
and
pop
sbb
mov
mov
and
pop
or
cmp
sbb
pop
dec
fldt
stos
xor
mov
xor
repz
test
pop
sbb
into
cmp
test
pop
xchg
sub
ss
sarl
icebp
das
rcrb
aad
les
xchg
jb
mov
pop
mov
xor
test
popa
rol
idivl
push
dec
out
not
sub
cmc
outsl
and
cmc
rcrb
es
xchg
insl
mov
outsb
aad
add
fwait
inc
rcrb
cmp
xlat
inc
mov
inc
pop
dec
shll
sub
fisubrs
fs
push
push
mov
in
xor
cld
inc
cmp
mov
test
xor
cwtl
add
xchg
ss
dec
fimuls
jg
push
iret
sub
or
pop
lea
sbb
flds
add
xor
or
pop
das
popa
in
jle
dec
add
aam
mov
jbe
cmp
and
xor
nop
icebp
scas
sahf
test
mov
ret
incb
push
outsb
xor
nop
out
fcompl
lea
and
inc
adc
ss
mov
scas
adc
dec
rcrl
mov
or
or
testb
push
xorb
or
ja
shll
mov
mov
ljmp
push
mov
js
or
hlt
xor
rcrl
xchg
jnp
and
cmpsl
push
pop
cmpsb
push
sahf
inc
inc
jmp
ja
inc
add
lret
and
cltd
mov
or
mov
push
mov
scas
pop
into
decl
subl
xchg
xchg
out
cmp
loope
call
imul
lret
cmpsb
fnstsw
mov
stos
mov
dec
cmp
mov
push
fidivrs
xor
or
xor
pop
cmc
jb
adc
aaa
inc
inc
out
pop
aam
add
out
scas
test
pop
and
aad
jmp
jg
imul
movsl
xlat
in
in
dec
mul
icebp
cmp
pop
paddw
xlat
cwtl
loopne
lods
ficoml
xor
or
in
xchg
adc
aam
rolb
cltd
rcl
adc
inc
mov
test
pop
mov
adc
xchg
xor
outsl
jno
xchg
pop
mov
leave
push
loopne
sub
jbe
inc
fdivrs
or
push
cmpsl
or
mov
imul
push
mov
ret
loopne
pop
xchg
leave
inc
sub
bound
loop
mov
lea
xchg
out
mov
xchg
ljmp
arpl
and
jno
and
jnp
test
pop
adc
cmc
cmp
dec
or
xchg
mov
jp
fwait
out
insb
pop
dec
shlb
sbb
mov
pop
adc
push
movsl
or
sahf
test
jno
adc
mov
lcall
jp
int
or
push
scas
jp
mov
lock
cmp
xor
test
or
mov
out
roll
hlt
lret
movsl
mov
gs
insl
stos
fcmovnb
xchg
push
es
add
sbb
psubusw
out
repz
pop
pop
jno
inc
imul
dec
mov
xchg
inc
js
es
cwtl
mov
js
sub
and
xor
sub
mov
xchg
mov
iret
dec
mov
icebp
cld
pop
call
pop
fildll
and
push
dec
mov
lock
sbbb
cmpsb
cmc
adc
add
adc
cmp
xchg
jbe
insb
and
inc
leave
andl
inc
cwtl
mov
nop
push
lods
dec
xor
cmp
fistpll
test
xchg
mov
push
out
adc
ret
ret
setno
dec
or
stc
mov
dec
andb
sti
xchg
fs
out
xchg
xor
or
enter
adc
xlat
sti
fcmovne
jg
pop
mov
mov
xchg
test
sahf
fnsave
and
sbb
fcompl
xchg
xchg
dec
sub
mov
divl
or
jp
add
inc
push
sahf
jg
sbb
aas
loop
or
decb
adc
jae
in
or
dec
rcrl
pop
std
imul
imul
mov
cltd
sarb
idivb
mov
cmp
cmpsl
or
pop
mov
cld
flds
jl
add
loop
jmp
mov
call
das
inc
aam
lock
xor
pop
jge
mov
sti
add
std
icebp
das
sahf
sub
mov
pop
mov
sarl
gs
loop
jns
pushf
add
and
inc
roll
cmpsb
push
mov
dec
inc
std
fnstenv
fcmovnu
data16
fcmovnbe
pop
insb
mov
pmaxsw
xorl
idivl
sbb
mov
test
push
pop
jae
sub
add
into
inc
xor
movsb
mov
mov
jmp
leave
pushl
jge
sahf
fisubrl
loopne
imul
sbbb
test
mov
mov
packsswb
jecxz
push
cmp
mov
sub
call
cmp
loope
xchg
clc
fcom
sub
cs
mov
pop
pop
js
jmp
dec
and
jecxz
cs
add
icebp
in
pushf
popf
xlat
xor
fs
jmp
jae
bound
add
xor
mov
pop
data16
aas
or
sbb
add
xchg
jge
lret
repz
lea
mov
lcall
fcomi
add
lods
pushf
das
dec
dec
icebp
negl
add
js
mov
jae
fiaddl
inc
pop
mov
inc
sub
dec
inc
int3
jae
std
xchg
aam
and
jno
vmovsd
rolb
inc
or
loop
imull
push
pop
mov
fistpll
mov
sbb
jbe
adc
nop
lock
dec
test
stos
mov
aas
test
ljmp
push
leave
mov
push
inc
pushf
shll
cmp
jb
push
dec
sbb
fcmovnu
iret
hlt
mov
out
dec
sub
cmp
or
test
push
xchg
int3
sbbl
add
js
insb
mov
mov
add
cmp
jb
push
pop
cmpsb
mov
mov
mov
sbb
or
pop
daa
or
mov
adcb
pop
cwtl
stos
dec
push
mov
in
or
jno
loope
stos
fucomip
cmp
push
daa
jp
loop
xchg
jnp
inc
pop
jg
arpl
push
fimull
and
aam
rorb
push
notb
cmp
sub
test
xchg
ds
lahf
adc
stos
lods
test
cmp
js
ret
stos
loopne
lods
mov
jmp
pop
inc
jecxz
data16
sbb
push
movsl
test
xor
jae
adc
insb
sbb
mov
lret
push
test
mov
sub
inc
lret
std
dec
xor
das
repnz
scas
lret
jg
jbe
xor
popf
arpl
orb
arpl
jmp
dec
dec
pop
dec
jle
pop
adc
add
jecxz
cmpsb
push
push
sbb
push
shl
in
or
movsb
bound
cmpsb
jge
es
das
pop
aas
fisubrl
push
pop
pop
ljmp
test
xor
jg
inc
adc
inc
pop
push
sub
inc
addb
ret
repnz
jecxz
daa
sbb
mov
pop
xchg
xchg
cwtd
adc
call
lock
sub
sub
pop
movsb
fsubs
adc
mov
push
int3
xor
cmp
mov
inc
sbb
cmpsl
sbb
adc
and
pop
dec
out
test
mov
mov
xor
lods
lods
out
mov
stos
xor
daa
fcompl
scas
dec
xchg
enter
adc
jns
out
ds
xchg
dec
jmp
cmp
nop
mov
push
pop
mov
inc
popl
mov
push
sub
mov
or
sarb
fnstenv
lahf
std
push
jl
xchg
icebp
sub
sti
mov
cmp
push
subb
pop
in
push
sbb
lods
call
fldl
ds
sbb
rcrl
sub
popa
jnp
jno
mov
movsl
cld
adc
push
fcomps
shlb
popa
shrb
scas
push
push
pop
jbe
sbb
inc
clc
stc
cwtl
pop
adc
add
sub
std
mov
loop
incl
jnp
sub
out
jb
lcall
adc
xor
xchg
and
loope
push
cmp
push
mov
adc
daa
sbb
xchg
fs
sbb
in
and
loop
jle
and
dec
das
mul
adc
cltd
push
xchg
ficoms
push
sbb
dec
push
ret
inc
mov
sub
rorl
cmpsb
mov
push
mov
call
mov
js
shrb
push
cmp
lock
cltd
sub
and
ds
insl
fbstp
and
mov
mov
mov
add
pop
jns
fbstp
jnp
ja
mov
lods
push
mov
add
dec
shll
mov
addr16
jge
pop
dec
cmp
in
adc
jae
xchg
lcall
add
fwait
sbb
inc
mov
jo
lods
mov
aam
movb
scas
popf
push
test
mov
push
or
int
fsubr
sub
aam
shrb
push
sbb
cli
or
popf
inc
add
andnps
mov
cmp
adc
vcvttsd2si
sub
les
mov
aas
jae
or
loope
outsl
xlat
sub
int
jno
jo
adc
xchg
xor
pop
push
fdivr
cs
add
stos
or
pop
popa
pop
and
mov
xchg
cmpsl
jae
and
test
lock
xor
insb
add
mov
add
test
pop
push
adc
inc
jle
nop
pop
jl
jg
sub
fisttps
and
jae
cmpsb
pop
dec
xor
fidivrl
lcall
or
xchg
push
imull
sbb
cmp
add
xchg
sti
xlat
je
lds
sub
loope
call
and
xor
inc
pop
adc
arpl
mov
xchg
cltd
inc
and
add
sbb
adc
pop
stc
stos
push
out
cmpsl
xor
out
imul
inc
jb
sti
mov
sbb
xor
or
inc
ror
and
sarl
lds
das
mov
mov
mov
add
add
stos
cs
das
enter
sbb
pushl
mov
add
inc
testb
insb
pushf
mov
imul
paddsw
roll
cmp
lret
gs
adc
mov
mov
lahf
push
jge
push
cli
aam
push
mov
xchg
mov
mov
mov
cltd
adc
je
rcl
xor
sbb
shl
in
aas
pop
les
pop
push
mov
mov
clc
int3
sbb
and
stos
sbb
and
jbe
jp
xchg
hlt
sub
and
cltd
dec
sub
or
ret
les
push
pusha
mov
pop
imul
shrb
stc
mov
hlt
cs
adc
adc
loope
pop
add
imull
call
push
inc
cli
mov
aad
jle
mov
cmp
inc
xor
pop
mulb
adc
movsl
pop
into
pop
push
add
or
dec
cmp
or
add
enter
dec
iret
lds
mov
inc
sbb
push
push
fidivs
movsb
and
or
or
movsl
sbb
push
add
sbb
negl
daa
fwait
loop
cmc
xchg
push
movsb
clc
mov
inc
rcl
idivl
lcall
or
movsl
sub
pop
fists
pushf
rolb
insb
mov
enter
mov
sbb
xchg
push
por
test
pushf
cmpsb
lds
push
ja
mov
push
jno
push
push
loopne
adc
enter
addb
pushf
int3
lods
or
mov
inc
sub
cmp
push
hlt
sbb
incb
int
cmc
mov
xchg
or
mov
pop
fidivrl
add
dec
cli
daa
movsb
andl
fstpl
aaa
incb
adc
mov
push
add
out
pop
js
scas
imul
inc
cwtl
adc
xor
xchg
push
push
mov
fnsave
jns
push
in
rcl
dec
mov
popf
aad
stos
dec
testb
bound
cmp
data16
xor
adc
pop
jnp
inc
jmp
mov
adc
into
loopne
lret
imul
mov
mov
pop
idivb
push
sbb
adc
pop
andl
adc
fists
xchg
pop
sbb
push
xor
dec
leave
iret
or
and
loop
jae
sub
push
insl
inc
aam
xor
into
lahf
push
xor
aas
and
sbb
mov
dec
sub
mov
dec
push
cmpsb
rcrb
bound
repnz
jnp
outsb
jle
mov
pusha
add
xchg
out
outsl
aad
mov
nop
xchg
mov
cmp
mov
sbb
sub
addr16
loope
add
fwait
test
aad
mov
pop
aaa
out
push
vmptrst
sub
adc
clc
jne
pop
inc
and
pop
mov
pop
aaa
insb
xchg
adc
fsubrl
cmpsl
fsubs
scas
push
scas
cltd
jne
scas
out
and
cli
lock
and
cmpsb
sub
lahf
movsl
xchg
out
pop
jmp
cmpsl
lea
or
push
imul
repz
aad
and
ds
into
jp
fs
mov
sub
cmpsl
inc
jge
adc
filds
sbb
ficompl
add
stc
std
stc
cltd
mov
or
pop
xchg
xchg
test
ljmp
and
xor
cld
lods
roll
scas
dec
push
or
mov
and
sarl
decb
fidivrs
lds
xlat
add
or
xchg
test
mov
rcrl
rclb
loopne
mov
sub
cld
mov
sbb
mov
outsb
loope
pop
inc
cmpl
jl
adcb
push
neg
cmp
adc
xchg
gs
pop
xchg
cwtl
cmc
rcrl
sbb
outsl
cwtl
into
frstor
call
mulb
setl
lods
gs
out
std
sbb
sbb
adc
pop
add
jae
loop
dec
sub
mov
push
cmpsl
clc
aad
fucomi
fists
push
outsb
mov
clc
pop
mov
pop
add
outsb
adcl
lods
ja
lahf
ljmp
sub
sbb
add
mov
xor
movsl
sti
iret
mov
adc
inc
or
inc
and
dec
cld
xchg
add
stos
mov
push
sbb
pop
push
mov
and
inc
lds
and
and
jp
pop
stc
mov
ljmp
adc
je
and
adc
je
mov
repnz
sahf
bound
iret
or
aaa
or
xchg
js
and
repz
rcll
xchg
sbb
shrl
shll
mov
inc
sbb
pusha
sub
cltd
movsl
dec
dec
divl
adc
add
iret
xchg
mov
adc
aas
in
loop
mov
jg
hlt
fidivrl
lret
int
lea
adc
sbb
nop
add
inc
xchg
jmp
int3
pop
leave
sbb
ficomps
lret
cmp
and
gs
popa
fwait
jae
clc
push
pop
mov
adc
int3
mov
xchg
or
idivl
mov
std
rolb
pop
inc
jns
jmp
or
aas
mov
xor
cld
setp
scas
add
cmp
xchg
popa
add
orl
dec
cs
push
xchg
arpl
jns
in
outsl
andb
enter
xlat
adc
adc
sub
push
sbb
mov
xchg
arpl
sbbl
fdivrl
and
mov
sahf
or
dec
jnp
add
jae
lods
push
inc
test
adc
sbb
mov
std
pushf
mov
lcall
mov
and
fadd
push
inc
xor
xor
icebp
sub
lcall
leave
fcoml
or
dec
or
ljmp
xor
push
mov
cs
scas
jg
xchg
dec
stc
rcr
mov
mov
sarl
and
out
adc
cmp
jae
stos
shl
or
push
xchg
mov
xchg
cmp
rorl
test
imull
pop
sub
cltd
xor
xorl
cltd
lods
add
out
sub
cmc
mov
ds
add
mov
xor
cs
shrb
or
lock
xchg
adc
mov
push
xchg
test
cmp
stc
jle
ror
xchg
and
test
sbb
sub
xchg
int3
int
into
lods
mov
sub
cli
mov
test
jae
xor
add
pop
mov
mov
push
dec
lret
movsb
lcall
fldl
lret
arpl
js
sbb
cwtl
inc
test
test
jne
inc
outsb
hlt
jecxz
dec
int3
scas
das
into
das
in
dec
push
addr16
scas
rclb
jae
pusha
and
xchg
repnz
cwtl
bound
les
mov
iret
xchg
sub
movsl
push
das
add
dec
push
push
and
add
in
adc
cs
inc
loopne
aaa
loope
xchg
jp
bound
ljmp
addr16
cltd
adc
cwtl
data16
aaa
pop
jge
pop
fistpl
jmp
and
mov
repz
mov
inc
cmpsb
fs
add
xchg
pop
push
dec
and
rol
xchg
lret
pop
inc
loop
mov
cmp
ret
enter
std
test
and
adc
mov
cmc
fwait
xchg
or
cmp
arpl
cld
ss
cmp
inc
cli
inc
push
jb
imul
ja
fidivs
mov
pop
xor
and
pushf
shlb
cmpsb
cltd
iret
or
das
and
jg
cmpsb
mov
push
in
mov
xor
lea
cli
or
adc
mov
lret
aad
rcrl
xchg
sub
cmp
push
sub
fdivs
inc
in
pop
pop
insb
daa
jmp
insl
adc
jg
xchg
mov
mov
cmp
push
test
adc
push
mov
push
out
ljmp
push
test
in
cmp
rcrb
xor
inc
imul
out
push
mov
xor
popa
sub
inc
mov
test
pusha
lea
mov
call
fdivp
mov
cmp
cmpsl
ljmp
inc
add
cld
jmp
sub
mov
pop
jecxz
sub
xlat
add
push
daa
adc
adc
decb
and
in
es
pop
jnp
dec
nop
mov
out
aaa
stc
stc
or
pop
xchg
add
pop
pop
out
and
push
jbe
outsl
leave
fucomi
lds
pop
aad
ja
das
xchg
sti
and
lock
mov
into
xchg
repz
inc
jmp
cmp
int
imull
adcl
push
and
push
ret
fcomp
iret
repnz
mov
popa
sbb
add
andl
fsubl
aaa
mov
sub
fwait
jge
inc
inc
jecxz
insb
lds
dec
repz
xchg
adc
or
sbb
push
mull
int
cltd
jecxz
out
lahf
add
pop
inc
dec
daa
ds
insl
add
xchg
icebp
dec
jmp
adc
sbb
push
jecxz
test
push
mov
mov
imul
repz
pop
out
xchg
xor
int
pop
mov
dec
cmpsl
pop
xor
adc
sbb
loope
add
das
xchg
cmp
in
ja
repnz
in
xor
adc
enter
lds
or
lret
push
adc
clc
in
add
mov
xor
adc
int
push
cmp
dec
in
xchg
enter
and
lods
cltd
movlps
cmpsl
or
stos
scas
xchg
lock
sub
stos
mov
mov
xor
stc
stos
sub
mov
jns
jns
mov
je
icebp
cs
ljmp
pop
sbb
test
mov
andps
outsb
jns
stc
inc
xchg
pusha
fwait
jbe
cmp
mov
iret
adc
fisubrl
lock
mov
insb
xlat
ret
pop
push
hlt
add
popf
fstps
sbb
jge
push
insl
rcrb
scas
inc
xor
imul
es
pop
dec
and
dec
ss
hlt
xor
cs
iret
lahf
push
pushf
add
push
lods
pop
push
inc
lock
repnz
sbb
call
adc
xor
dec
or
add
mov
pusha
push
insl
add
mov
nop
xor
pop
jne
data16
dec
shrb
sti
ds
lea
jbe
sub
loopne
filds
sbb
sbb
or
dec
fstp
inc
pop
cmpsb
out
pusha
push
push
sbb
jbe
pcmpgtw
imul
mov
ss
mov
mov
lods
fiadds
dec
dec
stos
adcb
sar
mov
int3
push
sti
inc
shl
int
xchg
arpl
rorl
jne
xchg
xor
shlb
cmpsl
ror
sub
in
scas
shr
aam
or
pop
div
ljmp
adc
mov
adc
fildll
adc
ljmp
mov
fptan
nop
inc
mov
push
inc
aad
xor
or
mov
inc
rclb
adc
and
scas
dec
mov
ret
push
jecxz
in
dec
fdivrl
pop
adc
fdivrs
js
mov
nop
mov
mov
gs
xchg
mov
xor
add
jge
xchg
xor
nop
adc
fadd
sbb
loop
dec
fcoms
fs
adcb
mov
into
dec
dec
sub
test
or
jmp
push
mov
sub
scas
inc
xor
sbb
fs
sub
ret
popf
ret
das
movsb
in
out
fwait
pop
xchg
inc
inc
jo
sub
arpl
mov
inc
mov
push
repnz
add
or
int
add
mov
jne
mov
jl
xchg
cmpsl
mov
dec
xor
mov
xchg
lret
xchg
mov
ds
pop
xor
leave
test
push
mov
xchg
loop
std
jnp
stos
icebp
notl
movsl
jo
adc
icebp
scas
mov
xor
jge
rorl
fldt
in
loope
adcb
fildl
scas
arpl
cmc
or
inc
mov
notb
fwait
lret
repz
imul
sahf
push
fidivrl
dec
cmp
inc
or
xorb
pusha
mov
push
fcomip
sub
jbe
es
shlb
adc
gs
push
mov
and
add
int
std
adc
insl
adc
or
insb
xor
xor
or
lret
lea
stc
ja
or
fwait
push
out
out
sbb
sarb
pop
jae
push
mov
cmpsl
ss
and
ret
or
xchg
in
data16
pop
addr16
and
sahf
mov
in
rcl
in
pop
pop
inc
into
test
pop
and
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
xchg
pop
iret
and
pop
jl
mov
rcll
push
fcompl
mov
xchg
enter
loop
push
fidivrs
cmp
pushf
jmp
gs
or
jmp
xchg
frstor
or
mov
lds
jmp
add
inc
insb
dec
test
cmp
nop
jp
out
dec
rolb
in
cs
mov
xor
std
dec
mov
xchg
cmpsl
jle
mov
in
or
ja
pop
das
pop
sub
hlt
ds
or
pop
cwtl
push
inc
pop
jge
rolb
pop
pop
cmp
shll
adc
or
fabs
rcr
sbb
les
pop
pop
inc
mov
pop
stos
in
push
xor
stc
xchg
jns
hlt
mov
adc
jnp
test
popa
sub
std
mov
inc
icebp
out
cwtl
xor
ja
ret
sub
push
adc
mov
dec
dec
ret
mov
fsubrl
scas
stos
or
jmp
test
mov
lret
pop
cwtl
sub
pop
fcompp
lods
cmpsl
das
xor
and
pop
inc
insl
fnstcw
add
xchg
popa
mov
repz
push
cmpb
fld
ret
outsb
or
int3
and
popa
and
aam
adc
loope
insb
jae
test
shl
icebp
arpl
test
or
sbb
dec
mov
stos
fs
inc
shrl
hlt
cmc
xor
jb
push
add
insl
mov
fcmovnbe
ret
test
pop
shl
ljmp
xor
and
das
loopne
inc
in
lahf
xchg
dec
pusha
out
mov
pop
push
in
jae
dec
jbe
sbb
into
and
add
test
es
push
movsl
ljmp
dec
sub
mov
gs
sub
mov
arpl
jne
push
das
sub
inc
cwtl
adc
loopne
dec
sub
pop
xor
cmc
sbb
je
les
out
sub
fsubrs
nop
imul
mov
mov
fidivl
xor
adc
adc
out
mov
ret
pop
xlat
sahf
mov
adc
cmp
xor
insl
mov
rcl
mov
fistps
test
mov
mov
or
or
scas
gs
mov
mov
pop
sahf
add
mov
nop
outsb
and
xchg
iret
jne
mov
sbb
std
fstps
xor
in
jbe
mov
mov
and
cwtl
movsb
orb
adc
mov
iret
jo
ret
mov
lahf
lock
cmp
hlt
jbe
pop
mov
loopne
xchg
std
pop
push
imull
negl
push
and
fdivl
pushf
push
push
push
lret
sahf
dec
mov
adc
sub
xadd
sub
push
setp
add
je
xor
pop
jo
loop
cs
addr16
test
inc
sar
push
fdivrs
lcall
in
inc
into
push
mov
sub
pop
arpl
and
xlat
sbb
push
and
xchg
jne
cs
dec
call
lret
add
xchg
xacquire
movsl
pinsrw
bound
or
inc
mov
jmp
cmpsb
sub
dec
sbb
adc
sub
adc
inc
into
mov
stos
cmp
xlat
mov
jmp
fimuls
and
cmc
es
lds
lock
rdpmc
mov
pusha
andl
stos
lahf
mov
sbb
xchg
and
fdecstp
leave
push
sub
popf
pusha
lea
lock
out
or
insb
xorb
stos
movl
ljmp
jmp
cmp
clc
pop
aad
lcall
lods
in
sti
ljmp
orl
iret
push
pop
and
xor
movsl
xor
loopne
lock
cmpsl
xlat
jbe
aas
dec
xor
lret
mov
jmp
push
push
jmp
mov
test
sbb
sbb
sub
ret
cmp
push
jg
xchg
jmp
sub
imul
cltd
or
rcrb
popf
cmpsl
in
mov
leave
inc
mov
add
in
js
out
dec
leave
not
jmp
inc
in
sbb
fistpll
cmp
sbb
aaa
jns
xchg
and
and
and
fisttpll
lods
pop
inc
fstps
fisubrs
leave
inc
aam
jne
sub
filds
pop
test
mov
movsl
push
shrb
xchg
or
jl
push
jae
out
mov
inc
adc
push
inc
mov
dec
sub
mov
jp
int
cmp
mov
pop
shll
lea
shrb
dec
inc
cltd
addb
lock
pushf
push
xchg
add
cmp
inc
cwtl
mov
leave
dec
add
xor
xchg
scas
scas
mov
xlat
lods
addb
test
insl
rorb
nop
loopne
pop
cld
pop
sti
movsb
jg
repz
dec
lea
hlt
xor
or
pop
mov
insb
pop
je
sbb
cmp
xchg
adc
out
lock
in
aas
inc
insl
stc
in
lret
dec
sqrtps
xchg
stc
pop
pop
adcb
add
ljmp
jecxz
mov
stos
mov
push
notb
outsb
negb
cmp
das
xchg
call
mull
add
call
dec
mov
cld
pop
xchg
dec
inc
mov
clc
inc
cmpsl
dec
sub
adc
xor
xor
das
ret
xchg
shrl
cwtl
jns
ds
fsub
dec
and
cmpsl
pop
ja
rcl
int
pop
fstpl
mov
repnz
faddl
out
fidivrl
jle
jp
add
lock
test
push
fbstp
pusha
stc
enter
push
faddp
or
repnz
jae
push
sbb
daa
dec
sbb
mov
lock
mov
and
jmp
arpl
outsb
cmp
cli
push
icebp
inc
cli
imul
or
aas
push
jb
aam
adc
bound
loop
mov
xchg
mov
fnstenv
jae
and
fwait
jns
pop
jns
fs
jp
clc
cmp
cld
sbbb
js
in
jne
xchg
or
fbstp
jb
push
jecxz
decl
cld
cli
roll
mov
ret
inc
jmp
inc
mov
pop
popa
or
push
ds
or
movsl
rcr
adc
xchg
push
push
xor
xor
popf
lret
jo
aam
jo
lcall
sub
outsl
aam
loop
jle
jecxz
sub
pusha
test
xchg
in
inc
pop
popa
mov
insl
dec
lret
aas
fisubrl
inc
inc
call
push
aaa
imul
jb
test
add
into
add
repz
xor
insl
pop
pushf
out
out
xchg
fidivl
or
jp
jle
xchg
fidivrl
xor
jbe
sahf
push
das
sbb
outsb
pop
jae
sti
sbb
popa
popf
adc
cmp
sbb
movsb
in
dec
xor
mov
pop
jno
sub
mov
push
sbb
cltd
mov
ficomps
add
mov
pop
lret
ja
inc
mov
jmp
xor
mov
in
cld
fcomp
sub
les
push
test
aam
and
mull
xor
push
pop
dec
jecxz
movsl
jb
lods
sbb
inc
inc
sti
ss
adc
imul
inc
lret
cmc
dec
movsb
jae
sbb
jnp
mov
arpl
sub
jb
ret
mov
push
push
mov
and
inc
jno
mov
inc
jo
aas
loop
test
out
icebp
in
dec
mov
movsb
pop
addr16
cld
dec
int3
jae
xor
mov
incb
imul
test
inc
and
jle
add
bound
mov
insb
xchg
fisttpl
nop
aas
sbb
popf
push
jno
pop
cld
pusha
xchg
in
and
xor
stos
dec
sbb
icebp
js
or
xor
loope
sub
lds
nop
psrlw
and
int3
test
mov
test
in
das
jo
mov
xlat
jb
mov
cmp
iret
and
add
clc
pop
int3
jmp
popf
cmp
in
sbb
push
in
inc
or
mov
clc
pop
sbb
repz
jg
push
add
and
out
dec
cmpsl
fsubrl
pop
leave
xchg
and
or
sbb
fcoms
test
scas
cmc
pop
rcll
cmpsl
mov
mov
push
decl
jbe
out
aam
add
call
test
icebp
mov
push
shrb
mov
push
add
mov
and
adc
not
aas
add
sub
popf
jo
mov
inc
inc
push
sbb
sbb
mov
mov
and
insl
in
cmp
and
pop
mov
in
and
test
gs
mov
adc
gs
mov
dec
nop
cmp
shll
mov
int
inc
pop
mov
movsb
mov
dec
mov
insl
test
push
mov
fmull
es
push
aas
ljmp
popf
push
pop
data16
xchg
mov
mov
repz
or
fnstsw
movsb
push
lods
add
xchg
gs
ljmp
mov
shrb
mov
xorl
imul
ja
lret
fld
lcall
ja
mov
fdivp
aad
rcr
daa
daa
and
sub
cli
mov
stc
imul
pop
ficoms
cmp
ds
mov
out
inc
mov
aas
inc
or
or
sahf
stc
fadd
and
aaa
adc
daa
add
mov
popa
dec
sti
or
lea
aas
lods
adc
mov
in
or
cmpsl
outsl
push
and
shll
test
pop
or
add
insl
pop
addl
les
xor
les
xchg
mov
pop
sub
dec
and
sub
fs
pop
adc
mov
and
inc
xchg
pop
insb
fisubrl
shlb
pop
dec
ret
sbb
mov
movsb
pop
fs
jne
xchg
jo
mov
and
les
or
pop
fwait
sub
pop
dec
repz
add
call
ret
sbb
dec
cs
cltd
pop
ljmp
scas
cmp
rcl
pushf
xor
imul
sub
ja
add
stos
insl
sbb
out
jns
mov
sub
das
cmp
test
push
out
sub
sub
mov
inc
and
call
lahf
jle
addl
pop
orl
mov
lds
mov
outsl
pop
pop
mov
iret
roll
aaa
decb
aad
cmpsl
imul
adc
jnp
sahf
in
aaa
add
in
fldenv
sarb
outsb
leave
clc
jae
inc
ja
sub
pop
add
inc
sbb
sub
pop
dec
ss
fld
sti
or
sahf
repnz
add
ficoms
pop
fwait
dec
scas
outsl
push
fiadds
lea
inc
mov
jl
pop
in
and
mov
jns
and
inc
fwait
mov
xchg
or
sarb
mov
pop
or
dec
xchg
adc
mov
in
mov
mov
pop
js
mov
xor
jp
jno
fwait
push
out
and
negl
sti
lret
jbe
shll
ds
pop
inc
mov
std
mov
add
int
inc
arpl
loop
inc
xchg
ret
fbld
ficomps
xchg
pushf
es
dec
sub
in
frstor
lock
daa
scas
mov
pop
or
pop
mov
pop
inc
outsb
aad
call
lahf
leave
lods
sbb
cmpsb
sbb
push
movsb
cltd
dec
out
testb
mov
dec
rorl
adc
in
or
mov
dec
std
xor
and
xchg
movsb
inc
or
fcomi
inc
ss
pop
in
cli
stc
sbb
or
pop
push
and
xor
jle
adc
out
cli
popa
jp
idivl
inc
pop
jp
cld
lea
cmp
clc
inc
dec
push
jne
lock
mov
jg
mov
repnz
add
rcll
js
xchg
lods
aam
and
ljmp
insb
pop
jg
and
das
aas
aad
ficoms
pop
das
dec
jns
push
gs
jbe
out
mov
testl
push
and
jecxz
pop
inc
adc
xor
iret
jo
cmc
xchg
add
lret
mov
push
out
push
xchg
sbb
push
xchg
adc
or
fcoml
cmc
sbb
sub
jmp
cli
sbb
test
scas
dec
push
cmp
bound
pusha
sub
movsl
mov
addl
mov
pop
jecxz
jne
xchg
push
pop
push
dec
xchg
mov
pop
addb
mov
cltd
adc
dec
ja
aas
dec
out
push
ss
add
fidivrl
sub
pop
sahf
adc
xchg
sbb
xor
or
cwtl
adc
lret
clc
scas
and
jg,pn
mov
adc
rcrb
and
in
pusha
push
shlb
and
aaa
xlat
mov
mov
jo
hlt
pop
and
mov
mov
add
iret
and
pop
inc
dec
lods
xchg
inc
adc
push
in
aad
popfw
inc
out
pop
rolb
xchg
negl
mov
imul
pop
inc
insl
xor
subb
jns
lahf
push
int
arpl
dec
das
sahf
sub
aas
pop
popf
push
cmp
jg
pusha
mov
pop
shr
inc
aam
outsb
jo
fucomip
mov
test
fnstenv
arpl
xchg
lock
inc
jl
xorb
pusha
jne
dec
xchg
push
stc
test
pop
into
adc
aas
insb
sbbl
pusha
cmp
into
addr16
popf
out
leave
mov
pop
inc
jns
xor
movsl
add
xor
sarl
fnsave
inc
scas
sbb
push
nop
sti
fxtract
enter
ret
or
rorb
outsb
adc
imul
xor
ljmp
mov
into
and
inc
lods
test
cmp
call
jge
adc
scas
dec
es
xor
ss
dec
into
cmp
push
stos
xchg
sbb
cmc
cmpl
cmpsl
lea
mov
das
mov
inc
fdivrs
push
mov
std
push
add
aad
pushf
mov
or
dec
sub
sbb
ss
stos
in
inc
xchg
outsl
dec
push
faddl
icebp
shlb
mov
cmp
leave
or
les
jne
adc
shrb
cs
adc
pop
jle
mov
sub
ds
dec
cmp
test
loop
arpl
xchg
aad
aas
cmp
and
in
push
push
out
lds
lret
jl
adc
and
mov
movups
lods
int
or
aad
sub
mov
lret
inc
clc
ss
cmpsb
xchg
mov
aad
add
or
jno
dec
test
imul
std
mov
mov
jns
fs
lahf
andl
xchg
dec
jne
out
imul
stos
push
mov
out
repnz
je
push
into
aad
adc
mov
pop
adcb
aas
jb
clc
ds
mov
inc
arpl
lea
and
cltd
mov
inc
inc
aaa
into
dec
loope
gs
or
cld
add
outsb
xchg
mov
cmpb
sub
push
mov
lea
aaa
test
inc
aaa
or
mov
xor
jmp
frstor
cmpsb
insb
jg
fistps
pop
xchg
out
adc
jbe
pandn
in
test
aas
jl
cwtl
sub
pusha
loopne
add
testl
out
mov
into
addr16
xor
pop
leave
jnp
mov
cmpsl
aaa
daa
sub
push
ljmp
call
sub
ss
arpl
dec
out
jb
cmc
out
pop
sub
pop
mov
repz
pushf
outsb
fmull
mov
aam
cmp
movsb
jmp
sysret
or
std
fbld
cmp
sahf
push
cmpsb
cmp
cmp
aad
int
lock
je
aad
sbb
push
mov
jle
xchg
sahf
mov
pop
xchg
addr16
mov
imul
aas
sbb
push
add
incl
fnstenv
push
jne
pop
jb
inc
jmp
push
int
mov
ds
fdivrl
mov
stc
jl
cmp
repnz
jp
inc
dec
cwtl
test
mov
repnz
in
enter
shlb
repnz
loope
pop
push
pop
ds
and
inc
sti
gs
std
negl
inc
hlt
xchg
cltd
cmp
push
in
lock
dec
or
imul
inc
or
mov
cmp
aas
push
sub
dec
or
xor
jbe
cld
xchg
jne
dec
cmp
jo
rep
pop
lods
movsb
pop
cmp
ficomps
fsubs
in
jl
xchg
add
or
pop
out
sub
push
mov
mov
push
mov
aam
push
icebp
or
hlt
lcall
loope
sub
mov
mov
scas
int3
or
bound
daa
repz
pop
sub
xchg
shlb
mov
adc
hlt
pop
lret
xchg
shrl
jne
in
cmp
cmc
popa
lock
inc
pop
jle
in
jmp
jmp
gs
mov
pushf
jne
lcall
imull
test
out
orl
arpl
loop
xchg
lock
adc
sbb
or
sub
add
adc
xchg
pop
out
rorl
jno
cli
add
scas
adc
lret
out
rol
out
jg
add
add
push
adc
push
fdivl
mov
fwait
cmp
imul
pop
mov
push
or
inc
emms
insb
pop
sub
jmp
xchg
push
insb
aad
jno
addr16
cmp
jb
in
scas
xchg
adc
shrl
mov
sub
imul
iret
inc
mov
pop
dec
sbb
hlt
sarb
pop
sbb
jmp
lods
inc
add
sub
rcrb
test
and
cmpsl
jne
add
mov
ljmp
mov
popa
sub
xchg
stos
in
lahf
mull
hlt
data16
inc
xor
cmp
add
mov
xchg
jno
inc
pop
jne
js
mov
imul
popa
fcmovnu
cmp
in
aaa
pop
scas
out
ret
pop
pop
and
cmp
sbb
stc
push
mov
mov
add
ds
pop
cmp
mov
sub
iret
inc
sub
enter
pop
jae
sbb
cli
push
shrl
out
inc
mov
divb
mov
pop
mov
mov
xor
mov
push
or
cmp
dec
subl
push
outsb
mov
rcrl
inc
jp
xchg
push
mov
jnp
xor
scas
sahf
lods
cmp
inc
cmp
push
repnz
cs
pop
stos
add
lahf
ds
add
push
and
cmp
call
mov
mov
xorb
aas
mov
dec
imul
inc
adc
rcrb
ret
jae
fnsave
clc
nop
xor
iret
xor
pop
lock
cs
xchg
nop
dec
mov
jmp
sbb
repnz
lds
stos
test
fcom
and
xchg
fbstp
sbb
addr16
jmp
clc
cmp
jmp
adc
push
cs
cmp
cmp
mov
cmp
xchg
cmp
cmpsl
nop
test
dec
and
or
jmp
shrl
filds
adc
push
out
test
dec
push
mov
add
loope
cli
jp
add
jnp
clc
sti
pop
jo
sbb
lds
sbb
mov
pusha
out
loope
cmp
shl
pop
mov
and
adc
iret
cwtl
stc
in
sub
enter
dec
cli
js
call
push
stc
cld
dec
mov
loope
in
cli
pop
bound
bnd
fdivs
and
xor
cmc
jae
adc
xlat
or
sbb
mov
sbb
xor
mov
lods
cmp
aaa
xchg
dec
fisubl
cld
add
and
into
shrb
mov
lahf
in
sbb
les
lret
imul
mov
or
dec
xor
mov
mov
mov
dec
pop
push
pusha
enter
call
adc
lds
nop
lcall
xchg
repnz
idiv
roll
mov
movsl
leave
sub
sbb
push
add
movups
ret
inc
mov
dec
dec
push
fdiv
subl
icebp
sbb
xlat
mov
inc
mov
daa
insl
mov
and
xchg
fildll
aad
xchg
in
out
fistl
and
int
dec
cmp
insb
popf
mov
pusha
mov
push
idivl
divb
in
ficoml
add
cmp
dec
adc
lods
cmpsb
xchg
fnsave
out
pop
jno
mov
idivl
adc
popf
mov
jb
push
inc
sub
mov
mov
daa
loope
cld
jge
punpckhwd
jnp
cmp
or
cli
sub
stos
nop
sub
adc
in
add
ret
fs
xor
pop
iret
mov
popa
jne
mov
mov
cmp
lcall
sbb
hlt
cmp
shll
xor
sub
mov
push
push
or
inc
gs
adc
sub
imul
shlb
repz
mov
push
mov
pusha
rcr
add
and
mov
orb
mov
inc
sbb
insl
cmpb
nop
push
push
sub
scas
cmpsb
mov
xchg
jl
mov
pop
roll
mov
sahf
cltd
cltd
mov
inc
addr16
or
mov
in
lds
inc
xlat
popa
inc
adc
xor
stos
or
push
test
call
sub
push
and
ret
std
pop
add
dec
lock
and
filds
xchg
loope
outsb
dec
pushf
bound
sub
push
outsl
mov
add
outsb
lret
jl
inc
inc
ss
mov
push
mov
xchg
ds
repz
inc
mov
add
inc
test
rorl
rclb
fildl
push
cltd
in
enter
add
inc
lods
roll
dec
inc
inc
jmp
or
xor
cwtl
cmp
dec
xchg
stos
loopne
jmp
dec
in
adc
lahf
dec
bnd
xchg
xchg
add
dec
out
pop
ja
sub
addr16
in
pop
dec
sarl
cmp
dec
xor
push
insb
inc
bound
sbb
add
cmp
in
fimull
lock
add
lahf
jg
nop
lret
dec
pop
addl
jle
push
mov
push
cmp
stos
mov
lea
push
mov
xor
imul
sahf
into
lea
add
call
adc
dec
in
stos
xlat
mov
mov
fs
mov
mov
shr
xchg
or
cmp
roll
iret
fnstsw
or
sub
pop
mov
insb
add
or
out
push
into
ret
decb
in
sbb
jp
sub
add
popa
inc
pop
adc
xchg
lret
sbbl
xor
adc
sbb
adc
push
mov
fchs
mov
fs
enter
mov
data16
out
pop
push
movsl
sub
dec
popf
stc
test
out
pop
or
mov
or
add
nop
xchg
dec
mov
pop
push
jle
xor
xchg
enter
cli
out
sbb
in
inc
push
mov
jg
lcall
mov
push
add
push
pusha
stc
pop
das
pop
or
or
mov
inc
xchg
ficomps
pop
jp
xor
aam
loopne
mov
cmc
lods
jno
push
in
pop
roll
lret
mul
fstl
cwtl
push
mov
addl
push
je
mov
push
dec
xchg
aaa
jg
dec
jmp
sahf
enter
loop
fsts
loopne
roll
imul
xchg
shl
xchg
movsb
rorl
sbb
mov
lret
mov
iret
jle
jmp
dec
or
repz
mov
adc
xchg
sub
subl
jl
push
jns
arpl
lahf
stos
and
jnp
and
push
cmp
pushf
lret
jb
psrld
fimull
aaa
fstl
mov
in
adc
lret
pop
testb
or
inc
addl
repnz
lods
dec
cli
pop
insl
int3
push
xor
inc
fcom
call
fwait
out
xchg
dec
cmp
add
gs
xchg
cmp
or
xor
add
sub
mov
fldl
xor
cli
push
sub
in
xchg
hlt
mov
std
pop
jns
inc
sub
dec
ds
es
out
adc
outsl
adc
orl
sbb
hlt
mov
sub
pop
lods
mov
fdiv
stos
mov
cld
rol
hlt
add
call
jnp
add
sahf
daa
inc
icebp
lret
lahf
mov
push
lret
jns
pop
out
mov
scas
cmp
pushf
mov
dec
xor
add
lock
pop
dec
lds
push
mov
out
mov
mov
inc
ja
mov
and
stos
adc
imul
stos
jno
fs
pop
jecxz
call
nop
cmp
or
repnz
mov
xchg
sbb
test
xchg
adc
imul
hlt
mov
xor
test
mov
fnstenv
test
scas
push
pop
cmp
and
in
pusha
sar
jecxz,pn
pop
push
sub
stc
pusha
scas
jp
out
addl
les
mov
dec
mov
stc
pop
imul
sbbl
sub
dec
lods
fildll
jl
addr16
out
addb
mov
test
dec
imull
repz
mov
mov
mov
enter
cmp
adc
addr16
cltd
fmuls
mov
or
xor
aam
aam
and
lahf
test
jae
dec
sub
lret
loopne
addr16
inc
fwait
mov
movb
lret
and
xor
movsb
gs
aam
dec
adc
call
lret
mov
lcall
in
mov
enter
mov
aad
iret
or
or
nop
outsb
mov
xchg
pop
fidivl
add
add
mov
lret
pop
mov
bound
xor
pop
ss
cmp
les
pusha
sahf
inc
jno
and
and
mov
adc
pop
and
xchg
rclb
das
ja
push
push
out
inc
loopne
mov
enter
in
ret
xor
push
jo
imul
dec
sbb
push
inc
pusha
sahf
mov
aam
imul
popa
jo
dec
and
sbb
cmp
fwait
push
cmpsb
imul
xchg
mov
out
inc
jl
ja
popa
fiaddl
sbb
push
shrl
mov
cmpsl
andl
mov
pusha
mov
bound
nopl
and
psllw
dec
aaa
xchg
mov
stc
int
adc
addl
subl
fs
dec
and
out
xor
aam
adcl
mov
adc
jne
stc
xchg
sti
pop
test
mov
mov
scas
mov
bound
or
jg
int
sti
stos
fadds
movntq
out
add
sub
nop
aas
cmp
lahf
fadds
or
mov
pop
mov
cli
jp
addr16
mov
call
sub
xchg
shlb
sbb
lret
mov
shll
test
xchg
mov
jg
push
testl
dec
adc
insl
jle
aas
mov
fdivrs
cwtl
fsubrs
lds
inc
addb
ljmp
in
adc
mov
jne
mov
pop
xchg
xor
add
sub
push
popl
bound
inc
nop
add
mov
or
push
andl
lahf
out
movsl
stos
enter
inc
xchg
outsb
movsb
lock
mov
mov
test
stos
daa
outsb
mov
aas
and
pop
cmpsb
ds
rol
mov
loopne
pop
movl
and
mov
jnp
sbb
mov
into
sub
dec
push
call
cltd
lods
sbb
push
imul
sub
mov
adc
and
or
xor
push
cmpb
push
and
jae
in
lock
mov
mov
cwtl
in
push
out
xchg
repz
repz
adc
and
gs
fstps
vandps
ds
inc
add
mov
nop
std
rcll
pop
xor
cli
inc
lret
sub
popa
addr16
adc
mov
fsubs
adc
test
inc
adc
nop
jb
mov
imul
int3
sbb
jno
sar
mov
add
xchg
into
in
mov
dec
ret
cmp
loop
or
mov
fidivs
into
pushf
fdivrl
popa
test
mov
mov
add
mov
sub
pop
mov
imul
xor
xchg
dec
pop
inc
jno
scas
adc
aas
pop
push
and
mov
fsubrs
in
xchg
mov
pop
in
adc
fwait
push
and
add
fisttps
out
xchg
add
enter
inc
lods
xlat
stc
adc
pop
pushf
int3
insl
pop
push
test
add
loop,pt
lods
pop
xchg
inc
mov
iret
mov
mov
gs
pop
and
pop
and
jb
and
xor
xor
adc
push
js
sbb
cmp
imul
add
push
outsl
loopne
push
shl
pop
iret
sbb
jo
je
repnz
jno
enter
xchg
es
cld
sbb
shll
mov
es
jecxz
adc
adc
stos
xlat
and
xchg
mov
push
lock
or
xchg
test
mov
aad
sub
mov
fmull
inc
bound
fdivp
fptan
cmpsb
stos
lret
int3
sub
and
ret
jns
xchg
inc
shlb
ja
xchg
arpl
mov
jle
bound
inc
mov
cld
mov
in
push
xlat
mov
cmp
pop
fs
movsb
pop
cld
pop
fidivl
push
push
adc
cmp
jns
jno
mov
test
sbb
mov
repz
fistpll
enter
aaa
xchg
jecxz
call
dec
loop
xchg
lea
dec
mov
movsl
mov
imul
cmp
sub
xlat
cli
cltd
gs
mov
pop
flds
bndstx
xchg
jmp
jl
lock
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
dec
xchg
jl
pop
jl
mov
test
adc
neg
fistpll
ljmp
sbb
pop
mov
mov
jnp
punpcklbw
xor
adc
push
imul
mov
int
inc
and
inc
or
stos
xor
jle
xchg
xor
push
fs
mov
dec
shrd
out
mov
adc
adc
jmp
sub
cli
xlat
xchg
or
lea
xor
jg
arpl
dec
ds
dec
mov
loopne
aad
adc
lahf
in
icebp
jle
js
dec
testb
movsb
das
add
jg
dec
inc
mov
cmp
push
ja
sbb
and
data16
adc
push
dec
jnp
mov
mov
pop
pop
movsb
add
mov
in
and
loope
ds
push
and
filds
mov
jne
xchg
das
fdivr
insl
loopne
popf
clc
adc
mov
lret
jl
mov
sbb
jae
test
test
stc
inc
xchg
xchg
sahf
jns
int
jne
jne
test
es
push
pop
outsb
inc
test
out
cmp
sub
cmp
test
dec
push
jl
repnz
add
sbb
mov
jae
dec
filds
dec
push
lret
push
lds
popa
ljmp
inc
mov
fstpl
push
inc
pop
mov
push
aas
pop
addr16
add
stos
or
faddl
lret
mov
push
out
cmp
fisubl
std
inc
int3
mov
lods
dec
mov
cmpl
fdivs
loopne
in
pop
in
ret
or
jecxz
rcl
xchg
enter
mov
rclb
lcall
and
add
leave
aam
das
es
mov
cmp
xor
mov
js
loopne
mov
stc
fistps
pop
pop
jno
jecxz
xor
xchg
xchg
jne
aam
into
lcall
lret
divb
inc
inc
inc
lret
or
cmpsb
adc
mov
mov
adc
or
xchg
aas
in
stc
jge
out
mov
out
xor
sbbl
fcompl
subb
aas
mov
call
lock
xor
xchg
dec
shll
ficoml
jbe
je
jmp
test
pushf
xchg
repz
ja
fs
in
aaa
adc
mov
aam
cmp
fldenv
sub
adc
push
dec
mov
sbb
xor
mov
push
jle
repz
lea
or
jb
and
aam
adc
js
pop
clc
push
mov
push
in
sbbb
loope
push
jle
cmp
and
aas
adc
scas
cmp
cmp
xchg
stos
repz
insb
sub
jno
push
and
and
shll
push
loopne
mov
sbb
dec
dec
mov
lock
ja
lea
outsl
sti
adcb
inc
and
cmpl
inc
sub
repnz
mov
or
pusha
xlat
jle
mov
les
mov
cmp
fwait
js
push
inc
cmp
lds
cmp
mov
cmc
fs
adc
add
xor
mov
mov
mov
daa
jle
push
lods
xchg
mov
arpl
add
inc
idivb
and
pop
cmpsl
xchg
popa
inc
popf
ret
sar
lret
sbb
jge
xchg
push
adc
insl
xchg
js
or
cmp
cmc
sbb
les
xchg
dec
xchg
add
ret
mov
and
or
aam
dec
negl
pop
mov
add
mov
ljmp
movsb
addl
dec
pop
mov
rolb
mov
pop
imull
mov
enter
jl
gs
jo
pop
push
popl
out
int3
adc
ds
and
lock
add
pop
pop
int
jmp
xchg
pop
pusha
loopne
sub
adc
pop
das
imulb
pushf
xchg
adc
xor
mov
std
leave
dec
notl
je
fwait
or
pop
stos
mov
sahf
rolb
jns
aaa
and
insl
test
mov
ret
shr
push
aad
movsb
mov
or
ret
adc
push
inc
sbb
cmp
push
shlb
out
xor
stos
add
or
jg
je
gs
icebp
xchg
popa
repz
data16
loope
mov
xchg
xor
mov
pop
inc
or
das
cmc
xchg
sbb
fs
out
rcl
data16
jns
inc
adc
or
fisubrl
pop
sub
cmp
lea
lret
nop
scas
aam
jo
xchg
mov
and
sbb
mov
jno
mov
loopne
xchg
pop
ja
add
aas
fsubr
mov
or
inc
xlat
mov
out
arpl
pop
xchg
push
sarl
dec
add
xchg
mov
push
mov
mov
mul
rol
mov
imul
fdivs
and
mov
pop
add
xor
mov
test
pop
int
dec
inc
fmuls
arpl
les
fs
xor
push
inc
aad
fcomps
jmp
ret
insb
dec
cmpsl
fstp
mov
xchg
fmuls
xor
xchg
test
add
popf
mov
orl
pop
jl
arpl
ret
insb
mov
dec
leave
jb
out
lret
js
data16
rorb
or
lock
int3
inc
mov
mov
jne
mov
inc
jo
jp
sub
sahf
inc
cmp
mov
mov
fldcw
loope
aad
cmp
sbb
cmp
mov
pop
cmpsl
rorb
out
push
add
mov
scas
mov
cli
sarb
mov
inc
sar
shrb
iret
mov
jecxz
xlat
mov
jne
fst
xorb
push
mov
ds
pop
arpl
fdivs
dec
ja
shll
adc
mov
xor
sti
inc
cmpb
xchg
and
add
mul
lds
pop
loopne
mov
push
leave
inc
add
dec
xor
jp
dec
adc
popa
lret
xlat
cmp
movsl
dec
insb
aam
jecxz
mov
movsl
cmc
push
enter
out
push
sahf
cmp
push
mov
outsb
xor
movsl
xchg
shrl
out
xor
repnz
fldl
repz
push
xchg
cltd
or
jbe
rol
enter
sahf
lods
test
push
dec
sbb
push
xchg
jno
push
xor
dec
test
movsl
dec
movsb
loopne
xor
out
imul
hlt
push
and
fs
lcall
push
sti
loope
mov
mov
outsl
ljmp
inc
test
test
or
mov
jae
scas
xor
test
iret
dec
jecxz
jge
adc
jl
out
xor
in
arpl
ja
add
movsb
push
loopne
pushf
lds
test
and
pop
inc
adc
ss
fists
jne
mov
ljmp
lods
push
dec
dec
sub
test
jecxz
xchg
add
sti
xlat
mov
insl
pop
rcll
cmpsl
mov
aaa
fcomps
add
pop
xchg
loop
push
inc
ds
popa
ficomps
subl
cmp
ljmp
ljmp
push
push
cwtl
daa
push
inc
aad
cltd
pop
xchg
sub
int
push
lds
inc
hlt
rcrb
addr16
negb
jo
mov
jns
scas
call
cmp
icebp
jge
or
aam
lret
jne
divb
xor
adc
jmp
decl
cs
hlt
sbb
daa
insl
mov
int3
pusha
into
push
loopne
add
out
jae
xor
ds
adc
mov
movsl
fcmovnu
sbb
lds
mov
int3
adc
ficoml
js
rcrb
repz
and
fwait
ja
dec
xorl
addr16
scas
shlb
and
out
sahf
rcrl
test
push
insb
mov
mov
cmp
ds
dec
cs
add
mov
sub
jl
inc
lock
mov
leave
and
inc
jge
mov
mov
push
adc
xchg
mov
scas
rcrl
lret
mov
mov
popf
adc
mov
popf
jb
movsl
stc
mov
lcall
xchg
xor
mov
cmp
lcall
outsl
add
adc
cmp
mov
add
push
push
xor
outsl
or
popa
aas
lds
push
or
dec
fisubrs
lret
push
sarb
mov
lcall
dec
pushf
push
dec
pop
xchg
stc
sbb
mov
aam
jnp
jb
icebp
push
nop
loope
addl
xor
test
sti
cmp
or
jae
jge
add
fisubrs
inc
mov
popl
test
mov
sbb
test
cli
inc
and
cs
test
nop
sub
lods
outsb
xor
ja
std
xorl
test
ja
mov
popa
rep
test
fisttpll
imul
dec
mov
adc
push
mov
sbb
ret
sub
adc
loope
adc
mov
cltd
lret
jne
jnp
mov
cmc
rorb
repz
repnz
jo
out
dec
xchg
adc
push
pop
sbb
mov
stc
push
outsb
jl
cmp
dec
ret
mov
jecxz
outsl
sub
test
push
leave
pop
mov
lock
leave
jecxz
push
xor
mov
push
push
mov
cmpsl
clc
inc
cltd
jns
xor
dec
inc
jno
add
aaa
inc
jmp
outsl
in
adc
lcall
jns
cltd
insb
add
jge
fidivrs
sti
popa
dec
xor
loope
mov
pop
sbbb
fildll
mov
shlb
xlat
jp
addr16
stos
xor
aam
push
inc
pop
xor
pop
mov
xchg
mov
ret
fdiv
repnz
jns
mov
cs
mov
mov
or
movsb
je
mov
in
jl
xchg
insl
les
pop
mov
xchg
decb
arpl
push
inc
mov
mov
icebp
mov
inc
cmp
int3
ret
jg
xchg
pop
out
jg
xor
into
lods
imul
cmpsl
aas
lret
cmp
dec
cmp
pop
iret
lods
xchg
xor
mov
pop
or
pusha
adc
dec
xchg
jne
push
ds
scas
xchg
or
call
mov
addr16
mov
shr
je
out
ljmp
fistps
push
jb
inc
push
pop
nop
pop
add
add
dec
loope
fisttpl
or
cmp
mov
daa
mov
xor
repnz
mov
out
andl
mov
add
shll
jno
or
divb
xor
lods
xchg
dec
popf
and
push
iret
mov
mov
mov
mov
testl
jae
fs
add
cld
gs
inc
push
outsl
int
clc
rcll
js
test
in
or
xor
ret
fidivrs
xchg
add
gs
movsb
and
fidivl
into
adc
cmp
push
mov
shll
je
push
mov
sbb
xor
mov
jnp
insb
mov
inc
shrb
xor
icebp
rol
mov
push
or
bound
xor
push
in
inc
into
cwtl
clc
orb
sahf
gs
mov
insb
subl
aaa
xchg
lods
add
push
add
adc
adc
adc
jbe
cltd
adc
push
mov
popa
xchg
mov
cltd
inc
out
jb
jb
push
mov
das
push
fs
testl
or
out
adc
es
mov
std
jmp
sub
or
xchg
js
adc
shl
js
inc
pop
sarb
pop
inc
and
inc
lock
mov
push
sti
lret
mov
xchg
cmp
stos
stc
jle
cwtl
xchg
pop
sub
hlt
inc
mov
dec
gs
cmc
adc
xchg
or
xchg
mov
cli
ja
ljmp
xchg
loope
fbld
sub
loopne
movb
mov
bound
test
jl
test
mov
fsub
out
jmp
xchg
mov
xor
inc
mov
je
adcb
stos
inc
mov
cmpsl
sbb
add
pusha
orl
dec
inc
mov
adc
fs
lock
clc
sbb
mov
pop
xor
xor
add
push
orb
fistpll
fdivrl
or
pop
rcrl
ljmp
and
sub
dec
fld
inc
loop
mov
fisttps
fsubs
leave
sbb
mov
adc
sub
and
inc
xchg
mov
arpl
inc
out
mov
sub
xchg
int3
or
addr16
or
sub
and
push
xor
shr
div
ljmp
test
pop
int3
decl
shr
mov
test
mov
lods
insl
fdivr
xorl
mov
and
fnstenv
cmp
imul
sbb
inc
push
loopne
mov
lock
ljmp
jle
adc
fsubrp
ret
xor
xchg
cld
lock
mov
aaa
cmp
xor
mov
pop
mov
fistl
invd
movsl
jnp,pt
add
fiadds
mov
xchg
sbb
stc
add
cmp
mov
jne
imull
sub
xchg
ljmp
jle
push
push
dec
test
loop
mov
rcr
jne
jne,pn
test
push
out
fldl
dec
xlat
rol
add
rorl
nop
cltd
inc
lcall
jno
inc
wbinvd
cmp
jae
inc
pop
sub
add
mov
or
jp
ja
loop
add
fsubr
add
mov
add
js
gs
and
xchg
cmpsl
outsl
inc
cltd
jno
push
fnstcw
lea
cmp
je
mov
xor
inc
jne
cmp
dec
rcrl
arpl
dec
icebp
and
mov
aaa
or
or
xchg
mov
mov
popa
push
cmpsb
sti
rep
scas
js
cmc
pop
out
push
icebp
mov
jns
dec
sub
adc
add
mov
adc
arpl
enter
jb
pusha
lds
int3
xchg
in
mov
into
dec
ficoms
data16
cmp
outsl
sbb
cmp
lret
ret
cmp
imul
sbb
sbb
dec
out
mov
adc
sub
jecxz
mov
mov
stos
stc
jl
cmp
mov
sbb
daa
and
xchg
add
push
sahf
out
jge
or
inc
loop
bound
inc
stos
lahf
jnp
mov
imul
aad
mov
or
sbb
imull
rolb
pop
mov
cmp
or
push
mov
adcb
sbb
incb
pop
jcxz
push
es
mov
out
ror
daa
mov
pop
arpl
mov
sarl
dec
ret
push
pushf
inc
hlt
pop
adc
fs
mov
movsb
mov
lds
xor
das
pop
hlt
gs
lea
ret
pop
push
idivl
test
cli
jge
enter
xchg
js
xchg
push
sub
stos
jge
int
xchg
cmpsl
outsb
mov
idivb
mov
mov
add
xor
xchg
clc
xchg
popa
push
lret
adc
xchg
fimuls
add
shl
mov
xor
mov
cmp
sub
and
cwtl
xor
shll
leave
inc
push
lock
daa
sub
xchg
add
into
fcmovnu
inc
lcall
sbb
adc
idivl
cmp
xor
add
aas
mov
push
pop
fadd
mov
imull
in
movsb
mov
xor
adcb
dec
pop
mov
mov
mov
out
imul
and
cmp
adc
test
jecxz
jp
icebp
loope
mov
dec
dec
pop
adc
aas
xor
jl
push
and
pop
std
mov
aam
xchg
into
mov
push
adc
jle
cwtl
fs
jne
notb
sti
and
mov
inc
cltd
push
push
cmp
dec
mov
mov
xchg
xchg
mov
mov
lods
pop
mov
sub
jp
push
push
daa
es
loope
mov
xchg
adc
notl
stc
gs
fwait
sbb
int3
iret
imul
sbb
push
imul
add
mov
xlat
xchg
push
lods
and
pop
lods
xor
sbb
loopne
xchg
insb
mov
jp
sbb
pop
sub
push
xor
fwait
hlt
dec
hlt
lea
pop
into
popf
out
aas
fcomps
pop
and
popf
aaa
jbe
inc
pop
jnp
mov
cmp
adcl
fildll
dec
jnp
movsb
sub
fsubrp
xor
jg
mov
and
cwtl
inc
push
mov
fwait
jae
int3
or
cmp
test
bound
dec
and
xlat
test
ror
addr16
jecxz
mov
movsl
mov
jle
dec
in
dec
mov
aam
sub
cmpsl
cmpsb
jl
inc
mov
jb
icebp
daa
enter
rcrb
das
jo
push
sbb
shlb
mov
xor
add
push
repnz
sbb
pop
push
add
add
and
jno
jp
push
fcmovnu
in
pop
xchg
jae
hlt
jmp
test
lret
sub
imul
aam
in
enter
sub
inc
and
enter
cmp
pop
stos
cs
mov
test
lods
mov
sbb
sub
sbb
jge
mov
fcmovnbe
add
pop
add
xchg
xor
dec
cmp
and
xchg
pop
pop
jle
or
jecxz
lods
pushf
sbb
xor
sar
lea
ja
fsubrl
mov
adc
int3
pop
jmp
call
jo
fsubrl
jbe
push
jg
jne
das
testb
daa
roll
aas
ljmp
mov
xchg
imul
lea
popf
popa
cmp
cmc
mov
das
addb
out
cmpsl
or
test
mov
dec
lock
repz
xor
ljmp
cwtl
mov
insl
repnz
push
fcoms
addr16
or
outsl
xchg
adc
ss
gs
enter
dec
in
rolb
das
dec
int
int3
and
aaa
das
in
les
xchg
jmp
ja
mov
and
nop
stos
daa
aam
or
sub
test
dec
add
testl
in
cmp
lea
sbb
pop
nop
insl
jns
xchg
in
sbb
insb
jae
jnp
xchg
fidivs
mov
imul
test
ss
out
push
xchg
leave
out
xchg
cmp
dec
adc
sbb
test
sub
xchg
add
mov
ss
jecxz
mov
jl
mov
iret
adc
addr16
ficompl
jle
inc
xor
jae
dec
in
push
pop
ficomps
lods
mov
addr16
cmp
cwtl
test
fimuls
adc
inc
cli
shr
fs
lcall
add
shlb
jae
dec
repnz
je
out
adc
and
jmp
jp
push
scas
aad
sub
xchg
sbb
mov
and
pop
mov
inc
xor
test
jae
mov
lcall
cli
out
mov
loop
or
xchg
loopne
mov
xor
pop
push
ds
dec
lods
lock
pop
ror
xchg
lods
and
hlt
cld
ret
add
fistl
fists
dec
and
clc
cmpsb
add
sbb
lret
nop
lret
repnz
insb
lock
sub
ss
xchg
sbb
jle
fadds
cli
add
or
repnz
aad
dec
or
mov
pop
sbb
or
and
dec
jecxz
xchg
xchg
int3
mov
repz
sbb
xchg
and
xchg
or
test
das
popa
ljmp
lods
dec
leave
stos
test
jecxz
cmpsl
fcoml
push
mov
cmp
fdivrl
punpcklwd
mov
lret
fisttps
adc
xchg
mov
pop
push
pop
or
ds
clc
inc
dec
leave
cmpsb
or
in
out
out
adc
push
popf
inc
in
adc
jae
xchg
mov
inc
pop
fstl
adc
mov
xchg
sub
into
fadds
sbb
ficoms
stc
rol
repnz
mov
inc
mov
jmp
cli
out
cmp
hlt
and
cld
pop
dec
push
mov
lret
pop
mov
in
ss
dec
cmp
jae
pop
xchg
mov
jne
call
adc
jle
lods
or
jb
dec
stc
and
bnd
je
fwait
dec
jg
dec
dec
sbb
dec
sub
inc
je
and
dec
dec
and
jno
fcompl
fiaddl
dec
inc
loop
ljmp
add
arpl
mov
stos
sub
or
movsb
pop
int
shl
add
sub
lret
addr16
in
mov
cmpsl
ret
and
pop
mov
bound
cmpsb
int
jns
adc
lcall
gs
push
nop
pop
ret
test
test
xchg
push
and
nop
clc
push
shlb
mov
mov
in
iret
cmp
dec
shll
cmp
inc
fnstsw
fcmovnbe
test
dec
nop
lods
jno
cld
jmp
and
add
mov
pop
loope
cmpsb
in
cmpsb
insl
adc
push
cmpb
sbb
mov
or
xchg
das
addb
in
sub
test
iret
add
pop
les
imul
jno
lea
aaa
jns
cld
gs
xchg
popa
dec
out
xor
dec
and
arpl
push
dec
sbb
or
and
aas
testb
xor
dec
sub
xchg
in
mov
jp
or
or
xchg
add
gs
xor
sub
xor
jae
movsl
inc
push
push
imul
jle
dec
das
jg
jg
pop
enter
pusha
movsb
ret
xchg
xor
cmpsb
dec
inc
xchg
outsl
inc
mov
xlat
inc
add
xchg
xchg
iret
arpl
loop
dec
inc
mov
mov
dec
sbb
dec
out
sub
mov
ror
add
out
mov
stos
lods
dec
in
xor
dec
out
imul
out
pusha
jne
sub
pop
sti
cmp
popa
outsl
xchg
aam
jbe
sub
pop
xor
xor
stos
push
dec
fldcw
xchg
mov
mov
lret
stos
loop
mov
test
scas
test
into
pop
int
push
std
or
insb
sti
inc
fwait
sub
ss
mov
xor
inc
scas
scas
mov
ds
in
mov
inc
xchg
inc
jae
inc
mov
add
xor
xchg
sti
mov
dec
ret
jbe
dec
cwtl
dec
mov
sub
lds
popa
push
pop
dec
popa
xchg
jmp
je
add
cmp
loop
imul
fiadds
out
sar
push
mov
and
scas
inc
cltd
inc
jb
jp
out
jne
mov
lock
jns
cvtps2pd
jl
shll
xchg
xchg
sbb
jp
loope
in
clc
pushf
sub
icebp
dec
dec
jecxz
in
push
cmp
mov
jb
dec
call
sbb
add
mov
add
outsb
mov
fldcw
mov
mov
scas
mov
mov
adc
es
jb
jmp
jbe
push
negl
jno
aam
popf
movl
dec
wrmsr
add
mov
mov
and
enter
adc
ret
bound
scas
in
mov
sub
insl
mov
push
scas
mov
stc
js
adcb
or
outsl
repnz
push
daa
stos
push
testl
inc
mov
and
loopne
sub
or
inc
xor
mov
push
cmp
mov
inc
ficoms
cmp
daa
and
push
fbld
sub
mov
mov
dec
inc
mov
xor
or
vpaddw
movsl
jp
imul
rcrl
mov
dec
fdivl
outsl
iret
mov
jge
es
adc
jmp
lea
ss
shll
jae
outsl
lods
push
nop
sbb
mov
mov
sbb
inc
dec
sti
cmp
sub
ds
mov
ret
lcall
pop
push
xchg
push
mov
lods
push
bound
popa
fcom
push
push
adc
mov
sub
cld
mov
cmp
push
test
or
push
fcmove
sbb
popf
cmpsb
aas
scas
jae
hlt
outsl
daa
add
and
into
dec
popf
nop
or
or
or
jbe
int3
arpl
ja
stc
jnp
dec
dec
dec
lds
loopne
adc
into
outsb
mov
push
pop
sbb
jp
xchg
inc
bnd
pop
or
sbb
sbb
pop
enter
ljmp
inc
mov
mov
rorl
cmc
jb
and
pop
shl
mov
testl
testb
sbb
pop
call
mov
xor
mov
dec
clc
fs
popa
xor
hlt
call
popf
arpl
mov
icebp
xor
jp
xchg
inc
imul
lret
dec
mov
sbb
sbb
add
js
and
bound
or
imul
call
push
jle
icebp
or
jno
fsubrl
stos
add
sti
dec
cltd
movsb
push
mov
in
cmp
sub
adc
mov
jecxz
sbb
movsb
in
inc
and
mov
ret
add
rclb
lcall
jns
mov
mov
pushf
jnp
mov
lret
push
jge
or
mov
cmp
adc
decl
lods
test
cmpsb
sub
out
mov
arpl
jg
inc
adc
loope
push
cmpl
ds
sbb
inc
out
mov
inc
movsl
scas
mov
push
mov
jl
or
sbb
imul
into
sbbl
stos
hlt
aad
adc
fcmove
ds
int
mov
ret
lret
fcmovnb
ds
jb
push
es
inc
mov
stos
rcl
adc
int3
jae
imul
xchg
xchg
jl
xor
je
or
jecxz
jbe
sub
dec
and
mov
jne
xor
adc
push
push
mov
xchg
add
divl
loop
inc
xchg
mov
mov
xchg
pop
in
repnz
js
mov
mov
add
jmp
cld
push
stos
mov
scas
aad
sbb
add
fimuls
fisttps
adc
es
das
xchg
jo
mov
inc
mov
mov
cs
mov
xchg
cmpsb
iret
xchg
inc
pop
psubusw
sbb
les
cmp
jns
imul
jb
mov
out
out
cmp
or
push
cmpsb
push
cmp
scas
lea
pop
test
mov
sub
aam
add
add
loope
out
cwtl
sbb
popf
pop
inc
pop
lret
rorb
jne
in
test
mov
sti
mov
ds
and
loope
in
nop
adcb
jg
enter
xchg
mov
out
jne
mov
sahf
cli
xchg
cmp
or
and
push
mov
adc
lods
push
cwtl
sbb
dec
cltd
addb
xor
dec
xchg
sub
call
jge
jns
into
jae
xchg
pop
lret
mov
test
xor
loopne
rdpmc
dec
push
cmpsl
and
dec
dec
or
insb
sahf
cwtl
ret
and
jmp
into
cld
xlat
add
popf
mov
fisubl
test
jecxz
das
jg
xor
lock
xlat
pop
mov
add
pop
sub
dec
fucom
push
ja
daa
repnz
icebp
xor
push
sti
addr16
mov
pminub
scas
dec
jle
jb,pn
adc
cmp
pop
mov
inc
xchg
inc
int
mov
sub
mov
dec
fwait
jle
mov
fmull
in
adc
mov
sti
jle
cltd
sahf
imul
cmp
in
or
ljmp
lods
pop
mov
sbb
push
outsb
or
add
call
sbb
jno
inc
mov
and
loope
cmp
dec
cmp
pop
sbb
insb
rcl
scas
nop
inc
mov
and
cmc
stos
or
bswap
jae
ror
stc
push
lds
gs
pop
cs
mov
out
pop
mov
push
cwtl
cmp
int
xchg
and
test
jb
dec
or
je
mov
pop
push
jp
adc
data16
leave
ret
push
ss
sbb
xor
bound
sbb
dec
mov
xchg
loope
push
gs
jmp
rcr
test
mov
sub
test
jne
xchg
leave
jbe
and
iret
scas
jge
ret
mov
repz
aam
leave
sub
xchg
insl
dec
pop
iret
repnz
jne
inc
or
jp
inc
js
push
into
repz
inc
mov
xchg
shlb
fistl
mov
mov
jae
jmp
fcompl
or
jle
jle
mov
rcrb
js
and
dec
cmp
cmp
adc
sub
lahf
xor
int
hlt
dec
outsb
jb
dec
cmpsl
repnz
popa
sbb
mov
nop
inc
sub
jae
cs
fcomps
pusha
aam
movsl
daa
or
and
mov
push
clc
fidivs
fistps
stc
pusha
jne
adc
jne
insl
mov
pop
jae
jno
jne
cmp
es
mov
mov
mov
rcrb
push
dec
jg
jg
shrl
push
mov
ror
or
xlat
shl
je
mov
pop
pop
push
lahf
sub
add
pushf
adc
sbb
mov
cs
test
push
dec
in
lds
xlat
pop
test
inc
mov
sti
shrb
into
xor
clc
jmp
add
ljmp
mov
jne
or
adc
imul
pop
scas
jle
xchg
pop
test
mov
mov
and
jae
mov
jae
test
pop
sub
and
sti
push
adc
decb
pop
fsub
call
loopne
xchg
call
and
int3
pusha
movsb
out
mov
sbb
mov
adc
notl
dec
xchg
cwtl
sbb
mov
adc
jnp
sbb
das
sbb
pop
jbe
push
cmp
adc
xor
inc
xor
mov
jge
gs
sub
push
xchg
mov
mov
xlat
inc
lret
inc
jb
int3
pop
xlat
movsb
xor
mov
psubw
gs
push
mov
jp
cs
cwtl
pop
mov
jmp
pop
mov
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
hlt
mov
jl
pop
pop
jl
mov
addr16
xor
aas
scas
and
xor
icebp
cmp
cmp
jo
jle
lret
jge
sbb
adc
sub
mov
sahf
das
js
xchg
fwait
push
or
adc
inc
sbb
mov
dec
sbb
fimull
adc
mov
adcb
mov
push
mov
js
fwait
pop
mov
jo
pop
dec
fucom
inc
lcall
popf
xchg
inc
aaa
adc
push
shll
incl
jmp
mov
mov
cli
add
cmp
test
fistps
idivl
das
push
xchg
dec
clc
xor
loop
es
cwtl
or
cmc
mov
jbe
jmp
jl
cli
xchg
sub
lret
cmc
mov
jle
hlt
sbb
mov
inc
push
cmpsb
mov
orl
jg
loopne
addl
mov
mov
jle
push
mov
inc
js
mov
pushf
xchg
dec
ret
sbb
add
xor
mov
movsb
cltd
add
cmp
dec
imul
or
sarb
fucomip
popf
inc
aas
or
insb
dec
repnz
daa
cmp
ss
push
mov
push
stos
adc
cmpb
imul
pushf
orl
inc
sbb
icebp
ret
dec
lds
xlat
push
or
imul
dec
xor
jne
add
outsl
inc
jno
mov
fldenv
inc
iret
cmpsb
loope
push
mov
out
sub
pushf
sub
andl
sahf
cmp
push
jae
jge
std
repnz
dec
loope
push
jae
in
sub
mov
xchg
mov
mov
pop
popf
xlat
shl
mov
xchg
subb
jp
orb
pop
mov
jb
stc
or
mov
sub
xchg
jle
push
cmp
inc
mov
sbb
xchg
jno
xor
xchg
insb
inc
fdivrs
cmp
enter
mov
dec
insb
pop
sub
jl
idivl
fsubrl
ret
stc
repz
loopne
jbe
pop
imull
lds
push
sbb
je
cs
test
jne
repz
inc
xor
js
adc
dec
fnsave
pusha
adc
sub
verw
and
or
mov
data16
xchg
mov
fbstp
push
pusha
in
pop
sahf
jns
pusha
das
hlt
out
mov
add
inc
ds
sbb
mov
xor
mov
dec
out
sub
or
ret
or
mov
and
mov
inc
fisttpl
jmp
cmc
sub
lods
jge
data16
ret
xchg
sti
sub
lret
test
adc
mov
out
enter
shl
push
mov
sbb
cmp
xchg
mov
clc
lods
inc
mov
test
ja
xor
inc
mov
out
int3
add
cld
out
into
xor
mov
sbb
xor
jb
xchg
push
mov
outsb
out
mov
xor
ljmp
jmp
xchg
scas
xchg
jb
mov
xchg
add
pop
sarb
pusha
mov
mov
or
mov
push
add
dec
mov
in
arpl
loope
pusha
out
out
xchg
push
filds
mov
jnp
add
stc
cmpsb
sub
ret
ret
stc
dec
push
and
xchg
xor
jle
sub
push
sub
mov
push
cmp
pop
jmp
adc
jae
jo
sub
fs
xchg
adc
cmp
jp
sbb
dec
push
pop
arpl
icebp
fstpt
lds
mov
jnp
mov
sbb
into
ljmp
ret
adc
cmp
loopne
sub
dec
or
adc
loop
inc
icebp
hlt
push
xchg
add
rcl
xor
jg
insl
xchg
xchg
add
xchg
scas
popa
test
in
xor
dec
sbb
xor
sbb
aam
xchg
outsb
xor
pop
xor
insb
mov
cmpsb
jno
jnp
fisubs
dec
imul
inc
push
jmp
sbb
pop
cmpsl
pop
insl
mov
insb
dec
cwtl
mov
data16
mov
fsubrp
adc
xor
scas
nop
or
lock
fdivl
cmpsl
enter
cmpsb
dec
ljmpw
clc
jnp,pn
xor
in
pop
cld
adc
outsl
test
clc
mov
lret
jge
pop
push
rcr
push
push
pop
adc
je
sub
dec
pop
es
mov
scas
fdivrs
clc
lea
ss
xor
mov
mov
test
loop
push
xchg
movsb
decl
pop
notb
aaa
xor
and
mov
xrstors
js
fnstenv
psubsb
mov
icebp
pop
cmp
inc
and
xor
xor
push
xchg
aas
sbbb
loop
arpl
aas
pop
hlt
insl
and
and
aas
jecxz
xchg
push
lds
test
addr16
lods
cltd
sti
sbb
rcrl
out
jle
xor
adc
lahf
xor
pusha
stos
subl
jne
xor
mov
arpl
and
dec
mov
in
adc
and
clc
addr16
push
add
jns
add
pop
aaa
fidivrs
adc
cmp
xchg
mov
adcl
pop
insl
push
call
pop
jne
sbb
cld
cs
jg
mov
in
out
fwait
test
cld
out
sbb
xor
jecxz
fs
mov
jl
sub
je
adc
adc
testb
inc
or
adcl
test
aam
ljmp
push
popa
jge
es
sbb
and
mov
incl
mov
je
push
inc
mov
mov
or
sbb
idivb
loopne
jge
lea
push
cmpsl
jo
and
out
test
mov
outsl
ds
lods
and
addr16
pop
shll
cs
pop
call
cld
mov
mov
dec
mov
ror
mov
adc
sbb
loopne
ljmp
jl
in
sbb
dec
fdivl
fwait
sarl
fwait
push
mov
fmull
movsl
add
into
add
and
jbe
clc
les
insb
cwtl
xchg
mov
jne
xor
jne
imul
lods
jne
repnz
xchg
in
daa
xor
wbinvd
pushf
or
insb
add
popa
fs
lods
es
push
and
mov
xchg
mov
ret
jb
iret
fisttpl
clc
jmp
push
xchg
lret
xchg
shl
pmullw
push
pop
or
and
mov
push
jle
repnz
xchg
push
sti
push
test
cmc
mov
cmp
scas
enter
clc
adc
cmp
mov
int
out
in
sahf
pop
adc
cmp
inc
xchg
lahf
into
mov
les
cli
test
and
icebp
and
addr16
stos
idivb
sub
or
xlat
stos
sub
sub
cli
loop
mov
lcall
add
xor
xor
push
or
shrl
jge
push
dec
mov
inc
mov
sbb
pop
sbbl
sbb
jecxz
movsb
fcoms
mov
cwtl
dec
mov
mov
inc
repnz
int3
pop
add
sub
fstps
fisttpll
add
push
lds
adc
xchg
fmuls
add
push
repnz
lret
int3
shrl
mov
js
pop
inc
jo
inc
inc
ds
sub
andb
cmc
in
mov
sti
jb
or
das
push
xor
pop
mov
jae
bound
push
cltd
jnp
mov
sub
cmpsb
mov
adc
movsl
mov
xor
or
stos
mov
dec
ret
stos
pop
push
or
out
mov
shrb
fmul
jge
jb
fdiv
dec
test
ret
mov
mov
pop
iret
cmp
xchg
lcall
cmc
sbb
cld
xchg
mov
mov
fucomp
xor
xchg
inc
sub
xor
gs
adc
add
fisubrl
push
data16
jb
and
cltd
push
xor
daa
adc
jp
cmp
cmp
mov
enter
or
rorl
lahf
pop
pop
repz
decb
fwait
jle
push
push
cmp
jne
pop
inc
pop
sti
cmp
popa
les
or
push
mov
or
pop
mov
cmpsl
iret
push
xor
ds
or
mov
sbb
pop
hlt
in
je
and
mov
test
jl
jle
es
imul
pop
mov
stos
mov
sbb
cmp
outsb
dec
pop
or
ret
mov
sub
xor
cmp
call
pop
pop
pop
rcrl
xor
lret
call
inc
add
push
cmc
test
insl
mov
xor
iret
arpl
pusha
add
fsubs
sub
xor
movsb
pop
imul
int3
sahf
lahf
test
js
in
popf
je
movsb
and
in
mov
add
mov
mov
xorb
test
mov
int
cmp
xchg
xchg
or
cmp
mov
scas
ljmp
in
stos
push
arpl
nop
int
lret
and
enter
lret
repz
fidivs
jno
sub
sbb
xchg
in
mov
sub
lcall
in
test
shlb
xchg
ret
dec
shll
fs
fidivs
rcll
push
fisubrl
xchg
or
jo
or
enter
dec
cmp
push
mov
adc
pop
leave
and
imul
stc
pop
popf
xor
mov
add
in
mov
pop
dec
es
ret
subb
inc
fxch
insl
sbb
jecxz
ljmp
test
lock
lea
rclb
xor
divl
in
orb
jno
lret
mov
fsub
xchg
sbb
dec
xor
int
jmp
out
inc
sub
repnz
nop
cmp
loop
shll
data16
inc
sbb
mov
pushf
pop
mulps
call
xlat
xor
dec
std
repz
fstpl
mov
fs
fsubl
add
dec
jl
mov
jl
xor
inc
push
mov
add
xchg
imul
adc
das
jno
imul
out
outsl
xchg
je
push
sub
dec
and
mov
dec
add
push
inc
les
xlat
lods
add
lods
test
insl
in
int3
orb
mov
mov
push
add
dec
rolb
clc
push
int3
cs
pusha
pop
mov
jle
mov
sbb
aas
ret
xor
cld
lods
stc
xchg
loope
push
inc
mov
xchg
mov
sti
xor
dec
jg
add
inc
adc
dec
sbb
jmp
daa
clc
xlat
cmp
jg
fwait
inc
popa
hlt
or
aam
clc
movsl
ret
inc
push
int3
mov
pop
dec
test
cld
mov
loopne
mov
repz
ror
cmp
jne
hlt
pop
idivl
fsubrs
cmc
pusha
cli
push
inc
mov
fistpl
inc
cmp
or
add
fidivs
mov
or
pop
shlb
aas
inc
pop
inc
nop
sub
rcl
pop
fmull
cmc
sub
pop
inc
add
and
unpcklps
xchg
hlt
mov
mulb
scas
sub
ja
xorl
orl
daa
pop
addr16
pop
xchg
rcr
imul
adc
push
inc
popf
pop
les
rol
and
sbb
jo
sub
xor
aas
and
into
cmp
pusha
in
push
push
imul
lret
push
mov
sarb
add
test
push
jne
push
sub
jns
jno
dec
pop
lods
lods
cltd
mov
sub
dec
mov
push
mov
lahf
mov
cmp
iret
popf
out
shll
pusha
lds
inc
enter
lods
loopne
mov
xor
cmpsl
stos
cwtl
add
push
cs
sbb
inc
aam
sbb
ljmp
xchg
idivb
push
and
rolb
jg
addr16
dec
pop
pop
xor
arpl
pop
xor
mov
hlt
test
add
imul
push
in
mov
test
push
js
lret
xchg
hlt
jge
add
cmp
pushf
sbb
lods
pop
arpl
or
adc
je
dec
aad
xor
and
sub
loopne
xchg
mov
pop
cli
add
mov
stos
mov
push
and
pop
cmp
fs
inc
mov
and
sbbl
dec
pop
iret
scas
pop
cmp
shll
sub
push
leave
xchg
aam
cmp
outsb
testl
shlb
fimull
stos
insl
xchg
push
lahf
cmp
cli
gs
mov
mov
lret
inc
jg
daa
ljmp
jl
scas
xchg
fidivrl
jmp
stos
push
adc
and
std
sbb
insw
mov
push
cmp
mov
ret
xchg
insb
ds
inc
sbb
loope
inc
pop
jns
sbb
mov
jmp
pop
adc
repz
jp
pushf
in
or
inc
adc
mov
popf
pop
mov
mov
movsl
into
dec
jp
inc
push
pop
arpl
or
ljmp
pop
fisubrl
das
clc
jg
dec
mov
xchg
ret
dec
ret
xor
and
lret
pop
icebp
mov
add
es
xor
xor
jp
and
mov
cmp
pusha
out
push
fst
adc
adc
pop
dec
or
cs
loopne
cmp
push
cmpsb
js
add
pop
dec
fmulp
out
in
mov
dec
or
fistl
jbe
aas
fstpl
add
fdiv
je
arpl
cmpsb
stos
lods
lret
and
ja
test
xor
sub
or
or
mov
mov
cmp
cmp
fdivrp
adc
fbstp
ficompl
adc
sbb
sub
out
push
dec
jns
jnp
push
scas
push
mov
adc
pop
pusha
stc
mov
jae
inc
call
xchg
xchg
cmp
cmp
inc
sub
pop
loop
push
in
call
addr16
adc
movsb
cmp
jmp
enter
lds
idiv
jb
clc
lods
mov
xlat
mov
lock
jne
pop
fisubrl
std
hlt
cltd
sub
test
loop
mov
fsts
and
movsl
jl
pop
adc
jb
imul
filds
sub
lcall
dec
push
insb
mov
bt
cmp
or
dec
xor
mov
push
out
faddl
pop
sbb
add
andb
insl
aas
xchg
push
add
popf
fdivs
fcomps
stc
fcoms
fildll
sub
testb
mov
and
jg
inc
inc
test
cmp
cmc
and
ja
mov
mov
push
sub
nop
jle
jecxz
pushl
popa
aas
mov
and
push
repnz
dec
out
out
ljmp
push
add
rcrb
pop
mov
or
mov
in
jbe
test
sub
in
daa
cmp
aaa
or
sub
push
mov
or
adc
cmp
loope
flds
xchg
and
sub
or
push
test
repnz
addr16
xor
fcoms
pushf
dec
arpl
pop
sbb
pusha
xor
and
imul
mov
mov
clc
test
test
push
repz
inc
std
push
js
pop
sub
push
mov
push
xor
pop
or
int3
je
or
imul
or
cmp
push
jbe
xchg
or
inc
mov
push
lds
scas
push
int3
mov
aam
jo
out
mov
mov
loop
push
fwait
and
jbe
dec
outsb
fbld
mov
pop
setbe
cltd
push
int3
and
popa
jecxz
xlat
mov
pop
or
adc
pop
into
popf
outsb
push
push
stos
out
xor
pop
sbbb
pop
xchg
jmp
lock
cmp
lods
rdtsc
mov
jg
mov
fwait
std
push
sarl
scas
les
pop
add
test
inc
in
sub
mov
inc
pop
sbb
pop
sbb
leave
sub
fbld
adcb
adc
sbb
movsl
arpl
jno
push
add
stc
mov
inc
hlt
and
mov
jge
cmp
jecxz
push
adc
push
scas
iret
push
sub
mov
lret
mov
jecxz
cs
insl
pop
mov
cmp
cli
int
jns
daa
jne
cmp
ljmp
sub
inc
fisubrl
mov
movsb
xchg
lahf
outsl
lods
dec
lock
iret
das
cld
xchg
cwtl
add
aaa
mov
cmp
mov
add
int3
cs
stos
push
xchg
mov
cmc
rcrl
mov
loope
push
out
mov
cmc
jmp
in
fisubl
jecxz
xchg
out
sbb
dec
adc
inc
addr16
cmc
in
fists
icebp
mov
cli
out
out
mov
add
mov
bound
dec
mov
ret
and
adc
je
xor
and
adc
ljmp
push
imull
jb
and
mov
cmp
stos
add
test
xlat
adc
shll
addr16
inc
mov
jg
adc
shl
jno
sbb
inc
pop
clc
or
rcll
clc
in
xchg
push
inc
in
ret
push
iret
mov
rol
jbe
and
mov
stos
imul
shlb
dec
rolb
popa
and
jmp
das
fsubs
fiadds
imul
fwait
repz
fnsave
sbbl
stos
xlat
out
repnz
inc
xor
repz
shrb
dec
sbb
pusha
das
outsl
cltd
iret
imul
fcoml
pop
push
lret
out
adc
lods
or
xor
push
mov
jns
loop
sbb
jmp
sub
out
test
lock
sub
ljmp
mov
shrb
popf
mov
loope
xor
loopne
gs
loopne
adcl
aad
dec
inc
ds
xor
push
mov
xchg
mov
out
mov
ja
iret
or
fstps
stos
aas
addb
movsb
mov
adc
xor
test
nop
push
fxch
mov
add
sub
lods
xor
mov
aas
pop
dec
sub
stos
xlat
daa
test
dec
add
mov
arpl
adc
and
xchg
hlt
movsb
mov
dec
inc
mov
xchg
fldl
add
inc
paddusw
mov
mov
jge
sub
fs
pop
ficompl
lcall
cld
stos
xchg
outsb
xchg
data16
xchg
or
lahf
push
cltd
bound
add
push
dec
ss
sub
sub
or
jmp
and
mov
jecxz
mov
gs
es
sbb
sbb
nop
addr16
aaa
addr16
imul
aas
in
jno
call
hlt
add
inc
sub
mov
fsub
mov
and
jg
jmp
leave
gs
movl
cwtl
repnz
push
adc
and
push
and
inc
stc
pop
imul
addr16
mov
ret
js
in
std
adc
xor
dec
lret
or
rcl
adc
or
jl
cmp
testl
cmp
push
inc
jbe
xchg
int
sub
insb
cltd
stos
or
repz
insl
outsb
lods
addr16
stos
jns
test
stc
cmp
mov
pop
jge
dec
test
aam
cmp
push
aaa
pop
divb
in
adc
cs
addr16
imul
mov
add
repnz
jno
pop
dec
nop
jl
pusha
pop
shlb
jge
aam
mov
add
or
insl
inc
jns
stos
pop
fcomps
add
mov
popf
dec
adc
push
and
test
sti
sub
jnp
hlt
fstl
or
sub
sbb
cmpsl
cld
add
imul
xchg
fnstcw
test
daa
adc
xchg
inc
lcall
sahf
mov
decl
mov
movsb
loope
lahf
cmc
cmpsl
lds
inc
inc
mov
daa
xchg
xor
mov
out
cmp
outsl
sbb
dec
inc
jl
sub
shll
dec
dec
aaa
xorl
cmp
pop
mov
jmp
mov
lock
or
jne
pop
jl
dec
cmp
insl
cmpsb
dec
pop
lcall
jne
xchg
out
sub
addl
stc
lods
icebp
mov
mov
nop
mov
lahf
mov
dec
jne
dec
pop
popa
orl
test
jno
dec
stos
mov
add
fcompl
and
insl
cmp
sahf
testl
mov
addr16
out
mov
sbb
sub
sarb
inc
leave
data16
push
out
rcll
mov
enter
push
xchg
xchg
test
insl
or
and
sbb
cmp
inc
push
jo
xchg
lods
imul
lods
jmp
aaa
call
mov
test
cmp
and
mov
mov
mov
adc
je
pop
or
repnz
sub
xlat
inc
std
notl
pop
jge
js
insl
leave
xor
push
subb
in
jbe
xchg
pop
cmc
in
imul
int
jl
xchg
jmp
or
xor
movsl
adc
test
pop
jne
xchg
lret
sub
pop
iret
xlat
repz
insl
sbb
mov
cwtl
pop
pushf
fnstsw
movsl
aaa
sub
jbe
mov
mov
fwait
out
mov
mov
notl
adc
fisubrl
and
daa
pop
iret
mov
sbb
test
jne
popa
mov
test
jle
pop
push
mov
add
or
jno
dec
mov
lods
dec
xchg
or
jne
aam
out
sti
inc
insl
cmp
out
xchg
ja
xchg
leave
popf
je
sub
das
rclb
push
stc
cmp
arpl
test
incl
pop
push
bound
stc
cmpsb
inc
rclb
int
stc
lahf
clc
sub
adc
and
pop
mov
inc
bound
jg
test
mov
inc
dec
inc
pop
and
adc
cmpb
jae
cwtl
ja
pushf
inc
nop
int3
fists
mov
addl
lea
jne
sarb
sbb
xor
lods
inc
aam
jo
fnstcw
xor
mov
nop
cmp
or
inc
orl
dec
push
push
jae
int3
mov
lcall
xor
jae
push
sub
shll
lods
pop
ficoms
xor
cld
and
mov
xor
andl
out
les
jnp
add
mov
ret
add
jns
xchg
xchg
movsl
sti
js
gs
arpl
fmul
sbb
fs
xor
add
popf
fcmove
xor
cmp
pop
xchg
push
lcall
int
and
aas
cmpsl
js
movsb
fcos
sub
jmp
push
in
mov
jecxz
push
cli
rclb
push
aas
fidivrl
out
out
sbb
sub
jno
pcmpeqd
mov
in
call
cmpsb
aad
mov
xchg
cmp
cltd
jmp
stc
inc
sbb
mov
cld
sarb
push
adc
testb
jle
push
mov
adc
aad
ret
call
adc
cld
and
hlt
xchg
push
je
push
jge
sti
sub
mov
xchg
cmp
add
jmp
das
repnz
mov
sub
sub
xchg
outsl
aam
rolb
adc
jmp
idivb
xchg
or
or
sub
push
loope
mov
loop
ret
shld
inc
mov
push
out
mov
inc
and
inc
xchg
jno
fidivrl
mov
xchg
push
xchg
mov
fldt
ficomps
or
popa
lea
push
pop
pushf
mov
in
push
pop
andl
jbe
mov
stos
mov
es
insl
std
repnz
shll
ljmp
mov
leave
outsl
mov
loope
add
in
jns
test
push
mov
dec
jecxz
mov
inc
add
xor
daa
xor
int3
jecxz
mov
or
add
or
ror
out
pop
pop
jg
js
movsb
mov
lods
pusha
jecxz
insl
imul
or
sbb
add
xchg
add
scas
out
cmpsb
sahf
out
cli
sbb
js
jle
add
int
mov
mov
push
out
in
ja
clc
add
sbb
xchg
inc
push
lret
xor
cmp
ljmp
pop
pop
repnz
adc
push
outsl
xlat
mov
push
enter
fistpl
addb
mov
inc
xor
test
push
scas
aam
push
popa
cmpsl
adc
mov
sub
adc
pop
mov
sahf
lods
insl
pop
mov
icebp
or
add
mov
jmp
jne
dec
loop
xchg
shlb
push
scas
jno
push
insl
scas
inc
push
ljmpw
sub
jbe
dec
sbb
jge
push
fimull
jns
clc
stc
imull
lret
shll
lahf
repz
xor
scas
or
mov
jns
cmp
pusha
dec
mov
icebp
mov
out
inc
les
push
hlt
xchg
cmp
xchg
mov
in
ret
psubsw
stos
test
mov
pusha
popf
enter
mov
arpl
std
push
andb
sbb
sbb
fldt
xchg
fscale
and
jp
xlat
xchg
js
in
push
adc
pop
aad
fdivl
mov
pop
cmp
fdiv
inc
cmp
icebp
mov
inc
mov
fsubrl
out
call
fildll
sub
imul
lock
hlt
jg
dec
xor
dec
aad
lds
daa
jl
inc
repnz
sub
pop
mov
jge
js
or
mov
lret
add
test
mov
jl
mov
pop
out
and
iret
cltd
test
dec
mov
inc
loopne
mov
mov
adc
mov
imul
sub
mov
aad
pop
sbb
insb
push
out
jg
fs
xchg
lcall
cwtl
mov
dec
insl
fidivl
push
mov
jmp
lret
test
lret
add
mov
dec
push
and
aas
cmpsb
cmp
and
daa
jbe
sbb
mov
sub
jne
cmpsb
stos
push
cmp
xchg
inc
std
shlb
mov
pop
and
mov
mov
mov
in
jnp
adc
pop
sbbb
call
sbb
or
test
subb
ds
fs
cmp
punpckhwd
xchg
mov
in
or
adc
scas
mov
sub
xchg
push
sub
jb
pusha
popa
push
pop
mov
jae
adc
sub
test
and
pop
cld
ret
cmpsl
jns
jle
mov
xchg
scas
cmp
shll
add
or
add
mov
push
sub
xchg
mov
ljmp
mov
jecxz
xchg
outsb
fsin
ds
push
xlat
insb
pusha
loope
add
jbe
mov
adc
inc
jp
inc
sbb
mov
in
mov
cmp
cwtl
dec
sub
js
inc
data16
loopne
push
push
fists
adc
mov
xchg
sbb
jl
mov
xchg
jge
jbe
mov
daa
and
jmp
aaa
add
out
and
jmp
andb
incb
xchg
sarb
mov
int
stos
stos
das
add
in
dec
cli
pop
pusha
or
cli
jecxz
mov
daa
xchg
push
dec
jg
adc
push
aaa
lods
cmp
pop
movsl
mov
lods
dec
movsl
lahf
lods
inc
and
in
cmp
lret
mov
jge
cltd
addl
mov
jne
or
in
stos
pop
cmpsb
fistps
dec
or
pop
mov
sarb
stos
push
xchg
ret
sti
sbb
mov
dec
fdivl
cmpsl
out
xchg
pop
and
fcoml
outsb
adc
xor
and
inc
xchg
sbbl
out
imul
int3
mov
es
xor
inc
rcrb
inc
inc
xchg
jne
inc
mov
cmp
cld
roll
roll
push
fucomi
out
shl
xchg
pop
pop
stos
inc
pop
sbb
pop
sbb
add
cld
sub
js
out
add
cmp
xchg
xlat
popa
fwait
pop
sub
mov
shr
xchg
fs
pop
or
adc
lret
and
adcl
cmc
call
xchg
addr16
dec
dec
imul
rcrb
mov
cmp
ljmp
add
pop
jecxz
fsub
adc
das
shrl
sbb
or
xchg
out
rol
adc
and
pop
lret
insb
sti
sub
xchg
push
imul
mov
or
mov
xchg
and
std
iret
adc
jae
push
xchg
repz
mov
add
or
psrlw
dec
lret
mov
sub
add
lret
sub
sbb
xchg
xchg
fdivr
mov
movsb
sub
sahf
sub
stos
cmc
lret
fcmovbe
test
sbb
jb
cmpsb
stos
andl
in
mov
cmc
xor
mov
data16
das
sub
sub
cmpsl
xchg
arpl
ds
cmpsl
icebp
call
lcall
int3
rol
bound
mov
push
jge
mov
push
fcmovu
push
cld
push
or
or
cltd
mov
rep
push
jb
cmp
aam
mov
inc
cli
sahf
add
jmp
xchg
inc
inc
xchg
aaa
jne
jnp
mov
inc
add
mov
out
push
fadd
cmp
test
push
rorb
scas
pop
mov
dec
xchg
pop
push
test
mov
mov
int3
cltd
popa
popa
sti
aaa
hlt
addr16
pop
sub
mov
inc
sbb
pop
mov
es
adc
inc
or
xchg
cmp
into
fdiv
jbe
push
sub
xchg
jbe
mov
mov
inc
faddl
sub
data16
outsl
mov
inc
pop
cmpsl
mov
or
mov
fadd
aas
ljmp
popa
xor
pop
jo
cld
aad
scas
cmp
mov
aad
fdivp
dec
dec
cs
imul
xchg
fs
xor
shr
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
std
or
fwait
push
xchg
jno
orl
jmp
mov
xlat
push
lcall
insb
sub
mov
mov
cwtl
out
pop
rcr
adcl
fildll
stos
int3
dec
out
push
mov
sahf
arpl
push
loop
loop
mov
sbb
mov
sahf
mov
aaa
fadd
sub
das
gs
insb
cs
dec
mov
sub
addr16
pop
pushf
or
xchg
fnsave
cmp
sti
dec
add
cmp
pop
dec
div
test
push
nop
aad
push
sub
cmc
shl
push
into
and
cmp
cs
push
or
ljmp
ss
cmc
inc
mov
dec
inc
leave
cmp
sbb
lret
sbb
cli
and
add
mov
lods
vmovdqu
sub
mov
push
stc
jmp
add
outsl
mov
jae
jle
add
bound
push
insb
mov
pop
xchg
imul
test
movsl
popf
pop
mov
add
xor
ds
pop
push
loope
mov
ljmp
add
sbb
loope
outsb
mov
sahf
loope
cmp
xchg
cld
xor
push
stc
jle
push
ljmp
pushf
xor
je
xchg
fistpll
aam
xor
fstpl
fisubrl
loope
jns
xchg
sbb
xchg
mov
mov
popa
repnz
scas
xor
scas
jmp
xor
push
mov
adc
lds
mov
mov
sti
jb
out
or
ret
mov
push
add
cwtl
sbbl
int
outsb
pop
jne
push
mov
ret
popf
xor
add
xchg
cwtl
ret
popf
jbe
out
push
rol
ds
mov
int3
mov
repnz
ja
mov
out
cmp
and
adc
clc
sbbl
mov
stc
push
mov
es
add
rcr
loop
sbb
cmp
fmuls
add
gs
imul
and
mov
xchg
cli
push
fidivrl
dec
ret
pop
aad
dec
xchg
popa
dec
sti
xor
jl
mov
pop
jecxz
subb
jns
jle
push
sarl
ss
stos
or
cmpl
ljmp
sub
ja
mov
in
movsb
nop
add
shrb
fwait
sbb
in
and
shll
jo
cmc
inc
stos
icebp
popa
adc
out
movsb
push
dec
ret
jmp
push
cmp
push
mov
outsl
jbe
out
pop
or
addl
mov
gs
js
sub
push
push
pusha
or
push
push
sbb
mov
arpl
pop
inc
push
gs
jle
movsl
adc
add
mov
inc
or
cwtl
in
ds
rolb
pop
dec
inc
sbb
dec
pop
xchg
mov
stos
mov
repnz
int
repnz
nop
lds
inc
mov
out
pop
add
sahf
leave
xchg
jbe
jno
pop
std
mov
jge
xchg
lahf
inc
add
adc
pop
outsl
rclb
xor
rcrb
shl
stc
outsl
loope
imul
push
fmuls
sbb
pusha
out
pushf
sub
pop
scas
mov
mov
arpl
inc
cmp
pop
mov
scas
adc
cwtl
ficoms
test
fcompl
pop
push
xchg
cmp
test
stos
push
and
mov
inc
sbb
mov
mov
loopne
dec
jb
aaa
aas
inc
movsl
push
inc
loop
mov
xor
mov
jg
xchg
inc
inc
add
cmp
inc
aaa
and
add
insb
ja
jb
mov
dec
jbe
lahf
and
mov
fucomp
gs
pushf
sahf
push
jne
repz
js
adc
jmp
add
mov
lret
aaa
fs
push
adc
add
pop
insb
jecxz
sti
insl
ret
sbb
mov
sbb
push
roll
ret
xor
pusha
push
pop
stos
cli
stos
and
sahf
cmc
lods
xlat
inc
sbb
faddp
xor
aaa
sbb
dec
xchg
int
cmp
les
fisubs
sahf
push
cs
ljmp
loope
xchg
imul
pop
pop
jg
cmp
xchg
xor
lods
or
xchg
sbb
dec
repz
pushf
icebp
jnp
into
dec
cld
popa
jecxz
adc
je
daa
andb
xchg
xchg
jle
jnp
ret
pop
rclb
rcrl
xor
push
push
roll
adcl
add
inc
or
mov
mov
mov
xlat
cli
roll
pop
cmpsl
mov
or
lret
mov
or
dec
ss
repnz
repz
mov
out
movsb
ret
pop
cmp
ds
mov
test
and
fisttpl
xor
or
imul
dec
sbb
std
nop
mov
lods
popa
cmp
fdivl
xchg
ret
into
push
sbbl
mov
enter
mov
sbb
sbb
jmp
and
pop
adc
cmpsb
push
xor
mov
std
add
rcrl
fmul
icebp
cltd
sub
lds
mov
mov
int
add
mov
adc
mov
mov
iret
or
mov
loop
push
and
aam
adc
in
dec
xchg
sarb
sarl
cs
inc
icebp
ja
mov
imul
lret
pop
jg
jp
inc
iret
inc
arpl
add
sub
or
int3
adc
jne
insb
cmp
fcmovbe
dec
jno
jae
pop
aam
xchg
sub
mov
xchg
lcall
push
mov
idivb
enter
fwait
sbb
pop
mulb
pop
mov
push
mov
fwait
add
fiaddl
bound
pop
add
xchg
adc
rcl
mov
dec
pop
dec
test
dec
xor
pushf
aam
aam
sub
outsb
cmc
sbb
lock
pop
push
mov
or
pop
sbb
outsb
loopne
jne
push
testb
faddl
mov
test
int3
jnp
adc
adc
stos
ja
inc
stos
mov
mov
out
out
pusha
mov
rcrb
testl
adc
fldcw
push
out
mov
mov
adc
pop
sbb
lea
xchg
push
setbe
sbb
cmpsb
mov
xchg
gs
or
push
addl
lock
cmp
pop
shlb
sub
mov
sbb
cmpsl
jb
jne
rorb
mov
lret
jle
inc
mov
in
add
mov
stos
mov
lcall
out
dec
das
jnp
or
push
inc
lcall
mov
cmp
and
das
out
imul
sbb
add
push
mov
add
popl
mov
adc
and
repz
mov
dec
test
jmp
scas
mov
pop
mov
in
gs
or
xchg
xor
mov
mov
jmp
push
adcl
insl
loopne
stos
out
cmp
jo
jnp
fwait
push
mov
and
mov
aas
shl
mov
stos
insb
mov
mov
sbb
xchg
push
xchg
sbb
dec
and
js
inc
xor
push
into
push
mov
inc
adc
jmp
shlb
mov
push
lret
leave
mov
lods
pop
push
cmc
aas
pusha
jge
and
fisubs
sbb
imul
sbb
mov
push
inc
enter
cmpsl
cmp
jns,pt
loop
and
sbb
test
jg
xor
repnz
int3
adc
cmpsl
or
inc
lret
rclw
mov
movb
int3
mov
icebp
int3
and
push
xor
and
xchg
aaa
inc
push
out
test
xchg
out
pop
arpl
in
outsl
cmc
shlb
imul
pop
add
cmp
cmp
jge
cwtl
fisubl
subl
mov
inc
cmp
mov
mov
cld
cmp
lods
add
and
and
jecxz
test
sahf
push
jl
push
pop
xchg
lret
movsl
jns
or
leave
jg
test
adc
movsb
pop
repnz
mov
frstor
imul
push
in
out
cmp
call
cmp
xchg
xor
mov
dec
insb
add
mov
icebp
xchg
scas
add
add
mov
xor
jo
das
adc
cmp
jne
jns
xchg
ja
arpl
lods
jp
mov
jns
push
push
bound
dec
sbbl
not
xchg
in
xchg
repz
shrl
lea
in
call
inc
mov
or
adcl
js
fadds
xor
adc
popa
push
sub
test
sbb
and
bound
mov
cmp
imul
daa
cld
sbbl
emms
add
push
into
sbb
push
not
xchg
xchg
push
addr16
jp
in
fisubrl
push
sahf
fisttps
sub
lods
sub
pop
jbe
jl
or
mov
mov
and
lods
loop
mov
or
test
mov
fidivrl
mov
sbb
pop
fldt
mov
pop
mov
mov
ret
mov
xor
arpl
inc
sub
aas
sub
sub
dec
cmc
add
and
and
xchg
xchg
jo
push
add
movsl
mov
push
mov
out
ds
in
mov
lret
jg
lahf
stc
rclb
or
mov
jg
pop
xor
xchg
imul
mov
or
and
and
into
shlb
cmp
insb
stc
fdivrs
pop
std
gs
mov
push
jne
aaa
add
ja
jmp
or
fadds
loope
sub
sarl
shlb
dec
incb
or
cli
add
add
scas
out
into
cmp
addb
push
setno
pop
movsb
xchg
int3
repnz
push
les
nop
repnz
mov
lcall
ss
imul
lds
add
mov
or
inc
pop
retw
insb
jecxz
arpl
add
xor
adc
ret
aas
cwtl
mov
loope
mov
imul
nop
sbb
jle
adcl
lock
pop
add
mov
dec
rcrl
pop
inc
stos
or
popf
pop
mov
jecxz
cmpl
cmp
xchg
or
xchg
in
data16
inc
incl
in
xchg
out
jae
les
hlt
push
sti
sub
popa
repz
lcall
fcoms
loop
stos
jl
dec
scas
cmp
aaa
jge
lret
je
mov
daa
fidivrl
enter
jp
bswap
mov
sub
aam
push
bound
jae
mov
mov
rorl
popf
push
shlb
dec
cltd
cmpsl
cmpsb
testb
cmp
xor
jge
sbb
lcall
rcr
dec
dec
insb
faddp
cmp
into
lods
push
out
xor
mov
push
lret
pop
aas
rcrb
sbb
inc
xchg
sar
push
adc
ja
add
cmc
fucomp
lcall
mov
and
scas
and
cmp
movb
fwait
or
adc
mov
out
movsl
pop
and
insl
mov
xor
mov
jle
imul
pop
addr16
push
or
subl
popa
std
add
lret
ret
into
insl
cmpsl
cs
ret
pop
ljmp
adc
inc
push
js
add
mov
xlat
cwtl
repnz
movsb
jmp
call
clc
and
decl
pop
dec
cmc
cmp
dec
cwtl
pop
and
repnz
les
movb
dec
enter
inc
mov
fdiv
cmpsl
sub
jnp
jae
bound
push
fbld
insb
xchg
repz
dec
add
mov
xor
stos
daa
arpl
std
jl
test
xlat
loopne
mov
add
xchg
mov
sub
aas
notb
mov
inc
aad
repz
es
lcall
mov
cmp
subb
lea
sbb
int
and
sbb
test
jo
mov
rcll
cltd
nop
sti
int
ss
shrl
repz
inc
pop
shr
lret
and
pop
dec
inc
and
xchg
test
push
sub
pop
lahf
xchg
ss
mov
lods
sbb
adc
or
dec
cwtl
inc
xor
push
pop
or
mov
pop
push
popa
mov
fisttpll
sub
outsl
or
mov
in
xorb
enter
adc
mov
imul
adc
lds
movsb
pop
stos
mov
addr16
pop
xchg
daa
movsb
mov
fidivrs
and
xchg
mov
lret
add
jp
sbb
cmpsl
sbb
inc
pop
cmc
nop
in
in
cmp
leave
inc
dec
cmp
daa
leave
or
addr16
arpl
scas
mov
xchg
mov
and
inc
adc
pop
je
testl
in
insl
cmp
ds
ret
aas
clc
mov
mov
mov
sti
fsubs
lret
mov
cmp
pop
cltd
iret
ja
adc
pop
cmp
xor
loop
adc
movsl
imul
icebp
push
jne
xorl
dec
xor
dec
xchg
adc
jle
lea
jmp
jle
mov
popf
cwtl
xor
sbb
dec
hlt
push
and
movsb
cmp
dec
cmp
jp
xchg
int3
pop
mov
popf
add
rclb
sub
dec
out
inc
xchg
jle
addr16
das
xchg
dec
sbb
dec
cmp
mov
ja
fldenv
insb
sbb
faddl
mov
dec
mov
mov
mov
jmp
sbb
sbb
mov
ss
frstor
bound
scas
sarl
fdiv
dec
int3
jae
cmpsl
push
jns
stos
mov
mov
cld
push
bnd
xchg
es
pop
mov
cmp
dec
lcall
mov
psllq
mov
sbb
dec
or
mov
push
mov
cmp
mov
jle
cwtl
pop
xor
dec
pop
pop
les
mov
pop
xchg
mov
adc
cwtl
jecxz
pop
mov
jno
inc
pop
lea
sub
lahf
add
aas
mov
iret
movsl
mov
adc
mov
adc
outsb
test
shr
inc
push
or
cltd
repz
and
shll
xor
lcall
cltd
pop
adc
ja
punpckldq
dec
in
faddl
into
test
xor
movsl
sub
push
inc
or
mov
movsl
mov
mov
faddl
inc
push
test
cmp
mov
mov
into
add
mov
decl
sti
push
xor
filds
xor
mov
loopne
or
mov
dec
stc
jb
imul
out
jge
or
push
popa
fxch
lahf
mov
lret
sbb
inc
inc
into
jno
je
mov
push
jg
movsl
mov
pop
pop
fists
or
sbb
test
emms
push
push
jmp
jb
jne
iret
adc
jg
fists
mov
cmp
js
push
scas
xchg
movb
mov
add
popa
rcll
adc
sarb
mov
mov
mov
faddp
dec
xor
mov
xchg
mov
jno
data16
ds
push
and
in
mov
cmp
push
push
xor
insb
stc
adc
dec
mov
movsl
enter
outsl
mov
xchg
lret
cmpsl
mov
dec
dec
push
imul
mov
test
xor
nop
shll
rorb
lea
lret
and
push
xor
add
fwait
cs
data16
les
into
fs
sbb
pop
jp
mov
dec
xchg
sbb
in
scas
jp
sub
imul
jl
mov
shll
dec
mov
call
cld
lcall
jg
pop
add
les
leave
and
or
pop
xchg
ljmp
or
mov
das
jge
cmpsl
or
mov
inc
push
test
addb
jb
popa
orb
bound
leave
inc
push
lret
and
aad
stos
ret
jp
and
imul
scas
dec
and
sub
adc
xchg
xlat
or
fs
jno
push
ss
cmp
mov
aad
enter
push
sub
out
ja
pop
loope
aas
mov
cmpsb
in
pop
pop
and
test
dec
push
lods
mov
fidivs
gs
ficompl
mov
loop
rolb
mov
rorl
insb
mov
mov
cmp
jmp
xlat
add
scas
xchg
mov
cmp
or
ss
and
xor
jg
adc
jns
adc
in
dec
test
bound
leave
das
repnz
lahf
imul
call
dec
stos
jae
mov
out
sahf
sbb
push
and
sub
mov
lcall
movsl
push
pop
shll
movl
or
popaw
cmpsb
adc
xchg
lods
jg
jne
or
push
cmp
mov
test
daa
sbbl
inc
lods
inc
cmp
call
pop
fstpt
stc
enter
pcmpeqw
and
mov
and
test
cmp
sbb
arpl
repz
sbb
xchg
cmpsb
jae
jno
je
ret
orl
xchg
push
inc
scas
in
mov
pop
xchg
stos
stos
data16
xor
dec
xor
sbb
imul
call
xor
jge
repnz
dec
push
loopne
ljmp
xchg
imul
push
xchg
xor
sub
fidivs
pusha
sub
lret
mov
hlt
mov
fstpt
icebp
mov
ds
xlat
xchg
sbb
or
fsubs
ds
daa
sub
aaa
cmp
aas
dec
leave
shlb
mov
cwtl
inc
mov
ret
loopne
ss
cmp
roll
push
xchg
cmp
mov
rolb
mov
iret
pop
movsb
insb
movsl
int3
push
lds
xchg
adcl
int
inc
fadd
adc
ret
outsl
rolb
out
pop
ret
mov
xor
xchg
adc
inc
movsb
fistl
cmpsb
sbb
inc
je
lds
into
inc
pop
pop
rcrl
xor
dec
fsubp
xlat
sbb
pop
gs
jle
pop
xlat
les
push
jecxz
xchg
push
or
addr16
rclb
inc
in
pop
sub
mov
push
mov
push
std
or
inc
adc
ljmp
mov
pop
jnp
std
ffreep
mov
fsubrp
jnp
or
xor
popf
xorb
adc
and
fcomps
pop
dec
xchg
xchg
mov
scas
cwtl
js
daa
jp
lret
pusha
mov
aaa
cmpsl
stos
aas
jb
mov
scas
aam
jbe
add
incb
scas
fbld
loopne
push
cmp
popa
sbb
jp
inc
test
cmp
in
inc
xchg
cmc
aad
stos
shl
sub
mov
dec
sub
pop
cs
fstl
pop
int3
into
lds
mov
and
faddl
xchg
dec
in
sub
mov
insb
or
cmp
cmp
data16
add
call
xacquire
sti
cmp
push
test
mov
into
lret
jbe
xor
fsubrl
and
adc
roll
add
mov
fisttpl
arpl
and
jmp
mov
imul
out
cmc
and
push
pop
test
pop
les
icebp
cld
outsl
and
scas
jge
pop
mov
sub
out
lea
add
bound
or
pop
xchg
add
mov
pop
mov
xchg
add
sbb
int
xchg
xchg
and
xchg
loope
jp
xor
xlat
lahf
inc
mov
stc
push
dec
lret
inc
fbstp
xchg
jle,pt
into
inc
iret
icebp
adc
and
push
sti
inc
loopne
cmp
das
dec
fidivrl
int3
stc
ss
movsl
cmc
int
mov
addr16
lret
cli
pushf
mov
xchg
rcl
rcrl
aaa
mov
insl
fldcw
xchg
fmull
js
in
mov
and
jle
push
ja
addr16
sbb
divb
dec
and
and
mov
pop
xchg
fldenv
mov
imul
orl
vpaddusw
xor
mov
lahf
out
out
lock
rorl
outsb
cs
or
lret
incb
mov
cmp
jl
jae
loope
arpl
rorb
sbb
jb
inc
lods
push
jae
jne
sub
outsl
pop
sbbb
adc
mov
call
addl
pop
call
dec
mov
xor
inc
xor
scas
idivb
shrl
and
add
int3
push
sbb
dec
loopne
push
push
es
dec
xor
mov
sub
fsts
fs
insb
shrl
cmp
dec
loop
enter
pop
mov
xchg
imul
dec
lods
mov
icebp
sub
adc
mov
jecxz
inc
jbe
push
adc
and
iret
fsubs
loope
pop
dec
and
adc
push
add
sbb
mov
inc
pop
sbb
and
pusha
jecxz
lock
inc
sbb
and
popa
adcb
pop
lret
int
mov
xchg
data16
push
mov
inc
pop
loope
stos
jns
shlb
sbb
push
dec
outsb
or
add
data16
fnsave
movsl
cmpsb
in
fimull
mov
inc
dec
insl
test
push
adc
out
pop
inc
cltd
xchg
and
push
jmp
mov
xor
pop
dec
or
cmp
sub
cmp
rorl
xchg
jmp
test
out
jb
or
pop
adc
out
pop
and
and
xchg
sbb
lods
mov
aam
lcall
mov
adc
add
jmp
cmp
xchg
in
shlb
outsb
lods
push
add
sbb
dec
scas
into
sahf
hlt
xchg
mov
das
stos
test
fnsave
aad
fildll
decl
shl
testb
test
movsb
mov
ret
sbb
loope
shll
scas
je
dec
int3
mov
rcll
add
xor
inc
in
aas
or
loopne
pushf
outsb
out
sbb
std
mov
push
mov
fdivrl
cmp
aas
xchg
cs
daa
xchg
cld
aas
sar
jbe
imul
std
fmull
xor
push
jns
movsb
pop
mov
sar
inc
adc
pop
in
and
repz
xlat
jne
dec
mov
cmp
out
aam
sub
aaa
jnp
test
adc
push
sbb
sahf
add
xchg
xorl
setle
mov
add
mov
add
rcl
jne
inc
mov
fbstp
adc
mov
add
sti
dec
or
aad
popf
sub
mov
xor
cmc
icebp
cmp
mov
fcmovnu
insl
scas
out
cli
mov
pop
daa
inc
add
sbb
add
inc
pop
fsubrl
stos
jno
jno
aaa
fdiv
lock
and
sbb
lret
xchg
icebp
outsb
ljmp
sub
fs
aam
pop
fistpl
push
insl
loopne
cmp
xor
push
sub
sub
jp
mov
mov
outsb
xchg
and
scas
xor
pop
dec
data16
adc
les
xor
push
mov
in
or
popa
mov
mov
int
or
popa
popf
dec
or
out
leave
stc
sub
mov
aaa
outsl
sbb
dec
mov
jg
ret
out
lret
push
cmpsl
xchg
cs
mov
arpl
xchg
mov
idivl
inc
ror
inc
cmp
clc
cmpsb
ss
sub
movsb
dec
push
ret
sar
xor
jbe
xlat
sub
inc
xchg
stc
mov
push
cmp
aaa
aas
gs
adc
shlb
out
xchg
ljmp
adc
jnp
xor
add
or
add
adc
push
pop
push
shrd
repnz
je
jno
stc
mov
and
mov
mov
pop
xacquire
in
lret
mov
mov
dec
adc
ret
int
aad
movsl
jnp
push
repz
xchg
lahf
fld
cli
notl
jl
mov
xor
mov
push
dec
mov
xchg
xlat
push
scas
inc
lock
insb
stos
movsl
xor
jnp
loope
mov
test
leave
ret
stos
mov
adc
lds
or
insb
outsl
aaa
test
dec
sbb
fs
add
rcr
lahf
out
adc
mov
fidivs
shrb
sbb
lcall
mov
cmp
and
cmp
cld
add
sbb
sub
pop
std
or
lods
insl
cwtl
icebp
mov
lods
add
cmp
movsl
adc
jmp
in
fnstcw
cmc
adc
xor
hlt
cmp
lcall
push
scas
std
outsb
out
mov
call
iret
mov
loope
mov
dec
in
sbb
test
aad
out
dec
pop
fs
add
lods
inc
adc
jmp
cmp
push
sbb
call
imul
imul
daa
in
inc
mov
aas
mov
cmp
push
jb
xor
sub
insb
test
dec
adc
cmovl
sbb
mov
pop
pop
dec
mov
ja
mov
mov
push
mov
sub
test
int
aad
fistl
sub
xorl
or
outsb
je
adc
xchg
movsl
fcoms
mov
ja
aam
orb
enter
stc
dec
subb
jnp
je
mov
xchg
fidivrs
dec
out
and
sub
cmp
jns
lods
sti
sbb
iret
out
movsb
into
pop
repz
icebp
push
dec
mov
mov
sarl
adc
xorb
test
sub
das
imul
push
mov
or
leave
inc
insl
dec
jae
sub
das
push
push
and
or
fs
in
out
dec
adc
sahf
xchg
mov
sub
lds
or
push
and
ja
loope
add
imul
inc
icebp
xchg
jae
or
fistpll
mov
and
insb
daa
dec
popf
out
sub
sti
std
stc
pop
hlt
daa
mov
cmpl
sub
imul
lret
inc
repz
mov
push
adc
push
or
lret
lret
lea
mov
test
dec
nop
add
add
roll
scas
adc
aam
test
incl
sub
fdivl
inc
adc
mov
add
fs
xor
ljmp
sbb
push
int
jecxz
inc
cmp
mulb
sub
xchg
cmpl
fs
out
dec
stos
mov
adc
inc
aaa
mov
xchg
repz
fwait
sbb
jb
and
cmp
xor
push
adc
pop
incb
cmpsl
movsb
das
dec
rcl
or
inc
call
insl
adc
mov
sbb
xchg
jo
jp
cmp
xchg
movb
jge
test
bound
xor
call
push
xchg
sub
sbbl
cwtl
mov
lods
scas
test
fs
jno
sub
mov
das
dec
clc
push
bound
lret
mov
cmp
dec
push
into
movsl
pusha
hlt
sbb
mov
push
rolb
push
pop
mov
cli
jge
in
mov
push
inc
pop
gs
das
pop
adc
call
sbb
inc
insl
jae
mov
std
scas
test
jp
fidivl
xlat
xorl
push
ret
xchg
pop
repnz
jbe
push
loopne
mov
mov
mov
stos
add
shlb
pop
push
add
and
leave
mov
cmp
push
xlat
pop
cltd
scas
lret
inc
loope
dec
xchg
scas
js
sarl
bound
mov
addr16
ss
rorl
cld
std
arpl
xchg
popa
aas
pushl
xchg
aas
sbb
xor
and
hlt
inc
or
push
or
adc
inc
ja
pop
orl
dec
add
sti
insl
sub
inc
push
push
jne
daa
ds
push
jns
mov
adc
jle
icebp
daa
rolb
cmp
adc
das
stos
sub
arpl
push
not
inc
push
gs
in
pop
enter
rclb
hlt
add
sbb
xorb
ja
dec
sub
push
push
cltd
loope
cltd
or
testb
mov
test
addr16
cs
push
push
pop
fmull
imul
cmpsb
xchg
fcompl
into
pop
jb
push
xchg
jp
cmp
shll
push
cld
mov
jae
xor
fnstenv
or
loopne
jl
int3
mov
repnz
insb
pusha
add
aad
divb
mov
cmc
mov
mov
cmp
iret
cltd
xchg
mov
mov
push
int3
repz
in
push
scas
and
xor
test
mov
fs
xlat
sub
push
mov
cmp
ret
cmp
add
dec
scas
add
mov
rcll
int3
fadds
jmp
movb
cmp
fistpl
and
orb
mov
or
mov
jo
daa
adc
ja
loopne
mov
mov
pop
mov
xor
adc
push
fcompl
ret
dec
fcomip
inc
sahf
movsb
test
or
push
cmp
pop
add
xchg
subb
cmp
ds
testl
je
addb
inc
std
and
sbb
jmp
xchg
out
cmp
arpl
ret
xor
repz
pop
pop
xchg
mov
jge
xor
fldl
jle
popf
cli
xchg
pop
and
xchg
pop
sub
adc
movsb
xor
ja
imul
aas
xlat
cmc
pop
gs
addr16
outsl
in
lds
jl
add
loop
cld
ljmp
adc
mov
sub
push
inc
in
mov
or
jmp
push
in
or
mov
add
mov
fiadds
pop
leave
adc
inc
mov
test
xor
jno
cs
xorl
out
cmpsb
pop
and
lds
cmp
pop
lret
shrl
xlat
jb
inc
sbb
in
dec
popa
or
insl
mov
mov
and
shr
xchg
xchg
xchg
ret
jg
ja
add
mov
or
xor
sub
outsb
add
cld
out
sbb
fldcw
mov
in
nop
mov
into
ljmp
std
adc
idivl
inc
jo
mov
inc
dec
in
dec
adc
js
jecxz
jmp
mov
loope
lcall
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
or
push
call
pop
jl
aas
or
sub
push
scas
nop
stos
in
aas
push
std
sub
loope
jno
dec
fiaddl
ror
jne
mov
sarb
cmp
cli
xchg
xchg
pop
mov
inc
add
dec
pop
push
xor
int
mov
push
add
mov
lret
data16
inc
cmp
dec
mov
or
enter
iret
mov
scas
imul
int
mov
jmp
out
push
or
push
xlat
mov
mov
sbb
test
repnz
out
or
cmp
dec
dec
jnp
lahf
push
ss
cmp
sbb
add
jmp
lret
add
pop
pop
sbb
das
cmp
popf
loopne
push
pop
push
stc
sbb
sub
or
cltd
push
mov
data16
push
insl
ret
call
test
mov
xor
fadds
mull
adc
jg
aaa
das
pop
test
push
push
lret
popf
mov
pop
dec
xchg
arpl
sub
imul
push
cmp
fisubrl
fnsave
lcall
xor
notl
shrl
inc
push
pop
xchg
nop
sub
xchg
mov
dec
in
sbb
out
ret
dec
jp
push
xor
aad
mov
push
in
dec
adc
or
add
mov
testl
leave
out
cmpsb
sbb
imul
jns
xor
jge
jmp
iret
add
mov
jle
mov
adc
cli
mov
inc
jecxz
and
xchg
inc
jg
pop
mov
or
scas
jb
push
loop
or
jl
cmpsb
outsl
enter
in
jmp
jae
adcb
mov
mov
insb
movsl
push
aaa
inc
shl
push
loopne
jle
scas
je
leave
xchg
cmp
pop
dec
sub
gs
mov
movsl
pop
movsb
sbb
mov
or
mov
ss
sbb
mov
sbb
int
lcall
in
jno
test
jbe
and
push
adc
jecxz
mov
mov
dec
loope
lahf
pop
hlt
pusha
xchg
inc
mov
inc
inc
adc
jno
push
push
call
pop
imul
mov
sbb
sldt
inc
movsb
scas
rcrl
sub
ljmp
aad
mov
fistl
jecxz
int3
jns
xchg
bound
movsl
cmp
adc
adc
add
jecxz
shlb
scas
or
adc
movsb
imul
repz
hlt
mov
sbb
stos
in
movsl
ds
push
adc
mov
sahf
and
leave
imul
mull
xchg
in
jmp
psadbw
sub
mov
std
adc
add
loope
insb
cmp
xchg
mov
aas
ja
jae
test
xor
icebp
adc
ljmp
and
jmp
inc
out
call
pop
hlt
xor
in
xorl
cmpsl
nop
xor
add
adc
sub
cli
std
inc
jnp
pop
jns
jnp
inc
js
xchg
enter
dec
mov
out
mov
in
xor
repz
xchg
aas
popf
sbb
and
lds
imul
inc
hlt
fiadds
and
add
jl,pn
cmp
sbb
rcrl
fldl
mov
stos
pop
out
lea
and
jmp
insl
push
das
outsl
mov
push
add
in
fmull
mov
fsts
push
mov
lods
pushf
jbe
lods
add
movsl
mov
daa
mov
stos
loope
popf
adc
sbbb
dec
sbb
enterw
jp
inc
rcll
insl
inc
imull
shll
push
cs
popa
fidivl
out
adc
sahf
sarl
lahf
fldt
mov
cmp
in
xchg
adc
inc
or
data16
fwait
aad
ret
adc
out
mov
and
test
xor
pop
aad
mov
jo
push
cmp
hlt
cmp
je
sbb
or
pop
iret
push
xor
jnp
add
in
dec
enter
mov
icebp
mov
mov
pushf
mov
imul
adc
or
test
insb
sub
imul
ret
push
ds
lea
adc
cmpb
test
cmp
mov
aas
aas
inc
in
push
or
fimuls
dec
mov
adc
and
xchg
lcall
lods
cmp
lcall
out
mov
mov
mov
push
cwtl
imul
iret
popf
ret
test
xchg
push
mov
inc
cmpl
sar
js
sub
sbb
fimuls
in
in
stc
icebp
xor
int3
xlat
push
xor
in
in
imull
adc
aad
mov
test
cltd
lret
mov
xchg
popf
lahf
sbb
ret
ds
addr16
cld
mov
pop
sarl
dec
les
call
adc
push
lea
arpl
sbb
imul
xchg
adcb
mov
ljmp
fidivl
leave
sbb
xchg
xlat
test
mov
cmp
jae
icebp
sub
shr
cli
jg
jo
aad
sbb
add
xor
mov
leave
dec
push
std
mov
or
les
jle
mov
xor
aad
dec
push
std
pop
dec
notb
es
testb
jae
iret
lahf
or
or
inc
mov
sti
or
dec
hlt
out
out
xchg
cltd
adc
add
xchg
clc
xor
fists
jle
inc
iret
inc
lahf
sub
xchg
fisubrl
adcl
jl
jecxz
cmp
fstps
mov
hlt
xor
cmp
hlt
fstps
adc
aaa
or
and
loope
push
idivl
call
lahf
loopne
or
dec
cmp
dec
shll
std
out
outsb
lods
or
nop
arpl
sbb
adc
push
jle
jno
push
cmp
push
and
mov
cmpsb
xor
in
std
push
inc
mov
data16
or
das
in
add
lret
out
sti
es
sbb
cmc
mov
lahf
test
mov
xlat
and
jp
idivl
push
insl
mov
sub
lcall
jp
pushf
mov
rol
xor
aam
mov
push
ret
pop
push
icebp
xor
scas
jb
in
pushf
add
jge
xchg
mov
in
xchg
arpl
ficoml
xchg
loop
aaa
cmp
xchg
cmp
and
push
outsb
icebp
cli
aad
hlt
push
mov
lret
pop
popf
xor
pop
jg
xorl
xchg
loope
loope
nop
fs
cmp
lcall
inc
jne
sbb
int3
data16
imul
les
push
pop
in
movsb
or
js
stos
ss
pop
xorb
subl
inc
rclb
sbb
push
out
cmp
xor
pop
fistpl
fldl
sub
sbb
pop
mov
add
mov
or
and
jbe
mov
pushf
and
fidivs
mov
fdivr
pop
ss
rorb
and
sbb
lret
mov
sbb
cmp
or
inc
cmp
rorl
push
fistps
out
lds
mov
iret
in
pop
mov
pop
popf
inc
arpl
xchg
inc
lods
sbb
sbb
ret
xor
push
ljmp
pop
and
jmp
loop
movsb
jns
jge
dec
pop
or
je
pop
call
icebp
hlt
ret
cmp
testb
adcl
lods
fmull
imul
mov
push
ret
hlt
movb
sbb
xor
xchg
scas
jno
jns
stc
pop
fs
pop
and
scas
mov
shr
xchg
mov
xchg
add
ficoml
insb
pop
jo
fs
xchg
ljmp
and
es
stc
rorb
push
xor
jmp
jae
mov
push
lods
scas
test
and
pop
mov
mov
fs
jo
fucomip
push
jp
pop
imul
stos
mov
dec
call
nop
jmp
cltd
pop
push
shrl
dec
mov
leave
push
outsl
aad
aam
idiv
inc
dec
fimuls
loop
clc
int
adc
adc
bound
pop
xchg
dec
stos
sub
jmp
xchg
loopne
xchg
jns
iret
cmpsb
adc
mov
xchg
loopne
mov
cmp
dec
ficoms
adc
inc
push
dec
push
test
mov
sbb
scas
aam
cld
jb
icebp
jne
enter
sub
inc
cmpl
push
stc
or
mov
out
int
sub
cltd
call
xchg
adc
jne
pop
mov
cmp
add
inc
push
adc
orb
cmovge
daa
ds
jecxz
push
add
imull
mov
nop
int3
sbb
cs
push
mov
stos
popa
subb
and
and
sub
dec
cmc
inc
mov
testb
out
ja
jne
int
popa
mov
pop
int
ds
rcrb
jmp
push
ds
cmp
das
xchg
fsubl
out
and
dec
adc
flds
push
scas
or
cmp
xlat
addr16
jo
mov
insl
push
mov
jne
ljmp
gs
push
pop
fmuls
xlat
dec
add
adc
stc
mov
pop
cmp
mov
xorl
mov
cmpsb
inc
push
add
push
loopne
inc
jne
arpl
daa
xor
dec
mov
js
inc
or
push
sub
cmp
test
push
out
pop
nop
imul
xchg
xchg
inc
xlat
dec
add
shrb
addr16
cwtl
das
pop
xchg
out
les
fbstp
pop
inc
dec
dec
in
push
cwtl
icebp
in
xchg
ljmp
mov
mov
cmp
pushf
ret
adc
and
fdiv
fdivs
test
adc
mov
rclb
sub
pop
mov
movsl
cmp
insb
ja
iret
xchg
gs
js
add
pop
aam
xchg
mov
test
out
into
loope
mov
inc
cmp
push
ret
jmp
enter
add
mov
leave
test
jmp
sbb
add
xchg
mov
clc
lock
in
push
xor
aad
nop
insb
orb
pop
pop
lcall
shrb
pop
mov
enter
sub
lods
sbb
sbb
mov
mov
jp
in
gs
cwtl
fildll
pop
or
and
cmc
sbb
test
mov
pop
mov
out
je
push
dec
sti
mov
andb
int3
inc
inc
syscall
and
repnz
add
and
push
push
cwtl
adc
icebp
subl
cmp
insb
pop
xchg
dec
jno
adc
test
or
movsl
fbstp
jmp
mov
inc
pop
mov
inc
sub
sti
mov
and
push
sbbl
xor
jns
inc
jecxz
dec
or
and
or
lcall
in
adc
les
cmp
inc
or
dec
in
add
cli
jae,pt
ja
sub
mov
call
ljmp
sbb
hlt
repz
cmp
in
mov
cmp
rcll
push
mov
icebp
and
mov
shll
mov
sbb
sub
hlt
test
mov
pop
mov
push
jbe
sub
ret
out
sahf
sub
cmc
mov
addr16
sbb
ja
adc
push
xor
test
enter
sub
sub
cwtl
ficomps
aad
lea
test
lods
js
jnp
repz
xchg
sub
sub
fwait
mov
ss
cmpb
lods
jae
adc
int
movsb
lea
sub
jmp
push
mov
add
xchg
bound
push
insb
mov
or
cmpsl
lret
adc
mov
insl
sub
mov
or
int
int3
or
jnp
mov
sbb
mov
push
sub
outsl
push
inc
adc
ficoms
and
ret
adc
jge
pop
fnsave
fldt
cli
xchg
int3
mov
test
add
outsb
sub
andb
lods
or
addr16
pop
out
mov
inc
jp
jp
filds
add
scas
into
push
test
in
mov
jno
fisubrl
shll
rorb
stos
imul
or
push
aad
stc
cmc
cmpsl
imul
ljmp
mov
cmp
pop
mov
out
sbb
dec
dec
test
mov
xchg
roll
ljmp
mov
notl
rorl
scas
jae
pop
lahf
jae
mov
mov
mov
mov
fiaddl
stc
jge
pop
outsb
mov
inc
jae
sbbb
fsubs
lods
push
and
nop
shrb
sbb
inc
pop
cmp
in
ja
jge
dec
jae
clc
pop
sbb
clc
jle
ret
push
cmp
jecxz
gs
inc
arpl
dec
xchg
jecxz
push
faddl
xor
aaa
hlt
pop
into
dec
gs
hlt
fisubrs
pop
repz
pop
or
sub
or
mov
test
sbb
dec
xchg
push
fisttps
dec
jbe
data16
call
ret
faddl
cmp
mov
int3
sbb
xchg
into
xchg
or
rcll
mov
cmc
fmul
bnd
inc
push
jmp
mov
es
inc
scas
in
push
std
or
mov
fistps
hlt
cmp
pushf
int
pusha
inc
aaa
add
pop
shlb
pop
xchg
add
repz
sbb
pop
sub
mov
rorl
or
shlb
or
push
mov
pusha
pop
pop
icebp
dec
imul
lahf
cli
push
xor
xchg
lret
xchg
jmp
pop
in
test
pop
xchg
repnz
stos
mov
les
xchg
jle
rcrl
push
sti
mov
or
jae
push
push
mov
int3
cmp
sub
ljmp
ficoml
or
inc
push
mov
or
xchg
adc
xor
cmp
test
sub
in
cmp
ret
in
popf
add
jmp
mov
pop
mov
jle
dec
dec
fwait
test
scas
daa
jo
inc
mov
js
gs
lea
or
sahf
pop
fdivl
lods
loopne
mov
fs
add
lods
movsb
mov
push
xor
mov
lds
add
cmp
push
scas
ja
add
or
xorb
cmpl
jbe
sbb
mov
mov
inc
mov
pop
adc
adc
jmp
push
dec
cmp
mov
push
mov
sub
into
xchg
stos
inc
adc
ljmp
out
gs
cs
or
cmpb
js
push
cltd
leave
and
fucomi
mov
insl
ret
rcl
inc
and
addr16
mov
adcl
jno
dec
add
ja
les
aad
cmc
loope
xor
push
sub
xor
js
icebp
pop
xchg
notb
pop
into
outsl
imul
cltd
lock
jmp
and
fsubrl
cli
ljmp
out
into
fimull
leave
xor
movsb
test
pop
movsl
leave
stos
ss
int
insl
xlat
ret
dec
mov
hlt
cli
pop
push
pop
clc
adc
xor
imul
mov
adc
fldt
in
aas
je
pop
and
xor
lcall
sbb
lods
jge
cs
mov
or
in
jo
lret
scas
jb
dec
les
xchg
mov
je
mov
in
jl
dec
fidivrs
add
xor
lods
in
and
jp
mov
test
dec
push
inc
jmp
mov
jmp
fstl
pop
xchg
sbb
mov
loop
shll
and
insb
pop
mov
popf
cli
mov
daa
lcall
pop
adc
dec
dec
inc
mov
xlat
pop
push
fisttps
mov
jne
mov
sbb
scas
rclb
out
insl
mov
jne
sub
dec
rcrl
popa
xlat
orl
sub
pop
inc
dec
mov
std
mov
or
xchg
mov
fwait
addr16
bound
mov
jmp
pop
inc
mov
lea
into
aaa
fcmovb
ja
sub
ss
push
loop
dec
daa
and
mov
lods
aas
test
fsubrs
sub
lret
std
or
xor
sbb
adc
and
test
mov
repnz
nop
or
mov
mov
sbb
mov
lret
outsb
fsubp
mov
das
add
scas
clc
xchg
jle
jl
xchg
scas
xor
dec
jbe
scas
and
inc
aad
or
decl
mov
cmpsl
mov
push
nop
mov
mov
xchg
dec
or
xchg
push
jo
inc
iret
repnz
ljmp
xor
and
pop
jae
jecxz
jmp
sbb
push
inc
daa
jnp
arpl
and
jmp
pop
fs
daa
jbe
and
sbb
add
or
int3
pop
fmuls
inc
adc
cmp
adc
aad
or
or
loop
add
inc
mov
scas
neg
xchg
push
arpl
cs
stos
ret
out
cld
inc
jp,pt
nop
or
xchg
jmp
sub
cli
int3
out
inc
int
or
jb
add
scas
cli
push
in
aaa
insl
addr16
aam
fs
cmpl
adc
sbb
push
lret
out
cmp
dec
push
cltd
movsl
xor
mov
mov
jnp
mov
add
sbb
jo
mov
mov
and
pop
test
add
outsb
push
and
jne
sbb
pusha
and
xchg
mov
lds
data16
daa
xor
cltd
sbb
mov
test
fisttpl
mov
xchg
loope
sub
scas
mov
rcl
inc
pusha
xchg
inc
aad
int3
testl
mov
stc
and
cmc
or
pop
mov
aaa
into
add
ss
int
in
lret
jle
stos
daa
pop
jbe
hlt
push
or
cmp
insb
clc
mov
xor
and
sbbb
int
cmp
addr16
add
mov
adc
test
cmpsl
sub
sbb
mov
dec
ret
sub
xchg
cmpsb
cmp
movsl
xorb
ljmp
push
or
jg
pop
lahf
add
jno
shll
lods
inc
outsl
adc
cwtl
roll
pop
pop
lret
es
mov
xorb
imul
cltd
push
mov
call
addr16
cmp
and
shlb
pushf
lods
add
aas
imull
scas
scas
sti
sbb
mov
cmovno
jg
mov
pushf
push
and
mov
and
push
xchg
outsb
pop
and
sbb
jb
and
mov
jno
sbb
or
sub
jae
inc
mov
mov
iret
mov
ret
jno
mov
out
jge
xchg
push
mov
incb
mov
push
dec
and
xor
sub
jle
dec
sub
das
pop
xchg
jp
ss
add
add
sub
xchg
into
jg
in
sbb
lahf
add
call
mov
pop
xchg
aad
mov
cmp
jl
jecxz
add
sbb
inc
mov
ret
int
gs
add
cmp
fs
mov
mov
decb
jle
or
mov
jge
out
push
fs
iret
dec
mov
jnp
movsl
lods
into
or
jnp
mov
cli
mov
sbb
sub
addb
sbbb
pop
not
loop
es
loopne
hlt
xor
scas
mov
adc
into
or
xchg
and
push
imul
lea
sub
jns
xchg
sahf
xor
mov
push
push
rcl
sbb
aaa
in
xor
in
mov
rolb
imul
lods
xor
popa
scas
pop
sarb
test
sbb
inc
or
mov
jns
in
sbb
mov
shrl
push
xchg
sbb
lds
pop
xlat
xor
cmp
dec
sub
ja
pop
pop
mov
pop
push
xchg
jmp
dec
mov
btcl
divl
xor
inc
jl
out
in
movsb
mov
cmp
mov
movsl
and
adc
js
and
cwtl
dec
fcoml
fcom
ss
cli
cmp
xor
fsubl
and
das
fisttpl
xchg
je
add
push
out
sahf
fcmovne
cmp
aas
xor
pusha
sti
test
sub
ljmp
fstl
add
popa
call
jg
loopne
dec
int
pop
and
sti
add
lahf
int3
mov
movsl
push
push
dec
xlat
pop
rolb
cwtl
ja
push
push
cmpsb
or
jbe
sarl
cmpsl
push
sarl
inc
push
push
lahf
std
dec
adc
je
push
push
add
push
sbb
xchg
aaa
lods
pushf
hlt
xor
adc
and
into
xor
test
out
in
ret
mulb
imul
shl
aam
lods
movsb
jne
adc
mov
add
sub
aas
es
scas
adcb
mov
mov
xor
fdivrs
repz
mov
shrl
inc
inc
mov
call
mov
mov
pop
in
push
pop
or
sub
stos
xlat
mov
int3
xor
jb
xchg
cli
aam
int
out
mov
out
xor
call
or
dec
push
daa
mov
mov
lahf
test
mov
out
or
cs
loopne
subl
push
jbe
in
pop
loope
inc
push
adc
pop
dec
or
cld
cld
repnz
cld
sub
insb
cmpsl
push
sti
cmp
daa
sbb
in
aad
dec
das
add
movsb
push
sahf
sbb
push
push
pusha
iret
or
mov
mov
add
lcall
bound
mov
in
jge
cmp
or
jb
jnp
out
sbbb
inc
pop
ljmp
push
pusha
push
out
adcb
rcll
mov
xchg
jle
popf
adc
cmp
cmpsl
pop
push
psadbw
mov
cmc
scas
cli
insl
sub
push
in
ja
sub
aaa
lods
or
mov
jb
es
imul
fcoms
inc
std
dec
jg
stos
dec
jle
pusha
cmp
push
cwtl
or
add
mov
ret
loop
push
test
mov
fwait
clc
jge
xchg
push
jle
pop
mov
mov
push
cmp
mov
js
add
adc
repnz
mov
jbe
insl
scas
icebp
dec
dec
das
sbb
adc
push
fadds
inc
and
xor
and
adc
pop
das
mov
ss
dec
pop
sbb
div
divb
push
and
iret
xlat
ret
xchg
stos
mov
repz
scas
cld
xor
in
pop
xchg
and
and
pop
xchg
popf
jl
scas
xor
mov
sbb
and
or
in
jge
dec
gs
les
push
outsb
sub
outsb
loopne
xchg
jge
cmp
mov
inc
adc
les
es
imul
das
in
inc
mov
popf
pop
cltd
rcl
aad
cmpsb
lret
vmovntps
and
test
jbe
loop
loope
inc
sbb
sti
push
in
rolb
fwait
mov
test
add
add
int
lret
xlat
aad
divb
daa
mov
loop
adc
jae
jo
cmp
mov
xchg
jbe
inc
mov
xchg
paddq
push
or
insl
and
sbb
movmskps
inc
mov
in
add
pop
call
adc
sub
or
dec
jb
push
jle,pt
cmp
mov
sub
lcall
xor
and
test
ljmp
pop
scas
xchg
add
adc
aad
or
and
push
out
and
cmp
sbb
lds
pop
jg
mov
out
rorb
inc
cltd
mov
adc
mov
sbb
xor
sbb
rcr
and
xlat
les
xor
push
pusha
push
aas
lret
pop
sbb
outsb
mov
int
out
pushf
push
jmp
fimull
inc
data16
insl
movsl
mov
in
add
push
scas
xchg
frstor
push
adc
pusha
dec
dec
jge
pop
jb
adc
xor
mov
add
add
aaa
daa
push
test
into
dec
inc
mov
sbb
jae
lahf
das
pop
push
lahf
sbb
sbb
or
in
out
adc
scas
sbb
lcall
insb
inc
sub
inc
or
loopne
adc
adc
loop
inc
into
inc
ljmp
out
popf
inc
insl
sub
mov
mov
cli
push
popf
clc
push
mov
aad
dec
inc
inc
lret
and
dec
mov
sub
push
jno
aam
jp
shll
aad
push
pop
test
dec
aam
cmp
imul
dec
mov
inc
cmp
jbe
push
fld
dec
pop
push
daa
mov
mov
jg
or
in
add
dec
inc
or
sbb
cwtl
add
stc
jbe
push
pop
je
es
mov
or
add
loopne
pusha
sub
daa
and
pop
sahf
in
aaa
ret
scas
scas
insl
pop
mov
enter
lds
push
mul
adc
sbb
lock
cmpxchg
insb
test
and
cmp
stc
mov
bnd
and
imul
jae
orb
adc
jnp
loope
adc
ret
mov
add
int
lea
aas
xor
mov
out
push
rcrb
imul
and
ds
cmc
shrl
push
mov
or
sub
repz
lods
jmp
out
mov
and
repz
arpl
inc
lds
sbbl
pop
adc
pop
jns
hlt
mov
clc
rcrl
mov
xchg
push
sar
mov
jns
pop
push
fcomip
xchg
sub
and
shlb
adc
in
adc
es
and
push
xchg
sbb
mul
sbb
les
inc
scas
stos
jp
rcrb
inc
sub
lods
jg
xchg
xchg
inc
ljmp
adc
jmp
ljmp
mov
test
subl
or
dec
jbe
data16
fcmovb
or
mov
sub
fisttpl
ljmp
adc
pushf
in
push
rorb
jp
imul
add
out
xchg
pushf
inc
and
add
add
sub
shrb
xor
ja
sbb
push
addr16
inc
ficompl
daa
jae
outsl
mov
push
lea
mov
ss
cltd
fcmovb
mov
cmp
les
std
adc
adc
mov
dec
push
sub
mov
cld
addb
mov
test
sbb
inc
sub
push
and
jmp
les
outsl
imul
mov
jl
hlt
ljmp
fsubr
cmp
hlt
fidivrl
repz
outsl
dec
xor
shlb
mov
int3
xor
sbb
outsb
cmp
mov
pop
pop
pop
sub
cwtl
xchg
incl
rcrb
scas
dec
aas
mov
mov
mov
outsl
iret
movl
cmpsb
sti
jo
dec
fbstp
loopne
cmp
adc
int3
cld
imul
insb
lods
mov
cld
xchg
test
enter
aaa
pushf
push
add
or
jnp
fmulp
xlat
cwtl
sar
gs
adcb
in
adc
mov
sbb
mov
mov
and
adc
pop
lea
popa
movsl
lahf
lret
add
in
flds
hlt
ljmp
jnp
int3
mov
scas
lret
adc
test
xor
loop
inc
push
notl
mov
addr16
cmp
shrl
adc
sbb
es
push
nop
or
cmpsl
scas
pop
push
adc
jo
mov
jmp
fiadds
sarb
loope
or
pop
addr16
push
add
fadds
rolb
shl
daa
and
hlt
ds
shll
sbb
imul
js
adc
stos
mov
ss
jg
push
adc
lods
ret
adc
inc
repz
stos
xor
pushf
mov
sbb
pop
shrb
mov
dec
and
inc
xor
movsb
add
cli
daa
or
or
aad
dec
dec
mov
hlt
lods
push
xchg
cltd
jno
xor
or
aas
arpl
xor
addr16
pop
xor
scas
sbb
mov
push
cmp
dec
je
popf
push
dec
js
in
imul
adc
dec
into
lret
sbb
adc
push
adc
pusha
popa
daa
repnz
aaa
adc
mov
or
mov
out
idivb
sbb
arpl
arpl
es
aaa
andb
push
or
mov
iret
mov
leave
inc
pop
sbb
lcall
test
jae
or
sub
popa
fmull
into
or
fistpl
mov
push
lds
jns
test
inc
pushf
mov
xchg
push
cmp
mov
xchg
jg
sbb
jmp
inc
jmp
mov
orb
imul
cs
fldenv
adc
fs
fwait
stos
repz
cmc
mov
fs
inc
les
cmp
jle
scas
stos
sti
pop
mov
in
sub
pushf
xchg
sub
lods
push
sub
repz
adc
mov
ja
mov
popf
xchg
out
out
xchg
and
mov
aad
jge
in
pop
pop
ss
mov
sub
mov
loop
xor
push
shlb
xchg
scas
je
jne
xor
pushf
test
loop
sbb
inc
adc
in
stos
loope
xor
xchg
pop
je
mov
bnd
sbb
cmp
add
ret
iret
jb
jbe
nop
jns
add
mov
xchg
add
inc
ljmp
mov
and
movb
jbe
xchg
cmpsb
insl
lret
sbb
loop
lret
and
aad
ja
ret
sub
pop
mov
pop
cmpsl
mov
outsl
loope
inc
es
fimull
sub
popa
cld
jge
dec
push
lret
and
imul
repnz
lock
pop
push
test
push
adc
jbe
and
sbb
pop
mov
in
mov
cli
and
xorb
mov
fldenv
sbbl
mov
mov
das
mov
push
push
out
xor
popa
xchg
mov
cmp
sbb
inc
testb
in
clc
mov
dec
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
je
sti
test
inc
dec
inc
pushf
jnp
loope
lods
les
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
