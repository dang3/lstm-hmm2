push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
adc
jo
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
dec
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
dec
std
xchg
popf
add
mov
sbb
mul
aam
pop
cmpsl
mov
in
push
mov
xorb
clc
stos
pop
xor
out
ret
das
sub
mov
xchg
movsb
dec
bnd
add
push
jle
scas
int3
adc
add
xchg
add
rorb
or
rclb
cmp
or
mov
test
cmp
mov
jge
mov
shr
push
xor
sub
das
jle
lea
pop
adcl
jmp
sub
mov
push
in
out
sub
mov
pop
push
or
orb
shrb
xchg
cmp
es
sbb
dec
jle
pusha
out
lahf
jb
xchg
sarl
lods
mov
pop
imul
mov
inc
das
jle
push
addr16
stos
cmc
mov
jecxz
addb
ds
fsubrl
mov
repz
iret
jg
sarb
sbb
adc
and
and
test
fisttpl
sbb
bound
lock
xchg
push
mov
out
cmpsl
xchg
insl
xor
pop
fdivp
adc
jmp
xchg
inc
stos
or
ljmp
mov
jmp
clc
icebp
mov
icebp
ficompl
test
jo
jo
jo
jo
mov
jle
and
sub
arpl
int3
xor
iret
ret
cmp
repnz
inc
or
ds
xchg
outsl
pop
shlb
dec
xchg
je
movsl
mov
inc
nop
add
insb
in
xor
ljmp
push
pushf
lods
xchg
stos
loopne
jb
repnz
pop
sbb
int
mov
icebp
dec
jle
into
cltd
cwtl
jle
fcompl
push
jnp
add
out
roll
mov
movsl
fs
lds
xchg
int
mov
or
stc
add
adc
pop
sbb
outsl
add
out
jnp
out
cmp
into
rcrl
ljmp
or
xor
out
jp
les
pop
cmpsb
fnstcw
push
rorb
adc
dec
arpl
pop
mov
ror
nop
loope
insl
es
insl
daa
adc
addr16
notl
in
xor
nop
jge
cmpsl
mov
xor
aaa
or
cmp
clc
mov
cs
inc
stc
push
bound
stc
dec
je
sbb
adc
xor
iret
gs
mov
sbb
mov
subl
rclb
and
addr16
outsb
inc
sub
push
fadds
jbe
popf
push
call
jmp
int
cs
andl
mov
jmp
stos
push
dec
and
test
dec
xchg
xor
mov
popa
fdivs
fisttps
imul
lret
add
mov
mov
mov
ss
out
mov
mov
xchg
test
shl
in
hlt
pop
lahf
jb
xchg
insb
pop
test
outsl
out
cmp
and
data16
pop
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
sub
xor
jo
jo
jo
enter
out
push
int3
popa
mov
cltd
sub
add
in
shrb
inc
clc
mov
inc
repnz
gs
xor
stc
mov
sub
sub
mov
int3
mov
insb
mov
les
or
ret
fldcw
cmp
mulb
pushf
pop
icebp
inc
mov
fistpl
jecxz
push
and
pop
cmpb
mov
aam
mov
and
mov
leave
jno
lock
xlat
imul
push
or
inc
lret
in
cltd
arpl
sbb
mov
and
cld
xorl
ljmp
test
dec
jp
adc
fs
adc
jg
loop
fcomi
lds
mov
data16
xchg
lcall
in
lahf
das
or
inc
jmp
adc
ror
dec
adc
divb
clc
clc
inc
ret
cli
pop
jle
push
adc
add
loopne
decl
cwtl
jb
sarl
out
rcll
inc
mov
push
inc
int3
sbb
xor
mov
add
imul
inc
lock
mov
xor
cmc
mov
add
outsl
cmc
xor
jbe
xor
mov
rol
add
hlt
in
arpl
xor
stos
cmp
sbbl
inc
in
loopne
jae
xchg
pop
es
out
sub
sub
jbe
call
and
jbe
adc
insl
inc
push
fs
call
pop
dec
or
adc
testb
out
je
addr16
sti
push
inc
addr16
push
leave
fldl
loopne
les
push
je
mov
xor
sub
mov
add
sub
leave
dec
xchg
aam
push
cmp
lret
ret
stos
cmp
cmp
dec
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
pusha
pop
push
jo
jo
jo
jo
or
outsb
sub
loop
lds
jne
jp
stos
add
stc
xlat
inc
push
push
sbb
cwtl
sub
add
mov
in
inc
dec
incl
sub
cmp
inc
pop
jns
cs
xchg
inc
movsw
rcll
cs
orb
fcmovne
add
cmc
lods
cwtl
les
lahf
and
bound
xchg
mov
jmp
ljmp
test
enter
jge
enter
cmp
mov
dec
push
sbb
lcall
insb
faddl
xor
and
xor
mov
loope
push
hlt
xorl
sbb
dec
pop
xor
fildll
inc
addr16
fbld
push
cmp
sbb
xchg
xchg
adc
sbb
fidivrs
cmp
push
sbb
mov
pusha
dec
in
movsl
push
shll
outsb
rclb
out
lea
ljmp
fdivl
out
pop
pop
mov
ljmp
jge
sub
rol
mov
push
pop
cmpsl
addb
adc
int
sbb
orl
dec
les
sub
and
inc
pop
xchg
or
push
inc
popf
xor
mov
arpl
and
pop
mov
bound
mov
inc
in
js
inc
xlat
pop
call
call
ds
loopne
lock
mov
sti
mov
sahf
out
bound
cmp
repz
jecxz
aaa
dec
lods
push
sbb
out
push
jne
xchg
sbb
in
gs
fiadds
imul
inc
in
inc
mov
imul
fwait
jle
inc
push
repz
lods
push
cmp
int3
dec
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
adc
sub
jo
jo
jo
lret
mov
push
int3
hlt
jns
cmp
xor
lea
test
rol
mov
inc
pop
jmp
mov
mov
movsl
rcrb
lcall
js
fbstp
xor
pop
out
es
gs
cmp
add
imul
gs
and
add
mov
out
notl
aaa
and
push
mov
scas
outsl
and
xor
jp
fbstp
push
dec
mov
repz
jb
in
adc
lret
repnz
fs
shlb
sti
clc
test
sbb
das
inc
push
and
push
pop
nop
lahf
test
jmp
addr16
mov
add
mov
cmp
jle
and
mov
pop
jecxz
out
fcomp
cmp
fwait
push
sub
mov
dec
loope
daa
dec
mov
jge
es
push
popa
fs
xlat
imul
mov
out
loop
fldt
xor
fxch
test
imul
in
push
mov
test
inc
xor
add
and
push
xchg
sti
imul
inc
cmpsl
and
xor
mov
iret
jns
scas
mov
xchg
mov
dec
fstpl
push
roll
mov
mov
xor
xor
popa
nop
aad
xchg
out
add
xlat
lock
inc
dec
js
shlb
lods
mov
clc
push
mov
and
ja
push
xchg
mov
orl
jmp
or
pusha
adc
xor
pushf
dec
inc
inc
cmpsb
shrl
mov
push
mov
lcall
aaa
xchg
dec
clc
mov
cwtl
mov
and
ljmp
scas
arpl
xor
jbe
mov
dec
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
dec
mov
push
jo
jo
jo
rcr
pop
popf
inc
out
clc
mov
jnp
xchg
not
and
inc
and
add
push
xchg
subl
leave
push
or
into
shlb
cmpsl
or
loopne
ja
ret
cwtl
xchg
ss
stc
repz
sub
pop
ss
push
cld
daa
jle
mov
inc
cmc
subl
cwtl
pop
ds
jne
mov
sub
mov
or
add
sbb
lahf
scas
jge
jl
enter
jae
movsb
mov
adc
mov
in
movsb
out
imul
lret
xchg
xchg
enter
mov
rorb
inc
cld
sbb
loop
loope
shrl
sti
cwtl
int
cmp
insb
jmp
test
icebp
jmp
movsl
cmp
jmp
add
clc
xchg
sbbl
imul
push
push
repz
sub
pop
fldcw
lock
leave
and
lods
cli
cmpsl
fldenv
lret
jno
and
jb
xchg
fst
cmp
mov
in
shll
inc
mov
fcompl
lret
cmp
notl
pop
add
inc
dec
out
pop
inc
inc
in
mov
dec
adc
out
lods
cs
in
or
pop
and
stos
mov
push
xor
push
sbb
das
int
sarl
inc
movsl
xlat
mov
or
loopne
cli
and
into
stc
stos
xchg
sti
mov
pop
fsubrs
mov
mov
xchg
insb
pusha
cmp
lds
push
in
pop
cmovle
push
inc
fucom
sub
xor
arpl
add
rol
xchg
add
sbb
stc
and
and
stos
mov
ffree
sbb
fnstcw
fadd
add
xlat
jb
xchg
ds
xchg
mov
sub
dec
mov
dec
hlt
mov
fs
fcmovb
pop
xor
add
cmp
jmp
ret
gs
cmpsl
insb
cmpb
dec
jo
jo
jo
jo
jae
jae
add
mov
dec
dec
mov
bound
mov
fisubrl
fisttpl
cmpsl
sbb
pop
stos
adc
adc
daa
xor
imul
loope
cltd
mov
pop
call
std
pusha
cmpsl
cli
and
push
lcall
add
push
data16
sbb
es
iret
rcll
jb
cli
imul
mov
in
xchg
and
lret
insb
fimuls
adc
lahf
loopne
fwait
adc
jno
fs
cmp
xlat
mov
cmc
jnp
push
dec
lock
mull
mov
in
loopne
dec
mov
cs
and
sub
decb
cmpsl
push
mov
mov
hlt
nop
lahf
cmpsl
fsubs
insl
xor
movsl
push
aam
mov
mov
movsl
jmp
test
in
jmp
repz
xchg
ljmp
int3
cmp
xchg
inc
divl
leave
push
out
adc
out
push
jmp
add
pop
ffreep
push
sub
fcmovb
mov
mov
push
mov
stos
mov
jo
inc
push
fstps
out
cmp
mov
lret
jge
mov
and
cmp
test
cmpsb
xchg
mov
fisubl
xorb
cmp
stos
loop
sub
push
hlt
inc
adc
push
aam
pop
cmpsb
scas
mov
aaa
clc
xchg
out
mov
scas
adc
ret
pop
xchg
adc
aaa
or
xchg
adc
add
add
dec
es
sti
dec
dec
sub
push
lods
jnp
or
sbb
inc
mov
fisttpll
test
test
dec
insl
push
mov
imul
jmp
fcoml
pop
cmpsb
jbe
scas
mov
ja
loopne
mov
in
daa
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
shll
jle
jo
sbb
int
add
std
add
add
outsb
das
or
movsl
in
mov
cmp
sub
loopne
hlt
mov
pusha
fidivrl
je
mov
mov
in
jbe
aad
loope
stc
xchg
dec
adc
mov
andl
or
sbb
outsl
xchg
inc
jle
cmp
ss
push
cmpsb
mov
loop
xchg
scas
in
mov
and
add
jmp
ret
adc
daa
cmpb
jge
bound
and
les
push
xor
xchg
xorb
jnp
pop
and
adc
inc
or
ss
in
xor
mov
jp
lcall
lcall
push
pop
inc
int
adc
jo
ret
icebp
mov
sti
test
ljmp
inc
aas
icebp
add
int
xchg
and
mov
out
pop
mov
sub
mov
jp
fdivrl
sti
loop
pop
inc
fwait
mov
aam
ret
push
and
cld
leave
out
dec
xor
push
in
aaa
lock
add
jb
int3
mov
mov
rorb
pop
and
sbb
jnp
shl
sub
hlt
mov
cmp
cltd
add
add
hlt
in
pop
pop
popa
jg
xor
es
rep
xchg
shrl
push
xchg
dec
push
pop
mov
mov
bnd
mov
addr16
mov
fldenv
frstor
fbstp
loop
in
iretw
gs
push
in
jl
mov
add
lock
cmp
addr16
fmull
cwtl
mov
jle
mov
cmpsl
dec
sbb
je
and
or
add
popa
mov
pop
js
xchg
add
insb
cld
stos
sub
mov
mov
mov
out
mull
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
and
jo
jo
jo
loop
lahf
jp
xor
jecxz
adc
xchg
dec
std
inc
pop
int
out
das
or
jl
shlb
mov
popf
jbe
pop
vcvttsd2si
pop
cld
xor
lahf
mov
gs
sub
xchg
mov
push
and
mov
out
fstpl
sbb
jg
mov
pop
or
test
mov
jmp
sahf
test
cmp
test
cmp
pusha
inc
jge
and
test
subb
cmp
sub
sub
outsl
fadd
or
sahf
inc
rcrl
jnp
movsl
jne
pop
push
cmp
push
imul
sbb
das
mov
popf
fdivs
jb
stos
mov
xchg
inc
cmpsl
inc
inc
hlt
cld
jae
jne
test
mov
jo
out
scas
repz
jge
jae
fpatan
or
aam
pop
inc
ljmp
pop
mov
dec
jg
int3
push
xadd
ficoml
jle
or
mov
mov
pop
loop
pop
mov
cld
scas
loope
shlb
push
sub
sahf
and
popf
inc
out
das
repz
js
and
ja
xor
mov
daa
pop
jle,pt
cli
mov
sub
mov
hlt
cltd
ret
xchg
mov
bound
xchg
jns
adc
lods
sbb
jl
push
cltd
add
clc
mov
rcl
mov
mov
enter
xor
dec
sub
dec
xor
sbb
sbb
adc
iret
push
xor
addl
fcmovbe
add
jno
lds
push
frstor
pop
jbe
imul
insb
lods
and
jae
sub
cmp
lods
mov
rcl
jnp
rcll
sub
mov
rclb
add
mov
sahf
jg
aas
pop
loop
xlat
dec
push
mov
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
mov
in
push
pop
push
push
push
mov
mov
les
mov
xor
repz
jnp
jo
lods
lock
sbb
stos
ja
cmpsb
jnp
out
pop
jnp
jo
jmp
add
dec
cmc
loop
out
adc
cmp
mov
sbb
frstor
inc
pushf
lea
nop
mov
insb
mov
xor
and
bound
in
stc
mov
sti
dec
out
pusha
cmp
dec
iret
ret
in
clc
jno
jp
ret
xchg
sarb
mov
imul
fsubr
iret
data16
jg
xor
mov
jp
jo
js
scas
aad
and
cltd
sbb
inc
mov
xchg
repnz
cmp
jo
jl
outsb
push
daa
fistl
inc
ss
aam
lods
ds
sbb
mov
mov
push
sarb
cwtl
adc
div
xchg
icebp
mov
jae
es
pop
aas
cmc
mov
fidivl
or
add
mov
push
popl
movsb
xor
xlat
dec
out
cmp
sbb
daa
jns
mov
imul
ja
leave
insl
cmp
add
mov
popf
pop
mov
mov
nop
jb
arpl
mov
data16
jge
mov
mov
jg
cmp
leave
repnz
lret
arpl
xor
outsb
in
mov
xor
das
mov
ds
inc
sub
add
in
cltd
icebp
test
movsl
dec
scas
iret
repz
or
push
mov
movb
fwait
subps
xchg
add
hlt
cmp
mov
and
dec
jmp
or
sub
fmull
lods
sbb
fdivr
adc
dec
xor
adc
lcall
cmp
push
lods
sbb
leave
rol
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
xor
push
fisubs
jno
dec
mov
insl
xchg
add
fists
xchg
add
pop
mov
or
or
and
cmp
mov
xor
xchg
xchg
movsl
xchg
push
push
mov
add
or
leave
dec
iret
jmp
rcrl
sub
and
xchg
add
shr
pop
mov
fnsave
jmp
jno
negl
loop
cmp
mov
insl
clc
pop
sbb
jo
shrl
je,pn
cmp
sbb
mov
inc
push
pop
jl
pushf
cmpsb
adc
xchg
pop
aas
out
adc
mov
and
adc
mov
in
pop
and
xor
dec
mov
add
push
lret
stos
subl
mov
rclb
and
cmp
cmp
add
pop
pop
mov
xlat
cli
ret
outsb
outsl
insl
cli
out
aaa
mov
fmulp
ja
sbb
jno
filds
inc
into
sbb
adc
pop
pusha
sbb
dec
call
lret
orl
cld
jl
mov
lods
add
dec
jo
dec
sti
inc
les
pop
imul
je
and
shll
lcall
sbb
push
es
dec
jnp
call
stc
sub
add
inc
cli
pop
imul
stos
pop
imul
and
lods
pushf
inc
fstl
sub
mov
loop
pop
adc
filds
rcrl
lods
inc
sub
mov
cmp
ja
in
add
push
out
out
xlat
out
data16
or
inc
push
mov
mov
mov
pop
push
mov
pop
imul
fadds
push
rcrb
sbb
fwait
inc
shrl
stc
add
jbe
inc
cmp
aad
mov
mov
inc
lea
mov
jmp
imul
ss
ja
sub
jns
leave
add
inc
fists
icebp
mov
into
adc
lcall
push
and
push
insl
out
pop
xchg
inc
and
out
sbb
fildl
test
dec
loop
iret
or
and
jg
or
mov
adcl
mov
movsl
mov
in
lods
movsl
jbe
cmp
push
pop
adc
xchg
clc
mov
pop
sub
add
push
xchg
xor
add
test
jg
test
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
jns
push
cmp
or
mov
out
or
enter
jmp
mov
xchg
jae
mov
icebp
xor
push
std
or
or
sub
add
or
ja
stos
mov
test
scas
nop
cmp
pop
cmp
pop
cs
mov
sub
aaa
in
je
xor
pushf
repz
dec
fmull
or
jge
popf
adc
add
aad
into
jg
lock
or
arpl
ss
xorb
cs
cmp
mov
hlt
xor
jmp
in
es
push
dec
xor
xchg
xchg
leave
cltd
cmp
adc
xchg
mov
in
sub
call
adc
mov
aad
and
inc
push
sub
shld
inc
xorb
push
lock
mov
rol
push
rcll
xlat
cmp
inc
insl
int3
jne
push
push
xor
push
cmp
imul
push
cmp
xor
sub
pop
scas
sub
pop
inc
adc
push
push
or
pop
andl
fbstp
adc
push
jmp
rcr
pop
pusha
leave
fstpt
mov
rorl
sub
sub
jp
cltd
dec
mov
inc
ret
pop
out
pop
loop
aaa
cmpsl
mov
push
fimull
iret
cmc
adc
add
es
fdivl
fwait
push
push
pop
shrb
movsl
sub
sub
mov
and
push
out
sub
enter
ror
mov
mov
cmpsb
adc
bound
mov
inc
and
sub
pusha
jp
cltd
ret
orb
clc
lcall
mov
dec
push
dec
sbb
fisttpll
in
adc
sbb
pminub
sbb
nop
xchg
sub
jmp
filds
xchg
jecxz
rol
dec
pop
mov
mov
xchg
loop
stos
int3
xchg
sbb
cmpsb
pop
or
jnp
subl
add
xchg
icebp
mov
or
add
popf
push
mov
test
aad
jno
mov
outsb
sbb
or
or
push
jge
xchg
aad
mov
test
mov
cmc
pushf
stos
ss
pop
pop
sub
pushf
out
push
subb
adc
sub
mov
das
add
int3
sahf
mov
lret
push
adc
jnp
lret
lock
jp
mov
sbb
mov
mov
xor
add
jmp
fistl
loope
lds
add
pop
mov
cld
pop
jo
mov
cmp
repnz
roll
jecxz
mov
mov
jle
scas
into
cmc
and
aad
pop
sbb
and
mov
dec
add
sub
and
cmpsl
cmpsb
fistpl
adc
orl
mov
and
in
adc
or
jp
xchg
mov
js
xor
div
sbb
adc
iret
xchg
test
cli
outsl
test
inc
loop
xor
enter
ja
sub
jl
push
xchg
and
ja
cmp
pop
cmp
mov
das
int
bound
in
imul
out
lods
testl
and
je
std
mov
mov
and
jg
inc
nop
inc
jb
dec
mov
jb
inc
push
lods
cmp
mov
or
inc
test
jle
sbb
hlt
sub
movsl
lret
pushf
xorl
add
outsl
cltd
add
and
jle
cwtl
sbb
call
or
aaa
insb
xor
fxch
mov
insl
insb
pop
xchg
add
cmp
lahf
int3
inc
cmc
cmp
fidivs
stos
mov
imul
mov
cmova
jle
sub
je
aaa
lret
loop
pop
outsb
insb
ljmp
pusha
and
xlat
and
jecxz
mov
fcmovbe
xor
pop
jno
jp
push
jg
cmp
loopew
repz
cltd
loop
fsts
mov
push
push
adc
adc
pop
push
into
fmul
jmp
lret
and
or
aad
mov
sahf
xlat
pushf
jns
idivl
fildl
and
cltd
mov
pop
sub
pop
fs
mov
dec
aas
xchg
lods
inc
pop
dec
ret
rolb
inc
adc
push
mov
adc
int3
cmpsb
stc
add
loopne
lds
add
inc
pop
into
cmp
and
icebp
inc
mov
rcl
cltd
push
ds
lret
sbb
adc
push
inc
add
fmuls
icebp
imul
mov
cmp
sbb
add
lock
or
pop
sahf
repz
out
xor
jbe
add
frstor
jnp
jne
pushf
xchg
xor
push
cmpsl
sbb
jne
and
int
dec
test
push
sub
sbb
int3
pop
cmp
sub
push
sub
add
push
nopl
mov
faddp
ja
dec
clc
and
scas
imul
mov
dec
test
sbb
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
outsb
or
jo
mov
jbe
jo
mov
or
outsb
fiadds
inc
ss
mov
jbe
mov
cwtl
fwait
pop
or
in
sbb
nop
notrack
das
pop
xlat
push
mov
into
daa
xor
testb
xor
xor
imul
pop
lock
lret
pop
inc
sub
inc
sub
lods
in
and
dec
pusha
int
sub
addl
add
mov
xor
inc
mov
lea
jnp
jns
cmp
push
notl
mov
dec
jle
adc
out
add
and
mov
cmp
jbe
cmpsl
fstl
out
xchg
dec
add
enter
enter
sub
mov
and
rcrl
inc
jno
push
int3
jmp
div
outsb
push
sbb
imul
mov
push
scas
jp
xor
lret
popa
sub
outsb
dec
xchg
pusha
jns
pop
sbbb
or
les
cld
enter
add
scas
or
faddl
inc
sub
jbe
pop
mov
cwtl
push
out
mov
sbb
inc
cmp
aad
out
dec
inc
or
jg
xor
popf
int
aaa
jne
xor
push
outsl
add
pop
mov
stc
hlt
popa
insl
shlb
xlat
iret
hlt
pop
mov
in
mov
imul
inc
out
add
mov
orb
sarb
fidivrl
add
push
insb
icebp
mov
push
push
add
and
push
push
xor
test
fmul
arpl
in
xchg
sbb
pop
sub
in
pop
sti
mov
xchg
jb
fmull
jno
pmaxsw
pushf
stos
enter
rorl
xchg
xchg
cmpsl
cmpb
stc
jb
int3
dec
add
inc
push
flds
dec
pushf
add
sbb
mov
inc
jne
ficompl
int3
fwait
test
clc
adc
sbbl
lret
fwait
loope
out
sbb
out
mov
inc
push
stos
push
arpl
xchg
fldcw
popf
jbe
jp
in
cmp
enter
cwtl
inc
loope
pop
push
in
loope
mov
sbb
fs
xor
adc
jno
fadds
mov
mov
sbb
push
scas
or
xchg
in
or
add
int
test
fstpt
jnp
cmc
ja
adc
mov
xchg
scas
fwait
lahf
aad
lea
adc
pop
shl
mov
cli
addl
mov
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
xchg
and
mov
repz
mov
inc
mov
pop
scas
fmuls
sbb
pushf
fldt
cmpsb
xchg
pop
sbb
inc
jecxz
sub
jp
add
loope
lahf
ret
aaa
loopne
outsl
stc
mov
xchg
cld
xor
rcrl
out
lds
lret
and
sbb
adcb
sbb
ljmp
imul
pushf
jle
jns
data16
mov
jl
sar
daa
jae
dec
jmp
pop
mov
test
cmove
arpl
les
lcall
jae
idivl
sub
xor
adc
loope
adc
sub
sbb
push
cmc
jecxz
fmull
sub
lods
stos
outsb
xlat
xchg
sbb
repz
lret
divl
pop
inc
xchg
cmp
adc
cmp
mov
arpl
pop
insb
fiaddl
call
add
aad
call
fs
bound
xlat
bound
inc
mov
sbb
ljmp
dec
sub
cmp
repnz
ret
sub
adc
fwait
add
mov
add
mov
clc
imul
sbb
shrb
xor
mov
push
sub
push
faddp
fisubl
mov
jne
mov
scas
fucomp
scas
rcrb
hlt
or
xchg
cld
int3
and
pop
lahf
dec
gs
xorl
loopne
cmp
sub
sbb
imul
ss
rorl
imul
rcl
test
cmp
dec
test
jg
cmp
stos
test
fcompl
idivl
ds
bound
cs
and
jmp
push
repz
push
jb
cmc
push
inc
rcrb
inc
push
sbb
je
mov
mov
mov
into
and
stc
sarl
mov
shl
and
adc
imul
or
sub
mov
inc
and
pop
sti
adc
sub
push
push
cltd
fsubrl
dec
imul
sub
addr16
xchg
loop
ror
fstpt
push
pop
xchg
jne
pop
sub
pop
repz
int
adc
pop
iret
push
clc
out
and
inc
mov
mov
in
pushl
in
inc
lcall
mov
xchg
cmp
jnp
addr16
xor
xor
loopne
jbe
fiaddl
and
out
mov
mov
cmp
movsl
sarl
jne
pop
cld
cmc
lods
ret
cmpsl
int
fildl
jae
cmpsb
int3
dec
imul
add
popa
mov
mov
stos
clc
scas
pop
or
lret
adc
jge
mov
and
pop
jmp
xchg
push
and
add
xor
push
es
jp
cmp
or
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
jb
push
jo
cmp
lea
and
movsl
out
int3
lcall
sub
dec
insl
jmp
cltd
jecxz
sbb
ficoml
push
dec
sub
adc
or
jle
jnp
mov
xor
pushf
aad
outsl
ja
cmp
jbe
pusha
pop
mov
sbb
insl
pushf
int3
xchg
pop
leave
jb
lret
fwait
in
cwtl
lods
cwtl
into
sbb
mov
scas
dec
je
idivb
inc
or
adc
push
cltd
and
rolb
push
mov
gs
sub
fistps
jge
sbb
cmp
mov
or
mov
adc
into
out
addr16
xor
in
cli
aad
leave
inc
inc
lret
loopne
xchg
adc
jbe
cwtl
mov
jne
lds
outsb
ljmp
cmpsl
fisttps
push
dec
sub
pop
mov
dec
insb
mov
popf
xchg
inc
push
subb
outsb
mov
push
adc
dec
mov
rclb
pop
xchg
jbe
ret
xor
iret
mov
or
ret
lds
jbe
and
ja
bound
dec
sub
stos
cmp
or
bnd
mov
in
xor
aad
cmpsb
add
popa
lcall
outsb
xchg
adc
mov
jne
leave
xchg
aad
sub
adcl
mov
leave
subl
js
cmp
push
mov
lret
jp
xchg
mov
lahf
inc
push
add
xchg
fimull
les
and
mov
testl
insb
mov
mov
xor
xor
push
ret
sub
repz
add
mov
clc
es
cld
jle
mov
jmp
mov
cmp
sbb
cld
jecxz
mov
mov
stos
stos
cmc
bound
insb
dec
ds
sbb
mov
out
dec
sub
loope
and
popf
fcomi
push
movsb
addr16
fst
repnz
fwait
jae
pop
out
jno
cmpsb
and
icebp
lock
and
inc
cmpl
push
cld
mov
adc
hlt
inc
iret
adc
lods
aad
mov
out
jae
xlat
mov
xchg
iret
mov
test
dec
mov
mov
loop
dec
outsb
jb
pushf
out
ret
xlat
dec
fists
testl
mov
adc
sbb
or
or
imul
mov
data16
mov
pop
sub
leave
pop
xchg
test
mov
lock
mov
std
mov
pushf
adcl
jg
mov
ss
movsl
push
leave
xorl
outsb
add
aas
fsubrs
psubq
es
rcrb
mov
mov
leave
test
stos
jge
add
fucomp
fdivrl
xchg
aad
xor
xchg
test
mov
jmp
jno
xchg
mov
mov
hlt
inc
and
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
sbb
sbbb
jo
jge
jo
add
mov
out
dec
fxch
ud1
jno
repz
daa
cmp
push
dec
sub
stos
pop
aas
dec
add
sti
adc
jne
aas
mov
mov
scas
xchg
sub
adc
pop
shrl
daa
push
outsl
iret
cmp
adcl
add
push
jg
mov
adc
std
gs
jb
xchg
push
mov
mov
pop
and
jne
lea
sbb
lret
mov
out
insb
mov
stos
sub
add
test
jecxz
ret
xchg
fldt
filds
xor
loop
xor
sbb
xchg
mov
loopne
pop
outsl
cmp
or
aaa
and
daa
mov
ficomps
jbe
cmp
xchg
jle
inc
mov
jnp
sub
scas
cmp
lods
jnp
in
ds
ja
insb
xorl
rcrb
rclb
ret
push
test
sub
in
loopne
pusha
xor
sti
sti
cmp
adc
ss
mov
mov
dec
push
loop
scas
fiadds
movsl
mov
out
and
lret
leave
cmp
adc
aas
sbbb
les
push
inc
lock
in
ret
mov
jno
int3
mov
dec
adc
sarl
jo
rcrl
notl
popa
add
dec
iret
mov
mov
adc
inc
and
push
mov
int
rcr
fwait
stos
out
cmpsl
imul
ljmp
adc
mov
stc
jmp
stos
dec
aam
and
sbb
push
add
scas
pop
rorb
fcomip
cs
xchg
fstps
push
dec
mov
ret
cld
mov
cmp
adc
andl
xchg
jmp
jae
sub
lahf
insb
sub
cmc
fstp
repz
popa
cmp
and
imul
fcomp
adc
cmpsl
inc
movsb
mov
and
pop
repnz
clc
xchg
push
sbb
mov
fists
lahf
scas
aas
push
adc
jl
lds
testb
mov
xor
in
mov
or
cltd
ljmp
push
pop
jne
int
test
xchg
jg
adc
lock
xor
pusha
iret
cmpb
fdivrl
push
mov
pop
stos
adc
sbb
and
imul
and
js
and
and
push
jo
shlb
mov
push
mov
adc
movsb
push
mov
lahf
mov
sub
xchg
inc
imul
jbe
fimull
and
ret
jae
jp
xchg
or
xchg
push
xchg
jg
push
or
jp
aas
sub
xchg
divb
lods
add
loopne
in
mov
pop
xchg
pop
mov
add
test
lcall
cmpsb
pop
mov
mov
and
fimull
add
aam
push
hlt
push
loop
stos
pusha
fcmovu
jno
pop
scas
mov
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
setle
sbb
dec
sbb
cmp
shrb
sahf
pop
out
or
fcomps
lret
mov
mov
fisttpll
xor
mov
in
add
pop
jl
jmp
in
mov
sti
mov
shrb
push
sub
pop
mov
int
jecxz
inc
mov
and
scas
movsl
mov
aaa
jg
sub
scas
lahf
ret
pop
ret
adc
jl
dec
sub
pushf
push
xchg
test
cltd
out
fwait
sbb
mov
mov
lods
jno
cmovb
stc
cmpsl
out
clc
mov
cmc
mov
cmp
pop
aam
xchg
scas
ret
arpl
dec
stos
loopne
in
fdiv
xchg
mov
enter
add
into
cmp
and
pop
mov
mov
je
jno
xorl
add
sbb
add
into
cld
push
test
aam
add
je
lret
loope
jne
imul
jg
ret
and
mov
insl
xor
inc
sbb
out
pop
jnp
jge
adc
pop
mov
xor
or
pop
cwtl
test
pop
cltd
jno
dec
arpl
in
cmpsb
mov
sbb
fstpl
adc
mov
xlat
js
xor
add
outsl
stc
test
cwtl
dec
test
mov
or
enter
pop
pop
mov
sbb
sub
shrb
add
hlt
ja
xchg
push
xchg
hlt
aad
stos
sti
aas
jge
aaa
mov
mov
leave
and
push
pop
pop
xor
imul
mov
jecxz
mov
xchg
ds
xlat
mov
jle
movsl
and
ds
scas
sti
jl
daa
lret
dec
jmp
icebp
js
jno
cmp
jae
outsb
dec
and
mov
jns
push
or
test
jg
faddl
orb
xchg
and
cmp
andb
mov
xchg
loope
ss
mov
loope
pushf
lcall
inc
dec
adc
in
xor
mov
jmp
int
rcll
push
mov
jae
pop
xchg
adc
cmp
mov
mov
mov
cmp
ljmp
jb
jae
shll
repnz
dec
loopne
int3
shrl
je
scas
and
test
stos
pusha
and
aaa
cmpsb
lods
xor
or
cmp
xchg
mov
cmp
cld
movsb
mov
or
ret
ret
iret
or
or
dec
and
xchg
pop
mov
mov
js
sub
jb
mov
sbb
or
movsl
push
xor
mov
out
ret
test
or
cli
pop
dec
inc
xor
xor
jmp
xchg
adc
sbb
fcmovu
dec
cmpsb
jl
dec
mov
xchg
cmpl
je
mov
fs
stos
insl
sub
push
mov
adc
xchg
push
jbe
push
push
roll
pusha
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
inc
inc
add
and
jo
jge
jo
ss
cmc
lods
rcrl
decl
aaa
iret
and
vmovsldup
test
movsl
loopne
in
fwait
out
sub
push
sbb
sub
es
ljmp
leave
mov
insl
test
mov
mov
les
in
lods
dec
cmpsb
pop
adc
out
sub
adc
nop
leave
gs
es
or
or
out
or
lret
xchg
lcall
mov
mov
fisubrs
xor
dec
outsb
adc
and
mov
lea
ret
jns
lahf
rorl
xchg
es
in
mov
jno
out
push
adc
imul
js
in
call
dec
cmpsb
dec
pop
cmp
push
cmp
test
xchg
cmp
inc
push
mov
add
sarl
nop
fwait
inc
je
rclb
add
roll
loopne
mov
xor
outsb
shlb
jecxz
fld
test
mov
inc
xchg
ds
cmp
dec
sbb
push
call
xchg
or
mov
fiaddl
inc
sub
dec
rcl
sub
out
loop
inc
addr16
cmp
inc
daa
mov
mov
pop
push
into
xor
jle
xchg
push
dec
xor
dec
inc
mov
jecxz
iret
mov
add
cs
jb
cmp
call
adc
fstpt
sub
in
icebp
or
xlat
or
jle
scas
cmp
daa
stc
or
push
inc
fsubr
ret
in
out
sahf
loopne
mov
aad
ja
jl
jno
cmp
iret
lahf
adc
icebp
jg
stc
mov
or
inc
lock
pop
mov
mov
jo
mov
sar
or
in
andb
roll
push
dec
cwtl
jmp
imul
in
sbb
cmp
push
jne
fsubr
push
pop
sbb
out
jnp
cmp
popf
enter
inc
int3
subb
jg
adc
flds
sub
lock
lods
in
push
rolb
sti
adc
push
mov
pop
and
inc
iret
dec
dec
or
mov
les
cld
dec
mov
cs
gs
cmc
sub
mov
cmpsb
or
and
test
rcrb
icebp
fs
movsl
mov
punpckhdq
cmpsl
mov
ret
mov
ljmp
leave
scas
cmp
mov
add
xor
push
loopne
adc
pop
sbb
cltd
inc
cmp
sahf
icebp
aad
push
outsl
sbb
pop
dec
bound
add
in
cli
dec
repz
jmp
sbb
mov
xchg
or
push
and
test
xchg
cmp
xorl
dec
daa
je
xor
imul
lret
dec
xchg
out
push
adc
outsb
dec
or
push
ret
jl
rcll
or
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
mov
ror
jo
cmp
xchg
adcb
mov
xor
std
and
test
scas
aam
push
mov
negl
sbb
pop
int3
push
push
mov
mov
pop
sbb
test
clc
mov
ja
test
add
jbe
xlat
push
xchg
pop
pop
cmp
fldl
and
xor
lods
push
dec
jbe
jae
and
cmp
and
xchg
mov
pop
add
adc
pop
jl
mov
xchg
jmp
mov
lods
lret
repz
sub
cli
lods
lds
popa
jp
cs
sub
push
sbb
aaa
xchg
popa
les
fwait
ja
leave
and
dec
es
push
push
sub
cmp
or
shrl
inc
dec
mov
mov
pushf
aad
or
jmp
loop
push
xor
xorl
lea
add
mov
xchg
lahf
imul
lds
test
mov
les
mull
ret
lods
dec
pop
loop
lds
sarl
lcall
testl
in
cmpsb
imul
test
dec
push
adc
add
adc
mov
in
rcrb
addr16
fadd
add
into
jnp
mov
pushf
mov
dec
mov
mov
bound
ror
or
cmp
test
mov
mov
in
jae
jns
das
mov
add
mov
cwtl
int3
shlb
test
ret
iret
sbb
aaa
add
pop
xor
lret
mov
jmp
and
push
mov
push
fwait
adc
or
dec
arpl
mov
decb
sbb
adc
mov
xchg
movsb
icebp
inc
ret
cltd
popa
add
xchg
je
mov
pop
sbb
push
xlat
dec
mov
aad
jle
jecxz
mov
mov
ljmp
data16
fisttps
sbb
daa
push
adc
or
ljmp
ljmp
sbb
mov
into
bound
rcrb
lret
popa
cmc
push
cli
repnz
js
aas
sub
daa
call
call
fcoml
xchg
int3
cmp
movsl
out
add
mov
outsl
pushf
jne
shll
inc
cmp
in
subl
xchg
scas
dec
out
icebp
nop
and
xchg
cli
or
movl
sarl
jne
adc
aaa
sbb
fwait
lcall
or
xchg
mov
cltd
mov
ret
and
mov
int3
shlb
and
adc
ja
lea
sub
or
rcrb
xor
popf
fldt
and
fmul
lcall
clc
sarb
mov
xor
aam
out
in
cltd
popf
std
dec
mov
mov
psubusb
add
cmpsl
mov
xlat
lea
jg
rcrb
add
popa
jge
or
test
stos
mov
push
dec
fsubr
push
popf
loopne
pop
lods
lea
test
int3
call
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
pusha
and
xchg
jo,pn
cmp
pop
testb
mov
push
mov
lcall
pop
add
xor
sti
ds
mov
or
xchg
loopne
mov
fwait
insb
xor
inc
jb
pop
xchg
movb
mov
fucomip
stc
xchg
shr
sub
pop
sbb
getsec
insb
and
add
jg
js
sbb
cmpsl
iret
xorl
dec
lahf
lret
or
cmp
insb
cltd
test
outsl
mov
add
ljmp
sub
pop
or
xchg
xchg
insb
add
inc
popa
adc
and
sbb
xchg
daa
sbbb
cmpl
lret
jle
ja
rorb
mov
sub
push
loope
iret
ret
std
xchg
jb
rcll
mov
sub
clc
mov
adc
add
cmp
push
cmpsb
pop
mov
ljmp
mov
repz
aas
xchg
popa
movsb
pop
push
vmovlps
arpl
movsl
in
ret
leave
addr16
fstpl
loope
out
jae
hlt
mov
stc
xchg
and
push
icebp
ret
xchg
xor
mov
cmp
mov
out
stos
inc
ficomps
outsl
mov
pop
sbb
inc
mov
pop
add
mov
iret
xchg
xor
lds
xchg
pusha
popa
inc
cmp
sub
mov
adc
push
ds
syscall
mov
test
mov
jns
mov
adc
and
je
xchg
in
xchg
jle
aaa
jo
ss
sarb
adc
shll
test
add
cmc
call
sbb
cmp
loopne
xchg
lods
jnp
movsb
outsl
imul
imul
repnz
stos
mov
dec
cld
inc
xchg
movb
mov
stc
cli
jnp
hlt
mov
cmc
mov
aaa
dec
sbb
and
jecxz
out
das
push
sahf
jl
repnz
lret
sub
add
adc
ret
mov
sbb
insl
sbb
nop
fldenv
sub
movsb
adc
mov
sbb
cmp
rcr
in
scas
mov
inc
ja
mov
mov
pop
sbb
imul
sbb
mov
xor
ds
es
add
mov
pop
mov
pop
or
or
sbb
pop
jmp
add
stc
cmp
push
scas
loopne
fnstsw
dec
inc
sbb
ja
ljmp
loopne,pn
jl
mov
aas
fildl
imul
push
fmull
shlb
and
pop
leave
pop
pop
mov
jno
dec
cmc
out
sub
xor
rcrb
ja
xchg
or
adc
nop
jecxz
and
pusha
sbb
dec
aas
xorb
cli
nop
pcmpgtd
ret
xchg
sbb
data16
outsl
ret
add
cmp
mov
ja
out
jnp
addb
dec
mov
out
in
repnz
arpl
add
test
adc
arpl
sbb
jge
add
fwait
in
jl
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rcll
dec
push
sub
cmp
jecxz
and
inc
push
inc
hlt
fs
mov
lret
cmp
jmp
adc
fstpt
xchg
cmc
add
es
hlt
xor
in
jno
cmpsb
mov
ret
pop
adc
lds
mov
adc
xor
cli
mov
adc
xchg
in
xchg
mov
sarb
dec
imul
dec
outsl
imul
int3
xchg
mov
test
cmp
movsb
loopne
fistps
mov
jge
out
adc
repnz
push
add
cmpsb
mov
add
movsb
lret
leave
pop
mov
xchg
adcl
iret
lahf
jl
popf
or
push
pusha
cmp
xor
xchg
fistpll
nop
mov
xor
in
mov
test
adc
daa
mov
or
pop
xchg
adc
mov
and
adc
loop
add
jmp
sbb
push
pushf
push
int3
rolb
outsl
cmp
lret
outsl
lret
out
push
andl
lods
in
ret
lret
rcrl
mov
or
les
int3
push
adc
outsl
jnp
outsl
mov
xor
movsb
pusha
ja
mov
jle
in
rorl
dec
shlb
xor
cmp
test
sahf
sahf
sbbb
andl
scas
std
and
mov
frstor
xchg
jae
es
add
mov
push
ja
bound
mov
pop
dec
inc
pushf
mov
mov
push
jbe
jb
push
push
pop
sub
ds
jnp
jb
cwtl
push
inc
and
movsl
add
push
lods
call
mov
mov
bound
add
adc
push
add
mov
test
jecxz
lds
push
sbbb
insl
mov
push
into
mov
pushf
mov
xchg
cli
fwait
mov
push
xchg
mov
jnp
mov
jmp
cld
je
dec
cmp
decb
ljmp
nop
loop
in
xchg
pusha
es
jl
testb
xchg
and
sbb
js
repz
pop
fwait
out
sub
xchg
cmpsb
mov
sub
and
dec
mov
mov
fwait
mov
pop
xchg
icebp
jp
xchg
rcll
cwtl
jge
inc
push
cmp
call
mov
push
outsb
adc
push
add
jnp
dec
aaa
mov
cmpsb
lcall
cwtl
movsl
nop
pop
fdivrl
jo
mov
cwtl
mov
data16
mov
dec
repnz
xchg
test
cmpsl
sahf
nop
insb
stos
insl
ret
adc
outsb
jge
xor
out
popf
imul
cmp
adc
int
cmp
movsb
aas
push
pop
insb
mov
sahf
data16
dec
jecxz
mov
push
push
mov
push
pop
cmp
cmp
mov
or
add
insl
mov
decb
sbb
cmc
push
jecxz
je
sub
or
xor
in
mov
in
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
sub
jo
jle
jo
push
mov
outsl
pop
mov
mov
mov
mov
fisubl
jg
gs
roll
imul
das
pop
jp
out
out
fsub
imul
mov
dec
pextrw
sbb
lret
and
mov
test
insl
mov
aas
mov
loope
out
pusha
xchg
xchg
std
and
in
vmwrite
sarb
fists
stos
movsb
je
bound
aad
or
leave
sub
cmpsb
jns
mov
ss
xacquire
xor
inc
int3
pop
in
add
jecxz
mov
daa
sbb
faddl
mov
aad
lcall
in
cmpsl
test
js
je
cmpsl
lods
and
push
mov
rclb
dec
xchg
pop
aam
jecxz
pop
sahf
cmpsl
icebp
lcall
mov
push
test
daa
loopne
push
icebp
dec
lock
add
ret
ret
scas
pusha
pop
adc
js
pop
aam
pop
jp
push
mov
fwait
cmp
rcll
jmp
insl
outsl
jo
or
mov
in
dec
dec
sbb
adc
or
std
push
or
out
outsb
test
test
pusha
mov
sub
cmp
sbb
pop
ja
popa
push
out
leave
icebp
and
ja
leave
mov
loopne
sahf
stos
leave
pop
mov
fidivrl
aam
mov
test
push
aam
add
dec
xor
int
movsl
pop
push
push
test
roll
subl
push
mov
loop
jns
lret
cmpsl
cld
pop
pop
sbbl
stos
jmp
sbb
std
stos
push
add
inc
popf
lock
mov
dec
mov
cmp
xchg
sub
xchg
es
fdivs
or
insb
lret
mov
insb
popf
mov
mov
cmp
jno
das
repnz
and
pop
sbb
push
insb
and
xor
add
ja
es
mov
sbb
repnz
push
rorl
dec
xor
mov
ror
in
adc
pop
xor
bound
cmp
inc
pop
mov
imul
data16
mov
idiv
je
and
or
xor
or
cmp
repnz
mov
rolb
in
push
push
lcall
nop
rcr
icebp
stos
fisubs
das
popf
add
rcrb
movsb
xlat
jno
mov
movzwl
and
mov
jmp
ja
and
dec
xchg
mov
jo
jle
jo
xlat
stos
lea
ffreep
in
in
sbb
jo
dec
push
ret
pushf
adc
jnp
add
sbb
push
xchg
loope
mov
cli
f2xm1
cmp
or
adc
push
push
fiaddl
push
sbb
pusha
loope
add
mov
mov
insb
pop
cs
or
add
arpl
rolb
sub
scas
or
jno
cmp
in
scas
jns
adc
cmpsb
rorl
lar
lcall
sbb
jg
mov
loope
jo
incl
stos
jbe
test
lcall
rorb
lahf
xchg
insl
pop
jnp
bnd
or
mov
lret
arpl
insl
aaa
pop
push
xor
jmp
cmp
fmuls
inc
cmp
cld
lretw
dec
es
leave
clc
repnz
ficomps
bound
es
xor
cli
iret
int
mov
cmpsl
lods
xor
into
repnz
add
jmp
mov
pop
and
lret
sahf
es
or
cmp
test
cwtl
rorb
pushf
push
lahf
fucomp
ret
add
pop
fs
mov
mov
cmp
jno
mov
xchg
cmp
sbb
std
pop
sahf
iret
pop
dec
add
sbb
pushf
insl
xchg
inc
dec
ret
cmp
xlat
mov
push
jle
loopne
adc
lods
jbe
xchg
jp
enter
mov
stos
in
jne
xor
or
mov
xor
mov
push
push
loope
ficompl
mov
mov
addb
or
inc
ret
pop
inc
stos
mov
xchg
ret
addl
bound
repz
scas
inc
mov
pop
cmp
cmc
xchg
cmp
inc
add
push
imul
mov
mov
cltd
mov
fisubs
fwait
daa
sub
scas
xor
pop
out
rorb
and
sub
push
mov
shlb
push
fldt
sbb
ss
mov
xchg
dec
jae
lods
andl
or
sub
cmp
pushf
out
call
xor
jo
mov
notb
dec
dec
cmp
adc
and
or
mov
pop
loopne
xor
add
jns
xor
stc
lcall
out
icebp
adc
cmp
das
mov
popa
xor
push
xor
pmulhuw
ss
int
test
cmpsb
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
inc
add
stos
jle
jo
jb
pop
and
jecxz
out
call
adc
lods
bound
adc
cmp
mov
mov
les
je
cs
les
mov
sub
sbb
mov
subb
push
xor
and
xchg
push
cli
getsec
pop
aaa
pop
adc
movsb
sbb
outsl
jo
sub
mull
imul
pusha
pop
ja
mov
push
add
test
jecxz
in
negb
xchg
stc
out
push
sbb
cmp
or
fmuls
push
sub
jbe
test
xor
jmp
and
outsb
and
xchg
lods
mov
in
rcrb
test
dec
call
jmp
mov
cmpl
jnp
inc
and
out
sub
cmp
mov
jg
mov
lea
sbb
xor
sub
xchg
pop
aas
fnstenv
xchg
jo
repnz
xchg
popa
push
clc
in
pop
xchg
jle
mov
fiadds
pop
sbb
mov
clc
lret
add
int3
ror
xchg
mov
pop
inc
cli
and
jb
push
sbb
lcall
dec
push
ja
adc
xchg
adc
mov
leave
movsb
pop
push
ret
mov
js
repz
adc
cltd
ss
adc
jbe
and
rcrl
enter
pop
dec
or
movsb
in
dec
jl
xchg
icebp
faddp
jmp
lods
xorb
mov
cmp
xchg
push
inc
adc
loopne
inc
inc
sbb
out
jmp
sub
out
insb
or
push
cmp
pop
and
pop
pop
add
test
imul
pop
jle
fisubrl
adc
aam
insb
add
fmull
and
pop
sbb
or
mov
inc
call
test
lock
pop
out
push
jle
push
mov
sbb
push
rorl
dec
xchg
xchg
jmp
pop
push
adc
push
xor
adc
push
xor
ja
xor
inc
lcall
jno
jmp
test
fdivrl
mull
repz
xor
fsubs
dec
pop
leave
pop
jns
mov
clc
xchg
mov
sbb
rep
dec
jmp
bound
sub
dec
les
push
sbb
mov
xchg
adcl
out
pop
nop
out
fnstenv
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
dec
into
mov
cmpsl
jg
jo
aaa
xchg
rclb
aad
cmc
sub
andl
mov
gs
push
cmpb
mov
cs
fneni(8087
arpl
stos
push
mov
dec
lea
das
jbe
test
repz
adc
dec
inc
xlat
lcall
sahf
inc
xor
mov
sbb
push
lods
dec
jmp
les
xor
jp
cmp
mov
dec
cmp
fidivrl
pop
push
cli
aam
jle
jnp
pop
les
shll
add
cmp
pop
push
pop
mov
push
push
daa
iret
jae
jle
xchg
test
ds
cmp
sbb
sbb
rcrb
sbb
push
inc
xchg
in
shll
fwait
icebp
test
or
cs
xchg
mov
out
shlb
ret
and
inc
loope
ficomps
and
dec
call
cmp
in
addr16
sub
push
push
fmull
es
jne
ret
loopne
outsl
loop
jb
sbb
insb
dec
mov
dec
std
aas
jne
shl
jae
inc
xor
das
in
mull
cmp
or
sub
or
pop
repnz
sbb
push
add
sarl
inc
mov
push
es
lea
icebp
xlat
add
lcall
xor
and
dec
insb
gs
sbb
mov
jne
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
icebp
gs
cmpsl
jg
jo
in
mov
jmp
shlb
loope
data16
push
mov
adc
add
pop
mov
pop
sbb
adc
fs
pop
pop
sarl
out
mov
in
add
sbb
mov
sub
jbe
std
test
sub
fsubp
add
std
repz
push
xchg
mov
aam
mov
je
jb
or
pop
es
lods
notb
shll
pop
jp
mov
nop
dec
pop
lock
jo
sub
push
pop
pop
test
roll
inc
cld
mov
add
dec
pop
insl
xor
out
jne
or
pop
out
sub
ss
fsts
inc
enter
and
push
inc
and
add
cmc
jecxz
cmc
cmp
lock
pop
jecxz
cli
jmp
push
test
dec
sbb
and
in
adc
mov
pop
pop
mov
mov
push
out
call
pop
jmp
cmc
pop
mov
jb
dec
daa
das
mov
in
push
mov
xchg
jmp
cmp
adc
test
mov
adc
mov
loop
inc
loopne
popf
and
or
mov
in
movsl
mov
roll
and
add
or
jg
push
xor
fisubl
js
pmaxub
std
dec
xor
fisttpll
add
adc
add
inc
or
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
adc
js
mov
jo
jg
jo
jg
mov
sahf
testl
ljmp
push
lock
xor
sbb
ljmp
loop
iret
fdivrl
test
jmp
shr
sarl
icebp
int
outsl
mov
mov
xchg
push
pop
into
fisttps
movsl
filds
loope
push
mov
xor
sahf
pop
insl
cs
jbe
addr16
js
and
sub
lret
sbb
dec
xchg
shr
adc
loopne
outsb
inc
out
insl
sbbl
add
xor
out
adc
jecxz
jecxz
outsl
ret
push
stc
pop
jns
mov
adc
fcoml
pop
ljmp
or
add
lds
and
lods
icebp
mov
jmp
in
xchg
push
sub
test
ds
inc
mov
add
sbb
push
sarb
imul
inc
loop
push
xor
and
inc
adc
insb
test
bound
push
push
es
adc
mov
mov
inc
mov
and
push
push
add
mulb
movsl
daa
sti
fdivrl
subb
insl
mov
inc
push
fsubrs
push
jmp
mov
sub
push
mov
ret
stos
in
cmp
or
test
cmp
jge
mov
ss
nop
data16
out
test
add
mull
sub
std
leave
stos
fadds
cwtl
push
fstpl
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
and
ljmp
jle
jo
call
inc
xlat
sub
cmpsb
popa
adc
icebp
dec
jle
push
push
lea
fsub
ss
and
stos
shl
sbb
push
iret
insl
mov
sti
insl
lret
insb
mov
xchg
jmp
movsb
fiaddl
fsubp
push
std
out
mov
mov
push
data16
and
xchg
iret
inc
addr16
nop
psubusw
nop
xchg
or
adc
leave
or
add
pushf
rcl
jl
pusha
dec
pop
loopne
test
mov
xor
xor
xchg
in
seto
es
std
repz
lock
mov
jno
test
leave
scas
cmpsl
js
pop
out
int
movsl
clc
insl
out
dec
lds
cmc
xchg
lret
fidivrl
das
or
ret
cmp
lods
rclb
sar
push
pop
pop
stos
sub
mov
out
addr16
ret
mov
jo
xchg
add
jg
add
cmpsl
fs
pop
fstpt
sub
xchg
jb
nop
fs
jg
fucomi
cltd
push
adc
and
sub
lahf
lock
dec
mov
pop
popf
clc
cmpsl
movsb
mov
jmp
inc
push
std
push
cmp
stc
jecxz
add
mov
mov
add
xchg
xchg
inc
dec
push
mov
push
in
loopne
push
pop
cli
je
push
and
mov
orb
movsb
xor
sub
ds
jp
jp
pop
dec
sbb
fnstsw
jg
mov
push
out
in
inc
xor
xchg
xchg
cmp
hlt
mov
outsb
xor
shll
cmp
ret
rsm
xor
ss
movsl
xchg
mov
lods
sbb
rorl
lcall
popa
cwtl
sbb
xchg
loope
or
cld
in
shlb
adc
test
ret
fiaddl
dec
or
idivb
mov
mov
leave
cltd
sbbl
stos
repnz
ss
sar
imul
cmp
cmp
mov
mov
cmpsl
xor
es
xor
pop
fnstcw
dec
inc
xchg
cli
jns
pop
sub
int3
xchg
sti
push
cli
pusha
xor
dec
adc
dec
icebp
mov
push
cld
pushf
mov
lcall
mov
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
pop
cmp
jo
jle
jo
jge
enter
cmpsb
lds
dec
and
mov
mov
pop
lret
adc
or
jmp
bound
jge
jmp
xchg
xchg
loope
inc
mov
sbb
in
or
dec
xchg
cmp
mov
scas
int
xchg
mov
sbb
xchg
or
loopne
jge
sti
insl
push
sub
xchg
add
cmp
jecxz
pop
cli
aad
xchg
mov
fistpl
add
or
mov
pop
outsl
cmpsb
mov
pushf
pushf
jle
stc
test
adc
popa
bound
cmpsb
test
mov
adc
dec
xchg
mov
outsl
pop
mov
scas
mov
stos
loop
loopne
pop
mov
fidivl
stos
push
mov
inc
dec
push
shlb
mov
mov
add
adc
lock
sub
inc
and
icebp
mov
int
int
jbe
dec
jl
cmp
pushf
jmp
loop
pop
popa
mov
int
sbb
add
aam
fwait
dec
dec
out
or
movsb
out
iret
adc
mov
cltd
pop
push
mov
repz
iret
dec
dec
or
or
pop
mov
jecxz
loope
iret
inc
mov
or
ds
jecxz
mov
fsubl
or
icebp
or
jg
ljmp
ret
adc
nop
cs
ror
mov
es
xor
lea
adc
int3
scas
jbe
mov
ss
stos
fs
mov
fcoml
xchg
mov
mov
idivl
cld
data16
arpl
sahf
stos
mov
int
stc
imul
mov
movsl
and
inc
inc
imull
fcmovb
pop
mov
pop
mov
imul
xor
sahf
pop
aad
jle
mov
mov
out
adc
jae
fstpl
inc
insb
loop
or
cmpsl
xor
ds
aas
pushf
stc
adc
adc
enter
sub
insb
jbe
cmp
pop
out
iret
adc
mulb
call
mov
xor
lcall
pushf
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
lods
push
pop
lds
and
jo
push
dec
jl
push
mov
mov
loopne
inc
aad
sti
es
popf
stc
adc
in
jb
sarb
insl
sarl
jl
jnp
push
mov
loop
sti
xor
stos
and
pusha
movsb
movsb
repz
push
and
outsl
push
insb
aaa
pop
inc
and
cmp
adc
cmpl
mov
in
cmp
loopne,pt
outsl
cld
sbb
and
sbb
rcrb
and
adc
push
or
ljmp
sub
gs
cmp
xchg
fisubl
out
pop
xor
mov
fldt
popf
xor
mov
ret
and
test
xor
jbe
jne
dec
out
sub
mov
mov
adc
mov
int3
cmpsb
inc
and
insb
adc
sub
pop
jae
xchg
or
iret
sbb
jo
sbb
icebp
fnstenv
test
pop
std
call
inc
mov
sbb
dec
mov
icebp
daa
pop
inc
or
icebp
lahf
inc
sarl
xor
pop
testb
cli
int3
icebp
sub
in
sti
dec
call
dec
or
decb
mov
test
lret
mov
faddl
xor
sub
pusha
or
mov
pop
jne
mov
sub
or
push
mov
mov
dec
cmp
xchg
dec
insl
dec
mov
test
xchg
mov
xchg
stos
xor
dec
lds
pop
jp
pop
sub
cmp
adc
pop
aad
mov
mov
jne
stc
dec
cmpsb
sub
inc
cmp
pop
push
les
or
or
push
test
leave
adc
pop
jecxz
jle
dec
jg
loop
mov
fists
ficoms
jno
pop
cmpsl
fwait
or
je
sub
adc
dec
adc
sbb
fs
push
into
loope
add
push
xchg
insb
push
aas
mov
ja
repnz
fbld
xchg
sub
sbb
mov
sub
lea
mov
xchg
mov
je
ja
jns
cwtl
mov
dec
lea
inc
jns
stos
ret
inc
test
mov
or
dec
mov
adc
mov
lds
or
leave
mov
cmpsl
lods
mov
or
mov
data16
cmp
outsl
xchg
mov
jmp
inc
ret
jecxz
and
loopne
and
xchg
cltd
cmpb
inc
cmpsl
mov
cmp
mov
jno
sub
adc
inc
pop
or
je
xor
repnz
dec
shll
scas
or
rorb
cmp
ficoms
shrb
xchg
movsb
and
pop
mov
dec
or
mov
cmp
js
les
add
jb
inc
add
out
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
loope
push
ret
and
jo
mov
push
lahf
shrb
lock
cs
sub
hlt
dec
xor
repz
stos
shrl
adc
xchg
ja
jo
imul
inc
mov
frstpm(287
lds
out
add
scas
xchg
out
sub
in
and
pop
jp
or
insl
popl
aas
aaa
inc
xor
and
push
mov
mov
pop
xor
aaa
push
loopne
mov
xchg
data16
flds
xor
jno
bound
xchg
aaa
xlat
leave
dec
xor
xor
dec
pop
add
mov
sub
in
xor
jmp
sub
sti
cltd
stc
dec
daa
ss
in
out
in
mov
mov
mov
fistps
mov
jae
cmp
push
gs
cmp
push
int3
mov
movsl
push
bound
int3
call
jl
xor
scas
sarb
cmpsb
nop
push
faddl
push
add
mov
sub
stc
jo
pop
pushf
repz
pop
test
icebp
ss
cmp
mov
lea
ja
mov
incb
shl
js
testl
imul
push
pop
and
stos
xor
or
iret
and
push
mov
test
insb
ljmp
xlat
das
insb
ljmp
psubsb
xchg
fisttps
cmp
in
mov
ret
xor
inc
aad
repnz
dec
cmpsb
mov
mov
popa
jnp
leave
inc
hlt
ja
lcall
cmovnp
jecxz
push
loope
jp
aad
adc
push
inc
xor
jecxz
add
cmc
loop
pop
cltd
cmp
xor
rclb
mov
shll
push
outsb
inc
mov
jl
or
test
xchg
adc
rcl
inc
enter
lock
js
pop
mov
sbb
push
jbe
dec
inc
xor
push
stc
lods
addb
or
pop
scas
je
dec
sub
mov
adc
js
mov
das
test
repnz
cwtl
outsb
push
mov
pusha
and
jo
push
sub
mov
xchg
imul
mov
jns
lea
cmp
jbe
cmc
jg
dec
clc
iret
fwait
outsb
lcall
jmp
xor
jge
fmuls
into
loope
jg
add
inc
push
pusha
repnz
scas
insl
add
repz
cmp
testb
ret
filds
rcrb
pop
rorl
sbb
sub
xchg
mov
fstpl
xor
dec
outsl
das
sbb
pop
mov
aas
xor
hlt
jbe
cmp
clc
test
mov
in
pop
lret
dec
fcmovnb
mov
pushf
enter
test
scas
data16
in
jmp
repz
ret
idivb
cmp
fimull
sar
inc
add
out
add
movb
notb
add
movl
add
in
test
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
cmp
jo
and
jo
adc
lea
xlat
imulb
nop
mov
test
sbb
ds
or
push
mov
je
xor
das
call
aas
stc
mov
outsb
mov
or
cmp
ret
jp
or
scas
xor
int
jmp
outsl
jmp
xchg
je
or
and
idivl
dec
dec
mov
and
pop
aaa
outsb
movsl
xor
lahf
jp
cmp
arpl
xchg
mov
push
mov
test
cmpsb
dec
std
pop
cmpsl
adcb
add
mov
sub
or
jl
cmp
fsubrs
or
mov
sti
sub
clc
or
bnd
add
std
mov
and
jmp
or
xor
mov
push
push
aam
add
mov
and
mov
xchg
cli
xchg
enter
sbb
mov
add
outsl
mov
pusha
sti
inc
and
mov
loop
and
addr16
pop
sub
pop
or
sub
add
mov
bound
push
xor
cmpsl
outsl
mov
push
jp
hlt
loop
inc
stc
adc
call
adc
pop
das
jl
or
push
lret
scas
pop
mov
sub
pusha
dec
mov
mov
mov
mov
int
add
mov
cmpsl
inc
shll
leave
subb
add
add
push
notl
push
push
insb
sub
loopne
inc
nop
cmp
fnstenv
xchg
jmp
cmp
or
int
stos
fbld
mov
xor
cmp
outsl
adc
das
adc
lahf
clc
test
mov
lret
add
jne
mov
es
pop
push
cmp
fdiv
clc
faddl
add
push
push
inc
mov
adc
pop
scas
push
add
mov
adc
inc
ds
push
inc
add
movsl
push
lods
into
jmp
inc
push
or
decb
loop
mov
cs
pop
push
dec
push
pop
std
rolb
cmc
test
rcrl
inc
mov
push
push
fwait
inc
mov
inc
and
mov
stos
fnsave
adc
or
add
fsubrs
pusha
pop
repz
adc
add
jno
cmp
push
xor
in
xor
bound
enter
xor
clc
outsl
inc
jne
dec
xor
loop
pusha
add
pop
sbb
mov
test
shll
cmp
fwait
loope
adc
xchg
jns
data16
inc
jae
jg
xor
and
scas
inc
adc
repnz
cmp
mov
push
inc
ljmp
jmp
iret
sbb
dec
or
pop
outsl
push
cmp
test
stos
cmp
fadd
sub
pop
pop
mov
adc
adc
inc
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
imul
cmpsl
int3
jo
and
jo
jecxz
xor
js
mov
ret
lcall
insl
xchg
inc
fisubrs
ja
xchg
mov
sbb
dec
cmc
jbe
cmpsb
mov
mov
aas
loope
cmpsb
outsb
cmpsl
cs
push
xor
jp
and
inc
insl
testl
daa
out
icebp
fistpll
inc
imul
xor
fucomip
aad
push
adc
sahf
push
shr
push
and
in
in
pop
addr16
jg
bound
pusha
add
fwait
sbb
inc
pop
in
adc
into
xchg
jmp
mov
mov
icebp
divb
pop
notl
movsb
pop
jne
pop
add
test
jp
push
xor
fsubr
fstpl
hlt
lods
jg
add
adc
ret
dec
cld
sub
test
addl
into
popw
push
lods
push
cmpsl
call
adc
clc
into
scas
aam
enter
push
mov
and
xchg
push
insb
jge
xchg
cmp
fimuls
ret
outsb
aad
loop
lods
push
sbb
cmc
das
in
add
mov
sub
or
mov
jno
imull
cmpsb
adc
mov
mov
adc
cwtl
sbb
or
xor
xchg
adc
movsb
xchg
dec
repz
xor
stos
jg
cmp
mov
bound
hlt
lea
test
out
adc
push
mov
fwait
test
sub
lret
jnp
lcall
dec
push
dec
jp
or
rcrb
adc
jge
in
and
int
cli
ret
inc
ret
sbb
outsb
imul
ss
repz
rcr
xor
enter
out
add
xor
das
cmp
sub
scas
push
in
adc
xlat
mov
mov
jecxz
leave
push
icebp
ror
stc
orl
and
ret
fucomip
xor
jne
test
addl
clc
lds
mov
or
push
xor
sub
dec
xor
jbe
repnz
mov
sahf
test
add
int
daa
and
out
test
mov
xor
lcall
inc
pop
dec
cmp
test
jmp
sbb
les
ja
cmp
mov
ja
int3
mov
sbb
xchg
jp
stc
sub
enter
mov
add
xchg
mov
fdivl
push
xchg
adc
mov
xchg
mov
loopne
fwait
jl
and
les
mov
dec
xor
insb
or
adc
sbb
jbe
adc
inc
test
mov
not
aam
pop
jae
cld
xor
jae
xor
dec
xor
sarw
out
movl
push
mov
xchg
ja
daa
repz
pop
pusha
testb
movb
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
or
into
push
leave
jo
and
jo
push
mov
nop
mov
pop
jno
dec
add
rcll
jae
sub
jp
jbe
xor
aam
sbb
xchg
jbe
or
fisubs
call
leave
push
nop
jecxz
repnz
dec
mov
push
sub
loope
ret
fs
mov
cltd
mov
dec
loopne
or
pop
mov
xlat
xchg
fldenv
pop
mov
and
rcrl
mov
cwtl
pop
pop
hlt
fcomp
adc
mov
xchg
jno
cmp
push
mov
cmpsb
jbe
mov
jne
inc
pop
xor
push
loop
loop
dec
jo
inc
push
add
loop
test
in
or
pop
pop
outsl
cmp
xor
xor
lcall
dec
fwait
cmp
cmpsl
adc
push
adc
aaa
mov
lret
sbb
jl
sbb
mov
rep
xor
add
cwtl
or
xchg
mov
push
or
in
sbbl
out
lret
sahf
jbe
test
cmp
loope,pn
pushf
stos
sbb
mov
into
shrl
lods
das
fwait
pop
out
xor
shll
lahf
pop
scas
ds
lret
lahf
jae
mov
iret
mov
dec
sub
dec
sbb
lahf
pop
int
push
jp
in
data16
stos
inc
shlb
sub
mov
aad
bound
test
inc
xor
push
push
mov
mov
arpl
test
movsb
outsl
daa
or
cmp
add
xchg
int
repz
sbb
bound
cmp
dec
test
cld
mov
gs
out
pushf
mov
cmp
adc
sti
jl
jnp
ficompl
xor
pop
test
out
out
xor
fstpl
ret
clc
sarb
mov
fwait
in
popf
push
add
js
cld
xlat
jno
add
sbb
mov
sbb
popfw
int
mov
mov
sbb
aam
out
xor
adc
sbb
outsl
push
in
dec
push
sbb
loop
and
les
sbb
fsubl
inc
daa
sub
in
rol
loope
aaa
lods
or
push
push
cmp
frndint
mov
data16
out
ja
sbb
inc
mov
fnstenv
in
out
sub
jae
or
push
jp
mov
mov
repnz
bound
test
ret
dec
cmp
loopne
imul
or
neg
out
js
dec
and
loope
xchg
push
jnp
mov
adc
lock
not
add
xor
pop
inc
and
je
fiadds
inc
xor
jo
lods
in
xchg
or
push
mov
cmp
push
into
mov
xchg
test
mov
imul
shl
xchg
mov
xchg
rorb
or
add
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
pushf
mov
jo
and
jo
das
mov
pusha
aaa
mov
push
push
mov
and
inc
and
fs
dec
pop
mov
xchg
add
shll
mov
lret
shl
mov
push
mov
orl
cmp
aas
push
movsb
iret
in
inc
xchg
shlb
xchg
adc
loope
repnz
jne
popa
pop
inc
mov
idiv
dec
or
jp
pop
jnp
mulb
push
mov
loope
xor
and
push
arpl
add
cwtl
inc
xlat
mov
jp
push
dec
lea
mov
adc
dec
dec
mov
filds
sbb
movups
rcrb
mov
sub
fs
enter
adc
sbb
sbb
fcmovne
mov
or
pop
push
fs
lea
mov
pushf
mov
push
lods
mov
stos
pop
pop
orb
lahf
inc
arpl
fs
cli
bound
jae
jecxz
cmp
cmpsb
iret
pop
mov
in
jp
and
loopew
popf
in
gs
push
cmp
jecxz
dec
jns
stos
cs
fldenv
add
mov
pop
stos
mov
les
ljmp
mov
repnz
mov
sar
lcall
cmp
cmp
mov
mov
fdivr
mov
movb
aas
xchg
adc
imul
xor
movsl
mov
dec
in
rorb
rclb
aam
xlat
fs
stos
sbb
arpl
lret
push
and
or
fmulp
mov
mov
fucomp
adc
jl
lea
push
insl
sbb
movb
inc
pushf
rolb
outsb
fsave
lods
dec
sub
fsubl
icebp
mov
testl
sub
imull
cmp
in
mov
fimuls
cmpsb
mov
add
lea
inc
xor
inc
sbb
cmpsl
aaa
inc
push
in
es
mov
jmp
adcb
stos
adc
push
gs
daa
inc
dec
fwait
shlb
arpl
movsl
pop
mov
jns
clc
pushf
xchg
je
cmpsb
aaa
sarb
fildl
cmp
add
inc
ds
add
pop
fisubrs
lcall
sbbb
stos
jno
pop
push
push
xor
and
add
in
mov
xor
fildll
or
das
jp
adc
fdivp
in
cmp
sub
test
push
ljmp
popa
mov
popf
fmuls
pop
ljmp
shlb
ljmp
add
movsl
cmp
shrb
pop
and
jge
inc
xor
data16
js
xchg
add
inc
std
mov
xor
mov
pop
jo
cwtl
pusha
push
adc
pop
nop
repnz
push
xchg
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
or
shlb
and
jo
xchg
insl
push
les
mov
push
das
imul
out
scas
cs
rclb
loop
cs
ficompl
pop
add
push
mov
lods
and
inc
inc
sub
sbb
push
sbb
mov
imul
xor
les
bndstx
or
push
in
xlat
lods
pop
stc
sbb
cmc
mov
mov
cltd
mov
jecxz
nop
pop
mov
push
or
fcmove
das
pushf
in
cmp
mull
inc
enter
push
push
adc
pusha
daa
outsb
adc
and
add
rcrb
cwtl
fs
cmc
inc
out
mulb
rorl
jb
clc
sub
mov
fidivl
xchg
mov
adc
fnstsw
cmpb
sbb
sti
add
aas
cmp
ret
fstps
rorb
mov
xor
repz
std
adc
cmp
outsl
dec
ljmp
fisubl
adc
gs
jns
xchg
push
jmp
push
xchg
idivb
pop
dec
into
or
sahf
mov
scas
push
mov
jno
scas
lret
insl
dec
movsb
push
mov
outsl
pushf
decb
pop
iret
mov
push
dec
test
cli
dec
enter
imul
sbb
and
jnp
push
incb
xchg
or
ficomps
pop
dec
dec
fsubp
pushf
insb
mov
jge
pop
inc
lock
push
jl
dec
sub
ja
push
jecxz
test
mov
movb
aas
and
mov
movsl
das
pop
xchg
lcall
call
push
xor
pop
cmp
int3
sub
sahf
sbb
scas
push
xor
mov
mov
stos
mov
das
rol
stc
push
sti
adc
iret
cmpsl
in
push
insb
lods
lret
or
aaa
into
mov
mov
xchg
sbb
pop
mov
cmp
fwait
dec
pop
js
cmp
sbb
or
cmp
sub
outsb
jae
or
inc
shll
es
mov
adc
push
jmp
mov
mov
sub
cmp
daa
ja
lret
mov
jno
pop
xor
pop
add
mov
add
mov
mov
mov
dec
movsl
xchg
or
xor
mov
sbb
add
jge
ret
les
xchg
ds
ja
lret
xor
jecxz
push
shrb
cltd
lret
xchg
aad
fnstenv
fnstsw
hlt
push
lcall
add
cmp
insl
iret
push
in
sahf
orl
shll
mov
pop
mov
daa
and
or
xlat
and
scas
add
lahf
ljmp
adc
dec
data16
mov
cmpl
pop
mov
cli
lds
jne
idivl
xor
xchg
sbb
push
andb
add
dec
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
inc
jne
mov
scas
shlb
cld
jbe
fcoms
pop
mov
inc
outsl
bound
jno
jns
pop
popa
adc
mov
inc
jne
jns
sbb
out
jg
cltd
mov
clc
icebp
jl
or
adc
aam
jne
push
sahf
dec
mov
sub
test
aam
cmp
add
dec
addl
adc
mov
add
test
test
cmpsl
and
int
js
mov
jmp
lea
xchg
inc
inc
sbb
sbb
sbb
inc
sahf
dec
shl
jb
dec
push
xor
push
aam
pop
jno
pushf
test
dec
and
xchg
cmp
insb
es
cmp
ficoml
dec
push
push
cmp
into
xchg
pop
mov
popa
in
pop
push
inc
inc
bound
lea
adc
pop
pop
mov
divb
in
pusha
xlat
in
ss
sbb
movsl
cld
fsubl
call
jns
gs
fld
pusha
cmp
jge
mov
adc
add
scas
mov
cmp
imul
sub
imul
insb
aaa
inc
sbb
in
lcall
cmp
int
sub
mov
mov
xor
mov
pop
fs
mov
push
dec
in
xchg
pinsrw
les
or
ret
lret
nop
cwtl
clc
adc
pop
dec
andb
pop
cmp
sbb
sti
clc
call
mov
mov
sub
or
idivb
jecxz
stos
addr16
mov
and
pop
cmp
inc
cmp
mov
negb
sub
jge
mov
push
jne
add
cli
ljmp
inc
add
bound
in
mov
jge
and
push
imul
xor
jecxz
mov
or
or
loope
faddl
nop
adc
sub
jmp
fwait
test
mov
cld
cmpb
add
add
pop
out
neg
jmp
test
mov
enter
mov
sbb
add
xor
mov
daa
adc
jl
and
cmpsb
mov
es
push
push
popf
or
jmp
std
fildll
pop
mov
scas
add
adc
mov
push
bound
fimull
add
repz
out
inc
sahf
stos
lock
rolb
stos
mov
adc
xchg
adc
ret
mov
ret
sub
xchg
push
xchg
cmp
mov
or
bound
mov
dec
jne
fldl
cmpsl
and
js
sub
add
sar
scas
shr
xor
adc
fwait
pusha
sbb
mov
repz
cmp
pop
orl
dec
ds
sbb
movsb
inc
mov
arpl
bound
mov
std
iret
lods
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
sbb
jo
jge
jo
mov
je
push
sbb
mov
fsts
cmp
pop
jne
mov
xlat
js
loopne
mov
test
pop
sbb
arpl
rorb
sti
add
loop
ficoms
mov
fdiv
pop
adc
movsb
ret
pushf
jge
gs
inc
push
or
ja
dec
xchg
outsb
jp
cmc
push
pop
sub
leave
or
xchg
int3
or
clc
mov
sarl
fildl
and
scas
push
and
adc
sbb
and
jle
add
or
push
cli
jg
fmull
mov
mov
mov
mov
in
dec
inc
sub
cvtps2pd
pop
pushl
jne
jns
loopne
lock
mov
add
into
fcoml
inc
jle
xor
mov
loope
mov
and
test
les
adc
push
std
jo
jle
into
int
dec
lahf
outsb
addl
xor
push
xchg
inc
sub
mov
push
mov
dec
inc
push
adc
data16
cwtl
inc
push
aam
nop
lcall
or
jno
sub
hlt
jg
imul
cwtl
das
movsl
cmp
addr16
push
addr16
mov
pop
mov
sbbl
imul
cmc
movsb
lea
js
in
in
and
cli
xor
cmp
or
repnz
cs
lock
inc
iret
mov
insl
bound
ljmp
mov
cmp
ret
push
jge
or
mov
cmp
pop
popa
int3
iret
shl
dec
outsl
adc
sti
hlt
into
mov
leave
mov
cmp
in
jo
inc
cmpsb
and
ret
cmp
jae
imul
nopl
or
mov
scas
pop
xchg
dec
pop
mov
into
les
xor
adcl
add
mov
jg
mull
fwait
movsl
std
xlat
lods
mov
sub
pop
cltd
sub
imul
fistpl
adc
adc
mov
js
out
icebp
test
cmp
fistpl
lret
jno
mov
pop
and
nop
aaa
sbb
insl
cmpsb
bound
stos
xchg
jecxz
ret
xchg
lds
daa
add
pop
aad
ret
movsb
jp
pop
psubq
push
mov
push
mov
arpl
loop
rcl
sahf
jg
test
andl
pop
fists
mov
mov
xlat
lods
push
nop
enter
icebp
dec
mov
int3
inc
je
pop
aad
test
je
ret
pop
cwtl
xlat
repnz
lret
cmc
mov
aas
sbb
fptan
mov
test
test
into
xchg
fsubrs
mov
xchg
pop
mov
fidivs
dec
stc
clc
mov
dec
addr16
sbb
pop
adc
or
jne
mov
mov
pushl
lea
jmp
mov
push
mov
bound
push
insl
inc
fnstenv
and
jo
pop
in
pop
mov
icebp
dec
mov
test
nop
leave
xchg
add
shll
mov
outsl
es
add
arpl
cli
xchg
pop
mov
xchg
int3
xchg
push
cmp
inc
adc
outsl
xchg
scas
mov
pop
icebp
lods
dec
mov
hlt
jge
jo
cwtl
out
or
or
xchg
dec
test
jb
and
lahf
cmp
jp
push
movsl
std
push
inc
jge
xor
xchg
xchg
sarl
inc
jbe
leave
mov
jb
fisttpll
sub
insl
push
loope
dec
mov
jae
adc
insb
sahf
nop
inc
mov
aad
ret
jb
push
in
lret
push
push
pop
flds
les
inc
pop
mov
dec
std
int3
cmp
leave
test
mov
and
in
lret
mov
enter
push
popa
push
sbb
adc
mov
or
lret
es
adc
pop
push
mov
add
push
ret
dec
dec
sahf
mov
stos
lret
lret
mov
mov
xor
adc
into
xlat
xor
xchg
scas
push
stos
jle
inc
out
sub
fwait
sbb
nop
pop
mov
ror
xor
mov
mov
mov
bound
sbb
ljmp
shrl
or
or
fcmovnbe
out
mov
lods
add
sarl
cmp
lods
mov
ds
movsl
leave
or
stc
mov
popf
pop
adcb
cltd
dec
nop
add
out
insl
cmpsb
mov
xor
mov
jecxz
loope
test
add
icebp
je
mov
popf
shl
int3
loopne
adc
enter
push
sub
xor
sbb
pop
lret
sub
fidivl
xchg
loopne
add
lcall
test
mov
repnz
sub
mov
dec
jl
cmp
dec
in
adc
loope
sub
cs
xchg
popa
jne
scas
loopne
scas
dec
cli
movsb
mov
xor
hlt
and
add
xchg
aad
jl
enter
sub
inc
lcall
arpl
cwtl
arpl
dec
mov
rorb
xchg
imul
fmull
xor
aaa
jne
add
insb
and
ja
push
push
add
push
pusha
ret
sahf
subb
shl
cmp
fwait
mov
fcoml
mov
bound
xchg
lret
into
into
add
xor
xor
jmp
incl
fldl
loopne
int
xchg
xor
sbb
mov
cltd
and
push
pop
movsl
les
mov
xchg
rcll
jmp
das
fildll
pop
lea
mov
cltd
pop
jle
jno
xor
sub
pop
adc
addr16
pop
psrld
mov
jo
iret
cli
cmpsl
fadds
dec
sbb
jb
adc
mov
mov
and
out
inc
jp
daa
adc
sub
inc
add
dec
add
add
out
out
xor
call
push
in
clc
ja
jo
and
jo
add
out
ret
xor
cmp
out
cmpsl
lea
stos
lods
xor
sbb
pop
dec
dec
cmp
inc
popf
lret
sbb
imul
mov
jae
inc
jns
cmp
xchg
pop
in
and
clc
sub
test
or
stc
push
xor
xor
pushf
repnz
jnp
inc
popa
enter
mov
mov
arpl
outsl
shrb
fs
sahf
push
jmp
adcb
jne
mov
mov
mov
lods
inc
stos
addr16
push
sarl
add
ja
js
pop
pop
ret
std
inc
xchg
ss
std
outsb
pop
jge
sub
clc
inc
cltd
out
cmovp
pop
mov
xchg
adc
fstpl
jne
xor
repz
jne
jnp,pt
stos
and
outsl
ret
sbb
jnp
mov
push
inc
dec
dec
or
xor
xor
sub
pop
inc
push
int
mov
pop
jb
xchg
scas
sar
adc
sti
imul
enter
cmc
fadd
sub
pop
nop
iret
rorl
mov
inc
shl
mov
jmp
add
loope
lahf
cmpsl
cmp
fsubrl
ds
cmp
push
xor
pop
inc
adc
pop
add
or
hlt
out
cmp
repz
bound
adc
jo
fstpt
xchg
inc
xchg
sbb
xchg
mov
jo
push
and
pop
fdivl
andl
mov
or
mov
test
hlt
lds
je
xchg
mov
cmp
jle
xchg
sbb
xchg
xchg
popf
fimuls
jo
sarl
test
jo
sbb
adcb
iret
add
lea
fwait
add
pop
cmc
cltd
fcmove
lock
jle
xchg
call
scas
dec
jmp
fcoms
sbb
sbb
outsl
pushf
cmp
iret
daa
int
dec
adc
int3
insb
mov
push
cmc
ret
lods
fcomi
andl
enter
test
inc
mov
jno
shlb
lds
mov
push
xchg
aad
jo
xor
call
fdivs
adc
xchg
jno
mov
ficoms
mov
test
jno
xchg
xchg
icebp
insb
pop
mov
push
xor
test
xor
jns
int
mov
enter
lock
push
stos
push
mov
rcrl
mov
jae
int
mov
sbb
cld
sbb
push
or
mov
mov
rclb
sub
mov
sbb
xor
in
and
mov
mov
cltd
fdivrs
mov
xor
push
fmuls
addr16
aam
lea
add
pop
lret
push
aas
pop
push
add
hlt
pop
push
push
xchg
stc
popl
add
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
jnp
push
pop
daa
loop
jo
jge
jo
fwait
jne
movsl
pop
push
push
loop
in
jg
mov
rorl
addl
lock
mov
loopne
add
mull
mov
lret
add
mov
rolb
sbb
mov
sbb
stos
repnz
fists
scas
xchg
xchg
mov
sbb
jae
push
scas
xor
icebp
push
adc
stos
push
jp
insl
int3
sbb
sbb
in
aam
sub
das
les
scas
movsl
test
xchg
pop
inc
xor
or
sub
cmp
xorb
cli
cmpsl
mov
enter
cmpsl
inc
push
ljmp
insb
in
roll
aaa
xchg
mov
outsb
xchg
lock
or
test
mov
jnp
inc
mov
std
test
jle
jnp
hlt
mov
jmp
rcll
sarb
out
push
mov
adc
int
dec
loop
int
adc
das
xor
popa
pop
movsb
xchg
jg
dec
pop
rsm
mov
lds
adc
add
scas
enter
sbb
cmpsb
and
lods
shr
mov
mov
test
bound
jbe
jle
cli
in
mov
mov
mov
push
lock
shrb
sbb
mov
sbb
aaa
push
gs
sbbb
mov
push
sub
jbe
sub
pop
jb
push
je
add
imul
push
or
pop
stos
icebp
mov
xchg
jg
mov
in
lea
test
or
xor
jo
mov
pop
call
fstps
es
shr
or
and
flds
mov
test
stos
stos
cmpsl
mov
sbb
push
inc
push
mov
call
cmc
mov
jnp
mov
xor
mov
xchg
sbb
int
sbb
sbb
push
push
frstor
jne
and
dec
rorl
adc
pop
int3
xor
xor
sub
ja
std
mov
cmp
xchg
mov
adc
addr16
notl
sbb
xchg
push
sbb
and
aaa
adc
or
lret
in
xchg
and
push
mov
or
out
mov
test
push
xchg
in
cmp
add
xor
dec
jle
int3
lods
icebp
mov
xor
and
cmp
testb
out
inc
inc
sti
out
in
add
jno
jle
or
jae
lds
dec
fdivrl
push
cmpb
xor
mov
rolb
in
cmp
dec
sub
or
mov
push
jnp
out
test
pusha
fmuls
cmp
das
push
int
fidivrl
and
fmuls
mov
jne
loope
push
sar
add
and
inc
add
dec
add
add
mov
ja
add
xchg
lods
inc
xchg
out
jo
and
jo
into
inc
sbb
scas
lret
add
out
mov
and
sub
and
bound
mov
out
test
setae
mov
sbb
nop
lcall
jge
inc
repnz
ds
sarb
lahf
ljmp
aad
mov
or
sbb
mov
xor
fldenv
push
test
sub
sub
jbe
sahf
dec
mov
push
xor
enter
cwtl
fnsave
sbb
pop
pop
mov
mov
cmp
lret
das
inc
pop
ss
mov
cmpsb
sub
loopne
out
dec
out
and
pop
xlat
mov
into
adc
movsb
xchg
div
movsl
cmp
fwait
jle
cmp
xor
in
add
sti
dec
into
jg
jl
add
jnp
cmp
bound
mov
jns
pushl
mov
xchg
push
push
ficoml
sbb
fildl
or
stc
and
and
out
mov
add
mov
rcrl
xchg
sub
xchg
jmp
lahf
xor
test
in
enter
sbb
push
fcmovb
fiadds
lahf
daa
pop
adc
xor
aam
pop
fcoms
xchg
mov
jns
add
fsubr
dec
xor
lods
in
out
push
adc
mov
xchg
ds
cs
mov
xlat
mull
adc
loope
xchg
or
arpl
stos
cmp
std
add
mov
aad
jp
sbb
pop
out
push
add
mov
sub
pop
pop
push
ret
xlat
call
dec
inc
mov
cmc
lock
fstps
or
aaa
sahf
push
out
sarl
mov
inc
xor
iret
repnz
cmpsl
pop
test
push
aas
test
or
cmp
mov
test
lods
jl
std
bound
daa
enter
push
mov
imul
loope
add
inc
popf
iret
loop
mov
ficoml
stos
and
dec
push
out
dec
cld
push
loopew
cmpsb
and
cld
jecxz
aam
addr16
add
or
or
dec
xor
jl
dec
mov
pop
cmpsl
data16
les
xor
xchg
mov
pop
pop
mov
or
imulb
scas
inc
movsb
xchg
aas
dec
mov
cmp
lea
push
sbb
leave
movsb
cwtl
pushf
icebp
cmc
aam
inc
mov
cltd
ss
inc
fs
in
jnp
sahf
fstpt
cmpsl
mov
mov
lret
mov
adc
jp
xor
js
aaa
xor
lret
and
jno
cmp
or
lock
daa
sarl
add
push
popf
push
es
ljmp
sbb
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
testl
in
jo
lahf
jge
jo
lock
mov
xor
std
jge
adcl
inc
inc
dec
fisttps
jnp
adc
iret
sahf
xchg
loope
dec
adc
icebp
inc
imulb
shll
stc
les
aad
aas
sub
aad
aas
cltd
out
outsl
cmp
loop
stos
adc
out
hlt
das
mov
test
rsqrtps
ds
jbe
adc
call
test
fcompl
lock
es
cmpl
lret
sub
mov
scas
xor
xor
mov
push
test
faddl
adc
add
or
mov
gs
out
leave
xor
in
roll
movsl
stos
ja
cltd
and
xchg
nop
jmp
out
test
mov
push
aad
pop
aad
mov
pop
jbe
into
pop
sahf
stos
jg
add
mov
jno
push
mov
imull
insl
mov
int
push
sti
and
dec
ret
testb
imulb
adc
jb
sub
lret
jnp
imul
insl
add
jl
inc
repnz
sub
lea
push
popl
jl
jno
ret
hlt
dec
fadds
push
xor
mov
cmp
aas
xchg
cmp
movsb
jp
mov
cmp
jl
js
push
jge
sbb
fisubl
xchg
jmp
dec
xor
jmp
push
xchg
jae
imul
push
mov
sub
sbb
outsb
push
jae
imul
pushf
and
and
aad
dec
in
push
ds
test
hlt
sbb
in
mov
movb
int3
push
cmpsl
jecxz
mov
cmp
adcb
pop
push
stc
sbb
sbb
sub
int3
mov
sbb
add
orl
or
test
sbb
fwait
out
clc
push
dec
cli
pusha
das
and
fs
insl
adc
ret
jmp
bound
push
lods
sar
rorl
les
imul
sub
sahf
jae
ljmp
ret
insb
stos
dec
cld
push
sub
sbb
mov
test
adc
jle
in
and
mov
push
adc
sub
push
dec
xchg
pop
adc
xchg
adc
stc
mov
aam
in
fs
mov
daa
pop
and
mov
cmp
sub
das
adc
sbb
cmp
test
scas
sub
push
in
push
cmp
or
ret
jp
xor
mov
xchg
lret
adc
das
mov
mov
mov
loop
ja
pusha
div
push
in
pop
ds
addr16
das
mov
jmp
and
loope
mov
movsb
hlt
mov
jp
xor
mov
mov
fldcw
and
cmp
enter
loopne
cmp
incb
adc
sub
jle
add
mov
add
movsl
int3
cmp
jo
scas
loope
call
pop
in
fs
cmp
adcl
pushf
jge
pop
sub
stc
movsl
push
mov
jne
outsl
mov
int3
pop
ds
pop
jg
jo
xchg
loop
stos
scas
cmp
insb
pop
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
movl
jo
lahf
jge
jo
bound
shll
mov
ret
push
mov
dec
in
cmp
fldt
fwait
lods
sar
movsl
jmp
mov
add
mov
mov
jge
mov
cmp
add
scas
add
mov
jp
or
repnz
jp
cmpsl
jns
gs
ja
ljmp
mov
add
jecxz
pop
cmpsb
repz
rcrb
mov
nop
nop
outsl
adc
xor
pop
or
je
mov
test
jecxz
push
jecxz
shlb
andb
in
and
mov
jg
push
sub
ret
stos
mov
pushf
ret
sub
add
jp
imul
push
jg
push
mov
out
mov
and
loope
pusha
adc
dec
push
icebp
std
mov
mov
mov
dec
or
dec
and
stos
roll
imul
xor
ds
dec
pop
xor
jnp
pop
adcb
lds
js
xor
out
jo
xor
clc
insb
cmpb
int3
sar
insl
test
outsl
in
xor
or
mov
xlat
xchg
sbb
stc
ret
jp
int
lcall
out
imul
ljmp
loopne
mov
jmp
iret
lock
ret
push
jns
xor
mov
cld
loop
ja
pop
jne
jne
sbb
mov
mov
inc
mov
or
clc
mov
fs
icebp
imulb
fldenv
imul
fidivrl
dec
add
push
fwait
xchg
enter
ss
int
pop
insl
or
imul
call
mov
scas
xlat
ja
aas
sub
or
icebp
push
fwait
in
aas
cs
push
ret
out
pop
int
repnz
or
pop
or
inc
ljmp
shlb
adc
int3
sahf
push
xchg
or
pop
adc
jb
dec
repnz
sub
inc
sbb
pop
popa
jbe
pop
scas
call
arpl
in
cmpsl
movsb
stos
ds
lahf
es
int
mov
fcompl
push
mov
int3
push
add
mov
or
add
scas
add
xchg
jle
xchg
ret
add
push
and
and
popf
popf
subb
mov
cmc
stc
lret
jmp
push
dec
push
push
mov
mov
lock
xchg
stos
or
pop
movsb
cmp
xchg
enter
icebp
mov
fnstcw
mov
outsl
pop
into
xchg
push
mov
sub
jle
and
shl
cmp
pop
icebp
xor
xorb
stc
cmpsb
cmp
jl
cmp
outsl
cmp
xorl
test
cli
fiaddl
div
add
mov
dec
fcoms
sahf
pop
sbb
cwtl
inc
xchg
hlt
xchg
jg
insl
jmp
jecxz
loope
and
data16
stos
loopne
pop
sub
rcrl
ss
clc
stc
stc
pop
loope
adc
cli
cmp
pop
mov
xchg
enter
dec
mov
mov
idivl
outsl
pop
mov
sub
sti
inc
repz
inc
fdivs
mov
adc
sbb
cmp
xchg
mov
jge
inc
pop
imul
insb
std
movsb
cmc
imul
test
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
loop
gs
cmc
jo
lahf
jge
jo
jmp
mov
push
mov
xor
pusha
or
ret
xchg
cwtl
mov
scas
jbe
push
sub
insl
xchg
inc
rol
ss
loope
push
jnp
jne
popa
scas
xor
add
adc
sub
mov
fwait
sbb
in
test
jae
xchg
jnp
adc
add
pop
xor
dec
mov
iret
inc
add
out
pop
mov
aaa
xchg
xchg
int
lret
adc
mov
pusha
mov
pop
jnp
add
adc
js
pop
ficompl
sub
cli
mov
push
mov
arpl
movsb
ret
imul
xor
jmp
xor
fimuls
mov
lcall
push
sub
cmpsb
or
jnp
ja
int
movsl
cs
test
inc
clc
dec
sbb
add
repnz
inc
loop
sbb
out
push
dec
aam
je
negl
adc
shll
push
stc
ljmp
or
out
xlat
jp
fidivrl
sbb
adc
das
mov
scas
mov
lods
or
jno
sahf
hlt
movsl
scas
and
jp
lret
sbb
xor
ljmp
sub
jno
pop
out
mov
cmp
inc
shll
nop
es
lcall
inc
std
ds
call
into
sub
jmp
xor
mov
movsl
aam
pop
js
jge
nop
xchg
ds
inc
imul
outsb
cli
xor
in
out
jecxz
cwtl
rcrl
int3
movsb
int
add
xor
xlat
std
mov
sub
pop
inc
imul
lock
popf
add
inc
sub
xchg
fdivr
push
pop
fwait
adcl
int3
lock
add
inc
jmp
push
adc
push
or
stos
push
es
das
mov
pop
push
test
sbb
shlb
and
or
jecxz
xchg
cmp
sub
fisttps
cmp
sahf
cmp
dec
pop
dec
testl
loop
jbe
fisttpll
andb
push
sbb
in
mov
movsl
sub
dec
leave
xlat
out
sub
push
push
and
jge
mov
mov
test
test
inc
in
pop
xorb
pop
xchg
loopne
fucomp
rorb
aas
iret
popf
or
or
sub
jns
jne
es
push
insl
mov
pop
xor
push
aad
sbb
es
lret
add
shrl
repz
notb
mov
jbe
dec
sub
and
movups
inc
and
lds
das
adc
add
pop
and
push
dec
jo
mov
xor
sbb
sbb
adc
icebp
mov
inc
stos
paddd
imul
imul
addr16
adc
xor
xor
pop
cmp
imul
add
fisubrl
cmpsl
fwait
sbb
mov
fs
inc
jmp
popa
rcl
adc
into
jbe
jnp
loope
adcl
dec
push
sub
stos
scas
sub
push
fdivs
xchg
push
bound
mov
or
in
int
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
push
sub
in
jo
lahf
jge
jo
add
add
lret
enter
sbb
in
xchg
cmpsl
push
mov
fisttpl
cmp
and
lret
fcoms
fnstenv
shrl
lcall
hlt
mov
xchg
xor
out
add
leave
pop
sti
flds
mov
rorb
pop
push
pop
cmp
and
mov
adc
cmpsb
out
or
outsl
pop
push
sbb
mov
xchg
fistps
adc
outsl
ret
push
orl
dec
je
xchg
sub
cmp
pop
lock
pop
ds
stc
dec
ds
lods
bswap
mov
insb
dec
cli
xorb
dec
cmpsl
lcall
fcomps
lds
or
pushf
inc
fisubrl
cli
out
jecxz
test
dec
cs
fistpl
ja
jp
push
pushf
cmc
out
lock
cmp
mov
mov
ljmp
and
frstor
dec
je
ljmp
shl
pop
mov
lret
cmp
xorb
push
dec
fsts
inc
je
gs
hlt
or
mov
negl
jbe
faddl
jne
ljmp
rcpps
jae
pop
mov
mov
jb
inc
pop
sti
mov
test
push
icebp
cwtl
stos
push
mov
neg
sbb
or
jns
js
subl
cld
sub
xchg
cmp
mov
lahf
push
mov
inc
test
add
add
xor
xor
mov
sbb
push
push
sub
sub
xor
mov
jle
adc
lcall
cmp
aam
sub
cmp
in
int3
fstpt
mov
dec
sub
sbb
sbb
xor
cmp
inc
mov
fildll
mov
sub
push
jb
lds
lds
decb
sarb
pusha
adc
push
sbb
les
mov
mov
addl
lds
sub
pop
popf
inc
aam
sbb
iret
sbb
lea
iret
or
aad
jo
icebp
std
pop
mov
xor
pop
or
sbb
cmc
or
push
adc
add
jl
ljmp
mov
mov
aas
ret
mov
in
or
mov
adc
repnz
cmp
gs
mov
mov
leave
cld
iret
cli
mov
outsb
ljmp
inc
adc
pop
cmpsl
ror
cmp
sub
inc
push
rol
lock
lock
hlt
inc
pop
jnp
mov
xor
xor
fcom
and
push
push
out
pop
subb
push
xor
push
mov
xchg
dec
mov
popf
stos
clc
ror
push
popa
fs
sbb
mov
mov
xor
adc
push
out
adc
and
or
sbbl
sbb
mov
aas
xchg
cmpl
cmp
xor
sub
xchg
pusha
lods
pushf
loope
mov
jecxz
dec
push
dec
jbe
cmp
xor
fdivs
rolb
xchg
ds
and
cli
cld
fmuls
iret
adc
arpl
fidivs
push
cmp
cmp
divl
rolb
add
out
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
jb
pushf
add
jo
lahf
jge
jo
in
hlt
add
adc
outsl
mov
scas
mov
jae
enter
xchg
lock
iret
push
out
mov
jl
and
cmp
xor
sbb
testl
xor
xor
popf
stc
jae
pop
xchg
push
adc
or
sub
aaa
xchg
pop
sub
xchg
push
popf
repz
mov
jne
movsb
shl
push
or
bound
xchg
pop
into
sub
call
jp
sub
sub
and
jmp
out
mov
adc
mov
jmp
add
lea
jge
sub
pop
test
or
pop
jns
hlt
cmp
dec
insb
sbb
pop
mov
inc
xor
push
lock
pop
imul
daa
cwtl
shl
cld
shlb
adc
jb
stos
cs
dec
pop
mov
adcb
xchg
js
mov
repnz
testl
push
cmpsb
repnz
mov
push
jecxz
and
popf
xor
lods
sbb
jae
push
dec
ljmp
inc
sub
popf
movsl
es
push
cli
lods
mov
fwait
aaa
out
test
movsb
push
sub
mov
xchg
add
insl
push
fldl
dec
mov
dec
mov
sub
roll
mov
sub
repnz
cli
push
xchg
or
adc
cld
jle
cmc
jg
and
int3
mov
xchg
mul
scas
xchg
lea
sbb
es
xchg
mov
outsb
push
cmc
mov
dec
fs
push
nop
xchg
cmp
mov
add
cmp
xchg
adc
add
sti
mov
xchg
cs
in
imul
test
jmp
xor
aaa
imul
and
cmp
int
and
xor
subb
lds
xchg
mov
pop
or
repnz
pushf
add
mov
cmpsb
sub
sbb
pop
scas
sub
push
scas
inc
pop
cmp
mov
pop
xor
mov
mov
bound
mov
fwait
mov
jo
out
push
mov
fisubl
sub
movsb
aas
sbb
push
jns
add
push
inc
int3
inc
dec
xchg
popf
jecxz
mov
test
stos
out
cmp
fwait
and
mov
mov
mov
sbb
pop
fidivrl
xor
lret
inc
daa
dec
push
sbb
push
xchg
mov
jae
jae
das
shlb
pop
js
adc
movsl
stc
ss
pop
cld
fisttpll
mov
inc
outsl
push
bnd
ja
dec
push
dec
xor
add
and
out
inc
js
xchg
push
jb
subb
addb
in
cs
gs
ljmp
jle
xor
rolb
inc
iret
daa
sbb
js
arpl
sbb
inc
mov
mov
mov
xor
pushf
pop
jg
mov
popf
adc
push
jecxz
mov
loopne
mov
ljmp
or
xlat
fsubrl
mov
inc
int3
xor
inc
sbbl
les
mov
adc
dec
mov
xlat
jbe
mov
sub
dec
add
sub
xchg
xrelease
add
add
jne
sub
lret
adc
jo
lahf
jge
jo
sbb
mov
std
sbb
and
sub
push
outsb
push
lret
inc
stc
mov
mov
xchg
cmp
call
xor
dec
add
xorl
rolb
ss
mov
adc
loopne
push
pop
xchg
mov
outsl
imul
int3
jbe
cmp
mov
sti
loop
sub
cld
xlat
cli
cs
push
in
mul
cld
cmp
and
mov
outsb
mov
dec
popa
inc
movl
jb
fld
pop
mov
xchg
test
add
mov
ret
lods
push
inc
jmp
ja
lret
mov
jl
fwait
adc
xor
sub
fsts
pusha
into
inc
cmpl
xchg
imul
pop
sbb
xor
jl
movsb
in
fldl
ss
enter
popf
mov
mov
jne
xlat
mov
leave
sbb
ficoms
pop
cmpsl
jns
dec
fldl
jae
fwait
jno
pop
insb
inc
xchg
mov
mov
mov
lret
push
push
mov
pop
cmpsl
fs
shlb
in
stos
shll
arpl
into
pop
adc
xchg
lcall
cli
ret
das
mov
nop
fbld
mov
xor
fstps
shr
repz
cmp
dec
test
sbb
pusha
mov
pop
test
jo
aas
ss
mov
int
sub
cmp
cmp
mov
xor
sbb
add
les
insl
mov
push
das
call
pop
or
push
ja
sbb
push
clc
add
jecxz
bound
test
hlt
pop
mov
rorb
fs
test
sbb
stc
fdivrl
outsb
xchg
out
mov
dec
mov
jecxz
out
icebp
dec
jl
jle
push
popl
and
cmpsl
inc
cltd
sti
cmp
push
lods
xchg
imul
scas
mov
leave
mov
or
sbbb
add
ja,pn
fwait
add
adc
jecxz
jl
popa
mov
mov
frstor
je
je
fidivs
sub
sub
add
cmpsb
adc
call
test
sub
jnp
sahf
jns
mov
mov
xor
es
into
mov
pop
jo
jg
cmp
xchg
imul
mov
pushf
pop
ss
repnz
jo
cmp
out
cmpsb
gs
sarl
fistpll
fsubr
pop
fdivs
push
jb
jg
push
hlt
es
dec
add
into
stos
and
dec
xor
mov
sub
testb
jle
mov
out
mov
inc
ret
and
mov
dec
scas
enter
fucomi
cmp
push
pop
adc
xor
inc
sahf
mov
pushl
jnp
popl
mov
adc
outsl
and
out
dec
aas
jge
sub
and
jae
sahf
jne
dec
mov
adc
sbb
xor
push
push
mov
int3
push
or
sti
sub
xchg
enter
mov
mov
or
outsb
inc
subb
xor
popf
add
jle
mov
xor
into
popf
inc
mov
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
mov
xchg
lahf
jge
jo
and
cmp
test
in
cmp
cmp
pop
adc
push
lods
out
enter
pop
push
lret
mov
mov
in
xor
dec
dec
inc
mov
loop
sub
lcall
lock
daa
dec
int
mov
int3
mov
fst
fldt
pushf
inc
pop
mov
decb
test
sbb
lds
shr
aaa
js
push
rol
xor
sbb
jmp
mov
aam
dec
stos
xchg
aam
pop
insl
movsb
movsb
jge
xchg
loope
xor
xchg
into
push
repz
cltd
inc
repnz
or
addr16
xchg
dec
and
push
or
mov
mov
sub
mov
xchg
cmp
jne
mov
pop
mov
dec
add
and
xchg
or
cmpsl
pusha
inc
fldcw
cs
out
jne
and
dec
popf
arpl
lret
pop
fcompl
fsubs
and
mov
cmp
repz
sahf
jecxz
scas
ficoms
sbb
lret
cltd
inc
repz
adc
pop
daa
pop
dec
mul
dec
mov
dec
test
lods
push
ss
test
or
xchg
stos
data16
jle
repnz
enter
mov
pop
xchg
fstpt
fistpl
lock
jl
out
out
das
sub
cmpsb
push
pop
xchg
pop
mov
shlb
lods
fcoml
dec
adc
push
popf
adc
add
insb
xor
cmp
xor
jbe
into
xchg
loope
inc
push
icebp
mov
into
jecxz
sbb
push
into
out
sub
les
jge
sbb
adc
pop
mov
out
xlat
jmp
dec
in
cwtl
daa
jae
and
mov
aam
stos
pop
push
addr16
mov
add
xor
stc
js
addr16
sti
or
imul
cwtl
stos
test
xchg
in
xlat
or
pop
sbb
jge
fidivl
cwtl
and
ds
dec
xlat
push
mov
fs
fiadds
mov
cmc
and
cli
push
add
sti
and
push
icebp
fbstp
int3
cmp
push
mov
cld
sbb
jbe
adc
scas
mov
jne
push
lcall
sub
mov
stos
and
mov
cs
lds
xor
scas
and
imull
rclb
std
dec
jl
mov
cmp
mov
push
or
rclb
sahf
push
xor
add
mov
jge
or
sub
lods
and
fdivs
mov
test
arpl
loopne
dec
std
or
outsl
ja
cmp
aaa
sub
jmp
aad
clc
jle
popf
mov
pop
icebp
fisubl
jno
popfw
enter
cmpsl
pusha
push
stc
std
add
add
loopne
mov
xchg
les
adc
mov
es
out
outsb
in
lret
pushf
jg
push
mov
or
shrb
or
in
out
int3
cwtl
or
aam
and
popf
cwtl
loop
fsts
test
mov
cwtl
push
xchg
loop
xchg
ja
dec
cld
sub
orb
mov
and
dec
mov
enter
cli
push
iret
push
ret
leave
lods
dec
inc
aad
jae
iret
xor
dec
pop
sub
jnp
push
cmc
jmp
es
mov
jno
mov
pop
pushf
outsl
jo
jno
repz
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
adc
xorl
jge
jo
cmc
jp
or
xchg
fldcw
mov
dec
dec
fisttps
jp
push
jl
push
stos
dec
and
or
add
xor
sub
daa
mov
lret
mov
pop
lods
or
and
fwait
pop
aad
sahf
xchg
daa
mov
xchg
or
pop
loop
ja
arpl
popf
fistl
fucom
inc
les
data16
mov
lcall
fsubrl
addr16
push
add
xchg
and
jecxz
xchg
inc
jge
fldenv
fildl
xor
sub
jp
sbb
add
pop
xchg
mov
bound
jmp
sbb
dec
sbb
sbb
sbb
cmp
push
in
jp
mov
or
lahf
out
cmp
inc
or
dec
mov
loop
jge
xchg
mov
ret
or
test
es
es
push
pop
add
sub
popw
xor
mov
popf
cmp
lods
iret
aad
ja
jg
inc
jbe
mov
iret
add
outsb
ficompl
adc
test
add
insb
dec
mov
mov
cmc
or
repnz
insb
inc
icebp
sahf
call
movsl
jecxz
arpl
lods
ret
aas
jecxz
jnp
clc
std
mov
lods
lock
pop
ja
lret
inc
mov
jo
outsl
cmp
inc
mov
enter
leave
mov
sub
and
push
or
push
cld
lcall
ss
cltd
retw
sahf
cwtl
stos
push
ficoms
lret
pop
jg
sbb
jb
mov
sub
bound
mov
clc
repz
in
jecxz
adc
sub
add
xchg
cs
je
cmc
ret
sub
jne
inc
mov
cmp
pop
sub
adc
popa
mov
jl
mov
jbe
repz
jle
mov
jo
push
out
inc
stc
clc
sti
aaa
out
sti
pusha
stc
sbb
adc
iret
mov
mov
movl
loopne
popa
cli
xor
inc
sub
mov
test
popf
movsl
mov
push
jnp
and
xchg
sti
add
mov
adc
jno
sti
repz
icebp
dec
and
sarl
xchg
dec
rolb
jbe
sub
xchg
adc
call
lcall
mov
jl
pop
xor
add
aad
test
repz
mov
sbb
xchg
sbb
push
cli
jl
jecxz
jae
pushf
movsl
pop
pop
jbe
mov
ljmp
out
push
pusha
mov
mov
xchg
inc
adc
mov
inc
loopne
fcomp
fcoms
pxor
imull
push
in
or
mov
mov
jle
int
sub
je
add
leave
jns
mov
out
int
insb
or
push
int
sub
ret
ret
in
mov
ret
lcall
or
gs
jb
pushf
nopl
add
cmpsl
sub
mov
jge
mov
fisubrs
jp
inc
inc
sbb
sbb
push
jbe
add
lret
pop
jb
incl
negl
inc
dec
cld
mov
adc
test
popa
cmp
push
cltd
shll
repnz
flds
iret
sarl
and
cltd
push
lods
inc
sbb
inc
fisttpll
call
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
lahf
jge
jo
ja
add
adc
sbb
scas
push
push
mov
adc
fdivs
pop
xchg
jo
mov
fs
push
stos
xor
repnz
xor
test
dec
addr16
out
xor
nop
sub
cs
push
xor
jle
fs
xchg
adc
dec
ret
addr16
fsub
mov
add
jmp
inc
dec
leave
xchg
jle
jp
mov
rorl
movsl
mov
xchg
dec
mov
xchg
xor
sub
or
ret
je
dec
mov
test
in
pusha
stos
adc
xor
dec
add
pusha
aas
roll
loop
decb
int3
stc
mov
jae
adc
mov
aas
mov
repnz
ss
aas
jge
xchg
or
mov
int
add
test
adc
xchg
xchg
xor
fxch
mov
pop
dec
out
loop
sub
adc
mov
push
add
jge
rol
mov
adc
inc
mov
xchg
pop
mov
scas
inc
out
das
add
aaa
cmpsb
int3
mov
inc
sbb
lcall
movsl
mov
dec
icebp
xchg
icebp
mov
ljmp
aaa
jnp
popw
xorb
jmp
out
out
mov
cmp
sahf
jg
dec
lret
adc
out
ds
or
mov
loope
add
push
ja
push
sbb
mov
mov
test
fadds
mov
push
dec
xchg
aaa
popf
cmp
scas
mov
stos
cmp
ficoml
clc
dec
aaa
mov
lods
mov
pop
mov
in
mov
adc
jle
push
pand
cmp
mov
adc
jecxz
js
mov
pop
sbb
xchg
stc
add
lret
int3
sbb
in
jno
gs
adcl
xchg
int3
pushf
insw
dec
jmp
mov
mov
out
je
dec
popf
test
jns
addr16
push
clc
add
push
xchg
add
call
jge
nop
push
dec
or
adc
sub
or
scas
out
cmpsb
inc
pop
ret
mov
sub
imul
in
outsb
push
jecxz
shl
stc
add
test
arpl
out
icebp
mov
popa
in
jne
mov
add
sbb
cmp
movsl
hlt
jge
das
pop
cli
cli
sub
fistps
sub
cmp
fisubrl
bound
xchg
nop
jp
inc
in
or
mov
mov
mov
decl
adc
push
into
jbe
fs
pop
dec
ds
es
lahf
rclb
inc
aad
ret
sbb
xlat
jo
fimull
movsl
dec
stos
push
inc
mov
dec
sub
add
clc
jne
mov
sbb
clc
and
enter
arpl
fidivrl
fldcw
movsl
lret
mov
insb
push
cwtl
push
leave
sbb
test
jne
das
fmulp
or
or
daa
bound
into
nop
out
loope
cmp
adc
in
lods
das
pop
mov
mov
or
popa
cld
jnp
pop
in
and
cs
sti
fwait
jl
and
ljmp
es
enter
rdpmc
neg
adc
pop
and
sub
xchg
xchg
xchg
into
fs
aam
pop
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
dec
jge
mov
lahf
jge
jo
fsqrt
dec
cwtl
cltd
and
addr16
cmp
jg
lods
mov
fnsave
mov
jmp
inc
inc
into
jp
cld
mov
arpl
push
adc
push
and
pop
dec
sar
dec
pop
lret
aad
je
sub
push
push
xorb
fstl
and
in
aad
cld
call
icebp
jb
mov
cmp
jl
add
decl
lahf
jge
enter
or
push
add
das
sbbl
fistpl
xor
xor
sub
orl
daa
js
popa
test
inc
or
outsb
imul
in
out
popw
xchg
mov
sbb
pop
rcrl
ljmp
sti
dec
fistl
leave
das
mov
push
pop
ror
mov
imul
scas
jmp
xor
push
ret
daa
scas
cmp
ss
stos
fs
cmp
mov
out
adc
outsb
loope
lods
call
sbb
decl
ja
cmp
fisttpll
stos
mov
inc
cwtl
into
cmpsl
in
loope
adc
jle
inc
or
mov
adc
stos
xchg
mov
xor
cmc
in
push
sarl
push
jle
mov
xor
aas
and
xor
push
enter
cmpsb
les
out
jle
cmp
or
mov
cltd
ss
cltd
push
aaa
adc
xchg
adc
push
xchg
mov
sub
push
xchg
sbb
adc
test
addr16
xor
aas
push
inc
leave
or
arpl
cmc
ja
mov
mov
push
mov
jg
mov
les
hlt
addr16
mov
scas
mov
dec
dec
scas
cmp
jno
iret
cmp
jbe
mov
lods
inc
fcoms
setne
jo
and
test
jg
or
jb
push
cwtl
sbb
xor
mov
or
xchg
int
ret
cmp
cltd
in
sub
sub
cli
xchg
pop
fs
in
cmp
cld
testb
mov
inc
mov
inc
xchg
test
sub
iret
cmp
inc
outsl
in
test
pop
inc
pop
jo
mov
jp
push
call
xor
push
imul
cltd
fidivl
jl
loop
fnstsw
test
inc
xchg
adc
ret
mov
adc
std
shlb
sub
jl
xor
sub
xchg
dec
dec
stos
imull
mov
mov
inc
mov
aad
xor
cmp
mov
inc
fcomi
jp
push
mov
adc
push
dec
sarl
xchg
pop
pop
xor
pop
ret
xchg
xchg
pop
sub
mov
push
dec
push
sbb
hlt
pop
sbb
and
inc
cmp
sbb
lock
sarl
xor
fistps
iret
pop
andl
pop
push
sbbl
lcall
lods
mov
sbb
aam
mov
and
rcr
pushf
lods
jmp
dec
xchg
dec
adc
loop
mov
je
inc
je
outsl
daa
jnp,pt
cli
int3
jns
loope
lret
mov
mov
cmp
mov
insb
adc
push
cmp
test
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
pop
sub
dec
dec
mov
lahf
jge
jo
mov
pop
movsb
fadds
xor
ret
test
aas
mov
cmp
pop
je
jb
push
jp
mov
shll
jno
test
pop
jns
int3
add
inc
out
nop
cmp
test
mov
fisubrs
adc
repz
fldcw
xchg
mov
arpl
and
test
push
mov
pop
inc
inc
outsb
fstpt
cltd
jae
cmp
popa
ja
xchg
jg
and
mov
in
scas
ds
sti
jg
dec
outsl
sbb
sarb
movl
jg
jne
mov
push
adc
sbb
jp
outsl
cltd
stos
out
jp
shlb
arpl
in
sti
inc
xchg
in
inc
or
sub
mov
add
xchg
clc
cwtl
sbb
shll
mov
xor
pushf
mov
push
test
stc
aam
dec
push
cmp
fsubrl
cmpsb
push
fnsave
in
inc
push
test
cmp
jno
addr16
rcrb
sub
add
and
xor
xchg
stos
loope
out
arpl
stc
lahf
dec
stos
int3
inc
test
or
xlat
pushf
in
pushf
iret
xlat
xchg
inc
push
jl
ja
bound
xor
xchg
dec
dec
ja
xor
fnstcw
mov
xchg
aaa
jp
pop
push
lahf
inc
enter
outsb
xchg
adc
push
mov
scas
jne
in
dec
jmp
mov
cltd
xchg
pop
add
xchg
mov
push
int3
std
pop
dec
adc
push
test
sbb
sbb
dec
testb
scas
test
cmpsb
dec
mov
sarl
in
sub
out
insl
pop
sbb
out
inc
loope
dec
in
sbb
sti
xchg
adc
xor
rcrl
xchg
inc
les
loop
dec
jg
xchg
lea
hlt
dec
mov
or
and
fnstsw
and
xor
adc
daa
cs
out
test
pop
gs
push
fldenv
adcl
jne
cmc
addr16
lock
xor
xor
mov
out
jg
insl
adc
fsubl
cmp
xor
push
hlt
dec
xchg
mov
imul
shlb
xchg
shlb
scas
jecxz
movsb
jecxz
cltd
cmovge
nop
add
cmp
rorl
shl
and
sub
in
aam
in
adc
shll
mov
xor
push
fcmovu
adc
jge
lds
and
xor
insb
out
rcr
sub
pop
enter
out
ljmp
xor
cld
xor
movsb
cmp
cwtl
add
lret
mov
cmp
mov
outsl
test
pop
pop
mov
sub
setp
lods
int3
std
fsubs
mov
leave
push
pop
xor
inc
cmp
lcall
out
sbb
outsl
inc
std
cmc
aas
outsb
mov
adc
push
or
test
lods
cltd
dec
test
out
mov
xchg
ja
es
loopne
js
outsl
scas
pop
fs
pop
xchg
jnp
nop
lret
sub
mov
lret
dec
xor
arpl
push
pop
lcall
mov
dec
jecxz
jbe
dec
adc
mov
or
pop
xor
cmp
xchg
call
in
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
int3
or
cmp
xchg
jo
lahf
jge
jo
cmpsb
cmpsl
fwait
sbb
int3
cmp
loop
pop
jg
andb
pop
pop
test
movsl
and
xor
scas
adc
scas
adc
pop
mov
in
dec
adc
dec
adcl
pop
icebp
xchg
dec
mov
popf
or
sub
in
mov
xchg
inc
dec
lea
int3
jae
mov
mov
movsl
mov
mov
xchg
adc
cmp
jle
sbb
jne
rolb
push
add
dec
adc
xchg
call
imul
sub
add
sbb
jb
cld
jmp
fsubrs
dec
xchg
jp
cwtl
shll
jmp
pop
push
push
mov
dec
stc
mov
mov
stc
sbb
fsubs
stc
cmp
jb
in
scas
mov
mov
xchg
jbe
pop
ja
mov
mov
loop
push
enter
cmc
call
sbb
push
add
call
pop
push
xor
cmp
pop
cmp
in
jae
push
cs
divl
cltd
dec
out
lods
loope
aas
icebp
xchg
sub
repnz
stos
loope
cltd
add
rcrl
xor
ds
inc
shrb
sti
mov
insb
inc
push
xchg
and
inc
ds
jecxz
fstps
pop
fisubs
in
and
addr16
movsl
adc
enter
sub
mov
repz
push
add
or
int
cmpsl
ret
fs
push
dec
and
dec
sbb
sahf
clc
jp
gs
gs
insb
mov
scas
xlat
lea
test
pop
stos
dec
pushf
push
les
adc
jmp
xchg
push
cld
pop
adc
imul
push
inc
fwait
aas
ljmp
jbe
aad
mov
out
ss
cld
cmpl
mov
sti
lock
xor
push
sbb
rcl
add
xlat
subb
fmuls
sub
inc
ja
lret
in
cmp
sti
jg
bound
filds
dec
repnz
adc
cli
loop
rorb
scas
xor
sub
int
push
add
lret
cld
pop
mov
jp
sub
mov
std
add
lcall
add
mov
pop
mov
daa
cmp
jae
cmp
call
jmp
pop
stc
jmp
lods
sub
jge
loopne
cmp
neg
pop
ficoms
vandnps
sub
lock
xchg
stos
push
fnstcw
mov
pop
adc
loop
aad
fcomi
stos
cmp
cmp
sahf
jns
les
jo
xchg
pop
cmp
pusha
daa
sahf
add
mov
and
mov
pop
lods
movsb
xchg
xchg
rcr
xchg
leave
xchg
dec
mov
imul
inc
or
fsubs
inc
mov
push
or
add
sbb
orb
movl
mov
jno
arpl
and
fildl
testb
and
pop
fadds
xchg
iret
inc
outsl
outsl
inc
and
xchg
pop
dec
in
and
mov
jl
es
and
cmp
mov
add
decb
stc
pop
pop
mov
and
inc
outsb
adc
adc
lock
fmull
mov
jb
mov
mov
add
mov
and
sarb
into
popf
jle
mov
in
jl
and
or
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
xor
jb
or
jo
adc
mov
cli
push
xchg
sbb
xlat
loope
jl
scas
push
dec
das
std
jae
lock
and
je
lods
inc
stos
je
scas
jnp
ljmp
push
mov
stos
mov
sub
push
adc
dec
add
stc
and
cltd
iret
mov
mov
push
loop
fs
push
push
xchg
movsl
pop
add
mov
sub
nop
xor
int3
mov
cmp
insl
mov
inc
pop
ret
xor
mov
cmp
add
sub
in
sahf
cmpsb
ret
mov
sub
js
mov
das
jp
in
nop
cmp
jb
icebp
push
out
mov
jae,pt
sar
and
fwait
data16
add
dec
jle
jl
insl
sbb
shr
mov
test
xchg
xchg
push
jb
jnp
mov
sti
dec
mov
call
xchg
cli
xchg
sub
decl
pop
dec
int
and
hlt
pop
sbb
push
std
xor
sub
pop
imul
les
cmp
lods
ficompl
mov
sub
js
sbbb
repz
cwtl
adc
ret
sbb
inc
jbe
test
sarb
scas
cwtl
xchg
into
pushf
xchg
mov
lods
mov
xor
add
cli
push
jmp
mov
adc
nop
dec
dec
icebp
stos
dec
jle
xor
pusha
mov
cmpsb
sub
aam
dec
and
test
sbb
ret
jbe
pop
fisubl
push
cwtl
push
cmpsl
into
pusha
adc
push
dec
and
dec
xchg
insl
lret
add
popf
dec
ljmp
stc
jnp
shlb
leave
lea
mov
dec
mov
push
popa
ret
or
jae
push
xchg
out
jbe
sub
mov
cmp
xor
jle
or
lea
in
cmc
add
add
jecxz
cmpsb
jg
pop
sbb
xchg
add
cmp
test
adc
xchg
xchg
insb
bswap
mov
jne
mov
pop
sahf
adc
dec
bound
dec
outsb
push
aaa
repz
mov
stos
sub
pop
enter
cli
cmp
sub
daa
incl
shlb
lahf
fidivs
rorl
mov
push
aaa
pcmpgtd
loopne
rcll
jno
xor
inc
xchg
add
es
xchg
std
sbb
cmpsb
inc
inc
pop
pop
scas
xchg
mov
or
in
popa
sbb
ja
jae
test
insl
or
mov
test
aas
in
adc
or
cltd
scas
in
js
insl
pop
add
pop
negl
sub
iret
adc
dec
lret
xchg
and
shrb
insb
add
mov
jb
lcall
xor
icebp
enter
rcl
push
mov
cld
ds
popf
mov
inc
xchg
pop
inc
pop
cmp
js
push
sub
xchg
push
pop
and
stos
sti
dec
mov
mov
mov
jg
idiv
sbb
fs
ret
loope
lods
lret
lcall
mov
dec
and
mov
ret
jmp
and
mov
je
test
in
xor
push
cmp
les
xchg
dec
jb
jmp
fnstsw
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
vfmsub231sd
stos
popf
jo
lahf
jge
jo
out
inc
mov
pop
pushf
aad
cmpsb
xchg
push
loopne
inc
mov
pusha
mov
fwait
jmp
popa
test
pop
cmp
xchg
insl
das
fdivrp
xor
jp
adc
lods
xor
mov
sbb
xchg
enter
inc
push
mov
imul
in
lahf
repz
incb
cmpsb
jnp
and
mov
icebp
pop
imul
mov
xor
add
inc
lods
loop
push
enter
pop
xor
jnp
mov
in
jge
sub
sub
lret
push
mov
or
pop
fisttps
pop
les
dec
xchg
mov
push
repz
lock
mov
mov
fcmovb
push
jg
lcall
in
jmp
aam
ror
mov
mov
mov
mov
movsl
jle
lods
dec
iret
adc
notl
in
jno
popf
das
dec
pop
xchg
inc
je
inc
insl
fmulp
loop
dec
xor
ret
xor
insb
hlt
mov
jns
pop
lock
sub
pop
aad
xchg
out
sub
xchg
iret
pop
dec
inc
jg
mov
push
push
add
adc
adc
sbb
dec
xor
xor
shrb
jbe
mov
mov
into
sbb
sarl
mov
cmpsb
xor
mov
push
dec
xor
cmp
mov
or
je
xchg
mov
or
out
rorb
call
xor
mov
addr16
xchg
jg
pop
mov
cwtl
ljmp
or
jo
pop
mov
test
cmpsl
lahf
add
out
sbb
es
ljmp
das
outsl
leavew
push
bound
lods
popa
mov
dec
bound
xchg
loop
sbb
lods
sub
cmpsb
jl
xor
fisubs
sbb
sbbl
xchg
fprem1
int
adc
mov
add
mov
fildl
aas
jecxz
cmp
sub
pop
inc
or
add
lods
inc
fs
mov
cli
adc
sbb
sub
mov
mov
inc
data16
or
cmp
dec
lret
out
in
and
iret
jno
jo
or
push
push
fwait
jmp
mov
out
cmp
inc
out
insl
lods
mov
sub
push
pop
cli
jns
stos
test
fstps
xchg
mov
dec
adc
inc
sbb
mov
push
je
cmp
pop
xchg
mov
je
pop
or
ja
dec
dec
movl
inc
xlat
cwtl
cli
cs
sub
push
loope
in
stc
dec
sub
lret
fstps
adc
cmp
ss
xchg
xor
pop
pushf
mov
cs
nop
ret
adc
mov
filds
ja
xlat
mov
mov
cmp
fwait
out
in
loope
out
add
mov
sub
sbbl
push
xchg
insb
cmpsb
pop
scas
pusha
or
jo
add
out
negl
mov
fbstp
push
not
xlat
out
bound
inc
filds
and
mov
xchg
jns
cmpsl
sahf
jae
push
test
adc
or
jnp
loopne
mov
repz
mov
out
fstps
dec
jne
fcoml
adc
or
leave
test
aad
mov
cmp
lods
jno
jge
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
xchg
add
jo
jge
jo
ds
daa
cwtl
jecxz
pop
pop
xchg
outsl
adc
ret
push
les
sbb
in
sub
sti
test
xchg
ss
cltd
jg
ja
arpl
xchg
inc
call
push
lret
arpl
shl
xchg
jge
jp
popf
ljmp
gs
or
imul
test
mov
or
sbb
mov
pusha
roll
xchg
xor
cld
fbstp
xor
iret
pop
pop
mov
push
jmp
test
sub
jmp
sub
add
and
push
pop
jae
es
mov
lods
enter
shll
or
sbb
pop
or
jb
rcrl
aas
repz
lock
mov
push
mov
test
cwtl
cmp
cmc
call
scas
xor
mov
xor
lret
shlb
movsl
scas
jmp
dec
pusha
lcall
imul
mov
pop
jne
mov
pop
ror
rcll
push
jnp
sahf
ss
cmp
lahf
mov
int
mov
out
es
push
fsubl
add
scas
jae
and
lcall
aas
in
cli
pop
mov
xor
xchg
int3
push
dec
fistps
out
dec
outsb
out
push
test
xchg
mov
adc
fdivrs
sub
sbb
and
lret
jmp
and
or
call
mov
sub
dec
nop
pop
popf
xchg
jg
mov
sbb
out
jle
jmp
fidivrs
fs
jae
orb
jmp
adc
adc
mov
push
jne
add
jl
sbb
push
loope
and
mov
push
cmpps
mov
cwtl
out
les
loopne
ja
pop
int3
fistps
inc
push
push
pushf
mov
cmp
inc
jo
pop
in
vaddpd
fcmove
or
pop
cld
aad
fdivl
cmp
jo
xor
push
test
test
dec
arpl
pushf
inc
push
or
negl
mov
xor
xchg
pushf
push
sub
out
insb
dec
push
bound
xor
cmc
sub
test
clc
lock
lret
out
fmull
fs
adcl
mov
inc
inc
stos
mov
rcrb
out
jbe
push
ljmp
shl
mov
lret
jle
sbb
push
add
fistpl
or
mov
xor
imul
ret
pusha
int3
lret
shl
ret
sbb
cltd
adc
pusha
sub
outsl
cli
inc
int3
mov
cmp
inc
popf
jg
int
das
movsb
or
nop
stos
lahf
push
out
jg
shl
or
lahf
jae
jo
std
inc
mov
mov
mov
rolb
push
cmc
mov
movsl
ret
mov
lods
aaa
sbb
fisttpl
xor
ss
xchg
sbb
subb
out
pop
imul
inc
imul
hlt
mov
xchg
icebp
aas
dec
inc
push
dec
out
sub
xchg
std
lret
shrl
mov
and
mov
mov
xor
loopne
loop
jl
and
mov
sub
sub
shlb
pop
mov
lret
mov
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
jmp
push
jg
jo
fmul
cmp
arpl
mov
fiaddl
xchg
push
push
movsw
xlat
dec
sub
add
ror
mov
mov
cmp
jg
sbb
test
sbb
cld
ja
icebp
mov
cmp
cld
pop
mulb
clc
adc
and
insb
test
mov
jbe
out
addr16
jno
sarb
push
scas
and
rcr
push
adc
and
adc
mov
xor
mov
enter
mov
mov
fdivp
mov
ret
or
clc
pushf
arpl
in
stos
shll
mov
scas
and
push
push
jnp
pop
dec
scas
lea
pushl
mov
mov
and
pop
repz
mov
pop
push
pushf
cmp
jnp
push
rorl
fdiv
loopne
popf
xor
or
fnstenv
xchg
xor
jl
dec
push
pop
and
cmpxchg
pop
or
dec
sub
mov
dec
in
lds
ljmp
ret
jg
arpl
cld
add
rcll
push
mov
jmp
int3
bound
movsb
cmpsb
mov
sahf
push
sahf
push
stos
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
cs
cmp
movsb
jo
ret
jg
jo
ja
mov
dec
pop
lret
mov
cmpsb
add
fmuls
cwtl
pop
jmp
sahf
imul
aaa
cmp
or
repz
ficoml
cmp
das
jae
dec
dec
mov
fdiv
dec
test
add
pop
nop
cmpsl
aas
mov
pop
ret
insl
dec
cmp
fs
jmp
xchg
in
push
mov
mov
adc
sahf
mov
jecxz
dec
aad
roll
nop
shrl
imul
cmp
dec
fcoms
xchg
clc
push
mov
xor
ss
in
fcomi
imul
stc
in
test
lock
add
movsb
cmp
dec
test
mov
pop
fistpl
mov
xor
mov
mov
jmp
lods
mov
fs
imul
int3
mov
xchg
cmp
lea
js
insb
clc
xor
lock
ret
mov
and
sub
mov
adc
outsl
sbb
cmpl
adc
stos
jb
mov
in
mov
shr
fnstenv
inc
lea
popf
leave
cs
insl
mov
inc
call
and
lea
mov
jmp
rorl
sbb
jnp
mov
jo
repz
jmp
roll
jmp
ret
mov
jp
pushf
cmp
enter
push
mov
sub
mov
xor
mov
xorl
and
pop
inc
lods
dec
add
test
and
js
loope
xchg
test
lds
scas
or
push
cld
lcall
and
test
dec
sub
cmp
aaa
mov
movsb
insb
push
lds
nop
jmp
outsl
lcall
lock
jo
adc
fcmovu
mov
sbb
loope
adc
jb
jp
das
add
cmp
js
cmp
imul
movsb
sub
push
lret
xchg
mov
and
and
push
mov
rcrl
mov
cmpsl
push
sub
push
jl
mov
pop
mov
cmp
daa
mov
cmp
mov
lret
dec
mov
fdivs
imul
js
push
pop
cli
mov
cmp
sahf
lock
inc
outsl
cwtl
lds
leave
inc
push
pop
fildl
into
sbb
cs
insl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
sbbb
push
mov
jo
cs
mov
mov
adc
xchg
mov
fstps
add
sahf
cmp
movsl
cli
sbb
push
mov
add
jecxz
mov
mov
dec
pop
insl
sbb
push
test
vmovntpd
mov
or
mov
movsb
inc
xor
dec
cmp
ds
cld
pop
sub
sub
bound
add
nop
sub
or
dec
xor
mov
cmp
inc
mov
pop
or
sbb
mov
mov
sub
add
xlat
movsl
or
jb
sbbl
fistpl
in
scas
les
dec
test
xor
fsub
out
fdiv
xchg
mov
out
rol
xchg
in
lret
xor
ds
jae
fwait
cmc
pop
jnp
ljmp
lods
jecxz
test
stc
adc
es
imul
rorb
lret
arpl
shrl
insb
cli
sbb
push
cmp
xor
das
jge
scas
aad
js
std
sbb
ds
dec
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
add
loop
and
jo
ret
jg
jo
cld
and
rcr
clc
cmp
xor
ljmp
dec
out
cwtl
or
das
aam
mov
xor
ljmp
lret
jnp
out
cltd
or
fidivrs
xchg
dec
xchg
jecxz
adc
outsl
dec
sahf
inc
push
pop
in
inc
dec
bound
jnp
stos
mul
push
jno
fs
addb
cmc
out
mov
enter
cld
out
cli
test
adc
mov
arpl
enter
call
mov
adc
sub
dec
aas
and
test
sbb
in
jg
xor
mov
movsl
ret
jl
and
jno
pushaw
addr16
out
jb
or
mov
xor
clc
lods
or
and
mov
mov
cwtl
int
mov
push
or
adc
xchg
xchg
push
in
jns
dec
or
cmc
popf
cmpsw
notl
mov
or
cmp
jge
jle
std
pop
cmc
lret
cmpsb
xor
push
add
inc
add
in
xchg
sub
std
int
jno
lcall
test
jmp
aaa
adcb
inc
in
int
xor
cmpsl
sarl
dec
sbb
add
add
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
cwtl
clc
pop
imull
jo
and
adc
mov
pop
and
mov
adc
xor
jno
fisttps
loop
test
movsl
adc
and
jns,pn
push
mov
pusha
int3
mov
dec
mov
mov
dec
xchg
pop
test
pop
cmp
loop
mov
pop
iret
push
lcall
lahf
inc
dec
cmpsl
adc
push
out
inc
xchg
xor
cmp
arpl
popa
and
cmp
fwait
call
sbb
dec
mov
movsb
cmp
adc
cmp
jb
nop
xor
adc
ret
in
xor
cmpb
cmp
mov
scas
inc
xchg
dec
in
adc
mov
xchg
out
aad
icebp
pop
sub
mov
out
mov
les
lea
imul
loop
xor
sahf
mov
adc
adc
mov
scas
push
into
mov
push
adc
push
mov
jnp
pop
jge
push
ljmp
ds
std
mov
in
mov
or
push
mov
mov
sti
pop
das
addr16
out
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
dec
sbb
scas
jo
ret
jg
jo
in
and
dec
inc
inc
fdivs
mov
test
xchg
arpl
mov
lods
imul
aam
jmp
adc
add
or
addr16
and
or
mov
or
into
lods
das
jo
inc
icebp
andb
nop
inc
add
stc
dec
jnp
sbb
pop
inc
or
dec
xor
push
pop
out
adc
lods
jmp
rcrl
sahf
pop
mov
jl
sbb
aam
sub
repz
popf
lods
xchg
loope
jl
xor
cmp
popa
cmp
gs
icebp
jl
add
xor
cmpsl
jae
stc
xor
mov
and
xchg
xor
pop
lret
cltd
pushf
setb
sub
fnsave
jp
and
pop
xchg
push
lret
add
push
pop
test
iret
cmpsb
mov
pop
cmpl
fadd
lahf
or
pop
lret
sarl
insb
sub
out
test
loop
jmp
out
fmul
jns
push
scas
icebp
dec
loopne
jb
adc
pop
dec
sub
shll
cmpsb
in
mov
mov
fcomps
and
test
adc
add
add
pusha
mov
movsl
mov
loop
xchg
inc
fisttpl
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
dec
or
or
jg
jo
leave
shll
jbe
dec
rcll
insb
push
aaa
pop
add
mov
std
jb
xchg
punpckldq
sub
pusha
or
xor
dec
xchg
int3
pop
jg
lods
sar
shrb
sar
adc
xchg
in
movsl
jle
addr16
sub
loop
push
jb
loope
repnz
add
fnstsw
subb
push
fst
adc
sbb
xorl
repz
jb
dec
dec
adc
fdivs
movsl
fnstsw
inc
cld
jnp
cmp
adc
xchg
movsl
gs
cltd
iret
icebp
jp
jnp
notl
xchg
sub
mov
sti
lods
out
mov
rolb
rcrb
adc
fdivrp
inc
jmp
pop
push
add
or
lret
mov
setg
adc
xchg
cwtl
lock
sbb
ret
sti
cmp
adc
xchg
imul
xor
insl
adc
push
std
rol
lods
inc
bound
daa
call
inc
jmp
push
mov
lods
push
addr16
push
inc
cmp
pop
mov
xchg
adcl
mov
sbb
jnp
mov
pop
xor
mov
cmp
push
push
xchg
enter
xchg
das
hlt
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
push
inc
lret
stos
jo
ret
jg
jo
add
loope
ret
js
adc
mov
sub
push
sti
out
pop
xchg
sub
mov
loopne
iret
jns
sbb
inc
je
jne
mov
mov
jecxz
ljmp
aam
mov
cmpsb
es
hlt
cmp
or
mov
xchg
out
mov
xor
mov
notl
lock
jno
lret
insw
jle
pop
test
clc
mov
ud0
inc
repnz
mov
mov
xlat
fsub
bound
push
mov
jne
push
sub
call
loopne
divl
dec
cmp
or
pop
jle
mov
andl
inc
add
and
pop
xchg
adc
fs
xor
imull
fdivp
shll
dec
insb
pop
mov
fsubrp
pop
or
add
and
push
negl
ret
test
repz
pop
fwait
jmp
xor
out
ret
add
shrb
and
mov
out
enter
jp
into
xchg
movb
lods
ret
call
int3
fmuls
enter
fldl
ret
idivl
cmpsb
sub
or
aad
dec
push
scas
dec
test
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
lea
adc
jg
jo
insl
idivl
add
bound
xchg
pop
bound
add
sarl
cld
js
push
push
call
inc
sbb
push
pop
inc
out
cs
shl
push
mov
nop
push
imul
rcrb
dec
mov
cmp
je
stos
daa
sbb
mov
iret
aam
mov
sub
inc
ds
mov
out
push
roll
out
push
fisubl
mov
fisubrs
and
aas
test
pop
adc
mov
jae
push
subl
lods
jmp
ret
dec
push
mov
addr16
xchg
int
popf
push
je
or
jl
addr16
sti
decl
insl
xor
aad
es
loopne
adc
call
lods
stc
add
sub
adc
movsl
jae
add
test
in
inc
sub
negb
cmp
js
dec
sbb
repnz
push
gs
fcomip
sti
xor
xchg
jae
cmc
inc
pop
test
push
and
daa
and
icebp
add
out
in
test
pop
ljmp
push
inc
pop
loopne
or
stos
ljmp
subb
cmp
adc
add
in
add
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
shl
insl
clc
les
jo
ret
jg
jo
repz
xchg
pop
jle
xor
sbb
cli
jge
and
pop
cs
stc
cmp
lock
push
sub
jecxz
out
pop
dec
loop
xor
cmp
test
dec
xor
mov
mov
xchg
cmpsl
xchg
scas
adc
add
lock
jle
inc
mov
mov
or
movsb
pop
nop
pop
enter
lret
and
frstpm(287
push
add
sarb
xor
aas
sub
jp
faddl
pop
mov
xor
jns
int3
mov
testb
lods
push
fs
dec
movsl
in
cmp
push
daa
test
out
pop
jo
gs
movsl
mov
rorl
push
adc
stc
ret
enter
jg
or
rcll
mov
sbb
pop
rol
cmpsl
fs
repnz
xchg
dec
rcr
outsl
fimull
push
jmp
inc
adc
fnstsw
arpl
adc
mov
js
lods
xchg
jge
sub
clc
insb
sahf
or
ret
mov
push
dec
xor
cmp
arpl
testl
jmp
inc
gs
icebp
imul
jecxz
adc
cmp
jo
jle
bndldx
xchg
inc
add
cli
xchg
idivl
enter
xor
mov
cmpsl
or
in
iret
adc
jl
movsl
inc
insl
inc
xor
jle
mov
or
dec
stos
test
dec
or
call
push
stos
test
int
cmpsb
xor
dec
sbb
test
aad
test
push
movsb
movsl
push
data16
sub
popa
repz
jno
rolb
xchg
xlat
pop
jg
mov
and
mov
inc
push
sub
ds
les
mov
rorb
outsl
xchg
mov
ljmp
imul
jge
inc
pop
pop
aam
aaa
inc
inc
pop
enter
ret
psubw
bound
cld
push
xor
shrb
int
int3
lock
mov
aad
faddl
jbe
sub
fwait
push
shl
shlb
ficoml
test
mov
add
push
dec
ja
das
stos
mov
mov
adcb
pop
in
lock
sti
pop
mov
sub
or
or
std
idivl
cmp
inc
cmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
sub
jns
mov
jo
and
mov
adc
ja
rcll
sbb
mov
and
in
pop
cmpsl
ljmp
pop
adc
xchg
mov
lods
pop
arpl
mov
in
lods
shlb
mov
js
jl
decb
mov
mov
add
ljmp
inc
xor
fcmovb
push
les
push
push
dec
xchg
cld
addb
fs
mov
mov
rcll
mov
jne
dec
adc
jl
jne
mov
push
mov
cli
iret
test
in
jbe
push
xchg
stos
outsl
js
push
inc
out
leave
ja
idivb
hlt
imul
testb
sbb
stc
sub
jae
fdivs
bound
inc
je
fldl
push
xchg
cwtl
fdivl
and
sbb
adc
mov
sub
cld
shll
or
mov
dec
xor
fisttps
pop
jne
ret
dec
scas
ds
hlt
xchg
dec
push
adc
sbb
pop
sar
je
adc
sbb
or
dec
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
or
pop
mov
jo
jge
jo
push
lods
mov
out
jbe
xor
add
fisttpl
sbb
fdivrs
jmp
mov
xchg
add
mov
push
xor
mov
jecxz
fs
insl
cmpsb
aam
jae
mov
fwait
lods
sub
shll
and
mov
sbb
mov
stc
push
push
jmp
repz
sarl
xor
test
mov
adc
cmp
push
fldlg2
stc
xchg
aad
js
int3
gs
in
xchg
jne
dec
iret
imul
les
push
jg
fldl
and
cmpsb
mov
cltd
cld
js
in
imul
push
and
insl
fcmovnu
sub
gs
jg
adc
cmpsb
test
mov
aaa
or
xor
inc
xor
or
jnp
loopne
mov
push
call
lods
jg
dec
lcall
pushf
xchg
xchg
and
sub
jg
into
daa
mov
dec
xlat
and
jp
ja
ds
mov
or
mov
jmp
dec
adc
xor
cld
loopne
inc
dec
xor
add
or
add
fisubl
fwait
sub
ret
dec
fwait
sbb
ds
sbb
ljmp
rorb
jnp
cld
fdivr
jl
daa
pop
in
into
stos
aas
or
pop
inc
sub
data16
lret
jne
inc
mov
xorb
sub
mov
pop
imul
xor
and
push
add
scas
pop
fwait
xlat
or
aas
or
jns
mov
loope
in
loope
cmpsl
sbb
xchg
adc
sbbl
gs
or
xchg
mov
clc
xor
aam
insl
jne
jae
xor
or
jle
sub
notb
das
pop
mov
cld
mov
mov
dec
enter
pop
sub
or
dec
stos
dec
mov
mov
es
cmp
mov
cli
cmp
out
cmc
mov
dec
les
mov
mov
stos
cmpsl
push
test
jne
fwait
out
push
sbb
in
add
inc
in
xchg
lods
jb
outsl
imul
xorl
and
popa
or
jnp
or
aam
mov
push
sbb
je
call
cli
mov
outsl
xor
ret
popl
stos
push
xor
aas
sub
ds
cmpsl
push
or
sbb
mov
jnp
xor
es
cmp
add
aad
int
movb
push
lds
stc
cltd
cmp
mov
mov
ja
iret
ret
pop
jae
loopne
shrb
adc
lahf
adc
into
popa
std
pop
xchg
cwtl
add
xchg
jge
enter
cmp
lock
pop
insb
mov
or
adc
enter
loop
xchg
xchg
mov
movsl
pop
inc
xor
pop
in
mov
jge
push
outsl
or
lahf
jmp
pop
push
push
shll
add
mov
and
sbb
popf
inc
ja
sub
jge
jbe
push
jae
in
xchg
lock
call
icebp
out
fisubl
push
jns
xchg
push
or
outsl
xchg
xor
sbb
add
mov
pusha
fstpt
call
in
sti
xor
ja
push
negl
jmp
mov
cli
xor
testb
mov
jo
mov
xor
push
sti
mov
stos
jbe
fisttpl
sub
pop
mov
fistps
cmp
inc
push
xchg
mov
push
adc
jnp
or
mov
int
adc
clc
les
int
dec
adc
xchg
js
jns
sub
imul
roll
outsl
mov
adc
fisubrs
push
xchg
xchg
mov
sbb
xor
xor
pop
leave
pusha
push
pop
hlt
lret
ret
je
insb
xchg
loope
ljmp
out
or
sub
arpl
cwtl
mov
cs
iret
cmp
loop
stc
add
das
es
test
add
jne
sbb
cmp
cmp
cmp
push
lcall
and
in
mov
mov
aaa
jbe
adc
adcl
add
sbbb
mov
xor
movsl
cli
imul
push
mov
into
cmp
pop
mov
movsl
mov
cs
jno
cmp
nop
xor
mov
jbe
mov
lret
jecxz
out
push
xchg
dec
pop
pop
ljmp
fwait
jo
push
or
dec
mov
cmp
ds
scas
inc
mov
stc
ficoms
cmp
daa
int3
cli
sahf
neg
cmp
shrb
lahf
aad
and
and
xchg
popa
out
or
imul
ret
cmc
or
inc
mov
arpl
leave
ret
xor
sub
adc
rcrl
jecxz
mov
rcrl
scas
jnp
popf
sbb
jecxz
shll
sti
xlat
jne
lret
mov
sub
mov
lret
push
shl
int
cs
repnz
shrl
pop
int
push
test
jmp
push
mov
mov
push
xor
in
adc
mov
xor
add
mov
pop
adc
mov
lea
je
bound
dec
dec
int
in
int3
fmuls
mov
mov
sub
sbb
xor
mov
push
les
cwtl
insl
sbb
test
push
mov
test
and
pushf
sbb
inc
iret
inc
mov
aas
cmp
adcb
out
add
int
int
cltd
int3
imul
adc
ds
inc
xchg
pop
push
test
imul
sbb
das
cltd
and
popf
adc
loope
lret
cmpsw
add
mov
dec
cmp
xchg
mov
xchg
mov
lods
mov
scas
jb
sub
lahf
popa
xor
imul
jb
jno
out
mov
and
cmpsb
cmp
mov
add
out
popa
mov
in
add
out
iret
js
push
xchg
jg
cmp
dec
cmp
mov
aaa
imul
jo
ljmp
adc
push
hlt
pop
cltd
jb
scas
cmp
mov
push
insl
sub
addr16
lea
mov
mov
shll
mov
mov
sub
pop
test
ror
enter
fisubl
test
repz
xchg
cmp
addl
push
xor
mov
clc
scas
adc
sub
leave
sub
mov
sti
ljmp
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
sbbb
sbb
mov
push
out
jo
or
dec
sub
inc
enter
andl
nop
insb
aad
xchg
or
xchg
sbb
or
push
xchg
jne
xchg
enter
or
mov
jb
lock
jmp
lcall
iret
arpl
adc
rcrb
xchg
lods
fs
mov
scas
sbb
add
or
jp
sub
sbb
push
add
icebp
cmpsb
lahf
mov
and
pop
insl
fnsave
sub
lret
fstpt
rcrl
scas
es
jae
outsb
or
xor
cmp
inc
test
adc
mov
call
addb
push
push
movsb
and
rclb
push
pop
mov
test
addr16
xor
cs
xor
fwait
pop
jge
fnsave
ret
sub
dec
loopne
inc
mov
mov
cmp
mov
pop
fdivp
loopne
mov
xor
insb
shlb
push
jo
shrl
imul
push
jnp
mov
mov
mov
shll
sbb
ljmp
loopne
push
pushf
gs
bound
cld
sbb
inc
fldenv
or
and
or
lea
sub
dec
fdivp
nop
sub
pop
xchg
lret
cmp
dec
imul
jno
out
mov
ds
push
adc
repnz
push
sbb
sub
loope
stos
inc
jbe
mov
aaa
pushf
mov
push
mov
and
btc
mov
mov
sub
mov
and
mov
lods
inc
lods
fldt
xor
inc
push
inc
fdivrl
add
pop
jne
push
int
lret
movsb
stc
or
sub
dec
add
mov
fmulp
movsl
bound
jmp
aam
and
mov
push
cmp
or
xchg
cld
xchg
pop
cli
adc
std
inc
jg
test
push
aam
out
ja
push
jmp
mov
dec
aaa
or
add
gs
lret
mov
nop
sub
push
inc
pop
xchg
inc
push
mov
cmc
std
lds
fldcw
sbbl
jnp
add
jbe
call
adc
push
movsb
sbb
mov
leave
pop
test
sbb
out
dec
jae
js
mov
hlt
lcall
shrb
call
jo
data16
ret
std
adc
jg
xchg
push
cltd
ja
push
loope
push
jno
mov
std
jmp
dec
cli
jle
imul
outsl
orb
or
rorl
add
push
push
xor
je
cli
cld
mov
fdivr
pop
pop
xchg
shr
mov
inc
sbb
outsb
dec
andl
push
and
loopne
es
adc
inc
pop
mov
or
imul
aas
mov
mov
jne
fmull
pop
xchg
cmc
ds
mov
cmpsb
xor
pop
test
adc
imul
dec
hlt
imul
and
mov
lock
xchg
add
hlt
jge
cwtl
test
jmp
inc
popf
cmp
inc
mov
insl
mov
andb
add
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
pusha
cli
aas
rcr
cs
orl
aas
pop
push
fiaddl
aas
dec
in
out
iret
cmpsb
std
cli
insb
into
test
xchg
push
jnp
fadds
jbe
xchg
sub
popf
xchg
pop
or
int3
jg
mov
adc
mov
and
jecxz
scas
pushf
adc
sub
jnp
adc
and
scas
or
and
notl
mov
add
and
xchg
in
push
xor
jbe
insl
cmpsl
fnsetpm(287
loopne
repz
fildll
pop
or
orb
fmuls
aam
pop
sbb
and
sub
cmp
mov
loop
adc
addr16
pushf
xlat
push
adc
cld
sub
daa
jmp
dec
mov
sub
addr16
mov
lea
jge
mov
lahf
shrl
shlb
mov
mov
inc
lods
cmp
ss
cltd
mov
fs
lea
sub
fcom
es
push
in
xchg
xorl
cmpsb
add
xor
adc
pop
insl
add
inc
shlb
cmp
adc
neg
sarl
jle
and
stos
rorb
jno
pop
in
xor
out
xchg
mov
push
jnp
dec
insb
cwtl
mov
mov
jmp
icebp
cld
sbb
xchg
fyl2xp1
gs
adc
adc
and
aam
xchg
notl
movsb
xchg
pushf
das
les
add
bound
add
mov
lods
pop
cmp
fs
xor
bound
int3
sar
mov
dec
mov
mov
mov
js
outsl
mov
lds
ss
cmp
sbb
sbb
push
push
in
jne
fnsave
pop
test
push
call
xchg
das
in
rolb
push
adc
mov
fidivrl
imul
mov
icebp
test
in
dec
cmp
lcall
int
repz
adc
enter
loop
sahf
pop
sub
call
mov
jg
xchg
test
daa
xchg
sub
inc
mov
test
outsl
cmpsb
adc
xor
mov
stos
sub
sbb
imull
dec
dec
jns
cmp
mov
or
enter
les
xor
mov
in
pop
xchg
repz
in
sub
inc
nop
fbstp
push
pop
shl
inc
aad
push
sub
adc
sbb
add
inc
push
mov
dec
push
cli
testb
outsl
inc
dec
shlb
lea
mov
cmp
in
jne
push
cmp
push
cld
inc
mov
cmc
adc
adc
push
mov
mov
pop
inc
adc
mov
adcl
jnp
add
mov
dec
mov
mov
scas
pusha
or
inc
js
cmp
arpl
lcall
ljmp
adc
xchg
and
xchg
loopne
fbstp
rolb
mov
sahf
inc
mov
mov
cwtl
ret
pop
cmp
daa
jb
dec
or
movsb
out
cmp
cs
push
js
decl
mov
leave
push
lea
cmp
pop
out
pop
push
ds
push
mov
sbb
mov
add
jmp
outsl
mov
or
imul
sti
jge
mov
inc
jo
mov
out
mov
jle
fcomip
xor
jp
in
and
xchg
mov
aad
out
lahf
jbe
dec
cwtl
sti
loop
push
inc
jbe
mov
dec
test
push
lds
cmpsl
jecxz
pop
lcall
lods
hlt
rorl
sarl
bound
call
or
data16
movsb
std
and
push
loopne
dec
rolb
push
inc
lahf
enter
outsl
inc
lcall
je
pusha
sub
push
shll
push
xchg
movsb
xor
push
dec
cmp
jmp
lret
mov
sbb
dec
xor
jae
adc
mov
int
shrb
popf
lret
mov
fwait
inc
mov
in
aam
out
mov
dec
xchg
push
add
out
cmp
out
test
lcall
cld
js
jns
pop
inc
mov
ss
sbb
or
outsl
add
pop
mov
sbb
cmp
mov
mov
enter
jge
push
mov
cld
dec
out
cmp
ret
int3
jnp
xor
aam
mov
fbstp
xchg
int3
shr
test
mov
mov
pop
stos
outsb
add
aas
mov
sbb
push
jo
aaa
push
sub
cwtl
je
or
inc
leave
ret
out
xor
inc
sbb
test
aaa
adc
int
mov
cmpsl
mov
hlt
dec
mov
adc
adc
pusha
xchg
xchg
rorb
pop
xchg
std
adc
mov
loopne
mull
pop
dec
pop
push
rcrl
mov
in
xchg
pop
pop
stos
lcall
ljmp
or
data16
dec
xchg
dec
push
jb
cwtl
dec
xlat
sti
test
mov
scas
aaa
sarl
rcll
mov
cld
inc
sub
lahf
jl
test
aas
lcall
mov
inc
call
push
jl
ja
cmp
dec
inc
test
popa
dec
pop
mov
xchg
mov
test
and
andl
bound
push
mov
xor
in
pop
decb
push
sarb
out
or
jns
add
fnstcw
or
xor
push
mov
call
push
addl
mov
hlt
outsb
sbb
cmp
nop
adc
jo
and
sub
std
push
icebp
or
sub
das
mov
mov
jns
and
notl
out
sub
dec
pop
jb
push
lcall
movsb
sub
arpl
pop
xchg
cmp
push
shl
sub
ja
xor
cmp
mov
loope
and
shl
cld
adc
adc
mov
sahf
mov
lcall
dec
stc
mov
xchg
cmpsl
sbb
jbe
mov
mov
cmp
icebp
in
setge
repnz
xchg
imul
push
jb
jno,pt
es
and
fisubs
mov
movsl
insb
pop
pop
dec
test
mov
fs
sub
in
sahf
lret
mov
dec
xchg
fldcw
pop
stos
pusha
dec
xchg
or
ret
sub
mov
gs
out
and
hlt
sarl
fidivrl
mov
inc
in
repz
cmp
xor
ds
cmp
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
push
idivb
inc
jo
pop
jge
jo
lock
jb
mov
cmpsb
addb
push
mov
sbb
push
add
jmp
push
adc
stos
inc
aas
clc
aam
mov
push
add
sub
mov
arpl
add
out
dec
hlt
jo
addr16
ret
sbb
mov
xchg
jno
dec
sub
nop
imul
push
cmp
sub
pop
stos
testb
fwait
push
call
aaa
add
xor
xor
pop
arpl
mov
arpl
inc
pushf
bound
xchg
cmpl
xlat
nop
es
stos
popf
inc
jno
and
mov
dec
jmp
mov
sub
xchg
data16
loopne
lcall
loopne
divl
cmp
mov
adc
xchg
and
addb
mov
cmp
mov
nop
pop
ret
shlb
xchg
and
and
mov
xchg
sbb
sub
sbbb
mov
popf
bound
daa
pop
inc
lods
mov
mov
cmpl
sub
jnp
lcall
arpl
add
arpl
lds
mov
inc
and
cmp
mov
pop
push
out
sbb
xor
add
adc
ljmp
or
mov
mov
popf
pusha
adc
leave
cmp
adc
test
or
pop
in
out
bound
jl
clc
sub
cmp
fisubrl
aad
cltd
xor
lret
testl
lods
test
fmull
ljmp
je
sub
inc
sarb
lret
fadd
or
inc
jg
inc
imul
in
jb
in
pop
in
aam
jae
mov
inc
add
stc
sbb
sub
ss
pop
jns
sti
sbb
adc
orl
mov
jecxz
pop
ds
lds
jno
jmp
shrb
mov
fs
or
sub
ss
sarl
cld
lcall
rcrb
sbb
popl
push
lea
int
ds
pop
test
or
stos
xchg
iret
cmp
push
cmp
and
jg
push
lods
lods
subl
nop
pop
sub
jge
mov
insb
movsb
lcall
mov
push
stos
int
mov
stos
pop
pop
and
cmpsl
jmp
adc
push
xchg
mov
sub
sbb
lods
test
ret
daa
lahf
fists
mov
pushf
daa
leave
mov
addr16
adcb
test
ret
pop
insl
and
das
addl
or
call
xlat
push
pop
xchg
mov
fs
mov
xchg
jg
scas
sub
adc
int3
pushf
incl
inc
aad
into
sbb
dec
xorb
sarl
jecxz
stos
cmp
pop
mov
lcall
clc
jae
push
rcr
scas
fwait
mov
add
test
sub
loop
std
repz
jp
sbb
pop
or
dec
sbbb
push
sbb
adc
cmpsl
cld
fildll
ret
lock
in
xorb
xchg
das
xchg
xchg
sbb
sbb
pop
push
cmp
out
sbb
insl
fs
push
inc
push
sbb
jl
pusha
out
mov
push
dec
mov
xchg
cmpsb
arpl
or
jo
popf
pop
mov
fsubr
lods
imul
inc
aas
fiaddl
xchg
push
fldl
and
mov
incb
fwait
cmpsl
loopne
lcall
dec
xor
in
push
aad
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
lahf
push
mov
lds
push
mov
or
repz
cltd
int3
fbld
in
loope
jnp
js
shll
test
pop
inc
add
adc
decl
fimuls
cmpsl
jg
lods
ss
fistpl
ds
sbb
orl
dec
push
sbb
fldenv
stos
xlat
mov
push
inc
push
shll
sbb
rcll
loopne,pt
shrb
xlat
xchg
fcomps
addr16
push
pop
adc
sub
dec
cmp
push
jo
xor
out
out
roll
in
push
xchg
mov
inc
filds
test
int
pop
aaa
enter
jbe
add
add
lds
fs
sbb
cld
pop
in
jo
push
inc
in
jae
icebp
mov
xchg
xchg
mov
mov
or
enter
mov
js
popa
sahf
das
push
sub
lods
shll
inc
scas
fcompl
sbb
cmp
sub
fwait
and
adc
dec
mov
mov
test
insb
or
cmp
div
fnstsw
enter
xorl
mov
adc
leave
lcall
or
inc
test
in
sbb
or
fsub
xor
nop
xor
push
jmp
jns
jmp
pushf
outsb
dec
out
xor
push
cmp
inc
leave
icebp
das
popf
out
fdivrs
mov
insb
loop
jmp
mov
sbb
out
cli
sbb
pop
fwait
out
xchg
scas
mov
jmp
loopne
mulb
test
mov
sbb
cwtl
push
mov
pop
mov
sahf
and
scas
cmp
xlat
add
pop
nop
loopne
es
mov
rclb
xchg
xor
mov
mov
push
mov
add
imul
mov
sti
aas
jo
int
or
mov
push
adc
sbb
icebp
pop
ror
outsl
xchg
outsb
mul
add
or
testb
loop
or
jo
mov
cli
sbb
add
sahf
cmp
and
mov
push
add
shrb
push
mov
inc
pop
push
or
hlt
lods
pop
jne
mov
xchg
or
xchg
dec
lret
les
fisttps
ljmp
fs
pop
cs
test
xchg
lods
or
call
sub
in
xor
inc
xor
pop
cltd
mov
clc
push
shrb
int
add
ret
ljmp
cmp
loop
mov
jmp
cmpsl
cmp
or
fwait
js
cmp
aam
out
mov
cs
fcmovnu
mov
pop
cmp
sbb
add
pop
jbe
jns
out
mov
xchg
mov
xorl
mov
pushf
mov
push
push
cmpsb
int
ljmp
inc
mov
addl
jl
test
pop
mov
sahf
add
fs
lcall
push
fistl
push
int3
xchg
push
ds
push
lods
pop
push
pop
mov
lea
xrelease
gs
enter
dec
or
fwait
pushf
fidivrl
jl
stc
cmp
or
or
jae
xchg
mov
or
bound
shll
mov
pop
mov
sub
dec
mov
mov
test
dec
xor
mov
je
jl
imul
cld
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
jle
pop
inc
push
dec
jo
pop
jge
jo
xor
inc
xor
mov
fs
jne
dec
jmp
leave
aaa
cmp
mov
or
inc
nop
iret
gs
sub
dec
mov
pop
loop
push
cli
sub
jbe
add
flds
pop
mov
sub
nop
mov
lods
mov
ja
cmp
outsb
inc
test
repz
les
movsl
cmp
or
pushf
int
mov
push
push
fcoms
dec
add
or
je
xor
les
call
xchg
cmpsl
push
jne
jle
push
aaa
sub
lods
adc
aam
shrb
sbb
dec
push
repz
pop
addr16
jne
inc
push
push
add
inc
js
lds
dec
mov
mov
and
add
jecxz
xchg
xor
rcr
inc
in
push
out
mov
or
test
fadd
mov
mov
das
xchg
es
mov
mov
lods
jp
in
cmp
add
call
xchg
ret
mov
mov
fstps
inc
sub
xchg
add
in
fisubl
jl
std
popf
cmpsb
stc
repnz
lahf
popa
mov
mov
cwtl
and
add
or
dec
fcmovu
mov
sarb
sbb
in
adc
dec
mov
jge
push
mov
gs
pop
or
push
push
daa
data16
cwtl
fcomps
lret
adc
jo
xchg
dec
and
pop
fs
and
lcall
daa
in
jp
or
mov
imul
push
sub
stos
jmp
insl
mov
popa
adcl
scas
mov
js
lret
in
fsubs
cmpsl
or
test
or
stos
xor
cmpsb
fidivl
sub
push
js
sub
inc
pop
cmp
in
cmp
xchg
pop
repnz
inc
call
jnp
mov
fwait
insl
add
mov
bnd
sub
xchg
sbb
cmpsb
mov
aas
xor
out
xor
jmp
pushf
xchg
movsb
mov
jbe
out
sbb
sbbl
cmpsl
lret
les
mov
in
adc
stos
mov
repz
adc
popf
xchg
push
cmp
push
sbb
or
xchg
out
iret
fs
mov
jecxz
adc
push
dec
add
pop
cmp
push
insl
insb
jns
test
dec
jle
sbbb
popf
shl
scas
data16
call
es
sahf
cltd
shlb
inc
das
jbe
or
or
xchg
enter
outsb
test
loopne
mov
mov
lods
mov
rcll
mov
test
add
test
inc
mov
psubsw
cld
out
xor
into
pop
shlb
roll
popa
xchg
push
xchg
mov
push
in
rcrb
push
xchg
sub
push
outsb
in
or
fistl
pop
lcall
ficomps
mov
inc
outsb
imull
cmp
dec
lahf
int
subb
bound
mov
mov
repnz
je
aas
jo
mov
sub
loope
hlt
fldlg2
shlb
ljmp
cmpsl
sbb
test
lds
dec
adc
lret
jmp
fwait
std
outsl
sbb
cmpsl
sbb
scas
mov
ja
xchg
leave
inc
cli
test
sub
xchg
xchg
xor
push
hlt
mov
outsb
pop
dec
jle
and
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
mov
jo
pop
jge
jo
in
rcrb
outsl
rcrl
adc
jl
and
mov
cmp
push
push
fs
rol
ret
dec
pop
mov
test
fldenv
xor
ret
inc
cmpsb
stos
and
pop
rolb
popf
loopne
pop
add
int
insl
pop
repz
jbe
int
mov
mov
test
pop
xchg
mov
outsl
adc
outsb
jne
js
ss
or
dec
xor
dec
movsl
sub
inc
mov
test
outsl
mov
inc
mov
mov
lcall
rclb
subb
add
dec
dec
jecxz
rcr
xchg
outsb
arpl
loope
pop
xlat
arpl
mov
cs
jge
cltd
xchg
sarb
stos
test
dec
adcb
sub
xor
cmp
loopne
sbb
or
rcrl
mov
xchg
jge
sub
rol
scas
or
adc
out
ljmp
push
or
pop
cmpsb
shl
les
lret
push
fstpt
fcmovb
ss
cli
mov
jle
inc
icebp
xor
enter
ror
add
push
mov
and
jl
mov
loope
jb
test
inc
add
movsl
fildll
pop
int
dec
jmp
out
sbb
in
add
scas
js
mov
cli
mov
cmc
push
sarb
xor
jl
ret
ljmp
int3
arpl
aas
mov
sub
loope
jp
into
arpl
mov
xchg
inc
add
and
xor
cmp
mov
dec
dec
xchg
sub
test
sti
xlat
mov
inc
push
sub
push
mov
mov
pop
push
in
ret
fistpll
movl
icebp
jg
fbstp
fwait
lods
shl
test
clc
ret
and
stos
aad
cmp
and
pop
mov
inc
js
imul
xor
cli
bound
push
fwait
push
inc
fcoms
mov
cmp
mov
shll
popf
pushf
sbb
stc
fildll
adc
aas
rolb
fdiv
loop
sub
test
ret
mov
imul
loopne
cltd
pop
push
mov
mov
outsb
sbb
jns,pt
and
mov
inc
push
inc
lcall
movsl
lret
lret
pop
xor
lret
sbb
pop
and
push
xchg
lea
push
push
cmp
jp
std
movsl
xor
mov
jecxz
aad
in
clc
dec
outsl
leave
pop
mov
gs
out
lods
or
rcr
in
fucomp
or
adc
std
mov
mov
mull
mov
mov
nop
cmpsl
lar
xchg
pop
push
pop
xchg
lods
mov
xor
mov
dec
mov
js
pop
push
mov
orb
or
pushf
lods
mov
std
pop
jne
cltd
dec
jmp
in
mov
insb
cwtl
pop
pusha
out
aam
xor
jns
fldl
movsb
xchg
outsl
lea
sti
lcall
mov
sub
scas
pop
ljmp
lret
decl
popa
divb
test
shl
sub
inc
in
mov
cmp
loopne
xchg
aam
xchg
mov
test
ds
adc
cli
push
adc
incb
and
jge
movl
out
add
aam
mov
mov
sub
push
sub
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
pop
pop
push
jo
pop
jge
jo
aam
sbb
jg
mov
push
enter
dec
jecxz
sahf
xchg
in
adc
leave
mov
les
inc
mov
and
movsl
ss
xchg
pop
aam
daa
and
mov
aam
adcb
lret
jl
in
jne
pop
add
jp
jmp
lret
scas
stos
aad
add
pop
push
push
and
jp
sub
mov
push
mov
out
mov
or
verw
mov
dec
test
ja
inc
dec
loop
jl
pop
test
cmpsb
jge
dec
push
adc
adc
mov
out
dec
and
lea
jmp
nop
pop
out
ds
scas
push
jae
loopne
sub
popf
aas
or
out
cmpb
mov
fsts
xor
or
iret
dec
mov
mov
mov
movsl
jl
repz
cltd
loope
add
push
in
pop
sub
xchg
shr
aam
push
fnstcw
jmp
fs
xchg
stos
xchg
cmp
inc
ret
xor
inc
out
xlat
imull
and
sti
popf
dec
xchg
addr16
aad
push
cmp
xor
insb
cmp
sbb
inc
inc
mov
xor
sti
aaa
int
pushl
les
mov
xor
sarl
dec
out
cmp
or
js
lret
mov
mov
ret
enter
shll
dec
stos
or
pop
lods
mov
jns
leave
mov
or
icebp
icebp
stc
fcoml
or
cmp
adc
inc
adc
inc
mull
data16
mov
lcall
mov
pushf
lods
rcrl
push
sahf
icebp
push
jg
fdiv
shll
sahf
jns
mov
sbb
and
pop
fldt
es
jl
out
cltd
or
cmp
insl
xchg
dec
xchg
in
lret
cli
mov
mov
out
aam
fnsave
mov
mov
inc
sbbb
cmpsb
and
pushf
pop
fwait
mov
jecxz
mov
sub
in
out
jb
xor
bound
stos
dec
out
xor
and
addr16
pop
loope
push
or
fst
jb
dec
dec
jmp
fucomip
or
adc
pop
enter
mov
add
hlt
push
test
xor
jp
cmp
mov
aad
ror
dec
andl
pop
push
addr16
mov
mov
pop
repnz
push
scas
test
or
inc
mov
push
les
add
cmc
xchg
outsb
sub
and
stos
stos
xlat
fcmovbe
lret
mov
shlb
cli
push
fiaddl
adc
data16
add
js
shr
inc
subl
sarl
dec
ljmp
arpl
shrb
push
loopne
mov
xor
cmp
testb
out
xchg
sahf
outsl
mov
scas
call
lret
shrb
pop
cwtl
pop
movsb
xor
sub
or
sahf
fwait
xchg
mov
pop
addl
and
jbe
adc
xor
inc
jle
in
jns
sar
lret
lock
enter
in
cltd
add
pop
xor
je
sbb
mov
mov
iret
movsb
sbb
mov
pusha
sbb
jne
mov
fadds
inc
xchg
or
test
inc
or
mov
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
pop
iret
je
inc
pop
jo
mov
jecxz
xor
cmp
call
divl
mov
push
cltd
hlt
mov
jno
pop
lcall
mov
jnp
mov
cmp
and
loopne
pop
mov
xor
push
sub
sub
dec
stos
stc
into
jo
shrb
scas
sbb
add
shrl
out
shlb
in
mov
mov
inc
and
sub
cmpsb
loope
and
out
xor
mov
push
shll
sti
mov
sub
fmull
cmpsb
aas
adc
scas
adc
into
mov
mov
mov
fnsave
push
ja
movsb
xor
arpl
scas
pop
fsts
pop
sub
fcoms
jp
imul
out
inc
fs
push
fldenv
lahf
leave
adc
xchg
sub
push
in
sub
xor
jmp
cmp
pop
dec
xchg
movsl
or
push
je
mov
psrlw
les
out
mov
or
arpl
mov
out
les
push
or
push
daa
mov
push
pop
xchg
out
push
cmc
push
aas
and
out
shr
adc
loopne
dec
sbbb
leave
add
and
dec
mov
jmp
and
or
pop
sbb
add
shll
xor
dec
pop
or
cwtl
sbb
push
addr16
lods
js
push
ljmp
fucom
sub
sbb
test
sbbb
and
mov
and
icebp
imulb
push
cli
stos
inc
stc
sub
iret
movb
dec
sbb
loopne
add
iret
inc
outsb
popf
fisttpll
nop
stc
jp
ljmp
pop
sbb
aad
mov
add
mov
loopne
pushf
add
jae
inc
repnz
lods
xchg
push
sbb
push
rolb
jns
mov
sarb
cltd
xchg
rolb
add
lds
sbb
mov
imul
mov
mov
cmp
cmp
mov
mov
int
nop
pop
fnstcw
fiaddl
cmpsb
mov
addr16
and
push
adc
stos
dec
cli
sti
pusha
sti
inc
inc
arpl
subl
jbe
push
repnz
mov
dec
or
adc
les
or
add
jo
pop
icebp
mov
aad
mov
sub
xchg
sldt
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
movsl
mov
jo
mov
mov
jge
add
jae
ljmp
dec
fdivrs
std
pop
jno
inc
push
cld
cmp
andb
sub
push
mov
fildl
arpl
pop
xlat
jnp
mov
paddsw
mov
mov
fildll
xchg
sbb
adc
pushf
mov
xchg
divb
cwtl
jmp
pop
aaa
add
shl
push
push
jbe
inc
loop
or
cld
jae
mov
pushf
lock
jp
loop
in
bound
popa
push
mov
xor
rcrb
dec
rol
dec
loope
int3
dec
sbb
mov
xchg
fwait
push
call
sbb
inc
loopnew
cld
pop
jbe
jae
xchg
sbb
xchg
mov
push
into
dec
dec
cmp
jne
lret
pop
js
and
mov
shlb
cmp
pop
in
pop
gs
sbbl
and
mov
sub
mov
das
es
mov
loop
lock
inc
outsl
sub
das
push
xlat
int3
jmp
mov
add
call
sbb
inc
aas
ss
push
mov
lock
sub
sbb
loopne
aad
push
inc
sbb
jnp
idivl
jmp
ss
sbb
mov
xchg
or
mov
mov
adc
mov
xchg
cltd
addl
mov
inc
xchg
mov
lret
iret
adc
pop
adcb
pushf
inc
mov
add
lds
mov
xor
aas
movsb
lret
push
and
pop
push
sub
mov
xchg
pusha
pop
sub
pop
sahf
inc
cmp
mov
inc
cmp
aaa
mov
xchg
xor
pop
fs
xlat
mov
loopne
out
lcall
mov
or
cmp
cltd
and
nop
fcoms
aad
leave
dec
adc
lret
arpl
roll
mov
rorb
add
inc
hlt
insb
fisttpl
out
lret
arpl
loopne
xor
gs
mov
ret
addr16
adc
rcl
pop
setge
out
imul
rep
loopne
push
lods
sbb
out
sbb
xchg
add
lcall
mov
xor
imulb
jo
movsb
mov
sub
push
xor
inc
movsb
jecxz
pop
add
push
cld
in
dec
aam
test
clc
xchg
dec
dec
xor
mov
mov
jmp
imul
scas
fisttps
push
pop
add
xchg
cld
push
rcrl
cltd
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
cltd
adc
mov
in
jne
jns
adc
popa
push
xor
xor
sub
imul
stc
push
push
out
cmpsl
and
lods
loope
out
nop
leave
inc
mov
mov
aas
fst
adcl
xor
loopne
cmpl
data16
adc
push
mov
add
jns
inc
mov
aas
std
ja
mov
movl
sbb
dec
fadd
ret
adc
pop
out
ljmp
lahf
pop
cmp
or
sahf
mov
idiv
adc
pushf
lea
mov
rcr
pushf
mov
lret
ret
nop
into
jne
sbb
push
xchg
ret
in
js
adc
mov
and
aad
iret
stos
mov
fbld
push
mov
stos
cli
cmpsl
fdivs
sub
pop
ficompl
sub
push
push
fwait
ds
hlt
pusha
int3
clc
jge
cmp
jmp
cmpsl
mov
test
cmp
aad
aaa
shrl
in
mov
xor
popa
inc
cli
sub
add
idiv
mov
mov
mov
faddl
jno
sbb
mov
or
push
inc
sahf
lods
mov
in
aad
mov
loope
stos
inc
or
into
inc
stos
sbb
outsb
add
sub
mov
ljmp
sbb
jb
inc
xchg
and
pusha
repz
repnz
xor
pop
xor
icebp
mov
cmp
or
cmpsb
sti
jmp
mov
in
insb
xor
mov
cmc
jle
inc
test
dec
jbe
xchg
mov
lret
inc
dec
push
push
ret
or
sbb
aad
sub
jl
nop
push
pop
dec
imul
inc
jns
pusha
aas
shll
sbb
loopne
addb
dec
mov
adc
pop
jns
mov
ja
out
loopne
mov
cmp
ficomps
jge
cmpb
insb
dec
adc
int
inc
fidivrs
xor
arpl
ds
xchg
jb
xchg
xor
lret
movsb
inc
push
mov
inc
push
sub
sarb
mov
xchg
out
pop
push
insl
test
sbb
sbb
pop
add
aad
imul
hlt
and
push
hlt
insl
jb
adc
dec
push
xor
in
cmp
or
ds
in
iret
test
cmc
mov
cwtl
jmp
cli
jmp
ja
sub
hlt
aas
ret
or
insb
insb
cmp
in
out
and
dec
iret
or
sbb
lods
mov
icebp
adc
mov
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
xor
inc
adc
jo
jle
jo
icebp
mov
loope
mov
into
sbb
jne
xor
adc
pop
fisubrl
loope
push
pop
stos
scas
mov
insl
pop
push
fidivs
shl
fnstenv
sbb
mov
mov
sbb
iret
jb
mov
mov
pushf
or
fstpt
bound
cmpl
inc
xor
push
pop
pop
mov
rcr
cltd
lret
cs
or
sarl
call
xchg
jmp
and
popa
xchg
jno
xchg
movsb
mulb
mov
dec
scas
sbb
mov
fcoml
mov
xchg
xchg
xchg
cmpb
xchg
mov
sub
xor
clc
push
jno
add
lods
stos
ljmp
jae
lods
cmovl
dec
cs
or
inc
jle
mov
xchg
stc
ret
xchg
in
mov
lds
div
aam
arpl
sbb
loopne
rcl
and
mov
frstor
andl
cmp
pop
stos
jl
inc
and
inc
hlt
cmpsl
stos
bound
stos
adc
lret
mov
mov
mov
test
pop
add
out
xor
cmpsl
mov
mov
jbe
cwtl
and
inc
mov
filds
mov
test
mov
dec
pop
mov
push
push
movsb
mov
or
adc
scas
rolb
fadds
popf
aad
in
insb
repz
fildll
fbstp
divb
pushf
inc
mov
out
inc
inc
or
sub
cs
inc
test
mov
rcrl
xor
out
pop
lock
or
and
dec
test
mov
dec
mov
test
xlat
xor
movsl
mov
xchg
pop
mov
adc
xchg
or
addr16
stos
popf
cmpsl
xchg
or
test
mov
xchg
push
ss
decb
lret
arpl
jnp
arpl
sub
insl
repz
adcb
cmp
lahf
jae
insb
lcall
mov
sahf
cmp
loopne
mov
movsb
pop
or
bound
adc
mov
push
repnz
mov
adc
or
cmp
or
fcomi
fidivrs
inc
popf
out
loop
stc
movsl
xchg
jecxz
fcoml
sbb
jns
jge
and
sbb
cmpl
sub
mov
loope
or
mov
and
jmp
daa
sbb
bsr
loope
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
pop
jnp
pop
fs
mov
in
add
jno
notl
fsave
ja
out
fdivrs
sbbl
add
pop
fcomps
push
pop
and
sahf
dec
in
jo
stc
cmp
jno
push
mov
adc
and
jp
cmpsl
mov
cwtl
adc
pop
out
es
test
sbb
jmp
leave
xchg
cmp
jno
sarl
cmp
or
adc
inc
fucomip
jbe
ss
lret
iret
inc
stos
mov
ror
shr
jb
push
inc
ret
test
rolb
inc
data16
daa
mov
aas
pop
out
lods
pop
enter
lds
sub
cmp
shlb
aam
mov
inc
sbbb
dec
cmp
pop
shrb
testb
addb
xchg
mov
data16
xor
cmp
sbb
popa
out
mov
inc
test
jle
fadd
jne
xchg
or
jo
sub
sub
jp
mov
xor
cmpsb
inc
inc
jo
pop
adc
test
movsl
adc
cmpl
rorb
ds
repnz
xchg
lcall
inc
outsb
inc
push
inc
sub
dec
insl
push
jp
xor
ss
inc
mov
push
cmpsb
adc
decl
pushf
push
out
std
rcrb
xlat
dec
jnp
subl
imul
test
dec
adc
sarl
ds
fstpt
push
pusha
jbe
sbb
mov
sahf
pop
sbb
ret
pop
es
mov
imul
mov
hlt
aam
stos
mov
jge
ret
push
out
lock
jo
aam
mov
dec
push
adc
lcall
pop
push
addb
std
aad
bound
mov
push
test
fidivs
ss
jbe
call
out
sahf
cs
and
dec
cmpsb
out
push
inc
inc
jmp
leave
jo
lret
xor
mov
fstpl
popa
inc
clc
ret
sti
movsb
adc
ret
lret
sbb
cli
pop
imulb
stos
outsb
mov
or
cmpsl
mov
mov
les
test
mov
rcll
jle
sub
insb
mov
insl
fwait
pop
mov
stos
cmpsl
mov
add
arpl
ljmp
mov
sbb
clc
xchg
mov
and
dec
repz
jns
and
inc
cmp
int3
cmp
cmp
jg
nop
lcall
test
insb
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
out
int3
push
pop
mov
jle
jo
xlat
inc
in
les
cmp
test
cs
add
ret
or
mov
mov
popa
dec
cld
imul
outsl
xorl
xor
ret
mov
rclb
icebp
mulb
mov
pop
dec
iret
mov
add
cmp
daa
icebp
aad
jp
xchg
loope
or
cmpsl
pop
xor
hlt
jo
jge
lods
add
frstor
mov
aas
pop
leave
adcl
addr16
dec
jae
stc
pop
adc
sub
hlt
add
dec
mov
es
aam
xchg
in
pop
outsb
hlt
ss
es
xchg
lock
aaa
bound
mov
sarl
shrl
mov
push
jmp
xor
jecxz
loop
push
xchg
inc
enter
inc
mov
daa
pop
rcr
sub
call
in
repnz
mov
lret
and
in
out
shll
mov
or
adc
imul
xor
xor
cs
xor
add
inc
fcoml
xor
inc
enter
push
sbb
inc
jae
leave
outsb
jmp
bound
jl
andl
adc
cmpsl
xor
dec
inc
hlt
inc
ficompl
rorl
jge
outsb
lock
test
popf
pop
out
loop
movsb
cmp
push
sbb
les
mov
mov
mov
jmp
insb
inc
push
add
push
je
cmp
dec
xor
bound
loopne
inc
das
adc
out
inc
dec
inc
push
aad
movsb
push
jmp
dec
push
mov
jecxz
push
ja
dec
jns,pn
cmp
pop
inc
dec
out
lods
cmp
arpl
xor
mov
pop
dec
es
xchg
sbb
mov
popf
lock
jo
cmp
shll
rorl
mov
mov
push
or
in
dec
and
bound
mov
sbb
nop
out
ljmp
pop
or
leave
ret
mov
inc
and
pop
adc
sbb
mov
out
xchg
mov
lahf
dec
je
push
insb
push
mov
int
xchg
jne
dec
jp
rcll
xchg
dec
dec
inc
mov
cwtl
sbb
ret
loope
adc
pop
mov
leave
or
rorb
loop
in
add
add
scas
jg
adc
popa
push
sub
decl
repnz
push
cld
scas
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
xor
outsb
jo
mov
inc
inc
dec
xor
jns
jo
fsubr
xor
or
popf
cmp
xor
xor
mov
sub
fwait
mov
imul
mov
repnz
divl
filds
fmuls
push
adc
subb
adc
jecxz
in
jbe
sub
and
inc
je
addl
jne
push
or
fsubrs
in
fcoml
jo
add
insl
add
mov
push
add
mov
dec
lods
cmp
std
mov
movsl
xchg
test
sub
cmp
jg
inc
jg
call
pop
push
cmc
out
mov
dec
imul
xor
dec
enter
jae
mov
movsb
mov
pop
incb
test
bound
xchg
mov
pop
pop
sti
sbb
jg
pop
mov
mov
iret
xchg
xchg
push
sub
sbb
cmc
xor
leave
mov
mov
pushf
int
cwtl
inc
enter
out
or
dec
ljmp
push
mov
ljmp
emms
gs
push
and
js
mov
pop
inc
mov
lret
pushf
dec
test
ds
lcall
fdivp
cmc
rclb
lahf
and
pop
mov
ja
and
mov
popf
jp
push
mov
inc
fdivrs
dec
ja
into
arpl
push
fdivs
and
ret
faddp
and
dec
pop
mov
add
or
rcrl
sub
sahf
int
shl
loopne
sbb
mov
sub
push
lahf
fsubrp
add
and
push
int
mov
mov
cmp
jmp
fstl
lea
fwait
mov
jo
inc
icebp
in
fdivs
in
fdiv
cmpsb
dec
mov
int
loope
lret
test
mov
push
and
push
xor
out
and
movb
and
pop
mov
xchg
sub
cmp
inc
es
mov
dec
shrb
insb
pop
in
add
addr16
outsb
lret
xchg
sub
xor
adcl
sub
daa
int3
push
dec
lret
inc
cmp
cmp
add
add
mov
scas
and
inc
cmp
sarl
mov
test
mov
in
inc
mov
lahf
add
mov
pusha
inc
mov
sahf
fwait
ret
dec
add
test
add
pushl
jmp
and
lods
shrb
in
fdivl
jo
jle
jo
divb
push
cmp
and
nop
adc
hlt
sbb
nop
fdiv
fnstenv
aad
sti
fstpt
scas
movsl
mov
xor
dec
push
mov
cld
ljmp
cmp
cmpsl
popa
push
mov
xchg
out
push
fwait
pop
sbb
mov
push
xchg
call
iret
in
mov
out
cmpsb
popa
stc
lret
std
lods
jae
cmp
mov
out
mov
cmp
add
loop
inc
imul
mov
push
xchg
add
add
push
dec
push
xchg
ret
sbb
pusha
je
push
fcom
jl
jle
mov
int3
aad
mov
jno
and
jl
movsb
lret
jo
in
fcompl
nopl
imul
aam
or
adc
xchg
test
pop
xchg
in
aad
das
cmpsl
int3
jg
push
xchg
pop
jecxz
stos
add
adc
imul
push
adc
lahf
adc
sub
pop
mov
push
xchg
adc
pop
cmp
xor
leave
cmpsl
push
int3
fptan
push
sti
dec
pop
add
mov
movsb
add
jns
inc
test
iret
out
add
dec
mov
cwtl
adc
outsb
imul
inc
mov
loopne
cmpsl
and
or
and
push
ljmp
lcall
and
pop
inc
fsubrs
outsb
inc
jge
ljmp
lahf
xchg
and
cmp
sbb
shlb
cmp
or
or
or
mov
adc
sbb
dec
adc
adcb
fcoml
push
cli
outsl
popf
cmp
rclb
ffreep
ds
mov
add
in
test
pop
fldl
aad
or
mov
xchg
or
adc
mov
hlt
lock
push
stos
sarl
iret
inc
lock
push
in
pop
popf
mov
mov
xlat
icebp
jnp
leave
sbb
fildll
subb
xchg
xor
push
adc
lods
std
mov
xor
jge
add
andl
into
jmp
cwtl
out
or
out
mov
xor
mov
pop
pop
mov
out
jo
lret
mov
inc
inc
xor
out
xchg
cmp
mov
xchg
pop
test
lods
lahf
shrb
frstor
imul
sbbb
xchg
ffree
lret
shl
pop
add
xchg
cmp
fnstcw
fbld
lods
pop
std
xor
inc
mov
push
stos
sub
call
jmp
pop
insl
and
xor
insl
jp
or
test
push
jo
dec
enter
std
sti
stc
mov
pop
sbb
mov
jmp
fimuls
or
or
aaa
clc
cli
jl
cld
stos
sqrtps
lods
mov
cmp
test
xor
jns
xchg
scas
sbb
mov
sar
scas
lret
out
jno
mov
jbe
cld
and
sub
test
xchg
test
in
out
jno
loop
push
arpl
mul
push
movsl
roll
cmp
pusha
jnp
clc
pushf
hlt
imul
add
pusha
dec
in
adc
inc
push
fwait
cltd
pop
mov
addr16
or
scas
repnz
iret
cmpsb
mov
fnstcw
adc
daa
stos
lea
call
inc
pop
ret
fbld
movsb
cmp
int
sub
mov
inc
cmp
pop
push
ds
rclb
repz
xor
insl
push
pop
xor
test
xchg
lret
mov
sbb
test
imulb
sarl
or
and
lock
lds
sub
stos
arpl
mov
mov
das
dec
mov
mov
into
sbb
cmp
adc
sub
xlat
add
test
push
sbb
xlat
inc
pop
ja
jns
jnp
arpl
std
adc
out
add
js
bound
int
mov
add
add
push
xor
les
or
pusha
and
out
fstps
test
add
rcr
sbb
mov
adc
outsb
sbb
inc
ja
repnz
inc
loop
lret
decl
jge
out
cwtl
decl
sti
xor
add
rcl
scas
push
cli
add
fs
in
push
and
jge
dec
pop
xchg
cld
jne
xor
mov
loop
int3
pop
decl
adc
mov
lods
rclb
jle
mov
in
jmp
and
and
push
mov
fwait
cs
or
loop
cmp
push
and
mov
in
popf
lods
adc
lods
or
into
xchg
xchg
pop
fldl2e
cmp
xlat
in
pop
adc
leave
test
jecxz
fwait
sahf
mov
repnz
outsl
mov
adc
adc
outsl
mov
and
loopne
mov
aas
adc
push
pop
pop
lret
js
cmpsb
or
cmp
xchg
out
loop
dec
inc
xor
fwait
jge
sbb
lcall
cwtl
int
lock
les
rolb
and
loop
hlt
xchg
xorl
dec
fnstenv
lret
testl
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
push
popf
jmp
mov
clc
xchg
push
inc
aam
arpl
jl,pt
xchg
cli
xchg
push
repnz
xchg
pop
lret
mov
fsubrl
xlat
cmp
xchg
in
test
pop
test
dec
ja
mov
dec
pop
mov
mov
mov
addb
xchg
mov
dec
adc
xchg
or
in
inc
jbe
jno
iret
addl
test
push
in
int3
inc
jno
sub
std
jnp
mov
push
jne
dec
pop
lahf
jmp
add
aaa
pop
stos
rorb
test
sub
lods
in
std
add
lods
lea
jmp
ret
mov
stc
aaa
pop
mov
ljmp
sbb
push
xor
mov
rolb
mov
fnstenv
sub
shr
mov
clc
out
inc
and
sub
jnp
xor
in
jnp
push
jmp
jo
add
rolb
adc
inc
leave
dec
add
je
cmp
in
or
div
mov
mov
test
ret
outsl
xchg
hlt
mov
xor
inc
dec
or
add
lret
in
pusha
and
sahf
jmp
pop
cmp
cs
fisttpl
stc
xor
adc
push
dec
js
lods
jnp
jno
fstpt
pop
test
jecxz
in
jbe
call
sub
je
add
cmpb
test
fdivrs
jb
mov
nop
xlat
mov
or
xchg
leave
loop
xlat
in
int3
mov
push
pushl
cli
fst
adc
sbb
in
xchg
dec
add
mov
movsl
enter
mov
jle
lds
jae
pushf
insl
bound
cmp
dec
lds
into
les
iret
xchg
xchg
xor
stos
ds
cwtl
xor
dec
push
jnp
mov
insb
adc
push
and
leave
movsl
mov
in
dec
in
push
ljmp
loop
jbe
and
xchg
mov
jb
and
test
xchg
insb
push
sub
popa
dec
adc
add
in
insb
jp
daa
jmp
push
inc
adc
pop
mov
cs
cli
mov
push
outsl
cld
clc
sbb
imul
sub
dec
inc
pop
aad
mov
divl
sub
sti
push
icebp
mov
pop
xchg
jmp
cmp
popf
scas
cmp
out
cltd
push
mov
gs
pop
xchg
ret
lahf
lret
jg
in
xchg
orl
aad
inc
add
add
add
add
or
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
lcall
mov
sbb
mov
and
adc
in
pop
xor
mov
add
into
pop
imul
mov
or
cld
stc
dec
push
mov
cmp
ljmp
fidivrs
xor
pop
ja
xchg
inc
loop
in
jmp
fcmovnu
imul
mov
aas
dec
dec
pop
add
cmc
fstpt
cwtl
mov
lods
lods
aas
add
push
jl
adc
mov
or
push
fmull
push
jge
push
mov
or
lahf
imul
and
leave
push
adc
push
jo
enter
test
xchg
clc
ds
out
ja
mov
xor
ss
push
repnz
aas
sbb
insl
push
repnz
or
test
and
movsb
jns
add
cs
mov
scas
sub
mov
fldcw
pop
int
and
in
out
bswap
pop
dec
inc
iret
inc
sbb
sbb
pop
mov
mov
mov
sbb
and
out
enter
xchg
andb
add
jnp
ljmp
ja
pop
inc
mov
dec
scas
pop
adc
add
add
out
push
jae
mov
mov
out
inc
movsl
ffreep
xor
adc
icebp
inc
jle
dec
lret
add
fstl
add
sbb
in
add
mov
std
fimuls
dec
bnd
xchg
lret
addb
lock
fiaddl
xchg
cltd
pushf
inc
fisubl
fistl
stos
inc
cmp
jo
insb
xchg
pop
mov
stos
jmp
stc
cmp
clc
add
and
shlb
pop
xor
mov
add
pusha
push
jne
add
lods
nop
jg
mov
mov
cmp
inc
outsb
xor
bound
cld
pop
jnp
sbb
pop
insb
dec
les
popa
lret
dec
pop
inc
loop
adc
inc
divw
shll
jnp
adc
cmp
test
push
aad
inc
popf
aas
push
jo
cmp
dec
mov
addr16
cmc
xchg
jp
pop
jmp
pushf
cmp
jne
pusha
xchg
inc
andb
pop
or
loopne
jns
sbb
ljmp
out
packssdw
test
ret
xor
sub
mov
mov
incb
aad
jge
shll
testb
mov
sub
push
ss
jnp
stc
ret
mov
pop
rcrb
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
in
bswap
jo
jo
jle
jo
mov
aas
push
push
mov
clc
sbb
push
loop
je
pop
add
inc
jno
int
mov
cmp
fsubrs
add
pop
out
or
cmpsl
in
cwtl
pop
clc
lock
out
inc
sbb
cmp
cmp
cmc
lds
in
fcoml
pop
filds
cmp
imul
movsl
xchg
mov
pop
aad
test
sub
cmpsl
pop
jns
add
lods
ss
inc
mov
sub
jo
xlat
jmp
and
fistpll
or
pop
sbb
add
nop
jo
jo
jo
fadds
jecxz
add
cmpl
add
les
scas
dec
pop
cli
lods
inc
jg
popf
aad
sbb
stos
ds
dec
inc
lahf
push
or
sub
test
sub
pop
fists
ret
mov
pop
add
imul
in
outsl
mov
cmp
shrb
lret
movb
fs
ja
cmp
aad
cld
mov
push
dec
loop
dec
push
and
mov
std
mov
cld
xchg
or
push
ret
dec
ss
arpl
imul
lods
outsb
or
xchg
fsub
jo
add
or
jmp
inc
lds
dec
pop
fsubl
cmpsb
mov
dec
std
hlt
mov
sbb
cmp
and
jge
jb
pop
or
mov
mov
mov
xchg
ds
inc
and
push
sbb
add
xor
fs
adc
imul
sti
or
lea
jg
jno
mov
aas
adc
xchg
cwtl
jns,pt
adc
inc
cld
int
ficoms
loope
js
sub
inc
fbstp
push
pop
sahf
int3
xchg
out
jnp
cmp
out
test
jg
push
imul
insb
testb
cmp
in
outsl
adc
and
add
jae
dec
push
lds
outsl
and
inc
fnstsw
loop
and
jg
es
cmp
std
jb
rol
dec
push
xor
adcl
and
adc
rcll
mov
loopne
xlat
stos
cs
adc
pushf
jl
inc
enter
das
fdivr
jmp
sti
ljmp
mov
mov
xor
adc
hlt
xchg
data16
aam
jmp
xchg
mov
stc
gs
jno
or
std
mov
xor
jmp
add
mov
jb
jge
jge
aam
adc
jo
jle
jo
arpl
mov
and
std
xorl
daa
dec
inc
sti
test
xor
call
mov
xchg
cmc
fisubs
lret
popa
mov
mov
xchg
jo
out
andb
xorl
mov
push
ror
cmc
fdivrs
xor
and
lret
cmp
stos
cmp
mov
stos
mov
frstpm(287
xchg
sbb
xor
inc
lock
inc
shr
jo
leave
sbb
mov
lcall
cltd
cmp
lea
push
daa
pop
pop
rcll
stos
dec
mov
arpl
std
into
loopne
xor
cmp
orl
lahf
cmp
daa
int
xchg
dec
inc
add
jbe
iret
mov
pop
mov
mov
dec
enter
jg
pusha
test
daa
inc
in
xor
inc
sub
imul
or
pop
dec
lret
push
cmp
or
push
icebp
outsl
sbb
adc
xchg
xor
movsb
or
cli
adc
and
ret
jo
pusha
mov
xor
xchg
and
xorl
into
xchg
lods
call
push
dec
cltd
mov
imul
pop
cmpsb
int
out
push
jae
pusha
add
lock
and
bound
add
loope
in
enter
fs
cmp
call
or
imul
out
or
mov
pop
add
xlat
xchg
push
jae
aam
or
int
jbe
outsl
jl
push
outsb
mov
hlt
push
or
mov
repnz
inc
sbb
popa
imul
sub
divl
sar
clc
ret
pop
mov
push
cmc
out
mov
test
dec
push
adc
xor
lea
inc
sbb
adc
push
and
dec
out
mov
mov
xchg
jb
aaa
subl
xor
or
jge
cmpsl
push
adc
cmpsl
jle
popf
pop
fildl
maskmovq
imull
popf
fistl
mov
mov
pop
inc
sbbl
mov
push
into
ret
push
fidivs
cmp
arpl
pop
lcall
mov
pop
aaa
jmp
sbb
fnstsw
outsb
pusha
cmp
and
arpl
or
imul
pop
mov
andl
pusha
pop
out
mov
sbb
dec
pop
stos
push
dec
fildl
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
pop
xor
jg
mov
push
and
les
lods
and
dec
dec
jg
jge
jno
pop
aam
or
jo
lcall
fisubrs
and
mov
or
and
pop
adc
scas
pushf
add
add
test
adc
jge
mov
arpl
aaa
lods
jnp
cmc
es
in
cmp
fimuls
xchg
lcall
or
sub
sbbb
push
test
and
jo
pop
stos
adc
divl
aam
roll
cmc
fisttpll
push
test
sbb
inc
leave
cld
xchg
cmp
idivb
scas
push
or
jns
nop
out
dec
repz
cmp
int
aad
shrl
test
jmp
fimull
jge
mov
cmp
pop
and
movsl
js
outsl
dec
push
and
inc
mov
repnz
mov
int3
mov
arpl
add
push
jns
push
cmp
dec
iret
pop
movsb
cltd
lcall
push
popf
adc
jo
jle
jno
inc
aad
push
daa
int3
pop
ja
jo
lock
jnp
jbe
imul
sbb
bound
sub
pushf
mov
out
inc
xor
in
lahf
inc
imul
push
xchg
jge
xchg
push
divl
int
mov
add
jbe
sbb
inc
pushf
nop
into
imul
push
inc
push
cli
jecxz
mov
pop
mov
aam
push
sbb
pop
addr16
nop
in
ljmp
dec
movsb
arpl
sub
adc
cmovns
push
cltd
xor
lods
mov
je
mov
add
lea
and
push
fcos
int3
add
or
sbb
mov
sahf
dec
jle
scas
sbb
daa
lea
movsl
incl
push
hlt
popa
sbb
jno
jne
jmp
add
inc
in
imul
jmp
imul
cli
pop
add
lods
out
shlb
insb
push
inc
mov
sbb
ja
push
and
push
inc
add
or
xchg
sbb
jnp
lods
mov
shll
adc
push
scas
aad
mov
add
push
mov
icebp
popa
stos
cmp
pop
out
sub
ljmp
fs
cmp
data16
and
fcoml
test
test
jmp
cltd
nop
inc
or
pop
cmp
jne
fcoml
in
in
lods
inc
mov
push
push
adc
push
or
movsb
ss
scas
int
sbb
push
call
cmp
stos
mov
data16
adc
push
mov
inc
or
jno
sbb
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
inc
scas
popa
aaa
movsb
js
jo
jle
jo
enter
adc
dec
jecxz
push
sub
adc
pop
pop
jmp
gs
pop
es
xor
mov
lods
jno
iret
cld
ljmp
jns
inc
gs
sbb
dec
push
adc
lock
dec
shl
sub
pop
into
jecxz
in
lcall
and
push
mov
sub
cli
adc
inc
iret
push
aaa
jmp
xor
inc
push
mov
jb
push
mov
ret
cmp
shll
ss
aas
adc
jg
data16
mov
outsl
lahf
mov
push
push
mov
inc
xchg
in
rorb
mov
je
jno
lahf
sbb
push
fimull
ja
mov
shll
pop
lret
jne
cmp
aaa
das
push
loope
sbb
icebp
pop
cmp
xor
xorb
sub
repz
mov
add
daa
fcmovu
sti
inc
icebp
loopne
dec
addl
les
dec
pop
data16
rcrb
shlb
ret
pusha
mov
rcr
dec
fsubl
xor
into
dec
sbb
pop
inc
and
addr16
insl
cmp
xor
mov
add
cmpsb
mov
dec
stos
inc
mov
pop
je
aad
cmp
xchg
cmpsl
mov
nop
adc
into
sbb
stos
sbb
into
push
mov
cld
rcl
adc
orl
cmpsl
jp
xchg
or
nop
xchg
bound
jb
mov
mov
imul
in
stc
clc
sub
insl
mov
push
xor
mov
sub
fstpl
hlt
loop
mov
movsl
rcll
dec
aaa
inc
fldl
cmp
sbb
cmpsl
mov
and
push
sub
loop
fdivl
add
ds
pop
xchg
mov
xchg
shr
lock
imul
pop
cld
lret
ret
push
dec
insb
and
mov
shlb
inc
sbb
iret
mov
addr16
cmp
addr16
sti
bswap
fs
daa
push
sbb
mov
test
mov
xor
fimuls
jg
popa
fcoml
mov
clc
mov
cmp
shl
imul
or
xor
in
mov
lahf
insb
lret
fsubl
rorl
imul
shll
push
mov
jl
xchg
lahf
ficompl
and
mov
xchg
pop
or
repnz
lods
inc
loopne
xchg
dec
mov
or
pop
fsubl
or
xor
pushf
int3
xor
dec
dec
push
adc
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fnstenv
add
jo
mov
or
sub
jmp
stos
jecxz
adc
cwtl
mov
ljmp
cmp
mov
and
std
or
cmp
add
dec
push
mov
jecxz
push
leave
stos
sbb
adc
sub
sbb
mov
push
xchg
xor
add
mov
scas
mov
ds
mov
dec
xor
xor
pop
std
fs
add
xchg
dec
fwait
in
bound
xchg
push
push
xchg
xchg
jne
adc
jmp
xchg
mov
inc
pop
jae
push
push
jge
dec
or
cmp
inc
ficoml
xor
fcmovnb
cmp
out
popf
int
cmpsb
xor
jne
imul
adc
in
cwtl
test
xlat
inc
popf
or
sub
inc
jmp
push
dec
jmp
mov
in
inc
inc
outsb
or
add
es
xchg
scas
lea
or
cmpsl
cltd
push
jl
daa
mov
lret
pop
mov
outsb
xchg
or
sbb
pop
das
movsl
outsl
xor
je
ss
mov
adc
repz
rcrl
push
aas
ds
sbb
push
loop
jnp
lret
push
jae
mov
fistps
lahf
cmp
xchg
push
push
inc
sbb
cmp
test
ljmp
xchg
loop
xor
sbb
stos
adc
mov
or
mov
pavgb
test
mov
sub
rcrl
xchg
pop
outsl
push
outsb
lcall
adc
mov
arpl
loopne
bswap
pop
shrl
push
bndldx
xchg
or
sbb
add
jae
cmp
fcomi
mov
out
popa
stos
pop
test
sarl
in
push
add
fiaddl
mov
jns
xchg
in
push
inc
add
out
sub
or
push
sub
imul
idivl
xchg
or
lret
fnstsw
fstl
lahf
cmp
testb
and
test
cmpsb
jne
mov
or
xchg
subl
repnz
pop
testb
mov
jb
in
mov
mov
pop
sbb
stos
call
mov
pop
inc
mov
mov
mov
push
je
clc
push
mov
fistpl
xor
lods
lods
dec
loopne
into
mov
inc
dec
mov
leave
inc
mov
and
ljmp
adc
lea
testb
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
iret
sbb
jo
jle
jo
mov
cltd
or
adc
out
hlt
cmpsl
and
clc
lods
imul
ficoms
imul
lahf
adc
push
stc
jns
out
mov
sub
loope
cwtl
mov
mov
cmp
jnp
rcrl
push
mov
jle
imulb
pop
or
test
sub
enter
pop
mov
js
cmp
stos
xor
and
inc
xchg
lods
sbbb
add
cmpb
ficoml
dec
cmp
xlat
add
out
push
pop
mov
xchg
icebp
push
cmp
push
sub
je
mov
pop
push
inc
fsubl
and
adc
cmc
xor
ss
jp
inc
clc
mov
pop
rcl
lods
dec
cli
pusha
fwait
shlb
inc
mov
repnz
sub
int
jne
or
out
pusha
lahf
inc
insb
adc
adc
jno
insl
sub
inc
ss
or
ja
and
out
fistpll
lods
inc
lret
xchg
push
in
pop
das
dec
sub
push
popa
outsl
sahf
fsubl
pop
ljmp
loop
lcall
xor
add
dec
adcb
cmp
subl
pop
data16
xchg
lods
sbb
xchg
aaa
outsl
lds
fidivrl
cmpsb
pop
cmp
xchg
jge
pop
ljmp
out
or
loopne
cwtl
jmp
das
mov
ret
pop
pusha
inc
xor
sbb
jp
dec
std
inc
jecxz
ss
mov
stc
sub
jge
data16
dec
ss
sbb
imul
and
cmpsb
pop
or
insl
cltd
adc
dec
scas
jle
jne
sub
test
or
popa
and
xlat
in
bound
mov
and
mov
addb
pop
stc
sub
lcall
and
fldl
cmp
inc
cmp
jmp
fs
add
xlat
loop
scas
sbb
data16
push
fiaddl
and
inc
cli
sbb
sbb
out
pop
jno
in
aas
leave
pop
xchg
dec
push
repz
mov
sub
shl
fsubrl
stos
adc
into
fdivrl
sub
pop
pop
jb
loope
xorl
mov
jp
jecxz
xor
add
fildll
cmp
mov
pop
fsubr
pop
jno
jo
push
jbe
sub
xor
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
or
movq
jle
jo
lahf
push
fs
es
jns
jnp
push
leave
pop
or
pop
push
jmp
decl
testl
mov
cld
idivl
hlt
cmp
aaa
aaa
popf
popf
mov
hlt
fnstcw
push
and
and
jb
mov
dec
jno
jg
roll
add
inc
sbb
xchg
sti
andb
rcrb
xlat
lcall
jne
insb
mov
insl
sub
rol
push
inc
cmpsl
aaa
jecxz
jo
fbstp
jne,pt
xchg
mov
aad
sbb
add
jecxz
in
xor
cmp
mov
mov
lret
xor
dec
sub
dec
adc
subb
outsb
loope
adc
push
lahf
adc
and
xlat
shrb
les
inc
ret
adc
push
add
adc
ret
jecxz
ljmp
and
test
jns
addb
sub
xchg
in
fildl
push
ljmp
clc
iret
jge
inc
sub
mov
jmp
out
aaa
mov
hlt
cmp
sahf
jb
in
or
cmpb
movsb
sub
xchg
cmp
in
sub
pushw
dec
addr16
jecxz
arpl
cld
pop
xor
imul
cwtl
fsubrp
aaa
inc
sub
xchg
ja
rcl
sbb
cs
xor
xchg
aas
cmc
xor
lret
inc
dec
pushf
adc
mov
cmp
sub
mov
and
mov
gs
add
fdivrs
lret
repz
das
sahf
mull
out
les
shlb
test
jb
dec
or
lods
clc
mov
shlb
sub
jbe
pop
add
loop
xor
and
inc
pop
cmovo
jmp
mov
push
mov
cmpsl
push
add
fistpll
fiadds
jmp
adc
shll
es
push
jge
and
sbb
and
push
xchg
cmp
adc
shrb
sbb
test
cmp
aaa
push
inc
scas
ja
movsl
mov
inc
pusha
divb
cltd
mov
enter
pusha
sbb
sbb
xchg
movsl
push
lahf
inc
mov
pushf
xchg
test
stos
sarb
push
mov
xchg
mov
stos
gs
push
sbb
repnz
jl
stc
aaa
and
push
push
jb
mov
inc
dec
mov
sbb
cmp
in
mov
cld
push
adc
inc
nop
push
xchg
fstps
iret
ret
aam
fsubl
mov
adc
pop
push
jo
les
jae
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
push
imull
into
mov
jle
jo
fmulp
aaa
popf
push
movsl
shlb
or
clc
test
es
inc
mov
call
jg
insb
inc
loope
sahf
call
xchg
bound
xorl
and
aam
mov
jne
mov
lock
divl
inc
add
movsl
stc
loope
jb
arpl
movsb
inc
insl
pop
jecxz
dec
fidivrs
lods
mov
dec
add
les
xlat
push
ja
xlat
popa
sti
mov
mov
pop
movq
js
push
xor
out
aad
xchg
stc
cmp
mov
negb
sub
scas
mov
enter
mov
stos
shlb
leave
inc
das
bound
ljmp
jns
lcall
stos
and
lods
and
and
rolb
jl
aad
faddl
jecxz
ficomps
sti
push
std
mov
and
sub
cmp
test
test
adc
sbb
xor
loop
fcomip
in
adc
inc
adc
in
cmp
mov
mov
cld
lods
cltd
sti
insl
push
les
mov
or
sbbl
xchg
mov
pop
lock
sub
jnp
repz
fnstenv
ljmp
jecxz
ja
gs
pop
ret
inc
xor
mov
cmpsb
mov
sbb
inc
and
inc
dec
sahf
jmp
ret
test
and
lods
lea
adc
cmp
inc
loopne
mov
sub
push
xor
lret
pop
in
sbb
lret
fisttpll
dec
cld
test
movsb
push
mov
das
insb
mov
push
imul
or
mov
push
mov
out
into
popf
leave
aaa
xchg
iret
cs
push
shr
mov
dec
test
mov
mov
lock
fwait
jae
add
sub
mov
ffreep
sbb
xchg
sub
loopne
fcoml
mov
andb
int
mov
call
pop
dec
cs
sbb
call
bound
mov
lea
out
in
xor
mov
mov
ret
cwtl
les
cmpsl
push
ficoms
ljmp
nop
or
mov
push
movsb
loopne
in
add
push
cmpsl
fdivs
jp
scas
das
popl
jae
sti
and
push
jge
in
es
rclb
and
divl
sub
aam
sub
cmp
flds
sbb
add
mov
xchg
cmp
sahf
dec
cli
xchg
sbb
clc
xchg
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
sahf
mov
dec
orl
jo
and
in
xchg
adc
cmp
dec
mov
pop
push
pop
sti
sbb
and
and
add
das
aas
mov
pushf
pop
mov
pop
nop
shr
push
ficompl
pop
mov
shr
outsl
out
in
xor
mov
mov
jg
xlat
add
jno
push
dec
inc
scas
ret
lods
and
fnsave
add
pop
orl
mov
push
in
mov
out
mov
sub
insl
mov
xchg
xor
sbb
pop
ds
adcl
push
inc
dec
jne
cmp
fwait
mov
sbb
stc
pop
inc
js
movsb
fs
push
rcrb
dec
hlt
call
jnp
cmpsb
sti
lahf
pop
pushf
sbb
jmp
shll
arpl
jae
mov
xchg
or
out
jnp
popa
lea
subb
ss
daa
inc
movsb
add
insl
mov
loope
in
dec
lods
xorl
imul
adc
negb
nop
xor
mov
inc
test
mov
ss
shrb
outsb
cmpsb
ljmp
xor
mov
or
aaa
jmp
test
mov
xchg
mov
inc
shl
push
pop
lret
mov
lret
movsb
push
add
stos
test
scas
xchg
cli
addb
movsl
daa
push
sbb
sbb
add
mov
and
imull
and
sub
mov
sub
test
sbb
xor
sti
jae
andl
lds
lret
and
icebp
inc
sbb
mov
cmp
in
cmpl
int3
cmp
inc
cmp
push
jp
xchg
subl
pop
mov
test
pop
push
into
xlat
and
test
dec
iret
stc
mov
jb
aaa
mov
movsb
mov
in
jo
adc
xlat
cmp
dec
sub
fistl
scas
in
std
faddl
data16
addr16
pop
sbbl
daa
adc
test
or
inc
hlt
lret
push
xchg
cld
stc
scas
lret
push
jne
mov
sub
xchg
xchg
ret
xchg
sbb
test
cmp
iret
fs
addr16
gs
stc
add
orw
movsb
in
inc
fidivs
test
iret
push
scas
push
addb
jl
add
icebp
inc
jle
or
repz
dec
fisttps
xor
iret
outsb
cmpsb
xlat
lods
mov
movsb
ss
sbb
xchg
popf
fiaddl
mov
movsl
and
adc
ljmp
dec
fnstsw
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
popa
ss
lret
jo
jle
jo
inc
pop
jmp
scas
outsl
lret
fucom
xor
jbe
fst
fcom
cmp
push
mov
mov
repnz
or
xor
int3
aaa
shrl
in
jp
jmp
inc
stos
xor
sub
mov
fidivrl
adc
add
and
and
mov
jns
or
xor
int
rolb
xchg
cmp
push
pop
inc
cmp
repz
jnp
jno
dec
movsl
ret
aas
xor
cmp
gs
les
or
and
imul
popa
seto
and
shrb
push
std
and
mov
aam
out
adc
mov
icebp
dec
and
inc
mov
push
hlt
ja
jmp
jb
ljmp
inc
sbb
mov
cmpsl
jne
mov
jb
int
sub
insl
jb,pt
test
movsl
push
lds
jb
ret
jg
cwtl
xchg
pop
fwait
std
push
repnz
in
out
pop
jge
bound
enter
xor
push
mov
cmp
fwait
and
testb
jmp
adc
inc
mov
xchg
and
clc
das
inc
jmp
in
add
cmc
insl
add
or
add
fdivrp
in
xchg
imul
push
fs
rorb
adc
sbb
jno,pt
xchg
lahf
sarl
add
pop
dec
ret
adc
mov
xlat
loopne
sbb
jae
mov
mov
mov
lods
jnp
cmp
xchg
loopne
int
jno
fwait
mov
dec
jg
icebp
push
mov
mov
sbb
leave
shrb
mov
popfw
mov
in
es
repz
ja
jno
pop
push
mov
scas
rclb
sbb
pushf
mov
jns
testl
cmp
lds
gs
insl
pop
and
loop
xor
mov
call
inc
dec
loope
lahf
xor
jne
mov
insl
je
rorb
lods
aas
imul
mov
or
lret
mov
adc
pusha
jl
stc
xchg
out
les
inc
test
gs
flds
cmc
adc
aam
lcall
pop
sub
idiv
add
sbb
mov
sbb
dec
scas
xor
dec
or
mov
aaa
lret
mov
xlat
cltd
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
jmp
jo
jle
jo
pushf
scas
or
lret
loopne
push
inc
cwtl
cmc
test
bnd
mov
sbb
stos
xor
in
insl
cmp
bnd
jns
mov
push
idivl
mov
mov
xor
xchg
push
call
sbb
mov
or
xchg
jmp
das
out
inc
xchg
fbstp
fisubrl
xor
dec
push
cmp
jno
cmpb
insb
or
sarl
imul
mov
or
aas
cwtl
and
imul
inc
add
mov
lods
jo
cli
cmpsl
sbb
stos
xor
insl
mov
out
data16
out
xor
cmpsl
leave
dec
shlb
mull
mov
in
cmpsb
jne
dec
fwait
mull
cltd
pusha
addr16
push
sub
push
roll
jg
bts
adc
cmc
dec
out
sbb
mov
and
ret
incl
out
fldenv
xchg
jmp
mov
and
mov
or
outsb
jmp
mov
aad
popa
sbb
mov
xchg
mov
add
lahf
push
xor
mov
mov
xchg
pop
push
sub
pusha
mov
imul
xchg
sahf
out
mov
stos
out
or
xchg
inc
push
popl
dec
inc
testb
mov
call
add
subb
aaa
mov
xchg
mov
jecxz
movsl
pop
or
fists
lahf
ljmp
sub
push
cld
push
sbbl
imul
insl
je
fbld
jns
pop
mov
sub
push
pop
shrb
jmp
jb
and
cmpsb
inc
rorl
jecxz
adc
adc
sbb
test
icebp
pop
adc
xchg
xor
addr16
sbb
cmp
dec
enter
jmp
scas
xchg
ret
jl
inc
xor
xchg
jmp
insl
xchg
outsl
ss
and
or
jg
dec
imul
das
and
test
cmc
inc
mov
mov
aas
js
scas
dec
add
fisubs
add
and
stos
dec
lods
and
pop
test
daa
mov
dec
xchg
add
sbb
ret
mov
fmull
and
xchg
pop
pop
test
mov
cmp
nop
and
lods
out
arpl
pop
pop
cld
hlt
dec
mov
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
lcall
mov
jp
iret
std
mov
ret
jo
ds
inc
xchg
xchg
movsl
divl
aam
pop
xor
jle
cs
shrl
jl
sbb
xor
ds
or
cmove
mov
jecxz
pop
xchg
mov
pop
test
push
cmovnp
les
repz
test
and
dec
lea
sub
jg
scas
or
out
push
xor
ja
xchg
sbb
rol
xor
inc
mov
int
xor
xchg
stc
add
push
roll
daa
xor
rorl
push
push
les
lret
dec
inc
and
fnstsw
cmp
inc
jg
cmp
pushf
pop
mov
jle
dec
fdivrs
mov
dec
xlat
jns
push
ds
lods
jbe
icebp
mov
ror
pusha
xor
arpl
jo
sbb
rcll
cmpsb
clc
xor
ret
je
leave
stos
sbb
pop
push
movhps
sub
mov
jnp
adc
push
xor
sahf
popf
pop
mov
push
jmp
jmp
jbe
or
add
lds
and
cmpb
aam
jnp
sbb
fs
idivb
cmp
inc
out
xchg
js
lods
call
sbb
lahf
jae
sbbb
sbb
repz
mov
pop
mov
push
inc
movsb
stos
push
ficompl
ljmp
stos
dec
add
xor
sub
sahf
sub
fsubs
cs
popf
sub
push
imul
ficoms
jge
daa
andb
sti
arpl
mov
jle
int3
dec
testl
clc
push
mov
jg
scas
xor
popa
push
fildl
or
test
pop
inc
ret
and
mov
leave
mov
add
sbb
lcall
or
movsl
sar
fidivs
mov
inc
fdiv
push
push
hlt
mov
lock
dec
les
arpl
stos
loope,pn
pop
pop
in
lret
bound
rcll
adc
xchg
cmp
jo
fs
and
cwtl
mov
pop
lahf
stos
pop
pop
testl
sub
mov
xlat
jp
mov
push
push
sub
subb
pop
rclb
cmp
add
mov
adc
jne
outsl
fsubs
in
call
movsb
inc
mov
push
popf
sti
fwait
xor
pop
xchg
push
cld
pop
jge
add
bound
je
cmp
sub
xor
shr
sahf
fisubs
out
adc
and
out
pop
push
mov
lret
jmp
cmc
std
fs
jno
mov
pop
mov
or
pop
jg
mov
cmp
ds
pop
out
aaa
scas
adcl
imul
push
xor
xchg
cmc
imul
out
xor
lods
pop
daa
pop
sub
add
gs
xchg
push
leave
and
xchg
jbe
loopne
stc
ds
inc
daa
ds
stc
pusha
inc
in
push
sub
les
pop
dec
pop
inc
scas
or
add
xor
rolb
outsl
dec
add
push
add
mov
int
jmp
or
dec
xchg
push
pop
shlb
xchg
andb
pop
jecxz
outsb
sahf
jae
bnd
sbb
out
pop
cmc
sbb
and
jnp
jne
mov
sbb
mov
dec
ret
adc
dec
movsl
in
fsubs
popa
mov
pop
xchg
adc
popa
sahf
lods
pop
mov
pusha
ds
movsl
jecxz
insl
in
dec
nop
push
stos
push
stc
out
push
push
jnp
addr16
clc
test
icebp
mov
mov
popf
ror
xor
mov
push
adc
jge
add
cltd
fwait
mov
fidivrl
pop
jle
mov
in
insb
push
xchg
cmp
adc
sbb
clc
pop
es
divb
ljmp
pop
mov
pushf
adc
js
cwtl
sbb
mov
stos
cmc
mov
mov
push
adc
inc
xor
lods
repnz
add
sub
rorb
sbb
sub
push
pop
lret
shl
cmpsl
repz
or
mov
jo
idivb
jae
push
mov
mov
pop
dec
repz
or
xchg
imul
cmp
cld
idivl
jecxz
jb
sbb
xor
aas
or
mov
jge
mov
cwtl
test
repz
loopne
faddp
jl
push
jno
orb
jb
sub
sahf
in
mov
pop
lods
das
mov
mov
cmp
aaa
inc
lods
add
rorb
rorl
nop
and
or
into
mov
mov
sbb
add
mov
push
adc
sti
out
lock
mov
or
mov
idivb
cmpsb
sub
xor
mov
test
xchg
inc
std
xchg
enter
and
pop
repnz
scas
add
lock
lret
aam
sub
enter
or
fidivl
out
mov
or
iret
out
ljmp
dec
cmc
mov
pushf
pop
aad
insl
push
push
sbb
xchg
and
sbb
sub
hlt
test
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
stos
clc
cmp
out
sbb
jo
jle
jo
pop
jno
xchg
mov
mov
or
mov
xchg
add
mov
add
sbb
call
stc
fidivrs
mov
lea
xor
outsb
cmc
ffree
and
popf
enter
push
adc
mov
dec
jns
cmp
daa
daa
lahf
jbe
sub
xor
rolb
pop
addr16
les
adc
daa
push
cwtl
fdivrs
mov
repz
and
xlat
dec
dec
test
xchg
add
addr16
rcrb
xor
mov
add
inc
mov
rorb
mov
aas
int
adc
movsl
loopne
frstor
lea
pop
insb
jno
or
push
lret
jp
add
lea
std
push
mov
pop
pop
int3
outsl
out
into
push
sbb
enter
dec
dec
sbb
and
mov
mov
imul
or
pop
lahf
jg
push
aam
sub
inc
adc
mov
cld
lret
sub
movsb
or
test
mov
loop
jl
inc
fidivl
or
iret
sbb
in
jmp
mov
rolb
or
mov
repnz
imul
hlt
pop
xchg
pop
test
xchg
std
mov
scas
ljmp
cmpb
mov
push
filds
adc
jb
aas
dec
cmpsl
jb
ljmp
mov
push
ljmp
push
ret
mov
jae
push
adc
sbbl
inc
fisttpl
aad
fwait
out
lock
push
ljmp
clc
cmp
inc
dec
sbb
in
popa
adc
pop
mov
out
xchg
xchg
cmp
xlat
push
out
cmpsl
lock
push
add
cmp
clc
fs
sbb
jne
jle
in
dec
adc
movsl
adc
pop
and
cld
loopne
mov
pop
ja
pop
dec
or
jmp
dec
fcomip
clc
fists
sub
loope
ret
cmpsl
inc
pop
fnstsw
scas
ss
dec
loop
mov
cmp
cmp
xchg
or
fidivrl
ret
js
jns
jmp
mov
mov
jno
mov
xor
push
in
fisttps
push
pop
pop
aas
pop
xchg
mov
sub
adc
mov
call
pop
test
setns
shll
aad
dec
arpl
aam
push
xor
cmp
jns
push
in
sbb
loop
xchg
mov
jae
xor
sub
mov
xchg
lcall
or
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
pop
or
mov
sbb
mov
xchg
fdivrp
outsl
or
hlt
cmpsl
scas
jb
fsubs
and
sbb
mov
pop
xor
stos
sub
mov
setge
lahf
or
je
push
das
jbe
cli
xchg
sub
push
mov
ljmp
popf
mov
data16
mov
out
inc
push
mov
divl
pop
xor
push
mov
cmp
pop
in
sahf
fnsave
mov
cmc
jge
out
gs
je
imul
movsb
popa
jl
cmp
inc
mov
mov
pop
out
lods
mov
pop
dec
repnz
out
lods
lea
xchg
aad
pop
fs
iret
mov
jg
adc
fs
xor
es
dec
lcall
adc
pop
mov
and
push
push
xchg
in
les
in
mov
xor
fstp
sbb
dec
insb
sub
push
adc
aad
into
sahf
fsqrt
lea
ja
movd
aas
bound
mov
leave
sbb
inc
push
pop
sarb
ffree
cmp
aaa
je
sbb
xchg
rcl
cs
jb
addl
push
sbb
mov
mov
aam
jnp
and
pop
jmp
xlat
cmp
cmpsb
je
lret
scas
loop
aad
sbb
shl
int3
xchg
mov
mov
repz
mov
fmuls
and
xor
sbbl
pushf
add
or
ret
adc
packuswb
insl
ss
sub
push
sbb
or
loopne
and
pushf
movl
ss
scas
shrb
xor
mov
xlat
mov
xchg
jnp
mov
xor
or
xchg
mov
rclb
mov
pop
data16
rclb
aam
nop
inc
in
xchg
sahf
push
scas
or
push
loopne
xor
adc
and
jge
testl
xchg
cmp
xchg
jnp
xlat
ficompl
arpl
pop
cmc
out
call
xchg
mov
leave
lock
call
inc
fldenv
mov
sarl
xor
mov
add
and
dec
call
iret
popa
or
daa
dec
shll
jns
scas
leave
lds
out
jge
sbb
fs
les
movsb
test
psubd
icebp
add
cmpsb
dec
test
aam
pop
xchg
xchg
inc
mov
lcall
sub
and
cmc
jb
cld
jle
dec
adc
cs
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
adc
adc
jg
mov
imul
popf
aaa
push
jne
les
in
imul
pop
mov
test
push
mov
ret
and
in
loopne
add
dec
test
dec
arpl
xchg
cmp
movsl
das
adc
mov
add
xor
fstpt
inc
push
sub
gs
ret
cs
mov
and
pop
xor
in
adc
stc
cmp
jmp
xchg
xor
loope
sub
mov
ss
inc
inc
das
jne
into
fisttps
mov
mov
out
ficompl
stos
shll
sub
outsl
scas
lahf
and
in
sub
flds
xor
outsl
pop
mov
add
hlt
out
scas
test
jns
adc
sub
jl
mov
push
sub
xchg
iret
mov
mov
loop
lret
js
pop
pop
and
xor
addr16
icebp
adc
pop
test
lahf
nop
cmpsb
es
sub
jge
lret
fsubrs
and
push
mov
bound
xor
add
jmp
inc
sub
std
sarl
mov
cmpb
jecxz
mov
cmp
jno
pop
lods
adc
arpl
xor
sahf
ds
orb
jnp
addr16
fmul
rcll
outsl
fildll
mov
cmp
push
xchg
add
rcrl
and
arpl
add
xchg
sub
push
mov
gs
lods
cmp
repz
aaa
dec
dec
jecxz
dec
es
xor
das
push
dec
jge
das
mov
out
aam
std
inc
fnstcw
inc
push
mov
xchg
pop
daa
push
int
aam
outsl
fimuls
adc
insb
xor
fstpl
fsubrl
rcll
push
mov
pop
lock
sahf
cmp
int3
xchg
inc
mov
fnsave
clc
out
push
pop
mov
dec
es
mov
or
xorl
fsubs
pop
jge
push
and
addr16
mov
outsb
mov
sbb
insb
test
loop
lahf
push
das
or
pop
sti
add
cmp
mov
xor
ret
stos
push
xor
aam
mov
movsl
shrb
add
icebp
aas
push
into
jecxz,pn
dec
adcl
mov
iret
sbb
in
pop
pop
xchg
inc
inc
inc
mov
into
sbb
xchg
mov
add
dec
mov
sbb
xlat
sbb
pop
xchg
mov
jmp
fmul
out
jno
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
popl
mov
jle
jo
add
ljmp
xor
imul
das
ja
lret
cmp
pop
xchg
arpl
mov
mov
and
inc
push
xor
loope
dec
mov
aam
rclb
xor
leave
adc
or
xchg
push
ja
lcall
shrl
dec
jl
push
sti
in
mov
add
or
gs
mov
xor
int
lret
insb
mov
or
cmp
mov
jae
lea
or
cvtdq2ps
xor
adc
sub
mov
jb
or
pop
mov
xchg
cld
ja
rcrl
cmp
insb
dec
repnz
mov
out
ljmp
test
xor
cld
subl
cmpb
test
repz
cltd
pop
loope
mov
sub
pop
mov
ds
push
cmp
cmp
repnz
push
js
mov
mov
orl
movsb
push
stos
inc
sub
mov
cld
pop
pop
inc
out
dec
and
arpl
scas
cltd
inc
outsb
aam
mov
pop
outsl
leave
iret
mov
sbb
pop
jl
mov
enter
pop
cmpsb
ret
or
jge
add
cmp
movsl
test
js
mov
pop
out
cmp
and
std
flds
xchg
lahf
popf
sub
cmp
popf
or
fst
or
loop
ret
divb
repnz
or
aas
xor
add
shlb
outsl
cmpsb
inc
leave
insl
push
test
adc
mov
push
out
adc
push
sbb
shrb
andl
incl
add
js
push
nop
xor
xchg
leave
jmp
stos
mov
adcb
test
mov
pop
fisubrl
cs
iret
and
imul
inc
cli
mov
test
jl
out
sbb
jmp
adc
push
arpl
addb
jecxz
cli
cltd
not
jp
addr16
icebp
fisubs
stos
push
pop
mov
outsb
adcb
sar
lret
cmp
mov
xor
or
jle
out
test
adc
mov
mov
fimull
add
sbb
push
rcrb
or
dec
test
add
xchg
cmp
push
sbb
inc
and
pop
adc
aas
filds
das
push
in
fnsetpm(287
xchg
test
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
