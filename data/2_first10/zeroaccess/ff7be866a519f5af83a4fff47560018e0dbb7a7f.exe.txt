push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
sbb
sbb
adc
sbb
lods
das
rorb
cs
lock
pop
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
loope
gs
fmuls
push
test
add
les
inc
xchg
repz
or
adc
mov
cmp
xchg
jo
mov
push
pop
xchg
pop
sti
mov
mov
and
fxch
and
jmp
sbb
addl
test
xchg
addr16
mov
mov
mov
lcall
sbb
lahf
mov
fildll
sub
fnstenv
shll
mov
push
mov
imul
adc
pop
inc
pushf
and
xor
cmp
sarb
xchg
popa
fwait
jmp
mov
push
es
xchg
xchg
test
cmpl
icebp
test
jge
mov
lods
testb
jbe
enter
test
insl
add
negl
iret
and
enter
sbb
adc
add
xor
arpl
inc
in
xor
fistps
push
cmp
jmp
sub
mov
in
pop
sbb
xchg
xchg
mov
push
xchg
cld
add
jb
cld
xchg
fnstenv
aaa
lret
xchg
push
and
jae
enter
mov
push
jmp
and
or
inc
adc
lret
sbb
insl
mov
jo
and
jge
cmp
leave
cmpsl
xchg
stc
sbb
scas
mov
xor
sub
xchg
mov
and
jae
lea
fcmovb
fcompl
and
inc
jg
pop
mov
stc
in
inc
pop
je
pop
xor
stos
xlat
push
ret
xchg
cmp
dec
aam
pop
xchg
dec
ror
add
mov
lret
test
inc
lret
inc
xor
push
xor
push
push
mov
mov
pop
mov
cltd
in
sbb
sub
adc
sbb
stos
ljmp
ret
and
inc
outsl
mov
xchg
insl
push
fisubrl
in
ds
loop
cld
mov
cwtl
xchg
push
push
and
sub
repnz
ficompl
mov
icebp
sbb
inc
testl
sahf
jno
repz
xchg
mov
lods
push
mov
sbb
dec
in
pop
push
stos
xor
add
adc
stos
adc
outsb
sub
xchg
cs
mov
imul
loop
adc
lods
cld
int
jg
in
or
add
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
je
sub
aas
out
xchg
mov
rol
sub
pushf
xor
int3
sbb
mov
mov
mov
jne
testb
cmp
nop
cmc
sbb
pop
pop
enter
sub
cmp
adc
mov
adc
jae
popa
jns
ja
pop
outsl
jno
mov
cwtl
repnz
mov
out
cmpsb
test
and
lret
movsl
loope
add
mov
daa
test
data16
pusha
dec
jecxz
outsl
in
jb
dec
leave
mov
push
call
roll
add
ret
mov
pop
fisttpll
pop
gs
sti
mov
imul
add
daa
xchg
pusha
jle
mov
aad
add
mov
scas
adc
pop
xchg
push
sahf
mov
mov
mov
jmp
xchg
dec
jecxz
sahf
inc
and
lds
das
mov
pop
stos
inc
mov
and
pop
mov
fidivrl
fwait
es
sub
adc
nop
lcall
jle
push
scas
cmp
dec
mov
sbbb
lods
sti
sub
adc
sub
inc
repz
xor
enter
xchg
xor
cmp
xchg
je
and
pusha
dec
iret
dec
movsl
hlt
arpl
dec
xlat
pusha
data16
movsb
inc
in
hlt
mov
enter
dec
sbb
push
sbb
fmuls
jle
inc
or
sub
xchg
xor
mov
xlat
cmp
fdivrl
fnstenv
sub
repnz
xchg
leave
punpckldq
pop
and
sub
js
clc
pop
mov
xchg
addl
add
adc
sbb
stc
sub
dec
js
test
sbb
xchg
cmpsl
lds
adc
arpl
pop
sub
test
adc
jl
xchg
xchg
aad
or
in
das
mov
pop
ficoml
pop
vmread
ds
pop
loope
push
add
dec
popf
lods
xchg
add
mov
or
jmp
jb
mov
inc
loope
inc
subl
xchg
mov
loopne
cmc
sbb
mov
xor
jnp
in
xor
lds
popf
outsb
stc
or
popf
in
inc
aam
dec
mov
adc
add
stos
push
add
mov
sub
loope
popf
push
xor
pop
leave
jo
fistl
or
jl
and
filds
and
push
outsl
add
xchg
pop
pusha
mov
and
jnp
cmc
ss
sub
nop
popa
dec
mov
xchg
mov
ret
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
lahf
clc
mov
xchg
xor
dec
idiv
popf
iret
ss
or
adc
or
movsl
lcall
in
inc
fwait
mov
cmp
xchg
aam
aam
push
xchg
pop
test
inc
les
xchg
ss
xchg
pop
push
jmp
orb
cmp
add
jbe
jp
hlt
bound
add
cmc
fcomp
mov
call
mov
sahf
andl
mov
out
outsb
xlat
dec
lahf
jp
fdivr
xor
aad
scas
out
mov
cmpsb
movsb
and
push
nop
shl
push
aam
add
in
jno
and
jge
outsb
inc
movsb
lods
stos
dec
scas
test
outsl
and
pusha
jl
xor
sub
inc
cmpsb
cmp
xor
dec
xchg
cmp
les
dec
js
xor
out
push
cltd
xor
lock
stos
lahf
push
insl
hlt
or
pop
nop
popa
add
cmp
int
add
xor
fs
push
mov
cmp
stos
rcrl
aaa
dec
in
jno
test
outsb
sar
or
mov
ja
inc
js
jb
cmp
lods
test
pop
pop
js
pop
dec
out
lods
dec
mov
addb
repz
scas
xor
jg
movsl
stos
push
sbb
mov
arpl
repnz
and
test
in
inc
loopne
dec
enter
ljmp
testb
loope
and
imul
cmp
scas
push
call
dec
ja
in
adc
mov
loope
add
sub
dec
outsb
orb
fs
mov
test
mov
xchg
xlat
lock
ja
jmp
push
std
aas
and
push
xor
outsl
lret
imul
jbe
add
inc
adc
or
cld
jmp
sbb
pushl
gs
nop
mov
and
shl
and
jno
ljmp
sub
lods
cmpl
push
loopne
adc
imul
aam
jl
inc
sub
or
mov
cmpsl
and
and
jo
sub
in
cmc
add
xchg
jnp
mov
dec
shrb
and
into
add
in
lret
add
jbe
aam
and
sbb
push
adc
lret
jmp
pushf
mov
das
jns
mov
adc
enter
addl
jecxz
jge
and
mov
dec
xchg
pop
out
lret
test
fs
ret
aas
jl
out
cld
jnp
mov
or
xor
sbb
test
in
in
addr16
iret
stos
decl
mov
and
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
fnstcw
adc
sbb
ud2
loope
xor
in
mov
sub
call
insb
push
mov
ss
jne
fiaddl
jns
lods
mov
add
inc
xlat
dec
mov
jns
pop
fwait
or
dec
sub
sub
test
cmp
cmp
and
repnz
or
and
cmpsb
mov
mov
rolb
mov
nop
in
cwtl
fs
push
add
add
aad
incb
mov
js
jae
inc
in
push
push
push
aaa
mov
insb
jecxz
jecxz
fdivrl
js
mov
cltd
sub
jl
and
dec
aam
fdivp
add
leave
hlt
sbbl
lods
fcmovu
notb
je
aas
jbe
dec
xor
notl
mov
cmp
mov
add
jne
cmp
repnz
pushf
jo
das
mov
stos
mov
mov
sub
addr16
fadd
jg
or
mov
or
shll
or
sbb
call
pusha
dec
mov
fs
out
xchg
mov
xchg
aas
xor
pop
lcall
nop
daa
in
mov
scas
je
sbb
scas
lods
jo
sub
imul
dec
mov
mov
stos
rcrl
pop
add
loopne
lret
inc
sub
add
xchg
lret
push
call
shl
dec
add
imul
inc
add
mov
ss
sub
cmp
fisubrs
out
out
add
cmp
jl
or
test
clc
mov
lea
sub
pop
mov
mov
test
ds
out
lcall
or
mov
lods
enter
dec
pop
mov
lret
lcall
daa
jg
jmp
hlt
movsl
lret
jecxz
ficoml
push
and
sbb
jnp
adc
gs
fsubrs
jb
out
sbb
add
test
mov
jge
stos
lock
test
cmp
xchg
int3
lds
movsb
mov
push
or
test
jb
outsb
popa
test
dec
or
bound
shrl
lock
add
lret
mov
sbbl
mov
sahf
daa
lret
ss
loopne
pop
xchg
xlat
jg
dec
daa
scas
out
test
xchg
das
hlt
sbb
pop
xchg
loop
mov
ret
popa
mov
inc
add
push
fcmovnb
inc
ror
mov
and
ds
sbb
scas
rclb
fadd
out
outsl
jl
pushf
mov
aas
fcompl
cmc
xor
add
cld
mov
fnsetpm(287
insl
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
push
mov
sbb
and
sbb
cmp
sub
xorl
mov
test
xchg
jbe
and
cmp
fwait
inc
mov
jecxz
movsb
imul
je
dec
lods
push
popf
sub
out
dec
iret
inc
add
pop
jb
cmp
sbb
int3
int3
fiadds
rorb
sbb
fwait
and
test
push
andl
addb
xchg
cmp
lds
cmc
sub
add
inc
lahf
insl
xchg
mov
dec
das
mov
dec
dec
jecxz
pop
js
push
or
mov
out
mov
sub
pop
lods
mov
push
pop
mov
push
ss
mov
out
out
jl
imul
jl
xor
aad
dec
sub
dec
into
push
xchg
mov
pop
pushf
mov
push
int
callw
inc
xchg
jb
mov
out
cmp
ficompl
mov
xchg
dec
in
rclb
mov
jp
jp
and
xor
into
inc
pop
pop
jns
stos
aas
notl
cld
push
adc
sbb
sub
cmpsl
insb
jae
adc
mov
pop
dec
test
rcrb
mov
shl
xlat
mov
out
fs
fcoml
cmp
jb
mov
pop
push
inc
or
mov
and
xchg
cmpsl
mov
mov
fwait
pop
or
cld
or
lea
lods
adc
out
push
mov
sbb
icebp
xor
push
lds
jp
adc
pop
ljmp
daa
cmp
xchg
push
addb
adc
inc
popf
stos
outsl
jle
dec
fisubl
fwait
std
and
cltd
push
lds
dec
daa
xchg
std
mov
pop
fists
movsl
enter
jmp
loope
push
daa
and
mov
fdivrl
ror
aam
push
xchg
enter
rcl
inc
xlat
cli
mov
inc
inc
lahf
stos
fnstenv
mov
das
lock
popa
push
mov
test
xor
out
stos
pop
fucomi
shl
sarb
push
cltd
xchg
push
in
loopne
out
cld
scas
negl
test
aam
pop
pop
pusha
fildl
sbb
stos
iret
inc
mov
or
jb
mov
dec
test
dec
xchg
jle
idiv
std
mov
mov
jge
push
xor
loope
add
adc
call
addr16
shll
int3
xchg
test
mov
cmp
mov
fldenv
push
nop
imul
hlt
or
lock
push
mov
xchg
sub
cmp
div
and
xor
pusha
pop
shll
sub
mov
push
xchg
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
inc
sarl
adc
sbb
test
jo,pt
rcr
aaa
sbb
mov
jbe
jne
sub
ds
nop
push
iret
dec
imul
xchg
adc
pusha
aas
jbe
jle
clc
int
pop
lds
sub
sbb
adc
sahf
and
out
adc
push
dec
mov
mov
cmc
mov
sub
adc
add
inc
das
dec
test
adc
sub
imul
jp
out
loop
push
xor
fxch
movsb
repz
pushl
test
mov
jmp
cld
inc
or
xchg
mov
out
loopne
mov
jo
sbb
fldl
imul
add
gs
push
or
dec
fsubr
mov
movsl
insb
and
inc
add
dec
scas
addb
cltd
sbb
adc
out
fistpll
das
xchg
hlt
or
mov
mov
mov
leave
popf
ljmp
and
popf
cmc
jo
dec
pop
xor
and
arpl
cmp
cmpb
les
mov
xchg
decl
dec
adc
and
movsl
ja
adc
cmp
into
push
jo
mov
mov
addr16
pop
addr16
dec
lods
fs
sarl
fmuls
mov
jmp
xchg
adc
jae
jmp
pop
cld
cli
lock
lods
js
adc
add
daa
cwtl
dec
push
xchg
jno
mov
mov
or
jbe
out
sub
jnp
mov
shll
xor
arpl
xor
cmp
dec
xor
daa
sub
inc
sbb
insl
push
xor
lods
mov
push
sbb
test
xchg
loop
shrl
mov
or
repz
sbb
push
sub
xor
jo
roll
addl
or
mov
add
int3
xchg
fstp
jmp
outsb
es
ss
jmp
sub
test
and
or
test
add
or
xchg
sub
insb
ret
and
in
adc
addr16
bound
sub
in
xchg
fcom
mov
push
fwait
outsl
popf
cmp
fdivs
ja
or
sub
cltd
je
mov
loop
addr16
out
jl
fdiv
xchg
in
int3
or
adc
ret
std
xor
cmp
pop
repnz
arpl
cmpsl
inc
push
sub
imul
xlat
and
cli
sbb
scas
sbb
inc
dec
sbbl
cmp
inc
jne
aam
shlb
sub
sub
xchg
stos
or
call
fnstsw
loop
movsb
test
fisubl
inc
into
nop
cmp
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
fdivs
dec
negb
sbb
adc
sbb
jno
int
daa
pop
push
outsl
xchg
aam
push
cli
pop
leave
push
addr16
lock
rolb
insl
movsb
out
sbb
les
fimull
gs
sahf
push
xchg
adc
push
inc
jp
xchg
sbb
jnp
test
or
mov
push
lods
gs
sbb
mov
add
pop
and
mov
add
cmp
enter
mov
pop
inc
in
sbb
add
div
or
pop
rcll
jo
lcall
push
xchg
fnstsw
adc
dec
push
mov
stos
loope
mov
pop
push
inc
cmc
push
imul
mov
push
add
xor
ljmp
das
mov
or
das
lods
cmpsb
gs
push
lret
fsubs
outsb
out
cld
dec
out
mov
add
mov
pop
sub
add
lds
xchg
pop
sub
insb
xchg
cwtl
jno
fs
mov
sbb
lds
frstor
mov
push
mov
imul
gs
or
mov
inc
sbb
or
arpl
jle,pt
mov
dec
std
mov
sbb
pop
adcl
iret
clc
sub
jb
movsbl
pop
or
mov
test
popa
shl
jo
lds
shr
lret
loopne
popa
xchg
and
imulb
xor
shlw
orl
mov
aas
icebp
inc
lret
mov
ret
pushf
fwait
or
xor
or
push
xchg
lock
jecxz
mov
pushl
push
and
aaa
les
xor
mov
pop
jmp
cmpsb
cmpsl
cmp
ljmp
mov
int
xor
leave
cmp
cld
mov
sbb
xor
int3
push
fldl
icebp
xor
cli
dec
stos
loop
inc
push
je
pop
aaa
sbbb
jnp
jno
pop
add
jnp
icebp
inc
lea
lock
test
xchg
inc
pushf
test
push
inc
adc
push
stc
xchg
cld
cmc
add
sti
out
imul
or
scas
dec
adc
fidivrs
andl
push
mov
xchg
out
push
imul
xlat
sarl
dec
and
cmp
add
mov
push
rclb
leave
or
mov
and
push
xchg
adc
jp
adc
sub
sbb
cmpsb
xchg
pop
shll
and
xchg
push
xchg
or
or
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
push
jle
lock
and
sbb
push
in
div
clc
movsl
add
lcall
nop
jp
int3
inc
loop
push
add
sub
fmuls
pop
dec
divb
dec
xlat
sbb
xchg
dec
fsubl
pop
cmp
rcrb
mov
in
xor
out
inc
mov
movsb
xchg
and
adc
or
dec
js
xchg
and
cli
daa
cmp
roll
dec
or
pop
sub
xlat
pop
pop
inc
mov
add
dec
out
test
mov
jp
mov
pushf
std
mov
ret
sarl
jb
fnstenv
scas
sbb
inc
cltd
dec
dec
add
jae
daa
jge
push
sub
sbb
aas
jl
into
mov
fcmovu
xchg
dec
ficomps
dec
lcall
and
mov
mov
xchg
jp
mov
xor
subl
lods
lods
in
movsl
mov
xcrypt-ecb
cmpsl
int3
aas
add
push
mov
in
aaa
mov
xchg
dec
mov
aas
std
mov
fisubs
inc
mov
and
stc
mov
stos
pop
pop
xlat
mov
sbb
mov
sub
sub
xchg
xor
je
cmp
push
push
lods
or
add
add
pop
fsubp
imul
fcmovb
in
inc
add
aas
psllw
outsb
test
ss
data16
std
roll
and
cli
or
xchg
cld
pop
jne
arpl
in
xchg
and
mov
xlat
aam
out
mov
bound
add
sub
adc
fimuls
pusha
loop
shr
sub
cli
dec
es
jb
comiss
fstpt
mov
push
push
lea
and
adc
repz
and
std
cmp
pop
add
sub
jle
movl
sbb
mov
mov
or
int3
mov
mov
jne
scas
sbb
notl
mov
mov
inc
jo
cmp
orl
shrb
pop
mov
ret
inc
shl
inc
jo
mov
adc
mov
insb
out
sub
pop
dec
outsl
lock
xor
push
pop
push
push
mov
jmp
std
pop
cwtl
jmp
dec
nop
cmpsl
xchg
push
mov
xchg
mov
dec
gs
mov
mov
pop
inc
or
mov
push
xchg
sub
stc
jae
icebp
fbstp
mov
mov
fdivr
sti
xor
mov
and
and
xor
push
mov
std
scas
es
sbb
stos
mov
clc
jb
sub
es
insb
lods
movntq
rcr
enter
push
mov
test
mov
ret
imul
lods
enter
add
add
push
push
push
mov
icebp
add
pop
jmp
sbb
adc
sbb
adc
sbbb
mov
dec
cmp
mov
push
loopne
insl
sbb
movsb
xor
testb
jg
adc
mov
pop
cmp
aas
pop
jl
xor
cli
sbb
or
into
or
cli
nop
loop
pop
mov
lss
xchg
rorl
jmp
nopl
hlt
or
add
cmp
jle
or
xchg
xor
ja
push
inc
sti
push
pushf
cmpsl
iret
pop
push
jge
xor
lret
cld
adc
arpl
push
cmpsb
mov
jbe
mov
mov
aaa
adc
cmpsl
sbb
pop
dec
call
cld
adc
aad
in
faddl
mov
xor
outsb
test
push
mov
sahf
xchg
lods
xchg
mov
or
pop
pop
clc
dec
shlb
roll
jmp
mov
subb
cmc
xor
fwait
mov
cmc
lret
std
outsb
fmuls
mov
pop
subl
enter
adc
jae
cwtl
fisttps
ret
push
addr16
inc
xchg
testl
movsl
sbb
lods
mov
or
push
cli
ret
lahf
jb
orps
je
fdivrl
jecxz
call
add
bound
xlat
push
loopne
dec
ficomps
out
xchg
jge
arpl
mov
mov
push
out
adc
out
add
cltd
jmp
in
cmp
mov
test
push
cmc
pop
push
pop
adc
loop
push
or
dec
mov
xchg
inc
mov
xchg
sbb
jno
cmp
mov
test
mov
cmp
sbb
notb
daa
pop
mov
jp
sahf
rolb
pop
push
or
cmp
and
scas
add
cmpsb
or
sbb
sahf
stc
fldcw
cmp
das
js
push
mov
andb
mov
push
mov
pop
sbb
daa
outsb
mov
fnop
enter
lods
sbb
inc
xchg
pop
out
mov
fldln2
ud0
aas
jae
mov
outsb
mov
mov
fisttpl
jecxz
dec
push
notb
adc
and
cmpsb
xchg
orl
dec
pop
push
stos
inc
std
dec
lret
outsl
pop
mov
loopne
roll
in
js
jl
pop
dec
pop
inc
cmpsl
in
call
sarb
int3
inc
fwait
push
jo
mov
sub
roll
push
sbb
out
dec
daa
jne
sub
outsl
mov
xchg
ss
xor
sub
jg
je
test
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cmc
shll
in
sbb
adc
sbb
jo
xor
pop
mov
or
adc
mov
mov
or
jne
xchg
and
and
push
insl
dec
xchg
mov
xor
lahf
jb
stc
xchg
out
int3
sbb
iret
jne
shll
push
or
jo
mov
pop
fwait
jbe
sbb
popa
movsb
jl
sbb
or
cs
push
js
and
mov
aaa
aam
mov
shr
das
pop
ja
cltd
ret
push
push
fcomps
mov
and
mov
cmp
cmp
cmp
scas
cmpsb
xchg
pop
incl
adc
pop
dec
dec
loope
fldz
sub
adc
lea
in
mov
repz
mov
sub
cwtl
ret
push
std
lods
cmp
cltd
xchg
cmp
aam
outsb
pusha
dec
jns
mov
jb
sbb
or
xchg
adc
add
or
adc
xchg
add
mov
mov
add
dec
ljmp
aaa
adc
xchg
jbe
je
inc
incl
mov
inc
push
clc
mov
mov
lahf
push
jne
xchg
lahf
enter
pop
fiaddl
stc
mov
xchg
inc
inc
dec
fs
inc
push
sub
cltd
add
push
or
loope
and
jnp
dec
cmp
test
pop
movb
mov
mov
or
decb
jle
jl
stos
mov
and
mov
mov
in
incl
pop
xlat
adc
add
lods
test
sub
popf
add
push
pop
xor
fbld
mov
push
push
aad
xchg
cmpsb
adcl
and
pop
out
stos
push
pop
sti
aaa
mov
push
dec
mov
sub
and
aas
call
jne
sbb
sbbl
movsl
cwtl
mov
lds
cmp
into
ljmp
xor
cmp
mov
lods
mov
cmpsl
ret
jb
sahf
lods
xchg
add
adc
mov
sahf
pushw
push
std
roll
cmpsb
out
insl
push
sbb
xchg
add
sub
pop
pop
xor
sub
push
pusha
je
mov
mov
or
shlb
mov
push
loop,pn
push
cli
enter
mov
push
sbb
cmp
pop
lea
push
mov
jno
shll
adc
inc
mov
mov
ret
and
or
in
mov
mov
popf
test
jbe
xor
xchg
mov
dec
repnz
jno
jns
aad
cmp
and
popf
stos
lods
jl
jp
fwait
cmc
shl
and
inc
push
lcall
pop
jge
mov
push
push
mov
ret
or
add
add
les
or
pause
adc
fistps
sbb
adc
sbb
out
stc
jno
sbb
ljmp
ds
xor
xchg
ds
data16
outsl
jbe
dec
cmp
out
dec
in
dec
andb
adc
and
mov
sbb
imul
pop
pop
mov
sar
xchg
xchg
xor
loope
adc
test
jno
scas
jl
mov
pop
imul
hlt
push
push
jmp
sub
xor
outsl
xor
scas
adc
mov
shll
xchg
inc
pop
out
aas
xor
dec
xor
and
pushf
fistpl
lret
shlb
jo
pop
sbbb
jl
test
xor
shrb
rorl
dec
adc
xor
rcrl
les
inc
icebp
gs
std
xorb
adc
jno
xor
mov
maxps
bnd
xchg
outsb
mov
into
loope
push
and
xchg
call
cmp
jmp
sti
mov
mov
pop
mov
repz
test
mov
dec
mov
pop
shlb
pop
aaa
and
int
pop
pop
xchg
jno
mov
leave
popa
fistpll
mov
fs
adc
mov
out
loopne
adc
pusha
stos
bound
ja
and
cmp
add
es
add
mov
into
pop
loopne
out
test
dec
test
adc
jl
mov
cmpsl
jmp
pop
jb
sbb
mov
cmc
mov
inc
mov
les
add
int3
call
lea
lcall
sbb
mov
cs
stos
or
xor
mov
fcmovbe
out
mov
sbb
cmp
mov
dec
push
insb
int
add
into
popf
adc
fistpll
jmp
push
push
or
in
lock
mov
je
pop
cltd
mov
pop
rolb
and
push
and
iret
or
push
dec
cmp
lods
bound
fildl
add
mov
das
aad
sbb
inc
adc
xchg
jge
push
mov
clc
cli
sbb
inc
cmp
popf
push
xor
addl
pop
cmp
popa
sub
jmp
stos
inc
in
sbb
shrb
aas
xor
mov
ret
pusha
sbb
or
mov
xor
addl
int
mov
dec
pop
add
adc
cwtl
inc
mov
jnp
inc
sti
pop
out
aad
pop
orb
aad
in
aas
mov
sub
imul
loope
lods
lods
repnz
xor
jp
mov
dec
sub
outsb
and
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
xorb
loopne
lock
sub
insl
icebp
fninit
hlt
push
das
jne
iret
fnstcw
rorb
fs
xchg
ljmp
push
or
outsb
std
aaa
add
pop
ss
mov
adcl
lds
stc
mov
jecxz
dec
out
repnz
push
cs
addr16
adc
jge
mov
test
out
imul
mov
jle
dec
cmp
int3
nop
inc
and
std
js
sbb
insl
mov
xchg
inc
nop
movsl
sbbl
adc
rol
mov
shlb
cwtl
push
testl
add
dec
xor
je
out
std
pop
push
shll
sahf
sbb
out
jb
leave
mov
mov
xor
dec
cwtl
sub
mov
sar
push
in
pop
mov
gs
mov
or
mov
xchg
in
loope
frstor
aas
push
cmp
imul
jge,pt
xchg
adcb
mov
outsl
fstps
xchg
in
inc
mov
inc
fsubs
pop
pop
pop
inc
mov
int3
clc
pushf
or
jae
icebp
push
cmp
inc
sbb
shll
xor
test
pop
out
mov
cmc
mov
test
fwait
test
xchg
sbbb
les
addb
adc
push
add
pop
push
inc
xchg
lods
jnp
mov
jne
cmp
mov
push
outsb
mov
nop
add
lret
sahf
adc
xchg
enter
in
rcl
cmpsl
daa
cmp
inc
popa
xchg
pop
jl
ss
clc
dec
subb
loope
sti
int3
mov
dec
sbb
dec
push
pop
and
jo
lret
sub
or
leave
mov
fisttps
xchg
adc
mov
mov
mov
xchg
rolb
lea
in
test
dec
xchg
or
cmp
jmp
je
jp
mov
cmp
xchg
mov
dec
test
push
mov
insl
lret
xchg
movsl
push
outsl
andl
std
add
and
divl
outsb
aas
pop
inc
mov
push
cld
cli
test
lds
mov
push
js
clc
cmp
fcmovnbe
sbb
pop
adc
cmp
jmp
add
pop
add
adc
stos
xlat
imul
dec
jl
jecxz
aas
push
lock
jmp
xchg
repz
pop
ljmp
inc
sti
out
int
insl
push
fwait
sbb
ret
out
into
mov
xchg
dec
xor
inc
stos
cmp
push
stos
inc
stc
cmp
shlb
jno
pop
mov
xchg
mov
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
and
int
js
sbb
and
sbb
sbb
pop
aas
mov
dec
in
pop
push
fdivl
jp
lods
dec
stos
daa
enter
shr
pop
add
inc
xchg
inc
cmp
and
cmp
outsl
and
ljmp
mov
cmc
andl
push
nop
rclb
cmp
movsl
cld
std
push
jbe
shll
mov
jecxz
cmp
sbb
jnp
sbb
test
pop
mov
in
cwtl
lret
fisttpll
cmp
push
cmp
mov
in
sub
xor
test
mov
rclb
add
push
sahf
insb
inc
lahf
jl
cmpsb
pop
cmp
daa
xchg
fwait
xchg
icebp
and
xchg
inc
xchg
lods
mov
pop
inc
popa
clc
out
int
ja
jbe
mov
xor
shrb
insl
and
push
imul
mov
in
push
aaa
fmul
and
es
add
test
push
xchg
or
test
adc
rol
sbb
xchg
lahf
call
leave
shlb
cmp
adc
pop
into
dec
fsubrl
sbb
jmp
lcall
shll
push
push
addr16
std
push
arpl
je
test
test
mov
daa
jmp
cmp
mov
les
xchg
decw
aam
or
sbbb
lret
adc
pop
cmp
jnp
je
gs
into
montmul
cmpsb
inc
repz
mov
std
jnp
sarb
jl
xlat
jg
lods
pop
mov
push
xor
popf
mov
das
push
mov
push
jecxz
and
jecxz
aas
mov
sbb
cld
cmp
pusha
pop
jge
pop
adc
xchg
les
jnp
repz
notb
aas
sub
int3
inc
fnstcw
loope
test
adc
pop
inc
inc
loop
insl
push
add
xor
adc
ret
lret
cmp
pusha
insl
mov
icebp
cltd
sub
sarl
in
mov
outsl
mov
push
insl
imul
push
lahf
push
jmp
sbb
jl
cli
jno
popf
dec
popa
pop
push
loopne
pop
adc
xchg
pop
xchg
inc
stos
xchg
sub
or
fisubs
pushl
inc
cltd
jecxz
sbb
aad
push
cld
jb
adc
pop
xchg
fsts
testb
mov
lret
jl
adc
stos
loop
dec
jmp
and
jne
sbb
in
out
test
mov
jno
inc
mov
in
es
dec
jo
push
stos
int3
ds
sub
or
aam
hlt
sub
mov
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
int3
lcall
and
sbb
fs
lea
arpl
push
push
mov
rclb
xor
jae
xor
push
cmpsl
push
sub
aas
inc
cmp
push
lret
ss
adc
scas
mov
push
mov
cmpsb
push
inc
fistpl
ss
xchg
or
inc
bound
xchg
stos
pop
cld
dec
lret
arpl
pop
inc
and
ret
int3
mov
mov
icebp
push
stos
leave
mov
mov
in
push
jae
dec
cmc
mov
shlb
dec
gs
sbb
and
xor
push
sbb
xchg
sti
pusha
adc
mov
les
sbb
fwait
les
orb
push
xor
xlat
loop
loope
mov
scas
ja
and
stos
inc
cmp
sbb
inc
mov
cmc
movsl
xchg
pop
aam
xchg
dec
mov
xor
cmp
cmp
stos
shll
and
into
jecxz
xlat
test
sbb
xchg
lahf
in
cli
out
notb
hlt
std
adc
push
cwtl
scas
sbb
jns
pop
pop
cmp
js
shll
mov
popf
js
jg
fwait
inc
int3
ffreep
jnp
pop
js
mov
jb
pop
xchg
mov
sbb
repz
ljmp
test
jo
sbb
sarb
mov
pop
in
adc
push
aam
jns
adc
in
scas
lret
lea
out
in
or
push
cmp
inc
adc
popf
inc
xor
cmpsl
insl
cmp
fistl
and
cmp
aad
jbe
rcrl
nop
lcall
push
scas
nop
jle
add
fiadds
mov
jg,pn
lahf
and
enter
adc
pop
ret
out
xlat
cs
cs
mov
adc
movsl
xchg
lcall
aaa
push
out
nop
dec
adc
mov
add
xchg
xchg
jno
out
popa
jno
fld
mov
sti
cmp
mov
pop
xor
mov
in
xor
cmc
mov
aad
mov
xchg
scas
jns
xchg
cmpsl
lea
cltd
cwtl
mull
or
pop
jnp
fisubs
stos
lcall
jl
arpl
repnz
jno
mov
mulb
test
fisubs
cli
jno
mov
lods
jmp
sbb
aam
shll
jle
das
test
push
popa
in
mov
aas
cmpsl
and
and
fstpt
lock
xchg
pop
arpl
fwait
push
andb
mov
into
add
mov
push
sti
std
out
xchg
xchg
scas
xchg
imul
ja
sti
lret
jl
pop
pop
fcom
fmul
pop
outsl
mov
in
mov
xchg
adc
cmpsb
mov
outsb
mov
stos
cmp
add
test
inc
adc
inc
cld
mov
mov
jmp
dec
lret
repz
cmp
fildl
xor
sbb
adc
sbb
adc
stc
mov
out
test
cwtl
inc
inc
adc
stos
movsl
xor
aam
cmp
sbb
insl
dec
cmp
inc
pop
fs
mov
dec
rol
popf
addb
dec
xchg
les
fisubl
in
test
or
jecxz
nop
xchg
and
dec
mov
or
ss
cld
xlat
pop
push
push
mov
sti
dec
imul
sub
sbb
out
ja
dec
cli
mulb
test
lock
mov
cmp
inc
sub
pusha
dec
fsub
ja
push
mov
into
pop
data16
stc
dec
fmul
lock
add
xchg
dec
cmpsb
cltd
aam
enter
daa
negl
test
sub
lret
or
adc
shr
push
hlt
jne
ret
adc
jp
test
jg
rcll
mov
adc
cmp
xchg
test
jecxz
add
std
dec
call
bound
dec
and
xor
inc
es
nop
loopne
mov
lret
sbb
or
mov
jge
pop
mov
outsb
dec
jle
pop
push
orl
xor
sbb
pushf
lds
mov
sbb
dec
rclb
cs
inc
flds
arpl
stos
loope
in
jl
in
dec
out
out
cmpsl
mov
mov
pop
push
cmpsl
les
jb
push
std
jmp
cld
popf
sbb
and
inc
aad
adc
fimuls
or
movaps
out
mov
pushf
add
cli
lds
fcmovbe
or
sub
sub
lret
lods
ss
shlb
push
test
adc
or
sarb
mov
insb
adc
xchg
loope
aad
mov
mov
push
insl
lahf
inc
fdivs
adc
mov
sub
jns
mov
mov
test
sub
mov
xor
push
aam
fwait
test
addr16
aad
sbb
sarb
pop
push
sub
scas
hlt
jb
test
repnz
lret
sbb
mov
nop
jmp
cmp
xchg
sbb
call
or
adc
leave
inc
mov
shlb
lret
xor
mov
clc
mov
jae
mov
adcl
mov
jno
mov
xor
cmpsl
dec
pop
es
aam
fiadds
xlat
rcrb
add
jge
js
nop
sub
pop
dec
icebp
cmp
in
inc
fiaddl
outsb
mov
je
fnsave
mov
dec
push
sbb
into
add
mov
aas
jnp
jecxz
push
and
mov
lods
xchg
mov
leave
lcall
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
imul
adc
sbb
xchg
adc
repnz
mov
xchg
in
cmpb
mov
popf
adc
popw
inc
bndstx
cmp
std
mov
xchg
lds
sbb
sti
out
pop
inc
mov
addr16
movsl
jbe
pop
lock
jg
cmp
inc
jnp
mov
inc
dec
xchg
mov
ss
mov
call
out
orb
lods
adc
sub
cmp
push
xor
mov
mov
add
pop
xchg
mov
movsl
cmp
jl
sbb
cmpl
xor
xor
call
fbld
pop
rcl
pop
lret
pop
pop
rcll
test
loopne
push
roll
pop
imul
dec
add
mov
pop
in
lock
ss
mov
add
pop
pop
jb
pop
push
and
adc
jbe
pusha
and
push
inc
mov
insw
loope
mov
es
test
push
mov
inc
push
pop
notl
ficomps
mov
hlt
mull
mov
insb
adc
mov
outsl
js
adc
call
jmp
enter
sbb
shlb
adc
icebp
push
or
lret
shlb
push
mov
push
stos
dec
xchg
add
aad
in
inc
dec
push
mov
rcll
sub
clc
ja
xchg
repnz
inc
add
jnp
inc
lcall
mov
and
js
call
jp
mov
inc
or
lret
mov
cmp
incb
mov
cmp
mov
add
dec
lods
ja
ret
mov
ss
sbbb
aaa
fldenv
rorb
das
movl
push
fidivs
fsubrp
add
dec
dec
enter
out
clc
push
sub
adc
mov
pop
xchg
cs
sbb
sti
out
or
mov
cmp
sub
jne
jnp
clc
mov
dec
lahf
ficompl
mov
push
cmp
mov
aas
add
scas
jecxz
divl
pop
in
mov
xor
push
jge
insb
movsl
int
xchg
lret
pop
movsb
loop
into
shrl
add
testb
adc
xchg
int3
stos
lods
in
adc
sub
test
or
or
inc
in
jp
xor
or
fsts
je
sbb
adc
jnp
push
sub
inc
adc
mov
inc
out
adc
sbb
rorl
push
iret
add
inc
xor
mov
push
mov
pop
pop
jmp
sub
cs
xor
jno
lods
lods
xor
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
mov
sbb
mov
xchg
pmulhw
pop
and
xchg
mov
jp
jge
xor
push
cmp
hlt
mov
leavew
or
ss
movsl
push
xchg
sub
enter
outsl
pusha
lret
push
cmpsl
jge
mov
push
in
sbb
lret
lds
movsl
es
pop
push
mov
imul
fcoms
jo
insl
pop
mov
push
into
push
clc
insb
cli
adc
lods
mov
imul
jmp
adc
xor
lds
dec
push
js
lret
adc
inc
sbb
xchg
mov
jmp
ljmp
jecxz
xchg
pop
xchg
es
ret
sbbl
cli
cmp
test
je
mov
hlt
fsincos
pop
xor
fwait
push
ds
imul
fadd
sub
lcall
jle
movb
test
sarl
shlb
pop
fs
movsb
mov
fwait
rolb
lods
popl
or
outsl
mov
inc
sub
test
sub
mov
addr16
jge
repz
or
xlat
gs
and
xchg
iret
cld
rol
mov
add
add
in
movl
dec
adcl
stc
cli
cltd
popa
or
fs
jbe
sub
cmp
and
fwait
pop
mov
jecxz
cmp
mov
aaa
xchg
cltd
pushf
sbb
add
xor
lret
mov
test
dec
mov
or
dec
sbb
xor
adc
data16
mov
push
add
int3
sub
mov
adc
xchg
in
jg
test
in
push
mov
push
jae
jb
mov
cmp
insl
loopne
mov
mov
xchg
mov
inc
out
addb
dec
cwtl
push
repz
jbe
fwait
mov
movsl
sbb
dec
mov
shl
arpl
cmp
jno
xchg
daa
jo
and
inc
push
mov
jmp
xchg
dec
out
lods
fildll
cltd
loopne
shl
lret
or
lea
sub
or
mul
dec
jnp
adc
jle
insl
mov
jns
icebp
out
ret
mov
dec
aam
repnz
mov
outsl
sbb
fidivl
pop
divl
nop
aad
or
dec
jno
into
rolb
sarl
push
sub
inc
es
jmp
jo
or
lahf
das
fsubl
iret
enter
jnp
ss
mov
sbb
add
mov
push
ret
aam
mov
add
cmp
insl
lods
frstor
xorl
push
std
lock
repz
jle
enter
mov
adc
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
jmp
mov
and
sbb
cwtl
inc
loope
dec
repnz
adc
pop
lret
psubsw
out
sub
or
popa
out
mov
dec
cmp
in
iret
das
push
pop
cmp
adc
adc
int
dec
aad
ss
mov
sbb
rorl
sub
push
mov
cmp
icebp
std
cmp
and
dec
and
testl
in
mov
hlt
dec
add
cld
mov
iret
addr16
dec
pop
popa
popf
inc
fbstp
mov
xchg
pop
xor
movsl
pop
pop
xchg
cmp
popa
insl
fidivl
mov
loope
or
data16
les
fsubl
data16
out
pop
mov
pop
push
imul
bound
dec
int
dec
xchg
cld
dec
das
xchg
movsb
je
dec
sbb
ret
or
in
xchg
mov
xor
test
xchg
push
cmp
arpl
rorb
ds
xorl
aaa
or
pushf
je
inc
xchg
xchg
cli
dec
mov
addl
xor
xor
jns
notl
mov
ret
cmp
stos
or
repnz
das
xchg
pop
insl
push
add
sub
add
in
push
push
ds
xor
call
mov
out
imul
adc
sbb
inc
movsb
push
fldcw
cmp
sub
dec
int3
mov
sub
ja
out
popf
fisubrs
sub
cmc
addr16
pop
outsb
mov
je
test
mov
push
cmpsl
mov
loopne
nop
ljmp
jne
jecxz
push
inc
or
leave
mov
js
add
mov
fwait
js
cmp
outsl
lret
cmp
jns
or
xchg
push
shrb
test
shll
negb
jno
fstps
in
mov
and
cmp
push
xor
cmpsl
mov
fs
movsb
and
lret
rorb
into
sarl
add
xor
pushf
mov
lret
hlt
xchg
adc
pushf
jno
fbstp
or
aaa
mov
xchg
jne
int
dec
subb
int
mov
inc
fdivrs
or
call
enter
out
jge
enter
sti
dec
lcall
fistps
push
sbb
popa
pop
xor
nop
jb
sbb
or
push
mov
shr
jge
fstpt
mov
rcr
mov
cmc
dec
push
test
cli
cld
mov
mov
cmp
jne
push
or
push
int
xchg
pusha
sbb
dec
add
repnz
ds
mov
cmp
jae
out
fadds
clc
insb
inc
decl
pop
je
out
and
rcl
jl
pop
or
mov
aad
sahf
pop
cld
push
clc
lret
popfw
lods
imul
cli
push
xor
sub
mov
dec
add
jecxz
ljmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
jns
sub
lret
push
pop
jnp
ret
and
loopne
loope
aaa
dec
rorl
rorl
fists
cmpsb
negb
xchg
jbe
and
pop
cmc
inc
fcmovnbe
call
push
pop
rcll
add
cmpsl
gs
xchg
mov
cmpl
sub
mov
fsts
push
pop
pop
fiaddl
sbb
push
or
mov
inc
push
iret
mov
iret
push
into
fwait
adc
sbb
cmc
loop
xchg
mov
lods
mov
push
les
push
in
pop
xchg
movsb
sar
enter
inc
fldenv
loop,pn
push
push
scas
loop
jg
push
cmp
fwait
pop
fwait
inc
dec
dec
ret
jns
aad
divl
fistpll
lds
fwait
jecxz
aam
mov
lock
pop
sub
adc
shll
aad
dec
in
mov
aas
lret
mov
jae
loopne
push
jl,pt
or
sbbb
add
jnp
sbb
mov
fwait
dec
loopne
pop
mov
push
sbb
xor
ret
fnsave
test
ret
jecxz
loope
mov
fdivrp
dec
cmpsl
adcb
and
out
movsl
addr16
xor
inc
lods
popf
or
scas
cmp
enter
jne
std
xchg
push
jbe
dec
rcrl
fwait
sub
lock
popf
out
pop
or
sbb
lods
and
xor
cmp
loope
js
xchg
inc
jmp
movsb
xor
sbb
add
fldl2t
pop
mov
push
adcb
and
sub
cmp
sbb
jbe
mov
stc
lock
std
lcall
adc
jae
fdivl
bound
out
rcl
notl
cmp
adc
sub
push
fistpl
rcrb
lcall
in
shrb
rcr
dec
pop
dec
lods
lret
adc
sarl
jnp
xchg
pop
xor
and
test
sub
sahf
jae
and
push
xor
das
aam
or
aaa
push
pop
jno
cmp
dec
and
push
cs
mov
in
sub
xchg
shll
cmpl
daa
sbb
insb
push
movnti
sub
push
mov
cmp
dec
into
xor
mov
lock
or
or
push
cmp
testb
jo
adc
scas
fsts
fdivrs
jmp
jmp
xor
dec
mov
xchg
xchg
ja
xchg
test
mov
cmpsb
nop
sbb
int
sbb
negb
add
aad
movsb
push
jl
jmp
pop
fcmove
cltd
les
pop
mov
insb
repz
cli
cmp
pop
lcall
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
mov
mov
and
sbb
or
scas
fdivs
sbb
jmp
fdivl
mov
ret
into
out
data16
push
push
jne
xchg
rcrb
cltd
in
add
div
std
ret
mov
pop
adc
rorl
bnd
les
inc
pop
pop
jo
in
imull
and
inc
inc
stc
sbb
clc
add
inc
addr16
inc
loop
mov
mov
lret
outsl
mov
xchg
orl
xchg
and
jle
shlb
ret
inc
in
popa
bound
aad
addr16
push
lds
pusha
push
cmpsb
xchg
cld
jl
in
adc
pusha
nop
lret
add
test
movsb
rcll
in
aam
xchg
lods
jbe
dec
fstpt
cmp
lock
add
fnsave
pushl
clc
lcall
mov
xor
negl
sbb
int
mov
idivb
rcrl
mov
aad
dec
xlat
add
pop
cld
jno
or
pop
and
jne
push
xchg
iret
pushf
imul
mov
jno
stos
push
and
lds
mov
push
aad
out
call
mov
push
test
push
int
cwtl
add
mov
pop
xor
mov
mov
xchg
rorl
inc
loope
fists
call
xor
cmp
ja,pn
mov
ret
pop
mov
add
jl
jae
insl
jp
xchg
fsubrs
out
loop
push
daa
jp
push
cmp
cmpsb
mov
sub
push
and
push
jbe
or
sub
insb
jne
or
mov
aas
fdivs
sub
cwtl
fs
cmp
mov
les
sar
or
ret
mov
dec
mov
into
ds
aaa
push
cltd
pop
pushf
cmp
jmp
cmp
lret
movsb
xchg
xor
fst
jle
arpl
add
cwtl
inc
out
sub
aad
stos
or
repz
clc
mov
iret
jl
sbb
stos
push
sub
jnp
ds
ja
mov
or
push
lds
fwait
jge
cmpsl
xor
rcl
test
mov
fwait
xor
mov
pushf
lret
jae
and
leave
sub
pcmpgtw
ds
inc
cmp
rcll
xchg
cmpsl
aas
cwtl
xchg
mov
dec
jnp
push
push
dec
mov
mov
lock
or
xor
mov
xchg
pop
and
vmwrite
ds
xchg
jl
or
sbb
adc
mov
icebp
movsb
dec
fisubl
frstor
in
dec
in
jne
test
orb
sub
imull
cmp
lods
test
stos
mov
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
lock
and
sbb
insl
clc
mov
pop
ss
ss
fildll
icebp
clc
imul
add
jo
fsubl
mov
lods
lret
xchg
es
sar
nop
lds
push
push
mov
std
sahf
xor
xchg
mov
push
bound
cmp
cltd
and
iret
inc
and
cmp
roll
adc
xor
or
or
mov
pop
xchg
pop
jmp
jl
push
add
cld
pushf
icebp
outsl
sbb
jnp
movb
mov
jl
sbb
popf
xchg
jae
jecxz
sahf
push
xchg
dec
js
mov
pusha
stc
popa
mov
out
mov
ret
xchg
cmpsb
add
adc
clc
ljmp
cmp
mov
xor
cmc
rcrb
popf
outsb
cltd
mov
mov
in
xor
mov
mov
mov
outsl
push
mov
dec
fisttps
lret
adc
shlb
hlt
js
subb
dec
fmuls
push
aaa
cmp
dec
out
inc
pop
addb
popa
fwait
jne
das
fwait
test
mov
repnz
sbb
add
mov
fcoml
repnz
push
jns
xor
in
xor
xchg
fs
jne
fsubrp
or
mov
out
fcompl
int
xchg
data16
repz
pop
or
lret
cmp
iret
dec
lods
sub
add
out
or
cmp
xor
or
xor
mov
bound
dec
sbb
push
aas
mov
pop
lahf
mov
adcb
or
jno
in
nop
jbe
or
in
or
cmp
roll
fs
sbb
add
and
adc
sbb
sbb
sub
lret
cld
ret
push
loope
pop
les
xchg
inc
sbb
data16
pusha
repz
in
mov
cmpsb
orl
cmp
add
lahf
in
int3
ja
fcoms
mov
testb
xlat
aaa
lahf
sahf
cmp
xor
mov
imulb
add
push
imul
jno
in
mov
mov
in
int3
shll
jg
sarl
sbb
popa
ja
gs
inc
dec
nop
sbb
adc
fs
ret
xchg
subb
or
push
aas
inc
mov
pop
popa
or
lret
repz
or
lods
ficoms
push
pop
dec
dec
jecxz
mov
popa
stos
fisubrl
pop
mov
mov
ljmp
ljmp
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
sbb
cmpsl
mov
and
sbb
pop
loope
mov
stos
xchg
loopne
loop
std
pusha
ret
push
lods
mov
insl
aas
aas
stos
rcrb
ss
jne
jo
push
push
cmp
mov
cmpsl
xor
push
and
test
out
and
lods
lret
lcall
pop
push
test
clc
mov
pop
inc
outsb
cmp
and
jge
fwait
in
sbb
sahf
loopne
int3
pop
jb
out
mov
mov
sbb
ret
mov
pushf
or
sbb
dec
arpl
stos
in
xor
call
lock
cmc
aam
lock
int3
or
sbb
iret
mov
loopne
lock
pop
lcall
cmp
adc
popa
inc
pusha
lock
jg
cltd
pop
hlt
mov
push
push
dec
call
std
hlt
sub
pop
mov
mov
jg
and
js
scas
daa
sub
cmc
pushf
das
and
leave
inc
mov
mov
pop
enter
mov
mull
push
or
dec
push
xchg
js
or
and
cmp
push
inc
xchg
xor
add
test
call
jae
sbb
xchg
jbe
fsubrl
outsl
aas
mov
ret
jmp
sbb
dec
mov
xchg
arpl
nop
cmp
mov
fildl
push
mov
pop
jmp
dec
gs
xchg
dec
insb
shlb
mov
cld
and
mov
out
inc
pop
ret
and
aam
xchg
push
push
out
xor
push
inc
and
jg
sbb
adc
popf
cmc
dec
jnp
mov
jg
mov
test
xchg
imul
lock
outsl
jecxz
aaa
insb
xchg
mov
jmp
sub
sbb
pop
or
xchg
std
or
aam
push
xchg
adcb
inc
shll
and
mov
pop
jmp
scas
lods
cmp
lret
shlb
cmpsb
mov
mov
push
fcoms
xor
inc
movsl
push
mov
fildll
clc
push
aad
negb
inc
and
push
aaa
movsl
dec
cmp
push
pop
pusha
cwtl
movsl
push
cli
andb
mov
popf
mov
dec
mov
mov
loop
out
insl
sbb
adc
bound
mov
test
mov
sbb
mov
loopne
mov
decb
sbb
mov
xchg
shr
mov
nop
iret
imul
fildll
popa
sbb
jne
into
or
testl
jl
loop
comiss
adc
mov
gs
fsubs
inc
or
fsubrl
and
pop
pop
lcall
pop
iret
and
lds
inc
sahf
sbb
ja
in
cmp
stos
dec
push
lret
int3
pop
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
mov
lahf
mov
fisubrs
jae
popf
dec
jo
push
mov
test
cmp
cmp
inc
mov
test
das
pop
enter
lcall
adc
iret
test
loop
dec
lds
mov
mov
pop
lcall
scas
cwtl
in
js
xor
mov
decb
jge
xchg
jns
push
cmpsl
adcb
rorl
jl
sub
push
push
cmp
jbe
loop
jae
push
lcall
mov
lock
xchg
xor
dec
sbb
jns
and
icebp
loopne
cmp
movb
adc
shlb
push
or
sbb
push
and
jno
inc
lods
and
jge
hlt
jae
jne
push
jb
in
mov
cmc
xchg
cwtl
xchg
push
cmp
xorb
dec
add
or
mov
sub
and
mov
and
or
jnp
outsb
lret
sub
mov
and
int
push
xchg
push
sub
mov
outsl
inc
xor
push
mov
push
pop
push
andl
pop
xchg
mov
jge
xchg
idivl
push
pop
cwtl
xchg
fildl
xlat
or
scas
aaa
inc
mov
and
jecxz
cmp
call
test
dec
out
enter
or
inc
or
xchg
dec
mov
jge
mov
clc
lret
insb
mov
sub
popf
fiadds
icebp
out
or
and
je
aaa
cli
subl
push
popa
xchg
jp
in
and
test
in
add
sbb
inc
mov
and
mov
out
pushf
cmp
push
sbb
xchg
dec
or
out
mov
scas
rolb
fidivl
sarb
mulb
jl
jmp
fisttpll
adc
mov
mov
shlb
lret
push
and
shll
loopne
and
jg
cmp
add
jp
les
sbb
jmp
push
shll
cmp
jge
test
repz
daa
in
mov
mulb
loopne
movl
dec
jne
hlt
mov
push
enter
inc
sti
cmp
test
mov
dec
push
inc
pop
shll
and
popa
xchg
loopne
mov
mov
cmp
add
std
roll
sbb
and
jmp
sbb
mov
push
jnp
insl
adc
jg
sbb
inc
cmp
test
int
fsubrl
imul
cmpsl
xchg
es
and
loope
arpl
mov
jne
mov
mov
loope
in
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
adc
sbb
adc
sbb
pushl
xor
out
mov
xchg
lock
inc
inc
rolb
xor
mov
aad
mull
gs
xor
sbb
adc
fidivrl
loope
pop
lods
scas
mov
inc
pop
lahf
push
jb
imul
pmuludq
mov
out
nop
mov
and
fadds
mov
sbb
sbb
xchg
lret
arpl
xchg
xchg
mov
lock
push
xor
lods
cld
mov
pop
int
inc
insl
and
mov
filds
shll
and
push
test
pop
jmp
lret
sarb
outsb
idivb
and
out
ss
stos
mov
rorb
lret
adc
adc
push
lret
mov
in
or
and
push
mov
pop
arpl
ret
mov
cmpsl
sahf
lret
je
mov
popf
push
fcomi
in
adc
mull
sub
sub
cwtl
fisttpl
dec
call
cmp
jge
scas
inc
xor
dec
jae
inc
or
mov
ret
pop
inc
outsl
push
pop
mov
xor
test
in
push
add
repnz
divl
cmp
xchg
js
pop
dec
xorl
jmp
xchg
sub
inc
mov
rorb
insl
pop
sahf
or
adc
push
out
ret
and
stos
imul
push
int
mov
stos
xchg
jl
xor
sbb
lcall
fnstcw
in
fs
les
jo
mov
lret
inc
mov
out
mov
aaa
adc
xchg
jbe
xor
test
mov
bound
call
fldz
inc
adc
sub
xchg
adcb
jb
cwtl
push
ja
xor
xor
scas
cmp
into
sub
inc
cld
add
and
es
lock
faddl
push
das
xchg
inc
loopne
jae
jnp
js
and
push
mov
xchg
push
clc
cmpsb
dec
add
in
ds
loopne
sbb
in
std
mov
push
xor
xchg
sarl
loop
cwtl
out
adc
dec
dec
ss
inc
cmp
and
lahf
push
xchg
sub
add
mov
sub
out
lahf
and
mov
lcall
ret
lcall
add
xor
adc
inc
fldl
lret
mov
pusha
push
lcall
sbb
xor
int
push
pushf
shrb
shrl
popf
jp
cmc
movsl
mov
push
enter
jp
imul
clc
mov
popa
xor
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
or
mov
jo
push
jp
aam
mov
xchg
cmpsb
iret
arpl
jbe
fsubrl
sbb
aam
xor
test
in
pop
and
stos
sahf
inc
in
inc
rol
xchg
ret
rcrl
adc
cltd
dec
test
rorl
xchg
test
xor
sahf
mov
aad
scas
jmp
mov
sbb
sarl
sbb
xchg
or
lds
aaa
loope
aas
mov
fldcw
xchg
dec
pop
lods
cmp
test
sbb
lds
icebp
jne
inc
sub
and
stos
mov
adc
cmpsb
sub
xchg
xchg
pop
jge
and
es
imul
mov
sub
dec
cmp
test
in
pop
jl
push
push
sbb
cmp
add
test
addr16
push
xchg
bound
orl
call
setnp
sahf
pop
pop
mov
andb
outsl
push
lea
mov
sub
dec
in
cmp
fcomps
sbb
or
adc
shlb
and
iret
ficompl
icebp
dec
mov
inc
add
pop
inc
mov
cmp
sub
cltd
push
hlt
sub
stos
cmp
shlb
mov
mov
sbbb
fildll
mov
pushf
xor
stos
inc
cmpsb
lret
lahf
mov
push
sbb
rcrb
out
ja
push
leave
ds
lahf
jmp
fisubrs
loopne
adc
cltd
and
test
out
xor
lods
jg
sbbl
in
rorl
mov
fwait
pop
popa
scas
jp
xor
test
push
add
xchg
mov
push
and
cmpb
mov
mov
xchg
jecxz
jb
jbe
mov
push
dec
addb
test
cmp
sub
lock
icebp
adc
and
mov
jl
fildl
cmpsl
cmpsl
push
xor
out
inc
ss
out
aaa
mov
lock
push
test
fdivrs
call
jl
mov
mov
mov
and
push
push
cmc
lds
movsl
stos
enter
cmp
jmp
decl
scas
dec
push
adc
fidivrs
lods
inc
xor
inc
bound
and
pop
mov
ret
imul
cltd
outsb
lret
lret
cmp
pop
jae
xchg
lret
shr
sti
rol
mov
or
fisttpl
imul
xchg
add
cld
ljmp
cld
out
mov
xchg
popf
cmp
test
pop
and
xchg
xchg
cmpsl
movsb
cld
sub
and
xchg
rclb
jmp
lret
jp
shrb
adc
lret
aaa
or
cmc
dec
negl
stc
adc
fisubs
std
rol
jnp
mov
test
dec
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
testl
sbb
push
xlat
out
jns
mov
inc
mov
push
clc
mov
mov
xor
jo
push
xchg
mov
into
sub
jp
xlat
ret
fsqrt
sbb
fdivl
sbbl
out
add
stos
sub
pop
xor
adc
mov
sub
mov
cmp
loope
or
lods
cltd
push
fiadds
or
jmp
cld
xchg
aam
andb
andb
out
lahf
inc
push
mov
nop
inc
inc
mov
shrb
das
cmp
mov
xchg
std
jecxz
out
mov
shr
pop
sbb
pop
jg
dec
or
sbb
mov
in
les
sbb
test
and
adc
into
bound
int3
sub
cmpsl
sti
xchg
mov
cmp
mov
add
mov
inc
or
mov
adc
jnp
loopne
ja
dec
js
mov
cmc
cld
and
dec
imul
jecxz
popa
pop
scas
stos
inc
jge
leave
mov
adc
lods
insb
es
xchg
sti
test
shrl
xchg
mov
mov
xchg
arpl
enter
sub
pop
inc
adc
pop
shll
pop
inc
sub
int3
push
test
neg
jecxz
fcmovnu
addb
leave
xchg
jg
fnstcw
pop
clc
or
aad
or
lahf
xchg
adc
mov
imul
adc
xor
cmp
repnz
mov
jmp
mov
addl
insb
cmp
sahf
and
iret
rcrb
or
fnstsw
or
outsl
loop
data16
sub
stc
and
pop
push
cmp
in
cmpsb
push
dec
and
push
outsl
inc
jecxz
cld
lahf
add
mov
mov
xor
sbb
aad
push
sti
mov
mov
in
mov
out
lock
das
push
jle
mov
push
in
ficomps
test
test
mov
loop
add
movsb
shl
mov
test
xchg
int
cltd
rcr
mov
xlat
fisubs
sbbb
jnp
sbb
sub
mov
add
jl
popa
imull
int
push
mov
lds
inc
sbb
ja
xchg
jp
mov
sub
rorb
jl
cmp
jne
add
xchg
sti
stc
add
xchg
fucom
loop
mov
push
ja
xchg
xchg
out
in
idivb
cs
pop
je
push
inc
cmpsl
add
xchg
xchg
pop
push
cwtl
pop
cld
cli
mov
es
sti
in
mov
add
loop
clc
lock
setns
inc
mov
lods
enter
add
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
mov
and
sbb
xchg
jge
inc
data16
pop
aas
jne
inc
and
pop
mov
jecxz
cmp
xor
rorb
pop
sub
jno
aas
movsl
inc
aaa
mov
lret
fwait
lcall
movsl
pop
xchg
inc
out
push
cwtl
mov
or
mov
hlt
mov
jb
shrl
js
ljmp
test
jp
fsts
je
xchg
sub
lret
sub
mov
and
ret
fildll
dec
int
or
add
pop
jle
enter
mov
dec
mov
mov
cltd
notl
aam
test
loop
sub
cmpsl
mov
sbb
jno
cmp
and
jge
test
mov
idivb
outsb
push
scas
mov
and
xor
fs
lea
or
and
pop
sbb
push
mov
add
xor
in
aaa
push
mov
xchg
fisttpll
call
lods
jmp
push
jae
in
stos
outsb
add
in
or
fdivrl
and
cld
mov
push
movsl
jle
xor
pop
inc
add
cld
adcb
repnz
loope
mov
shl
add
sbb
xchg
dec
add
sub
sahf
bnd
add
mov
pop
dec
add
adc
movsb
aas
inc
movsb
ret
pop
pop
scas
adc
or
lret
mov
dec
std
adc
push
jmp
je
add
fwait
sub
data16
push
mov
adc
jl
mov
insl
dec
and
std
add
jns
inc
or
xor
scas
inc
add
push
sbb
movsb
xchg
mov
adc
aam
jle
jmp
fimull
fisubrl
ss
dec
cmc
mov
mov
mov
jl
mov
in
inc
lcall
jbe
outsb
nop
stos
popf
inc
lea
sarb
push
push
adc
aad
push
daa
les
popf
cli
hlt
dec
fdivrs
xchg
rorl
mov
adc
sub
add
jge
sbb
iret
repnz
repz
adc
sub
rorl
mov
call
addr16
mov
pop
jge
daa
add
lods
sub
inc
je
in
ljmp
pop
push
test
lds
or
push
sub
aad
add
out
adc
stos
test
sbb
mov
pop
inc
rcl
jb
jo
rorb
sub
adc
cmc
cmpsb
aas
adc
dec
sub
and
testb
into
mov
push
int
cmp
xor
lret
test
push
fisubl
add
cmp
ja
jns
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
ret
mov
sbb
and
sbb
mov
sbb
dec
xchg
and
mov
outsl
nop
daa
loopne
mov
add
mov
sub
mov
push
dec
xor
dec
shrl
jl
fcmovu
stc
out
jbe
out
int
imul
pop
add
insb
inc
mov
fistps
mov
repnz
das
ss
inc
sbb
adc
push
ret
jecxz
pop
ffreep
jle
mov
rcll
cs
mov
sbb
scas
mov
inc
gs
gs
loope
mov
popf
xlat
jno
int
loopne
fcomps
sub
sahf
jp
and
mov
nop
outsb
and
lea
mov
out
ret
dec
inc
or
mov
lods
push
ljmp
and
dec
push
sub
pop
xor
inc
stos
xor
add
data16
test
adc
andl
add
test
push
leave
add
jmp
int
dec
lods
push
fisubrl
and
sub
inc
sub
lcall
jge
and
pop
push
jno
cltd
mov
sub
vmwrite
xchg
mov
bound
jno
push
xchg
sub
fstl
add
mov
jb
andl
out
int
inc
lock
or
fstps
mov
in
jg
dec
mov
mov
clc
scas
lock
aad
xor
pop
adc
and
and
push
jle
mov
inc
mov
sbb
xchg
scas
sbb
sub
xchg
pop
sbb
push
xor
nop
cmp
push
ja
filds
je
mov
jnp
nop
mov
lods
jp
out
xor
mov
sti
fcomi
addr16
xchg
test
xchg
xchg
fbstp
inc
jo
inc
inc
insb
inc
mov
push
pop
rorb
and
or
repz
dec
mov
cmpsb
mov
mov
add
or
jnp
jo
dec
gs
push
ljmp
sbb
mov
cmp
leave
lret
push
pop
negb
adc
stos
push
xchg
mov
or
insb
cmp
pop
cmp
dec
les
ret
movsb
adc
inc
push
imul
pop
rolb
dec
shl
icebp
sbb
and
faddl
xlat
lock
pop
push
jge
add
jno
dec
adc
xor
lret
pop
add
xchg
movsb
lcall
stc
fidivrs
mov
lea
and
or
adc
out
bsf
mov
cmp
dec
push
repnz
jp
cmp
addr16
mov
lret
cmpsb
adcl
aaa
push
push
mov
jg
cmc
aam
hlt
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
iret
pop
int3
data16
mov
or
mov
mov
push
jge
add
imull
or
inc
loopne
push
ret
adc
lods
inc
jns
and
pop
xchg
jno
sub
or
and
sub
sbb
nop
mov
addl
push
and
fwait
out
jno
pop
push
jns
inc
inc
cld
xorb
les
adc
das
push
pop
mov
mov
mov
sbb
mov
mov
mov
stos
push
cmp
or
inc
inc
xchg
clc
mov
jge
or
inc
or
jbe
ret
mov
insl
nop
clc
roll
jne
sub
jmp
xchg
pop
inc
xchg
add
insl
cld
clc
imul
lret
repnz
pop
push
xchg
fs
jmp
outsl
sahf
mov
inc
cmpb
mov
mov
xor
cmp
imul
xchg
jge
xchg
jp
xor
dec
xchg
cmp
lea
inc
jb
sub
or
mov
cmp
mov
scas
jmp
push
test
in
out
in
lret
ficoms
pop
cmp
stos
xchg
loopne
adc
jae
repz
xchg
popa
popa
rclb
inc
sbb
mov
or
mov
jle
mov
mov
imul
in
subl
cmp
sub
push
adc
ljmp
sub
dec
jge
lcall
pop
enter
sub
jge
mov
enter
push
test
xchg
lea
jns
xor
pop
lcall
push
icebp
push
out
outsl
cmp
shlb
cltd
cmp
and
roll
mov
aas
sahf
jle
bound
inc
xlat
push
lods
xchg
mov
aad
fisubrl
mov
bnd
jmp
mov
cmp
popl
xchg
dec
push
sahf
stos
cmp
flds
fisttpl
les
jecxz
scas
cmp
data16
inc
xor
jg
in
inc
cmp
cmp
icebp
in
andb
push
xor
ficoml
in
xor
jbe
inc
ss
jg
push
adc
jae
or
stos
scas
sbbl
inc
fcmovnu
sti
fcmovnu
xchg
lods
aaa
adc
loope
mov
mov
inc
or
pop
inc
cli
dec
daa
jno
fstpl
cmp
mov
jge
xor
inc
arpl
popf
jle
and
sub
inc
mov
jp
pop
out
sbb
dec
test
lea
mov
bound
jno
mov
jl
cmp
pop
aad
ffree
outsl
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
subb
and
sbb
xchg
js
test
ret
adcb
ja,pn
jne
ficoml
shll
or
imul
jo
pop
sub
subb
jns
test
jae
pushaw
xor
pop
add
push
jae
xor
sub
sbb
inc
stos
clc
inc
pop
lcall
mov
jle
test
xor
std
pop
cmp
push
cmpsl
dec
mov
das
sbbb
aaa
xchg
incl
outsb
icebp
dec
rcll
add
jmp
arpl
ret
in
sub
cld
std
sahf
das
cmp
ss
jle
and
int3
mov
mov
inc
mov
sbb
fstps
stos
xchg
mov
jne
daa
lods
pop
mov
jle
add
rclb
es
push
xchg
outsl
adc
shl
sbb
stc
cmp
outsb
cltd
push
sti
faddl
mov
call
sti
xor
or
push
ret
pop
loope
ret
hlt
mov
adc
sahf
mov
popf
lret
xchg
push
jae
xlat
repz
xor
fmul
xor
pop
fbld
arpl
xor
pop
add
mov
mov
dec
sbb
adc
cmpsb
xchg
xor
lahf
mov
or
xor
in
ljmp
fcoml
test
mov
leave
popf
xor
jae
xchg
in
inc
nop
inc
jno
sub
fidivrs
stos
cmp
lcall
jle
or
jmp
pop
aam
ljmp
shrb
pushw
jo
sbb
dec
xchg
xchg
add
lahf
cld
dec
jmp
mov
push
pop
scas
sub
dec
jne
cmpsl
ljmp
insb
mov
xchg
jecxz
mov
int3
push
mov
xchg
inc
lret
punpckhdq
ret
push
cmp
mov
jle
cmp
cmpsb
int
aas
ja
stos
adc
addl
and
dec
mov
sbb
in
mov
jg
pop
xchg
push
pop
fst
pop
ja
xchg
scas
ss
mov
gs
xchg
int
enter
sub
sbb
in
jle
add
in
lret
jge
cwtl
adc
sbb
pop
test
add
or
sbb
imul
icebp
push
out
inc
ja
pop
mov
and
mov
dec
or
push
cmp
clc
sbb
mov
lahf
fisttpl
cmp
hlt
and
daa
in
cmp
adc
xchg
repnz
xchg
mov
or
jl
js
lahf
mov
out
mov
mov
test
scas
hlt
jmp
call
test
pop
pop
lods
sbb
xchg
sub
sub
fcomps
xor
cmp
lods
enter
add
ljmp
and
push
sbb
push
rcr
jle
sbb
and
sbb
cld
xor
inc
decl
and
mov
xchg
stc
inc
xor
iret
jb
divl
stos
nop
adc
or
xchg
repz
mov
push
mov
sbb
pop
mov
xor
jg
aas
fsubrl
jle
mov
add
sahf
lods
jns
mov
jno
repnz
sarl
or
mov
push
cmpsl
mov
jp
int3
jns
test
jno
mov
jecxz
ss
xchg
fisubrl
les
leave
push
mov
push
and
mov
adc
xchg
leave
sbb
mov
xchg
xor
xchg
inc
out
ds
bound
decb
xor
push
jne
jo
sbb
sbb
jmp
sub
scas
rol
push
mov
out
in
add
pop
xchg
loop
test
mov
loopne
insl
mov
xchg
in
jnp
mov
pop
test
adc
stos
iret
pop
mov
nop
sub
sub
popf
push
lea
repz
or
insl
inc
pusha
pop
dec
mov
pop
mov
out
loope
sub
mov
dec
pop
push
std
inc
mov
xchg
das
push
or
add
test
cmp
faddl
inc
in
add
mov
mov
out
jg
in
hlt
das
clc
pop
or
or
cmp
push
sub
sub
test
mov
movb
fistps
jae
out
lods
jbe
push
andps
sbb
roll
clc
sub
add
sub
and
cltd
push
popf
vandnpd
hlt
cmc
mov
xchg
or
dec
bound
jg
xchg
adc
jle
add
dec
inc
lret
fnstsw
mov
push
call
testb
neg
pop
push
imul
inc
out
jo
xor
and
jmp
mov
pop
in
or
jne
repz
mov
xor
fistpl
int3
in
enter
gs
int3
push
mov
or
xor
dec
jo
pop
mov
lret
xchg
and
hlt
mov
ret
mov
lret
mov
jne
jge
pop
mov
or
adc
loopne
adcl
and
stos
repnz
xor
lods
pop
mov
lahf
imul
xor
xchg
xchg
cmpsb
pushf
mov
aaa
pop
je
mov
rep
ss
dec
pusha
inc
arpl
rcr
sahf
pusha
cmp
push
xchg
or
mov
jae
stc
shl
popl
ret
fwait
mov
mov
loope
bts
mov
sbb
loop
xchg
aad
inc
mov
cmpsl
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
jmp
sbb
adc
sbb
pop
xchg
arpl
dec
fcompl
sub
rcll
adc
jg
lock
mov
insl
adc
gs
or
sbb
pop
jo
jo
sub
stos
fs
mov
mov
mov
push
std
xchg
xchg
and
cmpsl
aam
xchg
pop
loopne
cmp
inc
shrb
mov
mov
enter
ja
mov
jnp
push
fs
aas
cmp
xchg
fisubrl
xchg
loopne
jo
sub
jecxz,pt
ret
scas
dec
mov
sbb
push
inc
push
repnz
mov
jnp
addr16
daa
mov
inc
pop
sub
out
add
std
and
lret
jnp
cmp
lea
mov
stc
cmp
add
pop
sahf
inc
dec
xor
mov
jp
inc
push
inc
lods
les
sub
xor
add
pop
loopne
push
faddp
mov
adc
outsb
cmc
fidivrs
sarl
in
push
shlb
and
pop
or
rorl
ss
jbe
cmp
jb
ja
sbb
scas
dec
adc
repz
mov
inc
enter
sbb
mov
ljmp
jge
nop
push
repz
ljmp
xchg
sahf
loope
and
mov
iret
dec
not
xchg
xchg
or
jo
mov
inc
iret
inc
push
inc
jmp
jl
notb
or
lret
mov
xor
adc
mull
div
addr16
dec
xchg
icebp
pusha
sub
gs
mov
movsl
pop
pusha
xchg
ss
jge
repz
mov
orl
mov
or
fdivl
mov
adc
aaa
hlt
adc
mov
test
push
push
xchg
and
repnz
pushf
arpl
dec
sti
sbb
mov
pop
fwait
push
jne
sahf
adc
int
js
pusha
fsub
daa
dec
pushf
fistl
enter
jbe
sbb
push
xchg
clc
iret
mov
push
add
adc
ret
pop
add
cld
movsl
repz
mov
mov
sahf
fisubs
and
stos
loopne
js
mov
sub
or
psraw
dec
cwtl
jno
adc
push
xchg
jnp
pop
mov
bound
pop
push
cmp
mov
lea
in
xchg
lret
insb
push
xchg
add
lock
out
or
mov
mov
int
insb
push
add
arpl
cmp
or
xor
ja
fs
shlb
mov
stos
stos
xlat
movsl
imul
lret
loope
push
ss
sahf
add
orb
rorb
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
test
jle
pop
sbb
and
sbb
pop
and
jmp
pop
rclb
cmp
push
dec
pop
out
cmp
imul
cmpsl
xchg
mov
jp
xchg
and
js
fildll
pop
push
inc
jg
ss
arpl
data16
lods
nop
xchg
sbb
clc
inc
adcb
repnz
lock
pop
push
push
sbb
cld
fcompl
aad
adc
inc
cmpsl
cmp
shll
pop
mov
inc
loop
int3
dec
cs
dec
out
aaa
ja
neg
pop
popf
cs
dec
dec
mov
add
aas
and
test
subl
outsl
into
inc
std
scas
fistpll
jbe
test
js
or
jl
mov
push
aad
push
mov
jne
jno
xor
test
and
cmpl
and
gs
mov
jle
fmuls
repnz
jno
cmc
arpl
xchg
push
subl
sbb
jecxz
add
xor
or
inc
leave
cmpsl
xlat
or
rcll
dec
lcall
lea
orb
pushf
mov
inc
xchg
sub
dec
fiaddl
imul
cmp
divb
lds
mov
pushf
add
push
cld
pop
mov
mov
add
inc
sahf
and
and
or
out
dec
outsl
inc
xchg
jno
pop
insb
sbb
pushf
aam
inc
mov
pop
scas
loope
cs
adcb
push
xchg
mov
lea
stos
xchg
dec
nop
cmp
and
mov
fsubs
xor
jl
jl
dec
push
pop
out
imul
xlat
xlat
into
js
mov
adc
aaa
enter
add
mov
nop
fsubrl
fcompl
xorb
jle
jp,pn
push
jl
movsb
repnz
gs
cld
mov
out
pop
mov
cmp
xchg
cmc
mov
pop
push
shlb
cli
jb
xchg
mov
out
xor
inc
es
lock
mov
lods
sbb
and
fidivl
and
jne
or
inc
jge
xor
sub
push
sti
adc
stos
popa
in
scas
nop
push
sub
out
loopne
or
pusha
mov
xor
and
mov
dec
jae
sbb
jnp
in
lods
int3
sbb
push
lahf
xchg
push
and
shlb
outsb
sbb
cltd
cli
mov
mov
and
out
iret
mov
andl
dec
jge
inc
or
sbb
loope
add
mov
or
mov
and
mov
std
imul
inc
mov
fsubr
fdivrl
call
mov
adc
xchg
jne
imul
out
in
cvttps2pi
dec
xchg
cmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
addl
andb
push
lds
jne
lcall
mov
push
ret
cltd
out
pop
mov
test
or
push
jno
mov
call
jns
loopne
sub
adc
mov
inc
dec
repz
dec
pop
and
mov
jo
aas
dec
or
loope
sahf
xchg
jae
mov
inc
sti
adc
ficoml
std
lahf
jnp
xor
aaa
fwait
aam
les
cld
std
jg
inc
jnp
jmp
cmp
data16
push
push
mov
rcrl
jo
mov
movsb
xor
fimuls
mov
push
stc
lods
push
mov
inc
jmp
test
cld
fcomps
cmp
cmpsl
and
js
inc
imul
adc
les
mov
mov
or
adc
aad
jl
inc
jnp
xchg
cmp
pop
xchg
push
cmp
filds
pop
pop
jp
call
aad
push
pop
pop
imul
jmp
or
inc
cmp
xchg
loop
or
cs
mov
lea
enter
aad
or
mov
out
push
jmp
sub
dec
mov
add
jo
pop
mov
sahf
test
pop
mov
push
mov
xor
inc
jno
inc
cmp
cmpsl
ret
jmp
outsb
xchg
mov
adc
mov
shll
leave
xchg
xor
inc
pusha
leave
cmp
pop
leave
inc
clc
rorl
out
into
and
int3
dec
popf
jle
cmp
ds
je
dec
es
cmpsb
mov
jmp
int3
call
xchg
fildll
sbb
insl
idiv
dec
and
pusha
sub
or
insb
sub
sub
xor
xchg
scas
xchg
movsb
pop
sub
imul
and
adc
arpl
rolb
jecxz
fs
aas
or
mov
sub
dec
pop
inc
push
cmp
fbld
cs
cli
mov
sub
jg
mov
sub
pop
push
push
fwait
sub
repnz
mov
mov
sub
ja
cmp
adc
mov
pusha
aad
roll
pop
cli
cmp
mov
je
dec
js
mov
dec
ljmp
add
mov
pop
fmull
jb
dec
rcr
xchg
cmp
adc
scas
or
lods
pop
ret
addr16
jo
mov
shrb
xchg
aas
sbb
repnz
addr16
dec
repnz
mov
movsb
cltd
and
mov
int3
ljmp
outsb
nop
test
test
fbld
sti
push
sti
xor
fdivl
sbb
or
fistpll
push
sub
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
jmp
test
mov
or
cmc
sbb
js
rclb
mov
scas
sarl
push
loop
xorl
mov
negl
es
push
cmp
push
stc
mov
int
xor
cmpl
lods
jne
es
notl
loop
inc
lcall
dec
scas
mov
add
lcall
movups
jns
xchg
mov
lods
mov
fsubl
andnps
cwtl
sbb
stc
orl
pop
and
xorl
scas
inc
outsb
andl
les
sti
mov
sub
lock
sbb
cmpsb
testl
aaa
jno
xchg
dec
and
and
cld
out
adcl
cmp
nop
mov
add
fcompl
push
adc
sub
lea
pop
pop
cmpsl
xchg
lret
stc
lds
aas
mov
pushf
push
sub
lods
adc
rcrl
push
adcb
or
xchg
fmull
popa
fbstp
add
add
lahf
sahf
jg
shll
dec
inc
into
nop
or
sti
sub
inc
in
jge
sahf
jbe
ja
cmp
jle
cld
mov
or
insb
test
adc
sbb
xchg
mov
cmpsl
lea
call
aaa
fistps
sub
pusha
mov
test
sub
cmp
and
sbb
mov
push
jg
push
push
icebp
sbb
inc
shlb
jbe
daa
cltd
shrl
mov
xchg
mov
ljmp
aam
lcall
mov
mov
cmp
mov
call
es
jg
mov
xchg
mov
mov
pop
divb
add
xor
push
xchg
adc
xchg
push
stos
mov
enter
xchg
cmp
test
bnd
sti
cmp
add
push
in
scas
in
cmpsb
mov
leave
test
sbb
dec
inc
xor
jl
xlat
dec
or
dec
mov
stos
xchg
mov
movsl
fwait
sarb
adc
mov
lock
inc
jg
and
dec
das
push
jl
push
test
pop
inc
std
test
push
inc
adc
push
test
pushf
filds
aad
mov
mov
jg
xchg
add
inc
mov
int3
add
mov
mov
jne
sbb
sbb
xor
mov
inc
cltd
push
mov
jae,pt
xchg
push
pop
lods
jnp
in
cmp
pop
dec
je
inc
mov
xor
cmp
arpl
aas
and
aas
push
pop
cmp
pop
push
xchg
push
lahf
xor
fisttpl
and
sbb
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
call
sbb
add
sbb
ss
loopne
mov
jle
jle
das
sbb
xor
aad
push
outsb
push
lds
sahf
insl
dec
jnp
cmpsb
aad
mov
cltd
push
adcb
sub
mov
sbb
sbb
xchg
cmovge
mov
mov
in
jbe
in
jne
test
inc
das
cld
mov
hlt
xchg
push
call
pop
xor
rcll
push
inc
andb
xchg
or
jno
jp
inc
rorl
sbb
dec
xchg
jp
inc
or
pop
xchg
mov
aam
xchg
mov
xchg
xchg
mov
xchg
pushf
stos
out
mov
mov
push
xchg
sub
das
dec
jecxz
fdiv
fxam
lcall
pushf
in
les
pop
push
pop
jno
stc
cld
xor
movsb
jno
lret
or
mov
inc
push
gs
pusha
insb
cmc
sbb
stc
jo
xlat
scas
sbb
or
pushf
adc
and
mov
mov
call
out
repz
dec
mov
jle
jg
pop
mov
jmp
xchg
mov
fadd
jae
leave
jg
sub
mov
adc
outsl
rorb
fs
call
sbb
insb
in
mov
out
sub
sub
int3
xchg
add
mov
jnp
outsl
jp
inc
jmp
jnp
mov
stos
xchg
push
lahf
int3
fdivl
push
adc
mov
mov
mov
xchg
fwait
in
fisttpl
jg
mov
sbb
jp
push
int3
sub
sub
rcr
imul
mov
adc
out
bts
nop
adc
jp
les
push
rep
in
cmp
cmpsb
xchg
sbb
fs
or
adc
dec
pushf
dec
dec
mov
jmp
dec
push
cmpsl
shll
decl
leave
push
popa
push
addr16
adc
test
dec
data16
push
fldt
sbb
test
mov
jne
fnstenv
sbb
adc
mov
lock
cmp
repz
or
jne
pop
movl
cmp
movsl
aaa
sbbl
pop
adc
and
ja
mov
out
in
in
inc
iret
mov
loope
push
jmp
lds
cmpsl
stos
mov
push
hlt
push
idivl
mov
push
sub
cmp
cltd
notl
insb
punpckldq
in
ja
rolb
aad
lret
adc
mov
and
nop
aad
rcll
and
scas
test
sti
pop
xchg
fistpl
and
xor
push
ret
mov
fcoml
dec
sarb
scas
mov
cmp
cmp
dec
inc
sbb
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
lds
add
sbb
sbb
adc
sbb
inc
mov
push
sbb
jns
xchg
rol
mov
movsl
out
mov
add
mov
xlat
or
mov
inc
cmc
xchg
push
jmp
xor
inc
popf
pop
mov
movsb
jns
les
mov
call
movsl
jb
push
loop
jnp
mov
addl
mov
int
cwtl
lret
sahf
push
mov
mov
mov
lods
xor
jge
jnp
loope
outsb
into
or
sbbb
cli
pop
pop
in
adcl
adc
pop
sub
std
dec
inc
xchg
rcll
outsl
jnp
and
push
daa
outsb
xor
jecxz
fsubrs
out
xchg
lret
inc
arpl
mulb
cs
push
fs
fldpi
mov
lahf
jbe
cmp
jp
inc
ret
out
cmp
push
mov
and
lea
lock
loopne
or
jecxz
in
fimuls
mov
test
push
aad
cltd
imul
lds
popa
pop
dec
push
sbb
mov
sbb
or
xor
out
mov
shlb
test
das
cmp
inc
mov
xor
loopne
push
sbb
or
arpl
dec
xchg
sbb
or
and
inc
jl
sbb
aas
pop
mov
dec
sub
loop
mov
ret
cmp
add
sbb
sbbl
fisubrs
into
nop
popa
sub
sbb
ret
sub
shll
icebp
fwait
jecxz
test
sub
jg
mov
push
xchg
aam
cmp
mov
sub
arpl
lds
lock
and
xchg
or
mov
not
or
test
adc
inc
test
add
repz
push
bound
out
lahf
sbb
cmc
leave
push
jecxz
shlb
push
std
pop
insl
and
sbb
cli
in
or
sbb
frstor
mov
adc
dec
insl
ss
gs
mov
mov
shr
popa
clc
hlt
xchg
arpl
in
push
jmp
addl
ret
insl
mov
pop
test
or
inc
lcall
pop
adc
push
repz
xchg
cmp
mov
imul
adc
xchg
inc
mov
fwait
ja
mov
mov
out
movsl
dec
aam
mov
jno
or
shlb
stos
insb
jne
loopne
test
mov
mov
xchg
in
mov
cld
or
jmp
cmp
xchg
das
inc
add
stos
jle
push
test
mov
addr16
push
push
jmp
lret
arpl
mov
xor
iret
dec
rcr
movsb
ret
cmc
mov
jb
fs
pop
sbb
lcall
lcall
push
aam
inc
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
imul
sbb
add
sbb
adcb
das
stos
into
jl
dec
jmp
add
push
inc
xchg
mov
xchg
mov
push
lret
or
and
or
test
mov
xor
cltd
mov
add
dec
popa
std
sbb
dec
or
mov
loop
jae
jmp
jbe
rorl
mov
push
dec
sub
rcrl
lret
mov
sub
inc
pusha
jmp
and
adc
filds
imul
mov
dec
xor
push
pop
mov
xchg
jle
cld
cli
enter
sbb
pop
cmp
sub
das
ds
clc
push
adc
jns
push
cld
inc
stos
lret
mov
js
call
std
fldl
adc
pop
push
into
imul
leave
bound
pop
orb
lods
pop
cli
jo
loopne
jae
or
and
clc
adc
test
sub
or
test
jge
push
inc
insb
insb
or
out
add
negb
push
lds
cmp
push
fiadds
sbb
lcall
mov
shr
cmp
mov
pop
pop
pop
jb
dec
dec
inc
ds
cmp
mov
shlb
cmp
repnz
add
cmp
repz
cs
dec
xchg
xor
movsb
push
sahf
outsb
xchg
cld
pop
pcmpeqw
xor
loope
pop
loope
mov
cwtl
std
loop
pop
jl
push
aas
icebp
and
and
push
test
or
insl
imul
insl
int3
lcall
fsubs
shl
repnz
dec
or
pop
mov
pop
adcl
hlt
lock
lahf
sbb
out
fwait
jne
mov
ss
jno
aas
mov
sub
and
gs
in
jae
int
xchg
lret
scas
push
jmp
push
push
mov
jecxz
in
pop
ds
movsb
cld
adc
adc
leave
out
ss
icebp
jge
aad
orl
or
ficoms
loop
mov
jb
add
pop
adc
cmp
xchg
gs
ja
fistl
aas
push
daa
lds
adc
popa
push
xchg
repz
add
sub
daa
je
dec
xchg
loopne
ficompl
es
mov
dec
mov
mov
push
test
out
ret
xor
lahf
jb
pusha
lcall
pop
mov
sbb
lret
cmpsb
xor
push
xchg
js
shll
sub
inc
jge
icebp
testl
outsl
subb
sbb
cld
lea
jecxz
and
sub
stos
dec
insb
std
adc
inc
xchg
mov
adc
inc
pop
mov
cltd
arpl
pushf
mov
add
aas
cli
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
ljmp
add
sbb
push
xchg
and
or
fiaddl
inc
mov
andb
aad
mov
sub
scas
in
dec
and
mov
pop
xchg
adc
mov
mov
mov
cmpsb
shlb
inc
andb
sbb
cltd
jmp
jecxz
mov
ja
int3
iret
stos
aas
push
popf
int
add
in
iret
aam
push
shlb
push
xorl
popa
xor
xchg
orb
pusha
cmp
movsl
mov
xchg
fnsave
xor
cmp
int3
cmp
repnz
sub
lcall
and
repnz
sub
mov
and
push
jno
fsubs
jmp
out
cwtl
push
xor
inc
pop
rol
leave
adc
shr
dec
loope
adc
cs
mov
das
inc
ret
in
lahf
or
mov
pop
jbe
jne
inc
dec
fwait
pop
jbe
shlb
xor
das
mov
shll
push
rorl
mov
hlt
lea
mov
push
sahf
stos
inc
hlt
mov
mov
insl
out
mov
add
cmp
push
lahf
xchg
dec
xchg
dec
out
idivl
hlt
jecxz
dec
push
insb
cmp
cmp
fnstsw
nop
lahf
dec
sahf
sub
je
sbb
imul
aam
mov
std
pop
jp
dec
xchg
sbb
outsl
push
dec
js
jns
inc
popf
sbb
ret
cli
xchg
jne
push
mov
jns
add
sbb
xor
mov
outsb
sahf
out
jbe
xor
push
loopne
fwait
pop
jp
div
jg
outsb
das
arpl
ja
jp
sub
xchg
xor
mov
sbb
push
sbb
xchg
fsubrl
or
push
loopne
xchg
jp
adc
out
xor
ss
jb
mov
loope
shlb
aam
push
lods
xchg
pusha
insb
pop
es
dec
cmc
ljmp
stos
jg
pop
movsb
leave
adc
push
jge
mov
std
rorb
test
adc
fwait
adc
cmp
push
lock
mov
jnp
shrl
or
push
lret
mov
push
outsb
push
mov
ss
push
fnstenv
mov
leave
push
mov
push
cmc
jnp
dec
pop
stc
popa
cmp
lahf
test
ljmp
mov
jbe
cmp
pop
aaa
jnp
cmp
addb
insb
pop
mov
std
aas
push
int3
loope
dec
dec
rcrl
icebp
and
fildll
or
sub
es
movsl
sbb
xor
lods
stos
test
adc
in
clc
push
mov
ja
or
loopne
hlt
ret
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
inc
push
xor
sbb
adc
sbb
cli
mov
and
dec
cmpsb
addr16
cmp
mov
ret
or
mov
es
out
int
jp
push
push
ror
and
popf
jge
xchg
xchg
jp
stos
in
jg
mov
cmp
clc
lods
out
push
div
pop
add
cmpsb
aad
shll
jne
stc
xchg
rcl
stc
jae
sbb
add
dec
mov
cmpsl
hlt
and
cmovae
inc
jg
fists
ficoml
int3
outsb
cmp
int
pop
out
add
fucomp
inc
sub
andb
stos
or
xchg
dec
sub
cmpl
test
cmp
popl
dec
pop
dec
jl
jle
xchg
mov
lret
or
pop
sbb
mov
sub
mov
and
cmp
movsb
out
mov
mov
mov
push
xchg
xchg
dec
cmpsl
pop
mov
out
cmp
stc
leave
pop
orl
dec
push
lea
cmp
lret
pusha
jge
lods
jge
cs
adc
nop
mov
jae
xchg
mov
and
sub
test
mov
adc
ret
inc
mov
mov
xor
dec
lea
fldenv
lock
or
lock
js
jmp
push
out
ljmp
add
lcall
hlt
jne
pop
cltd
mov
shlb
idiv
pop
jmp
mov
jbe
jo
int3
lods
lret
mov
popa
pop
add
xor
in
jbe
notb
into
out
cmc
jl
lods
fstpt
xchg
sbb
push
aaa
lods
cli
and
mov
sbb
les
repnz
shrl
cmp
aam
ds
push
ficompl
repnz
mov
shlb
xor
cmp
pop
popa
andl
xchg
cmpsb
mov
and
sbb
sbb
jl
or
mov
movl
daa
shl
icebp
jne
push
jno
pop
push
into
xor
repz
out
in
mov
dec
sbb
or
or
sbb
test
jg
jns
cmpsl
jg
push
xor
insl
pusha
inc
cmpsb
rol
cmp
jo
ret
insb
add
jmp
pop
xor
insb
xchg
lea
testb
add
dec
shrb
icebp
xchg
xchg
rcll
stos
shl
add
inc
or
push
cmp
adc
adc
push
popf
mov
xor
fimull
jmp
mov
sbb
aas
inc
imul
in
ret
mov
call
ret
push
fstps
insb
mov
mov
lahf
clc
mov
adc
pop
fsubrl
in
add
add
test
pusha
xchg
lahf
fdivl
adc
aam
jl
add
sub
add
add
push
sbb
ja
mov
sub
sbb
adc
sbb
sub
cli
or
push
cmp
jmp
xor
sbb
mov
push
repz
push
sub
sub
aaa
sub
bound
push
and
hlt
mov
cltd
push
idiv
inc
push
lods
cmpsl
adc
xor
push
out
push
pop
jp
push
pop
xchg
in
inc
push
mov
dec
rcll
rcr
xor
imul
lret
adc
jl
and
mov
mov
push
mov
inc
divl
pop
add
fstpt
xor
mov
addr16
rolb
stos
mov
sub
adc
xchg
aam
insl
inc
mov
and
cld
js
cmp
out
ss
mov
pop
sub
movsb
cmp
jmp
je
aas
push
es
insl
lds
pop
adcb
into
inc
pop
sbb
hlt
sub
xchg
jo
gs
scas
push
mov
movlps
push
or
jae
cmpsb
sub
sbb
dec
stos
subl
fsts
mov
cmpsb
xor
jl
in
int3
dec
mov
xchg
pop
je
inc
inc
mov
iret
aaa
insb
add
and
xor
adc
or
fisubrs
jae
pop
jne
xor
and
mov
sub
push
push
xor
cmp
out
repnz
mov
sbb
adc
mov
and
dec
jo
in
ljmp
cltd
adc
sbb
in
ds
ret
data16
xchg
xor
movl
mov
xcrypt-cfb
cmpsl
daa
adc
in
jl
mov
paddsb
dec
bound
imul
loop
flds
and
mov
jb
and
jo
push
lock
push
add
mov
push
lds
push
scas
cmp
loopne
mov
push
sbb
jmp
and
dec
rcrl
xchg
pushf
stos
fsubrl
sub
repz
loop
stos
cmp
fs
dec
add
outsl
push
xchg
cmp
das
fsubp
sub
repz
aad
dec
roll
inc
cltd
pop
mov
mov
fldcw
inc
insl
out
jg
ret
sub
inc
mov
out
ja
fcmovnb
paddd
test
pushf
adc
test
fwait
es
sbb
pop
mov
test
in
mov
out
push
mov
movsb
add
mov
dec
mov
pop
in
stos
xchg
push
adc
lea
push
xchg
mov
fcomi
jecxz
shlb
cs
rolb
pop
imul
mov
sbb
jne
enter
ret
arpl
and
js
xor
and
inc
in
les
mov
push
mov
out
cmp
pop
push
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
pop
xchg
mov
add
sbb
icebp
call
mov
mov
cmp
pop
jg
mov
push
sti
jo
pop
xor
mov
mov
sti
inc
jb
add
xchg
std
push
lcall
orl
dec
jg
flds
xchg
ss
mov
hlt
mov
test
pop
push
out
clc
rcrb
lcall
fwait
lret
dec
cmp
and
cs
jo
mov
jmp
jmp
sti
dec
aam
js
or
mov
mov
sub
cs
fiadds
je
xorl
pop
loope
enter
jge
jns
leave
jge
cmp
ret
scas
sub
sbb
add
jo
ss
stos
sete
icebp
in
test
mov
movsl
cmp
mov
mov
ret
xchg
sti
dec
or
xor
fincstp
jnp
inc
adc
jbe
aas
inc
xchg
sbb
pop
aaa
std
jle
testl
pop
and
or
pop
dec
pop
outsl
mov
jo
cmp
adc
mov
and
push
cli
mov
sarl
sti
lcall
and
js
lahf
outsb
sub
sbb
and
rclb
stc
pop
mov
mov
rorb
lcall
xor
aaa
paddsw
cmp
pop
aad
pop
clc
pop
stos
add
push
or
or
xchg
in
dec
dec
xchg
lret
mov
sub
sub
dec
xor
inc
jecxz
adc
xor
add
aaa
inc
mov
popa
sti
fcmovne
imul
xor
push
jb
jns
cmpsl
loope
and
mov
jp
pop
mov
dec
sbb
mov
or
cmpsb
sbb
notl
out
cmp
shrb
sbb
jl
jbe
mov
sub
mov
or
loopne
sbb
pop
hlt
outsb
mov
daa
insb
jmp
mov
inc
add
mov
shrl
and
mov
or
fcmovnb
dec
jmp
dec
sarl
test
repz
and
mov
mov
or
or
dec
xor
and
fcompl
jecxz
lods
ds
into
loope,pt
dec
sbb
sub
push
adc
xchg
jno
mov
ss
std
adc
rcr
ret
loopne
dec
test
arpl
jne
movsl
arpl
pop
mov
pop
test
stc
clc
pop
mov
and
int
testl
aas
mov
data16
xchg
lods
xchg
xor
pusha
imul
jle
mov
xchg
adc
std
jg
sbb
outsl
lea
in
adc
mov
in
int
jne
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
cmpsb
test
sbb
adc
sbb
push
loope
sbb
lods
adcl
es
jl
addl
out
inc
ret
in
dec
insb
mov
adc
data16
mov
or
stc
aam
int3
push
cld
mov
cli
push
cld
sub
adc
ja
lock
dec
dec
push
push
adc
test
stc
sub
cmp
sbb
dec
pop
and
outsb
fwait
sahf
ss
pop
mov
mov
fnstsw
and
sub
mov
jnp
jne
insl
mov
arpl
mov
push
xor
inc
cmp
aam
cwtl
inc
pop
mov
leave
outsl
pop
subl
pushf
adc
pusha
sub
movsb
xchg
les
imul
mov
cmpsb
jg
sub
sahf
dec
ds
aad
push
sbb
inc
int3
mov
hlt
mov
andb
sbb
adc
call
movsl
cmp
scas
es
and
aaa
hlt
and
movsl
addb
mov
push
mov
out
lahf
mov
mov
push
sub
pop
into
cmpsb
xchg
adc
dec
test
mov
and
cmp
lahf
rcll
or
call
cwtl
outsl
sub
mov
xor
sub
in
cmp
shl
sbb
push
xor
loope
mov
jecxz
fdiv
add
imul
dec
cmpb
jp
and
lret
or
lods
cmp
test
lcall
sub
movsl
xor
lods
test
stos
jge
push
cmp
add
subb
push
jne
mov
xor
cld
mov
mov
addl
add
repnz
cmpsb
dec
mov
and
movsl
mov
mov
das
cli
adc
inc
cmp
mov
repz
cmp
inc
rclb
and
fimuls
out
dec
test
xorb
stc
cs
clc
jg
jp
adc
sbb
repnz
sub
push
push
sbb
aam
mov
mov
pushf
fisubl
jb
ret
mov
xorl
out
dec
push
hlt
and
aaa
adc
aaa
testl
cmp
roll
pop
shl
push
and
xor
js
mov
lds
push
out
leave
xor
xchg
push
insb
add
cmp
aad
popa
sub
lods
mov
mov
xchg
dec
cmpsl
jo
jecxz
aaa
lahf
movsl
scas
pop
dec
push
fdivrs
add
sti
cmc
cwtl
leave
adc
sbb
mov
mov
pop
and
xchg
push
je
sub
cli
jns
cmpsb
pop
aam
arpl
pop
es
scas
enter
xchg
ficomps
test
pop
test
jns
xchg
mov
fwait
sbb
je
xchg
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
stos
jo
sbb
add
sbb
jo
dec
sub
jb
jmp
push
arpl
rorb
enter
dec
andb
sbb
or
push
js
jne
xor
xor
jne
ds
loopne
and
into
je
icebp
sub
test
test
imul
xchg
pusha
sarl
lret
dec
mov
or
sub
test
fnstenv
sti
cmp
aas
and
in
stc
das
and
in
sahf
mov
orb
pop
add
mov
sbb
jg
into
data16
mov
je
cwtl
jp
jl
aas
loope
adc
ljmp
lds
jp
sub
jo
leave
dec
pop
inc
jp
les
outsl
out
stos
and
or
lods
pop
push
or
add
and
sbb
jle
jbe
or
mov
arpl
dec
inc
jne
push
lods
sbb
mov
mov
sbb
or
push
test
pop
add
adc
insl
lods
fs
xlat
add
or
sbb
sbb
mov
sub
into
and
icebp
push
xor
negl
or
test
xor
jl
jae
repz
aad
mov
cmp
lret
and
dec
insb
mov
or
pusha
inc
or
xor
roll
insl
dec
fisubrl
sbb
or
xchg
movsb
xor
gs
data16
mov
sbb
or
pop
notb
push
mov
and
xchg
adc
jno
icebp
cltd
jae
jecxz
xchg
add
inc
fnstsw
aad
fdivl
xchg
mov
rcrl
mov
cmc
popf
repz
adc
mov
inc
int3
int
arpl
cmpsl
arpl
repnz
outsb
dec
icebp
out
fbstp
inc
std
nop
sbb
mov
xor
inc
stos
jb
js
jl
and
shr
subb
aaa
jns
xor
jnp
mov
cmp
mov
rolb
mov
pop
fcoml
cmp
rorl
into
stc
push
xor
sti
in
pop
sub
mov
sub
clc
xchg
imul
pop
rcl
dec
push
adc
call
out
jne
jbe
jns
incb
sub
repz
je
adc
cmpsl
xchg
push
push
scas
or
sahf
leave
ljmp
jne
imul
or
insl
lahf
mov
std
pusha
mov
mov
pop
mov
mov
mov
lds
dec
jecxz
push
pop
dec
sbbb
push
mov
call
mov
repz
or
fmuls
mulb
jb
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
loopne
push
stos
pop
adc
sbb
adc
sbb
sbb
outsl
push
mov
and
lahf
dec
xor
cmp
xchg
push
mov
aas
jns
push
sub
add
mov
fwait
or
dec
adc
test
cltd
lcall
inc
cmp
or
lods
daa
and
inc
jbe
aaa
shr
xorl
scas
pop
fmull
mov
arpl
das
fdivrl
mov
cmp
or
push
cmp
and
fs
gs
mov
sub
in
push
cwtl
das
inc
or
mov
into
mov
add
int
fisubs
jo
or
xchg
or
je
xor
and
sbb
fwait
mov
test
popa
int
xor
or
adc
xchg
aam
test
fcmovu
xchg
xor
jp
aas
push
xor
and
movsb
sbb
xor
and
pop
jecxz
and
pop
sahf
shrl
mov
shrl
jnp
push
mov
mov
outsb
mov
inc
fisubs
cmp
into
in
out
ficoml
pop
std
in
stos
sub
pop
testb
shll
sarb
jo
xor
mov
mov
pushf
stos
lcall
imul
pop
int
adc
lods
jbe
orb
imul
push
sub
or
cmp
ret
xlat
jle
fcomi
movsl
outsl
dec
pop
cltd
adc
inc
repz
insb
cmp
mov
dec
in
aam
ja
push
ficoml
and
fsts
ds
in
sbb
mov
shll
leave
fidivl
adc
add
cmc
mov
ret
or
sub
and
jnp
out
jo
adc
outsl
xchg
xchg
dec
ds
ss
in
push
nop
xchg
and
cmp
fstl
pop
mov
mov
mov
aaa
in
xchg
in
mov
jns
and
rcrl
adc
lods
sahf
add
sbb
dec
mov
or
mov
cmpsb
out
mov
inc
dec
xor
mov
mov
mov
in
inc
and
cmp
mov
lret
mov
ljmp
inc
fdiv
mov
ljmp
mov
mov
pusha
inc
or
leave
in
movsl
inc
test
or
sub
test
xchg
ljmp
pop
test
mov
shl
dec
fdiv
mov
jle
scas
cmpsl
jnp
inc
push
mov
sti
nop
mov
dec
inc
cmpsl
movsl
jne
jl
nop
fs
mov
and
outsl
xchg
xchg
sti
mov
jle
push
xor
xorps
stc
pop
mov
and
call
imul
cmp
movsl
sub
sti
enter
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
jne
mov
test
sbb
or
mulb
in
mov
jne
test
pop
pop
add
dec
mov
fwait
sub
jns
loop
mov
add
sti
cltd
lds
fisttps
clc
mov
fwait
insb
fcmovbe
sub
push
jecxz
dec
or
mov
mov
push
mov
fadds
in
shrl
repnz
inc
and
or
pop
push
push
out
in
add
daa
xor
and
js
nop
mov
xor
dec
movsb
shll
inc
andl
in
xor
xchg
or
pop
shl
cvttps2pi
not
xor
in
cmpsl
test
mov
aam
jo
xchg
out
push
insb
pop
call
mov
xchg
jge
sbb
out
jnp
adcb
sbb
dec
push
sbb
dec
xchg
lods
xor
shl
rclb
or
mov
inc
js
out
dec
aaa
push
adc
sub
pop
xchg
lods
dec
mov
mov
sbb
rcl
fsts
xchg
subl
inc
xchg
loopne
pop
out
insl
pop
or
and
data16
mov
rcrb
push
int3
cmp
sbb
inc
sbb
xchg
shrl
ss
mov
sbb
mov
aas
add
sbbb
in
dec
aaa
xchg
sbbl
dec
stc
gs
or
ja
les
je
mov
movsb
pop
or
sub
popf
mov
not
popf
lds
cltd
fcoms
insl
ficoml
inc
lret
pop
fiadds
cmp
outsl
cmpsb
sub
dec
out
sbb
insl
rolb
adc
scas
pushf
iret
jl
mov
cmp
movsb
enter
scas
and
sub
lds
sub
mov
out
out
or
fidivrl
pop
insl
push
mov
rolb
nop
xor
popa
aaa
jb
jae
xchg
repz
or
jle
mov
xchg
pushf
data16
jge
and
fst
stc
adcl
mov
pop
aad
adc
subl
loop
xchg
imul
aad
or
inc
push
mov
pop
into
pop
cmpsb
popf
or
sbb
mov
mov
jns
xor
pop
mov
jle
leave
or
jl
jl
mov
jge
insl
xchg
sbb
outsl
fistl
js
or
sub
in
lds
xchg
xchg
inc
inc
aaa
xchg
and
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
add
sbb
test
sbb
call
cld
cmp
fdivrl
mov
jno
xchg
pop
ss
adc
aaa
rcll
push
test
xchg
nop
and
push
and
adc
add
nop
mov
loope
xchg
fmuls
lock
xchg
mov
cs
repnz
add
loope
outsb
ljmp
dec
ds
sbb
imul
pop
cmp
in
movsl
rolb
mov
sub
test
jl
push
inc
pusha
in
rcrb
hlt
loope
insb
loop
mov
sar
mov
or
jbe
xchg
aaa
inc
imul
add
push
fs
sbb
pop
je
add
inc
shl
insl
mov
fsubl
pop
add
push
xor
mov
icebp
das
mov
inc
cmp
jecxz
in
xor
dec
insl
adc
into
add
in
pop
xor
add
fwait
mov
out
sub
jnp
loop
mov
and
arpl
add
mov
fisttpl
adc
int3
add
les
nop
mov
or
mov
cltd
leave
jle
mov
pop
pop
js
adc
mov
jb
xchg
outsb
or
imul
jne
pop
out
inc
es
or
or
es
mov
movsl
hlt
push
outsl
loope
repz
push
stc
iret
jge
and
sahf
cmp
xorl
sub
in
and
pop
cmp
test
ficompl
xor
push
mov
inc
scas
sub
jmp
int
xchg
fstpl
ret
nop
inc
jecxz
jne
or
mov
cmpl
mov
roll
adc
je
xchg
roll
movsb
lret
and
push
mov
mov
enter
sahf
ss
inc
xor
add
pop
lds
push
mov
ljmp
aas
ja
test
lcall
jns
sbb
test
stos
test
addr16
dec
rcrb
push
aam
or
loope
lods
pop
cmp
pop
sub
repnz
jg
popf
mov
mov
dec
int3
inc
jp
lock
mov
loop
stos
jne
xor
sbb
inc
push
test
divl
inc
xchg
lea
push
push
fs
and
gs
leave
cmpsl
fistl
pop
sbb
out
jno
rol
sarl
arpl
pushf
lods
and
daa
mov
add
leave
ja
ret
sbb
dec
xchg
inc
hlt
pop
and
adc
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
pop
mov
popa
add
sbb
push
jp
mov
and
mov
pop
inc
mov
dec
dec
addr16
inc
mov
sbb
mov
mov
mov
cmp
adc
jecxz
rorb
xchg
lock
sbb
xchg
or
imul
cld
cmp
jl,pt
xlat
push
sub
fsub
enter
popf
enter
aam
aas
sub
xchg
fstpl
add
jl
enter
test
popf
in
outsl
push
cmp
xor
xchg
xor
jbe
je
gs
xorb
inc
repz
ret
jecxz
and
fimull
dec
jmp
mov
inc
add
test
cmc
sbb
fdivl
ret
xor
adc
loopne
pop
lahf
loopne
aam
sti
aam
stos
xchg
cmp
dec
or
loop
lods
scas
inc
add
int3
data16
ret
andnps
cmp
mov
adc
adc
pop
mov
call
cmpl
js
mov
adc
jno
out
jp
inc
loope
push
push
lahf
shll
int3
add
add
movsl
inc
loop
testl
push
rcr
jle
push
pop
sub
insl
sub
lcall
idivl
es
arpl
test
add
xchg
jne
xchg
adc
je
std
jns
push
pop
push
out
aas
jle
ret
mov
push
addl
pop
mov
cmpb
dec
out
insl
add
js
out
cmp
call
adc
push
sbb
call
push
jbe
mov
lods
les
fs
jle
sub
dec
ljmp
adc
insl
xor
std
sbb
jmp
dec
sub
fcompl
xchg
cwtl
arpl
pop
mov
rcl
push
add
roll
or
sbb
shr
and
add
std
and
sub
into
lret
cs
aaa
fwait
sbb
sbb
pop
xchg
adc
add
mov
and
movsl
cld
lcall
add
lcall
lcall
adc
inc
cltd
das
mov
push
adc
sbb
push
jb
out
push
call
jne
lea
in
cld
xchg
inc
call
and
push
adc
jno
and
cmp
dec
xorb
mov
pop
popf
out
pop
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
lcall
test
sbb
into
push
call
sbbl
mov
inc
sub
fsubrl
pop
ror
cli
mov
js
push
xor
nop
insb
xchg
push
xchg
aad
add
sub
xor
or
imull
mov
lock
dec
std
inc
inc
push
cli
popl
mov
cltd
enter
mov
int3
imul
or
mov
cmp
stos
out
xchg
adc
loopne
test
aam
int
and
xor
adc
ljmp
pushf
xor
cmpl
pop
gs
cld
test
fadds
sub
addr16
pop
xchg
test
rolb
out
das
rorb
sub
pop
repnz
dec
cs
or
pop
or
pop
xor
cwtl
inc
mov
nop
push
push
pusha
dec
nop
or
push
adc
popa
adc
sti
lock
sbb
jmp
jbe
xor
mov
ja
adc
cmpsb
adc
fsubrl
ja
fstps
repz
dec
or
add
mov
adc
pop
jg
inc
jp
call
fisttps
pop
data16
in
mov
leave
add
xor
and
lret
out
pop
pop
dec
jb
push
je
mov
pop
sbb
negb
adc
out
xchg
xor
fstp
rcrl
pusha
iret
daa
ds
icebp
mov
andl
inc
mov
inc
loope
adc
cmc
fwait
inc
stos
add
cmp
icebp
sbb
sti
mov
cmp
add
out
out
pusha
ds
inc
outsb
aam
mov
add
stc
in
add
mov
dec
mulb
xchg
imul
xor
sahf
xor
xor
add
and
mov
les
push
pop
aas
xchg
inc
mov
shll
bound
fstps
rorl
push
push
or
fistpl
push
mov
jbe
jns
test
inc
in
mov
or
adc
and
test
test
or
movsl
inc
ds
inc
and
hlt
cmc
aam
fnsave
dec
cld
pop
mov
xchg
cmp
xor
xor
sti
test
test
in
div
lret
push
xchg
or
arpl
adc
cltd
dec
cmp
shl
fnstcw
push
out
out
and
les
mov
nopl
fldt
inc
jle
es
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
mov
jle
negl
sbb
lcall
sahf
rcrl
fdivs
divl
fwait
divl
aam
and
inc
fwait
xchg
xchg
mov
or
xor
insb
sub
mov
adc
or
jg
stos
or
ss
repz
inc
push
jns
mov
dec
cmpsl
mov
in
or
mov
mov
jno
xchg
icebp
add
fisubrs
pop
pop
cwtl
inc
lret
push
inc
fldcw
mov
call
and
or
iret
sub
inc
mov
mov
cmc
inc
jmp
mov
fldenv
mov
add
adc
das
xorl
call
divl
add
cmp
clc
cmp
cmp
adc
cld
cmp
out
cwtl
mov
aad
jle
enter
dec
xchg
mov
test
out
cli
and
jecxz
inc
sti
add
scas
inc
in
hlt
insl
mov
pop
xor
test
in
ss
roll
add
push
repz
ret
call
or
mov
out
push
or
sahf
sbb
and
cmpsb
stos
lods
and
pop
arpl
sbb
testb
lahf
pop
sbb
push
push
flds
les
inc
sub
dec
and
test
inc
iret
enter
jecxz
jns
sbb
pop
add
xchg
xchg
data16
jge
repnz
hlt
lret
mov
sbb
rcrb
pop
xor
sbb
in
inc
les
jo
xor
out
bound
push
push
rcrl
arpl
push
cmpb
cmp
mov
push
stos
sbb
test
or
daa
ljmp
ret
loope
sbb
mov
int3
sbb
imul
mov
pop
or
or
cld
pop
fldl
jle
xor
add
lods
mov
out
mov
out
ljmp
xchg
mov
outsl
push
into
cmp
loop
cmp
fisubrl
js
sub
call
push
xor
jne
xchg
inc
loopne
rolb
imul
mov
jge
imul
xchg
sub
lea
scas
sub
shr
out
mov
in
xchg
inc
dec
add
jne
and
xor
enter
inc
call
movl
jmp
aas
mov
mov
dec
mov
add
icebp
sbb
test
sbb
push
mov
inc
sbb
fisubs
xor
out
adcl
mov
outsl
loopne
sub
sub
int
imul
mov
cmc
push
and
ja
repz
mov
cltd
xor
test
push
sbb
aaa
pop
and
xor
mov
sarl
bound
and
mov
pop
dec
or
push
adc
pop
out
sbb
mov
mov
push
push
shlb
adc
mov
out
mov
jecxz
jne
addr16
stos
subb
mov
jnp
aam
mov
in
shl
lahf
es
and
loopne
pop
test
or
ss
dec
icebp
lods
jae
data16
sbbb
iret
insl
adc
cltd
nop
cmpsl
cmc
ss
dec
jae
jmp
ja
mov
in
pop
mov
movsl
pop
icebp
sub
pop
jmp
mov
jnp
mov
pop
ficomps
cmp
mov
xor
insl
ds
nop
adc
sbb
bound
pop
or
add
xor
xor
rcll
adc
out
stc
inc
cmp
push
mov
insl
fwait
sbb
iret
add
sub
and
fnstenv
push
xchg
imul
std
push
push
fmul
mull
nop
jbe
mov
ljmp
leave
mov
mov
ficoml
pushf
xor
ljmp
sbb
sub
sbb
fidivrs
mov
sti
ret
cmc
sti
cmp
xchg
inc
xchg
rorl
imul
dec
push
push
fwait
jmp
movsb
and
aaa
mov
adc
movsl
xor
addb
repz
mov
in
aaa
daa
add
in
adc
and
scas
sub
lcall
inc
in
or
push
pop
pop
dec
mov
lahf
fisttpl
orl
inc
gs
inc
xchg
add
adc
xor
sti
cmp
push
fsts
adc
sub
sbb
in
dec
push
fisttpl
adc
in
loop
loop
xchg
or
mov
mov
in
or
add
nop
loope
shll
add
lea
js
js
and
mov
std
pop
xchg
fiaddl
orl
and
xchg
aas
mov
lret
adc
outsl
cmp
add
push
cmc
inc
repz
pop
push
jmp
push
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
loope
mov
ljmp
inc
cmp
xchg
shll
enter
nop
mov
xchg
sbb
jno,pn
ja
gs
or
mov
mov
pushf
icebp
xor
mov
js
movsl
sbb
mov
das
mov
out
mov
in
clc
mov
fisubl
scas
jae
pop
pop
xor
cmp
out
rcrl
add
test
xchg
sahf
dec
pop
dec
mov
je
mov
mov
nopl
mov
insb
or
inc
fs
shr
int
mov
sbb
sub
jns
fs
aam
aas
aas
dec
daa
push
pop
lret
cmp
loope
cmp
jb
filds
mov
pop
sub
jecxz
jae
pop
mov
out
cmp
add
scas
mov
push
es
leave
push
aad
aad
clc
popa
sbb
lds
call
jnp
cmp
cmp
or
mov
mov
pop
pushf
xchg
mov
scas
incb
mov
insl
jo
movb
ret
rcl
inc
inc
push
push
push
sti
xor
sbb
aam
push
jb
popf
xchg
clc
push
add
scas
mov
cmc
xchg
dec
lea
bound
out
push
and
out
fstps
push
sbbl
add
lcall
inc
adc
jne
mov
sbb
test
and
enter
or
mov
cmp
in
inc
or
mov
inc
dec
imul
and
or
mov
xor
pushf
clc
hlt
ja
dec
das
outsl
mov
mov
hlt
sub
imul
fwait
jmp
cmp
xchg
mov
xchg
jne
call
mov
mov
cmc
lods
stc
mov
fisubs
dec
or
push
mov
jecxz
les
fildll
hlt
stc
loope
cld
cmp
sub
cmpb
popf
sbb
inc
pop
adc
mov
js
int
int
xchg
stos
mov
jle
fmull
repnz
cld
outsl
inc
or
movsl
shlb
mov
fisttpll
sbbl
inc
xchg
mov
roll
xchg
sub
das
adc
pop
popf
sbb
rorb
jge
sbb
scas
sbb
pop
jnp
mov
daa
push
lret
out
loopne
shl
sbb
testl
xchg
jg
popa
popa
mov
adc
or
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
jle
jl
out
sbb
enter
popf
jge
ljmp
lods
jmp
ljmp
xchg
das
es
lods
sbb
int3
ficomps
sub
jne
in
dec
or
push
pop
xchg
adc
lock
in
mov
or
xchg
cld
fsts
xlat
lds
shlb
mov
jo
push
dec
pop
icebp
int
mov
popa
inc
sbb
iret
into
push
orb
push
dec
dec
pop
mov
je
ja
mov
inc
mov
dec
xor
or
jecxz
inc
stos
xor
icebp
mov
push
and
xor
je
gs
mov
outsl
push
xor
ds
push
fnop
mov
fisttpll
push
mov
inc
push
lods
mov
lahf
ret
jmp
xor
fxch
int
jg
jne
and
out
test
imul
jns
sub
xor
test
cwtl
mov
push
mov
std
imul
inc
xchg
cmpsb
jo
push
shlb
cld
xchg
push
mov
sarl
push
mul
decb
insl
xchg
or
push
jne
cmp
xlat
cmp
xchg
icebp
ror
inc
frstor
push
xchg
ja
inc
in
in
mov
popa
xchg
jg
lods
cld
iret
hlt
push
pop
daa
ja
in
mov
cwtl
sti
mov
sub
fwait
clc
out
xchg
adc
jnp
cli
mov
mov
enter
inc
sub
je
jl
add
mov
add
call
lea
aad
ds
or
and
inc
popa
or
dec
dec
lahf
push
cmp
lods
jl
data16
nop
lea
test
out
int3
dec
xchg
mov
cli
cs
imul
mov
lods
cmp
mov
mov
add
xchg
inc
fisttpl
cmc
pop
out
jecxz
adc
outsb
xlat
ss
outsb
imul
push
ljmp
push
pop
mov
pop
push
inc
pop
ucomiss
scas
xor
and
aad
xor
ss
adc
lods
xor
pop
repz
jg
scas
addr16
mov
mov
das
lods
mov
add
push
mov
outsb
out
sar
mov
gs
jnp
mov
out
popf
ds
dec
loopne
push
pop
mov
sub
mov
inc
pop
andl
xor
xlat
pushf
push
lods
jns
outsl
std
cmp
xchg
pop
adc
xchg
repnz
push
test
cmpsl
xor
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jo
loopne
sbb
es
push
jbe
jmp
jecxz
add
cwtl
imul
sbb
fistpl
push
int3
cmp
mov
jl
dec
shll
je
sarb
cmpsb
cmp
sbb
or
and
xor
imul
popf
jmp
test
mov
imul
cmpsl
imul
mov
push
push
ret
sbb
lock
test
pop
dec
add
xor
rclb
xchg
mov
inc
mov
jb
dec
mov
stos
in
leave
dec
cld
pop
addr16
outsl
dec
loop
mov
je
jns
lods
push
sbb
lret
ficoml
xor
jbe
jmp
pop
fwait
sahf
cmc
hlt
lea
addl
mov
out
mov
push
jle
fstpt
push
add
inc
stos
aam
das
fwait
and
sbb
ss
dec
mov
mov
les
test
mov
mov
xchg
shll
mov
lock
dec
inc
sub
push
xor
pop
jnp
cmp
mov
ret
mov
push
add
add
sbb
mov
lret
pop
mov
cmpsl
sbb
iret
addr16
jno
scas
push
ret
scas
test
mov
rdtsc
or
inc
fistl
scas
in
push
xchg
andb
negl
aas
push
lea
jbe
push
nop
out
insl
inc
movsl
mov
fucom
dec
mov
in
cmp
pop
scas
cmpsl
lock
xchg
lcall
std
add
mov
xchg
mov
add
inc
sti
out
jbe
inc
inc
dec
flds
popa
lahf
and
xchg
xchg
pop
adc
in
out
cmp
xchg
jg
lods
add
ja
das
repz
scas
push
push
cmp
fucomip
sbb
pop
sub
push
insb
mov
mov
push
ficoms
sbb
mov
in
jp
mov
in
iret
insb
and
lock
and
mov
aas
lods
dec
xchg
movsl
fisubs
sbb
insb
addr16
imul
adc
pop
mov
sbb
xchg
addl
shlb
imul
das
out
push
xchg
xchg
or
std
or
pop
add
mov
add
mov
xchg
push
inc
sbb
movb
loopne
adc
jae
sti
xor
mov
in
scas
out
movups
cmp
mov
dec
xchg
pop
push
mov
pop
js
pop
xchg
inc
mov
mov
inc
in
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
mov
sbb
xor
sbb
ja
shl
adc
xchg
sbb
aam
push
mov
imulb
cs
icebp
lock
inc
dec
pop
or
pop
xor
inc
repnz
dec
xor
push
aam
das
pusha
shrl
pop
test
adcb
push
ss
xchg
movsl
xchg
outsb
xor
add
add
or
and
ret
nop
mov
cmp
popf
sub
mov
dec
ja
xchg
mov
jmp
lods
scas
out
mov
adc
inc
pop
std
xchg
dec
add
arpl
popf
mov
pop
mov
push
es
iret
aad
xchg
lcall
pop
adc
dec
dec
aaa
ficoml
add
shl
bound
sbb
xchg
je
mov
add
idivb
fsubp
dec
sbb
fcmovu
ljmp
mov
outsb
dec
hlt
xor
cmpl
roll
xor
shrd
add
aas
imul
ljmp
int3
jg
aas
std
pop
add
out
lret
int3
jg
fmul
xor
cmpb
out
aaa
sti
jg
pop
cmpsl
pop
fsubrp
andb
push
subb
mov
daa
jbe
subl
jmp
xorl
mov
inc
rorb
pop
enter
fistpll
out
xlat
jg
jae
xchg
dec
test
dec
inc
shlb
jl
sub
push
mov
push
fcmove
insb
or
ret
aam
loope
pusha
movsl
add
int3
mov
inc
mov
and
loope
cmc
fimull
dec
sbb
mov
cli
rcrb
and
insb
pusha
and
icebp
gs
add
enter
jp
mov
push
adcl
aam
je
xchg
loopne
mov
mov
clc
into
lret
push
mov
imul
sub
jnp
hlt
or
or
push
add
std
jl
sbb
sbb
push
jno
or
faddl
jb
icebp
into
in
lods
jge
insb
test
ds
inc
rclb
pop
pop
shll
mov
sub
jle
rcrb
xchg
or
push
int
jp
jle
cwtl
dec
and
daa
movsb
lcall
jle
repz
rcll
subb
test
add
cmp
and
shll
mov
mov
dec
into
movsb
jns
and
aad
or
pop
cmc
dec
fcoml
cmp
test
jge
add
lcall
and
jns
xor
sbb
mov
enter
je
sbb
jno
lahf
push
or
daa
push
ret
adcb
mov
xor
pop
inc
adc
flds
pop
out
mov
std
mov
shl
jl
das
int3
cmpl
fucomi
push
cmp
into
int3
push
rorl
out
inc
stc
lret
dec
xor
lahf
or
jp
repnz
xchg
mov
sbb
inc
fs
pop
cmp
lret
fwait
xor
cmpsb
and
mov
popf
iret
inc
mov
int3
push
fs
aam
jns
cltd
inc
imul
pusha
gs
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
fildl
sbb
adc
sbb
push
jb
bound
and
inc
ret
ja
cmp
push
lret
cld
out
jno
push
aad
sbb
or
mov
add
xchg
scas
mov
cmp
std
aad
adc
jbe
pop
test
mov
aaa
loope
pop
in
add
mov
popf
lret
fidivrs
addl
xor
inc
cmp
jno
mov
mov
jno
mov
jb
jae
loop
out
fistps
and
xor
pop
into
cld
or
cmpl
jmp
and
idivb
int3
pop
mov
push
push
fists
in
jle
sub
insb
mov
xor
jg
xlat
mov
mov
push
incb
pop
out
mov
jns
pop
inc
xchg
inc
lahf
inc
pop
jo
lahf
aam
test
cmp
daa
fistps
cwtl
out
push
jp
mov
fstpt
xor
imul
or
cwtl
popa
mov
hlt
or
bound
add
sahf
ret
xchg
fwait
sbb
cmp
dec
adc
popf
xchg
or
js
sahf
sbb
jp
xchg
push
sbb
pop
roll
sub
fadds
stc
loope
jno
cltd
sub
inc
and
jb
dec
lahf
popf
dec
aad
cmpsl
push
shrb
pop
xchg
inc
call
cli
xor
stos
mov
rcrb
xor
and
and
sbb
daa
je
test
adc
and
sbb
mov
pop
gs
in
xchg
dec
push
loop
outsl
dec
pop
test
sub
push
inc
lea
aas
or
rorb
adc
jecxz
rcrl
jno
and
scas
push
cmp
push
dec
adc
lods
and
sahf
in
shll
cmpsb
cmp
dec
mov
cmpsl
testb
popf
out
xor
adc
xchg
mov
lahf
cmpsl
in
movsb
mov
xchg
xchg
pop
mov
jge
adc
loop
mov
add
pop
cwtl
mov
sahf
adc
mov
iret
push
ret
aad
and
loopne
cli
mov
insb
inc
adc
fldenv
dec
xchg
in
out
pop
mov
xchg
mov
xchg
scas
sahf
in
add
fs
outsb
stos
ds
cwtl
dec
mov
dec
icebp
fidivrl
loopne
data16
mov
push
add
xchg
mov
jecxz
pop
mov
jne
and
dec
ja
popa
cmp
mov
sbb
es
scas
adc
ds
jmpw
es
sub
popf
leave
lock
test
leave
push
cltd
dec
jae
or
insl
xlat
gs
loop
cmpsb
cmp
and
dec
js
or
mov
push
and
in
lret
iret
add
adc
jl
sbbl
mov
push
cmpb
xchg
stc
stos
cltd
insb
mov
aam
sahf
cmpsb
mov
test
pcmpgtw
and
inc
cmp
es
jge
aas
xor
sub
mov
cmp
dec
pop
ja
hlt
mov
cli
lea
imul
pop
or
jns
outsb
or
movl
inc
movsb
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
popa
mov
fistps
pop
jp
fsubrl
cmpsl
icebp
xor
femms
pop
xchg
jne
push
dec
dec
cs
ror
mov
or
int3
aaa
adc
xchg
shrl
das
scas
cld
mov
scas
aas
xor
mov
lods
insl
int3
adc
into
movsb
cli
add
mov
sbb
mov
ds
stos
sub
pop
leave
dec
and
aas
jg
push
incl
jecxz
out
pop
mov
sub
orl
lods
adc
lds
fwait
pop
mov
xchg
jl
sbb
mov
mov
dec
xor
mov
mov
ljmp
adc
cmp
sahf
loopne
adc
fwait
rcrl
mov
cmpsb
or
push
ds
mov
xor
movsl
bsf
imulb
repnz
jbe
movsb
xchg
test
jae
inc
orb
ror
hlt
sbb
xor
mov
xor
inc
push
or
testl
aaa
test
movl
lret
mov
mov
xchg
out
push
sub
push
fdiv
sbb
lahf
mov
test
ja
dec
mov
out
xchg
mov
dec
scas
sahf
lcall
fistpl
sub
shlb
or
adc
rolb
jg
fcmovnu
or
orl
shl
jl
testb
and
jno
jb
jl
lea
inc
test
lret
js
sarb
inc
mov
std
pop
subl
pusha
push
pop
mov
xchg
pop
adc
jne
loop
in
inc
pop
mov
ja
adc
fwait
aam
notb
pop
arpl
and
call
scas
ja
fidivrl
lds
scas
or
or
icebp
cs
in
orb
mov
pmaddwd
cmp
mov
imull
mov
ja
and
lods
das
jle
jne
iret
adc
sbb
pop
ljmp
push
sub
mov
ss
adc
and
sbb
rorb
xchg
jge
aas
push
mov
ljmp
test
into
jb
cld
dec
push
sbb
inc
pop
xorl
outsb
dec
push
clc
mov
imul
and
fildl
mov
lcall
stc
push
popf
int3
out
xlat
pop
mov
add
xchg
ficoms
enter
push
cmpsl
hlt
push
inc
imulb
xchg
mov
hlt
cwtl
data16
push
or
push
mov
sahf
in
inc
add
adc
add
out
add
mov
push
pop
mov
in
test
mov
add
jecxz
test
pop
cmc
sub
repz
rcrb
fcoml
int
mov
aas
aad
push
orb
sub
test
cs
dec
loop
in
cli
xchg
xorb
pop
out
xchg
iret
xchg
sub
arpl
push
aaa
mov
pop
push
xor
aad
push
and
in
jne
lret
aam
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
jge
dec
push
sbb
xor
sbb
out
adc
es
cli
imul
sub
jmp
adc
or
fs
xor
fldt
add
mov
pop
push
movsl
stos
dec
dec
out
arpl
iret
cs
mov
dec
out
mov
xor
sbb
mov
mov
xor
data16
push
jp
adc
jb
push
fimuls
xlat
xor
mov
and
push
lret
adc
cli
cs
jno
adc
xchg
jmp
adc
jmp
inc
mov
out
xchg
out
cmp
dec
mov
add
pop
inc
dec
add
les
cmp
fs
cmp
cmp
and
enter
arpl
fimull
fimuls
add
dec
pop
imul
add
mov
xor
push
je
push
and
mov
enter
jae
imulb
pop
out
add
fcomps
cli
jl
push
pushl
sub
cwtl
and
outsl
sbb
sahf
imul
test
adc
repnz
mov
pop
std
or
and
or
lea
mov
mov
or
fs
pop
pop
sbb
mov
in
cmp
dec
flds
shlb
mov
xor
es
sub
fwait
leave
mov
out
cmp
xchg
add
push
nop
shl
ja
stos
out
xor
hlt
add
push
test
hlt
pop
xor
jne
pop
ret
addr16
negb
repz
dec
pop
add
cmp
fcomp
xlat
pcmpeqb
xchg
add
jp
fdivrs
subb
shl
push
dec
and
mov
stc
imul
cmp
inc
add
les
add
cmc
lret
xor
xor
fs
pop
push
ficompl
xor
and
ficompl
mov
xlat
aas
ret
mov
in
xchg
jae
pop
lahf
xor
mov
bound
pop
sub
jl
rol
test
insb
mov
negl
jp
movsl
pop
dec
cli
hlt
mov
adc
dec
icebp
sarb
push
jl
jmp
push
add
dec
movsb
dec
xor
jne
out
cwtl
jge
jl
cmp
jmp
jp
sub
fistpl
js
test
ss
fstpl
mov
je
lcallw
xor
push
mov
mov
mov
or
sarb
negl
adc
xchg
inc
sti
mov
add
fisttpll
out
mov
add
add
test
ljmp
mov
push
or
ret
lret
sbb
jns
jo
inc
aas
arpl
into
push
ret
adc
xor
loopne
mov
cmpsl
stos
mov
push
shll
daa
neg
clc
xor
movq
dec
and
int
dec
adc
cmp
stc
jg
sub
testb
jno
loopne
pop
fldt
xchg
inc
jmp
aad
and
mov
pop
cmpsl
lods
xchg
mov
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
xchg
sbb
sbb
adc
sbb
push
negl
adc
cltd
mov
pop
int3
adc
sub
repz
jl
int
pop
push
out
jbe
scas
shll
hlt
insl
int3
pop
sbb
rclb
mov
mov
jl
fnstenv
mov
pop
test
int
cmp
and
rcl
adc
mov
push
das
sti
int
enter
jecxz
sub
cmpsl
cli
rcr
pop
push
jl
mov
pop
shrb
dec
mov
out
and
or
fsubl
jle
xchg
mov
lahf
in
jb
ficoms
jne
testl
add
sub
retw
push
testl
push
pop
or
sarl
sbb
sbbb
and
rolb
les
lret
mov
mov
sub
cmp
inc
aad
les
mov
mov
xchg
pop
pop
push
out
aad
and
pop
lret
xorl
test
enter
je
jae
push
dec
test
adc
cmp
inc
popf
aam
pop
mov
add
cmpsb
lea
add
stc
aam
roll
xor
or
stos
or
lcall
imul
je
xor
ljmp
data16
mov
xchg
sub
and
out
sahf
and
lea
insb
aaa
fsubs
jno
enter
cmp
or
adc
mov
sub
daa
fildll
imull
xor
leave
xchg
push
mov
fldl
roll
out
pop
repnz
rol
repnz
xchg
push
les
and
ret
sahf
mov
loopne
pop
pushf
push
xchg
ret
mov
loop
out
sbb
xor
add
das
push
mov
mov
test
outsl
lea
xor
mov
into
jae
fldl
subl
dec
adc
mov
and
daa
pop
pop
addl
and
cld
jmp
dec
sub
jb
add
xor
and
aas
adc
mov
jmp
jp
inc
mov
cmp
mov
arpl
stos
loop
xor
faddl
fxch
or
jns
aaa
jne
push
aas
sbb
adc
scas
ret
mov
pop
cld
xor
pusha
sbb
ss
fcmovbe
jb
push
dec
incl
jo
out
fstl
loopne
pop
dec
adc
ljmp
cltd
std
mov
mov
iret
push
pop
inc
pusha
mov
jecxz
dec
mov
mov
push
mov
clc
xchg
adc
jl
cmp
add
pop
inc
pop
sarb
outsb
ret
loop
fisttps
rcrl
push
in
bound
pop
add
add
cli
rcll
test
cmp
lods
jmp
xor
xor
mov
mov
mov
mov
popa
mov
lds
popa
lahf
jbe
cmp
push
push
mov
mov
adc
push
adc
cwtl
jbe
sarl
stos
mov
add
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
mov
sbb
xor
sbb
fxch
mov
adc
stos
xor
fisubrl
lods
push
or
add
jle
pop
and
sbb
jo
and
jmp
dec
push
ljmp
fcmove
notl
test
mov
push
mov
dec
jbe
std
dec
pop
jno
cmp
repnz
lahf
push
shrb
dec
xchg
xchg
fdivrl
adc
sbb
fdiv
orl
mov
je,pn
inc
movsl
jne
add
sub
jbe
sbb
mov
inc
inc
sub
jnp,pt
push
xchg
sub
or
adc
mov
cmc
xchg
loope
iret
sub
mov
jge
fwait
inc
leave
and
mov
sbb
ja
xchg
pop
or
repnz
loop
pop
lods
das
into
mov
sub
scas
out
inc
push
sbb
mov
cmp
and
sub
repnz
jecxz
ret
inc
es
pop
dec
int3
lret
or
or
mov
fcom
mov
xchg
inc
out
push
je
cwtl
stos
cmp
push
cwtl
mov
sbb
outsb
pop
cwtl
lret
inc
cmp
sbb
push
inc
mov
out
ss
mov
add
mov
sub
push
jno
jno
push
sub
ret
out
inc
call
dec
add
ljmp
push
in
scas
fdivrl
dec
mov
out
xorl
lret
lret
je
jne
dec
fisttps
push
cmp
push
and
mov
mov
adc
cltd
xchg
out
push
bound
or
sbb
sbb
insl
jmp
add
cmpsl
inc
aaa
cmp
data16
leave
shrl
jmp
or
xchg
fs
sub
pusha
and
mov
xchg
dec
movsl
enter
scas
add
mov
pop
decb
mov
jmp
out
inc
and
pop
jno
and
lahf
adc
out
pop
mov
cli
jge
push
ss
repnz
sub
pusha
movsl
cmc
fstpl
xchg
mov
leave
mov
dec
enter
and
mov
sbb
sti
pop
cmp
xor
out
pop
push
dec
sub
jmp
xchg
xor
fbstp
std
add
jecxz
xor
mov
mov
mov
sbb
loop
mov
jnp
mov
adc
xor
sub
inc
aaa
adc
jge
lods
pop
jmp
sub
loop
repz
mov
imul
inc
sti
rorb
cltd
leave
cs
popf
sub
inc
leave
sbbb
mov
push
cmpsl
jne
stos
aaa
das
sbb
mov
xchg
mov
jmp
fimuls
mov
into
lods
hlt
inc
sbb
arpl
lcall
mov
inc
push
movsl
lock
cld
mov
pop
jbe
repz
sbb
test
and
inc
sub
mov
cmpsl
mov
push
push
or
jge
cli
les
push
imul
repnz
xchg
mov
jg
pop
imulb
fdivl
mov
test
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
sub
mov
xor
sbb
dec
xchg
or
imul
mov
stos
push
loop
lods
push
or
fstl
out
divb
mov
xor
sahf
movsl
xchg
stos
mov
imul
mov
push
fldl
mov
sub
mov
mov
daa
andb
add
jne
loopne
mov
inc
inc
les
aad
and
dec
mov
orps
push
cwtl
xchg
int
dec
insl
ja
std
in
and
inc
and
mov
repnz
hlt
gs
inc
call
lods
icebp
xchg
mov
popl
pop
xchg
addr16
je
cmc
push
push
mov
sbb
xor
movsl
push
or
scas
and
mov
push
outsl
adc
testl
inc
inc
lock
sbbl
mov
fcomps
inc
pop
rorl
dec
push
int3
add
jecxz
ljmp
mov
add
nop
scas
add
sbb
mov
sub
push
std
icebp
fcompl
mov
add
pop
cltd
mov
rcrb
inc
stos
lret
aas
xor
dec
rolb
inc
or
mov
cmc
arpl
add
jle
xchg
ja,pt
test
aad
mov
mov
out
shr
sub
bnd
test
mov
mov
out
and
adcl
ret
mov
mov
or
jae
fcompl
ret
lds
imul
or
xor
outsl
inc
scas
mov
mov
mov
es
popa
push
test
ficoml
clc
dec
jge
popa
cld
xchg
add
xchg
xorl
imul
add
xchg
push
push
lock
int
mov
dec
xorb
mov
dec
daa
pop
cmpsl
cmp
mov
mov
fiaddl
xchg
xor
jbe
sbb
xchg
cmp
mov
aaa
rorb
xor
popa
mov
push
aam
insb
mov
cmp
mov
in
sti
inc
jne
cld
sub
cltd
fisttps
inc
loop
sarb
lcall
xor
rclb
push
xor
ret
push
adc
jb
fs
add
popf
sbb
inc
fnstenv
testb
mov
pushf
js
inc
mov
lahf
ja
mov
aaa
inc
mov
cmpl
push
fildl
sub
scas
xor
ja
adc
xor
push
jecxz
stc
xchg
mov
mov
push
xor
pop
ds
mov
dec
add
mov
fisttpl
cmp
movsb
pop
lret
jae
jns
push
fsubs
bnd
jno
mov
lds
div
nop
sbb
cld
cmpsl
sub
inc
sub
add
adc
scas
pop
lahf
or
lcall
push
leave
std
ljmp
cmc
movsb
ret
hlt
notb
insl
jp
sub
mov
fstpt
mov
ds
adc
or
ds
movsl
cmpsl
adc
aad
lds
loop
repnz
lahf
xorb
jae
pushf
sbb
mov
mov
sti
pop
pop
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
dec
mov
stc
stos
sbb
test
pop
out
divl
dec
cmp
bound
lcall
repnz
std
jle
ror
cwtl
and
sub
mov
outsl
movsl
inc
sbb
mov
cmp
sub
scas
stos
scas
idivb
icebp
mov
xor
hlt
roll
outsb
xor
mov
aaa
es
cmp
add
sub
push
xchg
xlat
add
inc
cli
jae
gs
cli
cli
and
adc
mov
xlat
lret
mov
nop
iret
jle
jecxz
cli
push
jno
push
mov
xchg
mov
lret
dec
and
pop
push
rcrb
js
outsl
mov
push
lret
dec
mov
call
hlt
mov
data16
in
jns
mov
push
xchg
sbbl
dec
dec
mov
imul
shrb
mov
hlt
fistl
xorl
fs
push
sbb
fmull
out
test
jne
jge
xorb
push
or
jno
xchg
paddw
lea
lods
scas
pop
popf
sbb
fsubr
popa
xchg
aas
ficoml
xor
mov
sub
mov
mov
add
cmp
or
inc
sahf
fwait
dec
stc
ss
mov
xchg
cli
out
fwait
das
inc
cwtl
mov
jne
es
jb
enter
sahf
ficoms
fmuls
sar
adc
inc
mov
mov
pusha
xchg
or
cmpsb
push
movsb
xchg
jl
xlat
ret
or
inc
xchg
cmpl
pusha
inc
and
in
jno
fnsave
add
xor
mov
out
mov
mov
movsb
xor
roll
out
sub
inc
in
outsb
jmp
jle
stos
pop
jl
dec
movsb
pop
xor
in
ficoml
pop
scas
cltd
lods
jb
fldenvs
out
jne
and
mov
stos
xor
add
pop
je
rcll
push
sub
and
dec
clc
and
ljmp
xor
repz
xchg
mov
push
pusha
int3
dec
pop
mov
in
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
inc
sub
stc
enter
lods
outsl
mov
fldenv
mov
add
dec
stc
mov
adc
lcall
sub
inc
inc
out
loope
arpl
ja
add
dec
fcoms
xor
shll
call
sub
mov
gs
inc
xor
sub
addr16
in
insl
mov
inc
xchg
sub
push
rcrb
lahf
loop
cltd
mov
mov
mov
jno
xchg
xchg
enter
cmpb
out
and
mov
mov
setge
dec
mov
add
add
mov
pop
jmp
mov
lods
jg
inc
rcr
jge
push
cmp
scas
sbb
sub
and
mov
push
mov
pop
stos
xchg
add
and
clc
fwait
xor
mov
rolb
dec
aaa
jg
mov
dec
push
sub
pop
mov
pop
mov
sti
fdivr
out
fucomip
int3
in
push
fidivrs
or
insb
mov
out
sti
js
or
dec
pop
pop
push
in
pop
xor
xor
in
fnsave
out
cmc
push
push
cmc
out
mov
outsl
mov
mov
jno
stc
inc
andl
push
ret
ljmp
sahf
bound
stc
aad
fdiv
inc
and
mov
aas
sub
mov
pushf
push
xchg
out
mov
call
pop
push
xchg
call
mov
mov
adc
lods
and
mov
fcmovbe
xlat
push
repnz
dec
cmp
sahf
leave
mov
mov
test
inc
cwtl
add
mov
call
arpl
lds
jmp
and
ret
mov
dec
es
push
cwtl
mov
mov
pop
or
jns
movsl
sbb
fwait
bound
jecxz
fdivl
mov
jo
lcall
pop
push
pop
jne
sub
lods
jb
xchg
imul
scas
mov
push
les
jmp
ja
mov
fcoml
std
inc
mov
mov
mov
mov
push
jmp
sub
and
jb
push
stos
push
aaa
mov
sbb
addr16
lea
rcll
push
sbb
mov
jnp
popa
es
sbb
bound
mov
cmp
cmpb
pop
aaa
loop
aas
std
ljmp
es
ret
insb
dec
rcl
insb
add
movsb
test
lret
scas
data16
test
out
repnz
add
xor
pop
lret
testl
shl
sub
movsb
adc
popa
gs
mov
adc
lcall
js
daa
mov
jg
adc
adc
jb
push
fimuls
add
test
shl
adc
nop
push
aas
test
inc
adc
in
js
add
push
and
fisttps
sahf
and
push
cmova
xchg
rcl
jno
ret
ret
sbb
ret
call
cmpsl
or
jo
test
stos
push
ret
ljmp
mov
adc
xchg
lcall
fsubrp
mov
lcall
in
mov
jge
dec
mov
sub
jbe
adc
in
aad
mov
pop
std
dec
cmc
sub
cmpsl
sbb
ljmp
in
in
cli
popf
xor
dec
jns
test
rolb
jmp
fdivl
ret
int
xor
ret
xchg
sub
pusha
out
shlb
imul
cmp
test
aam
scas
into
ljmp
mov
xor
jle
enter
sbb
xchg
lods
mov
pop
or
mov
pop
lods
aam
test
ja
mov
scas
adc
mov
out
mov
cltd
cmp
pop
add
xchg
inc
xchg
cmp
mov
adc
pop
ror
xchg
xor
shrl
stos
idivb
pop
jnp
fstl
and
xor
aaa
add
js
xor
add
scas
fmul
icebp
or
sub
hlt
stos
stos
xor
out
fwait
adc
or
pop
mov
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
inc
lods
mov
pushf
sbb
test
scas
pop
xor
out
and
mov
idivl
or
sbbb
xlat
aad
mov
push
sub
int
mov
imull
pop
mov
push
nop
iret
mull
sub
push
mov
adc
mov
xchg
test
int
mov
adc
repz
inc
sbb
cmc
cmpsl
mov
fidivl
fldt
imul
je
outsb
ja
in
sbb
xchg
cmp
loopne
mov
cmpsb
xlat
push
push
fisubrl
mov
mov
push
lods
pop
iret
or
test
xor
dec
nop
les
mov
cld
mov
adc
test
lcall
jae
jnp
sarl
or
lods
repz
mov
cmp
mov
adc
mov
iret
ret
inc
dec
aam
loope
clc
loopne
jo
jge
mov
sub
xchg
xor
cmp
jge
nop
movsl
stos
or
pop
mov
xchg
pop
adc
flds
jnp
sub
pop
push
push
movsl
insb
fcomi
add
dec
lcall
pop
dec
and
xchg
adc
push
mov
outsb
add
lahf
rcrb
mov
xor
mov
cld
jle
jb
or
xor
lret
inc
repz
push
lods
lea
adc
pop
ret
mov
pusha
jg
int
leave
xchg
jne
lahf
cmp
xor
dec
and
xlat
outsb
sub
test
imul
mov
movsl
fcompl
pusha
xchg
jp
in
mov
pop
xchg
pop
push
mov
ret
xor
jne
jle
sti
in
push
rorl
repz
adc
inc
lods
imull
adc
mov
and
sbb
jb
subl
insl
jp
xchg
mov
icebp
bound
loopne
cmp
movsl
pop
xchg
getsec
test
enter
lret
hlt
dec
pushf
stc
insl
fsubrp
push
mov
std
call
jle
insb
inc
shlb
adc
xor
cld
mov
inc
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
lahf
addr16
test
inc
push
fistps
movsl
cld
arpl
aaa
repz
js
cmp
xor
inc
sbb
mov
aaa
push
pop
rorl
sar
shll
add
add
and
mov
hlt
loopne
les
adc
inc
out
jbe
dec
push
gs
ds
repnz
mov
getsec
pop
incl
mov
push
fmull
dec
mov
pushf
test
mov
xchg
jmp
cmpsl
jecxz
popf
arpl
rol
nop
cmpsb
xor
data16
jge
cmpsb
sbb
scas
mov
fisttps
xchg
cmpsl
jecxz
push
pushf
push
xchg
or
xchg
mov
frstor
divb
jns
pop
ds
push
jle
dec
adc
mov
mov
jno
cmp
push
outsl
jecxz
adc
xchg
into
sub
popf
inc
enter
stc
scas
push
fcomps
aad
jno
pushl
pop
pop
test
mov
std
int
pop
call
pop
dec
cmpsl
sub
pop
xchg
xor
jle
jb
pop
mov
ja
in
mov
and
imul
sbb
adc
fs
dec
adc
gs
xchg
sub
mov
add
lret
push
inc
inc
sti
mov
outsb
inc
imul
xor
mov
rcrl
sub
out
or
mov
mov
adc
mov
xlat
jp
cmpsl
nop
pop
jg
ret
in
je
lea
movsl
xchg
adc
in
mov
test
jne
cmpsb
aad
scas
sbb
in
ret
lea
fcmove
call
mov
add
loope
adc
shrb
lods
mov
hlt
sbb
xchg
aas
leave
cli
fwait
push
bound
mov
aas
shl
mov
ficoml
fldln2
mov
lahf
cltd
repz
stos
data16
add
jp
mov
xor
into
mov
mov
test
mov
daa
movsb
add
les
xor
aad
sub
cli
adc
cmp
pop
add
arpl
cmp
daa
shll
or
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
int3
call
xchg
sub
leave
out
inc
lock
lock
fmuls
xchg
jge
push
or
adc
xor
dec
das
mov
loopne
push
sub
inc
mov
adc
sub
mov
mov
cli
push
test
push
into
icebp
mov
push
jo
sti
sbb
jp
fsubrs
shrl
movsb
dec
xchg
add
lds
adc
insb
cmp
lods
arpl
xlat
push
mov
jp
out
sub
and
stos
cmp
mov
jbe
adcl
mov
xor
jle
jecxz
jp
fdivs
cltd
mov
sub
gs
divb
jo
xor
movsl
lea
sub
jbe
xchg
fldt
decl
in
mov
insl
lret
dec
xchg
jb
cmp
jmp
in
jg
or
jae
pop
cmc
hlt
out
inc
xor
jg
jnp
dec
and
xor
test
outsb
jge
cmc
je
pusha
sbb
xor
pop
jp
call
fisubrl
or
imul
xchg
sub
xchg
mov
jg
sbb
cltd
out
adc
test
mov
jmp
fistps
scas
adcl
xchg
xchg
jmp
and
inc
pop
xchg
or
and
pop
lret
push
xchg
adc
cmp
xchg
pop
jmp
loope
in
aas
jb,pt
mov
pop
lods
in
sbbl
cmp
inc
or
mov
jne
xor
pushf
and
std
in
test
adc
cmp
shrb
js
jg
jae
dec
and
dec
xchg
fs
push
sbb
inc
bndstx
int
inc
pop
pusha
inc
fisubs
push
pop
stos
dec
adcl
and
xchg
hlt
mov
stos
xor
sbb
pop
cmpsb
mov
mov
aad
call
insb
or
mov
jnp
pop
add
or
sti
sub
rcrl
iret
xchg
adcb
aam
fsub
xlat
mov
in
xor
or
jmp
push
and
mov
mov
nop
sbb
test
fdivs
sbb
mov
xchg
ds
sbb
enter
test
add
mov
and
fistpll
jecxz
stos
divl
imul
pop
dec
iret
mov
ja
sbb
xchg
pop
push
pop
dec
or
aas
lods
divb
xchg
test
data16
push
iret
xorb
xchg
hlt
pop
dec
pop
hlt
lods
pop
jnp
ret
jbe
int
lahf
inc
mov
mov
mov
in
bound
sarb
sbb
or
mov
mov
lcall
pop
in
pop
inc
outsl
scas
push
adc
lahf
mov
aad
ss
ds
jo
mov
adc
mov
shrl
sahf
cmp
aaa
mov
popl
in
fisttpl
aad
pop
stos
adc
cli
insl
or
sub
push
outsb
mov
dec
insb
subl
or
jbe
mov
arpl
shl
xor
test
jl
xor
and
aad
pusha
and
push
pop
test
rcrl
out
popf
mov
lods
inc
sub
mov
hlt
dec
xor
shrd
iret
push
mov
mov
lcall
jno
fmull
mul
lret
adc
hlt
mov
or
in
sbb
mull
mov
jbe
or
cmp
ss
cmp
adc
mov
ror
ret
cmp
mov
or
or
sub
pop
cmpsb
movsl
inc
pop
cmpsl
xor
test
in
mov
mov
dec
das
stos
aam
dec
outsl
outsl
popa
fs
std
dec
sbb
lods
out
in
pop
push
fstpl
jmp
xchg
sbb
loop
dec
mov
clc
jp
loop
jb
cmc
es
lret
out
imul
outsb
dec
jae
adc
xchg
and
into
pop
add
dec
fs
repz
icebp
fs
xchg
xlat
mov
rcrl
scas
jno
in
push
sbb
adc
push
push
push
arpl
rorl
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
and
mov
sbb
in
xor
sbb
and
jle
xchg
or
movsl
sbb
bound
xchg
lret
cmp
sub
int3
push
lret
inc
iret
sbb
pushf
xor
std
rcl
jns
xor
popa
add
dec
int3
jns
cld
js
sarl
lea
iret
push
test
dec
xchg
sub
push
mov
jle
idiv
sbb
lock
sbb
pop
fnstenv
mov
cmp
stos
jb
or
gs
stos
cmpsl
scas
xor
test
xor
pop
fwait
es
xchg
sbb
add
jbe
jno
mov
cmp
in
leave
and
inc
cmpsl
pop
mov
aaa
push
and
fdivrp
js
xor
sbb
mov
adc
pop
sub
icebp
dec
push
iret
mov
pop
push
mov
aas
jmp
addr16
mov
sub
xchg
loope
sbb
push
fcmovu
pop
sbb
or
and
jmp
mov
cwtl
mov
xor
mov
mov
dec
or
pop
stc
pushf
push
push
ljmp
mov
js
std
and
sbb
sbb
xorl
fs
nop
mov
das
jmp
sub
shrl
sbb
push
jmp
or
inc
and
int
arpl
mov
sar
pop
je
scas
adc
sbb
pop
ret
xlat
ret
or
subb
mov
or
sub
stos
leave
dec
test
push
loop
rcrb
aaa
ja
ljmp
sarl
test
adc
dec
dec
and
ret
scas
push
shrl
dec
outsl
cmp
adc
mov
cltd
and
in
pop
mov
faddp
mov
dec
cmpsb
lret
nop
jle
mov
push
or
stos
in
xlat
jo
mov
arpl
xlat
outsb
ret
ret
pop
xor
push
jo
cmp
insb
inc
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
stos
jns
sbb
jns
sbb
push
movsb
sahf
mov
mov
jge
fwait
adc
addr16
test
test
lods
imulb
or
dec
jl
fldt
push
ss
hlt
pop
movsl
ret
iret
scas
popf
cmpsl
ret
dec
mov
adc
cli
mov
sbb
stos
je
mov
enter
mov
jb
pop
mov
or
mov
dec
jge
xchg
rolb
adc
aam
fwait
and
ljmp
mov
inc
mov
das
fsub
je
lds
dec
sbb
sbb
lods
cli
jnp
adc
sub
mov
mov
les
icebp
movsl
subps
int3
hlt
push
jl
or
xchg
sbb
dec
sbb
jae
mov
aas
lcall
push
mov
lret
jae
jp
sub
ret
jle
es
xchg
iret
cmpsb
xor
sbb
enter
lock
int3
fdivrl
sarb
or
test
lcall
inc
lods
fcmovne
jo
push
pop
jmp
stos
or
push
daa
aad
stc
push
dec
push
incb
push
popf
das
sub
push
out
mov
cmp
clc
jbe
xor
hlt
jecxz
shrb
jg
es
lret
jle
fnstenv
fxch
ror
sbb
in
dec
cmpsl
adcb
mov
pop
jecxz
movl
and
aam
jnp
sbb
addr16
push
add
cmp
sbb
push
fsubp
mov
call
je
sbb
xor
jae
idivb
out
insb
lock
shrl
mov
jnp
out
mov
in
sbb
out
inc
cs
hlt
or
ss
es
vxorpd
stos
xor
pop
std
stc
mov
popa
sbbb
mov
mov
outsb
dec
je
lcall
mov
adc
in
mov
mov
jbe
popf
divl
xchg
mov
loope
xchg
lock
enter
shr
pop
inc
or
xor
jno
mov
jp
jae
mov
popf
mov
push
ret
xchg
inc
test
mov
pop
cmpsb
mov
lock
mov
data16
imulb
push
jne
jne
push
jle
mov
aaa
add
cmpsl
mov
xchg
cltd
pop
pushf
sub
call
aam
out
push
pushfw
sbb
push
loope
add
scas
or
dec
push
push
lret
mov
inc
fs
push
fsubr
inc
sub
adc
pusha
cmpsb
clc
pushf
xor
adc
xchg
sbb
cs
ss
fcmove
dec
sub
push
hlt
test
movsb
inc
sbb
cmp
or
stos
jp
lods
insb
es
fldt
cmpsl
fs
imul
fdivl
lds
iret
fbstp
in
and
xchg
movsl
xchg
or
leave
movsl
test
mov
cwtl
pop
jb
nop
mov
cwtl
inc
sbb
or
lret
shlb
cld
push
mov
nop
movl
jmp
into
jne
inc
sbb
pop
clc
push
test
sbb
jns
sbb
negl
mov
rcrl
call
and
push
lcall
bound
loope
pop
pop
jge
pop
or
dec
out
mov
sbb
xor
mov
out
push
insb
test
inc
or
jecxz
mov
mov
jnp
lods
jmp
push
jl
jnp
jb
adc
add
or
outsl
out
mov
addl
add
shl
jge
imul
add
sub
cmc
sbb
fadds
mov
test
sub
rcrb
lcall
flds
cmp
mov
jmp
mov
jle
cmp
mov
testb
push
lods
in
pop
pop
movsb
dec
mov
dec
pop
addr16
sub
mov
mov
mov
in
adc
jmp
cltd
gs
jns
pop
xchg
or
mov
cmp
cmpsl
dec
push
inc
xchg
xchg
mov
sti
jl
pop
out
sub
add
pusha
mov
sahf
mov
ret
sub
mov
rorb
das
push
lock
jge
mov
mov
adc
lahf
push
int3
inc
xor
fwait
mov
push
enter
cld
mov
repz
pop
inc
jae
mov
outsl
pop
adc
xchg
test
sbb
lret
test
out
cld
xchg
out
xor
adc
shrl
fstps
pop
push
or
rcr
cmp
fisubl
sahf
or
mov
stc
cmp
mov
jecxz
sub
add
mov
xchg
outsl
jge
xor
shrl
loop
jle
lods
adc
xor
dec
loop
loope
aaa
push
inc
and
shll
xchg
mov
out
or
adc
aaa
ret
jmp
pop
sbb
xchg
ljmp
lcall
mov
push
pop
aas
sarb
aaa
adc
mov
scas
test
je
cmp
jp
mov
sarb
pop
mov
ret
dec
movsl
movsb
inc
xchg
fisubl
adc
ja
lcall
push
movsb
mov
sub
mov
mov
mov
jl
adc
jecxz
shlw
pusha
js
pop
pop
daa
mov
fisttpll
sub
and
iret
cli
loope
aaa
xor
lods
mov
or
addb
cli
scas
fcmovnbe
jns
push
dec
test
pop
jns
fs
test
dec
and
popa
fs
cmp
int
dec
jecxz
incb
cmp
scas
daa
sbb
mov
push
mov
sub
mov
shlb
and
test
or
push
pop
repnz
ljmp
jns
incb
fld
xor
mov
in
out
addr16
inc
int3
and
pop
mov
push
push
pop
fwait
adcb
sbb
sbb
iret
jns
mov
sub
push
add
mov
ljmp
push
mov
cmc
mov
repnz
test
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
sbb
jo
outsl
into
in
cmpsb
push
adc
sub
jo
dec
add
nop
loopne
and
push
push
imull
out
xor
push
into
dec
lods
lahf
gs
inc
sbb
fildll
and
xor
rcl
mov
dec
cld
test
jb
mov
add
dec
xchg
xchg
dec
mov
lods
fcoms
repz
ret
negl
je
or
fmull
jo
mov
push
cmp
pop
jns
imul
aad
adc
jae
lods
xchg
imul
cli
push
aaa
enter
mov
fwait
outsb
pop
jecxz
mov
and
pop
dec
test
out
xchg
loope
outsl
pop
lcall
push
mov
fimuls
push
sub
dec
das
in
cmp
adc
xor
jp
addr16
ljmp
lds
lea
es
fwait
dec
pop
in
shll
lock
test
push
jecxz
pop
sbb
popf
in
stc
cmp
fldcw
testb
or
faddl
frstor
jmp
rorb
lods
adc
or
jmp
hlt
movsb
add
lcall
imul
mov
outsb
or
inc
mov
imul
cli
shlb
lock
push
repz
test
add
add
jae
insb
jnp
subl
bswap
push
pop
int
dec
jmp
ljmp
fldt
ret
jns
push
and
popf
aam
jp
pop
pop
pop
push
outsl
inc
mov
pop
data16
cmpsl
in
inc
leave
jge
dec
out
daa
nop
jbe
xchg
out
into
mov
sub
cmp
jmp
mov
dec
sbb
clc
sbb
pop
icebp
xchg
pusha
ss
pop
adc
fmulp
js
ja
pop
imul
orl
outsl
imul
xor
int
cmpsl
mov
scas
dec
icebp
lahf
or
mov
lcall
inc
push
inc
movsl
pop
inc
cmp
or
mov
int3
jmp
jp
inc
and
jge
cmp
or
pushf
lods
gs
insl
adc
dec
jb
div
and
leave
cwtl
pop
dec
out
mov
icebp
and
sbb
mov
lahf
sub
and
fidivs
fcmovbe
fmuls
and
pop
movsl
and
ret
and
push
gs
jne
cmp
sbbl
pop
or
mov
xchg
dec
mov
insb
bound
push
loopne
data16
pop
push
xchg
or
lcall
fistpll
in
call
sbb
ficoml
jne
xchg
sub
jle
or
adc
in
leave
ret
mov
or
das
pusha
sub
in
jmp
xor
in
mov
add
xchg
xor
jge
xlat
cmc
sbbb
add
cmp
fs
es
inc
into
daa
mov
xor
cmc
rcll
dec
loope
les
xchg
inc
pop
xchg
adcb
push
mov
rclb
mov
les
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
fistps
loopne
push
inc
xchg
imul
xor
sbb
push
scas
push
fwait
jl
sub
push
fsubs
push
or
or
aad
sub
adc
rclb
mov
mov
mov
lret
inc
jle
inc
sub
xor
movsl
jmp
jno
mov
daa
leave
add
rol
icebp
outsb
sub
or
fimuls
xchg
push
rorl
jno
jo
inc
jo
mov
dec
stos
iret
sbb
shrl
ret
cltd
fisttps
mov
ljmp
jge
mov
mov
mov
mov
negl
test
addr16
fisubrl
notl
cmc
cmp
push
adc
repz
and
hlt
add
mov
mov
mov
movsl
movsb
mov
dec
add
push
lea
or
sbb
or
scas
shr
xor
pop
test
and
pxor
sub
aaa
add
inc
cmp
inc
mov
icebp
mov
dec
insb
test
jge
mov
outsb
scas
iret
out
cmp
scas
add
pop
mov
sbb
push
pusha
shrb
or
sbb
ret
xor
mov
add
sti
bound
divl
adc
xor
cmp
and
and
aad
inc
dec
dec
mov
adc
out
or
sbb
sub
movsb
mov
shll
mov
jge
or
insl
cmp
push
xor
test
enter
dec
dec
add
mov
inc
pushf
adcb
call
in
cmpl
imul
rcrb
add
sti
jbe
mov
push
push
test
into
neg
gs
inc
adc
cltd
hlt
ret
hlt
jle
test
lock
mov
int
cmp
fmull
mov
es
arpl
dec
loope
call
jecxz
xchg
andl
pop
outsb
pop
jae
iret
dec
ds
mov
int3
xor
imul
lret
dec
push
jp
inc
fisttpll
mov
int3
je
lret
dec
jg
fmuls
dec
mov
repnz
jmp
xor
mov
fxch
imul
popa
sbb
ret
adcb
mov
cs
arpl
mov
and
mov
fildll
adc
mov
lcall
testl
in
rcrl
loopne
add
dec
mov
mov
enter
or
push
in
clc
xor
sbbb
jmp
pushf
mov
int3
push
repz
fchs
scas
rorl
ja
push
sbb
sub
mov
push
xchg
cmpsl
or
clc
sbb
add
orl
call
sub
cltd
or
lcall
adc
mov
inc
xor
stc
int
mov
test
xchg
sub
dec
add
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
hlt
gs
jns
sbb
shlb
repz
mov
xchg
add
cltd
into
sub
pusha
test
es
push
shlb
xchg
daa
jl
xchg
imul
inc
push
movsl
dec
testb
sti
pop
std
dec
sbb
leave
out
cmc
mov
xor
pop
mov
cmc
dec
cwtl
cmpsl
jb
leave
dec
jno
sub
sub
addr16
pop
add
je
leave
and
or
hlt
fdivs
es
ljmp
je
lods
cld
test
mov
dec
mov
mov
cwtl
repnz
int
mov
lock
es
pop
fmuls
dec
or
xor
push
pusha
sahf
ljmp
rolb
adc
push
adc
lahf
sub
mov
or
xchg
lahf
jp
xchg
cmpsb
xlat
sbb
lret
jmp
inc
sbb
dec
stos
fcmovu
mov
dec
mov
mov
incl
arpl
sub
fcmovnu
xchg
imul
add
xchg
je
jb
pop
sub
ja
roll
adc
jg
sub
insb
stos
loopne
mov
xor
adc
xchg
inc
inc
sarb
xchg
push
cmpsl
mov
shll
aam
jecxz
push
pop
lahf
aas
repz
and
jge
pop
test
rcll
pop
in
sub
clc
inc
aaa
or
fwait
jle
cmpsl
out
mov
stos
push
push
cmp
mov
jmp
mov
sub
adc
push
scas
mov
sbb
dec
dec
mov
sub
cmp
flds
cmp
inc
sub
push
ss
int
adc
test
shll
jae
clc
out
test
ja
inc
mov
push
mov
lret
cmp
hlt
pop
sbb
pop
aad
jl
jge
aam
lahf
dec
dec
xor
cmp
fs
ficompl
and
arpl
fbld
jne
add
xor
adc
outsb
jecxz
cmc
shl
lret
imul
cmc
std
cmp
adc
sbb
push
test
rcr
dec
unpcklps
fsub
sti
pop
jno
cmpsb
or
repz
inc
aas
dec
shlb
fsubl
mov
je
cltd
movsb
aaa
push
iret
scas
in
scas
int3
xor
loop
mov
jae
inc
pop
fwait
cs
lcall
arpl
movsb
mov
xchg
mov
adc
dec
in
add
mov
shrb
out
imul
inc
hlt
push
fsubl
daa
cli
push
inc
jno
sbb
mov
or
out
mov
movsl
cmp
mov
xchg
lods
lea
rcll
nop
dec
xchg
insb
add
in
add
adc
or
cmp
or
mov
mov
das
leave
jo
mov
jg
inc
pop
mov
int3
testl
je
int3
je
mov
call
ja
stos
fldt
jmp
pusha
mov
mov
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
fidivs
jo
data16
jns
sbb
pushw
repz
in
lods
test
jbe
stos
push
test
pushf
outsb
shll
cld
mov
mov
mov
xchg
int3
jle
andl
jp
inc
ret
and
pushf
mov
shlb
push
xlat
mul
pop
sub
mov
cmp
jne
out
frstor
xchg
add
pusha
push
xchg
jecxz
dec
jmp
cltd
in
cmp
inc
jnp
and
ret
mov
leave
lcall
add
xrelease
sbb
add
sub
mov
dec
stc
inc
das
xor
push
ja
ficoms
rcl
out
fwait
sub
idivl
sbb
jbe
adc
out
lret
adc
mov
cmc
out
push
inc
xchg
xor
adc
leave
scas
popa
imul
jno
in
lods
and
mov
sti
pop
cmpsl
sbb
xorl
sbb
lea
leave
or
lock
addps
aad
repnz
dec
shl
cmp
out
dec
enter
inc
js
mov
pop
out
adc
lds
jge
adc
cmp
rclb
mov
push
and
push
sbb
test
sbb
adcl
ret
rclb
jns
push
inc
or
les
aas
movsl
lods
push
or
mov
shlb
ds
or
adc
or
mov
push
inc
cmc
mul
notl
mov
aam
push
inc
add
movsl
dec
out
stos
popw
xchg
stos
cmp
xchg
mov
jne
js
stos
xchg
push
repz
mov
xor
jne
sbb
lret
lods
push
sub
mov
pop
jp
jg
ret
icebp
out
jmp
in
lret
call
das
ret
xchg
cmpsb
clc
cmp
bnd
repnz
arpl
lods
les
int3
fists
pop
dec
scas
lret
pop
stc
mov
scas
mov
rclb
jmp
xchg
mov
mov
cltd
dec
add
dec
mov
mov
fisttpll
inc
jne
es
sub
add
insb
negb
jmp
or
xchg
test
in
push
xchg
dec
xor
roll
xchg
int
dec
ss
sbb
xchg
inc
nop
jecxz
adc
cld
daa
fwait
das
mov
cmpsb
xlat
pop
testl
sbb
xchg
call
shlb
xor
inc
aam
mov
cmp
push
shll
add
or
cwtl
or
inc
mulps
pop
mov
cmc
repnz
lea
fwait
cmp
jge
xchg
out
xchg
mov
push
loop
inc
mov
xchg
or
scas
xchg
test
dec
sub
loop
sti
loopne
inc
add
pop
push
mov
jge
popl
mov
dec
mov
sub
lods
inc
xor
cmc
mov
int3
lds
loope
add
pushf
push
fsubrl
cmp
xchg
out
call
outsb
inc
jae
mov
mov
add
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
push
popf
jo
pop
sbb
jns
sbb
xlat
add
xor
dec
cmp
jge
dec
fcmovb
mov
cmp
push
adc
push
das
jb
mov
dec
inc
cmpsl
cli
into
subb
loop
mov
ficoml
ja
ss
pop
cs
bound
cld
dec
cmp
js
cld
lret
jl
dec
and
loopne
mov
adc
ljmp
xchg
dec
inc
aas
out
xchg
lcall
cwtl
mov
int3
mov
lds
xlat
or
and
push
gs
jmp
aas
push
inc
aad
sbb
daa
cmp
or
xchg
sub
lods
sub
pop
mov
add
cwtl
mov
popf
dec
adc
mov
mov
sbb
jbe
xchg
jns
ljmp
cmp
jnp
adc
cmp
rorb
scas
push
jbe
fistl
les
xor
pop
sbbb
adc
out
push
sub
or
adc
out
fstp
cmp
sar
mov
dec
lock
mov
std
sahf
mov
popf
mov
jae
das
fisttpll
sbb
push
je
fcompl
jnp
mov
cmp
aad
jle
adc
pop
mov
mov
push
movsl
int
xor
rorb
lods
cmpsb
negl
cmp
insb
mov
xchg
jmp
popa
stc
jb
pop
rcll
sbbb
xlat
rcrl
cmp
xchg
mov
dec
jg
xchg
pushf
mov
fwait
or
xchg
add
stos
or
mov
loope
sbb
inc
cmpsl
mov
fsubs
ljmp
adc
hlt
cmp
cmp
and
push
rclb
inc
jecxz
xor
push
mov
mov
xor
ja
sub
ljmp
scas
xor
std
mov
fwait
addr16
gs
or
test
dec
inc
mov
mov
jl
out
mov
and
dec
inc
mov
cmp
push
sahf
cld
xchg
push
test
loopne
jecxz
jne
aam
movsl
mov
mov
imul
es
andl
lret
test
in
add
mov
leave
call
cmpb
or
pop
loop
sahf
mov
adcb
or
sub
mov
jnp
cli
cmp
addl
cmp
adc
or
sbb
xchg
mov
movl
test
cmpsb
mov
adc
fadds
ret
jg
xchg
fnsave
push
pop
adc
sbb
mov
incb
xchg
test
jmp
sub
jno
cmpsl
sbb
xor
jae
xchg
mov
shll
fwait
in
std
leave
icebp
jmp
iret
popf
xor
xchg
scas
mov
mov
test
mov
pushf
pop
sbb
pop
rcll
jno
and
mov
in
arpl
mov
dec
cwtl
test
mov
push
sub
push
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
lods
addr16
je
sbb
rorb
movb
xchg
outsl
stos
out
jecxz
jp
fistpll
jmp
mov
into
aam
push
insb
pop
repz
shlb
cmp
out
fadds
xchg
add
jno
jg
push
scas
sub
or
pop
xchg
outsl
movsb
jl
mov
mov
adc
stos
cmp
mov
inc
cs
aas
insb
mov
adcl
mov
cmp
pop
jg
push
scas
jno
mov
sbb
jmp
xchg
sbb
stc
xor
push
jle
jg
add
xlat
je
lret
mov
outsb
sahf
loope
in
add
jp
push
push
pusha
std
fistps
xchg
outsb
loop
out
mov
inc
cltd
fmuls
sbb
enter
rorl
mov
lock
cmpsl
jne
fidivs
testb
mov
mov
ljmp
loopne
adc
mov
jb
cmp
mov
test
lahf
sub
push
lods
lret
js
popf
ret
push
mov
imul
nop
jge
cwtl
adc
jno
int3
shl
xchg
cmp
leave
into
test
xchg
loope
fs
sbb
call
hlt
cld
and
arpl
cli
adc
test
pop
hlt
xor
roll
mov
and
lds
mov
xchg
ds
xor
popa
jo
xchg
lret
pop
scas
and
jmp
sbb
lret
jb
sbb
jmp
popa
sub
jae
sub
lods
mov
int3
stc
dec
dec
mov
cli
fildll
test
outsb
fbld
and
mov
jo
test
cmp
and
fwait
sub
addr16
out
addr16
xlat
push
mov
mov
push
fisttps
adc
cmp
popf
fwait
cmp
data16
push
call
mov
pop
push
push
mov
je
ds
negb
xor
xor
adc
out
lahf
imul
xchg
pop
iret
cltd
or
pop
adc
dec
sub
inc
dec
xchg
fadds
js
add
sbb
sti
loopne
outsl
sbb
insl
and
pop
dec
and
sbb
mov
ret
dec
inc
cwtl
xchg
and
rcr
sbb
orl
add
pushf
pop
test
push
lock
and
jbe
xchg
xchg
jmp
insb
push
pushf
sub
jbe
dec
add
addr16
int3
mov
inc
sbb
ffreep
pop
xor
inc
mov
hlt
pop
add
mov
mov
xor
aaa
fwait
sbb
es
fimull
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
dec
jle
push
sbb
and
sbb
fdivp
mov
mov
cmp
push
dec
and
dec
loope
cs
fsubl
insl
or
jo
dec
imul
pop
test
imul
inc
movsl
push
int
jle
subl
or
jae
ljmp
mov
push
fidivrs
scas
sbb
dec
pop
mov
clc
xchg
in
cmp
movsb
arpl
jb
enter
cmpsl
push
jl
or
add
or
pusha
sahf
loope
popa
or
jo
aaa
sbb
mov
ds
ss
push
aam
inc
cmp
lahf
out
shrl
stc
xchg
in
inc
push
aam
stc
add
adc
cmp
adc
pop
xor
add
insb
push
bound
mov
sahf
sub
loope
pusha
js
add
test
scas
jnp
adc
loopne
rol
mov
add
stc
jbe
dec
push
push
xor
pop
jg
and
insb
add
out
push
iret
lods
or
outsl
jl
mov
das
adc
push
jae
mov
push
add
test
mov
pop
or
arpl
pop
mov
pushf
lea
aaa
xor
and
stc
fimuls
xchg
int
faddl
das
int3
jle
or
mov
mov
sbb
mov
cmpsb
cwtl
stos
into
in
aam
and
push
and
cmp
jmp
cltd
sti
lcall
sbb
mov
add
loop
nop
lods
mov
mov
dec
sbb
test
xor
movsb
or
scas
mov
xchg
pop
lock
lock
decl
insl
les
test
ds
mov
repnz
enter
jne
xor
push
dec
sub
jge
sahf
push
inc
add
or
push
lahf
mov
or
mov
push
fdivl
pop
add
jle
add
jno
mov
mov
xor
lret
dec
fstpt
cmp
jge
mov
xchg
ja
cmpsb
rcr
call
fwait
fs
xorb
lods
xchg
push
lods
repnz
pop
icebp
cmpsb
mov
cld
jo
sub
add
dec
push
mov
sbbb
and
add
adc
cmc
subl
jle
sub
adc
cmp
adc
pusha
xchg
mov
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
dec
xor
dec
sbb
scas
adc
sbb
xchg
push
movsb
push
xor
ret
test
lds
loopne
lods
pop
push
andb
add
jg
jb
ljmp
jmp
and
arpl
jl
cmp
mov
xchg
sub
stos
lds
sub
mov
lret
mov
sti
mov
aas
out
lret
pop
push
daa
icebp
rcrl
sbb
pop
cmp
or
mov
imulb
or
mov
push
pop
cmp
aas
cmpsb
mov
dec
in
xchg
cmpl
push
and
imul
sahf
lods
fs
lea
loope
cs
pop
popa
incl
jg
inc
inc
push
cmp
add
repz
les
push
movsb
sbb
hlt
add
inc
push
mov
lcall
ret
or
mov
fisttps
fstl
pop
cmp
nop
fbld
dec
sti
pop
add
int3
sbb
lcall
mov
sbb
push
ret
sti
ja
loopne
dec
andb
or
in
lahf
repnz
scas
pop
mov
mov
dec
pop
add
pushf
mov
movsl
fnstenv
scas
inc
fisttps
or
imul
cmp
dec
aaa
int3
sub
aad
jbe
jne
scas
xor
lcall
inc
pop
leave
andb
cmp
and
sti
fstl
jle
jmp
arpl
mov
mov
inc
shll
or
mov
xchg
jmp
divl
jnp
add
adc
sub
xchg
adc
push
mov
iret
mov
jp
and
and
pop
sbb
aam
repz
add
sbb
and
into
and
sub
dec
bound
mov
adc
fisubrs
jae
add
mov
rorl
mov
jge
pop
xchg
repz
or
pop
mov
mov
stc
and
push
sbb
sub
mov
or
sub
push
loope
xor
lock
or
mov
xor
cmc
dec
in
jmp
ret
mov
inc
xor
jmp
xor
and
fmul
mov
ficoms
stc
or
mov
xchg
and
out
int3
inc
sahf
fstpl
push
xchg
inc
xor
roll
jg
aaa
insl
pop
imul
cli
mov
dec
bound
lgs
shl
in
loope
push
and
mov
movsb
cmpsl
fstps
mov
mov
cmp
out
stos
insl
in
rcrb
test
arpl
sub
in
aaa
mov
cwtl
pop
pop
xchg
dec
stos
out
xorl
dec
ret
test
loopne
mov
je
mov
xor
fsubrs
push
or
aas
and
es
ja
pop
jo
fisttps
pop
stc
scas
sarl
push
cltd
jno
and
popf
jne
out
stos
test
sahf
movsb
cmp
pop
push
rorb
add
and
pop
and
or
test
add
sub
movsb
xchg
aad
jp
fbld
cmp
cmp
jne
jecxz
and
jp
inc
gs
jae
jmp
enter
sub
xchg
cwtl
dec
xor
repnz
clc
sbb
xchg
inc
xor
and
aam
lret
adc
popa
into
add
insb
rcl
jmp
add
dec
insb
dec
pop
cmc
mov
push
sub
repnz
decl
dec
and
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
addr16
adc
sbb
sub
cmpsb
in
and
or
repz
les
rcll
ss
push
outsb
add
rcrl
xlat
pop
loopne
mull
stc
mov
mov
xor
test
push
mov
mov
lea
stos
sti
mov
push
mov
es
iret
mov
push
pushl
sub
pop
dec
push
and
and
sub
stos
add
cmpsl
cmp
pop
jmp
sti
cmp
ljmp
imul
jp
cmp
mov
push
pop
mov
inc
mov
mov
mov
pop
adc
loope
adc
push
pop
ret
dec
cmp
and
mov
sbb
cli
mov
pop
push
fmul
popa
idivl
sub
scas
pop
imul
stos
sub
push
ficoml
dec
lds
add
cli
test
pop
adc
mov
pop
xor
adc
bound
push
iret
xchg
inc
xchg
jle
pop
cs
lret
scas
sbb
outsl
sar
ret
stos
popf
dec
xchg
data16
jg
xorb
test
xor
popf
in
bound
rcrl
sar
jae
ret
stos
je
mov
jmp
push
xchg
adc
inc
js
movsl
push
subl
mov
cmpl
int
xor
mov
lret
mov
lret
sbb
push
orb
cmp
push
sub
setne
icebp
sub
dec
dec
sub
scas
adc
arpl
mov
push
jb
out
sub
vmread
sbb
clc
cmpsb
dec
enter
pop
add
or
les
add
fidivs
add
pop
jno
push
dec
jae
mov
shl
adc
pop
cmpb
iret
jle
add
lret
jns
ficoms
imul
jge
inc
shrl
push
inc
pop
in
imul
out
and
dec
rol
cli
dec
andb
loop
inc
sbb
nop
cwtl
jg
pop
push
push
jle
roll
lahf
xlat
pop
jnp
dec
pop
jle
inc
xchg
popa
mov
or
jnp
mov
adc
mov
leave
rclb
lea
repz
insb
pushf
dec
sti
arpl
pop
sub
sahf
rcrl
icebp
iret
adc
bnd
adc
mov
pusha
inc
call
sub
sbb
shrb
fs
inc
movsb
dec
jp
fbld
mov
rcl
and
scas
rep
cli
insl
mov
pop
or
mov
lods
aad
or
xchg
lret
lds
adc
mov
lods
lret
mov
xchg
ss
insb
jecxz
pop
sub
clc
jne
push
outsl
imul
dec
and
cld
xor
out
stc
int3
mov
lcall
add
popa
add
sbb
push
aad
cs
popa
mov
movsl
jle
mov
das
push
sbb
mov
cwtl
es
inc
jbe
add
sub
add
rorl
cwtl
repnz
push
mov
test
adc
test
cmp
lret
testb
out
mov
cld
out
jle
or
mov
dec
loopne
pop
push
inc
dec
jb
push
jmp
je
mov
push
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
stos
or
sbb
notb
sbb
xchg
shrl
mov
and
rolb
ljmp
push
ficomps
dec
fmull
sbb
push
test
xor
out
jae
fsubp
dec
repz
in
mov
imul
movsb
negb
push
dec
xor
mov
and
jge
repz
js
std
pop
add
and
cmp
in
and
push
sub
xchg
xor
aaa
shll
sbb
mov
push
out
adc
cmp
fisubl
cmp
mov
mov
adc
push
loop
or
lock
repz
popa
mov
sbb
dec
dec
pop
mov
mov
pop
adc
xchg
shll
out
mov
adc
lcall
pop
enter
outsl
shrl
enter
sbbb
mov
mov
xchg
push
ret
loopne
push
in
dec
stc
stos
push
sub
ss
sub
call
push
rorb
mov
mov
dec
xchg
mov
icebp
xchg
sbb
mov
xchg
jmp
popf
insb
push
cmp
mulb
out
stc
dec
loopne
dec
adc
es
rcl
push
daa
dec
pop
icebp
pop
scas
hlt
pop
adc
dec
loopne
ja
movsl
push
mov
sub
test
in
das
or
nop
cltd
clc
sbb
add
inc
fstpl
jnp
aam
test
aam
mov
cmp
stos
sahf
pop
jne
scas
mov
mov
je
cli
push
cmp
stc
mov
xchg
push
jns
jg
lcall
xchg
test
shlb
ljmp
and
and
je
push
outsl
add
and
ja
enter
js
daa
inc
repnz
popf
fcoms
lods
outsb
js
add
xchg
lret
lods
jne
loop
dec
leave
and
push
or
lea
push
pop
and
jecxz
inc
loop
xchg
insl
mov
out
outsl
dec
sub
mov
add
and
addl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
jne
daa
stos
xchg
sbb
notb
sbb
push
daa
enter
pop
push
dec
sbb
xchg
in
jecxz
jb
lret
inc
cmp
and
icebp
and
push
stos
cmp
xor
mov
mov
int
adc
push
and
shl
stos
jnp
xchg
xor
fistpl
and
cmp
iret
adc
sbb
mov
mov
mov
std
aad
adc
aad
xor
pop
out
out
xchg
sti
loope
stos
testb
hlt
imull
mov
mov
push
mov
aas
add
mov
cmp
lods
pop
dec
pop
mov
pop
sbb
or
ljmp
aad
and
or
xor
mov
pop
movb
movsb
call
adc
popa
adc
xor
nop
sub
ja
int3
sbb
inc
jbe
mov
dec
cmp
pop
add
popf
aad
xor
fistl
xchg
pop
cmp
aas
dec
decl
and
mov
jp
mov
rcll
push
adc
fcmovnbe
cld
mov
push
lock
fcoms
or
or
in
das
test
ljmp
push
pusha
dec
inc
imul
leave
inc
inc
sbb
adc
into
loope
popa
out
xchg
rclb
dec
cmp
cmc
push
jae
into
mov
sahf
call
hlt
mov
push
and
movsl
mov
stos
push
aaa
xchg
or
add
repnz
cmp
xchg
xlat
mov
dec
insl
add
jnp
pop
mov
shlb
mov
jno
ret
aaa
sti
pop
sub
call
xor
pushf
fstps
mov
lret
cmpsl
jp
inc
add
cmp
inc
bound
xor
mov
mov
xor
jge
rcrb
lods
or
adc
popa
scas
call
ss
dec
iret
mov
lea
inc
mov
int3
dec
inc
decl
ja
test
out
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
test
sbb
notb
sbb
cmp
daa
xor
dec
aas
push
loopne
cmpsl
out
mov
xor
mulb
fwait
fwait
jecxz
clc
idivl
pop
inc
int3
add
aaa
push
neg
cmp
mov
xor
aaa
sti
sbb
ja
fildl
xchg
xchg
push
inc
imul
lcall
in
pop
adc
sbb
lods
jl
out
aas
lds
in
aam
mov
or
and
pop
jo
out
shlb
push
lods
les
insb
mov
fstl
ja
jns
mov
push
test
pop
jo
in
shll
mov
xchg
inc
or
mov
cmp
sbb
cmpsl
xchg
fistpl
data16
sbb
je
lcall
fisubrl
data16
sbbb
inc
sbb
sub
stos
inc
cmpsb
jmp
insb
inc
xor
sub
cmp
test
mov
je
push
jbe
ret
ja
jne
mov
inc
push
inc
mov
cmp
sbbl
shlb
mov
mov
lea
outsb
rclb
mov
stos
xchg
or
aaa
mov
add
xchg
daa
idivl
jmp
sub
xchg
notl
push
mov
sbb
sub
push
jmp
ror
movsl
movl
ja
adc
xchg
cmpsb
jg
insb
das
test
lret
cmpsb
jae
sbb
pop
push
sbb
pop
push
pop
test
inc
push
adc
lea
loope
out
jg
cmp
push
mov
xchg
nop
in
mov
xor
jno
mov
xchg
loopne
mov
push
or
std
aas
rolb
lock
dec
lahf
dec
jno
clc
aad
inc
setge
dec
aam
call
cld
rcrl
sbbl
shlb
fildll
shlb
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
insb
pop
icebp
push
ljmp
pop
dec
fdivl
mov
push
dec
imul
insb
xchg
repz
xor
push
repnz
jbe
and
cmc
mov
data16
int
adc
fimuls
fsub
dec
je
add
dec
sbb
mov
addr16
xlat
loopne
cmpsl
les
add
pop
rcr
mov
jle
inc
adc
xor
repz
mov
or
jbe
jmp
mov
pop
and
jmp
stos
addb
push
sbb
push
mov
scas
adc
or
imul
dec
fbstp
daa
imul
mov
fwait
jp
push
std
in
mov
icebp
adc
mov
pop
jne
sbb
dec
cmp
xchg
faddp
stc
mov
sub
popa
xor
nop
clc
jno
cltd
sbb
pushw
sbb
out
jo
popf
mov
jnp
sub
sti
ja
cmp
pop
jbe
data16
movl
jmp
jno
mov
loope
cmp
daa
inc
inc
mov
inc
fdiv
adc
icebp
cmp
pop
rorb
sbb
int
sbb
xorl
test
push
sbb
daa
and
xor
push
aas
adc
pop
int
mov
add
adc
push
mov
movsb
push
add
pop
cmc
test
sarl
dec
mov
push
fisubs
ficomps
or
cld
iret
and
cmc
fisubrs
sbb
dec
pop
dec
ret
popa
mov
divb
push
mov
sbb
jns
mov
jbe
test
mov
rcr
outsl
ret
popa
into
movsb
movsb
and
popf
or
fdivrl
cmpsb
cmp
ljmp
pop
mov
pop
dec
push
push
xchg
cmp
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
push
orb
mov
pushf
mov
mov
and
mov
sbb
cwtl
and
rolb
mov
xor
decb
pop
arpl
fst
jle
push
jns
mov
dec
or
mov
iret
or
adcl
stc
xlat
mov
mov
movsb
enter
mov
pop
sbb
dec
push
cmp
mov
pusha
cmpsb
fisttpl
repz
pop
movsb
mov
mov
xchg
lea
inc
or
xorb
jbe
xor
add
dec
mov
pop
adc
ss
push
dec
jge
fs
pop
ss
fiaddl
cmp
andb
fwait
push
into
jo
into
xchg
call
adc
out
les
mov
repnz
jmp
sahf
je
in
cwtl
out
iret
mov
adc
ret
jbe
fnstenv
sub
fisubrl
int3
add
jmp
push
movsb
or
psubsw
test
mov
fcomps
cmp
xchg
ret
js
dec
jle
fiadds
inc
cli
lret
pop
mov
icebp
aad
push
mov
pop
test
dec
sbb
inc
aaa
push
dec
push
lock
jb
lret
dec
mov
ret
inc
mov
fs
mov
nop
jle
out
rcr
push
dec
dec
cmp
mov
lods
ja
jmp
rol
daa
lock
dec
imul
or
push
and
mov
and
pop
outsb
sub
adc
inc
and
sub
sahf
ds
cmp
les
mov
bnd
out
lret
stos
push
sbb
xchg
jbe
fwait
test
mov
cli
int
out
mov
sub
dec
rolb
movsl
xchg
insb
inc
lret
les
mov
lds
jle
push
clc
xor
push
dec
xchg
push
imul
cmpsl
xor
inc
shlb
inc
push
mov
mov
jmp
aaa
and
dec
mov
push
out
mov
sub
sbb
adc
sbb
jmp
jmp
call
push
and
sbb
cmc
jl
loope
adc
repnz
std
roll
sarl
jg
mov
outsb
aad
ja
es
mov
mov
std
xchg
outsl
js
push
push
dec
inc
je
ja
ret
or
xchg
cs
dec
insb
out
fwait
mov
cmp
pop
inc
push
push
sti
xor
jnp
cli
add
les
je
lahf
pop
pop
into
rcr
gs
mov
addr16
sub
pop
mov
insl
dec
sub
pop
xchg
dec
dec
and
sub
mov
std
gs
dec
mov
and
and
mov
jg
sub
xchg
out
stos
xchg
mov
rcll
cmpl
test
adc
jno
jp
adc
cld
dec
and
xor
lret
sahf
lahf
bnd
jo
out
xchg
sub
jle
movsl
arpl
das
sbb
jno
scas
aaa
push
push
or
fisttpll
fisttpl
inc
pushf
cmp
mov
lock
push
mull
out
dec
movsl
gs
cli
and
cmp
add
in
addb
add
pop
insl
cmp
ja
push
or
fisubrl
mov
aad
inc
rcrb
adc
movb
adc
xor
shl
gs
add
and
xor
mov
dec
cmpl
cmp
movsl
bound
movsb
aas
vmread
xlat
push
or
push
mov
scas
insl
shl
out
js
loop
inc
and
add
das
and
repz
dec
enter
aam
sti
cmpsl
dec
pop
jno
sbb
or
pop
xchg
cmc
and
adc
lahf
stos
rclb
inc
xchg
push
out
outsb
inc
cmc
xchg
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
pushf
cli
sub
mov
incb
jg
dec
pop
sub
mov
cmp
aam
cmp
fstps
add
jno
loope
push
das
inc
mov
nop
loopne
je
aas
int
ret
jl
ja
jecxz
andb
imul
addb
or
loop
sbbb
addb
sbb
xchg
jb
in
dec
mov
inc
xchg
out
xor
mov
cmc
xlat
in
jl
cmpsb
sub
mov
cld
dec
and
mov
mov
nop
test
cmp
mov
mov
push
adc
movsl
or
sbb
cmpsb
pusha
sub
add
iret
or
mov
movsb
and
lds
mov
inc
fisttpl
hlt
jmp
ja
dec
push
xchg
mov
cltd
dec
rcrb
and
xor
xor
inc
lods
sbb
in
xor
pop
sbb
lret
int
xorb
lods
faddp
xor
icebp
gs
jbe
negl
mov
dec
and
pushf
fs
cmp
jb
cmpsb
daa
fcompp
iret
aam
ret
push
popa
sbb
loop
pop
xor
ror
jle
jnp
pop
and
mov
xchg
or
nop
lock
push
adc
push
test
loop
mov
pop
and
test
add
sbb
dec
sti
push
addr16
sbb
cs
sbb
xchg
and
loop
mov
dec
and
jno
jmp
jno
pop
mov
repnz
nop
repz
jmp
pop
int
pop
hlt
add
mov
jmp
cmc
pop
add
xorl
mov
xor
cmp
fisttpl
dec
mov
xchg
cmpsb
jns
xchg
cmc
loope
mov
mov
dec
cmp
jmp
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
movb
int
fmuls
sbbb
jb
inc
mov
xchg
into
ficoms
aad
fcomp
leave
cmpsb
out
and
xor
in
adc
cs
and
popa
cwtl
dec
sub
inc
sbb
test
loop
jno
xchg
xor
adc
hlt
shrl
sbb
add
cld
or
iret
inc
sti
cmp
sbb
mov
int
stos
jbe
mov
adc
test
sbb
mov
sub
mov
fldt
pop
arpl
push
jle
mov
push
sbb
fistps
dec
dec
addl
pop
adc
jmp
out
cli
push
add
fdivrs
dec
mov
adc
sub
cs
shr
mov
cmova
push
lods
insl
fucomp
outsb
popf
cmp
xor
mov
aaa
sti
out
adc
push
cltd
cmpsl
in
add
sbb
inc
mov
lods
push
int
imul
call
add
pop
es
push
pusha
les
call
in
mov
es
in
fwait
mov
push
cmpsb
mov
push
fnstsw
xchg
loope
pop
fwait
stos
adc
xor
sbb
jno
mov
loopne
loope
push
or
mov
dec
sub
in
sbb
sti
movsb
std
lock
in
or
dec
pop
mov
jl
jmp
shll
jne
or
inc
xor
xchg
xchg
xchg
mov
arpl
xor
sbb
adc
and
adc
jmp
out
addr16
setge
call
jbe
xchg
pop
inc
dec
or
jmp
cmpsb
icebp
push
jg
sub
mov
mov
dec
dec
mov
lret
jno
xchg
divb
mov
sbb
shlb
push
pop
mov
mov
lret
fadd
cli
mov
and
out
rol
xor
daa
adc
notb
or
cmp
jl
ret
call
mov
adcl
insb
xor
shrb
push
dec
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
insl
stos
mov
sbb
sbb
sbb
or
xchg
jno
add
mov
lret
add
mov
mov
frstor
or
pop
dec
jp
xchg
or
or
push
clc
cmp
sub
xchg
sub
push
adc
iret
push
lods
movsl
stos
and
cltd
bound
movsb
aad
ss
cmp
mov
dec
push
pop
mov
addl
insb
push
pop
dec
push
std
xor
xor
insb
outsb
inc
mov
add
insb
xchg
repz
adc
lock
jmp
mov
xor
int
mov
jne
cmp
sub
arpl
push
xor
imul
cwtl
pop
icebp
mov
push
push
std
dec
sbb
and
jnp
add
sub
fwait
xor
or
outsl
xor
fistpl
je
rol
dec
xor
jle
fcmovnu
xchg
inc
jne
add
sub
clc
push
std
cmp
shrb
sbb
pop
mov
roll
xchg
and
sub
pop
call
test
mov
add
cmp
rcr
inc
pop
negb
jl
lret
les
adc
mov
add
adc
push
fucom
xor
pop
ret
scas
xchg
test
xchg
aas
cmp
lahf
sub
lret
jp
mov
aad
push
pop
sub
xchg
sub
mov
mov
scas
cwtl
addl
pop
push
xchg
pop
outsl
data16
or
mov
sub
inc
pop
sub
dec
iret
sub
adc
out
jbe
xor
or
pop
xchg
out
xor
push
jno
mov
jne
daa
cmp
mov
ret
sbb
idivb
lods
pop
gs
sbb
pop
cmp
jp
and
ss
pop
stos
andl
sub
xor
mov
xor
inc
xchg
mov
imul
gs
mov
pushf
sub
sbb
push
out
test
push
adc
sbb
fcoms
out
sbb
mov
push
int
sbb
push
sbb
jg
test
clc
scas
dec
cltd
inc
mov
das
mov
inc
mov
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
push
sbb
sbb
adc
sbb
xlat
sub
jns
mov
adc
shrb
les
in
ret
cltd
pop
ror
inc
lea
fstpl
sbb
cmpsb
pop
add
repz
gs
sbb
adc
orb
push
imul
cmp
out
push
or
push
dec
lahf
inc
mov
dec
loopne
lods
jbe
cwtl
xchg
pusha
test
xor
in
jg
iret
mov
js
inc
bound
es
xor
mov
sub
cmp
and
test
jp
mov
test
jnp
test
sbb
call
mov
inc
sub
in
pushf
dec
xchg
pop
xchg
adc
mov
jbe
pop
sbb
leave
and
xchg
or
xor
iret
adc
mov
mov
adc
cmpsl
push
sarl
pop
dec
icebp
popa
jnp
cld
jp
mov
inc
push
push
movsb
les
jl
jl
icebp
cli
sub
stos
aas
mov
aam
call
in
int3
lahf
mov
shrb
out
cli
sbb
sbb
je
and
add
loope
insb
test
push
push
cmp
stos
xchg
idivl
outsb
inc
push
fdivs
adc
mov
mov
jae
dec
fsubr
adc
xchg
add
mov
movsl
mov
dec
fwait
or
sti
sbb
es
sub
outsl
or
mov
test
xchg
aas
sti
je
mov
cmp
repz
scas
sbb
sbb
test
mov
cwtl
fldl2t
or
fimuls
data16
jo
les
in
sbb
push
xor
rolb
aaa
jbe
mov
mov
jecxz
inc
sub
das
pop
or
mov
push
jnp,pn
or
enterw
and
inc
or
mov
and
aas
push
mov
lock
int
add
xor
or
testb
sub
lcall
repnz
ja
push
xor
adc
data16
gs
fwait
push
inc
or
ret
jne
fdivrs
adc
xor
sub
adc
lods
mov
jmp
shll
sub
cmc
out
js
leave
lret
mov
gs
and
imull
inc
stc
lret
mov
push
in
dec
dec
adc
and
cmp
push
out
jo
cwtl
or
dec
rcl
shll
sub
shrb
insb
pop
sahf
mov
js
cmp
inc
jge
mov
sti
cmpsb
fiaddl
popf
fnstsw
notb
cmp
push
or
xchg
mov
pop
popf
movsb
int
inc
lahf
add
fcomi
jae
out
xor
pop
test
in
cmp
mov
add
cmpsb
in
repnz
stos
push
mov
ja
or
add
fdivr
sub
sbb
mov
dec
mov
insl
fistl
cmp
xchg
xchg
leave
mov
leave
jecxz
es
adc
fldenv
ljmp
imul
inc
sti
sbb
rcll
xchg
mov
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
cmpsl
xchg
loope
inc
adc
sbb
adc
sbb
in
lret
stc
fwait
jmp
andb
sub
iret
es
sbb
insl
imul
rorl
loopne
negl
pushf
and
adc
mov
mov
mov
mov
mov
call
into
xchg
dec
push
mov
pop
jmp
imul
jp
repnz
xor
mov
mov
sub
cmp
into
pop
sub
aam
push
lret
jae
jae
lock
pop
cmc
bound
dec
sub
cs
push
cltd
popa
adc
loope
push
lds
into
sbb
push
and
int
push
mov
mov
lods
int3
lahf
das
mov
jg
xlat
push
inc
fwait
movsb
ds
mov
push
jne
das
out
inc
and
lea
js
mov
aad
mov
scas
jo
es
inc
pop
clc
jnp
pop
dec
pop
out
xchg
adc
cmc
sub
push
add
jb
jg
inc
mov
mov
rorl
pop
mov
jecxz
negl
pop
sub
cmp
pop
lcall
lret
dec
loopne
jnp
jp
or
comiss
adc
push
dec
xchg
cmp
imul
dec
xor
add
add
push
or
mov
dec
in
dec
cmp
jnp
sbb
pop
ja
sahf
data16
cmc
test
cmp
mov
sbbl
movsl
aam
ja
mov
dec
cli
lcall
divl
pushw
hlt
or
fiadds
pusha
in
inc
jl
jmp
in
loopw
idiv
jbe
inc
shlb
pop
fiaddl
jo
in
inc
cmp
rcll
ret
je
dec
inc
pop
pop
das
xor
pop
cmpsb
pop
js
dec
cltd
aam
or
fldl
dec
xchg
adc
jecxz,pt
sbb
ja
pushw
cmp
sub
pop
sub
mov
pop
stc
or
aaa
push
mov
sbb
add
xor
dec
mov
xor
xchg
stos
punpcklwd
inc
imul
lret
push
call
pusha
mov
lds
leave
jmp
pop
stos
fisttps
or
push
stc
adc
xlat
pop
lcall
mov
addl
mov
or
pusha
ja
pop
cmp
cmpsl
mov
adc
jae
push
in
mov
int3
jae
sbb
push
dec
je
push
mov
ljmp
cmp
mov
jno
test
push
inc
lret
dec
adc
pop
mov
sarb
shll
roll
dec
or
out
pop
arpl
das
xor
fadds
sbb
mov
fmull
ret
jnp
push
sbb
lds
sbb
sub
cwtl
mov
or
enter
mov
and
xchg
inc
push
cmp
or
push
dec
jg
hlt
push
dec
inc
sahf
push
jbe
retw
ja
push
dec
mov
jge
mov
ficompl
cli
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
into
outsl
mov
or
sbb
adc
sbb
add
inc
into
ss
push
mov
mov
hlt
scas
repz
fmul
xor
lods
xchg
adc
jns
rcll
and
shll
mov
inc
setl
pusha
fists
inc
cmp
pop
mov
imul
pop
jne
lock
fnstsw
addr16
fmull
fs
fidivs
inc
sti
fisttpll
jno
mov
int3
mov
insl
stos
cmpsb
mov
call
movl
mov
mov
stos
or
sub
jmp
imul
mov
mov
sti
out
lcall
mov
loop
pop
sti
sub
add
jnp
sbb
or
imul
negl
lods
jo
lock
test
data16
movsb
push
lret
repz
mov
call
fwait
lods
adc
xchg
stos
dec
jbe
repnz
gs
stc
fwait
aad
in
daa
ja
mov
mov
loope
xchg
xlat
shrl
out
lahf
adc
ds
aam
jl
jo
repnz
jl
les
test
aam
inc
cmp
mov
xchg
shrl
mov
movb
pushf
lds
mov
cmpsb
test
jnp
add
out
dec
fisubs
push
mov
dec
or
outsl
cmpsl
jno
sub
pop
imul
das
jle
imul
bnd
das
dec
xorb
outsb
xor
inc
jbe
dec
movsl
cli
xchg
dec
sbb
std
xchg
clc
aad
imul
lahf
add
mov
pop
lahf
and
mov
dec
sbb
and
push
dec
mov
cvtps2pi
push
pop
lods
pop
jb
mov
dec
int
push
add
scas
hlt
aas
and
dec
cmp
scas
jl
push
ss
fwait
hlt
mov
inc
sub
push
sahf
pop
outsb
cs
test
cmp
iret
mov
imul
jg
mov
movsb
test
ja
jp
dec
jecxz
mov
xor
adc
fsub
lods
and
push
cmp
push
lahf
in
stos
jg
shlb
outsb
and
rorl
iret
jo
ret
adc
stos
pop
scas
dec
jmp
xor
bound
in
mov
inc
nop
das
loop
into
popa
fisubl
in
xchg
sub
dec
jl
mov
and
mov
popa
gs
je
ljmp
fdivrp
jae
fs
sub
dec
ret
int
aam
int3
adc
stc
add
lcall
jb
les
pusha
fs
shrb
sub
popa
mov
leave
lock
inc
faddl
cmc
leave
xchg
cld
push
mov
int3
lret
shlb
sub
test
jns
jge
jnp
xchg
lea
popf
pop
sub
mov
nop
pop
rorl
pop
jno
xorb
mov
popa
shrb
stc
adc
stos
and
push
jle
movsl
jg
mov
cmp
pushf
test
add
jmp
repz
subb
inc
ja
stos
mov
jne
in
das
dec
cwtl
sbb
jl
jge
sahf
shrl
inc
call
lret
jl
mov
adc
mov
pop
int
and
out
or
test
mov
subl
jmp
mov
push
in
xor
inc
imul
mov
sti
xor
mov
clc
push
sub
push
mov
cmc
int
sbb
mov
std
movsl
mov
cld
aad
xchg
xchg
push
jg
leave
or
mov
push
mov
pop
cli
dec
and
adc
cltd
out
mov
adc
sbbb
addl
or
xor
sbb
test
inc
and
or
cmp
out
fwait
mov
pop
push
push
in
dec
push
jne
or
lock
aaa
and
lss
popa
sub
aam
into
adc
les
in
ret
cmp
push
sbb
mov
fcmovnbe
scas
es
fcomi
imul
pushw
fnsave
lret
sbb
lret
sub
cli
fnstcw
mov
lcall
jg
jge
push
repz
outsb
leave
ja
jle
xchg
mov
stc
imul
xchg
pusha
mov
rclb
ret
fwait
dec
or
insl
subl
mov
xchg
loope
ret
jo
into
pushf
rorl
mov
mov
mov
test
add
xchg
mov
mov
and
lret
stos
jne
fsubl
adc
outsl
add
jns
aaa
rcrb
pop
and
fstl
insb
in
mov
mov
fldt
jne
pop
mov
push
icebp
lods
cltd
pop
xchg
ss
xchg
int3
sub
add
int3
aaa
cmc
mov
loopne
xor
dec
stos
addr16
repz
imul
repnz
jne
adc
jno
push
das
xchg
add
sub
jg
repz
test
mov
fdivs
movsl
cwtl
mov
adc
stos
jg
cwtl
loopne
push
icebp
das
dec
dec
and
add
xor
ret
lret
xor
push
mov
std
cmp
push
aaa
popa
insb
adc
ret
mov
sub
pop
xchg
fcmovbe
sbb
mov
lea
cmp
fwait
lahf
cwtl
pusha
in
js
test
pusha
js
or
andl
xor
and
movsb
out
and
push
mov
in
nop
into
lret
cmp
lods
dec
push
cltd
loopew
sub
in
cld
or
xor
xlat
js
pusha
into
orl
push
or
mov
loop
cmp
ret
xor
bound
mov
test
sbbb
and
and
mov
pop
imul
in
sub
adc
xorb
sahf
mov
xchg
xor
jns
aad
inc
cmpsl
subl
in
icebp
outsb
xchg
jns
in
jb
rcrb
addl
data16
xchg
shl
fxch
popa
divl
es
or
jecxz
dec
adc
fistps
mov
pop
outsb
push
popa
cltd
and
lcall
cld
aas
push
in
dec
push
pop
jg
divb
sti
scas
and
nop
jbe
push
xchg
je
jl
and
insl
sbb
leave
test
cmc
pushf
mov
and
add
sahf
mov
test
jbe
xchg
dec
or
xor
add
mov
push
push
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
in
jne
std
adc
cmp
gs
insl
inc
and
sbb
sti
inc
cmpsl
mov
fiaddl
sub
sbb
sarb
clc
out
sub
lea
xchg
jl
movsl
test
mov
jno
mov
clc
pop
add
fcompl
jle
mov
call
sbb
frstor
test
xchg
fwait
ret
cli
and
cmpxchg
adc
xchg
adc
enter
xchg
daa
cmp
push
aam
xor
mov
out
xlat
sub
test
push
cmp
cmp
in
mov
add
stos
sti
dec
mov
nop
rclb
test
fistpl
dec
push
dec
cld
cmp
push
dec
je
aam
insb
pusha
cmp
ds
xor
outsl
inc
mov
inc
xchg
das
test
sbb
pop
inc
jmp
cmp
sub
test
scas
shrb
pusha
or
pop
sbb
and
sub
comiss
dec
jno
mov
incl
pop
cmc
jg
sahf
call
int
jg
pop
mov
or
fcmovbe
xor
stos
ljmp
cmovnp
cmp
jge
movsb
xlat
addr16
or
inc
mov
in
jbe
outsl
xor
mov
fwait
rclb
pop
into
cwtl
mov
aad
jne
push
popf
xchg
and
xchg
scas
fisubrs
pop
fcmovnu
cmp
sub
push
sti
push
call
sub
arpl
inc
or
pop
xlat
std
dec
mov
adc
mov
shrl
xchg
add
sbb
mov
lret
das
or
xchg
arpl
jp
sahf
leave
fwait
pop
out
xor
pop
xchg
and
push
or
ss
cmpsl
mov
addl
add
dec
fwait
shlb
mov
push
sub
ret
xchg
or
ds
shrl
test
mov
aam
inc
aam
test
iret
pop
xor
jp
mov
adc
out
xor
les
ficoml
popl
jmp
rclb
and
inc
jmp
gs
jae
push
add
jecxz
adc
leave
ljmp
cmc
loop
inc
test
pop
adc
pop
fistpl
call
xor
xchg
in
add
aas
mov
or
xor
stc
or
outsl
mov
add
leave
psubd
inc
loop
pushl
mov
xor
mov
adc
int3
imul
and
and
frstpm(287
sahf
enter
push
andb
imul
orb
mov
pop
adc
sub
repnz
inc
push
std
pop
les
inc
loopne
lret
xchg
enter
push
adc
sbb
mov
into
insb
pop
call
add
pop
mov
push
jmp
popf
xor
mov
jno
or
mov
or
jp
push
iret
ffree
std
fidivrl
xchg
repnz
add
and
cltd
or
ret
sub
mov
arpl
in
ret
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
cmpsb
sub
sbb
adc
sbb
dec
cmp
ror
sub
pushl
notb
fidivl
or
fistl
and
sbb
push
aam
push
in
icebp
cltd
cld
aaa
mov
and
rcrl
sub
daa
sub
shlb
jnp
imul
in
test
push
decl
add
adc
push
stos
cmp
add
pop
xor
push
sbb
xor
push
out
lcall
xchg
dec
inc
pusha
or
lret
testl
dec
mov
cmpl
mov
ds
in
shrd
stos
xor
push
lods
xchg
add
into
jae
mov
dec
sbb
push
xor
out
push
pop
inc
repnz
pushf
adc
mov
xor
jl
inc
push
adc
push
mov
shll
push
sub
cmc
jne
mov
daa
movsb
nop
test
jbe
pop
shrl
sahf
dec
movsl
popa
pop
test
mov
sarl
popf
es
xchg
push
hlt
mov
aas
aas
jne
xchg
test
aas
adc
fadd
xchg
lock
adc
mov
xchg
sbb
sub
xchg
push
mov
sbb
lods
dec
xchg
jmp
cli
or
cmpsb
or
push
repz
enter
push
test
jmp
pushw
lods
out
push
addr16
stos
lret
mov
pop
pop
ss
addr16
add
pop
cmp
ror
int
es
pop
cmp
test
aaa
mov
call
lret
cmpsl
lods
movsb
je
pop
inc
pop
fwait
cmp
jle
pushf
into
inc
outsl
xor
sbb
ret
push
popfw
mov
dec
into
in
mov
jmp
mov
xor
cmpsb
push
test
je
mov
jns
ja
and
fdivrl
adc
rorb
push
jbe
push
stos
inc
sub
adc
jo
lods
dec
aas
inc
add
incb
loope
sarl
push
xchg
out
pop
in
add
adc
in
inc
es
pop
insl
push
push
cs
xchg
xchg
mov
push
and
sbb
jne
mov
sub
xor
push
out
pop
hlt
data16
mov
push
fadd
int
lds
das
push
push
pop
std
jne
cmp
push
mov
push
jecxz
mov
dec
rclb
fndisi(8087
mov
stos
add
sub
cli
jg
mov
cmp
pushf
lret
xchg
in
push
fisubrl
aas
mov
shll
sub
lods
adc
inc
push
gs
sub
es
lods
cmpsl
movsb
fsts
dec
aaa
push
cmp
mov
imul
jmp
test
jb
popf
sbb
sbb
dec
add
inc
add
nop
xchg
int3
xchg
fwait
stos
out
pop
and
push
dec
lods
jb
ss
mov
lahf
inc
adc
mov
xor
lods
test
sub
sarb
fidivrl
mov
or
mov
inc
cmp
imul
jns
mov
sbb
pop
mov
pop
enter
arpl
push
fldt
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
lahf
clc
sub
jns
cmc
jo
dec
test
pop
cmp
jle,pn
push
fdivrs
cmp
pop
in
jb
movsb
mov
mov
adc
enter
mov
mov
stos
jbe
iret
test
push
cwtl
and
gs
push
in
sbb
cmp
push
fldt
cltd
mov
add
inc
xlat
ss
fsts
mov
push
mov
aaa
aas
cmc
add
dec
fs
cmp
fimuls
pop
pusha
cmp
call
mov
cmc
out
test
daa
inc
stos
or
lods
push
jno
and
loope
adc
in
iret
loop
cmp
sub
mov
mov
dec
mov
jl
inc
shl
out
cmp
shll
fyl2x
inc
movsb
xchg
cmp
mov
pop
je
outsl
add
xchg
xchg
outsl
mov
ret
das
and
xor
adc
fisttpll
mov
mov
lret
mov
xchg
out
adc
pop
mov
dec
xchg
add
xor
adc
lret
bound
push
add
mov
cmp
and
les
mov
or
push
xchg
sbb
lock
add
pop
js
cld
sbb
inc
call
mov
mov
out
mov
dec
fstl
cmp
dec
push
lods
and
mov
ss
xor
cwtl
movsb
fimull
add
inc
insl
xlat
jecxz
aam
cmp
xor
and
adc
inc
lock
mov
jb
mov
and
mov
sub
adc
or
ljmp
dec
mov
addr16
jmp
ret
insl
or
insb
push
and
pop
lock
dec
jecxz
cmp
aas
push
mov
pop
nop
mov
inc
stos
pop
jbe
pushf
push
push
sub
ja
mov
ja
inc
xchg
xor
xchg
leave
sub
stc
mov
rcrl
sti
mov
es
jb
pop
adc
xor
dec
fwait
sbb
lods
pusha
mov
outsb
pop
sti
jmp
sbb
test
cmp
lcall
jecxz
ret
mov
inc
inc
outsl
xor
cltd
rcr
mov
mov
leave
dec
adc
stc
jbe
push
push
call
aas
cmp
mov
inc
lock
loop
loopne
sub
out
jns
inc
pop
mov
cmc
mov
xchg
movsl
mov
xchg
sub
das
dec
mov
fisubrs
add
cld
pop
push
push
and
popa
xor
into
xorb
jp
cmp
mov
fcmovbe
aas
push
shrl
jo
in
or
dec
push
push
cmc
rcl
shl
not
sub
adc
dec
hlt
or
or
pushf
adc
cmp
add
mov
mov
jecxz
add
xor
fs
fidivrs
cwtl
ret
test
movsb
xchg
imull
pop
sbb
adc
loop
add
push
movsb
jecxz
sub
mov
rclb
mov
lret
cmpsl
jecxz
xchg
nop
in
pop
mov
lahf
inc
stos
lret
push
jle
fs
sbb
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
mov
inc
jmp
sbb
mov
mov
add
faddl
fisttpll
push
nop
xchg
stos
xor
cltd
out
jns
loopne
inc
xchg
enter
scas
stos
sbb
cli
lret
test
push
dec
xor
test
cmp
imul
xchg
aam
cmp
stos
mov
scas
in
push
dec
cs
inc
ret
leave
cmpsl
test
pop
enter
daa
fcompl
bound
ret
jns
mov
loop
lea
sub
fsubl
xchg
stos
inc
xor
mov
mov
sbb
push
pop
jmp
and
rclb
pushf
les
xchg
mov
fdiv
movsl
or
mov
lret
mov
daa
xchg
jg
stos
push
xor
stos
lea
aad
std
test
add
sahf
mov
mov
lock
mov
bound
dec
jp
inc
sub
and
std
test
lds
dec
jmp
mov
fildl
mov
mov
mov
pop
xchg
ret
or
into
dec
adc
adc
xchg
or
push
jno
push
popf
aaa
lds
ss
mov
testl
mov
gs
aaa
push
in
daa
cmpsl
jno
test
pop
into
push
mov
ffree
mov
lock
rolb
arpl
lock
jae
rcrb
jo
mov
in
je
nop
xchg
add
add
in
cmp
orb
daa
sbb
aad
xor
xchg
mov
adc
mov
shlb
cmpsl
mov
sti
jno
test
movsl
xor
pop
cmp
jl
push
inc
cmp
sub
jnp
mov
loop
orb
sar
cmp
pop
dec
loope
xor
fnstenv
and
cmp
mov
mov
fisttps
lods
aaa
test
dec
arpl
in
not
fildl
stos
mov
clc
outsb
pop
push
sti
cli
insl
ret
ret
and
pop
das
or
xchg
jle
push
sub
jbe
popa
loopne
leave
jmp
jmp
sub
lock
aaa
push
mov
push
int3
lds
pop
dec
or
shll
xlat
fdivrs
notl
sbb
shrb
cld
inc
sub
imul
fstpt
mov
loope
jnp
jl
sbb
outsb
jle
movsl
andl
inc
imul
in
scas
mov
pop
add
shrb
faddl
leave
mov
popf
push
mov
icebp
dec
jl
xor
call
cmp
jbe
jno
lock
pop
jmp
inc
mov
lods
push
out
xorb
pop
test
inc
cmp
loopne
cli
cmc
cmp
ds
movsl
mov
in
xor
inc
jp
cmpsl
aaa
shl
fildl
ret
push
pop
mov
mov
loop
stos
xchg
cwtl
aas
xor
jno
call
hlt
in
shrb
and
push
andl
or
call
sbb
pop
dec
pop
bound
in
and
xchg
gs
mov
jo
lahf
loope
mov
mov
into
mov
and
lcall
mov
jne
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
fistpll
loope
sbb
adc
sbb
xor
jge
addl
clc
dec
xchg
pop
pop
jns
pushf
pop
test
shll
leave
ss
xchg
mov
or
fildl
push
and
sub
scas
out
mov
xor
or
xchg
insb
cltd
xor
sub
test
push
push
pop
sbbl
dec
jae
xchg
popa
in
jecxz
cmp
cmp
lea
daa
dec
fisttpl
lea
insb
jne
aas
je
mov
cmp
mov
scas
in
fstl
adc
cmp
stc
jae
sub
adc
daa
jg
das
movsb
iret
stos
fdivl
fldl
loop
jno
mov
lcall
ljmp
test
mull
pop
push
cli
fstpl
inc
loop
lret
int
jae
sbb
test
mov
jno
das
mov
sbbl
jecxz
scas
pop
dec
cmpl
test
jo
jl
mov
and
aas
sub
xchg
scas
fcompl
sbb
sub
and
rolb
cmp
mov
out
sub
insl
in
pushf
jmp
add
or
fildl
loop
outsb
aaa
imul
pushf
js
inc
pop
mov
jnp
adc
add
scas
loope
lock
jle
push
adc
xchg
sbb
push
cmpsl
push
ljmp
sub
pop
push
or
adc
popf
sub
sbb
roll
mov
dec
cwtl
and
push
jg
ret
mov
loope
mov
xchg
push
inc
scas
jp
inc
jbe
sub
adc
mov
jb
push
out
pop
mov
in
jl
fcomps
test
mov
mov
mov
add
cmpsl
xchg
stos
xor
sub
jbe
aad
gs
adc
or
mov
xchg
lret
hlt
in
pop
lahf
inc
dec
xchg
push
adc
fwait
jno
sti
fcmovu
in
cs
in
cmp
jecxz
sub
into
sarb
dec
mov
fisubrs
clc
jg
push
scas
enter
insb
push
int3
xor
mov
sbb
shll
fs
jo
dec
jae
mov
outsb
inc
jge
mov
addr16
std
and
push
enter
sbbl
add
jo
or
jp
stc
sub
dec
mov
push
roll
aas
out
mov
aas
scas
mov
shll
aam
sbb
fnstsw
push
mov
dec
lahf
shlb
sbb
xchg
lods
mov
sbb
xchg
std
fs
lahf
sahf
cmp
jae
xchg
add
call
cltd
push
nop
or
add
jnp
inc
popa
loop
cmp
sbb
es
push
or
adc
sbb
iret
mov
pop
aam
shrl
out
lods
push
and
and
fadd
repnz
mov
and
ficomps
jecxz
inc
add
dec
iret
mov
js
cmp
outsl
mov
aam
cmpl
insl
xor
call
lret
imul
fwait
das
jmp
inc
std
pop
fwait
loopne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
aad
inc
push
fistl
sbb
adc
sbb
insb
aam
mov
dec
lods
push
fcoml
shl
push
jbe
gs
test
imul
lods
lea
xchg
mov
movsl
aam
cmpsl
fistpll
push
sub
adc
pop
cmp
scas
xor
std
sar
and
adc
or
mov
xchg
and
neg
clc
xchg
aas
aam
in
dec
xor
cmp
and
cld
shll
jne
out
push
mov
mov
and
push
lds
dec
sub
pop
icebp
pop
inc
fnstsw
xchg
push
mov
mov
add
and
cmp
popf
push
mov
add
inc
repz
pop
dec
addr16
es
scas
adc
adc
mov
jl
mov
rcl
aad
pushf
repz
mov
mov
mov
cltd
sbb
ret
inc
or
and
mov
aas
cmp
add
dec
pop
lock
inc
jbe
adc
cmp
inc
pop
and
jbe
xchg
shl
xor
sub
xor
mov
xor
cmp
ja
push
mov
lds
sub
jp
sar
pop
inc
jmp
or
jmp
pop
xchg
cmp
jbe
shrl
or
adc
sahf
scas
daa
xchg
or
pop
add
mov
push
fwait
mov
add
hlt
sub
fwait
and
std
adc
jo
psrlw
push
xlat
lret
sbb
divb
inc
inc
mov
jbe
fwait
or
cmc
cmc
push
fistl
stos
mov
dec
sbb
xor
nop
add
inc
cmp
sub
data16
push
daa
and
jecxz
jp
fidivs
test
ja
sbb
ja
pop
and
into
xchg
sbb
add
mov
out
insl
cli
ljmp
jge
cmc
fisttps
push
fsubr
mov
cli
xor
lods
int
sar
fcomps
sbb
sub
loope
cmpl
arpl
mov
in
jo
jo
fsts
aaa
movl
in
sbb
cltd
pusha
jmp
imul
push
das
in
into
sub
out
xor
xchg
lahf
out
or
nop
cwtl
inc
rcrl
jg
test
push
addr16
or
adc
movlps
imul
dec
in
adc
cld
pop
divb
icebp
pop
or
sbb
ret
or
cmc
cld
push
sub
inc
out
or
push
cmp
pop
jg
ja
sar
inc
push
in
cltd
and
out
push
and
xor
outsb
shll
sub
push
lods
push
enter
adc
inc
stos
fisubs
and
and
inc
xchg
in
jle
jne
outsl
shll
push
imul
dec
push
imul
dec
les
cmovo
add
leave
mov
xchg
xchg
adc
minps
jo
or
in
icebp
jmp
loopne
mov
push
jge
insb
bound
mov
std
inc
cmp
push
les
pop
lret
les
dec
cltd
ja
ja
stc
test
fcomi
adc
cmp
push
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
sbb
push
rcll
sbb
adc
sbb
iret
sub
call
or
outsb
adc
loope
adc
out
je
push
pop
push
scas
xchg
inc
int
insb
and
les
pop
icebp
out
or
lock
out
imul
mov
push
push
fistps
and
mov
push
pusha
xor
fistps
mov
pushf
repz
mov
aas
es
ficompl
xlat
inc
pop
fisttpll
cmp
xchg
clc
xchg
cmp
mov
mov
mov
les
mov
xchg
cmp
push
arpl
sub
mov
mov
sub
mov
cmp
push
pop
add
xlat
sarl
xor
mov
push
insb
fistps
mov
and
out
dec
js
jmp
xchg
cmpsb
roll
xchg
shll
sbb
les
dec
mov
dec
xor
outsl
add
imul
fwait
repz
mov
or
mov
or
ret
subl
cli
mov
sti
mov
or
aaa
enter
orl
pop
sbb
outsb
push
add
or
mov
mov
mov
loope
adc
sub
or
jecxz
mov
or
or
adc
jb
sbb
cld
iret
int
mov
iret
scas
push
push
loope
sbb
dec
dec
subb
cmp
inc
sub
dec
test
fimull
pop
mov
jne
sub
mov
or
push
xchg
mov
adc
adc
or
daa
repz
inc
mov
mov
out
sbb
rorl
jmp
lea
outsl
insl
test
jg
cmp
or
xchg
ja
cmp
imul
push
push
jl
jae
in
bound
inc
sahf
std
fs
fisttpll
push
adc
pop
sbb
mov
fs
subl
inc
xor
and
mov
adc
scas
cmp
push
mov
cmp
arpl
cmpsb
push
rcrb
jb
stos
in
cmp
jmp
sbb
and
add
or
push
jnp
daa
sub
inc
jbe
aam
push
sub
fwait
ret
aad
inc
movsl
mov
push
mov
push
outsl
cli
fs
xchg
aad
adc
or
or
sbb
inc
dec
fdivl
push
out
dec
inc
push
mov
sbb
inc
dec
aam
out
mov
aam
imul
repz
addl
inc
adc
xor
xchg
aad
sbb
cmp
bound
mov
orb
push
add
xor
xchg
cwtl
fmull
frstor
add
xor
push
or
in
sbb
aas
jmp
add
or
xchg
shlb
popf
daa
sbb
into
movlps
mov
aam
push
mov
sarb
lea
adc
dec
adc
shl
adc
ds
scas
mov
inc
test
add
dec
push
negb
jne
lods
and
pop
xor
add
push
sub
pop
jne
orb
add
add
xor
jb
cmpsb
xchg
sbb
push
sbbb
sbb
sbb
scas
mov
push
jp
andl
and
inc
ftst
gs
pusha
fisubl
push
cltd
cmc
jge
xor
adc
or
cmpsb
outsl
movsb
dec
jns
lods
mov
out
fcoml
cmpsl
aam
and
sub
shll
jns
loopne
inc
sub
inc
lret
arpl
shrl
or
hlt
inc
push
nop
push
xor
aas
lret
mov
pop
or
outsl
push
or
imul
lret
in
fmuls
add
xor
mov
jo
ret
sbb
mov
xchg
js
mov
sbb
mov
sub
mov
mov
xchg
insl
dec
cli
stos
ds
in
loop
mov
ja
lea
clc
inc
inc
insl
jno
sbb
bound
sahf
xorl
lods
sub
mov
inc
out
adc
fistl
mov
icebp
fsubs
pushf
clc
mov
insl
rorl
mov
or
add
and
cmpsb
or
add
mov
push
movsb
inc
push
and
lods
jp
push
std
cmp
outsb
xor
push
rol
jecxz
cmp
jb
jle
pop
ds
jne
and
add
pop
sub
adc
loope
repz
repz
daa
cmp
xchg
insl
repz
into
cld
cs
nop
cmp
jle
push
push
lock
aas
inc
les
push
stc
jge
imul
movb
or
in
or
xor
rorb
ds
sahf
add
inc
inc
inc
dec
add
mov
mov
mov
pop
outsl
les
loop
les
xor
dec
scas
test
fisttpll
ja
out
in
mov
sub
movsb
push
and
pop
insl
mov
jo
mov
jnp
enter
bound
mov
cmc
mov
lcall
test
lods
push
jbe
cmp
in
in
and
or
movsl
dec
add
pusha
mov
stc
xor
cmpsl
sarl
xor
inc
adc
xchg
or
insl
adc
pop
lret
inc
xchg
add
add
rcrl
es
stc
pop
cmp
cmp
cwtl
dec
inc
inc
fidivrl
ds
rolb
cmpsb
inc
dec
or
pop
mov
push
inc
daa
sbb
push
shl
sbbl
aaa
addl
xchg
xchg
dec
jo
clc
adc
mov
loop
repnz
test
dec
jecxz
inc
and
mov
dec
inc
das
std
add
iret
mov
enter
cmpsl
or
xor
xchg
paddb
sub
xor
or
fwait
inc
mov
pop
and
xchg
arpl
mov
ret
and
das
out
xor
lea
sbb
popf
cmpsl
cmp
sar
pop
rolb
repz
mov
xchg
mov
mov
mov
sub
scas
fs
in
cmc
in
sbb
add
fisubrl
and
cmp
loopne,pn
mov
dec
sbb
cmp
pop
mov
gs
cld
daa
daa
add
data16
test
add
xor
mov
push
testb
mov
in
shll
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
mov
push
lds
sbb
adc
sbb
insl
psllw
divl
jmp
pop
xchg
and
xchg
inc
or
rol
in
add
push
mov
clc
sbb
jmp
sbb
jle
popa
xor
mov
mov
cmp
enter
cmp
sbb
pop
jg
xchg
mov
pop
iret
jg
push
push
jmp
xchg
in
out
imul
je
mov
lahf
add
add
enter
push
cmpsb
idivb
in
fnsave
cmp
fldcw
jnp
mov
loop
imul
adcb
fcomps
enter
sbb
insb
xor
pop
or
xlat
mov
jb
xchg
push
adc
into
push
test
in
scas
loope
popa
lea
pop
and
mov
or
push
decb
repnz
icebp
lds
jle
cld
pop
ret
or
out
lock
pop
sbb
pop
sbb
jp
imul
inc
or
into
xchg
stc
xchg
push
cmp
pop
loop
int3
js
and
mov
push
add
loopne
cld
imul
testl
mov
push
xor
pusha
pop
orb
xor
pop
mov
rorl
cltd
or
mov
cli
or
ret
dec
test
dec
lods
cltd
out
mull
test
enter
cltd
sub
inc
xchg
pop
inc
into
scas
out
test
sub
fwait
in
clc
out
lea
jbe
mov
or
xchg
arpl
add
out
mov
pop
iret
and
jmp
std
in
mov
arpl
dec
int3
outsb
xchg
add
push
outsb
jnp
pop
mov
mov
xor
xchg
mov
and
mov
add
jge
dec
mov
fsub
or
jae
add
mov
cmp
cmp
andl
addb
inc
cmpsb
sbb
sbb
mov
adc
test
xchg
cltd
push
imul
fstl
jnp
sbb
aaa
rcrl
mov
cmpsl
and
jae
pop
xchg
incl
or
inc
or
mov
out
cli
xchg
divl
in
xorl
push
inc
decb
push
adc
data16
add
stos
scas
mov
out
les
add
popa
roll
notb
add
adc
push
add
mov
or
push
push
pop
test
lret
fistps
fdivr
cld
jne
mov
fadds
test
js
mov
jns
xorl
insb
rclb
nop
into
test
jp
mov
adc
jle
xchg
into
cmc
popf
aas
imul
aas
ss
arpl
popf
fildll
sti
sti
lods
faddl
jl
jecxz
insl
push
outsl
int3
ror
in
sub
cmp
inc
xlat
add
pop
jbe
dec
pop
and
mov
sub
or
mov
dec
xchg
xor
jmp
pusha
into
push
dec
jo
cmp
jnp
ljmp
add
shll
xorb
imul
adc
push
adc
cmpsb
sbb
add
adc
mov
sbb
repnz
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
jle
mov
sbb
pop
add
stc
or
xchg
flds
lods
add
movsb
cli
cwtl
dec
xchg
mov
adc
nopl
lahf
pop
lock
repz
xchg
stos
adc
enter
cmc
sahf
or
push
push
ret
push
out
push
mov
xor
dec
mov
or
iret
mov
xchg
cmp
mov
push
and
or
icebp
xchg
jp
jle
cmp
cwtl
sbb
out
jmp
sti
jmp
shll
lea
push
mov
xchg
and
sbb
rol
enter
sub
lret
jns
insl
xchg
push
pusha
xchg
fidivl
xchg
xor
mov
fcomi
nop
pop
rclb
or
lcall
inc
xchg
aas
cltd
jge
fidivrl
mov
cltd
sbb
pop
xor
scas
stos
cld
lcall
jne
call
sbb
sub
dec
movsb
inc
mov
fadds
xor
mov
movsl
fsubl
mov
jns
mov
jecxz
jp
jmp
ljmp
shll
mov
hlt
cwtl
add
bound
or
cmpsb
mov
dec
es
jmp
pop
ud2
je
icebp
or
adc
mov
adc
aas
mov
sysret
jl
jnp
adc
jg
jbe
push
mov
sub
mov
xor
enter
xchg
and
inc
mov
into
testb
lcall
and
int3
negb
xchg
lahf
push
or
mov
cld
mov
push
mov
sbb
and
jnp
popa
fs
xor
dec
addr16
icebp
inc
pop
adc
mov
adc
rcl
call
adc
sbb
mov
and
repnz
fcmove
sub
add
xor
js
popa
call
call
adc
xchg
adc
inc
mov
movsl
xor
mov
in
pop
addr16
int3
dec
aam
ficoml
add
cmpsb
sarl
jecxz
js
mov
adc
ja
xor
cmc
loop
mov
lcall
loop
fldl
bnd
bound
dec
mov
adc
out
mov
es
les
ja
inc
or
xor
fcomp
lea
cwtl
sahf
imul
push
push
cmp
cmp
mov
mov
push
xor
fwait
insb
stc
cltd
sbb
fcomip
icebp
dec
cmpsb
orl
fs
les
xor
cs
pop
jns
dec
pop
sbb
imul
popf
popf
mov
xor
pop
cli
add
jl
lahf
jge
xor
xchg
int3
scas
insb
imull
jne
mov
fldl
lock
dec
pop
lahf
sbb
or
xchg
cmp
mov
lret
int3
fisubl
jmp
loopne
jl
push
stos
xor
cmp
sahf
and
call
sbb
and
addb
add
xchg
push
je
and
das
inc
out
sub
mov
mov
push
mov
imul
inc
jo
pop
sub
rorl
push
int3
rcrl
inc
mov
jmp
and
int3
pop
ljmp
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
and
lods
mov
cmp
rorl
cwtl
mov
and
cmp
sub
mov
xor
adcl
adc
adc
xor
out
lods
xchg
mov
aaa
sti
pop
xor
jo
loop
jae
icebp
dec
mov
push
clc
add
dec
shlb
or
imul
pop
out
ljmp
add
je
outsl
das
xor
jno
loopne
xchg
xor
sub
xor
pushf
push
mov
adc
sub
push
mov
std
mov
mov
sub
ficoml
push
push
push
jno
cmp
ja
popf
das
mov
or
scas
cmc
xchg
and
mov
fistpll
sbb
ret
jecxz
xchg
ja
pop
shl
mov
xor
mov
mov
adc
jmp
push
jmp
daa
inc
int
nop
fcmovnu
push
pop
iret
in
push
shrb
jmp
push
shlb
cmp
dec
ds
xor
aaa
add
jmp
mov
pop
mov
lahf
mov
dec
cmp
mov
cltd
mov
add
or
cmp
jmp
jns
lcall
dec
mov
jg
in
outsb
mov
repz
popf
movsb
push
mov
dec
dec
pop
jb
mov
repz
jb
add
and
rorl
adc
or
call
shrl
popa
jp
lcall
scas
or
push
pop
aaa
test
add
test
jae
aam
outsb
pop
addr16
fldl
pop
out
sub
les
and
aam
fists
pop
lahf
pop
xchg
movsb
je
popl
or
daa
sbb
xchg
pop
cmp
lods
fcom
add
sub
subl
dec
dec
sub
notb
pop
pushf
xor
cwtl
addr16
push
push
loope
int3
push
lods
cmpb
mov
cmp
jle
aad
cmpsl
adc
jno
mov
ret
push
lods
inc
xor
loopne
inc
or
cmp
fwait
std
ret
xor
xchg
xor
mov
jge
scas
and
clc
lea
or
testb
inc
loopne
push
addb
repnz
xchg
out
push
pop
sbb
int3
xchg
scas
pop
cs
mov
dec
jns
inc
mov
js
mov
mov
pushl
cwtl
xchg
movsl
or
push
leave
das
mov
dec
mov
test
mov
push
pop
sub
add
sub
ljmp
cmp
sub
inc
mov
sub
cmp
icebp
iret
test
aas
cli
insb
mov
or
xor
lcall
pop
sbb
xchg
jns
cmp
out
mov
loop
xor
dec
mov
pop
mov
out
jle
xchg
jl
mov
add
push
lahf
jl
lods
fistpll
cmp
inc
push
insb
or
add
std
lret
cwtl
loopne
sbb
or
imul
movsb
cmp
push
push
mov
insl
mov
mov
jb
lahf
cli
subl
sti
ss
roll
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
add
push
mov
and
mov
sbb
mov
push
sub
jg
in
mov
xchg
pop
jl
imul
std
mov
jno
pop
dec
gs
imul
inc
imul
icebp
ss
mov
push
mov
xchg
xor
pop
imul
sub
mov
or
xchg
or
and
push
out
cmp
mov
movsl
or
or
xor
mov
or
push
mov
int3
xor
insl
dec
fadds
adc
jb
xlat
jge
add
pop
lret
jb
xor
xor
mov
add
lock
push
fcomps
test
dec
cltd
ds
sbb
std
loop
cwtl
push
test
dec
out
das
fwait
neg
in
xchg
jecxz
shll
jns
fldt
adc
add
aaa
jae
xchg
jbe
scas
mov
int3
xchg
rcrl
mov
mov
movsl
icebp
jge
pop
ja
call
and
add
jecxz
sti
lret
jl
lahf
pop
jg
mov
adc
add
cmp
xor
sti
push
ror
mov
cwtl
mov
lods
cld
repnz
mov
cmp
push
or
fiadds
lea
sbb
in
enter
callw
adc
inc
movsl
pusha
push
scas
adc
popf
test
sbb
push
push
and
test
sub
int
push
mov
fstpt
dec
lcall
jno
data16
push
pusha
mov
pop
loop
mov
mov
pop
cld
inc
daa
jl
lcall
ret
inc
es
in
dec
jmp
xorl
xchg
or
xor
jle
sti
test
into
adc
and
in
ds
mov
push
cs
gs
js
mov
mov
fldl
loopne
jnp
cltd
inc
inc
and
mov
jmp
mov
jae
adc
xor
rorl
imul
in
inc
xchg
or
in
sti
ja
js
inc
mov
enter
daa
sysexit
and
cli
mov
sub
popf
sar
and
mov
jmp
jl
testl
push
lret
fidivl
lods
sub
push
push
movl
mov
dec
jnp
mov
popa
daa
insl
out
cmp
xchg
lds
mov
icebp
xchg
pop
pop
ret
sbb
rcrb
cs
lock
inc
adc
movsl
scas
sbb
mov
and
jae
adc
push
pop
adc
inc
jo
xchg
ljmp
mov
xor
test
jb
lods
inc
pushf
push
pop
mov
mov
sti
xor
jnp
mul
leave
fsubs
or
sbb
push
mov
push
sahf
cwtl
scas
adc
cmc
lcall
dec
push
aaa
pop
test
fs
repz
pop
inc
psrlq
sarl
test
mov
push
mov
stos
mov
lcall
inc
pop
dec
fs
insl
pop
mov
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
xchg
mov
push
sbb
adc
sbb
xlat
jne
sar
sbb
jbe
ss
leave
icebp
xor
push
shll
mov
jns
dec
push
jl
sarl
mov
and
jecxz
ret
fsubl
loopne
adc
mov
sub
ljmp
cmp
sub
clc
leave
inc
jmp
pop
inc
rcr
pop
and
adc
add
add
sbb
or
cwtl
fistpll
or
pop
ja
push
das
and
xorb
inc
popa
addb
test
mov
mov
xor
push
movsl
mov
stos
sub
fsubrs
push
lret
js
cltd
jne
test
xor
cltd
jbe
out
jbe
daa
mov
xor
pop
dec
ror
fbstp
sub
ljmp
mov
nop
fwait
cltd
mov
lods
xchg
adc
test
jl
push
andl
and
shll
js
dec
jno
shrb
sub
sub
nop
cli
sub
mov
sub
push
sbb
rcrl
xchg
int
lret
jbe
xor
sbb
pop
jg
adc
fwait
icebp
cmpsb
bound
in
pusha
mov
lods
sbb
and
shll
pop
lock
xchg
push
pop
sbb
cmp
loope
pusha
mov
sti
push
xchg
adc
in
jge
out
jl
fldl2e
test
sbb
fs
pop
sti
mov
pop
inc
mov
inc
pushf
lods
outsl
and
stos
imul
arpl
test
popf
and
jg
cmp
clc
dec
loop
xchg
cmp
pop
mov
sbb
dec
pop
cmp
pushf
pop
idiv
data16
cs
cld
outsl
jecxz
dec
mov
dec
loopne
jle
mov
lcall
and
dec
test
sub
lea
push
shl
test
fst
clc
cmp
cmp
pop
sbb
sbb
add
out
mov
add
jge
test
dec
cmp
xor
shl
add
les
xorl
lret
inc
cmp
adc
sbb
ss
rcrl
je
fildll
jno
int3
filds
and
movsl
xor
and
mov
sub
ret
sbb
jp
negl
aad
enter
idivl
cld
sub
fwait
iret
out
test
jl
jae
inc
mov
lds
rorl
shr
push
pop
inc
sub
cs
cwtl
ficoms
notl
popa
or
mov
fisubl
mov
inc
outsb
les
sbb
cld
xchg
addr16
rcll
xchg
adc
jne
test
push
cmp
out
adcl
mov
stc
imul
mov
dec
shlb
mov
push
arpl
or
jg
cmp
out
and
add
data16
sub
pop
adc
jmp
sub
pop
rcrl
shrl
dec
cmpsl
dec
test
xchg
push
fistl
sub
mov
sub
add
mov
adc
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
fisttpll
jo
mov
sbb
outsb
or
xor
jbe
inc
mov
aas
dec
int
gs
adc
dec
test
xchg
arpl
xchg
pop
and
mov
and
jae
mov
hlt
mov
sub
into
shll
adc
stos
cmpsl
and
jge
ss
scas
and
mov
outsb
jns
mov
xlat
out
add
int
pop
inc
je
mov
push
inc
mov
and
in
jle
cmpsl
or
data16
aas
roll
test
sub
popa
xor
pushf
adc
fidivs
add
pop
daa
loop
pop
sti
cltd
test
scas
lahf
dec
sbb
jbe
cmp
inc
out
pop
jecxz
roll
mov
movsl
sbb
stos
in
fildl
inc
fidivl
lret
push
mov
cmp
cltd
xor
test
dec
or
decl
pop
cmpsl
xor
xchg
pop
popa
jns
in
lret
hlt
fs
dec
pop
pop
mov
imul
arpl
lods
insl
movsb
filds
in
xchg
add
sbb
shlb
pop
and
fabs
push
add
xlat
fisubl
scas
scas
jmp
mov
std
push
in
mov
add
pop
inc
out
jbe
fdivrl
inc
sti
divl
iret
mov
insb
mov
jmp
sub
cmp
sbb
pop
in
sahf
jbe
pusha
jnp
fld
jno
or
mov
outsb
xchg
rcrl
cs
stos
ljmp
dec
adc
dec
mov
mov
dec
scas
outsb
lds
leave
inc
xchg
js
sarb
dec
out
enter
popf
lret
fwait
sahf
add
enter
scas
pop
pop
mov
lret
add
in
outsb
add
out
ss
out
out
out
sub
mov
xchg
jns
stos
inc
imul
push
mull
sub
sub
inc
xlat
mov
push
add
sub
data16
pop
dec
lods
lcall
jmp
xor
fbld
jb
ja
sarb
aaa
lret
fidivl
fucomp
shrl
push
add
xchg
push
pop
sbb
imul
jnp
jbe
sbb
jge
std
inc
adc
aaa
loop
xchg
cmc
cmp
js
sbb
sbb
sbb
and
in
cld
imul
test
jge
into
fisubrs
xor
push
in
push
sub
mov
xor
scas
xor
cmp
aas
inc
scas
jp
mov
cwtl
shl
sub
scas
push
xchg
and
xchg
jle
jg
fnstenv
push
mov
shll
xchg
and
bound
cmpsl
rorb
out
xchg
jp
sbb
dec
jle
das
jnp
out
movsl
dec
jne
fiadds
outsb
insb
fs
ds
xchg
rcrl
pop
sub
pop
mov
cmp
push
mov
add
lods
mov
push
cmpsl
push
push
sarl
mov
addl
imul
or
mov
inc
xor
and
ret
es
shl
push
jp
dec
xchg
xchg
test
test
loope
jp
nop
mov
mov
call
inc
inc
scas
enter
adc
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
or
pop
fwait
push
sbb
adc
sbb
mov
decl
or
jae
cld
mov
fstps
sbb
stos
inc
add
lcall
shrb
repnz
inc
xor
pop
add
fisubs
cmpsl
dec
dec
jno
dec
stos
push
out
mov
jmp
and
lret
jbe
xchg
outsb
adc
enter
call
mov
cmp
push
pop
lcall
push
fcoml
dec
lret
mov
pusha
rol
rol
push
sarl
sti
push
and
inc
cli
pop
in
gs
xchg
mov
repz
mov
not
pop
inc
in
dec
fsubl
cld
mov
loopne
xchg
imul
loope
or
cmp
call
cmpsb
nop
lds
xchg
sbb
cmp
xor
roll
std
pop
cwtl
push
aam
loopne
mov
sub
add
clc
lret
sub
out
and
adc
pop
pop
or
sub
push
out
pop
pusha
lock
sub
loop
int
insl
loopne
pop
and
mov
scas
lahf
jns
inc
push
mov
inc
mov
rcr
fdivs
aas
into
ds
sub
jle
sti
mov
mov
test
mov
dec
sub
pop
xchg
mov
lods
sbb
push
mov
into
xchg
adc
les
mov
inc
push
jge
insb
insl
add
cli
data16
inc
dec
xor
out
fisubrs
xor
aam
ds
sub
shrl
ds
add
nop
enter
or
ljmp
sub
push
sbb
jmp
sbbb
or
and
cmp
dec
pop
jle
mulb
add
sbb
pushw
add
dec
adc
jmp
adc
popf
dec
pop
enter
mov
lods
es
xchg
mov
popf
adcb
xor
or
xchg
xor
test
xor
jns
pop
aaa
mov
stos
shl
mov
pop
cmp
cs
mov
cs
mov
aad
mov
hlt
and
pop
sbb
inc
stos
movsb
gs
call
arpl
xor
scas
xchg
inc
fcomip
push
jb
sub
inc
rcrb
pop
sahf
mov
pop
std
mov
adc
mov
fwait
imul
stos
sbb
xor
pop
fldenv
mov
inc
sbb
adc
lret
hlt
mov
inc
and
neg
outsl
rclb
loop
cmp
insb
cmpsb
frstor
stc
cwtl
movsb
jge
adc
mov
sub
std
dec
lods
or
jl
or
push
out
in
ret
or
mov
cmpsl
sub
add
pop
addr16
inc
add
and
mov
arpl
rcrl
mov
mov
dec
push
sbb
mov
iret
adc
pop
push
test
xchg
cmp
ret
mov
flds
cwtl
adc
jmp
sub
add
int3
mov
xor
movsb
loopne
fdivs
stc
das
fstps
or
inc
cltd
fnstenv
or
fs
push
mov
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
sub
fs
push
sbb
adc
sbb
sbb
cli
outsb
lods
mov
pop
repnz
negl
test
mov
inc
dec
lret
pop
rcrl
push
out
add
mov
stos
lods
jnp
cmpsb
popf
in
pop
and
dec
add
push
inc
xchg
mov
push
jae
cltd
int3
cmpsb
dec
test
stos
adc
jno
loope
aam
cmp
push
push
push
imulb
mov
ja
jno
cmpsb
and
arpl
cmpsl
scas
imul
cmpsl
push
lea
out
aad
lret
mov
fiaddl
pusha
dec
or
loope
imul
adc
push
iret
pop
clc
or
xchg
insb
xchg
push
mov
jg
jno
cmp
ror
dec
mov
or
mov
cmpsl
jbe
ds
cmpsb
dec
into
sbb
mov
xchg
xor
cmp
rorl
fs
pop
xor
jbe
ficoml
jo
rcll
js
mov
imul
arpl
mov
mov
mov
rorb
int
xchg
pop
xor
inc
stos
lret
aaa
js,pt
mov
sti
out
ljmp
ficompl
fs
jbe
mov
push
in
inc
ret
inc
in
fucomp
dec
fcomps
bound
or
push
ja
mov
lds
rcr
dec
mov
xchg
or
leave
stos
aam
jnp
call
push
ljmp
fwait
push
out
lret
jge
je
test
and
fadds
iret
shrl
lods
adc
jne
xor
fstpl
fldl
sub
mov
test
repnz
decl
xor
sub
and
mov
cmc
dec
loopne
xchg
inc
pop
cmpsb
xorl
mov
push
out
out
jmp
sti
clc
leave
outsb
les
lods
and
pop
lock
and
fwait
outsl
fldt
cltd
push
mov
cmp
andb
xor
fdivs
pop
sbb
or
push
adc
call
xorb
add
mov
jle
pushf
push
mov
sbb
fwait
arpl
cmpsb
dec
dec
dec
test
lret
cmc
jo
adc
mov
xlat
nop
xlat
mov
lcall
inc
jp
or
dec
push
jmp
mov
fisttpl
inc
jno
dec
mov
out
std
mov
jg
pop
pop
push
jne
sbb
pop
sbbl
sbb
sbb
rorl
mov
call
add
jno
jg
xor
adc
fsubrp
sahf
sbb
in
mov
in
mov
or
mov
jp
push
mov
insl
pop
adc
dec
and
rep
and
pushf
push
movsl
cmp
out
add
rcl
lods
fs
adc
psrlw
mov
or
and
call
ds
jp
pushf
mov
inc
lods
enter
shlb
rolb
add
push
pop
shll
sbb
dec
movsb
insl
or
push
fdivl
mov
adc
pop
ret
stos
mov
mov
jbe
cmpsl
and
xorps
or
push
push
je
pop
or
cld
and
rcrb
and
xchg
sti
int3
fsubrs
jl
mov
fwait
out
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
rol
jle
lea
sbb
adc
sbb
mov
int
cltd
das
add
and
jnp
leave
inc
jge
sbb
or
movsl
xor
or
sbb
and
cltd
fldt
adc
mov
jle
pusha
sub
mov
fmul
shl
xlat
out
clc
xlat
cmp
lret
je
aam
cmp
push
jne
jnp
xor
fnstcw
mov
mov
cmpb
incl
lret
pop
jp
outsl
pop
or
sbb
lret
sub
fs
mov
adcl
scas
imul
cmpsl
xor
xor
jge
ficompl
mov
int3
leave
sub
dec
rcl
cmp
dec
bound
inc
push
sub
cld
in
bound
or
fldt
dec
fcompl
popf
inc
or
iret
jae
jae
mov
dec
aaa
push
das
imull
push
push
nop
cld
xchg
out
or
popa
xor
cmpsl
fisubs
mov
or
fs
in
jb
dec
inc
int
add
into
sbb
jb,pt
pop
mov
push
add
imul
jae
shll
cmp
out
mov
aaa
stc
out
sub
push
add
movsb
dec
cmp
push
jmp
js
arpl
or
jne
lods
in
repz
bound
add
dec
stos
test
cs
cmp
lahf
pop
jle
push
in
push
sub
mov
scas
push
daa
pop
out
bound
loop
popa
xchg
or
pop
ljmp
dec
pop
pop
pop
xchg
push
aam
dec
dec
jo
movsl
int3
ss
push
pop
jae
bound
jbe
mov
jmp
sub
cli
mov
push
and
das
or
repnz
xchg
sub
push
push
pop
js
fcomi
lahf
xor
sub
mov
push
js
inc
jl
mov
pop
jle
mov
push
dec
jle
xor
add
inc
pushw
xlat
mov
mov
jge
push
std
je
and
repnz
xchg
mov
mov
pop
enter
pushf
sbb
cmp
mov
pop
andl
push
bound
mov
scas
sub
push
push
sbb
mov
jo
add
adc
lea
adc
mov
movsl
popa
xlat
sub
mov
lods
sbb
adc
clc
and
fisubrs
mov
fcmovnb
cmc
pushf
inc
pop
in
push
pop
in
enter
mov
in
dec
inc
inc
cmpl
jno
jecxz
xchg
or
push
in
pop
jl
push
mov
scas
in
and
adc
mov
push
aad
lahf
xchg
loopne,pn
pop
inc
add
scas
jmp
lret
inc
xor
mov
cwtl
nop
scas
xor
test
add
leave
dec
adc
lret
aaa
or
loope
sarl
push
lock
inc
xor
arpl
test
dec
stc
lods
sti
fiaddl
scas
mov
or
cld
shlb
fnstsw
loop
insb
jl
pop
inc
or
xchg
mov
sbb
cmp
or
or
nop
data16
jecxz
je
add
insb
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
xchg
xchg
jo
xchg
sbb
adc
sbb
jbe
cs
test
xorl
xchg
push
or
xchg
xor
ja
add
mov
and
out
cld
movsb
mov
pop
outsb
mov
outsb
mov
and
addr16
imul
and
aad
test
xchg
nop
inc
jecxz
push
addr16
loop
arpl
push
dec
jbe
lods
jne
fisttpl
test
jge
inc
cmp
and
sbb
push
rcl
sahf
clc
push
mov
out
mov
out
dec
mov
loope
inc
sub
std
sbb
mov
jp
notl
popw
push
mov
cmp
or
test
nop
fmuls
xor
fs
js
pop
mov
cltd
add
mov
and
movsl
mov
aas
icebp
lods
adc
daa
mov
divl
cmp
push
add
popa
xor
out
cmp
cld
jecxz
int3
push
dec
inc
int
insl
sti
xlat
shrb
cmp
scas
inc
push
mov
pop
test
scas
cltd
or
orb
loopne
insb
pop
mov
mov
movb
lret
add
pop
cld
jno
jae
jl
cmp
scas
mov
lock
shrl
mov
or
xchg
insb
out
cmp
addr16
xchg
icebp
rcrl
mov
call
cs
push
aad
ja,pt
insb
dec
ds
insl
mov
mov
dec
fiaddl
jl
hlt
lret
add
lret
cmpsl
pushf
es
mov
sub
jp
xchg
jns
gs
xor
fistpll
dec
fdivrs
and
sbb
lret
nop
loope
dec
dec
lahf
data16
jb
mov
xor
inc
call
aas
pop
loopne
in
js
add
insl
daa
bound
mov
pop
inc
fsubrl
rcrb
sarl
sub
push
sub
ja
pop
xor
cmpsl
push
add
inc
xor
mov
lods
adc
mov
cmc
cmpsl
sbb
push
das
add
stos
cmp
mov
int3
subl
popf
aaa
add
in
imul
sbb
lcall
mov
enter
inc
cs
lret
add
inc
cmp
sahf
jmp
mov
pusha
ljmp
push
loope
mov
jo
pop
andb
jae
mov
and
imul
mov
test
ret
and
jo
test
cltd
push
sbb
push
lods
pop
adc
out
pusha
mov
mov
adc
pop
or
adc
add
cmp
sarl
inc
sbb
xor
add
dec
movsb
mov
sbb
or
in
ljmp
jno
xchg
push
add
in
fmull
adc
and
fwait
jo
adc
pop
jg
les
roll
jbe
jae
mov
lcall
shr
xchg
mov
fnsave
les
pop
ljmp
jle
das
imul
fstps
mov
sub
js
cmp
mov
jecxz
scas
pusha
push
mov
pop
sbb
lea
dec
daa
push
sbbl
repnz
daa
dec
ret
fcmovnu
out
cs
and
sti
pop
stos
insb
push
rorl
pop
sbb
aad
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
or
cmpl
and
sbb
es
loope
and
lods
hlt
int3
push
dec
xor
js
lock
adc
jg
inc
mov
movsb
cmp
inc
mov
mov
enter
mov
jmp
enter
push
ror
push
xchg
xchg
enter
push
std
mov
sbb
imul
add
add
pop
push
xchg
cmp
push
test
lock
popf
mov
add
out
adc
inc
mov
sbb
jg
and
pop
sbb
or
mov
nop
je
sub
xchg
jmp
cmp
insb
and
dec
or
lret
subl
jns
in
arpl
xor
dec
mov
inc
lcall
dec
addr16
lods
aas
or
imul
in
in
aas
daa
lods
cmp
pop
aam
shlb
push
lods
in
xor
jnp
jecxz,pn
xor
test
push
fcmovnb
fbld
rorb
push
mov
lods
imul
cltd
sub
cmp
pop
dec
push
and
pop
out
cltd
insl
cli
aas
and
aam
icebp
lret
add
mov
dec
ficoms
jb
mov
or
sub
jl
mov
push
in
jb
jbe
add
mov
call
cmp
outsb
xchg
aas
sub
lds
jp
mov
jl
push
sti
push
sbb
add
pop
xor
idivl
sbb
jle
cld
push
or
rolb
cmc
out
loope
stc
inc
push
xchg
les
dec
dec
je
cmp
mov
jmp
xor
ss
push
inc
outsl
je
inc
mov
cli
cs
mov
sarl
mov
jnp
stos
insb
or
in
fstps
sub
sub
xor
in
mov
fnstcw
pop
jle
cmpl
mull
pop
xor
dec
test
pop
mov
rorb
sub
and
jns
imul
call
jns
ss
xor
popa
mov
ds
add
sbb
mov
push
divl
inc
mov
and
xor
mov
and
ret
pop
push
dec
add
bnd
cwtl
imul
jno
stc
jge
pop
ds
push
adc
imull
sub
jge
bnd
push
jne
sbb
dec
cmpsl
jmp
hlt
fsubl
insb
cmpsb
cmp
jne
mov
adc
les
xlat
gs
jns
sarb
xlat
jbe
jne
imul
iret
jmp
rolb
jnp
aad
in
mov
es
test
cmpsl
dec
mov
sub
pop
outsb
in
stos
stos
mov
push
mov
out
incb
gs
and
dec
out
mov
xlat
xchg
mov
or
aaa
push
cli
aas
cltd
loope
roll
cmp
addr16
push
fwait
dec
popa
out
dec
pop
sbb
add
cmp
jecxz,pn
add
or
push
sub
dec
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
call
jns
sbb
adc
sbb
xor
bound
scas
push
popa
in
call
iret
dec
cmp
jg
fidivl
loope
push
iret
cmp
ds
xor
jno
dec
mov
sbb
test
push
mov
shl
cmp
insb
or
xorb
gs
cs
mov
push
sub
repnz
fucom
lds
add
xchg
sbb
inc
frstor
lret
mov
xor
mov
or
test
loopne
movsb
icebp
cmp
mov
dec
sti
xchg
div
add
push
jg
sbbl
xor
sbb
imul
xchg
lret
nop
add
js
push
mov
stc
jns
sub
roll
mov
mov
mov
repnz
dec
stc
mov
xlat
test
stos
loop
jl
sbb
xor
aam
xor
rcr
cmp
inc
sub
xor
cmp
or
loope
inc
outsl
pop
xchg
out
ljmp
stc
ret
pusha
push
pop
movaps
stos
mov
inc
lds
cmp
test
es
inc
mov
mov
xor
sbb
es
push
decb
scas
ret
fwait
aam
in
pop
sqrtps
sti
out
jmp
imul
or
mov
ret
aaa
sbb
adc
out
xchg
fmuls
f2xm1
movsb
push
and
iret
and
lret
test
mov
test
mov
lret
das
insl
les
and
outsl
add
int
mov
dec
xchg
push
arpl
daa
das
mov
xchg
out
sbb
pop
ds
rcrl
out
repnz
loopne
cmpsl
loop
or
daa
xorl
lcall
sar
cwtl
dec
cmp
or
loop
jne
or
sbb
repz
pop
sbb
fistpl
sub
in
sti
push
mov
cmp
scas
sarl
fs
aad
insb
xlat
xchg
lret
ffreep
les
push
mov
jno
aas
scas
or
js
mov
push
cmp
rclb
loopne
out
mov
or
cmp
cmp
mov
js
pop
and
xchg
pusha
and
pop
inc
xor
or
pop
sbb
popa
sbb
or
jnp
das
and
out
jl
in
dec
repz
pop
push
mov
hlt
mov
push
movsl
fsts
insl
aas
aas
pop
iret
inc
icebp
mov
outsw
lods
pop
addr16
stc
add
fists
mov
repnz
xor
rol
mov
ljmp
pop
shll
sarb
call
repnz
and
imul
loope
sub
fldcw
rorb
div
cmc
jle
vmwrite
add
cmp
sahf
push
xlat
jg
and
clc
adc
add
mov
sbb
adc
jmp
outsl
mov
fnstsw
pusha
int3
imul
ja
xchg
and
popa
jl
je
dec
jb
cwtl
adc
or
in
mov
sbb
push
jns
adc
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
xchg
push
push
jno
sbb
adc
sbb
repz
sbb
jp
pushl
mov
into
shlb
movl
jae
js
mov
adc
cmc
mov
pop
test
outsb
sub
insb
ljmp
jmp
outsb
xor
lret
movsl
es
clc
mov
jp
adc
add
jb
add
stos
inc
push
sub
jmp
push
jecxz
xchg
and
pop
das
fs
hlt
popf
push
mov
loop
loop
test
or
and
push
das
bound
sub
lahf
cmp
icebp
jecxz
stos
add
roll
jg
ret
sub
or
or
js
mov
jnp
fldcw
fldl
mov
inc
inc
mov
ficoml
adc
int
dec
adc
pushf
scas
filds
sarb
jo
stos
loop
pushf
mov
jno
or
js
cld
add
addl
adc
cmp
mov
in
aam
cmpsb
enter
xchg
jp
je
sbb
es
mov
iret
fmull
pusha
jne
xor
lahf
or
or
out
pop
js
dec
popf
outsb
aaa
vorps
pusha
lcall
stos
xchg
push
jns
dec
repz
in
call
fistps
add
insb
jno
scas
rcl
push
movsb
fcoml
out
stc
stos
sbb
aam
fmul
jg
sub
mov
dec
popa
aad
in
testb
lcall
pop
repnz
mov
in
or
sti
stos
pop
add
or
mov
repz
lea
mov
das
xchg
lds
faddl
pop
jg
jne
jo
imul
adc
test
mov
pop
ds
and
jmp
lods
fld
in
mov
out
adc
pushf
je
pop
in
jmp
jge
adc
mov
nop
add
mov
iret
cmp
out
pop
aas
and
ja
mov
std
sbb
adc
dec
mov
stc
ret
in
mov
xlat
daa
mov
out
stos
mov
ret
adc
inc
loop
inc
aas
cmp
repnz
pop
aas
adc
push
inc
push
shll
jbe
mov
fldt
sbb
loop
loopne
subl
cmpsl
pop
jbe
mov
loopne
cmp
xor
xchg
mov
int3
ljmp
movsb
adc
fiaddl
pop
cs
in
push
fdivrl
push
ret
push
aas
mov
clc
ss
cmp
push
sub
cmp
fadd
jne
add
inc
orl
cli
pop
rcrl
push
jcxz
jl
push
cmp
jno
jae
ljmp
dec
icebp
or
jo
mov
and
dec
repz
sti
imul
addl
imul
lcall
cmp
ds
cmc
xor
out
mov
adc
mov
cmpb
lret
das
notb
out
repz
aam
ret
pusha
jns
cmp
repz
add
out
pop
test
push
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
jno
jle
imul
and
sbb
jp
testl
lcall
data16
das
int3
frstor
enter
rorl
in
fstpl
cmc
cmc
aaa
jge
push
push
xor
stos
popa
rorb
sub
mov
imul
inc
call
ss
pop
lahf
xchg
int
pop
and
stos
cmc
pop
mov
ret
lahf
adc
mov
out
mov
jge
rclb
fldcw
aaa
mov
jl
jle
js
pop
testb
mov
cmp
lods
jne
orl
dec
lods
dec
dec
sub
std
mov
loopne
xor
add
ljmp
out
sbb
and
lds
xor
into
add
imul
aam
sbb
cld
inc
insl
stos
into
pop
add
lods
jmp
cmpb
js
cmp
rclb
mov
dec
push
inc
push
lock
xor
or
pop
mov
sbb
cmp
pop
aad
add
subb
das
loop
mov
adcb
add
push
mov
dec
outsb
mov
cmp
lret
fildl
rolb
add
dec
add
mov
fcmove
pop
jo
imul
xchg
sbb
inc
pop
and
push
leave
mov
addl
jns
loop
pop
mov
orb
bound
mov
movsl
andb
in
or
xchg
jp
or
jbe
jne
lods
enter
jmp
mov
push
popa
cmp
js
clc
add
xchg
dec
aad
enterw
sub
scas
push
scas
xor
lock
push
sbb
jb
int3
icebp
cltd
push
mov
addr16
scas
push
loop
jne
mov
repz
cmp
xchg
fwait
cwtl
imul
mov
or
dec
mov
int
mov
mov
inc
gs
fsubrs
or
shrl
inc
pop
sub
fsubr
insl
ret
pusha
mov
vpaddq
sbb
cmp
jecxz
mov
lahf
xchg
into
pushf
frstor
scas
cmpsl
dec
pop
aaa
out
dec
int
notl
pop
mov
mov
jp
add
sub
or
movsl
pop
pop
push
scas
insl
jp
btr
push
testl
push
les
arpl
into
in
daa
push
js
pop
pop
insl
mov
outsl
mov
fdivrl
shrl
xchg
jae
andl
lret
xor
pop
lds
lea
lock
rcrl
jg
jo
nop
or
xchg
add
jge
jne
out
sbb
push
cmp
xchg
inc
test
mov
push
mov
mov
mov
out
test
inc
jle
out
rorl
loopne
les
sbb
sahf
pop
add
fs
sahf
leave
hlt
lret
ret
test
and
inc
adc
int3
xor
mov
lock
in
xchg
addb
jo
dec
inc
sbb
fwait
es
mov
repz
call
inc
sub
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
and
push
sbb
adc
sbb
sub
inc
out
xchg
xor
jo
xorl
lahf
or
pop
cmp
rolb
rolb
sub
mov
mov
in
ja
or
stos
loope
sbb
jl
inc
ds
sub
jg
out
divb
es
and
xor
mov
mov
mov
test
sti
and
sub
mov
das
fadds
jp
rcl
daa
lcall
sub
xchg
xor
jle
adc
push
fdivs
scas
fwait
incb
call
mov
scas
mov
jne
test
les
ror
fsubrs
or
xchg
add
stos
cmp
daa
xlat
push
in
cmpsb
iret
jb
mov
xor
fidivs
xlat
cmpsb
pop
mov
outsb
mov
inc
ss
movsb
shll
xor
dec
adc
ficoms
push
pop
xlat
adc
mov
xchg
lcall
cmc
lret
scas
adc
mov
lock
push
inc
mov
pop
mov
mov
mov
arpl
scas
imul
js
and
in
mov
inc
insl
scas
scas
aas
jle
test
loopne
mov
lahf
es
iret
or
enter
push
and
std
push
sub
lretw
push
mov
out
sbb
les
ret
std
add
cmp
adc
pop
call
pop
xor
sub
loop
stc
or
loopne
mov
inc
pop
pusha
cmp
mov
mov
add
sub
jg
dec
hlt
cmp
sub
jecxz
jo
fstps
pop
cmp
insb
cmp
jno
lock
and
dec
push
pop
xor
adc
and
jb
imull
cmp
sarb
ret
mov
rolb
adc
and
fs
fs
jmp
jge
push
dec
imul
stos
pop
mov
addb
jnp
mov
loop
xor
pop
cmp
lock
sub
adc
adc
insl
nop
test
mov
mov
adc
and
adc
roll
or
cltd
jge
scas
or
fstpt
cwtl
mov
adc
rolb
fs
sbb
ja
negb
jb
cmp
jae
in
dec
test
jo
lret
mov
stos
add
movsb
pop
sahf
xchg
lods
add
mov
jne
add
cmp
ljmp
ficompl
aam
ljmp
sbb
aad
vpminsw
xor
pop
roll
sub
adc
pusha
mov
pop
mov
mov
outsb
cmp
pop
mov
push
and
mov
imul
test
hlt
sbb
icebp
scas
add
nop
push
sbb
add
sub
adc
std
dec
out
fcoml
into
test
jb
cmpsl
test
inc
lds
mov
call
je
out
mov
js
mov
fcoms
faddl
add
inc
subl
or
mov
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
scas
mov
and
sbb
jno
mov
aas
fsub
ffree
sbb
adc
mov
add
xorl
jge
movsl
xchg
mov
adc
pop
xchg
in
pop
mov
daa
pop
jne
jbe
scas
out
cmpl
lcall
pop
xchg
xlat
and
outsl
mov
scas
popa
call
sahf
hlt
in
psubsw
ss
pop
std
lods
dec
adc
ljmp
cwtl
xor
dec
sbb
fistps
idivb
cmpsl
test
push
jp
shl
out
scas
sub
dec
xchg
mov
sbb
out
das
test
les
clc
scas
imul
and
jbe
mov
inc
jnp
mov
push
cs
lea
pop
cmpsl
or
aaa
pop
add
inc
or
cmpl
sbb
shl
jmp
push
maxps
sarl
in
repnz
div
in
pop
and
push
es
loop
gs
or
stc
push
pop
jl
or
jle
inc
push
lds
daa
das
imul
loopne
lods
xchg
outsl
lret
dec
adc
mov
rcrb
inc
pop
mov
pop
sub
mov
mov
stos
and
cmp
jnp
mov
frstor
sti
cmp
aad
sub
xchg
pop
andl
xor
iret
sahf
pop
push
push
scas
test
data16
sub
xor
mov
out
jle
imul
es
imul
cmp
sub
mov
jecxz
pop
pop
sbb
and
aam
arpl
jae
sub
fsts
orb
repnz
push
pop
jmp
pop
sub
sahf
imull
stc
xchg
aas
pop
sbb
subl
sbb
fdivs
stos
fstl
enter
inc
push
cltd
dec
lea
js
sbb
xor
pusha
xor
jbe
xchg
xor
imul
sub
inc
outsl
push
jne
pop
xor
or
ljmp
outsl
ljmp
imul
inc
cmp
and
sbb
mov
xchg
mov
mov
and
add
lahf
add
add
adc
fs
and
mov
pop
scas
incl
dec
fwait
mov
movsl
outsb
clc
das
pop
xchg
stos
mov
mov
imul
sahf
popf
dec
jno
notb
popf
jecxz
test
xchg
mulb
pop
dec
push
jecxz
std
int
mov
mov
inc
pop
in
mov
add
out
repz
movsb
das
test
mov
ja
in
mov
dec
push
dec
int
push
mov
rclb
cmpsb
ret
call
xor
test
adc
push
roll
xchg
addb
xor
mov
xchg
mov
dec
adc
iret
adc
and
cmp
mov
test
ret
in
dec
cld
jmp
inc
xchg
pop
mov
inc
arpl
cmp
push
inc
pop
pop
mov
je
mov
in
cs
adc
test
add
dec
sub
adc
imul
xor
lock
dec
push
mov
aam
pop
xor
imul
dec
and
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
xor
sbb
adc
sbb
xor
push
mov
xchg
mov
mov
test
xchg
push
xor
cmpb
test
shlb
adc
jmp
inc
xchg
icebp
xor
gs
cmc
jo
cmp
loop
sbb
push
lcall
push
lret
add
pop
mov
mov
inc
out
fldl
scas
aas
pop
paddsb
pop
std
lea
and
test
ds
cltd
scas
dec
sbb
test
jbe
xchg
ret
test
mov
stc
sbb
push
aad
or
sub
icebp
pop
aad
cmc
in
mov
lcall
xor
sbbl
unpckhps
repz
dec
cmp
and
shll
sar
es
icebp
push
into
pop
nop
notl
and
lods
cmpsl
push
insl
inc
sti
push
inc
adc
jo
fs
mov
idivb
mov
push
jp
mov
mov
sarb
lds
xor
mov
mov
mov
loope
adc
jecxz
insb
sti
mov
std
ds
dec
jmp
jl
adc
stos
mov
lret
pop
ret
popf
pop
add
add
mov
pop
lock
mov
mov
fsubrs
sub
scas
sar
inc
lcall
movb
dec
sub
insb
sti
fiaddl
call
cld
pusha
jbe
xchg
sbb
leave
or
fsubs
mov
pop
push
or
decl
xor
sahf
mov
adc
das
jg
jo
sbb
std
clc
andb
loopne
mov
mov
xchg
clc
xor
sbb
iret
lods
in
cmp
mov
xchg
jle
xchg
xchg
insl
sti
push
and
mov
sarb
add
xchg
adcb
push
or
adc
lret
or
pop
xorb
sbbl
movsb
jp
xchg
pusha
jnp
ret
ficomps
mov
test
addr16
into
fldcw
popa
ret
pop
mov
jl
cmova
cli
test
xor
adc
insl
movsb
mov
aad
mov
adc
push
imul
insl
ja
sub
mov
push
outsb
pop
rorb
fsubrl
xchg
pushf
mov
xor
pop
jg
jmp
call
fmull
push
push
nop
stos
hlt
out
pop
test
pop
rcr
cmp
mov
xor
sbbl
dec
add
loop
pop
mov
mov
shr
fldt
test
das
sbb
out
lds
rclb
das
add
adc
shlb
mov
outsl
filds
sahf
int
mov
mov
scas
fptan
cmp
int
lods
dec
dec
test
les
mov
mov
dec
jbe
or
inc
adc
mov
les
sbb
test
mov
jne
xor
out
cmpsb
cmp
sub
push
iret
pushf
out
mov
sub
jno
popf
or
sbbl
xchg
cmp
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
jmp
sbb
adc
sbb
dec
loope
xchg
push
xchg
outsl
lea
cmp
jo
ret
or
push
ret
jp
push
in
leave
jg
and
push
inc
mov
or
sub
stc
cmp
cld
adc
sbb
sahf
jne
and
and
incl
jge
ss
dec
out
add
aas
adc
cmp
in
cmpl
xchg
ss
pop
push
and
sub
adc
cltd
cld
mov
push
lods
xchg
lods
scas
mov
xchg
ds
mov
push
cld
xchg
faddl
test
cld
mov
dec
mov
cmp
inc
loop
aad
orb
inc
jnp
pushf
int
cmp
jno
arpl
mov
mov
pop
or
jecxz
and
adc
mov
outsb
xchg
test
negb
add
inc
or
or
push
iret
mov
pushf
aad
xchg
in
lea
pop
cmp
dec
ret
cli
pop
mov
rcl
xchg
push
push
and
lods
cmp
push
iret
imulb
cmpsl
push
into
pusha
cmp
sbb
mov
mov
enter
mov
and
xchg
push
stc
fcompl
jecxz
inc
mov
adc
lahf
insb
adc
sub
sar
adc
aam
mov
inc
int3
ret
out
ljmp
jecxz
sub
gs
rcrl
lahf
xor
cmpsb
jle
pop
testl
popa
pusha
jno
dec
cwtl
xchg
sbb
cmpsl
mov
add
sarl
pop
xchg
jg
cmc
push
dec
sub
pop
or
inc
js
pushf
add
mov
cmpb
rorl
movsb
lea
or
int3
and
mov
popa
leave
test
adc
imul
jge
inc
sub
lret
iret
inc
sub
xlat
in
insb
jno
data16
jp
scas
xor
aaa
bound
add
pusha
jecxz
lea
and
addr16
fistpl
mov
xor
lods
inc
or
test
add
aaa
sarl
in
jecxz
sti
mov
xor
and
icebp
mov
pushfw
dec
lock
adc
mov
dec
dec
cmp
aas
gs
lcall
mov
bound
out
sarl
test
fcomps
mov
insl
sbbl
pop
into
inc
and
pop
jmp
aaa
in
idivb
xchg
lods
ret
push
stos
shl
ficomps
jmp
sbb
out
add
push
or
pop
lret
or
int
inc
adc
lock
adc
pusha
into
adc
bound
sbb
xchg
sbb
cmc
add
movsl
add
dec
dec
cmpsl
cwtl
ret
fwait
icebp
add
jne
scas
dec
mov
pop
mov
dec
aas
xor
dec
xor
sti
push
ss
push
repz
and
jmp
movsb
add
icebp
stos
push
fisubl
lods
mov
test
fistl
mov
sbb
cltd
movsl
movsb
scas
je
scas
sub
push
roll
out
mov
dec
cltd
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
int3
sbb
inc
push
sbb
adc
sbb
sub
call
sbb
push
sbb
and
jg
xor
test
stos
ficompl
cmp
jg
ret
dec
ss
sub
ret
sarb
mov
cmpb
int
lret
ret
mov
pop
push
sarl
xchg
fwait
stos
dec
cmpsb
inc
aaa
lds
pop
fld
jle
xchg
outsb
xor
adc
test
out
ret
or
lock
add
mov
jmp
mov
xor
mov
in
push
pop
test
cmp
push
pop
xchg
out
inc
or
lcall
jbe
adc
sti
rorl
inc
inc
nop
cwtl
int
pop
rorb
jecxz
xor
sarb
sbb
stos
xlat
inc
aad
xchg
or
sub
mov
mov
mov
arpl
outsl
pusha
pop
mov
lret
clc
sbb
mov
cli
cld
ja
pop
repnz
push
mov
and
adc
or
aam
stc
mov
outsb
or
out
sti
mov
cmp
sbb
xchg
pop
sbb
pop
mov
sub
mov
xor
notb
add
in
mov
mov
scas
mov
pop
out
inc
cltd
inc
popa
jbe
xorl
mov
mov
in
testl
pop
mov
or
mov
clc
mov
mov
fcmovnb
out
sub
pop
mov
jbe
in
push
mov
mov
sub
orps
test
fidivrl
fstps
lods
mov
mov
shrb
pop
nop
mov
pop
pop
les
inc
xchg
imul
sbb
push
dec
mov
cmpsb
mov
add
mov
add
je
popf
mov
lahf
imul
lea
cmpsl
int
sbb
fistl
insl
hlt
scas
lock
gs
clc
jnp
xchg
fs
jl
fsubs
add
pop
out
or
jae
adc
outsb
in
sbb
push
std
aaa
scas
push
sbbl
cmp
xor
xchg
xor
mov
pop
or
xor
insl
pop
push
push
mov
sub
mov
mov
les
mov
js
mov
jmp
pop
and
cli
lret
aaa
adc
push
hlt
or
lock
push
inc
and
movsb
gs
mov
repnz
push
lret
push
or
push
push
adc
clc
pop
aas
or
pop
push
in
pushf
outsb
sbb
jp
add
push
rcrl
fdivrs
dec
ss
repnz
jge
addr16
jle
push
cli
dec
sub
xor
leave
mov
psrlq
das
pop
shlb
stc
mov
mov
xchg
adc
std
xchg
cmp
outsb
mov
jl
xor
and
addr16
aas
leave
xor
cltd
dec
push
fucomip
xchg
mov
aaa
mov
xor
jle
ja
add
sbb
arpl
nop
or
jno
jge
xor
iret
add
cmp
out
pop
loopne
adc
jg
rcrb
cmp
push
sbb
inc
shr
add
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
icebp
divl
sub
cmc
mov
out
pop
and
je
push
loop
call
mov
stos
cmp
outsb
push
bound
mov
shr
dec
cli
jg
cmp
cmpb
ret
enter
aad
scas
jns
jns
mov
jbe
fidivl
mov
cmc
test
lcall
pop
xchg
inc
xor
sub
jg
in
or
cmpsl
out
mov
pushf
cmp
insb
cmp
cmc
push
mov
popa
push
fldl
outsb
pusha
dec
xrelease
push
or
dec
out
lahf
pop
popw
mov
notl
xchg
into
inc
lcall
mov
or
jp
fs
sub
in
leave
jbe
jle
mov
dec
and
xchg
int
cltd
imul
and
lcall
jmp
jnp
sub
push
and
push
push
add
mov
jb
inc
imul
jge
scas
xor
mov
in
lcall
xorl
add
das
mov
push
adc
fmuls
push
mov
inc
js
lcall
xor
mov
lcall
into
das
and
xchg
xor
ret
and
test
scas
mov
mov
in
add
cmp
stc
sub
fildll
jg
or
pop
dec
lahf
xchg
mov
sti
addr16
sbb
orl
push
mull
lret
ljmp
and
ja
test
xor
iret
les
out
test
lds
pop
jge
out
pop
push
push
lods
sti
or
int3
mov
pusha
sub
or
mov
jb
or
pop
lahf
jge
dec
fsubrs
xlat
fs
cmc
cmp
fsubs
push
test
rorl
mov
fadd
mov
and
sbb
inc
xor
stc
cs
addr16
stos
fcomip
xchg
sub
mov
pushf
pop
sub
pop
push
lock
lahf
dec
ja
ficompl
or
sub
cli
jecxz
jmp
mov
mul
xor
dec
jp
test
xor
or
fs
pop
or
sub
test
pop
pop
scas
mov
sub
jge
fcmovb
cmp
test
bnd
rcrl
cmp
dec
out
test
pop
add
xchg
jne
cld
mov
std
xchg
ja
adc
mov
enter
andb
mov
sub
lcall
jmp
orl
sub
adc
insb
mov
sti
push
insl
loope
mov
mov
jmp
push
shl
xor
dec
jo
rclb
pop
xchg
mov
orb
orps
mov
mov
pop
stos
rcrl
fiadds
add
dec
push
mov
imul
stos
aad
fdivrs
dec
fcmovb
lock
adc
xor
xchg
js
jg
dec
subl
enter
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
push
cmp
sbb
adc
sbb
add
insb
xor
xchg
mov
pusha
or
jb
pop
aaa
jne
dec
dec
push
add
mov
adc
xchg
loop
cmpl
xchg
pop
incl
ja
dec
sbb
ja
clc
outsb
sbb
pop
push
jb
adc
sub
jp
daa
sub
lock
pop
jbe
or
stos
sub
xchg
push
test
add
xchg
inc
or
xor
mov
mov
ror
repz
push
and
inc
pushf
loopne
sbb
push
fstp
stc
mov
aas
and
sub
cmp
sub
outsb
jl
sti
int
push
ss
ljmp
imul
in
xchg
adc
push
adc
cltd
lds
jg
ja
movsb
sbb
xorl
int3
dec
mov
jle
neg
adc
xlat
add
cmp
add
mov
add
push
imul
fs
bound
mov
cwtl
popf
fisubrl
mov
inc
loopne
jno
rolb
push
in
xchg
test
xchg
jp
xchg
inc
jne
jne
stos
adc
rcr
push
push
sbb
jae
inc
pop
push
les
leave
pop
lcall
loope
movsb
ret
xchg
into
out
pop
push
mov
and
dec
xchg
ljmp
mov
xchg
xchg
subl
push
mov
cmp
cs
push
sbb
roll
mov
adc
dec
pop
pop
cmp
aaa
syscall
sbb
push
imul
xchg
stos
inc
xor
sbbl
das
pop
test
dec
out
adc
sti
in
fdivs
pop
or
lret
adcb
adc
paddsw
mov
lods
mov
data16
ret
add
sbb
fsts
mov
movaps
sahf
cmp
xchg
pushf
and
adc
lods
movsb
adc
std
jl
cwtl
ret
std
mov
out
arpl
xchg
pop
insl
loopne
adc
insb
xchg
inc
pop
add
push
add
inc
push
sub
sbb
icebp
inc
push
mov
mov
jne
lret
xchg
pop
inc
cmp
push
and
loop
cmp
nop
pop
push
ret
pop
xor
xchg
test
fwait
cmp
sub
aad
mov
shl
cld
push
push
sub
stc
cli
mov
call
lods
mov
or
push
jp
rclb
mov
and
push
insl
xchg
xchg
cwtl
outsb
mov
data16
or
jnp
fmuls
das
orb
insl
in
lock
ljmp
sbb
push
sbb
out
lahf
xchg
mov
xor
nop
rclb
xlat
mov
jnp
es
cmp
sub
inc
mov
inc
test
and
jb
xor
outsl
in
std
scas
sbb
rclb
inc
or
mov
call
lea
addr16
mov
inc
imul
pushf
mov
xor
mov
mov
mov
pop
inc
mov
sbb
or
jno
jo
test
and
inc
jle
into
jmp
sub
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
in
jo
xor
sbb
adc
sbb
xor
out
int3
cwtl
divb
rorl
or
inc
lret
mov
lahf
sti
sbb
adc
jg
lods
mov
leave
pop
push
adc
mov
add
insb
adc
into
jae
fadds
andl
xchg
lea
subl
push
push
les
mov
roll
xchg
cmp
fistpl
mov
les
dec
mov
jnp
mov
push
dec
mov
insl
and
push
dec
inc
test
imul
loopne
or
insb
xchg
sbb
sbbl
xchg
dec
mov
std
jge
and
dec
stos
sbb
pop
sub
inc
cld
lret
loop
dec
mov
inc
pusha
mov
js
fnstenv
inc
push
mov
xchg
rcl
std
in
jo
push
mov
push
pop
xor
mov
data16
out
mov
rolb
mov
cmp
leave
xchg
dec
int3
mov
dec
iret
jmp
xor
sbb
cmp
lcall
jo
xchg
aad
aam
dec
sub
push
shrl
lret
dec
push
lock
dec
stc
cmpsl
icebp
int
roll
xchg
hlt
xchg
sbb
fidivrl
fsts
pop
adc
hlt
sub
inc
sarl
scas
adc
in
loope
mov
pop
push
in
adc
mov
les
aaa
cwtl
dec
pop
cwtl
in
ljmp
add
push
fdivr
inc
xor
sub
aad
mov
inc
mov
mov
mov
mov
clc
fwait
jae
mov
mov
pop
inc
mov
lea
std
stos
jl
das
rcl
insb
inc
je
mov
dec
rolb
test
mov
adc
scas
repnz
and
fildl
inc
sub
inc
inc
ret
adcb
sub
xor
neg
sub
inc
cmp
mov
jg
aas
gs
aas
iret
inc
push
idivl
adc
adc
aaa
lahf
scas
mov
je
lret
and
sbb
arpl
sub
jg
sti
popf
xchg
jae
or
ds
out
pop
jg
clc
jge
addr16
icebp
inc
sbb
loop
push
sub
jnp
xchg
enter
fsubs
nop
adc
ljmp
mov
loope
xor
fadds
jbe
popa
cmp
sub
xchg
mov
push
and
or
or
bound
pop
inc
sub
inc
xchg
loope
adc
mov
inc
add
gs
out
inc
push
pcmpgtw
addr16
mov
and
mov
add
mov
jnp
and
jns
mov
sbbl
les
xor
or
fmull
sahf
add
cmp
mov
xor
loop
sub
ss
sti
ret
imul
std
in
inc
hlt
add
cmp
cli
push
jbe
or
mov
lds
jl
or
iret
sar
pop
or
jl
mov
xchg
sbbl
cmp
mov
push
loop
jno
imul
or
push
push
daa
mov
jg
sub
in
mov
imul
mov
ret
and
enter
inc
nop
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
fstpt
sbb
adc
sbb
mov
out
and
lret
dec
fsubrp
push
loop
mov
xlat
adc
pusha
xchg
jge
inc
xor
orl
mov
out
les
sbb
idivl
out
cwtl
hlt
sbb
jmp
push
loopne
xchg
cmpl
lret
push
add
jmp
inc
cli
mov
sti
cmc
inc
out
andb
idivb
mov
imul
loop
les
cmp
jne
mov
dec
jbe
and
xor
jp
clc
outsb
mov
lcall
jo
jp
push
xchg
xchg
inc
push
or
stc
or
int3
sbb
leave
push
das
pminub
aam
out
lods
imull
xchg
mov
sub
rorl
dec
test
in
dec
mov
out
and
adc
sub
pop
je
push
pushf
ret
jecxz
add
mov
mov
aaa
xchg
push
subb
and
mov
adc
out
mov
in
insl
cmp
shll
sti
pop
popf
pusha
cli
in
bound
lea
dec
mov
sahf
test
outsb
cmp
enter
mov
std
clc
add
jae
mov
outsl
aas
ja
into
inc
push
add
mov
cli
adc
es
test
test
inc
mov
jnp
adc
jo
aas
in
xor
call
sti
test
mov
add
sbb
inc
lods
xor
and
iret
lods
shr
andl
push
cmp
sbb
je
into
mov
movsb
in
mov
scas
fcmovb
ss
fstl
rorl
out
nop
cmp
dec
lret
jle
and
stc
xchg
je
imul
loop
cwtl
inc
addr16
int
int
jns
jg
cmpsl
imul
mov
inc
fsubrl
dec
inc
sbb
hlt
push
stc
push
cld
jle
rclb
jae
negb
mov
sub
push
xchg
outsl
xchg
push
xor
cld
jmp
adc
cmp
rcll
lret
enter
inc
dec
int3
jbe
mov
in
adc
inc
mov
test
in
jmp
std
xchg
mov
mov
test
fstl
pop
in
and
mov
cmpsl
xchg
aad
ja
push
out
imul
jne
push
pop
xlat
mov
sub
mov
lcall
jl
pusha
outsb
push
ljmp
in
outsb
into
mov
roll
mov
add
mov
cld
jo
push
jb
push
push
loope
jmp
inc
js
iret
adc
cld
jge
or
cs
mov
sbb
aam
not
and
rclb
pop
push
ret
sbb
jmp
cmp
into
cmp
repnz
xor
icebp
mov
in
es
daa
jo
sub
scas
jmp
push
and
fwait
call
jmp
ds
lea
dec
cmp
mov
stos
cmpsl
lret
push
hlt
sbb
mov
push
lret
mov
cltd
mov
jo
fwait
xor
in
and
lahf
adcb
dec
sub
lcall
mov
bnd
add
dec
mov
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
hlt
push
and
sbb
pop
jmp
sub
imull
jp
aaa
and
test
jns
pop
push
push
xorb
ss
in
leave
jp
rcll
pop
ret
inc
in
idivb
repz
mov
fcompl
fsubrs
mov
mov
outsb
sti
fwait
dec
addr16
xchg
in
aaa
aaa
repnz
pop
clc
mov
ds
mov
sarl
or
and
push
jmp
cld
pop
inc
in
pop
sub
in
dec
andb
sub
mov
fnstenv
xchg
dec
scas
insb
stos
das
cltd
jb
loopne
lahf
push
cmp
lcall
mov
jg
push
jbe
test
pop
cmp
xor
insl
mov
push
push
sub
stos
addl
jno
and
dec
dec
jmp
ret
jno
dec
bound
jns
mov
sub
or
aas
cmp
aad
pop
enter
insl
cs
roll
add
ficoms
and
pop
sub
mov
mov
sbb
pop
and
aaa
scas
mov
add
movsl
mov
mov
xor
test
outsl
sub
popf
sub
cmpb
insl
xchg
lods
pop
in
mov
aaa
fisubrl
mov
xchg
sti
lock
mov
cld
iret
shll
and
mov
jp
lret
ror
mov
insl
add
mov
mov
pusha
rcll
sbb
xchg
sub
icebp
jae
movsb
mov
ficoml
mov
adc
movsl
loopne
shl
sub
push
rorb
addr16
mov
lahf
ret
lods
mov
jmp
mov
push
mov
adc
pusha
xchg
pop
inc
aas
cmp
or
shrl
and
adc
das
movsl
bound
add
fwait
jb
inc
jg
into
xchg
and
or
xchg
mov
or
inc
gs
sti
xchg
iret
xchg
jmp
icebp
aaa
jp
pushf
test
shll
nop
je
sbb
outsb
lea
sub
out
iret
ret
adc
scas
sub
iret
aas
jb
aas
andb
sti
sbb
pop
mov
adc
mov
enter
in
adc
mov
pop
out
xchg
stos
dec
gs
or
test
ja
stc
adc
pop
test
leave
pop
mov
outsb
fs
insb
sub
adc
fdivl
push
pop
adc
call
or
sbb
testb
adc
outsl
jecxz
adc
sub
and
and
fs
loopne
mov
int3
dec
jbe
iret
mov
mov
inc
add
inc
insl
mov
arpl
sarb
les
mov
xor
pop
sbb
xchg
mov
mov
test
sbb
stos
jmp
xor
clc
test
inc
dec
mov
dec
enter
pop
orl
daa
into
and
loop
mov
adc
mov
push
xchg
cmpsb
in
testl
loopne
bound
cmpsl
out
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
mov
sbb
sbb
clc
int
mulb
inc
sahf
dec
pop
sbb
jns
cld
fucom
daa
popa
dec
je
xor
outsb
push
jge
push
sbb
lods
imul
mov
inc
push
push
nop
mov
xchg
inc
xor
mov
lea
stos
test
dec
ss
jle
pop
inc
jge
insb
jmp
xchg
aaa
repz
bswap
cmpsl
ss
pop
fdivrs
or
les
pop
inc
int3
push
enter
fcoml
stos
addr16
jne
das
loope
inc
iret
push
pop
out
leave
bound
fidivrl
and
cs
mov
xchg
push
lods
dec
and
lds
and
into
adc
ret
sub
lods
add
jge
push
dec
fadd
in
shll
push
ss
fcmovnbe
cmp
jbe
loop
icebp
int
jbe
jne
mov
sub
call
push
and
push
pop
mov
movsl
mov
cld
or
push
add
popf
lcall
loopne
or
loope
enter
mov
inc
stos
sahf
fadd
inc
clc
loope
push
mov
shlb
icebp
nopl
fisubrs
rol
pop
hlt
pop
adc
cli
lret
lahf
fbld
jg
and
jno
lcall
jb
push
sbb
inc
adc
or
or
ror
das
popa
xchg
bound
inc
lret
scas
fwait
and
sbb
cmpsl
cmp
sbb
mov
adc
pop
sbb
in
fimull
int3
and
push
fisubrs
push
std
vcvtss2sd
pop
jl
in
xchg
xlat
mov
mov
enter
cmp
mov
and
in
das
xor
mov
and
push
sbb
xorb
das
lds
xor
pop
and
mov
pop
ret
pop
sub
dec
jecxz
mov
popa
adc
cmpsl
popf
fisubl
dec
mov
push
xor
jmp
inc
imul
xchg
jmp
enter
push
subb
test
push
out
xor
or
fsubrs
insl
fdivrs
in
mov
rcrl
and
mov
push
dec
fidivrl
shll
sbb
mov
sar
ror
outsl
jle
mov
in
sti
cmpb
sbb
jecxz
xchg
xor
insb
testb
xchg
jmp
mov
les
cli
lds
int3
dec
mov
outsb
mov
shll
push
out
dec
fisubl
imul
mov
loop
add
call
jge
test
jmp
popa
cmp
jl
xchg
sbb
repz
lea
and
jl
xor
xchg
je
fninit
push
xchg
gs
out
pop
push
pop
sbb
xchg
mov
bound
pusha
jae
pop
sahf
mov
iret
xchg
notb
in
pop
loopne
negl
outsl
jl
aaa
out
mov
xor
pop
xor
outsb
es
arpl
stos
cli
inc
sbb
js
mov
mov
sbb
mov
iret
push
jne
inc
sub
mov
adc
test
sub
sub
rcrb
in
dec
sub
mov
xor
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
mov
pop
push
sbb
adc
sbb
push
orl
leave
jp
lods
sbb
aaa
jecxz
imul
and
add
or
clc
sub
loopne
push
push
xchg
add
js,pn
sti
ljmp
mov
pop
jmp
adc
mov
imull
adc
xorb
dec
push
cmp
ffreep
lods
pop
mov
xor
sbb
mov
jl
mov
mov
inc
bound
shll
sub
je
addb
mov
lods
lock
xchg
es
stc
inc
mov
aas
sti
js
cmp
add
lcall
pand
add
xlat
sub
cmp
cmp
push
repnz
add
mov
mov
sub
inc
ja
push
push
in
in
cld
fwait
aad
outsl
mov
or
inc
push
jb
repz
mov
mov
ret
sbb
mov
stos
add
pop
mov
ds
mov
into
xchg
dec
jl
imul
or
rclb
xlat
aaa
dec
and
test
ret
clc
pop
mov
cmpsl
popf
stc
leave
mov
mov
test
mov
mov
cs
aaa
sarl
daa
int
or
inc
mov
xchg
bound
test
and
jnp
ja
jle
push
faddl
dec
int3
or
mov
cmpsl
lret
pop
add
stc
and
sar
stc
aad
sub
sub
jmp
pop
push
push
orb
sub
cwtl
movsb
es
adc
xchg
push
cwtl
cli
add
or
in
add
mov
addr16
mov
mov
mov
sub
aad
repnz
xor
test
es
jnp
and
mov
lds
fcmovnu
and
add
jb
lahf
mov
std
popa
adc
adc
mov
sub
popa
push
sbb
sbb
in
mov
hlt
cmp
lahf
mov
leave
or
mov
sbb
sbb
aad
cmp
mov
dec
jle
stos
mov
and
adcb
movsl
shlb
cmp
aad
orb
mov
xchg
xor
mov
mov
dec
mov
aas
push
pusha
xchg
rolb
mov
js
nop
mov
cli
iret
fcomp
mov
mov
pop
inc
icebp
cld
loope
xchg
dec
xchg
xchg
ret
and
fldt
adc
mov
imul
jp
xchg
jge
adc
loop
jns
pop
lods
addr16
xchg
std
add
je
mov
and
nop
add
pushl
dec
pop
fbld
leave
shr
pop
in
mov
jmp
push
aad
fcmove
stc
incb
test
mov
into
mov
mov
xlat
int
call
rcl
stc
outsl
or
inc
add
out
mov
popa
lahf
sbb
lahf
or
mov
mov
sub
dec
je
xchg
shlb
enter
repnz
repnz
roll
sbb
fs
adc
sti
mov
cmp
aam
fisubl
es
ficomps
addr16
adc
mov
mov
bound
icebp
lcall
stc
lcall
test
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
fbstp
sbb
adc
sbb
jl
testl
dec
fucomp
pop
mov
in
mov
pop
test
cmc
test
mov
enter
in
mov
jp
imul
cli
cmp
sub
sarb
push
adc
ret
inc
sub
lahf
inc
sub
div
dec
jmp
aaa
sub
pop
pushf
dec
and
aad
push
scas
xchg
mov
ljmp
scas
cmc
arpl
adc
jg
inc
sbb
add
or
ljmp
stos
movsb
hlt
std
fisubl
sbb
loop
in
or
xchg
iret
jge
jecxz
scas
mov
mov
sub
dec
sbb
add
sbb
pop
sub
imul
jbe
xor
xchg
push
jp
incb
add
add
dec
dec
hlt
fwait
das
mov
outsl
sub
jmp
fstl
cmp
mov
cld
outsb
iret
mov
xor
xchg
push
and
outsl
jbe
xlat
dec
jl
jge
fiaddl
pop
sub
push
ds
sbb
fnstcw
sub
xchg
out
lret
push
push
sub
inc
inc
out
arpl
loope
repnz
nop
decb
adc
mov
out
xchg
insl
sbb
jmp
test
mov
lds
push
xlat
sbb
mov
repz
pop
les
clc
cmp
mov
movsl
stc
mov
xor
ss
lret
mov
sbb
arpl
mov
and
add
jne
inc
cld
nop
out
cmp
xor
xor
sub
in
cmp
cmp
mov
popf
movsb
fs
push
ljmp
fchs
mov
fldl
andl
xor
xor
popl
dec
mov
inc
mov
cmp
xor
pop
inc
cmc
or
dec
sahf
lret
inc
aad
inc
sbb
mov
jg
mov
jae
lds
cmp
or
test
adc
call
fsubrs
lock
scas
mov
jge
sarb
dec
into
cs
stc
out
pop
arpl
je
pop
test
pop
sub
in
jg
loopne
out
pop
mov
call
mov
popa
sub
sub
aad
jmp
cmp
or
push
push
adc
shl
mov
pushf
xchg
sub
sbb
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
addl
fiaddl
add
xor
add
in
add
push
nop
add
cmp
add
push
mov
add
add
add
add
add
int3
mov
add
add
sub
add
add
add
fimull
add
sub
add
orb
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
adc
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
sub
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pushf
and
add
es
add
sub
xchg
and
add
inc
add
inc
add
inc
add
es
add
inc
add
es
add
push
movsb
scas
or
movsb
lods
es
add
add
inc
add
add
inc
add
daa
inc
add
es
add
inc
add
inc
out
adc
inc
add
inc
add
xchg
mov
add
inc
add
rcl
pop
bound
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
nop
and
add
inc
add
add
add
lret
xlat
movsb
das
dec
add
mov
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
push
addl
push
addl
push
addl
addl
addl
addl
addl
inc
addl
dec
addl
push
addl
ljmp
add
addl
cli
addl
add
inc
add
addb
addb
addb
addb
addb
addb
addb
js
add
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
cmpsb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
add
sub
add
dec
xchg
add
add
add
jl
add
mov
add
test
add
mov
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
xchg
add
add
pop
xchg
add
add
jle
add
mov
add
scas
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
xor
add
push
mov
add
add
outsb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
add
add
pop
mov
add
add
test
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
add
pop
mov
add
add
orb
add
add
loop
add
repnz
add
mov
add
add
and
add
dec
mov
add
add
push
add
orb
add
add
aam
add
ljmp
add
add
mov
add
add
dec
mov
add
add
insb
mov
add
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
