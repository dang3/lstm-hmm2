push
mov
sub
mov
jmp
incl
shlb
fs
inc
jle
jle
cwtl
jg
jle
xlat
cmp
rol
pop
add
push
ja
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
lret
jle
dec
pushl
mov
add
bound
lods
jg
aas
or
shlb
nop
in
testl
jb
pop
jg
mov
inc
mov
ljmp
or
push
cmc
aas
jbe
loop
sbb
sarb
add
repnz
cld
sarl
cmp
xchg
cmp
fstpl
mov
cmc
sub
icebp
xlat
jbe
push
pop
and
or
mov
cmp
stc
xchg
xor
and
jo
stos
cmp
xor
scas
and
xchg
sbb
adc
and
xor
lds
and
inc
out
mov
pop
cs
or
aam
push
add
mov
pop
mov
inc
mov
bound
mov
jno
test
fsts
push
dec
pop
or
adc
jl
jb
fstpt
and
add
pop
in
sbbl
cmp
add
fadd
dec
add
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
mov
loop
out
xchg
ja
cmp
dec
pop
cmp
mov
cmp
mov
movsb
int3
pop
arpl
in
adcb
iret
dec
cwtl
or
xor
repz
call
mov
xchg
mov
icebp
mov
push
adc
mul
ret
idiv
das
mov
sbb
or
sub
jb
out
rcll
mov
push
inc
pusha
fsubs
jge
movsl
js
std
or
lret
fidivs
sub
dec
scas
lods
cmp
xchg
cmp
add
mov
jp
xchg
popa
stos
roll
cmp
push
jne
fld
mov
adc
inc
aaa
scas
pop
xchg
out
call
cli
std
xchg
pushf
shll
jbe
mov
into
je
or
or
and
mov
outsb
add
cmp
jg
ja
adc
data16
scas
enter
jns
sbb
lods
pop
mov
rorb
rorl
test
sub
push
mov
nop
lods
es
lcall
xor
mov
icebp
jne
sbb
scas
sub
and
dec
ds
arpl
xchg
jnp
fwait
push
and
cltd
in
es
pushf
in
mov
and
mov
sbb
out
in
cld
loope
sbb
leave
sbb
rcrl
ret
sub
lahf
lods
jno
pop
pop
pop
jns
int3
repz
bnd
jno
cmp
movsb
fsubrl
pop
push
mov
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
add
cwtl
jg
jle
add
addl
mov
push
leave
daa
out
mov
and
push
sub
pop
lcall
lcall
xchg
test
in
bt
into
paddusw
int3
adcb
add
loope
xchg
adc
xor
sub
xchg
push
sub
sbb
ret
cmp
pushf
dec
cmp
sub
adc
insl
aad
adc
sahf
test
sbb
leave
pop
int3
and
fldt
test
cltd
jns
cli
lcall
bound
bound
out
bound
notb
dec
stos
pop
outsl
shll
xchg
push
or
cmc
lcall
ss
and
int3
fbld
call
insl
mov
pop
cmc
xchg
and
mov
xchg
add
int3
add
in
sarb
icebp
cmc
inc
xchg
jl
xchg
lods
add
pop
mov
and
mov
mov
lock
arpl
mov
xchg
lds
movsb
subl
idivb
insb
call
sbb
mov
out
jge
push
mov
xlat
scas
mov
aad
sub
jle
dec
push
pop
pop
mov
jecxz
insl
add
xchg
mov
fcmovb
and
and
pop
jbe
cltd
mov
cmp
mov
mov
sbb
lods
lods
or
add
jmp
call
insb
outsl
push
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
pop
jns
jo
jp
jle
jg
jle
cwtl
inc
adc
xor
mov
notl
lods
push
add
out
jae
xchg
and
pop
cwtl
xor
nop
lea
iret
pop
mov
adc
loope
push
and
xchg
jle
fnsetpm(287
pop
outsb
adcl
out
sbb
fstpt
inc
sarl
stc
rol
cmc
push
mov
pop
mov
mov
fs
mov
sub
test
mov
jbe
cli
dec
inc
fldcw
repz
or
lock
mov
sti
imul
mov
mov
test
loop
xchg
or
pop
sahf
lret
dec
das
push
repnz
ja
std
jne,pt
add
mov
jg
mov
push
push
fildl
repnz
sarb
cmpsl
jg,pt
xor
lahf
push
repnz
mulb
je
out
push
test
fs
movsl
mov
out
xlat
mov
aam
sti
pop
mov
fiadds
test
ss
sub
idiv
inc
sbb
push
call
popf
std
orl
inc
arpl
cs
stc
dec
das
movsl
add
lods
stos
jecxz
xor
insb
in
test
xchg
xchg
push
fmuls
adc
bound
les
mov
adc
shrb
xchg
push
pop
dec
test
sti
aad
push
cmp
das
imull
pushf
mov
xchg
out
cli
adc
inc
pop
dec
decb
iret
push
jnp
jns
adc
shrl
jl
fdivrs
stos
jmp
add
add
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
pop
or
lock
lahf
pusha
stos
jge
je
jbe
jns
xchg
sub
jns
lea
iret
in
and
lcall
leave
jl
pop
insl
mov
loopne
push
imul
lcall
out
stc
cld
cvttps2pi
mov
push
rcrl
dec
inc
cmpsb
dec
fwait
rclb
and
repz
mov
ret
sbb
jbe
sbb
call
sub
and
xchg
movntps
leave
xor
out
mov
dec
fucomi
orl
sub
in
mov
pop
push
aad
out
roll
fiaddl
sub
cmp
adc
push
dec
push
mov
sbb
outsl
dec
pop
xchg
test
push
jne
icebp
push
mov
cmp
sbb
fists
dec
dec
gs
mov
in
add
into
lods
jge
inc
xchg
pop
pop
insl
pop
movsl
pop
rcr
pop
scas
jbe
xchg
add
mov
fidivl
pop
icebp
pop
sarl
in
sbb
xchg
stos
push
adc
sbb
daa
or
js
jl
movsl
shrb
cmp
mov
scas
mov
fadds
xchg
mov
ret
inc
inc
in
push
ret
cmp
adc
in
insl
leave
mov
cli
xor
xchg
mov
dec
sbb
in
adc
push
loopne
bound
js
pop
xchg
and
out
fistps
mov
pop
sbb
nop
jmp
dec
pusha
jnp
adc
cmp
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
adc
xor
cwtl
jg
jle
add
pushf
inc
je
jb
ret
lods
sub
cmp
js
cmc
outsb
fs
fmul
inc
adc
addr16
mov
adc
xchg
out
stos
loope
mov
add
fsubl
push
dec
mov
out
std
sbb
push
lahf
subb
cmp
stos
ret
cwtl
ret
sbb
push
test
es
insb
rcrb
pop
rcr
mov
and
movl
leave
loopne
jno
movsl
and
das
iret
mov
jns
lcall
sbb
aam
push
push
sbb
sbb
lock
or
fidivs
cmp
or
inc
xchg
mov
aaa
cmpsl
fsincos
or
xchg
xchg
mov
fstp
sub
test
mov
cmpb
xchg
ljmp
mov
in
test
mov
ret
test
insl
mov
pop
daa
adc
fwait
mov
mov
xchg
push
jle
pop
loope
stos
add
daa
adc
fcomip
add
xlat
mov
xchg
nopl
flds
arpl
or
mov
fwait
dec
pushf
icebp
imul
cmp
nop
inc
dec
lret
jle
ss
and
sahf
out
add
push
xor
pop
inc
popf
adc
mov
inc
loopne
je
arpl
add
cs
push
fidivrs
mov
xor
int
sub
mov
jp
lock
sub
int
cmp
cmp
cli
imul
in
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
push
popa
stos
lods
pop
pop
jle
cwtl
jg
jle
shrl
aaa
lcall
shl
shll
idiv
sahf
jo
andb
mov
jbe
shl
and
mov
mov
stos
imul
inc
xchg
scas
ret
push
movsl
lret
shrb
nop
sahf
fcoml
seta
mov
js
sub
inc
ret
inc
out
cmp
dec
mov
mov
add
and
and
shl
lcall
adc
out
data16
in
lods
xor
mov
addl
cmp
out
cwtl
inc
cs
adc
sub
fcmovne
pop
adc
mov
push
out
jb
out
jp
testb
test
lret
mov
inc
xchg
push
sub
cmp
js
xor
dec
mov
sub
pop
fisubrl
mov
pop
and
sbb
loope
aad
aas
sbb
push
cmp
xor
lods
icebp
js
jb
call
adc
sub
fidivs
shlb
fdivrp
cmc
lods
out
add
loopne
add
sti
pop
mov
sub
testb
cwtl
insl
pushf
imul
ljmp
jl
mov
xor
adcb
ss
jle
adc
stc
and
dec
scas
pop
adc
popa
fidivrl
shlb
mov
adc
out
mov
decl
jbe
cmp
inc
adc
and
adc
es
ja
nop
cwtl
mov
test
stos
pushf
shll
cmp
repz
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
scas
std
fnstsw
test
jle
je
lret
or
lret
adc
mov
add
sub
xor
jp
pushf
and
and
aas
subl
sbb
ja
cmp
out
sub
or
xchg
lods
mov
adc
pop
pushl
sbb
adc
push
jb
inc
xchg
mov
xor
jge
pop
into
xlat
std
imul
dec
jmp
xchg
sahf
and
pop
fiaddl
mov
ret
mov
dec
mov
out
mov
mov
jo
sbb
das
dec
lahf
test
lretw
xchg
xor
inc
shrl
das
mov
aad
mov
mov
insl
dec
shufps
inc
fidivrs
mov
repz
fucom
mov
push
sub
sub
xor
pop
addr16
and
push
jo
mov
loope
jmp
stos
mov
push
pop
stc
inc
leave
lahf
mov
imul
or
sbb
mov
loopne
sub
mov
xchg
sbb
les
outsb
stos
scas
lret
out
cmp
nop
pop
cmp
mov
fsts
push
and
cmp
out
mov
xor
leave
aaa
xchg
cmp
clc
insl
cmp
or
adc
insb
out
cmp
jo
ss
lahf
push
pop
imul
fildl
mov
icebp
add
orl
mov
dec
pcmpeqd
mov
repz
push
jns
aaa
push
repnz
jbe
and
adc
scas
dec
stc
sbb
jecxz
sub
rcll
push
popf
or
jg
lret
cmp
div
adc
jnp
sbb
push
pop
js
jo
rcl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
cmc
or
fildl
jle
push
jg
jle
cmpsl
pop
sbb
pusha
es
cmpsl
das
loop
pop
sub
pop
pushf
mov
xor
and
inc
sub
sbb
mov
int3
push
inc
dec
pop
jnp
mov
testl
pop
subb
mov
ss
sub
cmp
adc
or
int
lret
aad
lods
jle
lret
adc
lds
xchg
bound
pop
pop
jge
cs
lss
jo
jl
int
pusha
push
lret
fsubl
cltd
cmc
adc
push
mov
rep
lcall
fs
adc
jp
fs
push
fs
insb
dec
cmp
idivl
push
mov
outsl
imul
mov
sbb
daa
loop
jmp
mov
inc
mov
in
inc
push
dec
les
mov
and
mov
out
fwait
xor
outsb
xlat
popa
cmc
sbb
jnp
movl
add
lods
in
xlat
mov
mov
div
adc
dec
popa
inc
jns
sbb
cmp
inc
in
sbb
pusha
mov
pop
sbb
push
je
cwtl
inc
or
or
mov
cmp
dec
cli
mov
and
xchg
out
cwtl
sub
mov
xor
mov
xchg
and
push
sbb
and
pop
stos
xor
push
or
jbe
fwait
les
loope
scas
pop
ja
add
fcompl
and
orl
xchg
jl
test
rclb
jg
pop
adc
lock
add
jg
lret
push
or
jg
rolb
pop
adc
jp
in
call
dec
in
inc
add
xor
add
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
mov
jle
jg
jle
clc
jg
add
dec
popa
in
mov
nop
and
and
in
idivl
inc
mov
and
fidivl
dec
cld
pushf
mov
xlat
sub
xchg
xchg
sub
add
pushl
aas
mov
test
out
mov
stos
dec
pop
mov
enter
notl
or
fadds
insb
and
dec
push
sub
mov
push
cmpsl
jp
rorl
daa
orl
and
arpl
xchg
arpl
push
daa
inc
in
inc
mov
add
sbb
xchg
pop
push
cmp
pop
push
and
imul
or
jle
out
mov
sbb
aad
push
xchg
movsb
jmp
cld
negl
push
shll
ror
movsb
arpl
or
hlt
cmpl
xor
imul
insl
jns
je
inc
jmp
dec
dec
cmpsb
in
loopne
loop
lahf
out
cmp
cmc
jle
out
sub
lods
loopne
popf
pop
call
jns
outsl
mov
test
in
mov
pop
daa
call
push
mulb
cmpsb
push
enter
gs
push
ds
push
lret
mov
out
pop
jecxz
loope
inc
add
pushf
add
sub
jbe
dec
fs
sub
mov
mov
xor
popa
lcall
and
mov
xchg
scas
jo
mov
fsubl
icebp
xchg
mov
jge
fstpl
insb
dec
push
mov
xor
jne
mov
or
push
cmp
repnz
pop
mov
js
jg
pop
sahf
aam
cmp
jo
notb
xor
push
mov
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
adc
inc
adc
jg
jle
call
je
cmp
and
jne
jle
nop
loope
jbe
inc
lods
dec
ficoml
scas
push
fimull
push
sti
in
out
into
mov
daa
pusha
lods
xchg
lea
ret
adc
push
int
inc
jo
xchg
ret
jns
mov
mov
or
cld
cmp
les
cmp
push
push
pop
push
mov
adc
outsl
in
inc
int
push
clc
pop
out
insb
addb
mov
xor
aad
loop
test
push
mov
in
das
insb
lods
adc
cs
add
mov
push
and
psrlw
jbe
sbb
mov
dec
lds
es
cli
outsl
outsl
dec
subl
aas
dec
inc
fistpll
xor
adc
or
sub
repz
shrl
popa
xor
out
into
cmpl
cmc
mov
inc
outsb
push
cmp
insl
pop
mov
loope
inc
hlt
adc
xchg
mov
adc
sahf
mov
fimull
lret
jmp
push
or
in
push
cwtl
sub
fdivr
pop
enter
sub
pop
xlat
mov
xchg
xorl
cld
add
aam
cmp
mov
sbb
lret
je
jmp
mov
cs
pop
inc
inc
aad
fnstsw
push
fldcw
inc
mov
addr16
cmc
sbb
clc
dec
add
rolb
cmc
int
cmp
addl
push
jl
insl
loope
insb
push
mov
mov
jne
shll
pop
loope
push
fsubrl
ret
das
fsts
xor
cmp
pop
inc
lea
push
inc
xor
fdivl
andl
add
test
call
std
or
sbb
and
add
push
loope
mov
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
cmp
jle
push
jg
jle
out
mov
mov
leave
outsb
or
or
fisubrl
insl
jp
sbb
xorb
sbb
sub
add
or
ret
inc
pop
adc
add
inc
cld
xchg
mov
sbb
jmp
fldt
xchg
lods
pop
adc
insl
into
data16
leave
pop
adc
subl
movl
add
jne
je
push
or
popf
pushf
pop
push
stos
sahf
fwait
gs
fstpl
mov
das
and
sub
mov
repnz
imul
bound
test
jno
sub
fisubrl
repz
mov
and
jp
fstl
dec
dec
cwtl
or
cmpsl
popa
in
movl
jae
xlat
lods
daa
jne
xor
pop
lcall
outsb
ja
inc
roll
jecxz
or
dec
xchg
cmp
or
sbb
sub
mov
xor
sub
in
int3
fldt
sti
or
inc
sub
lcall
cs
in
out
sub
jg
fildl
in
jge
lret
pop
out
icebp
mov
and
int3
in
pushl
pop
std
call
xchg
push
and
jbe
push
or
fwait
mov
pop
mov
push
mov
mov
jb
push
sub
loope
xor
incl
mov
fstl
add
or
enter
stos
jp
and
es
call
push
add
jno
fmull
popa
adc
cltd
dec
and
cmp
js
mov
int3
sub
call
cmp
scas
adc
and
shlb
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
ret
dec
or
push
jg
jle
cmp
or
adc
mov
rcrl
and
mov
cmpsb
xchg
mov
push
fsubl
mov
mov
dec
rol
cmp
mov
lods
out
adc
cmp
cltd
scas
inc
lds
addr16
cmp
and
cmp
fs
cmp
mov
pop
les
sbb
stos
pushf
mov
jno
add
js
and
push
push
stos
mov
push
lahf
adc
int
jb
lock
in
dec
mov
insb
stos
sub
lods
xchg
xor
cli
or
mov
lods
and
push
inc
inc
push
or
scas
cli
sub
out
fistpll
xchg
xor
jb
xor
push
mov
push
fadds
dec
mov
ss
sahf
fldcw
inc
cmp
adcl
imul
mov
or
jle
daa
mov
sahf
sub
lret
push
prefetcht1
loopne
mov
add
stos
fs
jo
es
jle
lcall
mov
jae
leave
call
xor
notb
or
xchg
mov
pop
and
or
push
mov
jno
jns
dec
leave
dec
sahf
pop
loop
jns
xchg
jle
cmp
iret
push
ret
insb
xor
sbb
mov
inc
syscall
sub
lods
xchg
xchg
push
out
mov
pop
pushf
in
pop
dec
outsl
in
repnz
iret
ja
jge
test
loop
mov
test
sub
push
fbld
sub
ljmp
fiaddl
jne
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
pop
mov
mov
scas
jg
jle
fisttpl
push
imul
rclb
xor
sub
jbe
les
jns
push
cmpl
aas
shr
jne
out
dec
jmp
or
pop
and
fldt
lcall
sub
or
push
sbb
push
jnp
xor
bound
sbb
mov
sub
adc
and
imul
ja
pop
or
xor
mov
into
das
ret
flds
shrb
xor
sub
movsb
aad
rcr
stos
cmp
push
nop
sti
jmp
push
nop
push
fidivl
ja
loop
mov
and
stos
in
orb
test
shr
cltd
cli
mov
jo
jmp
cmp
cmpsb
fiadds
lods
fcoml
icebp
push
andb
popa
out
add
cwtl
aam
push
sbb
inc
lods
jecxz
push
mov
fcomps
jno
cmp
mov
into
push
dec
loopne
aaa
lcall
inc
ficomps
push
rcrb
xor
pop
pop
dec
lods
or
xlat
jl
imul
hlt
adcb
in
iret
subb
fsubs
into
lods
xchg
cmc
xor
jae
push
insb
lahf
dec
mov
sbb
aaa
and
clc
xchg
insl
pop
je
lods
or
loop
pop
sar
mov
pop
inc
test
adcb
sbb
lock
in
mov
rcrl
mov
jl
cmp
test
or
scas
test
mov
test
test
inc
add
or
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
mov
sbb
rclb
jle
scas
jg
jle
repz
adc
mov
iret
inc
mov
inc
adc
mov
pop
pop
adc
fildl
sub
dec
sub
jmp
cwtl
clc
insl
fwait
and
fs
sahf
adc
pop
push
int3
adc
pop
stos
fcoml
jb
pop
mov
pop
pop
xor
push
push
ljmp
filds
mov
cld
mov
aaa
push
xor
and
dec
sbb
lret
mov
mov
sub
xor
iret
testb
or
sbb
mov
or
scas
roll
js
ds
xchg
add
out
push
or
xor
add
inc
fidivrl
lods
push
in
sbbb
das
cs
cs
lods
jne
icebp
jecxz
dec
cwtl
mov
scas
jbe
push
ja
add
int
sub
mov
sub
or
sub
sbb
push
lock
movsb
fbld
dec
lods
pop
aas
xorl
mov
and
enter
mov
lds
xor
or
dec
xor
dec
dec
mov
pop
xchg
lahf
pusha
mov
sti
or
mov
xchg
xor
push
inc
loop
push
inc
jle
rcrl
mull
scas
test
inc
scas
pop
dec
gs
stos
shl
add
sti
xor
mov
in
loope
mov
gs
out
mov
out
gs
call
or
inc
shrl
in
popa
or
popl
gs
add
clc
aam
test
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
sbb
adc
jle
jg
jle
mov
aas
xlat
test
pop
jns
jae
into
dec
adc
rcrl
pop
lahf
std
add
ss
iret
insl
scas
ja
in
xor
leave
sub
js
enter
std
lods
xor
popa
mov
divb
outsl
ret
dec
jae
pop
mov
sbb
sub
xor
dec
xchg
dec
push
movsb
xor
bound
cld
mov
lods
popa
xchg
daa
in
pop
clc
rclb
movb
lret
shll
dec
popa
jmp
jno
dec
outsl
inc
push
das
or
xchg
addr16
repz
mov
jbe
subb
xor
int
jmp
aas
and
orb
sbb
cmp
loope
insl
rolb
inc
lahf
sbb
xlat
inc
inc
sbb
push
lods
pop
cmp
testb
push
iret
test
mov
mov
xor
push
test
push
fistl
xchg
loope
fisttpll
jno
fs
adc
stos
mov
or
flds
aad
jmp
mov
pushf
mov
popa
fdivrl
lcall
es
xchg
mov
add
lods
pushf
mov
pop
sub
dec
in
mov
pop
mov
hlt
fcoms
inc
loopne
adc
xchg
movsl
pop
test
fdivrs
dec
mov
push
out
xchg
sti
xor
xchg
jo
or
jmp
xchg
push
out
adc
mov
ret
popf
cwtl
mov
mov
popf
jnp
pusha
jp
sti
mov
xchg
outsl
pop
push
mov
loop
or
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
mov
jle
scas
jg
jle
test
lcall
adc
xor
mov
shlb
out
dec
pushf
adc
xchg
aas
add
sub
xchg
jl
push
xchg
push
jle
mov
imul
adc
push
movsb
mov
dec
cmp
test
sbbl
fwait
sub
mov
bound
mov
adc
mov
jecxz
or
shl
shrb
sbb
mov
add
push
mov
pop
pop
sti
cmp
notrack
aaa
aaa
mov
push
cmp
add
int
push
xchg
das
pop
jno
and
mov
sub
aad
mov
fwait
mov
aas
enter
cli
and
sub
mov
pop
cmp
cmp
loope
clts
inc
xchg
inc
std
xor
movd
mov
mov
xchg
pushf
jo
add
or
pop
into
cmpsl
sarb
jle
sub
sub
sti
cmpsl
aaa
es
dec
test
iret
repnz
in
lods
shrb
jecxz
in
loope
sbb
cwtl
xchg
cmp
ret
push
rolb
mov
jp
cmp
xor
and
sub
push
cmpsb
ret
adc
out
sub
faddl
iret
dec
fsubrs
push
in
jl
movsl
jne
repnz
xor
push
arpl
mov
mov
out
stos
push
mov
pop
inc
sub
mov
jb
pop
aaa
cmp
adc
scas
and
jecxz
out
push
mov
sbbl
mov
adc
add
jmp
jl
mov
mov
jge
fldl
call
dec
loop
jle
scas
jg
jle
out
mov
in
movsb
mov
add
sbb
push
and
push
push
adcl
or
es
cmp
pop
cs
movsl
dec
icebp
ljmp
jecxz
call
in
sbb
out
fwait
repnz
mov
cli
xchg
test
inc
lods
jae
xorb
popa
outsb
cmp
adc
daa
nop
push
cmc
out
sbb
imul
les
inc
mov
inc
cmp
push
in
pop
test
cmp
cmp
jns
dec
inc
dec
dec
push
mov
movsb
movsl
cmc
sti
movsl
aas
test
sub
xchg
mov
ret
jmp
mov
jmp
sub
mov
fidivrl
xor
int
jno
stos
shlb
inc
cmp
pop
adc
jp
stc
test
nop
mov
sbb
xor
js
push
pop
shrb
fsubrs
cli
icebp
fwait
cs
cld
mov
cmpsb
mov
idivb
and
or
in
xor
jo
push
fisubl
jge
add
cs
push
movsl
jnp
in
sub
pop
lods
xor
and
imul
mov
int
push
adc
cs
jl
sub
dec
inc
inc
push
cmc
adc
gs
outsb
stos
aad
vphsubwd
jne
sahf
dec
inc
lock
mov
inc
or
xlat
pop
pop
and
dec
lods
jbe
jmp
sub
stos
popa
mov
dec
cmp
cmove
pmullw
mov
mov
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
movsb
adc
jp
fcmovnbe
mov
xor
mov
mov
adcb
sub
adcb
cld
jns
movsl
mov
push
push
mov
xchg
pop
push
rcr
dec
mov
sbb
lods
stos
push
sbb
sarb
ret
rcll
in
pop
mov
outsl
loop
icebp
popa
fninit
lahf
loopne
ljmp
mov
sub
xor
push
stc
mov
sub
xchg
or
rcl
jo
jle
ficoml
jno
sbb
out
sbb
xchg
loope
test
nop
pusha
nop
xchg
jl
add
mov
adc
inc
fnstcw
mov
mov
xchg
xor
sub
adcl
and
dec
shll
dec
jl
imul
jbe
or
adc
sbb
loopne
lea
pusha
inc
aad
pop
sbb
push
adc
scas
pop
lahf
mov
push
sbb
repnz
sub
adc
pusha
ljmp
lods
pushf
out
inc
testl
orb
aam
push
dec
aad
iret
inc
dec
std
rolb
xchg
push
push
fistps
outsl
sahf
andb
jmp
adc
fwait
inc
xor
mov
sbb
inc
mov
jp
div
pop
sti
xchg
enter
scas
dec
test
scas
mov
cmp
sub
and
xlat
notb
out
mov
stos
dec
std
repnz
dec
call
pop
shrl
jae
movsb
call
dec
push
adc
fldt
jg
in
stos
out
inc
gs
adc
sarb
cmp
int
jle
dec
or
mov
add
movl
jmp
scas
or
xor
mov
pushf
fistpll
inc
push
jle
scas
jg
jle
bound
pop
hlt
dec
mov
and
jns
and
sbb
add
sbb
xor
popf
loope
cmpsb
push
xchg
mov
or
push
jae
dec
or
mov
cmp
aaa
cmp
push
jmp
movsl
bound
push
je
loopne
popf
inc
orb
jecxz
cs
in
hlt
lahf
pop
mov
and
xor
pop
push
cmp
or
xchg
shlb
xlat
inc
push
js
and
sub
dec
loopne
cmp
xchg
ljmp
mov
and
push
pop
cwtl
arpl
sub
ficoms
mov
bound
pop
or
adc
and
dec
push
stos
addr16
dec
iret
out
mov
ljmp
pop
test
out
cli
sbb
mov
ret
shlb
fwait
xchg
repz
out
xor
and
or
in
stos
push
popa
pop
jns
cld
adcl
jmp
or
push
hlt
add
mov
inc
ret
pop
outsb
fistl
outsb
call
xchg
loope
popa
add
jne
movsb
rclb
int3
fbld
enter
stos
fldcw
rol
inc
jne
sub
pop
mov
mov
lret
sbbb
mov
fists
jne
jl
mov
add
jo
sti
loope
inc
pop
add
sub
pop
adc
repnz
daa
jle,pn
scas
mov
push
ds
mov
test
dec
adc
int3
xchg
mov
sbb
sbb
lea
mov
mov
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
jbe
sub
les
fwait
xchg
sbb
inc
pop
inc
or
add
sub
aam
mov
pop
push
aam
xchg
mov
js
xchg
loopne
sti
add
xor
lods
xchg
test
pop
mov
push
dec
mov
sarl
push
add
shrb
mov
call
outsl
enter
add
out
lods
fistps
mov
jle
push
xchg
xor
cld
addr16
xchg
pop
clc
xchg
std
loop
dec
push
mov
mov
adc
jp
scas
xorb
mov
jbe
sub
sub
cmpsl
pop
jbe
mov
xchg
out
xchg
test
fbld
popl
test
mov
arpl
rol
pop
xlat
js
gs
jp
and
cltd
add
lret
stos
adc
cli
jns
sub
xlat
cmp
movsb
cwtl
mov
js
icebp
sub
xchg
inc
and
lea
adc
ds
adcb
or
sbb
pop
sahf
cwtl
pop
ss
adc
pop
xchg
out
iret
jae
push
mov
test
cmpsb
or
sub
out
testl
jb
xchg
push
dec
mov
cmp
test
xchg
rcll
movsl
sbb
xor
ja
jnp
repnz
nop
and
test
bound
and
pop
loope
cmp
xor
mov
mov
push
in
mov
or
push
loop
je
int3
insb
arpl
lret
pop
jl
pop
mov
jle
stc
roll
mov
xor
jmp
pop
sub
dec
insl
dec
imul
and
jns
jp
and
jle
scas
jg
jle
add
enter
add
in
inc
sub
push
mov
fdivrs
sub
cmp
int3
pop
daa
out
movsl
mov
inc
mov
xor
mov
dec
ja
mov
pop
push
test
icebp
xor
jnp
mov
es
fsubrs
push
fwait
addr16
add
dec
jg
cwtl
cli
arpl
enter
call
pop
pop
mov
imul
adc
jge,pt
jp
push
pop
xor
cmp
outsl
mov
imul
sarb
int3
and
or
imul
scas
rorb
xor
pop
cmpb
mov
adc
into
out
push
xor
xchg
lret
cmpsl
mov
or
sub
sahf
xchg
dec
xor
add
std
or
push
mov
add
or
sbb
call
dec
idivb
out
mov
rclb
push
sub
adc
or
pop
push
dec
test
push
aaa
in
xchg
mov
int
sahf
sahf
or
push
stos
loopne
sub
jl
jnp
into
jmp
sub
sbb
mov
daa
inc
ljmp
in
std
sub
imul
testl
ret
xchg
adc
pop
adc
in
cmpl
fisttpl
inc
mov
add
or
call
mov
test
movsl
add
scas
fistpll
xor
inc
xchg
and
out
faddl
jbe
mov
xor
mov
in
xor
xchg
mov
adc
inc
or
inc
or
arpl
decl
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
xor
sbb
cltd
jg
jle
dec
jae
xlat
inc
jg
pop
inc
aas
xchg
in
sti
iret
popa
test
popf
clc
lods
lcall
data16
push
outsl
int3
add
add
ss
leave
mov
xor
jb
stos
push
addb
mov
pop
mulb
divb
insb
test
sbb
sbb
xchg
test
pop
rolb
inc
notl
dec
shlb
mov
insl
push
leave
or
cmc
movsl
cmp
push
or
rclb
mov
cmp
out
mov
cmp
rcl
inc
gs
jge
mov
mov
inc
xor
cld
or
pushf
loop
clc
dec
pop
xchg
push
mov
es
lahf
inc
pop
test
les
cmp
inc
cld
das
push
test
in
push
jne
xchg
cs
in
pop
out
call
decl
movb
and
lret
jp
les
dec
pop
inc
pop
pop
dec
sub
mov
hlt
push
xchg
jae
and
sar
popf
in
fidivrl
dec
loop
xor
sbb
jp
outsb
and
push
aaa
repnz
sub
das
stos
inc
les
jnp
mul
lahf
nop
jge
or
movsl
insb
aas
xlat
clc
pusha
out
std
lret
dec
aas
push
xchg
lret
mov
in
cmp
and
xchg
mov
sub
inc
xchg
push
jbe
lock
jae
insb
fldenv
push
push
decb
dec
fcmovu
add
dec
xchg
sbbb
aad
rcrb
daa
mov
stos
inc
cs
test
bound
xchg
mov
inc
cld
xor
cld
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
sahf
test
cmp
jle
cltd
jg
jle
orl
mov
inc
aas
push
inc
pop
ds
mov
add
push
and
xor
stos
mov
push
jg
add
jmp
sub
mov
mov
mov
sbb
repnz
jns
std
repnz
push
sub
fdivl
pushf
aaa
mov
inc
push
scas
mov
jae
roll
and
test
jg
sub
jmp
ret
jge
xacquire
inc
cld
icebp
adc
rorl
loop
mov
inc
mov
loop
cli
mov
push
xchg
insb
int
mov
xor
add
mov
sub
jg
subl
mov
inc
mov
and
lock
imul
push
inc
push
loop
das
loop
sub
shrl
push
mov
jecxz
or
and
inc
repz
test
outsl
dec
add
stos
fcmovu
dec
rolb
sub
lods
inc
cli
dec
enter
out
out
jg
add
in
lahf
push
dec
add
aam
repnz
test
out
iret
adc
test
jae
inc
into
sub
test
outsl
aad
filds
loop
jbe
sbb
or
pop
shll
cmp
rcll
addr16
adc
cld
lea
mov
mov
and
jnp
imull
push
mov
cmp
sahf
pop
es
incl
dec
call
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
orl
xchg
jl
jle
lret
and
pushl
scas
mov
dec
jecxz
repz
movb
lahf
push
push
mulb
scas
repnz
add
popf
push
movsb
mov
adc
cmp
lret
inc
lret
mov
push
jns
es
enter
jp
mov
int
mov
rorb
bnd
and
je
imul
out
int
out
mov
mov
pop
fiadds
sbb
adc
andl
xchg
sbb
test
popf
pop
xchg
add
inc
or
sub
inc
jg
mov
insl
sti
insb
sub
jbe
jbe
add
ljmp
fisubs
xor
fxch
test
shlb
sahf
cmpsl
daa
idivb
out
lret
xchg
mov
adc
adc
iret
mov
sub
cmp
mov
sbb
insb
adc
jns
aaa
fldcw
lock
loope
lods
ret
xchg
dec
add
jns
ret
pop
ds
sbb
lret
sbb
or
xor
xor
sub
jne
push
outsl
sub
and
sub
ret
push
pop
push
les
push
ss
in
cmp
bound
pusha
stos
pop
mov
in
xchg
stos
push
adcl
enter
pop
sub
xchg
mov
pop
inc
mov
ds
cs
lods
pop
mov
imul
shll
addl
sarb
or
imul
and
aad
cmp
sub
cmp
lock
in
mov
jnp
push
mov
into
push
out
mov
daa
sub
adc
push
pop
ficompl
cltd
enter
xor
stos
xor
cmp
test
imul
movsb
mov
adc
dec
sbb
sbb
fcmovnu
scas
repnz
inc
lcall
jns
lds
in
out
adc
lea
xor
xor
inc
mov
fs
mov
lock
fwait
pop
cmp
or
imul
xchg
pushf
jns
mov
and
sbb
sar
es
out
sbb
sbb
not
roll
inc
inc
push
push
dec
cmp
sbb
mov
in
cltd
xchg
rcr
sbb
popa
cmp
pop
out
add
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
in
ret
mov
and
jle
hlt
cmp
repnz
or
xor
sbb
xchg
push
ret
mov
lock
dec
pop
sub
clc
out
jb
pop
gs
addr16
fwait
or
adc
jae
mov
or
gs
mov
dec
dec
shll
and
cmp
mov
je,pn
aas
mov
lds
iret
xchg
ret
lock
fs
xchg
dec
pop
gs
and
dec
jnp
ret
sbb
js
push
inc
pop
bound
insl
or
and
xchg
ss
lods
cmp
dec
push
inc
jo
stc
pop
push
adc
inc
jno
add
sbb
sbb
cmp
jae
jns
mov
sub
sahf
icebp
ja
dec
mov
mov
mov
pop
pop
es
inc
lahf
mov
jne
add
stos
or
int3
hlt
inc
pop
sub
inc
inc
pushf
aas
ds
xchg
jge
in
stc
mov
dec
aam
in
ja
mov
jmp
jnp
pop
jecxz,pn
push
xchg
icebp
mov
pop
movsb
div
subl
mov
cli
inc
jbe
mov
punpckhwd
push
xchg
popf
or
jb
das
fwait
xor
loope
popf
jecxz
mov
jl
sar
jbe
insb
nop
add
popa
test
push
jle
jbe
ss
adc
cmp
loop
bound
mov
aam
pop
or
sti
addr16
cmp
mov
sub
ds
or
aad
push
pop
adc
dec
xor
dec
orl
inc
inc
je
test
sbb
call
mov
ja
adc
sbb
xchg
add
sub
pop
fists
dec
push
and
mov
cmp
sti
jge
outsb
dec
mov
cltd
out
jnp
dec
rolb
es
ret
mov
sbb
dec
fs
xchg
adc
ds
sbb
push
push
mov
cmp
ds
jle
inc
data16
scas
dec
clc
or
xchg
sub
dec
dec
shll
pop
mov
icebp
fbld
pushf
std
cmp
and
mov
mov
ds
pop
loop
fmul
xchg
dec
jb
mov
xorb
pop
cwtl
push
dec
adc
adc
add
and
repz
xor
cwtl
push
inc
dec
mov
shlb
dec
js
aam
div
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
mov
sub
rclb
lahf
jle
xchg
fldl
cs
mov
pop
dec
lods
leave
fcomps
push
add
pop
sti
mov
pop
sbb
scas
cmpsb
mov
pop
cmpsl
cltd
push
mov
aas
add
and
ret
clc
jns
sbb
jle
jnp
sbb
mov
ja
mov
ret
cmp
sub
ljmp
repnz
xchg
movsb
dec
loopne
ja
or
sub
add
ja
xorl
ret
in
fsubrl
movsb
push
sysenter
loop
outsb
adc
xchg
xor
decb
xor
adc
imul
dec
arpl
cmp
ds
sar
sbb
inc
jns
cmp
and
les
fwait
loop
in
outsb
sub
fxam
sbb
mov
xchg
jb
dec
inc
sub
in
adc
gs
cmp
fs
stos
repnz
rep
daa
jns
in
inc
mov
cwtl
insb
jno
sbb
gs
fsubrl
cmp
mov
das
pusha
mov
push
adcb
in
outsl
int3
test
in
xlat
push
fcmovnu
mov
hlt
aaa
pop
pusha
fidivrs
fstl
sbb
pop
aad
je
xor
ficoms
push
sbb
imulb
ret
lods
cmp
imul
push
inc
push
cmpsb
ljmp
fidivs
dec
inc
rolb
pop
push
sbb
fisubs
push
adc
add
jo
imul
lds
jecxz
xor
jg
lret
lock
jnp
stos
outsb
and
jmp
fs
mov
lcall
fisubl
jp
mov
xchg
add
adc
in
push
repnz
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
cmc
test
jle
outsb
jg
jle
nop
xor
out
imul
call
xchg
mov
pop
lcall
in
lea
xchg
push
cmp
xor
and
into
xlat
jmp
lock
dec
cs
sub
negl
gs
push
nop
cmc
pop
sbb
pop
stos
xor
jge
add
aas
add
ficomps
lret
push
fs
push
arpl
pop
es
ss
repz
dec
xchg
lea
shl
push
rcrl
sti
pusha
fisttpl
fidivrs
sbb
add
or
daa
mov
negl
xor
mov
stos
dec
bound
push
int3
cmc
mov
mov
sbb
sub
lea
ss
into
sbb
data16
or
pop
leave
icebp
jns
imul
add
inc
sbb
int
and
das
and
add
pop
sub
out
lock
mov
cmp
outsl
jno
divl
dec
and
andb
push
or
shlb
les
add
mov
sbb
out
mov
ffreep
add
adc
inc
lds
pop
int
or
sub
pop
or
loop
pop
lods
xor
addr16
add
arpl
inc
mov
mov
jge
insb
rcll
outsb
mov
movsl
cmpsb
add
lock
jle
mov
cmp
xor
lods
clc
inc
sti
xlat
pop
cmp
jb
pop
sarl
fsubrl
push
jbe
push
mov
lea
dec
jmp
adc
push
sahf
pop
out
dec
test
push
and
icebp
jne
xor
fcmovb
xor
lods
popf
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
jbe
test
sub
jle
jg
jle
fstps
mov
test
cmc
mov
stos
xchg
movsl
dec
lret
mov
inc
inc
add
sub
call
mov
mov
inc
stos
cmc
imul
add
sti
inc
push
pop
iret
sbb
pop
lret
jb
or
add
in
add
and
stc
mov
xchg
outsl
out
mov
sbb
dec
inc
pop
int
add
aad
inc
das
cmp
xor
mov
loopne
mov
call
gs
out
iret
push
fdivrs
cli
lcall
es
adc
xorl
or
repz
aaa
dec
clc
outsl
mov
mov
test
adc
int3
inc
jg
xchg
dec
scas
adc
in
loopne
jae
sub
lea
push
shrl
ret
daa
xorb
js
or
push
or
pop
int
cli
mov
lods
push
or
cld
xor
xor
cmpsl
jae
xor
push
jle
bound
sbb
scas
xchg
mov
imul
xchg
mov
pushf
and
fisttps
dec
cli
test
push
pop
mov
xchg
mov
xlat
loopne
aas
fmuls
and
leave
mov
jg
test
shrl
div
xorb
xchg
aas
lahf
dec
inc
mov
ret
pop
mov
in
ljmp
in
jg
mov
cmp
scas
data16
pop
push
stos
or
jge
push
mov
xor
into
mov
xor
xlat
scas
ja
xlat
sbb
cmp
out
and
loopne
dec
test
test
mov
std
pop
or
dec
dec
cmp
clc
jp
gs
add
pop
mov
sbb
lret
lret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
shrl
sub
push
jg
jle
fsin
inc
mov
add
push
call
mov
push
shrl
iret
mov
jnp
scas
sbb
push
jge
sub
push
or
fsubs
pop
push
daa
insb
inc
repz
ss
mov
test
xor
imul
mov
mov
mov
jg
mov
lcall
out
inc
cmp
dec
jno
cmp
xchg
lock
push
in
in
or
lahf
ljmp
cmp
shlb
rcrb
insl
or
adc
mov
mov
or
xchg
mov
cmp
xchg
xchg
push
stos
pop
ljmp
pop
mov
jle
sahf
cli
inc
and
mov
lret
shlb
in
rep
shrb
fildl
mov
and
imul
clc
add
sub
jmp
pop
xchg
xchg
sti
jecxz
adc
jnp
push
je
cwtl
sub
clc
xor
jmp
out
pop
jmp
ret
cs
mov
sbb
das
cmpsl
and
cmp
jmp
jecxz
out
mov
in
xorl
mov
mov
enter
jp
sbb
xchg
or
add
lret
jmp
adc
fldl2e
and
out
ja
cmp
lds
xor
cld
dec
jo
in
cmp
inc
push
jmp
mov
fcoms
mov
or
enter
test
push
mov
and
xchg
sub
and
dec
jmp
cmp
sahf
arpl
imul
inc
int3
xor
pop
in
inc
add
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
in
sub
adc
push
jg
jle
sbb
icebp
popf
aam
or
ror
fldt
dec
imul
push
pusha
adc
add
enter
xchg
mov
and
or
popa
test
mov
cmp
jecxz
and
mov
loopne
adc
cmp
stos
xor
les
cmp
or
rcl
pusha
cmpsl
insl
pop
lods
mov
idivb
std
outsl
push
dec
leave
sub
push
inc
ljmp
pop
js
pusha
jno
and
add
mov
sub
mov
jg
cmpsl
mov
mov
adc
cltd
pushf
cmp
clc
jb
sbb
xlat
lret
fiaddl
in
mov
scas
jmp
mulb
xchg
fisubrs
push
test
sbb
or
icebp
and
jg
xlat
popl
sub
sbb
hlt
xor
fs
mov
adc
xchg
and
or
stos
dec
add
xor
inc
ret
shll
mov
cmp
cwtl
adc
and
out
jns
jno
mov
orb
add
inc
xchg
mov
jecxz
aam
test
mov
insl
aas
inc
and
arpl
and
ds
dec
insb
xorb
pusha
lods
ret
pop
ds
rorl
flds
dec
push
mov
pop
ds
mov
loop
fs
shl
and
mov
pop
pop
add
cmpsl
pop
mov
call
leave
cmpsb
push
sub
push
dec
scas
test
std
cmpsl
fdivl
mov
xchg
or
orb
dec
fld
mov
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
push
rorl
sub
push
jg
jle
sub
adc
ja
xchg
jns
or
xchg
sbb
add
mov
and
sbb
cmp
sbb
mov
mov
xor
pop
rcll
pop
ret
jle
cmp
xchg
shrl
pusha
push
push
add
sub
or
cmp
shll
aam
cs
lcall
ret
ret
sahf
lahf
xchg
sbb
icebp
loop
or
adc
jge
sbb
imul
dec
shlb
pop
std
pop
cld
jne
je
and
in
dec
xchg
xor
cs
dec
xor
mov
cmc
and
ds
js
push
cmp
xor
xor
js
xorl
dec
fidivl
cs
xchg
mov
jne
xchg
mov
mov
xchg
sub
movb
enter
js
flds
ljmp
jo
adc
test
pusha
arpl
popf
xor
dec
xchg
mov
bound
xor
sar
out
cmc
push
jbe
mov
popf
dec
cmc
in
xchg
pop
xchg
dec
subb
pop
xchg
scas
cmp
xchg
aam
inc
sbb
and
fldenv
jg
jp
and
movl
cmp
jp
mov
mov
push
aad
insl
jl
cli
or
cmp
xor
in
lret
outsb
jo
push
inc
ret
out
mov
sub
sahf
mov
movsb
pop
sub
fadds
mov
jb
ret
add
push
aam
jl
mov
mov
mov
adc
add
push
rorb
push
cmp
lahf
idiv
mov
mov
adc
sbbb
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
jns
or
jle
push
jg
jle
dec
sub
xchg
mov
aas
cs
adc
subl
sub
dec
inc
insb
mov
sbbb
enter
cmp
xor
xchg
cmpsl
sbb
xchg
pop
hlt
pop
std
aad
dec
repz
out
js
jle
imul
fmulp
xcrypt-ofb
xchg
dec
cwtl
or
xchg
shrl
test
rolb
push
clc
jo
out
sub
adc
rol
call
push
dec
repnz
call
cmp
adc
int
mov
mov
cmpl
fwait
in
fs
lods
sub
mov
mov
and
dec
cltd
or
idivl
sub
sub
ret
sub
movsl
mov
adc
shr
lret
test
addr16
idiv
inc
sti
js
mov
adc
pop
mov
aad
subl
rclb
sub
lods
repnz
pop
sbb
scas
mov
pop
pusha
lret
push
icebp
xchg
or
test
imul
and
push
dec
outsl
pusha
test
or
dec
xchg
inc
ljmp
and
testl
mov
gs
or
repnz
adc
mov
pushf
leave
adc
jnp
sbb
cltd
xchg
add
jge
sub
js
lcall
aad
add
adc
ds
lea
sbb
mov
add
clc
mov
push
pop
dec
mov
lret
lds
xrelease
and
jo
sbb
iret
pop
add
xchg
je
mov
shll
and
pop
cltd
jo
mov
pop
aas
jne
inc
loopne
test
repz
add
hlt
pushf
dec
mov
inc
and
ss
jmp
push
jg
jle
and
adc
out
push
xchg
push
jo
jecxz
xchg
enter
popa
or
inc
ja
popa
mov
or
data16
xchg
and
roll
inc
gs
or
lds
cld
in
cmpb
test
inc
rorl
push
shrl
dec
push
scas
aas
ret
fimull
in
mov
mov
jo
add
fsubs
std
stc
pusha
add
loop
jne
xchg
jne
sbb
cmp
andb
push
dec
pop
int
mov
lods
push
inc
xchg
jmp
cmp
mov
sbbb
jae
pop
es
stc
inc
out
pop
add
push
fbld
cmpsb
outsl
dec
xchg
cmp
mov
aam
pop
sarl
cmpsl
testl
mov
int3
mov
jg
xchg
mov
mov
sbb
pop
push
push
xor
clc
je
out
mov
ljmp
stos
mov
dec
jo
xchg
mov
insl
imul
push
scas
pop
cmp
push
stc
aas
jo
xor
loopne
hlt
mov
jo
movsb
cmp
add
adc
xlat
mov
push
cwtl
nop
leave
fdivrl
mov
inc
loope
aam
or
js
and
aas
ljmp
sti
mov
cwtl
dec
or
data16
sbb
insb
in
arpl
or
jnp
pop
jne
push
mov
rcr
les
aam
dec
dec
mov
or
pop
stc
testl
rolb
sbb
sahf
lret
inc
loope
adcl
lock
cwtl
cmc
bound
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
aas
sbb
jle
jg
jle
mov
jne
iret
or
push
jne
outsb
add
cltd
push
or
inc
loopne
and
stos
pop
xor
fwait
into
mov
mov
cmp
in
cs
icebp
arpl
testl
jnp
aam
jecxz
fistpl
cmpsl
movsl
fcomps
movsl
scas
sub
sbb
xor
and
jp
bound
xlat
or
clc
and
mov
xor
rolb
in
test
mov
xor
lea
and
loopne
ficoms
jne
mov
fildl
xor
xor
ret
insb
ds
hlt
pop
aas
rcll
out
cmp
sbb
inc
ret
negl
pop
jg
pop
dec
cmpsb
sbb
dec
add
xor
push
sbb
or
in
inc
mov
sub
jae
pop
ret
daa
jp
xchg
neg
movsl
pop
xchg
insb
and
sub
jl
lcall
arpl
fisttpl
mov
ja
aad
jnp
divb
push
lahf
adc
test
je
cmp
mov
or
lret
jbe
ljmp
xchg
fcompl
fldcw
or
repnz
sub
out
mov
lea
jg
mov
sub
cmp
adc
test
cmp
and
cmove
mov
sbb
in
pop
mov
cmp
adc
mov
push
cmp
cmp
cli
je
test
and
sub
mov
pop
cwtl
imul
mov
push
lods
dec
idiv
icebp
inc
ret
and
icebp
fsubs
push
push
repz
test
sub
cmpb
ret
cli
lret
jbe
jne
pushl
jmp
push
mov
dec
sub
enter
adc
aam
jle
push
jg
jle
stos
dec
mov
xchg
stc
jb
cmp
pop
iret
fiaddl
pop
or
cltd
cltd
test
pushf
inc
pop
outsl
js
enter
fcomi
mov
and
add
jnp
jg
clc
aam
loopne
and
or
test
dec
cmp
scas
inc
iret
stos
cmp
icebp
inc
cmc
lea
push
subl
or
push
or
rep
mov
jno
sub
cmpsb
daa
and
sub
inc
mov
ljmp
add
sub
scas
into
outsb
xchg
mov
cltd
push
arpl
arpl
rolb
adc
out
pop
add
dec
dec
lea
sbb
cld
ret
loopne
sbb
movsb
adc
sbb
cmpsb
and
add
jle
lret
xchg
iret
pop
lods
mov
movsb
pop
cmpsb
ret
inc
or
inc
loop
in
cli
adc
cmp
xor
adc
fwait
add
pop
dec
mov
fisttpl
pop
inc
sbb
ds
pop
test
add
lret
into
xchg
fwait
adc
iret
enter
and
popf
loop
or
mov
cmp
inc
mulb
and
insb
adc
mov
mov
sar
mov
and
movsb
inc
or
cwtl
insb
call
dec
pop
pop
insl
pop
add
test
adcb
out
fiadds
insb
std
cmp
lock
mov
or
mov
out
push
add
fwait
subb
or
nop
jne
sub
sbb
sub
sbb
inc
adc
cwtl
arpl
mov
mov
pushf
repnz
sbb
out
sub
lahf
call
mov
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
in
les
jbe
pop
adc
test
sarb
nop
inc
cwtl
xor
sub
mov
test
sbb
pop
cmp
mov
mov
cmp
lahf
out
add
adc
sub
push
jno
divb
scas
aad
inc
ja
sbb
sahf
push
popa
test
add
pop
addr16
add
xchg
cmp
rclb
js
clc
ret
in
aas
sbb
inc
aaa
sbb
inc
daa
test
std
adc
push
popf
sub
pop
stc
nop
popf
ds
push
xchg
pop
ljmp
cmp
rorb
popf
xor
cmpsl
fisttps
pop
std
loop
mov
mov
xor
add
pop
jo
pop
sarl
xlat
ret
imul
pop
dec
inc
in
xor
jnp
and
insb
pop
pop
mov
push
sti
push
mov
ss
fs
bound
cwtl
inc
sub
mulb
mov
fldenv
add
ss
ds
test
test
cmp
rorb
jbe
sar
mov
xchg
and
cli
add
and
addl
xor
ljmp
clc
inc
bnd
jp
xorb
fisttps
sbb
aaa
add
cmp
out
cmpsl
xor
test
sbb
sbb
jbe
jnp
push
or
in
inc
and
dec
andb
adc
ljmp
mov
mov
aam
mull
fstpt
enter
add
aaa
mov
fildl
sub
pop
xor
loope
ds
test
pop
cmp
add
cs
gs
lock
and
push
push
mov
pop
mov
lock
sub
sbb
ljmp
shrl
clc
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
xor
push
xor
adc
add
inc
roll
mov
int
add
add
xlat
inc
outsb
daa
std
aam
sub
fdivrp
jne
cwtl
out
push
cmc
iret
add
adc
arpl
mov
pop
mul
fnstenv
mov
int3
pop
pop
cld
imul
inc
inc
jge
mov
add
push
lea
test
mov
dec
mov
pop
add
add
mov
add
mov
jb
test
or
xor
mov
xchg
cmp
sbb
and
repz
inc
or
xchg
out
ret
imul
mov
arpl
adc
mov
sub
imul
jmp
test
adc
imul
add
ds
pusha
inc
jp
insl
outsb
int
aaa
lods
jbe
push
pop
push
mov
add
shlb
in
out
cmp
dec
mov
sub
mov
xor
or
sub
lods
ljmp
or
es
xor
lcall
or
in
dec
sub
sub
sahf
test
sub
mov
dec
mov
in
push
push
mov
stos
push
in
aas
jbe
sub
xchg
repz
mov
mov
mov
loop
out
xor
fmul
loopne
jo
outsb
test
mov
fadd
imul
ror
imul
sub
incl
fcomps
fdivrs
mov
sub
mov
jno
data16
icebp
addr16
inc
jg
clc
sub
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
and
cmp
mov
jle
xchg
shll
dec
out
movsl
add
test
push
add
mov
xchg
adc
sub
les
and
sub
sbb
dec
leave
cmpl
cmc
pop
fwait
sbb
lock
bound
je
cmpl
loop
lret
fsubrl
push
in
cs
int
push
jecxz
into
aas
daa
movsl
pushf
xchg
sub
lret
mov
xor
cmp
add
subb
clc
sub
push
jo
and
jl
fistpl
push
negl
xor
and
scas
pop
dec
mov
cmc
test
femms
add
inc
and
mov
sti
out
lret
and
out
mov
out
imul
and
dec
pop
push
sub
cmp
inc
pop
jg
mov
iret
cmp
loopne
ret
pop
cli
sti
in
jns
int
outsb
popf
ficomps
jno
cmpsb
dec
sbb
xchg
or
mov
or
xor
sbb
das
mov
dec
inc
imul
mov
outsb
daa
leave
sub
jmp
cmp
adc
lahf
cmp
addb
xchg
fimuls
test
mov
jl
gs
lock
std
pop
movsl
sub
sbb
xchg
cmp
lcall
push
xchg
cltd
jnp
xor
inc
xlat
movl
int
xchg
outsl
data16
mov
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
cs
jg
jle
jo
cltd
mov
xor
sub
inc
test
push
dec
shr
stc
cmp
jl
lret
sbb
mov
dec
mov
mov
repnz
push
popf
flds
mov
sub
movsl
mov
or
mov
cmp
nop
dec
jecxz
ret
or
push
push
mov
pushf
sbb
add
mov
sahf
test
cwtl
movsb
mov
lock
inc
jb
fsubs
stos
jbe
sbbl
jle
mov
or
leave
xor
adc
das
adc
cmp
call
or
sub
xchg
push
sbb
testb
mov
rorl
jmp
outsb
dec
ret
sti
adc
adc
xchg
mov
lret
pop
jg
sub
hlt
ljmp
loop
mov
sub
mov
xchg
lods
cli
inc
fisttpll
push
push
inc
xor
sahf
lock
imul
imulb
cltd
and
jbe
inc
mov
push
aas
mov
lret
cmp
xchg
test
sbb
jle
cs
pop
cmpsb
cmp
dec
mov
xchg
stos
in
xor
jne
push
adc
jne
or
lcall
inc
dec
xlat
fs
add
fwait
pop
daa
dec
dec
and
xchg
arpl
ds
mov
repnz
scas
push
or
mov
mov
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
cli
mov
mov
jle
push
jge
or
add
out
jg
xchg
adc
in
inc
jno
dec
cmc
lock
xchg
fisubrl
push
inc
pop
and
cmp
aad
dec
fisttpll
sbb
or
dec
cmpsl
incb
lds
mov
es
mov
loop
xchg
jbe
int
cmp
mov
test
movsl
aaa
xchg
fisubrs
jl
or
cmp
ret
cmc
pop
shlb
loop
inc
xor
add
rcrb
cld
idivl
imul
push
jnp
adc
loopne
cmp
jecxz
cmpb
les
je
mov
loopne
dec
cmc
cmp
lea
std
cmp
add
cmc
pop
repz
sbb
xchg
clc
sbb
xlat
nop
lods
repnz
jns
pop
xor
inc
fcoml
into
clc
setg
popa
insl
pushf
loop
xchg
or
addr16
xlat
push
jl
cmp
jb
sti
lds
xor
sub
mov
int
push
lods
rcrl
xchg
push
into
jmp
push
sub
dec
sub
lea
lea
or
dec
fildll
clc
int3
add
adcb
fisttpll
cmp
mov
lret
es
test
in
or
insb
repz
inc
jecxz
ljmp
jnp
das
jg
arpl
xor
adc
dec
adc
repnz
addl
inc
xlat
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
fildll
jle
mov
jle
xchg
dec
cmc
mov
test
into
and
inc
aas
jecxz
mov
in
ret
mov
xor
pop
jle
jmp
inc
mov
xchg
aaa
mov
mov
pop
mov
fwait
std
lods
test
mov
out
int
mov
sub
addr16
mov
xchg
rclb
lock
mov
and
enter
cmp
into
or
fbld
jle
xchg
cmc
fsts
dec
repnz
fsubrs
movb
shll
add
pop
leave
sbb
repnz
xchg
je
add
mov
testl
into
mov
movsb
dec
cmp
out
sbb
lahf
pop
jo
sbb
daa
push
pop
fisubs
inc
jp
dec
mov
adc
idiv
int3
sar
sbb
pusha
lret
cmp
push
movsl
inc
cs
pop
mov
cmp
in
shr
stos
xor
int3
mov
movl
roll
dec
in
mov
insl
inc
push
cmc
fnstsw
in
jo
bound
out
imul
clc
pop
sahf
cmp
outsl
outsl
cmp
xchg
das
std
shlb
insb
fnstsw
stc
stos
test
jmp
dec
das
imul
and
xchg
or
and
pop
and
push
and
leave
xor
pop
push
push
inc
std
outsl
addl
pusha
in
sub
rorb
push
add
movsl
jno
add
rol
add
dec
pop
add
cmp
movl
jmp
notl
push
jb
out
or
lds
mov
jle
pop
jl,pn
pusha
icebp
jecxz
jg
fmull
fwait
mov
loope
lock
mov
cld
dec
pop
inc
imul
adc
ror
xor
mov
mov
xor
mov
mov
or
imull
adc
outsl
nop
sub
iret
add
push
xchg
bound
pop
sub
sahf
sub
xor
inc
rol
bnd
jp
xchg
dec
jge
inc
rcll
test
add
jnp
inc
subl
xchg
xchg
push
mov
data16
imul
test
mov
sahf
jge
aas
adc
xchg
mov
cmp
ja
inc
icebp
cmc
test
pop
jl
mov
fucom
jl
pushf
imul
cmpb
cmc
fidivrs
repnz
icebp
push
andnps
adc
pop
shr
add
mov
fdivr
dec
lods
outsl
rorl
int3
imul
outsb
sbb
pop
or
sbb
stos
adc
fsubs
cmpsl
icebp
xorl
loop
mov
ret
fistl
in
fcoml
mov
aad
xor
dec
inc
test
mov
dec
mov
mov
aaa
popf
rclb
sbb
push
pop
mov
fwait
or
rcrl
loopne
push
outsl
pushf
mov
xchg
loope
inc
pop
movb
test
lods
or
jmp
add
push
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
sbbl
jle
loopne
and
pushl
push
mov
aad
cwtl
jb
int
adc
push
sub
sub
or
ret
loop
jge
sbb
int
test
fstl
pop
in
setbe
push
sbb
cmpsb
in
mov
loope
js
xorl
fwait
lods
xor
xor
outsl
idivl
mov
pop
push
sbb
and
in
mov
inc
pushf
fwait
xor
cltd
mov
mulps
xor
not
sbb
ror
push
popa
arpl
test
aad
mov
test
dec
mov
popa
dec
xchg
add
popa
into
mov
pop
inc
clc
xor
pop
mov
cld
sub
data16
pushf
into
sbb
mov
dec
out
lret
stc
xchg
add
mov
mov
sbb
int3
imulb
pop
cltd
adc
test
and
fildl
pop
xchg
mov
gs
stos
outsl
repz
gs
add
imul
stc
movsl
sbb
in
mov
push
rcrb
adcl
sbb
inc
pop
cmp
ljmp
and
cld
inc
or
fs
adc
in
cld
aad
dec
sahf
pushf
movsl
xchg
push
sbb
sub
sbb
jmp
fs
ljmp
movsb
shrl
sbb
das
dec
push
lret
lcall
faddp
jne
scas
hlt
cmp
push
mov
pushf
in
daa
rcr
pop
orl
and
dec
dec
fldcw
gs
mov
addr16
xor
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
jmp
shl
ffree
jle
mov
jle
ja
pop
jbe
fs
aaa
out
cmp
mov
mov
fdivrl
iret
and
dec
adc
hlt
sub
cmc
add
das
mov
adc
dec
sti
jmp
ret
mov
mov
ja
or
pop
and
sub
psllw
outsb
jp
mov
rcr
pop
lods
dec
mov
xchg
inc
mov
outsl
xchg
movsl
in
and
lock
stos
inc
mov
hlt
cmp
cwtl
ljmp
xchg
sub
mov
adc
in
jmp
jg
push
hlt
jmp
cmp
lock
xlat
fisubs
push
fdivr
pusha
sub
jnp
xorl
decb
lds
out
and
cltd
jmp
das
pushf
mov
cmp
xchg
adc
nop
adc
inc
mov
ret
add
cmp
callw
decb
or
movsb
add
stos
div
shll
addr16
dec
pminub
sbb
arpl
adc
xor
std
mov
adc
int3
dec
push
dec
inc
dec
inc
jb
loop
cld
jmp
cmpsl
out
daa
test
bound
pop
stos
mov
pop
adc
negl
repz
xlat
cmp
xchg
mov
sub
shll
leave
cmpsb
js
out
aad
or
jae
mov
mov
outsl
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
mov
sarl
jg
jle
mov
pop
lods
jae
popa
inc
jnp
and
mov
jo
mov
inc
mov
cmc
leave
dec
insl
mov
ret
dec
dec
adc
adc
pop
scas
rcrb
mov
mov
lods
or
cmp
subl
jmp
mov
push
cmp
mov
mov
jb
es
jae
inc
sbb
jl
inc
sub
lret
sub
jbe
pop
jno
outsb
cld
cwtl
sahf
in
mov
pop
mov
pop
mov
popa
jno,pt
xchg
inc
icebp
jo
mov
cmp
lahf
pop
mov
xor
jge
repz
cmp
int3
xchg
sbb
cmc
sub
mov
out
mov
adc
scas
daa
mov
into
mov
ljmp
jp
jg
addr16
loop
push
mov
lahf
xchg
cmp
icebp
repnz
or
jns
das
insb
pop
hlt
lods
mulps
push
push
adc
adc
jp
mov
arpl
or
sbb
xchg
loop
mov
cmpsb
rcrl
jnp
add
add
pop
dec
fldenv
cwtl
dec
pop
mov
shlb
sub
xchg
divb
push
ret
popf
jbe
insb
negl
sub
jp
arpl
incl
dec
mov
lods
mov
daa
and
aas
mov
rolb
rol
mov
pop
sti
mov
pop
cmpsl
bound
leave
ja
dec
mov
mov
mov
lcall
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
xchg
loopne
cmp
pop
jge
mov
push
sahf
faddl
mov
sahf
xchg
add
push
sbb
decb
xchg
rcr
in
sub
test
or
push
mov
sbb
mov
iret
or
jbe
xchg
mov
xchg
addr16
xor
repz
aad
repnz
clc
jle
xor
pop
scas
sub
xchg
inc
in
movsl
and
jb
in
lret
jnp
ret
sarl
in
and
bound
ret
jb
sbb
rorb
mov
jmp
dec
jmp
inc
sbb
out
mov
rol
xor
in
aaa
stos
push
mov
xor
mov
mov
stos
jp
push
movl
pop
loope
mov
lds
or
stc
pop
pop
cmp
or
jno
mov
mov
pusha
insl
aas
test
xlat
out
cmp
lahf
push
jo
dec
sti
sub
inc
mov
dec
testl
jle
mov
jmp
mov
mov
div
scas
stc
fs
pop
push
jle
faddl
icebp
add
inc
xor
mov
jb,pn
stc
mov
xor
mov
pop
pusha
mov
dec
insb
mov
mov
mov
sbb
andl
jnp
xor
adc
fnstcw
aad
cmp
ret
xor
xchg
add
add
or
add
cld
xor
xor
jmp
in
test
call
add
int
jle
jg
jle
lods
imul
int
adc
mov
inc
repz
out
jo
lcall
imull
mov
in
and
das
out
cmp
int3
bound
jge
xor
insl
cmp
es
fucomip
scas
lds
mov
jmp
fwait
add
movsb
dec
enter
dec
xlat
xor
adc
fwait
or
sbb
ds
or
scas
push
and
call
xchg
dec
pop
notl
addr16
scas
sti
xor
pop
adc
or
out
add
push
xchg
sbb
mov
xchg
pop
movsl
or
icebp
cld
jl
mov
adc
inc
adc
out
scas
aas
fcomps
fimuls
jg
mov
mov
insl
add
fs
jecxz
jb
ljmp
fidivl
mov
jg
xchg
je
sub
cmp
movsl
int
sbb
adc
add
shl
shrb
mov
lock
pop
xchg
iret
fwait
jle
lds
cmpsl
shl
add
repnz
lret
inc
xchg
push
mov
idivb
fmulp
inc
add
repz
jmp
loope
inc
iret
mov
inc
cmpsl
or
cmpsb
in
popa
addr16
jnp
push
dec
xchg
icebp
add
pop
push
call
adc
cmpsl
adc
push
and
add
cs
xchg
repz
cmpsl
add
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
out
sub
jle
jg
jle
xchg
cs
push
dec
mov
movsb
mov
dec
std
mov
rorb
fidivrl
xchg
rcl
sub
jns
outsb
bound
imul
fistpll
repnz
in
mul
scas
add
sub
mov
push
add
jo
sti
out
fcoml
ds
loop
push
xchg
pop
insl
mov
and
lret
jge
jp
mov
inc
inc
jb
hlt
repz
sarl
cltd
adc
pop
jp
lods
push
mov
cmp
push
daa
pushf
cmpsl
add
inc
jnp
xchg
sbb
mov
loop,pt
pop
in
ffreep
cltd
jb
jnp
std
add
jno
ret
inc
into
incl
pop
jmp
icebp
cmp
mov
ret
mov
mov
int
gs
push
adc
ret
sbb
hlt
outsb
cmp
mov
pusha
test
dec
dec
mov
roll
push
mov
adcb
dec
imul
mov
xchg
xlat
out
pop
or
enter
cwtl
jo
xchg
pusha
lods
xor
aad
xchg
xchg
cmp
jne
mov
imul
addr16
mov
adc
pop
outsl
jecxz
cmp
mov
arpl
mov
lods
popf
aad
enter
pop
dec
fdiv
inc
mov
jno
loopne
jne
loopne
xchg
cltd
cmpsb
cmpsl
and
push
mov
inc
cmpsl
or
shr
lods
add
add
add
push
push
jl
ljmp
enter
jg
jle
das
mov
add
inc
cmpsb
push
mov
clc
xlat
in
sbb
cmp
shrl
jne
lret
pushl
cs
mov
xor
mov
shrb
push
xchg
mov
stc
push
mov
call
cmp
aad
jne
orl
pushf
jae
mov
sbb
jb
xchg
push
testl
sbb
add
cmpsb
out
and
js
mov
cmpsb
xor
or
cmp
outsb
jge
ljmp
into
mov
sbb
push
lret
push
lds
and
testb
lods
cmp
push
movb
clc
jb
cmc
test
repnz
inc
enter
push
in
stos
or
pushf
cmpsb
xchg
in
cmpb
pop
dec
into
sub
xlat
mov
cmpsb
inc
cwtl
inc
inc
das
pop
add
imul
mov
stos
push
bound
jmp
enter
mov
loopne
bound
adcl
mov
dec
or
mov
aaa
inc
fdivrs
xchg
cmpsb
fs
push
cmpsb
cltd
jp
and
mov
push
push
ds
sahf
xchg
add
pushf
mov
in
sub
sbb
std
xor
mov
mov
stos
add
imul
mov
xchg
mov
mov
out
push
test
cmpsb
jno
push
dec
cmp
scas
jne
pop
inc
push
push
imul
mov
mov
sub
jmp
and
xor
test
inc
mov
leave
jle
mov
jle
mov
rorl
add
in
cmp
into
xchg
inc
inc
mov
scas
jge
or
aaa
push
jne
jge
push
xchg
mov
lods
jb
xchg
push
cmpb
cmp
and
notb
ss
cmp
add
mov
inc
dec
mov
lret
es
in
pushl
arpl
out
das
dec
and
fwait
shlb
movsb
pop
fwait
xor
cwtl
cltd
dec
call
xor
lods
adc
rorb
add
rorb
lods
lret
in
inc
fidivl
push
jns
xor
adc
or
cli
pop
fnstsw
out
outsb
incb
xor
outsl
stos
test
data16
ljmp
mov
jns
jno
add
push
cmp
jae
mov
loop
pop
cmp
sub
xchg
cmp
xchg
insb
inc
ss
inc
lods
cmpsl
cmp
jecxz
out
loop
cmp
push
inc
sbb
push
jp
orb
jbe
outsb
out
mov
pop
shll
push
or
jo
aam
mov
call
pop
cld
jns
hlt
mov
xor
je
pop
push
xorb
in
sbb
mov
adcb
add
mov
inc
fisttps
inc
push
inc
jl
pop
nop
aad
adc
clc
cwtl
fdivrs
jge
push
add
ficoms
fbld
add
jl
call
repz
or
add
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
mov
loope
jle
mov
jle
mov
dec
xor
pop
sti
pop
inc
mov
outsl
and
les
and
outsl
lret
icebp
nop
shlb
push
int
cmp
js
sub
es
add
das
in
mov
fcoml
gs
pop
xor
arpl
in
les
and
xchg
fldenv
arpl
aaa
push
aam
mov
push
loope
imulb
imul
mov
imul
adcb
call
loop
sbb
push
add
nop
xchg
js
cwtl
inc
push
mov
inc
stc
addr16
aaa
pop
mov
and
mov
cli
es
rcl
dec
sahf
adc
mov
mov
cmp
or
push
mov
fstpt
xor
add
add
aam
cwtl
pop
inc
ret
in
mov
movsl
and
cmpsl
jg
sub
in
scas
ja
pop
addl
dec
popa
out
pusha
or
fisttpl
cmp
dec
jmp
jg
mov
mov
outsb
in
jge
mov
and
cwtl
aam
xor
or
aas
aad
shl
icebp
imul
mov
mov
cmc
jle
push
fldl
and
mov
sub
pop
movsl
rcr
inc
movsb
aaa
or
sbb
cmovle
push
lods
cwtl
or
in
popf
cld
add
sub
mul
sbb
or
ja
xor
stc
mov
jae
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
mov
jle
mov
jle
cmp
mov
mov
adc
dec
and
add
call
and
push
pop
lret
cld
xchg
addl
mov
in
sbb
mov
sub
xor
popa
cwtl
scas
out
cmc
daa
shlb
ljmpw
or
pop
in
jno
jl
inc
sub
adc
or
xchg
sbb
add
push
sbb
add
pop
dec
fbstp
mov
xor
insl
cmc
mov
sub
insb
loop
jge
cmc
push
or
dec
push
sub
jb
insl
jo
push
dec
jg
les
mov
pop
xchg
push
xrelease
lahf
xor
ss
mov
inc
add
dec
fidivs
rolb
push
scas
xchg
ljmp
aad
adc
pop
std
pop
mov
dec
call
vmovups
jns
daa
pop
jo
adc
dec
lock
mov
jne
jnp
icebp
add
pop
in
sbb
enter
jns
int3
dec
sbb
divb
add
lock
lea
dec
and
mov
leave
xchg
fimull
jne
pusha
aam
scas
pop
out
push
sub
pop
pop
or
insb
stos
fistpll
inc
rolb
add
or
xchg
push
lahf
je
pop
mov
cmpsl
dec
inc
sti
xor
add
adc
xchg
ja
xor
test
mov
imul
mov
std
and
xor
add
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
insl
in
lcall
jle
lret
movl
mov
arpl
outsb
das
xor
test
mov
outsl
inc
and
into
mov
adcl
mov
int3
fidivs
shll
mov
mov
lods
loope
lret
cltd
jne
stos
mov
gs
xor
mov
xchg
nop
and
or
adcl
sbb
and
lahf
add
add
jp
test
ret
arpl
scas
notb
scas
fs
dec
retw
rorb
faddl
pop
fs
sub
pop
mov
das
adc
or
stos
lock
mov
out
scas
mov
stos
mov
push
inc
inc
adc
adc
add
adc
test
addr16
fsubp
in
paddsw
pusha
jl
mov
mov
push
cmpsb
dec
nop
mov
inc
add
sub
xor
jl
cs
mov
iret
xor
popf
xor
in
inc
mov
xor
mov
pushf
jbe
mov
sbb
push
and
add
xlat
mov
sbb
sub
mov
add
jg
cmp
stos
push
test
insl
push
shrl
sbb
jmp
clc
xchg
inc
dec
mov
adc
pop
rcrl
gs
loope
int3
inc
scas
std
dec
pop
xor
je
and
out
faddl
adc
or
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
dec
or
and
jg
jle
add
mov
stos
jae
pushl
ss
xor
inc
clc
mov
andl
fcoms
sub
rolb
inc
je
lock
inc
mov
jl
daa
roll
pop
xor
popf
test
inc
sub
pop
dec
fistpl
and
push
cmp
sub
cs
ljmp
loope
sbb
lods
and
loopne
repnz
jle
jns
movsb
add
or
repnz
bound
iret
lds
int3
fs
imul
fs
les
mov
xor
js
imul
aad
cmpsl
rol
push
test
mov
aas
ror
mov
mov
mov
fnstenv
lods
mov
aad
ja
or
rcrb
fsts
jecxz
arpl
or
mov
iret
push
mov
aaa
call
push
pop
loopne
out
mov
jl
pop
and
sahf
dec
lret
sub
and
adc
sub
sub
and
dec
mov
fdivl
sbb
pop
popf
idivl
icebp
sar
fildl
push
bsr
pop
and
outsl
xchg
ret
adc
mov
and
adc
pop
mov
xchg
mov
int3
cmp
inc
xchg
stos
xchg
ficoms
mov
js
test
push
in
cs
or
ret
adcb
mov
pop
inc
and
pop
cmp
pop
push
mov
loope
xlat
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
call
sarl
mov
jle
jns
in
xchg
imul
sub
pop
push
in
fisttps
mov
mov
enter
outsl
sti
pop
and
xor
cmp
stc
mov
pop
test
cmpsl
das
push
fwait
addl
jge
or
rep
jbe
mov
in
pop
and
scas
das
orb
inc
sbb
jl
dec
pop
sbb
jmp
fsubl
sbb
mul
cmp
das
xchg
lea
dec
inc
fstl
imul
pop
in
mov
test
out
int3
out
pop
cs
orb
mov
xchg
xchg
aam
dec
pop
mov
jge
dec
stos
mov
fcompl
mov
jo
loopne
lods
test
lods
fcompl
xchg
push
adc
sub
mov
bound
daa
and
movsl
mov
fdivr
mov
outsl
dec
addl
loopne
arpl
movsl
in
dec
lcall
mov
xchg
jo
lret
loope
movsl
jbe
xchg
lcall
hlt
rorb
push
gs
pop
jl
mov
fistpll
movsb
mov
stos
out
clc
loope
cmp
out
mov
pmaddwd
leave
dec
jns
iret
push
cwtl
outsl
int
jb
in
cmp
js
sbb
dec
xchg
out
add
push
lods
imull
test
les
dec
pop
xchg
shlb
jb
jno
push
out
pop
mov
xor
jbe
xorb
xor
jmp
or
addr16
jne
mov
mov
repz
add
jle
jg
jle
ljmp
out
inc
inc
sub
or
aam
mov
out
shll
test
dec
dec
sbb
lock
das
lods
mov
and
dec
jns
push
dec
fistpll
aam
dec
mov
stc
push
out
push
gs
hlt
lea
xchg
push
out
cmp
and
arpl
imulb
cmp
adc
dec
hlt
push
movsl
repz
cli
add
arpl
xor
dec
aad
iret
jp
pop
xor
int3
stc
sub
push
cmp
data16
aam
sahf
push
idivb
ds
jb
movsb
repnz
and
popa
movsl
icebp
jno
jp
jge
in
ljmp
mov
arpl
and
subb
je
in
mov
xchg
mov
mov
test
push
sub
or
push
xchg
inc
sbb
cmp
adc
or
and
mov
shll
xchg
aaa
mov
out
mov
cmp
mov
fidivrs
addr16
aad
mov
sub
cmp
cmp
arpl
outsb
shlb
test
add
arpl
pop
repz
add
sub
xchg
shl
add
std
scas
addr16
ret
cli
xlat
pushf
mov
dec
pusha
push
icebp
cmpsl
cltd
icebp
mov
insb
mov
fldl
stos
jb
push
pop
pop
je
and
jge
sbb
jge
out
rcrb
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
mov
loope
fdivrl
jge,pn
jle
mov
adc
add
mov
repnz
mov
jbe
push
mov
loope
push
rcrl
and
or
es
lahf
pop
outsb
xchg
ss
outsb
push
mov
sbb
inc
ret
xchg
adc
inc
cmp
and
xchg
adcl
push
pop
int
stos
enter
or
fistps
jl
shl
ss
sbb
mov
addb
xor
arpl
sub
data16
shl
mov
incl
sbbb
dec
pop
aaa
xor
lea
pop
ss
add
int3
mov
loopne
loopne
pushf
sbb
iret
je
stos
or
cld
lea
xchg
inc
test
int
xchg
add
pop
cmpsb
lcall
scas
pop
in
popa
fsubs
inc
nop
sub
add
inc
xorl
aas
adc
gs
mov
xchg
enter
sub
mov
lahf
adc
mov
cmc
xorl
cmpsl
dec
icebp
filds
jns
xorl
jg
inc
popa
data16
adc
nop
and
xor
or
sub
pop
iret
stos
mov
sti
incb
out
push
jp
sbb
rclb
ljmp
loope
xor
bound
sub
stc
mov
pop
jp
mov
mov
mov
adc
xchg
add
cmc
rcll
dec
loopne
nop
jnp
sub
dec
pop
mov
ret
jns
mov
jecxz
sub
bound
cmc
adcb
or
mov
ss
arpl
sub
stos
mov
ror
or
cli
scas
aas
mov
push
repz
sbb
pop
jnp
rclb
cmp
lahf
sahf
je
mov
push
and
adc
popa
ljmp
and
mov
fisubs
sbb
sub
int
test
push
sbb
insb
jns
pop
push
lea
xchg
inc
mov
ss
addl
mov
xchg
into
xor
aam
lods
push
pop
jo
sbb
dec
pushf
orb
ds
cmpsl
xlat
or
jle
pop
imul
adc
mov
dec
popf
sub
push
cwtl
jl
lahf
jbe
xchg
mov
inc
or
out
inc
aas
lock
jae
out
fisttpl
lds
loop
xchg
roll
adc
dec
cmp
lret
add
pop
lret
cmp
out
loopne
nop
push
adc
sbb
pushf
bound
push
mov
icebp
loope
push
dec
fbld
decb
repz
xor
ljmp
jo
fildll
pop
enter
in
scas
push
fistpll
sbb
test
xchg
das
cwtl
mov
jle
in
subb
mov
sbb
sbb
pop
push
fidivrs
leave
cmp
addl
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
mov
jle
jge,pn
jle
xchg
pop
stos
leave
xchg
mov
test
and
jns
xor
adc
pop
mov
cmp
xorl
dec
pusha
and
insl
inc
aaa
mov
inc
and
fucomip
jae
cmc
test
das
lds
inc
xchg
jno
into
lret
popa
mov
xchg
push
sbb
sbb
or
jnp
pop
push
outsl
fdiv
dec
jo
imul
ds
add
mov
mov
mov
inc
mov
xchg
xorb
inc
dec
bound
lret
mov
sahf
int3
sbb
clc
aam
adc
adc
scas
mov
xchg
hlt
add
fistl
fisubrl
rcl
jno
aas
push
mov
sub
jb
dec
pop
jl
cmp
jecxz
add
test
mov
bound
aaa
xchg
lods
dec
and
repnz
xor
roll
and
push
sub
pop
push
pop
jnp
inc
leave
nop
cmp
out
scas
mov
lret
loopne
push
aaa
sub
pusha
hlt
mov
mov
enter
stc
push
int3
pop
add
xor
jo
cmp
sti
xchg
jge
cmp
addr16
cmp
push
sub
cmpsl
outsl
inc
leave
ror
cmpsl
cmp
dec
adc
jp
jmp
mov
sbb
pop
in
pop
cmp
das
jne
mov
inc
push
rol
lds
insb
push
sub
repz
arpl
js
dec
loop
sub
outsl
dec
mov
inc
pop
mov
add
jg,pn
pop
dec
xchg
jecxz
fidivrl
in
adc
out
mov
or
insb
imul
es
mov
mov
inc
dec
push
int3
sbb
fs
xor
sub
jbe
ret
lds
cmp
jecxz
into
xor
sub
addl
dec
xchg
idivb
xchg
xor
inc
sbbl
popf
xchg
outsl
stos
popa
aaa
cmpsb
jbe
add
cld
fcomi
push
sbb
data16
out
mov
pop
mov
jle
jecxz
adc
mov
insb
pusha
mov
dec
push
xchg
movsl
daa
mov
add
or
fistl
add
pusha
imulb
xor
push
dec
xchg
dec
fstp
stos
dec
scas
es
mov
jne
jne
cmpsb
hlt
sbb
inc
lcall
shlb
test
mov
sbb
adc
das
and
mov
xchg
cmpsl
xchg
gs
xchg
shll
mov
adc
cmp
add
inc
mov
pop
xlat
jmp
dec
pusha
sarl
into
pop
mov
imul
int3
dec
cmp
dec
push
cwtl
mov
arpl
movsb
xor
and
test
leave
pop
lahf
insl
out
shl
add
mov
js
cmpsl
cli
test
xchg
cmc
imul
mov
jno
adc
fisubrl
inc
mov
das
jmp
jmp
push
or
int3
popa
hlt
jno
jae
and
popa
mov
jle
jge,pn
jle
orl
xor
push
jmp
xchg
mov
or
cmp
xor
push
into
sub
adc
sub
pop
loopne
lret
movsb
adc
in
dec
xor
cmp
sub
mov
push
xchg
lahf
mov
fucomp
pop
dec
sub
scas
arpl
jne
xorb
push
xor
outsl
inc
inc
push
ret
stos
cli
jb
pop
fimull
pmulhuw
add
shlb
fistpl
fisubl
gs
add
lock
jecxz
not
and
xchg
sub
mul
cmp
mov
sbb
insb
push
insb
add
xlat
or
out
fisubl
test
mov
testb
add
cmp
fsubl
sarb
daa
xor
imul
test
lcall
rcll
dec
sub
fldenv
push
mov
jmp
fucomi
adc
scas
sub
test
mov
je
lret
repnz
gs
mov
or
inc
inc
or
mov
bound
ret
fdivrp
pop
pop
add
sahf
dec
push
xchg
mov
fsubs
mov
popf
out
xor
leave
xchg
ds
insb
and
cltd
stos
xor
xchg
mov
jns
lahf
sub
adc
inc
cli
xor
jmp
push
xchg
push
movups
imul
sti
mov
pusha
lds
call
jne
inc
adc
mov
icebp
push
lods
aad
and
or
cmp
in
daa
adc
bound
adc
xlat
jns
lea
cmp
add
sbb
iret
ffree
mov
inc
push
enter
pop
adc
arpl
xchg
incl
sbb
xor
fisttpl
mov
out
data16
ljmp
aas
fldcw
mov
cmp
das
lds
fucom
popl
sub
idivb
jne
test
lret
pop
adc
shl
mov
mov
inc
popa
push
push
adc
lock
hlt
stos
movsb
jne
pop
dec
sub
or
cltd
sahf
shrb
shll
pop
push
repz
aad
lods
stos
ret
mov
scas
and
out
sub
and
nop
sbb
jg
test
push
dec
and
inc
shrl
clc
jne
rorl
aaa
jo
popa
mov
xchg
loope
pop
xor
enter
rcll
jmp
lock
mov
std
ljmp
inc
cmp
pop
mov
cmp
inc
ja
mov
test
aas
xchg
divl
loop
dec
add
fdivrl
lahf
sbb
leave
test
fistps
push
orb
pop
loopne
jmp
out
js
negl
mov
fnsave
mov
lods
mov
outsl
mov
pop
inc
mov
icebp
cwtl
sbb
add
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
adc
jle
jge,pn
jle
inc
add
jno
mov
in
repnz
mov
sti
xchg
push
mov
icebp
sub
pushf
xor
mov
fisubrs
dec
sbb
cmp
adc
mov
inc
icebp
xor
adc
adc
push
insb
dec
and
rorb
aam
jmp
adc
xor
ret
es
or
add
js
lret
push
jne
sub
mov
sbb
sub
into
sbb
rcrb
sub
test
stos
inc
pusha
outsb
fildl
inc
mov
cwtl
mov
xchg
stos
sti
dec
mov
ds
movsb
cwtl
mov
pusha
jb
inc
dec
mov
mov
addb
or
fcmovb
xchg
arpl
subb
arpl
push
lcall
cli
popf
mov
jae
aaa
dec
fimuls
xor
shl
xchg
push
push
and
sub
or
and
xchg
fsub
adc
jne
inc
aas
movsl
jb
add
mov
in
stc
les
dec
pop
cmp
subl
loopne
ret
gs
jae
mov
pop
push
out
mov
adc
rolb
mov
lret
aaa
xchg
cmpsl
push
or
test
arpl
jg
mov
jns
xchg
int3
sub
mov
aad
inc
push
lcall
sub
divl
and
fld
outsl
arpl
sbbl
in
xor
dec
outsl
das
aaa
pop
loopne
les
shlb
xlat
and
pop
sar
jge
out
inc
stos
pop
shl
xlat
test
jmp
negb
push
push
lret
cmp
pop
cmpb
push
mov
in
mov
stc
cmc
mov
call
popa
adc
jo
inc
adc
clc
aad
ret
jle
lods
pop
dec
mov
add
or
scas
test
loopne
cmc
or
subl
xchg
icebp
pop
xor
ss
popa
inc
movsb
and
aam
add
mov
in
or
dec
add
and
push
mov
pop
and
hlt
and
adc
jns
scas
fldcw
test
pop
push
jg
xchg
pop
mov
and
pop
aaa
sbb
mov
pop
addb
cmp
mov
iret
xrelease
xlat
aas
test
lea
jecxz
mov
fadd
mov
ss
push
fs
mov
in
push
xchg
jl
clc
xchg
aaa
push
lret
loope
fdivrs
rorb
imul
int3
inc
inc
sbb
push
push
jl
std
jle
pushf
test
outsb
call
rorb
gs
or
push
mov
adc
lods
mov
push
xchg
jecxz
stos
adc
rcll
push
xchg
jg
insb
scas
xor
xchg
inc
call
xor
adc
add
jmp
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
xlat
cltd
loope
jle
jge
jle
dec
dec
test
imul
xchg
les
les
mov
mov
mov
int3
cmpsl
dec
pop
lea
cmp
sbb
jns
cld
dec
push
data16
scas
movsb
mov
push
cld
xlat
cmovns
cmp
mov
imul
call
jecxz
and
mov
cmc
jae
cmp
xchg
pop
push
cmp
or
push
xchg
xor
cld
sarb
sbb
inc
gs
mov
inc
cld
ss
rcll
mov
data16
ret
aas
out
cld
int3
aad
lods
or
jecxz
mov
mov
sub
ds
jmp
inc
add
mov
inc
mov
cmpsb
cli
leave
adc
ljmp
cmp
movsb
jecxz
cmp
jmp
mov
dec
icebp
and
mov
movsl
or
gs
pop
adcb
dec
mov
test
add
sbb
mov
sub
loop
mov
popa
xchg
test
int3
es
popa
lods
mov
adcl
mov
decl
ret
sbb
adc
jge
jne
ds
pop
jnp
je
mov
cli
jb
scas
mov
dec
imul
sbb
ljmp
ja
nop
repz
mov
icebp
inc
aam
ja
scas
dec
imul
sub
mov
repnz
fildl
add
adc
out
cs
mov
ficompl
mov
adc
lcall
dec
adc
shlb
add
cmp
push
das
rorl
and
and
add
cmp
imul
fwait
dec
add
sti
inc
mov
rorb
mov
add
pminsw
sbb
lea
lock
mov
xor
int3
aaa
jl
aas
cmp
jp
xor
inc
lods
jne
mov
jp
push
mov
adc
sub
xor
sarb
pusha
cwtl
mulb
idivl
push
jne
and
das
fistpl
iret
mov
pop
lds
popf
hlt
sub
shlb
mov
popa
mov
das
adc
pop
sbb
stc
xchg
jb
fsts
xchg
ss
lahf
xor
out
js
jecxz
adc
push
mov
lods
xchg
sbb
sub
sub
std
clc
cwtl
mov
push
cwtl
scas
mov
movsb
xchg
adc
xlat
cmpsb
jb
mov
jne
sbb
or
dec
cmpsl
xlat
shrl
popf
mov
jns
inc
xor
imul
jmp
xchg
ds
sbbl
dec
push
jecxz
mov
gs
push
push
les
test
pop
dec
jns
icebp
outsl
xor
sbb
xbegin
cmc
pop
push
mov
loope
mov
and
mov
jmp
leave
inc
mov
inc
xor
icebp
pushf
push
nop
cmpsb
xor
jle
jge,pn
jle
orl
sub
ss
pop
xor
and
push
aad
popf
cmp
pop
int3
cmp
inc
pushf
mov
inc
ret
sbb
mov
inc
jne
loopne
add
mov
mov
les
imul
repz
insb
push
push
lcall
xor
xlat
loop
pop
xor
dec
aaa
mov
pop
mov
push
fisubs
or
or
cltd
mov
xor
rcr
xor
pusha
in
xchg
or
rolb
pop
enter
repz
cwtl
mov
scas
shrl
inc
mov
or
sbb
xchg
ja
addl
fs
loop
sub
xor
add
pop
adc
sub
aam
add
mov
ss
in
pop
icebp
adc
je
sbb
sub
ror
and
cltd
pop
lret
xor
lcall
hlt
loopne
and
and
imul
cmp
mov
inc
addr16
das
popl
push
js
or
sbb
in
test
jg
jbe
push
loope
or
scas
xor
adc
inc
ds
cmp
idivl
mov
je
call
xchg
stos
lret
les
pop
rcrl
xchg
fwait
xchg
mov
add
mov
xchg
lret
push
daa
nop
push
cmp
xor
loop
ss
mov
fmull
mov
sbb
push
pop
xchg
pop
test
arpl
mov
mov
test
sahf
pop
mov
xchg
repz
mov
movsb
add
sbb
mov
dec
movsl
cmp
and
shlb
lea
or
in
add
popa
pop
aas
loop
jle
dec
cld
fadds
aas
xlat
sbb
ret
pop
ljmp
lret
pop
sti
nop
sbb
pop
and
roll
xor
push
inc
ss
xchg
stos
dec
sarb
pop
lock
sub
pop
stos
sbb
mov
push
nopl
popl
mov
gs
ja
int
sub
cmc
cmp
out
inc
scas
mov
adc
insl
imul
mov
push
call
adc
add
cmp
dec
cmp
and
loope
dec
or
lds
and
and
js
xor
or
pop
out
andb
lcall
cli
fsubrl
sub
jp
adc
lret
dec
cmp
rcll
cmp
fldcw
xor
addl
rolb
arpl
mov
push
sbb
push
aam
loope
mov
pop
outsl
shrb
xchg
lods
xor
add
dec
cld
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
call
jle
adc
icebp
cld
xor
or
sub
not
ja
jge
je
mov
inc
mov
add
sbb
inc
adcb
sahf
push
cmc
das
fmulp
outsb
mov
test
hlt
and
push
pop
jmp
jle
cmc
or
je
daa
and
push
adc
subl
sbb
adc
dec
orb
xor
add
sub
call
loopne
mov
jp
pusha
fwait
jmp
and
and
out
xchg
int
mov
repnz
push
imul
jmp
inc
jmp
imull
loope
shlb
loope
xchg
mov
repz
and
and
stos
hlt
rcll
data16
add
cltd
adc
call
lods
fistpll
jns
adc
clc
dec
into
jne
cmp
add
jo
inc
lcall
ret
pop
mov
mov
hlt
shlb
repnz
add
dec
std
mov
aam
popf
cmp
fistpll
cmc
xchg
sub
xchg
add
rclb
pop
ret
loopne
mov
adc
les
ljmp
jle
ficomps
test
insl
push
in
add
rcr
shll
enter
gs
hlt
daa
sti
dec
enter
fsubrs
pusha
es
scas
mov
mov
ffreep
pop
hlt
mov
movsb
leave
out
pop
pop
sub
test
call
pop
ljmp
test
int3
pop
dec
icebp
lret
push
add
xchg
stc
pop
cmpsl
aas
pop
mov
sarl
pop
das
out
bound
out
mov
push
test
mov
inc
jp
mov
adc
adc
sub
cmp
push
sti
dec
push
fadds
sub
dec
lea
ljmp
loopne
sub
lock
stc
add
loop
or
sarw
nop
pop
enter
inc
push
aaa
loop
clc
insb
outsb
stos
push
or
cltd
push
xor
lret
fisubs
xchg
sbb
add
movsb
jb
mov
sti
movsl
mov
mov
fisttps
int3
sub
test
lcallw
jl
neg
push
in
jo
aad
sti
or
mov
test
pop
sbbl
imul
in
pop
outsl
es
pop
repnz
fldenv
jmp
or
outsl
js
jmp
mov
or
add
ret
std
cmp
fistl
cmp
pop
hlt
gs
hlt
ja
mov
scas
dec
ret
mov
or
xchg
inc
mov
xchg
add
push
xlat
or
sbb
and
xchg
adc
pop
adc
add
out
inc
adc
and
dec
lods
jge
test
fsts
leave
div
adc
fsubs
or
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
pop
push
and
jle
jge
jle
fstpl
dec
int
inc
lock
adc
ss
adc
fisubl
test
lods
repnz
push
rorb
push
mov
dec
mov
and
jl
and
pop
leave
mov
pop
xor
xchg
inc
loopne
testl
sbb
imul
xchg
je
out
xchg
es
cwtl
mov
pop
mov
pop
xchg
cltd
pusha
dec
dec
mov
insl
xchg
sarb
dec
add
xsha1
cmpsb
mov
idiv
dec
scas
cmp
mov
push
xor
dec
cmpsl
cmpsb
mov
imul
sub
push
and
jl
jno
jne
fnstenv
dec
call
jg
push
xchg
loop
cmpsl
nop
mov
and
jnp
dec
inc
shl
test
bound
sbb
xchg
divb
insl
push
and
pop
inc
jno
jo
and
iret
dec
shrl
or
stos
cmpsl
mov
stc
add
push
out
xchg
mov
cmp
in
cmp
cmp
adc
mov
mov
repnz
lds
repnz
dec
std
add
pop
and
int3
jp
jl
ret
test
sbb
push
fsubr
jbe
test
mov
es
push
lds
pop
inc
lods
pop
pop
fnsave
fldenv
nop
cmpb
mov
outsb
daa
cmpsl
out
in
jne
sub
repnz
xor
jne
cmp
xor
dec
out
push
in
stc
xor
push
push
aaa
icebp
xorl
clc
fwait
insl
test
adc
push
sbb
mov
js
nop
mov
sbb
mov
jo
bound
cmp
hlt
mov
or
popa
adc
xchg
mov
push
sub
movsb
inc
pop
mov
int
call
xlat
sbb
or
dec
adc
xchg
xor
pop
scas
add
fcomi
push
insl
and
mov
cmp
or
gs
sbb
jge
pop
adc
repnz
inc
fldl
in
mov
lcall
repz
fildl
clc
jp
aad
std
mov
xchg
mov
sbb
int3
rorb
inc
filds
pop
mov
lods
fmulp
stos
jns
jo
adcb
xchg
mov
int3
cmp
fistps
xor
mov
iret
test
inc
nop
ljmp
mov
push
in
xchg
js
mov
jg
push
fcoms
pop
out
push
aaa
loopne
jmp
rorb
adc
push
scas
ja
dec
test
repz
daa
cmp
mov
mov
in
int
inc
push
mov
stos
and
mov
pop
adc
pop
add
repz
push
stos
insb
jns
mov
lret
lock
pop
mov
pop
adc
adc
mov
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
xchg
push
pop
fptan
jle
jge,pn
jle
mov
movsl
push
es
in
out
sub
test
push
mov
lcall
push
insb
jb
sub
and
cmc
ret
xor
cmp
fistpll
popa
pusha
popl
int
sbb
out
mov
xlat
push
stc
shl
dec
xchg
or
dec
popa
mov
mov
mov
adc
fsub
mov
dec
iret
int3
sub
pop
aas
inc
push
into
jmp
cwtl
int3
test
dec
fbld
leave
mov
int
jge
xor
lds
mov
cld
fidivl
jmp
mov
push
fstl
fisubs
inc
imul
jno
mov
testl
xor
dec
push
or
add
std
xor
mov
cmpsl
dec
sahf
add
testl
mov
dec
fs
adc
out
cld
mov
push
jne
jae
add
fiaddl
inc
repnz
gs
inc
mov
push
lds
fisttps
cmp
data16
fs
dec
fists
scas
loope
dec
xorb
pusha
mov
add
mov
sbb
pop
mov
or
and
js
mov
mov
cmpsl
lods
outsl
inc
test
pop
and
dec
pop
ret
jo
push
out
adc
jg
je
in
xchg
mov
dec
cli
or
and
pop
nop
data16
mov
dec
iret
push
mov
nop
adc
daa
lcall
or
ja
ficompl
inc
mov
inc
sub
adc
and
add
mov
and
add
sub
mov
jmp
popf
xchg
sub
pop
sub
xor
adc
repnz
push
pop
cmpl
lcall
pop
out
mov
jecxz
push
leave
fisubrs
cli
imul
stos
popa
in
cmp
push
xchg
adc
cmp
lods
gs
pop
sub
push
pop
adc
xor
push
pushf
xchg
js
cmpsl
pop
push
jg
lods
cs
arpl
clc
mov
js
dec
cmp
jno
adc
lock
gs
add
das
pop
ss
or
jnp
lds
jmp
add
stc
push
xor
fprem1
inc
daa
and
push
mov
fisubrl
jmp
and
add
sbb
sbb
inc
arpl
sarb
jne
push
cld
pop
add
and
aam
outsl
es
ja
xchg
mov
xchg
ja
aad
lock
repnz
test
das
repnz
inc
xchg
jne
mov
jne
inc
enter
push
add
inc
pop
push
jp
jbe
imul
aaa
sbb
sub
dec
cld
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
aam
and
mov
jle
jge,pn
jle
or
lock
mov
popa
push
es
ss
ror
mov
lock
xchg
scas
or
bound
int
cmpsb
fcompl
push
mov
loopne
fsubr
xchg
out
bound
mov
ljmp
inc
sub
push
out
punpcklbw
into
aam
mov
in
adc
stc
daa
lods
sub
sahf
outsl
cmp
inc
mov
out
jno
push
inc
in
leave
mov
push
sbb
push
iret
das
jno
mov
mov
cli
jl
inc
ds
stc
test
out
jbe
leave
xor
loope
movups
adc
adc
jge
adc
gs
push
addl
and
pushf
aaa
adc
movsb
dec
outsl
shr
push
pop
push
sbbl
fs
lahf
sbb
jmp
and
xor
jmp
test
aaa
cmp
in
rcrb
loopne
das
mov
mov
dec
movsb
ret
adc
jmp
popa
adc
pop
repz
push
pop
ret
cmp
in
les
sub
fisttpl
sub
mov
stos
add
popf
adc
jmp
add
inc
jno
xor
lret
push
adc
stos
mov
jecxz
dec
inc
pop
push
pop
icebp
xlat
sarl
dec
lcall
pop
mov
jb
pop
cli
mov
fnsave
push
leave
shl
popa
mov
lret
adc
lds
cmp
pop
pushl
and
jecxz
sub
loop
sbb
push
int
push
ss
imul
int
xchg
lds
adc
ds
mov
adc
mov
shrl
add
addl
and
sar
lahf
sbb
or
cmpsl
mov
call
jecxz
xor
addr16
or
cmc
repnz
mov
fldl
and
aaa
nop
dec
test
lcall
pushf
xor
jns
jmp
aam
out
addb
sub
and
lods
leave
add
hlt
fiadds
xlat
iret
lods
and
push
loop
cltd
cwtl
jl
mov
pop
mov
push
mov
sub
xchg
mov
and
xor
ja
add
mov
sub
addr16
push
lds
add
or
push
cmp
out
repz
inc
cli
imul
cmp
or
or
mov
orl
mov
lock
dec
rorb
push
dec
fs
mov
pmuludq
mov
pop
loopne
sub
push
movsl
sbbb
in
out
mov
xor
sbb
sub
outsl
gs
pusha
add
jo
fnstsw
repz
or
lods
cmp
jnp
jbe
div
jbe
cltd
call
inc
dec
xor
stos
dec
int3
and
or
xor
pushf
sahf
mov
push
movsl
in
shrl
or
lods
inc
xor
dec
or
movb
xor
jmp
pushl
outsl
jno
mov
repnz
cld
jle
jge,pn
jle
cmp
sarl
adcb
adc
mov
add
mov
into
cltd
push
aad
stos
js
or
and
and
sbb
shll
lahf
nop
xor
or
pop
mov
in
push
or
xchg
xchg
repz
mov
xchg
idivl
sub
mov
xor
xchg
dec
push
or
xchg
sar
mov
sub
lea
xor
push
mov
jge,pn
movsl
out
movsl
mov
out
mov
ljmp
xchg
xor
and
jb
and
and
push
push
out
add
mov
xchg
cwtl
outsl
outsl
stc
decb
cmp
mov
mov
jae
mov
xchg
cli
inc
out
es
inc
shrl
jle
pop
js
xchg
sbb
push
mov
jecxz
cmp
scas
int
mov
test
inc
inc
ret
repz
cmp
or
sub
push
adc
dec
fidivl
sahf
mov
mov
cmpl
push
sbb
loop
ss
incb
out
sub
mov
mov
popf
or
push
stos
inc
xor
ds
int
and
xchg
dec
lcall
aas
add
in
jge
ljmp
repz
mov
inc
jo
fisubrs
cmp
ljmp
jae,pt
mov
pop
sbb
ss
out
out
mov
fs
dec
sbb
sbb
insb
pop
lds
aam
pop
push
mov
lcall
jp
dec
adc
in
dec
nop
rolb
aaa
push
pop
mov
test
add
test
pusha
pop
shll
inc
cmpsb
insl
lret
dec
dec
inc
popf
into
gs
and
push
fs
pop
ret
push
sbb
inc
shl
fs
insb
or
fs
std
repnz
add
xor
popa
daa
sahf
mov
rorb
ret
stc
mul
add
subl
inc
adc
sub
push
and
dec
push
xchg
cwtl
jae
jns
sbb
test
push
jge
cmp
jae
add
fcompl
lock
and
pop
sbb
pop
xorl
pusha
push
mov
xchg
sub
clc
jmp
push
ja
adc
sbb
mov
mov
ret
lcall
out
rcrb
in
pusha
xchg
sub
cmp
and
cwtl
fstpl
aad
lock
pop
dec
movsl
mov
sbb
mov
push
jb
test
jo
test
lret
mov
cmp
cli
and
scas
insb
add
sbb
repz
mov
repnz
jnp
les
cmpsb
movsl
insl
mov
fldl
pop
xor
pop
sbb
push
aad
pop
loop
add
sarl
popa
xchg
stc
sub
jnp
cmpsl
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
hlt
sbb
fildll
jle
jge,pn
jle
push
pushf
jg
jnp
xor
ror
push
in
add
or
xorl
pop
int
stos
pusha
push
or
add
mov
dec
notb
lock
xchg
mov
into
sbb
ss
push
mov
xor
clc
in
aaa
pop
inc
lock
hlt
adc
ror
rcll
dec
xchg
loope
test
testl
and
sbb
bnd
jnp
es
sub
jae
inc
pop
lret
push
sub
jae
insl
pavgw
stos
enter
subb
jne
gs
sub
sub
sub
xor
fcomps
out
jecxz
mov
sarl
and
xchg
sub
and
clc
pop
jl
stos
sub
aad
int
rolb
mov
imul
jg
jecxz
arpl
popf
lods
outsb
lcall
cmp
out
mov
andb
dec
adc
int3
inc
lock
jo
adc
mov
mov
mov
mov
sub
jl
into
hlt
lea
pop
shll
jno
or
shll
xchg
jne
mov
roll
sti
enter
loope
and
add
sarb
ljmp
lea
cmpsb
popf
xor
add
add
cmp
jno
loope
leave
repz
add
leave
in
ror
xchg
pop
or
cmp
ret
jle
xchg
es
pop
jno
lock
xchg
outsb
fsubr
mov
fs
inc
loope
jl
clc
fcomps
ret
mov
or
adc
mov
add
xlat
adc
pop
insb
lcall
xchg
lret
xchg
into
inc
or
adc
add
or
adc
xchg
adc
and
add
scas
movsl
lret
loope
add
mov
sbb
adc
dec
sub
xor
mov
mov
jns
mov
es
das
jae
fwait
outsl
jle
and
jmp
inc
adc
sub
arpl
mov
push
jge
xchg
cli
add
xor
mov
je
cmpsb
dec
mov
mov
xor
sub
stos
mov
ja
and
stc
out
fst
mov
or
iret
sbb
dec
pop
shrl
outsb
iret
mov
add
jl
xor
cmpsl
nop
sbb
int
clc
loopne
dec
dec
fistl
jbe
mov
icebp
add
jae
mov
inc
cmpsl
outsl
lcall
jmp
add
pop
sub
stos
mov
lret
loope
push
in
adc
jl
mov
ror
insb
adc
rcrl
mov
mov
in
in
mov
fisubrs
std
out
xchg
out
into
sub
sbb
imul
test
cmpsl
or
or
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
xlat
dec
sbb
jle
sbb
and
data16
fdiv
push
out
mov
and
jmp
and
jl
pop
inc
sub
jp
xchg
sbb
mov
inc
stos
mov
fimuls
cmp
jne
cmp
icebp
push
push
lods
loope
flds
das
sub
les
jle
add
jl
insb
movsb
mov
mov
mov
mov
hlt
fbstp
jno
orl
pop
push
cmc
push
rorb
mov
jge
ds
pop
sbb
nop
dec
cmp
shrb
repnz
fcompl
or
mov
or
mov
nop
sbb
ljmp
sub
in
xchg
cmp
mov
sub
lcall
or
lds
push
into
xchg
add
int3
or
lret
in
mov
sbbb
mov
idivl
mul
out
push
xor
jns
std
test
jmp
mov
lret
in
insl
repnz
jae
lock
or
mov
fldt
leave
mov
inc
xlat
inc
pop
test
fstpt
and
add
or
dec
xchg
aas
push
xchg
rolb
flds
ret
aam
sub
mov
or
xor
jecxz
in
mov
mov
mov
cmp
movsl
mov
insl
mov
sub
outsl
stc
test
mov
push
push
jnp
ficoml
imul
jnp
add
lahf
or
cli
xor
inc
pushf
pop
hlt
and
shrl
mov
jbe
push
lods
scas
mov
imul
imul
cmp
out
xlat
gs
repnz
adc
pop
stos
sbb
stos
repnz
xlat
lea
push
and
out
das
test
inc
leave
sub
cltd
mov
fptan
cmpsl
jo
nop
out
mov
sbb
insb
cmp
outsl
pop
hlt
loope
xor
jge
cmc
jnp
shl
dec
jnp
outsl
mov
movsl
or
mov
andb
imul
jbe
mov
pop
into
call
mov
add
cmp
and
cmp
push
enter
inc
fldt
or
adc
push
aam
arpl
push
adc
cmc
js
pop
loop
mov
in
dec
add
cltd
idiv
rorb
movsb
mov
enter
fdivl
insl
inc
push
push
lret
inc
into
xchg
mov
adc
pusha
dec
iret
jmp
jae
icebp
fists
aaa
mov
jnp
out
push
cmpsl
mov
shr
rcrb
inc
subl
xchg
cltd
popf
or
ljmp
xor
notl
jge
pop
adc
insl
das
repnz
push
test
insb
inc
pop
pushf
dec
inc
dec
stos
js
jno
out
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
jb
in
leave
cmpb
jge
jle
cmpsb
fildll
sbb
loop
inc
cmc
jge
cld
xchg
loope
inc
dec
mov
test
jecxz
pop
sbb
js
cmpsl
out
inc
adc
dec
repz
cwtl
push
xchg
push
fdivrp
cli
enter
nop
mov
xchg
xchg
pop
loope
bound
xchg
jnp,pn
cmpsl
mov
jmp
or
jge
cwtl
jbe
xchg
mov
dec
pop
and
adc
mov
lds
lahf
mov
xchg
ss
or
or
mov
sti
and
dec
mov
hlt
or
xchg
lcall
scas
stos
jle
add
in
das
je
repnz
cmp
or
cmp
arpl
adc
icebp
dec
dec
cmp
loop
mov
push
outsb
pop
mov
sub
adc
adc
pop
fisubl
ret
xor
repnz
jp
jecxz
shlb
mov
adc
dec
jo
nop
mov
cli
es
imull
popa
ss
adc
push
or
shl
xor
adc
xchg
and
shrb
push
mov
sub
cmpsl
nop
cmp
je
or
cwtl
sub
out
mov
lock
sub
add
sub
and
inc
and
xor
ss
and
or
sub
jbe
daa
sub
into
mov
icebp
lret
imul
push
mov
jle
jmp
cmp
mov
popf
mov
xor
in
sar
or
andb
ja
movsb
outsb
or
test
icebp
push
std
mov
mov
lret
mov
cltd
cmpb
ljmp
cmp
cmp
rcr
dec
iret
ja
mov
and
mov
jle
test
xorl
inc
dec
pop
mov
mov
daa
mov
sbb
push
out
into
cld
movsl
mov
mov
mov
xchg
testl
enter
js
xor
pop
mov
pushf
or
jmp
adc
push
sub
gs
outsb
out
push
sti
jo
int3
cmp
push
scas
or
jl
mov
popa
xorb
dec
lret
push
mov
mov
stc
adc
mov
std
fisttps
sub
xor
cmpsb
pop
jl
inc
ffree
scas
dec
gs
arpl
ret
jg
cmpsl
maskmovq
notl
rcrb
xchg
cltd
pop
xor
push
push
fs
inc
mov
inc
xchg
pop
nop
sti
jns
icebp
jge
fistpll
adc
push
fsub
fsub
mov
int
fistpl
lds
pop
inc
lods
pop
pop
ret
hlt
jno
shrb
jl
ret
sub
adc
adc
adc
shl
xchg
adc
ret
sub
imul
add
jl
lock
cmp
dec
push
mov
repnz
dec
int
or
xor
mov
mov
dec
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
sub
loop
cmpl
shlb
jle
int
sub
and
aaa
mov
dec
dec
pop
xlat
mov
pop
jmp
pop
addr16
loop
fcmovu
lods
cltd
out
sbb
xchg
adc
movsb
imul
dec
mov
pop
cld
fwait
lahf
adcl
divb
sub
fs
sti
test
mov
test
ss
push
push
add
cmovae
inc
movsl
iret
xchg
movsb
cmp
out
imul
ret
xor
aas
mov
push
cmc
jge
mov
xchg
pusha
je
out
xorl
jnp
mov
cmp
mov
testl
xchg
pop
mov
xor
pop
add
fwait
shll
mov
stc
mov
mov
dec
lods
mov
jne
scas
aas
fistps
stc
insl
scas
shl
adc
sub
push
loopne
push
dec
rcrb
sub
popa
push
cmpsb
lahf
insb
mov
fs
add
insl
mov
cmovns
xor
cmp
lcall
xor
add
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
jne
in
lods
mov
and
jle
jnp
pop
and
cmc
cmp
cmpl
mov
dec
call
or
and
test
into
mov
popa
cmpsb
push
jnp
or
sub
and
aad
adc
call
pop
fwait
mov
add
imul
mov
je
adc
insl
jecxz
push
dec
bound
add
xor
add
cwtl
add
adc
nop
adc
or
add
test
lods
inc
mov
pop
mov
xchg
dec
enter
rolb
pop
jg
mov
stc
jmp
les
adcl
insb
nop
mov
fdivl
rcrl
mov
or
push
xchg
cmp
or
sbb
out
sbb
mov
inc
fdivl
sub
push
cmp
cli
add
dec
pop
push
xchg
adc
sub
push
mov
sbb
pop
sub
xchg
xchg
repnz
xchg
notl
mov
repz
add
into
xchg
popa
lret
push
adc
jae
sbb
fisttpl
xchg
call
sbb
decl
clc
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
rorb
jle
and
jle
sahf
call
pop
rolb
cltd
fdivs
xchg
cltd
stos
dec
iret
shrl
test
in
mov
jle
ljmp
scas
out
xchg
pop
out
jnp
sbb
cmp
mov
mov
mov
xchg
ljmp
fldt
notb
pop
and
leave
ljmp
inc
shlb
adc
bnd
cmp
cmp
push
push
fisttpl
sub
addb
xchg
dec
inc
outsl
mov
or
jb
mov
rcll
mov
mov
outsl
xchg
cmc
testl
pop
push
xor
sahf
outsl
pop
scas
pop
les
enter
mov
imul
es
xor
cmc
les
js
insl
pop
mov
sti
les
fcoms
scas
data16
enter
xor
xchg
leave
mov
sti
cli
mov
inc
mov
ja
leave
xchg
push
aaa
stos
and
mov
adcb
add
outsl
jo
test
sbbl
daa
in
pop
loope
inc
cld
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
mov
jle
jg
jle
mov
and
out
mov
lods
outsl
call
jne
add
icebp
mov
jns
stc
iret
mov
adc
adc
rclb
mov
mov
test
sbb
sub
test
cltd
ret
out
pop
inc
in
orb
push
fsubrs
in
cld
lret
or
push
nop
mov
notl
jo
xchg
cmp
idivl
les
add
push
dec
mov
sub
fdivs
loope
dec
xchg
jl
pop
adc
cmp
lahf
push
mov
pop
js
mov
sub
push
add
mov
jae
push
dec
fnstenv
and
testl
add
and
addl
pushf
cmc
sub
push
xor
push
icebp
call
neg
aam
xchg
dec
cs
xor
push
int3
mov
jnp
inc
rcl
daa
adc
xlat
cs
lods
mov
mov
jae
iret
dec
add
sti
cmp
or
lods
int3
mov
xor
mov
mov
mov
inc
pop
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
push
inc
cmp
and
jle
cmp
movsb
and
ds
and
sub
lcall
shrb
pop
sti
fstpt
lock
cmpsb
ljmp
hlt
dec
sbb
mov
mov
jne
scas
jcxz
push
jne
cmp
pusha
sub
sbb
lcall
es
outsb
mov
push
push
fistpll
loop
ja
lods
or
mov
lret
lea
fists
cmpsb
cltd
cmpsb
lock
in
into
dec
jne
cmc
je
or
mov
ror
aas
jb
cmpsl
lahf
push
jmp
into
jmp
xchg
jns
cld
loopne
mov
sahf
push
imul
mov
pop
adc
push
push
cmp
leave
imul
cmpsl
popa
dec
push
outsb
insb
sub
push
mov
mov
arpl
mov
fldl
cmp
xor
insb
dec
int
in
ret
jbe
mov
movsb
inc
fidivs
cmc
inc
xor
inc
ret
add
and
negb
or
xchg
jmp
mov
jo
mov
adc
jle
and
jle
xor
or
xchg
push
mov
xlat
outsb
fiadds
sbb
mov
mov
call
xchg
push
cmc
cs
lock
xor
or
or
into
jb
cld
pop
add
or
push
xchg
mov
ficoml
out
cmp
jmp
xchg
push
inc
mov
pop
dec
pop
cltd
pop
jp
pop
cmpsl
and
inc
es
inc
mov
push
inc
shll
in
push
jecxz
add
sub
clc
les
dec
int
scas
or
fcomip
int3
movntq
add
adc
add
lcall
push
jae
cmc
mov
or
add
sbb
lods
add
push
sahf
bound
and
push
lret
loopne
inc
movsl
fiaddl
adc
stos
or
cmpsl
nop
movsb
lods
dec
dec
fdivl
jns
cmpl
xchg
jne
cmp
mov
orl
push
movsb
repnz
stos
mov
cmp
fstpt
lods
movsl
mov
sbb
inc
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
lds
orl
mov
scas
cmp
xchg
js
daa
repnz
fs
pusha
pop
inc
cmc
pop
repz
mov
inc
lock
mov
mov
mov
shl
mov
pusha
cli
in
int
leave
movb
push
in
shll
mov
sub
jl
sub
outsb
lods
and
insb
js
or
js
es
repnz
dec
ss
or
pushw
shll
pushl
int3
inc
pop
aas
shll
cs
dec
cld
pop
aas
fnstcw
loopne
sub
rcrb
fstps
lahf
sbb
in
xor
mov
push
and
sbb
clc
mov
xorb
push
mov
jmp
xor
sbb
fidivl
fists
xchg
mov
std
icebp
mov
cmp
aas
mov
sahf
ss
mov
add
mov
lods
js
out
insl
aad
scas
movq
sbb
sbbl
jmp
movsb
fisubrs
inc
test
or
in
dec
jno
add
fiaddl
ret
adc
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
mov
mov
and
jle
or
inc
js
add
push
std
push
lcall
xlat
icebp
mov
inc
jle
loop
ret
addr16
test
rep
nop
fcompl
mov
jb
push
xchg
jp
lret
mov
imul
mov
lret
jg
jg
call
mov
adc
dec
jg
push
popf
xor
and
in
call
dec
jne
lahf
insb
loopne
pop
test
data16
mov
or
or
subb
ss
leave
stos
jmp
add
and
mov
std
or
adc
inc
cld
push
gs
mov
int
loop
sbb
and
adc
fistps
mov
shr
idiv
fisttpl
inc
xlat
adc
mov
dec
cmp
jae
out
jl
leave
popa
sahf
pop
hlt
sub
mov
leave
insl
dec
and
pushf
mov
jmp
inc
movsb
sub
and
adc
aas
jmp
rcl
clc
sub
cmp
repnz
les
ljmp
iret
dec
xor
cmp
xchg
jbe
aaa
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
or
addr16
or
cli
fildll
adc
iret
outsl
test
addb
cmp
mov
mov
xchg
inc
outsb
out
mov
inc
inc
sahf
dec
lahf
ljmp
enter
insb
scas
ficompl
jmp
add
push
std
jmp
shrb
das
sahf
jns
jnp
cmovg
push
mov
cs
inc
test
jmp
or
sbb
lea
lods
push
inc
out
mov
mov
fiadds
adc
out
dec
ljmp
jmp
add
iret
movsl
push
into
leave
hlt
stos
xchg
fs
cmp
adc
mov
bound
iret
sub
loopne
lret
imul
jecxz
mov
sti
rorl
or
aad
xor
fimull
cmp
push
mov
shll
pop
lcall
cmpsb
in
or
cmp
sbb
outsb
xchg
lahf
or
jns
hlt
xor
mov
outsl
mov
cmpsb
mov
fs
fidivrl
xchg
adcl
fldt
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
