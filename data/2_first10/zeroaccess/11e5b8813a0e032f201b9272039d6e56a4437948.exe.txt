push
mov
sub
xor
jmp
into
rcr
aad
mov
clc
mov
jle
js
xlat
cmp
fxch
pop
push
or
mov
lret
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
mov
cltd
test
leave
je
sub
fs
xchg
enter
out
in
andl
in
je
pop
add
pop
ss
jbe
clc
cmp
xchg
popf
out
pop
mov
pusha
jnp
mov
cmp
call
nop
out
cmpsl
jmp
or
or
pusha
shll
in
dec
sti
dec
mov
cmp
imull
cmp
mov
lret
fcmovbe
and
and
shlb
push
and
mov
shl
popa
push
out
dec
data16
mov
shrl
dec
mov
adc
jmp
jae
and
mov
lods
in
clc
addr16
xor
shlb
add
fldt
or
jecxz
mov
outsl
pop
stc
jge
mov
jmp
mov
or
loopne
mov
int
jmp
xor
mov
pop
sti
jle
jecxz
inc
lock
xchg
sbb
lcall
dec
mov
enter
lock
rol
cmp
repnz
je
and
cmp
xchg
jge
out
test
shll
hlt
shll
aaa
ds
mov
xor
inc
ffree
cmpsl
ds
mov
mov
addr16
punpckhwd
pop
mov
pop
repz
ret
arpl
in
negl
fwait
xchg
test
inc
inc
pop
jmp
xor
sub
jp
nop
in
js
out
sbb
add
dec
mov
movsb
cmp
shll
rorb
jmp
test
int
push
mov
in
jb
movsb
push
addb
xor
xchg
jg
jnp
xchg
mov
in
mov
hlt
das
test
jecxz
or
lds
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
out
sbbl
jle
js
cmpsb
insl
cmp
push
imul
or
jae
and
add
push
js
add
call
jge
and
aaa
insl
add
mov
js
inc
mov
les
jl
in
lds
mov
addr16
pop
popa
push
jmp
clc
fmul
pop
sbb
sbb
out
and
pushf
push
xchg
jl
shrl
iret
or
inc
lcall
sub
subb
loopne
xorb
insl
lret
movsl
das
dec
xchg
stc
xor
rolb
sbb
inc
imulb
daa
mov
lahf
inc
jne
lods
push
movsl
rolb
test
mov
cmp
sbb
or
lea
outsl
jle
sub
inc
lock
outsb
dec
push
jle
sbb
insl
jp
lods
cmp
outsb
adc
jne
add
test
inc
or
mov
data16
lcall
test
mov
sbb
or
movsl
cmp
fsubr
mov
ljmp
adc
inc
mov
cmpsl
push
enter
into
mov
push
mov
dec
xchg
ja
xor
xor
test
pop
hlt
pushf
test
out
notb
mov
in
push
lret
push
dec
xor
out
pop
scas
jmp
mov
push
test
and
jnp
bound
fldenv
sbb
xlat
xchg
clc
push
out
pop
lahf
fdivrl
push
adc
in
mov
int
mov
xor
xlat
lcall
fs
xor
mov
testb
inc
cmp
pop
mov
xchg
cmp
mov
lahf
fmuls
mov
push
xor
cmp
push
lret
lret
mov
les
test
mov
pop
mov
push
xchg
daa
dec
mov
out
out
cmp
fcomi
sub
mov
inc
lds
mov
lea
test
test
mov
sub
aam
push
cmpsb
in
fbstp
push
jg
mov
mov
sbb
push
negl
daa
mov
aas
jecxz
rcll
scas
inc
add
push
add
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
cmp
js
jle
js
dec
sub
adcl
popa
add
test
aaa
mov
mov
mov
mov
sub
loopne
popa
sub
jge
roll
mov
and
push
push
xchg
push
inc
xchg
icebp
or
hlt
pop
icebp
std
mov
pusha
inc
pusha
adc
add
xchg
les
stc
daa
cwtl
test
cmp
pop
mov
fwait
addr16
add
sidtl
jg
pop
mov
sbb
ljmp
push
arpl
xlat
jae
push
bound
pop
push
test
cltd
movd
jp
cmpsl
rorl
push
jno
mov
popf
stos
loope
loop
dec
push
xor
adc
dec
sbb
addr16
or
cmp
sbb
push
dec
je
stc
cld
imul
incl
or
outsl
inc
dec
pop
jne
neg
std
inc
mov
or
das
push
cmp
pop
adc
test
xor
xor
mov
mov
cmp
fstl
pop
arpl
push
repnz
cmp
mov
push
inc
xor
shrl
movsl
frstor
mov
test
aaa
sbb
xor
dec
je
mov
test
frstor
push
xchg
subb
fbld
mov
and
gs
out
mov
push
mov
mov
es
rcrb
inc
dec
inc
sbb
jg
mov
mov
xchg
sbb
rol
test
lcall
shll
lea
rcll
add
mov
cmp
rorb
jp
and
adc
jno
fidivrl
pop
mul
in
mov
fdiv
cwtl
in
jp
lcall
dec
fdivrs
outsb
pop
sar
jbe
sbb
xor
popf
xchg
adc
inc
sbb
dec
js
in
jl
inc
arpl
mov
jns
lret
adc
mov
rcrb
fisubrs
frstor
push
sbb
les
xchg
dec
out
jnp
mov
stc
arpl
adc
sub
or
mov
pop
adc
xchg
and
dec
adc
pop
jbe
jl
xor
lea
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
movsb
and
into
addb
js
jle
js
lahf
dec
mov
bound
roll
or
mov
fisubrl
sub
ljmp
mov
jmp
loopne
cmpl
mulb
sti
mov
cld
jp
xchg
aas
mov
pop
repnz
sahf
into
add
pop
rcrl
aad
das
adc
xchg
add
aad
addr16
bound
lods
test
mov
out
negb
repnz
std
xor
push
mov
push
jbe
jp
xchg
dec
arpl
sub
js
mov
arpl
cmp
movsl
test
xor
sub
lods
cmp
ror
push
repz
cmc
loop
add
ret
and
sub
mov
lahf
add
es
mov
int3
sbb
adc
jg
movsb
insl
lahf
jp
sbb
popa
out
add
fwait
dec
push
xchg
cmpsb
fistpll
inc
test
mov
outsl
es
js
scas
stc
mov
or
and
cmp
roll
xlat
addr16
jmp
dec
push
repz
fsubrs
or
push
and
insb
test
pushf
sbb
das
xor
and
xor
mov
add
loopne
fistl
xchg
cmp
stos
pop
scas
pop
push
push
push
push
lods
shll
or
pop
and
in
out
inc
mov
push
ja
pop
pop
or
addr16
cmp
nop
push
add
test
ljmp
aad
add
pop
mov
xchg
pop
out
daa
xchg
incl
repz
sahf
nop
mov
ficoml
pushf
lock
dec
cmp
dec
test
cmp
pop
nop
mov
je
mov
mov
adc
xorb
fsub
lret
lcall
loope
arpl
jnp
pop
or
das
sbb
subl
in
pop
mov
pusha
cmc
dec
adc
daa
test
jo
jl
sub
rcrl
fcoml
xlat
sbb
out
xchg
js
add
rcrl
mov
dec
or
inc
ljmp
mov
stos
mov
rcrl
loopne
ret
xchg
xor
pop
jmp
ror
adc
pusha
jne
mov
cmp
movsb
cli
test
adc
mov
push
cli
push
xchg
inc
fs
xchg
xor
ds
lret
loopne
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
xchg
out
aaa
add
js
jle
js
fwait
mov
adc
aas
lock
pop
jge
add
inc
fdivr
add
cmp
cltd
shlb
mov
sub
lods
gs
into
push
enter
gs
aas
add
emms
fstl
add
jae
fstps
movsl
call
ret
xor
scas
iret
sub
dec
out
stos
mov
lods
mov
push
ds
xchg
outsb
icebp
xchg
in
sbb
push
pop
xor
xchg
cmp
sub
fs
adc
xor
cs
and
push
or
in
dec
shlb
ljmp
sbb
xor
add
fisubrs
loope
push
xchg
mov
ret
dec
inc
or
inc
mov
add
cwtl
mov
mov
daa
add
add
push
repnz
icebp
imul
jo
xchg
gs
imul
xchg
mov
bnd
int
aad
repnz
cwtl
inc
sbb
push
es
hlt
ret
pop
inc
pop
pop
pop
or
cmc
cmp
stc
ljmp
xchg
gs
adc
adc
xor
int
cmc
out
popf
lds
lods
push
xchg
add
sub
push
jnp
cmp
sbb
in
cmc
dec
cmp
jb,pn
int3
push
shll
add
fsubs
xorl
and
cmp
mov
scas
cltd
mov
sbb
adc
je
divl
es
inc
out
and
jecxz
pop
fs
mov
lock
dec
and
bnd
rorl
aas
mov
mov
sbb
jb
add
adc
icebp
jns
mov
je
pusha
pop
mov
sbb
mov
sarb
jnp
mov
jns
cmp
andl
loop
addr16
pop
into
leave
sbb
adc
aam
iret
sahf
dec
mov
jae
dec
cli
out
sub
or
jbe
pop
shrl
pop
out
or
cltd
inc
cmp
sub
push
aas
dec
add
fsubl
cmp
addb
xchg
sbb
fldl2t
xchg
mov
insb
decl
sbb
mov
fldl
mov
jne
sbb
sub
arpl
sti
sbb
rolb
mov
add
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
add
js
jle
js
stos
dec
icebp
into
bound
das
stc
dec
mov
gs
mov
and
out
xor
push
popf
xchg
xchg
cmc
push
out
lds
cli
cmpb
jp
stos
sbb
fistps
popa
xchg
xchg
out
call
scas
sub
and
add
mov
shlb
stos
lods
lods
out
loope
popa
pop
fincstp
in
test
into
es
pop
sbb
dec
cli
fstl
out
and
insl
mov
xchg
in
mov
ds
jmp
stc
pop
xor
mov
mov
sub
fcmovnbe
xchg
das
fsub
aas
mov
sahf
xchg
sub
pop
fidivl
mov
aam
inc
or
cmpsl
mov
push
aam
add
js
dec
mov
jle
and
ret
into
xorl
add
lcall
fisubl
sbb
cmp
popf
mov
inc
shll
jge
adc
inc
lds
sbb
and
xchg
cmp
push
aam
adc
mov
inc
mov
xchg
push
or
xchg
push
popf
in
jmp
imul
cmpsb
sbb
jge
ret
aaa
mov
inc
xor
fcomi
dec
or
leave
xchg
popa
inc
decb
xchg
and
inc
xchg
mov
dec
mov
sub
daa
adc
push
push
rorl
fmull
rcrl
add
fildll
mov
mov
and
or
sahf
cmp
jg
popf
fdivl
gs
pushl
xlat
adcl
cld
aad
cmp
insl
popf
stc
jl
jns
push
sbb
popa
xor
push
rclb
iret
lea
cs
dec
daa
pop
testb
andl
loop
idivl
inc
lahf
dec
sbb
sarb
jle
clc
mov
xor
inc
dec
mov
cmc
movsl
les
cmp
mov
movsl
sti
jle
push
push
xchg
jne
mov
cmpsb
mov
repz
sbb
icebp
inc
gs
dec
jo
and
pop
sahf
sahf
dec
cmp
imul
cld
cmp
in
and
lods
cwtl
sbb
cmc
sarl
jp
xchg
pop
test
sbb
mov
mov
cmpsb
cltd
int3
mov
arpl
inc
pop
cmpsb
jo
cmp
sub
movb
xor
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
sbb
jle
js
cmp
fcmovnb
mov
and
stos
and
jae,pt
pop
pop
or
jnp
jecxz
lcall
ds
xorb
add
jmp
jg
jns
shr
popf
push
jl
push
push
jns
shll
pop
in
or
aad
pop
push
adc
sub
loop,pt
push
mov
mov
sbb
jge
xor
das
test
stc
add
sbb
adc
ja
sbb
xchg
dec
pop
pop
lock
loop
and
gs
outsb
sbb
pop
repnz
bound
in
js
hlt
xor
mov
dec
xchg
add
fnstenv
aam
dec
xchg
pop
cmpsl
fiaddl
dec
jmp
fdivrs
lret
dec
jnp
scas
movsl
xor
mov
je
lods
push
mov
out
add
hlt
icebp
ljmp
xchg
ss
push
cmp
xor
aad
ficomps
dec
lcall
sub
and
lcall
mov
xchg
dec
or
jge
pop
stos
lahf
adc
mov
dec
cmp
insl
cwtl
js
sahf
jnp
xor
outsb
xor
jge
xchg
sub
push
popf
dec
adcb
dec
rcll
jno
nop
jbe
jmp
xor
mov
popf
pop
push
mov
std
dec
fdivrl
jg
bound
jp
mov
push
xor
mov
dec
fiaddl
in
sbb
mov
adc
ss
mov
xor
push
jno
xor
mov
pop
repnz
xchg
push
adc
inc
out
orb
dec
mov
pop
mov
add
and
iret
in
xchg
ret
xor
mov
jecxz
repz
jns
mov
cmp
inc
or
pop
les
inc
jmp
gs
push
popa
lock
notl
stos
sbb
daa
pop
xchg
movsb
xchg
dec
decb
addl
icebp
stos
pop
sub
iret
xor
sbb
lahf
test
mov
mov
rolb
sbb
add
es
arpl
push
out
sub
mov
rcll
push
stc
jecxz
lods
test
inc
fists
push
mov
sub
mov
sbb
xor
cmp
jne
mov
mov
xor
add
mov
jmp
aas
lret
ret
aad
flds
inc
add
mov
vmread
jle
js
leave
repnz
mov
jo
and
cmpsb
or
sarl
in
inc
and
jge
les
lcall
je
lahf
jb
add
sub
stc
inc
sahf
sti
xlat
stos
ror
orl
or
movsb
xchg
and
cmp
out
sbb
push
pop
push
cmp
mov
mov
xchg
add
flds
pop
mov
jg
pop
dec
stos
pop
or
mov
mov
movb
cmp
jno
jns
and
pop
testb
lods
rclb
xchg
sub
push
aas
imul
push
adc
leave
and
xor
sub
jnp
int3
cmc
fistps
test
jnp
inc
jno
aas
mov
push
fsubs
cwtl
stc
mov
insb
call
adc
loope
cli
cmpsl
sbb
in
adc
nop
pop
jb
or
xor
mov
mov
sbb
xor
cmp
jb
dec
mov
sub
dec
jg
or
fisubrl
jno
sub
add
mov
mov
mov
add
sbb
cmp
or
add
test
fiaddl
repnz
push
hlt
jmp
hlt
test
mov
in
cmpsb
and
popf
lea
xor
push
fs
jns
jmp
in
shl
sbb
jle
mov
das
in
mov
loop
loop
pop
and
ja
xor
stc
push
and
sbb
daa
mov
js
inc
mov
rclb
push
sub
loop
out
lea
arpl
hlt
lret
xchg
aad
test
push
add
pop
repnz
dec
mov
mov
ret
js
jb
inc
adc
mov
outsb
ja
adc
mov
jae
cltd
sub
dec
pop
jmp
stos
test
sbb
push
mov
aas
or
xchg
enter
lret
or
repnz
inc
mov
movsb
mov
in
dec
les
mov
div
cmp
push
mov
cmp
psraw
js
or
push
pop
int
xor
mov
in
push
sbb
in
push
mov
and
jns
sbb
stc
subb
mov
add
gs
stc
les
adc
out
cmp
inc
lock
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
jecxz
lock
js
jle
js
sub
loopne
xchg
cmp
push
sbb
and
add
sub
sbb
xchg
xor
jl
pop
adc
or
add
mov
addr16
push
mov
mov
test
jmp
push
ret
es
sub
inc
repnz
scas
in
ficoms
inc
add
mov
mov
es
imul
imull
movsl
inc
icebp
outsb
sarb
subb
push
mov
adc
fnsave
popf
iret
jns
xor
scas
test
inc
push
xor
xor
cmp
movsl
mov
jbe
mov
inc
jb
int3
jl
xchg
in
shll
daa
sbb
test
das
dec
enter
addr16
cmc
jle
and
add
adc
mov
xor
jecxz
jae
sbb
leave
sbb
scas
enter
mov
neg
cmc
push
shlb
popf
and
jp
dec
dec
popa
xchg
and
loopne
sbb
xchg
jne
sbb
dec
mov
cmp
call
inc
lods
ja
cmp
mov
mov
out
data16
cmp
mov
or
adc
adc
icebp
dec
daa
xor
inc
mov
imul
movsb
int3
cmp
cmc
ss
cs
cltd
int
push
out
outsb
mov
das
mov
in
aad
fwait
push
fbstp
mov
pop
insb
shlb
mov
fildl
xchg
xchg
ss
mov
push
mov
inc
out
call
mov
leave
scas
lret
adc
jns
add
push
sbb
sbb
call
imul
ja,pn
aad
fsubl
dec
aaa
push
stos
test
out
mull
xor
adc
frstor
inc
jl
sti
add
arpl
mov
or
jl
xchg
ret
loop
lods
cltd
add
stc
and
sub
cmp
inc
sub
sub
xor
mov
popf
xchg
add
jb
daa
jp
sarl
lods
jne
in
fidivrs
xor
enter
add
ror
int
rcr
aad
bound
sub
cmova
jle
js
mov
sub
inc
movsl
xchg
bound
mov
mov
adc
jl
in
fldt
dec
test
and
adc
lock
movsl
xor
sub
sbb
mov
arpl
dec
loope
cmpsl
imul
or
dec
xor
inc
mov
inc
shrl
test
jnp
push
std
add
incl
test
pop
jno
lods
push
lcall
pop
or
xchg
pop
mov
adc
and
cmc
or
ret
fs
cmp
pop
mov
push
and
mov
xor
ret
jb,pn
outsl
push
daa
push
popa
int3
mov
sub
push
push
sbb
je
nop
mov
adc
rcrb
outsb
repnz
sub
inc
shl
mov
mov
pop
enter
push
cmp
test
int3
adc
dec
mov
sbb
add
das
dec
lods
sub
adc
sbbb
in
daa
in
jle
or
fsubl
xor
and
jns
inc
adc
ds
inc
jne
mov
andl
fstpt
stos
hlt
adc
out
and
repnz
jbe
push
sbb
aaa
cld
push
xchg
pop
mov
icebp
mov
rolb
fwait
cltd
imulb
jp
icebp
or
push
cld
push
xchg
divl
mov
xor
pop
pop
cmpsb
push
pop
loope
add
and
sbb
pop
daa
lahf
mov
mov
inc
aam
subl
pop
and
jns
pop
cmp
push
jl
shrb
jp
dec
cmp
pop
rcll
pop
movsb
rolb
cmp
mov
std
shll
mov
lods
xor
cmp
js
sbb
call
add
popa
in
inc
ret
sbb
jmp
dec
js
mov
hlt
xor
mov
pop
ds
xchg
jnp
jns
sub
out
cmpsb
sbb
loop
sti
shrb
mov
nopl
jbe
lods
cmp
test
rcl
ja
std
sub
movsl
pop
adc
push
mov
sbb
out
fwait
or
mov
iret
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
and
popa
loope
pop
js
jle
js
pusha
inc
mov
mov
ret
or
out
push
cmp
sub
or
add
pop
add
int3
cmp
cmp
adc
pop
loop
sbb
dec
loop
adcl
fucomip
imul
popa
ret
inc
pushf
mov
mov
scas
sbb
cltd
mov
ret
in
aad
adc
mov
out
mov
nop
popl
add
sub
mov
andb
mov
dec
xchg
cmpsl
xor
jnp
mov
and
sub
sub
repz
test
nop
dec
imul
push
pop
lock
lret
xlat
call
insb
fnstsw
std
rcl
popf
pop
ret
cmp
or
mov
cmp
xor
xchg
ljmp
or
push
adc
xorl
pop
mov
div
fmul
shll
cmp
xor
cmpsb
scas
stc
ljmp
lods
aam
xor
jge
xor
hlt
dec
and
add
loope
ret
push
mov
fldenv
and
push
or
xor
sbb
loopne
lret
xchg
out
and
outsl
mov
fbld
push
int3
das
out
aaa
inc
dec
push
xchg
jmp
mov
insl
mov
lds
dec
mov
aad
xlat
or
les
jb
movsl
das
ret
sbb
popf
sub
add
xorb
test
ret
stos
rcrl
jnp
push
sti
adc
cmp
or
lods
inc
or
push
out
pusha
jge
sbb
jg
ret
and
int
aaa
shrb
cmp
outsl
jle
call
dec
jae
sub
repz
xor
xchg
mov
xor
mov
sub
sbbl
pop
xor
push
dec
pop
fistpll
call
jg
insb
and
mov
ror
ds
shlb
arpl
mov
ret
cld
lret
xchg
cmc
pushf
rorb
repnz
nop
xchg
pop
test
inc
cmp
inc
push
xor
shll
cmpsb
int3
ds
push
mov
in
sti
fwait
inc
out
aas
cli
rcrb
cli
sub
cmp
fmuls
cmp
mov
or
jo
andb
inc
or
add
add
int3
ror
ror
test
xchg
push
push
ss
xchg
adc
js
icebp
stos
test
mov
and
add
int
mov
out
xchg
cs
dec
sbb
mov
sbb
ds
mov
jnp
es
mov
sub
push
xchg
movsb
dec
lcall
std
rorl
and
loop
sbb
pop
pop
stos
mov
sub
and
mov
mov
dec
loopne
mov
inc
mov
outsb
or
pop
adc
and
je
cmp
fnsave
rolb
gs
fstps
test
add
mov
add
mov
or
pop
js
test
sahf
xchg
xor
cmp
push
clc
add
aad
xor
test
cmp
inc
sub
pop
data16
inc
push
push
push
pop
adc
sbb
inc
gs
inc
movsb
inc
mov
mov
dec
sarb
sahf
imul
adc
popa
rcll
xor
dec
fdiv
push
xor
xchg
xchg
or
sub
push
fdivs
or
mov
or
outsb
or
call
notl
out
clc
sbb
pusha
testl
addl
call
inc
sbb
mov
shrl
mov
pop
pop
sti
lods
test
pop
mov
shrl
rclb
sbb
mov
fisubl
cmp
jbe,pn
shrl
jnp
rcl
inc
cli
iret
loope
test
js
bound
push
mov
scas
xor
jbe
lret
roll
dec
call
lods
sbbb
fildl
repz
and
stos
and
push
adc
dec
xchg
push
rol
push
or
dec
mov
cld
dec
jb
mov
push
imul
sub
in
jg
mov
jecxz
mov
std
addb
and
sahf
cwtl
mov
push
push
pushl
icebp
cld
gs
or
fdivl
in
or
repz
lcall
jl
scas
sbb
pop
inc
stc
nop
insb
mov
out
push
stos
popa
les
insb
aam
aas
popf
mov
ds
mov
add
xchg
fs
scas
jno
mov
mov
jecxz
lahf
push
mov
dec
jb
push
sbb
mov
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
sub
notb
sbb
jle
js
je
xor
cld
mov
arpl
cmp
inc
xchg
dec
push
enter
insb
lods
mov
shlb
iret
and
mov
cltd
and
out
xor
decl
out
sbb
sub
jg
iret
icebp
push
push
mov
out
pop
sbb
push
cmpsl
add
pushf
movsl
add
xchg
xor
mov
sub
dec
mov
je
xlat
icebp
xchg
jbe
adc
mov
dec
lret
sub
scas
mov
sbb
bound
dec
ja
mov
mov
popa
int3
push
xchg
xchg
scas
movsb
pop
adc
out
cmp
jecxz
test
cli
jecxz
sarb
lock
jae,pn
dec
mulb
aas
cmp
in
stos
stos
in
xor
je
adc
sub
nop
inc
jl
mov
mov
push
pop
inc
and
jne
das
btc
dec
sub
xchg
lcall
test
test
xor
je
mov
ds
pop
gs
mov
inc
mov
xchg
mov
in
paddw
popf
inc
jecxz
out
mov
loop,pt
or
jno
mov
mov
sbb
xlat
daa
xchg
mov
sub
addl
ret
or
call
and
mov
mov
orb
push
adc
add
es
movsb
dec
inc
cmpsl
shll
lahf
mov
bound
cmp
adc
daa
push
sbb
sub
jae
mov
xchg
jb
les
shrb
mov
mov
push
or
and
cli
incb
insl
inc
mov
and
adc
into
neg
jae
mov
sbb
dec
scas
jmp
lea
or
jl
and
sub
mov
daa
sbb
jecxz
sub
cmpsl
pushf
pusha
cmp
lret
inc
mov
lret
cs
cmpsl
imul
dec
add
cmp
jge
repz
mov
adc
shlb
bound
test
and
aam
inc
mov
out
popa
cli
lds
fdivl
pop
pop
sub
mov
scas
pop
inc
movsb
int3
stc
psubw
cs
outsb
int
mov
xor
outsb
and
mov
xor
and
push
xchg
mov
jo
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
xor
xchg
and
adc
addr16
add
sti
rorb
cmpsb
repnz
mov
dec
insl
sarb
pop
mov
jg
xchg
dec
xor
out
mov
pop
cs
aam
sahf
sub
pop
and
mov
inc
push
xchg
in
cmc
xor
hlt
mov
pop
inc
pop
push
int3
fcomi
ja
push
xchg
pop
inc
rcl
ret
jae
add
mov
inc
sbb
ret
fsubrp
loope
push
leave
stc
bound
inc
jne
inc
hlt
push
adc
jae
xlat
scas
inc
stos
lods
and
insl
mov
mov
push
cmp
ffree
lret
addl
repnz
clc
dec
push
add
jne
cmp
sub
ljmp
sti
cltd
pop
arpl
sub
push
push
addr16
adc
out
cmp
insb
fdivrl
jns
insb
testl
xor
cwtl
sbb
sbb
dec
hlt
test
lret
xlat
mov
inc
pushf
in
mov
mov
movsl
mov
dec
iret
fwait
push
fs
pop
ja
scas
cmp
add
ss
xor
mov
xor
and
mov
adc
and
fsts
iret
or
push
xor
jae
inc
mov
mov
aaa
xlat
mov
pushf
sub
ljmp
lock
les
in
inc
addr16
imull
cmp
in
lret
jno
push
mov
adc
mov
xchg
cmpl
lret
ds
sub
filds
adc
mov
scas
loop
in
mov
jge
mov
inc
stc
xor
push
test
je
cmp
aas
sub
sti
jne
pop
lcall
fistps
jmp
sub
add
repz
mov
adc
mov
adc
mov
or
xchg
xchg
push
mov
mov
lretw
push
imul
pop
scas
loopne
loopne
insl
and
sbb
inc
jge
fldenv
sbb
inc
leave
and
mov
repnz
add
jmp
into
rol
ror
mov
fsubr
add
jle
js
cmp
or
cmp
pop
jmp
pusha
xchg
fists
cmpsb
mov
out
outsl
stos
mov
sahf
add
xchg
js
and
sti
push
rorb
inc
fisubl
test
stos
ret
scas
loope
mov
and
xor
cmp
mov
jmp
call
mov
and
dec
loopne
push
pop
popf
pop
xchg
dec
push
std
lods
pop
cmpsl
cmp
aad
dec
mov
sub
jmp
js
mov
fs
repnz
sub
movsl
test
in
test
out
shlb
ljmp
sub
lret
jne
sub
ret
pop
push
and
xlat
push
mov
stos
adc
sbb
pop
sti
or
mov
ret
sub
pusha
out
in
mov
or
sub
mov
mov
push
jmp
or
mov
out
out
cli
xlat
xchg
lret
push
and
push
aas
dec
pop
add
js
daa
cmp
out
add
cmp
sub
add
fidivrs
notb
sbb
xor
repz
push
sbb
adc
fcomps
aas
sub
rcrl
das
out
testb
lds
aam
push
subl
stos
popf
adc
add
cmc
pop
xchg
cmp
inc
xchg
sub
cmpb
inc
pusha
sub
out
dec
mov
mov
and
sub
and
mov
push
fs
xor
fcmove
sahf
inc
inc
mov
xor
pushf
dec
movsl
sbb
sbb
add
fisttps
addr16
sub
mov
stos
adc
test
nop
xchg
or
dec
jge
push
or
dec
jmp
adc
sarb
push
roll
in
xor
or
mov
hlt
jnp
daa
inc
push
pushf
insl
mov
cmp
nop
push
out
sbb
lods
pop
pushf
xchg
testl
daa
xor
scas
inc
xor
scas
rcrl
mov
test
lretw
call
in
or
pop
cmp
inc
dec
mov
xchg
push
sub
adc
dec
adc
pop
lds
sti
sub
in
addr16
adc
xor
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
push
int
bound
jle
js
inc
xchg
xchg
sub
in
jno
pusha
lret
cs
enter
mov
lock
ret
les
sbb
mov
add
std
cwtl
sbb
mov
lret
add
xor
or
ret
mov
addr16
mov
dec
dec
cmp
movsb
xor
sub
dec
push
adc
push
cwtl
aas
outsl
sbb
loope
loope
inc
sbb
xchg
xor
shl
insb
mov
mov
or
inc
hlt
inc
sbb
testb
or
popf
add
addb
adc
push
mov
loope
in
jns
add
pushf
jae
decb
jnp
push
inc
push
ds
lret
cmpb
xchg
pop
inc
or
pop
enter
jns
pop
inc
mov
pop
pop
andl
xchg
cmc
xor
and
inc
in
js
mov
out
dec
cwtl
cmpl
pop
out
jp
and
rcrb
sbb
jno
lea
repz
fisttps
cmp
xchg
jmp
jmp
shl
lcall
adc
push
lea
pushf
push
inc
mov
bound
xchg
xchg
out
das
jns
mov
lods
jne
jnp
call
rcrl
xchg
mov
push
dec
insb
aam
xchg
push
or
dec
pop
pop
lret
pop
sub
cmp
rcll
test
cmp
das
or
lods
fimull
insb
pop
pop
xor
mov
es
bound
push
mov
daa
mov
bound
in
call
test
push
or
jae
ret
bound
xchg
push
sbb
scas
adc
xor
imul
dec
mov
enter
mov
pop
adc
or
into
mov
repz
scas
sub
adc
xor
jne
mov
fisubrl
je
push
insl
scas
jae
inc
xor
sub
dec
imul
pop
mov
pop
dec
movsb
add
fwait
mov
jmp
mov
pop
jl
out
mov
fcomi
push
gs
data16
cmp
movb
imul
lock
nop
lods
sub
add
aad
movsb
sub
push
lcall
addl
xchg
xlat
mov
push
push
sub
mov
pop
movsb
push
daa
lahf
repnz
and
jl
cmp
push
pop
xchg
addr16
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
pop
sbb
and
jle
js
pop
and
and
divb
add
cld
lahf
into
push
jno
in
ljmp
add
stos
inc
adc
rolb
lods
shr
dec
ror
stos
test
jge
sbb
xor
jmp
ja
or
mov
mov
push
sbb
movsl
mov
sbb
xor
inc
cmp
xor
pushf
push
jge
or
xchg
and
jae
pop
dec
imul
in
repnz
fsubp
or
mov
xchg
mov
stos
and
movsb
push
push
push
xor
sbb
pop
push
jo
push
jge
pop
push
mov
pop
add
sbb
in
jp
push
xor
leave
out
push
mov
cmp
mov
mov
imul
jg
push
inc
popf
adc
aas
aam
mov
lods
stc
mov
aad
icebp
das
jp
ret
jo
aad
out
mov
jmp
aad
fistpl
test
push
ja
je
xor
xchg
lea
lret
fimull
lds
dec
arpl
fbstp
insb
sarb
popa
mov
xchg
push
ss
dec
flds
sub
aas
pop
cld
and
insb
popa
stos
jg
int
mov
dec
loopne
sbb
push
push
jne
jbe
in
aad
ljmp
mov
pop
lock
mov
push
push
add
arpl
xor
mov
aad
adc
xor
aaa
xor
fsubrl
xor
sub
sub
xchg
push
mov
jecxz
and
jecxz
outsb
pop
in
lock
mov
in
aad
lret
mov
jecxz
xor
sub
jno
mov
or
iret
push
push
popa
out
mov
out
xchg
pop
push
dec
cmpsl
iret
jb
lods
add
cld
cmp
push
icebp
call
in
jmp
adc
lock
stc
insl
fimull
daa
xchg
decl
sbb
je
mov
scas
lcall
push
jl
cmpsl
adcb
jnp
mov
cmp
ret
jecxz
mov
fdivrl
push
imul
cmpb
adc
movsl
out
stos
loopne
jp
sbb
push
jge
push
idivl
pop
out
movsl
popa
outsb
mov
in
adc
leave
int3
xor
sbb
xor
daa
out
and
aad
repnz
jmp
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
decb
jle
js
jmp
sbb
xchg
jge
decb
jne
mov
fisubl
pop
or
rcll
adc
enter
cwtl
dec
dec
test
lods
sbb
lret
push
ret
dec
movb
ss
mov
das
xor
add
lret
jbe
mov
mov
xor
movsb
leave
daa
mov
lods
and
cwtl
mov
xlat
adc
fs
sbbb
jae,pt
lock
and
xchg
popa
cmp
xchg
cltd
fwait
lret
fldenv
stc
xchg
int
mov
out
mov
or
aad
pop
lea
add
movsb
movsl
lock
xchg
jecxz
sbb
push
sub
push
bound
sbb
js
mov
repnz
pop
shrb
cmp
gs
shrl
scas
icebp
and
dec
insb
int
les
jg
mov
inc
lea
test
push
dec
push
and
int3
push
nop
xchg
inc
xchg
and
ljmp
xchg
repnz
sub
and
add
in
mov
ja
xor
pop
mov
sub
not
dec
ud0
imul
mov
cwtl
pop
mov
mov
adc
adc
pop
test
and
stc
mov
rcll
and
das
in
xchg
mov
push
and
adc
clc
jno
test
dec
movsb
mov
data16
jp
imul
adc
ret
push
jge
add
pop
or
repz
xor
add
fstpl
or
test
adcb
pushf
xor
fisubs
lods
shll
loop
push
dec
stc
jnp
push
xor
sbb
mov
call
jp
inc
and
stc
push
pop
arpl
push
addl
rcrb
cltd
jno
jb
add
mov
mov
jb
mov
add
rolb
movb
xor
mov
mov
test
in
mov
cld
mov
mov
jno
popf
jle
call
inc
xor
dec
int3
jae
divl
lds
ds
scas
inc
mov
cmp
adc
xor
adc
mov
cmp
jbe
jb
fwait
rorb
out
or
fstpl
xor
mov
outsl
jae
sub
push
imul
ljmp
lahf
lcall
or
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
jne
bound
sub
dec
jle
js
ret
push
gs
cmc
popa
gs
leave
jae
jecxz
mov
push
add
ja
add
adc
rcrb
mov
fwait
lcall
adc
mov
xor
or
loope
mov
ret
scas
das
imul
int3
js
dec
sub
loop
out
and
inc
ret
test
inc
repz
lret
dec
mov
mov
dec
and
mov
or
loop
cmc
cmp
test
cmpsl
pop
pop
bound
inc
fisttps
incb
fmuls
cs
imul
aad
dec
outsl
addr16
add
bnd
outsb
push
inc
jl
cmp
in
sbb
shll
in
and
js
leave
sub
mov
add
cld
loopne
xor
and
pop
jp
lahf
adc
fs
xor
dec
pop
outsl
sub
lds
xor
inc
and
jo
out
push
adcl
stc
or
xchg
mov
cmpsl
lods
jge
mov
jl
fadd
les
sbbl
insb
roll
mov
fstl
scas
pushf
out
cmp
push
dec
or
mov
notb
jmp
dec
cmpl
sub
dec
and
cmc
mov
xor
cmp
dec
xor
jg
lret
cmp
cltd
movb
cltd
or
stos
fwait
push
or
std
xchg
push
iret
push
call
dec
push
jle
test
in
push
fdivs
mov
int
cmp
dec
lret
ss
icebp
add
inc
mov
sub
xor
sahf
mov
mov
leave
mov
je
orb
outsl
in
in
inc
addr16
cld
outsb
adc
pop
mov
pusha
pop
jae
pop
pop
data16
pop
arpl
movsb
mov
lea
popf
mov
adc
lods
cmpsb
inc
stos
imul
mov
pshufw
into
push
dec
clc
push
cmpsb
xchg
rorl
iret
movsb
cli
and
pop
icebp
mov
mov
ja
clc
pop
outsb
scas
mov
xor
sbb
mov
imul
into
negb
aas
dec
mov
iret
popa
adc
cli
or
jb
dec
mov
ljmp
mov
push
int3
cmp
sbb
jg
in
add
clc
repnz
rcr
or
jae
add
pop
mov
dec
push
addr16
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
inc
cmp
js
dec
jle
js
in
fwait
es
fistl
mov
or
add
sbb
dec
je
pop
lret
xor
mov
mov
mov
mov
xchg
xorb
xchg
lods
loop
mov
mov
mov
mov
cwtl
enter
imul
sub
dec
mov
mov
add
int3
mov
fwait
pushf
push
lret
jae
mov
cmc
adc
cltd
inc
icebp
mov
ja
add
mov
loope
std
movsl
imul
mov
aaa
pusha
repnz
out
mov
xchg
pop
mov
jle
jg
pop
inc
fdivrs
cmpsb
sbb
mov
dec
jns
cmovp
push
insb
sbb
icebp
push
cmp
mov
mov
fmul
int
xchg
mov
xchg
xchg
rolb
xchg
fisubl
sbb
fisubs
push
imul
mov
sahf
push
sbb
or
dec
dec
jle
in
jns
mov
arpl
jge
dec
and
inc
test
ja
mov
xlat
into
inc
cmp
sub
cmp
xchg
pop
imul
mov
xor
mov
sub
popa
jno
sti
mov
aam
xchg
pop
and
push
inc
sbb
xchg
mov
nop
cmp
adc
and
loope
cld
mov
xchg
jp
sbb
ds
ja
int3
sub
cltd
sbb
mov
cmp
dec
push
jo
adc
dec
xchg
fsubl
adc
in
lret
mov
sub
test
adc
add
xor
jnp
sbb
mov
adc
dec
add
mov
sbb
sbb
push
or
pop
lret
mov
outsb
cmpsl
fstps
arpl
fldt
bound
add
inc
cld
fs
cwtl
loope
test
or
xchg
pop
jb
nop
dec
push
cmpsb
xchg
xchg
aaa
fadd
popf
adc
xchg
pop
icebp
mov
mov
pop
pop
test
inc
fsubs
jae
rol
enter
cmp
cltd
mov
out
inc
mov
pop
loope
inc
mov
add
inc
call
pusha
push
add
xor
ljmp
xchg
push
jmp
xor
in
stc
mov
sub
or
subl
or
frstor
mov
out
lcall
cs
sbb
js
pop
mov
mov
push
iret
je
pop
push
inc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
orb
dec
jle
js
fistpl
push
and
out
mov
xabort
imul
sbb
nop
icebp
pushf
adc
jb
es
pop
loopne
inc
or
imul
ret
into
lds
push
inc
push
mov
fists
out
xor
loopne
xlat
xchg
or
mov
xor
mov
test
dec
pop
mov
pop
sbb
push
ljmp
inc
faddl
sarl
call
or
xor
xchg
lret
lods
outsl
sub
nop
or
aam
aaa
pop
xchg
jmp
sbb
sahf
or
mov
pushf
sub
dec
bound
inc
adc
cltd
cmp
je
mov
mov
xor
dec
sub
mov
sub
jmp
adc
fbld
outsb
mov
pop
lcall
insl
test
xchg
mov
inc
xchg
sub
outsb
push
fisttps
pushf
cmp
mov
push
mov
sub
mov
inc
in
rcrb
popf
xor
decl
pop
inc
cli
das
or
lcall
mov
scas
inc
lcall
inc
and
test
cmp
pop
int
pusha
xor
stc
les
xchg
xorb
xchg
or
in
mov
jnp
add
and
add
or
dec
scas
int3
dec
imul
sub
mov
roll
add
jbe
push
and
out
mov
add
xchg
pop
addr16
sub
rclb
aaa
rorl
sub
rorl
lods
jl,pt
lock
cmpsb
inc
ret
xor
add
cmp
inc
outsb
lock
enter
or
nop
ficompl
mov
mov
inc
aaa
das
adc
mov
cmp
sbb
bound
es
dec
pop
mov
mov
cld
mov
fcompl
xor
scas
xor
push
xchg
push
or
xchg
push
outsb
pop
push
dec
xchg
inc
inc
fnsave
lret
xchg
filds
or
xchg
insl
mov
dec
aad
sub
mov
xor
notb
inc
and
xchg
adc
fisttpl
lea
push
insl
mov
push
dec
jg
fwait
pusha
mov
cld
inc
mov
mov
mov
outsb
xchg
rorl
xchg
mov
inc
sbb
jns
in
fsts
pop
dec
test
pop
mov
and
ljmp
adc
rol
mov
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
mov
js
dec
jle
js
mov
cmpsb
xor
inc
inc
adc
xchg
sti
insb
sub
or
sub
cmp
inc
ljmp
push
jne
sub
mov
pop
pop
aad
js
xor
insb
addb
jo
popa
shr
aam
lods
mov
fs
mov
and
addr16
push
jmp
fnstcw
sub
or
lods
mov
xor
in
adc
xor
fldcw
shr
inc
and
andb
outsb
in
sbbb
cmc
lret
sbb
xor
in
and
fadds
and
sub
inc
mov
cmc
fiadds
imul
mov
idivb
jl
and
pop
and
jl
push
fnstsw
test
bound
sub
inc
push
jnp
cmp
es
add
outsb
dec
movsb
dec
or
aaa
mov
xor
cmp
adc
lds
ja
jecxz
sti
push
cmp
or
add
ret
xor
adc
das
dec
dec
jnp
inc
stos
mov
mov
and
jp
sub
outsb
and
iret
or
jge
movsb
out
das
mov
xchg
scas
decl
dec
ret
rclb
jnp
shlb
inc
cmpl
jne
insl
lock
pusha
jno
pop
add
call
outsl
stos
cs
push
addr16
pop
mov
pop
xchg
jne
mov
rorb
xchg
jle
jbe
jp
popf
daa
sub
cs
mov
push
jae,pt
xor
dec
pop
adc
cltd
push
mov
add
mov
in
add
sti
mov
mov
test
scas
mov
push
and
pop
in
cmpsl
fucom
repz
push
aas
adc
cmp
pop
int3
lds
dec
popa
pop
test
jmp
xchg
popa
popa
in
add
mov
inc
cmp
mov
xchg
sub
mov
push
es
ret
pop
and
add
xchg
movl
fdivl
xchg
pop
lahf
and
sahf
mov
data16
mov
test
ja
aaa
and
mov
sbb
test
mov
jne
add
loop
mov
inc
push
sub
adc
cs
fistps
ret
fwait
test
je
mov
xchg
lods
mov
mov
int3
cmp
loopne
pop
ret
int
sub
repz
jmp
pop
mull
push
pop
dec
inc
mov
sub
sti
int3
adc
xor
xor
xor
int
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
lahf
call
jle
js
pop
movsl
stos
inc
pop
or
sub
jne
call
mov
adc
xchg
leave
fs
lret
ja
cwtl
cmp
insb
jp
mov
mov
cmp
cld
sub
cld
ret
imul
inc
mov
mov
js
sahf
xor
and
leave
in
add
outsb
rcr
cmp
pop
rolb
sub
gs
lods
test
xor
jecxz
jmp
xchg
addr16
lcall
cs
addr16
push
loop
pop
adc
inc
fstl
pop
call
cmpsl
fldl
jo
jecxz
push
xor
jmp
fiaddl
daa
aas
push
loope
inc
inc
lock
loope
or
scas
sbb
pushf
xchg
add
pushf
and
mov
call
adc
sbb
fimuls
repnz
jmp
cs
or
adc
stc
or
inc
pop
mov
mov
or
or
push
xor
lret
push
aad
imul
or
jge
mov
jo
popf
into
jns
fcomps
push
inc
mov
lock
sub
rcrb
push
push
outsl
xchg
out
repz
and
mov
adc
stos
out
int3
cltd
shrb
jb
movb
fs
or
test
ret
cwtl
push
jae
lret
mov
jnp
je
adc
enter
jae
lcall
fadds
jg
aad
mov
fidivl
push
sahf
xchg
xorl
int3
xor
out
xchg
clc
mov
dec
cld
call
std
jl
fwait
sbb
mov
int3
movsl
inc
mov
les
mov
nop
inc
or
adc
std
pop
mov
sbb
xlat
nop
jecxz
or
jp
sbb
xchg
ljmp
pop
dec
shll
or
pop
incl
inc
pop
or
lock
xor
test
mov
pop
jbe
mov
sub
push
xchg
adc
pop
adc
testl
test
popf
je
mov
addb
les
out
dec
mov
push
aaa
jbe
test
in
out
mov
sub
xchg
push
lret
lods
and
mov
add
mov
pop
adc
push
mov
pop
cmc
aad
or
pop
scas
xor
nop
mov
pushf
push
imulb
xchg
cmp
mov
scas
outsb
ret
addb
mov
jbe
iret
pop
ss
repz
adc
dec
cmp
add
add
rcl
ror
aad
inc
jecxz
fsub
inc
xor
cmp
jle
js
xchg
xchg
jecxz
shrb
ja
sub
shll
cmp
sub
or
lcall
or
and
insl
ret
cmp
ja
dec
pusha
rclb
xchg
test
mov
repz
jge
ret
xchg
add
jecxz
and
sahf
push
mov
out
push
daa
scas
sbb
arpl
lcall
mov
mov
or
cmp
and
xor
mov
mov
hlt
test
dec
cmpsl
jp
addr16
pop
notb
mov
inc
popa
iret
repnz
js
hlt
imul
pusha
jge
mov
push
in
fadd
mov
xor
test
xor
lods
push
aam
fsubrs
out
into
decb
mov
mov
xchg
push
sub
out
mov
ss
push
fldl
cs
and
int
fcomps
aaa
inc
mov
lds
xchg
add
addr16
cli
and
aam
sub
cmp
mov
popa
std
xlat
sbb
xorb
jmp
iret
mull
iret
adc
jbe
cwtl
dec
stos
lea
shrl
lock
cltd
jns
rorl
test
sbb
xchg
xchg
mov
ss
push
add
adc
decl
mov
jb
jge
nop
call
sbb
lods
faddl
dec
mov
xchg
leave
aam
hlt
mov
ret
cmp
inc
lahf
mov
scas
sbb
xor
jmp
sbb
scas
scas
in
js
mov
sti
pop
lret
cmp
je
popa
pop
int
push
or
rcrb
mov
mov
pop
dec
inc
in
mov
adc
popa
subb
xor
mov
data16
icebp
xchg
jl
and
jae
mov
inc
lcall
mov
iret
lods
xor
pop
push
or
sub
cli
loopne
pop
daa
stos
and
sarb
insb
pop
sarb
sub
jg
mov
lcall
rclb
lods
add
inc
cmpsl
sti
adc
insl
sbb
mov
add
pmullw
fnsave
push
addr16
pusha
data16
mov
sbb
rcr
inc
ret
jp
std
jge
mov
push
mov
dec
lret
adc
pop
test
pop
pushf
mov
scas
fcmovb
mov
and
pop
jno
mov
sub
mov
mov
test
or
orb
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
sub
js
dec
jle
js
lds
insl
sub
daa
stc
imul
add
dec
cwtl
mov
xchg
or
or
das
jnp
fstps
and
jle
inc
xchg
or
jo
daa
sbb
cmc
hlt
adc
in
jns
fs
sti
mov
rorl
mov
push
add
inc
aaa
aas
mov
push
xor
jl
ficomps
mov
in
imul
pop
fmulp
fstpt
adc
arpl
or
pop
sub
jnp
xor
or
pop
in
pop
out
inc
sbb
in
pop
add
js
loopne
xchg
and
and
jbe
out
mov
jecxz
fs
jbe
loope
jge
mov
fxch
gs
add
enter
mov
xchg
inc
roll
gs
fimuls
dec
scas
adc
and
cmpsl
out
lds
pop
cld
mov
test
jmp
stos
jp
inc
pop
test
ret
cmp
jne
adc
clc
mov
xchg
call
dec
into
fimull
xchg
jp
ljmp
mov
stc
push
adc
or
pop
repnz
cmc
loope
hlt
mov
fnsave
cwtl
xorl
mov
dec
aad
nop
cwtl
cmpsl
adc
cmp
or
rclb
lds
mov
fsubrl
js
and
fisubrl
in
cmp
mov
ret
in
sarb
push
xchg
xchg
push
outsb
call
movsl
ret
xchg
and
inc
pusha
xchg
jnp
leave
je
lea
push
mov
stos
cmp
mov
cld
pop
xlat
pop
popa
dec
lds
inc
push
dec
cmp
sbb
test
lods
add
pop
icebp
xchg
or
jmp
loope
push
loope
xchg
xlat
jecxz
imul
idiv
pop
push
pop
fsubs
dec
add
push
add
sub
sti
add
push
call
bound
mov
outsl
sbb
fucomip
repz
into
lahf
dec
fld
movb
test
mov
fidivrs
clc
mulb
lret
iret
cmp
sbb
stc
adc
adc
call
lahf
iret
rcll
sbb
int
mov
int3
fisttpll
cmp
movsb
les
negl
or
jo
bound
pop
jmp
or
cmp
inc
out
inc
mov
jge
scas
rclb
stos
sbb
pop
xchg
sbb
sub
push
cld
pop
cwtl
lcall
inc
push
jl
mov
jnp
jae
jl
aad
stos
pop
or
xor
rcrb
adc
adc
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
and
add
cmp
dec
jle
js
mov
adc
iret
inc
lret
insb
leave
test
nop
xor
push
repnz
hlt
daa
jecxz
addr16
orl
mov
or
jecxz
dec
jb
push
and
or
std
and
mov
mov
push
loopne
add
addr16
in
pop
cmc
call
test
sbb
stos
test
xchg
mov
in
xor
cld
fsubs
orb
test
and
fldl
mov
push
aaa
sub
popl
sbb
add
movsl
mov
pop
mov
xchg
adc
xor
adc
push
sub
or
enter
outsb
add
cs
addr16
fidivs
jmp
rorb
inc
mov
jge
mov
xor
popa
adc
inc
sub
in
out
pop
aam
push
int3
popa
pop
push
bound
lods
pop
push
fcmovnu
test
inc
pop
jae
add
add
add
jg
jbe
dec
pop
cmp
std
jo
xchg
xchg
cmp
push
sbb
repnz
cmp
fsubrp
inc
push
push
push
pop
iret
cmp
or
push
push
pop
cmpl
scas
cld
cmpsb
icebp
fdivrp
adc
data16
int
sbb
push
rcrb
or
mov
sub
mov
push
and
sub
dec
sbb
orl
test
cmp
out
repz
mov
dec
hlt
jl
xlat
push
icebp
mov
fbld
imul
push
jb
xor
sub
and
cli
add
fnstsw
aam
xor
lea
ret
addr16
xchg
mov
adcl
enter
mov
nop
jle
lcall
adc
mov
mov
outsl
in
icebp
mov
out
push
or
fwait
out
call
stos
sahf
popl
aam
ficoml
dec
xor
mov
test
test
push
dec
lea
cmpsl
pop
sub
mov
add
call
clc
dec
mov
cli
movsl
test
xchg
stos
pop
inc
mov
adc
je
xor
pusha
push
mov
add
stc
ret
push
inc
mov
icebp
cmpsl
cli
mov
jno
test
mov
cmp
dec
mov
iret
or
mov
loopne
mov
sti
incl
js
es
add
dec
xchg
mov
mov
lret
stos
mul
cmpl
pop
mov
cltd
pop
loop
xor
jmp
rol
ror
leave
rcr
aaa
mov
out
mov
js
dec
jle
js
mov
test
scas
insl
inc
into
and
mov
fcomps
lock
mov
jl
and
lods
div
sub
adc
mov
xchg
jl,pt
inc
jge
aad
out
lods
dec
ret
pop
jb
js,pt
sub
pop
andl
popf
ds
mov
pushl
dec
xchg
jb
inc
and
mov
add
int3
shlb
lods
sbb
inc
pusha
jno
add
out
cltd
int
hlt
jnp
outsb
cmp
dec
cld
jmp
mov
inc
adc
ljmp
cmovle
out
test
xor
cmpl
cmpsb
fs
push
icebp
fs
loope
cmp
js
shlb
push
sbb
aad
cmp
ds
mov
or
pop
dec
inc
out
mov
sub
jnp
adc
sbb
jge
mov
fwait
test
jmp
in
pop
inc
movsl
cmp
outsb
mov
add
imul
push
cmc
cmp
pop
jne
idiv
stos
jbe
sbb
mov
in
daa
pushf
sbb
push
iret
mov
adc
shlb
fisubrs
scas
or
outsb
shl
xor
ret
inc
lock
cmpb
sbb
dec
cmp
in
call
jae
cld
pop
sub
loope
jnp
outsl
clc
push
out
mov
into
ret
vpmacssww
fdivl
xor
stos
pop
aas
pop
aas
icebp
in
jl
mov
push
sbb
mov
push
sub
ja
mov
ljmp
adc
mov
xchg
add
mov
pushf
test
lods
test
pop
out
int
out
xor
or
inc
mov
or
xor
leave
arpl
sub
pusha
cmpsb
cmp
sbb
push
in
call
jb
sarb
lods
fwait
cli
lds
or
inc
imul
mov
fimuls
inc
push
pop
mov
rolb
out
adc
cmp
jnp
ret
out
das
mov
mov
xor
xchg
ss
jle
and
sub
push
jge
pop
mov
test
es
mov
mov
jns
aas
test
dec
mov
inc
cs
xor
lret
jno
jae
cmp
and
xchg
mov
mov
sbb
xchg
cmpsl
add
adc
cmpsb
sub
adc
mov
mov
xor
and
add
inc
cs
in
dec
xchg
mov
jb
jmp
add
iret
rcl
lret
ror
xlat
lods
and
fidivl
js
dec
jle
js
fdivrs
sbb
aas
lcall
aam
xor
test
mov
mov
or
add
daa
lret
push
scas
mov
insb
jnp
xchg
out
mov
cmpsl
inc
inc
pop
repz
cwtl
jge
xor
mov
and
cmpsl
les
pop
arpl
sbb
mov
jmp
jnp
imul
sub
inc
mov
bound
jno
out
mov
jp
jne
ljmp
lock
dec
iret
dec
mov
jl
jge
push
fcomp
mov
lret
das
mov
cmp
pop
mov
movsl
in
xchg
sbb
push
mov
xchg
std
out
test
nop
jns
es
adc
inc
outsl
outsb
xchg
dec
mov
rcrb
pop
jg
dec
dec
movsl
out
or
mov
cmp
mov
adc
xchg
sahf
pop
sbb
sbb
fwait
sti
push
mov
mov
popa
cmc
xor
lods
sub
xchg
insl
aad
pop
push
mov
or
push
rcl
mov
mov
loopne
push
js
fwait
sub
popa
add
sysenter
loopne
jmp
sarb
shrl
les
stos
cld
out
pop
ljmp
push
add
xchg
test
adc
rcr
cmp
outsb
inc
mov
sub
mov
mov
int3
outsb
dec
je
test
xchg
xorb
les
sbb
adc
sbb
sub
push
repz
btc
mov
test
popa
mov
aam
fcmovb
dec
js
mov
xor
sbb
or
or
stc
loop
dec
mov
pop
les
add
pusha
or
add
jmp
and
scas
adc
pop
stc
jb
ret
jo
xchg
fsubrs
dec
bound
inc
sahf
sbb
and
pop
mov
cli
jp
mov
lods
out
mov
imul
cmp
notl
negb
mov
clc
xlat
cmp
testl
test
scas
cmpsl
cli
aam
pop
mov
repnz
inc
xchg
push
jmp
daa
loopne
push
xorl
jle
pop
sti
xor
mov
mov
out
inc
sahf
fs
and
jno
dec
and
xor
sbb
in
or
dec
push
jae
cwtl
lret
mov
xchg
jno
push
dec
dec
add
xchg
jl
add
mov
scas
xchg
sbb
div
mov
jmp
aas
ret
rol
sbbl
mov
js
dec
jle
js
mov
xlat
inc
push
insb
in
jnp
hlt
jge
lahf
test
sub
lahf
lahf
jae
jp
sarb
nop
stos
call
inc
jno
std
movsl
xchg
loope
enter
test
jae
cmp
jge
rcl
and
add
cld
sub
cmp
cmpsl
xchg
mov
and
cs
decl
push
xchg
out
shl
testl
movsl
pop
dec
daa
xchg
outsl
cmp
jo
aam
lods
jae
jmp
xchg
xor
iret
or
not
cmpsl
aaa
mov
cmp
cmp
and
jbe
addb
jbe
fldenv
pop
fsubs
fs
and
ljmp
pop
adc
enter
lret
inc
push
or
lods
sbb
test
cmpsl
push
xor
lds
adc
int3
mov
sub
push
imul
add
jl
or
cld
or
and
sbb
mov
loopne
and
add
jo
add
ret
fisubs
mov
hlt
adc
jmp
cmc
mov
mov
xchg
scas
enter
dec
fisubrs
or
lods
out
mov
pop
xor
and
mov
enter
cmp
sti
add
cli
scas
loope
xchg
mov
push
jo
fidivrs
cmp
mov
outsb
stos
and
push
dec
cmpsb
dec
in
jnp
sub
and
add
insb
inc
es
sub
add
iret
pusha
sub
outsb
or
mov
cmpsb
add
ret
xor
jge
ljmp
mov
push
cmp
hlt
xchg
adc
push
fs
jns
lret
arpl
insw
lret
pop
sahf
and
xchg
xchg
ljmp
cmp
pop
roll
filds
lea
adc
fnstcw
mov
test
movsl
enter
and
stos
inc
mov
fisubrs
push
lea
iret
sbb
enter
enter
cmc
inc
mov
mulb
dec
insl
sbb
in
test
and
mov
jp
arpl
add
fbld
and
jne
mov
and
in
mov
data16
fcoms
fisttps
loopne
xchg
or
jmp
xor
repz
sub
ljmp
imul
dec
pop
or
inc
shr
xor
add
pop
stos
rcrl
jle
mov
loope
sbb
enter
sbb
jmp
ds
cmp
mov
decl
mov
xor
js
dec
jle
js
sbb
jecxz
subb
movsb
pop
ss
mov
adc
jns,pt
add
mov
or
add
xor
add
and
jae
or
push
sub
sub
scas
test
mov
mov
or
inc
int3
and
lock
into
add
lock
cltd
or
dec
insl
push
mov
pusha
rcrl
sti
jb
in
rorl
add
jecxz
aaa
daa
cli
test
cld
movl
pop
and
mov
xchg
stc
or
lahf
dec
sub
subb
dec
imul
pusha
push
outsl
sarl
cmpsl
push
inc
shl
cltd
jae
sub
bound
push
in
test
cmp
aam
js
pop
or
mov
fdivs
divb
int
sarl
cmpl
push
and
xorl
fiaddl
enter
pop
push
pop
shll
push
adc
popa
rcrb
fldcw
mov
xchg
lcall
mull
jb
orl
inc
bound
aam
dec
cmp
mov
sub
leave
jns
shrl
mov
pop
add
jle
and
dec
cmpsb
mov
das
cmp
jp
call
mov
ss
push
ljmp
loopne
aam
mov
insl
xor
jnp
or
and
sbb
in
mov
loop
inc
stos
pop
int
out
fs
cld
les
mov
pop
xor
dec
mov
xchg
or
xor
or
fwait
lds
mov
jae
xor
es
ss
movsb
jns
xor
or
lods
cmp
shrb
in
je
lods
mov
loopne
cmp
loopne
ret
add
xchg
add
or
fldt
and
mulb
add
xchg
mov
or
rol
in
jecxz
out
popf
inc
xchg
imul
push
pop
adc
fwait
mov
popf
sahf
xchg
mov
cmpsl
cmp
lahf
ja
mov
daa
cmp
sbb
mov
lock
cli
mov
pop
jne
xchg
dec
sti
repnz
fs
stos
inc
aaa
fldenv
and
rolb
scas
cmp
adc
decb
lret
lret
adc
inc
sbb
stos
punpckhdq
notl
into
cmpsl
iret
inc
mov
jbe
xchg
mov
das
push
mov
jo
popf
or
and
sbb
lcall
daa
pop
fsubrl
sbb
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
mov
leave
js
fs
js
xor
into
cmc
xchg
jo
jb
xchg
push
js
fimuls
stc
pop
pop
shll
or
pop
sub
icebp
in
popf
pop
mov
pop
inc
add
add
dec
inc
ret
inc
xor
fildl
lods
das
imul
push
mov
rcrb
test
mov
add
xchg
or
into
xor
push
xchg
push
push
rorb
ror
jb
repz
testb
jnp
jae
or
cmpsb
mov
fistl
sbb
sub
imulb
jns
imul
cmp
mov
rcl
movsl
les
add
and
leave
push
mov
pop
mov
out
lods
aaa
mov
push
outsl
sbb
ja
pop
inc
and
into
adc
shl
ljmp
mov
shl
in
or
nop
cmp
dec
mov
rcr
xchg
mov
mov
movsl
sbb
mov
pop
ljmp
lea
shl
out
mov
mov
mov
xor
and
inc
imul
or
test
pop
pop
lock
lret
dec
int3
rorb
iret
xchg
mov
sub
jo
xchg
out
push
imul
into
pop
call
push
pop
jmp
jle
fisubrl
mov
pop
dec
cmc
sbb
movsl
mov
andl
and
mov
cmpl
cmc
add
loopne
js
pop
sbb
in
mov
push
and
xchg
xchg
test
jbe
xchg
jbe
mov
ret
mov
int3
add
mov
filds
inc
outsb
dec
mov
mov
jne
inc
xor
mov
add
inc
pop
pop
addr16
testb
mov
test
loopne
sub
inc
sub
arpl
dec
xor
ret
cmc
push
jge
cmp
mov
pop
jl
repnz
dec
ljmp
push
sub
add
mov
push
jmp
stos
mov
aad
stos
mov
in
in
inc
sub
sahf
xchg
mov
ds
stos
xchg
pop
bndstx
sub
outsb
lret
into
scas
mov
fidivs
mov
addb
xor
and
adc
dec
mov
jae
xchg
pop
loopne
sub
movsl
dec
push
rclb
leave
add
mov
inc
jle
arpl
inc
adc
call
out
xor
jb
cmpsb
test
popa
fisubrl
dec
leave
mov
and
mov
cmp
loop,pt
sub
push
or
push
lret
shlb
jecxz
add
jne
sub
mov
add
add
dec
add
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
fldl
adc
fs
js
and
or
fsubrl
inc
fdivrp
xchg
xchg
mov
or
ret
lea
dec
fcomps
rol
xchg
xchg
mov
and
icebp
lret
mov
repz
xchg
movsl
add
call
cltd
dec
sub
mov
call
pusha
shlb
push
mov
sub
subb
maskmovq
imull
pop
xlat
rcrl
scas
int
inc
cli
out
mov
outsl
mov
je
js
fmuls
jp
mov
subl
jmp
repnz
fs
fidivrs
xchg
jne
out
insl
adc
cmpsb
ret
adc
outsb
pop
aam
aam
cmp
fstpl
xchg
pop
xor
jl
mov
xor
cs
mov
fistps
popf
mov
mov
addl
enter
xchg
pop
ds
popf
cmc
inc
and
mov
imul
leave
xlat
and
jmp
add
cmp
loopne
adc
xor
pop
mov
or
cmp
sbb
xor
popf
pop
imul
xor
cltd
repz
test
pop
das
aas
cmpsb
mov
aad
ss
daa
xchg
pop
jae
lret
jb
lret
sub
mov
mov
cli
aaa
rcll
loope
cltd
movsl
adc
push
pop
jb
add
pop
cli
or
mov
jp
out
leave
out
stos
jns
push
sub
bound
js
movsl
cwtl
pop
pmulhw
push
xchg
xor
mov
dec
pop
sub
addr16
dec
nop
inc
subl
xor
xchg
xor
pushf
sbb
addr16
sub
out
xchg
mov
mov
mov
mov
cmp
mov
pop
loope
aam
test
or
push
ss
in
sub
cwtl
test
les
pop
daa
push
cmp
dec
xor
add
push
movl
dec
les
jle
fwait
cld
xchg
push
lock
cmp
and
jmp
ds
into
ds
mov
insl
sub
popa
and
subb
lods
push
mov
xor
or
sti
mov
push
cwtl
loopne
push
jns
stos
mov
ja
sbb
xchg
xor
jnp
pop
xor
movsl
addr16
push
xor
and
popa
lods
xor
icebp
dec
dec
pop
adc
mov
iret
icebp
mov
jno
fstpt
xchg
add
xor
sub
xchg
dec
xchg
out
xor
rorb
adc
fstp
loope
aaa
pop
js
mov
push
adc
bound
sub
push
push
cmp
mov
pop
out
ljmp
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
push
fdivs
pop
int3
js
fs
js
pop
and
mov
xlat
gs
sar
sub
lret
leave
mov
rcrb
jmp
cmp
in
push
mov
xchg
sub
nop
insb
xchg
jae
xchg
gs
shrb
in
jmp
ret
cli
std
jne
pop
pop
or
hlt
adcl
sbb
jg
sub
push
repnz
dec
mov
mov
cmpsb
je
xchg
push
adc
loope
int3
pop
mov
inc
insb
inc
add
mov
cmp
xchg
pop
test
push
ficoms
or
or
xchg
mov
dec
or
inc
sarl
sbb
in
repz
and
or
jne
test
mov
dec
xor
mov
or
inc
sbb
and
fsts
sbb
bound
jle
jmp
add
pop
inc
adc
addr16
adc
mov
lds
insl
inc
mov
dec
in
mov
popf
leave
pusha
sbb
jno
sbb
adc
js
jecxz
cmp
dec
push
rolb
or
stos
out
sub
add
mov
xor
push
sahf
movl
ja
lret
mov
popa
ret
push
push
mov
mov
out
sub
jmp
mov
leave
test
dec
or
lods
push
inc
sub
push
xlat
imulb
xchg
and
jbe
jecxz
and
loopne
xor
or
call
xchg
or
jo
stos
or
mov
pop
iret
lods
cmp
sub
lock
or
test
imul
xchg
mov
mov
lods
push
ja
sbb
mov
adc
dec
imul
int3
pop
lods
dec
and
or
mull
dec
adc
mov
divl
sub
xchg
in
push
popf
in
aam
or
push
adc
and
aas
mov
cmc
sub
sbb
or
fs
orb
mov
push
mov
sti
push
and
push
sbb
bound
sbb
out
fstp
ljmp
outsl
dec
jne
inc
and
shl
insl
cld
lret
mulb
push
sbb
pop
pop
mov
icebp
push
sbb
pop
ficompl
sti
add
les
daa
inc
or
jns
xchg
or
dec
out
jae
or
inc
adc
cmp
xor
add
lea
adc
lods
ljmp
xchg
dec
or
addr16
lahf
push
xor
inc
lret
pushf
sbb
cmpsb
pushf
pop
sbb
aaa
and
js
lods
fld
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
xor
and
push
sub
push
nop
lcall
inc
out
or
sahf
jb
jg
xchg
cmovge
popa
mov
jns
lea
lret
arpl
movsl
jno
lret
and
adc
scas
repz
mov
imul
shl
fstl
xor
cli
pop
orl
inc
push
adc
push
test
rolb
loop
sbbl
rcll
push
dec
ss
cmpsb
ret
mov
inc
adc
mov
adc
ret
xchg
mov
jmp
iret
movsb
rcll
jge
sub
add
cltd
jae
jle
ret
or
popf
insl
fucomi
sbb
mov
ss
dec
movsb
dec
loope
rcll
and
lret
jle
inc
sub
int3
arpl
mov
daa
cmpsl
push
mov
xchg
adc
lods
sti
adc
or
xor
dec
leave
sub
aaa
push
push
lcall
imul
cltd
push
pusha
aam
nop
xchg
and
or
mov
mov
nop
popf
fisttpll
fwait
aam
mov
repz
ret
jl
mov
pop
add
icebp
push
jge
xlat
orb
daa
mov
push
mov
lcall
sub
inc
xchg
mov
add
cld
jns
jmp
repz
sbb
imul
mov
and
mov
jnp
aaa
mov
mov
cli
dec
mov
fidivrs
and
inc
add
xchg
sbbb
repz
xchg
dec
repnz
popa
sti
xor
xchg
leave
adc
inc
mov
xlat
loope
in
mov
add
add
pop
mov
inc
and
es
das
imul
xchg
mov
and
mov
pop
add
mov
fisubl
pop
mov
les
pop
dec
jnp
inc
loopne
cmp
ja
jnp
mov
dec
shl
inc
mov
leave
imul
dec
icebp
push
push
mov
lret
cmovp
jmp
pushf
inc
xchg
or
mov
aas
dec
cltd
and
xor
imul
cmp
test
lock
sbb
add
xchg
js
sti
jge
push
xchg
jle
xor
inc
popa
adc
ret
test
push
pop
sarb
xchg
cltd
repz
and
js
and
xchg
ret
fldt
dec
xor
adcb
dec
sub
fst
mov
mov
lock
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
arpl
mov
js
fs
js
sub
daa
push
sub
and
cltd
cwtl
push
mov
mov
popa
movsb
dec
mov
std
bound
aas
adc
push
lds
int
add
mov
inc
in
jle
scas
fdivr
jno
mov
hlt
sub
push
scas
mov
mov
aaa
test
mov
mov
ret
lret
aam
push
in
dec
sti
dec
loop
mov
pop
loopne
icebp
fwait
aam
movsl
sub
xchg
jmp
mov
fmulp
aam
aas
sbb
ss
call
jns
lods
mov
das
lods
or
add
out
sub
adc
roll
push
mov
mov
je
xchg
test
mov
icebp
mov
int
stos
jne
jae
push
pop
stos
dec
cmpsb
cmp
sub
cmp
jne
fiaddl
adc
dec
dec
ds
mov
std
insl
xchg
pop
ret
mov
out
ljmp
sahf
sub
adc
mov
xchg
aam
icebp
adc
xchg
pop
mov
lock
scas
adc
aam
mov
and
mov
mov
rcrb
rcll
in
icebp
push
cmove
cld
pop
je
xor
sub
inc
repz
test
jnp
or
pushf
mov
push
lret
loope
mov
mov
pusha
push
sub
sbb
pop
faddl
mov
xor
flds
cwtl
or
dec
jbe
fstpt
push
push
or
into
and
pop
scas
in
dec
inc
cld
movsl
lea
fstp
xor
push
aas
push
pop
and
sbb
sti
add
rolb
adc
inc
fs
test
cmp
and
push
xlat
and
sub
jl
and
jno
cmp
push
or
cmp
js
je
mov
inc
fisubrl
ljmp
fiaddl
in
push
out
addl
cmc
add
push
adc
mov
push
push
ds
adcb
pop
and
call
lahf
xchg
popa
dec
cmp
mov
popl
mov
loopne
adc
push
lret
mov
xchg
adc
test
xchg
arpl
push
inc
jmp
and
jmp
pop
stos
push
cld
cwtl
in
pop
cmc
in
in
mov
outsb
or
jmp
jnp
fists
jne
rclb
bound
mov
fnstsw
cmpsb
xor
inc
xchg
ficomps
mov
mov
xchg
fucomp
mov
mov
iret
and
mov
es
or
mov
sbb
in
push
lret
sub
bound
dec
in
and
sbb
cmpsb
and
push
cmp
mov
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
js
movsb
xchg
pushf
fstpt
fs
js
mov
iret
mov
pop
push
add
repz
inc
mov
lods
dec
pop
mov
enter
inc
sub
in
pushf
test
xchg
pop
jmp
cmpsb
out
into
movsb
add
rcll
pop
scas
mov
mov
sbb
sti
pop
sub
mov
and
sbb
sbb
push
sbb
shll
lret
xchg
dec
inc
jb
fdivrl
iret
jns
xor
or
icebp
push
ljmp
mov
repnz
inc
jns
movsl
mov
stos
popf
xor
lds
pop
je
push
mov
sub
cwtl
cld
cltd
mov
jmp
cli
iret
pop
adc
add
dec
jbe
add
dec
out
in
mov
loopne
add
outsl
xchg
rcrl
cmpsl
popf
dec
sub
jp
pop
in
mov
mov
cmp
dec
pop
stc
or
sbb
popf
in
adc
ljmp
inc
sbb
loop
int
outsl
jne
lret
in
loope
fnstcw
mov
cmp
leave
fadd
loope
lds
jnp
adc
popa
mov
pop
and
imull
sahf
fwait
pusha
xor
insb
adcl
jge
outsl
lock
ljmp
pop
xchg
lods
das
fistpl
sub
in
pop
jnp
fisttpl
mov
xorb
mov
cmc
test
cli
je
push
ds
cmp
jo
cmp
lret
leave
jb
test
mov
mov
nop
loope
loopne
pop
out
cmp
lcall
push
call
mov
or
test
fsubrs
sbb
loope
xor
insb
add
or
ds
adc
add
lods
add
pop
in
sub
jp
sbb
mov
sub
in
les
imul
leave
or
xor
enter
jnp
dec
xlat
or
push
pusha
push
mov
jge
sbb
dec
push
cwtl
aaa
sub
pop
and
popf
cs
dec
mov
xor
pop
popl
dec
popf
or
ret
mov
loope
mov
mov
push
sbb
cli
push
ret
xor
and
jp
pushf
popf
ror
cltd
psubusb
mov
pushf
mov
push
dec
cs
mov
push
iret
je
popf
and
das
sub
das
aad
nop
movsl
xor
xor
ljmp
and
mov
push
in
sbb
pop
icebp
in
push
pop
cwtl
jno
xor
decb
jge
lahf
aaa
jecxz
sub
sbb
push
addr16
std
or
popf
mov
lock
int3
dec
add
xor
inc
enter
int
stc
mov
cli
add
int
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fdiv
push
into
jg
fdivrs
fs
js
lea
dec
ja
jb
mov
test
jmp
xor
pop
xor
push
fldcw
jns
pop
push
pop
xor
popl
dec
push
mov
cmp
sub
mov
mov
cmp
xlat
out
or
ljmp
mov
out
fsubrl
cli
aam
push
into
dec
xor
enter
and
sbb
xchg
sub
adc
fld
adc
enter
cmp
out
cmp
or
ss
pop
insl
movsl
adc
ds
pop
sub
dec
shlb
cmp
out
mov
adc
mov
aad
mov
mov
mov
cmpsb
mov
jl
mov
pusha
out
push
push
ljmp
pop
xchg
mov
inc
sub
sar
inc
cmpsl
jge
sbb
pusha
dec
jns
movsb
push
xchg
les
nop
fidivl
cmpsl
pushf
push
mov
jne
push
lret
and
and
add
push
cld
and
xchg
push
roll
jl
push
inc
sti
push
add
mov
push
aad
cmp
cmpsb
js
fcompl
and
lea
inc
in
pop
into
push
decl
xor
jl
push
xchg
mov
fwait
jg
dec
enter
imul
inc
sub
add
and
cmc
ret
pop
xor
iret
fsubs
mov
jb
dec
mov
adc
or
fld1
scas
mov
clc
dec
push
inc
stos
icebp
fisttpl
push
je
cmpsl
cmp
ja
cmp
sahf
imul
xor
push
jno
sbbb
and
out
and
shrl
sub
mov
jmp
xor
int3
icebp
bound
inc
in
inc
aam
dec
adc
data16
out
popa
insb
mov
sbb
push
sti
xchg
imul
lret
and
mov
in
stos
pop
mov
add
test
pop
divl
mov
sbb
jl
cltd
fnstenv
mov
shll
clc
pop
jl
in
push
sub
fcmove
les
js
ljmp
pop
jb
lea
js
lods
dec
in
notl
mul
mov
jl
or
xor
xlat
sarb
add
fstpl
pop
sub
test
sub
cmc
sbb
fldenv
stos
jmp
sub
push
push
sub
lret
mov
scas
fdivl
xchg
seto
push
daa
xchg
sbb
dec
mov
and
pop
push
jns
mov
adc
or
jbe
adc
loopne
imul
sbbb
dec
arpl
fsubrl
xor
add
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
cwtl
hlt
fnstsw
fs
js
add
sub
mov
mov
mov
jg
repz
push
inc
push
mov
aad
mov
sbb
xor
cwtl
insl
dec
cmp
jp
dec
mov
pop
mov
scas
jae
fwait
movl
jg
lret
or
cmp
jmp
adc
imul
xchg
outsb
call
es
imul
icebp
pop
std
mov
sbb
insb
add
stos
xor
loopne
jne
int3
ja
dec
xchg
cmp
sbb
mov
xor
fiaddl
sbb
cmp
cs
sti
jecxz
sub
jb
aas
scas
or
loope
outsl
mov
mov
lahf
leave
movlps
mov
fldt
mov
adc
scas
repnz
ljmp
xor
fucomi
data16
adc
dec
jl
push
movsl
jne
sbb
jg
dec
add
push
adc
or
pop
sub
in
mov
pop
enter
shr
add
imulb
movsb
mov
push
pop
inc
adc
mov
add
push
stc
mov
scas
adc
adcl
cmp
rorl
stos
bound
in
rcrb
addb
cld
je
pop
dec
lret
loope
push
jnp
xor
aam
in
imul
das
and
sub
out
add
lea
iret
mull
cmpsb
dec
push
sub
and
mov
lods
sahf
adc
inc
and
outsb
ficoms
jp
hlt
xchg
sbb
adc
mov
push
movups
decl
popf
push
lcall
fsubs
mov
add
pop
mov
cmp
movsl
lea
ss
cmp
xor
xchg
les
or
call
dec
sbb
dec
neg
imul
pop
mov
mov
insb
outsl
inc
xchg
out
outsl
adc
fs
xor
ret
fisubs
mov
arpl
ret
adc
inc
lods
nop
sbb
shl
repz
ficoml
es
and
xor
popf
xlat
cltd
mov
in
mov
paddusw
pop
mov
or
push
push
imul
jecxz
repnz
mov
mov
push
icebp
or
std
dec
repnz
iret
push
cld
loopne
mov
nop
rorb
sbb
sub
popa
lret
and
test
incl
cmpsl
xor
test
pop
mov
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
jo
or
mov
mov
iret
repnz
out
adc
sub
hlt
mov
or
push
addr16
in
aad
jns
rorl
int
lret
xor
sar
xchg
cld
inc
or
pusha
imul
push
test
out
push
ret
cld
mov
xchg
in
pop
dec
or
pandn
add
jp
cmovle
addr16
lea
mov
es
push
inc
inc
popa
ja
pop
cltd
push
xlat
dec
pop
xchg
mov
sub
mov
adc
jg
sub
add
push
cmp
jnp
popf
pop
daa
clc
stos
subl
mov
mov
pop
ljmp
jmp
add
test
mov
mov
pop
push
mov
mull
popf
xor
mov
inc
repnz
test
push
add
cmpxchg
and
popa
pop
jg
inc
xor
daa
data16
iret
loope
fs
jno
mov
outsl
iret
imul
add
jg
test
mov
inc
xchg
fnstsw
iret
xlat
and
xchg
aam
scas
jne
ljmp
jns
js
or
jnp
mov
test
xchg
lcall
dec
inc
mov
test
sbb
xchg
je
cmp
xor
add
lret
pop
lret
cmpsl
cmpb
in
movsl
xchg
inc
or
mov
sbb
dec
fnstcw
stos
pop
dec
sbb
push
mov
push
push
repz
cs
aaa
adc
ret
add
int
and
loop
loope
fsubl
xchg
enter
mov
lsl
adc
inc
sti
insl
mov
test
test
pushf
shlb
fsubrs
push
cld
mov
fstpt
adc
jp
dec
sar
mov
dec
es
mov
lods
and
mov
add
jecxz
inc
je
xchg
mov
push
or
and
or
ret
inc
push
xor
test
scas
inc
jecxz
jp
arpl
mov
mov
mov
inc
sar
repnz
lea
mov
test
orl
rep
xor
sbb
arpl
int3
out
mov
stos
scas
push
xchg
inc
cmp
dec
roll
fstl
scas
cli
and
push
push
mov
jo
in
pop
cmovns
sub
mov
cmpl
or
push
popf
insb
and
or
cwtl
out
mov
mov
dec
pusha
sub
bound
ss
mov
int3
mov
push
jnp
cwtl
sar
fstps
fwait
daa
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
lds
mov
js
jle
js
xor
add
mov
pop
scas
xchg
sub
cltd
outsl
pop
pushf
lcall
daa
mov
xor
mov
cmc
es
pop
adc
sbb
lock
test
xor
jae
or
jno
fucomip
pop
mov
mov
sbb
lock
orl
xchg
mov
out
sub
pop
dec
add
int
ljmp
sub
scas
in
jns
mov
mov
je
mov
xchg
mov
clc
jmp
pop
and
pushf
sub
jmp
arpl
jae
mov
ret
insl
out
loope
jge
sbb
imul
aad
or
push
scas
mov
push
mov
pop
out
push
mov
daa
push
jg
adc
pushf
jbe
aad
xchg
ret
fucomip
xchg
push
sbb
push
in
fwait
dec
mov
xor
sub
xlat
xchg
imul
inc
cmp
and
loopne
add
test
shlb
jb
lods
in
or
push
hlt
int
mov
and
mov
int3
movsl
pop
inc
stc
outsb
mov
cmp
inc
pop
pop
jne
roll
fs
jbe
stos
xor
mov
loopne
mov
push
sub
mov
xor
mov
dec
add
jno
add
cli
gs
cs
rcrl
addl
hlt
push
icebp
push
cli
xchg
sub
jecxz
ret
shll
lods
ret
xor
dec
sub
lods
jo
mov
mov
popf
jp
sbb
cmpsb
cmp
inc
dec
sbb
imul
mov
push
xor
dec
leave
push
mov
lock
lret
cmp
push
xchg
add
out
lahf
std
call
out
loopne
incb
mov
dec
adc
hlt
mulb
fbstp
mov
mov
inc
jne
xor
daa
fisttpll
jp
outsl
adc
or
mov
repz
xchg
jbe
dec
cmp
clc
loope
mov
add
inc
pop
pusha
addr16
lret
imul
stos
jnp
pop
mov
inc
out
inc
loop
into
cmp
je
aas
push
clc
pop
xor
inc
out
js
sub
roll
mov
mov
inc
stos
insb
jnp
js
xchg
lcall
cld
add
xchg
xor
fidivs
jae
push
push
movsl
lock
cmp
out
out
mov
lods
cmp
cwtl
mov
les
lcall
cmp
mov
ret
mov
test
mov
popf
test
jle
mov
add
ja
pop
adc
pop
popa
shrb
mov
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
call
js
cmpsl
jle
js
xor
xor
inc
or
movsb
add
mov
xchg
ret
or
and
ficompl
add
flds
sbb
sub
jb
jae
sbb
xor
out
mov
push
xchg
push
xchg
aad
xor
notl
scas
and
cld
pushf
pop
inc
je
add
mov
xchg
nop
lret
push
mov
hlt
sub
stos
ds
inc
sub
add
and
add
push
xlat
pop
sbb
leave
call
dec
push
xor
clc
divb
sbb
test
sub
lret
test
jbe
ror
ss
fs
rorb
sahf
push
lahf
orb
mov
imul
add
int
xor
or
ljmp
loop
mov
orl
ret
cmc
push
in
sub
mov
mov
in
insl
and
push
xor
cli
ds
cmp
inc
xchg
mov
push
fidivrl
inc
mov
fs
sub
lret
push
shll
repnz
xchg
lock
cmp
mov
inc
repnz
outsb
mov
inc
rcr
dec
jnp
cli
hlt
pop
mov
addr16
fimull
xchg
push
leave
cmp
aad
outsb
ret
jae
fwait
inc
lock
pop
xchg
fnstcw
icebp
movsl
xchg
jb
idivb
mov
xchg
lret
cld
dec
scas
adcb
scas
inc
and
ficomps
pop
pop
cwtl
or
mov
mov
xchg
push
cmpsb
add
out
jp
or
sahf
stos
movsl
insl
das
jmp
and
out
dec
andb
mov
sarl
jp
xchg
xor
add
and
and
arpl
jo
fwait
sti
jns
fstpt
jl
push
pop
mov
hlt
jecxz
rcrl
jp
push
das
xchg
xor
stos
icebp
mov
call
out
jg
cmp
pop
jmp
nop
aad
mov
pop
call
lock
call
test
rorl
xchg
aad
leave
pop
mov
or
stos
cmp
sti
push
jecxz
jg
cld
call
popa
call
xchg
mov
jmp
push
sub
nop
mov
xor
push
lret
and
sub
cmpsb
ja
lds
adc
adc
in
jbe
stos
cmp
mov
fcoms
inc
lahf
movl
movl
mov
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
adc
shlb
js
cmpsl
jle
js
pop
cmpsb
lcall
shrb
or
pushf
push
mov
pushf
lret
mov
sbb
dec
test
sahf
scas
pusha
jmp
repnz
sti
and
push
fnstcw
in
sbb
inc
dec
cmp
dec
cmp
xor
shlb
shll
notl
testl
mov
mov
sub
mov
mov
leave
ret
cld
sbb
push
scas
mov
movsb
xchg
dec
sbb
mov
adc
test
addr16
movsb
in
xchg
shll
mov
inc
mov
dec
xchg
xchg
push
or
sub
mov
push
inc
mov
orl
xchg
daa
pop
dec
dec
fnstsw
mov
mov
fcoms
and
daa
lds
cmp
push
mov
push
into
jb
stos
or
fcom
pop
sbb
push
push
push
xchg
into
xchg
jmp
mov
repnz
cli
mov
out
aad
sahf
sbb
jp
ljmp
inc
ds
xchg
adc
xorl
jle
or
push
addr16
xchg
mov
arpl
inc
loope
jecxz
fstpt
cmp
xchg
or
notb
test
mov
xor
test
and
popf
adc
clc
adc
jecxz
mov
jmp
jg
and
movsb
or
sbb
sub
inc
callw
cmp
in
test
stos
lods
lret
xor
inc
shll
jl
jle
test
add
aaa
lcall
and
hlt
xchg
fwait
pop
jne
in
addr16
push
push
mov
outsl
xchg
into
in
jns
loop
push
icebp
jne
mov
fwait
xchg
mov
jmp
sbb
push
xlat
push
lock
int
hlt
scas
jge
ret
ret
stos
xchg
fdivrl
loop
and
xor
or
inc
jbe
pop
xchg
or
push
mov
scas
add
pop
shrl
paddq
jmp
mov
aas
push
cltd
clc
cmp
push
xchg
push
push
pushf
push
or
jmp
jns
mov
fs
dec
shrb
mov
or
icebp
orl
lds
xchg
in
call
add
test
mov
data16
lods
push
jnp
sub
inc
sub
or
ljmp
add
jne
add
jne
jmp
lret
cmp
mov
push
jbe
mov
js
cmpsl
jle
js
dec
inc
out
dec
mov
jne
add
push
pop
ret
int
sbb
jns
insb
call
pop
in
add
or
push
pop
mov
notl
pop
mov
loope
mov
or
adc
cld
pop
push
sbb
stos
jmp
dec
push
xchg
xchg
sbb
sbbl
mov
jnp
jns
out
cltd
sbb
outsl
sbb
mov
jns
pushf
add
ljmp
dec
add
ffree
sbb
push
fistl
adc
icebp
std
jp
sbb
mov
and
out
inc
pushf
ja
jnp
testb
ljmp
xor
clc
sub
pushf
jbe
jmp
dec
pop
mov
sbb
rcrb
ret
mov
jo
shr
pusha
push
pop
xlat
add
dec
xchg
mov
and
xchg
ds
out
es
and
pop
mov
addr16
dec
xor
mov
adc
mov
xchg
mov
xchg
pusha
add
sub
je
xor
xor
xor
dec
pop
inc
jae
rcrl
add
push
xchg
xchg
mov
mov
loop
pop
sahf
mov
add
jbe
mov
jg
mov
inc
test
or
sub
adcl
call
adc
jge
sbb
pop
adc
cmpsb
add
add
cmp
jmp
fbld
je
pop
jle
je
out
ret
pusha
popa
jbe
cmp
imul
push
inc
imul
ret
les
aam
sub
or
sbb
xor
push
jo
jmp
or
inc
lock
outsb
stc
jae
push
or
scas
iret
inc
arpl
fsts
adc
data16
lcall
aad
pop
hlt
push
inc
mov
aas
adc
ret
inc
mov
pushf
inc
mov
std
xchg
and
inc
icebp
test
mov
and
pop
imul
inc
add
insb
push
cmp
jecxz
cmp
jp
imul
shrl
fsubs
xchg
loop
jbe
pop
insl
in
adc
in
jbe
cwtl
sti
hlt
cmp
lret
jnp
lds
and
sahf
in
or
dec
ds
and
jno
push
enter
cld
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
push
js
jle
js
sbb
je
clc
scas
mov
cmpsb
add
jne
or
lahf
mov
addr16
outsl
dec
cmp
outsb
inc
jecxz
mov
or
loop
xchg
jnp
mov
rorl
scas
xchg
and
xchg
stos
shll
dec
and
dec
les
xchg
rorb
outsl
pop
mov
mov
add
adc
mov
xor
push
inc
xchg
cmpsb
ror
adc
lahf
vcvtpd2psy
repz
leave
out
cmp
xchg
out
imul
out
jb
mov
mov
in
jl
push
aaa
and
rclb
faddl
sub
xlat
or
loop
negl
mov
mov
xchg
ss
sub
fdiv
sahf
jne
xchg
sbb
fwait
pop
dec
rcrl
dec
xor
insl
fs
xchg
xchg
addl
jo
jg
inc
out
scas
test
std
loopne
xor
lcall
sub
mov
mov
jo
imul
push
cmp
imul
repz
aas
jge
aaa
imul
mov
xor
sbb
cld
add
repnz
cmpsb
movsb
mov
cmpl
js
pop
lock
shll
testl
sbb
sti
test
jmp
jo
xorl
rcrb
mov
cs
add
add
rcr
push
cmp
pop
lods
in
mov
mov
je
sub
dec
xchg
fs
pop
mov
vpcmpeqd
shlb
repz
outsb
loope
fldenv
test
imul
add
xchg
adc
jecxz
xchg
outsb
dec
sbb
les
pop
orb
fdivs
je
push
ficoms
mov
repnz
ss
push
lret
cmp
hlt
mov
adc
int
pushf
test
push
inc
jne
lcall
cmpsb
imul
rcrb
sbbb
cmp
jecxz
inc
loope
mov
outsb
mov
mov
mov
leave
jo
ja
rcrb
orb
imull
jmp
iret
xlat
fcomp
pop
dec
stc
cmp
inc
adc
push
push
pop
fldenv
outsb
in
sbb
push
outsl
push
lods
sub
std
dec
in
leave
or
dec
cpuid
dec
pop
imul
jge
stc
xchg
inc
mov
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
arpl
icebp
pop
bnd
push
jle
js
daa
pop
inc
xchg
lods
dec
lods
mov
push
adc
into
fcompl
bound
in
xchg
cmp
jl
mov
cwtl
int3
mov
ret
dec
stos
loopne
cmc
xchg
add
cmp
xor
std
mov
push
add
insb
jae
mov
pop
es
xchg
mov
sti
and
lahf
mov
movsl
lea
or
push
xchg
mov
int3
pop
ljmp
ja
push
pop
push
jne
jnp
push
sbb
movsl
cmp
inc
xor
cltd
mov
sbb
push
fisttpl
out
scas
incb
pop
and
jle
sub
push
cmpsb
bound
mov
adc
mov
mov
sbb
popf
xor
cmp
sub
negb
jae
pop
jp
mov
push
sti
xchg
adc
xor
jne
mov
inc
sbb
icebp
cmc
push
push
dec
std
or
movl
pop
pop
adc
push
sub
leave
aam
int
sbb
and
mov
mov
sbb
out
fisubs
cwtl
xchg
adc
dec
into
add
loope,pt
cli
dec
jge
sbb
dec
xchg
loope
mov
insl
xor
test
push
cmp
pop
js
push
test
mov
das
dec
sub
ficompl
xor
mov
daa
and
mov
std
and
inc
xorl
add
jbe
test
out
dec
cltd
rorb
push
sbb
cld
add
dec
fwait
insb
inc
lds
fldenv
push
jle
mov
test
hlt
jno
inc
xchg
xchg
mov
pop
push
xor
xchg
mov
bound
adc
jle
ljmp
loop
test
sbb
lods
and
push
xlat
aas
dec
and
push
mov
adcl
jecxz
negl
xor
inc
jae
imul
dec
jg
adc
or
sbb
mov
lock
addr16
daa
mov
sbb
lods
inc
js
dec
dec
sub
mov
mov
cmp
aas
stos
nop
js
jle
jge
mov
xor
enter
dec
cmpsb
lea
or
jb
jg
sarl
idivl
sub
call
jmp
lcall
mov
xchg
push
clc
mov
roll
pusha
lret
movsb
inc
hlt
test
shr
out
jne
pop
std
cli
pusha
xchg
lods
mov
mov
negl
xchg
les
mov
add
mov
xor
adc
cmc
scas
inc
add
lahf
cld
mov
mov
add
dec
add
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
mov
js
push
jle
js
inc
pop
cmpsl
fidivrs
fs
xchg
jns
nop
sub
ljmp
test
mov
fldenv
jns
and
cmc
xor
sbb
rol
int3
lods
mov
inc
out
sarb
mov
xchg
loop
mulb
std
sahf
xchg
mov
jae
and
push
roll
fstl
gs
push
mov
pop
push
bound
mov
lods
fsubr
xchg
je
cs
fistps
sub
inc
adc
popf
xchg
ret
xor
in
sbb
jae
fbstp
mov
clc
lock
aaa
out
ljmp
roll
in
jnp
fbld
ret
fwait
out
pop
mov
jae
call
xchg
jno
test
push
sub
cmpl
jmp
lods
std
adcl
in
jns
mov
cmp
loop
xchg
sub
cmp
mov
rcr
loopne
push
aas
adc
daa
xlat
cs
int
sbb
mov
insb
mov
sub
cmp
mov
es
das
mov
cmp
push
push
cmp
pop
or
std
sti
mov
stc
cmp
push
jecxz
in
adc
pop
xor
mov
das
add
cmpsl
pop
in
jns
dec
adc
cli
mov
or
fiaddl
popa
shlb
sub
push
loopne
push
push
adc
or
rcl
sbb
jecxz
fistps
fsts
adc
cmpsl
icebp
xchg
das
inc
mov
push
mov
scas
rclb
ret
pop
pusha
fs
fisttps
pop
in
popa
repz
jns
in
push
jnp
das
or
ds
or
iret
fwait
les
inc
dec
lock
mov
mov
rclb
and
scas
stos
in
je
xlat
mov
hlt
add
mov
mov
xor
xor
cltd
add
cmc
mov
ljmp
popa
dec
int
icebp
or
cmp
jle
loopne
xor
jecxz
rcrl
fsubl
es
cwtl
mov
adc
stos
testb
jge
sar
push
addr16
xchg
lret
jle
cltd
inc
and
cs
fwait
imul
jl
cmp
add
dec
cmpsl
add
push
sti
sub
mov
inc
pusha
adc
xor
scas
adc
mov
fistps
in
lret
xchg
jg
shlb
xchg
push
outsb
rcl
fwait
xchg
jns
sbb
int3
repnz
ss
mov
and
and
ret
xor
adc
pop
inc
mov
int3
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
clc
jne
test
or
jmp
xor
pusha
int
repnz
and
gs
pop
jle
sbb
iret
mov
inc
and
in
cmp
aaa
movsb
enter
jno
insl
subl
bound
shlb
mov
xor
jns
les
push
sarb
push
sbb
mov
sarb
push
divl
add
dec
popa
je
es
and
or
icebp
xchg
ss
inc
js
aam
ret
test
leave
mov
fldenv
sub
in
aam
mov
xor
inc
push
stos
mov
xchg
inc
fiadds
f2xm1
adcl
add
add
jno
in
ficoml
pop
dec
xchg
dec
jp
adc
ret
out
sub
std
cmc
pushf
inc
add
inc
inc
dec
sarb
aas
xchg
jne
fmul
ss
std
rol
js
imul
push
out
out
or
jns
add
sbb
ljmp
in
cmpsl
out
gs
orl
scas
jg
dec
adc
and
mov
fdivs
fld
xchg
jo
movsb
inc
sbb
jns
pop
sarb
inc
jns
jle
repnz
cltd
lea
mov
and
or
call
icebp
cld
enter
bound
repnz
test
movsl
push
cltd
cmp
and
ds
push
out
stc
es
jb
add
sbb
xchg
fisubs
outsb
xlat
xchg
adc
sub
mov
fstl
and
out
mov
xchg
sbb
movsb
jmp
outsl
pop
mov
cmp
lcall
and
or
lods
xchg
dec
mov
cwtl
stc
and
xchg
mov
arpl
mov
shlb
aas
inc
sub
pop
shlb
sub
testl
out
out
in
sub
jmp
inc
daa
inc
pop
jle
scas
cmp
mov
lods
cmp
pop
add
push
cmp
adcb
push
shlb
xchg
ret
push
jmp
outsl
xchg
and
out
mov
sub
xchg
push
les
add
push
dec
pop
loop
ds
cwtl
in
fmull
std
xorl
pop
xchg
mov
jle
test
mov
mov
sub
mov
jo
fistps
mov
je
or
mov
addr16
in
jne
add
sbb
inc
icebp
aad
test
mov
add
inc
dec
iret
xchg
mov
shll
or
mov
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
cmpsb
sbb
stc
js
je
js
fwait
xchg
adc
and
mov
adc
sarb
ror
jecxz
cmp
push
jl
mov
je
iret
fildll
cmpsl
push
lea
sarl
xor
loope
arpl
sbb
dec
and
adc
stos
inc
adc
mov
enter
outsb
xchg
mov
stc
mov
pop
rcrb
outsl
jae
lds
cmpsb
in
testl
je
test
push
push
iret
jge
into
mov
in
xlat
push
lret
jl
jb
dec
out
in
add
shlb
negl
adc
inc
inc
out
pop
cmp
jo
lds
stc
jno
rcr
push
arpl
jge
lds
and
fsub
xor
mov
lret
push
lock
mov
pop
ds
jns
xor
push
cld
cmp
gs
int
dec
add
sbb
inc
mov
xor
fwait
sub
or
xchg
inc
push
stos
pop
imul
jb
popf
hlt
call
outsl
push
adc
pop
push
and
mov
in
test
sahf
or
push
xchg
jnp
jmp
add
loopne
jb
imul
ret
mov
jecxz
dec
jl
pop
push
pop
mov
rcrb
xor
lds
jo
add
mov
add
cli
cli
sub
ds
sub
mov
xchg
rolb
cld
jo
jmp
cltd
mov
or
push
mov
and
and
ljmp
cld
js
dec
stos
loop
add
inc
lock
and
subl
test
mov
roll
cmp
ret
sarl
adc
xchg
movsb
mov
insb
cmp
sbb
cs
loop
imul
or
push
hlt
test
inc
push
dec
jo
or
rcr
lds
push
negb
pop
push
mov
into
icebp
into
sbb
adc
push
push
cmp
and
loope
call
push
shl
and
outsl
xlat
fsubl
test
aad
pop
fsts
mov
pop
pop
xchg
xchg
ret
mov
jl
and
mov
fldl
push
fnsave
sub
sbb
popa
subb
jl
mov
popf
sbb
pop
stc
pop
incb
xchg
cmp
dec
xchg
or
out
pop
int
scas
lret
or
sbbl
sahf
pop
mov
loop
xchg
jle
dec
xchg
xchg
push
fisttps
orl
sahf
sub
into
ljmp
bound
sbb
mov
movsl
inc
or
add
cmp
dec
scas
inc
add
inc
add
or
add
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
mov
js
je
js
lods
mov
xchg
sti
adc
lret
or
pop
movsl
stc
aam
inc
jne
enter
mov
movb
lcall
mov
pop
sahf
mov
lret
imul
sbb
int3
and
push
ffree
mov
push
push
fidivrs
into
fisubrs
cmp
dec
lahf
push
aad
mov
dec
mov
pop
sub
cmovo
or
adc
add
sbb
mov
jne
mov
push
sti
push
scas
adcb
adc
push
dec
mov
pop
shr
xlat
insb
fadd
cld
mov
shrb
aam
xor
xor
fadd
stos
std
mov
dec
movsl
sub
push
scas
cmc
jecxz
jecxz
inc
jecxz
xor
xor
outsl
mov
push
lret
in
xlat
stc
aaa
std
sbb
dec
les
lods
loopne
fildl
je
jg
sub
or
jno
popa
push
mov
fwait
sub
aam
sbb
out
push
pop
mov
mov
mov
in
ss
outsb
mov
or
push
and
mov
popa
cmp
mov
fisubrl
rorl
ret
insb
popf
jl
xchg
xor
test
sbb
repz
sbb
mov
sub
add
adc
jo
adc
sub
pop
mov
shrb
dec
dec
jbe
ds
ds
jecxz
into
xor
out
imul
cmp
fadd
mov
cs
rcrb
sti
adc
adc
push
push
in
fsubrl
cmp
enter
lret
adc
jg
testl
leave
push
xor
out
mov
std
sub
mov
js
and
mov
shrl
test
add
mov
sub
and
mov
adc
push
jp
sbb
and
aad
sbb
test
jmp
mov
and
jg
dec
push
sti
push
push
mov
ret
les
outsb
mov
dec
add
sti
loopne
jp
jnp
imul
in
vmovss
pop
cmp
rclb
fmuls
sahf
sub
aaa
add
cld
sbb
dec
sbb
test
aam
cmp
dec
das
sbb
idivl
das
mov
xchg
scas
push
das
icebp
scas
mov
dec
fcmovnb
push
pusha
neg
fistpl
mov
mov
pop
faddl
mov
jae
xor
je
loop
mov
iret
sti
lock
test
dec
mov
ds
sbb
inc
out
divb
mov
into
cmc
dec
inc
and
mov
mov
adc
lods
mov
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
mov
js
jle
js
outsl
xor
lock
mov
loopne
pop
adc
jne
push
add
jns
sub
loope
mov
xor
fcomip
adc
mov
imul
xor
fldl2e
push
xor
ss
bound
jmp
arpl
fimuls
movsb
in
popa
mov
pop
dec
push
scas
sti
cmp
movsb
cmp
shlb
mov
sbb
push
pop
dec
int3
lds
sbbl
ret
pop
addr16
xchg
mov
repz
int3
xchg
mov
dec
sarl
mov
repz
adc
imul
xor
inc
arpl
ja
sbb
inc
jbe
sahf
inc
xchg
push
test
sti
cltd
sbb
inc
js
sbb
jnp
or
mov
xlat
mov
xor
mov
cwtl
or
pop
lcall
in
shll
pop
mov
push
cmc
xchg
repnz
fsubs
push
add
leave
add
inc
and
push
jno
cli
dec
addr16
stc
add
rcrb
cwtl
or
jo
sub
push
sti
incl
outsb
ret
loope
inc
sti
push
mov
sbb
rcrb
cmp
data16
or
dec
int
xchg
roll
lea
mov
pusha
mov
push
jge
sahf
mov
mov
jbe
add
out
pop
rclb
pop
fs
jns
adc
inc
lcall
cmc
xlat
pop
cmp
cwtl
adc
or
inc
inc
pop
xor
jns
call
xorb
pop
shr
aas
inc
stos
cmpsl
aaa
in
stos
out
in
js
add
in
push
je
and
add
sbb
ret
or
jbe
xchg
stos
movsb
xchg
cmc
mov
mov
fbld
mov
mov
add
adc
xor
mov
sarl
jecxz
in
andl
testl
add
test
movsl
xchg
xchg
cmpb
inc
inc
add
or
and
add
pop
fwait
ss
and
push
and
les
mov
cmp
inc
and
lea
repnz
scas
aaa
aaa
popa
jecxz
cmp
ss
nop
jge
into
xchg
icebp
sub
out
sbb
mov
lahf
in
lcall
mov
dec
jmp
sar
mov
mov
repnz
push
leave
aaa
add
jmp
mov
mov
sbb
jg
fwait
popf
aaa
pop
dec
push
cmp
enter
adc
xchg
sbb
test
mov
sub
sbb
mov
sbb
movsl
cmp
lea
gs
movsb
add
je
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
lds
je
js
testb
adc
ficoms
iret
pushw
scas
into
adc
xor
movl
adc
pop
add
mov
int
mov
orb
ss
std
lcall
xchg
imul
js
mov
add
inc
add
ja
stos
adc
loopne
xor
mov
cmp
sahf
pop
jns
jne
push
dec
les
iret
scas
pop
xor
or
lahf
mov
out
cmpsb
jl
addr16
call
mov
das
pop
inc
cli
in
xor
jns
cmp
jnp
fisubrl
shll
stos
pushf
mov
mov
jmp
clc
sub
cs
sub
pop
sub
sub
dec
les
pop
jno
add
daa
jne
push
and
insl
pop
push
lods
xor
ficomps
mov
and
cs
aaa
mov
int3
pushf
push
or
inc
jno
daa
jg
loope
clc
rcl
in
inc
jns
mov
jb
xor
insl
fbstp
pop
inc
mov
adc
rolb
lea
xor
popf
fs
and
adc
dec
daa
aaa
mov
xchg
js
daa
clc
out
xor
out
movsl
daa
mov
fcom
daa
pop
sub
pop
push
cmp
push
mov
out
fdivrs
test
cmp
cmpsl
fdivl
stos
xor
push
mov
jnp
mov
and
pop
stc
stc
push
sbb
sbb
sbb
lds
ds
fmull
sbb
test
push
inc
mov
cmpsl
mov
add
jno
cmpsb
mov
mov
dec
cmp
fildll
inc
nop
cmp
pop
stc
std
or
push
jge
push
mov
sarb
pop
jl
fcomps
inc
pop
lea
inc
mov
mov
push
stos
push
fs
mov
push
and
mov
mov
pop
imul
lret
xchg
mov
inc
xor
cmp
sbb
and
xor
pusha
and
lods
xchg
movsl
jne
enter
lock
sub
fwait
xor
jmp
dec
cld
mov
cmp
das
orl
jb
xchg
mov
push
push
dec
mov
jmp
sbb
inc
addl
dec
mov
adc
mov
lock
dec
sbb
ret
inc
jp
add
pop
aaa
jnp
jle
sahf
dec
repz
mov
mov
insl
sub
xor
das
push
xchg
stc
lret
enter
imul
and
in
test
mov
jmp
sarl
fcmovne
mov
fsubr
ss
add
js
jle
js
sub
mov
xor
les
movsl
push
frstor
pop
jle
je
add
cmp
or
inc
nop
push
xor
inc
cmp
fisubl
push
fs
out
test
or
notl
sbbb
push
sti
pop
lea
stos
movsl
pop
clc
pop
push
cli
loopne
xorb
fildll
push
sbb
outsb
add
rolb
out
sbb
jmp
movsl
dec
lods
fs
or
adcl
cmp
mov
sub
push
sub
into
add
inc
enter
divb
popa
sbb
mov
pusha
push
push
orl
mov
test
xor
xor
imul
fs
jl
arpl
pop
enter
addb
push
addr16
inc
faddl
movsl
mov
push
loope
cmp
les
pop
in
out
cwtl
pop
test
scas
inc
rclb
add
sbb
pop
jecxz
xchg
jmp
inc
mov
adc
xor
jae,pn
xor
cli
insb
adc
test
mov
push
or
cmp
pushf
leave
and
ljmp
leave
mov
push
jb
jmp
nop
into
call
inc
repnz
aam
cmp
mov
sbb
xchg
jno
xorb
movl
sub
outsb
push
aas
mov
pop
in
or
das
addr16
int3
jb
es
push
ljmp
into
fs
xchg
ret
jno
push
xchg
sbb
inc
jb
int
sbb
push
sbb
sbb
sbb
bound
xchg
sub
xchg
or
dec
add
jae
rcll
pushf
shll
xlat
pop
cmpsb
push
push
ss
and
mov
movsb
sub
daa
pop
iret
pop
enter
xchg
mov
mov
mov
adc
int
add
scas
add
mov
fldenv
sbb
xchg
popa
cmp
sub
int
xchg
pop
cmpsl
adc
fildll
loop
les
jne
adc
push
mov
jge
cltd
scas
xchg
lea
imul
cmp
sbb
push
dec
je
loopne
ss
movsl
mov
popf
xchg
insl
nop
jbe
cmp
pusha
sarb
jle
lcall
push
lock
adc
jae
xchg
mov
xor
stos
sub
lods
pop
pop
lcall
gs
stc
cltd
jno
out
jbe
cltd
sub
stc
xchg
ss
jle
ss
mov
rclb
cmp
jg
je
jno
clc
je
movsl
push
ss
ret
dec
in
mov
movsb
pop
inc
in
std
pop
popl
stos
cmp
popa
lret
fnsave
incb
add
ds
jmp
rol
leave
fcmove
rcl
pop
mov
mov
into
mov
je
js
fcompl
test
add
cs
call
mov
lahf
xchg
sub
in
or
imul
in
arpl
pop
rcrl
cwtl
inc
adc
jne
mov
fs
fbstp
sub
mov
pop
xor
shl
pusha
cltd
aam
fimuls
inc
jle
sbb
mov
lret
sarb
xchg
mov
ss
xchg
mov
cli
and
or
sub
cmp
dec
pop
inc
jae
ret
pushf
lods
insb
out
pop
cmp
lret
jo
imul
test
test
les
jnp
dec
push
hlt
inc
xchg
movsb
xor
outsl
sbb
cmp
enter
cli
insl
std
pop
mov
cs
add
mov
stos
xor
add
mov
mov
mov
mov
cmp
mov
outsb
iret
cmc
cmp
insl
in
mov
dec
or
add
pop
ja
pushf
repnz
fadd
cli
push
cmpsb
cmp
sub
ret
xor
xchg
inc
loop
mov
inc
in
or
clc
iret
mov
xor
ss
adc
daa
mov
loopne
add
insb
sti
pop
std
outsl
xorl
push
gs
negl
rol
jns
inc
jecxz
ja
xor
add
xchg
pop
idivl
push
pop
add
das
cs
sbb
cmp
sub
aaa
les
dec
xchg
lret
movsl
fsts
mov
pop
mov
mov
inc
push
sub
push
fistpll
and
test
movsl
sub
xor
or
andl
jecxz
addr16
es
mov
std
scas
lcall
mov
into
shll
pop
dec
mov
xchg
sbb
push
sahf
jae
pusha
add
dec
adc
sub
repnz
lret
repz
clc
xchg
pop
jne
repz
notl
push
es
lods
divl
hlt
stos
mov
sub
dec
lods
sbb
mov
imul
add
pusha
stc
mov
adc
ret
xor
jb
fucomip
pushl
add
fildll
inc
rorb
orb
xchg
add
out
sbb
lds
repz
sbb
scas
fiadds
push
sub
jle
dec
fidivrs
jp
mov
js
rol
inc
loope
push
xchg
mov
adcb
test
sub
pusha
and
mov
xor
in
pop
adc
and
xchg
out
mov
outsl
jg
xor
inc
adcl
xchg
jp
icebp
stos
fimull
in
sbb
lea
cmp
aam
negb
dec
nop
mov
push
int3
mov
sbb
lahf
dec
mov
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
jp
mov
je
js
mov
test
das
fldl
aas
and
mov
mov
loopne
fs
mov
xchg
xor
inc
test
inc
adc
adc
or
in
jae
in
pop
adc
mov
pop
jmp
mov
jle
add
cmp
inc
mov
fnstsw
mov
fisubrs
and
movsb
ja
xchg
lahf
sub
mov
jns
and
jno
fildll
or
sub
or
js
add
iret
adc
sti
pop
mov
dec
lea
lock
in
rclb
aam
out
shrb
sub
push
jl
mov
data16
push
push
adc
repz
push
fwait
rcrl
out
cmp
je
xchg
sbb
cmp
pop
addb
psubsw
sub
sbb
out
mov
popa
es
pop
addr16
mov
inc
imul
inc
sbb
cs
pop
sub
xlat
popf
mov
jl
xlat
popf
xchg
sti
arpl
push
cmpsl
jne
dec
dec
xchg
xchg
xor
sahf
and
pop
fs
dec
push
out
mov
add
and
lahf
mov
loopne
add
jecxz
and
inc
movsb
in
mov
jecxz
ljmp
rorb
ret
pop
into
push
push
pushf
dec
out
ljmp
add
cmc
bound
out
jae
stos
popf
add
mov
push
das
out
stos
pop
enter
test
cmp
push
sbb
add
mov
dec
mov
fisubrl
pop
je
cmp
pop
pop
push
ret
loop
xor
mov
out
and
push
mov
pop
mov
adc
iret
mov
mov
xor
add
fsubl
xchg
lds
out
mov
adc
cmpsl
ret
fdivl
imul
roll
xor
sub
in
push
pop
cmp
add
scas
sub
pushf
nop
push
fdivr
push
in
mov
xchg
rcrb
adc
aad
les
mov
xor
mov
rcrl
dec
xchg
and
test
fldt
test
ds
dec
mov
mov
ljmp
dec
pop
loopne
xchg
mov
sub
mov
mov
std
pushf
jp
call
hlt
es
pop
pop
fbstp
add
lods
out
push
es
es
ret
xor
cmc
enter
xor
mov
mov
cmpsl
adc
dec
or
fmuls
test
jnp
test
add
add
sbbb
jmp
into
aas
ds
rcl
add
stos
rcrl
push
out
mov
je
js
in
cmp
adc
mov
jae
sub
out
pop
fwait
cmp
hlt
mov
enter
jne
mov
jbe
adc
cld
xchg
push
cmp
scas
mov
ret
jae
adc
jno
inc
jo
in
mov
and
or
cmp
inc
out
add
push
call
scas
and
mov
imul
repnz
xor
push
pop
or
xchg
mov
in
jmp
sbb
imul
ljmp
mov
sbb
inc
mov
mov
outsl
dec
cmp
fsts
lret
cmp
or
mov
fwait
sbb
lret
pop
mov
pop
sbb
add
or
jmp
pop
loope
mov
mov
lock
dec
push
ja
fcomps
enter
xor
hlt
adc
pop
mov
or
mov
cmp
sbb
or
mov
jns
outsb
or
int
cli
xchg
mov
pop
add
push
jmp
rol
out
inc
xchg
mov
je
cmp
inc
mov
loope
bound
loopne
dec
pop
adc
test
mov
xchg
sub
xor
shr
lret
ret
int
addr16
adc
in
call
cmc
xchg
pop
and
orl
enter
lret
mov
dec
repnz
adc
and
cltd
xchg
and
or
mov
arpl
in
sahf
orl
cmp
ds
cmpsl
sar
sbb
sub
mov
fbstp
mov
fisttpl
fadd
test
xor
jle
insl
inc
pop
in
sbb
inc
mov
or
adc
mov
into
arpl
push
enter
inc
sub
arpl
fwait
mov
out
pusha
in
call
sub
cmp
xor
loop
or
mov
sub
pop
in
jl
jmp
sbbl
dec
and
cltd
mov
je
adc
dec
shll
pop
out
bound
inc
cltd
imul
jns
cwtl
adc
xor
jne
notb
adc
stos
rorb
pop
cmp
pop
test
das
out
popf
out
jb
sti
dec
adc
test
inc
pushf
jb
or
ret
loopne
add
sarl
add
sbb
icebp
mov
loope
shll
dec
int
subb
jg
jp
mov
xor
add
cmp
pop
jle
cmpb
jns
movsl
nop
dec
out
sbb
pushf
push
sti
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
mov
dec
ret
js
jle
js
xor
addr16
mov
xor
jg
inc
cwtl
aas
movsb
mov
outsl
enter
push
dec
push
leave
mov
ljmp
mov
aaa
addr16
mov
mov
call
cld
orb
repz
lock
push
mov
aad
jnp
aam
out
mov
daa
jg
cmp
test
sub
mov
xor
jo
and
lret
fimuls
stos
pop
repz
sub
ss
jae
fs
test
bound
xchg
aam
jne
push
movsl
repz
ret
out
jno
push
jnp
insb
bound
dec
mov
clc
popl
sbb
jecxz
jb
shlb
jl
cmovno
cwtl
cs
cmc
push
popa
mov
sbb
push
fs
cmpsl
push
pop
sbb
fadds
mov
mov
nop
test
addr16
xchg
cwtl
pop
dec
add
lea
pop
xchg
inc
cwtl
or
repz
pop
int
pusha
sarb
daa
mov
dec
inc
adcl
sbb
fadds
insl
sarl
fmul
outsb
mov
testl
ret
mov
fstpl
rcrl
jge
shlb
push
jbe
and
mov
lcall
sub
jb
mov
lds
out
ret
dec
and
jg
sahf
stos
ds
gs
jge
jp
daa
cmp
jle
stos
dec
call
mov
pushf
lahf
dec
mov
fdivrl
pop
add
je
cmp
icebp
or
mov
mov
cwtl
xor
pop
push
gs
pop
cltd
pop
add
rorl
and
out
shlb
or
repz
xchg
das
jbe
cmc
and
insl
mov
pusha
inc
adc
inc
gs
push
cld
cmpsl
les
or
mov
cmc
push
mov
mov
pop
add
mov
nop
add
adc
popf
push
inc
lahf
dec
popa
sarb
mov
push
sar
lods
scas
dec
xchg
daa
ljmp
aam
icebp
notb
scas
jle
xorb
les
hlt
inc
fcomps
outsb
add
jnp
or
ljmp
cmp
cmp
loope
ss
jae
jecxz
js
aas
jle
push
xchg
scas
or
mov
mov
fldcw
mov
cmp
jmp
mov
cltd
pop
fucom
test
shlb
mov
sub
in
push
xchg
arpl
mov
repnz
aad
inc
in
ljmp
das
je
test
xchg
int
mov
mov
das
sub
mov
xor
mov
sub
or
scas
fbstp
ja
inc
adc
stc
addr16
sbb
mov
loope
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
mov
js
je
js
mov
xor
xchg
repnz
mov
mov
int3
push
sub
lahf
js
mov
pop
xor
aad
enter
clc
dec
das
push
lahf
mov
cmp
cmp
sub
dec
add
mov
insl
rcrl
inc
out
jne
mov
fidivl
outsl
imul
je
mov
mov
xlat
pop
cmp
popa
push
push
add
dec
inc
dec
push
incb
leave
mov
ret
dec
or
aam
xor
lea
frstor
aad
and
test
ljmp
inc
push
or
push
ror
xchg
std
xchg
shrb
orb
mov
fadds
insl
sbb
es
repnz
inc
mov
sub
fistpll
inc
add
inc
fwait
mov
clc
mov
push
ror
and
gs
push
adc
cmp
inc
stos
sbb
xchg
mov
xor
push
cmc
jecxz
dec
js
iret
mov
aas
dec
jge
xchg
in
roll
inc
sbb
mov
inc
xchg
mov
das
repnz
mov
shl
or
mov
mov
jl
sti
adc
or
testb
mov
mov
in
fsubrs
sar
ret
jecxz
jg
sti
inc
shr
adc
les
push
scas
jnp
push
aad
int
jbe
mov
adc
mov
pop
mov
xor
lahf
leave
outsl
and
popf
mov
cmpsl
cld
fdivr
jb
mov
xlat
push
mov
and
sbb
data16
in
loope
cmp
popa
lock
sub
cmp
or
xor
or
mov
jg
cmpsl
insb
cltd
or
and
movsb
in
or
sub
dec
push
push
sahf
cs
adc
imul
leave
cs
lcall
cmpsb
lds
sbb
movl
sub
sbb
or
lret
fistpll
jo
jo
out
out
mov
xor
adc
jmp
mov
int
jae
gs
add
outsb
daa
lret
mov
repnz
fs
cli
push
clc
jne
push
shl
inc
inc
in
fiaddl
stos
add
push
andl
inc
sahf
jp
cmpsl
lcall
lret
outsb
inc
mov
mov
sub
stos
subb
icebp
scas
adc
xor
jns
lret
push
mov
in
into
es
xor
sbb
mov
push
dec
push
mov
inc
sahf
outsl
pop
movsb
mov
test
mov
frndint
mov
das
pop
inc
sbb
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
dec
lret
sarl
fwait
js
je
js
sub
test
pusha
pop
dec
lods
adc
aam
fbstp
imul
or
ljmp
mov
cmpb
insb
xor
add
cli
sti
sub
out
sbb
pop
inc
mov
jmp
push
xchg
jl
or
pusha
mov
cmpsl
adc
lcall
xchg
sbbl
jl
adc
addr16
dec
lret
fdivl
into
or
idivb
pop
mov
rcrl
add
or
test
pop
es
cltd
hlt
sti
push
sbb
inc
adc
dec
inc
xor
push
mov
insb
pop
shrl
mov
xchg
or
inc
nop
repnz
sub
dec
mov
xor
std
xchg
jo
jbe
fsubrs
out
cwtl
jmp
cld
pop
or
xlat
push
mov
cmc
int
aaa
jae
idiv
stos
or
insl
and
and
inc
out
je
or
push
or
jae
inc
jmp
jno
icebp
adc
mov
sbb
and
lret
mov
add
cmc
in
js
and
out
cmp
icebp
incl
xchg
aaa
fcomp
xchg
pop
jp
mov
insb
out
sub
jno
mov
jbe
roll
jl
jle,pn
jae
dec
or
add
insb
push
mov
rcr
lret
cwtl
inc
xchg
sub
mov
out
jae
and
scas
test
adc
cmpsl
push
jnp
or
out
leave
xchg
test
mov
in
pop
mov
mov
int
push
push
and
mov
mov
outsb
dec
jnp
dec
mov
mov
test
call
pop
ljmp
rorl
je
lock
fmull
js
insb
xchg
pop
outsl
shll
push
mov
sahf
iret
in
cmp
pop
pop
jno
mov
ss
mov
cmp
sub
mov
ljmp
fmul
adc
pushf
xor
sbb
hlt
push
inc
into
call
sub
lahf
fwait
ret
popa
ss
cmp
hlt
xchg
insb
dec
sbb
inc
sahf
push
and
fwait
mov
jp
add
int
loop
pop
pusha
divb
call
jnp
jne
fisubrs
add
ja
xor
and
fcomps
or
jns
and
icebp
addr16
call
scas
das
pop
and
and
outsl
pop
icebp
ret
sbb
nop
inc
or
das
in
jmp
movsb
shlb
adc
ret
cmp
int
mov
loope
shrb
fldlg2
sub
out
and
inc
inc
push
sbb
call
fisubl
mov
rclb
sarl
xchg
in
add
repnz
jl
xor
xchg
sub
sti
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
orl
je
js
push
xchg
push
shll
lahf
xchg
adc
cmp
cmp
loopne
xor
push
jge
lock
push
mov
sbb
or
imul
cmp
loop
mov
cwtl
dec
aas
call
aam
subl
stos
ret
out
stos
es
sub
xchg
aaa
sub
mov
adcl
jp
xchg
loope
pusha
or
lcall
dec
xchg
out
movl
outsl
mov
lock
sti
mov
mov
xchg
out
push
mov
stos
rcrb
xor
and
push
or
push
out
scas
or
lret
into
icebp
sub
rcrl
xchg
scas
lock
jae
in
mov
xchg
sbb
ss
cmp
add
in
lcall
jb
mov
fdivrs
mov
xchg
cmp
in
jno
add
movsb
and
xor
mov
insl
sub
int3
inc
out
xor
jne
js
sub
imul
xor
jb
ret
or
pop
jnp
out
cltd
sbb
shrb
test
pushf
cmpsb
mov
cmp
cwtl
lret
jge
push
or
int3
xchg
or
hlt
aad
mov
push
push
jb
repnz
in
cwtl
dec
mull
dec
shll
or
imul
addr16
aas
and
jl
pop
cmp
test
sti
adc
bound
xor
pminsw
insl
rclb
loope
jns
xchg
add
sbb
pusha
mov
std
ja
jle
push
data16
js
pop
sub
test
lods
pop
scas
test
jle
sbb
mov
int
fmulp
testb
daa
ret
and
pop
sbb
mov
stos
dec
cmp
stc
push
cmp
ret
fists
mov
push
lcall
push
cmpsl
test
test
xchg
cs
push
sbb
gs
cmpb
pusha
lcall
push
in
push
xchg
stos
cltd
out
js
pop
fwait
mov
fisubrs
jo
stos
mov
dec
pop
test
adc
call
arpl
cmp
ss
pop
dec
xchg
sahf
inc
cmp
decl
mov
xor
mov
lret
nop
test
cmp
sub
mov
call
mov
push
pop
mov
outsl
cmp
push
xor
int3
or
cmc
aam
loop
inc
sti
sahf
mov
incb
pop
jp
xor
xchg
addr16
bound
xchg
jbe
fiaddl
jecxz
movsl
dec
fists
aaa
sub
hlt
mov
mulb
jnp
and
adc
pop
outsb
inc
inc
sbb
iret
push
xchg
xchg
int3
popa
arpl
jno
jbe
xlat
sbb
sub
loopne
push
clc
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
dec
xlat
mov
je
js
jle
cmp
jecxz
adc
or
jno
call
mov
mov
sbb
xor
ja
cmp
icebp
add
stc
shrb
jg
mov
lock
iret
mov
int3
inc
rcrb
push
cmc
or
pop
jl
divb
adc
mov
mov
movlps
add
mov
adc
out
pop
ret
add
sti
cmpsb
outsb
xchg
loop
mov
add
repz
and
shlb
loope
and
push
pop
push
repnz
jne
fldl
xchg
dec
insb
sub
sbb
aaa
sbb
inc
cmp
add
stos
inc
push
and
pop
mov
das
sub
jg
jne
push
cmpsb
adcb
or
mov
and
mov
iret
and
push
movsl
mov
sub
fcom
mov
push
outsb
mov
rcll
sub
jae
xor
cltd
xchg
add
in
test
cmpb
mov
bound
cs
mov
inc
stos
pushf
cmp
and
fadd
into
lret
cmp
or
nop
mov
shlb
pop
fldenv
adc
or
add
and
lods
negb
out
cwtl
aad
jo
imul
jge
pop
aam
jnp
jge
dec
xlat
pop
fwait
push
adc
push
push
jnp
loopne
add
cmc
mov
cld
push
out
lret
mov
xor
add
pop
cwtl
cmpsb
mov
out
pop
ret
mov
stos
inc
pop
aas
push
push
sbb
test
ds
int
mov
in
repnz
jl
shrb
pop
popf
cwtl
xorb
or
pop
gs
jecxz
mov
scas
xchg
out
insb
xchg
insb
lcall
jnp
lahf
sahf
xor
push
fsubrs
pop
xor
inc
hlt
or
dec
jecxz
mov
or
stc
mov
push
pop
add
in
adc
sub
or
xchg
scas
cmpsl
test
ficomps
scas
ret
adc
insb
andb
cmpsl
inc
addl
xor
xor
jge
xor
mov
popl
pushf
loope
decb
or
pop
jne
ss
push
je
pop
loopne
sbb
mov
inc
loop
aad
jle
sbb
sub
jmp
hlt
cmpsl
popf
dec
and
inc
ljmp
dec
scas
push
ret
lods
adc
add
daa
inc
add
loop
fbstp
xchg
fdivl
adc
xchg
imul
mov
mov
pop
test
movsb
adc
mov
cmp
sbb
push
pop
cmp
cmp
mov
icebp
jne
xor
cmp
jmp
rol
ror
aad
xchg
mov
aad
and
aaa
mov
js
lar
push
sub
push
sbb
insl
sub
fcomip
lcall
sahf
inc
ds
in
push
lock
fmulp
imul
pop
add
loop
cli
or
xor
stos
hlt
sbb
stos
ret
dec
in
cltd
aam
call
xchg
and
mov
mov
mov
test
cmpsl
push
lahf
into
and
iret
xchg
int3
mov
push
stos
out
mov
sbb
adc
dec
cmp
adc
call
aas
mov
mov
out
aad
cmp
xchg
addr16
test
test
pop
cmp
hlt
std
push
xchg
add
loop
loope
pusha
inc
mov
xchg
and
pop
mov
pusha
mov
xchg
je
or
sbb
xor
lods
pusha
cmp
mov
or
xor
mov
stos
sbb
push
adc
setg
xor
push
ret
pop
dec
xchg
mulb
repz
jmp
dec
notl
xchg
xlat
clc
int
cmp
mov
sub
pop
aaa
scas
stos
dec
enter
add
test
cwtl
in
fwait
mov
cmp
iret
add
std
add
or
das
mov
ja
les
xor
imul
mov
fdivrs
scas
jg
pop
cmc
add
mov
scas
sbb
out
clc
dec
repnz
outsb
lea
and
mov
push
sub
mov
xchg
pop
fmuls
dec
scas
xor
sbb
int
repz
add
cwtl
out
jg
mov
in
data16
int3
add
mov
push
cmpb
insl
repnz
in
mov
stos
orb
cmp
lret
insl
in
cmp
icebp
mov
addr16
cmc
repz
mov
pop
jo
loopne
into
xor
stos
fbld
aas
shlb
fisubrs
jae
stc
fs
xchg
add
mov
divb
lret
mov
insl
hlt
sahf
push
xchg
mov
fiadds
jnp
rorl
push
mov
fs
sbb
enter
sub
mov
push
mov
push
mov
sbb
sub
lea
cmpb
cmp
xor
push
out
add
mov
push
push
inc
xchg
push
clc
or
and
cmp
mov
out
pop
and
std
lods
int
test
sub
divb
pop
and
push
popa
stos
cmp
push
mov
out
pop
loop
xchg
push
or
mov
mov
je
add
pushf
cmp
test
test
push
test
cwtl
xor
jle
and
push
xor
ljmp
scas
cli
jb
mov
push
in
fisttps
test
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
xor
cmpsl
js
xor
bound
pop
out
clc
mov
jp
mov
mov
fdivl
xor
aaa
or
cli
cmp
into
aam
mov
dec
mov
lods
xchg
aam
pop
sub
sbb
mov
push
insl
dec
jl
jae
xor
insl
scas
inc
jmp
in
jo
or
mov
hlt
cmp
out
mov
repnz
pusha
test
inc
or
stc
cwtl
add
inc
int3
addr16
mov
insl
mov
cmpsb
dec
stos
gs
add
xchg
add
in
mov
popf
xchg
add
inc
ret
les
mov
fildll
and
fbstp
out
pop
mov
lcall
popa
frstor
roll
sar
insb
sahf
int3
clc
insb
mov
xor
cmp
test
push
int
test
sub
jbe
mov
dec
pusha
add
cwtl
incb
xor
aaa
int3
mov
inc
or
ret
bound
pop
mov
pop
pop
popf
dec
lods
test
sbb
push
out
pop
ret
push
push
insl
sub
mov
imulb
in
inc
aas
adc
sub
push
test
mov
xor
cmp
mov
scas
xor
fisttpl
popf
lds
repnz
jmp
cld
push
fistps
adc
pop
orb
clc
aad
fildl
lahf
mov
mov
push
adc
mov
mov
aas
xchg
call
dec
popa
test
push
xor
cmpsb
mov
xchg
loope
rorl
fwait
push
pop
and
int3
and
mov
ds
mov
sbb
mov
out
addl
hlt
sbb
push
mov
pop
andb
bound
and
rcll
mov
test
gs
cld
rorb
mov
popa
nop
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
loop
add
out
js
xor
sbb
dec
fsts
negl
test
pushf
cmp
xchg
add
adc
jl
jae
mov
jl
pop
cmp
xchg
xor
xor
cmp
lods
dec
insb
mov
mov
mov
fxch
mov
shrb
in
cmp
cmpsb
pop
fstl
mov
jne
pop
sub
dec
pop
and
bound
mov
cmp
xor
xchg
ret
or
testl
lods
idivl
jp
outsb
add
and
pop
lcall
cmp
repz
cmp
mov
sub
pop
sub
xorb
inc
es
mov
push
xor
xchg
jns
out
xor
cmpsl
cld
or
sbb
mov
bound
jne
xchg
out
mov
mov
mov
stos
mov
aam
push
bound
adc
loop
aad
cmp
jmp
scas
mov
push
and
and
xor
test
imul
add
insl
outsl
fucomp
sub
jge
inc
push
push
test
cmp
sub
push
lahf
int3
dec
or
mov
mov
jbe
mov
push
cmpsl
dec
xor
movsbl
stc
shll
mov
or
push
lock
pop
or
push
push
test
dec
ds
pop
ret
lgdtl
cmp
sbb
mov
xchg
xor
xor
cli
push
sbb
clc
xor
adc
push
iret
or
pop
and
daa
cmpsb
mov
fld
cmp
mov
outsl
mov
jne
movsb
xchg
inc
out
loopne
imul
divb
add
mov
cmp
mov
mov
lea
cmp
pushf
xor
sahf
mov
sub
ficoml
push
ret
cmpsl
cmp
out
inc
int
lods
mov
sub
lods
sbb
push
xlat
inc
or
jns
in
std
pop
cmp
rcrb
test
pop
sarl
hlt
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
dec
push
stos
and
js
clc
pusha
into
outsb
sbb
mov
sbb
arpl
mov
fdivrl
and
dec
test
xchg
mov
scas
idivb
mov
pop
nop
inc
lahf
pop
arpl
mov
or
in
mov
mov
dec
mov
sub
andl
xchg
push
fimuls
jb
xchg
shr
rolb
gs
addr16
incl
mov
sarl
sub
pop
sub
adc
data16
and
fwait
mov
test
push
in
mov
idivl
jle
arpl
inc
mov
or
sbb
in
mov
ret
lahf
and
and
or
xchg
movsl
int3
cmp
push
push
and
mov
into
inc
add
es
adcl
iret
add
cs
or
mov
loope
stos
push
adc
out
mov
in
pop
out
add
jbe
daa
mov
hlt
arpl
pop
cwtl
mov
push
fildl
or
dec
cmp
mov
sahf
jecxz
pop
inc
cmpsl
sbb
ds
sti
lock
flds
or
mov
pop
inc
movb
mov
movsl
pop
out
insl
push
or
loope
imul
arpl
pop
fisubrl
cmp
push
fwait
in
stos
pop
lahf
cs
inc
into
cmpsb
movsb
mov
cmc
out
push
xchg
jb
sbb
mov
stos
lods
aas
jne
imul
imul
jp
adc
sarb
lea
sub
sub
and
aad
js
mov
lret
sub
jno
sbb
cwtl
cld
ret
mov
sub
jnp
mov
scas
cmpsb
jbe
bound
add
insb
sbb
aam
xor
xchg
sub
inc
mov
xchg
xchg
jge
dec
push
dec
stos
repz
js
and
leave
jnp
fnstcw
pushf
int3
pop
iret
sbbl
xorb
pop
arpl
in
mov
mov
clc
dec
or
daa
mov
stos
mov
mov
and
add
add
mov
test
add
inc
scas
inc
add
push
add
add
lret
aad
lea
and
js
xor
lret
aad
mov
imul
push
sub
call
das
mov
adc
pop
xor
pop
lock
subl
add
test
xorb
hlt
cmp
in
insl
xchg
repnz
stc
sbb
enter
xchg
mov
ja
sub
mov
leave
inc
iret
mov
jp
inc
pop
rcl
call
outsl
and
aam
add
arpl
jl
and
dec
add
addl
sahf
or
daa
int
mov
xchg
repz
inc
or
ja
push
ljmp
js
loop
mov
leave
cmp
jge
and
imul
pop
fwait
mov
div
xor
es
sbbb
outsl
sbb
das
faddl
mov
shrl
sbb
call
xor
je
out
ss
adc
inc
add
loope
out
jno
fisubrs
add
subb
push
push
or
xor
sbb
stos
mov
push
aaa
fsts
xchg
inc
cmp
push
push
or
in
mov
xchg
and
or
or
push
jl
jne
test
std
mov
psubq
imul
in
daa
pop
shr
incl
lea
push
pop
iret
jns
and
push
shll
jge
pop
pop
inc
outsl
and
jp
mov
and
or
repz
inc
mov
into
xor
pop
xchg
in
es
mov
rol
inc
pop
push
pop
rolb
jle
or
fisubl
xchg
lods
out
pushf
push
adc
and
pop
lahf
scas
loop
popa
lahf
add
iret
fisttps
adc
mov
in
int3
sub
incl
imul
lock
adc
sarl
out
jo
xor
push
inc
ss
test
sub
divl
adcb
xchg
cmp
jbe
rcrl
fisttpll
pop
rclb
and
mov
inc
add
add
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
dec
inc
xor
push
scas
js
xor
aaa
pusha
pop
icebp
out
inc
int
add
xchg
aaa
mov
test
dec
lods
xlat
movsl
test
inc
pop
lret
mov
jmp
jno
out
sub
inc
adc
inc
jnp
push
andl
or
ds
ret
sbb
mov
stc
lds
jmp
or
icebp
mov
xchg
movsb
jne
test
lods
bnd
or
das
ds
fwait
arpl
add
lds
jno
mov
inc
and
pusha
mov
fildll
in
ljmp
mov
stos
jge
lahf
adc
pop
addr16
test
dec
rsqrtps
sbb
dec
cmc
idivb
adc
adcb
mov
ds
aad
push
test
xchg
pusha
test
jge
cli
or
sub
shr
add
mov
jbe
ret
xchg
xchg
rcrb
cmp
xor
xor
cmc
push
cmp
pop
push
cs
mov
cmp
xor
mov
addb
nop
in
dec
xchg
scas
pusha
pop
push
jmp
test
mov
fisubrs
xchg
adc
jmp
ds
push
xor
push
add
or
aam
andb
sbb
add
mov
cli
dec
mov
mov
push
push
sbb
jp
iret
lret
jns
arpl
adc
shll
stc
pop
lcall
arpl
scas
lods
fs
xchg
fldcw
shrl
ja
inc
or
sbb
inc
je
dec
stos
push
or
cmc
or
inc
movsb
das
jae
cmp
mov
cmp
inc
or
xlat
mov
std
inc
lahf
test
sbb
lahf
insl
aam
icebp
fstl
call
faddl
pop
out
stos
xchg
sub
add
and
lcall
out
mov
add
cltd
xchg
or
fistpl
pop
add
xchg
mov
and
aam
int
scas
inc
jl
mov
pop
mov
mov
mov
pop
movsl
std
lds
xchg
add
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
xchg
jle
outsb
shrl
js
xchg
fisubs
sti
sar
mov
dec
bound
test
inc
pop
es
ss
dec
sbb
and
ljmp
ficoms
fsubrs
cmpsb
inc
cmp
shrl
sbb
xchg
test
add
cmp
jl
jbe
aam
divl
mov
fmulp
mov
xor
hlt
xchg
pop
cld
cli
cli
icebp
ja
pop
mov
mov
jmp
inc
mov
ds
mov
push
jns
mov
stos
sbb
and
lods
repz
inc
in
into
mov
out
pop
adc
mov
add
jl
mov
jbe
test
cli
mov
dec
xchg
pop
lds
test
and
add
in
xor
adc
and
testl
xchg
pop
push
lret
mov
sbb
dec
pop
stc
cmp
into
mul
xchg
outsl
fs
call
stos
repz
xchg
into
or
ret
dec
pushf
mov
icebp
dec
in
xchg
in
fs
data16
and
rcrl
fsub
mov
loopne
decb
addr16
sbb
inc
lret
movb
xchg
push
hlt
jb
fucomp
sahf
imul
ret
cs
push
pop
pop
ljmp
pop
lretw
sub
icebp
pushf
lret
js
push
jne
ds
xor
iret
mov
xor
mov
adc
icebp
and
mov
shrl
jecxz
mov
xor
or
push
dec
loop
dec
arpl
int
and
and
in
xchg
notb
xchg
or
mov
shll
ret
dec
loop
jmp
js
shr
xchg
or
pop
adc
cmpsw
je,pn
mov
jns
je
cltd
mov
pusha
push
clc
mov
jb
pop
ret
mov
xchg
dec
pop
or
dec
push
xchg
inc
xchg
cltd
fs
loopne
xchg
ljmp
out
cmpsb
push
xor
sub
pop
adc
inc
add
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
loop
mov
js
adc
push
jmp
xor
leave
rorl
mov
mov
and
rclb
jl
jmp
or
ret
fcompl
imul
fldt
pop
push
outsl
daa
fdivl
xchg
jnp
jge
xor
daa
inc
int
ret
push
dec
jg
or
xor
and
stos
xor
movswl
sarl
popa
cltd
fst
mov
xchg
lds
jb
or
sub
inc
push
hlt
inc
push
mov
lods
lea
enter
das
into
xor
loop
imul
loopne
out
clc
cmp
fidivrs
ds
xchg
addb
incb
sbb
or
sub
push
test
mov
sub
dec
mov
jo
mov
negl
rcll
popa
push
cs
fldenv
addb
repnz
push
out
bound
stos
pop
add
fimull
lret
dec
mov
ret
out
sub
push
icebp
aaa
mov
push
push
sub
cmc
mov
pop
sbb
xchg
testl
enter
addl
pop
xor
sbb
mov
mov
popa
mov
push
cmc
mov
inc
in
mov
dec
cmpsl
and
test
data16
dec
xchg
add
and
sarb
jmp
xchg
cmp
cmp
iret
or
ds
test
mov
dec
cmp
mov
mov
aam
test
insl
mov
push
mov
cmp
lock
mov
sbb
out
pop
fisubs
jle
adc
sub
sub
scas
je
dec
test
sbb
fs
loop
movsb
fiaddl
outsb
leave
ret
scas
hlt
adc
mov
loopne
and
dec
sub
rcrl
imul
dec
cltd
inc
xor
cmp
sub
movsl
aas
jl
or
popa
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
icebp
lret
cli
jle
mov
js
jle
js
sbb
and
jo
pop
test
mov
inc
push
loope
leave
dec
std
pop
xor
mov
push
enter
mov
call
clc
fsubrl
pop
jle
mov
addr16
ret
mov
inc
in
cmp
out
sbb
rcll
dec
adc
in
testl
in
test
push
push
and
cli
inc
loop
xchg
js
add
fsubrs
ds
push
pop
inc
pop
clc
jecxz
dec
pop
adc
push
push
jno
data16
or
push
xchg
scas
in
adc
in
rcll
repz
push
fistps
adc
enter
cs
pop
push
sbb
arpl
shll
loope
mov
dec
lea
insb
mov
in
pop
cld
cli
out
leave
push
mov
sub
out
lds
arpl
inc
les
sub
arpl
ja
pusha
sbb
test
std
subb
mov
repz
aam
dec
sbb
and
sbb
lods
nop
repnz
in
sti
fisttpl
mov
mov
mov
test
xor
outsb
xor
sahf
mov
xchg
jnp
das
sub
mov
js
outsb
mov
mov
and
out
adc
div
orl
jno
sahf
push
notb
xor
push
aaa
ret
pop
repnz
outsb
mov
cmp
fdivl
xchg
imul
push
aas
mov
lods
lock
dec
mov
sub
jmp
xor
mov
add
mov
dec
inc
push
xchg
inc
mov
mov
mov
adc
jg
adc
or
cmp
pop
outsl
in
bound
out
jp
insb
arpl
lcall
testl
out
mov
jbe
loope
leave
pop
std
dec
outsb
scas
sub
repnz
cmp
xor
sub
call
ret
rclb
scas
pop
jp
mov
ljmp
sbb
jb
add
jl
aas
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
jle
js
bnd
xlat
jb
xor
subl
mov
in
outsb
cmp
sub
aaa
mov
pushf
movsb
data16
lods
xlat
add
int
ds
mov
inc
sbb
mov
imulb
pop
movsb
iret
or
and
pop
iret
out
pop
scas
int
les
inc
outsl
insb
add
scas
nop
pop
pop
out
cmpsb
cmp
iret
xchg
sub
movsl
mov
arpl
pop
lcall
adc
dec
lahf
pop
js
xor
jnp
jecxz
enter
std
fmuls
pop
es
pop
sbb
sub
xor
rcll
test
ja
fwait
ret
mov
jl
mov
xchg
dec
lds
dec
inc
dec
adc
inc
jnp
dec
jl
pop
or
xchg
jmp
in
stos
shr
imul
fwait
dec
ror
xlat
jp
lret
inc
dec
jo
rep
xchg
inc
push
cmp
xchg
lds
jp
aad
xchg
sar
push
xor
test
iret
cmp
mov
mov
ja
add
mull
mov
in
lret
imul
mov
into
sub
imul
in
sub
popa
popa
cmp
subl
iret
test
add
pop
cmp
cmpsl
rcrl
or
push
aad
in
xchg
push
jne
sub
ljmp
xchg
icebp
loopne
cmp
nop
inc
sub
lods
aas
inc
data16
pop
xor
in
iret
mov
adc
cmc
sub
scas
jecxz
jno
arpl
mov
mov
ret
std
and
jo
andb
ret
add
sbb
ret
scas
mov
push
xor
dec
inc
test
pop
or
inc
mov
dec
add
xchg
mov
add
mov
hlt
mov
inc
mov
cmc
push
jmp
inc
fmul
xchg
fst
cld
out
pop
jmp
cmc
mov
pop
in
je
mov
mov
imul
dec
fdivs
movb
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
iret
xchg
gs
mov
js
shl
inc
mov
xchg
mov
xchg
addr16
add
jge
test
cmp
aas
out
mov
andl
sub
stc
popa
cmp
and
leave
addb
push
or
and
or
cvtps2pi
mov
repz
sbbl
mov
out
arpl
rclb
jnp
mov
in
and
xlat
fsubrl
xchg
pop
pop
pop
icebp
int
imul
clc
mov
jmp
int3
cwtl
xchg
lret
pop
stc
in
popa
cltd
out
insb
push
adc
fildl
push
add
push
jmp
imul
inc
xor
andb
mov
adc
and
push
sbb
test
push
pusha
inc
adc
fsubrs
lret
push
rclb
cmp
sbbb
sbb
sub
mov
cld
mov
andl
sbb
out
cmpsb
popf
mov
cmp
xchg
xor
loopne
lret
and
popf
popf
arpl
mov
lds
je
outsl
fbstp
jne
or
push
pop
or
and
decb
rolb
lahf
in
push
xchg
fdivrl
outsb
jecxz
cmpsb
scas
in
arpl
pop
fs
and
sbb
sub
pop
ss
jmp
jmp
lea
enter
daa
sub
pop
xchg
loop
arpl
inc
lret
sub
and
pop
int3
xor
mov
xchg
test
pop
repnz
cmp
cli
sbb
dec
in
pushf
cmpb
xor
dec
popa
sub
jge
jle
lcall
in
jg
jns
mov
push
mov
mov
test
out
pop
cmpsl
push
dec
sbbb
adc
dec
into
adc
push
cmp
das
jns
mov
in
fiadds
mov
cltd
lods
pop
jno
pop
and
fwait
jo,pt
push
lret
dec
inc
mov
adc
fsubrs
cmc
out
shrb
aas
cmp
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
neg
fildll
in
js
xchg
imul
movb
jmp
nop
inc
test
es
lods
xchg
mov
mov
sub
es
or
mov
icebp
sub
jnp
add
adc
cmp
lds
ss
cwtl
adc
dec
pop
notb
call
add
stos
clc
int
inc
rcrl
mov
or
data16
adc
mov
mov
adc
test
add
inc
mov
mov
pop
jne
js
dec
negl
add
and
push
xor
mov
movb
lret
mov
mov
cltd
jae
or
pusha
dec
stos
shr
loopne
sti
imul
jns
imul
mov
stos
inc
pop
cmp
mov
mov
scas
or
sahf
fidivrs
or
mov
mov
popf
mov
mov
and
xchg
je
jg
xorl
setle
test
xor
dec
sbb
mov
insl
fsubrs
sub
pop
int
ret
push
xchg
cmp
and
adc
adc
cmp
insb
lea
dec
mov
mov
mov
and
xchg
push
pop
cltd
mov
je
scas
mov
int3
xchg
adc
inc
pop
mov
push
pop
push
into
push
jb
lret
pop
cmp
das
loop
mov
orb
push
cmpsb
sub
and
cld
pop
sbb
jp
scas
fwait
jbe
ror
hlt
push
pop
xor
fbstp
and
adc
fnsave
lret
jp
out
sbb
call
outsb
push
xchg
pop
hlt
pop
xor
aam
daa
adc
push
xchg
xor
arpl
ss
in
cli
ficompl
sub
data16
and
ds
jae
pop
out
dec
fildl
sub
movsl
fisttpll
jge
arpl
lods
pop
js
insl
push
ficompl
add
lods
pop
mov
scas
outsl
aaa
jne
loop
imul
push
rclb
push
sub
push
dec
jl
and
mov
dec
call
xor
aad
mov
int
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
mov
inc
or
in
js
inc
testl
pushf
push
lds
orb
fistpll
inc
outsl
jmp
mov
jb
into
shll
dec
push
pushf
xlat
add
sub
jae
shlb
push
xor
arpl
lds
jb
sahf
mov
mov
mull
mov
add
cmp
mov
testl
sarb
test
fwait
shrb
cmc
mov
mov
cmp
pop
shll
loopne
insl
fistpll
push
mov
or
adc
shlb
sub
cwtl
outsb
dec
popf
in
jbe
dec
inc
in
test
inc
aas
daa
mov
fwait
jmp
aaa
cmp
lea
in
and
in
subb
ret
std
sbb
xchg
jle
lds
xchg
lea
lock
aas
cmpsl
xor
je
insb
lahf
nop
inc
mov
sbb
in
stos
xchg
sub
sub
cwtl
add
pop
adc
xchg
pop
jns
pop
push
jge
sbb
sub
jb
cwtl
leave
es
test
cmp
adc
dec
loope
inc
add
filds
pop
mov
jle
insl
pusha
cmp
cmp
in
mov
mov
lds
lahf
daa
ficoms
sub
ret
mov
mov
mov
popf
stos
xor
pop
pop
pop
clc
test
dec
and
jle
jl
cmp
mov
inc
mov
and
jge
ja
pop
xor
or
mov
sti
fdivrs
lock
inc
cmc
mov
rol
mov
pop
or
pop
fidivl
popa
xchg
mov
fs
lcall
pop
jno
add
mov
cmc
sbb
add
in
out
mov
daa
sbb
lret
and
fistpll
in
fdivl
lcall
test
popa
in
and
test
adc
stc
dec
das
mov
das
mov
xor
pop
imul
sbb
cmc
xor
loop
aaa
xor
out
out
xlat
frstor
or
mov
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
sub
xchg
into
mov
js
xor
sbb
std
mov
jno
sahf
aad
and
aaa
cmpsl
testb
les
dec
push
outsb
mov
jmp
loope
xchg
into
lret
push
gs
imul
xor
outsl
sbb
ja
pop
and
jmp
arpl
push
xor
xchg
fldt
xor
insb
push
orb
pop
or
clc
repz
mov
mov
mov
fnstcw
mov
je
mov
mov
mov
pop
add
iret
into
clc
mov
and
ljmp
test
test
push
inc
adc
js
jle
jmp
jecxz
xchg
pop
or
mov
push
pop
mov
dec
imul
xchg
bound
cmpsb
push
mov
out
push
pop
xor
jmp
inc
inc
or
out
xchg
in
iret
fdivrs
out
shlb
outsl
xchg
jle
subb
movsl
mov
addr16
addr16
pusha
repz
jecxz
rorb
mov
test
scas
push
jp
and
insb
int
mov
inc
int3
mov
and
push
adc
stos
loopne
leave
out
pop
movaps
inc
cmp
jo
or
sbb
test
out
mov
dec
mov
les
decl
push
or
and
out
pop
out
push
cmpsb
jecxz
pop
jge
lcall
mov
push
insl
xor
sub
mov
sarb
stc
pop
in
sbb
jge
cmp
jg
fs
rcrb
inc
clc
adcl
scas
int3
ret
les
nop
inc
and
lret
clc
test
mov
and
repnz
add
cld
mov
stos
push
movb
xor
gs
insl
out
repz
xchg
or
xor
mov
cmp
js
ljmp
adc
adc
pop
fimull
cld
imul
movb
push
lahf
arpl
nop
inc
xor
aam
push
mov
add
mov
aam
pop
in
pop
outsb
test
sub
sbb
leave
out
lods
pop
outsb
cmp
pop
fs
mov
xor
inc
sbb
fcmovnbe
fcmovbe
sbb
lret
pop
call
inc
lret
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
rol
pop
outsb
mov
jle
js
push
insb
mov
push
mov
nop
mov
xor
sub
mov
popf
or
add
xchg
fidivs
aam
xchg
sahf
andb
clc
xchg
mov
pop
daa
xlat
mov
fmuls
test
jge
gs
or
pop
adc
arpl
mov
das
xchg
fsubs
in
fistl
es
dec
test
test
mov
shrl
and
mov
push
repnz
ja
imul
jnp
cld
mov
inc
mov
lret
repnz
cmp
in
inc
and
ds
gs
mov
sub
and
stos
push
cmp
lock
repz
jnp
xchg
jnp
call
push
aas
aaa
cli
inc
fisubs
add
pusha
addb
insb
in
push
fnsave
pop
stos
nop
mov
fisubs
dec
cmp
sbb
int
lret
mov
xor
dec
push
xchg
xor
adc
push
cmp
mov
xchg
mov
pop
roll
xor
cli
mov
sbb
adc
imul
icebp
sarb
or
test
fiadds
lahf
mov
cmp
int3
idivb
clc
js
mov
push
xchg
dec
lods
test
cmp
pusha
jbe
cmc
pop
repz
xchg
adcl
sub
push
jge
and
dec
cmp
imul
pop
js
inc
push
das
scas
mov
add
rcl
imul
xchg
and
mov
insb
xchg
xor
cs
int
pop
out
ret
or
cmp
rcll
leave
xor
inc
xchg
ss
shl
adc
repz
inc
mov
dec
nop
in
fisubl
shl
jno
or
mov
xchg
pop
cmp
jnp
dec
in
lods
jns
mulb
in
scas
mov
pop
out
pop
and
enter
out
sub
test
in
dec
jge
icebp
cmp
ljmp
ds
je
pop
das
cwtl
ret
mov
pusha
mov
or
push
out
adc
jb
add
lret
push
nop
ficompl
lahf
out
cli
xor
or
adc
cmp
mov
cmp
mov
push
add
cmp
movl
jmp
ret
ret
lret
test
pusha
and
js
jle
js
mov
and
dec
loop
and
sbb
ficomps
inc
fimull
addr16
sbb
movsb
adcb
sub
in
iret
jae
adc
and
mov
je
test
pop
push
mov
add
sub
aaa
add
pop
and
pop
cld
leave
pop
out
call
int3
mov
mov
cli
sahf
addb
adc
xor
cmpsl
lret
ja
mulb
mov
lods
mov
pop
sub
cmpsb
mul
dec
test
ficoms
inc
clc
xchg
fstps
jle
in
hlt
jecxz
cmp
addl
outsl
cmp
leave
xor
xchg
fwait
lods
rorl
data16
sbb
pop
jmp
ss
jmp
cltd
mov
mov
outsb
push
sar
call
and
shrb
mov
dec
mov
xchg
movsl
cmp
jmp
mov
aas
push
jmp
shrl
push
jge
push
xor
arpl
subl
dec
cmp
ljmp
mov
sbb
in
or
orl
test
mov
call
or
or
jbe
push
adc
notl
dec
cli
rorl
sbb
mov
mov
add
and
lret
mull
push
pushf
mov
ss
mov
mov
pusha
push
and
mov
in
push
mov
hlt
arpl
adc
xorb
test
mov
fcmovne
push
and
int
outsb
stos
push
sub
adc
xchg
add
pushf
stc
sub
and
adc
inc
loope
ret
and
push
push
mov
adc
sbb
add
and
push
scas
pop
pop
cmpl
push
popa
mov
and
pop
in
add
ds
sarb
jecxz
push
mov
jb
mov
add
imul
shrb
out
cmpsl
aas
adc
add
mov
out
jge
subl
adc
sbb
xor
inc
das
jo
nop
lcall
cmc
and
jmp
mov
in
inc
push
mov
sub
add
xor
outsl
cli
mov
xchg
fs
push
enter
pop
or
test
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
pop
hlt
test
jle
js
sbb
loop
xorl
sar
test
xlat
popf
icebp
mov
ret
xchg
scas
pushf
cmc
int3
mov
enter
out
insb
dec
push
xchg
shrb
inc
push
inc
inc
arpl
or
inc
ss
inc
push
jnp
add
mov
pop
pop
mov
icebp
xor
or
jl
stc
fmuls
inc
sbb
sarl
scas
dec
fsts
aaa
test
mov
sub
xchg
out
mov
ja
mov
jl
dec
ljmp
cmpsb
lret
add
xchg
mov
nop
js
je
and
inc
mov
rorb
cmp
ret
in
test
in
jl
dec
enter
clc
mov
sub
aas
or
daa
or
pop
jns
mov
sub
movsl
pushl
fs
lcall
mov
inc
bound
mov
mov
out
jae
fisubl
testl
jb
push
push
andl
or
mov
sbb
movsb
cmpsl
mov
fsubrl
xchg
cwtl
nop
cld
les
fstps
pop
test
add
loop
push
ret
call
mov
mov
enter
inc
inc
inc
sub
or
inc
sub
dec
das
xor
lds
aas
sahf
push
xor
movsl
sub
push
ljmp
dec
test
sub
ja
mov
lret
pop
adc
push
aad
xlat
add
movsl
movsb
subl
push
sub
xchg
subb
psrld
out
inc
call
pop
cltd
dec
pop
js
aaa
imul
pop
sub
shrl
or
mov
pop
out
ret
fwait
pop
cmp
pop
push
pop
test
jl
fdivp
inc
int
cld
out
inc
jae
push
aaa
popa
mov
cmp
push
xor
fwait
sbb
mov
xchg
jg
test
pushf
fmuls
add
or
mov
adc
pop
imul
push
or
inc
pusha
xchg
lock
mov
push
mov
ret
pop
mov
jae
sbb
enter
sub
xor
adc
or
dec
pop
pusha
pop
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
addl
dec
js
in
js
or
jmp
roll
popa
sub
pop
and
inc
cs
int3
xor
sub
dec
xchg
jmp
aam
dec
pop
icebp
adc
fwait
in
xchg
cmp
mov
push
dec
rep
and
fisubl
pop
jnp
mov
mov
fistps
pop
inc
inc
daa
xchg
adc
jmp
aaa
icebp
sub
sbb
in
mov
push
lahf
inc
inc
sbbb
pop
or
mov
mov
mov
insl
pop
enter
clc
mov
pop
fadd
movsb
sti
es
pop
mov
nop
insl
cmp
push
push
jae
jbe
stos
mov
mov
cmp
add
adc
jle
in
jo
mov
jne
lret
sub
gs
xor
mov
mov
and
dec
ss
add
ja
out
clc
orl
jl
cmpsl
int3
or
adc
test
lods
add
in
dec
pop
push
push
inc
fidivrs
enter
and
imull
cwtl
sub
or
jo
mov
pushf
out
adc
inc
iret
inc
popa
inc
outsl
mov
ss
mov
jno
push
sub
data16
test
inc
inc
out
sahf
mov
sub
sar
test
mov
sbb
push
nop
inc
xor
mov
imul
outsb
jge
fmull
pushf
fstl
mov
outsl
mov
imul
insb
pop
test
scas
dec
mov
jno
addb
call
icebp
rcr
imul
es
lea
clc
cmp
sahf
scas
enter
push
push
xchg
dec
and
mov
lret
int3
andb
sub
outsb
cmp
inc
fnsave
inc
push
mov
jl
jo
cmpb
push
mov
mov
in
mov
push
int3
inc
cld
vmulpd
add
adc
sbb
mov
idivl
imul
push
inc
sti
lds
imul
jge
jecxz
add
loope
jl
idivl
int
int
lret
hlt
xor
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
out
loop
and
dec
js
in
js
jnp
push
hlt
cli
push
in
and
xor
stc
and
inc
dec
pop
xor
lahf
xor
imul
inc
fisttps
sbb
es
mov
cwtl
loop
test
int
or
mov
ds
lahf
aad
daa
insl
jb
mov
pop
lret
inc
add
mov
push
mov
push
test
dec
cmc
adc
dec
ret
ljmp
inc
rcll
adc
cwtl
mov
xchg
cmp
lcall
adc
dec
cli
jnp
cmc
das
mov
addr16
mov
mov
sub
js
pop
sub
xchg
push
cli
sub
int3
in
push
push
jle
mov
scas
cmpsl
and
rcrb
xor
dec
aad
popa
std
mov
inc
cld
mov
push
ljmp
fs
loop
cld
and
nop
cwtl
aaa
iret
dec
adcl
xchg
xor
cmpsb
stos
xchg
pushf
mov
bswap
xor
and
mov
scas
and
orb
fistpl
insb
ret
xor
add
xchg
stc
es
mov
mov
mov
xchg
out
adc
aas
test
lret
xchg
mov
lea
inc
mov
test
mov
dec
in
adc
mov
ret
shrl
insb
push
push
inc
aam
inc
shl
push
dec
push
sbb
in
int3
sub
aaa
cmpsl
enter
sahf
fstp
rcll
mov
pop
push
jmp
sbb
push
fmuls
dec
filds
inc
sti
push
mov
push
inc
cmc
imul
in
mov
ficoml
and
mov
scas
mov
pop
and
fmul
outsb
lods
cltd
mov
div
inc
mov
aad
js
into
jno
out
icebp
push
mov
hlt
inc
outsb
pop
test
in
mov
xor
push
inc
jge
push
out
das
or
scas
dec
movsl
iret
mov
adc
mov
inc
mov
sbb
into
mov
fs
sub
mov
or
lcall
xor
pop
mov
push
cmp
add
mov
ret
leave
jb
jg
stos
mov
xchg
add
jmp
ret
int
into
xchg
jle
ss
das
mov
in
js
push
sub
adc
mov
jmp
test
mov
dec
gs
sub
xlat
loopne
faddl
and
dec
or
sub
pusha
movsl
les
dec
sbb
pop
leave
insl
jno
pop
sub
pop
in
movsl
pusha
add
aas
cmp
and
jl
jns
xor
xor
ljmp
ljmp
hlt
mov
mov
mov
repz
cmpsb
sub
pop
mov
or
add
ret
sub
mov
outsb
mov
inc
hlt
aaa
pop
sbb
mov
hlt
cmp
das
adc
add
push
popa
pushf
sahf
outsl
hlt
in
xchg
inc
call
daa
cli
push
lods
inc
xchg
inc
sub
outsb
fildll
cli
inc
adc
leave
sti
pop
push
add
out
and
xor
mov
or
or
push
in
iret
ljmp
push
and
arpl
and
mov
add
dec
cmpsb
scas
ret
lods
jl
cwtl
adc
mov
xor
mov
push
leave
cmp
fisttpll
jbe
xchg
pop
mov
inc
lahf
cmpsb
scas
sbb
mov
sub
mov
jns
ud2
mov
sbb
jmp
adc
call
sub
or
jmp
and
vmread
dec
movsb
xor
lahf
inc
push
enter
add
xor
mov
js
cmpsb
jmp
push
pushf
mov
inc
and
jno
fcmovu
jb
cmpsb
jl
ja
inc
push
jecxz
movsl
and
pop
add
lods
jnp
les
loope
or
mul
mov
mov
es
sub
outsl
adc
dec
adc
into
sbb
into
jne
jecxz
dec
push
repnz
ja
and
rorb
xor
pop
pushaw
sbb
pop
push
add
or
notb
pop
dec
lods
imul
jecxz
je
jo
push
sbb
sbb
jg
cmp
push
imul
cli
lods
cmc
push
je
and
mov
std
stc
xorl
dec
out
cmp
mov
popa
sub
shll
add
out
adc
mov
mov
aas
test
movsb
jge
jo
scas
xlat
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
add
ljmp
js
mov
mov
cmp
sub
jno
imul
icebp
daa
mov
fwait
inc
mov
ljmp
push
loopne
ja,pn
xor
xchg
ja
pushf
inc
fnclex
sti
fldt
repnz
inc
aas
jmp
sbb
or
xchg
mov
xor
daa
mov
mov
aaa
cmpsb
or
jle
mov
and
out
cmpsl
out
mov
jl
mov
mov
and
mov
and
arpl
dec
ret
mov
inc
inc
shlb
test
jnp
fwait
sahf
mov
dec
insb
xlat
nop
mov
sbb
and
sbb
cli
ss
push
incl
mov
fs
mov
xchg
cli
jbe
imul
divb
adc
subb
mov
mov
pushf
add
test
popf
push
lea
xor
mov
adc
arpl
push
or
clc
popa
mov
sbb
push
push
and
cli
pop
bound
fimuls
mov
push
dec
popa
fisttpl
sbb
or
xchg
fldenv
js
in
dec
xor
test
dec
es
push
mov
stc
inc
cmp
and
cmp
aad
sbb
and
js
fcoml
and
push
add
adc
cmpxchg
pop
popf
lock
mov
sti
insb
or
jns
insb
jp
jl
mov
push
subl
cmpb
nop
inc
mov
fwait
pop
pop
sarb
adc
sti
adc
jb
push
jbe
addb
out
fldcw
pop
lret
ror
popa
sbbb
xchg
and
imulb
nop
fstps
jae
fisubl
and
add
mov
add
or
ds
ljmp
mov
shll
aam
leave
ds
fbstp
mov
pop
mov
pop
mov
sbb
mov
push
insl
or
and
cmp
mov
shrb
mov
popa
xor
xor
push
sub
cmp
adc
addr16
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
cmp
outsl
lods
cmpsb
push
js
in
js
inc
push
inc
or
enter
leave
jg
je
and
into
pop
lret
push
cli
mov
hlt
add
mov
fcompl
lcall
je
lret
push
in
mov
sahf
imul
gs
xor
out
jnp
add
xor
jge,pt
lret
push
in
mov
aam
subb
xchg
sbb
lea
lret
mov
je
ljmp
ss
aad
pop
jge
xlat
movsl
movsb
jp
dec
add
and
scas
pop
jae
and
loope
jne
lock
mov
adcb
fxch
lods
arpl
lods
clc
adc
jnp
in
jl
dec
outsl
push
pop
add
arpl
icebp
mov
and
outsl
pop
push
arpl
repz
sarb
mov
push
in
lds
or
add
in
sbb
inc
push
pop
std
xor
inc
bound
shlb
aam
fwait
lahf
call
sbb
cmc
call
fsubr
push
jl
dec
pop
sti
stos
lods
and
pop
dec
xor
mov
insb
and
bound
pusha
sbb
popf
cmp
xchg
pop
jl
cmpsl
cmp
cmp
sbb
outsl
jge
in
jnp
cmp
clc
sbb
and
dec
adc
rcr
and
mov
bound
arpl
jbe
push
jo
ljmp
push
mov
jl
lret
sbb
sbb
aas
sbb
popl
sahf
cld
cli
int3
rcrb
rep
and
mov
xlat
ficoms
lea
adc
jnp
imul
fnstsw
add
addl
fisttpl
mov
push
push
cmpsb
xlat
subl
adc
push
lret
fstps
push
scas
shll
push
jns
push
push
into
je
push
stos
mov
popa
add
xorl
adc
mov
xchg
cmp
pushf
push
xchg
les
scas
ljmp
push
mov
scas
pop
rorb
ret
xor
push
lea
xor
int
stos
mov
daa
add
iret
dec
jecxz
pop
lods
in
adc
mov
add
add
adc
add
cld
xor
xor
jmp
aas
lret
iret
aad
jo
lods
neg
xor
fistl
push
js
in
js
pop
add
sbb
aad
mov
imull
and
popf
cmp
mov
test
pop
mov
sti
inc
dec
sahf
dec
outsl
jae
mov
fwait
pop
xor
xor
nop
pusha
inc
lods
loopne
shl
mov
ss
out
int
mov
je
xchg
hlt
pop
push
ja
jnp
jge
clc
add
fstp
enter
pushf
repz
std
pop
sbb
xchg
push
mov
icebp
jae
jmp
push
push
adc
mov
test
scas
mov
sti
pop
ds
add
ja
xchg
adc
insb
mov
xor
rclb
pop
adc
and
adc
mov
insb
int3
inc
shll
in
rcl
pop
stos
cltd
mov
and
lahf
and
jno
inc
or
mov
es
aam
jg
dec
pop
xor
loopne
dec
xor
or
movsb
jp
and
sbb
notl
sbb
test
xchg
jnp
dec
movsl
std
xor
aam
lock
sbb
lods
stos
or
lahf
cmpsb
jno
push
jb
sarl
repnz
inc
add
sahf
iret
xor
sub
outsl
sti
shll
ljmp
lods
insl
mov
push
mov
adc
sub
cld
adc
int
or
adc
mov
cmp
mov
lret
pop
push
loop
aaa
xchg
shlb
lods
int
jmp
or
aam
mov
enter
mov
push
fidivrs
sbb
and
lahf
jmp
jl
adc
dec
xor
adc
in
les
add
jnp
push
mov
inc
mov
dec
rorl
push
and
lock
movsl
mov
lret
fiadds
inc
push
jmp
in
stos
stos
aas
mov
adcl
cmp
in
jb
push
sbb
dec
jl
fstps
pop
scas
sub
mov
mov
push
sub
cmp
cmp
xor
mov
inc
ja
add
push
inc
js
mov
jge
mov
notb
inc
sahf
inc
xor
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
clc
in
clc
push
js
in
js
out
and
inc
and
addr16
mov
sub
push
loope
loope
scas
pop
je
cmpsb
addr16
push
test
jp
clc
cmp
jo
aaa
sub
adc
clc
test
addr16
jnp
in
es
mov
sub
jp
and
ret
mov
jg
mov
mov
inc
stos
jnp
call
jmp
in
fsubrl
cld
ja
cwtl
sbb
and
jecxz
xchg
xor
xor
push
add
popf
rcr
neg
add
push
loopne
lods
adc
mov
sbb
pop
gs
or
aas
fyl2x
outsb
imul
cmp
js
enter
lods
jg
cmp
jo
in
cmpl
je
pop
arpl
sub
shll
loope
or
pop
mov
lea
xor
outsb
stos
dec
jp
cld
jbe
jle
inc
jecxz
das
ja
ficomps
bound
mov
iret
jl
jae
add
int3
xor
inc
mov
push
out
stos
xlat
jbe
fdivrl
in
xchg
pusha
xor
jae
lcall
test
fcomip
add
mov
daa
loop
push
enter
push
or
addb
sub
out
mov
push
xchg
mov
in
movsl
hlt
movsl
ret
sbb
movl
or
cmc
out
outsl
sahf
xorl
fcoms
gs
std
adc
lret
dec
pop
sbb
mov
lcall
leave
xchg
cltd
outsb
xor
dec
sub
enter
sub
and
fs
add
jmp
bound
push
sbb
inc
jl
push
dec
dec
cmp
nop
mov
add
out
inc
adc
sbb
ret
jmp
loopne
movsb
push
mov
sarl
cmp
mov
stos
arpl
lret
mov
clc
stc
stc
inc
or
push
rolb
mov
xor
or
adc
cmp
aam
test
xchg
adc
ljmp
rolb
xchg
or
xchg
and
in
inc
fsts
cmc
dec
mov
add
jmp
int3
into
ror
rcl
into
jbe
inc
data16
gs
js
in
js
stos
mov
cli
mov
xchg
sbb
mov
ret
mov
repnz
lock
inc
push
sahf
or
xor
cwtl
les
mov
and
lret
mov
jo
arpl
mov
fs
mov
jle
in
ljmp
mov
cmp
fsubr
inc
dec
adc
adc
test
lahf
bound
cmp
dec
std
popa
leave
push
test
clc
sub
push
test
inc
inc
cmp
sbb
adc
and
repz
xchg
or
les
xor
push
jmp
enter
sbb
aad
cltd
cli
xchg
mov
or
mov
pushf
adc
cmpsl
push
test
pop
outsl
adc
enter
test
cmp
xchg
scas
cmpsb
js
jns
mov
psraw
pop
popa
mov
xchg
imul
call
inc
aas
in
push
dec
jnp
fldcw
jb
jo
shl
mov
aad
leave
cmp
in
insl
inc
int3
cli
mov
adc
out
or
movsl
push
and
or
popf
stos
xor
outsl
nop
or
dec
ljmp
mov
nop
flds
shll
adc
sub
mov
imul
jbe
sub
mov
jns
popa
enter
mov
sub
adc
testb
inc
stos
fs
push
add
dec
add
xchg
or
movsl
mov
ja
xor
dec
mov
les
aaa
mov
pop
push
mov
mov
sub
and
mov
call
mov
pop
repz
jb
and
or
push
or
xchg
out
add
outsl
add
cltd
pushf
adc
mov
push
jb
pop
push
stos
dec
test
and
add
xchg
push
test
jmp
sti
xor
cmpl
sahf
adc
adc
or
adc
ss
push
mov
out
sahf
xor
xor
jg
inc
jl
sbb
shl
sbb
xor
mov
fildl
popa
pop
inc
test
jnp
rorl
scas
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
mov
js
in
js
in
movsb
lret
fwait
ret
into
push
out
dec
lods
or
loope
dec
xor
mov
frstor
test
lcall
sbb
jmp
sub
mov
int3
imul
adc
rcll
test
push
jp
xor
out
in
push
ljmp
cmp
xchg
cmc
xchg
sub
adc
xor
fisubrl
lea
scas
repz
lea
pop
into
pop
push
pushf
pop
push
fwait
jle
imull
fsubrl
movsb
call
jb
and
or
scas
jnp
xor
or
or
mov
mulb
xchg
aaa
add
test
mov
and
push
push
enter
ljmp
dec
loopw
push
insb
fs
dec
pop
test
scas
bound
pop
cmp
mov
je
xchg
inc
test
mov
fdivr
add
loope
in
movsl
dec
rcrl
aam
push
js
test
xchg
out
aas
xchg
in
xor
inc
cmc
ja
cmc
xchg
mov
lcall
add
push
push
xchg
pop
xlat
daa
bound
sbb
mov
jbe
enter
sbb
hlt
mov
shr
mov
fsubl
outsl
adc
outsl
lcall
push
adc
scas
and
sti
lods
mov
jbe
cmp
jle
loope
cld
jns
stos
xchg
and
std
pop
movl
lcall
loopne
sub
jbe
std
addr16
sub
faddl
jmp
dec
sbb
push
xchg
xchg
sbb
iret
ss
xchg
xor
mov
mov
ds
mov
xor
cld
out
xchg
xor
add
mov
cmp
pop
and
loope
popf
cmpsl
movsb
cli
or
mov
clc
aas
int3
enter
inc
and
push
ljmp
lods
fs
enter
sti
adc
mov
clc
aas
or
adc
mov
ds
enter
sub
mov
dec
xchg
fiaddl
fsubrl
lahf
fdiv
adc
fmull
lock
cmp
ja
jmp
rol
xor
pop
scas
je
mov
jle
js
jge
jno
xor
inc
cmc
loopne
inc
jecxz
inc
int3
dec
int3
pop
mov
mov
rcrb
sahf
pop
sbb
lcall
xor
or
int
out
xchg
xchg
push
jg
push
loop
iret
mov
adc
sbbl
ljmpw
sub
scas
mov
cmpsb
cld
insl
mov
or
nop
imul
lret
push
imul
sti
dec
push
pop
rcll
scas
jmp
cmp
fs
xor
aad
repz
outsb
or
into
jne
push
je
push
ret
inc
xlat
into
add
mov
jmp
in
fadd
fsubrs
imul
add
pop
push
ja
mov
jg
imull
das
aaa
or
test
inc
or
fs
adc
xchg
inc
sbb
aad
inc
adc
scas
sbb
sbb
xchg
jmp
xchg
dec
adc
push
mov
inc
xlat
daa
sbb
sbb
pop
aas
push
push
push
or
idivb
enter
out
imul
daa
push
shl
xchg
daa
jno
pusha
mov
shlb
xchg
fdivrs
pop
stc
xchg
es
jecxz
mov
adc
sub
cltd
sbbl
jne
dec
push
lcall
out
dec
jae
sub
arpl
xchg
les
int
ffreep
xchg
mov
bts
pop
notl
mov
push
sarb
dec
mov
add
fildl
cmp
adc
call
scas
popf
pushl
add
xchg
cmpsb
sbb
cld
mov
push
sbb
add
cmp
cld
icebp
xchg
cmp
sub
dec
cmc
mov
push
add
arpl
xchg
cmp
jle
sbb
mov
jle
lock
dec
out
push
add
and
jno
arpl
ljmp
push
cmpsb
fmuls
sub
mov
and
out
cld
adc
jae
mov
gs
inc
jl
inc
pop
sbb
adcl
mov
push
popa
inc
inc
pop
xchg
loope
aam
push
stc
xorl
pushf
gs
insl
jae
mov
stos
cld
add
push
pop
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
popa
push
iret
and
js
in
js
jp
pop
jecxz
cmp
gs
jl
add
cmp
jle
fldcw
cmpsl
cmpsb
cmpsb
cmp
aam
lahf
push
arpl
inc
mov
stc
inc
adc
mov
ss
xor
popa
lds
add
and
sub
xchg
pop
mov
setl
mov
sbb
cmc
insl
fisubl
add
shrb
enter
xchg
mov
xor
negl
fst
enter
stos
sbbb
pusha
jg
jo
and
push
in
fst
fxch
and
mov
inc
inc
sti
dec
inc
pop
and
mov
push
ljmp
loope
cmp
clc
std
inc
and
xor
or
int3
xchg
jo
adc
fistps
into
inc
test
test
aas
int
lds
out
and
unpckhps
mov
pop
movsl
div
or
aad
mov
je
push
je
loop
add
cmpsb
enter
jecxz
arpl
sub
push
mov
push
test
add
pop
dec
ret
sti
or
fcmovb
or
pusha
add
sbb
inc
xor
dec
movsl
and
mov
add
sbb
loope
lret
cmpsl
pop
jecxz
hlt
addr16
icebp
xchg
pop
imul
and
divl
lds
mov
cmp
sarb
lcall
arpl
lods
push
jg
add
xor
out
bnd
push
test
xorl
cs
cmpsl
jle
outsl
sbb
call
inc
or
sti
sub
enter
mov
jbe
xchg
lods
xchg
adc
imul
and
shll
fistl
bound
push
inc
loopne
clc
adc
imul
mov
push
stos
das
cmpsl
into
xchg
cld
popf
add
and
daa
cltd
inc
lret
inc
dec
movsb
andb
xchg
mov
or
ljmp
movsl
pop
ds
icebp
adc
adc
pushf
lds
dec
loope
movl
in
out
data16
mov
repnz
jg
mov
stc
in
cmp
in
stos
test
test
inc
jne
sub
xchg
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
js
and
in
js
cmp
jecxz
pushw
dec
or
movsl
push
dec
pop
scas
mov
in
push
je
mov
fistps
pusha
xor
pop
aad
xchg
iret
mov
or
fnsave
pop
sbb
dec
int3
xor
mov
pop
mov
lret
adc
adc
cmp
jl
xchg
push
dec
decb
inc
mov
aad
jecxz
pop
push
mov
sti
pop
xchg
inc
sub
xchg
xor
into
fwait
es
das
mov
shll
jno
fwait
rorl
fsubrl
lcall
stos
mov
adc
mov
int3
or
jne
sbb
fstl
lret
fs
xor
sbb
lcall
cli
mov
test
jmp
inc
sub
orl
leave
pushf
cmpsb
aad
sbb
inc
cmp
pop
loope
mov
and
xchg
xor
rcrl
jns
shlb
shr
xchg
out
cmp
push
sbb
push
pop
fcomip
cmp
clc
xchg
int
and
out
xchg
jb
int3
mov
mov
lock
nop
or
inc
mov
xchg
dec
in
xchg
data16
insl
es
and
lods
inc
std
dec
sub
cmp
jmp
fwait
call
push
popa
or
or
xlat
mov
sub
xor
adc
in
in
dec
lahf
adc
cmpsl
ljmp
xchg
sarl
stc
in
pop
and
out
adc
fs
or
lcall
aaa
inc
inc
outsb
popa
scas
es
cs
xchg
out
and
mov
aad
push
pop
mov
xlat
push
adc
cmp
dec
sti
lea
loope
push
cmc
addl
out
jp
jbe
scas
data16
mov
sub
pop
cmp
pop
inc
js
ret
out
pop
enter
lea
mov
add
xor
push
es
xchg
pop
jmp
adc
insl
pop
push
test
mov
test
ljmp
add
sidtl
icebp
or
dec
sti
test
jle
mull
cmp
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
mov
or
js
in
js
shlb
cld
jno
sbb
cmp
sub
inc
cmp
pop
adc
mov
shlb
sbb
pop
int
gs
cmp
and
popf
sub
and
mov
xchg
mov
idivl
sbb
lock
sub
lea
inc
or
fisubrl
adc
notl
or
test
xchg
ljmp
lock
or
jo
pop
outsl
int3
pop
dec
js
and
mov
jmp
pop
lahf
test
sbb
lahf
dec
dec
cli
sub
dec
mov
or
and
rcll
test
add
jg
in
or
sbb
fisttpll
or
sub
jg
test
jo
dec
mov
xchg
mov
in
cmp
loop
jo
outsb
stos
in
push
adc
xor
mov
fs
addr16
mov
addb
jle
scas
ret
dec
movsl
xchg
add
stc
lds
pop
das
sbb
sbb
lahf
or
imul
inc
mov
iret
popf
shlb
test
cmp
gs
shll
pop
fdivl
pusha
lret
js
adcl
xchg
fsubrl
mov
inc
sbb
mov
pop
sub
mov
aam
xchg
cltd
add
call
shlb
push
in
pushf
loope
sbb
or
push
xchg
out
jo
and
and
mov
cmp
nop
rclb
or
mov
push
adc
outsl
out
mov
cwtl
sti
inc
jle
scas
insb
sti
sub
sbb
mov
jmp
add
push
in
cltd
orl
pop
or
iret
icebp
push
mov
inc
dec
push
test
test
cmp
dec
fwait
data16
clc
incb
jl
xchg
jo
jae
jmp
sub
les
and
dec
cmp
sbb
aas
stos
jno
dec
rcll
inc
cmc
les
movsl
mov
pop
cltd
jg
mov
rcl
je
mov
cmp
cmc
imul
mov
addl
push
les
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
inc
adc
js
jle
js
mov
dec
sub
in
clc
andps
iret
cmp
dec
imulb
jb
sub
clc
pop
push
cmpl
mov
push
or
mov
data16
stc
je
js
pop
aad
push
test
jmp
das
add
js
sub
lcall
or
pop
gs
faddl
clc
aad
pop
repz
mov
and
pushf
sub
add
xchg
pop
push
jo
pusha
mov
xor
aad
xabort
push
and
popa
mov
cmp
ja
insb
pop
data16
dec
add
inc
ljmp
inc
jnp
mov
xor
mov
sbb
pop
xor
xor
rclb
jmp
icebp
iret
jb
aas
dec
cltd
adc
dec
stos
cmpsb
cmp
sbb
jo
in
push
cmc
aam
xchg
dec
in
fisubs
icebp
pop
xchg
sub
xor
lds
xchg
adc
xchg
stc
mov
iret
mov
mov
incl
notl
fs
cmp
jmp
mov
inc
sub
int
inc
sub
xor
add
or
push
mov
scas
push
xor
dec
cmp
pushf
xchg
shrl
es
and
pusha
sbb
daa
push
in
je
shll
scas
pop
scas
scas
push
cmp
jecxz
mov
jmp
dec
push
ss
shrb
cmp
out
les
mov
jmp
ljmp
ja
sub
sbb
enter
std
out
repnz
push
and
bound
adc
push
scas
inc
sti
subb
add
js
sub
push
add
mov
dec
pop
mov
push
sbbl
jno
test
inc
cmc
jbe
arpl
mov
ljmp
jno
jae
lods
push
mov
sbb
pusha
out
lcall
mov
sub
inc
and
or
jecxz
clc
lods
jo
adc
sbb
inc
ljmp
xor
addl
mov
lahf
es
jns
ljmp
or
push
xchg
int3
mov
jg
rolb
jne
arpl
add
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
dec
iret
cmp
in
js
dec
leave
xor
pusha
mov
sub
jg
aas
test
lcall
add
cs
ja
and
mov
mov
aaa
bound
mov
dec
clc
fistpll
xchg
movsb
xchg
dec
jo,pn
dec
sarl
mov
test
cli
enter
xchg
xlat
aam
imul
push
pop
or
orl
push
pop
dec
lods
mov
and
or
xchg
repz
decb
sub
cmp
adc
ljmp
pop
xorb
repz
xchg
jbe
imull
lds
bound
jne
mov
and
cmpl
insb
dec
movsl
and
jecxz
loop
or
arpl
or
stc
cmpsw
outsb
fcomp
push
movsb
adc
xchg
dec
sbb
rcr
das
xchg
jge
shrb
cmp
es
jl
movsb
mov
xchg
mov
repnz
jnp
dec
jnp
fdivs
adc
push
push
lea
add
push
mov
rol
and
notl
inc
cli
mov
inc
movsl
das
push
dec
adc
loopne
les
mov
mov
fstps
repnz
out
xor
and
lret
mov
pop
iret
or
scas
movsl
imul
xchg
jae
gs
pop
cmp
adc
jmp
mov
xor
out
jb
fst
jno
push
out
adc
insl
and
jo
je
adc
or
sub
dec
push
mov
xchg
cltd
push
aad
shlb
int3
ja
sub
cwtl
mov
mov
stos
add
imul
adc
andb
sub
xchg
and
xchg
xchg
jl
xlat
jg
mov
mov
jl
sbb
sub
pop
jbe
or
adc
adc
stos
fsts
pop
mov
sbb
mov
sbb
cld
xchg
fisubl
xor
cs
push
add
sbb
clc
mov
pusha
sbb
push
ret
mov
insl
mov
push
push
or
mov
mov
mov
jmp
iret
ret
rol
fcmovnu
mov
cmc
mov
cmp
jle
js
cltd
push
mov
adc
imul
fdivrp
jo
mov
js
dec
mov
fldz
fsubl
jmp
push
xor
adc
in
pop
repz
add
cmp
sti
or
popf
aas
cli
addr16
mov
mov
xchg
in
gs
xchg
xor
cmpsb
int3
lret
pop
lds
mov
fcmovu
sub
adc
jb
scas
pop
repz
add
fwait
sbb
dec
mov
jmp
cmp
add
jg
mov
or
or
cmp
mov
jbe
mov
les
addr16
sbb
push
jmp
insl
mov
shlb
mov
in
iret
jbe
or
add
mov
sub
call
pop
stc
or
icebp
jno
daa
sbb
jmp
neg
cmp
push
push
inc
out
subl
popa
test
mov
mov
xchg
rorb
mov
in
fisubs
pop
add
jg
dec
inc
rcll
and
push
sub
stc
and
inc
aas
inc
cwtl
mov
das
sti
and
testb
push
xorb
push
or
out
repnz
xchg
push
and
sbb
push
aad
iret
mov
cmp
dec
mov
popa
jge
pop
pop
movsb
mov
xchg
stos
scas
xchg
dec
aad
xchg
pop
lret
mov
outsb
jno
inc
push
pop
jns
mov
push
xchg
xor
jmp
mull
cli
sbb
inc
lret
shlb
pop
dec
sub
gs
cltd
push
mov
and
and
jg
push
jae
idivl
and
lret
jg
or
and
cmpl
jl
subl
mov
push
das
pop
test
leave
out
inc
xchg
popa
cwtl
lds
xchg
in
cmp
jae
add
and
mov
int
cmp
dec
add
xlat
xor
xor
mov
and
lahf
jo
cli
push
cwtl
xchg
fstl
test
mov
sub
or
dec
rcrb
adc
filds
frstpm(287
pop
sub
movl
movl
jmp
int
ror
fcmove
leave
sub
sub
insb
js
in
js
aad
ret
dec
testb
add
insl
outsl
push
dec
mov
mov
push
sahf
or
adc
pop
pop
sub
imul
lret
sub
fwait
stos
mov
fidivrs
and
pop
jne
negb
aaa
pop
inc
lret
push
es
mov
push
lods
jne
aaa
sbb
pusha
ja
subb
adc
mov
mov
inc
xor
icebp
mov
dec
test
hlt
in
repz
loopne
mov
xchg
clc
outsb
xor
pop
jns
dec
addr16
repnz
push
cmc
dec
test
xor
and
popf
adc
xchg
movsb
inc
jb
je
bound
gs
jo
inc
cs
adc
orl
mov
cmp
mov
push
sbb
lcall
pop
mov
dec
mov
inc
mov
push
sbb
add
pop
dec
aaa
mov
jecxz
push
lock
inc
sbb
mov
lret
test
sbb
jo
jns
outsb
daa
and
inc
xor
cmp
int3
mov
testb
inc
lret
mov
mov
arpl
in
out
ja
fwait
subb
aaa
int
pop
xchg
fisubrl
cmc
rclb
xchg
loopne
imul
out
jnp
xorb
popf
sub
sbb
push
jbe
or
or
cmp
call
xor
sub
push
jae
popf
pop
or
cs
imul
inc
or
sub
push
rol
sub
aad
xchg
aas
loopnew
and
sub
mov
push
js
lods
cltd
jno
add
int
mov
loope
mov
mov
jne
int3
fwait
or
adc
mov
iret
pop
int3
dec
xchg
ror
pop
aad
sub
pop
mov
jae
in
loope
loope
sbb
out
and
fistl
mov
loop
dec
mov
int
cli
addl
cs
push
cmp
push
sbb
lods
ja
daa
mov
cmp
mov
mov
jl
cs
jmp
popa
jg
jge
fxch
jo
mov
aas
xchg
mov
imul
add
jmp
mov
xor
add
jmp
ret
xlat
data16
inc
mov
pop
jno
js
jle
js
xor
sub
jp
pop
cmp
popf
stos
xor
push
cmc
movsb
dec
out
push
shlb
mov
lock
gs
mov
mov
push
out
imul
dec
cwtl
push
inc
adc
cmp
cwtl
pusha
mov
pop
insl
call
in
push
filds
sub
jg
sub
imul
cmp
mov
mov
or
inc
mov
test
push
xor
cltd
int
mov
paddw
push
dec
mov
pop
scas
pop
shll
lods
arpl
cmp
and
repnz
daa
enter
addl
lret
mov
add
mov
push
lret
out
adc
push
in
outsb
pushf
mov
xlat
push
dec
mov
fbstp
pop
incb
adc
sbb
jg
sbb
jae
inc
push
out
sbb
or
pop
addl
mov
or
mov
pop
cmp
arpl
inc
mov
out
jg
jg
daa
push
or
jl
lcall
data16
shll
mul
xchg
cmp
movsb
mov
or
data16
pushf
jne
sarb
orl
setno
or
xchg
outsl
clc
jb
mov
add
ljmp
hlt
mov
seta
cmc
jnp
dec
es
inc
jbe
scas
sbb
xchg
pop
cmc
por
jo
add
fs
cli
mov
mov
aam
mov
je
and
adc
in
jb
sbb
lret
rep
mov
shll
cld
aam
lret
push
popl
daa
daa
cmpsb
pop
xorl
xchg
mov
jg
jo
lcall
add
pop
in
and
lcall
or
inc
and
lds
iret
cmpsb
hlt
mov
dec
enter
sarb
lret
cmc
sar
repnz
aaa
jmp
loopne
jg
cmp
xor
rclb
mov
xor
lret
insb
dec
xchg
cwtl
and
add
mov
jb
out
push
mov
jge
mov
jmp
int
xlat
enter
shll
std
xchg
ja
js
jle
js
adc
leave
pop
lds
jp
cmp
jns
mov
cmc
jb
adc
sbb
push
js
cmp
out
dec
out
movsl
clc
js
fcoms
jb
clc
cltd
imul
dec
inc
push
inc
xor
cltd
jl
pop
xchg
adc
xlat
popf
pop
int
and
cmp
stc
scas
sbb
xchg
es
jns
lods
inc
push
adc
inc
repz
dec
ds
adc
lret
fwait
sub
xchg
mov
sub
es
das
movsb
and
xchg
or
mov
sbb
sub
sub
xchg
mov
in
enter
subl
cmp
inc
imul
sti
xor
push
fisttps
and
mov
adc
repnz
data16
imul
lods
jo
mov
fsubp
xchg
push
push
mov
sbb
mov
push
dec
stos
fadds
cmp
or
xlat
cltd
icebp
cltd
sbbl
mov
lods
and
jno
imul
sub
and
repnz
mov
repz
mov
icebp
inc
adc
pusha
in
clc
aam
mov
jecxz
add
xchg
push
push
daa
movsl
push
faddl
data16
mov
jns
xchg
cmpsl
push
std
xor
xchg
sarb
adc
mov
lret
scas
adc
ret
inc
xchg
into
mov
decb
jnp
out
outsl
lock
bound
mov
cmc
jg
mov
push
ficompl
insb
push
adc
push
adc
in
or
aaa
mov
inc
pop
sub
inc
add
sub
insb
mov
xchg
jl
adc
sub
movsb
imul
inc
xor
jmp
idivl
daa
mov
mov
push
lcall
enter
inc
inc
push
nop
pop
cltd
dec
sahf
jmp
or
lea
sti
xor
call
repz
jbe
cld
sbb
or
sahf
inc
push
push
enter
aas
and
inc
movsl
test
aaa
xor
adc
cli
jno
in
sbb
rcrl
inc
ficoml
mov
xor
add
hlt
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
movsb
jecxz
imul
js
inc
test
add
jbe
inc
xchg
inc
xchg
dec
adc
cmp
push
inc
ret
enter
dec
imul
jecxz
and
pop
xor
sub
std
pcmpgtd
mov
xchg
mov
icebp
or
xchg
pusha
sub
push
jmp
mov
lods
movsl
repz
les
mov
jnp
into
imul
xchg
fisubl
mov
mov
iret
adc
cmp
jmp
sbb
sahf
shr
cmpsl
add
mov
mov
pop
pop
insb
mov
push
rorb
cmpb
ja
sub
jge
xor
and
leave
mov
or
test
fnstsw
xchg
mov
pop
enter
into
xchg
push
je
lods
mov
push
mov
push
dec
aad
pushf
movsb
xor
idivb
cmp
add
out
add
aaa
pop
jnp
bound
stc
mov
jb
pop
xchg
or
and
mov
lret
lcall
mov
dec
or
pop
push
pop
pop
xlat
hlt
add
and
scas
iret
and
push
mov
inc
mov
and
mov
jnp
mov
adc
int3
movsl
fnsave
sub
cli
mov
xor
sub
sub
clc
stos
gs
fsubrl
stc
or
mov
aaa
or
adc
scas
mov
in
cmp
cs
xchg
and
popf
repnz
add
addl
sub
scas
sahf
inc
jmp
out
or
cmp
dec
mulb
mov
test
shr
push
adc
cmp
notl
test
push
lock
mov
add
add
test
repnz
cmpsb
pushf
jg
pop
outsb
jge
jge
xor
repz
std
mov
xchg
pop
inc
cmp
mov
rclb
clc
xchg
push
addl
sbb
pusha
and
xchg
sbb
or
aas
push
xor
pop
pop
loop
dec
cmp
mov
mov
push
mov
mov
test
cmpsb
lea
pushf
xchg
stos
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
xchg
cltd
lock
jp
js
jle
js
je
std
andb
sti
ficompl
pop
xchg
loop
scas
xor
lahf
push
fbld
push
mov
xor
or
pusha
inc
push
pop
pop
sbb
and
adc
cmp
bound
xchg
cmc
mov
into
out
insb
lds
test
push
and
repnz
insb
inc
leave
ret
stos
loope
push
mov
pop
dec
push
mov
xor
out
lcall
jle
xor
fwait
pop
push
sbb
add
ret
jl
xor
lret
test
dec
adc
or
push
dec
imul
icebp
push
js
fwait
daa
fs
ds
jo
scas
lret
sarl
into
addr16
xchg
popa
cs
xchg
adc
shll
pop
and
push
mov
neg
mov
fs
mov
mov
in
push
dec
sbb
std
cmp
jno
std
push
mov
push
and
test
cmp
mov
fldt
fs
leave
leave
mov
popa
inc
fnstcw
mov
mov
gs
dec
popf
jge
pop
movsb
jb,pt
je
jmp
mov
enter
jp
bnd
sbb
add
stos
out
enter
out
inc
xchg
adc
aam
xorb
cmp
jno
adc
call
or
dec
mov
lret
or
test
sbb
adc
adc
cmp
sbb
push
inc
xchg
jae
arpl
mov
stc
add
dec
push
outsl
push
jl
aad
cmpsb
movsb
mov
in
add
pop
sub
fadds
cli
pop
and
inc
cmp
sub
dec
lret
xor
lods
inc
jne
movsb
icebp
dec
sub
add
rol
movsb
push
ja
jnp
or
jae
xor
adc
mov
mov
push
fisubrl
shll
add
lock
insl
bound
lcall
out
repz
lock
stos
xchg
lock
jl
dec
xchg
sub
mov
sbb
out
push
sbb
jge
mov
mov
jmp
enter
cld
imul
in
js
js
jle
js
lods
push
loope
popf
leave
sbb
jecxz
dec
imul
or
sbbb
add
pushf
jnp
push
scas
test
pop
negb
in
ja
inc
outsl
jne
mov
inc
popf
cmp
aaa
outsb
mov
daa
inc
adc
add
out
out
xchg
push
leave
push
xorb
imul
scas
je
arpl
lret
sbb
cwtl
loopne
push
push
rcrb
mov
out
loope
pop
xor
xchg
rorl
insb
rcrl
lret
and
add
add
ljmp
popa
rcr
jno
sub
mov
insl
cmp
pop
adc
mov
or
inc
ret
aad
adc
lea
push
push
jo
sbb
fmull
jbe
inc
jae
adc
adc
sarl
push
aaa
out
stos
iret
sbb
mov
adc
jle
mov
mov
and
add
mov
fsubs
ret
mov
cmp
inc
sahf
cmp
hlt
out
fwait
cmc
adc
es
add
inc
mov
or
outsb
push
movsl
ja
inc
mov
xor
sub
xchg
test
sbb
xor
lret
sub
dec
in
cmp
in
pop
push
xor
clc
xchg
enter
test
pop
pop
lock
cltd
inc
push
or
push
mov
aas
push
loopne
scas
lds
xor
movsb
mov
jbe
jne
sub
mov
pushl
cli
dec
add
xor
add
pusha
movsb
imul
in
je,pn
push
test
in
cmpsb
jns
dec
inc
pop
imul
or
sbb
rol
add
pop
lret
mov
imul
jnp
inc
sti
insb
xor
test
in
lahf
stc
jmp
mov
loop
cmpsb
sbb
movsl
pop
out
xor
dec
sub
cmp
leave
cmp
and
xchg
xor
mov
outsl
sbb
call
fcmovne
insl
and
add
and
sbb
mov
and
stos
js
fwait
xchg
push
outsb
js
dec
aad
ja
les
jl
lock
cmpb
push
mov
shlb
clc
add
add
jmp
ror
ror
leave
leave
mov
imul
in
js
aad
gs
test
mov
push
push
stc
adc
mov
in
inc
loope
aas
sub
aam
sbb
sub
lret
cltd
ds
push
dec
or
jecxz
jmp
push
adc
mov
xchg
mov
pop
mov
daa
xor
pop
pop
cs
mov
lcall
adc
push
and
pop
in
jmp
aas
xor
adc
and
push
fdivrl
pop
jb
mov
sbb
inc
mov
imul
out
inc
sub
sub
enter
add
dec
push
and
imul
loop
sti
sub
insb
jge
test
dec
ja
shrb
pusha
pop
pop
mov
pop
mov
cwtl
stos
lds
cmp
ret
pop
rol
mov
cmp
sub
daa
lret
stc
cmp
xchg
push
fcoms
mov
xor
dec
cmp
in
adc
cmp
mov
orb
or
mov
cld
clc
cmpl
movsl
jb
mov
xchg
pop
cmp
fs
mov
adc
jmp
mov
mov
out
dec
daa
repnz
les
shrl
in
mov
lcall
add
lods
mov
daa
pop
and
xor
mov
std
cmc
test
cs
stos
add
fimull
jg
cmp
loope
hlt
imul
ss
xchg
mov
cli
inc
js
lods
test
mov
cmp
push
push
mov
mov
cmp
push
xchg
shlb
push
sub
sub
pop
mov
xchg
and
lea
ret
shr
out
or
insb
sbb
test
je
nop
jns
mov
mov
or
sbb
fdivl
jne
fcoml
and
cmp
mov
pop
icebp
push
pop
loopne
cmp
lret
mov
lea
dec
sub
insl
pop
test
outsb
push
mov
pop
daa
xchg
imull
cmp
scas
and
add
add
lods
out
orl
scas
je
xchg
pop
jae
jg
leave
ret
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
int3
out
cmp
add
in
js
ljmp
xor
cli
js
dec
lret
push
shl
bswap
sub
sub
sbb
or
pushf
mov
repnz
lcall
outsl
pop
jo
adc
cmpsb
push
ljmp
or
inc
lret
inc
jecxz
data16
cmpsb
cmc
xchg
sbb
xchg
in
mov
add
mov
bound
mov
add
xchg
jno
xchg
fistl
sahf
fdivrs
ja
pop
inc
sub
outsb
sarl
xchg
ret
aad
stc
insb
sub
cld
in
xchg
lret
mov
xlat
leave
sahf
cmp
pusha
add
pop
sub
fadd
imul
xor
sbb
icebp
scas
and
sbb
xor
xlat
fdivr
pushf
sub
push
cmc
test
lods
adc
push
popa
xor
xor
fimuls
lea
adc
icebp
xor
jecxz
in
dec
mov
enter
xor
pop
pop
and
dec
pop
adc
or
movhps
les
push
xor
pop
mov
js
repz
mov
lds
ficomps
rcr
je
out
push
es
push
ret
ds
push
daa
xor
pop
ret
jecxz
pop
jb
dec
aad
xor
loop
cmpsl
int
cmp
pusha
xchg
and
jo
inc
xor
jecxz
jmp
cli
pusha
mov
es
xlat
mov
testl
loope
lods
loop
aaa
mov
cmp
and
and
mov
pop
add
ret
pop
sub
or
in
xchg
jb
push
loopne
pop
nop
inc
dec
push
mov
test
lods
mov
mov
jb
xor
jmp
imul
mov
or
pop
out
cmp
jne
iret
push
outsb
lahf
shlb
mov
lock
hlt
dec
adc
mov
push
and
rcll
fstp
cmpsl
or
xchg
push
and
lock
xlat
dec
jnp
push
push
sub
lcall
cmpb
inc
push
repnz
cwtl
dec
lret
adc
add
xchg
dec
dec
cmpsl
jl
lds
mov
mov
sub
nop
inc
pop
inc
sub
mov
xlat
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
sub
fs
add
jg
in
js
adc
leave
mov
sub
lea
inc
scas
jne
and
ret
int
mov
test
sbb
nop
ffree
daa
imul
cmp
push
imul
or
mov
mov
inc
pushf
das
mov
adc
mov
and
daa
mov
test
arpl
andl
adc
sbb
cmpsl
push
or
jo
in
jecxz
or
shlb
sub
aad
or
fcompl
lret
insl
pusha
iret
xchg
or
std
loop
sbb
jg
shr
jl
lret
rcl
mov
int
sub
mov
ss
cmp
out
cmp
push
inc
mov
mov
fnstcw
sub
inc
mov
cmpsb
push
mov
xor
nop
push
andl
in
sahf
cmpsb
aad
inc
sub
lock
dec
das
xor
imul
test
loop
iret
mov
push
jns
xchg
jns
ja
nop
stos
imul
cs
loopne
int3
push
lea
sbb
mov
mov
mov
in
addb
jb
nop
clc
jge
or
inc
aaa
sub
aad
dec
iret
lea
sbb
cmp
mov
test
cmpsl
fstl
enter
fwait
int
rolb
xor
mov
icebp
mov
stc
iret
adc
add
ret
orb
and
mov
insl
test
push
add
int3
cli
cmpl
shl
sarb
mov
jecxz
sar
in
mov
cmp
fsubp
jmp
dec
imul
por
push
repnz
add
pop
aas
rol
bound
fdivs
adcl
imul
mov
setb
in
pop
fstpl
jae
xchg
rorb
mov
xor
ret
lods
or
lods
push
and
imul
in
loop
mov
mov
mov
movb
int
add
jl
in
icebp
stc
and
or
mov
pop
enter
dec
cmp
jl
sub
out
add
daa
and
scas
sti
mov
jmp
rol
leave
rcr
rcr
enter
ret
into
sbb
out
push
jg
in
js
test
xor
jge
cmp
mov
sbbb
std
test
pop
inc
mov
jno
sarl
aad
je
inc
std
push
cmp
insl
out
sub
add
int3
sub
cld
jne
adc
mov
pop
xor
mov
or
jo
pop
ss
scas
inc
add
push
add
sbb
fucomp
adc
mov
sub
inc
push
pop
mov
mov
cmp
inc
push
dec
icebp
adc
mov
or
das
inc
adc
leave
xor
cmc
sub
aad
out
xor
push
in
in
push
adc
push
push
inc
add
arpl
sbb
xchg
out
fildll
sbb
push
pop
mov
lahf
or
les
in
sbb
mov
xorb
push
sbb
or
or
lds
popf
pop
mov
add
lahf
cli
pop
pop
ret
hlt
ja
in
cmp
scas
cmp
mov
nop
and
repz
sbb
aaa
jge
outsl
sub
sbb
cmp
movsl
sub
stc
and
or
sub
movsl
add
hlt
loop
add
lock
shlb
out
daa
cmp
jbe
ret
icebp
cs
lock
pop
dec
rolb
adc
mov
cmp
pusha
leave
loope
adc
mov
insb
jb
jg
stc
imul
xorl
int
fld1
sbb
jge
xchg
jo
inc
push
in
enter
mov
and
mov
sarl
fsub
inc
dec
mov
loope
jle
mov
mov
cli
rorl
out
and
sub
pop
into
inc
add
or
jecxz
loop
cmpsb
adc
sub
imul
mov
mov
aad
or
dec
fcoms
es
fdivp
lock
repnz
mov
in
add
mov
jp
mov
add
push
xorb
ret
mov
jmp
mov
push
stos
lret
call
lods
and
ja
fsubr
addl
add
aas
int
aam
mov
nop
loope
push
add
js
jle
js
xlat
cmpsl
divl
scas
sbb
dec
out
pop
repz
call
test
mov
cld
adc
xor
inc
push
or
lods
icebp
mov
divb
rorl
or
jecxz
jbe
iret
fidivs
scas
jg
add
lock
insl
cltd
cld
jecxz
pop
cmpsb
push
pop
xchg
jno
xlat
jecxz
stc
in
jl
xchg
pusha
xchg
inc
pop
xlat
add
fs
iret
jb
test
mov
cmc
sub
pusha
add
rolb
int
lcall
rcl
add
or
mov
inc
cmp
or
or
data16
adc
imul
or
cli
mov
mov
jmp
cmp
popa
leave
mov
sar
insb
inc
adc
sub
xchg
lahf
fldl
push
xchg
mov
and
popa
dec
mov
sub
iret
test
adc
fidivrs
scas
lcall
loopne
call
movsl
xchg
jbe
mov
or
xor
mov
jne
in
xor
insl
fnstenv
push
addr16
xchg
lcall
xor
or
sbb
pop
cs
aad
lret
sub
fiadds
xor
cs
jae
std
mov
hlt
pop
pop
mov
and
sbb
clc
and
push
sub
test
cmpsb
mov
call
imul
mov
jle
mov
lcall
outsl
adc
int3
popa
sub
inc
scas
mov
or
fcomps
jle
pop
add
jo
mov
out
pop
popl
sbb
and
insl
pop
pop
fwait
es
push
inc
movb
xor
das
in
mov
xor
adc
sbb
dec
shll
imul
and
outsl
lcall
jbe
aas
aam
dec
jo
xchg
pop
jmp
xchg
sbb
mov
cmp
imul
outsb
pop
adc
icebp
adc
add
mov
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
fadd
or
in
js
adc
push
fs
sbb
adc
das
push
jo
and
and
dec
pop
loop
int
inc
pop
mov
jo
lahf
in
and
faddp
ffreep
leave
aaa
jmp
mulb
mov
loop
repz
and
shll
dec
fimull
pop
sbb
cmp
jno
enter
mov
aad
jl
je
testb
or
mov
insb
add
out
jp
shrb
push
outsl
sbb
cmp
jbe
pop
jno
inc
out
orl
aaa
leave
mov
xchg
loop
sbb
lock
subb
popf
mov
jmp
lock
ret
orb
insl
push
sbb
lods
arpl
aad
or
arpl
or
push
je
imul
mov
pushf
cmpsb
push
inc
negl
ja
lahf
hlt
cmp
mov
leave
das
push
add
inc
dec
inc
push
mov
shrl
add
dec
xchg
dec
iret
loopne
xor
xor
sbb
int3
sti
push
movsl
sub
inc
enter
cltd
mov
fwait
xchg
push
xchg
xor
cmp
nop
adc
adc
mov
cmpsl
jmp
xchg
xchg
sub
inc
add
xor
subb
lahf
adc
ret
sbb
jge
movsl
xchg
sub
in
mov
mov
clc
andl
fsubrs
ja
mov
mov
push
jmp
sbb
mov
mov
mov
cli
sbb
out
sbb
inc
cmp
test
jbe
sbb
fcoml
shll
adc
xchg
dec
mov
sbb
daa
les
jge
add
in
stos
cwtl
push
sahf
xor
pop
jno
and
insl
icebp
sti
mov
or
push
xorl
jo
adc
mov
xchg
repnz
mov
xchg
mov
cmp
add
push
arpl
mov
das
inc
lds
inc
arpl
repz
cli
lret
lds
sub
leave
ss
mov
push
jns
pusha
pop
stos
stc
xor
fwait
jnp
inc
flds
into
mov
and
lods
push
mov
dec
imul
mov
jmp
lret
ret
vpand
ret
addb
movq
jle
js
pop
xchg
push
popf
xor
cmp
push
hlt
mov
mov
fsub
sbb
xor
loop
dec
test
inc
int3
dec
test
psadbw
lcall
lods
pop
fcmovnbe
into
inc
ljmp
ds
out
jmp
fadd
test
sub
cmp
jae
jg
in
pop
pusha
jno
jp
movsb
mov
jg
fdivrs
cmp
xchg
mov
iret
or
sbb
lock
jp,pn
stos
xchg
sub
mov
ret
rol
jno
jp
and
or
or
xchg
gs
sub
push
mov
stc
cmp
lods
xchg
cmp
add
inc
and
out
and
dec
add
jae
sub
dec
xor
pop
hlt
fidivrs
roll
roll
lret
push
dec
add
cmp
inc
scas
cli
xor
shlb
and
out
out
or
xchg
stos
clc
je
inc
scas
pop
jl
popa
daa
mov
pop
xchg
cli
xor
es
xchg
mov
hlt
cmp
insl
lods
dec
js
mov
stc
xchg
cmp
xchg
dec
fdivl
dec
pop
ret
cmp
add
pop
inc
jl
xchg
push
movsl
mov
cmp
orps
pop
in
inc
mov
pop
repz
nop
inc
adc
lods
xor
popw
jmp
mov
int3
out
das
outsl
xchg
mov
inc
mov
adc
pop
gs
shlb
lods
cmp
ss
cmp
cmc
cltd
push
and
inc
push
je
push
call
test
shll
rorb
mov
jg,pt
test
jo,pt
mov
loope
dec
cmp
aam
negl
push
decl
in
mov
fstl
inc
stos
test
pop
in
mov
add
or
xchg
mov
push
ds
pop
sbb
pop
aam
adc
mov
imul
pop
add
xchg
js
ret
inc
mov
inc
std
sub
and
mov
adc
xlat
lock
scas
jae
push
ret
mov
jae
mov
inc
cmpsb
dec
jne
adc
inc
pop
cmp
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
mov
jg
in
js
mov
ud0
adc
and
ret
aam
mov
outsl
pop
inc
xchg
andl
enter
push
les
xchg
inc
jne
sub
pop
push
xchg
inc
repz
movsb
jle
lcall
fcmovnb
repnz
cli
mov
loope
jmp
push
add
push
cmp
mov
enter
int
jns,pt
xchg
out
inc
pop
jg
ljmp
insb
mov
jno
pop
shll
push
sub
add
jo
push
fcmovnu
xor
popf
fs
add
cmp
movsl
mov
pop
xchg
xchg
fs
mov
xchg
outsb
mov
inc
adc
inc
dec
mov
inc
pop
add
cs
xchg
sub
scas
jmp
lret
fisubrs
mov
inc
inc
jmp
mov
outsb
jle
aad
scas
mov
bound
inc
sbb
int
mov
dec
ret
enter
insl
mov
rorl
inc
sub
xchg
pop
mov
loop
xlat
shl
stos
mov
lods
xor
cmp
mov
lret
xchg
jne
push
sub
inc
int
sbb
pop
popa
mov
daa
enter
xchg
les
mov
adc
add
dec
adc
mov
test
aaa
adc
outsl
dec
and
loope
sbb
int3
or
orl
add
xchg
dec
jo
jmpw
xor
shll
sarb
and
mov
lea
mov
nop
lock
pop
add
mov
sbb
fwait
sahf
stos
and
mov
xchg
adc
jmp
out
jo
pop
ljmp
adc
sub
mov
imul
or
outsl
pop
outsl
inc
sbbl
subb
mov
je
mov
push
lahf
and
test
std
push
aam
into
sbb
push
rcll
mov
pushf
adc
cld
jo
cltd
movsl
xor
mov
scas
imul
data16
mov
cmp
out
fstpt
loop
cli
cmp
pop
xchg
dec
ret
push
cmp
insl
in
mov
rorl
scas
sarl
xlat
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
add
cmp
jle
js
xor
mov
stos
xlat
or
mov
xchg
fnstcw
pop
push
xchg
push
pop
or
xlat
mov
dec
pop
jno
mov
jne
add
push
jno
rolb
mov
mov
popa
stc
imul
push
aas
cmp
incl
lods
sbb
jmp
negl
out
jno,pn
int3
subl
adc
mov
test
push
and
sub
outsl
rol
enter
and
mov
repnz
add
pop
roll
lret
cmp
enter
cs
cmp
dec
mov
nop
scas
dec
scas
pop
addr16
cmp
cltd
aas
xchg
or
dec
xchg
mov
mov
adc
and
fistpll
xchg
adc
jecxz
dec
add
lock
clc
sub
out
mov
cli
jge
xchg
mov
loope
stc
push
fistps
jmp
out
sub
jb
inc
popa
out
daa
mov
out
mov
and
or
imul
enter
pop
pop
sub
adc
pushf
pop
mov
sub
xchg
inc
mov
loope
sahf
pushl
in
shrl
pop
sub
popa
mov
loope
in
test
inc
lret
mov
pop
push
xchg
clc
jbe
xchg
and
lods
outsb
out
loope
mov
into
xor
pushf
pop
stos
cmpsb
jp
outsb
adc
cld
roll
push
out
insb
fmul
xchg
imulb
popa
shlb
aad
jl
jo
ficoml
dec
pop
iret
mov
repz
pop
inc
cwtl
cltd
inc
adcl
mov
adc
fidivrs
aad
xchg
subb
cltd
aas
cmp
xchg
lods
or
and
das
outsl
and
test
push
xor
andb
lea
ja
mov
or
clc
add
lea
lock
adc
insl
mov
push
xor
push
xchg
inc
or
sub
jae
inc
dec
test
repnz
fsts
xchg
fsts
mov
sub
imul
hlt
pop
mov
popa
dec
arpl
add
jmp
xchg
pushf
jns
push
jecxz
xchg
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
pushf
data16
xchg
jle
js
sti
movsl
jp
ljmp
lods
dec
dec
fiaddl
clc
dec
arpl
mov
ds
aaa
sub
imul
nop
sub
outsb
mov
arpl
push
sbb
fldl
add
inc
dec
xchg
inc
lock
test
shl
pop
pop
fsubr
add
mov
shr
mov
lea
loopne
dec
insl
jl
sbb
inc
xchg
nop
aaa
mov
add
sub
sti
enter
fisttpl
xchg
jns
stos
xor
or
bound
adc
decb
in
push
dec
cmpsb
and
in
sbb
incb
mov
stc
cmp
adc
mov
fxch
lret
cmp
pop
mov
push
mov
or
icebp
mov
sbb
push
fistpll
and
imul
cmp
fists
cs
jno
add
mov
and
mov
incb
cmpsl
mov
sub
inc
das
jb
lock
pushf
cmp
movsl
mov
sbb
jg
pop
jne
loope
stos
and
gs
jno
scas
mov
or
cli
js
and
subps
dec
fidivrl
popa
into
cltd
dec
cmp
orb
jnp
stos
push
gs
arpl
pop
ss
and
pop
dec
call
mov
push
repz
or
add
pop
sti
data16
xor
and
repnz
ret
cmp
jne
movsl
jb
icebp
nop
ds
or
cld
inc
sti
aad
xchg
nop
stc
clc
cs
pusha
enter
inc
jle
sub
inc
jnp
inc
pop
push
jbe
pop
movb
sbbb
mov
jge
inc
mov
in
data16
imul
xchg
das
cmp
lods
nop
or
out
loopne
push
sbbb
arpl
icebp
ss
and
mov
insl
sbb
add
inc
ret
inc
ret
adc
cmc
sub
xor
stos
shrl
stos
mov
sbb
mov
jo
mov
rorb
and
lods
jns
jnp
sbb
pop
ja
int3
jle
mov
mov
mov
jae
mov
lea
adc
outsb
test
fisttpl
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
jge
loopne
mov
js
mov
dec
aam
int3
in
iret
idiv
push
jo
fildll
inc
pop
sub
stc
orb
into
jmp
inc
jmp
mov
fiaddl
xor
xor
add
jo
push
pusha
inc
add
sub
or
fstps
pop
sbb
xlat
rclb
mov
data16
out
push
inc
jmp
adc
and
andl
xchg
mov
or
xlat
cmpsl
decl
fs
xor
int3
sub
pop
jmp
test
push
push
add
in
movsb
dec
out
out
cli
pop
cld
dec
cmp
or
pop
lods
mov
or
aad
inc
sub
addr16
fmul
lret
fists
adc
sub
push
cwtl
in
jl
sbb
mov
je
lods
jecxz
xor
sub
xchg
in
jnp
sub
mov
jb
jae
iret
in
mov
int3
mov
in
movb
inc
insl
mov
push
nop
dec
mov
test
xchg
cltd
shrb
sbb
loopne
inc
mov
xchg
xchg
sbb
mov
div
popa
mov
cmp
pop
pop
dec
cltd
aaa
lcall
dec
subl
mov
or
mov
fisubrs
lock
inc
mov
mov
jb
imul
sub
adc
cltd
push
pop
cmp
sbb
in
sbb
mov
jge
dec
mov
leave
scas
shrb
rcrb
int
mov
enter
lock
cmpl
loope
sbb
push
mov
mov
xchg
sub
and
insb
rolb
dec
jl
jns
loopne
xchg
test
xor
jl
es
mov
mov
or
and
sti
sub
add
addr16
lea
iret
cmp
gs
icebp
fwait
std
ss
sbb
stos
es
into
pop
pusha
or
call
sti
lods
ret
cltd
push
adcl
jno
in
pop
mov
lret
ret
popf
stos
daa
test
lret
popa
sbb
or
sti
sarb
inc
and
nop
xchg
call
or
out
cmp
cmp
mov
std
jge
repz
bound
jle
ret
lea
mov
stc
sbb
outsb
pushf
jae
cld
mov
sbb
dec
arpl
out
outsb
fnstsw
cmc
jmp
outsl
mov
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
add
fxtract
daa
sbb
xchg
jle
js
jle
or
push
cs
gs
push
insb
in
mov
cmpb
push
add
mov
je
das
push
lock
loope
cld
lds
out
mov
sub
xorl
leave
fsubrl
pop
sahf
jg
sbb
mov
xlat
xchg
or
movsb
out
insl
jne
sub
data16
stos
jo
inc
movl
push
push
ljmp
xchg
mov
call
das
fiaddl
mov
imull
cmp
xor
arpl
xor
addr16
mov
mov
cli
jp
and
cmp
clc
popa
fidivs
test
pop
icebp
push
mov
xor
rcrl
xor
bound
pop
jb
mov
pop
ret
cmp
ret
pop
je
pop
pushf
inc
pop
addr16
pop
add
aam
loop
sbb
push
add
sbb
mov
out
sbb
aad
xor
popf
mov
inc
xorb
jp
je
repz
xchg
cmc
xor
int
mov
pop
jae
dec
fisubs
xor
fdivrp
icebp
add
mov
outsl
pop
movsb
out
inc
cwtl
movsb
loop
sarl
ficoml
mov
ret
ds
mov
leave
sbb
pusha
push
push
daa
test
dec
enter
vmovlps
push
ds
mov
ret
sub
icebp
lock
outsb
mov
scas
mov
jbe
das
pushf
pushf
das
mov
push
lods
loopne
idivb
or
jmp
js
push
test
mov
xor
jl
and
loop
pushf
push
mov
dec
nop
mov
stc
ss
mov
xchg
push
adc
or
test
jg
push
or
fimuls
and
xchg
int
mov
fistpll
xchg
cmp
add
jmp
push
xchg
out
dec
arpl
lcall
test
mov
imul
repnz
lcall
or
push
out
call
xlat
and
iret
cmp
aas
das
xor
mov
cs
xor
add
and
pop
jnp
ss
xchg
jmp
mov
pop
int
movsb
sbb
cmp
imul
in
sbb
inc
repz
rclb
mov
push
jmp
inc
cld
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
add
sbb
xchg
jle
js
pop
sbb
or
shrb
push
ja
pop
inc
leave
inc
mov
jg
jp
jmp
hlt
or
jp
in
push
fwait
pop
mov
xor
jp
cmc
or
aad
scas
mov
pusha
imul
mov
xchg
or
mov
pop
std
sbb
xchg
add
loope
ffree
sub
cs
push
arpl
mov
adc
xor
xchg
ret
bound
fmuls
xchg
cmpsb
push
jl
or
ss
je
add
fnstenv
cld
xor
mov
jp
pusha
lds
pop
fwait
push
xchg
je
aas
pop
push
fsts
dec
sbb
lds
pusha
adc
cli
dec
xchg
or
mov
xchg
xchg
jp
sti
pop
lock
xchg
shlb
lock
pop
imul
mov
or
pop
inc
push
or
aam
or
xor
fistpl
sbb
cmp
mov
fwait
loopne
fistps
sbb
add
loope
lods
adc
adc
and
cmpsb
sub
xorb
sub
cmpsb
jo
out
loopne
push
lock
test
sbb
add
pop
pusha
repz
js
cltd
push
roll
adc
sbb
andb
pop
mov
cmp
add
sti
pop
jno
or
adc
pushf
push
sbb
fwait
dec
fiadds
stos
mov
pop
mov
mov
jns
dec
test
adc
sub
repz
fistl
adc
adc
push
xchg
mov
xchg
popf
adc
cmp
out
sbb
sub
and
sbb
fnsave
mov
cmp
enter
xchg
add
push
roll
or
cmp
xchg
xor
into
lahf
xchg
aas
cld
mov
add
adc
sbb
mov
adc
jb
addr16
cmp
std
xor
rorb
test
add
xor
in
pop
rcll
dec
inc
xor
jo
sbb
subps
pop
pop
pop
dec
fdivrs
cli
test
sti
popa
jo
xlat
or
mov
subl
or
xor
test
mov
jne
jl
jp
lods
lds
mov
mov
les
jle
fsub
add
xor
add
mov
mov
jmp
ret
int3
int3
aad
leave
roll
mov
jg
xchg
jle
js
push
or
ja
lods
das
in
inc
jl
sub
sub
movsl
and
cmc
jecxz
add
scas
cmovnp
jmp
mov
cmp
icebp
jns
aad
xor
mov
ret
icebp
push
inc
xchg
mov
sub
and
loop
orps
inc
sbb
cmp
xlat
inc
sub
cmpb
xor
loope
movsb
xchg
stc
lahf
jb
mov
xchg
push
orl
popa
pop
jl
fildll
xor
bound
jecxz
fcmovu
xchg
ljmp
push
out
fisttpl
ret
cmp
in
pop
mov
xor
xchg
inc
aad
xchg
jmp
jge
mov
mov
xlat
and
push
fbstp
cmp
mov
add
pop
jge
cwtl
ret
mov
jb
es
addl
iret
mov
jnp
addr16
xchg
jl
outsl
push
inc
mov
addl
add
stos
sub
dec
push
push
sub
inc
cmp
in
aam
inc
sbb
xlat
push
flds
inc
inc
pop
ljmp
or
xchg
jge
push
pop
dec
aam
out
shll
fisubrs
loope
push
xchg
mov
or
push
stos
ficomps
xchg
mov
sbbb
je
leave
je
std
dec
std
mov
sub
std
jns
jo
mov
dec
xor
pop
mov
jmp
mov
scas
cwtl
shlb
push
inc
int3
ljmp
hlt
loop
mov
mov
lret
fs
test
xchg
imul
xchg
out
in
jle
mov
add
push
or
pop
lods
test
xor
cltd
fistps
sub
aam
sub
push
repnz
adc
pop
sahf
dec
sti
das
adc
mov
clc
sbb
std
xor
xchg
popf
sub
test
sub
int
movsb
sbb
sti
lea
cmpsl
in
sbb
xchg
sbb
sbb
icebp
adc
call
mov
lahf
aad
sbb
pop
mov
movsb
js
xchg
mov
xor
inc
add
add
rorb
and
and
dec
push
repnz
xorb
negl
pop
aad
movsb
adc
out
cli
lods
and
jp
in
jg
lahf
or
sahf
push
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
mov
jg
xchg
jle
js
ljmp
pop
lods
call
xor
insl
cmp
jns
jp
adc
loopne
fbld
inc
pop
notb
xor
push
pushf
test
outsb
add
jge
adc
xchg
cltd
enter
outsb
std
shll
push
mov
loop
or
jecxz
test
add
add
and
cmpsl
push
inc
pushf
pop
loope
fnstenv
push
jle
sbb
cmpsl
push
adc
mov
inc
mull
dec
pop
add
sub
aad
cmp
fimuls
add
mov
imul
cmp
ror
add
leave
popa
sub
fiaddl
bound
mov
mov
fmull
js
adc
pop
push
or
cmpsl
or
inc
xchg
adc
out
sbb
fs
in
adc
int
mov
adc
or
div
inc
pusha
or
dec
and
je
add
mov
inc
loopne
push
outsl
push
or
inc
push
xor
lcall
or
test
or
pop
push
loope
dec
fidivl
mov
fsubrl
insl
adc
mov
loop
into
insl
jmp
push
jb
pop
add
and
jmp
mov
lds
shll
mov
and
mov
mov
loopne
test
test
push
push
sub
cmp
call
mov
sbbl
cwtl
adc
dec
mov
xor
and
mov
sbb
iret
dec
add
jp
cwtl
cmpsl
pop
sbb
mov
bound
test
jno
push
cmpsb
add
push
out
hlt
cli
push
ss
mull
add
test
xchg
dec
add
cmpsl
aad
mov
xor
mov
pop
std
jae
push
mov
test
mov
ja
in
sbb
push
sbb
mov
adc
jo
movsb
lds
lcall
fcoml
lcall
mull
enter
fs
inc
mov
and
mov
pop
jb
ret
sbb
pop
jb
xchg
push
incl
mov
push
mov
push
xchg
mov
or
call
sbb
and
xchg
pushf
mov
pushf
shrl
lcall
sub
or
xchg
out
cmovno
sbb
mov
cltd
push
lret
in
ds
pop
lods
inc
inc
mov
out
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
in
mov
js
jle
js
fcomip
arpl
sarl
in
jmp
fnstsw
push
lea
mov
add
xor
psubq
cld
outsl
jle
outsb
jbe
ret
fwait
pusha
testb
xchg
mov
push
notl
fidivrl
mov
dec
into
dec
xor
scas
lret
stc
in
outsl
xor
mov
leave
push
ds
xchg
and
mov
je
xor
shl
mov
dec
outsl
test
cmp
fadd
xchg
test
jns
push
and
inc
dec
arpl
jp
je
cmp
pop
pusha
ret
aaa
jns
sub
iret
lods
push
insl
xlat
pop
popf
pop
mov
testl
xchg
enter
call
pop
mov
int3
and
imul
sti
imul
adc
mov
out
sbb
xor
into
gs
xorb
je
pushf
mov
mov
pop
pusha
sbb
inc
lods
mov
xor
jmp
adc
adc
dec
cli
jg
sbb
ficoms
xchg
xchg
les
int
cmp
inc
push
nop
mov
inc
jnp
cmp
dec
and
mov
cltd
jns
dec
call
fld
cmp
pop
js
xchg
mov
imul
pop
pop
sbb
sti
sbb
sbbl
dec
lret
jae
xchg
test
pop
hlt
xor
rol
icebp
cmp
ljmp
mov
int
mov
mov
mov
xchg
push
sbb
mov
loop
xchg
pop
sbb
jae
mov
int3
out
jl
mov
cmc
inc
movsl
cmp
or
xlat
push
push
stos
push
mov
adc
cmp
jle
cmp
sbb
jno
push
add
inc
or
or
mov
les
mov
xchg
scas
and
enter
sub
enter
or
insb
rclb
loope
cmp
lods
ret
or
rcr
xor
jne
pop
idiv
mov
nop
add
ds
xchg
pushf
pop
orb
cmp
xor
cld
sbb
lret
sar
jbe
iret
ss
adc
jg
and
adc
ja
lret
pusha
sbb
test
int3
mov
mov
mov
xchg
rcl
stos
nop
adc
and
inc
stc
in
mov
jecxz
aaa
call
jnp
jns
adc
dec
adc
movl
test
inc
cld
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
inc
jns
out
jnp
mov
testb
sub
xchg
adc
cwtl
andb
jl
outsb
lcall
mov
loopne
addl
cmp
pop
mov
inc
addl
lock
sub
and
push
jae
repnz
sbbb
xchg
add
xchg
arpl
sbb
mov
dec
icebp
jne
xchg
mov
incb
sbb
push
mov
outsb
sub
in
xor
lea
pop
mov
and
pop
stc
std
loopne
aaa
inc
insl
sahf
fcom
jg
incb
push
sub
rolb
nop
adc
jp
xor
push
pushl
ja
dec
addr16
mov
lahf
pushl
dec
jns
push
dec
pop
lret
imul
sub
lock
int3
mov
adc
imul
inc
das
xor
pop
add
or
outsl
jl
or
adc
cmpsb
push
filds
add
adc
sub
add
icebp
outsl
aas
lret
cmp
xchg
fs
leave
cmp
rcrl
mov
pop
jle
cwtl
cmpsl
mov
add
aam
xchg
adc
dec
aad
je
in
xchg
dec
push
je
jle
add
jecxz
add
xor
mull
jl
pop
mov
popf
dec
arpl
lock
outsb
mov
in
jne
mov
dec
fstl
fxtract
cpuid
clc
idivl
movl
mov
xor
xchg
cli
leave
mov
xlat
mov
lock
addl
mov
mov
sbb
neg
push
decl
xchg
cli
loop
mov
cmpsb
and
lret
push
addr16
push
push
cmpsl
shlb
xchg
cmp
jno
push
dec
fwait
stos
add
sub
xchg
cmpsl
into
mov
push
lock
shrl
adc
adc
rclb
sbb
jae
add
xchg
add
movsl
lahf
dec
aas
cmp
insl
jmp
or
lcall
xchg
imull
fnsave
enter
cmc
push
ss
inc
dec
flds
cmp
aaa
pop
dec
loop
insl
insl
mov
pop
xor
cmp
adc
loop
jne
and
rcrl
lds
lret
dec
dec
popa
mov
add
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
add
jg
xchg
jle
js
sysexit
mov
cmp
in
iret
lahf
xchg
or
dec
loopne
xor
or
dec
lds
xchg
in
cmc
iret
cmp
fwait
call
insl
mov
aad
and
fwait
or
add
mov
push
and
cli
pop
or
add
mov
jl
pop
mov
mov
adc
inc
cmp
in
pop
mov
or
popa
push
dec
jp
jns
mov
pop
xchg
shl
cld
mov
push
loop
aam
inc
sbb
lods
add
xchg
cld
divb
pop
rolb
lods
sub
sub
mov
and
xchg
fisubrl
jl
roll
xchg
xchg
int
js
ja
lret
cltd
call
pushf
mov
add
sbb
or
test
or
cmc
adc
or
pop
int
cmp
dec
inc
and
popf
mov
rcr
push
xor
lods
adc
addb
push
imul
addl
mov
into
pop
scas
fs
lods
dec
xor
das
lea
in
mov
int3
test
or
rcl
nop
in
pop
push
jl
fs
sbb
mov
out
fsubs
jp
sub
out
push
push
pop
xchg
mov
rclb
call
jb
repz
xchg
out
dec
xor
not
push
sbb
and
notb
xlat
fbld
mov
icebp
pop
mov
dec
dec
mov
cmc
sbb
ret
es
and
inc
jno
jle
xchg
sbb
cmpsb
leave
adc
je
push
and
xor
cmp
lret
ret
cwtl
or
lods
mov
outsb
push
and
push
les
inc
or
xor
push
mov
mov
jecxz
ficompl
into
jnp
stos
sbb
mov
cmpsl
mov
sbb
or
push
mov
cmp
into
xchg
mov
cmpsl
pop
dec
jno
outsl
sbb
out
and
jl
push
in
dec
pop
pop
sub
not
cwtl
dec
add
mov
pushf
scas
sub
sti
mov
push
fistpll
mov
gs
outsb
js
lea
push
out
inc
dec
dec
data16
fisubrs
cmc
imul
sar
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rclb
mov
mov
xchg
jle
js
cs
inc
jmp
dec
fldt
sub
test
sub
arpl
push
dec
int3
repz
pop
lds
into
adcl
xchg
inc
add
push
sbb
inc
incl
mov
push
bound
jae
mov
cmpsl
dec
je
sbb
mov
cmp
les
fcoms
aaa
mov
fldt
inc
add
das
leave
mov
add
inc
or
cltd
es
lret
iret
repnz
popa
ss
pop
mov
adc
jbe
outsl
rcl
pushf
aaa
adc
movsl
incl
enter
xchg
fs
scas
std
imull
cmp
mov
lea
js
fs
xor
roll
mov
mov
jae
lea
ret
out
sbb
gs
cmc
push
loope
fistl
mov
mov
clc
clc
pop
stos
cmp
in
mov
loopne
iret
int3
lea
int
call
lret
lods
cld
jl
pusha
ss
stc
test
movsl
cmp
xchg
ret
inc
loop
jle
cli
mov
dec
adc
xchg
mov
sbb
iret
xchg
aam
test
fidivl
mov
ret
insb
jle
cld
inc
inc
sub
stc
lahf
ds
push
repnz
cmp
lcall
push
iret
jg
mov
mov
pop
jg
loopne
cld
sub
jg
cmp
jae
sti
test
das
xchg
pusha
cld
dec
push
das
sarl
add
cld
push
or
mov
add
push
iret
xor
jns
xchg
sub
jbe
cmp
jle
cmpsl
or
mov
insb
cwtl
dec
mov
push
rolb
pop
dec
sub
ret
lahf
jnp
out
mov
or
ljmp
xchg
in
inc
sbb
jne
push
test
xchg
mov
mov
test
jle
fwait
stos
std
mov
mov
xor
sbb
ret
out
cmp
mov
jno
jne
pop
dec
in
mov
push
das
dec
sarb
ljmp
mov
imul
push
mov
push
sbb
rep
in
sub
push
popa
stos
or
fisttpl
lds
imul
cltd
mov
mov
scas
xchg
loope
inc
cs
xchg
adc
mov
lock
enter
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
sbb
jg
add
adc
mov
test
mov
ljmp
mov
mov
jmp
jmp
mov
mov
imul
leave
xchg
negl
inc
mov
lods
sahf
test
add
jnp
jno
scas
add
mov
pop
roll
xchg
push
out
sti
hlt
jecxz
xor
jo
adc
cmp
jnp
stos
scas
mov
sbbb
mov
push
pop
into
scas
mov
xor
mov
gs
jecxz
aas
xor
movl
xlat
pop
pop
inc
dec
push
pop
adc
fildll
xchg
nop
lods
cli
add
xchg
sub
js
jo
inc
push
sub
outsb
jb
pop
add
lds
lock
dec
cltd
pcmpeqw
push
pop
cld
add
mov
icebp
mov
jge
pop
push
xor
add
in
inc
fidivrl
adc
xchg
jp
lea
loop
scas
add
int3
cmp
jno
movups
and
or
pusha
icebp
xchg
pop
cmp
push
mov
mov
cmovne
push
sub
or
test
icebp
shl
sub
mov
fwait
in
test
fbstp
jg
iret
adc
dec
push
sbb
push
enter
or
sub
int3
repz
cmp
and
test
jp
loop
aas
mov
xchg
sbb
pop
out
mov
dec
cltd
mov
mov
jecxz
cmp
cmp
jg
shll
hlt
mov
pushf
movsl
adc
and
sub
lcall
in
mov
cmp
add
sbb
mov
pushf
or
xchg
pop
sbb
adc
repz
sti
sbb
das
pushl
xchg
cwtl
lahf
out
fimull
inc
mov
inc
jne
in
fisubrl
adc
mov
push
fcmove
jns
outsl
sbb
add
jmp
cmp
aad
aad
popa
adc
add
addr16
add
popa
shrl
shr
dec
call
and
mov
add
andb
mov
lods
clc
or
repz
mov
in
pop
inc
pusha
sub
je
jg
shl
int3
repz
mov
xchg
dec
sbb
shll
adc
ret
jg
mov
je
sbb
dec
faddp
push
sbb
andb
xor
loop
jnp
je
adc
mov
incb
xor
push
or
sbb
lcall
gs
push
jb
icebp
xor
jl
xor
lahf
mov
mull
dec
sbb
mov
xchg
ljmp
and
rclb
rcl
adc
stos
and
test
mov
sbb
imul
fsubrs
jnp
shrl
jbe
adc
je
arpl
mov
repnz
sbb
sahf
and
fwait
inc
xor
xchg
push
sti
icebp
cmpsb
lcall
xor
mov
mov
add
sbb
xlat
test
sub
and
outsl
fnstenv
mov
push
inc
pop
sbb
jno
push
aad
mov
inc
xor
sbb
xchg
lret
out
dec
sti
js
shlb
mov
and
das
addr16
mov
push
xor
lea
sbb
fmull
pop
cmp
test
int3
popa
cwtl
inc
sti
mov
fldl
pusha
arpl
mov
push
mov
jl
cmc
fucomi
cmp
rcl
dec
mov
sub
aas
lret
fcomps
ljmp
mov
inc
jl
add
imul
sub
cld
jp
es
adc
push
iret
test
add
shlb
call
mov
jecxz
movsl
je
insb
add
push
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
adc
jg
add
or
test
mov
push
jne
and
add
inc
inc
push
adc
mov
xor
inc
mov
mov
and
push
daa
push
fmull
pop
stc
push
jnp
or
icebp
add
aam
xchg
addb
inc
push
sub
lods
out
jl
dec
cli
or
jo
ds
ret
into
mov
iret
shr
test
and
ja
push
or
inc
pop
xor
mov
mov
outsb
jno
or
out
xor
lods
je
std
or
bound
jecxz
lcall
push
lret
or
pop
daa
fcmovne
fdivrs
out
pop
jbe
pop
andl
push
ret
loop
cmp
inc
int
xchg
lock
fldenv
xorb
in
leave
xlat
push
mov
mov
sahf
test
sub
mov
mov
js
sbbb
push
xlat
sahf
mov
in
loope
mov
xchg
adcb
xor
div
and
xor
pop
sub
push
js
mov
dec
push
in
mov
scas
xchg
clc
push
push
and
cli
and
pop
and
sti
rol
adc
sub
int
cmpl
pop
decl
insb
fmuls
or
push
dec
xchg
dec
mov
fiaddl
push
jbe
pop
pop
mov
stos
scas
adc
jo
in
lods
ds
ret
mov
aas
int3
pushf
loop
int
mov
mov
pop
test
out
lock
xor
sbb
mov
test
enter
jecxz
jge
dec
sti
dec
lods
jbe
mov
scas
mov
out
jge
xchg
fstpt
lods
push
cmpsl
in
mov
pop
sub
push
mov
pop
and
insb
mov
pushf
sub
inc
dec
cmc
sub
int
push
xor
addb
xor
hlt
std
jb
push
or
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
decl
hlt
fcompl
aaa
jg
jnp
js
mov
int
fcmovne
or
and
loop
repz
xchg
jmp
sub
mov
adc
outsb
cld
mov
das
xor
lret
sub
gs
leave
fcoml
sbb
sbb
push
adcb
mov
dec
cmp
inc
lcall
popf
cmp
add
pusha
add
inc
mov
jecxz
inc
outsl
les
shr
push
movsb
dec
adc
mov
cltd
ds
sbb
xor
jecxz
cmp
sti
scas
jmp
addl
pop
les
and
xchg
xchg
lret
sbb
das
out
loop
cmpsl
aas
xchg
push
sarb
inc
fnstenv
addb
inc
shll
mov
ds
test
arpl
pmuludq
push
mov
jne
mov
mov
arpl
sub
xor
and
ss
xor
push
pop
scas
jo
jecxz
push
loop
dec
mov
sub
das
or
hlt
mov
dec
aam
test
mov
pop
push
push
fisubrl
ss
loopne
mov
pop
adc
in
shrl
push
stos
cmp
clc
std
add
pop
pop
sbb
mov
mulb
aad
xchg
push
add
cmpsb
iret
popa
pop
push
ret
push
dec
sub
inc
adc
in
jl
and
div
and
es
outsl
adc
mov
pop
mov
mov
insl
xchg
fidivs
xor
in
lret
add
xorb
pop
push
dec
push
mov
lods
mov
jle
xchg
xchg
mov
fwait
repz
mov
and
xchg
test
clc
loopne
mull
sar
mov
pop
push
ljmp
dec
push
mov
mov
push
adc
insb
pop
out
add
pop
push
mov
push
repz
sub
scas
fs
push
jae
cmp
adc
stos
sbb
in
xchg
lods
adc
fsubl
mov
push
subb
lea
cli
lea
loop
push
scas
sub
jo
xchg
pop
sub
push
iret
sbb
addr16
and
cli
jge
outsl
jp
mov
fstpl
or
dec
sarl
out
and
mov
pop
into
jge
add
mov
xor
jle
mov
and
pop
fisttpl
jge
data16
orb
and
pop
test
dec
inc
add
es
test
mov
gs
jno
adc
sahf
dec
cmc
adc
dec
rclb
pop
call
std
push
sbb
inc
inc
int
adc
mov
add
xlat
xor
xchg
lret
fstl
cwtl
aas
add
and
jne
jne
inc
or
dec
ja
outsl
scas
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
jno
xchg
xor
js
jle
js
mov
hlt
pop
sahf
clc
sbb
loope
test
or
sub
sbb
push
sub
mov
push
stos
lcall
bound
jmp
xchg
out
cli
or
or
jae
adcl
mov
jp
in
sti
sub
gs
push
fnstsw
rcrb
jp
pop
pop
mov
imul
test
inc
addr16
das
xchg
ds
fwait
xchg
mov
xchg
aam
insb
and
cmpl
ret
shlb
inc
test
xor
dec
cmp
enter
leave
dec
addb
pop
lcall
sbb
mov
add
xchg
cwtl
insl
shll
outsb
dec
dec
cmp
imul
jo
lods
jecxz
adc
push
call
insb
int3
in
or
setle
fdivrl
bnd
insb
and
sarb
mov
lret
adcb
push
es
sbb
enter
or
jne
ret
ret
adc
add
in
cmp
jo
stos
and
test
xchg
rol
sbb
or
cmp
in
movsb
pop
lods
dec
shll
jae
jle
vpminsw
mov
insl
dec
test
xor
dec
push
jbe
pop
xor
ja
fisttpl
dec
nop
lret
cmp
outsl
dec
pop
or
inc
jge
int3
scas
push
loope
sub
das
hlt
popf
inc
data16
lock
out
mov
adc
test
sbb
cld
cs
pop
stc
cwtl
mov
cmp
mov
and
gs
lea
jmp
int
ret
jb
stos
frstor
ljmp
rorb
lcall
inc
icebp
rcll
pusha
test
inc
sarb
test
lea
leave
push
adc
xchg
loope
dec
sbb
jb
gs
fs
iret
int
xchg
xor
or
adc
sub
pop
dec
mov
mov
pop
jnp
int3
mov
cltd
push
cmp
insl
mov
and
popa
dec
push
int3
leave
fnsave
lret
out
into
adc
xorl
lcall
mov
cli
pop
or
imulb
sub
jno,pn
pop
mov
add
push
or
xchg
lods
or
inc
sub
addr16
lods
out
adc
lock
cmp
jmp
adcl
and
and
cmp
jno
dec
push
aas
pushf
mov
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
mov
jg
jnp
js
and
das
sarl
adc
and
push
xor
pushl
repz
or
movsb
out
mov
jae
mov
add
mov
repz
ja
jl
or
imul
mov
lock
xchg
mov
sub
imul
sub
popa
out
pop
jb
pop
mov
dec
in
add
pop
rcrl
into
or
jne
mov
sbb
and
loopne
aad
lea
xchg
lcall
rolb
pop
enter
push
mov
xchg
int
mov
sub
jge
fsincos
in
pop
hlt
cmp
mov
sbb
lea
or
mov
pmulhw
imul
iret
ljmp
mov
pop
repnz
inc
repnz
popa
mov
stos
mov
push
mov
adc
gs
dec
test
std
mov
out
scas
ljmp
test
outsb
mov
mov
mov
leave
arpl
cmpsl
jp
cmovl
movsl
scas
xchg
pop
out
pusha
push
testl
dec
mov
lahf
popf
or
outsb
aas
lret
clc
addb
cmpsb
leave
sarb
add
mov
outsl
cmp
xor
sbb
jnp
shr
int3
loope
push
adc
stos
lods
sbb
jecxz
inc
xlat
mov
push
or
lock
xchg
and
xchg
push
movsl
std
sub
icebp
pop
push
mov
push
cmpsb
mov
movsb
cmp
mov
sti
dec
mov
popa
xor
sbb
dec
push
and
xchg
mov
fldt
push
xor
call
sub
mov
push
mov
mov
fldcw
arpl
jmp
mov
arpl
scas
sub
cmp
add
fcmove
inc
enter
outsl
popa
fnstsw
out
inc
andl
les
and
mov
xchg
ss
lods
inc
es
lcall
aad
push
sub
lar
inc
mov
jns
pop
aaa
add
adcb
shr
aam
dec
int
leave
hlt
jne
outsl
push
dec
mov
dec
or
sahf
hlt
pop
insb
outsb
lret
lcall
sub
subl
dec
and
aaa
push
and
mov
es
rorb
cmp
xorb
or
and
push
push
loop
inc
add
push
cli
out
cwtl
and
add
sub
icebp
lea
xchg
push
pop
arpl
addr16
test
mov
mov
mov
mov
push
and
mov
jmp
int
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
mov
pop
jg,pt
jnp
js
cli
xchg
sbb
xchg
mov
clc
in
das
in
sub
mov
mov
jbe
lds
and
xchg
cmp
mov
or
dec
mov
jge
fisubrl
cmp
or
mov
cmpsl
inc
sbb
add
fdivrp
push
push
mov
push
testl
inc
jmp
loop
dec
jmp
in
out
mov
ror
pop
leave
dec
mov
pop
jle
stos
inc
into
and
jecxz
movsb
ret
adc
pop
jl
jo
rcrb
pusha
in
fimull
enter
imul
inc
inc
fcmovu
mov
sub
ds
movsb
sti
add
mov
push
test
mov
xor
out
sar
fildl
sbb
inc
or
leave
jg
ret
push
add
cmpsl
dec
clc
mov
cmp
aad
mov
cs
push
shlb
jns
mov
sub
cmpsl
xorb
clc
dec
pop
add
in
push
dec
hlt
daa
test
call
pusha
mov
lock
push
mov
sbb
pushf
xor
mov
rcrb
rclb
adc
and
mov
jnp
jbe
jp
push
fdivl
popa
jbe
popa
lock
inc
adc
nop
stc
mov
mov
push
popa
xor
mov
adc
jp
das
leave
jl
dec
jb
cmp
jbe
loopne
ds
sub
mov
dec
xor
xchg
inc
lret
mov
push
dec
dec
loope
and
xchg
iret
adc
leave
cld
cs
sbb
inc
push
push
popa
pushf
clc
dec
add
mov
ss
cmp
sbb
add
xchg
dec
jno
iret
cli
jno
pop
leave
lds
jg
fstp
shll
insb
pop
cmp
dec
xchg
xor
repnz
xor
xchg
in
movsbl
dec
dec
push
and
sbb
xor
inc
jmp
aas
inc
cmp
pop
jle
and
cmpsl
xchg
test
pushf
popf
dec
sbb
out
xchg
loop
push
test
lds
push
stc
je
lea
dec
sub
lods
add
pop
sub
jecxz
mov
inc
pop
adc
fisubrs
and
loopne
inc
xchg
or
cmpsl
sti
stos
pop
add
cmpsb
cmp
dec
call
xlat
mov
out
push
pop
lahf
jne
push
aad
repz
pushl
lds
cmp
movsb
mov
or
add
xchg
push
xlat
mov
icebp
and
das
lock
adc
lahf
mov
stc
xor
out
lods
out
pushf
stos
or
pop
into
mov
cli
inc
xor
cmc
popa
aad
cmp
or
add
xor
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
pushf
lcall
jnp
js
push
dec
aad
gs
adcl
mov
testb
jecxz
pop
test
das
jge
dec
rcrl
sbbl
cmp
adc
push
mov
popa
ss
jb
mov
xorl
push
dec
arpl
shrl
ret
lods
gs
sbb
into
into
adc
and
rcrl
pop
jl
fwait
nop
mov
movsb
cmc
mov
mov
insb
call
mov
xchg
add
bound
sub
push
cli
loopne
mov
rclb
push
jne
xor
add
mov
mov
dec
bound
clc
xlat
sub
aas
dec
psubsw
xchg
addr16
pop
xchg
push
scas
loop
rcrb
rcr
pop
adc
add
imul
cmpsl
out
push
fimuls
mov
loopne
jle
cmpl
sahf
pushf
dec
adc
jg,pt
sub
or
push
adc
cli
inc
cmp
mov
stos
dec
rorl
mov
cs
adc
iret
xchg
and
push
mov
orl
cwtl
addr16
mov
jbe
es
jg
dec
sub
xchg
cmp
ljmp
repz
xor
mov
addr16
data16
cmp
and
cmp
dec
jae
cli
sub
pop
xchg
mov
mov
cmp
pushf
sub
mov
add
mov
inc
and
jecxz
xor
loope
add
inc
pop
mov
jns
ljmp
mov
push
popf
repz
dec
cld
cli
sub
xchg
leave
jle
sti
in
js
pop
sub
fwait
je
sbb
das
mov
ljmp
adc
shlb
dec
or
push
mov
loop
dec
lcall
jnp
adc
cld
scas
xchg
sub
mov
sahf
loop
clc
cmp
fdivr
out
mov
movsl
jbe
xlat
pusha
inc
mov
outsb
loope
in
dec
inc
fisubrl
jae
ds
repnz
dec
adc
or
test
shll
stos
jg
adc
inc
and
fldcw
jl
adc
jno
inc
dec
je
pop
dec
dec
xchg
mov
pop
lds
xor
mov
dec
dec
cmpsl
call
ds
xchg
and
std
mov
or
jnp
add
jae
dec
cmpsl
daa
ret
pop
nop
xor
loop
dec
aad
add
data16
or
loopne
xor
dec
mov
mov
dec
mov
loop
je
or
fnstsw
rcll
fimull
js
insb
loopne
popf
dec
shlb
shlb
inc
adc
adc
rol
leave
shll
insl
xchg
mov
jnp
js
lcall
dec
xchg
inc
ds
mov
cwtl
push
ljmp
js
jl
xchg
mov
repz
pusha
add
push
inc
fsubl
in
cwtl
jne
mov
hlt
and
dec
stc
or
push
das
mov
stc
in
and
movsl
add
jae
or
lcall
jecxz
or
nop
cld
xchg
sub
repnz
mov
push
stc
push
push
pop
in
mov
pop
fildll
mov
cmpsl
mov
pop
push
daa
sub
vunpcklpd
push
sbb
jo
fwait
notb
dec
jno
testl
jmp
dec
scas
jbe
mov
push
sub
insb
les
into
jl
mov
xlat
fs
pusha
or
mov
and
adc
in
jns
xor
mov
dec
or
addr16
sbb
mov
push
daa
lods
add
negb
jb
mov
arpl
xor
sbb
inc
sbb
xchg
lods
mov
mov
icebp
aam
cmp
jle
sub
jb
ret
xor
and
and
stos
dec
ret
repnz
xlat
xchg
mov
mov
imul
xor
or
sarl
pusha
into
and
mov
pop
xchg
push
jle
sbb
sbb
aaa
push
arpl
sahf
dec
es
arpl
mov
and
insb
outsb
js
je
dec
pop
je
mov
jbe
ret
sbb
jmp
mov
je
pop
outsl
jne
inc
movsl
xchg
shr
xor
mov
xchg
push
cmc
test
xchg
and
pop
xor
sqrtps
shl
sub
movsl
lds
push
xor
das
jp
pop
sbb
xor
push
cmc
lock
mov
push
lds
dec
jp
push
shr
adc
cmpsl
js
adc
andl
mov
scas
push
and
push
mov
push
das
nop
inc
jbe
movsb
xor
mov
and
nop
fs
test
xor
mov
arpl
movnti
clc
mov
adc
inc
pop
add
push
pusha
rolb
movb
js
jns
sarl
sbb
out
sbb
enter
jle
push
flds
xchg
xchg
movsl
xchg
fimull
inc
jp
pop
jns
and
jo
sub
and
inc
and
into
mov
and
addr16
xor
xchg
ljmp
mov
jae
fldcw
stos
cmc
push
push
adc
adc
mov
add
add
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
lds
adc
js
outsl
rcrl
push
xchg
mov
mov
pop
xchg
mov
mov
popa
cmp
aaa
int
popa
popf
push
mov
in
cmp
sbb
mov
jg
mov
dec
aad
divb
add
and
xchg
aas
jne
repz
sub
dec
out
or
jns
push
data16
loopne
sub
iret
inc
pop
cmp
xchg
pop
jbe
lds
adc
mov
ljmp
adc
add
ja
sbb
xchg
or
fstl
scas
arpl
imul
iret
cltd
lahf
sarb
mov
mov
nop
xor
ret
xor
repnz
dec
arpl
gs
dec
pop
sbb
jg
pushf
imul
lahf
dec
and
mov
push
cmp
xchg
jecxz
add
adc
test
mov
aad
out
or
jle
popa
sub
sub
das
pop
dec
mul
cmc
mov
mov
scas
inc
shll
lds
aas
sbb
loop
iret
inc
jmp
push
pop
mov
das
mov
ret
in
insl
pop
mov
mov
inc
mov
or
out
xchg
shrb
pop
sarb
scas
and
fwait
push
popf
bound
fisubl
jle
out
shlb
or
push
mov
inc
cld
push
mov
scas
jne
push
fdivl
cwtl
fidivrs
dec
leave
mov
movsl
and
ret
jne
push
inc
in
mov
ret
xor
adc
adc
int
jp
cmp
fwait
sub
pop
aas
les
push
push
push
mov
mov
add
icebp
push
sbbb
je
aad
pop
stos
lea
data16
cmp
jne
scas
lahf
add
xor
stos
mov
cld
cmp
std
scas
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
add
jg
adc
js
lock
sbbb
nop
xchg
mov
xchg
jmp
push
scas
cli
xor
loope
jecxz
inc
inc
in
dec
int
aam
push
enter
shl
dec
or
fisubl
hlt
cmp
or
push
insb
fwait
cmpsb
into
mov
fcoml
bound
xor
cmp
loopne
bound
cmp
aad
and
sub
mov
or
or
add
pop
in
xchg
and
daa
loop
push
scas
orl
scas
loop
imul
push
dec
push
call
lods
jbe
xor
mov
pop
in
fiadds
dec
adc
mov
inc
outsl
lds
and
xlat
sbb
lock
andb
in
push
xorl
ss
xchg
in
mov
sbb
jg
call
pop
das
cs
in
pop
stos
inc
outsb
and
sub
push
sub
lock
adc
cmp
icebp
pushf
pop
scas
cld
inc
jmp
lret
mov
sub
push
stos
cmp
stos
loopne
xor
pop
add
xchg
fnstsw
jp
dec
or
and
add
repz
xor
cmp
cli
popa
mov
jmp
push
mov
add
push
test
enter
add
addb
stos
insl
js
fwait
push
dec
and
fildll
cs
push
push
out
das
test
mov
inc
add
loopne
cwtl
dec
mov
sti
mov
or
repz
in
int3
cmp
ret
mov
adc
daa
rcrl
mov
xlat
imul
mov
inc
jge
mov
cmp
lods
mov
inc
push
arpl
jb
sub
mov
pushf
pop
mov
cld
icebp
add
and
hlt
add
cmp
imull
jae
enter
clc
cmp
cs
je
int
inc
dec
stc
xor
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
and
js
jle
js
mov
ss
push
call
and
adc
dec
inc
daa
mov
and
adc
push
sub
add
popf
in
dec
dec
aas
leave
adc
movsl
push
loope
lock
sbb
cltd
dec
mov
shrb
xchg
sar
cld
cld
push
pop
adc
sbb
mov
cwtl
adc
xor
test
stos
xor
jmp
imul
out
out
sahf
jno
mov
add
adc
and
rcrl
fnsave
pop
sub
cmp
cltd
push
mov
jmp
xchg
jge
push
loope
jg
and
int3
in
xchg
xor
sbb
jno
lds
jne
sub
lods
int3
aad
sbb
bound
pop
test
jg
pop
xchg
divl
jb
call
push
cli
fs
test
loop
add
fs
ja
insl
fnsave
push
fldl
cmpsb
fcomps
aam
mov
push
cmp
push
aad
jnp
rcrl
aad
and
xor
or
inc
dec
or
push
es
sub
sarl
or
call
cltd
push
fstpl
movsb
dec
adc
stos
sub
inc
mov
cltd
dec
mov
js
push
jg
push
pushf
push
mov
lods
loopne
pushf
push
push
xor
or
jge
sbb
push
aaa
je
loope
rcrb
repnz
xchg
jno
xor
out
push
and
lcall
cmp
sbb
inc
xor
mov
and
fbld
fwait
imul
in
and
jg
xchg
mov
mov
mov
xchg
dec
iret
repz
fimuls
cmp
insb
mov
jno
fsubrl
push
jg
in
daa
sahf
add
sbb
lret
dec
and
fs
jbe,pn
push
sub
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
rcrl
ror
jg
adc
js
in
popf
push
test
filds
xchg
dec
cltd
jmp
call
xchg
aad
adc
arpl
sbb
jno
or
bound
xchg
sbb
enter
out
sbb
dec
nop
dec
sub
xor
and
cltd
mov
movsb
jae
and
inc
and
pushf
push
pop
inc
aaa
enter
cmp
dec
fldenv
sbb
in
inc
jecxz
inc
mov
and
fwait
and
popa
js
cltd
aaa
ret
shlb
sbb
mov
and
add
fdiv
mov
mov
or
or
push
dec
subl
lcall
mov
insl
addr16
fs
imul
lds
mov
mov
adc
lds
jle
ljmp
rclb
xchg
outsb
lods
push
cwtl
xchg
sbb
cmp
sbb
lcall
fsubr
mov
lea
fwait
jle
add
mov
popa
rcrl
bound
xorb
movsb
test
xchg
aaa
or
sbb
insb
movsb
stc
mov
add
imul
loope
sub
dec
mov
test
dec
dec
rcrl
cmp
jo
sbb
mov
enter
sti
leave
push
in
data16
repz
add
test
mov
lods
adc
fsubs
add
xchg
shlb
xor
xor
and
mov
arpl
adc
inc
das
mov
add
aam
adc
jecxz
leave
mov
cmp
out
mov
xor
and
sbb
popa
pushf
sub
mov
fisttpl
pop
cmp
sub
icebp
mov
cmc
mov
and
insl
jbe
pop
inc
sub
adc
mov
add
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
pop
add
call
jle
js
mov
movsb
insb
in
cltd
or
test
xchg
bound
mov
stos
pop
pop
mov
icebp
scas
pop
adc
or
adc
xchg
adc
test
cmc
jecxz
mov
adc
fs
cmc
addl
icebp
fdivs
stc
and
dec
and
insl
add
push
xor
adc
xchg
testl
mov
cmpsb
bnd
cmp
dec
adc
lods
icebp
pop
pushl
out
pusha
in
xor
xlat
mov
add
fisttpll
sbb
clc
or
fldcw
push
out
cli
sub
push
jne
sbb
lock
in
inc
mov
jecxz
insb
xor
call
jb
sub
xchg
ficomps
ret
jo
jb
dec
mov
addr16
cmp
inc
lods
inc
sub
dec
lahf
call
pop
mov
lods
nop
adc
jmp
inc
cmc
movsl
mov
add
adc
sub
ja
mov
lods
add
push
insb
sarl
sarl
sub
pushf
xor
pop
out
dec
mov
sar
inc
imul
xchg
dec
cmp
xor
xor
mov
adc
sbb
mov
or
test
cmpsl
or
lret
mov
bnd
mov
pop
mov
pop
les
xor
movl
push
inc
addr16
push
cli
lret
mov
pop
gs
xlat
sarb
scas
mov
xchg
mov
cld
pop
pop
mov
cmpb
sub
mov
push
mov
repz
les
and
mov
out
test
ret
ljmp
jne
mov
rclb
mov
cmp
aas
stc
popf
wrmsr
rcl
jo
sahf
scas
push
and
push
shll
cmpsb
push
xchg
adc
cmp
push
mov
jne
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
xor
mov
sarl
adc
js
mov
jne
call
sbb
in
add
add
jge
pop
sbbb
add
stc
xchg
jecxz
fists
xchg
adc
pop
nop
loopne
xor
in
inc
iret
icebp
loope
test
sub
in
mov
push
or
add
adc
push
nop
xchg
pusha
test
mov
and
pop
dec
jp,pt
fsubrs
rcr
push
mov
xor
lea
rorb
mov
inc
jmp
aad
mov
aad
iret
stos
mov
cmpsb
cmpsl
shlb
xchg
or
cmpsl
fnsave
lret
mov
inc
dec
fwait
mov
jns
sub
div
leave
cmp
jge
into
shll
jmp
out
cmp
int3
shlb
mov
out
jle
ja
repnz
hlt
imul
inc
mov
sbbl
in
jle
xlat
dec
inc
repnz
or
movsb
movsl
jno
dec
pusha
xor
dec
inc
mov
out
test
inc
cmp
out
adc
or
inc
aam
push
inc
lcall
cmp
or
sarb
cltd
lcall
out
xor
scas
add
mov
hlt
je
cmp
lret
push
sahf
cmp
packssdw
lcall
icebp
push
mov
mov
and
aas
sub
sti
jae
negb
sub
ret
adc
xlat
and
lea
lock
out
dec
jge
lock
and
jbe
pop
sub
fcmovb
mov
and
cmp
aaa
nop
or
call
adc
sbb
les
xor
push
outsl
stos
adc
adc
shll
jmp
cmpsb
adc
and
out
lock
lret
dec
cmp
sbb
lods
popa
scas
lret
inc
and
xchg
lods
popf
out
mov
mov
inc
test
mov
cmp
mov
cld
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
es
js
jle
js
and
mov
insb
dec
lods
jne
pop
jo
dec
repnz
test
xchg
xor
xor
xchg
data16
pop
push
fimull
iret
add
int
adc
cmc
cmp
mov
shr
pop
jecxz
dec
pop
int
push
ja
push
dec
fistpl
mov
rorb
movsb
adc
jp
and
xchg
jecxz
jg
loopne
xlat
ret
xchg
jo
fcom
movsb
inc
cmp
in
jle
rclb
ret
out
mov
arpl
sbb
cs
pop
hlt
mov
jns
pop
fldcw
sub
xor
faddp
mov
pop
out
xchg
or
daa
mov
jo
mov
adc
mov
addr16
dec
pop
jl
fisubl
xchg
xor
popf
out
pushf
push
aad
aam
xchg
adc
adc
inc
pop
sbb
in
dec
pushf
iret
mov
fdivrl
ljmp
or
out
sub
mov
outsl
in
mov
in
sahf
leave
cmp
ret
jmp
insb
or
and
flds
inc
jecxz
and
fcomps
sub
rcr
mov
fnstcw
mov
and
cmp
sub
std
jno
pop
and
cwtl
mov
repnz
add
imull
jns
cwtl
lea
jnp
mov
and
pop
sub
cmp
dec
daa
inc
xchg
jae
sbb
inc
mov
or
xor
mov
in
sub
mov
rep
bound
xor
add
sub
test
jge
cmp
mov
jg,pn
ja
mov
bound
xchg
icebp
or
xlat
cltd
sub
mov
inc
xlat
enter
inc
inc
pop
or
in
hlt
fcmovnu
xlat
jge
or
and
or
mov
jne
mov
adc
ja
cwtl
add
fs
adc
push
xor
out
pop
and
jmp
add
sbb
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
xchg
push
dec
std
mov
jg
adc
js
cs
lods
in
lock
mov
repz
test
rcrb
es
sub
and
int
xchg
lods
inc
pushl
and
fiadds
notl
dec
mov
aad
push
mov
xor
mov
jb
sub
fistpll
dec
aad
and
pop
lret
xchg
sbb
inc
xor
jg,pt
daa
or
and
xorl
pop
or
fucomip
add
sti
stos
sub
sub
push
xchg
ss
lock
into
jns
dec
xchg
push
imul
std
int3
xor
xchg
test
pop
xor
gs
jl
push
test
mov
mov
sub
mov
cmpsl
and
push
in
insb
xor
and
loope
add
lret
sbb
fsubrp
in
and
je
fmull
stc
sbb
jmp
das
sar
cmpsb
sub
add
inc
nop
out
lea
or
notl
cmpl
imul
push
jge
aas
out
ret
sarl
aad
inc
cmp
inc
pop
loope
hlt
inc
movsl
addl
jns
mov
call
ret
loopne
and
in
sub
xor
cmpb
jno
jge
sbb
sbb
in
dec
in
int
int3
ret
andl
or
dec
adc
xchg
cmp
clc
pop
xchg
adc
rol
outsb
mov
and
xor
sahf
test
push
mov
xchg
mov
cli
cmpb
jle
xor
add
xchg
jb
repnz
dec
xchg
push
or
iret
fnstcw
bound
aas
in
xchg
shrl
mov
dec
jp
cmp
pop
sbb
inc
repz
xlat
lcall
aad
cmp
sbb
add
sbb
es
xor
imul
ret
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
xor
popa
jge
aad
js
jle
js
mov
loopne
cmp
jg
adc
int
jge
mov
fdivrs
jbe
xor
adc
push
push
popl
je
jbe
jne
mov
add
loope
mov
ljmp
adc
push
scas
loope
pop
stc
sbb
les
cmpsl
or
movsl
jno
add
rorl
idivb
xchg
addr16
inc
aad
call
xchg
add
punpckhbw
sbb
mov
inc
mov
movsb
in
sub
add
lods
imul
mov
sub
lea
cmp
push
sub
addr16
inc
pop
sbb
gs
dec
pop
dec
mov
insl
in
pusha
and
sub
pusha
cmpsb
inc
es
lret
or
adc
and
inc
sub
mov
aas
inc
add
jl
xchg
push
or
cs
arpl
stos
cs
in
xlat
jle
and
jecxz
outsb
mov
test
sbb
add
add
ret
inc
xchg
lods
sbb
sub
mov
test
outsl
out
mov
in
idivl
fidivl
dec
or
push
adc
loop
xor
inc
sub
cwtl
into
and
fwait
daa
daa
test
into
sbb
mov
sub
jmp
jno
pop
sbb
xchg
test
jns
inc
jb
inc
es
lock
fisubl
mov
cmpsl
inc
rcl
sub
popa
push
rolb
cmp
dec
xor
ds
dec
std
push
aam
shl
xor
adc
sub
inc
inc
cmp
push
xchg
mov
stos
das
inc
adc
mov
cmp
cld
cmp
pop
insb
rclb
push
insb
pop
iret
mov
jns
iret
adc
adc
push
or
fsubrl
sbb
push
mov
cltd
xchg
jl
xchg
mov
xchg
js
andl
fmuls
mov
cwtl
or
push
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
dec
pusha
fstpt
adc
js
mov
movsl
push
xor
xor
cmp
xlat
enter
imul
cmp
in
rcl
leave
icebp
sub
jecxz
in
pop
dec
jae
mov
sub
jg
outsl
shrb
inc
xor
sahf
xchg
push
pop
repnz
jl
mov
cltd
pop
jbe
shlb
sbb
adc
popa
mov
sbb
cwtl
mov
pop
loop
push
mov
fnsave
jmp
push
mov
jecxz
xchg
and
and
lret
movsb
daa
xor
popf
icebp
cmp
cmp
mov
mov
lret
out
xchg
ja
cltd
pop
scas
mov
cli
xor
aad
loope
jbe
fwait
mov
loopne
mov
xchg
dec
sbb
cli
inc
rcrl
popf
popa
jb
mov
sbb
jp
lret
sbb
dec
pop
add
jmp
fdivrl
orb
out
pop
aaa
ret
into
aas
ja
stc
mov
xchg
insb
addr16
jle
cmp
movsl
vpor
shrl
push
adc
dec
iret
jge
pop
dec
mov
sahf
adc
movb
imul
loopne
xor
pop
lods
mov
push
aam
or
jno
sbb
aad
xor
adc
push
sbb
xchg
push
in
xchg
ljmp
sub
mov
and
sti
fs
test
in
ljmp
xchg
sbb
stos
adc
shlb
in
pop
push
dec
mov
mov
lock
pop
iret
mov
dec
mov
mov
xor
pop
lret
cmp
dec
dec
mov
xor
mov
in
mov
mov
or
rcrb
ljmp
fwait
imul
cmpsb
fcmovbe
and
cli
inc
scas
mov
jbe
inc
dec
into
add
xchg
mov
mov
sti
pop
add
and
cli
xor
add
lret
sub
jmp
ret
aas
fxch
rcr
mov
das
jmp
js
jg
adc
js
or
pushf
mov
xor
jle
jmp
stos
in
das
mov
cmpsl
push
inc
sti
popf
inc
int
insb
adc
test
int
fwait
pop
decb
insw
and
sahf
repnz
ds
mov
cs
loopne
push
in
loopne
aad
adcb
mov
mov
jno
mov
pushf
gs
mov
ljmp
test
rcll
testl
scas
jecxz
add
pop
stc
popf
bound
mov
aad
test
movsb
stos
mov
push
insl
popf
sbbb
ret
out
shr
or
mov
jb
int
repz
rcrb
push
icebp
cmp
mov
cmp
fsubs
mov
lds
xchg
xchg
loopne
push
add
cmc
add
cltd
es
out
pop
push
sahf
into
in
lock
push
repz
test
shlb
sub
pop
jecxz
aad
pop
add
imul
mov
pop
jp
xor
imul
and
enter
stc
imul
and
mov
jp,pn
popf
shl
outsb
or
xchg
imul
and
adc
add
mov
xor
mov
sbb
mov
xor
cs
or
cmp
data16
jae
pusha
mov
mov
es
lock
sbb
sub
inc
inc
je
cld
jns
shl
sub
mov
xor
sti
icebp
push
loope
stos
test
pop
nop
pop
mov
imul
nop
pushf
sahf
add
mov
and
lods
adc
mov
or
arpl
xor
dec
int3
jle
scas
adc
and
fcmovnu
in
aas
or
xor
add
int
int
fnstcw
mov
dec
adc
jg
adc
js
pop
cmpsb
test
dec
and
ss
cli
xor
jae
scas
jnp
stc
out
fwait
push
sub
icebp
xchg
mov
fmuls
cmp
push
sub
and
shlb
loope
rcrl
add
mov
jp
add
sub
dec
iret
ja
sub
aaa
dec
cwtl
filds
int
and
cs
cltd
jno
mov
negb
cmpl
std
ds
mov
nop
loope
pusha
xor
outsb
pop
pop
cmp
lods
repz
xchg
out
dec
inc
jg
add
outsl
inc
and
push
sbb
int3
fildl
pop
mov
inc
pop
mov
cmpsl
lret
sbb
dec
pop
fbld
pushf
aaa
imul
jns
cli
mov
je
fidivrl
nop
inc
movzbl
mov
ret
xchg
divl
icebp
mov
outsl
sti
in
outsl
ficompl
inc
xchg
cltd
ret
fmuls
xor
lcall
inc
rclb
jp
sbbl
mov
les
or
pop
fmuls
movb
mov
jne
inc
pop
in
shlb
jno
popa
dec
xchg
inc
jmp
sbb
enter
repnz
pushw
scas
inc
push
dec
jge
data16
icebp
xchg
loope
jecxz
cs
ljmp
shrl
scas
pusha
stc
sarl
dec
cmp
mov
xchg
and
sub
add
cld
jnp
aad
push
dec
jne
inc
aad
push
jbe
not
mov
and
fadd
sbb
dec
daa
jne
stos
inc
sub
testl
aad
scas
jle
adc
add
sbb
xchg
pop
in
inc
or
lret
js
adc
popa
pop
imul
cld
js
pop
leave
bound
adc
pusha
mov
mov
cs
sbb
ds
or
dec
push
mov
lret
dec
mov
jmp
iret
enter
fcmovnu
xlat
push
shrb
stos
sub
jg
adc
js
push
dec
or
mov
mov
or
lret
push
mov
testb
xor
pop
xor
test
aam
loope
adc
jmp
sbb
mov
inc
pop
add
cmp
inc
fbld
or
shll
jmp
or
scas
cmpsl
out
push
sub
lods
dec
push
push
dec
ret
mov
xchg
lods
xchg
into
mov
and
add
adc
sub
and
pop
sarb
hlt
negl
jo
roll
jp
jb
rcl
scas
cmp
lods
cld
fs
inc
sub
dec
test
jbe
xchg
jo
mov
and
jnp
sub
mov
pop
push
sbb
mov
sbb
pop
fmulp
pop
jae
enter
xchg
jle
scas
inc
loopne
mov
shlb
dec
je
or
cmp
call
stos
jbe
ja
sub
pop
jo
stos
jp
or
mov
lea
jne
dec
adc
aas
js
pop
cmp
lods
add
mov
xchg
or
das
mov
dec
pop
push
es
inc
sub
in
sub
add
in
jae
push
fildl
leave
cs
mov
sbb
jae
adc
add
ljmp
push
mov
or
dec
sbb
les
daa
out
sbb
dec
inc
push
mov
add
mov
push
dec
or
loope
pop
dec
jbe
ret
mov
jg
mov
pushf
push
adc
rol
out
divb
cmp
push
cmp
mov
repnz
mov
loope
inc
sbb
mov
fwait
shlb
push
xchg
sub
pop
arpl
lahf
inc
jo
mov
test
lret
lods
repnz
mov
jno
mov
roll
xor
adc
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
cs
cmp
adc
js
test
ss
divb
pop
mov
clc
cmpsl
loop
gs
pop
xor
xchg
das
jnp
mov
das
jp
into
mov
fdivrp
int
cs
cmp
add
inc
push
arpl
ss
xor
or
jge
lret
sbb
push
xlat
loop
addr16
repnz
rcll
orl
push
push
push
stos
cmp
dec
call
fwait
cwtl
addl
mov
mov
faddl
daa
jb
mov
xor
adc
shrl
enter
sub
clc
mov
mov
cli
inc
lea
jmp
push
adc
sub
imul
outsb
in
xor
loop
sbb
sbb
cmp
inc
inc
mov
push
call
lahf
into
cli
out
sub
ja
lahf
mov
out
ds
std
lods
xor
fsubr
mov
or
mov
mov
nop
in
push
xchg
pop
push
mov
sub
cmp
cmp
push
push
mov
cmpsb
xchg
negb
test
sahf
lret
andb
mov
shrb
mov
cltd
insl
and
int
add
xchg
xchg
ss
cmp
jge
cmp
outsl
repnz
or
inc
in
jge
pop
movsl
cs
out
adc
mov
mov
sub
mov
cmp
jmp
jne
pop
jnp
push
xchg
fiaddl
add
call
inc
negl
pop
and
xchg
cmp
cmp
mull
adc
jbe
or
jl
sbb
add
jl
fbld
out
xchg
push
rol
ja
rolb
dec
loope
pop
sub
int
xchg
xor
and
rclb
aaa
outsl
lahf
imulb
js
mov
in
sbb
xor
jmp
lock
fldl
inc
pop
out
pop
mov
xchg
sub
adc
roll
jmp
int
int
rcl
int
cmp
or
js
jle
js
mov
adc
pop
inc
sbb
inc
scas
aas
push
sbb
pop
scas
mov
repnz
adc
ljmp
jmp
dec
out
jo
cmp
jb
xor
mov
pusha
loop
add
mov
rcl
sbb
fsubrl
and
imul
add
sub
cmp
notb
sbb
aas
adc
jp
scas
rcll
cmp
mov
stc
lea
mov
mov
xchg
ret
mov
adc
icebp
cmp
test
pop
mov
inc
sbb
cld
add
mov
cmp
add
data16
dec
add
sbb
xchg
into
sbb
cli
push
movsb
out
pushf
dec
cmp
rcr
xchg
jne
cld
sbb
add
imul
inc
and
aaa
mov
lret
lret
jmp
mov
cmpsb
xchg
hlt
xchg
cmp
ret
maskmovq
idivl
fidivrs
pop
hlt
data16
cmp
mov
outsb
mov
xchg
cld
cltd
sbb
sub
sub
out
sbb
pop
fildl
into
inc
lods
push
cmpsb
cmp
or
sbb
xchg
add
mov
pusha
cmp
sbb
mov
fwait
or
clc
add
repnz
scas
test
mov
scas
orb
or
sub
sti
lods
in
xchg
push
fsubrp
jae
scas
pop
xor
sbb
jae
mov
pushf
jmp
mov
add
fildl
push
mov
mov
adc
out
imul
imul
xchg
push
ljmp
sub
inc
mov
jae
mov
into
mov
cs
sbb
sub
ss
jne
sub
aaa
xchg
inc
fdivl
leave
int
jno
and
leave
std
clc
xchg
aam
test
xchg
and
movsb
icebp
jl
adc
lods
in
push
sbb
adc
push
cld
jmp
lret
xlat
vpsubusw
lret
xor
mov
lock
js
jle
js
xchg
int
jo
stos
adc
mull
js
inc
ljmp
outsb
cmp
mov
jecxz
shlb
lock
jbe
push
mov
adc
jb
adc
leave
pop
xchg
mov
xor
inc
xor
pop
push
stc
mov
inc
adc
mov
add
pop
leave
lock
or
stos
mov
insl
sub
test
jno
jecxz
or
or
adc
pop
notb
push
imul
add
add
cmp
ds
xor
inc
negb
int3
xchg
dec
fdivs
sub
in
push
xchg
fsubrl
mov
xor
xor
mov
incl
jns
jp
hlt
shlb
stos
mov
jp
or
mov
dec
sub
stc
jae
out
or
mov
lds
and
pop
adc
push
cmpsl
cmp
js
sub
stos
in
aad
lods
mov
inc
fsubl
loope
push
scas
pop
cs
cmp
fsubs
sub
jne
test
and
fnsave
lods
sub
xlat
dec
fcomps
and
pop
imul
jno
int
sbb
mov
cmpsl
int
xchg
lds
lcall
mov
mov
rorb
scas
cmp
test
cld
into
mov
xchg
jge
push
mov
repnz
pop
fwait
mov
daa
and
hlt
scas
movsl
in
loopne
es
mov
aad
push
dec
cld
xor
sbb
jle
or
stos
dec
and
loop
insb
mov
sbb
dec
adc
movsl
lods
ret
xor
adc
sub
inc
add
dec
cmpsl
fcoms
mov
js
inc
sbb
adc
cmpl
fistl
adc
fists
adc
push
nop
inc
mov
shr
xor
add
enter
iret
rcl
mov
xchg
jno
mov
jg
adc
js
mov
mov
inc
jnp
inc
mov
push
imul
and
or
pop
mov
dec
out
add
pop
jnp
jbe
call
mov
adc
push
pop
fadds
xlat
pop
les
jb
mov
lahf
xchg
sub
cmc
out
std
add
pop
sub
add
add
lock
repz
pusha
testl
mov
dec
xchg
push
ret
fnstsw
jecxz
sub
jo
jns
jo
jge
repnz
nop
jb
ret
pop
ret
fidivs
movsl
lret
push
jae
and
jg
or
inc
dec
test
lea
cmp
mov
pop
xor
jbe
mov
lahf
ffreep
dec
in
int
movsl
push
bound
jnp
aaa
rcrb
cmpsb
les
or
or
sbb
mov
sbb
testl
mov
inc
jno
mov
mov
clc
into
pop
stos
add
outsb
das
arpl
mov
mov
sub
test
in
je
xor
adc
je
xor
ljmp
loope
add
xchg
ret
out
lds
pop
fldenv
inc
jne
sub
xor
mov
incb
mov
test
mov
and
daa
ja
cld
jne
or
and
and
in
nop
iret
sub
cwtl
in
lods
fwait
stos
inc
xor
mov
push
mov
mov
and
cli
mov
jecxz
arpl
and
pop
std
pop
add
dec
pop
cmp
xor
dec
sbb
mov
jmp
mov
push
fnstenv
xor
add
mov
sub
push
repnz
adc
aas
nop
sbb
mov
ljmp
xlat
cmp
jg
mov
push
addr16
idivl
rorl
add
add
leave
leave
rcr
fldcw
stc
push
aas
test
mov
jle
js
and
mov
lret
cmp
mov
sbb
xor
push
or
shl
jo
mov
dec
and
test
nop
inc
push
pop
mov
mov
popa
inc
inc
in
jne
out
stos
ret
xchg
push
adc
sbbl
outsb
xor
repnz
and
cmp
lds
gs
add
addr16
sbb
push
in
push
xchg
inc
daa
ljmp
fcomps
or
and
cmp
std
push
cmp
loop
cwtl
arpl
iret
outsb
loop
ja
loopne
aam
insl
mov
adc
inc
add
push
cmpsl
pop
shl
xor
add
xor
lods
in
xor
inc
mov
pop
dec
sub
nop
push
xchg
out
stos
dec
sbb
mov
fs
adc
scas
call
or
xchg
mov
sub
add
xchg
jbe
mov
add
vphaddubd
mov
out
cmp
mov
addl
scas
iret
push
push
jle
fldl
cltd
xchg
jnp
lods
js
mov
add
pop
ret
fsubp
mov
mov
cmp
fs
pop
or
rclb
lock
lcall
int3
xor
es
xchg
xchg
ret
dec
js
pop
cltd
mov
fsubl
push
mov
mov
push
sub
mov
xchg
add
and
mov
ret
add
leave
repnz
stos
jno
dec
vmwrite
rorb
jmp
dec
jbe
stc
test
lock
jle
lret
add
sub
mov
pop
test
call
adc
push
xchg
daa
xchg
and
cmp
jb
xchg
add
xchg
ljmp
movsb
push
cmp
mov
cwtl
jb
add
enter
hlt
decl
add
mov
mov
jmp
mov
xlat
movsb
inc
mov
call
js
dec
out
lcall
mov
insl
bound
je
lods
xchg
and
sahf
mov
fcoml
je
bndstx
insl
fcoms
push
pop
mov
mov
xor
in
mov
dec
mov
incl
addl
mov
iret
jb
xchg
mov
or
xchg
jno
inc
fmul
or
dec
sbb
adc
test
shl
dec
gs
jns,pn
negb
stos
push
mov
xchg
cmp
popf
lea
and
lahf
add
dec
or
daa
call
sbb
cs
lret
sub
imul
sub
lcall
ja
mov
push
sbb
jae
movsb
fs
ror
les
rcrb
mov
cwtl
lcall
mov
imul
stos
sbb
xor
mov
jp
mov
fs
adc
push
and
bound
loope
sub
dec
lds
clc
pop
xchg
mov
out
fbstp
icebp
xchg
hlt
enter
push
and
cmp
add
dec
mov
jl
out
mov
sub
out
sub
cmp
out
push
xor
push
xor
xor
inc
push
aam
in
xchg
je
divl
lds
dec
jmp
shrl
loope
nop
out
out
cmp
dec
ss
sub
in
cs
sbb
adc
cli
out
xor
test
sbb
filds
ss
push
lahf
cmp
imul
adc
mov
adc
jbe
or
orl
pop
dec
xor
repz
sarb
repz
dec
rcll
mov
lods
or
cmpl
cmp
xchg
rcr
and
cmp
call
fwait
pop
js
and
scas
loope
mov
push
or
add
jmp
cmp
rol
jb
dec
pop
jle
out
push
out
jg
adc
js
sub
shlb
iret
hlt
fisttps
es
ljmp
imul
lcall
and
mov
loop
mov
mov
pop
sub
andb
test
sub
aad
in
data16
mov
dec
dec
mov
sbb
pop
outsb
fldpi
and
add
jbe
int
test
sbb
jge
cmp
inc
fsubs
cwtl
ss
mov
shrb
mov
jnp
and
lahf
sbb
mov
pop
xor
cwtl
jno
cmpl
ds
jge
sbb
arpl
push
mov
call
adc
add
fnsave
push
jae
ja
flds
ret
rcl
call
imul
test
push
out
daa
bnd
ret
jae
push
and
les
sub
cli
into
test
xchg
out
pusha
les
adc
xchg
sbbl
rcrb
mov
cmpsl
movsb
adc
push
in
sbb
xor
lods
dec
dec
mov
movsl
incl
aam
hlt
mov
and
and
lahf
pop
test
int
aam
shll
std
mov
stos
sub
outsb
out
adc
lods
push
sbb
mov
lods
movsb
cmp
and
xchg
insl
lods
mov
jmp
dec
shlb
frndint
add
ret
adc
jae
mov
mov
mov
push
out
cmpsb
adc
movntq
cs
or
dec
jle
jbe
or
add
gs
clc
pop
call
adc
mov
inc
loop
xchg
jp
lcall
jge
dec
cmp
mov
ja
adc
imul
or
lcall
les
in
jne
repnz
sbb
dec
lods
into
xor
add
and
and
cwtl
inc
lcall
hlt
jmp
rol
enter
lret
pop
jp
jp
shrl
jg
adc
js
sub
es
inc
rcrl
dec
setnp
jbe
xorb
jb
lea
ljmp
or
push
jne
je
fnstcw
inc
idivb
or
mov
testb
pop
lods
mov
push
stos
ret
inc
ret
mov
lret
scas
imul
jle
adc
bound
jnp
lods
push
adc
out
testb
mov
dec
dec
or
jb
cmc
mov
xchg
or
jmp
js
xor
cli
xchg
xchg
adc
in
xchg
sbb
and
sahf
sbb
mov
fldl
arpl
inc
test
jne
adc
das
mov
mov
cmpb
xchg
inc
lock
add
leave
test
je
xor
bound
pop
jnp
xchg
pusha
pop
pop
loope
adc
sub
dec
xchg
leave
bound
jg
imul
leave
cwtl
pop
js
or
jnp
ss
sbb
xchg
cli
mov
outsl
stos
addr16
shlb
ret
in
dec
or
cmp
ds
xchg
int
mov
jp
mov
mov
xchg
mov
xchg
push
scas
shlb
fmull
das
movsb
pushf
cmp
enter
add
test
add
push
or
jmp
loop
repz
popf
mov
pop
mov
cmc
mov
mov
mov
add
and
mov
repnz
cmp
repz
mov
cmp
push
ljmp
addr16
outsb
iret
mov
ljmp
rcrl
cld
cltd
rcrb
jno
les
jo
sarb
inc
cmp
mov
sbb
in
int
xor
nop
int3
out
pop
dec
sahf
xor
mov
xchg
jns
mov
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
xchg
xor
icebp
jg
adc
js
mov
or
out
fs
mov
rcrb
insb
cs
xchg
pusha
jl
lret
imul
cld
inc
add
mov
jge
pmaxub
les
out
mov
inc
sbb
imul
sbb
push
fimull
es
push
mov
outsb
jmp
cmpl
mov
xchg
sti
lock
rorl
xor
or
mov
mov
xchg
aam
adc
stos
push
lods
div
dec
xchg
push
dec
mov
xchg
push
cmp
dec
gs
pushf
push
mov
dec
cwtl
into
lret
jmp
stos
push
mov
into
ja
in
mov
or
in
outsb
jb
dec
lods
mov
sbb
fbld
shll
sub
jmp
mov
aad
mov
test
test
leave
sub
fsubrp
clc
dec
imulb
cltd
lock
out
fadd
push
lods
imul
or
je
sub
pop
xor
xor
scas
cs
xorb
lock
and
sahf
xor
lret
cmp
lcall
inc
mov
cltd
or
xor
or
in
inc
xor
inc
stos
or
js
pop
and
es
jl
out
dec
push
lret
add
or
pushf
into
lock
shrb
loopne
sub
rcr
ja
iret
mov
fmul
push
ret
jno
inc
dec
cs
sbb
add
xor
aad
ja
and
mov
cmp
adc
std
xlat
pop
mov
in
sbb
in
mov
add
xchg
subl
clc
mov
pop
scas
fildl
jg
jbe
outsl
jb
aad
or
pop
mov
pop
stos
mov
test
jne
fnclex
orb
mov
sahf
stos
pop
imul
xor
inc
aam
addb
popf
es
adc
adc
rcrb
adc
sbb
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
push
fstps
idivl
adc
js
cmpsb
sub
dec
shll
sbb
mov
inc
or
mov
mov
mov
in
insb
popa
aas
jp
fnstsw
sbbl
cmp
sub
push
ja
dec
cmc
jle
jle
ret
imul
pop
sub
sahf
adc
sub
test
push
test
test
pop
push
mov
leave
sti
add
nop
cmp
enter
xor
mov
sti
xchg
mov
mov
icebp
cli
cmpsb
adc
xchg
mov
xlat
das
jo
test
movsl
adc
icebp
int3
incb
orl
mov
pop
maskmovq
notl
stos
fidivrl
push
je
mov
andl
cmp
add
mov
clc
dec
rcrl
lods
dec
push
mov
xor
and
aad
sbb
mov
jno
inc
scas
push
jae
adc
icebp
bound
jg
or
dec
cmp
mov
insb
push
pop
sub
fsubrp
stc
outsl
rclb
fwait
jmp
loope
sub
insb
add
ljmp
ds
lods
sbb
sub
jmp
ljmp
call
filds
ret
int3
push
mov
push
out
das
dec
jb
add
pop
in
arpl
pop
das
sbb
call
jae
into
sub
movb
sbb
inc
and
in
cmp
xchg
inc
sbb
fbld
add
lds
sbb
jge
sarl
cwtl
in
push
js
inc
inc
mov
cmc
lcall
popf
mov
push
pop
fidivs
sahf
movsb
add
shrl
mov
push
push
stos
pop
pusha
mov
jmp
bswap
pop
sti
mov
adc
test
inc
lea
mov
add
cmp
inc
add
mov
std
dec
out
pop
jmp
into
iret
into
ror
aad
aad
mov
dec
ds
jg
adc
js
pop
xchg
ljmp
je
mov
ljmp
cmp
cs
fs
sbb
push
icebp
mov
sub
pop
daa
loop
daa
push
fwait
jle
push
pop
dec
jns
cmp
std
adc
dec
cmp
in
push
mov
pop
jmp
sti
ds
gs
mov
jg
mov
mov
jae
or
out
ret
xchg
aaa
test
jne
mov
push
cmpsl
adc
add
pop
xor
xor
add
sub
or
lods
inc
or
aaa
sbb
icebp
shl
xor
xor
js
mov
push
mov
arpl
stc
insl
cltd
mov
xchg
call
dec
push
test
mov
into
ror
imul
inc
or
mov
mov
jl
jmp
jbe
arpl
ret
cmpsb
xchg
or
push
pusha
or
mov
pop
push
mov
push
in
in
es
mov
add
sub
into
mov
pop
imul
mov
sbb
ss
out
mov
jmp
arpl
popa
push
imull
or
sub
cwtl
jb
aas
add
xor
xchg
sti
add
lcall
cld
jge
es
jle
sbb
icebp
out
adc
xchg
inc
stos
mov
mov
adc
adc
push
out
push
pop
data16
cmp
and
sbb
clc
and
inc
lods
sub
cld
sbb
cld
cltd
cmc
sub
mov
leave
pop
pop
scas
mov
arpl
lea
fwait
mov
dec
add
scas
not
leave
aam
jle
pop
cmp
push
bound
sbb
inc
jp
pop
shl
pop
mull
cmpsl
stc
mov
lcall
test
cmp
sti
push
mov
imull
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
mov
add
movsb
add
das
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fst
scas
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
mov
add
add
dec
add
add
add
dec
add
inc
add
insb
add
inc
add
add
add
push
add
dec
add
add
dec
add
inc
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
push
add
wbinvd
add
mov
wbinvd
cmp
pop
push
fwait
repnz
mov
xchg
sbb
shl
in
sti
scas
and
dec
mov
xor
faddl
sub
cmp
cs
sub
inc
fstpl
rclb
iret
push
jl
data16
xchg
jns
popa
std
xor
jne
ljmp
lods
je
push
loopne
sub
add
mov
cmp
stos
insb
jmp
in
push
xlat
lret
cli
pushf
rolb
shr
adc
jb
rol
cs
call
orb
hlt
fstpl
fisubrl
sti
lods
mov
mov
push
fistps
mov
dec
std
ljmp
jg
mov
ret
pop
ss
jg
ds
sub
jno
sti
cmc
xchg
jg
pusha
loope
xchg
pop
mov
jae
sbb
cmpsl
pop
add
adc
xchg
loopne
mov
das
repz
and
jno
dec
cmpsl
mov
cli
dec
out
sar
stc
movsb
repz
fmull
dec
aas
fdivrp
jae
xor
lods
add
pop
adc
pop
out
cmc
shlb
lcall
jb
jecxz,pn
cmc
jb
out
push
pop
mov
insl
pop
jmp
jnp
pop
test
addr16
cmp
adc
jg
out
adc
in
out
push
jo
movl
dec
cmp
dec
imul
sub
or
ja
and
xor
sbb
rcr
out
mov
js
mov
rcl
mov
push
fisubrl
and
push
mov
push
jmp
cmp
sub
aad
clc
cmpsb
in
dec
mov
mov
fstps
aaa
int3
jae
xor
test
fs
fsubrl
mov
xor
stos
pop
and
xorl
loop
pop
pop
mov
addl
push
mov
pusha
std
cwtl
icebp
jne
jae
sahf
sub
adc
test
jb
shlb
jp
jle
fimuls
adc
cmp
andb
jle
xchg
lods
dec
xor
mov
mov
mov
out
mov
jge
xor
lock
cmpsb
hlt
int
popa
xchg
mov
mov
jle
sbb
push
xor
inc
inc
loopne
add
inc
ror
imul
cld
dec
out
outsl
jl
sbb
add
test
inc
mov
push
test
mov
mov
test
lds
cmp
hlt
aad
fadd
es
sub
sub
xchg
outsl
pushf
ds
pop
hlt
leave
and
xor
sbb
sub
insl
clc
pop
lret
cmpb
push
out
mov
dec
and
jge
dec
jne
pop
jmp
adc
das
repz
cmp
aad
xchg
sbb
std
cmpsb
cmpsb
push
adc
sahf
les
and
addr16
mov
xchg
stc
mov
sbb
adc
or
lcall
cltd
fs
jne
cltd
mov
push
sub
int
jno
and
mov
ljmp
pop
stc
sahf
dec
cmp
jbe
sti
adc
mov
adc
sbb
cmp
or
mov
sbb
dec
mov
aad
cld
jno
xchg
orl
fidivrs
nop
xlat
arpl
pop
mov
add
xchg
test
push
sbb
xchg
push
push
sub
insb
push
lock
ffreep
sahf
icebp
xchg
and
imul
pusha
push
sub
xchg
pop
in
dec
jg
call
jmp
xor
jecxz
test
orb
mov
imulb
sbb
repz
hlt
das
insl
jp
adc
cmp
test
lods
mov
fistps
xlat
jno
jbe
jns
lahf
subb
mov
insb
pop
lret
insl
lock
fdivrl
and
mov
or
or
in
fiadds
add
shlb
jns
jecxz
dec
dec
sub
popf
aaa
sahf
mov
xchg
jne
lcall
jae
scas
lahf
int3
repnz
arpl
pop
mov
iret
fwait
xchg
int
test
cmp
ret
movsb
enter
addl
cltd
fadds
mov
les
pop
and
in
dec
mov
push
mov
pop
addl
test
daa
cmp
out
rorb
cmpsl
lahf
aam
push
add
mov
cmpb
scas
jnp
add
std
inc
shl
notb
andb
jne
idiv
push
jo
ss
lret
nop
inc
cli
pop
loope
jae
add
leave
dec
sub
cmp
enter
inc
jb
and
dec
cmpsl
lcall
cmp
push
inc
push
add
inc
mov
inc
dec
add
jle
fidivrl
push
xchg
stos
out
nop
lds
mov
or
bound
sbb
push
movsl
mov
adc
xchg
testb
leave
stos
lret
mov
test
mov
loopne
adc
jg
outsl
repnz
inc
cltd
movsb
lock
push
push
mov
add
inc
pop
sti
jno
loope
dec
mov
pop
lods
pop
and
call
aam
xchg
out
lods
dec
push
frstor
sbb
dec
mov
stos
outsb
add
fsubr
xlat
add
gs
stc
and
sub
pop
sub
insb
int3
push
lods
add
arpl
cmp
mov
ds
inc
add
jne
cld
xchg
int3
adc
xchg
aaa
iret
daa
pop
test
push
add
es
xor
jecxz
pop
into
fcompl
xchg
add
scas
pop
jp
mov
xor
lahf
pop
jmp
and
mov
scas
mov
daa
and
jmp
test
push
pop
sarb
fldenv
lcall
jp
adc
shll
xor
mov
ljmp
outsl
into
ljmp
out
push
sub
add
xor
popa
jbe
mov
lcall
lahf
pop
aaa
sahf
inc
jp
into
inc
xchg
xor
test
jle
add
jl
add
dec
inc
pop
inc
pop
pop
shrb
aam
push
mov
test
add
push
add
cmpsb
adc
add
arpl
push
sbb
sbb
fstps
pop
jno
scas
mov
lea
add
addr16
pop
ss
fsubr
push
sbb
jbe
jo
push
pop
xchg
and
jmp
stos
in
repz
das
push
pusha
fs
sub
adc
mull
mov
in
jns
imul
pop
inc
shll
push
inc
movsb
adc
cli
bound
pop
push
or
pop
add
sbb
mov
mov
mov
ja
icebp
and
dec
xchg
jge
sbb
jae
dec
cmc
rcrb
loopne
jecxz
mov
nop
subb
lods
ret
fidivrl
lock
jp
jnp
jle
jae
stos
outsl
mov
xchg
xor
adc
push
mov
aam
mov
ftst
stos
pusha
inc
fwait
mov
or
push
fst
fcomp
push
inc
xchg
sub
jle
lret
jb
mov
pop
and
pop
inc
xlat
sbbl
cmpxchg
ret
add
jb
int3
dec
push
data16
inc
inc
aam
and
cmp
enter
outsl
mov
xchg
std
es
test
fs
out
dec
xchg
les
fs
cmp
loop
outsb
sbb
sbb
movsb
push
aam
fstpt
add
je
rorb
fnstsw
xor
jg
movd
out
pop
push
xor
test
lret
push
movsb
imul
mov
test
mov
sarl
cs
cmp
inc
ret
jmp
cmp
push
ljmp
out
and
cmp
into
gs
pop
and
pop
dec
ficoms
and
jge
cmp
ljmp
imul
push
fsub
cmc
hlt
jnp
in
push
mov
dec
cmp
add
das
orb
push
in
mov
lret
adc
repz
pop
lret
inc
mov
repz
popf
sbb
sub
leave
arpl
push
mov
fldt
jl
rcrb
ret
dec
xchg
lcall
data16
rcrl
data16
dec
clc
addr16
outsb
mov
adc
pop
xchg
movsb
fdivrl
arpl
fucomp
xor
lcall
and
in
or
sbb
cmpsl
xlat
in
inc
lahf
insb
xchg
mov
pop
jle
mov
aam
jecxz
std
inc
xor
lahf
xorb
in
test
cmp
pop
outsb
cmp
mov
pop
cs
push
dec
ljmp
and
push
fwait
stos
push
inc
das
loope
adc
mov
ret
mov
mov
dec
daa
outsl
dec
add
data16
imul
lret
idivb
dec
lods
test
scas
test
mov
xor
mov
das
mov
andb
mov
cmp
rolb
imulb
xchg
stos
std
mov
out
popl
jns
std
and
lods
push
jb
outsb
dec
and
jns
push
xchg
add
test
add
mov
push
clc
movb
adc
repnz
orl
cltd
push
pop
fwait
ljmp
cmp
and
jecxz
xor
push
or
clc
xlat
ret
rcrl
mov
jns
pusha
inc
movsl
fs
popf
sbb
imul
and
shrl
jne
out
mov
add
mov
movsl
push
fs
push
pushw
les
add
mov
icebp
jns
xchg
lret
fistpl
sub
jl
popf
nop
in
mov
pop
data16
aaa
jg
sub
xchg
test
pop
jbe
lock
int3
xor
imul
push
in
inc
jno
mov
out
mov
ja
dec
add
inc
xor
repz
jl
mov
pop
xchg
iret
inc
stos
xor
mov
insb
mov
cmpsl
mov
jecxz
scas
xchg
jae
dec
pop
inc
cmp
mov
mov
mov
jle
jecxz
and
lret
iret
aas
iret
in
loop
mov
push
mov
inc
lea
push
xor
xchg
xor
pop
sti
xor
fmul
xor
dec
xchg
push
xadd
xchg
push
aaa
adc
or
insl
ljmp
cltd
mov
icebp
hlt
or
sti
pop
insb
rorl
shlb
ja
jg
jl
dec
xor
insl
push
jl
mov
sbb
xchg
cs
movsl
jmp
jl
pushf
gs
add
jecxz
pop
and
scas
fdivr
add
push
sub
into
sbb
adc
sahf
stc
pop
enter
dec
les
cmc
cmp
sub
testl
adc
jecxz
outsl
ss
lahf
loope
aaa
xorl
adc
push
sub
mov
sbb
cmp
push
insl
repnz
sbb
or
sub
xor
test
call
mov
mov
xor
or
int3
pusha
cld
fneni(8087
mov
and
pop
sbb
out
fstpl
sbbl
dec
jo
and
add
cmp
jg
imul
pop
mov
sub
repz
push
leave
xor
scas
sub
lods
gs
fbld
jecxz
in
xor
ss
jnp
fisttpll
sbb
dec
repz
jne
addr16
or
pop
cmp
outsl
jnp
repnz
push
push
pop
ja
daa
cmp
aam
cmp
add
adc
push
cmp
xor
es
mov
clc
lods
cwtl
and
and
mov
jmp
cmp
ret
outsb
sbb
xor
jecxz
and
insb
sbb
push
or
push
inc
sub
add
jl
inc
xor
in
popf
cmp
add
arpl
dec
ret
mov
jns
sbb
into
pop
rcll
imul
push
add
lcall
fsubr
push
dec
pop
xor
inc
cwtl
sub
sub
sbb
lahf
xchg
data16
mov
sub
and
mov
fnstcw
jae
add
and
rcpps
sub
mov
or
mov
add
dec
push
pop
push
pop
dec
mov
dec
push
cmp
mov
add
push
add
fwait
dec
push
jg
sbb
xorl
shlb
rorb
in
inc
iret
cs
dec
inc
xchg
push
cmp
cwtl
scas
lret
inc
xchg
push
bound
xor
std
daa
rclb
jnp
jb
nop
pop
push
bound
xchg
adc
xchg
or
or
movsb
jne
mov
int
aaa
test
mov
rsqrtps
or
stos
loopne
fldl
stc
inc
add
jmp
mov
or
call
cli
sbb
dec
out
xor
int
insb
add
inc
adc
arpl
push
sub
int
int3
inc
cmp
and
sub
in
stos
sub
stc
jecxz
cmp
in
mov
jbe
jbe
lock
cld
stos
mov
xor
aas
arpl
outsb
out
jno
int
or
xlat
adc
popa
movsb
fldt
mov
ret
dec
lahf
aas
mov
call
popa
pop
cmp
xor
xchg
in
add
imul
inc
xor
jbe
xchg
mov
mov
adc
insb
mov
mov
lock
mov
in
insl
add
or
or
sahf
mov
cs
call
mov
fwait
das
sub
jg
cld
cmc
jle
and
dec
rcrb
jp
mov
es
data16
aas
and
mov
andl
add
mov
push
or
inc
add
xor
imul
dec
in
sub
roll
mov
xchg
dec
mov
xor
pop
shlb
xchg
push
dec
mov
cmpsb
adc
mov
xlat
aam
pop
outsb
push
and
mov
repnz
cs
jns
stc
addl
repnz
mov
adc
popa
sub
cli
stos
rol
popa
and
nop
shl
push
cmp
dec
and
xchg
jmp
or
cmp
call
jo
loope
gs
jbe
scas
and
or
fists
dec
cmp
jae
xor
lcall
icebp
mov
ss
out
push
fimull
xor
movsb
cmp
ret
xchg
push
jnp
out
inc
mov
cli
fs
pop
sbb
dec
ror
and
cltd
pushf
xlat
push
mov
pop
cmc
adc
mov
adc
inc
scas
inc
movsl
fistl
cmc
sub
cmp
xor
rorl
mov
push
sbb
sub
sbb
fwait
xchg
or
and
jl
cmp
adc
or
sbb
call
fisubl
fcmovnbe
cs
mov
out
mov
icebp
leave
test
cmp
xchg
lds
nop
js
sub
fistpll
or
ljmp
inc
sbb
jns
fdivrs
mov
xchg
das
inc
push
insl
pop
or
int
rcrb
fstps
loope
ja
lcall
lahf
mov
sbb
sti
fwait
dec
scas
dec
xor
scas
mov
cmp
pop
dec
xor
xor
jns
pop
test
jae
aad
push
idivl
cmp
lods
push
test
cmp
stc
iret
rcrb
inc
lcall
push
aam
adc
sub
mov
xchg
lahf
and
pop
lods
mov
xchg
gs
ret
in
mov
ds
mov
sbb
stos
push
add
pop
or
cmpsl
mov
mov
and
loop
lret
mov
lcall
mov
and
xchg
nop
lret
inc
mov
je
cmp
popa
jl
pop
xchg
int3
xchg
inc
mov
dec
xchg
in
mov
sbb
sti
jmp
iret
mov
jl
push
popa
jmp
movsb
mov
clc
dec
jo
adc
gs
or
shr
test
addb
fsts
cmp
fildl
cmpsl
js
push
push
stos
adc
aaa
stos
shll
mov
aaa
cmpsl
mov
das
aas
mov
dec
mov
inc
sbb
popf
inc
and
dec
test
adc
js
mov
xchg
sbb
test
jge
and
xor
sub
xchg
and
sub
xchg
imul
stos
shl
cmp
lcall
mov
dec
mov
mov
push
ret
int3
inc
push
xchg
fcomi
std
mov
mov
cmp
bound
dec
mov
add
inc
sub
mov
cmp
jbe
inc
pop
sub
out
sarb
jge
fcoms
pusha
in
mov
mov
inc
push
add
or
je
fisttpll
subb
adc
das
add
lea
xor
add
push
cmp
mov
test
out
ss
aad
test
sbb
je
cmc
sbb
push
add
std
or
dec
sti
ffreep
imul
inc
mov
dec
out
popa
jl
repnz
cmp
mov
cmp
popa
push
leave
flds
pop
mov
push
jle
ret
mov
subl
pop
dec
fs
cli
and
loopne
add
idivb
loopne
push
lods
rcll
iret
push
in
jns
jecxz
mov
add
fiadds
ljmp
hlt
shrl
testb
js
fbstp
pop
data16
mov
cmp
dec
pop
int
add
mov
pop
dec
pusha
out
mov
sub
push
or
push
les
jle
fs
pop
sub
jmp
jne
popf
sub
cmp
loope
imul
hlt
aad
test
mov
inc
push
add
jg
icebp
rcl
adc
cmp
divb
xchg
leave
fs
xchg
fildl
and
dec
sti
sub
pop
or
pop
jp
clc
and
aaa
ja
aaa
dec
roll
dec
sbb
xchg
pusha
lock
mov
scas
pop
notl
xchg
lds
or
es
fisttpl
dec
or
in
pop
push
inc
dec
dec
pop
pop
push
sub
xchg
push
mov
add
push
add
fcoml
mov
fcompl
lahf
lods
and
or
xor
cmp
sarl
pop
mov
push
adc
fs
and
or
push
outsl
scas
xorb
xchg
pop
pop
mov
push
and
sub
cmpsb
inc
sti
mov
outsb
sti
jno
push
dec
ss
shl
pop
xchg
mov
sub
loope
adc
mull
jae
pop
negb
pop
jb
cwtl
pop
nop
push
and
lahf
push
xchg
jle
je
call
jo
add
xchg
mov
sub
iret
test
cmpsb
lcall
dec
and
and
xor
add
pop
fistps
dec
mov
xchg
subl
fmull
or
dec
and
mov
shlb
imul
shll
mov
sahf
minps
ret
add
test
nop
jne
int3
in
sub
scas
jecxz
fnsave
xchg
push
enter
xor
cvttps2pi
add
xchg
scas
aas
mov
jae
lret
les
mov
xlat
call
cmpsb
mov
dec
pop
push
out
into
daa
ja
imul
out
dec
jne
ljmp
insw
inc
js
repz
repnz
repz
popa
mov
sub
pop
fidivrs
mov
xchg
stos
and
sub
jae
stos
out
jg
mov
cmc
andl
lret
leave
dec
insb
mov
outsl
les
cmp
gs
iret
dec
int
mov
repz
mov
pop
packssdw
xchg
scas
cltd
cmp
enter
hlt
rclb
xchg
notl
sub
xchg
jmp
pop
enter
mov
mov
or
cltd
mov
pop
sahf
add
aam
imul
std
pop
popa
pop
addr16
sbb
add
inc
jno
rcrl
xchg
movsl
cld
scas
inc
xor
call
push
dec
jnp
int3
mov
mov
pop
jle
pop
mov
cmc
jg
js
pcmpeqb
ljmp
jle
jno
rcll
xchg
in
xor
add
xchg
fcomi
push
cmpsl
pushf
jmp
negl
mov
sbb
stos
sbb
jmp
int3
pop
imulb
add
inc
stos
or
jmp
test
mov
pop
gs
sbb
mov
sub
pop
mov
mov
pop
test
aaa
insl
inc
push
xchg
in
xchg
in
push
push
repnz
pop
in
das
jno
jbe
not
insl
adc
and
adc
pusha
aad
or
sub
cmpsl
rcr
push
jecxz
cli
xchg
mov
sub
mov
insl
ffree
xor
cltd
push
inc
rcrl
adc
mov
sbb
or
and
negb
pop
cld
jno
lock
add
pusha
dec
fists
sbb
bnd
pop
push
cmp
and
adc
mov
push
xor
hlt
mov
dec
xor
enter
cli
lock
push
push
and
lahf
orb
cmp
std
sbb
adc
imul
insb
mov
mov
cwtl
fs
aaa
jbe
mov
or
sarl
xor
jbe
mov
mov
dec
jl
lock
test
xor
into
add
mov
lret
ds
cmp
mov
mov
aad
adc
push
jns
mov
out
mov
xchg
and
pop
or
lcall
test
in
mov
outsl
jp
and
imul
jle
jle
cmp
fdivr
adc
popa
cld
in
pop
dec
dec
cmc
xchg
int
pushf
insl
jns
sbb
mov
pop
mov
or
dec
pop
fcompl
imul
push
push
test
sub
mov
lret
sub
pushf
inc
sub
jns
push
mov
outsb
push
gs
sbb
imull
lock
jecxz
jo
loopne
mov
xor
pop
pop
mov
xchg
or
cmp
mov
test
push
add
out
cld
insl
stos
adc
xchg
mov
inc
lods
lret
push
fsubrl
jne
pop
push
xchg
ss
jo
fs
pop
inc
dec
sbb
pop
mov
sbb
jmp
mov
shrb
cmpsb
xor
lret
adc
mov
lds
jbe
pop
mov
andb
adc
push
cwtl
ljmp
test
push
cli
cmpsb
push
nop
into
dec
sbb
dec
push
inc
dec
jmp
add
fs
xlat
and
lret
jle
gs
jnp
and
mov
and
inc
daa
inc
dec
pop
add
adc
jno
xchg
test
loope
and
shr
xchg
mov
test
jae
sbb
sahf
loop
inc
call
daa
pop
addr16
mov
pop
imul
inc
mov
xchg
sub
lcall
xchg
and
pop
and
out
mov
ret
mov
loopne
hlt
les
out
mov
in
dec
push
push
iret
xchg
mov
scas
mov
inc
ret
or
repz
notb
sti
aad
sub
enter
xchg
shl
int3
and
aad
mov
outsl
testb
xor
loope
jns
ja
lahf
or
int
test
aam
push
js
cmp
jl
fmuls
stos
add
xchg
mov
xchg
cmp
xchg
sub
iret
or
out
test
les
xchg
mov
add
ds
aam
outsl
sub
add
dec
push
xor
enter
cmp
test
jb
call
and
push
in
mov
imul
push
into
sub
xor
push
dec
jno
cmp
cmp
xor
fists
js
pop
ret
cwtl
pop
lea
sbb
mov
inc
dec
sahf
push
cmp
mov
xchg
pop
call
call
dec
adc
and
fisubl
lret
testb
jecxz
ficoms
mov
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
int
xor
add
repz
lcall
sbb
pop
cmp
std
and
outsb
pop
mov
adc
or
dec
and
int3
stos
mov
dec
scas
lea
cmp
mov
aam
mov
jbe
pushf
pop
test
jo
lea
and
fdivrs
icebp
ss
out
inc
sub
data16
mov
cli
mov
sub
rcrb
push
sub
decb
loopne
mov
xchg
mov
or
bound
inc
cld
test
jno
pop
push
push
lods
dec
out
pop
test
cli
out
xchg
pop
sbb
into
in
cmp
ss
sbb
gs
mov
mov
adc
dec
mull
mov
ret
push
pop
lods
mov
mov
dec
dec
fadds
inc
or
orl
pop
pop
inc
xor
push
or
movsl
outsl
cmp
mov
js
pop
sub
xchg
sbb
jnp
lea
inc
pop
leave
fs
fwait
data16
add
movsb
pop
push
sahf
mov
fists
shlb
inc
adc
inc
adc
rcrb
push
out
mov
pop
push
jge
pop
jecxz
addl
pusha
movsb
out
bound
and
mov
out
jno
push
and
jnp
leave
mov
inc
dec
mov
imul
or
daa
add
xchg
sahf
and
fs
inc
mov
mov
adc
aaa
fbstp
push
sub
jne
pusha
mov
jl
mov
ret
fdivrs
add
pop
movsb
mov
pop
jp
nop
jle
jle
push
popl
push
and
les
loop
sahf
mov
cmp
push
out
push
mov
out
jbe
jmp
cltd
test
popa
mulb
test
pop
loop,pt
aad
xchg
inc
in
pop
or
or
popf
mov
outsl
das
aas
and
xor
jb
xchg
and
in
mov
jge
mov
popw
int
sbbl
cli
les
cmp
addr16
xchg
outsb
mov
sub
outsl
mov
sub
cmp
pop
dec
inc
mov
aas
xchg
inc
cmp
jg
fimuls
ret
jg
sub
jae
pusha
cltd
pop
xor
out
add
fcmove
xchg
push
orl
outsb
xor
clc
jnp
mov
arpl
test
lods
push
mov
testb
push
aad
sbb
shll
fs
mov
ss
jae
loope
stc
sti
imulb
vmovntdq
cmpsb
pop
mov
sbb
imul
xchg
cltd
add
sahf
rcr
mov
lea
lods
inc
xchg
sub
cmp
xchg
or
or
mov
jo
lret
jbe
cwtl
fmulp
std
xchg
push
pushf
sub
scas
push
jge
fdivrp
test
pop
cld
sbb
dec
gs
jbe
nop
jg
xchg
shl
lret
pushl
je
movsl
insb
sub
mov
test
xchg
das
call
stos
xchg
add
les
adcl
je
xor
pop
mov
testl
lods
xchg
shrb
pop
inc
imul
adc
inc
mov
pop
rcll
out
loopne
sti
sub
sbb
cmpsl
sahf
outsl
sub
aaa
xchg
in
dec
cmp
or
xor
adc
les
int
ret
sub
xchg
gs
adc
cltd
lcall
push
inc
mov
sbbb
lods
cmp
movsl
xchg
test
lds
mov
sarl
dec
inc
adc
out
and
sub
jae
cltd
test
pop
hlt
jle
push
mov
ds
and
fcomps
arpl
inc
insl
and
aas
jecxz
das
fisttpl
add
sub
int3
cmp
xor
jo
fldl
loopne
nop
and
ljmpw
iret
adc
sti
dec
fldl
imul
sbb
pop
lcall
jmp
push
aad
in
jae
cs
lret
mov
adc
mov
jle
or
je
sub
pushf
pushf
adc
lea
das
fcoms
mov
push
lcall
inc
dec
les
test
inc
and
fcompl
jnp
into
out
cmpsl
out
test
mov
cli
pushf
dec
adc
fadds
arpl
add
dec
pop
out
ds
cmp
push
lahf
jg
aas
in
call
mov
jp
sbb
pop
xor
jb
popa
push
mov
dec
pop
inc
cmp
dec
push
sub
lret
sbb
cmp
adc
mov
jne
gs
adc
repnz
ficoms
sub
jno
jp
repnz
add
aam
rdtsc
stos
sbb
jmp
enter
pop
clc
and
sub
jo
scas
and
sbb
and
xchg
fildl
cmp
fadd
sbb
or
test
sub
popa
stos
and
push
xchg
push
test
pop
mov
outsl
mov
jg
jb
mov
mov
sarb
aas
mov
sbb
lods
mov
inc
in
xlat
test
xor
push
out
inc
fdivrl
cmp
inc
int
sub
xchg
shlb
mov
cmp
sbb
pop
xchg
lods
mov
adc
sahf
xchg
imul
xchg
hlt
leave
scas
jno
nop
test
imul
push
insl
pop
clc
outsb
adc
push
push
cld
push
xlat
xchg
mov
ds
sub
inc
mov
test
sub
lret
ret
shlb
pop
xor
mov
adc
adc
int
add
jno
mov
adc
aaa
je
repz
stos
jb
cs
sbb
inc
dec
sbb
shr
imul
test
or
pop
mov
lret
lds
cwtl
fsubs
adc
fwait
mov
xchg
dec
popa
mov
fucompp
stos
fbld
nop
in
pop
cltd
in
sti
pop
out
lds
outsb
mov
inc
cli
xor
push
dec
inc
push
pop
pop
push
dec
cmp
or
mov
outsl
lahf
add
roll
add
mov
cmpsb
frstor
add
insl
push
aaa
sarl
xchg
and
mov
inc
push
mov
rolb
xchg
js
add
mov
jge
imul
pop
inc
xlat
lahf
outsb
sbb
or
in
sub
xor
adc
pushf
jne
test
inc
mov
pop
xor
fdivl
stos
xor
xor
mov
mov
or
pop
shlb
test
jp
jb
mov
sbb
push
add
and
dec
add
mov
cmpsl
aaa
test
xchg
jo
sahf
jno
les
shlb
jle
push
sub
push
mov
push
sub
daa
out
lret
hlt
ds
loop
and
lods
sbb
xor
or
cmp
out
push
in
insb
subl
fs
fsub
jns
mov
es
scas
gs
rol
mov
add
and
mov
jbe
jg
or
mov
cli
loope
sbb
jne
jo
cmpsl
aam
xor
popf
fists
dec
inc
xchg
inc
iret
jo
mov
sbb
call
xor
adc
and
mov
sub
test
icebp
in
xor
mov
cmp
ret
mov
push
pop
rcrl
mov
jnp
xor
xchg
icebp
rcr
mov
addb
sub
popw
or
dec
dec
jl
addr16
fs
sub
jle
adc
xchg
std
xor
insb
sbb
add
ss
lea
out
jo
xor
hlt
fsubrl
cmp
push
sbb
xchg
fs
cld
jae
sbb
sbb
lret
pop
mov
add
loop
movb
pop
mov
add
fmulp
shlb
xchg
clc
lods
lock
mov
test
icebp
adc
sub
roll
int3
data16
adc
xchg
lret
jbe
jne
ret
or
push
ret
popa
repnz
lahf
dec
mov
lret
lods
loop
addr16
lahf
outsb
lea
test
aaa
repnz
jge
sar
cmpsb
aaa
xchg
or
mov
sub
mov
and
xor
jns
adc
mov
iret
and
or
test
sub
imull
cmpsl
mov
xor
xchg
mov
fwait
and
and
jbe
imul
imul
aas
push
icebp
aam
rclb
sbb
stos
mov
fistpl
aam
stos
cwtl
mov
lods
int3
xorb
dec
xor
add
pop
iret
sbb
enter
mov
clc
xor
dec
hlt
jge
mov
or
lea
data16
test
pop
pop
das
int3
test
mov
jnp
xor
int
dec
xlat
pop
jp
sub
xchg
out
sahf
adc
jge
sub
std
push
pop
or
sub
xor
cmp
pop
mov
test
hlt
call
mov
sbb
fbstp
out
into
jne
adc
mov
adc
movsb
mov
cmp
mov
or
dec
ljmp
xchg
adc
testb
movsb
cmpb
mov
inc
cmc
xchg
ja
cmpsl
fdivrs
push
xor
mov
mov
cltd
ret
aaa
mov
adc
jns
shlb
pop
inc
icebp
cmp
mov
pop
bound
or
push
pusha
pop
fildll
cli
lea
xchg
push
add
lods
aaa
rdpmc
adc
aaa
pop
dec
iret
sbb
movsb
int3
dec
enter
andl
mov
mov
mov
add
xor
cmc
mov
pop
adc
dec
negb
pop
loope
movsb
rolb
xor
clc
and
sub
lods
repz
fstps
adc
test
fimuls
jl
insl
mov
dec
aaa
roll
cmp
push
mov
add
pop
adc
loop
das
sbb
xor
push
insb
inc
clc
lret
gs
dec
mov
push
jne
fstpl
faddp
imul
cmp
cld
dec
rol
loopne
shrl
dec
sub
daa
mov
testb
jecxz
jne
daa
dec
test
mov
pop
cs
bound
mov
pop
mov
repz
mov
dec
bound
jmp
ss
and
push
ds
xor
jg
data16
lahf
mov
lock
pop
xchg
jae
loop
sar
adcb
mov
sub
adc
adcl
jp
dec
adc
mov
dec
outsb
xchg
pop
dec
fisubrl
mov
add
dec
fisttps
fsubrs
mov
mov
adc
xchg
cmp
or
pop
cli
mul
lret
adc
jb
jecxz
xchg
xor
call
ss
push
mov
lea
test
xor
out
or
adc
adc
cmpsl
mov
push
xor
cmp
fldcw
jne
fstps
push
jmp
sub
jne
sub
mov
jl
shll
sub
pop
mov
in
fcomip
leave
inc
ds
sub
es
xor
js
pop
push
xor
insl
subl
cmpsb
jne
test
cli
in
mov
push
and
dec
fdiv
sbb
xchg
mov
jl
mov
xchg
pop
xchg
aas
leave
popa
ret
push
cld
push
mov
jnp
or
popf
push
cmc
mov
loop
ficompl
flds
dec
push
adc
ja
negl
outsb
sub
jae
stc
fidivrs
pop
cmpsb
rcl
add
pxor
push
repnz
enter
dec
repnz
xor
in
clc
pop
mov
and
sub
fstl
xlat
arpl
ret
jo
aad
pop
pop
sub
out
jmp
loope
sub
test
pop
mov
lret
fisttpll
adc
outsl
dec
sbb
fdivl
ss
insl
sub
xchg
xchg
into
sbb
jno
sbb
repnz
subl
sar
jg
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
int3
inc
cmpsb
add
roll
add
jmp
clc
mov
jmp
cwtl
lods
xchg
sub
iret
sbbl
mov
mov
stos
fcoml
or
cmp
lea
pop
inc
or
fidivs
arpl
xor
cmp
mov
and
mov
inc
leave
mov
scas
shl
dec
pop
pop
dec
xor
sbb
shll
jns
push
and
pop
xchg
popa
dec
ljmp
pop
adc
fnstcw
sub
orb
inc
addr16
dec
sub
inc
dec
lahf
push
ja
mov
cmp
out
jle
lcall
or
mov
iret
adc
sbb
sub
ret
cltd
cmp
fmuls
in
inc
insb
lret
ljmp
jb,pt
leave
pusha
jge
cld
adc
push
repz
adc
pop
jp
stos
adc
mov
andl
xchg
fimuls
movsl
and
fwait
fs
pop
or
mov
icebp
push
in
cmp
nop
ds
hlt
push
lds
push
pushf
cli
xor
mov
jmp
ds
aam
filds
sahf
sbb
mov
cmpl
cmpsb
mov
loope
mov
pop
xchg
mov
xchg
lock
jp
mov
fldl
jae
push
adc
scas
addb
push
push
repz
pop
lds
loop
jl
and
in
push
lcall
add
add
push
fldcw
xor
mov
sbb
jb
cmp
mov
out
loopne
xchg
push
jno
scas
push
js
push
push
insb
mov
push
adc
ficoml
adc
cmp
adc
shrl
cmp
jae
enter
dec
sub
mov
lods
jae
sub
sub
out
insb
push
sub
jo
fs
add
pop
mov
test
loope
mov
fmuls
lods
jle
int
pop
push
pop
into
sti
mov
inc
and
sub
incb
pop
push
js
rclb
xchg
dec
pop
jge
imul
sbbb
or
inc
adcl
pop
mov
add
pop
fs
into
sbb
push
outsb
sub
sbb
lcall
xchg
les
mov
sarb
inc
out
std
xchg
mov
pop
and
mov
add
dec
sbbl
test
scas
sub
mov
mov
or
lret
sbb
pop
jae
stos
rcrl
push
cmpl
sbb
stc
sbb
movsb
shl
scas
pop
jb
and
clc
popa
push
pop
jp
sub
andl
lods
cmp
and
mov
call
cmp
daa
adc
add
aad
jle
popa
out
test
out
sub
inc
pop
es
cmpsb
enter
in
mov
and
enter
das
icebp
jns
sbb
pusha
and
add
inc
insb
jne
std
or
out
and
inc
xor
and
push
add
dec
test
sbb
test
mov
pop
push
or
cld
jno
test
icebp
dec
inc
lods
test
inc
nop
fcomps
fsubrs
sub
add
push
arpl
insb
sub
pop
fildll
jle
jo
mov
dec
ja
pop
pop
iret
lds
push
mov
cld
pop
roll
mov
leave
pop
jns
lcall
lahf
cmpsl
sbb
mov
mov
loopne
stos
mov
xlat
jmp
sti
dec
push
xor
aas
cwtl
hlt
add
dec
stos
pushf
repnz
lahf
js
xchg
mov
dec
pop
shrb
test
jl
pusha
nop
test
xor
xor
in
adc
or
dec
jmp
orb
js
mov
pop
sub
mov
cli
in
subb
push
mov
xchg
ds
enter
add
sbb
out
adc
push
mov
inc
jno
mov
mov
dec
lahf
xchg
in
addb
lods
jle
xchg
test
cli
push
je
imul
std
popf
dec
imul
mov
or
scas
xor
mov
inc
pop
lea
sbb
arpl
jbe
clc
dec
idivb
imul
push
pop
mov
shrb
pop
pop
jae
cwtl
cmp
pop
mov
fdivs
fdivrs
xchg
xor
mov
and
shlb
js
xor
fs
scas
lahf
jae
jmp
lock
push
ja,pt
pop
cmpsl
jae
int
testl
pop
loopne
je
cmpsl
mov
scas
sti
rorb
mov
repnz
out
iret
aaa
fdivr
add
jno
push
fs
movsl
or
dec
je
aam
jle
mov
fdivs
mov
idiv
je
xchg
leave
stos
push
mov
repnz
inc
cli
jae
lea
pop
repz
insb
fisttpll
xor
cmc
mov
popa
xorb
cwtl
cmpsl
pop
inc
js
xchg
scas
ss
xor
into
data16
out
jne
or
pop
fadd
loopne
pop
insl
dec
push
sub
cmpsl
sahf
insb
pop
aas
ljmp
call
loope
or
mov
mov
push
push
cmp
inc
test
and
jns
nop
inc
pop
sub
orb
lock
call
inc
inc
cmp
and
sub
add
sbb
das
out
jmp
ss
add
mov
cmc
in
jg
cwtl
xor
leave
push
loope
adc
xor
mov
add
cltd
mov
scas
enter
insl
jns
stc
xchg
cmp
shl
sub
stc
cmp
inc
ficoml
mov
pop
decb
adc
lcall
jbe
out
aam
mov
xchg
adc
xchg
adc
or
pop
jae
negb
arpl
test
out
rcrl
push
sbb
and
or
adc
add
sahf
dec
aam
gs
xchg
std
sahf
lock
mov
mov
and
aad
inc
mov
push
inc
pop
pop
pop
pop
push
dec
mov
and
roll
add
xchg
icebp
mov
jle
adc
in
inc
cmp
sbb
xchg
sub
dec
jl
out
jp
adc
roll
icebp
sub
and
jecxz
pop
pusha
lods
mov
mov
push
cwtl
cld
fs
inc
fsubrp
push
cltd
and
fisttpll
adc
jmp
add
negb
imul
mov
pop
shrl
add
arpl
popf
pop
lahf
fiaddl
xchg
hlt
call
lods
movsb
sbb
jns
sbb
lods
cmpsb
add
and
push
aam
ja
jnp
fwait
push
mov
lahf
js
pop
popa
jmp
dec
aaa
aas
addl
jle
mov
stos
leave
movb
scas
fistpll
mov
dec
and
cmc
gs
fsubp
scas
fcomi
cmp
inc
mov
mov
cmp
or
cli
lcall
fcmovbe
ss
in
inc
and
jmp
inc
aad
inc
and
add
or
adc
xchg
cmp
movsl
aaa
mov
insl
and
pop
adc
mov
pusha
mov
rclb
aad
rol
jno
stos
pop
jnp
into
in
sub
jmp
pop
push
je
mov
repz
pushf
dec
mov
imul
outsl
ss
jmp
push
les
mov
repz
mov
add
rclb
cmpsl
lods
or
popf
and
mov
repz
push
pop
std
lret
and
add
push
pop
dec
push
mov
adc
push
add
or
xchg
mov
sarb
rclb
and
fcmovb
adc
jl
sub
add
hlt
mov
sbb
das
and
in
or
movsl
push
popf
ds
clc
xor
mov
sbb
push
test
push
push
push
in
arpl
ret
lods
cmc
ret
jge
cs
mov
add
lret
nop
in
xor
cmp
jle
in
fnstcw
push
pop
mov
out
mov
cmp
lcall
inc
fistpl
ja
jg
bound
push
lea
mov
xchg
push
xchg
outsb
adc
sub
in
nop
das
push
push
lret
inc
les
and
addr16
sbb
push
jno
cli
adc
and
and
stos
lds
pushl
pop
mov
xchg
cmp
loopne
int3
shll
mov
cltd
enter
or
dec
mov
jno
and
xor
es
jb
push
adc
test
in
cltd
fisubs
aam
jne
jb
bound
and
lock
mov
lock
xchg
push
fldt
and
int
mov
fists
pop
test
cmp
push
sbb
shl
mov
insb
jb
fst
lds
frstor
outsl
in
dec
or
or
push
cmp
cmp
test
out
pop
outsb
sub
mov
idiv
addr16
or
cmp
xlat
sbb
jecxz
mov
mov
lds
pop
mov
pushf
pop
mov
xchg
add
cmp
test
cmpsb
out
bound
dec
int3
test
inc
cmp
mov
mov
jae
addr16
aad
jmp
cs
shl
daa
jbe
idivb
arpl
sbbb
daa
push
mov
inc
cmp
xchg
jnp
stos
ds
pop
and
sarl
mov
add
orl
or
test
insl
loopne
adc
aad
mov
mov
mov
test
pop
mov
sbb
adc
or
out
inc
imul
push
push
dec
xchg
in
ja
enter
push
hlt
outsl
cmp
cmp
mov
icebp
popa
fidivl
mov
push
call
lock
push
pop
jne
jecxz
mov
add
ds
jmp
movups
fistl
or
sub
clc
cmp
sub
push
rcr
sub
add
jne
mov
dec
lcall
cmpsl
xlat
imul
sub
or
add
mov
int
mul
pop
push
and
imul
out
xlat
sub
lret
enter
fnstsw
sahf
repz
out
adc
jae
testb
mov
lock
out
jl
sub
movsl
xchg
es
xchg
dec
movsl
and
andb
dec
std
sub
inc
and
cmpsb
xchg
sbb
test
jb
ror
mov
out
sub
and
xor
imull
sub
mov
mov
sub
sti
push
out
insl
cs
cmc
xchg
mov
dec
add
bound
out
push
jns
dec
push
test
mov
in
push
push
or
jno
mov
int3
mov
out
stc
pop
push
movsl
sbb
xchg
inc
je
jmp
shlb
fsubrs
movsl
jbe
mov
dec
jnp
cmp
mov
stos
clc
test
stc
pop
pop
test
inc
adcl
loopne
xchg
enter
shl
mov
jbe
inc
lods
dec
fsubl
and
mov
and
das
pop
xchg
and
in
pushl
jl
sahf
orb
nop
pop
imul
negb
cmp
int
pop
jp
push
and
adc
jle
fbstp
ljmp
push
in
mov
loop
adc
ja
mov
sub
or
in
stc
cs
out
xor
mov
lods
fistps
add
and
xor
cli
insl
push
adc
pop
test
outsb
xchg
adc
andl
inc
xor
rep
mov
ja
testl
int3
lret
ja
scas
mov
out
dec
lea
loop
sub
call
xchg
popa
dec
mov
mov
jno
sbb
fimuls
scas
addr16
cmp
pop
mov
fldcw
pop
mov
test
push
xor
adc
pop
cmp
decl
aam
repz
fisubrs
adc
loop
test
mov
add
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
aas
call
push
add
adc
push
and
int3
sub
in
sub
test
xchg
ds
in
out
cltd
icebp
inc
sbbb
imull
inc
mov
sbb
in
push
in
xorl
xchg
imul
lahf
dec
add
or
js
xchg
dec
test
xchg
push
cmpsb
hlt
psubusb
les
stos
pop
push
bound
stos
dec
sbb
adc
aaa
outsb
push
gs
jecxz
cmc
out
negb
jbe
xchg
aam
test
enter
test
iret
pop
or
adc
pop
mov
cli
scas
inc
push
clc
inc
call
lret
dec
xor
push
dec
push
jmp
cmp
daa
xor
pmulhw
aad
daa
cmp
pop
test
aas
aad
cmpsb
pop
js
sbbl
cmp
sub
iret
jbe
pop
andl
sarb
bound
sbb
dec
ljmp
lods
mov
lods
fnsave
mov
push
lods
push
xchg
xchg
push
xlat
push
dec
cli
outsl
shll
lcall
adc
and
add
scas
movsb
jb
insl
mov
mov
mov
xor
sub
push
ljmp
lret
hlt
rolb
pushf
adc
aas
sub
cltd
imul
push
and
pop
sbb
inc
sub
mov
inc
adc
pop
xor
sti
bswap
xor
or
jo
lcall
lcall
mov
lods
jne
mov
push
scas
lahf
lcall
insl
xchg
cwtl
cmp
mov
add
test
verr
jge
mov
and
sarb
stos
loopne
xchg
ss
cmpsb
sbb
cld
lret
outsl
aam
scas
sbb
sbb
loope
pop
mov
mov
push
sbb
loopnew
ret
jns
fildl
xchg
fdivr
push
ret
movsb
repnz
gs
outsl
inc
push
xchg
xchg
fmull
popf
jae
push
outsb
shrl
mov
sbb
aam
pop
and
sub
lahf
lods
mov
out
push
xchg
pop
pushf
fs
lock
mov
adc
loop
sub
ret
inc
mov
hlt
ret
lret
mov
jo
xor
push
push
and
clc
iret
pop
mov
ss
mov
cmpsl
push
push
lahf
push
loop
daa
adc
popf
ror
fwait
cmp
rorl
inc
push
sub
xchg
pop
enter
push
and
stos
push
rorl
inc
mov
push
popa
xorb
ds
stc
test
insl
ret
xchg
xchg
push
out
lods
cmp
cmp
shll
pop
aaa
mov
cli
fistpl
in
hlt
mov
push
bound
cltd
fs
or
int3
and
rclb
push
fwait
inc
scas
xchg
xor
mov
sarl
push
pop
std
lret
push
dec
xchg
cmp
in
sbb
adc
or
imul
cmpsb
gs
mov
mov
jae
push
sti
adc
loopne
ljmp
lds
xorb
jno
inc
cmp
nop
loopne
test
outsl
mov
mov
jo
aaa
pop
shlb
add
jnp
insb
adc
add
pop
cmp
test
inc
fs
enter
mov
mov
das
popf
jns
mov
movsl
jnp
mov
sub
insb
repz
sbb
testb
arpl
cmc
repnz
mov
or
rclb
cld
test
cmp
push
out
enter
inc
add
lahf
aam
inc
xor
cld
sbb
xchg
insl
mov
push
test
adc
cmp
rcrb
stc
xchg
push
inc
sbb
int
sti
jb
push
test
cmpsb
in
mov
cmp
sbb
js
add
push
mov
push
jo
mov
vmovntps
xor
jmp
push
xchg
ds
inc
data16
dec
insb
stc
mov
pop
add
or
mov
je
enter
and
and
popa
inc
mov
pop
inc
push
add
mov
push
lods
xchg
adc
adc
sbb
jne
add
jno
not
pop
out
or
cmp
out
es
mov
sahf
shll
out
xchg
mov
add
add
cmp
das
je
lret
test
sub
and
pop
xchg
add
sub
aas
cmp
sti
out
jae
pop
xlat
sub
cmp
dec
jno
sbb
lret
xchg
mov
test
xor
mov
iret
cmp
hlt
js
out
icebp
rorl
mov
loopne
xor
loope
lds
jmp
and
jbe
pop
adc
pushf
mov
jns
mov
ror
pop
sub
jmp
dec
cwtl
and
dec
mov
sub
lret
sahf
push
jg
sbb
add
or
pop
mov
xlat
mov
cs
insb
jle
xchg
dec
stc
or
aad
lods
lock
cs
loopne
cmp
dec
rorl
sti
movsl
sbb
or
je
dec
lret
sbb
fdivrs
pop
in
mov
pop
cmp
daa
jle
dec
out
pop
xor
icebp
pushf
or
mov
dec
or
push
mov
pusha
loope
stos
sbb
push
adc
mov
mov
sbb
pop
cmp
hlt
sub
xor
add
aas
sbb
xor
mov
mov
push
repnz
mov
pop
repnz
lcall
mov
es
add
adc
pop
jnp
mov
ret
cmpsb
inc
jb
push
jmp
pop
mov
lea
arpl
in
std
mov
sub
pop
dec
cld
test
out
lret
ss
imul
add
mov
ret
fwait
xor
ljmp
fistpl
lret
lcall
mul
jnp
icebp
xor
sub
pop
adc
je
push
lahf
outsl
lods
ljmp
or
and
notb
movsb
pop
sbb
data16
push
loop
inc
repz
sub
mov
or
sub
fistpl
and
adc
inc
pop
or
or
add
push
dec
pop
dec
pop
push
stos
mov
stc
fnstcw
cmpsl
aam
mov
add
rcll
out
cmp
test
aaa
xor
inc
mov
jae,pt
loopne
fdivl
pop
mov
std
push
outsl
sbb
pop
push
jb
sbb
add
and
cmovnp
and
push
popf
pop
gs
outsl
sbb
stc
xchg
push
pop
mov
inc
jb
push
sti
xchg
lds
mov
sub
jp
jbe
mov
out
fisubrs
sub
out
shrb
adc
cwtl
sub
lcall
test
loope
sbb
mov
sbb
and
sbb
or
shrl
mov
lahf
cmp
aam
into
shrl
movsl
outsl
push
inc
test
cmp
das
mov
xor
jl
ficomps
adc
es
adc
mov
pop
push
pop
adc
iret
ret
pop
aam
lock
int
inc
sbb
mov
aas
mov
int
fwait
pop
test
xor
nop
push
add
jno
xchg
mov
pop
mov
mov
cmp
sub
pop
outsl
mov
andb
repz
testb
dec
mov
inc
stos
sti
in
clc
aad
mul
jmp
dec
xchg
out
cld
cmpsb
das
mov
mulb
mov
ja
push
cmovo
dec
cmp
aad
push
shl
inc
outsb
mov
sbb
adc
sub
and
jns
sahf
add
sbb
test
cmp
jo
xor
xor
loope
fisttps
xchg
inc
or
push
les
test
and
add
mov
dec
sbb
mov
loopne
insl
mov
repnz
repnz
out
inc
sub
ss
dec
js
fwait
jns
shll
mov
cmp
in
pusha
lret
jmp
ljmp
lock
leave
push
pop
pop
jg
movsb
gs
add
xchg
shll
adc
or
outsb
sbb
jne
fnstcw
xchg
shl
aad
jne
cmp
dec
pop
cs
lret
call
out
xchg
jno
out
xor
mov
cmp
cld
pusha
cld
cmp
push
pop
aad
lods
push
fistpl
test
jae
xchg
out
ret
int
sbb
bound
sbb
in
cmpsl
imul
mov
mov
or
lahf
cmp
pop
cmp
shr
js
ja
sbb
sbb
inc
and
xchg
mov
dec
xchg
orb
push
mov
loope
sub
inc
mov
call
hlt
call
mov
pop
jg
ss
das
adc
lret
xchg
jns
cmc
out
lret
mov
in
or
push
and
cltd
push
jmp
and
sbb
lret
sbb
imulb
aas
sar
jl
pusha
push
dec
cmpsl
dec
outsl
or
sub
dec
jp
pusha
shr
cmc
scas
enter
inc
hlt
dec
adc
sbb
xchg
sti
movsb
xor
orl
pop
and
test
or
in
or
xor
int
inc
dec
sub
pop
sti
lods
xor
insl
mov
xchg
or
vzeroall
shll
stc
jg
fdivr
jg
or
pop
leave
cmpsl
mov
ss
mov
push
lock
mov
orb
mov
in
jne
mov
mov
mov
xchg
popf
pop
test
mov
xchg
jge
xor
jo
jns
push
cmpsb
dec
add
bound
sub
inc
mov
jecxz
stos
sbb
gs
sbb
inc
inc
mov
sahf
xor
xor
imul
out
faddl
sub
xchg
jl
mov
mov
add
aam
jae
push
lea
push
lcall
mov
cwtl
jns
xchg
movzbl
inc
lds
or
inc
mov
loopne
inc
inc
rcrl
jo
bound
mov
sub
xor
pop
out
test
push
inc
jbe
nop
pop
outsb
pop
into
aam
rcll
outsl
scas
and
adc
and
or
lods
xor
xorb
xor
call
pop
loop
fsubs
add
sub
aad
add
jle
or
push
daa
sub
push
es
movsb
divb
mov
loop
daa
scas
pop
xor
dec
je
cmp
add
aam
inc
xchg
adcb
sbb
aas
xchg
or
sub
mov
cmp
sub
push
dec
and
out
scas
bnd
enter
call
pop
in
ret
ja
je
jl
xlat
mov
or
outsb
sub
mov
add
out
jge
xor
lds
out
mov
test
push
push
push
inc
or
ficoml
repz
xchg
icebp
pop
push
in
in
pusha
mov
push
ret
xchg
nop
pop
dec
sub
add
insl
test
mov
sbb
pushf
inc
popa
and
and
lods
cmc
and
xchg
mov
stos
popf
push
pushf
mov
ret
mov
jmp
test
ret
adcb
push
fldcw
mov
fwait
iret
sbb
xchg
jns
movsb
add
mov
push
aam
pop
inc
sbb
outsb
je
mov
adc
aad
jnp
pop
rol
dec
int3
mov
imul
sbb
ja
dec
fstps
inc
lea
mov
fbstp
sti
mov
data16
out
ret
sti
cltd
stos
cmp
adc
sub
xlat
pop
aad
or
lret
stos
fistpll
cltd
jp
lcall
insb
mov
orb
dec
add
lcall
sbb
out
mov
cmp
fstl
and
add
aaa
xchg
leave
cmp
call
insb
or
adcb
or
push
jnp
pop
shrl
cltd
sbb
aaa
scas
adc
test
pop
pop
pop
iret
pushf
gs
mov
and
push
lds
ret
in
repz
inc
mov
xor
dec
int
adc
sub
lds
mov
pusha
xor
scas
cmp
xchg
jmp
testl
out
inc
and
or
push
dec
dec
push
pop
push
pop
dec
idivb
jns
pusha
inc
or
push
add
fucomi
pop
shrl
aad
ret
insb
and
pop
inc
or
mov
inc
insb
stc
imul
sub
lret
adc
movsb
pop
xchg
adc
sbb
popl
sbb
mov
ja
or
dec
mov
fsubs
inc
pushf
cs
sbb
xchg
mov
loopne
test
dec
lahf
daa
lcall
inc
fbld
sbb
xchg
cs
mov
int
mov
sbb
pusha
cmp
ljmp
inc
jo
test
les
stos
push
cmp
iret
in
bnd
in
scas
cmp
jge
clc
sbb
xchg
adc
mov
mov
fistpll
add
adc
xchg
sbb
insl
xlat
cmp
outsb
jp
sbb
imul
rcr
or
mov
mov
lahf
dec
pop
adc
mov
ja
and
popf
lret
clc
lds
pop
pop
adc
fs
sbb
cmp
std
movsb
lahf
pop
sbb
popa
fdivs
dec
cmpsb
xchg
lahf
adc
xchg
sti
outsb
mov
faddl
enter
sub
push
or
fisubrs
mov
ja
mov
sub
push
in
fistpll
je
test
inc
aam
inc
dec
or
pushf
add
lea
cmpsb
mov
mov
ja
jb
testb
xor
pop
lcall
shl
pop
mov
and
mov
push
ja
popa
out
rorl
or
jecxz
jo
faddl
mov
jno
ret
mov
adc
andps
mov
jle
popf
gs
jl
inc
dec
cmp
sbb
test
push
je
jnp
cmpsl
lret
pop
adc
fstl
aam
ss
loop
rorl
cmp
in
jnp
add
mov
push
inc
mov
jbe
mov
sub
cmp
xchg
daa
sub
xor
out
mov
jno
add
popf
inc
cmpsl
jns
mov
leave
pop
add
pop
aam
pusha
rcll
push
mov
repz
sarb
pop
jecxz
aad
in
mov
call
push
push
pop
clc
arpl
xor
or
xor
idivl
out
push
out
cmpsl
jmp
push
mov
cmp
repz
in
stos
lret
sarb
call
mov
ds
add
addr16
sub
inc
stos
mov
pop
push
cli
aaa
mov
push
cmp
inc
jo
xor
inc
outsl
push
in
xor
xchg
movsb
popf
icebp
popa
dec
repz
int3
cltd
arpl
mov
fsubp
sbb
hlt
js
addb
orb
mov
sbb
pusha
jnp
xor
push
jno
imul
loop
inc
cmp
cmc
sbb
das
and
sahf
mov
punpckldq
or
cmp
inc
mov
jne
stos
cmpl
in
mov
call
mov
push
ljmp
out
cmpsb
jbe
mov
jle
stc
shl
lret
mov
jae
and
xchg
scas
xor
jg
mov
pop
pop
iret
sbb
sbb
cmp
repz
lods
or
or
lret
stos
movsl
mov
xor
loope
mov
or
jmp
int
mov
fnstcw
test
lods
bound
pop
jo
negb
lods
and
dec
push
in
cmp
mov
xor
cmp
lret
ljmp
sub
imull
cltd
jnp
stc
mov
xor
pushf
jge
sbb
add
in
inc
dec
jmp
adc
out
cmpsl
inc
dec
aad
pop
xchg
pop
pushl
mov
inc
dec
xor
and
mov
fistpl
loopne
push
pushf
inc
out
clc
push
rcll
scas
repnz
test
mov
adcb
call
int
shlb
imul
cmpb
cli
sbb
mov
jae
xchg
or
push
sahf
sbb
test
pminub
mov
hlt
xchg
fildl
pop
add
loope
dec
popf
add
sbb
aas
sbb
push
mov
mov
test
ljmp
mov
les
dec
ja
fdivrl
xlat
and
lock
xchg
cmp
pop
adc
jo
xor
imul
pop
mov
push
mov
repz
int
xchg
in
in
stos
cwtl
xchg
movsl
xor
pop
dec
push
ja
jbe
sub
aad
loop
jbe
mov
cmc
nop
loopne
std
mov
insl
jnp
push
nop
clc
jl
sar
cli
add
xor
test
mov
sbb
push
inc
mov
pop
mov
rolb
and
repz
cmp
fcomps
xor
inc
loopne
cli
movsb
and
xchg
jmp
stos
cli
les
mov
das
dec
mov
ljmp
inc
dec
rolb
mov
cmpl
jno
mov
jne
cli
inc
dec
dec
jmp
fidivrl
mov
test
pusha
psrad
push
mov
adc
mov
fiaddl
popf
sub
pop
hlt
lret
push
ss
shrl
mov
or
test
pop
or
mov
sub
xor
fistps
mov
mov
push
ljmp
lea
add
push
leave
andl
nop
fdivp
fs
jge
mov
cmp
daa
sub
rorb
mov
hlt
push
out
mov
mul
sub
ljmp
movsb
imul
scas
negb
fstps
sbb
xor
aad
mov
cmp
xchg
push
shlb
jge
lret
or
dec
jae
in
cmp
and
mov
push
pop
pop
dec
push
dec
push
pop
pop
mov
dec
and
add
push
add
sbbb
dec
ds
lret
push
aaa
addr16
mov
rcr
icebp
ffreep
xor
orb
xchg
loope
ja
dec
inc
aaa
mov
jne
bound
repnz
adc
lret
xchg
fxch
mov
je
ffree
dec
xor
sub
lods
push
aam
std
data16
cltd
addr16
rclb
sarb
pop
xlat
pop
lret
cmp
ret
pop
jo
lret
fs
aam
or
mov
scas
cli
nop
and
xchg
into
andl
mov
pop
push
fwait
adc
adc
and
jle
fwait
inc
lret
and
inc
adc
ror
out
mulb
mov
and
xor
sbb
clc
or
xor
push
cs
stc
arpl
xor
cmp
loope
insb
and
js
rcrl
pop
dec
mov
cs
frstor
aaa
addr16
xlat
popa
sbb
inc
lods
cmc
test
mov
sti
inc
jp
lds
addb
ret
repz
cld
adc
adc
xor
mov
inc
or
or
adc
dec
mov
push
adc
mov
dec
arpl
xchg
outsl
dec
dec
fidivrs
mov
loop
dec
jecxz
add
filds
dec
cmpsb
push
fisttpl
xchg
subb
push
push
or
xor
sti
adc
pop
fmull
mov
aad
sub
pop
sahf
cmp
dec
or
xor
aas
mov
xchg
xor
cmp
mov
loope
out
sub
fstpl
or
cmpsb
adc
cltd
cld
aaa
ret
aam
daa
inc
fistpll
jge
shl
notb
push
xchg
in
bound
loop
hlt
xlat
sub
cmc
add
roll
mov
push
xor
jbe
pop
negb
test
jge
movsl
jo
inc
xor
jecxz
outsb
leave
test
mov
dec
inc
mov
mov
stos
push
pushf
fwait
push
test
into
mov
ja
fcmovnb
lret
ds
stos
int3
lea
xchg
faddl
or
sub
xchg
cltd
scas
pop
movsl
xchg
insb
cmp
lcall
add
sti
sub
dec
cld
sbb
sahf
jo
add
inc
shll
out
cld
pop
or
push
insb
xchg
xchg
pop
dec
jmp
scas
in
mov
adc
std
std
imul
mov
cld
pop
or
dec
xchg
xchg
dec
xchg
in
out
mov
or
sub
or
xchg
ret
mov
xchg
jg
rorl
adcl
loopne
test
or
aam
pusha
push
outsb
ret
cli
adc
cmp
test
mov
cmp
jle
jecxz
mov
or
xchg
and
call
lds
scas
rcr
sbb
das
mov
daa
ret
ret
adcb
mov
incl
les
outsl
mov
or
in
jae
test
lret
lds
cli
bound
or
xchg
rorb
fnstenv
fs
in
pop
and
mov
fdivs
insl
sahf
jbe
xor
dec
jnp
and
jmp
cmpl
ljmp
mov
enter
mov
mov
pop
sbb
std
sub
inc
dec
lea
add
sub
es
mov
mov
inc
fucomip
xchg
xchg
mov
pop
je
js
push
and
std
inc
call
out
inc
fisubrs
enter
dec
push
cld
dec
pop
bound
and
push
lock
adc
scas
sbb
push
mov
sti
mov
inc
cvttps2pi
pop
or
cmp
rclb
insb
lods
int
ds
inc
jbe
lods
push
jns
out
out
fsubl
cs
inc
push
ret
xor
mov
push
dec
jmp
inc
add
sbb
pop
add
jbe
in
test
xchg
dec
mov
mov
adc
ret
push
and
into
out
fldl
sbb
rcr
cmpl
push
push
in
into
mov
adc
mov
mov
cmpsb
jge
adc
lcall
inc
lcall
inc
daa
in
jno
jb
les
je
pop
popa
push
pop
cld
lret
movsb
stos
push
jp
dec
xchg
cmp
movsl
inc
call
lahf
rorb
fcomp
jnp
xchg
ror
repz
push
xchg
mov
jle
dec
xchg
ret
bswap
mov
into
pop
scas
out
leave
pop
adc
sahf
imul
repnz
adc
gs
push
sub
stos
mov
in
mov
ja
sub
cmpsb
rolb
in
adc
pop
pop
mov
jmp
dec
sbb
dec
movsl
clc
sub
add
cmpb
mov
fcomps
arpl
insb
push
aad
cmp
xor
push
sub
sub
inc
lods
inc
mov
jae
pushf
jb
fmuls
repz
dec
adc
rorb
xchg
rorl
cltd
jo
push
mov
sub
mov
pusha
mov
std
sub
cld
daa
dec
jp
or
lds
or
or
add
add
mov
push
cmc
dec
push
inc
pop
jae
pop
rorl
loop
mov
and
mov
das
je
mov
incl
arpl
lock
ss
pop
mov
imul
cmp
xchg
dec
cmp
orb
sub
gs
imul
mov
sub
cltd
test
test
sarb
cmp
int
cli
into
xchg
inc
stc
fcomp
and
sbb
ror
sar
loope
fcomps
or
and
mov
dec
push
pop
fwait
push
cmp
cmp
js
test
push
adc
cmc
jecxz
mov
push
int3
fsubs
mov
sub
and
jp
inc
mov
dec
movsb
adc
repnz
in
ds
out
sub
insl
idivl
jo
dec
mov
sbb
sub
repz
sbb
add
add
add
push
push
push
inc
push
test
or
xor
add
roll
add
add
out
or
addl
rcrb
negb
xor
outsb
inc
ror
ret
scas
xchg
les
in
jmp
test
icebp
sub
jl
call
xchg
or
sub
ss
mov
out
fstl
pop
hlt
dec
enter
pop
loopne
sbb
and
stos
jmp
popa
outsl
rcll
sub
or
in
loope
mov
outsb
push
cwtl
push
add
xor
xlat
cmp
sti
and
jmp
xchg
out
adc
push
and
rcl
pop
scas
adc
stos
repnz
mov
mov
adc
xchg
mov
or
mov
imul
xor
fst
stc
sub
lea
xor
les
xor
loopne
sub
mov
mov
incl
notl
bound
dec
and
cld
mov
fsub
mov
jmp
jbe
ja
sarl
out
adc
fistpl
pop
jg
pop
xchg
cld
xchg
pop
mov
xchg
test
in
xor
loop
hlt
iret
test
jecxz
into
cmovge
popf
mov
ljmpw
xchg
aam
outsl
sbb
inc
jne
pop
push
sbb
rcll
popf
aaa
dec
es
push
in
push
inc
in
push
leave
adc
out
mov
push
pop
dec
out
les
dec
sub
lods
xor
cmpsb
rdpmc
stc
pop
pop
cmp
daa
pop
addr16
adc
clc
subl
int
push
outsl
xor
mov
inc
and
mov
femms
stos
xlat
xchg
repnz
jp
cmp
dec
into
adc
push
cmp
push
or
scas
adc
fbld
icebp
push
lock
imul
mov
xor
mov
clc
test
icebp
xchg
dec
sbb
scas
jns
testb
sub
subl
jmp
add
and
ja
js
and
and
loopne
sbb
jecxz
jno
pop
jnp
or
add
lods
pop
push
wbinvd
nop
inc
lock
mov
adc
fucomip
test
xor
mov
or
mov
xor
jo
lods
mov
popa
push
mov
mov
in
in
jg
in
push
mov
mov
cltd
adc
ret
insl
pop
lock
xchg
push
outsl
or
sub
fwait
cli
outsb
rcr
cmc
or
push
mov
pop
ret
pusha
clc
repz
leave
xchg
int
inc
popf
pop
push
xchg
call
xchg
dec
ja
cmpsb
jg
lods
rorl
popa
xor
dec
movsl
xchg
int
fcmovbe
mov
add
sbb
cmc
pop
loopne
adc
mov
leave
sbb
call
in
cmp
fstpt
outsb
jo
imul
xchg
and
pop
inc
aam
out
daa
frstor
adc
in
push
xlat
or
cmpsl
xchg
cs
test
dec
and
xor
js
cld
jae
push
outsl
mov
xor
insb
fdivrl
mov
repz
aas
sbb
xchg
push
stc
test
push
jae
mov
xlat
insb
jno
mov
pop
hlt
imul
xor
adc
push
xchg
lods
push
pop
jae
push
xchg
lds
adc
mov
cmpsb
scas
mov
jecxz
inc
loop
adc
pop
mov
adc
mov
adc
push
mov
cmp
mov
adc
or
jnp
cmp
decl
lods
or
pop
pop
sbb
push
add
loope
cwtl
xchg
push
imul
push
pop
add
and
scas
inc
xchg
das
push
into
insb
cmpb
xor
xchg
rorb
add
pop
call
rcll
fwait
clc
mov
fmull
imul
inc
mov
movb
push
shll
mov
sbb
jnp
out
insl
sbb
jecxz
adc
push
orb
aam
add
movsb
and
dec
sbb
inc
dec
jb
xor
mov
add
pop
subb
fidivrl
or
push
rolb
in
pop
sub
aad
daa
decl
or
or
pop
test
mov
mov
test
pusha
test
xor
jge
push
xchg
rcrb
in
and
test
xchg
xchg
push
into
pop
aad
es
mov
push
mov
mov
test
jge
push
adc
filds
mov
repz
cs
popa
les
rclb
push
jl
mov
mov
pop
mov
subb
sahf
sub
inc
dec
push
jp
jmp
mov
add
mov
lcall
sarb
adc
or
cmp
jg
and
push
addb
sub
lahf
rcl
push
sbb
push
pop
ljmp
cmp
popa
jno
push
xchg
or
add
aas
dec
adc
jle
cmp
lods
stos
mov
xor
mov
cmc
jae
jne
inc
push
mov
dec
es
fisubrs
inc
adc
or
imul
xlat
mov
mov
fwait
mov
sbb
mov
out
sbb
js
mov
aam
jge
cmp
dec
leave
xchg
pop
cmp
sub
dec
sahf
cmp
insb
push
push
sub
adc
mov
xchg
mov
adc
cmpsb
int
scas
jl
cmp
mov
in
inc
ss
je
xor
mov
rolb
lahf
sbb
inc
push
test
jns,pt
gs
out
orl
inc
stos
rorb
sbb
outsl
mov
xchg
out
and
lods
lea
xchg
inc
xor
stc
jg
fimull
fsubs
mov
push
sbb
cmpsb
cmpsl
into
aam
aam
nop
mov
xchg
sub
add
mulb
mov
das
mov
or
push
mov
arpl
shll
sbb
stc
mov
sahf
or
mov
mov
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
ret
pop
add
roll
add
nopl
xor
xlat
das
xchg
or
and
rolb
rcl
outsl
mov
add
push
sti
xchg
mov
mov
mov
push
cmp
pop
jns,pn
mov
lods
mov
jg
cmp
mov
insl
decb
je
pop
sbb
or
les
call
or
mov
inc
and
push
les
or
scas
jecxz
xchg
and
mov
xor
hlt
adc
in
adc
and
pop
ljmp
mov
pop
and
rolb
aad
test
js
lret
or
mov
xchg
push
incl
add
out
test
pop
and
push
add
dec
addr16
ds
xor
inc
insb
add
aam
dec
dec
add
pusha
mov
pop
push
mov
or
mov
cwtl
mov
inc
lcall
add
call
xorb
imul
addr16
jmp
pop
add
ret
testl
mov
cmp
into
xor
xor
mov
jl
push
imull
xor
inc
cmp
push
sub
ret
fld
or
enter
dec
lds
lcall
jb
jecxz
jne
scas
jo
andb
or
xchg
xlat
adc
pop
adc
sbb
flds
cltd
popf
adc
aam
jmp
inc
dec
test
ljmp
stos
sbbb
pop
lods
enter
ret
dec
pop
je
adc
in
mov
cmp
push
and
jo
or
stc
ljmp
cmp
std
int3
stos
and
in
stc
push
ljmp
jg
out
les
mov
icebp
pop
imul
pushf
mov
dec
test
sub
lods
adc
sub
testb
popf
shll
sbb
fadds
in
mov
and
add
sbb
sti
or
xor
lods
call
inc
inc
adc
push
faddl
sti
dec
mov
push
cmp
fidivrl
xor
outsb
lds
push
seta
repz
xchg
xchg
scas
mov
inc
or
inc
fmull
cli
cmc
inc
shll
adc
push
fs
iret
lcall
inc
sub
xchg
or
std
and
jbe
in
xchg
mov
sti
inc
mov
pushf
addr16
pop
or
stos
mov
sti
insl
notb
data16
dec
dec
sbb
repnz
or
cmc
or
jo
pop
es
fcompl
pusha
xor
xor
je
xchg
pop
mov
push
pop
cmp
stc
jmp
lret
or
cmpb
add
out
fistpl
daa
inc
adc
jb
add
shll
sbb
push
insl
mov
push
in
fistl
fidivl
movsl
sahf
mov
jne
xor
pop
sub
stos
mov
pop
shl
jbe
mov
add
cmp
pop
jmp
aad
push
push
xchg
push
lcall
xor
mov
pop
pop
jmp
dec
lea
add
cmp
xchg
out
or
outsb
pop
or
js
cmp
inc
push
fstps
xorb
pop
xchg
push
and
xchg
out
adcb
ret
dec
mov
stos
les
xchg
aaa
addr16
mov
sbb
outsb
shll
pop
xor
stos
push
mov
icebp
mov
mov
stc
outsl
jne
imul
mov
repnz
ficompl
xchg
pop
adc
out
mov
cs
adc
cmp
icebp
aam
or
js
sbb
arpl
or
mov
mov
jno
push
push
addr16
push
sub
fsubs
mov
xor
sbb
mov
lods
and
jge
jb
jne
adc
dec
pushfw
psraw
or
mov
mov
mov
aas
mov
jp
adc
shrb
lods
xor
rcl
cwtl
cmp
pushf
fcom
in
xchg
xchg
jg
mov
imul
cmp
cmp
push
test
adc
divb
dec
jmp
fs
ja
cmp
addr16
cmp
push
cs
aam
pusha
inc
xor
outsl
jae
xchg
popf
pop
test
mov
adc
xor
push
and
sub
mov
dec
jecxz
in
cmp
adc
adc
add
iret
pop
adc
inc
adc
aaa
and
sub
and
xor
jo
sub
int
and
xchg
jb
cmp
xor
test
out
jb
test
inc
ss
lret
out
mull
andb
and
fisubl
mov
aas
inc
and
xadd
pop
sub
clc
inc
cmpsl
mov
xor
popa
mov
add
pop
hlt
or
ljmp
adc
sbb
cli
sub
dec
mov
mov
sbb
sarl
loopne
mov
adc
leave
push
mov
scas
outsl
mov
mov
out
sbb
add
jl
adc
sub
sbb
or
std
lcall
and
call
sti
clc
xor
out
cmpsb
addr16
lret
imul
test
add
adc
sub
xchg
jo
in
and
or
pop
and
push
jle
imul
cwtl
out
js
lock
in
jbe
int3
loopne
push
sbb
bound
popf
pop
mov
jmp
mov
jnp
sub
add
mov
add
lock
roll
xchg
das
cmpsb
test
inc
in
add
in
inc
adc
add
sbb
dec
pop
sahf
imulb
call
push
pusha
mov
xor
out
push
xchg
cmpsb
stc
out
aaa
movsl
jmp
xor
test
scas
insl
cmp
inc
pop
sub
pop
jae
aas
xchg
out
xchg
popf
push
pop
add
and
sbb
adc
and
mov
or
dec
push
xlat
push
mov
insb
push
xchg
adc
add
out
push
mov
add
push
inc
push
push
push
push
push
inc
rorl
popf
icebp
insb
cs
fcmovu
add
roll
add
or
cmp
notb
xor
fisubrl
out
adc
adc
inc
shlb
adc
cmp
lret
mov
xchg
lods
push
loop
mov
fldl2e
cmp
jg
jno
cmp
dec
pop
or
mov
repnz
ja
andl
cmp
add
jnp
rol
loope
in
clc
jmp
inc
fsub
inc
cmp
int
xchg
cmc
sbb
sbb
loope
imul
sub
jmp
push
ja
sbb
cmp
cmp
dec
jnp
cmp
in
scas
cmp
int3
popa
loopne
adc
add
cmpsl
cli
mov
ljmp
mov
jle
adc
add
dec
mov
lret
out
sbb
in
std
cmp
daa
and
or
mov
stos
aas
imul
jmp
dec
subb
sarl
add
pusha
xor
push
push
lds
icebp
aas
insb
sbb
push
mov
adc
jb
pop
push
cmpsl
ljmp
add
les
pandn
cmp
sub
cmp
ljmp
push
push
push
push
xchg
or
jne
rorb
cmp
cmp
mov
or
in
xor
ss
out
clts
xchg
stos
mov
outsl
leave
mov
stos
adc
mov
aaa
icebp
xor
xchg
dec
xchg
push
jmp
mov
push
mov
add
ret
pop
mov
es
stos
lods
adc
insb
insl
into
xchg
dec
jbe
sti
mov
push
mov
iret
and
push
jge
mov
mov
pop
ficomps
ja
xor
xchg
jae
pop
hlt
xchg
gs
pop
into
push
out
pop
mov
jns
or
sbb
jnp
xchg
push
mov
xchg
insl
jbe
inc
jo
xchg
xchg
lret
xchg
push
fcompl
iret
div
repz
or
lcall
and
adc
lret
xchg
dec
lods
inc
or
mov
jo
in
sub
mov
nop
adc
xor
pop
out
mov
sbb
xor
xor
dec
sbb
mov
out
adc
aad
add
aaa
mov
or
divl
adc
out
cmpsb
repnz
shll
insl
shrl
add
push
mov
sub
inc
ljmp
enter
daa
aad
aam
mov
rorl
push
cwtl
sub
andl
jb
mov
push
or
sub
stc
and
dec
xlat
addr16
out
mov
scas
jge
pop
inc
mov
xor
jl
clc
in
pop
mov
add
push
xchg
jmp
inc
push
leave
in
call
jge
in
mov
dec
mov
push
xchg
adc
add
call
fstpt
mov
push
pop
xchg
test
popf
inc
pushf
les
scas
inc
sub
sub
pop
lret
mov
lcall
xchg
outsb
je
add
add
jne
sub
pop
js
sti
das
fs
insl
adc
adc
and
add
cmp
mov
jns
test
jbe
jae
mov
or
xorb
pop
pop
pop
xchg
sbb
shll
movsb
repz
fsubrl
inc
test
mov
roll
pop
sub
mov
and
in
xchg
sahf
sub
adc
add
pop
mov
sbb
js
fidivs
sbb
mov
jo
inc
adc
pop
sub
mov
cmc
sub
int3
pop
addb
sbb
movsb
int3
leave
add
out
push
out
jge
sub
mov
pop
nopw
push
add
jmp
push
xchg
pop
dec
fisubrl
cli
inc
test
sbb
into
rclb
xor
sub
sarl
out
movsb
dec
adc
dec
add
insb
or
ret
aad
pop
add
popf
inc
enter
mov
out
cmp
mov
mov
or
addl
xchg
in
xchg
repz
push
mov
in
popf
or
or
add
ret
popa
fdivrs
pop
adc
push
imul
inc
ss
in
inc
imul
xchg
pop
add
inc
ljmp
jnp
lods
pusha
out
cmp
loopne
dec
push
xchg
fcomip
adc
js
sbb
arpl
inc
or
repnz
repz
cmp
sub
or
and
push
mov
in
ss
stc
mov
pop
lret
pusha
inc
bnd
or
mov
or
xor
movsb
xchg
inc
jg
inc
outsl
lea
cmp
loopne
cmp
cmpb
cmpl
cmp
loop
in
pushf
push
and
push
xor
int
out
inc
fcoms
sti
add
jge
adc
inc
cmp
push
hlt
cmp
push
cmp
int3
insl
inc
dec
notl
mov
out
sub
insl
jo
xchg
lret
pushf
out
loope
out
mov
or
push
fimuls
popf
jbe
mov
and
sti
iret
loop
hlt
rcrl
cmp
pop
push
scas
mov
lret
jl
fnstcw
sbb
cmp
push
sbb
cmp
lcall
pushf
and
and
ud1
stc
jno
dec
out
xchg
push
mov
outsb
jg
outsl
dec
mov
sbb
test
popa
cmp
xor
clc
cmp
mov
or
jecxz
inc
and
and
mov
loopne
push
repnz
shrl
mov
mov
fcmovnu
xor
jp
outsb
inc
sarb
fwait
sub
sbb
hlt
push
cmpsb
xor
jb
and
pop
pop
mov
mov
dec
add
push
push
pop
push
pop
pop
xchg
stos
mov
pop
lods
jecxz
add
push
add
mov
repnz
mov
lret
mov
xchg
xor
pusha
ja
jae
stc
daa
cltd
adc
jb
je
jge
aad
es
test
jns
add
inc
inc
loop
int3
in
jns
mov
cmc
or
or
dec
cmpsl
dec
xchg
jmp
ss
adc
xchg
mov
icebp
or
jns
pop
nop
idivb
or
sbb
xor
fadds
es
pusha
pushf
std
out
fdivl
xorl
add
pop
ficoms
dec
cmpsl
or
cmp
movl
ds
out
dec
xchg
ljmp
ja
cld
xchg
jg
pusha
dec
mov
push
mov
inc
iret
gs
cltd
mov
dec
xor
xor
icebp
add
or
sub
cmp
vmread
outsb
out
fisttps
fidivs
dec
bound
dec
fcom
sbb
dec
test
or
popf
sub
cli
xor
fsubrs
push
sbb
sbbl
out
popa
icebp
test
dec
xor
enter
mov
mov
adc
test
add
fcomps
shll
jecxz
lret
jb
jno
fidivl
adc
and
dec
mov
push
repnz
ret
jo
cwtl
mov
jge
addr16
or
adc
nop
xor
outsl
popf
mov
pop
into
call
nop
rolb
sahf
in
mov
push
mov
or
mov
jne
pop
arpl
lods
sahf
test
lret
ds
cmp
and
inc
xor
jns
mov
fidivl
or
test
test
lock
jbe
test
jmp
shl
notl
je
lods
stc
bound
mov
test
xor
push
jge
xor
loop
adc
cmp
sub
nop
mov
lahf
pop
fsubr
pusha
xchg
stos
mov
add
jmp
sbb
adc
stc
mov
dec
js
test
pop
mov
aam
xchg
push
mov
xchg
sbb
push
cmc
mov
arpl
pop
dec
je
sub
dec
mov
clc
xor
test
push
xchg
and
xchg
js
pop
icebp
leave
jge
lahf
and
jb
sbb
jge
mov
faddl
jle
and
stos
rcrb
jp
mov
loope
test
mov
xlat
shlb
xchg
notl
daa
push
sub
dec
xchg
or
cmp
loope
out
pop
je
push
int3
cltd
outsb
insb
xor
xchg
and
jb
mov
jb
mov
out
mov
or
sbb
loop
jmp
ljmp
arpl
mov
mov
lret
mov
icebp
stos
cmp
mov
aam
mov
sahf
jge
pop
jo
lea
loopne
mov
mov
xlat
push
cmp
test
insb
cli
push
inc
mov
push
pusha
dec
xchg
arpl
pop
dec
sarl
adc
pop
inc
sub
sbb
mov
shlb
pushf
xchg
arpl
mov
stc
cmc
jae
dec
adc
inc
jmp
cmpsl
cld
pop
dec
leave
test
lcall
sbb
cld
and
int3
outsb
mov
dec
mov
out
adc
pop
sub
int3
xor
test
inc
xor
fimuls
popf
test
stc
nop
std
clc
jno
out
sbb
inc
outsl
sbb
imul
inc
pop
fs
jp
mov
and
daa
sarb
adcb
rcr
int
inc
cmp
arpl
mov
in
popa
shll
test
out
and
lods
mov
push
test
adcb
call
push
rorl
stos
cmovl
mov
int
mov
mov
jp
cwtl
cmp
adc
aas
jo
or
lods
add
push
out
data16
dec
aaa
sbb
nop
ja
out
mov
dec
xchg
shll
add
mov
sbb
cmc
bound
stos
lea
je
mov
shll
mov
inc
or
xchg
testl
add
shll
mov
enter
mov
mov
roll
leave
pmovmskb
xchg
lret
scas
ljmp
fcompl
push
push
mov
inc
rolb
iret
sub
jb
mov
jbe
dec
adc
test
and
and
sub
scas
sbb
inc
hlt
mov
aas
and
push
mov
loopne
jp
mov
inc
out
push
add
lahf
loope
leave
call
mov
mov
cmp
mov
add
icebp
or
hlt
cmpsb
or
nop
inc
pop
sbb
and
sub
daa
in
mov
inc
lret
loop
lcall
je
xor
mov
push
gs
aad
or
dec
inc
fistl
push
mov
sar
lret
dec
insl
pop
cmc
shll
hlt
add
jge
daa
xchg
ret
adc
shlb
inc
add
pop
cmpsl
push
mov
or
mov
mov
mov
int
push
cmp
mov
push
das
in
insl
clc
jge
xchg
stos
mov
fistpll
xor
sbb
lcall
cli
rol
jno
pop
clc
cld
mov
lea
movsb
jo
shr
rorb
popa
es
xor
std
push
inc
pop
das
jmp
and
in
sub
pop
fistps
jmp
pop
frstor
add
orb
xor
sarl
andb
stc
sub
jecxz
out
js
push
xchg
lret
add
mov
sub
jle
out
lret
jecxz
adc
sub
aam
mov
lods
push
aaa
pop
ljmp
sub
popa
loopne
fs
jne
mov
cld
cmc
test
insb
hlt
test
ja
add
es
cwtl
clc
das
sub
inc
jno
dec
inc
push
push
pop
push
dec
pop
idiv
vphaddwq
add
ljmp
call
daa
add
push
scas
dec
inc
mov
ror
lahf
int3
in
dec
jno
xor
push
stos
mov
shrb
aaa
push
sti
mov
das
dec
add
pop
pop
jmp
shr
ljmp
pop
adc
xchg
or
out
popa
dec
jecxz
cld
pop
popf
arpl
fiadds
lods
jnp
jbe
add
lds
cmp
mov
or
sti
mov
dec
push
mov
cmp
sub
in
sub
sub
inc
jp
xchg
pop
xchg
movsb
sub
dec
and
inc
push
and
inc
mov
ret
mov
ss
jp
dec
pop
fwait
xchg
pop
push
cmp
sbb
mov
mov
jle
and
dec
and
pop
xor
pop
adc
ljmp
into
out
jmp
scas
mov
sbb
notl
ja
or
dec
ret
shrb
add
sarl
mov
sti
cmp
fs
dec
test
aam
in
cmpsl
stc
lret
scas
aaa
rcrl
mov
nop
js
push
sahf
imull
mov
pop
jbe
imul
mov
inc
cmpl
xchg
cli
mov
dec
fs
fimull
jmp
hlt
cwtl
cmp
lds
fucomi
dec
or
mov
pop
or
mov
testb
jo
push
aas
inc
add
arpl
mov
insl
xchg
lret
addr16
pusha
sbb
cmp
pop
les
scas
add
ljmp
inc
jg
add
add
push
xor
xor
sbbl
or
ss
shl
subb
int
sbb
sbb
sub
pusha
out
cli
nop
cmp
ret
push
xor
push
push
sbb
stos
nopl
jecxz
shlb
pop
movl
mov
lds
fsubrs
adc
mov
aad
xor
push
lods
xlat
loope
push
daa
adc
test
fldcw
lret
pop
push
jle
mov
jp
mov
clc
jp
dec
xchg
jb
je
cmp
pop
repnz
push
dec
xchg
aaa
adc
jg
fs
jnp
sbb
lea
in
pop
jo
popl
push
lcall
test
enter
test
push
rcrl
mov
adc
jnp
aas
addr16
pop
movsl
sbb
icebp
inc
jno
sbbl
stos
add
jbe
fstl
sbb
xchg
mov
fimull
xor
pop
in
rcrl
or
sbb
shrb
and
cs
jns
mov
mov
xchg
dec
xlat
and
cld
scas
jle
fisubrs
mov
mov
cmpsb
out
js
rcrl
cmp
sbb
ljmp
outsl
into
or
and
push
data16
push
or
jo
mov
je
jg
jae
gs
xchg
jno
jo
fldcw
xor
inc
shl
ret
mov
shll
jno
sub
mov
add
mov
mov
mov
pushf
hlt
jo
push
sbb
je
pop
icebp
ljmp
out
xchg
lahf
into
fs
daa
or
loope
and
add
out
call
je
jg
push
mov
mov
jle
cmp
cmp
pop
jge
sbb
popf
bound
cmp
dec
hlt
pop
mov
sub
sbb
cld
sub
je
inc
shll
imull
in
jge
add
xchg
sub
hlt
xchg
jne
clc
test
fnsave
xor
push
xor
sub
stc
test
lret
dec
mov
fwait
jb
or
lods
mov
fwait
insb
cmc
jle
scas
clc
adc
pop
or
ss
outsl
hlt
pop
ret
fiadds
xor
and
pop
add
jbe
cli
pop
or
lcall
jne
and
pop
hlt
repz
into
cli
cmp
stos
fwait
in
sbb
incl
and
or
jno
add
aad
mov
stc
or
clc
push
dec
dec
xor
data16
xchg
adc
icebp
pop
scas
mov
and
bound
fwait
lods
jle
mov
into
test
lock
cmpsl
xchg
or
sub
mov
je
ja
loop
enter
cmp
ljmp
lret
push
fisttpll
xchg
dec
aaa
dec
js
test
cmovnp
xchg
jl
into
fistl
scas
dec
adcb
stos
sub
cmp
in
das
lret
xor
int
imul
jbe
popf
xchg
pop
arpl
leave
mov
lods
mov
adc
sub
movsb
dec
xlat
and
dec
mov
mov
push
cltd
es
aam
or
xor
and
and
mov
inc
mov
loopne
jnp
nop
xlat
xchg
loop
fldl
push
jmp
dec
and
mov
cmc
or
mov
stc
in
loop
je
mov
pop
shlb
adc
cltd
push
sub
adc
mov
loopne
scas
out
xchg
mov
mov
xor
mov
cmp
pop
and
addr16
push
cmp
divb
push
dec
mov
inc
cmc
jl
outsl
xchg
mov
cmc
mov
pop
xlat
xorb
adc
outsl
push
inc
leave
jns
cli
or
sti
aad
call
outsb
inc
pop
push
aas
adc
insb
pop
outsb
cmp
pop
fmull
cmp
sub
mov
loope
jp
sub
insl
sub
xor
jae
std
repz
mov
cmp
icebp
lret
xchg
jecxz
or
mov
aaa
mov
inc
rcl
loopne
sbb
shrl
sub
cmp
and
sbbl
ja
mov
mov
fwait
lds
cli
mov
jae
enter
cmpsb
rcl
lret
mov
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
and
add
roll
add
pop
ret
cwtl
inc
push
mov
ret
inc
inc
adc
pop
mov
ljmp
fcoms
mov
or
xchg
xlat
cli
mov
inc
cwtl
pop
lods
fldcw
mov
sbb
sub
adcb
lret
or
ficompl
sub
mov
js
mov
int
mov
push
sub
ds
fildl
xor
and
mov
xorb
cmp
cmp
lret
xchg
movsb
mov
movsb
mov
push
dec
js
jno
mul
sbb
rcrl
jp
push
ja
cmpsb
cld
cld
adc
dec
and
movsl
out
pop
clc
rcrl
arpl
pop
mov
test
sbb
js
mov
imul
lcall
daa
gs
pusha
push
dec
fisubl
stos
add
aas
ret
in
repz
or
out
sbb
testl
inc
in
jmp
pop
jp
jns
repz
jg
push
sbb
rorl
xor
lret
xor
pop
and
push
ret
pop
mov
insb
lods
lea
dec
jno
push
out
mov
pusha
jle
fs
fst
pop
jge
scas
cmp
cmp
xor
jo
or
pushf
push
mov
test
and
mov
pop
loop
das
imul
repnz
leave
addr16
mov
pushf
jl
rorb
jb
pop
inc
dec
cmp
hlt
jnp
jecxz
fs
adc
cmc
je
jnp
push
cmpsl
mov
aad
je
stos
mov
rorb
push
fld
jp
fsubrs
xchg
cmpsl
and
orl
lods
cmc
loop
shll
cmp
xor
mov
insl
ja
nop
out
jecxz
dec
cmc
inc
fwait
push
add
xchg
dec
mov
outsb
push
ljmp
popf
pop
addr16
cmp
push
xor
sbb
testb
push
mov
jg
shrl
or
fidivs
mov
xchg
int3
xchg
jge
lods
xchg
mov
add
mov
add
out
rorl
leave
rolb
fldt
je
jns
sbb
mov
mov
shlb
stos
dec
sbb
bound
sbb
nop
les
hlt
mov
ret
rorl
inc
pop
fdivl
mov
mov
movsl
xor
or
lret
inc
or
pop
ror
push
ds
cmc
fcom
inc
into
xor
xchg
mov
loope
cld
and
cmp
call
jmp
adc
add
xchg
clc
fnsave
outsb
jl
xor
and
add
fistpl
jae
insl
mov
negl
je
cmp
cltd
sbb
dec
xor
lahf
or
fisubrl
sub
push
pop
and
insb
stc
push
stos
inc
ret
add
pop
nop
rorl
lods
cltd
pop
outsl
out
push
jle
rolb
pushf
mov
xorb
pop
mov
mov
icebp
hlt
sub
test
push
es
loop
jg
mov
inc
filds
mov
or
mov
je
jbe
pushf
inc
test
fucom
mov
add
lds
iret
mov
into
xchg
pusha
and
out
rorl
mov
adc
jmp
xchg
add
ds
sbb
push
mov
loop
jp
in
sub
push
mov
jo
lods
sub
add
in
push
sub
mov
push
fdivr
sahf
xchg
add
stos
je
dec
xor
insb
push
aam
movsb
xor
cs
stos
mov
idivl
mov
test
add
sahf
dec
icebp
mov
inc
ds
push
test
test
pop
cmp
mull
mov
fnstenv
push
fsubs
dec
inc
inc
stos
jmp
push
stc
and
or
fiaddl
xchg
xchg
mov
loopne
lock
mov
mov
mov
pop
pop
repz
inc
fcomp
outsb
aas
test
inc
mov
fsubl
sub
add
imul
inc
mov
xor
fidivs
or
cmp
xchg
mov
push
popa
loop
and
cmp
test
int
xchg
clc
pavgb
xchg
imull
push
push
cmc
into
push
aas
xor
or
cmp
negb
fnsave
mov
shll
inc
or
dec
call
and
inc
ficoml
fisubrl
bound
sbb
jge
fsubr
or
jl
iret
es
push
sbb
addr16
iret
sbb
dec
sub
pop
lods
sarl
lock
dec
push
cmp
jbe
pop
or
dec
jno
pop
jge
rclb
sub
or
imul
sahf
sti
xor
xchg
and
xchg
sahf
mov
imulb
js
or
add
outsb
dec
call
or
and
in
xchg
scas
mov
mov
test
sbb
lcall
add
push
sbb
and
mov
cmp
cld
xchg
scas
sbb
mov
add
lea
pop
js
out
fstpt
jmp
push
popl
cs
inc
std
sarl
mov
add
cwtl
mov
aam
mov
imul
leave
movsl
mulb
stos
fsts
aas
add
fwait
xor
push
mov
outsl
aas
into
add
inc
pop
pop
scas
lods
shlb
hlt
and
jnp
jbe
lea
scas
dec
mov
test
cmp
call
inc
je
ds
fcompl
push
fcoms
lret
fiaddl
push
mov
jno
loope
lock
dec
rcr
imul
out
dec
adc
pushf
xlat
mov
jbe
scas
push
and
pop
xchg
sub
orb
mov
sbb
adc
cmp
fidivs
call
inc
mov
cltd
mov
add
inc
push
pop
push
pop
pop
ss
imulb
loopne
add
es
add
roll
add
sub
push
dec
add
jae
leave
popa
pop
jb
jns
rorl
xor
push
inc
xchg
je
cmc
adc
rcrl
pop
in
jns
mov
lock
jg
or
loop
pop
push
fcomip
mov
mov
mov
inc
nop
or
jg
div
loop
xchg
adc
adc
xlat
mov
scas
test
int
pop
lret
dec
ja
xlat
aad
dec
sbb
lods
imul
scas
test
ljmp
jg
popf
mov
fbld
ret
adc
add
shl
bswap
sbb
es
ja
frstor
jle
cmp
inc
mov
dec
dec
xchg
cmp
fstps
lock
inc
imul
daa
or
icebp
cs
popf
repz
cmp
xlat
insb
stc
outsl
or
push
dec
adc
mov
divl
rclw
xchg
rcll
lea
push
cmpsb
push
mov
jns
rcrb
dec
out
dec
aaa
push
lods
inc
test
ss
sbb
mov
lret
inc
dec
sub
jecxz
inc
mov
mov
xchg
lock
dec
jge
mov
push
loope
leave
pop
maskmovq
notl
hlt
mov
sbb
daa
dec
mov
push
jno
xlat
cli
xor
push
loopne
aam
adc
dec
call
inc
fs
xchg
jecxz
jae
push
dec
sbb
je
pop
sbb
inc
daa
rcrb
mov
inc
inc
push
or
stos
outsl
push
jmp
dec
sub
and
jle
in
jne
adc
lret
shll
outsb
in
jnp
aam
dec
inc
adc
jae
adc
test
repnz
adc
push
mov
gs
outsb
push
mov
mov
or
lret
shrl
jno
mov
xchg
pushf
imul
xchg
into
sbb
xor
mov
xor
xchg
loopne
xor
mov
lock
or
push
les
adc
mov
ret
fisttps
xor
jns
cmp
jmp
jmp
xchg
jbe
xor
mov
cs
rcrl
jae,pn
iret
jg
or
mov
out
in
mov
hlt
push
loopne
icebp
dec
cmpb
ljmp
aad
ret
push
lret
popf
lcall
inc
sbb
xor
push
mov
sbb
in
and
jp
test
test
es
in
aam
sub
arpl
adc
cmp
cltd
clc
data16
fisubs
cmp
add
push
std
lret
fdivl
insl
mov
pop
icebp
cwtl
fcoml
dec
sbb
ja
ret
daa
mov
xchg
aas
cmp
push
xchg
and
mov
hlt
lahf
jmp
jnp
ret
inc
adc
pop
sahf
std
mov
xchg
dec
fistps
mov
popf
sbb
mov
cmp
sbb
push
aad
lahf
iret
cmp
insl
divl
enter
xchg
repz
pop
push
mov
dec
icebp
sarb
sbb
inc
pop
dec
sub
arpl
push
dec
sbb
fsubl
lret
pushf
mov
mov
loopne
adc
mov
xor
aam
lret
inc
mov
mov
jle
push
xor
inc
inc
out
scas
cmp
movsl
sti
jns
xchg
mov
xor
pusha
push
orl
push
jno
inc
push
lea
inc
fstl
or
inc
jmp
adc
lock
pushf
outsl
outsl
inc
xchg
pushl
ss
pop
dec
mov
icebp
or
test
icebp
int3
or
fstpl
sbb
cwtl
in
lret
mov
dec
mov
push
jle
loopne
clc
xchg
test
test
pop
mov
vmread
fcmove
pop
pop
ja
fwait
sbb
mov
cmp
sub
inc
push
sub
sarb
push
adc
movsb
mov
loope
or
adc
mov
mov
clc
cmp
nop
popf
cs
scas
xor
xchg
addr16
leave
test
mov
das
mov
mov
xchg
ror
leave
stos
jnp
adc
lret
add
inc
xchg
mov
insl
add
fsubl
adc
jl
cltd
clc
imul
sti
rorb
vpackuswb
nop
js
lret
mov
mov
rcr
jmp
call
popf
jbe
call
push
addr16
jno
jae
cmpsb
dec
dec
sbb
insl
je
mov
mov
or
sub
out
sbb
shrb
push
mov
push
sub
and
fadds
fldl
js
and
cmp
xchg
inc
mov
shrb
push
pusha
inc
jl
testb
or
std
pushf
mov
or
lds
out
addl
inc
lock
xchg
imulb
push
xchg
push
lods
aad
stc
xchg
popf
adc
enter
and
xchg
popf
jmp
adc
cwtl
orl
or
cmp
loopne
jmp
cmp
aam
imul
pusha
mov
fcoms
fsub
or
jo
sahf
movsl
lret
fcomip
ljmp
dec
js
rcr
cwtl
pushl
push
addb
sbb
mov
add
or
cmp
jns
xor
jg,pt
insl
insb
adc
and
xchg
sbb
xchg
fists
xchg
mov
lcall
out
aad
jb
les
out
mov
stos
sub
test
jecxz
dec
lods
fisubrs
repz
sub
jae
jecxz
test
lock
sti
andb
xchg
outsb
in
iret
add
mov
fdivs
int3
icebp
in
into
xor
in
shlb
ret
push
mov
fcoms
cmp
xchg
add
mov
sub
mov
cmc
sbb
add
push
cwtl
ret
push
mov
pop
and
lcall
out
fidivrl
dec
cs
xchg
insb
mov
jmp
mov
add
lds
sbbb
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
add
add
push
add
stc
add
imul
mov
icebp
xor
shr
cmp
fadd
xchg
repz
mov
imul
and
adc
pop
stos
jmp
or
xchg
stos
and
fucom
push
jmp
pop
push
sbb
cmp
adc
xor
jno
pop
divl
xchg
pop
push
cltd
add
mov
push
idiv
xchg
test
add
mov
repnz
jecxz
scas
pop
cmp
insl
jo
andl
popa
outsb
loopne
adc
push
iret
mov
test
jp
xor
jno
mov
push
jle
mov
pop
sub
xchg
xchg
gs
xchg
les
in
das
jecxz
mov
loope
lahf
cmpsb
adc
popf
ret
shll
shll
adc
pusha
insb
jmp
sub
xchg
jecxz,pn
jne
movsl
inc
arpl
pop
int3
sbb
sbb
add
popf
es
rcl
mov
stc
lahf
mov
sub
dec
mov
das
xchg
call
loop
xchg
roll
addr16
aad
inc
shlb
fadd
pcmpgtd
js
clc
pop
subl
je
scas
pop
lods
stc
cli
push
jl
clc
fdivrl
xchg
jle
sbb
rorb
cmp
pop
rcrb
aad
push
lcall
dec
xor
imul
aad
cmp
ud0
and
lds
ret
nop
outsb
dec
jne
dec
out
lea
ret
xor
popf
mov
xor
add
mov
lds
adc
dec
ss
out
sbb
mov
mov
dec
into
fnstcw
lret
outsb
xor
xor
lods
leave
sbb
vucomiss
xor
or
add
sahf
or
jne
pop
jecxz
je
fadds
pop
adc
stos
pop
test
mov
stc
jp
mov
popf
fdivs
xorb
clc
loopne
test
jge
pop
inc
shlb
rcrl
inc
aaa
fs
mov
cmpsb
insb
in
shll
fisubrl
lahf
ds
dec
into
outsb
mov
lret
sbb
jae
test
jo
aaa
mov
jbe
sub
inc
cmp
out
pop
mov
in
push
push
out
jmp
mov
shlb
jbe
add
jae
aad
in
sbb
pusha
dec
cld
sbb
mov
xchg
sub
jne
mov
xor
jmp
pop
into
outsb
test
add
pop
arpl
sbb
sub
sub
testb
hlt
rcrl
rol
pop
shll
sbb
in
or
outsb
xchg
sub
dec
addb
out
xchg
ror
stos
pop
aam
data16
jo
sub
test
and
and
shrb
pop
sarl
pop
scas
daa
push
inc
mov
xchg
jo
loopne
daa
mov
mov
in
or
icebp
mov
add
dec
mov
add
lock
fbld
sbb
aad
pop
fsts
adc
jnp
mov
adcb
adc
test
fs
add
mov
xlat
sbb
sbb
hlt
ljmp
nop
mov
and
idivb
pop
sub
clc
mov
mov
adc
test
xor
into
ja
push
jl
test
xchg
and
das
push
adc
cmp
mov
ljmp
inc
sbb
out
out
aas
imul
xchg
imul
pop
ljmp
aaa
stos
pop
push
push
fwait
movsb
or
lret
cmp
xlat
mov
mov
mov
movb
fnstcw
imul
lcall
loope
js
sbb
xor
mov
mov
mov
jo
pop
pop
inc
cli
or
inc
xchg
mov
fiaddl
jge
jg
cs
sub
or
mov
or
test
jo
add
dec
movsb
mov
inc
daa
sbb
push
xlat
lock
adc
add
leave
rorb
pop
adc
pusha
pop
add
mov
pusha
out
in
jne
cmp
sbb
jnp
mov
popf
push
les
jg
sub
popf
scas
ret
stos
push
jl
pop
sub
vrsqrtss
mov
lea
mov
bound
sub
cmc
out
dec
dec
shrl
lods
push
rol
loope
or
cmp
jmp
or
push
and
andb
and
lods
insb
sbb
mov
in
out
cmp
dec
sub
jae
mov
push
hlt
mov
fstl
dec
inc
pushl
stos
aaa
pop
fcom
pop
insb
testb
repz
ficomps
adc
ss
imul
inc
imul
cltd
rcrb
mov
push
movsb
fistpl
shrd
sub
sbbl
in
jnp
and
mov
xor
ds
pop
rcrl
repnz
jne
or
in
hlt
pop
xor
jmp
lcall
movsb
mov
pop
jecxz
or
imul
push
mov
sbb
mov
sub
mov
push
adc
xlat
push
dec
loopne
stos
xor
test
push
in
in
push
sti
jns
xor
sbb
and
ret
dec
adc
pop
jecxz
xor
mov
lahf
aam
pop
xchg
jmp
jmp
ficomps
mov
xchg
mov
loopne
nop
cmc
leave
ret
cmp
xchg
add
pop
jne
ss
or
rclb
and
or
cmpsb
sahf
call
add
lds
push
jno
sbb
rorl
push
mov
mov
insl
pop
mov
jge
or
sub
mov
sub
inc
pop
jnp
or
dec
test
notb
sub
pop
mov
xchg
pushf
xor
or
pop
adc
sub
nop
mov
mov
lds
setno
enter
mov
loop
lcall
xlat
mov
lret
xchg
into
lods
in
cltd
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
fldcw
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
scas
inc
add
scas
inc
add
scas
inc
add
inc
add
inc
add
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
inc
add
inc
add
inc
add
inc
add
scas
inc
add
scas
inc
add
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
mov
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
icebp
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
mov
add
mov
add
xor
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
sub
test
or
dec
subl
sbb
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
