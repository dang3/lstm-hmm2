add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
call
hlt
scas
dec
or
mov
lret
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
jl
jl
jl
jl
inc
enter
lret
cld
jns
sbb
and
loope
xchg
sbbl
pop
popl
cmpsl
pop
cmp
mov
insl
add
int
mov
divl
loop
push
in
push
nopl
imul
jg
jg
cltd
jb
jge
cmpsb
pop
pop
jmp
sub
daa
hlt
xchg
mov
cmp
cltd
adc
scas
scas
cmp
inc
inc
pop
push
push
fists
sbb
dec
push
cmp
inc
cmpb
popl
cmp
dec
xchg
mov
push
jns
dec
mov
push
lret
repnz
sub
xchg
jne
sbb
inc
imul
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
andl
jl
jl
ret
push
loopne
jbe
jmp
push
jne
or
out
dec
jg
pop
jno
fnstcw
clc
mov
add
xor
cs
cwtl
arpl
xor
std
xchg
add
xchg
adc
sbb
fldpi
insl
in
fcmovne
jl
lahf
pop
inc
mov
ja
pushf
push
sbb
popa
stos
add
adc
mov
ret
xchg
mov
fcmovnu
jg
xcrypt-cfb
cmpsl
loope
pop
sbb
movsw
cmp
std
cmpsb
mov
push
cmpsb
push
mov
and
rcrb
dec
out
lret
in
imul
lcall
fiaddl
lods
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
pop
mov
push
push
jle
jl
jl
jl
or
push
lahf
sbbb
dec
movsb
add
leave
out
mov
mov
add
rcll
rol
pop
mov
popf
mov
and
lds
sbb
in
mov
sub
outsl
shr
xchg
enter
int3
loop
dec
and
stos
xor
xchg
insl
adc
pop
jmp
arpl
sub
loop
notb
int3
jge
in
lea
das
test
fcom
mov
sub
sbb
cs
inc
sub
and
aam
mov
or
in
pop
xchg
lds
clc
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
sbb
and
jle
jl
jl
jl
or
push
adc
outsb
dec
outsb
xchg
xchg
lds
lcall
imul
sbb
je
dec
dec
inc
pusha
xchg
popa
ret
adc
sbb
cmp
jp
xchg
or
mov
loopne
popa
jmp
adcb
mov
clc
mov
xchg
xor
cli
mov
or
js
lea
add
mov
mov
enter
inc
pusha
jp
or
dec
out
das
insl
inc
es
iret
lcall
out
ja
jno
cmp
sub
cmp
nop
mov
sbb
or
lock
adc
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
and
jl
jl
cld
inc
dec
scas
and
fidivrl
xchg
pop
icebp
lods
pop
and
push
add
divl
mov
ljmp
xchg
push
push
fldt
or
jno
cmp
popf
mov
es
movsb
dec
inc
cmpb
fimull
dec
cmp
popf
bound
push
xchg
push
jnp,pn
test
rolb
notb
mov
adc
sbb
sti
addl
mov
and
jnp
push
and
ret
imul
pop
push
idiv
mov
push
adcl
mov
lods
leave
aaa
adc
dec
add
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
push
or
xor
jo
jl
jl
jl
subb
adc
inc
sbb
pop
ljmp
and
xchg
movl
sbb
out
ss
imul
das
pop
and
adc
cs
orl
inc
rolb
or
mov
cmpsb
pop
mov
xchg
insl
inc
pop
out
push
sub
xchg
xor
sbb
fadd
mov
js
loopne
jmp
jmp
shlb
jae
xchg
jns
into
push
clc
fdivrs
push
jecxz
nop
lcall
mov
insl
mov
push
insl
add
ljmp
bound
in
lret
and
test
or
inc
add
aam
inc
add
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
sub
data16
jl
jl
jl
xor
hlt
push
pusha
xchg
xor
scas
cmpsb
pop
sbb
fisubl
cmc
daa
lret
mov
xor
jmp
mov
adc
insl
lret
ds
fnsave
lea
loope
mov
jecxz
cmc
mov
cmpb
jp
sbb
inc
sbb
nop
push
push
in
out
jle
and
shlb
adc
in
les
mull
adc
push
in
xchg
fbstp
int3
out
pusha
cs
mov
subb
fldl
lds
jecxz
subl
inc
mov
sub
call
jmp
cld
mov
mov
dec
mov
aad
daa
aaa
pop
lods
jae
jl
jl
jl
outsl
aas
sbb
add
adc
mov
gs
push
int3
dec
and
clc
sahf
rcr
xchg
stos
push
test
push
aas
mov
push
mov
dec
xchg
ret
sub
sub
insb
mov
cltd
sub
sub
sahf
in
loope
mov
inc
xor
sub
dec
dec
aam
xchg
data16
lea
aas
cmpsl
fnstsw
and
popf
jecxz
jl
pop
addr16
add
pop
imul
mov
nop
mov
cmp
sti
mov
mov
faddl
leave
inc
mov
xor
pop
pop
stos
and
mov
mov
stos
mov
stos
pop
aaa
or
inc
in
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
sub
jb
jl
jl
jl
mov
adc
std
and
push
adc
sub
out
popf
addr16
les
mov
repz
imul
nop
push
dec
xor
and
dec
inc
gs
pusha
cld
shll
ljmp
les
shrb
sub
call
jnp
inc
cli
jb
xchg
in
dec
push
lock
add
jnp
mov
jge
sbb
push
cmp
sub
adc
out
jle
jo
or
cmp
pop
lds
jnp
push
adc
scas
push
inc
and
add
js
pop
aaa
xchg
jge
sub
mov
stc
mov
cmp
icebp
jl
mov
and
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
push
lret
sbb
jl
jl
jl
or
loop
add
cmp
clc
pop
pop
xchg
dec
jge
out
pop
inc
sub
cmp
xchg
out
fdivs
dec
inc
stos
jmp
filds
sbb
mov
or
out
lahf
mov
std
cmp
mov
int3
mov
in
outsb
sbb
xorl
aam
ret
push
sarl
jecxz
cld
mov
cmp
jge
clc
jmp
and
rclb
insb
in
sub
aas
mov
bound
andl
insb
hlt
push
add
sti
inc
push
ret
xchg
inc
scas
or
out
dec
mov
lret
add
or
sbb
pusha
orb
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
jp
lds
mov
lahf
cmp
fidivl
sbb
fwait
or
or
aad
pop
dec
mov
call
or
adc
lcallw
sbb
sbb
fbld
sbb
cli
dec
or
jp
fdivr
dec
xor
sub
pop
addr16
inc
inc
popa
pop
popa
jecxz
les
hlt
pusha
xchg
jo
clc
aaa
cs
sub
data16
pop
xor
add
fadds
xor
pop
push
jg
add
sbb
mull
adc
int3
pop
lods
shlb
daa
lods
xchg
imul
ss
or
or
xchg
mov
aaa
adc
jle
mov
int
adc
stos
data16
inc
fmuls
mov
dec
rclb
jne
jmp
pop
jecxz
xchg
mov
jb
daa
jp
cmp
hlt
je
jl
jl
jl
stos
in
xchg
xor
popa
std
fsubrs
lods
test
cmp
push
cmp
xchg
ss
adc
pop
jne
ret
xor
lea
test
xchg
loop
pop
mov
mov
xorl
orl
inc
fmull
mov
pop
mov
mov
lahf
push
stos
std
dec
or
inc
divb
or
roll
sahf
jbe
sbb
adc
mov
jns
add
or
test
ret
mov
out
cltd
call
and
imul
inc
mov
add
cld
xchg
inc
aas
nop
mov
pushl
jmp
or
mov
mov
push
int3
xchg
xchg
int
insb
xor
cmp
jl
jl
jl
push
inc
lret
sti
cmpsl
aas
aaa
sbb
mov
push
test
repnz
xor
and
testl
stos
push
xlat
xor
loopne
sub
int
add
leave
sbb
jb
js
repnz
mov
pop
mov
mov
fimuls
cmp
shrb
xor
out
sbb
mov
jo
sub
icebp
mov
movsl
jecxz
mov
add
add
mov
jb
roll
adc
aad
lods
or
mov
imul
arpl
mov
add
fdiv
sbb
repz
mov
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
fisubs
jl
mov
push
cmp
push
add
aam
mov
in
jp
stos
mov
sti
cmpsb
rclb
jne
xchg
push
adc
test
icebp
inc
std
cmpsb
sub
test
fstl
mov
aas
test
outsl
adc
inc
jo
lock
add
pusha
sar
jmp
jecxz
pop
mov
nop
mov
int3
loope
stos
cmp
out
jo
insb
les
in
lods
mov
imul
inc
cmp
jno
mov
pop
xchg
shr
in
jp
adc
cmp
xchg
sbb
movsb
cmp
sub
fists
movsb
aaa
jmp
mov
or
push
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
jo
jbe
jl
jl
jl
loop
out
mov
in
insb
or
xchg
in
stos
push
mulb
mov
inc
movsb
mov
lea
ja
mov
test
jecxz
ja
cmp
xchg
xchg
dec
cmp
jnp
loopne
adc
filds
mov
inc
and
pop
aas
daa
jmp
fidivrs
in
fcompl
popa
jecxz
in
sbb
jl
push
notl
les
ja
mov
xchg
ss
xor
mov
sarb
or
lret
enter
xor
jl
adc
movsl
arpl
call
cmp
lret
inc
or
inc
dec
mov
mov
mov
mov
jmp
xchg
sub
cltd
cmp
mov
lcall
mov
shl
add
daa
test
inc
pusha
iret
aad
sti
call
xor
jmp
push
mov
loop
cmpsl
pop
adc
mov
movsb
sub
test
mov
xor
mov
push
lahf
xchg
je
dec
repz
lods
cmpsb
pop
add
xor
dec
add
mov
or
in
mov
mov
sub
cmp
lods
jle
mov
cmp
pop
mov
push
jmp
fwait
scas
scas
inc
sar
and
loope
mov
or
push
lods
lahf
stos
mov
stc
push
dec
xchg
fcmovbe
sub
jge
xchg
into
es
outsb
xor
pop
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
jo
mov
mov
add
cmp
cmc
iret
xor
mov
sbb
stos
push
dec
js
stc
inc
and
notl
fcoml
mov
fildll
mov
inc
sub
mov
pop
cs
pop
fldl
mov
or
or
add
mov
cmpsl
popa
cli
xor
xor
xchg
or
push
jmp
out
test
xor
or
roll
inc
es
outsl
cltd
jnp
jo
cmpsb
lahf
xchg
loop
pushf
dec
mov
ljmp
in
ret
push
pop
sbbl
jns
ljmp
in
dec
add
sbb
cmp
mov
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
inc
xchg
dec
or
jl
jl
iret
adc
pop
sbb
loop
and
jecxz
cmp
movsl
loope
cs
jg
add
pop
lahf
stc
je
xchg
iret
pop
mov
add
cs
je
or
sub
xorl
cmpl
lret
or
iret
mov
dec
pop
in
lea
inc
sub
dec
cltd
shrb
pop
int
aad
adc
cmp
sti
pop
push
and
mov
iret
mov
or
mov
cld
mov
adc
lock
sbb
sbb
mov
or
sub
stos
xor
inc
and
shrl
cmc
xlat
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
or
jl
jl
scas
out
inc
call
jb
inc
jne
xor
rol
and
orb
nop
in
or
sti
das
jo
pop
cmpsl
mull
cltd
jbe
test
sti
leave
adc
pop
gs
add
or
or
in
in
scas
sub
daa
adc
js
xchg
xor
add
iret
clc
aad
cmp
in
arpl
jne
test
cli
jns
scas
add
xchg
data16
jbe
shrl
cmc
push
xor
icebp
jg
cltd
jmp
mov
dec
fwait
xchg
out
jb
loop
rcll
mov
adc
jle
addr16
lock
add
xchg
enter
fsubrp
add
sahf
jb
add
or
jmp
fsub
mov
clc
mov
cmp
js
or
jl
jl
cmp
fistps
mov
mov
sub
xchg
nop
add
or
sub
fstpt
push
adc
mov
mov
xchg
xchg
cs
pop
cmp
outsb
sahf
push
push
push
dec
lret
lahf
inc
arpl
xor
dec
dec
outsb
xchg
std
mov
mov
inc
mov
xorb
mov
cmp
xor
stos
and
outsb
add
push
out
arpl
jns
repz
int3
sbb
inc
push
int3
fistpll
fstps
lods
int3
mov
lea
mov
pop
pop
push
lods
or
xor
in
dec
jl
jnp
mov
mov
sahf
push
nop
pop
jb
aaa
mov
add
mov
jmp
pop
fimuls
cltd
push
mov
shrb
jl
mov
cmp
icebp
or
xor
add
ss
test
push
and
mov
pop
fists
jg
popa
jmp
mov
cmp
push
rolb
mov
mov
and
xor
in
dec
sub
in
add
jle
or
rcrl
xorl
nop
xchg
jmp
xorb
int3
addr16
stos
lods
cmpsb
mov
loopne
cs
fstpt
xlat
xchg
adc
add
pop
or
test
test
add
arpl
ret
adc
and
pop
stos
fldl
lea
and
out
push
xor
js
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
or
add
nop
or
jl
lcall
xchg
dec
fwait
or
push
test
jne
inc
daa
inc
mov
and
mov
xchg
jle
push
test
cltd
arpl
dec
in
mov
jno
pop
pop
ss
xchg
mov
xchg
dec
xchg
stos
push
enter
mov
sbbb
xchg
mov
push
xchg
jo
mov
pop
loope
xchg
aam
test
push
js
cwtl
sub
lods
cmp
ret
imul
mov
int3
mov
fldl
aad
into
cmpsl
out
in
cmpl
imul
jp
and
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
cwtl
scas
ficompl
mov
aas
outsl
pop
movsl
inc
cmp
cwtl
mov
stos
inc
inc
mov
pushf
leave
pushf
mov
hlt
cld
call
sbb
sub
mov
jns
test
dec
jmp
scas
lods
mov
icebp
fcoml
jbe
ljmp
inc
inc
cmpsl
mov
jb
adc
jp
cltd
jnp
addb
mov
inc
negl
in
pop
nop
out
addr16
pop
repnz
sbb
mov
outsl
ror
sbb
push
in
jmp
xchg
xchg
pusha
xchg
add
out
fs
xor
imul
out
mov
inc
add
jmp
in
test
sti
mov
sbb
xchg
cmpsl
or
jl
mov
push
negl
dec
push
sbb
lods
pop
and
inc
dec
rcr
push
mov
xor
sbb
sub
pop
pop
xchg
out
cmp
add
sarl
pop
cwtl
dec
xor
scas
aas
sbb
lods
lock
mov
test
and
adc
cmp
inc
dec
ret
sub
nop
push
xor
ja
ljmp
pop
pushf
gs
mov
stos
cmc
movsl
and
loop
mov
or
out
test
iret
bound
bound
out
push
or
jl
idivl
arpl
out
sub
ja
mov
fsubs
push
pop
aas
jl
sbb
rolb
pop
hlt
jmp
dec
jge
cmpb
jge
push
loope
arpl
jmp
mov
push
mov
notl
push
in
xchg
sub
cmp
jne
cmpsl
jb
stos
outsl
cmp
sbb
in
jno
xor
mov
daa
adc
std
jle
fs
inc
xor
adc
int
lea
fs
pop
ljmp
mov
fwait
arpl
push
xchg
mov
xor
jl
mov
pop
pop
std
push
or
mov
and
stos
push
pop
mov
jo
mov
push
je
xor
and
fwait
and
adc
xchg
adc
pop
cmp
or
adc
call
movsl
mov
popa
push
loop
gs
hlt
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
dec
cmp
clc
push
jl
into
jg
jl
cmp
dec
insb
pop
sub
cmp
mov
jnp
repnz
add
dec
out
mov
loope
mov
loop
sub
hlt
sub
adcl
and
inc
mov
subl
fincstp
pop
mov
or
lds
fdivs
sub
add
pop
lcall
mov
push
xor
push
jns
mov
pop
xor
pop
jae
lret
jns
fmulp
out
inc
daa
add
call
fs
push
ja
mov
mul
mov
out
adc
aam
cmp
shll
mov
mov
ss
and
and
pop
test
sbb
mov
dec
ljmp
fstps
xor
mov
inc
xchg
jae
jl
outsl
outsb
xor
in
dec
mov
lock
cmpsl
into
jnp
das
icebp
jno
fldcw
out
push
xchg
dec
sub
adc
ds
add
adc
mov
adc
out
xor
mov
push
insl
add
lods
jnp
fdivp
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
jb
ljmp
jg
jl
sbb
sbb
pop
rol
je
push
gs
or
add
mov
jno
mov
xlat
fs
or
lods
xor
out
cmp
test
jl
fmull
and
lock
aad
movsb
sub
fists
cmp
sbb
and
jno
sbb
cmp
adc
mov
cmpsb
cwtl
popa
fsubr
push
push
incb
sbb
mov
adc
test
pop
call
pop
shlb
stc
add
jbe
inc
inc
adc
xchg
or
cmp
ret
adcb
cmpsl
push
dec
push
insb
push
inc
xor
jp
loope
fcoml
xchg
pop
xchg
mov
sub
movsl
test
lahf
push
xlat
out
out
shrb
icebp
aaa
fidivrl
inc
or
fstpt
gs
sub
push
push
mov
sub
dec
cli
cmp
lea
enter
out
cwtl
popf
ret
nop
push
mov
cmp
and
test
fildl
mov
cmpsl
adc
xchg
xchg
cld
push
inc
jbe
cmc
ss
sahf
scas
add
dec
cli
xor
jecxz
mov
mov
stc
cwtl
out
cmp
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
sbb
jl
into
jg
jl
dec
movsb
in
out
push
cltd
es
jmp
inc
xor
or
mov
pop
jb
jg
jne
cmp
and
push
or
aas
dec
out
mov
hlt
shrb
mov
adc
repnz
xor
rcl
mov
in
adc
fs
mov
and
push
push
arpl
fucomip
fwait
in
enter
adc
adc
xor
popa
dec
lock
lock
in
mov
ss
xchg
inc
push
mov
adc
aas
mov
pusha
sub
call
cmp
imul
cmp
push
cmp
push
std
ja
mov
xchg
negl
cmp
push
mov
in
sti
lahf
xor
jg
add
or
xlat
enter
jmp
dec
mov
sti
cmp
in
inc
xchg
daa
cmovp
lahf
pop
cmp
add
ffreep
out
jmp
je
add
jns
xorl
dec
out
inc
mov
subl
rcrb
repnz
outsl
je
repz
test
dec
add
inc
jg
adc
gs
xlat
inc
or
fistpl
ret
and
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
and
and
hlt
jl
jl
psubw
fadds
sbbb
push
ja
or
in
ljmp
and
adc
mov
mov
push
rcrl
push
sbb
jb
mov
mov
adc
jle
add
and
jecxz
push
ja
mov
fidivs
dec
jno
dec
cmp
jo
call
rcl
pop
sub
repz
fbld
setl
movsl
icebp
movsb
dec
jecxz
mov
ljmp
inc
mov
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
push
ret
movsb
mov
jl
hlt
jl
jl
mov
flds
lcall
push
aam
inc
repnz
aas
insb
scas
scas
es
dec
xor
fstpl
dec
daa
and
inc
insl
fisubrs
xor
pop
scas
bnd
jnp
and
scas
rcll
and
push
or
gs
sahf
fmuls
loop
pusha
ret
int
dec
push
fs
pxor
cs
int3
out
pop
push
inc
or
loope
into
dec
pop
push
mov
stc
rol
and
pop
mov
repz
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
cli
push
incb
jl
jle
sbb
dec
js
jno
push
mov
cmp
xor
push
int
push
push
ljmp
jecxz
leave
ja
leave
iret
xor
xchg
sbb
add
jo
dec
dec
add
stc
dec
or
mov
jmp
aaa
aas
into
and
adc
jnp
vucomiss
dec
mov
add
outsb
inc
jg
sti
outsb
or
pop
leave
or
rcll
sqrtsd
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
in
push
jl
jg
jl
mov
aaa
lock
iret
adc
push
adc
xchg
and
xor
mov
in
out
jo
aaa
pushf
sbb
mov
test
adc
andl
jne
dec
test
lock
pushf
xchg
cmpb
fstpt
addl
or
into
icebp
cmc
nop
add
jg
jge
inc
js
adc
push
push
adc
jge
pop
pop
inc
dec
repnz
mov
jb
push
inc
push
push
pop
loopne
lret
mov
les
mov
sub
test
sarl
lock
hlt
push
hlt
cmp
jo
stos
mov
cmp
stos
ja
fstl
loopne
xchg
js
dec
iret
cmp
into
jae
mov
mov
rcll
dec
insl
fstpt
sti
dec
je
sbb
fsubrl
and
or
test
jo
lds
in
mov
sbb
loopne
mov
test
fisubrs
xlat
flds
iret
dec
xor
aaa
pop
test
ja
jb
test
cmp
mov
jp
inc
sarb
sarb
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
xchg
pop
mov
pop
jl
xor
jl
rcrl
mov
push
lret
cld
out
rclb
test
mov
call
addr16
pop
popf
stos
push
fists
cmp
xchg
inc
hlt
fxch
int
xchg
movsl
das
pop
mov
dec
jg
xor
push
jmp
addr16
hlt
rolb
loopne
dec
inc
xlat
lahf
push
or
fstpt
mov
cmp
aam
pop
sarl
aas
je
jmp
xor
push
jbe
dec
jecxz
js
les
movsl
lcall
adc
outsb
popa
pop
pop
push
popa
add
and
cmp
jbe
push
notb
adc
cmpsb
imul
sbb
test
cmp
cltd
call
out
jae
in
ss
mov
negl
adc
cmp
or
fcoml
scas
adc
mov
enter
push
out
inc
xor
jb
mov
dec
sti
jo
xorb
push
and
jbe
cmpsb
loope
jl
inc
inc
scas
pop
scas
fwait
mov
lea
stos
mov
hlt
push
pop
xchg
ss
fsubrs
fbstp
jne
das
sub
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
cmc
cmc
fnstenv
jg
jl
mov
lods
push
aad
mov
cmpsb
pop
cld
cmpsl
data16
aaa
mov
xchg
fcoms
pushf
lods
mov
mov
xchg
push
inc
popf
xchg
sahf
fwait
int
mov
pop
or
xorb
add
into
or
mov
sbb
push
cmpsb
cmpsl
test
out
push
out
and
bound
and
and
rcrl
testl
pop
stc
insl
enter
pushf
pop
lock
mulb
xchg
cwtl
and
stos
push
loope
add
aaa
ret
sbb
ds
aam
cld
jns
out
in
bound
shlb
loopne
xchg
or
mov
es
inc
mov
popf
or
dec
cmp
jns
xchg
mov
lods
jnp
test
mov
movsl
jb
pushf
dec
fldt
xor
sub
or
clc
je
adc
cmp
rol
sub
cmp
movsb
mov
cmp
in
push
jmp
sbb
add
cld
scas
push
jb
les
cmp
lcall
mov
cmp
pusha
pop
sbb
imul
xor
fwait
dec
jo
rclb
mov
icebp
imul
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
in
cltd
sbbb
jl
jg
jl
leave
scas
push
add
test
lahf
hlt
inc
fidivs
out
xor
icebp
xchg
enter
imul
ror
mov
imul
pop
dec
cwtl
in
pop
mov
sub
cmp
or
mov
cmp
sub
out
in
xchg
mov
mov
push
mov
mov
mov
js
fadds
mov
inc
inc
add
cmc
movsb
sub
inc
data16
fdivrl
adc
mov
clc
out
lret
repnz
fst
dec
lds
sub
ja
adc
xchg
fwait
fwait
cmpsb
sti
fstpt
inc
shrb
sbb
pop
dec
ret
cltd
ljmp
imul
in
push
cld
sub
leave
xchg
out
lods
dec
xchg
out
enter
push
xor
out
rcrl
xchg
dec
call
sub
mov
push
cmpsb
inc
test
ss
sti
add
or
cwtl
jae
data16
pop
mov
xchg
lahf
mov
shrl
sbb
in
cwtl
xor
dec
sbb
outsl
sahf
loope
negb
in
insl
loope
xchg
sbb
cmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
and
xor
jl
sub
inc
add
iret
stos
icebp
inc
pop
cmp
dec
fidivrs
push
pop
xchg
mov
mov
push
adc
repnz
clc
ja
adc
inc
fsubr
dec
sub
fdivrs
js
jle
sbb
divl
inc
mov
nop
cli
lds
movsl
std
fmull
into
pop
int3
shrl
loope
push
stos
inc
or
dec
mov
test
dec
fsubs
stc
jl
push
xchg
les
fdivr
add
rcrl
dec
or
lds
mov
cmp
imul
mov
cli
dec
push
popa
fildll
daa
ljmp
mov
push
dec
iret
cld
outsb
int3
and
fdivl
push
jae
pop
fists
aad
pop
cmp
std
pop
lds
push
xchg
sub
xor
loopne
inc
sub
dec
sahf
into
sbb
or
mov
lcall
pop
inc
rolb
xchg
mov
movsb
insl
xor
stos
pop
movsb
pop
lcall
shrb
testb
jle
jnp
clc
enter
mov
dec
jne
test
sub
mov
ret
or
sub
clc
cwtl
cmp
xor
arpl
xchg
add
add
add
add
cld
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
mov
sbb
jg
jl
fists
or
push
mov
outsl
dec
push
rcrl
cmp
out
setne
je
push
cs
lea
mov
mov
aam
push
loopne
or
sub
js
mov
mov
icebp
jl
rcrl
hlt
jmp
repnz
mov
sarb
enter
pop
dec
insb
test
jae
dec
or
and
mov
fcompl
cli
dec
into
push
mov
xchg
lds
pop
xchg
jno
mov
arpl
and
ret
popa
mov
xorl
sub
mov
and
sbb
xor
je
int3
scas
xchg
fisttpl
mov
cmp
fwait
mov
xor
in
dec
or
aas
mov
push
jecxz
jle
aas
jle
js
clc
xchg
push
and
add
lods
mov
aas
jg
stos
xor
shlb
mov
inc
sub
in
jmp
mov
or
pop
ret
push
push
push
sbb
xor
xchg
pop
sahf
das
mov
lret
sti
and
pop
and
inc
jle
bnd
ret
lcall
test
imul
pop
add
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
push
shld
sbb
jl
push
xorb
mov
mov
inc
jno
rcrb
pop
test
jle
out
inc
in
inc
lret
das
icebp
aad
scas
inc
jbe
xchg
aaa
jl
std
mov
adc
hlt
repnz
out
or
jbe
xchg
jle
cmp
lock
mov
inc
aam
out
inc
rcrb
in
xchg
mov
dec
sbb
push
ret
xchg
dec
popa
sti
repz
icebp
adc
jns
xchg
mov
pop
dec
fcomip
clc
push
ret
inc
mov
sub
test
jl
pop
inc
nop
roll
dec
or
pop
and
lods
cmp
fwait
imul
pop
add
xor
pop
mov
cld
xchg
xchg
roll
stos
inc
cmp
push
jge
inc
push
and
add
aad
jg
and
xchg
lock
cwtl
lret
fsubrs
roll
insl
dec
int
dec
loopne
test
pop
gs
jns
mov
push
add
lock
jecxz
into
es
testl
je
dec
sbb
dec
jl
push
imul
pop
bound
mov
mov
in
push
cltd
xorl
js
iret
inc
mov
jmp
psraw
out
frstor
jnp
jp
jle
jl
xor
jl
imul
mov
jg
sbb
nop
test
pop
lds
or
or
hlt
cmpsl
cltd
lea
sbb
imul
loop
loope
stc
xchg
and
shll
adc
mov
jno
dec
push
mov
xor
adc
cmp
push
loopne
dec
rolb
nopl
fisttpll
ret
push
sub
sbb
mov
inc
cmp
cmp
divps
push
daa
inc
dec
loopne
subl
xchg
fsubr
out
xchg
mov
jbe
pop
mov
aaa
jge
lcall
push
add
fcomp
notl
mov
jg
push
sti
mov
and
push
loop
pop
or
aas
or
add
in
pop
aam
mov
repnz
stc
cmc
int
push
pushf
push
push
inc
pop
mov
aam
lds
mov
sub
stos
jae
flds
adc
call
pop
adc
sar
push
cmc
cwtl
jle
pop
ret
push
push
sbb
xchg
or
test
outsl
push
xor
mov
inc
mov
lods
jno
jne
mov
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
sub
mulb
sahf
sub
sbb
addr16
push
cld
push
xchg
stc
stos
popa
aad
or
bound
adc
xor
xor
push
lods
movsb
cmp
outsl
mov
mov
push
rolb
test
sti
mov
ficomps
rcrl
aam
rorl
push
outsb
push
dec
pop
mov
mov
xchg
setnp
dec
dec
out
xor
lret
jecxz
xlat
test
adc
nop
lds
jns
mov
sbb
imul
notrack
jae
and
xchg
cmp
subb
jmp
cli
dec
sub
psubusb
addb
shl
pop
xor
jae
fcoml
and
jbe
popf
jg
rcrb
mov
mov
fwait
cmp
adc
push
jmp
push
xor
out
jbe
and
inc
sti
pop
add
aam
cmp
lock
mov
mov
cmpsb
dec
and
pop
xchg
and
push
add
loopne
in
daa
ret
and
xchg
xlat
mov
push
mov
stos
shl
and
dec
xor
mov
in
push
addr16
mov
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
cld
push
pop
jmp
xor
jl
xor
jae
or
sub
sbb
mov
test
xor
in
shl
cmpsb
rclb
lret
sbb
pmaddwd
je
mov
call
repz
stos
popf
lods
inc
push
jecxz
pop
dec
das
leave
push
add
xor
cmp
mov
call
xchg
xchg
aad
into
imul
xchg
fsubr
int3
lcall
cwtl
sub
mov
mov
mov
cltd
fidivs
shll
push
inc
daa
imul
cli
out
mov
cmpsb
xor
jnp
in
dec
push
adcb
ljmp
jecxz
mov
push
es
nop
adc
into
sub
mov
decl
cmp
xchg
popa
mov
push
fsubrl
loop
jg
inc
xor
shrb
in
and
push
dec
inc
js
pop
or
subb
or
jno
ljmp
xor
cmp
xor
mov
fcmovnbe
imul
push
xor
mov
fwait
shlb
push
mov
inc
pop
and
push
xchg
push
hlt
popf
mov
aas
imull
jne
jno
divl
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
fisttpll
out
xchg
popf
xor
push
xchg
xor
std
rclb
xchg
adc
xchg
inc
cmc
push
cmp
sub
jb
xchg
dec
faddl
pop
push
adc
sbb
dec
lret
jbe
add
ds
leave
int
fidivl
out
addr16
aas
test
push
sub
add
hlt
aad
pop
lock
and
cmc
sahf
sbb
imul
pop
mov
das
adc
mov
or
lds
dec
and
loope
addr16
mov
jecxz
pop
mov
xor
push
mov
enter
mov
ja
outsl
mov
adc
or
adcl
sti
rorl
je
filds
sbb
push
or
xor
fisttpll
sahf
insb
out
arpl
mov
lea
jns
inc
sbb
adc
push
sub
jmp
jae
xchg
out
xor
cltd
mov
sbb
enter
mov
sbb
jns
xchg
xchg
fsts
adc
cmp
and
push
orl
adc
jle
jbe
loopne
dec
movsb
daa
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
sbb
adc
push
sub
addr16
fldenv
mov
inc
mov
imul
jmp
mov
lret
mov
xchg
ds
lahf
push
mov
arpl
jle
sbb
add
push
add
sahf
insb
xchg
dec
xchg
aad
sahf
push
mov
sub
movsl
hlt
fcoml
mov
cld
subb
jecxz
mov
sarb
call
repnz
mov
push
mov
rcll
test
and
fsub
inc
jmp
adc
push
gs
xchg
push
mov
das
mov
sahf
and
popa
movsl
push
jb
test
xlat
test
lea
sarb
mov
cmc
sub
push
outsl
cmpsb
jmp
outsb
xchg
jp
push
int3
add
adc
pop
in
iret
les
sti
xor
push
and
loopne
sub
and
and
pop
std
xchg
pusha
scas
xor
daa
mov
movsb
jns
push
mov
stos
cmp
clc
aaa
sub
hlt
les
xor
in
sub
push
inc
int3
out
jbe
pop
bound
xchg
push
stc
pop
dec
fs
and
stos
jg
lcall
mov
jmp
or
push
cmp
dec
shl
mov
adc
jl
push
insb
in
xor
mov
lods
ss
sub
inc
sub
fbstp
sbb
or
jle
hlt
xchg
rcll
into
loope
out
cmp
imul
cmp
nop
popa
ja
or
lea
mov
fiaddl
nop
jmp
fstpl
adc
mov
dec
sbb
arpl
inc
pop
and
xor
add
inc
gs
ret
insl
mov
scas
dec
popa
sub
rorl
movsb
bound
and
sbb
sbb
jle
popf
je
ret
mov
arpl
scas
and
aaa
ljmp
inc
and
nop
cmp
xchg
repnz
xor
mov
push
out
xor
jmp
outsb
pop
adc
xchg
sub
sarb
sbb
push
es
xchg
aas
adcb
xchg
mov
and
xlat
test
dec
mov
lods
xorl
jae
sub
ja
push
jne
fwait
int
lcall
sahf
jp
hlt
push
loop
lea
and
in
pop
pop
cmp
lods
xchg
fwait
out
aam
lea
std
or
jge
jo
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
inc
and
daa
scas
adc
jl
jg
jl
sub
bound
pop
clc
mul
stos
pushl
das
ljmp
pop
xchg
rcrb
fidivs
mov
out
sti
out
fistpll
push
shr
movsl
or
xor
cmc
ret
push
pop
das
ret
mov
jmp
movsl
sbb
fnstsw
dec
mov
sahf
inc
mov
cs
jo
adc
and
cmp
sub
cmp
repz
test
ds
mov
ret
call
daa
inc
incb
and
mov
sarl
add
jb
or
add
aaa
lods
in
bound
push
test
jb
into
pushf
push
mov
jbe
scas
enter
in
jns
test
cmpsb
jle
cmp
push
lret
outsl
cmpsb
xor
jns
insl
add
xor
insb
adc
pop
aaa
filds
sbb
mov
fidivrs
dec
push
mov
movsl
cwtl
dec
xchg
dec
jecxz
pushf
mov
push
xchg
inc
inc
sbb
loop
rcll
les
les
rcr
cltd
jg
inc
adc
push
andb
loope
mov
dec
sbb
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
shrb
dec
je
mov
jnp
cmpsb
or
ljmp
iret
sub
outsl
lret
adc
fs
ja
daa
mov
dec
cmp
mov
adc
cmpsl
sub
insb
jns
mov
pushf
adc
mov
cmp
jp,pn
fdivrs
out
pop
and
fs
out
mov
idivl
and
rolb
scas
mov
andb
mov
jo
xchg
fildll
push
fidivs
xchg
jg
lods
std
icebp
mov
adc
and
in
test
push
cmp
loop
pusha
out
mov
test
push
inc
iret
push
in
add
inc
inc
cmovl
and
rorb
mov
das
push
dec
hlt
xchg
jle
push
mov
call
inc
xor
int3
int3
mov
or
arpl
incb
adc
movsl
out
inc
cmp
xchg
adc
mov
enter
loope
fnsave
push
pop
jo
popa
mov
dec
pop
jbe
les
stos
mov
add
loopne
dec
nop
insl
cltd
mov
mov
int3
popf
jmp
insb
add
jg
and
xor
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
xor
jl
bound
mov
inc
xchg
test
std
movsl
fcmovnbe
dec
jl
sbb
nop
sbb
mov
outsb
dec
fsts
push
es
fcomip
mov
sub
xchg
mov
lods
cltd
jge
push
adc
stos
call
in
pop
js
xor
xor
fisttps
push
cmpb
push
dec
pop
jbe
cmp
and
add
clc
xchg
jb
adc
rolb
mov
dec
dec
rcrl
adc
imul
je
insl
jmp
insb
cmp
pushf
out
popf
pop
fnsave
stos
gs
das
iret
in
jecxz
fcmovne
push
xchg
ja
jmp
lods
fstpl
cmpsl
in
mov
fmull
dec
dec
mov
adc
lods
mov
dec
xor
es
sbb
clc
inc
lea
out
fildll
roll
inc
dec
movsl
mov
push
cmpsl
cltd
repz
or
push
adc
push
add
add
icebp
in
fs
jns
adc
jne
dec
imul
sub
jl
jl
jmp
pop
cmpb
push
std
js
fidivrs
or
out
add
aas
push
sbbl
in
xor
scas
test
or
ds
stos
loope
aam
popf
dec
movsb
cli
xchg
aaa
sub
or
jecxz
hlt
loopne
mov
packuswb
xor
xchg
inc
pop
sahf
movl
daa
and
cmp
cmp
imul
sub
or
mov
gs
inc
aas
add
lcall
test
inc
loope
mov
mov
mov
aam
dec
sbb
test
rolb
in
sub
mov
add
xchg
pushf
icebp
fbstp
lods
dec
pop
sbb
and
addr16
xor
pushf
dec
mov
ja
jns
jae
cld
inc
push
repnz
cwtl
arpl
mov
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
add
sub
jl
jl
jg
sbb
mov
pop
push
lods
shrb
fsts
gs
xchg
out
cmp
jno
pop
mov
xchg
inc
sti
ret
adcl
dec
or
popf
push
cmpsb
incl
dec
dec
xor
and
mov
dec
inc
fstpt
lahf
scas
sub
das
inc
cmp
faddp
loope
insl
fxch
or
ljmp
cmp
sbb
mov
test
add
sbb
cmpsb
push
aad
push
adc
xlat
jge
pop
mov
cmp
bound
jl
mov
xchg
aas
dec
push
lret
lods
and
xchg
dec
aam
dec
jp
hlt
push
inc
ret
xor
in
mov
or
stos
dec
into
adc
xor
test
jmp
inc
aad
jae
sbb
pop
stos
jmp
imul
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
ja
sub
jg
jl
lods
push
shll
pusha
aas
add
lret
loope
lock
jnp
jo
or
push
pusha
push
out
loop
mov
xor
ljmp
das
push
fistpl
ret
adc
cmp
mov
push
mov
mov
or
or
mov
arpl
sub
insl
iret
incb
pop
xchg
hlt
xchg
cltd
call
js
adc
loopne
sub
aaa
movsb
jge
cmp
sbb
or
xchg
mov
push
inc
lret
jno
push
push
adc
xchg
inc
jg
mov
pop
xor
xchg
mov
adc
cmp
push
push
ret
xor
fisubs
in
sub
xchg
loop
test
adcl
add
and
cltd
mov
arpl
icebp
xchg
push
xchg
xchg
jae
ljmp
enter
add
pop
push
add
lods
or
push
and
ja
mov
jbe
mov
decl
adc
add
notl
jmp
xor
push
jp
fnstsw
mov
out
cmp
jl
sbb
jl
dec
or
fcmovbe
int3
or
add
push
add
js
movsl
imul
sub
jp
outsb
add
lea
std
cmc
dec
jne
test
mov
cwtl
xchg
outsl
ret
cmp
pop
cld
xchg
xlat
fcoms
xlat
or
and
decl
cmp
push
mov
add
in
xor
scas
jg
and
in
cmp
inc
sbb
ja
aam
jp
or
add
cmpsl
ds
xorb
fisttps
gs
outsl
lods
adc
mov
xor
cmp
fcomp
in
sub
add
les
push
ror
pop
fiaddl
sbb
pop
jle
out
insl
lret
add
sarb
jge
negb
out
hlt
cmpsb
scas
int
cltd
jmp
test
pop
jae
pop
out
jg
add
enter
dec
and
add
pop
out
or
mov
xor
mov
inc
loop
fldt
inc
cwtl
sub
pop
push
mov
push
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
lods
fsubrs
jl
jg
jl
sub
mov
xchg
or
adc
push
or
shrb
mov
xor
xchg
xor
sbb
leave
stos
addr16
adc
add
cmc
mov
loope
shl
xchg
iret
lahf
and
idivb
jb
and
repnz
xchg
popf
inc
int
ret
cli
hlt
popfw
xlat
jne
push
mov
ss
xor
jbe
adc
sub
lods
imul
pop
outsl
cmpsb
mov
fucom
shlb
mov
faddl
inc
lcall
push
int
jecxz
js
lahf
imul
std
lds
nop
xchg
mov
adcb
aaa
rcrl
cmp
cwtl
enter
sbb
mov
rorl
jb
dec
out
push
cs
into
popf
icebp
and
negl
jge
in
and
stos
sub
add
push
mov
add
dec
push
dec
shll
jo
cld
rcr
pop
scas
data16
jge
jmp
add
pop
push
pop
mov
mov
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
loop
adc
in
jl
sbb
jl
test
inc
fsubl
mov
adc
dec
push
or
xchg
lret
lahf
xor
fnstenv
push
mov
sub
xor
nop
insl
adc
push
rorb
insl
fisubl
mov
int
cmp
adc
insb
cmpl
mov
xchg
shll
aad
ret
xchg
sbbb
aad
mov
sti
aad
xor
ror
ds
dec
jae
das
in
je
jecxz
inc
mov
dec
outsl
dec
pusha
xchg
jmp
jb
scas
xor
inc
shll
stos
dec
add
cmovnp
in
jno
and
daa
hlt
mov
shrb
sub
mov
mov
jne
inc
xchg
lods
sub
mov
arpl
jnp
lret
pusha
adc
adc
inc
mov
jg
jbe
jmp
cli
scas
cmp
lahf
adc
out
pop
xchg
roll
insl
xchg
xor
sti
push
insb
jl
stos
inc
add
aam
jmp
or
pop
or
push
cmpl
add
add
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
test
subb
jl
jg
jl
addr16
sub
cmp
stos
cmpsl
int3
sub
xchg
add
shr
sbb
je
jae
lds
fldl2e
mov
aad
imul
jo
mov
pop
cmpsb
pop
movsl
sub
pop
fisttps
repnz
cmp
pop
xor
mov
pop
or
stos
mov
jno
imul
inc
mov
fistpl
clc
adc
mov
test
adc
sub
sarb
lods
push
sub
pop
int
imul
or
cmp
pushf
mov
cmc
fwait
call
xchg
fstps
push
cmp
ret
xchg
xor
dec
inc
jb
inc
inc
inc
sbb
bndstx
jbe
xchg
mov
mov
js
mov
jnp
std
xchg
mov
call
shlb
inc
outsl
shll
in
fcompl
hlt
mov
leave
ficompl
test
cmp
aaa
sbb
or
pop
dec
mov
inc
add
inc
inc
add
add
cmpsb
inc
add
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
mov
fstpl
and
jg
jl
movd
das
or
sub
das
mov
test
push
mov
sub
inc
jns
xor
imul
and
cmp
adc
call
xchg
je
fnstsw
outsl
sub
in
notl
lret
sub
mov
in
cmp
jp
mov
jg
ja
pop
inc
sbb
cmp
sahf
mov
divb
sbb
cmp
jmp
fs
call
sub
cmp
aam
movsl
insb
jne
or
mov
mov
int
scas
or
jns
xorb
pop
sub
pop
std
leave
ja
inc
test
aam
test
das
sbb
xchg
sub
out
push
push
cltd
int3
lods
test
in
mov
xor
pop
sbb
inc
mov
cmp
push
out
std
push
movsl
and
jp
cmpb
sub
adc
xchg
enter
pop
cltd
test
test
rcrl
pop
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
iret
mov
jl
or
pop
sub
repz
scas
mov
aas
jne
lods
stc
adc
in
fldl
mov
pop
pop
mov
mov
sub
adcb
push
push
sub
insl
sbb
cwtl
lahf
sub
adc
adc
push
mov
pop
push
int3
inc
vcvtss2sd
push
jnp
jae
imul
pop
or
xchg
jg
nop
rorb
adc
sub
aam
jno
lret
pop
sarb
cmpsl
xor
cmp
in
loope
mov
sbb
xor
lcall
loopne
dec
sti
sbb
in
mov
lret
pop
daa
or
daa
into
sbb
sub
shrl
enter
inc
outsl
out
and
lock
pusha
and
cmp
mov
adc
pop
fcos
and
lret
push
ror
xor
clc
add
into
xchg
loope
mov
popa
inc
popw
mov
push
mov
lods
xor
mov
filds
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
push
sbb
jg
jl
push
dec
nop
push
cmp
pop
insl
nop
mov
out
push
mov
sahf
mov
inc
dec
leave
or
fadds
dec
or
jge
enter
jne
subb
sbb
add
xchg
pop
mov
addr16
pushf
adc
sbb
ljmp
test
call
sahf
mov
sub
lret
sbb
addr16
pop
int3
lds
jecxz
pop
dec
dec
jge
in
sbb
int
or
dec
inc
mov
leave
and
pushl
pop
out
sub
aaa
ja
int3
xchg
xchg
fwait
ljmp
inc
pop
imul
fidivrl
or
cmp
jae
add
mov
popa
scas
stc
das
icebp
sarb
mov
aas
cmp
mov
pop
inc
xor
into
addr16
xchg
movsb
repz
imulb
mov
je
or
lds
fdivr
mov
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
mov
jl
jg
jl
xor
cmpsb
cmp
add
leave
cmp
lret
setns
xchg
out
stos
jae
daa
in
cmpsl
push
inc
pop
idiv
cwtl
dec
je
faddl
out
jo
pushl
shlb
jg
imul
cmpxchg
sbb
das
test
ds
push
shlb
and
fmuls
and
ja
ljmp
jnp
jbe
test
and
sub
and
mov
idivb
adc
dec
fcoml
jo
xlat
test
or
or
dec
mov
aaa
loop
add
leave
cmp
xchg
push
xor
mov
push
into
pop
test
shlb
ljmp
das
and
fsubr
xor
and
movsb
jmp
fists
and
cmc
push
dec
dec
xchg
stc
sarl
popfw
adc
subb
data16
out
test
scas
dec
imul
dec
repnz
cmpl
icebp
stos
inc
cld
in
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
leave
insb
mov
or
fidivrs
lods
nop
sub
inc
dec
and
add
pop
xor
rorl
cmpsl
imul
and
test
jp
push
mov
das
inc
inc
pop
jb
pop
shll
xchg
lcall
push
jne
xor
add
lods
gs
push
in
bound
fildll
add
mov
lret
cld
in
sbb
sti
adc
nop
push
xchg
sub
imul
add
cmpsl
cmpsl
imul
inc
xor
imul
sysenter
or
stos
lahf
jnp
jne
loop
cs
push
addr16
push
pop
mov
pop
mov
imul
mov
shll
cmp
in
cs
lea
adc
loope
mov
lahf
pop
pop
insb
xchg
in
pop
fisubl
ficoml
sub
push
mov
dec
ficomps
int
sub
cli
rolb
cmpsb
adc
xchg
loopne
test
movsb
mov
int
lods
jl
call
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
push
movsb
pop
push
push
jl
or
mov
xor
sub
fs
xor
lock
pop
into
pop
push
mov
js
or
xor
pushf
and
xor
data16
imul
fs
cld
test
sub
mov
outsb
sbb
sbb
adc
cmp
es
test
into
rorl
inc
ret
jle
jecxz
inc
jo
push
int3
sbb
outsl
ret
fs
cmp
push
mov
in
mov
mov
in
ficomps
xchg
sbb
fists
data16
mov
ds
lds
jl
std
sbb
sub
sub
mov
test
dec
lds
loop
mov
divl
jle
mov
adc
mov
add
sub
add
add
pop
fdivs
dec
xchg
add
mov
inc
hlt
std
bound
pop
js
fdivs
outsl
movsb
jae
or
mov
add
xchg
ret
or
adc
xchg
fnstenv
sub
imul
jmp
sub
jge
jge
fnstenv
cld
aam
daa
jl
or
std
mov
or
repnz
push
xchg
add
xor
push
mov
gs
aas
out
jne
movsb
xchg
ljmp
std
test
mov
mov
das
repnz
dec
jmp
jmp
es
cld
mov
js
or
rorb
pop
fisttps
cli
adc
dec
fisubrl
or
mov
repz
scas
addb
mov
sub
lock
rcl
adc
out
mov
cmp
and
xchg
add
cwtl
test
xor
jno
insl
mov
xchg
scas
xor
inc
jg
push
or
in
rcl
and
into
and
fisubrs
cmp
adc
mov
lods
cmp
arpl
sub
mov
lret
pop
ja
push
ja
ss
mov
push
mov
inc
xlat
iret
and
xchg
loope
or
sub
sbb
sbbb
add
add
jmp
in
adc
jl
daa
or
jl
or
jecxz
out
daa
add
fcmovnu
cmpl
add
scas
loopne
int3
shrl
cmp
enter
pushf
adc
mov
test
sbb
pop
dec
inc
mov
push
mov
add
push
mov
fnstenv
push
stos
test
jg
inc
addr16
hlt
xchg
sarb
xor
ficoms
add
dec
xor
xor
jge
out
mov
mov
add
mov
clc
sub
jno
lds
fdiv
cmpsb
cmp
sbb
es
arpl
lock
push
lea
ret
jno
xor
shll
or
mov
jb
inc
xchg
dec
xchg
xchg
repz
outsl
div
cld
ss
cwtl
shl
mov
push
ljmp
or
movsl
inc
rorb
mov
popl
xchg
lcall
add
sbb
adc
ja
sbb
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
shll
mov
cmp
jg
jl
cwtl
mov
les
adc
sbb
mov
outsb
lods
lods
jecxz
idiv
dec
xchg
dec
adc
or
sbb
mov
sbb
jl
aas
jno
mov
in
xor
stc
rcrb
loopne
fwait
rclb
xchg
jns
call
push
fimuls
insb
xor
sti
inc
in
jl
add
lahf
in
mov
mov
and
xchg
cmp
xchg
lahf
dec
xor
cmp
mov
push
push
mov
pusha
or
xchg
int3
jg
or
dec
loop
dec
mov
mov
imul
fstl
mov
notl
xor
add
and
mov
mov
scas
and
daa
js
scas
mov
lds
push
pop
call
sti
es
push
mov
insb
aad
int
fcomi
mov
xchg
das
push
sbb
xchg
in
in
jo
insb
pushf
aas
cmp
jmp
inc
imul
pop
in
call
mov
xor
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
push
or
push
cmp
jg
jl
loop
adc
je
mov
pushf
nop
and
sbb
push
mov
push
mov
cmp
popf
loope
es
sub
dec
or
out
shld
mov
pop
aaa
pop
jb
rol
push
stc
mov
cmp
jmp
lea
mov
mov
mov
js
pop
add
ss
ljmp
sbb
hlt
sub
popa
lret
inc
outsl
out
add
mov
fnstenv
or
jb
mov
jnp
jecxz
rcrb
shlb
dec
jg
test
ret
push
push
pushf
ljmp
lock
stos
add
cmpsb
fistl
xchg
xchg
aam
stos
add
sub
xor
nop
pop
adc
imul
jg
nop
xlat
in
sub
mov
or
pop
mov
lods
push
sub
sub
adc
sub
rcrl
xchg
clc
jbe
gs
cmp
xchg
sub
mov
add
jmp
xchg
out
std
push
gs
repz
cltd
js
cmp
jg
jl
lods
sub
mov
cmpsb
cltd
pop
mov
mov
sub
and
and
out
add
out
daa
lret
xor
mov
adc
xchg
mov
leave
xchg
jl
test
cltd
je
int
fistps
shll
ret
hlt
mov
movl
pop
cmp
imul
mov
pop
mov
pop
fsubr
lea
popf
mov
into
loope
rclb
mov
sbb
outsb
jno
xor
lcall
xor
jle
cmp
in
pop
xchg
stos
cmp
in
out
les
lds
mov
movsb
into
inc
xchg
cmp
jmp
inc
pop
leave
or
sarl
not
push
sti
popa
inc
aaa
mov
adc
pop
jg
dec
dec
sahf
cld
cs
jo
lods
das
add
insl
outsb
jle
xchg
movsb
push
xchg
cld
xchg
int
mov
inc
pop
push
inc
fwait
pop
pop
insl
mov
arpl
stos
fwait
mov
mov
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
push
bnd
xor
jl
or
loopne
jbe
mov
mov
or
cmp
mov
sbb
xchg
sti
scas
add
dec
cmp
jge
enter
xor
add
mov
mov
sbb
or
lds
mov
das
in
add
leave
rorb
scas
pop
adc
mov
js
in
and
xchg
mov
outsl
icebp
int
mov
pop
sbb
xor
repnz
push
cmp
cmp
lods
jle
jg
imul
shll
add
adc
movsb
mov
jne
add
test
fwait
mov
sarl
adc
mov
rcr
scas
mov
and
xchg
xor
aad
or
pop
rorb
repz
xchg
mov
je
lcall
sub
push
xchg
xchg
orb
mov
out
pushf
cmp
std
adc
cmp
repnz
jnp
inc
jmp
mov
sbb
xor
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
xchg
je
cmp
jl
jg
jl
out
rcr
mov
mov
popa
inc
push
add
test
push
mov
out
lret
mov
pop
mov
mov
xchg
gs
pop
int
imul
pushf
xchg
js
fcoms
push
jne
push
in
jl
fnstcw
cmp
fsts
into
dec
outsl
cwtl
ja
bound
mov
iret
jecxz
or
imul
xchg
bound
adc
xor
jne
sbb
inc
les
outsb
in
push
add
jno
fnstenv
cmc
lret
in
push
mov
inc
stos
incb
aaa
mov
add
cld
lock
sbb
jo
stos
lods
fidivl
jo
imul
add
jae
sti
mov
test
int
lea
sub
add
test
add
mov
das
test
sahf
pop
int3
adc
aam
fsubl
add
sarl
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
mov
aas
jl
or
loop
sub
loope
inc
lea
jp
push
mov
pop
push
xchg
in
dec
ss
mov
addr16
rorb
aam
push
popf
repz
pop
insb
jae
test
push
mov
xchg
jl
push
cltd
pop
cmp
dec
scas
pop
daa
add
cmp
ret
sbb
and
fdivrl
pop
add
mov
sub
imul
jl
jae
xchg
cmpsb
stos
pop
push
adcb
subb
repnz
into
mov
out
mov
and
jne
dec
dec
shll
repz
mov
push
mov
cltd
xchg
mov
inc
int
addr16
push
xorb
mov
push
xor
push
movl
rcrb
popa
ss
faddl
aas
outsb
and
pop
aad
cmp
xor
push
ret
mov
daa
jo
int
jmp
cltd
sub
movsl
or
dec
push
jg
or
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
popf
lcall
push
jg
jl
cmp
or
pop
sub
adc
push
sub
fmul
test
cmp
jp
jno
inc
jmp
push
jg
mov
idivb
stc
push
sbb
xchg
daa
push
pop
data16
add
jle
es
aaa
and
xchg
mov
pop
mov
mov
int3
pop
adc
mov
push
add
mov
ss
push
mov
mov
adc
cmp
stos
subl
jbe
fistps
adc
add
jbe
and
and
adc
enter
popf
hlt
mov
mov
gs
insb
fwait
dec
xor
in
out
jg
xor
arpl
fs
dec
add
cmp
adc
ss
rcrb
cmpsl
and
xor
pop
ds
push
loopne
mov
ss
mov
dec
jge
loope
stos
mov
adc
push
je
xchg
mov
popf
push
loopne
jnp
or
dec
inc
test
rolb
adc
inc
xchg
xchg
lods
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
stos
cwtl
sarb
addl
mov
sbb
xor
xor
xchg
push
cmpsb
push
pop
clc
sbb
ficoms
mov
inc
test
repz
pop
adc
movsb
inc
outsl
and
stos
test
xor
fs
mov
inc
inc
enter
jae
xchg
pop
or
repz
lret
out
xor
es
nop
arpl
and
lock
mov
and
push
movsb
lods
insl
es
xchg
cmp
add
add
pop
cltd
rolb
inc
xchg
mov
mov
jae
sbb
sbb
nop
call
sahf
sbbb
out
loopne
in
dec
outsb
mov
mov
dec
mov
adc
lret
into
idiv
stc
mov
orl
cmp
test
add
and
sar
fistpll
test
dec
ficoms
or
push
pop
mov
inc
fsubr
xor
add
movsb
flds
xor
scas
lods
xchg
xor
jg
jl
push
fidivrl
sti
arpl
nop
fcomip
inc
or
mov
hlt
popf
inc
pop
xor
sbb
and
xchg
pop
je
leave
push
in
es
jns
adc
shlb
pop
rcll
adc
ret
and
cltd
mov
inc
bound
push
mov
test
test
aas
xchg
adc
push
out
adc
enter
call
sti
push
repz
pop
popf
mov
rclb
out
jp
movsl
pop
out
sbb
repz
jne
insl
fdivrl
testl
xchg
push
xor
inc
je
scas
loopne
rorb
mov
adc
push
je
and
ret
mov
dec
shll
lods
xchg
xlat
out
jo
sbb
shll
xor
ds
jge
and
stc
sub
cld
insb
pop
push
mov
and
fbstp
cwtl
stc
les
fldl
subl
imul
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
jmp
xor
jg
jl
cmp
xchg
aam
outsl
stos
jle
ja
push
sahf
repnz
push
bound
adc
add
mov
pop
sub
loopne
dec
push
lods
sub
jno
push
jl
jae
push
lds
cwtl
jp
or
out
addr16
mov
repz
loop
push
int
push
xchg
sub
sti
dec
push
sbb
insl
jecxz
jb
iret
popf
xor
xchg
cmp
cs
mov
pop
mov
xchg
fimuls
dec
fadds
ficompl
xchg
cwtl
in
mov
lahf
mov
pop
insb
lods
or
clc
sbb
gs
shrd
xor
mov
and
sub
test
mov
lcall
stc
cwtl
push
xchg
mov
mov
lret
cmp
add
in
pop
icebp
fwait
sub
push
jg
xchg
xchg
int
jl
outsl
outsl
imul
nop
mov
js
std
add
addr16
movl
xor
addl
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
add
jl
xor
jg
jl
jge
fsubp
jmp
mov
and
adc
aam
cmpl
mov
pop
int
jnp
cmp
outsb
scas
mov
jne
fs
insb
xchg
sbb
push
xchg
mov
in
sub
jecxz
xor
xor
cmp
es
lret
mov
mull
or
mov
rorl
aaa
push
scas
lea
sarb
insl
xchg
jb
shll
sbb
bound
xchg
ret
outsl
dec
pop
ja
fimuls
cmpsl
adc
sbb
push
dec
iret
xchg
jbe
fsubrs
in
enter
fsubl
mov
push
arpl
insb
cmpsl
stos
mov
pop
test
jg
lret
int3
insl
out
adc
xchg
dec
add
lcall
jg
das
pop
daa
testl
mov
nopl
xorl
out
shlb
mov
adc
dec
mov
pushl
dec
push
push
div
mov
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
daa
enter
xor
jl
je
and
jp
push
mov
pop
mov
mov
add
loope
or
pop
xchg
pop
cmp
out
aas
push
sti
push
test
push
inc
xchg
mov
push
sbb
out
or
out
inc
and
cmp
sub
adc
cmp
fidivrs
sbb
mov
call
jp
add
testl
push
push
mov
mov
cmp
sub
cmc
out
and
xchg
or
mov
ret
mov
mov
jae
int
test
mov
ficoml
fnsave
inc
inc
int3
push
adc
push
repz
jno
scas
and
ss
pusha
jmp
sbb
mov
mov
dec
jp
pushf
smsw
mov
imul
shlb
pop
mov
push
xor
push
dec
inc
in
cmp
cmc
stos
sub
add
push
ret
xor
pop
adc
add
push
add
add
add
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fists
insl
pop
mov
push
jg
jl
add
mov
std
pop
in
out
test
xchg
sarl
mov
xor
loope
imul
adc
sub
mov
in
int3
or
arpl
add
insl
and
lret
jo
pushf
add
lock
lret
popa
dec
mov
cmp
inc
pop
adc
mov
and
stos
repz
push
vdivss
rcr
sahf
call
adc
arpl
xor
ljmp
je
in
inc
sub
sbb
in
fists
sub
int3
xchg
pop
aas
cmpsl
cmp
mov
out
dec
add
adc
mov
jns
stos
idivl
negl
pop
mov
mov
in
iret
dec
jp
jg
push
shlb
in
cmpsb
dec
adc
jae
outsl
fcomi
js
gs
in
mov
mov
mov
arpl
fucom
and
scas
mov
idivb
mov
sub
nop
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
xor
aaa
xor
cmp
xchg
in
jb
mov
cwtl
pop
test
mov
push
push
xor
in
pop
mov
adc
sub
mov
cmp
xchg
addr16
fdivrp
insb
jecxz
sub
xchg
dec
int
pushf
pop
popf
fists
dec
js
lods
push
scas
cmp
cmp
mov
xchg
and
inc
pop
lahf
xchg
pop
inc
jbe
mov
in
xchg
js
das
loope
push
mov
adc
add
in
cli
shll
dec
cmp
mov
sub
mov
into
sub
mov
mov
insb
mov
test
adc
testl
push
sti
addr16
mov
inc
mov
fadd
mov
xchg
ficomps
xor
cwtl
repnz
cwtl
sub
cmpsb
xchg
xchg
dec
enter
push
pop
nop
adc
cli
mov
lods
rcll
dec
rsqrtps
lds
mov
xor
dec
inc
lods
xor
add
adc
rcl
xchg
push
call
insl
decl
test
add
mov
jmp
push
add
jge
jnp
and
loope
leave
jl
push
jg
jl
jno
arpl
jb
clc
negb
xor
cwtl
mov
scas
or
inc
dec
sub
lahf
addb
outsl
xchg
iret
push
sub
jecxz
mov
pusha
ret
sub
mov
jnp
dec
imul
mov
jg
dec
leave
pop
mov
in
hlt
add
dec
mov
sub
add
rorb
pop
cmp
add
jge
sarl
jbe
sub
out
je
jecxz
cli
movsb
jl
or
sbb
scas
rorb
dec
pop
stos
xchg
in
cmc
xorl
gs
sar
add
mov
cld
cmpsl
and
xchg
and
mov
arpl
outsl
dec
sbb
fcoml
jns
mov
sbb
xlat
mov
inc
lret
xchg
inc
ror
imul
xor
nop
pop
adc
mov
cmpsb
cwtl
xchg
cmp
jb
insb
lods
push
inc
into
jo
jecxz
mov
xor
inc
std
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
enter
jg
jl
jge
loope
ljmp
decb
arpl
or
add
scas
inc
inc
outsl
pusha
and
in
sti
insl
pop
das
mov
jae
adc
inc
lods
mov
fcmove
jb
mov
xchg
adc
sahf
jo
andl
pop
jmp
cmpsb
out
jmp
clc
xchg
or
aad
mov
sub
inc
pushf
mov
aad
add
and
pop
lcall
mov
cltd
aad
repnz
jle
cwtl
in
loopne
andb
sub
xorb
test
fucomp
or
aam
fs
gs
rorl
call
test
movsl
je
mov
inc
cs
or
shll
and
out
mov
cmp
push
inc
mov
inc
lea
inc
jo
sbb
sbb
lret
jl
jmp
or
movl
pop
fistps
out
push
cmp
inc
fmull
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
sbb
cli
mov
lret
jl
mov
mov
inc
pop
hlt
xlat
sbb
pop
cld
aad
pop
pop
lock
cltd
push
and
aas
mov
pop
xchg
adc
push
lret
push
mov
insb
je
xchg
sbb
popf
movl
nop
adc
sub
fstpt
mov
xchg
mov
push
lock
cs
lods
pop
mov
aad
cmp
xchg
pop
sub
cld
jno
divb
add
call
adc
mov
nop
jo
ret
jb
shrb
cwtl
xor
mov
add
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
insl
stos
push
jae
jl
mov
dec
inc
cmp
imul
lock
packuswb
or
or
and
inc
pop
add
out
hlt
rol
imulb
jp
std
inc
outsl
int3
lods
pop
aaa
imul
popf
dec
loope
xor
sub
xchg
and
out
sahf
stc
fnstenv
loope
xchg
dec
in
mov
fists
xchg
inc
xor
jmp
inc
dec
push
inc
hlt
sbb
dec
or
insb
sub
mov
sbb
push
push
sub
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
iret
enter
mov
test
mov
stc
sbb
mov
jbe
sbbl
mov
mov
push
mov
pop
mov
push
ret
inc
icebp
mov
dec
imul
nop
cmpsb
aam
cwtl
ds
lret
lcall
pop
cmp
leave
or
mov
fstl
fistpll
cmp
sub
dec
dec
pop
pop
outsb
xor
push
rorl
push
pusha
es
call
stos
fidivrl
scas
das
insl
test
adc
dec
sub
pop
pusha
jb
push
xor
mov
xchg
sbb
outsl
jnp
insl
or
imul
push
movb
gs
repnz
xor
mov
cmp
pop
into
mov
jb
test
jle
xor
mov
ret
pushf
cmp
es
adc
xchg
mov
sub
les
scas
addb
or
repz
ljmp
push
jb
lods
in
daa
rolb
loopne
orb
insl
jno
insl
cmp
sbb
mov
pop
mov
inc
incl
add
or
add
in
inc
add
jnp
add
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
mov
int
jl
jg
jl
jo
aas
jae
dec
fbld
int
pop
lods
loopne
xchg
cltd
or
and
sbb
insb
jge
sub
lods
rcll
push
aaa
sub
fisttpl
jo
xor
pop
aaa
mov
dec
xchg
mov
xorl
sbb
dec
pop
push
mov
mov
pushf
rcl
outsl
add
scas
cmpsb
and
cmp
test
clc
inc
fsubp
adc
cld
cmp
sub
scas
xor
xor
cmp
test
inc
out
mov
sbb
mov
mov
and
mov
cwtl
loope
dec
shrb
test
rorb
push
push
pushf
popa
mov
lock
adc
clc
fildll
int3
mov
ljmp
xchg
inc
test
jo
repnz
fs
mov
insb
enter
jb
mov
in
loop
jge
jno
and
mov
addr16
push
dec
mov
push
popa
jae
and
cltd
mov
jnp
sub
add
xor
ret
mov
sbb
mov
xor
movsb
mov
fwait
inc
dec
sub
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
push
jno
jl
daa
jg
jl
int
mov
dec
addb
push
pushf
xor
jmp
jecxz
sbb
xchg
bound
mov
adc
jg
mov
jnp
dec
and
cs
and
jo
ret
inc
pop
leave
jne
jl
outsb
cmpsl
push
in
int3
out
xor
inc
pop
add
push
and
add
jp
popl
jecxz
jl
es
mov
shrb
dec
or
xor
popa
mov
gs
mov
cwtl
in
maxps
test
clc
daa
inc
inc
inc
inc
xchg
mov
jns
mov
popa
xor
cwtl
mov
mov
ljmp
and
pop
push
pusha
push
stc
push
adc
adc
and
lret
in
rorb
sub
inc
dec
sub
shrb
test
sub
dec
dec
pusha
mov
mov
in
dec
jne
loop
outsl
push
pop
xchg
xchg
xchg
xor
dec
xchg
xor
inc
div
shrl
mov
fcmovnb
jg
cltd
es
dec
imul
lds
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
pusha
and
jl
jg
jl
or
jge
mov
int3
out
in
mov
ret
scas
jecxz
jnp
pop
int3
xor
shrl
test
aad
pop
fadds
std
mov
push
jl
and
andb
lret
stos
mov
aam
pop
gs
mov
test
xor
repnz
pop
sti
pop
es
mov
xchg
and
sbb
fistpl
lea
jge
cmp
test
pusha
and
mov
fmull
mov
or
test
xor
jl
andl
ffree
testb
rclb
mov
test
sbb
fnsave
mov
sbb
dec
xchg
stc
fs
xchg
loop
sub
pusha
mov
fucomp
in
pop
out
dec
rol
cmp
es
sbb
dec
int
push
xor
jecxz
cs
iret
push
jno
outsl
out
pop
xor
mov
mov
push
cltd
test
pop
lea
lret
dec
adc
cmp
push
adcl
out
sub
insl
ljmp
cmp
inc
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
or
jecxz
jl
lret
jl
push
xor
in
add
sub
add
fdivrl
ret
mov
xchg
adc
cs
jp
scas
jns
add
cmc
and
dec
lret
mov
movsl
sub
mov
xlat
sub
outsl
push
pop
adc
movl
pushf
jno
mov
dec
fcomip
ss
ret
test
mov
mov
mov
bound
or
jmp
scas
sbb
shll
fdivrl
sbb
scas
std
push
sub
mov
cmpsb
sbb
gs
add
aaa
out
xchg
in
lcall
jl
decl
cmp
mov
pop
jo
mov
orb
es
outsb
lret
cwtl
jg
addl
jecxz
fmuls
das
mov
inc
mov
pop
cmpsl
loopne
xlat
insb
test
pop
mov
inc
mov
jns
and
shrl
outsl
std
pop
mov
scas
cmc
sub
test
or
push
mov
loop
test
sub
jno
cmpsb
loop
lods
mov
data16
dec
test
in
clc
paddusb
mov
adcl
add
xor
jmp
add
in
arpl
cltd
jp
fldenv
mov
jl
lret
jl
les
movsb
int
dec
cmp
and
mov
js
cmp
sbb
out
adc
mov
cmp
sbb
mov
xchg
mov
lods
dec
cmp
inc
roll
fstl
sub
cmpsl
mov
adc
dec
icebp
sub
es
lock
call
ja
mov
in
dec
or
add
xor
sub
stos
shrb
clc
pop
mov
push
xor
fwait
out
mov
dec
insb
pop
xchg
ret
mov
xchg
pop
add
push
call
cmpsb
ret
mov
leave
imul
push
mov
stos
pushf
cmp
movsb
fsubl
sahf
push
or
pop
sbb
sbb
inc
push
push
jge
xchg
dec
push
roll
inc
popf
dec
xchg
add
mov
lock
cwtd
outsb
leave
xchg
flds
sahf
loopne
pop
out
addb
push
iret
enter
addr16
lret
push
insb
mov
lea
fstpt
push
xlat
mov
inc
movsb
fdivs
fxtract
aam
inc
cmp
lea
xchg
pop
push
and
push
inc
push
shll
push
insl
loopne
jnp
lret
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
or
iret
lods
js
dec
clc
cmp
vpsllvd
xchg
movsl
ss
fidivl
adc
pushf
sbb
bound
mov
push
lods
js
lea
iret
push
shl
sti
dec
sbb
push
mov
inc
gs
sbb
scas
sub
dec
mov
adc
mov
jge
jno
xor
in
das
push
mov
mov
xchg
pop
cmp
rclb
jge
push
mov
jb
sub
mov
cmpsb
jne
addr16
push
inc
insl
dec
stos
mov
inc
ret
testb
push
mov
pop
push
imul
xchg
inc
outsl
inc
push
sbb
stos
stc
add
aas
or
add
and
addr16
jo
repz
cmp
subl
inc
mov
inc
je
imull
dec
sbb
mov
or
shrl
loop
mov
add
add
fcomps
in
popf
cli
movsb
loop
jo
or
fcmovb
ja
pop
mov
pop
jno
jnp
mov
test
scas
stos
cmp
and
push
faddp
outsb
cmpsb
or
je
mov
jmp
jmp
xchg
test
loopne
bound
add
xchg
addr16
jl
lret
jl
loop
inc
test
jae
out
mov
adc
scas
pop
pop
jg
mov
jae
jnp
dec
inc
bound
notb
jl
lock
cmpsl
in
jecxz
in
add
repnz
cmc
jnp
adc
nop
lds
scas
insl
or
xchg
jge
sahf
inc
mov
add
xchg
mov
aas
mov
test
jb
cwtl
xor
mov
outsl
ja
mov
sahf
xchg
es
je
xchg
iret
imul
xor
mov
inc
loopne
sbb
mov
movsb
xor
mov
jl
mov
shl
insl
push
jg
fisttpl
or
and
cmpsl
cli
es
sbb
sub
and
xchg
add
fimull
add
xchg
pop
leave
lea
dec
rcr
stos
psrlw
mov
outsb
xor
js
dec
push
pusha
arpl
pop
dec
mov
xchg
fwait
jo
loop
cmp
lods
jno
insl
cmpsb
out
cmp
int
gs
loope
xchg
xchg
ret
cwtl
cs
mov
push
cmp
jg
inc
pop
xchg
push
push
mov
sbb
mov
add
add
push
fs
jge
fidivs
shrl
lret
jl
pusha
pop
mov
sbb
lret
and
subb
out
mov
aad
das
pop
ljmp
xor
pushf
int
cs
pop
cs
xchg
xchg
aas
scas
pop
pop
scas
scas
maxps
jno
call
loop
test
loop
jno
xorb
mov
mov
stos
ret
ss
icebp
mov
adc
mov
mov
stc
scas
mov
or
pop
jo
dec
mov
xchg
adc
xor
bnd
inc
jno
out
rcrb
roll
imul
sub
cmp
cwtl
push
jp
sahf
rclb
test
shll
push
and
test
inc
ret
das
or
addr16
rorl
leave
sbb
data16
and
loopne
imul
xchg
mov
aam
cmc
stos
test
out
adc
stos
sbb
bnd
sbb
sti
xlat
mov
adc
pop
fists
mov
stc
out
xchg
jo
jb
add
ja
xor
xorl
cs
cwtl
xor
adc
pop
lds
and
mov
pop
ud1
ret
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
stos
jno
xor
pop
add
cld
mov
dec
and
fistps
mov
test
repz
pop
fcomps
inc
add
sub
push
or
mov
or
or
cmp
scas
xor
roll
xor
mov
pop
jecxz
xor
sbb
les
in
jp
sub
lea
jno
cmpsb
stc
and
fs
outsb
xor
ret
arpl
imul
mov
mov
movsb
stc
pop
sub
push
scas
outsb
cltd
lea
add
or
inc
das
push
lods
push
inc
pop
sbb
and
inc
fbld
div
push
xor
popf
into
xor
aam
insb
mov
movsl
in
iret
and
fdivrp
pop
clc
sarb
xchg
mov
out
or
rcrb
fsubs
xor
daa
xchg
jnp
xor
inc
js
xchg
pusha
or
cmp
mov
cmovno
dec
fsts
jo
xchg
aam
jne
xchg
cmp
inc
orl
inc
push
es
inc
bnd
jle
data16
repz
lret
and
inc
test
and
or
adcl
loopne
movaps
daa
cs
fwait
adc
out
and
dec
clc
ss
push
mov
data16
cwtl
imul
jecxz
lods
and
mov
and
ret
mov
mov
ret
jl
jmp
cltd
jns
cmpsb
pop
adc
dec
iret
sbb
mov
enter
push
pop
adc
push
dec
js
mov
je
sub
jmp
frstor
mov
cmp
dec
jp
orl
and
push
xor
dec
dec
cmp
cmp
inc
mov
or
int3
sub
add
sub
push
mov
and
dec
ret
loop
orps
negl
jl
add
mov
add
mov
mov
add
push
mov
xchg
cmpsl
dec
mov
xchg
add
cmp
xor
mov
sub
dec
and
loop
inc
fsub
cmc
xor
or
mov
stos
icebp
adc
pop
or
iret
dec
loope
shr
rorb
repnz
rcrb
add
xchg
jnp
addr16
insl
les
xlat
sub
outsl
popl
push
sbbl
imul
cwtl
mov
inc
jno
dec
sub
lea
cmpsl
lock
sbb
push
xchg
mov
nop
or
sbb
inc
mov
out
adc
mov
insl
add
addr16
pop
xchg
lods
or
push
pop
push
hlt
movsl
jno
xor
ret
ficomps
push
lcall
repz
xor
sbb
test
jns
sub
xchg
and
out
movsl
aas
push
addl
stc
and
fdivrl
jne
imul
and
clc
mov
push
jl
mov
xchg
inc
inc
out
scas
pushl
lds
xchg
std
aas
pop
mov
push
rol
cmp
rolb
lahf
std
adc
pop
pusha
dec
sub
lds
int
out
fsts
adc
adc
arpl
add
push
inc
and
add
call
dec
sbb
xor
test
cmp
les
js
lcall
test
pop
fwait
push
lret
enter
sbb
and
mov
imul
sub
pop
add
int3
loop
sub
jg
add
xor
sub
bound
pop
jnp
rcrl
sbb
xor
xor
push
scas
mov
rcrb
mov
or
js
aaa
jae
or
roll
or
lds
ret
enter
sub
shlb
cmp
mov
mov
in
inc
mov
jmp
clc
mov
dec
sbb
fwait
bound
scas
push
and
and
cmc
cmc
mov
nop
jg
cld
rcll
jmp
sahf
push
cmp
fidivl
adc
out
stos
jno
ljmp
andb
je
sbb
movsl
and
cmp
int
push
sbb
adc
fdivs
sbb
add
jle
clc
or
cmpl
mov
dec
mov
jae
push
xchg
call
adc
cmp
aaa
movsl
lock
and
or
xor
std
mov
jae
in
pop
cwtl
mov
lret
sbb
pop
jb
push
ds
std
add
lret
data16
loop
xchg
inc
mov
inc
repz
int
and
cmp
cmp
mov
sbb
mov
pop
mov
iret
ds
cmp
out
cs
dec
aas
jecxz
or
jo
xchg
push
cs
repz
jecxz
and
movsb
ret
test
mov
ss
xchg
cmp
ss
fmuls
adcb
mov
aas
sub
pop
stos
cli
jns
jp
sbb
push
movsl
cltd
dec
shlb
iret
test
dec
xor
rcr
std
outsb
cmp
or
inc
push
add
fsubs
fucomp
push
jmp
pop
bound
mov
sbb
add
jmp
mov
shrl
adc
fwait
push
negl
push
pop
mov
xchg
sub
cmpsb
pusha
jb
js
movsb
ljmp
test
pop
pop
dec
cli
push
cs
mov
ret
scas
push
dec
pop
inc
cld
adc
repnz
adc
es
bound
js
lock
jne
inc
mov
and
outsb
jmp
movsl
insl
jns
add
enter
mov
fdivrs
ss
mov
mov
or
subl
fidivs
sub
into
shl
cmp
scas
shlb
lcall
test
lds
aaa
scas
pop
mov
adcb
sti
xor
sbb
pop
dec
xor
out
sbb
pop
push
xchg
jg
add
dec
imul
hlt
clc
mov
ret
subl
ds
mov
popa
enter
imull
mov
pop
xlat
xchg
sbb
push
pop
ja
jae
sub
ret
xchg
frstor
inc
aam
cmc
xor
imul
into
nop
xchg
stos
int3
clc
and
adc
jb
pop
mov
jp
push
popf
xor
into
add
dec
inc
movsb
jns
mov
mov
adc
mov
mov
add
xchg
mov
sbb
mov
add
push
pop
add
push
push
xchg
pop
jae
xchg
pop
inc
out
mov
test
adc
fists
cmp
sub
call
inc
mov
fistpll
cmp
insb
lret
mov
test
lods
xor
in
xor
sarl
ret
dec
sub
stos
addb
cli
repz
hlt
xchg
mov
mull
loopne
test
mov
cmc
xchg
dec
out
dec
stos
jno
jp
lods
mov
inc
rep
shl
out
lock
test
incl
hlt
in
shll
stos
rclb
or
add
mov
movsb
loope
xchg
pop
pushf
in
dec
pop
sarl
sub
jg
mov
mov
mov
rcrb
ret
xor
jmp
add
popf
cwtl
das
iret
xchg
push
mov
enter
dec
cmp
sub
sbb
pop
or
mov
rcrl
adc
mov
fsubp
dec
lods
into
call
mov
and
out
adc
mov
mov
push
pop
out
cmpb
jns
es
dec
and
ror
das
mov
add
pop
dec
jg
ror
push
sar
add
xor
mov
inc
inc
pop
fnstenv
mov
xor
setnp
loope
fldlg2
xchg
jbe
or
dec
mov
xchg
das
mov
cmp
jb
mov
in
notl
adc
and
shrb
xor
cs
pusha
pop
repnz
add
adc
xchg
sbb
or
in
cmpsl
mov
jnp
add
fdivrs
sbb
mov
outsb
cmpsb
stos
aam
jmp
bound
add
aam
leave
jbe
sub
mov
jo
sahf
icebp
sbb
outsb
push
pop
push
out
repz
lahf
fsubrl
scas
sti
inc
push
sub
out
mov
test
ret
call
adc
push
jecxz
out
ja
and
xor
inc
cmp
loop
xor
popa
xor
leave
popf
mov
dec
es
adc
fst
push
repz
test
and
cmp
shr
push
or
icebp
jb
mov
insb
aaa
mov
ss
push
mov
fldl
imul
imul
sbb
clc
repnz
and
gs
cld
mov
cmpsb
insl
jb
jmp
lods
lret
comiss
iret
xor
repnz
and
fidivs
pop
orb
pusha
dec
push
jb
rcrl
jnp
push
inc
out
mov
cmc
add
jmp
jl
dec
aam
into
js
jb
xchg
aam
jns
das
jecxz
push
mov
or
out
lods
das
fcompl
cmp
mov
jae
push
dec
or
mov
mov
sbb
xor
loope
mov
das
lods
pop
push
inc
add
in
fs
lcall
xlat
xchg
add
xchg
insb
dec
js
lds
stos
mov
int3
and
js
je
and
adc
sbb
fldl
es
subb
iret
mov
pop
negl
adc
ret
inc
dec
adc
dec
clc
xchg
stc
xchg
mov
das
daa
mov
push
lret
movsl
repnz
inc
jp
stos
sbb
imul
push
loop
aam
mov
es
cmp
inc
aam
test
stc
push
outsl
imul
dec
and
and
enter
es
pop
or
push
jmp
stc
adc
sti
das
adc
inc
iret
push
nop
mov
xor
sbb
in
inc
inc
xchg
jge
jp
test
jmp
dec
cmp
pop
sub
xchg
sub
or
mov
daa
shlb
fs
sbb
adc
sbb
test
mov
insb
lcall
scas
adc
ja
pop
out
inc
outsb
cli
sub
adc
out
pop
sub
rorl
sti
out
dec
jle
push
aad
push
les
adc
mov
xor
add
in
dec
mov
cwtl
icebp
push
mov
in
pop
imul
jge
iret
fdivs
and
jg
xor
push
psadbw
cmp
popa
cli
js
mov
add
add
lahf
jg
imul
push
cwtl
jo
movsl
xchg
inc
lcall
pop
adc
or
mov
ret
inc
or
sbb
bound
mov
in
jbe
shr
aas
fisttpll
push
ss
fimuls
inc
cmp
adc
loop
lock
mov
into
dec
or
fwait
out
pop
les
or
lret
jecxz
mov
addr16
cmp
push
bswap
dec
adc
mov
sbb
inc
pop
out
inc
jle
cwtl
mov
negl
adc
sbb
xor
mov
add
imul
sbb
lea
inc
lcall
pop
dec
stos
lahf
out
scas
aam
sub
mov
mov
cli
clc
sbb
push
cmp
jecxz
icebp
scas
adc
negl
lea
jo
cld
out
es
sahf
dec
pop
cmp
and
xchg
frstor
xor
test
fcompl
inc
vmread
jbe
or
repnz
jnp
addl
gs
sbb
rolb
or
fmull
mov
lret
into
repz
int3
mov
insl
loop
pop
add
or
mov
xor
jb
adc
rcr
cmp
daa
lret
call
push
das
jle
fwait
das
andb
rol
fwait
in
insb
add
dec
adc
pop
add
jmp
push
xor
mov
cmc
push
inc
imul
iret
addr16
dec
or
cltd
mov
aaa
push
repnz
lods
sbb
sbb
ljmp
xor
stc
and
jae
pop
mov
jbe
or
jl
je
mov
inc
testb
enter
cmp
jno
jmp
pop
das
sub
push
push
push
or
mov
cwtl
mov
mov
sub
xchg
hlt
sbb
sub
adc
sub
cmp
popa
shl
jle
push
or
sbb
cmpsl
movsl
rclb
or
test
insb
add
adc
cwtl
inc
adc
pop
inc
dec
aas
out
mov
add
fs
mov
aam
mov
out
add
push
pop
add
pop
rorl
rorb
add
ds
add
inc
inc
fcoms
mov
and
push
pop
cwtl
and
push
sub
jge
cmp
loope
out
sbb
pop
scas
cld
ret
and
xor
orl
dec
repz
lods
nop
xchg
test
pop
aad
rorl
mov
aad
push
mov
mov
and
xlat
hlt
cmpsb
mov
mov
adc
mov
xchg
cltd
jb
sub
loop
movsl
adc
cltd
adc
js
call
iret
incl
push
push
push
ljmp
xor
adcl
test
jno
ret
rclb
out
testl
stos
addb
lods
orb
sub
add
js
pushf
int
push
xor
sahf
adc
cmpl
cmp
in
jmp
mov
mov
mov
push
repnz
add
xchg
sarb
xchg
das
cld
jge
stos
push
or
data16
mov
mov
shlb
cmc
xchg
loop
inc
insb
pop
sti
inc
in
fcompl
add
push
jne
in
jl
or
adc
not
test
repz
xor
fdivr
or
sbb
cld
aaa
test
loopne
inc
cmp
jb
mov
out
sbb
jne
xlat
xor
das
movsl
nop
push
pop
sbb
jecxz
es
lahf
inc
sbb
adc
xchg
cmpsb
mov
pop
jmp
and
pusha
jg
dec
jmp
bound
nop
xor
fst
jne
mov
adc
into
inc
push
mov
rorl
leave
jg
cmp
pop
in
mov
js
cltd
ds
nop
pop
or
pusha
pop
or
out
shrl
xlat
pusha
jmp
fs
out
frstor
fwait
and
fsubrs
jl
sub
xchg
fimuls
outsl
jg
mov
xchg
dec
pop
or
fistps
mov
push
enter
sub
sbb
ret
jbe
shl
loopne
popf
std
cmp
xchg
and
jmp
sbb
cmp
mov
or
fildll
test
outsb
in
pop
rclb
xor
pop
push
mov
sbb
in
nop
call
imul
shl
xchg
mov
or
xchg
in
mov
clc
sahf
test
movsl
push
subb
sbb
movsb
mov
daa
test
fs
jnp
mov
jae
and
inc
xor
jp
mov
and
xchg
imul
add
dec
inc
xchg
cwtl
cmp
cwtl
jae
adc
dec
cmp
jp
notb
sbb
dec
push
into
or
sub
mov
dec
arpl
test
fisttps
jns
sub
add
pushf
mov
repnz
cwtl
es
imul
sahf
mov
cmp
cmp
sarl
push
mov
jnp
pop
pop
std
or
fs
in
in
dec
jb
xchg
sahf
xchg
in
mov
cmpsb
push
xor
lret
mov
push
lret
lahf
xorl
mov
xor
hlt
jl
xchg
stc
sbb
mov
scas
cld
cmp
push
fmul
ret
sbb
test
push
ja
scas
mov
dec
in
adc
fucom
cli
mov
push
and
adc
sbb
mov
mov
pop
out
push
out
movsb
cmp
jnp
pop
fstl
mov
or
call
lock
lock
inc
mov
push
jnp
leave
lods
mov
mov
repz
jbe
add
in
dec
sysexit
mov
mov
xor
ret
ja
xchg
sbb
xchg
and
mov
test
mov
or
sahf
push
insb
es
rcl
aaa
stos
cwtl
lret
icebp
xchg
cmp
mov
lret
aas
xchg
inc
adc
repz
fmull
xchg
repz
xor
ljmp
pop
jl
imul
adc
popa
pop
cmp
cmp
in
shrb
sbb
push
lock
jg
or
adcb
test
pop
and
mov
insb
dec
ja
sarl
incl
mov
cmp
jnp
in
and
pop
jns
cmp
inc
pop
mov
push
ja
icebp
cmp
mov
movsl
lret
nop
mov
std
rorb
xor
cmpsb
fcomps
call
test
scas
push
and
mov
lahf
jge
and
jae
xchg
jmp
cmp
repz
shrl
lea
loopne
xor
dec
and
aas
popa
sbb
dec
aam
push
dec
lods
fwait
cmp
js
repz
cmp
ljmp
dec
inc
fsub
out
mov
adcb
lret
pop
jmp
cmc
fidivrl
das
add
dec
rcrl
ficompl
in
adc
push
into
repz
mov
push
sbb
lds
test
cmpsb
popf
arpl
cmp
sub
xor
dec
xor
stos
call
add
adc
xor
icebp
scas
jmp
loopne
mov
xor
jns
pop
outsb
pop
aaa
inc
cmpsb
xchg
sbb
or
stos
adc
sub
jp
mov
mov
aam
ret
aaa
ret
push
jg
xor
inc
ja
pop
push
mov
cmppd
xor
push
loop
sub
cli
push
jno
aam
loope
imul
pop
xchg
in
popf
mov
mov
mov
xchg
mov
mov
add
sbb
pop
roll
lahf
wbinvd
pop
loope
test
movsl
lods
hlt
mov
sbb
ds
mov
imull
push
push
sbb
cmp
lret
dec
fs
xchg
cmpsb
daa
inc
imul
push
dec
inc
mov
push
inc
and
in
add
ljmp
ja
outsb
sbbb
mov
aaa
test
pop
or
push
aad
stc
cmpsl
insl
clc
int
push
dec
movsb
xchg
clc
inc
insb
imul
scas
add
test
dec
data16
incb
add
push
aam
xchg
cmp
lock
clc
mov
xor
cmp
aad
fwait
add
in
ss
or
pop
in
testl
dec
and
pop
add
mov
loope
jns
sub
notb
in
xor
popa
push
mov
cmp
les
mov
jge
ljmp
bound
add
out
mov
adc
and
fwait
add
xor
test
fs
add
mov
cli
add
or
push
or
push
jae
ss
xor
cmp
pop
jnp
and
std
push
dec
jge
inc
ret
fwait
rcrl
fst
mov
in
or
inc
into
xor
dec
mov
mov
adc
adc
std
mov
lea
dec
addb
iret
popa
adc
and
nop
insl
out
mov
out
fucompp
lods
es
mov
leave
orb
rorb
mov
xlat
cli
or
repnz
inc
sub
fsubl
out
cwtl
mov
outsb
lret
jne
fcmove
out
push
repnz
pop
aam
cmpsl
imul
jns
in
mov
push
inc
call
dec
sbb
or
sub
test
jecxz
ds
dec
and
mov
mov
into
test
lock
mov
and
repnz
std
sub
sahf
xor
ljmp
xchg
cwtl
rcl
loop
inc
popa
mov
xchg
adc
lret
mov
notl
mov
sub
in
movsb
sbb
int3
shll
test
pop
decb
add
xchg
mov
jb
movsb
inc
xchg
mov
adc
fucomip
inc
dec
shll
pop
clc
cltd
push
adc
sbb
jl
std
mov
fwait
insb
add
add
cltd
lret
lds
stc
adc
pusha
dec
jbe
mov
clc
mov
add
inc
loop
push
ljmp
lahf
jns
or
dec
mov
pop
jecxz
dec
test
sti
gs
das
sahf
ret
xor
jo
lds
sbb
and
mov
out
fsubl
mov
sbbl
inc
pop
je
xor
adc
mov
xchg
addr16
xchg
mov
mov
inc
sbb
shlb
fisubs
stc
push
out
lods
scas
sbb
aam
sbb
test
sub
mov
push
out
es
into
hlt
jmp
jbe
mov
test
xor
push
not
jg
push
push
sarb
mov
inc
fwait
jl
dec
jne
outsb
and
inc
icebp
dec
lods
pop
mov
dec
xchg
ss
push
imul
pop
or
int
adcl
push
dec
jmp
je
les
jns
adc
mov
imul
iret
pop
sbb
jb
jl
les
mov
fdivrl
sub
pop
repnz
aam
dec
mov
cmp
ss
nop
dec
movsb
jge
xor
and
mov
mov
pop
insb
fnstsw
test
lret
fstpl
inc
mov
cs
push
cmp
pop
mov
cmp
fdivrl
icebp
leave
jp
hlt
rcll
xor
sbbb
cmp
insb
rorl
jp
mov
test
jle
mov
push
notl
or
aaa
test
or
fisubs
mov
sub
ret
xchg
fimuls
cmp
inc
icebp
push
inc
repnz
rorl
mov
idiv
inc
cmp
lret
cmpsl
fwait
dec
sub
call
lret
xchg
sub
repnz
sub
in
loop
sbb
mov
xchg
inc
pop
sub
push
or
push
push
jg
scas
push
sub
push
dec
loop
cltd
dec
jl
sub
lods
xor
xchg
cmpsb
and
xchg
xor
ljmp
pop
int
addr16
cmp
push
dec
push
cltd
mov
pop
jbe
aas
mov
or
mov
sbb
mov
fbld
cld
fisubs
clc
mov
inc
push
cmp
pop
push
shrb
or
je
mov
xor
in
mov
pop
loope
push
mov
push
fiadds
or
inc
or
jns
fbld
add
and
fcmovne
jecxz
loop
mov
or
mov
sbb
pop
add
loope
pop
add
or
jae
rcrb
dec
or
repz
repz
xorb
scas
xor
jae
repnz
scas
dec
mov
sbb
sbb
inc
call
adc
test
sbb
loope
xchg
or
pop
insb
aas
pop
bound
dec
negb
jne
arpl
insl
test
and
imul
jbe
jbe
pop
rcrl
cli
ffree
xor
aaa
enter
jge
aas
mov
sub
test
out
into
ljmp
pushf
test
imulb
pop
imul
repz
jl
dec
clc
pushf
and
cltd
fldcw
mov
cmp
sarl
sub
cmp
xor
lock
push
push
xor
cwtl
repnz
dec
cwtl
imull
dec
push
add
addb
lret
scas
pop
cld
fisubl
fwait
add
imul
push
ja
pop
mov
mov
cmp
outsb
repnz
repnz
shr
popa
mov
shll
push
ds
jae
adc
aad
mov
shrl
or
add
pop
add
outsb
test
xchg
aaa
enter
ret
out
daa
stos
mov
aam
sbb
bound
out
xchg
xchg
sbbb
pop
shl
sbb
add
insb
xchg
adc
sbb
mov
daa
push
push
push
mov
xchg
ret
iret
outsl
cwtl
jbe
dec
gs
push
jle
jb
push
je
jo
iret
sahf
lcall
cltd
push
nop
push
or
adc
and
test
xchg
xchg
cmpsb
jo
inc
xor
dec
cli
insb
xchg
mov
pop
stos
mov
sbb
je
sub
js
pop
subb
jle
lods
dec
outsl
mov
sub
mov
mov
ret
nop
imul
pop
dec
js
mov
cli
sbbl
ss
das
mov
bound
pop
fadd
repz
push
jo
in
push
mov
scas
fistl
hlt
sub
incl
push
push
leave
sahf
push
push
mov
sbb
push
insb
cli
imul
mov
mov
cmp
jb
mov
outsl
hlt
xor
in
sub
sti
add
jb
cli
xchg
loop
aas
lahf
out
cmp
add
adc
jnp
int
ficoms
sub
push
pop
add
rcll
push
xchg
cltd
adc
pop
out
jp
inc
iret
cmp
pusha
cld
mov
dec
mov
lea
mov
xor
cmpsl
out
xchg
adc
push
mov
mov
lahf
add
add
data16
mov
push
dec
movsl
dec
roll
and
leave
lret
xor
mov
out
arpl
jl
stos
mov
rorl
mov
sbb
adc
sti
and
lods
fsubl
mov
test
lahf
addb
fs
aaa
cs
outsl
ljmp
imul
es
or
mov
filds
sub
pop
enter
into
ficoml
mov
insb
push
jge
mov
add
shl
push
or
jns
sub
sbb
mov
int
pop
cmp
mov
js
aam
fcomps
sbb
mov
or
inc
xlat
mov
js
mov
cmpsb
add
xchg
mov
lods
in
xchg
pusha
and
push
push
mov
xchg
push
lret
mov
outsb
push
inc
inc
pop
insl
xor
aam
mov
int
mov
mov
js
das
imul
into
frstor
repz
fwait
push
sbb
rol
jns
int3
mov
and
cmp
add
ja
cmp
push
rcrl
test
jecxz
or
repz
push
xor
aas
push
push
aas
xchg
movsl
pop
jne
pop
mov
sub
std
sbb
sarb
pop
inc
outsl
arpl
ljmp
xchg
jno
aad
or
mov
cld
cmp
push
sbb
push
lcall
xchg
ret
or
lods
or
xor
inc
inc
arpl
jecxz
daa
mov
add
setbe
cltd
sbb
mov
fstpt
aaa
mov
fwait
mov
in
adc
xor
sub
lods
shlb
jmp
mov
adc
shr
shl
das
das
mov
jns
dec
xlat
cmp
roll
loope
mov
orl
mov
jle
mov
adc
pop
pop
push
xchg
jle
xchg
adc
and
xor
cmp
dec
sbbb
mov
sub
insb
fisubrl
cmp
dec
lcall
fdivrs
mov
pop
mov
mov
or
lret
dec
in
mov
movsl
cmp
dec
addr16
shlb
outsl
sub
mov
push
movsb
mov
push
lds
dec
mov
js
cmp
sbb
loope
sbb
mov
and
sub
jne
xlat
int
iret
push
mov
addb
lcall
lahf
clc
fildl
mov
js
nop
dec
setns
pop
movsb
push
faddp
pop
jmp
mov
push
mov
jbe
clc
lahf
push
jbe
aam
mov
dec
test
bound
adc
xor
outsb
test
scas
scas
xchg
loope
je
dec
arpl
cwtl
cmpb
daa
pushf
test
in
mov
xchg
rol
sti
fsubp
inc
mov
jge
pushf
insl
xchg
shrl
in
dec
mov
mov
inc
das
or
in
xlat
test
and
cmc
mov
enter
and
mov
cld
mov
add
mov
fbstp
dec
sbb
testl
sub
call
mov
into
pop
jge
mov
pop
insb
adc
rclb
lods
fildl
adc
push
xchg
or
lods
dec
cmp
xchg
lahf
adc
push
imul
dec
sbb
aaa
dec
dec
test
dec
test
jns
lds
fmuls
pop
mov
es
mov
push
popf
jno
adc
mov
xchg
xchg
cmc
xor
dec
cmp
cmc
push
xor
ja
xor
and
inc
fldln2
clc
dec
movsb
cmpb
mov
push
test
in
cmpps
insb
aas
xor
mov
pmuludq
jo
rolb
jl
ss
lcall
aas
add
fldl
fadds
inc
sub
in
push
push
mov
pop
adc
dec
xchg
lahf
dec
jae
data16
into
rorl
jg
jmp
mov
mov
xor
pop
adc
mov
aam
adc
lods
movsl
test
or
outsl
mov
aas
or
or
std
mov
shrl
movsl
push
sbb
scas
or
cmp
fidivl
jl
jmp
xchg
push
ret
add
adc
insb
loop
pop
mov
xlat
pop
cs
add
mov
sbb
sub
add
pop
xchg
jns
mov
mov
aad
inc
cs
push
xchg
mov
and
leave
movsb
cmp
and
lcall
or
hlt
mov
rorl
jae
repz
testl
lahf
or
mov
arpl
loopne
pop
cs
jns
data16
fcompl
mov
sarb
std
imul
ljmp
and
pop
imul
clc
dec
dec
jg
xor
in
outsb
mov
sbb
xchg
cmp
xor
imul
sub
mov
idivb
fld
mov
fstl
and
adc
and
in
aaa
sbb
sub
dec
adc
sbb
inc
fs
push
rorl
mov
mov
jmp
inc
inc
inc
test
js
loop
ficoms
ds
arpl
pop
sbb
push
rcrl
sbb
dec
das
daa
cmc
pop
cmp
loop
das
inc
jmp
es
or
test
xchg
jge
jl
daa
mov
dec
mov
jnp
sub
push
mov
mov
jg
inc
jae
es
cwtl
mov
pop
inc
aad
stos
or
sbb
fs
push
xor
lahf
testl
cmp
sahf
fucomp
mov
jns
add
jne
test
sbb
sub
or
inc
shrl
sbb
dec
loope
fwait
mov
mov
fimull
in
fwait
jb
das
cld
fs
mov
jge
sbb
stos
js
movsb
jle
inc
mov
push
loop
mov
int
loope
mov
dec
test
sarl
pop
loop
jp
xchg
add
jae
or
insb
addr16
mov
or
lcall
mov
push
xor
xor
inc
xacquire
add
daa
jbe
idivl
mov
in
mov
push
pop
add
repnz
fistpl
or
push
and
icebp
pop
pop
aaa
sahf
push
rorl
add
test
push
cmp
push
jg
jnp
aam
adc
mov
inc
orb
cmpl
pop
xchg
dec
aad
push
jmp
jo
mov
xor
arpl
arpl
loop
pop
lea
je
sub
cmc
mov
cs
scas
cmp
aas
inc
xor
div
add
xlat
dec
insb
mov
and
fcoms
dec
decb
ret
mov
pop
xor
insl
pop
push
in
aaa
xchg
mov
ret
jle
gs
fnstenv
pusha
ss
addr16
sbb
ljmp
dec
xchg
aaa
pop
jg
mov
jae
pop
daa
mov
lret
jnp
mov
lods
jg
push
icebp
push
adc
xchg
sti
cmp
mov
mov
adc
vpmuludq
fists
jg
sub
dec
push
outsl
lods
cltd
fmuls
inc
leave
push
mov
inc
clc
shrl
sbb
daa
sub
sub
adc
push
xrelease
fwait
mov
and
inc
lret
xor
xchg
mov
xlat
xor
daa
cld
out
mov
jecxz
ret
dec
jno
out
xchg
fwait
rol
push
mov
mov
pop
int3
js
xchg
psrad
and
push
add
fsub
inc
test
cmp
dec
lcall
mov
xchg
sbb
xchg
fisttpl
scas
pop
mov
loop
adc
mov
xor
aam
jg
push
es
icebp
and
insb
xchg
push
and
repz
inc
pop
shl
cmpsb
pop
sti
pop
add
in
sbb
jle
jb
mov
iret
mov
sub
lds
lcall
or
lahf
mov
imul
add
icebp
cwtl
inc
insb
xor
or
sbb
loop
scas
mov
sub
pop
ret
or
call
mov
mov
leave
dec
imul
repnz
mov
fadd
aas
ja
sti
jae
xor
std
dec
ss
lret
adc
jo
fnstenv
in
not
les
cmp
jg
adc
imul
sbb
dec
push
cmc
pop
pusha
cmp
jo
push
ds
push
neg
hlt
fildll
mov
lahf
sbb
mov
pop
in
xchg
mov
or
mov
divb
mov
xor
sbb
xor
test
mov
add
sub
mov
xchg
and
mov
lahf
hlt
jle
pop
imul
stc
aad
mov
mov
push
je
into
fsts
sub
and
or
xchg
imul
xchg
and
xlat
inc
js
inc
xchg
sub
ljmp
ja,pt
bound
mov
jb
ja
stos
test
jmp
jb
push
rclb
cs
adc
and
jae
pop
push
lods
cmpl
jecxz
fdivrs
xchg
cmp
nopl
add
cmp
inc
fwait
pop
stos
or
dec
xchg
nop
icebp
jecxz
daa
outsb
xor
add
addr16
mov
xor
dec
pop
lods
mov
sarl
mov
scas
mov
push
lock
pop
xchg
xlat
mov
scas
push
lcall
ja
idivl
push
mov
je
aas
lds
outsl
pop
call
pop
sar
imul
mov
popa
scas
imul
mov
cmp
xchg
int
imul
lods
and
lods
sbb
mov
pusha
xchg
stc
movsl
push
sub
sbb
arpl
inc
cltd
inc
movsbl
icebp
aas
jae
lea
hlt
lock
rcrl
xor
push
lock
test
ljmp
jle
rorl
xchg
push
in
iret
pop
rorl
inc
mov
mov
xchg
imul
mov
outsb
popa
lock
xorl
mov
push
daa
int3
repnz
aaa
inc
push
jno
sbb
scas
jns
inc
push
push
push
dec
jmp
and
pop
out
inc
lret
stc
negb
mov
and
jge
in
iret
pop
mov
imul
insb
icebp
fnsave
cld
xchg
mov
xorb
xchg
mov
imul
popa
pop
shr
and
insl
movsl
int3
or
insl
add
sbb
ljmp
cmpsl
punpcklwd
in
movsl
add
dec
addr16
and
xor
imul
adc
int
cmp
iret
sbb
xor
enter
out
shrb
aaa
inc
daa
jecxz
jnp
add
negl
dec
cli
push
scas
jne
cmp
bound
xchg
lcall
xor
neg
push
mov
repz
pop
es
aam
sub
les
pop
xchg
fistpl
shl
push
dec
add
cli
add
or
jns
or
stc
or
incb
and
inc
jbe
jno
adc
nop
int3
jl
mov
or
mov
leave
xlat
inc
jl
mov
sbb
clc
iret
cmc
popa
xchg
cmc
pop
out
fmuls
add
jae
pop
push
repnz
push
push
mov
cmc
lret
lahf
pop
arpl
cmc
dec
inc
push
lods
mov
testb
inc
addr16
nop
xchg
aam
scas
mov
xor
decb
fcomps
enter
lods
repz
sub
mov
jecxz
pop
pop
sub
mov
mov
push
cmp
outsl
xchg
mov
xchg
sahf
cmc
ja
push
mov
xchg
lock
in
jle
mov
imul
pushf
push
fisttps
sub
ret
icebp
scas
bound
jl
jle
std
popf
and
test
pop
lods
addr16
int3
pop
fwait
xchg
push
or
mov
loopne
mov
mov
pop
femms
arpl
xorb
jge
adc
clc
pop
jecxz
mov
ss
shl
dec
stos
popf
jo
dec
loop
aad
fmul
int3
mov
sub
inc
mov
xchg
mov
cmpsb
xchg
neg
daa
add
lahf
pusha
push
jb
cmpsl
mov
flds
pop
into
jp
xor
aas
xlat
push
out
dec
dec
popa
add
sbb
push
aam
mov
int
dec
fdivp
add
jnp
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
or
add
rolb
add
or
add
xor
add
pusha
pop
add
loopne
add
adc
add
sub
add
pop
or
adcb
cmpb
add
mov
or
adc
add
lock
addb
add
add
add
add
add
add
add
in
push
add
in
push
add
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
test
add
lcall
xorb
add
loopne
add
add
add
add
add
add
add
incb
add
insb
adc
add
add
subb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
inc
or
sbbb
addb
add
add
add
add
add
add
add
outsb
or
xorb
addb
sbbb
cmpb
add
mov
add
add
add
add
add
add
add
rorb
add
jae
add
call
add
add
add
add
add
add
add
jmp
add
add
add
add
sbb
subb
add
dec
add
addb
add
add
add
add
add
add
add
repz
add
add
js
add
add
add
add
add
add
add
or
adcb
add
test
add
rolb
bound
add
fadds
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
xor
add
adc
add
in
add
add
add
inc
sbb
add
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
in
add
add
add
jns
add
push
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
jg
add
or
add
add
add
add
add
mov
add
or
add
add
add
add
add
xchg
add
decb
add
in
add
add
add
rcrl
add
in
add
add
add
frstor
add
in
add
add
add
out
add
push
or
add
add
add
add
add
mov
add
or
add
add
add
add
add
mov
add
in
add
add
add
adc
add
add
add
in
add
add
add
adc
add
push
or
add
add
add
add
add
fiaddl
add
or
add
add
add
add
add
jecxz
add
or
add
add
add
add
add
in
add
push
or
add
add
add
add
add
cmc
add
push
or
add
add
add
add
add
add
or
add
in
add
add
add
dec
pop
add
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
in
add
add
add
or
add
pop
add
inc
add
xor
pop
add
pop
add
aaa
add
add
xor
dec
add
cmp
push
add
add
dec
add
add
add
push
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
or
inc
add
push
add
xor
add
add
add
push
add
add
add
inc
add
add
add
xor
push
add
dec
add
add
inc
add
add
xor
pop
add
inc
add
add
pop
add
add
or
push
add
push
add
add
add
dec
add
push
add
push
add
or
pop
add
dec
add
xor
aaa
add
inc
add
add
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
add
dec
add
pop
add
dec
add
push
add
xor
inc
add
add
pop
add
add
add
cmp
cmp
push
add
add
add
push
add
pop
add
xor
add
add
add
push
add
add
dec
add
xor
xor
pop
add
add
pop
add
aaa
add
add
add
add
add
add
inc
add
add
inc
add
pop
add
add
cmp
cmp
push
add
xor
add
pop
add
push
add
add
add
push
add
push
add
add
add
add
add
push
add
inc
add
pop
add
push
add
pop
add
add
xor
inc
add
pop
add
pop
add
add
push
add
xor
inc
add
inc
add
add
push
add
xor
pop
add
or
push
add
add
xor
pop
add
push
add
inc
add
pop
add
add
add
dec
add
pop
add
push
add
push
add
add
xor
pop
add
push
add
dec
add
inc
add
dec
add
add
jmp
jle
js
aam
sub
jge
add
pop
add
dec
mov
lcall
jmp
adc
push
and
daa
call
mov
cmp
push
scas
and
sbb
jne
push
insl
sbb
inc
cmpsb
mov
cs
sub
pop
fsubrs
cmc
mov
mov
ror
punpckhwd
cmp
mov
fldl
lds
je
add
and
lock
in
mov
push
int3
sub
loopne
lock
ss
mov
lret
or
add
add
jne
sub
cmpsb
stos
jns
fwait
andb
and
xchg
xchg
je
push
push
mov
pusha
mov
mov
js
dec
sub
sti
in
out
pop
push
sub
jmp
mov
dec
pop
push
mov
pop
cmp
subl
pop
in
mov
cmc
sti
inc
cmpsl
roll
leave
out
push
lea
push
lret
xchg
lods
xchg
ss
arpl
adc
mull
adc
scas
in
sbb
cltd
scas
push
cwtl
mov
pop
dec
or
inc
and
ljmp
test
shlb
out
or
stos
mov
push
cltd
loopne
sub
clc
fld
outsb
sub
cmp
add
imul
or
pop
insl
sbbl
push
in
sahf
stos
push
call
in
sub
pusha
push
js
mov
mov
dec
nop
fmull
inc
add
jl
cmp
xchg
fisubrl
mov
mov
out
sub
sub
mov
cwtl
rclb
scas
and
mov
popf
pop
ja
push
xchg
mov
sbb
mov
movsb
out
popa
lahf
xlat
aad
mov
push
cmc
fidivrs
leave
and
out
ss
mov
push
je
out
xchg
scas
rorb
fnstsw
sbbl
enter
and
pop
les
bound
or
fstpl
sbb
rclb
mov
pop
dec
fwait
stos
jne
mov
ss
jg
jp
lahf
imul
dec
popa
mov
arpl
push
sbb
xchg
ss
out
push
mov
add
mov
fs
aaa
sub
dec
pop
pop
xor
xlat
out
testb
int3
fistpll
add
sbb
xchg
lahf
cmp
mov
mov
xor
and
push
mov
jno
int3
out
dec
xchg
xchg
stc
jg
sbb
es
add
inc
cmp
pushf
test
pop
or
cmp
push
or
stc
lock
out
outsb
in
pop
push
sub
mov
xacquire
jns
nop
movsb
pop
aad
fsubrs
add
lods
adc
xchg
rol
enter
cmp
jae
xchg
pushf
xchg
lret
or
aam
xchg
pop
lock
testb
lcall
nop
jecxz
push
jge
mov
mov
pmuludq
xchg
movsl
add
pop
notb
mov
loop
repnz
xchg
cmpsl
mov
stc
pop
cs
ffreep
xor
push
mov
lods
in
loop
aas
cld
scas
insl
mov
out
into
pop
mov
call
mov
call
push
loope
in
stc
pop
push
stos
inc
mov
inc
popa
ret
mov
add
jg
ret
add
mov
outsl
in
mov
mov
mov
test
icebp
js
jae
jae
add
mov
inc
add
test
mov
scas
fs
jl
rcl
cmp
or
bound
in
inc
push
jnp
mov
pop
cmpb
sbb
fidivrl
pop
mov
daa
pop
xor
test
adc
mov
std
ja
insb
dec
ds
inc
mov
sbb
lret
insl
mov
int3
and
adc
jle
mov
jo
adc
popf
jne
lahf
fstpl
scas
out
mov
mov
cli
pop
sub
xchg
cld
mov
xor
inc
mov
daa
dec
loope
das
xor
cwtl
jge
and
push
sbb
xor
shll
jb
sbb
pop
push
and
inc
dec
gs
dec
mov
sub
and
mov
pop
mov
sbb
push
add
xchg
inc
xor
lods
ja
dec
push
mov
jle
js
lret
inc
scas
jb
aaa
xchg
adc
jp
jo
mov
inc
addr16
out
push
sar
dec
imul
and
lock
ja
rcrl
cmp
scas
sbb
fwait
pop
sbb
imul
cmpsl
or
rcl
and
fcoms
and
or
pop
adc
or
in
mov
cwtl
mov
lods
mov
outsb
pushf
dec
sbb
jae
xor
gs
or
aam
jecxz
jno
dec
sub
cmpb
inc
cs
cmp
test
sti
and
pop
push
push
push
pushf
push
jbe
xchg
sbbb
sub
and
dec
jp
cmp
inc
pushf
loop
push
sub
ja
xchg
inc
stos
stos
or
adcl
cmp
push
fidivrl
push
xor
sub
push
iret
gs
pop
mov
xchg
rsqrtps
add
dec
ljmp
test
sbb
xchg
loopne
clc
fs
jns
inc
jb
xchg
push
add
mov
sti
mov
push
faddl
leave
cmp
jle
sub
aam
jge
pop
inc
das
inc
fdivrs
sbb
stos
frstor
xchg
add
jns,pt
mov
testl
xor
xchg
rep
pushf
faddl
sub
pop
xchg
jnp
push
cwtl
imul
iret
mov
cmpsb
stos
insb
jp,pn
sub
push
dec
jmp
fimuls
lret
test
cs
mov
outsb
jne
cld
add
mov
scas
sarl
jmp
sbb
xor
mov
xor
xlat
lahf
pop
or
mov
adc
xlat
xor
lock
push
xchg
stc
jmp
mov
jecxz
or
sub
jnp
imul
into
sbb
movsb
lret
adc
es
rep
sbb
test
or
cmp
mov
ljmp
das
inc
addr16
leave
daa
and
mov
pusha
shrl
jbe
add
pop
add
les
mov
js
push
nop
jmp
add
outsb
addb
cmp
xor
out
push
xchg
loop
cmp
outsb
cltd
jno
pop
pop
jno
mov
cli
or
loop
jl
xchg
dec
jb
aaa
dec
int3
nop
push
adc
inc
lahf
dec
jb
adc
sub
fcmovnb
enter
push
pop
test
dec
inc
and
imul
and
pop
cmpl
mov
stc
sti
cmpsb
push
icebp
add
pop
jbe
mov
xchg
sub
fs
popl
lods
popa
mov
rcrb
add
sub
fs
mov
xorl
add
out
lea
push
push
les
clc
sbb
test
mov
xor
jge
out
pop
outsl
nop
mov
ja
mov
adc
xor
cli
fcmovb
lahf
mov
jb
mov
and
gs
addr16
loopne
xchg
int3
and
aad
and
or
add
or
rcll
pop
sahf
mov
and
mov
aam
test
mov
xor
je
sbbl
das
iret
lret
mov
xchg
iret
mov
outsb
loope
cmp
xor
cmp
cmp
adc
cmp
sarl
mov
fs
lcall
das
push
add
xchg
gs
mov
test
and
imul
out
xchg
sbb
stos
mov
lock
lds
jle
cltd
and
je
stos
popf
jge
dec
jae
push
imul
clc
mov
dec
fidivrl
int
fs
out
push
jle
out
push
aam
out
jecxz
push
pop
orb
inc
pusha
pop
push
adc
fisttpl
arpl
push
icebp
int
je
in
call
cltd
adc
mov
ljmp
arpl
mov
sbb
fdivrs
sbb
xor
std
or
inc
inc
in
fiaddl
mov
imul
xchg
ja
pop
bsf
les
or
loope
mov
rorl
cmp
cmp
cs
xchg
xor
fidivl
mov
cltd
cmp
pop
lock
rcl
or
int
stos
mov
gs
sbb
sti
cltd
fwait
xchg
ret
jmp
mov
adc
push
nop
aad
xchg
xchg
jnp
push
mulb
mov
repz
gs
test
ror
add
jns
in
out
aaa
and
sti
xor
int3
int
shrl
insl
popa
jbe
adc
jge
lsl
subl
sti
gs
xor
inc
dec
pop
cli
sub
or
mov
inc
lds
jno
cmp
daa
and
inc
jno
nop
icebp
add
mov
xchg
cwtl
ret
mov
fwait
arpl
out
in
sub
xchg
sbb
sub
pop
sarb
scas
ljmp
rorl
enter
jo
es
loop
jmp
mov
mov
pop
rcll
in
inc
inc
cwtl
lods
mov
fdivrs
int
pop
inc
data16
xchg
sbb
das
dec
sbb
xchg
pop
mov
cmp
scas
xorb
loope
push
mov
mull
xor
inc
xchg
std
jge
dec
cmpl
imul
dec
jnp
stos
xchg
in
loop
int3
cmpl
push
gs
shl
push
divb
adc
divps
das
sbb
pop
dec
xchg
jnp
inc
sbb
mov
out
add
jecxz
call
loop
sbbl
jmp
cld
repz
test
stos
icebp
fldt
mov
gs
shl
mov
stos
adc
mov
fmul
cmpb
xchg
pop
inc
lcall
out
push
adcl
mov
pop
push
or
in
dec
es
xchg
mov
and
in
mov
es
jmp
push
add
mov
iret
gs
pop
movsb
test
fbld
cmp
adc
add
loopne
shll
lods
sbb
jnp
sbb
xor
xchg
ljmp
cmp
icebp
aaa
insl
sbb
cld
popa
dec
imul
iret
in
push
push
lret
xor
rcrl
mov
mov
mov
pushf
aaa
lahf
testb
adc
mov
clc
xlat
mov
and
xor
lock
icebp
addr16
mov
insb
and
imul
repz
or
shl
addb
xor
dec
push
push
pop
mov
cmpsb
jg
mov
mov
jo
and
js
cmpsl
loop
xor
iret
sub
dec
xor
jecxz
ror
sahf
aaa
insl
rcll
mov
fwait
in
sbb
jns
daa
jae
push
scas
test
jbe
xlat
mov
xchg
inc
stc
in
daa
cmpsb
jae
jmp
pop
sbb
push
and
sub
xorl
jae
mov
ja
jae
jg
add
push
pop
xlat
adc
mov
mov
ds
mov
call
movsb
inc
xchg
xchg
pop
inc
mov
push
mov
jmp
lret
or
jge
inc
daa
rcll
xor
dec
or
imul
outsb
xorl
mov
inc
and
xchg
fdivr
imul
out
sahf
mov
push
push
mov
dec
leave
aam
pushl
mov
pop
pop
into
das
sub
xchg
push
out
js
adc
call
std
xlat
icebp
lcall
pop
xor
push
adc
imul
iret
subl
or
pop
mov
pop
add
mov
dec
add
mov
add
xchg
stos
xor
mov
lods
inc
gs
loop
jae
jl
mov
push
lea
mov
push
mov
push
cmpsl
das
sub
mov
push
inc
add
fsubp
gs
and
xor
popf
ds
add
cmp
aad
outsl
add
sbb
call
cwtl
rclb
insb
push
inc
inc
cmpsl
jnp
jecxz
lock
lods
and
jge
cmp
pop
scas
shll
sbb
xor
fs
push
mov
and
scas
int3
sub
inc
mov
in
xor
sbb
add
scas
ror
push
pop
mov
cmp
xchg
rep
loope
add
pop
add
test
xor
daa
bound
xor
inc
add
xchg
idivl
call
jno
aam
dec
insb
lods
push
mov
xor
addl
cmp
jmp
shrl
aaa
cwtl
sti
das
dec
dec
sbb
add
repz
sbb
mov
ds
push
out
jg
fimull
loope
push
jns
lret
mov
mov
adc
jae
and
mov
mov
loope
rcrl
lods
xchg
jns
lds
js
repnz
jecxz
dec
dec
and
jno
test
mov
stc
dec
enter
inc
jg
in
adc
cmp
cli
arpl
xchg
cmp
push
ss
in
pop
jle
inc
lods
shll
ja
push
or
ss
fs
lcall
inc
hlt
mov
xchg
mov
add
fdivrl
and
ds
ret
stos
bound
iret
cmp
jns
test
flds
xchg
cmc
jo
arpl
mov
push
sub
test
fnstcw
cmp
repz
sti
mov
cwtl
jp
push
scas
mov
pop
xlat
hlt
test
mov
shlb
ds
sub
test
push
sbb
out
sub
dec
fsubr
jmp
mov
push
dec
or
out
aam
mov
sarb
jp
add
lock
jno
pop
fwait
dec
je
ficompl
out
or
pop
xchg
add
mov
test
xchg
mov
sbb
mov
xchg
mov
repnz
daa
imul
dec
push
repz
bnd
lret
pop
add
sbb
lahf
nop
or
mov
addb
out
sub
adc
mov
stc
mov
das
dec
dec
cwtl
jl
clc
mov
loopne
jb
repz
pusha
mov
inc
fiaddl
dec
mov
ja,pn
jp,pn
or
sub
in
cmc
data16
push
push
out
xor
adcb
mov
xchg
in
and
dec
inc
adc
add
sub
loope
ljmp
in
cmp
into
fbld
cltd
cmp
aaa
xchg
in
jbe
jb
push
js
push
jmp
mov
in
dec
repz
pop
jbe
stos
and
jo
fidivrs
sub
jmp
lret
push
stos
mov
hlt
sub
cmc
cmpsl
iret
jo
out
inc
xor
iret
xor
xchg
pushf
daa
shlb
out
sub
stos
sub
xchg
jecxz
adc
ja
inc
mov
out
pop
mov
cmp
mov
orb
or
adc
and
aad
in
aas
dec
aas
aaa
sahf
rorl
lds
mov
xor
loope
mov
pop
loopne
sub
sbb
inc
mov
out
or
test
mov
faddp
test
clc
and
fwait
or
lahf
mov
sub
scas
xchg
dec
xchg
cli
test
dec
rcr
cmpsb
mov
scas
test
lahf
in
pop
adcb
adc
xchg
or
and
test
and
mov
mov
into
mov
mov
in
fcoml
inc
sti
rcrb
iret
jle
outsl
cmpsl
ret
fisubrl
jle
data16
xor
mov
pop
es
mov
inc
rorb
mov
loop
cmc
jge
popf
ljmp
sbb
mov
es
push
lea
leave
test
dec
int
pusha
popf
inc
and
int3
nop
and
shr
ret
pop
sbbl
or
lret
rolb
and
std
push
aam
sbb
xchg
mov
sarl
dec
shrb
shll
lods
in
daa
cmpsb
lahf
fucomp
push
nop
ljmp
xchg
jmp
or
mov
aad
jno
cmpl
ret
sarb
ss
or
cmp
out
mov
orl
adc
idivb
mov
and
in
cmp
cmc
insl
jmp
bound
pushf
mov
push
adc
icebp
push
sub
pop
push
mov
ljmp
mov
dec
or
and
cmpsb
pop
std
or
adc
pop
dec
andb
cmc
push
shll
shrb
dec
xor
icebp
sbb
pop
in
pop
fisttpl
incb
push
mov
pop
cmpsl
adc
jge
mov
xchg
xchg
xchg
sbb
icebp
lea
lds
pop
xchg
adcl
mov
aas
out
adc
gs
stc
das
cmp
adc
sbb
mov
pcmpeqb
jb
jnp
enter
test
cld
or
ret
sbb
mov
mov
xor
and
loop
mov
js
scas
pop
inc
cltd
xchg
fsubrl
icebp
jmp
sub
int
cli
into
fwait
int
add
add
push
adc
out
loop
scas
cwtl
mov
cltd
xchg
jmp
sub
adc
push
or
test
scas
out
sbb
ret
js
pusha
es
or
sti
in
mov
jo
push
in
lahf
lea
int3
lock
jg
push
out
adc
inc
je
pop
sbb
leave
inc
xor
or
adc
xchg
add
dec
dec
cltd
das
dec
xchg
mov
inc
aas
jmp
cmp
push
repnz
leave
mov
pushf
jbe
stc
roll
mov
mov
mov
sbb
aas
sti
ja
andl
imul
fiaddl
mov
in
mov
or
or
xor
repz
xor
push
pusha
sahf
cmp
push
jge
xor
push
xorb
mov
and
adc
or
ds
lahf
loop
pop
test
mov
js
outsl
jne
xchg
sahf
int
dec
sbb
in
movsl
lds
mov
outsl
and
fildl
and
sbbb
stc
es
loope
mov
das
or
cmp
mov
push
sbb
push
add
fs
popa
insb
mov
rol
mov
dec
mov
adc
xchg
xor
push
in
filds
cs
sbb
repnz
jns
insl
jne
push
insl
cmpsb
or
jb
jns
test
mov
mov
test
push
or
sub
sbb
xchg
rolb
add
and
repz
movsb
adc
movsb
icebp
aaa
cltd
dec
in
add
sbb
insb
sbb
pop
sbb
dec
inc
insb
stc
xor
mov
mov
cmp
cmp
fs
sahf
pop
lods
les
pop
rolb
sti
xchg
dec
scas
sbb
fmul
pop
in
or
loopne
movsl
aam
push
adc
stos
cli
pop
aam
test
cmp
jl
jb
jp
mov
push
movsb
fidivs
int3
cmp
shl
pop
xor
jmp
lret
out
into
cmpsl
fimull
rol
sbb
and
adc
mov
push
mov
lods
outsl
or
sbb
jne
mov
xor
add
scas
mov
and
imul
dec
mov
jns
bound
push
in
clc
mov
mov
mov
xor
cmp
inc
scas
mov
cmp
adc
clc
mov
pop
xor
pop
cltd
repz
add
adc
gs
cmp
mov
sbb
js
test
xor
push
or
xchg
add
cld
pop
out
push
leave
push
push
add
popf
pop
rcrb
jle
dec
jecxz
dec
je
cmp
jns
fstps
js
ret
leave
adc
lds
cmc
sbb
call
hlt
mov
xchg
cmpsb
jne
gs
aaa
adc
xchg
push
pop
cli
sahf
int3
loop
out
mov
cmp
and
lds
sub
adcl
aas
sbb
sub
nop
shl
in
jbe
aaa
xchg
popf
sti
leave
ret
insl
shlb
lret
and
ret
fwait
mov
out
pop
mov
sahf
mov
lahf
stos
mov
in
idivl
pop
sub
or
push
rolb
cmp
or
sbb
sbb
enter
cmc
pop
mov
jno
mov
adc
sar
fucomp
movsl
icebp
orb
sub
mov
scas
enter
int3
jge
in
cmpsl
pop
dec
jle
lcall
repnz
add
sub
sbb
cmpsl
jo
dec
cld
test
sarb
xchg
mov
stc
sbb
pop
fimull
add
imul
rorl
iret
ds
ljmp
sbbl
add
clc
ds
filds
int3
fwait
mov
xchg
adc
and
clc
add
xchg
dec
add
stos
inc
pop
adc
js
adc
adc
decb
divl
clc
mov
lods
sahf
sbb
int
mov
cmp
test
cs
pop
fnstcw
fwait
mov
clc
xor
pop
mov
jne
outsb
or
xchg
pop
bndstx
pop
fisubrl
adc
xchg
and
int
repz
insl
push
idiv
xor
mov
shlb
cmp
sub
incb
nop
test
in
rolb
sub
mov
hlt
dec
call
cmc
mov
repnz
sahf
fsubrs
adc
sub
jmp
ss
jne
gs
adc
fsub
int3
sahf
push
stc
daa
mov
lods
out
push
or
jg
lret
mov
ljmp
and
push
sahf
lahf
and
decb
sub
xlat
mov
icebp
jmp
cli
or
xchg
daa
or
and
sbb
or
cmpsl
das
aas
push
push
mov
dec
jg
push
shll
test
push
or
cmp
cmp
jno
mov
push
mov
aaa
ffreep
xchg
test
and
or
and
rcrb
mov
mov
cld
xchg
jnp
pop
mov
xlat
lret
push
jbe
push
or
pusha
mov
mov
movsb
cli
jecxz
repz
or
cwtl
cmpsb
sub
pop
popf
rorb
fdivl
push
fwait
sahf
popa
xchg
sbb
add
fidivrl
dec
ss
movsb
arpl
pop
mov
sub
ret
das
mov
subl
mov
in
movsb
and
adc
add
shl
in
push
scas
pop
sub
xor
xor
out
movntps
cmp
mov
pop
mov
push
sti
pop
adc
outsb
pop
rolb
ljmp
sbb
or
jb
das
loopne
insl
add
pop
mov
fadds
push
addl
xchg
ror
pop
pop
pop
in
mov
test
push
xchg
adc
jns
push
xchg
loop
lea
mov
pusha
add
int
into
adc
outsb
jecxz
inc
mov
inc
lret
dec
mov
in
jo
cmp
add
jmp
mov
sbb
xchg
ss
push
pushf
push
lods
loope
cmpsl
into
rcl
insl
mov
out
js
outsb
cld
sahf
loop
adc
loopew
mov
dec
rcll
jae
scas
xorb
sbb
pop
pop
xchg
mov
add
aaa
cmpsl
xor
leave
rolb
mov
mov
mov
bound
js
or
cmpsl
mov
je
push
into
stos
cmp
out
and
fstps
sbb
xchg
xchg
mov
test
mov
inc
cmp
popa
es
in
es
adc
cmp
push
jge
fwait
mov
int3
out
fstp
cwtl
xchg
icebp
add
add
fstl
int
mov
inc
push
add
arpl
ja
cmp
stos
sub
jae
push
dec
sahf
lea
mov
mov
dec
pushf
mov
dec
cmp
fiaddl
adc
das
mov
lahf
push
sbb
mov
sub
dec
mov
fisubrs
jno
fmull
cld
mov
fidivs
inc
sbb
xchg
mov
push
scas
push
out
mov
xchg
fsubrl
lret
fiaddl
mov
cmp
rcll
mov
cwtl
mov
adc
pop
mov
cld
pop
insl
pusha
xor
leave
add
imul
dec
and
mov
sub
ret
dec
jb
ljmp
jmp
and
pop
ljmp
mov
dec
icebp
push
popf
push
add
jp
mov
mov
sbb
lds
mov
or
mov
mov
testb
sbb
in
push
fsubs
pop
xor
add
add
lcall
jno
imul
add
add
shlb
jg
stc
ficoms
inc
and
test
lea
add
pop
add
xchg
pop
mov
and
bound
push
movsb
aaa
fstps
mov
data16
in
mov
mov
jo
mov
arpl
icebp
rcr
insb
pushf
cmpsl
bound
gs
imul
sbb
shlb
cmp
cs
in
lret
xchg
dec
pop
inc
sub
inc
sub
and
cmc
add
adc
stc
adc
arpl
sbb
mov
pop
and
enter
outsb
push
enter
aas
test
jb
xor
push
shrl
enter
std
pushf
cmp
daa
push
pop
outsb
loopne
pop
ret
jmp
test
mov
cmpsl
pop
pop
loopne
test
mov
adc
test
mov
leave
incl
jmp
adc
shrb
xchg
inc
in
in
jmp
cmp
lret
mov
out
xchg
xchg
dec
outsl
pop
jbe
dec
cld
dec
mov
push
mov
mov
adc
data16
and
cmpsl
lcall
std
pop
bound
xchg
jecxz
cmp
mov
fidivrs
jne
dec
xlat
hlt
cmp
dec
xchg
pop
lods
dec
xlat
or
dec
mov
or
ss
testb
sub
inc
mov
mov
cmp
jb
pop
mov
insb
adc
adc
insb
add
scas
mov
mov
push
jo
mov
mov
mov
aas
mov
xchg
jmp
cld
push
clc
jb
ret
pop
cld
mov
sbb
gs
enter
test
or
divb
subl
adcl
clc
inc
mov
xchg
sub
shlb
imul
push
imul
fadds
dec
dec
mov
mov
mov
cmpb
sbb
mov
int3
out
int
mov
ljmp
dec
lret
mov
ss
xchg
pushf
into
xchg
add
and
mov
sub
in
loope
adc
fs
sub
das
lock
mov
or
mov
sbb
into
add
sbb
jb
push
add
add
movl
mov
mov
out
jne
jp
adc
repnz
fmuls
sub
arpl
jg
jbe
dec
xchg
dec
mov
sub
pop
rorb
sbb
and
daa
cmp
sub
mov
out
cmp
mov
xor
cmc
int
mov
mov
xor
pusha
xchg
mov
shr
pop
cmpsb
inc
addl
adc
leave
clc
xchg
xchg
adc
and
or
cmpsl
mov
pop
ficompl
lcall
sbbb
cmp
adc
test
pop
ret
mov
pop
jb
js
dec
rcrl
push
scas
sbb
sbb
lahf
pop
out
fcom
test
test
dec
xor
adc
dec
lahf
mov
fnstenv
dec
shll
push
inc
cmp
cwtl
scas
pop
dec
dec
xchg
jl
lea
mov
int3
pop
adcb
xor
rcl
xor
mov
inc
pop
je
push
icebp
dec
loop
int
mov
mov
push
mov
enter
inc
pop
mov
das
std
data16
inc
clc
jo
out
inc
jo
cld
daa
mov
xor
pop
push
adc
jns
xchg
mov
adc
and
icebp
in
sti
mov
stos
and
adc
cld
fmull
ret
cwtl
repnz
dec
std
cmpb
scas
pop
sarl
fsubrs
fstpl
ss
jg
push
jecxz
cmc
ds
out
dec
cmp
inc
xlat
pop
ss
push
mov
fistl
ljmp
dec
test
out
add
in
mov
les
push
pop
ds
mov
scas
cmp
xchg
hlt
push
push
clc
sbb
mov
push
repz
cmovne
rorb
inc
stos
movb
das
lds
pop
insl
push
mov
repnz
mov
in
fldcw
int
fidivrl
imul
dec
pop
push
pop
cwtl
mov
add
push
pop
sbb
shlb
leave
movsb
popw
add
fwait
pop
dec
sub
fwait
inc
xchg
jp
inc
mov
ret
cmp
outsb
outsl
and
dec
into
pop
fstpl
jno
and
xchg
nop
adc
add
and
push
stc
xlat
sysexit
ficompl
mov
cmp
in
test
pushl
stos
sbb
stc
mov
nop
shlb
fiadds
cs
fld
in
sub
jne
and
gs
lret
push
icebp
lcall
nop
dec
push
in
dec
test
dec
cmp
inc
adc
xchg
imul
and
jl
xor
inc
inc
dec
incl
mov
pushf
adc
sub
pop
ds
xchg
in
enter
xchg
push
and
push
mov
cmp
icebp
push
popf
adc
xlat
hlt
bound
test
pop
stos
cmp
out
sub
es
sti
pop
or
test
jmp
xor
jns
das
lret
sahf
je
push
xchg
je
sub
cmp
xor
clc
out
xor
cmp
xor
ja
repnz
test
rcll
push
adc
pop
iret
lock
cwtl
fsubs
xor
inc
mov
popf
pop
mov
enter
xlat
loope
mov
fsubr
lret
adc
iret
add
xlat
leave
je
pop
fucomi
rcrb
push
fs
mov
das
mov
add
and
push
mov
pop
mov
push
ret
cmp
or
sbb
cltd
xchg
sti
imul
incl
cmp
outsl
jg
xchg
aad
sbb
ja
xchg
xchg
popw
xchg
inc
imul
std
jo
sbb
jmp
popa
mov
imul
pop
out
jno
sbb
cmp
inc
out
xchg
enter
test
adc
mov
xor
xchg
imulb
push
mov
cmp
stos
and
jl
aam
mov
lea
aad
push
in
loop
adcb
imulb
cltd
dec
mov
fld
xchg
scas
nop
leave
sbb
dec
sub
div
leave
mov
adc
scas
inc
mov
cmp
add
add
push
inc
or
pop
cltd
shll
mov
push
pop
add
add
ja
sbb
mov
stos
in
fists
int3
lret
inc
movsl
push
add
fcom
push
sub
add
aaa
sbb
cmp
jae
mov
or
xor
aaa
rcr
std
dec
jno
xor
cwtl
dec
pop
out
mov
test
call
leave
repz
xchg
lret
adc
call
cmp
das
xlat
cmp
aam
or
int3
mov
loop
cs
and
sbb
imul
dec
mov
fadds
inc
push
mov
fcoml
cli
and
jns
jmp
fsub
xor
sub
iret
inc
and
add
jns
fwait
or
fists
xchg
sub
jp
xchg
loop
push
pop
mov
aas
and
add
push
lret
sub
rclb
mov
pop
fcoml
sahf
sbb
lret
push
fdivrs
or
mov
mov
cmpsl
bound
in
push
mov
pop
mov
sbb
dec
cmp
sub
test
incl
ficompl
mov
dec
inc
loopne
push
ret
dec
mov
sbb
aaa
push
xchg
movsb
xor
cld
bound
sbb
out
lahf
jle
dec
or
jmp
mov
pop
mov
lcall
pop
enter
pop
cltd
mov
ret
mov
add
dec
addr16
inc
dec
xor
xor
scas
cmp
sub
je
xchg
cmp
mov
call
in
mov
xchg
icebp
popa
dec
mov
mov
mov
rorl
hlt
ja
jge
stc
inc
pop
or
fldenv
jne
test
push
push
jl
das
stc
add
adc
dec
sbb
sub
mov
push
and
movsl
in
push
push
js
or
xchg
xchg
lea
dec
fcomp
sub
ja
std
shll
hlt
jecxz
call
xor
fstl
jb
or
in
sub
and
mov
inc
push
pop
adc
sub
cmp
adc
repnz
dec
sub
adc
iret
pop
fcomps
and
cltd
das
enter
push
pop
repnz
movsb
jo
in
push
adc
add
inc
sub
sub
mov
inc
mov
or
int
push
mov
push
cmp
lods
mov
mov
add
dec
pop
sub
push
mov
aad
and
or
and
pop
sarl
jmp
pop
das
push
jo
and
mov
sbb
and
mov
std
adc
pusha
les
sar
mull
dec
lret
mov
aas
out
in
je
iret
adc
mov
test
push
pop
nop
jb
mov
mov
cld
ret
dec
std
mov
mov
sub
rorb
shll
jle
aad
gs
xor
dec
es
push
inc
fstl
dec
pop
fnstcw
push
test
dec
bound
popf
scas
mov
cltd
cwtl
adc
fmulp
sub
dec
or
dec
xchg
mov
lret
pop
mov
movsl
popf
mov
xor
cs
ss
jecxz
loope
push
add
inc
push
cmp
add
cmpsb
stc
fdiv
and
sub
mov
aad
shlb
js
mov
push
and
lock
push
jecxz
insb
clc
sbb
mov
ret
dec
adc
daa
sbb
std
inc
test
rol
int3
mov
sub
les
and
inc
push
mov
mov
shlb
cli
add
movsb
test
out
pushf
lret
cmpl
adc
push
aaa
and
cmp
sahf
pop
arpl
push
push
leave
push
shl
inc
mov
idivb
add
pop
inc
inc
out
pop
sub
xor
lock
hlt
jne
ret
call
push
xor
cwtl
push
jo
adc
negb
popl
dec
inc
fdivrl
jle
sub
mov
in
lret
js
out
pop
inc
inc
xchg
cmp
adc
pop
mov
inc
sub
jmp
shll
fisubl
testl
jl
push
insb
fimuls
mov
sbb
lock
pop
mov
rcl
ret
pop
sub
cli
inc
add
or
imul
pusha
inc
mov
sbb
mov
mov
jb
enter
mov
ret
mov
mov
shrb
aaa
cmp
push
pop
insb
pop
pop
mov
cmc
jecxz
push
into
cmp
ds
cld
scas
shl
std
cs
les
sbb
nop
pop
mov
insl
inc
inc
pop
push
ret
mov
mov
jno
into
xchg
lock
lahf
and
imul
outsb
cli
rorb
pop
jecxz
sbb
xor
sbb
mov
mov
dec
jbe
adc
mov
add
push
mov
adc
add
fmulp
xorb
stos
rcrl
add
pusha
inc
mov
push
mov
cmp
cmc
sti
mov
sub
jne
jo
mov
out
sbb
push
xchg
int
dec
outsl
or
cmpsl
mov
fldenv
imul
sub
jbe
sub
or
lds
sbb
stos
and
repnz
xchg
pushf
and
adc
int3
cmp
pushf
sahf
pushl
dec
mov
mov
sub
rcll
jne
stc
es
jmp
push
mov
test
push
mov
addr16
lcall
sub
ror
clc
shr
into
push
or
in
mov
in
enter
sub
lcall
js
pushf
mov
fisttps
bound
push
xchg
fwait
jne
jb
les
pushf
pop
insl
pop
lea
push
int3
mov
sbb
loopne
fcmovnbe
fisttpll
aas
std
mov
mov
femms
cmp
test
adc
movsl
loopne
lds
jge
fsubrl
jns
aam
add
aas
lret
mov
std
cmp
ds
and
xor
push
inc
xor
dec
movsl
or
add
add
jle
ret
repz
std
jle
loope
mov
and
push
popa
add
push
pop
add
and
inc
jp
xor
adc
dec
arpl
or
test
lea
pop
test
inc
jbe
call
xor
and
movsl
xchg
and
adc
pop
pushf
adc
aam
sub
and
sbb
and
push
dec
fildll
jns
popa
outsl
bound
sti
cld
pushf
mov
or
icebp
js
jne
push
fildll
les
test
cmp
mov
subl
imul
push
jl
aas
sar
test
andb
repz
sbb
lahf
dec
imul
outsl
insb
mov
xorb
pop
mov
jo
or
xor
xor
and
stc
mov
gs
mov
sub
xchg
shll
faddl
nop
sarl
adc
ds
dec
shlb
stos
mov
push
ja
push
in
cmp
xchg
scas
mov
or
inc
push
mov
shrb
sahf
adc
sbb
jbe
icebp
cli
add
fmuls
repnz
dec
decb
in
xchg
sbb
outsl
test
popa
and
mov
dec
arpl
inc
out
or
in
xchg
test
mov
ds
rcr
fstpt
fs
out
add
ss
loop
add
cmp
lea
or
inc
push
sarl
xor
inc
or
stos
add
in
inc
loop
xlat
sarl
lea
cli
mov
and
stos
int3
push
arpl
stc
sub
jne
popa
mov
mov
jnp
popf
je
stos
lds
sub
out
out
fstpl
pop
mov
inc
cmp
pop
pop
xchg
addr16
scas
cmp
sub
jae
adc
cli
mov
cmp
jno
push
mov
fcmovbe
lock
inc
mov
xchg
cmp
call
pushf
xchg
outsl
insb
or
lods
outsb
push
cmpsl
mov
mov
jl
dec
dec
fs
mov
stc
inc
es
nop
sbb
scas
and
cmc
rcrl
xor
or
mov
fnstsw
sub
jg
jle
lret
pop
jp
jb
mov
pop
pop
sbb
mov
mov
or
fwait
leave
jo
mov
dec
xor
pop
icebp
or
addb
stc
mov
cmp
pop
lods
jle
xor
add
lods
and
dec
lock
cmpsl
movaps
out
test
dec
cmp
test
or
push
ljmp
add
pop
add
jp
jg
test
or
movsb
ret
imul
repz
and
mov
jns
push
decl
rorb
addr16
aaa
cmp
pop
mov
insb
icebp
mov
int
jb
fstpl
pop
iret
sub
mov
faddl
loopne
iret
addl
cltd
nop
sahf
inc
mov
add
test
sub
or
loope
loop
leave
pop
mov
in
cmc
inc
les
mov
xor
cmp
movsl
fdivs
lods
jns
push
popa
jns
out
lods
loope
orb
push
clc
fcomi
shl
rcll
cmpsl
cld
xchg
push
push
lds
fsubr
mov
or
cmpsb
fimuls
scas
adc
iret
leave
push
jmp
mov
cmp
pop
jg
mov
test
pop
pop
jecxz
sbb
jae
call
fnsave
arpl
mov
inc
sti
and
pop
sahf
cmp
movsl
fmul
orl
mov
push
add
js
cmpsb
addr16
add
fstps
jbe
stos
jl
mov
dec
lcall
push
dec
adc
imul
xchg
push
push
mov
pushf
inc
stos
lret
inc
aaa
mov
push
jo
dec
mov
xorl
into
mov
daa
xor
dec
lock
pushf
pop
mov
sbb
in
mov
mov
sti
or
mov
dec
rcrl
and
adc
mov
jns
imul
inc
repnz
shr
xchg
aam
out
lods
sbb
xchg
push
das
sarl
dec
push
stos
loope
divl
add
inc
icebp
sbb
out
push
bound
aad
ss
mov
pop
clc
test
sub
mov
inc
pop
jae
lods
lds
add
mov
mov
js
mov
mov
sbb
clc
dec
lret
dec
repnz
jmp
movzwl
mov
sar
icebp
sbb
cmp
push
and
sti
push
imul
sbb
xor
mov
sti
mov
cmp
mov
aad
mov
testl
data16
ljmp
pop
lods
jl
lret
subb
mov
push
rolb
into
lahf
pop
mov
ret
bound
mov
stc
xchg
mov
or
rcrb
mov
or
out
imul
add
add
movsb
jg
lret
adc
movsl
push
cli
mov
divb
pop
push
xchg
das
xchg
das
mov
xchg
jnp
jp
jmp
iret
gs
push
lods
rclb
imul
pop
fcompl
dec
imul
in
push
push
cmpsb
push
outsl
mov
stos
std
outsl
adc
stc
xor
iret
fcompl
sbb
jp
and
push
inc
pop
sbb
or
mov
sub
mov
push
popa
shlb
push
or
mov
mov
insl
in
and
out
insb
dec
call
movsb
push
sub
cmp
and
push
call
scas
stos
pop
ljmp
mov
shrl
bound
push
cmc
jo
xchg
test
xor
scas
ret
xchg
xor
mov
mov
mov
test
les
popa
mov
or
or
xchg
push
push
or
div
mov
rclb
mov
dec
cmp
or
sbb
loop
pop
and
rcrb
inc
mov
push
mov
insb
fstl
push
rcll
arpl
je
dec
mov
adc
jae
test
and
in
icebp
stos
mov
test
sub
popa
xor
mov
add
add
sub
jmp
mov
orb
ja
jne
pop
add
push
pop
add
push
mov
out
pop
andl
scas
xchg
push
aas
dec
inc
dec
addl
jbe
dec
jecxz
cmp
loope
sub
test
in
imul
outsl
sub
dec
lret
mov
dec
lea
pop
andl
fcoml
std
push
xor
icebp
iret
in
insb
inc
mov
mov
mov
mov
adc
imul
or
loop
into
and
and
enter
pop
scas
sbb
xor
adc
xchg
ljmp
inc
data16
lahf
xchg
jecxz
mov
pushf
mov
faddl
mov
pop
inc
das
repnz
sub
shll
movsl
push
shll
lahf
sub
xchg
test
cli
ja
lcall
scas
jp
popf
adc
rcr
cmp
aam
push
sbb
out
sbb
clc
cmc
lds
sti
jo
js
sub
cmp
sub
push
call
ret
data16
rol
call
inc
ja
pushf
ss
jge
ss
push
push
pop
clc
inc
and
jbe
lret
mov
sub
in
or
bound
rsm
dec
dec
adc
sbb
jmp
mov
mov
sti
add
push
push
stos
or
xchg
cmp
mov
sbb
and
shrb
bound
mov
pop
cmpb
push
cmp
cmp
mov
outsl
fcoms
inc
std
sti
rclb
xlat
rcll
int3
ret
pop
ds
leave
enter
xchg
std
mov
jg
sti
jmp
push
fidivrs
jb
push
inc
loopne
std
jo
fwait
test
sub
lock
push
rcll
cs
decl
sbbl
mov
cmovp
and
sub
inc
fmul
adc
popf
jno
inc
decl
rolb
into
jge
pop
loop
push
jns
and
in
jecxz
iret
xchg
jbe
add
xor
dec
pslld
and
lcall
cs
imul
addl
gs
sbb
and
xchg
fimuls
and
stos
inc
adc
dec
mov
xor
test
into
xchg
jmp
iret
pop
fmull
sub
in
pop
mov
xor
dec
in
sbb
xor
ror
loope
lea
push
mov
pop
pushf
scas
mov
jo
stos
xchg
jns
cmp
sub
push
xchg
notl
repnz
idivl
mov
inc
out
int
inc
dec
sub
and
mov
or
cltd
cmp
push
jle
adc
mov
cmpsb
shll
mov
aam
xchg
fadd
sub
clc
clc
cmp
ret
mov
inc
and
mov
cmpsb
mov
arpl
cmp
inc
sbb
jg
sbb
mov
jmp
fstpl
ret
ret
outsl
out
repnz
ss
out
ljmp
loop
mov
gs
adc
pop
jle
xor
inc
and
call
mov
xchg
int
fwait
popa
scas
or
xchg
cmc
adc
cli
pop
test
std
ljmp
push
sbb
mov
fstpt
dec
out
push
pop
inc
xor
addr16
ja
or
xchg
inc
lahf
inc
frstor
jmp
mov
inc
mov
nop
out
cld
pop
ret
in
add
push
dec
fldl
cmp
inc
es
push
mov
cmp
pop
and
add
push
lods
dec
xchg
inc
push
iret
clc
inc
mov
aaa
scas
cwtl
jb
xor
jl
loop
mov
loop
jecxz
inc
add
pushf
sub
sti
jns
outsl
xchg
into
mov
mov
fildl
pushf
pop
imul
dec
cmp
ja
inc
cmp
or
mov
fmull
dec
dec
push
pushf
ds
stos
mov
aaa
sub
imul
mov
clc
xchg
mov
sahf
mov
mov
xchg
lea
mov
pop
fucom
stos
cld
sbb
dec
pop
test
mov
cmpb
cmp
addr16
dec
lahf
into
lods
xor
je
movsl
jae
xchg
xor
adc
xchg
xor
cmpsb
add
rorl
mov
push
lret
pop
jle
sub
outsb
inc
stc
imul
inc
adc
lret
nop
mov
sbb
inc
cs
push
jecxz
dec
xchg
test
pop
aam
jmp
mov
sub
inc
and
pop
add
popa
mov
aam
fbstp
jne
xor
les
jno
sti
clc
movsl
lret
sbb
lock
jl
pop
mov
cs
mov
inc
pop
jmp
sbb
mov
inc
xchg
cmp
stc
pop
outsl
fcmovne
movsb
add
std
repz
lock
cmp
and
jae
mov
in
adc
cmp
cmpsb
loope
push
ja
ficompl
loope
loopne
sarl
sti
xor
cmp
aam
xchg
insl
xlat
ja
subb
lret
jbe
pop
lcall
xchg
cld
ficoml
scas
sbb
pop
push
inc
cmc
mov
mov
dec
add
test
or
sti
push
xchg
pop
xchg
xor
jb
lcall
repz
int3
dec
and
dec
push
mov
sub
lret
es
loope
iret
mov
int
or
fsub
add
stos
xchg
cmp
std
adc
adc
shlb
push
js
dec
nop
xchg
lds
filds
imul
movsl
mov
fs
push
xor
jl
mov
stos
faddl
push
movsl
sbbb
loope
mov
mov
popa
xor
nop
int
pop
sbb
repz
enter
shll
outsl
inc
dec
fwait
jne
je
or
imul
adc
adc
cmpsl
aaa
xchg
test
test
pop
lahf
push
mov
insl
push
mov
mov
push
fnstsw
mov
lods
mov
cltd
and
insl
xchg
insb
push
mov
test
mov
push
jmp
dec
push
in
std
dec
out
out
pop
jnp
ja
imul
xchg
popa
push
dec
rol
or
jne
ss
imul
test
mov
and
mov
scas
pop
mov
jbe
add
repnz
sbb
mov
out
scas
mov
jle
das
ljmp
mov
xchg
dec
idiv
sahf
out
or
cmpsb
or
push
pop
add
jnp
in
add
fldt
xor
les
sbbl
dec
jecxz
or
jmp
clc
sub
nop
mov
scas
shrl
cmp
or
mov
repz
and
popa
jmp
andb
test
dec
add
arpl
jnp
fldt
push
inc
mov
push
mov
and
xorl
xor
subb
out
mov
and
adc
lock
rcrb
xchg
out
aad
pop
inc
cmp
mov
sub
sub
push
push
int
lods
pop
xchg
lods
les
cmp
pop
sub
ds
repnz
push
aam
lods
fidivs
and
int3
gs
jg
inc
enter
fwait
mov
rclb
test
insb
xchg
adc
shr
push
movsb
faddl
and
stos
in
jno
mov
jbe
pop
pop
xor
test
xor
or
jb
je
test
push
test
mov
inc
sub
xchg
xchg
cmpsb
mov
sub
xchg
leave
and
add
out
aaa
ficomps
out
mov
cmp
loopne
and
pop
cmp
test
fmulp
push
mov
js
sbb
jae
test
out
xchg
test
sbb
int
aad
inc
stc
clc
aas
push
sarl
pop
add
bound
test
repnz
test
inc
cmpsl
sbb
repnz
fistpl
mov
popl
sbb
cmpsb
outsl
imul
or
enter
call
push
and
arpl
call
pop
add
mov
mov
pop
xorl
dec
sub
ljmp
cmp
xchg
pop
lret
std
iret
jo
mov
test
push
pop
jge
adc
or
fsubp
inc
adc
cmp
ret
mov
je
imul
inc
mov
adc
cmpsb
daa
inc
rcrl
fsts
inc
sub
les
sub
jne
inc
ret
decl
sbb
pop
mov
lods
xlat
jb
jmp
jo
sbb
addr16
mov
mov
mov
adc
out
enter
cmp
repz
pop
push
scas
outsb
mov
mov
jbe
pop
pop
xor
ja
or
sti
ss
cmc
cwtl
test
mov
or
mov
mov
or
sbb
mov
jno
push
repz
inc
dec
dec
int3
jg
push
inc
or
aaa
cmp
mull
test
enter
sub
sbb
scas
scas
adc
mov
inc
out
int3
js
lods
addr16
mov
dec
cmp
stos
decl
mov
xchg
repnz
mov
jno
push
and
aam
in
ljmp
js
les
pop
and
rolb
in
mov
pop
push
jle
dec
imul
push
out
push
inc
sbb
outsl
mov
int
insl
cmp
sbb
dec
pop
test
push
mov
cmpsl
jp
push
xor
add
xchg
mov
or
mov
fstl
mov
push
and
jnp
pop
mov
mov
inc
int
je
repz
adc
ficomps
outsl
mov
jg
mov
dec
ret
fs
inc
mov
and
sbb
cmpb
lea
out
pop
sti
repnz
mov
roll
stos
lret
nop
add
and
mov
mov
xor
mov
jl
mov
ret
adc
and
sbb
scas
aaa
and
stc
aas
sub
in
push
fwait
push
call
inc
stos
mov
addl
xor
push
in
aam
data16
cmp
popa
mov
loop
cmp
push
addr16
mov
jnp
sbb
sub
jne
popa
fistpl
push
sbb
push
mov
add
movsb
scas
xor
insl
dec
inc
lock
ret
cmp
jne
shrl
orl
enter
push
ret
insb
mov
jno
push
ja
cmp
mov
stc
int3
inc
cmpsb
jge
shlb
mov
nop
mov
shrb
push
ss
in
hlt
cmp
xor
jno
ljmp
xchg
sbb
add
adc
add
jmp
add
add
adcb
fwait
out
mov
fwait
cld
cmp
mov
push
cld
or
pop
rcrl
adc
stos
data16
fisttps
ds
repnz
outsl
movsb
add
cmc
test
jnp
fldl
lods
scas
jmp
mov
js
lea
inc
clc
shlb
xchg
pop
pusha
pop
mov
add
inc
sahf
jb
dec
aas
pushf
or
jecxz
or
sub
ret
lahf
int3
push
scas
xor
mov
ret
icebp
push
repnz
popf
pop
es
mov
movsl
sahf
jge
jmp
ss
mov
ret
int
mov
cs
fists
cmovo
lcall
ja
call
pop
les
mov
mov
fistpll
and
dec
add
call
pop
mov
ds
insb
fdivrp
in
inc
ds
aas
movsb
arpl
iret
pusha
fucomi
adc
xor
cmovge
ds
pop
loopne
in
cld
pusha
or
and
push
and
inc
cld
std
xor
std
mov
cmpsl
inc
or
div
mov
jns
sub
repz
jne
lret
dec
loop
enter
mov
movsl
mov
mov
xor
inc
rcrb
push
adc
jl
and
inc
fwait
jae
insb
inc
sarl
mov
mov
cmc
testl
push
mov
loope
cmpsl
sarb
fdivrp
loopne
lds
cmp
js
and
cmp
and
rol
ja
cmp
jne
jge
fsubl
xchg
int
xchg
mov
lret
mov
adc
jp
pop
dec
flds
daa
ljmp
mov
add
xor
lret
pop
cmp
sub
lea
fdivl
pop
popl
jbe
jnp
repz
lahf
jnp
pop
repnz
sub
mov
fsub
sub
push
je
lahf
ret
imul
cmp
push
mov
dec
stos
push
pop
adc
add
test
nop
out
xchg
icebp
mov
out
aad
adc
out
add
push
pop
add
lods
sbb
mov
fldl
push
mov
in
jl
outsl
mov
pop
sub
rcrb
bound
adc
out
daa
aaa
mov
mov
in
xchg
jp
pusha
mov
je
push
mov
mov
lcall
mov
push
mov
fsubrs
iret
cltd
cmc
mov
lahf
aam
xchg
mov
cmpb
xchg
xchg
pop
roll
std
or
xor
ljmp
sbb
fistl
leave
push
xor
jo
addr16
cmp
loop
jb
xlat
pop
sub
outsl
loop
jg
gs
ja
popf
xor
dec
cmp
push
jle
fwait
jle
inc
xorb
push
es
sti
dec
scas
sbb
jmp
dec
add
adc
cmpsl
push
repnz
push
jmp
adc
std
mov
jmp
pop
or
sbb
sbb
xor
enter
cmp
pusha
dec
inc
aas
cld
popa
pop
mov
shll
aad
popf
adc
test
imul
insl
jb
aaa
mov
jp
lret
loopne
xor
mov
andb
data16
xor
std
clc
mov
dec
in
ret
inc
int3
js
sbb
mov
mov
xor
mov
insl
cmp
popa
or
addr16
or
add
mov
xchg
add
in
int
xor
outsb
roll
sar
xlat
outsl
sbb
pop
xor
jecxz
dec
cmc
in
push
add
scas
cmp
aaa
inc
dec
in
ljmp
movsl
jg
stos
mov
and
aam
fs
xchg
or
xchg
outsl
loop
push
hlt
push
push
adc
fisubl
insl
push
or
lds
dec
dec
rcrb
push
xchg
sub
loopne
dec
pop
push
rcl
xchg
lcall
sbb
outsl
xor
lods
lock
cmp
scas
add
lret
cmpsb
mov
or
lret
or
out
ljmp
mov
repz
or
scas
aaa
outsl
fdivrs
adc
mov
push
inc
jae
jmp
pop
fisubrs
jbe
rorl
popf
insb
shrb
movsb
dec
sbb
xlat
lods
jbe
call
dec
add
ffree
jae
pusha
xchg
into
fcomps
int
mov
shl
push
ljmp
into
lods
push
mov
and
pop
int
lock
mov
popa
cmpsl
pop
stos
fwait
inc
sub
sbb
es
out
pop
lds
out
iret
repnz
mov
subl
or
addr16
ds
xchg
xor
stos
inc
stos
in
shlb
pop
in
and
cltd
dec
add
aam
pop
and
pop
pop
stc
les
cmc
fidivl
inc
and
into
jnp
pushf
or
cmpsb
sbb
pop
out
mov
lock
add
lret
xor
fstpl
sbb
cmpsl
add
pop
mov
popa
mov
aam
dec
xchg
test
repz
nop
outsb
cwtl
sbb
mov
mov
lods
lods
xchg
or
pop
and
dec
nop
ss
mov
pop
pop
push
imul
push
fsubrl
and
lea
imul
out
shll
adc
ja
cmp
ret
mov
or
jge
test
dec
aam
addl
pop
lods
or
call
pop
out
pushl
in
cmp
lret
scas
and
stc
add
sbbl
arpl
add
add
pop
divl
jle
sbb
ret
inc
jle
lock
out
pop
insb
mov
stos
test
aam
ret
xchg
lret
cmpsl
adc
add
stos
jnp
pop
fs
push
lock
or
movsl
mov
cld
bound
jle
mov
fldcw
mov
stos
and
popa
inc
loop
scas
flds
aam
mov
sub
lea
pop
mov
js
mov
push
mov
aam
out
ja
arpl
add
dec
out
xchg
data16
jg
shrb
sbbl
int3
test
in
cmp
sbb
std
in
add
mov
movsl
push
ljmp
mov
xor
lcall
mov
dec
dec
in
popf
mov
rcrb
jne
int3
aaa
leave
jo
sbb
testb
les
dec
icebp
push
notl
ret
jne
popa
xchg
adc
fsub
jb
push
aad
orb
mov
pusha
inc
addl
pop
es
jecxz
cltd
jnp
sub
inc
std
jbe
and
push
xchg
jb
cmp
pop
aad
pop
fstpl
out
insl
rorl
shlb
push
cmp
push
insb
mov
sti
cmp
cmp
push
pop
pushf
mov
push
xchg
or
cmp
sbbb
shr
jmp
dec
inc
pop
dec
pop
add
inc
icebp
fdivrp
add
lea
mov
fwait
out
inc
xchg
push
pop
mov
outsl
pushf
js
call
jb
jbe
jb
and
and
xchg
xor
rolb
jbe
aad
xlat
loop
ret
lcall
xchg
imul
cmp
xchg
cmp
cmc
sub
mov
jle
cltd
pushf
fcompl
jle
lock
inc
arpl
rcrb
inc
sub
test
or
push
jae
sarb
adc
jae
xlat
decl
jl
shl
cltd
sahf
and
stos
into
addl
lret
fs
shlb
inc
out
mov
jp
cmc
sub
sbb
jmp
pop
movsb
gs
mov
jp
xchg
mov
loop
sbb
jo
jle
jbe
mov
test
pushf
mov
mov
cltd
shrl
jnp
enter
mov
mov
jbe
stc
mov
or
jl
cld
jge
outsl
and
arpl
mov
add
pop
xor
shrb
push
mov
pop
dec
fs
sets
cmp
jle
aas
fwait
ljmp
add
jbe
fistpl
fldcw
fdivrp
inc
lcall
cmp
or
dec
mov
int3
xor
loope
icebp
mov
in
xchg
add
push
pop
add
mov
lcall
mov
cmc
mov
scas
ljmp
mov
scas
jbe
dec
dec
xor
daa
pop
lret
pop
addb
out
mov
push
sub
mov
and
mov
rorl
or
shlb
pop
int3
roll
mov
bound
out
push
adc
xchg
adc
push
inc
or
push
mov
jb
push
dec
outsb
lods
imull
fstps
sub
dec
fldenv
jbe
mov
imul
mov
das
stos
mov
jge
xor
cli
insb
mov
outsl
xor
sbb
imul
jl
xchg
frstpm(287
mov
shl
jnp
cmp
lds
or
fidivl
sub
mov
xchg
clc
inc
js
xor
test
cld
rcr
add
mov
pop
outsl
ljmp
and
cmp
roll
jl
movsb
xchg
fnstenv
jmp
or
popa
stos
jmp
sub
sbb
sbb
dec
inc
ljmp
pop
fsubp
dec
inc
test
cli
adc
sbb
lcall
add
sbb
je
xchg
pop
aaa
cmpsb
sbb
and
and
das
int
fcoml
inc
mov
xchg
insb
cmp
xchg
pop
jle
xor
cmpb
pop
adc
es
out
pop
sbb
data16
dec
pushf
in
sahf
je
inc
mov
mov
ret
les
adc
cmpl
push
out
loop
sbb
lds
fdiv
bound
push
jnp
ret
adc
inc
clc
lret
dec
pusha
jo
push
push
je
dec
push
in
cmp
cwtl
and
and
mov
inc
test
aaa
or
shll
jbe
push
in
cmpsl
je
add
cltd
mov
xor
pop
fs
mov
cmpsl
leave
xchg
jns
repz
mov
adc
and
aaa
lret
fwait
es
jb
mov
mov
cld
outsl
aas
jle
test
decl
pusha
jmp
jecxz
aas
rorl
sbb
push
ficompl
ret
imul
dec
outsb
lcall
movsb
das
icebp
cmp
push
mov
push
xchg
insb
shlb
cmp
xor
imul
dec
movsl
fsubl
add
stos
clc
fnstenv
sub
sete
add
mov
pusha
add
gs
inc
mov
push
xchg
jnp
mov
and
lods
daa
scas
sub
push
bound
test
leave
cld
cmp
mov
popa
inc
movsb
push
cwtl
mov
fists
into
mov
stos
jo
repnz
in
adcb
cmpsl
sbb
filds
enter
pop
es
mov
jg
sub
jecxz
lds
xchg
mov
push
sti
lcall
lods
cld
push
lods
ss
lret
in
sbb
mov
push
orb
jno
cmp
add
add
or
xchg
adc
jno
gs
or
jo
scas
divl
loop
xchg
push
push
xor
imul
roll
and
dec
add
pop
insb
push
xchg
mov
xorb
and
movsb
mov
sub
cmp
push
pop
inc
call
dec
test
sbb
enter
pop
dec
fs
mov
mov
arpl
mov
mov
imul
scas
shrd
shr
cmpsb
xchg
roll
loop
xchg
sub
and
gs
jo
pop
in
mov
cmp
lds
sub
std
dec
mov
sti
stos
and
cmp
pop
pusha
sahf
cmp
and
out
fcomp
cltd
out
jo
jns,pn
cmp
shrb
mov
inc
jmp
xor
xlat
push
and
adc
sub
fxam
cltd
stc
imul
add
in
repz
dec
or
imul
in
clc
sub
popa
stos
and
and
jnp
sbb
out
test
jns
mov
ss
xchg
add
in
data16
cmp
sti
mov
xlat
divl
mov
mov
inc
pop
xor
imul
ljmp
imul
pop
dec
cwtl
ror
iret
outsl
cwtl
jmp
inc
jg
add
test
add
cmpsb
xchg
mov
idivb
sub
lock
jne
int
leave
mov
nop
repnz
frstor
nop
dec
loopne
mov
pop
sub
or
push
fs
jg
sub
mov
add
icebp
xor
sub
cs
jge
in
mov
sti
jns
gs
fsubp
xor
shl
push
xor
icebp
jnp
mov
in
int3
push
sbbl
aaa
xchg
shlb
mov
push
jnp
adc
mov
adc
cmp
fldenv
inc
and
jo
stos
daa
bswap
push
fidivs
pop
lret
xchg
test
out
addl
jb
das
les
pop
add
adc
in
gs
xor
ret
sbb
call
push
jge
mull
pop
sub
cmp
into
xor
dec
mov
insl
arpl
aas
mov
ds
sbb
cmp
imul
ds
push
mov
sahf
add
or
dec
lret
out
pushf
clc
or
jbe
add
nop
std
xchg
and
and
in
cmpl
xlat
add
lds
xchg
and
inc
inc
mov
inc
mov
shlb
inc
push
mov
daa
ret
mov
cmp
and
les
cmpsb
das
dec
adc
sbb
mov
xor
icebp
jne
rcl
in
mov
jne
gs
sub
lret
leave
mov
push
hlt
fdivs
arpl
add
or
pop
cltd
cs
loope
test
xlat
cmpsb
iret
push
or
pop
xchg
enter
cmp
jno
jno
call
pop
adc
cmp
xor
scas
adc
popa
cwtl
sub
outsb
jo
jl
push
arpl
pusha
mov
jle
testl
mov
xlat
mov
rolb
ss
testb
push
pop
add
sub
lock
sti
call
addr16
dec
mov
jno
outsb
dec
xchg
leave
stos
mov
jb
sbb
jl
sub
paddw
insl
adc
pop
frstor
cwtl
sbb
imul
gs
xchg
push
aad
popf
in
aad
sarb
dec
mov
xor
inc
nop
sbb
das
rol
es
lds
fdivl
aas
out
imul
sti
ret
cmp
daa
cld
mov
push
fistl
js
movsb
repnz
or
insb
faddl
mov
push
push
dec
popf
testb
mov
fisttpll
and
lods
sub
pop
dec
adc
inc
clc
pop
mov
cmp
nop
mov
sub
mov
mov
ficompl
mov
push
or
movsl
mov
adc
call
xor
mov
or
or
dec
enter
aam
push
adc
leave
out
call
iret
jmp
adc
out
stos
mov
inc
mov
or
mov
xchg
dec
pop
cmp
pop
arpl
jb
iret
cwtl
pusha
xor
mov
in
movaps
sarl
xchg
inc
out
stc
imulb
sub
repnz
jae
fwait
push
and
jl
mov
adc
or
movsb
cmc
mov
mov
andb
fldl
loope
je
add
xchg
jl
popf
mov
lret
mov
adc
xor
xor
mov
cltd
inc
cli
cmp
push
pop
inc
mov
mov
xchg
jae
xchg
pop
jl
mov
in
push
cmp
es
mov
pop
adc
push
xchg
pop
jb
pushf
stos
scas
jmp
adc
dec
ffreep
lea
imul
nop
insb
pop
sbbb
fbld
in
jns
mov
dec
sarl
je
jae
xchg
nop
shr
cmpsb
xor
dec
mov
scas
out
and
jbe
pop
add
xor
sbb
cmc
adc
out
je
add
pop
test
pop
push
and
cld
imull
test
cmp
lea
test
add
loope
xchg
movsb
xchg
pop
loopne
insb
addb
sbb
and
repz
dec
mov
mov
cmp
xchg
or
out
mov
shll
data16
xchg
popf
xchg
movsl
fisubrl
or
mov
repz
cltd
int
inc
inc
jecxz
in
dec
shll
int
je
aaa
cmp
mov
xchg
test
sar
icebp
jg
xor
ret
in
inc
dec
jno
fwait
ret
or
ss
mov
addr16
icebp
cli
cld
sbb
mov
in
or
loope
sti
out
push
mov
test
popa
sbb
sarl
mov
jnp
push
idivl
mov
cltd
hlt
mov
mov
jnp
popf
and
adcb
addb
cmc
stc
in
dec
in
out
test
or
lods
leave
shrl
ret
out
push
jmp
pop
push
fwait
sub
jg
adc
insb
enter
push
ret
dec
xchg
into
sbb
aad
mov
jge
mov
mov
push
out
mov
or
push
je
dec
leave
or
nop
shl
ss
ljmp
shrb
loopne
jl
and
jmp
pop
loop
js
js
mov
sub
and
push
dec
dec
adc
fwait
cltd
mov
xchg
setne
add
pop
inc
dec
das
add
xor
cmp
dec
sbbl
pop
gs
pushf
mov
addb
out
stos
and
les
outsl
inc
and
xchg
ror
xchg
in
sbb
and
shl
aaa
pop
leave
xchg
sbb
es
cmp
test
stos
xor
inc
push
cmp
lods
sub
fwait
les
and
push
and
mov
ljmp
mov
mov
mov
and
imul
ret
inc
add
repnz
shl
rorb
and
sbb
les
push
sub
fs
pusha
pop
sahf
mov
jne
mov
or
in
repz
test
daa
in
xor
and
sub
cmp
cmpsb
or
out
dec
fucomi
push
ljmp
jecxz
je
adc
lcall
jg
movsb
lods
insl
imul
push
ret
dec
loopne
flds
pop
out
icebp
into
and
push
xor
dec
add
push
shll
mov
push
push
mov
icebp
jl
push
or
mov
in
aas
add
push
jge
cmpl
movsb
divl
es
fistpl
arpl
sbb
dec
std
push
icebp
jae
or
stc
cmc
mov
mov
jmp
shl
mov
dec
call
adc
sbb
idiv
jae
dec
mov
mov
cmp
push
add
mov
inc
jl
ret
icebp
sub
lods
and
pop
aas
fucomi
leave
in
adc
pop
inc
pop
test
scas
mov
fdivrl
xor
aaa
testb
push
lds
push
loope
mov
inc
outsb
xlat
inc
rorb
aaa
mov
pusha
test
test
test
fistps
pusha
jmp
dec
inc
test
loopw
mov
jnp
adc
push
jg
mov
push
push
inc
ljmp
or
lods
daa
jbe
adc
cltd
fbstp
cmp
icebp
add
jle
push
out
ret
mov
lcall
and
imul
rorb
clc
adc
and
dec
jnp
xchg
out
sbb
aaa
cmc
mov
adc
mov
lcall
nop
sub
xchg
outsl
ret
push
push
xchg
mov
cmp
ret
lods
dec
ss
pop
popf
pushf
test
shrb
dec
xchg
loopne
in
sub
inc
xor
fldl
pop
aas
ss
jmp
lret
in
int3
pop
pushf
jo
out
popa
bnd
and
sbb
sahf
jl
lret
jne
push
xlat
int
pop
dec
cmp
imul
adc
fs
sbb
sbb
push
pop
cmp
dec
insb
push
push
mov
add
pop
mov
pop
es
jecxz
dec
fiaddl
add
pop
add
pop
ss
loopne
insl
icebp
jns
sub
fcmovnbe
nop
jp
inc
xchg
std
sub
jg
testl
pop
fs
gs
lock
mov
rorb
inc
not
sarl
pop
lods
xor
add
insl
mov
enter
or
mov
jge
jle
push
popa
jae
data16
xchg
cmp
ljmp
stc
add
leave
fimull
insb
ficomps
add
clc
add
sbb
bnd
js
dec
and
xchg
jmp
ret
daa
push
sbb
imulb
in
jle
je
push
test
mov
clc
mov
outsb
dec
mov
ja
sbbb
and
aam
loop
call
movsl
loop
cltd
inc
movsb
imul
into
sbb
mov
ret
fs
jle
andl
push
or
fs
ss
out
dec
icebp
stos
jo
jnp
add
push
inc
lods
mov
jns
aam
sub
pop
aam
xorl
dec
aam
jne
push
pop
cmp
daa
and
into
js
popa
or
es
les
test
and
in
inc
cmpl
ret
mov
and
shll
pop
cmp
xchg
jbe
inc
ds
mov
push
pop
sub
dec
fisubl
repnz
shr
pop
xchg
push
inc
fldcw
xor
push
loopne
add
jg
sbb
xchg
idivb
sub
ja
sub
repz
lock
mov
dec
jge
addr16
in
mov
popf
mov
adc
adc
dec
ja
gs
sbb
loopne
add
faddp
out
lods
cs
stos
jns
out
xchg
repnz
scas
xchg
add
test
jbe
xor
and
cmp
out
jno
movsb
aam
push
xor
fldcw
cmp
imul
inc
stos
mov
add
ljmp
xchg
dec
sbb
adc
mov
pop
loop
sbb
repz
je
pop
xor
pop
add
dec
dec
outsl
test
pop
pop
mov
dec
mov
lods
or
pop
pop
push
sub
xor
cmp
sub
jl
inc
add
addr16
fcmovnb
push
into
sub
mov
aaa
mov
je
ret
js
push
lret
jmp
sbb
cmpsb
fsubs
and
lds
jl
ja
xor
ds
test
xor
jo
arpl
jp
and
out
notb
and
mov
popf
mov
xor
sub
std
out
cld
pop
pop
jg
xor
sbb
outsl
sar
dec
lock
sbb
mov
arpl
in
fcmovnbe
cld
xchg
in
dec
add
insl
xchg
test
sub
loope
cmp
mov
repz
fsubrs
in
cmpsb
je
xchg
sbb
push
lcall
jnp
test
stos
pop
xchg
out
lds
push
test
orl
in
inc
sub
jecxz
jl
mov
outsl
clc
xchg
fucomp
sbb
push
fimuls
out
cld
das
adc
enter
lret
call
ret
sub
jbe
xor
out
xchg
add
add
loope
cmp
add
aam
and
subl
cmp
xlat
push
divb
and
lods
xchg
bound
lret
cltd
ljmp
lret
mov
cmpl
add
imull
daa
rcl
xchg
sar
roll
arpl
xchg
lods
jb
imul
or
popf
pop
mov
jecxz
dec
out
scas
imul
inc
jmp
nop
adc
push
pop
jo
int3
call
push
pop
in
sahf
xor
fs
sbb
and
adc
imulb
mov
xchg
cmc
and
inc
scas
jl
divl
fwait
mov
xchg
out
push
cmpsb
inc
out
xorl
mov
out
inc
lock
test
cmp
ljmp
cmp
stc
jbe
and
je
dec
popf
mov
stc
fcoms
shrl
lret
jns
imul
xor
xchg
push
cli
hlt
imul
setle
push
scas
push
mov
inc
mov
call
adc
mov
into
ret
or
pop
and
jmp
in
mov
notb
push
repz
repnz
loop
push
mov
xor
push
mov
clc
fwait
stc
mov
sub
fwait
jmp
pop
or
xlat
lahf
xor
jb
testb
jnp
add
add
cld
add
push
filds
jo
rorl
jmp
call
fstpt
mov
js
lock
and
imul
sti
lret
pop
mov
mov
call
or
dec
lret
sbb
jmp
mov
jb
inc
mov
insl
ret
jmp
mov
movsl
scas
sub
dec
fst
xor
mov
aad
or
jg
adc
sahf
imul
or
imul
iret
pop
test
and
pop
sahf
xchg
cmc
testb
fnsave
vcmpss
or
or
lret
loopne
sbb
add
xchg
das
repnz
sahf
dec
inc
pop
orl
lock
sub
frstor
out
push
clc
or
frstpm(287
in
mov
das
mov
sub
testl
mov
sub
lea
inc
mov
inc
jecxz
jl
bound
xchg
nop
loop
in
mov
xor
mov
xchg
inc
push
frstor
fwait
xchg
es
push
cmp
adc
fcmovnb
mov
and
fisttpl
sub
jecxz
sbbb
shrb
adc
sub
lods
jle
cs
lock
adc
les
dec
xor
cmpl
jmp
and
lock
dec
xor
mov
shrl
subb
icebp
adc
push
orb
pop
insb
rcrl
jmp
out
mov
or
push
cmc
pushfw
fnstsw
cmp
dec
negl
jmp
jg
sbb
imul
and
push
jne
int
adc
scas
call
mov
frstor
and
push
add
add
add
mov
pop
lret
dec
add
push
pop
add
mov
sub
arpl
sahf
mov
sbb
pop
or
or
pop
aad
in
inc
enter
sahf
ss
xchg
xchg
mov
or
mov
mov
xor
pop
add
cwtl
loop
nop
cmpsl
pop
in
jb
mov
or
jo
inc
mov
inc
sbbb
bswap
or
scas
lret
pop
fdivrl
cs
jo
mov
sub
fcmovb
xchg
jecxz
shrb
mov
or
les
sbb
outsl
lahf
jno
icebp
aam
hlt
pop
outsl
xlat
cltd
mov
sbb
ljmp
mov
xchg
mov
stos
pop
xchg
cwtl
push
cs
jg
mov
repnz
dec
sub
fwait
les
jecxz
mov
pop
or
inc
pop
sbb
repnz
adc
stos
gs
test
inc
dec
or
loop
xchg
hlt
repz
push
icebp
xchg
sbb
in
jl
cmp
imul
mov
mov
push
lahf
pop
dec
mov
outsl
mov
push
add
popf
hlt
dec
les
aaa
mov
add
test
cmp
mov
cmp
fcomi
mov
and
sub
push
adc
aad
dec
jecxz
inc
arpl
movsl
sbb
xchg
sarb
lods
lods
xor
jae
cmp
xlat
movsb
faddl
pop
lods
arpl
cmp
inc
adc
stc
xchg
lds
add
ljmp
enter
jecxz
cpuid
fidivrs
je
outsl
cmp
into
mov
sbb
nop
jge
enter
sub
jle
cmp
cmc
cli
pop
sbb
pusha
mov
repnz
sarb
nop
das
sub
xchg
cli
cld
inc
ret
pop
jmp
cmpsl
lods
jb
enter
neg
lods
lods
mov
jmp
scas
sub
or
push
or
push
je
stc
and
rorb
sub
mov
xchg
and
cwtl
sub
jmp
add
cmp
daa
xor
dec
lahf
or
or
pusha
inc
iret
or
fcoms
cs
cmp
arpl
sbb
xchg
in
push
pop
js
aaa
fdiv
and
jnp
jo
dec
ret
cmp
cmp
ss
jle
fildl
inc
cmp
xchg
add
ds
movsb
ja
sbb
push
sbb
mov
fsubs
out
sti
pop
inc
xor
lods
arpl
or
or
mov
in
dec
xor
pushf
popw
inc
mov
ja
mov
imul
fildll
mov
fcmovbe
xchg
aaa
xchg
das
inc
mov
pop
push
push
jns
loopne
fwait
sub
pop
lret
sbb
add
pop
shl
cwtl
or
pmuludq
and
inc
in
ret
popa
leave
fs
inc
sub
jmp
sub
jns
dec
xorb
ljmp
push
pop
push
inc
ljmp
mov
lret
lock
dec
mov
dec
push
pop
or
lret
rcl
imul
lods
pusha
xor
xor
lds
and
jge
pop
push
mov
cmc
ds
mov
or
lahf
sub
jo
ret
mov
pop
outsl
add
add
cmc
popa
cltd
ret
xchg
push
fwait
xchg
xor
xlat
lret
add
test
popf
xor
or
mov
jle
pop
out
or
popf
sub
cmp
adc
jecxz
test
nop
test
movsl
inc
arpl
testb
nop
cmp
inc
ljmp
cli
mov
jge
cli
mov
mov
imul
dec
xchg
push
cmc
pop
xchg
sub
sbbl
sub
cmp
mov
mov
cmpsl
push
mov
push
movb
or
call
jmp
aam
pop
push
dec
cmp
and
aas
dec
mov
pop
pop
pop
and
push
and
leave
mov
lret
out
aas
fs
xchg
cli
add
fiaddl
jp
mov
mov
jg
mov
mov
cmp
jge
decb
int
jmp
mov
inc
xchg
cmpsb
mov
xor
fsubr
and
mov
int
lret
fdivl
pop
add
dec
jns
xchg
faddl
jmp
stc
icebp
xchg
bound
jmp
adc
xchg
or
out
hlt
xchg
pop
xchg
mov
fidivs
jne
dec
ffree
dec
cmp
push
pop
clc
stos
jmp
xor
mov
sbb
mov
cwtl
dec
sbb
fucomp
xchg
ljmp
xor
rcrb
xor
adc
cmpsl
cmp
cwtl
mov
loope
push
fdiv
movsb
das
aaa
cs
jae
cmp
lret
in
cmpsl
push
sub
fadd
cs
mov
test
inc
ficomps
enter
push
imul
xchg
stos
shlb
dec
js
cmp
cmp
sbb
fdivrl
mov
in
leave
cli
pop
push
data16
xchg
into
test
pop
push
std
clc
mov
daa
rcl
cmp
or
lods
mov
add
push
lret
jno
sub
loope
mov
push
mov
mov
sahf
xor
push
stc
inc
ret
sub
enter
imul
lcall
xor
je
mov
lahf
mov
sbb
fsubs
pushf
cmpsb
adc
aam
pusha
jle
rolb
push
xor
xor
add
mov
mov
and
or
cmpsl
mov
push
or
or
sbb
mov
xor
test
jle
jp
xchg
mov
arpl
dec
xor
sub
jns
dec
jg
push
inc
xchg
gs
ds
mov
pusha
push
test
fisttps
push
push
adc
aad
pop
jno
sub
mov
repz
divb
cmc
pusha
fsubp
pop
shll
lock
shl
sbb
mov
das
cmpsl
aas
push
xchg
adc
xchg
iret
data16
iret
mov
cmp
test
repnz
ss
sub
inc
xchg
dec
mov
push
ss
dec
cli
and
std
in
es
call
inc
gs
shll
mov
popf
into
cmp
ficoml
adc
add
aas
pop
push
jb
stc
daa
leave
or
mov
add
pop
add
push
add
sub
cltd
push
and
pop
jmp
cli
ja
arpl
mov
pop
aaa
outsb
xchg
daa
mov
jge
in
inc
pusha
cmc
outsb
xchg
adc
add
out
xchg
or
or
loope
sbbb
mov
stos
das
sbb
fnsave
scas
stc
push
mov
mov
cmp
jae
fiadds
and
jnp
out
cmp
je
fs
add
gs
xchg
loopne
pop
xchg
cmp
fnstsw
cmc
aaa
mov
and
shll
ljmp
in
push
mov
rcr
rcll
sbb
and
stos
imul
ss
int3
movsl
repz
mov
inc
pop
inc
pop
xor
scas
ficoms
inc
lahf
sbb
xchg
xchg
dec
jno
dec
xor
cmp
daa
sahf
adc
mov
jns
add
int
dec
not
push
or
lods
fistps
stc
or
mov
adcl
and
or
push
add
insl
dec
and
dec
push
mov
imul
add
aaa
jecxz
idivb
adc
sbb
xchg
mov
in
outsb
lret
adc
jbe
lret
fsub
lret
mov
repnz
je
sub
jge
sbb
ds
add
xchg
jbe
fsubrs
mov
scas
sub
loop
loopne
sahf
and
sbb
sti
sub
arpl
fwait
pop
sti
lods
jl
pop
or
ja
out
pop
pushf
xor
sub
sub
mov
dec
insl
popf
pop
push
push
adc
jno
xlat
mov
sbb
xchg
mov
sahf
cs
testb
fnsave
push
es
mov
and
mov
fimuls
jo
cmp
loopne
sbbb
in
cmp
mov
dec
xor
aas
cmp
rorb
jb
sbbb
inc
es
and
lods
mov
or
mov
or
pop
xchg
loope
push
add
icebp
mov
sub
push
sbbb
add
push
push
inc
test
lret
sahf
sbb
xor
push
sub
xchg
lahf
mov
and
outsl
in
loopne
call
or
cwtl
sbb
adc
lret
jae
push
popf
in
sub
dec
je
into
fwait
test
xchg
rolb
and
pushf
fbstp
notb
aas
cs
filds
mov
repz
pop
fs
mov
sbb
insl
push
pushl
sbb
cmpsl
ss
std
into
loopne
jo
enter
mov
or
jb
cwtl
lods
mov
adc
sbb
dec
or
cmpsb
and
outsl
idivl
jg
frstor
mov
fidivrs
xchg
xchg
stos
sub
pop
ljmp
jecxz
xor
pusha
jae
pop
or
std
push
push
add
rorb
push
addr16
push
xlat
imul
ljmp
or
sbb
ja
pop
pop
xchg
and
mov
movsl
out
sahf
pop
dec
adc
cmc
or
jno
pop
fdivl
divl
stos
inc
mov
jmp
je
pop
pop
stos
sub
inc
xchg
mov
arpl
dec
sbb
shll
push
add
mov
adc
mov
dec
cli
out
movsl
jbe
xlat
push
test
gs
xchg
stc
mov
data16
inc
or
push
mov
mov
jbe
push
fcmovne
div
int
mov
jp
scas
out
jb
fisubrs
scas
mov
jmp
push
xchg
cmpsb
subl
dec
loope
jl
sub
sbb
mov
test
lock
movaps
sub
xor
jecxz
mov
sub
popf
cltd
fsubr
cmp
lahf
outsb
jmp
fsub
sbb
dec
mov
cmp
sbb
lea
xchg
and
sbb
pop
pushf
dec
ret
lods
loop
das
cmpsb
push
push
xchg
xor
enter
mov
add
fdivl
addl
inc
cmp
push
and
aam
outsb
xchg
inc
and
mov
cmpsl
loope
pop
jecxz
or
pop
loopne
outsl
sarl
cld
pop
and
add
in
cmc
sub
jb
sarl
add
pop
iret
daa
in
cmpsl
push
and
std
out
jge
test
lret
cmp
dec
sti
cwtl
push
popf
dec
mov
inc
jo
xchg
mov
pop
cmp
jecxz
mov
pop
add
adc
mov
in
fs
jb
ret
jbe
sub
mov
popf
inc
or
xor
and
fcomip
lcall
pop
cmp
in
jns
dec
stc
aaa
or
push
xorl
cltd
out
aaa
scas
dec
or
nop
pushl
ss
mov
sarl
imul
popa
jne
ljmp
push
jb
icebp
ror
inc
imul
sbb
into
sahf
call
jecxz
lods
xor
xchg
and
add
rol
sahf
xor
iret
inc
std
xchg
add
insl
ss
icebp
inc
popa
enter
insb
fldl
rcrl
das
or
rorl
cmp
pop
add
push
icebp
shll
jge
repz
add
or
dec
enter
daa
jno
adc
es
mov
cmpsl
add
push
mov
imul
jbe
rcrb
pop
stc
pop
cmp
out
daa
inc
add
cmp
sub
sub
pop
rcll
pop
mov
pop
inc
jne
in
and
add
jp
xor
mov
dec
scas
fs
test
jne
or
dec
cmp
popf
loopne
pop
add
push
cmc
mov
das
mov
inc
xchg
js
adcb
jge
jb
and
push
jmp
pushf
daa
mov
jl
xchg
cli
pop
test
mov
lds
cmc
or
push
sti
lcall
hlt
adc
pop
shll
not
mov
lcall
mov
mov
jle
fwait
dec
mov
jmp
dec
inc
pop
mov
mov
add
add
cmpsl
sbbb
push
test
fldl
imul
sub
add
mov
or
loope
jnp
js
rcrl
push
lea
into
out
popf
adc
xchg
add
push
pop
add
jmp
aad
lds
std
aaa
mov
cmp
jb
mov
jbe
jae
jge
repnz
leave
inc
sbbb
xor
fadds
jne
call
insl
mov
cmpl
xchg
mov
lods
sar
rolb
loop
arpl
pop
or
inc
lds
jecxz
test
add
xchg
cltd
out
je
iret
nop
xchg
iret
out
les
ret
or
mov
paddd
xor
stc
lods
xor
or
mov
sbb
cmpsl
inc
cmc
fldenv
jnp
data16
sub
and
jp
fcomps
out
sbb
xor
test
fstps
stc
shl
ret
adc
leave
xchg
rcll
push
adc
sbbb
lret
cs
call
in
jp
aad
imulb
cmp
jle
stc
ljmp
pop
pop
scas
dec
rorb
xor
movsb
insb
push
cmp
xchg
sti
std
push
mov
xorl
sub
push
mov
sub
loop
add
loop
xchg
lahf
movsb
mov
iret
fcoml
or
loop
sti
mov
mov
and
popa
aaa
outsb
mov
cmp
daa
bswap
mov
out
andl
loope
orps
mov
dec
pop
incb
mov
mov
nop
in
sbb
dec
sbb
inc
outsb
call
inc
into
fwait
adc
lods
mov
inc
clc
push
ret
les
push
inc
dec
pusha
sbb
adc
shll
les
xchg
movsb
ja
bound
pushf
pop
push
add
test
push
inc
add
dec
lea
mov
cs
cs
fisubrs
mov
add
or
dec
aas
js
loopne
adc
std
adc
adc
cs
mov
mov
mov
test
dec
cli
lea
lods
nop
or
imull
add
xor
fldl2e
fadd
cmp
dec
jmp
or
jmp
jne
das
adc
adc
pop
mov
inc
fcompl
nop
out
daa
cmpsl
mov
cltd
fldenv
sbb
dec
xchg
repz
aas
jle
sbb
je
mov
hlt
fbld
xor
in
stos
sub
jne
jmp
dec
sti
xor
pop
sbb
dec
xchg
cmp
push
pop
add
inc
insb
repz
cltd
adc
mov
cltd
or
jo
mov
test
in
js
sub
dec
or
sub
or
jae
push
mov
sub
popf
sti
enter
push
xor
push
mov
cwtl
js
test
or
popa
sbb
ret
mov
jl
cmpsl
fadds
fcmovne
sub
call
out
loopne
push
add
jmp
cltd
cmp
pop
pushf
mov
xor
ljmp
clc
cmp
jmp
nop
sti
sub
mov
inc
gs
insb
push
mov
test
daa
ret
icebp
inc
cmpsl
popf
jle
jnp
outsl
or
jns
lret
mov
push
jecxz
sub
shll
xor
or
aad
mov
mov
sub
ss
push
and
fmull
cli
push
lret
stos
sti
call
or
xor
inc
pop
pop
fsubrl
arpl
mov
into
test
in
push
inc
sahf
push
sbb
jne
xor
dec
xchg
inc
mov
cmpl
mov
rcl
dec
push
gs
shrb
mov
adc
inc
add
dec
lret
add
dec
arpl
cmpsb
mov
cmp
sbb
mov
imul
sbb
mov
xchg
mov
mov
jmp
sti
test
fdivr
jecxz,pn
lea
push
stos
cmp
ret
push
jne
adc
iret
pop
lds
fmull
xchg
sbb
adc
or
loop
mov
push
dec
push
fucom
adc
sub
xchg
xchg
xchg
jae
lock
aas
jl
js
cmpsl
add
xchg
sub
jno
inc
sbbb
push
out
aad
iret
pop
jae
add
and
xor
in
dec
adc
inc
fstps
adc
int
xor
movsl
in
fs
fisubrl
push
cs
and
mov
ret
fwait
push
popa
loop
imul
cltd
mov
leave
inc
ljmp
fsubrs
jecxz
loope
mov
shl
in
sbb
adc
adc
xor
adc
xor
icebp
sbb
lret
clc
jg
aaa
jp
jns
or
mov
std
lds
push
scas
bound
test
mov
push
mov
sub
js
adc
mov
pop
int
paddsb
or
int
inc
push
mov
xchg
and
dec
lods
mov
push
cltd
mov
bound
jecxz
xor
popa
cmp
sub
pop
sub
test
lods
and
stos
xlat
inc
adc
mov
jp
cmp
ret
call
into
in
ficoml
pusha
dec
fimuls
sbb
fs
stos
rcl
push
in
mov
shl
out
insl
mov
outsb
ficoml
iret
out
inc
lahf
xor
hlt
das
test
dec
xchg
mov
fsubl
lds
aam
cmp
out
popa
outsl
gs
imul
inc
sbb
xor
xchg
mov
dec
mov
ret
pushf
push
mov
mov
rcrb
xchg
js
mov
js
aaa
push
pop
scas
push
and
dec
or
adc
xor
scas
push
pop
in
sarb
cmp
xor
ljmp
lds
mov
mov
mov
push
or
std
out
add
xor
add
push
or
lret
push
ja
lcall
cmp
icebp
dec
test
jne
in
mov
mov
and
int3
pop
xchg
lret
pushl
je
jle
nop
pusha
sbb
loop
cs
xchg
es
lock
adc
xchg
test
xchg
cltd
xchg
cli
jecxz
test
pop
fnsave
nop
negb
cli
mov
cs
jb
pusha
lret
mov
clc
push
xor
leave
test
xor
add
pop
inc
push
and
outsb
test
mov
add
sti
mov
ds
ret
out
inc
lcall
mov
add
and
jae
sbb
test
push
inc
and
enter
orb
in
rcll
mov
xchg
inc
dec
ja
sbb
push
and
iret
pop
push
cld
data16
mov
sub
xchg
sbb
lock
arpl
imul
adc
push
in
and
xor
cmp
pop
jnp
adc
ds
lods
mov
and
inc
mov
leave
js
test
xor
lret
adc
and
cmpsl
fidivrl
int
fbld
out
dec
out
inc
cmc
jns
je
lock
xchg
mull
xchg
adc
add
mov
call
cmp
outsb
jle
stos
icebp
cwtl
add
in
int
cs
movsl
popa
sbb
repnz
dec
pop
pop
clc
or
xlat
dec
aas
fisubs
push
pop
loope
call
lods
mov
sub
jg
and
dec
cmpb
popf
inc
dec
mov
cmp
in
mov
cmpsl
push
mov
popa
mov
mov
cli
aad
adc
lcall
insb
jo
mov
jns
loop
lea
push
cmpsl
push
cmc
iret
lods
sub
loopne
inc
dec
cmpsb
cs
in
sub
psrlq
inc
sub
and
fidivrs
scas
add
mov
pop
dec
jns
sbb
push
dec
dec
test
fnstenv
aaa
outsb
into
and
call
popa
js
daa
inc
in
aam
mov
add
cmp
inc
ljmp
inc
or
add
repnz
pop
addr16
sbb
jle
lret
es
int3
xor
pop
xchg
clc
movsl
je
mov
int3
pop
xchg
pusha
adc
adc
jmp
lahf
mov
xor
xor
insb
shlb
and
loopne
das
dec
mov
sbb
cld
push
mov
sub
or
hlt
add
jo
shrd
inc
js
sbb
add
inc
push
cmp
push
jno
mov
out
inc
daa
sub
adc
in
and
sub
xor
sbb
xor
negl
loopne
fmull
mov
fwait
lcall
pop
dec
cmp
ret
sbb
cmp
jno
mov
xchg
insl
pop
ret
xor
sti
mov
stc
insl
movsb
lcall
lock
mov
fnsave
into
repnz
mov
pop
jb
add
cmp
lock
sarl
or
ljmp
fpatan
xchg
push
mov
cs
insb
fs
pop
sbb
adc
lds
mov
fcmovb
inc
nop
mov
pop
inc
shll
in
xchg
test
mov
mov
imul
nop
pop
jge
push
ja
xchg
imul
repz
loope
dec
cmp
jne,pn
mov
cmp
push
adc
xor
adc
adc
push
pop
pop
sti
out
cmc
jbe
int3
adc
repnz
notb
dec
dec
inc
vaddsubps
repnz
pop
inc
mov
add
cmp
cmp
cli
pusha
or
pop
lcall
outsl
and
fwait
ja
leave
and
sbb
mov
inc
mov
ror
sub
call
dec
stos
xchg
orl
stc
sub
popf
cli
and
out
inc
xchg
ret
fwait
mov
cmpsl
das
sti
pop
cmp
push
ds
pop
pop
leave
sbb
jmp
lahf
or
mov
inc
inc
repnz
test
fnstsw
mov
mov
clc
jle
or
cmp
jbe
push
test
cmc
fcmovnbe
xchg
cmp
mov
rcrb
rcr
xor
push
into
imul
mov
inc
mov
add
fstpt
outsl
shll
mov
mov
test
jle
fldt
xchg
test
lods
and
fs
rorb
out
ja
shlb
lcall
in
aas
cwtl
jae
popa
in
push
dec
dec
mov
jae
lahf
mov
ror
sbb
push
sbb
push
cmp
mov
xchg
faddl
out
jno
and
jbe
sub
negl
add
mov
inc
fiadds
shlb
std
es
shr
mov
push
sbb
xchg
test
jecxz
in
mov
add
cmp
lods
mov
jl
scas
daa
mov
push
fcomps
dec
lods
mov
sbb
mov
jmp
in
inc
push
cmc
and
inc
in
out
cmp
jo
pushf
mov
adc
jg
inc
dec
pusha
push
inc
or
xchg
lahf
pmulhw
cltd
jecxz
lods
fwait
rcl
shl
fnstsw
dec
shll
jo
cmp
cmp
mov
leave
push
or
fisubs
jmp
mov
sub
xor
rorl
imull
xor
aas
inc
mov
movsb
and
mov
cmp
outsb
sti
push
xchg
push
adcb
test
mov
shll
fmul
icebp
fisubrs
mulb
jns
int3
mov
cmpsl
loope
sbb
les
fwait
lock
pushf
inc
and
pushf
xchg
push
fnstcw
push
loopne
sub
or
xchg
mov
cwtl
lods
out
adc
push
xchg
leave
add
cmpsl
movsl
dec
push
sub
lock
add
dec
loop
and
jae
and
mov
mov
cmp
mov
jmp
push
outsb
fdivs
shll
icebp
js
shlb
mov
int3
les
shl
sub
aad
pop
add
inc
repnz
lret
test
jge
aas
int3
rolb
jno
inc
icebp
push
scas
mov
sub
inc
sbbb
outsl
mov
gs
stc
jbe
movsl
ljmp
mov
loope
inc
lret
mov
ljmp
mov
jl
xchg
ds
imul
or
test
add
jp
mov
in
out
jle
mov
enter
xchg
js
scas
hlt
out
and
push
fiadds
jecxz
cmpsl
xor
lahf
aad
in
loop
and
sbb
data16
je
xor
mov
clc
jbe
sbb
jo
fnsave
xorl
int
mov
div
cmp
add
add
test
mov
jecxz
arpl
add
push
pop
add
fwait
enter
enter
add
movsl
jp
call
or
mov
add
loope
xchg
pop
ret
movsl
adcb
jae
xchg
hlt
cltd
ret
adc
and
xchg
out
push
cmc
outsl
inc
jp
fnstsw
dec
sbb
js
jecxz
xlat
lahf
mov
pop
inc
push
mov
fwait
stc
xlat
js
mov
dec
adc
jbe
leave
outsb
pxor
xor
jl
movsl
xor
sub
fsubrs
push
mov
xchg
pusha
aas
jp
xchg
shr
pop
adc
aaa
cld
cmp
cs
testb
jle
xchg
cmp
mov
in
movsb
adc
scas
add
adc
push
or
pop
mov
call
fsubrp
push
aad
mov
dec
ss
cmc
jecxz
into
sub
fnsave
push
push
loop
scas
mov
and
xchg
rcl
pop
test
cwtl
mov
jne
sub
gs
dec
and
xchg
data16
sbb
arpl
addb
shl
mov
add
mov
jae
or
and
cli
lock
scas
mov
cmpsl
push
cmp
adc
dec
mov
add
int3
cmpb
cs
add
test
add
int3
leave
mov
addr16
leave
add
iret
popa
outsl
push
clc
mov
cmpsl
push
shrb
fwait
icebp
mov
mov
in
call
xchg
leave
xchg
push
adc
mov
orb
dec
cmpsb
push
out
mov
sbb
adc
xlat
lret
repnz
clc
jne
mov
loopne
fldt
pusha
testl
rcrb
in
test
add
push
xor
adc
decl
mov
add
insl
jle
mov
pop
xor
incl
and
outsb
mov
sub
test
mov
out
mov
xchg
outsb
icebp
lret
daa
mov
out
adc
sahf
fimuls
pop
lret
sbb
cmp
jecxz
jle
sbb
test
inc
xor
repz
cmp
cmp
sub
out
add
mov
int
pushf
sbb
xor
sahf
push
pop
jno
cli
mov
or
pop
and
xchg
addl
imul
das
cs
xchg
adc
movsl
out
adc
inc
inc
push
sbb
sub
into
or
mov
scas
sub
data16
imul
ss
dec
jecxz
mov
movsb
sub
scas
sub
fdivrl
xor
movsb
dec
jb
sbb
pop
cs
aaa
xchg
stc
dec
lds
xchg
sub
and
ljmp
mov
or
sub
loope
adc
xchg
cmpsl
adc
add
testb
xchg
push
lods
lods
ja,pn
ret
or
loopne
sub
adc
inc
sbb
mov
into
cltd
cmc
fiaddl
dec
jbe
loopne
lret
icebp
les
pop
jnp
adc
xor
cs
push
jns
ret
pop
inc
and
aas
jo
pop
and
xchg
adc
mov
add
or
frstor
lods
stc
jle
sbb
add
jecxz
out
repz
mov
jg
daa
ret
sub
xlat
mov
add
sbb
fisubl
jbe
push
xchg
push
nop
xor
popa
push
arpl
cwtl
or
jno
jne
shrl
je
dec
popf
pop
jmp
xchg
add
and
mov
cmc
cmc
aas
push
adc
xchg
cld
or
xor
lds
test
xchg
call
mov
xchg
frstor
in
lret
mov
and
sti
push
dec
movsb
bound
jne
fldt
fldenv
or
push
sbb
cmpl
lahf
je
and
xchg
lret
dec
test
sar
pop
add
clc
jecxz
pop
and
mov
movd
aad
sbb
or
lcall
fs
cmp
fwait
pop
enter
pushf
xor
push
mov
enter
xlat
inc
jb
adc
and
insb
loopne
push
pop
neg
jbe
jo
aaa
cli
enter
and
std
ds
bound
int
cmp
fsub
into
test
sti
adc
mov
shlb
xlat
mov
jne
pop
or
cmp
ror
fmuls
jns
movsb
sbb
push
push
mov
test
inc
add
jmp
test
aad
and
subb
add
jg
push
in
and
loopne
imul
mov
das
sahf
jmp
dec
aam
in
test
add
or
xor
hlt
hlt
mov
jp
pop
adc
adc
or
into
fildll
lock
adc
int
das
cmpsl
and
push
popf
add
push
inc
xor
push
into
pusha
scas
ss
subl
aam
das
stos
mov
adc
dec
enter
jle
mov
sbb
adc
test
out
out
icebp
lcall
lcall
sub
popa
adc
mov
popf
or
shr
cmp
mov
adc
jno
add
out
dec
fwait
mov
pop
out
addr16
mov
sub
insb
push
out
sub
mov
sbb
mov
or
imul
sub
dec
inc
enter
xchg
mov
mov
scas
mov
loop
or
lcall
lods
xor
or
enter
push
data16
call
lcall
repz
xchg
cwtl
add
cwtl
ljmp
jmp
aam
and
out
pop
imul
inc
xchg
mov
mov
aas
jae
mov
xor
aam
or
in
std
mov
test
in
loop
int
in
es
sbb
nop
xchg
inc
nop
js
ja
sub
call
fnstenv
lahf
mov
add
mov
repz
loopne
mov
out
aas
mov
notl
inc
jl
push
push
cmpsl
insb
das
sub
push
mov
lock
je
inc
dec
dec
aaa
lahf
call
sbb
dec
lods
cmp
push
dec
stos
pop
sbbl
shrl
lea
adc
jne
roll
add
jecxz
cmpsb
adc
mov
test
adc
dec
popf
add
push
pop
add
imul
and
cli
insb
shlb
fists
leave
out
xor
adc
call
ss
mov
test
pop
test
insb
push
push
out
mov
adc
pop
fisttpll
mov
les
in
in
inc
js
push
js
sub
push
lock
push
push
inc
sahf
mov
loop
notb
sbb
xor
mov
add
in
or
inc
shrl
subb
pop
inc
pusha
pop
sbb
xor
xchg
mov
xorb
out
jp
arpl
inc
ljmp
clc
in
pop
or
test
lea
jle
or
fstpt
cmp
mov
mov
pop
mov
mov
stos
sub
adc
sub
pop
aas
sbb
lcall
inc
jns
stos
jecxz
pop
scas
scas
pop
ror
add
add
and
out
mov
es
lds
push
sub
add
sub
push
push
les
push
inc
xchg
and
setns
mov
mov
sbb
data16
jb
out
dec
clc
dec
dec
push
pop
mov
ret
loop
insl
imul
dec
jno
xor
in
mov
push
fcmovb
gs
gs
shl
or
imul
ficoml
or
adc
rcrl
push
cmp
push
out
repnz
insb
mov
js
pop
jp
cmp
sub
mov
xlat
pop
xchg
inc
ja
enter
mov
adc
outsl
add
inc
adc
xchg
movb
xchg
out
sub
adc
fwait
dec
adc
mov
lret
lret
push
leave
jb
inc
rclb
rclb
in
inc
dec
sbb
mov
xor
xchg
inc
shrb
call
inc
adc
mov
mov
mov
adc
dec
out
into
pop
aas
cs
pop
fucomp
pushf
xchg
xchg
or
pop
fistpll
mov
outsl
adc
or
popa
subl
jge
sbb
filds
dec
std
xchg
ds
inc
out
lcall
loop
push
inc
push
std
fsubl
sub
mov
add
xor
dec
or
andl
lcall
outsb
sbb
mov
ljmp
call
mov
xor
sbb
in
sub
adc
outsb
dec
mov
pop
lea
xchg
lds
cmp
mov
addl
xor
add
mov
shlb
out
add
and
mov
or
ds
or
hlt
fistpll
sbb
pushl
mov
shr
shlb
in
or
pop
mov
and
mov
xchg
stos
xor
inc
mov
lock
add
mov
inc
ljmp
cmp
cmp
dec
cmp
inc
stos
xchg
das
mov
sub
or
aas
jno
lock
inc
push
fisttps
mov
pop
out
fldt
push
in
out
xchg
outsl
fiadds
sbb
or
shll
push
dec
push
pop
lret
sub
fwait
push
sahf
mov
sbb
outsl
xor
mov
xor
inc
or
scas
mov
jmp
int3
and
mov
ret
std
out
scas
popa
lret
jb
insl
out
add
mov
pusha
or
dec
or
or
cmp
outsl
outsl
ljmp
testb
xor
mov
inc
das
lahf
inc
jl
mov
mov
jns
push
int3
divb
loop
ficoms
push
dec
pop
iret
hlt
mov
stos
cltd
inc
xor
add
arpl
push
inc
add
insb
gs
jae
pusha
add
cmp
shr
add
jmp
xor
adc
inc
push
les
cmp
stc
and
ss
lods
fidivl
push
notl
dec
pop
cltd
ds
xchg
fstpl
mov
jne
mov
scas
mov
fs
adc
int
cmp
pop
or
scas
pop
xor
pop
inc
push
cwtl
loopne
cmpsl
mov
cwtl
test
pusha
fisttpll
inc
in
in
stc
ljmp
popf
movsb
out
mov
lret
ret
sbb
xchg
mov
pop
scas
scas
xor
inc
xchg
and
out
inc
add
sub
mov
out
jne
into
mov
inc
shr
mov
cwtl
inc
aam
popf
out
stos
js
mov
cwtl
mov
xchg
mov
fistpll
imul
les
aam
adc
cld
in
xlat
push
push
sahf
lahf
jge
jmp
or
mov
pop
add
cld
aaa
js
adc
xor
dec
mov
addl
mov
jbe
scas
jno
int
shll
or
cmpsb
sbb
adc
loopne
sub
enter
cld
outsl
in
sbb
add
jmp
add
std
pop
push
lahf
mov
xchg
sub
xor
xor
int
xor
cmp
aad
sub
shll
stos
sbb
mov
jp
push
es
mov
or
add
imul
lcall
sub
fdivrp
xchg
out
ret
push
adc
adc
and
mov
jmp
pusha
das
pop
push
dec
sbb
imul
loop
pop
loope
aas
cli
mov
adc
loope
sub
dec
dec
cltd
rcl
fidivrl
fmuls
jae
andl
mov
xor
jb
push
das
nop
das
cmpsl
lods
push
mov
cmp
movsb
les
adc
xor
jae
cld
xchg
shrb
push
aas
xlat
xor
sti
mov
out
addb
push
sbb
popf
stc
inc
pop
inc
jne
sub
shrl
out
inc
ljmp
insb
test
sahf
mov
sub
xchg
mov
pop
jo
mov
jnp
les
subb
lahf
mov
push
loopne
jg
je
ficoml
notb
in
sub
push
out
mov
stos
add
mov
jle
push
fsubl
mov
sbb
sti
jnp
dec
mov
je
mov
bound
fwait
repz
inc
fcoml
imul
fcoms
mov
add
add
popa
jle
pop
lods
into
fisttpl
dec
clc
cmp
push
pop
add
jg
cmp
sub
xchg
aam
jo
icebp
addr16
cmp
pop
push
rorl
add
pop
sbb
dec
xor
testb
add
push
cmp
and
adc
cmp
repz
addb
mov
and
and
push
pop
gs
cmp
setne
cmp
sbb
mov
es
jle
ds
cltd
ficomps
popf
lcall
or
sbb
cwtl
xchg
test
xchg
int
rcll
cmc
aaa
sbb
mov
int3
lods
sbb
les
xchg
pop
cmp
aaa
fmull
sub
dec
cmp
loop
cld
sahf
xchg
push
and
rcr
inc
popa
push
cmp
add
clc
or
sub
jo
es
cmp
lds
jmp
js
dec
inc
inc
jmp
mov
cmpsb
sbb
fsubrs
mov
adc
nop
rorb
ret
mov
out
icebp
add
push
xlat
cltd
cli
popf
ja
stos
leave
push
cmp
in
mov
or
mov
sub
sbb
pop
xor
push
gs
add
or
xchg
mov
xchg
hlt
inc
repnz
cmc
cmpb
aas
in
imul
adc
and
ljmp
cli
insb
scas
das
jge
cmp
add
dec
mov
in
leave
sbb
push
and
lcall
inc
mov
xor
and
mov
fdiv
xchg
sub
fisubs
xlat
inc
adc
sbb
sbb
pop
push
lods
pop
mov
in
fdivs
mov
loop
sub
iret
in
add
and
outsb
test
jno
dec
fstl
xor
cwtl
data16
dec
pop
fisubs
popa
popf
pop
ja
aaa
mov
out
inc
sbb
adc
pop
mov
roll
sbb
pop
mov
and
inc
jne
add
pop
and
pop
mov
outsb
cs
or
push
pushaw
rcr
ss
inc
jge
xchg
or
xor
cmp
inc
mov
sbb
and
xchg
mov
movsl
push
imul
daa
push
mov
or
cmp
repnz
testl
out
dec
push
leave
shrb
or
cmp
pop
insb
out
aad
mov
xchg
fsubrs
jl
icebp
bound
in
test
push
rcl
dec
call
jno
pop
enter
shlb
push
mov
call
xor
movl
in
hlt
jge
mov
mov
and
and
stc
xor
dec
mov
adc
rorl
ret
inc
repnz
mov
fnstenv
ja
or
add
into
cmpsb
repnz
test
adc
shlb
jnp
xor
jnp
movsb
xchg
data16
test
xchg
push
insl
call
cmp
dec
adc
stos
popa
das
rcll
xor
insb
out
lock
das
iret
lods
rcll
pusha
dec
push
lods
fstpl
notb
push
xor
in
cltd
leave
movsb
and
jb
int
enter
ficomps
mov
insb
pusha
movsl
pop
dec
clc
cmpsb
jmp
icebp
sti
or
test
push
gs
or
or
mov
iret
mov
and
dec
mov
jb
stos
pop
adc
mov
pop
mov
in
pop
repnz
push
inc
add
or
mov
mov
fisubl
xchg
push
add
es
sub
repnz
clc
xchg
or
les
mov
and
mov
insl
addb
lret
pop
inc
cmp
aas
push
divl
xchg
xchg
cmpsl
cli
sub
mov
add
je
aad
lahf
test
mov
out
nop
cli
mov
mov
pop
call
xlat
and
aaa
mov
mulb
cmpb
jne
in
jbe
dec
outsl
jno
mov
sti
xchg
inc
out
es
movb
movsb
aaa
mul
loop
or
sbb
add
daa
and
ret
mulb
push
jle
out
test
xchg
outsb
inc
push
imull
jae
ss
sbb
in
test
jle
fisubrs
ror
leave
push
outsl
arpl
cmp
testl
mov
mov
sbb
dec
fidivl
in
lds
jmp
and
scas
mov
jp
popf
lock
imul
pop
test
dec
cmc
lcall
in
int
in
jge
addl
mov
cmp
cltd
mov
jo
mov
loop
cli
shrb
cwtl
push
pop
inc
push
sbb
nop
push
pop
lock
xchg
lock
mov
clc
outsb
in
jmp
sbb
les
jns
int
sahf
popf
jne
and
faddl
dec
mov
pop
mov
mov
jo
mov
jle
dec
mov
imul
out
xchg
loope
lods
xor
push
mov
test
xchg
lret
mov
push
sbbb
lret
jmp
fmul
xchg
fbstp
inc
jo
addl
sahf
fcompl
lds
sbb
push
subl
sub
icebp
jp
inc
cmpsl
mov
lods
into
adc
add
and
movntps
jge
test
sub
ljmp
rolb
fisttpl
push
insl
insb
imul
das
or
push
pop
cli
pop
pop
repnz
lods
push
sbb
pop
jg
lods
mov
pusha
in
inc
rorb
outsl
je
jge
push
mov
mov
shrb
ljmp
dec
pop
ret
aam
ja
pop
mov
and
inc
popa
fisubs
inc
pop
pop
call
sbb
nop
sub
fwait
mov
adc
dec
sbb
push
aad
add
mov
imul
jle
int
pop
mov
push
mov
xchg
or
aad
mov
cmpsl
mov
lods
out
cmp
jg
lods
flds
add
adc
jge
jns
daa
sbb
shlb
cmc
adc
aad
inc
daa
push
aam
out
adc
insl
das
cmp
mov
sub
pop
jecxz
hlt
pop
in
pushf
sbb
push
sahf
fidivrl
add
pop
pop
loopne
fwait
scas
add
push
pop
add
test
mov
jno
ja
mov
jbe
movsl
xchg
popf
cmp
fidivl
dec
jmp
push
push
xchg
inc
jmp
adc
das
leave
push
push
sbb
and
dec
ss
aam
int
enter
icebp
fiaddl
mov
xchg
xor
ljmp
sub
and
es
or
xchg
in
outsb
xchg
hlt
jo
jge
or
lcall
jo
paddq
xor
ret
and
adc
inc
jo
or
inc
mov
imul
sub
lods
insl
xor
mov
push
out
cmpsb
scas
fnsave
adc
fs
xor
cmp
int3
lcall
pop
sahf
inc
clc
or
sbb
sub
je
cmc
shll
stos
mov
mov
fnstcw
repnz
mov
shl
scas
sub
cmp
rol
adc
or
iret
pop
negb
inc
jnp
dec
dec
hlt
in
add
rol
adc
lods
loope
cmp
mov
out
int3
jp
pop
scas
aad
ljmp
shrl
inc
jle
mov
aas
sahf
or
jb
in
jecxz
movsb
testl
jl
outsb
repnz
js
movb
leave
test
adc
jmp
icebp
cmp
aaa
orl
and
push
xchg
jg
xorb
mov
mov
ret
pop
loopne
or
adc
push
out
ret
sti
push
repnz
mull
jmp
pop
out
mov
cmc
mov
pop
lret
mov
mov
mov
mov
ja
roll
das
movsb
iret
es
mov
pop
adc
mov
jae
jno
lods
push
mov
lods
jecxz
les
test
outsl
cmp
shlb
pop
push
pop
and
mov
or
test
test
pop
fidivrs
repz
fnstsw
add
imul
lods
rcl
cmc
nop
push
pop
in
inc
xchg
cltd
xchg
mov
or
xor
add
rclb
mov
mov
loope
in
out
sbb
in
sbb
ret
pop
cmp
loop
jl
cld
mov
sbb
loopne
fcmovbe
orb
mulb
popf
sbb
movsl
cli
fildll
pop
outsl
pop
test
push
in
or
xchg
mov
shl
pop
test
in
jl
cmp
cs
push
aaa
mov
es
std
and
loopne
adc
xchg
imul
hlt
add
faddl
adc
imul
bound
pop
popa
addr16
sahf
lods
mov
sbb
or
loop
and
sbb
xor
cmc
inc
mov
sub
push
xchg
add
subb
adc
movsl
int
xchg
pop
daa
push
mov
xchg
shl
les
imul
lret
jo
loop
int3
dec
and
dec
sub
or
and
enter
fwait
mov
add
mov
pop
mov
push
jle
and
scas
xchg
cmp
mov
subl
or
xor
cmp
rcl
aaa
xor
xchg
mov
push
popf
sbb
dec
mov
cmpsl
std
lods
mov
add
jo
inc
vandnpd
mov
movsl
jg
iret
mov
test
mov
add
mov
orl
testb
out
aaa
and
xchg
mov
addl
fnstcw
pop
sub
fwait
cmp
es
ret
daa
mov
pop
and
into
jle
enter
add
std
lods
testb
adc
into
leave
mov
mov
rcl
shll
pop
mov
lahf
out
push
aas
imul
aaa
mov
fmulp
and
test
xchg
loope
mov
xor
dec
negb
fnstenv
in
aaa
mov
sub
loopne
adc
outsb
das
jl
jle
mov
lea
add
mov
je
inc
sub
dec
or
lock
inc
sbb
jnp
mov
xor
xor
je
imul
fsts
mov
xchg
loope
pop
test
mov
scas
sub
cld
popa
pop
pop
mov
shll
gs
icebp
xchg
sti
loope
sub
push
test
sbb
jle
xchg
insb
sbb
insb
popa
je
outsb
adc
scas
dec
add
adc
movsb
push
imul
push
loope
push
pop
xor
scas
mov
ljmp
aas
cmp
stos
cld
sti
pop
and
arpl
add
adc
fs
aad
dec
mov
inc
sub
in
aas
out
add
adc
sbb
push
iret
fs
dec
jg
or
pop
and
dec
leave
jnp
es
sub
xchg
push
jb
and
push
lret
cmp
lret
and
mov
fs
push
fnstcw
mov
jb
push
mull
xor
push
mov
and
xlat
mov
subb
loopne
ja
jae
insb
sbb
mov
jl
iret
popa
sub
rclb
test
pop
mov
movsb
cmc
sub
adc
inc
hlt
adc
fs
mov
les
clc
adc
or
mov
push
mov
cmp
dec
lds
and
repz
loopne
in
dec
mov
dec
cmp
sub
test
jno
jne
pop
xchg
mov
add
adc
cmpsb
jp
push
push
loope
xchg
inc
push
movsl
roll
sarl
int3
add
pop
inc
mov
mov
out
xchg
sahf
mov
inc
mov
cmp
add
sbb
gs
in
push
mulb
fnsave
stos
jo
jns
dec
jmp
sarl
addr16
adc
cltd
sub
xchg
mov
ljmp
and
or
lcall
je
aad
or
xchg
push
xlat
pop
test
cs
pop
add
and
xorb
add
mov
sahf
out
insb
mov
int
push
std
and
sub
xchg
ret
shl
sbb
arpl
ds
sub
and
ss
and
lret
dec
movsl
jecxz
lret
in
insb
dec
pop
pop
test
je
sbb
adcl
push
arpl
xor
dec
scas
fucomi
xchg
sbb
mov
add
jecxz
add
ja
xchg
popf
mov
mov
test
add
pop
add
out
mov
fs
imul
mov
lcall
xchg
xchg
dec
push
jl
addl
mov
push
mov
xor
leave
dec
test
cmp
add
lret
inc
or
mov
push
call
xchg
mov
mov
push
dec
dec
add
adc
rolb
fstp
test
xor
mov
popa
push
dec
sbb
fcompl
jg
das
addr16
sbb
gs
les
fdivs
das
jl
mov
xor
lret
jns
jnp
add
cs
imul
pop
adc
ss
inc
cmp
icebp
sbb
mov
pop
dec
fbld
pushf
inc
cmp
ljmp
mov
xor
loop
jbe
pop
cmp
stc
shrd
movsb
adc
fwait
stos
filds
cmp
test
sub
lock
dec
adc
inc
add
lahf
fldcw
xchg
pop
movsb
stos
push
out
jp
mov
repnz
dec
mov
icebp
or
sti
inc
fmull
inc
loopne
data16
jge
and
cwtl
add
mov
inc
dec
xchg
fidivs
loope,pn
or
inc
pushf
add
mov
ljmp
scas
push
fstl
cmp
icebp
add
nop
push
sarl
sbb
sbb
push
sbb
cmc
fwait
enter
fdivs
movsl
popl
cmp
test
shrb
sarb
sub
inc
pop
js
sub
decl
das
or
and
xchg
imul
insb
shll
out
cs
push
iret
or
mov
lret
jecxz
test
and
in
sub
mov
xchg
and
mov
and
mov
int3
sbb
inc
mov
pop
je
mov
jb
out
fiaddl
ficoms
sub
clc
enter
cmp
insb
cmp
mov
dec
in
lea
inc
mov
lea
int
jne
movsb
loop
dec
dec
push
loop
cmp
inc
jg
popa
popa
xor
jae
mov
roll
xchg
xchg
adc
mov
mov
jae
fwait
imul
push
jp
fs
lret
xchg
loopne
dec
loop
pushf
push
mov
rcrb
xchg
lea
xchg
insl
xlat
mull
inc
dec
addr16
daa
ret
out
adc
dec
pop
cs
pop
loopne
xor
cli
dec
movsb
pop
push
sbb
in
mov
out
imul
outsb
sbb
xchg
fistps
lret
sub
adc
sub
and
and
and
add
repz
mov
mov
in
sbb
mov
push
sbb
sbb
xor
test
mov
adc
push
sbb
pop
cli
add
sub
testl
ret
push
xchg
mov
cmc
add
inc
inc
and
shll
pusha
aad
mov
jmp
sub
lds
push
lea
add
mov
lds
xor
fisubs
hlt
inc
xchg
addr16
ds
rcrb
or
bound
std
dec
shll
mov
stos
mov
lds
jp
mov
gs
cmpb
or
icebp
push
inc
fs
inc
lahf
push
pop
push
adc
pop
pop
pop
iret
div
jbe
enter
mov
dec
jo
fdivl
push
sub
add
mov
hlt
iret
cmpsl
pusha
or
dec
mov
ss
idivb
sub
push
lret
pop
mov
stc
jne
push
adc
call
mov
sub
sahf
pop
ss
aaa
push
insl
xchg
cmp
xchg
pop
loop
aaa
mov
jle
mov
out
jb
bound
int3
xchg
mov
adc
dec
orl
or
insl
clc
cmpsl
pushf
insb
fucomi
mov
adc
ljmp
jb
aad
pop
idivl
push
lods
jg
je
in
jp
inc
adc
cs
pop
dec
xlat
fidivs
cmpsl
xor
pop
inc
dec
add
and
pop
out
sub
inc
data16
call
fiaddl
pop
push
nop
and
ljmp
scas
shlb
data16
mov
and
andl
repz
hlt
mov
mov
imul
mov
aam
xor
enter
js
insl
int
jge
mov
xchg
sbb
lret
jne
pop
mov
in
add
pop
jae
movsb
cmpsb
mov
sub
nop
push
int
and
setnp
ror
push
mov
hlt
and
pop
jne
outsl
xchg
mov
cmp
js
cmp
addb
push
in
and
cmp
mov
pop
cli
out
or
or
adc
into
fs
mov
push
and
ljmp
or
in
lods
sbb
mov
enter
pop
fiadds
test
and
cwtl
jno
ja
cmp
outsl
inc
ret
fbstp
or
xor
test
aas
daa
cmpsb
inc
aam
int
inc
cltd
popa
xchg
or
mov
mov
bound
xchg
test
or
loop
arpl
add
loopne
sbb
dec
xchg
sub
add
sub
aad
ficompl
jmp
in
cmpsb
push
cmp
push
mov
fsubl
dec
in
jl
adc
jg
rcr
out
xchg
imull
out
imul
icebp
xorb
or
stos
and
pop
daa
ss
jno
pop
call
or
adc
sti
mov
jmp
mov
mov
cmpsb
adc
lods
pushf
mov
xor
std
repz
dec
pusha
dec
cmp
jns
out
dec
mov
fwait
popf
dec
insb
push
xchg
pop
or
mov
icebp
mov
inc
inc
sbb
dec
pop
inc
fldcw
hlt
sbbb
dec
pop
lock
lea
nop
xchg
addr16
adc
data16
dec
mov
daa
stos
insb
adc
insl
adc
or
sbbl
imul
push
sub
popf
je
icebp
add
or
mov
dec
pop
je
ficoml
in
mov
and
popf
cmpsl
pusha
push
popf
arpl
lcall
fucomip
mov
mov
add
pop
add
pop
aaa
dec
jmp
mov
clc
ljmp
incb
jmp
push
pop
imul
fmuls
cltd
sbb
cmp
add
xchg
cmp
mov
cmpsb
jbe
xchg
out
sub
cs
leave
pop
stos
pop
cmp
loope
push
xchg
xlat
cld
or
andl
insl
fcompl
popf
into
or
lock
mov
cmp
mov
outsl
inc
cmp
dec
ret
cmp
mov
lods
fs
into
push
cld
cwtl
jnp
jo
pop
loopne
push
dec
mov
mov
movl
dec
insb
js
es
int3
xchg
cld
fs
inc
mov
add
mov
mov
sub
sub
mov
sub
mov
push
push
jg
dec
test
hlt
leave
das
push
daa
cmp
mov
jge
dec
pop
mov
ficomps
push
add
rorb
dec
rorb
push
push
arpl
ja
loopne
add
jo
pop
push
push
gs
stos
dec
mov
stc
xchg
movsb
je
push
in
gs
adc
or
fisttpl
ret
push
xchg
mov
fisubl
js
and
pop
pop
cs
mov
jp
fs
lods
adc
scas
inc
cs
test
sbb
fs
push
adcb
xor
lret
filds
jae
or
xorl
pop
insl
stos
pop
jmp
push
and
or
mov
mov
sbb
jg
addr16
jne
adcb
sub
sbb
ficoms
cmp
adc
in
xor
push
adc
adc
push
aas
lock
movsl
orb
je
xor
nop
jmp
xchg
rcr
push
xchg
xchg
pop
bound
xor
mov
cld
test
inc
pop
fnstenv
mov
inc
add
xlat
lret
mov
ficoms
sarb
mov
mov
sub
jne
lods
out
cmp
xchg
adc
cmp
xchg
cmp
hlt
mov
rorb
mov
adc
mov
dec
pop
imul
cmp
mov
sbb
pop
inc
mov
inc
add
xchg
sub
mov
adc
scas
pop
add
cmpsb
rcrb
jp
cmp
nop
mov
push
mov
or
xor
test
sbbl
xlat
ja
gs
sub
sub
xor
movsl
inc
jnp
movsl
inc
loop
mov
push
mov
cmp
mov
mov
mov
js
enter
add
inc
dec
push
pop
sub
andb
lods
lcall
in
test
xchg
sbb
cmpsb
jb
test
sbb
mov
lret
outsl
and
stos
pop
inc
std
lret
dec
mov
int
push
push
int
lods
inc
fs
lcall
sub
adc
negl
dec
and
lds
pushf
hlt
test
pop
sub
mov
push
loop
cmpsb
pop
ljmp
inc
ja
or
pushf
aam
das
cmpsl
scas
icebp
outsl
and
mov
jne
out
gs
sub
stos
imul
xchg
popf
loop
lock
stc
mov
jb
jno
pushf
ljmp
inc
lods
push
sub
pusha
hlt
fildll
ret
cs
nop
daa
daa
or
push
mov
int3
jmp
in
adc
daa
jbe
xor
push
clc
pop
dec
fs
xchg
push
push
imul
out
outsb
mov
fnsave
cmp
jnp
cmp
int3
cmp
in
add
push
mov
sbb
jno
je
inc
mov
jno
adc
xchg
add
fwait
sbb
cwtl
popf
inc
push
into
fcoms
pop
jg
mov
pop
fcmovbe
hlt
into
incl
int3
mov
je
push
shll
mov
mov
dec
adc
outsl
lds
pop
jb
fucomp
xchg
mov
pushf
bound
negb
test
xchg
testl
push
scas
aad
pop
or
pop
test
sub
movsl
jl
mov
mov
mov
inc
daa
lods
push
mov
push
ja
add
adc
xchg
sahf
sbbb
xor
xor
cltd
push
test
scas
push
mov
in
outsb
and
sbb
mov
mov
lods
mov
into
imul
enter
js
inc
sbb
js
adcb
xlat
sahf
jne
mov
xchg
and
xlat
dec
fcomps
adc
add
sbb
mov
push
dec
mov
mov
js
adc
push
push
and
sub
lret
pop
fs
sub
pop
add
or
xor
push
xorl
mov
test
lcall
les
into
sub
iret
mov
inc
ljmp
mov
pop
mov
sbb
jmp
jnp
stos
clc
iret
repz
push
orb
rclb
and
leave
sbb
mov
shrb
cmpb
and
push
mov
push
xchg
add
jb
or
dec
and
add
and
mov
stc
repz
mov
fs
into
pop
mov
sub
cmp
pop
shrl
push
push
dec
mov
iret
loope
popa
sub
jge
insl
pop
imul
dec
mov
xor
jno
jmp
sub
or
mov
sbb
mov
sub
ret
sahf
push
pop
push
mov
idiv
pusha
popa
jo
add
adcb
xchg
dec
mov
sub
lds
fsts
inc
rcrb
mov
sbb
ret
push
mov
call
ret
andl
ror
addr16
enter
add
mov
mov
ss
loope
mov
mov
mov
aas
pusha
in
xchg
test
xlat
and
jb
mov
movsb
stos
lds
popa
jmp
mov
stc
stos
pop
push
in
rclb
push
inc
push
sbb
push
and
lret
sarb
push
mov
ljmp
ficompl
adc
cmovne
into
popl
mov
je
out
adc
enter
sub
sahf
mov
and
outsb
push
jae
add
add
mov
cli
cmp
mov
pusha
std
mov
add
push
pop
add
xor
ljmp
push
xor
testl
leave
or
sub
cmp
repz
test
lcall
sbb
adc
rorb
repz
sbb
xchg
sbb
mov
xor
fstpt
jle
jb
mov
jno
sbb
shlb
cmp
xor
cmpsl
jnp
inc
cli
sahf
ret
or
mov
and
fcomp
or
xchg
repz
mov
es
mov
decl
mov
pop
pop
sahf
mov
push
sarb
add
paddusw
scas
mov
mov
lret
fistpll
inc
je
jne
mov
fiadds
push
sbb
sbb
push
cwtl
lahf
insb
popf
and
scas
out
ficompl
mov
imul
dec
and
es
sub
push
pop
sbb
or
int
pop
pop
test
pop
in
loop
les
mov
insb
sbb
mov
aam
fisttps
sub
daa
inc
iret
xorl
inc
aad
lcall
cmp
mov
cmpsb
push
add
sub
lcall
arpl
ret
lcall
push
daa
enter
xor
add
xchg
loop
cmp
fs
cld
mov
lea
jp
add
mov
xchg
rclb
arpl
push
stos
std
ds
ret
push
push
sti
xor
or
jb
mov
out
ljmp
out
cmpb
addr16
or
adc
cmp
shl
sub
mov
decb
jmp
adc
jnp
or
and
ja
dec
inc
sub
sti
xor
mov
mov
mov
push
adc
adc
jno
pusha
dec
test
shlb
xchg
ss
ret
mov
sub
pop
sbb
loop
repnz
xchg
loopne
pop
pop
incb
sbb
cmp
leave
push
push
push
jnp
out
shlb
sahf
loopne
out
pop
pop
jl
loop
repz
outsb
fwait
lret
sbb
loopne
adc
xchg
dec
addr16
xchg
push
cmp
or
scas
aam
pop
jg
pop
loope
insl
rorl
fldenv
loop
es
stos
insl
mov
loope
or
int
test
xchg
xchg
adc
jmp
sbb
add
jnp
ljmp
cli
cmp
orb
pop
or
jno
add
adc
ret
and
icebp
sub
popa
mov
jl
sbb
mov
mov
jnp,pn
xor
inc
movsl
popf
pop
cmp
iret
jmp
adc
imull
lock
int
addl
pop
sbb
test
fisubrs
mov
bnd
xchg
mov
adc
add
dec
icebp
mov
outsl
repnz
arpl
insl
cmp
mov
into
jae
xchg
pop
rolb
std
pop
and
andl
addr16
mov
push
fcompl
jg
loop
cmp
mov
ljmp
jns
sub
cmp
out
in
daa
lock
cmp
jne
xchg
mov
push
push
sbb
out
and
pop
mov
push
add
pusha
cmp
nop
mov
push
inc
testb
rcrl
mov
jge
dec
sub
inc
or
out
jp
xchg
dec
ljmp
mov
sbb
cmp
je
mov
decb
rorl
cmpb
xchg
insl
sub
pop
out
mul
push
xchg
add
fld
xchg
test
inc
jo
loop
fildl
dec
push
add
lock
push
jno
adc
add
js
out
aas
mov
rcrb
jo
bound
jecxz
mov
bound
rol
jl
cmp
inc
mov
in
fs
and
dec
test
mov
or
push
push
xor
enter
pop
in
insl
rorl
pop
push
imul
popa
imul
cmc
cmp
frstor
adc
lret
inc
mov
jmp
dec
dec
dec
jb
push
push
push
sti
sub
xchg
jmp
xchg
scas
ljmp
shl
out
jge
pop
cltd
jmp
or
ljmp
iret
or
shl
cmpl
int3
adc
daa
or
sti
mov
and
mov
jns
insb
aam
movsl
mov
fidivs
loopne
nop
xchg
das
out
dec
pop
jno
adc
adc
inc
icebp
js
dec
scas
dec
stos
test
or
inc
sub
push
in
rcl
in
mov
ret
jecxz
imul
mov
xchg
cmp
test
stos
addr16
mov
iret
adc
xor
ds
ret
mov
sbb
ret
push
xor
pusha
jne
mov
cltd
outsb
or
xchg
sub
xor
lods
mov
sbb
insl
pop
sbb
ja
lcall
mov
or
or
dec
sti
inc
jmp
cmp
leave
dec
stc
push
in
sub
jnp
and
or
test
and
or
sbbb
cwtl
lods
pop
stos
cmp
stc
ds
stos
ret
lods
aam
cmp
pop
mov
mov
aad
popf
ds
lret
push
pop
daa
jbe
int
decb
push
nop
mov
mov
hlt
pop
sbbb
jb
inc
lahf
bswap
and
dec
int3
push
je
sahf
mov
xor
jle
push
faddl
clc
mov
push
sarl
cld
dec
insl
inc
fs
xchg
cmp
mov
filds
jns
mov
inc
ds
insl
mov
neg
hlt
stos
je
aam
mov
int
jg
nop
jp,pt
push
mov
pop
xlat
jl
stos
mov
in
fbld
aad
das
inc
lods
and
ror
leave
sbb
in
push
rcrb
xchg
outsb
sub
xor
out
bound
pop
pushw
in
bound
test
push
pop
mov
add
icebp
mov
leave
pop
stc
lahf
repz
rcrb
or
sub
das
mov
adc
fistpl
ss
cmp
aaa
adc
dec
mov
pusha
dec
in
daa
push
dec
jp
pop
call
int3
inc
sarl
inc
pop
arpl
pop
mov
inc
les
scas
fadds
add
add
lahf
arpl
mov
mov
add
pop
add
jl
mov
stos
aaa
addr16
xlat
sbb
fs
lcall
loop
cmpsb
pusha
sbb
xchg
cli
xchg
leave
es
xchg
stos
adc
pushf
jns
lods
xlat
mov
dec
xor
stc
fisttps
lret
push
loop
pop
dec
test
adc
imul
test
add
fs
pop
wbinvd
mov
add
pop
pop
mov
icebp
and
mov
test
push
int3
push
dec
sti
add
mov
je
mov
lcall
add
xchg
pop
js
jge
bound
push
xchg
call
xor
or
adc
inc
inc
pop
mov
add
fstl
add
xor
mov
cld
cmp
in
dec
lods
out
outsl
sbb
in
repz
jb
in
mov
dec
mov
mov
scas
lret
dec
shl
mov
push
add
pop
outsl
mov
adc
xchg
xchg
mov
idivl
mov
aad
push
bnd
mov
insb
inc
fstpt
test
sbb
icebp
pop
mov
dec
mov
mov
and
stos
imul
dec
push
sbb
sbb
enter
movsl
into
test
sub
test
sub
xlat
test
push
rdpmc
xchg
xchg
add
or
push
xor
notb
push
repnz
gs
ret
and
jle
dec
mov
ret
sub
test
shrb
enter
xchg
clc
xchg
adcl
roll
stos
jl
jecxz
jl
inc
pop
sub
into
push
mov
pop
cld
int
inc
icebp
xor
mov
adcl
stc
enter
pop
jg
xchg
orb
mov
stos
sahf
into
cmpl
les
daa
mov
fwait
inc
jge
mov
in
or
shll
inc
lcall
mov
cld
xor
rcl
cmc
mov
adc
pop
sbb
orl
jo
sub
jae
xchg
pop
sar
sub
push
sbb
addr16
xor
rolb
jo
push
sbb
cld
arpl
test
mov
ret
adc
xor
pusha
pop
sub
add
jnp
inc
iret
jge
popa
mov
fcomps
pop
jo
and
fs
push
inc
iret
xor
push
mov
mov
leave
je
adc
xchg
test
addr16
sti
pop
test
adc
adc
and
arpl
or
cmp
pop
gs
test
push
cld
jae
pusha
loope
hlt
nop
sbb
sbb
sub
cs
mov
ljmp
in
jge
ret
xchg
into
or
outsb
mov
rcrl
lods
xchg
inc
and
in
jg
pop
or
incl
movsb
or
dec
mov
lahf
add
imul
frstor
in
and
es
and
nopl
pop
enter
jmp
orb
adc
jb
mov
repz
sub
xchg
cmp
adcl
addb
push
dec
sub
stc
iret
mov
mov
adc
xlat
mov
add
test
pop
das
or
jb
mov
outsb
mov
loope
or
scas
or
test
dec
hlt
sahf
inc
ficoml
clc
dec
out
sahf
data16
adc
test
aam
fstpt
enter
add
adcb
cwtl
out
je
push
scas
loopne
in
pop
and
cmc
je
adc
xor
mov
popa
loop
cmp
shrl
mov
add
mov
loopne
pusha
into
gs
lcall
cltd
pop
push
xchg
and
sbb
xchg
fidivrl
mov
es
aam
and
rorl
dec
cltd
outsb
dec
mov
xchg
insb
out
mov
mov
mov
in
pop
jno
scas
add
cmp
and
lret
cld
dec
sbb
mov
jge
imul
and
sbb
bnd
cs
mov
dec
js
inc
ss
jbe
ja
xchg
xchg
pop
lods
cmpsb
sub
cmpsl
add
aam
arpl
popf
ret
aas
mov
push
icebp
hlt
xchg
fdivrl
lds
xor
jecxz
insb
and
mov
push
add
lcall
inc
rcr
mov
fnstenv
cltd
xor
das
cmpsl
rcll
arpl
push
or
or
cmc
pop
push
jb
jmp
and
call
sbb
fmul
add
outsl
jae
repnz
cs
mov
outsl
adc
jl
nop
dec
xchg
xchg
out
inc
cmc
adc
out
inc
popa
imull
inc
scas
jl
jb
outsb
push
dec
loope
mov
movsl
sbb
mov
sbb
mov
hlt
push
and
cmpsl
out
xchg
pop
mov
jae
sbbb
dec
mov
push
fcomi
xlat
shll
loop
aad
fwait
movsb
idiv
pop
cmpsl
and
dec
loopne
fiaddl
rcl
das
loop
aam
xlat
xchg
fs
cs
add
mov
or
cmp
fmuls
adc
mov
pop
dec
inc
jmp
and
outsb
mov
push
fcom
inc
mov
and
loop
aam
inc
add
sahf
stos
xchg
out
leave
inc
ljmp
push
outsl
mov
negl
loopne
jbe
adc
adc
ret
mov
jmp
jae
cltd
test
imul
cmp
jne
int
pop
cmpl
out
and
push
mov
das
arpl
in
leave
mov
leave
adc
mov
jecxz
inc
push
push
mov
lcall
fsubrl
pop
outsb
enter
leave
pop
and
pop
stc
daa
push
ljmp
dec
mov
pop
outsb
fnstcw
insb
add
int3
pop
sbb
rorl
mov
adc
rol
and
fsubrs
and
push
aam
and
xor
ja
fdivl
shll
cs
out
popf
and
cmp
lods
xchg
mov
int3
ret
insb
sub
or
je
xlat
cli
nop
cmp
popf
add
jge
push
mov
mov
sbb
gs
jecxz
add
push
stc
pop
lret
jp
call
adc
cmpsb
adc
push
xchg
mov
push
addr16
icebp
pop
test
inc
mov
dec
jmp
add
sbb
insl
les
mov
jae
pushf
out
mov
pop
add
jp
jne
adc
js
push
ret
jbe
xchg
cli
icebp
inc
sarl
xchg
mov
xor
cs
sbb
dec
mov
jge
and
jne
mov
std
dec
push
pop
mov
mov
inc
or
icebp
lods
jo
mov
stos
lahf
out
scas
aad
test
pushf
dec
add
xlat
sbb
outsb
es
mov
inc
mov
xor
inc
inc
mov
aad
push
outsl
loop
outsb
mov
lret
out
ret
jno
xchg
neg
mov
shrl
adc
negl
jo
dec
inc
jb
jl
je
or
inc
pushf
fstpt
cmp
mov
mov
inc
push
dec
ds
leave
lret
or
cmpl
dec
dec
pusha
adc
sbb
cmpsl
dec
enter
dec
cli
ret
push
dec
sti
repz
xchg
mov
mov
push
and
jecxz
inc
push
mov
in
movsb
xchg
pop
rolb
add
jno
mov
subb
popa
in
adc
cmp
dec
push
lar
fcoms
shrb
sbb
call
shrl
movsb
mov
add
mov
mov
sub
nop
lock
fpatan
push
add
or
add
adc
sbb
mov
mov
imul
push
inc
out
in
test
jp
xor
push
mov
mov
bound
cli
ret
adc
cmp
cmp
xor
pop
sbb
cmp
hlt
leave
xchg
enter
sbb
mov
jo
inc
mov
push
aas
ficompl
xchg
jle
xor
nop
jl
inc
jns
popa
dec
jl
mov
adc
push
hlt
mov
outsl
mov
xchg
call
mov
std
push
lods
test
stc
sbb
inc
subl
imul
mov
mov
mov
sub
inc
divb
cmp
out
fadds
sarb
pop
bound
mov
push
xchg
test
dec
and
adc
cmp
or
push
rcrb
add
xchg
push
loope
and
mov
dec
and
mov
xor
sbb
or
in
neg
leave
movsl
stos
xor
sbb
lea
push
push
xor
ret
into
repz
ss
mov
mov
sbb
xchg
add
stos
jne
inc
enter
inc
mov
cmpsb
out
xor
or
inc
push
pop
push
ret
or
jnp
mov
gs
sbbl
jl
or
cmp
adc
rclb
pusha
inc
mov
pop
mov
push
mov
in
sub
test
cmp
lock
cmp
add
ret
xor
imul
mov
cmpl
mov
fistpll
cmp
push
das
mov
lds
adc
mov
cs
jo
ljmp
roll
int
pop
add
sub
aam
sub
mov
popa
mov
or
movsl
ficoms
aad
les
or
sub
add
das
push
lret
add
sub
fmul
mov
add
pushf
push
mov
mov
test
xchg
mov
inc
pop
ds
ljmp
xor
mov
repnz
xchg
repz
in
lock
pushf
pushf
int
gs
shlb
mov
int
iret
sbb
ret
pop
dec
mov
test
mov
mov
sub
test
push
sbb
fwait
enter
adc
negb
adc
xlat
sti
jns
or
or
inc
test
push
imul
cmpsb
or
stc
cltd
pop
inc
shlb
rcrb
cmp
in
loop
xor
test
mov
fs
fnstsw
adc
stos
xchg
movsb
dec
es
lret
xchg
pop
es
pop
mov
pop
pop
pusha
xchg
xchg
sub
and
fs
nop
or
fsubs
mov
out
sub
cmp
sub
ds
inc
mov
stos
push
fbstp
jne
movsl
jp
dec
pop
out
push
jle
mov
xchg
cli
lret
jecxz
push
or
mov
mov
hlt
cmp
push
and
popw
xchg
jmp
jno
rorb
out
xorl
in
jnp
test
adc
add
loope
push
fs
leave
cmp
sbb
jno
sub
rcll
or
pushl
repnz
loope
imul
xor
into
push
xchg
sub
stos
adc
sti
xchg
leave
loop
adc
push
pop
push
and
imul
mov
jp
dec
sbb
insl
dec
rcrl
sti
adc
lods
ljmp
lock
jmp
xor
sarl
and
pop
scas
xor
clc
pop
xor
rcl
scas
pop
fnstsw
stos
cmp
jae
cmp
jecxz
nop
pop
jbe
fs
mov
xchg
xor
sub
push
movsb
pop
das
addr16
pushf
insl
mov
leave
or
negb
cmpsb
stc
mov
outsb
jmp
mov
dec
jle
mov
jmp
aas
dec
lods
std
inc
jmp
daa
int3
mov
testl
mov
adc
and
dec
mov
lahf
bound
jb
imul
push
ret
jbe
lds
pop
cmp
fwait
jmp
jl
pusha
mov
lods
cmp
mov
jne
and
cltd
mov
jle
dec
jnp
mov
and
nop
dec
or
sbb
push
xor
adc
adc
sahf
pop
add
out
aaa
push
fiaddl
cs
inc
sub
rorl
pop
cmpb
fdivp
pop
pop
cld
sbb
sub
aaa
mov
loop
push
lea
sbb
lret
mov
xor
roll
pop
lcall
mov
add
mov
cld
lods
jbe
pop
xlat
cmp
fdivl
dec
lods
mov
add
loopne
out
pop
jbe
jo
pop
pop
fnstenv
dec
inc
insl
in
addr16
dec
sti
out
out
lahf
push
jmp
cmc
pop
dec
cmpsb
xor
dec
xchg
or
mov
int3
cmp
and
bound
dec
movsb
incl
push
inc
mov
sbb
sub
add
icebp
mov
iret
push
pop
in
adc
sbbl
inc
test
popf
xchg
sbbb
mov
in
idiv
jg
and
fcmovne
cmc
les
add
pop
add
sti
sub
lds
fisubrl
cli
jne
out
jl
adc
dec
jg
jmp
push
inc
call
pop
insl
pop
pop
mov
sub
pop
je
sbb
test
call
mov
loop
add
jg
jmp
push
frndint
pusha
insl
jae
xchg
das
xor
jge
and
add
inc
aaa
push
cmp
push
rclb
popa
sub
mov
loope
add
xlat
inc
int
xchg
xor
or
cs
cs
test
leave
clc
pop
imul
aam
adc
jns
loop
inc
sahf
inc
shrb
add
sbb
rcrb
shlb
mul
outsl
fwait
mov
int
dec
and
mov
imul
rorb
hlt
lret
lcall
enter
int
je
test
xor
xor
hlt
cmp
addr16
sub
lahf
decl
lcall
lea
stc
nop
ret
xchg
cmpsl
push
push
loope
xor
daa
icebp
jb
cmp
mov
mov
test
mov
ja
mov
pop
cwtl
cmp
cld
test
push
stos
repz
lods
pop
scas
stos
push
ljmp
addr16
jnp
add
les
mov
xchg
dec
xchg
mov
clc
stc
mov
xor
xor
imul
outsl
xor
add
cmc
mov
mov
sub
fiaddl
push
les
loopne
sti
cmp
pop
dec
sub
orl
cmp
pop
ljmp
add
and
xchg
call
pop
cmpsl
mov
xor
xchg
test
jne
clc
xchg
in
inc
mov
sbb
mov
aad
lret
lret
xor
mov
loop
sbb
out
test
push
pop
add
sbb
jbe
lret
js
push
addb
int
jge
mov
xchg
pop
push
xor
decb
loope
gs
cmp
and
inc
pop
insb
inc
std
inc
adc
xchg
pop
pop
minps
jnp
mov
int3
fwait
leave
xchg
ja
dec
out
add
sti
push
movsl
dec
or
gs
mov
sub
pop
aam
in
inc
or
push
inc
ret
loope
cmp
xchg
inc
ja
cs
jecxz
rcr
or
mov
jg
mov
popf
xlat
push
pusha
sbb
adc
jle
inc
push
push
jl
mov
arpl
test
movsb
les
nop
xorb
sub
lods
cli
xchg
sbb
repnz
add
inc
inc
jne
mulb
data16
out
cmp
mov
add
add
and
mov
pop
sub
inc
lds
mov
cmp
leave
cwtl
sub
hlt
cmpsb
aad
jb
cmp
test
ljmp
pusha
movsl
cmp
pop
lock
push
pop
mov
xor
dec
cmp
sbb
mov
dec
lods
add
stos
stos
scas
mov
fs
sahf
mov
add
dec
inc
rclb
lock
xor
mov
daa
fimull
lret
clc
jnp
pop
xlat
inc
mov
movsl
testl
adc
add
xorl
loopne
pusha
sbb
std
cmp
lahf
add
ret
and
mov
sahf
sbb
cmpsb
and
gs
mov
les
inc
aas
dec
call
dec
cmp
shlb
inc
pop
inc
xchg
movsl
imul
rclb
cmc
mov
or
sarl
add
daa
lahf
insl
pop
push
sub
imul
mov
out
push
sarb
test
inc
inc
insl
cld
push
mov
pop
adc
outsl
jne
or
or
ljmp
clc
inc
stos
rclb
jmp
fldenv
lds
or
push
hlt
mov
test
xor
sti
push
mov
scas
popa
loope
inc
popa
ja
pusha
and
mov
test
movsl
addr16
xchg
fs
into
std
js
loop
and
adc
mov
fsts
lds
pop
and
repnz
push
daa
mov
cs
scas
shr
sub
out
or
ret
stos
fisttpll
cwtl
js
mov
scas
cmpb
dec
out
cmp
addl
loop
int
push
in
hlt
push
push
aam
cltd
lods
inc
mov
cmpsl
and
inc
dec
and
iret
adc
sub
add
frstor
push
sbb
cmp
or
shll
inc
mov
dec
fxch
xchg
ret
roll
mov
pop
enter
filds
insl
in
testb
out
test
ja
outsb
cmovp
mov
xchg
jbe
add
lcall
mov
pop
push
testl
add
and
inc
enter
inc
push
popa
adc
jns
mov
imul
jmp
cmp
mov
and
loop
fstpt
repnz
repnz
mov
push
mov
mov
jno
inc
subb
pop
arpl
sub
jnp
fidivs
popl
pop
mov
mov
imul
and
xchg
and
in
ss
ret
adc
xor
adc
cmp
cmp
xchg
xor
xor
stos
xor
popf
push
mov
lret
jl
sub
cmc
push
clc
out
xor
jp
push
cmpsl
pop
repz
push
xor
jbe
out
shlb
sbb
fwait
mov
sbb
sahf
repz
pop
pop
mov
inc
adc
xor
out
jbe
inc
ret
mov
pop
idivl
dec
inc
mov
push
in
cmp
or
pushf
xchg
into
cmovs
into
popf
in
jmp
fiadds
jmp
cwtl
jle
inc
mov
inc
mov
xor
xor
pop
adc
jo
sub
sbb
mov
stos
fcomps
sbb
popf
lods
mov
jp
leave
pop
les
pop
mov
xor
pusha
inc
cmp
rolb
stc
mov
outsb
int
sbb
movsb
jno
add
data16
jg
inc
adc
popf
inc
repnz
shl
mov
push
pop
push
and
scas
xor
leave
in
add
mov
mov
stc
out
inc
std
fidivrs
movsb
dec
mov
add
push
pop
add
mov
pusha
je
jmp
mov
push
fdivrs
cli
or
jmp
xorl
xor
push
es
xchg
jg
in
dec
dec
jb
hlt
cmp
sub
jno
outsb
mov
out
sti
jg
or
cmpsb
mov
adc
inc
xor
dec
lret
dec
or
rol
std
xchg
adc
xchg
sub
inc
pop
xchg
cmp
scas
add
and
insl
les
cmc
das
cmpsb
clc
xchg
cmp
or
imul
push
xchg
data16
sub
pop
cltd
call
data16
aam
ficompl
fwait
mov
cmpl
mov
mov
scas
lahf
xchg
and
scas
push
fcomi
shll
in
in
add
enter
pop
jp
jmp
mov
fwait
xor
in
inc
enter
iret
push
push
movsb
and
fstpl
mov
cltd
push
icebp
inc
scas
cmp
cwtl
mov
mov
mov
icebp
cld
dec
nop
xchg
and
outsl
imul
adc
fdivrp
repz
mov
cmp
test
lret
std
or
mov
pop
nop
jb
data16
sub
mov
mov
loopne
das
jb
cld
mov
fcoms
add
mov
xor
mov
jmp
mov
mov
rcrb
pop
mov
xchg
subb
cmp
push
ret
jae
jo
iret
fwait
daa
jb
pushf
push
cmp
dec
notb
lret
icebp
nop
push
leave
or
pop
cmc
xchg
xor
push
add
bound
cmpsl
and
jmp
sbb
in
mov
bound
mov
jae
or
mov
movsb
lock
xlat
imul
pop
test
push
dec
mov
jo
adc
div
adc
mov
mov
fdivr
cli
mov
dec
sti
insb
lret
jbe
adc
pop
xor
inc
and
dec
mov
int3
jae
andb
mov
int3
ljmp
pop
xor
inc
loopne
add
dec
dec
adc
mov
and
or
xchg
icebp
dec
mov
add
loopne
fcoms
sub
add
into
daa
cmp
bound
fadds
ret
pop
add
mov
outsl
xlat
or
pop
in
pusha
in
xor
rolb
jecxz
aam
xchg
dec
imul
mov
mov
push
arpl
out
jne
cmp
sti
shr
in
cmp
xor
sahf
jg
push
mov
push
xor
insl
lcall
repnz
inc
mov
sbb
ss
and
bound
mov
inc
and
cli
xor
and
leave
pop
orl
leave
inc
dec
pop
mov
cmp
sti
xchg
leave
inc
and
icebp
jo
outsl
mov
cmpsb
ret
dec
fs
lret
xchg
mov
mov
sbb
adc
aam
arpl
test
loope
imul
push
enter
dec
inc
jp
push
loope
mov
push
push
lcall
mov
sahf
lods
mov
xchg
push
cltd
mov
sub
xchg
in
cmp
sbb
sub
fs
into
scas
movsl
fcomip
hlt
mov
das
lods
loope
mov
mov
inc
push
shrb
mov
mov
outsb
div
pop
pop
pop
jg
insl
sbb
call
inc
cmpsl
add
addl
loope
mov
out
ss
mov
scas
out
xchg
fsubrs
jge
mov
push
dec
jno
mov
pop
sbb
leave
cmpb
dec
call
nop
jns
pop
je
aas
dec
sbb
or
mov
or
call
inc
call
jg
imul
pop
and
xchg
pop
repz
sub
push
iret
and
or
fs
mov
pop
mov
xchg
jecxz
sbbl
movsl
lock
inc
ror
in
jle
and
mov
jo
xchg
cmp
dec
push
push
stos
xor
dec
add
mov
out
lea
pop
xor
cmp
jle
fwait
cmc
xchg
lea
adcb
lock
xchg
mov
jp
iret
xchg
addr16
aaa
shlb
push
adc
mov
push
xlat
push
sub
and
stos
jb
ret
and
jle
sub
pop
subb
sub
jo
aam
sbb
jecxz
sbb
arpl
xor
shll
scas
jns
test
inc
adc
lods
and
cmp
push
sub
sub
mov
xchg
adc
xor
inc
inc
cmp
lcall
fwait
push
or
jae
xor
outsl
mov
jns
les
or
lahf
push
js
fprem1
lods
jle
loop
les
loop
mov
and
adc
xorl
ljmp
mov
int3
mov
sub
addr16
insl
jne
fmuls
mov
mov
in
push
mov
inc
inc
iret
test
add
aad
test
sub
pushf
xor
add
iret
enter
loope
cmp
pushl
sbb
or
cmpl
xlat
push
xor
popa
adc
inc
subb
xchg
add
mov
sub
leave
enter
cwtl
pushf
add
sbb
adc
cmp
push
inc
aas
mov
add
fsts
push
cmp
data16
xor
cmp
jb
lcall
push
push
push
stos
gs
adc
and
loope
jecxz
push
shrl
ficoms
stc
in
sbb
jo
sbb
ss
xlat
or
in
push
dec
jecxz
lods
adc
lds
fcoms
repz
and
ja
pop
jns
cli
movsl
and
xchg
add
lret
pop
jl
mov
add
xor
mov
lcall
sbb
xor
arpl
jo
imul
push
call
push
inc
adc
lods
mov
dec
int
mov
arpl
jno
ss
cmc
push
jge
xchg
jne
lahf
pop
xchg
icebp
jo
jo
mov
jae
mov
sbb
fnstenv
adc
ljmp
and
or
mov
jno
aaa
addr16
in
adc
sub
push
sti
arpl
mov
scas
out
lret
ja
daa
inc
call
mov
push
pop
add
gs
outsb
add
lahf
lahf
lds
imul
call
ret
data16
jge
mov
mov
out
imul
daa
fildl
mov
test
push
mov
push
icebp
icebp
or
out
adc
lcall
sbb
sub
nop
add
popa
mov
jb
aam
out
push
xchg
out
adc
pop
loop
dec
cmp
pop
cltd
dec
sub
mov
sbb
into
cltd
ss
inc
out
mov
mov
sub
sub
mov
adc
imulb
daa
nop
fmuls
mov
adc
add
leave
lea
cmc
sub
subb
lcall
hlt
xchg
leave
lret
test
jb
out
int3
test
or
cmp
stos
aad
movsb
test
dec
js
cmpb
xchg
adc
push
or
xchg
jnp
add
xchg
mov
jle
lret
pushf
pop
dec
mov
adc
or
inc
cwtl
ds
sub
jae
push
inc
pop
scas
iret
and
mov
xchg
call
push
insb
pop
gs
mov
repz
test
inc
push
adc
into
inc
cmp
ret
adc
mov
sbbb
jecxz
mov
pop
int3
shlb
inc
sbb
je
divb
jbe
test
mov
xchg
rcll
sub
xchg
in
jns
push
test
cli
imul
and
add
pop
push
pop
cmp
jl
xchg
pop
mov
mov
sub
push
pop
inc
mov
push
mov
loope
mov
jge
jle
test
add
pop
outsb
out
push
js
and
insl
mov
or
adc
test
daa
and
mov
pop
inc
nop
inc
lock
add
or
dec
icebp
jae
repnz
or
out
xchg
and
mov
jns
cld
call
fdivrs
mov
mov
push
int
andb
pop
in
xchg
ret
sub
pop
jmp
mov
ret
shrl
rcl
mov
mov
mov
nop
xlat
xchg
test
nop
push
dec
mov
inc
push
or
fidivrs
sti
add
pop
jp
jl
mov
cltd
mov
inc
sub
mov
loop
mov
and
arpl
movsb
sbb
mov
xor
xor
shlb
movsb
cmp
inc
sub
jo
sbb
sbb
fisttpll
xor
cmp
jo
sbb
aas
xor
ja
test
jae
pop
pop
ss
in
push
sbb
pop
mov
add
rorl
or
pushf
loop
mov
out
cmpl
sbb
lret
and
hlt
fs
mov
in
sahf
out
cmp
in
arpl
mov
adc
pop
pop
inc
xchg
enter
iret
call
mov
push
popf
xlat
in
jg
adc
aam
lret
movsl
inc
aas
sti
add
ret
xor
add
inc
cmp
jno
xchg
enter
out
cmp
sub
adc
enter
adc
in
sbb
push
stos
mov
das
lock
or
and
jne
cmp
arpl
outsl
loopne
out
lcall
prefetchnta
and
xor
fs
cmpsb
lds
int
movsb
sahf
dec
add
ret
adc
scas
in
mov
pop
xchg
add
add
jb
ret
and
xchg
dec
sub
sbb
sub
xor
stc
cmp
imull
mov
xchg
cwtl
cmpsl
push
mov
loop
mov
jnp
ror
fldt
add
jbe
aad
popf
loop
xchg
data16
js
movsw
loopne
xchg
lret
sub
roll
xchg
or
pop
push
scas
lods
mov
cmp
xchg
mov
jnp
mov
in
inc
inc
je
fxam
lds
or
ret
mov
cmp
sarl
add
dec
lret
mov
push
pop
testb
aas
sbb
xor
jnp
shll
or
out
stc
test
les
jnp
adc
pop
push
sbb
mov
sub
mov
sbb
lods
rcrl
lds
in
std
mov
sub
inc
xchg
addr16
mov
and
add
mul
fcom
and
xor
popa
sbbb
loope
dec
add
add
push
mov
test
mov
mov
sbb
cmp
movsl
and
int3
orl
mov
pop
gs
rcr
pop
pop
jmp
fwait
aad
std
dec
in
sbb
cmp
addb
or
lret
push
dec
cmove
loopne
dec
mov
nop
sbb
mov
add
ja
mov
hlt
jns
insl
adc
mov
aaa
aad
lahf
clc
jns
jle
jb
mov
cmp
push
call
pop
jne
mov
rep
mov
sub
aaa
add
movsb
and
jg
fisubs
loope
ss
aaa
test
repz
inc
popa
push
clc
mov
shll
xchg
mov
call
push
or
mov
mov
jmp
daa
sar
lahf
xchg
and
push
mov
ljmp
jns
bound
jb
addl
in
in
lods
mov
mov
out
mov
test
cmpsb
int
sbb
cmpsb
lcall
outsb
xchg
pushf
adc
mov
push
aaa
push
jg
push
loop
lcall
dec
or
cmp
dec
and
mov
sbb
pop
aas
fidivrl
shr
xchg
adc
sbb
test
and
sbb
xchg
mulb
jmp
icebp
int3
xchg
into
pop
inc
xchg
pop
xchg
pop
pop
fistpll
adc
cmp
sahf
mov
sbb
imul
and
addr16
fs
mov
stc
icebp
rorb
fwait
bound
xchg
lahf
or
push
cwtl
outsb
or
xor
add
aaa
cld
pop
test
cmc
push
idivl
fcomip
aas
jecxz
mov
addb
mov
popf
test
nop
or
sbb
lret
inc
std
mov
inc
adc
orl
xchg
xorb
pop
pop
popf
sahf
xor
fwait
and
nop
dec
push
insb
lahf
dec
out
mov
enter
sbb
add
add
in
and
aas
fcomip
out
or
and
add
push
pop
add
notl
pop
mov
xor
loope
adc
and
mov
insb
mov
mov
jo
dec
mov
mov
popf
out
push
out
fisubs
cmp
pop
divl
cmpsl
je
jmp
inc
mov
std
pop
pop
cmp
clc
mov
mov
cs
shl
mov
dec
shrl
push
movsb
xlat
cld
lahf
fdivl
mov
lock
call
cs
push
add
int3
jae
pop
test
cmp
xor
loop
xor
inc
fsubs
pop
cmp
jmp
mov
dec
lahf
xchg
or
push
xchg
cwtl
mov
stos
jbe
push
mov
stos
mov
inc
scas
cmp
pop
popa
in
dec
cld
dec
sub
pop
jl
sti
or
sbb
pop
dec
sub
test
fnstsw
xor
pop
fs
popf
std
add
jne
ja
icebp
jns
fbld
loopne
test
and
fdiv
into
lcall
in
push
arpl
push
mov
inc
pop
int
loope
xor
scas
add
xor
sarl
mov
outsl
and
and
enter
clc
shlb
sbb
mov
push
loope
pop
xchg
sbb
or
lods
cwtl
inc
in
adc
arpl
jge
jge
inc
cmp
mov
outsl
fisttps
aaa
push
repnz
dec
loopne
insb
lret
outsb
imull
ja
loope
adc
aam
daa
in
loope
fwait
movsl
stos
mov
push
jns
inc
fcompl
mov
inc
bound
negl
or
enter
mov
cmp
mov
xor
jb
bound
jbe
clc
mov
push
xor
ficoml
cli
or
xor
loop
mov
cmp
push
pop
sub
sbb
push
mov
imul
sti
orl
sub
out
stos
gs
addr16
gs
sub
mov
add
cmp
cld
inc
adc
outsb
fstps
mov
push
sahf
loope
ds
sbb
sub
dec
add
jmp
dec
lds
cmp
xor
aad
sbb
pop
dec
fnstsw
cmp
or
js
mov
lods
jno
pushf
xor
and
sti
lock
cwtl
in
push
std
ljmp
mov
or
cld
jne
outsl
sub
xlat
ljmp
xchg
and
fsubp
cwtl
xchg
lods
mov
lret
dec
imul
cmc
repz
insb
les
sub
and
or
call
and
ss
sbb
loop
popa
int
sub
jno
shl
cwtl
pop
leave
add
mov
mov
adc
inc
xchg
fmuls
jne
roll
leave
xchg
add
repz
fiadds
clc
in
popf
mov
pusha
jns
mov
outsb
test
xchg
lcall
scas
mov
mov
sbb
push
movsb
fbld
fcompl
aaa
xor
jle
add
clc
push
adc
insl
test
fistpl
and
mov
and
sub
xchg
ja
clc
hlt
pop
scas
lods
pop
jl
or
mov
xor
mov
mov
inc
mov
fldt
mov
sbb
jae
inc
xor
cmp
pop
adc
enter
out
xor
sbb
jle
inc
or
or
and
xor
das
std
mov
mov
sub
push
cmc
push
push
and
add
repnz
jecxz
orb
sub
out
pushf
dec
rol
mov
sbb
ljmp
sarl
add
mov
nop
xchg
push
cmp
inc
ss
sub
jecxz
lahf
inc
push
cwtl
inc
bound
xor
cmp
adc
adc
pop
and
bound
mov
ss
cmp
push
dec
pop
pusha
hlt
scas
push
pop
loope
push
stos
rorl
xchg
movsl
pop
mov
adc
ds
add
or
std
dec
push
loop
sti
shr
out
jmp
dec
mov
scas
pop
imul
enter
mov
sbb
arpl
and
push
pop
cmc
enter
pop
add
insl
sbb
cld
fdivs
jl
insb
popf
jns
or
push
and
mov
push
mov
insb
sub
ljmp
inc
scas
stc
pushf
cmp
dec
push
inc
outsl
dec
roll
andl
mov
push
push
lcall
mov
daa
push
mov
repnz
push
aad
insb
mov
fs
mov
pop
push
lods
aam
jmp
int3
mov
or
push
daa
jb
sbb
movsl
adc
shl
in
pop
pop
xor
lret
inc
and
fbld
sub
ss
enter
pop
ret
movsb
test
loopne
rcr
mov
shl
push
mov
cmp
sbb
pop
cld
inc
je
mov
add
ror
dec
lahf
and
test
sbb
es
and
leave
pop
lea
mov
xchg
adc
pxor
mov
push
shlb
xor
dec
adc
repz
ds
push
cmp
loop
stc
mov
lea
stos
mov
or
in
mov
gs
sbb
lds
xlat
into
mov
mov
xchg
pop
push
dec
or
mov
adc
sbb
call
fdivrs
or
and
mov
out
cmpsl
dec
test
and
add
cmp
mov
lock
push
push
in
js
test
in
adc
dec
sbb
xor
xchg
fdivrl
lahf
cmc
aas
dec
mov
inc
fnsave
or
aad
or
or
cmp
and
ret
aam
mov
sub
loopne
xchg
aas
test
xchg
adc
je
cmp
sub
or
loope
or
lock
addr16
loop
jp
mov
nop
in
mov
dec
and
sub
insb
xor
jle
jge
pop
inc
das
jae
js
jns
and
mov
xchg
aam
sarb
sbb
insl
and
inc
fisttpl
or
add
and
push
mov
pop
std
inc
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
mov
xlat
lea
xchg
mov
add
push
pop
add
shl
mov
std
int3
sahf
addr16
mov
imul
inc
jno
jb
lds
jne
add
outsb
sbb
popa
ficompl
fdivrl
jo
xor
inc
std
xchg
push
sbb
jge
ret
shlb
ds
push
or
mov
ja
or
idivl
fsubl
mov
les
loop
cmp
movsb
adc
aaa
cli
enter
xchg
imul
mov
lret
stos
int3
mov
call
mov
push
sbb
int
jne
vpaddd
aad
adc
sbb
ja
mov
bound
aas
jnp
mulb
rcll
adc
stos
or
icebp
jp
aaa
mov
int
rorb
hlt
push
popa
pop
loope
mov
mov
push
jne
shl
jle
push
mov
add
xor
lds
test
js
lret
les
push
sbb
int3
mov
insb
fistl
outsl
xchg
push
js
rorl
cltd
mov
jle
out
adc
test
mov
mov
adc
mov
fldl
mov
xchg
jo
adc
movsl
test
test
ret
out
add
jp
dec
mov
pop
popa
aam
jb
inc
mov
clc
adc
loopne
push
jg
adc
jbe
test
add
lcall
jnp
jne
pop
dec
call
sub
test
jne
mov
jle
mov
hlt
mov
sahf
lods
lods
adc
xchg
cmp
dec
pop
pop
adc
enter
mov
adc
cmp
jns
arpl
nop
jge
jbe
mov
or
mov
adc
fldt
push
addl
adc
lret
mov
jmp
ret
sub
jecxz
sbb
sbb
inc
pop
aam
cmp
sub
dec
pop
adc
inc
jb
faddl
inc
dec
test
push
inc
jns
pop
sub
xchg
sbb
cmpl
pop
and
scas
int3
cli
mov
mov
lds
es
pop
cwtl
mov
enter
add
insl
nop
xor
cmp
repnz
and
lcall
mov
or
shr
fisttps
lods
add
jne
in
jg
inc
lods
inc
jbe
lods
sub
sub
clc
jo
push
jp
sub
test
data16
push
test
iret
ss
in
scas
jno
lods
ljmp
sahf
rcll
es
pop
insl
and
dec
inc
std
pop
and
fsubrl
stos
mov
dec
test
cld
mov
les
mov
and
stos
cmp
lcall
ja
sbb
int3
adc
cli
mov
mov
mov
mov
enter
cmp
cli
call
mov
andb
dec
inc
add
dec
xor
dec
inc
jno
or
cwtl
sbb
sbb
pushf
aam
lret
loopne
stc
push
mov
das
dec
dec
aam
sti
lss
lock
sub
repnz
mov
shll
ret
cmp
cmp
xchg
in
std
sub
int
add
ds
icebp
mov
dec
out
jbe
jge
jp
cmc
subb
sub
xchg
out
lds
fstpl
adc
cmpsl
repz
mov
inc
stos
mov
push
ret
push
mov
lock
je
pop
pop
mov
adc
or
test
pop
and
push
mov
mov
mov
dec
lock
mov
fs
rcl
mov
sar
push
into
loope
push
inc
pop
mov
mov
sarl
or
scas
fs
nop
dec
push
mov
sub
mov
lret
into
add
inc
pop
das
pop
cmp
mov
xor
pop
mov
push
aad
aam
dec
insl
imul
imul
loop
aad
xchg
out
push
push
addr16
sbb
dec
insb
inc
int3
jb
cmpsl
adc
xor
dec
push
inc
push
jnp
cmpsb
and
mov
scas
fsubl
jmp
sub
sub
pop
call
sbbl
xchg
sbb
xchg
std
mov
test
loope
jo
and
addr16
popa
jns
mov
jmp
aam
mov
test
lret
adc
jns
jle
testl
test
stc
and
dec
call
lcall
xchg
mov
gs
or
and
mov
pop
cmp
pop
jecxz
mov
xchg
xor
jo
mov
xchg
das
clc
stc
mov
push
jg
dec
int
pop
sub
aad
out
lock
cli
push
in
ret
and
mov
sbb
jno
add
or
pop
sbb
jg
lret
aam
jae
daa
testl
fs
fadds
mov
in
adc
fidivl
inc
aam
mov
inc
rcll
xlat
and
adc
add
sub
ja
cmp
pusha
gs
outsb
jmp
push
cli
and
xchg
inc
inc
mov
into
mov
cmpsb
push
mov
in
pop
into
in
add
mov
popf
jns
xchg
ret
inc
mov
push
mov
sarl
add
in
in
iret
les
add
popa
out
adc
dec
js
fwait
rclb
mov
mov
mov
scas
test
jno
iret
cmc
out
inc
mov
imul
mov
add
out
mov
pop
mov
pop
add
leave
dec
cmpl
or
and
mov
mov
outsb
mov
push
dec
pop
mov
mov
xor
addb
cmpsb
lods
mov
adc
stos
int
adcb
out
enter
loopne
cmp
jae
xor
push
dec
jne
sub
sub
lret
or
cmp
cmpsl
xchg
popf
push
pushf
aaa
pop
mov
and
dec
shll
js
mov
or
push
jmp
out
aaa
test
cmp
loop
test
stc
std
outsb
cli
jecxz
mov
jge
lds
pop
or
daa
in
fstl
imul
int
insl
fbstp
push
and
sahf
lods
xchg
mov
fwait
movsl
add
insl
mov
cmp
add
jg
stos
mov
jbe
pop
adc
add
pop
add
loop
jg
mov
pop
fcomps
cmp
repnz
and
sbb
out
outsl
mov
into
adcl
xor
mov
add
sbb
fdivrp
cmp
jp
test
mov
adc
and
lret
cmpsl
sbb
add
inc
add
jno
loope
inc
mov
jl
lods
mov
test
and
leave
lods
mov
stos
push
je
mov
outsl
jg
cltd
jbe
sbb
pusha
push
pop
push
fs
cltd
addb
push
jmp
cmpsb
push
test
popf
stos
lret
movsl
vunpckhps
pop
ds
lret
dec
hlt
rcrb
daa
mov
iret
xor
lret
and
jg
xchg
or
mov
cs
jmp
xchg
pop
sub
xchg
incl
cmpsl
add
inc
icebp
or
push
dec
int3
or
push
xor
push
ja
pusha
stc
mov
cwtl
shrl
push
arpl
and
push
push
jge
fcom
pop
mov
test
or
or
sub
fsub
xor
into
and
cmc
in
dec
insl
jae
pop
sub
outsl
stc
jae
cmpsl
or
idiv
cmpsb
popa
fwait
sti
stos
push
out
mov
outsl
push
jne
bound
lods
push
push
xor
xchg
xchg
jle
xchg
mov
rdmsr
xlat
jmp
lods
ljmp
pop
cmpsb
fwait
add
dec
cli
mov
data16
sahf
out
outsb
cmovae
cmp
pop
sbb
cmp
or
and
scas
mov
roll
or
xchg
test
shr
jecxz
sbb
loopne
xor
daa
mov
xchg
cld
por
mov
jb
and
or
ds
in
fsubrl
inc
or
icebp
movsb
dec
lahf
mul
pop
arpl
in
adc
xchg
lcall
adc
add
push
push
test
inc
ljmp
pop
push
movsb
pop
xor
adc
in
adc
cmp
or
jno
or
push
xchg
mov
pop
adcb
dec
pop
xchg
dec
adc
gs
inc
movhps
jnp
ljmp
xchg
fists
shl
popl
ficoms
repnz
dec
lret
mov
jle
in
mov
mov
dec
mov
pusha
pop
sahf
add
rorl
push
mov
loop
mov
loopne
ja
sub
aaa
cmc
lahf
dec
hlt
lret
push
fstpt
add
aas
jns
jnp
cmp
push
cmp
dec
sti
xchg
inc
mov
scas
shrl
mov
mov
cmpps
xchg
mov
gs
popa
or
mov
dec
popf
loope
js
mov
sbb
xchg
incl
loop
push
lret
aaa
in
push
dec
fadds
and
js
xor
mov
add
cli
scas
leave
and
lcall
mov
leave
mov
cmp
mov
daa
fiadds
fisubs
daa
jb
in
clc
lcall
pop
xor
cmp
xchg
cwtl
jo
cmc
inc
adc
lahf
imul
xor
out
icebp
mov
out
push
xor
jp
jb
or
test
fwait
mov
xchg
pop
and
mov
ljmp
sub
lods
lcall
sti
inc
add
dec
int
dec
ret
out
sub
push
movb
lods
js
adc
lock
daa
andps
ja
les
roll
or
lods
jecxz
iret
fdiv
mov
pop
cli
sti
cmp
gs
xor
leave
stos
inc
lods
movsb
jns
es
push
jg
sbb
les
pop
mov
sub
pop
or
xor
cs
pop
jne
or
xchg
dec
xchg
aas
addr16
bound
or
push
call
cmp
push
in
add
xor
pop
jge
jnp
repz
jle
or
icebp
xchg
outsl
or
ja
sub
pop
sbb
andb
cmp
mov
fcoms
cmp
decl
and
stos
je
inc
xor
pop
mov
hlt
xchg
add
ja
out
xor
mov
jbe
add
dec
mov
stos
push
rolb
mov
and
loope
js
xlat
mov
sti
sbb
fcomps
push
orl
jo
pop
insl
pop
ja
cld
arpl
test
sbb
jns
jns
call
and
jne
mov
ds
leave
enter
fdivrl
xchg
or
add
jp
jp
and
or
fsub
arpl
jp
stc
pushf
xor
push
incb
test
lret
sub
jge
int
jmp
and
mov
mov
xor
and
mov
test
adc
arpl
dec
stc
mov
mov
ret
dec
cmc
ficomps
ffreep
sub
cmp
repnz
mov
fs
push
icebp
inc
fld
add
iret
sahf
and
fldt
gs
ret
scas
imul
add
jecxz
fwait
cmpsb
and
sub
push
test
mov
mov
lock
dec
ficomps
loop
cmp
add
jg
clc
jmp
add
je
jb
shr
inc
dec
pop
adc
inc
pop
in
mov
out
dec
out
dec
jle
or
adc
fwait
mov
test
pop
cs
ss
outsb
bound
cs
push
cmp
repnz
pushf
loopne
test
cmpsl
push
and
dec
mov
outsb
mov
cltd
mov
xlat
push
cmp
repz
or
fucom
push
rorb
ret
cmp
arpl
ds
mov
movsl
in
xchg
iret
fstpt
mov
fcomip
mov
cli
fsubs
lcall
pop
push
jge
lock
and
imul
lock
jl
pop
xor
sbb
es
iret
xor
inc
mov
sub
push
lods
mov
arpl
or
mov
inc
mov
hlt
mov
aaa
or
and
lret
add
push
arpl
loopne
and
sti
lret
in
add
mov
daa
mov
inc
jmp
jg
dec
lods
clc
cli
pcmpeqw
add
sbb
out
cmp
repnz
mov
jg
sbb
add
pop
add
psubsb
lods
xor
mov
jmp
daa
mov
icebp
sub
xor
imul
outsb
mov
mov
lods
dec
out
lahf
jecxz
sbb
rorl
ret
xchg
addb
icebp
jg
es
cmp
into
mov
dec
addl
pop
mov
test
jns
sbb
ss
jg
mov
in
push
push
push
mov
cmp
ficompl
dec
xor
cmp
xor
adc
sarb
push
cs
or
jp
sub
mov
xor
adc
scas
test
pushf
mov
hlt
sbb
xor
out
fimull
inc
jle
les
dec
xchg
enter
or
fisubs
fstps
jo
cmp
jno
jb
push
inc
sub
pop
push
into
xchg
std
dec
inc
call
fiaddl
cltd
pop
jo
cmp
fstl
adc
or
aaa
loopne
mov
cmc
pop
fsubs
cmp
in
jmp
in
mov
outsl
push
cld
mov
adc
cmp
jbe
rcll
inc
mov
outsl
jge
lcall
into
jb
gs
dec
and
adc
sub
push
lret
in
jno
scas
and
mov
inc
and
xor
sub
or
ficoms
test
int
xor
mov
in
ja
adcl
lcall
cmp
xor
testl
test
cmp
fwait
arpl
push
das
push
mov
bound
mov
sbb
adc
inc
push
cli
test
fnstsw
mov
leave
inc
mov
lods
sub
push
int
lret
cmp
xchg
popf
pop
xchg
add
push
jo
add
out
out
lret
sub
mov
fimuls
fwait
iret
inc
inc
les
push
js
jo
dec
pop
lods
jmp
inc
repnz
ret
mov
mov
fdivrs
les
cmp
aaa
pop
arpl
out
mov
mov
or
fs
gs
inc
mov
pop
mov
mov
mov
outsb
push
pop
inc
xchg
cs
pushf
jmp
js
test
pusha
pop
inc
cmp
add
lahf
ds
je
lahf
mov
imul
ja
aas
pop
or
std
sub
sub
dec
mov
mov
out
fadd
shlb
mov
imul
lret
mov
sub
mov
adc
inc
fisttpl
out
sbb
jle
int
jg
sub
andl
push
ljmp
jb
xchg
adc
stos
jno
and
fistpl
xchg
mov
data16
data16
sub
pushf
jle
movsb
inc
lahf
adc
aam
ret
pop
shll
mov
adc
push
loop
xlat
pusha
xchg
push
js
out
sbb
add
cld
aas
lret
pusha
movsl
xchg
cmp
push
lcall
in
subl
cltd
jecxz
sbb
jae
notb
les
adc
cmc
mov
lcall
popa
out
ja
mov
mov
out
and
and
or
ret
cmp
and
adc
fwait
es
cltd
mov
xchg
and
push
fmuls
enter
fcomps
xchg
lods
jns
fsub
cltd
and
testl
or
cld
repnz
push
mov
in
cld
negl
cmp
inc
aad
add
enter
rcl
sbb
sbb
rcr
les
pushl
popa
and
test
adc
pop
push
decl
and
push
cld
enter
lret
mov
or
cmpsb
cmc
dec
cmp
dec
jp
xchg
sub
xor
adc
lahf
test
jge
ja
lods
and
adc
loope
jbe
je
lock
push
pop
fstl
inc
xchg
cmpsl
mov
pop
jnp
test
fisubrs
cmp
mov
ret
xchg
add
xchg
arpl
push
xor
and
xor
add
aam
add
nop
pop
push
rcll
gs
insl
pop
inc
ss
jns
sbb
sub
loopne
pop
es
or
out
cmp
iret
fbld
nop
jmp
ja
sarb
sbb
scas
jae
adc
clc
mov
dec
popf
xchg
and
cmp
ja
nop
pop
jnp
data16
or
movsb
dec
mov
xchg
mov
data16
lock
mov
push
sbb
ljmp
fidivrs
ret
repz
push
repz
xor
inc
pop
xchg
sbb
cmc
mov
sarl
iret
mov
push
mov
xchg
push
or
mov
outsb
mov
out
push
sahf
mov
rcr
adc
xorl
inc
and
add
mov
loopne
aas
rep
das
push
ss
test
mov
int
sbb
cmp
dec
scas
pop
aas
lock
cld
cmpsb
out
stos
imul
cmpsl
imul
lret
mov
sbb
inc
leave
push
mov
xchg
xchg
setae
pop
repnz
movsb
in
xchg
sbb
xchg
push
in
xor
mov
mov
add
xchg
mov
xor
cmpsb
mov
pop
push
mov
lret
movsl
mov
addr16
ljmp
jo
enter
addl
push
mov
mov
shll
sbbb
jl
icebp
mov
testl
cmp
hlt
add
cmp
mov
lock
mov
fcomps
push
cli
sub
fisttpl
fstpt
pop
dec
xlat
mov
jl
loop
inc
xchg
jns
pop
aad
ret
push
out
xchg
inc
shrl
jne
ss
pop
jb
lcall
outsl
clc
cs
lock
jb
daa
xchg
xor
inc
lea
jno
or
dec
mov
push
fdivrs
xor
in
push
cli
pop
inc
icebp
addr16
popa
pop
pop
andb
je
aam
inc
add
jae
jmp
pusha
sub
in
mov
inc
gs
repnz
ret
imul
jecxz
fistl
call
push
mov
orb
lea
cmp
mov
adc
mov
test
or
mov
add
or
mov
mov
andl
aad
pusha
cld
jne
mov
and
add
pop
add
in
and
sbb
adc
pop
arpl
mov
and
int
insb
int
jle
jo
sub
mov
aas
imul
add
ret
outsl
je
mov
mov
repnz
lcall
imul
ds
dec
jl
xor
lods
aad
push
sub
outsl
sbb
adc
in
xchg
or
gs
mov
xor
divl
popa
pop
jb
fdivl
out
pop
inc
sbb
pusha
xor
mov
jno
fimuls
fwait
mov
orl
sahf
mov
fdivrs
dec
stos
pop
cmpsb
add
jmp
mov
xor
negl
mov
or
pop
lea
aaa
ja
push
aad
fidivl
data16
sub
dec
fcmovu
mov
cmp
xchg
mov
repz
int3
push
sbb
push
loope
ficoms
adc
fwait
or
add
dec
mov
pop
test
jecxz
sbb
mov
das
push
ds
sbb
xchg
push
sbb
int
pop
jnp
pop
cld
cli
dec
das
mov
loopne
pop
sbb
sbb
xor
inc
xchg
dec
xchg
sub
negb
push
int3
insl
inc
xchg
push
aas
das
ret
mov
test
rcl
xchg
mov
imul
and
int3
je
lret
ds
into
adc
inc
sub
cld
stos
sahf
insl
push
out
fcompl
xor
dec
lahf
es
dec
mov
or
xor
lret
imul
mov
movsb
int3
je
inc
fistl
scas
xchg
jecxz
pusha
shl
stc
aad
dec
dec
sbb
popf
das
mov
into
mov
daa
push
adc
inc
inc
lret
fcoms
stos
pop
fwait
xchg
or
das
stos
adcb
cmp
adc
push
cs
mov
fbstp
aad
cmp
push
dec
fnsave
dec
adc
cs
push
inc
cs
aaa
sbb
inc
loop
repz
cmp
push
stos
fidivl
jl
popl
adc
push
aam
loopne
sub
rolb
xchg
jb
aad
and
aad
mov
sbb
imul
adc
jg
xchg
push
outsl
push
xchg
addl
and
cwtl
cmp
in
int
jecxz
dec
inc
sub
dec
xor
movsb
add
shlb
shll
into
pusha
pusha
mov
jne
dec
cmp
imul
clc
sbb
cmp
mov
push
cmp
lock
adc
sbb
call
dec
add
xor
xor
insl
clc
movsl
cld
aas
negb
mov
outsb
stos
jle
xor
mov
mov
lods
cmpsb
push
mov
cmpsb
push
sbb
jmp
loopne
aaa
js
cmp
and
in
cltd
loop
sbb
das
xor
sub
or
jl
loope
mov
sub
pop
sub
addb
lcall
leave
imull
pop
and
dec
inc
dec
mov
loope
adc
pusha
and
xorb
sbb
xchg
mov
pop
mov
push
aad
jg
sbb
cmc
aad
lret
push
cli
idivl
addb
dec
movsl
cli
pop
pop
ret
or
les
sub
cmp
pop
mov
pop
xchg
sub
out
and
cmpb
mov
jmp
cmpsl
fisubl
test
ficompl
lea
unpcklps
nop
mov
and
stos
adc
insl
sbb
call
mov
das
repz
cmp
pop
outsb
in
sub
out
add
add
test
aas
adc
pop
sub
jmp
stos
imul
loopne
pop
adc
ja
push
push
xchg
pop
test
mov
in
xchg
subb
outsb
fistps
dec
or
mov
xorb
pushf
xchg
ds
or
xchg
mov
imul
mov
pop
xchg
insb
jle
stos
jb
daa
cmp
imull
out
outsl
fsubrl
scas
push
xor
mov
fwait
mov
adc
and
pop
ss
xlat
mov
sahf
sti
lock
jmp
addr16
adc
leave
jo
out
jle
mov
aam
jg
fsts
test
pop
or
into
mov
jbe
mov
jmp
sbb
pop
cmp
mov
pop
cmpsl
lea
aas
sbb
clc
and
xchg
pop
cmp
je
jge
xor
dec
mov
fisubrl
shlb
mov
dec
repnz
sbb
sbb
lods
xchg
inc
loopne
add
push
in
jmp
push
pop
pop
in
pop
xor
iret
push
pop
lret
pusha
adc
dec
jmp
inc
sub
out
cld
push
pop
fildll
arpl
add
mov
mov
mov
out
xchg
sbb
gs
lds
mov
jb
sbb
adc
jne
xchg
rolb
bound
out
test
movsb
stos
push
xchg
addr16
or
pop
les
inc
mov
adc
cmc
sbb
push
jno
push
mov
xor
loope
mov
lcall
add
dec
cmp
pop
push
negl
dec
xor
mov
inc
mov
arpl
popl
jbe
incb
mov
push
out
ret
test
or
pop
movd
mov
or
jmp
out
push
inc
cltd
jmp
in
push
icebp
lock
cmp
call
cmp
in
fwait
out
repnz
mov
mov
sub
xor
pop
inc
repz
les
pop
pop
jae
dec
lret
mov
mov
and
pop
roll
mov
shrb
adc
or
int3
fnstenv
mov
sbb
ja
mov
and
xchg
aaa
mov
jne
push
mov
dec
and
mov
push
pop
and
add
jae
lock
ret
mov
push
shrb
add
add
test
dec
push
and
jge
loopne
mov
mov
ficoms
lods
fsubrl
xor
and
add
mov
mov
popa
sub
add
pop
add
fstpt
adc
sub
movsl
movsl
mov
adc
std
inc
xchg
xchg
push
push
jnp
mov
fstl
sbb
stos
cld
into
mov
cli
clc
loopne
push
xchg
mov
ljmp
mov
pop
jecxz
fnstenv
mov
mov
inc
sti
adc
inc
lods
xor
in
pop
ljmp
adc
sub
dec
adc
in
clc
test
push
in
xchg
mov
addr16
inc
test
sbb
jno
inc
popa
or
cld
pop
cmp
or
jl
addr16
cld
pop
int
adc
mov
mov
popf
mov
incb
js
cmpsb
xor
ljmp
mov
jno
add
or
or
xchg
fidivrl
mov
xor
mov
jmp
cmp
xor
stos
mov
push
loopne
jecxz
mov
xor
mov
out
fldl
das
into
out
andb
cs
mov
cmp
push
sub
pop
push
movsb
mov
lahf
lret
xor
ja
loope
jle
adc
dec
repz
out
enter
and
popf
js
xchg
fstl
push
pushf
sbb
add
ret
sub
sub
pop
mov
in
sub
cmpb
jecxz
ret
sub
push
mov
int
sbb
sbb
jo
and
sub
mov
lcall
cld
aaa
lea
push
add
repz
cmp
jo
xor
mov
int3
inc
adc
xor
cmp
icebp
jo
shl
int3
jl
push
inc
mov
lds
insb
fsts
push
jg
scas
test
scas
int
jae
add
bound
jl
sahf
mov
fists
jbe
or
inc
insb
dec
mov
lcall
in
add
add
mov
sbbl
lds
bnd
call
in
sbb
sbb
into
push
call
mov
xchg
sbb
popf
fst
imull
aaa
notb
cmp
repz
sbb
jecxz
xor
sti
mov
sub
lods
lret
leave
cwtl
int
mov
dec
pop
ret
sub
int3
mov
dec
mov
jecxz
inc
or
mov
mov
dec
inc
mov
sub
fcmovnbe
push
mov
jle
loop
into
inc
notl
pop
xchg
aad
jae
jmp
xchg
cmp
pushf
mov
cmpsl
loopne
push
and
xor
lock
push
pop
jmp
jns
mov
scas
loope
das
mov
gs
mov
xor
mov
insb
jmp
pop
mov
pop
test
adc
cmpsl
inc
out
jbe
aas
stos
mov
jecxz
xchg
dec
push
ss
dec
mov
imul
ss
cli
shrl
jmp
lods
neg
jae
or
roll
dec
lods
cmpsl
mov
or
in
call
jge
mov
icebp
in
dec
gs
jns
imul
and
inc
movsl
jo
xchg
pop
fcmovnb
repz
sbb
das
push
push
pop
or
out
mov
push
mov
cmp
mov
push
decb
test
lea
sbb
dec
sbb
jo
popf
insb
out
shl
sbb
fiadds
shll
in
jns
fstp
mov
xchg
dec
cmp
cld
out
imul
in
jo
fucomp
insl
sub
cmp
cld
rep
cld
fsubrl
cmp
and
or
pop
dec
out
lcall
mov
pop
inc
or
negl
ret
adc
ret
xchg
jecxz
addr16
out
insl
cmp
mov
pop
loope
lds
fwait
adc
mov
fstps
pop
cmp
psubusb
test
outsl
leave
pushf
cwtl
jecxz
push
enter
mov
push
daa
imul
cli
out
repz
std
cmpsl
test
jae
mov
sub
dec
inc
cmpsl
xchg
lcall
push
lcall
cmp
or
lret
icebp
jae
subl
jnp
push
js
push
pop
cld
ret
inc
and
mov
xchg
push
xor
repz
lcall
les
repnz
and
inc
vcvttps2dq
xchg
in
cmp
push
dec
xchg
and
out
sub
jnp
jge
scas
jo
enter
fidivrl
push
and
pop
xchg
xchg
jle
pop
bound
in
pusha
sahf
or
ret
mov
clc
xor
fwait
loope
sub
pop
xor
inc
pop
adc
pop
stos
stos
aas
cs
out
in
scas
aaa
and
mov
cli
inc
and
mov
stos
shrb
dec
sarl
in
mov
pop
sahf
out
lret
and
dec
cld
es
cmp
pop
push
addr16
out
rcr
cmp
ss
mov
stos
gs
loop
adc
inc
and
mov
add
xlat
lcall
xlat
dec
inc
adc
pop
movsl
xlat
sub
data16
bound
cmp
mov
iret
mov
int3
jnp
dec
xchg
cmp
mov
jg
bnd
roll
popa
cmp
imul
xor
xchg
jo
pop
lods
ljmp
xchg
pop
dec
xor
push
dec
mov
insl
sub
cmp
clc
mov
add
adc
outsl
call
mov
insb
out
cmp
rcrl
sbb
dec
mov
std
cmp
testl
cltd
push
or
dec
xor
int3
jmp
adc
out
loope
or
adc
and
pop
loopne
lret
cmp
mov
sub
fistpll
fstl
xor
push
mov
loope
mov
push
loope
mov
cmpsb
mov
and
sbb
mov
jle
cwtl
cwtl
les
jg
pop
mul
das
inc
in
and
mov
aam
add
jae
mov
aad
in
addr16
divl
or
mov
push
les
or
push
mov
xor
xchg
jae
mov
int
fistps
push
cmp
inc
shlb
mov
cli
xchg
lea
mov
xor
push
popa
pop
jecxz
lahf
pop
xchg
fidivs
mov
add
add
add
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
popa
xor
imul
jne
jns
add
add
add
sbb
sbb
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
jo
add
add
add
mov
cmp
cmp
cmp
mov
add
in
ss
ss
ss
add
add
or
